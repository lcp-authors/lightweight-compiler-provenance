
ubuntu-preinstalled/btrfs-select-super:     file format elf32-littlearm


Disassembly of section .init:

00008520 <.init>:
    8520:	push	{r3, lr}
    8524:	bl	8d80 <_start@@Base+0x48>
    8528:	pop	{r3, pc}

Disassembly of section .plt:

0000852c <calloc@plt-0x14>:
    852c:	push	{lr}		; (str lr, [sp, #-4]!)
    8530:	ldr	lr, [pc, #4]	; 853c <calloc@plt-0x4>
    8534:	add	lr, pc, lr
    8538:	ldr	pc, [lr, #8]!
    853c:	andeq	ip, r5, r0, asr r8

00008540 <calloc@plt>:
    8540:			; <UNDEFINED> instruction: 0xe7fd4778
    8544:	add	ip, pc, #0, 12
    8548:	add	ip, ip, #92, 20	; 0x5c000
    854c:	ldr	pc, [ip, #2124]!	; 0x84c

00008550 <raise@plt>:
    8550:	add	ip, pc, #0, 12
    8554:	add	ip, ip, #92, 20	; 0x5c000
    8558:	ldr	pc, [ip, #2116]!	; 0x844

0000855c <fsync@plt>:
    855c:	add	ip, pc, #0, 12
    8560:	add	ip, ip, #92, 20	; 0x5c000
    8564:	ldr	pc, [ip, #2108]!	; 0x83c

00008568 <strcmp@plt>:
    8568:	add	ip, pc, #0, 12
    856c:	add	ip, ip, #92, 20	; 0x5c000
    8570:	ldr	pc, [ip, #2100]!	; 0x834

00008574 <__cxa_finalize@plt>:
    8574:	add	ip, pc, #0, 12
    8578:	add	ip, ip, #92, 20	; 0x5c000
    857c:	ldr	pc, [ip, #2092]!	; 0x82c

00008580 <uuid_unparse@plt>:
    8580:	add	ip, pc, #0, 12
    8584:	add	ip, ip, #92, 20	; 0x5c000
    8588:	ldr	pc, [ip, #2084]!	; 0x824

0000858c <posix_fadvise64@plt>:
    858c:	add	ip, pc, #0, 12
    8590:	add	ip, ip, #92, 20	; 0x5c000
    8594:	ldr	pc, [ip, #2076]!	; 0x81c

00008598 <blkid_probe_lookup_value@plt>:
    8598:	add	ip, pc, #0, 12
    859c:	add	ip, ip, #92, 20	; 0x5c000
    85a0:	ldr	pc, [ip, #2068]!	; 0x814

000085a4 <read@plt>:
    85a4:	add	ip, pc, #0, 12
    85a8:	add	ip, ip, #92, 20	; 0x5c000
    85ac:	ldr	pc, [ip, #2060]!	; 0x80c

000085b0 <fflush@plt>:
    85b0:	add	ip, pc, #0, 12
    85b4:	add	ip, ip, #92, 20	; 0x5c000
    85b8:	ldr	pc, [ip, #2052]!	; 0x804

000085bc <unlinkat@plt>:
    85bc:	add	ip, pc, #0, 12
    85c0:	add	ip, ip, #92, 20	; 0x5c000
    85c4:	ldr	pc, [ip, #2044]!	; 0x7fc

000085c8 <memmove@plt>:
    85c8:			; <UNDEFINED> instruction: 0xe7fd4778
    85cc:	add	ip, pc, #0, 12
    85d0:	add	ip, ip, #92, 20	; 0x5c000
    85d4:	ldr	pc, [ip, #2032]!	; 0x7f0

000085d8 <free@plt>:
    85d8:			; <UNDEFINED> instruction: 0xe7fd4778
    85dc:	add	ip, pc, #0, 12
    85e0:	add	ip, ip, #92, 20	; 0x5c000
    85e4:	ldr	pc, [ip, #2020]!	; 0x7e4

000085e8 <fgets@plt>:
    85e8:	add	ip, pc, #0, 12
    85ec:	add	ip, ip, #92, 20	; 0x5c000
    85f0:	ldr	pc, [ip, #2012]!	; 0x7dc

000085f4 <fgetxattr@plt>:
    85f4:	add	ip, pc, #0, 12
    85f8:	add	ip, ip, #92, 20	; 0x5c000
    85fc:	ldr	pc, [ip, #2004]!	; 0x7d4

00008600 <statfs@plt>:
    8600:	add	ip, pc, #0, 12
    8604:	add	ip, ip, #92, 20	; 0x5c000
    8608:	ldr	pc, [ip, #1996]!	; 0x7cc

0000860c <strndup@plt>:
    860c:	add	ip, pc, #0, 12
    8610:	add	ip, ip, #92, 20	; 0x5c000
    8614:	ldr	pc, [ip, #1988]!	; 0x7c4

00008618 <__vsnprintf_chk@plt>:
    8618:	add	ip, pc, #0, 12
    861c:	add	ip, ip, #92, 20	; 0x5c000
    8620:	ldr	pc, [ip, #1980]!	; 0x7bc

00008624 <memcpy@plt>:
    8624:			; <UNDEFINED> instruction: 0xe7fd4778
    8628:	add	ip, pc, #0, 12
    862c:	add	ip, ip, #92, 20	; 0x5c000
    8630:	ldr	pc, [ip, #1968]!	; 0x7b0

00008634 <__memset_chk@plt>:
    8634:	add	ip, pc, #0, 12
    8638:	add	ip, ip, #92, 20	; 0x5c000
    863c:	ldr	pc, [ip, #1960]!	; 0x7a8

00008640 <time@plt>:
    8640:	add	ip, pc, #0, 12
    8644:	add	ip, ip, #92, 20	; 0x5c000
    8648:	ldr	pc, [ip, #1952]!	; 0x7a0

0000864c <memcmp@plt>:
    864c:			; <UNDEFINED> instruction: 0xe7fd4778
    8650:	add	ip, pc, #0, 12
    8654:	add	ip, ip, #92, 20	; 0x5c000
    8658:	ldr	pc, [ip, #1940]!	; 0x794

0000865c <__vprintf_chk@plt>:
    865c:	add	ip, pc, #0, 12
    8660:	add	ip, ip, #92, 20	; 0x5c000
    8664:	ldr	pc, [ip, #1932]!	; 0x78c

00008668 <jrand48@plt>:
    8668:			; <UNDEFINED> instruction: 0xe7fd4778
    866c:	add	ip, pc, #0, 12
    8670:	add	ip, ip, #92, 20	; 0x5c000
    8674:	ldr	pc, [ip, #1920]!	; 0x780

00008678 <blkid_put_cache@plt>:
    8678:	add	ip, pc, #0, 12
    867c:	add	ip, ip, #92, 20	; 0x5c000
    8680:	ldr	pc, [ip, #1912]!	; 0x778

00008684 <uname@plt>:
    8684:	add	ip, pc, #0, 12
    8688:	add	ip, ip, #92, 20	; 0x5c000
    868c:	ldr	pc, [ip, #1904]!	; 0x770

00008690 <blkid_probe_set_device@plt>:
    8690:	add	ip, pc, #0, 12
    8694:	add	ip, ip, #92, 20	; 0x5c000
    8698:	ldr	pc, [ip, #1896]!	; 0x768

0000869c <strdup@plt>:
    869c:			; <UNDEFINED> instruction: 0xe7fd4778
    86a0:	add	ip, pc, #0, 12
    86a4:	add	ip, ip, #92, 20	; 0x5c000
    86a8:	ldr	pc, [ip, #1884]!	; 0x75c

000086ac <openat@plt>:
    86ac:	add	ip, pc, #0, 12
    86b0:	add	ip, ip, #92, 20	; 0x5c000
    86b4:	ldr	pc, [ip, #1876]!	; 0x754

000086b8 <__stack_chk_fail@plt>:
    86b8:	add	ip, pc, #0, 12
    86bc:	add	ip, ip, #92, 20	; 0x5c000
    86c0:	ldr	pc, [ip, #1868]!	; 0x74c

000086c4 <blkid_dev_iterate_begin@plt>:
    86c4:	add	ip, pc, #0, 12
    86c8:	add	ip, ip, #92, 20	; 0x5c000
    86cc:	ldr	pc, [ip, #1860]!	; 0x744

000086d0 <realloc@plt>:
    86d0:			; <UNDEFINED> instruction: 0xe7fd4778
    86d4:	add	ip, pc, #0, 12
    86d8:	add	ip, ip, #92, 20	; 0x5c000
    86dc:	ldr	pc, [ip, #1848]!	; 0x738

000086e0 <localtime_r@plt>:
    86e0:	add	ip, pc, #0, 12
    86e4:	add	ip, ip, #92, 20	; 0x5c000
    86e8:	ldr	pc, [ip, #1840]!	; 0x730

000086ec <uuid_compare@plt>:
    86ec:	add	ip, pc, #0, 12
    86f0:	add	ip, ip, #92, 20	; 0x5c000
    86f4:	ldr	pc, [ip, #1832]!	; 0x728

000086f8 <strcasecmp@plt>:
    86f8:	add	ip, pc, #0, 12
    86fc:	add	ip, ip, #92, 20	; 0x5c000
    8700:	ldr	pc, [ip, #1824]!	; 0x720

00008704 <geteuid@plt>:
    8704:	add	ip, pc, #0, 12
    8708:	add	ip, ip, #92, 20	; 0x5c000
    870c:	ldr	pc, [ip, #1816]!	; 0x718

00008710 <perror@plt>:
    8710:	add	ip, pc, #0, 12
    8714:	add	ip, ip, #92, 20	; 0x5c000
    8718:	ldr	pc, [ip, #1808]!	; 0x710

0000871c <__xstat@plt>:
    871c:			; <UNDEFINED> instruction: 0xe7fd4778
    8720:	add	ip, pc, #0, 12
    8724:	add	ip, ip, #92, 20	; 0x5c000
    8728:	ldr	pc, [ip, #1796]!	; 0x704

0000872c <blkid_dev_set_search@plt>:
    872c:	add	ip, pc, #0, 12
    8730:	add	ip, ip, #92, 20	; 0x5c000
    8734:	ldr	pc, [ip, #1788]!	; 0x6fc

00008738 <__fxstat64@plt>:
    8738:			; <UNDEFINED> instruction: 0xe7fd4778
    873c:	add	ip, pc, #0, 12
    8740:	add	ip, ip, #92, 20	; 0x5c000
    8744:	ldr	pc, [ip, #1776]!	; 0x6f0

00008748 <__memcpy_chk@plt>:
    8748:	add	ip, pc, #0, 12
    874c:	add	ip, ip, #92, 20	; 0x5c000
    8750:	ldr	pc, [ip, #1768]!	; 0x6e8

00008754 <strcat@plt>:
    8754:			; <UNDEFINED> instruction: 0xe7fd4778
    8758:	add	ip, pc, #0, 12
    875c:	add	ip, ip, #92, 20	; 0x5c000
    8760:	ldr	pc, [ip, #1756]!	; 0x6dc

00008764 <ioctl@plt>:
    8764:	add	ip, pc, #0, 12
    8768:	add	ip, ip, #92, 20	; 0x5c000
    876c:	ldr	pc, [ip, #1748]!	; 0x6d4

00008770 <lseek64@plt>:
    8770:	add	ip, pc, #0, 12
    8774:	add	ip, ip, #92, 20	; 0x5c000
    8778:	ldr	pc, [ip, #1740]!	; 0x6cc

0000877c <strtoll@plt>:
    877c:	add	ip, pc, #0, 12
    8780:	add	ip, ip, #92, 20	; 0x5c000
    8784:	ldr	pc, [ip, #1732]!	; 0x6c4

00008788 <__realpath_chk@plt>:
    8788:	add	ip, pc, #0, 12
    878c:	add	ip, ip, #92, 20	; 0x5c000
    8790:	ldr	pc, [ip, #1724]!	; 0x6bc

00008794 <readahead@plt>:
    8794:	add	ip, pc, #0, 12
    8798:	add	ip, ip, #92, 20	; 0x5c000
    879c:	ldr	pc, [ip, #1716]!	; 0x6b4

000087a0 <strcpy@plt>:
    87a0:	add	ip, pc, #0, 12
    87a4:	add	ip, ip, #92, 20	; 0x5c000
    87a8:	ldr	pc, [ip, #1708]!	; 0x6ac

000087ac <gettimeofday@plt>:
    87ac:	add	ip, pc, #0, 12
    87b0:	add	ip, ip, #92, 20	; 0x5c000
    87b4:	ldr	pc, [ip, #1700]!	; 0x6a4

000087b8 <pread64@plt>:
    87b8:	add	ip, pc, #0, 12
    87bc:	add	ip, ip, #92, 20	; 0x5c000
    87c0:	ldr	pc, [ip, #1692]!	; 0x69c

000087c4 <pthread_create@plt>:
    87c4:	add	ip, pc, #0, 12
    87c8:	add	ip, ip, #92, 20	; 0x5c000
    87cc:	ldr	pc, [ip, #1684]!	; 0x694

000087d0 <strtok_r@plt>:
    87d0:	add	ip, pc, #0, 12
    87d4:	add	ip, ip, #92, 20	; 0x5c000
    87d8:	ldr	pc, [ip, #1676]!	; 0x68c

000087dc <getmntent@plt>:
    87dc:	add	ip, pc, #0, 12
    87e0:	add	ip, ip, #92, 20	; 0x5c000
    87e4:	ldr	pc, [ip, #1668]!	; 0x684

000087e8 <opendir@plt>:
    87e8:	add	ip, pc, #0, 12
    87ec:	add	ip, ip, #92, 20	; 0x5c000
    87f0:	ldr	pc, [ip, #1660]!	; 0x67c

000087f4 <open64@plt>:
    87f4:	add	ip, pc, #0, 12
    87f8:	add	ip, ip, #92, 20	; 0x5c000
    87fc:	ldr	pc, [ip, #1652]!	; 0x674

00008800 <puts@plt>:
    8800:			; <UNDEFINED> instruction: 0xe7fd4778
    8804:	add	ip, pc, #0, 12
    8808:	add	ip, ip, #92, 20	; 0x5c000
    880c:	ldr	pc, [ip, #1640]!	; 0x668

00008810 <sysinfo@plt>:
    8810:	add	ip, pc, #0, 12
    8814:	add	ip, ip, #92, 20	; 0x5c000
    8818:	ldr	pc, [ip, #1632]!	; 0x660

0000881c <malloc@plt>:
    881c:			; <UNDEFINED> instruction: 0xe7fd4778
    8820:	add	ip, pc, #0, 12
    8824:	add	ip, ip, #92, 20	; 0x5c000
    8828:	ldr	pc, [ip, #1620]!	; 0x654

0000882c <__libc_start_main@plt>:
    882c:	add	ip, pc, #0, 12
    8830:	add	ip, ip, #92, 20	; 0x5c000
    8834:	ldr	pc, [ip, #1612]!	; 0x64c

00008838 <strerror@plt>:
    8838:	add	ip, pc, #0, 12
    883c:	add	ip, ip, #92, 20	; 0x5c000
    8840:	ldr	pc, [ip, #1604]!	; 0x644

00008844 <__fxstat@plt>:
    8844:			; <UNDEFINED> instruction: 0xe7fd4778
    8848:	add	ip, pc, #0, 12
    884c:	add	ip, ip, #92, 20	; 0x5c000
    8850:	ldr	pc, [ip, #1592]!	; 0x638

00008854 <strftime@plt>:
    8854:	add	ip, pc, #0, 12
    8858:	add	ip, ip, #92, 20	; 0x5c000
    885c:	ldr	pc, [ip, #1584]!	; 0x630

00008860 <__vfprintf_chk@plt>:
    8860:	add	ip, pc, #0, 12
    8864:	add	ip, ip, #92, 20	; 0x5c000
    8868:	ldr	pc, [ip, #1576]!	; 0x628

0000886c <backtrace@plt>:
    886c:	add	ip, pc, #0, 12
    8870:	add	ip, ip, #92, 20	; 0x5c000
    8874:	ldr	pc, [ip, #1568]!	; 0x620

00008878 <blkid_dev_next@plt>:
    8878:	add	ip, pc, #0, 12
    887c:	add	ip, ip, #92, 20	; 0x5c000
    8880:	ldr	pc, [ip, #1560]!	; 0x618

00008884 <blkid_verify@plt>:
    8884:	add	ip, pc, #0, 12
    8888:	add	ip, ip, #92, 20	; 0x5c000
    888c:	ldr	pc, [ip, #1552]!	; 0x610

00008890 <__ctype_tolower_loc@plt>:
    8890:	add	ip, pc, #0, 12
    8894:	add	ip, ip, #92, 20	; 0x5c000
    8898:	ldr	pc, [ip, #1544]!	; 0x608

0000889c <__gmon_start__@plt>:
    889c:	add	ip, pc, #0, 12
    88a0:	add	ip, ip, #92, 20	; 0x5c000
    88a4:	ldr	pc, [ip, #1536]!	; 0x600

000088a8 <open@plt>:
    88a8:	add	ip, pc, #0, 12
    88ac:	add	ip, ip, #92, 20	; 0x5c000
    88b0:	ldr	pc, [ip, #1528]!	; 0x5f8

000088b4 <timerfd_create@plt>:
    88b4:	add	ip, pc, #0, 12
    88b8:	add	ip, ip, #92, 20	; 0x5c000
    88bc:	ldr	pc, [ip, #1520]!	; 0x5f0

000088c0 <getopt_long@plt>:
    88c0:	add	ip, pc, #0, 12
    88c4:	add	ip, ip, #92, 20	; 0x5c000
    88c8:	ldr	pc, [ip, #1512]!	; 0x5e8

000088cc <__ctype_b_loc@plt>:
    88cc:	add	ip, pc, #0, 12
    88d0:	add	ip, ip, #92, 20	; 0x5c000
    88d4:	ldr	pc, [ip, #1504]!	; 0x5e0

000088d8 <getpid@plt>:
    88d8:	add	ip, pc, #0, 12
    88dc:	add	ip, ip, #92, 20	; 0x5c000
    88e0:	ldr	pc, [ip, #1496]!	; 0x5d8

000088e4 <exit@plt>:
    88e4:	add	ip, pc, #0, 12
    88e8:	add	ip, ip, #92, 20	; 0x5c000
    88ec:	ldr	pc, [ip, #1488]!	; 0x5d0

000088f0 <strlen@plt>:
    88f0:	add	ip, pc, #0, 12
    88f4:	add	ip, ip, #92, 20	; 0x5c000
    88f8:	ldr	pc, [ip, #1480]!	; 0x5c8

000088fc <strchr@plt>:
    88fc:	add	ip, pc, #0, 12
    8900:	add	ip, ip, #92, 20	; 0x5c000
    8904:	ldr	pc, [ip, #1472]!	; 0x5c0

00008908 <openat64@plt>:
    8908:	add	ip, pc, #0, 12
    890c:	add	ip, ip, #92, 20	; 0x5c000
    8910:	ldr	pc, [ip, #1464]!	; 0x5b8

00008914 <memrchr@plt>:
    8914:	add	ip, pc, #0, 12
    8918:	add	ip, ip, #92, 20	; 0x5c000
    891c:	ldr	pc, [ip, #1456]!	; 0x5b0

00008920 <getopt@plt>:
    8920:	add	ip, pc, #0, 12
    8924:	add	ip, ip, #92, 20	; 0x5c000
    8928:	ldr	pc, [ip, #1448]!	; 0x5a8

0000892c <__open64_2@plt>:
    892c:	add	ip, pc, #0, 12
    8930:	add	ip, ip, #92, 20	; 0x5c000
    8934:	ldr	pc, [ip, #1440]!	; 0x5a0

00008938 <__errno_location@plt>:
    8938:	add	ip, pc, #0, 12
    893c:	add	ip, ip, #92, 20	; 0x5c000
    8940:	ldr	pc, [ip, #1432]!	; 0x598

00008944 <__strcat_chk@plt>:
    8944:	add	ip, pc, #0, 12
    8948:	add	ip, ip, #92, 20	; 0x5c000
    894c:	ldr	pc, [ip, #1424]!	; 0x590

00008950 <__sprintf_chk@plt>:
    8950:	add	ip, pc, #0, 12
    8954:	add	ip, ip, #92, 20	; 0x5c000
    8958:	ldr	pc, [ip, #1416]!	; 0x588

0000895c <blkid_new_probe@plt>:
    895c:	add	ip, pc, #0, 12
    8960:	add	ip, ip, #92, 20	; 0x5c000
    8964:	ldr	pc, [ip, #1408]!	; 0x580

00008968 <uuid_is_null@plt>:
    8968:	add	ip, pc, #0, 12
    896c:	add	ip, ip, #92, 20	; 0x5c000
    8970:	ldr	pc, [ip, #1400]!	; 0x578

00008974 <memset@plt>:
    8974:			; <UNDEFINED> instruction: 0xe7fd4778
    8978:	add	ip, pc, #0, 12
    897c:	add	ip, ip, #92, 20	; 0x5c000
    8980:	ldr	pc, [ip, #1388]!	; 0x56c

00008984 <putchar@plt>:
    8984:			; <UNDEFINED> instruction: 0xe7fd4778
    8988:	add	ip, pc, #0, 12
    898c:	add	ip, ip, #92, 20	; 0x5c000
    8990:	ldr	pc, [ip, #1376]!	; 0x560

00008994 <strncpy@plt>:
    8994:	add	ip, pc, #0, 12
    8998:	add	ip, ip, #92, 20	; 0x5c000
    899c:	ldr	pc, [ip, #1368]!	; 0x558

000089a0 <pthread_cancel@plt>:
    89a0:	add	ip, pc, #0, 12
    89a4:	add	ip, ip, #92, 20	; 0x5c000
    89a8:	ldr	pc, [ip, #1360]!	; 0x550

000089ac <fscanf@plt>:
    89ac:	add	ip, pc, #0, 12
    89b0:	add	ip, ip, #92, 20	; 0x5c000
    89b4:	ldr	pc, [ip, #1352]!	; 0x548

000089b8 <strtoull@plt>:
    89b8:	add	ip, pc, #0, 12
    89bc:	add	ip, ip, #92, 20	; 0x5c000
    89c0:	ldr	pc, [ip, #1344]!	; 0x540

000089c4 <fsetxattr@plt>:
    89c4:	add	ip, pc, #0, 12
    89c8:	add	ip, ip, #92, 20	; 0x5c000
    89cc:	ldr	pc, [ip, #1336]!	; 0x538

000089d0 <blkid_dev_iterate_end@plt>:
    89d0:	add	ip, pc, #0, 12
    89d4:	add	ip, ip, #92, 20	; 0x5c000
    89d8:	ldr	pc, [ip, #1328]!	; 0x530

000089dc <pwrite64@plt>:
    89dc:	add	ip, pc, #0, 12
    89e0:	add	ip, ip, #92, 20	; 0x5c000
    89e4:	ldr	pc, [ip, #1320]!	; 0x528

000089e8 <__printf_chk@plt>:
    89e8:			; <UNDEFINED> instruction: 0xe7fd4778
    89ec:	add	ip, pc, #0, 12
    89f0:	add	ip, ip, #92, 20	; 0x5c000
    89f4:	ldr	pc, [ip, #1308]!	; 0x51c

000089f8 <fstatfs@plt>:
    89f8:	add	ip, pc, #0, 12
    89fc:	add	ip, ip, #92, 20	; 0x5c000
    8a00:	ldr	pc, [ip, #1300]!	; 0x514

00008a04 <uuid_generate@plt>:
    8a04:	add	ip, pc, #0, 12
    8a08:	add	ip, ip, #92, 20	; 0x5c000
    8a0c:	ldr	pc, [ip, #1292]!	; 0x50c

00008a10 <__fprintf_chk@plt>:
    8a10:			; <UNDEFINED> instruction: 0xe7fd4778
    8a14:	add	ip, pc, #0, 12
    8a18:	add	ip, ip, #92, 20	; 0x5c000
    8a1c:	ldr	pc, [ip, #1280]!	; 0x500

00008a20 <access@plt>:
    8a20:	add	ip, pc, #0, 12
    8a24:	add	ip, ip, #92, 20	; 0x5c000
    8a28:	ldr	pc, [ip, #1272]!	; 0x4f8

00008a2c <fclose@plt>:
    8a2c:	add	ip, pc, #0, 12
    8a30:	add	ip, ip, #92, 20	; 0x5c000
    8a34:	ldr	pc, [ip, #1264]!	; 0x4f0

00008a38 <endmntent@plt>:
    8a38:	add	ip, pc, #0, 12
    8a3c:	add	ip, ip, #92, 20	; 0x5c000
    8a40:	ldr	pc, [ip, #1256]!	; 0x4e8

00008a44 <strtok@plt>:
    8a44:	add	ip, pc, #0, 12
    8a48:	add	ip, ip, #92, 20	; 0x5c000
    8a4c:	ldr	pc, [ip, #1248]!	; 0x4e0

00008a50 <blkid_free_probe@plt>:
    8a50:	add	ip, pc, #0, 12
    8a54:	add	ip, ip, #92, 20	; 0x5c000
    8a58:	ldr	pc, [ip, #1240]!	; 0x4d8

00008a5c <strrchr@plt>:
    8a5c:	add	ip, pc, #0, 12
    8a60:	add	ip, ip, #92, 20	; 0x5c000
    8a64:	ldr	pc, [ip, #1232]!	; 0x4d0

00008a68 <pthread_join@plt>:
    8a68:	add	ip, pc, #0, 12
    8a6c:	add	ip, ip, #92, 20	; 0x5c000
    8a70:	ldr	pc, [ip, #1224]!	; 0x4c8

00008a74 <statfs64@plt>:
    8a74:	add	ip, pc, #0, 12
    8a78:	add	ip, ip, #92, 20	; 0x5c000
    8a7c:	ldr	pc, [ip, #1216]!	; 0x4c0

00008a80 <fputc@plt>:
    8a80:			; <UNDEFINED> instruction: 0xe7fd4778
    8a84:	add	ip, pc, #0, 12
    8a88:	add	ip, ip, #92, 20	; 0x5c000
    8a8c:	ldr	pc, [ip, #1204]!	; 0x4b4

00008a90 <timerfd_settime@plt>:
    8a90:	add	ip, pc, #0, 12
    8a94:	add	ip, ip, #92, 20	; 0x5c000
    8a98:	ldr	pc, [ip, #1196]!	; 0x4ac

00008a9c <dirfd@plt>:
    8a9c:	add	ip, pc, #0, 12
    8aa0:	add	ip, ip, #92, 20	; 0x5c000
    8aa4:	ldr	pc, [ip, #1188]!	; 0x4a4

00008aa8 <getppid@plt>:
    8aa8:	add	ip, pc, #0, 12
    8aac:	add	ip, ip, #92, 20	; 0x5c000
    8ab0:	ldr	pc, [ip, #1180]!	; 0x49c

00008ab4 <atoi@plt>:
    8ab4:	add	ip, pc, #0, 12
    8ab8:	add	ip, ip, #92, 20	; 0x5c000
    8abc:	ldr	pc, [ip, #1172]!	; 0x494

00008ac0 <blkid_dev_devname@plt>:
    8ac0:	add	ip, pc, #0, 12
    8ac4:	add	ip, ip, #92, 20	; 0x5c000
    8ac8:	ldr	pc, [ip, #1164]!	; 0x48c

00008acc <fopen64@plt>:
    8acc:	add	ip, pc, #0, 12
    8ad0:	add	ip, ip, #92, 20	; 0x5c000
    8ad4:	ldr	pc, [ip, #1156]!	; 0x484

00008ad8 <setmntent@plt>:
    8ad8:	add	ip, pc, #0, 12
    8adc:	add	ip, ip, #92, 20	; 0x5c000
    8ae0:	ldr	pc, [ip, #1148]!	; 0x47c

00008ae4 <__tls_get_addr@plt>:
    8ae4:	add	ip, pc, #0, 12
    8ae8:	add	ip, ip, #92, 20	; 0x5c000
    8aec:	ldr	pc, [ip, #1140]!	; 0x474

00008af0 <strncat@plt>:
    8af0:	add	ip, pc, #0, 12
    8af4:	add	ip, ip, #92, 20	; 0x5c000
    8af8:	ldr	pc, [ip, #1132]!	; 0x46c

00008afc <__xstat64@plt>:
    8afc:			; <UNDEFINED> instruction: 0xe7fd4778
    8b00:	add	ip, pc, #0, 12
    8b04:	add	ip, ip, #92, 20	; 0x5c000
    8b08:	ldr	pc, [ip, #1120]!	; 0x460

00008b0c <blkid_get_cache@plt>:
    8b0c:	add	ip, pc, #0, 12
    8b10:	add	ip, ip, #92, 20	; 0x5c000
    8b14:	ldr	pc, [ip, #1112]!	; 0x458

00008b18 <fputs@plt>:
    8b18:			; <UNDEFINED> instruction: 0xe7fd4778
    8b1c:	add	ip, pc, #0, 12
    8b20:	add	ip, ip, #92, 20	; 0x5c000
    8b24:	ldr	pc, [ip, #1100]!	; 0x44c

00008b28 <strncmp@plt>:
    8b28:	add	ip, pc, #0, 12
    8b2c:	add	ip, ip, #92, 20	; 0x5c000
    8b30:	ldr	pc, [ip, #1092]!	; 0x444

00008b34 <abort@plt>:
    8b34:	add	ip, pc, #0, 12
    8b38:	add	ip, ip, #92, 20	; 0x5c000
    8b3c:	ldr	pc, [ip, #1084]!	; 0x43c

00008b40 <realpath@plt>:
    8b40:	add	ip, pc, #0, 12
    8b44:	add	ip, ip, #92, 20	; 0x5c000
    8b48:	ldr	pc, [ip, #1076]!	; 0x434

00008b4c <close@plt>:
    8b4c:	add	ip, pc, #0, 12
    8b50:	add	ip, ip, #92, 20	; 0x5c000
    8b54:	ldr	pc, [ip, #1068]!	; 0x42c

00008b58 <blkid_probe_all@plt>:
    8b58:	add	ip, pc, #0, 12
    8b5c:	add	ip, ip, #92, 20	; 0x5c000
    8b60:	ldr	pc, [ip, #1060]!	; 0x424

00008b64 <closedir@plt>:
    8b64:	add	ip, pc, #0, 12
    8b68:	add	ip, ip, #92, 20	; 0x5c000
    8b6c:	ldr	pc, [ip, #1052]!	; 0x41c

00008b70 <__snprintf_chk@plt>:
    8b70:	add	ip, pc, #0, 12
    8b74:	add	ip, ip, #92, 20	; 0x5c000
    8b78:	ldr	pc, [ip, #1044]!	; 0x414

00008b7c <backtrace_symbols_fd@plt>:
    8b7c:	add	ip, pc, #0, 12
    8b80:	add	ip, ip, #92, 20	; 0x5c000
    8b84:	ldr	pc, [ip, #1036]!	; 0x40c

00008b88 <__assert_fail@plt>:
    8b88:	add	ip, pc, #0, 12
    8b8c:	add	ip, ip, #92, 20	; 0x5c000
    8b90:	ldr	pc, [ip, #1028]!	; 0x404

Disassembly of section .text:

00008b98 <main@@Base>:
    8b98:	ldr	r2, [pc, #368]	; (8d0c <main@@Base+0x174>)
    8b9a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b9e:	add	r2, pc
    8ba0:	ldr.w	r8, [pc, #364]	; 8d10 <main@@Base+0x178>
    8ba4:	movs	r4, #0
    8ba6:	movs	r5, #0
    8ba8:	sub	sp, #20
    8baa:	mov	sl, r0
    8bac:	mov	r9, r1
    8bae:	mov	r6, r4
    8bb0:	mov	r7, r5
    8bb2:	mov.w	fp, #16384	; 0x4000
    8bb6:	add	r8, pc
    8bb8:	mov	r1, r9
    8bba:	mov	r0, sl
    8bbc:	str	r2, [sp, #12]
    8bbe:	blx	8920 <getopt@plt>
    8bc2:	cmp	r0, #0
    8bc4:	blt.n	8c26 <main@@Base+0x8e>
    8bc6:	cmp	r0, #115	; 0x73
    8bc8:	bne.n	8c5a <main@@Base+0xc2>
    8bca:	ldr	r3, [pc, #328]	; (8d14 <main@@Base+0x17c>)
    8bcc:	ldr.w	r3, [r8, r3]
    8bd0:	ldr	r0, [r3, #0]
    8bd2:	bl	176e4 <arg_strtou64@@Base>
    8bd6:	ldr	r2, [sp, #12]
    8bd8:	cmp	r1, #0
    8bda:	mov	r6, r0
    8bdc:	it	eq
    8bde:	cmpeq	r0, #3
    8be0:	mov	r7, r1
    8be2:	bcc.n	8c06 <main@@Base+0x6e>
    8be4:	ldr	r3, [pc, #304]	; (8d18 <main@@Base+0x180>)
    8be6:	movs	r1, #1
    8be8:	ldr	r2, [pc, #304]	; (8d1c <main@@Base+0x184>)
    8bea:	ldr.w	r0, [r8, r3]
    8bee:	add	r2, pc
    8bf0:	movs	r3, #3
    8bf2:	ldr	r0, [r0, #0]
    8bf4:	blx	8a14 <__fprintf_chk@plt+0x4>
    8bf8:	movs	r0, #1
    8bfa:	blx	88e4 <exit@plt>
    8bfe:	mov.w	r4, #65536	; 0x10000
    8c02:	movs	r5, #0
    8c04:	b.n	8bb8 <main@@Base+0x20>
    8c06:	cmp	r0, #0
    8c08:	beq.n	8bfe <main@@Base+0x66>
    8c0a:	movs	r3, #12
    8c0c:	muls	r3, r0
    8c0e:	sub.w	r0, r3, #32
    8c12:	rsb	r1, r3, #32
    8c16:	lsl.w	r5, fp, r0
    8c1a:	lsr.w	r1, fp, r1
    8c1e:	orrs	r5, r1
    8c20:	lsl.w	r4, fp, r3
    8c24:	b.n	8bb8 <main@@Base+0x20>
    8c26:	mov	r0, r9
    8c28:	bl	1068c <set_argv0@@Base>
    8c2c:	ldr	r3, [pc, #240]	; (8d20 <main@@Base+0x188>)
    8c2e:	movs	r1, #1
    8c30:	ldr.w	fp, [r8, r3]
    8c34:	ldr.w	r0, [fp]
    8c38:	sub.w	r0, sl, r0
    8c3c:	bl	106ac <check_argc_exact@@Base>
    8c40:	cmp	r0, #0
    8c42:	bne.n	8ccc <main@@Base+0x134>
    8c44:	orrs.w	r3, r4, r5
    8c48:	bne.n	8c5e <main@@Base+0xc6>
    8c4a:	ldr	r3, [pc, #204]	; (8d18 <main@@Base+0x180>)
    8c4c:	ldr	r0, [pc, #212]	; (8d24 <main@@Base+0x18c>)
    8c4e:	ldr.w	r3, [r8, r3]
    8c52:	add	r0, pc
    8c54:	ldr	r1, [r3, #0]
    8c56:	blx	8b1c <fputs@plt+0x4>
    8c5a:	bl	12308 <get_partition_size@@Base+0x64>
    8c5e:	bl	15c4e <radix_tree_init@@Base>
    8c62:	ldr.w	r3, [fp]
    8c66:	ldr.w	r0, [r9, r3, lsl #2]
    8c6a:	bl	301f8 <check_mounted@@Base>
    8c6e:	subs.w	sl, r0, #0
    8c72:	bge.n	8c8e <main@@Base+0xf6>
    8c74:	blx	8938 <__errno_location@plt>
    8c78:	rsb	r3, sl, #0
    8c7c:	str	r3, [r0, #0]
    8c7e:	ldr	r0, [pc, #168]	; (8d28 <main@@Base+0x190>)
    8c80:	add	r0, pc
    8c82:	bl	17424 <__btrfs_error@@Base>
    8c86:	mov	r0, sl
    8c88:	add	sp, #20
    8c8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8c8e:	ldr.w	r3, [fp]
    8c92:	ldr.w	r1, [r9, r3, lsl #2]
    8c96:	beq.n	8ca6 <main@@Base+0x10e>
    8c98:	ldr	r0, [pc, #144]	; (8d2c <main@@Base+0x194>)
    8c9a:	mvn.w	sl, #15
    8c9e:	add	r0, pc
    8ca0:	bl	17424 <__btrfs_error@@Base>
    8ca4:	b.n	8c86 <main@@Base+0xee>
    8ca6:	mov.w	fp, #1
    8caa:	mov	r2, r4
    8cac:	mov	r3, r5
    8cae:	mov	r0, r1
    8cb0:	str.w	fp, [sp]
    8cb4:	bl	1e294 <open_ctree@@Base>
    8cb8:	mov	r9, r0
    8cba:	cbnz	r0, 8cd2 <main@@Base+0x13a>
    8cbc:	ldr	r3, [pc, #88]	; (8d18 <main@@Base+0x180>)
    8cbe:	ldr	r0, [pc, #112]	; (8d30 <main@@Base+0x198>)
    8cc0:	ldr.w	r3, [r8, r3]
    8cc4:	add	r0, pc
    8cc6:	ldr	r1, [r3, #0]
    8cc8:	blx	8b1c <fputs@plt+0x4>
    8ccc:	mov.w	sl, #1
    8cd0:	b.n	8c86 <main@@Base+0xee>
    8cd2:	ldr.w	r3, [r0, #464]	; 0x1d0
    8cd6:	movs	r1, #0
    8cd8:	mov.w	r0, #65536	; 0x10000
    8cdc:	strd	r0, r1, [r3, #320]	; 0x140
    8ce0:	ldr.w	r0, [r9, #464]	; 0x1d0
    8ce4:	bl	1ce7c <write_all_supers@@Base>
    8ce8:	ldr	r1, [pc, #72]	; (8d34 <main@@Base+0x19c>)
    8cea:	mov	r2, r6
    8cec:	mov	r3, r7
    8cee:	add	r1, pc
    8cf0:	strd	r4, r5, [sp]
    8cf4:	mov	sl, r0
    8cf6:	mov	r0, fp
    8cf8:	blx	89ec <__printf_chk@plt+0x4>
    8cfc:	ldr.w	r0, [r9, #464]	; 0x1d0
    8d00:	bl	1d334 <close_ctree_fs_info@@Base>
    8d04:	bl	27fa8 <btrfs_close_all_devices@@Base>
    8d08:	b.n	8c86 <main@@Base+0xee>
    8d0a:	nop
    8d0c:	add	r3, sp, #712	; 0x2c8
    8d0e:	movs	r4, r0
    8d10:	stmia	r1!, {r1, r4, r6, r7}
    8d12:	movs	r5, r0
    8d14:	lsls	r0, r6, #9
    8d16:	movs	r0, r0
    8d18:	lsls	r4, r6, #8
    8d1a:	movs	r0, r0
    8d1c:	movs	r5, #230	; 0xe6
    8d1e:	movs	r3, r0
    8d20:	lsls	r0, r5, #8
    8d22:	movs	r0, r0
    8d24:	movs	r5, #175	; 0xaf
    8d26:	movs	r3, r0
    8d28:	movs	r5, #167	; 0xa7
    8d2a:	movs	r3, r0
    8d2c:	movs	r5, #167	; 0xa7
    8d2e:	movs	r3, r0
    8d30:	movs	r5, #163	; 0xa3
    8d32:	movs	r3, r0
    8d34:	movs	r5, #140	; 0x8c
    8d36:	movs	r3, r0

00008d38 <_start@@Base>:
    8d38:	mov.w	fp, #0
    8d3c:	mov.w	lr, #0
    8d40:	pop	{r1}
    8d42:	mov	r2, sp
    8d44:	push	{r2}
    8d46:	push	{r0}
    8d48:	ldr.w	sl, [pc, #36]	; 8d70 <_start@@Base+0x38>
    8d4c:	add	r3, pc, #32	; (adr r3, 8d70 <_start@@Base+0x38>)
    8d4e:	add	sl, r3
    8d50:	ldr.w	ip, [pc, #32]	; 8d74 <_start@@Base+0x3c>
    8d54:	ldr.w	ip, [sl, ip]
    8d58:	str.w	ip, [sp, #-4]!
    8d5c:	ldr	r3, [pc, #24]	; (8d78 <_start@@Base+0x40>)
    8d5e:	ldr.w	r3, [sl, r3]
    8d62:	ldr	r0, [pc, #24]	; (8d7c <_start@@Base+0x44>)
    8d64:	ldr.w	r0, [sl, r0]
    8d68:	blx	882c <__libc_start_main@plt>
    8d6c:	blx	8b34 <abort@plt>
    8d70:	stmia	r0!, {r2, r3, r4}
    8d72:	movs	r5, r0
    8d74:	lsls	r4, r2, #8
    8d76:	movs	r0, r0
    8d78:	lsls	r0, r2, #9
    8d7a:	movs	r0, r0
    8d7c:	lsls	r0, r4, #9
    8d7e:	movs	r0, r0
    8d80:	adds	r0, #20
    8d82:	b.n	88c4 <getopt_long@plt+0x4>
    8d84:	movs	r0, #20
    8d86:	b.n	88c8 <getopt_long@plt+0x8>
    8d88:	adds	r0, #3
    8d8a:	b.n	8eac <btrfs_delete_one_dir_name@@Base+0x18>
    8d8c:	movs	r0, #2
    8d8e:	b.n	8cb8 <main@@Base+0x120>
    8d90:	movs	r0, r0
    8d92:	b.n	943a <btrfs_insert_dir_item@@Base+0x176>
    8d94:	vrhadd.u16	d0, d14, d31
    8d98:	mrc2	10, 5, lr, cr15, cr15, {7}	; <UNPREDICTABLE>
    8d9c:	itt	<und>
    8d9e:	mov<und>	r5, r0
    8da0:	lsl<und>	r0, r0, #9
    8da2:	movs	r0, r0
    8da4:	ldr	r0, [pc, #24]	; (8dc0 <_start@@Base+0x88>)
    8da6:	ldr	r3, [pc, #28]	; (8dc4 <_start@@Base+0x8c>)
    8da8:	add	r0, pc
    8daa:	ldr	r2, [pc, #28]	; (8dc8 <_start@@Base+0x90>)
    8dac:	add	r3, pc
    8dae:	cmp	r3, r0
    8db0:	add	r2, pc
    8db2:	beq.n	8dbc <_start@@Base+0x84>
    8db4:	ldr	r3, [pc, #20]	; (8dcc <_start@@Base+0x94>)
    8db6:	ldr	r3, [r2, r3]
    8db8:	cbz	r3, 8dbc <_start@@Base+0x84>
    8dba:	bx	r3
    8dbc:	bx	lr
    8dbe:	nop
    8dc0:	bmi.n	8cec <main@@Base+0x154>
    8dc2:	movs	r5, r0
    8dc4:	bmi.n	8ce8 <main@@Base+0x150>
    8dc6:	movs	r5, r0
    8dc8:	it	le
    8dca:	movle	r5, r0
    8dcc:	lsls	r4, r3, #8
    8dce:	movs	r0, r0
    8dd0:	ldr	r0, [pc, #32]	; (8df4 <_start@@Base+0xbc>)
    8dd2:	ldr	r1, [pc, #36]	; (8df8 <_start@@Base+0xc0>)
    8dd4:	add	r0, pc
    8dd6:	ldr	r2, [pc, #36]	; (8dfc <_start@@Base+0xc4>)
    8dd8:	add	r1, pc
    8dda:	subs	r1, r1, r0
    8ddc:	add	r2, pc
    8dde:	lsrs	r3, r1, #31
    8de0:	add.w	r1, r3, r1, asr #2
    8de4:	asrs	r1, r1, #1
    8de6:	beq.n	8df0 <_start@@Base+0xb8>
    8de8:	ldr	r3, [pc, #20]	; (8e00 <_start@@Base+0xc8>)
    8dea:	ldr	r3, [r2, r3]
    8dec:	cbz	r3, 8df0 <_start@@Base+0xb8>
    8dee:	bx	r3
    8df0:	bx	lr
    8df2:	nop
    8df4:	bmi.n	8ec8 <btrfs_delete_one_dir_name@@Base+0x34>
    8df6:	movs	r5, r0
    8df8:	bmi.n	8ec4 <btrfs_delete_one_dir_name@@Base+0x30>
    8dfa:	movs	r5, r0
    8dfc:	ite	ge
    8dfe:	movge	r5, r0
    8e00:	lsllt	r0, r5, #9
    8e02:	movs	r0, r0
    8e04:	push	{r3, lr}
    8e06:	ldr	r3, [pc, #40]	; (8e30 <_start@@Base+0xf8>)
    8e08:	ldr	r2, [pc, #40]	; (8e34 <_start@@Base+0xfc>)
    8e0a:	add	r3, pc
    8e0c:	add	r2, pc
    8e0e:	ldrb	r3, [r3, #0]
    8e10:	cbnz	r3, 8e2e <_start@@Base+0xf6>
    8e12:	ldr	r3, [pc, #36]	; (8e38 <_start@@Base+0x100>)
    8e14:	ldr	r3, [r2, r3]
    8e16:	cbz	r3, 8e22 <_start@@Base+0xea>
    8e18:	ldr	r3, [pc, #32]	; (8e3c <_start@@Base+0x104>)
    8e1a:	add	r3, pc
    8e1c:	ldr	r0, [r3, #0]
    8e1e:	blx	8574 <__cxa_finalize@plt>
    8e22:	bl	8da4 <_start@@Base+0x6c>
    8e26:	ldr	r3, [pc, #24]	; (8e40 <_start@@Base+0x108>)
    8e28:	movs	r2, #1
    8e2a:	add	r3, pc
    8e2c:	strb	r2, [r3, #0]
    8e2e:	pop	{r3, pc}
    8e30:	bmi.n	8e98 <btrfs_delete_one_dir_name@@Base+0x4>
    8e32:	movs	r5, r0
    8e34:	itt	vc
    8e36:	movvc	r5, r0
    8e38:	lslvc	r0, r3, #8
    8e3a:	movs	r0, r0
    8e3c:	stmia	r1!, {r1, r2, r5, r6, r7}
    8e3e:	movs	r5, r0
    8e40:	bmi.n	8e68 <_start@@Base+0x130>
    8e42:	movs	r5, r0
    8e44:	b.n	8dd0 <_start@@Base+0x98>
    8e46:	nop
    8e48:	ldr	r2, [pc, #60]	; (8e88 <_start@@Base+0x150>)
    8e4a:	movs	r1, #16
    8e4c:	ldr	r3, [pc, #60]	; (8e8c <_start@@Base+0x154>)
    8e4e:	push	{r4, lr}
    8e50:	add	r2, pc
    8e52:	sub	sp, #72	; 0x48
    8e54:	add	r4, sp, #4
    8e56:	ldr	r3, [r2, r3]
    8e58:	mov	r0, r4
    8e5a:	ldr	r3, [r3, #0]
    8e5c:	str	r3, [sp, #68]	; 0x44
    8e5e:	mov.w	r3, #0
    8e62:	blx	886c <backtrace@plt>
    8e66:	movs	r2, #2
    8e68:	mov	r1, r0
    8e6a:	mov	r0, r4
    8e6c:	blx	8b7c <backtrace_symbols_fd@plt>
    8e70:	ldr	r2, [pc, #28]	; (8e90 <_start@@Base+0x158>)
    8e72:	ldr	r3, [pc, #24]	; (8e8c <_start@@Base+0x154>)
    8e74:	add	r2, pc
    8e76:	ldr	r3, [r2, r3]
    8e78:	ldr	r2, [r3, #0]
    8e7a:	ldr	r3, [sp, #68]	; 0x44
    8e7c:	eors	r2, r3
    8e7e:	beq.n	8e84 <_start@@Base+0x14c>
    8e80:	blx	86b8 <__stack_chk_fail@plt>
    8e84:	add	sp, #72	; 0x48
    8e86:	pop	{r4, pc}
    8e88:	it	cc
    8e8a:	movcc	r5, r0
    8e8c:	lsls	r4, r4, #8
    8e8e:	movs	r0, r0
    8e90:	ite	ne
    8e92:	movne	r5, r0

00008e94 <btrfs_delete_one_dir_name@@Base>:
    8e94:	stmdbeq	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    8e98:	mov	r6, r3
    8e9a:	ldr.w	ip, [r2]
    8e9e:	movs	r7, #25
    8ea0:	mov	r8, r1
    8ea2:	mov	r5, r2
    8ea4:	add.w	lr, ip, #96	; 0x60
    8ea8:	add	r3, lr
    8eaa:	ldrh.w	r4, [r3, #27]
    8eae:	ldrh.w	r3, [r3, #25]
    8eb2:	add	r4, r3
    8eb4:	ldr	r3, [r2, #32]
    8eb6:	adds	r4, #30
    8eb8:	mla	r7, r7, r3, lr
    8ebc:	add.w	lr, r7, #101	; 0x65
    8ec0:	ldr.w	r7, [r7, #122]	; 0x7a
    8ec4:	cmp	r4, r7
    8ec6:	bcc.n	8ed6 <btrfs_delete_one_dir_name@@Base+0x42>
    8ec8:	movs	r4, #1
    8eca:	str	r4, [sp, #0]
    8ecc:	bl	1b3a0 <btrfs_del_items@@Base>
    8ed0:	add	sp, #8
    8ed2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8ed6:	ldr.w	r3, [lr, #17]
    8eda:	adds	r2, r4, r6
    8edc:	mov	r0, ip
    8ede:	mov	r1, r6
    8ee0:	add	r3, r7
    8ee2:	adds	r3, #101	; 0x65
    8ee4:	subs	r3, r3, r2
    8ee6:	bl	17334 <memmove_extent_buffer@@Base>
    8eea:	subs	r2, r7, r4
    8eec:	movs	r3, #1
    8eee:	mov	r1, r5
    8ef0:	mov	r0, r8
    8ef2:	bl	19e24 <btrfs_truncate_item@@Base>
    8ef6:	movs	r0, #0
    8ef8:	b.n	8ed0 <btrfs_delete_one_dir_name@@Base+0x3c>

00008efa <btrfs_match_dir_item_name@@Base>:
    8efa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8efe:	mov	r4, r1
    8f00:	ldr.w	fp, [r4]
    8f04:	mov	r7, r3
    8f06:	ldr	r3, [r4, #32]
    8f08:	mov	r1, r2
    8f0a:	add.w	r9, fp, #96	; 0x60
    8f0e:	movs	r2, #25
    8f10:	ldr.w	r8, [pc, #188]	; 8fd0 <btrfs_match_dir_item_name@@Base+0xd6>
    8f14:	sub	sp, #20
    8f16:	mla	r3, r2, r3, r9
    8f1a:	add	r8, pc
    8f1c:	add.w	r5, r3, #101	; 0x65
    8f20:	ldr.w	r4, [r3, #118]	; 0x76
    8f24:	adds	r4, #101	; 0x65
    8f26:	add.w	r2, r9, r4
    8f2a:	ldrh.w	r3, [r2, #27]
    8f2e:	ldrh.w	r2, [r2, #25]
    8f32:	cmp	r3, #255	; 0xff
    8f34:	bls.n	8f4e <btrfs_match_dir_item_name@@Base+0x54>
    8f36:	ldr	r3, [pc, #156]	; (8fd4 <btrfs_match_dir_item_name@@Base+0xda>)
    8f38:	movs	r1, #1
    8f3a:	ldr.w	r0, [r8, r3]
    8f3e:	mov	r3, r2
    8f40:	ldr	r2, [pc, #148]	; (8fd8 <btrfs_match_dir_item_name@@Base+0xde>)
    8f42:	ldr	r0, [r0, #0]
    8f44:	add	r2, pc
    8f46:	blx	8a14 <__fprintf_chk@plt+0x4>
    8f4a:	movs	r4, #0
    8f4c:	b.n	8fc6 <btrfs_match_dir_item_name@@Base+0xcc>
    8f4e:	ldr.w	r0, [r0, #464]	; 0x1d0
    8f52:	adds	r6, r2, r3
    8f54:	ldr.w	r0, [r0, #384]	; 0x180
    8f58:	subs	r0, #156	; 0x9c
    8f5a:	cmp	r6, r0
    8f5c:	bhi.n	8f92 <btrfs_match_dir_item_name@@Base+0x98>
    8f5e:	ldr.w	sl, [r5, #21]
    8f62:	movs	r6, #0
    8f64:	cmp	r6, sl
    8f66:	bcs.n	8f4a <btrfs_match_dir_item_name@@Base+0x50>
    8f68:	add.w	r2, r9, r4
    8f6c:	ldrh.w	r3, [r2, #27]
    8f70:	ldrh.w	r5, [r2, #25]
    8f74:	sub.w	r2, sl, r6
    8f78:	add	r5, r3
    8f7a:	adds	r5, #30
    8f7c:	cmp	r2, r5
    8f7e:	bcs.n	8fa8 <btrfs_match_dir_item_name@@Base+0xae>
    8f80:	ldr	r3, [pc, #80]	; (8fd4 <btrfs_match_dir_item_name@@Base+0xda>)
    8f82:	ldr	r0, [pc, #88]	; (8fdc <btrfs_match_dir_item_name@@Base+0xe2>)
    8f84:	ldr.w	r3, [r8, r3]
    8f88:	add	r0, pc
    8f8a:	ldr	r1, [r3, #0]
    8f8c:	blx	8b1c <fputs@plt+0x4>
    8f90:	b.n	8f4a <btrfs_match_dir_item_name@@Base+0x50>
    8f92:	ldr	r1, [pc, #64]	; (8fd4 <btrfs_match_dir_item_name@@Base+0xda>)
    8f94:	ldr.w	r0, [r8, r1]
    8f98:	movs	r1, #1
    8f9a:	str	r2, [sp, #0]
    8f9c:	ldr	r2, [pc, #64]	; (8fe0 <btrfs_match_dir_item_name@@Base+0xe6>)
    8f9e:	ldr	r0, [r0, #0]
    8fa0:	add	r2, pc
    8fa2:	blx	8a14 <__fprintf_chk@plt+0x4>
    8fa6:	b.n	8f4a <btrfs_match_dir_item_name@@Base+0x50>
    8fa8:	cmp	r3, r7
    8faa:	beq.n	8fb2 <btrfs_match_dir_item_name@@Base+0xb8>
    8fac:	add	r6, r5
    8fae:	add	r4, r5
    8fb0:	b.n	8f64 <btrfs_match_dir_item_name@@Base+0x6a>
    8fb2:	add.w	r2, r4, #30
    8fb6:	mov	r3, r7
    8fb8:	mov	r0, fp
    8fba:	str	r1, [sp, #12]
    8fbc:	bl	172b0 <memcmp_extent_buffer@@Base>
    8fc0:	ldr	r1, [sp, #12]
    8fc2:	cmp	r0, #0
    8fc4:	bne.n	8fac <btrfs_match_dir_item_name@@Base+0xb2>
    8fc6:	mov	r0, r4
    8fc8:	add	sp, #20
    8fca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8fce:	nop
    8fd0:	bkpt	0x006e
    8fd2:	movs	r5, r0
    8fd4:	lsls	r4, r6, #8
    8fd6:	movs	r0, r0
    8fd8:	lsls	r4, r7, #30
    8fda:	movs	r3, r0
    8fdc:	lsls	r2, r0, #31
    8fde:	movs	r3, r0
    8fe0:	lsls	r7, r7, #29
    8fe2:	movs	r3, r0
    8fe4:	ldr.w	ip, [pc, #292]	; 910c <btrfs_match_dir_item_name@@Base+0x212>
    8fe8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8fec:	add	ip, pc
    8fee:	ldr	r4, [pc, #288]	; (9110 <btrfs_match_dir_item_name@@Base+0x216>)
    8ff0:	sub	sp, #24
    8ff2:	mov.w	r9, #1
    8ff6:	mov	r8, r1
    8ff8:	ldrd	r6, sl, [sp, #56]	; 0x38
    8ffc:	mov	r5, r2
    8ffe:	ldr.w	r4, [ip, r4]
    9002:	ldr	r7, [pc, #272]	; (9114 <btrfs_match_dir_item_name@@Base+0x21a>)
    9004:	ldr	r4, [r4, #0]
    9006:	str	r4, [sp, #20]
    9008:	mov.w	r4, #0
    900c:	add	r4, sp, #16
    900e:	str.w	r9, [sp, #4]
    9012:	add	r7, pc
    9014:	str	r4, [sp, #0]
    9016:	str	r6, [sp, #16]
    9018:	bl	1afb4 <btrfs_insert_empty_items@@Base>
    901c:	cmn.w	r0, #17
    9020:	mov	r4, r0
    9022:	bne.n	909a <btrfs_match_dir_item_name@@Base+0x1a0>
    9024:	ldr	r3, [sp, #64]	; 0x40
    9026:	mov	r2, sl
    9028:	mov	r1, r5
    902a:	mov	r0, r8
    902c:	bl	8efa <btrfs_match_dir_item_name@@Base>
    9030:	cmp	r0, #0
    9032:	bne.n	909e <btrfs_match_dir_item_name@@Base+0x1a4>
    9034:	mov	r2, r6
    9036:	mov	r1, r5
    9038:	mov	r0, r8
    903a:	bl	19fd8 <btrfs_extend_item@@Base>
    903e:	subs	r4, r0, #0
    9040:	ble.n	909a <btrfs_match_dir_item_name@@Base+0x1a0>
    9042:	ldr	r3, [pc, #212]	; (9118 <btrfs_match_dir_item_name@@Base+0x21e>)
    9044:	mov	r1, r9
    9046:	ldr	r2, [pc, #212]	; (911c <btrfs_match_dir_item_name@@Base+0x222>)
    9048:	ldr	r0, [r7, r3]
    904a:	add	r2, pc
    904c:	ldr	r3, [pc, #208]	; (9120 <btrfs_match_dir_item_name@@Base+0x226>)
    904e:	str.w	r9, [sp, #12]
    9052:	add	r3, pc
    9054:	str	r3, [sp, #8]
    9056:	ldr	r3, [pc, #204]	; (9124 <btrfs_match_dir_item_name@@Base+0x22a>)
    9058:	add	r3, pc
    905a:	str	r3, [sp, #4]
    905c:	movs	r3, #46	; 0x2e
    905e:	str	r3, [sp, #0]
    9060:	ldr	r3, [pc, #196]	; (9128 <btrfs_match_dir_item_name@@Base+0x22e>)
    9062:	ldr	r0, [r0, #0]
    9064:	add	r3, pc
    9066:	blx	8a14 <__fprintf_chk@plt+0x4>
    906a:	bl	8e48 <_start@@Base+0x110>
    906e:	ldr	r3, [pc, #168]	; (9118 <btrfs_match_dir_item_name@@Base+0x21e>)
    9070:	movs	r1, #1
    9072:	ldr	r2, [pc, #184]	; (912c <btrfs_match_dir_item_name@@Base+0x232>)
    9074:	ldr	r0, [r7, r3]
    9076:	add	r2, pc
    9078:	ldr	r3, [pc, #180]	; (9130 <btrfs_match_dir_item_name@@Base+0x236>)
    907a:	str	r1, [sp, #12]
    907c:	add	r3, pc
    907e:	str	r3, [sp, #8]
    9080:	ldr	r3, [pc, #176]	; (9134 <btrfs_match_dir_item_name@@Base+0x23a>)
    9082:	add	r3, pc
    9084:	str	r3, [sp, #4]
    9086:	movs	r3, #50	; 0x32
    9088:	str	r3, [sp, #0]
    908a:	ldr	r3, [pc, #172]	; (9138 <btrfs_match_dir_item_name@@Base+0x23e>)
    908c:	ldr	r0, [r0, #0]
    908e:	add	r3, pc
    9090:	blx	8a14 <__fprintf_chk@plt+0x4>
    9094:	bl	8e48 <_start@@Base+0x110>
    9098:	b.n	90a4 <btrfs_match_dir_item_name@@Base+0x1aa>
    909a:	cmp	r4, #0
    909c:	bge.n	90a2 <btrfs_match_dir_item_name@@Base+0x1a8>
    909e:	mov	r0, r4
    90a0:	b.n	90f0 <btrfs_match_dir_item_name@@Base+0x1f6>
    90a2:	bne.n	906e <btrfs_match_dir_item_name@@Base+0x174>
    90a4:	ldr	r2, [r5, #0]
    90a6:	movs	r1, #25
    90a8:	ldr	r3, [r5, #32]
    90aa:	mla	r3, r1, r3, r2
    90ae:	ldr.w	r0, [r3, #214]	; 0xd6
    90b2:	add.w	r4, r0, #101	; 0x65
    90b6:	ldr.w	r0, [r3, #218]	; 0xda
    90ba:	cmp	r6, r0
    90bc:	bls.n	90ec <btrfs_match_dir_item_name@@Base+0x1f2>
    90be:	ldr	r3, [pc, #88]	; (9118 <btrfs_match_dir_item_name@@Base+0x21e>)
    90c0:	movs	r1, #1
    90c2:	ldr	r2, [pc, #120]	; (913c <btrfs_match_dir_item_name@@Base+0x242>)
    90c4:	ldr	r0, [r7, r3]
    90c6:	add	r2, pc
    90c8:	ldr	r3, [pc, #116]	; (9140 <btrfs_match_dir_item_name@@Base+0x246>)
    90ca:	str	r1, [sp, #12]
    90cc:	add	r3, pc
    90ce:	str	r3, [sp, #8]
    90d0:	ldr	r3, [pc, #112]	; (9144 <btrfs_match_dir_item_name@@Base+0x24a>)
    90d2:	add	r3, pc
    90d4:	str	r3, [sp, #4]
    90d6:	movs	r3, #54	; 0x36
    90d8:	str	r3, [sp, #0]
    90da:	ldr	r3, [pc, #108]	; (9148 <btrfs_match_dir_item_name@@Base+0x24e>)
    90dc:	ldr	r0, [r0, #0]
    90de:	add	r3, pc
    90e0:	blx	8a14 <__fprintf_chk@plt+0x4>
    90e4:	bl	8e48 <_start@@Base+0x110>
    90e8:	blx	8b34 <abort@plt>
    90ec:	subs	r0, r0, r6
    90ee:	add	r0, r4
    90f0:	ldr	r2, [pc, #88]	; (914c <btrfs_match_dir_item_name@@Base+0x252>)
    90f2:	ldr	r3, [pc, #28]	; (9110 <btrfs_match_dir_item_name@@Base+0x216>)
    90f4:	add	r2, pc
    90f6:	ldr	r3, [r2, r3]
    90f8:	ldr	r2, [r3, #0]
    90fa:	ldr	r3, [sp, #20]
    90fc:	eors	r2, r3
    90fe:	beq.n	9104 <btrfs_match_dir_item_name@@Base+0x20a>
    9100:	blx	86b8 <__stack_chk_fail@plt>
    9104:	add	sp, #24
    9106:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    910a:	nop
    910c:	pop	{r2, r3, r4, r7, pc}
    910e:	movs	r5, r0
    9110:	lsls	r4, r4, #8
    9112:	movs	r0, r0
    9114:	pop	{r1, r2, r4, r5, r6, pc}
    9116:	movs	r5, r0
    9118:	lsls	r4, r6, #8
    911a:	movs	r0, r0
    911c:	lsls	r2, r4, #28
    911e:	movs	r3, r0
    9120:	adds	r5, #83	; 0x53
    9122:	movs	r3, r0
    9124:	lsls	r0, r6, #30
    9126:	movs	r3, r0
    9128:	lsls	r5, r7, #27
    912a:	movs	r3, r0
    912c:	lsls	r6, r6, #27
    912e:	movs	r3, r0
    9130:	adds	r5, #41	; 0x29
    9132:	movs	r3, r0
    9134:	lsls	r6, r0, #30
    9136:	movs	r3, r0
    9138:	lsls	r3, r2, #27
    913a:	movs	r3, r0
    913c:	lsls	r4, r3, #27
    913e:	movs	r3, r0
    9140:	lsls	r3, r0, #28
    9142:	movs	r3, r0
    9144:	lsls	r6, r6, #28
    9146:	movs	r3, r0
    9148:	lsls	r3, r0, #26
    914a:	movs	r3, r0
    914c:	pop	{r2, r4, r7}
    914e:	movs	r5, r0

00009150 <btrfs_insert_xattr_item@@Base>:
    9150:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9154:	mov	r5, r3
    9156:	vpush	{d8}
    915a:	mov	r7, r2
    915c:	ldr	r2, [pc, #320]	; (92a0 <btrfs_insert_xattr_item@@Base+0x150>)
    915e:	mov	r9, r0
    9160:	mov	sl, r1
    9162:	mvn.w	r0, #1
    9166:	add	r2, pc
    9168:	mov	r1, r7
    916a:	sub	sp, #76	; 0x4c
    916c:	movs	r4, #0
    916e:	ldr.w	fp, [pc, #308]	; 92a4 <btrfs_insert_xattr_item@@Base+0x154>
    9172:	ldr	r3, [sp, #120]	; 0x78
    9174:	ldrh.w	r8, [sp, #124]	; 0x7c
    9178:	add	fp, pc
    917a:	vmov	s16, r3
    917e:	ldr	r3, [pc, #296]	; (92a8 <btrfs_insert_xattr_item@@Base+0x158>)
    9180:	ldr	r3, [r2, r3]
    9182:	mov	r2, r5
    9184:	ldr	r3, [r3, #0]
    9186:	str	r3, [sp, #68]	; 0x44
    9188:	mov.w	r3, #0
    918c:	ldr	r3, [sp, #128]	; 0x80
    918e:	str	r3, [sp, #28]
    9190:	ldr	r3, [sp, #132]	; 0x84
    9192:	str	r3, [sp, #32]
    9194:	movs	r3, #24
    9196:	strb.w	r3, [sp, #36]	; 0x24
    919a:	bl	173a2 <crc32c_le@@Base>
    919e:	str.w	r4, [sp, #41]	; 0x29
    91a2:	str.w	r0, [sp, #37]	; 0x25
    91a6:	bl	17df8 <btrfs_alloc_path@@Base>
    91aa:	mov	r6, r0
    91ac:	cmp	r0, #0
    91ae:	beq.n	9290 <btrfs_insert_xattr_item@@Base+0x140>
    91b0:	add.w	r3, r8, #30
    91b4:	mov	r2, r0
    91b6:	add	r3, r5
    91b8:	mov	r0, r9
    91ba:	str	r3, [sp, #0]
    91bc:	mov	r1, sl
    91be:	add	r3, sp, #28
    91c0:	strd	r7, r5, [sp, #4]
    91c4:	bl	8fe4 <btrfs_match_dir_item_name@@Base+0xea>
    91c8:	cmn.w	r0, #4096	; 0x1000
    91cc:	mov	r9, r0
    91ce:	bls.n	9202 <btrfs_insert_xattr_item@@Base+0xb2>
    91d0:	ldr	r3, [pc, #216]	; (92ac <btrfs_insert_xattr_item@@Base+0x15c>)
    91d2:	movs	r1, #1
    91d4:	ldr	r2, [pc, #216]	; (92b0 <btrfs_insert_xattr_item@@Base+0x160>)
    91d6:	ldr.w	r0, [fp, r3]
    91da:	add	r2, pc
    91dc:	ldr	r3, [pc, #212]	; (92b4 <btrfs_insert_xattr_item@@Base+0x164>)
    91de:	str	r1, [sp, #12]
    91e0:	add	r3, pc
    91e2:	str	r3, [sp, #8]
    91e4:	ldr	r3, [pc, #208]	; (92b8 <btrfs_insert_xattr_item@@Base+0x168>)
    91e6:	add	r3, pc
    91e8:	adds	r3, #21
    91ea:	str	r3, [sp, #4]
    91ec:	movs	r3, #89	; 0x59
    91ee:	str	r3, [sp, #0]
    91f0:	ldr	r3, [pc, #200]	; (92bc <btrfs_insert_xattr_item@@Base+0x16c>)
    91f2:	ldr	r0, [r0, #0]
    91f4:	add	r3, pc
    91f6:	blx	8a14 <__fprintf_chk@plt+0x4>
    91fa:	bl	8e48 <_start@@Base+0x110>
    91fe:	blx	8b34 <abort@plt>
    9202:	ldr	r0, [r6, #0]
    9204:	add	r1, sp, #48	; 0x30
    9206:	movs	r2, #0
    9208:	movs	r3, #0
    920a:	strd	r2, r3, [sp, #48]	; 0x30
    920e:	movs	r3, #17
    9210:	mov	r2, r9
    9212:	str	r0, [sp, #20]
    9214:	strb.w	r4, [sp, #57]	; 0x39
    9218:	strb.w	r4, [sp, #58]	; 0x3a
    921c:	strb.w	r4, [sp, #59]	; 0x3b
    9220:	strb.w	r4, [sp, #60]	; 0x3c
    9224:	strb.w	r4, [sp, #61]	; 0x3d
    9228:	strb.w	r4, [sp, #62]	; 0x3e
    922c:	strb.w	r4, [sp, #63]	; 0x3f
    9230:	strb.w	r4, [sp, #64]	; 0x40
    9234:	strb.w	r4, [sp, #56]	; 0x38
    9238:	bl	172d8 <write_extent_buffer@@Base>
    923c:	ldr	r0, [sp, #20]
    923e:	movs	r2, #8
    9240:	mov	r1, r7
    9242:	add.w	r3, r0, #96	; 0x60
    9246:	add	r3, r9
    9248:	strb	r2, [r3, #29]
    924a:	add.w	r2, r9, #30
    924e:	add.w	sl, r2, r5
    9252:	strh.w	r5, [r3, #27]
    9256:	strh.w	r8, [r3, #25]
    925a:	mov	r3, r5
    925c:	bl	172d8 <write_extent_buffer@@Base>
    9260:	vmov	r1, s16
    9264:	mov	r3, r8
    9266:	mov	r2, sl
    9268:	ldr	r0, [sp, #20]
    926a:	bl	172d8 <write_extent_buffer@@Base>
    926e:	ldr	r0, [r6, #0]
    9270:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    9274:	mov	r0, r6
    9276:	bl	17e26 <btrfs_free_path@@Base>
    927a:	mov	r0, r4
    927c:	ldr	r2, [pc, #64]	; (92c0 <btrfs_insert_xattr_item@@Base+0x170>)
    927e:	ldr	r3, [pc, #40]	; (92a8 <btrfs_insert_xattr_item@@Base+0x158>)
    9280:	add	r2, pc
    9282:	ldr	r3, [r2, r3]
    9284:	ldr	r2, [r3, #0]
    9286:	ldr	r3, [sp, #68]	; 0x44
    9288:	eors	r2, r3
    928a:	beq.n	9296 <btrfs_insert_xattr_item@@Base+0x146>
    928c:	blx	86b8 <__stack_chk_fail@plt>
    9290:	mvn.w	r0, #11
    9294:	b.n	927c <btrfs_insert_xattr_item@@Base+0x12c>
    9296:	add	sp, #76	; 0x4c
    9298:	vpop	{d8}
    929c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92a0:	pop	{r1, r5}
    92a2:	movs	r5, r0
    92a4:	pop	{r4}
    92a6:	movs	r5, r0
    92a8:	lsls	r4, r4, #8
    92aa:	movs	r0, r0
    92ac:	lsls	r4, r6, #8
    92ae:	movs	r0, r0
    92b0:	lsls	r0, r1, #23
    92b2:	movs	r3, r0
    92b4:	lsls	r7, r2, #24
    92b6:	movs	r3, r0
    92b8:	lsls	r2, r4, #24
    92ba:	movs	r3, r0
    92bc:	lsls	r5, r5, #21
    92be:	movs	r3, r0
    92c0:	cbnz	r0, 9306 <btrfs_insert_dir_item@@Base+0x42>
    92c2:	movs	r5, r0

000092c4 <btrfs_insert_dir_item@@Base>:
    92c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    92c8:	sub	sp, #92	; 0x5c
    92ca:	mov	r5, r3
    92cc:	mov	r8, r2
    92ce:	ldr	r3, [sp, #144]	; 0x90
    92d0:	mov	sl, r0
    92d2:	ldr	r2, [pc, #404]	; (9468 <btrfs_insert_dir_item@@Base+0x1a4>)
    92d4:	mov	r9, r1
    92d6:	mvn.w	r0, #1
    92da:	mov	r1, r8
    92dc:	str	r3, [sp, #24]
    92de:	add	r2, pc
    92e0:	ldr	r3, [sp, #148]	; 0x94
    92e2:	movs	r4, #0
    92e4:	ldr	r6, [sp, #136]	; 0x88
    92e6:	ldrb.w	fp, [sp, #140]	; 0x8c
    92ea:	str	r3, [sp, #28]
    92ec:	ldr	r3, [pc, #380]	; (946c <btrfs_insert_dir_item@@Base+0x1a8>)
    92ee:	ldr	r3, [r2, r3]
    92f0:	mov	r2, r5
    92f2:	ldr	r3, [r3, #0]
    92f4:	str	r3, [sp, #84]	; 0x54
    92f6:	mov.w	r3, #0
    92fa:	ldr	r3, [sp, #128]	; 0x80
    92fc:	str	r3, [sp, #44]	; 0x2c
    92fe:	ldr	r3, [sp, #132]	; 0x84
    9300:	str	r3, [sp, #48]	; 0x30
    9302:	movs	r3, #84	; 0x54
    9304:	strb.w	r3, [sp, #52]	; 0x34
    9308:	bl	173a2 <crc32c_le@@Base>
    930c:	str.w	r4, [sp, #57]	; 0x39
    9310:	str.w	r0, [sp, #53]	; 0x35
    9314:	bl	17df8 <btrfs_alloc_path@@Base>
    9318:	mov	r7, r0
    931a:	cmp	r0, #0
    931c:	beq.w	945a <btrfs_insert_dir_item@@Base+0x196>
    9320:	add.w	r3, r5, #30
    9324:	mov	r2, r0
    9326:	str	r3, [sp, #20]
    9328:	mov	r1, r9
    932a:	str	r3, [sp, #0]
    932c:	mov	r0, sl
    932e:	add	r3, sp, #44	; 0x2c
    9330:	strd	r8, r5, [sp, #4]
    9334:	bl	8fe4 <btrfs_match_dir_item_name@@Base+0xea>
    9338:	cmn.w	r0, #4096	; 0x1000
    933c:	mov	r2, r0
    933e:	bls.n	9368 <btrfs_insert_dir_item@@Base+0xa4>
    9340:	cmn.w	r0, #17
    9344:	beq.n	93ba <btrfs_insert_dir_item@@Base+0xf6>
    9346:	mov	r5, r0
    9348:	mov	r0, r7
    934a:	cmp	r5, #0
    934c:	it	ne
    934e:	movne	r4, r5
    9350:	bl	17e26 <btrfs_free_path@@Base>
    9354:	ldr	r2, [pc, #280]	; (9470 <btrfs_insert_dir_item@@Base+0x1ac>)
    9356:	ldr	r3, [pc, #276]	; (946c <btrfs_insert_dir_item@@Base+0x1a8>)
    9358:	add	r2, pc
    935a:	ldr	r3, [r2, r3]
    935c:	ldr	r2, [r3, #0]
    935e:	ldr	r3, [sp, #84]	; 0x54
    9360:	eors	r2, r3
    9362:	beq.n	9460 <btrfs_insert_dir_item@@Base+0x19c>
    9364:	blx	86b8 <__stack_chk_fail@plt>
    9368:	ldr.w	r3, [r6, #13]
    936c:	ldr.w	r1, [r6, #9]
    9370:	ldr	r0, [r7, #0]
    9372:	str.w	r3, [sp, #77]	; 0x4d
    9376:	ldrb	r3, [r6, #8]
    9378:	str.w	r1, [sp, #73]	; 0x49
    937c:	ldr	r1, [r6, #0]
    937e:	strb.w	r3, [sp, #72]	; 0x48
    9382:	ldr	r3, [r6, #4]
    9384:	str	r2, [sp, #36]	; 0x24
    9386:	str	r0, [sp, #32]
    9388:	strd	r1, r3, [sp, #64]	; 0x40
    938c:	add	r1, sp, #64	; 0x40
    938e:	movs	r3, #17
    9390:	bl	172d8 <write_extent_buffer@@Base>
    9394:	ldr	r0, [sp, #32]
    9396:	ldr	r2, [sp, #36]	; 0x24
    9398:	mov	r1, r8
    939a:	add.w	r3, r0, #96	; 0x60
    939e:	add	r3, r2
    93a0:	adds	r2, #30
    93a2:	strb.w	fp, [r3, #29]
    93a6:	strb	r4, [r3, #25]
    93a8:	strb	r4, [r3, #26]
    93aa:	strh.w	r5, [r3, #27]
    93ae:	mov	r3, r5
    93b0:	bl	172d8 <write_extent_buffer@@Base>
    93b4:	ldr	r0, [sp, #32]
    93b6:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    93ba:	ldr.w	r3, [r9, #464]	; 0x1d0
    93be:	ldr	r3, [r3, #28]
    93c0:	cmp	r3, r9
    93c2:	beq.n	9454 <btrfs_insert_dir_item@@Base+0x190>
    93c4:	mov	r0, r7
    93c6:	bl	17e00 <btrfs_release_path@@Base>
    93ca:	movs	r3, #96	; 0x60
    93cc:	strb.w	r3, [sp, #52]	; 0x34
    93d0:	mov	r1, r9
    93d2:	ldr	r3, [sp, #24]
    93d4:	mov	r2, r7
    93d6:	mov	r0, sl
    93d8:	strd	r8, r5, [sp, #4]
    93dc:	str.w	r3, [sp, #53]	; 0x35
    93e0:	ldr	r3, [sp, #28]
    93e2:	str.w	r3, [sp, #57]	; 0x39
    93e6:	ldr	r3, [sp, #20]
    93e8:	str	r3, [sp, #0]
    93ea:	add	r3, sp, #44	; 0x2c
    93ec:	bl	8fe4 <btrfs_match_dir_item_name@@Base+0xea>
    93f0:	cmn.w	r0, #4096	; 0x1000
    93f4:	mov	r9, r0
    93f6:	bls.n	93fe <btrfs_insert_dir_item@@Base+0x13a>
    93f8:	mov	r4, r0
    93fa:	movs	r5, #0
    93fc:	b.n	9348 <btrfs_insert_dir_item@@Base+0x84>
    93fe:	ldr.w	r3, [r6, #13]
    9402:	add	r1, sp, #64	; 0x40
    9404:	ldr	r0, [r7, #0]
    9406:	movs	r4, #0
    9408:	ldr.w	r2, [r6, #9]
    940c:	str.w	r3, [sp, #77]	; 0x4d
    9410:	ldrb	r3, [r6, #8]
    9412:	str.w	r2, [sp, #73]	; 0x49
    9416:	ldr	r2, [r6, #0]
    9418:	strb.w	r3, [sp, #72]	; 0x48
    941c:	ldr	r3, [r6, #4]
    941e:	str	r0, [sp, #20]
    9420:	strd	r2, r3, [sp, #64]	; 0x40
    9424:	mov	r2, r9
    9426:	movs	r3, #17
    9428:	bl	172d8 <write_extent_buffer@@Base>
    942c:	ldr	r0, [sp, #20]
    942e:	add.w	r2, r9, #30
    9432:	mov	r1, r8
    9434:	add.w	r3, r0, #96	; 0x60
    9438:	add	r3, r9
    943a:	strb.w	fp, [r3, #29]
    943e:	strb	r4, [r3, #25]
    9440:	strb	r4, [r3, #26]
    9442:	strh.w	r5, [r3, #27]
    9446:	mov	r3, r5
    9448:	bl	172d8 <write_extent_buffer@@Base>
    944c:	ldr	r0, [sp, #20]
    944e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    9452:	b.n	93fa <btrfs_insert_dir_item@@Base+0x136>
    9454:	movs	r4, #0
    9456:	mov	r5, r4
    9458:	b.n	9348 <btrfs_insert_dir_item@@Base+0x84>
    945a:	mvn.w	r4, #11
    945e:	b.n	9354 <btrfs_insert_dir_item@@Base+0x90>
    9460:	mov	r0, r4
    9462:	add	sp, #92	; 0x5c
    9464:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9468:	hlt	0x002a
    946a:	movs	r5, r0
    946c:	lsls	r4, r4, #8
    946e:	movs	r0, r0
    9470:	rev	r0, r6
    9472:	movs	r5, r0

00009474 <btrfs_lookup_dir_item@@Base>:
    9474:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9478:	mov	r4, r2
    947a:	sub	sp, #60	; 0x3c
    947c:	ldr	r2, [pc, #208]	; (9550 <btrfs_lookup_dir_item@@Base+0xdc>)
    947e:	ldr	r3, [pc, #212]	; (9554 <btrfs_lookup_dir_item@@Base+0xe0>)
    9480:	mov	fp, r0
    9482:	ldrd	r8, r9, [sp, #104]	; 0x68
    9486:	add	r2, pc
    9488:	ldrd	r6, r7, [sp, #96]	; 0x60
    948c:	mov	r5, r1
    948e:	ldr	r3, [r2, r3]
    9490:	mvn.w	r0, #1
    9494:	mov	r1, r8
    9496:	mov	r2, r9
    9498:	ldr	r3, [r3, #0]
    949a:	str	r3, [sp, #52]	; 0x34
    949c:	mov.w	r3, #0
    94a0:	ldr.w	sl, [sp, #112]	; 0x70
    94a4:	movs	r3, #84	; 0x54
    94a6:	strd	r6, r7, [sp, #12]
    94aa:	strb.w	r3, [sp, #20]
    94ae:	bl	173a2 <crc32c_le@@Base>
    94b2:	movs	r3, #0
    94b4:	str.w	r3, [sp, #25]
    94b8:	subs.w	r3, sl, r3
    94bc:	add	r2, sp, #12
    94be:	mov	r1, r5
    94c0:	it	ne
    94c2:	movne	r3, #1
    94c4:	str	r3, [sp, #4]
    94c6:	mov.w	r3, sl, asr #31
    94ca:	str	r3, [sp, #0]
    94cc:	mov	r3, r4
    94ce:	str.w	r0, [sp, #21]
    94d2:	mov	r0, fp
    94d4:	bl	1a1e4 <btrfs_search_slot@@Base>
    94d8:	cmp	r0, #0
    94da:	blt.n	94e4 <btrfs_lookup_dir_item@@Base+0x70>
    94dc:	beq.n	94fc <btrfs_lookup_dir_item@@Base+0x88>
    94de:	ldr	r3, [r4, #32]
    94e0:	cbnz	r3, 94f8 <btrfs_lookup_dir_item@@Base+0x84>
    94e2:	movs	r0, #0
    94e4:	ldr	r2, [pc, #112]	; (9558 <btrfs_lookup_dir_item@@Base+0xe4>)
    94e6:	ldr	r3, [pc, #108]	; (9554 <btrfs_lookup_dir_item@@Base+0xe0>)
    94e8:	add	r2, pc
    94ea:	ldr	r3, [r2, r3]
    94ec:	ldr	r2, [r3, #0]
    94ee:	ldr	r3, [sp, #52]	; 0x34
    94f0:	eors	r2, r3
    94f2:	beq.n	954a <btrfs_lookup_dir_item@@Base+0xd6>
    94f4:	blx	86b8 <__stack_chk_fail@plt>
    94f8:	subs	r3, #1
    94fa:	str	r3, [r4, #32]
    94fc:	ldr	r3, [r4, #32]
    94fe:	movs	r2, #25
    9500:	ldr	r0, [r4, #0]
    9502:	add	r1, sp, #32
    9504:	muls	r2, r3
    9506:	movs	r3, #17
    9508:	adds	r2, #101	; 0x65
    950a:	bl	172c2 <read_extent_buffer@@Base>
    950e:	ldrd	r2, r3, [sp, #32]
    9512:	ldr.w	r0, [sp, #41]	; 0x29
    9516:	cmp	r7, r3
    9518:	ldr.w	r1, [sp, #45]	; 0x2d
    951c:	it	eq
    951e:	cmpeq	r6, r2
    9520:	ldrb.w	ip, [sp, #40]	; 0x28
    9524:	bne.n	94e2 <btrfs_lookup_dir_item@@Base+0x6e>
    9526:	cmp.w	ip, #84	; 0x54
    952a:	bne.n	94e2 <btrfs_lookup_dir_item@@Base+0x6e>
    952c:	ldr.w	r3, [sp, #25]
    9530:	ldr.w	r2, [sp, #21]
    9534:	cmp	r3, r1
    9536:	it	eq
    9538:	cmpeq	r2, r0
    953a:	bne.n	94e2 <btrfs_lookup_dir_item@@Base+0x6e>
    953c:	mov	r3, r9
    953e:	mov	r2, r8
    9540:	mov	r1, r4
    9542:	mov	r0, r5
    9544:	bl	8efa <btrfs_match_dir_item_name@@Base>
    9548:	b.n	94e4 <btrfs_lookup_dir_item@@Base+0x70>
    954a:	add	sp, #60	; 0x3c
    954c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9550:	cbnz	r2, 9554 <btrfs_lookup_dir_item@@Base+0xe0>
    9552:	movs	r5, r0
    9554:	lsls	r4, r4, #8
    9556:	movs	r0, r0
    9558:			; <UNDEFINED> instruction: 0xb8a0
    955a:	movs	r5, r0

0000955c <btrfs_lookup_dir_index@@Base>:
    955c:	ldr.w	ip, [pc, #128]	; 95e0 <btrfs_lookup_dir_index@@Base+0x84>
    9560:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    9564:	mov	r4, r2
    9566:	ldr	r2, [pc, #124]	; (95e4 <btrfs_lookup_dir_index@@Base+0x88>)
    9568:	add	ip, pc
    956a:	sub	sp, #32
    956c:	mov	r5, r1
    956e:	ldr.w	r2, [ip, r2]
    9572:	ldr	r3, [sp, #80]	; 0x50
    9574:	ldr	r2, [r2, #0]
    9576:	str	r2, [sp, #28]
    9578:	mov.w	r2, #0
    957c:	movs	r2, #96	; 0x60
    957e:	strb.w	r2, [sp, #16]
    9582:	ldr	r2, [sp, #72]	; 0x48
    9584:	ldrd	r8, r9, [sp, #56]	; 0x38
    9588:	ldr	r6, [sp, #64]	; 0x40
    958a:	str.w	r2, [sp, #17]
    958e:	ldr	r2, [sp, #76]	; 0x4c
    9590:	strd	r8, r9, [sp, #8]
    9594:	str.w	r2, [sp, #21]
    9598:	subs	r2, r3, #0
    959a:	mov.w	r3, r3, asr #31
    959e:	str	r3, [sp, #0]
    95a0:	it	ne
    95a2:	movne	r2, #1
    95a4:	mov	r3, r4
    95a6:	str	r2, [sp, #4]
    95a8:	add	r2, sp, #8
    95aa:	bl	1a1e4 <btrfs_search_slot@@Base>
    95ae:	cmp	r0, #0
    95b0:	blt.n	95c0 <btrfs_lookup_dir_index@@Base+0x64>
    95b2:	bne.n	95d4 <btrfs_lookup_dir_index@@Base+0x78>
    95b4:	ldr	r3, [sp, #68]	; 0x44
    95b6:	mov	r2, r6
    95b8:	mov	r1, r4
    95ba:	mov	r0, r5
    95bc:	bl	8efa <btrfs_match_dir_item_name@@Base>
    95c0:	ldr	r2, [pc, #36]	; (95e8 <btrfs_lookup_dir_index@@Base+0x8c>)
    95c2:	ldr	r3, [pc, #32]	; (95e4 <btrfs_lookup_dir_index@@Base+0x88>)
    95c4:	add	r2, pc
    95c6:	ldr	r3, [r2, r3]
    95c8:	ldr	r2, [r3, #0]
    95ca:	ldr	r3, [sp, #28]
    95cc:	eors	r2, r3
    95ce:	beq.n	95da <btrfs_lookup_dir_index@@Base+0x7e>
    95d0:	blx	86b8 <__stack_chk_fail@plt>
    95d4:	mvn.w	r0, #1
    95d8:	b.n	95c0 <btrfs_lookup_dir_index@@Base+0x64>
    95da:	add	sp, #32
    95dc:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    95e0:			; <UNDEFINED> instruction: 0xb820
    95e2:	movs	r5, r0
    95e4:	lsls	r4, r4, #8
    95e6:	movs	r0, r0
    95e8:			; <UNDEFINED> instruction: 0xb7c4
    95ea:	movs	r5, r0

000095ec <btrfs_find_free_objectid@@Base>:
    95ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    95f0:	mov	sl, r0
    95f2:	vpush	{d8}
    95f6:	mov	r5, r1
    95f8:	ldr	r3, [pc, #444]	; (97b8 <btrfs_find_free_objectid@@Base+0x1cc>)
    95fa:	ldr	r2, [pc, #448]	; (97bc <btrfs_find_free_objectid@@Base+0x1d0>)
    95fc:	add	r3, pc
    95fe:	sub	sp, #140	; 0x8c
    9600:	add	r2, pc
    9602:	str	r3, [sp, #20]
    9604:	ldr	r3, [pc, #440]	; (97c0 <btrfs_find_free_objectid@@Base+0x1d4>)
    9606:	ldr.w	r8, [sp, #184]	; 0xb8
    960a:	ldr	r3, [r2, r3]
    960c:	ldr	r3, [r3, #0]
    960e:	str	r3, [sp, #132]	; 0x84
    9610:	mov.w	r3, #0
    9614:	bl	17df8 <btrfs_alloc_path@@Base>
    9618:	mov	r4, r0
    961a:	cmp	r0, #0
    961c:	beq.w	97a2 <btrfs_find_free_objectid@@Base+0x1b6>
    9620:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    9624:	mov.w	r9, #0
    9628:	strb.w	r9, [sp, #37]	; 0x25
    962c:	cmp	r7, #0
    962e:	strb.w	r9, [sp, #38]	; 0x26
    9632:	it	eq
    9634:	cmpeq.w	r6, #256	; 0x100
    9638:	strb.w	r9, [sp, #39]	; 0x27
    963c:	strb.w	r9, [sp, #40]	; 0x28
    9640:	itt	cc
    9642:	movcc.w	r6, #256	; 0x100
    9646:	movcc	r7, #0
    9648:	strb.w	r9, [sp, #41]	; 0x29
    964c:	strd	r6, r7, [sp, #28]
    9650:	strb.w	r9, [sp, #42]	; 0x2a
    9654:	strb.w	r9, [sp, #43]	; 0x2b
    9658:	strb.w	r9, [sp, #44]	; 0x2c
    965c:	strb.w	r9, [sp, #36]	; 0x24
    9660:	bl	17df0 <btrfs_init_path@@Base>
    9664:	mov	r3, r4
    9666:	add	r2, sp, #28
    9668:	mov	r1, r5
    966a:	mov	r0, sl
    966c:	strd	r9, r9, [sp]
    9670:	bl	1a1e4 <btrfs_search_slot@@Base>
    9674:	subs	r3, r0, #0
    9676:	blt.w	9784 <btrfs_find_free_objectid@@Base+0x198>
    967a:	ldr	r3, [r4, #32]
    967c:	cmp	r3, r9
    967e:	mov.w	r9, #0
    9682:	itt	gt
    9684:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    9688:	strgt	r3, [r4, #32]
    968a:	add	r3, sp, #48	; 0x30
    968c:	mov	fp, r9
    968e:	mov	sl, r9
    9690:	vmov	s16, r3
    9694:	ldr	r0, [r4, #0]
    9696:	ldr	r2, [r4, #32]
    9698:	ldr.w	r3, [r0, #192]	; 0xc0
    969c:	cmp	r2, r3
    969e:	bcc.n	9730 <btrfs_find_free_objectid@@Base+0x144>
    96a0:	movs	r3, #0
    96a2:	mov	r1, r4
    96a4:	strb.w	r3, [r4, #65]	; 0x41
    96a8:	ldr.w	r0, [r5, #464]	; 0x1d0
    96ac:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    96b0:	subs	r3, r0, #0
    96b2:	beq.n	9694 <btrfs_find_free_objectid@@Base+0xa8>
    96b4:	blt.n	9784 <btrfs_find_free_objectid@@Base+0x198>
    96b6:	cmp.w	r9, #0
    96ba:	bne.n	971a <btrfs_find_free_objectid@@Base+0x12e>
    96bc:	strd	r6, r7, [r8]
    96c0:	ldrd	r2, r3, [r8]
    96c4:	mov	r0, r4
    96c6:	strd	r2, r3, [r5, #504]	; 0x1f8
    96ca:	bl	17e26 <btrfs_free_path@@Base>
    96ce:	ldrd	r2, r3, [r8]
    96d2:	cmp	r3, r7
    96d4:	it	eq
    96d6:	cmpeq	r2, r6
    96d8:	bcs.n	97a8 <btrfs_find_free_objectid@@Base+0x1bc>
    96da:	ldr	r2, [sp, #20]
    96dc:	add	r4, sp, #68	; 0x44
    96de:	ldr	r3, [pc, #228]	; (97c4 <btrfs_find_free_objectid@@Base+0x1d8>)
    96e0:	movs	r1, #1
    96e2:	ldr	r0, [r2, r3]
    96e4:	ldr	r3, [pc, #224]	; (97c8 <btrfs_find_free_objectid@@Base+0x1dc>)
    96e6:	ldr	r2, [pc, #228]	; (97cc <btrfs_find_free_objectid@@Base+0x1e0>)
    96e8:	add	r3, pc
    96ea:	str	r3, [sp, #8]
    96ec:	ldr	r3, [pc, #224]	; (97d0 <btrfs_find_free_objectid@@Base+0x1e4>)
    96ee:	add	r2, pc
    96f0:	str	r1, [sp, #12]
    96f2:	add	r3, pc
    96f4:	str	r3, [sp, #4]
    96f6:	movs	r3, #98	; 0x62
    96f8:	str	r3, [sp, #0]
    96fa:	ldr	r3, [pc, #216]	; (97d4 <btrfs_find_free_objectid@@Base+0x1e8>)
    96fc:	ldr	r0, [r0, #0]
    96fe:	add	r3, pc
    9700:	blx	8a14 <__fprintf_chk@plt+0x4>
    9704:	movs	r1, #16
    9706:	mov	r0, r4
    9708:	blx	886c <backtrace@plt>
    970c:	movs	r2, #2
    970e:	mov	r1, r0
    9710:	mov	r0, r4
    9712:	blx	8b7c <backtrace_symbols_fd@plt>
    9716:	blx	8b34 <abort@plt>
    971a:	cmp	sl, r7
    971c:	mov	r2, fp
    971e:	it	eq
    9720:	cmpeq	fp, r6
    9722:	mov	r3, sl
    9724:	itt	cc
    9726:	movcc	r2, r6
    9728:	movcc	r3, r7
    972a:	strd	r2, r3, [r8]
    972e:	b.n	96c0 <btrfs_find_free_objectid@@Base+0xd4>
    9730:	movs	r3, #25
    9732:	vmov	r1, s16
    9736:	muls	r2, r3
    9738:	movs	r3, #17
    973a:	adds	r2, #101	; 0x65
    973c:	bl	172c2 <read_extent_buffer@@Base>
    9740:	ldrd	r2, r3, [sp, #48]	; 0x30
    9744:	cmp	r3, r7
    9746:	it	eq
    9748:	cmpeq	r2, r6
    974a:	bcc.n	9770 <btrfs_find_free_objectid@@Base+0x184>
    974c:	cmp.w	r9, #0
    9750:	beq.n	9770 <btrfs_find_free_objectid@@Base+0x184>
    9752:	cmp	sl, r7
    9754:	mov	r0, fp
    9756:	it	eq
    9758:	cmpeq	fp, r6
    975a:	mov	r1, sl
    975c:	itt	cc
    975e:	movcc	r0, r6
    9760:	movcc	r1, r7
    9762:	cmp	r1, r3
    9764:	it	eq
    9766:	cmpeq	r0, r2
    9768:	bcs.n	9770 <btrfs_find_free_objectid@@Base+0x184>
    976a:	strd	r0, r1, [r8]
    976e:	b.n	96c0 <btrfs_find_free_objectid@@Base+0xd4>
    9770:	adds.w	fp, r2, #1
    9774:	mov.w	r9, #1
    9778:	adc.w	sl, r3, #0
    977c:	ldr	r3, [r4, #32]
    977e:	adds	r3, #1
    9780:	str	r3, [r4, #32]
    9782:	b.n	9694 <btrfs_find_free_objectid@@Base+0xa8>
    9784:	mov	r0, r4
    9786:	str	r3, [sp, #20]
    9788:	bl	17e26 <btrfs_free_path@@Base>
    978c:	ldr	r3, [sp, #20]
    978e:	ldr	r1, [pc, #72]	; (97d8 <btrfs_find_free_objectid@@Base+0x1ec>)
    9790:	ldr	r2, [pc, #44]	; (97c0 <btrfs_find_free_objectid@@Base+0x1d4>)
    9792:	add	r1, pc
    9794:	ldr	r2, [r1, r2]
    9796:	ldr	r1, [r2, #0]
    9798:	ldr	r2, [sp, #132]	; 0x84
    979a:	eors	r1, r2
    979c:	beq.n	97ac <btrfs_find_free_objectid@@Base+0x1c0>
    979e:	blx	86b8 <__stack_chk_fail@plt>
    97a2:	mvn.w	r3, #11
    97a6:	b.n	978e <btrfs_find_free_objectid@@Base+0x1a2>
    97a8:	movs	r3, #0
    97aa:	b.n	978e <btrfs_find_free_objectid@@Base+0x1a2>
    97ac:	mov	r0, r3
    97ae:	add	sp, #140	; 0x8c
    97b0:	vpop	{d8}
    97b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    97b8:			; <UNDEFINED> instruction: 0xb78c
    97ba:	movs	r5, r0
    97bc:			; <UNDEFINED> instruction: 0xb788
    97be:	movs	r5, r0
    97c0:	lsls	r4, r4, #8
    97c2:	movs	r0, r0
    97c4:	lsls	r4, r6, #8
    97c6:	movs	r0, r0
    97c8:	lsls	r1, r3, #5
    97ca:	movs	r3, r0
    97cc:	lsls	r4, r6, #2
    97ce:	movs	r3, r0
    97d0:	lsls	r0, r5, #5
    97d2:	movs	r3, r0
    97d4:	lsls	r7, r6, #4
    97d6:	movs	r3, r0
    97d8:	push	{r1, r2, r4, r5, r6, r7, lr}
    97da:	movs	r5, r0
    97dc:	push	{r4, r5, lr}
    97de:	ldrd	r4, r5, [r0, #40]	; 0x28
    97e2:	ldrd	r0, r1, [r1, #40]	; 0x28
    97e6:	cmp	r1, r5
    97e8:	it	eq
    97ea:	cmpeq	r0, r4
    97ec:	bcc.n	9802 <btrfs_find_free_objectid@@Base+0x216>
    97ee:	cmp	r5, r1
    97f0:	it	eq
    97f2:	cmpeq	r4, r0
    97f4:	ite	cc
    97f6:	movcc.w	r0, #4294967295	; 0xffffffff
    97fa:	movcs	r0, #0
    97fc:	cbz	r2, 9800 <btrfs_find_free_objectid@@Base+0x214>
    97fe:	negs	r0, r0
    9800:	pop	{r4, r5, pc}
    9802:	movs	r0, #1
    9804:	b.n	97fc <btrfs_find_free_objectid@@Base+0x210>
    9806:	push	{r4, r5, lr}
    9808:	ldrd	r4, r5, [r0, #56]	; 0x38
    980c:	ldrd	r0, r1, [r1, #56]	; 0x38
    9810:	cmp	r1, r5
    9812:	it	eq
    9814:	cmpeq	r0, r4
    9816:	bcc.n	982c <btrfs_find_free_objectid@@Base+0x240>
    9818:	cmp	r5, r1
    981a:	it	eq
    981c:	cmpeq	r4, r0
    981e:	ite	cc
    9820:	movcc.w	r0, #4294967295	; 0xffffffff
    9824:	movcs	r0, #0
    9826:	cbz	r2, 982a <btrfs_find_free_objectid@@Base+0x23e>
    9828:	negs	r0, r0
    982a:	pop	{r4, r5, pc}
    982c:	movs	r0, #1
    982e:	b.n	9826 <btrfs_find_free_objectid@@Base+0x23a>
    9830:	push	{r4, r5, lr}
    9832:	ldrd	r4, r5, [r0, #72]	; 0x48
    9836:	ldrd	r0, r1, [r1, #72]	; 0x48
    983a:	cmp	r1, r5
    983c:	it	eq
    983e:	cmpeq	r0, r4
    9840:	bcc.n	9856 <btrfs_find_free_objectid@@Base+0x26a>
    9842:	cmp	r5, r1
    9844:	it	eq
    9846:	cmpeq	r4, r0
    9848:	ite	cc
    984a:	movcc.w	r0, #4294967295	; 0xffffffff
    984e:	movcs	r0, #0
    9850:	cbz	r2, 9854 <btrfs_find_free_objectid@@Base+0x268>
    9852:	negs	r0, r0
    9854:	pop	{r4, r5, pc}
    9856:	movs	r0, #1
    9858:	b.n	9850 <btrfs_find_free_objectid@@Base+0x264>
    985a:	push	{r4, r5, lr}
    985c:	ldrd	r4, r5, [r0, #96]	; 0x60
    9860:	ldrd	r0, r1, [r1, #96]	; 0x60
    9864:	cmp	r1, r5
    9866:	it	eq
    9868:	cmpeq	r0, r4
    986a:	bcc.n	9880 <btrfs_find_free_objectid@@Base+0x294>
    986c:	cmp	r5, r1
    986e:	it	eq
    9870:	cmpeq	r4, r0
    9872:	ite	cc
    9874:	movcc.w	r0, #4294967295	; 0xffffffff
    9878:	movcs	r0, #0
    987a:	cbz	r2, 987e <btrfs_find_free_objectid@@Base+0x292>
    987c:	negs	r0, r0
    987e:	pop	{r4, r5, pc}
    9880:	movs	r0, #1
    9882:	b.n	987a <btrfs_find_free_objectid@@Base+0x28e>
    9884:	push	{r4, r5, lr}
    9886:	ldrd	r4, r5, [r0, #104]	; 0x68
    988a:	ldrd	r0, r1, [r1, #104]	; 0x68
    988e:	cmp	r1, r5
    9890:	it	eq
    9892:	cmpeq	r0, r4
    9894:	bcc.n	98aa <btrfs_find_free_objectid@@Base+0x2be>
    9896:	cmp	r5, r1
    9898:	it	eq
    989a:	cmpeq	r4, r0
    989c:	ite	cc
    989e:	movcc.w	r0, #4294967295	; 0xffffffff
    98a2:	movcs	r0, #0
    98a4:	cbz	r2, 98a8 <btrfs_find_free_objectid@@Base+0x2bc>
    98a6:	negs	r0, r0
    98a8:	pop	{r4, r5, pc}
    98aa:	movs	r0, #1
    98ac:	b.n	98a4 <btrfs_find_free_objectid@@Base+0x2b8>
    98ae:	push	{r4, r5, lr}
    98b0:	mov	r4, r2
    98b2:	mov	r5, r3
    98b4:	orrs.w	r3, r4, r5
    98b8:	beq.n	98ce <btrfs_find_free_objectid@@Base+0x2e2>
    98ba:	ldrd	r4, r5, [r2, #40]	; 0x28
    98be:	ldrd	r2, r3, [r0, #40]	; 0x28
    98c2:	cmp	r5, r3
    98c4:	itte	eq
    98c6:	cmpeq	r4, r2
    98c8:	moveq	r0, #1
    98ca:	movne	r0, #0
    98cc:	pop	{r4, r5, pc}
    98ce:	movs	r0, #0
    98d0:	b.n	98cc <btrfs_find_free_objectid@@Base+0x2e0>
    98d2:	push	{r3, r4, r5, lr}
    98d4:	mov	r2, r0
    98d6:	mov	r3, r1
    98d8:	mov	r5, r0
    98da:	movs	r1, #0
    98dc:	ldr	r4, [r2, #0]
    98de:	cbnz	r4, 98f6 <btrfs_find_free_objectid@@Base+0x30a>
    98e0:	add.w	r0, r3, #24
    98e4:	strd	r1, r4, [r3, #24]
    98e8:	str	r4, [r3, #32]
    98ea:	mov	r1, r5
    98ec:	str	r0, [r2, #0]
    98ee:	bl	131d2 <rb_insert_color@@Base>
    98f2:	mov	r0, r4
    98f4:	pop	{r3, r4, r5, pc}
    98f6:	sub.w	r1, r4, #24
    98fa:	movs	r2, #0
    98fc:	mov	r0, r3
    98fe:	bl	97dc <btrfs_find_free_objectid@@Base+0x1f0>
    9902:	cmp	r0, #0
    9904:	bge.n	990e <btrfs_find_free_objectid@@Base+0x322>
    9906:	add.w	r2, r4, #8
    990a:	mov	r1, r4
    990c:	b.n	98dc <btrfs_find_free_objectid@@Base+0x2f0>
    990e:	beq.n	9914 <btrfs_find_free_objectid@@Base+0x328>
    9910:	adds	r2, r4, #4
    9912:	b.n	990a <btrfs_find_free_objectid@@Base+0x31e>
    9914:	mvn.w	r0, #16
    9918:	b.n	98f4 <btrfs_find_free_objectid@@Base+0x308>
    991a:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    991e:	mov	r5, r0
    9920:	mov	r0, r2
    9922:	ldr	r2, [pc, #144]	; (99b4 <btrfs_find_free_objectid@@Base+0x3c8>)
    9924:	mov	r1, r3
    9926:	ldr	r3, [pc, #144]	; (99b8 <btrfs_find_free_objectid@@Base+0x3cc>)
    9928:	add	r2, pc
    992a:	ldr	r3, [r2, r3]
    992c:	ldr	r3, [r3, #0]
    992e:	str	r3, [sp, #4]
    9930:	mov.w	r3, #0
    9934:	orrs.w	r3, r0, r1
    9938:	bne.n	9950 <btrfs_find_free_objectid@@Base+0x364>
    993a:	movs	r0, #0
    993c:	ldr	r2, [pc, #124]	; (99bc <btrfs_find_free_objectid@@Base+0x3d0>)
    993e:	ldr	r3, [pc, #120]	; (99b8 <btrfs_find_free_objectid@@Base+0x3cc>)
    9940:	add	r2, pc
    9942:	ldr	r3, [r2, r3]
    9944:	ldr	r2, [r3, #0]
    9946:	ldr	r3, [sp, #4]
    9948:	eors	r2, r3
    994a:	beq.n	99ae <btrfs_find_free_objectid@@Base+0x3c2>
    994c:	blx	86b8 <__stack_chk_fail@plt>
    9950:	ldrd	r2, r3, [r5, #40]	; 0x28
    9954:	ldrd	r6, r7, [r0, #40]	; 0x28
    9958:	cmp	r3, r7
    995a:	it	eq
    995c:	cmpeq	r2, r6
    995e:	bne.n	9964 <btrfs_find_free_objectid@@Base+0x378>
    9960:	movs	r0, #1
    9962:	b.n	993c <btrfs_find_free_objectid@@Base+0x350>
    9964:	mov	r8, sp
    9966:	mov	r1, r0
    9968:	mov	r0, r8
    996a:	movs	r3, #0
    996c:	str	r3, [sp, #0]
    996e:	bl	98d2 <btrfs_find_free_objectid@@Base+0x2e6>
    9972:	mov	r0, r8
    9974:	bl	134ee <rb_first@@Base>
    9978:	mov	r4, r0
    997a:	cmp	r0, #0
    997c:	beq.n	993a <btrfs_find_free_objectid@@Base+0x34e>
    997e:	ldr	r6, [r4, #104]	; 0x68
    9980:	add.w	sl, r4, #104	; 0x68
    9984:	cmp	sl, r6
    9986:	bne.n	9992 <btrfs_find_free_objectid@@Base+0x3a6>
    9988:	mov	r1, r8
    998a:	mov	r0, r4
    998c:	bl	13278 <rb_erase@@Base>
    9990:	b.n	9972 <btrfs_find_free_objectid@@Base+0x386>
    9992:	ldr	r1, [r6, #16]
    9994:	ldrd	r2, r3, [r5, #40]	; 0x28
    9998:	ldrd	fp, ip, [r1, #40]	; 0x28
    999c:	cmp	ip, r3
    999e:	it	eq
    99a0:	cmpeq	fp, r2
    99a2:	beq.n	9960 <btrfs_find_free_objectid@@Base+0x374>
    99a4:	mov	r0, r8
    99a6:	bl	98d2 <btrfs_find_free_objectid@@Base+0x2e6>
    99aa:	ldr	r6, [r6, #0]
    99ac:	b.n	9984 <btrfs_find_free_objectid@@Base+0x398>
    99ae:	add	sp, #8
    99b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    99b4:	push	{r5, r6}
    99b6:	movs	r5, r0
    99b8:	lsls	r4, r4, #8
    99ba:	movs	r0, r0
    99bc:	push	{r3, r6}
    99be:	movs	r5, r0
    99c0:	ldr	r3, [pc, #28]	; (99e0 <btrfs_find_free_objectid@@Base+0x3f4>)
    99c2:	movs	r2, #20
    99c4:	push	{r4, lr}
    99c6:	add	r3, pc
    99c8:	mla	r0, r2, r0, r3
    99cc:	ldr	r4, [r0, #16]
    99ce:	subs	r4, r4, r1
    99d0:	subs	r4, #1
    99d2:	bcs.n	99d6 <btrfs_find_free_objectid@@Base+0x3ea>
    99d4:	pop	{r4, pc}
    99d6:	movs	r0, #32
    99d8:	blx	8988 <putchar@plt+0x4>
    99dc:	b.n	99d0 <btrfs_find_free_objectid@@Base+0x3e4>
    99de:	nop
    99e0:			; <UNDEFINED> instruction: 0xb63e
    99e2:	movs	r5, r0
    99e4:	push	{r4, lr}
    99e6:	mov	r4, r3
    99e8:	bl	304a8 <pretty_size_mode@@Base>
    99ec:	ldr	r1, [pc, #16]	; (9a00 <btrfs_find_free_objectid@@Base+0x414>)
    99ee:	mov	r2, r4
    99f0:	ldmia.w	sp!, {r4, lr}
    99f4:	add	r1, pc
    99f6:	mov	r3, r0
    99f8:	movs	r0, #1
    99fa:	b.w	89e8 <__printf_chk@plt>
    99fe:	nop
    9a00:	cdp2	0, 7, cr0, cr15, cr2, {0}
    9a04:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a08:	mov	r9, r0
    9a0a:	ldr	r4, [r0, #0]
    9a0c:	mov	r7, r1
    9a0e:	mov	r8, r2
    9a10:	cbz	r4, 9a3c <btrfs_find_free_objectid@@Base+0x450>
    9a12:	ldr	r2, [r4, #16]
    9a14:	ldr	r5, [r4, #8]
    9a16:	add	r5, r2
    9a18:	ldr	r2, [r4, #24]
    9a1a:	add	r5, r2
    9a1c:	adds	r0, r5, r7
    9a1e:	movs	r1, #1
    9a20:	adds	r0, #9
    9a22:	lsls	r0, r0, #3
    9a24:	blx	8544 <calloc@plt+0x4>
    9a28:	mov	r6, r0
    9a2a:	cbnz	r0, 9a40 <btrfs_find_free_objectid@@Base+0x454>
    9a2c:	ldr	r0, [pc, #104]	; (9a98 <btrfs_find_free_objectid@@Base+0x4ac>)
    9a2e:	add	r0, pc
    9a30:	bl	17424 <__btrfs_error@@Base>
    9a34:	mvn.w	r0, #11
    9a38:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9a3c:	mov	r5, r4
    9a3e:	b.n	9a1c <btrfs_find_free_objectid@@Base+0x430>
    9a40:	cbz	r4, 9a88 <btrfs_find_free_objectid@@Base+0x49c>
    9a42:	ldrd	r2, r3, [r4, #8]
    9a46:	add.w	fp, r4, #72	; 0x48
    9a4a:	mov.w	sl, r8, lsl #3
    9a4e:	mov	r1, fp
    9a50:	strd	r2, r3, [r0, #8]
    9a54:	ldrd	r2, r3, [r4, #16]
    9a58:	strd	r2, r3, [r0, #16]
    9a5c:	ldrd	r2, r3, [r4, #24]
    9a60:	strd	r2, r3, [r0, #24]
    9a64:	add.w	r3, r0, #72	; 0x48
    9a68:	mov	r2, sl
    9a6a:	mov	r0, r3
    9a6c:	blx	8628 <memcpy@plt+0x4>
    9a70:	sub.w	r2, r5, r8
    9a74:	add.w	r1, fp, sl
    9a78:	lsls	r2, r2, #3
    9a7a:	mov	r3, r0
    9a7c:	add.w	r0, r8, r7
    9a80:	add.w	r0, r3, r0, lsl #3
    9a84:	blx	8628 <memcpy@plt+0x4>
    9a88:	mov	r0, r4
    9a8a:	blx	85dc <free@plt+0x4>
    9a8e:	movs	r0, #0
    9a90:	str.w	r6, [r9]
    9a94:	b.n	9a38 <btrfs_find_free_objectid@@Base+0x44c>
    9a96:	nop
    9a98:	cdp2	0, 4, cr0, cr9, cr2, {0}
    9a9c:	push	{r4, lr}
    9a9e:	sub	sp, #152	; 0x98
    9aa0:	ldr	r4, [pc, #72]	; (9aec <btrfs_find_free_objectid@@Base+0x500>)
    9aa2:	ldr	r1, [pc, #76]	; (9af0 <btrfs_find_free_objectid@@Base+0x504>)
    9aa4:	add	r4, pc
    9aa6:	ldr	r1, [r4, r1]
    9aa8:	mov	r4, sp
    9aaa:	ldr	r1, [r1, #0]
    9aac:	str	r1, [sp, #148]	; 0x94
    9aae:	mov.w	r1, #0
    9ab2:	strd	r2, r3, [sp, #40]	; 0x28
    9ab6:	mov	r3, r0
    9ab8:	cbnz	r3, 9ace <btrfs_find_free_objectid@@Base+0x4e2>
    9aba:	ldr	r1, [pc, #56]	; (9af4 <btrfs_find_free_objectid@@Base+0x508>)
    9abc:	ldr	r2, [pc, #48]	; (9af0 <btrfs_find_free_objectid@@Base+0x504>)
    9abe:	add	r1, pc
    9ac0:	ldr	r2, [r1, r2]
    9ac2:	ldr	r1, [r2, #0]
    9ac4:	ldr	r2, [sp, #148]	; 0x94
    9ac6:	eors	r1, r2
    9ac8:	beq.n	9ae6 <btrfs_find_free_objectid@@Base+0x4fa>
    9aca:	blx	86b8 <__stack_chk_fail@plt>
    9ace:	movs	r2, #0
    9ad0:	mov	r1, r3
    9ad2:	mov	r0, r4
    9ad4:	bl	97dc <btrfs_find_free_objectid@@Base+0x1f0>
    9ad8:	cmp	r0, #0
    9ada:	bge.n	9ae0 <btrfs_find_free_objectid@@Base+0x4f4>
    9adc:	ldr	r3, [r3, #8]
    9ade:	b.n	9ab8 <btrfs_find_free_objectid@@Base+0x4cc>
    9ae0:	beq.n	9aba <btrfs_find_free_objectid@@Base+0x4ce>
    9ae2:	ldr	r3, [r3, #4]
    9ae4:	b.n	9ab8 <btrfs_find_free_objectid@@Base+0x4cc>
    9ae6:	mov	r0, r3
    9ae8:	add	sp, #152	; 0x98
    9aea:	pop	{r4, pc}
    9aec:	uxtb	r4, r4
    9aee:	movs	r5, r0
    9af0:	lsls	r4, r4, #8
    9af2:	movs	r0, r0
    9af4:	uxtb	r2, r1
    9af6:	movs	r5, r0
    9af8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9afc:	movs	r1, #144	; 0x90
    9afe:	mov	r8, r0
    9b00:	movs	r0, #1
    9b02:	mov	r7, r2
    9b04:	mov	r6, r3
    9b06:	blx	8544 <calloc@plt+0x4>
    9b0a:	mov	r4, r0
    9b0c:	cbnz	r0, 9b20 <btrfs_find_free_objectid@@Base+0x534>
    9b0e:	ldr	r0, [pc, #124]	; (9b8c <btrfs_find_free_objectid@@Base+0x5a0>)
    9b10:	mvn.w	r4, #11
    9b14:	add	r0, pc
    9b16:	bl	17424 <__btrfs_error@@Base>
    9b1a:	mov	r0, r4
    9b1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9b20:	add.w	r3, r0, #128	; 0x80
    9b24:	movs	r2, #0
    9b26:	strd	r3, r3, [r0, #128]	; 0x80
    9b2a:	add.w	r3, r0, #136	; 0x88
    9b2e:	strd	r3, r3, [r0, #136]	; 0x88
    9b32:	mov	r3, r8
    9b34:	strd	r7, r6, [r0, #40]	; 0x28
    9b38:	ldr	r5, [r3, #0]
    9b3a:	cbnz	r5, 9b4e <btrfs_find_free_objectid@@Base+0x562>
    9b3c:	strd	r2, r5, [r4]
    9b40:	mov	r1, r8
    9b42:	str	r5, [r4, #8]
    9b44:	mov	r0, r4
    9b46:	str	r4, [r3, #0]
    9b48:	bl	131d2 <rb_insert_color@@Base>
    9b4c:	b.n	9b1a <btrfs_find_free_objectid@@Base+0x52e>
    9b4e:	movs	r2, #0
    9b50:	mov	r1, r5
    9b52:	mov	r0, r4
    9b54:	bl	97dc <btrfs_find_free_objectid@@Base+0x1f0>
    9b58:	cmp	r0, #0
    9b5a:	bge.n	9b64 <btrfs_find_free_objectid@@Base+0x578>
    9b5c:	add.w	r3, r5, #8
    9b60:	mov	r2, r5
    9b62:	b.n	9b38 <btrfs_find_free_objectid@@Base+0x54c>
    9b64:	beq.n	9b6a <btrfs_find_free_objectid@@Base+0x57e>
    9b66:	adds	r3, r5, #4
    9b68:	b.n	9b60 <btrfs_find_free_objectid@@Base+0x574>
    9b6a:	blx	8938 <__errno_location@plt>
    9b6e:	movs	r3, #17
    9b70:	mov	r2, r7
    9b72:	str	r3, [r0, #0]
    9b74:	mov	r3, r6
    9b76:	ldr	r0, [pc, #24]	; (9b90 <btrfs_find_free_objectid@@Base+0x5a4>)
    9b78:	add	r0, pc
    9b7a:	bl	17424 <__btrfs_error@@Base>
    9b7e:	mov	r0, r4
    9b80:	blx	85dc <free@plt+0x4>
    9b84:	mvn.w	r4, #16
    9b88:	b.n	9b1a <btrfs_find_free_objectid@@Base+0x52e>
    9b8a:	nop
    9b8c:	ldc2l	0, cr0, [r5, #-8]!
    9b90:	stc2	0, cr0, [sl, #-8]!
    9b94:	ldr.w	ip, [pc, #104]	; 9c00 <btrfs_find_free_objectid@@Base+0x614>
    9b98:	push	{r4, r5, lr}
    9b9a:	add	ip, pc
    9b9c:	ldr	r5, [pc, #100]	; (9c04 <btrfs_find_free_objectid@@Base+0x618>)
    9b9e:	sub	sp, #92	; 0x5c
    9ba0:	ldr	r4, [pc, #100]	; (9c08 <btrfs_find_free_objectid@@Base+0x61c>)
    9ba2:	ldr.w	r5, [ip, r5]
    9ba6:	add	r4, pc
    9ba8:	ldr	r5, [r5, #0]
    9baa:	str	r5, [sp, #84]	; 0x54
    9bac:	mov.w	r5, #0
    9bb0:	cbnz	r3, 9be6 <btrfs_find_free_objectid@@Base+0x5fa>
    9bb2:	ldr	r5, [pc, #88]	; (9c0c <btrfs_find_free_objectid@@Base+0x620>)
    9bb4:	ldr	r4, [r4, r5]
    9bb6:	strd	r2, r1, [sp]
    9bba:	movs	r1, #1
    9bbc:	strd	r0, r3, [sp, #8]
    9bc0:	ldr	r2, [pc, #76]	; (9c10 <btrfs_find_free_objectid@@Base+0x624>)
    9bc2:	ldr	r3, [pc, #80]	; (9c14 <btrfs_find_free_objectid@@Base+0x628>)
    9bc4:	ldr	r0, [r4, #0]
    9bc6:	add	r4, sp, #20
    9bc8:	add	r3, pc
    9bca:	add	r2, pc
    9bcc:	blx	8a14 <__fprintf_chk@plt+0x4>
    9bd0:	movs	r1, #16
    9bd2:	mov	r0, r4
    9bd4:	blx	886c <backtrace@plt>
    9bd8:	movs	r2, #2
    9bda:	mov	r1, r0
    9bdc:	mov	r0, r4
    9bde:	blx	8b7c <backtrace_symbols_fd@plt>
    9be2:	blx	8b34 <abort@plt>
    9be6:	ldr	r2, [pc, #48]	; (9c18 <btrfs_find_free_objectid@@Base+0x62c>)
    9be8:	ldr	r3, [pc, #24]	; (9c04 <btrfs_find_free_objectid@@Base+0x618>)
    9bea:	add	r2, pc
    9bec:	ldr	r3, [r2, r3]
    9bee:	ldr	r2, [r3, #0]
    9bf0:	ldr	r3, [sp, #84]	; 0x54
    9bf2:	eors	r2, r3
    9bf4:	beq.n	9bfa <btrfs_find_free_objectid@@Base+0x60e>
    9bf6:	blx	86b8 <__stack_chk_fail@plt>
    9bfa:	add	sp, #92	; 0x5c
    9bfc:	pop	{r4, r5, pc}
    9bfe:	nop
    9c00:	cbz	r6, 9c3e <btrfs_find_free_objectid@@Base+0x652>
    9c02:	movs	r5, r0
    9c04:	lsls	r4, r4, #8
    9c06:	movs	r0, r0
    9c08:	cbz	r2, 9c44 <btrfs_find_free_objectid@@Base+0x658>
    9c0a:	movs	r5, r0
    9c0c:	lsls	r4, r6, #8
    9c0e:	movs	r0, r0
    9c10:	stc2	0, cr0, [r5, #-8]
    9c14:	ldc2l	0, cr0, [lr], #8
    9c18:	cbz	r6, 9c42 <btrfs_find_free_objectid@@Base+0x656>
    9c1a:	movs	r5, r0
    9c1c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9c20:	mov	r5, r0
    9c22:	bl	134ee <rb_first@@Base>
    9c26:	ldr	r6, [pc, #112]	; (9c98 <btrfs_find_free_objectid@@Base+0x6ac>)
    9c28:	ldr	r7, [pc, #112]	; (9c9c <btrfs_find_free_objectid@@Base+0x6b0>)
    9c2a:	mov	r4, r0
    9c2c:	cbnz	r4, 9c32 <btrfs_find_free_objectid@@Base+0x646>
    9c2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9c32:	mov	r1, r5
    9c34:	mov	r0, r4
    9c36:	bl	13278 <rb_erase@@Base>
    9c3a:	add.w	r8, r4, #128	; 0x80
    9c3e:	ldr.w	r0, [r4, #128]	; 0x80
    9c42:	cmp	r0, r8
    9c44:	bne.n	9c62 <btrfs_find_free_objectid@@Base+0x676>
    9c46:	add.w	r8, r4, #136	; 0x88
    9c4a:	ldr.w	r0, [r4, #136]	; 0x88
    9c4e:	cmp	r0, r8
    9c50:	bne.n	9c78 <btrfs_find_free_objectid@@Base+0x68c>
    9c52:	mov	r0, r4
    9c54:	blx	85dc <free@plt+0x4>
    9c58:	mov	r0, r5
    9c5a:	bl	134ee <rb_first@@Base>
    9c5e:	mov	r4, r0
    9c60:	b.n	9c2c <btrfs_find_free_objectid@@Base+0x640>
    9c62:	ldrd	r2, r3, [r0]
    9c66:	str	r3, [r2, #4]
    9c68:	str	r2, [r3, #0]
    9c6a:	ldrd	r2, r3, [r0, #8]
    9c6e:	str	r3, [r2, #4]
    9c70:	str	r2, [r3, #0]
    9c72:	blx	85dc <free@plt+0x4>
    9c76:	b.n	9c3e <btrfs_find_free_objectid@@Base+0x652>
    9c78:	ldrd	r1, r2, [r0, #-8]
    9c7c:	str	r2, [r1, #4]
    9c7e:	str	r1, [r2, #0]
    9c80:	ldrd	r1, r2, [r0]
    9c84:	strd	r6, r7, [r0, #-8]
    9c88:	str	r2, [r1, #4]
    9c8a:	str	r1, [r2, #0]
    9c8c:	strd	r6, r7, [r0]
    9c90:	subs	r0, #8
    9c92:	blx	85dc <free@plt+0x4>
    9c96:	b.n	9c4a <btrfs_find_free_objectid@@Base+0x65e>
    9c98:	lsls	r0, r0, #4
    9c9a:	movs	r0, r2
    9c9c:	lsls	r0, r0, #8
    9c9e:	movs	r0, r4
    9ca0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ca4:	mov	r7, r2
    9ca6:	vpush	{d8-d9}
    9caa:	mov	r4, r1
    9cac:	vmov	s16, r0
    9cb0:	ldrd	r2, r3, [r1, #8]
    9cb4:	sub	sp, #92	; 0x5c
    9cb6:	strd	r2, r3, [sp, #56]	; 0x38
    9cba:	ldrd	r2, r3, [r1, #16]
    9cbe:	strd	r2, r3, [sp, #48]	; 0x30
    9cc2:	ldrd	r2, r3, [r1, #24]
    9cc6:	strd	r2, r3, [sp, #64]	; 0x40
    9cca:	ldrd	r2, r3, [r1, #32]
    9cce:	strd	r2, r3, [sp, #80]	; 0x50
    9cd2:	ldr	r3, [r1, #56]	; 0x38
    9cd4:	str	r3, [sp, #76]	; 0x4c
    9cd6:	ldr	r3, [r1, #60]	; 0x3c
    9cd8:	str	r3, [sp, #72]	; 0x48
    9cda:	movs	r3, #0
    9cdc:	str	r3, [r7, #0]
    9cde:	ldr	r3, [pc, #716]	; (9fac <btrfs_find_free_objectid@@Base+0x9c0>)
    9ce0:	add	r3, pc
    9ce2:	vmov	s19, r3
    9ce6:	vmov	r0, s16
    9cea:	mov	r2, r4
    9cec:	ldr	r1, [pc, #696]	; (9fa8 <btrfs_find_free_objectid@@Base+0x9bc>)
    9cee:	blx	8764 <ioctl@plt>
    9cf2:	subs.w	fp, r0, #0
    9cf6:	bge.n	9d14 <btrfs_find_free_objectid@@Base+0x728>
    9cf8:	blx	8938 <__errno_location@plt>
    9cfc:	ldr	r0, [r0, #0]
    9cfe:	cmp	r0, #2
    9d00:	beq.w	9fa0 <btrfs_find_free_objectid@@Base+0x9b4>
    9d04:	rsb	fp, r0, #0
    9d08:	mov	r0, fp
    9d0a:	add	sp, #92	; 0x5c
    9d0c:	vpop	{d8-d9}
    9d10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d14:	ldr	r3, [r4, #64]	; 0x40
    9d16:	cmp	r3, #0
    9d18:	beq.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9d1a:	movs	r3, #0
    9d1c:	str	r3, [sp, #16]
    9d1e:	mov	r5, r3
    9d20:	ldr	r3, [pc, #652]	; (9fb0 <btrfs_find_free_objectid@@Base+0x9c4>)
    9d22:	add	r3, pc
    9d24:	vmov	s17, r3
    9d28:	ldr	r3, [pc, #648]	; (9fb4 <btrfs_find_free_objectid@@Base+0x9c8>)
    9d2a:	add	r3, pc
    9d2c:	vmov	s18, r3
    9d30:	ldr	r3, [r4, #64]	; 0x40
    9d32:	ldr	r2, [sp, #16]
    9d34:	cmp	r2, r3
    9d36:	bcc.n	9d58 <btrfs_find_free_objectid@@Base+0x76c>
    9d38:	ldrd	r0, r1, [r4, #24]
    9d3c:	mov.w	r3, #4096	; 0x1000
    9d40:	str	r3, [r4, #64]	; 0x40
    9d42:	adds	r3, r1, #1
    9d44:	it	eq
    9d46:	cmpeq.w	r0, #4294967295	; 0xffffffff
    9d4a:	beq.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9d4c:	adds	r2, r0, #1
    9d4e:	adc.w	r3, r1, #0
    9d52:	strd	r2, r3, [r4, #24]
    9d56:	b.n	9ce6 <btrfs_find_free_objectid@@Base+0x6fa>
    9d58:	add.w	r6, r4, #104	; 0x68
    9d5c:	ldrd	r0, r1, [sp, #56]	; 0x38
    9d60:	add.w	r8, r6, r5
    9d64:	adds	r5, #32
    9d66:	ldr.w	r3, [r8, #8]
    9d6a:	ldr.w	r9, [r8, #16]
    9d6e:	ldr.w	sl, [r8, #20]
    9d72:	str	r3, [sp, #8]
    9d74:	ldr.w	r3, [r8, #12]
    9d78:	str	r3, [sp, #12]
    9d7a:	ldr.w	r3, [r8, #24]
    9d7e:	uxtb	r3, r3
    9d80:	str	r3, [sp, #20]
    9d82:	ldrd	r2, r3, [sp, #8]
    9d86:	cmp	r3, r1
    9d88:	it	eq
    9d8a:	cmpeq	r2, r0
    9d8c:	bcc.w	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9d90:	ldrd	r2, r3, [sp, #48]	; 0x30
    9d94:	ldrd	r0, r1, [sp, #8]
    9d98:	cmp	r3, r1
    9d9a:	it	eq
    9d9c:	cmpeq	r2, r0
    9d9e:	bcc.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9da0:	ldr	r3, [sp, #20]
    9da2:	ldr	r2, [sp, #76]	; 0x4c
    9da4:	cmp	r3, r2
    9da6:	bcc.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9da8:	ldr	r3, [sp, #72]	; 0x48
    9daa:	ldr	r2, [sp, #20]
    9dac:	cmp	r3, r2
    9dae:	bcc.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9db0:	ldrd	r2, r3, [sp, #64]	; 0x40
    9db4:	cmp	sl, r3
    9db6:	it	eq
    9db8:	cmpeq	r9, r2
    9dba:	bcc.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9dbc:	ldrd	r2, r3, [sp, #80]	; 0x50
    9dc0:	cmp	r3, sl
    9dc2:	it	eq
    9dc4:	cmpeq	r2, r9
    9dc6:	bcc.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9dc8:	ldr	r3, [sp, #20]
    9dca:	subs	r3, #240	; 0xf0
    9dcc:	cmp	r3, #6
    9dce:	bhi.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9dd0:	add	r2, pc, #8	; (adr r2, 9ddc <btrfs_find_free_objectid@@Base+0x7f0>)
    9dd2:	ldr.w	r3, [r2, r3, lsl #2]
    9dd6:	add	r2, r3
    9dd8:	bx	r2
    9dda:	nop
    9ddc:	movs	r5, r3
    9dde:	movs	r0, r0
    9de0:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9de4:	lsls	r7, r5, #1
    9de6:	movs	r0, r0
    9de8:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9dec:	lsls	r3, r3, #3
    9dee:	movs	r0, r0
    9df0:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9df4:	lsls	r1, r5, #4
    9df6:	movs	r0, r0
    9df8:	add	r6, r5
    9dfa:	movs	r3, #0
    9dfc:	ldr	r2, [r6, #16]
    9dfe:	and.w	r1, r2, #1
    9e02:	strd	r1, r3, [sp, #24]
    9e06:	ldrd	r0, r1, [sp, #24]
    9e0a:	orrs	r1, r0
    9e0c:	bne.n	9e1e <btrfs_find_free_objectid@@Base+0x832>
    9e0e:	vmov	r0, s18
    9e12:	bl	173a8 <__btrfs_warning@@Base>
    9e16:	cmp.w	fp, #0
    9e1a:	beq.n	9e98 <btrfs_find_free_objectid@@Base+0x8ac>
    9e1c:	b.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9e1e:	and.w	r1, r2, #2
    9e22:	strd	r1, r3, [sp, #32]
    9e26:	ldrd	r0, r1, [sp, #32]
    9e2a:	orrs	r1, r0
    9e2c:	beq.n	9e34 <btrfs_find_free_objectid@@Base+0x848>
    9e2e:	vmov	r0, s17
    9e32:	b.n	9e12 <btrfs_find_free_objectid@@Base+0x826>
    9e34:	and.w	r2, r2, #4
    9e38:	strd	r2, r3, [sp, #40]	; 0x28
    9e3c:	ldrd	r2, r3, [sp, #40]	; 0x28
    9e40:	orrs	r3, r2
    9e42:	beq.n	9e16 <btrfs_find_free_objectid@@Base+0x82a>
    9e44:	vmov	r0, s19
    9e48:	b.n	9e12 <btrfs_find_free_objectid@@Base+0x826>
    9e4a:	ldr	r0, [r7, #0]
    9e4c:	mov	r2, r9
    9e4e:	mov	r3, sl
    9e50:	bl	9a9c <btrfs_find_free_objectid@@Base+0x4b0>
    9e54:	cbnz	r0, 9e64 <btrfs_find_free_objectid@@Base+0x878>
    9e56:	mov	r2, r9
    9e58:	mov	r3, sl
    9e5a:	mov	r0, r7
    9e5c:	bl	9af8 <btrfs_find_free_objectid@@Base+0x50c>
    9e60:	cmp	r0, #0
    9e62:	beq.n	9f00 <btrfs_find_free_objectid@@Base+0x914>
    9e64:	cmn.w	r0, #4096	; 0x1000
    9e68:	bhi.n	9f00 <btrfs_find_free_objectid@@Base+0x914>
    9e6a:	adds	r3, r6, r5
    9e6c:	ldr	r1, [r6, r5]
    9e6e:	ldr	r2, [r3, #4]
    9e70:	strd	r1, r2, [r0, #48]	; 0x30
    9e74:	ldr	r1, [r3, #8]
    9e76:	ldr	r2, [r3, #12]
    9e78:	strd	r1, r2, [r0, #56]	; 0x38
    9e7c:	ldr	r1, [r3, #16]
    9e7e:	ldr	r2, [r3, #20]
    9e80:	strd	r1, r2, [r0, #64]	; 0x40
    9e84:	ldr	r2, [r3, #28]
    9e86:	ldr	r1, [r3, #24]
    9e88:	strd	r1, r2, [r0, #72]	; 0x48
    9e8c:	ldr	r2, [r3, #32]
    9e8e:	ldr	r3, [r3, #36]	; 0x24
    9e90:	strd	r2, r3, [r0, #80]	; 0x50
    9e94:	mov.w	fp, #0
    9e98:	ldr.w	r3, [r8, #28]
    9e9c:	strd	r9, sl, [r4, #24]
    9ea0:	add	r5, r3
    9ea2:	ldr	r3, [sp, #20]
    9ea4:	str	r3, [r4, #56]	; 0x38
    9ea6:	ldrd	r2, r3, [sp, #8]
    9eaa:	strd	r2, r3, [r4, #8]
    9eae:	ldr	r3, [sp, #16]
    9eb0:	adds	r3, #1
    9eb2:	str	r3, [sp, #16]
    9eb4:	b.n	9d30 <btrfs_find_free_objectid@@Base+0x744>
    9eb6:	ldr	r0, [r7, #0]
    9eb8:	mov	r2, r9
    9eba:	mov	r3, sl
    9ebc:	bl	9a9c <btrfs_find_free_objectid@@Base+0x4b0>
    9ec0:	cbnz	r0, 9ece <btrfs_find_free_objectid@@Base+0x8e2>
    9ec2:	mov	r2, r9
    9ec4:	mov	r3, sl
    9ec6:	mov	r0, r7
    9ec8:	bl	9af8 <btrfs_find_free_objectid@@Base+0x50c>
    9ecc:	cbz	r0, 9f00 <btrfs_find_free_objectid@@Base+0x914>
    9ece:	cmn.w	r0, #4096	; 0x1000
    9ed2:	bhi.n	9f00 <btrfs_find_free_objectid@@Base+0x914>
    9ed4:	adds	r3, r6, r5
    9ed6:	ldr	r1, [r6, r5]
    9ed8:	ldr	r2, [r3, #4]
    9eda:	strd	r1, r2, [r0, #88]	; 0x58
    9ede:	ldr	r1, [r3, #8]
    9ee0:	ldr	r2, [r3, #12]
    9ee2:	strd	r1, r2, [r0, #96]	; 0x60
    9ee6:	ldr	r1, [r3, #16]
    9ee8:	ldr	r2, [r3, #20]
    9eea:	strd	r1, r2, [r0, #104]	; 0x68
    9eee:	ldr	r2, [r3, #28]
    9ef0:	ldr	r1, [r3, #24]
    9ef2:	strd	r1, r2, [r0, #112]	; 0x70
    9ef6:	ldr	r2, [r3, #32]
    9ef8:	ldr	r3, [r3, #36]	; 0x24
    9efa:	strd	r2, r3, [r0, #120]	; 0x78
    9efe:	b.n	9e94 <btrfs_find_free_objectid@@Base+0x8a8>
    9f00:	mov	fp, r0
    9f02:	b.n	9e16 <btrfs_find_free_objectid@@Base+0x82a>
    9f04:	ldrd	r2, r3, [sp, #8]
    9f08:	cmp	sl, r3
    9f0a:	it	eq
    9f0c:	cmpeq	r9, r2
    9f0e:	bcs.n	9e16 <btrfs_find_free_objectid@@Base+0x82a>
    9f10:	ldr.w	fp, [r7]
    9f14:	mov	r2, r9
    9f16:	mov	r3, sl
    9f18:	mov	r0, fp
    9f1a:	bl	9a9c <btrfs_find_free_objectid@@Base+0x4b0>
    9f1e:	mov	r6, r0
    9f20:	cbnz	r0, 9f3e <btrfs_find_free_objectid@@Base+0x952>
    9f22:	uxth.w	r3, sl
    9f26:	strd	r9, r3, [sp]
    9f2a:	mov	r3, r0
    9f2c:	ldr	r0, [pc, #136]	; (9fb8 <btrfs_find_free_objectid@@Base+0x9cc>)
    9f2e:	mov.w	r2, sl, lsr #16
    9f32:	add	r0, pc
    9f34:	bl	17424 <__btrfs_error@@Base>
    9f38:	mvn.w	fp, #1
    9f3c:	b.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9f3e:	mov	r0, fp
    9f40:	ldrd	r2, r3, [sp, #8]
    9f44:	bl	9a9c <btrfs_find_free_objectid@@Base+0x4b0>
    9f48:	mov	fp, r0
    9f4a:	cbnz	r0, 9f62 <btrfs_find_free_objectid@@Base+0x976>
    9f4c:	ldrh.w	r3, [sp, #12]
    9f50:	ldr	r2, [sp, #8]
    9f52:	strd	r2, r3, [sp]
    9f56:	ldr	r3, [sp, #12]
    9f58:	lsrs	r2, r3, #16
    9f5a:	mov	r3, r0
    9f5c:	ldr	r0, [pc, #92]	; (9fbc <btrfs_find_free_objectid@@Base+0x9d0>)
    9f5e:	add	r0, pc
    9f60:	b.n	9f34 <btrfs_find_free_objectid@@Base+0x948>
    9f62:	movs	r0, #24
    9f64:	blx	8820 <malloc@plt+0x4>
    9f68:	cbnz	r0, 9f78 <btrfs_find_free_objectid@@Base+0x98c>
    9f6a:	ldr	r0, [pc, #84]	; (9fc0 <btrfs_find_free_objectid@@Base+0x9d4>)
    9f6c:	mvn.w	fp, #11
    9f70:	add	r0, pc
    9f72:	bl	17424 <__btrfs_error@@Base>
    9f76:	b.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9f78:	strd	fp, r6, [r0, #16]
    9f7c:	adds	r6, #128	; 0x80
    9f7e:	ldr	r3, [r6, #4]
    9f80:	add.w	r1, r0, #8
    9f84:	str	r0, [r6, #4]
    9f86:	strd	r6, r3, [r0]
    9f8a:	str	r0, [r3, #0]
    9f8c:	add.w	r3, fp, #136	; 0x88
    9f90:	ldr.w	r2, [fp, #140]	; 0x8c
    9f94:	str.w	r1, [fp, #140]	; 0x8c
    9f98:	strd	r3, r2, [r0, #8]
    9f9c:	str	r1, [r2, #0]
    9f9e:	b.n	9e94 <btrfs_find_free_objectid@@Base+0x8a8>
    9fa0:	mvn.w	fp, #24
    9fa4:	b.n	9d08 <btrfs_find_free_objectid@@Base+0x71c>
    9fa6:	nop
    9fa8:	str	r4, [sp, #68]	; 0x44
    9faa:	beq.n	9fae <btrfs_find_free_objectid@@Base+0x9c2>
    9fac:	ldc2l	0, cr0, [fp], #-8
    9fb0:	stc2	0, cr0, [r9], {2}
    9fb4:			; <UNDEFINED> instruction: 0xfbd20002
    9fb8:			; <UNDEFINED> instruction: 0xfa560002
    9fbc:			; <UNDEFINED> instruction: 0xfa2a0002
    9fc0:	ldrsb.w	r0, [r9, r2]
    9fc4:	push	{r4, r5, r6, r7, lr}
    9fc6:	mov	r5, r1
    9fc8:	ldr	r1, [pc, #168]	; (a074 <btrfs_find_free_objectid@@Base+0xa88>)
    9fca:	sub.w	sp, sp, #4096	; 0x1000
    9fce:	ldr	r2, [pc, #168]	; (a078 <btrfs_find_free_objectid@@Base+0xa8c>)
    9fd0:	sub	sp, #12
    9fd2:	add	r1, pc
    9fd4:	add.w	r3, sp, #4096	; 0x1000
    9fd8:	adds	r3, #4
    9fda:	mov.w	r6, #4096	; 0x1000
    9fde:	ldr	r2, [r1, r2]
    9fe0:	mov	r4, r0
    9fe2:	movs	r1, #0
    9fe4:	add	r7, sp, #8
    9fe6:	ldr	r2, [r2, #0]
    9fe8:	str	r2, [r3, #0]
    9fea:	mov.w	r2, #0
    9fee:	mov	r3, sp
    9ff0:	mov	r2, r6
    9ff2:	mov	r0, r3
    9ff4:	blx	8978 <memset@plt+0x4>
    9ff8:	movs	r1, #0
    9ffa:	movs	r2, #246	; 0xf6
    9ffc:	mov	r3, r0
    9ffe:	movs	r0, #8
    a000:	strd	r0, r1, [r7, #-8]
    a004:	mov.w	r0, #4294967295	; 0xffffffff
    a008:	mov.w	r1, #4294967295	; 0xffffffff
    a00c:	strd	r0, r1, [r3, #16]
    a010:	strd	r0, r1, [r3, #32]
    a014:	strd	r0, r1, [r3, #48]	; 0x30
    a018:	movs	r1, #240	; 0xf0
    a01a:	mov	r0, r4
    a01c:	strd	r1, r2, [r3, #56]	; 0x38
    a020:	mov	r2, r5
    a022:	mov	r1, r3
    a024:	str	r6, [r3, #64]	; 0x40
    a026:	bl	9ca0 <btrfs_find_free_objectid@@Base+0x6b4>
    a02a:	cmn.w	r0, #25
    a02e:	mov	r4, r0
    a030:	bne.n	a054 <btrfs_find_free_objectid@@Base+0xa68>
    a032:	ldr	r0, [pc, #72]	; (a07c <btrfs_find_free_objectid@@Base+0xa90>)
    a034:	add	r0, pc
    a036:	bl	17424 <__btrfs_error@@Base>
    a03a:	ldr	r1, [pc, #68]	; (a080 <btrfs_find_free_objectid@@Base+0xa94>)
    a03c:	add.w	r3, sp, #4096	; 0x1000
    a040:	ldr	r2, [pc, #52]	; (a078 <btrfs_find_free_objectid@@Base+0xa8c>)
    a042:	adds	r3, #4
    a044:	add	r1, pc
    a046:	ldr	r2, [r1, r2]
    a048:	ldr	r1, [r2, #0]
    a04a:	ldr	r2, [r3, #0]
    a04c:	eors	r1, r2
    a04e:	beq.n	a06a <btrfs_find_free_objectid@@Base+0xa7e>
    a050:	blx	86b8 <__stack_chk_fail@plt>
    a054:	cmp	r0, #0
    a056:	bge.n	a03a <btrfs_find_free_objectid@@Base+0xa4e>
    a058:	negs	r0, r0
    a05a:	blx	8838 <strerror@plt>
    a05e:	mov	r1, r0
    a060:	ldr	r0, [pc, #32]	; (a084 <btrfs_find_free_objectid@@Base+0xa98>)
    a062:	add	r0, pc
    a064:	bl	17424 <__btrfs_error@@Base>
    a068:	b.n	a03a <btrfs_find_free_objectid@@Base+0xa4e>
    a06a:	mov	r0, r4
    a06c:	add.w	sp, sp, #4096	; 0x1000
    a070:	add	sp, #12
    a072:	pop	{r4, r5, r6, r7, pc}
    a074:	add	r5, sp, #728	; 0x2d8
    a076:	movs	r5, r0
    a078:	lsls	r4, r4, #8
    a07a:	movs	r0, r0
    a07c:	ldr??.w	r0, [r5, r2]
    a080:	add	r5, sp, #272	; 0x110
    a082:	movs	r5, r0
    a084:	vld4.8	{d16-d19}, [lr], r2

0000a088 <btrfs_qgroup_setup_print_column@@Base>:
    a088:	cmp	r0, #7
    a08a:	ldr	r1, [pc, #68]	; (a0d0 <btrfs_qgroup_setup_print_column@@Base+0x48>)
    a08c:	push	{r4, lr}
    a08e:	mov	r4, r0
    a090:	ldr	r0, [pc, #64]	; (a0d4 <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    a092:	ite	hi
    a094:	movhi	r3, #0
    a096:	movls	r3, #1
    a098:	add	r1, pc
    a09a:	add	r0, pc
    a09c:	movs	r2, #143	; 0x8f
    a09e:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a0a2:	cmp	r4, #6
    a0a4:	bls.n	a0be <btrfs_qgroup_setup_print_column@@Base+0x36>
    a0a6:	ldr	r3, [pc, #48]	; (a0d8 <btrfs_qgroup_setup_print_column@@Base+0x50>)
    a0a8:	movs	r2, #1
    a0aa:	add	r3, pc
    a0ac:	str	r2, [r3, #8]
    a0ae:	str	r2, [r3, #28]
    a0b0:	str	r2, [r3, #48]	; 0x30
    a0b2:	str	r2, [r3, #68]	; 0x44
    a0b4:	str	r2, [r3, #88]	; 0x58
    a0b6:	str	r2, [r3, #108]	; 0x6c
    a0b8:	str.w	r2, [r3, #128]	; 0x80
    a0bc:	pop	{r4, pc}
    a0be:	ldr	r0, [pc, #28]	; (a0dc <btrfs_qgroup_setup_print_column@@Base+0x54>)
    a0c0:	movs	r3, #20
    a0c2:	add	r0, pc
    a0c4:	mla	r4, r3, r4, r0
    a0c8:	movs	r3, #1
    a0ca:	str	r3, [r4, #8]
    a0cc:	b.n	a0bc <btrfs_qgroup_setup_print_column@@Base+0x34>
    a0ce:	nop
    a0d0:	smlsd	r0, r0, r2, r0
    a0d4:	vst4.8	{d16-d19}, [sp], r2
    a0d8:	add	r7, sp, #360	; 0x168
    a0da:	movs	r5, r0
    a0dc:	add	r7, sp, #264	; 0x108
    a0de:	movs	r5, r0

0000a0e0 <btrfs_qgroup_setup_units@@Base>:
    a0e0:	ldr	r3, [pc, #12]	; (a0f0 <btrfs_qgroup_setup_units@@Base+0x10>)
    a0e2:	add	r3, pc
    a0e4:	str	r0, [r3, #32]
    a0e6:	str	r0, [r3, #52]	; 0x34
    a0e8:	str	r0, [r3, #72]	; 0x48
    a0ea:	str	r0, [r3, #92]	; 0x5c
    a0ec:	bx	lr
    a0ee:	nop
    a0f0:	add	r7, sp, #136	; 0x88
    a0f2:	movs	r5, r0

0000a0f4 <btrfs_qgroup_alloc_comparer_set@@Base>:
    a0f4:	push	{r3, lr}
    a0f6:	movs	r1, #88	; 0x58
    a0f8:	movs	r0, #1
    a0fa:	blx	8544 <calloc@plt+0x4>
    a0fe:	cbnz	r0, a10e <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    a100:	ldr	r0, [pc, #16]	; (a114 <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    a102:	add	r0, pc
    a104:	bl	17424 <__btrfs_error@@Base>
    a108:	movs	r0, #1
    a10a:	blx	88e4 <exit@plt>
    a10e:	movs	r2, #10
    a110:	str	r2, [r0, #0]
    a112:	pop	{r3, pc}
    a114:			; <UNDEFINED> instruction: 0xf7870002

0000a118 <btrfs_qgroup_setup_comparer@@Base>:
    a118:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    a11c:	mov	r6, r1
    a11e:	ldr	r4, [r0, #0]
    a120:	mov	r7, r0
    a122:	ldr	r1, [pc, #188]	; (a1e0 <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    a124:	mov	r8, r2
    a126:	subs	r3, r4, #0
    a128:	ldr	r0, [pc, #184]	; (a1e4 <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    a12a:	add	r1, pc
    a12c:	movw	r2, #457	; 0x1c9
    a130:	it	ne
    a132:	movne	r3, #1
    a134:	adds	r1, #32
    a136:	add	r0, pc
    a138:	str	r1, [sp, #4]
    a13a:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a13e:	cmp	r6, #4
    a140:	ldr	r0, [pc, #164]	; (a1e8 <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    a142:	mov.w	r2, #458	; 0x1ca
    a146:	ite	hi
    a148:	movhi	r3, #0
    a14a:	movls	r3, #1
    a14c:	ldr	r1, [sp, #4]
    a14e:	add	r0, pc
    a150:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a154:	ldrd	r9, r5, [r4]
    a158:	ldr	r0, [pc, #144]	; (a1ec <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    a15a:	movw	r2, #459	; 0x1cb
    a15e:	cmp	r5, r9
    a160:	ldr	r1, [sp, #4]
    a162:	add	r0, pc
    a164:	ite	gt
    a166:	movgt	r3, #0
    a168:	movle	r3, #1
    a16a:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a16e:	cmp	r5, r9
    a170:	bne.n	a1aa <btrfs_qgroup_setup_comparer@@Base+0x92>
    a172:	adds	r5, #11
    a174:	mov	r0, r4
    a176:	lsls	r1, r5, #3
    a178:	blx	86d4 <realloc@plt+0x4>
    a17c:	mov	r5, r0
    a17e:	cbnz	r0, a190 <btrfs_qgroup_setup_comparer@@Base+0x78>
    a180:	mov	r0, r4
    a182:	blx	85dc <free@plt+0x4>
    a186:	mvn.w	r0, #11
    a18a:	add	sp, #12
    a18c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a190:	ldr	r0, [r0, #0]
    a192:	movs	r2, #80	; 0x50
    a194:	movs	r1, #0
    a196:	mov	r4, r5
    a198:	adds	r0, #1
    a19a:	add.w	r0, r5, r0, lsl #3
    a19e:	blx	8978 <memset@plt+0x4>
    a1a2:	ldr	r3, [r5, #0]
    a1a4:	adds	r3, #10
    a1a6:	str	r3, [r5, #0]
    a1a8:	str	r5, [r7, #0]
    a1aa:	ldr	r5, [r4, #4]
    a1ac:	movw	r2, #481	; 0x1e1
    a1b0:	ldr	r1, [pc, #60]	; (a1f0 <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    a1b2:	ldr	r0, [pc, #64]	; (a1f4 <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    a1b4:	add.w	r7, r4, r5, lsl #3
    a1b8:	add	r1, pc
    a1ba:	add	r0, pc
    a1bc:	adds	r1, #32
    a1be:	ldr	r3, [r7, #8]
    a1c0:	adds	r5, #1
    a1c2:	clz	r3, r3
    a1c6:	lsrs	r3, r3, #5
    a1c8:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a1cc:	ldr	r3, [pc, #40]	; (a1f8 <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    a1ce:	movs	r0, #0
    a1d0:	add	r3, pc
    a1d2:	ldr.w	r3, [r3, r6, lsl #2]
    a1d6:	strd	r3, r8, [r7, #8]
    a1da:	str	r5, [r4, #4]
    a1dc:	b.n	a18a <btrfs_qgroup_setup_comparer@@Base+0x72>
    a1de:	nop
    a1e0:			; <UNDEFINED> instruction: 0xfaae0002
    a1e4:	ldr.w	r0, [fp, #2]
    a1e8:	str.w	r0, [pc, #2]	; a1ee <btrfs_qgroup_setup_comparer@@Base+0xd6>
    a1ec:	ldr.w	r0, [ip, #2]
    a1f0:			; <UNDEFINED> instruction: 0xfa200002
    a1f4:	ldrb.w	r0, [lr, #2]
    a1f8:	add	r4, pc, #48	; (adr r4, a22c <btrfs_qgroup_setup_filter@@Base+0xc>)
    a1fa:	movs	r5, r0

0000a1fc <btrfs_qgroup_alloc_filter_set@@Base>:
    a1fc:	push	{r3, lr}
    a1fe:	movs	r1, #72	; 0x48
    a200:	movs	r0, #1
    a202:	blx	8544 <calloc@plt+0x4>
    a206:	cbnz	r0, a216 <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    a208:	ldr	r0, [pc, #16]	; (a21c <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    a20a:	add	r0, pc
    a20c:	bl	17424 <__btrfs_error@@Base>
    a210:	movs	r0, #1
    a212:	blx	88e4 <exit@plt>
    a216:	movs	r2, #4
    a218:	str	r2, [r0, #0]
    a21a:	pop	{r3, pc}
    a21c:			; <UNDEFINED> instruction: 0xf67f0002

0000a220 <btrfs_qgroup_setup_filter@@Base>:
    a220:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    a224:	mov	r8, r1
    a226:	ldr	r4, [r0, #0]
    a228:	mov	r9, r0
    a22a:	ldr	r1, [pc, #216]	; (a304 <btrfs_qgroup_setup_filter@@Base+0xe4>)
    a22c:	mov	r6, r3
    a22e:	ldr	r0, [pc, #216]	; (a308 <btrfs_qgroup_setup_filter@@Base+0xe8>)
    a230:	subs	r3, r4, #0
    a232:	add	r1, pc
    a234:	mov	r7, r2
    a236:	it	ne
    a238:	movne	r3, #1
    a23a:	adds	r1, #60	; 0x3c
    a23c:	add	r0, pc
    a23e:	mov.w	r2, #836	; 0x344
    a242:	str	r1, [sp, #4]
    a244:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a248:	cmp.w	r8, #1
    a24c:	ldr	r0, [pc, #188]	; (a30c <btrfs_qgroup_setup_filter@@Base+0xec>)
    a24e:	ldr	r1, [sp, #4]
    a250:	movw	r2, #837	; 0x345
    a254:	ite	hi
    a256:	movhi	r3, #0
    a258:	movls	r3, #1
    a25a:	add	r0, pc
    a25c:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a260:	ldrd	sl, r5, [r4]
    a264:	ldr	r0, [pc, #168]	; (a310 <btrfs_qgroup_setup_filter@@Base+0xf0>)
    a266:	movw	r2, #838	; 0x346
    a26a:	cmp	r5, sl
    a26c:	ldr	r1, [sp, #4]
    a26e:	add	r0, pc
    a270:	ite	gt
    a272:	movgt	r3, #0
    a274:	movle	r3, #1
    a276:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a27a:	cmp	r5, sl
    a27c:	bne.n	a2be <btrfs_qgroup_setup_filter@@Base+0x9e>
    a27e:	lsls	r5, r5, #4
    a280:	mov	r0, r4
    a282:	add.w	r1, r5, #72	; 0x48
    a286:	blx	86d4 <realloc@plt+0x4>
    a28a:	mov	r5, r0
    a28c:	cbnz	r0, a2a2 <btrfs_qgroup_setup_filter@@Base+0x82>
    a28e:	ldr	r0, [pc, #132]	; (a314 <btrfs_qgroup_setup_filter@@Base+0xf4>)
    a290:	add	r0, pc
    a292:	bl	17424 <__btrfs_error@@Base>
    a296:	mov	r0, r4
    a298:	blx	85dc <free@plt+0x4>
    a29c:	movs	r0, #1
    a29e:	blx	88e4 <exit@plt>
    a2a2:	ldr	r0, [r0, #0]
    a2a4:	movs	r2, #64	; 0x40
    a2a6:	movs	r1, #0
    a2a8:	mov	r4, r5
    a2aa:	add.w	r0, r5, r0, lsl #4
    a2ae:	adds	r0, #8
    a2b0:	blx	8978 <memset@plt+0x4>
    a2b4:	ldr	r3, [r5, #0]
    a2b6:	adds	r3, #4
    a2b8:	str	r3, [r5, #0]
    a2ba:	str.w	r5, [r9]
    a2be:	ldr	r5, [r4, #4]
    a2c0:	mov.w	r2, #860	; 0x35c
    a2c4:	ldr	r1, [pc, #80]	; (a318 <btrfs_qgroup_setup_filter@@Base+0xf8>)
    a2c6:	ldr	r0, [pc, #84]	; (a31c <btrfs_qgroup_setup_filter@@Base+0xfc>)
    a2c8:	add.w	r9, r4, r5, lsl #4
    a2cc:	add	r1, pc
    a2ce:	adds	r1, #60	; 0x3c
    a2d0:	add	r0, pc
    a2d2:	ldr.w	r3, [r9, #8]
    a2d6:	adds	r5, #1
    a2d8:	clz	r3, r3
    a2dc:	lsrs	r3, r3, #5
    a2de:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a2e2:	ldr	r1, [pc, #60]	; (a320 <btrfs_qgroup_setup_filter@@Base+0x100>)
    a2e4:	movs	r0, #0
    a2e6:	add	r1, pc
    a2e8:	add.w	r8, r1, r8, lsl #2
    a2ec:	ldr.w	r3, [r8, #20]
    a2f0:	str.w	r3, [r9, #8]
    a2f4:	add.w	r3, r4, r5, lsl #4
    a2f8:	strd	r7, r6, [r3]
    a2fc:	str	r5, [r4, #4]
    a2fe:	add	sp, #8
    a300:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a304:	vld1.8	{d0[0]}, [r6], r2
    a308:			; <UNDEFINED> instruction: 0xf7d50002
    a30c:	strh.w	r0, [r8, r2]
    a310:	ldrh.w	r0, [r5, r2]
    a314:			; <UNDEFINED> instruction: 0xf5f90002
    a318:	vst4.8	{d0-d3}, [ip], r2
    a31c:			; <UNDEFINED> instruction: 0xf7ef0002
    a320:	add	r2, pc, #984	; (adr r2, a6fc <btrfs_show_qgroups@@Base+0x2e0>)
    a322:	movs	r5, r0

0000a324 <btrfs_qgroup_query@@Base>:
    a324:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a328:	sub.w	sp, sp, #4096	; 0x1000
    a32c:	sub	sp, #16
    a32e:	ldr	r1, [pc, #224]	; (a410 <btrfs_qgroup_query@@Base+0xec>)
    a330:	mov	r7, r2
    a332:	mov	r6, r3
    a334:	ldr	r2, [pc, #220]	; (a414 <btrfs_qgroup_query@@Base+0xf0>)
    a336:	add.w	r3, sp, #4128	; 0x1020
    a33a:	add	r1, pc
    a33c:	add	r4, sp, #8
    a33e:	ldr	r5, [r3, #16]
    a340:	adds	r3, #16
    a342:	ldr	r2, [r1, r2]
    a344:	add.w	r3, sp, #4096	; 0x1000
    a348:	add.w	r8, sp, #16
    a34c:	mov.w	sl, #4096	; 0x1000
    a350:	ldr	r2, [r2, #0]
    a352:	str	r2, [r3, #12]
    a354:	mov.w	r2, #0
    a358:	mov	r9, r0
    a35a:	mov	r2, sl
    a35c:	mov	r0, r4
    a35e:	movs	r1, #0
    a360:	adds	r3, #12
    a362:	blx	8978 <memset@plt+0x4>
    a366:	movs	r0, #8
    a368:	movs	r1, #0
    a36a:	mov.w	r2, #4294967295	; 0xffffffff
    a36e:	strd	r0, r1, [r8, #-8]
    a372:	mov.w	r3, #4294967295	; 0xffffffff
    a376:	strd	r7, r6, [r8, #16]
    a37a:	mov	r1, r4
    a37c:	strd	r2, r3, [r8, #40]	; 0x28
    a380:	movs	r2, #242	; 0xf2
    a382:	movs	r3, #244	; 0xf4
    a384:	strd	r7, r6, [r8, #24]
    a388:	strd	r2, r3, [r8, #48]	; 0x30
    a38c:	mov	r0, r9
    a38e:	str.w	sl, [r8, #56]	; 0x38
    a392:	sub.w	r8, r8, #12
    a396:	mov	r2, r8
    a398:	bl	9ca0 <btrfs_find_free_objectid@@Base+0x6b4>
    a39c:	subs	r4, r0, #0
    a39e:	blt.n	a3e4 <btrfs_qgroup_query@@Base+0xc0>
    a3a0:	mov	r0, r8
    a3a2:	bl	134ee <rb_first@@Base>
    a3a6:	mov	r4, r0
    a3a8:	cbz	r0, a3fe <btrfs_qgroup_query@@Base+0xda>
    a3aa:	ldrd	r2, r3, [r0, #40]	; 0x28
    a3ae:	add.w	r7, r0, #48	; 0x30
    a3b2:	mov	r6, r5
    a3b4:	adds	r4, #88	; 0x58
    a3b6:	adds	r5, #48	; 0x30
    a3b8:	strd	r2, r3, [r6], #8
    a3bc:	ldmia	r7!, {r0, r1, r2, r3}
    a3be:	stmia	r6!, {r0, r1, r2, r3}
    a3c0:	ldmia	r7!, {r0, r1, r2, r3}
    a3c2:	stmia	r6!, {r0, r1, r2, r3}
    a3c4:	ldmia.w	r7, {r0, r1}
    a3c8:	stmia.w	r6, {r0, r1}
    a3cc:	ldmia	r4!, {r0, r1, r2, r3}
    a3ce:	stmia	r5!, {r0, r1, r2, r3}
    a3d0:	ldmia	r4!, {r0, r1, r2, r3}
    a3d2:	stmia	r5!, {r0, r1, r2, r3}
    a3d4:	ldmia.w	r4, {r0, r1}
    a3d8:	movs	r4, #0
    a3da:	stmia.w	r5, {r0, r1}
    a3de:	mov	r0, r8
    a3e0:	bl	9c1c <btrfs_find_free_objectid@@Base+0x630>
    a3e4:	ldr	r1, [pc, #48]	; (a418 <btrfs_qgroup_query@@Base+0xf4>)
    a3e6:	add.w	r3, sp, #4096	; 0x1000
    a3ea:	ldr	r2, [pc, #40]	; (a414 <btrfs_qgroup_query@@Base+0xf0>)
    a3ec:	adds	r3, #12
    a3ee:	add	r1, pc
    a3f0:	ldr	r2, [r1, r2]
    a3f2:	ldr	r1, [r2, #0]
    a3f4:	ldr	r2, [r3, #0]
    a3f6:	eors	r1, r2
    a3f8:	beq.n	a404 <btrfs_qgroup_query@@Base+0xe0>
    a3fa:	blx	86b8 <__stack_chk_fail@plt>
    a3fe:	mvn.w	r4, #60	; 0x3c
    a402:	b.n	a3de <btrfs_qgroup_query@@Base+0xba>
    a404:	mov	r0, r4
    a406:	add.w	sp, sp, #4096	; 0x1000
    a40a:	add	sp, #16
    a40c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a410:	add	r2, sp, #312	; 0x138
    a412:	movs	r5, r0
    a414:	lsls	r4, r4, #8
    a416:	movs	r0, r0
    a418:	add	r1, sp, #616	; 0x268
    a41a:	movs	r5, r0

0000a41c <btrfs_show_qgroups@@Base>:
    a41c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a420:	mov	fp, r1
    a422:	vpush	{d8}
    a426:	ldr.w	r3, [pc, #1460]	; a9dc <btrfs_show_qgroups@@Base+0x5c0>
    a42a:	sub	sp, #164	; 0xa4
    a42c:	add	r6, sp, #48	; 0x30
    a42e:	str	r2, [sp, #20]
    a430:	ldr.w	r2, [pc, #1452]	; a9e0 <btrfs_show_qgroups@@Base+0x5c4>
    a434:	mov	r1, r6
    a436:	add	r2, pc
    a438:	ldr	r3, [r2, r3]
    a43a:	ldr	r3, [r3, #0]
    a43c:	str	r3, [sp, #156]	; 0x9c
    a43e:	mov.w	r3, #0
    a442:	bl	9fc4 <btrfs_find_free_objectid@@Base+0x9d8>
    a446:	str	r0, [sp, #16]
    a448:	cmp	r0, #0
    a44a:	bne.n	a52e <btrfs_show_qgroups@@Base+0x112>
    a44c:	ldr.w	r9, [pc, #1428]	; a9e4 <btrfs_show_qgroups@@Base+0x5c8>
    a450:	mov	r4, fp
    a452:	ldr.w	sl, [pc, #1428]	; a9e8 <btrfs_show_qgroups@@Base+0x5cc>
    a456:	mov	r5, r0
    a458:	ldr.w	r7, [fp, #4]
    a45c:	add	r9, pc
    a45e:	ldr.w	r8, [sp, #48]	; 0x30
    a462:	add	sl, pc
    a464:	str	r0, [sp, #52]	; 0x34
    a466:	cmp	r5, r7
    a468:	blt.n	a548 <btrfs_show_qgroups@@Base+0x12c>
    a46a:	mov	r0, r6
    a46c:	bl	134fe <rb_last@@Base>
    a470:	ldr.w	r3, [pc, #1400]	; a9ec <btrfs_show_qgroups@@Base+0x5d0>
    a474:	add	r3, pc
    a476:	adds	r3, #86	; 0x56
    a478:	vmov	s17, r3
    a47c:	mov	r4, r0
    a47e:	cmp	r4, #0
    a480:	bne.n	a568 <btrfs_show_qgroups@@Base+0x14c>
    a482:	ldr.w	r3, [pc, #1388]	; a9f0 <btrfs_show_qgroups@@Base+0x5d4>
    a486:	ldr.w	r6, [pc, #1388]	; a9f4 <btrfs_show_qgroups@@Base+0x5d8>
    a48a:	ldr.w	r7, [pc, #1388]	; a9f8 <btrfs_show_qgroups@@Base+0x5dc>
    a48e:	add	r3, pc
    a490:	add	r6, pc
    a492:	str	r3, [sp, #20]
    a494:	add	r7, pc
    a496:	mov	r5, r3
    a498:	ldr	r3, [r5, #8]
    a49a:	cbz	r3, a4ba <btrfs_show_qgroups@@Base+0x9e>
    a49c:	subs	r3, r4, #5
    a49e:	ldr	r2, [r5, #16]
    a4a0:	cmp	r3, #1
    a4a2:	ldr	r3, [r5, #0]
    a4a4:	bls.n	a4ac <btrfs_show_qgroups@@Base+0x90>
    a4a6:	cmp	r4, #0
    a4a8:	bne.w	a7c8 <btrfs_show_qgroups@@Base+0x3ac>
    a4ac:	mov	r1, r6
    a4ae:	movs	r0, #1
    a4b0:	blx	89ec <__printf_chk@plt+0x4>
    a4b4:	movs	r0, #32
    a4b6:	blx	8988 <putchar@plt+0x4>
    a4ba:	adds	r4, #1
    a4bc:	adds	r5, #20
    a4be:	cmp	r4, #7
    a4c0:	bne.n	a498 <btrfs_show_qgroups@@Base+0x7c>
    a4c2:	movs	r0, #10
    a4c4:	movs	r6, #0
    a4c6:	blx	8988 <putchar@plt+0x4>
    a4ca:	ldr	r4, [sp, #20]
    a4cc:	ldr	r3, [r4, #8]
    a4ce:	cbz	r3, a500 <btrfs_show_qgroups@@Base+0xe4>
    a4d0:	subs	r3, r6, #5
    a4d2:	ldr	r5, [r4, #16]
    a4d4:	cmp	r3, #1
    a4d6:	ldr	r0, [r4, #0]
    a4d8:	bls.n	a4e0 <btrfs_show_qgroups@@Base+0xc4>
    a4da:	cmp	r6, #0
    a4dc:	bne.w	a7dc <btrfs_show_qgroups@@Base+0x3c0>
    a4e0:	blx	88f0 <strlen@plt>
    a4e4:	mov	r7, r0
    a4e6:	subs	r7, #1
    a4e8:	bcs.w	a7cc <btrfs_show_qgroups@@Base+0x3b0>
    a4ec:	ldr	r0, [r4, #0]
    a4ee:	blx	88f0 <strlen@plt>
    a4f2:	subs	r5, r5, r0
    a4f4:	subs	r5, #1
    a4f6:	bcs.w	a7d4 <btrfs_show_qgroups@@Base+0x3b8>
    a4fa:	movs	r0, #32
    a4fc:	blx	8988 <putchar@plt+0x4>
    a500:	adds	r6, #1
    a502:	adds	r4, #20
    a504:	cmp	r6, #7
    a506:	bne.n	a4cc <btrfs_show_qgroups@@Base+0xb0>
    a508:	movs	r0, #10
    a50a:	blx	8988 <putchar@plt+0x4>
    a50e:	add	r0, sp, #52	; 0x34
    a510:	bl	134ee <rb_first@@Base>
    a514:	ldr.w	r3, [pc, #1252]	; a9fc <btrfs_show_qgroups@@Base+0x5e0>
    a518:	add	r3, pc
    a51a:	adds	r3, #111	; 0x6f
    a51c:	vmov	s17, r3
    a520:	mov	r4, r0
    a522:	cmp	r4, #0
    a524:	bne.w	a804 <btrfs_show_qgroups@@Base+0x3e8>
    a528:	add	r0, sp, #48	; 0x30
    a52a:	bl	9c1c <btrfs_find_free_objectid@@Base+0x630>
    a52e:	ldr.w	r2, [pc, #1232]	; aa00 <btrfs_show_qgroups@@Base+0x5e4>
    a532:	ldr.w	r3, [pc, #1192]	; a9dc <btrfs_show_qgroups@@Base+0x5c0>
    a536:	add	r2, pc
    a538:	ldr	r3, [r2, r3]
    a53a:	ldr	r2, [r3, #0]
    a53c:	ldr	r3, [sp, #156]	; 0x9c
    a53e:	eors	r2, r3
    a540:	beq.w	a9d0 <btrfs_show_qgroups@@Base+0x5b4>
    a544:	blx	86b8 <__stack_chk_fail@plt>
    a548:	ldr	r3, [r4, #8]
    a54a:	cmp	r3, r9
    a54c:	beq.n	a552 <btrfs_show_qgroups@@Base+0x136>
    a54e:	cmp	r3, sl
    a550:	bne.n	a562 <btrfs_show_qgroups@@Base+0x146>
    a552:	ldrd	r2, r3, [r4, #16]
    a556:	mov	r0, r8
    a558:	bl	9a9c <btrfs_find_free_objectid@@Base+0x4b0>
    a55c:	movs	r1, #0
    a55e:	str	r1, [r4, #20]
    a560:	str	r0, [r4, #16]
    a562:	adds	r5, #1
    a564:	adds	r4, #16
    a566:	b.n	a466 <btrfs_show_qgroups@@Base+0x4a>
    a568:	ldr.w	r3, [fp, #4]
    a56c:	cbnz	r3, a5ba <btrfs_show_qgroups@@Base+0x19e>
    a56e:	add	r5, sp, #52	; 0x34
    a570:	ldr.w	r2, [pc, #1168]	; aa04 <btrfs_show_qgroups@@Base+0x5e8>
    a574:	movs	r3, #0
    a576:	mov	sl, r5
    a578:	add	r2, pc
    a57a:	str	r2, [sp, #40]	; 0x28
    a57c:	ldr	r6, [r5, #0]
    a57e:	cbnz	r6, a5c0 <btrfs_show_qgroups@@Base+0x1a4>
    a580:	add.w	r0, r4, #12
    a584:	strd	r3, r6, [r4, #12]
    a588:	str	r6, [r4, #20]
    a58a:	mov	r1, sl
    a58c:	str	r0, [r5, #0]
    a58e:	bl	131d2 <rb_insert_color@@Base>
    a592:	b.n	a5fc <btrfs_show_qgroups@@Base+0x1e0>
    a594:	adds	r5, #1
    a596:	ldr.w	r3, [fp, #4]
    a59a:	cmp	r5, r3
    a59c:	bge.n	a56e <btrfs_show_qgroups@@Base+0x152>
    a59e:	ldr	r1, [r6, #8]
    a5a0:	cmp	r1, #0
    a5a2:	beq.n	a56e <btrfs_show_qgroups@@Base+0x152>
    a5a4:	ldrd	r2, r3, [r6, #16]!
    a5a8:	mov	r0, r4
    a5aa:	blx	r1
    a5ac:	cmp	r0, #0
    a5ae:	bne.n	a594 <btrfs_show_qgroups@@Base+0x178>
    a5b0:	mov	r0, r4
    a5b2:	bl	1353a <rb_prev@@Base>
    a5b6:	mov	r4, r0
    a5b8:	b.n	a47e <btrfs_show_qgroups@@Base+0x62>
    a5ba:	mov	r6, fp
    a5bc:	movs	r5, #0
    a5be:	b.n	a596 <btrfs_show_qgroups@@Base+0x17a>
    a5c0:	ldr	r3, [sp, #20]
    a5c2:	sub.w	r1, r6, #12
    a5c6:	cbnz	r3, a5de <btrfs_show_qgroups@@Base+0x1c2>
    a5c8:	movs	r2, #0
    a5ca:	mov	r0, r4
    a5cc:	bl	97dc <btrfs_find_free_objectid@@Base+0x1f0>
    a5d0:	cmp	r0, #0
    a5d2:	blt.w	a9c8 <btrfs_show_qgroups@@Base+0x5ac>
    a5d6:	beq.n	a5fc <btrfs_show_qgroups@@Base+0x1e0>
    a5d8:	ldr	r5, [r5, #0]
    a5da:	adds	r5, #4
    a5dc:	b.n	a9cc <btrfs_show_qgroups@@Base+0x5b0>
    a5de:	ldr	r3, [sp, #20]
    a5e0:	ldr	r3, [r3, #4]
    a5e2:	cmp	r3, #0
    a5e4:	beq.n	a5c8 <btrfs_show_qgroups@@Base+0x1ac>
    a5e6:	ldr.w	r8, [sp, #20]
    a5ea:	movs	r7, #0
    a5ec:	mov	r9, r7
    a5ee:	ldr	r3, [sp, #20]
    a5f0:	ldr	r3, [r3, #4]
    a5f2:	cmp	r7, r3
    a5f4:	blt.n	a63c <btrfs_show_qgroups@@Base+0x220>
    a5f6:	cmp.w	r9, #0
    a5fa:	beq.n	a5c8 <btrfs_show_qgroups@@Base+0x1ac>
    a5fc:	ldr.w	r3, [pc, #1032]	; aa08 <btrfs_show_qgroups@@Base+0x5ec>
    a600:	movs	r7, #0
    a602:	ldr.w	r8, [pc, #1032]	; aa0c <btrfs_show_qgroups@@Base+0x5f0>
    a606:	add	r3, pc
    a608:	add	r8, pc
    a60a:	vmov	s16, r3
    a60e:	ldr.w	r3, [r8, #8]
    a612:	cmp	r3, #0
    a614:	beq.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a616:	movs	r3, #1
    a618:	vmov	r1, s17
    a61c:	vmov	r0, s16
    a620:	mov.w	r2, #936	; 0x3a8
    a624:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a628:	subs	r3, r7, #1
    a62a:	ldr.w	r5, [r8, #12]
    a62e:	cmp	r3, #5
    a630:	bhi.n	a668 <btrfs_show_qgroups@@Base+0x24c>
    a632:	tbb	[pc, r3]
    a636:	bx	r7
    a638:	str	r5, [r2, #52]	; 0x34
    a63a:	ldr	r1, [sp, #452]	; 0x1c4
    a63c:	ldr.w	r3, [r8, #8]
    a640:	cmp	r3, #0
    a642:	beq.n	a5f6 <btrfs_show_qgroups@@Base+0x1da>
    a644:	ldr.w	r2, [r8, #12]
    a648:	mov	r0, r4
    a64a:	str	r1, [sp, #44]	; 0x2c
    a64c:	blx	r3
    a64e:	cmp	r0, #0
    a650:	bne.w	a9c4 <btrfs_show_qgroups@@Base+0x5a8>
    a654:	ldr.w	r3, [r8, #8]!
    a658:	adds	r7, #1
    a65a:	ldr	r2, [sp, #40]	; 0x28
    a65c:	ldr	r1, [sp, #44]	; 0x2c
    a65e:	cmp	r3, r2
    a660:	it	eq
    a662:	moveq.w	r9, #1
    a666:	b.n	a5ee <btrfs_show_qgroups@@Base+0x1d2>
    a668:	ldrd	r1, r3, [r4, #40]	; 0x28
    a66c:	add	r5, sp, #56	; 0x38
    a66e:	mov	r0, r5
    a670:	uxth	r2, r3
    a672:	lsrs	r3, r3, #16
    a674:	str	r3, [sp, #0]
    a676:	movs	r3, #0
    a678:	str	r3, [sp, #4]
    a67a:	ldr	r3, [pc, #916]	; (aa10 <btrfs_show_qgroups@@Base+0x5f4>)
    a67c:	strd	r1, r2, [sp, #8]
    a680:	movs	r2, #100	; 0x64
    a682:	add	r3, pc
    a684:	movs	r1, #1
    a686:	blx	8950 <__sprintf_chk@plt>
    a68a:	mov	r0, r5
    a68c:	blx	88f0 <strlen@plt>
    a690:	ldr	r3, [pc, #896]	; (aa14 <btrfs_show_qgroups@@Base+0x5f8>)
    a692:	add	r3, pc
    a694:	ldr	r2, [r3, #16]
    a696:	cmp	r0, r2
    a698:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a69a:	str	r0, [r3, #16]
    a69c:	adds	r7, #1
    a69e:	add.w	r8, r8, #20
    a6a2:	cmp	r7, #7
    a6a4:	bne.n	a60e <btrfs_show_qgroups@@Base+0x1f2>
    a6a6:	b.n	a5b0 <btrfs_show_qgroups@@Base+0x194>
    a6a8:	mov	r2, r5
    a6aa:	ldrd	r0, r1, [r4, #56]	; 0x38
    a6ae:	bl	304a8 <pretty_size_mode@@Base>
    a6b2:	blx	88f0 <strlen@plt>
    a6b6:	ldr	r3, [pc, #864]	; (aa18 <btrfs_show_qgroups@@Base+0x5fc>)
    a6b8:	add	r3, pc
    a6ba:	ldr	r2, [r3, #36]	; 0x24
    a6bc:	cmp	r0, r2
    a6be:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6c0:	str	r0, [r3, #36]	; 0x24
    a6c2:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6c4:	mov	r2, r5
    a6c6:	ldrd	r0, r1, [r4, #72]	; 0x48
    a6ca:	bl	304a8 <pretty_size_mode@@Base>
    a6ce:	blx	88f0 <strlen@plt>
    a6d2:	ldr	r3, [pc, #840]	; (aa1c <btrfs_show_qgroups@@Base+0x600>)
    a6d4:	add	r3, pc
    a6d6:	ldr	r2, [r3, #56]	; 0x38
    a6d8:	cmp	r0, r2
    a6da:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6dc:	str	r0, [r3, #56]	; 0x38
    a6de:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6e0:	mov	r2, r5
    a6e2:	ldrd	r0, r1, [r4, #96]	; 0x60
    a6e6:	bl	304a8 <pretty_size_mode@@Base>
    a6ea:	blx	88f0 <strlen@plt>
    a6ee:	ldr	r3, [pc, #816]	; (aa20 <btrfs_show_qgroups@@Base+0x604>)
    a6f0:	add	r3, pc
    a6f2:	ldr	r2, [r3, #76]	; 0x4c
    a6f4:	cmp	r0, r2
    a6f6:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6f8:	str	r0, [r3, #76]	; 0x4c
    a6fa:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a6fc:	mov	r2, r5
    a6fe:	ldrd	r0, r1, [r4, #104]	; 0x68
    a702:	bl	304a8 <pretty_size_mode@@Base>
    a706:	blx	88f0 <strlen@plt>
    a70a:	ldr	r3, [pc, #792]	; (aa24 <btrfs_show_qgroups@@Base+0x608>)
    a70c:	add	r3, pc
    a70e:	ldr	r2, [r3, #96]	; 0x60
    a710:	cmp	r0, r2
    a712:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a714:	str	r0, [r3, #96]	; 0x60
    a716:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a718:	ldr	r3, [pc, #780]	; (aa28 <btrfs_show_qgroups@@Base+0x60c>)
    a71a:	mov	r9, r4
    a71c:	ldr.w	r6, [r9, #128]!
    a720:	add.w	sl, sp, #56	; 0x38
    a724:	add	r3, pc
    a726:	movs	r5, #0
    a728:	cmp	r9, r6
    a72a:	bne.n	a73a <btrfs_show_qgroups@@Base+0x31e>
    a72c:	ldr	r3, [pc, #764]	; (aa2c <btrfs_show_qgroups@@Base+0x610>)
    a72e:	add	r3, pc
    a730:	ldr	r2, [r3, #116]	; 0x74
    a732:	cmp	r5, r2
    a734:	ble.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a736:	str	r5, [r3, #116]	; 0x74
    a738:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a73a:	ldr	r2, [r6, #16]
    a73c:	str	r3, [sp, #40]	; 0x28
    a73e:	ldrd	r0, r2, [r2, #40]	; 0x28
    a742:	uxth	r1, r2
    a744:	lsrs	r2, r2, #16
    a746:	strd	r0, r1, [sp, #8]
    a74a:	movs	r1, #1
    a74c:	str	r2, [sp, #0]
    a74e:	mov	r0, sl
    a750:	movs	r2, #0
    a752:	str	r2, [sp, #4]
    a754:	movs	r2, #100	; 0x64
    a756:	blx	8950 <__sprintf_chk@plt>
    a75a:	ldr	r6, [r6, #0]
    a75c:	ldr	r3, [sp, #40]	; 0x28
    a75e:	cmp	r6, r9
    a760:	add	r5, r0
    a762:	it	ne
    a764:	addne	r5, #1
    a766:	b.n	a728 <btrfs_show_qgroups@@Base+0x30c>
    a768:	mov	r9, r4
    a76a:	ldr	r3, [pc, #708]	; (aa30 <btrfs_show_qgroups@@Base+0x614>)
    a76c:	ldr.w	r5, [r9, #136]!
    a770:	add.w	sl, sp, #56	; 0x38
    a774:	add	r3, pc
    a776:	movs	r6, #0
    a778:	subs	r5, #8
    a77a:	add.w	r2, r5, #8
    a77e:	cmp	r9, r2
    a780:	bne.n	a794 <btrfs_show_qgroups@@Base+0x378>
    a782:	ldr	r3, [pc, #688]	; (aa34 <btrfs_show_qgroups@@Base+0x618>)
    a784:	add	r3, pc
    a786:	ldr.w	r2, [r3, #136]	; 0x88
    a78a:	cmp	r6, r2
    a78c:	it	gt
    a78e:	strgt.w	r6, [r3, #136]	; 0x88
    a792:	b.n	a69c <btrfs_show_qgroups@@Base+0x280>
    a794:	ldr	r2, [r5, #20]
    a796:	str	r3, [sp, #40]	; 0x28
    a798:	ldrd	r0, r2, [r2, #40]	; 0x28
    a79c:	uxth	r1, r2
    a79e:	lsrs	r2, r2, #16
    a7a0:	strd	r0, r1, [sp, #8]
    a7a4:	movs	r1, #1
    a7a6:	str	r2, [sp, #0]
    a7a8:	mov	r0, sl
    a7aa:	movs	r2, #0
    a7ac:	str	r2, [sp, #4]
    a7ae:	movs	r2, #100	; 0x64
    a7b0:	blx	8950 <__sprintf_chk@plt>
    a7b4:	ldr	r2, [r5, #8]
    a7b6:	ldr	r5, [r5, #8]
    a7b8:	cmp	r2, r9
    a7ba:	ldr	r3, [sp, #40]	; 0x28
    a7bc:	sub.w	r5, r5, #8
    a7c0:	add	r6, r0
    a7c2:	it	ne
    a7c4:	addne	r6, #1
    a7c6:	b.n	a77a <btrfs_show_qgroups@@Base+0x35e>
    a7c8:	mov	r1, r7
    a7ca:	b.n	a4ae <btrfs_show_qgroups@@Base+0x92>
    a7cc:	movs	r0, #45	; 0x2d
    a7ce:	blx	8988 <putchar@plt+0x4>
    a7d2:	b.n	a4e6 <btrfs_show_qgroups@@Base+0xca>
    a7d4:	movs	r0, #32
    a7d6:	blx	8988 <putchar@plt+0x4>
    a7da:	b.n	a4f4 <btrfs_show_qgroups@@Base+0xd8>
    a7dc:	blx	88f0 <strlen@plt>
    a7e0:	subs	r5, r5, r0
    a7e2:	subs	r5, #1
    a7e4:	bcs.n	a7fc <btrfs_show_qgroups@@Base+0x3e0>
    a7e6:	ldr	r0, [r4, #0]
    a7e8:	blx	88f0 <strlen@plt>
    a7ec:	mov	r5, r0
    a7ee:	subs	r5, #1
    a7f0:	bcc.w	a4fa <btrfs_show_qgroups@@Base+0xde>
    a7f4:	movs	r0, #45	; 0x2d
    a7f6:	blx	8988 <putchar@plt+0x4>
    a7fa:	b.n	a7ee <btrfs_show_qgroups@@Base+0x3d2>
    a7fc:	movs	r0, #32
    a7fe:	blx	8988 <putchar@plt+0x4>
    a802:	b.n	a7e2 <btrfs_show_qgroups@@Base+0x3c6>
    a804:	ldr	r3, [pc, #560]	; (aa38 <btrfs_show_qgroups@@Base+0x61c>)
    a806:	mov.w	r9, #0
    a80a:	ldr	r7, [sp, #20]
    a80c:	add	r3, pc
    a80e:	vmov	s16, r3
    a812:	ldr	r3, [r7, #8]
    a814:	cmp	r3, #0
    a816:	beq.w	a976 <btrfs_show_qgroups@@Base+0x55a>
    a81a:	movs	r3, #1
    a81c:	vmov	r1, s17
    a820:	vmov	r0, s16
    a824:	movs	r2, #217	; 0xd9
    a826:	bl	9b94 <btrfs_find_free_objectid@@Base+0x5a8>
    a82a:	add.w	r3, r9, #4294967295	; 0xffffffff
    a82e:	ldrd	r6, r5, [r7, #12]
    a832:	cmp	r3, #5
    a834:	bhi.n	a840 <btrfs_show_qgroups@@Base+0x424>
    a836:	tbb	[pc, r3]
    a83a:	subs	r7, r2, #0
    a83c:	ldr	r5, [r2, #84]	; 0x54
    a83e:	strh	r3, [r4, #16]
    a840:	ldrd	r1, r2, [r4, #28]
    a844:	movs	r0, #1
    a846:	uxth	r3, r2
    a848:	strd	r1, r3, [sp]
    a84c:	ldr	r1, [pc, #492]	; (aa3c <btrfs_show_qgroups@@Base+0x620>)
    a84e:	lsrs	r2, r2, #16
    a850:	movs	r3, #0
    a852:	add	r1, pc
    a854:	blx	89ec <__printf_chk@plt+0x4>
    a858:	mov	r1, r0
    a85a:	movs	r0, #0
    a85c:	bl	99c0 <btrfs_find_free_objectid@@Base+0x3d4>
    a860:	movs	r0, #32
    a862:	blx	8988 <putchar@plt+0x4>
    a866:	b.n	a976 <btrfs_show_qgroups@@Base+0x55a>
    a868:	ldrd	r0, r1, [r4, #44]	; 0x2c
    a86c:	mov	r3, r5
    a86e:	mov	r2, r6
    a870:	bl	99e4 <btrfs_find_free_objectid@@Base+0x3f8>
    a874:	b.n	a860 <btrfs_show_qgroups@@Base+0x444>
    a876:	ldrd	r0, r1, [r4, #60]	; 0x3c
    a87a:	mov	r3, r5
    a87c:	mov	r2, r6
    a87e:	b.n	a870 <btrfs_show_qgroups@@Base+0x454>
    a880:	ldr.w	sl, [pc, #444]	; aa40 <btrfs_show_qgroups@@Base+0x624>
    a884:	mov	r6, r4
    a886:	ldr.w	fp, [pc, #444]	; aa44 <btrfs_show_qgroups@@Base+0x628>
    a88a:	movs	r5, #0
    a88c:	ldr.w	r8, [r6, #116]!
    a890:	add	sl, pc
    a892:	add	fp, pc
    a894:	cmp	r6, r8
    a896:	bne.n	a8b0 <btrfs_show_qgroups@@Base+0x494>
    a898:	ldr	r3, [r4, #116]	; 0x74
    a89a:	cmp	r6, r3
    a89c:	bne.n	a8aa <btrfs_show_qgroups@@Base+0x48e>
    a89e:	ldr	r1, [pc, #424]	; (aa48 <btrfs_show_qgroups@@Base+0x62c>)
    a8a0:	movs	r0, #1
    a8a2:	add	r1, pc
    a8a4:	blx	89ec <__printf_chk@plt+0x4>
    a8a8:	add	r5, r0
    a8aa:	mov	r1, r5
    a8ac:	movs	r0, #5
    a8ae:	b.n	a85c <btrfs_show_qgroups@@Base+0x440>
    a8b0:	ldr.w	r3, [r8, #16]
    a8b4:	movs	r0, #1
    a8b6:	ldrd	r1, r2, [r3, #40]	; 0x28
    a8ba:	uxth	r3, r2
    a8bc:	lsrs	r2, r2, #16
    a8be:	strd	r1, r3, [sp]
    a8c2:	movs	r3, #0
    a8c4:	mov	r1, sl
    a8c6:	blx	89ec <__printf_chk@plt+0x4>
    a8ca:	ldr.w	r3, [r8]
    a8ce:	cmp	r3, r6
    a8d0:	add	r5, r0
    a8d2:	beq.n	a8de <btrfs_show_qgroups@@Base+0x4c2>
    a8d4:	mov	r1, fp
    a8d6:	movs	r0, #1
    a8d8:	blx	89ec <__printf_chk@plt+0x4>
    a8dc:	add	r5, r0
    a8de:	ldr.w	r8, [r8]
    a8e2:	b.n	a894 <btrfs_show_qgroups@@Base+0x478>
    a8e4:	ldr	r3, [r4, #76]	; 0x4c
    a8e6:	and.w	r3, r3, #1
    a8ea:	str	r3, [sp, #24]
    a8ec:	movs	r3, #0
    a8ee:	str	r3, [sp, #28]
    a8f0:	ldrd	r2, r3, [sp, #24]
    a8f4:	orrs	r3, r2
    a8f6:	beq.n	a902 <btrfs_show_qgroups@@Base+0x4e6>
    a8f8:	ldrd	r0, r1, [r4, #84]	; 0x54
    a8fc:	mov	r3, r5
    a8fe:	mov	r2, r6
    a900:	b.n	a870 <btrfs_show_qgroups@@Base+0x454>
    a902:	ldr	r3, [pc, #328]	; (aa4c <btrfs_show_qgroups@@Base+0x630>)
    a904:	mov	r2, r5
    a906:	ldr	r1, [pc, #328]	; (aa50 <btrfs_show_qgroups@@Base+0x634>)
    a908:	add	r3, pc
    a90a:	add	r1, pc
    a90c:	movs	r0, #1
    a90e:	blx	89ec <__printf_chk@plt+0x4>
    a912:	b.n	a860 <btrfs_show_qgroups@@Base+0x444>
    a914:	ldr	r3, [r4, #76]	; 0x4c
    a916:	and.w	r3, r3, #2
    a91a:	str	r3, [sp, #32]
    a91c:	movs	r3, #0
    a91e:	str	r3, [sp, #36]	; 0x24
    a920:	ldrd	r2, r3, [sp, #32]
    a924:	orrs	r3, r2
    a926:	beq.n	a932 <btrfs_show_qgroups@@Base+0x516>
    a928:	ldrd	r0, r1, [r4, #92]	; 0x5c
    a92c:	mov	r3, r5
    a92e:	mov	r2, r6
    a930:	b.n	a870 <btrfs_show_qgroups@@Base+0x454>
    a932:	ldr	r3, [pc, #288]	; (aa54 <btrfs_show_qgroups@@Base+0x638>)
    a934:	mov	r2, r5
    a936:	ldr	r1, [pc, #288]	; (aa58 <btrfs_show_qgroups@@Base+0x63c>)
    a938:	add	r3, pc
    a93a:	add	r1, pc
    a93c:	b.n	a90c <btrfs_show_qgroups@@Base+0x4f0>
    a93e:	mov	r8, r4
    a940:	ldr.w	sl, [pc, #280]	; aa5c <btrfs_show_qgroups@@Base+0x640>
    a944:	ldr.w	r5, [r8, #124]!
    a948:	movs	r6, #0
    a94a:	ldr.w	fp, [pc, #276]	; aa60 <btrfs_show_qgroups@@Base+0x644>
    a94e:	add	sl, pc
    a950:	subs	r5, #8
    a952:	add	fp, pc
    a954:	add.w	r3, r5, #8
    a958:	cmp	r8, r3
    a95a:	bne.n	a994 <btrfs_show_qgroups@@Base+0x578>
    a95c:	ldr	r3, [r4, #124]	; 0x7c
    a95e:	cmp	r8, r3
    a960:	bne.n	a96e <btrfs_show_qgroups@@Base+0x552>
    a962:	ldr	r1, [pc, #256]	; (aa64 <btrfs_show_qgroups@@Base+0x648>)
    a964:	movs	r0, #1
    a966:	add	r1, pc
    a968:	blx	89ec <__printf_chk@plt+0x4>
    a96c:	add	r6, r0
    a96e:	mov	r1, r6
    a970:	movs	r0, #6
    a972:	bl	99c0 <btrfs_find_free_objectid@@Base+0x3d4>
    a976:	add.w	r9, r9, #1
    a97a:	adds	r7, #20
    a97c:	cmp.w	r9, #7
    a980:	bne.w	a812 <btrfs_show_qgroups@@Base+0x3f6>
    a984:	movs	r0, #10
    a986:	blx	8988 <putchar@plt+0x4>
    a98a:	mov	r0, r4
    a98c:	bl	1350e <rb_next@@Base>
    a990:	mov	r4, r0
    a992:	b.n	a522 <btrfs_show_qgroups@@Base+0x106>
    a994:	ldr	r3, [r5, #20]
    a996:	movs	r0, #1
    a998:	ldrd	r1, r2, [r3, #40]	; 0x28
    a99c:	uxth	r3, r2
    a99e:	lsrs	r2, r2, #16
    a9a0:	strd	r1, r3, [sp]
    a9a4:	movs	r3, #0
    a9a6:	mov	r1, sl
    a9a8:	blx	89ec <__printf_chk@plt+0x4>
    a9ac:	ldr	r3, [r5, #8]
    a9ae:	cmp	r3, r8
    a9b0:	add	r6, r0
    a9b2:	beq.n	a9be <btrfs_show_qgroups@@Base+0x5a2>
    a9b4:	mov	r1, fp
    a9b6:	movs	r0, #1
    a9b8:	blx	89ec <__printf_chk@plt+0x4>
    a9bc:	add	r6, r0
    a9be:	ldr	r5, [r5, #8]
    a9c0:	subs	r5, #8
    a9c2:	b.n	a954 <btrfs_show_qgroups@@Base+0x538>
    a9c4:	bge.w	a5d8 <btrfs_show_qgroups@@Base+0x1bc>
    a9c8:	ldr	r5, [r5, #0]
    a9ca:	adds	r5, #8
    a9cc:	mov	r3, r6
    a9ce:	b.n	a57c <btrfs_show_qgroups@@Base+0x160>
    a9d0:	ldr	r0, [sp, #16]
    a9d2:	add	sp, #164	; 0xa4
    a9d4:	vpop	{d8}
    a9d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9dc:	lsls	r4, r4, #8
    a9de:	movs	r0, r0
    a9e0:	add	r1, sp, #328	; 0x148
    a9e2:	movs	r5, r0
    a9e4:	bl	ffcc69e6 <__bss_end__@@Base+0xffc606f6>
    a9e8:	bl	ffc549ea <__bss_end__@@Base+0xffbee6fa>
    a9ec:			; <UNDEFINED> instruction: 0xf7640002
    a9f0:	add	r3, sp, #472	; 0x1d8
    a9f2:	movs	r5, r0
    a9f4:			; <UNDEFINED> instruction: 0xf6880002
    a9f8:			; <UNDEFINED> instruction: 0xf3df0002
    a9fc:	movt	r0, #2050	; 0x802
    aa00:	add	r0, sp, #328	; 0x148
    aa02:	movs	r5, r0
    aa04:	bl	26ca06 <__bss_end__@@Base+0x206716>
    aa08:			; <UNDEFINED> instruction: 0xf4e90002
    aa0c:	add	r1, sp, #1008	; 0x3f0
    aa0e:	movs	r5, r0
    aa10:			; <UNDEFINED> instruction: 0xf31d0002
    aa14:	add	r1, sp, #456	; 0x1c8
    aa16:	movs	r5, r0
    aa18:	add	r1, sp, #304	; 0x130
    aa1a:	movs	r5, r0
    aa1c:	add	r1, sp, #192	; 0xc0
    aa1e:	movs	r5, r0
    aa20:	add	r1, sp, #80	; 0x50
    aa22:	movs	r5, r0
    aa24:	add	r0, sp, #992	; 0x3e0
    aa26:	movs	r5, r0
    aa28:			; <UNDEFINED> instruction: 0xf27b0002
    aa2c:	add	r0, sp, #856	; 0x358
    aa2e:	movs	r5, r0
    aa30:			; <UNDEFINED> instruction: 0xf22b0002
    aa34:	add	r0, sp, #512	; 0x200
    aa36:	movs	r5, r0
    aa38:			; <UNDEFINED> instruction: 0xf2e30002
    aa3c:	adc.w	r0, sp, #2
    aa40:	add.w	r0, pc, #2
    aa44:			; <UNDEFINED> instruction: 0xf28b0002
    aa48:			; <UNDEFINED> instruction: 0xf27d0002
    aa4c:	lsls	r1, r1, #28
    aa4e:	movs	r3, r0
    aa50:	vhadd.s32	d16, d9, d2
    aa54:	lsls	r1, r3, #27
    aa56:	movs	r3, r0
    aa58:	vhadd.s<illegal width 64>	d0, d9, d2
    aa5c:	orrs.w	r0, r1, #2
    aa60:	rsb	r0, fp, #2
    aa64:	subs.w	r0, r9, #2

0000aa68 <btrfs_qgroup_parse_sort_string@@Base>:
    aa68:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aa6c:	mov	r7, r1
    aa6e:	blx	86a0 <strdup@plt+0x4>
    aa72:	mov	r5, r0
    aa74:	cmp	r0, #0
    aa76:	beq.n	aafc <btrfs_qgroup_parse_sort_string@@Base+0x94>
    aa78:	ldr	r1, [pc, #160]	; (ab1c <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    aa7a:	ldr.w	r8, [pc, #164]	; ab20 <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    aa7e:	add	r1, pc
    aa80:	ldr.w	r9, [pc, #160]	; ab24 <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    aa84:	blx	8a44 <strtok@plt>
    aa88:	add	r8, pc
    aa8a:	add	r9, pc
    aa8c:	mov	r4, r0
    aa8e:	cbz	r4, aabe <btrfs_qgroup_parse_sort_string@@Base+0x56>
    aa90:	add.w	fp, r8, #160	; 0xa0
    aa94:	add.w	sl, r4, #1
    aa98:	mov	r6, fp
    aa9a:	b.n	aab4 <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    aa9c:	mov	r1, r4
    aa9e:	mov	r0, r3
    aaa0:	str	r3, [sp, #4]
    aaa2:	blx	8568 <strcmp@plt>
    aaa6:	cbz	r0, aacc <btrfs_qgroup_parse_sort_string@@Base+0x64>
    aaa8:	ldr	r3, [sp, #4]
    aaaa:	mov	r1, sl
    aaac:	mov	r0, r3
    aaae:	blx	8568 <strcmp@plt>
    aab2:	cbz	r0, aacc <btrfs_qgroup_parse_sort_string@@Base+0x64>
    aab4:	ldr.w	r3, [r6], #4
    aab8:	cmp	r3, #0
    aaba:	bne.n	aa9c <btrfs_qgroup_parse_sort_string@@Base+0x34>
    aabc:	movs	r4, #1
    aabe:	mov	r0, r5
    aac0:	blx	85dc <free@plt+0x4>
    aac4:	mov	r0, r4
    aac6:	add	sp, #12
    aac8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aacc:	ldrb	r3, [r4, #0]
    aace:	cmp	r3, #43	; 0x2b
    aad0:	bne.n	aad8 <btrfs_qgroup_parse_sort_string@@Base+0x70>
    aad2:	adds	r4, #1
    aad4:	movs	r2, #0
    aad6:	b.n	aae0 <btrfs_qgroup_parse_sort_string@@Base+0x78>
    aad8:	cmp	r3, #45	; 0x2d
    aada:	bne.n	aad4 <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    aadc:	adds	r4, #1
    aade:	movs	r2, #1
    aae0:	movs	r6, #0
    aae2:	ldr.w	r1, [fp], #4
    aae6:	mov	r0, r4
    aae8:	str	r2, [sp, #4]
    aaea:	blx	8568 <strcmp@plt>
    aaee:	ldr	r2, [sp, #4]
    aaf0:	mov	sl, r0
    aaf2:	cbz	r0, ab02 <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    aaf4:	adds	r6, #1
    aaf6:	cmp	r6, #5
    aaf8:	bne.n	aae2 <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    aafa:	b.n	aabc <btrfs_qgroup_parse_sort_string@@Base+0x54>
    aafc:	mvn.w	r4, #11
    ab00:	b.n	aac4 <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    ab02:	mov	r1, r6
    ab04:	mov	r0, r7
    ab06:	bl	a118 <btrfs_qgroup_setup_comparer@@Base>
    ab0a:	subs	r4, r0, #0
    ab0c:	blt.n	aabe <btrfs_qgroup_parse_sort_string@@Base+0x56>
    ab0e:	mov	r1, r9
    ab10:	mov	r0, sl
    ab12:	blx	8a44 <strtok@plt>
    ab16:	mov	r4, r0
    ab18:	b.n	aa8e <btrfs_qgroup_parse_sort_string@@Base+0x26>
    ab1a:	nop
    ab1c:	eors.w	r0, pc, #2
    ab20:	add	r5, pc, #496	; (adr r5, ad14 <list_sort@@Base+0x6c>)
    ab22:	movs	r5, r0
    ab24:	eors.w	r0, r3, #2

0000ab28 <qgroup_inherit_size@@Base>:
    ab28:	ldr	r3, [r0, #24]
    ab2a:	ldr	r2, [r0, #16]
    ab2c:	adds	r2, r3, r2
    ab2e:	ldr	r3, [r0, #8]
    ab30:	adds	r3, #9
    ab32:	add.w	r0, r3, r2, lsl #1
    ab36:	lsls	r0, r0, #3
    ab38:	bx	lr

0000ab3a <qgroup_inherit_add_group@@Base>:
    ab3a:	push	{r4, r5, r6, lr}
    ab3c:	mov	r6, r0
    ab3e:	mov	r0, r1
    ab40:	bl	3095c <parse_qgroupid@@Base>
    ab44:	mov	r4, r0
    ab46:	mov	r5, r1
    ab48:	orrs.w	r3, r4, r5
    ab4c:	bne.n	ab5c <qgroup_inherit_add_group@@Base+0x22>
    ab4e:	ldr	r0, [pc, #56]	; (ab88 <qgroup_inherit_add_group@@Base+0x4e>)
    ab50:	add	r0, pc
    ab52:	bl	17424 <__btrfs_error@@Base>
    ab56:	mvn.w	r0, #21
    ab5a:	pop	{r4, r5, r6, pc}
    ab5c:	ldr	r2, [r6, #0]
    ab5e:	cbz	r2, ab62 <qgroup_inherit_add_group@@Base+0x28>
    ab60:	ldr	r2, [r2, #8]
    ab62:	movs	r1, #1
    ab64:	mov	r0, r6
    ab66:	bl	9a04 <btrfs_find_free_objectid@@Base+0x418>
    ab6a:	cmp	r0, #0
    ab6c:	bne.n	ab5a <qgroup_inherit_add_group@@Base+0x20>
    ab6e:	ldr	r3, [r6, #0]
    ab70:	ldrd	r2, r1, [r3, #8]
    ab74:	adds	r6, r2, #1
    ab76:	adc.w	r1, r1, #0
    ab7a:	strd	r6, r1, [r3, #8]
    ab7e:	add.w	r3, r3, r2, lsl #3
    ab82:	strd	r4, r5, [r3, #72]	; 0x48
    ab86:	b.n	ab5a <qgroup_inherit_add_group@@Base+0x20>
    ab88:	vaddl.s16	q8, d3, d2

0000ab8c <qgroup_inherit_add_copy@@Base>:
    ab8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ab90:	mov	r6, r1
    ab92:	mov	sl, r0
    ab94:	movs	r1, #58	; 0x3a
    ab96:	mov	r0, r6
    ab98:	mov	r5, r2
    ab9a:	blx	88fc <strchr@plt>
    ab9e:	mov	r4, r0
    aba0:	cbnz	r0, abb2 <qgroup_inherit_add_copy@@Base+0x26>
    aba2:	ldr	r0, [pc, #152]	; (ac3c <qgroup_inherit_add_copy@@Base+0xb0>)
    aba4:	add	r0, pc
    aba6:	bl	17424 <__btrfs_error@@Base>
    abaa:	mvn.w	r0, #21
    abae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    abb2:	mov	r8, r0
    abb4:	movs	r3, #0
    abb6:	mov	r0, r6
    abb8:	strb.w	r3, [r8], #1
    abbc:	bl	3095c <parse_qgroupid@@Base>
    abc0:	mov	r6, r0
    abc2:	mov	r0, r8
    abc4:	mov	r7, r1
    abc6:	bl	3095c <parse_qgroupid@@Base>
    abca:	movs	r3, #58	; 0x3a
    abcc:	strb	r3, [r4, #0]
    abce:	orrs.w	r3, r6, r7
    abd2:	mov	r8, r0
    abd4:	mov	r9, r1
    abd6:	beq.n	aba2 <qgroup_inherit_add_copy@@Base+0x16>
    abd8:	orrs.w	r3, r8, r9
    abdc:	beq.n	aba2 <qgroup_inherit_add_copy@@Base+0x16>
    abde:	ldr.w	r4, [sl]
    abe2:	cbz	r4, abee <qgroup_inherit_add_copy@@Base+0x62>
    abe4:	ldr	r2, [r4, #16]
    abe6:	ldr	r4, [r4, #8]
    abe8:	muls	r2, r5
    abea:	add.w	r4, r4, r2, lsl #1
    abee:	mov	r2, r4
    abf0:	movs	r1, #2
    abf2:	mov	r0, sl
    abf4:	bl	9a04 <btrfs_find_free_objectid@@Base+0x418>
    abf8:	cmp	r0, #0
    abfa:	bne.n	abae <qgroup_inherit_add_copy@@Base+0x22>
    abfc:	ldr.w	r3, [sl]
    ac00:	add.w	r3, r3, r4, lsl #3
    ac04:	strd	r6, r7, [r3, #72]	; 0x48
    ac08:	ldr.w	r2, [sl]
    ac0c:	add.w	r2, r2, r4, lsl #3
    ac10:	strd	r8, r9, [r2, #80]	; 0x50
    ac14:	ldr.w	r3, [sl]
    ac18:	cbnz	r5, ac2a <qgroup_inherit_add_copy@@Base+0x9e>
    ac1a:	ldrd	r2, r1, [r3, #16]
    ac1e:	adds	r2, #1
    ac20:	adc.w	r1, r1, #0
    ac24:	strd	r2, r1, [r3, #16]
    ac28:	b.n	abae <qgroup_inherit_add_copy@@Base+0x22>
    ac2a:	ldrd	r2, r1, [r3, #24]
    ac2e:	adds	r2, #1
    ac30:	adc.w	r1, r1, #0
    ac34:	strd	r2, r1, [r3, #24]
    ac38:	b.n	abae <qgroup_inherit_add_copy@@Base+0x22>
    ac3a:	nop
    ac3c:	vext.8	d0, d1, d2, #0
    ac40:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    ac44:	mov	r5, r2
    ac46:	ldr	r2, [pc, #84]	; (ac9c <qgroup_inherit_add_copy@@Base+0x110>)
    ac48:	mov	r4, r3
    ac4a:	ldr	r3, [pc, #84]	; (aca0 <qgroup_inherit_add_copy@@Base+0x114>)
    ac4c:	add	r6, sp, #4
    ac4e:	add	r2, pc
    ac50:	mov	r7, r0
    ac52:	mov	r8, r1
    ac54:	ldr	r3, [r2, r3]
    ac56:	ldr	r3, [r3, #0]
    ac58:	str	r3, [sp, #12]
    ac5a:	mov.w	r3, #0
    ac5e:	cbz	r5, ac64 <qgroup_inherit_add_copy@@Base+0xd8>
    ac60:	cbnz	r4, ac7c <qgroup_inherit_add_copy@@Base+0xf0>
    ac62:	mov	r4, r5
    ac64:	ldr	r2, [pc, #60]	; (aca4 <qgroup_inherit_add_copy@@Base+0x118>)
    ac66:	ldr	r3, [pc, #56]	; (aca0 <qgroup_inherit_add_copy@@Base+0x114>)
    ac68:	add	r2, pc
    ac6a:	str	r4, [r6, #0]
    ac6c:	ldr	r0, [sp, #4]
    ac6e:	ldr	r3, [r2, r3]
    ac70:	ldr	r2, [r3, #0]
    ac72:	ldr	r3, [sp, #12]
    ac74:	eors	r2, r3
    ac76:	beq.n	ac94 <qgroup_inherit_add_copy@@Base+0x108>
    ac78:	blx	86b8 <__stack_chk_fail@plt>
    ac7c:	mov	r2, r4
    ac7e:	mov	r1, r5
    ac80:	mov	r0, r7
    ac82:	blx	r8
    ac84:	cmp	r0, #0
    ac86:	itete	le
    ac88:	strle	r5, [r6, #0]
    ac8a:	strgt	r4, [r6, #0]
    ac8c:	ldrle	r5, [r5, #0]
    ac8e:	ldrgt	r4, [r4, #0]
    ac90:	ldr	r6, [r6, #0]
    ac92:	b.n	ac5e <qgroup_inherit_add_copy@@Base+0xd2>
    ac94:	add	sp, #16
    ac96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ac9a:	nop
    ac9c:	add	r1, pc, #232	; (adr r1, ad88 <list_sort@@Base+0xe0>)
    ac9e:	movs	r5, r0
    aca0:	lsls	r4, r4, #8
    aca2:	movs	r0, r0
    aca4:	add	r1, pc, #128	; (adr r1, ad28 <list_sort@@Base+0x80>)
    aca6:	movs	r5, r0

0000aca8 <list_sort@@Base>:
    aca8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    acac:	mov	r7, r2
    acae:	ldr	r2, [pc, #268]	; (adbc <list_sort@@Base+0x114>)
    acb0:	sub	sp, #100	; 0x64
    acb2:	ldr	r3, [pc, #268]	; (adc0 <list_sort@@Base+0x118>)
    acb4:	mov	r8, r0
    acb6:	add	r2, pc
    acb8:	mov	r4, r1
    acba:	ldr	r3, [r2, r3]
    acbc:	ldr	r3, [r3, #0]
    acbe:	str	r3, [sp, #92]	; 0x5c
    acc0:	mov.w	r3, #0
    acc4:	ldr	r3, [r1, #0]
    acc6:	cmp	r1, r3
    acc8:	beq.n	ad1c <list_sort@@Base+0x74>
    acca:	add.w	r9, sp, #8
    acce:	movs	r2, #84	; 0x54
    acd0:	movs	r1, #0
    acd2:	ldr.w	fp, [pc, #240]	; adc4 <list_sort@@Base+0x11c>
    acd6:	mov	r0, r9
    acd8:	movs	r5, #0
    acda:	blx	8978 <memset@plt+0x4>
    acde:	ldr	r3, [r4, #4]
    ace0:	add	fp, pc
    ace2:	str	r5, [r3, #0]
    ace4:	ldr	r3, [r4, #0]
    ace6:	cbnz	r3, ad30 <list_sort@@Base+0x88>
    ace8:	mov	r6, r3
    acea:	cmp	r6, r5
    acec:	bne.n	ad7e <list_sort@@Base+0xd6>
    acee:	add	r2, sp, #96	; 0x60
    acf0:	mov	r5, r4
    acf2:	add.w	r6, r2, r6, lsl #2
    acf6:	ldr.w	r6, [r6, #-88]
    acfa:	cbz	r6, ad02 <list_sort@@Base+0x5a>
    acfc:	cmp	r3, #0
    acfe:	bne.n	ad92 <list_sort@@Base+0xea>
    ad00:	mov	r3, r6
    ad02:	str	r3, [r5, #0]
    ad04:	ldr	r2, [r5, #0]
    ad06:	mov	r0, r8
    ad08:	mov	r1, r2
    ad0a:	blx	r7
    ad0c:	ldr	r3, [r5, #0]
    ad0e:	str	r5, [r3, #4]
    ad10:	ldr	r5, [r5, #0]
    ad12:	ldr	r3, [r5, #0]
    ad14:	cmp	r3, #0
    ad16:	bne.n	ad04 <list_sort@@Base+0x5c>
    ad18:	str	r4, [r5, #0]
    ad1a:	str	r5, [r4, #4]
    ad1c:	ldr	r2, [pc, #168]	; (adc8 <list_sort@@Base+0x120>)
    ad1e:	ldr	r3, [pc, #160]	; (adc0 <list_sort@@Base+0x118>)
    ad20:	add	r2, pc
    ad22:	ldr	r3, [r2, r3]
    ad24:	ldr	r2, [r3, #0]
    ad26:	ldr	r3, [sp, #92]	; 0x5c
    ad28:	eors	r2, r3
    ad2a:	beq.n	adb4 <list_sort@@Base+0x10c>
    ad2c:	blx	86b8 <__stack_chk_fail@plt>
    ad30:	ldr	r2, [r3, #0]
    ad32:	mov	sl, r9
    ad34:	str	r2, [sp, #0]
    ad36:	movs	r2, #0
    ad38:	mov	r6, r2
    ad3a:	str	r2, [r3, #0]
    ad3c:	ldr.w	r2, [sl], #4
    ad40:	cbnz	r2, ad66 <list_sort@@Base+0xbe>
    ad42:	cmp	r6, r5
    ad44:	ble.n	ad58 <list_sort@@Base+0xb0>
    ad46:	cmp	r6, #20
    ad48:	bne.n	ad7a <list_sort@@Base+0xd2>
    ad4a:	mov	r0, fp
    ad4c:	str	r3, [sp, #4]
    ad4e:	blx	8804 <puts@plt+0x4>
    ad52:	ldr	r3, [sp, #4]
    ad54:	movs	r5, #19
    ad56:	mov	r6, r5
    ad58:	add	r2, sp, #96	; 0x60
    ad5a:	add.w	r6, r2, r6, lsl #2
    ad5e:	str.w	r3, [r6, #-88]
    ad62:	ldr	r3, [sp, #0]
    ad64:	b.n	ace6 <list_sort@@Base+0x3e>
    ad66:	mov	r1, r7
    ad68:	mov	r0, r8
    ad6a:	bl	ac40 <qgroup_inherit_add_copy@@Base+0xb4>
    ad6e:	adds	r6, #1
    ad70:	movs	r2, #0
    ad72:	str.w	r2, [sl, #-4]
    ad76:	mov	r3, r0
    ad78:	b.n	ad3c <list_sort@@Base+0x94>
    ad7a:	mov	r5, r6
    ad7c:	b.n	ad58 <list_sort@@Base+0xb0>
    ad7e:	ldr.w	r2, [r9, r6, lsl #2]
    ad82:	cbz	r2, ad8e <list_sort@@Base+0xe6>
    ad84:	mov	r1, r7
    ad86:	mov	r0, r8
    ad88:	bl	ac40 <qgroup_inherit_add_copy@@Base+0xb4>
    ad8c:	mov	r3, r0
    ad8e:	adds	r6, #1
    ad90:	b.n	acea <list_sort@@Base+0x42>
    ad92:	mov	r2, r3
    ad94:	mov	r1, r6
    ad96:	mov	r0, r8
    ad98:	str	r3, [sp, #0]
    ad9a:	blx	r7
    ad9c:	ldr	r3, [sp, #0]
    ad9e:	cmp	r0, #0
    ada0:	itete	le
    ada2:	strle	r6, [r5, #0]
    ada4:	strgt	r3, [r5, #0]
    ada6:	strle	r5, [r6, #4]
    ada8:	strgt	r5, [r3, #4]
    adaa:	ite	le
    adac:	ldrle	r6, [r6, #0]
    adae:	ldrgt	r3, [r3, #0]
    adb0:	ldr	r5, [r5, #0]
    adb2:	b.n	acfa <list_sort@@Base+0x52>
    adb4:	add	sp, #100	; 0x64
    adb6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    adba:	nop
    adbc:	add	r0, pc, #840	; (adr r0, b108 <list_sort@@Base+0x460>)
    adbe:	movs	r5, r0
    adc0:	lsls	r4, r4, #8
    adc2:	movs	r0, r0
    adc4:	vhadd.s<illegal width 64>	d16, d11, d2
    adc8:	add	r0, pc, #416	; (adr r0, af6c <list_sort@@Base+0x2c4>)
    adca:	movs	r5, r0
    adcc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    add0:	mov	r8, r1
    add2:	ldr	r1, [pc, #392]	; (af5c <list_sort@@Base+0x2b4>)
    add4:	mov	r5, r2
    add6:	ldr	r2, [pc, #392]	; (af60 <list_sort@@Base+0x2b8>)
    add8:	subs	r4, r3, #0
    adda:	add	r1, pc
    addc:	sub	sp, #24
    adde:	mov.w	r9, #0
    ade2:	mov	r0, r8
    ade4:	ldr	r2, [r1, r2]
    ade6:	add	r1, sp, #16
    ade8:	ldr.w	sl, [pc, #376]	; af64 <list_sort@@Base+0x2bc>
    adec:	ldr	r2, [r2, #0]
    adee:	str	r2, [sp, #20]
    adf0:	mov.w	r2, #0
    adf4:	ite	ne
    adf6:	movne	r2, #2
    adf8:	moveq	r2, r9
    adfa:	str.w	r9, [sp, #16]
    adfe:	bl	30ad4 <open_file_or_dir3@@Base>
    ae02:	add	sl, pc
    ae04:	adds	r3, r0, #1
    ae06:	mov	r7, r0
    ae08:	bne.n	ae4e <list_sort@@Base+0x1a6>
    ae0a:	blx	8938 <__errno_location@plt>
    ae0e:	mov	r1, r8
    ae10:	mov	r6, r9
    ae12:	ldr	r4, [r0, #0]
    ae14:	ldr	r0, [pc, #336]	; (af68 <list_sort@@Base+0x2c0>)
    ae16:	negs	r4, r4
    ae18:	add	r0, pc
    ae1a:	bl	17424 <__btrfs_error@@Base>
    ae1e:	movs	r5, #0
    ae20:	mov	r0, r6
    ae22:	blx	85dc <free@plt+0x4>
    ae26:	mov	r0, r5
    ae28:	blx	85dc <free@plt+0x4>
    ae2c:	cmp	r7, #0
    ae2e:	blt.n	ae38 <list_sort@@Base+0x190>
    ae30:	ldr	r1, [sp, #16]
    ae32:	mov	r0, r7
    ae34:	bl	30d08 <close_file_or_dir@@Base>
    ae38:	ldr	r2, [pc, #304]	; (af6c <list_sort@@Base+0x2c4>)
    ae3a:	ldr	r3, [pc, #292]	; (af60 <list_sort@@Base+0x2b8>)
    ae3c:	add	r2, pc
    ae3e:	ldr	r3, [r2, r3]
    ae40:	ldr	r2, [r3, #0]
    ae42:	ldr	r3, [sp, #20]
    ae44:	eors	r2, r3
    ae46:	beq.w	af54 <list_sort@@Base+0x2ac>
    ae4a:	blx	86b8 <__stack_chk_fail@plt>
    ae4e:	mov	r0, r5
    ae50:	blx	88f0 <strlen@plt>
    ae54:	adds	r0, #7
    ae56:	blx	8820 <malloc@plt+0x4>
    ae5a:	mov	r6, r0
    ae5c:	cmp	r0, #0
    ae5e:	beq.n	af48 <list_sort@@Base+0x2a0>
    ae60:	ldr	r3, [pc, #268]	; (af70 <list_sort@@Base+0x2c8>)
    ae62:	add	r3, pc
    ae64:	ldr	r0, [r3, #0]
    ae66:	ldrh	r3, [r3, #4]
    ae68:	str	r0, [r6, #0]
    ae6a:	mov	r0, r5
    ae6c:	strh	r3, [r6, #4]
    ae6e:	blx	88f0 <strlen@plt>
    ae72:	mov	r1, r5
    ae74:	mov	r2, r0
    ae76:	adds	r0, r6, #6
    ae78:	blx	8628 <memcpy@plt+0x4>
    ae7c:	mov	r0, r5
    ae7e:	blx	88f0 <strlen@plt>
    ae82:	add	r0, r6
    ae84:	strb.w	r9, [r0, #6]
    ae88:	cbz	r4, aecc <list_sort@@Base+0x224>
    ae8a:	ldr	r1, [pc, #232]	; (af74 <list_sort@@Base+0x2cc>)
    ae8c:	mov	r0, r4
    ae8e:	add	r1, pc
    ae90:	blx	8568 <strcmp@plt>
    ae94:	cbz	r0, aec0 <list_sort@@Base+0x218>
    ae96:	ldr	r1, [pc, #224]	; (af78 <list_sort@@Base+0x2d0>)
    ae98:	mov	r0, r4
    ae9a:	add	r1, pc
    ae9c:	blx	8568 <strcmp@plt>
    aea0:	cbz	r0, aec6 <list_sort@@Base+0x21e>
    aea2:	mov	r0, r4
    aea4:	movs	r5, #0
    aea6:	blx	88f0 <strlen@plt>
    aeaa:	mov	r2, r4
    aeac:	mov	r1, r6
    aeae:	str	r5, [sp, #0]
    aeb0:	mov	r3, r0
    aeb2:	mov	r0, r7
    aeb4:	blx	89c4 <fsetxattr@plt>
    aeb8:	cmp	r0, r5
    aeba:	blt.n	aedc <list_sort@@Base+0x234>
    aebc:	mov	r4, r5
    aebe:	b.n	ae20 <list_sort@@Base+0x178>
    aec0:	ldr	r4, [pc, #184]	; (af7c <list_sort@@Base+0x2d4>)
    aec2:	add	r4, pc
    aec4:	b.n	aea2 <list_sort@@Base+0x1fa>
    aec6:	ldr	r4, [pc, #184]	; (af80 <list_sort@@Base+0x2d8>)
    aec8:	add	r4, pc
    aeca:	b.n	aea2 <list_sort@@Base+0x1fa>
    aecc:	mov	r3, r4
    aece:	mov	r2, r4
    aed0:	mov	r1, r6
    aed2:	mov	r0, r7
    aed4:	blx	85f4 <fgetxattr@plt>
    aed8:	subs	r3, r0, #0
    aeda:	bge.n	af00 <list_sort@@Base+0x258>
    aedc:	blx	8938 <__errno_location@plt>
    aee0:	ldr	r3, [r0, #0]
    aee2:	cmp	r3, #61	; 0x3d
    aee4:	beq.n	af50 <list_sort@@Base+0x2a8>
    aee6:	cbnz	r4, aefa <list_sort@@Base+0x252>
    aee8:	ldr	r1, [pc, #152]	; (af84 <list_sort@@Base+0x2dc>)
    aeea:	add	r1, pc
    aeec:	ldr	r0, [pc, #152]	; (af88 <list_sort@@Base+0x2e0>)
    aeee:	mov	r2, r8
    aef0:	negs	r4, r3
    aef2:	add	r0, pc
    aef4:	bl	17424 <__btrfs_error@@Base>
    aef8:	b.n	ae1e <list_sort@@Base+0x176>
    aefa:	ldr	r1, [pc, #144]	; (af8c <list_sort@@Base+0x2e4>)
    aefc:	add	r1, pc
    aefe:	b.n	aeec <list_sort@@Base+0x244>
    af00:	str	r3, [sp, #12]
    af02:	blx	8820 <malloc@plt+0x4>
    af06:	mov	r5, r0
    af08:	cbz	r0, af4a <list_sort@@Base+0x2a2>
    af0a:	ldr	r3, [sp, #12]
    af0c:	mov	r2, r0
    af0e:	mov	r1, r6
    af10:	mov	r0, r7
    af12:	blx	85f4 <fgetxattr@plt>
    af16:	ldr	r3, [sp, #12]
    af18:	cmp	r0, #0
    af1a:	bge.n	af30 <list_sort@@Base+0x288>
    af1c:	blx	8938 <__errno_location@plt>
    af20:	mov	r1, r8
    af22:	ldr	r4, [r0, #0]
    af24:	ldr	r0, [pc, #104]	; (af90 <list_sort@@Base+0x2e8>)
    af26:	negs	r4, r4
    af28:	add	r0, pc
    af2a:	bl	17424 <__btrfs_error@@Base>
    af2e:	b.n	ae20 <list_sort@@Base+0x178>
    af30:	ldr	r2, [pc, #96]	; (af94 <list_sort@@Base+0x2ec>)
    af32:	movs	r1, #1
    af34:	ldr.w	r2, [sl, r2]
    af38:	str	r5, [sp, #0]
    af3a:	mov	r0, r2
    af3c:	ldr	r2, [pc, #88]	; (af98 <list_sort@@Base+0x2f0>)
    af3e:	ldr	r0, [r0, #0]
    af40:	add	r2, pc
    af42:	blx	8a14 <__fprintf_chk@plt+0x4>
    af46:	b.n	ae20 <list_sort@@Base+0x178>
    af48:	mov	r5, r0
    af4a:	mvn.w	r4, #11
    af4e:	b.n	ae20 <list_sort@@Base+0x178>
    af50:	movs	r5, #0
    af52:	b.n	aebc <list_sort@@Base+0x214>
    af54:	mov	r0, r4
    af56:	add	sp, #24
    af58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    af5c:	ldr	r7, [sp, #696]	; 0x2b8
    af5e:	movs	r5, r0
    af60:	lsls	r4, r4, #8
    af62:	movs	r0, r0
    af64:	ldr	r7, [sp, #536]	; 0x218
    af66:	movs	r5, r0
    af68:	cdp	0, 8, cr0, cr5, cr2, {0}
    af6c:	ldr	r7, [sp, #304]	; 0x130
    af6e:	movs	r5, r0
    af70:	cdp	0, 5, cr0, cr1, cr2, {0}
    af74:	cdp	0, 2, cr0, cr12, cr2, {0}
    af78:	lsls	r7, r6, #5
    af7a:	movs	r3, r0
    af7c:	orr.w	r0, fp, #2
    af80:	orr.w	r0, r5, #2
    af84:	stc	0, cr0, [pc, #8]!	; af90 <list_sort@@Base+0x2e8>
    af88:	stcl	0, cr0, [fp, #8]
    af8c:	add	r0, pc
    af8e:	movs	r3, r0
    af90:	ldc	0, cr0, [r9, #8]!
    af94:	lsls	r0, r3, #9
    af96:	movs	r0, r0
    af98:	stcl	0, cr0, [r6, #8]
    af9c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    af9e:	mov	r5, r1
    afa0:	ldr	r1, [pc, #268]	; (b0b0 <list_sort@@Base+0x408>)
    afa2:	mov	r4, r3
    afa4:	ldr	r2, [pc, #268]	; (b0b4 <list_sort@@Base+0x40c>)
    afa6:	add	r1, pc
    afa8:	ldr	r2, [r1, r2]
    afaa:	ldr	r2, [r2, #0]
    afac:	str	r2, [sp, #12]
    afae:	mov.w	r2, #0
    afb2:	cmp	r3, #0
    afb4:	beq.n	b046 <list_sort@@Base+0x39e>
    afb6:	ldr	r1, [pc, #256]	; (b0b8 <list_sort@@Base+0x410>)
    afb8:	mov	r0, r3
    afba:	add	r1, pc
    afbc:	blx	8568 <strcmp@plt>
    afc0:	cbnz	r0, b008 <list_sort@@Base+0x360>
    afc2:	movs	r3, #1
    afc4:	strb.w	r3, [sp, #11]
    afc8:	ldrb.w	r1, [sp, #11]
    afcc:	mov	r0, r5
    afce:	bl	32b10 <btrfs_util_set_subvolume_read_only@@Base>
    afd2:	mov	r4, r0
    afd4:	cbz	r0, b028 <list_sort@@Base+0x380>
    afd6:	blx	8938 <__errno_location@plt>
    afda:	mov	r5, r0
    afdc:	ldr	r0, [r0, #0]
    afde:	blx	8838 <strerror@plt>
    afe2:	mov	r6, r0
    afe4:	mov	r0, r4
    afe6:	bl	38cb0 <btrfs_util_strerror@@Base>
    afea:	mov	r1, r0
    afec:	cbz	r0, b03c <list_sort@@Base+0x394>
    afee:	str	r0, [sp, #4]
    aff0:	mov	r0, r6
    aff2:	blx	8568 <strcmp@plt>
    aff6:	ldr	r1, [sp, #4]
    aff8:	cbz	r0, b03c <list_sort@@Base+0x394>
    affa:	ldr	r0, [pc, #192]	; (b0bc <list_sort@@Base+0x414>)
    affc:	add	r0, pc
    affe:	bl	17424 <__btrfs_error@@Base>
    b002:	ldr	r0, [r5, #0]
    b004:	negs	r0, r0
    b006:	b.n	b028 <list_sort@@Base+0x380>
    b008:	ldr	r1, [pc, #180]	; (b0c0 <list_sort@@Base+0x418>)
    b00a:	mov	r0, r4
    b00c:	add	r1, pc
    b00e:	blx	8568 <strcmp@plt>
    b012:	cbnz	r0, b01a <list_sort@@Base+0x372>
    b014:	strb.w	r0, [sp, #11]
    b018:	b.n	afc8 <list_sort@@Base+0x320>
    b01a:	ldr	r0, [pc, #168]	; (b0c4 <list_sort@@Base+0x41c>)
    b01c:	mov	r1, r4
    b01e:	add	r0, pc
    b020:	bl	17424 <__btrfs_error@@Base>
    b024:	mvn.w	r0, #21
    b028:	ldr	r2, [pc, #156]	; (b0c8 <list_sort@@Base+0x420>)
    b02a:	ldr	r3, [pc, #136]	; (b0b4 <list_sort@@Base+0x40c>)
    b02c:	add	r2, pc
    b02e:	ldr	r3, [r2, r3]
    b030:	ldr	r2, [r3, #0]
    b032:	ldr	r3, [sp, #12]
    b034:	eors	r2, r3
    b036:	beq.n	b0ac <list_sort@@Base+0x404>
    b038:	blx	86b8 <__stack_chk_fail@plt>
    b03c:	ldr	r0, [pc, #140]	; (b0cc <list_sort@@Base+0x424>)
    b03e:	add	r0, pc
    b040:	bl	17424 <__btrfs_error@@Base>
    b044:	b.n	b002 <list_sort@@Base+0x35a>
    b046:	mov	r0, r5
    b048:	add.w	r1, sp, #11
    b04c:	bl	32a64 <btrfs_util_get_subvolume_read_only@@Base>
    b050:	mov	r5, r0
    b052:	cbz	r0, b08e <list_sort@@Base+0x3e6>
    b054:	blx	8938 <__errno_location@plt>
    b058:	mov	r4, r0
    b05a:	ldr	r0, [r0, #0]
    b05c:	blx	8838 <strerror@plt>
    b060:	mov	r6, r0
    b062:	mov	r0, r5
    b064:	bl	38cb0 <btrfs_util_strerror@@Base>
    b068:	mov	r1, r0
    b06a:	cbz	r0, b084 <list_sort@@Base+0x3dc>
    b06c:	str	r0, [sp, #4]
    b06e:	mov	r0, r6
    b070:	blx	8568 <strcmp@plt>
    b074:	ldr	r1, [sp, #4]
    b076:	cbz	r0, b084 <list_sort@@Base+0x3dc>
    b078:	ldr	r0, [pc, #84]	; (b0d0 <list_sort@@Base+0x428>)
    b07a:	add	r0, pc
    b07c:	bl	17424 <__btrfs_error@@Base>
    b080:	ldr	r0, [r4, #0]
    b082:	b.n	b004 <list_sort@@Base+0x35c>
    b084:	ldr	r0, [pc, #76]	; (b0d4 <list_sort@@Base+0x42c>)
    b086:	add	r0, pc
    b088:	bl	17424 <__btrfs_error@@Base>
    b08c:	b.n	b080 <list_sort@@Base+0x3d8>
    b08e:	ldrb.w	r3, [sp, #11]
    b092:	cbnz	r3, b0a6 <list_sort@@Base+0x3fe>
    b094:	ldr	r2, [pc, #64]	; (b0d8 <list_sort@@Base+0x430>)
    b096:	add	r2, pc
    b098:	ldr	r1, [pc, #64]	; (b0dc <list_sort@@Base+0x434>)
    b09a:	movs	r0, #1
    b09c:	add	r1, pc
    b09e:	blx	89ec <__printf_chk@plt+0x4>
    b0a2:	movs	r0, #0
    b0a4:	b.n	b028 <list_sort@@Base+0x380>
    b0a6:	ldr	r2, [pc, #56]	; (b0e0 <list_sort@@Base+0x438>)
    b0a8:	add	r2, pc
    b0aa:	b.n	b098 <list_sort@@Base+0x3f0>
    b0ac:	add	sp, #16
    b0ae:	pop	{r4, r5, r6, pc}
    b0b0:	ldr	r5, [sp, #904]	; 0x388
    b0b2:	movs	r5, r0
    b0b4:	lsls	r4, r4, #8
    b0b6:	movs	r0, r0
    b0b8:	ldcl	0, cr0, [lr, #-8]
    b0bc:	strh	r7, [r2, #16]
    b0be:	movs	r4, r0
    b0c0:	ldc	0, cr0, [r1, #-8]
    b0c4:	stc	0, cr0, [r5, #-8]
    b0c8:	ldr	r5, [sp, #368]	; 0x170
    b0ca:	movs	r5, r0
    b0cc:	ldr	r1, [pc, #108]	; (b13c <list_sort@@Base+0x494>)
    b0ce:	movs	r3, r0
    b0d0:	strh	r1, [r3, #12]
    b0d2:	movs	r4, r0
    b0d4:	ldr	r0, [pc, #844]	; (b424 <ulist_next@@Base+0x28>)
    b0d6:	movs	r3, r0
    b0d8:	stc	0, cr0, [r7], {2}
    b0dc:	stc	0, cr0, [r6], #8
    b0e0:	ldcl	0, cr0, [r0], #-8
    b0e4:	mov	r0, r1
    b0e6:	ldr	r1, [pc, #96]	; (b148 <list_sort@@Base+0x4a0>)
    b0e8:	ldr	r2, [pc, #96]	; (b14c <list_sort@@Base+0x4a4>)
    b0ea:	add	r1, pc
    b0ec:	push	{r4, r5, lr}
    b0ee:	sub	sp, #276	; 0x114
    b0f0:	ldr	r2, [r1, r2]
    b0f2:	mov	r1, r3
    b0f4:	ldr	r5, [pc, #88]	; (b150 <list_sort@@Base+0x4a8>)
    b0f6:	ldr	r2, [r2, #0]
    b0f8:	str	r2, [sp, #268]	; 0x10c
    b0fa:	mov.w	r2, #0
    b0fe:	add	r5, pc
    b100:	cbz	r3, b11c <list_sort@@Base+0x474>
    b102:	bl	3063a <set_label@@Base>
    b106:	mov	r4, r0
    b108:	ldr	r2, [pc, #72]	; (b154 <list_sort@@Base+0x4ac>)
    b10a:	ldr	r3, [pc, #64]	; (b14c <list_sort@@Base+0x4a4>)
    b10c:	add	r2, pc
    b10e:	ldr	r3, [r2, r3]
    b110:	ldr	r2, [r3, #0]
    b112:	ldr	r3, [sp, #268]	; 0x10c
    b114:	eors	r2, r3
    b116:	beq.n	b140 <list_sort@@Base+0x498>
    b118:	blx	86b8 <__stack_chk_fail@plt>
    b11c:	add	r3, sp, #12
    b11e:	str	r3, [sp, #4]
    b120:	mov	r1, r3
    b122:	bl	3060c <get_label@@Base>
    b126:	ldr	r3, [sp, #4]
    b128:	mov	r4, r0
    b12a:	cmp	r0, #0
    b12c:	bne.n	b108 <list_sort@@Base+0x460>
    b12e:	ldr	r2, [pc, #40]	; (b158 <list_sort@@Base+0x4b0>)
    b130:	movs	r1, #1
    b132:	ldr	r0, [r5, r2]
    b134:	ldr	r2, [pc, #36]	; (b15c <list_sort@@Base+0x4b4>)
    b136:	ldr	r0, [r0, #0]
    b138:	add	r2, pc
    b13a:	blx	8a14 <__fprintf_chk@plt+0x4>
    b13e:	b.n	b108 <list_sort@@Base+0x460>
    b140:	mov	r0, r4
    b142:	add	sp, #276	; 0x114
    b144:	pop	{r4, r5, pc}
    b146:	nop
    b148:	ldr	r4, [sp, #632]	; 0x278
    b14a:	movs	r5, r0
    b14c:	lsls	r4, r4, #8
    b14e:	movs	r0, r0
    b150:	ldr	r4, [sp, #552]	; 0x228
    b152:	movs	r5, r0
    b154:	ldr	r4, [sp, #496]	; 0x1f0
    b156:	movs	r5, r0
    b158:	lsls	r0, r3, #9
    b15a:	movs	r0, r0
    b15c:	ldc	0, cr0, [r1], {2}
    b160:	ldr	r2, [pc, #60]	; (b1a0 <list_sort@@Base+0x4f8>)
    b162:	movs	r1, #16
    b164:	ldr	r3, [pc, #60]	; (b1a4 <list_sort@@Base+0x4fc>)
    b166:	push	{r4, lr}
    b168:	add	r2, pc
    b16a:	sub	sp, #72	; 0x48
    b16c:	add	r4, sp, #4
    b16e:	ldr	r3, [r2, r3]
    b170:	mov	r0, r4
    b172:	ldr	r3, [r3, #0]
    b174:	str	r3, [sp, #68]	; 0x44
    b176:	mov.w	r3, #0
    b17a:	blx	886c <backtrace@plt>
    b17e:	movs	r2, #2
    b180:	mov	r1, r0
    b182:	mov	r0, r4
    b184:	blx	8b7c <backtrace_symbols_fd@plt>
    b188:	ldr	r2, [pc, #28]	; (b1a8 <list_sort@@Base+0x500>)
    b18a:	ldr	r3, [pc, #24]	; (b1a4 <list_sort@@Base+0x4fc>)
    b18c:	add	r2, pc
    b18e:	ldr	r3, [r2, r3]
    b190:	ldr	r2, [r3, #0]
    b192:	ldr	r3, [sp, #68]	; 0x44
    b194:	eors	r2, r3
    b196:	beq.n	b19c <list_sort@@Base+0x4f4>
    b198:	blx	86b8 <__stack_chk_fail@plt>
    b19c:	add	sp, #72	; 0x48
    b19e:	pop	{r4, pc}
    b1a0:	ldr	r4, [sp, #128]	; 0x80
    b1a2:	movs	r5, r0
    b1a4:	lsls	r4, r4, #8
    b1a6:	movs	r0, r0
    b1a8:	ldr	r3, [sp, #1008]	; 0x3f0
    b1aa:	movs	r5, r0

0000b1ac <ulist_init@@Base>:
    b1ac:	adds	r3, r0, #4
    b1ae:	strd	r3, r3, [r0, #4]
    b1b2:	movs	r3, #0
    b1b4:	str	r3, [r0, #12]
    b1b6:	str	r3, [r0, #0]
    b1b8:	bx	lr

0000b1ba <ulist_release@@Base>:
    b1ba:	push	{r4, r5, r6, lr}
    b1bc:	mov	r5, r0
    b1be:	mov	r4, r0
    b1c0:	ldr.w	r0, [r5, #4]!
    b1c4:	ldr.w	r6, [r0], #-16
    b1c8:	subs	r6, #16
    b1ca:	add.w	r3, r0, #16
    b1ce:	cmp	r5, r3
    b1d0:	bne.n	b1dc <ulist_release@@Base+0x22>
    b1d2:	movs	r3, #0
    b1d4:	strd	r5, r5, [r4, #4]
    b1d8:	str	r3, [r4, #12]
    b1da:	pop	{r4, r5, r6, pc}
    b1dc:	blx	85dc <free@plt+0x4>
    b1e0:	ldr	r3, [r6, #16]
    b1e2:	mov	r0, r6
    b1e4:	sub.w	r6, r3, #16
    b1e8:	b.n	b1ca <ulist_release@@Base+0x10>

0000b1ea <ulist_reinit@@Base>:
    b1ea:	push	{r4, lr}
    b1ec:	mov	r4, r0
    b1ee:	bl	b1ba <ulist_release@@Base>
    b1f2:	mov	r0, r4
    b1f4:	ldmia.w	sp!, {r4, lr}
    b1f8:	b.w	b1ac <ulist_init@@Base>

0000b1fc <ulist_alloc@@Base>:
    b1fc:	push	{r4, lr}
    b1fe:	movs	r0, #16
    b200:	blx	8820 <malloc@plt+0x4>
    b204:	mov	r4, r0
    b206:	cbz	r0, b20c <ulist_alloc@@Base+0x10>
    b208:	bl	b1ac <ulist_init@@Base>
    b20c:	mov	r0, r4
    b20e:	pop	{r4, pc}

0000b210 <ulist_free@@Base>:
    b210:	push	{r4, lr}
    b212:	mov	r4, r0
    b214:	cbz	r0, b224 <ulist_free@@Base+0x14>
    b216:	bl	b1ba <ulist_release@@Base>
    b21a:	mov	r0, r4
    b21c:	ldmia.w	sp!, {r4, lr}
    b220:	b.w	85d8 <free@plt>
    b224:	pop	{r4, pc}

0000b226 <ulist_add_merge@@Base>:
    b226:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b22a:	sub	sp, #20
    b22c:	mov	r6, r0
    b22e:	ldr	r7, [pc, #220]	; (b30c <ulist_add_merge@@Base+0xe6>)
    b230:	ldr	r0, [sp, #56]	; 0x38
    b232:	mov	r8, r2
    b234:	ldr	r5, [r6, #12]
    b236:	mov	r9, r3
    b238:	add	r7, pc
    b23a:	cbnz	r5, b24c <ulist_add_merge@@Base+0x26>
    b23c:	movs	r0, #40	; 0x28
    b23e:	blx	8820 <malloc@plt+0x4>
    b242:	mov	r4, r0
    b244:	cbnz	r0, b268 <ulist_add_merge@@Base+0x42>
    b246:	mvn.w	r0, #11
    b24a:	b.n	b306 <ulist_add_merge@@Base+0xe0>
    b24c:	ldrd	r2, r3, [r5, #-24]
    b250:	cmp	r3, r9
    b252:	it	eq
    b254:	cmpeq	r2, r8
    b256:	bcs.n	b25c <ulist_add_merge@@Base+0x36>
    b258:	ldr	r5, [r5, #4]
    b25a:	b.n	b23a <ulist_add_merge@@Base+0x14>
    b25c:	cmp	r9, r3
    b25e:	it	eq
    b260:	cmpeq	r8, r2
    b262:	bcs.n	b2fa <ulist_add_merge@@Base+0xd4>
    b264:	ldr	r5, [r5, #8]
    b266:	b.n	b23a <ulist_add_merge@@Base+0x14>
    b268:	ldrd	r2, r3, [sp, #48]	; 0x30
    b26c:	add.w	ip, r6, #12
    b270:	strd	r8, r9, [r4]
    b274:	strd	r2, r3, [r4, #8]
    b278:	mov	r2, ip
    b27a:	ldr	r3, [r2, #0]
    b27c:	cbnz	r3, b2aa <ulist_add_merge@@Base+0x84>
    b27e:	add.w	r0, r4, #24
    b282:	strd	r5, r3, [r4, #24]
    b286:	str	r3, [r4, #32]
    b288:	mov	r1, ip
    b28a:	str	r0, [r2, #0]
    b28c:	bl	131d2 <rb_insert_color@@Base>
    b290:	ldr	r3, [r6, #8]
    b292:	add.w	r2, r4, #16
    b296:	adds	r1, r6, #4
    b298:	str	r2, [r6, #8]
    b29a:	movs	r0, #1
    b29c:	strd	r1, r3, [r4, #16]
    b2a0:	str	r2, [r3, #0]
    b2a2:	ldr	r3, [r6, #0]
    b2a4:	adds	r3, #1
    b2a6:	str	r3, [r6, #0]
    b2a8:	b.n	b306 <ulist_add_merge@@Base+0xe0>
    b2aa:	ldrd	r0, r1, [r3, #-24]
    b2ae:	cmp	r1, r9
    b2b0:	it	eq
    b2b2:	cmpeq	r0, r8
    b2b4:	bcs.n	b2bc <ulist_add_merge@@Base+0x96>
    b2b6:	adds	r2, r3, #4
    b2b8:	mov	r5, r3
    b2ba:	b.n	b27a <ulist_add_merge@@Base+0x54>
    b2bc:	cmp	r9, r1
    b2be:	it	eq
    b2c0:	cmpeq	r8, r0
    b2c2:	bcs.n	b2ca <ulist_add_merge@@Base+0xa4>
    b2c4:	add.w	r2, r3, #8
    b2c8:	b.n	b2b8 <ulist_add_merge@@Base+0x92>
    b2ca:	ldr	r3, [pc, #68]	; (b310 <ulist_add_merge@@Base+0xea>)
    b2cc:	movs	r1, #1
    b2ce:	ldr	r2, [pc, #68]	; (b314 <ulist_add_merge@@Base+0xee>)
    b2d0:	ldr	r0, [r7, r3]
    b2d2:	movs	r3, #0
    b2d4:	str	r3, [sp, #12]
    b2d6:	add	r2, pc
    b2d8:	ldr	r3, [pc, #60]	; (b318 <ulist_add_merge@@Base+0xf2>)
    b2da:	add	r3, pc
    b2dc:	str	r3, [sp, #8]
    b2de:	ldr	r3, [pc, #60]	; (b31c <ulist_add_merge@@Base+0xf6>)
    b2e0:	add	r3, pc
    b2e2:	str	r3, [sp, #4]
    b2e4:	movs	r3, #211	; 0xd3
    b2e6:	str	r3, [sp, #0]
    b2e8:	ldr	r3, [pc, #52]	; (b320 <ulist_add_merge@@Base+0xfa>)
    b2ea:	ldr	r0, [r0, #0]
    b2ec:	add	r3, pc
    b2ee:	blx	8a14 <__fprintf_chk@plt+0x4>
    b2f2:	bl	b160 <list_sort@@Base+0x4b8>
    b2f6:	blx	8b34 <abort@plt>
    b2fa:	cbz	r0, b306 <ulist_add_merge@@Base+0xe0>
    b2fc:	ldrd	r2, r3, [r5, #-16]
    b300:	strd	r2, r3, [r0]
    b304:	movs	r0, #0
    b306:	add	sp, #20
    b308:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b30c:	ldr	r3, [sp, #320]	; 0x140
    b30e:	movs	r5, r0
    b310:	lsls	r4, r6, #8
    b312:	movs	r0, r0
    b314:	b.n	af0a <list_sort@@Base+0x262>
    b316:	movs	r2, r0
    b318:	add.w	r0, r9, r2
    b31c:	adds.w	r0, fp, r2
    b320:			; <UNDEFINED> instruction: 0xeae10002

0000b324 <ulist_add@@Base>:
    b324:	push	{r4, r5, lr}
    b326:	sub	sp, #20
    b328:	ldr	r1, [sp, #40]	; 0x28
    b32a:	ldrd	r4, r5, [sp, #32]
    b32e:	str	r1, [sp, #12]
    b330:	movs	r1, #0
    b332:	strd	r4, r5, [sp]
    b336:	str	r1, [sp, #8]
    b338:	bl	b226 <ulist_add_merge@@Base>
    b33c:	add	sp, #20
    b33e:	pop	{r4, r5, pc}

0000b340 <ulist_del@@Base>:
    b340:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    b344:	mov	r5, r0
    b346:	ldr	r4, [r5, #12]
    b348:	mov	r0, r2
    b34a:	ldr.w	r8, [pc, #152]	; b3e4 <ulist_del@@Base+0xa4>
    b34e:	mov	r1, r3
    b350:	add	r8, pc
    b352:	cbnz	r4, b358 <ulist_del@@Base+0x18>
    b354:	movs	r0, #1
    b356:	b.n	b37a <ulist_del@@Base+0x3a>
    b358:	ldrd	r2, r3, [r4, #-24]
    b35c:	cmp	r3, r1
    b35e:	it	eq
    b360:	cmpeq	r2, r0
    b362:	bcs.n	b368 <ulist_del@@Base+0x28>
    b364:	ldr	r4, [r4, #4]
    b366:	b.n	b352 <ulist_del@@Base+0x12>
    b368:	cmp	r1, r3
    b36a:	it	eq
    b36c:	cmpeq	r0, r2
    b36e:	bcs.n	b380 <ulist_del@@Base+0x40>
    b370:	ldr	r4, [r4, #8]
    b372:	b.n	b352 <ulist_del@@Base+0x12>
    b374:	movs	r0, #0
    b376:	subs	r3, #1
    b378:	str	r3, [r5, #0]
    b37a:	add	sp, #16
    b37c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b380:	ldrd	r6, r7, [r4, #-16]
    b384:	ldrd	r2, r3, [sp, #40]	; 0x28
    b388:	cmp	r7, r3
    b38a:	it	eq
    b38c:	cmpeq	r6, r2
    b38e:	bne.n	b354 <ulist_del@@Base+0x14>
    b390:	add.w	r1, r5, #12
    b394:	mov	r0, r4
    b396:	bl	13278 <rb_erase@@Base>
    b39a:	ldrd	r2, r3, [r4, #-8]
    b39e:	sub.w	r6, r4, #24
    b3a2:	str	r3, [r2, #4]
    b3a4:	mov	r0, r6
    b3a6:	str	r2, [r3, #0]
    b3a8:	blx	85dc <free@plt+0x4>
    b3ac:	ldr	r3, [r5, #0]
    b3ae:	cmp	r3, #0
    b3b0:	bne.n	b374 <ulist_del@@Base+0x34>
    b3b2:	ldr	r3, [pc, #52]	; (b3e8 <ulist_del@@Base+0xa8>)
    b3b4:	movs	r1, #1
    b3b6:	ldr	r2, [pc, #52]	; (b3ec <ulist_del@@Base+0xac>)
    b3b8:	ldr.w	r0, [r8, r3]
    b3bc:	add	r2, pc
    b3be:	ldr	r3, [pc, #48]	; (b3f0 <ulist_del@@Base+0xb0>)
    b3c0:	str	r1, [sp, #12]
    b3c2:	add	r3, pc
    b3c4:	str	r3, [sp, #8]
    b3c6:	ldr	r3, [pc, #44]	; (b3f4 <ulist_del@@Base+0xb4>)
    b3c8:	add	r3, pc
    b3ca:	adds	r3, #16
    b3cc:	str	r3, [sp, #4]
    b3ce:	movs	r3, #140	; 0x8c
    b3d0:	str	r3, [sp, #0]
    b3d2:	ldr	r3, [pc, #36]	; (b3f8 <ulist_del@@Base+0xb8>)
    b3d4:	ldr	r0, [r0, #0]
    b3d6:	add	r3, pc
    b3d8:	blx	8a14 <__fprintf_chk@plt+0x4>
    b3dc:	bl	b160 <list_sort@@Base+0x4b8>
    b3e0:	blx	8b34 <abort@plt>
    b3e4:	ldr	r2, [sp, #224]	; 0xe0
    b3e6:	movs	r5, r0
    b3e8:	lsls	r4, r6, #8
    b3ea:	movs	r0, r0
    b3ec:	b.n	bbbc <ulist_next@@Base+0x7c0>
    b3ee:	movs	r2, r0
    b3f0:	bic.w	r0, r6, r2
    b3f4:	bics.w	r0, r3, r2
    b3f8:	ldrd	r0, r0, [r7, #8]!

0000b3fc <ulist_next@@Base>:
    b3fc:	ldr	r3, [r0, #4]
    b3fe:	adds	r2, r0, #4
    b400:	cmp	r2, r3
    b402:	beq.n	b416 <ulist_next@@Base+0x1a>
    b404:	ldr	r0, [r1, #0]
    b406:	cbz	r0, b40e <ulist_next@@Base+0x12>
    b408:	ldr	r3, [r0, #0]
    b40a:	cmp	r2, r3
    b40c:	beq.n	b416 <ulist_next@@Base+0x1a>
    b40e:	str	r3, [r1, #0]
    b410:	ldr	r0, [r1, #0]
    b412:	subs	r0, #16
    b414:	bx	lr
    b416:	movs	r0, #0
    b418:	bx	lr
    b41a:	nop
    b41c:	ldrd	r2, r3, [r0]
    b420:	str	r3, [r2, #4]
    b422:	str	r2, [r3, #0]
    b424:	ldr	r2, [pc, #8]	; (b430 <ulist_next@@Base+0x34>)
    b426:	ldr	r3, [pc, #12]	; (b434 <ulist_next@@Base+0x38>)
    b428:	strd	r2, r3, [r0]
    b42c:	bx	lr
    b42e:	nop
    b430:	lsls	r0, r0, #4
    b432:	movs	r0, r2
    b434:	lsls	r0, r0, #8
    b436:	movs	r0, r4
    b438:	mov	r3, r1
    b43a:	ldr	r1, [pc, #44]	; (b468 <ulist_next@@Base+0x6c>)
    b43c:	mov	r2, r0
    b43e:	add	r1, pc
    b440:	push	{r4, r5, lr}
    b442:	ldr	r0, [r1, #0]
    b444:	cbz	r0, b460 <ulist_next@@Base+0x64>
    b446:	ldrd	r4, r5, [r0, #-96]	; 0x60
    b44a:	cmp	r3, r5
    b44c:	it	eq
    b44e:	cmpeq	r2, r4
    b450:	bcs.n	b456 <ulist_next@@Base+0x5a>
    b452:	ldr	r0, [r0, #8]
    b454:	b.n	b444 <ulist_next@@Base+0x48>
    b456:	cmp	r5, r3
    b458:	it	eq
    b45a:	cmpeq	r4, r2
    b45c:	bcc.n	b462 <ulist_next@@Base+0x66>
    b45e:	subs	r0, #96	; 0x60
    b460:	pop	{r4, r5, pc}
    b462:	ldr	r0, [r0, #4]
    b464:	b.n	b444 <ulist_next@@Base+0x48>
    b466:	nop
    b468:	add	r6, sp, #24
    b46a:	movs	r5, r0
    b46c:	subs	r0, #32
    b46e:	b.w	85d8 <free@plt>
    b472:	ldr	r3, [pc, #92]	; (b4d0 <ulist_next@@Base+0xd4>)
    b474:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b478:	add	r3, pc
    b47a:	mov	r4, r0
    b47c:	mov	r5, r1
    b47e:	ldr	r3, [r3, #24]
    b480:	cbz	r3, b4ac <ulist_next@@Base+0xb0>
    b482:	ldrd	r0, r1, [r3, #-32]
    b486:	cmp	r5, r1
    b488:	it	eq
    b48a:	cmpeq	r4, r0
    b48c:	bcs.n	b492 <ulist_next@@Base+0x96>
    b48e:	ldr	r3, [r3, #8]
    b490:	b.n	b480 <ulist_next@@Base+0x84>
    b492:	cmp	r1, r5
    b494:	it	eq
    b496:	cmpeq	r0, r4
    b498:	bcs.n	b49e <ulist_next@@Base+0xa2>
    b49a:	ldr	r3, [r3, #4]
    b49c:	b.n	b480 <ulist_next@@Base+0x84>
    b49e:	sub.w	r4, r3, #32
    b4a2:	mov	r0, r3
    b4a4:	bl	1353a <rb_prev@@Base>
    b4a8:	mov	r3, r4
    b4aa:	cbnz	r0, b4b2 <ulist_next@@Base+0xb6>
    b4ac:	mov	r0, r3
    b4ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b4b2:	ldrd	r6, r7, [r0, #-32]
    b4b6:	sub.w	r8, r0, #32
    b4ba:	ldrd	r4, r5, [r3]
    b4be:	cmp	r7, r5
    b4c0:	it	eq
    b4c2:	cmpeq	r6, r4
    b4c4:	bne.n	b4ac <ulist_next@@Base+0xb0>
    b4c6:	bl	1353a <rb_prev@@Base>
    b4ca:	mov	r3, r8
    b4cc:	b.n	b4aa <ulist_next@@Base+0xae>
    b4ce:	nop
    b4d0:	add	r5, sp, #816	; 0x330
    b4d2:	movs	r5, r0
    b4d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4d8:	mov	r1, r3
    b4da:	sub	sp, #28
    b4dc:	mov	r5, r0
    b4de:	mov	r0, r2
    b4e0:	mov	r6, r2
    b4e2:	mov	r7, r3
    b4e4:	bl	b472 <ulist_next@@Base+0x76>
    b4e8:	cbnz	r0, b4f8 <ulist_next@@Base+0xfc>
    b4ea:	ldr	r0, [pc, #208]	; (b5bc <ulist_next@@Base+0x1c0>)
    b4ec:	mov	r2, r6
    b4ee:	mov	r3, r7
    b4f0:	add	r0, pc
    b4f2:	bl	17424 <__btrfs_error@@Base>
    b4f6:	b.n	b516 <ulist_next@@Base+0x11a>
    b4f8:	mov	r4, r0
    b4fa:	ldrd	r8, r9, [r4], #32
    b4fe:	cmp	r9, r7
    b500:	it	eq
    b502:	cmpeq	r8, r6
    b504:	beq.n	b520 <ulist_next@@Base+0x124>
    b506:	ldr	r0, [pc, #184]	; (b5c0 <ulist_next@@Base+0x1c4>)
    b508:	mov	r2, r8
    b50a:	mov	r3, r9
    b50c:	strd	r6, r7, [sp]
    b510:	add	r0, pc
    b512:	bl	17424 <__btrfs_error@@Base>
    b516:	mvn.w	r0, #4
    b51a:	add	sp, #28
    b51c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b520:	str	r0, [sp, #20]
    b522:	mov	r0, r4
    b524:	bl	1353a <rb_prev@@Base>
    b528:	ldr	r1, [sp, #20]
    b52a:	cbz	r0, b53e <ulist_next@@Base+0x142>
    b52c:	ldrd	r2, r3, [r0, #-32]
    b530:	cmp	r3, r9
    b532:	it	eq
    b534:	cmpeq	r2, r8
    b536:	bne.n	b53e <ulist_next@@Base+0x142>
    b538:	ldr	r0, [pc, #136]	; (b5c4 <ulist_next@@Base+0x1c8>)
    b53a:	add	r0, pc
    b53c:	b.n	b4f2 <ulist_next@@Base+0xf6>
    b53e:	mov.w	sl, #0
    b542:	mov.w	fp, #0
    b546:	ldrd	r2, r3, [r1, #24]
    b54a:	orrs.w	r0, r2, r3
    b54e:	beq.n	b576 <ulist_next@@Base+0x17a>
    b550:	cmp	r3, #0
    b552:	it	eq
    b554:	cmpeq	r2, #5
    b556:	beq.n	b562 <ulist_next@@Base+0x166>
    b558:	cmp.w	r2, #256	; 0x100
    b55c:	sbcs.w	r1, r3, #0
    b560:	blt.n	b592 <ulist_next@@Base+0x196>
    b562:	movs	r1, #0
    b564:	mov	r0, r5
    b566:	str	r1, [sp, #8]
    b568:	strd	sl, fp, [sp]
    b56c:	bl	b324 <ulist_add@@Base>
    b570:	cmp	r0, #0
    b572:	bge.n	b592 <ulist_next@@Base+0x196>
    b574:	b.n	b51a <ulist_next@@Base+0x11e>
    b576:	ldrd	r2, r3, [r1, #16]
    b57a:	ldrd	r8, r9, [r1]
    b57e:	cmp	r3, r9
    b580:	it	eq
    b582:	cmpeq	r2, r8
    b584:	bne.n	b5b2 <ulist_next@@Base+0x1b6>
    b586:	mvn.w	r2, #7
    b58a:	mov.w	r3, #4294967295	; 0xffffffff
    b58e:	strd	r2, r3, [r1, #24]
    b592:	mov	r0, r4
    b594:	bl	1350e <rb_next@@Base>
    b598:	mov	r4, r0
    b59a:	cmp	r0, #0
    b59c:	beq.n	b51a <ulist_next@@Base+0x11e>
    b59e:	ldrd	r2, r3, [r0, #-32]
    b5a2:	sub.w	r1, r0, #32
    b5a6:	cmp	r3, r7
    b5a8:	it	eq
    b5aa:	cmpeq	r2, r6
    b5ac:	beq.n	b546 <ulist_next@@Base+0x14a>
    b5ae:	movs	r0, #0
    b5b0:	b.n	b51a <ulist_next@@Base+0x11e>
    b5b2:	mov	r0, r5
    b5b4:	bl	b4d4 <ulist_next@@Base+0xd8>
    b5b8:	b.n	b570 <ulist_next@@Base+0x174>
    b5ba:	nop
    b5bc:	stmdb	lr!, {r1}
    b5c0:	ldmdb	r3!, {r1}
    b5c4:	ldmdb	lr!, {r1}
    b5c8:	ldr	r2, [pc, #80]	; (b61c <ulist_next@@Base+0x220>)
    b5ca:	ldr	r3, [pc, #84]	; (b620 <ulist_next@@Base+0x224>)
    b5cc:	push	{r0, r1, r4, r5, r6, lr}
    b5ce:	add	r2, pc
    b5d0:	ldr	r4, [pc, #80]	; (b624 <ulist_next@@Base+0x228>)
    b5d2:	ldr	r3, [r2, r3]
    b5d4:	add	r4, pc
    b5d6:	ldr	r3, [r3, #0]
    b5d8:	str	r3, [sp, #4]
    b5da:	mov.w	r3, #0
    b5de:	ldr	r3, [r4, #28]
    b5e0:	cbz	r3, b5fc <ulist_next@@Base+0x200>
    b5e2:	mov	r6, sp
    b5e4:	movs	r3, #0
    b5e6:	str	r3, [sp, #0]
    b5e8:	ldr	r0, [r4, #28]
    b5ea:	mov	r1, r6
    b5ec:	bl	b3fc <ulist_next@@Base>
    b5f0:	mov	r5, r0
    b5f2:	cbnz	r0, b610 <ulist_next@@Base+0x214>
    b5f4:	ldr	r0, [r4, #28]
    b5f6:	bl	b210 <ulist_free@@Base>
    b5fa:	str	r5, [r4, #28]
    b5fc:	ldr	r2, [pc, #40]	; (b628 <ulist_next@@Base+0x22c>)
    b5fe:	ldr	r3, [pc, #32]	; (b620 <ulist_next@@Base+0x224>)
    b600:	add	r2, pc
    b602:	ldr	r3, [r2, r3]
    b604:	ldr	r2, [r3, #0]
    b606:	ldr	r3, [sp, #4]
    b608:	eors	r2, r3
    b60a:	beq.n	b618 <ulist_next@@Base+0x21c>
    b60c:	blx	86b8 <__stack_chk_fail@plt>
    b610:	ldr	r0, [r5, #8]
    b612:	blx	85dc <free@plt+0x4>
    b616:	b.n	b5e8 <ulist_next@@Base+0x1ec>
    b618:	add	sp, #8
    b61a:	pop	{r4, r5, r6, pc}
    b61c:	str	r7, [sp, #744]	; 0x2e8
    b61e:	movs	r5, r0
    b620:	lsls	r4, r4, #8
    b622:	movs	r0, r0
    b624:	add	r4, sp, #448	; 0x1c0
    b626:	movs	r5, r0
    b628:	str	r7, [sp, #544]	; 0x220
    b62a:	movs	r5, r0
    b62c:	ldr.w	ip, [pc, #76]	; b67c <ulist_next@@Base+0x280>
    b630:	ldr	r5, [pc, #76]	; (b680 <ulist_next@@Base+0x284>)
    b632:	add	ip, pc
    b634:	ldr	r4, [pc, #76]	; (b684 <ulist_next@@Base+0x288>)
    b636:	push	{lr}
    b638:	sub	sp, #92	; 0x5c
    b63a:	ldr.w	r5, [ip, r5]
    b63e:	add	r4, pc
    b640:	ldr	r5, [r5, #0]
    b642:	str	r5, [sp, #84]	; 0x54
    b644:	mov.w	r5, #0
    b648:	ldr	r5, [pc, #60]	; (b688 <ulist_next@@Base+0x28c>)
    b64a:	ldr	r4, [r4, r5]
    b64c:	ldr	r5, [sp, #96]	; 0x60
    b64e:	strd	r3, r2, [sp]
    b652:	mov	r3, r1
    b654:	ldr	r2, [pc, #52]	; (b68c <ulist_next@@Base+0x290>)
    b656:	movs	r1, #1
    b658:	strd	r0, r5, [sp, #8]
    b65c:	ldr	r0, [r4, #0]
    b65e:	add	r4, sp, #20
    b660:	add	r2, pc
    b662:	blx	8a14 <__fprintf_chk@plt+0x4>
    b666:	movs	r1, #16
    b668:	mov	r0, r4
    b66a:	blx	886c <backtrace@plt>
    b66e:	movs	r2, #2
    b670:	mov	r1, r0
    b672:	mov	r0, r4
    b674:	blx	8b7c <backtrace_symbols_fd@plt>
    b678:	blx	8b34 <abort@plt>
    b67c:	str	r7, [sp, #344]	; 0x158
    b67e:	movs	r5, r0
    b680:	lsls	r4, r4, #8
    b682:	movs	r0, r0
    b684:	str	r7, [sp, #296]	; 0x128
    b686:	movs	r5, r0
    b688:	lsls	r4, r6, #8
    b68a:	movs	r0, r0
    b68c:	b.n	b914 <ulist_next@@Base+0x518>
    b68e:	movs	r2, r0
    b690:	push	{r0, r1, r2, lr}
    b692:	cbz	r3, b6a4 <ulist_next@@Base+0x2a8>
    b694:	movs	r3, #1
    b696:	str	r3, [sp, #0]
    b698:	mov	r3, r2
    b69a:	mov	r2, r1
    b69c:	ldr	r1, [pc, #12]	; (b6ac <ulist_next@@Base+0x2b0>)
    b69e:	add	r1, pc
    b6a0:	bl	b62c <ulist_next@@Base+0x230>
    b6a4:	add	sp, #12
    b6a6:	ldr.w	pc, [sp], #4
    b6aa:	nop
    b6ac:			; <UNDEFINED> instruction: 0xe8070002
    b6b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6b4:	vpush	{d8-d9}
    b6b8:	sub	sp, #76	; 0x4c
    b6ba:	strd	r2, r3, [sp, #24]
    b6be:	ldr.w	r2, [pc, #1040]	; bad0 <ulist_next@@Base+0x6d4>
    b6c2:	ldr.w	r3, [pc, #1040]	; bad4 <ulist_next@@Base+0x6d8>
    b6c6:	add	r2, pc
    b6c8:	str	r0, [sp, #52]	; 0x34
    b6ca:	movs	r0, #0
    b6cc:	ldr	r3, [r2, r3]
    b6ce:	ldr	r3, [r3, #0]
    b6d0:	str	r3, [sp, #68]	; 0x44
    b6d2:	mov.w	r3, #0
    b6d6:	bl	b1fc <ulist_alloc@@Base>
    b6da:	mov	r4, r0
    b6dc:	ldr	r0, [pc, #1016]	; (bad8 <ulist_next@@Base+0x6dc>)
    b6de:	add	r0, pc
    b6e0:	adds	r0, #24
    b6e2:	bl	134ee <rb_first@@Base>
    b6e6:	ldr	r3, [pc, #1012]	; (badc <ulist_next@@Base+0x6e0>)
    b6e8:	add	r3, pc
    b6ea:	adds	r3, #17
    b6ec:	vmov	s18, r3
    b6f0:	mov	fp, r0
    b6f2:	mov	r0, r4
    b6f4:	cmp.w	fp, #0
    b6f8:	bne.n	b716 <ulist_next@@Base+0x31a>
    b6fa:	bl	b210 <ulist_free@@Base>
    b6fe:	mov	r0, fp
    b700:	ldr	r2, [pc, #988]	; (bae0 <ulist_next@@Base+0x6e4>)
    b702:	ldr	r3, [pc, #976]	; (bad4 <ulist_next@@Base+0x6d8>)
    b704:	add	r2, pc
    b706:	ldr	r3, [r2, r3]
    b708:	ldr	r2, [r3, #0]
    b70a:	ldr	r3, [sp, #68]	; 0x44
    b70c:	eors	r2, r3
    b70e:	beq.w	bac4 <ulist_next@@Base+0x6c8>
    b712:	blx	86b8 <__stack_chk_fail@plt>
    b716:	ldr	r6, [pc, #972]	; (bae4 <ulist_next@@Base+0x6e8>)
    b718:	bl	b1ea <ulist_reinit@@Base>
    b71c:	ldr	r7, [pc, #968]	; (bae8 <ulist_next@@Base+0x6ec>)
    b71e:	sub.w	r5, fp, #32
    b722:	ldr.w	sl, [pc, #968]	; baec <ulist_next@@Base+0x6f0>
    b726:	add	r6, pc
    b728:	ldrd	r2, r3, [fp, #-24]
    b72c:	add	r7, pc
    b72e:	ldrd	r8, r9, [fp, #-32]
    b732:	add	sl, pc
    b734:	strd	r2, r3, [sp, #16]
    b738:	ldrd	r2, r3, [r5]
    b73c:	mov	r1, r6
    b73e:	mov	r0, r7
    b740:	cmp	r3, r9
    b742:	it	eq
    b744:	cmpeq	r2, r8
    b746:	movw	r2, #545	; 0x221
    b74a:	ite	ne
    b74c:	movne	r3, #1
    b74e:	moveq	r3, #0
    b750:	bl	b690 <ulist_next@@Base+0x294>
    b754:	ldrd	r2, r3, [r5, #8]
    b758:	ldrd	r0, r1, [sp, #16]
    b75c:	cmp	r3, r1
    b75e:	mov	r1, r6
    b760:	it	eq
    b762:	cmpeq	r2, r0
    b764:	movw	r2, #546	; 0x222
    b768:	mov	r0, sl
    b76a:	ite	ne
    b76c:	movne	r3, #1
    b76e:	moveq	r3, #0
    b770:	bl	b690 <ulist_next@@Base+0x294>
    b774:	ldrd	r2, r3, [r5, #24]
    b778:	orrs.w	r1, r2, r3
    b77c:	beq.n	b860 <ulist_next@@Base+0x464>
    b77e:	cmp	r3, #0
    b780:	it	eq
    b782:	cmpeq	r2, #5
    b784:	beq.n	b83c <ulist_next@@Base+0x440>
    b786:	cmp.w	r2, #256	; 0x100
    b78a:	sbcs.w	r1, r3, #0
    b78e:	bge.n	b83c <ulist_next@@Base+0x440>
    b790:	mov	r0, fp
    b792:	bl	1350e <rb_next@@Base>
    b796:	mov	fp, r0
    b798:	cmp	r0, #0
    b79a:	bne.n	b86c <ulist_next@@Base+0x470>
    b79c:	ldrd	r2, r3, [sp, #24]
    b7a0:	orrs	r3, r2
    b7a2:	beq.n	b812 <ulist_next@@Base+0x416>
    b7a4:	ldr	r5, [pc, #840]	; (baf0 <ulist_next@@Base+0x6f4>)
    b7a6:	movs	r3, #0
    b7a8:	str	r3, [sp, #60]	; 0x3c
    b7aa:	add	r5, pc
    b7ac:	add	r1, sp, #60	; 0x3c
    b7ae:	mov	r0, r4
    b7b0:	bl	b3fc <ulist_next@@Base>
    b7b4:	cbz	r0, b812 <ulist_next@@Base+0x416>
    b7b6:	ldrd	r6, r7, [r0]
    b7ba:	movw	r2, #1465	; 0x5b9
    b7be:	vmov	r1, s18
    b7c2:	mov	r0, r5
    b7c4:	orrs.w	r3, r6, r7
    b7c8:	ite	eq
    b7ca:	moveq	r3, #1
    b7cc:	movne	r3, #0
    b7ce:	bl	b690 <ulist_next@@Base+0x294>
    b7d2:	ldrd	r2, r3, [sp, #24]
    b7d6:	cmp	r3, r7
    b7d8:	it	eq
    b7da:	cmpeq	r2, r6
    b7dc:	bne.n	b7ac <ulist_next@@Base+0x3b0>
    b7de:	ldr	r3, [r4, #0]
    b7e0:	add	r5, sp, #64	; 0x40
    b7e2:	ldr	r6, [pc, #784]	; (baf4 <ulist_next@@Base+0x6f8>)
    b7e4:	movs	r0, #1
    b7e6:	ldr	r1, [pc, #784]	; (baf8 <ulist_next@@Base+0x6fc>)
    b7e8:	str	r3, [sp, #8]
    b7ea:	add	r6, pc
    b7ec:	ldrd	r2, r3, [sp, #16]
    b7f0:	add	r1, pc
    b7f2:	strd	r2, r3, [sp]
    b7f6:	mov	r3, r9
    b7f8:	mov	r2, r8
    b7fa:	blx	89ec <__printf_chk@plt+0x4>
    b7fe:	movs	r3, #0
    b800:	str	r3, [sp, #64]	; 0x40
    b802:	mov	r1, r5
    b804:	mov	r0, r4
    b806:	bl	b3fc <ulist_next@@Base>
    b80a:	cbnz	r0, b880 <ulist_next@@Base+0x484>
    b80c:	movs	r0, #10
    b80e:	blx	8988 <putchar@plt+0x4>
    b812:	ldr	r3, [sp, #52]	; 0x34
    b814:	cmp	r3, #0
    b816:	beq.w	b6f2 <ulist_next@@Base+0x2f6>
    b81a:	movs	r0, #0
    b81c:	bl	b1fc <ulist_alloc@@Base>
    b820:	mov	r7, r0
    b822:	movs	r0, #0
    b824:	bl	b1fc <ulist_alloc@@Base>
    b828:	mov	r5, r0
    b82a:	cbz	r7, b82e <ulist_next@@Base+0x432>
    b82c:	cbnz	r0, b88e <ulist_next@@Base+0x492>
    b82e:	mov	r0, r7
    b830:	bl	b210 <ulist_free@@Base>
    b834:	mov	r0, r5
    b836:	bl	b210 <ulist_free@@Base>
    b83a:	b.n	b852 <ulist_next@@Base+0x456>
    b83c:	movs	r1, #0
    b83e:	movs	r0, #0
    b840:	str	r1, [sp, #8]
    b842:	movs	r1, #0
    b844:	strd	r0, r1, [sp]
    b848:	mov	r0, r4
    b84a:	bl	b324 <ulist_add@@Base>
    b84e:	cmp	r0, #0
    b850:	bge.n	b790 <ulist_next@@Base+0x394>
    b852:	ldr	r0, [pc, #680]	; (bafc <ulist_next@@Base+0x700>)
    b854:	add	r0, pc
    b856:	bl	17424 <__btrfs_error@@Base>
    b85a:	mvn.w	r0, #11
    b85e:	b.n	b700 <ulist_next@@Base+0x304>
    b860:	ldrd	r2, r3, [r5, #16]
    b864:	mov	r0, r4
    b866:	bl	b4d4 <ulist_next@@Base+0xd8>
    b86a:	b.n	b84e <ulist_next@@Base+0x452>
    b86c:	ldrd	r2, r3, [r0, #-32]
    b870:	sub.w	r5, r0, #32
    b874:	cmp	r3, r9
    b876:	it	eq
    b878:	cmpeq	r2, r8
    b87a:	beq.w	b738 <ulist_next@@Base+0x33c>
    b87e:	b.n	b79c <ulist_next@@Base+0x3a0>
    b880:	ldrd	r2, r3, [r0]
    b884:	mov	r1, r6
    b886:	movs	r0, #1
    b888:	blx	89ec <__printf_chk@plt+0x4>
    b88c:	b.n	b802 <ulist_next@@Base+0x406>
    b88e:	movs	r3, #0
    b890:	str	r3, [sp, #60]	; 0x3c
    b892:	ldr	r3, [pc, #620]	; (bb00 <ulist_next@@Base+0x704>)
    b894:	add	r3, pc
    b896:	adds	r3, #35	; 0x23
    b898:	vmov	s17, r3
    b89c:	ldr.w	sl, [pc, #612]	; bb04 <ulist_next@@Base+0x708>
    b8a0:	add	sl, pc
    b8a2:	add.w	r8, sp, #60	; 0x3c
    b8a6:	mov	r0, r4
    b8a8:	mov	r1, r8
    b8aa:	bl	b3fc <ulist_next@@Base>
    b8ae:	cbnz	r0, b8fe <ulist_next@@Base+0x502>
    b8b0:	ldr	r3, [r4, #0]
    b8b2:	mov.w	sl, #0
    b8b6:	str	r0, [sp, #60]	; 0x3c
    b8b8:	mov	r9, r3
    b8ba:	ldr	r3, [pc, #588]	; (bb08 <ulist_next@@Base+0x70c>)
    b8bc:	add	r3, pc
    b8be:	str	r3, [sp, #32]
    b8c0:	mov	r1, r8
    b8c2:	mov	r0, r7
    b8c4:	bl	b3fc <ulist_next@@Base>
    b8c8:	cmp	r0, #0
    b8ca:	bne.w	ba40 <ulist_next@@Base+0x644>
    b8ce:	ldr	r6, [pc, #572]	; (bb0c <ulist_next@@Base+0x710>)
    b8d0:	ldr	r1, [r4, #0]
    b8d2:	add	r6, pc
    b8d4:	adds	r1, #1
    b8d6:	ldrd	r2, r3, [r6]
    b8da:	adds	r2, r2, r1
    b8dc:	adc.w	r3, r3, r1, asr #31
    b8e0:	strd	r2, r3, [r6]
    b8e4:	mov	r3, r0
    b8e6:	mov	r0, r7
    b8e8:	str	r3, [sp, #16]
    b8ea:	bl	b210 <ulist_free@@Base>
    b8ee:	mov	r0, r5
    b8f0:	bl	b210 <ulist_free@@Base>
    b8f4:	ldr	r3, [sp, #16]
    b8f6:	cmp	r3, #0
    b8f8:	beq.w	b6f2 <ulist_next@@Base+0x2f6>
    b8fc:	b.n	b852 <ulist_next@@Base+0x456>
    b8fe:	ldrd	r8, r9, [r0]
    b902:	mov.w	r2, #422	; 0x1a6
    b906:	vmov	r1, s17
    b90a:	mov	r0, sl
    b90c:	orrs.w	r3, r8, r9
    b910:	ite	eq
    b912:	moveq	r3, #1
    b914:	movne	r3, #0
    b916:	bl	b690 <ulist_next@@Base+0x294>
    b91a:	mov	r0, r8
    b91c:	mov	r1, r9
    b91e:	bl	b438 <ulist_next@@Base+0x3c>
    b922:	mov	r6, r0
    b924:	cmp	r0, #0
    b926:	beq.n	b8a2 <ulist_next@@Base+0x4a6>
    b928:	cmp.w	r9, #0
    b92c:	it	eq
    b92e:	cmpeq.w	r8, #5
    b932:	beq.w	ba3c <ulist_next@@Base+0x640>
    b936:	cmp.w	r8, #256	; 0x100
    b93a:	sbcs.w	r3, r9, #0
    b93e:	ite	ge
    b940:	movge	r3, #1
    b942:	movlt	r3, #0
    b944:	ldr	r1, [pc, #456]	; (bb10 <ulist_next@@Base+0x714>)
    b946:	eor.w	r3, r3, #1
    b94a:	ldr	r0, [pc, #456]	; (bb14 <ulist_next@@Base+0x718>)
    b94c:	mov.w	r2, #432	; 0x1b0
    b950:	add	r1, pc
    b952:	mov.w	r8, #0
    b956:	adds	r1, #35	; 0x23
    b958:	add	r0, pc
    b95a:	bl	b690 <ulist_next@@Base+0x294>
    b95e:	str.w	r8, [sp, #8]
    b962:	strd	r6, r8, [sp]
    b966:	mov	r0, r7
    b968:	ldrd	r2, r3, [r6]
    b96c:	bl	b324 <ulist_add@@Base>
    b970:	subs	r3, r0, #0
    b972:	blt.n	b8e6 <ulist_next@@Base+0x4ea>
    b974:	mov	r0, r5
    b976:	bl	b1ea <ulist_reinit@@Base>
    b97a:	str.w	r8, [sp, #8]
    b97e:	strd	r6, r8, [sp]
    b982:	mov	r0, r5
    b984:	ldrd	r2, r3, [r6]
    b988:	bl	b324 <ulist_add@@Base>
    b98c:	subs	r3, r0, #0
    b98e:	blt.n	b8e6 <ulist_next@@Base+0x4ea>
    b990:	ldr	r3, [pc, #388]	; (bb18 <ulist_next@@Base+0x71c>)
    b992:	str.w	r8, [sp, #64]	; 0x40
    b996:	add	r3, pc
    b998:	adds	r3, #35	; 0x23
    b99a:	vmov	s16, r3
    b99e:	add	r1, sp, #64	; 0x40
    b9a0:	mov	r0, r5
    b9a2:	bl	b3fc <ulist_next@@Base>
    b9a6:	cmp	r0, #0
    b9a8:	beq.w	b89c <ulist_next@@Base+0x4a0>
    b9ac:	ldr	r3, [pc, #364]	; (bb1c <ulist_next@@Base+0x720>)
    b9ae:	ldr	r6, [r0, #8]
    b9b0:	add	r3, pc
    b9b2:	ldr.w	sl, [pc, #364]	; bb20 <ulist_next@@Base+0x724>
    b9b6:	ldrd	r0, r1, [r3]
    b9ba:	add	sl, pc
    b9bc:	ldrd	r2, r3, [r6, #128]	; 0x80
    b9c0:	ldr.w	r8, [r6, #108]	; 0x6c
    b9c4:	cmp	r3, r1
    b9c6:	it	eq
    b9c8:	cmpeq	r2, r0
    b9ca:	it	cc
    b9cc:	strdcc	r0, r1, [r6, #128]	; 0x80
    b9d0:	ldrd	r3, r2, [r6, #128]	; 0x80
    b9d4:	adds	r3, #1
    b9d6:	adc.w	r2, r2, #0
    b9da:	strd	r3, r2, [r6, #128]	; 0x80
    b9de:	add.w	r3, r6, #108	; 0x6c
    b9e2:	cmp	r8, r3
    b9e4:	beq.n	b99e <ulist_next@@Base+0x5a2>
    b9e6:	ldr.w	r9, [r8, #16]
    b9ea:	mov	r0, sl
    b9ec:	vmov	r1, s16
    b9f0:	ldrd	r2, r3, [r9]
    b9f4:	strd	r2, r3, [sp, #32]
    b9f8:	clz	r3, r6
    b9fc:	mov.w	r2, #458	; 0x1ca
    ba00:	lsrs	r3, r3, #5
    ba02:	bl	b690 <ulist_next@@Base+0x294>
    ba06:	movs	r1, #0
    ba08:	ldrd	r2, r3, [sp, #32]
    ba0c:	mov	r0, r7
    ba0e:	str	r1, [sp, #8]
    ba10:	strd	r9, r1, [sp]
    ba14:	bl	b324 <ulist_add@@Base>
    ba18:	subs	r3, r0, #0
    ba1a:	blt.w	b8e6 <ulist_next@@Base+0x4ea>
    ba1e:	movs	r1, #0
    ba20:	ldrd	r2, r3, [sp, #32]
    ba24:	mov	r0, r5
    ba26:	str	r1, [sp, #8]
    ba28:	strd	r9, r1, [sp]
    ba2c:	bl	b324 <ulist_add@@Base>
    ba30:	subs	r3, r0, #0
    ba32:	blt.w	b8e6 <ulist_next@@Base+0x4ea>
    ba36:	ldr.w	r8, [r8]
    ba3a:	b.n	b9de <ulist_next@@Base+0x5e2>
    ba3c:	ldr	r3, [sp, #52]	; 0x34
    ba3e:	b.n	b944 <ulist_next@@Base+0x548>
    ba40:	ldr.w	ip, [r0, #8]
    ba44:	ldr	r3, [sp, #32]
    ba46:	ldrd	r0, r1, [ip, #128]	; 0x80
    ba4a:	ldrd	r2, r3, [r3]
    ba4e:	cmp	r1, r3
    ba50:	it	eq
    ba52:	cmpeq	r0, r2
    ba54:	bcc.w	b8c0 <ulist_next@@Base+0x4c4>
    ba58:	subs	r6, r0, r2
    ba5a:	str	r6, [sp, #40]	; 0x28
    ba5c:	sbc.w	r6, r1, r3
    ba60:	cmp	r1, r3
    ba62:	it	eq
    ba64:	cmpeq	r0, r2
    ba66:	str	r6, [sp, #44]	; 0x2c
    ba68:	beq.w	b8c0 <ulist_next@@Base+0x4c4>
    ba6c:	ldrd	r3, r2, [ip, #64]	; 0x40
    ba70:	ldr	r1, [sp, #16]
    ba72:	adds	r3, r3, r1
    ba74:	ldr	r1, [sp, #20]
    ba76:	adc.w	r2, r1, r2
    ba7a:	ldr	r1, [sp, #16]
    ba7c:	strd	r3, r2, [ip, #64]	; 0x40
    ba80:	ldrd	r3, r2, [ip, #72]	; 0x48
    ba84:	adds	r3, r3, r1
    ba86:	ldr	r1, [sp, #20]
    ba88:	adc.w	r2, r1, r2
    ba8c:	strd	r3, r2, [ip, #72]	; 0x48
    ba90:	ldrd	r2, r3, [sp, #40]	; 0x28
    ba94:	cmp	sl, r3
    ba96:	it	eq
    ba98:	cmpeq	r9, r2
    ba9a:	bne.w	b8c0 <ulist_next@@Base+0x4c4>
    ba9e:	ldrd	r3, r2, [ip, #80]	; 0x50
    baa2:	ldr	r1, [sp, #16]
    baa4:	adds	r3, r3, r1
    baa6:	ldr	r1, [sp, #20]
    baa8:	adc.w	r2, r1, r2
    baac:	ldr	r1, [sp, #16]
    baae:	strd	r3, r2, [ip, #80]	; 0x50
    bab2:	ldrd	r3, r2, [ip, #88]	; 0x58
    bab6:	adds	r3, r3, r1
    bab8:	ldr	r1, [sp, #20]
    baba:	adc.w	r2, r1, r2
    babe:	strd	r3, r2, [ip, #88]	; 0x58
    bac2:	b.n	b8c0 <ulist_next@@Base+0x4c4>
    bac4:	add	sp, #76	; 0x4c
    bac6:	vpop	{d8-d9}
    baca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bace:	nop
    bad0:	str	r6, [sp, #776]	; 0x308
    bad2:	movs	r5, r0
    bad4:	lsls	r4, r4, #8
    bad6:	movs	r0, r0
    bad8:	add	r3, sp, #408	; 0x198
    bada:	movs	r5, r0
    badc:	rsbs	r0, r6, r2
    bae0:	str	r6, [sp, #528]	; 0x210
    bae2:	movs	r5, r0
    bae4:			; <UNDEFINED> instruction: 0xeb980002
    bae8:	b.n	ba0a <ulist_next@@Base+0x60e>
    baea:	movs	r2, r0
    baec:	b.n	ba2e <ulist_next@@Base+0x632>
    baee:	movs	r2, r0
    baf0:	b.n	b97a <ulist_next@@Base+0x57e>
    baf2:	movs	r2, r0
    baf4:	b.n	b940 <ulist_next@@Base+0x544>
    baf6:	movs	r2, r0
    baf8:	b.n	b91c <ulist_next@@Base+0x520>
    bafa:	movs	r2, r0
    bafc:	b.n	b8bc <ulist_next@@Base+0x4c0>
    bafe:	movs	r2, r0
    bb00:	bic.w	r0, sl, r2
    bb04:	b.n	b7a2 <ulist_next@@Base+0x3a6>
    bb06:	movs	r2, r0
    bb08:	ldr	r0, [sp, #0]
    bb0a:	movs	r5, r0
    bb0c:	str	r7, [sp, #936]	; 0x3a8
    bb0e:	movs	r5, r0
    bb10:	strd	r0, r0, [lr, #-8]!
    bb14:	b.n	b690 <ulist_next@@Base+0x294>
    bb16:	movs	r2, r0
    bb18:	stmdb	r8!, {r1}
    bb1c:	str	r7, [sp, #48]	; 0x30
    bb1e:	movs	r5, r0
    bb20:	b.n	b606 <ulist_next@@Base+0x20a>
    bb22:	movs	r2, r0
    bb24:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb28:	mov	r5, r3
    bb2a:	ldr	r3, [pc, #292]	; (bc50 <ulist_next@@Base+0x854>)
    bb2c:	mov	r6, r0
    bb2e:	ldrd	r8, r9, [sp, #40]	; 0x28
    bb32:	mov	r7, r1
    bb34:	add	r3, pc
    bb36:	mov	r4, r2
    bb38:	ldr.w	sl, [r3, #24]
    bb3c:	cmp.w	sl, #0
    bb40:	beq.n	bb82 <ulist_next@@Base+0x786>
    bb42:	ldrd	r2, r3, [sl, #-32]
    bb46:	cmp	r7, r3
    bb48:	it	eq
    bb4a:	cmpeq	r6, r2
    bb4c:	bcc.n	bbf2 <ulist_next@@Base+0x7f6>
    bb4e:	cmp	r3, r7
    bb50:	it	eq
    bb52:	cmpeq	r2, r6
    bb54:	bcc.n	bc48 <ulist_next@@Base+0x84c>
    bb56:	ldrd	r2, r3, [sl, #-16]
    bb5a:	cmp	r9, r3
    bb5c:	it	eq
    bb5e:	cmpeq	r8, r2
    bb60:	bcc.n	bbf2 <ulist_next@@Base+0x7f6>
    bb62:	cmp	r3, r9
    bb64:	it	eq
    bb66:	cmpeq	r2, r8
    bb68:	bcc.n	bc48 <ulist_next@@Base+0x84c>
    bb6a:	ldrd	r2, r3, [sl, #-8]
    bb6e:	cmp	r5, r3
    bb70:	it	eq
    bb72:	cmpeq	r4, r2
    bb74:	bcc.n	bbf2 <ulist_next@@Base+0x7f6>
    bb76:	cmp	r3, r5
    bb78:	it	eq
    bb7a:	cmpeq	r2, r4
    bb7c:	bcc.n	bc48 <ulist_next@@Base+0x84c>
    bb7e:	sub.w	sl, sl, #32
    bb82:	orrs.w	r3, r8, r9
    bb86:	beq.n	bbf8 <ulist_next@@Base+0x7fc>
    bb88:	orrs.w	r3, r4, r5
    bb8c:	ite	ne
    bb8e:	movne	r3, #1
    bb90:	moveq	r3, #0
    bb92:	ldr	r1, [pc, #192]	; (bc54 <ulist_next@@Base+0x858>)
    bb94:	mov.w	r2, #302	; 0x12e
    bb98:	ldr	r0, [pc, #188]	; (bc58 <ulist_next@@Base+0x85c>)
    bb9a:	add	r1, pc
    bb9c:	adds	r1, #54	; 0x36
    bb9e:	add	r0, pc
    bba0:	bl	b690 <ulist_next@@Base+0x294>
    bba4:	cmp.w	sl, #0
    bba8:	bne.n	bc44 <ulist_next@@Base+0x848>
    bbaa:	movs	r1, #48	; 0x30
    bbac:	movs	r0, #1
    bbae:	blx	8544 <calloc@plt+0x4>
    bbb2:	mov	fp, r0
    bbb4:	cbz	r0, bbec <ulist_next@@Base+0x7f0>
    bbb6:	ldrd	r2, r3, [sp, #48]	; 0x30
    bbba:	strd	r6, r7, [r0]
    bbbe:	strd	r4, r5, [r0, #24]
    bbc2:	strd	r2, r3, [r0, #8]
    bbc6:	ldr	r3, [pc, #148]	; (bc5c <ulist_next@@Base+0x860>)
    bbc8:	strd	r8, r9, [r0, #16]
    bbcc:	add	r3, pc
    bbce:	adds	r3, #24
    bbd0:	ldr	r1, [r3, #0]
    bbd2:	cbnz	r1, bbfc <ulist_next@@Base+0x800>
    bbd4:	strd	sl, r1, [fp, #32]
    bbd8:	add.w	r0, fp, #32
    bbdc:	str.w	r1, [fp, #40]	; 0x28
    bbe0:	ldr	r1, [pc, #124]	; (bc60 <ulist_next@@Base+0x864>)
    bbe2:	str	r0, [r3, #0]
    bbe4:	add	r1, pc
    bbe6:	adds	r1, #24
    bbe8:	bl	131d2 <rb_insert_color@@Base>
    bbec:	mov	r0, fp
    bbee:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bbf2:	ldr.w	sl, [sl, #8]
    bbf6:	b.n	bb3c <ulist_next@@Base+0x740>
    bbf8:	movs	r3, #0
    bbfa:	b.n	bb92 <ulist_next@@Base+0x796>
    bbfc:	ldrd	r2, r3, [r1, #-32]
    bc00:	cmp	r7, r3
    bc02:	it	eq
    bc04:	cmpeq	r6, r2
    bc06:	bcc.n	bc3c <ulist_next@@Base+0x840>
    bc08:	cmp	r3, r7
    bc0a:	it	eq
    bc0c:	cmpeq	r2, r6
    bc0e:	bcc.n	bc38 <ulist_next@@Base+0x83c>
    bc10:	ldrd	r2, r3, [r1, #-16]
    bc14:	cmp	r9, r3
    bc16:	it	eq
    bc18:	cmpeq	r8, r2
    bc1a:	bcc.n	bc3c <ulist_next@@Base+0x840>
    bc1c:	cmp	r3, r9
    bc1e:	it	eq
    bc20:	cmpeq	r2, r8
    bc22:	bcc.n	bc38 <ulist_next@@Base+0x83c>
    bc24:	ldrd	r2, r3, [r1, #-8]
    bc28:	cmp	r5, r3
    bc2a:	it	eq
    bc2c:	cmpeq	r4, r2
    bc2e:	bcc.n	bc3c <ulist_next@@Base+0x840>
    bc30:	cmp	r3, r5
    bc32:	it	eq
    bc34:	cmpeq	r2, r4
    bc36:	bcs.n	bbec <ulist_next@@Base+0x7f0>
    bc38:	adds	r3, r1, #4
    bc3a:	b.n	bc40 <ulist_next@@Base+0x844>
    bc3c:	add.w	r3, r1, #8
    bc40:	mov	sl, r1
    bc42:	b.n	bbd0 <ulist_next@@Base+0x7d4>
    bc44:	mov	fp, sl
    bc46:	b.n	bbec <ulist_next@@Base+0x7f0>
    bc48:	ldr.w	sl, [sl, #4]
    bc4c:	b.n	bb3c <ulist_next@@Base+0x740>
    bc4e:	nop
    bc50:	add	r7, pc, #64	; (adr r7, bc94 <ulist_next@@Base+0x898>)
    bc52:	movs	r5, r0
    bc54:	b.n	baa0 <ulist_next@@Base+0x6a4>
    bc56:	movs	r2, r0
    bc58:	b.n	c3e4 <report_qgroups@@Base+0x128>
    bc5a:	movs	r2, r0
    bc5c:	add	r6, pc, #480	; (adr r6, be40 <ulist_next@@Base+0xa44>)
    bc5e:	movs	r5, r0
    bc60:	add	r6, pc, #384	; (adr r6, bde4 <ulist_next@@Base+0x9e8>)
    bc62:	movs	r5, r0
    bc64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bc68:	movs	r6, #0
    bc6a:	vpush	{d8}
    bc6e:	mov	r4, r6
    bc70:	ldr	r3, [pc, #864]	; (bfd4 <ulist_next@@Base+0xbd8>)
    bc72:	ldr	r2, [pc, #868]	; (bfd8 <ulist_next@@Base+0xbdc>)
    bc74:	add	r3, pc
    bc76:	sub	sp, #180	; 0xb4
    bc78:	add	r2, pc
    bc7a:	str	r3, [sp, #32]
    bc7c:	ldr	r3, [pc, #860]	; (bfdc <ulist_next@@Base+0xbe0>)
    bc7e:	str	r0, [sp, #56]	; 0x38
    bc80:	ldr	r3, [r2, r3]
    bc82:	ldr	r3, [r3, #0]
    bc84:	str	r3, [sp, #172]	; 0xac
    bc86:	mov.w	r3, #0
    bc8a:	ldr	r3, [r0, #24]
    bc8c:	str	r3, [sp, #36]	; 0x24
    bc8e:	add	r3, sp, #104	; 0x68
    bc90:	str	r3, [sp, #16]
    bc92:	mov	r0, r3
    bc94:	bl	17df0 <btrfs_init_path@@Base>
    bc98:	ldr	r3, [sp, #16]
    bc9a:	ldr	r1, [sp, #36]	; 0x24
    bc9c:	add	r2, sp, #64	; 0x40
    bc9e:	mov	r0, r6
    bca0:	strd	r6, r6, [sp]
    bca4:	strd	r6, r6, [sp, #64]	; 0x40
    bca8:	strb.w	r6, [sp, #72]	; 0x48
    bcac:	strb.w	r6, [sp, #73]	; 0x49
    bcb0:	strb.w	r6, [sp, #74]	; 0x4a
    bcb4:	strb.w	r6, [sp, #75]	; 0x4b
    bcb8:	strb.w	r6, [sp, #76]	; 0x4c
    bcbc:	strb.w	r6, [sp, #77]	; 0x4d
    bcc0:	strb.w	r6, [sp, #78]	; 0x4e
    bcc4:	strb.w	r6, [sp, #79]	; 0x4f
    bcc8:	strb.w	r6, [sp, #80]	; 0x50
    bccc:	bl	1a1e4 <btrfs_search_slot@@Base>
    bcd0:	subs	r7, r0, #0
    bcd2:	bge.n	bcea <ulist_next@@Base+0x8ee>
    bcd4:	ldr	r3, [pc, #776]	; (bfe0 <ulist_next@@Base+0xbe4>)
    bcd6:	ldr	r2, [sp, #32]
    bcd8:	ldr	r0, [r2, r3]
    bcda:	mov	r3, r7
    bcdc:	ldr	r2, [pc, #772]	; (bfe4 <ulist_next@@Base+0xbe8>)
    bcde:	add	r2, pc
    bce0:	movs	r1, #1
    bce2:	ldr	r0, [r0, #0]
    bce4:	blx	8a14 <__fprintf_chk@plt+0x4>
    bce8:	b.n	bea0 <ulist_next@@Base+0xaa4>
    bcea:	movs	r3, #1
    bcec:	strb.w	r3, [sp, #168]	; 0xa8
    bcf0:	ldr	r3, [pc, #756]	; (bfe8 <ulist_next@@Base+0xbec>)
    bcf2:	mov	sl, r6
    bcf4:	mov	fp, r6
    bcf6:	str	r6, [sp, #24]
    bcf8:	add	r3, pc
    bcfa:	adds	r3, #93	; 0x5d
    bcfc:	vmov	s16, r3
    bd00:	ldr	r7, [sp, #104]	; 0x68
    bd02:	mov.w	r8, #197	; 0xc5
    bd06:	ldr.w	r3, [r7, #192]	; 0xc0
    bd0a:	str	r3, [sp, #60]	; 0x3c
    bd0c:	movs	r3, #0
    bd0e:	str	r3, [sp, #28]
    bd10:	ldr	r3, [pc, #728]	; (bfec <ulist_next@@Base+0xbf0>)
    bd12:	add	r3, pc
    bd14:	vmov	s17, r3
    bd18:	ldr	r3, [sp, #60]	; 0x3c
    bd1a:	ldr	r2, [sp, #28]
    bd1c:	cmp	r3, r2
    bd1e:	bgt.n	bd48 <ulist_next@@Base+0x94c>
    bd20:	ldr	r3, [sp, #36]	; 0x24
    bd22:	add	r1, sp, #104	; 0x68
    bd24:	movs	r5, #0
    bd26:	strb.w	r5, [sp, #169]	; 0xa9
    bd2a:	ldr.w	r0, [r3, #464]	; 0x1d0
    bd2e:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    bd32:	subs	r7, r0, #0
    bd34:	beq.n	bd00 <ulist_next@@Base+0x904>
    bd36:	bge.w	bfc2 <ulist_next@@Base+0xbc6>
    bd3a:	ldr	r3, [pc, #676]	; (bfe0 <ulist_next@@Base+0xbe4>)
    bd3c:	ldr	r2, [sp, #32]
    bd3e:	ldr	r0, [r2, r3]
    bd40:	mov	r3, r7
    bd42:	ldr	r2, [pc, #684]	; (bff0 <ulist_next@@Base+0xbf4>)
    bd44:	add	r2, pc
    bd46:	b.n	bce0 <ulist_next@@Base+0x8e4>
    bd48:	sub.w	r2, r8, #96	; 0x60
    bd4c:	movs	r3, #17
    bd4e:	add	r1, sp, #84	; 0x54
    bd50:	mov	r0, r7
    bd52:	bl	172c2 <read_extent_buffer@@Base>
    bd56:	ldr	r3, [sp, #84]	; 0x54
    bd58:	ldrb.w	r5, [sp, #92]	; 0x5c
    bd5c:	ldr.w	r6, [sp, #93]	; 0x5d
    bd60:	str	r3, [sp, #16]
    bd62:	ldr	r3, [sp, #88]	; 0x58
    bd64:	ldr.w	r9, [sp, #97]	; 0x61
    bd68:	str.w	r6, [sp, #73]	; 0x49
    bd6c:	str	r3, [sp, #20]
    bd6e:	ldrd	r2, r3, [sp, #16]
    bd72:	str.w	r9, [sp, #77]	; 0x4d
    bd76:	strb.w	r5, [sp, #72]	; 0x48
    bd7a:	strd	r2, r3, [sp, #64]	; 0x40
    bd7e:	add.w	r3, r5, #88	; 0x58
    bd82:	uxtb	r3, r3
    bd84:	cmp	r3, #1
    bd86:	bhi.w	bf14 <ulist_next@@Base+0xb18>
    bd8a:	ldr	r2, [pc, #616]	; (bff4 <ulist_next@@Base+0xbf8>)
    bd8c:	cmp	r5, #169	; 0xa9
    bd8e:	add.w	sl, r7, r8
    bd92:	it	ne
    bd94:	strne.w	r9, [sp, #24]
    bd98:	add	r2, pc
    bd9a:	it	ne
    bd9c:	movne	r4, r6
    bd9e:	ldr.w	r5, [sl, #17]
    bda2:	add.w	r6, r7, #96	; 0x60
    bda6:	ldr	r3, [r2, #32]
    bda8:	ldr.w	fp, [sl, #21]
    bdac:	add.w	r3, r3, #1
    bdb0:	str	r3, [r2, #32]
    bdb2:	ittet	eq
    bdb4:	ldreq	r3, [sp, #56]	; 0x38
    bdb6:	moveq	r2, #1
    bdb8:	movne	r2, #0
    bdba:	ldreq.w	r4, [r3, #384]	; 0x180
    bdbe:	itt	eq
    bdc0:	moveq	r3, #0
    bdc2:	streq	r3, [sp, #24]
    bdc4:	add.w	r3, r5, #101	; 0x65
    bdc8:	adds	r1, r6, r3
    bdca:	ldr	r1, [r1, #16]
    bdcc:	and.w	r1, r1, #2
    bdd0:	str	r1, [sp, #40]	; 0x28
    bdd2:	movs	r1, #0
    bdd4:	str	r1, [sp, #44]	; 0x2c
    bdd6:	ldrd	r0, r1, [sp, #40]	; 0x28
    bdda:	orrs	r1, r0
    bddc:	beq.n	be54 <ulist_next@@Base+0xa58>
    bdde:	cmp	r2, #0
    bde0:	bne.n	be54 <ulist_next@@Base+0xa58>
    bde2:	adds	r5, #143	; 0x8f
    bde4:	add	fp, r3
    bde6:	cmp	fp, r5
    bde8:	bhi.n	be5a <ulist_next@@Base+0xa5e>
    bdea:	ldr.w	r3, [sl, #17]
    bdee:	ldrb.w	r2, [sp, #72]	; 0x48
    bdf2:	adds	r3, #101	; 0x65
    bdf4:	add	r6, r3
    bdf6:	ldr	r3, [r6, #16]
    bdf8:	and.w	r3, r3, #2
    bdfc:	str	r3, [sp, #48]	; 0x30
    bdfe:	movs	r3, #0
    be00:	str	r3, [sp, #52]	; 0x34
    be02:	ldrd	r0, r1, [sp, #48]	; 0x30
    be06:	orrs.w	r3, r0, r1
    be0a:	beq.n	bf0a <ulist_next@@Base+0xb0e>
    be0c:	cmp	r2, #169	; 0xa9
    be0e:	beq.n	bf0e <ulist_next@@Base+0xb12>
    be10:	ldrb.w	r6, [r6, #41]	; 0x29
    be14:	cmp	r6, #0
    be16:	beq.w	bf9a <ulist_next@@Base+0xb9e>
    be1a:	movs	r1, #16
    be1c:	movs	r0, #1
    be1e:	blx	8544 <calloc@plt+0x4>
    be22:	mov	r5, r0
    be24:	cbz	r0, be50 <ulist_next@@Base+0xa54>
    be26:	ldr	r1, [pc, #464]	; (bff8 <ulist_next@@Base+0xbfc>)
    be28:	ldr	r3, [sp, #24]
    be2a:	add	r1, pc
    be2c:	str	r4, [r0, #8]
    be2e:	str	r6, [r0, #0]
    be30:	str	r3, [r0, #12]
    be32:	movs	r3, #0
    be34:	str	r3, [sp, #8]
    be36:	strd	r0, r3, [sp]
    be3a:	ldrd	r2, r3, [sp, #16]
    be3e:	ldr	r0, [r1, #28]
    be40:	bl	b324 <ulist_add@@Base>
    be44:	cmp	r0, #0
    be46:	bge.w	bf9a <ulist_next@@Base+0xb9e>
    be4a:	mov	r0, r5
    be4c:	blx	85dc <free@plt+0x4>
    be50:	movs	r7, #12
    be52:	b.n	bea6 <ulist_next@@Base+0xaaa>
    be54:	add.w	r5, r3, #24
    be58:	b.n	bde4 <ulist_next@@Base+0x9e8>
    be5a:	adds	r1, r6, r5
    be5c:	ldrb.w	r9, [r6, r5]
    be60:	mov	r3, r1
    be62:	sub.w	r0, r9, #176	; 0xb0
    be66:	ldr.w	r2, [r3, #1]!
    be6a:	ldr	r3, [r3, #4]
    be6c:	cmp	r0, #8
    be6e:	bhi.n	be9e <ulist_next@@Base+0xaa2>
    be70:	tbb	[pc, r0]
    be74:	asrs	r0, r5, #20
    be76:	asrs	r4, r4, #20
    be78:	asrs	r5, r2, #20
    be7a:	asrs	r5, r0, #20
    be7c:	movs	r5, r0
    be7e:	mov	r1, r2
    be80:	movs	r2, #0
    be82:	mov	ip, r3
    be84:	mov	r3, r2
    be86:	ldr	r0, [sp, #24]
    be88:	strd	r1, ip, [sp]
    be8c:	str	r4, [sp, #8]
    be8e:	str	r0, [sp, #12]
    be90:	ldrd	r0, r1, [sp, #16]
    be94:	bl	bb24 <ulist_next@@Base+0x728>
    be98:	cbnz	r0, beca <ulist_next@@Base+0xace>
    be9a:	movs	r7, #12
    be9c:	b.n	bea0 <ulist_next@@Base+0xaa4>
    be9e:	movs	r7, #1
    bea0:	add	r0, sp, #104	; 0x68
    bea2:	bl	17e00 <btrfs_release_path@@Base>
    bea6:	ldr	r2, [pc, #340]	; (bffc <ulist_next@@Base+0xc00>)
    bea8:	ldr	r3, [pc, #304]	; (bfdc <ulist_next@@Base+0xbe0>)
    beaa:	add	r2, pc
    beac:	ldr	r3, [r2, r3]
    beae:	ldr	r2, [r3, #0]
    beb0:	ldr	r3, [sp, #172]	; 0xac
    beb2:	eors	r2, r3
    beb4:	beq.w	bfc6 <ulist_next@@Base+0xbca>
    beb8:	blx	86b8 <__stack_chk_fail@plt>
    bebc:	mov	r3, r1
    bebe:	ldr.w	r2, [r3, #1]!
    bec2:	ldr	r3, [r3, #4]
    bec4:	movs	r1, #0
    bec6:	mov	ip, r1
    bec8:	b.n	be86 <ulist_next@@Base+0xa8a>
    beca:	cmp.w	r9, #176	; 0xb0
    bece:	beq.n	befc <ulist_next@@Base+0xb00>
    bed0:	cmp.w	r9, #182	; 0xb6
    bed4:	beq.n	befc <ulist_next@@Base+0xb00>
    bed6:	cmp.w	r9, #184	; 0xb8
    beda:	beq.n	bf02 <ulist_next@@Base+0xb06>
    bedc:	cmp.w	r9, #178	; 0xb2
    bee0:	beq.n	bf06 <ulist_next@@Base+0xb0a>
    bee2:	ldr	r2, [pc, #284]	; (c000 <ulist_next@@Base+0xc04>)
    bee4:	movs	r3, #1
    bee6:	ldr	r1, [pc, #284]	; (c004 <ulist_next@@Base+0xc08>)
    bee8:	ldr	r0, [pc, #284]	; (c008 <ulist_next@@Base+0xc0c>)
    beea:	add	r2, pc
    beec:	str	r3, [sp, #0]
    beee:	adds	r2, #64	; 0x40
    bef0:	add	r1, pc
    bef2:	add	r0, pc
    bef4:	movw	r3, #1818	; 0x71a
    bef8:	bl	b62c <ulist_next@@Base+0x230>
    befc:	movs	r3, #9
    befe:	add	r5, r3
    bf00:	b.n	bde6 <ulist_next@@Base+0x9ea>
    bf02:	movs	r3, #13
    bf04:	b.n	befe <ulist_next@@Base+0xb02>
    bf06:	movs	r3, #29
    bf08:	b.n	befe <ulist_next@@Base+0xb02>
    bf0a:	cmp	r2, #169	; 0xa9
    bf0c:	bne.n	bf9a <ulist_next@@Base+0xb9e>
    bf0e:	ldr.w	r6, [sp, #73]	; 0x49
    bf12:	b.n	be14 <ulist_next@@Base+0xa18>
    bf14:	add.w	r3, r5, #80	; 0x50
    bf18:	uxtb	r3, r3
    bf1a:	cmp	r3, #8
    bf1c:	bhi.n	bf96 <ulist_next@@Base+0xb9a>
    bf1e:	ldrd	r2, r3, [sp, #16]
    bf22:	subs	r5, #176	; 0xb0
    bf24:	vmov	r1, s16
    bf28:	cmp	fp, r3
    bf2a:	vmov	r0, s17
    bf2e:	it	eq
    bf30:	cmpeq	sl, r2
    bf32:	movw	r2, #1229	; 0x4cd
    bf36:	ite	ne
    bf38:	movne	r3, #1
    bf3a:	moveq	r3, #0
    bf3c:	bl	b690 <ulist_next@@Base+0x294>
    bf40:	cmp	r5, #8
    bf42:	bhi.n	be9e <ulist_next@@Base+0xaa2>
    bf44:	add	r3, pc, #8	; (adr r3, bf50 <ulist_next@@Base+0xb54>)
    bf46:	ldr.w	r2, [r3, r5, lsl #2]
    bf4a:	add	r3, r2
    bf4c:	bx	r3
    bf4e:	nop
    bf50:	lsls	r5, r5, #1
    bf52:	movs	r0, r0
    bf54:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bf58:	lsls	r3, r3, #1
    bf5a:	movs	r0, r0
    bf5c:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bf60:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bf64:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bf68:	movs	r5, r4
    bf6a:	movs	r0, r0
    bf6c:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bf70:	movs	r5, r4
    bf72:	movs	r0, r0
    bf74:	mov	r3, r6
    bf76:	movs	r6, #0
    bf78:	mov	r2, r9
    bf7a:	mov	r9, r6
    bf7c:	ldr	r1, [sp, #24]
    bf7e:	mov	r0, sl
    bf80:	strd	r3, r2, [sp]
    bf84:	mov	r2, r6
    bf86:	mov	r3, r9
    bf88:	str	r4, [sp, #8]
    bf8a:	str	r1, [sp, #12]
    bf8c:	mov	r1, fp
    bf8e:	bl	bb24 <ulist_next@@Base+0x728>
    bf92:	cmp	r0, #0
    bf94:	beq.n	be9a <ulist_next@@Base+0xa9e>
    bf96:	strd	sl, fp, [sp, #16]
    bf9a:	ldr	r3, [sp, #28]
    bf9c:	add.w	r8, r8, #25
    bfa0:	ldrd	sl, fp, [sp, #16]
    bfa4:	adds	r3, #1
    bfa6:	str	r3, [sp, #28]
    bfa8:	b.n	bd18 <ulist_next@@Base+0x91c>
    bfaa:	add.w	r3, r7, r8
    bfae:	ldr.w	r3, [r3, #17]
    bfb2:	add	r3, r7
    bfb4:	ldr.w	r6, [r3, #197]!
    bfb8:	ldr.w	r9, [r3, #4]
    bfbc:	movs	r3, #0
    bfbe:	mov	r2, r3
    bfc0:	b.n	bf7c <ulist_next@@Base+0xb80>
    bfc2:	mov	r7, r5
    bfc4:	b.n	bea0 <ulist_next@@Base+0xaa4>
    bfc6:	mov	r0, r7
    bfc8:	add	sp, #180	; 0xb4
    bfca:	vpop	{d8}
    bfce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfd2:	nop
    bfd4:	str	r1, [sp, #80]	; 0x50
    bfd6:	movs	r5, r0
    bfd8:	str	r1, [sp, #64]	; 0x40
    bfda:	movs	r5, r0
    bfdc:	lsls	r4, r4, #8
    bfde:	movs	r0, r0
    bfe0:	lsls	r4, r6, #8
    bfe2:	movs	r0, r0
    bfe4:	b.n	c50e <report_qgroups@@Base+0x252>
    bfe6:	movs	r2, r0
    bfe8:	b.n	bb78 <ulist_next@@Base+0x77c>
    bfea:	movs	r2, r0
    bfec:	b.n	c504 <report_qgroups@@Base+0x248>
    bfee:	movs	r2, r0
    bff0:	b.n	c4d2 <report_qgroups@@Base+0x216>
    bff2:	movs	r2, r0
    bff4:	add	r4, pc, #688	; (adr r4, c2a8 <ulist_next@@Base+0xeac>)
    bff6:	movs	r5, r0
    bff8:	add	r4, pc, #104	; (adr r4, c064 <ulist_next@@Base+0xc68>)
    bffa:	movs	r5, r0
    bffc:	ldrh	r6, [r3, #54]	; 0x36
    bffe:	movs	r5, r0
    c000:	b.n	c7ac <qgroup_verify_all@@Base+0x1bc>
    c002:	movs	r2, r0
    c004:	b.n	c14c <ulist_next@@Base+0xd50>
    c006:	movs	r2, r0
    c008:	adds	r7, r3, r0
    c00a:	movs	r3, r0
    c00c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c010:	mov	r7, r1
    c012:	ldr	r4, [pc, #352]	; (c174 <ulist_next@@Base+0xd78>)
    c014:	sub	sp, #44	; 0x2c
    c016:	ldr	r1, [pc, #352]	; (c178 <ulist_next@@Base+0xd7c>)
    c018:	mov.w	sl, #0
    c01c:	add	r4, pc
    c01e:	mov.w	fp, #0
    c022:	mov	r6, r0
    c024:	mov	r8, r2
    c026:	ldr	r1, [r4, r1]
    c028:	mov	r9, r3
    c02a:	ldr	r1, [r1, #0]
    c02c:	str	r1, [sp, #36]	; 0x24
    c02e:	mov.w	r1, #0
    c032:	strd	sl, fp, [sp]
    c036:	bl	1d62c <read_tree_block@@Base>
    c03a:	mov	r4, r0
    c03c:	cmp	r0, #0
    c03e:	beq.w	c166 <ulist_next@@Base+0xd6a>
    c042:	cmn.w	r0, #4096	; 0x1000
    c046:	bhi.w	c166 <ulist_next@@Base+0xd6a>
    c04a:	ldr	r3, [r0, #84]	; 0x54
    c04c:	lsls	r3, r3, #29
    c04e:	bpl.w	c166 <ulist_next@@Base+0xd6a>
    c052:	ldrd	r2, r3, [sp, #88]	; 0x58
    c056:	cmp	r9, r3
    c058:	it	eq
    c05a:	cmpeq	r8, r2
    c05c:	bne.n	c0b6 <ulist_next@@Base+0xcba>
    c05e:	ldrb.w	r5, [r4, #196]	; 0xc4
    c062:	ldr.w	r8, [r4, #192]	; 0xc0
    c066:	cmp	r5, #0
    c068:	beq.n	c160 <ulist_next@@Base+0xd64>
    c06a:	ldr.w	r9, [pc, #272]	; c17c <ulist_next@@Base+0xd80>
    c06e:	movs	r5, #0
    c070:	mov	fp, r5
    c072:	mov	sl, r5
    c074:	add	r9, pc
    c076:	cmp	r5, r8
    c078:	bge.n	c100 <ulist_next@@Base+0xd04>
    c07a:	ldr.w	r2, [r9, #36]	; 0x24
    c07e:	ldrd	r3, r1, [r2]
    c082:	adds	r3, #1
    c084:	adc.w	r1, r1, #0
    c088:	strd	r3, r1, [r2]
    c08c:	add.w	r3, r5, r5, lsl #5
    c090:	ldrd	r0, r1, [sp, #88]	; 0x58
    c094:	add	r3, r4
    c096:	adds	r5, #1
    c098:	ldr.w	r2, [r3, #214]!
    c09c:	ldr	r3, [r3, #4]
    c09e:	strd	r0, r1, [sp, #8]
    c0a2:	mov	r0, r6
    c0a4:	ldr.w	r1, [r6, #384]	; 0x180
    c0a8:	strd	r1, sl, [sp]
    c0ac:	mov	r1, r7
    c0ae:	bl	c00c <ulist_next@@Base+0xc10>
    c0b2:	mov	fp, r0
    c0b4:	b.n	c076 <ulist_next@@Base+0xc7a>
    c0b6:	ldrd	r2, r3, [sp, #80]	; 0x50
    c0ba:	mov	r0, r8
    c0bc:	mov	r1, r9
    c0be:	strd	r2, r3, [sp, #8]
    c0c2:	ldrd	r2, r3, [sp, #88]	; 0x58
    c0c6:	strd	r2, r3, [sp]
    c0ca:	mov	r2, sl
    c0cc:	mov	r3, fp
    c0ce:	bl	bb24 <ulist_next@@Base+0x728>
    c0d2:	cmp	r0, #0
    c0d4:	bne.n	c05e <ulist_next@@Base+0xc62>
    c0d6:	mov.w	fp, #12
    c0da:	b.n	c106 <ulist_next@@Base+0xd0a>
    c0dc:	mul.w	r9, r6, r5
    c0e0:	movs	r3, #17
    c0e2:	mov	r1, r7
    c0e4:	mov	r0, r4
    c0e6:	add.w	r2, r9, #101	; 0x65
    c0ea:	bl	172c2 <read_extent_buffer@@Base>
    c0ee:	ldrb.w	r3, [sp, #24]
    c0f2:	cmp	r3, #108	; 0x6c
    c0f4:	beq.n	c11a <ulist_next@@Base+0xd1e>
    c0f6:	adds	r5, #1
    c0f8:	cmp	r5, r8
    c0fa:	blt.n	c0dc <ulist_next@@Base+0xce0>
    c0fc:	mov.w	fp, #0
    c100:	mov	r0, r4
    c102:	bl	16bc8 <free_extent_buffer@@Base>
    c106:	ldr	r2, [pc, #120]	; (c180 <ulist_next@@Base+0xd84>)
    c108:	ldr	r3, [pc, #108]	; (c178 <ulist_next@@Base+0xd7c>)
    c10a:	add	r2, pc
    c10c:	ldr	r3, [r2, r3]
    c10e:	ldr	r2, [r3, #0]
    c110:	ldr	r3, [sp, #36]	; 0x24
    c112:	eors	r2, r3
    c114:	beq.n	c16c <ulist_next@@Base+0xd70>
    c116:	blx	86b8 <__stack_chk_fail@plt>
    c11a:	add	r9, r4
    c11c:	ldr.w	r2, [r9, #214]	; 0xd6
    c120:	add	r2, r4
    c122:	add.w	r3, r2, #197	; 0xc5
    c126:	ldrb.w	r2, [r2, #217]	; 0xd9
    c12a:	cmp	r2, #0
    c12c:	beq.n	c0f6 <ulist_next@@Base+0xcfa>
    c12e:	mov	r2, r3
    c130:	ldr.w	r0, [r2, #21]!
    c134:	ldr	r1, [r2, #4]
    c136:	orrs.w	r2, r0, r1
    c13a:	beq.n	c0f6 <ulist_next@@Base+0xcfa>
    c13c:	ldr.w	r2, [r3, #29]!
    c140:	ldr	r3, [r3, #4]
    c142:	strd	r2, r3, [sp, #8]
    c146:	ldrd	r2, r3, [sp, #88]	; 0x58
    c14a:	strd	r2, r3, [sp]
    c14e:	movs	r2, #0
    c150:	movs	r3, #0
    c152:	bl	bb24 <ulist_next@@Base+0x728>
    c156:	cmp	r0, #0
    c158:	bne.n	c0f6 <ulist_next@@Base+0xcfa>
    c15a:	mov.w	fp, #12
    c15e:	b.n	c100 <ulist_next@@Base+0xd04>
    c160:	add	r7, sp, #16
    c162:	movs	r6, #25
    c164:	b.n	c0f8 <ulist_next@@Base+0xcfc>
    c166:	mvn.w	fp, #4
    c16a:	b.n	c106 <ulist_next@@Base+0xd0a>
    c16c:	mov	r0, fp
    c16e:	add	sp, #44	; 0x2c
    c170:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c174:	ldrh	r4, [r5, #42]	; 0x2a
    c176:	movs	r5, r0
    c178:	lsls	r4, r4, #8
    c17a:	movs	r0, r0
    c17c:	add	r1, pc, #832	; (adr r1, c4c0 <report_qgroups@@Base+0x204>)
    c17e:	movs	r5, r0
    c180:	ldrh	r6, [r7, #34]	; 0x22
    c182:	movs	r5, r0
    c184:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c188:	mov	r4, r0
    c18a:	vpush	{d8}
    c18e:	ldr	r2, [pc, #264]	; (c298 <ulist_next@@Base+0xe9c>)
    c190:	ldr	r3, [pc, #264]	; (c29c <ulist_next@@Base+0xea0>)
    c192:	add	r2, pc
    c194:	ldr	r5, [pc, #264]	; (c2a0 <ulist_next@@Base+0xea4>)
    c196:	sub	sp, #60	; 0x3c
    c198:	ldr	r3, [r2, r3]
    c19a:	add	r5, pc
    c19c:	adds	r5, #106	; 0x6a
    c19e:	ldr	r3, [r3, #0]
    c1a0:	str	r3, [sp, #52]	; 0x34
    c1a2:	mov.w	r3, #0
    c1a6:	movs	r3, #0
    c1a8:	str	r3, [sp, #28]
    c1aa:	ldr	r3, [pc, #248]	; (c2a4 <ulist_next@@Base+0xea8>)
    c1ac:	add	r3, pc
    c1ae:	str	r3, [sp, #20]
    c1b0:	ldr	r3, [sp, #20]
    c1b2:	add	r1, sp, #28
    c1b4:	ldr	r0, [r3, #28]
    c1b6:	bl	b3fc <ulist_next@@Base>
    c1ba:	cmp	r0, #0
    c1bc:	beq.n	c258 <ulist_next@@Base+0xe5c>
    c1be:	ldr	r3, [pc, #232]	; (c2a8 <ulist_next@@Base+0xeac>)
    c1c0:	ldrd	r7, r6, [r0]
    c1c4:	add	r3, pc
    c1c6:	ldr.w	r9, [r0, #8]
    c1ca:	vmov	s16, r3
    c1ce:	mov	sl, r7
    c1d0:	mov	fp, r6
    c1d2:	mov	r1, fp
    c1d4:	mov	r0, sl
    c1d6:	bl	b472 <ulist_next@@Base+0x76>
    c1da:	movw	r2, #590	; 0x24e
    c1de:	mov	r1, r5
    c1e0:	clz	r3, r0
    c1e4:	mov	r8, r0
    c1e6:	vmov	r0, s16
    c1ea:	lsrs	r3, r3, #5
    c1ec:	bl	b690 <ulist_next@@Base+0x294>
    c1f0:	ldrd	r2, r3, [r8, #24]
    c1f4:	orrs.w	r1, r2, r3
    c1f8:	bne.n	c20c <ulist_next@@Base+0xe10>
    c1fa:	ldrd	r2, r3, [r8, #16]
    c1fe:	cmp	fp, r3
    c200:	it	eq
    c202:	cmpeq	sl, r2
    c204:	beq.n	c1b0 <ulist_next@@Base+0xdb4>
    c206:	mov	sl, r2
    c208:	mov	fp, r3
    c20a:	b.n	c1d2 <ulist_next@@Base+0xdd6>
    c20c:	mov.w	r1, #4294967295	; 0xffffffff
    c210:	cmp	r3, r1
    c212:	mvn.w	r0, #7
    c216:	it	eq
    c218:	cmpeq	r2, r0
    c21a:	beq.n	c1b0 <ulist_next@@Base+0xdb4>
    c21c:	add	r1, sp, #32
    c21e:	mov	r0, r4
    c220:	strd	r2, r3, [sp, #32]
    c224:	mov.w	r2, #4294967295	; 0xffffffff
    c228:	movs	r3, #132	; 0x84
    c22a:	strb.w	r2, [sp, #41]	; 0x29
    c22e:	strb.w	r3, [sp, #40]	; 0x28
    c232:	strb.w	r2, [sp, #42]	; 0x2a
    c236:	strb.w	r2, [sp, #43]	; 0x2b
    c23a:	strb.w	r2, [sp, #44]	; 0x2c
    c23e:	strb.w	r2, [sp, #45]	; 0x2d
    c242:	strb.w	r2, [sp, #46]	; 0x2e
    c246:	strb.w	r2, [sp, #47]	; 0x2f
    c24a:	strb.w	r2, [sp, #48]	; 0x30
    c24e:	bl	1d9ae <btrfs_read_fs_root@@Base>
    c252:	mov	r1, r0
    c254:	cbnz	r0, c26c <ulist_next@@Base+0xe70>
    c256:	movs	r0, #2
    c258:	ldr	r2, [pc, #80]	; (c2ac <ulist_next@@Base+0xeb0>)
    c25a:	ldr	r3, [pc, #64]	; (c29c <ulist_next@@Base+0xea0>)
    c25c:	add	r2, pc
    c25e:	ldr	r3, [r2, r3]
    c260:	ldr	r2, [r3, #0]
    c262:	ldr	r3, [sp, #52]	; 0x34
    c264:	eors	r2, r3
    c266:	beq.n	c28e <ulist_next@@Base+0xe92>
    c268:	blx	86b8 <__stack_chk_fail@plt>
    c26c:	cmn.w	r0, #4096	; 0x1000
    c270:	bhi.n	c256 <ulist_next@@Base+0xe5a>
    c272:	strd	r7, r6, [sp, #8]
    c276:	mov	r0, r4
    c278:	ldrd	r2, r3, [r9, #8]
    c27c:	strd	r2, r3, [sp]
    c280:	mov	r2, r7
    c282:	mov	r3, r6
    c284:	bl	c00c <ulist_next@@Base+0xc10>
    c288:	cmp	r0, #0
    c28a:	beq.n	c1b0 <ulist_next@@Base+0xdb4>
    c28c:	b.n	c258 <ulist_next@@Base+0xe5c>
    c28e:	add	sp, #60	; 0x3c
    c290:	vpop	{d8}
    c294:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c298:	ldrh	r6, [r6, #30]
    c29a:	movs	r5, r0
    c29c:	lsls	r4, r4, #8
    c29e:	movs	r0, r0
    c2a0:	b.n	c4ec <report_qgroups@@Base+0x230>
    c2a2:	movs	r2, r0
    c2a4:	add	r0, pc, #608	; (adr r0, c508 <report_qgroups@@Base+0x24c>)
    c2a6:	movs	r5, r0
    c2a8:	udf	#12
    c2aa:	movs	r2, r0
    c2ac:	ldrh	r4, [r5, #24]
    c2ae:	movs	r5, r0

0000c2b0 <qgroup_set_item_count_ptr@@Base>:
    c2b0:	ldr	r3, [pc, #4]	; (c2b8 <qgroup_set_item_count_ptr@@Base+0x8>)
    c2b2:	add	r3, pc
    c2b4:	str	r0, [r3, #36]	; 0x24
    c2b6:	bx	lr
    c2b8:	ldr	r7, [sp, #584]	; 0x248
    c2ba:	movs	r5, r0

0000c2bc <report_qgroups@@Base>:
    c2bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2c0:	mov	r5, r0
    c2c2:	ldr	r4, [pc, #552]	; (c4ec <report_qgroups@@Base+0x230>)
    c2c4:	sub	sp, #60	; 0x3c
    c2c6:	ldr	r3, [pc, #552]	; (c4f0 <report_qgroups@@Base+0x234>)
    c2c8:	add	r4, pc
    c2ca:	ldr	r3, [r4, r3]
    c2cc:	ldr	r3, [r3, #0]
    c2ce:	cbnz	r3, c2e4 <report_qgroups@@Base+0x28>
    c2d0:	ldr	r3, [pc, #544]	; (c4f4 <report_qgroups@@Base+0x238>)
    c2d2:	add	r3, pc
    c2d4:	ldrb	r3, [r3, #8]
    c2d6:	lsls	r3, r3, #31
    c2d8:	bpl.n	c2e4 <report_qgroups@@Base+0x28>
    c2da:	cbz	r0, c318 <report_qgroups@@Base+0x5c>
    c2dc:	ldr	r0, [pc, #536]	; (c4f8 <report_qgroups@@Base+0x23c>)
    c2de:	add	r0, pc
    c2e0:	blx	8804 <puts@plt+0x4>
    c2e4:	ldr	r6, [pc, #532]	; (c4fc <report_qgroups@@Base+0x240>)
    c2e6:	add	r6, pc
    c2e8:	ldrb	r3, [r6, #8]
    c2ea:	and.w	r3, r3, #3
    c2ee:	cmp	r3, #2
    c2f0:	bne.n	c328 <report_qgroups@@Base+0x6c>
    c2f2:	ldr	r0, [pc, #524]	; (c500 <report_qgroups@@Base+0x244>)
    c2f4:	add	r0, pc
    c2f6:	blx	8804 <puts@plt+0x4>
    c2fa:	ldrb	r3, [r6, #8]
    c2fc:	and.w	r3, r3, #3
    c300:	cmp	r3, #2
    c302:	bne.n	c312 <report_qgroups@@Base+0x56>
    c304:	ldr	r3, [pc, #508]	; (c504 <report_qgroups@@Base+0x248>)
    c306:	ldr	r0, [pc, #512]	; (c508 <report_qgroups@@Base+0x24c>)
    c308:	ldr	r3, [r4, r3]
    c30a:	add	r0, pc
    c30c:	ldr	r1, [r3, #0]
    c30e:	blx	8b1c <fputs@plt+0x4>
    c312:	mov.w	r8, #1
    c316:	b.n	c32c <report_qgroups@@Base+0x70>
    c318:	ldr	r0, [pc, #496]	; (c50c <report_qgroups@@Base+0x250>)
    c31a:	add	r0, pc
    c31c:	blx	8804 <puts@plt+0x4>
    c320:	mov	r0, r5
    c322:	add	sp, #60	; 0x3c
    c324:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c328:	mov.w	r8, #0
    c32c:	ldr	r0, [pc, #480]	; (c510 <report_qgroups@@Base+0x254>)
    c32e:	movs	r7, #0
    c330:	ldr.w	r9, [pc, #480]	; c514 <report_qgroups@@Base+0x258>
    c334:	add	r0, pc
    c336:	ldr.w	sl, [pc, #480]	; c518 <report_qgroups@@Base+0x25c>
    c33a:	bl	134ee <rb_first@@Base>
    c33e:	ldr	r6, [pc, #476]	; (c51c <report_qgroups@@Base+0x260>)
    c340:	add	r9, pc
    c342:	add	sl, pc
    c344:	add	r6, pc
    c346:	mov	r4, r0
    c348:	cbnz	r4, c35e <report_qgroups@@Base+0xa2>
    c34a:	cmp	r7, #0
    c34c:	beq.w	c4e8 <report_qgroups@@Base+0x22c>
    c350:	cmp.w	r8, #0
    c354:	ite	ne
    c356:	movne	r5, #0
    c358:	mvneq.w	r5, #116	; 0x74
    c35c:	b.n	c320 <report_qgroups@@Base+0x64>
    c35e:	ldrd	r2, r0, [r4, #-16]
    c362:	ldrd	r3, r1, [r4, #-48]	; 0x30
    c366:	subs	r3, r2, r3
    c368:	str	r3, [sp, #24]
    c36a:	sbc.w	r3, r0, r1
    c36e:	ldrd	r2, r0, [r4, #-32]
    c372:	str	r3, [sp, #28]
    c374:	ldrd	r3, r1, [r4, #-64]	; 0x40
    c378:	subs	r3, r2, r3
    c37a:	str	r3, [sp, #32]
    c37c:	ldr	r2, [sp, #32]
    c37e:	sbc.w	r3, r0, r1
    c382:	str	r3, [sp, #36]	; 0x24
    c384:	ldr	r3, [sp, #24]
    c386:	orrs	r3, r2
    c388:	ldr	r2, [sp, #36]	; 0x24
    c38a:	str	r3, [sp, #40]	; 0x28
    c38c:	ldr	r3, [sp, #28]
    c38e:	orrs	r3, r2
    c390:	str	r3, [sp, #44]	; 0x2c
    c392:	cbnz	r5, c3b0 <report_qgroups@@Base+0xf4>
    c394:	ldrd	r2, r3, [sp, #40]	; 0x28
    c398:	orrs	r3, r2
    c39a:	beq.w	c4de <report_qgroups@@Base+0x222>
    c39e:	ldr.w	r3, [r4, #-88]
    c3a2:	cbnz	r3, c3b0 <report_qgroups@@Base+0xf4>
    c3a4:	ldrh.w	r2, [r4, #-90]
    c3a8:	mov	r3, r5
    c3aa:	orrs	r3, r2
    c3ac:	beq.w	c4ba <report_qgroups@@Base+0x1fe>
    c3b0:	ldrd	fp, ip, [sp, #40]	; 0x28
    c3b4:	ldrd	r0, r3, [r4, #-96]	; 0x60
    c3b8:	orrs.w	r1, fp, ip
    c3bc:	mov.w	r2, r3, lsr #16
    c3c0:	uxth	r3, r3
    c3c2:	bne.w	c4d0 <report_qgroups@@Base+0x214>
    c3c6:	ldr	r1, [pc, #344]	; (c520 <report_qgroups@@Base+0x264>)
    c3c8:	add	r1, pc
    c3ca:	strd	r0, r3, [sp]
    c3ce:	movs	r3, #0
    c3d0:	str	r1, [sp, #8]
    c3d2:	movs	r0, #1
    c3d4:	mov	r1, sl
    c3d6:	blx	89ec <__printf_chk@plt+0x4>
    c3da:	ldrd	r2, r3, [r4, #-24]
    c3de:	str	r6, [sp, #8]
    c3e0:	movs	r0, #1
    c3e2:	ldr	r1, [pc, #320]	; (c524 <report_qgroups@@Base+0x268>)
    c3e4:	strd	r2, r3, [sp, #16]
    c3e8:	ldrd	r2, r3, [r4, #-32]
    c3ec:	add	r1, pc
    c3ee:	str	r1, [sp, #52]	; 0x34
    c3f0:	strd	r2, r3, [sp]
    c3f4:	mov	r3, r6
    c3f6:	ldr	r2, [pc, #304]	; (c528 <report_qgroups@@Base+0x26c>)
    c3f8:	add	r2, pc
    c3fa:	blx	89ec <__printf_chk@plt+0x4>
    c3fe:	ldrd	r2, r3, [r4, #-56]	; 0x38
    c402:	str	r6, [sp, #8]
    c404:	movs	r0, #1
    c406:	ldr	r1, [sp, #52]	; 0x34
    c408:	strd	r2, r3, [sp, #16]
    c40c:	ldrd	r2, r3, [r4, #-64]	; 0x40
    c410:	strd	r2, r3, [sp]
    c414:	mov	r3, r6
    c416:	ldr	r2, [pc, #276]	; (c52c <report_qgroups@@Base+0x270>)
    c418:	add	r2, pc
    c41a:	blx	89ec <__printf_chk@plt+0x4>
    c41e:	ldrd	r2, r3, [sp, #32]
    c422:	orrs	r3, r2
    c424:	beq.n	c444 <report_qgroups@@Base+0x188>
    c426:	ldrd	r2, r3, [sp, #32]
    c42a:	movs	r0, #1
    c42c:	ldr	r1, [pc, #256]	; (c530 <report_qgroups@@Base+0x274>)
    c42e:	str	r6, [sp, #8]
    c430:	strd	r2, r3, [sp, #16]
    c434:	add	r1, pc
    c436:	strd	r2, r3, [sp]
    c43a:	mov	r3, r6
    c43c:	ldr	r2, [pc, #244]	; (c534 <report_qgroups@@Base+0x278>)
    c43e:	add	r2, pc
    c440:	blx	89ec <__printf_chk@plt+0x4>
    c444:	ldrd	r2, r3, [r4, #-8]
    c448:	movs	r0, #1
    c44a:	ldr.w	fp, [pc, #236]	; c538 <report_qgroups@@Base+0x27c>
    c44e:	ldr	r1, [pc, #236]	; (c53c <report_qgroups@@Base+0x280>)
    c450:	add	fp, pc
    c452:	strd	r2, r3, [sp, #16]
    c456:	str.w	fp, [sp, #8]
    c45a:	add	r1, pc
    c45c:	ldrd	r2, r3, [r4, #-16]
    c460:	str	r1, [sp, #52]	; 0x34
    c462:	strd	r2, r3, [sp]
    c466:	mov	r3, fp
    c468:	ldr	r2, [pc, #212]	; (c540 <report_qgroups@@Base+0x284>)
    c46a:	add	r2, pc
    c46c:	blx	89ec <__printf_chk@plt+0x4>
    c470:	ldrd	r2, r3, [r4, #-40]	; 0x28
    c474:	str.w	fp, [sp, #8]
    c478:	movs	r0, #1
    c47a:	ldr	r1, [sp, #52]	; 0x34
    c47c:	strd	r2, r3, [sp, #16]
    c480:	ldrd	r2, r3, [r4, #-48]	; 0x30
    c484:	strd	r2, r3, [sp]
    c488:	mov	r3, fp
    c48a:	ldr	r2, [pc, #184]	; (c544 <report_qgroups@@Base+0x288>)
    c48c:	add	r2, pc
    c48e:	blx	89ec <__printf_chk@plt+0x4>
    c492:	ldrd	r2, r3, [sp, #24]
    c496:	orrs	r3, r2
    c498:	beq.n	c4d6 <report_qgroups@@Base+0x21a>
    c49a:	ldrd	r2, r3, [sp, #24]
    c49e:	movs	r0, #1
    c4a0:	ldr	r1, [pc, #164]	; (c548 <report_qgroups@@Base+0x28c>)
    c4a2:	str.w	fp, [sp, #8]
    c4a6:	strd	r2, r3, [sp, #16]
    c4aa:	add	r1, pc
    c4ac:	strd	r2, r3, [sp]
    c4b0:	mov	r3, fp
    c4b2:	ldr	r2, [pc, #152]	; (c54c <report_qgroups@@Base+0x290>)
    c4b4:	add	r2, pc
    c4b6:	blx	89ec <__printf_chk@plt+0x4>
    c4ba:	ldr.w	r2, [r9, #4]
    c4be:	add.w	r3, r4, #40	; 0x28
    c4c2:	movs	r7, #1
    c4c4:	str.w	r3, [r9, #4]
    c4c8:	strd	r9, r2, [r4, #40]	; 0x28
    c4cc:	str	r3, [r2, #0]
    c4ce:	b.n	c4de <report_qgroups@@Base+0x222>
    c4d0:	ldr	r1, [pc, #124]	; (c550 <report_qgroups@@Base+0x294>)
    c4d2:	add	r1, pc
    c4d4:	b.n	c3ca <report_qgroups@@Base+0x10e>
    c4d6:	ldrd	r2, r3, [sp, #40]	; 0x28
    c4da:	orrs	r3, r2
    c4dc:	bne.n	c4ba <report_qgroups@@Base+0x1fe>
    c4de:	mov	r0, r4
    c4e0:	bl	1350e <rb_next@@Base>
    c4e4:	mov	r4, r0
    c4e6:	b.n	c348 <report_qgroups@@Base+0x8c>
    c4e8:	mov	r5, r7
    c4ea:	b.n	c320 <report_qgroups@@Base+0x64>
    c4ec:	ldrh	r0, [r0, #22]
    c4ee:	movs	r5, r0
    c4f0:	lsls	r4, r0, #9
    c4f2:	movs	r0, r0
    c4f4:	ldr	r7, [sp, #456]	; 0x1c8
    c4f6:	movs	r5, r0
    c4f8:	ble.n	c514 <report_qgroups@@Base+0x258>
    c4fa:	movs	r2, r0
    c4fc:	ldr	r7, [sp, #376]	; 0x178
    c4fe:	movs	r5, r0
    c500:	ble.n	c5e6 <free_qgroup_counts@@Base+0x92>
    c502:	movs	r2, r0
    c504:	lsls	r4, r6, #8
    c506:	movs	r0, r0
    c508:	ble.n	c45e <report_qgroups@@Base+0x1a2>
    c50a:	movs	r2, r0
    c50c:	ble.n	c538 <report_qgroups@@Base+0x27c>
    c50e:	movs	r2, r0
    c510:	ldr	r7, [sp, #64]	; 0x40
    c512:	movs	r5, r0
    c514:	ldrh	r4, [r0, #44]	; 0x2c
    c516:	movs	r5, r0
    c518:	ble.n	c446 <report_qgroups@@Base+0x18a>
    c51a:	movs	r2, r0
    c51c:	ble.n	c48e <report_qgroups@@Base+0x1d2>
    c51e:	movs	r2, r0
    c520:	blt.n	c5ae <free_qgroup_counts@@Base+0x5a>
    c522:	movs	r2, r0
    c524:	ble.n	c566 <free_qgroup_counts@@Base+0x12>
    c526:	movs	r2, r0
    c528:	ble.n	c548 <report_qgroups@@Base+0x28c>
    c52a:	movs	r2, r0
    c52c:	ble.n	c556 <free_qgroup_counts@@Base+0x2>
    c52e:	movs	r2, r0
    c530:	ble.n	c53a <report_qgroups@@Base+0x27e>
    c532:	movs	r2, r0
    c534:	bgt.n	c51e <report_qgroups@@Base+0x262>
    c536:	movs	r2, r0
    c538:	ble.n	c54a <report_qgroups@@Base+0x28e>
    c53a:	movs	r2, r0
    c53c:	bgt.n	c4a2 <report_qgroups@@Base+0x1e6>
    c53e:	movs	r2, r0
    c540:	bgt.n	c47c <report_qgroups@@Base+0x1c0>
    c542:	movs	r2, r0
    c544:	bgt.n	c486 <report_qgroups@@Base+0x1ca>
    c546:	movs	r2, r0
    c548:	bgt.n	c466 <report_qgroups@@Base+0x1aa>
    c54a:	movs	r2, r0
    c54c:	bgt.n	c64a <qgroup_verify_all@@Base+0x5a>
    c54e:	movs	r2, r0
    c550:	blt.n	c568 <free_qgroup_counts@@Base+0x14>
    c552:	movs	r2, r0

0000c554 <free_qgroup_counts@@Base>:
    c554:	ldr	r0, [pc, #144]	; (c5e8 <free_qgroup_counts@@Base+0x94>)
    c556:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c55a:	add	r0, pc
    c55c:	bl	134ee <rb_first@@Base>
    c560:	ldr	r6, [pc, #136]	; (c5ec <free_qgroup_counts@@Base+0x98>)
    c562:	add	r6, pc
    c564:	mov	r4, r0
    c566:	cbnz	r4, c56c <free_qgroup_counts@@Base+0x18>
    c568:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c56c:	add.w	r0, r4, #40	; 0x28
    c570:	mov	r5, r4
    c572:	bl	b41c <ulist_next@@Base+0x20>
    c576:	ldr.w	r1, [r5, #12]!
    c57a:	sub.w	r7, r4, #96	; 0x60
    c57e:	ldr.w	r8, [r1]
    c582:	cmp	r1, r5
    c584:	bne.n	c5ae <free_qgroup_counts@@Base+0x5a>
    c586:	mov	r5, r4
    c588:	ldr.w	r1, [r5, #20]!
    c58c:	ldr.w	r8, [r1]
    c590:	cmp	r1, r5
    c592:	bne.n	c5ca <free_qgroup_counts@@Base+0x76>
    c594:	mov	r0, r4
    c596:	bl	1350e <rb_next@@Base>
    c59a:	mov	r1, r6
    c59c:	mov	r5, r0
    c59e:	mov	r0, r4
    c5a0:	bl	13278 <rb_erase@@Base>
    c5a4:	mov	r0, r7
    c5a6:	blx	85dc <free@plt+0x4>
    c5aa:	mov	r4, r5
    c5ac:	b.n	c566 <free_qgroup_counts@@Base+0x12>
    c5ae:	mov	r0, r1
    c5b0:	bl	b41c <ulist_next@@Base+0x20>
    c5b4:	add.w	r0, r1, #8
    c5b8:	bl	b41c <ulist_next@@Base+0x20>
    c5bc:	mov	r0, r1
    c5be:	blx	85dc <free@plt+0x4>
    c5c2:	mov	r1, r8
    c5c4:	ldr.w	r8, [r8]
    c5c8:	b.n	c582 <free_qgroup_counts@@Base+0x2e>
    c5ca:	mov	r0, r1
    c5cc:	bl	b41c <ulist_next@@Base+0x20>
    c5d0:	add.w	r0, r1, #8
    c5d4:	bl	b41c <ulist_next@@Base+0x20>
    c5d8:	mov	r0, r1
    c5da:	blx	85dc <free@plt+0x4>
    c5de:	mov	r1, r8
    c5e0:	ldr.w	r8, [r8]
    c5e4:	b.n	c590 <free_qgroup_counts@@Base+0x3c>
    c5e6:	nop
    c5e8:	ldr	r4, [sp, #936]	; 0x3a8
    c5ea:	movs	r5, r0
    c5ec:	ldr	r4, [sp, #904]	; 0x388
    c5ee:	movs	r5, r0

0000c5f0 <qgroup_verify_all@@Base>:
    c5f0:	ldr	r2, [pc, #956]	; (c9b0 <qgroup_verify_all@@Base+0x3c0>)
    c5f2:	ldr	r3, [pc, #960]	; (c9b4 <qgroup_verify_all@@Base+0x3c4>)
    c5f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c5f8:	add	r2, pc
    c5fa:	ldrb.w	r4, [r0, #364]	; 0x16c
    c5fe:	mov	r9, r0
    c600:	ldr.w	r8, [pc, #948]	; c9b8 <qgroup_verify_all@@Base+0x3c8>
    c604:	sub	sp, #196	; 0xc4
    c606:	ldr	r3, [r2, r3]
    c608:	ands.w	r0, r4, #16
    c60c:	add	r8, pc
    c60e:	ldr	r3, [r3, #0]
    c610:	str	r3, [sp, #188]	; 0xbc
    c612:	mov.w	r3, #0
    c616:	beq.w	c9a2 <qgroup_verify_all@@Base+0x3b2>
    c61a:	movs	r0, #0
    c61c:	bl	b1fc <ulist_alloc@@Base>
    c620:	ldr	r3, [pc, #920]	; (c9bc <qgroup_verify_all@@Base+0x3cc>)
    c622:	add	r3, pc
    c624:	str	r0, [r3, #28]
    c626:	cbnz	r0, c650 <qgroup_verify_all@@Base+0x60>
    c628:	ldr	r3, [pc, #916]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c62a:	movs	r4, #12
    c62c:	ldr	r0, [pc, #916]	; (c9c4 <qgroup_verify_all@@Base+0x3d4>)
    c62e:	ldr.w	r3, [r8, r3]
    c632:	add	r0, pc
    c634:	ldr	r1, [r3, #0]
    c636:	blx	8b1c <fputs@plt+0x4>
    c63a:	ldr	r2, [pc, #908]	; (c9c8 <qgroup_verify_all@@Base+0x3d8>)
    c63c:	ldr	r3, [pc, #884]	; (c9b4 <qgroup_verify_all@@Base+0x3c4>)
    c63e:	add	r2, pc
    c640:	ldr	r3, [r2, r3]
    c642:	ldr	r2, [r3, #0]
    c644:	ldr	r3, [sp, #188]	; 0xbc
    c646:	eors	r2, r3
    c648:	beq.w	c9a6 <qgroup_verify_all@@Base+0x3b6>
    c64c:	blx	86b8 <__stack_chk_fail@plt>
    c650:	ldr.w	r3, [r9, #44]	; 0x2c
    c654:	mov.w	fp, #0
    c658:	mov.w	sl, #2
    c65c:	mov	r6, fp
    c65e:	str	r3, [sp, #40]	; 0x28
    c660:	ldr	r3, [pc, #872]	; (c9cc <qgroup_verify_all@@Base+0x3dc>)
    c662:	add	r3, pc
    c664:	str	r3, [sp, #52]	; 0x34
    c666:	add	r3, sp, #120	; 0x78
    c668:	str	r3, [sp, #8]
    c66a:	mov	r0, r3
    c66c:	bl	17df0 <btrfs_init_path@@Base>
    c670:	ldr	r3, [sp, #8]
    c672:	strb.w	r6, [sp, #69]	; 0x45
    c676:	strb.w	r6, [sp, #70]	; 0x46
    c67a:	strb.w	r6, [sp, #71]	; 0x47
    c67e:	strb.w	r6, [sp, #72]	; 0x48
    c682:	strb.w	r6, [sp, #73]	; 0x49
    c686:	strb.w	r6, [sp, #74]	; 0x4a
    c68a:	strb.w	r6, [sp, #75]	; 0x4b
    c68e:	strb.w	r6, [sp, #76]	; 0x4c
    c692:	cmp.w	fp, #0
    c696:	bne.n	c724 <qgroup_verify_all@@Base+0x134>
    c698:	movs	r2, #246	; 0xf6
    c69a:	mov	r1, fp
    c69c:	strd	r2, r1, [sp, #60]	; 0x3c
    c6a0:	movs	r0, #0
    c6a2:	movs	r2, #0
    c6a4:	ldr	r1, [sp, #40]	; 0x28
    c6a6:	strd	r2, r2, [sp]
    c6aa:	add	r2, sp, #60	; 0x3c
    c6ac:	strb.w	r6, [sp, #68]	; 0x44
    c6b0:	bl	1a1e4 <btrfs_search_slot@@Base>
    c6b4:	subs	r4, r0, #0
    c6b6:	blt.n	c72a <qgroup_verify_all@@Base+0x13a>
    c6b8:	ldr	r3, [pc, #788]	; (c9d0 <qgroup_verify_all@@Base+0x3e0>)
    c6ba:	add	r3, pc
    c6bc:	str	r3, [sp, #36]	; 0x24
    c6be:	ldr	r3, [sp, #120]	; 0x78
    c6c0:	str	r3, [sp, #20]
    c6c2:	ldr.w	r3, [r3, #192]	; 0xc0
    c6c6:	str	r3, [sp, #44]	; 0x2c
    c6c8:	ldr	r3, [sp, #20]
    c6ca:	adds	r3, #197	; 0xc5
    c6cc:	str	r3, [sp, #28]
    c6ce:	movs	r3, #0
    c6d0:	str	r3, [sp, #24]
    c6d2:	ldr	r3, [pc, #768]	; (c9d4 <qgroup_verify_all@@Base+0x3e4>)
    c6d4:	add	r3, pc
    c6d6:	str	r3, [sp, #32]
    c6d8:	ldr	r3, [sp, #44]	; 0x2c
    c6da:	ldr	r2, [sp, #24]
    c6dc:	cmp	r3, r2
    c6de:	bgt.n	c766 <qgroup_verify_all@@Base+0x176>
    c6e0:	ldr	r3, [sp, #40]	; 0x28
    c6e2:	add	r4, sp, #120	; 0x78
    c6e4:	strb.w	r6, [sp, #185]	; 0xb9
    c6e8:	mov	r1, r4
    c6ea:	ldr.w	r0, [r3, #464]	; 0x1d0
    c6ee:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    c6f2:	cmp	r0, #0
    c6f4:	beq.n	c6be <qgroup_verify_all@@Base+0xce>
    c6f6:	mov	r0, r4
    c6f8:	mov.w	fp, #1
    c6fc:	bl	17e00 <btrfs_release_path@@Base>
    c700:	cmp	sl, fp
    c702:	bne.n	c720 <qgroup_verify_all@@Base+0x130>
    c704:	mov	r0, r9
    c706:	bl	bc64 <ulist_next@@Base+0x868>
    c70a:	mov	r4, r0
    c70c:	cmp	r0, #0
    c70e:	beq.w	c97c <qgroup_verify_all@@Base+0x38c>
    c712:	ldr	r3, [pc, #684]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c714:	ldr	r2, [pc, #704]	; (c9d8 <qgroup_verify_all@@Base+0x3e8>)
    c716:	ldr.w	r0, [r8, r3]
    c71a:	add	r2, pc
    c71c:	mov	r3, r4
    c71e:	b.n	c74a <qgroup_verify_all@@Base+0x15a>
    c720:	mov	sl, fp
    c722:	b.n	c666 <qgroup_verify_all@@Base+0x76>
    c724:	movs	r2, #0
    c726:	mov	r1, r2
    c728:	b.n	c69c <qgroup_verify_all@@Base+0xac>
    c72a:	ldr	r3, [pc, #660]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c72c:	movs	r1, #1
    c72e:	ldr	r2, [pc, #684]	; (c9dc <qgroup_verify_all@@Base+0x3ec>)
    c730:	ldr.w	r0, [r8, r3]
    c734:	add	r2, pc
    c736:	mov	r3, r4
    c738:	ldr	r0, [r0, #0]
    c73a:	blx	8a14 <__fprintf_chk@plt+0x4>
    c73e:	ldr	r3, [pc, #640]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c740:	ldr	r2, [pc, #668]	; (c9e0 <qgroup_verify_all@@Base+0x3f0>)
    c742:	add	r2, pc
    c744:	ldr.w	r0, [r8, r3]
    c748:	mov	r3, r4
    c74a:	ldr	r0, [r0, #0]
    c74c:	movs	r1, #1
    c74e:	blx	8a14 <__fprintf_chk@plt+0x4>
    c752:	bl	b5c8 <ulist_next@@Base+0x1cc>
    c756:	ldr	r0, [pc, #652]	; (c9e4 <qgroup_verify_all@@Base+0x3f4>)
    c758:	ldr	r1, [pc, #652]	; (c9e8 <qgroup_verify_all@@Base+0x3f8>)
    c75a:	add	r0, pc
    c75c:	add	r1, pc
    c75e:	adds	r0, #24
    c760:	bl	178a6 <rb_free_nodes@@Base>
    c764:	b.n	c63a <qgroup_verify_all@@Base+0x4a>
    c766:	ldr	r3, [sp, #24]
    c768:	movs	r2, #25
    c76a:	add	r7, sp, #100	; 0x64
    c76c:	ldr	r0, [sp, #20]
    c76e:	muls	r2, r3
    c770:	mov	r1, r7
    c772:	movs	r3, #17
    c774:	adds	r2, #101	; 0x65
    c776:	bl	172c2 <read_extent_buffer@@Base>
    c77a:	ldr.w	r3, [sp, #109]	; 0x6d
    c77e:	ldrd	r0, r1, [sp, #100]	; 0x64
    c782:	str	r3, [sp, #8]
    c784:	ldr.w	r3, [sp, #113]	; 0x71
    c788:	strd	r0, r1, [sp, #60]	; 0x3c
    c78c:	str	r3, [sp, #12]
    c78e:	ldr	r3, [sp, #8]
    c790:	str.w	r3, [sp, #69]	; 0x45
    c794:	ldr	r3, [sp, #12]
    c796:	str.w	r3, [sp, #73]	; 0x49
    c79a:	ldrb.w	r3, [sp, #108]	; 0x6c
    c79e:	strb.w	r3, [sp, #68]	; 0x44
    c7a2:	cmp.w	fp, #0
    c7a6:	beq.n	c818 <qgroup_verify_all@@Base+0x228>
    c7a8:	cmp	r3, #246	; 0xf6
    c7aa:	bne.n	c7f6 <qgroup_verify_all@@Base+0x206>
    c7ac:	ldrd	r3, r4, [sp, #8]
    c7b0:	cmp	r4, r1
    c7b2:	it	eq
    c7b4:	cmpeq	r3, r0
    c7b6:	bcc.n	c7f6 <qgroup_verify_all@@Base+0x206>
    c7b8:	bl	b438 <ulist_next@@Base+0x3c>
    c7bc:	mov	r5, r0
    c7be:	ldrd	r0, r1, [sp, #8]
    c7c2:	bl	b438 <ulist_next@@Base+0x3c>
    c7c6:	mov	r4, r0
    c7c8:	cbz	r5, c804 <qgroup_verify_all@@Base+0x214>
    c7ca:	cbz	r0, c804 <qgroup_verify_all@@Base+0x214>
    c7cc:	movs	r1, #24
    c7ce:	movs	r0, #1
    c7d0:	blx	8544 <calloc@plt+0x4>
    c7d4:	cbz	r0, c812 <qgroup_verify_all@@Base+0x222>
    c7d6:	strd	r4, r5, [r0, #16]
    c7da:	adds	r5, #108	; 0x6c
    c7dc:	ldr	r3, [r5, #4]
    c7de:	add.w	r1, r0, #8
    c7e2:	str	r0, [r5, #4]
    c7e4:	adds	r4, #116	; 0x74
    c7e6:	strd	r5, r3, [r0]
    c7ea:	str	r0, [r3, #0]
    c7ec:	ldr	r2, [r4, #4]
    c7ee:	str	r1, [r4, #4]
    c7f0:	strd	r4, r2, [r0, #8]
    c7f4:	str	r1, [r2, #0]
    c7f6:	ldr	r3, [sp, #24]
    c7f8:	adds	r3, #1
    c7fa:	str	r3, [sp, #24]
    c7fc:	ldr	r3, [sp, #28]
    c7fe:	adds	r3, #25
    c800:	str	r3, [sp, #28]
    c802:	b.n	c6d8 <qgroup_verify_all@@Base+0xe8>
    c804:	mvn.w	r4, #1
    c808:	ldr	r0, [pc, #480]	; (c9ec <qgroup_verify_all@@Base+0x3fc>)
    c80a:	add	r0, pc
    c80c:	bl	17424 <__btrfs_error@@Base>
    c810:	b.n	c73e <qgroup_verify_all@@Base+0x14e>
    c812:	mvn.w	r4, #11
    c816:	b.n	c808 <qgroup_verify_all@@Base+0x218>
    c818:	cmp	r3, #240	; 0xf0
    c81a:	bne.n	c84a <qgroup_verify_all@@Base+0x25a>
    c81c:	ldr	r3, [sp, #28]
    c81e:	ldr	r2, [sp, #20]
    c820:	ldr	r1, [sp, #32]
    c822:	ldr.w	r3, [r3, #17]
    c826:	add	r3, r2
    c828:	ldrb	r1, [r1, #8]
    c82a:	ldr.w	r2, [r3, #213]	; 0xd5
    c82e:	bic.w	r1, r1, #3
    c832:	ubfx	r2, r2, #1, #2
    c836:	orrs	r2, r1
    c838:	ldr	r1, [sp, #32]
    c83a:	strb	r2, [r1, #8]
    c83c:	ldr.w	r2, [r3, #221]	; 0xdd
    c840:	ldr.w	r3, [r3, #225]	; 0xe1
    c844:	str	r2, [r1, #16]
    c846:	str	r3, [r1, #20]
    c848:	b.n	c7f6 <qgroup_verify_all@@Base+0x206>
    c84a:	cmp	r3, #242	; 0xf2
    c84c:	bne.n	c7f6 <qgroup_verify_all@@Base+0x206>
    c84e:	ldr	r3, [sp, #20]
    c850:	movs	r1, #144	; 0x90
    c852:	movs	r0, #1
    c854:	adds	r3, #96	; 0x60
    c856:	str	r3, [sp, #48]	; 0x30
    c858:	ldr	r3, [sp, #28]
    c85a:	ldr.w	r5, [r3, #17]
    c85e:	blx	8544 <calloc@plt+0x4>
    c862:	adds	r5, #101	; 0x65
    c864:	mov	r4, r0
    c866:	cmp	r0, #0
    c868:	beq.n	c968 <qgroup_verify_all@@Base+0x378>
    c86a:	ldrd	r2, r3, [sp, #8]
    c86e:	mov	ip, r0
    c870:	strd	r2, r3, [ip], #12
    c874:	ldmia	r7!, {r0, r1, r2, r3}
    c876:	stmia.w	ip!, {r0, r1, r2, r3}
    c87a:	ldr	r3, [r7, #0]
    c87c:	strb.w	r3, [ip]
    c880:	ldr	r3, [sp, #48]	; 0x30
    c882:	add	r3, r5
    c884:	ldr	r2, [r3, #8]
    c886:	mov	r5, r3
    c888:	ldr	r3, [r3, #12]
    c88a:	strd	r2, r3, [r4, #32]
    c88e:	ldr	r2, [r5, #16]
    c890:	ldr	r3, [r5, #20]
    c892:	strd	r2, r3, [r4, #40]	; 0x28
    c896:	ldr	r2, [r5, #24]
    c898:	ldr	r3, [r5, #28]
    c89a:	strd	r2, r3, [r4, #48]	; 0x30
    c89e:	ldr	r2, [r5, #32]
    c8a0:	ldr	r3, [r5, #36]	; 0x24
    c8a2:	mov	r5, fp
    c8a4:	strd	r2, r3, [r4, #56]	; 0x38
    c8a8:	add.w	r3, r4, #108	; 0x6c
    c8ac:	strd	r3, r3, [r4, #108]	; 0x6c
    c8b0:	add.w	r3, r4, #116	; 0x74
    c8b4:	strd	r3, r3, [r4, #116]	; 0x74
    c8b8:	add.w	r3, r4, #136	; 0x88
    c8bc:	ldr	r2, [sp, #52]	; 0x34
    c8be:	strd	r3, r3, [r4, #136]	; 0x88
    c8c2:	ldr	r7, [r2, #0]
    c8c4:	cmp	r7, #0
    c8c6:	bne.n	c93a <qgroup_verify_all@@Base+0x34a>
    c8c8:	ldr	r1, [sp, #36]	; 0x24
    c8ca:	ldr	r0, [sp, #36]	; 0x24
    c8cc:	strd	r5, r7, [r4, #96]	; 0x60
    c8d0:	ldr	r1, [r1, #4]
    c8d2:	str	r7, [r4, #104]	; 0x68
    c8d4:	adds	r1, #1
    c8d6:	str	r1, [r0, #4]
    c8d8:	add.w	r0, r4, #96	; 0x60
    c8dc:	ldr	r1, [sp, #36]	; 0x24
    c8de:	str	r0, [r2, #0]
    c8e0:	bl	131d2 <rb_insert_color@@Base>
    c8e4:	ldr.w	r2, [sp, #69]	; 0x45
    c8e8:	ldr.w	r3, [sp, #73]	; 0x49
    c8ec:	add	r1, sp, #80	; 0x50
    c8ee:	mov	r0, r9
    c8f0:	strd	r2, r3, [sp, #80]	; 0x50
    c8f4:	mov.w	r2, #4294967295	; 0xffffffff
    c8f8:	movs	r3, #132	; 0x84
    c8fa:	strb.w	r2, [sp, #89]	; 0x59
    c8fe:	strb.w	r3, [sp, #88]	; 0x58
    c902:	strb.w	r2, [sp, #90]	; 0x5a
    c906:	strb.w	r2, [sp, #91]	; 0x5b
    c90a:	strb.w	r2, [sp, #92]	; 0x5c
    c90e:	strb.w	r2, [sp, #93]	; 0x5d
    c912:	strb.w	r2, [sp, #94]	; 0x5e
    c916:	strb.w	r2, [sp, #95]	; 0x5f
    c91a:	strb.w	r2, [sp, #96]	; 0x60
    c91e:	bl	1d8ac <btrfs_read_fs_root_no_cache@@Base>
    c922:	cmp	r0, #0
    c924:	beq.w	c7f6 <qgroup_verify_all@@Base+0x206>
    c928:	cmn.w	r0, #4096	; 0x1000
    c92c:	bhi.w	c7f6 <qgroup_verify_all@@Base+0x206>
    c930:	movs	r3, #1
    c932:	str	r3, [r4, #8]
    c934:	bl	1c592 <btrfs_free_fs_root@@Base>
    c938:	b.n	c7f6 <qgroup_verify_all@@Base+0x206>
    c93a:	ldrd	r0, r1, [r7, #-96]	; 0x60
    c93e:	ldrd	r2, r3, [sp, #8]
    c942:	cmp	r3, r1
    c944:	it	eq
    c946:	cmpeq	r2, r0
    c948:	bcs.n	c952 <qgroup_verify_all@@Base+0x362>
    c94a:	add.w	r2, r7, #8
    c94e:	mov	r5, r7
    c950:	b.n	c8c2 <qgroup_verify_all@@Base+0x2d2>
    c952:	ldrd	r2, r3, [sp, #8]
    c956:	cmp	r1, r3
    c958:	it	eq
    c95a:	cmpeq	r0, r2
    c95c:	bcs.n	c962 <qgroup_verify_all@@Base+0x372>
    c95e:	adds	r2, r7, #4
    c960:	b.n	c94e <qgroup_verify_all@@Base+0x35e>
    c962:	mov	r0, r4
    c964:	blx	85dc <free@plt+0x4>
    c968:	ldr	r3, [pc, #84]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c96a:	movs	r4, #12
    c96c:	ldr	r0, [pc, #128]	; (c9f0 <qgroup_verify_all@@Base+0x400>)
    c96e:	ldr.w	r3, [r8, r3]
    c972:	add	r0, pc
    c974:	ldr	r1, [r3, #0]
    c976:	blx	8b1c <fputs@plt+0x4>
    c97a:	b.n	c73e <qgroup_verify_all@@Base+0x14e>
    c97c:	mov	r0, r9
    c97e:	bl	c184 <ulist_next@@Base+0xd88>
    c982:	mov	r4, r0
    c984:	cbz	r0, c994 <qgroup_verify_all@@Base+0x3a4>
    c986:	ldr	r3, [pc, #56]	; (c9c0 <qgroup_verify_all@@Base+0x3d0>)
    c988:	ldr	r2, [pc, #104]	; (c9f4 <qgroup_verify_all@@Base+0x404>)
    c98a:	ldr.w	r0, [r8, r3]
    c98e:	add	r2, pc
    c990:	mov	r3, r4
    c992:	b.n	c74a <qgroup_verify_all@@Base+0x15a>
    c994:	movs	r2, #0
    c996:	movs	r3, #0
    c998:	mov	r0, sl
    c99a:	bl	b6b0 <ulist_next@@Base+0x2b4>
    c99e:	mov	r4, r0
    c9a0:	b.n	c752 <qgroup_verify_all@@Base+0x162>
    c9a2:	mov	r4, r0
    c9a4:	b.n	c63a <qgroup_verify_all@@Base+0x4a>
    c9a6:	mov	r0, r4
    c9a8:	add	sp, #196	; 0xc4
    c9aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c9ae:	nop
    c9b0:	strh	r0, [r2, #60]	; 0x3c
    c9b2:	movs	r5, r0
    c9b4:	lsls	r4, r4, #8
    c9b6:	movs	r0, r0
    c9b8:	strh	r4, [r7, #58]	; 0x3a
    c9ba:	movs	r5, r0
    c9bc:	ldr	r4, [sp, #136]	; 0x88
    c9be:	movs	r5, r0
    c9c0:	lsls	r4, r6, #8
    c9c2:	movs	r0, r0
    c9c4:	blt.n	ca26 <print_extent_state@@Base+0x2e>
    c9c6:	movs	r2, r0
    c9c8:	strh	r2, [r1, #58]	; 0x3a
    c9ca:	movs	r5, r0
    c9cc:	ldr	r3, [sp, #904]	; 0x388
    c9ce:	movs	r5, r0
    c9d0:	ldr	r3, [sp, #552]	; 0x228
    c9d2:	movs	r5, r0
    c9d4:	ldr	r3, [sp, #448]	; 0x1c0
    c9d6:	movs	r5, r0
    c9d8:	bge.n	c95a <qgroup_verify_all@@Base+0x36a>
    c9da:	movs	r2, r0
    c9dc:	bhi.n	ca5a <print_extent_state@@Base+0x62>
    c9de:	movs	r2, r0
    c9e0:	bge.n	cac6 <repair_qgroups@@Base+0x1a>
    c9e2:	movs	r2, r0
    c9e4:	ldr	r2, [sp, #936]	; 0x3a8
    c9e6:	movs	r5, r0
    c9e8:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
    c9ec:	bls.n	c8fa <qgroup_verify_all@@Base+0x30a>
    c9ee:	movs	r2, r0
    c9f0:	bhi.n	ca4a <print_extent_state@@Base+0x52>
    c9f2:	movs	r2, r0
    c9f4:	bhi.n	cadc <repair_qgroups@@Base+0x30>
    c9f6:	movs	r2, r0

0000c9f8 <print_extent_state@@Base>:
    c9f8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c9fc:	mov	r6, r0
    c9fe:	movs	r0, #0
    ca00:	mov	r7, r3
    ca02:	mov	r8, r2
    ca04:	bl	b1fc <ulist_alloc@@Base>
    ca08:	ldr	r3, [pc, #124]	; (ca88 <print_extent_state@@Base+0x90>)
    ca0a:	ldr	r5, [pc, #128]	; (ca8c <print_extent_state@@Base+0x94>)
    ca0c:	add	r3, pc
    ca0e:	add	r5, pc
    ca10:	str	r0, [r3, #28]
    ca12:	cbnz	r0, ca2a <print_extent_state@@Base+0x32>
    ca14:	ldr	r3, [pc, #120]	; (ca90 <print_extent_state@@Base+0x98>)
    ca16:	movs	r4, #12
    ca18:	ldr	r0, [pc, #120]	; (ca94 <print_extent_state@@Base+0x9c>)
    ca1a:	ldr	r3, [r5, r3]
    ca1c:	add	r0, pc
    ca1e:	ldr	r1, [r3, #0]
    ca20:	blx	8b1c <fputs@plt+0x4>
    ca24:	mov	r0, r4
    ca26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ca2a:	mov	r0, r6
    ca2c:	bl	bc64 <ulist_next@@Base+0x868>
    ca30:	mov	r4, r0
    ca32:	cbz	r0, ca5a <print_extent_state@@Base+0x62>
    ca34:	ldr	r3, [pc, #88]	; (ca90 <print_extent_state@@Base+0x98>)
    ca36:	ldr	r2, [pc, #96]	; (ca98 <print_extent_state@@Base+0xa0>)
    ca38:	add	r2, pc
    ca3a:	ldr	r0, [r5, r3]
    ca3c:	mov	r3, r4
    ca3e:	ldr	r0, [r0, #0]
    ca40:	movs	r1, #1
    ca42:	blx	8a14 <__fprintf_chk@plt+0x4>
    ca46:	bl	b5c8 <ulist_next@@Base+0x1cc>
    ca4a:	ldr	r0, [pc, #80]	; (ca9c <print_extent_state@@Base+0xa4>)
    ca4c:	ldr	r1, [pc, #80]	; (caa0 <print_extent_state@@Base+0xa8>)
    ca4e:	add	r0, pc
    ca50:	add	r1, pc
    ca52:	adds	r0, #24
    ca54:	bl	178a6 <rb_free_nodes@@Base>
    ca58:	b.n	ca24 <print_extent_state@@Base+0x2c>
    ca5a:	mov	r0, r6
    ca5c:	bl	c184 <ulist_next@@Base+0xd88>
    ca60:	mov	r4, r0
    ca62:	cbz	r0, ca70 <print_extent_state@@Base+0x78>
    ca64:	ldr	r3, [pc, #40]	; (ca90 <print_extent_state@@Base+0x98>)
    ca66:	ldr	r2, [pc, #60]	; (caa4 <print_extent_state@@Base+0xac>)
    ca68:	ldr	r0, [r5, r3]
    ca6a:	add	r2, pc
    ca6c:	mov	r3, r4
    ca6e:	b.n	ca3e <print_extent_state@@Base+0x46>
    ca70:	ldr	r0, [pc, #52]	; (caa8 <print_extent_state@@Base+0xb0>)
    ca72:	add	r0, pc
    ca74:	blx	8804 <puts@plt+0x4>
    ca78:	mov	r0, r4
    ca7a:	mov	r2, r8
    ca7c:	mov	r3, r7
    ca7e:	bl	b6b0 <ulist_next@@Base+0x2b4>
    ca82:	mov	r4, r0
    ca84:	b.n	ca46 <print_extent_state@@Base+0x4e>
    ca86:	nop
    ca88:	ldr	r0, [sp, #224]	; 0xe0
    ca8a:	movs	r5, r0
    ca8c:	strh	r2, [r7, #26]
    ca8e:	movs	r5, r0
    ca90:	lsls	r4, r6, #8
    ca92:	movs	r0, r0
    ca94:	bvc.n	cb22 <repair_qgroups@@Base+0x76>
    ca96:	movs	r2, r0
    ca98:	bvc.n	c9de <qgroup_verify_all@@Base+0x3ee>
    ca9a:	movs	r2, r0
    ca9c:	str	r7, [sp, #984]	; 0x3d8
    ca9e:	movs	r5, r0
    caa0:			; <UNDEFINED> instruction: 0xea19ffff
    caa4:	bvc.n	c9d4 <qgroup_verify_all@@Base+0x3e4>
    caa6:	movs	r2, r0
    caa8:	bvc.n	ca06 <print_extent_state@@Base+0xe>
    caaa:	movs	r2, r0

0000caac <repair_qgroups@@Base>:
    caac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cab0:	mov	r6, r1
    cab2:	vpush	{d8}
    cab6:	ldr	r1, [pc, #620]	; (cd24 <repair_qgroups@@Base+0x278>)
    cab8:	ldr	r2, [pc, #620]	; (cd28 <repair_qgroups@@Base+0x27c>)
    caba:	add	r1, pc
    cabc:	ldr	r3, [pc, #620]	; (cd2c <repair_qgroups@@Base+0x280>)
    cabe:	sub	sp, #124	; 0x7c
    cac0:	add	r3, pc
    cac2:	str	r0, [sp, #16]
    cac4:	ldr	r2, [r1, r2]
    cac6:	ldr	r2, [r2, #0]
    cac8:	str	r2, [sp, #116]	; 0x74
    caca:	mov.w	r2, #0
    cace:	movs	r2, #0
    cad0:	str	r2, [r6, #0]
    cad2:	ldr	r2, [pc, #604]	; (cd30 <repair_qgroups@@Base+0x284>)
    cad4:	ldr	r3, [r3, r2]
    cad6:	ldr	r3, [r3, #0]
    cad8:	cbnz	r3, caf2 <repair_qgroups@@Base+0x46>
    cada:	movs	r4, #0
    cadc:	ldr	r2, [pc, #596]	; (cd34 <repair_qgroups@@Base+0x288>)
    cade:	ldr	r3, [pc, #584]	; (cd28 <repair_qgroups@@Base+0x27c>)
    cae0:	add	r2, pc
    cae2:	ldr	r3, [r2, r3]
    cae4:	ldr	r2, [r3, #0]
    cae6:	ldr	r3, [sp, #116]	; 0x74
    cae8:	eors	r2, r3
    caea:	beq.w	cd16 <repair_qgroups@@Base+0x26a>
    caee:	blx	86b8 <__stack_chk_fail@plt>
    caf2:	ldr	r3, [pc, #580]	; (cd38 <repair_qgroups@@Base+0x28c>)
    caf4:	add	r3, pc
    caf6:	str	r3, [sp, #20]
    caf8:	ldr	r5, [r3, #0]
    cafa:	ldr	r3, [pc, #576]	; (cd3c <repair_qgroups@@Base+0x290>)
    cafc:	add	r3, pc
    cafe:	ldr.w	r2, [r5], #-136
    cb02:	vmov	s16, r3
    cb06:	ldr	r3, [pc, #568]	; (cd40 <repair_qgroups@@Base+0x294>)
    cb08:	sub.w	r8, r2, #136	; 0x88
    cb0c:	add	r3, pc
    cb0e:	vmov	s17, r3
    cb12:	ldr	r2, [sp, #20]
    cb14:	add.w	r3, r5, #136	; 0x88
    cb18:	str	r3, [sp, #12]
    cb1a:	cmp	r3, r2
    cb1c:	bne.n	cb5a <repair_qgroups@@Base+0xae>
    cb1e:	ldr	r3, [r6, #0]
    cb20:	cbnz	r3, cb2c <repair_qgroups@@Base+0x80>
    cb22:	ldr	r3, [pc, #544]	; (cd44 <repair_qgroups@@Base+0x298>)
    cb24:	add	r3, pc
    cb26:	ldrb	r3, [r3, #8]
    cb28:	lsls	r3, r3, #30
    cb2a:	beq.n	cada <repair_qgroups@@Base+0x2e>
    cb2c:	ldr	r3, [sp, #16]
    cb2e:	ldr	r0, [pc, #536]	; (cd48 <repair_qgroups@@Base+0x29c>)
    cb30:	ldr.w	r8, [r3, #44]	; 0x2c
    cb34:	add	r0, pc
    cb36:	blx	8804 <puts@plt+0x4>
    cb3a:	movs	r1, #1
    cb3c:	mov	r0, r8
    cb3e:	bl	2af24 <btrfs_start_transaction@@Base>
    cb42:	cmn.w	r0, #4096	; 0x1000
    cb46:	mov	r5, r0
    cb48:	bls.w	cc64 <repair_qgroups@@Base+0x1b8>
    cb4c:	mov	r4, r0
    cb4e:	cmp	r4, #0
    cb50:	bne.n	cadc <repair_qgroups@@Base+0x30>
    cb52:	ldr	r3, [r6, #0]
    cb54:	adds	r3, #1
    cb56:	str	r3, [r6, #0]
    cb58:	b.n	cadc <repair_qgroups@@Base+0x30>
    cb5a:	ldr	r3, [sp, #16]
    cb5c:	mov.w	r9, #0
    cb60:	ldrd	r1, r2, [r5]
    cb64:	movs	r0, #1
    cb66:	ldr.w	fp, [r3, #44]	; 0x2c
    cb6a:	uxth	r3, r2
    cb6c:	lsrs	r2, r2, #16
    cb6e:	strd	r1, r3, [sp]
    cb72:	mov	r3, r9
    cb74:	vmov	r1, s16
    cb78:	blx	89ec <__printf_chk@plt+0x4>
    cb7c:	movs	r1, #1
    cb7e:	mov	r0, fp
    cb80:	bl	2af24 <btrfs_start_transaction@@Base>
    cb84:	cmn.w	r0, #4096	; 0x1000
    cb88:	mov	r7, r0
    cb8a:	bls.n	cbb2 <repair_qgroups@@Base+0x106>
    cb8c:	mov	r4, r0
    cb8e:	cmp	r4, #0
    cb90:	bne.n	cadc <repair_qgroups@@Base+0x30>
    cb92:	ldr	r3, [r6, #0]
    cb94:	adds	r3, #1
    cb96:	str	r3, [r6, #0]
    cb98:	ldrd	r2, r3, [r5, #136]	; 0x88
    cb9c:	str	r3, [r2, #4]
    cb9e:	str	r2, [r3, #0]
    cba0:	ldr	r3, [sp, #12]
    cba2:	strd	r3, r3, [r5, #136]	; 0x88
    cba6:	mov	r5, r8
    cba8:	ldr.w	r3, [r8, #136]	; 0x88
    cbac:	sub.w	r8, r3, #136	; 0x88
    cbb0:	b.n	cb12 <repair_qgroups@@Base+0x66>
    cbb2:	add.w	sl, sp, #48	; 0x30
    cbb6:	mov	r0, sl
    cbb8:	bl	17df0 <btrfs_init_path@@Base>
    cbbc:	movs	r3, #242	; 0xf2
    cbbe:	strd	r9, r9, [sp, #28]
    cbc2:	mov	r1, fp
    cbc4:	strb.w	r3, [sp, #36]	; 0x24
    cbc8:	mov	r0, r7
    cbca:	ldrd	r2, r3, [r5]
    cbce:	str.w	r2, [sp, #37]	; 0x25
    cbd2:	add	r2, sp, #28
    cbd4:	str.w	r3, [sp, #41]	; 0x29
    cbd8:	movs	r3, #1
    cbda:	strd	r9, r3, [sp]
    cbde:	mov	r3, sl
    cbe0:	bl	1a1e4 <btrfs_search_slot@@Base>
    cbe4:	mov	r4, r0
    cbe6:	cbz	r0, cc16 <repair_qgroups@@Base+0x16a>
    cbe8:	ldrd	r1, r2, [r5]
    cbec:	vmov	r0, s17
    cbf0:	uxth	r3, r2
    cbf2:	lsrs	r2, r2, #16
    cbf4:	strd	r1, r3, [sp]
    cbf8:	mov	r3, r9
    cbfa:	bl	17424 <__btrfs_error@@Base>
    cbfe:	cmp	r4, #0
    cc00:	it	gt
    cc02:	mvngt.w	r4, #1
    cc06:	mov	r1, fp
    cc08:	mov	r0, r7
    cc0a:	bl	2b1a4 <btrfs_commit_transaction@@Base>
    cc0e:	mov	r0, sl
    cc10:	bl	17e00 <btrfs_release_path@@Base>
    cc14:	b.n	cb8e <repair_qgroups@@Base+0xe2>
    cc16:	ldr	r2, [sp, #48]	; 0x30
    cc18:	movs	r1, #25
    cc1a:	ldr	r3, [sp, #80]	; 0x50
    cc1c:	adds	r2, #96	; 0x60
    cc1e:	ldr	r0, [r7, #12]
    cc20:	mla	r3, r1, r3, r2
    cc24:	ldr	r1, [r7, #8]
    cc26:	ldr.w	r3, [r3, #118]	; 0x76
    cc2a:	adds	r3, #101	; 0x65
    cc2c:	add.w	ip, r2, r3
    cc30:	str	r1, [r2, r3]
    cc32:	str.w	r0, [ip, #4]
    cc36:	ldr	r0, [sp, #48]	; 0x30
    cc38:	ldrd	r2, r1, [r5, #64]	; 0x40
    cc3c:	add.w	ip, r0, #96	; 0x60
    cc40:	add	r3, ip
    cc42:	str	r2, [r3, #8]
    cc44:	str	r1, [r3, #12]
    cc46:	ldrd	r1, r2, [r5, #72]	; 0x48
    cc4a:	str	r1, [r3, #16]
    cc4c:	str	r2, [r3, #20]
    cc4e:	ldrd	r1, r2, [r5, #80]	; 0x50
    cc52:	str	r1, [r3, #24]
    cc54:	str	r2, [r3, #28]
    cc56:	ldrd	r1, r2, [r5, #88]	; 0x58
    cc5a:	str	r1, [r3, #32]
    cc5c:	str	r2, [r3, #36]	; 0x24
    cc5e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    cc62:	b.n	cc06 <repair_qgroups@@Base+0x15a>
    cc64:	add	r7, sp, #48	; 0x30
    cc66:	mov.w	r9, #1
    cc6a:	mov	r0, r7
    cc6c:	bl	17df0 <btrfs_init_path@@Base>
    cc70:	movs	r3, #0
    cc72:	movs	r2, #240	; 0xf0
    cc74:	strd	r3, r3, [sp, #28]
    cc78:	strb.w	r2, [sp, #36]	; 0x24
    cc7c:	mov	r1, r8
    cc7e:	strb.w	r3, [sp, #37]	; 0x25
    cc82:	add	r2, sp, #28
    cc84:	strb.w	r3, [sp, #38]	; 0x26
    cc88:	mov	r0, r5
    cc8a:	strb.w	r3, [sp, #39]	; 0x27
    cc8e:	strb.w	r3, [sp, #40]	; 0x28
    cc92:	strb.w	r3, [sp, #41]	; 0x29
    cc96:	strb.w	r3, [sp, #42]	; 0x2a
    cc9a:	strb.w	r3, [sp, #43]	; 0x2b
    cc9e:	strb.w	r3, [sp, #44]	; 0x2c
    cca2:	strd	r3, r9, [sp]
    cca6:	mov	r3, r7
    cca8:	bl	1a1e4 <btrfs_search_slot@@Base>
    ccac:	mov	r4, r0
    ccae:	cbz	r0, ccd0 <repair_qgroups@@Base+0x224>
    ccb0:	ldr	r0, [pc, #152]	; (cd4c <repair_qgroups@@Base+0x2a0>)
    ccb2:	add	r0, pc
    ccb4:	bl	17424 <__btrfs_error@@Base>
    ccb8:	cmp	r4, #0
    ccba:	it	gt
    ccbc:	mvngt.w	r4, #1
    ccc0:	mov	r1, r8
    ccc2:	mov	r0, r5
    ccc4:	bl	2b1a4 <btrfs_commit_transaction@@Base>
    ccc8:	mov	r0, r7
    ccca:	bl	17e00 <btrfs_release_path@@Base>
    ccce:	b.n	cb4e <repair_qgroups@@Base+0xa2>
    ccd0:	ldr	r0, [sp, #48]	; 0x30
    ccd2:	movs	r1, #25
    ccd4:	ldr	r2, [sp, #80]	; 0x50
    ccd6:	add.w	r3, r0, #96	; 0x60
    ccda:	mla	r2, r1, r2, r3
    ccde:	ldr.w	r2, [r2, #118]	; 0x76
    cce2:	adds	r2, #101	; 0x65
    cce4:	add	r3, r2
    cce6:	strb.w	r9, [r3, #16]
    ccea:	strb	r4, [r3, #17]
    ccec:	strb	r4, [r3, #18]
    ccee:	strb	r4, [r3, #19]
    ccf0:	strb	r4, [r3, #20]
    ccf2:	strb	r4, [r3, #21]
    ccf4:	strb	r4, [r3, #22]
    ccf6:	strb	r4, [r3, #23]
    ccf8:	strb	r4, [r3, #24]
    ccfa:	strb	r4, [r3, #25]
    ccfc:	strb	r4, [r3, #26]
    ccfe:	strb	r4, [r3, #27]
    cd00:	strb	r4, [r3, #28]
    cd02:	strb	r4, [r3, #29]
    cd04:	strb	r4, [r3, #30]
    cd06:	strb	r4, [r3, #31]
    cd08:	ldrd	r1, r2, [r5, #8]
    cd0c:	str	r1, [r3, #8]
    cd0e:	str	r2, [r3, #12]
    cd10:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    cd14:	b.n	ccc0 <repair_qgroups@@Base+0x214>
    cd16:	mov	r0, r4
    cd18:	add	sp, #124	; 0x7c
    cd1a:	vpop	{d8}
    cd1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd22:	nop
    cd24:	strh	r6, [r1, #22]
    cd26:	movs	r5, r0
    cd28:	lsls	r4, r4, #8
    cd2a:	movs	r0, r0
    cd2c:	strh	r0, [r1, #22]
    cd2e:	movs	r5, r0
    cd30:	lsls	r4, r0, #9
    cd32:	movs	r0, r0
    cd34:	strh	r0, [r5, #20]
    cd36:	movs	r5, r0
    cd38:	strh	r0, [r2, #46]	; 0x2e
    cd3a:	movs	r5, r0
    cd3c:	bvc.n	cdbe <repair_qgroups@@Base+0x312>
    cd3e:	movs	r2, r0
    cd40:	bvc.n	cdd4 <repair_qgroups@@Base+0x328>
    cd42:	movs	r2, r0
    cd44:	str	r7, [sp, #128]	; 0x80
    cd46:	movs	r5, r0
    cd48:	bvc.n	cde8 <repair_qgroups@@Base+0x33c>
    cd4a:	movs	r2, r0
    cd4c:	bpl.n	cd24 <repair_qgroups@@Base+0x278>
    cd4e:	movs	r2, r0
    cd50:	push	{r4, lr}
    cd52:	cbnz	r0, cd56 <repair_qgroups@@Base+0x2aa>
    cd54:	pop	{r4, pc}
    cd56:	ldr	r4, [r0, #16]
    cd58:	blx	85dc <free@plt+0x4>
    cd5c:	mov	r0, r4
    cd5e:	b.n	cd52 <repair_qgroups@@Base+0x2a6>
    cd60:	ldr	r2, [pc, #92]	; (cdc0 <repair_qgroups@@Base+0x314>)
    cd62:	ldr	r3, [pc, #96]	; (cdc4 <repair_qgroups@@Base+0x318>)
    cd64:	add	r2, pc
    cd66:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    cd6a:	mov	r5, r0
    cd6c:	ldr	r3, [r2, r3]
    cd6e:	mov	r8, sp
    cd70:	movs	r6, #0
    cd72:	movs	r7, #0
    cd74:	ldr	r3, [r3, #0]
    cd76:	str	r3, [sp, #4]
    cd78:	mov.w	r3, #0
    cd7c:	movs	r3, #0
    cd7e:	str	r3, [sp, #0]
    cd80:	mov	r1, r8
    cd82:	mov	r0, r5
    cd84:	bl	b3fc <ulist_next@@Base>
    cd88:	mov	r4, r0
    cd8a:	cbnz	r0, cda6 <repair_qgroups@@Base+0x2fa>
    cd8c:	mov	r0, r5
    cd8e:	bl	b210 <ulist_free@@Base>
    cd92:	ldr	r2, [pc, #52]	; (cdc8 <repair_qgroups@@Base+0x31c>)
    cd94:	ldr	r3, [pc, #44]	; (cdc4 <repair_qgroups@@Base+0x318>)
    cd96:	add	r2, pc
    cd98:	ldr	r3, [r2, r3]
    cd9a:	ldr	r2, [r3, #0]
    cd9c:	ldr	r3, [sp, #4]
    cd9e:	eors	r2, r3
    cda0:	beq.n	cdba <repair_qgroups@@Base+0x30e>
    cda2:	blx	86b8 <__stack_chk_fail@plt>
    cda6:	ldrd	r0, r1, [r4, #8]
    cdaa:	orrs.w	r3, r0, r1
    cdae:	beq.n	cd80 <repair_qgroups@@Base+0x2d4>
    cdb0:	bl	cd50 <repair_qgroups@@Base+0x2a4>
    cdb4:	strd	r6, r7, [r4, #8]
    cdb8:	b.n	cd80 <repair_qgroups@@Base+0x2d4>
    cdba:	add	sp, #8
    cdbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    cdc0:	strh	r4, [r4, #0]
    cdc2:	movs	r5, r0
    cdc4:	lsls	r4, r4, #8
    cdc6:	movs	r0, r0
    cdc8:	ldrb	r2, [r6, #31]
    cdca:	movs	r5, r0
    cdcc:	push	{r4, lr}
    cdce:	mov	r4, r1
    cdd0:	ldr	r1, [pc, #84]	; (ce28 <repair_qgroups@@Base+0x37c>)
    cdd2:	sub	sp, #24
    cdd4:	ldr	r3, [pc, #84]	; (ce2c <repair_qgroups@@Base+0x380>)
    cdd6:	add	r1, pc
    cdd8:	ldr	r3, [r1, r3]
    cdda:	mov	r1, sp
    cddc:	ldr	r3, [r3, #0]
    cdde:	str	r3, [sp, #20]
    cde0:	mov.w	r3, #0
    cde4:	movs	r3, #25
    cde6:	muls	r2, r3
    cde8:	movs	r3, #17
    cdea:	adds	r2, #101	; 0x65
    cdec:	bl	172c2 <read_extent_buffer@@Base>
    cdf0:	ldr.w	r3, [sp, #13]
    cdf4:	ldr.w	r2, [sp, #9]
    cdf8:	str.w	r3, [r4, #13]
    cdfc:	ldrb.w	r3, [sp, #8]
    ce00:	str.w	r2, [r4, #9]
    ce04:	ldr	r2, [pc, #40]	; (ce30 <repair_qgroups@@Base+0x384>)
    ce06:	strb	r3, [r4, #8]
    ce08:	ldr	r3, [sp, #0]
    ce0a:	add	r2, pc
    ce0c:	str	r3, [r4, #0]
    ce0e:	ldr	r3, [sp, #4]
    ce10:	str	r3, [r4, #4]
    ce12:	ldr	r3, [pc, #24]	; (ce2c <repair_qgroups@@Base+0x380>)
    ce14:	ldr	r3, [r2, r3]
    ce16:	ldr	r2, [r3, #0]
    ce18:	ldr	r3, [sp, #20]
    ce1a:	eors	r2, r3
    ce1c:	beq.n	ce22 <repair_qgroups@@Base+0x376>
    ce1e:	blx	86b8 <__stack_chk_fail@plt>
    ce22:	add	sp, #24
    ce24:	pop	{r4, pc}
    ce26:	nop
    ce28:	ldrb	r2, [r6, #30]
    ce2a:	movs	r5, r0
    ce2c:	lsls	r4, r4, #8
    ce2e:	movs	r0, r0
    ce30:	ldrb	r6, [r7, #29]
    ce32:	movs	r5, r0
    ce34:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce38:	adds	r1, #96	; 0x60
    ce3a:	add	r2, r1
    ce3c:	ldrd	r8, r9, [sp, #48]	; 0x30
    ce40:	ldr.w	fp, [sp, #56]	; 0x38
    ce44:	mov	sl, r0
    ce46:	ldrb	r3, [r2, #16]
    ce48:	cmp	r3, #0
    ce4a:	bne.n	cec4 <repair_qgroups@@Base+0x418>
    ce4c:	ldrb	r3, [r2, #17]
    ce4e:	cmp	r3, #0
    ce50:	bne.n	cec4 <repair_qgroups@@Base+0x418>
    ce52:	ldrh	r3, [r2, #18]
    ce54:	cbnz	r3, cec4 <repair_qgroups@@Base+0x418>
    ce56:	mov	r3, r2
    ce58:	ldr.w	r1, [r3, #37]!
    ce5c:	ldr	r3, [r3, #4]
    ce5e:	str	r1, [sp, #0]
    ce60:	str	r3, [sp, #4]
    ce62:	ldrd	r4, r5, [sp]
    ce66:	ldr.w	r3, [r2, #45]!
    ce6a:	cmp	r9, r5
    ce6c:	it	eq
    ce6e:	cmpeq	r8, r4
    ce70:	ldr	r1, [r2, #4]
    ce72:	bcc.n	ceca <repair_qgroups@@Base+0x41e>
    ce74:	ldr	r2, [sp, #0]
    ce76:	adds	r6, r3, r2
    ce78:	ldr	r3, [sp, #4]
    ce7a:	adc.w	r7, r1, r3
    ce7e:	cmp	r9, r7
    ce80:	it	eq
    ce82:	cmpeq	r8, r6
    ce84:	bcs.n	ceca <repair_qgroups@@Base+0x41e>
    ce86:	ldr	r3, [sp, #4]
    ce88:	subs.w	r4, r8, r2
    ce8c:	sbc.w	r5, r9, r3
    ce90:	movs	r0, #24
    ce92:	blx	8820 <malloc@plt+0x4>
    ce96:	cbz	r0, cece <repair_qgroups@@Base+0x422>
    ce98:	ldr.w	r3, [fp]
    ce9c:	str	r3, [r0, #16]
    ce9e:	ldrd	r2, r3, [sl]
    cea2:	strd	r2, r3, [r0]
    cea6:	ldr.w	r3, [sl, #9]
    ceaa:	ldr.w	r2, [sl, #13]
    ceae:	adds	r3, r3, r4
    ceb0:	str.w	r0, [fp]
    ceb4:	adc.w	r2, r5, r2
    ceb8:	strd	r3, r2, [r0, #8]
    cebc:	movs	r0, #0
    cebe:	add	sp, #12
    cec0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cec4:	movs	r4, #0
    cec6:	mov	r5, r4
    cec8:	b.n	ce90 <repair_qgroups@@Base+0x3e4>
    ceca:	movs	r0, #1
    cecc:	b.n	cebe <repair_qgroups@@Base+0x412>
    cece:	mvn.w	r0, #11
    ced2:	b.n	cebe <repair_qgroups@@Base+0x412>
    ced4:	ldr	r2, [pc, #60]	; (cf14 <repair_qgroups@@Base+0x468>)
    ced6:	movs	r1, #16
    ced8:	ldr	r3, [pc, #60]	; (cf18 <repair_qgroups@@Base+0x46c>)
    ceda:	push	{r4, lr}
    cedc:	add	r2, pc
    cede:	sub	sp, #72	; 0x48
    cee0:	add	r4, sp, #4
    cee2:	ldr	r3, [r2, r3]
    cee4:	mov	r0, r4
    cee6:	ldr	r3, [r3, #0]
    cee8:	str	r3, [sp, #68]	; 0x44
    ceea:	mov.w	r3, #0
    ceee:	blx	886c <backtrace@plt>
    cef2:	movs	r2, #2
    cef4:	mov	r1, r0
    cef6:	mov	r0, r4
    cef8:	blx	8b7c <backtrace_symbols_fd@plt>
    cefc:	ldr	r2, [pc, #28]	; (cf1c <repair_qgroups@@Base+0x470>)
    cefe:	ldr	r3, [pc, #24]	; (cf18 <repair_qgroups@@Base+0x46c>)
    cf00:	add	r2, pc
    cf02:	ldr	r3, [r2, r3]
    cf04:	ldr	r2, [r3, #0]
    cf06:	ldr	r3, [sp, #68]	; 0x44
    cf08:	eors	r2, r3
    cf0a:	beq.n	cf10 <repair_qgroups@@Base+0x464>
    cf0c:	blx	86b8 <__stack_chk_fail@plt>
    cf10:	add	sp, #72	; 0x48
    cf12:	pop	{r4, pc}
    cf14:	ldrb	r4, [r5, #26]
    cf16:	movs	r5, r0
    cf18:	lsls	r4, r4, #8
    cf1a:	movs	r0, r0
    cf1c:	ldrb	r0, [r1, #26]
    cf1e:	movs	r5, r0
    cf20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    cf24:	mov	r8, r0
    cf26:	movs	r0, #64	; 0x40
    cf28:	ldr	r5, [sp, #32]
    cf2a:	ldrd	r6, r7, [sp, #40]	; 0x28
    cf2e:	mov	sl, r2
    cf30:	mov	r9, r3
    cf32:	blx	8820 <malloc@plt+0x4>
    cf36:	mov	r4, r0
    cf38:	cbz	r0, cf98 <repair_qgroups@@Base+0x4ec>
    cf3a:	strd	sl, r9, [r0, #8]
    cf3e:	adds	r0, #16
    cf40:	cbz	r5, cf7c <repair_qgroups@@Base+0x4d0>
    cf42:	mov	ip, r0
    cf44:	ldmia	r5!, {r0, r1, r2, r3}
    cf46:	stmia.w	ip!, {r0, r1, r2, r3}
    cf4a:	ldr	r3, [r5, #0]
    cf4c:	strb.w	r3, [ip]
    cf50:	ldr	r3, [sp, #36]	; 0x24
    cf52:	movs	r1, #0
    cf54:	mov	r0, r1
    cf56:	str	r1, [r4, #44]	; 0x2c
    cf58:	strd	r6, r7, [r4, #48]	; 0x30
    cf5c:	str	r3, [r4, #36]	; 0x24
    cf5e:	ldr	r3, [sp, #56]	; 0x38
    cf60:	str	r3, [r4, #40]	; 0x28
    cf62:	ldrd	r2, r3, [sp, #48]	; 0x30
    cf66:	strd	r2, r3, [r4, #56]	; 0x38
    cf6a:	ldr.w	r3, [r8, #4]
    cf6e:	str.w	r4, [r8, #4]
    cf72:	strd	r8, r3, [r4]
    cf76:	str	r4, [r3, #0]
    cf78:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    cf7c:	orrs.w	r3, r6, r7
    cf80:	mov.w	r2, #17
    cf84:	mov	r1, r5
    cf86:	beq.n	cf8e <repair_qgroups@@Base+0x4e2>
    cf88:	blx	8978 <memset@plt+0x4>
    cf8c:	b.n	cf50 <repair_qgroups@@Base+0x4a4>
    cf8e:	blx	8978 <memset@plt+0x4>
    cf92:	add.w	r8, r8, #8
    cf96:	b.n	cf50 <repair_qgroups@@Base+0x4a4>
    cf98:	mvn.w	r0, #11
    cf9c:	b.n	cf78 <repair_qgroups@@Base+0x4cc>
    cf9e:	push	{r0, r1, r2, r3, r4, lr}
    cfa0:	ldr	r4, [pc, #36]	; (cfc8 <repair_qgroups@@Base+0x51c>)
    cfa2:	ldr	r5, [pc, #40]	; (cfcc <repair_qgroups@@Base+0x520>)
    cfa4:	add	r4, pc
    cfa6:	ldr	r4, [r4, r5]
    cfa8:	ldr	r5, [sp, #24]
    cfaa:	strd	r3, r2, [sp]
    cfae:	mov	r3, r1
    cfb0:	ldr	r2, [pc, #28]	; (cfd0 <repair_qgroups@@Base+0x524>)
    cfb2:	movs	r1, #1
    cfb4:	strd	r0, r5, [sp, #8]
    cfb8:	add	r2, pc
    cfba:	ldr	r0, [r4, #0]
    cfbc:	blx	8a14 <__fprintf_chk@plt+0x4>
    cfc0:	bl	ced4 <repair_qgroups@@Base+0x428>
    cfc4:	blx	8b34 <abort@plt>
    cfc8:	ldrb	r4, [r4, #23]
    cfca:	movs	r5, r0
    cfcc:	lsls	r4, r6, #8
    cfce:	movs	r0, r0
    cfd0:	stmia	r7!, {r1, r3, r5, r6, r7}
    cfd2:	movs	r2, r0
    cfd4:	push	{r0, r1, r2, lr}
    cfd6:	movs	r3, #1
    cfd8:	ldr	r2, [pc, #20]	; (cff0 <repair_qgroups@@Base+0x544>)
    cfda:	ldr	r1, [pc, #24]	; (cff4 <repair_qgroups@@Base+0x548>)
    cfdc:	ldr	r0, [pc, #24]	; (cff8 <repair_qgroups@@Base+0x54c>)
    cfde:	add	r2, pc
    cfe0:	str	r3, [sp, #0]
    cfe2:	add	r1, pc
    cfe4:	add	r0, pc
    cfe6:	movw	r3, #1818	; 0x71a
    cfea:	bl	cf9e <repair_qgroups@@Base+0x4f2>
    cfee:	nop
    cff0:	bmi.n	cf2a <repair_qgroups@@Base+0x47e>
    cff2:	movs	r2, r0
    cff4:	ldmia	r7, {r1, r4, r5, r7}
    cff6:	movs	r2, r0
    cff8:	lsls	r5, r5, #28
    cffa:	movs	r3, r0
    cffc:	push	{r0, r1, r2, r3, r4, lr}
    cffe:	ldr	r3, [pc, #40]	; (d028 <repair_qgroups@@Base+0x57c>)
    d000:	ldr	r4, [pc, #40]	; (d02c <repair_qgroups@@Base+0x580>)
    d002:	add	r3, pc
    d004:	ldr	r4, [r3, r4]
    d006:	movs	r3, #0
    d008:	strd	r2, r1, [sp]
    d00c:	movs	r1, #1
    d00e:	strd	r0, r3, [sp, #8]
    d012:	ldr	r2, [pc, #28]	; (d030 <repair_qgroups@@Base+0x584>)
    d014:	ldr	r3, [pc, #28]	; (d034 <repair_qgroups@@Base+0x588>)
    d016:	add	r2, pc
    d018:	ldr	r0, [r4, #0]
    d01a:	add	r3, pc
    d01c:	blx	8a14 <__fprintf_chk@plt+0x4>
    d020:	bl	ced4 <repair_qgroups@@Base+0x428>
    d024:	blx	8b34 <abort@plt>
    d028:	ldrb	r6, [r0, #22]
    d02a:	movs	r5, r0
    d02c:	lsls	r4, r6, #8
    d02e:	movs	r0, r0
    d030:	ldmia	r0, {r0, r3, r4, r5, r7}
    d032:	movs	r2, r0
    d034:	bcc.n	d076 <repair_qgroups@@Base+0x5ca>
    d036:	movs	r2, r0
    d038:	push	{r0, r1, r2, lr}
    d03a:	cbz	r3, d04c <repair_qgroups@@Base+0x5a0>
    d03c:	movs	r3, #1
    d03e:	str	r3, [sp, #0]
    d040:	mov	r3, r2
    d042:	mov	r2, r1
    d044:	ldr	r1, [pc, #12]	; (d054 <repair_qgroups@@Base+0x5a8>)
    d046:	add	r1, pc
    d048:	bl	cf9e <repair_qgroups@@Base+0x4f2>
    d04c:	add	sp, #12
    d04e:	ldr.w	pc, [sp], #4
    d052:	nop
    d054:	bcs.n	d03e <repair_qgroups@@Base+0x592>
    d056:	movs	r2, r0
    d058:	push	{r4, r5, lr}
    d05a:	sub	sp, #20
    d05c:	ldr	r4, [pc, #36]	; (d084 <repair_qgroups@@Base+0x5d8>)
    d05e:	ldr	r5, [pc, #40]	; (d088 <repair_qgroups@@Base+0x5dc>)
    d060:	add	r4, pc
    d062:	ldr	r4, [r4, r5]
    d064:	strd	r2, r1, [sp]
    d068:	movs	r1, #1
    d06a:	strd	r0, r3, [sp, #8]
    d06e:	ldr	r2, [pc, #28]	; (d08c <repair_qgroups@@Base+0x5e0>)
    d070:	ldr	r3, [pc, #28]	; (d090 <repair_qgroups@@Base+0x5e4>)
    d072:	ldr	r0, [r4, #0]
    d074:	add	r2, pc
    d076:	add	r3, pc
    d078:	blx	8a14 <__fprintf_chk@plt+0x4>
    d07c:	add	sp, #20
    d07e:	ldmia.w	sp!, {r4, r5, lr}
    d082:	b.n	ced4 <repair_qgroups@@Base+0x428>
    d084:	ldrb	r0, [r5, #20]
    d086:	movs	r5, r0
    d088:	lsls	r4, r6, #8
    d08a:	movs	r0, r0
    d08c:	stmia	r6!, {r3, r4, r5, r6, r7}
    d08e:	movs	r2, r0
    d090:	bcs.n	d01a <repair_qgroups@@Base+0x56e>
    d092:	movs	r2, r0
    d094:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    d098:	mov	r5, r0
    d09a:	ldr	r4, [r0, #0]
    d09c:	mov	r9, r1
    d09e:	cmp	r4, r5
    d0a0:	bne.n	d0a6 <repair_qgroups@@Base+0x5fa>
    d0a2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    d0a6:	ldr	r0, [r4, #0]
    d0a8:	ldr.w	r8, [r0]
    d0ac:	cmp	r0, r5
    d0ae:	bne.n	d0b4 <repair_qgroups@@Base+0x608>
    d0b0:	ldr	r4, [r4, #0]
    d0b2:	b.n	d09e <repair_qgroups@@Base+0x5f2>
    d0b4:	cmp.w	r9, #1
    d0b8:	bne.n	d134 <repair_qgroups@@Base+0x688>
    d0ba:	ldr	r2, [r4, #36]	; 0x24
    d0bc:	ldr	r3, [r0, #36]	; 0x24
    d0be:	cmp	r2, r3
    d0c0:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d0c2:	ldrd	r6, r7, [r4, #8]
    d0c6:	ldrd	r2, r3, [r0, #8]
    d0ca:	cmp	r7, r3
    d0cc:	it	eq
    d0ce:	cmpeq	r6, r2
    d0d0:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d0d2:	ldrb	r2, [r4, #24]
    d0d4:	ldrb	r3, [r0, #24]
    d0d6:	cmp	r2, r3
    d0d8:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d0da:	ldrd	r6, r7, [r4, #16]
    d0de:	ldrd	r2, r3, [r0, #16]
    d0e2:	cmp	r7, r3
    d0e4:	it	eq
    d0e6:	cmpeq	r6, r2
    d0e8:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d0ea:	ldr.w	r7, [r4, #29]
    d0ee:	ldr.w	r3, [r0, #29]
    d0f2:	ldr.w	r6, [r4, #25]
    d0f6:	ldr.w	r2, [r0, #25]
    d0fa:	cmp	r7, r3
    d0fc:	it	eq
    d0fe:	cmpeq	r6, r2
    d100:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d102:	ldrd	r6, r7, [r4, #48]	; 0x30
    d106:	ldrd	r2, r3, [r0, #48]	; 0x30
    d10a:	cmp	r7, r3
    d10c:	it	eq
    d10e:	cmpeq	r6, r2
    d110:	bne.n	d148 <repair_qgroups@@Base+0x69c>
    d112:	ldr	r3, [r4, #44]	; 0x2c
    d114:	cbz	r3, d154 <repair_qgroups@@Base+0x6a8>
    d116:	ldr	r2, [r3, #16]
    d118:	cbnz	r2, d150 <repair_qgroups@@Base+0x6a4>
    d11a:	ldr	r2, [r0, #44]	; 0x2c
    d11c:	str	r2, [r3, #16]
    d11e:	ldr	r2, [r0, #40]	; 0x28
    d120:	ldr	r3, [r4, #40]	; 0x28
    d122:	add	r3, r2
    d124:	str	r3, [r4, #40]	; 0x28
    d126:	ldrd	r2, r3, [r0]
    d12a:	str	r3, [r2, #4]
    d12c:	str	r2, [r3, #0]
    d12e:	blx	85dc <free@plt+0x4>
    d132:	b.n	d148 <repair_qgroups@@Base+0x69c>
    d134:	ldrd	r6, r7, [r4, #48]	; 0x30
    d138:	orrs.w	r3, r6, r7
    d13c:	beq.n	d148 <repair_qgroups@@Base+0x69c>
    d13e:	ldrd	r2, r3, [r0, #48]	; 0x30
    d142:	orrs.w	r1, r2, r3
    d146:	bne.n	d10a <repair_qgroups@@Base+0x65e>
    d148:	mov	r0, r8
    d14a:	ldr.w	r8, [r8]
    d14e:	b.n	d0ac <repair_qgroups@@Base+0x600>
    d150:	mov	r3, r2
    d152:	b.n	d114 <repair_qgroups@@Base+0x668>
    d154:	ldr	r3, [r0, #44]	; 0x2c
    d156:	str	r3, [r4, #44]	; 0x2c
    d158:	b.n	d11e <repair_qgroups@@Base+0x672>
    d15a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d15e:	movs	r6, #0
    d160:	vpush	{d8}
    d164:	mov	r5, r0
    d166:	sub	sp, #204	; 0xcc
    d168:	strd	r2, r3, [sp, #32]
    d16c:	ldr	r3, [sp, #248]	; 0xf8
    d16e:	ldr.w	r2, [pc, #2924]	; dcdc <repair_qgroups@@Base+0x1230>
    d172:	str	r1, [sp, #44]	; 0x2c
    d174:	vmov	s17, r3
    d178:	ldr	r3, [sp, #252]	; 0xfc
    d17a:	add	r2, pc
    d17c:	str	r3, [sp, #76]	; 0x4c
    d17e:	ldr	r3, [sp, #256]	; 0x100
    d180:	str	r3, [sp, #72]	; 0x48
    d182:	ldr.w	r3, [pc, #2908]	; dce0 <repair_qgroups@@Base+0x1234>
    d186:	ldr	r3, [r2, r3]
    d188:	mov.w	r2, #4294967295	; 0xffffffff
    d18c:	ldr	r3, [r3, #0]
    d18e:	str	r3, [sp, #196]	; 0xc4
    d190:	mov.w	r3, #0
    d194:	add	r3, sp, #172	; 0xac
    d196:	strd	r3, r3, [sp, #172]	; 0xac
    d19a:	add	r3, sp, #180	; 0xb4
    d19c:	strd	r3, r3, [sp, #180]	; 0xb4
    d1a0:	add	r3, sp, #188	; 0xbc
    d1a2:	strd	r3, r3, [sp, #188]	; 0xbc
    d1a6:	ldrd	r3, r4, [sp, #32]
    d1aa:	strb.w	r2, [sp, #121]	; 0x79
    d1ae:	strb.w	r2, [sp, #122]	; 0x7a
    d1b2:	strd	r3, r4, [sp, #112]	; 0x70
    d1b6:	ldr.w	r3, [r1, #308]	; 0x134
    d1ba:	strb.w	r2, [sp, #123]	; 0x7b
    d1be:	strb.w	r2, [sp, #124]	; 0x7c
    d1c2:	strb.w	r2, [sp, #125]	; 0x7d
    d1c6:	strb.w	r2, [sp, #126]	; 0x7e
    d1ca:	strb.w	r2, [sp, #127]	; 0x7f
    d1ce:	strb.w	r2, [sp, #128]	; 0x80
    d1d2:	str	r6, [sp, #92]	; 0x5c
    d1d4:	ldr.w	r1, [r3, #188]	; 0xbc
    d1d8:	mov	r3, r6
    d1da:	and.w	r2, r1, #256	; 0x100
    d1de:	orrs	r3, r2
    d1e0:	ite	ne
    d1e2:	movne	r3, #169	; 0xa9
    d1e4:	moveq	r3, #168	; 0xa8
    d1e6:	strb.w	r3, [sp, #120]	; 0x78
    d1ea:	bl	17df8 <btrfs_alloc_path@@Base>
    d1ee:	mov	r4, r0
    d1f0:	cmp	r0, #0
    d1f2:	beq.w	dcc0 <repair_qgroups@@Base+0x1214>
    d1f6:	ldr	r1, [sp, #44]	; 0x2c
    d1f8:	add	r7, sp, #112	; 0x70
    d1fa:	mov	r3, r0
    d1fc:	strd	r6, r6, [sp]
    d200:	mov	r2, r7
    d202:	mov	r0, r5
    d204:	ldr	r1, [r1, #24]
    d206:	bl	1a1e4 <btrfs_search_slot@@Base>
    d20a:	subs.w	r8, r0, #0
    d20e:	blt.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d212:	ldr.w	r5, [pc, #2768]	; dce4 <repair_qgroups@@Base+0x1238>
    d216:	movw	r2, #762	; 0x2fa
    d21a:	ldr.w	r0, [pc, #2764]	; dce8 <repair_qgroups@@Base+0x123c>
    d21e:	it	eq
    d220:	moveq	r3, #1
    d222:	add	r5, pc
    d224:	it	ne
    d226:	movne	r3, r6
    d228:	add.w	r1, r5, #29
    d22c:	add	r0, pc
    d22e:	bl	d038 <repair_qgroups@@Base+0x58c>
    d232:	ldr	r2, [r4, #32]
    d234:	cmp	r2, #0
    d236:	beq.w	d696 <repair_qgroups@@Base+0xbea>
    d23a:	subs	r2, #1
    d23c:	ldr	r0, [r4, #0]
    d23e:	mov	r1, r7
    d240:	str	r2, [r4, #32]
    d242:	bl	cdcc <repair_qgroups@@Base+0x320>
    d246:	ldrd	r2, r3, [sp, #112]	; 0x70
    d24a:	ldrd	r0, r1, [sp, #32]
    d24e:	cmp	r1, r3
    d250:	it	eq
    d252:	cmpeq	r0, r2
    d254:	bne.w	d696 <repair_qgroups@@Base+0xbea>
    d258:	ldrb.w	r3, [sp, #120]	; 0x78
    d25c:	adds	r3, #88	; 0x58
    d25e:	uxtb	r3, r3
    d260:	cmp	r3, #1
    d262:	bhi.w	d696 <repair_qgroups@@Base+0xbea>
    d266:	ldr.w	sl, [r4]
    d26a:	movs	r3, #25
    d26c:	ldr.w	r9, [r4, #32]
    d270:	adds	r5, #47	; 0x2f
    d272:	add.w	fp, sl, #96	; 0x60
    d276:	ldr.w	r0, [pc, #2676]	; dcec <repair_qgroups@@Base+0x1240>
    d27a:	movw	r2, #559	; 0x22f
    d27e:	mov	r1, r5
    d280:	mla	r3, r3, r9, fp
    d284:	add	r0, pc
    d286:	add.w	r7, r3, #101	; 0x65
    d28a:	ldr.w	r3, [r3, #122]	; 0x7a
    d28e:	cmp	r3, #23
    d290:	str	r3, [sp, #48]	; 0x30
    d292:	ite	hi
    d294:	movhi	r3, #0
    d296:	movls	r3, #1
    d298:	bl	d038 <repair_qgroups@@Base+0x58c>
    d29c:	ldr.w	r8, [r7, #17]
    d2a0:	mov	r0, sl
    d2a2:	add	r1, sp, #152	; 0x98
    d2a4:	add.w	r3, r8, #101	; 0x65
    d2a8:	str	r3, [sp, #64]	; 0x40
    d2aa:	add.w	r2, fp, r3
    d2ae:	add.w	sl, r8, #125	; 0x7d
    d2b2:	ldr	r3, [r2, #0]
    d2b4:	ldr	r7, [r2, #16]
    d2b6:	str	r3, [sp, #56]	; 0x38
    d2b8:	ldr	r3, [r2, #4]
    d2ba:	mov	r2, r9
    d2bc:	str	r3, [sp, #60]	; 0x3c
    d2be:	bl	cdcc <repair_qgroups@@Base+0x320>
    d2c2:	ldr	r3, [sp, #48]	; 0x30
    d2c4:	mov	r2, r3
    d2c6:	ldr	r3, [sp, #64]	; 0x40
    d2c8:	add.w	r9, r2, r3
    d2cc:	ldrb.w	r3, [sp, #160]	; 0xa0
    d2d0:	cmp	r3, #168	; 0xa8
    d2d2:	bne.n	d328 <repair_qgroups@@Base+0x87c>
    d2d4:	and.w	r2, r7, #2
    d2d8:	mov	r3, r6
    d2da:	orrs	r3, r2
    d2dc:	beq.n	d332 <repair_qgroups@@Base+0x886>
    d2de:	add	sl, fp
    d2e0:	ldr.w	r0, [pc, #2572]	; dcf0 <repair_qgroups@@Base+0x1244>
    d2e4:	mov.w	r2, #576	; 0x240
    d2e8:	mov	r1, r5
    d2ea:	ldrb.w	r6, [sl, #17]
    d2ee:	add.w	sl, r8, #143	; 0x8f
    d2f2:	cmp	r9, sl
    d2f4:	add	r0, pc
    d2f6:	ite	cs
    d2f8:	movcs	r3, #0
    d2fa:	movcc	r3, #1
    d2fc:	bl	d038 <repair_qgroups@@Base+0x58c>
    d300:	ldr.w	r5, [pc, #2544]	; dcf4 <repair_qgroups@@Base+0x1248>
    d304:	ldr.w	r7, [pc, #2544]	; dcf8 <repair_qgroups@@Base+0x124c>
    d308:	add	r5, pc
    d30a:	adds	r5, #47	; 0x2f
    d30c:	add	r7, pc
    d30e:	cmp	r9, sl
    d310:	bhi.n	d352 <repair_qgroups@@Base+0x8a6>
    d312:	ldr	r3, [sp, #44]	; 0x2c
    d314:	ldr.w	r5, [pc, #2532]	; dcfc <repair_qgroups@@Base+0x1250>
    d318:	ldr.w	r7, [pc, #2532]	; dd00 <repair_qgroups@@Base+0x1254>
    d31c:	ldr	r3, [r3, #24]
    d31e:	add	r5, pc
    d320:	adds	r5, #65	; 0x41
    d322:	add	r7, pc
    d324:	str	r3, [sp, #48]	; 0x30
    d326:	b.n	d53e <repair_qgroups@@Base+0xa92>
    d328:	cmp	r3, #169	; 0xa9
    d32a:	bne.n	d332 <repair_qgroups@@Base+0x886>
    d32c:	ldr.w	r6, [sp, #161]	; 0xa1
    d330:	b.n	d300 <repair_qgroups@@Base+0x854>
    d332:	ldr.w	r1, [pc, #2512]	; dd04 <repair_qgroups@@Base+0x1258>
    d336:	mvns	r3, r7
    d338:	ldr.w	r0, [pc, #2508]	; dd08 <repair_qgroups@@Base+0x125c>
    d33c:	and.w	r3, r3, #1
    d340:	add	r1, pc
    d342:	mov.w	r2, #580	; 0x244
    d346:	adds	r1, #47	; 0x2f
    d348:	add	r0, pc
    d34a:	bl	d038 <repair_qgroups@@Base+0x58c>
    d34e:	movs	r6, #0
    d350:	b.n	d300 <repair_qgroups@@Base+0x854>
    d352:	add.w	r0, fp, sl
    d356:	ldrb.w	r8, [fp, sl]
    d35a:	mov	r1, r0
    d35c:	ldr.w	r2, [r1, #1]!
    d360:	ldr	r3, [r1, #4]
    d362:	sub.w	r1, r8, #176	; 0xb0
    d366:	cmp	r1, #8
    d368:	bhi.w	d4a0 <repair_qgroups@@Base+0x9f4>
    d36c:	tbb	[pc, r1]
    d370:	ldr	r0, [sp, #300]	; 0x12c
    d372:	ldr	r0, [sp, #392]	; 0x188
    d374:	ldr	r0, [sp, #608]	; 0x260
    d376:	ldr	r0, [sp, #20]
    d378:	movs	r5, r6
    d37a:	movs	r1, #1
    d37c:	str	r1, [sp, #24]
    d37e:	ldrd	r0, r1, [sp, #32]
    d382:	strd	r2, r3, [sp, #8]
    d386:	adds	r3, r6, #1
    d388:	movs	r2, #0
    d38a:	str	r3, [sp, #4]
    d38c:	movs	r3, #0
    d38e:	str	r3, [sp, #0]
    d390:	movs	r3, #0
    d392:	strd	r0, r1, [sp, #16]
    d396:	add	r0, sp, #172	; 0xac
    d398:	bl	cf20 <repair_qgroups@@Base+0x474>
    d39c:	mov	r8, r0
    d39e:	cmp	r0, #0
    d3a0:	beq.w	d4ca <repair_qgroups@@Base+0xa1e>
    d3a4:	mov	r0, r4
    d3a6:	add	r4, sp, #172	; 0xac
    d3a8:	bl	17e26 <btrfs_free_path@@Base>
    d3ac:	ldr	r0, [sp, #172]	; 0xac
    d3ae:	cmp	r0, r4
    d3b0:	bne.w	dcb0 <repair_qgroups@@Base+0x1204>
    d3b4:	cmp.w	r8, #0
    d3b8:	bge.n	d3c0 <repair_qgroups@@Base+0x914>
    d3ba:	ldr	r0, [sp, #92]	; 0x5c
    d3bc:	bl	cd50 <repair_qgroups@@Base+0x2a4>
    d3c0:	ldr.w	r2, [pc, #2376]	; dd0c <repair_qgroups@@Base+0x1260>
    d3c4:	ldr.w	r3, [pc, #2328]	; dce0 <repair_qgroups@@Base+0x1234>
    d3c8:	add	r2, pc
    d3ca:	ldr	r3, [r2, r3]
    d3cc:	ldr	r2, [r3, #0]
    d3ce:	ldr	r3, [sp, #196]	; 0xc4
    d3d0:	eors	r2, r3
    d3d2:	beq.w	dcce <repair_qgroups@@Base+0x1222>
    d3d6:	blx	86b8 <__stack_chk_fail@plt>
    d3da:	ldr.w	r1, [r0, #9]
    d3de:	strd	r2, r3, [sp, #8]
    d3e2:	movs	r3, #0
    d3e4:	movs	r2, #0
    d3e6:	strd	r3, r3, [sp]
    d3ea:	str	r1, [sp, #24]
    d3ec:	movs	r3, #0
    d3ee:	ldrd	r0, r1, [sp, #32]
    d3f2:	strd	r0, r1, [sp, #16]
    d3f6:	add	r0, sp, #172	; 0xac
    d3f8:	bl	cf20 <repair_qgroups@@Base+0x474>
    d3fc:	mov	r8, r0
    d3fe:	cmp	r0, #0
    d400:	bne.n	d3a4 <repair_qgroups@@Base+0x8f8>
    d402:	movs	r3, #13
    d404:	b.n	d46e <repair_qgroups@@Base+0x9c2>
    d406:	mov.w	r1, #4294967295	; 0xffffffff
    d40a:	cmp	r3, r1
    d40c:	mvn.w	r0, #8
    d410:	it	eq
    d412:	cmpeq	r2, r0
    d414:	beq.n	d4ca <repair_qgroups@@Base+0xa1e>
    d416:	movs	r1, #1
    d418:	str	r1, [sp, #24]
    d41a:	ldrd	r0, r1, [sp, #32]
    d41e:	strd	r0, r1, [sp, #16]
    d422:	movs	r1, #0
    d424:	movs	r0, #0
    d426:	strd	r0, r1, [sp, #8]
    d42a:	adds	r1, r6, #1
    d42c:	str	r1, [sp, #4]
    d42e:	movs	r1, #0
    d430:	str	r1, [sp, #0]
    d432:	b.n	d396 <repair_qgroups@@Base+0x8ea>
    d434:	add.w	r3, sl, #1
    d438:	add	r3, fp
    d43a:	ldr	r1, [r3, #8]
    d43c:	ldr	r2, [r3, #12]
    d43e:	ldr.w	ip, [r3, #24]
    d442:	strd	r1, r2, [sp, #132]	; 0x84
    d446:	movs	r2, #108	; 0x6c
    d448:	strb.w	r2, [sp, #140]	; 0x8c
    d44c:	ldr	r1, [r3, #16]
    d44e:	ldr	r2, [r3, #20]
    d450:	str.w	r1, [sp, #141]	; 0x8d
    d454:	str.w	r2, [sp, #145]	; 0x91
    d458:	mvn.w	r2, #8
    d45c:	ldr	r1, [r3, #4]
    d45e:	ldr	r0, [r3, #0]
    d460:	mov.w	r3, #4294967295	; 0xffffffff
    d464:	cmp	r1, r3
    d466:	it	eq
    d468:	cmpeq	r0, r2
    d46a:	bne.n	d472 <repair_qgroups@@Base+0x9c6>
    d46c:	movs	r3, #29
    d46e:	add	sl, r3
    d470:	b.n	d30e <repair_qgroups@@Base+0x862>
    d472:	ldrd	r2, r3, [sp, #32]
    d476:	str.w	ip, [sp, #24]
    d47a:	strd	r2, r3, [sp, #16]
    d47e:	movs	r2, #0
    d480:	movs	r3, #0
    d482:	strd	r2, r3, [sp, #8]
    d486:	movs	r3, #0
    d488:	mov	r2, r0
    d48a:	str	r3, [sp, #4]
    d48c:	add	r0, sp, #172	; 0xac
    d48e:	add	r3, sp, #132	; 0x84
    d490:	str	r3, [sp, #0]
    d492:	mov	r3, r1
    d494:	bl	cf20 <repair_qgroups@@Base+0x474>
    d498:	mov	r8, r0
    d49a:	cmp	r0, #0
    d49c:	beq.n	d46c <repair_qgroups@@Base+0x9c0>
    d49e:	b.n	d3a4 <repair_qgroups@@Base+0x8f8>
    d4a0:	movs	r3, #1
    d4a2:	movw	r2, #630	; 0x276
    d4a6:	mov	r1, r5
    d4a8:	mov	r0, r7
    d4aa:	bl	d058 <repair_qgroups@@Base+0x5ac>
    d4ae:	cmp.w	r8, #176	; 0xb0
    d4b2:	beq.n	d4ca <repair_qgroups@@Base+0xa1e>
    d4b4:	cmp.w	r8, #182	; 0xb6
    d4b8:	beq.n	d4ca <repair_qgroups@@Base+0xa1e>
    d4ba:	cmp.w	r8, #184	; 0xb8
    d4be:	beq.n	d402 <repair_qgroups@@Base+0x956>
    d4c0:	cmp.w	r8, #178	; 0xb2
    d4c4:	beq.n	d46c <repair_qgroups@@Base+0x9c0>
    d4c6:	bl	cfd4 <repair_qgroups@@Base+0x528>
    d4ca:	movs	r3, #9
    d4cc:	b.n	d46e <repair_qgroups@@Base+0x9c2>
    d4ce:	ldr	r3, [sp, #48]	; 0x30
    d4d0:	mov	r1, r4
    d4d2:	strb.w	r9, [r4, #65]	; 0x41
    d4d6:	ldr.w	r0, [r3, #464]	; 0x1d0
    d4da:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    d4de:	subs.w	r8, r0, #0
    d4e2:	blt.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d4e6:	beq.n	d556 <repair_qgroups@@Base+0xaaa>
    d4e8:	b.n	d578 <repair_qgroups@@Base+0xacc>
    d4ea:	ldrb.w	r3, [sp, #160]	; 0xa0
    d4ee:	cmp	r3, #175	; 0xaf
    d4f0:	bls.n	d546 <repair_qgroups@@Base+0xa9a>
    d4f2:	cmp	r3, #184	; 0xb8
    d4f4:	bhi.n	d578 <repair_qgroups@@Base+0xacc>
    d4f6:	subs	r3, #176	; 0xb0
    d4f8:	cmp	r3, #8
    d4fa:	bhi.w	d686 <repair_qgroups@@Base+0xbda>
    d4fe:	tbb	[pc, r3]
    d502:	stmia	r2!, {r4, r5, r6}
    d504:	stmia	r2!, {r0, r1, r3, r7}
    d506:	stmia	r2!, {r1, r6, r7}
    d508:	stmia	r2!, {r0, r2}
    d50a:	lsls	r0, r3, #1
    d50c:	movs	r3, #1
    d50e:	str	r3, [sp, #24]
    d510:	ldrd	r2, r3, [sp, #32]
    d514:	strd	r2, r3, [sp, #16]
    d518:	ldr.w	r3, [sp, #165]	; 0xa5
    d51c:	ldr.w	r2, [sp, #161]	; 0xa1
    d520:	strd	r2, r3, [sp, #8]
    d524:	adds	r3, r6, #1
    d526:	str	r3, [sp, #4]
    d528:	movs	r3, #0
    d52a:	str	r3, [sp, #0]
    d52c:	movs	r2, #0
    d52e:	movs	r3, #0
    d530:	add	r0, sp, #172	; 0xac
    d532:	bl	cf20 <repair_qgroups@@Base+0x474>
    d536:	mov	r8, r0
    d538:	cmp	r0, #0
    d53a:	bne.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d53e:	add.w	sl, sp, #152	; 0x98
    d542:	mov.w	r9, #0
    d546:	ldr	r2, [r4, #0]
    d548:	ldr	r3, [r4, #32]
    d54a:	adds	r3, #1
    d54c:	str	r3, [r4, #32]
    d54e:	ldr.w	r2, [r2, #192]	; 0xc0
    d552:	cmp	r3, r2
    d554:	bcs.n	d4ce <repair_qgroups@@Base+0xa22>
    d556:	ldr.w	fp, [r4, #32]
    d55a:	mov	r1, sl
    d55c:	ldr.w	r8, [r4]
    d560:	mov	r2, fp
    d562:	mov	r0, r8
    d564:	bl	cdcc <repair_qgroups@@Base+0x320>
    d568:	ldrd	r2, r3, [sp, #32]
    d56c:	ldrd	r0, r1, [sp, #152]	; 0x98
    d570:	cmp	r3, r1
    d572:	it	eq
    d574:	cmpeq	r2, r0
    d576:	beq.n	d4ea <repair_qgroups@@Base+0xa3e>
    d578:	mov	r0, r4
    d57a:	ldr.w	r6, [pc, #1940]	; dd10 <repair_qgroups@@Base+0x1264>
    d57e:	bl	17e00 <btrfs_release_path@@Base>
    d582:	ldr.w	fp, [pc, #1936]	; dd14 <repair_qgroups@@Base+0x1268>
    d586:	add	r6, pc
    d588:	adds	r6, #82	; 0x52
    d58a:	add	fp, pc
    d58c:	ldr	r5, [sp, #180]	; 0xb4
    d58e:	add	r3, sp, #180	; 0xb4
    d590:	cmp	r5, r3
    d592:	bne.w	d6a0 <repair_qgroups@@Base+0xbf4>
    d596:	add	r0, sp, #172	; 0xac
    d598:	movs	r1, #1
    d59a:	bl	d094 <repair_qgroups@@Base+0x5e8>
    d59e:	movs	r0, #0
    d5a0:	bl	b1fc <ulist_alloc@@Base>
    d5a4:	mov	r7, r0
    d5a6:	cmp	r0, #0
    d5a8:	bne.w	d874 <repair_qgroups@@Base+0xdc8>
    d5ac:	mvn.w	r8, #11
    d5b0:	b.n	d3a4 <repair_qgroups@@Base+0x8f8>
    d5b2:	add.w	r8, r8, #96	; 0x60
    d5b6:	movs	r2, #25
    d5b8:	mla	r2, r2, fp, r8
    d5bc:	ldr.w	r0, [r2, #118]	; 0x76
    d5c0:	add	r8, r0
    d5c2:	ldr.w	r3, [r8, #101]	; 0x65
    d5c6:	str	r3, [sp, #24]
    d5c8:	ldrd	r2, r3, [sp, #32]
    d5cc:	strd	r2, r3, [sp, #16]
    d5d0:	ldr.w	r3, [sp, #165]	; 0xa5
    d5d4:	ldr.w	r2, [sp, #161]	; 0xa1
    d5d8:	strd	r2, r3, [sp, #8]
    d5dc:	movs	r3, #0
    d5de:	str	r3, [sp, #4]
    d5e0:	b.n	d52a <repair_qgroups@@Base+0xa7e>
    d5e2:	ldr.w	r3, [sp, #165]	; 0xa5
    d5e6:	mov.w	r1, #4294967295	; 0xffffffff
    d5ea:	ldr.w	r2, [sp, #161]	; 0xa1
    d5ee:	mvn.w	r0, #8
    d5f2:	cmp	r3, r1
    d5f4:	it	eq
    d5f6:	cmpeq	r2, r0
    d5f8:	beq.n	d53e <repair_qgroups@@Base+0xa92>
    d5fa:	movs	r1, #1
    d5fc:	str	r1, [sp, #24]
    d5fe:	ldrd	r0, r1, [sp, #32]
    d602:	strd	r0, r1, [sp, #16]
    d606:	movs	r1, #0
    d608:	movs	r0, #0
    d60a:	strd	r0, r1, [sp, #8]
    d60e:	adds	r1, r6, #1
    d610:	str	r1, [sp, #4]
    d612:	movs	r1, #0
    d614:	str	r1, [sp, #0]
    d616:	b.n	d530 <repair_qgroups@@Base+0xa84>
    d618:	add.w	r8, r8, #96	; 0x60
    d61c:	movs	r2, #25
    d61e:	mov.w	r1, #4294967295	; 0xffffffff
    d622:	mla	fp, r2, fp, r8
    d626:	ldr.w	r0, [fp, #118]	; 0x76
    d62a:	adds	r0, #101	; 0x65
    d62c:	add	r8, r0
    d62e:	mvn.w	r0, #8
    d632:	ldr.w	r2, [r8, #8]
    d636:	ldr.w	r3, [r8, #12]
    d63a:	ldr.w	ip, [r8, #24]
    d63e:	strd	r2, r3, [sp, #152]	; 0x98
    d642:	movs	r3, #108	; 0x6c
    d644:	strb.w	r3, [sp, #160]	; 0xa0
    d648:	ldr.w	r2, [r8, #16]
    d64c:	ldr.w	r3, [r8, #20]
    d650:	str.w	r2, [sp, #161]	; 0xa1
    d654:	str.w	r3, [sp, #165]	; 0xa5
    d658:	ldr.w	r3, [r8, #4]
    d65c:	ldr.w	r2, [r8]
    d660:	cmp	r3, r1
    d662:	it	eq
    d664:	cmpeq	r2, r0
    d666:	beq.w	d53e <repair_qgroups@@Base+0xa92>
    d66a:	ldrd	r0, r1, [sp, #32]
    d66e:	str.w	ip, [sp, #24]
    d672:	strd	r0, r1, [sp, #16]
    d676:	movs	r1, #0
    d678:	movs	r0, #0
    d67a:	strd	r0, r1, [sp, #8]
    d67e:	movs	r1, #0
    d680:	str	r1, [sp, #4]
    d682:	add	r1, sp, #152	; 0x98
    d684:	b.n	d614 <repair_qgroups@@Base+0xb68>
    d686:	movs	r3, #1
    d688:	movw	r2, #714	; 0x2ca
    d68c:	mov	r1, r5
    d68e:	mov	r0, r7
    d690:	bl	d058 <repair_qgroups@@Base+0x5ac>
    d694:	b.n	d53e <repair_qgroups@@Base+0xa92>
    d696:	movs	r2, #0
    d698:	movs	r3, #0
    d69a:	strd	r2, r3, [sp, #56]	; 0x38
    d69e:	b.n	d578 <repair_qgroups@@Base+0xacc>
    d6a0:	ldr	r3, [r5, #8]
    d6a2:	cbnz	r3, d6ba <repair_qgroups@@Base+0xc0e>
    d6a4:	ldr.w	r1, [pc, #1648]	; dd18 <repair_qgroups@@Base+0x126c>
    d6a8:	mov.w	r2, #456	; 0x1c8
    d6ac:	ldr.w	r0, [pc, #1644]	; dd1c <repair_qgroups@@Base+0x1270>
    d6b0:	add	r1, pc
    d6b2:	adds	r1, #82	; 0x52
    d6b4:	add	r0, pc
    d6b6:	bl	cffc <repair_qgroups@@Base+0x550>
    d6ba:	ldrd	r8, r9, [r5, #48]	; 0x30
    d6be:	orrs.w	r3, r8, r9
    d6c2:	beq.n	d6d8 <repair_qgroups@@Base+0xc2c>
    d6c4:	ldr.w	r1, [pc, #1624]	; dd20 <repair_qgroups@@Base+0x1274>
    d6c8:	movw	r2, #457	; 0x1c9
    d6cc:	ldr.w	r0, [pc, #1620]	; dd24 <repair_qgroups@@Base+0x1278>
    d6d0:	add	r1, pc
    d6d2:	adds	r1, #82	; 0x52
    d6d4:	add	r0, pc
    d6d6:	b.n	d6b6 <repair_qgroups@@Base+0xc0a>
    d6d8:	ldrb	r3, [r5, #24]
    d6da:	cbz	r3, d6f0 <repair_qgroups@@Base+0xc44>
    d6dc:	ldr.w	r1, [pc, #1608]	; dd28 <repair_qgroups@@Base+0x127c>
    d6e0:	mov.w	r2, #458	; 0x1ca
    d6e4:	ldr.w	r0, [pc, #1604]	; dd2c <repair_qgroups@@Base+0x1280>
    d6e8:	add	r1, pc
    d6ea:	adds	r1, #82	; 0x52
    d6ec:	add	r0, pc
    d6ee:	b.n	d6b6 <repair_qgroups@@Base+0xc0a>
    d6f0:	ldrd	sl, r7, [r5, #56]	; 0x38
    d6f4:	movw	r2, #459	; 0x1cb
    d6f8:	mov	r1, r6
    d6fa:	mov	r0, fp
    d6fc:	orrs.w	r3, sl, r7
    d700:	ite	eq
    d702:	moveq	r3, #1
    d704:	movne	r3, #0
    d706:	bl	d038 <repair_qgroups@@Base+0x58c>
    d70a:	mov	r3, r7
    d70c:	ldr	r0, [sp, #44]	; 0x2c
    d70e:	mov	r2, sl
    d710:	strd	r8, r9, [sp]
    d714:	bl	1d62c <read_tree_block@@Base>
    d718:	mov	r7, r0
    d71a:	cbz	r0, d758 <repair_qgroups@@Base+0xcac>
    d71c:	cmn.w	r0, #4096	; 0x1000
    d720:	bhi.n	d758 <repair_qgroups@@Base+0xcac>
    d722:	ldr	r3, [r0, #84]	; 0x54
    d724:	lsls	r2, r3, #29
    d726:	bpl.n	d758 <repair_qgroups@@Base+0xcac>
    d728:	ldrb.w	r2, [r0, #196]	; 0xc4
    d72c:	cbz	r2, d764 <repair_qgroups@@Base+0xcb8>
    d72e:	movs	r3, #17
    d730:	movs	r2, #101	; 0x65
    d732:	add	r1, sp, #152	; 0x98
    d734:	bl	172c2 <read_extent_buffer@@Base>
    d738:	ldr.w	r3, [sp, #165]	; 0xa5
    d73c:	ldr.w	r2, [sp, #161]	; 0xa1
    d740:	str.w	r3, [r5, #29]
    d744:	str.w	r2, [r5, #25]
    d748:	ldrb.w	r3, [sp, #160]	; 0xa0
    d74c:	strb	r3, [r5, #24]
    d74e:	ldr	r3, [sp, #152]	; 0x98
    d750:	str	r3, [r5, #16]
    d752:	ldr	r3, [sp, #156]	; 0x9c
    d754:	str	r3, [r5, #20]
    d756:	b.n	d76c <repair_qgroups@@Base+0xcc0>
    d758:	mov	r0, r7
    d75a:	bl	16bc8 <free_extent_buffer@@Base>
    d75e:	mvn.w	r8, #4
    d762:	b.n	d3a4 <repair_qgroups@@Base+0x8f8>
    d764:	add.w	r1, r5, #16
    d768:	bl	cdcc <repair_qgroups@@Base+0x320>
    d76c:	mov	r0, r7
    d76e:	bl	16bc8 <free_extent_buffer@@Base>
    d772:	ldrd	r2, r3, [r5]
    d776:	str	r3, [r2, #4]
    d778:	str	r2, [r3, #0]
    d77a:	ldr	r3, [sp, #172]	; 0xac
    d77c:	str	r5, [r3, #4]
    d77e:	str	r3, [r5, #0]
    d780:	add	r3, sp, #172	; 0xac
    d782:	str	r5, [sp, #172]	; 0xac
    d784:	str	r3, [r5, #4]
    d786:	b.n	d58c <repair_qgroups@@Base+0xae0>
    d788:	ldrd	r2, r3, [r5]
    d78c:	str	r3, [r2, #4]
    d78e:	str	r2, [r3, #0]
    d790:	ldr	r3, [sp, #172]	; 0xac
    d792:	str	r5, [r3, #4]
    d794:	str	r3, [r5, #0]
    d796:	add	r3, sp, #172	; 0xac
    d798:	str	r3, [r5, #4]
    d79a:	ldrd	r2, r3, [r5, #48]	; 0x30
    d79e:	str	r5, [sp, #172]	; 0xac
    d7a0:	strd	r2, r3, [sp, #64]	; 0x40
    d7a4:	orrs	r3, r2
    d7a6:	beq.n	d7bc <repair_qgroups@@Base+0xd10>
    d7a8:	ldr.w	r1, [pc, #1412]	; dd30 <repair_qgroups@@Base+0x1284>
    d7ac:	movw	r2, #381	; 0x17d
    d7b0:	ldr.w	r0, [pc, #1408]	; dd34 <repair_qgroups@@Base+0x1288>
    d7b4:	add	r1, pc
    d7b6:	adds	r1, #101	; 0x65
    d7b8:	add	r0, pc
    d7ba:	b.n	d6b6 <repair_qgroups@@Base+0xc0a>
    d7bc:	ldr	r3, [r5, #40]	; 0x28
    d7be:	cbnz	r3, d7d4 <repair_qgroups@@Base+0xd28>
    d7c0:	ldr.w	r1, [pc, #1396]	; dd38 <repair_qgroups@@Base+0x128c>
    d7c4:	mov.w	r2, #382	; 0x17e
    d7c8:	ldr.w	r0, [pc, #1392]	; dd3c <repair_qgroups@@Base+0x1290>
    d7cc:	add	r1, pc
    d7ce:	adds	r1, #101	; 0x65
    d7d0:	add	r0, pc
    d7d2:	b.n	d6b6 <repair_qgroups@@Base+0xc0a>
    d7d4:	ldr	r3, [r5, #8]
    d7d6:	add	r1, sp, #132	; 0x84
    d7d8:	ldr	r6, [r5, #36]	; 0x24
    d7da:	mov.w	r2, #4294967295	; 0xffffffff
    d7de:	ldr	r0, [sp, #44]	; 0x2c
    d7e0:	str	r3, [sp, #132]	; 0x84
    d7e2:	ldr	r3, [r5, #12]
    d7e4:	strb.w	r2, [sp, #141]	; 0x8d
    d7e8:	strb.w	r2, [sp, #142]	; 0x8e
    d7ec:	str	r3, [sp, #136]	; 0x88
    d7ee:	movs	r3, #132	; 0x84
    d7f0:	strb.w	r2, [sp, #143]	; 0x8f
    d7f4:	strb.w	r3, [sp, #140]	; 0x8c
    d7f8:	strb.w	r2, [sp, #144]	; 0x90
    d7fc:	strb.w	r2, [sp, #145]	; 0x91
    d800:	strb.w	r2, [sp, #146]	; 0x92
    d804:	strb.w	r2, [sp, #147]	; 0x93
    d808:	strb.w	r2, [sp, #148]	; 0x94
    d80c:	bl	1d9ae <btrfs_read_fs_root@@Base>
    d810:	cmn.w	r0, #4096	; 0x1000
    d814:	mov	r9, r0
    d816:	bls.w	d9ba <repair_qgroups@@Base+0xf0e>
    d81a:	mov	r8, r0
    d81c:	movs	r3, #0
    d81e:	mov	r0, r4
    d820:	strb.w	r3, [r4, #65]	; 0x41
    d824:	bl	17e00 <btrfs_release_path@@Base>
    d828:	cmn.w	r8, #2
    d82c:	beq.n	d874 <repair_qgroups@@Base+0xdc8>
    d82e:	cmp.w	r8, #0
    d832:	bne.n	d880 <repair_qgroups@@Base+0xdd4>
    d834:	add	r1, sp, #96	; 0x60
    d836:	mov	r0, r7
    d838:	str.w	r8, [sp, #96]	; 0x60
    d83c:	bl	b3fc <ulist_next@@Base>
    d840:	cbz	r0, d84a <repair_qgroups@@Base+0xd9e>
    d842:	ldrd	r2, r3, [r0]
    d846:	strd	r2, r3, [sp, #64]	; 0x40
    d84a:	ldrd	r2, r3, [sp, #64]	; 0x40
    d84e:	strd	r2, r3, [r5, #48]	; 0x30
    d852:	cbz	r0, d856 <repair_qgroups@@Base+0xdaa>
    d854:	ldr	r0, [r0, #8]
    d856:	add	r6, sp, #96	; 0x60
    d858:	add.w	r8, r5, #64	; 0x40
    d85c:	str	r0, [r5, #44]	; 0x2c
    d85e:	mov	r1, r6
    d860:	mov	r0, r7
    d862:	bl	b3fc <ulist_next@@Base>
    d866:	mov	r9, r0
    d868:	cmp	r0, #0
    d86a:	bne.w	db7e <repair_qgroups@@Base+0x10d2>
    d86e:	mov	r0, r7
    d870:	bl	b1ea <ulist_reinit@@Base>
    d874:	ldr	r5, [sp, #188]	; 0xbc
    d876:	add	r3, sp, #188	; 0xbc
    d878:	cmp	r5, r3
    d87a:	bne.n	d788 <repair_qgroups@@Base+0xcdc>
    d87c:	mov.w	r8, #0
    d880:	mov	r0, r7
    d882:	bl	b210 <ulist_free@@Base>
    d886:	cmp.w	r8, #0
    d88a:	bne.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d88e:	add	r0, sp, #172	; 0xac
    d890:	movs	r1, #2
    d892:	bl	d094 <repair_qgroups@@Base+0x5e8>
    d896:	ldr	r2, [sp, #180]	; 0xb4
    d898:	ldr.w	r1, [pc, #1188]	; dd40 <repair_qgroups@@Base+0x1294>
    d89c:	add	r3, sp, #180	; 0xb4
    d89e:	subs	r3, r2, r3
    d8a0:	ldr.w	r0, [pc, #1184]	; dd44 <repair_qgroups@@Base+0x1298>
    d8a4:	add	r1, pc
    d8a6:	movw	r2, #801	; 0x321
    d8aa:	add.w	r1, r1, #29
    d8ae:	it	ne
    d8b0:	movne	r3, #1
    d8b2:	add	r0, pc
    d8b4:	str	r1, [sp, #48]	; 0x30
    d8b6:	bl	d038 <repair_qgroups@@Base+0x58c>
    d8ba:	ldr	r2, [sp, #188]	; 0xbc
    d8bc:	add	r3, sp, #188	; 0xbc
    d8be:	ldr.w	r0, [pc, #1160]	; dd48 <repair_qgroups@@Base+0x129c>
    d8c2:	subs	r3, r2, r3
    d8c4:	ldr	r1, [sp, #48]	; 0x30
    d8c6:	add	r0, pc
    d8c8:	movw	r2, #802	; 0x322
    d8cc:	it	ne
    d8ce:	movne	r3, #1
    d8d0:	ldr.w	r6, [pc, #1144]	; dd4c <repair_qgroups@@Base+0x12a0>
    d8d4:	bl	d038 <repair_qgroups@@Base+0x58c>
    d8d8:	ldr.w	r3, [pc, #1140]	; dd50 <repair_qgroups@@Base+0x12a4>
    d8dc:	add	r6, pc
    d8de:	add	r3, pc
    d8e0:	adds	r6, #29
    d8e2:	vmov	s16, r3
    d8e6:	ldr	r5, [sp, #172]	; 0xac
    d8e8:	add	r3, sp, #172	; 0xac
    d8ea:	cmp	r5, r3
    d8ec:	beq.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d8f0:	ldr	r3, [r5, #40]	; 0x28
    d8f2:	cmp	r3, #0
    d8f4:	bge.n	d906 <repair_qgroups@@Base+0xe5a>
    d8f6:	vmov	r0, s16
    d8fa:	movs	r3, #1
    d8fc:	movw	r2, #806	; 0x326
    d900:	mov	r1, r6
    d902:	bl	d058 <repair_qgroups@@Base+0x5ac>
    d906:	ldr	r3, [sp, #76]	; 0x4c
    d908:	cbz	r3, d93c <repair_qgroups@@Base+0xe90>
    d90a:	ldr	r3, [r5, #40]	; 0x28
    d90c:	cbz	r3, d93c <repair_qgroups@@Base+0xe90>
    d90e:	ldrd	r2, r3, [r5, #8]
    d912:	orrs.w	r1, r2, r3
    d916:	beq.n	d93c <repair_qgroups@@Base+0xe90>
    d918:	ldrd	r0, r1, [r5, #48]	; 0x30
    d91c:	orrs.w	r7, r0, r1
    d920:	bne.n	d93c <repair_qgroups@@Base+0xe90>
    d922:	mov.w	ip, #0
    d926:	strd	r0, r1, [sp]
    d92a:	str.w	ip, [sp, #8]
    d92e:	ldr	r0, [sp, #76]	; 0x4c
    d930:	bl	b324 <ulist_add@@Base>
    d934:	subs.w	r8, r0, #0
    d938:	blt.w	d3a4 <repair_qgroups@@Base+0x8f8>
    d93c:	ldr	r3, [r5, #40]	; 0x28
    d93e:	cmp	r3, #0
    d940:	beq.w	dca0 <repair_qgroups@@Base+0x11f4>
    d944:	ldrd	r2, r3, [r5, #48]	; 0x30
    d948:	orrs.w	r1, r2, r3
    d94c:	beq.w	dca0 <repair_qgroups@@Base+0x11f4>
    d950:	ldr	r0, [sp, #72]	; 0x48
    d952:	ldr	r1, [r5, #44]	; 0x2c
    d954:	cmp	r0, #0
    d956:	beq.w	dc38 <repair_qgroups@@Base+0x118c>
    d95a:	cmp	r1, #0
    d95c:	bne.w	dc38 <repair_qgroups@@Base+0x118c>
    d960:	ldr.w	sl, [r5, #36]	; 0x24
    d964:	cmp.w	sl, #0
    d968:	bne.w	dc38 <repair_qgroups@@Base+0x118c>
    d96c:	movs	r0, #0
    d96e:	movs	r1, #0
    d970:	strd	r0, r1, [sp]
    d974:	ldr	r0, [sp, #44]	; 0x2c
    d976:	bl	1d62c <read_tree_block@@Base>
    d97a:	mov	r9, r0
    d97c:	cmp	r0, #0
    d97e:	beq.w	dbc2 <repair_qgroups@@Base+0x1116>
    d982:	cmn.w	r0, #4096	; 0x1000
    d986:	bhi.w	dbc2 <repair_qgroups@@Base+0x1116>
    d98a:	ldr	r3, [r0, #84]	; 0x54
    d98c:	lsls	r3, r3, #29
    d98e:	bpl.w	dbc2 <repair_qgroups@@Base+0x1116>
    d992:	ldr	r3, [sp, #72]	; 0x48
    d994:	add.w	fp, sp, #152	; 0x98
    d998:	ldrd	r2, r3, [r3]
    d99c:	strd	r2, r3, [sp, #48]	; 0x30
    d9a0:	ldr.w	r3, [r0, #192]	; 0xc0
    d9a4:	str	r3, [sp, #56]	; 0x38
    d9a6:	add.w	r3, r0, #197	; 0xc5
    d9aa:	str	r3, [sp, #64]	; 0x40
    d9ac:	ldr	r3, [sp, #56]	; 0x38
    d9ae:	cmp	r3, sl
    d9b0:	bgt.w	dbc6 <repair_qgroups@@Base+0x111a>
    d9b4:	mov.w	r8, #0
    d9b8:	b.n	dc26 <repair_qgroups@@Base+0x117a>
    d9ba:	ldrb.w	r3, [r0, #246]	; 0xf6
    d9be:	movs	r0, #0
    d9c0:	adds	r3, #1
    d9c2:	cmp	r6, r3
    d9c4:	beq.w	db7a <repair_qgroups@@Base+0x10ce>
    d9c8:	strb.w	r6, [r4, #65]	; 0x41
    d9cc:	add.w	r2, r5, #16
    d9d0:	mov	r3, r4
    d9d2:	mov	r1, r9
    d9d4:	strd	r0, r0, [sp]
    d9d8:	bl	1a1e4 <btrfs_search_slot@@Base>
    d9dc:	subs.w	r8, r0, #0
    d9e0:	blt.w	d81c <repair_qgroups@@Base+0xd70>
    d9e4:	ldr.w	r3, [r4, r6, lsl #2]
    d9e8:	cbz	r3, da10 <repair_qgroups@@Base+0xf64>
    d9ea:	movs	r3, #0
    d9ec:	str	r3, [sp, #100]	; 0x64
    d9ee:	cbz	r6, da30 <repair_qgroups@@Base+0xf84>
    d9f0:	ldr.w	r2, [r4, r6, lsl #2]
    d9f4:	movs	r0, #0
    d9f6:	movs	r1, #0
    d9f8:	str	r3, [sp, #8]
    d9fa:	strd	r0, r1, [sp]
    d9fe:	mov	r0, r7
    da00:	ldrd	r2, r3, [r2, #40]	; 0x28
    da04:	bl	b324 <ulist_add@@Base>
    da08:	and.w	r6, r0, r0, asr #31
    da0c:	mov	r8, r6
    da0e:	b.n	d81c <repair_qgroups@@Base+0xd70>
    da10:	cbnz	r6, da2c <repair_qgroups@@Base+0xf80>
    da12:	ldr	r1, [pc, #832]	; (dd54 <repair_qgroups@@Base+0x12a8>)
    da14:	movs	r3, #1
    da16:	ldr	r0, [pc, #832]	; (dd58 <repair_qgroups@@Base+0x12ac>)
    da18:	mov.w	r2, #342	; 0x156
    da1c:	add	r1, pc
    da1e:	mov.w	r8, #1
    da22:	adds	r1, #125	; 0x7d
    da24:	add	r0, pc
    da26:	bl	d058 <repair_qgroups@@Base+0x5ac>
    da2a:	b.n	d81c <repair_qgroups@@Base+0xd70>
    da2c:	subs	r6, #1
    da2e:	b.n	d9e4 <repair_qgroups@@Base+0xf38>
    da30:	ldrd	r2, r3, [r5, #56]	; 0x38
    da34:	strd	r2, r3, [sp, #80]	; 0x50
    da38:	ldr	r3, [r4, #0]
    da3a:	ldr	r2, [r4, #32]
    da3c:	ldr.w	r3, [r3, #192]	; 0xc0
    da40:	cmp	r2, r3
    da42:	bcc.w	db76 <repair_qgroups@@Base+0x10ca>
    da46:	strb.w	r6, [r4, #65]	; 0x41
    da4a:	mov	r1, r4
    da4c:	ldr.w	r0, [r9, #464]	; 0x1d0
    da50:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    da54:	mov	r8, r0
    da56:	movs	r3, #0
    da58:	movs	r2, #0
    da5a:	strd	r2, r3, [sp, #48]	; 0x30
    da5e:	add	r3, sp, #152	; 0x98
    da60:	vmov	s16, r3
    da64:	b.n	daa8 <repair_qgroups@@Base+0xffc>
    da66:	add	r3, sp, #100	; 0x64
    da68:	str	r3, [sp, #8]
    da6a:	ldr	r3, [sp, #72]	; 0x48
    da6c:	ldrd	r0, r1, [r3]
    da70:	strd	r0, r1, [sp]
    da74:	mov	r1, sl
    da76:	vmov	r0, s16
    da7a:	bl	ce34 <repair_qgroups@@Base+0x388>
    da7e:	subs.w	r8, r0, #0
    da82:	blt.n	db54 <repair_qgroups@@Base+0x10a8>
    da84:	beq.n	db28 <repair_qgroups@@Base+0x107c>
    da86:	ldr	r2, [r4, #0]
    da88:	ldr	r3, [r4, #32]
    da8a:	adds	r3, #1
    da8c:	str	r3, [r4, #32]
    da8e:	ldr.w	r2, [r2, #192]	; 0xc0
    da92:	cmp	r3, r2
    da94:	bcc.n	dab0 <repair_qgroups@@Base+0x1004>
    da96:	movs	r3, #0
    da98:	mov	r1, r4
    da9a:	strb.w	r3, [r4, #65]	; 0x41
    da9e:	ldr.w	r0, [r9, #464]	; 0x1d0
    daa2:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    daa6:	mov	r8, r0
    daa8:	cmp.w	r8, #0
    daac:	bne.w	dcc8 <repair_qgroups@@Base+0x121c>
    dab0:	ldrd	r2, r3, [sp, #48]	; 0x30
    dab4:	ldrd	r0, r1, [sp, #56]	; 0x38
    dab8:	cmp	r3, r1
    daba:	it	eq
    dabc:	cmpeq	r2, r0
    dabe:	bcs.n	da0c <repair_qgroups@@Base+0xf60>
    dac0:	ldr.w	sl, [r4]
    dac4:	ldr.w	fp, [r4, #32]
    dac8:	vmov	r1, s16
    dacc:	mov	r0, sl
    dace:	mov	r2, fp
    dad0:	bl	cdcc <repair_qgroups@@Base+0x320>
    dad4:	ldrd	r0, r1, [sp, #152]	; 0x98
    dad8:	ldr	r3, [r5, #20]
    dada:	ldr	r2, [r5, #16]
    dadc:	cmp	r1, r3
    dade:	it	eq
    dae0:	cmpeq	r0, r2
    dae2:	bne.n	da0c <repair_qgroups@@Base+0xf60>
    dae4:	ldrb.w	r3, [sp, #160]	; 0xa0
    dae8:	cmp	r3, #108	; 0x6c
    daea:	bne.n	da0c <repair_qgroups@@Base+0xf60>
    daec:	add.w	r3, sl, #96	; 0x60
    daf0:	movs	r2, #25
    daf2:	mla	fp, r2, fp, r3
    daf6:	ldr.w	r2, [fp, #118]	; 0x76
    dafa:	ldrd	fp, ip, [sp, #80]	; 0x50
    dafe:	adds	r2, #101	; 0x65
    db00:	add	r3, r2
    db02:	ldr.w	r0, [r3, #21]!
    db06:	ldr	r1, [r3, #4]
    db08:	cmp	ip, r1
    db0a:	it	eq
    db0c:	cmpeq	fp, r0
    db0e:	bne.n	da86 <repair_qgroups@@Base+0xfda>
    db10:	movs	r3, #0
    db12:	str	r3, [sp, #100]	; 0x64
    db14:	ldr	r3, [sp, #48]	; 0x30
    db16:	adds	r3, #1
    db18:	str	r3, [sp, #48]	; 0x30
    db1a:	ldr	r3, [sp, #52]	; 0x34
    db1c:	adc.w	r3, r3, #0
    db20:	str	r3, [sp, #52]	; 0x34
    db22:	ldr	r3, [sp, #72]	; 0x48
    db24:	cmp	r3, #0
    db26:	bne.n	da66 <repair_qgroups@@Base+0xfba>
    db28:	ldrd	r0, r1, [sl, #40]	; 0x28
    db2c:	movs	r2, #0
    db2e:	movs	r3, #0
    db30:	strd	r2, r3, [sp, #104]	; 0x68
    db34:	add	r2, sp, #104	; 0x68
    db36:	str	r2, [sp, #8]
    db38:	ldr	r2, [sp, #100]	; 0x64
    db3a:	movs	r3, #0
    db3c:	str	r3, [sp, #12]
    db3e:	strd	r2, r3, [sp]
    db42:	mov	r2, r0
    db44:	mov	r3, r1
    db46:	mov	r0, r7
    db48:	bl	b226 <ulist_add_merge@@Base>
    db4c:	ldr	r3, [sp, #104]	; 0x68
    db4e:	subs.w	r8, r0, #0
    db52:	bge.n	db5e <repair_qgroups@@Base+0x10b2>
    db54:	ldr	r0, [sp, #100]	; 0x64
    db56:	mov	r6, r8
    db58:	bl	cd50 <repair_qgroups@@Base+0x2a4>
    db5c:	b.n	da0c <repair_qgroups@@Base+0xf60>
    db5e:	bne.n	db70 <repair_qgroups@@Base+0x10c4>
    db60:	ldr	r2, [sp, #72]	; 0x48
    db62:	cbz	r2, db70 <repair_qgroups@@Base+0x10c4>
    db64:	mov	r2, r3
    db66:	ldr	r3, [r3, #16]
    db68:	cmp	r3, #0
    db6a:	bne.n	db64 <repair_qgroups@@Base+0x10b8>
    db6c:	ldr	r3, [sp, #100]	; 0x64
    db6e:	str	r3, [r2, #16]
    db70:	movs	r3, #0
    db72:	str	r3, [sp, #100]	; 0x64
    db74:	b.n	da86 <repair_qgroups@@Base+0xfda>
    db76:	mov	r8, r6
    db78:	b.n	da56 <repair_qgroups@@Base+0xfaa>
    db7a:	mov	r8, r0
    db7c:	b.n	d81c <repair_qgroups@@Base+0xd70>
    db7e:	movs	r0, #64	; 0x40
    db80:	blx	8820 <malloc@plt+0x4>
    db84:	mov	r3, r0
    db86:	cbz	r0, dbbc <repair_qgroups@@Base+0x1110>
    db88:	mov	r2, r5
    db8a:	mov	lr, r0
    db8c:	ldr	r0, [r2, #0]
    db8e:	adds	r2, #8
    db90:	ldr.w	r1, [r2, #-4]
    db94:	cmp	r2, r8
    db96:	mov	ip, lr
    db98:	stmia.w	ip!, {r0, r1}
    db9c:	mov	lr, ip
    db9e:	bne.n	db8c <repair_qgroups@@Base+0x10e0>
    dba0:	ldrd	r0, r1, [r9]
    dba4:	strd	r0, r1, [r3, #48]	; 0x30
    dba8:	add	r1, sp, #172	; 0xac
    dbaa:	ldr.w	r2, [r9, #8]
    dbae:	str	r2, [r3, #44]	; 0x2c
    dbb0:	ldr	r2, [sp, #176]	; 0xb0
    dbb2:	str	r3, [sp, #176]	; 0xb0
    dbb4:	strd	r1, r2, [r3]
    dbb8:	str	r3, [r2, #0]
    dbba:	b.n	d85e <repair_qgroups@@Base+0xdb2>
    dbbc:	mvn.w	r8, #11
    dbc0:	b.n	d880 <repair_qgroups@@Base+0xdd4>
    dbc2:	mov	r0, r9
    dbc4:	b.n	d75a <repair_qgroups@@Base+0xcae>
    dbc6:	mov	r2, sl
    dbc8:	mov	r1, fp
    dbca:	mov	r0, r9
    dbcc:	bl	cdcc <repair_qgroups@@Base+0x320>
    dbd0:	ldrb.w	r2, [sp, #160]	; 0xa0
    dbd4:	cmp	r2, #108	; 0x6c
    dbd6:	beq.n	dbde <repair_qgroups@@Base+0x1132>
    dbd8:	add.w	sl, sl, #1
    dbdc:	b.n	d9ac <repair_qgroups@@Base+0xf00>
    dbde:	ldr	r3, [sp, #64]	; 0x40
    dbe0:	movs	r2, #25
    dbe2:	add.w	r1, r9, #96	; 0x60
    dbe6:	mla	r2, r2, sl, r3
    dbea:	ldr.w	r2, [r2, #17]
    dbee:	adds	r2, #101	; 0x65
    dbf0:	add	r1, r2
    dbf2:	ldrb	r0, [r1, #20]
    dbf4:	cmp	r0, #0
    dbf6:	beq.n	dbd8 <repair_qgroups@@Base+0x112c>
    dbf8:	ldr.w	r3, [r1, #21]!
    dbfc:	mov	r7, r3
    dbfe:	ldr	r3, [r1, #4]
    dc00:	ldrd	r0, r1, [sp, #32]
    dc04:	cmp	r1, r3
    dc06:	it	eq
    dc08:	cmpeq	r0, r7
    dc0a:	bne.n	dbd8 <repair_qgroups@@Base+0x112c>
    dc0c:	add	r1, sp, #92	; 0x5c
    dc0e:	str	r1, [sp, #8]
    dc10:	ldrd	r0, r1, [sp, #48]	; 0x30
    dc14:	strd	r0, r1, [sp]
    dc18:	mov	r1, r9
    dc1a:	mov	r0, fp
    dc1c:	bl	ce34 <repair_qgroups@@Base+0x388>
    dc20:	subs.w	r8, r0, #0
    dc24:	bge.n	dbd8 <repair_qgroups@@Base+0x112c>
    dc26:	mov	r0, r9
    dc28:	bl	16bc8 <free_extent_buffer@@Base>
    dc2c:	cmp.w	r8, #0
    dc30:	bne.w	d3a4 <repair_qgroups@@Base+0x8f8>
    dc34:	ldr	r3, [sp, #92]	; 0x5c
    dc36:	str	r3, [r5, #44]	; 0x2c
    dc38:	ldrd	r0, r1, [r5, #48]	; 0x30
    dc3c:	movs	r3, #0
    dc3e:	ldr.w	ip, [r5, #44]	; 0x2c
    dc42:	ldr	r2, [sp, #92]	; 0x5c
    dc44:	str	r3, [sp, #12]
    dc46:	strd	ip, r3, [sp]
    dc4a:	strd	r2, r3, [sp, #152]	; 0x98
    dc4e:	add	r2, sp, #152	; 0x98
    dc50:	mov	r3, r1
    dc52:	str	r2, [sp, #8]
    dc54:	mov	r2, r0
    dc56:	vmov	r0, s17
    dc5a:	bl	b226 <ulist_add_merge@@Base>
    dc5e:	ldr.w	r9, [sp, #152]	; 0x98
    dc62:	str.w	r9, [sp, #92]	; 0x5c
    dc66:	subs.w	r8, r0, #0
    dc6a:	blt.w	d3a4 <repair_qgroups@@Base+0x8f8>
    dc6e:	bne.n	dc9c <repair_qgroups@@Base+0x11f0>
    dc70:	ldr	r3, [sp, #72]	; 0x48
    dc72:	cbz	r3, dc9c <repair_qgroups@@Base+0x11f0>
    dc74:	ldr	r1, [pc, #228]	; (dd5c <repair_qgroups@@Base+0x12b0>)
    dc76:	clz	r3, r9
    dc7a:	ldr	r0, [pc, #228]	; (dd60 <repair_qgroups@@Base+0x12b4>)
    dc7c:	movw	r2, #841	; 0x349
    dc80:	add	r1, pc
    dc82:	lsrs	r3, r3, #5
    dc84:	adds	r1, #29
    dc86:	add	r0, pc
    dc88:	bl	d038 <repair_qgroups@@Base+0x58c>
    dc8c:	mov	r3, r9
    dc8e:	ldr.w	r9, [r9, #16]
    dc92:	cmp.w	r9, #0
    dc96:	bne.n	dc8c <repair_qgroups@@Base+0x11e0>
    dc98:	ldr	r2, [r5, #44]	; 0x2c
    dc9a:	str	r2, [r3, #16]
    dc9c:	movs	r3, #0
    dc9e:	str	r3, [sp, #92]	; 0x5c
    dca0:	ldrd	r2, r3, [r5]
    dca4:	mov	r0, r5
    dca6:	str	r3, [r2, #4]
    dca8:	str	r2, [r3, #0]
    dcaa:	blx	85dc <free@plt+0x4>
    dcae:	b.n	d8e6 <repair_qgroups@@Base+0xe3a>
    dcb0:	ldrd	r2, r3, [r0]
    dcb4:	str	r3, [r2, #4]
    dcb6:	str	r2, [r3, #0]
    dcb8:	blx	85dc <free@plt+0x4>
    dcbc:	b.w	d3ac <repair_qgroups@@Base+0x900>
    dcc0:	mvn.w	r8, #11
    dcc4:	b.w	d3c0 <repair_qgroups@@Base+0x914>
    dcc8:	bgt.w	da0c <repair_qgroups@@Base+0xf60>
    dccc:	b.n	db54 <repair_qgroups@@Base+0x10a8>
    dcce:	mov	r0, r8
    dcd0:	add	sp, #204	; 0xcc
    dcd2:	vpop	{d8}
    dcd6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dcda:	nop
    dcdc:	ldrb	r6, [r1, #16]
    dcde:	movs	r5, r0
    dce0:	lsls	r4, r4, #8
    dce2:	movs	r0, r0
    dce4:	bcs.n	dd96 <repair_qgroups@@Base+0x12ea>
    dce6:	movs	r2, r0
    dce8:	bne.n	dd1a <repair_qgroups@@Base+0x126e>
    dcea:	movs	r2, r0
    dcec:	beq.n	dc80 <repair_qgroups@@Base+0x11d4>
    dcee:	movs	r2, r0
    dcf0:	bne.n	ddea <repair_qgroups@@Base+0x133e>
    dcf2:	movs	r2, r0
    dcf4:	bne.n	ddda <repair_qgroups@@Base+0x132e>
    dcf6:	movs	r2, r0
    dcf8:	lsls	r5, r0, #16
    dcfa:	movs	r3, r0
    dcfc:	bne.n	ddb6 <repair_qgroups@@Base+0x130a>
    dcfe:	movs	r2, r0
    dd00:	lsls	r7, r5, #15
    dd02:	movs	r3, r0
    dd04:	bne.n	dd7a <repair_qgroups@@Base+0x12ce>
    dd06:	movs	r2, r0
    dd08:	beq.n	dd44 <repair_qgroups@@Base+0x1298>
    dd0a:	movs	r2, r0
    dd0c:	ldrb	r0, [r0, #7]
    dd0e:	movs	r5, r0
    dd10:	ldmia	r6, {r0, r1, r4, r5, r6, r7}
    dd12:	movs	r2, r0
    dd14:	ldmia	r6!, {r4, r5}
    dd16:	movs	r2, r0
    dd18:	ldmia	r5!, {r0, r3, r6, r7}
    dd1a:	movs	r2, r0
    dd1c:	ldmia	r4, {r1, r4, r6, r7}
    dd1e:	movs	r2, r0
    dd20:	ldmia	r5, {r0, r3, r5, r7}
    dd22:	movs	r2, r0
    dd24:	ldmia	r4, {r0, r1, r2, r3, r4, r5, r7}
    dd26:	movs	r2, r0
    dd28:	ldmia	r5!, {r0, r4, r7}
    dd2a:	movs	r2, r0
    dd2c:	ldmia	r4, {r2, r4, r5, r7}
    dd2e:	movs	r2, r0
    dd30:	ldmia	r4!, {r0, r2, r6, r7}
    dd32:	movs	r2, r0
    dd34:	ldmia	r3, {r0, r1, r3, r4, r6, r7}
    dd36:	movs	r2, r0
    dd38:	ldmia	r4!, {r0, r2, r3, r5, r7}
    dd3a:	movs	r2, r0
    dd3c:	ldmia	r4!, {r0}
    dd3e:	movs	r2, r0
    dd40:	ldmia	r3!, {r0, r2, r4, r6, r7}
    dd42:	movs	r2, r0
    dd44:	ldmia	r3, {r1, r3, r5}
    dd46:	movs	r2, r0
    dd48:	ldmia	r3!, {r0, r1, r6}
    dd4a:	movs	r2, r0
    dd4c:	ldmia	r3, {r0, r2, r3, r4, r7}
    dd4e:	movs	r2, r0
    dd50:	ldmia	r3, {r0, r3, r4, r6}
    dd52:	movs	r2, r0
    dd54:	ldmia	r2, {r0, r2, r3, r4, r6}
    dd56:	movs	r2, r0
    dd58:	stc2l	0, cr0, [sp], #8
    dd5c:	stmia	r7!, {r0, r3, r4, r5, r6, r7}
    dd5e:	movs	r2, r0
    dd60:	stmia	r7!, {r6, r7}
    dd62:	movs	r2, r0
    dd64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd68:	mov	fp, r2
    dd6a:	ldr	r2, [pc, #164]	; (de10 <repair_qgroups@@Base+0x1364>)
    dd6c:	mov	r4, r3
    dd6e:	ldr	r3, [pc, #164]	; (de14 <repair_qgroups@@Base+0x1368>)
    dd70:	sub	sp, #28
    dd72:	add	r2, pc
    dd74:	mov	r7, r0
    dd76:	movs	r0, #0
    dd78:	ldr.w	r9, [sp, #64]	; 0x40
    dd7c:	ldr	r3, [r2, r3]
    dd7e:	mov	r8, r1
    dd80:	ldr	r3, [r3, #0]
    dd82:	str	r3, [sp, #20]
    dd84:	mov.w	r3, #0
    dd88:	bl	b1fc <ulist_alloc@@Base>
    dd8c:	mov	r5, r0
    dd8e:	cbz	r0, dda2 <repair_qgroups@@Base+0x12f6>
    dd90:	movs	r0, #0
    dd92:	bl	b1fc <ulist_alloc@@Base>
    dd96:	str.w	r0, [r9]
    dd9a:	cbnz	r0, dda8 <repair_qgroups@@Base+0x12fc>
    dd9c:	mov	r0, r5
    dd9e:	bl	b210 <ulist_free@@Base>
    dda2:	mvn.w	r4, #11
    dda6:	b.n	dddc <repair_qgroups@@Base+0x1330>
    dda8:	add.w	sl, sp, #16
    ddac:	movs	r6, #0
    ddae:	str	r6, [sp, #16]
    ddb0:	str	r6, [sp, #8]
    ddb2:	mov	r2, fp
    ddb4:	ldr.w	r3, [r9]
    ddb8:	mov	r1, r8
    ddba:	mov	r0, r7
    ddbc:	strd	r5, r3, [sp]
    ddc0:	mov	r3, r4
    ddc2:	bl	d15a <repair_qgroups@@Base+0x6ae>
    ddc6:	subs	r4, r0, #0
    ddc8:	bge.n	ddf0 <repair_qgroups@@Base+0x1344>
    ddca:	adds	r3, r4, #2
    ddcc:	beq.n	ddf0 <repair_qgroups@@Base+0x1344>
    ddce:	mov	r0, r5
    ddd0:	bl	b210 <ulist_free@@Base>
    ddd4:	ldr.w	r0, [r9]
    ddd8:	bl	b210 <ulist_free@@Base>
    dddc:	ldr	r2, [pc, #56]	; (de18 <repair_qgroups@@Base+0x136c>)
    ddde:	ldr	r3, [pc, #52]	; (de14 <repair_qgroups@@Base+0x1368>)
    dde0:	add	r2, pc
    dde2:	ldr	r3, [r2, r3]
    dde4:	ldr	r2, [r3, #0]
    dde6:	ldr	r3, [sp, #20]
    dde8:	eors	r2, r3
    ddea:	beq.n	de06 <repair_qgroups@@Base+0x135a>
    ddec:	blx	86b8 <__stack_chk_fail@plt>
    ddf0:	mov	r1, sl
    ddf2:	mov	r0, r5
    ddf4:	bl	b3fc <ulist_next@@Base>
    ddf8:	mov	r4, r0
    ddfa:	cbz	r0, de02 <repair_qgroups@@Base+0x1356>
    ddfc:	ldrd	fp, r4, [r0]
    de00:	b.n	ddb0 <repair_qgroups@@Base+0x1304>
    de02:	mov	r0, r5
    de04:	b.n	ddd8 <repair_qgroups@@Base+0x132c>
    de06:	mov	r0, r4
    de08:	add	sp, #28
    de0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de0e:	nop
    de10:	strb	r6, [r2, #0]
    de12:	movs	r5, r0
    de14:	lsls	r4, r4, #8
    de16:	movs	r0, r0
    de18:	ldr	r0, [r5, #120]	; 0x78
    de1a:	movs	r5, r0

0000de1c <btrfs_find_all_roots@@Base>:
    de1c:	push	{r4}
    de1e:	ldr	r4, [sp, #12]
    de20:	str	r4, [sp, #4]
    de22:	ldr.w	r4, [sp], #4
    de26:	b.n	dd64 <repair_qgroups@@Base+0x12b8>

0000de28 <inode_item_info@@Base>:
    de28:	ldr.w	ip, [pc, #68]	; de70 <inode_item_info@@Base+0x48>
    de2c:	push	{r4, lr}
    de2e:	add	ip, pc
    de30:	ldr	r4, [pc, #64]	; (de74 <inode_item_info@@Base+0x4c>)
    de32:	sub	sp, #40	; 0x28
    de34:	ldr.w	r4, [ip, r4]
    de38:	ldr	r4, [r4, #0]
    de3a:	str	r4, [sp, #36]	; 0x24
    de3c:	mov.w	r4, #0
    de40:	strd	r2, r3, [sp]
    de44:	add	r4, sp, #16
    de46:	mov	r2, r0
    de48:	mov	r3, r1
    de4a:	str	r4, [sp, #12]
    de4c:	ldrd	r0, r1, [sp, #48]	; 0x30
    de50:	movs	r4, #1
    de52:	str	r4, [sp, #8]
    de54:	bl	1b718 <btrfs_find_item@@Base>
    de58:	ldr	r2, [pc, #28]	; (de78 <inode_item_info@@Base+0x50>)
    de5a:	ldr	r3, [pc, #24]	; (de74 <inode_item_info@@Base+0x4c>)
    de5c:	add	r2, pc
    de5e:	ldr	r3, [r2, r3]
    de60:	ldr	r2, [r3, #0]
    de62:	ldr	r3, [sp, #36]	; 0x24
    de64:	eors	r2, r3
    de66:	beq.n	de6c <inode_item_info@@Base+0x44>
    de68:	blx	86b8 <__stack_chk_fail@plt>
    de6c:	add	sp, #40	; 0x28
    de6e:	pop	{r4, pc}
    de70:	ldr	r2, [r3, #116]	; 0x74
    de72:	movs	r5, r0
    de74:	lsls	r4, r4, #8
    de76:	movs	r0, r0
    de78:	ldr	r4, [r5, #112]	; 0x70
    de7a:	movs	r5, r0

0000de7c <btrfs_find_one_extref@@Base>:
    de7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de80:	mov	r6, r2
    de82:	ldr	r2, [pc, #204]	; (df50 <btrfs_find_one_extref@@Base+0xd4>)
    de84:	mov	r7, r3
    de86:	ldr	r3, [pc, #204]	; (df54 <btrfs_find_one_extref@@Base+0xd8>)
    de88:	sub	sp, #60	; 0x3c
    de8a:	add	r2, pc
    de8c:	mov.w	sl, #0
    de90:	ldrd	r4, r9, [sp, #104]	; 0x68
    de94:	mov	r1, r0
    de96:	ldr	r3, [r2, r3]
    de98:	mov	r8, r0
    de9a:	mov	r0, sl
    de9c:	add	r2, sp, #12
    de9e:	ldr	r3, [r3, #0]
    dea0:	str	r3, [sp, #52]	; 0x34
    dea2:	mov.w	r3, #0
    dea6:	movs	r3, #13
    dea8:	strb.w	r3, [sp, #20]
    deac:	ldr	r3, [sp, #96]	; 0x60
    deae:	strd	sl, sl, [sp]
    deb2:	ldr	r5, [sp, #112]	; 0x70
    deb4:	str.w	r3, [sp, #21]
    deb8:	ldr	r3, [sp, #100]	; 0x64
    deba:	strd	r6, r7, [sp, #12]
    debe:	str.w	r3, [sp, #25]
    dec2:	mov	r3, r4
    dec4:	bl	1a1e4 <btrfs_search_slot@@Base>
    dec8:	cmp	r0, #0
    deca:	blt.n	def2 <btrfs_find_one_extref@@Base+0x76>
    decc:	ldr.w	fp, [r4]
    ded0:	ldr	r2, [r4, #32]
    ded2:	ldr.w	r3, [fp, #192]	; 0xc0
    ded6:	cmp	r3, r2
    ded8:	bhi.n	df06 <btrfs_find_one_extref@@Base+0x8a>
    deda:	strb.w	sl, [r4, #65]	; 0x41
    dede:	mov	r1, r4
    dee0:	ldr.w	r0, [r8, #464]	; 0x1d0
    dee4:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    dee8:	cmp	r0, #0
    deea:	beq.n	decc <btrfs_find_one_extref@@Base+0x50>
    deec:	ble.n	def2 <btrfs_find_one_extref@@Base+0x76>
    deee:	mvn.w	r0, #1
    def2:	ldr	r2, [pc, #100]	; (df58 <btrfs_find_one_extref@@Base+0xdc>)
    def4:	ldr	r3, [pc, #92]	; (df54 <btrfs_find_one_extref@@Base+0xd8>)
    def6:	add	r2, pc
    def8:	ldr	r3, [r2, r3]
    defa:	ldr	r2, [r3, #0]
    defc:	ldr	r3, [sp, #52]	; 0x34
    defe:	eors	r2, r3
    df00:	beq.n	df4a <btrfs_find_one_extref@@Base+0xce>
    df02:	blx	86b8 <__stack_chk_fail@plt>
    df06:	add	r1, sp, #32
    df08:	mov	r0, fp
    df0a:	bl	cdcc <repair_qgroups@@Base+0x320>
    df0e:	ldrd	r2, r3, [sp, #32]
    df12:	cmp	r7, r3
    df14:	it	eq
    df16:	cmpeq	r6, r2
    df18:	bne.n	deee <btrfs_find_one_extref@@Base+0x72>
    df1a:	ldrb.w	r3, [sp, #40]	; 0x28
    df1e:	cmp	r3, #13
    df20:	bne.n	deee <btrfs_find_one_extref@@Base+0x72>
    df22:	ldr	r3, [r4, #32]
    df24:	movs	r0, #25
    df26:	mla	r3, r0, r3, fp
    df2a:	ldr.w	r3, [r3, #214]	; 0xd6
    df2e:	adds	r3, #101	; 0x65
    df30:	str.w	r3, [r9]
    df34:	cbz	r5, df46 <btrfs_find_one_extref@@Base+0xca>
    df36:	ldr.w	r2, [sp, #41]	; 0x29
    df3a:	movs	r0, #0
    df3c:	ldr.w	r3, [sp, #45]	; 0x2d
    df40:	strd	r2, r3, [r5]
    df44:	b.n	def2 <btrfs_find_one_extref@@Base+0x76>
    df46:	mov	r0, r5
    df48:	b.n	def2 <btrfs_find_one_extref@@Base+0x76>
    df4a:	add	sp, #60	; 0x3c
    df4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df50:	ldr	r6, [r7, #108]	; 0x6c
    df52:	movs	r5, r0
    df54:	lsls	r4, r4, #8
    df56:	movs	r0, r0
    df58:	ldr	r2, [r2, #104]	; 0x68
    df5a:	movs	r5, r0

0000df5c <btrfs_ref_to_path@@Base>:
    df5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df60:	mov	r7, r0
    df62:	ldr	r0, [pc, #304]	; (e094 <btrfs_ref_to_path@@Base+0x138>)
    df64:	sub	sp, #68	; 0x44
    df66:	mov	r5, r1
    df68:	ldr	r1, [pc, #300]	; (e098 <btrfs_ref_to_path@@Base+0x13c>)
    df6a:	add	r0, pc
    df6c:	mov	ip, r2
    df6e:	mov	r2, r3
    df70:	ldrd	r6, r3, [sp, #120]	; 0x78
    df74:	ldr	r1, [r0, r1]
    df76:	adds.w	r9, r3, #4294967295	; 0xffffffff
    df7a:	ldr.w	r8, [sp, #104]	; 0x68
    df7e:	ldr	r1, [r1, #0]
    df80:	str	r1, [sp, #60]	; 0x3c
    df82:	mov.w	r1, #0
    df86:	mov	r0, r3
    df88:	mov.w	r1, #0
    df8c:	adc.w	sl, r1, #4294967295	; 0xffffffff
    df90:	orrs	r1, r0
    df92:	mov	r4, r8
    df94:	ittt	ne
    df96:	addne	r3, r3, r6
    df98:	movne	r1, #0
    df9a:	strbne.w	r1, [r3, #-1]
    df9e:	add	r3, sp, #40	; 0x28
    dfa0:	str	r3, [sp, #36]	; 0x24
    dfa2:	subs.w	r0, r9, ip
    dfa6:	sbc.w	r1, sl, #0
    dfaa:	cmp	r0, #0
    dfac:	sbcs.w	r3, r1, #0
    dfb0:	strd	r0, r1, [sp, #16]
    dfb4:	blt.n	dfc2 <btrfs_ref_to_path@@Base+0x66>
    dfb6:	ldr	r1, [sp, #16]
    dfb8:	mov	r3, ip
    dfba:	mov	r0, r4
    dfbc:	adds	r1, r6, r1
    dfbe:	bl	172c2 <read_extent_buffer@@Base>
    dfc2:	cmp	r4, r8
    dfc4:	beq.n	dfcc <btrfs_ref_to_path@@Base+0x70>
    dfc6:	mov	r0, r4
    dfc8:	bl	16bc8 <free_extent_buffer@@Base>
    dfcc:	ldr	r3, [sp, #36]	; 0x24
    dfce:	movs	r4, #0
    dfd0:	mov	r1, r5
    dfd2:	mov	r0, r7
    dfd4:	str	r3, [sp, #12]
    dfd6:	movs	r3, #12
    dfd8:	str	r3, [sp, #8]
    dfda:	movs	r3, #0
    dfdc:	strd	r3, r4, [sp]
    dfe0:	ldrd	r2, r3, [sp, #112]	; 0x70
    dfe4:	bl	1b718 <btrfs_find_item@@Base>
    dfe8:	subs	r4, r0, #0
    dfea:	bgt.n	e062 <btrfs_ref_to_path@@Base+0x106>
    dfec:	bne.n	e066 <btrfs_ref_to_path@@Base+0x10a>
    dfee:	ldr.w	r3, [sp, #49]	; 0x31
    dff2:	str	r3, [sp, #24]
    dff4:	ldr.w	r3, [sp, #53]	; 0x35
    dff8:	str	r3, [sp, #28]
    dffa:	ldrd	r0, r1, [sp, #24]
    dffe:	ldrd	r2, r3, [sp, #112]	; 0x70
    e002:	cmp	r3, r1
    e004:	it	eq
    e006:	cmpeq	r2, r0
    e008:	beq.n	e066 <btrfs_ref_to_path@@Base+0x10a>
    e00a:	ldr	r4, [r5, #0]
    e00c:	mov	r0, r5
    e00e:	ldr.w	fp, [r5, #32]
    e012:	cmp	r8, r4
    e014:	ittt	ne
    e016:	ldrne	r3, [r4, #80]	; 0x50
    e018:	addne	r3, #1
    e01a:	strne	r3, [r4, #80]	; 0x50
    e01c:	bl	17e00 <btrfs_release_path@@Base>
    e020:	add.w	r1, r4, #96	; 0x60
    e024:	movs	r3, #25
    e026:	mla	fp, r3, fp, r1
    e02a:	ldr.w	r2, [fp, #118]	; 0x76
    e02e:	add.w	r3, r2, #101	; 0x65
    e032:	adds	r2, #111	; 0x6f
    e034:	add	r1, r3
    e036:	ldr	r3, [sp, #16]
    e038:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e03c:	ldr	r3, [sp, #20]
    e03e:	ldrh.w	ip, [r1, #8]
    e042:	adc.w	sl, r3, #4294967295	; 0xffffffff
    e046:	cmp.w	r9, #0
    e04a:	sbcs.w	r3, sl, #0
    e04e:	blt.n	e058 <btrfs_ref_to_path@@Base+0xfc>
    e050:	add.w	r3, r6, r9
    e054:	movs	r1, #47	; 0x2f
    e056:	strb	r1, [r3, #0]
    e058:	ldrd	r0, r1, [sp, #24]
    e05c:	strd	r0, r1, [sp, #112]	; 0x70
    e060:	b.n	dfa2 <btrfs_ref_to_path@@Base+0x46>
    e062:	mvn.w	r4, #1
    e066:	mov	r0, r5
    e068:	bl	17e00 <btrfs_release_path@@Base>
    e06c:	cbz	r4, e084 <btrfs_ref_to_path@@Base+0x128>
    e06e:	mov	r0, r4
    e070:	ldr	r2, [pc, #40]	; (e09c <btrfs_ref_to_path@@Base+0x140>)
    e072:	ldr	r3, [pc, #36]	; (e098 <btrfs_ref_to_path@@Base+0x13c>)
    e074:	add	r2, pc
    e076:	ldr	r3, [r2, r3]
    e078:	ldr	r2, [r3, #0]
    e07a:	ldr	r3, [sp, #60]	; 0x3c
    e07c:	eors	r2, r3
    e07e:	beq.n	e08c <btrfs_ref_to_path@@Base+0x130>
    e080:	blx	86b8 <__stack_chk_fail@plt>
    e084:	ldr	r3, [sp, #16]
    e086:	add	r3, r6
    e088:	mov	r0, r3
    e08a:	b.n	e070 <btrfs_ref_to_path@@Base+0x114>
    e08c:	add	sp, #68	; 0x44
    e08e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e092:	nop
    e094:	ldr	r6, [r3, #96]	; 0x60
    e096:	movs	r5, r0
    e098:	lsls	r4, r4, #8
    e09a:	movs	r0, r0
    e09c:	ldr	r4, [r2, #80]	; 0x50
    e09e:	movs	r5, r0
    e0a0:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    e0a4:	sub	sp, #24
    e0a6:	mov	r9, r1
    e0a8:	mov	r8, r0
    e0aa:	ldr	r4, [sp, #52]	; 0x34
    e0ac:	ldr	r1, [r4, #8]
    e0ae:	ldr	r6, [r1, #8]
    e0b0:	add.w	r5, r1, r6, lsl #2
    e0b4:	ldr	r1, [r1, #0]
    e0b6:	adds	r5, #20
    e0b8:	strd	r8, r9, [sp, #8]
    e0bc:	cmp	r1, #4
    e0be:	it	cc
    e0c0:	movcc	r1, #4
    e0c2:	subs	r1, #4
    e0c4:	strd	r5, r1, [sp, #16]
    e0c8:	ldr	r1, [sp, #48]	; 0x30
    e0ca:	str	r1, [sp, #0]
    e0cc:	ldrd	r1, r0, [r4]
    e0d0:	bl	df5c <btrfs_ref_to_path@@Base>
    e0d4:	cmn.w	r0, #4096	; 0x1000
    e0d8:	bhi.n	e0fe <btrfs_ref_to_path@@Base+0x1a2>
    e0da:	cmp	r5, r0
    e0dc:	ldr	r2, [r4, #8]
    e0de:	bcs.n	e104 <btrfs_ref_to_path@@Base+0x1a8>
    e0e0:	adds	r6, #2
    e0e2:	movs	r3, #0
    e0e4:	add.w	r1, r2, r6, lsl #3
    e0e8:	str.w	r0, [r2, r6, lsl #3]
    e0ec:	subs	r0, r0, r5
    e0ee:	str	r3, [r1, #4]
    e0f0:	ldr	r1, [r4, #8]
    e0f2:	ldr	r2, [r1, #8]
    e0f4:	adds	r2, #1
    e0f6:	str	r2, [r1, #8]
    e0f8:	ldr	r2, [r4, #8]
    e0fa:	str	r0, [r2, #0]
    e0fc:	mov	r0, r3
    e0fe:	add	sp, #24
    e100:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    e104:	ldr	r3, [r2, #12]
    e106:	subs	r0, r5, r0
    e108:	adds	r3, #1
    e10a:	str	r3, [r2, #12]
    e10c:	ldr	r3, [r4, #8]
    e10e:	ldr	r5, [r3, #4]
    e110:	add	r0, r5
    e112:	str	r0, [r3, #4]
    e114:	ldr	r3, [r4, #8]
    e116:	movs	r0, #0
    e118:	str	r0, [r3, #0]
    e11a:	b.n	e0fe <btrfs_ref_to_path@@Base+0x1a2>

0000e11c <extent_from_logical@@Base>:
    e11c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e120:	mov	r8, r2
    e122:	ldr	r2, [pc, #380]	; (e2a0 <extent_from_logical@@Base+0x184>)
    e124:	mov	r9, r3
    e126:	ldr	r3, [pc, #380]	; (e2a4 <extent_from_logical@@Base+0x188>)
    e128:	sub	sp, #40	; 0x28
    e12a:	add	r2, pc
    e12c:	mov	r7, r0
    e12e:	ldrd	r5, r6, [sp, #72]	; 0x48
    e132:	ldr	r3, [r2, r3]
    e134:	ldr.w	sl, [sp, #80]	; 0x50
    e138:	ldr	r3, [r3, #0]
    e13a:	str	r3, [sp, #36]	; 0x24
    e13c:	mov.w	r3, #0
    e140:	ldr.w	r3, [r0, #308]	; 0x134
    e144:	movs	r0, #0
    e146:	ldr.w	r1, [r3, #188]	; 0xbc
    e14a:	mov	r3, r0
    e14c:	strd	r0, r0, [sp]
    e150:	and.w	r2, r1, #256	; 0x100
    e154:	ldr	r1, [r7, #24]
    e156:	orrs	r3, r2
    e158:	mov.w	r2, #4294967295	; 0xffffffff
    e15c:	strb.w	r2, [sp, #25]
    e160:	ite	ne
    e162:	movne	r3, #169	; 0xa9
    e164:	moveq	r3, #168	; 0xa8
    e166:	strb.w	r2, [sp, #26]
    e16a:	strb.w	r3, [sp, #24]
    e16e:	mov	r3, r5
    e170:	strb.w	r2, [sp, #27]
    e174:	strb.w	r2, [sp, #28]
    e178:	strb.w	r2, [sp, #29]
    e17c:	strb.w	r2, [sp, #30]
    e180:	strb.w	r2, [sp, #31]
    e184:	strb.w	r2, [sp, #32]
    e188:	add	r2, sp, #16
    e18a:	strd	r8, r9, [sp, #16]
    e18e:	bl	1a1e4 <btrfs_search_slot@@Base>
    e192:	subs	r4, r0, #0
    e194:	blt.n	e1ac <extent_from_logical@@Base+0x90>
    e196:	ldr	r0, [r7, #24]
    e198:	movs	r2, #0
    e19a:	movs	r3, #0
    e19c:	mov	r1, r5
    e19e:	bl	1b940 <btrfs_previous_extent_item@@Base>
    e1a2:	subs	r4, r0, #0
    e1a4:	beq.n	e1c0 <extent_from_logical@@Base+0xa4>
    e1a6:	ble.n	e1ac <extent_from_logical@@Base+0x90>
    e1a8:	mvn.w	r4, #1
    e1ac:	ldr	r2, [pc, #248]	; (e2a8 <extent_from_logical@@Base+0x18c>)
    e1ae:	ldr	r3, [pc, #244]	; (e2a4 <extent_from_logical@@Base+0x188>)
    e1b0:	add	r2, pc
    e1b2:	ldr	r3, [r2, r3]
    e1b4:	ldr	r2, [r3, #0]
    e1b6:	ldr	r3, [sp, #36]	; 0x24
    e1b8:	eors	r2, r3
    e1ba:	beq.n	e298 <extent_from_logical@@Base+0x17c>
    e1bc:	blx	86b8 <__stack_chk_fail@plt>
    e1c0:	ldr	r2, [r5, #32]
    e1c2:	mov	r1, r6
    e1c4:	ldr	r0, [r5, #0]
    e1c6:	bl	cdcc <repair_qgroups@@Base+0x320>
    e1ca:	ldrb	r3, [r6, #8]
    e1cc:	cmp	r3, #169	; 0xa9
    e1ce:	bne.n	e24e <extent_from_logical@@Base+0x132>
    e1d0:	ldr.w	r1, [r7, #384]	; 0x180
    e1d4:	movs	r0, #0
    e1d6:	ldr	r3, [r6, #4]
    e1d8:	ldr	r2, [r6, #0]
    e1da:	cmp	r9, r3
    e1dc:	it	eq
    e1de:	cmpeq	r8, r2
    e1e0:	bcc.n	e1a8 <extent_from_logical@@Base+0x8c>
    e1e2:	adds	r1, r2, r1
    e1e4:	str	r1, [sp, #8]
    e1e6:	adcs	r3, r0
    e1e8:	str	r3, [sp, #12]
    e1ea:	ldrd	r2, r3, [sp, #8]
    e1ee:	cmp	r9, r3
    e1f0:	it	eq
    e1f2:	cmpeq	r8, r2
    e1f4:	bcs.n	e1a8 <extent_from_logical@@Base+0x8c>
    e1f6:	ldr	r6, [r5, #0]
    e1f8:	movs	r2, #25
    e1fa:	ldr	r3, [r5, #32]
    e1fc:	adds	r6, #96	; 0x60
    e1fe:	ldr	r1, [pc, #172]	; (e2ac <extent_from_logical@@Base+0x190>)
    e200:	ldr	r0, [pc, #172]	; (e2b0 <extent_from_logical@@Base+0x194>)
    e202:	mla	r3, r2, r3, r6
    e206:	add	r1, pc
    e208:	adds	r1, #148	; 0x94
    e20a:	add	r0, pc
    e20c:	movw	r2, #1178	; 0x49a
    e210:	str	r1, [sp, #8]
    e212:	add.w	r5, r3, #101	; 0x65
    e216:	ldr.w	r3, [r3, #122]	; 0x7a
    e21a:	cmp	r3, #23
    e21c:	ite	hi
    e21e:	movhi	r3, #0
    e220:	movls	r3, #1
    e222:	bl	d038 <repair_qgroups@@Base+0x58c>
    e226:	ldr.w	r3, [r5, #17]
    e22a:	ldr	r1, [sp, #8]
    e22c:	add	r6, r3
    e22e:	ldr.w	r5, [r6, #117]	; 0x75
    e232:	cmp.w	sl, #0
    e236:	beq.n	e284 <extent_from_logical@@Base+0x168>
    e238:	and.w	r2, r5, #2
    e23c:	movs	r0, #0
    e23e:	mov	r3, r0
    e240:	orrs	r3, r2
    e242:	beq.n	e260 <extent_from_logical@@Base+0x144>
    e244:	movs	r2, #2
    e246:	movs	r3, #0
    e248:	strd	r2, r3, [sl]
    e24c:	b.n	e1ac <extent_from_logical@@Base+0x90>
    e24e:	cmp	r3, #168	; 0xa8
    e250:	iteet	ne
    e252:	movne	r1, #0
    e254:	ldreq.w	r1, [r6, #9]
    e258:	ldreq.w	r0, [r6, #13]
    e25c:	movne	r0, r1
    e25e:	b.n	e1d6 <extent_from_logical@@Base+0xba>
    e260:	and.w	r2, r5, #1
    e264:	mov	r3, r0
    e266:	orrs	r3, r2
    e268:	beq.n	e26e <extent_from_logical@@Base+0x152>
    e26a:	movs	r2, #1
    e26c:	b.n	e246 <extent_from_logical@@Base+0x12a>
    e26e:	ldr	r0, [pc, #68]	; (e2b4 <extent_from_logical@@Base+0x198>)
    e270:	mov	r2, r1
    e272:	ldr	r1, [pc, #68]	; (e2b8 <extent_from_logical@@Base+0x19c>)
    e274:	movs	r3, #1
    e276:	add	r0, pc
    e278:	str	r3, [sp, #0]
    e27a:	add	r1, pc
    e27c:	movw	r3, #1194	; 0x4aa
    e280:	bl	cf9e <repair_qgroups@@Base+0x4f2>
    e284:	ldr	r0, [pc, #52]	; (e2bc <extent_from_logical@@Base+0x1a0>)
    e286:	movs	r3, #1
    e288:	movw	r2, #1197	; 0x4ad
    e28c:	mvn.w	r4, #4
    e290:	add	r0, pc
    e292:	bl	d058 <repair_qgroups@@Base+0x5ac>
    e296:	b.n	e1ac <extent_from_logical@@Base+0x90>
    e298:	mov	r0, r4
    e29a:	add	sp, #40	; 0x28
    e29c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e2a0:	ldr	r6, [r3, #68]	; 0x44
    e2a2:	movs	r5, r0
    e2a4:	lsls	r4, r4, #8
    e2a6:	movs	r0, r0
    e2a8:	ldr	r0, [r3, #60]	; 0x3c
    e2aa:	movs	r5, r0
    e2ac:	stmia	r2!, {r0, r1, r4, r5, r6}
    e2ae:	movs	r2, r0
    e2b0:	stmia	r1!, {r1, r6}
    e2b2:	movs	r2, r0
    e2b4:	eors.w	r0, fp, #8519680	; 0x820000
    e2b8:	stmia	r0!, {r0, r1, r2, r3, r4, r5, r7}
    e2ba:	movs	r2, r0
    e2bc:	eor.w	r0, r1, #8519680	; 0x820000

0000e2c0 <tree_backref_for_extent@@Base>:
    e2c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e2c4:	mov	r5, r3
    e2c6:	ldr	r3, [r0, #0]
    e2c8:	sub	sp, #20
    e2ca:	mov	r4, r0
    e2cc:	adds	r3, #1
    e2ce:	strd	r1, r2, [sp, #8]
    e2d2:	beq.n	e32c <tree_backref_for_extent@@Base+0x6c>
    e2d4:	ldr.w	sl, [pc, #228]	; e3bc <tree_backref_for_extent@@Base+0xfc>
    e2d8:	ldr.w	fp, [pc, #228]	; e3c0 <tree_backref_for_extent@@Base+0x100>
    e2dc:	add	sl, pc
    e2de:	add.w	sl, sl, #168	; 0xa8
    e2e2:	add	fp, pc
    e2e4:	ldr	r3, [sp, #8]
    e2e6:	add.w	r6, r3, #96	; 0x60
    e2ea:	ldr	r3, [r4, #0]
    e2ec:	cbz	r3, e334 <tree_backref_for_extent@@Base+0x74>
    e2ee:	ldr	r3, [sp, #56]	; 0x38
    e2f0:	add.w	r9, r5, r3
    e2f4:	ldr	r3, [r4, #0]
    e2f6:	add.w	r8, r6, r3
    e2fa:	ldrb	r7, [r6, r3]
    e2fc:	cmp	r7, #176	; 0xb0
    e2fe:	bne.n	e37c <tree_backref_for_extent@@Base+0xbc>
    e300:	movs	r2, #9
    e302:	add	r3, r2
    e304:	str	r3, [r4, #0]
    e306:	cmp	r9, r3
    e308:	bcs.n	e31e <tree_backref_for_extent@@Base+0x5e>
    e30a:	ldr	r1, [pc, #184]	; (e3c4 <tree_backref_for_extent@@Base+0x104>)
    e30c:	movs	r3, #1
    e30e:	ldr	r0, [pc, #184]	; (e3c8 <tree_backref_for_extent@@Base+0x108>)
    e310:	movw	r2, #1247	; 0x4df
    e314:	add	r1, pc
    e316:	adds	r1, #168	; 0xa8
    e318:	add	r0, pc
    e31a:	bl	d058 <repair_qgroups@@Base+0x5ac>
    e31e:	cmp	r7, #176	; 0xb0
    e320:	ldr	r3, [r4, #0]
    e322:	beq.n	e394 <tree_backref_for_extent@@Base+0xd4>
    e324:	cmp	r7, #182	; 0xb6
    e326:	beq.n	e394 <tree_backref_for_extent@@Base+0xd4>
    e328:	cmp	r9, r3
    e32a:	bne.n	e2e4 <tree_backref_for_extent@@Base+0x24>
    e32c:	movs	r0, #1
    e32e:	add	sp, #20
    e330:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e334:	adds	r2, r6, r5
    e336:	ldr	r2, [r2, #16]
    e338:	and.w	r2, r2, #2
    e33c:	strd	r2, r3, [sp]
    e340:	ldrd	r2, r3, [sp]
    e344:	orrs	r3, r2
    e346:	beq.n	e350 <tree_backref_for_extent@@Base+0x90>
    e348:	ldr	r3, [sp, #12]
    e34a:	ldrb	r3, [r3, #8]
    e34c:	cmp	r3, #169	; 0xa9
    e34e:	bne.n	e364 <tree_backref_for_extent@@Base+0xa4>
    e350:	add.w	r3, r5, #24
    e354:	ldr	r2, [sp, #56]	; 0x38
    e356:	str	r3, [r4, #0]
    e358:	adds	r2, r5, r2
    e35a:	cmp	r3, r2
    e35c:	bcc.n	e2ee <tree_backref_for_extent@@Base+0x2e>
    e35e:	mvn.w	r0, #1
    e362:	b.n	e32e <tree_backref_for_extent@@Base+0x6e>
    e364:	cmp	r3, #168	; 0xa8
    e366:	beq.n	e376 <tree_backref_for_extent@@Base+0xb6>
    e368:	movs	r3, #1
    e36a:	movw	r2, #1229	; 0x4cd
    e36e:	mov	r1, sl
    e370:	mov	r0, fp
    e372:	bl	d058 <repair_qgroups@@Base+0x5ac>
    e376:	add.w	r3, r5, #42	; 0x2a
    e37a:	b.n	e354 <tree_backref_for_extent@@Base+0x94>
    e37c:	cmp	r7, #182	; 0xb6
    e37e:	beq.n	e300 <tree_backref_for_extent@@Base+0x40>
    e380:	cmp	r7, #184	; 0xb8
    e382:	beq.n	e38c <tree_backref_for_extent@@Base+0xcc>
    e384:	cmp	r7, #178	; 0xb2
    e386:	beq.n	e390 <tree_backref_for_extent@@Base+0xd0>
    e388:	bl	cfd4 <repair_qgroups@@Base+0x528>
    e38c:	movs	r2, #13
    e38e:	b.n	e302 <tree_backref_for_extent@@Base+0x42>
    e390:	movs	r2, #29
    e392:	b.n	e302 <tree_backref_for_extent@@Base+0x42>
    e394:	ldr.w	r1, [r8, #1]!
    e398:	add	r5, r6
    e39a:	ldr	r0, [sp, #60]	; 0x3c
    e39c:	cmp	r9, r3
    e39e:	ldr.w	r2, [r8, #4]
    e3a2:	str	r1, [r0, #0]
    e3a4:	str	r2, [r0, #4]
    e3a6:	ldr	r2, [sp, #64]	; 0x40
    e3a8:	ldrb.w	r1, [r5, #41]	; 0x29
    e3ac:	strb	r1, [r2, #0]
    e3ae:	bne.n	e3b6 <tree_backref_for_extent@@Base+0xf6>
    e3b0:	mov.w	r3, #4294967295	; 0xffffffff
    e3b4:	str	r3, [r4, #0]
    e3b6:	movs	r0, #0
    e3b8:	b.n	e32e <tree_backref_for_extent@@Base+0x6e>
    e3ba:	nop
    e3bc:	stmia	r1!, {r0, r2, r3, r4, r7}
    e3be:	movs	r2, r0
    e3c0:	stmia	r1!, {r0, r3, r5, r6}
    e3c2:	movs	r2, r0
    e3c4:	stmia	r1!, {r0, r2, r5, r6}
    e3c6:	movs	r2, r0
    e3c8:	stmia	r1!, {r1, r2, r4, r6}
    e3ca:	movs	r2, r0

0000e3cc <iterate_extent_inodes@@Base>:
    e3cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e3d0:	movs	r5, #0
    e3d2:	vpush	{d8}
    e3d6:	vmov	s16, r0
    e3da:	mov	r0, r5
    e3dc:	sub	sp, #60	; 0x3c
    e3de:	str	r3, [sp, #16]
    e3e0:	ldr	r3, [sp, #116]	; 0x74
    e3e2:	str	r2, [sp, #36]	; 0x24
    e3e4:	ldr	r2, [pc, #240]	; (e4d8 <iterate_extent_inodes@@Base+0x10c>)
    e3e6:	str	r3, [sp, #28]
    e3e8:	ldr	r3, [sp, #120]	; 0x78
    e3ea:	add	r2, pc
    e3ec:	str	r3, [sp, #32]
    e3ee:	ldr	r3, [pc, #236]	; (e4dc <iterate_extent_inodes@@Base+0x110>)
    e3f0:	ldr	r3, [r2, r3]
    e3f2:	ldr	r3, [r3, #0]
    e3f4:	str	r3, [sp, #52]	; 0x34
    e3f6:	mov.w	r3, #0
    e3fa:	str	r5, [sp, #40]	; 0x28
    e3fc:	bl	b1fc <ulist_alloc@@Base>
    e400:	mov	r4, r0
    e402:	cmp	r0, #0
    e404:	beq.n	e4c6 <iterate_extent_inodes@@Base+0xfa>
    e406:	add	r3, sp, #104	; 0x68
    e408:	str	r0, [sp, #0]
    e40a:	strd	r5, r3, [sp, #4]
    e40e:	mov	r0, r5
    e410:	vmov	r1, s16
    e414:	ldr	r2, [sp, #36]	; 0x24
    e416:	ldr	r3, [sp, #16]
    e418:	bl	d15a <repair_qgroups@@Base+0x6ae>
    e41c:	subs.w	r9, r0, #0
    e420:	bge.n	e442 <iterate_extent_inodes@@Base+0x76>
    e422:	cmn.w	r9, #2
    e426:	beq.n	e442 <iterate_extent_inodes@@Base+0x76>
    e428:	mov	r0, r4
    e42a:	bl	cd60 <repair_qgroups@@Base+0x2b4>
    e42e:	ldr	r2, [pc, #176]	; (e4e0 <iterate_extent_inodes@@Base+0x114>)
    e430:	ldr	r3, [pc, #168]	; (e4dc <iterate_extent_inodes@@Base+0x110>)
    e432:	add	r2, pc
    e434:	ldr	r3, [r2, r3]
    e436:	ldr	r2, [r3, #0]
    e438:	ldr	r3, [sp, #52]	; 0x34
    e43a:	eors	r2, r3
    e43c:	beq.n	e4cc <iterate_extent_inodes@@Base+0x100>
    e43e:	blx	86b8 <__stack_chk_fail@plt>
    e442:	add.w	r8, sp, #44	; 0x2c
    e446:	add.w	sl, sp, #40	; 0x28
    e44a:	movs	r3, #0
    e44c:	str	r3, [sp, #44]	; 0x2c
    e44e:	mov	r1, r8
    e450:	mov	r0, r4
    e452:	bl	b3fc <ulist_next@@Base>
    e456:	mov	r5, r0
    e458:	cbnz	r0, e45e <iterate_extent_inodes@@Base+0x92>
    e45a:	mov	r9, r0
    e45c:	b.n	e428 <iterate_extent_inodes@@Base+0x5c>
    e45e:	str.w	sl, [sp]
    e462:	movs	r0, #0
    e464:	vmov	r1, s16
    e468:	ldrd	r2, r3, [r5]
    e46c:	bl	dd64 <repair_qgroups@@Base+0x12b8>
    e470:	cbnz	r0, e4c2 <iterate_extent_inodes@@Base+0xf6>
    e472:	add.w	fp, sp, #48	; 0x30
    e476:	str	r0, [sp, #48]	; 0x30
    e478:	ldr	r0, [sp, #40]	; 0x28
    e47a:	mov	r1, fp
    e47c:	bl	b3fc <ulist_next@@Base>
    e480:	cbnz	r0, e492 <iterate_extent_inodes@@Base+0xc6>
    e482:	mov	r9, r0
    e484:	ldr	r0, [sp, #40]	; 0x28
    e486:	bl	b210 <ulist_free@@Base>
    e48a:	cmp.w	r9, #0
    e48e:	beq.n	e44e <iterate_extent_inodes@@Base+0x82>
    e490:	b.n	e428 <iterate_extent_inodes@@Base+0x5c>
    e492:	ldrd	r2, r3, [r0]
    e496:	ldr	r6, [r5, #8]
    e498:	strd	r2, r3, [sp, #16]
    e49c:	cmp	r6, #0
    e49e:	beq.n	e478 <iterate_extent_inodes@@Base+0xac>
    e4a0:	ldr	r3, [sp, #32]
    e4a2:	ldr	r7, [sp, #28]
    e4a4:	str	r3, [sp, #8]
    e4a6:	ldrd	r2, r3, [sp, #16]
    e4aa:	strd	r2, r3, [sp]
    e4ae:	ldrd	r2, r3, [r6, #8]
    e4b2:	ldrd	r0, r1, [r6]
    e4b6:	blx	r7
    e4b8:	mov	r9, r0
    e4ba:	cmp	r0, #0
    e4bc:	bne.n	e484 <iterate_extent_inodes@@Base+0xb8>
    e4be:	ldr	r6, [r6, #16]
    e4c0:	b.n	e49c <iterate_extent_inodes@@Base+0xd0>
    e4c2:	mov	r9, r0
    e4c4:	b.n	e428 <iterate_extent_inodes@@Base+0x5c>
    e4c6:	mvn.w	r9, #11
    e4ca:	b.n	e42e <iterate_extent_inodes@@Base+0x62>
    e4cc:	mov	r0, r9
    e4ce:	add	sp, #60	; 0x3c
    e4d0:	vpop	{d8}
    e4d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e4d8:	ldr	r6, [r3, #24]
    e4da:	movs	r5, r0
    e4dc:	lsls	r4, r4, #8
    e4de:	movs	r0, r0
    e4e0:	ldr	r6, [r2, #20]
    e4e2:	movs	r5, r0

0000e4e4 <iterate_inodes_from_logical@@Base>:
    e4e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e4e8:	mov	r7, r2
    e4ea:	ldr	r2, [pc, #144]	; (e57c <iterate_inodes_from_logical@@Base+0x98>)
    e4ec:	mov	r8, r3
    e4ee:	ldr	r3, [pc, #144]	; (e580 <iterate_inodes_from_logical@@Base+0x9c>)
    e4f0:	sub	sp, #56	; 0x38
    e4f2:	add	r2, pc
    e4f4:	mov	r5, r0
    e4f6:	mov	r6, r1
    e4f8:	ldrd	r9, sl, [sp, #88]	; 0x58
    e4fc:	ldr	r3, [r2, r3]
    e4fe:	movs	r2, #0
    e500:	ldr	r3, [r3, #0]
    e502:	str	r3, [sp, #52]	; 0x34
    e504:	mov.w	r3, #0
    e508:	movs	r3, #0
    e50a:	strd	r2, r3, [sp, #24]
    e50e:	mov	r2, r0
    e510:	add	r3, sp, #24
    e512:	mov	r0, r7
    e514:	str	r3, [sp, #8]
    e516:	add	r3, sp, #32
    e518:	strd	r8, r3, [sp]
    e51c:	mov	r3, r1
    e51e:	bl	e11c <extent_from_logical@@Base>
    e522:	mov	r4, r0
    e524:	mov	r0, r8
    e526:	bl	17e00 <btrfs_release_path@@Base>
    e52a:	cmp	r4, #0
    e52c:	blt.n	e558 <iterate_inodes_from_logical@@Base+0x74>
    e52e:	ldr	r1, [sp, #24]
    e530:	movs	r0, #0
    e532:	mov	r3, r0
    e534:	and.w	r2, r1, #2
    e538:	orrs	r3, r2
    e53a:	bne.n	e56c <iterate_inodes_from_logical@@Base+0x88>
    e53c:	ldrd	r2, r3, [sp, #32]
    e540:	str	r0, [sp, #8]
    e542:	mov	r0, r7
    e544:	subs	r5, r5, r2
    e546:	strd	r9, sl, [sp, #12]
    e54a:	sbc.w	r6, r6, r3
    e54e:	strd	r5, r6, [sp]
    e552:	bl	e3cc <iterate_extent_inodes@@Base>
    e556:	mov	r4, r0
    e558:	ldr	r2, [pc, #40]	; (e584 <iterate_inodes_from_logical@@Base+0xa0>)
    e55a:	ldr	r3, [pc, #36]	; (e580 <iterate_inodes_from_logical@@Base+0x9c>)
    e55c:	add	r2, pc
    e55e:	ldr	r3, [r2, r3]
    e560:	ldr	r2, [r3, #0]
    e562:	ldr	r3, [sp, #52]	; 0x34
    e564:	eors	r2, r3
    e566:	beq.n	e572 <iterate_inodes_from_logical@@Base+0x8e>
    e568:	blx	86b8 <__stack_chk_fail@plt>
    e56c:	mvn.w	r4, #21
    e570:	b.n	e558 <iterate_inodes_from_logical@@Base+0x74>
    e572:	mov	r0, r4
    e574:	add	sp, #56	; 0x38
    e576:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e57a:	nop
    e57c:	ldr	r6, [r2, #8]
    e57e:	movs	r5, r0
    e580:	lsls	r4, r4, #8
    e582:	movs	r0, r0
    e584:	ldr	r4, [r5, #0]
    e586:	movs	r5, r0

0000e588 <paths_from_inode@@Base>:
    e588:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e58c:	mov.w	r8, #0
    e590:	vpush	{d8-d9}
    e594:	mov.w	r9, #0
    e598:	ldr	r3, [pc, #552]	; (e7c4 <paths_from_inode@@Base+0x23c>)
    e59a:	vmov	s17, r0
    e59e:	sub	sp, #84	; 0x54
    e5a0:	vmov	s18, r1
    e5a4:	str	r2, [sp, #24]
    e5a6:	ldr	r2, [pc, #544]	; (e7c8 <paths_from_inode@@Base+0x240>)
    e5a8:	add	r2, pc
    e5aa:	ldr	r3, [r2, r3]
    e5ac:	ldr	r3, [r3, #0]
    e5ae:	str	r3, [sp, #76]	; 0x4c
    e5b0:	mov.w	r3, #0
    e5b4:	ldr	r3, [sp, #24]
    e5b6:	ldr	r3, [r3, #4]
    e5b8:	vmov	s16, r3
    e5bc:	ldr	r3, [sp, #24]
    e5be:	ldr	r4, [r3, #0]
    e5c0:	movs	r3, #0
    e5c2:	str	r3, [sp, #28]
    e5c4:	add	r3, sp, #56	; 0x38
    e5c6:	str	r3, [sp, #40]	; 0x28
    e5c8:	ldr	r3, [sp, #40]	; 0x28
    e5ca:	mov	r1, r4
    e5cc:	vmov	r2, s17
    e5d0:	vmov	r0, s16
    e5d4:	str	r3, [sp, #12]
    e5d6:	movs	r3, #12
    e5d8:	strd	r8, r9, [sp]
    e5dc:	str	r3, [sp, #8]
    e5de:	vmov	r3, s18
    e5e2:	bl	1b718 <btrfs_find_item@@Base>
    e5e6:	subs	r6, r0, #0
    e5e8:	blt.w	e720 <paths_from_inode@@Base+0x198>
    e5ec:	ldr	r3, [sp, #28]
    e5ee:	beq.n	e68c <paths_from_inode@@Base+0x104>
    e5f0:	cmp	r3, #0
    e5f2:	ite	ne
    e5f4:	movne.w	fp, #0
    e5f8:	mvneq.w	fp, #1
    e5fc:	mov	r0, r4
    e5fe:	bl	17e00 <btrfs_release_path@@Base>
    e602:	cmp.w	fp, #0
    e606:	beq.w	e72a <paths_from_inode@@Base+0x1a2>
    e60a:	cmn.w	fp, #2
    e60e:	bne.n	e676 <paths_from_inode@@Base+0xee>
    e610:	mov.w	r9, #0
    e614:	mov.w	r8, #0
    e618:	movs	r3, #0
    e61a:	movs	r2, #0
    e61c:	strd	r2, r3, [sp, #56]	; 0x38
    e620:	add	r3, sp, #56	; 0x38
    e622:	str	r3, [sp, #32]
    e624:	add	r3, sp, #52	; 0x34
    e626:	str	r3, [sp, #36]	; 0x24
    e628:	ldr	r3, [sp, #32]
    e62a:	vmov	r0, s16
    e62e:	str	r3, [sp, #16]
    e630:	ldr	r3, [sp, #36]	; 0x24
    e632:	strd	r4, r3, [sp, #8]
    e636:	ldrd	r2, r3, [sp, #56]	; 0x38
    e63a:	strd	r2, r3, [sp]
    e63e:	vmov	r2, s17
    e642:	vmov	r3, s18
    e646:	bl	de7c <btrfs_find_one_extref@@Base>
    e64a:	subs.w	fp, r0, #0
    e64e:	blt.n	e660 <paths_from_inode@@Base+0xd8>
    e650:	beq.n	e730 <paths_from_inode@@Base+0x1a8>
    e652:	cmp.w	r8, #0
    e656:	ite	ne
    e658:	movne.w	fp, #0
    e65c:	mvneq.w	fp, #1
    e660:	mov	r0, r4
    e662:	bl	17e00 <btrfs_release_path@@Base>
    e666:	cmn.w	fp, #2
    e66a:	bne.n	e676 <paths_from_inode@@Base+0xee>
    e66c:	cmp.w	r9, #0
    e670:	it	ne
    e672:	movne.w	fp, #0
    e676:	ldr	r2, [pc, #340]	; (e7cc <paths_from_inode@@Base+0x244>)
    e678:	ldr	r3, [pc, #328]	; (e7c4 <paths_from_inode@@Base+0x23c>)
    e67a:	add	r2, pc
    e67c:	ldr	r3, [r2, r3]
    e67e:	ldr	r2, [r3, #0]
    e680:	ldr	r3, [sp, #76]	; 0x4c
    e682:	eors	r2, r3
    e684:	beq.w	e7b6 <paths_from_inode@@Base+0x22e>
    e688:	blx	86b8 <__stack_chk_fail@plt>
    e68c:	ldr	r0, [r4, #0]
    e68e:	adds	r3, #1
    e690:	ldr.w	r8, [sp, #65]	; 0x41
    e694:	ldr.w	r9, [sp, #69]	; 0x45
    e698:	ldr	r7, [r4, #32]
    e69a:	str	r3, [sp, #28]
    e69c:	bl	17300 <btrfs_clone_extent_buffer@@Base>
    e6a0:	mov	r5, r0
    e6a2:	cmp	r0, #0
    e6a4:	beq.n	e724 <paths_from_inode@@Base+0x19c>
    e6a6:	ldr	r3, [r0, #80]	; 0x50
    e6a8:	mov	sl, r6
    e6aa:	adds	r3, #1
    e6ac:	str	r3, [r0, #80]	; 0x50
    e6ae:	mov	r0, r4
    e6b0:	bl	17e00 <btrfs_release_path@@Base>
    e6b4:	add.w	r3, r5, #96	; 0x60
    e6b8:	movs	r2, #25
    e6ba:	str	r3, [sp, #32]
    e6bc:	mla	r7, r2, r7, r3
    e6c0:	add.w	r3, r7, #101	; 0x65
    e6c4:	str	r3, [sp, #36]	; 0x24
    e6c6:	ldr.w	r7, [r7, #118]	; 0x76
    e6ca:	adds	r7, #101	; 0x65
    e6cc:	ldr	r3, [sp, #36]	; 0x24
    e6ce:	ldr.w	r3, [r3, #21]
    e6d2:	cmp	sl, r3
    e6d4:	bcc.n	e6f6 <paths_from_inode@@Base+0x16e>
    e6d6:	mov	fp, r6
    e6d8:	mov	r0, r5
    e6da:	bl	16bc8 <free_extent_buffer@@Base>
    e6de:	cmp.w	fp, #0
    e6e2:	bne.n	e5fc <paths_from_inode@@Base+0x74>
    e6e4:	orrs.w	r3, r8, r9
    e6e8:	beq.w	e5c8 <paths_from_inode@@Base+0x40>
    e6ec:	adds.w	r8, r8, #1
    e6f0:	adc.w	r9, r9, #0
    e6f4:	b.n	e5c8 <paths_from_inode@@Base+0x40>
    e6f6:	ldr	r3, [sp, #32]
    e6f8:	mov	r0, r8
    e6fa:	mov	r1, r9
    e6fc:	add	r3, r7
    e6fe:	ldrh	r2, [r3, #8]
    e700:	ldr	r3, [sp, #24]
    e702:	str	r2, [sp, #44]	; 0x2c
    e704:	strd	r5, r3, [sp]
    e708:	add.w	r3, r7, #10
    e70c:	bl	e0a0 <btrfs_ref_to_path@@Base+0x144>
    e710:	mov	fp, r0
    e712:	cmp	r0, #0
    e714:	bne.n	e6d8 <paths_from_inode@@Base+0x150>
    e716:	ldr	r2, [sp, #44]	; 0x2c
    e718:	adds	r2, #10
    e71a:	add	r7, r2
    e71c:	add	sl, r2
    e71e:	b.n	e6cc <paths_from_inode@@Base+0x144>
    e720:	mov	fp, r6
    e722:	b.n	e5fc <paths_from_inode@@Base+0x74>
    e724:	mvn.w	fp, #11
    e728:	b.n	e5fc <paths_from_inode@@Base+0x74>
    e72a:	mov.w	r9, #1
    e72e:	b.n	e614 <paths_from_inode@@Base+0x8c>
    e730:	ldr	r0, [r4, #0]
    e732:	add.w	r8, r8, #1
    e736:	ldr	r5, [r4, #32]
    e738:	bl	17300 <btrfs_clone_extent_buffer@@Base>
    e73c:	mov	r6, r0
    e73e:	cmp	r0, #0
    e740:	beq.n	e7b0 <paths_from_inode@@Base+0x228>
    e742:	ldr	r2, [r0, #80]	; 0x50
    e744:	adds	r2, #1
    e746:	str	r2, [r0, #80]	; 0x50
    e748:	mov	r0, r4
    e74a:	bl	17e00 <btrfs_release_path@@Base>
    e74e:	ldr	r7, [r4, #0]
    e750:	movs	r3, #25
    e752:	adds	r7, #96	; 0x60
    e754:	mla	sl, r3, r5, r7
    e758:	ldr.w	r3, [sl, #118]	; 0x76
    e75c:	ldr.w	r5, [sl, #122]	; 0x7a
    e760:	add.w	sl, r6, #96	; 0x60
    e764:	adds	r3, #101	; 0x65
    e766:	str	r3, [sp, #28]
    e768:	cmp	r5, fp
    e76a:	bls.n	e78e <paths_from_inode@@Base+0x206>
    e76c:	ldr	r3, [sp, #28]
    e76e:	ldr	r2, [sp, #24]
    e770:	add	r3, fp
    e772:	str	r3, [sp, #52]	; 0x34
    e774:	add.w	r1, sl, r3
    e778:	adds	r3, #18
    e77a:	ldrh.w	ip, [r1, #16]
    e77e:	ldr	r0, [r1, #0]
    e780:	ldr	r1, [r1, #4]
    e782:	strd	r6, r2, [sp]
    e786:	mov	r2, ip
    e788:	bl	e0a0 <btrfs_ref_to_path@@Base+0x144>
    e78c:	cbz	r0, e7a4 <paths_from_inode@@Base+0x21c>
    e78e:	mov	r0, r6
    e790:	bl	16bc8 <free_extent_buffer@@Base>
    e794:	ldr	r3, [sp, #56]	; 0x38
    e796:	ldr	r2, [sp, #60]	; 0x3c
    e798:	adds	r3, #1
    e79a:	adc.w	r2, r2, #0
    e79e:	strd	r3, r2, [sp, #56]	; 0x38
    e7a2:	b.n	e628 <paths_from_inode@@Base+0xa0>
    e7a4:	ldr	r3, [sp, #52]	; 0x34
    e7a6:	add	r3, r7
    e7a8:	ldrh	r3, [r3, #16]
    e7aa:	adds	r3, #18
    e7ac:	add	fp, r3
    e7ae:	b.n	e768 <paths_from_inode@@Base+0x1e0>
    e7b0:	mvn.w	fp, #11
    e7b4:	b.n	e660 <paths_from_inode@@Base+0xd8>
    e7b6:	mov	r0, fp
    e7b8:	add	sp, #84	; 0x54
    e7ba:	vpop	{d8-d9}
    e7be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7c2:	nop
    e7c4:	lsls	r4, r4, #8
    e7c6:	movs	r0, r0
    e7c8:	str	r0, [r4, #124]	; 0x7c
    e7ca:	movs	r5, r0
    e7cc:	str	r6, [r1, #112]	; 0x70
    e7ce:	movs	r5, r0

0000e7d0 <init_data_container@@Base>:
    e7d0:	cmp	r0, #16
    e7d2:	push	{r4, lr}
    e7d4:	mov	r4, r0
    e7d6:	it	cc
    e7d8:	movcc	r0, #16
    e7da:	blx	8820 <malloc@plt+0x4>
    e7de:	cbz	r0, e7fe <init_data_container@@Base+0x2e>
    e7e0:	cmp	r4, #15
    e7e2:	mov.w	r3, #0
    e7e6:	itete	hi
    e7e8:	subhi	r4, #16
    e7ea:	rsbls	r4, r4, #16
    e7ee:	strdhi	r4, r3, [r0]
    e7f2:	strdls	r3, r4, [r0]
    e7f6:	movs	r3, #0
    e7f8:	strd	r3, r3, [r0, #8]
    e7fc:	pop	{r4, pc}
    e7fe:	mvn.w	r0, #11
    e802:	b.n	e7fc <init_data_container@@Base+0x2c>

0000e804 <init_ipath@@Base>:
    e804:	push	{r4, r5, r6, lr}
    e806:	mov	r5, r1
    e808:	mov	r6, r2
    e80a:	bl	e7d0 <init_data_container@@Base>
    e80e:	cmn.w	r0, #4096	; 0x1000
    e812:	mov	r4, r0
    e814:	bhi.n	e828 <init_ipath@@Base+0x24>
    e816:	movs	r0, #12
    e818:	blx	8820 <malloc@plt+0x4>
    e81c:	cbnz	r0, e82c <init_ipath@@Base+0x28>
    e81e:	mov	r0, r4
    e820:	mvn.w	r4, #11
    e824:	blx	85dc <free@plt+0x4>
    e828:	mov	r0, r4
    e82a:	pop	{r4, r5, r6, pc}
    e82c:	strd	r5, r4, [r0, #4]
    e830:	mov	r4, r0
    e832:	str	r6, [r0, #0]
    e834:	b.n	e828 <init_ipath@@Base+0x24>

0000e836 <free_ipath@@Base>:
    e836:	push	{r4, lr}
    e838:	mov	r4, r0
    e83a:	cbz	r0, e84c <free_ipath@@Base+0x16>
    e83c:	ldr	r0, [r0, #8]
    e83e:	blx	85dc <free@plt+0x4>
    e842:	mov	r0, r4
    e844:	ldmia.w	sp!, {r4, lr}
    e848:	b.w	85d8 <free@plt>
    e84c:	pop	{r4, pc}
    e84e:	nop

0000e850 <table_create@@Base>:
    e850:	push	{r3, r4, r5, lr}
    e852:	mov	r4, r1
    e854:	muls	r1, r0
    e856:	mov	r5, r0
    e858:	movs	r0, #1
    e85a:	adds	r1, #2
    e85c:	lsls	r1, r1, #2
    e85e:	blx	8544 <calloc@plt+0x4>
    e862:	cbz	r0, e868 <table_create@@Base+0x18>
    e864:	strd	r5, r4, [r0]
    e868:	pop	{r3, r4, r5, pc}

0000e86a <table_vprintf@@Base>:
    e86a:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    e86c:	mov	r4, r0
    e86e:	ldr	r7, [r0, #0]
    e870:	movs	r0, #100	; 0x64
    e872:	mov	r6, r3
    e874:	mla	r7, r7, r2, r1
    e878:	movs	r1, #1
    e87a:	blx	8544 <calloc@plt+0x4>
    e87e:	mov	r5, r0
    e880:	cbz	r0, e8a2 <table_vprintf@@Base+0x38>
    e882:	add.w	r4, r4, r7, lsl #2
    e886:	ldr	r0, [r4, #8]
    e888:	cbz	r0, e88e <table_vprintf@@Base+0x24>
    e88a:	blx	85dc <free@plt+0x4>
    e88e:	ldr	r3, [sp, #32]
    e890:	movs	r2, #1
    e892:	str	r5, [r4, #8]
    e894:	movs	r1, #99	; 0x63
    e896:	mov	r0, r5
    e898:	strd	r6, r3, [sp]
    e89c:	movs	r3, #100	; 0x64
    e89e:	blx	8618 <__vsnprintf_chk@plt>
    e8a2:	mov	r0, r5
    e8a4:	add	sp, #12
    e8a6:	pop	{r4, r5, r6, r7, pc}

0000e8a8 <table_printf@@Base>:
    e8a8:	push	{r3}
    e8aa:	push	{r4, lr}
    e8ac:	sub	sp, #20
    e8ae:	ldr.w	lr, [pc, #68]	; e8f4 <table_printf@@Base+0x4c>
    e8b2:	add	r4, sp, #28
    e8b4:	ldr.w	ip, [pc, #64]	; e8f8 <table_printf@@Base+0x50>
    e8b8:	add	lr, pc
    e8ba:	ldr.w	r3, [r4], #4
    e8be:	ldr.w	ip, [lr, ip]
    e8c2:	ldr.w	ip, [ip]
    e8c6:	str.w	ip, [sp, #12]
    e8ca:	mov.w	ip, #0
    e8ce:	str	r4, [sp, #0]
    e8d0:	str	r4, [sp, #8]
    e8d2:	bl	e86a <table_vprintf@@Base>
    e8d6:	ldr	r2, [pc, #36]	; (e8fc <table_printf@@Base+0x54>)
    e8d8:	ldr	r3, [pc, #28]	; (e8f8 <table_printf@@Base+0x50>)
    e8da:	add	r2, pc
    e8dc:	ldr	r3, [r2, r3]
    e8de:	ldr	r2, [r3, #0]
    e8e0:	ldr	r3, [sp, #12]
    e8e2:	eors	r2, r3
    e8e4:	beq.n	e8ea <table_printf@@Base+0x42>
    e8e6:	blx	86b8 <__stack_chk_fail@plt>
    e8ea:	add	sp, #20
    e8ec:	ldmia.w	sp!, {r4, lr}
    e8f0:	add	sp, #4
    e8f2:	bx	lr
    e8f4:	str	r0, [r2, #76]	; 0x4c
    e8f6:	movs	r5, r0
    e8f8:	lsls	r4, r4, #8
    e8fa:	movs	r0, r0
    e8fc:	str	r6, [r5, #72]	; 0x48
    e8fe:	movs	r5, r0

0000e900 <table_dump@@Base>:
    e900:	ldr	r2, [pc, #296]	; (ea2c <table_dump@@Base+0x12c>)
    e902:	ldr	r3, [pc, #300]	; (ea30 <table_dump@@Base+0x130>)
    e904:	add	r2, pc
    e906:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e90a:	sub	sp, #28
    e90c:	ldr	r3, [r2, r3]
    e90e:	add	r7, sp, #0
    e910:	movs	r5, #0
    e912:	mov	r4, r0
    e914:	ldr	r3, [r3, #0]
    e916:	str	r3, [r7, #20]
    e918:	mov.w	r3, #0
    e91c:	ldr	r3, [r0, #0]
    e91e:	mov	lr, r5
    e920:	lsls	r2, r3, #2
    e922:	adds	r1, r2, #7
    e924:	bic.w	r1, r1, #7
    e928:	sub.w	sp, sp, r1
    e92c:	ldr	r1, [r0, #4]
    e92e:	mov	fp, sp
    e930:	sub.w	r6, fp, #4
    e934:	str	r1, [r7, #12]
    e936:	cmp	r5, r3
    e938:	blt.n	e962 <table_dump@@Base+0x62>
    e93a:	ldr.w	r8, [pc, #248]	; ea34 <table_dump@@Base+0x134>
    e93e:	movs	r6, #0
    e940:	ldr.w	r9, [pc, #244]	; ea38 <table_dump@@Base+0x138>
    e944:	add	r8, pc
    e946:	add	r9, pc
    e948:	ldr	r3, [r4, #4]
    e94a:	cmp	r6, r3
    e94c:	blt.n	ea1a <table_dump@@Base+0x11a>
    e94e:	ldr	r2, [pc, #236]	; (ea3c <table_dump@@Base+0x13c>)
    e950:	ldr	r3, [pc, #220]	; (ea30 <table_dump@@Base+0x130>)
    e952:	add	r2, pc
    e954:	ldr	r3, [r2, r3]
    e956:	ldr	r2, [r3, #0]
    e958:	ldr	r3, [r7, #20]
    e95a:	eors	r2, r3
    e95c:	beq.n	ea24 <table_dump@@Base+0x124>
    e95e:	blx	86b8 <__stack_chk_fail@plt>
    e962:	add.w	r9, r4, r5, lsl #2
    e966:	mov.w	r8, #0
    e96a:	str.w	lr, [r6, #4]!
    e96e:	ldr	r1, [r7, #12]
    e970:	cmp	r8, r1
    e972:	blt.n	e978 <table_dump@@Base+0x78>
    e974:	adds	r5, #1
    e976:	b.n	e936 <table_dump@@Base+0x36>
    e978:	ldr.w	sl, [r9, #8]
    e97c:	cmp.w	sl, #0
    e980:	beq.n	e9aa <table_dump@@Base+0xaa>
    e982:	mov	r0, sl
    e984:	strd	r2, r3, [r7, #4]
    e988:	blx	88f0 <strlen@plt>
    e98c:	ldrd	r2, r3, [r7, #4]
    e990:	mov.w	lr, #0
    e994:	subs	r0, #1
    e996:	beq.n	e9aa <table_dump@@Base+0xaa>
    e998:	ldrb.w	ip, [sl]
    e99c:	cmp.w	ip, #42	; 0x2a
    e9a0:	beq.n	e9aa <table_dump@@Base+0xaa>
    e9a2:	ldr	r1, [r6, #0]
    e9a4:	cmp	r1, r0
    e9a6:	it	lt
    e9a8:	strlt	r0, [r6, #0]
    e9aa:	add.w	r8, r8, #1
    e9ae:	add	r9, r2
    e9b0:	b.n	e96e <table_dump@@Base+0x6e>
    e9b2:	mla	r3, r3, r6, r5
    e9b6:	ldr.w	r2, [fp, r5, lsl #2]
    e9ba:	adds	r3, #2
    e9bc:	ldr.w	r3, [r4, r3, lsl #2]
    e9c0:	cbz	r3, e9c6 <table_dump@@Base+0xc6>
    e9c2:	ldrb	r1, [r3, #0]
    e9c4:	cbnz	r1, e9d2 <table_dump@@Base+0xd2>
    e9c6:	mov	r3, r8
    e9c8:	mov	r1, r9
    e9ca:	movs	r0, #1
    e9cc:	blx	89ec <__printf_chk@plt+0x4>
    e9d0:	b.n	e9de <table_dump@@Base+0xde>
    e9d2:	cmp	r1, #42	; 0x2a
    e9d4:	bne.n	ea0e <table_dump@@Base+0x10e>
    e9d6:	ldrb	r1, [r3, #1]
    e9d8:	cbz	r1, ea14 <table_dump@@Base+0x114>
    e9da:	subs	r2, #1
    e9dc:	bcs.n	e9fe <table_dump@@Base+0xfe>
    e9de:	ldr	r3, [r4, #0]
    e9e0:	subs	r3, #1
    e9e2:	cmp	r5, r3
    e9e4:	beq.n	e9ec <table_dump@@Base+0xec>
    e9e6:	movs	r0, #32
    e9e8:	blx	8988 <putchar@plt+0x4>
    e9ec:	adds	r5, #1
    e9ee:	ldr	r3, [r4, #0]
    e9f0:	cmp	r5, r3
    e9f2:	blt.n	e9b2 <table_dump@@Base+0xb2>
    e9f4:	movs	r0, #10
    e9f6:	adds	r6, #1
    e9f8:	blx	8988 <putchar@plt+0x4>
    e9fc:	b.n	e948 <table_dump@@Base+0x48>
    e9fe:	ldrb	r0, [r3, #1]
    ea00:	str	r2, [r7, #8]
    ea02:	str	r3, [r7, #12]
    ea04:	blx	8988 <putchar@plt+0x4>
    ea08:	ldrd	r2, r3, [r7, #8]
    ea0c:	b.n	e9da <table_dump@@Base+0xda>
    ea0e:	cmp	r1, #60	; 0x3c
    ea10:	it	eq
    ea12:	negeq	r2, r2
    ea14:	adds	r3, #1
    ea16:	mov	r1, sl
    ea18:	b.n	e9ca <table_dump@@Base+0xca>
    ea1a:	ldr.w	sl, [pc, #36]	; ea40 <table_dump@@Base+0x140>
    ea1e:	movs	r5, #0
    ea20:	add	sl, pc
    ea22:	b.n	e9ee <table_dump@@Base+0xee>
    ea24:	adds	r7, #28
    ea26:	mov	sp, r7
    ea28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea2c:	str	r4, [r0, #72]	; 0x48
    ea2e:	movs	r5, r0
    ea30:	lsls	r4, r4, #8
    ea32:	movs	r0, r0
    ea34:	push	{r0, r3, r6, r7, lr}
    ea36:	movs	r2, r0
    ea38:	add	r7, sp, #180	; 0xb4
    ea3a:	movs	r2, r0
    ea3c:	str	r6, [r6, #64]	; 0x40
    ea3e:	movs	r5, r0
    ea40:	add	r6, sp, #332	; 0x14c
    ea42:	movs	r2, r0

0000ea44 <table_free@@Base>:
    ea44:	push	{r3, r4, r5, r6, r7, lr}
    ea46:	add.w	r7, r0, #8
    ea4a:	ldrd	r5, r3, [r0]
    ea4e:	mov	r4, r0
    ea50:	movs	r6, #0
    ea52:	muls	r5, r3
    ea54:	cmp	r6, r5
    ea56:	blt.n	ea62 <table_free@@Base+0x1e>
    ea58:	mov	r0, r4
    ea5a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ea5e:	b.w	85d8 <free@plt>
    ea62:	ldr.w	r0, [r7], #4
    ea66:	cbz	r0, ea6c <table_free@@Base+0x28>
    ea68:	blx	85dc <free@plt+0x4>
    ea6c:	adds	r6, #1
    ea6e:	b.n	ea54 <table_free@@Base+0x10>

0000ea70 <task_init@@Base>:
    ea70:	push	{r4, r5, r6, lr}
    ea72:	mov	r5, r0
    ea74:	mov	r4, r1
    ea76:	movs	r0, #1
    ea78:	movs	r1, #32
    ea7a:	mov	r6, r2
    ea7c:	blx	8544 <calloc@plt+0x4>
    ea80:	cbz	r0, ea88 <task_init@@Base+0x18>
    ea82:	strd	r6, r5, [r0, #20]
    ea86:	str	r4, [r0, #28]
    ea88:	pop	{r4, r5, r6, pc}

0000ea8a <task_start@@Base>:
    ea8a:	push	{r4, r5, r6, lr}
    ea8c:	mov	r6, r1
    ea8e:	mov	r5, r2
    ea90:	mov	r4, r0
    ea92:	cbz	r0, eac2 <task_start@@Base+0x38>
    ea94:	ldr	r3, [r0, #24]
    ea96:	cbz	r3, eac2 <task_start@@Base+0x38>
    ea98:	cbz	r1, eaa2 <task_start@@Base+0x18>
    ea9a:	movs	r0, #0
    ea9c:	blx	8640 <time@plt>
    eaa0:	str	r0, [r6, #0]
    eaa2:	cbz	r5, eaac <task_start@@Base+0x22>
    eaa4:	movs	r2, #0
    eaa6:	movs	r3, #0
    eaa8:	strd	r2, r3, [r5]
    eaac:	ldrd	r3, r2, [r4, #20]
    eab0:	add.w	r0, r4, #16
    eab4:	movs	r1, #0
    eab6:	blx	87c4 <pthread_create@plt>
    eaba:	cbz	r0, eac0 <task_start@@Base+0x36>
    eabc:	movs	r3, #0
    eabe:	str	r3, [r4, #16]
    eac0:	pop	{r4, r5, r6, pc}
    eac2:	mov.w	r0, #4294967295	; 0xffffffff
    eac6:	b.n	eac0 <task_start@@Base+0x36>

0000eac8 <task_stop@@Base>:
    eac8:	push	{r4, lr}
    eaca:	mov	r4, r0
    eacc:	cbz	r0, eafa <task_stop@@Base+0x32>
    eace:	ldr	r0, [r0, #16]
    ead0:	cbz	r0, eae2 <task_stop@@Base+0x1a>
    ead2:	blx	89a0 <pthread_cancel@plt>
    ead6:	ldr	r0, [r4, #16]
    ead8:	movs	r1, #0
    eada:	blx	8a68 <pthread_join@plt>
    eade:	movs	r3, #0
    eae0:	str	r3, [r4, #16]
    eae2:	ldr	r0, [r4, #0]
    eae4:	cbz	r0, eaee <task_stop@@Base+0x26>
    eae6:	blx	8b4c <close@plt>
    eaea:	movs	r3, #0
    eaec:	str	r3, [r4, #0]
    eaee:	ldr	r3, [r4, #28]
    eaf0:	cbz	r3, eafa <task_stop@@Base+0x32>
    eaf2:	ldr	r0, [r4, #20]
    eaf4:	ldmia.w	sp!, {r4, lr}
    eaf8:	bx	r3
    eafa:	pop	{r4, pc}

0000eafc <task_deinit@@Base>:
    eafc:	cbz	r0, eb02 <task_deinit@@Base+0x6>
    eafe:	b.w	85d8 <free@plt>
    eb02:	bx	lr

0000eb04 <task_period_start@@Base>:
    eb04:	ldr	r2, [pc, #128]	; (eb88 <task_period_start@@Base+0x84>)
    eb06:	ldr	r3, [pc, #132]	; (eb8c <task_period_start@@Base+0x88>)
    eb08:	add	r2, pc
    eb0a:	push	{r4, r5, lr}
    eb0c:	sub	sp, #28
    eb0e:	ldr	r3, [r2, r3]
    eb10:	mov	r5, r1
    eb12:	mov	r4, r0
    eb14:	ldr	r3, [r3, #0]
    eb16:	str	r3, [sp, #20]
    eb18:	mov.w	r3, #0
    eb1c:	cbz	r0, eb76 <task_period_start@@Base+0x72>
    eb1e:	movs	r1, #0
    eb20:	movs	r0, #1
    eb22:	blx	88b4 <timerfd_create@plt>
    eb26:	mov	r3, r0
    eb28:	adds	r3, #1
    eb2a:	str	r0, [r4, #0]
    eb2c:	bne.n	eb46 <task_period_start@@Base+0x42>
    eb2e:	movs	r0, #0
    eb30:	str	r0, [r4, #0]
    eb32:	ldr	r2, [pc, #92]	; (eb90 <task_period_start@@Base+0x8c>)
    eb34:	ldr	r3, [pc, #84]	; (eb8c <task_period_start@@Base+0x88>)
    eb36:	add	r2, pc
    eb38:	ldr	r3, [r2, r3]
    eb3a:	ldr	r2, [r3, #0]
    eb3c:	ldr	r3, [sp, #20]
    eb3e:	eors	r2, r3
    eb40:	beq.n	eb7c <task_period_start@@Base+0x78>
    eb42:	blx	86b8 <__stack_chk_fail@plt>
    eb46:	movs	r2, #0
    eb48:	movs	r3, #0
    eb4a:	strd	r2, r3, [r4, #8]
    eb4e:	mov.w	r1, #1000	; 0x3e8
    eb52:	ldr	r2, [pc, #44]	; (eb80 <task_period_start@@Base+0x7c>)
    eb54:	umull	r2, r3, r5, r2
    eb58:	lsrs	r2, r3, #6
    eb5a:	ldr	r3, [pc, #40]	; (eb84 <task_period_start@@Base+0x80>)
    eb5c:	str	r2, [sp, #4]
    eb5e:	mls	r1, r1, r2, r5
    eb62:	muls	r1, r3
    eb64:	movs	r3, #0
    eb66:	strd	r1, r2, [sp, #8]
    eb6a:	add	r2, sp, #4
    eb6c:	str	r1, [sp, #16]
    eb6e:	mov	r1, r3
    eb70:	blx	8a90 <timerfd_settime@plt>
    eb74:	b.n	eb32 <task_period_start@@Base+0x2e>
    eb76:	mov.w	r0, #4294967295	; 0xffffffff
    eb7a:	b.n	eb32 <task_period_start@@Base+0x2e>
    eb7c:	add	sp, #28
    eb7e:	pop	{r4, r5, pc}
    eb80:	ldr	r5, [pc, #844]	; (eed0 <btrfs_add_link@@Base+0x118>)
    eb82:	asrs	r2, r4, #1
    eb84:	negs	r0, r0
    eb86:	movs	r7, r1
    eb88:	str	r0, [r0, #40]	; 0x28
    eb8a:	movs	r5, r0
    eb8c:	lsls	r4, r4, #8
    eb8e:	movs	r0, r0
    eb90:	str	r2, [r2, #36]	; 0x24
    eb92:	movs	r5, r0

0000eb94 <task_period_wait@@Base>:
    eb94:	push	{r0, r1, r2, r3, r4, lr}
    eb96:	mov	r4, r0
    eb98:	ldr	r2, [pc, #88]	; (ebf4 <task_period_wait@@Base+0x60>)
    eb9a:	ldr	r3, [pc, #92]	; (ebf8 <task_period_wait@@Base+0x64>)
    eb9c:	add	r2, pc
    eb9e:	ldr	r3, [r2, r3]
    eba0:	ldr	r3, [r3, #0]
    eba2:	str	r3, [sp, #12]
    eba4:	mov.w	r3, #0
    eba8:	cbz	r0, ebda <task_period_wait@@Base+0x46>
    ebaa:	ldr	r0, [r0, #0]
    ebac:	cbz	r0, ebda <task_period_wait@@Base+0x46>
    ebae:	movs	r2, #8
    ebb0:	mov	r1, sp
    ebb2:	blx	85a4 <read@plt>
    ebb6:	adds	r0, #1
    ebb8:	beq.n	ebda <task_period_wait@@Base+0x46>
    ebba:	ldrd	r2, r3, [sp]
    ebbe:	orrs.w	r1, r2, r3
    ebc2:	beq.n	ebda <task_period_wait@@Base+0x46>
    ebc4:	adds.w	r1, r2, #4294967295	; 0xffffffff
    ebc8:	adc.w	r0, r3, #4294967295	; 0xffffffff
    ebcc:	ldrd	r3, r2, [r4, #8]
    ebd0:	adds	r3, r3, r1
    ebd2:	adc.w	r2, r0, r2
    ebd6:	strd	r3, r2, [r4, #8]
    ebda:	ldr	r2, [pc, #32]	; (ebfc <task_period_wait@@Base+0x68>)
    ebdc:	ldr	r3, [pc, #24]	; (ebf8 <task_period_wait@@Base+0x64>)
    ebde:	add	r2, pc
    ebe0:	ldr	r3, [r2, r3]
    ebe2:	ldr	r2, [r3, #0]
    ebe4:	ldr	r3, [sp, #12]
    ebe6:	eors	r2, r3
    ebe8:	beq.n	ebee <task_period_wait@@Base+0x5a>
    ebea:	blx	86b8 <__stack_chk_fail@plt>
    ebee:	add	sp, #16
    ebf0:	pop	{r4, pc}
    ebf2:	nop
    ebf4:	str	r4, [r5, #28]
    ebf6:	movs	r5, r0
    ebf8:	lsls	r4, r4, #8
    ebfa:	movs	r0, r0
    ebfc:	str	r2, [r5, #24]
    ebfe:	movs	r5, r0

0000ec00 <task_period_stop@@Base>:
    ec00:	push	{r4, lr}
    ec02:	mov	r4, r0
    ec04:	cbz	r0, ec20 <task_period_stop@@Base+0x20>
    ec06:	ldr	r0, [r0, #0]
    ec08:	cbz	r0, ec20 <task_period_stop@@Base+0x20>
    ec0a:	movs	r3, #0
    ec0c:	mov	r2, r3
    ec0e:	mov	r1, r3
    ec10:	blx	8a90 <timerfd_settime@plt>
    ec14:	ldr	r0, [r4, #0]
    ec16:	blx	8b4c <close@plt>
    ec1a:	mov.w	r3, #4294967295	; 0xffffffff
    ec1e:	str	r3, [r4, #0]
    ec20:	pop	{r4, pc}
    ec22:	nop
    ec24:	push	{r4, lr}
    ec26:	mov	r4, r1
    ec28:	ldr	r1, [pc, #84]	; (ec80 <task_period_stop@@Base+0x80>)
    ec2a:	sub	sp, #24
    ec2c:	ldr	r3, [pc, #84]	; (ec84 <task_period_stop@@Base+0x84>)
    ec2e:	add	r1, pc
    ec30:	ldr	r3, [r1, r3]
    ec32:	mov	r1, sp
    ec34:	ldr	r3, [r3, #0]
    ec36:	str	r3, [sp, #20]
    ec38:	mov.w	r3, #0
    ec3c:	movs	r3, #25
    ec3e:	muls	r2, r3
    ec40:	movs	r3, #17
    ec42:	adds	r2, #101	; 0x65
    ec44:	bl	172c2 <read_extent_buffer@@Base>
    ec48:	ldr.w	r3, [sp, #13]
    ec4c:	ldr.w	r2, [sp, #9]
    ec50:	str.w	r3, [r4, #13]
    ec54:	ldrb.w	r3, [sp, #8]
    ec58:	str.w	r2, [r4, #9]
    ec5c:	ldr	r2, [pc, #40]	; (ec88 <task_period_stop@@Base+0x88>)
    ec5e:	strb	r3, [r4, #8]
    ec60:	ldr	r3, [sp, #0]
    ec62:	add	r2, pc
    ec64:	str	r3, [r4, #0]
    ec66:	ldr	r3, [sp, #4]
    ec68:	str	r3, [r4, #4]
    ec6a:	ldr	r3, [pc, #24]	; (ec84 <task_period_stop@@Base+0x84>)
    ec6c:	ldr	r3, [r2, r3]
    ec6e:	ldr	r2, [r3, #0]
    ec70:	ldr	r3, [sp, #20]
    ec72:	eors	r2, r3
    ec74:	beq.n	ec7a <task_period_stop@@Base+0x7a>
    ec76:	blx	86b8 <__stack_chk_fail@plt>
    ec7a:	add	sp, #24
    ec7c:	pop	{r4, pc}
    ec7e:	nop
    ec80:	str	r2, [r3, #20]
    ec82:	movs	r5, r0
    ec84:	lsls	r4, r4, #8
    ec86:	movs	r0, r0
    ec88:	str	r6, [r4, #16]
    ec8a:	movs	r5, r0

0000ec8c <check_dir_conflict@@Base>:
    ec8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ec90:	mov	sl, r2
    ec92:	ldr	r2, [pc, #280]	; (edac <check_dir_conflict@@Base+0x120>)
    ec94:	sub	sp, #56	; 0x38
    ec96:	ldr	r3, [pc, #280]	; (edb0 <check_dir_conflict@@Base+0x124>)
    ec98:	mov	r8, r0
    ec9a:	add	r2, pc
    ec9c:	ldrd	r6, r7, [sp, #88]	; 0x58
    eca0:	mov	r9, r1
    eca2:	ldr	r3, [r2, r3]
    eca4:	ldr	r3, [r3, #0]
    eca6:	str	r3, [sp, #52]	; 0x34
    eca8:	mov.w	r3, #0
    ecac:	bl	17df8 <btrfs_alloc_path@@Base>
    ecb0:	mov	r5, r0
    ecb2:	cmp	r0, #0
    ecb4:	beq.n	ed9c <check_dir_conflict@@Base+0x110>
    ecb6:	movs	r0, #0
    ecb8:	movs	r3, #1
    ecba:	add	r2, sp, #32
    ecbc:	strb.w	r3, [sp, #40]	; 0x28
    ecc0:	mov	r1, r8
    ecc2:	mov	r3, r5
    ecc4:	strd	r0, r0, [sp]
    ecc8:	strd	r6, r7, [sp, #32]
    eccc:	strb.w	r0, [sp, #41]	; 0x29
    ecd0:	strb.w	r0, [sp, #42]	; 0x2a
    ecd4:	strb.w	r0, [sp, #43]	; 0x2b
    ecd8:	strb.w	r0, [sp, #44]	; 0x2c
    ecdc:	strb.w	r0, [sp, #45]	; 0x2d
    ece0:	strb.w	r0, [sp, #46]	; 0x2e
    ece4:	strb.w	r0, [sp, #47]	; 0x2f
    ece8:	strb.w	r0, [sp, #48]	; 0x30
    ecec:	bl	1a1e4 <btrfs_search_slot@@Base>
    ecf0:	subs	r4, r0, #0
    ecf2:	blt.n	ed34 <check_dir_conflict@@Base+0xa8>
    ecf4:	bne.n	ed90 <check_dir_conflict@@Base+0x104>
    ecf6:	ldr	r3, [r5, #0]
    ecf8:	movs	r1, #25
    ecfa:	ldr	r2, [r5, #32]
    ecfc:	adds	r3, #96	; 0x60
    ecfe:	mla	r2, r1, r2, r3
    ed02:	ldr.w	r2, [r2, #118]	; 0x76
    ed06:	add	r3, r2
    ed08:	ldr.w	r3, [r3, #153]	; 0x99
    ed0c:	lsls	r3, r3, #17
    ed0e:	bpl.n	ed96 <check_dir_conflict@@Base+0x10a>
    ed10:	mov	r0, r5
    ed12:	bl	17e00 <btrfs_release_path@@Base>
    ed16:	mov	r2, r5
    ed18:	mov	r1, r8
    ed1a:	mov	r0, r4
    ed1c:	strd	sl, r4, [sp, #12]
    ed20:	str.w	r9, [sp, #8]
    ed24:	strd	r6, r7, [sp]
    ed28:	bl	9474 <btrfs_lookup_dir_item@@Base>
    ed2c:	cmn.w	r0, #4096	; 0x1000
    ed30:	bls.n	ed4e <check_dir_conflict@@Base+0xc2>
    ed32:	mov	r4, r0
    ed34:	mov	r0, r5
    ed36:	bl	17e26 <btrfs_free_path@@Base>
    ed3a:	ldr	r2, [pc, #120]	; (edb4 <check_dir_conflict@@Base+0x128>)
    ed3c:	ldr	r3, [pc, #112]	; (edb0 <check_dir_conflict@@Base+0x124>)
    ed3e:	add	r2, pc
    ed40:	ldr	r3, [r2, r3]
    ed42:	ldr	r2, [r3, #0]
    ed44:	ldr	r3, [sp, #52]	; 0x34
    ed46:	eors	r2, r3
    ed48:	beq.n	eda2 <check_dir_conflict@@Base+0x116>
    ed4a:	blx	86b8 <__stack_chk_fail@plt>
    ed4e:	cbnz	r0, ed8a <check_dir_conflict@@Base+0xfe>
    ed50:	mov	r0, r5
    ed52:	bl	17e00 <btrfs_release_path@@Base>
    ed56:	ldrd	r2, r3, [sp, #96]	; 0x60
    ed5a:	mov	r1, r8
    ed5c:	mov	r0, r4
    ed5e:	str	r4, [sp, #24]
    ed60:	strd	r2, r3, [sp, #16]
    ed64:	mov	r2, r5
    ed66:	strd	r9, sl, [sp, #8]
    ed6a:	strd	r6, r7, [sp]
    ed6e:	bl	955c <btrfs_lookup_dir_index@@Base>
    ed72:	cmn.w	r0, #4096	; 0x1000
    ed76:	bls.n	ed86 <check_dir_conflict@@Base+0xfa>
    ed78:	cmn.w	r0, #2
    ed7c:	it	eq
    ed7e:	moveq	r0, r4
    ed80:	cmn.w	r0, #4096	; 0x1000
    ed84:	bhi.n	ed32 <check_dir_conflict@@Base+0xa6>
    ed86:	cmp	r0, #0
    ed88:	beq.n	ed34 <check_dir_conflict@@Base+0xa8>
    ed8a:	mvn.w	r4, #16
    ed8e:	b.n	ed34 <check_dir_conflict@@Base+0xa8>
    ed90:	mvn.w	r4, #1
    ed94:	b.n	ed34 <check_dir_conflict@@Base+0xa8>
    ed96:	mvn.w	r4, #19
    ed9a:	b.n	ed34 <check_dir_conflict@@Base+0xa8>
    ed9c:	mvn.w	r4, #11
    eda0:	b.n	ed3a <check_dir_conflict@@Base+0xae>
    eda2:	mov	r0, r4
    eda4:	add	sp, #56	; 0x38
    eda6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    edaa:	nop
    edac:	str	r6, [r5, #12]
    edae:	movs	r5, r0
    edb0:	lsls	r4, r4, #8
    edb2:	movs	r0, r0
    edb4:	str	r2, [r1, #4]
    edb6:	movs	r5, r0

0000edb8 <btrfs_add_link@@Base>:
    edb8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    edbc:	sub	sp, #92	; 0x5c
    edbe:	mov	r4, r3
    edc0:	mov	r6, r2
    edc2:	ldr	r3, [sp, #148]	; 0x94
    edc4:	mov	r8, r0
    edc6:	ldr	r2, [pc, #772]	; (f0cc <btrfs_add_link@@Base+0x314>)
    edc8:	mov	r7, r1
    edca:	ldr.w	sl, [sp, #136]	; 0x88
    edce:	str	r3, [sp, #32]
    edd0:	add	r2, pc
    edd2:	ldr	r3, [pc, #764]	; (f0d0 <btrfs_add_link@@Base+0x318>)
    edd4:	ldr	r3, [r2, r3]
    edd6:	ldr	r3, [r3, #0]
    edd8:	str	r3, [sp, #84]	; 0x54
    edda:	mov.w	r3, #0
    edde:	bl	17df8 <btrfs_alloc_path@@Base>
    ede2:	mov	r5, r0
    ede4:	cmp	r0, #0
    ede6:	beq.w	f0b2 <btrfs_add_link@@Base+0x2fa>
    edea:	ldr	r3, [sp, #32]
    edec:	cbz	r3, edfc <btrfs_add_link@@Base+0x44>
    edee:	ldrd	r2, r3, [r3]
    edf2:	strd	r2, r3, [sp, #24]
    edf6:	orrs	r3, r2
    edf8:	bne.w	ef00 <btrfs_add_link@@Base+0x148>
    edfc:	bl	17df8 <btrfs_alloc_path@@Base>
    ee00:	mov	r9, r0
    ee02:	cbnz	r0, ee40 <btrfs_add_link@@Base+0x88>
    ee04:	mvn.w	fp, #11
    ee08:	movs	r3, #0
    ee0a:	movs	r4, #0
    ee0c:	strd	r3, r4, [sp, #24]
    ee10:	mov	r0, r5
    ee12:	bl	17e26 <btrfs_free_path@@Base>
    ee16:	cmp.w	fp, #0
    ee1a:	bne.n	ee2a <btrfs_add_link@@Base+0x72>
    ee1c:	ldr	r3, [sp, #32]
    ee1e:	cbz	r3, ee2a <btrfs_add_link@@Base+0x72>
    ee20:	mov	r1, r3
    ee22:	ldrd	r2, r3, [sp, #24]
    ee26:	strd	r2, r3, [r1]
    ee2a:	ldr	r2, [pc, #680]	; (f0d4 <btrfs_add_link@@Base+0x31c>)
    ee2c:	ldr	r3, [pc, #672]	; (f0d0 <btrfs_add_link@@Base+0x318>)
    ee2e:	add	r2, pc
    ee30:	ldr	r3, [r2, r3]
    ee32:	ldr	r2, [r3, #0]
    ee34:	ldr	r3, [sp, #84]	; 0x54
    ee36:	eors	r2, r3
    ee38:	beq.w	f0c2 <btrfs_add_link@@Base+0x30a>
    ee3c:	blx	86b8 <__stack_chk_fail@plt>
    ee40:	ldr	r3, [sp, #128]	; 0x80
    ee42:	mov.w	r1, #4294967295	; 0xffffffff
    ee46:	movs	r2, #96	; 0x60
    ee48:	movs	r0, #0
    ee4a:	strb.w	r2, [sp, #52]	; 0x34
    ee4e:	add	r2, sp, #44	; 0x2c
    ee50:	str	r3, [sp, #44]	; 0x2c
    ee52:	ldr	r3, [sp, #132]	; 0x84
    ee54:	strb.w	r1, [sp, #53]	; 0x35
    ee58:	strb.w	r1, [sp, #54]	; 0x36
    ee5c:	str	r3, [sp, #48]	; 0x30
    ee5e:	mov	r3, r9
    ee60:	strb.w	r1, [sp, #55]	; 0x37
    ee64:	strb.w	r1, [sp, #56]	; 0x38
    ee68:	strb.w	r1, [sp, #57]	; 0x39
    ee6c:	strb.w	r1, [sp, #58]	; 0x3a
    ee70:	strb.w	r1, [sp, #59]	; 0x3b
    ee74:	strb.w	r1, [sp, #60]	; 0x3c
    ee78:	mov	r1, r7
    ee7a:	strd	r0, r0, [sp]
    ee7e:	bl	1a1e4 <btrfs_search_slot@@Base>
    ee82:	subs.w	fp, r0, #0
    ee86:	blt.n	eea2 <btrfs_add_link@@Base+0xea>
    ee88:	ldr.w	r2, [r9, #32]
    ee8c:	cbnz	r2, eeac <btrfs_add_link@@Base+0xf4>
    ee8e:	mov	r1, r9
    ee90:	mov	r0, r7
    ee92:	bl	1b590 <btrfs_prev_leaf@@Base>
    ee96:	subs.w	fp, r0, #0
    ee9a:	blt.n	eea2 <btrfs_add_link@@Base+0xea>
    ee9c:	beq.n	eeb2 <btrfs_add_link@@Base+0xfa>
    ee9e:	mvn.w	fp, #4
    eea2:	movs	r2, #2
    eea4:	movs	r3, #0
    eea6:	strd	r2, r3, [sp, #24]
    eeaa:	b.n	eef2 <btrfs_add_link@@Base+0x13a>
    eeac:	subs	r2, #1
    eeae:	str.w	r2, [r9, #32]
    eeb2:	ldr.w	r2, [r9, #32]
    eeb6:	add	r1, sp, #64	; 0x40
    eeb8:	ldr.w	r0, [r9]
    eebc:	bl	ec24 <task_period_stop@@Base+0x24>
    eec0:	ldrd	r0, r1, [sp, #64]	; 0x40
    eec4:	ldrd	r2, r3, [sp, #128]	; 0x80
    eec8:	cmp	r3, r1
    eeca:	it	eq
    eecc:	cmpeq	r2, r0
    eece:	bne.w	f038 <btrfs_add_link@@Base+0x280>
    eed2:	ldrb.w	r2, [sp, #72]	; 0x48
    eed6:	cmp	r2, #96	; 0x60
    eed8:	bne.w	f038 <btrfs_add_link@@Base+0x280>
    eedc:	ldr.w	r2, [sp, #73]	; 0x49
    eee0:	mov.w	fp, #0
    eee4:	ldr.w	r1, [sp, #77]	; 0x4d
    eee8:	adds	r3, r2, #1
    eeea:	str	r3, [sp, #24]
    eeec:	adc.w	r3, r1, #0
    eef0:	str	r3, [sp, #28]
    eef2:	mov	r0, r9
    eef4:	bl	17e26 <btrfs_free_path@@Base>
    eef8:	cmp.w	fp, #0
    eefc:	bne.w	f0b8 <btrfs_add_link@@Base+0x300>
    ef00:	ldrd	r2, r3, [sp, #24]
    ef04:	mov	r1, sl
    ef06:	mov	r0, r7
    ef08:	strd	r2, r3, [sp, #8]
    ef0c:	ldrd	r2, r3, [sp, #128]	; 0x80
    ef10:	strd	r2, r3, [sp]
    ef14:	ldr	r2, [sp, #140]	; 0x8c
    ef16:	bl	ec8c <check_dir_conflict@@Base>
    ef1a:	subs.w	fp, r0, #0
    ef1e:	bge.n	ef30 <btrfs_add_link@@Base+0x178>
    ef20:	ldr	r3, [sp, #156]	; 0x9c
    ef22:	cmp	r3, #0
    ef24:	beq.w	ee10 <btrfs_add_link@@Base+0x58>
    ef28:	cmn.w	fp, #17
    ef2c:	bne.w	ee10 <btrfs_add_link@@Base+0x58>
    ef30:	ldr	r3, [sp, #152]	; 0x98
    ef32:	cbz	r3, ef6a <btrfs_add_link@@Base+0x1b2>
    ef34:	ldrd	r2, r3, [sp, #24]
    ef38:	mov	r1, r7
    ef3a:	mov	r0, r8
    ef3c:	strd	r6, r4, [sp]
    ef40:	strd	r2, r3, [sp, #16]
    ef44:	ldrd	r2, r3, [sp, #128]	; 0x80
    ef48:	strd	r2, r3, [sp, #8]
    ef4c:	mov	r2, sl
    ef4e:	ldr	r3, [sp, #140]	; 0x8c
    ef50:	bl	2dc1c <btrfs_insert_inode_ref@@Base>
    ef54:	subs.w	fp, r0, #0
    ef58:	bge.n	f03e <btrfs_add_link@@Base+0x286>
    ef5a:	ldr	r3, [sp, #156]	; 0x9c
    ef5c:	cmp	r3, #0
    ef5e:	beq.w	ee10 <btrfs_add_link@@Base+0x58>
    ef62:	cmn.w	fp, #17
    ef66:	bne.w	ee10 <btrfs_add_link@@Base+0x58>
    ef6a:	ldrd	r2, r3, [sp, #24]
    ef6e:	mov	r1, r7
    ef70:	mov	r0, r8
    ef72:	strd	r6, r4, [sp, #64]	; 0x40
    ef76:	mov.w	r9, #1
    ef7a:	movs	r4, #0
    ef7c:	strd	r2, r3, [sp, #16]
    ef80:	add.w	r6, sp, #73	; 0x49
    ef84:	ldrb.w	r3, [sp, #144]	; 0x90
    ef88:	strb.w	r9, [sp, #72]	; 0x48
    ef8c:	strb.w	r4, [sp, #73]	; 0x49
    ef90:	str	r3, [sp, #12]
    ef92:	add	r3, sp, #64	; 0x40
    ef94:	str	r3, [sp, #36]	; 0x24
    ef96:	str	r3, [sp, #8]
    ef98:	ldrd	r2, r3, [sp, #128]	; 0x80
    ef9c:	strb.w	r4, [sp, #74]	; 0x4a
    efa0:	strb.w	r4, [sp, #75]	; 0x4b
    efa4:	strd	r2, r3, [sp]
    efa8:	mov	r2, sl
    efaa:	ldr	r3, [sp, #140]	; 0x8c
    efac:	strb.w	r4, [sp, #76]	; 0x4c
    efb0:	strb.w	r4, [sp, #77]	; 0x4d
    efb4:	strb.w	r4, [sp, #78]	; 0x4e
    efb8:	strb.w	r4, [sp, #79]	; 0x4f
    efbc:	strb.w	r4, [sp, #80]	; 0x50
    efc0:	bl	92c4 <btrfs_insert_dir_item@@Base>
    efc4:	subs.w	fp, r0, #0
    efc8:	blt.w	ee10 <btrfs_add_link@@Base+0x58>
    efcc:	ldrd	r2, r3, [sp, #128]	; 0x80
    efd0:	mov	r1, r7
    efd2:	strb	r4, [r6, #1]
    efd4:	mov	r0, r8
    efd6:	strb	r4, [r6, #2]
    efd8:	strd	r2, r3, [sp, #64]	; 0x40
    efdc:	mov	r3, r5
    efde:	strb	r4, [r6, #3]
    efe0:	strb	r4, [r6, #4]
    efe2:	strb	r4, [r6, #5]
    efe4:	strb	r4, [r6, #6]
    efe6:	strb	r4, [r6, #7]
    efe8:	ldr	r2, [sp, #36]	; 0x24
    efea:	strd	r9, r9, [sp]
    efee:	strb.w	r9, [sp, #72]	; 0x48
    eff2:	strb.w	r4, [sp, #73]	; 0x49
    eff6:	bl	1a1e4 <btrfs_search_slot@@Base>
    effa:	mov	fp, r0
    effc:	cmp	r0, #0
    effe:	bne.w	ee10 <btrfs_add_link@@Base+0x58>
    f002:	ldr	r3, [r5, #0]
    f004:	movs	r0, #25
    f006:	ldr	r1, [r5, #32]
    f008:	adds	r3, #96	; 0x60
    f00a:	ldr	r2, [sp, #140]	; 0x8c
    f00c:	mla	r1, r0, r1, r3
    f010:	lsl.w	r4, r2, r9
    f014:	ldr.w	r1, [r1, #118]	; 0x76
    f018:	adds	r1, #101	; 0x65
    f01a:	add	r3, r1
    f01c:	ldr	r0, [r3, #16]
    f01e:	ldr	r1, [r3, #20]
    f020:	adds	r0, r0, r4
    f022:	str	r0, [r3, #16]
    f024:	adc.w	r1, r1, r4, asr #31
    f028:	str	r1, [r3, #20]
    f02a:	ldr	r0, [r5, #0]
    f02c:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f030:	mov	r0, r5
    f032:	bl	17e00 <btrfs_release_path@@Base>
    f036:	b.n	ee10 <btrfs_add_link@@Base+0x58>
    f038:	mov.w	fp, #0
    f03c:	b.n	eea2 <btrfs_add_link@@Base+0xea>
    f03e:	bne.n	ef6a <btrfs_add_link@@Base+0x1b2>
    f040:	movs	r1, #1
    f042:	add	r2, sp, #64	; 0x40
    f044:	strb.w	r1, [sp, #72]	; 0x48
    f048:	mov	r3, r5
    f04a:	strd	r1, r1, [sp]
    f04e:	mov	r0, r8
    f050:	mov	r1, r7
    f052:	strb.w	fp, [sp, #73]	; 0x49
    f056:	strb.w	fp, [sp, #74]	; 0x4a
    f05a:	strb.w	fp, [sp, #75]	; 0x4b
    f05e:	strb.w	fp, [sp, #76]	; 0x4c
    f062:	strb.w	fp, [sp, #77]	; 0x4d
    f066:	strb.w	fp, [sp, #78]	; 0x4e
    f06a:	strb.w	fp, [sp, #79]	; 0x4f
    f06e:	strb.w	fp, [sp, #80]	; 0x50
    f072:	strd	r6, r4, [sp, #64]	; 0x40
    f076:	bl	1a1e4 <btrfs_search_slot@@Base>
    f07a:	subs.w	fp, r0, #0
    f07e:	beq.n	f08a <btrfs_add_link@@Base+0x2d2>
    f080:	ble.w	ee10 <btrfs_add_link@@Base+0x58>
    f084:	mvn.w	fp, #1
    f088:	b.n	ee10 <btrfs_add_link@@Base+0x58>
    f08a:	ldr	r3, [r5, #0]
    f08c:	movs	r1, #25
    f08e:	ldr	r2, [r5, #32]
    f090:	adds	r3, #96	; 0x60
    f092:	mla	r2, r1, r2, r3
    f096:	ldr.w	r2, [r2, #118]	; 0x76
    f09a:	adds	r2, #101	; 0x65
    f09c:	add	r3, r2
    f09e:	ldr	r2, [r3, #40]	; 0x28
    f0a0:	adds	r2, #1
    f0a2:	str	r2, [r3, #40]	; 0x28
    f0a4:	ldr	r0, [r5, #0]
    f0a6:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f0aa:	mov	r0, r5
    f0ac:	bl	17e00 <btrfs_release_path@@Base>
    f0b0:	b.n	ef6a <btrfs_add_link@@Base+0x1b2>
    f0b2:	mvn.w	fp, #11
    f0b6:	b.n	ee2a <btrfs_add_link@@Base+0x72>
    f0b8:	movs	r3, #0
    f0ba:	movs	r4, #0
    f0bc:	strd	r3, r4, [sp, #24]
    f0c0:	b.n	ee10 <btrfs_add_link@@Base+0x58>
    f0c2:	mov	r0, fp
    f0c4:	add	sp, #92	; 0x5c
    f0c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f0ca:	nop
    f0cc:	ldrsh	r0, [r7, r6]
    f0ce:	movs	r5, r0
    f0d0:	lsls	r4, r4, #8
    f0d2:	movs	r0, r0
    f0d4:	ldrsh	r2, [r3, r5]
    f0d6:	movs	r5, r0

0000f0d8 <btrfs_add_orphan_item@@Base>:
    f0d8:	push	{r4, r5, lr}
    f0da:	sub	sp, #44	; 0x2c
    f0dc:	ldr	r4, [pc, #84]	; (f134 <btrfs_add_orphan_item@@Base+0x5c>)
    f0de:	mov.w	r5, #4294967295	; 0xffffffff
    f0e2:	ldr	r3, [pc, #84]	; (f138 <btrfs_add_orphan_item@@Base+0x60>)
    f0e4:	add	r4, pc
    f0e6:	ldr	r3, [r4, r3]
    f0e8:	mvn.w	r4, #4
    f0ec:	ldr	r3, [r3, #0]
    f0ee:	str	r3, [sp, #36]	; 0x24
    f0f0:	mov.w	r3, #0
    f0f4:	movs	r3, #48	; 0x30
    f0f6:	strb.w	r3, [sp, #24]
    f0fa:	ldr	r3, [sp, #56]	; 0x38
    f0fc:	strd	r4, r5, [sp, #16]
    f100:	str.w	r3, [sp, #25]
    f104:	ldr	r3, [sp, #60]	; 0x3c
    f106:	str.w	r3, [sp, #29]
    f10a:	movs	r3, #0
    f10c:	str	r3, [sp, #12]
    f10e:	movs	r3, #1
    f110:	str	r3, [sp, #4]
    f112:	add	r3, sp, #12
    f114:	str	r3, [sp, #0]
    f116:	add	r3, sp, #16
    f118:	bl	1afb4 <btrfs_insert_empty_items@@Base>
    f11c:	ldr	r2, [pc, #28]	; (f13c <btrfs_add_orphan_item@@Base+0x64>)
    f11e:	ldr	r3, [pc, #24]	; (f138 <btrfs_add_orphan_item@@Base+0x60>)
    f120:	add	r2, pc
    f122:	ldr	r3, [r2, r3]
    f124:	ldr	r2, [r3, #0]
    f126:	ldr	r3, [sp, #36]	; 0x24
    f128:	eors	r2, r3
    f12a:	beq.n	f130 <btrfs_add_orphan_item@@Base+0x58>
    f12c:	blx	86b8 <__stack_chk_fail@plt>
    f130:	add	sp, #44	; 0x2c
    f132:	pop	{r4, r5, pc}
    f134:	ldrb	r4, [r4, r2]
    f136:	movs	r5, r0
    f138:	lsls	r4, r4, #8
    f13a:	movs	r0, r0
    f13c:	ldrb	r0, [r5, r1]
    f13e:	movs	r5, r0

0000f140 <btrfs_unlink@@Base>:
    f140:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f144:	sub	sp, #76	; 0x4c
    f146:	mov	r6, r0
    f148:	mov	sl, r1
    f14a:	strd	r2, r3, [sp, #40]	; 0x28
    f14e:	ldr	r2, [pc, #896]	; (f4d0 <btrfs_unlink@@Base+0x390>)
    f150:	ldr	r3, [pc, #896]	; (f4d4 <btrfs_unlink@@Base+0x394>)
    f152:	add	r2, pc
    f154:	ldrd	r7, r5, [sp, #128]	; 0x80
    f158:	ldr	r3, [r2, r3]
    f15a:	ldr	r3, [r3, #0]
    f15c:	str	r3, [sp, #68]	; 0x44
    f15e:	mov.w	r3, #0
    f162:	bl	17df8 <btrfs_alloc_path@@Base>
    f166:	mov	r4, r0
    f168:	cmp	r0, #0
    f16a:	beq.w	f4b6 <btrfs_unlink@@Base+0x376>
    f16e:	ldrd	r2, r3, [sp, #112]	; 0x70
    f172:	mov.w	r9, #0
    f176:	mov	r1, sl
    f178:	str.w	r9, [sp, #24]
    f17c:	str	r5, [sp, #0]
    f17e:	strd	r2, r3, [sp, #16]
    f182:	mov	r2, r0
    f184:	ldr	r3, [sp, #40]	; 0x28
    f186:	mov	r0, r6
    f188:	str	r3, [sp, #8]
    f18a:	ldr	r3, [sp, #44]	; 0x2c
    f18c:	str	r3, [sp, #12]
    f18e:	mov	r3, r7
    f190:	bl	2d890 <btrfs_lookup_inode_ref@@Base>
    f194:	cmn.w	r0, #4096	; 0x1000
    f198:	mov	fp, r0
    f19a:	bhi.n	f278 <btrfs_unlink@@Base+0x138>
    f19c:	mov	r0, r4
    f19e:	bl	17e00 <btrfs_release_path@@Base>
    f1a2:	ldrd	r2, r3, [sp, #112]	; 0x70
    f1a6:	mov	r1, sl
    f1a8:	mov	r0, r9
    f1aa:	strd	r5, r9, [sp, #12]
    f1ae:	strd	r2, r3, [sp]
    f1b2:	mov	r2, r4
    f1b4:	str	r7, [sp, #8]
    f1b6:	bl	9474 <btrfs_lookup_dir_item@@Base>
    f1ba:	cmn.w	r0, #4096	; 0x1000
    f1be:	mov	r3, r0
    f1c0:	str	r0, [sp, #36]	; 0x24
    f1c2:	bls.n	f1c8 <btrfs_unlink@@Base+0x88>
    f1c4:	mov	fp, r3
    f1c6:	b.n	f278 <btrfs_unlink@@Base+0x138>
    f1c8:	mov	r0, r4
    f1ca:	bl	17e00 <btrfs_release_path@@Base>
    f1ce:	ldrd	r2, r3, [sp, #120]	; 0x78
    f1d2:	mov	r1, sl
    f1d4:	mov	r0, r9
    f1d6:	str.w	r9, [sp, #24]
    f1da:	strd	r2, r3, [sp, #16]
    f1de:	ldrd	r2, r3, [sp, #112]	; 0x70
    f1e2:	strd	r7, r5, [sp, #8]
    f1e6:	strd	r2, r3, [sp]
    f1ea:	mov	r2, r4
    f1ec:	bl	955c <btrfs_lookup_dir_index@@Base>
    f1f0:	cmn.w	r0, #4096	; 0x1000
    f1f4:	mov	r8, r0
    f1f6:	bls.n	f200 <btrfs_unlink@@Base+0xc0>
    f1f8:	cmn.w	r0, #2
    f1fc:	bne.n	f270 <btrfs_unlink@@Base+0x130>
    f1fe:	mov	r8, r9
    f200:	ldr	r3, [sp, #36]	; 0x24
    f202:	mov	r0, r4
    f204:	orr.w	r9, fp, r3
    f208:	orr.w	r9, r8, r9
    f20c:	bl	17e00 <btrfs_release_path@@Base>
    f210:	cmp.w	r9, #0
    f214:	beq.n	f26a <btrfs_unlink@@Base+0x12a>
    f216:	cmp.w	fp, #0
    f21a:	beq.w	f4bc <btrfs_unlink@@Base+0x37c>
    f21e:	ldr	r3, [sp, #40]	; 0x28
    f220:	movs	r2, #0
    f222:	movs	r1, #1
    f224:	strb.w	r2, [sp, #57]	; 0x39
    f228:	strb.w	r1, [sp, #56]	; 0x38
    f22c:	mov	r0, r6
    f22e:	str	r3, [sp, #48]	; 0x30
    f230:	ldr	r3, [sp, #44]	; 0x2c
    f232:	strb.w	r2, [sp, #58]	; 0x3a
    f236:	strb.w	r2, [sp, #59]	; 0x3b
    f23a:	str	r3, [sp, #52]	; 0x34
    f23c:	mov.w	r3, #4294967295	; 0xffffffff
    f240:	strb.w	r2, [sp, #60]	; 0x3c
    f244:	strb.w	r2, [sp, #61]	; 0x3d
    f248:	strb.w	r2, [sp, #62]	; 0x3e
    f24c:	strb.w	r2, [sp, #63]	; 0x3f
    f250:	strb.w	r2, [sp, #64]	; 0x40
    f254:	add	r2, sp, #48	; 0x30
    f256:	str	r1, [sp, #4]
    f258:	mov	r1, sl
    f25a:	str	r3, [sp, #0]
    f25c:	mov	r3, r4
    f25e:	bl	1a1e4 <btrfs_search_slot@@Base>
    f262:	subs.w	fp, r0, #0
    f266:	beq.n	f294 <btrfs_unlink@@Base+0x154>
    f268:	ble.n	f278 <btrfs_unlink@@Base+0x138>
    f26a:	mvn.w	fp, #1
    f26e:	b.n	f278 <btrfs_unlink@@Base+0x138>
    f270:	cmn.w	r0, #4096	; 0x1000
    f274:	bls.n	f200 <btrfs_unlink@@Base+0xc0>
    f276:	mov	fp, r0
    f278:	mov	r0, r4
    f27a:	bl	17e26 <btrfs_free_path@@Base>
    f27e:	ldr	r2, [pc, #600]	; (f4d8 <btrfs_unlink@@Base+0x398>)
    f280:	ldr	r3, [pc, #592]	; (f4d4 <btrfs_unlink@@Base+0x394>)
    f282:	add	r2, pc
    f284:	ldr	r3, [r2, r3]
    f286:	ldr	r2, [r3, #0]
    f288:	ldr	r3, [sp, #68]	; 0x44
    f28a:	eors	r2, r3
    f28c:	beq.w	f4c6 <btrfs_unlink@@Base+0x386>
    f290:	blx	86b8 <__stack_chk_fail@plt>
    f294:	ldr	r3, [r4, #0]
    f296:	movs	r1, #25
    f298:	ldr	r2, [r4, #32]
    f29a:	adds	r3, #96	; 0x60
    f29c:	mla	r2, r1, r2, r3
    f2a0:	ldr.w	r2, [r2, #118]	; 0x76
    f2a4:	adds	r2, #101	; 0x65
    f2a6:	add	r3, r2
    f2a8:	ldr.w	r9, [r3, #40]	; 0x28
    f2ac:	cmp.w	r9, #0
    f2b0:	beq.n	f2b6 <btrfs_unlink@@Base+0x176>
    f2b2:	add.w	r9, r9, #4294967295	; 0xffffffff
    f2b6:	str.w	r9, [r3, #40]	; 0x28
    f2ba:	ldr	r0, [r4, #0]
    f2bc:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f2c0:	mov	r0, r4
    f2c2:	bl	17e00 <btrfs_release_path@@Base>
    f2c6:	cmp.w	r9, #0
    f2ca:	bne.n	f2f4 <btrfs_unlink@@Base+0x1b4>
    f2cc:	ldr	r3, [sp, #136]	; 0x88
    f2ce:	cbz	r3, f2f4 <btrfs_unlink@@Base+0x1b4>
    f2d0:	ldr	r3, [sp, #40]	; 0x28
    f2d2:	mov	r2, r4
    f2d4:	mov	r1, sl
    f2d6:	mov	r0, r6
    f2d8:	str	r3, [sp, #0]
    f2da:	ldr	r3, [sp, #44]	; 0x2c
    f2dc:	str	r3, [sp, #4]
    f2de:	bl	f0d8 <btrfs_add_orphan_item@@Base>
    f2e2:	subs.w	fp, r0, #0
    f2e6:	blt.n	f278 <btrfs_unlink@@Base+0x138>
    f2e8:	ldr	r0, [r4, #0]
    f2ea:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f2ee:	mov	r0, r4
    f2f0:	bl	17e00 <btrfs_release_path@@Base>
    f2f4:	add	r3, sp, #120	; 0x78
    f2f6:	str	r3, [sp, #16]
    f2f8:	ldrd	r2, r3, [sp, #112]	; 0x70
    f2fc:	mov	r1, sl
    f2fe:	mov	r0, r6
    f300:	strd	r2, r3, [sp, #8]
    f304:	mov	r2, r7
    f306:	ldr	r3, [sp, #40]	; 0x28
    f308:	str	r3, [sp, #0]
    f30a:	ldr	r3, [sp, #44]	; 0x2c
    f30c:	str	r3, [sp, #4]
    f30e:	mov	r3, r5
    f310:	bl	2ddf8 <btrfs_del_inode_ref@@Base>
    f314:	subs.w	fp, r0, #0
    f318:	blt.n	f278 <btrfs_unlink@@Base+0x138>
    f31a:	cmp.w	r8, #0
    f31e:	beq.n	f3e8 <btrfs_unlink@@Base+0x2a8>
    f320:	mov.w	r3, #4294967295	; 0xffffffff
    f324:	str	r3, [sp, #24]
    f326:	ldrd	r2, r3, [sp, #120]	; 0x78
    f32a:	mov	r1, sl
    f32c:	mov	r0, r6
    f32e:	strd	r7, r5, [sp, #8]
    f332:	strd	r2, r3, [sp, #16]
    f336:	ldrd	r2, r3, [sp, #112]	; 0x70
    f33a:	strd	r2, r3, [sp]
    f33e:	mov	r2, r4
    f340:	bl	955c <btrfs_lookup_dir_index@@Base>
    f344:	cmn.w	r0, #4096	; 0x1000
    f348:	mov	r3, r0
    f34a:	bhi.w	f1c4 <btrfs_unlink@@Base+0x84>
    f34e:	cmp	r0, #0
    f350:	beq.n	f26a <btrfs_unlink@@Base+0x12a>
    f352:	mov	r2, r4
    f354:	mov	r1, sl
    f356:	mov	r0, r6
    f358:	bl	8e94 <btrfs_delete_one_dir_name@@Base>
    f35c:	mov	fp, r0
    f35e:	cmp	r0, #0
    f360:	bne.n	f278 <btrfs_unlink@@Base+0x138>
    f362:	mov	r0, r4
    f364:	bl	17e00 <btrfs_release_path@@Base>
    f368:	ldrd	r2, r3, [sp, #112]	; 0x70
    f36c:	mov	r1, sl
    f36e:	mov	r0, r6
    f370:	strb.w	fp, [sp, #57]	; 0x39
    f374:	strd	r2, r3, [sp, #48]	; 0x30
    f378:	movs	r2, #1
    f37a:	mov	r3, r4
    f37c:	strb.w	r2, [sp, #56]	; 0x38
    f380:	strd	r2, r2, [sp]
    f384:	add	r2, sp, #48	; 0x30
    f386:	strb.w	fp, [sp, #58]	; 0x3a
    f38a:	strb.w	fp, [sp, #59]	; 0x3b
    f38e:	strb.w	fp, [sp, #60]	; 0x3c
    f392:	strb.w	fp, [sp, #61]	; 0x3d
    f396:	strb.w	fp, [sp, #62]	; 0x3e
    f39a:	strb.w	fp, [sp, #63]	; 0x3f
    f39e:	strb.w	fp, [sp, #64]	; 0x40
    f3a2:	bl	1a1e4 <btrfs_search_slot@@Base>
    f3a6:	mov	fp, r0
    f3a8:	cmp	r0, #0
    f3aa:	bne.w	f278 <btrfs_unlink@@Base+0x138>
    f3ae:	ldr	r1, [r4, #0]
    f3b0:	movs	r2, #25
    f3b2:	ldr	r3, [r4, #32]
    f3b4:	mov.w	r9, r5, asr #31
    f3b8:	adds	r1, #96	; 0x60
    f3ba:	mla	r3, r2, r3, r1
    f3be:	ldr.w	r3, [r3, #118]	; 0x76
    f3c2:	adds	r3, #101	; 0x65
    f3c4:	add	r1, r3
    f3c6:	ldr	r3, [r1, #20]
    f3c8:	ldr	r2, [r1, #16]
    f3ca:	cmp	r3, r9
    f3cc:	it	eq
    f3ce:	cmpeq	r2, r5
    f3d0:	bcc.n	f3d8 <btrfs_unlink@@Base+0x298>
    f3d2:	subs	r2, r2, r5
    f3d4:	sbc.w	r3, r3, r9
    f3d8:	str	r2, [r1, #16]
    f3da:	str	r3, [r1, #20]
    f3dc:	ldr	r0, [r4, #0]
    f3de:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f3e2:	mov	r0, r4
    f3e4:	bl	17e00 <btrfs_release_path@@Base>
    f3e8:	ldr	r3, [sp, #36]	; 0x24
    f3ea:	cmp	r3, #0
    f3ec:	beq.w	f278 <btrfs_unlink@@Base+0x138>
    f3f0:	mov.w	r3, #4294967295	; 0xffffffff
    f3f4:	strd	r5, r3, [sp, #12]
    f3f8:	ldrd	r2, r3, [sp, #112]	; 0x70
    f3fc:	mov	r1, sl
    f3fe:	mov	r0, r6
    f400:	str	r7, [sp, #8]
    f402:	strd	r2, r3, [sp]
    f406:	mov	r2, r4
    f408:	bl	9474 <btrfs_lookup_dir_item@@Base>
    f40c:	cmn.w	r0, #4096	; 0x1000
    f410:	mov	r3, r0
    f412:	bhi.w	f1c4 <btrfs_unlink@@Base+0x84>
    f416:	cmp	r0, #0
    f418:	beq.w	f26a <btrfs_unlink@@Base+0x12a>
    f41c:	mov	r2, r4
    f41e:	mov	r1, sl
    f420:	mov	r0, r6
    f422:	bl	8e94 <btrfs_delete_one_dir_name@@Base>
    f426:	subs.w	fp, r0, #0
    f42a:	blt.w	f278 <btrfs_unlink@@Base+0x138>
    f42e:	mov	r0, r4
    f430:	bl	17e00 <btrfs_release_path@@Base>
    f434:	ldrd	r2, r3, [sp, #112]	; 0x70
    f438:	movs	r1, #1
    f43a:	mov	r0, r6
    f43c:	strb.w	r1, [sp, #56]	; 0x38
    f440:	strd	r2, r3, [sp, #48]	; 0x30
    f444:	movs	r2, #0
    f446:	strd	r1, r1, [sp]
    f44a:	mov	r3, r4
    f44c:	strb.w	r2, [sp, #57]	; 0x39
    f450:	mov	r1, sl
    f452:	strb.w	r2, [sp, #58]	; 0x3a
    f456:	strb.w	r2, [sp, #59]	; 0x3b
    f45a:	strb.w	r2, [sp, #60]	; 0x3c
    f45e:	strb.w	r2, [sp, #61]	; 0x3d
    f462:	strb.w	r2, [sp, #62]	; 0x3e
    f466:	strb.w	r2, [sp, #63]	; 0x3f
    f46a:	strb.w	r2, [sp, #64]	; 0x40
    f46e:	add	r2, sp, #48	; 0x30
    f470:	bl	1a1e4 <btrfs_search_slot@@Base>
    f474:	mov	fp, r0
    f476:	cmp	r0, #0
    f478:	bne.w	f278 <btrfs_unlink@@Base+0x138>
    f47c:	ldr	r1, [r4, #0]
    f47e:	movs	r2, #25
    f480:	ldr	r3, [r4, #32]
    f482:	asrs	r7, r5, #31
    f484:	adds	r1, #96	; 0x60
    f486:	mla	r3, r2, r3, r1
    f48a:	ldr.w	r3, [r3, #118]	; 0x76
    f48e:	adds	r3, #101	; 0x65
    f490:	add	r1, r3
    f492:	ldr	r3, [r1, #20]
    f494:	ldr	r2, [r1, #16]
    f496:	cmp	r3, r7
    f498:	it	eq
    f49a:	cmpeq	r2, r5
    f49c:	bcc.n	f4a4 <btrfs_unlink@@Base+0x364>
    f49e:	subs	r2, r2, r5
    f4a0:	sbc.w	r3, r3, r7
    f4a4:	str	r2, [r1, #16]
    f4a6:	str	r3, [r1, #20]
    f4a8:	ldr	r0, [r4, #0]
    f4aa:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f4ae:	mov	r0, r4
    f4b0:	bl	17e00 <btrfs_release_path@@Base>
    f4b4:	b.n	f278 <btrfs_unlink@@Base+0x138>
    f4b6:	mvn.w	fp, #11
    f4ba:	b.n	f27e <btrfs_unlink@@Base+0x13e>
    f4bc:	cmp.w	r8, #0
    f4c0:	bne.w	f320 <btrfs_unlink@@Base+0x1e0>
    f4c4:	b.n	f3f0 <btrfs_unlink@@Base+0x2b0>
    f4c6:	mov	r0, fp
    f4c8:	add	sp, #76	; 0x4c
    f4ca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f4ce:	nop
    f4d0:	ldrb	r6, [r6, r0]
    f4d2:	movs	r5, r0
    f4d4:	lsls	r4, r4, #8
    f4d6:	movs	r0, r0
    f4d8:	ldrh	r6, [r0, r4]
    f4da:	movs	r5, r0

0000f4dc <btrfs_new_inode@@Base>:
    f4dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f4e0:	mov	r9, r2
    f4e2:	ldr	r2, [pc, #124]	; (f560 <btrfs_new_inode@@Base+0x84>)
    f4e4:	mov	r8, r3
    f4e6:	ldr	r3, [pc, #124]	; (f564 <btrfs_new_inode@@Base+0x88>)
    f4e8:	sub	sp, #180	; 0xb4
    f4ea:	add	r2, pc
    f4ec:	add	r6, sp, #12
    f4ee:	mov	r5, r0
    f4f0:	mov	r7, r1
    f4f2:	ldr	r3, [r2, r3]
    f4f4:	movs	r1, #0
    f4f6:	mov	r0, r6
    f4f8:	movs	r2, #160	; 0xa0
    f4fa:	ldr	r3, [r3, #0]
    f4fc:	str	r3, [sp, #172]	; 0xac
    f4fe:	mov.w	r3, #0
    f502:	blx	8978 <memset@plt+0x4>
    f506:	movs	r0, #0
    f508:	movs	r4, #0
    f50a:	blx	8640 <time@plt>
    f50e:	ldr	r3, [r5, #8]
    f510:	mov	r2, r9
    f512:	mov	r1, r7
    f514:	str	r6, [sp, #0]
    f516:	str	r3, [sp, #12]
    f518:	ldr	r3, [r5, #12]
    f51a:	strd	r4, r4, [sp, #56]	; 0x38
    f51e:	strd	r4, r4, [sp, #28]
    f522:	str	r3, [sp, #16]
    f524:	ldr	r3, [sp, #208]	; 0xd0
    f526:	str	r4, [sp, #52]	; 0x34
    f528:	str	r4, [sp, #132]	; 0x84
    f52a:	str	r3, [sp, #64]	; 0x40
    f52c:	str	r4, [sp, #156]	; 0x9c
    f52e:	str	r4, [sp, #144]	; 0x90
    f530:	asrs	r3, r0, #31
    f532:	strd	r0, r3, [sp, #124]	; 0x7c
    f536:	strd	r0, r3, [sp, #148]	; 0x94
    f53a:	strd	r0, r3, [sp, #136]	; 0x88
    f53e:	mov	r3, r8
    f540:	mov	r0, r5
    f542:	bl	2d814 <btrfs_insert_inode@@Base>
    f546:	ldr	r2, [pc, #32]	; (f568 <btrfs_new_inode@@Base+0x8c>)
    f548:	ldr	r3, [pc, #24]	; (f564 <btrfs_new_inode@@Base+0x88>)
    f54a:	add	r2, pc
    f54c:	ldr	r3, [r2, r3]
    f54e:	ldr	r2, [r3, #0]
    f550:	ldr	r3, [sp, #172]	; 0xac
    f552:	eors	r2, r3
    f554:	beq.n	f55a <btrfs_new_inode@@Base+0x7e>
    f556:	blx	86b8 <__stack_chk_fail@plt>
    f55a:	add	sp, #180	; 0xb4
    f55c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f560:	ldr	r6, [r3, r2]
    f562:	movs	r5, r0
    f564:	lsls	r4, r4, #8
    f566:	movs	r0, r0
    f568:	ldr	r6, [r7, r0]
    f56a:	movs	r5, r0

0000f56c <btrfs_change_inode_flags@@Base>:
    f56c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f570:	mov	r9, r2
    f572:	ldr	r2, [pc, #180]	; (f628 <btrfs_change_inode_flags@@Base+0xbc>)
    f574:	mov	r4, r3
    f576:	ldr	r3, [pc, #180]	; (f62c <btrfs_change_inode_flags@@Base+0xc0>)
    f578:	sub	sp, #44	; 0x2c
    f57a:	add	r2, pc
    f57c:	mov	r8, r0
    f57e:	str	r1, [sp, #12]
    f580:	ldr	r3, [r2, r3]
    f582:	ldrd	r7, r6, [sp, #72]	; 0x48
    f586:	ldr	r3, [r3, #0]
    f588:	str	r3, [sp, #36]	; 0x24
    f58a:	mov.w	r3, #0
    f58e:	bl	17df8 <btrfs_alloc_path@@Base>
    f592:	mov	r5, r0
    f594:	cmp	r0, #0
    f596:	beq.n	f61a <btrfs_change_inode_flags@@Base+0xae>
    f598:	movs	r2, #0
    f59a:	movs	r3, #1
    f59c:	strb.w	r2, [sp, #25]
    f5a0:	strd	r2, r3, [sp]
    f5a4:	strb.w	r3, [sp, #24]
    f5a8:	mov	r3, r0
    f5aa:	strb.w	r2, [sp, #26]
    f5ae:	mov	r0, r8
    f5b0:	strb.w	r2, [sp, #27]
    f5b4:	strb.w	r2, [sp, #28]
    f5b8:	strb.w	r2, [sp, #29]
    f5bc:	strb.w	r2, [sp, #30]
    f5c0:	strb.w	r2, [sp, #31]
    f5c4:	strb.w	r2, [sp, #32]
    f5c8:	add	r2, sp, #16
    f5ca:	ldr	r1, [sp, #12]
    f5cc:	strd	r9, r4, [sp, #16]
    f5d0:	bl	1a1e4 <btrfs_search_slot@@Base>
    f5d4:	subs	r4, r0, #0
    f5d6:	bgt.n	f614 <btrfs_change_inode_flags@@Base+0xa8>
    f5d8:	bne.n	f5fa <btrfs_change_inode_flags@@Base+0x8e>
    f5da:	ldr	r3, [r5, #0]
    f5dc:	movs	r1, #25
    f5de:	ldr	r2, [r5, #32]
    f5e0:	adds	r3, #96	; 0x60
    f5e2:	mla	r2, r1, r2, r3
    f5e6:	ldr.w	r2, [r2, #118]	; 0x76
    f5ea:	add	r3, r2
    f5ec:	str.w	r7, [r3, #165]	; 0xa5
    f5f0:	str.w	r6, [r3, #169]	; 0xa9
    f5f4:	ldr	r0, [r5, #0]
    f5f6:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f5fa:	mov	r0, r5
    f5fc:	bl	17e26 <btrfs_free_path@@Base>
    f600:	ldr	r2, [pc, #44]	; (f630 <btrfs_change_inode_flags@@Base+0xc4>)
    f602:	ldr	r3, [pc, #40]	; (f62c <btrfs_change_inode_flags@@Base+0xc0>)
    f604:	add	r2, pc
    f606:	ldr	r3, [r2, r3]
    f608:	ldr	r2, [r3, #0]
    f60a:	ldr	r3, [sp, #36]	; 0x24
    f60c:	eors	r2, r3
    f60e:	beq.n	f620 <btrfs_change_inode_flags@@Base+0xb4>
    f610:	blx	86b8 <__stack_chk_fail@plt>
    f614:	mvn.w	r4, #1
    f618:	b.n	f5fa <btrfs_change_inode_flags@@Base+0x8e>
    f61a:	mvn.w	r4, #11
    f61e:	b.n	f600 <btrfs_change_inode_flags@@Base+0x94>
    f620:	mov	r0, r4
    f622:	add	sp, #44	; 0x2c
    f624:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f628:	ldr	r6, [r1, r0]
    f62a:	movs	r5, r0
    f62c:	lsls	r4, r4, #8
    f62e:	movs	r0, r0
    f630:	ldrsb	r4, [r0, r6]
    f632:	movs	r5, r0

0000f634 <btrfs_mkdir@@Base>:
    f634:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f638:	mov	sl, r2
    f63a:	ldr	r2, [pc, #284]	; (f758 <btrfs_mkdir@@Base+0x124>)
    f63c:	mov	fp, r3
    f63e:	ldr	r3, [pc, #284]	; (f75c <btrfs_mkdir@@Base+0x128>)
    f640:	sub	sp, #76	; 0x4c
    f642:	add	r2, pc
    f644:	mov	r7, r0
    f646:	str	r1, [sp, #36]	; 0x24
    f648:	ldr	r3, [r2, r3]
    f64a:	movs	r2, #0
    f64c:	ldrd	r8, r9, [sp, #112]	; 0x70
    f650:	ldr	r3, [r3, #0]
    f652:	str	r3, [sp, #68]	; 0x44
    f654:	mov.w	r3, #0
    f658:	ldr	r6, [sp, #120]	; 0x78
    f65a:	movs	r3, #0
    f65c:	strd	r2, r3, [sp, #40]	; 0x28
    f660:	bl	17df8 <btrfs_alloc_path@@Base>
    f664:	mov	r5, r0
    f666:	cmp	r0, #0
    f668:	beq.n	f74a <btrfs_mkdir@@Base+0x116>
    f66a:	ldr	r1, [sp, #36]	; 0x24
    f66c:	cbz	r6, f67c <btrfs_mkdir@@Base+0x48>
    f66e:	ldrd	r2, r3, [r6]
    f672:	orrs.w	r0, r2, r3
    f676:	it	ne
    f678:	strdne	r2, r3, [sp, #40]	; 0x28
    f67c:	movs	r0, #0
    f67e:	mov	r2, r5
    f680:	strd	fp, r0, [sp, #12]
    f684:	str.w	sl, [sp, #8]
    f688:	strd	r8, r9, [sp]
    f68c:	str	r1, [sp, #36]	; 0x24
    f68e:	bl	9474 <btrfs_lookup_dir_item@@Base>
    f692:	ldr	r1, [sp, #36]	; 0x24
    f694:	cmn.w	r0, #4096	; 0x1000
    f698:	mov	r4, r0
    f69a:	bhi.n	f6c4 <btrfs_mkdir@@Base+0x90>
    f69c:	cbz	r0, f6ea <btrfs_mkdir@@Base+0xb6>
    f69e:	mov	r2, r0
    f6a0:	movs	r3, #17
    f6a2:	ldr	r0, [r5, #0]
    f6a4:	add	r1, sp, #48	; 0x30
    f6a6:	bl	172c2 <read_extent_buffer@@Base>
    f6aa:	ldrd	r2, r3, [sp, #48]	; 0x30
    f6ae:	strd	r2, r3, [sp, #40]	; 0x28
    f6b2:	ldr	r2, [r5, #0]
    f6b4:	add	r4, r2
    f6b6:	ldrb.w	r3, [r4, #125]	; 0x7d
    f6ba:	cmp	r3, #2
    f6bc:	ite	eq
    f6be:	moveq	r4, #0
    f6c0:	mvnne.w	r4, #16
    f6c4:	mov	r0, r5
    f6c6:	bl	17e26 <btrfs_free_path@@Base>
    f6ca:	cbnz	r4, f6d6 <btrfs_mkdir@@Base+0xa2>
    f6cc:	cbz	r6, f6d6 <btrfs_mkdir@@Base+0xa2>
    f6ce:	ldrd	r2, r3, [sp, #40]	; 0x28
    f6d2:	strd	r2, r3, [r6]
    f6d6:	ldr	r2, [pc, #136]	; (f760 <btrfs_mkdir@@Base+0x12c>)
    f6d8:	ldr	r3, [pc, #128]	; (f75c <btrfs_mkdir@@Base+0x128>)
    f6da:	add	r2, pc
    f6dc:	ldr	r3, [r2, r3]
    f6de:	ldr	r2, [r3, #0]
    f6e0:	ldr	r3, [sp, #68]	; 0x44
    f6e2:	eors	r2, r3
    f6e4:	beq.n	f750 <btrfs_mkdir@@Base+0x11c>
    f6e6:	blx	86b8 <__stack_chk_fail@plt>
    f6ea:	ldrd	r2, r3, [sp, #40]	; 0x28
    f6ee:	orrs	r3, r2
    f6f0:	beq.n	f732 <btrfs_mkdir@@Base+0xfe>
    f6f2:	ldr	r3, [sp, #124]	; 0x7c
    f6f4:	mov	r0, r7
    f6f6:	str	r1, [sp, #36]	; 0x24
    f6f8:	orr.w	r3, r3, #16384	; 0x4000
    f6fc:	str	r3, [sp, #0]
    f6fe:	ldrd	r2, r3, [sp, #40]	; 0x28
    f702:	bl	f4dc <btrfs_new_inode@@Base>
    f706:	mov	r4, r0
    f708:	cmp	r0, #0
    f70a:	bne.n	f6c4 <btrfs_mkdir@@Base+0x90>
    f70c:	movs	r3, #1
    f70e:	str	r0, [sp, #28]
    f710:	strd	r0, r3, [sp, #20]
    f714:	movs	r3, #2
    f716:	ldr	r1, [sp, #36]	; 0x24
    f718:	mov	r0, r7
    f71a:	strd	fp, r3, [sp, #12]
    f71e:	str.w	sl, [sp, #8]
    f722:	ldrd	r2, r3, [sp, #40]	; 0x28
    f726:	strd	r8, r9, [sp]
    f72a:	bl	edb8 <btrfs_add_link@@Base>
    f72e:	mov	r4, r0
    f730:	b.n	f6c4 <btrfs_mkdir@@Base+0x90>
    f732:	add	r3, sp, #40	; 0x28
    f734:	mov	r2, r8
    f736:	str	r3, [sp, #0]
    f738:	mov	r3, r9
    f73a:	str	r1, [sp, #36]	; 0x24
    f73c:	bl	95ec <btrfs_find_free_objectid@@Base>
    f740:	ldr	r1, [sp, #36]	; 0x24
    f742:	mov	r4, r0
    f744:	cmp	r0, #0
    f746:	beq.n	f6f2 <btrfs_mkdir@@Base+0xbe>
    f748:	b.n	f6c4 <btrfs_mkdir@@Base+0x90>
    f74a:	mvn.w	r4, #11
    f74e:	b.n	f6d6 <btrfs_mkdir@@Base+0xa2>
    f750:	mov	r0, r4
    f752:	add	sp, #76	; 0x4c
    f754:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f758:	ldrsb	r6, [r0, r5]
    f75a:	movs	r5, r0
    f75c:	lsls	r4, r4, #8
    f75e:	movs	r0, r0
    f760:	ldrsb	r6, [r5, r2]
    f762:	movs	r5, r0

0000f764 <btrfs_mksubvol@@Base>:
    f764:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f768:	mov	r5, r0
    f76a:	vpush	{d8}
    f76e:	mov	r0, r1
    f770:	vmov	s16, r1
    f774:	sub	sp, #436	; 0x1b4
    f776:	strd	r2, r3, [sp, #56]	; 0x38
    f77a:	ldrb.w	r3, [sp, #480]	; 0x1e0
    f77e:	ldr	r2, [pc, #808]	; (faa8 <btrfs_mksubvol@@Base+0x344>)
    f780:	str	r3, [sp, #76]	; 0x4c
    f782:	add	r2, pc
    f784:	ldr	r3, [pc, #804]	; (faac <btrfs_mksubvol@@Base+0x348>)
    f786:	ldr	r3, [r2, r3]
    f788:	ldr	r3, [r3, #0]
    f78a:	str	r3, [sp, #428]	; 0x1ac
    f78c:	mov.w	r3, #0
    f790:	blx	88f0 <strlen@plt>
    f794:	mov	r4, r0
    f796:	str	r0, [sp, #40]	; 0x28
    f798:	cmp	r0, #0
    f79a:	beq.w	fa96 <btrfs_mksubvol@@Base+0x332>
    f79e:	cmp	r0, #255	; 0xff
    f7a0:	bgt.w	fa96 <btrfs_mksubvol@@Base+0x332>
    f7a4:	ldr.w	r3, [r5, #464]	; 0x1d0
    f7a8:	add.w	r8, sp, #104	; 0x68
    f7ac:	ldr.w	r9, [r5, #176]	; 0xb0
    f7b0:	add	r6, sp, #84	; 0x54
    f7b2:	ldr.w	sl, [r5, #180]	; 0xb4
    f7b6:	mov	r0, r8
    f7b8:	str	r3, [sp, #64]	; 0x40
    f7ba:	movs	r7, #0
    f7bc:	ldr	r3, [r3, #28]
    f7be:	vmov	s17, r3
    f7c2:	bl	17df0 <btrfs_init_path@@Base>
    f7c6:	mov.w	r2, #4294967295	; 0xffffffff
    f7ca:	movs	r3, #96	; 0x60
    f7cc:	strd	r9, sl, [r6]
    f7d0:	mov	r1, r5
    f7d2:	strb	r3, [r6, #8]
    f7d4:	mov	r0, r7
    f7d6:	strb.w	r2, [sp, #93]	; 0x5d
    f7da:	mov	r3, r8
    f7dc:	strb.w	r2, [sp, #94]	; 0x5e
    f7e0:	strb.w	r2, [sp, #95]	; 0x5f
    f7e4:	strb.w	r2, [sp, #96]	; 0x60
    f7e8:	strb.w	r2, [sp, #97]	; 0x61
    f7ec:	strb.w	r2, [sp, #98]	; 0x62
    f7f0:	strb.w	r2, [sp, #99]	; 0x63
    f7f4:	strb.w	r2, [sp, #100]	; 0x64
    f7f8:	mov	r2, r6
    f7fa:	strd	r7, r7, [sp]
    f7fe:	bl	1a1e4 <btrfs_search_slot@@Base>
    f802:	cmp	r0, #0
    f804:	bgt.n	f830 <btrfs_mksubvol@@Base+0xcc>
    f806:	str	r0, [sp, #0]
    f808:	mov	r2, r9
    f80a:	ldr	r0, [pc, #676]	; (fab0 <btrfs_mksubvol@@Base+0x34c>)
    f80c:	mov	r3, sl
    f80e:	add	r0, pc
    f810:	bl	17424 <__btrfs_error@@Base>
    f814:	add	r0, sp, #104	; 0x68
    f816:	bl	17df0 <btrfs_init_path@@Base>
    f81a:	ldr	r2, [pc, #664]	; (fab4 <btrfs_mksubvol@@Base+0x350>)
    f81c:	ldr	r3, [pc, #652]	; (faac <btrfs_mksubvol@@Base+0x348>)
    f81e:	add	r2, pc
    f820:	ldr	r3, [r2, r3]
    f822:	ldr	r2, [r3, #0]
    f824:	ldr	r3, [sp, #428]	; 0x1ac
    f826:	eors	r2, r3
    f828:	beq.w	fa9a <btrfs_mksubvol@@Base+0x336>
    f82c:	blx	86b8 <__stack_chk_fail@plt>
    f830:	ldr.w	r2, [r8, #32]
    f834:	cmp	r2, #0
    f836:	bgt.n	f868 <btrfs_mksubvol@@Base+0x104>
    f838:	movs	r3, #2
    f83a:	str	r3, [sp, #48]	; 0x30
    f83c:	movs	r3, #0
    f83e:	add	r2, sp, #104	; 0x68
    f840:	str	r3, [sp, #52]	; 0x34
    f842:	str	r2, [sp, #44]	; 0x2c
    f844:	mov	r0, r2
    f846:	bl	17e00 <btrfs_release_path@@Base>
    f84a:	movs	r1, #1
    f84c:	mov	r0, r5
    f84e:	bl	2af24 <btrfs_start_transaction@@Base>
    f852:	ldr	r2, [sp, #44]	; 0x2c
    f854:	cmn.w	r0, #4096	; 0x1000
    f858:	mov	r8, r0
    f85a:	bls.n	f89c <btrfs_mksubvol@@Base+0x138>
    f85c:	ldr	r0, [pc, #600]	; (fab8 <btrfs_mksubvol@@Base+0x354>)
    f85e:	add	r0, pc
    f860:	bl	17424 <__btrfs_error@@Base>
    f864:	movs	r7, #0
    f866:	b.n	f814 <btrfs_mksubvol@@Base+0xb0>
    f868:	subs	r2, #1
    f86a:	ldr.w	r0, [r8]
    f86e:	mov	r1, r6
    f870:	str.w	r2, [r8, #32]
    f874:	bl	ec24 <task_period_stop@@Base+0x24>
    f878:	ldrd	r2, r3, [r6]
    f87c:	cmp	r3, sl
    f87e:	it	eq
    f880:	cmpeq	r2, r9
    f882:	bne.n	f838 <btrfs_mksubvol@@Base+0xd4>
    f884:	ldrb	r3, [r6, #8]
    f886:	cmp	r3, #96	; 0x60
    f888:	bne.n	f838 <btrfs_mksubvol@@Base+0xd4>
    f88a:	ldr.w	r3, [r6, #9]
    f88e:	ldr.w	r2, [r6, #13]
    f892:	adds	r3, #1
    f894:	str	r3, [sp, #48]	; 0x30
    f896:	adc.w	r3, r2, #0
    f89a:	b.n	f83e <btrfs_mksubvol@@Base+0xda>
    f89c:	add.w	r6, sp, #93	; 0x5d
    f8a0:	add.w	fp, sp, #84	; 0x54
    f8a4:	movs	r7, #0
    f8a6:	movs	r3, #1
    f8a8:	strd	r9, sl, [fp]
    f8ac:	mov	r1, r5
    f8ae:	strb.w	r3, [fp, #8]
    f8b2:	strb	r7, [r6, #0]
    f8b4:	strb	r7, [r6, #1]
    f8b6:	strb	r7, [r6, #2]
    f8b8:	strb	r7, [r6, #3]
    f8ba:	strb	r7, [r6, #4]
    f8bc:	strb	r7, [r6, #5]
    f8be:	strb	r7, [r6, #6]
    f8c0:	strb	r7, [r6, #7]
    f8c2:	str	r3, [sp, #0]
    f8c4:	mov	r3, fp
    f8c6:	str	r2, [sp, #68]	; 0x44
    f8c8:	bl	2d768 <btrfs_lookup_inode@@Base>
    f8cc:	ldr	r2, [sp, #68]	; 0x44
    f8ce:	str	r0, [sp, #44]	; 0x2c
    f8d0:	cbz	r0, f8de <btrfs_mksubvol@@Base+0x17a>
    f8d2:	str	r0, [sp, #0]
    f8d4:	mov	r2, r9
    f8d6:	ldr	r0, [pc, #484]	; (fabc <btrfs_mksubvol@@Base+0x358>)
    f8d8:	mov	r3, sl
    f8da:	add	r0, pc
    f8dc:	b.n	f810 <btrfs_mksubvol@@Base+0xac>
    f8de:	ldr	r7, [r2, #0]
    f8e0:	add.w	r3, r7, #96	; 0x60
    f8e4:	str	r3, [sp, #68]	; 0x44
    f8e6:	ldr	r1, [sp, #68]	; 0x44
    f8e8:	ldr	r3, [r2, #32]
    f8ea:	movs	r2, #25
    f8ec:	mla	r3, r2, r3, r1
    f8f0:	vmov	r1, s16
    f8f4:	mov	r2, r4
    f8f6:	ldr.w	r3, [r3, #118]	; 0x76
    f8fa:	str	r3, [sp, #72]	; 0x48
    f8fc:	ldr	r3, [sp, #56]	; 0x38
    f8fe:	str.w	r3, [fp]
    f902:	ldr	r3, [sp, #60]	; 0x3c
    f904:	str.w	r3, [fp, #4]
    f908:	mov.w	r3, #4294967295	; 0xffffffff
    f90c:	strb	r3, [r6, #0]
    f90e:	strb	r3, [r6, #1]
    f910:	strb	r3, [r6, #2]
    f912:	strb	r3, [r6, #3]
    f914:	strb	r3, [r6, #4]
    f916:	strb	r3, [r6, #5]
    f918:	strb	r3, [r6, #6]
    f91a:	strb	r3, [r6, #7]
    f91c:	add	r6, sp, #172	; 0xac
    f91e:	movs	r3, #132	; 0x84
    f920:	strb.w	r3, [fp, #8]
    f924:	mov	r0, r6
    f926:	mov.w	r3, #256	; 0x100
    f92a:	blx	8748 <__memcpy_chk@plt>
    f92e:	ldr	r3, [sp, #76]	; 0x4c
    f930:	cbz	r3, f994 <btrfs_mksubvol@@Base+0x230>
    f932:	ldr.w	fp, [pc, #396]	; fac0 <btrfs_mksubvol@@Base+0x35c>
    f936:	mov	r4, r6
    f938:	add	fp, pc
    f93a:	ldr	r3, [sp, #48]	; 0x30
    f93c:	mov	r2, r4
    f93e:	mov	r1, r5
    f940:	mov	r0, r8
    f942:	strd	r9, sl, [sp]
    f946:	str	r3, [sp, #16]
    f948:	ldr	r3, [sp, #52]	; 0x34
    f94a:	str	r3, [sp, #20]
    f94c:	movs	r3, #2
    f94e:	str	r3, [sp, #12]
    f950:	add	r3, sp, #84	; 0x54
    f952:	str	r3, [sp, #8]
    f954:	ldr	r3, [sp, #40]	; 0x28
    f956:	bl	92c4 <btrfs_insert_dir_item@@Base>
    f95a:	cmn.w	r0, #17
    f95e:	mov	r6, r0
    f960:	bne.n	f9b4 <btrfs_mksubvol@@Base+0x250>
    f962:	ldr	r3, [sp, #44]	; 0x2c
    f964:	movs	r2, #1
    f966:	mov	r0, r4
    f968:	str	r3, [sp, #8]
    f96a:	vmov	r3, s16
    f96e:	strd	fp, r3, [sp]
    f972:	mov.w	r3, #256	; 0x100
    f976:	mov	r1, r3
    f978:	blx	8b70 <__snprintf_chk@plt>
    f97c:	subs	r3, r0, #1
    f97e:	str	r0, [sp, #40]	; 0x28
    f980:	cmp	r3, #254	; 0xfe
    f982:	bhi.w	f864 <btrfs_mksubvol@@Base+0x100>
    f986:	ldr	r3, [sp, #44]	; 0x2c
    f988:	adds	r3, #1
    f98a:	str	r3, [sp, #44]	; 0x2c
    f98c:	cmp.w	r3, #1024	; 0x400
    f990:	bne.n	f93a <btrfs_mksubvol@@Base+0x1d6>
    f992:	b.n	f864 <btrfs_mksubvol@@Base+0x100>
    f994:	ldr	r3, [sp, #48]	; 0x30
    f996:	mov	r2, r6
    f998:	mov	r1, r5
    f99a:	mov	r0, r8
    f99c:	strd	r9, sl, [sp]
    f9a0:	str	r3, [sp, #16]
    f9a2:	ldr	r3, [sp, #52]	; 0x34
    f9a4:	str	r3, [sp, #20]
    f9a6:	movs	r3, #2
    f9a8:	strd	fp, r3, [sp, #8]
    f9ac:	mov	r3, r4
    f9ae:	bl	92c4 <btrfs_insert_dir_item@@Base>
    f9b2:	mov	r6, r0
    f9b4:	cmp	r6, #0
    f9b6:	bne.w	f864 <btrfs_mksubvol@@Base+0x100>
    f9ba:	ldr	r3, [sp, #72]	; 0x48
    f9bc:	add	r4, sp, #172	; 0xac
    f9be:	ldr	r2, [sp, #68]	; 0x44
    f9c0:	adds	r3, #101	; 0x65
    f9c2:	add	r2, r3
    f9c4:	mov	r3, r2
    f9c6:	ldr	r0, [r2, #16]
    f9c8:	ldr	r1, [r2, #20]
    f9ca:	ldr	r2, [sp, #40]	; 0x28
    f9cc:	lsls	r2, r2, #1
    f9ce:	adds	r0, r0, r2
    f9d0:	str	r0, [r3, #16]
    f9d2:	adc.w	r1, r1, r2, asr #31
    f9d6:	mov	r0, r7
    f9d8:	str	r1, [r3, #20]
    f9da:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
    f9de:	add	r0, sp, #104	; 0x68
    f9e0:	bl	17e00 <btrfs_release_path@@Base>
    f9e4:	ldr	r3, [sp, #40]	; 0x28
    f9e6:	ldr.w	r2, [r5, #447]	; 0x1bf
    f9ea:	mov	r0, r8
    f9ec:	vmov	r1, s17
    f9f0:	str	r3, [sp, #36]	; 0x24
    f9f2:	ldr	r3, [sp, #48]	; 0x30
    f9f4:	str	r4, [sp, #32]
    f9f6:	strd	r9, sl, [sp, #16]
    f9fa:	str	r3, [sp, #24]
    f9fc:	ldr	r3, [sp, #52]	; 0x34
    f9fe:	str	r3, [sp, #28]
    fa00:	ldr.w	r3, [r5, #451]	; 0x1c3
    fa04:	strd	r2, r3, [sp, #8]
    fa08:	movs	r3, #144	; 0x90
    fa0a:	str	r3, [sp, #0]
    fa0c:	ldrd	r2, r3, [sp, #56]	; 0x38
    fa10:	bl	27bd0 <btrfs_add_root_ref@@Base>
    fa14:	ldr.w	r2, [r5, #447]	; 0x1bf
    fa18:	ldr.w	r3, [r5, #451]	; 0x1c3
    fa1c:	cbz	r0, fa2c <btrfs_mksubvol@@Base+0x2c8>
    fa1e:	str	r0, [sp, #0]
    fa20:	ldr	r0, [pc, #160]	; (fac4 <btrfs_mksubvol@@Base+0x360>)
    fa22:	add	r0, pc
    fa24:	bl	17424 <__btrfs_error@@Base>
    fa28:	mov	r7, r6
    fa2a:	b.n	f814 <btrfs_mksubvol@@Base+0xb0>
    fa2c:	ldr	r1, [sp, #40]	; 0x28
    fa2e:	mov	r0, r8
    fa30:	strd	r9, sl, [sp, #16]
    fa34:	strd	r4, r1, [sp, #32]
    fa38:	ldr	r1, [sp, #48]	; 0x30
    fa3a:	str	r1, [sp, #24]
    fa3c:	ldr	r1, [sp, #52]	; 0x34
    fa3e:	str	r1, [sp, #28]
    fa40:	ldr	r1, [sp, #56]	; 0x38
    fa42:	str	r1, [sp, #8]
    fa44:	ldr	r1, [sp, #60]	; 0x3c
    fa46:	str	r1, [sp, #12]
    fa48:	movs	r1, #156	; 0x9c
    fa4a:	str	r1, [sp, #0]
    fa4c:	vmov	r1, s17
    fa50:	bl	27bd0 <btrfs_add_root_ref@@Base>
    fa54:	cbz	r0, fa66 <btrfs_mksubvol@@Base+0x302>
    fa56:	str	r0, [sp, #0]
    fa58:	ldr	r0, [pc, #108]	; (fac8 <btrfs_mksubvol@@Base+0x364>)
    fa5a:	ldr.w	r2, [r5, #447]	; 0x1bf
    fa5e:	ldr.w	r3, [r5, #451]	; 0x1c3
    fa62:	add	r0, pc
    fa64:	b.n	fa24 <btrfs_mksubvol@@Base+0x2c0>
    fa66:	mov	r1, r5
    fa68:	mov	r0, r8
    fa6a:	bl	2b1a4 <btrfs_commit_transaction@@Base>
    fa6e:	mov	r1, r0
    fa70:	cbz	r0, fa7c <btrfs_mksubvol@@Base+0x318>
    fa72:	ldr	r0, [pc, #88]	; (facc <btrfs_mksubvol@@Base+0x368>)
    fa74:	add	r0, pc
    fa76:	bl	17424 <__btrfs_error@@Base>
    fa7a:	b.n	fa28 <btrfs_mksubvol@@Base+0x2c4>
    fa7c:	ldr	r0, [sp, #64]	; 0x40
    fa7e:	add	r1, sp, #84	; 0x54
    fa80:	bl	1d9ae <btrfs_read_fs_root@@Base>
    fa84:	cmn.w	r0, #4096	; 0x1000
    fa88:	mov	r7, r0
    fa8a:	bls.w	f814 <btrfs_mksubvol@@Base+0xb0>
    fa8e:	mov	r1, r0
    fa90:	ldr	r0, [pc, #60]	; (fad0 <btrfs_mksubvol@@Base+0x36c>)
    fa92:	add	r0, pc
    fa94:	b.n	fa76 <btrfs_mksubvol@@Base+0x312>
    fa96:	movs	r7, #0
    fa98:	b.n	f81a <btrfs_mksubvol@@Base+0xb6>
    fa9a:	mov	r0, r7
    fa9c:	add	sp, #436	; 0x1b4
    fa9e:	vpop	{d8}
    faa2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    faa6:	nop
    faa8:	ldrsb	r6, [r0, r0]
    faaa:	movs	r5, r0
    faac:	lsls	r4, r4, #8
    faae:	movs	r0, r0
    fab0:	add	r5, sp, #172	; 0xac
    fab2:	movs	r2, r0
    fab4:	strb	r2, [r5, r5]
    fab6:	movs	r5, r0
    fab8:	add	r5, sp, #24
    faba:	movs	r2, r0
    fabc:	add	r4, sp, #664	; 0x298
    fabe:	movs	r2, r0
    fac0:	add	r4, sp, #440	; 0x1b8
    fac2:	movs	r2, r0
    fac4:	add	r3, sp, #548	; 0x224
    fac6:	movs	r2, r0
    fac8:	add	r3, sp, #452	; 0x1c4
    faca:	movs	r2, r0
    facc:	add	r3, sp, #524	; 0x20c
    face:	movs	r2, r0
    fad0:	add	r3, sp, #524	; 0x20c
    fad2:	movs	r2, r0
    fad4:	push	{r4, lr}
    fad6:	mov	r4, r1
    fad8:	ldr	r1, [pc, #84]	; (fb30 <btrfs_mksubvol@@Base+0x3cc>)
    fada:	sub	sp, #24
    fadc:	ldr	r3, [pc, #84]	; (fb34 <btrfs_mksubvol@@Base+0x3d0>)
    fade:	add	r1, pc
    fae0:	ldr	r3, [r1, r3]
    fae2:	mov	r1, sp
    fae4:	ldr	r3, [r3, #0]
    fae6:	str	r3, [sp, #20]
    fae8:	mov.w	r3, #0
    faec:	movs	r3, #25
    faee:	muls	r2, r3
    faf0:	movs	r3, #17
    faf2:	adds	r2, #101	; 0x65
    faf4:	bl	172c2 <read_extent_buffer@@Base>
    faf8:	ldr.w	r3, [sp, #13]
    fafc:	ldr.w	r2, [sp, #9]
    fb00:	str.w	r3, [r4, #13]
    fb04:	ldrb.w	r3, [sp, #8]
    fb08:	str.w	r2, [r4, #9]
    fb0c:	ldr	r2, [pc, #40]	; (fb38 <btrfs_mksubvol@@Base+0x3d4>)
    fb0e:	strb	r3, [r4, #8]
    fb10:	ldr	r3, [sp, #0]
    fb12:	add	r2, pc
    fb14:	str	r3, [r4, #0]
    fb16:	ldr	r3, [sp, #4]
    fb18:	str	r3, [r4, #4]
    fb1a:	ldr	r3, [pc, #24]	; (fb34 <btrfs_mksubvol@@Base+0x3d0>)
    fb1c:	ldr	r3, [r2, r3]
    fb1e:	ldr	r2, [r3, #0]
    fb20:	ldr	r3, [sp, #20]
    fb22:	eors	r2, r3
    fb24:	beq.n	fb2a <btrfs_mksubvol@@Base+0x3c6>
    fb26:	blx	86b8 <__stack_chk_fail@plt>
    fb2a:	add	sp, #24
    fb2c:	pop	{r4, pc}
    fb2e:	nop
    fb30:	strh	r2, [r5, r2]
    fb32:	movs	r5, r0
    fb34:	lsls	r4, r4, #8
    fb36:	movs	r0, r0
    fb38:	strh	r6, [r6, r1]
    fb3a:	movs	r5, r0

0000fb3c <btrfs_get_extent@@Base>:
    fb3c:	ldr.w	ip, [pc, #380]	; fcbc <btrfs_get_extent@@Base+0x180>
    fb40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fb44:	mov	r4, r2
    fb46:	ldr	r2, [pc, #376]	; (fcc0 <btrfs_get_extent@@Base+0x184>)
    fb48:	add	ip, pc
    fb4a:	sub	sp, #76	; 0x4c
    fb4c:	mov	r5, r1
    fb4e:	mov.w	r9, #108	; 0x6c
    fb52:	ldr.w	r2, [ip, r2]
    fb56:	ldr	r3, [sp, #136]	; 0x88
    fb58:	ldr	r2, [r2, #0]
    fb5a:	str	r2, [sp, #68]	; 0x44
    fb5c:	mov.w	r2, #0
    fb60:	ldr	r2, [sp, #120]	; 0x78
    fb62:	ldrd	r6, r7, [sp, #112]	; 0x70
    fb66:	ldrd	r8, sl, [sp, #128]	; 0x80
    fb6a:	str.w	r2, [sp, #37]	; 0x25
    fb6e:	ldr	r2, [sp, #124]	; 0x7c
    fb70:	strd	r6, r7, [sp, #28]
    fb74:	strb.w	r9, [sp, #36]	; 0x24
    fb78:	str.w	r2, [sp, #41]	; 0x29
    fb7c:	subs	r2, r3, #0
    fb7e:	it	ne
    fb80:	movne	r2, #1
    fb82:	strd	r3, r2, [sp]
    fb86:	add	r2, sp, #28
    fb88:	mov	r3, r4
    fb8a:	bl	1a1e4 <btrfs_search_slot@@Base>
    fb8e:	subs.w	fp, r0, #0
    fb92:	ble.w	fca6 <btrfs_get_extent@@Base+0x16a>
    fb96:	mov	r2, r6
    fb98:	mov	r3, r7
    fb9a:	mov	r1, r4
    fb9c:	mov	r0, r5
    fb9e:	str.w	r9, [sp]
    fba2:	bl	1b89c <btrfs_previous_item@@Base>
    fba6:	subs.w	fp, r0, #0
    fbaa:	blt.n	fc92 <btrfs_get_extent@@Base+0x156>
    fbac:	beq.n	fc3a <btrfs_get_extent@@Base+0xfe>
    fbae:	ldr	r2, [r4, #0]
    fbb0:	ldr	r3, [r4, #32]
    fbb2:	adds	r3, #1
    fbb4:	str	r3, [r4, #32]
    fbb6:	ldr.w	r2, [r2, #192]	; 0xc0
    fbba:	cmp	r3, r2
    fbbc:	bcc.n	fbd4 <btrfs_get_extent@@Base+0x98>
    fbbe:	movs	r3, #0
    fbc0:	mov	r1, r4
    fbc2:	strb.w	r3, [r4, #65]	; 0x41
    fbc6:	ldr.w	r0, [r5, #464]	; 0x1d0
    fbca:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
    fbce:	mov	fp, r0
    fbd0:	cmp	r0, #0
    fbd2:	bne.n	fc92 <btrfs_get_extent@@Base+0x156>
    fbd4:	ldr	r2, [r4, #32]
    fbd6:	add	r1, sp, #48	; 0x30
    fbd8:	ldr	r0, [r4, #0]
    fbda:	bl	fad4 <btrfs_mksubvol@@Base+0x370>
    fbde:	ldrd	r2, r3, [sp, #48]	; 0x30
    fbe2:	cmp	r3, r7
    fbe4:	it	eq
    fbe6:	cmpeq	r2, r6
    fbe8:	bne.n	fca8 <btrfs_get_extent@@Base+0x16c>
    fbea:	ldrb.w	r3, [sp, #56]	; 0x38
    fbee:	cmp	r3, #108	; 0x6c
    fbf0:	bne.n	fca8 <btrfs_get_extent@@Base+0x16c>
    fbf2:	ldr	r1, [sp, #120]	; 0x78
    fbf4:	ldr.w	r3, [sp, #61]	; 0x3d
    fbf8:	adds.w	r1, r1, r8
    fbfc:	str	r1, [sp, #16]
    fbfe:	ldr	r1, [sp, #124]	; 0x7c
    fc00:	ldr.w	r2, [sp, #57]	; 0x39
    fc04:	adc.w	r1, r1, sl
    fc08:	str	r1, [sp, #20]
    fc0a:	ldrd	r0, r1, [sp, #16]
    fc0e:	cmp	r3, r1
    fc10:	ldr	r3, [r4, #32]
    fc12:	it	eq
    fc14:	cmpeq	r2, r0
    fc16:	ite	cs
    fc18:	movcs.w	fp, #1
    fc1c:	movcc.w	fp, #0
    fc20:	cmp	r3, #0
    fc22:	bne.n	fc92 <btrfs_get_extent@@Base+0x156>
    fc24:	mov	r1, r4
    fc26:	mov	r0, r5
    fc28:	bl	1b590 <btrfs_prev_leaf@@Base>
    fc2c:	cmp	r0, #0
    fc2e:	bne.n	fcae <btrfs_get_extent@@Base+0x172>
    fc30:	ldr	r3, [r4, #0]
    fc32:	ldr.w	r3, [r3, #192]	; 0xc0
    fc36:	str	r3, [r4, #32]
    fc38:	b.n	fc92 <btrfs_get_extent@@Base+0x156>
    fc3a:	ldr	r2, [r4, #32]
    fc3c:	add	r1, sp, #48	; 0x30
    fc3e:	ldr	r0, [r4, #0]
    fc40:	bl	fad4 <btrfs_mksubvol@@Base+0x370>
    fc44:	ldrd	r2, r3, [sp, #48]	; 0x30
    fc48:	cmp	r3, r7
    fc4a:	it	eq
    fc4c:	cmpeq	r2, r6
    fc4e:	bne.n	fbae <btrfs_get_extent@@Base+0x72>
    fc50:	ldrb.w	r3, [sp, #56]	; 0x38
    fc54:	cmp	r3, #108	; 0x6c
    fc56:	bne.n	fbae <btrfs_get_extent@@Base+0x72>
    fc58:	ldr	r3, [r4, #0]
    fc5a:	movs	r1, #25
    fc5c:	ldr	r2, [r4, #32]
    fc5e:	adds	r3, #96	; 0x60
    fc60:	mla	r2, r1, r2, r3
    fc64:	ldr.w	r1, [sp, #61]	; 0x3d
    fc68:	ldr.w	r2, [r2, #118]	; 0x76
    fc6c:	add	r3, r2
    fc6e:	ldr.w	r2, [r3, #109]!
    fc72:	ldr	r0, [r3, #4]
    fc74:	ldr.w	r3, [sp, #57]	; 0x39
    fc78:	adds	r3, r2, r3
    fc7a:	str	r3, [sp, #8]
    fc7c:	adc.w	r3, r0, r1
    fc80:	str	r3, [sp, #12]
    fc82:	ldrd	r0, r1, [sp, #8]
    fc86:	ldrd	r2, r3, [sp, #120]	; 0x78
    fc8a:	cmp	r3, r1
    fc8c:	it	eq
    fc8e:	cmpeq	r2, r0
    fc90:	bcs.n	fbae <btrfs_get_extent@@Base+0x72>
    fc92:	ldr	r2, [pc, #48]	; (fcc4 <btrfs_get_extent@@Base+0x188>)
    fc94:	ldr	r3, [pc, #40]	; (fcc0 <btrfs_get_extent@@Base+0x184>)
    fc96:	add	r2, pc
    fc98:	ldr	r3, [r2, r3]
    fc9a:	ldr	r2, [r3, #0]
    fc9c:	ldr	r3, [sp, #68]	; 0x44
    fc9e:	eors	r2, r3
    fca0:	beq.n	fcb2 <btrfs_get_extent@@Base+0x176>
    fca2:	blx	86b8 <__stack_chk_fail@plt>
    fca6:	bne.n	fc92 <btrfs_get_extent@@Base+0x156>
    fca8:	mov.w	fp, #1
    fcac:	b.n	fc92 <btrfs_get_extent@@Base+0x156>
    fcae:	mov	fp, r0
    fcb0:	b.n	fc92 <btrfs_get_extent@@Base+0x156>
    fcb2:	mov	r0, fp
    fcb4:	add	sp, #76	; 0x4c
    fcb6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fcba:	nop
    fcbc:	strh	r0, [r0, r1]
    fcbe:	movs	r5, r0
    fcc0:	lsls	r4, r4, #8
    fcc2:	movs	r0, r0
    fcc4:	str	r2, [r6, r3]
    fcc6:	movs	r5, r0

0000fcc8 <btrfs_punch_hole@@Base>:
    fcc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    fccc:	sub	sp, #40	; 0x28
    fcce:	mov	sl, r0
    fcd0:	mov	r5, r2
    fcd2:	ldrd	r8, r9, [sp, #80]	; 0x50
    fcd6:	mov	r7, r3
    fcd8:	str	r1, [sp, #36]	; 0x24
    fcda:	bl	17df8 <btrfs_alloc_path@@Base>
    fcde:	mov	r4, r0
    fce0:	cbz	r0, fd3e <btrfs_punch_hole@@Base+0x76>
    fce2:	ldrd	r2, r3, [sp, #72]	; 0x48
    fce6:	movs	r0, #0
    fce8:	ldr	r1, [sp, #36]	; 0x24
    fcea:	str	r0, [sp, #24]
    fcec:	strd	r2, r3, [sp, #8]
    fcf0:	mov	r2, r4
    fcf2:	strd	r8, r9, [sp, #16]
    fcf6:	strd	r5, r7, [sp]
    fcfa:	bl	fb3c <btrfs_get_extent@@Base>
    fcfe:	subs	r6, r0, #0
    fd00:	blt.n	fd2a <btrfs_punch_hole@@Base+0x62>
    fd02:	beq.n	fd38 <btrfs_punch_hole@@Base+0x70>
    fd04:	movs	r2, #0
    fd06:	movs	r3, #0
    fd08:	strd	r2, r3, [sp, #16]
    fd0c:	mov	r0, sl
    fd0e:	strd	r2, r3, [sp, #8]
    fd12:	ldrd	r2, r3, [sp, #72]	; 0x48
    fd16:	ldr	r1, [sp, #36]	; 0x24
    fd18:	strd	r8, r9, [sp, #24]
    fd1c:	strd	r2, r3, [sp]
    fd20:	mov	r2, r5
    fd22:	mov	r3, r7
    fd24:	bl	2e072 <btrfs_insert_file_extent@@Base>
    fd28:	mov	r6, r0
    fd2a:	mov	r0, r4
    fd2c:	bl	17e26 <btrfs_free_path@@Base>
    fd30:	mov	r0, r6
    fd32:	add	sp, #40	; 0x28
    fd34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    fd38:	mvn.w	r6, #16
    fd3c:	b.n	fd2a <btrfs_punch_hole@@Base+0x62>
    fd3e:	mvn.w	r6, #11
    fd42:	b.n	fd30 <btrfs_punch_hole@@Base+0x68>

0000fd44 <btrfs_read_file@@Base>:
    fd44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fd48:	mov	r6, r0
    fd4a:	vpush	{d8}
    fd4e:	sub	sp, #180	; 0xb4
    fd50:	ldr.w	r8, [r0, #464]	; 0x1d0
    fd54:	strd	r2, r3, [sp, #8]
    fd58:	ldr	r3, [sp, #236]	; 0xec
    fd5a:	ldr	r2, [pc, #856]	; (100b4 <btrfs_read_file@@Base+0x370>)
    fd5c:	ldr.w	r4, [r8, #388]	; 0x184
    fd60:	vmov	s16, r3
    fd64:	ldr	r3, [pc, #848]	; (100b8 <btrfs_read_file@@Base+0x374>)
    fd66:	add	r2, pc
    fd68:	ldrd	sl, fp, [sp, #224]	; 0xe0
    fd6c:	ldr	r3, [r2, r3]
    fd6e:	movs	r2, #0
    fd70:	ldr	r3, [r3, #0]
    fd72:	str	r3, [sp, #172]	; 0xac
    fd74:	mov.w	r3, #0
    fd78:	ldr.w	r3, [r8, #308]	; 0x134
    fd7c:	ldr.w	r3, [r3, #188]	; 0xbc
    fd80:	str	r3, [sp, #68]	; 0x44
    fd82:	adds.w	r3, r4, #4294967295	; 0xffffffff
    fd86:	adc.w	r2, r2, #4294967295	; 0xffffffff
    fd8a:	and.w	r0, r3, sl
    fd8e:	and.w	r1, r2, fp
    fd92:	orrs.w	r3, r0, r1
    fd96:	bne.n	fda0 <btrfs_read_file@@Base+0x5c>
    fd98:	ldr	r3, [sp, #232]	; 0xe8
    fd9a:	subs	r5, r4, #1
    fd9c:	ands	r5, r3
    fd9e:	beq.n	fdc8 <btrfs_read_file@@Base+0x84>
    fda0:	ldr	r2, [pc, #792]	; (100bc <btrfs_read_file@@Base+0x378>)
    fda2:	mov	r1, r4
    fda4:	ldr	r0, [pc, #792]	; (100c0 <btrfs_read_file@@Base+0x37c>)
    fda6:	mvn.w	r4, #21
    fdaa:	add	r2, pc
    fdac:	add	r0, pc
    fdae:	bl	173a8 <__btrfs_warning@@Base>
    fdb2:	ldr	r2, [pc, #784]	; (100c4 <btrfs_read_file@@Base+0x380>)
    fdb4:	ldr	r3, [pc, #768]	; (100b8 <btrfs_read_file@@Base+0x374>)
    fdb6:	add	r2, pc
    fdb8:	ldr	r3, [r2, r3]
    fdba:	ldr	r2, [r3, #0]
    fdbc:	ldr	r3, [sp, #172]	; 0xac
    fdbe:	eors	r2, r3
    fdc0:	beq.w	100a6 <btrfs_read_file@@Base+0x362>
    fdc4:	blx	86b8 <__stack_chk_fail@plt>
    fdc8:	add.w	r9, sp, #104	; 0x68
    fdcc:	movs	r7, #108	; 0x6c
    fdce:	mov	r0, r9
    fdd0:	bl	17df0 <btrfs_init_path@@Base>
    fdd4:	ldr	r3, [sp, #8]
    fdd6:	add	r2, sp, #84	; 0x54
    fdd8:	mov	r1, r6
    fdda:	mov	r0, r5
    fddc:	strd	r5, r5, [sp]
    fde0:	str	r3, [sp, #84]	; 0x54
    fde2:	ldr	r3, [sp, #12]
    fde4:	str.w	sl, [sp, #93]	; 0x5d
    fde8:	str.w	fp, [sp, #97]	; 0x61
    fdec:	str	r3, [sp, #88]	; 0x58
    fdee:	mov	r3, r9
    fdf0:	strb.w	r7, [sp, #92]	; 0x5c
    fdf4:	bl	1a1e4 <btrfs_search_slot@@Base>
    fdf8:	subs	r4, r0, #0
    fdfa:	blt.w	ff90 <btrfs_read_file@@Base+0x24c>
    fdfe:	beq.n	fe14 <btrfs_read_file@@Base+0xd0>
    fe00:	ldrd	r2, r3, [sp, #8]
    fe04:	mov	r1, r9
    fe06:	mov	r0, r6
    fe08:	str	r7, [sp, #0]
    fe0a:	bl	1b89c <btrfs_previous_item@@Base>
    fe0e:	subs	r4, r0, #0
    fe10:	bgt.w	100a0 <btrfs_read_file@@Base+0x35c>
    fe14:	ldr	r2, [sp, #232]	; 0xe8
    fe16:	movs	r1, #0
    fe18:	vmov	r0, s16
    fe1c:	movs	r5, #0
    fe1e:	blx	8978 <memset@plt+0x4>
    fe22:	ldr	r3, [sp, #232]	; 0xe8
    fe24:	adds.w	r2, sl, r3
    fe28:	adc.w	r3, fp, r3, asr #31
    fe2c:	strd	r2, r3, [sp, #40]	; 0x28
    fe30:	ldr	r7, [sp, #136]	; 0x88
    fe32:	add	r1, sp, #84	; 0x54
    fe34:	ldr	r0, [sp, #104]	; 0x68
    fe36:	mov	r2, r7
    fe38:	str	r0, [sp, #52]	; 0x34
    fe3a:	bl	fad4 <btrfs_mksubvol@@Base+0x370>
    fe3e:	ldrd	r2, r3, [sp, #84]	; 0x54
    fe42:	ldrd	r0, r1, [sp, #8]
    fe46:	cmp	r1, r3
    fe48:	it	eq
    fe4a:	cmpeq	r0, r2
    fe4c:	bcc.n	fee0 <btrfs_read_file@@Base+0x19c>
    fe4e:	ldrb.w	r1, [sp, #92]	; 0x5c
    fe52:	cmp	r1, #108	; 0x6c
    fe54:	bne.w	10012 <btrfs_read_file@@Base+0x2ce>
    fe58:	ldrd	r0, r1, [sp, #8]
    fe5c:	cmp	r3, r1
    fe5e:	it	eq
    fe60:	cmpeq	r2, r0
    fe62:	bne.w	10012 <btrfs_read_file@@Base+0x2ce>
    fe66:	ldrd	r0, r1, [sp, #40]	; 0x28
    fe6a:	ldr.w	r3, [sp, #97]	; 0x61
    fe6e:	ldr.w	r2, [sp, #93]	; 0x5d
    fe72:	cmp	r3, r1
    fe74:	it	eq
    fe76:	cmpeq	r2, r0
    fe78:	bcs.n	fee0 <btrfs_read_file@@Base+0x19c>
    fe7a:	ldr	r0, [sp, #52]	; 0x34
    fe7c:	movs	r1, #25
    fe7e:	add.w	ip, r0, #96	; 0x60
    fe82:	mla	r7, r1, r7, ip
    fe86:	ldr.w	r1, [r7, #118]	; 0x76
    fe8a:	add.w	r7, r1, #101	; 0x65
    fe8e:	add	ip, r7
    fe90:	str	r1, [sp, #52]	; 0x34
    fe92:	ldrb.w	r7, [ip, #16]
    fe96:	cmp	r7, #0
    fe98:	bne.w	1009a <btrfs_read_file@@Base+0x356>
    fe9c:	ldrb.w	r7, [ip, #20]
    fea0:	cmp	r7, #0
    fea2:	bne.n	ff9e <btrfs_read_file@@Base+0x25a>
    fea4:	ldr.w	r7, [ip, #8]
    fea8:	ldr.w	lr, [ip, #12]
    feac:	adds	r1, r2, r7
    feae:	str	r1, [sp, #56]	; 0x38
    feb0:	adc.w	r3, r3, lr
    feb4:	str	r3, [sp, #60]	; 0x3c
    feb6:	ldrd	r2, r3, [sp, #56]	; 0x38
    feba:	cmp	fp, r3
    febc:	it	eq
    febe:	cmpeq	sl, r2
    fec0:	bcs.w	10012 <btrfs_read_file@@Base+0x2ce>
    fec4:	ldr	r2, [sp, #52]	; 0x34
    fec6:	mov	r3, r7
    fec8:	vmov	r1, s16
    fecc:	subs	r7, #1
    fece:	adds	r2, #122	; 0x7a
    fed0:	adds	r5, #1
    fed2:	bl	172c2 <read_extent_buffer@@Base>
    fed6:	ldr.w	r3, [r8, #388]	; 0x184
    feda:	subs	r3, #1
    fedc:	orrs	r3, r7
    fede:	add	r5, r3
    fee0:	ldr	r1, [sp, #68]	; 0x44
    fee2:	movs	r7, #0
    fee4:	mov	r3, r7
    fee6:	and.w	r2, r1, #512	; 0x200
    feea:	orrs	r3, r2
    feec:	beq.n	ff90 <btrfs_read_file@@Base+0x24c>
    feee:	mov	r0, r9
    fef0:	bl	17e00 <btrfs_release_path@@Base>
    fef4:	ldr	r3, [sp, #8]
    fef6:	mov	r2, r9
    fef8:	mov	r1, r6
    fefa:	mov	r0, r7
    fefc:	str	r7, [sp, #0]
    fefe:	str	r3, [sp, #84]	; 0x54
    ff00:	ldr	r3, [sp, #12]
    ff02:	strb.w	r7, [sp, #93]	; 0x5d
    ff06:	strb.w	r7, [sp, #94]	; 0x5e
    ff0a:	str	r3, [sp, #88]	; 0x58
    ff0c:	movs	r3, #1
    ff0e:	strb.w	r3, [sp, #92]	; 0x5c
    ff12:	add	r3, sp, #84	; 0x54
    ff14:	strb.w	r7, [sp, #95]	; 0x5f
    ff18:	strb.w	r7, [sp, #96]	; 0x60
    ff1c:	strb.w	r7, [sp, #97]	; 0x61
    ff20:	strb.w	r7, [sp, #98]	; 0x62
    ff24:	strb.w	r7, [sp, #99]	; 0x63
    ff28:	strb.w	r7, [sp, #100]	; 0x64
    ff2c:	bl	2d768 <btrfs_lookup_inode@@Base>
    ff30:	subs	r4, r0, #0
    ff32:	blt.n	ff90 <btrfs_read_file@@Base+0x24c>
    ff34:	bne.w	100a0 <btrfs_read_file@@Base+0x35c>
    ff38:	ldr	r3, [sp, #104]	; 0x68
    ff3a:	movs	r1, #25
    ff3c:	ldr	r2, [sp, #136]	; 0x88
    ff3e:	adds	r3, #96	; 0x60
    ff40:	ldr.w	r5, [r8, #388]	; 0x184
    ff44:	mla	r2, r1, r2, r3
    ff48:	subs	r5, #1
    ff4a:	ldr.w	r2, [r2, #118]	; 0x76
    ff4e:	add	r3, r2
    ff50:	ldr.w	r2, [r3, #117]!
    ff54:	adds.w	r2, r2, #4294967295	; 0xffffffff
    ff58:	ldr	r1, [r3, #4]
    ff5a:	ldr	r3, [sp, #232]	; 0xe8
    ff5c:	adc.w	r0, r1, #4294967295	; 0xffffffff
    ff60:	orr.w	r1, r2, r5
    ff64:	subs.w	r1, r1, sl
    ff68:	sbc.w	r0, r0, fp
    ff6c:	adds	r1, #1
    ff6e:	str	r1, [sp, #32]
    ff70:	adc.w	r1, r0, r7
    ff74:	str	r1, [sp, #36]	; 0x24
    ff76:	asrs	r6, r3, #31
    ff78:	ldrd	r0, r1, [sp, #32]
    ff7c:	mov	r5, r3
    ff7e:	mov	r2, r3
    ff80:	mov	r3, r6
    ff82:	cmp	r6, r1
    ff84:	it	eq
    ff86:	cmpeq	r5, r0
    ff88:	it	cc
    ff8a:	strdcc	r2, r3, [sp, #32]
    ff8e:	ldr	r5, [sp, #32]
    ff90:	add	r0, sp, #104	; 0x68
    ff92:	cmp	r4, #0
    ff94:	it	eq
    ff96:	moveq	r4, r5
    ff98:	bl	17e00 <btrfs_release_path@@Base>
    ff9c:	b.n	fdb2 <btrfs_read_file@@Base+0x6e>
    ff9e:	mov	r0, ip
    ffa0:	ldr.w	r1, [r0, #45]!
    ffa4:	adds	r1, r1, r2
    ffa6:	str	r1, [sp, #16]
    ffa8:	ldr	r4, [r0, #4]
    ffaa:	adc.w	r1, r4, r3
    ffae:	str	r1, [sp, #20]
    ffb0:	ldrd	r0, r1, [sp, #16]
    ffb4:	cmp	fp, r1
    ffb6:	it	eq
    ffb8:	cmpeq	sl, r0
    ffba:	bcs.n	10012 <btrfs_read_file@@Base+0x2ce>
    ffbc:	cmp	fp, r3
    ffbe:	mov	r0, fp
    ffc0:	it	eq
    ffc2:	cmpeq	sl, r2
    ffc4:	mov	lr, sl
    ffc6:	it	cc
    ffc8:	movcc	r0, r3
    ffca:	ldr	r3, [sp, #40]	; 0x28
    ffcc:	it	cc
    ffce:	movcc	lr, r2
    ffd0:	ldrd	r1, r2, [sp, #40]	; 0x28
    ffd4:	str	r3, [sp, #52]	; 0x34
    ffd6:	ldr	r3, [sp, #44]	; 0x2c
    ffd8:	str	r3, [sp, #64]	; 0x40
    ffda:	ldrd	r3, r4, [sp, #16]
    ffde:	cmp	r4, r2
    ffe0:	it	eq
    ffe2:	cmpeq	r3, r1
    ffe4:	itttt	cc
    ffe6:	ldrcc	r3, [sp, #16]
    ffe8:	strcc	r3, [sp, #52]	; 0x34
    ffea:	ldrcc	r3, [sp, #20]
    ffec:	strcc	r3, [sp, #64]	; 0x40
    ffee:	ldr	r3, [sp, #52]	; 0x34
    fff0:	subs.w	r3, r3, lr
    fff4:	str	r3, [sp, #24]
    fff6:	ldr	r3, [sp, #64]	; 0x40
    fff8:	sbc.w	r3, r3, r0
    fffc:	cmp	r7, #2
    fffe:	str	r3, [sp, #28]
   10000:	beq.n	1000e <btrfs_read_file@@Base+0x2ca>
   10002:	mov	r0, ip
   10004:	ldr.w	r2, [r0, #29]!
   10008:	ldr	r3, [r0, #4]
   1000a:	orrs	r3, r2
   1000c:	bne.n	1003c <btrfs_read_file@@Base+0x2f8>
   1000e:	ldr	r3, [sp, #24]
   10010:	add	r5, r3
   10012:	ldr	r2, [sp, #104]	; 0x68
   10014:	movs	r7, #0
   10016:	ldr	r3, [sp, #136]	; 0x88
   10018:	adds	r3, #1
   1001a:	str	r3, [sp, #136]	; 0x88
   1001c:	ldr.w	r2, [r2, #192]	; 0xc0
   10020:	cmp	r3, r2
   10022:	bcc.n	10096 <btrfs_read_file@@Base+0x352>
   10024:	ldr.w	r0, [r6, #464]	; 0x1d0
   10028:	add	r1, sp, #104	; 0x68
   1002a:	strb.w	r7, [sp, #169]	; 0xa9
   1002e:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   10032:	subs	r4, r0, #0
   10034:	ble.w	fe30 <btrfs_read_file@@Base+0xec>
   10038:	mov	r4, r7
   1003a:	b.n	fee0 <btrfs_read_file@@Base+0x19c>
   1003c:	mov	r3, ip
   1003e:	ldr.w	r4, [ip, #21]!
   10042:	ldr.w	r2, [r3, #37]!
   10046:	movs	r7, #0
   10048:	str	r2, [sp, #52]	; 0x34
   1004a:	ldrd	r1, r2, [sp, #24]
   1004e:	ldr	r0, [r3, #4]
   10050:	ldr.w	r3, [ip, #4]
   10054:	strd	r1, r2, [sp, #72]	; 0x48
   10058:	sub.w	r1, lr, sl
   1005c:	ldr	r2, [sp, #52]	; 0x34
   1005e:	str	r7, [sp, #4]
   10060:	add	r7, sp, #72	; 0x48
   10062:	adds	r2, r2, r4
   10064:	str	r7, [sp, #0]
   10066:	adc.w	r3, r0, r3
   1006a:	vmov	r0, s16
   1006e:	add	r1, r0
   10070:	mov	r0, r8
   10072:	bl	1c350 <read_extent_data@@Base>
   10076:	subs	r4, r0, #0
   10078:	blt.w	fee0 <btrfs_read_file@@Base+0x19c>
   1007c:	ldrd	r2, r3, [sp, #72]	; 0x48
   10080:	ldrd	r0, r1, [sp, #24]
   10084:	cmp	r3, r1
   10086:	it	eq
   10088:	cmpeq	r2, r0
   1008a:	beq.n	10092 <btrfs_read_file@@Base+0x34e>
   1008c:	mvn.w	r4, #4
   10090:	b.n	fdb2 <btrfs_read_file@@Base+0x6e>
   10092:	add	r5, r2
   10094:	b.n	10012 <btrfs_read_file@@Base+0x2ce>
   10096:	mov	r4, r7
   10098:	b.n	fe30 <btrfs_read_file@@Base+0xec>
   1009a:	mvn.w	r4, #24
   1009e:	b.n	fee0 <btrfs_read_file@@Base+0x19c>
   100a0:	mvn.w	r4, #1
   100a4:	b.n	ff90 <btrfs_read_file@@Base+0x24c>
   100a6:	mov	r0, r4
   100a8:	add	sp, #180	; 0xb4
   100aa:	vpop	{d8}
   100ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   100b2:	nop
   100b4:	str	r2, [r4, r0]
   100b6:	movs	r5, r0
   100b8:	lsls	r4, r4, #8
   100ba:	movs	r0, r0
   100bc:	add	r0, sp, #756	; 0x2f4
   100be:	movs	r2, r0
   100c0:	add	r0, sp, #532	; 0x214
   100c2:	movs	r2, r0
   100c4:	ldr	r7, [pc, #840]	; (10410 <btrfs_find_root_search@@Base+0x348>)
   100c6:	movs	r5, r0

000100c8 <btrfs_find_root_search@@Base>:
   100c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   100cc:	sub	sp, #180	; 0xb4
   100ce:	mov	sl, r2
   100d0:	ldr	r2, [pc, #644]	; (10358 <btrfs_find_root_search@@Base+0x290>)
   100d2:	str	r3, [sp, #56]	; 0x38
   100d4:	mov	r7, r1
   100d6:	ldr	r3, [pc, #644]	; (1035c <btrfs_find_root_search@@Base+0x294>)
   100d8:	add	r2, pc
   100da:	movs	r1, #0
   100dc:	mov	r6, r0
   100de:	add	r3, pc
   100e0:	str	r3, [sp, #60]	; 0x3c
   100e2:	ldr	r3, [pc, #636]	; (10360 <btrfs_find_root_search@@Base+0x298>)
   100e4:	ldr	r3, [r2, r3]
   100e6:	ldr	r3, [r3, #0]
   100e8:	str	r3, [sp, #172]	; 0xac
   100ea:	mov.w	r3, #0
   100ee:	ldr.w	r3, [r0, #308]	; 0x134
   100f2:	strd	r1, r1, [sp, #88]	; 0x58
   100f6:	strd	r1, r1, [sp, #96]	; 0x60
   100fa:	ldr.w	r3, [r3, #148]	; 0x94
   100fe:	strd	r1, r1, [sp, #36]	; 0x24
   10102:	strd	r1, r1, [sp, #80]	; 0x50
   10106:	str	r3, [sp, #44]	; 0x2c
   10108:	ldrb.w	r3, [r0, #364]	; 0x16c
   1010c:	ubfx	r0, r3, #5, #1
   10110:	orr.w	r3, r3, #32
   10114:	str	r0, [sp, #72]	; 0x48
   10116:	strb.w	r3, [r6, #364]	; 0x16c
   1011a:	ldrd	r2, r3, [r7]
   1011e:	add	r1, sp, #88	; 0x58
   10120:	mov	r0, r6
   10122:	cmp	r3, #0
   10124:	it	eq
   10126:	cmpeq	r2, #3
   10128:	add	r2, sp, #96	; 0x60
   1012a:	ittee	ne
   1012c:	movne	r4, #4
   1012e:	movne	r5, #0
   10130:	moveq	r3, #2
   10132:	moveq	r4, #0
   10134:	ite	ne
   10136:	strdne	r4, r5, [sp]
   1013a:	strdeq	r3, r4, [sp]
   1013e:	bl	29644 <btrfs_next_bg@@Base>
   10142:	cbz	r0, 10170 <btrfs_find_root_search@@Base+0xa8>
   10144:	adds	r3, r0, #2
   10146:	ite	ne
   10148:	movne	r4, r0
   1014a:	moveq	r4, #0
   1014c:	ldrb.w	r3, [r6, #364]	; 0x16c
   10150:	ldr	r2, [sp, #72]	; 0x48
   10152:	bfi	r3, r2, #5, #1
   10156:	ldr	r2, [pc, #524]	; (10364 <btrfs_find_root_search@@Base+0x29c>)
   10158:	strb.w	r3, [r6, #364]	; 0x16c
   1015c:	ldr	r3, [pc, #512]	; (10360 <btrfs_find_root_search@@Base+0x298>)
   1015e:	add	r2, pc
   10160:	ldr	r3, [r2, r3]
   10162:	ldr	r2, [r3, #0]
   10164:	ldr	r3, [sp, #172]	; 0xac
   10166:	eors	r2, r3
   10168:	beq.w	10350 <btrfs_find_root_search@@Base+0x288>
   1016c:	blx	86b8 <__stack_chk_fail@plt>
   10170:	ldrd	r3, r4, [sp, #88]	; 0x58
   10174:	strd	r3, r4, [sp, #24]
   10178:	ldr	r3, [sp, #44]	; 0x2c
   1017a:	str	r3, [sp, #76]	; 0x4c
   1017c:	ldr	r2, [sp, #96]	; 0x60
   1017e:	ldr	r3, [sp, #88]	; 0x58
   10180:	adds	r3, r3, r2
   10182:	ldr	r2, [sp, #92]	; 0x5c
   10184:	str	r3, [sp, #64]	; 0x40
   10186:	ldr	r3, [sp, #100]	; 0x64
   10188:	adc.w	r3, r2, r3
   1018c:	str	r3, [sp, #68]	; 0x44
   1018e:	ldrd	r1, r2, [sp, #64]	; 0x40
   10192:	ldrd	r3, r4, [sp, #24]
   10196:	cmp	r4, r2
   10198:	it	eq
   1019a:	cmpeq	r3, r1
   1019c:	bcs.n	1011a <btrfs_find_root_search@@Base+0x52>
   1019e:	ldr	r3, [sp, #80]	; 0x50
   101a0:	mov	r0, r6
   101a2:	str	r3, [sp, #0]
   101a4:	ldr	r3, [sp, #84]	; 0x54
   101a6:	str	r3, [sp, #4]
   101a8:	ldrd	r2, r3, [sp, #24]
   101ac:	bl	1d62c <read_tree_block@@Base>
   101b0:	mov	r5, r0
   101b2:	cbnz	r0, 101c6 <btrfs_find_root_search@@Base+0xfe>
   101b4:	ldr	r3, [sp, #24]
   101b6:	ldr	r2, [sp, #76]	; 0x4c
   101b8:	adds	r3, r3, r2
   101ba:	str	r3, [sp, #24]
   101bc:	ldr	r3, [sp, #28]
   101be:	adc.w	r3, r3, #0
   101c2:	str	r3, [sp, #28]
   101c4:	b.n	1017c <btrfs_find_root_search@@Base+0xb4>
   101c6:	cmn.w	r0, #4096	; 0x1000
   101ca:	bhi.n	101b4 <btrfs_find_root_search@@Base+0xec>
   101cc:	ldrd	r2, r3, [r7]
   101d0:	ldr.w	r1, [r5, #188]	; 0xbc
   101d4:	ldr.w	r0, [r0, #184]	; 0xb8
   101d8:	cmp	r1, r3
   101da:	it	eq
   101dc:	cmpeq	r0, r2
   101de:	bne.w	1034c <btrfs_find_root_search@@Base+0x284>
   101e2:	ldrb.w	r3, [r5, #196]	; 0xc4
   101e6:	str	r3, [sp, #32]
   101e8:	ldr	r2, [sp, #32]
   101ea:	ldrb	r3, [r7, #16]
   101ec:	cmp	r3, r2
   101ee:	bhi.w	1034c <btrfs_find_root_search@@Base+0x284>
   101f2:	ldr.w	r3, [r5, #176]	; 0xb0
   101f6:	str	r3, [sp, #16]
   101f8:	ldr.w	r3, [r5, #180]	; 0xb4
   101fc:	str	r3, [sp, #20]
   101fe:	ldrd	r0, r1, [sp, #16]
   10202:	ldrd	r2, r3, [r7, #8]
   10206:	cmp	r1, r3
   10208:	it	eq
   1020a:	cmpeq	r0, r2
   1020c:	bcc.w	1034c <btrfs_find_root_search@@Base+0x284>
   10210:	ldrd	r3, r4, [r5, #40]	; 0x28
   10214:	mov	r2, r0
   10216:	mov	r0, sl
   10218:	strd	r3, r4, [sp, #48]	; 0x30
   1021c:	mov	r3, r1
   1021e:	bl	15f84 <search_cache_extent@@Base>
   10222:	mov	fp, r0
   10224:	cbz	r0, 10236 <btrfs_find_root_search@@Base+0x16e>
   10226:	ldrd	r2, r3, [r0, #24]
   1022a:	ldrd	r0, r1, [sp, #16]
   1022e:	cmp	r1, r3
   10230:	it	eq
   10232:	cmpeq	r0, r2
   10234:	beq.n	102c8 <btrfs_find_root_search@@Base+0x200>
   10236:	movs	r0, #56	; 0x38
   10238:	blx	8820 <malloc@plt+0x4>
   1023c:	cbnz	r0, 1027e <btrfs_find_root_search@@Base+0x1b6>
   1023e:	ldr	r2, [sp, #60]	; 0x3c
   10240:	add	r4, sp, #108	; 0x6c
   10242:	ldr	r3, [pc, #292]	; (10368 <btrfs_find_root_search@@Base+0x2a0>)
   10244:	movs	r1, #1
   10246:	ldr	r0, [r2, r3]
   10248:	ldr	r3, [pc, #288]	; (1036c <btrfs_find_root_search@@Base+0x2a4>)
   1024a:	ldr	r2, [pc, #292]	; (10370 <btrfs_find_root_search@@Base+0x2a8>)
   1024c:	add	r3, pc
   1024e:	str	r3, [sp, #8]
   10250:	ldr	r3, [pc, #288]	; (10374 <btrfs_find_root_search@@Base+0x2ac>)
   10252:	add	r2, pc
   10254:	str	r1, [sp, #12]
   10256:	add	r3, pc
   10258:	str	r3, [sp, #4]
   1025a:	movs	r3, #58	; 0x3a
   1025c:	str	r3, [sp, #0]
   1025e:	ldr	r3, [pc, #280]	; (10378 <btrfs_find_root_search@@Base+0x2b0>)
   10260:	ldr	r0, [r0, #0]
   10262:	add	r3, pc
   10264:	blx	8a14 <__fprintf_chk@plt+0x4>
   10268:	movs	r1, #16
   1026a:	mov	r0, r4
   1026c:	blx	886c <backtrace@plt>
   10270:	movs	r2, #2
   10272:	mov	r1, r0
   10274:	mov	r0, r4
   10276:	blx	8b7c <backtrace_symbols_fd@plt>
   1027a:	blx	8b34 <abort@plt>
   1027e:	ldrd	r3, r4, [sp, #16]
   10282:	mov	fp, r0
   10284:	adds	r0, #48	; 0x30
   10286:	strd	r3, r4, [r0, #-24]
   1028a:	movs	r3, #1
   1028c:	movs	r4, #0
   1028e:	strd	r3, r4, [r0, #-16]
   10292:	ldr	r3, [sp, #36]	; 0x24
   10294:	str.w	r3, [r0, #-32]
   10298:	ldr	r3, [sp, #40]	; 0x28
   1029a:	str.w	r3, [r0, #-28]
   1029e:	ldr	r3, [sp, #36]	; 0x24
   102a0:	str.w	r3, [r0, #-8]
   102a4:	ldr	r3, [sp, #40]	; 0x28
   102a6:	str.w	r3, [r0, #-4]
   102aa:	bl	15e3c <cache_tree_init@@Base>
   102ae:	mov	r1, fp
   102b0:	mov	r0, sl
   102b2:	bl	15e42 <insert_cache_extent@@Base>
   102b6:	subs	r4, r0, #0
   102b8:	bge.n	102ca <btrfs_find_root_search@@Base+0x202>
   102ba:	mov	r0, r5
   102bc:	bl	16bc8 <free_extent_buffer@@Base>
   102c0:	cmp	r4, #0
   102c2:	beq.w	101b4 <btrfs_find_root_search@@Base+0xec>
   102c6:	b.n	1014c <btrfs_find_root_search@@Base+0x84>
   102c8:	movs	r4, #0
   102ca:	ldrd	r2, r3, [fp, #40]	; 0x28
   102ce:	mov.w	r9, #0
   102d2:	ldrb.w	r8, [sp, #32]
   102d6:	cmp	r3, r9
   102d8:	it	eq
   102da:	cmpeq	r2, r8
   102dc:	bcs.n	1030e <btrfs_find_root_search@@Base+0x246>
   102de:	add.w	r0, fp, #48	; 0x30
   102e2:	bl	16086 <free_extent_cache_tree@@Base>
   102e6:	strd	r8, r9, [fp, #40]	; 0x28
   102ea:	ldr	r3, [sp, #44]	; 0x2c
   102ec:	add.w	r0, fp, #48	; 0x30
   102f0:	mov.w	r8, #0
   102f4:	strd	r3, r8, [sp]
   102f8:	ldrd	r2, r3, [sp, #48]	; 0x30
   102fc:	bl	15e50 <add_cache_extent@@Base>
   10300:	subs	r4, r0, #0
   10302:	bge.n	1030a <btrfs_find_root_search@@Base+0x242>
   10304:	cmn.w	r4, #17
   10308:	bne.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   1030a:	mov	r4, r8
   1030c:	b.n	10316 <btrfs_find_root_search@@Base+0x24e>
   1030e:	cmp	r9, r3
   10310:	it	eq
   10312:	cmpeq	r8, r2
   10314:	beq.n	102ea <btrfs_find_root_search@@Base+0x222>
   10316:	ldrd	r2, r3, [r7, #24]
   1031a:	ldrd	r0, r1, [sp, #16]
   1031e:	cmp	r1, r3
   10320:	it	eq
   10322:	cmpeq	r0, r2
   10324:	bne.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   10326:	ldrb	r3, [r7, #17]
   10328:	ldr	r2, [sp, #32]
   1032a:	cmp	r3, r2
   1032c:	bne.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   1032e:	ldr	r3, [r7, #32]
   10330:	cmp	r3, #0
   10332:	bne.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   10334:	ldr	r3, [sp, #56]	; 0x38
   10336:	cbz	r3, 10348 <btrfs_find_root_search@@Base+0x280>
   10338:	ldrd	r2, r3, [sp, #48]	; 0x30
   1033c:	add.w	r0, fp, #48	; 0x30
   10340:	bl	15f84 <search_cache_extent@@Base>
   10344:	ldr	r3, [sp, #56]	; 0x38
   10346:	str	r0, [r3, #0]
   10348:	movs	r4, #1
   1034a:	b.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   1034c:	movs	r4, #0
   1034e:	b.n	102ba <btrfs_find_root_search@@Base+0x1f2>
   10350:	mov	r0, r4
   10352:	add	sp, #180	; 0xb4
   10354:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10358:	ldr	r4, [pc, #704]	; (1061c <btrfs_find_root_search@@Base+0x554>)
   1035a:	movs	r5, r0
   1035c:	ldr	r4, [pc, #680]	; (10608 <btrfs_find_root_search@@Base+0x540>)
   1035e:	movs	r5, r0
   10360:	lsls	r4, r4, #8
   10362:	movs	r0, r0
   10364:	ldr	r4, [pc, #168]	; (10410 <btrfs_find_root_search@@Base+0x348>)
   10366:	movs	r5, r0
   10368:	lsls	r4, r6, #8
   1036a:	movs	r0, r0
   1036c:	add	r4, pc, #220	; (adr r4, 1044c <btrfs_find_root_search@@Base+0x384>)
   1036e:	movs	r2, r0
   10370:	str	r5, [sp, #320]	; 0x140
   10372:	movs	r2, r0
   10374:	add	r4, pc, #224	; (adr r4, 10458 <btrfs_find_root_search@@Base+0x390>)
   10376:	movs	r2, r0
   10378:	add	r4, pc, #84	; (adr r4, 103d0 <btrfs_find_root_search@@Base+0x308>)
   1037a:	movs	r2, r0
   1037c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10380:	sub	sp, #20
   10382:	ldr	r7, [pc, #500]	; (10578 <btrfs_find_root_search@@Base+0x4b0>)
   10384:	mov	r5, r0
   10386:	ldrb.w	r8, [sp, #60]	; 0x3c
   1038a:	mov	r6, r1
   1038c:	add	r7, pc
   1038e:	str	r2, [sp, #8]
   10390:	ldr	r4, [sp, #64]	; 0x40
   10392:	eor.w	r8, r8, #1
   10396:	ldrb.w	r2, [sp, #56]	; 0x38
   1039a:	cbz	r3, 103a0 <btrfs_find_root_search@@Base+0x2d8>
   1039c:	orr.w	r8, r8, #22
   103a0:	cbz	r2, 103a6 <btrfs_find_root_search@@Base+0x2de>
   103a2:	orr.w	r8, r8, #8
   103a6:	cmp	r5, #0
   103a8:	beq.w	10564 <btrfs_find_root_search@@Base+0x49c>
   103ac:	ldr	r3, [r5, #0]
   103ae:	cmp	r3, #0
   103b0:	beq.w	10564 <btrfs_find_root_search@@Base+0x49c>
   103b4:	ands.w	r9, r8, #8
   103b8:	beq.n	103e8 <btrfs_find_root_search@@Base+0x320>
   103ba:	ldr	r0, [pc, #448]	; (1057c <btrfs_find_root_search@@Base+0x4b4>)
   103bc:	add	r0, pc
   103be:	mov	r1, r4
   103c0:	blx	8b1c <fputs@plt+0x4>
   103c4:	ldr.w	fp, [r5]
   103c8:	movs	r1, #10
   103ca:	mov	r0, fp
   103cc:	blx	88fc <strchr@plt>
   103d0:	cbnz	r0, 103ee <btrfs_find_root_search@@Base+0x326>
   103d2:	mov	r1, r4
   103d4:	mov	r0, fp
   103d6:	blx	8b1c <fputs@plt+0x4>
   103da:	tst.w	r8, #1
   103de:	bne.n	10426 <btrfs_find_root_search@@Base+0x35e>
   103e0:	movs	r0, #0
   103e2:	add	sp, #20
   103e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   103e8:	ldr	r0, [pc, #404]	; (10580 <btrfs_find_root_search@@Base+0x4b8>)
   103ea:	add	r0, pc
   103ec:	b.n	103be <btrfs_find_root_search@@Base+0x2f6>
   103ee:	cmp.w	r9, #0
   103f2:	beq.n	1041e <btrfs_find_root_search@@Base+0x356>
   103f4:	ldr.w	sl, [pc, #396]	; 10584 <btrfs_find_root_search@@Base+0x4bc>
   103f8:	add	sl, pc
   103fa:	add.w	fp, fp, #4294967295	; 0xffffffff
   103fe:	ldrb.w	r0, [fp, #1]!
   10402:	cmp	r0, #0
   10404:	beq.n	103da <btrfs_find_root_search@@Base+0x312>
   10406:	mov	r1, r4
   10408:	blx	8a84 <fputc@plt+0x4>
   1040c:	ldrb.w	r3, [fp]
   10410:	cmp	r3, #10
   10412:	bne.n	103fe <btrfs_find_root_search@@Base+0x336>
   10414:	mov	r1, r4
   10416:	mov	r0, sl
   10418:	blx	8b1c <fputs@plt+0x4>
   1041c:	b.n	103fe <btrfs_find_root_search@@Base+0x336>
   1041e:	ldr.w	sl, [pc, #360]	; 10588 <btrfs_find_root_search@@Base+0x4c0>
   10422:	add	sl, pc
   10424:	b.n	103fa <btrfs_find_root_search@@Base+0x332>
   10426:	ldr	r3, [r5, #4]
   10428:	cbnz	r3, 1043e <btrfs_find_root_search@@Base+0x376>
   1042a:	ldr	r2, [pc, #352]	; (1058c <btrfs_find_root_search@@Base+0x4c4>)
   1042c:	mov	r3, r6
   1042e:	movs	r1, #1
   10430:	mov	r0, r4
   10432:	add	r2, pc
   10434:	blx	8a14 <__fprintf_chk@plt+0x4>
   10438:	mvn.w	r0, #1
   1043c:	b.n	103e2 <btrfs_find_root_search@@Base+0x31a>
   1043e:	mov	r1, r4
   10440:	movs	r0, #10
   10442:	blx	8a84 <fputc@plt+0x4>
   10446:	cmp.w	r9, #0
   1044a:	bne.n	10496 <btrfs_find_root_search@@Base+0x3ce>
   1044c:	mov	r1, r4
   1044e:	movs	r0, #10
   10450:	blx	8a84 <fputc@plt+0x4>
   10454:	movs	r6, #4
   10456:	ldr	r3, [r5, #4]
   10458:	movs	r1, #1
   1045a:	ldr	r2, [pc, #308]	; (10590 <btrfs_find_root_search@@Base+0x4c8>)
   1045c:	mov	r0, r4
   1045e:	str	r3, [sp, #4]
   10460:	add	r2, pc
   10462:	ldr	r3, [pc, #304]	; (10594 <btrfs_find_root_search@@Base+0x4cc>)
   10464:	add	r3, pc
   10466:	str	r3, [sp, #0]
   10468:	mov	r3, r6
   1046a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1046e:	ldr	r3, [r5, #8]
   10470:	cmp	r3, #0
   10472:	beq.n	103e0 <btrfs_find_root_search@@Base+0x318>
   10474:	tst.w	r8, #2
   10478:	beq.n	103e0 <btrfs_find_root_search@@Base+0x318>
   1047a:	ldrb	r3, [r3, #0]
   1047c:	cbz	r3, 10486 <btrfs_find_root_search@@Base+0x3be>
   1047e:	mov	r1, r4
   10480:	movs	r0, #10
   10482:	blx	8a84 <fputc@plt+0x4>
   10486:	ldr.w	fp, [pc, #272]	; 10598 <btrfs_find_root_search@@Base+0x4d0>
   1048a:	adds	r5, #8
   1048c:	ldr.w	sl, [pc, #268]	; 1059c <btrfs_find_root_search@@Base+0x4d4>
   10490:	add	fp, pc
   10492:	add	sl, pc
   10494:	b.n	104ac <btrfs_find_root_search@@Base+0x3e4>
   10496:	movs	r6, #8
   10498:	b.n	10456 <btrfs_find_root_search@@Base+0x38e>
   1049a:	strd	sl, r3, [sp]
   1049e:	mov	r2, fp
   104a0:	mov	r3, r6
   104a2:	movs	r1, #1
   104a4:	mov	r0, r4
   104a6:	mov	r5, r9
   104a8:	blx	8a14 <__fprintf_chk@plt+0x4>
   104ac:	mov	r9, r5
   104ae:	ldr.w	r3, [r9], #4
   104b2:	cmp	r3, #0
   104b4:	beq.n	103e0 <btrfs_find_root_search@@Base+0x318>
   104b6:	ldrb	r2, [r3, #0]
   104b8:	cmp	r2, #0
   104ba:	bne.n	1049a <btrfs_find_root_search@@Base+0x3d2>
   104bc:	tst.w	r8, #4
   104c0:	beq.n	103e0 <btrfs_find_root_search@@Base+0x318>
   104c2:	ldr.w	sl, [pc, #220]	; 105a0 <btrfs_find_root_search@@Base+0x4d8>
   104c6:	mov	r1, r4
   104c8:	ldr.w	fp, [pc, #216]	; 105a4 <btrfs_find_root_search@@Base+0x4dc>
   104cc:	movs	r0, #10
   104ce:	blx	8a84 <fputc@plt+0x4>
   104d2:	add	sl, pc
   104d4:	ldr	r3, [pc, #208]	; (105a8 <btrfs_find_root_search@@Base+0x4e0>)
   104d6:	add	fp, pc
   104d8:	add	r3, pc
   104da:	str	r3, [sp, #12]
   104dc:	ldr.w	r8, [r5, #4]!
   104e0:	cmp.w	r8, #0
   104e4:	beq.w	103e0 <btrfs_find_root_search@@Base+0x318>
   104e8:	mov	r1, sl
   104ea:	mov	r0, r8
   104ec:	blx	8568 <strcmp@plt>
   104f0:	cbnz	r0, 1054e <btrfs_find_root_search@@Base+0x486>
   104f2:	mov	r1, r4
   104f4:	movs	r0, #10
   104f6:	blx	8a84 <fputc@plt+0x4>
   104fa:	ldr.w	r9, [pc, #176]	; 105ac <btrfs_find_root_search@@Base+0x4e4>
   104fe:	ldr	r2, [pc, #176]	; (105b0 <btrfs_find_root_search@@Base+0x4e8>)
   10500:	mov	r3, r6
   10502:	add	r9, pc
   10504:	movs	r1, #1
   10506:	add	r2, pc
   10508:	mov	r0, r4
   1050a:	str.w	r9, [sp]
   1050e:	blx	8a14 <__fprintf_chk@plt+0x4>
   10512:	ldr	r3, [pc, #160]	; (105b4 <btrfs_find_root_search@@Base+0x4ec>)
   10514:	ldr	r2, [pc, #160]	; (105b8 <btrfs_find_root_search@@Base+0x4f0>)
   10516:	movs	r1, #1
   10518:	mov	r0, r4
   1051a:	ldr.w	r8, [r7, r3]
   1051e:	add	r2, pc
   10520:	add.w	r3, r8, #4
   10524:	strd	r9, r3, [sp]
   10528:	mov	r3, r6
   1052a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1052e:	ldr	r3, [sp, #8]
   10530:	lsls	r3, r3, #28
   10532:	bpl.n	10544 <btrfs_find_root_search@@Base+0x47c>
   10534:	ldr	r2, [pc, #132]	; (105bc <btrfs_find_root_search@@Base+0x4f4>)
   10536:	add.w	r3, r8, #16
   1053a:	movs	r1, #1
   1053c:	mov	r0, r4
   1053e:	add	r2, pc
   10540:	blx	8a14 <__fprintf_chk@plt+0x4>
   10544:	mov	r1, r4
   10546:	movs	r0, #10
   10548:	blx	8a84 <fputc@plt+0x4>
   1054c:	b.n	104dc <btrfs_find_root_search@@Base+0x414>
   1054e:	ldr	r3, [sp, #12]
   10550:	mov	r2, fp
   10552:	movs	r1, #1
   10554:	mov	r0, r4
   10556:	str.w	r8, [sp, #4]
   1055a:	str	r3, [sp, #0]
   1055c:	mov	r3, r6
   1055e:	blx	8a14 <__fprintf_chk@plt+0x4>
   10562:	b.n	104dc <btrfs_find_root_search@@Base+0x414>
   10564:	ldr	r2, [pc, #88]	; (105c0 <btrfs_find_root_search@@Base+0x4f8>)
   10566:	mov	r3, r6
   10568:	movs	r1, #1
   1056a:	mov	r0, r4
   1056c:	add	r2, pc
   1056e:	blx	8a14 <__fprintf_chk@plt+0x4>
   10572:	mov.w	r0, #4294967295	; 0xffffffff
   10576:	b.n	103e2 <btrfs_find_root_search@@Base+0x31a>
   10578:	ldr	r1, [pc, #1008]	; (1096c <usage_command_group_short@@Base+0x18>)
   1057a:	movs	r5, r0
   1057c:	add	r2, pc, #952	; (adr r2, 10938 <clean_args_no_options@@Base+0x2c>)
   1057e:	movs	r2, r0
   10580:	add	r2, pc, #724	; (adr r2, 10858 <usage_unknown_option@@Base+0x2c>)
   10582:	movs	r2, r0
   10584:	add	r2, pc, #712	; (adr r2, 10850 <usage_unknown_option@@Base+0x24>)
   10586:	movs	r2, r0
   10588:	add	r2, pc, #532	; (adr r2, 107a0 <clean_args_no_options_relaxed@@Base+0x20>)
   1058a:	movs	r2, r0
   1058c:	add	r2, pc, #500	; (adr r2, 10784 <clean_args_no_options_relaxed@@Base+0x4>)
   1058e:	movs	r2, r0
   10590:	add	r2, pc, #440	; (adr r2, 1074c <check_argc_max@@Base+0x8>)
   10592:	movs	r2, r0
   10594:	ldr	r2, [sp, #676]	; 0x2a4
   10596:	movs	r2, r0
   10598:	add	r2, pc, #248	; (adr r2, 10694 <set_argv0@@Base+0x8>)
   1059a:	movs	r2, r0
   1059c:	ldr	r2, [sp, #492]	; 0x1ec
   1059e:	movs	r2, r0
   105a0:	add	r2, pc, #12	; (adr r2, 105b0 <btrfs_find_root_search@@Base+0x4e8>)
   105a2:	movs	r2, r0
   105a4:	add	r1, pc, #992	; (adr r1, 10988 <usage_command_group_short@@Base+0x34>)
   105a6:	movs	r2, r0
   105a8:	ldr	r2, [sp, #212]	; 0xd4
   105aa:	movs	r2, r0
   105ac:	ldr	r2, [sp, #44]	; 0x2c
   105ae:	movs	r2, r0
   105b0:	add	r1, pc, #888	; (adr r1, 1092c <clean_args_no_options@@Base+0x20>)
   105b2:	movs	r2, r0
   105b4:	lsls	r4, r2, #9
   105b6:	movs	r0, r0
   105b8:	add	r1, pc, #872	; (adr r1, 10924 <clean_args_no_options@@Base+0x18>)
   105ba:	movs	r2, r0
   105bc:			; <UNDEFINED> instruction: 0xf7940002
   105c0:	add	r1, pc, #720	; (adr r1, 10894 <usage_unknown_option@@Base+0x68>)
   105c2:	movs	r2, r0
   105c4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   105c8:	movs	r4, #0
   105ca:	add.w	r8, r0, #8
   105ce:	mov	r6, r1
   105d0:	mov	r7, r2
   105d2:	mov	r9, r4
   105d4:	mov.w	sl, #1
   105d8:	ldr.w	r5, [r8], #4
   105dc:	cbnz	r5, 105e4 <btrfs_find_root_search@@Base+0x51c>
   105de:	add	sp, #16
   105e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   105e4:	ldr	r3, [r5, #16]
   105e6:	lsls	r3, r3, #31
   105e8:	bmi.n	1062e <btrfs_find_root_search@@Base+0x566>
   105ea:	cbz	r6, 105fa <btrfs_find_root_search@@Base+0x532>
   105ec:	cmp.w	r9, #0
   105f0:	beq.n	105fa <btrfs_find_root_search@@Base+0x532>
   105f2:	mov	r1, r7
   105f4:	movs	r0, #10
   105f6:	blx	8a84 <fputc@plt+0x4>
   105fa:	ldr	r3, [r5, #12]
   105fc:	cbnz	r3, 10634 <btrfs_find_root_search@@Base+0x56c>
   105fe:	cbz	r4, 10608 <btrfs_find_root_search@@Base+0x540>
   10600:	mov	r1, r7
   10602:	movs	r0, #10
   10604:	blx	8a84 <fputc@plt+0x4>
   10608:	ldr	r2, [r5, #16]
   1060a:	str	r7, [sp, #8]
   1060c:	ubfx	r3, r2, #1, #1
   10610:	strd	sl, r3, [sp]
   10614:	mov	r3, r6
   10616:	ldr	r1, [r5, #0]
   10618:	ldr	r0, [r5, #8]
   1061a:	bl	1037c <btrfs_find_root_search@@Base+0x2b4>
   1061e:	ldr	r4, [r5, #16]
   10620:	ands.w	r4, r4, #2
   10624:	beq.n	1062e <btrfs_find_root_search@@Base+0x566>
   10626:	movs	r0, #10
   10628:	movs	r4, #0
   1062a:	blx	8988 <putchar@plt+0x4>
   1062e:	add.w	r9, r9, #1
   10632:	b.n	105d8 <btrfs_find_root_search@@Base+0x510>
   10634:	cbnz	r6, 10644 <btrfs_find_root_search@@Base+0x57c>
   10636:	cmp.w	r9, #0
   1063a:	beq.n	10644 <btrfs_find_root_search@@Base+0x57c>
   1063c:	mov	r1, r7
   1063e:	movs	r0, #10
   10640:	blx	8a84 <fputc@plt+0x4>
   10644:	ldr	r0, [r5, #12]
   10646:	mov	r2, r7
   10648:	mov	r1, r6
   1064a:	bl	105c4 <btrfs_find_root_search@@Base+0x4fc>
   1064e:	cmp	r6, #0
   10650:	it	eq
   10652:	moveq	r4, #1
   10654:	b.n	1062e <btrfs_find_root_search@@Base+0x566>

00010656 <fixup_argv0@@Base>:
   10656:	push	{r0, r1, r4, r5, r6, lr}
   10658:	mov	r4, r0
   1065a:	ldr	r5, [pc, #40]	; (10684 <fixup_argv0@@Base+0x2e>)
   1065c:	mov	r6, r1
   1065e:	add	r5, pc
   10660:	mov	r0, r5
   10662:	blx	88f0 <strlen@plt>
   10666:	ldr	r3, [pc, #32]	; (10688 <fixup_argv0@@Base+0x32>)
   10668:	movs	r2, #1
   1066a:	str	r6, [sp, #4]
   1066c:	add	r3, pc
   1066e:	str	r3, [sp, #0]
   10670:	mov.w	r3, #4294967295	; 0xffffffff
   10674:	rsb	r1, r0, #4096	; 0x1000
   10678:	add	r0, r5
   1067a:	blx	8b70 <__snprintf_chk@plt>
   1067e:	str	r5, [r4, #0]
   10680:	add	sp, #8
   10682:	pop	{r4, r5, r6, pc}
   10684:	ldr	r2, [pc, #440]	; (10840 <usage_unknown_option@@Base+0x14>)
   10686:	movs	r5, r0
   10688:			; <UNDEFINED> instruction: 0xf6670002

0001068c <set_argv0@@Base>:
   1068c:	push	{r3, lr}
   1068e:	mov.w	r2, #4096	; 0x1000
   10692:	ldr	r3, [pc, #20]	; (106a8 <set_argv0@@Base+0x1c>)
   10694:	ldr	r1, [r0, #0]
   10696:	add	r3, pc
   10698:	mov	r0, r3
   1069a:	blx	8994 <strncpy@plt>
   1069e:	movs	r2, #0
   106a0:	strb.w	r2, [r0, #4095]	; 0xfff
   106a4:	pop	{r3, pc}
   106a6:	nop
   106a8:	ldr	r2, [pc, #216]	; (10784 <clean_args_no_options_relaxed@@Base+0x4>)
   106aa:	movs	r5, r0

000106ac <check_argc_exact@@Base>:
   106ac:	ldr	r3, [pc, #64]	; (106f0 <check_argc_exact@@Base+0x44>)
   106ae:	cmp	r0, r1
   106b0:	push	{r4, r5, lr}
   106b2:	add	r3, pc
   106b4:	sub	sp, #20
   106b6:	mov	r5, r0
   106b8:	mov	r4, r1
   106ba:	beq.n	106de <check_argc_exact@@Base+0x32>
   106bc:	ldr	r2, [pc, #52]	; (106f4 <check_argc_exact@@Base+0x48>)
   106be:	cmp	r1, #1
   106c0:	ldr	r3, [r3, r2]
   106c2:	ldr	r0, [r3, #0]
   106c4:	bgt.n	106e8 <check_argc_exact@@Base+0x3c>
   106c6:	ldr	r3, [pc, #48]	; (106f8 <check_argc_exact@@Base+0x4c>)
   106c8:	add	r3, pc
   106ca:	ldr	r2, [pc, #48]	; (106fc <check_argc_exact@@Base+0x50>)
   106cc:	movs	r1, #1
   106ce:	strd	r3, r5, [sp, #4]
   106d2:	ldr	r3, [pc, #44]	; (10700 <check_argc_exact@@Base+0x54>)
   106d4:	add	r2, pc
   106d6:	str	r4, [sp, #0]
   106d8:	add	r3, pc
   106da:	blx	8a14 <__fprintf_chk@plt+0x4>
   106de:	subs	r0, r5, r4
   106e0:	it	ne
   106e2:	movne	r0, #1
   106e4:	add	sp, #20
   106e6:	pop	{r4, r5, pc}
   106e8:	ldr	r3, [pc, #24]	; (10704 <check_argc_exact@@Base+0x58>)
   106ea:	add	r3, pc
   106ec:	b.n	106ca <check_argc_exact@@Base+0x1e>
   106ee:	nop
   106f0:	mov	lr, sl
   106f2:	movs	r5, r0
   106f4:	lsls	r4, r6, #8
   106f6:	movs	r0, r0
   106f8:	ldr	r0, [sp, #276]	; 0x114
   106fa:	movs	r2, r0
   106fc:	add	r0, pc, #380	; (adr r0, 1087c <usage_unknown_option@@Base+0x50>)
   106fe:	movs	r2, r0
   10700:	ldr	r1, [pc, #976]	; (10ad4 <usage_command_group@@Base+0x48>)
   10702:	movs	r5, r0
   10704:			; <UNDEFINED> instruction: 0xf5eb0002

00010708 <check_argc_min@@Base>:
   10708:	ldr	r3, [pc, #40]	; (10734 <check_argc_min@@Base+0x2c>)
   1070a:	cmp	r0, r1
   1070c:	push	{r0, r1, r4, lr}
   1070e:	add	r3, pc
   10710:	bge.n	10730 <check_argc_min@@Base+0x28>
   10712:	ldr	r2, [pc, #36]	; (10738 <check_argc_min@@Base+0x30>)
   10714:	ldr	r4, [r3, r2]
   10716:	ldr	r3, [pc, #36]	; (1073c <check_argc_min@@Base+0x34>)
   10718:	ldr	r2, [pc, #36]	; (10740 <check_argc_min@@Base+0x38>)
   1071a:	strd	r0, r1, [sp]
   1071e:	add	r3, pc
   10720:	ldr	r0, [r4, #0]
   10722:	add	r2, pc
   10724:	movs	r1, #1
   10726:	blx	8a14 <__fprintf_chk@plt+0x4>
   1072a:	movs	r0, #1
   1072c:	add	sp, #8
   1072e:	pop	{r4, pc}
   10730:	movs	r0, #0
   10732:	b.n	1072c <check_argc_min@@Base+0x24>
   10734:	mov	r2, pc
   10736:	movs	r5, r0
   10738:	lsls	r4, r6, #8
   1073a:	movs	r0, r0
   1073c:	ldr	r1, [pc, #696]	; (109f8 <usage_command_group_short@@Base+0xa4>)
   1073e:	movs	r5, r0
   10740:	add	r0, pc, #252	; (adr r0, 10840 <usage_unknown_option@@Base+0x14>)
   10742:	movs	r2, r0

00010744 <check_argc_max@@Base>:
   10744:	ldr	r3, [pc, #40]	; (10770 <check_argc_max@@Base+0x2c>)
   10746:	cmp	r0, r1
   10748:	push	{r0, r1, r4, lr}
   1074a:	add	r3, pc
   1074c:	ble.n	1076c <check_argc_max@@Base+0x28>
   1074e:	ldr	r2, [pc, #36]	; (10774 <check_argc_max@@Base+0x30>)
   10750:	ldr	r4, [r3, r2]
   10752:	ldr	r3, [pc, #36]	; (10778 <check_argc_max@@Base+0x34>)
   10754:	ldr	r2, [pc, #36]	; (1077c <check_argc_max@@Base+0x38>)
   10756:	strd	r0, r1, [sp]
   1075a:	add	r3, pc
   1075c:	ldr	r0, [r4, #0]
   1075e:	add	r2, pc
   10760:	movs	r1, #1
   10762:	blx	8a14 <__fprintf_chk@plt+0x4>
   10766:	movs	r0, #1
   10768:	add	sp, #8
   1076a:	pop	{r4, pc}
   1076c:	movs	r0, #0
   1076e:	b.n	10768 <check_argc_max@@Base+0x24>
   10770:	mov	r6, r7
   10772:	movs	r5, r0
   10774:	lsls	r4, r6, #8
   10776:	movs	r0, r0
   10778:	ldr	r1, [pc, #456]	; (10944 <clean_args_no_options@@Base+0x38>)
   1077a:	movs	r5, r0
   1077c:	add	r0, pc, #232	; (adr r0, 10868 <usage_unknown_option@@Base+0x3c>)
   1077e:	movs	r2, r0

00010780 <clean_args_no_options_relaxed@@Base>:
   10780:	push	{r4, lr}
   10782:	cmp	r1, #1
   10784:	ldr	r4, [pc, #24]	; (107a0 <clean_args_no_options_relaxed@@Base+0x20>)
   10786:	add	r4, pc
   10788:	ble.n	1079e <clean_args_no_options_relaxed@@Base+0x1e>
   1078a:	ldr	r1, [pc, #24]	; (107a4 <clean_args_no_options_relaxed@@Base+0x24>)
   1078c:	ldr	r0, [r2, #4]
   1078e:	add	r1, pc
   10790:	blx	8568 <strcmp@plt>
   10794:	cbnz	r0, 1079e <clean_args_no_options_relaxed@@Base+0x1e>
   10796:	ldr	r3, [pc, #16]	; (107a8 <clean_args_no_options_relaxed@@Base+0x28>)
   10798:	movs	r2, #2
   1079a:	ldr	r3, [r4, r3]
   1079c:	str	r2, [r3, #0]
   1079e:	pop	{r4, pc}
   107a0:	mov	r2, r0
   107a2:	movs	r5, r0
   107a4:	str	r3, [sp, #584]	; 0x248
   107a6:	movs	r2, r0
   107a8:	lsls	r0, r5, #8
	...

000107ac <output_format_name@@Base>:
   107ac:	ldr	r3, [pc, #36]	; (107d4 <output_format_name@@Base+0x28>)
   107ae:	cmp	r0, #4
   107b0:	add	r3, pc
   107b2:	beq.n	107c8 <output_format_name@@Base+0x1c>
   107b4:	cmp	r0, #8
   107b6:	bne.n	107cc <output_format_name@@Base+0x20>
   107b8:	movs	r2, #1
   107ba:	movs	r0, #12
   107bc:	muls	r0, r2
   107be:	ldr	r2, [pc, #24]	; (107d8 <output_format_name@@Base+0x2c>)
   107c0:	ldr	r3, [r3, r2]
   107c2:	adds	r0, #4
   107c4:	add	r0, r3
   107c6:	bx	lr
   107c8:	movs	r2, #0
   107ca:	b.n	107ba <output_format_name@@Base+0xe>
   107cc:	ldr	r0, [pc, #12]	; (107dc <output_format_name@@Base+0x30>)
   107ce:	add	r0, pc
   107d0:	bx	lr
   107d2:	nop
   107d4:	cmp	r8, fp
   107d6:	movs	r5, r0
   107d8:	lsls	r4, r2, #9
   107da:	movs	r0, r0
   107dc:	ldr	r7, [sp, #1016]	; 0x3f8
   107de:	movs	r2, r0

000107e0 <usage_command@@Base>:
   107e0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   107e2:	mov	r4, r0
   107e4:	ldr	r5, [pc, #56]	; (10820 <usage_command@@Base+0x40>)
   107e6:	mov	r6, r2
   107e8:	mov	r3, r1
   107ea:	ldr	r0, [r0, #8]
   107ec:	add	r5, pc
   107ee:	ldr	r1, [r4, #0]
   107f0:	ldr	r2, [r4, #16]
   107f2:	cbz	r6, 10816 <usage_command@@Base+0x36>
   107f4:	ldr	r4, [pc, #44]	; (10824 <usage_command@@Base+0x44>)
   107f6:	ldr	r4, [r5, r4]
   107f8:	movs	r5, #0
   107fa:	ldr	r4, [r4, #0]
   107fc:	strd	r5, r5, [sp]
   10800:	str	r4, [sp, #8]
   10802:	bl	1037c <btrfs_find_root_search@@Base+0x2b4>
   10806:	cbnz	r0, 1081a <usage_command@@Base+0x3a>
   10808:	mov	r1, r4
   1080a:	movs	r0, #10
   1080c:	add	sp, #16
   1080e:	ldmia.w	sp!, {r4, r5, r6, lr}
   10812:	b.w	8a80 <fputc@plt>
   10816:	ldr	r4, [pc, #16]	; (10828 <usage_command@@Base+0x48>)
   10818:	b.n	107f6 <usage_command@@Base+0x16>
   1081a:	add	sp, #16
   1081c:	pop	{r4, r5, r6, pc}
   1081e:	nop
   10820:	cmp	ip, r3
   10822:	movs	r5, r0
   10824:	lsls	r4, r6, #8
   10826:	movs	r0, r0
   10828:	lsls	r0, r3, #9
	...

0001082c <usage_unknown_option@@Base>:
   1082c:	push	{r0, r1, r7, lr}
   1082e:	mov	r6, r0
   10830:	ldr	r3, [r0, #8]
   10832:	mov	r8, r1
   10834:	ldr	r7, [pc, #124]	; (108b4 <usage_unknown_option@@Base+0x88>)
   10836:	ldr	r2, [r3, #0]
   10838:	movs	r3, #0
   1083a:	mov	r4, r3
   1083c:	add	r7, pc
   1083e:	mov	r1, r3
   10840:	ldrb	r3, [r2, r4]
   10842:	cmp	r3, #60	; 0x3c
   10844:	bne.n	1089a <usage_unknown_option@@Base+0x6e>
   10846:	subs	r4, #1
   10848:	ldr	r3, [pc, #108]	; (108b8 <usage_unknown_option@@Base+0x8c>)
   1084a:	movs	r1, #1
   1084c:	ldr	r5, [r7, r3]
   1084e:	mov	r3, r4
   10850:	str	r2, [sp, #0]
   10852:	ldr	r2, [pc, #104]	; (108bc <usage_unknown_option@@Base+0x90>)
   10854:	ldr	r0, [r5, #0]
   10856:	add	r2, pc
   10858:	blx	8a14 <__fprintf_chk@plt+0x4>
   1085c:	ldr	r3, [pc, #96]	; (108c0 <usage_unknown_option@@Base+0x94>)
   1085e:	ldr	r3, [r7, r3]
   10860:	ldr	r3, [r3, #0]
   10862:	cbnz	r3, 108ae <usage_unknown_option@@Base+0x82>
   10864:	ldr	r3, [pc, #92]	; (108c4 <usage_unknown_option@@Base+0x98>)
   10866:	ldr	r2, [pc, #96]	; (108c8 <usage_unknown_option@@Base+0x9c>)
   10868:	ldr	r3, [r7, r3]
   1086a:	add	r2, pc
   1086c:	ldr	r3, [r3, #0]
   1086e:	add.w	r3, r3, #1073741824	; 0x40000000
   10872:	subs	r3, #1
   10874:	ldr.w	r3, [r8, r3, lsl #2]
   10878:	movs	r1, #1
   1087a:	ldr	r0, [r5, #0]
   1087c:	blx	8a14 <__fprintf_chk@plt+0x4>
   10880:	ldr	r3, [r6, #8]
   10882:	ldr	r2, [pc, #72]	; (108cc <usage_unknown_option@@Base+0xa0>)
   10884:	movs	r1, #1
   10886:	ldr	r3, [r3, #0]
   10888:	add	r2, pc
   1088a:	str	r3, [sp, #0]
   1088c:	mov	r3, r4
   1088e:	ldr	r0, [r5, #0]
   10890:	blx	8a14 <__fprintf_chk@plt+0x4>
   10894:	movs	r0, #1
   10896:	blx	88e4 <exit@plt>
   1089a:	cmp	r3, #91	; 0x5b
   1089c:	beq.n	10846 <usage_unknown_option@@Base+0x1a>
   1089e:	cmp	r1, #32
   108a0:	bne.n	108a6 <usage_unknown_option@@Base+0x7a>
   108a2:	cmp	r3, #45	; 0x2d
   108a4:	beq.n	10846 <usage_unknown_option@@Base+0x1a>
   108a6:	adds	r4, #1
   108a8:	cmp	r3, #0
   108aa:	bne.n	1083e <usage_unknown_option@@Base+0x12>
   108ac:	b.n	10848 <usage_unknown_option@@Base+0x1c>
   108ae:	ldr	r2, [pc, #32]	; (108d0 <usage_unknown_option@@Base+0xa4>)
   108b0:	add	r2, pc
   108b2:	b.n	10878 <usage_unknown_option@@Base+0x4c>
   108b4:	cmp	r4, r9
   108b6:	movs	r5, r0
   108b8:	lsls	r4, r6, #8
   108ba:	movs	r0, r0
   108bc:	ldr	r7, [sp, #504]	; 0x1f8
   108be:	movs	r2, r0
   108c0:	lsls	r0, r6, #8
   108c2:	movs	r0, r0
   108c4:	lsls	r0, r5, #8
   108c6:	movs	r0, r0
   108c8:	ldr	r7, [sp, #452]	; 0x1c4
   108ca:	movs	r2, r0
   108cc:	ldr	r7, [sp, #520]	; 0x208
   108ce:	movs	r2, r0
   108d0:	ldr	r7, [sp, #276]	; 0x114
   108d2:	movs	r2, r0

000108d4 <usage@@Base>:
   108d4:	push	{r0, r1, r2, r3, r4, lr}
   108d6:	ldr	r3, [pc, #44]	; (10904 <usage@@Base+0x30>)
   108d8:	ldr	r2, [pc, #44]	; (10908 <usage@@Base+0x34>)
   108da:	add	r3, pc
   108dc:	ldr	r3, [r3, r2]
   108de:	movs	r2, #0
   108e0:	mov	r1, r2
   108e2:	ldr	r4, [r3, #0]
   108e4:	movs	r3, #1
   108e6:	strd	r2, r2, [sp]
   108ea:	str	r4, [sp, #8]
   108ec:	ldr	r0, [r0, #8]
   108ee:	bl	1037c <btrfs_find_root_search@@Base+0x2b4>
   108f2:	cbnz	r0, 108fc <usage@@Base+0x28>
   108f4:	mov	r1, r4
   108f6:	movs	r0, #10
   108f8:	blx	8a84 <fputc@plt+0x4>
   108fc:	movs	r0, #1
   108fe:	blx	88e4 <exit@plt>
   10902:	nop
   10904:	add	lr, r5
   10906:	movs	r5, r0
   10908:	lsls	r4, r6, #8
	...

0001090c <clean_args_no_options@@Base>:
   1090c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10910:	mov	r4, r0
   10912:	ldr	r7, [pc, #56]	; (1094c <clean_args_no_options@@Base+0x40>)
   10914:	mov	r5, r1
   10916:	ldr.w	r8, [pc, #56]	; 10950 <clean_args_no_options@@Base+0x44>
   1091a:	mov	r6, r2
   1091c:	add	r7, pc
   1091e:	mov.w	r9, #0
   10922:	add	r8, pc
   10924:	mov	r3, r7
   10926:	mov	r2, r8
   10928:	mov	r1, r6
   1092a:	mov	r0, r5
   1092c:	str.w	r9, [sp]
   10930:	blx	88c0 <getopt_long@plt>
   10934:	cmp	r0, #0
   10936:	blt.n	10944 <clean_args_no_options@@Base+0x38>
   10938:	ldr	r1, [r4, #8]
   1093a:	cmp	r1, #0
   1093c:	beq.n	10924 <clean_args_no_options@@Base+0x18>
   1093e:	mov	r0, r4
   10940:	bl	108d4 <usage@@Base>
   10944:	add	sp, #12
   10946:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1094a:	nop
   1094c:	add	r1, pc, #0	; (adr r1, 10950 <clean_args_no_options@@Base+0x44>)
   1094e:	movs	r2, r0
   10950:	str	r5, [sp, #940]	; 0x3ac
   10952:	movs	r2, r0

00010954 <usage_command_group_short@@Base>:
   10954:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   10958:	mov	r5, r0
   1095a:	ldr	r7, [pc, #248]	; (10a54 <usage_command_group_short@@Base+0x100>)
   1095c:	ldr	r3, [pc, #248]	; (10a58 <usage_command_group_short@@Base+0x104>)
   1095e:	add	r7, pc
   10960:	ldr	r6, [r0, #0]
   10962:	ldr	r3, [r7, r3]
   10964:	ldr	r4, [r3, #0]
   10966:	cmp	r6, #0
   10968:	bne.n	109e8 <usage_command_group_short@@Base+0x94>
   1096a:	mov	r1, r4
   1096c:	movs	r0, #10
   1096e:	blx	8a84 <fputc@plt+0x4>
   10972:	ldr	r0, [pc, #232]	; (10a5c <usage_command_group_short@@Base+0x108>)
   10974:	mov	r1, r4
   10976:	ldr.w	r8, [pc, #232]	; 10a60 <usage_command_group_short@@Base+0x10c>
   1097a:	add	r0, pc
   1097c:	adds	r5, #8
   1097e:	blx	8b1c <fputs@plt+0x4>
   10982:	add	r8, pc
   10984:	mov	r6, r5
   10986:	ldr.w	r3, [r6], #4
   1098a:	cmp	r3, #0
   1098c:	bne.n	10a14 <usage_command_group_short@@Base+0xc0>
   1098e:	ldr	r0, [pc, #212]	; (10a64 <usage_command_group_short@@Base+0x110>)
   10990:	mov	r1, r4
   10992:	ldr	r6, [pc, #212]	; (10a68 <usage_command_group_short@@Base+0x114>)
   10994:	add	r0, pc
   10996:	blx	8b1c <fputs@plt+0x4>
   1099a:	add	r6, pc
   1099c:	ldr.w	r3, [r5], #4
   109a0:	cmp	r3, #0
   109a2:	bne.n	10a32 <usage_command_group_short@@Base+0xde>
   109a4:	mov	r1, r4
   109a6:	movs	r0, #10
   109a8:	blx	8a84 <fputc@plt+0x4>
   109ac:	ldr	r3, [pc, #188]	; (10a6c <usage_command_group_short@@Base+0x118>)
   109ae:	ldr	r0, [pc, #192]	; (10a70 <usage_command_group_short@@Base+0x11c>)
   109b0:	ldr	r4, [r7, r3]
   109b2:	add	r0, pc
   109b4:	ldr	r1, [r4, #0]
   109b6:	blx	8b1c <fputs@plt+0x4>
   109ba:	ldr	r0, [pc, #184]	; (10a74 <usage_command_group_short@@Base+0x120>)
   109bc:	ldr	r1, [r4, #0]
   109be:	add	r0, pc
   109c0:	blx	8b1c <fputs@plt+0x4>
   109c4:	ldr	r0, [pc, #176]	; (10a78 <usage_command_group_short@@Base+0x124>)
   109c6:	ldr	r1, [r4, #0]
   109c8:	add	r0, pc
   109ca:	blx	8b1c <fputs@plt+0x4>
   109ce:	ldr	r0, [pc, #172]	; (10a7c <usage_command_group_short@@Base+0x128>)
   109d0:	ldr	r1, [r4, #0]
   109d2:	add	r0, pc
   109d4:	blx	8b1c <fputs@plt+0x4>
   109d8:	ldr	r0, [pc, #164]	; (10a80 <usage_command_group_short@@Base+0x12c>)
   109da:	ldr	r1, [r4, #0]
   109dc:	add	r0, pc
   109de:	add	sp, #8
   109e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   109e4:	b.w	8b18 <fputs@plt>
   109e8:	ldr	r3, [r6, #0]
   109ea:	cmp	r3, #0
   109ec:	beq.n	1096a <usage_command_group_short@@Base+0x16>
   109ee:	ldr	r2, [pc, #148]	; (10a84 <usage_command_group_short@@Base+0x130>)
   109f0:	movs	r1, #1
   109f2:	mov	r0, r4
   109f4:	ldr.w	r8, [pc, #144]	; 10a88 <usage_command_group_short@@Base+0x134>
   109f8:	add	r2, pc
   109fa:	blx	8a14 <__fprintf_chk@plt+0x4>
   109fe:	add	r8, pc
   10a00:	ldr.w	r3, [r6, #4]!
   10a04:	cmp	r3, #0
   10a06:	beq.n	1096a <usage_command_group_short@@Base+0x16>
   10a08:	mov	r2, r8
   10a0a:	movs	r1, #1
   10a0c:	mov	r0, r4
   10a0e:	blx	8a14 <__fprintf_chk@plt+0x4>
   10a12:	b.n	10a00 <usage_command_group_short@@Base+0xac>
   10a14:	ldr	r2, [r3, #16]
   10a16:	lsls	r1, r2, #31
   10a18:	bmi.n	10986 <usage_command_group_short@@Base+0x32>
   10a1a:	ldr	r1, [r3, #12]
   10a1c:	cmp	r1, #0
   10a1e:	beq.n	10986 <usage_command_group_short@@Base+0x32>
   10a20:	ldr	r2, [r1, #4]
   10a22:	mov	r0, r4
   10a24:	movs	r1, #1
   10a26:	str	r2, [sp, #0]
   10a28:	mov	r2, r8
   10a2a:	ldr	r3, [r3, #0]
   10a2c:	blx	8a14 <__fprintf_chk@plt+0x4>
   10a30:	b.n	10986 <usage_command_group_short@@Base+0x32>
   10a32:	ldr	r2, [r3, #16]
   10a34:	lsls	r2, r2, #31
   10a36:	bmi.n	1099c <usage_command_group_short@@Base+0x48>
   10a38:	ldr	r2, [r3, #12]
   10a3a:	cmp	r2, #0
   10a3c:	bne.n	1099c <usage_command_group_short@@Base+0x48>
   10a3e:	ldr	r2, [r3, #8]
   10a40:	movs	r1, #1
   10a42:	mov	r0, r4
   10a44:	ldr	r2, [r2, #4]
   10a46:	str	r2, [sp, #0]
   10a48:	mov	r2, r6
   10a4a:	ldr	r3, [r3, #0]
   10a4c:	blx	8a14 <__fprintf_chk@plt+0x4>
   10a50:	b.n	1099c <usage_command_group_short@@Base+0x48>
   10a52:	nop
   10a54:	add	r2, r5
   10a56:	movs	r5, r0
   10a58:	lsls	r0, r3, #9
   10a5a:	movs	r0, r0
   10a5c:	ldr	r6, [sp, #736]	; 0x2e0
   10a5e:	movs	r2, r0
   10a60:	ldr	r6, [sp, #860]	; 0x35c
   10a62:	movs	r2, r0
   10a64:	ldr	r6, [sp, #840]	; 0x348
   10a66:	movs	r2, r0
   10a68:	ldr	r6, [sp, #764]	; 0x2fc
   10a6a:	movs	r2, r0
   10a6c:	lsls	r4, r6, #8
   10a6e:	movs	r0, r0
   10a70:	ldr	r6, [sp, #768]	; 0x300
   10a72:	movs	r2, r0
   10a74:	ldr	r6, [sp, #972]	; 0x3cc
   10a76:	movs	r2, r0
   10a78:	ldr	r7, [sp, #192]	; 0xc0
   10a7a:	movs	r2, r0
   10a7c:	ldr	r7, [sp, #420]	; 0x1a4
   10a7e:	movs	r2, r0
   10a80:	ldr	r7, [sp, #640]	; 0x280
   10a82:	movs	r2, r0
   10a84:	ldr	r6, [sp, #300]	; 0x12c
   10a86:	movs	r2, r0
   10a88:	ldr	r6, [sp, #320]	; 0x140
   10a8a:	movs	r2, r0

00010a8c <usage_command_group@@Base>:
   10a8c:	ldr	r3, [pc, #120]	; (10b08 <usage_command_group@@Base+0x7c>)
   10a8e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10a92:	add	r3, pc
   10a94:	ldr	r5, [r0, #0]
   10a96:	mov	r6, r0
   10a98:	mov	r7, r1
   10a9a:	cbz	r2, 10ac6 <usage_command_group@@Base+0x3a>
   10a9c:	ldr	r2, [pc, #108]	; (10b0c <usage_command_group@@Base+0x80>)
   10a9e:	ldr	r3, [r3, r2]
   10aa0:	ldr	r4, [r3, #0]
   10aa2:	cbnz	r5, 10aca <usage_command_group@@Base+0x3e>
   10aa4:	mov	r1, r4
   10aa6:	movs	r0, #10
   10aa8:	blx	8a84 <fputc@plt+0x4>
   10aac:	mov	r2, r4
   10aae:	mov	r1, r7
   10ab0:	mov	r0, r6
   10ab2:	bl	105c4 <btrfs_find_root_search@@Base+0x4fc>
   10ab6:	mov	r1, r4
   10ab8:	movs	r0, #10
   10aba:	blx	8a84 <fputc@plt+0x4>
   10abe:	ldr	r3, [r6, #4]
   10ac0:	cbnz	r3, 10af6 <usage_command_group@@Base+0x6a>
   10ac2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10ac6:	ldr	r2, [pc, #72]	; (10b10 <usage_command_group@@Base+0x84>)
   10ac8:	b.n	10a9e <usage_command_group@@Base+0x12>
   10aca:	ldr	r3, [r5, #0]
   10acc:	cmp	r3, #0
   10ace:	beq.n	10aa4 <usage_command_group@@Base+0x18>
   10ad0:	ldr	r2, [pc, #64]	; (10b14 <usage_command_group@@Base+0x88>)
   10ad2:	movs	r1, #1
   10ad4:	mov	r0, r4
   10ad6:	ldr.w	r8, [pc, #64]	; 10b18 <usage_command_group@@Base+0x8c>
   10ada:	add	r2, pc
   10adc:	blx	8a14 <__fprintf_chk@plt+0x4>
   10ae0:	add	r8, pc
   10ae2:	ldr.w	r3, [r5, #4]!
   10ae6:	cmp	r3, #0
   10ae8:	beq.n	10aa4 <usage_command_group@@Base+0x18>
   10aea:	mov	r2, r8
   10aec:	movs	r1, #1
   10aee:	mov	r0, r4
   10af0:	blx	8a14 <__fprintf_chk@plt+0x4>
   10af4:	b.n	10ae2 <usage_command_group@@Base+0x56>
   10af6:	ldr	r2, [pc, #36]	; (10b1c <usage_command_group@@Base+0x90>)
   10af8:	mov	r0, r4
   10afa:	movs	r1, #1
   10afc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10b00:	add	r2, pc
   10b02:	b.w	8a10 <__fprintf_chk@plt>
   10b06:	nop
   10b08:	cmn	r6, r6
   10b0a:	movs	r5, r0
   10b0c:	lsls	r4, r6, #8
   10b0e:	movs	r0, r0
   10b10:	lsls	r0, r3, #9
   10b12:	movs	r0, r0
   10b14:	ldr	r5, [sp, #420]	; 0x1a4
   10b16:	movs	r2, r0
   10b18:	ldr	r5, [sp, #440]	; 0x1b8
   10b1a:	movs	r2, r0
   10b1c:	ldr	r7, [sp, #60]	; 0x3c
   10b1e:	movs	r2, r0

00010b20 <help_unknown_token@@Base>:
   10b20:	ldr	r3, [pc, #44]	; (10b50 <help_unknown_token@@Base+0x30>)
   10b22:	mov	r4, r1
   10b24:	push	{r0, r1, r2, lr}
   10b26:	add	r3, pc
   10b28:	ldr	r2, [pc, #40]	; (10b54 <help_unknown_token@@Base+0x34>)
   10b2a:	movs	r1, #1
   10b2c:	ldr	r5, [r3, r2]
   10b2e:	ldr	r3, [pc, #40]	; (10b58 <help_unknown_token@@Base+0x38>)
   10b30:	ldr	r2, [pc, #40]	; (10b5c <help_unknown_token@@Base+0x3c>)
   10b32:	add	r3, pc
   10b34:	str	r0, [sp, #0]
   10b36:	add	r2, pc
   10b38:	ldr	r0, [r5, #0]
   10b3a:	blx	8a14 <__fprintf_chk@plt+0x4>
   10b3e:	mov	r0, r4
   10b40:	movs	r2, #1
   10b42:	movs	r1, #0
   10b44:	bl	10a8c <usage_command_group@@Base>
   10b48:	movs	r0, #1
   10b4a:	blx	88e4 <exit@plt>
   10b4e:	nop
   10b50:	negs	r2, r4
   10b52:	movs	r5, r0
   10b54:	lsls	r4, r6, #8
   10b56:	movs	r0, r0
   10b58:	cmp	sl, r3
   10b5a:	movs	r5, r0
   10b5c:	ldr	r6, [sp, #544]	; 0x220
   10b5e:	movs	r2, r0

00010b60 <help_ambiguous_token@@Base>:
   10b60:	ldr	r3, [pc, #84]	; (10bb8 <help_ambiguous_token@@Base+0x58>)
   10b62:	mov	r4, r1
   10b64:	ldr	r2, [pc, #84]	; (10bbc <help_ambiguous_token@@Base+0x5c>)
   10b66:	mov	r5, r0
   10b68:	add	r3, pc
   10b6a:	ldr.w	r8, [pc, #84]	; 10bc0 <help_ambiguous_token@@Base+0x60>
   10b6e:	push	{r0, r1, r7, lr}
   10b70:	movs	r1, #1
   10b72:	ldr	r7, [r3, r2]
   10b74:	adds	r4, #8
   10b76:	ldr	r3, [pc, #76]	; (10bc4 <help_ambiguous_token@@Base+0x64>)
   10b78:	add	r8, pc
   10b7a:	ldr	r2, [pc, #76]	; (10bc8 <help_ambiguous_token@@Base+0x68>)
   10b7c:	str	r0, [sp, #0]
   10b7e:	add	r3, pc
   10b80:	add	r2, pc
   10b82:	ldr	r0, [r7, #0]
   10b84:	blx	8a14 <__fprintf_chk@plt+0x4>
   10b88:	ldr	r0, [pc, #64]	; (10bcc <help_ambiguous_token@@Base+0x6c>)
   10b8a:	ldr	r1, [r7, #0]
   10b8c:	add	r0, pc
   10b8e:	blx	8b1c <fputs@plt+0x4>
   10b92:	ldr.w	r6, [r4], #4
   10b96:	cbnz	r6, 10b9e <help_ambiguous_token@@Base+0x3e>
   10b98:	movs	r0, #1
   10b9a:	blx	88e4 <exit@plt>
   10b9e:	ldr	r0, [r6, #0]
   10ba0:	mov	r1, r5
   10ba2:	bl	31ae4 <prefixcmp@@Base>
   10ba6:	cmp	r0, #0
   10ba8:	bne.n	10b92 <help_ambiguous_token@@Base+0x32>
   10baa:	ldr	r3, [r6, #0]
   10bac:	mov	r2, r8
   10bae:	ldr	r0, [r7, #0]
   10bb0:	movs	r1, #1
   10bb2:	blx	8a14 <__fprintf_chk@plt+0x4>
   10bb6:	b.n	10b92 <help_ambiguous_token@@Base+0x32>
   10bb8:	tst	r0, r4
   10bba:	movs	r5, r0
   10bbc:	lsls	r4, r6, #8
   10bbe:	movs	r0, r0
   10bc0:	ldr	r6, [sp, #600]	; 0x258
   10bc2:	movs	r2, r0
   10bc4:	cmp	r6, r9
   10bc6:	movs	r5, r0
   10bc8:	ldr	r6, [sp, #344]	; 0x158
   10bca:	movs	r2, r0
   10bcc:	ldr	r6, [sp, #400]	; 0x190
   10bce:	movs	r2, r0

00010bd0 <help_command_group@@Base>:
   10bd0:	cmp	r1, #1
   10bd2:	push	{r4, lr}
   10bd4:	mov	r4, r0
   10bd6:	ble.n	10bf4 <help_command_group@@Base+0x24>
   10bd8:	ldr	r1, [pc, #28]	; (10bf8 <help_command_group@@Base+0x28>)
   10bda:	ldr	r0, [r2, #4]
   10bdc:	add	r1, pc
   10bde:	blx	8568 <strcmp@plt>
   10be2:	clz	r1, r0
   10be6:	lsrs	r1, r1, #5
   10be8:	mov	r0, r4
   10bea:	movs	r2, #0
   10bec:	ldmia.w	sp!, {r4, lr}
   10bf0:	b.w	10a8c <usage_command_group@@Base>
   10bf4:	movs	r1, #0
   10bf6:	b.n	10be8 <help_command_group@@Base+0x18>
   10bf8:	ldr	r6, [sp, #220]	; 0xdc
   10bfa:	movs	r2, r0
   10bfc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c00:	sub.w	sp, sp, #4096	; 0x1000
   10c04:	sub	sp, #20
   10c06:	mov	r4, r1
   10c08:	ldr	r1, [pc, #448]	; (10dcc <help_command_group@@Base+0x1fc>)
   10c0a:	mov	r5, r2
   10c0c:	mov	r9, r3
   10c0e:	ldr	r2, [pc, #448]	; (10dd0 <help_command_group@@Base+0x200>)
   10c10:	add.w	r3, sp, #4128	; 0x1020
   10c14:	add	r1, pc
   10c16:	add	r6, sp, #16
   10c18:	adds	r3, #24
   10c1a:	ldr	r2, [r1, r2]
   10c1c:	mov	fp, r0
   10c1e:	ldr	r7, [r3, #0]
   10c20:	add.w	r3, sp, #4096	; 0x1000
   10c24:	ldr	r2, [r2, #0]
   10c26:	str	r2, [r3, #12]
   10c28:	mov.w	r2, #0
   10c2c:	mov	r0, r6
   10c2e:	movw	r2, #4092	; 0xffc
   10c32:	movs	r1, #0
   10c34:	adds	r3, #12
   10c36:	str.w	r1, [r6, #-4]
   10c3a:	sub.w	sl, r6, #4
   10c3e:	blx	8978 <memset@plt+0x4>
   10c42:	mov	r8, r4
   10c44:	mov	r2, r5
   10c46:	cmp.w	fp, #0
   10c4a:	beq.n	10c82 <help_command_group@@Base+0xb2>
   10c4c:	add.w	r1, r4, #4096	; 0x1000
   10c50:	mov	r0, r4
   10c52:	bl	12f78 <path_cat_out@@Base>
   10c56:	subs	r4, r0, #0
   10c58:	bge.n	10c9a <help_command_group@@Base+0xca>
   10c5a:	ldr	r0, [pc, #376]	; (10dd4 <help_command_group@@Base+0x204>)
   10c5c:	mov	r2, r5
   10c5e:	mov	r1, r9
   10c60:	add	r0, pc
   10c62:	bl	17424 <__btrfs_error@@Base>
   10c66:	ldr	r1, [pc, #368]	; (10dd8 <help_command_group@@Base+0x208>)
   10c68:	add.w	r3, sp, #4096	; 0x1000
   10c6c:	ldr	r2, [pc, #352]	; (10dd0 <help_command_group@@Base+0x200>)
   10c6e:	adds	r3, #12
   10c70:	add	r1, pc
   10c72:	ldr	r2, [r1, r2]
   10c74:	ldr	r1, [r2, #0]
   10c76:	ldr	r2, [r3, #0]
   10c78:	eors	r1, r2
   10c7a:	beq.w	10dbe <help_command_group@@Base+0x1ee>
   10c7e:	blx	86b8 <__stack_chk_fail@plt>
   10c82:	mov	r1, r4
   10c84:	mov	r0, sl
   10c86:	bl	12f78 <path_cat_out@@Base>
   10c8a:	subs	r4, r0, #0
   10c8c:	bge.n	10c98 <help_command_group@@Base+0xc8>
   10c8e:	ldr	r0, [pc, #332]	; (10ddc <help_command_group@@Base+0x20c>)
   10c90:	mov	r2, r5
   10c92:	mov	r1, r9
   10c94:	add	r0, pc
   10c96:	b.n	10c62 <help_command_group@@Base+0x92>
   10c98:	mov	r8, sl
   10c9a:	ldr	r1, [pc, #324]	; (10de0 <help_command_group@@Base+0x210>)
   10c9c:	mov	r2, r9
   10c9e:	movs	r0, #1
   10ca0:	ldr.w	sl, [pc, #320]	; 10de4 <help_command_group@@Base+0x214>
   10ca4:	add	r1, pc
   10ca6:	movs	r4, #0
   10ca8:	blx	89ec <__printf_chk@plt+0x4>
   10cac:	mov	r0, r8
   10cae:	blx	88f0 <strlen@plt>
   10cb2:	add	sl, pc
   10cb4:	add.w	r9, r8, r0
   10cb8:	cmp	r8, r9
   10cba:	bne.n	10cca <help_command_group@@Base+0xfa>
   10cbc:	cmp	r7, #0
   10cbe:	bne.n	10d9e <help_command_group@@Base+0x1ce>
   10cc0:	movs	r0, #10
   10cc2:	movs	r4, #0
   10cc4:	blx	8988 <putchar@plt+0x4>
   10cc8:	b.n	10c66 <help_command_group@@Base+0x96>
   10cca:	ldrb.w	r5, [r8], #1
   10cce:	cmp	r5, #32
   10cd0:	bhi.n	10cfa <help_command_group@@Base+0x12a>
   10cd2:	cmp	r5, #6
   10cd4:	bls.n	10cfe <help_command_group@@Base+0x12e>
   10cd6:	subs	r3, r5, #7
   10cd8:	cmp	r3, #25
   10cda:	bhi.n	10cfe <help_command_group@@Base+0x12e>
   10cdc:	tbb	[pc, r3]
   10ce0:	cmp	r5, #37	; 0x25
   10ce2:	subs	r4, #70	; 0x46
   10ce4:	adds	r7, #75	; 0x4b
   10ce6:	lsrs	r1, r0, #29
   10ce8:	lsrs	r7, r1, #28
   10cea:	lsrs	r7, r1, #28
   10cec:	lsrs	r7, r1, #28
   10cee:	lsrs	r7, r1, #28
   10cf0:	lsrs	r7, r1, #28
   10cf2:	lsrs	r7, r1, #28
   10cf4:	lsrs	r2, r6, #28
   10cf6:	lsrs	r7, r1, #28
   10cf8:	str	r7, [r1, r0]
   10cfa:	cmp	r5, #92	; 0x5c
   10cfc:	beq.n	10d8a <help_command_group@@Base+0x1ba>
   10cfe:	blx	88cc <__ctype_b_loc@plt>
   10d02:	ldr	r3, [r0, #0]
   10d04:	ldrh.w	r3, [r3, r5, lsl #1]
   10d08:	lsls	r3, r3, #17
   10d0a:	bmi.n	10d94 <help_command_group@@Base+0x1c4>
   10d0c:	ubfx	r3, r5, #3, #3
   10d10:	lsrs	r2, r5, #6
   10d12:	and.w	r5, r5, #7
   10d16:	adds	r3, #48	; 0x30
   10d18:	adds	r5, #48	; 0x30
   10d1a:	adds	r2, #48	; 0x30
   10d1c:	mov	r1, sl
   10d1e:	movs	r0, #1
   10d20:	str	r5, [sp, #0]
   10d22:	adds	r4, #4
   10d24:	blx	89ec <__printf_chk@plt+0x4>
   10d28:	b.n	10cb8 <help_command_group@@Base+0xe8>
   10d2a:	movs	r0, #92	; 0x5c
   10d2c:	blx	8988 <putchar@plt+0x4>
   10d30:	movs	r0, #97	; 0x61
   10d32:	blx	8988 <putchar@plt+0x4>
   10d36:	adds	r4, #2
   10d38:	b.n	10cb8 <help_command_group@@Base+0xe8>
   10d3a:	movs	r0, #92	; 0x5c
   10d3c:	blx	8988 <putchar@plt+0x4>
   10d40:	movs	r0, #98	; 0x62
   10d42:	b.n	10d32 <help_command_group@@Base+0x162>
   10d44:	movs	r0, #92	; 0x5c
   10d46:	blx	8988 <putchar@plt+0x4>
   10d4a:	movs	r0, #101	; 0x65
   10d4c:	b.n	10d32 <help_command_group@@Base+0x162>
   10d4e:	movs	r0, #92	; 0x5c
   10d50:	blx	8988 <putchar@plt+0x4>
   10d54:	movs	r0, #102	; 0x66
   10d56:	b.n	10d32 <help_command_group@@Base+0x162>
   10d58:	movs	r0, #92	; 0x5c
   10d5a:	blx	8988 <putchar@plt+0x4>
   10d5e:	movs	r0, #110	; 0x6e
   10d60:	b.n	10d32 <help_command_group@@Base+0x162>
   10d62:	movs	r0, #92	; 0x5c
   10d64:	blx	8988 <putchar@plt+0x4>
   10d68:	movs	r0, #114	; 0x72
   10d6a:	b.n	10d32 <help_command_group@@Base+0x162>
   10d6c:	movs	r0, #92	; 0x5c
   10d6e:	blx	8988 <putchar@plt+0x4>
   10d72:	movs	r0, #116	; 0x74
   10d74:	b.n	10d32 <help_command_group@@Base+0x162>
   10d76:	movs	r0, #92	; 0x5c
   10d78:	blx	8988 <putchar@plt+0x4>
   10d7c:	movs	r0, #118	; 0x76
   10d7e:	b.n	10d32 <help_command_group@@Base+0x162>
   10d80:	movs	r0, #92	; 0x5c
   10d82:	blx	8988 <putchar@plt+0x4>
   10d86:	movs	r0, #32
   10d88:	b.n	10d32 <help_command_group@@Base+0x162>
   10d8a:	mov	r0, r5
   10d8c:	blx	8988 <putchar@plt+0x4>
   10d90:	mov	r0, r5
   10d92:	b.n	10d32 <help_command_group@@Base+0x162>
   10d94:	mov	r0, r5
   10d96:	adds	r4, #1
   10d98:	blx	8988 <putchar@plt+0x4>
   10d9c:	b.n	10cb8 <help_command_group@@Base+0xe8>
   10d9e:	adds	r4, #1
   10da0:	movs	r0, #32
   10da2:	blx	8988 <putchar@plt+0x4>
   10da6:	cmp	r4, #31
   10da8:	ble.n	10d9e <help_command_group@@Base+0x1ce>
   10daa:	add.w	r2, sp, #4128	; 0x1020
   10dae:	mov	r1, r7
   10db0:	adds	r2, #28
   10db2:	movs	r0, #1
   10db4:	str.w	r2, [r6, #-8]
   10db8:	blx	865c <__vprintf_chk@plt>
   10dbc:	b.n	10cc0 <help_command_group@@Base+0xf0>
   10dbe:	mov	r0, r4
   10dc0:	add.w	sp, sp, #4096	; 0x1000
   10dc4:	add	sp, #20
   10dc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dca:	nop
   10dcc:	adcs	r4, r6
   10dce:	movs	r5, r0
   10dd0:	lsls	r4, r4, #8
   10dd2:	movs	r0, r0
   10dd4:	ldr	r5, [sp, #912]	; 0x390
   10dd6:	movs	r2, r0
   10dd8:	asrs	r0, r3
   10dda:	movs	r5, r0
   10ddc:	ldr	r5, [sp, #704]	; 0x2c0
   10dde:	movs	r2, r0
   10de0:	ldr	r5, [sp, #728]	; 0x2d8
   10de2:	movs	r2, r0
   10de4:	ldr	r5, [sp, #696]	; 0x2b8
   10de6:	movs	r2, r0
   10de8:	push	{r4, r5, lr}
   10dea:	sub	sp, #28
   10dec:	strd	r2, r3, [sp, #8]
   10df0:	mov	r2, r0
   10df2:	ldr	r3, [pc, #28]	; (10e10 <help_command_group@@Base+0x240>)
   10df4:	movs	r0, #0
   10df6:	ldrd	r4, r5, [sp, #40]	; 0x28
   10dfa:	add	r3, pc
   10dfc:	str	r3, [sp, #0]
   10dfe:	ldr	r3, [pc, #20]	; (10e14 <help_command_group@@Base+0x244>)
   10e00:	ldr	r1, [sp, #48]	; 0x30
   10e02:	add	r3, pc
   10e04:	strd	r4, r5, [sp, #16]
   10e08:	bl	10bfc <help_command_group@@Base+0x2c>
   10e0c:	add	sp, #28
   10e0e:	pop	{r4, r5, pc}
   10e10:	ldr	r4, [sp, #496]	; 0x1f0
   10e12:	movs	r2, r0
   10e14:	ldr	r4, [sp, #408]	; 0x198
   10e16:	movs	r2, r0
   10e18:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10e1a:	strd	r2, r3, [sp, #16]
   10e1e:	ldrd	r2, r3, [sp, #32]
   10e22:	ldr	r1, [sp, #40]	; 0x28
   10e24:	strd	r2, r3, [sp, #8]
   10e28:	mov	r2, r0
   10e2a:	ldr	r3, [pc, #20]	; (10e40 <help_command_group@@Base+0x270>)
   10e2c:	movs	r0, #0
   10e2e:	add	r3, pc
   10e30:	str	r3, [sp, #0]
   10e32:	ldr	r3, [pc, #16]	; (10e44 <help_command_group@@Base+0x274>)
   10e34:	add	r3, pc
   10e36:	bl	10bfc <help_command_group@@Base+0x2c>
   10e3a:	add	sp, #28
   10e3c:	ldr.w	pc, [sp], #4
   10e40:	ldr	r4, [sp, #396]	; 0x18c
   10e42:	movs	r2, r0
   10e44:	ldr	r4, [sp, #348]	; 0x15c
   10e46:	movs	r2, r0
   10e48:	push	{r0, r1, r2, r3, r4, lr}
   10e4a:	strd	r2, r3, [sp, #8]
   10e4e:	mov	r2, r0
   10e50:	ldr	r3, [pc, #20]	; (10e68 <help_command_group@@Base+0x298>)
   10e52:	movs	r0, #0
   10e54:	ldr	r1, [sp, #24]
   10e56:	add	r3, pc
   10e58:	str	r3, [sp, #0]
   10e5a:	ldr	r3, [pc, #16]	; (10e6c <help_command_group@@Base+0x29c>)
   10e5c:	add	r3, pc
   10e5e:	bl	10bfc <help_command_group@@Base+0x2c>
   10e62:	add	sp, #20
   10e64:	ldr.w	pc, [sp], #4
   10e68:	ldr	r4, [sp, #332]	; 0x14c
   10e6a:	movs	r2, r0
   10e6c:	ldr	r4, [sp, #284]	; 0x11c
   10e6e:	movs	r2, r0
   10e70:	push	{r0, r1, r2, r3, r4, lr}
   10e72:	strd	r2, r3, [sp, #8]
   10e76:	mov	r2, r0
   10e78:	ldr	r3, [pc, #20]	; (10e90 <help_command_group@@Base+0x2c0>)
   10e7a:	movs	r0, #0
   10e7c:	ldr	r1, [sp, #24]
   10e7e:	add	r3, pc
   10e80:	str	r3, [sp, #0]
   10e82:	ldr	r3, [pc, #16]	; (10e94 <help_command_group@@Base+0x2c4>)
   10e84:	add	r3, pc
   10e86:	bl	10bfc <help_command_group@@Base+0x2c>
   10e8a:	add	sp, #20
   10e8c:	ldr.w	pc, [sp], #4
   10e90:	ldr	r4, [sp, #248]	; 0xf8
   10e92:	movs	r2, r0
   10e94:	ldr	r4, [sp, #188]	; 0xbc
   10e96:	movs	r2, r0
   10e98:	push	{r0, r1, r2, lr}
   10e9a:	mov	r3, r1
   10e9c:	str	r3, [sp, #4]
   10e9e:	mov	r1, r2
   10ea0:	ldr	r3, [pc, #20]	; (10eb8 <help_command_group@@Base+0x2e8>)
   10ea2:	mov	r2, r0
   10ea4:	movs	r0, #0
   10ea6:	add	r3, pc
   10ea8:	str	r3, [sp, #0]
   10eaa:	ldr	r3, [pc, #16]	; (10ebc <help_command_group@@Base+0x2ec>)
   10eac:	add	r3, pc
   10eae:	bl	10bfc <help_command_group@@Base+0x2c>
   10eb2:	add	sp, #12
   10eb4:	ldr.w	pc, [sp], #4
   10eb8:	ldr	r4, [sp, #180]	; 0xb4
   10eba:	movs	r2, r0
   10ebc:	ldr	r4, [sp, #104]	; 0x68
   10ebe:	movs	r2, r0
   10ec0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10ec2:	strd	r2, r3, [sp, #12]
   10ec6:	mov	r2, r0
   10ec8:	strd	r1, r3, [sp, #4]
   10ecc:	movs	r0, #0
   10ece:	ldr	r3, [pc, #20]	; (10ee4 <help_command_group@@Base+0x314>)
   10ed0:	ldr	r1, [sp, #32]
   10ed2:	add	r3, pc
   10ed4:	str	r3, [sp, #0]
   10ed6:	ldr	r3, [pc, #16]	; (10ee8 <help_command_group@@Base+0x318>)
   10ed8:	add	r3, pc
   10eda:	bl	10bfc <help_command_group@@Base+0x2c>
   10ede:	add	sp, #28
   10ee0:	ldr.w	pc, [sp], #4
   10ee4:	ldr	r4, [sp, #76]	; 0x4c
   10ee6:	movs	r2, r0
   10ee8:	ldr	r4, [sp, #12]
   10eea:	movs	r2, r0
   10eec:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10ef0:	sub.w	sp, sp, #4128	; 0x1020
   10ef4:	sub	sp, #24
   10ef6:	mov	r6, r3
   10ef8:	add.w	r3, sp, #4192	; 0x1060
   10efc:	ldr	r4, [pc, #164]	; (10fa4 <help_command_group@@Base+0x3d4>)
   10efe:	adds	r3, #8
   10f00:	mov	r5, r0
   10f02:	mov	r7, r2
   10f04:	ldr	r0, [pc, #160]	; (10fa8 <help_command_group@@Base+0x3d8>)
   10f06:	ldr	r2, [r3, #0]
   10f08:	add.w	r3, sp, #4192	; 0x1060
   10f0c:	add	r4, pc
   10f0e:	adds	r3, #24
   10f10:	add.w	r8, sp, #52	; 0x34
   10f14:	ldr	r1, [r3, #0]
   10f16:	ldr	r0, [r4, r0]
   10f18:	add.w	r3, sp, #4128	; 0x1020
   10f1c:	adds	r3, #20
   10f1e:	ldr	r0, [r0, #0]
   10f20:	str	r0, [r3, #0]
   10f22:	mov.w	r0, #0
   10f26:	mov	r0, r8
   10f28:	strd	r1, r2, [sp, #40]	; 0x28
   10f2c:	bl	12f78 <path_cat_out@@Base>
   10f30:	ldrd	r1, r2, [sp, #40]	; 0x28
   10f34:	subs	r4, r0, #0
   10f36:	bge.n	10f5e <help_command_group@@Base+0x38e>
   10f38:	ldr	r1, [pc, #112]	; (10fac <help_command_group@@Base+0x3dc>)
   10f3a:	ldr	r0, [pc, #116]	; (10fb0 <help_command_group@@Base+0x3e0>)
   10f3c:	add	r1, pc
   10f3e:	add	r0, pc
   10f40:	bl	17424 <__btrfs_error@@Base>
   10f44:	ldr	r1, [pc, #108]	; (10fb4 <help_command_group@@Base+0x3e4>)
   10f46:	add.w	r3, sp, #4128	; 0x1020
   10f4a:	ldr	r2, [pc, #92]	; (10fa8 <help_command_group@@Base+0x3d8>)
   10f4c:	adds	r3, #20
   10f4e:	add	r1, pc
   10f50:	ldr	r2, [r1, r2]
   10f52:	ldr	r1, [r2, #0]
   10f54:	ldr	r2, [r3, #0]
   10f56:	eors	r1, r2
   10f58:	beq.n	10f98 <help_command_group@@Base+0x3c8>
   10f5a:	blx	86b8 <__stack_chk_fail@plt>
   10f5e:	add.w	r3, sp, #4192	; 0x1060
   10f62:	movs	r0, #0
   10f64:	adds	r3, #16
   10f66:	ldrd	r2, r3, [r3]
   10f6a:	str.w	r8, [sp, #24]
   10f6e:	strd	r2, r3, [sp, #32]
   10f72:	add.w	r3, sp, #4160	; 0x1040
   10f76:	adds	r3, #16
   10f78:	ldrd	r2, r3, [r3]
   10f7c:	strd	r7, r6, [sp, #8]
   10f80:	strd	r2, r3, [sp, #16]
   10f84:	mov	r2, r5
   10f86:	ldr	r3, [pc, #48]	; (10fb8 <help_command_group@@Base+0x3e8>)
   10f88:	add	r3, pc
   10f8a:	str	r3, [sp, #0]
   10f8c:	ldr	r3, [pc, #44]	; (10fbc <help_command_group@@Base+0x3ec>)
   10f8e:	add	r3, pc
   10f90:	bl	10bfc <help_command_group@@Base+0x2c>
   10f94:	mov	r4, r0
   10f96:	b.n	10f44 <help_command_group@@Base+0x374>
   10f98:	mov	r0, r4
   10f9a:	add.w	sp, sp, #4128	; 0x1020
   10f9e:	add	sp, #24
   10fa0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10fa4:	subs	r6, #124	; 0x7c
   10fa6:	movs	r5, r0
   10fa8:	lsls	r4, r4, #8
   10faa:	movs	r0, r0
   10fac:	ldr	r3, [sp, #776]	; 0x308
   10fae:	movs	r2, r0
   10fb0:	ldr	r3, [sp, #24]
   10fb2:	movs	r2, r0
   10fb4:	subs	r6, #58	; 0x3a
   10fb6:	movs	r5, r0
   10fb8:	ldr	r3, [sp, #496]	; 0x1f0
   10fba:	movs	r2, r0
   10fbc:	ldr	r3, [sp, #448]	; 0x1c0
   10fbe:	movs	r2, r0
   10fc0:	push	{r4, r5, lr}
   10fc2:	sub	sp, #28
   10fc4:	strd	r2, r3, [sp, #8]
   10fc8:	mov	r2, r0
   10fca:	ldr	r3, [pc, #28]	; (10fe8 <help_command_group@@Base+0x418>)
   10fcc:	movs	r0, #0
   10fce:	ldrd	r4, r5, [sp, #40]	; 0x28
   10fd2:	add	r3, pc
   10fd4:	str	r3, [sp, #0]
   10fd6:	ldr	r3, [pc, #20]	; (10fec <help_command_group@@Base+0x41c>)
   10fd8:	ldr	r1, [sp, #48]	; 0x30
   10fda:	add	r3, pc
   10fdc:	strd	r4, r5, [sp, #16]
   10fe0:	bl	10bfc <help_command_group@@Base+0x2c>
   10fe4:	add	sp, #28
   10fe6:	pop	{r4, r5, pc}
   10fe8:	ldr	r2, [sp, #656]	; 0x290
   10fea:	movs	r2, r0
   10fec:	ldr	r3, [sp, #356]	; 0x164
   10fee:	movs	r2, r0
   10ff0:	ldr	r3, [pc, #20]	; (11008 <help_command_group@@Base+0x438>)
   10ff2:	push	{r0, r1, r2, lr}
   10ff4:	add	r3, pc
   10ff6:	mov	r2, r0
   10ff8:	movs	r0, #0
   10ffa:	str	r0, [sp, #0]
   10ffc:	bl	10bfc <help_command_group@@Base+0x2c>
   11000:	add	sp, #12
   11002:	ldr.w	pc, [sp], #4
   11006:	nop
   11008:	cmp	r1, #169	; 0xa9
   1100a:	movs	r4, r0
   1100c:	ldr	r3, [pc, #20]	; (11024 <help_command_group@@Base+0x454>)
   1100e:	push	{r0, r1, r2, lr}
   11010:	add	r3, pc
   11012:	mov	r2, r0
   11014:	movs	r0, #0
   11016:	str	r0, [sp, #0]
   11018:	bl	10bfc <help_command_group@@Base+0x2c>
   1101c:	add	sp, #12
   1101e:	ldr.w	pc, [sp], #4
   11022:	nop
   11024:	cmp	r1, #157	; 0x9d
   11026:	movs	r4, r0
   11028:	push	{r0, r1, r2, lr}
   1102a:	mov	r3, r1
   1102c:	str	r3, [sp, #4]
   1102e:	mov	r1, r2
   11030:	ldr	r3, [pc, #20]	; (11048 <help_command_group@@Base+0x478>)
   11032:	mov	r2, r0
   11034:	movs	r0, #0
   11036:	add	r3, pc
   11038:	str	r3, [sp, #0]
   1103a:	ldr	r3, [pc, #16]	; (1104c <help_command_group@@Base+0x47c>)
   1103c:	add	r3, pc
   1103e:	bl	10bfc <help_command_group@@Base+0x2c>
   11042:	add	sp, #12
   11044:	ldr.w	pc, [sp], #4
   11048:	ldr	r3, [sp, #12]
   1104a:	movs	r2, r0
   1104c:	ldr	r3, [sp, #60]	; 0x3c
   1104e:	movs	r2, r0
   11050:	push	{r4, r5, r6, r7, lr}
   11052:	mov	r6, r0
   11054:	ldr	r0, [pc, #120]	; (110d0 <help_command_group@@Base+0x500>)
   11056:	mov	r5, r1
   11058:	mov	r1, r2
   1105a:	ldr	r2, [pc, #120]	; (110d4 <help_command_group@@Base+0x504>)
   1105c:	add	r0, pc
   1105e:	sub.w	sp, sp, #4096	; 0x1000
   11062:	sub	sp, #28
   11064:	ldr	r2, [r0, r2]
   11066:	add.w	r3, sp, #4096	; 0x1000
   1106a:	add	r7, sp, #20
   1106c:	adds	r3, #20
   1106e:	ldr	r2, [r2, #0]
   11070:	str	r2, [r3, #0]
   11072:	mov.w	r2, #0
   11076:	mov	r2, r5
   11078:	mov	r0, r7
   1107a:	str	r1, [sp, #12]
   1107c:	bl	12f78 <path_cat_out@@Base>
   11080:	ldr	r1, [sp, #12]
   11082:	subs	r4, r0, #0
   11084:	bge.n	110ae <help_command_group@@Base+0x4de>
   11086:	ldr	r1, [pc, #80]	; (110d8 <help_command_group@@Base+0x508>)
   11088:	mov	r2, r5
   1108a:	ldr	r0, [pc, #80]	; (110dc <help_command_group@@Base+0x50c>)
   1108c:	add	r1, pc
   1108e:	add	r0, pc
   11090:	bl	17424 <__btrfs_error@@Base>
   11094:	ldr	r1, [pc, #72]	; (110e0 <help_command_group@@Base+0x510>)
   11096:	add.w	r3, sp, #4096	; 0x1000
   1109a:	ldr	r2, [pc, #56]	; (110d4 <help_command_group@@Base+0x504>)
   1109c:	adds	r3, #20
   1109e:	add	r1, pc
   110a0:	ldr	r2, [r1, r2]
   110a2:	ldr	r1, [r2, #0]
   110a4:	ldr	r2, [r3, #0]
   110a6:	eors	r1, r2
   110a8:	beq.n	110c6 <help_command_group@@Base+0x4f6>
   110aa:	blx	86b8 <__stack_chk_fail@plt>
   110ae:	ldr	r3, [pc, #52]	; (110e4 <help_command_group@@Base+0x514>)
   110b0:	mov	r2, r6
   110b2:	movs	r0, #0
   110b4:	str	r7, [sp, #4]
   110b6:	add	r3, pc
   110b8:	str	r3, [sp, #0]
   110ba:	ldr	r3, [pc, #44]	; (110e8 <help_command_group@@Base+0x518>)
   110bc:	add	r3, pc
   110be:	bl	10bfc <help_command_group@@Base+0x2c>
   110c2:	mov	r4, r0
   110c4:	b.n	11094 <help_command_group@@Base+0x4c4>
   110c6:	mov	r0, r4
   110c8:	add.w	sp, sp, #4096	; 0x1000
   110cc:	add	sp, #28
   110ce:	pop	{r4, r5, r6, r7, pc}
   110d0:	subs	r5, #44	; 0x2c
   110d2:	movs	r5, r0
   110d4:	lsls	r4, r4, #8
   110d6:	movs	r0, r0
   110d8:	ldr	r2, [sp, #724]	; 0x2d4
   110da:	movs	r2, r0
   110dc:	ldr	r1, [sp, #728]	; 0x2d8
   110de:	movs	r2, r0
   110e0:	subs	r4, #234	; 0xea
   110e2:	movs	r5, r0
   110e4:	ldr	r2, [sp, #524]	; 0x20c
   110e6:	movs	r2, r0
   110e8:	ldr	r2, [sp, #532]	; 0x214
   110ea:	movs	r2, r0
   110ec:	push	{r0, r1, r2, lr}
   110ee:	mov	r3, r1
   110f0:	str	r3, [sp, #4]
   110f2:	mov	r1, r2
   110f4:	ldr	r3, [pc, #20]	; (1110c <help_command_group@@Base+0x53c>)
   110f6:	mov	r2, r0
   110f8:	movs	r0, #0
   110fa:	add	r3, pc
   110fc:	str	r3, [sp, #0]
   110fe:	ldr	r3, [pc, #16]	; (11110 <help_command_group@@Base+0x540>)
   11100:	add	r3, pc
   11102:	bl	10bfc <help_command_group@@Base+0x2c>
   11106:	add	sp, #12
   11108:	ldr.w	pc, [sp], #4
   1110c:	ldr	r2, [sp, #252]	; 0xfc
   1110e:	movs	r2, r0
   11110:	ldr	r2, [sp, #288]	; 0x120
   11112:	movs	r2, r0
   11114:	ldr	r3, [pc, #20]	; (1112c <help_command_group@@Base+0x55c>)
   11116:	push	{r0, r1, r2, lr}
   11118:	add	r3, pc
   1111a:	mov	r2, r0
   1111c:	movs	r0, #0
   1111e:	str	r0, [sp, #0]
   11120:	bl	10bfc <help_command_group@@Base+0x2c>
   11124:	add	sp, #12
   11126:	ldr.w	pc, [sp], #4
   1112a:	nop
   1112c:	ldr	r2, [sp, #224]	; 0xe0
   1112e:	movs	r2, r0
   11130:	ldr	r3, [pc, #20]	; (11148 <help_command_group@@Base+0x578>)
   11132:	push	{r0, r1, r2, lr}
   11134:	add	r3, pc
   11136:	mov	r2, r0
   11138:	movs	r0, #0
   1113a:	str	r0, [sp, #0]
   1113c:	bl	10bfc <help_command_group@@Base+0x2c>
   11140:	add	sp, #12
   11142:	ldr.w	pc, [sp], #4
   11146:	nop
   11148:	ldr	r2, [sp, #140]	; 0x8c
   1114a:	movs	r2, r0
   1114c:	push	{r4, r5, lr}
   1114e:	sub	sp, #28
   11150:	strd	r2, r3, [sp, #8]
   11154:	mov	r2, r0
   11156:	ldr	r3, [pc, #28]	; (11174 <help_command_group@@Base+0x5a4>)
   11158:	movs	r0, #0
   1115a:	ldrd	r4, r5, [sp, #40]	; 0x28
   1115e:	add	r3, pc
   11160:	str	r3, [sp, #0]
   11162:	ldr	r3, [pc, #20]	; (11178 <help_command_group@@Base+0x5a8>)
   11164:	ldr	r1, [sp, #48]	; 0x30
   11166:	add	r3, pc
   11168:	strd	r4, r5, [sp, #16]
   1116c:	bl	10bfc <help_command_group@@Base+0x2c>
   11170:	add	sp, #28
   11172:	pop	{r4, r5, pc}
   11174:	ldr	r2, [sp, #24]
   11176:	movs	r2, r0
   11178:	ldr	r1, [sp, #992]	; 0x3e0
   1117a:	movs	r2, r0
   1117c:	ldr	r3, [pc, #20]	; (11194 <help_command_group@@Base+0x5c4>)
   1117e:	push	{r0, r1, r2, lr}
   11180:	add	r3, pc
   11182:	mov	r2, r0
   11184:	movs	r0, #0
   11186:	str	r0, [sp, #0]
   11188:	bl	10bfc <help_command_group@@Base+0x2c>
   1118c:	add	sp, #12
   1118e:	ldr.w	pc, [sp], #4
   11192:	nop
   11194:	ldr	r1, [sp, #996]	; 0x3e4
   11196:	movs	r2, r0
   11198:	ldr	r3, [pc, #20]	; (111b0 <help_command_group@@Base+0x5e0>)
   1119a:	push	{r0, r1, r2, lr}
   1119c:	add	r3, pc
   1119e:	mov	r2, r0
   111a0:	movs	r0, #0
   111a2:	str	r0, [sp, #0]
   111a4:	bl	10bfc <help_command_group@@Base+0x2c>
   111a8:	add	sp, #12
   111aa:	ldr.w	pc, [sp], #4
   111ae:	nop
   111b0:	ldr	r1, [sp, #908]	; 0x38c
   111b2:	movs	r2, r0
   111b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   111b8:	mov	r6, r2
   111ba:	ldr	r2, [pc, #116]	; (11230 <help_command_group@@Base+0x660>)
   111bc:	sub	sp, #120	; 0x78
   111be:	mov	r5, r3
   111c0:	ldr	r3, [pc, #112]	; (11234 <help_command_group@@Base+0x664>)
   111c2:	add	r2, pc
   111c4:	ldr.w	sl, [sp, #152]	; 0x98
   111c8:	add	r7, sp, #36	; 0x24
   111ca:	add.w	r8, sp, #76	; 0x4c
   111ce:	ldr	r3, [r2, r3]
   111d0:	mov	r4, r0
   111d2:	mov	r0, r1
   111d4:	mov	r1, r7
   111d6:	ldr	r3, [r3, #0]
   111d8:	str	r3, [sp, #116]	; 0x74
   111da:	mov.w	r3, #0
   111de:	ldr.w	r9, [sp, #168]	; 0xa8
   111e2:	blx	8580 <uuid_unparse@plt>
   111e6:	mov	r1, r8
   111e8:	mov	r0, sl
   111ea:	blx	8580 <uuid_unparse@plt>
   111ee:	ldrd	r2, r3, [sp, #160]	; 0xa0
   111f2:	mov	r1, r9
   111f4:	movs	r0, #1
   111f6:	str.w	r8, [sp, #16]
   111fa:	strd	r2, r3, [sp, #24]
   111fe:	mov	r2, r4
   11200:	ldr	r3, [pc, #52]	; (11238 <help_command_group@@Base+0x668>)
   11202:	strd	r6, r5, [sp, #8]
   11206:	add	r3, pc
   11208:	str	r3, [sp, #0]
   1120a:	ldr	r3, [pc, #48]	; (1123c <help_command_group@@Base+0x66c>)
   1120c:	str	r7, [sp, #4]
   1120e:	add	r3, pc
   11210:	bl	10bfc <help_command_group@@Base+0x2c>
   11214:	ldr	r2, [pc, #40]	; (11240 <help_command_group@@Base+0x670>)
   11216:	ldr	r3, [pc, #28]	; (11234 <help_command_group@@Base+0x664>)
   11218:	add	r2, pc
   1121a:	ldr	r3, [r2, r3]
   1121c:	ldr	r2, [r3, #0]
   1121e:	ldr	r3, [sp, #116]	; 0x74
   11220:	eors	r2, r3
   11222:	beq.n	11228 <help_command_group@@Base+0x658>
   11224:	blx	86b8 <__stack_chk_fail@plt>
   11228:	add	sp, #120	; 0x78
   1122a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1122e:	nop
   11230:	subs	r3, #198	; 0xc6
   11232:	movs	r5, r0
   11234:	lsls	r4, r4, #8
   11236:	movs	r0, r0
   11238:	ldr	r1, [sp, #512]	; 0x200
   1123a:	movs	r2, r0
   1123c:	cmp	r0, #93	; 0x5d
   1123e:	movs	r4, r0
   11240:	subs	r3, #112	; 0x70
   11242:	movs	r5, r0
   11244:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11248:	mov	r6, r2
   1124a:	ldr	r2, [pc, #88]	; (112a4 <help_command_group@@Base+0x6d4>)
   1124c:	mov	r5, r3
   1124e:	ldr	r3, [pc, #88]	; (112a8 <help_command_group@@Base+0x6d8>)
   11250:	sub	sp, #64	; 0x40
   11252:	add	r2, pc
   11254:	add	r7, sp, #20
   11256:	mov	r4, r0
   11258:	mov	r0, r1
   1125a:	ldr	r3, [r2, r3]
   1125c:	mov	r1, r7
   1125e:	ldr.w	r8, [sp, #88]	; 0x58
   11262:	ldr	r3, [r3, #0]
   11264:	str	r3, [sp, #60]	; 0x3c
   11266:	mov.w	r3, #0
   1126a:	blx	8580 <uuid_unparse@plt>
   1126e:	ldr	r3, [pc, #60]	; (112ac <help_command_group@@Base+0x6dc>)
   11270:	mov	r2, r4
   11272:	mov	r1, r8
   11274:	movs	r0, #1
   11276:	add	r3, pc
   11278:	str	r3, [sp, #0]
   1127a:	ldr	r3, [pc, #52]	; (112b0 <help_command_group@@Base+0x6e0>)
   1127c:	strd	r6, r5, [sp, #8]
   11280:	add	r3, pc
   11282:	str	r7, [sp, #4]
   11284:	bl	10bfc <help_command_group@@Base+0x2c>
   11288:	ldr	r2, [pc, #40]	; (112b4 <help_command_group@@Base+0x6e4>)
   1128a:	ldr	r3, [pc, #28]	; (112a8 <help_command_group@@Base+0x6d8>)
   1128c:	add	r2, pc
   1128e:	ldr	r3, [r2, r3]
   11290:	ldr	r2, [r3, #0]
   11292:	ldr	r3, [sp, #60]	; 0x3c
   11294:	eors	r2, r3
   11296:	beq.n	1129c <help_command_group@@Base+0x6cc>
   11298:	blx	86b8 <__stack_chk_fail@plt>
   1129c:	add	sp, #64	; 0x40
   1129e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   112a2:	nop
   112a4:	subs	r3, #54	; 0x36
   112a6:	movs	r5, r0
   112a8:	lsls	r4, r4, #8
   112aa:	movs	r0, r0
   112ac:	ldr	r1, [sp, #316]	; 0x13c
   112ae:	movs	r2, r0
   112b0:	ldr	r1, [sp, #248]	; 0xf8
   112b2:	movs	r2, r0
   112b4:	subs	r2, #252	; 0xfc
   112b6:	movs	r5, r0
   112b8:	ldr	r2, [pc, #112]	; (1132c <help_command_group@@Base+0x75c>)
   112ba:	ldr	r3, [pc, #116]	; (11330 <help_command_group@@Base+0x760>)
   112bc:	add	r2, pc
   112be:	push	{r4, r5, lr}
   112c0:	sub	sp, #68	; 0x44
   112c2:	ldr	r3, [r2, r3]
   112c4:	mov	r5, r1
   112c6:	mov	r4, r0
   112c8:	ldr	r3, [r3, #0]
   112ca:	str	r3, [sp, #60]	; 0x3c
   112cc:	mov.w	r3, #0
   112d0:	add	r3, sp, #16
   112d2:	str	r3, [sp, #12]
   112d4:	mov	r1, r3
   112d6:	blx	86e0 <localtime_r@plt>
   112da:	ldr	r3, [sp, #12]
   112dc:	cbnz	r0, 11306 <help_command_group@@Base+0x736>
   112de:	ldrd	r2, r3, [r4]
   112e2:	ldr	r0, [pc, #80]	; (11334 <help_command_group@@Base+0x764>)
   112e4:	str	r3, [sp, #0]
   112e6:	add	r0, pc
   112e8:	asrs	r3, r2, #31
   112ea:	bl	17424 <__btrfs_error@@Base>
   112ee:	mvn.w	r0, #21
   112f2:	ldr	r2, [pc, #68]	; (11338 <help_command_group@@Base+0x768>)
   112f4:	ldr	r3, [pc, #56]	; (11330 <help_command_group@@Base+0x760>)
   112f6:	add	r2, pc
   112f8:	ldr	r3, [r2, r3]
   112fa:	ldr	r2, [r3, #0]
   112fc:	ldr	r3, [sp, #60]	; 0x3c
   112fe:	eors	r2, r3
   11300:	beq.n	11326 <help_command_group@@Base+0x756>
   11302:	blx	86b8 <__stack_chk_fail@plt>
   11306:	ldr	r2, [pc, #52]	; (1133c <help_command_group@@Base+0x76c>)
   11308:	movs	r1, #63	; 0x3f
   1130a:	mov	r0, r5
   1130c:	add	r2, pc
   1130e:	blx	8854 <strftime@plt>
   11312:	cbnz	r0, 11322 <help_command_group@@Base+0x752>
   11314:	ldrd	r2, r3, [r4]
   11318:	ldr	r0, [pc, #36]	; (11340 <help_command_group@@Base+0x770>)
   1131a:	str	r3, [sp, #0]
   1131c:	add	r0, pc
   1131e:	asrs	r3, r2, #31
   11320:	b.n	112ea <help_command_group@@Base+0x71a>
   11322:	movs	r0, #0
   11324:	b.n	112f2 <help_command_group@@Base+0x722>
   11326:	add	sp, #68	; 0x44
   11328:	pop	{r4, r5, pc}
   1132a:	nop
   1132c:	subs	r2, #204	; 0xcc
   1132e:	movs	r5, r0
   11330:	lsls	r4, r4, #8
   11332:	movs	r0, r0
   11334:	ldr	r0, [sp, #976]	; 0x3d0
   11336:	movs	r2, r0
   11338:	subs	r2, #146	; 0x92
   1133a:	movs	r5, r0
   1133c:	ldr	r0, [sp, #1016]	; 0x3f8
   1133e:	movs	r2, r0
   11340:	ldr	r0, [sp, #984]	; 0x3d8
   11342:	movs	r2, r0
   11344:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11348:	mov	r6, r2
   1134a:	ldr	r2, [pc, #128]	; (113cc <help_command_group@@Base+0x7fc>)
   1134c:	mov	r5, r3
   1134e:	ldr	r3, [pc, #128]	; (113d0 <help_command_group@@Base+0x800>)
   11350:	sub	sp, #220	; 0xdc
   11352:	add	r2, pc
   11354:	add	r7, sp, #20
   11356:	mov	r4, r0
   11358:	mov	r0, r1
   1135a:	ldr	r3, [r2, r3]
   1135c:	mov	r1, r7
   1135e:	ldr.w	r9, [sp, #248]	; 0xf8
   11362:	ldr	r3, [r3, #0]
   11364:	str	r3, [sp, #212]	; 0xd4
   11366:	mov.w	r3, #0
   1136a:	bl	112b8 <help_command_group@@Base+0x6e8>
   1136e:	cmp	r0, #0
   11370:	bge.n	1138a <help_command_group@@Base+0x7ba>
   11372:	mvn.w	r0, #21
   11376:	ldr	r2, [pc, #92]	; (113d4 <help_command_group@@Base+0x804>)
   11378:	ldr	r3, [pc, #84]	; (113d0 <help_command_group@@Base+0x800>)
   1137a:	add	r2, pc
   1137c:	ldr	r3, [r2, r3]
   1137e:	ldr	r2, [r3, #0]
   11380:	ldr	r3, [sp, #212]	; 0xd4
   11382:	eors	r2, r3
   11384:	beq.n	113c4 <help_command_group@@Base+0x7f4>
   11386:	blx	86b8 <__stack_chk_fail@plt>
   1138a:	add.w	r8, sp, #84	; 0x54
   1138e:	mov	r0, r6
   11390:	mov	r1, r8
   11392:	bl	112b8 <help_command_group@@Base+0x6e8>
   11396:	cmp	r0, #0
   11398:	blt.n	11372 <help_command_group@@Base+0x7a2>
   1139a:	add	r6, sp, #148	; 0x94
   1139c:	mov	r0, r5
   1139e:	mov	r1, r6
   113a0:	bl	112b8 <help_command_group@@Base+0x6e8>
   113a4:	cmp	r0, #0
   113a6:	blt.n	11372 <help_command_group@@Base+0x7a2>
   113a8:	ldr	r3, [pc, #44]	; (113d8 <help_command_group@@Base+0x808>)
   113aa:	mov	r2, r4
   113ac:	mov	r1, r9
   113ae:	strd	r8, r6, [sp, #8]
   113b2:	add	r3, pc
   113b4:	str	r3, [sp, #0]
   113b6:	ldr	r3, [pc, #36]	; (113dc <help_command_group@@Base+0x80c>)
   113b8:	movs	r0, #0
   113ba:	str	r7, [sp, #4]
   113bc:	add	r3, pc
   113be:	bl	10bfc <help_command_group@@Base+0x2c>
   113c2:	b.n	11376 <help_command_group@@Base+0x7a6>
   113c4:	add	sp, #220	; 0xdc
   113c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   113ca:	nop
   113cc:	subs	r2, #54	; 0x36
   113ce:	movs	r5, r0
   113d0:	lsls	r4, r4, #8
   113d2:	movs	r0, r0
   113d4:	subs	r2, #14
   113d6:	movs	r5, r0
   113d8:	ldr	r0, [sp, #644]	; 0x284
   113da:	movs	r2, r0
   113dc:	ldr	r0, [sp, #576]	; 0x240
   113de:	movs	r2, r0

000113e0 <btrfs_parse_features_to_string@@Base>:
   113e0:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113e4:	mov	r5, r0
   113e6:	ldr.w	r8, [pc, #72]	; 11430 <btrfs_parse_features_to_string@@Base+0x50>
   113ea:	mov	r9, r2
   113ec:	ldr.w	fp, [pc, #68]	; 11434 <btrfs_parse_features_to_string@@Base+0x54>
   113f0:	mov	sl, r3
   113f2:	add	r8, pc
   113f4:	movs	r4, #0
   113f6:	add	fp, pc
   113f8:	strb	r4, [r0, #0]
   113fa:	ldrd	r2, r3, [r8, #8]
   113fe:	and.w	r6, r9, r2
   11402:	and.w	r7, sl, r3
   11406:	orrs.w	r3, r6, r7
   1140a:	beq.n	11422 <btrfs_parse_features_to_string@@Base+0x42>
   1140c:	ldrb	r3, [r5, #0]
   1140e:	cbz	r3, 11418 <btrfs_parse_features_to_string@@Base+0x38>
   11410:	mov	r1, fp
   11412:	mov	r0, r5
   11414:	blx	8758 <strcat@plt+0x4>
   11418:	ldr.w	r1, [r8]
   1141c:	mov	r0, r5
   1141e:	blx	8758 <strcat@plt+0x4>
   11422:	adds	r4, #1
   11424:	add.w	r8, r8, #48	; 0x30
   11428:	cmp	r4, #7
   1142a:	bne.n	113fa <btrfs_parse_features_to_string@@Base+0x1a>
   1142c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11430:	adds	r2, #90	; 0x5a
   11432:	movs	r5, r0
   11434:	push	{r1, r2, r3, r4, r6, r7, lr}
   11436:	movs	r2, r0

00011438 <btrfs_process_fs_features@@Base>:
   11438:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1143c:	mov	r6, r0
   1143e:	ldr	r4, [pc, #56]	; (11478 <btrfs_process_fs_features@@Base+0x40>)
   11440:	mov	r7, r1
   11442:	ldr.w	sl, [pc, #56]	; 1147c <btrfs_process_fs_features@@Base+0x44>
   11446:	movs	r5, #0
   11448:	add	r4, pc
   1144a:	add	sl, pc
   1144c:	ldrd	r2, r3, [r4, #8]
   11450:	and.w	r8, r6, r2
   11454:	and.w	r9, r7, r3
   11458:	orrs.w	r3, r8, r9
   1145c:	beq.n	1146a <btrfs_process_fs_features@@Base+0x32>
   1145e:	ldr	r3, [r4, #44]	; 0x2c
   11460:	mov	r1, sl
   11462:	ldr	r2, [r4, #0]
   11464:	movs	r0, #1
   11466:	blx	89ec <__printf_chk@plt+0x4>
   1146a:	adds	r5, #1
   1146c:	adds	r4, #48	; 0x30
   1146e:	cmp	r5, #7
   11470:	bne.n	1144c <btrfs_process_fs_features@@Base+0x14>
   11472:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   11476:	nop
   11478:	adds	r2, #4
   1147a:	movs	r5, r0
   1147c:	ldr	r0, [sp, #144]	; 0x90
   1147e:	movs	r2, r0

00011480 <btrfs_list_all_fs_features@@Base>:
   11480:	ldr	r3, [pc, #168]	; (1152c <btrfs_list_all_fs_features@@Base+0xac>)
   11482:	ldr	r2, [pc, #172]	; (11530 <btrfs_list_all_fs_features@@Base+0xb0>)
   11484:	add	r3, pc
   11486:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1148a:	mov	r7, r0
   1148c:	ldr	r5, [r3, r2]
   1148e:	sub	sp, #28
   11490:	ldr	r0, [pc, #160]	; (11534 <btrfs_list_all_fs_features@@Base+0xb4>)
   11492:	mov	r8, r1
   11494:	ldr	r4, [pc, #160]	; (11538 <btrfs_list_all_fs_features@@Base+0xb8>)
   11496:	movs	r6, #0
   11498:	ldr	r1, [r5, #0]
   1149a:	add	r0, pc
   1149c:	blx	8b1c <fputs@plt+0x4>
   114a0:	ldr.w	r9, [pc, #152]	; 1153c <btrfs_list_all_fs_features@@Base+0xbc>
   114a4:	ldr.w	sl, [pc, #152]	; 11540 <btrfs_list_all_fs_features@@Base+0xc0>
   114a8:	add	r4, pc
   114aa:	ldr.w	fp, [pc, #152]	; 11544 <btrfs_list_all_fs_features@@Base+0xc4>
   114ae:	add	r9, pc
   114b0:	add	sl, pc
   114b2:	add	fp, pc
   114b4:	ldrd	r2, r3, [r4, #8]
   114b8:	and.w	r1, r2, r7
   114bc:	str	r1, [sp, #16]
   114be:	and.w	r1, r3, r8
   114c2:	str	r1, [sp, #20]
   114c4:	ldrd	r0, r1, [sp, #16]
   114c8:	orrs	r1, r0
   114ca:	bne.n	1151c <btrfs_list_all_fs_features@@Base+0x9c>
   114cc:	strd	r2, r3, [sp, #8]
   114d0:	movs	r1, #1
   114d2:	ldr	r3, [r4, #44]	; 0x2c
   114d4:	mov	r2, r9
   114d6:	str	r3, [sp, #0]
   114d8:	ldr	r3, [r4, #0]
   114da:	ldr	r0, [r5, #0]
   114dc:	blx	8a14 <__fprintf_chk@plt+0x4>
   114e0:	ldr	r3, [r4, #24]
   114e2:	cbz	r3, 114f2 <btrfs_list_all_fs_features@@Base+0x72>
   114e4:	ldr	r2, [pc, #96]	; (11548 <btrfs_list_all_fs_features@@Base+0xc8>)
   114e6:	movs	r1, #1
   114e8:	ldr	r3, [r4, #20]
   114ea:	ldr	r0, [r5, #0]
   114ec:	add	r2, pc
   114ee:	blx	8a14 <__fprintf_chk@plt+0x4>
   114f2:	ldr	r3, [r4, #32]
   114f4:	cbz	r3, 11504 <btrfs_list_all_fs_features@@Base+0x84>
   114f6:	ldr	r2, [pc, #84]	; (1154c <btrfs_list_all_fs_features@@Base+0xcc>)
   114f8:	movs	r1, #1
   114fa:	ldr	r3, [r4, #28]
   114fc:	ldr	r0, [r5, #0]
   114fe:	add	r2, pc
   11500:	blx	8a14 <__fprintf_chk@plt+0x4>
   11504:	ldr	r3, [r4, #40]	; 0x28
   11506:	cbz	r3, 11514 <btrfs_list_all_fs_features@@Base+0x94>
   11508:	ldr	r3, [r4, #36]	; 0x24
   1150a:	mov	r2, fp
   1150c:	ldr	r0, [r5, #0]
   1150e:	movs	r1, #1
   11510:	blx	8a14 <__fprintf_chk@plt+0x4>
   11514:	ldr	r1, [r5, #0]
   11516:	mov	r0, sl
   11518:	blx	8b1c <fputs@plt+0x4>
   1151c:	adds	r6, #1
   1151e:	adds	r4, #48	; 0x30
   11520:	cmp	r6, #6
   11522:	bne.n	114b4 <btrfs_list_all_fs_features@@Base+0x34>
   11524:	add	sp, #28
   11526:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1152a:	nop
   1152c:	subs	r1, #4
   1152e:	movs	r5, r0
   11530:	lsls	r4, r6, #8
   11532:	movs	r0, r0
   11534:	str	r7, [sp, #1000]	; 0x3e8
   11536:	movs	r2, r0
   11538:	adds	r1, #164	; 0xa4
   1153a:	movs	r5, r0
   1153c:	ldr	r0, [sp, #24]
   1153e:	movs	r2, r0
   11540:	movs	r1, #44	; 0x2c
   11542:	movs	r4, r0
   11544:	ldr	r0, [sp, #168]	; 0xa8
   11546:	movs	r2, r0
   11548:	str	r7, [sp, #872]	; 0x368
   1154a:	movs	r2, r0
   1154c:	str	r7, [sp, #848]	; 0x350
   1154e:	movs	r2, r0

00011550 <btrfs_parse_fs_features@@Base>:
   11550:	ldr	r2, [pc, #188]	; (11610 <btrfs_parse_fs_features@@Base+0xc0>)
   11552:	ldr	r3, [pc, #192]	; (11614 <btrfs_parse_fs_features@@Base+0xc4>)
   11554:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11558:	add	r2, pc
   1155a:	sub	sp, #20
   1155c:	mov	r5, r1
   1155e:	add	r7, sp, #8
   11560:	ldr	r1, [pc, #180]	; (11618 <btrfs_parse_fs_features@@Base+0xc8>)
   11562:	ldr	r3, [r2, r3]
   11564:	add	r1, pc
   11566:	mov	r2, r7
   11568:	ldr	r3, [r3, #0]
   1156a:	str	r3, [sp, #12]
   1156c:	mov.w	r3, #0
   11570:	movs	r3, #0
   11572:	str	r3, [sp, #8]
   11574:	blx	87d0 <strtok_r@plt>
   11578:	ldr.w	r9, [pc, #160]	; 1161c <btrfs_parse_fs_features@@Base+0xcc>
   1157c:	add	r9, pc
   1157e:	mov	r4, r0
   11580:	cbnz	r4, 11596 <btrfs_parse_fs_features@@Base+0x46>
   11582:	ldr	r2, [pc, #156]	; (11620 <btrfs_parse_fs_features@@Base+0xd0>)
   11584:	ldr	r3, [pc, #140]	; (11614 <btrfs_parse_fs_features@@Base+0xc4>)
   11586:	add	r2, pc
   11588:	ldr	r3, [r2, r3]
   1158a:	ldr	r2, [r3, #0]
   1158c:	ldr	r3, [sp, #12]
   1158e:	eors	r2, r3
   11590:	beq.n	11608 <btrfs_parse_fs_features@@Base+0xb8>
   11592:	blx	86b8 <__stack_chk_fail@plt>
   11596:	ldr	r6, [pc, #140]	; (11624 <btrfs_parse_fs_features@@Base+0xd4>)
   11598:	add.w	r8, r4, #1
   1159c:	mov.w	fp, #0
   115a0:	add	r6, pc
   115a2:	add.w	sl, r6, #336	; 0x150
   115a6:	ldrb	r2, [r4, #0]
   115a8:	ldr	r3, [r6, #0]
   115aa:	cmp	r2, #94	; 0x5e
   115ac:	bne.n	115ee <btrfs_parse_fs_features@@Base+0x9e>
   115ae:	mov	r0, r3
   115b0:	mov	r1, r8
   115b2:	str	r3, [sp, #4]
   115b4:	blx	8568 <strcmp@plt>
   115b8:	ldr	r3, [sp, #4]
   115ba:	cbnz	r0, 115ee <btrfs_parse_fs_features@@Base+0x9e>
   115bc:	ldrd	r0, r1, [r6, #8]
   115c0:	ldrd	r2, r3, [r5]
   115c4:	bic.w	r2, r2, r0
   115c8:	bic.w	r3, r3, r1
   115cc:	mov.w	fp, #1
   115d0:	strd	r2, r3, [r5]
   115d4:	adds	r6, #48	; 0x30
   115d6:	cmp	sl, r6
   115d8:	bne.n	115a6 <btrfs_parse_fs_features@@Base+0x56>
   115da:	cmp.w	fp, #0
   115de:	beq.n	11582 <btrfs_parse_fs_features@@Base+0x32>
   115e0:	mov	r2, r7
   115e2:	mov	r1, r9
   115e4:	movs	r0, #0
   115e6:	blx	87d0 <strtok_r@plt>
   115ea:	mov	r4, r0
   115ec:	b.n	11580 <btrfs_parse_fs_features@@Base+0x30>
   115ee:	mov	r1, r4
   115f0:	mov	r0, r3
   115f2:	blx	8568 <strcmp@plt>
   115f6:	cmp	r0, #0
   115f8:	bne.n	115d4 <btrfs_parse_fs_features@@Base+0x84>
   115fa:	ldrd	r2, r3, [r5]
   115fe:	ldrd	r0, r1, [r6, #8]
   11602:	orrs	r2, r0
   11604:	orrs	r3, r1
   11606:	b.n	115cc <btrfs_parse_fs_features@@Base+0x7c>
   11608:	mov	r0, r4
   1160a:	add	sp, #20
   1160c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11610:	subs	r0, #48	; 0x30
   11612:	movs	r5, r0
   11614:	lsls	r4, r4, #8
   11616:	movs	r0, r0
   11618:	strh	r1, [r7, #44]	; 0x2c
   1161a:	movs	r2, r0
   1161c:	strh	r1, [r4, #44]	; 0x2c
   1161e:	movs	r2, r0
   11620:	subs	r0, #2
   11622:	movs	r5, r0
   11624:	adds	r0, #172	; 0xac
   11626:	movs	r5, r0

00011628 <print_kernel_version@@Base>:
   11628:	push	{r0, r1, r2, r4, r5, lr}
   1162a:	uxtb	r5, r1
   1162c:	ldr	r2, [pc, #44]	; (1165c <print_kernel_version@@Base+0x34>)
   1162e:	ubfx	r3, r1, #8, #8
   11632:	str	r3, [sp, #0]
   11634:	lsrs	r3, r1, #16
   11636:	add	r2, pc
   11638:	movs	r1, #1
   1163a:	mov	r4, r0
   1163c:	blx	8a14 <__fprintf_chk@plt+0x4>
   11640:	cbz	r5, 11656 <print_kernel_version@@Base+0x2e>
   11642:	ldr	r2, [pc, #28]	; (11660 <print_kernel_version@@Base+0x38>)
   11644:	mov	r3, r5
   11646:	movs	r1, #1
   11648:	mov	r0, r4
   1164a:	add	r2, pc
   1164c:	add	sp, #12
   1164e:	ldmia.w	sp!, {r4, r5, lr}
   11652:	b.w	8a10 <__fprintf_chk@plt>
   11656:	add	sp, #12
   11658:	pop	{r4, r5, pc}
   1165a:	nop
   1165c:	str	r6, [sp, #716]	; 0x2cc
   1165e:	movs	r2, r0
   11660:	bne.n	11572 <btrfs_parse_fs_features@@Base+0x22>
   11662:	movs	r2, r0

00011664 <get_running_kernel_version@@Base>:
   11664:	ldr	r2, [pc, #204]	; (11734 <get_running_kernel_version@@Base+0xd0>)
   11666:	ldr	r3, [pc, #208]	; (11738 <get_running_kernel_version@@Base+0xd4>)
   11668:	push	{r4, r5, r6, r7, lr}
   1166a:	add	r2, pc
   1166c:	sub	sp, #404	; 0x194
   1166e:	add	r6, sp, #4
   11670:	ldr	r3, [r2, r3]
   11672:	mov	r5, sp
   11674:	mov	r0, r6
   11676:	ldr	r3, [r3, #0]
   11678:	str	r3, [sp, #396]	; 0x18c
   1167a:	mov.w	r3, #0
   1167e:	movs	r3, #0
   11680:	str	r3, [r5, #0]
   11682:	blx	8684 <uname@plt>
   11686:	ldr	r1, [pc, #180]	; (1173c <get_running_kernel_version@@Base+0xd8>)
   11688:	mov	r0, r6
   1168a:	add	r1, pc
   1168c:	blx	8568 <strcmp@plt>
   11690:	mov	r4, r0
   11692:	cbz	r0, 116a4 <get_running_kernel_version@@Base+0x40>
   11694:	ldr	r0, [pc, #168]	; (11740 <get_running_kernel_version@@Base+0xdc>)
   11696:	mov	r1, r6
   11698:	add	r0, pc
   1169a:	bl	17424 <__btrfs_error@@Base>
   1169e:	movs	r0, #1
   116a0:	blx	88e4 <exit@plt>
   116a4:	add.w	r7, sp, #134	; 0x86
   116a8:	movs	r1, #45	; 0x2d
   116aa:	mov	r0, r7
   116ac:	blx	88fc <strchr@plt>
   116b0:	cbz	r0, 116b4 <get_running_kernel_version@@Base+0x50>
   116b2:	strb	r4, [r0, #0]
   116b4:	ldr	r6, [pc, #140]	; (11744 <get_running_kernel_version@@Base+0xe0>)
   116b6:	mov	r2, r5
   116b8:	mov	r0, r7
   116ba:	add	r6, pc
   116bc:	mov	r1, r6
   116be:	blx	87d0 <strtok_r@plt>
   116c2:	mov	r4, r0
   116c4:	bl	31ac0 <string_is_numerical@@Base>
   116c8:	cbnz	r0, 116e2 <get_running_kernel_version@@Base+0x7e>
   116ca:	mov.w	r4, #4294967295	; 0xffffffff
   116ce:	ldr	r2, [pc, #120]	; (11748 <get_running_kernel_version@@Base+0xe4>)
   116d0:	ldr	r3, [pc, #100]	; (11738 <get_running_kernel_version@@Base+0xd4>)
   116d2:	add	r2, pc
   116d4:	ldr	r3, [r2, r3]
   116d6:	ldr	r2, [r3, #0]
   116d8:	ldr	r3, [sp, #396]	; 0x18c
   116da:	eors	r2, r3
   116dc:	beq.n	1172c <get_running_kernel_version@@Base+0xc8>
   116de:	blx	86b8 <__stack_chk_fail@plt>
   116e2:	mov	r0, r4
   116e4:	blx	8ab4 <atoi@plt>
   116e8:	mov	r2, r5
   116ea:	mov	r1, r6
   116ec:	mov	r4, r0
   116ee:	movs	r0, #0
   116f0:	blx	87d0 <strtok_r@plt>
   116f4:	mov	r7, r0
   116f6:	bl	31ac0 <string_is_numerical@@Base>
   116fa:	cmp	r0, #0
   116fc:	beq.n	116ca <get_running_kernel_version@@Base+0x66>
   116fe:	mov	r0, r7
   11700:	blx	8ab4 <atoi@plt>
   11704:	mov	r2, r5
   11706:	mov	r1, r6
   11708:	lsls	r3, r0, #8
   1170a:	movs	r0, #0
   1170c:	orr.w	r4, r3, r4, lsl #16
   11710:	blx	87d0 <strtok_r@plt>
   11714:	mov	r5, r0
   11716:	cmp	r0, #0
   11718:	beq.n	116ce <get_running_kernel_version@@Base+0x6a>
   1171a:	bl	31ac0 <string_is_numerical@@Base>
   1171e:	cmp	r0, #0
   11720:	beq.n	116ce <get_running_kernel_version@@Base+0x6a>
   11722:	mov	r0, r5
   11724:	blx	8ab4 <atoi@plt>
   11728:	orrs	r4, r0
   1172a:	b.n	116ce <get_running_kernel_version@@Base+0x6a>
   1172c:	mov	r0, r4
   1172e:	add	sp, #404	; 0x194
   11730:	pop	{r4, r5, r6, r7, pc}
   11732:	nop
   11734:	adds	r7, #30
   11736:	movs	r5, r0
   11738:	lsls	r4, r4, #8
   1173a:	movs	r0, r0
   1173c:	str	r6, [sp, #404]	; 0x194
   1173e:	movs	r2, r0
   11740:	str	r6, [sp, #372]	; 0x174
   11742:	movs	r2, r0
   11744:	adds	r2, r6, r7
   11746:	movs	r4, r0
   11748:	adds	r6, #182	; 0xb6
   1174a:	movs	r5, r0

0001174c <btrfs_check_nodesize@@Base>:
   1174c:	cmp	r0, r1
   1174e:	push	{r4, r6, r7, lr}
   11750:	mov	r4, r0
   11752:	bcs.n	11766 <btrfs_check_nodesize@@Base+0x1a>
   11754:	mov	r2, r1
   11756:	mov	r1, r0
   11758:	ldr	r0, [pc, #72]	; (117a4 <btrfs_check_nodesize@@Base+0x58>)
   1175a:	add	r0, pc
   1175c:	bl	17424 <__btrfs_error@@Base>
   11760:	mov.w	r0, #4294967295	; 0xffffffff
   11764:	pop	{r4, r6, r7, pc}
   11766:	cmp.w	r0, #65536	; 0x10000
   1176a:	bls.n	11778 <btrfs_check_nodesize@@Base+0x2c>
   1176c:	mov	r1, r0
   1176e:	ldr	r0, [pc, #56]	; (117a8 <btrfs_check_nodesize@@Base+0x5c>)
   11770:	mov.w	r2, #65536	; 0x10000
   11774:	add	r0, pc
   11776:	b.n	1175c <btrfs_check_nodesize@@Base+0x10>
   11778:	subs	r3, r1, #1
   1177a:	ands	r0, r3
   1177c:	beq.n	11788 <btrfs_check_nodesize@@Base+0x3c>
   1177e:	ldr	r0, [pc, #44]	; (117ac <btrfs_check_nodesize@@Base+0x60>)
   11780:	mov	r2, r1
   11782:	mov	r1, r4
   11784:	add	r0, pc
   11786:	b.n	1175c <btrfs_check_nodesize@@Base+0x10>
   11788:	and.w	r6, r2, #4
   1178c:	mov	r7, r0
   1178e:	orrs.w	r3, r6, r7
   11792:	beq.n	11764 <btrfs_check_nodesize@@Base+0x18>
   11794:	cmp	r4, r1
   11796:	beq.n	11764 <btrfs_check_nodesize@@Base+0x18>
   11798:	ldr	r0, [pc, #20]	; (117b0 <btrfs_check_nodesize@@Base+0x64>)
   1179a:	mov	r2, r1
   1179c:	mov	r1, r4
   1179e:	add	r0, pc
   117a0:	b.n	1175c <btrfs_check_nodesize@@Base+0x10>
   117a2:	nop
   117a4:	str	r5, [sp, #712]	; 0x2c8
   117a6:	movs	r2, r0
   117a8:	str	r5, [sp, #760]	; 0x2f8
   117aa:	movs	r2, r0
   117ac:	str	r5, [sp, #844]	; 0x34c
   117ae:	movs	r2, r0
   117b0:	str	r5, [sp, #900]	; 0x384
   117b2:	movs	r2, r0
   117b4:	push	{r4, lr}
   117b6:	mov	r4, r0
   117b8:	subs	r4, #1
   117ba:	bcs.n	117be <btrfs_check_nodesize@@Base+0x72>
   117bc:	pop	{r4, pc}
   117be:	movs	r0, #32
   117c0:	blx	8988 <putchar@plt+0x4>
   117c4:	movs	r0, #32
   117c6:	blx	8988 <putchar@plt+0x4>
   117ca:	b.n	117b8 <btrfs_check_nodesize@@Base+0x6c>
   117cc:	push	{r4, lr}
   117ce:	mov	r4, r0
   117d0:	subs	r4, #1
   117d2:	bcs.n	117d6 <btrfs_check_nodesize@@Base+0x8a>
   117d4:	pop	{r4, pc}
   117d6:	movs	r0, #32
   117d8:	blx	8988 <putchar@plt+0x4>
   117dc:	b.n	117d0 <btrfs_check_nodesize@@Base+0x84>
   117de:	ldr	r3, [pc, #92]	; (1183c <btrfs_check_nodesize@@Base+0xf0>)
   117e0:	ldr	r2, [pc, #92]	; (11840 <btrfs_check_nodesize@@Base+0xf4>)
   117e2:	add	r3, pc
   117e4:	push	{r4, lr}
   117e6:	mov	r4, r0
   117e8:	ldr	r3, [r3, r2]
   117ea:	ldr	r3, [r3, #0]
   117ec:	cmp	r3, #8
   117ee:	bne.n	11810 <btrfs_check_nodesize@@Base+0xc4>
   117f0:	ldr	r3, [r0, #8]
   117f2:	adds	r3, #8
   117f4:	ldr.w	r3, [r0, r3, lsl #2]
   117f8:	cbnz	r3, 11812 <btrfs_check_nodesize@@Base+0xc6>
   117fa:	movs	r0, #10
   117fc:	blx	8988 <putchar@plt+0x4>
   11800:	ldr	r0, [r4, #8]
   11802:	bl	117b4 <btrfs_check_nodesize@@Base+0x68>
   11806:	ldr	r3, [r4, #8]
   11808:	movs	r2, #1
   1180a:	adds	r3, #8
   1180c:	str.w	r2, [r4, r3, lsl #2]
   11810:	pop	{r4, pc}
   11812:	cmp	r3, #1
   11814:	bne.n	1182c <btrfs_check_nodesize@@Base+0xe0>
   11816:	ldr	r0, [pc, #44]	; (11844 <btrfs_check_nodesize@@Base+0xf8>)
   11818:	add	r0, pc
   1181a:	blx	8804 <puts@plt+0x4>
   1181e:	ldr	r0, [r4, #8]
   11820:	bl	117b4 <btrfs_check_nodesize@@Base+0x68>
   11824:	ldr	r3, [r4, #8]
   11826:	movs	r2, #2
   11828:	adds	r3, #8
   1182a:	b.n	1180c <btrfs_check_nodesize@@Base+0xc0>
   1182c:	ldr	r0, [pc, #24]	; (11848 <btrfs_check_nodesize@@Base+0xfc>)
   1182e:	add	r0, pc
   11830:	blx	8804 <puts@plt+0x4>
   11834:	ldr	r0, [r4, #8]
   11836:	ldmia.w	sp!, {r4, lr}
   1183a:	b.n	117b4 <btrfs_check_nodesize@@Base+0x68>
   1183c:	adds	r5, #166	; 0xa6
   1183e:	movs	r5, r0
   11840:	lsls	r0, r4, #8
   11842:	movs	r0, r0
   11844:	strh	r5, [r0, #24]
   11846:	movs	r2, r0
   11848:	strh	r7, [r5, #22]
   1184a:	movs	r2, r0
   1184c:	push	{r4, lr}
   1184e:	ldr	r4, [r0, #4]
   11850:	ldr	r1, [pc, #32]	; (11874 <btrfs_check_nodesize@@Base+0x128>)
   11852:	mov	r0, r4
   11854:	add	r1, pc
   11856:	blx	8568 <strcmp@plt>
   1185a:	cbz	r0, 11872 <btrfs_check_nodesize@@Base+0x126>
   1185c:	ldr	r1, [pc, #24]	; (11878 <btrfs_check_nodesize@@Base+0x12c>)
   1185e:	mov	r0, r4
   11860:	add	r1, pc
   11862:	blx	8568 <strcmp@plt>
   11866:	cbz	r0, 11872 <btrfs_check_nodesize@@Base+0x126>
   11868:	ldmia.w	sp!, {r4, lr}
   1186c:	movs	r0, #34	; 0x22
   1186e:	b.w	8984 <putchar@plt>
   11872:	pop	{r4, pc}
   11874:	str	r6, [sp, #820]	; 0x334
   11876:	movs	r2, r0
   11878:	bcc.n	118c6 <fmt_end@@Base+0x4a>
   1187a:	movs	r2, r0

0001187c <fmt_end@@Base>:
   1187c:	push	{r3, r4, r5, lr}
   1187e:	mov	r4, r0
   11880:	ldr	r3, [r0, #8]
   11882:	ldr	r5, [pc, #88]	; (118dc <fmt_end@@Base+0x60>)
   11884:	cmp	r3, #1
   11886:	add	r5, pc
   11888:	beq.n	11898 <fmt_end@@Base+0x1c>
   1188a:	ldr	r3, [pc, #84]	; (118e0 <fmt_end@@Base+0x64>)
   1188c:	ldr	r0, [pc, #84]	; (118e4 <fmt_end@@Base+0x68>)
   1188e:	ldr	r3, [r5, r3]
   11890:	add	r0, pc
   11892:	ldr	r1, [r3, #0]
   11894:	blx	8b1c <fputs@plt+0x4>
   11898:	ldr	r3, [pc, #76]	; (118e8 <fmt_end@@Base+0x6c>)
   1189a:	ldr	r3, [r5, r3]
   1189c:	ldr	r3, [r3, #0]
   1189e:	lsls	r2, r3, #29
   118a0:	bpl.n	118ac <fmt_end@@Base+0x30>
   118a2:	ldmia.w	sp!, {r3, r4, r5, lr}
   118a6:	movs	r0, #10
   118a8:	b.w	8984 <putchar@plt>
   118ac:	lsls	r3, r3, #28
   118ae:	bpl.n	118da <fmt_end@@Base+0x5e>
   118b0:	ldr	r3, [r4, #8]
   118b2:	cmp	r3, #0
   118b4:	bgt.n	118c4 <fmt_end@@Base+0x48>
   118b6:	ldr	r0, [pc, #52]	; (118ec <fmt_end@@Base+0x70>)
   118b8:	add	r0, pc
   118ba:	blx	8804 <puts@plt+0x4>
   118be:	movs	r0, #1
   118c0:	blx	88e4 <exit@plt>
   118c4:	subs	r3, #1
   118c6:	mov	r0, r4
   118c8:	str	r3, [r4, #8]
   118ca:	bl	117de <btrfs_check_nodesize@@Base+0x92>
   118ce:	ldr	r0, [pc, #32]	; (118f0 <fmt_end@@Base+0x74>)
   118d0:	ldmia.w	sp!, {r3, r4, r5, lr}
   118d4:	add	r0, pc
   118d6:	b.w	8800 <puts@plt>
   118da:	pop	{r3, r4, r5, pc}
   118dc:	adds	r5, #2
   118de:	movs	r5, r0
   118e0:	lsls	r4, r6, #8
   118e2:	movs	r0, r0
   118e4:	str	r6, [sp, #600]	; 0x258
   118e6:	movs	r2, r0
   118e8:	lsls	r0, r4, #8
   118ea:	movs	r0, r0
   118ec:	str	r6, [sp, #536]	; 0x218
   118ee:	movs	r2, r0
   118f0:	str	r6, [sp, #592]	; 0x250
   118f2:	movs	r2, r0

000118f4 <fmt_start_list_value@@Base>:
   118f4:	ldr	r3, [pc, #48]	; (11928 <fmt_start_list_value@@Base+0x34>)
   118f6:	ldr	r2, [pc, #52]	; (1192c <fmt_start_list_value@@Base+0x38>)
   118f8:	add	r3, pc
   118fa:	push	{r4, lr}
   118fc:	mov	r4, r0
   118fe:	ldr	r3, [r3, r2]
   11900:	ldr	r3, [r3, #0]
   11902:	cmp	r3, #4
   11904:	bne.n	1190e <fmt_start_list_value@@Base+0x1a>
   11906:	ldmia.w	sp!, {r4, lr}
   1190a:	ldr	r0, [r0, #4]
   1190c:	b.n	117cc <btrfs_check_nodesize@@Base+0x80>
   1190e:	cmp	r3, #8
   11910:	bne.n	11926 <fmt_start_list_value@@Base+0x32>
   11912:	bl	117de <btrfs_check_nodesize@@Base+0x92>
   11916:	ldr	r0, [r4, #8]
   11918:	bl	117b4 <btrfs_check_nodesize@@Base+0x68>
   1191c:	ldmia.w	sp!, {r4, lr}
   11920:	movs	r0, #34	; 0x22
   11922:	b.w	8984 <putchar@plt>
   11926:	pop	{r4, pc}
   11928:	adds	r4, #144	; 0x90
   1192a:	movs	r5, r0
   1192c:	lsls	r0, r4, #8
	...

00011930 <fmt_end_list_value@@Base>:
   11930:	ldr	r3, [pc, #28]	; (11950 <fmt_end_list_value@@Base+0x20>)
   11932:	ldr	r2, [pc, #32]	; (11954 <fmt_end_list_value@@Base+0x24>)
   11934:	add	r3, pc
   11936:	ldr	r3, [r3, r2]
   11938:	ldr	r3, [r3, #0]
   1193a:	cmp	r3, #4
   1193c:	bne.n	11944 <fmt_end_list_value@@Base+0x14>
   1193e:	movs	r0, #10
   11940:	b.w	8984 <putchar@plt>
   11944:	cmp	r3, #8
   11946:	bne.n	1194c <fmt_end_list_value@@Base+0x1c>
   11948:	movs	r0, #34	; 0x22
   1194a:	b.n	11940 <fmt_end_list_value@@Base+0x10>
   1194c:	bx	lr
   1194e:	nop
   11950:	adds	r4, #84	; 0x54
   11952:	movs	r5, r0
   11954:	lsls	r0, r4, #8
	...

00011958 <fmt_start_value@@Base>:
   11958:	ldr	r3, [pc, #64]	; (1199c <fmt_start_value@@Base+0x44>)
   1195a:	mov	r0, r1
   1195c:	ldr	r2, [pc, #64]	; (119a0 <fmt_start_value@@Base+0x48>)
   1195e:	add	r3, pc
   11960:	push	{r4, lr}
   11962:	ldr	r3, [r3, r2]
   11964:	ldr	r3, [r3, #0]
   11966:	cmp	r3, #4
   11968:	bne.n	11992 <fmt_start_value@@Base+0x3a>
   1196a:	ldr	r4, [r1, #4]
   1196c:	ldr	r1, [pc, #52]	; (119a4 <fmt_start_value@@Base+0x4c>)
   1196e:	mov	r0, r4
   11970:	add	r1, pc
   11972:	blx	8568 <strcmp@plt>
   11976:	cbnz	r0, 11982 <fmt_start_value@@Base+0x2a>
   11978:	ldmia.w	sp!, {r4, lr}
   1197c:	movs	r0, #10
   1197e:	b.w	8984 <putchar@plt>
   11982:	ldr	r1, [pc, #36]	; (119a8 <fmt_start_value@@Base+0x50>)
   11984:	mov	r0, r4
   11986:	add	r1, pc
   11988:	blx	8568 <strcmp@plt>
   1198c:	cmp	r0, #0
   1198e:	beq.n	11978 <fmt_start_value@@Base+0x20>
   11990:	pop	{r4, pc}
   11992:	cmp	r3, #8
   11994:	bne.n	11990 <fmt_start_value@@Base+0x38>
   11996:	ldmia.w	sp!, {r4, lr}
   1199a:	b.n	1184c <btrfs_check_nodesize@@Base+0x100>
   1199c:	adds	r4, #42	; 0x2a
   1199e:	movs	r5, r0
   119a0:	lsls	r0, r4, #8
   119a2:	movs	r0, r0
   119a4:	str	r5, [sp, #708]	; 0x2c4
   119a6:	movs	r2, r0
   119a8:	bne.n	119aa <fmt_start_value@@Base+0x52>
   119aa:	movs	r2, r0

000119ac <fmt_end_value@@Base>:
   119ac:	ldr	r3, [pc, #16]	; (119c0 <fmt_end_value@@Base+0x14>)
   119ae:	mov	r0, r1
   119b0:	ldr	r2, [pc, #16]	; (119c4 <fmt_end_value@@Base+0x18>)
   119b2:	add	r3, pc
   119b4:	ldr	r3, [r3, r2]
   119b6:	ldr	r3, [r3, #0]
   119b8:	cmp	r3, #8
   119ba:	bne.n	119be <fmt_end_value@@Base+0x12>
   119bc:	b.n	1184c <btrfs_check_nodesize@@Base+0x100>
   119be:	bx	lr
   119c0:	adds	r3, #214	; 0xd6
   119c2:	movs	r5, r0
   119c4:	lsls	r0, r4, #8
	...

000119c8 <fmt_print_start_group@@Base>:
   119c8:	ldr	r3, [pc, #108]	; (11a38 <fmt_print_start_group@@Base+0x70>)
   119ca:	push	{r4, r5, r6, lr}
   119cc:	mov	r4, r2
   119ce:	ldr	r2, [pc, #108]	; (11a3c <fmt_print_start_group@@Base+0x74>)
   119d0:	add	r3, pc
   119d2:	mov	r5, r0
   119d4:	mov	r6, r1
   119d6:	ldr	r3, [r3, r2]
   119d8:	ldr	r3, [r3, #0]
   119da:	cmp	r3, #8
   119dc:	bne.n	11a36 <fmt_print_start_group@@Base+0x6e>
   119de:	bl	117de <btrfs_check_nodesize@@Base+0x92>
   119e2:	ldr	r3, [r5, #8]
   119e4:	cmp	r3, #14
   119e6:	ble.n	119fa <fmt_print_start_group@@Base+0x32>
   119e8:	ldr	r1, [pc, #84]	; (11a40 <fmt_print_start_group@@Base+0x78>)
   119ea:	movs	r2, #16
   119ec:	add	r1, pc
   119ee:	movs	r0, #1
   119f0:	blx	89ec <__printf_chk@plt+0x4>
   119f4:	movs	r0, #1
   119f6:	blx	88e4 <exit@plt>
   119fa:	adds	r2, r3, #1
   119fc:	cmp	r4, #1
   119fe:	add.w	r1, r5, r2
   11a02:	add.w	r3, r3, #9
   11a06:	str	r2, [r5, #8]
   11a08:	strb	r4, [r1, #16]
   11a0a:	mov.w	r1, #0
   11a0e:	str.w	r1, [r5, r3, lsl #2]
   11a12:	bne.n	11a24 <fmt_print_start_group@@Base+0x5c>
   11a14:	ldr	r1, [pc, #44]	; (11a44 <fmt_print_start_group@@Base+0x7c>)
   11a16:	mov	r2, r6
   11a18:	add	r1, pc
   11a1a:	ldmia.w	sp!, {r4, r5, r6, lr}
   11a1e:	movs	r0, #1
   11a20:	b.w	89e8 <__printf_chk@plt>
   11a24:	cmp	r4, #2
   11a26:	bne.n	11a30 <fmt_print_start_group@@Base+0x68>
   11a28:	ldr	r1, [pc, #28]	; (11a48 <fmt_print_start_group@@Base+0x80>)
   11a2a:	mov	r2, r6
   11a2c:	add	r1, pc
   11a2e:	b.n	11a1a <fmt_print_start_group@@Base+0x52>
   11a30:	ldr	r1, [pc, #24]	; (11a4c <fmt_print_start_group@@Base+0x84>)
   11a32:	add	r1, pc
   11a34:	b.n	119ee <fmt_print_start_group@@Base+0x26>
   11a36:	pop	{r4, r5, r6, pc}
   11a38:	adds	r3, #184	; 0xb8
   11a3a:	movs	r5, r0
   11a3c:	lsls	r0, r4, #8
   11a3e:	movs	r0, r0
   11a40:	str	r5, [sp, #504]	; 0x1f8
   11a42:	movs	r2, r0
   11a44:	str	r5, [sp, #504]	; 0x1f8
   11a46:	movs	r2, r0
   11a48:	str	r5, [sp, #456]	; 0x1c8
   11a4a:	movs	r2, r0
   11a4c:	str	r5, [sp, #464]	; 0x1d0
   11a4e:	movs	r2, r0

00011a50 <fmt_print_end_group@@Base>:
   11a50:	push	{r3, r4, r5, lr}
   11a52:	mov	r4, r0
   11a54:	ldr	r3, [pc, #88]	; (11ab0 <fmt_print_end_group@@Base+0x60>)
   11a56:	ldr	r2, [pc, #92]	; (11ab4 <fmt_print_end_group@@Base+0x64>)
   11a58:	add	r3, pc
   11a5a:	ldr	r3, [r3, r2]
   11a5c:	ldr	r3, [r3, #0]
   11a5e:	cmp	r3, #8
   11a60:	bne.n	11aae <fmt_print_end_group@@Base+0x5e>
   11a62:	ldr	r3, [r0, #8]
   11a64:	adds	r2, r0, r3
   11a66:	cmp	r3, #0
   11a68:	ldrb	r5, [r2, #16]
   11a6a:	bgt.n	11a7a <fmt_print_end_group@@Base+0x2a>
   11a6c:	ldr	r0, [pc, #72]	; (11ab8 <fmt_print_end_group@@Base+0x68>)
   11a6e:	add	r0, pc
   11a70:	blx	8804 <puts@plt+0x4>
   11a74:	movs	r0, #1
   11a76:	blx	88e4 <exit@plt>
   11a7a:	subs	r3, #1
   11a7c:	str	r3, [r0, #8]
   11a7e:	movs	r0, #10
   11a80:	blx	8988 <putchar@plt+0x4>
   11a84:	ldr	r0, [r4, #8]
   11a86:	bl	117b4 <btrfs_check_nodesize@@Base+0x68>
   11a8a:	cmp	r5, #1
   11a8c:	bne.n	11a98 <fmt_print_end_group@@Base+0x48>
   11a8e:	movs	r0, #125	; 0x7d
   11a90:	ldmia.w	sp!, {r3, r4, r5, lr}
   11a94:	b.w	8984 <putchar@plt>
   11a98:	cmp	r5, #2
   11a9a:	bne.n	11aa0 <fmt_print_end_group@@Base+0x50>
   11a9c:	movs	r0, #93	; 0x5d
   11a9e:	b.n	11a90 <fmt_print_end_group@@Base+0x40>
   11aa0:	ldr	r1, [pc, #24]	; (11abc <fmt_print_end_group@@Base+0x6c>)
   11aa2:	movs	r0, #1
   11aa4:	ldr	r2, [r4, #8]
   11aa6:	add	r1, pc
   11aa8:	blx	89ec <__printf_chk@plt+0x4>
   11aac:	b.n	11a74 <fmt_print_end_group@@Base+0x24>
   11aae:	pop	{r3, r4, r5, pc}
   11ab0:	adds	r3, #48	; 0x30
   11ab2:	movs	r5, r0
   11ab4:	lsls	r0, r4, #8
   11ab6:	movs	r0, r0
   11ab8:	str	r4, [sp, #832]	; 0x340
   11aba:	movs	r2, r0
   11abc:	str	r5, [sp, #0]
   11abe:	movs	r2, r0

00011ac0 <fmt_start@@Base>:
   11ac0:	push	{r4, r5, r6, lr}
   11ac2:	mov	r4, r0
   11ac4:	ldr	r0, [pc, #92]	; (11b24 <fmt_start@@Base+0x64>)
   11ac6:	movs	r5, #1
   11ac8:	strd	r2, r3, [r4]
   11acc:	ldr	r3, [pc, #88]	; (11b28 <fmt_start@@Base+0x68>)
   11ace:	add	r0, pc
   11ad0:	str	r1, [r4, #12]
   11ad2:	str	r5, [r4, #8]
   11ad4:	ldr	r3, [r0, r3]
   11ad6:	ldr	r3, [r3, #0]
   11ad8:	lsls	r3, r3, #28
   11ada:	bpl.n	11b22 <fmt_start@@Base+0x62>
   11adc:	movs	r0, #123	; 0x7b
   11ade:	ldr	r6, [pc, #76]	; (11b2c <fmt_start@@Base+0x6c>)
   11ae0:	blx	8988 <putchar@plt+0x4>
   11ae4:	ldr	r3, [r4, #8]
   11ae6:	add	r6, pc
   11ae8:	mov	r0, r4
   11aea:	adds	r2, r4, r3
   11aec:	adds	r3, #8
   11aee:	mov	r1, r6
   11af0:	strb	r5, [r2, #16]
   11af2:	movs	r2, #0
   11af4:	str.w	r2, [r4, r3, lsl #2]
   11af8:	mov	r2, r5
   11afa:	bl	119c8 <fmt_print_start_group@@Base>
   11afe:	mov	r0, r4
   11b00:	bl	117de <btrfs_check_nodesize@@Base+0x92>
   11b04:	ldr	r1, [pc, #40]	; (11b30 <fmt_start@@Base+0x70>)
   11b06:	mov	r0, r5
   11b08:	add	r1, pc
   11b0a:	blx	89ec <__printf_chk@plt+0x4>
   11b0e:	ldr	r3, [r4, #8]
   11b10:	mov	r1, r6
   11b12:	mov	r0, r4
   11b14:	adds	r3, #8
   11b16:	str.w	r5, [r4, r3, lsl #2]
   11b1a:	ldmia.w	sp!, {r4, r5, r6, lr}
   11b1e:	b.w	11a50 <fmt_print_end_group@@Base>
   11b22:	pop	{r4, r5, r6, pc}
   11b24:	adds	r2, #186	; 0xba
   11b26:	movs	r5, r0
   11b28:	lsls	r0, r4, #8
   11b2a:	movs	r0, r0
   11b2c:	str	r4, [sp, #940]	; 0x3ac
   11b2e:	movs	r2, r0
   11b30:	str	r4, [sp, #840]	; 0x348
   11b32:	movs	r2, r0

00011b34 <fmt_print@@Base>:
   11b34:	push	{r1, r2, r3}
   11b36:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11b3a:	mov	r5, r0
   11b3c:	sub	sp, #332	; 0x14c
   11b3e:	ldr	r0, [pc, #572]	; (11d7c <fmt_print@@Base+0x248>)
   11b40:	add	r3, sp, #356	; 0x164
   11b42:	ldr	r1, [pc, #572]	; (11d80 <fmt_print@@Base+0x24c>)
   11b44:	add	r0, pc
   11b46:	ldr	r4, [r5, #12]
   11b48:	ldr.w	r2, [r3], #4
   11b4c:	add	r6, sp, #16
   11b4e:	ldr	r1, [r0, r1]
   11b50:	ldr	r7, [pc, #560]	; (11d84 <fmt_print@@Base+0x250>)
   11b52:	ldr	r1, [r1, #0]
   11b54:	str	r1, [sp, #324]	; 0x144
   11b56:	mov.w	r1, #0
   11b5a:	str	r3, [r6, #0]
   11b5c:	add	r7, pc
   11b5e:	ldr	r1, [r4, #0]
   11b60:	cbnz	r1, 11b72 <fmt_print@@Base+0x3e>
   11b62:	ldr	r1, [pc, #548]	; (11d88 <fmt_print@@Base+0x254>)
   11b64:	movs	r0, #1
   11b66:	add	r1, pc
   11b68:	blx	89ec <__printf_chk@plt+0x4>
   11b6c:	movs	r0, #1
   11b6e:	blx	88e4 <exit@plt>
   11b72:	mov	r0, r2
   11b74:	str	r2, [sp, #12]
   11b76:	blx	8568 <strcmp@plt>
   11b7a:	cmp	r0, #0
   11b7c:	beq.w	11cee <fmt_print@@Base+0x1ba>
   11b80:	ldr	r2, [sp, #12]
   11b82:	adds	r4, #16
   11b84:	b.n	11b5e <fmt_print@@Base+0x2a>
   11b86:	cmp	r3, #8
   11b88:	bne.w	11d3a <fmt_print@@Base+0x206>
   11b8c:	ldr	r7, [r4, #4]
   11b8e:	ldr	r1, [pc, #508]	; (11d8c <fmt_print@@Base+0x258>)
   11b90:	mov	r0, r7
   11b92:	add	r1, pc
   11b94:	blx	8568 <strcmp@plt>
   11b98:	cbnz	r0, 11ba6 <fmt_print@@Base+0x72>
   11b9a:	movs	r2, #2
   11b9c:	ldr	r1, [r4, #12]
   11b9e:	mov	r0, r5
   11ba0:	bl	119c8 <fmt_print_start_group@@Base>
   11ba4:	b.n	11d3a <fmt_print@@Base+0x206>
   11ba6:	ldr	r1, [pc, #488]	; (11d90 <fmt_print@@Base+0x25c>)
   11ba8:	mov	r0, r7
   11baa:	add	r1, pc
   11bac:	blx	8568 <strcmp@plt>
   11bb0:	cbnz	r0, 11bb6 <fmt_print@@Base+0x82>
   11bb2:	movs	r2, #1
   11bb4:	b.n	11b9c <fmt_print@@Base+0x68>
   11bb6:	mov	r0, r5
   11bb8:	bl	117de <btrfs_check_nodesize@@Base+0x92>
   11bbc:	ldr	r1, [pc, #468]	; (11d94 <fmt_print@@Base+0x260>)
   11bbe:	ldr	r2, [r4, #12]
   11bc0:	movs	r0, #1
   11bc2:	add	r1, pc
   11bc4:	blx	89ec <__printf_chk@plt+0x4>
   11bc8:	b.n	11d3a <fmt_print@@Base+0x206>
   11bca:	ldr	r1, [pc, #460]	; (11d98 <fmt_print@@Base+0x264>)
   11bcc:	mov	r0, r7
   11bce:	add	r1, pc
   11bd0:	blx	8568 <strcmp@plt>
   11bd4:	cbnz	r0, 11c08 <fmt_print@@Base+0xd4>
   11bd6:	ldr	r3, [r6, #0]
   11bd8:	adds	r2, r3, #4
   11bda:	str	r2, [r6, #0]
   11bdc:	ldr	r6, [r3, #0]
   11bde:	mov	r0, r6
   11be0:	blx	8968 <uuid_is_null@plt>
   11be4:	cbz	r0, 11bee <fmt_print@@Base+0xba>
   11be6:	movs	r0, #45	; 0x2d
   11be8:	blx	8988 <putchar@plt+0x4>
   11bec:	b.n	11d56 <fmt_print@@Base+0x222>
   11bee:	add	r2, sp, #68	; 0x44
   11bf0:	mov	r0, r6
   11bf2:	str	r2, [sp, #12]
   11bf4:	mov	r1, r2
   11bf6:	blx	8580 <uuid_unparse@plt>
   11bfa:	ldr	r1, [pc, #416]	; (11d9c <fmt_print@@Base+0x268>)
   11bfc:	ldr	r2, [sp, #12]
   11bfe:	add	r1, pc
   11c00:	movs	r0, #1
   11c02:	blx	89ec <__printf_chk@plt+0x4>
   11c06:	b.n	11d56 <fmt_print@@Base+0x222>
   11c08:	ldr	r1, [pc, #404]	; (11da0 <fmt_print@@Base+0x26c>)
   11c0a:	mov	r0, r7
   11c0c:	add	r1, pc
   11c0e:	blx	8568 <strcmp@plt>
   11c12:	cbnz	r0, 11c48 <fmt_print@@Base+0x114>
   11c14:	ldr	r3, [r6, #0]
   11c16:	add	r0, sp, #20
   11c18:	adds	r2, r3, #4
   11c1a:	str	r2, [r6, #0]
   11c1c:	ldr	r3, [r3, #0]
   11c1e:	str	r3, [r0, #0]
   11c20:	cmp	r3, #0
   11c22:	beq.n	11be6 <fmt_print@@Base+0xb2>
   11c24:	add	r3, sp, #24
   11c26:	add	r6, sp, #68	; 0x44
   11c28:	str	r3, [sp, #12]
   11c2a:	mov	r1, r3
   11c2c:	blx	86e0 <localtime_r@plt>
   11c30:	ldr	r2, [pc, #368]	; (11da4 <fmt_print@@Base+0x270>)
   11c32:	mov.w	r1, #256	; 0x100
   11c36:	ldr	r3, [sp, #12]
   11c38:	add	r2, pc
   11c3a:	mov	r0, r6
   11c3c:	blx	8854 <strftime@plt>
   11c40:	ldr	r1, [pc, #356]	; (11da8 <fmt_print@@Base+0x274>)
   11c42:	mov	r2, r6
   11c44:	add	r1, pc
   11c46:	b.n	11c00 <fmt_print@@Base+0xcc>
   11c48:	ldr	r1, [pc, #352]	; (11dac <fmt_print@@Base+0x278>)
   11c4a:	mov	r0, r7
   11c4c:	add	r1, pc
   11c4e:	blx	8568 <strcmp@plt>
   11c52:	cmp	r0, #0
   11c54:	beq.n	11d56 <fmt_print@@Base+0x222>
   11c56:	ldr	r1, [pc, #344]	; (11db0 <fmt_print@@Base+0x27c>)
   11c58:	mov	r0, r7
   11c5a:	add	r1, pc
   11c5c:	blx	8568 <strcmp@plt>
   11c60:	cmp	r0, #0
   11c62:	beq.n	11d56 <fmt_print@@Base+0x222>
   11c64:	ldr	r1, [pc, #332]	; (11db4 <fmt_print@@Base+0x280>)
   11c66:	mov	r0, r7
   11c68:	add	r1, pc
   11c6a:	blx	8568 <strcmp@plt>
   11c6e:	cbnz	r0, 11c90 <fmt_print@@Base+0x15c>
   11c70:	ldr	r1, [r6, #0]
   11c72:	movs	r0, #1
   11c74:	adds	r1, #7
   11c76:	bic.w	r1, r1, #7
   11c7a:	ldrd	r2, r3, [r1, #8]
   11c7e:	strd	r2, r3, [sp]
   11c82:	ldrd	r2, r3, [r1]
   11c86:	ldr	r1, [pc, #304]	; (11db8 <fmt_print@@Base+0x284>)
   11c88:	add	r1, pc
   11c8a:	blx	89ec <__printf_chk@plt+0x4>
   11c8e:	b.n	11d56 <fmt_print@@Base+0x222>
   11c90:	ldr	r1, [pc, #296]	; (11dbc <fmt_print@@Base+0x288>)
   11c92:	mov	r0, r7
   11c94:	add	r1, pc
   11c96:	blx	8568 <strcmp@plt>
   11c9a:	cbnz	r0, 11cc0 <fmt_print@@Base+0x18c>
   11c9c:	ldr	r3, [r6, #0]
   11c9e:	adds	r3, #7
   11ca0:	bic.w	r3, r3, #7
   11ca4:	mov	r2, r3
   11ca6:	ldrd	r0, r1, [r2], #12
   11caa:	str	r2, [r6, #0]
   11cac:	orrs.w	r2, r0, r1
   11cb0:	beq.n	11be6 <fmt_print@@Base+0xb2>
   11cb2:	ldr	r2, [r3, #8]
   11cb4:	bl	304a8 <pretty_size_mode@@Base>
   11cb8:	ldr	r1, [pc, #260]	; (11dc0 <fmt_print@@Base+0x28c>)
   11cba:	add	r1, pc
   11cbc:	mov	r2, r0
   11cbe:	b.n	11c00 <fmt_print@@Base+0xcc>
   11cc0:	ldr	r1, [pc, #256]	; (11dc4 <fmt_print@@Base+0x290>)
   11cc2:	mov	r0, r7
   11cc4:	add	r1, pc
   11cc6:	blx	8568 <strcmp@plt>
   11cca:	cbnz	r0, 11ce6 <fmt_print@@Base+0x1b2>
   11ccc:	ldr	r3, [r6, #0]
   11cce:	adds	r3, #7
   11cd0:	bic.w	r3, r3, #7
   11cd4:	ldr	r2, [r3, #8]
   11cd6:	ldrd	r0, r1, [r3]
   11cda:	bl	304a8 <pretty_size_mode@@Base>
   11cde:	ldr	r1, [pc, #232]	; (11dc8 <fmt_print@@Base+0x294>)
   11ce0:	add	r1, pc
   11ce2:	mov	r2, r0
   11ce4:	b.n	11c00 <fmt_print@@Base+0xcc>
   11ce6:	ldr	r1, [pc, #228]	; (11dcc <fmt_print@@Base+0x298>)
   11ce8:	mov	r2, r7
   11cea:	add	r1, pc
   11cec:	b.n	11c00 <fmt_print@@Base+0xcc>
   11cee:	ldr	r3, [pc, #224]	; (11dd0 <fmt_print@@Base+0x29c>)
   11cf0:	ldr	r3, [r7, r3]
   11cf2:	ldr	r3, [r3, #0]
   11cf4:	cmp	r3, #4
   11cf6:	bne.w	11b86 <fmt_print@@Base+0x52>
   11cfa:	ldr	r3, [r4, #8]
   11cfc:	movs	r0, #10
   11cfe:	ldrb.w	r8, [r3]
   11d02:	blx	8988 <putchar@plt+0x4>
   11d06:	ldr	r0, [r5, #4]
   11d08:	bl	117cc <btrfs_check_nodesize@@Base+0x80>
   11d0c:	ldr	r2, [r4, #8]
   11d0e:	mov	r0, r2
   11d10:	str	r2, [sp, #12]
   11d12:	blx	88f0 <strlen@plt>
   11d16:	ldr	r1, [pc, #188]	; (11dd4 <fmt_print@@Base+0x2a0>)
   11d18:	ldr	r2, [sp, #12]
   11d1a:	add	r1, pc
   11d1c:	mov	r7, r0
   11d1e:	movs	r0, #1
   11d20:	blx	89ec <__printf_chk@plt+0x4>
   11d24:	cmp.w	r8, #0
   11d28:	beq.n	11d32 <fmt_print@@Base+0x1fe>
   11d2a:	movs	r0, #58	; 0x3a
   11d2c:	adds	r7, #1
   11d2e:	blx	8988 <putchar@plt+0x4>
   11d32:	ldr	r0, [r5, #0]
   11d34:	subs	r0, r0, r7
   11d36:	bl	117cc <btrfs_check_nodesize@@Base+0x80>
   11d3a:	mov	r1, r4
   11d3c:	mov	r0, r5
   11d3e:	bl	11958 <fmt_start_value@@Base>
   11d42:	ldr	r7, [r4, #4]
   11d44:	ldrb	r3, [r7, #0]
   11d46:	cmp	r3, #37	; 0x25
   11d48:	bne.w	11bca <fmt_print@@Base+0x96>
   11d4c:	ldr	r2, [r6, #0]
   11d4e:	mov	r1, r7
   11d50:	movs	r0, #1
   11d52:	blx	865c <__vprintf_chk@plt>
   11d56:	mov	r1, r4
   11d58:	mov	r0, r5
   11d5a:	bl	119ac <fmt_end_value@@Base>
   11d5e:	ldr	r2, [pc, #120]	; (11dd8 <fmt_print@@Base+0x2a4>)
   11d60:	ldr	r3, [pc, #28]	; (11d80 <fmt_print@@Base+0x24c>)
   11d62:	add	r2, pc
   11d64:	ldr	r3, [r2, r3]
   11d66:	ldr	r2, [r3, #0]
   11d68:	ldr	r3, [sp, #324]	; 0x144
   11d6a:	eors	r2, r3
   11d6c:	beq.n	11d72 <fmt_print@@Base+0x23e>
   11d6e:	blx	86b8 <__stack_chk_fail@plt>
   11d72:	add	sp, #332	; 0x14c
   11d74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   11d78:	add	sp, #12
   11d7a:	bx	lr
   11d7c:	adds	r2, #68	; 0x44
   11d7e:	movs	r5, r0
   11d80:	lsls	r4, r4, #8
   11d82:	movs	r0, r0
   11d84:	adds	r2, #44	; 0x2c
   11d86:	movs	r5, r0
   11d88:	str	r4, [sp, #844]	; 0x34c
   11d8a:	movs	r2, r0
   11d8c:	str	r3, [sp, #572]	; 0x23c
   11d8e:	movs	r2, r0
   11d90:	ldmia	r7, {r0, r1, r3, r4, r6, r7}
   11d92:	movs	r2, r0
   11d94:	str	r4, [sp, #156]	; 0x9c
   11d96:	movs	r2, r0
   11d98:	ldr	r3, [sp, #268]	; 0x10c
   11d9a:	movs	r2, r0
   11d9c:	b.n	11f4c <fmt_print@@Base+0x418>
   11d9e:	movs	r2, r0
   11da0:	str	r3, [sp, #912]	; 0x390
   11da2:	movs	r2, r0
   11da4:	str	r3, [sp, #776]	; 0x308
   11da6:	movs	r2, r0
   11da8:	b.n	11ecc <fmt_print@@Base+0x398>
   11daa:	movs	r2, r0
   11dac:	str	r2, [sp, #852]	; 0x354
   11dae:	movs	r2, r0
   11db0:	ldmia	r7!, {r0, r1, r3, r5}
   11db2:	movs	r2, r0
   11db4:	ldrb	r5, [r3, #28]
   11db6:	movs	r2, r0
   11db8:	ldrb	r7, [r2, #20]
   11dba:	movs	r2, r0
   11dbc:	str	r3, [sp, #468]	; 0x1d4
   11dbe:	movs	r2, r0
   11dc0:	b.n	11df8 <fmt_print@@Base+0x2c4>
   11dc2:	movs	r2, r0
   11dc4:	asrs	r5, r2, #10
   11dc6:	movs	r4, r0
   11dc8:	svc	244	; 0xf4
   11dca:	movs	r2, r0
   11dcc:	str	r3, [sp, #176]	; 0xb0
   11dce:	movs	r2, r0
   11dd0:	lsls	r0, r4, #8
   11dd2:	movs	r0, r0
   11dd4:	svc	186	; 0xba
   11dd6:	movs	r2, r0
   11dd8:	adds	r0, #38	; 0x26
   11dda:	movs	r5, r0
   11ddc:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   11de0:	mov	r6, r0
   11de2:	ldr	r5, [sp, #32]
   11de4:	mov	r8, r2
   11de6:	mov	r7, r3
   11de8:	mov	r0, r5
   11dea:	blx	8820 <malloc@plt+0x4>
   11dee:	mov	r4, r0
   11df0:	cbz	r0, 11e20 <fmt_print@@Base+0x2ec>
   11df2:	mov	r2, r5
   11df4:	movs	r1, #0
   11df6:	blx	8978 <memset@plt+0x4>
   11dfa:	mov	r2, r5
   11dfc:	mov	r1, r4
   11dfe:	mov	r0, r6
   11e00:	strd	r8, r7, [sp]
   11e04:	blx	89dc <pwrite64@plt>
   11e08:	cmp	r0, r5
   11e0a:	mov	r0, r4
   11e0c:	ite	eq
   11e0e:	moveq	r5, #0
   11e10:	mvnne.w	r5, #4
   11e14:	blx	85dc <free@plt+0x4>
   11e18:	mov	r0, r5
   11e1a:	add	sp, #8
   11e1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11e20:	mvn.w	r5, #11
   11e24:	b.n	11e18 <fmt_print@@Base+0x2e4>
   11e26:	ldr	r1, [pc, #292]	; (11f4c <fmt_print@@Base+0x418>)
   11e28:	ldr	r2, [pc, #292]	; (11f50 <fmt_print@@Base+0x41c>)
   11e2a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11e2e:	add	r1, pc
   11e30:	sub.w	sp, sp, #8192	; 0x2000
   11e34:	mov	r7, r0
   11e36:	sub	sp, #36	; 0x24
   11e38:	ldr	r2, [r1, r2]
   11e3a:	add	r5, sp, #32
   11e3c:	add.w	r3, sp, #8192	; 0x2000
   11e40:	ldr	r2, [r2, #0]
   11e42:	str	r2, [r3, #28]
   11e44:	mov.w	r2, #0
   11e48:	adds	r3, #28
   11e4a:	movs	r3, #0
   11e4c:	str.w	r3, [r5, #-12]
   11e50:	str.w	r3, [r5, #-8]
   11e54:	blx	895c <blkid_new_probe@plt>
   11e58:	sub.w	r8, r5, #12
   11e5c:	sub.w	r4, r5, #8
   11e60:	mov	r6, r0
   11e62:	cmp	r0, #0
   11e64:	beq.n	11f38 <fmt_print@@Base+0x404>
   11e66:	movs	r3, #0
   11e68:	movs	r2, #0
   11e6a:	mov	r1, r7
   11e6c:	strd	r2, r3, [sp]
   11e70:	blx	8690 <blkid_probe_set_device@plt>
   11e74:	mov	r3, r0
   11e76:	cmp	r0, #0
   11e78:	bne.n	11f32 <fmt_print@@Base+0x3fe>
   11e7a:	ldr	r1, [pc, #216]	; (11f54 <fmt_print@@Base+0x420>)
   11e7c:	mov	r2, r8
   11e7e:	mov	r0, r6
   11e80:	add	r1, pc
   11e82:	blx	8598 <blkid_probe_lookup_value@plt>
   11e86:	mov	r2, r0
   11e88:	cbz	r0, 11eac <fmt_print@@Base+0x378>
   11e8a:	movs	r4, #1
   11e8c:	mov	r0, r6
   11e8e:	blx	8a50 <blkid_free_probe@plt>
   11e92:	ldr	r1, [pc, #196]	; (11f58 <fmt_print@@Base+0x424>)
   11e94:	add.w	r3, sp, #8192	; 0x2000
   11e98:	ldr	r2, [pc, #180]	; (11f50 <fmt_print@@Base+0x41c>)
   11e9a:	adds	r3, #28
   11e9c:	add	r1, pc
   11e9e:	ldr	r2, [r1, r2]
   11ea0:	ldr	r1, [r2, #0]
   11ea2:	ldr	r2, [r3, #0]
   11ea4:	eors	r1, r2
   11ea6:	beq.n	11f3e <fmt_print@@Base+0x40a>
   11ea8:	blx	86b8 <__stack_chk_fail@plt>
   11eac:	ldr	r1, [pc, #172]	; (11f5c <fmt_print@@Base+0x428>)
   11eae:	mov	r3, r4
   11eb0:	mov	r0, r6
   11eb2:	add	r1, pc
   11eb4:	blx	8598 <blkid_probe_lookup_value@plt>
   11eb8:	mov	r1, r0
   11eba:	cmp	r0, #0
   11ebc:	bne.n	11e8a <fmt_print@@Base+0x356>
   11ebe:	ldr	r3, [r4, #0]
   11ec0:	cmp	r3, #0
   11ec2:	beq.n	11e8a <fmt_print@@Base+0x356>
   11ec4:	ldr.w	r0, [r8]
   11ec8:	cmp	r0, #0
   11eca:	beq.n	11e8a <fmt_print@@Base+0x356>
   11ecc:	movs	r2, #10
   11ece:	blx	877c <strtoll@plt>
   11ed2:	ldr	r3, [r4, #0]
   11ed4:	cmp.w	r3, #8192	; 0x2000
   11ed8:	itt	hi
   11eda:	movhi.w	r3, #8192	; 0x2000
   11ede:	strhi	r3, [r4, #0]
   11ee0:	subs	r4, r5, #4
   11ee2:	ldr.w	r2, [r5, #-8]
   11ee6:	mov.w	r3, #8192	; 0x2000
   11eea:	str	r2, [sp, #12]
   11eec:	mov	r9, r0
   11eee:	mov	r8, r1
   11ef0:	mov	r0, r4
   11ef2:	movs	r1, #0
   11ef4:	blx	8634 <__memset_chk@plt>
   11ef8:	mov	r1, r4
   11efa:	ldr	r2, [sp, #12]
   11efc:	mov	r0, r7
   11efe:	strd	r9, r8, [sp]
   11f02:	blx	89dc <pwrite64@plt>
   11f06:	subs	r4, r0, #0
   11f08:	bge.n	11f1e <fmt_print@@Base+0x3ea>
   11f0a:	ldr	r0, [pc, #84]	; (11f60 <fmt_print@@Base+0x42c>)
   11f0c:	add	r0, pc
   11f0e:	bl	17424 <__btrfs_error@@Base>
   11f12:	mov.w	r4, #4294967295	; 0xffffffff
   11f16:	mov	r0, r7
   11f18:	blx	855c <fsync@plt>
   11f1c:	b.n	11e8c <fmt_print@@Base+0x358>
   11f1e:	ldr.w	r2, [r5, #-8]
   11f22:	cmp	r4, r2
   11f24:	beq.n	11f16 <fmt_print@@Base+0x3e2>
   11f26:	ldr	r0, [pc, #60]	; (11f64 <fmt_print@@Base+0x430>)
   11f28:	mov	r1, r4
   11f2a:	add	r0, pc
   11f2c:	bl	17424 <__btrfs_error@@Base>
   11f30:	b.n	11f12 <fmt_print@@Base+0x3de>
   11f32:	mov.w	r4, #4294967295	; 0xffffffff
   11f36:	b.n	11e8c <fmt_print@@Base+0x358>
   11f38:	mov.w	r4, #4294967295	; 0xffffffff
   11f3c:	b.n	11e92 <fmt_print@@Base+0x35e>
   11f3e:	mov	r0, r4
   11f40:	add.w	sp, sp, #8192	; 0x2000
   11f44:	add	sp, #36	; 0x24
   11f46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   11f4a:	nop
   11f4c:	cmp	r7, #90	; 0x5a
   11f4e:	movs	r5, r0
   11f50:	lsls	r4, r4, #8
   11f52:	movs	r0, r0
   11f54:	str	r1, [sp, #872]	; 0x368
   11f56:	movs	r2, r0
   11f58:	cmp	r6, #236	; 0xec
   11f5a:	movs	r5, r0
   11f5c:	str	r1, [sp, #732]	; 0x2dc
   11f5e:	movs	r2, r0
   11f60:	str	r1, [sp, #404]	; 0x194
   11f62:	movs	r2, r0
   11f64:	str	r1, [sp, #428]	; 0x1ac
   11f66:	movs	r2, r0

00011f68 <btrfs_device_size@@Base>:
   11f68:	push	{r0, r1, r2, r3, r4, lr}
   11f6a:	ldr	r2, [pc, #92]	; (11fc8 <btrfs_device_size@@Base+0x60>)
   11f6c:	ldr	r3, [pc, #92]	; (11fcc <btrfs_device_size@@Base+0x64>)
   11f6e:	add	r2, pc
   11f70:	ldr	r3, [r2, r3]
   11f72:	ldr	r3, [r3, #0]
   11f74:	str	r3, [sp, #12]
   11f76:	mov.w	r3, #0
   11f7a:	ldr	r3, [r1, #16]
   11f7c:	and.w	r3, r3, #61440	; 0xf000
   11f80:	cmp.w	r3, #32768	; 0x8000
   11f84:	bne.n	11f9e <btrfs_device_size@@Base+0x36>
   11f86:	ldrd	r0, r1, [r1, #48]	; 0x30
   11f8a:	ldr	r2, [pc, #68]	; (11fd0 <btrfs_device_size@@Base+0x68>)
   11f8c:	ldr	r3, [pc, #60]	; (11fcc <btrfs_device_size@@Base+0x64>)
   11f8e:	add	r2, pc
   11f90:	ldr	r3, [r2, r3]
   11f92:	ldr	r2, [r3, #0]
   11f94:	ldr	r3, [sp, #12]
   11f96:	eors	r2, r3
   11f98:	beq.n	11fbc <btrfs_device_size@@Base+0x54>
   11f9a:	blx	86b8 <__stack_chk_fail@plt>
   11f9e:	cmp.w	r3, #24576	; 0x6000
   11fa2:	bne.n	11fb6 <btrfs_device_size@@Base+0x4e>
   11fa4:	ldr	r1, [pc, #28]	; (11fc4 <btrfs_device_size@@Base+0x5c>)
   11fa6:	mov	r2, sp
   11fa8:	blx	8764 <ioctl@plt>
   11fac:	cmp	r0, #0
   11fae:	blt.n	11fb6 <btrfs_device_size@@Base+0x4e>
   11fb0:	ldrd	r0, r1, [sp]
   11fb4:	b.n	11f8a <btrfs_device_size@@Base+0x22>
   11fb6:	movs	r0, #0
   11fb8:	movs	r1, #0
   11fba:	b.n	11f8a <btrfs_device_size@@Base+0x22>
   11fbc:	add	sp, #20
   11fbe:	ldr.w	pc, [sp], #4
   11fc2:	nop
   11fc4:	asrs	r2, r6, #9
   11fc6:	strh	r4, [r0, #0]
   11fc8:	cmp	r6, #26
   11fca:	movs	r5, r0
   11fcc:	lsls	r4, r4, #8
   11fce:	movs	r0, r0
   11fd0:	cmp	r5, #250	; 0xfa
   11fd2:	movs	r5, r0

00011fd4 <btrfs_prepare_device@@Base>:
   11fd4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fd8:	sub	sp, #180	; 0xb4
   11fda:	ldr	r3, [pc, #588]	; (12228 <btrfs_prepare_device@@Base+0x254>)
   11fdc:	mov	r7, r1
   11fde:	str	r2, [sp, #40]	; 0x28
   11fe0:	add	r1, sp, #48	; 0x30
   11fe2:	ldr	r2, [pc, #584]	; (1222c <btrfs_prepare_device@@Base+0x258>)
   11fe4:	mov	r6, r0
   11fe6:	ldrd	r8, r9, [sp, #216]	; 0xd8
   11fea:	add	r2, pc
   11fec:	ldr	r3, [r2, r3]
   11fee:	ldr	r3, [r3, #0]
   11ff0:	str	r3, [sp, #172]	; 0xac
   11ff2:	mov.w	r3, #0
   11ff6:	str	r1, [sp, #32]
   11ff8:	bl	3966c <__libc_csu_fini@@Base+0x28>
   11ffc:	ldr	r1, [sp, #32]
   11ffe:	cmp	r0, #0
   12000:	bge.n	12024 <btrfs_prepare_device@@Base+0x50>
   12002:	ldr	r0, [pc, #556]	; (12230 <btrfs_prepare_device@@Base+0x25c>)
   12004:	mov	r1, r7
   12006:	add	r0, pc
   12008:	bl	17424 <__btrfs_error@@Base>
   1200c:	movs	r0, #1
   1200e:	ldr	r2, [pc, #548]	; (12234 <btrfs_prepare_device@@Base+0x260>)
   12010:	ldr	r3, [pc, #532]	; (12228 <btrfs_prepare_device@@Base+0x254>)
   12012:	add	r2, pc
   12014:	ldr	r3, [r2, r3]
   12016:	ldr	r2, [r3, #0]
   12018:	ldr	r3, [sp, #172]	; 0xac
   1201a:	eors	r2, r3
   1201c:	beq.w	12222 <btrfs_prepare_device@@Base+0x24e>
   12020:	blx	86b8 <__stack_chk_fail@plt>
   12024:	mov	r0, r6
   12026:	bl	11f68 <btrfs_device_size@@Base>
   1202a:	mov	r4, r0
   1202c:	mov	r5, r1
   1202e:	orrs.w	r3, r4, r5
   12032:	bne.n	1203c <btrfs_prepare_device@@Base+0x68>
   12034:	ldr	r0, [pc, #512]	; (12238 <btrfs_prepare_device@@Base+0x264>)
   12036:	mov	r1, r7
   12038:	add	r0, pc
   1203a:	b.n	12008 <btrfs_prepare_device@@Base+0x34>
   1203c:	orrs.w	r3, r8, r9
   12040:	beq.n	1204e <btrfs_prepare_device@@Base+0x7a>
   12042:	cmp	r9, r1
   12044:	it	eq
   12046:	cmpeq	r8, r0
   12048:	itt	cc
   1204a:	movcc	r4, r8
   1204c:	movcc	r5, r9
   1204e:	ldr	r3, [sp, #224]	; 0xe0
   12050:	lsls	r1, r3, #30
   12052:	bpl.n	12108 <btrfs_prepare_device@@Base+0x134>
   12054:	movs	r2, #0
   12056:	movs	r3, #0
   12058:	movw	r1, #4727	; 0x1277
   1205c:	strd	r2, r3, [sp, #152]	; 0x98
   12060:	strd	r2, r3, [sp, #160]	; 0xa0
   12064:	mov	r0, r6
   12066:	add	r2, sp, #152	; 0x98
   12068:	blx	8764 <ioctl@plt>
   1206c:	cmp	r0, #0
   1206e:	bge.n	1207a <btrfs_prepare_device@@Base+0xa6>
   12070:	blx	8938 <__errno_location@plt>
   12074:	ldr	r3, [r0, #0]
   12076:	cmp	r3, #0
   12078:	bne.n	12108 <btrfs_prepare_device@@Base+0x134>
   1207a:	ldr	r3, [sp, #224]	; 0xe0
   1207c:	lsls	r2, r3, #29
   1207e:	bpl.n	1209a <btrfs_prepare_device@@Base+0xc6>
   12080:	mov.w	r2, #512	; 0x200
   12084:	mov	r1, r5
   12086:	mov	r0, r4
   12088:	bl	304a8 <pretty_size_mode@@Base>
   1208c:	ldr	r1, [pc, #428]	; (1223c <btrfs_prepare_device@@Base+0x268>)
   1208e:	mov	r2, r7
   12090:	add	r1, pc
   12092:	mov	r3, r0
   12094:	movs	r0, #1
   12096:	blx	89ec <__printf_chk@plt+0x4>
   1209a:	add	r2, sp, #152	; 0x98
   1209c:	mov	r8, r4
   1209e:	mov	r9, r5
   120a0:	movs	r3, #0
   120a2:	strd	r3, r3, [sp, #32]
   120a6:	ldr	r3, [sp, #32]
   120a8:	movs	r1, #0
   120aa:	cmp	r1, r9
   120ac:	mov.w	r0, #1073741824	; 0x40000000
   120b0:	it	eq
   120b2:	cmpeq	r0, r8
   120b4:	movw	r1, #4727	; 0x1277
   120b8:	str	r3, [sp, #152]	; 0x98
   120ba:	mov	r0, r6
   120bc:	ldr	r3, [sp, #36]	; 0x24
   120be:	mov	fp, r8
   120c0:	mov	sl, r9
   120c2:	itt	cc
   120c4:	movcc.w	fp, #1073741824	; 0x40000000
   120c8:	movcc.w	sl, #0
   120cc:	str	r2, [sp, #44]	; 0x2c
   120ce:	strd	r3, fp, [sp, #156]	; 0x9c
   120d2:	str.w	sl, [sp, #164]	; 0xa4
   120d6:	blx	8764 <ioctl@plt>
   120da:	ldr	r2, [sp, #44]	; 0x2c
   120dc:	cmp	r0, #0
   120de:	bge.n	120ea <btrfs_prepare_device@@Base+0x116>
   120e0:	blx	8938 <__errno_location@plt>
   120e4:	ldr	r2, [sp, #44]	; 0x2c
   120e6:	ldr	r3, [r0, #0]
   120e8:	cbnz	r3, 12108 <btrfs_prepare_device@@Base+0x134>
   120ea:	ldr	r3, [sp, #32]
   120ec:	subs.w	r8, r8, fp
   120f0:	sbc.w	r9, r9, sl
   120f4:	adds.w	r3, r3, fp
   120f8:	str	r3, [sp, #32]
   120fa:	ldr	r3, [sp, #36]	; 0x24
   120fc:	adc.w	r3, r3, sl
   12100:	str	r3, [sp, #36]	; 0x24
   12102:	orrs.w	r3, r8, r9
   12106:	bne.n	120a6 <btrfs_prepare_device@@Base+0xd2>
   12108:	movs	r1, #0
   1210a:	cmp	r1, r5
   1210c:	mov.w	r0, #2097152	; 0x200000
   12110:	it	eq
   12112:	cmpeq	r0, r4
   12114:	mov	r3, r4
   12116:	mov.w	r2, #0
   1211a:	it	cc
   1211c:	movcc	r3, r0
   1211e:	mov	r0, r6
   12120:	str	r3, [sp, #0]
   12122:	movs	r3, #0
   12124:	bl	11ddc <fmt_print@@Base+0x2a8>
   12128:	mov.w	r8, #0
   1212c:	mov.w	sl, #12
   12130:	mov.w	r9, #16384	; 0x4000
   12134:	mov	fp, r0
   12136:	cmp.w	fp, #0
   1213a:	bne.n	12176 <btrfs_prepare_device@@Base+0x1a2>
   1213c:	cmp.w	r8, #3
   12140:	bne.n	1218e <btrfs_prepare_device@@Base+0x1ba>
   12142:	ldr	r3, [sp, #224]	; 0xe0
   12144:	lsls	r3, r3, #31
   12146:	bpl.n	12206 <btrfs_prepare_device@@Base+0x232>
   12148:	subs.w	r3, r4, #2097152	; 0x200000
   1214c:	str	r3, [sp, #16]
   1214e:	adc.w	r3, r5, #4294967295	; 0xffffffff
   12152:	str	r3, [sp, #20]
   12154:	ldrd	r2, r3, [sp, #16]
   12158:	mov	r0, r6
   1215a:	cmp	r5, r3
   1215c:	it	eq
   1215e:	cmpeq	r4, r2
   12160:	it	cc
   12162:	strdcc	r4, r5, [sp, #16]
   12166:	ldr	r3, [sp, #16]
   12168:	subs	r3, r4, r3
   1216a:	str	r3, [sp, #0]
   1216c:	ldrd	r2, r3, [sp, #16]
   12170:	bl	11ddc <fmt_print@@Base+0x2a8>
   12174:	mov	fp, r0
   12176:	cmp.w	fp, #0
   1217a:	bge.n	12206 <btrfs_prepare_device@@Base+0x232>
   1217c:	blx	8938 <__errno_location@plt>
   12180:	rsb	r3, fp, #0
   12184:	mov	r1, r7
   12186:	str	r3, [r0, #0]
   12188:	ldr	r0, [pc, #180]	; (12240 <btrfs_prepare_device@@Base+0x26c>)
   1218a:	add	r0, pc
   1218c:	b.n	12008 <btrfs_prepare_device@@Base+0x34>
   1218e:	cmp.w	r8, #0
   12192:	beq.n	121fa <btrfs_prepare_device@@Base+0x226>
   12194:	mul.w	r3, sl, r8
   12198:	sub.w	r1, r3, #32
   1219c:	rsb	r2, r3, #32
   121a0:	lsl.w	r1, r9, r1
   121a4:	lsr.w	r2, r9, r2
   121a8:	orrs	r1, r2
   121aa:	lsl.w	r3, r9, r3
   121ae:	str	r1, [sp, #12]
   121b0:	str	r3, [sp, #8]
   121b2:	ldrd	r0, r1, [sp, #8]
   121b6:	mov	r2, r4
   121b8:	mov	r3, r5
   121ba:	add.w	r8, r8, #1
   121be:	cmp	r1, r5
   121c0:	ldr	r1, [sp, #8]
   121c2:	it	eq
   121c4:	cmpeq	r0, r4
   121c6:	it	cc
   121c8:	ldrdcc	r2, r3, [sp, #8]
   121cc:	adds.w	r1, r1, #4096	; 0x1000
   121d0:	str	r1, [sp, #24]
   121d2:	ldr	r1, [sp, #12]
   121d4:	adc.w	r1, r1, #0
   121d8:	str	r1, [sp, #28]
   121da:	ldrd	r0, r1, [sp, #24]
   121de:	cmp	r5, r1
   121e0:	it	eq
   121e2:	cmpeq	r4, r0
   121e4:	it	cc
   121e6:	strdcc	r4, r5, [sp, #24]
   121ea:	ldr	r1, [sp, #24]
   121ec:	mov	r0, r6
   121ee:	subs	r1, r1, r2
   121f0:	str	r1, [sp, #0]
   121f2:	bl	11ddc <fmt_print@@Base+0x2a8>
   121f6:	mov	fp, r0
   121f8:	b.n	12136 <btrfs_prepare_device@@Base+0x162>
   121fa:	mov.w	r2, #65536	; 0x10000
   121fe:	movs	r3, #0
   12200:	strd	r2, r3, [sp, #8]
   12204:	b.n	121b2 <btrfs_prepare_device@@Base+0x1de>
   12206:	mov	r0, r6
   12208:	bl	11e26 <fmt_print@@Base+0x2f2>
   1220c:	cmp	r0, #0
   1220e:	bge.n	12218 <btrfs_prepare_device@@Base+0x244>
   12210:	ldr	r0, [pc, #48]	; (12244 <btrfs_prepare_device@@Base+0x270>)
   12212:	mov	r1, r7
   12214:	add	r0, pc
   12216:	b.n	12008 <btrfs_prepare_device@@Base+0x34>
   12218:	ldr	r3, [sp, #40]	; 0x28
   1221a:	movs	r0, #0
   1221c:	strd	r4, r5, [r3]
   12220:	b.n	1200e <btrfs_prepare_device@@Base+0x3a>
   12222:	add	sp, #180	; 0xb4
   12224:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12228:	lsls	r4, r4, #8
   1222a:	movs	r0, r0
   1222c:	cmp	r5, #158	; 0x9e
   1222e:	movs	r5, r0
   12230:	str	r0, [sp, #768]	; 0x300
   12232:	movs	r2, r0
   12234:	cmp	r5, #118	; 0x76
   12236:	movs	r5, r0
   12238:	str	r0, [sp, #656]	; 0x290
   1223a:	movs	r2, r0
   1223c:	str	r0, [sp, #428]	; 0x1ac
   1223e:	movs	r2, r0
   12240:	ldrh	r2, [r3, #60]	; 0x3c
   12242:	movs	r2, r0
   12244:	ldrh	r7, [r5, #56]	; 0x38
   12246:	movs	r2, r0

00012248 <disk_size@@Base>:
   12248:	ldr	r2, [pc, #76]	; (12298 <disk_size@@Base+0x50>)
   1224a:	ldr	r3, [pc, #80]	; (1229c <disk_size@@Base+0x54>)
   1224c:	add	r2, pc
   1224e:	push	{r4, lr}
   12250:	sub	sp, #96	; 0x60
   12252:	ldr	r3, [r2, r3]
   12254:	mov	r1, sp
   12256:	ldr	r3, [r3, #0]
   12258:	str	r3, [sp, #92]	; 0x5c
   1225a:	mov.w	r3, #0
   1225e:	blx	8a74 <statfs64@plt>
   12262:	cmp	r0, #0
   12264:	blt.n	1228e <disk_size@@Base+0x46>
   12266:	ldr	r2, [sp, #4]
   12268:	ldrd	r4, r3, [sp, #8]
   1226c:	asrs	r1, r2, #31
   1226e:	muls	r3, r2
   12270:	mla	r3, r4, r1, r3
   12274:	umull	r0, r1, r4, r2
   12278:	add	r1, r3
   1227a:	ldr	r2, [pc, #36]	; (122a0 <disk_size@@Base+0x58>)
   1227c:	ldr	r3, [pc, #28]	; (1229c <disk_size@@Base+0x54>)
   1227e:	add	r2, pc
   12280:	ldr	r3, [r2, r3]
   12282:	ldr	r2, [r3, #0]
   12284:	ldr	r3, [sp, #92]	; 0x5c
   12286:	eors	r2, r3
   12288:	beq.n	12294 <disk_size@@Base+0x4c>
   1228a:	blx	86b8 <__stack_chk_fail@plt>
   1228e:	movs	r0, #0
   12290:	movs	r1, #0
   12292:	b.n	1227a <disk_size@@Base+0x32>
   12294:	add	sp, #96	; 0x60
   12296:	pop	{r4, pc}
   12298:	cmp	r3, #60	; 0x3c
   1229a:	movs	r5, r0
   1229c:	lsls	r4, r4, #8
   1229e:	movs	r0, r0
   122a0:	cmp	r3, #10
   122a2:	movs	r5, r0

000122a4 <get_partition_size@@Base>:
   122a4:	push	{r0, r1, r2, r3, r4, lr}
   122a6:	movs	r1, #0
   122a8:	ldr	r2, [pc, #80]	; (122fc <get_partition_size@@Base+0x58>)
   122aa:	ldr	r3, [pc, #84]	; (12300 <get_partition_size@@Base+0x5c>)
   122ac:	add	r2, pc
   122ae:	ldr	r3, [r2, r3]
   122b0:	ldr	r3, [r3, #0]
   122b2:	str	r3, [sp, #12]
   122b4:	mov.w	r3, #0
   122b8:	blx	87f4 <open64@plt>
   122bc:	subs	r4, r0, #0
   122be:	blt.n	122d2 <get_partition_size@@Base+0x2e>
   122c0:	ldr	r1, [pc, #52]	; (122f8 <get_partition_size@@Base+0x54>)
   122c2:	mov	r2, sp
   122c4:	blx	8764 <ioctl@plt>
   122c8:	cmp	r0, #0
   122ca:	mov	r0, r4
   122cc:	bge.n	122d8 <get_partition_size@@Base+0x34>
   122ce:	blx	8b4c <close@plt>
   122d2:	movs	r0, #0
   122d4:	movs	r1, #0
   122d6:	b.n	122e0 <get_partition_size@@Base+0x3c>
   122d8:	blx	8b4c <close@plt>
   122dc:	ldrd	r0, r1, [sp]
   122e0:	ldr	r2, [pc, #32]	; (12304 <get_partition_size@@Base+0x60>)
   122e2:	ldr	r3, [pc, #28]	; (12300 <get_partition_size@@Base+0x5c>)
   122e4:	add	r2, pc
   122e6:	ldr	r3, [r2, r3]
   122e8:	ldr	r2, [r3, #0]
   122ea:	ldr	r3, [sp, #12]
   122ec:	eors	r2, r3
   122ee:	beq.n	122f4 <get_partition_size@@Base+0x50>
   122f0:	blx	86b8 <__stack_chk_fail@plt>
   122f4:	add	sp, #16
   122f6:	pop	{r4, pc}
   122f8:	asrs	r2, r6, #9
   122fa:	strh	r4, [r0, #0]
   122fc:	cmp	r2, #220	; 0xdc
   122fe:	movs	r5, r0
   12300:	lsls	r4, r4, #8
   12302:	movs	r0, r0
   12304:	cmp	r2, #164	; 0xa4
   12306:	movs	r5, r0
   12308:	ldr	r0, [pc, #20]	; (12320 <get_partition_size@@Base+0x7c>)
   1230a:	push	{r3, lr}
   1230c:	add	r0, pc
   1230e:	blx	8804 <puts@plt+0x4>
   12312:	ldr	r0, [pc, #16]	; (12324 <get_partition_size@@Base+0x80>)
   12314:	add	r0, pc
   12316:	blx	8804 <puts@plt+0x4>
   1231a:	movs	r0, #1
   1231c:	blx	88e4 <exit@plt>
   12320:	ldrh	r5, [r2, #50]	; 0x32
   12322:	movs	r2, r0
   12324:	ldrh	r5, [r6, #50]	; 0x32
   12326:	movs	r2, r0
   12328:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1232c:	sub.w	sp, sp, #8192	; 0x2000
   12330:	sub	sp, #36	; 0x24
   12332:	mov	r5, r1
   12334:	add.w	r3, sp, #8256	; 0x2040
   12338:	ldr	r1, [pc, #476]	; (12518 <get_partition_size@@Base+0x274>)
   1233a:	mov	r4, r2
   1233c:	ldr	r2, [pc, #476]	; (1251c <get_partition_size@@Base+0x278>)
   1233e:	ldrd	r8, r9, [r3, #8]
   12342:	add	r1, pc
   12344:	adds	r3, #8
   12346:	ldr	r7, [pc, #472]	; (12520 <get_partition_size@@Base+0x27c>)
   12348:	cmp.w	r9, #0
   1234c:	add.w	r3, sp, #8192	; 0x2000
   12350:	ldr	r2, [r1, r2]
   12352:	it	eq
   12354:	cmpeq.w	r8, #5
   12358:	add	r7, pc
   1235a:	add.w	r3, r3, #28
   1235e:	mov	r6, r0
   12360:	ldr	r2, [r2, #0]
   12362:	str	r2, [r3, #0]
   12364:	mov.w	r2, #0
   12368:	bne.n	1239e <get_partition_size@@Base+0xfa>
   1236a:	ldr	r3, [r4, #0]
   1236c:	cbnz	r3, 1238e <get_partition_size@@Base+0xea>
   1236e:	mvn.w	fp, #74	; 0x4a
   12372:	ldr	r1, [pc, #432]	; (12524 <get_partition_size@@Base+0x280>)
   12374:	add.w	r3, sp, #8192	; 0x2000
   12378:	ldr	r2, [pc, #416]	; (1251c <get_partition_size@@Base+0x278>)
   1237a:	adds	r3, #28
   1237c:	add	r1, pc
   1237e:	ldr	r2, [r1, r2]
   12380:	ldr	r1, [r2, #0]
   12382:	ldr	r2, [r3, #0]
   12384:	eors	r1, r2
   12386:	beq.w	12502 <get_partition_size@@Base+0x25e>
   1238a:	blx	86b8 <__stack_chk_fail@plt>
   1238e:	mov.w	fp, #0
   12392:	strb.w	fp, [r5]
   12396:	ldr	r2, [r4, #0]
   12398:	subs	r2, #1
   1239a:	str	r2, [r4, #0]
   1239c:	b.n	12372 <get_partition_size@@Base+0xce>
   1239e:	add	r3, sp, #32
   123a0:	mov.w	r2, #4096	; 0x1000
   123a4:	sub.w	sl, r3, #8
   123a8:	movs	r1, #0
   123aa:	str	r3, [sp, #16]
   123ac:	mov	r0, sl
   123ae:	blx	8978 <memset@plt+0x4>
   123b2:	ldr	r1, [sp, #16]
   123b4:	movs	r2, #1
   123b6:	movs	r3, #0
   123b8:	mov	r0, r6
   123ba:	strd	r8, r9, [sl, #8]
   123be:	strd	r2, r3, [r1, #-8]
   123c2:	mov.w	r2, #4294967295	; 0xffffffff
   123c6:	movs	r3, #144	; 0x90
   123c8:	ldr	r1, [pc, #324]	; (12510 <get_partition_size@@Base+0x26c>)
   123ca:	strd	r3, r3, [sl, #56]	; 0x38
   123ce:	mov.w	r3, #4294967295	; 0xffffffff
   123d2:	strd	r2, r3, [sl, #32]
   123d6:	strd	r2, r3, [sl, #48]	; 0x30
   123da:	mov	r2, sl
   123dc:	movs	r3, #1
   123de:	strd	r8, r9, [sl, #16]
   123e2:	str.w	r3, [sl, #64]	; 0x40
   123e6:	blx	8764 <ioctl@plt>
   123ea:	movs	r3, #1
   123ec:	subs.w	fp, r0, #0
   123f0:	bge.n	1240c <get_partition_size@@Base+0x168>
   123f2:	ldr	r2, [pc, #308]	; (12528 <get_partition_size@@Base+0x284>)
   123f4:	mov	r1, r3
   123f6:	ldr	r0, [r7, r2]
   123f8:	ldr	r2, [pc, #304]	; (1252c <get_partition_size@@Base+0x288>)
   123fa:	str.w	fp, [sp, #8]
   123fe:	strd	r8, r9, [sp]
   12402:	add	r2, pc
   12404:	ldr	r0, [r0, #0]
   12406:	blx	8a14 <__fprintf_chk@plt+0x4>
   1240a:	b.n	12372 <get_partition_size@@Base+0xce>
   1240c:	ldr.w	r2, [sl, #64]	; 0x40
   12410:	cbnz	r2, 1242c <get_partition_size@@Base+0x188>
   12412:	ldr	r2, [pc, #276]	; (12528 <get_partition_size@@Base+0x284>)
   12414:	mov	r1, r3
   12416:	mvn.w	fp, #1
   1241a:	ldr	r0, [r7, r2]
   1241c:	ldr	r2, [pc, #272]	; (12530 <get_partition_size@@Base+0x28c>)
   1241e:	strd	r8, r9, [sp]
   12422:	add	r2, pc
   12424:	ldr	r0, [r0, #0]
   12426:	blx	8a14 <__fprintf_chk@plt+0x4>
   1242a:	b.n	12372 <get_partition_size@@Base+0xce>
   1242c:	ldrd	r2, r3, [sl, #120]	; 0x78
   12430:	cmp	r3, #0
   12432:	it	eq
   12434:	cmpeq	r2, #5
   12436:	beq.n	12462 <get_partition_size@@Base+0x1be>
   12438:	strd	r2, r3, [sp]
   1243c:	mov	r1, r5
   1243e:	mov	r2, r4
   12440:	mov	r0, r6
   12442:	bl	12328 <get_partition_size@@Base+0x84>
   12446:	mov	fp, r0
   12448:	cmp	r0, #0
   1244a:	bne.n	12372 <get_partition_size@@Base+0xce>
   1244c:	ldr	r3, [r4, #0]
   1244e:	cmp	r3, #0
   12450:	beq.n	1236e <get_partition_size@@Base+0xca>
   12452:	ldr	r1, [pc, #224]	; (12534 <get_partition_size@@Base+0x290>)
   12454:	mov	r0, r5
   12456:	add	r1, pc
   12458:	blx	8758 <strcat@plt+0x4>
   1245c:	ldr	r3, [r4, #0]
   1245e:	subs	r3, #1
   12460:	str	r3, [r4, #0]
   12462:	ldrd	r8, r9, [sl, #136]	; 0x88
   12466:	cmp.w	r9, #0
   1246a:	it	eq
   1246c:	cmpeq.w	r8, #256	; 0x100
   12470:	beq.n	124de <get_partition_size@@Base+0x23a>
   12472:	add.w	fp, sp, #4128	; 0x1020
   12476:	mov.w	r2, #4096	; 0x1000
   1247a:	sub.w	r3, fp, #8
   1247e:	movs	r1, #0
   12480:	mov	r0, r3
   12482:	blx	8978 <memset@plt+0x4>
   12486:	mov	r3, r0
   12488:	ldrd	r0, r1, [sl, #120]	; 0x78
   1248c:	mov	r2, r3
   1248e:	strd	r8, r9, [r3, #8]
   12492:	strd	r0, r1, [fp, #-8]
   12496:	mov	r0, r6
   12498:	ldr	r1, [pc, #120]	; (12514 <get_partition_size@@Base+0x270>)
   1249a:	blx	8764 <ioctl@plt>
   1249e:	subs.w	fp, r0, #0
   124a2:	bge.n	124b8 <get_partition_size@@Base+0x214>
   124a4:	ldr	r3, [pc, #128]	; (12528 <get_partition_size@@Base+0x284>)
   124a6:	movs	r1, #1
   124a8:	ldr	r2, [pc, #140]	; (12538 <get_partition_size@@Base+0x294>)
   124aa:	ldr	r0, [r7, r3]
   124ac:	add	r2, pc
   124ae:	mov	r3, fp
   124b0:	ldr	r0, [r0, #0]
   124b2:	blx	8a14 <__fprintf_chk@plt+0x4>
   124b6:	b.n	12372 <get_partition_size@@Base+0xce>
   124b8:	add.w	r1, sp, #4128	; 0x1020
   124bc:	adds	r1, #8
   124be:	str	r1, [sp, #20]
   124c0:	mov	r0, r1
   124c2:	blx	88f0 <strlen@plt>
   124c6:	ldr	r3, [r4, #0]
   124c8:	cmp	r0, r3
   124ca:	mov	r6, r0
   124cc:	bhi.w	1236e <get_partition_size@@Base+0xca>
   124d0:	ldr	r1, [sp, #20]
   124d2:	mov	r0, r5
   124d4:	blx	8758 <strcat@plt+0x4>
   124d8:	ldr	r0, [r4, #0]
   124da:	subs	r0, r0, r6
   124dc:	str	r0, [r4, #0]
   124de:	ldrh.w	r6, [sl, #152]	; 0x98
   124e2:	ldr	r3, [r4, #0]
   124e4:	cmp	r3, r6
   124e6:	bcc.w	1236e <get_partition_size@@Base+0xca>
   124ea:	ldr	r1, [sp, #16]
   124ec:	mov	r2, r6
   124ee:	mov	r0, r5
   124f0:	mov.w	fp, #0
   124f4:	adds	r1, #146	; 0x92
   124f6:	blx	8af0 <strncat@plt>
   124fa:	ldr	r3, [r4, #0]
   124fc:	subs	r3, r3, r6
   124fe:	str	r3, [r4, #0]
   12500:	b.n	12372 <get_partition_size@@Base+0xce>
   12502:	mov	r0, fp
   12504:	add.w	sp, sp, #8192	; 0x2000
   12508:	add	sp, #36	; 0x24
   1250a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1250e:	nop
   12510:	str	r4, [sp, #68]	; 0x44
   12512:	beq.n	12516 <get_partition_size@@Base+0x272>
   12514:	str	r4, [sp, #72]	; 0x48
   12516:	beq.n	1251a <get_partition_size@@Base+0x276>
   12518:	cmp	r2, #70	; 0x46
   1251a:	movs	r5, r0
   1251c:	lsls	r4, r4, #8
   1251e:	movs	r0, r0
   12520:	cmp	r2, #48	; 0x30
   12522:	movs	r5, r0
   12524:	cmp	r2, #12
   12526:	movs	r5, r0
   12528:	lsls	r4, r6, #8
   1252a:	movs	r0, r0
   1252c:	ldrh	r1, [r3, #52]	; 0x34
   1252e:	movs	r2, r0
   12530:	ldrh	r1, [r7, #52]	; 0x34
   12532:	movs	r2, r0
   12534:	ldrh	r7, [r4, #52]	; 0x34
   12536:	movs	r2, r0
   12538:	ldrh	r3, [r2, #50]	; 0x32
   1253a:	movs	r2, r0

0001253c <btrfs_subvolid_resolve@@Base>:
   1253c:	push	{r0, r1, r2, r3, r4, lr}
   1253e:	cbz	r2, 1255c <btrfs_subvolid_resolve@@Base+0x20>
   12540:	subs	r2, #1
   12542:	movs	r4, #0
   12544:	str	r2, [sp, #12]
   12546:	strb	r4, [r1, #0]
   12548:	strb	r4, [r1, r2]
   1254a:	ldrd	r2, r3, [sp, #24]
   1254e:	strd	r2, r3, [sp]
   12552:	add	r2, sp, #12
   12554:	bl	12328 <get_partition_size@@Base+0x84>
   12558:	add	sp, #16
   1255a:	pop	{r4, pc}
   1255c:	mvn.w	r0, #74	; 0x4a
   12560:	b.n	12558 <btrfs_subvolid_resolve@@Base+0x1c>

00012562 <subvol_uuid_search_add@@Base>:
   12562:	add.w	ip, r0, #8
   12566:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1256a:	mov	r5, r0
   1256c:	mov	r4, r1
   1256e:	mov	r0, ip
   12570:	movs	r6, #0
   12572:	ldr	r1, [r0, #0]
   12574:	cmp	r1, #0
   12576:	bne.n	12626 <subvol_uuid_search_add@@Base+0xc4>
   12578:	strd	r6, r1, [r4]
   1257c:	str	r1, [r4, #8]
   1257e:	mov	r1, ip
   12580:	str	r4, [r0, #0]
   12582:	mov	r0, r4
   12584:	bl	131d2 <rb_insert_color@@Base>
   12588:	add.w	r7, r5, #20
   1258c:	movs	r2, #0
   1258e:	mov	r3, r7
   12590:	ldr	r6, [r3, #0]
   12592:	cmp	r6, #0
   12594:	bne.n	1264e <subvol_uuid_search_add@@Base+0xec>
   12596:	add.w	r0, r4, #36	; 0x24
   1259a:	strd	r2, r6, [r4, #36]	; 0x24
   1259e:	str	r6, [r4, #44]	; 0x2c
   125a0:	mov	r1, r7
   125a2:	str	r0, [r3, #0]
   125a4:	bl	131d2 <rb_insert_color@@Base>
   125a8:	add.w	r8, r4, #56	; 0x38
   125ac:	add.w	r2, r4, #55	; 0x37
   125b0:	add.w	r1, r4, #71	; 0x47
   125b4:	movs	r3, #0
   125b6:	ldrb.w	r0, [r2, #1]!
   125ba:	cbnz	r0, 125be <subvol_uuid_search_add@@Base+0x5c>
   125bc:	adds	r3, #1
   125be:	cmp	r2, r1
   125c0:	bne.n	125b6 <subvol_uuid_search_add@@Base+0x54>
   125c2:	cmp	r3, #16
   125c4:	beq.n	125e6 <subvol_uuid_search_add@@Base+0x84>
   125c6:	add.w	r7, r5, #12
   125ca:	movs	r2, #0
   125cc:	mov	r3, r7
   125ce:	ldr	r6, [r3, #0]
   125d0:	cmp	r6, #0
   125d2:	bne.n	12672 <subvol_uuid_search_add@@Base+0x110>
   125d4:	add.w	r0, r4, #12
   125d8:	strd	r2, r6, [r4, #12]
   125dc:	str	r6, [r4, #20]
   125de:	mov	r1, r7
   125e0:	str	r0, [r3, #0]
   125e2:	bl	131d2 <rb_insert_color@@Base>
   125e6:	add.w	r7, r4, #88	; 0x58
   125ea:	add.w	r2, r4, #87	; 0x57
   125ee:	add.w	r1, r4, #103	; 0x67
   125f2:	movs	r3, #0
   125f4:	ldrb.w	r0, [r2, #1]!
   125f8:	cbnz	r0, 125fc <subvol_uuid_search_add@@Base+0x9a>
   125fa:	adds	r3, #1
   125fc:	cmp	r2, r1
   125fe:	bne.n	125f4 <subvol_uuid_search_add@@Base+0x92>
   12600:	cmp	r3, #16
   12602:	beq.n	126c0 <subvol_uuid_search_add@@Base+0x15e>
   12604:	adds	r5, #16
   12606:	movs	r2, #0
   12608:	mov	r3, r5
   1260a:	ldr	r6, [r3, #0]
   1260c:	cmp	r6, #0
   1260e:	bne.n	12698 <subvol_uuid_search_add@@Base+0x136>
   12610:	add.w	r0, r4, #24
   12614:	strd	r2, r6, [r4, #24]
   12618:	str	r6, [r4, #32]
   1261a:	mov	r1, r5
   1261c:	str	r0, [r3, #0]
   1261e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   12622:	b.w	131d2 <rb_insert_color@@Base>
   12626:	ldrd	r0, r7, [r4, #48]	; 0x30
   1262a:	ldr	r6, [r1, #48]	; 0x30
   1262c:	subs	r2, r6, r0
   1262e:	ldr	r0, [r1, #52]	; 0x34
   12630:	sbc.w	r3, r0, r7
   12634:	cmp	r2, #0
   12636:	sbcs.w	r0, r3, #0
   1263a:	bge.n	12644 <subvol_uuid_search_add@@Base+0xe2>
   1263c:	add.w	r0, r1, #8
   12640:	mov	r6, r1
   12642:	b.n	12572 <subvol_uuid_search_add@@Base+0x10>
   12644:	orrs.w	r0, r2, r3
   12648:	beq.n	12588 <subvol_uuid_search_add@@Base+0x26>
   1264a:	adds	r0, r1, #4
   1264c:	b.n	12640 <subvol_uuid_search_add@@Base+0xde>
   1264e:	ldr.w	r1, [r4, #136]	; 0x88
   12652:	ldr	r0, [r6, #100]	; 0x64
   12654:	blx	8568 <strcmp@plt>
   12658:	cmp	r0, #0
   1265a:	mov.w	r3, r0, asr #31
   1265e:	mov	r2, r0
   12660:	bge.n	1266a <subvol_uuid_search_add@@Base+0x108>
   12662:	add.w	r3, r6, #8
   12666:	mov	r2, r6
   12668:	b.n	12590 <subvol_uuid_search_add@@Base+0x2e>
   1266a:	orrs	r3, r2
   1266c:	beq.n	125a8 <subvol_uuid_search_add@@Base+0x46>
   1266e:	adds	r3, r6, #4
   12670:	b.n	12666 <subvol_uuid_search_add@@Base+0x104>
   12672:	movs	r2, #16
   12674:	add.w	r0, r6, #44	; 0x2c
   12678:	mov	r1, r8
   1267a:	blx	8650 <memcmp@plt+0x4>
   1267e:	cmp	r0, #0
   12680:	mov.w	r3, r0, asr #31
   12684:	mov	r2, r0
   12686:	bge.n	12690 <subvol_uuid_search_add@@Base+0x12e>
   12688:	add.w	r3, r6, #8
   1268c:	mov	r2, r6
   1268e:	b.n	125ce <subvol_uuid_search_add@@Base+0x6c>
   12690:	orrs	r3, r2
   12692:	beq.n	125e6 <subvol_uuid_search_add@@Base+0x84>
   12694:	adds	r3, r6, #4
   12696:	b.n	1268c <subvol_uuid_search_add@@Base+0x12a>
   12698:	add.w	r0, r6, #64	; 0x40
   1269c:	movs	r2, #16
   1269e:	mov	r1, r7
   126a0:	blx	8650 <memcmp@plt+0x4>
   126a4:	asrs	r3, r0, #31
   126a6:	cbnz	r0, 126c4 <subvol_uuid_search_add@@Base+0x162>
   126a8:	ldrd	r2, r3, [r6, #96]	; 0x60
   126ac:	ldrd	r0, r1, [r4, #120]	; 0x78
   126b0:	cmp	r3, r1
   126b2:	it	eq
   126b4:	cmpeq	r2, r0
   126b6:	bcc.n	126cc <subvol_uuid_search_add@@Base+0x16a>
   126b8:	cmp	r1, r3
   126ba:	it	eq
   126bc:	cmpeq	r0, r2
   126be:	bcc.n	126d4 <subvol_uuid_search_add@@Base+0x172>
   126c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   126c4:	cmp	r0, #0
   126c6:	sbcs.w	r3, r3, #0
   126ca:	bge.n	126d4 <subvol_uuid_search_add@@Base+0x172>
   126cc:	add.w	r3, r6, #8
   126d0:	mov	r2, r6
   126d2:	b.n	1260a <subvol_uuid_search_add@@Base+0xa8>
   126d4:	adds	r3, r6, #4
   126d6:	b.n	126d0 <subvol_uuid_search_add@@Base+0x16e>

000126d8 <subvol_uuid_search2@@Base>:
   126d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126dc:	mov	r4, r0
   126de:	vpush	{d8-d9}
   126e2:	ldr.w	ip, [pc, #1180]	; 12b80 <subvol_uuid_search2@@Base+0x4a8>
   126e6:	ldr.w	r0, [pc, #1180]	; 12b84 <subvol_uuid_search2@@Base+0x4ac>
   126ea:	add	ip, pc
   126ec:	ldr.w	r5, [pc, #1176]	; 12b88 <subvol_uuid_search2@@Base+0x4b0>
   126f0:	sub.w	sp, sp, #4576	; 0x11e0
   126f4:	sub	sp, #20
   126f6:	add	r5, pc
   126f8:	add.w	r1, sp, #4640	; 0x1220
   126fc:	add.w	sl, sp, #48	; 0x30
   12700:	adds	r1, #8
   12702:	strd	r2, r3, [sl, #-8]
   12706:	ldr.w	r8, [r1]
   1270a:	add.w	r1, sp, #4640	; 0x1220
   1270e:	adds	r1, #24
   12710:	ldr.w	r0, [ip, r0]
   12714:	vldr	s16, [r1]
   12718:	add.w	r1, sp, #4640	; 0x1220
   1271c:	adds	r1, #28
   1271e:	ldr.w	fp, [r1]
   12722:	add.w	r1, sp, #4576	; 0x11e0
   12726:	ldr	r0, [r0, #0]
   12728:	str	r0, [r1, #12]
   1272a:	mov.w	r0, #0
   1272e:	ldr	r0, [r4, #4]
   12730:	adds	r1, #12
   12732:	cmp	r0, #0
   12734:	bne.w	12866 <subvol_uuid_search2@@Base+0x18e>
   12738:	cmp.w	fp, #2
   1273c:	mov	r9, r2
   1273e:	str	r3, [sp, #16]
   12740:	bne.n	1274a <subvol_uuid_search2@@Base+0x72>
   12742:	ldr	r4, [r4, #16]
   12744:	cbnz	r4, 1276a <subvol_uuid_search2@@Base+0x92>
   12746:	mov	sl, r4
   12748:	b.n	127b0 <subvol_uuid_search2@@Base+0xd8>
   1274a:	cmp.w	fp, #1
   1274e:	bne.n	12754 <subvol_uuid_search2@@Base+0x7c>
   12750:	ldr	r4, [r4, #12]
   12752:	b.n	12744 <subvol_uuid_search2@@Base+0x6c>
   12754:	cmp.w	fp, #0
   12758:	bne.n	1275e <subvol_uuid_search2@@Base+0x86>
   1275a:	ldr	r4, [r4, #8]
   1275c:	b.n	12744 <subvol_uuid_search2@@Base+0x6c>
   1275e:	cmp.w	fp, #3
   12762:	bne.w	12b5c <subvol_uuid_search2@@Base+0x484>
   12766:	ldr	r4, [r4, #20]
   12768:	b.n	12744 <subvol_uuid_search2@@Base+0x6c>
   1276a:	cmp.w	fp, #2
   1276e:	bne.n	127cc <subvol_uuid_search2@@Base+0xf4>
   12770:	add.w	r0, r4, #64	; 0x40
   12774:	movs	r2, #16
   12776:	mov	r1, r8
   12778:	sub.w	sl, r4, #24
   1277c:	blx	8650 <memcmp@plt+0x4>
   12780:	asrs	r3, r0, #31
   12782:	cmp	r0, #0
   12784:	bne.w	12b60 <subvol_uuid_search2@@Base+0x488>
   12788:	add.w	r3, sp, #4640	; 0x1220
   1278c:	ldrd	r0, r1, [r4, #96]	; 0x60
   12790:	adds	r3, #16
   12792:	ldrd	r2, r3, [r3]
   12796:	cmp	r1, r3
   12798:	it	eq
   1279a:	cmpeq	r0, r2
   1279c:	bcc.n	1275a <subvol_uuid_search2@@Base+0x82>
   1279e:	add.w	r3, sp, #4640	; 0x1220
   127a2:	adds	r3, #16
   127a4:	ldrd	r2, r3, [r3]
   127a8:	cmp	r3, r1
   127aa:	it	eq
   127ac:	cmpeq	r2, r0
   127ae:	bcc.n	1280c <subvol_uuid_search2@@Base+0x134>
   127b0:	ldr	r1, [pc, #984]	; (12b8c <subvol_uuid_search2@@Base+0x4b4>)
   127b2:	add.w	r3, sp, #4576	; 0x11e0
   127b6:	ldr	r2, [pc, #972]	; (12b84 <subvol_uuid_search2@@Base+0x4ac>)
   127b8:	adds	r3, #12
   127ba:	add	r1, pc
   127bc:	ldr	r2, [r1, r2]
   127be:	ldr	r1, [r2, #0]
   127c0:	ldr	r2, [r3, #0]
   127c2:	eors	r1, r2
   127c4:	beq.w	12b6c <subvol_uuid_search2@@Base+0x494>
   127c8:	blx	86b8 <__stack_chk_fail@plt>
   127cc:	cmp.w	fp, #1
   127d0:	bne.n	127e8 <subvol_uuid_search2@@Base+0x110>
   127d2:	add.w	r0, r4, #44	; 0x2c
   127d6:	movs	r2, #16
   127d8:	mov	r1, r8
   127da:	sub.w	sl, r4, #12
   127de:	blx	8650 <memcmp@plt+0x4>
   127e2:	asrs	r7, r0, #31
   127e4:	mov	r6, r0
   127e6:	b.n	127fe <subvol_uuid_search2@@Base+0x126>
   127e8:	cmp.w	fp, #0
   127ec:	bne.n	12810 <subvol_uuid_search2@@Base+0x138>
   127ee:	ldrd	r3, r2, [r4, #48]	; 0x30
   127f2:	mov	sl, r4
   127f4:	subs.w	r6, r3, r9
   127f8:	ldr	r3, [sp, #16]
   127fa:	sbc.w	r7, r2, r3
   127fe:	cmp	r6, #0
   12800:	sbcs.w	r3, r7, #0
   12804:	blt.n	1275a <subvol_uuid_search2@@Base+0x82>
   12806:	orrs.w	r3, r6, r7
   1280a:	beq.n	127b0 <subvol_uuid_search2@@Base+0xd8>
   1280c:	ldr	r4, [r4, #4]
   1280e:	b.n	12744 <subvol_uuid_search2@@Base+0x6c>
   12810:	cmp.w	fp, #3
   12814:	bne.n	12826 <subvol_uuid_search2@@Base+0x14e>
   12816:	vmov	r1, s16
   1281a:	sub.w	sl, r4, #36	; 0x24
   1281e:	ldr	r0, [r4, #100]	; 0x64
   12820:	blx	8568 <strcmp@plt>
   12824:	b.n	127e2 <subvol_uuid_search2@@Base+0x10a>
   12826:	ldr	r3, [pc, #872]	; (12b90 <subvol_uuid_search2@@Base+0x4b8>)
   12828:	add	r4, sp, #488	; 0x1e8
   1282a:	ldr	r2, [pc, #872]	; (12b94 <subvol_uuid_search2@@Base+0x4bc>)
   1282c:	movs	r1, #1
   1282e:	ldr	r0, [r5, r3]
   12830:	add	r2, pc
   12832:	ldr	r3, [pc, #868]	; (12b98 <subvol_uuid_search2@@Base+0x4c0>)
   12834:	str	r1, [sp, #12]
   12836:	add	r3, pc
   12838:	str	r3, [sp, #8]
   1283a:	ldr	r3, [pc, #864]	; (12b9c <subvol_uuid_search2@@Base+0x4c4>)
   1283c:	add	r3, pc
   1283e:	str	r3, [sp, #4]
   12840:	mov.w	r3, #402	; 0x192
   12844:	str	r3, [sp, #0]
   12846:	ldr	r3, [pc, #856]	; (12ba0 <subvol_uuid_search2@@Base+0x4c8>)
   12848:	ldr	r0, [r0, #0]
   1284a:	add	r3, pc
   1284c:	blx	8a14 <__fprintf_chk@plt+0x4>
   12850:	movs	r1, #16
   12852:	mov	r0, r4
   12854:	blx	886c <backtrace@plt>
   12858:	movs	r2, #2
   1285a:	mov	r1, r0
   1285c:	mov	r0, r4
   1285e:	blx	8b7c <backtrace_symbols_fd@plt>
   12862:	blx	8b34 <abort@plt>
   12866:	cmp.w	fp, #3
   1286a:	bhi.w	12b50 <subvol_uuid_search2@@Base+0x478>
   1286e:	tbb	[pc, fp]
   12872:	ldmia	r3, {r2, r3}
   12874:	bcs.n	1287c <subvol_uuid_search2@@Base+0x1a4>
   12876:	ldr	r0, [r4, #0]
   12878:	sub.w	r2, sl, #8
   1287c:	mov	r1, r8
   1287e:	bl	176de <btrfs_lookup_uuid_received_subvol_item@@Base>
   12882:	mov	r6, r0
   12884:	cmp	r6, #0
   12886:	bne.w	12adc <subvol_uuid_search2@@Base+0x404>
   1288a:	ldr	r3, [r4, #0]
   1288c:	add	r6, sp, #488	; 0x1e8
   1288e:	add	r7, sp, #496	; 0x1f0
   12890:	mov.w	r8, #4096	; 0x1000
   12894:	movs	r1, #0
   12896:	mov	r0, r6
   12898:	vmov	s17, r3
   1289c:	ldrd	r2, r3, [sl, #-8]
   128a0:	strd	r2, r3, [sp, #16]
   128a4:	mov	r2, r8
   128a6:	blx	8978 <memset@plt+0x4>
   128aa:	movs	r2, #1
   128ac:	movs	r3, #0
   128ae:	strd	r2, r3, [r7, #-8]
   128b2:	ldrd	r2, r3, [sp, #16]
   128b6:	movs	r7, #0
   128b8:	str.w	r8, [r6, #64]	; 0x40
   128bc:	strd	r2, r3, [r6, #8]
   128c0:	strd	r2, r3, [r6, #16]
   128c4:	mov.w	r2, #4294967295	; 0xffffffff
   128c8:	movs	r3, #132	; 0x84
   128ca:	strd	r3, r3, [r6, #56]	; 0x38
   128ce:	mov.w	r3, #4294967295	; 0xffffffff
   128d2:	strd	r2, r3, [r6, #32]
   128d6:	strd	r2, r3, [r6, #48]	; 0x30
   128da:	add	r2, sp, #48	; 0x30
   128dc:	mov	r3, r7
   128de:	vmov	s18, r2
   128e2:	vmov	r0, s17
   128e6:	mov	r2, r6
   128e8:	ldr	r1, [pc, #656]	; (12b7c <subvol_uuid_search2@@Base+0x4a4>)
   128ea:	str	r3, [sp, #28]
   128ec:	blx	8764 <ioctl@plt>
   128f0:	ldr	r3, [sp, #28]
   128f2:	cmp	r0, #0
   128f4:	bge.w	12a56 <subvol_uuid_search2@@Base+0x37e>
   128f8:	ldr	r3, [pc, #660]	; (12b90 <subvol_uuid_search2@@Base+0x4b8>)
   128fa:	movs	r1, #1
   128fc:	ldr	r2, [pc, #676]	; (12ba4 <subvol_uuid_search2@@Base+0x4cc>)
   128fe:	ldr	r3, [r5, r3]
   12900:	add	r2, pc
   12902:	ldr	r0, [r3, #0]
   12904:	blx	8a14 <__fprintf_chk@plt+0x4>
   12908:	movw	r3, #439	; 0x1b7
   1290c:	cmp	r7, r3
   1290e:	add	r5, sp, #48	; 0x30
   12910:	bne.n	12926 <subvol_uuid_search2@@Base+0x24e>
   12912:	ldrd	r2, r3, [r5, #160]	; 0xa0
   12916:	ldr.w	r1, [r5, #243]	; 0xf3
   1291a:	ldr.w	r0, [r5, #239]	; 0xef
   1291e:	cmp	r3, r1
   12920:	it	eq
   12922:	cmpeq	r2, r0
   12924:	beq.n	12932 <subvol_uuid_search2@@Base+0x25a>
   12926:	add.w	r0, r5, #239	; 0xef
   1292a:	movs	r2, #200	; 0xc8
   1292c:	movs	r1, #0
   1292e:	blx	8978 <memset@plt+0x4>
   12932:	movs	r1, #144	; 0x90
   12934:	movs	r0, #1
   12936:	blx	8544 <calloc@plt+0x4>
   1293a:	mov	sl, r0
   1293c:	cmp	r0, #0
   1293e:	beq.w	12b56 <subvol_uuid_search2@@Base+0x47e>
   12942:	ldrd	r6, r7, [r5, #-8]
   12946:	add.w	r2, r5, #247	; 0xf7
   1294a:	add.w	lr, r0, #56	; 0x38
   1294e:	addw	r8, r5, #263	; 0x107
   12952:	strd	r6, r7, [r0, #48]	; 0x30
   12956:	ldr	r0, [r2, #0]
   12958:	adds	r2, #8
   1295a:	ldr.w	r1, [r2, #-4]
   1295e:	cmp	r2, r8
   12960:	mov	ip, lr
   12962:	stmia.w	ip!, {r0, r1}
   12966:	mov	lr, ip
   12968:	bne.n	12956 <subvol_uuid_search2@@Base+0x27e>
   1296a:	addw	r2, r5, #279	; 0x117
   1296e:	add.w	lr, sl, #88	; 0x58
   12972:	addw	r8, r5, #295	; 0x127
   12976:	ldr	r0, [r2, #0]
   12978:	adds	r2, #8
   1297a:	ldr.w	r1, [r2, #-4]
   1297e:	cmp	r2, r8
   12980:	mov	ip, lr
   12982:	stmia.w	ip!, {r0, r1}
   12986:	mov	lr, ip
   12988:	bne.n	12976 <subvol_uuid_search2@@Base+0x29e>
   1298a:	addw	r2, r5, #263	; 0x107
   1298e:	add.w	lr, sl, #72	; 0x48
   12992:	addw	r8, r5, #279	; 0x117
   12996:	ldr	r0, [r2, #0]
   12998:	adds	r2, #8
   1299a:	ldr.w	r1, [r2, #-4]
   1299e:	cmp	r2, r8
   129a0:	mov	ip, lr
   129a2:	stmia.w	ip!, {r0, r1}
   129a6:	mov	lr, ip
   129a8:	bne.n	12996 <subvol_uuid_search2@@Base+0x2be>
   129aa:	ldr.w	r1, [r5, #295]	; 0x127
   129ae:	cmp.w	fp, #3
   129b2:	ldr.w	r2, [r5, #299]	; 0x12b
   129b6:	strd	r1, r2, [sl, #104]	; 0x68
   129ba:	ldr.w	r1, [r5, #303]	; 0x12f
   129be:	ldr.w	r2, [r5, #307]	; 0x133
   129c2:	strd	r1, r2, [sl, #112]	; 0x70
   129c6:	ldr.w	r1, [r5, #311]	; 0x137
   129ca:	ldr.w	r2, [r5, #315]	; 0x13b
   129ce:	strd	r1, r2, [sl, #120]	; 0x78
   129d2:	ldr.w	r1, [r5, #319]	; 0x13f
   129d6:	ldr.w	r2, [r5, #323]	; 0x143
   129da:	strd	r1, r2, [sl, #128]	; 0x80
   129de:	bne.w	12b24 <subvol_uuid_search2@@Base+0x44c>
   129e2:	vmov	r0, s16
   129e6:	blx	86a0 <strdup@plt+0x4>
   129ea:	str.w	r0, [sl, #136]	; 0x88
   129ee:	cmp	r0, #0
   129f0:	bne.w	127b0 <subvol_uuid_search2@@Base+0xd8>
   129f4:	mvn.w	r6, #11
   129f8:	ldr.w	r0, [sl, #136]	; 0x88
   129fc:	blx	85dc <free@plt+0x4>
   12a00:	mov	r0, sl
   12a02:	blx	85dc <free@plt+0x4>
   12a06:	b.n	12adc <subvol_uuid_search2@@Base+0x404>
   12a08:	ldr	r0, [r4, #0]
   12a0a:	sub.w	r2, sl, #8
   12a0e:	mov	r1, r8
   12a10:	bl	176d8 <btrfs_lookup_uuid_subvol_item@@Base>
   12a14:	b.n	12882 <subvol_uuid_search2@@Base+0x1aa>
   12a16:	vmov	r1, s16
   12a1a:	movs	r2, #0
   12a1c:	ldr	r0, [r4, #0]
   12a1e:	blx	8908 <openat64@plt>
   12a22:	subs	r7, r0, #0
   12a24:	bge.n	12a44 <subvol_uuid_search2@@Base+0x36c>
   12a26:	blx	8938 <__errno_location@plt>
   12a2a:	ldr	r3, [pc, #356]	; (12b90 <subvol_uuid_search2@@Base+0x4b8>)
   12a2c:	ldr	r2, [pc, #376]	; (12ba8 <subvol_uuid_search2@@Base+0x4d0>)
   12a2e:	movs	r1, #1
   12a30:	add	r2, pc
   12a32:	ldr	r6, [r0, #0]
   12a34:	ldr	r0, [r5, r3]
   12a36:	vmov	r3, s16
   12a3a:	negs	r6, r6
   12a3c:	ldr	r0, [r0, #0]
   12a3e:	blx	8a14 <__fprintf_chk@plt+0x4>
   12a42:	b.n	12884 <subvol_uuid_search2@@Base+0x1ac>
   12a44:	sub.w	r1, sl, #8
   12a48:	bl	14d68 <btrfs_list_get_path_rootid@@Base>
   12a4c:	mov	r6, r0
   12a4e:	mov	r0, r7
   12a50:	blx	8b4c <close@plt>
   12a54:	b.n	12884 <subvol_uuid_search2@@Base+0x1ac>
   12a56:	ldr	r2, [r6, #64]	; 0x40
   12a58:	str	r2, [sp, #32]
   12a5a:	cbz	r2, 12aae <subvol_uuid_search2@@Base+0x3d6>
   12a5c:	add	r2, sp, #592	; 0x250
   12a5e:	mov.w	sl, #0
   12a62:	str	r2, [sp, #36]	; 0x24
   12a64:	str.w	sl, [sp, #28]
   12a68:	ldr	r1, [sp, #28]
   12a6a:	ldr	r2, [sp, #36]	; 0x24
   12a6c:	add.w	ip, r1, #32
   12a70:	add	r2, r1
   12a72:	ldr.w	r8, [r2, #28]
   12a76:	ldr	r0, [r2, #8]
   12a78:	add.w	r1, r8, ip
   12a7c:	str	r1, [sp, #28]
   12a7e:	ldr	r1, [r2, #12]
   12a80:	ldrd	r8, r9, [sp, #16]
   12a84:	strd	r0, r1, [r6, #8]
   12a88:	ldr	r1, [r2, #24]
   12a8a:	str	r1, [r6, #56]	; 0x38
   12a8c:	ldr	r0, [r2, #16]
   12a8e:	ldr	r1, [r2, #20]
   12a90:	strd	r0, r1, [r6, #24]
   12a94:	ldr	r1, [r2, #12]
   12a96:	ldr	r0, [r2, #8]
   12a98:	cmp	r9, r1
   12a9a:	it	eq
   12a9c:	cmpeq	r8, r0
   12a9e:	bcs.n	12aba <subvol_uuid_search2@@Base+0x3e2>
   12aa0:	ldrd	r1, r2, [r6, #24]
   12aa4:	adds	r0, r2, #1
   12aa6:	it	eq
   12aa8:	cmpeq.w	r1, #4294967295	; 0xffffffff
   12aac:	bne.n	12b00 <subvol_uuid_search2@@Base+0x428>
   12aae:	cmp	r3, #0
   12ab0:	bne.w	12908 <subvol_uuid_search2@@Base+0x230>
   12ab4:	mvn.w	r6, #1
   12ab8:	b.n	12adc <subvol_uuid_search2@@Base+0x404>
   12aba:	bne.n	12af4 <subvol_uuid_search2@@Base+0x41c>
   12abc:	ldr	r1, [r2, #24]
   12abe:	cmp	r1, #132	; 0x84
   12ac0:	bne.n	12af4 <subvol_uuid_search2@@Base+0x41c>
   12ac2:	ldr	r7, [r2, #28]
   12ac4:	cmp.w	r7, #440	; 0x1b8
   12ac8:	bcc.n	12ae0 <subvol_uuid_search2@@Base+0x408>
   12aca:	ldr	r3, [pc, #196]	; (12b90 <subvol_uuid_search2@@Base+0x4b8>)
   12acc:	mvn.w	r6, #74	; 0x4a
   12ad0:	ldr	r0, [pc, #216]	; (12bac <subvol_uuid_search2@@Base+0x4d4>)
   12ad2:	ldr	r3, [r5, r3]
   12ad4:	add	r0, pc
   12ad6:	ldr	r1, [r3, #0]
   12ad8:	blx	8b1c <fputs@plt+0x4>
   12adc:	mov	sl, r6
   12ade:	b.n	127b0 <subvol_uuid_search2@@Base+0xd8>
   12ae0:	ldr	r1, [sp, #36]	; 0x24
   12ae2:	movw	r3, #439	; 0x1b7
   12ae6:	vmov	r0, s18
   12aea:	mov	r2, r7
   12aec:	add	r1, ip
   12aee:	blx	8748 <__memcpy_chk@plt>
   12af2:	movs	r3, #1
   12af4:	ldr	r2, [sp, #32]
   12af6:	add.w	sl, sl, #1
   12afa:	cmp	r2, sl
   12afc:	bne.n	12a68 <subvol_uuid_search2@@Base+0x390>
   12afe:	b.n	12aa0 <subvol_uuid_search2@@Base+0x3c8>
   12b00:	adds	r0, r1, #1
   12b02:	adc.w	r2, r2, #0
   12b06:	strd	r0, r2, [r6, #24]
   12b0a:	ldr	r2, [r6, #56]	; 0x38
   12b0c:	cmp	r2, #132	; 0x84
   12b0e:	bne.n	12aae <subvol_uuid_search2@@Base+0x3d6>
   12b10:	ldrd	r0, r1, [r6, #8]
   12b14:	ldrd	r8, r9, [sp, #16]
   12b18:	cmp	r9, r1
   12b1a:	it	eq
   12b1c:	cmpeq	r8, r0
   12b1e:	beq.w	128e2 <subvol_uuid_search2@@Base+0x20a>
   12b22:	b.n	12aae <subvol_uuid_search2@@Base+0x3d6>
   12b24:	mov.w	r0, #4096	; 0x1000
   12b28:	blx	8820 <malloc@plt+0x4>
   12b2c:	mov	r1, r0
   12b2e:	str.w	r0, [sl, #136]	; 0x88
   12b32:	cmp	r0, #0
   12b34:	beq.w	129f4 <subvol_uuid_search2@@Base+0x31c>
   12b38:	strd	r6, r7, [sp]
   12b3c:	mov.w	r2, #4096	; 0x1000
   12b40:	ldr	r0, [r4, #0]
   12b42:	bl	1253c <btrfs_subvolid_resolve@@Base>
   12b46:	mov	r6, r0
   12b48:	cmp	r0, #0
   12b4a:	beq.w	127b0 <subvol_uuid_search2@@Base+0xd8>
   12b4e:	b.n	129f8 <subvol_uuid_search2@@Base+0x320>
   12b50:	mvn.w	r6, #21
   12b54:	b.n	12adc <subvol_uuid_search2@@Base+0x404>
   12b56:	mvn.w	r6, #11
   12b5a:	b.n	12adc <subvol_uuid_search2@@Base+0x404>
   12b5c:	mov	sl, r0
   12b5e:	b.n	127b0 <subvol_uuid_search2@@Base+0xd8>
   12b60:	cmp	r0, #0
   12b62:	sbcs.w	r3, r3, #0
   12b66:	bge.w	1280c <subvol_uuid_search2@@Base+0x134>
   12b6a:	b.n	1275a <subvol_uuid_search2@@Base+0x82>
   12b6c:	mov	r0, sl
   12b6e:	add.w	sp, sp, #4576	; 0x11e0
   12b72:	add	sp, #20
   12b74:	vpop	{d8-d9}
   12b78:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b7c:	str	r4, [sp, #68]	; 0x44
   12b7e:	beq.n	12b82 <subvol_uuid_search2@@Base+0x4aa>
   12b80:	movs	r6, #158	; 0x9e
   12b82:	movs	r5, r0
   12b84:	lsls	r4, r4, #8
   12b86:	movs	r0, r0
   12b88:	movs	r6, #146	; 0x92
   12b8a:	movs	r5, r0
   12b8c:	movs	r5, #206	; 0xce
   12b8e:	movs	r5, r0
   12b90:	lsls	r4, r6, #8
   12b92:	movs	r0, r0
   12b94:	ldr	r2, [r6, #116]	; 0x74
   12b96:	movs	r2, r0
   12b98:	add	r6, sp, #876	; 0x36c
   12b9a:	movs	r2, r0
   12b9c:	ldrh	r7, [r6, #30]
   12b9e:	movs	r2, r0
   12ba0:	ldrh	r4, [r4, #22]
   12ba2:	movs	r2, r0
   12ba4:	ldrh	r6, [r2, #18]
   12ba6:	movs	r2, r0
   12ba8:	ldrh	r3, [r1, #8]
   12baa:	movs	r2, r0
   12bac:	ldrh	r0, [r5, #4]
   12bae:	movs	r2, r0

00012bb0 <subvol_uuid_search@@Base>:
   12bb0:	push	{r4, r5, lr}
   12bb2:	sub	sp, #28
   12bb4:	ldr	r1, [sp, #60]	; 0x3c
   12bb6:	ldrd	r4, r5, [sp, #48]	; 0x30
   12bba:	str	r1, [sp, #20]
   12bbc:	ldr	r1, [sp, #56]	; 0x38
   12bbe:	strd	r4, r5, [sp, #8]
   12bc2:	str	r1, [sp, #16]
   12bc4:	ldr	r1, [sp, #40]	; 0x28
   12bc6:	str	r1, [sp, #0]
   12bc8:	bl	126d8 <subvol_uuid_search2@@Base>
   12bcc:	cmn.w	r0, #4096	; 0x1000
   12bd0:	it	hi
   12bd2:	movhi	r0, #0
   12bd4:	add	sp, #28
   12bd6:	pop	{r4, r5, pc}

00012bd8 <subvol_uuid_search_init@@Base>:
   12bd8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bdc:	mov	r9, r1
   12bde:	vpush	{d8}
   12be2:	movs	r6, #0
   12be4:	ldr	r1, [pc, #820]	; (12f1c <subvol_uuid_search_init@@Base+0x344>)
   12be6:	mov.w	r5, #4096	; 0x1000
   12bea:	ldr	r2, [pc, #820]	; (12f20 <subvol_uuid_search_init@@Base+0x348>)
   12bec:	mov.w	sl, #4294967295	; 0xffffffff
   12bf0:	add	r1, pc
   12bf2:	ldr	r3, [pc, #816]	; (12f24 <subvol_uuid_search_init@@Base+0x34c>)
   12bf4:	sub.w	sp, sp, #4608	; 0x1200
   12bf8:	vmov	s16, r0
   12bfc:	sub	sp, #4
   12bfe:	add	r3, pc
   12c00:	add	r4, sp, #504	; 0x1f8
   12c02:	add	r7, sp, #512	; 0x200
   12c04:	str	r3, [sp, #12]
   12c06:	add.w	r3, sp, #4576	; 0x11e0
   12c0a:	ldr	r2, [r1, r2]
   12c0c:	add	r0, sp, #64	; 0x40
   12c0e:	movs	r1, #0
   12c10:	adds	r3, #28
   12c12:	ldr	r2, [r2, #0]
   12c14:	str	r2, [r3, #0]
   12c16:	mov.w	r2, #0
   12c1a:	movw	r2, #439	; 0x1b7
   12c1e:	blx	8978 <memset@plt+0x4>
   12c22:	mov	r2, r5
   12c24:	mov	r1, r6
   12c26:	vstr	s16, [r9]
   12c2a:	mov	r0, r4
   12c2c:	strd	r6, r6, [r9, #8]
   12c30:	strd	r6, r6, [r9, #16]
   12c34:	mov.w	fp, #4294967295	; 0xffffffff
   12c38:	blx	8978 <memset@plt+0x4>
   12c3c:	movs	r2, #1
   12c3e:	movs	r3, #0
   12c40:	vmov	r0, s16
   12c44:	strd	r2, r3, [r7, #-8]
   12c48:	movs	r2, #9
   12c4a:	movs	r3, #0
   12c4c:	ldr	r1, [pc, #712]	; (12f18 <subvol_uuid_search_init@@Base+0x340>)
   12c4e:	strd	r2, r3, [r4, #8]
   12c52:	movs	r7, #1
   12c54:	strd	r2, r3, [r4, #16]
   12c58:	mov	r2, r4
   12c5a:	movs	r3, #132	; 0x84
   12c5c:	strd	sl, fp, [r4, #32]
   12c60:	strd	r3, r3, [r4, #56]	; 0x38
   12c64:	strd	sl, fp, [r4, #48]	; 0x30
   12c68:	str	r7, [r4, #64]	; 0x40
   12c6a:	blx	8764 <ioctl@plt>
   12c6e:	subs	r3, r0, #0
   12c70:	str	r3, [sp, #8]
   12c72:	blt.n	12cfc <subvol_uuid_search_init@@Base+0x124>
   12c74:	ldr.w	r8, [r4, #64]	; 0x40
   12c78:	cmp.w	r8, #0
   12c7c:	beq.n	12ca0 <subvol_uuid_search_init@@Base+0xc8>
   12c7e:	str.w	r7, [r9, #4]
   12c82:	str	r6, [sp, #8]
   12c84:	ldr	r1, [pc, #672]	; (12f28 <subvol_uuid_search_init@@Base+0x350>)
   12c86:	add.w	r3, sp, #4576	; 0x11e0
   12c8a:	ldr	r2, [pc, #660]	; (12f20 <subvol_uuid_search_init@@Base+0x348>)
   12c8c:	adds	r3, #28
   12c8e:	add	r1, pc
   12c90:	ldr	r2, [r1, r2]
   12c92:	ldr	r1, [r2, #0]
   12c94:	ldr	r2, [r3, #0]
   12c96:	eors	r1, r2
   12c98:	beq.w	12f06 <subvol_uuid_search_init@@Base+0x32e>
   12c9c:	blx	86b8 <__stack_chk_fail@plt>
   12ca0:	mov	r2, r5
   12ca2:	mov	r1, r8
   12ca4:	mov	r0, r4
   12ca6:	blx	8978 <memset@plt+0x4>
   12caa:	str	r5, [r4, #64]	; 0x40
   12cac:	mov	r5, r8
   12cae:	movs	r3, #0
   12cb0:	movs	r2, #1
   12cb2:	movs	r1, #132	; 0x84
   12cb4:	strd	r2, r3, [r4]
   12cb8:	movs	r3, #144	; 0x90
   12cba:	strd	sl, fp, [r4, #16]
   12cbe:	strd	r1, r3, [r4, #56]	; 0x38
   12cc2:	add	r3, sp, #608	; 0x260
   12cc4:	strd	sl, fp, [r4, #32]
   12cc8:	strd	sl, fp, [r4, #48]	; 0x30
   12ccc:	str.w	r8, [sp, #52]	; 0x34
   12cd0:	strd	r8, r8, [sp, #28]
   12cd4:	strd	r8, r8, [sp, #44]	; 0x2c
   12cd8:	strd	r8, r8, [sp, #36]	; 0x24
   12cdc:	str	r3, [sp, #60]	; 0x3c
   12cde:	vmov	r0, s16
   12ce2:	mov	r2, r4
   12ce4:	ldr	r1, [pc, #560]	; (12f18 <subvol_uuid_search_init@@Base+0x340>)
   12ce6:	blx	8764 <ioctl@plt>
   12cea:	subs	r3, r0, #0
   12cec:	str	r3, [sp, #8]
   12cee:	bge.n	12d10 <subvol_uuid_search_init@@Base+0x138>
   12cf0:	ldr	r2, [sp, #12]
   12cf2:	ldr	r3, [pc, #568]	; (12f2c <subvol_uuid_search_init@@Base+0x354>)
   12cf4:	ldr	r3, [r2, r3]
   12cf6:	ldr	r2, [pc, #568]	; (12f30 <subvol_uuid_search_init@@Base+0x358>)
   12cf8:	add	r2, pc
   12cfa:	b.n	12d06 <subvol_uuid_search_init@@Base+0x12e>
   12cfc:	ldr	r2, [sp, #12]
   12cfe:	ldr	r3, [pc, #556]	; (12f2c <subvol_uuid_search_init@@Base+0x354>)
   12d00:	ldr	r3, [r2, r3]
   12d02:	ldr	r2, [pc, #560]	; (12f34 <subvol_uuid_search_init@@Base+0x35c>)
   12d04:	add	r2, pc
   12d06:	ldr	r0, [r3, #0]
   12d08:	movs	r1, #1
   12d0a:	blx	8a14 <__fprintf_chk@plt+0x4>
   12d0e:	b.n	12c84 <subvol_uuid_search_init@@Base+0xac>
   12d10:	ldr	r3, [r4, #64]	; 0x40
   12d12:	cmp	r3, #0
   12d14:	beq.n	12c84 <subvol_uuid_search_init@@Base+0xac>
   12d16:	mov.w	fp, #0
   12d1a:	add	r7, sp, #64	; 0x40
   12d1c:	mov	sl, fp
   12d1e:	addw	r3, r7, #263	; 0x107
   12d22:	str	r3, [sp, #56]	; 0x38
   12d24:	ldr	r3, [r4, #64]	; 0x40
   12d26:	cmp	r3, sl
   12d28:	bhi.n	12d4c <subvol_uuid_search_init@@Base+0x174>
   12d2a:	ldrd	r0, r1, [r4, #24]
   12d2e:	mov.w	r3, #4096	; 0x1000
   12d32:	str	r3, [r4, #64]	; 0x40
   12d34:	adds	r2, r1, #1
   12d36:	it	eq
   12d38:	cmpeq.w	r0, #4294967295	; 0xffffffff
   12d3c:	beq.w	12ede <subvol_uuid_search_init@@Base+0x306>
   12d40:	adds	r2, r0, #1
   12d42:	adc.w	r3, r1, #0
   12d46:	strd	r2, r3, [r4, #24]
   12d4a:	b.n	12cde <subvol_uuid_search_init@@Base+0x106>
   12d4c:	ldr	r3, [sp, #60]	; 0x3c
   12d4e:	add.w	r6, r3, fp
   12d52:	add.w	r3, fp, #32
   12d56:	str	r3, [sp, #24]
   12d58:	ldr	r3, [r6, #12]
   12d5a:	ldr	r2, [r6, #8]
   12d5c:	cmp	r3, #0
   12d5e:	it	eq
   12d60:	cmpeq	r2, #5
   12d62:	beq.n	12d84 <subvol_uuid_search_init@@Base+0x1ac>
   12d64:	subs.w	r1, r2, #256	; 0x100
   12d68:	str	r1, [sp, #16]
   12d6a:	adc.w	r1, r3, #4294967295	; 0xffffffff
   12d6e:	str	r1, [sp, #20]
   12d70:	ldrd	fp, ip, [sp, #16]
   12d74:	mov.w	r1, #4294967295	; 0xffffffff
   12d78:	mvn.w	r0, #510	; 0x1fe
   12d7c:	cmp	ip, r1
   12d7e:	it	eq
   12d80:	cmpeq	fp, r0
   12d82:	bcs.n	12dda <subvol_uuid_search_init@@Base+0x202>
   12d84:	ldr	r1, [r6, #24]
   12d86:	cmp	r1, #132	; 0x84
   12d88:	bne.n	12dfc <subvol_uuid_search_init@@Base+0x224>
   12d8a:	ldr	r3, [r6, #28]
   12d8c:	cmp.w	r3, #438	; 0x1b6
   12d90:	bls.w	12ed8 <subvol_uuid_search_init@@Base+0x300>
   12d94:	ldr	r3, [sp, #24]
   12d96:	add.w	r8, sp, #608	; 0x260
   12d9a:	movw	r2, #439	; 0x1b7
   12d9e:	mov	r0, r7
   12da0:	add	r8, r3
   12da2:	mov	r1, r8
   12da4:	blx	8628 <memcpy@plt+0x4>
   12da8:	ldr.w	r3, [r8, #295]	; 0x127
   12dac:	ldr.w	r5, [r8, #319]	; 0x13f
   12db0:	str	r3, [sp, #36]	; 0x24
   12db2:	ldr.w	r3, [r8, #299]	; 0x12b
   12db6:	str	r3, [sp, #40]	; 0x28
   12db8:	ldr.w	r3, [r8, #303]	; 0x12f
   12dbc:	str	r3, [sp, #44]	; 0x2c
   12dbe:	ldr.w	r3, [r8, #307]	; 0x133
   12dc2:	str	r3, [sp, #48]	; 0x30
   12dc4:	ldr.w	r3, [r8, #311]	; 0x137
   12dc8:	str	r3, [sp, #28]
   12dca:	ldr.w	r3, [r8, #315]	; 0x13b
   12dce:	str	r3, [sp, #32]
   12dd0:	ldr.w	r3, [r8, #323]	; 0x143
   12dd4:	mov.w	r8, #1
   12dd8:	str	r3, [sp, #52]	; 0x34
   12dda:	ldr	r3, [r6, #28]
   12ddc:	add.w	sl, sl, #1
   12de0:	ldr	r2, [sp, #24]
   12de2:	add	r2, r3
   12de4:	ldr	r3, [r6, #12]
   12de6:	mov	fp, r2
   12de8:	ldr	r2, [r6, #8]
   12dea:	strd	r2, r3, [r4, #8]
   12dee:	ldr	r3, [r6, #20]
   12df0:	ldr	r2, [r6, #16]
   12df2:	strd	r2, r3, [r4, #24]
   12df6:	ldr	r3, [r6, #24]
   12df8:	str	r3, [r4, #56]	; 0x38
   12dfa:	b.n	12d24 <subvol_uuid_search_init@@Base+0x14c>
   12dfc:	cmp.w	r8, #0
   12e00:	beq.n	12dda <subvol_uuid_search_init@@Base+0x202>
   12e02:	vmov	r0, s16
   12e06:	bl	152c0 <btrfs_list_path_for_root@@Base>
   12e0a:	mov	r8, r0
   12e0c:	cbnz	r0, 12e18 <subvol_uuid_search_init@@Base+0x240>
   12e0e:	ldr	r0, [pc, #296]	; (12f38 <subvol_uuid_search_init@@Base+0x360>)
   12e10:	add	r0, pc
   12e12:	blx	86a0 <strdup@plt+0x4>
   12e16:	mov	r8, r0
   12e18:	cmn.w	r8, #4096	; 0x1000
   12e1c:	bls.n	12e3e <subvol_uuid_search_init@@Base+0x266>
   12e1e:	ldr	r2, [sp, #12]
   12e20:	ldr	r3, [pc, #264]	; (12f2c <subvol_uuid_search_init@@Base+0x354>)
   12e22:	ldr	r1, [r6, #8]
   12e24:	str.w	r8, [sp, #8]
   12e28:	ldr	r3, [r2, r3]
   12e2a:	ldr	r2, [r6, #12]
   12e2c:	strd	r1, r2, [sp]
   12e30:	movs	r1, #1
   12e32:	ldr	r2, [pc, #264]	; (12f3c <subvol_uuid_search_init@@Base+0x364>)
   12e34:	ldr	r0, [r3, #0]
   12e36:	add	r2, pc
   12e38:	blx	8a14 <__fprintf_chk@plt+0x4>
   12e3c:	b.n	12c84 <subvol_uuid_search_init@@Base+0xac>
   12e3e:	movs	r1, #144	; 0x90
   12e40:	movs	r0, #1
   12e42:	blx	8544 <calloc@plt+0x4>
   12e46:	ldr	r2, [r6, #12]
   12e48:	ldr	r1, [r6, #8]
   12e4a:	add.w	lr, r0, #56	; 0x38
   12e4e:	strd	r1, r2, [r0, #48]	; 0x30
   12e52:	add.w	r2, r7, #247	; 0xf7
   12e56:	mov	r3, r0
   12e58:	ldr	r1, [r2, #4]
   12e5a:	mov	ip, lr
   12e5c:	ldr	r0, [r2, #0]
   12e5e:	adds	r2, #8
   12e60:	stmia.w	ip!, {r0, r1}
   12e64:	mov	lr, ip
   12e66:	ldr	r1, [sp, #56]	; 0x38
   12e68:	cmp	r2, r1
   12e6a:	bne.n	12e58 <subvol_uuid_search_init@@Base+0x280>
   12e6c:	addw	r1, r7, #279	; 0x117
   12e70:	addw	r2, r7, #263	; 0x107
   12e74:	add.w	lr, r3, #72	; 0x48
   12e78:	mov	fp, r1
   12e7a:	ldr	r0, [r2, #0]
   12e7c:	adds	r2, #8
   12e7e:	ldr.w	r1, [r2, #-4]
   12e82:	cmp	r2, fp
   12e84:	mov	ip, lr
   12e86:	stmia.w	ip!, {r0, r1}
   12e8a:	mov	lr, ip
   12e8c:	bne.n	12e7a <subvol_uuid_search_init@@Base+0x2a2>
   12e8e:	addw	r1, r7, #295	; 0x127
   12e92:	addw	r2, r7, #279	; 0x117
   12e96:	add.w	lr, r3, #88	; 0x58
   12e9a:	mov	fp, r1
   12e9c:	ldr	r0, [r2, #0]
   12e9e:	adds	r2, #8
   12ea0:	ldr.w	r1, [r2, #-4]
   12ea4:	cmp	r2, fp
   12ea6:	mov	ip, lr
   12ea8:	stmia.w	ip!, {r0, r1}
   12eac:	mov	lr, ip
   12eae:	bne.n	12e9c <subvol_uuid_search_init@@Base+0x2c4>
   12eb0:	ldr	r2, [sp, #36]	; 0x24
   12eb2:	mov	r1, r3
   12eb4:	mov	r0, r9
   12eb6:	str	r2, [r3, #104]	; 0x68
   12eb8:	ldr	r2, [sp, #40]	; 0x28
   12eba:	str	r2, [r3, #108]	; 0x6c
   12ebc:	ldr	r2, [sp, #44]	; 0x2c
   12ebe:	str	r2, [r3, #112]	; 0x70
   12ec0:	ldr	r2, [sp, #48]	; 0x30
   12ec2:	str	r2, [r3, #116]	; 0x74
   12ec4:	ldr	r2, [sp, #28]
   12ec6:	str	r2, [r3, #120]	; 0x78
   12ec8:	ldr	r2, [sp, #32]
   12eca:	strd	r2, r5, [r3, #124]	; 0x7c
   12ece:	ldr	r2, [sp, #52]	; 0x34
   12ed0:	strd	r2, r8, [r3, #132]	; 0x84
   12ed4:	bl	12562 <subvol_uuid_search_add@@Base>
   12ed8:	mov.w	r8, #0
   12edc:	b.n	12dda <subvol_uuid_search_init@@Base+0x202>
   12ede:	ldrd	r0, r1, [r4, #8]
   12ee2:	adds	r3, r1, #1
   12ee4:	it	eq
   12ee6:	cmpeq.w	r0, #4294967295	; 0xffffffff
   12eea:	beq.w	12c84 <subvol_uuid_search_init@@Base+0xac>
   12eee:	adds	r2, r0, #1
   12ef0:	adc.w	r3, r1, #0
   12ef4:	strd	r2, r3, [r4, #8]
   12ef8:	movs	r3, #0
   12efa:	movs	r2, #0
   12efc:	strd	r2, r3, [r4, #24]
   12f00:	movs	r3, #0
   12f02:	str	r3, [r4, #56]	; 0x38
   12f04:	b.n	12cde <subvol_uuid_search_init@@Base+0x106>
   12f06:	ldr	r0, [sp, #8]
   12f08:	add.w	sp, sp, #4608	; 0x1200
   12f0c:	add	sp, #4
   12f0e:	vpop	{d8}
   12f12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f16:	nop
   12f18:	str	r4, [sp, #68]	; 0x44
   12f1a:	beq.n	12f1e <subvol_uuid_search_init@@Base+0x346>
   12f1c:	movs	r1, #152	; 0x98
   12f1e:	movs	r5, r0
   12f20:	lsls	r4, r4, #8
   12f22:	movs	r0, r0
   12f24:	movs	r1, #138	; 0x8a
   12f26:	movs	r5, r0
   12f28:	movs	r0, #250	; 0xfa
   12f2a:	movs	r5, r0
   12f2c:	lsls	r4, r6, #8
   12f2e:	movs	r0, r0
   12f30:	strh	r6, [r3, #50]	; 0x32
   12f32:	movs	r2, r0
   12f34:	strh	r2, [r0, #54]	; 0x36
   12f36:	movs	r2, r0
   12f38:	strb	r5, [r7, #3]
   12f3a:	movs	r2, r0
   12f3c:	strh	r1, [r0, #46]	; 0x2e
   12f3e:	movs	r2, r0

00012f40 <subvol_uuid_search_finit@@Base>:
   12f40:	push	{r4, r5, r6, lr}
   12f42:	mov	r5, r0
   12f44:	ldr	r3, [r0, #4]
   12f46:	cbz	r3, 12f5e <subvol_uuid_search_finit@@Base+0x1e>
   12f48:	add.w	r6, r0, #8
   12f4c:	mov	r0, r6
   12f4e:	bl	134ee <rb_first@@Base>
   12f52:	mov	r4, r0
   12f54:	cbnz	r0, 12f60 <subvol_uuid_search_finit@@Base+0x20>
   12f56:	strd	r0, r0, [r5, #8]
   12f5a:	strd	r0, r0, [r5, #16]
   12f5e:	pop	{r4, r5, r6, pc}
   12f60:	ldr.w	r0, [r4, #136]	; 0x88
   12f64:	blx	85dc <free@plt+0x4>
   12f68:	mov	r0, r4
   12f6a:	mov	r1, r6
   12f6c:	bl	13278 <rb_erase@@Base>
   12f70:	mov	r0, r4
   12f72:	blx	85dc <free@plt+0x4>
   12f76:	b.n	12f4c <subvol_uuid_search_finit@@Base+0xc>

00012f78 <path_cat_out@@Base>:
   12f78:	push	{r4, r5, r6, r7, lr}
   12f7a:	mov	r7, r0
   12f7c:	sub	sp, #20
   12f7e:	mov	r0, r1
   12f80:	mov	r6, r2
   12f82:	mov	r5, r1
   12f84:	blx	88f0 <strlen@plt>
   12f88:	mov	r4, r0
   12f8a:	mov	r0, r6
   12f8c:	blx	88f0 <strlen@plt>
   12f90:	movw	r2, #4093	; 0xffd
   12f94:	adds	r1, r4, r0
   12f96:	mov	r3, r0
   12f98:	cmp	r1, r2
   12f9a:	bgt.n	12fdc <path_cat_out@@Base+0x64>
   12f9c:	cbz	r4, 12fac <path_cat_out@@Base+0x34>
   12f9e:	adds	r2, r5, r4
   12fa0:	ldrb.w	r2, [r2, #-1]
   12fa4:	cmp	r2, #47	; 0x2f
   12fa6:	it	eq
   12fa8:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   12fac:	cbz	r0, 12fd8 <path_cat_out@@Base+0x60>
   12fae:	adds	r2, r6, r0
   12fb0:	ldrb.w	r2, [r2, #-1]
   12fb4:	cmp	r2, #47	; 0x2f
   12fb6:	bne.n	12fba <path_cat_out@@Base+0x42>
   12fb8:	subs	r3, r0, #1
   12fba:	strd	r3, r6, [sp, #8]
   12fbe:	mov.w	r2, #4294967295	; 0xffffffff
   12fc2:	ldr	r3, [pc, #32]	; (12fe4 <path_cat_out@@Base+0x6c>)
   12fc4:	movs	r1, #1
   12fc6:	mov	r0, r7
   12fc8:	strd	r4, r5, [sp]
   12fcc:	add	r3, pc
   12fce:	blx	8950 <__sprintf_chk@plt>
   12fd2:	movs	r0, #0
   12fd4:	add	sp, #20
   12fd6:	pop	{r4, r5, r6, r7, pc}
   12fd8:	mov	r3, r0
   12fda:	b.n	12fba <path_cat_out@@Base+0x42>
   12fdc:	mvn.w	r0, #35	; 0x23
   12fe0:	b.n	12fd4 <path_cat_out@@Base+0x5c>
   12fe2:	nop
   12fe4:	strh	r5, [r3, #34]	; 0x22
   12fe6:	movs	r2, r0

00012fe8 <path_cat3_out@@Base>:
   12fe8:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   12fec:	mov	sl, r0
   12fee:	sub	sp, #24
   12ff0:	mov	r0, r1
   12ff2:	mov	r8, r2
   12ff4:	mov	r9, r3
   12ff6:	mov	r7, r1
   12ff8:	blx	88f0 <strlen@plt>
   12ffc:	mov	r4, r0
   12ffe:	mov	r0, r8
   13000:	blx	88f0 <strlen@plt>
   13004:	mov	r6, r0
   13006:	mov	fp, r0
   13008:	mov	r0, r9
   1300a:	blx	88f0 <strlen@plt>
   1300e:	adds	r2, r4, r6
   13010:	movw	r1, #4092	; 0xffc
   13014:	add	r2, r0
   13016:	mov	r3, r0
   13018:	cmp	r2, r1
   1301a:	bgt.n	1307a <path_cat3_out@@Base+0x92>
   1301c:	cbz	r4, 1302c <path_cat3_out@@Base+0x44>
   1301e:	adds	r2, r7, r4
   13020:	ldrb.w	r2, [r2, #-1]
   13024:	cmp	r2, #47	; 0x2f
   13026:	it	eq
   13028:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   1302c:	cbz	r6, 13072 <path_cat3_out@@Base+0x8a>
   1302e:	add.w	r2, r8, r6
   13032:	ldrb.w	r2, [r2, #-1]
   13036:	cmp	r2, #47	; 0x2f
   13038:	bne.n	1303e <path_cat3_out@@Base+0x56>
   1303a:	add.w	fp, r6, #4294967295	; 0xffffffff
   1303e:	cbz	r0, 13076 <path_cat3_out@@Base+0x8e>
   13040:	add.w	r2, r9, r0
   13044:	ldrb.w	r2, [r2, #-1]
   13048:	cmp	r2, #47	; 0x2f
   1304a:	bne.n	1304e <path_cat3_out@@Base+0x66>
   1304c:	subs	r3, r0, #1
   1304e:	strd	r3, r9, [sp, #16]
   13052:	mov.w	r2, #4294967295	; 0xffffffff
   13056:	ldr	r3, [pc, #40]	; (13080 <path_cat3_out@@Base+0x98>)
   13058:	movs	r1, #1
   1305a:	mov	r0, sl
   1305c:	strd	fp, r8, [sp, #8]
   13060:	add	r3, pc
   13062:	strd	r4, r7, [sp]
   13066:	blx	8950 <__sprintf_chk@plt>
   1306a:	movs	r0, #0
   1306c:	add	sp, #24
   1306e:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   13072:	mov	fp, r6
   13074:	b.n	1303e <path_cat3_out@@Base+0x56>
   13076:	mov	r3, r0
   13078:	b.n	1304e <path_cat3_out@@Base+0x66>
   1307a:	mvn.w	r0, #35	; 0x23
   1307e:	b.n	1306c <path_cat3_out@@Base+0x84>
   13080:	strh	r4, [r0, #30]
   13082:	movs	r2, r0
   13084:	push	{r4, lr}
   13086:	orrs	r3, r1
   13088:	ldr	r4, [r0, #0]
   1308a:	str	r4, [r1, #0]
   1308c:	bics.w	r4, r4, #3
   13090:	str	r3, [r0, #0]
   13092:	beq.n	130a0 <path_cat3_out@@Base+0xb8>
   13094:	ldr	r3, [r4, #8]
   13096:	cmp	r0, r3
   13098:	ite	eq
   1309a:	streq	r1, [r4, #8]
   1309c:	strne	r1, [r4, #4]
   1309e:	pop	{r4, pc}
   130a0:	str	r1, [r2, #0]
   130a2:	b.n	1309e <path_cat3_out@@Base+0xb6>

000130a4 <__rb_erase_color@@Base>:
   130a4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   130a8:	mov	r6, r2
   130aa:	mov	r4, r0
   130ac:	mov	r7, r1
   130ae:	movs	r2, #0
   130b0:	ldr	r5, [r4, #4]
   130b2:	cmp	r5, r2
   130b4:	beq.n	13158 <__rb_erase_color@@Base+0xb4>
   130b6:	ldr	r3, [r5, #0]
   130b8:	ands.w	r3, r3, #1
   130bc:	bne.n	130de <__rb_erase_color@@Base+0x3a>
   130be:	ldr.w	r8, [r5, #8]
   130c2:	mov	r1, r5
   130c4:	orr.w	r2, r4, #1
   130c8:	mov	r0, r4
   130ca:	str.w	r8, [r4, #4]
   130ce:	str	r4, [r5, #8]
   130d0:	mov	r5, r8
   130d2:	str.w	r2, [r8]
   130d6:	mov	r2, r7
   130d8:	bl	13084 <path_cat3_out@@Base+0x9c>
   130dc:	blx	r6
   130de:	ldr	r3, [r5, #4]
   130e0:	cbz	r3, 130e8 <__rb_erase_color@@Base+0x44>
   130e2:	ldr	r2, [r3, #0]
   130e4:	lsls	r2, r2, #31
   130e6:	bpl.n	1312c <__rb_erase_color@@Base+0x88>
   130e8:	ldr.w	r8, [r5, #8]
   130ec:	cmp.w	r8, #0
   130f0:	beq.n	130fa <__rb_erase_color@@Base+0x56>
   130f2:	ldr.w	r3, [r8]
   130f6:	lsls	r3, r3, #31
   130f8:	bpl.n	1310c <__rb_erase_color@@Base+0x68>
   130fa:	str	r4, [r5, #0]
   130fc:	ldr	r3, [r4, #0]
   130fe:	lsls	r2, r3, #31
   13100:	bmi.n	131c6 <__rb_erase_color@@Base+0x122>
   13102:	orr.w	r3, r3, #1
   13106:	str	r3, [r4, #0]
   13108:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1310c:	ldr.w	r3, [r8, #4]
   13110:	str	r3, [r5, #8]
   13112:	str.w	r5, [r8, #4]
   13116:	str.w	r8, [r4, #4]
   1311a:	cbz	r3, 13122 <__rb_erase_color@@Base+0x7e>
   1311c:	orr.w	r2, r5, #1
   13120:	str	r2, [r3, #0]
   13122:	mov	r0, r5
   13124:	mov	r1, r8
   13126:	blx	r6
   13128:	mov	r3, r5
   1312a:	mov	r5, r8
   1312c:	ldr	r2, [r5, #8]
   1312e:	str	r2, [r4, #4]
   13130:	str	r4, [r5, #8]
   13132:	orr.w	r1, r5, #1
   13136:	str	r1, [r3, #0]
   13138:	cbz	r2, 13144 <__rb_erase_color@@Base+0xa0>
   1313a:	ldr	r3, [r2, #0]
   1313c:	and.w	r3, r3, #1
   13140:	orrs	r3, r4
   13142:	str	r3, [r2, #0]
   13144:	movs	r3, #1
   13146:	mov	r2, r7
   13148:	mov	r1, r5
   1314a:	mov	r0, r4
   1314c:	bl	13084 <path_cat3_out@@Base+0x9c>
   13150:	mov	r3, r6
   13152:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   13156:	bx	r3
   13158:	ldr	r5, [r4, #8]
   1315a:	ldr	r3, [r5, #0]
   1315c:	ands.w	r3, r3, #1
   13160:	bne.n	13182 <__rb_erase_color@@Base+0xde>
   13162:	ldr.w	r8, [r5, #4]
   13166:	mov	r1, r5
   13168:	orr.w	r2, r4, #1
   1316c:	mov	r0, r4
   1316e:	str.w	r8, [r4, #8]
   13172:	str	r4, [r5, #4]
   13174:	mov	r5, r8
   13176:	str.w	r2, [r8]
   1317a:	mov	r2, r7
   1317c:	bl	13084 <path_cat3_out@@Base+0x9c>
   13180:	blx	r6
   13182:	ldr	r3, [r5, #8]
   13184:	cbz	r3, 1318c <__rb_erase_color@@Base+0xe8>
   13186:	ldr	r2, [r3, #0]
   13188:	lsls	r0, r2, #31
   1318a:	bpl.n	131be <__rb_erase_color@@Base+0x11a>
   1318c:	ldr.w	r8, [r5, #4]
   13190:	cmp.w	r8, #0
   13194:	beq.n	130fa <__rb_erase_color@@Base+0x56>
   13196:	ldr.w	r3, [r8]
   1319a:	lsls	r1, r3, #31
   1319c:	bmi.n	130fa <__rb_erase_color@@Base+0x56>
   1319e:	ldr.w	r3, [r8, #8]
   131a2:	str	r3, [r5, #4]
   131a4:	str.w	r5, [r8, #8]
   131a8:	str.w	r8, [r4, #8]
   131ac:	cbz	r3, 131b4 <__rb_erase_color@@Base+0x110>
   131ae:	orr.w	r2, r5, #1
   131b2:	str	r2, [r3, #0]
   131b4:	mov	r0, r5
   131b6:	mov	r1, r8
   131b8:	blx	r6
   131ba:	mov	r3, r5
   131bc:	mov	r5, r8
   131be:	ldr	r2, [r5, #4]
   131c0:	str	r2, [r4, #8]
   131c2:	str	r4, [r5, #4]
   131c4:	b.n	13132 <__rb_erase_color@@Base+0x8e>
   131c6:	bics.w	r3, r3, #3
   131ca:	beq.n	13108 <__rb_erase_color@@Base+0x64>
   131cc:	mov	r2, r4
   131ce:	mov	r4, r3
   131d0:	b.n	130b0 <__rb_erase_color@@Base+0xc>

000131d2 <rb_insert_color@@Base>:
   131d2:	push	{r4, r5, r6}
   131d4:	mov	r3, r0
   131d6:	ldr	r4, [r0, #0]
   131d8:	mov	r2, r1
   131da:	cbnz	r4, 131e4 <rb_insert_color@@Base+0x12>
   131dc:	movs	r2, #1
   131de:	str	r2, [r3, #0]
   131e0:	pop	{r4, r5, r6}
   131e2:	bx	lr
   131e4:	ldr	r0, [r4, #0]
   131e6:	lsls	r5, r0, #31
   131e8:	bmi.n	131e0 <rb_insert_color@@Base+0xe>
   131ea:	ldr	r5, [r0, #4]
   131ec:	cmp	r4, r5
   131ee:	beq.n	1323a <rb_insert_color@@Base+0x68>
   131f0:	cbz	r5, 1320c <rb_insert_color@@Base+0x3a>
   131f2:	ldr	r1, [r5, #0]
   131f4:	lsls	r1, r1, #31
   131f6:	bmi.n	1320c <rb_insert_color@@Base+0x3a>
   131f8:	orr.w	r3, r0, #1
   131fc:	str	r3, [r5, #0]
   131fe:	str	r3, [r4, #0]
   13200:	mov	r3, r0
   13202:	ldr	r4, [r0, #0]
   13204:	bic.w	r4, r4, #3
   13208:	str	r4, [r0, #0]
   1320a:	b.n	131da <rb_insert_color@@Base+0x8>
   1320c:	ldr	r5, [r4, #4]
   1320e:	cmp	r5, r3
   13210:	bne.n	13226 <rb_insert_color@@Base+0x54>
   13212:	ldr	r1, [r3, #8]
   13214:	str	r1, [r4, #4]
   13216:	str	r4, [r3, #8]
   13218:	cbz	r1, 13220 <rb_insert_color@@Base+0x4e>
   1321a:	orr.w	r5, r4, #1
   1321e:	str	r5, [r1, #0]
   13220:	str	r3, [r4, #0]
   13222:	mov	r4, r3
   13224:	ldr	r5, [r3, #4]
   13226:	str	r5, [r0, #8]
   13228:	str	r0, [r4, #4]
   1322a:	cbz	r5, 13232 <rb_insert_color@@Base+0x60>
   1322c:	orr.w	r3, r0, #1
   13230:	str	r3, [r5, #0]
   13232:	movs	r3, #0
   13234:	mov	r1, r4
   13236:	pop	{r4, r5, r6}
   13238:	b.n	13084 <path_cat3_out@@Base+0x9c>
   1323a:	ldr	r1, [r0, #8]
   1323c:	cbz	r1, 1324c <rb_insert_color@@Base+0x7a>
   1323e:	ldr	r6, [r1, #0]
   13240:	lsls	r6, r6, #31
   13242:	bmi.n	1324c <rb_insert_color@@Base+0x7a>
   13244:	orr.w	r3, r0, #1
   13248:	str	r3, [r1, #0]
   1324a:	b.n	131fe <rb_insert_color@@Base+0x2c>
   1324c:	ldr	r4, [r5, #8]
   1324e:	cmp	r4, r3
   13250:	bne.n	13266 <rb_insert_color@@Base+0x94>
   13252:	ldr	r1, [r3, #4]
   13254:	str	r1, [r5, #8]
   13256:	str	r5, [r3, #4]
   13258:	cbz	r1, 13260 <rb_insert_color@@Base+0x8e>
   1325a:	orr.w	r4, r5, #1
   1325e:	str	r4, [r1, #0]
   13260:	str	r3, [r5, #0]
   13262:	mov	r5, r3
   13264:	ldr	r4, [r3, #8]
   13266:	str	r4, [r0, #4]
   13268:	str	r0, [r5, #8]
   1326a:	cbz	r4, 13272 <rb_insert_color@@Base+0xa0>
   1326c:	orr.w	r3, r0, #1
   13270:	str	r3, [r4, #0]
   13272:	movs	r3, #0
   13274:	mov	r1, r5
   13276:	b.n	13236 <rb_insert_color@@Base+0x64>

00013278 <rb_erase@@Base>:
   13278:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1327c:	mov	r2, r1
   1327e:	mov	r4, r0
   13280:	ldrd	r1, r0, [r0, #4]
   13284:	cbnz	r0, 132b0 <rb_erase@@Base+0x38>
   13286:	ldr	r5, [r4, #0]
   13288:	bic.w	r3, r5, #3
   1328c:	mov	r0, r3
   1328e:	cbz	r3, 132a2 <rb_erase@@Base+0x2a>
   13290:	ldr	r6, [r3, #8]
   13292:	cmp	r4, r6
   13294:	ite	eq
   13296:	streq	r1, [r3, #8]
   13298:	strne	r1, [r3, #4]
   1329a:	cbz	r1, 132a6 <rb_erase@@Base+0x2e>
   1329c:	str	r5, [r1, #0]
   1329e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   132a2:	str	r1, [r2, #0]
   132a4:	b.n	1329a <rb_erase@@Base+0x22>
   132a6:	lsls	r5, r5, #31
   132a8:	bpl.n	1329e <rb_erase@@Base+0x26>
   132aa:	cmp	r3, #0
   132ac:	bne.n	1332c <rb_erase@@Base+0xb4>
   132ae:	b.n	1329e <rb_erase@@Base+0x26>
   132b0:	cbnz	r1, 132cc <rb_erase@@Base+0x54>
   132b2:	ldr	r3, [r4, #0]
   132b4:	str	r3, [r0, #0]
   132b6:	bics.w	r3, r3, #3
   132ba:	beq.n	132c8 <rb_erase@@Base+0x50>
   132bc:	ldr	r2, [r3, #8]
   132be:	cmp	r4, r2
   132c0:	ite	eq
   132c2:	streq	r0, [r3, #8]
   132c4:	strne	r0, [r3, #4]
   132c6:	b.n	1329e <rb_erase@@Base+0x26>
   132c8:	str	r0, [r2, #0]
   132ca:	b.n	1329e <rb_erase@@Base+0x26>
   132cc:	ldr	r3, [r1, #8]
   132ce:	cbnz	r3, 13302 <rb_erase@@Base+0x8a>
   132d0:	ldr	r6, [r1, #4]
   132d2:	mov	r3, r1
   132d4:	mov	r0, r1
   132d6:	ldr	r5, [r4, #8]
   132d8:	str	r5, [r3, #8]
   132da:	ldr	r1, [r5, #0]
   132dc:	and.w	r1, r1, #1
   132e0:	orrs	r1, r3
   132e2:	str	r1, [r5, #0]
   132e4:	ldr	r1, [r4, #0]
   132e6:	bics.w	r5, r1, #3
   132ea:	beq.n	13320 <rb_erase@@Base+0xa8>
   132ec:	ldr	r7, [r5, #8]
   132ee:	cmp	r4, r7
   132f0:	ite	eq
   132f2:	streq	r3, [r5, #8]
   132f4:	strne	r3, [r5, #4]
   132f6:	cbz	r6, 13324 <rb_erase@@Base+0xac>
   132f8:	orr.w	r0, r0, #1
   132fc:	str	r1, [r3, #0]
   132fe:	str	r0, [r6, #0]
   13300:	b.n	1329e <rb_erase@@Base+0x26>
   13302:	mov	r0, r1
   13304:	ldr	r5, [r3, #8]
   13306:	cbnz	r5, 1331a <rb_erase@@Base+0xa2>
   13308:	ldr	r6, [r3, #4]
   1330a:	str	r6, [r0, #8]
   1330c:	str	r1, [r3, #4]
   1330e:	ldr	r5, [r1, #0]
   13310:	and.w	r5, r5, #1
   13314:	orrs	r5, r3
   13316:	str	r5, [r1, #0]
   13318:	b.n	132d6 <rb_erase@@Base+0x5e>
   1331a:	mov	r0, r3
   1331c:	mov	r3, r5
   1331e:	b.n	13304 <rb_erase@@Base+0x8c>
   13320:	str	r3, [r2, #0]
   13322:	b.n	132f6 <rb_erase@@Base+0x7e>
   13324:	ldr	r4, [r3, #0]
   13326:	str	r1, [r3, #0]
   13328:	lsls	r4, r4, #31
   1332a:	bpl.n	1329e <rb_erase@@Base+0x26>
   1332c:	movs	r1, #0
   1332e:	ldr	r4, [r0, #4]
   13330:	cmp	r4, r1
   13332:	beq.n	133aa <rb_erase@@Base+0x132>
   13334:	ldr	r3, [r4, #0]
   13336:	ands.w	r3, r3, #1
   1333a:	bne.n	13350 <rb_erase@@Base+0xd8>
   1333c:	ldr	r5, [r4, #8]
   1333e:	orr.w	r1, r0, #1
   13342:	str	r5, [r0, #4]
   13344:	str	r0, [r4, #8]
   13346:	str	r1, [r5, #0]
   13348:	mov	r1, r4
   1334a:	bl	13084 <path_cat3_out@@Base+0x9c>
   1334e:	mov	r4, r5
   13350:	ldr	r3, [r4, #4]
   13352:	cbz	r3, 1335a <rb_erase@@Base+0xe2>
   13354:	ldr	r1, [r3, #0]
   13356:	lsls	r1, r1, #31
   13358:	bpl.n	133a4 <rb_erase@@Base+0x12c>
   1335a:	ldr	r1, [r4, #8]
   1335c:	cbz	r1, 13364 <rb_erase@@Base+0xec>
   1335e:	ldr	r3, [r1, #0]
   13360:	lsls	r7, r3, #31
   13362:	bpl.n	13374 <rb_erase@@Base+0xfc>
   13364:	str	r0, [r4, #0]
   13366:	ldr	r3, [r0, #0]
   13368:	lsls	r1, r3, #31
   1336a:	bmi.n	133de <rb_erase@@Base+0x166>
   1336c:	orr.w	r3, r3, #1
   13370:	str	r3, [r0, #0]
   13372:	b.n	1329e <rb_erase@@Base+0x26>
   13374:	ldr	r3, [r1, #4]
   13376:	str	r3, [r4, #8]
   13378:	str	r4, [r1, #4]
   1337a:	str	r1, [r0, #4]
   1337c:	cbz	r3, 13384 <rb_erase@@Base+0x10c>
   1337e:	orr.w	r5, r4, #1
   13382:	str	r5, [r3, #0]
   13384:	ldr	r5, [r1, #8]
   13386:	orr.w	r3, r1, #1
   1338a:	str	r5, [r0, #4]
   1338c:	str	r0, [r1, #8]
   1338e:	str	r3, [r4, #0]
   13390:	cbz	r5, 1339c <rb_erase@@Base+0x124>
   13392:	ldr	r3, [r5, #0]
   13394:	and.w	r3, r3, #1
   13398:	orrs	r3, r0
   1339a:	str	r3, [r5, #0]
   1339c:	movs	r3, #1
   1339e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   133a2:	b.n	13084 <path_cat3_out@@Base+0x9c>
   133a4:	mov	r1, r4
   133a6:	mov	r4, r3
   133a8:	b.n	13384 <rb_erase@@Base+0x10c>
   133aa:	ldr	r1, [r0, #8]
   133ac:	ldr	r3, [r1, #0]
   133ae:	ands.w	r3, r3, #1
   133b2:	bne.n	133c6 <rb_erase@@Base+0x14e>
   133b4:	ldr	r4, [r1, #4]
   133b6:	orr.w	r5, r0, #1
   133ba:	str	r4, [r0, #8]
   133bc:	str	r0, [r1, #4]
   133be:	str	r5, [r4, #0]
   133c0:	bl	13084 <path_cat3_out@@Base+0x9c>
   133c4:	mov	r1, r4
   133c6:	ldr	r3, [r1, #8]
   133c8:	cbz	r3, 133d0 <rb_erase@@Base+0x158>
   133ca:	ldr	r4, [r3, #0]
   133cc:	lsls	r6, r4, #31
   133ce:	bpl.n	1341a <rb_erase@@Base+0x1a2>
   133d0:	ldr	r4, [r1, #4]
   133d2:	cbz	r4, 133da <rb_erase@@Base+0x162>
   133d4:	ldr	r3, [r4, #0]
   133d6:	lsls	r5, r3, #31
   133d8:	bpl.n	133ec <rb_erase@@Base+0x174>
   133da:	str	r0, [r1, #0]
   133dc:	b.n	13366 <rb_erase@@Base+0xee>
   133de:	bics.w	r3, r3, #3
   133e2:	beq.w	1329e <rb_erase@@Base+0x26>
   133e6:	mov	r1, r0
   133e8:	mov	r0, r3
   133ea:	b.n	1332e <rb_erase@@Base+0xb6>
   133ec:	ldr	r3, [r4, #8]
   133ee:	str	r3, [r1, #4]
   133f0:	str	r1, [r4, #8]
   133f2:	str	r4, [r0, #8]
   133f4:	cbz	r3, 133fc <rb_erase@@Base+0x184>
   133f6:	orr.w	r5, r1, #1
   133fa:	str	r5, [r3, #0]
   133fc:	ldr	r5, [r4, #4]
   133fe:	orr.w	r3, r4, #1
   13402:	str	r5, [r0, #8]
   13404:	str	r0, [r4, #4]
   13406:	str	r3, [r1, #0]
   13408:	cbz	r5, 13414 <rb_erase@@Base+0x19c>
   1340a:	ldr	r3, [r5, #0]
   1340c:	and.w	r3, r3, #1
   13410:	orrs	r3, r0
   13412:	str	r3, [r5, #0]
   13414:	movs	r3, #1
   13416:	mov	r1, r4
   13418:	b.n	1339e <rb_erase@@Base+0x126>
   1341a:	mov	r4, r1
   1341c:	mov	r1, r3
   1341e:	b.n	133fc <rb_erase@@Base+0x184>

00013420 <__rb_insert_augmented@@Base>:
   13420:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13424:	mov	r6, r0
   13426:	ldr	r4, [r0, #0]
   13428:	mov	r9, r1
   1342a:	mov	r8, r2
   1342c:	cbnz	r4, 13436 <__rb_insert_augmented@@Base+0x16>
   1342e:	movs	r3, #1
   13430:	str	r3, [r6, #0]
   13432:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13436:	ldr	r5, [r4, #0]
   13438:	lsls	r0, r5, #31
   1343a:	bmi.n	13432 <__rb_insert_augmented@@Base+0x12>
   1343c:	ldr	r7, [r5, #4]
   1343e:	cmp	r4, r7
   13440:	beq.n	134a0 <__rb_insert_augmented@@Base+0x80>
   13442:	cbz	r7, 1345e <__rb_insert_augmented@@Base+0x3e>
   13444:	ldr	r3, [r7, #0]
   13446:	lsls	r1, r3, #31
   13448:	bmi.n	1345e <__rb_insert_augmented@@Base+0x3e>
   1344a:	orr.w	r3, r5, #1
   1344e:	str	r3, [r7, #0]
   13450:	str	r3, [r4, #0]
   13452:	ldr	r4, [r5, #0]
   13454:	mov	r6, r5
   13456:	bic.w	r4, r4, #3
   1345a:	str	r4, [r5, #0]
   1345c:	b.n	1342c <__rb_insert_augmented@@Base+0xc>
   1345e:	ldr	r3, [r4, #4]
   13460:	cmp	r3, r6
   13462:	bne.n	1347e <__rb_insert_augmented@@Base+0x5e>
   13464:	ldr	r3, [r6, #8]
   13466:	str	r3, [r4, #4]
   13468:	str	r4, [r6, #8]
   1346a:	cbz	r3, 13472 <__rb_insert_augmented@@Base+0x52>
   1346c:	orr.w	r2, r4, #1
   13470:	str	r2, [r3, #0]
   13472:	mov	r0, r4
   13474:	str	r6, [r4, #0]
   13476:	mov	r1, r6
   13478:	mov	r4, r6
   1347a:	blx	r8
   1347c:	ldr	r3, [r6, #4]
   1347e:	str	r3, [r5, #8]
   13480:	str	r5, [r4, #4]
   13482:	cbz	r3, 1348a <__rb_insert_augmented@@Base+0x6a>
   13484:	orr.w	r2, r5, #1
   13488:	str	r2, [r3, #0]
   1348a:	movs	r3, #0
   1348c:	mov	r2, r9
   1348e:	mov	r1, r4
   13490:	mov	r0, r5
   13492:	bl	13084 <path_cat3_out@@Base+0x9c>
   13496:	mov	r0, r5
   13498:	mov	r3, r8
   1349a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1349e:	bx	r3
   134a0:	ldr	r3, [r5, #8]
   134a2:	cbz	r3, 134b4 <__rb_insert_augmented@@Base+0x94>
   134a4:	ldr	r2, [r3, #0]
   134a6:	lsls	r2, r2, #31
   134a8:	bmi.n	134b4 <__rb_insert_augmented@@Base+0x94>
   134aa:	orr.w	r2, r5, #1
   134ae:	str	r2, [r3, #0]
   134b0:	str	r2, [r4, #0]
   134b2:	b.n	13452 <__rb_insert_augmented@@Base+0x32>
   134b4:	ldr	r3, [r7, #8]
   134b6:	cmp	r3, r6
   134b8:	bne.n	134d4 <__rb_insert_augmented@@Base+0xb4>
   134ba:	ldr	r3, [r6, #4]
   134bc:	str	r3, [r7, #8]
   134be:	str	r7, [r6, #4]
   134c0:	cbz	r3, 134c8 <__rb_insert_augmented@@Base+0xa8>
   134c2:	orr.w	r2, r7, #1
   134c6:	str	r2, [r3, #0]
   134c8:	mov	r0, r7
   134ca:	str	r6, [r7, #0]
   134cc:	mov	r1, r6
   134ce:	mov	r7, r6
   134d0:	blx	r8
   134d2:	ldr	r3, [r6, #8]
   134d4:	str	r3, [r5, #4]
   134d6:	str	r5, [r7, #8]
   134d8:	cbz	r3, 134e0 <__rb_insert_augmented@@Base+0xc0>
   134da:	orr.w	r2, r5, #1
   134de:	str	r2, [r3, #0]
   134e0:	movs	r3, #0
   134e2:	mov	r2, r9
   134e4:	mov	r1, r7
   134e6:	mov	r0, r5
   134e8:	bl	13084 <path_cat3_out@@Base+0x9c>
   134ec:	b.n	13496 <__rb_insert_augmented@@Base+0x76>

000134ee <rb_first@@Base>:
   134ee:	ldr	r0, [r0, #0]
   134f0:	cbz	r0, 134fc <rb_first@@Base+0xe>
   134f2:	mov	r3, r0
   134f4:	ldr	r0, [r0, #8]
   134f6:	cmp	r0, #0
   134f8:	bne.n	134f2 <rb_first@@Base+0x4>
   134fa:	mov	r0, r3
   134fc:	bx	lr

000134fe <rb_last@@Base>:
   134fe:	ldr	r0, [r0, #0]
   13500:	cbz	r0, 1350c <rb_last@@Base+0xe>
   13502:	mov	r3, r0
   13504:	ldr	r0, [r0, #4]
   13506:	cmp	r0, #0
   13508:	bne.n	13502 <rb_last@@Base+0x4>
   1350a:	mov	r0, r3
   1350c:	bx	lr

0001350e <rb_next@@Base>:
   1350e:	ldr	r3, [r0, #0]
   13510:	cmp	r0, r3
   13512:	beq.n	13536 <rb_next@@Base+0x28>
   13514:	ldr	r3, [r0, #4]
   13516:	cbz	r3, 13522 <rb_next@@Base+0x14>
   13518:	mov	r0, r3
   1351a:	ldr	r3, [r3, #8]
   1351c:	cmp	r3, #0
   1351e:	bne.n	13518 <rb_next@@Base+0xa>
   13520:	bx	lr
   13522:	ldr	r3, [r0, #0]
   13524:	mov	r2, r0
   13526:	bic.w	r3, r3, #3
   1352a:	mov	r0, r3
   1352c:	cbz	r3, 13538 <rb_next@@Base+0x2a>
   1352e:	ldr	r3, [r3, #4]
   13530:	cmp	r3, r2
   13532:	beq.n	13522 <rb_next@@Base+0x14>
   13534:	bx	lr
   13536:	movs	r0, #0
   13538:	bx	lr

0001353a <rb_prev@@Base>:
   1353a:	ldr	r3, [r0, #0]
   1353c:	cmp	r0, r3
   1353e:	beq.n	13562 <rb_prev@@Base+0x28>
   13540:	ldr	r3, [r0, #8]
   13542:	cbz	r3, 1354e <rb_prev@@Base+0x14>
   13544:	mov	r0, r3
   13546:	ldr	r3, [r3, #4]
   13548:	cmp	r3, #0
   1354a:	bne.n	13544 <rb_prev@@Base+0xa>
   1354c:	bx	lr
   1354e:	ldr	r3, [r0, #0]
   13550:	mov	r2, r0
   13552:	bic.w	r3, r3, #3
   13556:	mov	r0, r3
   13558:	cbz	r3, 13564 <rb_prev@@Base+0x2a>
   1355a:	ldr	r3, [r3, #8]
   1355c:	cmp	r3, r2
   1355e:	beq.n	1354e <rb_prev@@Base+0x14>
   13560:	bx	lr
   13562:	movs	r0, #0
   13564:	bx	lr

00013566 <rb_replace_node@@Base>:
   13566:	mov	r3, r1
   13568:	ldr	r1, [r0, #0]
   1356a:	bics.w	r1, r1, #3
   1356e:	beq.n	1359e <rb_replace_node@@Base+0x38>
   13570:	ldr	r2, [r1, #8]
   13572:	cmp	r0, r2
   13574:	ite	eq
   13576:	streq	r3, [r1, #8]
   13578:	strne	r3, [r1, #4]
   1357a:	ldr	r1, [r0, #8]
   1357c:	cbz	r1, 13588 <rb_replace_node@@Base+0x22>
   1357e:	ldr	r2, [r1, #0]
   13580:	and.w	r2, r2, #1
   13584:	orrs	r2, r3
   13586:	str	r2, [r1, #0]
   13588:	ldr	r1, [r0, #4]
   1358a:	cbz	r1, 13596 <rb_replace_node@@Base+0x30>
   1358c:	ldr	r2, [r1, #0]
   1358e:	and.w	r2, r2, #1
   13592:	orrs	r2, r3
   13594:	str	r2, [r1, #0]
   13596:	ldmia	r0, {r0, r1, r2}
   13598:	stmia.w	r3, {r0, r1, r2}
   1359c:	bx	lr
   1359e:	str	r3, [r2, #0]
   135a0:	b.n	1357a <rb_replace_node@@Base+0x14>

000135a2 <rb_next_postorder@@Base>:
   135a2:	mov	r2, r0
   135a4:	cbz	r0, 135c8 <rb_next_postorder@@Base+0x26>
   135a6:	ldr	r3, [r0, #0]
   135a8:	bics.w	r0, r3, #3
   135ac:	beq.n	135c8 <rb_next_postorder@@Base+0x26>
   135ae:	ldr	r3, [r0, #8]
   135b0:	cmp	r3, r2
   135b2:	bne.n	135c8 <rb_next_postorder@@Base+0x26>
   135b4:	ldr	r3, [r0, #4]
   135b6:	cbz	r3, 135c8 <rb_next_postorder@@Base+0x26>
   135b8:	mov	r0, r3
   135ba:	ldr	r3, [r3, #8]
   135bc:	cmp	r3, #0
   135be:	bne.n	135b8 <rb_next_postorder@@Base+0x16>
   135c0:	ldr	r3, [r0, #4]
   135c2:	cmp	r3, #0
   135c4:	bne.n	135b8 <rb_next_postorder@@Base+0x16>
   135c6:	bx	lr
   135c8:	bx	lr

000135ca <rb_first_postorder@@Base>:
   135ca:	ldr	r0, [r0, #0]
   135cc:	cbz	r0, 135de <rb_first_postorder@@Base+0x14>
   135ce:	mov	r3, r0
   135d0:	ldr	r0, [r0, #8]
   135d2:	cmp	r0, #0
   135d4:	bne.n	135ce <rb_first_postorder@@Base+0x4>
   135d6:	ldr	r0, [r3, #4]
   135d8:	cmp	r0, #0
   135da:	bne.n	135ce <rb_first_postorder@@Base+0x4>
   135dc:	mov	r0, r3
   135de:	bx	lr
   135e0:	push	{r4, r5, lr}
   135e2:	ldrd	r4, r5, [r0, #24]
   135e6:	ldrd	r0, r1, [r1, #24]
   135ea:	cmp	r1, r5
   135ec:	it	eq
   135ee:	cmpeq	r0, r4
   135f0:	bcc.n	13606 <rb_first_postorder@@Base+0x3c>
   135f2:	cmp	r5, r1
   135f4:	it	eq
   135f6:	cmpeq	r4, r0
   135f8:	ite	cc
   135fa:	movcc.w	r0, #4294967295	; 0xffffffff
   135fe:	movcs	r0, #0
   13600:	cbz	r2, 13604 <rb_first_postorder@@Base+0x3a>
   13602:	negs	r0, r0
   13604:	pop	{r4, r5, pc}
   13606:	movs	r0, #1
   13608:	b.n	13600 <rb_first_postorder@@Base+0x36>
   1360a:	push	{r4, r5, lr}
   1360c:	ldrd	r4, r5, [r0, #72]	; 0x48
   13610:	ldrd	r0, r1, [r1, #72]	; 0x48
   13614:	cmp	r1, r5
   13616:	it	eq
   13618:	cmpeq	r0, r4
   1361a:	bcc.n	13630 <rb_first_postorder@@Base+0x66>
   1361c:	cmp	r5, r1
   1361e:	it	eq
   13620:	cmpeq	r4, r0
   13622:	ite	cc
   13624:	movcc.w	r0, #4294967295	; 0xffffffff
   13628:	movcs	r0, #0
   1362a:	cbz	r2, 1362e <rb_first_postorder@@Base+0x64>
   1362c:	negs	r0, r0
   1362e:	pop	{r4, r5, pc}
   13630:	movs	r0, #1
   13632:	b.n	1362a <rb_first_postorder@@Base+0x60>
   13634:	push	{r4, r5, lr}
   13636:	ldrd	r4, r5, [r0, #80]	; 0x50
   1363a:	ldrd	r0, r1, [r1, #80]	; 0x50
   1363e:	cmp	r1, r5
   13640:	it	eq
   13642:	cmpeq	r0, r4
   13644:	bcc.n	1365a <rb_first_postorder@@Base+0x90>
   13646:	cmp	r5, r1
   13648:	it	eq
   1364a:	cmpeq	r4, r0
   1364c:	ite	cc
   1364e:	movcc.w	r0, #4294967295	; 0xffffffff
   13652:	movcs	r0, #0
   13654:	cbz	r2, 13658 <rb_first_postorder@@Base+0x8e>
   13656:	negs	r0, r0
   13658:	pop	{r4, r5, pc}
   1365a:	movs	r0, #1
   1365c:	b.n	13654 <rb_first_postorder@@Base+0x8a>
   1365e:	ldrd	r0, r1, [r0, #24]
   13662:	cmp	r1, r3
   13664:	itte	eq
   13666:	cmpeq	r0, r2
   13668:	moveq	r0, #1
   1366a:	movne	r0, #0
   1366c:	bx	lr
   1366e:	ldrd	r2, r3, [r0, #32]
   13672:	orrs	r3, r2
   13674:	ite	ne
   13676:	movne	r0, #1
   13678:	moveq	r0, #0
   1367a:	bx	lr
   1367c:	ldr	r0, [r0, #40]	; 0x28
   1367e:	ands	r0, r2
   13680:	bx	lr
   13682:	ldrd	r0, r1, [r0, #72]	; 0x48
   13686:	cmp	r1, r3
   13688:	it	eq
   1368a:	cmpeq	r0, r2
   1368c:	ite	cs
   1368e:	movcs	r0, #1
   13690:	movcc	r0, #0
   13692:	bx	lr
   13694:	ldrd	r0, r1, [r0, #72]	; 0x48
   13698:	cmp	r3, r1
   1369a:	it	eq
   1369c:	cmpeq	r2, r0
   1369e:	ite	cs
   136a0:	movcs	r0, #1
   136a2:	movcc	r0, #0
   136a4:	bx	lr
   136a6:	ldrd	r0, r1, [r0, #72]	; 0x48
   136aa:	cmp	r1, r3
   136ac:	itte	eq
   136ae:	cmpeq	r0, r2
   136b0:	moveq	r0, #1
   136b2:	movne	r0, #0
   136b4:	bx	lr
   136b6:	ldrd	r0, r1, [r0, #80]	; 0x50
   136ba:	cmp	r1, r3
   136bc:	it	eq
   136be:	cmpeq	r0, r2
   136c0:	ite	cs
   136c2:	movcs	r0, #1
   136c4:	movcc	r0, #0
   136c6:	bx	lr
   136c8:	ldrd	r0, r1, [r0, #80]	; 0x50
   136cc:	cmp	r3, r1
   136ce:	it	eq
   136d0:	cmpeq	r2, r0
   136d2:	ite	cs
   136d4:	movcs	r0, #1
   136d6:	movcc	r0, #0
   136d8:	bx	lr
   136da:	ldrd	r0, r1, [r0, #80]	; 0x50
   136de:	cmp	r1, r3
   136e0:	itte	eq
   136e2:	cmpeq	r0, r2
   136e4:	moveq	r0, #1
   136e6:	movne	r0, #0
   136e8:	bx	lr
   136ea:	ldrd	r0, r1, [r0, #64]	; 0x40
   136ee:	cmp	r1, r3
   136f0:	itte	eq
   136f2:	cmpeq	r0, r2
   136f4:	moveq	r0, #1
   136f6:	movne	r0, #0
   136f8:	bx	lr
   136fa:	ldr.w	r0, [r0, #152]	; 0x98
   136fe:	bx	lr
   13700:	ldr	r2, [pc, #60]	; (13740 <rb_first_postorder@@Base+0x176>)
   13702:	movs	r1, #16
   13704:	ldr	r3, [pc, #60]	; (13744 <rb_first_postorder@@Base+0x17a>)
   13706:	push	{r4, lr}
   13708:	add	r2, pc
   1370a:	sub	sp, #72	; 0x48
   1370c:	add	r4, sp, #4
   1370e:	ldr	r3, [r2, r3]
   13710:	mov	r0, r4
   13712:	ldr	r3, [r3, #0]
   13714:	str	r3, [sp, #68]	; 0x44
   13716:	mov.w	r3, #0
   1371a:	blx	886c <backtrace@plt>
   1371e:	movs	r2, #2
   13720:	mov	r1, r0
   13722:	mov	r0, r4
   13724:	blx	8b7c <backtrace_symbols_fd@plt>
   13728:	ldr	r2, [pc, #28]	; (13748 <rb_first_postorder@@Base+0x17e>)
   1372a:	ldr	r3, [pc, #24]	; (13744 <rb_first_postorder@@Base+0x17a>)
   1372c:	add	r2, pc
   1372e:	ldr	r3, [r2, r3]
   13730:	ldr	r2, [r3, #0]
   13732:	ldr	r3, [sp, #68]	; 0x44
   13734:	eors	r2, r3
   13736:	beq.n	1373c <rb_first_postorder@@Base+0x172>
   13738:	blx	86b8 <__stack_chk_fail@plt>
   1373c:	add	sp, #72	; 0x48
   1373e:	pop	{r4, pc}
   13740:	asrs	r0, r0, #26
   13742:	movs	r5, r0
   13744:	lsls	r4, r4, #8
   13746:	movs	r0, r0
   13748:	asrs	r4, r3, #25
   1374a:	movs	r5, r0
   1374c:	push	{r4, lr}
   1374e:	mov	r4, r0
   13750:	ldr.w	r0, [r0, #144]	; 0x90
   13754:	blx	85dc <free@plt+0x4>
   13758:	ldr.w	r0, [r4, #140]	; 0x8c
   1375c:	blx	85dc <free@plt+0x4>
   13760:	ldr.w	r0, [r4, #148]	; 0x94
   13764:	blx	85dc <free@plt+0x4>
   13768:	mov	r0, r4
   1376a:	ldmia.w	sp!, {r4, lr}
   1376e:	b.w	85d8 <free@plt>
   13772:	mov	r1, r2
   13774:	adds	r0, #108	; 0x6c
   13776:	push	{r3, lr}
   13778:	blx	86ec <uuid_compare@plt>
   1377c:	clz	r0, r0
   13780:	lsrs	r0, r0, #5
   13782:	pop	{r3, pc}
   13784:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13788:	mov	r6, r0
   1378a:	mov	r0, r2
   1378c:	ldr	r2, [pc, #188]	; (1384c <rb_first_postorder@@Base+0x282>)
   1378e:	mov	r1, r3
   13790:	ldr	r3, [pc, #188]	; (13850 <rb_first_postorder@@Base+0x286>)
   13792:	add	r2, pc
   13794:	ldr.w	r7, [r6, #148]	; 0x94
   13798:	ldr.w	r8, [pc, #184]	; 13854 <rb_first_postorder@@Base+0x28a>
   1379c:	sub	sp, #20
   1379e:	ldr	r3, [r2, r3]
   137a0:	add	r8, pc
   137a2:	ldr	r3, [r3, #0]
   137a4:	str	r3, [sp, #12]
   137a6:	mov.w	r3, #0
   137aa:	cmp	r7, #0
   137ac:	beq.n	1382e <rb_first_postorder@@Base+0x264>
   137ae:	ldrd	r2, r3, [r6, #64]	; 0x40
   137b2:	cmp	r3, r1
   137b4:	it	eq
   137b6:	cmpeq	r2, r0
   137b8:	beq.n	1382e <rb_first_postorder@@Base+0x264>
   137ba:	ldr	r2, [pc, #156]	; (13858 <rb_first_postorder@@Base+0x28e>)
   137bc:	mov	r3, sp
   137be:	mov	fp, sp
   137c0:	add	r2, pc
   137c2:	ldr	r1, [r2, #4]
   137c4:	ldr	r0, [r2, #0]
   137c6:	ldrh	r2, [r2, #8]
   137c8:	stmia	r3!, {r0, r1}
   137ca:	mov	r0, fp
   137cc:	strh	r2, [r3, #0]
   137ce:	blx	88f0 <strlen@plt>
   137d2:	mov	r5, r0
   137d4:	mov	r0, r7
   137d6:	blx	88f0 <strlen@plt>
   137da:	add.w	r9, r5, r0
   137de:	mov	sl, r0
   137e0:	add.w	r0, r9, #2
   137e4:	blx	8820 <malloc@plt+0x4>
   137e8:	mov	r4, r0
   137ea:	cbnz	r0, 13802 <rb_first_postorder@@Base+0x238>
   137ec:	ldr	r3, [pc, #108]	; (1385c <rb_first_postorder@@Base+0x292>)
   137ee:	ldr	r0, [pc, #112]	; (13860 <rb_first_postorder@@Base+0x296>)
   137f0:	ldr.w	r3, [r8, r3]
   137f4:	add	r0, pc
   137f6:	ldr	r1, [r3, #0]
   137f8:	blx	8b1c <fputs@plt+0x4>
   137fc:	movs	r0, #1
   137fe:	blx	88e4 <exit@plt>
   13802:	adds	r0, r5, #1
   13804:	add	r9, r4
   13806:	mov	r2, sl
   13808:	mov	r1, r7
   1380a:	add	r0, r4
   1380c:	blx	8628 <memcpy@plt+0x4>
   13810:	movs	r3, #0
   13812:	mov	r2, r5
   13814:	strb.w	r3, [r9, #1]
   13818:	mov	r1, fp
   1381a:	movs	r3, #47	; 0x2f
   1381c:	mov	r0, r4
   1381e:	strb	r3, [r4, r5]
   13820:	blx	8628 <memcpy@plt+0x4>
   13824:	mov	r0, r7
   13826:	blx	85dc <free@plt+0x4>
   1382a:	str.w	r4, [r6, #148]	; 0x94
   1382e:	ldr	r2, [pc, #52]	; (13864 <rb_first_postorder@@Base+0x29a>)
   13830:	ldr	r3, [pc, #28]	; (13850 <rb_first_postorder@@Base+0x286>)
   13832:	add	r2, pc
   13834:	ldr	r3, [r2, r3]
   13836:	ldr	r2, [r3, #0]
   13838:	ldr	r3, [sp, #12]
   1383a:	eors	r2, r3
   1383c:	beq.n	13842 <rb_first_postorder@@Base+0x278>
   1383e:	blx	86b8 <__stack_chk_fail@plt>
   13842:	movs	r0, #1
   13844:	add	sp, #20
   13846:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1384a:	nop
   1384c:	asrs	r6, r6, #23
   1384e:	movs	r5, r0
   13850:	lsls	r4, r4, #8
   13852:	movs	r0, r0
   13854:	asrs	r0, r5, #23
   13856:	movs	r5, r0
   13858:	ldrb	r1, [r3, #18]
   1385a:	movs	r2, r0
   1385c:	lsls	r4, r6, #8
   1385e:	movs	r0, r0
   13860:	ldrb	r3, [r1, #17]
   13862:	movs	r2, r0
   13864:	asrs	r6, r2, #21
   13866:	movs	r5, r0
   13868:	push	{r4, lr}
   1386a:	mov	r4, r2
   1386c:	ldr.w	r1, [r1, #148]	; 0x94
   13870:	ldr.w	r0, [r0, #148]	; 0x94
   13874:	blx	8568 <strcmp@plt>
   13878:	cmp	r0, #0
   1387a:	bgt.n	1388a <rb_first_postorder@@Base+0x2c0>
   1387c:	ite	ne
   1387e:	movne.w	r0, #4294967295	; 0xffffffff
   13882:	moveq	r0, #0
   13884:	cbz	r4, 13888 <rb_first_postorder@@Base+0x2be>
   13886:	negs	r0, r0
   13888:	pop	{r4, pc}
   1388a:	movs	r0, #1
   1388c:	b.n	13884 <rb_first_postorder@@Base+0x2ba>
   1388e:	push	{r4, lr}
   13890:	sub	sp, #168	; 0xa8
   13892:	ldr	r4, [pc, #76]	; (138e0 <rb_first_postorder@@Base+0x316>)
   13894:	ldr	r1, [pc, #76]	; (138e4 <rb_first_postorder@@Base+0x31a>)
   13896:	add	r4, pc
   13898:	ldr	r1, [r4, r1]
   1389a:	mov	r4, sp
   1389c:	ldr	r1, [r1, #0]
   1389e:	str	r1, [sp, #164]	; 0xa4
   138a0:	mov.w	r1, #0
   138a4:	strd	r2, r3, [sp, #24]
   138a8:	mov	r3, r0
   138aa:	cbnz	r3, 138c0 <rb_first_postorder@@Base+0x2f6>
   138ac:	ldr	r1, [pc, #56]	; (138e8 <rb_first_postorder@@Base+0x31e>)
   138ae:	ldr	r2, [pc, #52]	; (138e4 <rb_first_postorder@@Base+0x31a>)
   138b0:	add	r1, pc
   138b2:	ldr	r2, [r1, r2]
   138b4:	ldr	r1, [r2, #0]
   138b6:	ldr	r2, [sp, #164]	; 0xa4
   138b8:	eors	r1, r2
   138ba:	beq.n	138d8 <rb_first_postorder@@Base+0x30e>
   138bc:	blx	86b8 <__stack_chk_fail@plt>
   138c0:	movs	r2, #0
   138c2:	mov	r1, r3
   138c4:	mov	r0, r4
   138c6:	bl	135e0 <rb_first_postorder@@Base+0x16>
   138ca:	cmp	r0, #0
   138cc:	bge.n	138d2 <rb_first_postorder@@Base+0x308>
   138ce:	ldr	r3, [r3, #8]
   138d0:	b.n	138aa <rb_first_postorder@@Base+0x2e0>
   138d2:	beq.n	138ac <rb_first_postorder@@Base+0x2e2>
   138d4:	ldr	r3, [r3, #4]
   138d6:	b.n	138aa <rb_first_postorder@@Base+0x2e0>
   138d8:	mov	r0, r3
   138da:	add	sp, #168	; 0xa8
   138dc:	pop	{r4, pc}
   138de:	nop
   138e0:	asrs	r2, r6, #19
   138e2:	movs	r5, r0
   138e4:	lsls	r4, r4, #8
   138e6:	movs	r0, r0
   138e8:	asrs	r0, r3, #19
   138ea:	movs	r5, r0
   138ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f0:	sub	sp, #20
   138f2:	mov	r9, r0
   138f4:	ldr	r0, [r0, #0]
   138f6:	strd	r2, r3, [sp]
   138fa:	bl	1388e <rb_first_postorder@@Base+0x2c4>
   138fe:	ldr.w	fp, [pc, #656]	; 13b90 <rb_first_postorder@@Base+0x5c6>
   13902:	ldrd	r6, r7, [sp, #64]	; 0x40
   13906:	add	fp, pc
   13908:	ldrd	sl, r8, [sp, #88]	; 0x58
   1390c:	ldr	r5, [sp, #124]	; 0x7c
   1390e:	mov	r4, r0
   13910:	cmp	r0, #0
   13912:	beq.w	13a4a <rb_first_postorder@@Base+0x480>
   13916:	ldrd	r2, r3, [r0, #24]
   1391a:	ldrd	r0, r1, [sp]
   1391e:	cmp	r1, r3
   13920:	it	eq
   13922:	cmpeq	r0, r2
   13924:	bne.w	13a4a <rb_first_postorder@@Base+0x480>
   13928:	cmp.w	sl, #0
   1392c:	beq.n	1396e <rb_first_postorder@@Base+0x3a4>
   1392e:	cmp.w	r8, #0
   13932:	beq.n	1396e <rb_first_postorder@@Base+0x3a4>
   13934:	ldr.w	r0, [r4, #144]	; 0x90
   13938:	blx	85dc <free@plt+0x4>
   1393c:	add.w	r0, r8, #1
   13940:	blx	8820 <malloc@plt+0x4>
   13944:	str.w	r0, [r4, #144]	; 0x90
   13948:	cbnz	r0, 1395c <rb_first_postorder@@Base+0x392>
   1394a:	ldr	r3, [pc, #584]	; (13b94 <rb_first_postorder@@Base+0x5ca>)
   1394c:	ldr	r0, [pc, #584]	; (13b98 <rb_first_postorder@@Base+0x5ce>)
   1394e:	ldr.w	r3, [fp, r3]
   13952:	add	r0, pc
   13954:	ldr	r1, [r3, #0]
   13956:	blx	8b1c <fputs@plt+0x4>
   1395a:	b.n	13a5e <rb_first_postorder@@Base+0x494>
   1395c:	mov	r2, r8
   1395e:	mov	r1, sl
   13960:	blx	8994 <strncpy@plt>
   13964:	ldr.w	r3, [r4, #144]	; 0x90
   13968:	movs	r2, #0
   1396a:	strb.w	r2, [r3, r8]
   1396e:	ldrd	r2, r3, [sp, #56]	; 0x38
   13972:	orrs	r3, r2
   13974:	itt	ne
   13976:	ldrdne	r2, r3, [sp, #56]	; 0x38
   1397a:	strdne	r2, r3, [r4, #48]	; 0x30
   1397e:	orrs.w	r3, r6, r7
   13982:	ldrd	r2, r3, [sp, #72]	; 0x48
   13986:	it	ne
   13988:	strdne	r6, r7, [r4, #32]
   1398c:	orrs	r3, r2
   1398e:	itt	ne
   13990:	ldrdne	r2, r3, [sp, #72]	; 0x48
   13994:	strdne	r2, r3, [r4, #40]	; 0x28
   13998:	ldrd	r2, r3, [sp, #80]	; 0x50
   1399c:	orrs	r3, r2
   1399e:	itt	ne
   139a0:	ldrdne	r2, r3, [sp, #80]	; 0x50
   139a4:	strdne	r2, r3, [r4, #56]	; 0x38
   139a8:	ldrd	r2, r3, [sp, #104]	; 0x68
   139ac:	orrs	r3, r2
   139ae:	itt	ne
   139b0:	ldrdne	r2, r3, [sp, #104]	; 0x68
   139b4:	strdne	r2, r3, [r4, #72]	; 0x48
   139b8:	ldrd	r2, r3, [sp, #96]	; 0x60
   139bc:	orrs	r3, r2
   139be:	beq.n	13a36 <rb_first_postorder@@Base+0x46c>
   139c0:	ldrd	r2, r3, [sp, #96]	; 0x60
   139c4:	strd	r2, r3, [r4, #80]	; 0x50
   139c8:	ldr	r3, [sp, #112]	; 0x70
   139ca:	cbz	r3, 139ce <rb_first_postorder@@Base+0x404>
   139cc:	str	r3, [r4, #88]	; 0x58
   139ce:	ldr	r3, [sp, #116]	; 0x74
   139d0:	cbz	r3, 139f0 <rb_first_postorder@@Base+0x426>
   139d2:	add.w	r2, r4, #92	; 0x5c
   139d6:	add.w	ip, r3, #16
   139da:	mov	r7, r3
   139dc:	mov	r3, r7
   139de:	adds	r2, #8
   139e0:	ldmia	r3!, {r0, r1}
   139e2:	cmp	r3, ip
   139e4:	str.w	r0, [r2, #-8]
   139e8:	mov	r7, r3
   139ea:	str.w	r1, [r2, #-4]
   139ee:	bne.n	139dc <rb_first_postorder@@Base+0x412>
   139f0:	ldr	r3, [sp, #120]	; 0x78
   139f2:	cbz	r3, 13a12 <rb_first_postorder@@Base+0x448>
   139f4:	add.w	r2, r4, #108	; 0x6c
   139f8:	add.w	r7, r3, #16
   139fc:	mov	r6, r3
   139fe:	mov	r3, r6
   13a00:	adds	r2, #8
   13a02:	ldmia	r3!, {r0, r1}
   13a04:	cmp	r3, r7
   13a06:	str.w	r0, [r2, #-8]
   13a0a:	mov	r6, r3
   13a0c:	str.w	r1, [r2, #-4]
   13a10:	bne.n	139fe <rb_first_postorder@@Base+0x434>
   13a12:	cbz	r5, 13a2e <rb_first_postorder@@Base+0x464>
   13a14:	adds	r4, #124	; 0x7c
   13a16:	add.w	r2, r5, #16
   13a1a:	mov	r3, r5
   13a1c:	adds	r4, #8
   13a1e:	ldmia	r3!, {r0, r1}
   13a20:	cmp	r3, r2
   13a22:	str.w	r0, [r4, #-8]
   13a26:	mov	r5, r3
   13a28:	str.w	r1, [r4, #-4]
   13a2c:	bne.n	13a1a <rb_first_postorder@@Base+0x450>
   13a2e:	movs	r0, #0
   13a30:	add	sp, #20
   13a32:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a36:	ldrd	r2, r3, [r4, #80]	; 0x50
   13a3a:	orrs	r3, r2
   13a3c:	bne.n	139c8 <rb_first_postorder@@Base+0x3fe>
   13a3e:	orrs.w	r3, r6, r7
   13a42:	it	ne
   13a44:	strdne	r6, r7, [r4, #80]	; 0x50
   13a48:	b.n	139c8 <rb_first_postorder@@Base+0x3fe>
   13a4a:	movs	r1, #160	; 0xa0
   13a4c:	movs	r0, #1
   13a4e:	blx	8544 <calloc@plt+0x4>
   13a52:	mov	r4, r0
   13a54:	cbnz	r0, 13a64 <rb_first_postorder@@Base+0x49a>
   13a56:	ldr	r0, [pc, #324]	; (13b9c <rb_first_postorder@@Base+0x5d2>)
   13a58:	add	r0, pc
   13a5a:	blx	8804 <puts@plt+0x4>
   13a5e:	movs	r0, #1
   13a60:	blx	88e4 <exit@plt>
   13a64:	ldrd	r2, r3, [sp]
   13a68:	strd	r2, r3, [r0, #24]
   13a6c:	cmp.w	sl, #0
   13a70:	beq.n	13aa6 <rb_first_postorder@@Base+0x4dc>
   13a72:	cmp.w	r8, #0
   13a76:	beq.n	13aa6 <rb_first_postorder@@Base+0x4dc>
   13a78:	add.w	r0, r8, #1
   13a7c:	blx	8820 <malloc@plt+0x4>
   13a80:	str.w	r0, [r4, #144]	; 0x90
   13a84:	cbnz	r0, 13a94 <rb_first_postorder@@Base+0x4ca>
   13a86:	ldr	r3, [pc, #268]	; (13b94 <rb_first_postorder@@Base+0x5ca>)
   13a88:	ldr	r0, [pc, #276]	; (13ba0 <rb_first_postorder@@Base+0x5d6>)
   13a8a:	ldr.w	r3, [fp, r3]
   13a8e:	add	r0, pc
   13a90:	ldr	r1, [r3, #0]
   13a92:	b.n	13956 <rb_first_postorder@@Base+0x38c>
   13a94:	mov	r2, r8
   13a96:	mov	r1, sl
   13a98:	str	r0, [sp, #12]
   13a9a:	blx	8994 <strncpy@plt>
   13a9e:	ldr	r3, [sp, #12]
   13aa0:	movs	r2, #0
   13aa2:	strb.w	r2, [r3, r8]
   13aa6:	ldrd	r2, r3, [sp, #56]	; 0x38
   13aaa:	orrs	r3, r2
   13aac:	itt	ne
   13aae:	ldrdne	r2, r3, [sp, #56]	; 0x38
   13ab2:	strdne	r2, r3, [r4, #48]	; 0x30
   13ab6:	ldrd	r2, r3, [sp, #80]	; 0x50
   13aba:	orrs	r3, r2
   13abc:	itt	ne
   13abe:	ldrdne	r2, r3, [sp, #80]	; 0x50
   13ac2:	strdne	r2, r3, [r4, #56]	; 0x38
   13ac6:	orrs.w	r3, r6, r7
   13aca:	ldrd	r2, r3, [sp, #72]	; 0x48
   13ace:	it	ne
   13ad0:	strdne	r6, r7, [r4, #32]
   13ad4:	orrs	r3, r2
   13ad6:	itt	ne
   13ad8:	ldrdne	r2, r3, [sp, #72]	; 0x48
   13adc:	strdne	r2, r3, [r4, #40]	; 0x28
   13ae0:	ldrd	r2, r3, [sp, #104]	; 0x68
   13ae4:	orrs	r3, r2
   13ae6:	itt	ne
   13ae8:	ldrdne	r2, r3, [sp, #104]	; 0x68
   13aec:	strdne	r2, r3, [r4, #72]	; 0x48
   13af0:	ldrd	r2, r3, [sp, #96]	; 0x60
   13af4:	orrs	r3, r2
   13af6:	beq.n	13b4a <rb_first_postorder@@Base+0x580>
   13af8:	ldrd	r2, r3, [sp, #96]	; 0x60
   13afc:	strd	r2, r3, [r4, #80]	; 0x50
   13b00:	ldr	r3, [sp, #112]	; 0x70
   13b02:	cbz	r3, 13b06 <rb_first_postorder@@Base+0x53c>
   13b04:	str	r3, [r4, #88]	; 0x58
   13b06:	ldr	r3, [sp, #116]	; 0x74
   13b08:	cbz	r3, 13b14 <rb_first_postorder@@Base+0x54a>
   13b0a:	ldmia	r3, {r0, r1, r2, r3}
   13b0c:	add.w	ip, r4, #92	; 0x5c
   13b10:	stmia.w	ip, {r0, r1, r2, r3}
   13b14:	ldr	r3, [sp, #120]	; 0x78
   13b16:	cbz	r3, 13b22 <rb_first_postorder@@Base+0x558>
   13b18:	ldmia	r3, {r0, r1, r2, r3}
   13b1a:	add.w	r7, r4, #108	; 0x6c
   13b1e:	stmia.w	r7, {r0, r1, r2, r3}
   13b22:	cbz	r5, 13b30 <rb_first_postorder@@Base+0x566>
   13b24:	ldmia.w	r5, {r0, r1, r2, r3}
   13b28:	add.w	r6, r4, #124	; 0x7c
   13b2c:	stmia.w	r6, {r0, r1, r2, r3}
   13b30:	mov	r2, r9
   13b32:	movs	r1, #0
   13b34:	ldr	r3, [r2, #0]
   13b36:	cbnz	r3, 13b5e <rb_first_postorder@@Base+0x594>
   13b38:	strd	r1, r3, [r4]
   13b3c:	mov	r0, r4
   13b3e:	str	r3, [r4, #8]
   13b40:	mov	r1, r9
   13b42:	str	r4, [r2, #0]
   13b44:	bl	131d2 <rb_insert_color@@Base>
   13b48:	b.n	13a2e <rb_first_postorder@@Base+0x464>
   13b4a:	ldrd	r2, r3, [r4, #80]	; 0x50
   13b4e:	orrs	r3, r2
   13b50:	bne.n	13b00 <rb_first_postorder@@Base+0x536>
   13b52:	orrs.w	r3, r6, r7
   13b56:	it	ne
   13b58:	strdne	r6, r7, [r4, #80]	; 0x50
   13b5c:	b.n	13b00 <rb_first_postorder@@Base+0x536>
   13b5e:	movs	r2, #0
   13b60:	mov	r1, r3
   13b62:	mov	r0, r4
   13b64:	bl	135e0 <rb_first_postorder@@Base+0x16>
   13b68:	cmp	r0, #0
   13b6a:	bge.n	13b74 <rb_first_postorder@@Base+0x5aa>
   13b6c:	add.w	r2, r3, #8
   13b70:	mov	r1, r3
   13b72:	b.n	13b34 <rb_first_postorder@@Base+0x56a>
   13b74:	beq.n	13b7a <rb_first_postorder@@Base+0x5b0>
   13b76:	adds	r2, r3, #4
   13b78:	b.n	13b70 <rb_first_postorder@@Base+0x5a6>
   13b7a:	blx	8938 <__errno_location@plt>
   13b7e:	movs	r3, #17
   13b80:	str	r3, [r0, #0]
   13b82:	ldr	r0, [pc, #32]	; (13ba4 <rb_first_postorder@@Base+0x5da>)
   13b84:	ldrd	r2, r3, [sp]
   13b88:	add	r0, pc
   13b8a:	bl	17424 <__btrfs_error@@Base>
   13b8e:	b.n	13a5e <rb_first_postorder@@Base+0x494>
   13b90:	asrs	r2, r0, #18
   13b92:	movs	r5, r0
   13b94:	lsls	r4, r6, #8
   13b96:	movs	r0, r0
   13b98:	ldrb	r5, [r5, #11]
   13b9a:	movs	r2, r0
   13b9c:	ldrsh	r1, [r6, r0]
   13b9e:	movs	r2, r0
   13ba0:	ldrb	r1, [r6, #6]
   13ba2:	movs	r2, r0
   13ba4:	ldrb	r3, [r3, #3]
   13ba6:	movs	r2, r0
   13ba8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bac:	sub	sp, #20
   13bae:	movs	r6, #0
   13bb0:	mov	r9, r1
   13bb2:	mov	r5, r1
   13bb4:	mov	r4, r6
   13bb6:	mov.w	sl, #47	; 0x2f
   13bba:	mov	fp, r6
   13bbc:	str	r0, [sp, #8]
   13bbe:	strd	r2, r3, [sp]
   13bc2:	ldrd	r2, r3, [r5, #48]	; 0x30
   13bc6:	orrs	r3, r2
   13bc8:	bne.n	13bda <rb_first_postorder@@Base+0x610>
   13bca:	mov	r0, r4
   13bcc:	blx	85dc <free@plt+0x4>
   13bd0:	mvn.w	r0, #1
   13bd4:	add	sp, #20
   13bd6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bda:	ldr.w	r8, [r5, #140]	; 0x8c
   13bde:	mov	r0, r8
   13be0:	blx	88f0 <strlen@plt>
   13be4:	mov	r7, r0
   13be6:	cmp	r4, #0
   13be8:	beq.n	13c70 <rb_first_postorder@@Base+0x6a6>
   13bea:	adds	r0, #2
   13bec:	add	r0, r6
   13bee:	blx	8820 <malloc@plt+0x4>
   13bf2:	mov	r8, r0
   13bf4:	cbnz	r0, 13c04 <rb_first_postorder@@Base+0x63a>
   13bf6:	ldr	r0, [pc, #140]	; (13c84 <rb_first_postorder@@Base+0x6ba>)
   13bf8:	add	r0, pc
   13bfa:	blx	8710 <perror@plt>
   13bfe:	movs	r0, #1
   13c00:	blx	88e4 <exit@plt>
   13c04:	adds	r3, r7, #1
   13c06:	mov	r2, r6
   13c08:	add	r0, r3
   13c0a:	mov	r1, r4
   13c0c:	str	r3, [sp, #12]
   13c0e:	blx	8628 <memcpy@plt+0x4>
   13c12:	mov	r2, r7
   13c14:	strb.w	sl, [r8, r7]
   13c18:	mov	r0, r8
   13c1a:	ldr.w	r1, [r5, #140]	; 0x8c
   13c1e:	blx	8628 <memcpy@plt+0x4>
   13c22:	add.w	r0, r8, r6
   13c26:	add	r7, r0
   13c28:	mov	r0, r4
   13c2a:	mov	r4, r8
   13c2c:	strb.w	fp, [r7, #1]
   13c30:	blx	85dc <free@plt+0x4>
   13c34:	ldr	r3, [sp, #12]
   13c36:	add	r6, r3
   13c38:	ldrd	r2, r3, [r9, #64]	; 0x40
   13c3c:	ldrd	r0, r1, [sp]
   13c40:	orrs	r3, r2
   13c42:	itt	eq
   13c44:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   13c48:	strdeq	r2, r3, [r9, #64]	; 0x40
   13c4c:	ldrd	r2, r3, [r5, #48]	; 0x30
   13c50:	cmp	r3, r1
   13c52:	it	eq
   13c54:	cmpeq	r2, r0
   13c56:	beq.n	13c7c <rb_first_postorder@@Base+0x6b2>
   13c58:	cmp	r3, #0
   13c5a:	it	eq
   13c5c:	cmpeq	r2, #5
   13c5e:	beq.n	13c7c <rb_first_postorder@@Base+0x6b2>
   13c60:	ldr	r1, [sp, #8]
   13c62:	ldr	r0, [r1, #0]
   13c64:	bl	1388e <rb_first_postorder@@Base+0x2c4>
   13c68:	mov	r5, r0
   13c6a:	cmp	r0, #0
   13c6c:	bne.n	13bc2 <rb_first_postorder@@Base+0x5f8>
   13c6e:	b.n	13bca <rb_first_postorder@@Base+0x600>
   13c70:	mov	r0, r8
   13c72:	mov	r6, r7
   13c74:	blx	86a0 <strdup@plt+0x4>
   13c78:	mov	r4, r0
   13c7a:	b.n	13c38 <rb_first_postorder@@Base+0x66e>
   13c7c:	movs	r0, #0
   13c7e:	str.w	r4, [r9, #148]	; 0x94
   13c82:	b.n	13bd4 <rb_first_postorder@@Base+0x60a>
   13c84:	ldrb	r7, [r2, #2]
   13c86:	movs	r2, r0
   13c88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13c8c:	mov	r4, r1
   13c8e:	ldr	r1, [pc, #260]	; (13d94 <rb_first_postorder@@Base+0x7ca>)
   13c90:	sub.w	sp, sp, #4096	; 0x1000
   13c94:	ldr	r2, [pc, #256]	; (13d98 <rb_first_postorder@@Base+0x7ce>)
   13c96:	sub	sp, #16
   13c98:	add	r1, pc
   13c9a:	ldr.w	r6, [r4, #140]	; 0x8c
   13c9e:	add.w	r3, sp, #4096	; 0x1000
   13ca2:	mov	r5, r0
   13ca4:	ldr	r2, [r1, r2]
   13ca6:	adds	r3, #12
   13ca8:	ldr	r2, [r2, #0]
   13caa:	str	r2, [r3, #0]
   13cac:	mov.w	r2, #0
   13cb0:	cmp	r6, #0
   13cb2:	bne.n	13d6e <rb_first_postorder@@Base+0x7a4>
   13cb4:	ldrd	r8, r9, [r4, #48]	; 0x30
   13cb8:	orrs.w	r3, r8, r9
   13cbc:	beq.n	13cfc <rb_first_postorder@@Base+0x732>
   13cbe:	add	r7, sp, #8
   13cc0:	mov.w	r2, #4096	; 0x1000
   13cc4:	mov	r1, r6
   13cc6:	add.w	sl, sp, #16
   13cca:	mov	r0, r7
   13ccc:	blx	8978 <memset@plt+0x4>
   13cd0:	ldrd	r2, r3, [r4, #56]	; 0x38
   13cd4:	mov	r0, r5
   13cd6:	ldr	r1, [pc, #184]	; (13d90 <rb_first_postorder@@Base+0x7c6>)
   13cd8:	strd	r8, r9, [sl, #-8]
   13cdc:	strd	r2, r3, [r7, #8]
   13ce0:	mov	r2, r7
   13ce2:	blx	8764 <ioctl@plt>
   13ce6:	subs	r5, r0, #0
   13ce8:	bge.n	13d28 <rb_first_postorder@@Base+0x75e>
   13cea:	blx	8938 <__errno_location@plt>
   13cee:	ldr	r3, [r0, #0]
   13cf0:	cmp	r3, #2
   13cf2:	bne.n	13d02 <rb_first_postorder@@Base+0x738>
   13cf4:	movs	r2, #0
   13cf6:	movs	r3, #0
   13cf8:	strd	r2, r3, [r4, #48]	; 0x30
   13cfc:	mvn.w	r5, #1
   13d00:	b.n	13d0e <rb_first_postorder@@Base+0x744>
   13d02:	ldr	r0, [pc, #152]	; (13d9c <rb_first_postorder@@Base+0x7d2>)
   13d04:	ldrd	r2, r3, [r4, #48]	; 0x30
   13d08:	add	r0, pc
   13d0a:	bl	17424 <__btrfs_error@@Base>
   13d0e:	ldr	r1, [pc, #144]	; (13da0 <rb_first_postorder@@Base+0x7d6>)
   13d10:	add.w	r3, sp, #4096	; 0x1000
   13d14:	ldr	r2, [pc, #128]	; (13d98 <rb_first_postorder@@Base+0x7ce>)
   13d16:	adds	r3, #12
   13d18:	add	r1, pc
   13d1a:	ldr	r2, [r1, r2]
   13d1c:	ldr	r1, [r2, #0]
   13d1e:	ldr	r2, [r3, #0]
   13d20:	eors	r1, r2
   13d22:	beq.n	13d84 <rb_first_postorder@@Base+0x7ba>
   13d24:	blx	86b8 <__stack_chk_fail@plt>
   13d28:	ldr.w	r8, [r4, #144]	; 0x90
   13d2c:	ldrb	r3, [r7, #16]
   13d2e:	mov	r0, r8
   13d30:	cbz	r3, 13d72 <rb_first_postorder@@Base+0x7a8>
   13d32:	blx	88f0 <strlen@plt>
   13d36:	add	r1, sp, #24
   13d38:	str	r1, [sp, #4]
   13d3a:	mov	r5, r0
   13d3c:	mov	r0, r1
   13d3e:	blx	88f0 <strlen@plt>
   13d42:	add	r0, r5
   13d44:	adds	r0, #1
   13d46:	blx	8820 <malloc@plt+0x4>
   13d4a:	ldr	r1, [sp, #4]
   13d4c:	mov	r5, r0
   13d4e:	str.w	r0, [r4, #140]	; 0x8c
   13d52:	cbnz	r0, 13d62 <rb_first_postorder@@Base+0x798>
   13d54:	ldr	r0, [pc, #76]	; (13da4 <rb_first_postorder@@Base+0x7da>)
   13d56:	add	r0, pc
   13d58:	blx	8710 <perror@plt>
   13d5c:	movs	r0, #1
   13d5e:	blx	88e4 <exit@plt>
   13d62:	blx	87a0 <strcpy@plt>
   13d66:	mov	r1, r8
   13d68:	mov	r0, r5
   13d6a:	blx	8758 <strcat@plt+0x4>
   13d6e:	movs	r5, #0
   13d70:	b.n	13d0e <rb_first_postorder@@Base+0x744>
   13d72:	blx	86a0 <strdup@plt+0x4>
   13d76:	str.w	r0, [r4, #140]	; 0x8c
   13d7a:	cmp	r0, #0
   13d7c:	bne.n	13d6e <rb_first_postorder@@Base+0x7a4>
   13d7e:	ldr	r0, [pc, #40]	; (13da8 <rb_first_postorder@@Base+0x7de>)
   13d80:	add	r0, pc
   13d82:	b.n	13d58 <rb_first_postorder@@Base+0x78e>
   13d84:	mov	r0, r5
   13d86:	add.w	sp, sp, #4096	; 0x1000
   13d8a:	add	sp, #16
   13d8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13d90:	str	r4, [sp, #72]	; 0x48
   13d92:	beq.n	13d96 <rb_first_postorder@@Base+0x7cc>
   13d94:	asrs	r0, r6, #3
   13d96:	movs	r5, r0
   13d98:	lsls	r4, r4, #8
   13d9a:	movs	r0, r0
   13d9c:	strb	r5, [r2, #30]
   13d9e:	movs	r2, r0
   13da0:	asrs	r0, r6, #1
   13da2:	movs	r5, r0
   13da4:	strb	r1, [r7, #28]
   13da6:	movs	r2, r0
   13da8:	strb	r5, [r0, #29]
   13daa:	movs	r2, r0
   13dac:	push	{r3, r4, r5, lr}
   13dae:	mov	r5, r0
   13db0:	mov	r0, r1
   13db2:	bl	134ee <rb_first@@Base>
   13db6:	mov	r4, r0
   13db8:	cbnz	r0, 13dbc <rb_first_postorder@@Base+0x7f2>
   13dba:	pop	{r3, r4, r5, pc}
   13dbc:	mov	r1, r4
   13dbe:	mov	r0, r5
   13dc0:	bl	13c88 <rb_first_postorder@@Base+0x6be>
   13dc4:	cbz	r0, 13dca <rb_first_postorder@@Base+0x800>
   13dc6:	adds	r3, r0, #2
   13dc8:	bne.n	13dba <rb_first_postorder@@Base+0x7f0>
   13dca:	mov	r0, r4
   13dcc:	bl	1350e <rb_next@@Base>
   13dd0:	b.n	13db6 <rb_first_postorder@@Base+0x7ec>
   13dd2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dd6:	mov	r6, r1
   13dd8:	vpush	{d8}
   13ddc:	ldr	r1, [pc, #748]	; (140cc <rb_first_postorder@@Base+0xb02>)
   13dde:	ldr	r2, [pc, #752]	; (140d0 <rb_first_postorder@@Base+0xb06>)
   13de0:	add	r1, pc
   13de2:	vmov	s16, r0
   13de6:	sub.w	sp, sp, #4288	; 0x10c0
   13dea:	sub	sp, #28
   13dec:	ldr	r2, [r1, r2]
   13dee:	add	r4, sp, #160	; 0xa0
   13df0:	add.w	r3, sp, #4288	; 0x10c0
   13df4:	add	r5, sp, #184	; 0xb8
   13df6:	ldr	r2, [r2, #0]
   13df8:	str	r2, [r3, #20]
   13dfa:	mov.w	r2, #0
   13dfe:	movs	r1, #0
   13e00:	mov.w	r2, #4096	; 0x1000
   13e04:	mov	r0, r4
   13e06:	str	r1, [r6, #0]
   13e08:	adds	r3, #20
   13e0a:	blx	8978 <memset@plt+0x4>
   13e0e:	movs	r2, #1
   13e10:	movs	r3, #0
   13e12:	strd	r2, r3, [r5, #-24]
   13e16:	movs	r2, #132	; 0x84
   13e18:	movs	r3, #144	; 0x90
   13e1a:	strd	r2, r3, [r4, #56]	; 0x38
   13e1e:	movs	r2, #5
   13e20:	movs	r3, #0
   13e22:	strd	r2, r3, [r4, #8]
   13e26:	mvn.w	r2, #255	; 0xff
   13e2a:	mov.w	r3, #4294967295	; 0xffffffff
   13e2e:	strd	r2, r3, [r4, #16]
   13e32:	mov.w	r2, #4294967295	; 0xffffffff
   13e36:	mov.w	r3, #4294967295	; 0xffffffff
   13e3a:	strd	r2, r3, [r4, #32]
   13e3e:	strd	r2, r3, [r4, #48]	; 0x30
   13e42:	vmov	r0, s16
   13e46:	mov	r2, r4
   13e48:	ldr	r1, [pc, #636]	; (140c8 <rb_first_postorder@@Base+0xafe>)
   13e4a:	mov.w	r3, #4096	; 0x1000
   13e4e:	str	r3, [r4, #64]	; 0x40
   13e50:	blx	8764 <ioctl@plt>
   13e54:	cmp	r0, #0
   13e56:	blt.n	13e62 <rb_first_postorder@@Base+0x898>
   13e58:	ldr	r3, [r4, #64]	; 0x40
   13e5a:	cmp	r3, #0
   13e5c:	bne.w	140aa <rb_first_postorder@@Base+0xae0>
   13e60:	movs	r0, #0
   13e62:	ldr	r1, [pc, #624]	; (140d4 <rb_first_postorder@@Base+0xb0a>)
   13e64:	add.w	r3, sp, #4288	; 0x10c0
   13e68:	ldr	r2, [pc, #612]	; (140d0 <rb_first_postorder@@Base+0xb06>)
   13e6a:	adds	r3, #20
   13e6c:	add	r1, pc
   13e6e:	ldr	r2, [r1, r2]
   13e70:	ldr	r1, [r2, #0]
   13e72:	ldr	r2, [r3, #0]
   13e74:	eors	r1, r2
   13e76:	beq.w	140b8 <rb_first_postorder@@Base+0xaee>
   13e7a:	blx	86b8 <__stack_chk_fail@plt>
   13e7e:	ldr	r3, [sp, #104]	; 0x68
   13e80:	add	r5, sp, #128	; 0x80
   13e82:	adds	r3, #80	; 0x50
   13e84:	mov	lr, r5
   13e86:	add	r3, r2
   13e88:	add.w	r8, r3, #32
   13e8c:	ldr	r0, [r3, #0]
   13e8e:	adds	r3, #8
   13e90:	ldr.w	r1, [r3, #-4]
   13e94:	cmp	r3, r8
   13e96:	mov	ip, lr
   13e98:	stmia.w	ip!, {r0, r1}
   13e9c:	mov	lr, ip
   13e9e:	bne.n	13e8c <rb_first_postorder@@Base+0x8c2>
   13ea0:	ldr.w	r8, [r5, #24]
   13ea4:	add.w	r9, r2, #32
   13ea8:	cmp.w	r8, #144	; 0x90
   13eac:	bne.n	13f66 <rb_first_postorder@@Base+0x99c>
   13eae:	ldr	r3, [sp, #124]	; 0x7c
   13eb0:	movs	r0, #0
   13eb2:	movs	r1, #0
   13eb4:	movs	r2, #0
   13eb6:	add	r3, r9
   13eb8:	strd	r2, r2, [sp, #64]	; 0x40
   13ebc:	strd	r2, r2, [sp, #56]	; 0x38
   13ec0:	strd	r0, r1, [sp, #48]	; 0x30
   13ec4:	strd	r0, r1, [sp, #40]	; 0x28
   13ec8:	ldrh	r2, [r3, #16]
   13eca:	str	r2, [sp, #36]	; 0x24
   13ecc:	add.w	r2, r3, #18
   13ed0:	str	r2, [sp, #32]
   13ed2:	ldr	r2, [r3, #0]
   13ed4:	ldr	r3, [r3, #4]
   13ed6:	strd	r0, r1, [sp, #16]
   13eda:	strd	r0, r1, [sp, #8]
   13ede:	strd	r2, r3, [sp, #24]
   13ee2:	ldrd	r2, r3, [r5, #16]
   13ee6:	strd	r2, r3, [sp]
   13eea:	ldrd	r2, r3, [r5, #8]
   13eee:	mov	r0, r6
   13ef0:	bl	138ec <rb_first_postorder@@Base+0x322>
   13ef4:	ldrd	r0, r1, [r5, #8]
   13ef8:	adds	r7, #1
   13efa:	ldr	r2, [r5, #28]
   13efc:	str.w	r8, [r4, #56]	; 0x38
   13f00:	strd	r0, r1, [r4, #8]
   13f04:	add	r2, r9
   13f06:	ldrd	r0, r1, [r5, #16]
   13f0a:	strd	r0, r1, [r4, #24]
   13f0e:	ldr	r3, [r4, #64]	; 0x40
   13f10:	cmp	r7, r3
   13f12:	bcc.n	13e7e <rb_first_postorder@@Base+0x8b4>
   13f14:	ldrd	r3, r2, [r4, #24]
   13f18:	adds	r3, #1
   13f1a:	str	r3, [sp, #72]	; 0x48
   13f1c:	adc.w	r3, r2, #0
   13f20:	str	r3, [sp, #76]	; 0x4c
   13f22:	ldrd	r2, r3, [sp, #72]	; 0x48
   13f26:	strd	r2, r3, [r4, #24]
   13f2a:	orrs	r3, r2
   13f2c:	bne.n	13e42 <rb_first_postorder@@Base+0x878>
   13f2e:	ldr	r3, [r4, #56]	; 0x38
   13f30:	adds	r3, #1
   13f32:	str	r3, [r4, #56]	; 0x38
   13f34:	cmp	r3, #144	; 0x90
   13f36:	bls.n	13e42 <rb_first_postorder@@Base+0x878>
   13f38:	movs	r3, #132	; 0x84
   13f3a:	str	r3, [r4, #56]	; 0x38
   13f3c:	ldrd	r3, r2, [r4, #8]
   13f40:	adds	r3, #1
   13f42:	str	r3, [sp, #80]	; 0x50
   13f44:	adc.w	r3, r2, #0
   13f48:	str	r3, [sp, #84]	; 0x54
   13f4a:	ldrd	r2, r3, [sp, #80]	; 0x50
   13f4e:	ldrd	r0, r1, [sp, #80]	; 0x50
   13f52:	strd	r2, r3, [r4, #8]
   13f56:	ldrd	r2, r3, [r4, #16]
   13f5a:	cmp	r3, r1
   13f5c:	it	eq
   13f5e:	cmpeq	r2, r0
   13f60:	bcs.w	13e42 <rb_first_postorder@@Base+0x878>
   13f64:	b.n	13e60 <rb_first_postorder@@Base+0x896>
   13f66:	cmp.w	r8, #132	; 0x84
   13f6a:	bne.n	13ef4 <rb_first_postorder@@Base+0x92a>
   13f6c:	ldrd	r2, r3, [r5, #8]
   13f70:	cmp	r3, #0
   13f72:	it	eq
   13f74:	cmpeq.w	r2, #256	; 0x100
   13f78:	strd	r2, r3, [sp, #88]	; 0x58
   13f7c:	bcs.n	13f86 <rb_first_postorder@@Base+0x9bc>
   13f7e:	cmp	r3, #0
   13f80:	it	eq
   13f82:	cmpeq	r2, #5
   13f84:	bne.n	13ef4 <rb_first_postorder@@Base+0x92a>
   13f86:	add	r3, sp, #264	; 0x108
   13f88:	add	r3, r9
   13f8a:	ldr.w	r2, [r3, #160]	; 0xa0
   13f8e:	str	r2, [sp, #116]	; 0x74
   13f90:	ldr.w	r2, [r3, #164]	; 0xa4
   13f94:	str	r2, [sp, #120]	; 0x78
   13f96:	ldr.w	r2, [r3, #208]	; 0xd0
   13f9a:	str	r2, [sp, #108]	; 0x6c
   13f9c:	ldr.w	r2, [r3, #212]	; 0xd4
   13fa0:	str	r2, [sp, #112]	; 0x70
   13fa2:	ldr	r2, [r5, #28]
   13fa4:	cmp	r2, #239	; 0xef
   13fa6:	bls.n	14076 <rb_first_postorder@@Base+0xaac>
   13fa8:	ldr.w	r2, [r3, #303]	; 0x12f
   13fac:	add.w	sl, sp, #4256	; 0x10a0
   13fb0:	ldr.w	ip, [r3, #339]	; 0x153
   13fb4:	add.w	sl, sl, #4
   13fb8:	addw	fp, r3, #263	; 0x107
   13fbc:	str	r2, [sp, #96]	; 0x60
   13fbe:	ldr.w	r2, [r3, #307]	; 0x133
   13fc2:	str	r2, [sp, #100]	; 0x64
   13fc4:	add.w	r2, r3, #247	; 0xf7
   13fc8:	ldr	r0, [r2, #0]
   13fca:	adds	r2, #8
   13fcc:	ldr.w	r1, [r2, #-4]
   13fd0:	cmp	r2, fp
   13fd2:	mov	lr, sl
   13fd4:	stmia.w	lr!, {r0, r1}
   13fd8:	mov	sl, lr
   13fda:	bne.n	13fc8 <rb_first_postorder@@Base+0x9fe>
   13fdc:	add.w	sl, sp, #4256	; 0x10a0
   13fe0:	addw	r2, r3, #263	; 0x107
   13fe4:	add.w	sl, sl, #20
   13fe8:	addw	fp, r3, #279	; 0x117
   13fec:	ldr	r0, [r2, #0]
   13fee:	adds	r2, #8
   13ff0:	ldr.w	r1, [r2, #-4]
   13ff4:	cmp	r2, fp
   13ff6:	mov	lr, sl
   13ff8:	stmia.w	lr!, {r0, r1}
   13ffc:	mov	sl, lr
   13ffe:	bne.n	13fec <rb_first_postorder@@Base+0xa22>
   14000:	add.w	lr, sp, #4288	; 0x10c0
   14004:	addw	r2, r3, #279	; 0x117
   14008:	add.w	lr, lr, #4
   1400c:	addw	r3, r3, #295	; 0x127
   14010:	ldr	r0, [r2, #0]
   14012:	adds	r2, #8
   14014:	ldr.w	r1, [r2, #-4]
   14018:	cmp	r2, r3
   1401a:	mov	sl, lr
   1401c:	stmia.w	sl!, {r0, r1}
   14020:	mov	lr, sl
   14022:	bne.n	14010 <rb_first_postorder@@Base+0xa46>
   14024:	add.w	r3, sp, #4288	; 0x10c0
   14028:	movs	r0, #0
   1402a:	adds	r3, #4
   1402c:	str	r3, [sp, #68]	; 0x44
   1402e:	add.w	r3, sp, #4256	; 0x10a0
   14032:	movs	r1, #0
   14034:	adds	r3, #20
   14036:	str	r3, [sp, #64]	; 0x40
   14038:	add.w	r3, sp, #4256	; 0x10a0
   1403c:	strd	r0, r1, [sp, #24]
   14040:	adds	r3, #4
   14042:	strd	ip, r3, [sp, #56]	; 0x38
   14046:	ldr	r3, [sp, #116]	; 0x74
   14048:	str	r3, [sp, #48]	; 0x30
   1404a:	ldr	r3, [sp, #120]	; 0x78
   1404c:	str	r3, [sp, #52]	; 0x34
   1404e:	ldr	r3, [sp, #96]	; 0x60
   14050:	str	r3, [sp, #40]	; 0x28
   14052:	ldr	r3, [sp, #100]	; 0x64
   14054:	str	r3, [sp, #44]	; 0x2c
   14056:	movs	r3, #0
   14058:	strd	r3, r3, [sp, #32]
   1405c:	ldr	r3, [sp, #108]	; 0x6c
   1405e:	str	r3, [sp, #16]
   14060:	ldr	r3, [sp, #112]	; 0x70
   14062:	str	r3, [sp, #20]
   14064:	ldrd	r2, r3, [r5, #16]
   14068:	strd	r0, r1, [sp]
   1406c:	strd	r2, r3, [sp, #8]
   14070:	ldrd	r2, r3, [sp, #88]	; 0x58
   14074:	b.n	13eee <rb_first_postorder@@Base+0x924>
   14076:	add.w	r0, sp, #4256	; 0x10a0
   1407a:	movs	r2, #16
   1407c:	movs	r1, #0
   1407e:	adds	r0, #4
   14080:	blx	8978 <memset@plt+0x4>
   14084:	add.w	r0, sp, #4256	; 0x10a0
   14088:	movs	r2, #16
   1408a:	movs	r1, #0
   1408c:	adds	r0, #20
   1408e:	blx	8978 <memset@plt+0x4>
   14092:	add.w	r0, sp, #4288	; 0x10c0
   14096:	adds	r0, #4
   14098:	movs	r2, #16
   1409a:	movs	r1, #0
   1409c:	blx	8978 <memset@plt+0x4>
   140a0:	mov.w	ip, #0
   140a4:	strd	ip, ip, [sp, #96]	; 0x60
   140a8:	b.n	14024 <rb_first_postorder@@Base+0xa5a>
   140aa:	movs	r7, #0
   140ac:	add	r3, sp, #184	; 0xb8
   140ae:	mov	r2, r7
   140b0:	str	r3, [sp, #104]	; 0x68
   140b2:	add	r3, sp, #264	; 0x108
   140b4:	str	r3, [sp, #124]	; 0x7c
   140b6:	b.n	13f0e <rb_first_postorder@@Base+0x944>
   140b8:	add.w	sp, sp, #4288	; 0x10c0
   140bc:	add	sp, #28
   140be:	vpop	{d8}
   140c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140c6:	nop
   140c8:	str	r4, [sp, #68]	; 0x44
   140ca:	beq.n	140ce <rb_first_postorder@@Base+0xb04>
   140cc:	lsrs	r0, r5, #30
   140ce:	movs	r5, r0
   140d0:	lsls	r4, r4, #8
   140d2:	movs	r0, r0
   140d4:	lsrs	r4, r3, #28
   140d6:	movs	r5, r0
   140d8:	push	{r4, r5, r6, lr}
   140da:	mov	r5, r0
   140dc:	mov	r6, r1
   140de:	bl	13dd2 <rb_first_postorder@@Base+0x808>
   140e2:	mov	r4, r0
   140e4:	cbnz	r0, 140f0 <rb_first_postorder@@Base+0xb26>
   140e6:	mov	r1, r6
   140e8:	mov	r0, r5
   140ea:	ldmia.w	sp!, {r4, r5, r6, lr}
   140ee:	b.n	13dac <rb_first_postorder@@Base+0x7e2>
   140f0:	ldr	r0, [pc, #8]	; (140fc <rb_first_postorder@@Base+0xb32>)
   140f2:	add	r0, pc
   140f4:	bl	17424 <__btrfs_error@@Base>
   140f8:	mov	r0, r4
   140fa:	pop	{r4, r5, r6, pc}
   140fc:	strb	r1, [r4, #15]
   140fe:	movs	r2, r0
   14100:	push	{r0, r1, r2, r3, r4, lr}
   14102:	ldr	r3, [pc, #40]	; (1412c <rb_first_postorder@@Base+0xb62>)
   14104:	ldr	r4, [pc, #40]	; (14130 <rb_first_postorder@@Base+0xb66>)
   14106:	add	r3, pc
   14108:	ldr	r4, [r3, r4]
   1410a:	movs	r3, #0
   1410c:	strd	r2, r1, [sp]
   14110:	movs	r1, #1
   14112:	strd	r0, r3, [sp, #8]
   14116:	ldr	r2, [pc, #28]	; (14134 <rb_first_postorder@@Base+0xb6a>)
   14118:	ldr	r3, [pc, #28]	; (14138 <rb_first_postorder@@Base+0xb6e>)
   1411a:	add	r2, pc
   1411c:	ldr	r0, [r4, #0]
   1411e:	add	r3, pc
   14120:	blx	8a14 <__fprintf_chk@plt+0x4>
   14124:	bl	13700 <rb_first_postorder@@Base+0x136>
   14128:	blx	8b34 <abort@plt>
   1412c:	lsrs	r2, r0, #18
   1412e:	movs	r5, r0
   14130:	lsls	r4, r6, #8
   14132:	movs	r0, r0
   14134:	ldrsb	r5, [r6, r6]
   14136:	movs	r2, r0
   14138:	strb	r2, [r2, #15]
   1413a:	movs	r2, r0
   1413c:	push	{r4, lr}
   1413e:	subs	r1, #1
   14140:	ldr	r4, [pc, #288]	; (14264 <rb_first_postorder@@Base+0xc9a>)
   14142:	sub	sp, #328	; 0x148
   14144:	ldr	r2, [pc, #288]	; (14268 <rb_first_postorder@@Base+0xc9e>)
   14146:	add	r4, pc
   14148:	ldr	r3, [pc, #288]	; (1426c <rb_first_postorder@@Base+0xca2>)
   1414a:	ldr	r2, [r4, r2]
   1414c:	add	r3, pc
   1414e:	ldr	r2, [r2, #0]
   14150:	str	r2, [sp, #324]	; 0x144
   14152:	mov.w	r2, #0
   14156:	cmp	r1, #8
   14158:	bhi.n	14168 <rb_first_postorder@@Base+0xb9e>
   1415a:	tbb	[pc, r1]
   1415e:	subs	r6, r2, r4
   14160:	movs	r5, #32
   14162:	ldrb	r2, [r5, r0]
   14164:	ldr	r0, [pc, #380]	; (142e4 <btrfs_list_setup_print_column@@Base+0x30>)
   14166:	lsls	r2, r4, #1
   14168:	ldr	r1, [pc, #260]	; (14270 <rb_first_postorder@@Base+0xca6>)
   1416a:	ldrd	r2, r3, [r0, #24]
   1416e:	add	r1, pc
   14170:	movs	r0, #1
   14172:	blx	89ec <__printf_chk@plt+0x4>
   14176:	ldr	r2, [pc, #252]	; (14274 <rb_first_postorder@@Base+0xcaa>)
   14178:	ldr	r3, [pc, #236]	; (14268 <rb_first_postorder@@Base+0xc9e>)
   1417a:	add	r2, pc
   1417c:	ldr	r3, [r2, r3]
   1417e:	ldr	r2, [r3, #0]
   14180:	ldr	r3, [sp, #324]	; 0x144
   14182:	eors	r2, r3
   14184:	beq.n	1425e <rb_first_postorder@@Base+0xc94>
   14186:	blx	86b8 <__stack_chk_fail@plt>
   1418a:	ldr	r1, [pc, #236]	; (14278 <rb_first_postorder@@Base+0xcae>)
   1418c:	ldrd	r2, r3, [r0, #72]	; 0x48
   14190:	add	r1, pc
   14192:	b.n	14170 <rb_first_postorder@@Base+0xba6>
   14194:	ldr	r1, [pc, #228]	; (1427c <rb_first_postorder@@Base+0xcb2>)
   14196:	ldrd	r2, r3, [r0, #80]	; 0x50
   1419a:	add	r1, pc
   1419c:	b.n	14170 <rb_first_postorder@@Base+0xba6>
   1419e:	ldr	r1, [pc, #224]	; (14280 <rb_first_postorder@@Base+0xcb6>)
   141a0:	ldrd	r2, r3, [r0, #48]	; 0x30
   141a4:	add	r1, pc
   141a6:	b.n	14170 <rb_first_postorder@@Base+0xba6>
   141a8:	ldr	r1, [pc, #216]	; (14284 <rb_first_postorder@@Base+0xcba>)
   141aa:	ldrd	r2, r3, [r0, #64]	; 0x40
   141ae:	add	r1, pc
   141b0:	b.n	14170 <rb_first_postorder@@Base+0xba6>
   141b2:	ldr	r3, [r0, #88]	; 0x58
   141b4:	add	r4, sp, #68	; 0x44
   141b6:	cbz	r3, 141e2 <rb_first_postorder@@Base+0xc18>
   141b8:	add	r3, sp, #24
   141ba:	adds	r0, #88	; 0x58
   141bc:	str	r3, [sp, #20]
   141be:	mov	r1, r3
   141c0:	blx	86e0 <localtime_r@plt>
   141c4:	ldr	r2, [pc, #192]	; (14288 <rb_first_postorder@@Base+0xcbe>)
   141c6:	ldr	r3, [sp, #20]
   141c8:	mov.w	r1, #256	; 0x100
   141cc:	add	r2, pc
   141ce:	mov	r0, r4
   141d0:	blx	8854 <strftime@plt>
   141d4:	ldr	r1, [pc, #180]	; (1428c <rb_first_postorder@@Base+0xcc2>)
   141d6:	mov	r2, r4
   141d8:	add	r1, pc
   141da:	movs	r0, #1
   141dc:	blx	89ec <__printf_chk@plt+0x4>
   141e0:	b.n	14176 <rb_first_postorder@@Base+0xbac>
   141e2:	ldr	r1, [pc, #172]	; (14290 <rb_first_postorder@@Base+0xcc6>)
   141e4:	mov	r0, r4
   141e6:	add	r1, pc
   141e8:	blx	87a0 <strcpy@plt>
   141ec:	b.n	141d4 <rb_first_postorder@@Base+0xc0a>
   141ee:	add.w	r4, r0, #92	; 0x5c
   141f2:	mov	r0, r4
   141f4:	blx	8968 <uuid_is_null@plt>
   141f8:	cbz	r0, 1420c <rb_first_postorder@@Base+0xc42>
   141fa:	ldr	r1, [pc, #152]	; (14294 <rb_first_postorder@@Base+0xcca>)
   141fc:	add	r0, sp, #68	; 0x44
   141fe:	add	r1, pc
   14200:	blx	87a0 <strcpy@plt>
   14204:	ldr	r1, [pc, #144]	; (14298 <rb_first_postorder@@Base+0xcce>)
   14206:	add	r2, sp, #68	; 0x44
   14208:	add	r1, pc
   1420a:	b.n	141da <rb_first_postorder@@Base+0xc10>
   1420c:	add	r1, sp, #68	; 0x44
   1420e:	mov	r0, r4
   14210:	blx	8580 <uuid_unparse@plt>
   14214:	b.n	14204 <rb_first_postorder@@Base+0xc3a>
   14216:	add.w	r4, r0, #108	; 0x6c
   1421a:	b.n	141f2 <rb_first_postorder@@Base+0xc28>
   1421c:	add.w	r4, r0, #124	; 0x7c
   14220:	b.n	141f2 <rb_first_postorder@@Base+0xc28>
   14222:	ldr.w	r2, [r0, #148]	; 0x94
   14226:	cbnz	r2, 14258 <rb_first_postorder@@Base+0xc8e>
   14228:	ldr	r2, [pc, #112]	; (1429c <rb_first_postorder@@Base+0xcd2>)
   1422a:	movs	r1, #1
   1422c:	ldr	r0, [r3, r2]
   1422e:	ldr	r3, [pc, #112]	; (142a0 <rb_first_postorder@@Base+0xcd6>)
   14230:	ldr	r2, [pc, #112]	; (142a4 <rb_first_postorder@@Base+0xcda>)
   14232:	add	r3, pc
   14234:	str	r3, [sp, #8]
   14236:	ldr	r3, [pc, #112]	; (142a8 <rb_first_postorder@@Base+0xcde>)
   14238:	add	r2, pc
   1423a:	str	r1, [sp, #12]
   1423c:	add	r3, pc
   1423e:	str	r3, [sp, #4]
   14240:	movw	r3, #1380	; 0x564
   14244:	str	r3, [sp, #0]
   14246:	ldr	r3, [pc, #100]	; (142ac <rb_first_postorder@@Base+0xce2>)
   14248:	ldr	r0, [r0, #0]
   1424a:	add	r3, pc
   1424c:	blx	8a14 <__fprintf_chk@plt+0x4>
   14250:	bl	13700 <rb_first_postorder@@Base+0x136>
   14254:	blx	8b34 <abort@plt>
   14258:	ldr	r1, [pc, #84]	; (142b0 <rb_first_postorder@@Base+0xce6>)
   1425a:	add	r1, pc
   1425c:	b.n	141da <rb_first_postorder@@Base+0xc10>
   1425e:	add	sp, #328	; 0x148
   14260:	pop	{r4, pc}
   14262:	nop
   14264:	lsrs	r2, r0, #17
   14266:	movs	r5, r0
   14268:	lsls	r4, r4, #8
   1426a:	movs	r0, r0
   1426c:	lsrs	r4, r7, #16
   1426e:	movs	r5, r0
   14270:			; <UNDEFINED> instruction: 0xb87f
   14272:	movs	r2, r0
   14274:	lsrs	r6, r1, #16
   14276:	movs	r5, r0
   14278:			; <UNDEFINED> instruction: 0xb85d
   1427a:	movs	r2, r0
   1427c:			; <UNDEFINED> instruction: 0xb853
   1427e:	movs	r2, r0
   14280:			; <UNDEFINED> instruction: 0xb849
   14282:	movs	r2, r0
   14284:			; <UNDEFINED> instruction: 0xb83f
   14286:	movs	r2, r0
   14288:	strb	r1, [r6, #12]
   1428a:	movs	r2, r0
   1428c:	revsh	r4, r7
   1428e:	movs	r2, r0
   14290:	ldr	r3, [r7, r4]
   14292:	movs	r2, r0
   14294:	ldr	r3, [r4, r4]
   14296:	movs	r2, r0
   14298:	strb	r1, [r0, #12]
   1429a:	movs	r2, r0
   1429c:	lsls	r4, r6, #8
   1429e:	movs	r0, r0
   142a0:	strb	r5, [r3, #11]
   142a2:	movs	r2, r0
   142a4:	strb	r2, [r5, r5]
   142a6:	movs	r2, r0
   142a8:	strb	r5, [r5, #19]
   142aa:	movs	r2, r0
   142ac:	strb	r6, [r4, #10]
   142ae:	movs	r2, r0
   142b0:	rev16	r2, r7
   142b2:	movs	r2, r0

000142b4 <btrfs_list_setup_print_column@@Base>:
   142b4:	cmp	r0, #10
   142b6:	push	{r3, lr}
   142b8:	bls.n	142ca <btrfs_list_setup_print_column@@Base+0x16>
   142ba:	ldr	r1, [pc, #56]	; (142f4 <btrfs_list_setup_print_column@@Base+0x40>)
   142bc:	movs	r2, #126	; 0x7e
   142be:	ldr	r0, [pc, #56]	; (142f8 <btrfs_list_setup_print_column@@Base+0x44>)
   142c0:	add	r1, pc
   142c2:	adds	r1, #23
   142c4:	add	r0, pc
   142c6:	bl	14100 <rb_first_postorder@@Base+0xb36>
   142ca:	beq.n	142dc <btrfs_list_setup_print_column@@Base+0x28>
   142cc:	ldr	r3, [pc, #44]	; (142fc <btrfs_list_setup_print_column@@Base+0x48>)
   142ce:	movs	r2, #12
   142d0:	add	r3, pc
   142d2:	mla	r0, r2, r0, r3
   142d6:	movs	r3, #1
   142d8:	str	r3, [r0, #8]
   142da:	pop	{r3, pc}
   142dc:	ldr	r2, [pc, #32]	; (14300 <btrfs_list_setup_print_column@@Base+0x4c>)
   142de:	movs	r3, #0
   142e0:	movs	r1, #1
   142e2:	add	r2, pc
   142e4:	adds	r3, #1
   142e6:	str	r1, [r2, #8]
   142e8:	cmp	r3, #10
   142ea:	add.w	r2, r2, #12
   142ee:	bne.n	142e4 <btrfs_list_setup_print_column@@Base+0x30>
   142f0:	b.n	142da <btrfs_list_setup_print_column@@Base+0x26>
   142f2:	nop
   142f4:	strb	r1, [r5, #17]
   142f6:	movs	r2, r0
   142f8:	strb	r4, [r3, #9]
   142fa:	movs	r2, r0
   142fc:	subs	r0, r2, #1
   142fe:	movs	r5, r0
   14300:	subs	r6, r7, #0
   14302:	movs	r5, r0

00014304 <btrfs_list_alloc_comparer_set@@Base>:
   14304:	push	{r4, lr}
   14306:	movs	r1, #72	; 0x48
   14308:	ldr	r4, [pc, #36]	; (14330 <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   1430a:	movs	r0, #1
   1430c:	add	r4, pc
   1430e:	blx	8544 <calloc@plt+0x4>
   14312:	cbnz	r0, 14328 <btrfs_list_alloc_comparer_set@@Base+0x24>
   14314:	ldr	r3, [pc, #28]	; (14334 <btrfs_list_alloc_comparer_set@@Base+0x30>)
   14316:	ldr	r0, [pc, #32]	; (14338 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   14318:	ldr	r3, [r4, r3]
   1431a:	add	r0, pc
   1431c:	ldr	r1, [r3, #0]
   1431e:	blx	8b1c <fputs@plt+0x4>
   14322:	movs	r0, #1
   14324:	blx	88e4 <exit@plt>
   14328:	movs	r2, #8
   1432a:	str	r2, [r0, #0]
   1432c:	pop	{r4, pc}
   1432e:	nop
   14330:	lsrs	r4, r7, #9
   14332:	movs	r5, r0
   14334:	lsls	r4, r6, #8
   14336:	movs	r0, r0
   14338:	strb	r5, [r4, #4]
   1433a:	movs	r2, r0

0001433c <btrfs_list_get_default_subvolume@@Base>:
   1433c:	push	{r4, r5, r6, r7, lr}
   1433e:	mov	r5, r1
   14340:	ldr	r1, [pc, #184]	; (143fc <btrfs_list_get_default_subvolume@@Base+0xc0>)
   14342:	sub.w	sp, sp, #4096	; 0x1000
   14346:	ldr	r2, [pc, #184]	; (14400 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14348:	sub	sp, #12
   1434a:	add	r1, pc
   1434c:	add.w	r3, sp, #4096	; 0x1000
   14350:	add	r7, sp, #8
   14352:	adds	r3, #4
   14354:	ldr	r2, [r1, r2]
   14356:	mov	r4, sp
   14358:	mov	r6, r0
   1435a:	mov	r0, r4
   1435c:	ldr	r2, [r2, #0]
   1435e:	str	r2, [r3, #0]
   14360:	mov.w	r2, #0
   14364:	movs	r1, #0
   14366:	mov.w	r2, #4096	; 0x1000
   1436a:	blx	8978 <memset@plt+0x4>
   1436e:	movs	r2, #1
   14370:	movs	r3, #0
   14372:	ldr	r1, [pc, #132]	; (143f8 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   14374:	strd	r2, r3, [r7, #-8]
   14378:	mov	r0, r6
   1437a:	movs	r2, #6
   1437c:	movs	r3, #1
   1437e:	str	r3, [r7, #56]	; 0x38
   14380:	movs	r3, #0
   14382:	strd	r2, r3, [r7, #8]
   14386:	strd	r2, r3, [r4, #8]
   1438a:	mov.w	r2, #4294967295	; 0xffffffff
   1438e:	movs	r3, #84	; 0x54
   14390:	strd	r3, r3, [r7, #48]	; 0x30
   14394:	mov.w	r3, #4294967295	; 0xffffffff
   14398:	strd	r2, r3, [r7, #24]
   1439c:	strd	r2, r3, [r7, #40]	; 0x28
   143a0:	mov	r2, r4
   143a2:	blx	8764 <ioctl@plt>
   143a6:	cmp	r0, #0
   143a8:	blt.n	143d0 <btrfs_list_get_default_subvolume@@Base+0x94>
   143aa:	ldr	r3, [r7, #56]	; 0x38
   143ac:	cbz	r3, 143ea <btrfs_list_get_default_subvolume@@Base+0xae>
   143ae:	ldr	r3, [r7, #120]	; 0x78
   143b0:	cmp	r3, #84	; 0x54
   143b2:	bne.n	143ea <btrfs_list_get_default_subvolume@@Base+0xae>
   143b4:	ldr	r0, [pc, #76]	; (14404 <btrfs_list_get_default_subvolume@@Base+0xc8>)
   143b6:	add.w	r1, sp, #166	; 0xa6
   143ba:	ldrh.w	r2, [r7, #155]	; 0x9b
   143be:	add	r0, pc
   143c0:	blx	8b28 <strncmp@plt>
   143c4:	cbnz	r0, 143ea <btrfs_list_get_default_subvolume@@Base+0xae>
   143c6:	ldrd	r2, r3, [r7, #128]	; 0x80
   143ca:	movs	r0, #0
   143cc:	strd	r2, r3, [r5]
   143d0:	ldr	r1, [pc, #52]	; (14408 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   143d2:	add.w	r3, sp, #4096	; 0x1000
   143d6:	ldr	r2, [pc, #40]	; (14400 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   143d8:	adds	r3, #4
   143da:	add	r1, pc
   143dc:	ldr	r2, [r1, r2]
   143de:	ldr	r1, [r2, #0]
   143e0:	ldr	r2, [r3, #0]
   143e2:	eors	r1, r2
   143e4:	beq.n	143f0 <btrfs_list_get_default_subvolume@@Base+0xb4>
   143e6:	blx	86b8 <__stack_chk_fail@plt>
   143ea:	movs	r2, #0
   143ec:	movs	r3, #0
   143ee:	b.n	143ca <btrfs_list_get_default_subvolume@@Base+0x8e>
   143f0:	add.w	sp, sp, #4096	; 0x1000
   143f4:	add	sp, #12
   143f6:	pop	{r4, r5, r6, r7, pc}
   143f8:	str	r4, [sp, #68]	; 0x44
   143fa:	beq.n	143fe <btrfs_list_get_default_subvolume@@Base+0xc2>
   143fc:	lsrs	r6, r7, #8
   143fe:	movs	r5, r0
   14400:	lsls	r4, r4, #8
   14402:	movs	r0, r0
   14404:	strb	r2, [r1, #6]
   14406:	movs	r2, r0
   14408:	lsrs	r6, r5, #6
   1440a:	movs	r5, r0

0001440c <btrfs_list_alloc_filter_set@@Base>:
   1440c:	push	{r4, lr}
   1440e:	mov.w	r1, #432	; 0x1b0
   14412:	ldr	r4, [pc, #36]	; (14438 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   14414:	movs	r0, #1
   14416:	add	r4, pc
   14418:	blx	8544 <calloc@plt+0x4>
   1441c:	cbnz	r0, 14432 <btrfs_list_alloc_filter_set@@Base+0x26>
   1441e:	ldr	r3, [pc, #28]	; (1443c <btrfs_list_alloc_filter_set@@Base+0x30>)
   14420:	ldr	r0, [pc, #28]	; (14440 <btrfs_list_alloc_filter_set@@Base+0x34>)
   14422:	ldr	r3, [r4, r3]
   14424:	add	r0, pc
   14426:	ldr	r1, [r3, #0]
   14428:	blx	8b1c <fputs@plt+0x4>
   1442c:	movs	r0, #1
   1442e:	blx	88e4 <exit@plt>
   14432:	movs	r2, #26
   14434:	str	r2, [r0, #0]
   14436:	pop	{r4, pc}
   14438:	lsrs	r2, r6, #5
   1443a:	movs	r5, r0
   1443c:	lsls	r4, r6, #8
   1443e:	movs	r0, r0
   14440:	strb	r3, [r3, #0]
   14442:	movs	r2, r0

00014444 <btrfs_list_setup_filter@@Base>:
   14444:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14448:	mov	r9, r0
   1444a:	ldr	r4, [r0, #0]
   1444c:	mov	r6, r1
   1444e:	ldr.w	sl, [pc, #208]	; 14520 <btrfs_list_setup_filter@@Base+0xdc>
   14452:	mov	r8, r2
   14454:	mov	r7, r3
   14456:	add	sl, pc
   14458:	cbnz	r4, 1446c <btrfs_list_setup_filter@@Base+0x28>
   1445a:	ldr	r1, [pc, #200]	; (14524 <btrfs_list_setup_filter@@Base+0xe0>)
   1445c:	movw	r2, #1210	; 0x4ba
   14460:	ldr	r0, [pc, #196]	; (14528 <btrfs_list_setup_filter@@Base+0xe4>)
   14462:	add	r1, pc
   14464:	adds	r1, #53	; 0x35
   14466:	add	r0, pc
   14468:	bl	14100 <rb_first_postorder@@Base+0xb36>
   1446c:	cmp	r1, #12
   1446e:	bls.n	14480 <btrfs_list_setup_filter@@Base+0x3c>
   14470:	ldr	r1, [pc, #184]	; (1452c <btrfs_list_setup_filter@@Base+0xe8>)
   14472:	movw	r2, #1211	; 0x4bb
   14476:	ldr	r0, [pc, #184]	; (14530 <btrfs_list_setup_filter@@Base+0xec>)
   14478:	add	r1, pc
   1447a:	adds	r1, #53	; 0x35
   1447c:	add	r0, pc
   1447e:	b.n	14468 <btrfs_list_setup_filter@@Base+0x24>
   14480:	ldrd	r3, r1, [r4]
   14484:	cmp	r1, r3
   14486:	ble.n	14498 <btrfs_list_setup_filter@@Base+0x54>
   14488:	ldr	r1, [pc, #168]	; (14534 <btrfs_list_setup_filter@@Base+0xf0>)
   1448a:	movw	r2, #1212	; 0x4bc
   1448e:	ldr	r0, [pc, #168]	; (14538 <btrfs_list_setup_filter@@Base+0xf4>)
   14490:	add	r1, pc
   14492:	adds	r1, #53	; 0x35
   14494:	add	r0, pc
   14496:	b.n	14468 <btrfs_list_setup_filter@@Base+0x24>
   14498:	bne.n	144e2 <btrfs_list_setup_filter@@Base+0x9e>
   1449a:	adds	r1, #27
   1449c:	mov	r0, r4
   1449e:	lsls	r1, r1, #4
   144a0:	blx	86d4 <realloc@plt+0x4>
   144a4:	mov	r5, r0
   144a6:	cbnz	r0, 144c4 <btrfs_list_setup_filter@@Base+0x80>
   144a8:	ldr	r3, [pc, #144]	; (1453c <btrfs_list_setup_filter@@Base+0xf8>)
   144aa:	ldr	r0, [pc, #148]	; (14540 <btrfs_list_setup_filter@@Base+0xfc>)
   144ac:	ldr.w	r3, [sl, r3]
   144b0:	add	r0, pc
   144b2:	ldr	r1, [r3, #0]
   144b4:	blx	8b1c <fputs@plt+0x4>
   144b8:	mov	r0, r4
   144ba:	blx	85dc <free@plt+0x4>
   144be:	movs	r0, #1
   144c0:	blx	88e4 <exit@plt>
   144c4:	ldr	r0, [r0, #0]
   144c6:	mov.w	r2, #416	; 0x1a0
   144ca:	movs	r1, #0
   144cc:	mov	r4, r5
   144ce:	adds	r0, #1
   144d0:	add.w	r0, r5, r0, lsl #4
   144d4:	blx	8978 <memset@plt+0x4>
   144d8:	ldr	r3, [r5, #0]
   144da:	adds	r3, #26
   144dc:	str	r3, [r5, #0]
   144de:	str.w	r5, [r9]
   144e2:	ldr	r0, [r4, #4]
   144e4:	add.w	r3, r4, r0, lsl #4
   144e8:	lsls	r1, r0, #4
   144ea:	ldr	r2, [r3, #16]
   144ec:	cbz	r2, 144fe <btrfs_list_setup_filter@@Base+0xba>
   144ee:	ldr	r1, [pc, #84]	; (14544 <btrfs_list_setup_filter@@Base+0x100>)
   144f0:	movw	r2, #1234	; 0x4d2
   144f4:	ldr	r0, [pc, #80]	; (14548 <btrfs_list_setup_filter@@Base+0x104>)
   144f6:	add	r1, pc
   144f8:	adds	r1, #53	; 0x35
   144fa:	add	r0, pc
   144fc:	b.n	14468 <btrfs_list_setup_filter@@Base+0x24>
   144fe:	cmp	r6, #12
   14500:	add	r1, r4
   14502:	add.w	r0, r0, #1
   14506:	itt	eq
   14508:	moveq	r2, #1
   1450a:	streq	r2, [r4, #8]
   1450c:	ldr	r2, [pc, #60]	; (1454c <btrfs_list_setup_filter@@Base+0x108>)
   1450e:	add	r2, pc
   14510:	ldr.w	r2, [r2, r6, lsl #2]
   14514:	str	r2, [r3, #16]
   14516:	strd	r8, r7, [r1, #24]
   1451a:	str	r0, [r4, #4]
   1451c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   14520:	lsrs	r2, r6, #4
   14522:	movs	r5, r0
   14524:	strb	r7, [r0, #11]
   14526:	movs	r2, r0
   14528:	strb	r3, [r5, r6]
   1452a:	movs	r2, r0
   1452c:	strb	r1, [r6, #10]
   1452e:	movs	r2, r0
   14530:	strb	r4, [r2, #3]
   14532:	movs	r2, r0
   14534:	strb	r1, [r3, #10]
   14536:	movs	r2, r0
   14538:	ldrsb	r7, [r1, r0]
   1453a:	movs	r2, r0
   1453c:	lsls	r4, r6, #8
   1453e:	movs	r0, r0
   14540:	ldr	r7, [r1, #120]	; 0x78
   14542:	movs	r2, r0
   14544:	strb	r3, [r6, #8]
   14546:	movs	r2, r0
   14548:	strb	r5, [r0, r7]
   1454a:	movs	r2, r0
   1454c:	lsls	r6, r1, #10
   1454e:	movs	r5, r0

00014550 <btrfs_list_find_updated_files@@Base>:
   14550:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14554:	mov	r7, r2
   14556:	vpush	{d8-d9}
   1455a:	mov	r6, r3
   1455c:	ldr	r1, [pc, #904]	; (148e8 <btrfs_list_find_updated_files@@Base+0x398>)
   1455e:	mov.w	r9, #4096	; 0x1000
   14562:	ldr	r2, [pc, #904]	; (148ec <btrfs_list_find_updated_files@@Base+0x39c>)
   14564:	add	r1, pc
   14566:	vmov	s16, r0
   1456a:	sub.w	sp, sp, #12480	; 0x30c0
   1456e:	sub	sp, #20
   14570:	ldr	r2, [r1, r2]
   14572:	add.w	r3, sp, #12480	; 0x30c0
   14576:	add.w	r8, sp, #200	; 0xc8
   1457a:	ldr	r2, [r2, #0]
   1457c:	str	r2, [r3, #12]
   1457e:	mov.w	r2, #0
   14582:	adds	r3, #12
   14584:	add	r3, sp, #144	; 0x90
   14586:	movs	r2, #53	; 0x35
   14588:	movs	r1, #0
   1458a:	str	r3, [sp, #40]	; 0x28
   1458c:	mov	r0, r3
   1458e:	add	r4, sp, #208	; 0xd0
   14590:	blx	8978 <memset@plt+0x4>
   14594:	mov	r2, r9
   14596:	movs	r1, #0
   14598:	mov	r0, r8
   1459a:	blx	8978 <memset@plt+0x4>
   1459e:	movs	r3, #108	; 0x6c
   145a0:	str.w	r3, [r8, #60]	; 0x3c
   145a4:	add.w	r3, sp, #12544	; 0x3100
   145a8:	adds	r3, #8
   145aa:	add.w	r5, sp, #4288	; 0x10c0
   145ae:	adds	r5, #16
   145b0:	strd	r7, r6, [r4, #-8]
   145b4:	sub.w	fp, r5, #8
   145b8:	ldrd	r3, r4, [r3]
   145bc:	mov	r2, r9
   145be:	movs	r1, #0
   145c0:	mov	r0, fp
   145c2:	mov.w	r6, #4294967295	; 0xffffffff
   145c6:	mov.w	r7, #4294967295	; 0xffffffff
   145ca:	strd	r3, r4, [r8, #40]	; 0x28
   145ce:	strd	r6, r7, [r8, #16]
   145d2:	movs	r4, #0
   145d4:	strd	r6, r7, [r8, #32]
   145d8:	strd	r6, r7, [r8, #48]	; 0x30
   145dc:	str.w	r9, [r8, #64]	; 0x40
   145e0:	blx	8978 <memset@plt+0x4>
   145e4:	vmov	r0, s16
   145e8:	mov	r2, fp
   145ea:	ldr	r1, [pc, #756]	; (148e0 <btrfs_list_find_updated_files@@Base+0x390>)
   145ec:	mov.w	r3, #256	; 0x100
   145f0:	strd	r3, r4, [fp, #8]
   145f4:	blx	8764 <ioctl@plt>
   145f8:	movs	r4, #0
   145fa:	mov.w	r3, #256	; 0x100
   145fe:	cmp	r0, #0
   14600:	bge.n	14682 <btrfs_list_find_updated_files@@Base+0x132>
   14602:	ldr	r0, [pc, #748]	; (148f0 <btrfs_list_find_updated_files@@Base+0x3a0>)
   14604:	mov	r2, r3
   14606:	mov	r3, r4
   14608:	add	r0, pc
   1460a:	bl	17424 <__btrfs_error@@Base>
   1460e:	movs	r3, #0
   14610:	movs	r4, #0
   14612:	strd	r3, r4, [sp, #56]	; 0x38
   14616:	movs	r3, #0
   14618:	movs	r2, #0
   1461a:	strd	r2, r3, [sp, #72]	; 0x48
   1461e:	movs	r4, #0
   14620:	strd	r2, r3, [sp, #88]	; 0x58
   14624:	mov	r7, r4
   14626:	ldr	r3, [pc, #716]	; (148f4 <btrfs_list_find_updated_files@@Base+0x3a4>)
   14628:	add	r3, pc
   1462a:	vmov	s18, r3
   1462e:	vmov	r0, s16
   14632:	mov	r2, r8
   14634:	ldr	r1, [pc, #684]	; (148e4 <btrfs_list_find_updated_files@@Base+0x394>)
   14636:	blx	8764 <ioctl@plt>
   1463a:	subs	r3, r0, #0
   1463c:	vmov	s17, r3
   14640:	bge.w	147b0 <btrfs_list_find_updated_files@@Base+0x260>
   14644:	ldr	r0, [pc, #688]	; (148f8 <btrfs_list_find_updated_files@@Base+0x3a8>)
   14646:	add	r0, pc
   14648:	bl	17424 <__btrfs_error@@Base>
   1464c:	mov	r0, r7
   1464e:	blx	85dc <free@plt+0x4>
   14652:	mov	r0, r4
   14654:	blx	85dc <free@plt+0x4>
   14658:	ldr	r1, [pc, #672]	; (148fc <btrfs_list_find_updated_files@@Base+0x3ac>)
   1465a:	ldrd	r2, r3, [sp, #56]	; 0x38
   1465e:	movs	r0, #1
   14660:	add	r1, pc
   14662:	blx	89ec <__printf_chk@plt+0x4>
   14666:	ldr	r1, [pc, #664]	; (14900 <btrfs_list_find_updated_files@@Base+0x3b0>)
   14668:	ldr	r2, [pc, #640]	; (148ec <btrfs_list_find_updated_files@@Base+0x39c>)
   1466a:	add.w	r3, sp, #12480	; 0x30c0
   1466e:	add	r1, pc
   14670:	adds	r3, #12
   14672:	ldr	r2, [r1, r2]
   14674:	ldr	r1, [r2, #0]
   14676:	ldr	r2, [r3, #0]
   14678:	eors	r1, r2
   1467a:	beq.w	14b5a <btrfs_list_find_updated_files@@Base+0x60a>
   1467e:	blx	86b8 <__stack_chk_fail@plt>
   14682:	add.w	sl, sp, #8384	; 0x20c0
   14686:	mov	r2, r9
   14688:	add.w	sl, sl, #16
   1468c:	movs	r1, #0
   1468e:	sub.w	r4, sl, #8
   14692:	mov	r0, r4
   14694:	blx	8978 <memset@plt+0x4>
   14698:	ldrd	r2, r3, [r5, #-8]
   1469c:	movs	r0, #1
   1469e:	movs	r1, #0
   146a0:	strd	r0, r1, [sl, #-8]
   146a4:	strd	r2, r3, [r4, #8]
   146a8:	strd	r2, r3, [r4, #16]
   146ac:	movs	r3, #132	; 0x84
   146ae:	movs	r2, #0
   146b0:	strd	r3, r3, [r4, #56]	; 0x38
   146b4:	movs	r3, #0
   146b6:	strd	r2, r3, [sp, #56]	; 0x38
   146ba:	ldr	r3, [sp, #40]	; 0x28
   146bc:	strd	r6, r7, [r4, #32]
   146c0:	sub.w	r5, r3, #32
   146c4:	strd	r6, r7, [r4, #48]	; 0x30
   146c8:	str.w	r9, [r4, #64]	; 0x40
   146cc:	vmov	r0, s16
   146d0:	mov	r2, r4
   146d2:	ldr	r1, [pc, #528]	; (148e4 <btrfs_list_find_updated_files@@Base+0x394>)
   146d4:	blx	8764 <ioctl@plt>
   146d8:	cmp	r0, #0
   146da:	bge.n	146e6 <btrfs_list_find_updated_files@@Base+0x196>
   146dc:	ldr	r0, [pc, #548]	; (14904 <btrfs_list_find_updated_files@@Base+0x3b4>)
   146de:	add	r0, pc
   146e0:	bl	17424 <__btrfs_error@@Base>
   146e4:	b.n	1460e <btrfs_list_find_updated_files@@Base+0xbe>
   146e6:	ldr.w	ip, [r4, #64]	; 0x40
   146ea:	cmp.w	ip, #0
   146ee:	beq.n	14616 <btrfs_list_find_updated_files@@Base+0xc6>
   146f0:	movs	r7, #0
   146f2:	add.w	r3, sl, #96	; 0x60
   146f6:	mov	r6, r7
   146f8:	str	r3, [sp, #40]	; 0x28
   146fa:	add.w	r3, sp, #8448	; 0x2100
   146fe:	adds	r3, #48	; 0x30
   14700:	str	r3, [sp, #48]	; 0x30
   14702:	ldr	r3, [sp, #40]	; 0x28
   14704:	mov	lr, r5
   14706:	add	r3, r6
   14708:	add.w	r9, r3, #32
   1470c:	ldr	r0, [r3, #0]
   1470e:	adds	r3, #8
   14710:	ldr.w	r1, [r3, #-4]
   14714:	cmp	r3, r9
   14716:	mov	r2, lr
   14718:	stmia	r2!, {r0, r1}
   1471a:	mov	lr, r2
   1471c:	bne.n	1470c <btrfs_list_find_updated_files@@Base+0x1bc>
   1471e:	ldrd	r0, r1, [r5, #16]
   14722:	add.w	lr, r6, #32
   14726:	ldrd	r2, r3, [r5, #8]
   1472a:	ldr.w	r9, [r5, #24]
   1472e:	strd	r0, r1, [r4, #24]
   14732:	ldrd	r0, r1, [fp]
   14736:	ldr	r6, [r5, #28]
   14738:	cmp	r1, r3
   1473a:	strd	r2, r3, [r4, #8]
   1473e:	it	eq
   14740:	cmpeq	r0, r2
   14742:	add	r6, lr
   14744:	str.w	r9, [r4, #56]	; 0x38
   14748:	bcs.n	1477e <btrfs_list_find_updated_files@@Base+0x22e>
   1474a:	ldrd	r0, r1, [r4, #24]
   1474e:	adds	r6, r1, #1
   14750:	it	eq
   14752:	cmpeq.w	r0, #4294967295	; 0xffffffff
   14756:	beq.w	14616 <btrfs_list_find_updated_files@@Base+0xc6>
   1475a:	adds	r2, r0, #1
   1475c:	adc.w	r3, r1, #0
   14760:	strd	r2, r3, [r4, #24]
   14764:	ldr	r3, [r4, #56]	; 0x38
   14766:	cmp	r3, #132	; 0x84
   14768:	bne.w	14616 <btrfs_list_find_updated_files@@Base+0xc6>
   1476c:	ldrd	r0, r1, [r4, #8]
   14770:	ldrd	r2, r3, [fp]
   14774:	cmp	r1, r3
   14776:	it	eq
   14778:	cmpeq	r0, r2
   1477a:	beq.n	146cc <btrfs_list_find_updated_files@@Base+0x17c>
   1477c:	b.n	14616 <btrfs_list_find_updated_files@@Base+0xc6>
   1477e:	cmp	r3, r1
   14780:	it	eq
   14782:	cmpeq	r2, r0
   14784:	bne.n	147a8 <btrfs_list_find_updated_files@@Base+0x258>
   14786:	cmp.w	r9, #132	; 0x84
   1478a:	bne.n	147a8 <btrfs_list_find_updated_files@@Base+0x258>
   1478c:	ldr	r3, [sp, #48]	; 0x30
   1478e:	ldrd	r0, r1, [sp, #56]	; 0x38
   14792:	add	lr, r3
   14794:	ldr.w	r2, [lr, #160]	; 0xa0
   14798:	ldr.w	r3, [lr, #164]	; 0xa4
   1479c:	cmp	r1, r3
   1479e:	it	eq
   147a0:	cmpeq	r0, r2
   147a2:	it	cc
   147a4:	strdcc	r2, r3, [sp, #56]	; 0x38
   147a8:	adds	r7, #1
   147aa:	cmp	r7, ip
   147ac:	bne.n	14702 <btrfs_list_find_updated_files@@Base+0x1b2>
   147ae:	b.n	1474a <btrfs_list_find_updated_files@@Base+0x1fa>
   147b0:	ldr.w	r3, [r8, #64]	; 0x40
   147b4:	cmp	r3, #0
   147b6:	beq.w	1464c <btrfs_list_find_updated_files@@Base+0xfc>
   147ba:	movs	r3, #0
   147bc:	str	r3, [sp, #84]	; 0x54
   147be:	mov	r5, r3
   147c0:	add	r3, sp, #304	; 0x130
   147c2:	str	r3, [sp, #108]	; 0x6c
   147c4:	ldr.w	r3, [r8, #64]	; 0x40
   147c8:	ldr	r2, [sp, #84]	; 0x54
   147ca:	cmp	r3, r2
   147cc:	bhi.n	147f2 <btrfs_list_find_updated_files@@Base+0x2a2>
   147ce:	ldrd	r0, r1, [r8, #24]
   147d2:	mov.w	r3, #4096	; 0x1000
   147d6:	str.w	r3, [r8, #64]	; 0x40
   147da:	adds	r2, r1, #1
   147dc:	it	eq
   147de:	cmpeq.w	r0, #4294967295	; 0xffffffff
   147e2:	beq.w	14b08 <btrfs_list_find_updated_files@@Base+0x5b8>
   147e6:	adds	r2, r0, #1
   147e8:	adc.w	r3, r1, #0
   147ec:	strd	r2, r3, [r8, #24]
   147f0:	b.n	1462e <btrfs_list_find_updated_files@@Base+0xde>
   147f2:	ldr	r3, [sp, #108]	; 0x6c
   147f4:	add.w	sl, sp, #112	; 0x70
   147f8:	add	r3, r5
   147fa:	mov	r6, sl
   147fc:	add.w	ip, r3, #32
   14800:	ldr	r0, [r3, #0]
   14802:	adds	r3, #8
   14804:	ldr.w	r1, [r3, #-4]
   14808:	cmp	r3, ip
   1480a:	mov	r2, r6
   1480c:	stmia	r2!, {r0, r1}
   1480e:	mov	r6, r2
   14810:	bne.n	14800 <btrfs_list_find_updated_files@@Base+0x2b0>
   14812:	add.w	r3, r5, #32
   14816:	str	r3, [sp, #104]	; 0x68
   14818:	ldr.w	r3, [sl, #28]
   1481c:	str	r3, [sp, #96]	; 0x60
   1481e:	cmp	r3, #0
   14820:	beq.n	148d0 <btrfs_list_find_updated_files@@Base+0x380>
   14822:	ldrd	r2, r3, [sp, #104]	; 0x68
   14826:	adds	r5, r3, r2
   14828:	ldr.w	r3, [sl, #24]
   1482c:	str	r3, [sp, #100]	; 0x64
   1482e:	ldrd	r2, r3, [sl, #8]
   14832:	strd	r2, r3, [sp, #40]	; 0x28
   14836:	ldr	r3, [sp, #100]	; 0x64
   14838:	cmp	r3, #108	; 0x6c
   1483a:	bne.w	14aca <btrfs_list_find_updated_files@@Base+0x57a>
   1483e:	ldr	r3, [r5, #0]
   14840:	add.w	r1, sp, #12544	; 0x3100
   14844:	adds	r1, #8
   14846:	str	r3, [sp, #48]	; 0x30
   14848:	ldr	r3, [r5, #4]
   1484a:	ldrd	r0, r1, [r1]
   1484e:	str	r3, [sp, #52]	; 0x34
   14850:	ldrd	r2, r3, [sp, #48]	; 0x30
   14854:	cmp	r3, r1
   14856:	it	eq
   14858:	cmpeq	r2, r0
   1485a:	bcc.w	14aca <btrfs_list_find_updated_files@@Base+0x57a>
   1485e:	ldrd	r2, r3, [sp, #72]	; 0x48
   14862:	ldrd	r0, r1, [sp, #40]	; 0x28
   14866:	cmp	r3, r1
   14868:	it	eq
   1486a:	cmpeq	r2, r0
   1486c:	bne.n	148d4 <btrfs_list_find_updated_files@@Base+0x384>
   1486e:	cmp	r4, #0
   14870:	bne.w	149e6 <btrfs_list_find_updated_files@@Base+0x496>
   14874:	mov.w	r2, #4096	; 0x1000
   14878:	movs	r1, #0
   1487a:	mov	r0, fp
   1487c:	blx	8978 <memset@plt+0x4>
   14880:	ldrd	r3, r4, [sp, #40]	; 0x28
   14884:	movs	r1, #12
   14886:	mov.w	r2, #4294967295	; 0xffffffff
   1488a:	str.w	r1, [fp, #60]	; 0x3c
   1488e:	strd	r3, r4, [fp, #8]
   14892:	strd	r3, r4, [fp, #16]
   14896:	mov.w	r3, #4294967295	; 0xffffffff
   1489a:	str.w	r1, [fp, #56]	; 0x38
   1489e:	strd	r2, r3, [fp, #32]
   148a2:	strd	r2, r3, [fp, #48]	; 0x30
   148a6:	movs	r3, #1
   148a8:	vmov	r0, s16
   148ac:	mov	r2, fp
   148ae:	ldr	r1, [pc, #52]	; (148e4 <btrfs_list_find_updated_files@@Base+0x394>)
   148b0:	str.w	r3, [fp, #64]	; 0x40
   148b4:	blx	8764 <ioctl@plt>
   148b8:	cmp	r0, #0
   148ba:	bge.n	1490c <btrfs_list_find_updated_files@@Base+0x3bc>
   148bc:	ldr	r0, [pc, #72]	; (14908 <btrfs_list_find_updated_files@@Base+0x3b8>)
   148be:	add	r0, pc
   148c0:	bl	17424 <__btrfs_error@@Base>
   148c4:	ldrd	r3, r4, [sp, #40]	; 0x28
   148c8:	strd	r3, r4, [sp, #72]	; 0x48
   148cc:	movs	r4, #0
   148ce:	b.n	14aca <btrfs_list_find_updated_files@@Base+0x57a>
   148d0:	add	r5, sp, #144	; 0x90
   148d2:	b.n	14828 <btrfs_list_find_updated_files@@Base+0x2d8>
   148d4:	cmp	r4, #0
   148d6:	beq.n	14874 <btrfs_list_find_updated_files@@Base+0x324>
   148d8:	mov	r0, r4
   148da:	blx	85dc <free@plt+0x4>
   148de:	b.n	14874 <btrfs_list_find_updated_files@@Base+0x324>
   148e0:	str	r4, [sp, #72]	; 0x48
   148e2:	beq.n	148e6 <btrfs_list_find_updated_files@@Base+0x396>
   148e4:	str	r4, [sp, #68]	; 0x44
   148e6:	beq.n	148ea <btrfs_list_find_updated_files@@Base+0x39a>
   148e8:	lsrs	r4, r4, #32
   148ea:	movs	r5, r0
   148ec:	lsls	r4, r4, #8
   148ee:	movs	r0, r0
   148f0:	ldr	r1, [r5, #116]	; 0x74
   148f2:	movs	r2, r0
   148f4:	ldr	r4, [r6, #120]	; 0x78
   148f6:	movs	r2, r0
   148f8:	ldr	r5, [r1, #104]	; 0x68
   148fa:	movs	r2, r0
   148fc:	ldr	r6, [r4, #124]	; 0x7c
   148fe:	movs	r2, r0
   14900:	lsls	r2, r3, #28
   14902:	movs	r5, r0
   14904:	ldr	r5, [r6, #92]	; 0x5c
   14906:	movs	r2, r0
   14908:	ldr	r5, [r2, #64]	; 0x40
   1490a:	movs	r2, r0
   1490c:	ldr.w	r3, [fp, #64]	; 0x40
   14910:	cmp	r3, #0
   14912:	beq.n	148c4 <btrfs_list_find_updated_files@@Base+0x374>
   14914:	ldr.w	r3, [fp, #128]	; 0x80
   14918:	cmp	r3, #12
   1491a:	bne.n	148c4 <btrfs_list_find_updated_files@@Base+0x374>
   1491c:	ldrd	r3, r4, [fp, #120]	; 0x78
   14920:	add.w	r0, sp, #4288	; 0x10c0
   14924:	adds	r0, #16
   14926:	ldrh.w	r1, [fp, #144]	; 0x90
   1492a:	adds	r0, #138	; 0x8a
   1492c:	strd	r3, r4, [sp, #64]	; 0x40
   14930:	blx	860c <strndup@plt>
   14934:	ldrd	r3, r4, [sp, #64]	; 0x40
   14938:	ldrd	r1, r2, [sp, #88]	; 0x58
   1493c:	cmp	r4, r2
   1493e:	it	eq
   14940:	cmpeq	r3, r1
   14942:	mov	r6, r0
   14944:	bne.n	1494c <btrfs_list_find_updated_files@@Base+0x3fc>
   14946:	cmp	r7, #0
   14948:	bne.w	14a8e <btrfs_list_find_updated_files@@Base+0x53e>
   1494c:	add.w	r4, sp, #8384	; 0x20c0
   14950:	mov.w	r2, #4096	; 0x1000
   14954:	adds	r4, #8
   14956:	movs	r1, #0
   14958:	mov	r0, r4
   1495a:	blx	8978 <memset@plt+0x4>
   1495e:	ldrd	r2, r3, [sp, #64]	; 0x40
   14962:	vmov	r0, s16
   14966:	ldr	r1, [pc, #516]	; (14b6c <btrfs_list_find_updated_files@@Base+0x61c>)
   14968:	strd	r2, r3, [r4, #8]
   1496c:	mov	r2, r4
   1496e:	blx	8764 <ioctl@plt>
   14972:	subs.w	r9, r0, #0
   14976:	bge.n	149bc <btrfs_list_find_updated_files@@Base+0x46c>
   14978:	ldr	r0, [pc, #500]	; (14b70 <btrfs_list_find_updated_files@@Base+0x620>)
   1497a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1497e:	add	r0, pc
   14980:	bl	17424 <__btrfs_error@@Base>
   14984:	mov	r0, r9
   14986:	blx	88f0 <strlen@plt>
   1498a:	mov	r4, r0
   1498c:	mov	r0, r6
   1498e:	blx	88f0 <strlen@plt>
   14992:	add	r0, r4
   14994:	adds	r0, #1
   14996:	blx	8820 <malloc@plt+0x4>
   1499a:	mov	r4, r0
   1499c:	cbz	r0, 149ac <btrfs_list_find_updated_files@@Base+0x45c>
   1499e:	mov	r1, r9
   149a0:	blx	87a0 <strcpy@plt>
   149a4:	mov	r1, r6
   149a6:	mov	r0, r4
   149a8:	blx	8758 <strcat@plt+0x4>
   149ac:	cbz	r7, 149b8 <btrfs_list_find_updated_files@@Base+0x468>
   149ae:	cmp	r9, r7
   149b0:	beq.n	149d2 <btrfs_list_find_updated_files@@Base+0x482>
   149b2:	mov	r0, r7
   149b4:	blx	85dc <free@plt+0x4>
   149b8:	mov	r7, r9
   149ba:	b.n	149d2 <btrfs_list_find_updated_files@@Base+0x482>
   149bc:	ldrb.w	r9, [r4, #16]
   149c0:	cmp.w	r9, #0
   149c4:	bne.n	14a70 <btrfs_list_find_updated_files@@Base+0x520>
   149c6:	mov	r0, r6
   149c8:	blx	86a0 <strdup@plt+0x4>
   149cc:	mov	r4, r0
   149ce:	cmp	r7, #0
   149d0:	bne.n	149b2 <btrfs_list_find_updated_files@@Base+0x462>
   149d2:	mov	r0, r6
   149d4:	blx	85dc <free@plt+0x4>
   149d8:	cmp	r4, #0
   149da:	beq.w	14af6 <btrfs_list_find_updated_files@@Base+0x5a6>
   149de:	ldrd	r2, r3, [sp, #64]	; 0x40
   149e2:	strd	r2, r3, [sp, #88]	; 0x58
   149e6:	ldrd	r2, r3, [sl, #16]
   149ea:	ldrb	r6, [r5, #20]
   149ec:	ldrb.w	r9, [r5, #16]
   149f0:	strd	r2, r3, [sp, #64]	; 0x40
   149f4:	subs	r3, r6, #1
   149f6:	cmp	r3, #1
   149f8:	bhi.n	14a92 <btrfs_list_find_updated_files@@Base+0x542>
   149fa:	ldr.w	r3, [r5, #45]	; 0x2d
   149fe:	ldr.w	r0, [r5, #21]
   14a02:	ldr.w	r1, [r5, #25]
   14a06:	ldr.w	lr, [r5, #37]	; 0x25
   14a0a:	ldr.w	ip, [r5, #41]	; 0x29
   14a0e:	str	r3, [sp, #72]	; 0x48
   14a10:	ldr.w	r5, [r5, #49]	; 0x31
   14a14:	ldrd	r2, r3, [sp, #48]	; 0x30
   14a18:	strd	r0, r1, [sp, #16]
   14a1c:	movs	r0, #1
   14a1e:	vmov	r1, s18
   14a22:	strd	r2, r3, [sp, #32]
   14a26:	ldr	r3, [sp, #72]	; 0x48
   14a28:	strd	lr, ip, [sp, #24]
   14a2c:	strd	r3, r5, [sp, #8]
   14a30:	ldrd	r2, r3, [sp, #64]	; 0x40
   14a34:	strd	r2, r3, [sp]
   14a38:	ldrd	r2, r3, [sp, #40]	; 0x28
   14a3c:	blx	89ec <__printf_chk@plt+0x4>
   14a40:	cmp.w	r9, #0
   14a44:	beq.n	14b32 <btrfs_list_find_updated_files@@Base+0x5e2>
   14a46:	ldr	r1, [pc, #300]	; (14b74 <btrfs_list_find_updated_files@@Base+0x624>)
   14a48:	movs	r0, #1
   14a4a:	add	r1, pc
   14a4c:	blx	89ec <__printf_chk@plt+0x4>
   14a50:	cmp	r6, #2
   14a52:	bne.n	14b3c <btrfs_list_find_updated_files@@Base+0x5ec>
   14a54:	ldr	r2, [pc, #288]	; (14b78 <btrfs_list_find_updated_files@@Base+0x628>)
   14a56:	add	r2, pc
   14a58:	ldr	r1, [pc, #288]	; (14b7c <btrfs_list_find_updated_files@@Base+0x62c>)
   14a5a:	add	r1, pc
   14a5c:	movs	r0, #1
   14a5e:	blx	89ec <__printf_chk@plt+0x4>
   14a62:	ldr	r1, [pc, #284]	; (14b80 <btrfs_list_find_updated_files@@Base+0x630>)
   14a64:	mov	r2, r4
   14a66:	movs	r0, #1
   14a68:	add	r1, pc
   14a6a:	blx	89ec <__printf_chk@plt+0x4>
   14a6e:	b.n	14ac2 <btrfs_list_find_updated_files@@Base+0x572>
   14a70:	add.w	r0, sp, #8384	; 0x20c0
   14a74:	adds	r0, #24
   14a76:	blx	86a0 <strdup@plt+0x4>
   14a7a:	mov	r9, r0
   14a7c:	cmp	r0, #0
   14a7e:	bne.n	14984 <btrfs_list_find_updated_files@@Base+0x434>
   14a80:	ldr	r0, [pc, #256]	; (14b84 <btrfs_list_find_updated_files@@Base+0x634>)
   14a82:	mvn.w	r9, #11
   14a86:	add	r0, pc
   14a88:	blx	8710 <perror@plt>
   14a8c:	b.n	14984 <btrfs_list_find_updated_files@@Base+0x434>
   14a8e:	mov	r9, r7
   14a90:	b.n	14984 <btrfs_list_find_updated_files@@Base+0x434>
   14a92:	cbnz	r6, 14aa4 <btrfs_list_find_updated_files@@Base+0x554>
   14a94:	ldr	r3, [r5, #8]
   14a96:	mov	lr, r6
   14a98:	mov	ip, r6
   14a9a:	mov	r0, r6
   14a9c:	mov	r1, r6
   14a9e:	str	r3, [sp, #72]	; 0x48
   14aa0:	ldr	r5, [r5, #12]
   14aa2:	b.n	14a14 <btrfs_list_find_updated_files@@Base+0x4c4>
   14aa4:	ldrd	r2, r3, [sp, #48]	; 0x30
   14aa8:	mov	r1, r6
   14aaa:	ldr	r0, [pc, #220]	; (14b88 <btrfs_list_find_updated_files@@Base+0x638>)
   14aac:	strd	r2, r3, [sp, #8]
   14ab0:	add	r0, pc
   14ab2:	ldrd	r2, r3, [sp, #64]	; 0x40
   14ab6:	strd	r2, r3, [sp]
   14aba:	ldrd	r2, r3, [sp, #40]	; 0x28
   14abe:	bl	17424 <__btrfs_error@@Base>
   14ac2:	ldrd	r2, r3, [sp, #40]	; 0x28
   14ac6:	strd	r2, r3, [sp, #72]	; 0x48
   14aca:	ldr	r2, [sp, #104]	; 0x68
   14acc:	ldr	r3, [sp, #96]	; 0x60
   14ace:	add	r3, r2
   14ad0:	mov	r5, r3
   14ad2:	ldrd	r2, r3, [sp, #40]	; 0x28
   14ad6:	strd	r2, r3, [r8, #8]
   14ada:	ldrd	r2, r3, [sl, #16]
   14ade:	strd	r2, r3, [r8, #24]
   14ae2:	ldr	r3, [sp, #100]	; 0x64
   14ae4:	str.w	r3, [r8, #56]	; 0x38
   14ae8:	ldr	r3, [sp, #84]	; 0x54
   14aea:	adds	r3, #1
   14aec:	str	r3, [sp, #84]	; 0x54
   14aee:	b.n	147c4 <btrfs_list_find_updated_files@@Base+0x274>
   14af0:	ldr	r2, [pc, #152]	; (14b8c <btrfs_list_find_updated_files@@Base+0x63c>)
   14af2:	add	r2, pc
   14af4:	b.n	14b44 <btrfs_list_find_updated_files@@Base+0x5f4>
   14af6:	ldrd	r2, r3, [sp, #40]	; 0x28
   14afa:	strd	r2, r3, [sp, #72]	; 0x48
   14afe:	ldrd	r2, r3, [sp, #64]	; 0x40
   14b02:	strd	r2, r3, [sp, #88]	; 0x58
   14b06:	b.n	14aca <btrfs_list_find_updated_files@@Base+0x57a>
   14b08:	ldrd	r0, r1, [r8, #8]
   14b0c:	adds	r3, r1, #1
   14b0e:	it	eq
   14b10:	cmpeq.w	r0, #4294967295	; 0xffffffff
   14b14:	beq.w	1464c <btrfs_list_find_updated_files@@Base+0xfc>
   14b18:	adds	r2, r0, #1
   14b1a:	adc.w	r3, r1, #0
   14b1e:	strd	r2, r3, [r8, #8]
   14b22:	movs	r3, #0
   14b24:	movs	r2, #0
   14b26:	strd	r2, r3, [r8, #24]
   14b2a:	movs	r3, #0
   14b2c:	str.w	r3, [r8, #56]	; 0x38
   14b30:	b.n	1462e <btrfs_list_find_updated_files@@Base+0xde>
   14b32:	cmp	r6, #2
   14b34:	bne.n	14b4a <btrfs_list_find_updated_files@@Base+0x5fa>
   14b36:	ldr	r2, [pc, #88]	; (14b90 <btrfs_list_find_updated_files@@Base+0x640>)
   14b38:	add	r2, pc
   14b3a:	b.n	14a58 <btrfs_list_find_updated_files@@Base+0x508>
   14b3c:	cmp	r6, #0
   14b3e:	bne.n	14a62 <btrfs_list_find_updated_files@@Base+0x512>
   14b40:	ldr	r2, [pc, #80]	; (14b94 <btrfs_list_find_updated_files@@Base+0x644>)
   14b42:	add	r2, pc
   14b44:	ldr	r1, [pc, #80]	; (14b98 <btrfs_list_find_updated_files@@Base+0x648>)
   14b46:	add	r1, pc
   14b48:	b.n	14a5c <btrfs_list_find_updated_files@@Base+0x50c>
   14b4a:	cmp	r6, #0
   14b4c:	beq.n	14af0 <btrfs_list_find_updated_files@@Base+0x5a0>
   14b4e:	ldr	r1, [pc, #76]	; (14b9c <btrfs_list_find_updated_files@@Base+0x64c>)
   14b50:	movs	r0, #1
   14b52:	add	r1, pc
   14b54:	blx	89ec <__printf_chk@plt+0x4>
   14b58:	b.n	14a62 <btrfs_list_find_updated_files@@Base+0x512>
   14b5a:	vmov	r0, s17
   14b5e:	add.w	sp, sp, #12480	; 0x30c0
   14b62:	add	sp, #20
   14b64:	vpop	{d8-d9}
   14b68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b6c:	str	r4, [sp, #72]	; 0x48
   14b6e:	beq.n	14b72 <btrfs_list_find_updated_files@@Base+0x622>
   14b70:	ldr	r3, [r6, #60]	; 0x3c
   14b72:	movs	r2, r0
   14b74:	ldr	r4, [sp, #240]	; 0xf0
   14b76:	movs	r2, r0
   14b78:	ldr	r1, [r3, #48]	; 0x30
   14b7a:	movs	r2, r0
   14b7c:	ldr	r3, [r2, #60]	; 0x3c
   14b7e:	movs	r2, r0
   14b80:	ldrb	r1, [r7, r7]
   14b82:	movs	r2, r0
   14b84:	ldr	r1, [r1, #32]
   14b86:	movs	r2, r0
   14b88:	ldr	r2, [r5, #44]	; 0x2c
   14b8a:	movs	r2, r0
   14b8c:	strb	r3, [r3, r0]
   14b8e:	movs	r2, r0
   14b90:	strh	r5, [r2, r7]
   14b92:	movs	r2, r0
   14b94:	ldr	r5, [r5, #32]
   14b96:	movs	r2, r0
   14b98:	ldr	r2, [r6, #44]	; 0x2c
   14b9a:	movs	r2, r0
   14b9c:	ldr	r7, [r5, #44]	; 0x2c
   14b9e:	movs	r2, r0

00014ba0 <btrfs_list_parse_sort_string@@Base>:
   14ba0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ba4:	mov	r4, r1
   14ba6:	ldr.w	sl, [pc, #324]	; 14cec <btrfs_list_parse_sort_string@@Base+0x14c>
   14baa:	ldr.w	fp, [pc, #324]	; 14cf0 <btrfs_list_parse_sort_string@@Base+0x150>
   14bae:	ldr	r7, [pc, #324]	; (14cf4 <btrfs_list_parse_sort_string@@Base+0x154>)
   14bb0:	add	sl, pc
   14bb2:	ldr	r3, [pc, #324]	; (14cf8 <btrfs_list_parse_sort_string@@Base+0x158>)
   14bb4:	add	fp, pc
   14bb6:	add	r7, pc
   14bb8:	add	r3, pc
   14bba:	str	r3, [sp, #0]
   14bbc:	mov	r1, sl
   14bbe:	blx	8a44 <strtok@plt>
   14bc2:	mov	r9, r0
   14bc4:	cbz	r0, 14bf8 <btrfs_list_parse_sort_string@@Base+0x58>
   14bc6:	ldr	r3, [sp, #0]
   14bc8:	add.w	r8, r0, #1
   14bcc:	add.w	r5, r3, #132	; 0x84
   14bd0:	mov	r6, r5
   14bd2:	b.n	14bec <btrfs_list_parse_sort_string@@Base+0x4c>
   14bd4:	mov	r1, r9
   14bd6:	mov	r0, r2
   14bd8:	str	r2, [sp, #4]
   14bda:	blx	8568 <strcmp@plt>
   14bde:	cbz	r0, 14bfe <btrfs_list_parse_sort_string@@Base+0x5e>
   14be0:	ldr	r2, [sp, #4]
   14be2:	mov	r1, r8
   14be4:	mov	r0, r2
   14be6:	blx	8568 <strcmp@plt>
   14bea:	cbz	r0, 14bfe <btrfs_list_parse_sort_string@@Base+0x5e>
   14bec:	ldr.w	r2, [r6], #4
   14bf0:	cmp	r2, #0
   14bf2:	bne.n	14bd4 <btrfs_list_parse_sort_string@@Base+0x34>
   14bf4:	mov.w	r0, #4294967295	; 0xffffffff
   14bf8:	add	sp, #12
   14bfa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bfe:	ldrb.w	r2, [r9]
   14c02:	cmp	r2, #43	; 0x2b
   14c04:	bne.n	14c0e <btrfs_list_parse_sort_string@@Base+0x6e>
   14c06:	add.w	r9, r9, #1
   14c0a:	movs	r6, #0
   14c0c:	b.n	14c18 <btrfs_list_parse_sort_string@@Base+0x78>
   14c0e:	cmp	r2, #45	; 0x2d
   14c10:	bne.n	14c0a <btrfs_list_parse_sort_string@@Base+0x6a>
   14c12:	add.w	r9, r9, #1
   14c16:	movs	r6, #1
   14c18:	mov.w	r8, #0
   14c1c:	ldr.w	r1, [r5], #4
   14c20:	mov	r0, r9
   14c22:	blx	8568 <strcmp@plt>
   14c26:	cbz	r0, 14c36 <btrfs_list_parse_sort_string@@Base+0x96>
   14c28:	add.w	r8, r8, #1
   14c2c:	cmp.w	r8, #4
   14c30:	bne.n	14c1c <btrfs_list_parse_sort_string@@Base+0x7c>
   14c32:	mov.w	r8, #4294967295	; 0xffffffff
   14c36:	ldr	r5, [r4, #0]
   14c38:	cbnz	r5, 14c4a <btrfs_list_parse_sort_string@@Base+0xaa>
   14c3a:	ldr	r1, [pc, #192]	; (14cfc <btrfs_list_parse_sort_string@@Base+0x15c>)
   14c3c:	movs	r2, #251	; 0xfb
   14c3e:	ldr	r0, [pc, #192]	; (14d00 <btrfs_list_parse_sort_string@@Base+0x160>)
   14c40:	add	r1, pc
   14c42:	adds	r1, #77	; 0x4d
   14c44:	add	r0, pc
   14c46:	bl	14100 <rb_first_postorder@@Base+0xb36>
   14c4a:	cmp.w	r8, #3
   14c4e:	bls.n	14c5e <btrfs_list_parse_sort_string@@Base+0xbe>
   14c50:	ldr	r1, [pc, #176]	; (14d04 <btrfs_list_parse_sort_string@@Base+0x164>)
   14c52:	movs	r2, #252	; 0xfc
   14c54:	ldr	r0, [pc, #176]	; (14d08 <btrfs_list_parse_sort_string@@Base+0x168>)
   14c56:	add	r1, pc
   14c58:	adds	r1, #77	; 0x4d
   14c5a:	add	r0, pc
   14c5c:	b.n	14c46 <btrfs_list_parse_sort_string@@Base+0xa6>
   14c5e:	ldrd	r3, r1, [r5]
   14c62:	cmp	r1, r3
   14c64:	ble.n	14c74 <btrfs_list_parse_sort_string@@Base+0xd4>
   14c66:	ldr	r1, [pc, #164]	; (14d0c <btrfs_list_parse_sort_string@@Base+0x16c>)
   14c68:	movs	r2, #253	; 0xfd
   14c6a:	ldr	r0, [pc, #164]	; (14d10 <btrfs_list_parse_sort_string@@Base+0x170>)
   14c6c:	add	r1, pc
   14c6e:	adds	r1, #77	; 0x4d
   14c70:	add	r0, pc
   14c72:	b.n	14c46 <btrfs_list_parse_sort_string@@Base+0xa6>
   14c74:	bne.n	14cbe <btrfs_list_parse_sort_string@@Base+0x11e>
   14c76:	adds	r1, #9
   14c78:	mov	r0, r5
   14c7a:	lsls	r1, r1, #3
   14c7c:	blx	86d4 <realloc@plt+0x4>
   14c80:	mov	r9, r0
   14c82:	cbnz	r0, 14c9e <btrfs_list_parse_sort_string@@Base+0xfe>
   14c84:	ldr	r3, [pc, #140]	; (14d14 <btrfs_list_parse_sort_string@@Base+0x174>)
   14c86:	ldr	r0, [pc, #144]	; (14d18 <btrfs_list_parse_sort_string@@Base+0x178>)
   14c88:	ldr	r3, [r7, r3]
   14c8a:	add	r0, pc
   14c8c:	ldr	r1, [r3, #0]
   14c8e:	blx	8b1c <fputs@plt+0x4>
   14c92:	mov	r0, r5
   14c94:	blx	85dc <free@plt+0x4>
   14c98:	movs	r0, #1
   14c9a:	blx	88e4 <exit@plt>
   14c9e:	ldr	r0, [r0, #0]
   14ca0:	movs	r2, #64	; 0x40
   14ca2:	movs	r1, #0
   14ca4:	mov	r5, r9
   14ca6:	adds	r0, #1
   14ca8:	add.w	r0, r9, r0, lsl #3
   14cac:	blx	8978 <memset@plt+0x4>
   14cb0:	ldr.w	r2, [r9]
   14cb4:	adds	r2, #8
   14cb6:	str.w	r2, [r9]
   14cba:	str.w	r9, [r4]
   14cbe:	ldr	r3, [r5, #4]
   14cc0:	add.w	r1, r5, r3, lsl #3
   14cc4:	ldr	r0, [r1, #8]
   14cc6:	cbz	r0, 14cd8 <btrfs_list_parse_sort_string@@Base+0x138>
   14cc8:	ldr	r1, [pc, #80]	; (14d1c <btrfs_list_parse_sort_string@@Base+0x17c>)
   14cca:	movw	r2, #275	; 0x113
   14cce:	ldr	r0, [pc, #80]	; (14d20 <btrfs_list_parse_sort_string@@Base+0x180>)
   14cd0:	add	r1, pc
   14cd2:	adds	r1, #77	; 0x4d
   14cd4:	add	r0, pc
   14cd6:	b.n	14c46 <btrfs_list_parse_sort_string@@Base+0xa6>
   14cd8:	add.w	r8, fp, r8, lsl #2
   14cdc:	adds	r3, #1
   14cde:	ldr.w	r2, [r8, #52]	; 0x34
   14ce2:	strd	r2, r6, [r1, #8]
   14ce6:	str	r3, [r5, #4]
   14ce8:	b.n	14bbc <btrfs_list_parse_sort_string@@Base+0x1c>
   14cea:	nop
   14cec:	ldr	r7, [pc, #436]	; (14ea4 <btrfs_list_subvols_print@@Base+0x120>)
   14cee:	movs	r2, r0
   14cf0:	umlal	r0, r0, r8, r4
   14cf4:	lsls	r2, r2, #7
   14cf6:	movs	r5, r0
   14cf8:	asrs	r0, r5, #21
   14cfa:	movs	r5, r0
   14cfc:	ldr	r1, [r5, #44]	; 0x2c
   14cfe:	movs	r2, r0
   14d00:	ldr	r5, [pc, #820]	; (15038 <btrfs_list_subvols_print@@Base+0x2b4>)
   14d02:	movs	r2, r0
   14d04:	ldr	r3, [r2, #44]	; 0x2c
   14d06:	movs	r2, r0
   14d08:	ldr	r5, [r0, #32]
   14d0a:	movs	r2, r0
   14d0c:	ldr	r5, [r7, #40]	; 0x28
   14d0e:	movs	r2, r0
   14d10:	ldr	r5, [pc, #824]	; (1504c <btrfs_list_subvols_print@@Base+0x2c8>)
   14d12:	movs	r2, r0
   14d14:	lsls	r4, r6, #8
   14d16:	movs	r0, r0
   14d18:	str	r5, [r6, #120]	; 0x78
   14d1a:	movs	r2, r0
   14d1c:	ldr	r1, [r3, #36]	; 0x24
   14d1e:	movs	r2, r0
   14d20:	ldr	r5, [pc, #528]	; (14f34 <btrfs_list_subvols_print@@Base+0x1b0>)
   14d22:	movs	r2, r0

00014d24 <btrfs_list_parse_filter_string@@Base>:
   14d24:	push	{r3, r4, r5, lr}
   14d26:	mov	r3, r0
   14d28:	mov	r5, r2
   14d2a:	ldrb.w	r2, [r3], #1
   14d2e:	mov	r4, r1
   14d30:	cmp	r2, #43	; 0x2b
   14d32:	beq.n	14d44 <btrfs_list_parse_filter_string@@Base+0x20>
   14d34:	cmp	r2, #45	; 0x2d
   14d36:	beq.n	14d5a <btrfs_list_parse_filter_string@@Base+0x36>
   14d38:	bl	176e4 <arg_strtou64@@Base>
   14d3c:	mov	r3, r1
   14d3e:	mov	r2, r0
   14d40:	mov	r1, r5
   14d42:	b.n	14d50 <btrfs_list_parse_filter_string@@Base+0x2c>
   14d44:	mov	r0, r3
   14d46:	bl	176e4 <arg_strtou64@@Base>
   14d4a:	mov	r3, r1
   14d4c:	adds	r1, r5, #2
   14d4e:	mov	r2, r0
   14d50:	mov	r0, r4
   14d52:	bl	14444 <btrfs_list_setup_filter@@Base>
   14d56:	movs	r0, #0
   14d58:	pop	{r3, r4, r5, pc}
   14d5a:	mov	r0, r3
   14d5c:	bl	176e4 <arg_strtou64@@Base>
   14d60:	mov	r3, r1
   14d62:	mov	r2, r0
   14d64:	adds	r1, r5, #1
   14d66:	b.n	14d50 <btrfs_list_parse_filter_string@@Base+0x2c>

00014d68 <btrfs_list_get_path_rootid@@Base>:
   14d68:	push	{r4, lr}
   14d6a:	bl	1778c <lookup_path_rootid@@Base>
   14d6e:	subs	r4, r0, #0
   14d70:	bge.n	14d7a <btrfs_list_get_path_rootid@@Base+0x12>
   14d72:	ldr	r0, [pc, #12]	; (14d80 <btrfs_list_get_path_rootid@@Base+0x18>)
   14d74:	add	r0, pc
   14d76:	bl	17424 <__btrfs_error@@Base>
   14d7a:	mov	r0, r4
   14d7c:	pop	{r4, pc}
   14d7e:	nop
   14d80:	ldr	r2, [r1, #16]
   14d82:	movs	r2, r0

00014d84 <btrfs_list_subvols_print@@Base>:
   14d84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d88:	sub	sp, #76	; 0x4c
   14d8a:	mov	r9, r2
   14d8c:	mov	r7, r3
   14d8e:	ldrd	r3, r2, [sp, #112]	; 0x70
   14d92:	mov	r8, r1
   14d94:	ldr	r1, [pc, #828]	; (150d4 <btrfs_list_subvols_print@@Base+0x350>)
   14d96:	mov.w	sl, #0
   14d9a:	mov.w	fp, #0
   14d9e:	mov	r4, r0
   14da0:	str	r2, [sp, #12]
   14da2:	add	r1, pc
   14da4:	ldr	r2, [pc, #816]	; (150d8 <btrfs_list_subvols_print@@Base+0x354>)
   14da6:	ldr	r2, [r1, r2]
   14da8:	ldr	r2, [r2, #0]
   14daa:	str	r2, [sp, #68]	; 0x44
   14dac:	mov.w	r2, #0
   14db0:	strd	sl, fp, [sp, #40]	; 0x28
   14db4:	cmp	r3, #0
   14db6:	bne.n	14e92 <btrfs_list_subvols_print@@Base+0x10e>
   14db8:	add	r5, sp, #32
   14dba:	mov	r0, r4
   14dbc:	mov	r1, r5
   14dbe:	bl	140d8 <rb_first_postorder@@Base+0xb0e>
   14dc2:	mov	r6, r0
   14dc4:	cmp	r0, #0
   14dc6:	bne.n	14e9e <btrfs_list_subvols_print@@Base+0x11a>
   14dc8:	ldrd	r3, r4, [sp, #40]	; 0x28
   14dcc:	str	r0, [sp, #36]	; 0x24
   14dce:	mov	r0, r5
   14dd0:	strd	r3, r4, [sp, #16]
   14dd4:	bl	134fe <rb_last@@Base>
   14dd8:	ldr	r3, [pc, #768]	; (150dc <btrfs_list_subvols_print@@Base+0x358>)
   14dda:	add	r3, pc
   14ddc:	str	r3, [sp, #24]
   14dde:	mov	r4, r0
   14de0:	cmp	r4, #0
   14de2:	bne.n	14eb4 <btrfs_list_subvols_print@@Base+0x130>
   14de4:	cmp	r7, #1
   14de6:	bne.n	14e6c <btrfs_list_subvols_print@@Base+0xe8>
   14de8:	ldr	r5, [pc, #756]	; (150e0 <btrfs_list_subvols_print@@Base+0x35c>)
   14dea:	ldr.w	r9, [pc, #760]	; 150e4 <btrfs_list_subvols_print@@Base+0x360>
   14dee:	add	r5, pc
   14df0:	add	r9, pc
   14df2:	mov	r8, r5
   14df4:	ldr.w	r3, [r8, #8]
   14df8:	cbz	r3, 14e06 <btrfs_list_subvols_print@@Base+0x82>
   14dfa:	ldr.w	r2, [r8]
   14dfe:	mov	r1, r9
   14e00:	movs	r0, #1
   14e02:	blx	89ec <__printf_chk@plt+0x4>
   14e06:	cmp	r4, #9
   14e08:	bne.n	14e10 <btrfs_list_subvols_print@@Base+0x8c>
   14e0a:	movs	r0, #10
   14e0c:	blx	8988 <putchar@plt+0x4>
   14e10:	adds	r4, #1
   14e12:	add.w	r8, r8, #12
   14e16:	cmp	r4, #10
   14e18:	bne.n	14df4 <btrfs_list_subvols_print@@Base+0x70>
   14e1a:	ldr.w	r9, [pc, #716]	; 150e8 <btrfs_list_subvols_print@@Base+0x364>
   14e1e:	mov.w	r8, #0
   14e22:	ldr.w	sl, [pc, #712]	; 150ec <btrfs_list_subvols_print@@Base+0x368>
   14e26:	add	r9, pc
   14e28:	add	sl, pc
   14e2a:	add.w	fp, sp, #48	; 0x30
   14e2e:	movs	r2, #20
   14e30:	movs	r1, #0
   14e32:	mov	r0, fp
   14e34:	blx	8978 <memset@plt+0x4>
   14e38:	ldr	r3, [r5, #8]
   14e3a:	cbz	r3, 14e54 <btrfs_list_subvols_print@@Base+0xd0>
   14e3c:	ldr	r0, [r5, #0]
   14e3e:	blx	88f0 <strlen@plt>
   14e42:	mov	r4, r0
   14e44:	subs	r4, #1
   14e46:	bcs.w	14fdc <btrfs_list_subvols_print@@Base+0x258>
   14e4a:	mov	r2, fp
   14e4c:	mov	r1, sl
   14e4e:	movs	r0, #1
   14e50:	blx	89ec <__printf_chk@plt+0x4>
   14e54:	cmp.w	r8, #9
   14e58:	bne.n	14e60 <btrfs_list_subvols_print@@Base+0xdc>
   14e5a:	movs	r0, #10
   14e5c:	blx	8988 <putchar@plt+0x4>
   14e60:	add.w	r8, r8, #1
   14e64:	adds	r5, #12
   14e66:	cmp.w	r8, #10
   14e6a:	bne.n	14e2a <btrfs_list_subvols_print@@Base+0xa6>
   14e6c:	add	r0, sp, #36	; 0x24
   14e6e:	ldr.w	r9, [pc, #640]	; 150f0 <btrfs_list_subvols_print@@Base+0x36c>
   14e72:	bl	134ee <rb_first@@Base>
   14e76:	ldr.w	sl, [pc, #636]	; 150f4 <btrfs_list_subvols_print@@Base+0x370>
   14e7a:	add	r9, pc
   14e7c:	add	sl, pc
   14e7e:	mov	r4, r0
   14e80:	cmp	r4, #0
   14e82:	bne.w	14fe8 <btrfs_list_subvols_print@@Base+0x264>
   14e86:	ldr	r1, [pc, #624]	; (150f8 <btrfs_list_subvols_print@@Base+0x374>)
   14e88:	add	r0, sp, #32
   14e8a:	add	r1, pc
   14e8c:	bl	178a6 <rb_free_nodes@@Base>
   14e90:	b.n	14e9e <btrfs_list_subvols_print@@Base+0x11a>
   14e92:	add	r1, sp, #40	; 0x28
   14e94:	bl	14d68 <btrfs_list_get_path_rootid@@Base>
   14e98:	mov	r6, r0
   14e9a:	cmp	r0, #0
   14e9c:	beq.n	14db8 <btrfs_list_subvols_print@@Base+0x34>
   14e9e:	ldr	r2, [pc, #604]	; (150fc <btrfs_list_subvols_print@@Base+0x378>)
   14ea0:	ldr	r3, [pc, #564]	; (150d8 <btrfs_list_subvols_print@@Base+0x354>)
   14ea2:	add	r2, pc
   14ea4:	ldr	r3, [r2, r3]
   14ea6:	ldr	r2, [r3, #0]
   14ea8:	ldr	r3, [sp, #68]	; 0x44
   14eaa:	eors	r2, r3
   14eac:	beq.w	150ca <btrfs_list_subvols_print@@Base+0x346>
   14eb0:	blx	86b8 <__stack_chk_fail@plt>
   14eb4:	ldrd	r2, r3, [sp, #16]
   14eb8:	add	r0, sp, #32
   14eba:	mov	r1, r4
   14ebc:	bl	13ba8 <rb_first_postorder@@Base+0x5de>
   14ec0:	adds	r0, #2
   14ec2:	bne.n	14ee2 <btrfs_list_subvols_print@@Base+0x15e>
   14ec4:	ldrd	r2, r3, [r4, #24]
   14ec8:	cmp	r3, #0
   14eca:	it	eq
   14ecc:	cmpeq	r2, #5
   14ece:	beq.n	14f0c <btrfs_list_subvols_print@@Base+0x188>
   14ed0:	ldr	r0, [pc, #556]	; (15100 <btrfs_list_subvols_print@@Base+0x37c>)
   14ed2:	add	r0, pc
   14ed4:	blx	86a0 <strdup@plt+0x4>
   14ed8:	movs	r3, #1
   14eda:	str.w	r0, [r4, #148]	; 0x94
   14ede:	str.w	r3, [r4, #152]	; 0x98
   14ee2:	cmp.w	r8, #0
   14ee6:	bne.n	14f1c <btrfs_list_subvols_print@@Base+0x198>
   14ee8:	add	r5, sp, #36	; 0x24
   14eea:	movs	r3, #0
   14eec:	ldr.w	sl, [r5]
   14ef0:	cmp.w	sl, #0
   14ef4:	bne.n	14f5e <btrfs_list_subvols_print@@Base+0x1da>
   14ef6:	add.w	r0, r4, #12
   14efa:	strd	r3, sl, [r4, #12]
   14efe:	str.w	sl, [r4, #20]
   14f02:	add	r1, sp, #36	; 0x24
   14f04:	str	r0, [r5, #0]
   14f06:	bl	131d2 <rb_insert_color@@Base>
   14f0a:	b.n	14f28 <btrfs_list_subvols_print@@Base+0x1a4>
   14f0c:	ldr	r0, [pc, #500]	; (15104 <btrfs_list_subvols_print@@Base+0x380>)
   14f0e:	add	r0, pc
   14f10:	blx	86a0 <strdup@plt+0x4>
   14f14:	movs	r3, #0
   14f16:	str.w	r0, [r4, #148]	; 0x94
   14f1a:	b.n	14ede <btrfs_list_subvols_print@@Base+0x15a>
   14f1c:	ldr.w	r2, [r8, #8]
   14f20:	ldr.w	r3, [r4, #152]	; 0x98
   14f24:	cbz	r2, 14f32 <btrfs_list_subvols_print@@Base+0x1ae>
   14f26:	cbnz	r3, 14f36 <btrfs_list_subvols_print@@Base+0x1b2>
   14f28:	mov	r0, r4
   14f2a:	bl	1353a <rb_prev@@Base>
   14f2e:	mov	r4, r0
   14f30:	b.n	14de0 <btrfs_list_subvols_print@@Base+0x5c>
   14f32:	cmp	r3, #0
   14f34:	bne.n	14f28 <btrfs_list_subvols_print@@Base+0x1a4>
   14f36:	mov	r5, r8
   14f38:	mov.w	sl, #0
   14f3c:	ldr.w	r3, [r8, #4]
   14f40:	cmp	sl, r3
   14f42:	bge.n	14ee8 <btrfs_list_subvols_print@@Base+0x164>
   14f44:	ldr	r1, [r5, #16]
   14f46:	cmp	r1, #0
   14f48:	beq.n	14ee8 <btrfs_list_subvols_print@@Base+0x164>
   14f4a:	ldrd	r2, r3, [r5, #24]
   14f4e:	mov	r0, r4
   14f50:	blx	r1
   14f52:	adds	r5, #16
   14f54:	cmp	r0, #0
   14f56:	beq.n	14f28 <btrfs_list_subvols_print@@Base+0x1a4>
   14f58:	add.w	sl, sl, #1
   14f5c:	b.n	14f3c <btrfs_list_subvols_print@@Base+0x1b8>
   14f5e:	sub.w	r1, sl, #12
   14f62:	cmp.w	r9, #0
   14f66:	beq.n	14f8c <btrfs_list_subvols_print@@Base+0x208>
   14f68:	ldr.w	r3, [r9, #4]
   14f6c:	cbz	r3, 14f8c <btrfs_list_subvols_print@@Base+0x208>
   14f6e:	movs	r3, #0
   14f70:	str.w	r9, [sp, #8]
   14f74:	mov	fp, r3
   14f76:	str	r3, [sp, #4]
   14f78:	ldr.w	r3, [r9, #4]
   14f7c:	ldr	r2, [sp, #4]
   14f7e:	cmp	r2, r3
   14f80:	blt.n	14fa0 <btrfs_list_subvols_print@@Base+0x21c>
   14f82:	cmp.w	fp, #0
   14f86:	bne.n	14f28 <btrfs_list_subvols_print@@Base+0x1a4>
   14f88:	mov	r2, fp
   14f8a:	b.n	14f8e <btrfs_list_subvols_print@@Base+0x20a>
   14f8c:	movs	r2, #0
   14f8e:	mov	r0, r4
   14f90:	bl	135e0 <rb_first_postorder@@Base+0x16>
   14f94:	cmp	r0, #0
   14f96:	bge.n	14fd4 <btrfs_list_subvols_print@@Base+0x250>
   14f98:	ldr	r5, [r5, #0]
   14f9a:	adds	r5, #8
   14f9c:	mov	r3, sl
   14f9e:	b.n	14eec <btrfs_list_subvols_print@@Base+0x168>
   14fa0:	ldr	r3, [sp, #8]
   14fa2:	ldr	r3, [r3, #8]
   14fa4:	cmp	r3, #0
   14fa6:	beq.n	14f82 <btrfs_list_subvols_print@@Base+0x1fe>
   14fa8:	ldr	r2, [sp, #8]
   14faa:	mov	r0, r4
   14fac:	str	r1, [sp, #28]
   14fae:	ldr	r2, [r2, #12]
   14fb0:	blx	r3
   14fb2:	cmp	r0, #0
   14fb4:	bne.w	150c4 <btrfs_list_subvols_print@@Base+0x340>
   14fb8:	ldr	r2, [sp, #8]
   14fba:	ldr	r1, [sp, #28]
   14fbc:	ldr.w	r3, [r2, #8]!
   14fc0:	str	r2, [sp, #8]
   14fc2:	ldr	r2, [sp, #24]
   14fc4:	cmp	r3, r2
   14fc6:	it	eq
   14fc8:	moveq.w	fp, #1
   14fcc:	ldr	r3, [sp, #4]
   14fce:	adds	r3, #1
   14fd0:	str	r3, [sp, #4]
   14fd2:	b.n	14f78 <btrfs_list_subvols_print@@Base+0x1f4>
   14fd4:	beq.n	14f28 <btrfs_list_subvols_print@@Base+0x1a4>
   14fd6:	ldr	r5, [r5, #0]
   14fd8:	adds	r5, #4
   14fda:	b.n	14f9c <btrfs_list_subvols_print@@Base+0x218>
   14fdc:	movs	r2, #20
   14fde:	mov	r1, r9
   14fe0:	mov	r0, fp
   14fe2:	blx	8944 <__strcat_chk@plt>
   14fe6:	b.n	14e44 <btrfs_list_subvols_print@@Base+0xc0>
   14fe8:	ldrd	r2, r3, [r4, #12]
   14fec:	sub.w	r5, r4, #12
   14ff0:	cmp	r3, #0
   14ff2:	it	eq
   14ff4:	cmpeq	r2, #5
   14ff6:	beq.n	15044 <btrfs_list_subvols_print@@Base+0x2c0>
   14ff8:	cmp	r7, #1
   14ffa:	beq.n	1504e <btrfs_list_subvols_print@@Base+0x2ca>
   14ffc:	cmp	r7, #2
   14ffe:	beq.n	1508e <btrfs_list_subvols_print@@Base+0x30a>
   15000:	cbnz	r7, 15044 <btrfs_list_subvols_print@@Base+0x2c0>
   15002:	ldr.w	fp, [pc, #260]	; 15108 <btrfs_list_subvols_print@@Base+0x384>
   15006:	mov	r8, r7
   15008:	add	fp, pc
   1500a:	ldr.w	r3, [fp, #8]
   1500e:	cbz	r3, 15030 <btrfs_list_subvols_print@@Base+0x2ac>
   15010:	ldr.w	r2, [fp]
   15014:	mov	r1, sl
   15016:	movs	r0, #1
   15018:	blx	89ec <__printf_chk@plt+0x4>
   1501c:	mov	r1, r8
   1501e:	mov	r0, r5
   15020:	bl	1413c <rb_first_postorder@@Base+0xb72>
   15024:	cmp.w	r8, #9
   15028:	beq.n	15030 <btrfs_list_subvols_print@@Base+0x2ac>
   1502a:	movs	r0, #32
   1502c:	blx	8988 <putchar@plt+0x4>
   15030:	add.w	r8, r8, #1
   15034:	add.w	fp, fp, #12
   15038:	cmp.w	r8, #10
   1503c:	bne.n	1500a <btrfs_list_subvols_print@@Base+0x286>
   1503e:	movs	r0, #10
   15040:	blx	8988 <putchar@plt+0x4>
   15044:	mov	r0, r4
   15046:	bl	1350e <rb_next@@Base>
   1504a:	mov	r4, r0
   1504c:	b.n	14e80 <btrfs_list_subvols_print@@Base+0xfc>
   1504e:	ldr.w	r8, [pc, #188]	; 1510c <btrfs_list_subvols_print@@Base+0x388>
   15052:	mov.w	fp, #0
   15056:	add	r8, pc
   15058:	ldr.w	r3, [r8, #8]
   1505c:	cbz	r3, 1507e <btrfs_list_subvols_print@@Base+0x2fa>
   1505e:	mov	r1, fp
   15060:	mov	r0, r5
   15062:	bl	1413c <rb_first_postorder@@Base+0xb72>
   15066:	cmp.w	fp, #9
   1506a:	beq.n	1507e <btrfs_list_subvols_print@@Base+0x2fa>
   1506c:	movs	r0, #9
   1506e:	blx	8988 <putchar@plt+0x4>
   15072:	cmp.w	fp, #4
   15076:	bne.n	1507e <btrfs_list_subvols_print@@Base+0x2fa>
   15078:	movs	r0, #9
   1507a:	blx	8988 <putchar@plt+0x4>
   1507e:	add.w	fp, fp, #1
   15082:	add.w	r8, r8, #12
   15086:	cmp.w	fp, #10
   1508a:	bne.n	15058 <btrfs_list_subvols_print@@Base+0x2d4>
   1508c:	b.n	1503e <btrfs_list_subvols_print@@Base+0x2ba>
   1508e:	ldr.w	fp, [pc, #128]	; 15110 <btrfs_list_subvols_print@@Base+0x38c>
   15092:	mov.w	r8, #0
   15096:	add	fp, pc
   15098:	ldr.w	r3, [fp, #8]
   1509c:	cbz	r3, 150b4 <btrfs_list_subvols_print@@Base+0x330>
   1509e:	ldr	r3, [sp, #12]
   150a0:	cbz	r3, 150ac <btrfs_list_subvols_print@@Base+0x328>
   150a2:	mov	r2, r3
   150a4:	mov	r1, r9
   150a6:	movs	r0, #1
   150a8:	blx	89ec <__printf_chk@plt+0x4>
   150ac:	mov	r1, r8
   150ae:	mov	r0, r5
   150b0:	bl	1413c <rb_first_postorder@@Base+0xb72>
   150b4:	add.w	r8, r8, #1
   150b8:	add.w	fp, fp, #12
   150bc:	cmp.w	r8, #10
   150c0:	bne.n	15098 <btrfs_list_subvols_print@@Base+0x314>
   150c2:	b.n	1503e <btrfs_list_subvols_print@@Base+0x2ba>
   150c4:	blt.w	14f98 <btrfs_list_subvols_print@@Base+0x214>
   150c8:	b.n	14fd6 <btrfs_list_subvols_print@@Base+0x252>
   150ca:	mov	r0, r6
   150cc:	add	sp, #76	; 0x4c
   150ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150d2:	nop
   150d4:	vaddl.u32	q8, d6, d4
   150d8:	lsls	r4, r4, #8
   150da:	movs	r0, r0
   150dc:			; <UNDEFINED> instruction: 0xe803ffff
   150e0:	asrs	r2, r6, #12
   150e2:	movs	r5, r0
   150e4:	ldr	r2, [r0, #12]
   150e6:	movs	r2, r0
   150e8:	ldr	r4, [pc, #1004]	; (154d8 <radix_tree_insert@@Base>)
   150ea:	movs	r2, r0
   150ec:	ldr	r2, [r1, #8]
   150ee:	movs	r2, r0
   150f0:	add	r6, sp, #360	; 0x168
   150f2:	movs	r2, r0
   150f4:	ldr	r2, [r7, #0]
   150f6:	movs	r2, r0
   150f8:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   150fc:	cdp2	0, 14, cr0, cr6, cr4, {0}
   15100:	str	r7, [r1, #124]	; 0x7c
   15102:	movs	r2, r0
   15104:	str	r3, [r3, #120]	; 0x78
   15106:	movs	r2, r0
   15108:	asrs	r0, r3, #4
   1510a:	movs	r5, r0
   1510c:	asrs	r2, r1, #3
   1510e:	movs	r5, r0
   15110:	asrs	r2, r1, #2
   15112:	movs	r5, r0

00015114 <btrfs_get_toplevel_subvol@@Base>:
   15114:	ldr	r2, [pc, #152]	; (151b0 <btrfs_get_toplevel_subvol@@Base+0x9c>)
   15116:	ldr	r3, [pc, #156]	; (151b4 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15118:	add	r2, pc
   1511a:	push	{r4, r5, r6, r7, lr}
   1511c:	sub	sp, #28
   1511e:	ldr	r3, [r2, r3]
   15120:	mov	r5, r1
   15122:	add	r1, sp, #8
   15124:	mov	r7, r0
   15126:	ldr	r3, [r3, #0]
   15128:	str	r3, [sp, #20]
   1512a:	mov.w	r3, #0
   1512e:	bl	14d68 <btrfs_list_get_path_rootid@@Base>
   15132:	mov	r4, r0
   15134:	cbnz	r0, 1518e <btrfs_get_toplevel_subvol@@Base+0x7a>
   15136:	add	r6, sp, #4
   15138:	mov	r0, r7
   1513a:	mov	r1, r6
   1513c:	bl	140d8 <rb_first_postorder@@Base+0xb0e>
   15140:	mov	r4, r0
   15142:	cbnz	r0, 1518e <btrfs_get_toplevel_subvol@@Base+0x7a>
   15144:	mov	r0, r6
   15146:	bl	134ee <rb_first@@Base>
   1514a:	ldrd	r2, r3, [r0, #24]
   1514e:	mov	r1, r0
   15150:	cmp	r3, #0
   15152:	it	eq
   15154:	cmpeq	r2, #5
   15156:	bne.n	151a2 <btrfs_get_toplevel_subvol@@Base+0x8e>
   15158:	ldr	r7, [pc, #92]	; (151b8 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   1515a:	movs	r2, #140	; 0x8c
   1515c:	mov	r0, r5
   1515e:	add	r7, pc
   15160:	blx	8628 <memcpy@plt+0x4>
   15164:	mov	r0, r7
   15166:	blx	86a0 <strdup@plt+0x4>
   1516a:	str.w	r0, [r5, #140]	; 0x8c
   1516e:	ldr	r0, [pc, #76]	; (151bc <btrfs_get_toplevel_subvol@@Base+0xa8>)
   15170:	add	r0, pc
   15172:	blx	86a0 <strdup@plt+0x4>
   15176:	str.w	r0, [r5, #144]	; 0x90
   1517a:	mov	r0, r7
   1517c:	blx	86a0 <strdup@plt+0x4>
   15180:	ldr	r1, [pc, #60]	; (151c0 <btrfs_get_toplevel_subvol@@Base+0xac>)
   15182:	add	r1, pc
   15184:	str.w	r0, [r5, #148]	; 0x94
   15188:	mov	r0, r6
   1518a:	bl	178a6 <rb_free_nodes@@Base>
   1518e:	ldr	r2, [pc, #52]	; (151c4 <btrfs_get_toplevel_subvol@@Base+0xb0>)
   15190:	ldr	r3, [pc, #32]	; (151b4 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15192:	add	r2, pc
   15194:	ldr	r3, [r2, r3]
   15196:	ldr	r2, [r3, #0]
   15198:	ldr	r3, [sp, #20]
   1519a:	eors	r2, r3
   1519c:	beq.n	151a8 <btrfs_get_toplevel_subvol@@Base+0x94>
   1519e:	blx	86b8 <__stack_chk_fail@plt>
   151a2:	mvn.w	r4, #1
   151a6:	b.n	1518e <btrfs_get_toplevel_subvol@@Base+0x7a>
   151a8:	mov	r0, r4
   151aa:	add	sp, #28
   151ac:	pop	{r4, r5, r6, r7, pc}
   151ae:	nop
   151b0:	ldc2l	0, cr0, [r0], #-16
   151b4:	lsls	r4, r4, #8
   151b6:	movs	r0, r0
   151b8:	str	r7, [r3, #24]
   151ba:	movs	r2, r0
   151bc:	str	r1, [r5, #44]	; 0x2c
   151be:	movs	r2, r0
   151c0:	b.n	14d52 <btrfs_list_parse_filter_string@@Base+0x2e>
   151c2:			; <UNDEFINED> instruction: 0xfffffbf6
   151c6:	movs	r4, r0

000151c8 <btrfs_get_subvol@@Base>:
   151c8:	ldr	r2, [pc, #228]	; (152b0 <btrfs_get_subvol@@Base+0xe8>)
   151ca:	ldr	r3, [pc, #232]	; (152b4 <btrfs_get_subvol@@Base+0xec>)
   151cc:	add	r2, pc
   151ce:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   151d2:	sub	sp, #28
   151d4:	ldr	r3, [r2, r3]
   151d6:	mov	r6, r1
   151d8:	add	r1, sp, #8
   151da:	mov	r4, r0
   151dc:	ldr	r3, [r3, #0]
   151de:	str	r3, [sp, #20]
   151e0:	mov.w	r3, #0
   151e4:	bl	14d68 <btrfs_list_get_path_rootid@@Base>
   151e8:	mov	r5, r0
   151ea:	cmp	r0, #0
   151ec:	bne.n	15272 <btrfs_get_subvol@@Base+0xaa>
   151ee:	add	r7, sp, #4
   151f0:	mov	r0, r4
   151f2:	mov	r1, r7
   151f4:	bl	140d8 <rb_first_postorder@@Base+0xb0e>
   151f8:	mov	r5, r0
   151fa:	cbnz	r0, 15272 <btrfs_get_subvol@@Base+0xaa>
   151fc:	mov	r0, r7
   151fe:	add.w	r9, r6, #92	; 0x5c
   15202:	bl	134ee <rb_first@@Base>
   15206:	mov	r4, r0
   15208:	cbz	r4, 15268 <btrfs_get_subvol@@Base+0xa0>
   1520a:	ldrd	r2, r3, [sp, #8]
   1520e:	mov	r1, r4
   15210:	mov	r0, r7
   15212:	bl	13ba8 <rb_first_postorder@@Base+0x5de>
   15216:	cmn.w	r0, #2
   1521a:	mov	r8, r0
   1521c:	bne.n	1522a <btrfs_get_subvol@@Base+0x62>
   1521e:	mov	r0, r4
   15220:	bl	1350e <rb_next@@Base>
   15224:	mov	r4, r0
   15226:	mov	r5, r8
   15228:	b.n	15208 <btrfs_get_subvol@@Base+0x40>
   1522a:	movs	r2, #0
   1522c:	mov	r1, r4
   1522e:	mov	r0, r6
   15230:	bl	135e0 <rb_first_postorder@@Base+0x16>
   15234:	cbnz	r0, 15286 <btrfs_get_subvol@@Base+0xbe>
   15236:	movs	r2, #140	; 0x8c
   15238:	mov	r1, r4
   1523a:	mov	r0, r6
   1523c:	blx	8628 <memcpy@plt+0x4>
   15240:	ldr.w	r0, [r4, #140]	; 0x8c
   15244:	cbnz	r0, 152a0 <btrfs_get_subvol@@Base+0xd8>
   15246:	str.w	r0, [r6, #140]	; 0x8c
   1524a:	ldr.w	r0, [r4, #144]	; 0x90
   1524e:	cbz	r0, 15254 <btrfs_get_subvol@@Base+0x8c>
   15250:	blx	86a0 <strdup@plt+0x4>
   15254:	str.w	r0, [r6, #144]	; 0x90
   15258:	ldr.w	r0, [r4, #148]	; 0x94
   1525c:	cbz	r0, 15262 <btrfs_get_subvol@@Base+0x9a>
   1525e:	blx	86a0 <strdup@plt+0x4>
   15262:	movs	r5, #0
   15264:	str.w	r0, [r6, #148]	; 0x94
   15268:	ldr	r1, [pc, #76]	; (152b8 <btrfs_get_subvol@@Base+0xf0>)
   1526a:	mov	r0, r7
   1526c:	add	r1, pc
   1526e:	bl	178a6 <rb_free_nodes@@Base>
   15272:	ldr	r2, [pc, #72]	; (152bc <btrfs_get_subvol@@Base+0xf4>)
   15274:	ldr	r3, [pc, #60]	; (152b4 <btrfs_get_subvol@@Base+0xec>)
   15276:	add	r2, pc
   15278:	ldr	r3, [r2, r3]
   1527a:	ldr	r2, [r3, #0]
   1527c:	ldr	r3, [sp, #20]
   1527e:	eors	r2, r3
   15280:	beq.n	152a6 <btrfs_get_subvol@@Base+0xde>
   15282:	blx	86b8 <__stack_chk_fail@plt>
   15286:	add.w	r1, r4, #92	; 0x5c
   1528a:	mov	r0, r9
   1528c:	blx	86ec <uuid_compare@plt>
   15290:	cmp	r0, #0
   15292:	beq.n	15236 <btrfs_get_subvol@@Base+0x6e>
   15294:	mov	r0, r4
   15296:	mov	r8, r5
   15298:	bl	1350e <rb_next@@Base>
   1529c:	mov	r4, r0
   1529e:	b.n	15226 <btrfs_get_subvol@@Base+0x5e>
   152a0:	blx	86a0 <strdup@plt+0x4>
   152a4:	b.n	15246 <btrfs_get_subvol@@Base+0x7e>
   152a6:	mov	r0, r5
   152a8:	add	sp, #28
   152aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   152ae:	nop
   152b0:			; <UNDEFINED> instruction: 0xfbbc0004
   152b4:	lsls	r4, r4, #8
   152b6:	movs	r0, r0
   152b8:	b.n	14c76 <btrfs_list_parse_sort_string@@Base+0xd6>
   152ba:			; <UNDEFINED> instruction: 0xfffffb12
   152be:	movs	r4, r0

000152c0 <btrfs_list_path_for_root@@Base>:
   152c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   152c4:	mov	r6, r2
   152c6:	ldr	r2, [pc, #168]	; (15370 <btrfs_list_path_for_root@@Base+0xb0>)
   152c8:	mov	r7, r3
   152ca:	ldr	r3, [pc, #168]	; (15374 <btrfs_list_path_for_root@@Base+0xb4>)
   152cc:	sub	sp, #28
   152ce:	add	r2, pc
   152d0:	add	r1, sp, #8
   152d2:	mov	r5, r0
   152d4:	ldr	r3, [r2, r3]
   152d6:	ldr	r3, [r3, #0]
   152d8:	str	r3, [sp, #20]
   152da:	mov.w	r3, #0
   152de:	bl	14d68 <btrfs_list_get_path_rootid@@Base>
   152e2:	mov	r9, r0
   152e4:	cbz	r0, 152fc <btrfs_list_path_for_root@@Base+0x3c>
   152e6:	mov	r4, r0
   152e8:	ldr	r2, [pc, #140]	; (15378 <btrfs_list_path_for_root@@Base+0xb8>)
   152ea:	ldr	r3, [pc, #136]	; (15374 <btrfs_list_path_for_root@@Base+0xb4>)
   152ec:	add	r2, pc
   152ee:	ldr	r3, [r2, r3]
   152f0:	ldr	r2, [r3, #0]
   152f2:	ldr	r3, [sp, #20]
   152f4:	eors	r2, r3
   152f6:	beq.n	15368 <btrfs_list_path_for_root@@Base+0xa8>
   152f8:	blx	86b8 <__stack_chk_fail@plt>
   152fc:	add.w	r8, sp, #4
   15300:	mov	r0, r5
   15302:	mov	r1, r8
   15304:	bl	13dd2 <rb_first_postorder@@Base+0x808>
   15308:	subs	r4, r0, #0
   1530a:	blt.n	152e8 <btrfs_list_path_for_root@@Base+0x28>
   1530c:	mov	r1, r8
   1530e:	mov	r0, r5
   15310:	bl	13dac <rb_first_postorder@@Base+0x7e2>
   15314:	subs	r4, r0, #0
   15316:	blt.n	152e8 <btrfs_list_path_for_root@@Base+0x28>
   15318:	mov	r0, r8
   1531a:	mov	r4, r9
   1531c:	bl	134fe <rb_last@@Base>
   15320:	mov	r5, r0
   15322:	cbnz	r5, 15330 <btrfs_list_path_for_root@@Base+0x70>
   15324:	ldr	r1, [pc, #84]	; (1537c <btrfs_list_path_for_root@@Base+0xbc>)
   15326:	mov	r0, r8
   15328:	add	r1, pc
   1532a:	bl	178a6 <rb_free_nodes@@Base>
   1532e:	b.n	152e8 <btrfs_list_path_for_root@@Base+0x28>
   15330:	ldrd	r2, r3, [sp, #8]
   15334:	mov	r1, r5
   15336:	mov	r0, r8
   15338:	bl	13ba8 <rb_first_postorder@@Base+0x5de>
   1533c:	ldrd	r2, r3, [r5, #24]
   15340:	adds	r0, #2
   15342:	bne.n	15350 <btrfs_list_path_for_root@@Base+0x90>
   15344:	cmp	r3, r7
   15346:	it	eq
   15348:	cmpeq	r2, r6
   1534a:	bne.n	1535e <btrfs_list_path_for_root@@Base+0x9e>
   1534c:	movs	r4, #0
   1534e:	b.n	15324 <btrfs_list_path_for_root@@Base+0x64>
   15350:	cmp	r3, r7
   15352:	ittt	eq
   15354:	cmpeq	r2, r6
   15356:	ldreq.w	r4, [r5, #148]	; 0x94
   1535a:	streq.w	r9, [r5, #148]	; 0x94
   1535e:	mov	r0, r5
   15360:	bl	1353a <rb_prev@@Base>
   15364:	mov	r5, r0
   15366:	b.n	15322 <btrfs_list_path_for_root@@Base+0x62>
   15368:	mov	r0, r4
   1536a:	add	sp, #28
   1536c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15370:			; <UNDEFINED> instruction: 0xfaba0004
   15374:	lsls	r4, r4, #8
   15376:	movs	r0, r0
   15378:			; <UNDEFINED> instruction: 0xfa9c0004
   1537c:	b.n	14bc2 <btrfs_list_parse_sort_string@@Base+0x22>
   1537e:	vtbl.8	d18, {d15}, d0
   15382:	mov	r3, r0
   15384:	it	lt
   15386:	addlt.w	r3, r0, #31
   1538a:	and.w	r0, r0, #31
   1538e:	asrs	r3, r3, #5
   15390:	ldr.w	r3, [r1, r3, lsl #2]
   15394:	lsr.w	r0, r3, r0
   15398:	and.w	r0, r0, #1
   1539c:	bx	lr
   1539e:	push	{r4, lr}
   153a0:	mov	r2, r0
   153a2:	ldr	r3, [r0, #0]
   153a4:	ldr	r0, [pc, #60]	; (153e4 <btrfs_list_path_for_root@@Base+0x124>)
   153a6:	add	r0, pc
   153a8:	ldr.w	r0, [r0, r3, lsl #2]
   153ac:	cmp	r0, r1
   153ae:	bcc.n	153de <btrfs_list_path_for_root@@Base+0x11e>
   153b0:	add.w	r0, r2, #8
   153b4:	cbnz	r3, 153ba <btrfs_list_path_for_root@@Base+0xfa>
   153b6:	ldr	r2, [r2, #8]
   153b8:	cbnz	r2, 153c2 <btrfs_list_path_for_root@@Base+0x102>
   153ba:	add.w	r2, r3, r3, lsl #1
   153be:	subs	r2, #3
   153c0:	cbnz	r3, 153c4 <btrfs_list_path_for_root@@Base+0x104>
   153c2:	pop	{r4, pc}
   153c4:	ldr	r0, [r0, #0]
   153c6:	cmp	r0, #0
   153c8:	beq.n	153c2 <btrfs_list_path_for_root@@Base+0x102>
   153ca:	lsr.w	r4, r1, r2
   153ce:	adds	r0, #4
   153d0:	and.w	r4, r4, #7
   153d4:	subs	r2, #3
   153d6:	subs	r3, #1
   153d8:	add.w	r0, r0, r4, lsl #2
   153dc:	b.n	153c0 <btrfs_list_path_for_root@@Base+0x100>
   153de:	movs	r0, #0
   153e0:	b.n	153c2 <btrfs_list_path_for_root@@Base+0x102>
   153e2:	nop
   153e4:	lsrs	r6, r0, #27
   153e6:	movs	r5, r0
   153e8:	ldr	r2, [pc, #12]	; (153f8 <btrfs_list_path_for_root@@Base+0x138>)
   153ea:	add	r2, pc
   153ec:	ldr	r3, [r2, #48]	; 0x30
   153ee:	subs	r3, #1
   153f0:	str	r3, [r2, #48]	; 0x30
   153f2:	b.w	85d8 <free@plt>
   153f6:	nop
   153f8:	lsrs	r2, r0, #26
   153fa:	movs	r5, r0
   153fc:	push	{r4, lr}
   153fe:	movs	r0, #44	; 0x2c
   15400:	blx	8820 <malloc@plt+0x4>
   15404:	mov	r4, r0
   15406:	cbz	r0, 1541a <btrfs_list_path_for_root@@Base+0x15a>
   15408:	movs	r2, #44	; 0x2c
   1540a:	movs	r1, #0
   1540c:	blx	8978 <memset@plt+0x4>
   15410:	ldr	r2, [pc, #12]	; (15420 <btrfs_list_path_for_root@@Base+0x160>)
   15412:	add	r2, pc
   15414:	ldr	r3, [r2, #48]	; 0x30
   15416:	adds	r3, #1
   15418:	str	r3, [r2, #48]	; 0x30
   1541a:	mov	r0, r4
   1541c:	pop	{r4, pc}
   1541e:	nop
   15420:	lsrs	r2, r3, #25
   15422:	movs	r5, r0
   15424:	ldr.w	ip, [pc, #104]	; 15490 <btrfs_list_path_for_root@@Base+0x1d0>
   15428:	push	{r4, r5, lr}
   1542a:	add	ip, pc
   1542c:	ldr	r5, [pc, #100]	; (15494 <btrfs_list_path_for_root@@Base+0x1d4>)
   1542e:	sub	sp, #92	; 0x5c
   15430:	ldr	r4, [pc, #100]	; (15498 <btrfs_list_path_for_root@@Base+0x1d8>)
   15432:	ldr.w	r5, [ip, r5]
   15436:	add	r4, pc
   15438:	ldr	r5, [r5, #0]
   1543a:	str	r5, [sp, #84]	; 0x54
   1543c:	mov.w	r5, #0
   15440:	cbz	r3, 15476 <btrfs_list_path_for_root@@Base+0x1b6>
   15442:	ldr	r5, [pc, #88]	; (1549c <btrfs_list_path_for_root@@Base+0x1dc>)
   15444:	ldr	r4, [r4, r5]
   15446:	strd	r2, r1, [sp]
   1544a:	movs	r1, #1
   1544c:	strd	r0, r3, [sp, #8]
   15450:	ldr	r2, [pc, #76]	; (154a0 <btrfs_list_path_for_root@@Base+0x1e0>)
   15452:	ldr	r3, [pc, #80]	; (154a4 <btrfs_list_path_for_root@@Base+0x1e4>)
   15454:	ldr	r0, [r4, #0]
   15456:	add	r4, sp, #20
   15458:	add	r3, pc
   1545a:	add	r2, pc
   1545c:	blx	8a14 <__fprintf_chk@plt+0x4>
   15460:	movs	r1, #16
   15462:	mov	r0, r4
   15464:	blx	886c <backtrace@plt>
   15468:	movs	r2, #2
   1546a:	mov	r1, r0
   1546c:	mov	r0, r4
   1546e:	blx	8b7c <backtrace_symbols_fd@plt>
   15472:	blx	8b34 <abort@plt>
   15476:	ldr	r2, [pc, #48]	; (154a8 <btrfs_list_path_for_root@@Base+0x1e8>)
   15478:	ldr	r3, [pc, #24]	; (15494 <btrfs_list_path_for_root@@Base+0x1d4>)
   1547a:	add	r2, pc
   1547c:	ldr	r3, [r2, r3]
   1547e:	ldr	r2, [r3, #0]
   15480:	ldr	r3, [sp, #84]	; 0x54
   15482:	eors	r2, r3
   15484:	beq.n	1548a <btrfs_list_path_for_root@@Base+0x1ca>
   15486:	blx	86b8 <__stack_chk_fail@plt>
   1548a:	add	sp, #92	; 0x5c
   1548c:	pop	{r4, r5, pc}
   1548e:	nop
   15490:	ldr??.w	r0, [lr, r4]
   15494:	lsls	r4, r4, #8
   15496:	movs	r0, r0
   15498:	ldr??.w	r0, [r2, r4]
   1549c:	lsls	r4, r6, #8
   1549e:	movs	r0, r0
   154a0:	muls	r0, r1
   154a2:	movs	r2, r0
   154a4:	str	r0, [r7, #48]	; 0x30
   154a6:	movs	r2, r0
   154a8:	vst4.8	{d0-d3}, [lr], r4

000154ac <radix_tree_preload@@Base>:
   154ac:	push	{r3, r4, r5, lr}
   154ae:	ldr	r5, [pc, #36]	; (154d4 <radix_tree_preload@@Base+0x28>)
   154b0:	add	r5, pc
   154b2:	ldr	r4, [r5, #52]	; 0x34
   154b4:	cmp	r4, #11
   154b6:	bls.n	154bc <radix_tree_preload@@Base+0x10>
   154b8:	movs	r0, #0
   154ba:	pop	{r3, r4, r5, pc}
   154bc:	bl	153fc <btrfs_list_path_for_root@@Base+0x13c>
   154c0:	cbz	r0, 154ce <radix_tree_preload@@Base+0x22>
   154c2:	adds	r3, r4, #1
   154c4:	add.w	r4, r5, r4, lsl #2
   154c8:	str	r3, [r5, #52]	; 0x34
   154ca:	str	r0, [r4, #56]	; 0x38
   154cc:	b.n	154b2 <radix_tree_preload@@Base+0x6>
   154ce:	mvn.w	r0, #11
   154d2:	b.n	154ba <radix_tree_preload@@Base+0xe>
   154d4:	lsrs	r4, r7, #22
   154d6:	movs	r5, r0

000154d8 <radix_tree_insert@@Base>:
   154d8:	ldr	r3, [pc, #324]	; (15620 <radix_tree_insert@@Base+0x148>)
   154da:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154de:	add	r3, pc
   154e0:	ldr	r4, [r0, #0]
   154e2:	mov	r8, r2
   154e4:	mov	r5, r0
   154e6:	mov	sl, r1
   154e8:	ldr.w	r2, [r3, r4, lsl #2]
   154ec:	cmp	r1, r2
   154ee:	bls.n	15514 <radix_tree_insert@@Base+0x3c>
   154f0:	adds	r4, #1
   154f2:	ldr.w	r2, [r3, r4, lsl #2]
   154f6:	cmp	sl, r2
   154f8:	bhi.n	154f0 <radix_tree_insert@@Base+0x18>
   154fa:	ldr	r3, [r5, #8]
   154fc:	cbz	r3, 15512 <radix_tree_insert@@Base+0x3a>
   154fe:	movs	r6, #1
   15500:	bl	153fc <btrfs_list_path_for_root@@Base+0x13c>
   15504:	cmp	r0, #0
   15506:	bne.n	1557e <radix_tree_insert@@Base+0xa6>
   15508:	mvn.w	r0, #11
   1550c:	add	sp, #12
   1550e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15512:	str	r4, [r5, #0]
   15514:	ldr.w	r9, [r5]
   15518:	movs	r7, #0
   1551a:	ldr	r6, [r5, #8]
   1551c:	mov	r4, r7
   1551e:	add.w	fp, r9, r9, lsl #1
   15522:	sub.w	fp, fp, #3
   15526:	cmp.w	r9, #0
   1552a:	bne.n	155ae <radix_tree_insert@@Base+0xd6>
   1552c:	cmp	r6, #0
   1552e:	bne.n	15618 <radix_tree_insert@@Base+0x140>
   15530:	cmp	r4, #0
   15532:	beq.n	155e6 <radix_tree_insert@@Base+0x10e>
   15534:	ldr	r3, [r4, #0]
   15536:	add.w	r1, r4, #36	; 0x24
   1553a:	mov	r0, r7
   1553c:	ldr	r5, [pc, #228]	; (15624 <radix_tree_insert@@Base+0x14c>)
   1553e:	adds	r3, #1
   15540:	str	r3, [r4, #0]
   15542:	add.w	r3, r4, r7, lsl #2
   15546:	add	r5, pc
   15548:	str.w	r8, [r3, #4]
   1554c:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15550:	movw	r2, #289	; 0x121
   15554:	mov	r1, r5
   15556:	mov	r3, r0
   15558:	ldr	r0, [pc, #204]	; (15628 <radix_tree_insert@@Base+0x150>)
   1555a:	add	r0, pc
   1555c:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15560:	add.w	r1, r4, #40	; 0x28
   15564:	mov	r0, r7
   15566:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   1556a:	mov.w	r2, #290	; 0x122
   1556e:	mov	r1, r5
   15570:	mov	r3, r0
   15572:	ldr	r0, [pc, #184]	; (1562c <radix_tree_insert@@Base+0x154>)
   15574:	add	r0, pc
   15576:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   1557a:	mov	r0, r6
   1557c:	b.n	1550c <radix_tree_insert@@Base+0x34>
   1557e:	ldr	r3, [r5, #8]
   15580:	str	r3, [r0, #4]
   15582:	ldr	r3, [r5, #4]
   15584:	lsls	r2, r3, #11
   15586:	ittt	mi
   15588:	ldrmi	r3, [r0, #36]	; 0x24
   1558a:	orrmi.w	r3, r3, #1
   1558e:	strmi	r3, [r0, #36]	; 0x24
   15590:	ldr	r3, [r5, #4]
   15592:	str	r6, [r0, #0]
   15594:	lsls	r3, r3, #10
   15596:	ittt	mi
   15598:	ldrmi	r3, [r0, #40]	; 0x28
   1559a:	orrmi.w	r3, r3, #1
   1559e:	strmi	r3, [r0, #40]	; 0x28
   155a0:	ldr	r3, [r5, #0]
   155a2:	str	r0, [r5, #8]
   155a4:	adds	r3, #1
   155a6:	str	r3, [r5, #0]
   155a8:	cmp	r4, r3
   155aa:	bhi.n	15500 <radix_tree_insert@@Base+0x28>
   155ac:	b.n	15514 <radix_tree_insert@@Base+0x3c>
   155ae:	cbnz	r6, 155c8 <radix_tree_insert@@Base+0xf0>
   155b0:	bl	153fc <btrfs_list_path_for_root@@Base+0x13c>
   155b4:	mov	r6, r0
   155b6:	cmp	r0, #0
   155b8:	beq.n	15508 <radix_tree_insert@@Base+0x30>
   155ba:	cbz	r4, 155e2 <radix_tree_insert@@Base+0x10a>
   155bc:	add.w	r7, r4, r7, lsl #2
   155c0:	str	r0, [r7, #4]
   155c2:	ldr	r3, [r4, #0]
   155c4:	adds	r3, #1
   155c6:	str	r3, [r4, #0]
   155c8:	lsr.w	r7, sl, fp
   155cc:	mov	r4, r6
   155ce:	and.w	r7, r7, #7
   155d2:	sub.w	fp, fp, #3
   155d6:	add.w	r9, r9, #4294967295	; 0xffffffff
   155da:	add.w	r3, r6, r7, lsl #2
   155de:	ldr	r6, [r3, #4]
   155e0:	b.n	15526 <radix_tree_insert@@Base+0x4e>
   155e2:	str	r0, [r5, #8]
   155e4:	b.n	155c8 <radix_tree_insert@@Base+0xf0>
   155e6:	str.w	r8, [r5, #8]
   155ea:	movw	r2, #293	; 0x125
   155ee:	ldr	r5, [r5, #4]
   155f0:	ldr	r1, [pc, #60]	; (15630 <radix_tree_insert@@Base+0x158>)
   155f2:	ldr	r0, [pc, #64]	; (15634 <radix_tree_insert@@Base+0x15c>)
   155f4:	and.w	r3, r5, #1048576	; 0x100000
   155f8:	add	r1, pc
   155fa:	str	r1, [sp, #4]
   155fc:	add	r0, pc
   155fe:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15602:	ldr	r0, [pc, #52]	; (15638 <radix_tree_insert@@Base+0x160>)
   15604:	ldr	r1, [sp, #4]
   15606:	and.w	r3, r5, #2097152	; 0x200000
   1560a:	add	r0, pc
   1560c:	mov.w	r2, #294	; 0x126
   15610:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15614:	mov	r0, r4
   15616:	b.n	1550c <radix_tree_insert@@Base+0x34>
   15618:	mvn.w	r0, #16
   1561c:	b.n	1550c <radix_tree_insert@@Base+0x34>
   1561e:	nop
   15620:	lsrs	r6, r1, #22
   15622:	movs	r5, r0
   15624:	str	r4, [r6, #48]	; 0x30
   15626:	movs	r2, r0
   15628:	str	r6, [r1, #36]	; 0x24
   1562a:	movs	r2, r0
   1562c:	str	r5, [r1, #36]	; 0x24
   1562e:	movs	r2, r0
   15630:	str	r2, [r0, #40]	; 0x28
   15632:	movs	r2, r0
   15634:	str	r6, [r3, #28]
   15636:	movs	r2, r0
   15638:	str	r6, [r4, #28]
   1563a:	movs	r2, r0

0001563c <radix_tree_lookup_slot@@Base>:
   1563c:	b.n	1539e <btrfs_list_path_for_root@@Base+0xde>

0001563e <radix_tree_lookup@@Base>:
   1563e:	push	{r3, lr}
   15640:	bl	1539e <btrfs_list_path_for_root@@Base+0xde>
   15644:	cbz	r0, 15648 <radix_tree_lookup@@Base+0xa>
   15646:	ldr	r0, [r0, #0]
   15648:	pop	{r3, pc}

0001564a <radix_tree_tag_set@@Base>:
   1564a:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1564e:	mov	sl, r1
   15650:	vpush	{d8}
   15654:	mov	r5, r0
   15656:	ldr	r3, [pc, #172]	; (15704 <radix_tree_tag_set@@Base+0xba>)
   15658:	mov	r6, r2
   1565a:	movw	r2, #379	; 0x17b
   1565e:	ldr.w	fp, [pc, #168]	; 15708 <radix_tree_tag_set@@Base+0xbe>
   15662:	add	r3, pc
   15664:	add.w	r9, r6, #9
   15668:	ldr	r7, [r0, #0]
   1566a:	add	fp, pc
   1566c:	ldr	r0, [pc, #156]	; (1570c <radix_tree_tag_set@@Base+0xc2>)
   1566e:	mov.w	r9, r9, lsl #2
   15672:	ldr.w	r3, [r3, r7, lsl #2]
   15676:	add	r0, pc
   15678:	add.w	r8, r7, r7, lsl #1
   1567c:	cmp	r1, r3
   1567e:	ldr	r1, [pc, #144]	; (15710 <radix_tree_tag_set@@Base+0xc6>)
   15680:	sub.w	r8, r8, #3
   15684:	add	r1, pc
   15686:	ite	ls
   15688:	movls	r3, #0
   1568a:	movhi	r3, #1
   1568c:	adds	r1, #18
   1568e:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15692:	ldr	r3, [pc, #128]	; (15714 <radix_tree_tag_set@@Base+0xca>)
   15694:	ldr	r4, [r5, #8]
   15696:	add	r3, pc
   15698:	adds	r3, #18
   1569a:	vmov	s16, r3
   1569e:	cbnz	r7, 156be <radix_tree_tag_set@@Base+0x74>
   156a0:	cbz	r4, 156b4 <radix_tree_tag_set@@Base+0x6a>
   156a2:	ldr	r3, [r5, #4]
   156a4:	adds	r6, #20
   156a6:	movs	r1, #1
   156a8:	lsl.w	r6, r1, r6
   156ac:	tst	r3, r6
   156ae:	itt	eq
   156b0:	orreq	r3, r6
   156b2:	streq	r3, [r5, #4]
   156b4:	vpop	{d8}
   156b8:	mov	r0, r4
   156ba:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156be:	lsr.w	r2, sl, r8
   156c2:	add.w	r1, r4, r9
   156c6:	and.w	r2, r2, #7
   156ca:	mov	r0, r2
   156cc:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   156d0:	cbnz	r0, 156e2 <radix_tree_tag_set@@Base+0x98>
   156d2:	movs	r3, #1
   156d4:	lsl.w	r1, r3, r2
   156d8:	ldr.w	r3, [r4, r9]
   156dc:	orrs	r3, r1
   156de:	str.w	r3, [r4, r9]
   156e2:	add.w	r4, r4, r2, lsl #2
   156e6:	vmov	r1, s16
   156ea:	movw	r2, #391	; 0x187
   156ee:	mov	r0, fp
   156f0:	ldr	r4, [r4, #4]
   156f2:	sub.w	r8, r8, #3
   156f6:	subs	r7, #1
   156f8:	clz	r3, r4
   156fc:	lsrs	r3, r3, #5
   156fe:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15702:	b.n	1569e <radix_tree_tag_set@@Base+0x54>
   15704:	lsrs	r2, r1, #16
   15706:	movs	r5, r0
   15708:	str	r0, [r0, #28]
   1570a:	movs	r2, r0
   1570c:	str	r0, [r2, #24]
   1570e:	movs	r2, r0
   15710:	str	r6, [r6, #28]
   15712:	movs	r2, r0
   15714:	str	r4, [r4, #28]
   15716:	movs	r2, r0

00015718 <radix_tree_tag_clear@@Base>:
   15718:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1571c:	mov	r7, r0
   1571e:	ldr	r0, [pc, #236]	; (1580c <radix_tree_tag_clear@@Base+0xf4>)
   15720:	sub	sp, #108	; 0x6c
   15722:	ldr	r3, [pc, #236]	; (15810 <radix_tree_tag_clear@@Base+0xf8>)
   15724:	add	r0, pc
   15726:	ldr	r3, [r0, r3]
   15728:	ldr	r0, [pc, #232]	; (15814 <radix_tree_tag_clear@@Base+0xfc>)
   1572a:	ldr	r3, [r3, #0]
   1572c:	str	r3, [sp, #100]	; 0x64
   1572e:	mov.w	r3, #0
   15732:	ldr	r3, [r7, #0]
   15734:	add	r0, pc
   15736:	ldr.w	r0, [r0, r3, lsl #2]
   1573a:	cmp	r1, r0
   1573c:	bls.n	15754 <radix_tree_tag_clear@@Base+0x3c>
   1573e:	movs	r6, #0
   15740:	ldr	r2, [pc, #212]	; (15818 <radix_tree_tag_clear@@Base+0x100>)
   15742:	ldr	r3, [pc, #204]	; (15810 <radix_tree_tag_clear@@Base+0xf8>)
   15744:	add	r2, pc
   15746:	ldr	r3, [r2, r3]
   15748:	ldr	r2, [r3, #0]
   1574a:	ldr	r3, [sp, #100]	; 0x64
   1574c:	eors	r2, r3
   1574e:	beq.n	15804 <radix_tree_tag_clear@@Base+0xec>
   15750:	blx	86b8 <__stack_chk_fail@plt>
   15754:	add.w	r4, r3, r3, lsl #1
   15758:	ldr	r6, [r7, #8]
   1575a:	subs	r4, #3
   1575c:	add	r5, sp, #4
   1575e:	movs	r0, #0
   15760:	str	r0, [sp, #4]
   15762:	cbnz	r3, 1579c <radix_tree_tag_clear@@Base+0x84>
   15764:	cmp	r6, #0
   15766:	beq.n	1573e <radix_tree_tag_clear@@Base+0x26>
   15768:	add.w	r9, r2, #9
   1576c:	add.w	sl, r2, #8
   15770:	subs	r5, #8
   15772:	mov.w	fp, #1
   15776:	mov.w	r9, r9, lsl #2
   1577a:	mov.w	sl, sl, lsl #2
   1577e:	ldr.w	r8, [r5, #8]
   15782:	cmp.w	r8, #0
   15786:	bne.n	157ba <radix_tree_tag_clear@@Base+0xa2>
   15788:	ldr	r3, [r7, #4]
   1578a:	adds	r2, #20
   1578c:	movs	r1, #1
   1578e:	lsl.w	r2, r1, r2
   15792:	tst	r3, r2
   15794:	itt	ne
   15796:	bicne	r3, r2
   15798:	strne	r3, [r7, #4]
   1579a:	b.n	15740 <radix_tree_tag_clear@@Base+0x28>
   1579c:	cmp	r6, #0
   1579e:	beq.n	1573e <radix_tree_tag_clear@@Base+0x26>
   157a0:	lsr.w	r0, r1, r4
   157a4:	subs	r3, #1
   157a6:	and.w	r0, r0, #7
   157aa:	str	r0, [r5, #12]
   157ac:	str.w	r6, [r5, #8]!
   157b0:	subs	r4, #3
   157b2:	add.w	r6, r6, r0, lsl #2
   157b6:	ldr	r6, [r6, #4]
   157b8:	b.n	15762 <radix_tree_tag_clear@@Base+0x4a>
   157ba:	ldr	r4, [r5, #12]
   157bc:	add.w	r1, r8, r9
   157c0:	mov	r0, r4
   157c2:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   157c6:	cmp	r0, #0
   157c8:	beq.n	15740 <radix_tree_tag_clear@@Base+0x28>
   157ca:	cmp	r4, #0
   157cc:	mov	r0, r4
   157ce:	it	lt
   157d0:	addlt.w	r0, r4, #31
   157d4:	negs	r3, r4
   157d6:	and.w	r3, r3, #31
   157da:	and.w	r4, r4, #31
   157de:	mov.w	r0, r0, asr #5
   157e2:	it	pl
   157e4:	negpl	r4, r3
   157e6:	add	r8, sl
   157e8:	lsl.w	r4, fp, r4
   157ec:	ldr.w	r3, [r1, r0, lsl #2]
   157f0:	subs	r5, #8
   157f2:	bic.w	r4, r3, r4
   157f6:	str.w	r4, [r1, r0, lsl #2]
   157fa:	ldr.w	r3, [r8, #4]
   157fe:	cmp	r3, #0
   15800:	bne.n	15740 <radix_tree_tag_clear@@Base+0x28>
   15802:	b.n	1577e <radix_tree_tag_clear@@Base+0x66>
   15804:	mov	r0, r6
   15806:	add	sp, #108	; 0x6c
   15808:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1580c:			; <UNDEFINED> instruction: 0xf6640004
   15810:	lsls	r4, r4, #8
   15812:	movs	r0, r0
   15814:	lsrs	r0, r7, #12
   15816:	movs	r5, r0
   15818:	movw	r0, #18436	; 0x4804

0001581c <radix_tree_tag_get@@Base>:
   1581c:	ldr	r3, [pc, #140]	; (158ac <radix_tree_tag_get@@Base+0x90>)
   1581e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15822:	add	r3, pc
   15824:	ldr	r4, [r0, #0]
   15826:	mov	r6, r1
   15828:	ldr.w	r3, [r3, r4, lsl #2]
   1582c:	cmp	r1, r3
   1582e:	bhi.n	158a4 <radix_tree_tag_get@@Base+0x88>
   15830:	ldr	r5, [r0, #4]
   15832:	add.w	r1, r2, #20
   15836:	movs	r3, #1
   15838:	lsl.w	r1, r3, r1
   1583c:	tst	r1, r5
   1583e:	beq.n	158a4 <radix_tree_tag_get@@Base+0x88>
   15840:	cbz	r4, 158a8 <radix_tree_tag_get@@Base+0x8c>
   15842:	adds	r2, #9
   15844:	add.w	r4, r4, r4, lsl #1
   15848:	ldr	r7, [r0, #8]
   1584a:	subs	r4, #3
   1584c:	lsls	r2, r2, #2
   1584e:	mov.w	r8, #0
   15852:	cbz	r7, 158a4 <radix_tree_tag_get@@Base+0x88>
   15854:	lsr.w	r5, r6, r4
   15858:	adds	r1, r7, r2
   1585a:	and.w	r5, r5, #7
   1585e:	mov	r0, r5
   15860:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15864:	cmp	r0, #0
   15866:	it	eq
   15868:	moveq.w	r8, #1
   1586c:	cbnz	r4, 1589a <radix_tree_tag_get@@Base+0x7e>
   1586e:	mov	r0, r5
   15870:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15874:	ldr	r1, [pc, #56]	; (158b0 <radix_tree_tag_get@@Base+0x94>)
   15876:	movw	r2, #517	; 0x205
   1587a:	add	r1, pc
   1587c:	adds	r1, #37	; 0x25
   1587e:	subs	r4, r0, #0
   15880:	ldr	r0, [pc, #48]	; (158b4 <radix_tree_tag_get@@Base+0x98>)
   15882:	it	ne
   15884:	movne	r3, r8
   15886:	add	r0, pc
   15888:	it	eq
   1588a:	moveq	r3, #0
   1588c:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15890:	subs	r0, r4, #0
   15892:	it	ne
   15894:	movne	r0, #1
   15896:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1589a:	add.w	r5, r7, r5, lsl #2
   1589e:	subs	r4, #3
   158a0:	ldr	r7, [r5, #4]
   158a2:	b.n	15852 <radix_tree_tag_get@@Base+0x36>
   158a4:	movs	r0, #0
   158a6:	b.n	15896 <radix_tree_tag_get@@Base+0x7a>
   158a8:	mov	r0, r3
   158aa:	b.n	15896 <radix_tree_tag_get@@Base+0x7a>
   158ac:	lsrs	r2, r1, #9
   158ae:	movs	r5, r0
   158b0:	str	r0, [r0, #0]
   158b2:	movs	r2, r0
   158b4:	ldrsh	r1, [r6, r6]
   158b6:	movs	r2, r0

000158b8 <radix_tree_gang_lookup@@Base>:
   158b8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158bc:	mov	r6, r0
   158be:	ldr	r4, [r0, #0]
   158c0:	mov.w	fp, #1
   158c4:	ldr	r0, [pc, #172]	; (15974 <radix_tree_gang_lookup@@Base+0xbc>)
   158c6:	add	r0, pc
   158c8:	ldr.w	r0, [r0, r4, lsl #2]
   158cc:	str	r0, [sp, #4]
   158ce:	movs	r0, #0
   158d0:	cmp	r0, r3
   158d2:	bcs.n	158f4 <radix_tree_gang_lookup@@Base+0x3c>
   158d4:	ldr	r4, [sp, #4]
   158d6:	cmp	r2, r4
   158d8:	bhi.n	158f4 <radix_tree_gang_lookup@@Base+0x3c>
   158da:	ldr	r4, [r6, #0]
   158dc:	lsls	r7, r0, #2
   158de:	ldr	r5, [r6, #8]
   158e0:	add.w	sl, r1, r0, lsl #2
   158e4:	cbnz	r4, 158fa <radix_tree_gang_lookup@@Base+0x42>
   158e6:	cbz	r5, 158ee <radix_tree_gang_lookup@@Base+0x36>
   158e8:	cbnz	r2, 158ee <radix_tree_gang_lookup@@Base+0x36>
   158ea:	movs	r4, #1
   158ec:	str	r5, [r1, r7]
   158ee:	add	r0, r4
   158f0:	cmp	r2, #0
   158f2:	bne.n	158d0 <radix_tree_gang_lookup@@Base+0x18>
   158f4:	add	sp, #12
   158f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158fa:	add.w	r4, r4, r4, lsl #1
   158fe:	subs	r4, #3
   15900:	cbnz	r4, 15936 <radix_tree_gang_lookup@@Base+0x7e>
   15902:	and.w	ip, r2, #7
   15906:	sub.w	lr, r3, r0
   1590a:	add.w	r7, ip, #1
   1590e:	sub.w	ip, r2, ip
   15912:	ldr.w	r9, [r5, r7, lsl #2]
   15916:	add.w	r2, ip, r7
   1591a:	cmp.w	r9, #0
   1591e:	beq.n	1592e <radix_tree_gang_lookup@@Base+0x76>
   15920:	add.w	r8, r4, #1
   15924:	str.w	r9, [sl, r4, lsl #2]
   15928:	cmp	lr, r8
   1592a:	beq.n	1596a <radix_tree_gang_lookup@@Base+0xb2>
   1592c:	mov	r4, r8
   1592e:	adds	r7, #1
   15930:	cmp	r7, #9
   15932:	bne.n	15912 <radix_tree_gang_lookup@@Base+0x5a>
   15934:	b.n	158ee <radix_tree_gang_lookup@@Base+0x36>
   15936:	lsr.w	r7, r2, r4
   1593a:	lsl.w	lr, fp, r4
   1593e:	and.w	r7, r7, #7
   15942:	rsb	r8, lr, #0
   15946:	adds	r7, #1
   15948:	ldr.w	ip, [r5, r7, lsl #2]
   1594c:	cmp.w	ip, #0
   15950:	bne.n	1596e <radix_tree_gang_lookup@@Base+0xb6>
   15952:	and.w	r2, r8, r2
   15956:	adds.w	r2, lr, r2
   1595a:	beq.n	15966 <radix_tree_gang_lookup@@Base+0xae>
   1595c:	adds	r7, #1
   1595e:	cmp	r7, #9
   15960:	bne.n	15948 <radix_tree_gang_lookup@@Base+0x90>
   15962:	mov	r4, ip
   15964:	b.n	158ee <radix_tree_gang_lookup@@Base+0x36>
   15966:	mov	r4, r2
   15968:	b.n	158ee <radix_tree_gang_lookup@@Base+0x36>
   1596a:	mov	r4, lr
   1596c:	b.n	158ee <radix_tree_gang_lookup@@Base+0x36>
   1596e:	subs	r4, #3
   15970:	mov	r5, ip
   15972:	b.n	15900 <radix_tree_gang_lookup@@Base+0x48>
   15974:	lsrs	r6, r4, #6
   15976:	movs	r5, r0

00015978 <radix_tree_gang_lookup_tag@@Base>:
   15978:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1597c:	mov	r4, r2
   1597e:	vpush	{d8-d9}
   15982:	movs	r5, #1
   15984:	mov	r7, r0
   15986:	sub	sp, #44	; 0x2c
   15988:	str	r3, [sp, #24]
   1598a:	ldr	r3, [sp, #96]	; 0x60
   1598c:	str	r1, [sp, #20]
   1598e:	add.w	r2, r3, #20
   15992:	lsls	r5, r2
   15994:	ldr	r2, [r0, #4]
   15996:	ands	r5, r2
   15998:	beq.n	159ec <radix_tree_gang_lookup_tag@@Base+0x74>
   1599a:	adds	r3, #9
   1599c:	ldr	r2, [pc, #340]	; (15af4 <radix_tree_gang_lookup_tag@@Base+0x17c>)
   1599e:	ldr	r1, [r0, #0]
   159a0:	movs	r5, #0
   159a2:	lsls	r3, r3, #2
   159a4:	str	r3, [sp, #36]	; 0x24
   159a6:	ldr	r3, [pc, #336]	; (15af8 <radix_tree_gang_lookup_tag@@Base+0x180>)
   159a8:	add	r2, pc
   159aa:	add	r3, pc
   159ac:	ldr.w	r2, [r2, r1, lsl #2]
   159b0:	adds	r3, #56	; 0x38
   159b2:	vmov	s18, r3
   159b6:	str	r2, [sp, #32]
   159b8:	ldr	r3, [sp, #24]
   159ba:	cmp	r5, r3
   159bc:	bcs.n	159ec <radix_tree_gang_lookup_tag@@Base+0x74>
   159be:	ldr	r3, [sp, #32]
   159c0:	cmp	r4, r3
   159c2:	bhi.n	159ec <radix_tree_gang_lookup_tag@@Base+0x74>
   159c4:	ldr	r6, [r7, #0]
   159c6:	lsls	r3, r5, #2
   159c8:	ldr	r2, [sp, #20]
   159ca:	ldr.w	r8, [r7, #8]
   159ce:	add.w	r2, r2, r5, lsl #2
   159d2:	str	r2, [sp, #28]
   159d4:	cbnz	r6, 159f8 <radix_tree_gang_lookup_tag@@Base+0x80>
   159d6:	cmp.w	r8, #0
   159da:	beq.n	159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   159dc:	cbnz	r4, 159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   159de:	ldr	r2, [sp, #20]
   159e0:	movs	r6, #1
   159e2:	str.w	r8, [r2, r3]
   159e6:	add	r5, r6
   159e8:	cmp	r4, #0
   159ea:	bne.n	159b8 <radix_tree_gang_lookup_tag@@Base+0x40>
   159ec:	mov	r0, r5
   159ee:	add	sp, #44	; 0x2c
   159f0:	vpop	{d8-d9}
   159f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159f8:	ldr	r3, [sp, #24]
   159fa:	subs	r3, r3, r5
   159fc:	str	r3, [sp, #8]
   159fe:	add.w	r3, r6, r6, lsl #1
   15a02:	subs	r3, #3
   15a04:	strd	r3, r6, [sp]
   15a08:	movs	r6, #0
   15a0a:	ldr	r3, [sp, #0]
   15a0c:	mov.w	sl, #1
   15a10:	lsr.w	r9, r4, r3
   15a14:	ldr	r3, [sp, #36]	; 0x24
   15a16:	and.w	r9, r9, #7
   15a1a:	add	r3, r8
   15a1c:	vmov	s16, r3
   15a20:	ldr	r3, [sp, #0]
   15a22:	lsl.w	sl, sl, r3
   15a26:	rsb	fp, sl, #0
   15a2a:	vmov	r1, s16
   15a2e:	mov	r0, r9
   15a30:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15a34:	cmp	r0, #0
   15a36:	beq.n	15ad6 <radix_tree_gang_lookup_tag@@Base+0x15e>
   15a38:	add.w	fp, r8, r9, lsl #2
   15a3c:	ldr	r1, [pc, #188]	; (15afc <radix_tree_gang_lookup_tag@@Base+0x184>)
   15a3e:	ldr	r0, [pc, #192]	; (15b00 <radix_tree_gang_lookup_tag@@Base+0x188>)
   15a40:	movw	r2, #642	; 0x282
   15a44:	ldr.w	r3, [fp, #4]
   15a48:	add	r1, pc
   15a4a:	adds	r1, #56	; 0x38
   15a4c:	add	r0, pc
   15a4e:	clz	r3, r3
   15a52:	lsrs	r3, r3, #5
   15a54:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15a58:	ldr	r3, [sp, #4]
   15a5a:	subs	r3, #1
   15a5c:	str	r3, [sp, #4]
   15a5e:	bne.n	15ac4 <radix_tree_gang_lookup_tag@@Base+0x14c>
   15a60:	and.w	r3, r4, #7
   15a64:	str	r3, [sp, #12]
   15a66:	add.w	r9, r3, #1
   15a6a:	ldr	r3, [pc, #152]	; (15b04 <radix_tree_gang_lookup_tag@@Base+0x18c>)
   15a6c:	add	r3, pc
   15a6e:	vmov	s17, r3
   15a72:	ldr	r3, [sp, #12]
   15a74:	add.w	r0, r9, #4294967295	; 0xffffffff
   15a78:	vmov	r1, s16
   15a7c:	sub.w	sl, r4, r3
   15a80:	add	sl, r9
   15a82:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15a86:	cbz	r0, 15ab8 <radix_tree_gang_lookup_tag@@Base+0x140>
   15a88:	ldr.w	r3, [r8, r9, lsl #2]
   15a8c:	movw	r2, #659	; 0x293
   15a90:	vmov	r1, s18
   15a94:	vmov	r0, s17
   15a98:	str	r3, [sp, #16]
   15a9a:	clz	r3, r3
   15a9e:	lsrs	r3, r3, #5
   15aa0:	bl	15424 <btrfs_list_path_for_root@@Base+0x164>
   15aa4:	ldr	r2, [sp, #28]
   15aa6:	adds	r3, r6, #1
   15aa8:	mov	r1, r2
   15aaa:	ldr	r2, [sp, #16]
   15aac:	str.w	r2, [r1, r6, lsl #2]
   15ab0:	ldr	r2, [sp, #8]
   15ab2:	cmp	r2, r3
   15ab4:	beq.n	15aec <radix_tree_gang_lookup_tag@@Base+0x174>
   15ab6:	mov	r6, r3
   15ab8:	add.w	r9, r9, #1
   15abc:	cmp.w	r9, #9
   15ac0:	bne.n	15a72 <radix_tree_gang_lookup_tag@@Base+0xfa>
   15ac2:	mov	r4, sl
   15ac4:	ldr	r3, [sp, #0]
   15ac6:	ldr.w	r8, [fp, #4]
   15aca:	subs	r3, #3
   15acc:	str	r3, [sp, #0]
   15ace:	ldr	r3, [sp, #4]
   15ad0:	cmp	r3, #0
   15ad2:	bne.n	15a0a <radix_tree_gang_lookup_tag@@Base+0x92>
   15ad4:	b.n	159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   15ad6:	and.w	r4, fp, r4
   15ada:	adds.w	r4, sl, r4
   15ade:	beq.n	159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   15ae0:	add.w	r9, r9, #1
   15ae4:	cmp.w	r9, #8
   15ae8:	bne.n	15a2a <radix_tree_gang_lookup_tag@@Base+0xb2>
   15aea:	b.n	159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   15aec:	ldr	r6, [sp, #8]
   15aee:	mov	r4, sl
   15af0:	b.n	159e6 <radix_tree_gang_lookup_tag@@Base+0x6e>
   15af2:	nop
   15af4:	lsrs	r4, r0, #3
   15af6:	movs	r5, r0
   15af8:	ldrsh	r0, [r2, r3]
   15afa:	movs	r2, r0
   15afc:	ldrsh	r2, [r6, r0]
   15afe:	movs	r2, r0
   15b00:	ldrsh	r0, [r0, r0]
   15b02:	movs	r2, r0
   15b04:	ldrb	r7, [r6, r7]
   15b06:	movs	r2, r0

00015b08 <radix_tree_delete@@Base>:
   15b08:	ldr	r2, [pc, #292]	; (15c30 <radix_tree_delete@@Base+0x128>)
   15b0a:	ldr	r3, [pc, #296]	; (15c34 <radix_tree_delete@@Base+0x12c>)
   15b0c:	add	r2, pc
   15b0e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15b12:	sub	sp, #108	; 0x6c
   15b14:	ldr	r3, [r2, r3]
   15b16:	mov	r4, r0
   15b18:	ldr	r2, [r0, #0]
   15b1a:	mov	r7, r1
   15b1c:	ldr	r3, [r3, #0]
   15b1e:	str	r3, [sp, #100]	; 0x64
   15b20:	mov.w	r3, #0
   15b24:	ldr	r3, [pc, #272]	; (15c38 <radix_tree_delete@@Base+0x130>)
   15b26:	add	r3, pc
   15b28:	ldr.w	r3, [r3, r2, lsl #2]
   15b2c:	cmp	r3, r1
   15b2e:	bcs.n	15b46 <radix_tree_delete@@Base+0x3e>
   15b30:	movs	r5, #0
   15b32:	ldr	r2, [pc, #264]	; (15c3c <radix_tree_delete@@Base+0x134>)
   15b34:	ldr	r3, [pc, #252]	; (15c34 <radix_tree_delete@@Base+0x12c>)
   15b36:	add	r2, pc
   15b38:	ldr	r3, [r2, r3]
   15b3a:	ldr	r2, [r3, #0]
   15b3c:	ldr	r3, [sp, #100]	; 0x64
   15b3e:	eors	r2, r3
   15b40:	beq.n	15c26 <radix_tree_delete@@Base+0x11e>
   15b42:	blx	86b8 <__stack_chk_fail@plt>
   15b46:	ldr	r5, [r0, #8]
   15b48:	cbnz	r2, 15b58 <radix_tree_delete@@Base+0x50>
   15b4a:	cbz	r5, 15b58 <radix_tree_delete@@Base+0x50>
   15b4c:	ldr	r3, [r0, #4]
   15b4e:	ubfx	r3, r3, #0, #20
   15b52:	strd	r3, r2, [r0, #4]
   15b56:	b.n	15b32 <radix_tree_delete@@Base+0x2a>
   15b58:	add.w	r3, r2, r2, lsl #1
   15b5c:	add	r6, sp, #4
   15b5e:	subs	r3, #3
   15b60:	mov	r9, r5
   15b62:	movs	r1, #0
   15b64:	str	r1, [sp, #4]
   15b66:	cmp	r5, #0
   15b68:	beq.n	15b30 <radix_tree_delete@@Base+0x28>
   15b6a:	lsr.w	r8, r7, r3
   15b6e:	add.w	r1, r6, #8
   15b72:	and.w	r8, r8, #7
   15b76:	subs	r2, #1
   15b78:	str.w	r8, [r1, #4]
   15b7c:	sub.w	r3, r3, #3
   15b80:	str	r5, [r6, #8]
   15b82:	add.w	r5, r5, r8, lsl #2
   15b86:	ldr	r5, [r5, #4]
   15b88:	bne.n	15bcc <radix_tree_delete@@Base+0xc4>
   15b8a:	cmp	r5, #0
   15b8c:	beq.n	15b30 <radix_tree_delete@@Base+0x28>
   15b8e:	add.w	r1, r9, #36	; 0x24
   15b92:	mov	r0, r8
   15b94:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15b98:	cbz	r0, 15ba2 <radix_tree_delete@@Base+0x9a>
   15b9a:	mov	r1, r7
   15b9c:	mov	r0, r4
   15b9e:	bl	15718 <radix_tree_tag_clear@@Base>
   15ba2:	add.w	r1, r9, #40	; 0x28
   15ba6:	mov	r0, r8
   15ba8:	bl	15380 <btrfs_list_path_for_root@@Base+0xc0>
   15bac:	cbz	r0, 15bb8 <radix_tree_delete@@Base+0xb0>
   15bae:	movs	r2, #1
   15bb0:	mov	r1, r7
   15bb2:	mov	r0, r4
   15bb4:	bl	15718 <radix_tree_tag_clear@@Base>
   15bb8:	movs	r7, #0
   15bba:	ldr	r0, [r6, #8]
   15bbc:	cbnz	r0, 15bd2 <radix_tree_delete@@Base+0xca>
   15bbe:	ldr	r3, [r4, #4]
   15bc0:	str	r0, [r4, #8]
   15bc2:	ubfx	r3, r3, #0, #20
   15bc6:	strd	r0, r3, [r4]
   15bca:	b.n	15b32 <radix_tree_delete@@Base+0x2a>
   15bcc:	mov	r9, r5
   15bce:	mov	r6, r1
   15bd0:	b.n	15b66 <radix_tree_delete@@Base+0x5e>
   15bd2:	ldr	r3, [r6, #12]
   15bd4:	subs	r6, #8
   15bd6:	add.w	r3, r0, r3, lsl #2
   15bda:	str	r7, [r3, #4]
   15bdc:	ldr	r3, [r0, #0]
   15bde:	subs	r3, #1
   15be0:	str	r3, [r0, #0]
   15be2:	cbz	r3, 15c20 <radix_tree_delete@@Base+0x118>
   15be4:	ldr	r3, [r4, #8]
   15be6:	cmp	r3, r0
   15be8:	bne.n	15b32 <radix_tree_delete@@Base+0x2a>
   15bea:	movs	r6, #0
   15bec:	ldr	r3, [r4, #0]
   15bee:	cmp	r3, #0
   15bf0:	beq.n	15b32 <radix_tree_delete@@Base+0x2a>
   15bf2:	ldr	r0, [r4, #8]
   15bf4:	ldr	r2, [r0, #0]
   15bf6:	cmp	r2, #1
   15bf8:	bne.n	15b32 <radix_tree_delete@@Base+0x2a>
   15bfa:	ldr	r2, [r0, #4]
   15bfc:	cmp	r2, #0
   15bfe:	beq.n	15b32 <radix_tree_delete@@Base+0x2a>
   15c00:	str	r2, [r4, #8]
   15c02:	subs	r3, #1
   15c04:	str	r3, [r4, #0]
   15c06:	ldr	r3, [r0, #36]	; 0x24
   15c08:	strd	r6, r6, [r0]
   15c0c:	bic.w	r3, r3, #1
   15c10:	str	r3, [r0, #36]	; 0x24
   15c12:	ldr	r3, [r0, #40]	; 0x28
   15c14:	bic.w	r3, r3, #1
   15c18:	str	r3, [r0, #40]	; 0x28
   15c1a:	bl	153e8 <btrfs_list_path_for_root@@Base+0x128>
   15c1e:	b.n	15bec <radix_tree_delete@@Base+0xe4>
   15c20:	bl	153e8 <btrfs_list_path_for_root@@Base+0x128>
   15c24:	b.n	15bba <radix_tree_delete@@Base+0xb2>
   15c26:	mov	r0, r5
   15c28:	add	sp, #108	; 0x6c
   15c2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15c2e:	nop
   15c30:			; <UNDEFINED> instruction: 0xf27c0004
   15c34:	lsls	r4, r4, #8
   15c36:	movs	r0, r0
   15c38:	lsls	r6, r0, #29
   15c3a:	movs	r5, r0
   15c3c:			; <UNDEFINED> instruction: 0xf2520004

00015c40 <radix_tree_tagged@@Base>:
   15c40:	ldr	r0, [r0, #4]
   15c42:	movs	r3, #1
   15c44:	adds	r1, #20
   15c46:	lsl.w	r1, r3, r1
   15c4a:	ands	r0, r1
   15c4c:	bx	lr

00015c4e <radix_tree_init@@Base>:
   15c4e:	ldr	r1, [pc, #44]	; (15c7c <radix_tree_init@@Base+0x2e>)
   15c50:	movs	r2, #0
   15c52:	mov.w	r0, #4294967295	; 0xffffffff
   15c56:	add	r1, pc
   15c58:	cmp	r2, #31
   15c5a:	it	ls
   15c5c:	rsbls	r3, r2, #31
   15c60:	add.w	r2, r2, #3
   15c64:	itet	ls
   15c66:	lsrls.w	r3, r0, r3
   15c6a:	movhi.w	r3, #4294967295	; 0xffffffff
   15c6e:	lsrls	r3, r3, #1
   15c70:	cmp	r2, #36	; 0x24
   15c72:	str.w	r3, [r1], #4
   15c76:	bne.n	15c58 <radix_tree_init@@Base+0xa>
   15c78:	bx	lr
   15c7a:	nop
   15c7c:	lsls	r6, r2, #24
   15c7e:	movs	r5, r0
   15c80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15c84:	ldrd	r2, r3, [r0, #24]
   15c88:	ldrd	ip, r0, [r0, #32]
   15c8c:	ldrd	r4, r5, [r1, #8]
   15c90:	adds.w	r8, r2, ip
   15c94:	adc.w	r9, r3, r0
   15c98:	cmp	r5, r9
   15c9a:	it	eq
   15c9c:	cmpeq	r4, r8
   15c9e:	bcs.n	15cbc <radix_tree_init@@Base+0x6e>
   15ca0:	ldrd	r0, r1, [r1, #16]
   15ca4:	adds	r6, r4, r0
   15ca6:	adc.w	r7, r5, r1
   15caa:	cmp	r3, r7
   15cac:	it	eq
   15cae:	cmpeq	r2, r6
   15cb0:	ite	cs
   15cb2:	movcs.w	r0, #4294967295	; 0xffffffff
   15cb6:	movcc	r0, #0
   15cb8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15cbc:	movs	r0, #1
   15cbe:	b.n	15cb8 <radix_tree_init@@Base+0x6a>
   15cc0:	ldr	r2, [pc, #64]	; (15d04 <radix_tree_init@@Base+0xb6>)
   15cc2:	ldr	r3, [pc, #68]	; (15d08 <radix_tree_init@@Base+0xba>)
   15cc4:	add	r2, pc
   15cc6:	push	{lr}
   15cc8:	sub	sp, #36	; 0x24
   15cca:	ldr	r3, [r2, r3]
   15ccc:	ldr	r3, [r3, #0]
   15cce:	str	r3, [sp, #28]
   15cd0:	mov.w	r3, #0
   15cd4:	ldrd	r2, r3, [r1, #24]
   15cd8:	strd	r2, r3, [sp, #8]
   15cdc:	ldrd	r2, r3, [r1, #32]
   15ce0:	mov	r1, sp
   15ce2:	strd	r2, r3, [sp, #16]
   15ce6:	bl	15c80 <radix_tree_init@@Base+0x32>
   15cea:	ldr	r2, [pc, #32]	; (15d0c <radix_tree_init@@Base+0xbe>)
   15cec:	ldr	r3, [pc, #24]	; (15d08 <radix_tree_init@@Base+0xba>)
   15cee:	add	r2, pc
   15cf0:	ldr	r3, [r2, r3]
   15cf2:	ldr	r2, [r3, #0]
   15cf4:	ldr	r3, [sp, #28]
   15cf6:	eors	r2, r3
   15cf8:	beq.n	15cfe <radix_tree_init@@Base+0xb0>
   15cfa:	blx	86b8 <__stack_chk_fail@plt>
   15cfe:	add	sp, #36	; 0x24
   15d00:	ldr.w	pc, [sp], #4
   15d04:			; <UNDEFINED> instruction: 0xf0c40004
   15d08:	lsls	r4, r4, #8
   15d0a:	movs	r0, r0
   15d0c:	eors.w	r0, sl, #4
   15d10:	b.w	85d8 <free@plt>
   15d14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15d18:	ldrd	r2, r3, [r0, #16]
   15d1c:	ldrd	r8, r9, [r1]
   15d20:	cmp	r3, r9
   15d22:	it	eq
   15d24:	cmpeq	r2, r8
   15d26:	bcc.n	15d70 <radix_tree_init@@Base+0x122>
   15d28:	cmp	r9, r3
   15d2a:	it	eq
   15d2c:	cmpeq	r8, r2
   15d2e:	bcc.n	15d6a <radix_tree_init@@Base+0x11c>
   15d30:	ldrd	r2, r3, [r0, #24]
   15d34:	ldrd	ip, r0, [r0, #32]
   15d38:	ldrd	r8, r9, [r1, #8]
   15d3c:	adds.w	r6, r2, ip
   15d40:	adc.w	r7, r3, r0
   15d44:	cmp	r9, r7
   15d46:	it	eq
   15d48:	cmpeq	r8, r6
   15d4a:	bcs.n	15d70 <radix_tree_init@@Base+0x122>
   15d4c:	ldrd	r0, r1, [r1, #16]
   15d50:	adds.w	r4, r8, r0
   15d54:	adc.w	r5, r9, r1
   15d58:	cmp	r3, r5
   15d5a:	it	eq
   15d5c:	cmpeq	r2, r4
   15d5e:	ite	cs
   15d60:	movcs.w	r0, #4294967295	; 0xffffffff
   15d64:	movcc	r0, #0
   15d66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15d6a:	mov.w	r0, #4294967295	; 0xffffffff
   15d6e:	b.n	15d66 <radix_tree_init@@Base+0x118>
   15d70:	movs	r0, #1
   15d72:	b.n	15d66 <radix_tree_init@@Base+0x118>
   15d74:	ldr	r2, [pc, #72]	; (15dc0 <radix_tree_init@@Base+0x172>)
   15d76:	ldr	r3, [pc, #76]	; (15dc4 <radix_tree_init@@Base+0x176>)
   15d78:	add	r2, pc
   15d7a:	push	{lr}
   15d7c:	sub	sp, #36	; 0x24
   15d7e:	ldr	r3, [r2, r3]
   15d80:	ldr	r3, [r3, #0]
   15d82:	str	r3, [sp, #28]
   15d84:	mov.w	r3, #0
   15d88:	ldrd	r2, r3, [r1, #16]
   15d8c:	strd	r2, r3, [sp]
   15d90:	ldrd	r2, r3, [r1, #24]
   15d94:	strd	r2, r3, [sp, #8]
   15d98:	ldrd	r2, r3, [r1, #32]
   15d9c:	mov	r1, sp
   15d9e:	strd	r2, r3, [sp, #16]
   15da2:	bl	15d14 <radix_tree_init@@Base+0xc6>
   15da6:	ldr	r2, [pc, #32]	; (15dc8 <radix_tree_init@@Base+0x17a>)
   15da8:	ldr	r3, [pc, #24]	; (15dc4 <radix_tree_init@@Base+0x176>)
   15daa:	add	r2, pc
   15dac:	ldr	r3, [r2, r3]
   15dae:	ldr	r2, [r3, #0]
   15db0:	ldr	r3, [sp, #28]
   15db2:	eors	r2, r3
   15db4:	beq.n	15dba <radix_tree_init@@Base+0x16c>
   15db6:	blx	86b8 <__stack_chk_fail@plt>
   15dba:	add	sp, #36	; 0x24
   15dbc:	ldr.w	pc, [sp], #4
   15dc0:	ands.w	r0, r0, #4
   15dc4:	lsls	r4, r4, #8
   15dc6:	movs	r0, r0
   15dc8:	vaddl.s16	q8, d14, d4
   15dcc:	ldr.w	ip, [pc, #80]	; 15e20 <radix_tree_init@@Base+0x1d2>
   15dd0:	ldr	r4, [pc, #80]	; (15e24 <radix_tree_init@@Base+0x1d6>)
   15dd2:	add	ip, pc
   15dd4:	ldr	r3, [pc, #80]	; (15e28 <radix_tree_init@@Base+0x1da>)
   15dd6:	push	{lr}
   15dd8:	sub	sp, #92	; 0x5c
   15dda:	ldr.w	r4, [ip, r4]
   15dde:	add	r3, pc
   15de0:	ldr	r4, [r4, #0]
   15de2:	str	r4, [sp, #84]	; 0x54
   15de4:	mov.w	r4, #0
   15de8:	ldr	r4, [pc, #64]	; (15e2c <radix_tree_init@@Base+0x1de>)
   15dea:	ldr	r4, [r3, r4]
   15dec:	ldr	r3, [pc, #64]	; (15e30 <radix_tree_init@@Base+0x1e2>)
   15dee:	strd	r0, r2, [sp, #8]
   15df2:	add	r3, pc
   15df4:	ldr	r2, [pc, #60]	; (15e34 <radix_tree_init@@Base+0x1e6>)
   15df6:	strd	r1, r3, [sp]
   15dfa:	movs	r1, #1
   15dfc:	ldr	r3, [pc, #56]	; (15e38 <radix_tree_init@@Base+0x1ea>)
   15dfe:	add	r2, pc
   15e00:	ldr	r0, [r4, #0]
   15e02:	add	r4, sp, #20
   15e04:	add	r3, pc
   15e06:	blx	8a14 <__fprintf_chk@plt+0x4>
   15e0a:	movs	r1, #16
   15e0c:	mov	r0, r4
   15e0e:	blx	886c <backtrace@plt>
   15e12:	movs	r2, #2
   15e14:	mov	r1, r0
   15e16:	mov	r0, r4
   15e18:	blx	8b7c <backtrace_symbols_fd@plt>
   15e1c:	blx	8b34 <abort@plt>
   15e20:	vext.8	d0, d6, d4, #0
   15e24:	lsls	r4, r4, #8
   15e26:	movs	r0, r0
   15e28:	vaddl.s32	q0, d10, d4
   15e2c:	lsls	r4, r6, #8
   15e2e:	movs	r0, r0
   15e30:	ldrh	r0, [r5, r4]
   15e32:	movs	r2, r0
   15e34:	subs	r1, #164	; 0xa4
   15e36:	movs	r2, r0
   15e38:	ldrh	r3, [r7, r2]
   15e3a:	movs	r2, r0

00015e3c <cache_tree_init@@Base>:
   15e3c:	movs	r3, #0
   15e3e:	str	r3, [r0, #0]
   15e40:	bx	lr

00015e42 <insert_cache_extent@@Base>:
   15e42:	ldr	r2, [pc, #8]	; (15e4c <insert_cache_extent@@Base+0xa>)
   15e44:	add	r2, pc
   15e46:	b.w	17820 <rb_insert@@Base>
   15e4a:	nop
   15e4c:	mrc2	15, 3, pc, cr9, cr15, {7}

00015e50 <add_cache_extent@@Base>:
   15e50:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15e54:	mov	r5, r0
   15e56:	movs	r0, #40	; 0x28
   15e58:	mov	r7, r2
   15e5a:	mov	r6, r3
   15e5c:	blx	8820 <malloc@plt+0x4>
   15e60:	ldr.w	r8, [pc, #72]	; 15eac <add_cache_extent@@Base+0x5c>
   15e64:	add	r8, pc
   15e66:	mov	r4, r0
   15e68:	cbz	r0, 15e96 <add_cache_extent@@Base+0x46>
   15e6a:	movs	r2, #0
   15e6c:	movs	r3, #0
   15e6e:	strd	r2, r3, [r0, #16]
   15e72:	mov	r1, r0
   15e74:	ldrd	r2, r3, [sp, #24]
   15e78:	strd	r7, r6, [r0, #24]
   15e7c:	strd	r2, r3, [r0, #32]
   15e80:	mov	r0, r5
   15e82:	bl	15e42 <insert_cache_extent@@Base>
   15e86:	mov	r5, r0
   15e88:	cbz	r0, 15e90 <add_cache_extent@@Base+0x40>
   15e8a:	mov	r0, r4
   15e8c:	blx	85dc <free@plt+0x4>
   15e90:	mov	r0, r5
   15e92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15e96:	ldr	r3, [pc, #24]	; (15eb0 <add_cache_extent@@Base+0x60>)
   15e98:	ldr	r0, [pc, #24]	; (15eb4 <add_cache_extent@@Base+0x64>)
   15e9a:	ldr.w	r3, [r8, r3]
   15e9e:	add	r0, pc
   15ea0:	ldr	r1, [r3, #0]
   15ea2:	blx	8b1c <fputs@plt+0x4>
   15ea6:	movs	r0, #1
   15ea8:	blx	88e4 <exit@plt>
   15eac:	vhadd.s32	d0, d4, d4
   15eb0:	lsls	r4, r6, #8
   15eb2:	movs	r0, r0
   15eb4:	strb	r1, [r4, r6]
   15eb6:	movs	r2, r0

00015eb8 <insert_cache_extent2@@Base>:
   15eb8:	ldr	r2, [pc, #4]	; (15ec0 <insert_cache_extent2@@Base+0x8>)
   15eba:	add	r2, pc
   15ebc:	b.w	17820 <rb_insert@@Base>
   15ec0:	mrc2	15, 5, pc, cr7, cr15, {7}

00015ec4 <lookup_cache_extent@@Base>:
   15ec4:	ldr.w	ip, [pc, #72]	; 15f10 <lookup_cache_extent@@Base+0x4c>
   15ec8:	ldr	r1, [pc, #72]	; (15f14 <lookup_cache_extent@@Base+0x50>)
   15eca:	add	ip, pc
   15ecc:	push	{lr}
   15ece:	sub	sp, #36	; 0x24
   15ed0:	ldr.w	r1, [ip, r1]
   15ed4:	ldr	r1, [r1, #0]
   15ed6:	str	r1, [sp, #28]
   15ed8:	mov.w	r1, #0
   15edc:	strd	r2, r3, [sp, #8]
   15ee0:	ldrd	r2, r3, [sp, #40]	; 0x28
   15ee4:	mov	r1, sp
   15ee6:	strd	r2, r3, [sp, #16]
   15eea:	movs	r3, #0
   15eec:	ldr	r2, [pc, #40]	; (15f18 <lookup_cache_extent@@Base+0x54>)
   15eee:	add	r2, pc
   15ef0:	bl	17868 <rb_search@@Base>
   15ef4:	ldr	r2, [pc, #36]	; (15f1c <lookup_cache_extent@@Base+0x58>)
   15ef6:	ldr	r3, [pc, #28]	; (15f14 <lookup_cache_extent@@Base+0x50>)
   15ef8:	add	r2, pc
   15efa:	ldr	r3, [r2, r3]
   15efc:	ldr	r2, [r3, #0]
   15efe:	ldr	r3, [sp, #28]
   15f00:	eors	r2, r3
   15f02:	beq.n	15f08 <lookup_cache_extent@@Base+0x44>
   15f04:	blx	86b8 <__stack_chk_fail@plt>
   15f08:	add	sp, #36	; 0x24
   15f0a:	ldr.w	pc, [sp], #4
   15f0e:	nop
   15f10:	cdp	0, 11, cr0, cr14, cr4, {0}
   15f14:	lsls	r4, r4, #8
   15f16:	movs	r0, r0
   15f18:	stc2	15, cr15, [pc, #1020]	; 16318 <add_merge_cache_extent@@Base+0x284>
   15f1c:	cdp	0, 9, cr0, cr0, cr4, {0}

00015f20 <lookup_cache_extent2@@Base>:
   15f20:	ldr.w	ip, [pc, #80]	; 15f74 <lookup_cache_extent2@@Base+0x54>
   15f24:	ldr	r1, [pc, #80]	; (15f78 <lookup_cache_extent2@@Base+0x58>)
   15f26:	add	ip, pc
   15f28:	push	{lr}
   15f2a:	sub	sp, #36	; 0x24
   15f2c:	ldr.w	r1, [ip, r1]
   15f30:	ldr	r1, [r1, #0]
   15f32:	str	r1, [sp, #28]
   15f34:	mov.w	r1, #0
   15f38:	strd	r2, r3, [sp]
   15f3c:	ldrd	r2, r3, [sp, #40]	; 0x28
   15f40:	mov	r1, sp
   15f42:	strd	r2, r3, [sp, #8]
   15f46:	ldrd	r2, r3, [sp, #48]	; 0x30
   15f4a:	strd	r2, r3, [sp, #16]
   15f4e:	movs	r3, #0
   15f50:	ldr	r2, [pc, #40]	; (15f7c <lookup_cache_extent2@@Base+0x5c>)
   15f52:	add	r2, pc
   15f54:	bl	17868 <rb_search@@Base>
   15f58:	ldr	r2, [pc, #36]	; (15f80 <lookup_cache_extent2@@Base+0x60>)
   15f5a:	ldr	r3, [pc, #28]	; (15f78 <lookup_cache_extent2@@Base+0x58>)
   15f5c:	add	r2, pc
   15f5e:	ldr	r3, [r2, r3]
   15f60:	ldr	r2, [r3, #0]
   15f62:	ldr	r3, [sp, #28]
   15f64:	eors	r2, r3
   15f66:	beq.n	15f6c <lookup_cache_extent2@@Base+0x4c>
   15f68:	blx	86b8 <__stack_chk_fail@plt>
   15f6c:	add	sp, #36	; 0x24
   15f6e:	ldr.w	pc, [sp], #4
   15f72:	nop
   15f74:	cdp	0, 6, cr0, cr2, cr4, {0}
   15f78:	lsls	r4, r4, #8
   15f7a:	movs	r0, r0
   15f7c:	ldc2	15, cr15, [pc, #1020]!	; 1637c <add_merge_cache_extent@@Base+0x2e8>
   15f80:	cdp	0, 2, cr0, cr12, cr4, {0}

00015f84 <search_cache_extent@@Base>:
   15f84:	ldr.w	ip, [pc, #76]	; 15fd4 <search_cache_extent@@Base+0x50>
   15f88:	ldr	r1, [pc, #76]	; (15fd8 <search_cache_extent@@Base+0x54>)
   15f8a:	add	ip, pc
   15f8c:	push	{lr}
   15f8e:	sub	sp, #44	; 0x2c
   15f90:	ldr.w	r1, [ip, r1]
   15f94:	ldr	r1, [r1, #0]
   15f96:	str	r1, [sp, #36]	; 0x24
   15f98:	mov.w	r1, #0
   15f9c:	strd	r2, r3, [sp, #16]
   15fa0:	movs	r2, #1
   15fa2:	movs	r3, #0
   15fa4:	strd	r2, r3, [sp, #24]
   15fa8:	add	r1, sp, #8
   15faa:	ldr	r2, [pc, #48]	; (15fdc <search_cache_extent@@Base+0x58>)
   15fac:	add	r3, sp, #4
   15fae:	add	r2, pc
   15fb0:	bl	17868 <rb_search@@Base>
   15fb4:	cbnz	r0, 15fb8 <search_cache_extent@@Base+0x34>
   15fb6:	ldr	r0, [sp, #4]
   15fb8:	ldr	r2, [pc, #36]	; (15fe0 <search_cache_extent@@Base+0x5c>)
   15fba:	ldr	r3, [pc, #28]	; (15fd8 <search_cache_extent@@Base+0x54>)
   15fbc:	add	r2, pc
   15fbe:	ldr	r3, [r2, r3]
   15fc0:	ldr	r2, [r3, #0]
   15fc2:	ldr	r3, [sp, #36]	; 0x24
   15fc4:	eors	r2, r3
   15fc6:	beq.n	15fcc <search_cache_extent@@Base+0x48>
   15fc8:	blx	86b8 <__stack_chk_fail@plt>
   15fcc:	add	sp, #44	; 0x2c
   15fce:	ldr.w	pc, [sp], #4
   15fd2:	nop
   15fd4:	ldcl	0, cr0, [lr, #16]!
   15fd8:	lsls	r4, r4, #8
   15fda:	movs	r0, r0
   15fdc:	stc2l	15, cr15, [pc], {255}	; 0xff
   15fe0:	stcl	0, cr0, [ip, #16]

00015fe4 <search_cache_extent2@@Base>:
   15fe4:	ldr.w	ip, [pc, #84]	; 1603c <search_cache_extent2@@Base+0x58>
   15fe8:	ldr	r1, [pc, #84]	; (16040 <search_cache_extent2@@Base+0x5c>)
   15fea:	add	ip, pc
   15fec:	push	{lr}
   15fee:	sub	sp, #44	; 0x2c
   15ff0:	ldr.w	r1, [ip, r1]
   15ff4:	ldr	r1, [r1, #0]
   15ff6:	str	r1, [sp, #36]	; 0x24
   15ff8:	mov.w	r1, #0
   15ffc:	strd	r2, r3, [sp, #8]
   16000:	ldrd	r2, r3, [sp, #48]	; 0x30
   16004:	add	r1, sp, #8
   16006:	strd	r2, r3, [sp, #16]
   1600a:	movs	r2, #1
   1600c:	movs	r3, #0
   1600e:	strd	r2, r3, [sp, #24]
   16012:	ldr	r2, [pc, #48]	; (16044 <search_cache_extent2@@Base+0x60>)
   16014:	add	r3, sp, #4
   16016:	add	r2, pc
   16018:	bl	17868 <rb_search@@Base>
   1601c:	cbnz	r0, 16020 <search_cache_extent2@@Base+0x3c>
   1601e:	ldr	r0, [sp, #4]
   16020:	ldr	r2, [pc, #36]	; (16048 <search_cache_extent2@@Base+0x64>)
   16022:	ldr	r3, [pc, #28]	; (16040 <search_cache_extent2@@Base+0x5c>)
   16024:	add	r2, pc
   16026:	ldr	r3, [r2, r3]
   16028:	ldr	r2, [r3, #0]
   1602a:	ldr	r3, [sp, #36]	; 0x24
   1602c:	eors	r2, r3
   1602e:	beq.n	16034 <search_cache_extent2@@Base+0x50>
   16030:	blx	86b8 <__stack_chk_fail@plt>
   16034:	add	sp, #44	; 0x2c
   16036:	ldr.w	pc, [sp], #4
   1603a:	nop
   1603c:	ldc	0, cr0, [lr, #16]
   16040:	lsls	r4, r4, #8
   16042:	movs	r0, r0
   16044:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   16048:	stcl	0, cr0, [r4, #-16]!

0001604c <first_cache_extent@@Base>:
   1604c:	b.w	134ee <rb_first@@Base>

00016050 <last_cache_extent@@Base>:
   16050:	b.w	134fe <rb_last@@Base>

00016054 <prev_cache_extent@@Base>:
   16054:	b.w	1353a <rb_prev@@Base>

00016058 <next_cache_extent@@Base>:
   16058:	b.w	1350e <rb_next@@Base>

0001605c <remove_cache_extent@@Base>:
   1605c:	mov	r3, r1
   1605e:	mov	r1, r0
   16060:	mov	r0, r3
   16062:	b.w	13278 <rb_erase@@Base>

00016066 <cache_tree_free_extents@@Base>:
   16066:	push	{r4, r5, r6, lr}
   16068:	mov	r5, r0
   1606a:	mov	r6, r1
   1606c:	mov	r0, r5
   1606e:	bl	1604c <first_cache_extent@@Base>
   16072:	mov	r4, r0
   16074:	cbnz	r0, 16078 <cache_tree_free_extents@@Base+0x12>
   16076:	pop	{r4, r5, r6, pc}
   16078:	mov	r0, r5
   1607a:	mov	r1, r4
   1607c:	bl	1605c <remove_cache_extent@@Base>
   16080:	mov	r0, r4
   16082:	blx	r6
   16084:	b.n	1606c <cache_tree_free_extents@@Base+0x6>

00016086 <free_extent_cache_tree@@Base>:
   16086:	ldr	r1, [pc, #8]	; (16090 <free_extent_cache_tree@@Base+0xa>)
   16088:	add	r1, pc
   1608a:	b.w	16066 <cache_tree_free_extents@@Base>
   1608e:	nop
   16090:	stc2	15, cr15, [r5], {255}	; 0xff

00016094 <add_merge_cache_extent@@Base>:
   16094:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16098:	sub	sp, #36	; 0x24
   1609a:	ldr	r4, [r0, #0]
   1609c:	mov	r5, r0
   1609e:	ldr	r1, [sp, #72]	; 0x48
   160a0:	mov	sl, r2
   160a2:	mov	fp, r3
   160a4:	str	r1, [sp, #0]
   160a6:	ldr	r1, [sp, #76]	; 0x4c
   160a8:	str	r1, [sp, #4]
   160aa:	cmp	r4, #0
   160ac:	beq.w	16206 <add_merge_cache_extent@@Base+0x172>
   160b0:	bl	15f84 <search_cache_extent@@Base>
   160b4:	mov	r7, r0
   160b6:	cbnz	r0, 160c8 <add_merge_cache_extent@@Base+0x34>
   160b8:	mov	r0, r5
   160ba:	bl	16050 <last_cache_extent@@Base>
   160be:	mov	r4, r0
   160c0:	cmp	r0, #0
   160c2:	bne.n	16138 <add_merge_cache_extent@@Base+0xa4>
   160c4:	movs	r7, #0
   160c6:	b.n	16176 <add_merge_cache_extent@@Base+0xe2>
   160c8:	ldrd	r2, r3, [r0, #24]
   160cc:	cmp	r3, fp
   160ce:	it	eq
   160d0:	cmpeq	r2, sl
   160d2:	bcc.n	16102 <add_merge_cache_extent@@Base+0x6e>
   160d4:	bl	16054 <prev_cache_extent@@Base>
   160d8:	mov	r4, r0
   160da:	mov	r0, r7
   160dc:	ldr	r3, [sp, #0]
   160de:	adds.w	r3, sl, r3
   160e2:	str	r3, [sp, #8]
   160e4:	ldr	r3, [sp, #4]
   160e6:	adc.w	r3, fp, r3
   160ea:	str	r3, [sp, #12]
   160ec:	ldrd	r6, r7, [sp, #8]
   160f0:	ldrd	r2, r3, [r0, #24]
   160f4:	cmp	r3, r7
   160f6:	it	eq
   160f8:	cmpeq	r2, r6
   160fa:	bcc.w	1620e <add_merge_cache_extent@@Base+0x17a>
   160fe:	cbz	r4, 16140 <add_merge_cache_extent@@Base+0xac>
   16100:	b.n	1610c <add_merge_cache_extent@@Base+0x78>
   16102:	bl	16058 <next_cache_extent@@Base>
   16106:	mov	r4, r7
   16108:	cmp	r0, #0
   1610a:	bne.n	160dc <add_merge_cache_extent@@Base+0x48>
   1610c:	ldrd	r2, r1, [r4, #32]
   16110:	ldrd	r3, r7, [r4, #24]
   16114:	adds	r3, r3, r2
   16116:	str	r3, [sp, #16]
   16118:	adc.w	r3, r7, r1
   1611c:	str	r3, [sp, #20]
   1611e:	ldrd	r2, r3, [sp, #16]
   16122:	cmp	fp, r3
   16124:	it	eq
   16126:	cmpeq	sl, r2
   16128:	bcs.n	1613c <add_merge_cache_extent@@Base+0xa8>
   1612a:	ldr	r0, [pc, #248]	; (16224 <add_merge_cache_extent@@Base+0x190>)
   1612c:	movs	r2, #1
   1612e:	mov.w	r1, #306	; 0x132
   16132:	add	r0, pc
   16134:	bl	15dcc <radix_tree_init@@Base+0x17e>
   16138:	mov	r0, r7
   1613a:	b.n	1610c <add_merge_cache_extent@@Base+0x78>
   1613c:	cmp	r0, #0
   1613e:	beq.n	160c4 <add_merge_cache_extent@@Base+0x30>
   16140:	ldr	r1, [sp, #0]
   16142:	ldrd	r2, r3, [r0, #24]
   16146:	adds.w	r8, sl, r1
   1614a:	ldr	r1, [sp, #4]
   1614c:	adc.w	r9, fp, r1
   16150:	cmp	r9, r3
   16152:	it	eq
   16154:	cmpeq	r8, r2
   16156:	bne.n	160c4 <add_merge_cache_extent@@Base+0x30>
   16158:	ldrd	r3, r2, [r0, #32]
   1615c:	movs	r7, #1
   1615e:	strd	sl, fp, [r0, #24]
   16162:	adds.w	r3, r8, r3
   16166:	adc.w	r2, r9, r2
   1616a:	subs.w	r3, r3, sl
   1616e:	sbc.w	r2, r2, fp
   16172:	strd	r3, r2, [r0, #32]
   16176:	cbz	r4, 161cc <add_merge_cache_extent@@Base+0x138>
   16178:	ldrd	ip, lr, [r4, #24]
   1617c:	ldr	r3, [r4, #32]
   1617e:	adds.w	r3, ip, r3
   16182:	str	r3, [sp, #24]
   16184:	ldr	r3, [r4, #36]	; 0x24
   16186:	adc.w	r3, lr, r3
   1618a:	str	r3, [sp, #28]
   1618c:	ldrd	r2, r3, [sp, #24]
   16190:	cmp	r3, fp
   16192:	it	eq
   16194:	cmpeq	r2, sl
   16196:	bne.n	1620a <add_merge_cache_extent@@Base+0x176>
   16198:	cbz	r7, 161ea <add_merge_cache_extent@@Base+0x156>
   1619a:	ldrd	r3, r2, [r0, #24]
   1619e:	ldr	r1, [r0, #32]
   161a0:	adds	r3, r3, r1
   161a2:	ldr	r1, [r0, #36]	; 0x24
   161a4:	adc.w	r2, r1, r2
   161a8:	subs.w	r3, r3, ip
   161ac:	sbc.w	r2, r2, lr
   161b0:	strd	r3, r2, [r0, #32]
   161b4:	ldrd	r2, r3, [r4, #24]
   161b8:	mov	r1, r4
   161ba:	strd	r2, r3, [r0, #24]
   161be:	mov	r0, r5
   161c0:	bl	1605c <remove_cache_extent@@Base>
   161c4:	mov	r0, r4
   161c6:	blx	85dc <free@plt+0x4>
   161ca:	mov	r4, r7
   161cc:	orrs.w	r3, r7, r4
   161d0:	bne.n	1621a <add_merge_cache_extent@@Base+0x186>
   161d2:	ldr	r3, [sp, #0]
   161d4:	mov	r2, sl
   161d6:	mov	r0, r5
   161d8:	str	r3, [sp, #72]	; 0x48
   161da:	ldr	r3, [sp, #4]
   161dc:	str	r3, [sp, #76]	; 0x4c
   161de:	mov	r3, fp
   161e0:	add	sp, #36	; 0x24
   161e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161e6:	b.w	15e50 <add_cache_extent@@Base>
   161ea:	ldr	r3, [sp, #0]
   161ec:	adds.w	r1, sl, r3
   161f0:	ldr	r3, [sp, #4]
   161f2:	adc.w	r2, fp, r3
   161f6:	subs.w	r1, r1, ip
   161fa:	sbc.w	r2, r2, lr
   161fe:	strd	r1, r2, [r4, #32]
   16202:	movs	r4, #1
   16204:	b.n	161cc <add_merge_cache_extent@@Base+0x138>
   16206:	mov	r7, r4
   16208:	b.n	161cc <add_merge_cache_extent@@Base+0x138>
   1620a:	movs	r4, #0
   1620c:	b.n	161cc <add_merge_cache_extent@@Base+0x138>
   1620e:	ldr	r0, [pc, #24]	; (16228 <add_merge_cache_extent@@Base+0x194>)
   16210:	movs	r2, #1
   16212:	movw	r1, #305	; 0x131
   16216:	add	r0, pc
   16218:	b.n	16134 <add_merge_cache_extent@@Base+0xa0>
   1621a:	movs	r0, #0
   1621c:	add	sp, #36	; 0x24
   1621e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16222:	nop
   16224:	ldrsb	r4, [r3, r6]
   16226:	movs	r2, r0
   16228:	ldrsb	r1, [r4, r3]
   1622a:	movs	r2, r0
   1622c:	ldrd	r3, r2, [r0, #48]	; 0x30
   16230:	push	{r4, lr}
   16232:	adds	r3, #1
   16234:	ldrd	r1, r4, [r0, #40]	; 0x28
   16238:	adc.w	r2, r2, #0
   1623c:	subs	r3, r3, r1
   1623e:	sbc.w	r2, r2, r4
   16242:	strd	r1, r4, [r0, #24]
   16246:	strd	r3, r2, [r0, #32]
   1624a:	pop	{r4, pc}
   1624c:	push	{r3, lr}
   1624e:	movs	r0, #72	; 0x48
   16250:	blx	8820 <malloc@plt+0x4>
   16254:	cbz	r0, 1626c <add_merge_cache_extent@@Base+0x1d8>
   16256:	movs	r2, #0
   16258:	movs	r3, #0
   1625a:	mov.w	ip, #1
   1625e:	movs	r1, #0
   16260:	strd	r2, r3, [r0, #16]
   16264:	strd	ip, r1, [r0, #56]	; 0x38
   16268:	strd	r2, r3, [r0, #64]	; 0x40
   1626c:	pop	{r3, pc}
   1626e:	push	{r3, r4, r5, r6, r7, lr}
   16270:	mov	r4, r0
   16272:	ldr	r7, [sp, #24]
   16274:	movs	r0, #1
   16276:	mov	r6, r2
   16278:	mov	r5, r3
   1627a:	add.w	r1, r7, #96	; 0x60
   1627e:	blx	8544 <calloc@plt+0x4>
   16282:	cbz	r0, 162c2 <add_merge_cache_extent@@Base+0x22e>
   16284:	movs	r3, #1
   16286:	movs	r1, #0
   16288:	mov.w	r2, #4294967295	; 0xffffffff
   1628c:	strd	r3, r1, [r0, #80]	; 0x50
   16290:	str	r4, [r0, #92]	; 0x5c
   16292:	mov.w	r3, #4294967295	; 0xffffffff
   16296:	adds	r4, #64	; 0x40
   16298:	str	r3, [r0, #88]	; 0x58
   1629a:	strd	r6, r5, [r0, #40]	; 0x28
   1629e:	mov.w	r3, #4294967295	; 0xffffffff
   162a2:	str	r7, [r0, #76]	; 0x4c
   162a4:	strd	r2, r3, [r0, #48]	; 0x30
   162a8:	add.w	r3, r0, #68	; 0x44
   162ac:	strd	r6, r5, [r0, #24]
   162b0:	strd	r3, r3, [r0, #68]	; 0x44
   162b4:	add.w	r3, r0, #60	; 0x3c
   162b8:	strd	r7, r1, [r0, #32]
   162bc:	str	r4, [r0, #56]	; 0x38
   162be:	strd	r3, r3, [r0, #60]	; 0x3c
   162c2:	pop	{r3, r4, r5, r6, r7, pc}
   162c4:	ldr.w	ip, [pc, #104]	; 16330 <add_merge_cache_extent@@Base+0x29c>
   162c8:	push	{r4, r5, lr}
   162ca:	add	ip, pc
   162cc:	ldr	r5, [pc, #100]	; (16334 <add_merge_cache_extent@@Base+0x2a0>)
   162ce:	sub	sp, #92	; 0x5c
   162d0:	ldr	r4, [pc, #100]	; (16338 <add_merge_cache_extent@@Base+0x2a4>)
   162d2:	ldr.w	r5, [ip, r5]
   162d6:	add	r4, pc
   162d8:	ldr	r5, [r5, #0]
   162da:	str	r5, [sp, #84]	; 0x54
   162dc:	mov.w	r5, #0
   162e0:	cbz	r3, 16316 <add_merge_cache_extent@@Base+0x282>
   162e2:	ldr	r5, [pc, #88]	; (1633c <add_merge_cache_extent@@Base+0x2a8>)
   162e4:	ldr	r4, [r4, r5]
   162e6:	strd	r2, r1, [sp]
   162ea:	movs	r1, #1
   162ec:	strd	r0, r3, [sp, #8]
   162f0:	ldr	r2, [pc, #76]	; (16340 <add_merge_cache_extent@@Base+0x2ac>)
   162f2:	ldr	r3, [pc, #80]	; (16344 <add_merge_cache_extent@@Base+0x2b0>)
   162f4:	ldr	r0, [r4, #0]
   162f6:	add	r4, sp, #20
   162f8:	add	r3, pc
   162fa:	add	r2, pc
   162fc:	blx	8a14 <__fprintf_chk@plt+0x4>
   16300:	movs	r1, #16
   16302:	mov	r0, r4
   16304:	blx	886c <backtrace@plt>
   16308:	movs	r2, #2
   1630a:	mov	r1, r0
   1630c:	mov	r0, r4
   1630e:	blx	8b7c <backtrace_symbols_fd@plt>
   16312:	blx	8b34 <abort@plt>
   16316:	ldr	r2, [pc, #48]	; (16348 <add_merge_cache_extent@@Base+0x2b4>)
   16318:	ldr	r3, [pc, #24]	; (16334 <add_merge_cache_extent@@Base+0x2a0>)
   1631a:	add	r2, pc
   1631c:	ldr	r3, [r2, r3]
   1631e:	ldr	r2, [r3, #0]
   16320:	ldr	r3, [sp, #84]	; 0x54
   16322:	eors	r2, r3
   16324:	beq.n	1632a <add_merge_cache_extent@@Base+0x296>
   16326:	blx	86b8 <__stack_chk_fail@plt>
   1632a:	add	sp, #92	; 0x5c
   1632c:	pop	{r4, r5, pc}
   1632e:	nop
   16330:			; <UNDEFINED> instruction: 0xeabe0004
   16334:	lsls	r4, r4, #8
   16336:	movs	r0, r0
   16338:			; <UNDEFINED> instruction: 0xeab20004
   1633c:	lsls	r4, r6, #8
   1633e:	movs	r0, r0
   16340:	adds	r4, #168	; 0xa8
   16342:	movs	r2, r0
   16344:	ldrsb	r1, [r7, r0]
   16346:	movs	r2, r0
   16348:	orn	r0, lr, r4
   1634c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16350:	mov	r4, r2
   16352:	ldrd	r2, r3, [r1, #40]	; 0x28
   16356:	mov	r5, r1
   16358:	ldrd	r6, r8, [sp, #24]
   1635c:	mov	r7, r0
   1635e:	mov	r0, r4
   16360:	strd	r2, r3, [r4, #40]	; 0x28
   16364:	adds.w	r2, r6, #4294967295	; 0xffffffff
   16368:	adc.w	r3, r8, #4294967295	; 0xffffffff
   1636c:	strd	r2, r3, [r4, #48]	; 0x30
   16370:	ldr	r3, [r1, #60]	; 0x3c
   16372:	str	r3, [r4, #60]	; 0x3c
   16374:	bl	1622c <add_merge_cache_extent@@Base+0x198>
   16378:	mov	r0, r5
   1637a:	strd	r6, r8, [r5, #40]	; 0x28
   1637e:	bl	1622c <add_merge_cache_extent@@Base+0x198>
   16382:	mov	r1, r4
   16384:	mov	r0, r7
   16386:	bl	15e42 <insert_cache_extent@@Base>
   1638a:	ldr	r1, [pc, #20]	; (163a0 <add_merge_cache_extent@@Base+0x30c>)
   1638c:	movs	r2, #185	; 0xb9
   1638e:	add	r1, pc
   16390:	mov	r3, r0
   16392:	ldr	r0, [pc, #16]	; (163a4 <add_merge_cache_extent@@Base+0x310>)
   16394:	add	r0, pc
   16396:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   1639a:	movs	r0, #0
   1639c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   163a0:	ldrsb	r7, [r4, r4]
   163a2:	movs	r2, r0
   163a4:	subs	r2, #80	; 0x50
   163a6:	movs	r2, r0
   163a8:	ldr	r1, [pc, #124]	; (16428 <add_merge_cache_extent@@Base+0x394>)
   163aa:	movw	r2, #649	; 0x289
   163ae:	push	{r3, r4, r5, lr}
   163b0:	mov	r4, r0
   163b2:	ldr	r5, [r0, #56]	; 0x38
   163b4:	add	r1, pc
   163b6:	ldr	r3, [r0, #80]	; 0x50
   163b8:	adds	r1, #12
   163ba:	ldr	r0, [pc, #112]	; (1642c <add_merge_cache_extent@@Base+0x398>)
   163bc:	add	r0, pc
   163be:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   163c2:	cbz	r5, 16422 <add_merge_cache_extent@@Base+0x38e>
   163c4:	ldrd	r2, r3, [r5, #16]
   163c8:	movs	r1, #0
   163ca:	ldr	r0, [r4, #76]	; 0x4c
   163cc:	cmp	r3, r1
   163ce:	it	eq
   163d0:	cmpeq	r2, r0
   163d2:	ite	cc
   163d4:	movcc	r3, #1
   163d6:	movcs	r3, #0
   163d8:	ldr	r1, [pc, #84]	; (16430 <add_merge_cache_extent@@Base+0x39c>)
   163da:	movw	r2, #650	; 0x28a
   163de:	ldr	r0, [pc, #84]	; (16434 <add_merge_cache_extent@@Base+0x3a0>)
   163e0:	add	r1, pc
   163e2:	adds	r1, #12
   163e4:	add	r0, pc
   163e6:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   163ea:	ldrd	r1, r2, [r4, #60]	; 0x3c
   163ee:	add.w	r3, r4, #60	; 0x3c
   163f2:	str	r2, [r1, #4]
   163f4:	str	r1, [r2, #0]
   163f6:	strd	r3, r3, [r4, #60]	; 0x3c
   163fa:	ldr	r3, [r4, #84]	; 0x54
   163fc:	lsls	r3, r3, #20
   163fe:	bmi.n	16418 <add_merge_cache_extent@@Base+0x384>
   16400:	mov	r1, r4
   16402:	adds	r0, r5, #4
   16404:	bl	1605c <remove_cache_extent@@Base>
   16408:	ldrd	r2, r3, [r5, #16]
   1640c:	ldr	r1, [r4, #76]	; 0x4c
   1640e:	subs	r2, r2, r1
   16410:	sbc.w	r3, r3, #0
   16414:	strd	r2, r3, [r5, #16]
   16418:	mov	r0, r4
   1641a:	ldmia.w	sp!, {r3, r4, r5, lr}
   1641e:	b.w	85d8 <free@plt>
   16422:	mov	r3, r5
   16424:	b.n	163d8 <add_merge_cache_extent@@Base+0x344>
   16426:	nop
   16428:	ldrsb	r1, [r0, r4]
   1642a:	movs	r2, r0
   1642c:	strb	r1, [r0, r6]
   1642e:	movs	r2, r0
   16430:	ldrsb	r5, [r2, r3]
   16432:	movs	r2, r0
   16434:	strb	r2, [r4, r5]
   16436:	movs	r2, r0
   16438:	push	{r3, r4, r5, lr}
   1643a:	mov	r4, r0
   1643c:	ldr	r5, [r0, #56]	; 0x38
   1643e:	movs	r2, #67	; 0x43
   16440:	ldr	r1, [pc, #32]	; (16464 <add_merge_cache_extent@@Base+0x3d0>)
   16442:	subs	r5, #1
   16444:	str	r5, [r0, #56]	; 0x38
   16446:	ldr	r0, [pc, #32]	; (16468 <add_merge_cache_extent@@Base+0x3d4>)
   16448:	add	r1, pc
   1644a:	lsrs	r3, r5, #31
   1644c:	adds	r1, #37	; 0x25
   1644e:	add	r0, pc
   16450:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   16454:	cbnz	r5, 16460 <add_merge_cache_extent@@Base+0x3cc>
   16456:	mov	r0, r4
   16458:	ldmia.w	sp!, {r3, r4, r5, lr}
   1645c:	b.w	85d8 <free@plt>
   16460:	pop	{r3, r4, r5, pc}
   16462:	nop
   16464:	ldrsb	r5, [r5, r1]
   16466:	movs	r2, r0
   16468:	strb	r3, [r3, r4]
   1646a:	movs	r2, r0
   1646c:	b.n	16438 <add_merge_cache_extent@@Base+0x3a4>
   1646e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16472:	mov	r5, r0
   16474:	ldr	r3, [r1, #60]	; 0x3c
   16476:	mov	r4, r1
   16478:	tst.w	r3, #10
   1647c:	bne.n	16504 <add_merge_cache_extent@@Base+0x470>
   1647e:	mov	r0, r1
   16480:	bl	16054 <prev_cache_extent@@Base>
   16484:	mov	sl, r0
   16486:	cbz	r0, 164c4 <add_merge_cache_extent@@Base+0x430>
   16488:	ldrd	r3, r2, [r4, #40]	; 0x28
   1648c:	adds.w	r8, r3, #4294967295	; 0xffffffff
   16490:	adc.w	r9, r2, #4294967295	; 0xffffffff
   16494:	ldrd	r2, r3, [r0, #48]	; 0x30
   16498:	cmp	r3, r9
   1649a:	it	eq
   1649c:	cmpeq	r2, r8
   1649e:	bne.n	164c4 <add_merge_cache_extent@@Base+0x430>
   164a0:	ldr	r2, [r0, #60]	; 0x3c
   164a2:	ldr	r3, [r4, #60]	; 0x3c
   164a4:	cmp	r2, r3
   164a6:	bne.n	164c4 <add_merge_cache_extent@@Base+0x430>
   164a8:	ldrd	r2, r3, [r0, #40]	; 0x28
   164ac:	mov	r0, r4
   164ae:	strd	r2, r3, [r4, #40]	; 0x28
   164b2:	bl	1622c <add_merge_cache_extent@@Base+0x198>
   164b6:	mov	r0, r5
   164b8:	mov	r1, sl
   164ba:	bl	1605c <remove_cache_extent@@Base>
   164be:	mov	r0, sl
   164c0:	bl	16438 <add_merge_cache_extent@@Base+0x3a4>
   164c4:	mov	r0, r4
   164c6:	bl	16058 <next_cache_extent@@Base>
   164ca:	cbz	r0, 16504 <add_merge_cache_extent@@Base+0x470>
   164cc:	ldrd	r3, r2, [r4, #48]	; 0x30
   164d0:	adds	r6, r3, #1
   164d2:	adc.w	r7, r2, #0
   164d6:	ldrd	r2, r3, [r0, #40]	; 0x28
   164da:	cmp	r3, r7
   164dc:	it	eq
   164de:	cmpeq	r2, r6
   164e0:	bne.n	16504 <add_merge_cache_extent@@Base+0x470>
   164e2:	ldr	r2, [r0, #60]	; 0x3c
   164e4:	ldr	r3, [r4, #60]	; 0x3c
   164e6:	cmp	r2, r3
   164e8:	bne.n	16504 <add_merge_cache_extent@@Base+0x470>
   164ea:	ldrd	r2, r3, [r4, #40]	; 0x28
   164ee:	strd	r2, r3, [r0, #40]	; 0x28
   164f2:	bl	1622c <add_merge_cache_extent@@Base+0x198>
   164f6:	mov	r0, r5
   164f8:	mov	r1, r4
   164fa:	bl	1605c <remove_cache_extent@@Base>
   164fe:	mov	r0, r4
   16500:	bl	16438 <add_merge_cache_extent@@Base+0x3a4>
   16504:	movs	r0, #0
   16506:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1650a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1650e:	mov	r5, r0
   16510:	ldrd	r8, r9, [sp, #32]
   16514:	mov	r4, r1
   16516:	ldr.w	sl, [pc, #96]	; 16578 <add_merge_cache_extent@@Base+0x4e4>
   1651a:	mov	r7, r3
   1651c:	cmp	r9, r3
   1651e:	ldr	r0, [pc, #92]	; (1657c <add_merge_cache_extent@@Base+0x4e8>)
   16520:	add	sl, pc
   16522:	it	eq
   16524:	cmpeq	r8, r2
   16526:	add.w	sl, sl, #61	; 0x3d
   1652a:	mov	r6, r2
   1652c:	ite	cc
   1652e:	movcc	r3, #1
   16530:	movcs	r3, #0
   16532:	mov	r1, sl
   16534:	add	r0, pc
   16536:	movs	r2, #158	; 0x9e
   16538:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   1653c:	ldr	r2, [sp, #40]	; 0x28
   1653e:	ldr	r3, [r4, #60]	; 0x3c
   16540:	mov	r0, r4
   16542:	strd	r6, r7, [r4, #40]	; 0x28
   16546:	orrs	r3, r2
   16548:	strd	r8, r9, [r4, #48]	; 0x30
   1654c:	str	r3, [r4, #60]	; 0x3c
   1654e:	bl	1622c <add_merge_cache_extent@@Base+0x198>
   16552:	mov	r1, r4
   16554:	mov	r0, r5
   16556:	bl	15e42 <insert_cache_extent@@Base>
   1655a:	movs	r2, #164	; 0xa4
   1655c:	mov	r1, sl
   1655e:	mov	r3, r0
   16560:	ldr	r0, [pc, #28]	; (16580 <add_merge_cache_extent@@Base+0x4ec>)
   16562:	add	r0, pc
   16564:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   16568:	mov	r1, r4
   1656a:	mov	r0, r5
   1656c:	bl	1646e <add_merge_cache_extent@@Base+0x3da>
   16570:	movs	r0, #0
   16572:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16576:	nop
   16578:	strb	r5, [r2, r6]
   1657a:	movs	r2, r0
   1657c:	strb	r5, [r0, r1]
   1657e:	movs	r2, r0
   16580:	subs	r0, #130	; 0x82
   16582:	movs	r2, r0
   16584:	push	{r3, r4, r5, lr}
   16586:	mov	r4, r1
   16588:	ldr	r3, [r1, #60]	; 0x3c
   1658a:	and.w	r5, r2, r3
   1658e:	bic.w	r2, r3, r2
   16592:	str	r2, [r1, #60]	; 0x3c
   16594:	cbnz	r2, 165a4 <add_merge_cache_extent@@Base+0x510>
   16596:	bl	1605c <remove_cache_extent@@Base>
   1659a:	mov	r0, r4
   1659c:	bl	16438 <add_merge_cache_extent@@Base+0x3a4>
   165a0:	mov	r0, r5
   165a2:	pop	{r3, r4, r5, pc}
   165a4:	bl	1646e <add_merge_cache_extent@@Base+0x3da>
   165a8:	b.n	165a0 <add_merge_cache_extent@@Base+0x50c>
   165aa:	push	{r0, r1, r4, r5, r6, lr}
   165ac:	mov	r6, r1
   165ae:	mov	r4, r0
   165b0:	cbz	r0, 1660c <add_merge_cache_extent@@Base+0x578>
   165b2:	cmn.w	r0, #4096	; 0x1000
   165b6:	bhi.n	1660c <add_merge_cache_extent@@Base+0x578>
   165b8:	ldr	r5, [r0, #80]	; 0x50
   165ba:	movw	r2, #665	; 0x299
   165be:	ldr	r1, [pc, #80]	; (16610 <add_merge_cache_extent@@Base+0x57c>)
   165c0:	subs	r5, #1
   165c2:	str	r5, [r0, #80]	; 0x50
   165c4:	ldr	r0, [pc, #76]	; (16614 <add_merge_cache_extent@@Base+0x580>)
   165c6:	add	r1, pc
   165c8:	lsrs	r3, r5, #31
   165ca:	adds	r1, #74	; 0x4a
   165cc:	add	r0, pc
   165ce:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   165d2:	cbnz	r5, 1660c <add_merge_cache_extent@@Base+0x578>
   165d4:	ldr	r3, [r4, #84]	; 0x54
   165d6:	lsls	r2, r3, #31
   165d8:	bpl.n	165ea <add_merge_cache_extent@@Base+0x556>
   165da:	ldr	r3, [r4, #76]	; 0x4c
   165dc:	ldr	r0, [pc, #56]	; (16618 <add_merge_cache_extent@@Base+0x584>)
   165de:	str	r3, [sp, #0]
   165e0:	add	r0, pc
   165e2:	ldrd	r2, r3, [r4, #40]	; 0x28
   165e6:	bl	173a8 <__btrfs_warning@@Base>
   165ea:	ldrd	r1, r2, [r4, #68]	; 0x44
   165ee:	add.w	r3, r4, #68	; 0x44
   165f2:	str	r2, [r1, #4]
   165f4:	str	r1, [r2, #0]
   165f6:	strd	r3, r3, [r4, #68]	; 0x44
   165fa:	ldr	r3, [r4, #84]	; 0x54
   165fc:	lsls	r3, r3, #20
   165fe:	bmi.n	16602 <add_merge_cache_extent@@Base+0x56e>
   16600:	cbz	r6, 1660c <add_merge_cache_extent@@Base+0x578>
   16602:	mov	r0, r4
   16604:	add	sp, #8
   16606:	ldmia.w	sp!, {r4, r5, r6, lr}
   1660a:	b.n	163a8 <add_merge_cache_extent@@Base+0x314>
   1660c:	add	sp, #8
   1660e:	pop	{r4, r5, r6, pc}
   16610:	strb	r7, [r5, r3]
   16612:	movs	r2, r0
   16614:	strh	r1, [r7, r6]
   16616:	movs	r2, r0
   16618:	strh	r2, [r6, r6]
   1661a:	movs	r2, r0

0001661c <extent_io_tree_init@@Base>:
   1661c:	push	{r4, lr}
   1661e:	mov	r4, r0
   16620:	bl	15e3c <cache_tree_init@@Base>
   16624:	adds	r0, r4, #4
   16626:	bl	15e3c <cache_tree_init@@Base>
   1662a:	add.w	r3, r4, #8
   1662e:	movs	r2, #0
   16630:	strd	r3, r3, [r4, #8]
   16634:	movs	r3, #0
   16636:	strd	r2, r3, [r4, #16]
   1663a:	bl	31bfc <total_memory@@Base>
   1663e:	movs	r3, #0
   16640:	str	r3, [r4, #28]
   16642:	lsrs	r0, r0, #2
   16644:	str	r0, [r4, #24]
   16646:	pop	{r4, pc}

00016648 <extent_io_tree_init_cache_max@@Base>:
   16648:	push	{r4, r5, r6, lr}
   1664a:	mov	r4, r0
   1664c:	mov	r6, r2
   1664e:	mov	r5, r3
   16650:	bl	1661c <extent_io_tree_init@@Base>
   16654:	strd	r6, r5, [r4, #24]
   16658:	pop	{r4, r5, r6, pc}

0001665a <extent_buffer_bitmap_set@@Base>:
   1665a:	adds	r0, #96	; 0x60
   1665c:	add.w	r1, r1, r2, lsr #3
   16660:	push	{r4, r5, r6, lr}
   16662:	add	r1, r0
   16664:	movs	r4, #255	; 0xff
   16666:	and.w	r0, r2, #7
   1666a:	lsls	r4, r0
   1666c:	rsb	r5, r0, #8
   16670:	mov	r0, r3
   16672:	uxtb	r4, r4
   16674:	cmp	r5, r0
   16676:	bls.n	16692 <extent_buffer_bitmap_set@@Base+0x38>
   16678:	cbz	r0, 16690 <extent_buffer_bitmap_set@@Base+0x36>
   1667a:	add	r2, r3
   1667c:	movs	r3, #255	; 0xff
   1667e:	negs	r2, r2
   16680:	and.w	r2, r2, #7
   16684:	asr.w	r2, r3, r2
   16688:	ands	r4, r2
   1668a:	ldrb	r2, [r1, #0]
   1668c:	orrs	r4, r2
   1668e:	strb	r4, [r1, #0]
   16690:	pop	{r4, r5, r6, pc}
   16692:	ldrb	r6, [r1, #0]
   16694:	subs	r0, r0, r5
   16696:	movs	r5, #8
   16698:	orrs	r4, r6
   1669a:	strb.w	r4, [r1], #1
   1669e:	movs	r4, #255	; 0xff
   166a0:	b.n	16674 <extent_buffer_bitmap_set@@Base+0x1a>

000166a2 <extent_buffer_bitmap_clear@@Base>:
   166a2:	adds	r0, #96	; 0x60
   166a4:	add.w	r1, r1, r2, lsr #3
   166a8:	push	{r4, r5, r6, lr}
   166aa:	add	r1, r0
   166ac:	and.w	r4, r2, #7
   166b0:	movs	r0, #255	; 0xff
   166b2:	lsls	r0, r4
   166b4:	rsb	r5, r4, #8
   166b8:	mov	r4, r3
   166ba:	uxtb	r0, r0
   166bc:	cmp	r5, r4
   166be:	bls.n	166dc <extent_buffer_bitmap_clear@@Base+0x3a>
   166c0:	cbz	r4, 166da <extent_buffer_bitmap_clear@@Base+0x38>
   166c2:	add	r2, r3
   166c4:	movs	r3, #255	; 0xff
   166c6:	negs	r2, r2
   166c8:	and.w	r2, r2, #7
   166cc:	asr.w	r2, r3, r2
   166d0:	ands	r0, r2
   166d2:	ldrb	r2, [r1, #0]
   166d4:	bic.w	r0, r2, r0
   166d8:	strb	r0, [r1, #0]
   166da:	pop	{r4, r5, r6, pc}
   166dc:	ldrb	r6, [r1, #0]
   166de:	subs	r4, r4, r5
   166e0:	movs	r5, #8
   166e2:	bic.w	r0, r6, r0
   166e6:	strb.w	r0, [r1], #1
   166ea:	movs	r0, #255	; 0xff
   166ec:	b.n	166bc <extent_buffer_bitmap_clear@@Base+0x1a>

000166ee <clear_extent_bits@@Base>:
   166ee:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166f2:	mov	r7, r3
   166f4:	ldr	r3, [pc, #348]	; (16854 <clear_extent_bits@@Base+0x166>)
   166f6:	mov.w	r8, #0
   166fa:	vpush	{d8}
   166fe:	mov	r9, r0
   16700:	add	r3, pc
   16702:	mov	r6, r2
   16704:	adds	r3, #102	; 0x66
   16706:	mov	r4, r8
   16708:	vmov	s16, r3
   1670c:	ldr	r3, [pc, #328]	; (16858 <clear_extent_bits@@Base+0x16a>)
   1670e:	sub	sp, #12
   16710:	add	r3, pc
   16712:	vmov	s17, r3
   16716:	cbnz	r4, 16724 <clear_extent_bits@@Base+0x36>
   16718:	bl	1624c <add_merge_cache_extent@@Base+0x1b8>
   1671c:	mov	r4, r0
   1671e:	cmp	r0, #0
   16720:	beq.w	1684c <clear_extent_bits@@Base+0x15e>
   16724:	mov	r2, r6
   16726:	mov	r3, r7
   16728:	mov	r0, r9
   1672a:	bl	15f84 <search_cache_extent@@Base>
   1672e:	mov	r5, r0
   16730:	cmp	r0, #0
   16732:	beq.w	16844 <clear_extent_bits@@Base+0x156>
   16736:	ldrd	r2, r3, [r0, #40]	; 0x28
   1673a:	ldrd	r0, r1, [sp, #56]	; 0x38
   1673e:	cmp	r1, r3
   16740:	it	eq
   16742:	cmpeq	r0, r2
   16744:	bcc.n	16844 <clear_extent_bits@@Base+0x156>
   16746:	cmp	r3, r7
   16748:	ldrd	sl, fp, [r5, #48]	; 0x30
   1674c:	it	eq
   1674e:	cmpeq	r2, r6
   16750:	bcs.n	167c8 <clear_extent_bits@@Base+0xda>
   16752:	mov	r2, r4
   16754:	mov	r1, r5
   16756:	mov	r0, r9
   16758:	strd	r6, r7, [sp]
   1675c:	bl	1634c <add_merge_cache_extent@@Base+0x2b8>
   16760:	vmov	r1, s16
   16764:	movw	r2, #311	; 0x137
   16768:	cmn.w	r0, #17
   1676c:	mov	r4, r0
   1676e:	vmov	r0, s17
   16772:	ite	ne
   16774:	movne	r3, #0
   16776:	moveq	r3, #1
   16778:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   1677c:	cmp	r4, #0
   1677e:	bne.n	16816 <clear_extent_bits@@Base+0x128>
   16780:	ldrd	r2, r3, [r5, #48]	; 0x30
   16784:	ldrd	r0, r1, [sp, #56]	; 0x38
   16788:	cmp	r1, r3
   1678a:	it	eq
   1678c:	cmpeq	r0, r2
   1678e:	bcc.n	167c2 <clear_extent_bits@@Base+0xd4>
   16790:	ldr	r2, [sp, #64]	; 0x40
   16792:	mov	r1, r5
   16794:	mov	r0, r9
   16796:	bl	16584 <add_merge_cache_extent@@Base+0x4f0>
   1679a:	cmp.w	fp, #4294967295	; 0xffffffff
   1679e:	it	eq
   167a0:	cmpeq.w	sl, #4294967295	; 0xffffffff
   167a4:	orr.w	r8, r8, r0
   167a8:	beq.n	16816 <clear_extent_bits@@Base+0x128>
   167aa:	adds.w	r6, sl, #1
   167ae:	adc.w	r7, fp, #0
   167b2:	ldrd	r2, r3, [sp, #56]	; 0x38
   167b6:	cmp	r3, r7
   167b8:	it	eq
   167ba:	cmpeq	r2, r6
   167bc:	bcs.n	16716 <clear_extent_bits@@Base+0x28>
   167be:	cbz	r4, 16816 <clear_extent_bits@@Base+0x128>
   167c0:	b.n	16844 <clear_extent_bits@@Base+0x156>
   167c2:	ldrd	r6, r7, [r5, #40]	; 0x28
   167c6:	b.n	167b2 <clear_extent_bits@@Base+0xc4>
   167c8:	ldrd	r2, r3, [sp, #56]	; 0x38
   167cc:	cmp	r3, fp
   167ce:	it	eq
   167d0:	cmpeq	r2, sl
   167d2:	bcs.n	16822 <clear_extent_bits@@Base+0x134>
   167d4:	ldr	r3, [sp, #56]	; 0x38
   167d6:	mov	r1, r5
   167d8:	mov	r0, r9
   167da:	adds	r2, r3, #1
   167dc:	ldr	r3, [sp, #60]	; 0x3c
   167de:	adc.w	r3, r3, #0
   167e2:	strd	r2, r3, [sp]
   167e6:	mov	r2, r4
   167e8:	bl	1634c <add_merge_cache_extent@@Base+0x2b8>
   167ec:	ldr	r1, [pc, #108]	; (1685c <clear_extent_bits@@Base+0x16e>)
   167ee:	movw	r2, #333	; 0x14d
   167f2:	add	r1, pc
   167f4:	adds	r1, #102	; 0x66
   167f6:	adds	r0, #17
   167f8:	ldr	r0, [pc, #100]	; (16860 <clear_extent_bits@@Base+0x172>)
   167fa:	it	ne
   167fc:	movne	r3, #0
   167fe:	add	r0, pc
   16800:	it	eq
   16802:	moveq	r3, #1
   16804:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   16808:	ldr	r2, [sp, #64]	; 0x40
   1680a:	mov	r1, r4
   1680c:	mov	r0, r9
   1680e:	bl	16584 <add_merge_cache_extent@@Base+0x4f0>
   16812:	orr.w	r8, r8, r0
   16816:	mov	r0, r8
   16818:	add	sp, #12
   1681a:	vpop	{d8}
   1681e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16822:	adds.w	r6, sl, #1
   16826:	ldr	r2, [sp, #64]	; 0x40
   16828:	mov	r1, r5
   1682a:	mov	r0, r9
   1682c:	adc.w	r7, fp, #0
   16830:	bl	16584 <add_merge_cache_extent@@Base+0x4f0>
   16834:	cmp.w	fp, #4294967295	; 0xffffffff
   16838:	it	eq
   1683a:	cmpeq.w	sl, #4294967295	; 0xffffffff
   1683e:	orr.w	r8, r8, r0
   16842:	bne.n	167b2 <clear_extent_bits@@Base+0xc4>
   16844:	mov	r0, r4
   16846:	bl	16438 <add_merge_cache_extent@@Base+0x3a4>
   1684a:	b.n	16816 <clear_extent_bits@@Base+0x128>
   1684c:	mvn.w	r8, #11
   16850:	b.n	16816 <clear_extent_bits@@Base+0x128>
   16852:	nop
   16854:	strh	r5, [r6, r6]
   16856:	movs	r2, r0
   16858:	strh	r3, [r6, r2]
   1685a:	movs	r2, r0
   1685c:	strh	r3, [r0, r3]
   1685e:	movs	r2, r0
   16860:	str	r5, [r0, r7]
   16862:	movs	r2, r0

00016864 <set_extent_bits@@Base>:
   16864:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16868:	mov	r7, r3
   1686a:	ldr	r3, [pc, #516]	; (16a70 <set_extent_bits@@Base+0x20c>)
   1686c:	mov	r9, r0
   1686e:	vpush	{d8}
   16872:	mov	r6, r2
   16874:	add	r3, pc
   16876:	mov.w	r8, #0
   1687a:	adds	r3, #120	; 0x78
   1687c:	vmov	s16, r3
   16880:	ldr	r3, [pc, #496]	; (16a74 <set_extent_bits@@Base+0x210>)
   16882:	sub	sp, #28
   16884:	add	r3, pc
   16886:	ldrd	sl, fp, [sp, #72]	; 0x48
   1688a:	vmov	s17, r3
   1688e:	cmp.w	r8, #0
   16892:	bne.n	168a0 <set_extent_bits@@Base+0x3c>
   16894:	bl	1624c <add_merge_cache_extent@@Base+0x1b8>
   16898:	mov	r8, r0
   1689a:	cmp	r0, #0
   1689c:	beq.w	16a68 <set_extent_bits@@Base+0x204>
   168a0:	mov	r2, r6
   168a2:	mov	r3, r7
   168a4:	mov	r0, r9
   168a6:	bl	15f84 <search_cache_extent@@Base>
   168aa:	mov	r5, r0
   168ac:	cbnz	r0, 168ec <set_extent_bits@@Base+0x88>
   168ae:	ldr	r3, [sp, #80]	; 0x50
   168b0:	mov	r2, r6
   168b2:	mov	r1, r8
   168b4:	mov	r0, r9
   168b6:	strd	sl, fp, [sp]
   168ba:	str	r3, [sp, #8]
   168bc:	mov	r3, r7
   168be:	bl	1650a <add_merge_cache_extent@@Base+0x476>
   168c2:	ldr	r1, [pc, #436]	; (16a78 <set_extent_bits@@Base+0x214>)
   168c4:	mov.w	r2, #382	; 0x17e
   168c8:	add	r1, pc
   168ca:	adds	r1, #120	; 0x78
   168cc:	cmn.w	r0, #17
   168d0:	mov	r4, r0
   168d2:	ldr	r0, [pc, #424]	; (16a7c <set_extent_bits@@Base+0x218>)
   168d4:	ite	ne
   168d6:	movne	r3, #0
   168d8:	moveq	r3, #1
   168da:	add	r0, pc
   168dc:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   168e0:	mov	r0, r4
   168e2:	add	sp, #28
   168e4:	vpop	{d8}
   168e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168ec:	ldrd	r2, r3, [r0, #40]	; 0x28
   168f0:	ldrd	r0, r1, [r0, #48]	; 0x30
   168f4:	cmp	r7, r3
   168f6:	it	eq
   168f8:	cmpeq	r6, r2
   168fa:	strd	r0, r1, [sp, #16]
   168fe:	bne.n	16948 <set_extent_bits@@Base+0xe4>
   16900:	cmp	fp, r1
   16902:	it	eq
   16904:	cmpeq	sl, r0
   16906:	bcc.w	16a22 <set_extent_bits@@Base+0x1be>
   1690a:	ldr	r3, [r5, #60]	; 0x3c
   1690c:	mov	r1, r5
   1690e:	ldr	r2, [sp, #80]	; 0x50
   16910:	mov	r0, r9
   16912:	orrs	r3, r2
   16914:	str	r3, [r5, #60]	; 0x3c
   16916:	bl	1646e <add_merge_cache_extent@@Base+0x3da>
   1691a:	ldrd	r3, r4, [sp, #16]
   1691e:	adds	r4, #1
   16920:	it	eq
   16922:	cmpeq.w	r3, #4294967295	; 0xffffffff
   16926:	beq.n	16940 <set_extent_bits@@Base+0xdc>
   16928:	ldr	r3, [sp, #16]
   1692a:	adds	r6, r3, #1
   1692c:	ldr	r3, [sp, #20]
   1692e:	adc.w	r7, r3, #0
   16932:	cmp	fp, r7
   16934:	it	eq
   16936:	cmpeq	sl, r6
   16938:	bcs.n	1688e <set_extent_bits@@Base+0x2a>
   1693a:	cmp.w	r8, #0
   1693e:	beq.n	169aa <set_extent_bits@@Base+0x146>
   16940:	mov	r0, r8
   16942:	bl	16438 <add_merge_cache_extent@@Base+0x3a4>
   16946:	b.n	169aa <set_extent_bits@@Base+0x146>
   16948:	cmp	r3, r7
   1694a:	it	eq
   1694c:	cmpeq	r2, r6
   1694e:	bcs.n	169c2 <set_extent_bits@@Base+0x15e>
   16950:	mov	r2, r8
   16952:	mov	r1, r5
   16954:	mov	r0, r9
   16956:	strd	r6, r7, [sp]
   1695a:	bl	1634c <add_merge_cache_extent@@Base+0x2b8>
   1695e:	ldr	r1, [pc, #288]	; (16a80 <set_extent_bits@@Base+0x21c>)
   16960:	movw	r2, #423	; 0x1a7
   16964:	add	r1, pc
   16966:	adds	r1, #120	; 0x78
   16968:	cmn.w	r0, #17
   1696c:	mov	r4, r0
   1696e:	ldr	r0, [pc, #276]	; (16a84 <set_extent_bits@@Base+0x220>)
   16970:	ite	ne
   16972:	movne	r3, #0
   16974:	moveq	r3, #1
   16976:	add	r0, pc
   16978:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   1697c:	cmp	r4, #0
   1697e:	bne.n	168e0 <set_extent_bits@@Base+0x7c>
   16980:	ldrd	r2, r3, [r5, #48]	; 0x30
   16984:	cmp	fp, r3
   16986:	it	eq
   16988:	cmpeq	sl, r2
   1698a:	bcc.n	169ba <set_extent_bits@@Base+0x156>
   1698c:	ldr	r3, [r5, #60]	; 0x3c
   1698e:	mov	r1, r5
   16990:	ldr	r2, [sp, #80]	; 0x50
   16992:	mov	r0, r9
   16994:	orrs	r3, r2
   16996:	str	r3, [r5, #60]	; 0x3c
   16998:	bl	1646e <add_merge_cache_extent@@Base+0x3da>
   1699c:	ldrd	r2, r3, [sp, #16]
   169a0:	adds	r3, #1
   169a2:	it	eq
   169a4:	cmpeq.w	r2, #4294967295	; 0xffffffff
   169a8:	bne.n	169ae <set_extent_bits@@Base+0x14a>
   169aa:	movs	r4, #0
   169ac:	b.n	168e0 <set_extent_bits@@Base+0x7c>
   169ae:	ldr	r3, [sp, #16]
   169b0:	adds	r6, r3, #1
   169b2:	ldr	r3, [sp, #20]
   169b4:	adc.w	r7, r3, #0
   169b8:	b.n	169be <set_extent_bits@@Base+0x15a>
   169ba:	ldrd	r6, r7, [r5, #40]	; 0x28
   169be:	mov	r8, r4
   169c0:	b.n	16932 <set_extent_bits@@Base+0xce>
   169c2:	cmp	r7, r3
   169c4:	it	eq
   169c6:	cmpeq	r6, r2
   169c8:	bcs.n	16a22 <set_extent_bits@@Base+0x1be>
   169ca:	cmp	fp, r3
   169cc:	it	eq
   169ce:	cmpeq	sl, r2
   169d0:	bcc.n	16a1a <set_extent_bits@@Base+0x1b6>
   169d2:	adds.w	r5, r2, #4294967295	; 0xffffffff
   169d6:	adc.w	r3, r3, #4294967295	; 0xffffffff
   169da:	str	r3, [sp, #16]
   169dc:	ldr	r3, [sp, #80]	; 0x50
   169de:	mov	r2, r6
   169e0:	mov	r1, r8
   169e2:	mov	r0, r9
   169e4:	str	r5, [sp, #0]
   169e6:	str	r3, [sp, #8]
   169e8:	ldr	r3, [sp, #16]
   169ea:	str	r3, [sp, #4]
   169ec:	mov	r3, r7
   169ee:	bl	1650a <add_merge_cache_extent@@Base+0x476>
   169f2:	vmov	r1, s16
   169f6:	mov.w	r2, #454	; 0x1c6
   169fa:	cmn.w	r0, #17
   169fe:	mov	r4, r0
   16a00:	vmov	r0, s17
   16a04:	ite	ne
   16a06:	movne	r3, #0
   16a08:	moveq	r3, #1
   16a0a:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   16a0e:	cmp	r4, #0
   16a10:	bne.w	168e0 <set_extent_bits@@Base+0x7c>
   16a14:	ldr	r3, [sp, #16]
   16a16:	adds	r6, r5, #1
   16a18:	b.n	169b4 <set_extent_bits@@Base+0x150>
   16a1a:	mov	r5, sl
   16a1c:	str.w	fp, [sp, #16]
   16a20:	b.n	169dc <set_extent_bits@@Base+0x178>
   16a22:	adds.w	r2, sl, #1
   16a26:	mov	r1, r5
   16a28:	adc.w	r3, fp, #0
   16a2c:	mov	r0, r9
   16a2e:	strd	r2, r3, [sp]
   16a32:	mov	r2, r8
   16a34:	bl	1634c <add_merge_cache_extent@@Base+0x2b8>
   16a38:	ldr	r1, [pc, #76]	; (16a88 <set_extent_bits@@Base+0x224>)
   16a3a:	mov.w	r2, #468	; 0x1d4
   16a3e:	add	r1, pc
   16a40:	adds	r1, #120	; 0x78
   16a42:	cmn.w	r0, #17
   16a46:	mov	r4, r0
   16a48:	ldr	r0, [pc, #64]	; (16a8c <set_extent_bits@@Base+0x228>)
   16a4a:	ite	ne
   16a4c:	movne	r3, #0
   16a4e:	moveq	r3, #1
   16a50:	add	r0, pc
   16a52:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   16a56:	ldr	r3, [r5, #60]	; 0x3c
   16a58:	ldr	r2, [sp, #80]	; 0x50
   16a5a:	mov	r1, r8
   16a5c:	mov	r0, r9
   16a5e:	orrs	r3, r2
   16a60:	str	r3, [r5, #60]	; 0x3c
   16a62:	bl	1646e <add_merge_cache_extent@@Base+0x3da>
   16a66:	b.n	168e0 <set_extent_bits@@Base+0x7c>
   16a68:	mvn.w	r4, #11
   16a6c:	b.n	168e0 <set_extent_bits@@Base+0x7c>
   16a6e:	nop
   16a70:	strh	r1, [r0, r1]
   16a72:	movs	r2, r0
   16a74:	str	r7, [r7, r4]
   16a76:	movs	r2, r0
   16a78:	str	r5, [r5, r7]
   16a7a:	movs	r2, r0
   16a7c:	str	r1, [r5, r3]
   16a7e:	movs	r2, r0
   16a80:	str	r1, [r2, r5]
   16a82:	movs	r2, r0
   16a84:	str	r5, [r1, r1]
   16a86:	movs	r2, r0
   16a88:	str	r7, [r6, r1]
   16a8a:	movs	r2, r0
   16a8c:	ldr	r7, [pc, #460]	; (16c5c <find_extent_buffer@@Base+0x1c>)
   16a8e:	movs	r2, r0

00016a90 <set_extent_dirty@@Base>:
   16a90:	push	{r4, r5, lr}
   16a92:	sub	sp, #20
   16a94:	movs	r1, #1
   16a96:	ldrd	r4, r5, [sp, #32]
   16a9a:	str	r1, [sp, #8]
   16a9c:	strd	r4, r5, [sp]
   16aa0:	bl	16864 <set_extent_bits@@Base>
   16aa4:	add	sp, #20
   16aa6:	pop	{r4, r5, pc}

00016aa8 <clear_extent_dirty@@Base>:
   16aa8:	push	{r4, r5, lr}
   16aaa:	sub	sp, #20
   16aac:	movs	r1, #1
   16aae:	ldrd	r4, r5, [sp, #32]
   16ab2:	str	r1, [sp, #8]
   16ab4:	strd	r4, r5, [sp]
   16ab8:	bl	166ee <clear_extent_bits@@Base>
   16abc:	add	sp, #20
   16abe:	pop	{r4, r5, pc}

00016ac0 <find_first_extent_bit@@Base>:
   16ac0:	push	{r3, r4, r5, r6, r7, lr}
   16ac2:	mov	r6, r2
   16ac4:	ldr	r4, [sp, #32]
   16ac6:	mov	r7, r3
   16ac8:	bl	15f84 <search_cache_extent@@Base>
   16acc:	cbz	r0, 16afe <find_first_extent_bit@@Base+0x3e>
   16ace:	ldrd	r2, r3, [r0, #48]	; 0x30
   16ad2:	cmp	r3, r7
   16ad4:	it	eq
   16ad6:	cmpeq	r2, r6
   16ad8:	bcc.n	16af8 <find_first_extent_bit@@Base+0x38>
   16ada:	ldr	r3, [r0, #60]	; 0x3c
   16adc:	tst	r4, r3
   16ade:	beq.n	16af8 <find_first_extent_bit@@Base+0x38>
   16ae0:	ldrd	r4, r5, [r0, #40]	; 0x28
   16ae4:	ldr	r3, [sp, #24]
   16ae6:	strd	r4, r5, [r3]
   16aea:	ldr	r3, [sp, #28]
   16aec:	ldrd	r0, r1, [r0, #48]	; 0x30
   16af0:	strd	r0, r1, [r3]
   16af4:	movs	r0, #0
   16af6:	pop	{r3, r4, r5, r6, r7, pc}
   16af8:	bl	16058 <next_cache_extent@@Base>
   16afc:	b.n	16acc <find_first_extent_bit@@Base+0xc>
   16afe:	movs	r0, #1
   16b00:	b.n	16af6 <find_first_extent_bit@@Base+0x36>

00016b02 <test_range_bit@@Base>:
   16b02:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   16b06:	mov	r4, r2
   16b08:	ldrd	r8, r9, [sp, #32]
   16b0c:	mov	r5, r3
   16b0e:	ldr	r7, [sp, #44]	; 0x2c
   16b10:	bl	15f84 <search_cache_extent@@Base>
   16b14:	movs	r6, #0
   16b16:	cbnz	r0, 16b56 <test_range_bit@@Base+0x54>
   16b18:	mov	r0, r6
   16b1a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   16b1e:	cmp	r9, r3
   16b20:	it	eq
   16b22:	cmpeq	r8, r2
   16b24:	bcc.n	16b18 <test_range_bit@@Base+0x16>
   16b26:	ldr	r3, [r0, #60]	; 0x3c
   16b28:	ldr	r2, [sp, #40]	; 0x28
   16b2a:	tst	r2, r3
   16b2c:	beq.n	16b50 <test_range_bit@@Base+0x4e>
   16b2e:	movs	r6, #1
   16b30:	cmp	r7, #0
   16b32:	beq.n	16b18 <test_range_bit@@Base+0x16>
   16b34:	ldrd	r3, r2, [r0, #48]	; 0x30
   16b38:	adds	r4, r3, #1
   16b3a:	adc.w	r5, r2, #0
   16b3e:	cmp	r9, r5
   16b40:	it	eq
   16b42:	cmpeq	r8, r4
   16b44:	bcc.n	16b18 <test_range_bit@@Base+0x16>
   16b46:	bl	16058 <next_cache_extent@@Base>
   16b4a:	cbnz	r0, 16b56 <test_range_bit@@Base+0x54>
   16b4c:	cbnz	r7, 16b6e <test_range_bit@@Base+0x6c>
   16b4e:	b.n	16b18 <test_range_bit@@Base+0x16>
   16b50:	cmp	r7, #0
   16b52:	beq.n	16b34 <test_range_bit@@Base+0x32>
   16b54:	b.n	16b6e <test_range_bit@@Base+0x6c>
   16b56:	cmp	r9, r5
   16b58:	it	eq
   16b5a:	cmpeq	r8, r4
   16b5c:	bcc.n	16b18 <test_range_bit@@Base+0x16>
   16b5e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16b62:	cmp	r7, #0
   16b64:	beq.n	16b1e <test_range_bit@@Base+0x1c>
   16b66:	cmp	r5, r3
   16b68:	it	eq
   16b6a:	cmpeq	r4, r2
   16b6c:	bcs.n	16b26 <test_range_bit@@Base+0x24>
   16b6e:	movs	r6, #0
   16b70:	b.n	16b18 <test_range_bit@@Base+0x16>

00016b72 <set_state_private@@Base>:
   16b72:	push	{r3, r4, r5, lr}
   16b74:	mov	r4, r2
   16b76:	mov	r5, r3
   16b78:	bl	15f84 <search_cache_extent@@Base>
   16b7c:	cbz	r0, 16b96 <set_state_private@@Base+0x24>
   16b7e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16b82:	cmp	r3, r5
   16b84:	it	eq
   16b86:	cmpeq	r2, r4
   16b88:	bne.n	16b96 <set_state_private@@Base+0x24>
   16b8a:	ldrd	r2, r3, [sp, #16]
   16b8e:	strd	r2, r3, [r0, #64]	; 0x40
   16b92:	movs	r0, #0
   16b94:	pop	{r3, r4, r5, pc}
   16b96:	mvn.w	r0, #1
   16b9a:	b.n	16b94 <set_state_private@@Base+0x22>

00016b9c <get_state_private@@Base>:
   16b9c:	push	{r3, r4, r5, lr}
   16b9e:	mov	r4, r2
   16ba0:	mov	r5, r3
   16ba2:	bl	15f84 <search_cache_extent@@Base>
   16ba6:	cbz	r0, 16bc2 <get_state_private@@Base+0x26>
   16ba8:	ldrd	r2, r3, [r0, #40]	; 0x28
   16bac:	cmp	r3, r5
   16bae:	it	eq
   16bb0:	cmpeq	r2, r4
   16bb2:	bne.n	16bc2 <get_state_private@@Base+0x26>
   16bb4:	ldrd	r0, r1, [r0, #64]	; 0x40
   16bb8:	ldr	r3, [sp, #16]
   16bba:	strd	r0, r1, [r3]
   16bbe:	movs	r0, #0
   16bc0:	pop	{r3, r4, r5, pc}
   16bc2:	mvn.w	r0, #1
   16bc6:	b.n	16bc0 <get_state_private@@Base+0x24>

00016bc8 <free_extent_buffer@@Base>:
   16bc8:	movs	r1, #0
   16bca:	b.n	165aa <add_merge_cache_extent@@Base+0x516>

00016bcc <free_extent_buffer_nocache@@Base>:
   16bcc:	movs	r1, #1
   16bce:	b.n	165aa <add_merge_cache_extent@@Base+0x516>

00016bd0 <extent_io_tree_cleanup@@Base>:
   16bd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16bd4:	add.w	r8, r0, #8
   16bd8:	ldr.w	r9, [pc, #84]	; 16c30 <extent_io_tree_cleanup@@Base+0x60>
   16bdc:	sub	sp, #20
   16bde:	ldr	r5, [pc, #84]	; (16c34 <extent_io_tree_cleanup@@Base+0x64>)
   16be0:	mov	r4, r0
   16be2:	add	r9, pc
   16be4:	add	r5, pc
   16be6:	ldr	r3, [r4, #8]
   16be8:	cmp	r3, r8
   16bea:	bne.n	16bfc <extent_io_tree_cleanup@@Base+0x2c>
   16bec:	ldr	r1, [pc, #72]	; (16c38 <extent_io_tree_cleanup@@Base+0x68>)
   16bee:	mov	r0, r4
   16bf0:	add	r1, pc
   16bf2:	add	sp, #20
   16bf4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16bf8:	b.w	16066 <cache_tree_free_extents@@Base>
   16bfc:	ldr	r2, [r3, #20]
   16bfe:	sub.w	r7, r3, #60	; 0x3c
   16c02:	cbz	r2, 16c26 <extent_io_tree_cleanup@@Base+0x56>
   16c04:	ldr	r2, [pc, #52]	; (16c3c <extent_io_tree_cleanup@@Base+0x6c>)
   16c06:	ldr	r6, [r5, r2]
   16c08:	ldr	r2, [r3, #16]
   16c0a:	str	r2, [sp, #8]
   16c0c:	mov	r2, r9
   16c0e:	ldrd	r0, r1, [r3, #-20]
   16c12:	strd	r0, r1, [sp]
   16c16:	movs	r1, #1
   16c18:	ldr	r0, [r6, #0]
   16c1a:	blx	8a14 <__fprintf_chk@plt+0x4>
   16c1e:	mov	r0, r7
   16c20:	bl	16bcc <free_extent_buffer_nocache@@Base>
   16c24:	b.n	16be6 <extent_io_tree_cleanup@@Base+0x16>
   16c26:	mov	r0, r7
   16c28:	bl	163a8 <add_merge_cache_extent@@Base+0x314>
   16c2c:	b.n	16be6 <extent_io_tree_cleanup@@Base+0x16>
   16c2e:	nop
   16c30:	ldr	r5, [pc, #960]	; (16ff4 <write_data_to_disk@@Base+0x54>)
   16c32:	movs	r2, r0
   16c34:	b.n	16f80 <read_data_from_disk@@Base+0x12e>
   16c36:	movs	r4, r0
   16c38:	ldr??.w	pc, [r9, #255]!
   16c3c:	lsls	r4, r6, #8
	...

00016c40 <find_extent_buffer@@Base>:
   16c40:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   16c44:	mov	r4, r0
   16c46:	ldr	r6, [sp, #32]
   16c48:	movs	r7, #0
   16c4a:	adds	r0, #4
   16c4c:	mov	r8, r2
   16c4e:	mov	r9, r3
   16c50:	strd	r6, r7, [sp]
   16c54:	bl	15ec4 <lookup_cache_extent@@Base>
   16c58:	cbz	r0, 16c90 <find_extent_buffer@@Base+0x50>
   16c5a:	ldrd	r2, r3, [r0, #24]
   16c5e:	cmp	r3, r9
   16c60:	it	eq
   16c62:	cmpeq	r2, r8
   16c64:	bne.n	16c96 <find_extent_buffer@@Base+0x56>
   16c66:	ldrd	r2, r3, [r0, #32]
   16c6a:	cmp	r7, r3
   16c6c:	it	eq
   16c6e:	cmpeq	r6, r2
   16c70:	bne.n	16c96 <find_extent_buffer@@Base+0x56>
   16c72:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16c76:	add.w	r3, r0, #60	; 0x3c
   16c7a:	adds	r4, #8
   16c7c:	str	r2, [r1, #4]
   16c7e:	str	r1, [r2, #0]
   16c80:	ldr	r2, [r4, #4]
   16c82:	str	r3, [r4, #4]
   16c84:	strd	r4, r2, [r0, #60]	; 0x3c
   16c88:	str	r3, [r2, #0]
   16c8a:	ldr	r3, [r0, #80]	; 0x50
   16c8c:	adds	r3, #1
   16c8e:	str	r3, [r0, #80]	; 0x50
   16c90:	add	sp, #8
   16c92:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   16c96:	movs	r0, #0
   16c98:	b.n	16c90 <find_extent_buffer@@Base+0x50>

00016c9a <find_first_extent_buffer@@Base>:
   16c9a:	push	{r4, lr}
   16c9c:	mov	r4, r0
   16c9e:	adds	r0, #4
   16ca0:	bl	15f84 <search_cache_extent@@Base>
   16ca4:	cbz	r0, 16cc4 <find_first_extent_buffer@@Base+0x2a>
   16ca6:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16caa:	add.w	r3, r0, #60	; 0x3c
   16cae:	adds	r4, #8
   16cb0:	str	r2, [r1, #4]
   16cb2:	str	r1, [r2, #0]
   16cb4:	ldr	r2, [r4, #4]
   16cb6:	str	r3, [r4, #4]
   16cb8:	strd	r4, r2, [r0, #60]	; 0x3c
   16cbc:	str	r3, [r2, #0]
   16cbe:	ldr	r3, [r0, #80]	; 0x50
   16cc0:	adds	r3, #1
   16cc2:	str	r3, [r0, #80]	; 0x50
   16cc4:	pop	{r4, pc}

00016cc6 <alloc_extent_buffer@@Base>:
   16cc6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cca:	sub	sp, #20
   16ccc:	add.w	sl, r0, #68	; 0x44
   16cd0:	mov	r5, r0
   16cd2:	ldr.w	fp, [sp, #56]	; 0x38
   16cd6:	movs	r7, #0
   16cd8:	mov	r0, sl
   16cda:	mov	r8, r2
   16cdc:	mov	r9, r3
   16cde:	mov	r6, fp
   16ce0:	strd	r6, r7, [sp]
   16ce4:	bl	15ec4 <lookup_cache_extent@@Base>
   16ce8:	mov	r4, r0
   16cea:	cbz	r0, 16d30 <alloc_extent_buffer@@Base+0x6a>
   16cec:	ldrd	r2, r3, [r0, #24]
   16cf0:	cmp	r3, r9
   16cf2:	it	eq
   16cf4:	cmpeq	r2, r8
   16cf6:	bne.n	16d2a <alloc_extent_buffer@@Base+0x64>
   16cf8:	ldrd	r2, r3, [r0, #32]
   16cfc:	cmp	r7, r3
   16cfe:	it	eq
   16d00:	cmpeq	fp, r2
   16d02:	bne.n	16d2a <alloc_extent_buffer@@Base+0x64>
   16d04:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16d08:	add.w	r3, r0, #60	; 0x3c
   16d0c:	adds	r5, #72	; 0x48
   16d0e:	str	r2, [r1, #4]
   16d10:	str	r1, [r2, #0]
   16d12:	ldr	r2, [r5, #4]
   16d14:	str	r3, [r5, #4]
   16d16:	strd	r5, r2, [r0, #60]	; 0x3c
   16d1a:	str	r3, [r2, #0]
   16d1c:	ldr	r3, [r0, #80]	; 0x50
   16d1e:	adds	r3, #1
   16d20:	str	r3, [r0, #80]	; 0x50
   16d22:	mov	r0, r4
   16d24:	add	sp, #20
   16d26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d2a:	mov	r0, r4
   16d2c:	bl	16bc8 <free_extent_buffer@@Base>
   16d30:	mov	r2, r8
   16d32:	mov	r3, r9
   16d34:	mov	r0, r5
   16d36:	str.w	fp, [sp]
   16d3a:	bl	1626e <add_merge_cache_extent@@Base+0x1da>
   16d3e:	mov	r4, r0
   16d40:	cmp	r0, #0
   16d42:	beq.n	16d22 <alloc_extent_buffer@@Base+0x5c>
   16d44:	mov	r1, r0
   16d46:	mov	r0, sl
   16d48:	bl	15e42 <insert_cache_extent@@Base>
   16d4c:	cbz	r0, 16d58 <alloc_extent_buffer@@Base+0x92>
   16d4e:	mov	r0, r4
   16d50:	movs	r4, #0
   16d52:	blx	85dc <free@plt+0x4>
   16d56:	b.n	16d22 <alloc_extent_buffer@@Base+0x5c>
   16d58:	ldr	r2, [r5, #76]	; 0x4c
   16d5a:	add.w	r3, r4, #60	; 0x3c
   16d5e:	add.w	r8, r5, #72	; 0x48
   16d62:	str	r3, [r5, #76]	; 0x4c
   16d64:	strd	r8, r2, [r4, #60]	; 0x3c
   16d68:	str	r3, [r2, #0]
   16d6a:	ldrd	r3, r2, [r5, #80]	; 0x50
   16d6e:	adds	r3, r6, r3
   16d70:	str	r3, [sp, #8]
   16d72:	adc.w	r3, r7, r2
   16d76:	str	r3, [sp, #12]
   16d78:	ldrd	r2, r3, [sp, #8]
   16d7c:	ldrd	r0, r1, [sp, #8]
   16d80:	strd	r2, r3, [r5, #80]	; 0x50
   16d84:	ldrd	r2, r3, [r5, #88]	; 0x58
   16d88:	cmp	r1, r3
   16d8a:	it	eq
   16d8c:	cmpeq	r0, r2
   16d8e:	bcc.n	16d22 <alloc_extent_buffer@@Base+0x5c>
   16d90:	ldr	r0, [r5, #72]	; 0x48
   16d92:	movs	r7, #9
   16d94:	ldr.w	r6, [r0], #-60
   16d98:	subs	r6, #60	; 0x3c
   16d9a:	add.w	r3, r0, #60	; 0x3c
   16d9e:	cmp	r8, r3
   16da0:	beq.n	16d22 <alloc_extent_buffer@@Base+0x5c>
   16da2:	ldr	r3, [r0, #80]	; 0x50
   16da4:	cbnz	r3, 16daa <alloc_extent_buffer@@Base+0xe4>
   16da6:	bl	163a8 <add_merge_cache_extent@@Base+0x314>
   16daa:	ldrd	r0, r3, [r5, #88]	; 0x58
   16dae:	movs	r2, #10
   16db0:	umull	r0, r1, r0, r7
   16db4:	mla	r1, r7, r3, r1
   16db8:	movs	r3, #0
   16dba:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   16dbe:	ldrd	r2, r3, [r5, #80]	; 0x50
   16dc2:	cmp	r1, r3
   16dc4:	it	eq
   16dc6:	cmpeq	r0, r2
   16dc8:	bcs.n	16d22 <alloc_extent_buffer@@Base+0x5c>
   16dca:	ldr	r3, [r6, #60]	; 0x3c
   16dcc:	mov	r0, r6
   16dce:	sub.w	r6, r3, #60	; 0x3c
   16dd2:	b.n	16d9a <alloc_extent_buffer@@Base+0xd4>

00016dd4 <alloc_dummy_extent_buffer@@Base>:
   16dd4:	push	{r0, r1, r2, lr}
   16dd6:	ldr	r1, [sp, #16]
   16dd8:	str	r1, [sp, #0]
   16dda:	bl	1626e <add_merge_cache_extent@@Base+0x1da>
   16dde:	cbz	r0, 16dec <alloc_dummy_extent_buffer@@Base+0x18>
   16de0:	movs	r3, #0
   16de2:	str	r3, [r0, #56]	; 0x38
   16de4:	ldr	r3, [r0, #84]	; 0x54
   16de6:	orr.w	r3, r3, #2048	; 0x800
   16dea:	str	r3, [r0, #84]	; 0x54
   16dec:	add	sp, #12
   16dee:	ldr.w	pc, [sp], #4

00016df2 <read_extent_from_disk@@Base>:
   16df2:	push	{r0, r1, r4, r6, r7, lr}
   16df4:	add.w	r3, r0, #96	; 0x60
   16df8:	ldrd	r6, r7, [r0, #48]	; 0x30
   16dfc:	add	r1, r3
   16dfe:	mov	r4, r2
   16e00:	strd	r6, r7, [sp]
   16e04:	ldr	r0, [r0, #88]	; 0x58
   16e06:	blx	87b8 <pread64@plt>
   16e0a:	cmp	r0, #0
   16e0c:	bge.n	16e1a <read_extent_from_disk@@Base+0x28>
   16e0e:	blx	8938 <__errno_location@plt>
   16e12:	ldr	r0, [r0, #0]
   16e14:	negs	r0, r0
   16e16:	add	sp, #8
   16e18:	pop	{r4, r6, r7, pc}
   16e1a:	cmp	r0, r4
   16e1c:	ite	eq
   16e1e:	moveq	r0, #0
   16e20:	mvnne.w	r0, #4
   16e24:	b.n	16e16 <read_extent_from_disk@@Base+0x24>

00016e26 <write_extent_to_disk@@Base>:
   16e26:	push	{r0, r1, r4, lr}
   16e28:	add.w	r1, r0, #96	; 0x60
   16e2c:	ldrd	r2, r3, [r0, #48]	; 0x30
   16e30:	mov	r4, r0
   16e32:	strd	r2, r3, [sp]
   16e36:	ldr	r2, [r0, #76]	; 0x4c
   16e38:	ldr	r0, [r0, #88]	; 0x58
   16e3a:	blx	89dc <pwrite64@plt>
   16e3e:	cmp	r0, #0
   16e40:	blt.n	16e4e <write_extent_to_disk@@Base+0x28>
   16e42:	ldr	r3, [r4, #76]	; 0x4c
   16e44:	cmp	r3, r0
   16e46:	ite	eq
   16e48:	moveq	r0, #0
   16e4a:	mvnne.w	r0, #4
   16e4e:	add	sp, #8
   16e50:	pop	{r4, pc}

00016e52 <read_data_from_disk@@Base>:
   16e52:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e56:	mov	r5, r2
   16e58:	ldr	r2, [pc, #292]	; (16f80 <read_data_from_disk@@Base+0x12e>)
   16e5a:	mov	r8, r3
   16e5c:	ldr	r3, [pc, #292]	; (16f84 <read_data_from_disk@@Base+0x132>)
   16e5e:	sub	sp, #68	; 0x44
   16e60:	add	r2, pc
   16e62:	ldr	r7, [pc, #292]	; (16f88 <read_data_from_disk@@Base+0x136>)
   16e64:	str	r1, [sp, #24]
   16e66:	mov	r9, r0
   16e68:	ldr	r3, [r2, r3]
   16e6a:	add	r7, pc
   16e6c:	ldrd	sl, fp, [sp, #104]	; 0x68
   16e70:	ldr	r3, [r3, #0]
   16e72:	str	r3, [sp, #60]	; 0x3c
   16e74:	mov.w	r3, #0
   16e78:	movs	r3, #0
   16e7a:	mov	r6, r3
   16e7c:	str	r3, [sp, #44]	; 0x2c
   16e7e:	str	r3, [sp, #28]
   16e80:	add	r3, sp, #44	; 0x2c
   16e82:	str	r3, [sp, #32]
   16e84:	add	r3, sp, #48	; 0x30
   16e86:	str	r3, [sp, #36]	; 0x24
   16e88:	orrs.w	r3, sl, fp
   16e8c:	bne.n	16e92 <read_data_from_disk@@Base+0x40>
   16e8e:	movs	r4, #0
   16e90:	b.n	16ecc <read_data_from_disk@@Base+0x7a>
   16e92:	ldr	r3, [sp, #28]
   16e94:	mov	r2, r5
   16e96:	movs	r1, #0
   16e98:	mov	r0, r9
   16e9a:	strd	sl, fp, [sp, #48]	; 0x30
   16e9e:	str	r3, [sp, #12]
   16ea0:	ldr	r3, [sp, #112]	; 0x70
   16ea2:	str	r3, [sp, #8]
   16ea4:	ldr	r3, [sp, #32]
   16ea6:	str	r3, [sp, #4]
   16ea8:	ldr	r3, [sp, #36]	; 0x24
   16eaa:	str	r3, [sp, #0]
   16eac:	mov	r3, r8
   16eae:	bl	29dd0 <btrfs_map_block@@Base>
   16eb2:	cbz	r0, 16ee0 <read_data_from_disk@@Base+0x8e>
   16eb4:	ldr	r3, [pc, #212]	; (16f8c <read_data_from_disk@@Base+0x13a>)
   16eb6:	movs	r1, #1
   16eb8:	ldr	r2, [pc, #212]	; (16f90 <read_data_from_disk@@Base+0x13e>)
   16eba:	ldr	r3, [r7, r3]
   16ebc:	add	r2, pc
   16ebe:	strd	r5, r8, [sp]
   16ec2:	ldr	r0, [r3, #0]
   16ec4:	blx	8a14 <__fprintf_chk@plt+0x4>
   16ec8:	mvn.w	r4, #4
   16ecc:	ldr	r2, [pc, #196]	; (16f94 <read_data_from_disk@@Base+0x142>)
   16ece:	ldr	r3, [pc, #180]	; (16f84 <read_data_from_disk@@Base+0x132>)
   16ed0:	add	r2, pc
   16ed2:	ldr	r3, [r2, r3]
   16ed4:	ldr	r2, [r3, #0]
   16ed6:	ldr	r3, [sp, #60]	; 0x3c
   16ed8:	eors	r2, r3
   16eda:	beq.n	16f78 <read_data_from_disk@@Base+0x126>
   16edc:	blx	86b8 <__stack_chk_fail@plt>
   16ee0:	ldr	r1, [sp, #44]	; 0x2c
   16ee2:	ldrd	r2, r3, [sp, #48]	; 0x30
   16ee6:	ldr	r0, [r1, #8]
   16ee8:	cmp	fp, r3
   16eea:	it	eq
   16eec:	cmpeq	sl, r2
   16eee:	ldr	r4, [r0, #24]
   16ef0:	itt	cc
   16ef2:	movcc	r2, sl
   16ef4:	movcc	r3, fp
   16ef6:	strd	r2, r3, [sp, #48]	; 0x30
   16efa:	cmp	r4, #0
   16efc:	bgt.n	16f06 <read_data_from_disk@@Base+0xb4>
   16efe:	mov	r0, r1
   16f00:	blx	85dc <free@plt+0x4>
   16f04:	b.n	16ec8 <read_data_from_disk@@Base+0x76>
   16f06:	ldrd	r0, r1, [r1, #16]
   16f0a:	ldr	r3, [sp, #24]
   16f0c:	strd	r0, r1, [sp]
   16f10:	adds	r1, r3, r6
   16f12:	mov	r0, r4
   16f14:	blx	87b8 <pread64@plt>
   16f18:	mov	r4, r0
   16f1a:	ldr	r0, [sp, #44]	; 0x2c
   16f1c:	blx	85dc <free@plt+0x4>
   16f20:	cmp	r4, #0
   16f22:	bge.n	16f3c <read_data_from_disk@@Base+0xea>
   16f24:	ldr	r3, [pc, #100]	; (16f8c <read_data_from_disk@@Base+0x13a>)
   16f26:	movs	r1, #1
   16f28:	ldr	r2, [pc, #108]	; (16f98 <read_data_from_disk@@Base+0x146>)
   16f2a:	ldr	r3, [r7, r3]
   16f2c:	add	r2, pc
   16f2e:	str	r4, [sp, #8]
   16f30:	strd	r5, r8, [sp]
   16f34:	ldr	r0, [r3, #0]
   16f36:	blx	8a14 <__fprintf_chk@plt+0x4>
   16f3a:	b.n	16ecc <read_data_from_disk@@Base+0x7a>
   16f3c:	ldrd	r0, r1, [sp, #48]	; 0x30
   16f40:	asrs	r3, r4, #31
   16f42:	cmp	r3, r1
   16f44:	it	eq
   16f46:	cmpeq	r4, r0
   16f48:	beq.n	16f66 <read_data_from_disk@@Base+0x114>
   16f4a:	ldr	r3, [pc, #64]	; (16f8c <read_data_from_disk@@Base+0x13a>)
   16f4c:	ldr	r2, [pc, #76]	; (16f9c <read_data_from_disk@@Base+0x14a>)
   16f4e:	ldr	r3, [r7, r3]
   16f50:	add	r2, pc
   16f52:	strd	r0, r1, [sp, #16]
   16f56:	movs	r1, #1
   16f58:	str	r4, [sp, #8]
   16f5a:	strd	r5, r8, [sp]
   16f5e:	ldr	r0, [r3, #0]
   16f60:	blx	8a14 <__fprintf_chk@plt+0x4>
   16f64:	b.n	16ec8 <read_data_from_disk@@Base+0x76>
   16f66:	subs.w	sl, sl, r4
   16f6a:	sbc.w	fp, fp, r3
   16f6e:	adds	r5, r5, r4
   16f70:	adc.w	r8, r8, r3
   16f74:	adds	r6, r6, r4
   16f76:	b.n	16e88 <read_data_from_disk@@Base+0x36>
   16f78:	mov	r0, r4
   16f7a:	add	sp, #68	; 0x44
   16f7c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f80:	svc	40	; 0x28
   16f82:	movs	r4, r0
   16f84:	lsls	r4, r4, #8
   16f86:	movs	r0, r0
   16f88:	svc	30
   16f8a:	movs	r4, r0
   16f8c:	lsls	r4, r6, #8
   16f8e:	movs	r0, r0
   16f90:	ldr	r3, [pc, #244]	; (17088 <write_data_to_disk@@Base+0xe8>)
   16f92:	movs	r2, r0
   16f94:	udf	#184	; 0xb8
   16f96:	movs	r4, r0
   16f98:	ldr	r2, [pc, #932]	; (17340 <memmove_extent_buffer@@Base+0xc>)
   16f9a:	movs	r2, r0
   16f9c:	ldr	r2, [pc, #880]	; (17310 <btrfs_clone_extent_buffer@@Base+0x10>)
   16f9e:	movs	r2, r0

00016fa0 <write_data_to_disk@@Base>:
   16fa0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fa4:	mov	r6, r2
   16fa6:	vpush	{d8}
   16faa:	mov	r7, r3
   16fac:	ldr	r2, [pc, #600]	; (17208 <write_data_to_disk@@Base+0x268>)
   16fae:	mov	r8, r0
   16fb0:	ldr	r3, [pc, #600]	; (1720c <write_data_to_disk@@Base+0x26c>)
   16fb2:	add	r2, pc
   16fb4:	ldr.w	r9, [pc, #600]	; 17210 <write_data_to_disk@@Base+0x270>
   16fb8:	sub	sp, #68	; 0x44
   16fba:	add	r9, pc
   16fbc:	str	r1, [sp, #32]
   16fbe:	ldr	r3, [r2, r3]
   16fc0:	ldr	r3, [r3, #0]
   16fc2:	str	r3, [sp, #60]	; 0x3c
   16fc4:	mov.w	r3, #0
   16fc8:	movs	r3, #0
   16fca:	strd	r3, r3, [sp, #40]	; 0x28
   16fce:	str	r3, [sp, #20]
   16fd0:	ldr	r3, [pc, #576]	; (17214 <write_data_to_disk@@Base+0x274>)
   16fd2:	add	r3, pc
   16fd4:	adds	r3, #136	; 0x88
   16fd6:	vmov	s16, r3
   16fda:	ldr	r3, [pc, #572]	; (17218 <write_data_to_disk@@Base+0x278>)
   16fdc:	add	r3, pc
   16fde:	vmov	s17, r3
   16fe2:	ldrd	r3, r4, [sp, #112]	; 0x70
   16fe6:	orrs	r3, r4
   16fe8:	bne.n	16fee <write_data_to_disk@@Base+0x4e>
   16fea:	movs	r4, #0
   16fec:	b.n	170c2 <write_data_to_disk@@Base+0x122>
   16fee:	ldrd	r3, r4, [sp, #112]	; 0x70
   16ff2:	mov	r2, r6
   16ff4:	movs	r1, #1
   16ff6:	mov	r0, r8
   16ff8:	strd	r3, r4, [sp, #48]	; 0x30
   16ffc:	add	r3, sp, #44	; 0x2c
   16ffe:	str	r3, [sp, #12]
   17000:	ldr	r3, [sp, #120]	; 0x78
   17002:	str	r3, [sp, #8]
   17004:	add	r3, sp, #40	; 0x28
   17006:	str	r3, [sp, #4]
   17008:	add	r3, sp, #48	; 0x30
   1700a:	str	r3, [sp, #0]
   1700c:	mov	r3, r7
   1700e:	bl	29dd0 <btrfs_map_block@@Base>
   17012:	mov	sl, r0
   17014:	cbz	r0, 17032 <write_data_to_disk@@Base+0x92>
   17016:	ldr	r3, [pc, #516]	; (1721c <write_data_to_disk@@Base+0x27c>)
   17018:	movs	r1, #1
   1701a:	ldr	r2, [pc, #516]	; (17220 <write_data_to_disk@@Base+0x280>)
   1701c:	ldr.w	r3, [r9, r3]
   17020:	add	r2, pc
   17022:	strd	r6, r7, [sp]
   17026:	ldr	r0, [r3, #0]
   17028:	blx	8a14 <__fprintf_chk@plt+0x4>
   1702c:	mvn.w	r4, #4
   17030:	b.n	170c2 <write_data_to_disk@@Base+0x122>
   17032:	ldr.w	fp, [sp, #44]	; 0x2c
   17036:	cmp.w	fp, #0
   1703a:	bne.n	17062 <write_data_to_disk@@Base+0xc2>
   1703c:	ldr	r3, [sp, #32]
   1703e:	ldr	r2, [sp, #20]
   17040:	add.w	fp, r3, r2
   17044:	ldr	r3, [sp, #40]	; 0x28
   17046:	ldr	r2, [r3, #4]
   17048:	cmp	r2, sl
   1704a:	ble.n	1712e <write_data_to_disk@@Base+0x18e>
   1704c:	add.w	r2, r3, sl, lsl #4
   17050:	ldr	r2, [r2, #8]
   17052:	ldr	r0, [r2, #24]
   17054:	cmp	r0, #0
   17056:	bgt.w	1717c <write_data_to_disk@@Base+0x1dc>
   1705a:	mov	r0, r3
   1705c:	blx	85dc <free@plt+0x4>
   17060:	b.n	1702c <write_data_to_disk@@Base+0x8c>
   17062:	ldrd	r3, r4, [sp, #48]	; 0x30
   17066:	mov	r5, r0
   17068:	strd	r3, r4, [sp, #24]
   1706c:	ldrd	r2, r3, [sp, #24]
   17070:	ldr.w	r4, [r8, #384]	; 0x180
   17074:	cmp	r3, r0
   17076:	it	eq
   17078:	cmpeq	r2, r4
   1707a:	itt	cc
   1707c:	movcc	r4, r2
   1707e:	movcc	r5, r3
   17080:	ldrd	r2, r3, [sp, #112]	; 0x70
   17084:	cmp	r3, r5
   17086:	it	eq
   17088:	cmpeq	r2, r4
   1708a:	it	cc
   1708c:	movcc	r4, r2
   1708e:	add.w	r2, r4, #96	; 0x60
   17092:	it	cc
   17094:	movcc	r5, r3
   17096:	str	r2, [sp, #36]	; 0x24
   17098:	mov	r0, r2
   1709a:	strd	r4, r5, [sp, #48]	; 0x30
   1709e:	blx	8820 <malloc@plt+0x4>
   170a2:	ldr	r2, [sp, #36]	; 0x24
   170a4:	mov	sl, r0
   170a6:	cbnz	r0, 170d8 <write_data_to_disk@@Base+0x138>
   170a8:	ldr	r3, [pc, #368]	; (1721c <write_data_to_disk@@Base+0x27c>)
   170aa:	mvn.w	r4, #11
   170ae:	ldr	r0, [pc, #372]	; (17224 <write_data_to_disk@@Base+0x284>)
   170b0:	ldr.w	r3, [r9, r3]
   170b4:	add	r0, pc
   170b6:	ldr	r1, [r3, #0]
   170b8:	blx	8b1c <fputs@plt+0x4>
   170bc:	ldr	r0, [sp, #44]	; 0x2c
   170be:	blx	85dc <free@plt+0x4>
   170c2:	ldr	r2, [pc, #356]	; (17228 <write_data_to_disk@@Base+0x288>)
   170c4:	ldr	r3, [pc, #324]	; (1720c <write_data_to_disk@@Base+0x26c>)
   170c6:	add	r2, pc
   170c8:	ldr	r3, [r2, r3]
   170ca:	ldr	r2, [r3, #0]
   170cc:	ldr	r3, [sp, #60]	; 0x3c
   170ce:	eors	r2, r3
   170d0:	beq.w	171fa <write_data_to_disk@@Base+0x25a>
   170d4:	blx	86b8 <__stack_chk_fail@plt>
   170d8:	movs	r1, #0
   170da:	blx	8978 <memset@plt+0x4>
   170de:	ldr	r3, [sp, #32]
   170e0:	ldr	r1, [sp, #20]
   170e2:	mov	r2, r4
   170e4:	str.w	r4, [sl, #76]	; 0x4c
   170e8:	add.w	r0, sl, #96	; 0x60
   170ec:	adds	r1, r3, r1
   170ee:	strd	r6, r7, [sl, #40]	; 0x28
   170f2:	blx	8628 <memcpy@plt+0x4>
   170f6:	ldrd	r3, r4, [sp, #24]
   170fa:	ldr	r2, [sp, #40]	; 0x28
   170fc:	mov	r1, sl
   170fe:	mov	r0, r8
   17100:	str.w	fp, [sp, #8]
   17104:	strd	r3, r4, [sp]
   17108:	bl	2a738 <write_raid56_with_parity@@Base>
   1710c:	vmov	r1, s16
   17110:	movw	r2, #922	; 0x39a
   17114:	mov	r3, r0
   17116:	vmov	r0, s17
   1711a:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   1711e:	mov	r0, sl
   17120:	blx	85dc <free@plt+0x4>
   17124:	ldr	r0, [sp, #44]	; 0x2c
   17126:	blx	85dc <free@plt+0x4>
   1712a:	movs	r3, #0
   1712c:	str	r3, [sp, #44]	; 0x2c
   1712e:	ldrd	r2, r3, [sp, #112]	; 0x70
   17132:	ldrd	r4, r5, [sp, #48]	; 0x30
   17136:	ldr	r1, [pc, #244]	; (1722c <write_data_to_disk@@Base+0x28c>)
   17138:	cmp	r3, r5
   1713a:	ldr	r0, [pc, #244]	; (17230 <write_data_to_disk@@Base+0x290>)
   1713c:	it	eq
   1713e:	cmpeq	r2, r4
   17140:	add	r1, pc
   17142:	add.w	r1, r1, #136	; 0x88
   17146:	add	r0, pc
   17148:	ite	cc
   1714a:	movcc	r3, #1
   1714c:	movcs	r3, #0
   1714e:	movw	r2, #954	; 0x3ba
   17152:	bl	162c4 <add_merge_cache_extent@@Base+0x230>
   17156:	ldr	r3, [sp, #112]	; 0x70
   17158:	ldr	r0, [sp, #40]	; 0x28
   1715a:	subs	r3, r3, r4
   1715c:	str	r3, [sp, #112]	; 0x70
   1715e:	ldr	r3, [sp, #116]	; 0x74
   17160:	sbc.w	r3, r3, r5
   17164:	str	r3, [sp, #116]	; 0x74
   17166:	ldr	r3, [sp, #20]
   17168:	adds	r6, r6, r4
   1716a:	adc.w	r7, r5, r7
   1716e:	adds	r3, r3, r4
   17170:	str	r3, [sp, #20]
   17172:	blx	85dc <free@plt+0x4>
   17176:	movs	r3, #0
   17178:	str	r3, [sp, #40]	; 0x28
   1717a:	b.n	16fe2 <write_data_to_disk@@Base+0x42>
   1717c:	add.w	sl, sl, #1
   17180:	mov	r1, fp
   17182:	add.w	r3, r3, sl, lsl #4
   17186:	ldrd	r3, r4, [r3]
   1718a:	strd	r3, r4, [sp, #24]
   1718e:	ldrd	r2, r3, [sp, #48]	; 0x30
   17192:	ldrd	r4, r5, [sp, #112]	; 0x70
   17196:	cmp	r5, r3
   17198:	it	eq
   1719a:	cmpeq	r4, r2
   1719c:	itt	cc
   1719e:	movcc	r2, r4
   171a0:	movcc	r3, r5
   171a2:	ldrd	r4, r5, [sp, #24]
   171a6:	strd	r2, r3, [sp, #48]	; 0x30
   171aa:	strd	r4, r5, [sp]
   171ae:	blx	89dc <pwrite64@plt>
   171b2:	ldrd	r2, r3, [sp, #48]	; 0x30
   171b6:	asrs	r5, r0, #31
   171b8:	cmp	r5, r3
   171ba:	it	eq
   171bc:	cmpeq	r0, r2
   171be:	beq.w	17044 <write_data_to_disk@@Base+0xa4>
   171c2:	ldr	r3, [pc, #88]	; (1721c <write_data_to_disk@@Base+0x27c>)
   171c4:	cmp	r0, #0
   171c6:	ldr.w	r3, [r9, r3]
   171ca:	ldr	r5, [r3, #0]
   171cc:	bge.n	171ec <write_data_to_disk@@Base+0x24c>
   171ce:	blx	8938 <__errno_location@plt>
   171d2:	ldr	r2, [pc, #96]	; (17234 <write_data_to_disk@@Base+0x294>)
   171d4:	movs	r1, #1
   171d6:	add	r2, pc
   171d8:	ldr	r3, [r0, #0]
   171da:	mov	r4, r0
   171dc:	mov	r0, r5
   171de:	blx	8a14 <__fprintf_chk@plt+0x4>
   171e2:	ldr	r0, [sp, #40]	; 0x28
   171e4:	ldr	r4, [r4, #0]
   171e6:	blx	85dc <free@plt+0x4>
   171ea:	b.n	170c2 <write_data_to_disk@@Base+0x122>
   171ec:	ldr	r0, [pc, #72]	; (17238 <write_data_to_disk@@Base+0x298>)
   171ee:	mov	r1, r5
   171f0:	add	r0, pc
   171f2:	blx	8b1c <fputs@plt+0x4>
   171f6:	ldr	r0, [sp, #40]	; 0x28
   171f8:	b.n	1705c <write_data_to_disk@@Base+0xbc>
   171fa:	mov	r0, r4
   171fc:	add	sp, #68	; 0x44
   171fe:	vpop	{d8}
   17202:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17206:	nop
   17208:	ble.n	171b8 <write_data_to_disk@@Base+0x218>
   1720a:	movs	r4, r0
   1720c:	lsls	r4, r4, #8
   1720e:	movs	r0, r0
   17210:	ble.n	171b0 <write_data_to_disk@@Base+0x210>
   17212:	movs	r4, r0
   17214:	ldr	r2, [pc, #908]	; (175a4 <btrfs_uuid_to_key@@Base+0xc>)
   17216:	movs	r2, r0
   17218:	cmp	r6, #8
   1721a:	movs	r2, r0
   1721c:	lsls	r4, r6, #8
   1721e:	movs	r0, r0
   17220:	ldr	r1, [pc, #868]	; (17588 <__btrfs_error_on@@Base+0x6c>)
   17222:	movs	r2, r0
   17224:	ldr	r1, [pc, #652]	; (174b4 <__btrfs_warning_on@@Base+0x14>)
   17226:	movs	r2, r0
   17228:	bgt.n	171b0 <write_data_to_disk@@Base+0x210>
   1722a:	movs	r4, r0
   1722c:	ldr	r1, [pc, #468]	; (17404 <__btrfs_warning@@Base+0x5c>)
   1722e:	movs	r2, r0
   17230:	ldr	r1, [pc, #356]	; (17398 <__crc32c_le@@Base+0x1c>)
   17232:	movs	r2, r0
   17234:	ldr	r0, [pc, #640]	; (174b8 <__btrfs_warning_on@@Base+0x18>)
   17236:	movs	r2, r0
   17238:	ldr	r0, [pc, #648]	; (174c4 <__btrfs_warning_on@@Base+0x24>)
   1723a:	movs	r2, r0

0001723c <set_extent_buffer_dirty@@Base>:
   1723c:	push	{r0, r1, r4, r6, r7, lr}
   1723e:	mov	r4, r0
   17240:	ldr	r3, [r0, #84]	; 0x54
   17242:	lsls	r2, r3, #31
   17244:	bmi.n	17270 <set_extent_buffer_dirty@@Base+0x34>
   17246:	orr.w	r3, r3, #1
   1724a:	str	r3, [r0, #84]	; 0x54
   1724c:	ldrd	r2, r3, [r0, #40]	; 0x28
   17250:	ldr	r1, [r0, #76]	; 0x4c
   17252:	adds.w	r6, r2, #4294967295	; 0xffffffff
   17256:	adc.w	r7, r3, #4294967295	; 0xffffffff
   1725a:	adds	r6, r6, r1
   1725c:	adc.w	r7, r7, #0
   17260:	strd	r6, r7, [sp]
   17264:	ldr	r0, [r0, #56]	; 0x38
   17266:	bl	16a90 <set_extent_dirty@@Base>
   1726a:	ldr	r3, [r4, #80]	; 0x50
   1726c:	adds	r3, #1
   1726e:	str	r3, [r4, #80]	; 0x50
   17270:	movs	r0, #0
   17272:	add	sp, #8
   17274:	pop	{r4, r6, r7, pc}

00017276 <clear_extent_buffer_dirty@@Base>:
   17276:	push	{r0, r1, r4, r6, r7, lr}
   17278:	mov	r4, r0
   1727a:	ldr	r3, [r0, #84]	; 0x54
   1727c:	lsls	r2, r3, #31
   1727e:	bpl.n	172aa <clear_extent_buffer_dirty@@Base+0x34>
   17280:	bic.w	r3, r3, #1
   17284:	str	r3, [r0, #84]	; 0x54
   17286:	ldrd	r2, r3, [r0, #40]	; 0x28
   1728a:	ldr	r1, [r0, #76]	; 0x4c
   1728c:	adds.w	r6, r2, #4294967295	; 0xffffffff
   17290:	adc.w	r7, r3, #4294967295	; 0xffffffff
   17294:	adds	r6, r6, r1
   17296:	adc.w	r7, r7, #0
   1729a:	strd	r6, r7, [sp]
   1729e:	ldr	r0, [r0, #56]	; 0x38
   172a0:	bl	16aa8 <clear_extent_dirty@@Base>
   172a4:	mov	r0, r4
   172a6:	bl	16bc8 <free_extent_buffer@@Base>
   172aa:	movs	r0, #0
   172ac:	add	sp, #8
   172ae:	pop	{r4, r6, r7, pc}

000172b0 <memcmp_extent_buffer@@Base>:
   172b0:	push	{r5}
   172b2:	adds	r0, #96	; 0x60
   172b4:	mov	r5, r2
   172b6:	mov	r2, r3
   172b8:	add	r0, r5
   172ba:	ldr.w	r5, [sp], #4
   172be:	b.w	864c <memcmp@plt>

000172c2 <read_extent_buffer@@Base>:
   172c2:	adds	r0, #96	; 0x60
   172c4:	push	{r5}
   172c6:	mov	r5, r1
   172c8:	mov	r1, r2
   172ca:	mov	r2, r3
   172cc:	add	r1, r0
   172ce:	mov	r0, r5
   172d0:	ldr.w	r5, [sp], #4
   172d4:	b.w	8624 <memcpy@plt>

000172d8 <write_extent_buffer@@Base>:
   172d8:	push	{r5}
   172da:	adds	r0, #96	; 0x60
   172dc:	mov	r5, r2
   172de:	mov	r2, r3
   172e0:	add	r0, r5
   172e2:	ldr.w	r5, [sp], #4
   172e6:	b.w	8624 <memcpy@plt>

000172ea <copy_extent_buffer@@Base>:
   172ea:	push	{r6}
   172ec:	adds	r0, #96	; 0x60
   172ee:	adds	r1, #96	; 0x60
   172f0:	mov	r6, r2
   172f2:	add	r1, r3
   172f4:	ldr	r2, [sp, #4]
   172f6:	add	r0, r6
   172f8:	ldr.w	r6, [sp], #4
   172fc:	b.w	8624 <memcpy@plt>

00017300 <btrfs_clone_extent_buffer@@Base>:
   17300:	push	{r0, r1, r2, r4, r5, lr}
   17302:	mov	r5, r0
   17304:	ldr	r3, [r0, #76]	; 0x4c
   17306:	str	r3, [sp, #0]
   17308:	ldrd	r2, r3, [r0, #40]	; 0x28
   1730c:	ldr	r0, [r0, #92]	; 0x5c
   1730e:	bl	1626e <add_merge_cache_extent@@Base+0x1da>
   17312:	mov	r4, r0
   17314:	cbz	r0, 1732e <btrfs_clone_extent_buffer@@Base+0x2e>
   17316:	movs	r3, #0
   17318:	str	r3, [r0, #56]	; 0x38
   1731a:	ldr	r2, [r5, #76]	; 0x4c
   1731c:	mov	r1, r5
   1731e:	str	r2, [sp, #0]
   17320:	mov	r2, r3
   17322:	bl	172ea <copy_extent_buffer@@Base>
   17326:	ldr	r3, [r4, #84]	; 0x54
   17328:	orr.w	r3, r3, #2048	; 0x800
   1732c:	str	r3, [r4, #84]	; 0x54
   1732e:	mov	r0, r4
   17330:	add	sp, #12
   17332:	pop	{r4, r5, pc}

00017334 <memmove_extent_buffer@@Base>:
   17334:	adds	r0, #96	; 0x60
   17336:	push	{r5}
   17338:	mov	r5, r1
   1733a:	mov	r1, r2
   1733c:	mov	r2, r3
   1733e:	add	r1, r0
   17340:	add	r0, r5
   17342:	ldr.w	r5, [sp], #4
   17346:	b.w	85c8 <memmove@plt>

0001734a <memset_extent_buffer@@Base>:
   1734a:	push	{r5}
   1734c:	adds	r0, #96	; 0x60
   1734e:	mov	r5, r2
   17350:	mov	r2, r3
   17352:	add	r0, r5
   17354:	ldr.w	r5, [sp], #4
   17358:	b.w	8974 <memset@plt>

0001735c <extent_buffer_test_bit@@Base>:
   1735c:	cmp	r2, #0
   1735e:	mov	r3, r2
   17360:	it	lt
   17362:	addlt	r3, r2, #7
   17364:	add	r1, r0
   17366:	and.w	r2, r2, #7
   1736a:	add.w	r0, r1, r3, asr #3
   1736e:	ldrb.w	r0, [r0, #96]	; 0x60
   17372:	asrs	r0, r2
   17374:	and.w	r0, r0, #1
   17378:	bx	lr
   1737a:	nop

0001737c <__crc32c_le@@Base>:
   1737c:	push	{r4, lr}
   1737e:	add	r2, r1
   17380:	ldr	r4, [pc, #24]	; (1739c <__crc32c_le@@Base+0x20>)
   17382:	add	r4, pc
   17384:	cmp	r1, r2
   17386:	bne.n	1738a <__crc32c_le@@Base+0xe>
   17388:	pop	{r4, pc}
   1738a:	ldrb.w	r3, [r1], #1
   1738e:	eors	r3, r0
   17390:	uxtb	r3, r3
   17392:	ldr.w	r3, [r4, r3, lsl #2]
   17396:	eor.w	r0, r3, r0, lsr #8
   1739a:	b.n	17384 <__crc32c_le@@Base+0x8>
   1739c:			; <UNDEFINED> instruction: 0x47ce
   1739e:	movs	r2, r0

000173a0 <crc32c_optimization_init@@Base>:
   173a0:	bx	lr

000173a2 <crc32c_le@@Base>:
   173a2:	b.w	1737c <__crc32c_le@@Base>
   173a6:	nop

000173a8 <__btrfs_warning@@Base>:
   173a8:	push	{r0, r1, r2, r3}
   173aa:	push	{r4, r5, lr}
   173ac:	sub	sp, #20
   173ae:	add	r4, sp, #32
   173b0:	ldr	r1, [pc, #88]	; (1740c <__btrfs_warning@@Base+0x64>)
   173b2:	ldr	r3, [pc, #92]	; (17410 <__btrfs_warning@@Base+0x68>)
   173b4:	ldr.w	r2, [r4], #4
   173b8:	add	r1, pc
   173ba:	add	r3, pc
   173bc:	ldr	r0, [pc, #84]	; (17414 <__btrfs_warning@@Base+0x6c>)
   173be:	str	r2, [sp, #4]
   173c0:	add	r0, pc
   173c2:	ldr	r2, [pc, #84]	; (17418 <__btrfs_warning@@Base+0x70>)
   173c4:	ldr	r2, [r1, r2]
   173c6:	ldr	r1, [pc, #84]	; (1741c <__btrfs_warning@@Base+0x74>)
   173c8:	ldr	r2, [r2, #0]
   173ca:	str	r2, [sp, #12]
   173cc:	mov.w	r2, #0
   173d0:	ldr	r5, [r3, r1]
   173d2:	ldr	r1, [r5, #0]
   173d4:	blx	8b1c <fputs@plt+0x4>
   173d8:	ldr	r2, [sp, #4]
   173da:	mov	r3, r4
   173dc:	movs	r1, #1
   173de:	ldr	r0, [r5, #0]
   173e0:	str	r4, [sp, #8]
   173e2:	blx	8860 <__vfprintf_chk@plt>
   173e6:	ldr	r1, [r5, #0]
   173e8:	movs	r0, #10
   173ea:	blx	8a84 <fputc@plt+0x4>
   173ee:	ldr	r2, [pc, #48]	; (17420 <__btrfs_warning@@Base+0x78>)
   173f0:	ldr	r3, [pc, #36]	; (17418 <__btrfs_warning@@Base+0x70>)
   173f2:	add	r2, pc
   173f4:	ldr	r3, [r2, r3]
   173f6:	ldr	r2, [r3, #0]
   173f8:	ldr	r3, [sp, #12]
   173fa:	eors	r2, r3
   173fc:	beq.n	17402 <__btrfs_warning@@Base+0x5a>
   173fe:	blx	86b8 <__stack_chk_fail@plt>
   17402:	add	sp, #20
   17404:	ldmia.w	sp!, {r4, r5, lr}
   17408:	add	sp, #16
   1740a:	bx	lr
   1740c:	bls.n	173b0 <__btrfs_warning@@Base+0x8>
   1740e:	movs	r4, r0
   17410:	bls.n	173b0 <__btrfs_warning@@Base+0x8>
   17412:	movs	r4, r0
   17414:	ldr	r3, [pc, #576]	; (17658 <btrfs_uuid_to_key@@Base+0xc0>)
   17416:	movs	r2, r0
   17418:	lsls	r4, r4, #8
   1741a:	movs	r0, r0
   1741c:	lsls	r4, r6, #8
   1741e:	movs	r0, r0
   17420:	bls.n	17350 <memset_extent_buffer@@Base+0x6>
   17422:	movs	r4, r0

00017424 <__btrfs_error@@Base>:
   17424:	push	{r0, r1, r2, r3}
   17426:	push	{r4, r5, lr}
   17428:	sub	sp, #20
   1742a:	add	r4, sp, #32
   1742c:	ldr	r1, [pc, #88]	; (17488 <__btrfs_error@@Base+0x64>)
   1742e:	ldr	r3, [pc, #92]	; (1748c <__btrfs_error@@Base+0x68>)
   17430:	ldr.w	r2, [r4], #4
   17434:	add	r1, pc
   17436:	add	r3, pc
   17438:	ldr	r0, [pc, #84]	; (17490 <__btrfs_error@@Base+0x6c>)
   1743a:	str	r2, [sp, #4]
   1743c:	add	r0, pc
   1743e:	ldr	r2, [pc, #84]	; (17494 <__btrfs_error@@Base+0x70>)
   17440:	ldr	r2, [r1, r2]
   17442:	ldr	r1, [pc, #84]	; (17498 <__btrfs_error@@Base+0x74>)
   17444:	ldr	r2, [r2, #0]
   17446:	str	r2, [sp, #12]
   17448:	mov.w	r2, #0
   1744c:	ldr	r5, [r3, r1]
   1744e:	ldr	r1, [r5, #0]
   17450:	blx	8b1c <fputs@plt+0x4>
   17454:	ldr	r2, [sp, #4]
   17456:	mov	r3, r4
   17458:	movs	r1, #1
   1745a:	ldr	r0, [r5, #0]
   1745c:	str	r4, [sp, #8]
   1745e:	blx	8860 <__vfprintf_chk@plt>
   17462:	ldr	r1, [r5, #0]
   17464:	movs	r0, #10
   17466:	blx	8a84 <fputc@plt+0x4>
   1746a:	ldr	r2, [pc, #48]	; (1749c <__btrfs_error@@Base+0x78>)
   1746c:	ldr	r3, [pc, #36]	; (17494 <__btrfs_error@@Base+0x70>)
   1746e:	add	r2, pc
   17470:	ldr	r3, [r2, r3]
   17472:	ldr	r2, [r3, #0]
   17474:	ldr	r3, [sp, #12]
   17476:	eors	r2, r3
   17478:	beq.n	1747e <__btrfs_error@@Base+0x5a>
   1747a:	blx	86b8 <__stack_chk_fail@plt>
   1747e:	add	sp, #20
   17480:	ldmia.w	sp!, {r4, r5, lr}
   17484:	add	sp, #16
   17486:	bx	lr
   17488:	bls.n	17534 <__btrfs_error_on@@Base+0x18>
   1748a:	movs	r4, r0
   1748c:	bls.n	17534 <__btrfs_error_on@@Base+0x18>
   1748e:	movs	r4, r0
   17490:	ldr	r3, [pc, #120]	; (1750c <__btrfs_warning_on@@Base+0x6c>)
   17492:	movs	r2, r0
   17494:	lsls	r4, r4, #8
   17496:	movs	r0, r0
   17498:	lsls	r4, r6, #8
   1749a:	movs	r0, r0
   1749c:	bls.n	174d4 <__btrfs_warning_on@@Base+0x34>
   1749e:	movs	r4, r0

000174a0 <__btrfs_warning_on@@Base>:
   174a0:	push	{r1, r2, r3}
   174a2:	push	{r4, lr}
   174a4:	sub	sp, #20
   174a6:	ldr	r1, [pc, #92]	; (17504 <__btrfs_warning_on@@Base+0x64>)
   174a8:	ldr	r2, [sp, #28]
   174aa:	add	r1, pc
   174ac:	ldr	r3, [pc, #88]	; (17508 <__btrfs_warning_on@@Base+0x68>)
   174ae:	str	r2, [sp, #4]
   174b0:	add	r3, pc
   174b2:	ldr	r2, [pc, #88]	; (1750c <__btrfs_warning_on@@Base+0x6c>)
   174b4:	ldr	r2, [r1, r2]
   174b6:	ldr	r2, [r2, #0]
   174b8:	str	r2, [sp, #12]
   174ba:	mov.w	r2, #0
   174be:	cbz	r0, 174e6 <__btrfs_warning_on@@Base+0x46>
   174c0:	ldr	r1, [pc, #76]	; (17510 <__btrfs_warning_on@@Base+0x70>)
   174c2:	ldr	r0, [pc, #80]	; (17514 <__btrfs_warning_on@@Base+0x74>)
   174c4:	ldr	r4, [r3, r1]
   174c6:	add	r0, pc
   174c8:	ldr	r1, [r4, #0]
   174ca:	blx	8b1c <fputs@plt+0x4>
   174ce:	add	r3, sp, #32
   174d0:	ldr	r2, [sp, #4]
   174d2:	movs	r1, #1
   174d4:	ldr	r0, [r4, #0]
   174d6:	str	r3, [sp, #8]
   174d8:	blx	8860 <__vfprintf_chk@plt>
   174dc:	ldr	r1, [r4, #0]
   174de:	movs	r0, #10
   174e0:	blx	8a84 <fputc@plt+0x4>
   174e4:	movs	r0, #1
   174e6:	ldr	r2, [pc, #48]	; (17518 <__btrfs_warning_on@@Base+0x78>)
   174e8:	ldr	r3, [pc, #32]	; (1750c <__btrfs_warning_on@@Base+0x6c>)
   174ea:	add	r2, pc
   174ec:	ldr	r3, [r2, r3]
   174ee:	ldr	r2, [r3, #0]
   174f0:	ldr	r3, [sp, #12]
   174f2:	eors	r2, r3
   174f4:	beq.n	174fa <__btrfs_warning_on@@Base+0x5a>
   174f6:	blx	86b8 <__stack_chk_fail@plt>
   174fa:	add	sp, #20
   174fc:	ldmia.w	sp!, {r4, lr}
   17500:	add	sp, #12
   17502:	bx	lr
   17504:	bhi.n	174c4 <__btrfs_warning_on@@Base+0x24>
   17506:	movs	r4, r0
   17508:	bhi.n	174bc <__btrfs_warning_on@@Base+0x1c>
   1750a:	movs	r4, r0
   1750c:	lsls	r4, r4, #8
   1750e:	movs	r0, r0
   17510:	lsls	r4, r6, #8
   17512:	movs	r0, r0
   17514:	ldr	r2, [pc, #552]	; (17740 <arg_strtou64@@Base+0x5c>)
   17516:	movs	r2, r0
   17518:	bhi.n	17458 <__btrfs_error@@Base+0x34>
   1751a:	movs	r4, r0

0001751c <__btrfs_error_on@@Base>:
   1751c:	push	{r1, r2, r3}
   1751e:	push	{r4, lr}
   17520:	sub	sp, #20
   17522:	ldr	r1, [pc, #92]	; (17580 <__btrfs_error_on@@Base+0x64>)
   17524:	ldr	r2, [sp, #28]
   17526:	add	r1, pc
   17528:	ldr	r3, [pc, #88]	; (17584 <__btrfs_error_on@@Base+0x68>)
   1752a:	str	r2, [sp, #4]
   1752c:	add	r3, pc
   1752e:	ldr	r2, [pc, #88]	; (17588 <__btrfs_error_on@@Base+0x6c>)
   17530:	ldr	r2, [r1, r2]
   17532:	ldr	r2, [r2, #0]
   17534:	str	r2, [sp, #12]
   17536:	mov.w	r2, #0
   1753a:	cbz	r0, 17562 <__btrfs_error_on@@Base+0x46>
   1753c:	ldr	r1, [pc, #76]	; (1758c <__btrfs_error_on@@Base+0x70>)
   1753e:	ldr	r0, [pc, #80]	; (17590 <__btrfs_error_on@@Base+0x74>)
   17540:	ldr	r4, [r3, r1]
   17542:	add	r0, pc
   17544:	ldr	r1, [r4, #0]
   17546:	blx	8b1c <fputs@plt+0x4>
   1754a:	add	r3, sp, #32
   1754c:	ldr	r2, [sp, #4]
   1754e:	movs	r1, #1
   17550:	ldr	r0, [r4, #0]
   17552:	str	r3, [sp, #8]
   17554:	blx	8860 <__vfprintf_chk@plt>
   17558:	ldr	r1, [r4, #0]
   1755a:	movs	r0, #10
   1755c:	blx	8a84 <fputc@plt+0x4>
   17560:	movs	r0, #1
   17562:	ldr	r2, [pc, #48]	; (17594 <__btrfs_error_on@@Base+0x78>)
   17564:	ldr	r3, [pc, #32]	; (17588 <__btrfs_error_on@@Base+0x6c>)
   17566:	add	r2, pc
   17568:	ldr	r3, [r2, r3]
   1756a:	ldr	r2, [r3, #0]
   1756c:	ldr	r3, [sp, #12]
   1756e:	eors	r2, r3
   17570:	beq.n	17576 <__btrfs_error_on@@Base+0x5a>
   17572:	blx	86b8 <__stack_chk_fail@plt>
   17576:	add	sp, #20
   17578:	ldmia.w	sp!, {r4, lr}
   1757c:	add	sp, #12
   1757e:	bx	lr
   17580:	bhi.n	17648 <btrfs_uuid_to_key@@Base+0xb0>
   17582:	movs	r4, r0
   17584:	bhi.n	17640 <btrfs_uuid_to_key@@Base+0xa8>
   17586:	movs	r4, r0
   17588:	lsls	r4, r4, #8
   1758a:	movs	r0, r0
   1758c:	lsls	r4, r6, #8
   1758e:	movs	r0, r0
   17590:	ldr	r2, [pc, #96]	; (175f4 <btrfs_uuid_to_key@@Base+0x5c>)
   17592:	movs	r2, r0
   17594:	bhi.n	175dc <btrfs_uuid_to_key@@Base+0x44>
   17596:	movs	r4, r0

00017598 <btrfs_uuid_to_key@@Base>:
   17598:	ldr	r2, [r0, #0]
   1759a:	ldr	r3, [r0, #4]
   1759c:	str	r2, [r1, #0]
   1759e:	str	r3, [r1, #4]
   175a0:	ldr	r2, [r0, #8]
   175a2:	ldr	r3, [r0, #12]
   175a4:	str.w	r2, [r1, #9]
   175a8:	str.w	r3, [r1, #13]
   175ac:	bx	lr
   175ae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   175b2:	mov	r9, r0
   175b4:	mov	r0, r1
   175b6:	ldr	r1, [pc, #260]	; (176bc <btrfs_uuid_to_key@@Base+0x124>)
   175b8:	mov	r7, r2
   175ba:	sub.w	sp, sp, #4128	; 0x1020
   175be:	ldr	r2, [pc, #256]	; (176c0 <btrfs_uuid_to_key@@Base+0x128>)
   175c0:	sub	sp, #24
   175c2:	add	r1, pc
   175c4:	add	r6, sp, #56	; 0x38
   175c6:	add	r5, sp, #28
   175c8:	sub.w	r4, r6, #8
   175cc:	ldr	r2, [r1, r2]
   175ce:	mov	r8, r3
   175d0:	add.w	r3, sp, #4128	; 0x1020
   175d4:	mov	r1, r5
   175d6:	ldr	r2, [r2, #0]
   175d8:	str	r2, [r3, #20]
   175da:	mov.w	r2, #0
   175de:	adds	r3, #20
   175e0:	strb.w	r7, [sp, #36]	; 0x24
   175e4:	bl	17598 <btrfs_uuid_to_key@@Base>
   175e8:	mov.w	r2, #4096	; 0x1000
   175ec:	movs	r1, #0
   175ee:	mov	r0, r4
   175f0:	ldr.w	sl, [pc, #208]	; 176c4 <btrfs_uuid_to_key@@Base+0x12c>
   175f4:	blx	8978 <memset@plt+0x4>
   175f8:	movs	r2, #9
   175fa:	movs	r3, #0
   175fc:	strd	r2, r3, [r6, #-8]
   17600:	ldrd	r2, r3, [r6, #-28]
   17604:	mov	r0, r9
   17606:	strd	r7, r7, [r4, #56]	; 0x38
   1760a:	movs	r7, #1
   1760c:	ldr	r1, [pc, #168]	; (176b8 <btrfs_uuid_to_key@@Base+0x120>)
   1760e:	add	sl, pc
   17610:	strd	r2, r3, [r4, #8]
   17614:	strd	r2, r3, [r4, #16]
   17618:	ldr.w	r2, [r6, #-19]
   1761c:	ldr.w	r3, [r6, #-15]
   17620:	str	r7, [r4, #64]	; 0x40
   17622:	strd	r2, r3, [r4, #24]
   17626:	strd	r2, r3, [r4, #32]
   1762a:	mov.w	r2, #4294967295	; 0xffffffff
   1762e:	mov.w	r3, #4294967295	; 0xffffffff
   17632:	strd	r2, r3, [r4, #48]	; 0x30
   17636:	mov	r2, r4
   17638:	blx	8764 <ioctl@plt>
   1763c:	cmp	r0, #0
   1763e:	bge.n	1766e <btrfs_uuid_to_key@@Base+0xd6>
   17640:	ldr	r3, [pc, #132]	; (176c8 <btrfs_uuid_to_key@@Base+0x130>)
   17642:	ldr.w	r3, [sl, r3]
   17646:	str	r0, [sp, #16]
   17648:	ldr.w	r1, [r6, #-19]
   1764c:	ldr.w	r2, [r6, #-15]
   17650:	strd	r1, r2, [sp, #8]
   17654:	ldrd	r1, r2, [r6, #-28]
   17658:	strd	r1, r2, [sp]
   1765c:	mov	r1, r7
   1765e:	ldr	r2, [pc, #108]	; (176cc <btrfs_uuid_to_key@@Base+0x134>)
   17660:	ldr	r0, [r3, #0]
   17662:	add	r2, pc
   17664:	blx	8a14 <__fprintf_chk@plt+0x4>
   17668:	mvn.w	r0, #1
   1766c:	b.n	17694 <btrfs_uuid_to_key@@Base+0xfc>
   1766e:	ldr	r3, [r4, #64]	; 0x40
   17670:	cmp	r3, #0
   17672:	beq.n	17668 <btrfs_uuid_to_key@@Base+0xd0>
   17674:	ldr.w	r2, [r4, #132]	; 0x84
   17678:	ands.w	r0, r2, #7
   1767c:	bne.n	17680 <btrfs_uuid_to_key@@Base+0xe8>
   1767e:	cbnz	r2, 1768c <btrfs_uuid_to_key@@Base+0xf4>
   17680:	ldr	r1, [pc, #76]	; (176d0 <btrfs_uuid_to_key@@Base+0x138>)
   17682:	movs	r0, #1
   17684:	add	r1, pc
   17686:	blx	89ec <__printf_chk@plt+0x4>
   1768a:	b.n	17668 <btrfs_uuid_to_key@@Base+0xd0>
   1768c:	ldrd	r2, r3, [r4, #136]	; 0x88
   17690:	strd	r2, r3, [r8]
   17694:	ldr	r1, [pc, #60]	; (176d4 <btrfs_uuid_to_key@@Base+0x13c>)
   17696:	add.w	r3, sp, #4128	; 0x1020
   1769a:	ldr	r2, [pc, #36]	; (176c0 <btrfs_uuid_to_key@@Base+0x128>)
   1769c:	adds	r3, #20
   1769e:	add	r1, pc
   176a0:	ldr	r2, [r1, r2]
   176a2:	ldr	r1, [r2, #0]
   176a4:	ldr	r2, [r3, #0]
   176a6:	eors	r1, r2
   176a8:	beq.n	176ae <btrfs_uuid_to_key@@Base+0x116>
   176aa:	blx	86b8 <__stack_chk_fail@plt>
   176ae:	add.w	sp, sp, #4128	; 0x1020
   176b2:	add	sp, #24
   176b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   176b8:	str	r4, [sp, #68]	; 0x44
   176ba:	beq.n	176be <btrfs_uuid_to_key@@Base+0x126>
   176bc:	bvc.n	1764c <btrfs_uuid_to_key@@Base+0xb4>
   176be:	movs	r4, r0
   176c0:	lsls	r4, r4, #8
   176c2:	movs	r0, r0
   176c4:	bvc.n	177bc <lookup_path_rootid@@Base+0x30>
   176c6:	movs	r4, r0
   176c8:	lsls	r4, r6, #8
   176ca:	movs	r0, r0
   176cc:	ldr	r1, [pc, #0]	; (176d0 <btrfs_uuid_to_key@@Base+0x138>)
   176ce:	movs	r2, r0
   176d0:	ldr	r1, [pc, #208]	; (177a4 <lookup_path_rootid@@Base+0x18>)
   176d2:	movs	r2, r0
   176d4:	bvs.n	176ac <btrfs_uuid_to_key@@Base+0x114>
   176d6:	movs	r4, r0

000176d8 <btrfs_lookup_uuid_subvol_item@@Base>:
   176d8:	mov	r3, r2
   176da:	movs	r2, #251	; 0xfb
   176dc:	b.n	175ae <btrfs_uuid_to_key@@Base+0x16>

000176de <btrfs_lookup_uuid_received_subvol_item@@Base>:
   176de:	mov	r3, r2
   176e0:	movs	r2, #252	; 0xfc
   176e2:	b.n	175ae <btrfs_uuid_to_key@@Base+0x16>

000176e4 <arg_strtou64@@Base>:
   176e4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   176e6:	add	r1, sp, #8
   176e8:	ldr	r2, [pc, #128]	; (1776c <arg_strtou64@@Base+0x88>)
   176ea:	ldr	r3, [pc, #132]	; (17770 <arg_strtou64@@Base+0x8c>)
   176ec:	add	r2, pc
   176ee:	str	r0, [sp, #4]
   176f0:	ldr	r6, [pc, #128]	; (17774 <arg_strtou64@@Base+0x90>)
   176f2:	ldr	r3, [r2, r3]
   176f4:	movs	r2, #0
   176f6:	add	r6, pc
   176f8:	ldr	r3, [r3, #0]
   176fa:	str	r3, [sp, #12]
   176fc:	mov.w	r3, #0
   17700:	str	r2, [sp, #8]
   17702:	blx	89b8 <strtoull@plt>
   17706:	ldrd	r3, r2, [sp, #4]
   1770a:	mov	r4, r0
   1770c:	mov	r5, r1
   1770e:	cbz	r2, 1772a <arg_strtou64@@Base+0x46>
   17710:	ldrb	r2, [r2, #0]
   17712:	cbz	r2, 1772a <arg_strtou64@@Base+0x46>
   17714:	ldr	r2, [pc, #96]	; (17778 <arg_strtou64@@Base+0x94>)
   17716:	ldr	r0, [r6, r2]
   17718:	ldr	r2, [pc, #96]	; (1777c <arg_strtou64@@Base+0x98>)
   1771a:	add	r2, pc
   1771c:	ldr	r0, [r0, #0]
   1771e:	movs	r1, #1
   17720:	blx	8a14 <__fprintf_chk@plt+0x4>
   17724:	movs	r0, #1
   17726:	blx	88e4 <exit@plt>
   1772a:	ldrb	r2, [r3, #0]
   1772c:	cmp	r2, #45	; 0x2d
   1772e:	bne.n	1773a <arg_strtou64@@Base+0x56>
   17730:	ldr	r2, [pc, #68]	; (17778 <arg_strtou64@@Base+0x94>)
   17732:	ldr	r0, [r6, r2]
   17734:	ldr	r2, [pc, #72]	; (17780 <arg_strtou64@@Base+0x9c>)
   17736:	add	r2, pc
   17738:	b.n	1771c <arg_strtou64@@Base+0x38>
   1773a:	adds	r2, r5, #1
   1773c:	it	eq
   1773e:	cmpeq.w	r4, #4294967295	; 0xffffffff
   17742:	bne.n	1774e <arg_strtou64@@Base+0x6a>
   17744:	ldr	r2, [pc, #48]	; (17778 <arg_strtou64@@Base+0x94>)
   17746:	ldr	r0, [r6, r2]
   17748:	ldr	r2, [pc, #56]	; (17784 <arg_strtou64@@Base+0xa0>)
   1774a:	add	r2, pc
   1774c:	b.n	1771c <arg_strtou64@@Base+0x38>
   1774e:	ldr	r2, [pc, #56]	; (17788 <arg_strtou64@@Base+0xa4>)
   17750:	ldr	r3, [pc, #28]	; (17770 <arg_strtou64@@Base+0x8c>)
   17752:	add	r2, pc
   17754:	ldr	r3, [r2, r3]
   17756:	ldr	r2, [r3, #0]
   17758:	ldr	r3, [sp, #12]
   1775a:	eors	r2, r3
   1775c:	beq.n	17762 <arg_strtou64@@Base+0x7e>
   1775e:	blx	86b8 <__stack_chk_fail@plt>
   17762:	mov	r0, r4
   17764:	mov	r1, r5
   17766:	add	sp, #16
   17768:	pop	{r4, r5, r6, pc}
   1776a:	nop
   1776c:	bvs.n	176a8 <btrfs_uuid_to_key@@Base+0x110>
   1776e:	movs	r4, r0
   17770:	lsls	r4, r4, #8
   17772:	movs	r0, r0
   17774:	bvs.n	1769c <btrfs_uuid_to_key@@Base+0x104>
   17776:	movs	r4, r0
   17778:	lsls	r4, r6, #8
   1777a:	movs	r0, r0
   1777c:	ldr	r0, [pc, #796]	; (17a9c <rb_free_nodes@@Base+0x1f6>)
   1777e:	movs	r2, r0
   17780:	ldr	r0, [pc, #848]	; (17ad4 <rb_free_nodes@@Base+0x22e>)
   17782:	movs	r2, r0
   17784:	ldr	r0, [pc, #924]	; (17b24 <rb_free_nodes@@Base+0x27e>)
   17786:	movs	r2, r0
   17788:	bvs.n	177f8 <lookup_path_rootid@@Base+0x6c>
   1778a:	movs	r4, r0

0001778c <lookup_path_rootid@@Base>:
   1778c:	push	{r4, r5, r6, lr}
   1778e:	mov	r4, r1
   17790:	ldr	r1, [pc, #128]	; (17814 <lookup_path_rootid@@Base+0x88>)
   17792:	sub.w	sp, sp, #4096	; 0x1000
   17796:	ldr	r2, [pc, #128]	; (17818 <lookup_path_rootid@@Base+0x8c>)
   17798:	sub	sp, #8
   1779a:	add	r1, pc
   1779c:	add.w	r3, sp, #4096	; 0x1000
   177a0:	adds	r3, #4
   177a2:	add	r6, sp, #8
   177a4:	ldr	r2, [r1, r2]
   177a6:	mov	r5, r0
   177a8:	movs	r1, #0
   177aa:	ldr	r2, [r2, #0]
   177ac:	str	r2, [r3, #0]
   177ae:	mov.w	r2, #0
   177b2:	sub.w	r3, r6, #8
   177b6:	mov.w	r2, #4096	; 0x1000
   177ba:	mov	r0, r3
   177bc:	blx	8978 <memset@plt+0x4>
   177c0:	movs	r1, #0
   177c2:	mov	r3, r0
   177c4:	mov.w	r0, #256	; 0x100
   177c8:	mov	r2, r3
   177ca:	strd	r0, r1, [r3, #8]
   177ce:	ldr	r1, [pc, #64]	; (17810 <lookup_path_rootid@@Base+0x84>)
   177d0:	mov	r0, r5
   177d2:	blx	8764 <ioctl@plt>
   177d6:	cmp	r0, #0
   177d8:	bge.n	177fc <lookup_path_rootid@@Base+0x70>
   177da:	blx	8938 <__errno_location@plt>
   177de:	ldr	r0, [r0, #0]
   177e0:	negs	r0, r0
   177e2:	ldr	r1, [pc, #56]	; (1781c <lookup_path_rootid@@Base+0x90>)
   177e4:	add.w	r3, sp, #4096	; 0x1000
   177e8:	ldr	r2, [pc, #44]	; (17818 <lookup_path_rootid@@Base+0x8c>)
   177ea:	adds	r3, #4
   177ec:	add	r1, pc
   177ee:	ldr	r2, [r1, r2]
   177f0:	ldr	r1, [r2, #0]
   177f2:	ldr	r2, [r3, #0]
   177f4:	eors	r1, r2
   177f6:	beq.n	17808 <lookup_path_rootid@@Base+0x7c>
   177f8:	blx	86b8 <__stack_chk_fail@plt>
   177fc:	ldrd	r2, r3, [r6, #-8]
   17800:	movs	r0, #0
   17802:	strd	r2, r3, [r4]
   17806:	b.n	177e2 <lookup_path_rootid@@Base+0x56>
   17808:	add.w	sp, sp, #4096	; 0x1000
   1780c:	add	sp, #8
   1780e:	pop	{r4, r5, r6, pc}
   17810:	str	r4, [sp, #72]	; 0x48
   17812:	beq.n	17816 <lookup_path_rootid@@Base+0x8a>
   17814:	bpl.n	177f4 <lookup_path_rootid@@Base+0x68>
   17816:	movs	r4, r0
   17818:	lsls	r4, r4, #8
   1781a:	movs	r0, r0
   1781c:	bpl.n	17758 <arg_strtou64@@Base+0x74>
   1781e:	movs	r4, r0

00017820 <rb_insert@@Base>:
   17820:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17824:	movs	r3, #0
   17826:	mov	r7, r0
   17828:	mov	r6, r1
   1782a:	mov	r8, r2
   1782c:	mov	r4, r0
   1782e:	ldr	r5, [r4, #0]
   17830:	cbnz	r5, 17848 <rb_insert@@Base+0x28>
   17832:	mov	r0, r6
   17834:	strd	r3, r5, [r6]
   17838:	str	r5, [r6, #8]
   1783a:	mov	r1, r7
   1783c:	str	r6, [r4, #0]
   1783e:	bl	131d2 <rb_insert_color@@Base>
   17842:	mov	r0, r5
   17844:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17848:	mov	r1, r6
   1784a:	mov	r0, r5
   1784c:	blx	r8
   1784e:	cmp	r0, #0
   17850:	bge.n	1785a <rb_insert@@Base+0x3a>
   17852:	ldr	r4, [r4, #0]
   17854:	adds	r4, #8
   17856:	mov	r3, r5
   17858:	b.n	1782e <rb_insert@@Base+0xe>
   1785a:	beq.n	17862 <rb_insert@@Base+0x42>
   1785c:	ldr	r4, [r4, #0]
   1785e:	adds	r4, #4
   17860:	b.n	17856 <rb_insert@@Base+0x36>
   17862:	mvn.w	r0, #16
   17866:	b.n	17844 <rb_insert@@Base+0x24>

00017868 <rb_search@@Base>:
   17868:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1786c:	movs	r5, #0
   1786e:	ldr	r4, [r0, #0]
   17870:	mov	r8, r1
   17872:	mov	r7, r2
   17874:	mov	r6, r3
   17876:	mov	r0, r5
   17878:	cbnz	r4, 1788e <rb_search@@Base+0x26>
   1787a:	cbz	r6, 17888 <rb_search@@Base+0x20>
   1787c:	cbz	r0, 17886 <rb_search@@Base+0x1e>
   1787e:	cmp	r5, #0
   17880:	ble.n	17886 <rb_search@@Base+0x1e>
   17882:	bl	1350e <rb_next@@Base>
   17886:	str	r0, [r6, #0]
   17888:	mov	r0, r4
   1788a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1788e:	mov	r1, r8
   17890:	mov	r0, r4
   17892:	blx	r7
   17894:	subs	r5, r0, #0
   17896:	bge.n	178a0 <rb_search@@Base+0x38>
   17898:	ldr	r3, [r4, #8]
   1789a:	mov	r0, r4
   1789c:	mov	r4, r3
   1789e:	b.n	17878 <rb_search@@Base+0x10>
   178a0:	beq.n	17888 <rb_search@@Base+0x20>
   178a2:	ldr	r3, [r4, #4]
   178a4:	b.n	1789a <rb_search@@Base+0x32>

000178a6 <rb_free_nodes@@Base>:
   178a6:	push	{r4, r5, r6, lr}
   178a8:	mov	r5, r0
   178aa:	mov	r6, r1
   178ac:	mov	r0, r5
   178ae:	bl	134ee <rb_first@@Base>
   178b2:	mov	r4, r0
   178b4:	cbnz	r0, 178b8 <rb_free_nodes@@Base+0x12>
   178b6:	pop	{r4, r5, r6, pc}
   178b8:	mov	r1, r5
   178ba:	bl	13278 <rb_erase@@Base>
   178be:	mov	r0, r4
   178c0:	blx	r6
   178c2:	b.n	178ac <rb_free_nodes@@Base+0x6>
   178c4:	movs	r3, #25
   178c6:	mla	r1, r3, r1, r0
   178ca:	ldr.w	r0, [r1, #214]	; 0xd6
   178ce:	ldr.w	r3, [r1, #218]	; 0xda
   178d2:	add	r0, r3
   178d4:	bx	lr
   178d6:	add.w	r2, r2, r2, lsl #5
   178da:	movs	r3, #17
   178dc:	adds	r2, #101	; 0x65
   178de:	b.w	172d8 <write_extent_buffer@@Base>
   178e2:	movs	r3, #25
   178e4:	muls	r2, r3
   178e6:	movs	r3, #17
   178e8:	adds	r2, #101	; 0x65
   178ea:	b.w	172d8 <write_extent_buffer@@Base>
   178ee:	movs	r3, #25
   178f0:	muls	r2, r3
   178f2:	movs	r3, #17
   178f4:	adds	r2, #101	; 0x65
   178f6:	b.w	172c2 <read_extent_buffer@@Base>
   178fa:	add.w	r2, r2, r2, lsl #5
   178fe:	movs	r3, #17
   17900:	adds	r2, #101	; 0x65
   17902:	b.w	172c2 <read_extent_buffer@@Base>
   17906:	ldr	r2, [pc, #64]	; (17948 <rb_free_nodes@@Base+0xa2>)
   17908:	movs	r1, #16
   1790a:	ldr	r3, [pc, #64]	; (1794c <rb_free_nodes@@Base+0xa6>)
   1790c:	push	{r4, lr}
   1790e:	add	r2, pc
   17910:	sub	sp, #72	; 0x48
   17912:	add	r4, sp, #4
   17914:	ldr	r3, [r2, r3]
   17916:	mov	r0, r4
   17918:	ldr	r3, [r3, #0]
   1791a:	str	r3, [sp, #68]	; 0x44
   1791c:	mov.w	r3, #0
   17920:	blx	886c <backtrace@plt>
   17924:	movs	r2, #2
   17926:	mov	r1, r0
   17928:	mov	r0, r4
   1792a:	blx	8b7c <backtrace_symbols_fd@plt>
   1792e:	ldr	r2, [pc, #32]	; (17950 <rb_free_nodes@@Base+0xaa>)
   17930:	ldr	r3, [pc, #24]	; (1794c <rb_free_nodes@@Base+0xa6>)
   17932:	add	r2, pc
   17934:	ldr	r3, [r2, r3]
   17936:	ldr	r2, [r3, #0]
   17938:	ldr	r3, [sp, #68]	; 0x44
   1793a:	eors	r2, r3
   1793c:	beq.n	17942 <rb_free_nodes@@Base+0x9c>
   1793e:	blx	86b8 <__stack_chk_fail@plt>
   17942:	add	sp, #72	; 0x48
   17944:	pop	{r4, pc}
   17946:	nop
   17948:	bmi.n	17a40 <rb_free_nodes@@Base+0x19a>
   1794a:	movs	r4, r0
   1794c:	lsls	r4, r4, #8
   1794e:	movs	r0, r0
   17950:	bmi.n	17a00 <rb_free_nodes@@Base+0x15a>
   17952:	movs	r4, r0
   17954:	cbz	r0, 17966 <rb_free_nodes@@Base+0xc0>
   17956:	cmn.w	r0, #4096	; 0x1000
   1795a:	bhi.n	17964 <rb_free_nodes@@Base+0xbe>
   1795c:	ldr	r0, [r0, #84]	; 0x54
   1795e:	ubfx	r0, r0, #2, #1
   17962:	bx	lr
   17964:	movs	r0, #0
   17966:	bx	lr
   17968:	ldr.w	r3, [r1, #192]	; 0xc0
   1796c:	cbnz	r3, 17974 <rb_free_nodes@@Base+0xce>
   1796e:	ldr	r0, [r0, #0]
   17970:	subs	r0, #101	; 0x65
   17972:	bx	lr
   17974:	subs	r3, #1
   17976:	movs	r2, #25
   17978:	mla	r1, r2, r3, r1
   1797c:	ldr.w	r0, [r1, #214]	; 0xd6
   17980:	bx	lr
   17982:	push	{r0, r1, r2, r3, r4, lr}
   17984:	ldr	r4, [pc, #36]	; (179ac <rb_free_nodes@@Base+0x106>)
   17986:	ldr	r5, [pc, #40]	; (179b0 <rb_free_nodes@@Base+0x10a>)
   17988:	add	r4, pc
   1798a:	ldr	r4, [r4, r5]
   1798c:	strd	r2, r1, [sp]
   17990:	movs	r1, #1
   17992:	strd	r0, r3, [sp, #8]
   17996:	ldr	r2, [pc, #28]	; (179b4 <rb_free_nodes@@Base+0x10e>)
   17998:	ldr	r3, [pc, #28]	; (179b8 <rb_free_nodes@@Base+0x112>)
   1799a:	add	r2, pc
   1799c:	ldr	r0, [r4, #0]
   1799e:	add	r3, pc
   179a0:	blx	8a14 <__fprintf_chk@plt+0x4>
   179a4:	bl	17906 <rb_free_nodes@@Base+0x60>
   179a8:	blx	8b34 <abort@plt>
   179ac:	bmi.n	179b0 <rb_free_nodes@@Base+0x10a>
   179ae:	movs	r4, r0
   179b0:	lsls	r4, r6, #8
   179b2:	movs	r0, r0
   179b4:	subs	r0, r1, #0
   179b6:	movs	r2, r0
   179b8:	mov	ip, r5
   179ba:	movs	r2, r0
   179bc:	push	{r3, lr}
   179be:	cbz	r3, 179c4 <rb_free_nodes@@Base+0x11e>
   179c0:	bl	17982 <rb_free_nodes@@Base+0xdc>
   179c4:	pop	{r3, pc}
   179c6:	push	{r4, r5, lr}
   179c8:	sub	sp, #20
   179ca:	ldr	r4, [pc, #40]	; (179f4 <rb_free_nodes@@Base+0x14e>)
   179cc:	ldr	r5, [pc, #40]	; (179f8 <rb_free_nodes@@Base+0x152>)
   179ce:	add	r4, pc
   179d0:	ldr	r4, [r4, r5]
   179d2:	strd	r2, r1, [sp]
   179d6:	movs	r1, #1
   179d8:	strd	r0, r3, [sp, #8]
   179dc:	ldr	r2, [pc, #28]	; (179fc <rb_free_nodes@@Base+0x156>)
   179de:	ldr	r3, [pc, #32]	; (17a00 <rb_free_nodes@@Base+0x15a>)
   179e0:	ldr	r0, [r4, #0]
   179e2:	add	r2, pc
   179e4:	add	r3, pc
   179e6:	blx	8a14 <__fprintf_chk@plt+0x4>
   179ea:	add	sp, #20
   179ec:	ldmia.w	sp!, {r4, r5, lr}
   179f0:	b.n	17906 <rb_free_nodes@@Base+0x60>
   179f2:	nop
   179f4:	bcc.n	1796c <rb_free_nodes@@Base+0xc6>
   179f6:	movs	r4, r0
   179f8:	lsls	r4, r6, #8
   179fa:	movs	r0, r0
   179fc:	adds	r2, r1, #6
   179fe:	movs	r2, r0
   17a00:	mov	r6, ip
   17a02:	movs	r2, r0
   17a04:	cbz	r3, 17a0a <rb_free_nodes@@Base+0x164>
   17a06:	movs	r3, #1
   17a08:	b.n	179c6 <rb_free_nodes@@Base+0x120>
   17a0a:	bx	lr
   17a0c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a10:	mov	r8, r3
   17a12:	ldrd	r6, r3, [sp, #56]	; 0x38
   17a16:	mov	r7, r0
   17a18:	mov	fp, r1
   17a1a:	ldr	r0, [pc, #204]	; (17ae8 <rb_free_nodes@@Base+0x242>)
   17a1c:	ldr	r1, [pc, #204]	; (17aec <rb_free_nodes@@Base+0x246>)
   17a1e:	ldr.w	r4, [r2, r3, lsl #2]
   17a22:	add	r0, pc
   17a24:	add	r1, pc
   17a26:	mov.w	r2, #1624	; 0x658
   17a2a:	clz	r3, r4
   17a2e:	str	r1, [sp, #4]
   17a30:	ldrd	sl, r9, [sp, #48]	; 0x30
   17a34:	lsrs	r3, r3, #5
   17a36:	bl	179bc <rb_free_nodes@@Base+0x116>
   17a3a:	ldr.w	r5, [r4, #192]	; 0xc0
   17a3e:	ldr	r1, [sp, #4]
   17a40:	cmp	r5, r6
   17a42:	bge.n	17a52 <rb_free_nodes@@Base+0x1ac>
   17a44:	ldr	r0, [pc, #168]	; (17af0 <rb_free_nodes@@Base+0x24a>)
   17a46:	movs	r3, #1
   17a48:	movw	r2, #1628	; 0x65c
   17a4c:	add	r0, pc
   17a4e:	bl	17982 <rb_free_nodes@@Base+0xdc>
   17a52:	ldr.w	r3, [fp]
   17a56:	ldr.w	r2, [r3, #384]	; 0x180
   17a5a:	ldr	r3, [pc, #136]	; (17ae4 <rb_free_nodes@@Base+0x23e>)
   17a5c:	subs	r2, #101	; 0x65
   17a5e:	umull	r2, r3, r2, r3
   17a62:	cmp.w	r5, r3, lsr #3
   17a66:	bne.n	17a74 <rb_free_nodes@@Base+0x1ce>
   17a68:	ldr	r0, [pc, #136]	; (17af4 <rb_free_nodes@@Base+0x24e>)
   17a6a:	movs	r3, #1
   17a6c:	movw	r2, #1630	; 0x65e
   17a70:	add	r0, pc
   17a72:	b.n	17a4e <rb_free_nodes@@Base+0x1a8>
   17a74:	cmp	r5, r6
   17a76:	add.w	r1, r6, r6, lsl #5
   17a7a:	add.w	fp, r1, #101	; 0x65
   17a7e:	ble.n	17a90 <rb_free_nodes@@Base+0x1ea>
   17a80:	subs	r3, r5, r6
   17a82:	adds	r1, #134	; 0x86
   17a84:	mov	r2, fp
   17a86:	mov	r0, r4
   17a88:	add.w	r3, r3, r3, lsl #5
   17a8c:	bl	17334 <memmove_extent_buffer@@Base>
   17a90:	mov	r2, r6
   17a92:	add.w	r6, r4, #96	; 0x60
   17a96:	add	r6, fp
   17a98:	mov	r1, r8
   17a9a:	mov	r0, r4
   17a9c:	adds	r5, #1
   17a9e:	bl	178d6 <rb_free_nodes@@Base+0x30>
   17aa2:	str.w	sl, [r6, #17]
   17aa6:	str.w	r9, [r6, #21]
   17aaa:	ldrd	r2, r3, [r7]
   17aae:	ldr	r1, [pc, #72]	; (17af8 <rb_free_nodes@@Base+0x252>)
   17ab0:	orrs	r3, r2
   17ab2:	ldr	r0, [pc, #72]	; (17afc <rb_free_nodes@@Base+0x256>)
   17ab4:	add	r1, pc
   17ab6:	mov.w	r2, #1640	; 0x668
   17aba:	ite	eq
   17abc:	moveq	r3, #1
   17abe:	movne	r3, #0
   17ac0:	add	r0, pc
   17ac2:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17ac6:	ldrd	r2, r3, [r7]
   17aca:	mov	r0, r4
   17acc:	str.w	r2, [r6, #25]
   17ad0:	str.w	r3, [r6, #29]
   17ad4:	str.w	r5, [r4, #192]	; 0xc0
   17ad8:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   17adc:	movs	r0, #0
   17ade:	add	sp, #12
   17ae0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ae4:	strh	r1, [r4, #30]
   17ae6:	subs	r6, #15
   17ae8:	mov	r0, r6
   17aea:	movs	r2, r0
   17aec:	ldr	r5, [pc, #208]	; (17bc0 <rb_free_nodes@@Base+0x31a>)
   17aee:	movs	r2, r0
   17af0:	ldrb	r5, [r0, r3]
   17af2:	movs	r2, r0
   17af4:	ldrb	r1, [r4, r2]
   17af6:	movs	r2, r0
   17af8:	ldr	r4, [pc, #656]	; (17d8c <rb_free_nodes@@Base+0x4e6>)
   17afa:	movs	r2, r0
   17afc:	cmp	lr, r4
   17afe:	movs	r2, r0
   17b00:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17b04:	mov	r6, r0
   17b06:	mov	r4, r2
   17b08:	ldr.w	r0, [r3, #176]	; 0xb0
   17b0c:	mov	r7, r1
   17b0e:	mov	r5, r3
   17b10:	ldr.w	r1, [r3, #180]	; 0xb4
   17b14:	sub	sp, #20
   17b16:	ldrd	r2, r3, [r6]
   17b1a:	cmp	r1, r3
   17b1c:	ldr	r3, [pc, #196]	; (17be4 <rb_free_nodes@@Base+0x33e>)
   17b1e:	it	eq
   17b20:	cmpeq	r0, r2
   17b22:	ldr	r0, [pc, #196]	; (17be8 <rb_free_nodes@@Base+0x342>)
   17b24:	add	r3, pc
   17b26:	movw	r2, #1494	; 0x5d6
   17b2a:	add.w	r1, r3, #11
   17b2e:	add	r0, pc
   17b30:	ite	ne
   17b32:	movne	r3, #1
   17b34:	moveq	r3, #0
   17b36:	str	r1, [sp, #12]
   17b38:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17b3c:	ldr.w	r3, [r4, #180]	; 0xb4
   17b40:	ldrd	r8, r9, [r6]
   17b44:	ldr.w	r2, [r4, #176]	; 0xb0
   17b48:	cmp	r3, r9
   17b4a:	ldr	r0, [pc, #160]	; (17bec <rb_free_nodes@@Base+0x346>)
   17b4c:	it	eq
   17b4e:	cmpeq	r2, r8
   17b50:	ldr	r1, [sp, #12]
   17b52:	movw	r2, #1495	; 0x5d7
   17b56:	add	r0, pc
   17b58:	ite	ne
   17b5a:	movne	r3, #1
   17b5c:	moveq	r3, #0
   17b5e:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17b62:	ldr	r3, [r7, #0]
   17b64:	ldr.w	r8, [r4, #192]	; 0xc0
   17b68:	ldr.w	r2, [r3, #384]	; 0x180
   17b6c:	ldr	r3, [pc, #112]	; (17be0 <rb_free_nodes@@Base+0x33a>)
   17b6e:	subs	r2, #101	; 0x65
   17b70:	umull	r2, r3, r2, r3
   17b74:	rsb	r7, r8, r3, lsr #3
   17b78:	cmp	r7, #0
   17b7a:	ble.n	17bdc <rb_free_nodes@@Base+0x336>
   17b7c:	ldr.w	r6, [r5, #192]	; 0xc0
   17b80:	cmp	r6, #3
   17b82:	ble.n	17bdc <rb_free_nodes@@Base+0x336>
   17b84:	asrs	r3, r6, #1
   17b86:	adds	r3, #1
   17b88:	cmp	r6, r3
   17b8a:	ble.n	17bdc <rb_free_nodes@@Base+0x336>
   17b8c:	cmp	r7, r3
   17b8e:	mov.w	r2, #101	; 0x65
   17b92:	mov	r0, r4
   17b94:	it	ge
   17b96:	movge	r7, r3
   17b98:	subs	r6, r6, r7
   17b9a:	add.w	r9, r7, r7, lsl #5
   17b9e:	add.w	r3, r8, r8, lsl #5
   17ba2:	add.w	r1, r9, r2
   17ba6:	add	r7, r8
   17ba8:	bl	17334 <memmove_extent_buffer@@Base>
   17bac:	add.w	r3, r6, r6, lsl #5
   17bb0:	adds	r3, #101	; 0x65
   17bb2:	movs	r2, #101	; 0x65
   17bb4:	mov	r1, r5
   17bb6:	mov	r0, r4
   17bb8:	str.w	r9, [sp]
   17bbc:	bl	172ea <copy_extent_buffer@@Base>
   17bc0:	mov	r0, r5
   17bc2:	str.w	r6, [r5, #192]	; 0xc0
   17bc6:	str.w	r7, [r4, #192]	; 0xc0
   17bca:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   17bce:	mov	r0, r4
   17bd0:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   17bd4:	movs	r0, #0
   17bd6:	add	sp, #20
   17bd8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   17bdc:	movs	r0, #1
   17bde:	b.n	17bd6 <rb_free_nodes@@Base+0x330>
   17be0:	strh	r1, [r4, #30]
   17be2:	subs	r6, #15
   17be4:	ldr	r4, [pc, #208]	; (17cb8 <rb_free_nodes@@Base+0x412>)
   17be6:	movs	r2, r0
   17be8:	cmp	r4, r9
   17bea:	movs	r2, r0
   17bec:	cmp	r3, sl
   17bee:	movs	r2, r0
   17bf0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bf4:	mov	r5, r2
   17bf6:	ldr.w	r9, [r2, #192]	; 0xc0
   17bfa:	mov	r4, r3
   17bfc:	ldr.w	r2, [r1, #384]	; 0x180
   17c00:	mov	sl, r0
   17c02:	ldr.w	r6, [r3, #192]	; 0xc0
   17c06:	sub	sp, #20
   17c08:	ldr	r3, [pc, #236]	; (17cf8 <rb_free_nodes@@Base+0x452>)
   17c0a:	subs	r2, #101	; 0x65
   17c0c:	ldr.w	r1, [r4, #180]	; 0xb4
   17c10:	ldr.w	r0, [r4, #176]	; 0xb0
   17c14:	umull	r2, r3, r2, r3
   17c18:	ldr	r7, [sp, #56]	; 0x38
   17c1a:	rsb	r8, r9, r3, lsr #3
   17c1e:	ldrd	r2, r3, [sl]
   17c22:	cmp	r1, r3
   17c24:	ldr	r1, [pc, #212]	; (17cfc <rb_free_nodes@@Base+0x456>)
   17c26:	it	eq
   17c28:	cmpeq	r0, r2
   17c2a:	ldr	r0, [pc, #212]	; (17d00 <rb_free_nodes@@Base+0x45a>)
   17c2c:	add	r1, pc
   17c2e:	movw	r2, #1430	; 0x596
   17c32:	ite	ne
   17c34:	movne	r3, #1
   17c36:	moveq	r3, #0
   17c38:	adds	r1, #30
   17c3a:	add	r0, pc
   17c3c:	str	r1, [sp, #12]
   17c3e:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17c42:	ldrd	r2, r3, [sl]
   17c46:	ldr.w	ip, [r5, #180]	; 0xb4
   17c4a:	ldr.w	fp, [r5, #176]	; 0xb0
   17c4e:	cmp	ip, r3
   17c50:	ldr	r0, [pc, #176]	; (17d04 <rb_free_nodes@@Base+0x45e>)
   17c52:	it	eq
   17c54:	cmpeq	fp, r2
   17c56:	ldr	r1, [sp, #12]
   17c58:	add	r0, pc
   17c5a:	movw	r2, #1431	; 0x597
   17c5e:	ite	ne
   17c60:	movne	r3, #1
   17c62:	moveq	r3, #0
   17c64:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17c68:	cbnz	r7, 17c84 <rb_free_nodes@@Base+0x3de>
   17c6a:	cmp	r6, #8
   17c6c:	bgt.n	17c72 <rb_free_nodes@@Base+0x3cc>
   17c6e:	movs	r7, #1
   17c70:	b.n	17cee <rb_free_nodes@@Base+0x448>
   17c72:	cmp.w	r8, #0
   17c76:	ble.n	17c6e <rb_free_nodes@@Base+0x3c8>
   17c78:	sub.w	r3, r6, #8
   17c7c:	cmp	r8, r3
   17c7e:	it	ge
   17c80:	movge	r8, r3
   17c82:	b.n	17ca6 <rb_free_nodes@@Base+0x400>
   17c84:	cmp.w	r8, #0
   17c88:	ble.n	17cee <rb_free_nodes@@Base+0x448>
   17c8a:	cmp	r8, r6
   17c8c:	it	ge
   17c8e:	movge	r8, r6
   17c90:	cmp	r6, r8
   17c92:	ble.n	17ca6 <rb_free_nodes@@Base+0x400>
   17c94:	sub.w	r3, r6, r8
   17c98:	cmp	r3, #7
   17c9a:	bgt.n	17ca6 <rb_free_nodes@@Base+0x400>
   17c9c:	cmp.w	r8, #8
   17ca0:	ble.n	17cee <rb_free_nodes@@Base+0x448>
   17ca2:	sub.w	r8, r8, #8
   17ca6:	add.w	r2, r9, r9, lsl #5
   17caa:	movs	r3, #101	; 0x65
   17cac:	add.w	sl, r8, r8, lsl #5
   17cb0:	add	r2, r3
   17cb2:	mov	r1, r4
   17cb4:	mov	r0, r5
   17cb6:	str.w	sl, [sp]
   17cba:	sub.w	r7, r6, r8
   17cbe:	bl	172ea <copy_extent_buffer@@Base>
   17cc2:	cmp	r6, r8
   17cc4:	ble.n	17cd6 <rb_free_nodes@@Base+0x430>
   17cc6:	add.w	r3, r7, r7, lsl #5
   17cca:	add.w	r2, sl, #101	; 0x65
   17cce:	movs	r1, #101	; 0x65
   17cd0:	mov	r0, r4
   17cd2:	bl	17334 <memmove_extent_buffer@@Base>
   17cd6:	str.w	r7, [r4, #192]	; 0xc0
   17cda:	mov	r0, r4
   17cdc:	add	r8, r9
   17cde:	str.w	r8, [r5, #192]	; 0xc0
   17ce2:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   17ce6:	mov	r0, r5
   17ce8:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   17cec:	movs	r7, #0
   17cee:	mov	r0, r7
   17cf0:	add	sp, #20
   17cf2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cf6:	nop
   17cf8:	strh	r1, [r4, #30]
   17cfa:	subs	r6, #15
   17cfc:	ldr	r3, [pc, #176]	; (17db0 <rb_free_nodes@@Base+0x50a>)
   17cfe:	movs	r2, r0
   17d00:	add	r0, r8
   17d02:	movs	r2, r0
   17d04:	add	r1, sl
   17d06:	movs	r2, r0
   17d08:	push	{r3, r4, r5, r6, r7, lr}
   17d0a:	mov	r6, r0
   17d0c:	mov	r4, r1
   17d0e:	mov	r5, r2
   17d10:	cbz	r2, 17d4c <rb_free_nodes@@Base+0x4a6>
   17d12:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   17d16:	ldr.w	r3, [r6, #192]	; 0xc0
   17d1a:	mov.w	ip, #25
   17d1e:	ldr	r1, [pc, #48]	; (17d50 <rb_free_nodes@@Base+0x4aa>)
   17d20:	add	r1, pc
   17d22:	adds	r1, #45	; 0x2d
   17d24:	mul.w	r7, ip, r2
   17d28:	adds	r2, r4, r2
   17d2a:	cmp	r2, r3
   17d2c:	it	ge
   17d2e:	movge	r2, r3
   17d30:	subs	r2, #1
   17d32:	mla	r3, ip, r2, r6
   17d36:	ldr.w	r2, [r3, #214]	; 0xd6
   17d3a:	subs	r2, r7, r2
   17d3c:	adds	r5, r2, r0
   17d3e:	ldr	r0, [pc, #20]	; (17d54 <rb_free_nodes@@Base+0x4ae>)
   17d40:	mov.w	r2, #1752	; 0x6d8
   17d44:	lsrs	r3, r5, #31
   17d46:	add	r0, pc
   17d48:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   17d4c:	mov	r0, r5
   17d4e:	pop	{r3, r4, r5, r6, r7, pc}
   17d50:	ldr	r2, [pc, #224]	; (17e34 <btrfs_free_path@@Base+0xe>)
   17d52:	movs	r2, r0
   17d54:	bics	r2, r2
   17d56:	movs	r2, r0
   17d58:	push	{r4, lr}
   17d5a:	mov	r4, r1
   17d5c:	ldr	r1, [pc, #76]	; (17dac <rb_free_nodes@@Base+0x506>)
   17d5e:	sub	sp, #24
   17d60:	ldr	r3, [pc, #76]	; (17db0 <rb_free_nodes@@Base+0x50a>)
   17d62:	add	r1, pc
   17d64:	ldr	r3, [r1, r3]
   17d66:	mov	r1, sp
   17d68:	ldr	r3, [r3, #0]
   17d6a:	str	r3, [sp, #20]
   17d6c:	mov.w	r3, #0
   17d70:	bl	178ee <rb_free_nodes@@Base+0x48>
   17d74:	ldr.w	r3, [sp, #13]
   17d78:	ldr.w	r2, [sp, #9]
   17d7c:	str.w	r3, [r4, #13]
   17d80:	ldrb.w	r3, [sp, #8]
   17d84:	str.w	r2, [r4, #9]
   17d88:	ldr	r2, [pc, #40]	; (17db4 <rb_free_nodes@@Base+0x50e>)
   17d8a:	strb	r3, [r4, #8]
   17d8c:	ldr	r3, [sp, #0]
   17d8e:	add	r2, pc
   17d90:	str	r3, [r4, #0]
   17d92:	ldr	r3, [sp, #4]
   17d94:	str	r3, [r4, #4]
   17d96:	ldr	r3, [pc, #24]	; (17db0 <rb_free_nodes@@Base+0x50a>)
   17d98:	ldr	r3, [r2, r3]
   17d9a:	ldr	r2, [r3, #0]
   17d9c:	ldr	r3, [sp, #20]
   17d9e:	eors	r2, r3
   17da0:	beq.n	17da6 <rb_free_nodes@@Base+0x500>
   17da2:	blx	86b8 <__stack_chk_fail@plt>
   17da6:	add	sp, #24
   17da8:	pop	{r4, pc}
   17daa:	nop
   17dac:	beq.n	17dfc <btrfs_alloc_path@@Base+0x4>
   17dae:	movs	r4, r0
   17db0:	lsls	r4, r4, #8
   17db2:	movs	r0, r0
   17db4:	ldmia	r7, {r1, r3, r4, r5, r6, r7}
   17db6:	movs	r4, r0

00017db8 <btrfs_super_csum_size@@Base>:
   17db8:	ldrh.w	r2, [r0, #196]	; 0xc4
   17dbc:	ldr	r3, [pc, #8]	; (17dc8 <btrfs_super_csum_size@@Base+0x10>)
   17dbe:	add	r3, pc
   17dc0:	add.w	r3, r3, r2, lsl #4
   17dc4:	ldrh	r0, [r3, #62]	; 0x3e
   17dc6:	bx	lr
   17dc8:	ldr	r1, [pc, #616]	; (18034 <add_root_to_dirty_list@@Base+0x1f8>)
   17dca:	movs	r2, r0

00017dcc <btrfs_super_csum_name@@Base>:
   17dcc:	ldr	r3, [pc, #8]	; (17dd8 <btrfs_super_csum_name@@Base+0xc>)
   17dce:	add	r3, pc
   17dd0:	add.w	r0, r3, r0, lsl #4
   17dd4:	adds	r0, #64	; 0x40
   17dd6:	bx	lr
   17dd8:	ldr	r1, [pc, #552]	; (18004 <add_root_to_dirty_list@@Base+0x1c8>)
   17dda:	movs	r2, r0

00017ddc <btrfs_super_num_csums@@Base>:
   17ddc:	movs	r0, #4
   17dde:	bx	lr

00017de0 <btrfs_csum_type_size@@Base>:
   17de0:	ldr	r3, [pc, #8]	; (17dec <btrfs_csum_type_size@@Base+0xc>)
   17de2:	add	r3, pc
   17de4:	add.w	r0, r3, r0, lsl #4
   17de8:	ldrh	r0, [r0, #62]	; 0x3e
   17dea:	bx	lr
   17dec:	ldr	r1, [pc, #472]	; (17fc8 <add_root_to_dirty_list@@Base+0x18c>)
   17dee:	movs	r2, r0

00017df0 <btrfs_init_path@@Base>:
   17df0:	movs	r2, #68	; 0x44
   17df2:	movs	r1, #0
   17df4:	b.w	8974 <memset@plt>

00017df8 <btrfs_alloc_path@@Base>:
   17df8:	movs	r1, #68	; 0x44
   17dfa:	movs	r0, #1
   17dfc:	b.w	8540 <calloc@plt>

00017e00 <btrfs_release_path@@Base>:
   17e00:	push	{r4, r5, r6, lr}
   17e02:	subs	r5, r0, #4
   17e04:	add.w	r6, r0, #28
   17e08:	mov	r4, r0
   17e0a:	ldr.w	r0, [r5, #4]!
   17e0e:	cbz	r0, 17e14 <btrfs_release_path@@Base+0x14>
   17e10:	bl	16bc8 <free_extent_buffer@@Base>
   17e14:	cmp	r5, r6
   17e16:	bne.n	17e0a <btrfs_release_path@@Base+0xa>
   17e18:	mov	r0, r4
   17e1a:	movs	r2, #68	; 0x44
   17e1c:	ldmia.w	sp!, {r4, r5, r6, lr}
   17e20:	movs	r1, #0
   17e22:	b.w	8974 <memset@plt>

00017e26 <btrfs_free_path@@Base>:
   17e26:	push	{r4, lr}
   17e28:	mov	r4, r0
   17e2a:	cbz	r0, 17e3a <btrfs_free_path@@Base+0x14>
   17e2c:	bl	17e00 <btrfs_release_path@@Base>
   17e30:	mov	r0, r4
   17e32:	ldmia.w	sp!, {r4, lr}
   17e36:	b.w	85d8 <free@plt>
   17e3a:	pop	{r4, pc}

00017e3c <add_root_to_dirty_list@@Base>:
   17e3c:	ldr.w	r3, [r0, #492]	; 0x1ec
   17e40:	cbz	r3, 17e68 <add_root_to_dirty_list@@Base+0x2c>
   17e42:	ldr.w	r3, [r0, #520]	; 0x208
   17e46:	add.w	r2, r0, #520	; 0x208
   17e4a:	cmp	r2, r3
   17e4c:	bne.n	17e68 <add_root_to_dirty_list@@Base+0x2c>
   17e4e:	ldr.w	r3, [r0, #464]	; 0x1d0
   17e52:	ldr.w	r1, [r3, #336]	; 0x150
   17e56:	str	r2, [r1, #4]
   17e58:	str.w	r1, [r0, #520]	; 0x208
   17e5c:	add.w	r1, r3, #336	; 0x150
   17e60:	str.w	r1, [r0, #524]	; 0x20c
   17e64:	str.w	r2, [r3, #336]	; 0x150
   17e68:	bx	lr
   17e6a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e6e:	sub	sp, #76	; 0x4c
   17e70:	mov	r7, r3
   17e72:	ldr	r3, [pc, #468]	; (18048 <add_root_to_dirty_list@@Base+0x20c>)
   17e74:	str	r2, [sp, #36]	; 0x24
   17e76:	mov	r5, r1
   17e78:	ldr	r2, [pc, #464]	; (1804c <add_root_to_dirty_list@@Base+0x210>)
   17e7a:	mov	fp, r0
   17e7c:	ldr	r1, [pc, #464]	; (18050 <add_root_to_dirty_list@@Base+0x214>)
   17e7e:	add.w	r8, sp, #48	; 0x30
   17e82:	add	r2, pc
   17e84:	ldr	r0, [pc, #460]	; (18054 <add_root_to_dirty_list@@Base+0x218>)
   17e86:	add	r1, pc
   17e88:	ldr	r3, [r2, r3]
   17e8a:	adds	r1, #126	; 0x7e
   17e8c:	add	r0, pc
   17e8e:	movw	r2, #1553	; 0x611
   17e92:	ldr	r3, [r3, #0]
   17e94:	str	r3, [sp, #68]	; 0x44
   17e96:	mov.w	r3, #0
   17e9a:	ldr	r3, [sp, #36]	; 0x24
   17e9c:	str	r1, [sp, #44]	; 0x2c
   17e9e:	add.w	r3, r3, r7, lsl #2
   17ea2:	str	r3, [sp, #40]	; 0x28
   17ea4:	ldr	r3, [sp, #36]	; 0x24
   17ea6:	ldr.w	r3, [r3, r7, lsl #2]
   17eaa:	bl	179bc <rb_free_nodes@@Base+0x116>
   17eae:	ldr	r3, [sp, #40]	; 0x28
   17eb0:	ldr	r0, [pc, #420]	; (18058 <add_root_to_dirty_list@@Base+0x21c>)
   17eb2:	movw	r2, #1554	; 0x612
   17eb6:	ldr	r1, [sp, #44]	; 0x2c
   17eb8:	ldr.w	sl, [r3, #-4]
   17ebc:	add	r0, pc
   17ebe:	ldr	r3, [r5, #0]
   17ec0:	subs.w	r3, r3, sl
   17ec4:	it	ne
   17ec6:	movne	r3, #1
   17ec8:	bl	179bc <rb_free_nodes@@Base+0x116>
   17ecc:	cmp	r7, #1
   17ece:	mov.w	r2, #0
   17ed2:	mov	r1, r8
   17ed4:	mov	r0, sl
   17ed6:	bne.n	17f2c <add_root_to_dirty_list@@Base+0xf0>
   17ed8:	bl	178ee <rb_free_nodes@@Base+0x48>
   17edc:	movs	r2, #0
   17ede:	movs	r3, #0
   17ee0:	strd	r2, r3, [sp, #24]
   17ee4:	mov	r0, fp
   17ee6:	ldr	r3, [r5, #0]
   17ee8:	ldr.w	r1, [r5, #464]	; 0x1d0
   17eec:	ldrd	r2, r3, [r3, #40]	; 0x28
   17ef0:	strd	r8, r7, [sp, #8]
   17ef4:	strd	r2, r3, [sp, #16]
   17ef8:	ldr.w	r2, [r5, #447]	; 0x1bf
   17efc:	ldr.w	r3, [r5, #451]	; 0x1c3
   17f00:	strd	r2, r3, [sp]
   17f04:	ldr.w	r2, [r1, #384]	; 0x180
   17f08:	mov	r1, r5
   17f0a:	bl	22a0c <btrfs_alloc_free_block@@Base>
   17f0e:	cmn.w	r0, #4096	; 0x1000
   17f12:	mov	r4, r0
   17f14:	bls.n	17f32 <add_root_to_dirty_list@@Base+0xf6>
   17f16:	ldr	r2, [pc, #324]	; (1805c <add_root_to_dirty_list@@Base+0x220>)
   17f18:	ldr	r3, [pc, #300]	; (18048 <add_root_to_dirty_list@@Base+0x20c>)
   17f1a:	add	r2, pc
   17f1c:	ldr	r3, [r2, r3]
   17f1e:	ldr	r2, [r3, #0]
   17f20:	ldr	r3, [sp, #68]	; 0x44
   17f22:	eors	r2, r3
   17f24:	beq.w	18040 <add_root_to_dirty_list@@Base+0x204>
   17f28:	blx	86b8 <__stack_chk_fail@plt>
   17f2c:	bl	178fa <rb_free_nodes@@Base+0x54>
   17f30:	b.n	17edc <add_root_to_dirty_list@@Base+0xa0>
   17f32:	movs	r2, #0
   17f34:	movs	r3, #101	; 0x65
   17f36:	mov	r1, r2
   17f38:	movs	r6, #0
   17f3a:	bl	1734a <memset_extent_buffer@@Base>
   17f3e:	movs	r3, #1
   17f40:	strb.w	r3, [r4, #192]	; 0xc0
   17f44:	ldr	r3, [r4, #40]	; 0x28
   17f46:	strb.w	r6, [r4, #193]	; 0xc1
   17f4a:	strb.w	r6, [r4, #194]	; 0xc2
   17f4e:	str.w	r3, [r4, #144]	; 0x90
   17f52:	ldr	r3, [r4, #44]	; 0x2c
   17f54:	strb.w	r6, [r4, #195]	; 0xc3
   17f58:	strb.w	r7, [r4, #196]	; 0xc4
   17f5c:	str.w	r3, [r4, #148]	; 0x94
   17f60:	ldrd	r2, r3, [fp, #8]
   17f64:	str.w	r2, [r4, #176]	; 0xb0
   17f68:	str.w	r3, [r4, #180]	; 0xb4
   17f6c:	ldr.w	r2, [r4, #152]	; 0x98
   17f70:	ldr.w	r3, [r4, #156]	; 0x9c
   17f74:	bic.w	r3, r3, #4278190080	; 0xff000000
   17f78:	str.w	r2, [r4, #152]	; 0x98
   17f7c:	orr.w	r3, r3, #16777216	; 0x1000000
   17f80:	str.w	r3, [r4, #156]	; 0x9c
   17f84:	ldr.w	r2, [r5, #447]	; 0x1bf
   17f88:	ldr.w	r3, [r5, #451]	; 0x1c3
   17f8c:	str.w	r2, [r4, #184]	; 0xb8
   17f90:	str.w	r3, [r4, #188]	; 0xbc
   17f94:	ldr.w	r0, [r5, #464]	; 0x1d0
   17f98:	ldr.w	r2, [r5, #200]	; 0xc8
   17f9c:	ldr.w	r3, [r5, #204]	; 0xcc
   17fa0:	ldr.w	r1, [r0, #384]	; 0x180
   17fa4:	adds	r2, r2, r1
   17fa6:	str.w	r2, [r5, #200]	; 0xc8
   17faa:	adc.w	r3, r3, #0
   17fae:	str.w	r3, [r5, #204]	; 0xcc
   17fb2:	ldr.w	r1, [r0, #352]	; 0x160
   17fb6:	movs	r3, #16
   17fb8:	movs	r2, #32
   17fba:	mov	r0, r4
   17fbc:	add	r1, r3
   17fbe:	bl	172d8 <write_extent_buffer@@Base>
   17fc2:	movs	r3, #16
   17fc4:	ldr.w	r1, [r5, #464]	; 0x1d0
   17fc8:	movs	r2, #64	; 0x40
   17fca:	mov	r0, r4
   17fcc:	bl	172d8 <write_extent_buffer@@Base>
   17fd0:	mov	r1, r8
   17fd2:	mov	r2, r6
   17fd4:	mov	r0, r4
   17fd6:	bl	178d6 <rb_free_nodes@@Base+0x30>
   17fda:	ldrd	r2, r3, [sl, #40]	; 0x28
   17fde:	ldr	r1, [pc, #128]	; (18060 <add_root_to_dirty_list@@Base+0x224>)
   17fe0:	ldr	r0, [pc, #128]	; (18064 <add_root_to_dirty_list@@Base+0x228>)
   17fe2:	str.w	r2, [r4, #214]	; 0xd6
   17fe6:	add	r1, pc
   17fe8:	str.w	r3, [r4, #218]	; 0xda
   17fec:	adds	r1, #126	; 0x7e
   17fee:	ldrd	r2, r3, [fp, #8]
   17ff2:	add	r0, pc
   17ff4:	ldr.w	r9, [sl, #180]	; 0xb4
   17ff8:	ldr.w	r8, [sl, #176]	; 0xb0
   17ffc:	cmp	r3, r9
   17ffe:	it	eq
   18000:	cmpeq	r2, r8
   18002:	movw	r2, #1589	; 0x635
   18006:	ite	ne
   18008:	movne	r3, #1
   1800a:	moveq	r3, r6
   1800c:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   18010:	mov	r0, r4
   18012:	str.w	r8, [r4, #222]	; 0xde
   18016:	str.w	r9, [r4, #226]	; 0xe2
   1801a:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1801e:	ldr	r0, [r5, #0]
   18020:	str	r4, [r5, #0]
   18022:	bl	16bc8 <free_extent_buffer@@Base>
   18026:	mov	r0, r5
   18028:	bl	17e3c <add_root_to_dirty_list@@Base>
   1802c:	ldr	r3, [r4, #80]	; 0x50
   1802e:	mov	r0, r6
   18030:	adds	r3, #1
   18032:	str	r3, [r4, #80]	; 0x50
   18034:	ldr	r3, [sp, #36]	; 0x24
   18036:	str.w	r4, [r3, r7, lsl #2]
   1803a:	ldr	r3, [sp, #40]	; 0x28
   1803c:	str	r6, [r3, #32]
   1803e:	b.n	17f16 <add_root_to_dirty_list@@Base+0xda>
   18040:	add	sp, #76	; 0x4c
   18042:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18046:	nop
   18048:	lsls	r4, r4, #8
   1804a:	movs	r0, r0
   1804c:	ldmia	r7!, {r1, r2}
   1804e:	movs	r4, r0
   18050:	ldr	r0, [pc, #840]	; (1839c <__btrfs_cow_block@@Base+0x138>)
   18052:	movs	r2, r0
   18054:	rors	r7, r0
   18056:	movs	r2, r0
   18058:	tst	r1, r5
   1805a:	movs	r2, r0
   1805c:	ldmia	r6, {r1, r2, r3, r5, r6}
   1805e:	movs	r4, r0
   18060:	bx	lr
   18062:	movs	r2, r0
   18064:	asrs	r6, r2
   18066:	movs	r2, r0

00018068 <btrfs_copy_root@@Base>:
   18068:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1806c:	sub	sp, #68	; 0x44
   1806e:	mov	r4, r2
   18070:	ldr	r2, [pc, #460]	; (18240 <btrfs_copy_root@@Base+0x1d8>)
   18072:	str	r3, [sp, #36]	; 0x24
   18074:	mov	r8, r0
   18076:	ldr	r3, [pc, #460]	; (18244 <btrfs_copy_root@@Base+0x1dc>)
   18078:	add	r2, pc
   1807a:	mov.w	r0, #544	; 0x220
   1807e:	ldrd	sl, fp, [sp, #104]	; 0x68
   18082:	mov	r9, r1
   18084:	ldr	r3, [r2, r3]
   18086:	ldr	r3, [r3, #0]
   18088:	str	r3, [sp, #60]	; 0x3c
   1808a:	mov.w	r3, #0
   1808e:	blx	8820 <malloc@plt+0x4>
   18092:	mov	r5, r0
   18094:	cmp	r0, #0
   18096:	beq.w	18232 <btrfs_copy_root@@Base+0x1ca>
   1809a:	mov.w	r2, #544	; 0x220
   1809e:	mov	r1, r9
   180a0:	blx	8628 <memcpy@plt+0x4>
   180a4:	ldr.w	r3, [r9, #488]	; 0x1e8
   180a8:	str.w	sl, [r5, #447]	; 0x1bf
   180ac:	str.w	fp, [r5, #451]	; 0x1c3
   180b0:	cbz	r3, 180cc <btrfs_copy_root@@Base+0x64>
   180b2:	ldr.w	r3, [r9, #464]	; 0x1d0
   180b6:	ldr.w	r3, [r3, #304]	; 0x130
   180ba:	ldrd	r0, r1, [r3, #8]
   180be:	ldrd	r2, r3, [r8, #8]
   180c2:	cmp	r1, r3
   180c4:	itet	eq
   180c6:	cmpeq	r0, r2
   180c8:	movne	r3, #1
   180ca:	moveq	r3, #0
   180cc:	ldr	r1, [pc, #376]	; (18248 <btrfs_copy_root@@Base+0x1e0>)
   180ce:	movs	r2, #142	; 0x8e
   180d0:	ldr	r0, [pc, #376]	; (1824c <btrfs_copy_root@@Base+0x1e4>)
   180d2:	add	r1, pc
   180d4:	add	r1, r2
   180d6:	add	r0, pc
   180d8:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   180dc:	ldr.w	r3, [r9, #488]	; 0x1e8
   180e0:	cbz	r3, 180f4 <btrfs_copy_root@@Base+0x8c>
   180e2:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   180e6:	ldrd	r6, r7, [r8, #8]
   180ea:	cmp	r7, r3
   180ec:	itet	eq
   180ee:	cmpeq	r6, r2
   180f0:	movne	r3, #1
   180f2:	moveq	r3, #0
   180f4:	ldr	r1, [pc, #344]	; (18250 <btrfs_copy_root@@Base+0x1e8>)
   180f6:	movs	r2, #144	; 0x90
   180f8:	ldr	r0, [pc, #344]	; (18254 <btrfs_copy_root@@Base+0x1ec>)
   180fa:	add	r7, sp, #40	; 0x28
   180fc:	add	r1, pc
   180fe:	adds	r1, #142	; 0x8e
   18100:	add	r0, pc
   18102:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   18106:	ldrb.w	r6, [r4, #196]	; 0xc4
   1810a:	cbnz	r6, 1815c <btrfs_copy_root@@Base+0xf4>
   1810c:	mov	r2, r6
   1810e:	mov	r1, r7
   18110:	mov	r0, r4
   18112:	bl	178ee <rb_free_nodes@@Base+0x48>
   18116:	movs	r2, #0
   18118:	movs	r3, #0
   1811a:	strd	r2, r3, [sp, #24]
   1811e:	mov	r1, r5
   18120:	ldrd	r2, r3, [r4, #40]	; 0x28
   18124:	mov	r0, r8
   18126:	strd	r7, r6, [sp, #8]
   1812a:	strd	sl, fp, [sp]
   1812e:	strd	r2, r3, [sp, #16]
   18132:	ldr	r2, [r4, #76]	; 0x4c
   18134:	bl	22a0c <btrfs_alloc_free_block@@Base>
   18138:	cmn.w	r0, #4096	; 0x1000
   1813c:	mov	r6, r0
   1813e:	bls.n	18168 <btrfs_copy_root@@Base+0x100>
   18140:	mov	r0, r5
   18142:	mov	r4, r6
   18144:	blx	85dc <free@plt+0x4>
   18148:	ldr	r2, [pc, #268]	; (18258 <btrfs_copy_root@@Base+0x1f0>)
   1814a:	ldr	r3, [pc, #248]	; (18244 <btrfs_copy_root@@Base+0x1dc>)
   1814c:	add	r2, pc
   1814e:	ldr	r3, [r2, r3]
   18150:	ldr	r2, [r3, #0]
   18152:	ldr	r3, [sp, #60]	; 0x3c
   18154:	eors	r2, r3
   18156:	beq.n	18238 <btrfs_copy_root@@Base+0x1d0>
   18158:	blx	86b8 <__stack_chk_fail@plt>
   1815c:	movs	r2, #0
   1815e:	mov	r1, r7
   18160:	mov	r0, r4
   18162:	bl	178fa <rb_free_nodes@@Base+0x54>
   18166:	b.n	18116 <btrfs_copy_root@@Base+0xae>
   18168:	ldr	r3, [r0, #76]	; 0x4c
   1816a:	mov	r1, r4
   1816c:	str	r3, [sp, #0]
   1816e:	movs	r3, #0
   18170:	mov	r2, r3
   18172:	bl	172ea <copy_extent_buffer@@Base>
   18176:	ldr	r3, [r6, #40]	; 0x28
   18178:	mov.w	r1, #4294967295	; 0xffffffff
   1817c:	cmp	fp, r1
   1817e:	mvn.w	r0, #7
   18182:	it	eq
   18184:	cmpeq	sl, r0
   18186:	str.w	r3, [r6, #144]	; 0x90
   1818a:	mov	r0, r6
   1818c:	ldr	r3, [r6, #44]	; 0x2c
   1818e:	str.w	r3, [r6, #148]	; 0x94
   18192:	ldrd	r2, r3, [r8, #8]
   18196:	itt	ne
   18198:	strne.w	sl, [r6, #184]	; 0xb8
   1819c:	strne.w	fp, [r6, #188]	; 0xbc
   181a0:	str.w	r2, [r6, #176]	; 0xb0
   181a4:	str.w	r3, [r6, #180]	; 0xb4
   181a8:	ldr.w	r2, [r6, #156]	; 0x9c
   181ac:	ldr.w	r3, [r6, #152]	; 0x98
   181b0:	bic.w	r2, r2, #4278190080	; 0xff000000
   181b4:	bic.w	r3, r3, #3
   181b8:	orr.w	r2, r2, #16777216	; 0x1000000
   181bc:	str.w	r3, [r6, #152]	; 0x98
   181c0:	it	eq
   181c2:	orreq.w	r3, r3, #2
   181c6:	str.w	r2, [r6, #156]	; 0x9c
   181ca:	mov.w	r2, #32
   181ce:	it	eq
   181d0:	streq.w	r3, [r6, #152]	; 0x98
   181d4:	ldr.w	r3, [r9, #464]	; 0x1d0
   181d8:	ldr.w	r1, [r3, #352]	; 0x160
   181dc:	movs	r3, #16
   181de:	add	r1, r3
   181e0:	bl	172d8 <write_extent_buffer@@Base>
   181e4:	ldrd	r2, r3, [r8, #8]
   181e8:	ldr.w	r1, [r4, #180]	; 0xb4
   181ec:	ldr.w	r0, [r4, #176]	; 0xb0
   181f0:	cmp	r3, r1
   181f2:	ldr	r1, [pc, #104]	; (1825c <btrfs_copy_root@@Base+0x1f4>)
   181f4:	it	eq
   181f6:	cmpeq	r2, r0
   181f8:	ldr	r0, [pc, #100]	; (18260 <btrfs_copy_root@@Base+0x1f8>)
   181fa:	add	r1, pc
   181fc:	mov.w	r2, #173	; 0xad
   18200:	ite	cc
   18202:	movcc	r3, #1
   18204:	movcs	r3, #0
   18206:	adds	r1, #142	; 0x8e
   18208:	add	r0, pc
   1820a:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1820e:	movs	r3, #0
   18210:	mov	r2, r6
   18212:	mov	r1, r5
   18214:	mov	r0, r8
   18216:	bl	208c8 <btrfs_inc_ref@@Base>
   1821a:	mov	r4, r0
   1821c:	mov	r0, r5
   1821e:	blx	85dc <free@plt+0x4>
   18222:	cmp	r4, #0
   18224:	bne.n	18148 <btrfs_copy_root@@Base+0xe0>
   18226:	mov	r0, r6
   18228:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1822c:	ldr	r3, [sp, #36]	; 0x24
   1822e:	str	r6, [r3, #0]
   18230:	b.n	18148 <btrfs_copy_root@@Base+0xe0>
   18232:	mvn.w	r4, #11
   18236:	b.n	18148 <btrfs_copy_root@@Base+0xe0>
   18238:	mov	r0, r4
   1823a:	add	sp, #68	; 0x44
   1823c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18240:	ldmia	r5!, {r4}
   18242:	movs	r4, r0
   18244:	lsls	r4, r4, #8
   18246:	movs	r0, r0
   18248:	mov	lr, r0
   1824a:	movs	r2, r0
   1824c:	eors	r6, r1
   1824e:	movs	r2, r0
   18250:	mov	r4, fp
   18252:	movs	r2, r0
   18254:	eors	r4, r6
   18256:	movs	r2, r0
   18258:	ldmia	r4, {r2, r3, r4, r5}
   1825a:	movs	r4, r0
   1825c:	cmp	r6, fp
   1825e:	movs	r2, r0
   18260:	subs	r7, #199	; 0xc7
   18262:	movs	r2, r0

00018264 <__btrfs_cow_block@@Base>:
   18264:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18268:	sub	sp, #100	; 0x64
   1826a:	mov	r5, r2
   1826c:	ldr.w	r2, [pc, #1368]	; 187c8 <__btrfs_cow_block@@Base+0x564>
   18270:	str	r3, [sp, #48]	; 0x30
   18272:	mov	sl, r0
   18274:	ldrd	fp, r3, [sp, #136]	; 0x88
   18278:	add	r2, pc
   1827a:	mov	r4, r1
   1827c:	str	r3, [sp, #52]	; 0x34
   1827e:	ldr.w	r3, [pc, #1356]	; 187cc <__btrfs_cow_block@@Base+0x568>
   18282:	ldr	r3, [r2, r3]
   18284:	ldr	r3, [r3, #0]
   18286:	str	r3, [sp, #92]	; 0x5c
   18288:	mov.w	r3, #0
   1828c:	ldr.w	r3, [r1, #488]	; 0x1e8
   18290:	cbz	r3, 182ac <__btrfs_cow_block@@Base+0x48>
   18292:	ldr.w	r3, [r1, #464]	; 0x1d0
   18296:	ldr.w	r3, [r3, #304]	; 0x130
   1829a:	ldrd	r0, r1, [r3, #8]
   1829e:	ldrd	r2, r3, [sl, #8]
   182a2:	cmp	r1, r3
   182a4:	itet	eq
   182a6:	cmpeq	r0, r2
   182a8:	movne	r3, #1
   182aa:	moveq	r3, #0
   182ac:	ldr.w	r1, [pc, #1312]	; 187d0 <__btrfs_cow_block@@Base+0x56c>
   182b0:	movw	r2, #311	; 0x137
   182b4:	ldr.w	r0, [pc, #1308]	; 187d4 <__btrfs_cow_block@@Base+0x570>
   182b8:	add	r1, pc
   182ba:	adds	r1, #158	; 0x9e
   182bc:	add	r0, pc
   182be:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   182c2:	ldr.w	r3, [r4, #488]	; 0x1e8
   182c6:	cbz	r3, 182da <__btrfs_cow_block@@Base+0x76>
   182c8:	ldrd	r8, r9, [sl, #8]
   182cc:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   182d0:	cmp	r9, r7
   182d2:	itet	eq
   182d4:	cmpeq	r8, r6
   182d6:	movne	r3, #1
   182d8:	moveq	r3, #0
   182da:	ldr.w	r1, [pc, #1276]	; 187d8 <__btrfs_cow_block@@Base+0x574>
   182de:	movw	r2, #313	; 0x139
   182e2:	ldr.w	r0, [pc, #1272]	; 187dc <__btrfs_cow_block@@Base+0x578>
   182e6:	add	r6, sp, #72	; 0x48
   182e8:	add	r1, pc
   182ea:	adds	r1, #158	; 0x9e
   182ec:	add	r0, pc
   182ee:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   182f2:	ldrb.w	r7, [r5, #196]	; 0xc4
   182f6:	cbnz	r7, 1834e <__btrfs_cow_block@@Base+0xea>
   182f8:	mov	r2, r7
   182fa:	mov	r1, r6
   182fc:	mov	r0, r5
   182fe:	bl	178ee <rb_free_nodes@@Base+0x48>
   18302:	ldrd	r2, r3, [sp, #152]	; 0x98
   18306:	mov	r1, r4
   18308:	strd	r6, r7, [sp, #8]
   1830c:	mov	r0, sl
   1830e:	strd	r2, r3, [sp, #24]
   18312:	ldrd	r2, r3, [sp, #144]	; 0x90
   18316:	strd	r2, r3, [sp, #16]
   1831a:	ldr.w	r2, [r4, #447]	; 0x1bf
   1831e:	ldr.w	r3, [r4, #451]	; 0x1c3
   18322:	strd	r2, r3, [sp]
   18326:	ldr	r2, [r5, #76]	; 0x4c
   18328:	bl	22a0c <btrfs_alloc_free_block@@Base>
   1832c:	cmn.w	r0, #4096	; 0x1000
   18330:	mov	r6, r0
   18332:	bls.n	1835a <__btrfs_cow_block@@Base+0xf6>
   18334:	ldr.w	r2, [pc, #1192]	; 187e0 <__btrfs_cow_block@@Base+0x57c>
   18338:	ldr.w	r3, [pc, #1168]	; 187cc <__btrfs_cow_block@@Base+0x568>
   1833c:	add	r2, pc
   1833e:	ldr	r3, [r2, r3]
   18340:	ldr	r2, [r3, #0]
   18342:	ldr	r3, [sp, #92]	; 0x5c
   18344:	eors	r2, r3
   18346:	beq.w	187c2 <__btrfs_cow_block@@Base+0x55e>
   1834a:	blx	86b8 <__stack_chk_fail@plt>
   1834e:	movs	r2, #0
   18350:	mov	r1, r6
   18352:	mov	r0, r5
   18354:	bl	178fa <rb_free_nodes@@Base+0x54>
   18358:	b.n	18302 <__btrfs_cow_block@@Base+0x9e>
   1835a:	ldr	r3, [r0, #76]	; 0x4c
   1835c:	mov	r1, r5
   1835e:	str	r3, [sp, #0]
   18360:	movs	r3, #0
   18362:	mov	r2, r3
   18364:	bl	172ea <copy_extent_buffer@@Base>
   18368:	ldr	r3, [r6, #40]	; 0x28
   1836a:	ldr.w	ip, [r6, #152]	; 0x98
   1836e:	mov.w	r1, #4294967295	; 0xffffffff
   18372:	mvn.w	r0, #7
   18376:	str.w	r3, [r6, #144]	; 0x90
   1837a:	bic.w	ip, ip, #3
   1837e:	ldr	r3, [r6, #44]	; 0x2c
   18380:	str.w	r3, [r6, #148]	; 0x94
   18384:	ldrd	r2, r3, [sl, #8]
   18388:	str.w	ip, [r6, #152]	; 0x98
   1838c:	str.w	r3, [r6, #180]	; 0xb4
   18390:	ldr.w	r3, [r6, #156]	; 0x9c
   18394:	str.w	r2, [r6, #176]	; 0xb0
   18398:	bic.w	r3, r3, #4278190080	; 0xff000000
   1839c:	orr.w	r3, r3, #16777216	; 0x1000000
   183a0:	str.w	r3, [r6, #156]	; 0x9c
   183a4:	ldr.w	r3, [r4, #451]	; 0x1c3
   183a8:	ldr.w	r2, [r4, #447]	; 0x1bf
   183ac:	cmp	r3, r1
   183ae:	iteet	eq
   183b0:	cmpeq	r2, r0
   183b2:	strne.w	r3, [r6, #188]	; 0xbc
   183b6:	strne.w	r2, [r6, #184]	; 0xb8
   183ba:	orreq.w	ip, ip, #2
   183be:	it	eq
   183c0:	streq.w	ip, [r6, #152]	; 0x98
   183c4:	movs	r2, #32
   183c6:	ldr.w	r3, [r4, #464]	; 0x1d0
   183ca:	mov	r0, r6
   183cc:	ldr.w	r1, [r3, #352]	; 0x160
   183d0:	movs	r3, #16
   183d2:	add	r1, r3
   183d4:	bl	172d8 <write_extent_buffer@@Base>
   183d8:	ldr	r3, [r5, #84]	; 0x54
   183da:	lsls	r3, r3, #21
   183dc:	bmi.w	1851a <__btrfs_cow_block@@Base+0x2b6>
   183e0:	ldrd	r2, r3, [sl, #8]
   183e4:	ldr.w	r1, [r5, #180]	; 0xb4
   183e8:	ldr.w	r0, [r5, #176]	; 0xb0
   183ec:	cmp	r3, r1
   183ee:	it	eq
   183f0:	cmpeq	r2, r0
   183f2:	ite	cc
   183f4:	movcc	r3, #1
   183f6:	movcs	r3, #0
   183f8:	ldr	r1, [pc, #1000]	; (187e4 <__btrfs_cow_block@@Base+0x580>)
   183fa:	mov.w	r2, #342	; 0x156
   183fe:	ldr	r0, [pc, #1000]	; (187e8 <__btrfs_cow_block@@Base+0x584>)
   18400:	add	r1, pc
   18402:	adds	r1, #158	; 0x9e
   18404:	add	r0, pc
   18406:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1840a:	ldr.w	r3, [r4, #488]	; 0x1e8
   1840e:	cmp	r3, #0
   18410:	beq.w	1851e <__btrfs_cow_block@@Base+0x2ba>
   18414:	ldr	r3, [r4, #0]
   18416:	cmp	r5, r3
   18418:	beq.w	1851e <__btrfs_cow_block@@Base+0x2ba>
   1841c:	ldr	r3, [r4, #4]
   1841e:	cmp	r5, r3
   18420:	beq.n	1851e <__btrfs_cow_block@@Base+0x2ba>
   18422:	ldr.w	r3, [r5, #180]	; 0xb4
   18426:	ldr.w	r1, [r4, #212]	; 0xd4
   1842a:	ldr.w	r2, [r5, #176]	; 0xb0
   1842e:	ldr.w	r0, [r4, #208]	; 0xd0
   18432:	cmp	r1, r3
   18434:	it	eq
   18436:	cmpeq	r0, r2
   18438:	bcs.n	18448 <__btrfs_cow_block@@Base+0x1e4>
   1843a:	ldr.w	r1, [r5, #152]	; 0x98
   1843e:	movs	r3, #0
   18440:	and.w	r2, r1, #2
   18444:	orrs	r3, r2
   18446:	beq.n	1851e <__btrfs_cow_block@@Base+0x2ba>
   18448:	ldrb.w	r2, [r5, #196]	; 0xc4
   1844c:	add	r3, sp, #64	; 0x40
   1844e:	ldr.w	r1, [sl]
   18452:	mov	r0, sl
   18454:	str	r3, [sp, #16]
   18456:	add	r3, sp, #56	; 0x38
   18458:	str	r3, [sp, #12]
   1845a:	movs	r3, #1
   1845c:	str	r3, [sp, #8]
   1845e:	movs	r3, #0
   18460:	strd	r2, r3, [sp]
   18464:	ldrd	r2, r3, [r5, #40]	; 0x28
   18468:	bl	20534 <btrfs_lookup_extent_info@@Base>
   1846c:	ldr	r1, [pc, #892]	; (187ec <__btrfs_cow_block@@Base+0x588>)
   1846e:	movs	r2, #239	; 0xef
   18470:	add	r1, pc
   18472:	adds	r1, #176	; 0xb0
   18474:	str	r1, [sp, #40]	; 0x28
   18476:	mov	r3, r0
   18478:	ldr	r0, [pc, #884]	; (187f0 <__btrfs_cow_block@@Base+0x58c>)
   1847a:	add	r0, pc
   1847c:	bl	179bc <rb_free_nodes@@Base+0x116>
   18480:	ldrd	r2, r3, [sp, #56]	; 0x38
   18484:	ldr	r0, [pc, #876]	; (187f4 <__btrfs_cow_block@@Base+0x590>)
   18486:	orrs	r3, r2
   18488:	ldr	r1, [sp, #40]	; 0x28
   1848a:	add	r0, pc
   1848c:	mov.w	r2, #240	; 0xf0
   18490:	ite	eq
   18492:	moveq	r3, #1
   18494:	movne	r3, #0
   18496:	bl	179bc <rb_free_nodes@@Base+0x116>
   1849a:	ldr.w	r3, [r5, #184]	; 0xb8
   1849e:	ldr	r2, [sp, #64]	; 0x40
   184a0:	str	r3, [sp, #40]	; 0x28
   184a2:	and.w	r8, r2, #256	; 0x100
   184a6:	ldr.w	r3, [r5, #188]	; 0xbc
   184aa:	str	r3, [sp, #44]	; 0x2c
   184ac:	movs	r3, #0
   184ae:	mov	r9, r3
   184b0:	orrs.w	r2, r8, r9
   184b4:	bne.n	184cc <__btrfs_cow_block@@Base+0x268>
   184b6:	ldrd	r0, r1, [sp, #40]	; 0x28
   184ba:	mov.w	r3, #4294967295	; 0xffffffff
   184be:	mvn.w	r2, #7
   184c2:	cmp	r1, r3
   184c4:	itte	eq
   184c6:	cmpeq	r0, r2
   184c8:	moveq	r3, #1
   184ca:	movne	r3, r9
   184cc:	ldr	r1, [pc, #808]	; (187f8 <__btrfs_cow_block@@Base+0x594>)
   184ce:	movs	r2, #251	; 0xfb
   184d0:	ldr	r0, [pc, #808]	; (187fc <__btrfs_cow_block@@Base+0x598>)
   184d2:	add	r1, pc
   184d4:	adds	r1, #176	; 0xb0
   184d6:	add	r0, pc
   184d8:	bl	179bc <rb_free_nodes@@Base+0x116>
   184dc:	ldrd	r2, r3, [sp, #56]	; 0x38
   184e0:	cmp	r3, #0
   184e2:	it	eq
   184e4:	cmpeq	r2, #2
   184e6:	bcc.w	186b2 <__btrfs_cow_block@@Base+0x44e>
   184ea:	ldrd	r0, r1, [sp, #40]	; 0x28
   184ee:	ldr.w	r3, [r4, #451]	; 0x1c3
   184f2:	ldr.w	r2, [r4, #447]	; 0x1bf
   184f6:	cmp	r1, r3
   184f8:	mov.w	r1, #4294967295	; 0xffffffff
   184fc:	it	eq
   184fe:	cmpeq	r0, r2
   18500:	mvn.w	r0, #7
   18504:	beq.n	18556 <__btrfs_cow_block@@Base+0x2f2>
   18506:	cmp	r3, r1
   18508:	it	eq
   1850a:	cmpeq	r2, r0
   1850c:	bne.w	186ae <__btrfs_cow_block@@Base+0x44a>
   18510:	orrs.w	r3, r8, r9
   18514:	bne.w	18690 <__btrfs_cow_block@@Base+0x42c>
   18518:	b.n	1855e <__btrfs_cow_block@@Base+0x2fa>
   1851a:	movs	r3, #0
   1851c:	b.n	183f8 <__btrfs_cow_block@@Base+0x194>
   1851e:	movs	r2, #1
   18520:	movs	r3, #0
   18522:	strd	r2, r3, [sp, #56]	; 0x38
   18526:	mov.w	r1, #4294967295	; 0xffffffff
   1852a:	ldr.w	r3, [r4, #451]	; 0x1c3
   1852e:	mvn.w	r0, #7
   18532:	ldr.w	r2, [r4, #447]	; 0x1bf
   18536:	cmp	r3, r1
   18538:	it	eq
   1853a:	cmpeq	r2, r0
   1853c:	beq.n	18546 <__btrfs_cow_block@@Base+0x2e2>
   1853e:	ldr.w	r3, [r5, #156]	; 0x9c
   18542:	lsrs	r3, r3, #24
   18544:	bne.n	18552 <__btrfs_cow_block@@Base+0x2ee>
   18546:	mov.w	r2, #256	; 0x100
   1854a:	movs	r3, #0
   1854c:	strd	r2, r3, [sp, #64]	; 0x40
   18550:	b.n	1849a <__btrfs_cow_block@@Base+0x236>
   18552:	movs	r2, #0
   18554:	b.n	1854a <__btrfs_cow_block@@Base+0x2e6>
   18556:	orrs.w	r3, r8, r9
   1855a:	bne.w	18684 <__btrfs_cow_block@@Base+0x420>
   1855e:	movs	r3, #1
   18560:	mov	r2, r5
   18562:	mov	r1, r4
   18564:	mov	r0, sl
   18566:	bl	208c8 <btrfs_inc_ref@@Base>
   1856a:	ldr.w	r8, [pc, #660]	; 18800 <__btrfs_cow_block@@Base+0x59c>
   1856e:	ldr.w	r9, [pc, #660]	; 18804 <__btrfs_cow_block@@Base+0x5a0>
   18572:	movw	r2, #259	; 0x103
   18576:	add	r8, pc
   18578:	add.w	r8, r8, #176	; 0xb0
   1857c:	add	r9, pc
   1857e:	mov	r1, r8
   18580:	mov	r3, r0
   18582:	mov	r0, r9
   18584:	bl	179bc <rb_free_nodes@@Base+0x116>
   18588:	ldr.w	r3, [r4, #451]	; 0x1c3
   1858c:	ldr.w	r2, [r4, #447]	; 0x1bf
   18590:	mov.w	r1, #4294967295	; 0xffffffff
   18594:	cmp	r3, r1
   18596:	mvn.w	r0, #7
   1859a:	it	eq
   1859c:	cmpeq	r2, r0
   1859e:	bne.n	185d4 <__btrfs_cow_block@@Base+0x370>
   185a0:	movs	r3, #0
   185a2:	mov	r2, r5
   185a4:	mov	r1, r4
   185a6:	mov	r0, sl
   185a8:	bl	208d6 <btrfs_dec_ref@@Base>
   185ac:	mov.w	r2, #264	; 0x108
   185b0:	mov	r1, r8
   185b2:	mov	r3, r0
   185b4:	mov	r0, r9
   185b6:	bl	179bc <rb_free_nodes@@Base+0x116>
   185ba:	movs	r3, #1
   185bc:	mov	r2, r6
   185be:	mov	r1, r4
   185c0:	mov	r0, sl
   185c2:	bl	208c8 <btrfs_inc_ref@@Base>
   185c6:	mov.w	r2, #266	; 0x10a
   185ca:	mov	r1, r8
   185cc:	mov	r3, r0
   185ce:	mov	r0, r9
   185d0:	bl	179bc <rb_free_nodes@@Base+0x116>
   185d4:	mov.w	r2, #256	; 0x100
   185d8:	movs	r3, #0
   185da:	strd	r2, r3, [sp, #8]
   185de:	mov	r0, sl
   185e0:	ldrb.w	r3, [r5, #196]	; 0xc4
   185e4:	str	r3, [sp, #0]
   185e6:	ldrd	r2, r3, [r5, #40]	; 0x28
   185ea:	bl	206e4 <btrfs_set_block_flags@@Base>
   185ee:	ldr	r1, [pc, #536]	; (18808 <__btrfs_cow_block@@Base+0x5a4>)
   185f0:	mov.w	r2, #282	; 0x11a
   185f4:	add	r1, pc
   185f6:	adds	r1, #176	; 0xb0
   185f8:	mov	r3, r0
   185fa:	ldr	r0, [pc, #528]	; (1880c <__btrfs_cow_block@@Base+0x5a8>)
   185fc:	add	r0, pc
   185fe:	bl	179bc <rb_free_nodes@@Base+0x116>
   18602:	ldr	r3, [r4, #0]
   18604:	uxtb.w	r8, r7
   18608:	mov.w	r9, #0
   1860c:	cmp	r3, r5
   1860e:	bne.w	1871e <__btrfs_cow_block@@Base+0x4ba>
   18612:	str	r6, [r4, #0]
   18614:	movs	r2, #0
   18616:	ldr	r3, [r6, #80]	; 0x50
   18618:	adds	r3, #1
   1861a:	str	r3, [r6, #80]	; 0x50
   1861c:	movs	r3, #0
   1861e:	ldr.w	r0, [r4, #447]	; 0x1bf
   18622:	ldr.w	r1, [r4, #451]	; 0x1c3
   18626:	strd	r2, r3, [sp, #32]
   1862a:	strd	r2, r3, [sp, #8]
   1862e:	ldr	r3, [r5, #76]	; 0x4c
   18630:	strd	r0, r1, [sp, #16]
   18634:	mov	r1, r4
   18636:	mov	r0, sl
   18638:	strd	r8, r9, [sp, #24]
   1863c:	str	r3, [sp, #0]
   1863e:	movs	r3, #0
   18640:	str	r3, [sp, #4]
   18642:	ldrd	r2, r3, [r5, #40]	; 0x28
   18646:	bl	20bf4 <btrfs_free_extent@@Base>
   1864a:	mov	r0, r5
   1864c:	bl	16bc8 <free_extent_buffer@@Base>
   18650:	mov	r0, r4
   18652:	bl	17e3c <add_root_to_dirty_list@@Base>
   18656:	ldr	r2, [r5, #68]	; 0x44
   18658:	add.w	r3, r5, #68	; 0x44
   1865c:	cmp	r3, r2
   1865e:	beq.n	18670 <__btrfs_cow_block@@Base+0x40c>
   18660:	ldr	r1, [r5, #72]	; 0x48
   18662:	mov	r0, r5
   18664:	str	r1, [r2, #4]
   18666:	str	r2, [r1, #0]
   18668:	strd	r3, r3, [r5, #68]	; 0x44
   1866c:	bl	16bc8 <free_extent_buffer@@Base>
   18670:	mov	r0, r5
   18672:	bl	16bc8 <free_extent_buffer@@Base>
   18676:	mov	r0, r6
   18678:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1867c:	ldr	r3, [sp, #52]	; 0x34
   1867e:	movs	r0, #0
   18680:	str	r6, [r3, #0]
   18682:	b.n	18334 <__btrfs_cow_block@@Base+0xd0>
   18684:	ldrd	r2, r3, [sp, #40]	; 0x28
   18688:	cmp	r3, r1
   1868a:	it	eq
   1868c:	cmpeq	r2, r0
   1868e:	bne.n	186ae <__btrfs_cow_block@@Base+0x44a>
   18690:	movs	r3, #1
   18692:	mov	r2, r6
   18694:	mov	r1, r4
   18696:	mov	r0, sl
   18698:	bl	208c8 <btrfs_inc_ref@@Base>
   1869c:	ldr	r1, [pc, #368]	; (18810 <__btrfs_cow_block@@Base+0x5ac>)
   1869e:	mov.w	r2, #276	; 0x114
   186a2:	add	r1, pc
   186a4:	adds	r1, #176	; 0xb0
   186a6:	mov	r3, r0
   186a8:	ldr	r0, [pc, #360]	; (18814 <__btrfs_cow_block@@Base+0x5b0>)
   186aa:	add	r0, pc
   186ac:	b.n	185fe <__btrfs_cow_block@@Base+0x39a>
   186ae:	movs	r3, #0
   186b0:	b.n	18692 <__btrfs_cow_block@@Base+0x42e>
   186b2:	orrs.w	r3, r8, r9
   186b6:	beq.n	18716 <__btrfs_cow_block@@Base+0x4b2>
   186b8:	ldr.w	r3, [r4, #451]	; 0x1c3
   186bc:	mov.w	r1, #4294967295	; 0xffffffff
   186c0:	ldr.w	r2, [r4, #447]	; 0x1bf
   186c4:	mvn.w	r0, #7
   186c8:	cmp	r3, r1
   186ca:	mov	r1, r4
   186cc:	it	eq
   186ce:	cmpeq	r2, r0
   186d0:	mov	r2, r6
   186d2:	mov	r0, sl
   186d4:	ldr.w	r9, [pc, #320]	; 18818 <__btrfs_cow_block@@Base+0x5b4>
   186d8:	ite	eq
   186da:	moveq	r3, #1
   186dc:	movne	r3, #0
   186de:	bl	208c8 <btrfs_inc_ref@@Base>
   186e2:	ldr.w	r8, [pc, #312]	; 1881c <__btrfs_cow_block@@Base+0x5b8>
   186e6:	add	r9, pc
   186e8:	movw	r2, #291	; 0x123
   186ec:	add.w	r9, r9, #176	; 0xb0
   186f0:	add	r8, pc
   186f2:	mov	r1, r9
   186f4:	mov	r3, r0
   186f6:	mov	r0, r8
   186f8:	bl	179bc <rb_free_nodes@@Base+0x116>
   186fc:	movs	r3, #1
   186fe:	mov	r2, r5
   18700:	mov	r1, r4
   18702:	mov	r0, sl
   18704:	bl	208d6 <btrfs_dec_ref@@Base>
   18708:	movw	r2, #293	; 0x125
   1870c:	mov	r1, r9
   1870e:	mov	r3, r0
   18710:	mov	r0, r8
   18712:	bl	179bc <rb_free_nodes@@Base+0x116>
   18716:	mov	r0, r5
   18718:	bl	1d4b4 <clean_tree_block@@Base>
   1871c:	b.n	18602 <__btrfs_cow_block@@Base+0x39e>
   1871e:	ldr	r3, [sp, #48]	; 0x30
   18720:	add.w	fp, fp, fp, lsl #5
   18724:	ldrd	r1, r2, [r6, #40]	; 0x28
   18728:	add	r3, fp
   1872a:	ldr	r7, [pc, #244]	; (18820 <__btrfs_cow_block@@Base+0x5bc>)
   1872c:	add.w	fp, r3, #197	; 0xc5
   18730:	ldr	r0, [pc, #240]	; (18824 <__btrfs_cow_block@@Base+0x5c0>)
   18732:	str.w	r1, [r3, #214]	; 0xd6
   18736:	add	r7, pc
   18738:	str.w	r2, [r3, #218]	; 0xda
   1873c:	adds	r7, #158	; 0x9e
   1873e:	ldrd	r2, r3, [sl, #8]
   18742:	add	r0, pc
   18744:	mov	r1, r7
   18746:	orrs	r3, r2
   18748:	mov.w	r2, #358	; 0x166
   1874c:	ite	eq
   1874e:	moveq	r3, #1
   18750:	movne	r3, #0
   18752:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   18756:	ldrd	r2, r3, [sl, #8]
   1875a:	ldr	r0, [sp, #48]	; 0x30
   1875c:	str.w	r2, [fp, #25]
   18760:	str.w	r3, [fp, #29]
   18764:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   18768:	ldr	r3, [sp, #48]	; 0x30
   1876a:	ldr.w	r0, [r3, #176]	; 0xb0
   1876e:	ldr.w	r1, [r3, #180]	; 0xb4
   18772:	ldrd	r2, r3, [sl, #8]
   18776:	cmp	r3, r1
   18778:	mov	r1, r7
   1877a:	it	eq
   1877c:	cmpeq	r2, r0
   1877e:	ldr	r0, [pc, #168]	; (18828 <__btrfs_cow_block@@Base+0x5c4>)
   18780:	mov.w	r2, #362	; 0x16a
   18784:	ite	ne
   18786:	movne	r3, #1
   18788:	moveq	r3, #0
   1878a:	add	r0, pc
   1878c:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   18790:	ldr.w	r0, [r4, #447]	; 0x1bf
   18794:	ldr.w	r1, [r4, #451]	; 0x1c3
   18798:	movs	r2, #0
   1879a:	movs	r3, #0
   1879c:	strd	r2, r3, [sp, #32]
   187a0:	strd	r2, r3, [sp, #8]
   187a4:	ldr	r3, [r5, #76]	; 0x4c
   187a6:	strd	r0, r1, [sp, #16]
   187aa:	mov	r1, r4
   187ac:	mov	r0, sl
   187ae:	strd	r8, r9, [sp, #24]
   187b2:	str	r3, [sp, #0]
   187b4:	movs	r3, #0
   187b6:	str	r3, [sp, #4]
   187b8:	ldrd	r2, r3, [r5, #40]	; 0x28
   187bc:	bl	20bf4 <btrfs_free_extent@@Base>
   187c0:	b.n	18656 <__btrfs_cow_block@@Base+0x3f2>
   187c2:	add	sp, #100	; 0x64
   187c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187c8:	ldmia	r3!, {r4}
   187ca:	movs	r4, r0
   187cc:	lsls	r4, r4, #8
   187ce:	movs	r0, r0
   187d0:	add	r8, r4
   187d2:	movs	r2, r0
   187d4:	subs	r6, #104	; 0x68
   187d6:	movs	r2, r0
   187d8:	add	r0, lr
   187da:	movs	r2, r0
   187dc:	subs	r6, #136	; 0x88
   187de:	movs	r2, r0
   187e0:	ldmia	r2, {r2, r3, r6}
   187e2:	movs	r4, r0
   187e4:	muls	r0, r3
   187e6:	movs	r2, r0
   187e8:	subs	r5, #165	; 0xa5
   187ea:	movs	r2, r0
   187ec:	cmn	r0, r5
   187ee:	movs	r2, r0
   187f0:	adds	r2, r5, r5
   187f2:	movs	r2, r0
   187f4:	ldr	r7, [pc, #992]	; (18bd8 <read_node_slot@@Base+0x22>)
   187f6:	movs	r2, r0
   187f8:	cmp	r6, r0
   187fa:	movs	r2, r0
   187fc:	subs	r5, #39	; 0x27
   187fe:	movs	r2, r0
   18800:	rors	r2, r4
   18802:	movs	r2, r0
   18804:	adds	r0, r5, r1
   18806:	movs	r2, r0
   18808:	adcs	r4, r4
   1880a:	movs	r2, r0
   1880c:	asrs	r0, r5, #31
   1880e:	movs	r2, r0
   18810:	lsls	r6, r6
   18812:	movs	r2, r0
   18814:	asrs	r2, r7, #28
   18816:	movs	r2, r0
   18818:	eors	r2, r6
   1881a:	movs	r2, r0
   1881c:	asrs	r4, r6, #27
   1881e:	movs	r2, r0
   18820:	ands	r2, r4
   18822:	movs	r2, r0
   18824:	subs	r1, #36	; 0x24
   18826:	movs	r2, r0
   18828:	subs	r2, #194	; 0xc2
   1882a:	movs	r2, r0

0001882c <btrfs_cow_block@@Base>:
   1882c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18830:	mov	r4, r2
   18832:	ldr.w	r2, [r1, #464]	; 0x1d0
   18836:	mov	r6, r0
   18838:	ldrd	r8, r9, [r0, #8]
   1883c:	mov	r5, r1
   1883e:	sub	sp, #24
   18840:	mov	r7, r3
   18842:	ldrd	r0, r1, [r2, #232]	; 0xe8
   18846:	ldr	r3, [pc, #184]	; (18900 <btrfs_cow_block@@Base+0xd4>)
   18848:	cmp	r9, r1
   1884a:	ldr.w	sl, [sp, #60]	; 0x3c
   1884e:	it	eq
   18850:	cmpeq	r8, r0
   18852:	add	r3, pc
   18854:	beq.n	18882 <btrfs_cow_block@@Base+0x56>
   18856:	ldr	r2, [pc, #172]	; (18904 <btrfs_cow_block@@Base+0xd8>)
   18858:	ldr	r3, [r3, r2]
   1885a:	ldr	r2, [pc, #172]	; (18908 <btrfs_cow_block@@Base+0xdc>)
   1885c:	strd	r0, r1, [sp, #8]
   18860:	movs	r1, #1
   18862:	add	r2, pc
   18864:	strd	r8, r9, [sp]
   18868:	ldr	r0, [r3, #0]
   1886a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1886e:	ldr	r1, [pc, #156]	; (1890c <btrfs_cow_block@@Base+0xe0>)
   18870:	ldr	r0, [pc, #156]	; (18910 <btrfs_cow_block@@Base+0xe4>)
   18872:	movs	r3, #1
   18874:	add	r1, pc
   18876:	movw	r2, #407	; 0x197
   1887a:	adds	r1, #195	; 0xc3
   1887c:	add	r0, pc
   1887e:	bl	179c6 <rb_free_nodes@@Base+0x120>
   18882:	ldrd	r2, r3, [r6, #8]
   18886:	ldr.w	r1, [r4, #180]	; 0xb4
   1888a:	ldr.w	r0, [r4, #176]	; 0xb0
   1888e:	cmp	r1, r3
   18890:	it	eq
   18892:	cmpeq	r0, r2
   18894:	bne.n	188d6 <btrfs_cow_block@@Base+0xaa>
   18896:	ldr.w	lr, [r4, #152]	; 0x98
   1889a:	mov.w	ip, #0
   1889e:	mov	r3, ip
   188a0:	and.w	r2, lr, #1
   188a4:	orrs	r3, r2
   188a6:	bne.n	188d6 <btrfs_cow_block@@Base+0xaa>
   188a8:	ldr.w	r3, [r5, #451]	; 0x1c3
   188ac:	mov.w	r1, #4294967295	; 0xffffffff
   188b0:	ldr.w	r2, [r5, #447]	; 0x1bf
   188b4:	mvn.w	r0, #7
   188b8:	cmp	r3, r1
   188ba:	it	eq
   188bc:	cmpeq	r2, r0
   188be:	beq.n	188ca <btrfs_cow_block@@Base+0x9e>
   188c0:	and.w	r2, lr, #2
   188c4:	mov	r3, ip
   188c6:	orrs	r3, r2
   188c8:	bne.n	188d6 <btrfs_cow_block@@Base+0xaa>
   188ca:	movs	r0, #0
   188cc:	str.w	r4, [sl]
   188d0:	add	sp, #24
   188d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   188d6:	movs	r2, #0
   188d8:	movs	r3, #0
   188da:	strd	r2, r3, [sp, #16]
   188de:	mov	r1, r5
   188e0:	ldrd	r3, r2, [r4, #40]	; 0x28
   188e4:	mov	r0, r6
   188e6:	str.w	sl, [sp, #4]
   188ea:	and.w	r3, r3, #3221225472	; 0xc0000000
   188ee:	strd	r3, r2, [sp, #8]
   188f2:	mov	r2, r4
   188f4:	ldr	r3, [sp, #56]	; 0x38
   188f6:	str	r3, [sp, #0]
   188f8:	mov	r3, r7
   188fa:	bl	18264 <__btrfs_cow_block@@Base>
   188fe:	b.n	188d0 <btrfs_cow_block@@Base+0xa4>
   18900:	stmia	r5!, {r1, r2, r4, r5}
   18902:	movs	r4, r0
   18904:	lsls	r4, r6, #8
   18906:	movs	r0, r0
   18908:	subs	r2, #28
   1890a:	movs	r2, r0
   1890c:	subs	r6, #228	; 0xe4
   1890e:	movs	r2, r0
   18910:	ldr	r6, [pc, #596]	; (18b68 <btrfs_bin_search@@Base+0x38>)
   18912:	movs	r2, r0

00018914 <btrfs_comp_cpu_keys@@Base>:
   18914:	push	{r4, r5, lr}
   18916:	ldr	r3, [r1, #4]
   18918:	ldr	r5, [r0, #4]
   1891a:	ldr	r4, [r0, #0]
   1891c:	ldr	r2, [r1, #0]
   1891e:	cmp	r3, r5
   18920:	it	eq
   18922:	cmpeq	r2, r4
   18924:	bcc.n	18966 <btrfs_comp_cpu_keys@@Base+0x52>
   18926:	cmp	r5, r3
   18928:	it	eq
   1892a:	cmpeq	r4, r2
   1892c:	bcc.n	18960 <btrfs_comp_cpu_keys@@Base+0x4c>
   1892e:	ldrb	r2, [r0, #8]
   18930:	ldrb	r3, [r1, #8]
   18932:	cmp	r2, r3
   18934:	bhi.n	18966 <btrfs_comp_cpu_keys@@Base+0x52>
   18936:	bcc.n	18960 <btrfs_comp_cpu_keys@@Base+0x4c>
   18938:	ldr.w	r5, [r0, #13]
   1893c:	ldr.w	r3, [r1, #13]
   18940:	ldr.w	r4, [r0, #9]
   18944:	ldr.w	r2, [r1, #9]
   18948:	cmp	r3, r5
   1894a:	it	eq
   1894c:	cmpeq	r2, r4
   1894e:	bcc.n	18966 <btrfs_comp_cpu_keys@@Base+0x52>
   18950:	cmp	r5, r3
   18952:	it	eq
   18954:	cmpeq	r4, r2
   18956:	ite	cc
   18958:	movcc.w	r0, #4294967295	; 0xffffffff
   1895c:	movcs	r0, #0
   1895e:	pop	{r4, r5, pc}
   18960:	mov.w	r0, #4294967295	; 0xffffffff
   18964:	b.n	1895e <btrfs_comp_cpu_keys@@Base+0x4a>
   18966:	movs	r0, #1
   18968:	b.n	1895e <btrfs_comp_cpu_keys@@Base+0x4a>
   1896a:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1896c:	ldr	r2, [pc, #76]	; (189bc <btrfs_comp_cpu_keys@@Base+0xa8>)
   1896e:	ldr	r3, [pc, #80]	; (189c0 <btrfs_comp_cpu_keys@@Base+0xac>)
   18970:	add	r2, pc
   18972:	ldr	r3, [r2, r3]
   18974:	ldr	r3, [r3, #0]
   18976:	str	r3, [sp, #20]
   18978:	mov.w	r3, #0
   1897c:	ldr.w	r3, [r0, #13]
   18980:	ldr.w	r2, [r0, #9]
   18984:	str.w	r3, [sp, #13]
   18988:	ldrb	r3, [r0, #8]
   1898a:	str.w	r2, [sp, #9]
   1898e:	ldr	r2, [r0, #0]
   18990:	strb.w	r3, [sp, #8]
   18994:	ldr	r3, [r0, #4]
   18996:	mov	r0, sp
   18998:	strd	r2, r3, [sp]
   1899c:	bl	18914 <btrfs_comp_cpu_keys@@Base>
   189a0:	ldr	r2, [pc, #32]	; (189c4 <btrfs_comp_cpu_keys@@Base+0xb0>)
   189a2:	ldr	r3, [pc, #28]	; (189c0 <btrfs_comp_cpu_keys@@Base+0xac>)
   189a4:	add	r2, pc
   189a6:	ldr	r3, [r2, r3]
   189a8:	ldr	r2, [r3, #0]
   189aa:	ldr	r3, [sp, #20]
   189ac:	eors	r2, r3
   189ae:	beq.n	189b4 <btrfs_comp_cpu_keys@@Base+0xa0>
   189b0:	blx	86b8 <__stack_chk_fail@plt>
   189b4:	add	sp, #28
   189b6:	ldr.w	pc, [sp], #4
   189ba:	nop
   189bc:	stmia	r4!, {r3, r4}
   189be:	movs	r4, r0
   189c0:	lsls	r4, r4, #8
   189c2:	movs	r0, r0
   189c4:	stmia	r3!, {r2, r5, r6, r7}
   189c6:	movs	r4, r0

000189c8 <btrfs_check_node@@Base>:
   189c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189cc:	mov	r4, r2
   189ce:	ldr	r2, [pc, #340]	; (18b24 <btrfs_check_node@@Base+0x15c>)
   189d0:	sub	sp, #92	; 0x5c
   189d2:	ldr	r3, [pc, #340]	; (18b28 <btrfs_check_node@@Base+0x160>)
   189d4:	mov	r7, r0
   189d6:	add	r2, pc
   189d8:	ldr.w	r8, [r4, #192]	; 0xc0
   189dc:	mov	r5, r1
   189de:	ldr	r3, [r2, r3]
   189e0:	ldr	r3, [r3, #0]
   189e2:	str	r3, [sp, #84]	; 0x54
   189e4:	mov.w	r3, #0
   189e8:	cmp.w	r8, #0
   189ec:	beq.n	18a88 <btrfs_check_node@@Base+0xc0>
   189ee:	ldr.w	r2, [r0, #384]	; 0x180
   189f2:	ldr	r3, [pc, #300]	; (18b20 <btrfs_check_node@@Base+0x158>)
   189f4:	subs	r2, #101	; 0x65
   189f6:	umull	r2, r3, r2, r3
   189fa:	cmp.w	r8, r3, lsr #3
   189fe:	bhi.n	18a88 <btrfs_check_node@@Base+0xc0>
   18a00:	cbnz	r1, 18a1e <btrfs_check_node@@Base+0x56>
   18a02:	sub.w	sl, r8, #2
   18a06:	add.w	r9, sp, #44	; 0x2c
   18a0a:	add.w	fp, sp, #64	; 0x40
   18a0e:	movs	r6, #0
   18a10:	cmp.w	r8, #1
   18a14:	beq.n	18a1a <btrfs_check_node@@Base+0x52>
   18a16:	cmp	sl, r6
   18a18:	bhi.n	18a42 <btrfs_check_node@@Base+0x7a>
   18a1a:	movs	r6, #0
   18a1c:	b.n	18ad8 <btrfs_check_node@@Base+0x110>
   18a1e:	ldrb	r3, [r1, #8]
   18a20:	cmp	r3, #0
   18a22:	beq.n	18a02 <btrfs_check_node@@Base+0x3a>
   18a24:	add	r1, sp, #44	; 0x2c
   18a26:	movs	r2, #0
   18a28:	mov	r0, r4
   18a2a:	str	r1, [sp, #20]
   18a2c:	bl	178fa <rb_free_nodes@@Base+0x54>
   18a30:	ldr	r1, [sp, #20]
   18a32:	movs	r2, #17
   18a34:	mov	r0, r5
   18a36:	blx	8650 <memcmp@plt+0x4>
   18a3a:	cmp	r0, #0
   18a3c:	beq.n	18a02 <btrfs_check_node@@Base+0x3a>
   18a3e:	movs	r6, #2
   18a40:	b.n	18a8a <btrfs_check_node@@Base+0xc2>
   18a42:	mov	r2, r6
   18a44:	adds	r6, #1
   18a46:	mov	r1, r9
   18a48:	mov	r0, r4
   18a4a:	bl	178fa <rb_free_nodes@@Base+0x54>
   18a4e:	mov	r2, r6
   18a50:	mov	r1, fp
   18a52:	mov	r0, r4
   18a54:	bl	178fa <rb_free_nodes@@Base+0x54>
   18a58:	ldr.w	r3, [sp, #77]	; 0x4d
   18a5c:	ldr.w	r2, [sp, #73]	; 0x49
   18a60:	add	r1, sp, #24
   18a62:	mov	r0, r9
   18a64:	str.w	r3, [sp, #37]	; 0x25
   18a68:	ldrb.w	r3, [sp, #72]	; 0x48
   18a6c:	str.w	r2, [sp, #33]	; 0x21
   18a70:	strb.w	r3, [sp, #32]
   18a74:	ldrd	r2, r3, [sp, #64]	; 0x40
   18a78:	strd	r2, r3, [sp, #24]
   18a7c:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   18a80:	cmp	r0, #0
   18a82:	blt.n	18a10 <btrfs_check_node@@Base+0x48>
   18a84:	movs	r6, #3
   18a86:	b.n	18a8a <btrfs_check_node@@Base+0xc2>
   18a88:	movs	r6, #1
   18a8a:	ldr.w	r3, [r4, #188]	; 0xbc
   18a8e:	ldr.w	r2, [r4, #184]	; 0xb8
   18a92:	cmp	r3, #0
   18a94:	it	eq
   18a96:	cmpeq	r2, #2
   18a98:	bne.n	18ad8 <btrfs_check_node@@Base+0x110>
   18a9a:	add.w	r8, sp, #33	; 0x21
   18a9e:	cbz	r5, 18aec <btrfs_check_node@@Base+0x124>
   18aa0:	ldr.w	r3, [r5, #13]
   18aa4:	ldr.w	r2, [r5, #9]
   18aa8:	str.w	r3, [r8, #4]
   18aac:	ldrb	r3, [r5, #8]
   18aae:	str.w	r2, [sp, #33]	; 0x21
   18ab2:	ldr	r2, [r5, #0]
   18ab4:	strb.w	r3, [sp, #32]
   18ab8:	ldr	r3, [r5, #4]
   18aba:	strd	r2, r3, [sp, #24]
   18abe:	ldrb.w	r3, [r4, #196]	; 0xc4
   18ac2:	add	r1, sp, #24
   18ac4:	mov	r0, r7
   18ac6:	str	r3, [sp, #8]
   18ac8:	ldr	r3, [r4, #76]	; 0x4c
   18aca:	str	r3, [sp, #0]
   18acc:	movs	r3, #0
   18ace:	str	r3, [sp, #4]
   18ad0:	ldrd	r2, r3, [r4, #40]	; 0x28
   18ad4:	bl	2d590 <btrfs_add_corrupt_extent_record@@Base>
   18ad8:	ldr	r2, [pc, #80]	; (18b2c <btrfs_check_node@@Base+0x164>)
   18ada:	ldr	r3, [pc, #76]	; (18b28 <btrfs_check_node@@Base+0x160>)
   18adc:	add	r2, pc
   18ade:	ldr	r3, [r2, r3]
   18ae0:	ldr	r2, [r3, #0]
   18ae2:	ldr	r3, [sp, #84]	; 0x54
   18ae4:	eors	r2, r3
   18ae6:	beq.n	18b18 <btrfs_check_node@@Base+0x150>
   18ae8:	blx	86b8 <__stack_chk_fail@plt>
   18aec:	mov	r2, r5
   18aee:	add	r1, sp, #64	; 0x40
   18af0:	mov	r0, r4
   18af2:	bl	178fa <rb_free_nodes@@Base+0x54>
   18af6:	ldr.w	r3, [sp, #77]	; 0x4d
   18afa:	ldr.w	r2, [sp, #73]	; 0x49
   18afe:	str.w	r3, [r8, #4]
   18b02:	ldrb.w	r3, [sp, #72]	; 0x48
   18b06:	str.w	r2, [sp, #33]	; 0x21
   18b0a:	strb.w	r3, [sp, #32]
   18b0e:	ldrd	r2, r3, [sp, #64]	; 0x40
   18b12:	strd	r2, r3, [sp, #24]
   18b16:	b.n	18abe <btrfs_check_node@@Base+0xf6>
   18b18:	mov	r0, r6
   18b1a:	add	sp, #92	; 0x5c
   18b1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b20:	strh	r1, [r4, #30]
   18b22:	subs	r6, #15
   18b24:	stmia	r3!, {r1, r4, r5, r7}
   18b26:	movs	r4, r0
   18b28:	lsls	r4, r4, #8
   18b2a:	movs	r0, r0
   18b2c:	stmia	r2!, {r2, r3, r5, r7}
   18b2e:	movs	r4, r0

00018b30 <btrfs_bin_search@@Base>:
   18b30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18b34:	mov	r6, r1
   18b36:	ldr.w	r5, [r0, #192]	; 0xc0
   18b3a:	mov	r7, r3
   18b3c:	mov	r9, r2
   18b3e:	cbnz	r2, 18b54 <btrfs_bin_search@@Base+0x24>
   18b40:	add.w	r8, r0, #96	; 0x60
   18b44:	mov.w	sl, #25
   18b48:	cmp	r9, r5
   18b4a:	blt.n	18b86 <btrfs_bin_search@@Base+0x56>
   18b4c:	movs	r0, #1
   18b4e:	str.w	r9, [r7]
   18b52:	b.n	18bae <btrfs_bin_search@@Base+0x7e>
   18b54:	add.w	r8, r0, #96	; 0x60
   18b58:	mov.w	r9, #0
   18b5c:	cmp	r9, r5
   18b5e:	bge.n	18b4c <btrfs_bin_search@@Base+0x1c>
   18b60:	add.w	r4, r9, r5
   18b64:	mov	r1, r6
   18b66:	add.w	r4, r4, r4, lsr #31
   18b6a:	asrs	r4, r4, #1
   18b6c:	add.w	r0, r4, r4, lsl #5
   18b70:	adds	r0, #101	; 0x65
   18b72:	add	r0, r8
   18b74:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   18b78:	cmp	r0, #0
   18b7a:	bge.n	18bb2 <btrfs_bin_search@@Base+0x82>
   18b7c:	add.w	r9, r4, #1
   18b80:	mov	r4, r5
   18b82:	mov	r5, r4
   18b84:	b.n	18b5c <btrfs_bin_search@@Base+0x2c>
   18b86:	add.w	r4, r9, r5
   18b8a:	mov	r1, r6
   18b8c:	add.w	r4, r4, r4, lsr #31
   18b90:	asrs	r4, r4, #1
   18b92:	mla	r0, sl, r4, r8
   18b96:	adds	r0, #101	; 0x65
   18b98:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   18b9c:	cmp	r0, #0
   18b9e:	bge.n	18baa <btrfs_bin_search@@Base+0x7a>
   18ba0:	add.w	r9, r4, #1
   18ba4:	mov	r4, r5
   18ba6:	mov	r5, r4
   18ba8:	b.n	18b48 <btrfs_bin_search@@Base+0x18>
   18baa:	bne.n	18ba6 <btrfs_bin_search@@Base+0x76>
   18bac:	str	r4, [r7, #0]
   18bae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18bb2:	bne.n	18b82 <btrfs_bin_search@@Base+0x52>
   18bb4:	b.n	18bac <btrfs_bin_search@@Base+0x7c>

00018bb6 <read_node_slot@@Base>:
   18bb6:	push	{r4, r5, r6, r7, lr}
   18bb8:	subs	r6, r2, #0
   18bba:	sub	sp, #20
   18bbc:	mov	r5, r1
   18bbe:	blt.n	18c24 <read_node_slot@@Base+0x6e>
   18bc0:	ldr.w	r3, [r1, #192]	; 0xc0
   18bc4:	cmp	r6, r3
   18bc6:	bcs.n	18c24 <read_node_slot@@Base+0x6e>
   18bc8:	ldrb.w	r7, [r1, #196]	; 0xc4
   18bcc:	cbz	r7, 18c24 <read_node_slot@@Base+0x6e>
   18bce:	add.w	r3, r6, r6, lsl #5
   18bd2:	add	r3, r1
   18bd4:	adds	r3, #197	; 0xc5
   18bd6:	mov	r1, r3
   18bd8:	ldr.w	r4, [r3, #25]!
   18bdc:	ldr.w	r2, [r1, #17]!
   18be0:	ldr	r3, [r3, #4]
   18be2:	strd	r4, r3, [sp]
   18be6:	ldr	r3, [r1, #4]
   18be8:	bl	1d62c <read_tree_block@@Base>
   18bec:	mov	r4, r0
   18bee:	bl	17954 <rb_free_nodes@@Base+0xae>
   18bf2:	cbz	r0, 18c1e <read_node_slot@@Base+0x68>
   18bf4:	ldrb.w	r3, [r4, #196]	; 0xc4
   18bf8:	subs	r7, #1
   18bfa:	cmp	r3, r7
   18bfc:	beq.n	18c26 <read_node_slot@@Base+0x70>
   18bfe:	str	r3, [sp, #8]
   18c00:	ldrb.w	r3, [r5, #196]	; 0xc4
   18c04:	ldr	r0, [pc, #36]	; (18c2c <read_node_slot@@Base+0x76>)
   18c06:	ldr.w	r2, [r5, #144]	; 0x90
   18c0a:	add	r0, pc
   18c0c:	strd	r6, r3, [sp]
   18c10:	ldr.w	r3, [r5, #148]	; 0x94
   18c14:	bl	17424 <__btrfs_error@@Base>
   18c18:	mov	r0, r4
   18c1a:	bl	16bc8 <free_extent_buffer@@Base>
   18c1e:	mvn.w	r4, #4
   18c22:	b.n	18c26 <read_node_slot@@Base+0x70>
   18c24:	movs	r4, #0
   18c26:	mov	r0, r4
   18c28:	add	sp, #20
   18c2a:	pop	{r4, r5, r6, r7, pc}
   18c2c:	adds	r6, #141	; 0x8d
   18c2e:	movs	r2, r0

00018c30 <reada_for_search@@Base>:
   18c30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c34:	sub	sp, #92	; 0x5c
   18c36:	ldr	r4, [pc, #452]	; (18dfc <reada_for_search@@Base+0x1cc>)
   18c38:	cmp	r2, #1
   18c3a:	str	r1, [sp, #32]
   18c3c:	mov	r9, r0
   18c3e:	ldr	r1, [pc, #448]	; (18e00 <reada_for_search@@Base+0x1d0>)
   18c40:	add	r4, pc
   18c42:	ldr	r1, [r4, r1]
   18c44:	ldr	r1, [r1, #0]
   18c46:	str	r1, [sp, #84]	; 0x54
   18c48:	mov.w	r1, #0
   18c4c:	bne.n	18c8a <reada_for_search@@Base+0x5a>
   18c4e:	ldr	r2, [sp, #32]
   18c50:	ldr	r2, [r2, #4]
   18c52:	str	r2, [sp, #24]
   18c54:	cbz	r2, 18c8a <reada_for_search@@Base+0x5a>
   18c56:	ldr	r2, [sp, #32]
   18c58:	mov	r6, r3
   18c5a:	ldr	r3, [sp, #24]
   18c5c:	ldrsb.w	r2, [r2, #64]	; 0x40
   18c60:	adds	r3, #96	; 0x60
   18c62:	str	r3, [sp, #36]	; 0x24
   18c64:	add.w	r3, r6, r6, lsl #5
   18c68:	str	r2, [sp, #56]	; 0x38
   18c6a:	ldr	r2, [sp, #36]	; 0x24
   18c6c:	add	r3, r2
   18c6e:	ldr.w	sl, [r3, #118]!
   18c72:	ldr.w	fp, [r3, #4]
   18c76:	mov	r2, sl
   18c78:	ldr.w	r3, [r0, #384]	; 0x180
   18c7c:	str	r3, [sp, #0]
   18c7e:	mov	r3, fp
   18c80:	bl	1c1d0 <btrfs_find_tree_block@@Base>
   18c84:	cbz	r0, 18ca0 <reada_for_search@@Base+0x70>
   18c86:	bl	16bc8 <free_extent_buffer@@Base>
   18c8a:	ldr	r2, [pc, #376]	; (18e04 <reada_for_search@@Base+0x1d4>)
   18c8c:	ldr	r3, [pc, #368]	; (18e00 <reada_for_search@@Base+0x1d0>)
   18c8e:	add	r2, pc
   18c90:	ldr	r3, [r2, r3]
   18c92:	ldr	r2, [r3, #0]
   18c94:	ldr	r3, [sp, #84]	; 0x54
   18c96:	eors	r2, r3
   18c98:	beq.w	18df6 <reada_for_search@@Base+0x1c6>
   18c9c:	blx	86b8 <__stack_chk_fail@plt>
   18ca0:	ldr	r3, [sp, #24]
   18ca2:	movs	r4, #0
   18ca4:	ldr.w	r3, [r3, #192]	; 0xc0
   18ca8:	strd	sl, fp, [sp, #8]
   18cac:	str	r0, [sp, #28]
   18cae:	str	r3, [sp, #60]	; 0x3c
   18cb0:	movs	r3, #0
   18cb2:	strd	r3, r4, [sp, #16]
   18cb6:	ldr	r3, [sp, #56]	; 0x38
   18cb8:	cmp	r3, #0
   18cba:	bge.n	18d56 <reada_for_search@@Base+0x126>
   18cbc:	cmp	r6, #0
   18cbe:	beq.n	18c8a <reada_for_search@@Base+0x5a>
   18cc0:	subs	r6, #1
   18cc2:	ldr	r3, [sp, #32]
   18cc4:	ldrsb.w	r3, [r3, #64]	; 0x40
   18cc8:	cmp	r3, #0
   18cca:	blt.n	18d62 <reada_for_search@@Base+0x132>
   18ccc:	ldr	r2, [sp, #36]	; 0x24
   18cce:	add.w	r3, r6, r6, lsl #5
   18cd2:	adds	r3, #101	; 0x65
   18cd4:	add	r3, r2
   18cd6:	mov	r2, r3
   18cd8:	ldr.w	r4, [r2, #17]!
   18cdc:	ldr	r5, [r2, #4]
   18cde:	cmp	r5, fp
   18ce0:	it	eq
   18ce2:	cmpeq	r4, sl
   18ce4:	bcs.n	18d86 <reada_for_search@@Base+0x156>
   18ce6:	subs.w	r2, sl, r4
   18cea:	str	r2, [sp, #40]	; 0x28
   18cec:	sbc.w	r2, fp, r5
   18cf0:	str	r2, [sp, #44]	; 0x2c
   18cf2:	ldrd	r7, r8, [sp, #40]	; 0x28
   18cf6:	movs	r2, #0
   18cf8:	mov.w	r1, #32768	; 0x8000
   18cfc:	cmp	r2, r8
   18cfe:	it	eq
   18d00:	cmpeq	r1, r7
   18d02:	bcs.n	18db2 <reada_for_search@@Base+0x182>
   18d04:	ldrd	r1, r2, [sp, #8]
   18d08:	cmp	r2, r5
   18d0a:	it	eq
   18d0c:	cmpeq	r1, r4
   18d0e:	bcc.n	18d92 <reada_for_search@@Base+0x162>
   18d10:	ldr	r3, [sp, #28]
   18d12:	adds	r3, #1
   18d14:	str	r3, [sp, #28]
   18d16:	ldr	r3, [sp, #32]
   18d18:	ldrsb.w	r3, [r3, #64]	; 0x40
   18d1c:	cmp	r3, #1
   18d1e:	bgt.n	18dda <reada_for_search@@Base+0x1aa>
   18d20:	ldrd	r0, r1, [sp, #16]
   18d24:	movs	r3, #0
   18d26:	mov.w	r2, #262144	; 0x40000
   18d2a:	cmp	r3, r1
   18d2c:	it	eq
   18d2e:	cmpeq	r2, r0
   18d30:	bcc.n	18c8a <reada_for_search@@Base+0x5a>
   18d32:	ldr	r3, [sp, #28]
   18d34:	cmp	r3, #32
   18d36:	bhi.n	18c8a <reada_for_search@@Base+0x5a>
   18d38:	cmp	r5, fp
   18d3a:	ldrd	r2, r3, [sp, #8]
   18d3e:	it	eq
   18d40:	cmpeq	r4, sl
   18d42:	itt	cc
   18d44:	movcc	sl, r4
   18d46:	movcc	fp, r5
   18d48:	cmp	r3, r5
   18d4a:	it	eq
   18d4c:	cmpeq	r2, r4
   18d4e:	bcs.n	18cb6 <reada_for_search@@Base+0x86>
   18d50:	strd	r4, r5, [sp, #8]
   18d54:	b.n	18cb6 <reada_for_search@@Base+0x86>
   18d56:	beq.n	18cc2 <reada_for_search@@Base+0x92>
   18d58:	ldr	r3, [sp, #60]	; 0x3c
   18d5a:	adds	r6, #1
   18d5c:	cmp	r6, r3
   18d5e:	bcc.n	18cc2 <reada_for_search@@Base+0x92>
   18d60:	b.n	18c8a <reada_for_search@@Base+0x5a>
   18d62:	ldrd	r3, r4, [sp, #128]	; 0x80
   18d66:	orrs	r3, r4
   18d68:	beq.n	18ccc <reada_for_search@@Base+0x9c>
   18d6a:	ldr	r0, [sp, #24]
   18d6c:	add	r1, sp, #64	; 0x40
   18d6e:	mov	r2, r6
   18d70:	bl	178fa <rb_free_nodes@@Base+0x54>
   18d74:	ldrd	r2, r3, [sp, #64]	; 0x40
   18d78:	ldrd	r0, r1, [sp, #128]	; 0x80
   18d7c:	cmp	r1, r3
   18d7e:	it	eq
   18d80:	cmpeq	r0, r2
   18d82:	beq.n	18ccc <reada_for_search@@Base+0x9c>
   18d84:	b.n	18c8a <reada_for_search@@Base+0x5a>
   18d86:	ldrd	r1, r2, [sp, #8]
   18d8a:	cmp	r2, r5
   18d8c:	it	eq
   18d8e:	cmpeq	r1, r4
   18d90:	bcs.n	18db2 <reada_for_search@@Base+0x182>
   18d92:	ldr	r2, [sp, #8]
   18d94:	mov.w	r1, #32768	; 0x8000
   18d98:	subs	r2, r4, r2
   18d9a:	str	r2, [sp, #48]	; 0x30
   18d9c:	ldr	r2, [sp, #12]
   18d9e:	sbc.w	r2, r5, r2
   18da2:	str	r2, [sp, #52]	; 0x34
   18da4:	ldrd	r7, r8, [sp, #48]	; 0x30
   18da8:	movs	r2, #0
   18daa:	cmp	r2, r8
   18dac:	it	eq
   18dae:	cmpeq	r1, r7
   18db0:	bcc.n	18d10 <reada_for_search@@Base+0xe0>
   18db2:	ldr.w	r2, [r3, #25]!
   18db6:	mov	r0, r9
   18db8:	ldr	r3, [r3, #4]
   18dba:	strd	r2, r3, [sp]
   18dbe:	mov	r2, r4
   18dc0:	mov	r3, r5
   18dc2:	bl	1d4dc <readahead_tree_block@@Base>
   18dc6:	ldrd	r1, r2, [sp, #16]
   18dca:	ldr.w	r3, [r9, #384]	; 0x180
   18dce:	adds	r1, r1, r3
   18dd0:	adc.w	r2, r2, #0
   18dd4:	strd	r1, r2, [sp, #16]
   18dd8:	b.n	18d10 <reada_for_search@@Base+0xe0>
   18dda:	ldrd	r0, r1, [sp, #16]
   18dde:	movs	r3, #0
   18de0:	mov.w	r2, #1048576	; 0x100000
   18de4:	cmp	r3, r1
   18de6:	it	eq
   18de8:	cmpeq	r2, r0
   18dea:	bcc.w	18c8a <reada_for_search@@Base+0x5a>
   18dee:	ldr	r3, [sp, #28]
   18df0:	cmp	r3, #129	; 0x81
   18df2:	bne.n	18d38 <reada_for_search@@Base+0x108>
   18df4:	b.n	18c8a <reada_for_search@@Base+0x5a>
   18df6:	add	sp, #92	; 0x5c
   18df8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dfc:	stmia	r1!, {r3, r6}
   18dfe:	movs	r4, r0
   18e00:	lsls	r4, r4, #8
   18e02:	movs	r0, r0
   18e04:	stmia	r0!, {r1, r3, r4, r5, r6, r7}
   18e06:	movs	r4, r0

00018e08 <btrfs_fixup_low_keys@@Base>:
   18e08:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18e0c:	add.w	r4, r1, r3, lsl #2
   18e10:	mov	r6, r2
   18e12:	mov	r5, r3
   18e14:	cmp	r5, #7
   18e16:	ble.n	18e1c <btrfs_fixup_low_keys@@Base+0x14>
   18e18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18e1c:	ldr	r0, [r4, #0]
   18e1e:	mov	r8, r4
   18e20:	ldr	r7, [r4, #32]
   18e22:	cmp	r0, #0
   18e24:	beq.n	18e18 <btrfs_fixup_low_keys@@Base+0x10>
   18e26:	mov	r2, r7
   18e28:	mov	r1, r6
   18e2a:	bl	178d6 <rb_free_nodes@@Base+0x30>
   18e2e:	ldr.w	r0, [r8]
   18e32:	adds	r4, #4
   18e34:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   18e38:	cmp	r7, #0
   18e3a:	bne.n	18e18 <btrfs_fixup_low_keys@@Base+0x10>
   18e3c:	adds	r5, #1
   18e3e:	b.n	18e14 <btrfs_fixup_low_keys@@Base+0xc>

00018e40 <btrfs_set_item_key_safe@@Base>:
   18e40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18e44:	mov	r5, r2
   18e46:	ldr	r2, [pc, #188]	; (18f04 <btrfs_set_item_key_safe@@Base+0xc4>)
   18e48:	sub	sp, #28
   18e4a:	ldr	r3, [pc, #188]	; (18f08 <btrfs_set_item_key_safe@@Base+0xc8>)
   18e4c:	mov	r9, r0
   18e4e:	add	r2, pc
   18e50:	ldr	r4, [r1, #32]
   18e52:	ldr.w	r8, [r1]
   18e56:	mov	r7, r1
   18e58:	ldr	r3, [r2, r3]
   18e5a:	cmp	r4, #0
   18e5c:	mov	r6, sp
   18e5e:	ldr	r3, [r3, #0]
   18e60:	str	r3, [sp, #20]
   18e62:	mov.w	r3, #0
   18e66:	bgt.n	18ea6 <btrfs_set_item_key_safe@@Base+0x66>
   18e68:	ldr.w	r3, [r8, #192]	; 0xc0
   18e6c:	subs	r3, #1
   18e6e:	cmp	r3, r4
   18e70:	bhi.n	18ed4 <btrfs_set_item_key_safe@@Base+0x94>
   18e72:	ldr.w	r3, [r5, #13]
   18e76:	mov	r0, r8
   18e78:	ldr.w	r2, [r5, #9]
   18e7c:	mov	r1, r6
   18e7e:	str.w	r3, [sp, #13]
   18e82:	ldrb	r3, [r5, #8]
   18e84:	str.w	r2, [sp, #9]
   18e88:	ldr	r2, [r5, #0]
   18e8a:	strb.w	r3, [sp, #8]
   18e8e:	ldr	r3, [r5, #4]
   18e90:	strd	r2, r3, [sp]
   18e94:	mov	r2, r4
   18e96:	bl	178e2 <rb_free_nodes@@Base+0x3c>
   18e9a:	mov	r0, r8
   18e9c:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   18ea0:	cbz	r4, 18eec <btrfs_set_item_key_safe@@Base+0xac>
   18ea2:	movs	r4, #0
   18ea4:	b.n	18ec0 <btrfs_set_item_key_safe@@Base+0x80>
   18ea6:	subs	r2, r4, #1
   18ea8:	mov	r1, r6
   18eaa:	mov	r0, r8
   18eac:	bl	178ee <rb_free_nodes@@Base+0x48>
   18eb0:	mov	r1, r5
   18eb2:	mov	r0, r6
   18eb4:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   18eb8:	cmp	r0, #0
   18eba:	blt.n	18e68 <btrfs_set_item_key_safe@@Base+0x28>
   18ebc:	mov.w	r4, #4294967295	; 0xffffffff
   18ec0:	ldr	r2, [pc, #72]	; (18f0c <btrfs_set_item_key_safe@@Base+0xcc>)
   18ec2:	ldr	r3, [pc, #68]	; (18f08 <btrfs_set_item_key_safe@@Base+0xc8>)
   18ec4:	add	r2, pc
   18ec6:	ldr	r3, [r2, r3]
   18ec8:	ldr	r2, [r3, #0]
   18eca:	ldr	r3, [sp, #20]
   18ecc:	eors	r2, r3
   18ece:	beq.n	18efa <btrfs_set_item_key_safe@@Base+0xba>
   18ed0:	blx	86b8 <__stack_chk_fail@plt>
   18ed4:	adds	r2, r4, #1
   18ed6:	mov	r1, r6
   18ed8:	mov	r0, r8
   18eda:	bl	178ee <rb_free_nodes@@Base+0x48>
   18ede:	mov	r1, r5
   18ee0:	mov	r0, r6
   18ee2:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   18ee6:	cmp	r0, #0
   18ee8:	bgt.n	18e72 <btrfs_set_item_key_safe@@Base+0x32>
   18eea:	b.n	18ebc <btrfs_set_item_key_safe@@Base+0x7c>
   18eec:	movs	r3, #1
   18eee:	mov	r2, r6
   18ef0:	mov	r1, r7
   18ef2:	mov	r0, r9
   18ef4:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   18ef8:	b.n	18ec0 <btrfs_set_item_key_safe@@Base+0x80>
   18efa:	mov	r0, r4
   18efc:	add	sp, #28
   18efe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18f02:	nop
   18f04:	itte	cc
   18f06:	movcc	r4, r0
   18f08:	lslcc	r4, r4, #8
   18f0a:	movcs	r0, r0
   18f0c:	bkpt	0x00c4
   18f0e:	movs	r4, r0

00018f10 <btrfs_set_item_key_unsafe@@Base>:
   18f10:	push	{r4, r5, r6, r7, lr}
   18f12:	mov	r4, r1
   18f14:	ldr	r1, [pc, #108]	; (18f84 <btrfs_set_item_key_unsafe@@Base+0x74>)
   18f16:	sub	sp, #36	; 0x24
   18f18:	ldr	r3, [pc, #108]	; (18f88 <btrfs_set_item_key_unsafe@@Base+0x78>)
   18f1a:	add	r6, sp, #8
   18f1c:	add	r1, pc
   18f1e:	ldr	r7, [r4, #32]
   18f20:	mov	r5, r0
   18f22:	ldr	r0, [r4, #0]
   18f24:	ldr	r3, [r1, r3]
   18f26:	ldr	r3, [r3, #0]
   18f28:	str	r3, [sp, #28]
   18f2a:	mov.w	r3, #0
   18f2e:	ldr.w	r3, [r2, #13]
   18f32:	ldr.w	r1, [r2, #9]
   18f36:	str	r0, [sp, #4]
   18f38:	str.w	r3, [sp, #21]
   18f3c:	ldrb	r3, [r2, #8]
   18f3e:	str.w	r1, [sp, #17]
   18f42:	ldr	r1, [r2, #0]
   18f44:	strb.w	r3, [sp, #16]
   18f48:	ldr	r3, [r2, #4]
   18f4a:	mov	r2, r7
   18f4c:	strd	r1, r3, [sp, #8]
   18f50:	mov	r1, r6
   18f52:	bl	178e2 <rb_free_nodes@@Base+0x3c>
   18f56:	ldr	r0, [sp, #4]
   18f58:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   18f5c:	cbnz	r7, 18f6a <btrfs_set_item_key_unsafe@@Base+0x5a>
   18f5e:	movs	r3, #1
   18f60:	mov	r2, r6
   18f62:	mov	r1, r4
   18f64:	mov	r0, r5
   18f66:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   18f6a:	ldr	r2, [pc, #32]	; (18f8c <btrfs_set_item_key_unsafe@@Base+0x7c>)
   18f6c:	ldr	r3, [pc, #24]	; (18f88 <btrfs_set_item_key_unsafe@@Base+0x78>)
   18f6e:	add	r2, pc
   18f70:	ldr	r3, [r2, r3]
   18f72:	ldr	r2, [r3, #0]
   18f74:	ldr	r3, [sp, #28]
   18f76:	eors	r2, r3
   18f78:	beq.n	18f7e <btrfs_set_item_key_unsafe@@Base+0x6e>
   18f7a:	blx	86b8 <__stack_chk_fail@plt>
   18f7e:	add	sp, #36	; 0x24
   18f80:	pop	{r4, r5, r6, r7, pc}
   18f82:	nop
   18f84:	bkpt	0x006c
   18f86:	movs	r4, r0
   18f88:	lsls	r4, r4, #8
   18f8a:	movs	r0, r0
   18f8c:	bkpt	0x001a
   18f8e:	movs	r4, r0

00018f90 <btrfs_leaf_free_space@@Base>:
   18f90:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   18f94:	mov	r4, r0
   18f96:	ldr	r3, [r0, #92]	; 0x5c
   18f98:	ldr	r7, [pc, #104]	; (19004 <btrfs_leaf_free_space@@Base+0x74>)
   18f9a:	ldr.w	r6, [r0, #192]	; 0xc0
   18f9e:	add	r7, pc
   18fa0:	cbz	r3, 18fae <btrfs_leaf_free_space@@Base+0x1e>
   18fa2:	ldr.w	r3, [r3, #384]	; 0x180
   18fa6:	ldr	r2, [r0, #76]	; 0x4c
   18fa8:	subs	r3, r3, r2
   18faa:	it	ne
   18fac:	movne	r3, #1
   18fae:	ldr	r1, [pc, #88]	; (19008 <btrfs_leaf_free_space@@Base+0x78>)
   18fb0:	movw	r2, #1767	; 0x6e7
   18fb4:	ldr	r0, [pc, #84]	; (1900c <btrfs_leaf_free_space@@Base+0x7c>)
   18fb6:	add	r1, pc
   18fb8:	adds	r1, #211	; 0xd3
   18fba:	add	r0, pc
   18fbc:	bl	179bc <rb_free_nodes@@Base+0x116>
   18fc0:	ldr	r3, [r4, #76]	; 0x4c
   18fc2:	mov	r2, r6
   18fc4:	movs	r1, #0
   18fc6:	mov	r0, r4
   18fc8:	sub.w	r8, r3, #101	; 0x65
   18fcc:	bl	17d08 <rb_free_nodes@@Base+0x462>
   18fd0:	subs.w	r5, r8, r0
   18fd4:	bpl.n	18ffc <btrfs_leaf_free_space@@Base+0x6c>
   18fd6:	ldr	r3, [pc, #56]	; (19010 <btrfs_leaf_free_space@@Base+0x80>)
   18fd8:	mov	r2, r6
   18fda:	movs	r1, #0
   18fdc:	mov	r0, r4
   18fde:	ldr	r3, [r7, r3]
   18fe0:	ldr	r7, [r3, #0]
   18fe2:	bl	17d08 <rb_free_nodes@@Base+0x462>
   18fe6:	ldr	r2, [pc, #44]	; (19014 <btrfs_leaf_free_space@@Base+0x84>)
   18fe8:	mov	r3, r5
   18fea:	movs	r1, #1
   18fec:	str.w	r8, [sp]
   18ff0:	add	r2, pc
   18ff2:	strd	r0, r6, [sp, #4]
   18ff6:	mov	r0, r7
   18ff8:	blx	8a14 <__fprintf_chk@plt+0x4>
   18ffc:	mov	r0, r5
   18ffe:	add	sp, #16
   19000:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19004:	pop	{r1, r3, r5, r6, r7, pc}
   19006:	movs	r4, r0
   19008:	adds	r7, #162	; 0xa2
   1900a:	movs	r2, r0
   1900c:	adds	r3, #43	; 0x2b
   1900e:	movs	r2, r0
   19010:	lsls	r4, r6, #8
   19012:	movs	r0, r0
   19014:	adds	r3, #43	; 0x2b
   19016:	movs	r2, r0

00019018 <btrfs_check_leaf@@Base>:
   19018:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1901c:	mov	r4, r2
   1901e:	ldr	r2, [pc, #640]	; (192a0 <btrfs_check_leaf@@Base+0x288>)
   19020:	sub	sp, #84	; 0x54
   19022:	ldr	r3, [pc, #640]	; (192a4 <btrfs_check_leaf@@Base+0x28c>)
   19024:	mov	r8, r0
   19026:	add	r2, pc
   19028:	ldr.w	sl, [r4, #192]	; 0xc0
   1902c:	ldr	r7, [pc, #632]	; (192a8 <btrfs_check_leaf@@Base+0x290>)
   1902e:	mov	r6, r1
   19030:	ldr	r3, [r2, r3]
   19032:	ldr	r2, [r4, #76]	; 0x4c
   19034:	add	r7, pc
   19036:	ldr	r3, [r3, #0]
   19038:	str	r3, [sp, #76]	; 0x4c
   1903a:	mov.w	r3, #0
   1903e:	movs	r3, #25
   19040:	mul.w	r3, r3, sl
   19044:	cmp	r3, r2
   19046:	bls.n	190ae <btrfs_check_leaf@@Base+0x96>
   19048:	ldr	r3, [pc, #608]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   1904a:	movs	r1, #1
   1904c:	movs	r5, #1
   1904e:	ldr	r0, [r7, r3]
   19050:	ldrd	r2, r3, [r4, #40]	; 0x28
   19054:	strd	r2, r3, [sp]
   19058:	ldr	r2, [pc, #596]	; (192b0 <btrfs_check_leaf@@Base+0x298>)
   1905a:	ldr	r0, [r0, #0]
   1905c:	add	r2, pc
   1905e:	blx	8a14 <__fprintf_chk@plt+0x4>
   19062:	ldr.w	r3, [r4, #188]	; 0xbc
   19066:	ldr.w	r2, [r4, #184]	; 0xb8
   1906a:	cmp	r3, #0
   1906c:	it	eq
   1906e:	cmpeq	r2, #2
   19070:	bne.n	19110 <btrfs_check_leaf@@Base+0xf8>
   19072:	add	r1, sp, #36	; 0x24
   19074:	cmp	r6, #0
   19076:	beq.w	1928a <btrfs_check_leaf@@Base+0x272>
   1907a:	ldr.w	r3, [r6, #13]
   1907e:	ldr.w	r2, [r6, #9]
   19082:	str.w	r3, [sp, #49]	; 0x31
   19086:	ldrb	r3, [r6, #8]
   19088:	str.w	r2, [sp, #45]	; 0x2d
   1908c:	ldr	r2, [r6, #0]
   1908e:	strb.w	r3, [sp, #44]	; 0x2c
   19092:	ldr	r3, [r6, #4]
   19094:	strd	r2, r3, [sp, #36]	; 0x24
   19098:	ldr	r2, [r4, #76]	; 0x4c
   1909a:	movs	r3, #0
   1909c:	mov	r0, r8
   1909e:	str	r3, [sp, #8]
   190a0:	strd	r2, r3, [sp]
   190a4:	ldrd	r2, r3, [r4, #40]	; 0x28
   190a8:	bl	2d590 <btrfs_add_corrupt_extent_record@@Base>
   190ac:	b.n	19110 <btrfs_check_leaf@@Base+0xf8>
   190ae:	ldrb.w	r5, [r4, #196]	; 0xc4
   190b2:	cbz	r5, 190d4 <btrfs_check_leaf@@Base+0xbc>
   190b4:	ldr	r3, [pc, #500]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   190b6:	movs	r5, #4
   190b8:	ldr.w	r1, [r4, #144]	; 0x90
   190bc:	ldr.w	r2, [r4, #148]	; 0x94
   190c0:	ldr	r3, [r7, r3]
   190c2:	strd	r1, r2, [sp]
   190c6:	movs	r1, #1
   190c8:	ldr	r2, [pc, #488]	; (192b4 <btrfs_check_leaf@@Base+0x29c>)
   190ca:	ldr	r0, [r3, #0]
   190cc:	add	r2, pc
   190ce:	blx	8a14 <__fprintf_chk@plt+0x4>
   190d2:	b.n	19062 <btrfs_check_leaf@@Base+0x4a>
   190d4:	mov	r0, r4
   190d6:	bl	18f90 <btrfs_leaf_free_space@@Base>
   190da:	cmp	r0, #0
   190dc:	bge.n	19108 <btrfs_check_leaf@@Base+0xf0>
   190de:	ldr	r3, [pc, #460]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   190e0:	mov	r0, r4
   190e2:	ldr.w	r9, [r4, #144]	; 0x90
   190e6:	ldr	r3, [r7, r3]
   190e8:	ldr.w	r7, [r4, #148]	; 0x94
   190ec:	ldr	r5, [r3, #0]
   190ee:	bl	18f90 <btrfs_leaf_free_space@@Base>
   190f2:	ldr	r2, [pc, #452]	; (192b8 <btrfs_check_leaf@@Base+0x2a0>)
   190f4:	movs	r1, #1
   190f6:	strd	r9, r7, [sp]
   190fa:	add	r2, pc
   190fc:	str	r0, [sp, #8]
   190fe:	mov	r0, r5
   19100:	blx	8a14 <__fprintf_chk@plt+0x4>
   19104:	movs	r5, #5
   19106:	b.n	19062 <btrfs_check_leaf@@Base+0x4a>
   19108:	cmp.w	sl, #0
   1910c:	bne.n	19126 <btrfs_check_leaf@@Base+0x10e>
   1910e:	movs	r5, #0
   19110:	ldr	r2, [pc, #424]	; (192bc <btrfs_check_leaf@@Base+0x2a4>)
   19112:	ldr	r3, [pc, #400]	; (192a4 <btrfs_check_leaf@@Base+0x28c>)
   19114:	add	r2, pc
   19116:	ldr	r3, [r2, r3]
   19118:	ldr	r2, [r3, #0]
   1911a:	ldr	r3, [sp, #76]	; 0x4c
   1911c:	eors	r2, r3
   1911e:	beq.w	19298 <btrfs_check_leaf@@Base+0x280>
   19122:	blx	86b8 <__stack_chk_fail@plt>
   19126:	add.w	r9, sp, #56	; 0x38
   1912a:	mov	r2, r5
   1912c:	mov	r0, r4
   1912e:	mov	r1, r9
   19130:	bl	178ee <rb_free_nodes@@Base+0x48>
   19134:	cmp	r6, #0
   19136:	beq.w	19274 <btrfs_check_leaf@@Base+0x25c>
   1913a:	ldrb	r5, [r6, #8]
   1913c:	cmp	r5, #0
   1913e:	beq.w	19276 <btrfs_check_leaf@@Base+0x25e>
   19142:	movs	r2, #17
   19144:	mov	r1, r9
   19146:	mov	r0, r6
   19148:	blx	8650 <memcmp@plt+0x4>
   1914c:	mov	r5, r0
   1914e:	cmp	r0, #0
   19150:	beq.w	19276 <btrfs_check_leaf@@Base+0x25e>
   19154:	ldr	r3, [pc, #340]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   19156:	movs	r5, #2
   19158:	ldr.w	r1, [r4, #144]	; 0x90
   1915c:	ldr.w	r2, [r4, #148]	; 0x94
   19160:	ldr	r3, [r7, r3]
   19162:	strd	r1, r2, [sp]
   19166:	movs	r1, #1
   19168:	ldr	r2, [pc, #340]	; (192c0 <btrfs_check_leaf@@Base+0x2a8>)
   1916a:	ldr	r0, [r3, #0]
   1916c:	add	r2, pc
   1916e:	blx	8a14 <__fprintf_chk@plt+0x4>
   19172:	b.n	19062 <btrfs_check_leaf@@Base+0x4a>
   19174:	mov	r2, r5
   19176:	mov	r1, r9
   19178:	mov	r0, r4
   1917a:	bl	178ee <rb_free_nodes@@Base+0x48>
   1917e:	adds	r2, r5, #1
   19180:	mov	r1, fp
   19182:	mov	r0, r4
   19184:	str	r2, [sp, #24]
   19186:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1918a:	mov	r1, fp
   1918c:	mov	r0, r9
   1918e:	bl	1896a <btrfs_comp_cpu_keys@@Base+0x56>
   19192:	ldr	r2, [sp, #24]
   19194:	cmp	r0, #0
   19196:	blt.n	191b0 <btrfs_check_leaf@@Base+0x198>
   19198:	ldr	r3, [pc, #272]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   1919a:	movs	r1, #1
   1919c:	ldr	r0, [r7, r3]
   1919e:	mov	r3, r5
   191a0:	str	r2, [sp, #0]
   191a2:	movs	r5, #3
   191a4:	ldr	r2, [pc, #284]	; (192c4 <btrfs_check_leaf@@Base+0x2ac>)
   191a6:	ldr	r0, [r0, #0]
   191a8:	add	r2, pc
   191aa:	blx	8a14 <__fprintf_chk@plt+0x4>
   191ae:	b.n	19062 <btrfs_check_leaf@@Base+0x4a>
   191b0:	movs	r3, #25
   191b2:	mov	r1, r2
   191b4:	mla	r3, r3, r5, r4
   191b8:	mov	r0, r4
   191ba:	str	r2, [sp, #24]
   191bc:	ldr.w	r3, [r3, #214]	; 0xd6
   191c0:	str	r3, [sp, #28]
   191c2:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   191c6:	ldr	r3, [sp, #28]
   191c8:	ldr	r2, [sp, #24]
   191ca:	cmp	r0, r3
   191cc:	beq.n	191e4 <btrfs_check_leaf@@Base+0x1cc>
   191ce:	ldr	r2, [pc, #220]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   191d0:	movs	r1, #1
   191d2:	ldr	r5, [r7, r2]
   191d4:	ldr	r2, [pc, #240]	; (192c8 <btrfs_check_leaf@@Base+0x2b0>)
   191d6:	str	r0, [sp, #0]
   191d8:	ldr	r0, [r5, #0]
   191da:	add	r2, pc
   191dc:	blx	8a14 <__fprintf_chk@plt+0x4>
   191e0:	movs	r5, #6
   191e2:	b.n	19062 <btrfs_check_leaf@@Base+0x4a>
   191e4:	cbnz	r5, 1920c <btrfs_check_leaf@@Base+0x1f4>
   191e6:	ldr.w	r2, [r4, #218]	; 0xda
   191ea:	ldr.w	r3, [r4, #214]	; 0xd6
   191ee:	add	r3, r2
   191f0:	ldr.w	r2, [r8, #384]	; 0x180
   191f4:	subs	r2, #101	; 0x65
   191f6:	cmp	r2, r3
   191f8:	beq.n	1920a <btrfs_check_leaf@@Base+0x1f2>
   191fa:	ldr	r1, [pc, #176]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   191fc:	ldr	r0, [r7, r1]
   191fe:	movs	r1, #1
   19200:	str	r2, [sp, #0]
   19202:	ldr	r2, [pc, #200]	; (192cc <btrfs_check_leaf@@Base+0x2b4>)
   19204:	ldr	r0, [r0, #0]
   19206:	add	r2, pc
   19208:	b.n	191dc <btrfs_check_leaf@@Base+0x1c4>
   1920a:	movs	r2, #1
   1920c:	mov	r5, r2
   1920e:	cmp.w	sl, #1
   19212:	bls.n	1921a <btrfs_check_leaf@@Base+0x202>
   19214:	ldr	r3, [sp, #20]
   19216:	cmp	r3, r5
   19218:	bhi.n	19174 <btrfs_check_leaf@@Base+0x15c>
   1921a:	movs	r5, #0
   1921c:	mov	r1, r5
   1921e:	mov	r0, r4
   19220:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   19224:	ldr.w	r3, [r8, #384]	; 0x180
   19228:	subs	r3, #101	; 0x65
   1922a:	cmp	r0, r3
   1922c:	bls.n	19282 <btrfs_check_leaf@@Base+0x26a>
   1922e:	movs	r2, #0
   19230:	mov	r1, r9
   19232:	mov	r0, r4
   19234:	bl	178ee <rb_free_nodes@@Base+0x48>
   19238:	mov	r0, r9
   1923a:	bl	24bcc <btrfs_print_key@@Base>
   1923e:	ldr	r3, [pc, #144]	; (192d0 <btrfs_check_leaf@@Base+0x2b8>)
   19240:	ldr	r3, [r7, r3]
   19242:	ldr	r0, [r3, #0]
   19244:	blx	85b0 <fflush@plt>
   19248:	ldr	r3, [pc, #96]	; (192ac <btrfs_check_leaf@@Base+0x294>)
   1924a:	mov	r1, r5
   1924c:	mov	r0, r4
   1924e:	ldr	r3, [r7, r3]
   19250:	ldr	r7, [r3, #0]
   19252:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   19256:	ldr.w	r3, [r8, #384]	; 0x180
   1925a:	movs	r2, #0
   1925c:	movs	r1, #1
   1925e:	subs	r3, #101	; 0x65
   19260:	strd	r3, r2, [sp, #8]
   19264:	strd	r0, r2, [sp]
   19268:	mov	r0, r7
   1926a:	ldr	r2, [pc, #104]	; (192d4 <btrfs_check_leaf@@Base+0x2bc>)
   1926c:	add	r2, pc
   1926e:	blx	8a14 <__fprintf_chk@plt+0x4>
   19272:	b.n	191e0 <btrfs_check_leaf@@Base+0x1c8>
   19274:	mov	r5, r6
   19276:	add.w	r3, sl, #4294967295	; 0xffffffff
   1927a:	add.w	fp, sp, #36	; 0x24
   1927e:	str	r3, [sp, #20]
   19280:	b.n	1920e <btrfs_check_leaf@@Base+0x1f6>
   19282:	adds	r5, #1
   19284:	cmp	r5, sl
   19286:	bne.n	1921c <btrfs_check_leaf@@Base+0x204>
   19288:	b.n	1910e <btrfs_check_leaf@@Base+0xf6>
   1928a:	mov	r2, r6
   1928c:	mov	r0, r4
   1928e:	str	r1, [sp, #20]
   19290:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   19294:	ldr	r1, [sp, #20]
   19296:	b.n	19098 <btrfs_check_leaf@@Base+0x80>
   19298:	mov	r0, r5
   1929a:	add	sp, #84	; 0x54
   1929c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192a0:	pop	{r1, r5, r6, pc}
   192a2:	movs	r4, r0
   192a4:	lsls	r4, r4, #8
   192a6:	movs	r0, r0
   192a8:	pop	{r2, r4, r6, pc}
   192aa:	movs	r4, r0
   192ac:	lsls	r4, r6, #8
   192ae:	movs	r0, r0
   192b0:	adds	r2, #254	; 0xfe
   192b2:	movs	r2, r0
   192b4:	adds	r2, #172	; 0xac
   192b6:	movs	r2, r0
   192b8:	adds	r2, #151	; 0x97
   192ba:	movs	r2, r0
   192bc:	pop	{r2, r4, r5, r6}
   192be:	movs	r4, r0
   192c0:	adds	r2, #72	; 0x48
   192c2:	movs	r2, r0
   192c4:	adds	r2, #44	; 0x2c
   192c6:	movs	r2, r0
   192c8:	adds	r2, #18
   192ca:	movs	r2, r0
   192cc:	adds	r1, #255	; 0xff
   192ce:	movs	r2, r0
   192d0:	lsls	r0, r3, #9
   192d2:	movs	r0, r0
   192d4:	adds	r1, #180	; 0xb4
   192d6:	movs	r2, r0
   192d8:	push	{r4, r5, r6, r7, lr}
   192da:	mov	r5, r2
   192dc:	ldr	r2, [pc, #100]	; (19344 <btrfs_check_leaf@@Base+0x32c>)
   192de:	sub	sp, #28
   192e0:	ldr	r3, [pc, #100]	; (19348 <btrfs_check_leaf@@Base+0x330>)
   192e2:	mov	r6, r0
   192e4:	add	r2, pc
   192e6:	mov	r4, r1
   192e8:	ldr	r3, [r2, r3]
   192ea:	ldr	r3, [r3, #0]
   192ec:	str	r3, [sp, #20]
   192ee:	mov.w	r3, #0
   192f2:	add.w	r3, r1, r5, lsl #2
   192f6:	ldr	r0, [r3, #4]
   192f8:	cbz	r0, 19306 <btrfs_check_leaf@@Base+0x2ee>
   192fa:	mov	r7, sp
   192fc:	ldr	r2, [r3, #36]	; 0x24
   192fe:	mov	r1, r7
   19300:	bl	178fa <rb_free_nodes@@Base+0x54>
   19304:	mov	r0, r7
   19306:	cbnz	r5, 19330 <btrfs_check_leaf@@Base+0x318>
   19308:	mov	r1, r0
   1930a:	ldr	r2, [r4, #0]
   1930c:	mov	r0, r6
   1930e:	bl	19018 <btrfs_check_leaf@@Base>
   19312:	ldr	r2, [pc, #56]	; (1934c <btrfs_check_leaf@@Base+0x334>)
   19314:	cmp	r0, #0
   19316:	ldr	r3, [pc, #48]	; (19348 <btrfs_check_leaf@@Base+0x330>)
   19318:	add	r2, pc
   1931a:	ite	ne
   1931c:	mvnne.w	r0, #4
   19320:	moveq	r0, #0
   19322:	ldr	r3, [r2, r3]
   19324:	ldr	r2, [r3, #0]
   19326:	ldr	r3, [sp, #20]
   19328:	eors	r2, r3
   1932a:	beq.n	1933e <btrfs_check_leaf@@Base+0x326>
   1932c:	blx	86b8 <__stack_chk_fail@plt>
   19330:	mov	r1, r0
   19332:	ldr.w	r2, [r4, r5, lsl #2]
   19336:	mov	r0, r6
   19338:	bl	189c8 <btrfs_check_node@@Base>
   1933c:	b.n	19312 <btrfs_check_leaf@@Base+0x2fa>
   1933e:	add	sp, #28
   19340:	pop	{r4, r5, r6, r7, pc}
   19342:	nop
   19344:	hlt	0x0024
   19346:	movs	r4, r0
   19348:	lsls	r4, r4, #8
   1934a:	movs	r0, r0
   1934c:	rev16	r0, r6
   1934e:	movs	r4, r0
   19350:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19354:	mov	r5, r2
   19356:	vpush	{d8}
   1935a:	mov	r7, r3
   1935c:	ldr	r2, [pc, #596]	; (195b4 <btrfs_check_leaf@@Base+0x59c>)
   1935e:	mov	r9, r0
   19360:	ldr	r3, [pc, #596]	; (195b8 <btrfs_check_leaf@@Base+0x5a0>)
   19362:	add	r2, pc
   19364:	ldr.w	r8, [r5, #4]
   19368:	sub	sp, #68	; 0x44
   1936a:	str	r1, [sp, #16]
   1936c:	ldr	r3, [r2, r3]
   1936e:	ldr	r3, [r3, #0]
   19370:	str	r3, [sp, #60]	; 0x3c
   19372:	mov.w	r3, #0
   19376:	cmp.w	r8, #0
   1937a:	beq.n	193f4 <btrfs_check_leaf@@Base+0x3dc>
   1937c:	ldr.w	r3, [r8, #192]	; 0xc0
   19380:	ldr	r2, [r5, #36]	; 0x24
   19382:	subs	r3, #1
   19384:	cmp	r3, r2
   19386:	bls.n	193f4 <btrfs_check_leaf@@Base+0x3dc>
   19388:	ldr.w	sl, [r1, #464]	; 0x1d0
   1938c:	adds	r3, r2, #1
   1938e:	mov	r1, r8
   19390:	ldr	r6, [r5, #0]
   19392:	mov	r2, r3
   19394:	vmov	s16, r3
   19398:	mov	r0, sl
   1939a:	bl	18bb6 <read_node_slot@@Base>
   1939e:	mov	r4, r0
   193a0:	str	r0, [sp, #36]	; 0x24
   193a2:	bl	17954 <rb_free_nodes@@Base+0xae>
   193a6:	cbnz	r0, 193c8 <btrfs_check_leaf@@Base+0x3b0>
   193a8:	cmn.w	r4, #4096	; 0x1000
   193ac:	it	ls
   193ae:	mvnls.w	r4, #4
   193b2:	ldr	r2, [pc, #520]	; (195bc <btrfs_check_leaf@@Base+0x5a4>)
   193b4:	ldr	r3, [pc, #512]	; (195b8 <btrfs_check_leaf@@Base+0x5a0>)
   193b6:	add	r2, pc
   193b8:	ldr	r3, [r2, r3]
   193ba:	ldr	r2, [r3, #0]
   193bc:	ldr	r3, [sp, #60]	; 0x3c
   193be:	eors	r2, r3
   193c0:	beq.w	195a8 <btrfs_check_leaf@@Base+0x590>
   193c4:	blx	86b8 <__stack_chk_fail@plt>
   193c8:	mov	r0, r4
   193ca:	bl	18f90 <btrfs_leaf_free_space@@Base>
   193ce:	cmp	r0, r7
   193d0:	bge.n	193d6 <btrfs_check_leaf@@Base+0x3be>
   193d2:	ldr	r0, [sp, #36]	; 0x24
   193d4:	b.n	193f0 <btrfs_check_leaf@@Base+0x3d8>
   193d6:	add	r3, sp, #36	; 0x24
   193d8:	vstr	s16, [sp]
   193dc:	str	r3, [sp, #4]
   193de:	mov	r0, r9
   193e0:	ldr	r2, [sp, #36]	; 0x24
   193e2:	mov	r3, r8
   193e4:	ldr	r1, [sp, #16]
   193e6:	bl	1882c <btrfs_cow_block@@Base>
   193ea:	mov	r4, r0
   193ec:	ldr	r0, [sp, #36]	; 0x24
   193ee:	cbz	r4, 193f8 <btrfs_check_leaf@@Base+0x3e0>
   193f0:	bl	16bc8 <free_extent_buffer@@Base>
   193f4:	movs	r4, #1
   193f6:	b.n	193b2 <btrfs_check_leaf@@Base+0x39a>
   193f8:	bl	18f90 <btrfs_leaf_free_space@@Base>
   193fc:	cmp	r7, r0
   193fe:	bgt.n	193d2 <btrfs_check_leaf@@Base+0x3ba>
   19400:	ldr.w	r3, [r6, #192]	; 0xc0
   19404:	str	r3, [sp, #12]
   19406:	cmp	r3, #0
   19408:	beq.n	193d2 <btrfs_check_leaf@@Base+0x3ba>
   1940a:	ldr	r3, [sp, #112]	; 0x70
   1940c:	adds	r7, #25
   1940e:	mov	fp, r4
   19410:	mov	r1, r4
   19412:	rsb	lr, r3, #1
   19416:	ldr	r3, [sp, #12]
   19418:	mov.w	r9, #25
   1941c:	subs	r2, r3, #1
   1941e:	cmp	r2, lr
   19420:	bcs.w	19566 <btrfs_check_leaf@@Base+0x54e>
   19424:	cmp.w	fp, #0
   19428:	beq.n	193d2 <btrfs_check_leaf@@Base+0x3ba>
   1942a:	ldr	r3, [sp, #112]	; 0x70
   1942c:	cbnz	r3, 19448 <btrfs_check_leaf@@Base+0x430>
   1942e:	ldr	r3, [sp, #12]
   19430:	cmp	r3, fp
   19432:	bne.n	19448 <btrfs_check_leaf@@Base+0x430>
   19434:	ldr	r1, [pc, #392]	; (195c0 <btrfs_check_leaf@@Base+0x5a8>)
   19436:	movs	r3, #1
   19438:	ldr	r0, [pc, #392]	; (195c4 <btrfs_check_leaf@@Base+0x5ac>)
   1943a:	movw	r2, #1874	; 0x752
   1943e:	add	r1, pc
   19440:	adds	r1, #233	; 0xe9
   19442:	add	r0, pc
   19444:	bl	179c6 <rb_free_nodes@@Base+0x120>
   19448:	ldr	r3, [sp, #36]	; 0x24
   1944a:	mov	r0, r6
   1944c:	add.w	sl, sl, #384	; 0x180
   19450:	vmov	s15, r3
   19454:	ldr.w	r3, [r3, #192]	; 0xc0
   19458:	str	r3, [sp, #20]
   1945a:	ldr	r3, [sp, #12]
   1945c:	sub.w	r9, r3, fp
   19460:	mov	r1, r9
   19462:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   19466:	mov	r1, r6
   19468:	mov	r7, r0
   1946a:	mov	r0, sl
   1946c:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19470:	vmov	r1, s15
   19474:	subs	r2, r7, r0
   19476:	strd	r2, r0, [sp, #24]
   1947a:	mov	r0, sl
   1947c:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19480:	ldr	r3, [sp, #28]
   19482:	subs	r7, r3, r7
   19484:	ldr	r3, [sp, #16]
   19486:	ldr.w	r3, [r3, #464]	; 0x1d0
   1948a:	ldr.w	r3, [r3, #384]	; 0x180
   1948e:	subs	r3, #101	; 0x65
   19490:	add.w	r2, r0, #101	; 0x65
   19494:	subs	r3, r3, r0
   19496:	adds	r1, r2, r7
   19498:	vmov	r0, s15
   1949c:	bl	17334 <memmove_extent_buffer@@Base>
   194a0:	ldr	r3, [sp, #16]
   194a2:	mov	r1, r6
   194a4:	mov	r0, sl
   194a6:	ldr.w	r3, [r3, #464]	; 0x1d0
   194aa:	ldr.w	r2, [r3, #384]	; 0x180
   194ae:	add	r2, r7
   194b0:	str	r2, [sp, #28]
   194b2:	bl	17968 <rb_free_nodes@@Base+0xc2>
   194b6:	ldr	r3, [sp, #24]
   194b8:	movs	r7, #25
   194ba:	ldr	r2, [sp, #28]
   194bc:	mul.w	sl, r7, fp
   194c0:	mov	r1, r6
   194c2:	str	r3, [sp, #0]
   194c4:	add.w	r3, r0, #101	; 0x65
   194c8:	ldr	r0, [sp, #36]	; 0x24
   194ca:	bl	172ea <copy_extent_buffer@@Base>
   194ce:	ldr	r3, [sp, #20]
   194d0:	movs	r2, #101	; 0x65
   194d2:	ldr	r0, [sp, #36]	; 0x24
   194d4:	add.w	r1, sl, r2
   194d8:	muls	r3, r7
   194da:	bl	17334 <memmove_extent_buffer@@Base>
   194de:	ldr	r0, [sp, #36]	; 0x24
   194e0:	mul.w	r3, r7, r9
   194e4:	movs	r2, #101	; 0x65
   194e6:	mov	r1, r6
   194e8:	str.w	sl, [sp]
   194ec:	adds	r3, #101	; 0x65
   194ee:	bl	172ea <copy_extent_buffer@@Base>
   194f2:	ldr	r3, [sp, #20]
   194f4:	ldr	r2, [sp, #16]
   194f6:	movs	r1, #0
   194f8:	add.w	r0, r3, fp
   194fc:	ldr	r3, [sp, #36]	; 0x24
   194fe:	adds	r3, #197	; 0xc5
   19500:	str.w	r0, [r3, #-5]
   19504:	ldr.w	r2, [r2, #464]	; 0x1d0
   19508:	ldr.w	r2, [r2, #384]	; 0x180
   1950c:	subs	r2, #101	; 0x65
   1950e:	cmp	r1, r0
   19510:	bne.n	19590 <btrfs_check_leaf@@Base+0x578>
   19512:	str.w	r9, [r6, #192]	; 0xc0
   19516:	cmp.w	r9, #0
   1951a:	beq.n	19522 <btrfs_check_leaf@@Base+0x50a>
   1951c:	mov	r0, r6
   1951e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19522:	ldr	r0, [sp, #36]	; 0x24
   19524:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19528:	add	r1, sp, #40	; 0x28
   1952a:	ldr	r0, [sp, #36]	; 0x24
   1952c:	movs	r2, #0
   1952e:	str	r1, [sp, #16]
   19530:	bl	178ee <rb_free_nodes@@Base+0x48>
   19534:	vmov	r2, s16
   19538:	mov	r0, r8
   1953a:	ldr	r1, [sp, #16]
   1953c:	bl	178d6 <rb_free_nodes@@Base+0x30>
   19540:	mov	r0, r8
   19542:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19546:	ldr	r3, [r5, #32]
   19548:	cmp	r9, r3
   1954a:	bhi.n	195a0 <btrfs_check_leaf@@Base+0x588>
   1954c:	ldr	r2, [sp, #12]
   1954e:	ldr	r0, [r5, #0]
   19550:	subs	r3, r3, r2
   19552:	add	r3, fp
   19554:	str	r3, [r5, #32]
   19556:	bl	16bc8 <free_extent_buffer@@Base>
   1955a:	ldr	r3, [sp, #36]	; 0x24
   1955c:	str	r3, [r5, #0]
   1955e:	ldr	r3, [r5, #36]	; 0x24
   19560:	adds	r3, #1
   19562:	str	r3, [r5, #36]	; 0x24
   19564:	b.n	193b2 <btrfs_check_leaf@@Base+0x39a>
   19566:	mla	ip, r9, r2, r6
   1956a:	ldr	r3, [r5, #32]
   1956c:	cmp	r3, r2
   1956e:	it	eq
   19570:	addeq	r1, r1, r7
   19572:	ldr.w	ip, [ip, #218]	; 0xda
   19576:	add.w	ip, ip, #25
   1957a:	add	r1, ip
   1957c:	cmp	r1, r0
   1957e:	bhi.w	19424 <btrfs_check_leaf@@Base+0x40c>
   19582:	add.w	fp, fp, #1
   19586:	cmp	r2, #0
   19588:	beq.w	1942a <btrfs_check_leaf@@Base+0x412>
   1958c:	subs	r2, #1
   1958e:	b.n	1941e <btrfs_check_leaf@@Base+0x406>
   19590:	ldr.w	r7, [r3, #21]
   19594:	adds	r1, #1
   19596:	adds	r3, #25
   19598:	subs	r2, r2, r7
   1959a:	str.w	r2, [r3, #-8]
   1959e:	b.n	1950e <btrfs_check_leaf@@Base+0x4f6>
   195a0:	ldr	r0, [sp, #36]	; 0x24
   195a2:	bl	16bc8 <free_extent_buffer@@Base>
   195a6:	b.n	193b2 <btrfs_check_leaf@@Base+0x39a>
   195a8:	mov	r0, r4
   195aa:	add	sp, #68	; 0x44
   195ac:	vpop	{d8}
   195b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195b4:	rev	r6, r4
   195b6:	movs	r4, r0
   195b8:	lsls	r4, r4, #8
   195ba:	movs	r0, r0
   195bc:	cbnz	r2, 195f4 <btrfs_check_leaf@@Base+0x5dc>
   195be:	movs	r4, r0
   195c0:	adds	r3, #26
   195c2:	movs	r2, r0
   195c4:	cmn	r7, r1
   195c6:	movs	r2, r0
   195c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195cc:	mov	sl, r3
   195ce:	vpush	{d8}
   195d2:	mov	r4, r2
   195d4:	ldr	r3, [pc, #744]	; (198c0 <btrfs_check_leaf@@Base+0x8a8>)
   195d6:	mov	r5, r0
   195d8:	ldr	r2, [pc, #744]	; (198c4 <btrfs_check_leaf@@Base+0x8ac>)
   195da:	mov	r8, r1
   195dc:	add	r3, pc
   195de:	ldr	r7, [r4, #36]	; 0x24
   195e0:	sub	sp, #76	; 0x4c
   195e2:	add	r2, pc
   195e4:	str	r3, [sp, #20]
   195e6:	ldr	r3, [pc, #736]	; (198c8 <btrfs_check_leaf@@Base+0x8b0>)
   195e8:	ldr.w	fp, [sp, #120]	; 0x78
   195ec:	ldr	r3, [r2, r3]
   195ee:	ldr	r3, [r3, #0]
   195f0:	str	r3, [sp, #68]	; 0x44
   195f2:	mov.w	r3, #0
   195f6:	cbz	r7, 1963e <btrfs_check_leaf@@Base+0x626>
   195f8:	ldr	r1, [r4, #4]
   195fa:	cbz	r1, 1963e <btrfs_check_leaf@@Base+0x626>
   195fc:	ldr	r6, [r4, #0]
   195fe:	ldr.w	r3, [r6, #192]	; 0xc0
   19602:	str	r3, [sp, #12]
   19604:	cbz	r3, 1963e <btrfs_check_leaf@@Base+0x626>
   19606:	ldr.w	r9, [r8, #464]	; 0x1d0
   1960a:	subs	r7, #1
   1960c:	mov	r2, r7
   1960e:	mov	r0, r9
   19610:	bl	18bb6 <read_node_slot@@Base>
   19614:	str	r0, [sp, #44]	; 0x2c
   19616:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1961a:	cmp	r0, sl
   1961c:	bge.n	19622 <btrfs_check_leaf@@Base+0x60a>
   1961e:	ldr	r0, [sp, #44]	; 0x2c
   19620:	b.n	1963a <btrfs_check_leaf@@Base+0x622>
   19622:	add	r3, sp, #44	; 0x2c
   19624:	ldr	r2, [sp, #44]	; 0x2c
   19626:	strd	r7, r3, [sp]
   1962a:	mov	r1, r8
   1962c:	ldr	r3, [r4, #4]
   1962e:	mov	r0, r5
   19630:	bl	1882c <btrfs_cow_block@@Base>
   19634:	mov	r7, r0
   19636:	ldr	r0, [sp, #44]	; 0x2c
   19638:	cbz	r7, 19642 <btrfs_check_leaf@@Base+0x62a>
   1963a:	bl	16bc8 <free_extent_buffer@@Base>
   1963e:	movs	r7, #1
   19640:	b.n	1983c <btrfs_check_leaf@@Base+0x824>
   19642:	bl	18f90 <btrfs_leaf_free_space@@Base>
   19646:	cmp	sl, r0
   19648:	bgt.n	1961e <btrfs_check_leaf@@Base+0x606>
   1964a:	cmp.w	fp, #0
   1964e:	bne.w	19850 <btrfs_check_leaf@@Base+0x838>
   19652:	ldr	r3, [sp, #12]
   19654:	add.w	ip, r3, #4294967295	; 0xffffffff
   19658:	movs	r2, #0
   1965a:	add.w	r1, r6, #197	; 0xc5
   1965e:	add.w	sl, sl, #25
   19662:	mov	r5, r2
   19664:	cmp	r5, ip
   19666:	bne.w	19856 <btrfs_check_leaf@@Base+0x83e>
   1966a:	cmp	r5, #0
   1966c:	beq.n	1961e <btrfs_check_leaf@@Base+0x606>
   1966e:	cmp.w	fp, #0
   19672:	bne.n	19690 <btrfs_check_leaf@@Base+0x678>
   19674:	ldr.w	r3, [r6, #192]	; 0xc0
   19678:	cmp	r3, r5
   1967a:	bne.n	19690 <btrfs_check_leaf@@Base+0x678>
   1967c:	ldr	r1, [pc, #588]	; (198cc <btrfs_check_leaf@@Base+0x8b4>)
   1967e:	movs	r3, #1
   19680:	ldr	r0, [pc, #588]	; (198d0 <btrfs_check_leaf@@Base+0x8b8>)
   19682:	movw	r2, #2018	; 0x7e2
   19686:	add	r1, pc
   19688:	adds	r1, #249	; 0xf9
   1968a:	add	r0, pc
   1968c:	bl	179c6 <rb_free_nodes@@Base+0x120>
   19690:	mov.w	sl, #25
   19694:	ldr	r0, [sp, #44]	; 0x2c
   19696:	mul.w	r3, sl, r5
   1969a:	mov	r1, r6
   1969c:	str	r3, [sp, #16]
   1969e:	ldr.w	r2, [r0, #192]	; 0xc0
   196a2:	str	r3, [sp, #0]
   196a4:	movs	r3, #101	; 0x65
   196a6:	mul.w	r2, sl, r2
   196aa:	add	r2, r3
   196ac:	bl	172ea <copy_extent_buffer@@Base>
   196b0:	subs	r3, r5, #1
   196b2:	ldr.w	fp, [sp, #44]	; 0x2c
   196b6:	mla	r3, sl, r3, r6
   196ba:	add.w	r2, r3, #197	; 0xc5
   196be:	str	r2, [sp, #28]
   196c0:	ldr.w	r2, [r3, #214]	; 0xd6
   196c4:	ldr.w	r3, [r8, #464]	; 0x1d0
   196c8:	ldr.w	r3, [r3, #384]	; 0x180
   196cc:	subs	r3, #101	; 0x65
   196ce:	strd	r3, r2, [sp, #32]
   196d2:	subs	r1, r3, r2
   196d4:	add.w	r3, r9, #384	; 0x180
   196d8:	str	r1, [sp, #24]
   196da:	mov	r1, fp
   196dc:	mov	r0, r3
   196de:	vmov	s16, r3
   196e2:	bl	17968 <rb_free_nodes@@Base+0xc2>
   196e6:	ldr	r3, [sp, #32]
   196e8:	ldr	r2, [sp, #36]	; 0x24
   196ea:	rsb	r3, r3, #101	; 0x65
   196ee:	adds	r1, r3, r2
   196f0:	ldr	r3, [sp, #24]
   196f2:	str	r3, [sp, #0]
   196f4:	add.w	r3, r2, #101	; 0x65
   196f8:	adds	r2, r1, r0
   196fa:	mov	r0, fp
   196fc:	mov	r1, r6
   196fe:	bl	172ea <copy_extent_buffer@@Base>
   19702:	ldr.w	r9, [sp, #44]	; 0x2c
   19706:	ldr	r1, [pc, #460]	; (198d4 <btrfs_check_leaf@@Base+0x8bc>)
   19708:	movw	r2, #2035	; 0x7f3
   1970c:	ldr	r0, [pc, #456]	; (198d8 <btrfs_check_leaf@@Base+0x8c0>)
   1970e:	ldr.w	fp, [r9, #192]	; 0xc0
   19712:	add	r1, pc
   19714:	adds	r1, #249	; 0xf9
   19716:	add	r0, pc
   19718:	clz	r3, fp
   1971c:	lsrs	r3, r3, #5
   1971e:	bl	179bc <rb_free_nodes@@Base+0x116>
   19722:	add.w	r3, fp, #4294967295	; 0xffffffff
   19726:	add.w	r0, fp, r5
   1972a:	mov	r2, fp
   1972c:	mla	r3, sl, r3, r9
   19730:	ldr.w	r1, [r3, #214]	; 0xd6
   19734:	add.w	r3, r9, #197	; 0xc5
   19738:	str	r3, [sp, #24]
   1973a:	adds	r1, #101	; 0x65
   1973c:	cmp	r0, r2
   1973e:	bhi.w	19872 <btrfs_check_leaf@@Base+0x85a>
   19742:	ldr	r3, [sp, #12]
   19744:	str.w	r0, [r9, #192]	; 0xc0
   19748:	cmp	r3, r5
   1974a:	bcs.n	19778 <btrfs_check_leaf@@Base+0x760>
   1974c:	ldr	r2, [sp, #20]
   1974e:	movs	r1, #1
   19750:	ldr	r3, [pc, #392]	; (198dc <btrfs_check_leaf@@Base+0x8c4>)
   19752:	ldr	r0, [r2, r3]
   19754:	ldr	r3, [sp, #12]
   19756:	ldr	r2, [pc, #392]	; (198e0 <btrfs_check_leaf@@Base+0x8c8>)
   19758:	str	r3, [sp, #0]
   1975a:	add	r2, pc
   1975c:	mov	r3, r5
   1975e:	ldr	r0, [r0, #0]
   19760:	blx	8a14 <__fprintf_chk@plt+0x4>
   19764:	ldr	r1, [pc, #380]	; (198e4 <btrfs_check_leaf@@Base+0x8cc>)
   19766:	ldr	r0, [pc, #384]	; (198e8 <btrfs_check_leaf@@Base+0x8d0>)
   19768:	movs	r3, #1
   1976a:	add	r1, pc
   1976c:	movw	r2, #2052	; 0x804
   19770:	adds	r1, #249	; 0xf9
   19772:	add	r0, pc
   19774:	bl	179c6 <rb_free_nodes@@Base+0x120>
   19778:	ldr	r3, [sp, #12]
   1977a:	cmp	r3, r5
   1977c:	bls.n	197c0 <btrfs_check_leaf@@Base+0x7a8>
   1977e:	ldr	r3, [sp, #28]
   19780:	mov	r1, r6
   19782:	vmov	r0, s16
   19786:	ldr.w	sl, [r3, #17]
   1978a:	bl	17968 <rb_free_nodes@@Base+0xc2>
   1978e:	ldr.w	r3, [r8, #464]	; 0x1d0
   19792:	ldr.w	r1, [r3, #384]	; 0x180
   19796:	sub.w	r1, r1, sl
   1979a:	sub.w	r3, sl, r0
   1979e:	add.w	r2, r0, #101	; 0x65
   197a2:	add	r1, r0
   197a4:	mov	r0, r6
   197a6:	bl	17334 <memmove_extent_buffer@@Base>
   197aa:	ldr.w	r3, [r6, #192]	; 0xc0
   197ae:	movs	r2, #25
   197b0:	movs	r1, #101	; 0x65
   197b2:	subs	r3, r3, r5
   197b4:	mov	r0, r6
   197b6:	muls	r3, r2
   197b8:	ldr	r2, [sp, #16]
   197ba:	adds	r2, #101	; 0x65
   197bc:	bl	17334 <memmove_extent_buffer@@Base>
   197c0:	ldr	r3, [sp, #12]
   197c2:	add.w	ip, r6, #197	; 0xc5
   197c6:	movs	r2, #0
   197c8:	movs	r0, #25
   197ca:	sub.w	r9, r3, r5
   197ce:	str.w	r9, [r6, #192]	; 0xc0
   197d2:	ldr.w	r3, [r8, #464]	; 0x1d0
   197d6:	ldr.w	r3, [r3, #384]	; 0x180
   197da:	subs	r3, #101	; 0x65
   197dc:	cmp	r9, r2
   197de:	bne.n	19890 <btrfs_check_leaf@@Base+0x878>
   197e0:	ldr	r0, [sp, #44]	; 0x2c
   197e2:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   197e6:	cmp.w	r9, #0
   197ea:	beq.n	197f2 <btrfs_check_leaf@@Base+0x7da>
   197ec:	mov	r0, r6
   197ee:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   197f2:	add.w	r9, sp, #48	; 0x30
   197f6:	movs	r2, #0
   197f8:	mov	r0, r6
   197fa:	mov	r1, r9
   197fc:	bl	178ee <rb_free_nodes@@Base+0x48>
   19800:	movs	r3, #1
   19802:	mov	r2, r9
   19804:	mov	r1, r4
   19806:	mov	r0, r8
   19808:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   1980c:	ldr	r3, [r4, #32]
   1980e:	cmp	r5, r3
   19810:	ble.n	198a4 <btrfs_check_leaf@@Base+0x88c>
   19812:	add	r3, fp
   19814:	ldr	r0, [r4, #0]
   19816:	str	r3, [r4, #32]
   19818:	bl	16bc8 <free_extent_buffer@@Base>
   1981c:	ldr	r3, [sp, #44]	; 0x2c
   1981e:	str	r3, [r4, #0]
   19820:	ldr	r3, [r4, #36]	; 0x24
   19822:	subs	r3, #1
   19824:	str	r3, [r4, #36]	; 0x24
   19826:	ldr	r3, [r4, #32]
   19828:	mov.w	r2, #2096	; 0x830
   1982c:	ldr	r1, [pc, #188]	; (198ec <btrfs_check_leaf@@Base+0x8d4>)
   1982e:	ldr	r0, [pc, #192]	; (198f0 <btrfs_check_leaf@@Base+0x8d8>)
   19830:	add	r1, pc
   19832:	lsrs	r3, r3, #31
   19834:	adds	r1, #249	; 0xf9
   19836:	add	r0, pc
   19838:	bl	179bc <rb_free_nodes@@Base+0x116>
   1983c:	ldr	r2, [pc, #180]	; (198f4 <btrfs_check_leaf@@Base+0x8dc>)
   1983e:	ldr	r3, [pc, #136]	; (198c8 <btrfs_check_leaf@@Base+0x8b0>)
   19840:	add	r2, pc
   19842:	ldr	r3, [r2, r3]
   19844:	ldr	r2, [r3, #0]
   19846:	ldr	r3, [sp, #68]	; 0x44
   19848:	eors	r2, r3
   1984a:	beq.n	198b2 <btrfs_check_leaf@@Base+0x89a>
   1984c:	blx	86b8 <__stack_chk_fail@plt>
   19850:	ldr.w	ip, [sp, #12]
   19854:	b.n	19658 <btrfs_check_leaf@@Base+0x640>
   19856:	ldr	r3, [r4, #32]
   19858:	adds	r1, #25
   1985a:	cmp	r3, r5
   1985c:	ldr.w	r3, [r1, #-4]
   19860:	it	eq
   19862:	addeq	r2, sl
   19864:	adds	r3, #25
   19866:	add	r2, r3
   19868:	cmp	r2, r0
   1986a:	bhi.w	1966a <btrfs_check_leaf@@Base+0x652>
   1986e:	adds	r5, #1
   19870:	b.n	19664 <btrfs_check_leaf@@Base+0x64c>
   19872:	ldr	r3, [sp, #24]
   19874:	mla	ip, sl, r2, r3
   19878:	ldr.w	r3, [r8, #464]	; 0x1d0
   1987c:	adds	r2, #1
   1987e:	ldr.w	r3, [r3, #384]	; 0x180
   19882:	ldr.w	lr, [ip, #17]
   19886:	subs	r3, r1, r3
   19888:	add	r3, lr
   1988a:	str.w	r3, [ip, #17]
   1988e:	b.n	1973c <btrfs_check_leaf@@Base+0x724>
   19890:	mla	r1, r0, r2, ip
   19894:	adds	r2, #1
   19896:	ldr.w	lr, [r1, #21]
   1989a:	sub.w	r3, r3, lr
   1989e:	str.w	r3, [r1, #17]
   198a2:	b.n	197dc <btrfs_check_leaf@@Base+0x7c4>
   198a4:	ldr	r0, [sp, #44]	; 0x2c
   198a6:	bl	16bc8 <free_extent_buffer@@Base>
   198aa:	ldr	r3, [r4, #32]
   198ac:	subs	r5, r3, r5
   198ae:	str	r5, [r4, #32]
   198b0:	b.n	19826 <btrfs_check_leaf@@Base+0x80e>
   198b2:	mov	r0, r7
   198b4:	add	sp, #76	; 0x4c
   198b6:	vpop	{d8}
   198ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198be:	nop
   198c0:			; <UNDEFINED> instruction: 0xb7ac
   198c2:	movs	r4, r0
   198c4:			; <UNDEFINED> instruction: 0xb7a6
   198c6:	movs	r4, r0
   198c8:	lsls	r4, r4, #8
   198ca:	movs	r0, r0
   198cc:	adds	r0, #210	; 0xd2
   198ce:	movs	r2, r0
   198d0:	lsls	r7, r0
   198d2:	movs	r2, r0
   198d4:	adds	r0, #70	; 0x46
   198d6:	movs	r2, r0
   198d8:	cmp	r5, #48	; 0x30
   198da:	movs	r2, r0
   198dc:	lsls	r4, r6, #8
   198de:	movs	r0, r0
   198e0:	cmp	r5, #2
   198e2:	movs	r2, r0
   198e4:	cmp	r7, #238	; 0xee
   198e6:	movs	r2, r0
   198e8:	subs	r7, #159	; 0x9f
   198ea:	movs	r2, r0
   198ec:	cmp	r7, #40	; 0x28
   198ee:	movs	r2, r0
   198f0:	cmp	r4, #59	; 0x3b
   198f2:	movs	r2, r0
   198f4:	push	{r3, r6, lr}
   198f6:	movs	r4, r0
   198f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198fc:	mov	r5, r3
   198fe:	vpush	{d8}
   19902:	mov	r6, r1
   19904:	ldr.w	r3, [pc, #1264]	; 19df8 <btrfs_check_leaf@@Base+0xde0>
   19908:	sub	sp, #116	; 0x74
   1990a:	str	r2, [sp, #48]	; 0x30
   1990c:	ldr.w	r2, [pc, #1260]	; 19dfc <btrfs_check_leaf@@Base+0xde4>
   19910:	str	r0, [sp, #44]	; 0x2c
   19912:	add	r2, pc
   19914:	ldr	r3, [r2, r3]
   19916:	ldr	r3, [r3, #0]
   19918:	str	r3, [sp, #108]	; 0x6c
   1991a:	mov.w	r3, #0
   1991e:	ldr	r3, [sp, #164]	; 0xa4
   19920:	cbz	r3, 19946 <btrfs_check_leaf@@Base+0x92e>
   19922:	ldr	r2, [r5, #0]
   19924:	movs	r1, #25
   19926:	ldr	r3, [r5, #32]
   19928:	mla	r3, r1, r3, r2
   1992c:	ldr.w	r2, [r3, #218]	; 0xda
   19930:	ldr	r3, [sp, #160]	; 0xa0
   19932:	add	r3, r1
   19934:	add	r2, r3
   19936:	ldr.w	r3, [r6, #464]	; 0x1d0
   1993a:	ldr.w	r3, [r3, #384]	; 0x180
   1993e:	subs	r3, #101	; 0x65
   19940:	cmp	r2, r3
   19942:	bhi.w	19de4 <btrfs_check_leaf@@Base+0xdcc>
   19946:	ldr	r3, [sp, #160]	; 0xa0
   19948:	cmp	r3, #0
   1994a:	bne.n	19a20 <btrfs_check_leaf@@Base+0xa08>
   1994c:	ldr	r3, [r5, #4]
   1994e:	cbnz	r3, 19964 <btrfs_check_leaf@@Base+0x94c>
   19950:	ldr	r0, [sp, #44]	; 0x2c
   19952:	movs	r3, #1
   19954:	mov	r2, r5
   19956:	mov	r1, r6
   19958:	bl	17e6a <add_root_to_dirty_list@@Base+0x2e>
   1995c:	mov	r9, r0
   1995e:	cmp	r0, #0
   19960:	bne.w	19a68 <btrfs_check_leaf@@Base+0xa50>
   19964:	movs	r3, #0
   19966:	str	r3, [sp, #52]	; 0x34
   19968:	mov	r9, r3
   1996a:	add	r3, sp, #68	; 0x44
   1996c:	vmov	s16, r3
   19970:	ldr.w	r3, [pc, #1164]	; 19e00 <btrfs_check_leaf@@Base+0xde8>
   19974:	add	r3, pc
   19976:	addw	r3, r3, #275	; 0x113
   1997a:	vmov	s17, r3
   1997e:	ldr.w	r8, [r5]
   19982:	ldr.w	fp, [r5, #32]
   19986:	ldr.w	r3, [r8, #192]	; 0xc0
   1998a:	str	r3, [sp, #32]
   1998c:	adds	r3, #1
   1998e:	cmp.w	fp, r3, lsr #1
   19992:	mov.w	sl, r3, lsr #1
   19996:	blt.w	19ad6 <btrfs_check_leaf@@Base+0xabe>
   1999a:	ldr	r3, [sp, #32]
   1999c:	cmp	r3, #1
   1999e:	bne.n	19a7e <btrfs_check_leaf@@Base+0xa66>
   199a0:	ldr	r3, [sp, #32]
   199a2:	cmp	fp, r3
   199a4:	bcc.n	19aa2 <btrfs_check_leaf@@Base+0xa8a>
   199a6:	ldr	r3, [sp, #48]	; 0x30
   199a8:	movs	r7, #0
   199aa:	ldr.w	r2, [r3, #9]
   199ae:	ldr.w	r3, [r3, #13]
   199b2:	str.w	r2, [sp, #77]	; 0x4d
   199b6:	str.w	r3, [sp, #81]	; 0x51
   199ba:	ldr	r3, [sp, #48]	; 0x30
   199bc:	ldrb	r3, [r3, #8]
   199be:	strb.w	r3, [sp, #76]	; 0x4c
   199c2:	ldr	r3, [sp, #48]	; 0x30
   199c4:	ldr	r2, [r3, #0]
   199c6:	ldr	r3, [r3, #4]
   199c8:	strd	r2, r3, [sp, #68]	; 0x44
   199cc:	movs	r2, #0
   199ce:	movs	r3, #0
   199d0:	strd	r2, r3, [sp, #24]
   199d4:	ldrd	r2, r3, [r8, #40]	; 0x28
   199d8:	vstr	s16, [sp, #8]
   199dc:	ldr.w	r1, [r6, #464]	; 0x1d0
   199e0:	strd	r2, r3, [sp, #16]
   199e4:	movs	r3, #0
   199e6:	ldr.w	r2, [r6, #447]	; 0x1bf
   199ea:	str	r3, [sp, #12]
   199ec:	ldr.w	r3, [r6, #451]	; 0x1c3
   199f0:	ldr	r0, [sp, #44]	; 0x2c
   199f2:	strd	r2, r3, [sp]
   199f6:	ldr.w	r2, [r1, #384]	; 0x180
   199fa:	mov	r1, r6
   199fc:	bl	22a0c <btrfs_alloc_free_block@@Base>
   19a00:	cmn.w	r0, #4096	; 0x1000
   19a04:	mov	r4, r0
   19a06:	bls.w	19b3e <btrfs_check_leaf@@Base+0xb26>
   19a0a:	ldr	r1, [pc, #1016]	; (19e04 <btrfs_check_leaf@@Base+0xdec>)
   19a0c:	movs	r3, #1
   19a0e:	ldr	r0, [pc, #1016]	; (19e08 <btrfs_check_leaf@@Base+0xdf0>)
   19a10:	mov.w	r2, #2272	; 0x8e0
   19a14:	add	r1, pc
   19a16:	add.w	r1, r1, #264	; 0x108
   19a1a:	add	r0, pc
   19a1c:	bl	17982 <rb_free_nodes@@Base+0xdc>
   19a20:	ldr	r3, [sp, #48]	; 0x30
   19a22:	ldrb	r3, [r3, #8]
   19a24:	cmp	r3, #84	; 0x54
   19a26:	beq.n	1994c <btrfs_check_leaf@@Base+0x934>
   19a28:	ldr	r3, [sp, #160]	; 0xa0
   19a2a:	movs	r4, #0
   19a2c:	ldr	r0, [sp, #44]	; 0x2c
   19a2e:	mov	r2, r5
   19a30:	mov	r1, r6
   19a32:	str	r4, [sp, #0]
   19a34:	bl	19350 <btrfs_check_leaf@@Base+0x338>
   19a38:	subs.w	r9, r0, #0
   19a3c:	blt.n	19a68 <btrfs_check_leaf@@Base+0xa50>
   19a3e:	bne.n	19a54 <btrfs_check_leaf@@Base+0xa3c>
   19a40:	ldr	r0, [r5, #0]
   19a42:	bl	18f90 <btrfs_leaf_free_space@@Base>
   19a46:	ldr	r3, [sp, #160]	; 0xa0
   19a48:	cmp	r0, r3
   19a4a:	blt.w	1994c <btrfs_check_leaf@@Base+0x934>
   19a4e:	mov.w	r9, #0
   19a52:	b.n	19a68 <btrfs_check_leaf@@Base+0xa50>
   19a54:	ldr	r3, [sp, #160]	; 0xa0
   19a56:	mov	r2, r5
   19a58:	ldr	r0, [sp, #44]	; 0x2c
   19a5a:	mov	r1, r6
   19a5c:	str	r4, [sp, #0]
   19a5e:	bl	195c8 <btrfs_check_leaf@@Base+0x5b0>
   19a62:	subs.w	r9, r0, #0
   19a66:	bge.n	19a40 <btrfs_check_leaf@@Base+0xa28>
   19a68:	ldr	r2, [pc, #928]	; (19e0c <btrfs_check_leaf@@Base+0xdf4>)
   19a6a:	ldr	r3, [pc, #908]	; (19df8 <btrfs_check_leaf@@Base+0xde0>)
   19a6c:	add	r2, pc
   19a6e:	ldr	r3, [r2, r3]
   19a70:	ldr	r2, [r3, #0]
   19a72:	ldr	r3, [sp, #108]	; 0x6c
   19a74:	eors	r2, r3
   19a76:	beq.w	19dea <btrfs_check_leaf@@Base+0xdd2>
   19a7a:	blx	86b8 <__stack_chk_fail@plt>
   19a7e:	ldr	r3, [sp, #32]
   19a80:	mov	r1, sl
   19a82:	mov	r0, r8
   19a84:	sub.w	r2, r3, sl
   19a88:	bl	17d08 <rb_free_nodes@@Base+0x462>
   19a8c:	ldr	r3, [sp, #160]	; 0xa0
   19a8e:	add	r0, r3
   19a90:	ldr.w	r3, [r6, #464]	; 0x1d0
   19a94:	ldr.w	r3, [r3, #384]	; 0x180
   19a98:	subs	r3, #101	; 0x65
   19a9a:	cmp	r0, r3
   19a9c:	bhi.n	199a0 <btrfs_check_leaf@@Base+0x988>
   19a9e:	movs	r7, #1
   19aa0:	b.n	19ac8 <btrfs_check_leaf@@Base+0xab0>
   19aa2:	ldr	r3, [sp, #32]
   19aa4:	mov	r1, fp
   19aa6:	mov	r0, r8
   19aa8:	mov	sl, fp
   19aaa:	sub.w	r2, r3, fp
   19aae:	bl	17d08 <rb_free_nodes@@Base+0x462>
   19ab2:	ldr	r3, [sp, #160]	; 0xa0
   19ab4:	add	r0, r3
   19ab6:	ldr.w	r3, [r6, #464]	; 0x1d0
   19aba:	ldr.w	r3, [r3, #384]	; 0x180
   19abe:	subs	r3, #101	; 0x65
   19ac0:	cmp	r0, r3
   19ac2:	ite	hi
   19ac4:	movhi	r7, #2
   19ac6:	movls	r7, #1
   19ac8:	vmov	r1, s16
   19acc:	mov	r2, sl
   19ace:	mov	r0, r8
   19ad0:	bl	178ee <rb_free_nodes@@Base+0x48>
   19ad4:	b.n	199cc <btrfs_check_leaf@@Base+0x9b4>
   19ad6:	mov	r2, sl
   19ad8:	movs	r1, #0
   19ada:	mov	r0, r8
   19adc:	bl	17d08 <rb_free_nodes@@Base+0x462>
   19ae0:	ldr	r3, [sp, #160]	; 0xa0
   19ae2:	add	r0, r3
   19ae4:	ldr.w	r3, [r6, #464]	; 0x1d0
   19ae8:	ldr.w	r3, [r3, #384]	; 0x180
   19aec:	subs	r3, #101	; 0x65
   19aee:	cmp	r0, r3
   19af0:	bls.n	19a9e <btrfs_check_leaf@@Base+0xa86>
   19af2:	ldr	r3, [sp, #164]	; 0xa4
   19af4:	cbnz	r3, 19b2e <btrfs_check_leaf@@Base+0xb16>
   19af6:	ldr	r3, [sp, #160]	; 0xa0
   19af8:	cbz	r3, 19b2e <btrfs_check_leaf@@Base+0xb16>
   19afa:	cmp.w	fp, #0
   19afe:	beq.w	199a6 <btrfs_check_leaf@@Base+0x98e>
   19b02:	ldr	r3, [sp, #32]
   19b04:	cmp	fp, r3
   19b06:	beq.n	19b3a <btrfs_check_leaf@@Base+0xb22>
   19b08:	sub.w	r2, r3, fp
   19b0c:	mov	r1, fp
   19b0e:	mov	r0, r8
   19b10:	mov	sl, fp
   19b12:	bl	17d08 <rb_free_nodes@@Base+0x462>
   19b16:	ldr	r3, [sp, #160]	; 0xa0
   19b18:	add	r0, r3
   19b1a:	ldr.w	r3, [r6, #464]	; 0x1d0
   19b1e:	ldr.w	r3, [r3, #384]	; 0x180
   19b22:	subs	r3, #101	; 0x65
   19b24:	cmp	r0, r3
   19b26:	ite	ls
   19b28:	movls	r7, #1
   19b2a:	movhi	r7, #2
   19b2c:	b.n	19ac8 <btrfs_check_leaf@@Base+0xab0>
   19b2e:	cmp.w	fp, #0
   19b32:	bne.n	19b02 <btrfs_check_leaf@@Base+0xaea>
   19b34:	movs	r7, #1
   19b36:	mov	sl, r7
   19b38:	b.n	19ac8 <btrfs_check_leaf@@Base+0xab0>
   19b3a:	mov	sl, fp
   19b3c:	b.n	19a9e <btrfs_check_leaf@@Base+0xa86>
   19b3e:	movs	r2, #0
   19b40:	movs	r3, #101	; 0x65
   19b42:	mov	r1, r2
   19b44:	bl	1734a <memset_extent_buffer@@Base>
   19b48:	ldr	r3, [r4, #40]	; 0x28
   19b4a:	mov	r0, r4
   19b4c:	str.w	r3, [r4, #144]	; 0x90
   19b50:	ldr	r3, [r4, #44]	; 0x2c
   19b52:	str.w	r3, [r4, #148]	; 0x94
   19b56:	ldr	r3, [sp, #44]	; 0x2c
   19b58:	ldrd	r2, r3, [r3, #8]
   19b5c:	str.w	r2, [r4, #176]	; 0xb0
   19b60:	str.w	r3, [r4, #180]	; 0xb4
   19b64:	ldr.w	r2, [r4, #152]	; 0x98
   19b68:	ldr.w	r3, [r4, #156]	; 0x9c
   19b6c:	bic.w	r3, r3, #4278190080	; 0xff000000
   19b70:	str.w	r2, [r4, #152]	; 0x98
   19b74:	orr.w	r3, r3, #16777216	; 0x1000000
   19b78:	str.w	r3, [r4, #156]	; 0x9c
   19b7c:	ldr.w	r2, [r6, #447]	; 0x1bf
   19b80:	ldr.w	r3, [r6, #451]	; 0x1c3
   19b84:	str.w	r2, [r4, #184]	; 0xb8
   19b88:	movs	r2, #32
   19b8a:	str.w	r3, [r4, #188]	; 0xbc
   19b8e:	mov.w	r3, #0
   19b92:	strb.w	r3, [r4, #196]	; 0xc4
   19b96:	ldr.w	r3, [r6, #464]	; 0x1d0
   19b9a:	ldr.w	r1, [r3, #352]	; 0x160
   19b9e:	movs	r3, #16
   19ba0:	add	r1, r3
   19ba2:	bl	172d8 <write_extent_buffer@@Base>
   19ba6:	ldr.w	r1, [r6, #464]	; 0x1d0
   19baa:	movs	r3, #16
   19bac:	movs	r2, #64	; 0x40
   19bae:	mov	r0, r4
   19bb0:	bl	172d8 <write_extent_buffer@@Base>
   19bb4:	ldr.w	r1, [r6, #464]	; 0x1d0
   19bb8:	ldr.w	r2, [r6, #200]	; 0xc8
   19bbc:	ldr.w	r3, [r6, #204]	; 0xcc
   19bc0:	ldr.w	r1, [r1, #384]	; 0x180
   19bc4:	adds	r2, r2, r1
   19bc6:	str.w	r2, [r6, #200]	; 0xc8
   19bca:	adc.w	r3, r3, #0
   19bce:	str.w	r3, [r6, #204]	; 0xcc
   19bd2:	cmp	r7, #0
   19bd4:	bne.n	19c7a <btrfs_check_leaf@@Base+0xc62>
   19bd6:	ldrd	r2, r3, [r4, #40]	; 0x28
   19bda:	cmp	fp, sl
   19bdc:	ldr	r0, [sp, #44]	; 0x2c
   19bde:	add.w	r1, r6, #464	; 0x1d0
   19be2:	strb.w	r7, [r4, #192]	; 0xc0
   19be6:	add.w	r0, r0, #8
   19bea:	strd	r2, r3, [sp, #32]
   19bee:	strb.w	r7, [r4, #193]	; 0xc1
   19bf2:	strb.w	r7, [r4, #194]	; 0xc2
   19bf6:	strb.w	r7, [r4, #195]	; 0xc3
   19bfa:	blt.n	19c36 <btrfs_check_leaf@@Base+0xc1e>
   19bfc:	movs	r3, #1
   19bfe:	str	r3, [sp, #12]
   19c00:	ldr	r3, [r5, #36]	; 0x24
   19c02:	adds	r3, #1
   19c04:	str	r3, [sp, #8]
   19c06:	ldrd	r2, r3, [sp, #32]
   19c0a:	strd	r2, r3, [sp]
   19c0e:	mov	r2, r5
   19c10:	vmov	r3, s16
   19c14:	bl	17a0c <rb_free_nodes@@Base+0x166>
   19c18:	cmp	r0, #0
   19c1a:	it	ne
   19c1c:	movne	r9, r0
   19c1e:	ldr	r0, [r5, #0]
   19c20:	bl	16bc8 <free_extent_buffer@@Base>
   19c24:	ldr	r3, [r5, #36]	; 0x24
   19c26:	str	r4, [r5, #0]
   19c28:	adds	r3, #1
   19c2a:	str	r7, [r5, #32]
   19c2c:	str	r3, [r5, #36]	; 0x24
   19c2e:	mov	r0, r4
   19c30:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19c34:	b.n	19a68 <btrfs_check_leaf@@Base+0xa50>
   19c36:	ldr	r3, [r5, #36]	; 0x24
   19c38:	mov.w	r8, #1
   19c3c:	str.w	r8, [sp, #12]
   19c40:	str	r3, [sp, #8]
   19c42:	ldrd	r2, r3, [sp, #32]
   19c46:	strd	r2, r3, [sp]
   19c4a:	mov	r2, r5
   19c4c:	vmov	r3, s16
   19c50:	bl	17a0c <rb_free_nodes@@Base+0x166>
   19c54:	cmp	r0, #0
   19c56:	it	ne
   19c58:	movne	r9, r0
   19c5a:	ldr	r0, [r5, #0]
   19c5c:	bl	16bc8 <free_extent_buffer@@Base>
   19c60:	ldr	r3, [r5, #36]	; 0x24
   19c62:	str	r4, [r5, #0]
   19c64:	str	r7, [r5, #32]
   19c66:	cmp	r3, #0
   19c68:	bne.n	19c2e <btrfs_check_leaf@@Base+0xc16>
   19c6a:	vmov	r2, s16
   19c6e:	mov	r3, r8
   19c70:	mov	r1, r5
   19c72:	mov	r0, r6
   19c74:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   19c78:	b.n	19c2e <btrfs_check_leaf@@Base+0xc16>
   19c7a:	ldr	r3, [sp, #32]
   19c7c:	mov	r1, sl
   19c7e:	mov	r0, r8
   19c80:	sub.w	r9, r3, sl
   19c84:	str.w	r9, [r4, #192]	; 0xc0
   19c88:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   19c8c:	mov	r1, r8
   19c8e:	str	r0, [sp, #32]
   19c90:	ldr.w	r0, [r6, #464]	; 0x1d0
   19c94:	add.w	r0, r0, #384	; 0x180
   19c98:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19c9c:	ldr	r3, [sp, #32]
   19c9e:	movs	r2, #25
   19ca0:	mov	r1, r8
   19ca2:	subs	r3, r3, r0
   19ca4:	str	r3, [sp, #60]	; 0x3c
   19ca6:	mul.w	r3, r2, sl
   19caa:	str	r0, [sp, #56]	; 0x38
   19cac:	mul.w	r2, r2, r9
   19cb0:	mov	r0, r4
   19cb2:	adds	r3, #101	; 0x65
   19cb4:	str	r2, [sp, #0]
   19cb6:	movs	r2, #101	; 0x65
   19cb8:	bl	172ea <copy_extent_buffer@@Base>
   19cbc:	ldr.w	r0, [r6, #464]	; 0x1d0
   19cc0:	ldr	r3, [sp, #56]	; 0x38
   19cc2:	mov	r1, r8
   19cc4:	add.w	r0, r0, #384	; 0x180
   19cc8:	ldr	r2, [r0, #0]
   19cca:	add	r2, r3
   19ccc:	ldr	r3, [sp, #32]
   19cce:	subs	r2, r2, r3
   19cd0:	str	r2, [sp, #32]
   19cd2:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19cd6:	ldr	r3, [sp, #60]	; 0x3c
   19cd8:	ldr	r2, [sp, #32]
   19cda:	mov	r1, r8
   19cdc:	str	r3, [sp, #0]
   19cde:	add.w	r3, r0, #101	; 0x65
   19ce2:	mov	r0, r4
   19ce4:	bl	172ea <copy_extent_buffer@@Base>
   19ce8:	mov	r1, sl
   19cea:	mov	r0, r8
   19cec:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   19cf0:	ldr.w	r3, [r6, #464]	; 0x1d0
   19cf4:	add.w	r2, r4, #197	; 0xc5
   19cf8:	ldr.w	r3, [r3, #384]	; 0x180
   19cfc:	subs	r3, #101	; 0x65
   19cfe:	subs	r0, r3, r0
   19d00:	movs	r3, #0
   19d02:	cmp	r9, r3
   19d04:	bgt.n	19dcc <btrfs_check_leaf@@Base+0xdb4>
   19d06:	add	r3, sp, #88	; 0x58
   19d08:	movs	r2, #0
   19d0a:	mov	r0, r4
   19d0c:	str.w	sl, [r8, #192]	; 0xc0
   19d10:	mov	r1, r3
   19d12:	str	r3, [sp, #32]
   19d14:	bl	178ee <rb_free_nodes@@Base+0x48>
   19d18:	movs	r2, #1
   19d1a:	str	r2, [sp, #12]
   19d1c:	ldr	r2, [r5, #36]	; 0x24
   19d1e:	ldr	r3, [sp, #32]
   19d20:	adds	r2, #1
   19d22:	str	r2, [sp, #8]
   19d24:	ldrd	r0, r1, [r4, #40]	; 0x28
   19d28:	mov	r2, r5
   19d2a:	strd	r0, r1, [sp]
   19d2e:	add.w	r1, r6, #464	; 0x1d0
   19d32:	ldr	r0, [sp, #44]	; 0x2c
   19d34:	adds	r0, #8
   19d36:	bl	17a0c <rb_free_nodes@@Base+0x166>
   19d3a:	mov	r9, r0
   19d3c:	mov	r0, r4
   19d3e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19d42:	mov	r0, r8
   19d44:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19d48:	ldr	r3, [r5, #32]
   19d4a:	ldr	r0, [pc, #196]	; (19e10 <btrfs_check_leaf@@Base+0xdf8>)
   19d4c:	movw	r2, #2154	; 0x86a
   19d50:	subs.w	r3, r3, fp
   19d54:	vmov	r1, s17
   19d58:	add	r0, pc
   19d5a:	it	ne
   19d5c:	movne	r3, #1
   19d5e:	bl	179bc <rb_free_nodes@@Base+0x116>
   19d62:	cmp	fp, sl
   19d64:	blt.n	19ddc <btrfs_check_leaf@@Base+0xdc4>
   19d66:	ldr	r0, [r5, #0]
   19d68:	bl	16bc8 <free_extent_buffer@@Base>
   19d6c:	ldr	r3, [r5, #32]
   19d6e:	str	r4, [r5, #0]
   19d70:	sub.w	r3, r3, sl
   19d74:	str	r3, [r5, #32]
   19d76:	ldr	r3, [r5, #36]	; 0x24
   19d78:	adds	r3, #1
   19d7a:	str	r3, [r5, #36]	; 0x24
   19d7c:	ldr	r3, [r5, #32]
   19d7e:	movw	r2, #2165	; 0x875
   19d82:	ldr	r4, [pc, #144]	; (19e14 <btrfs_check_leaf@@Base+0xdfc>)
   19d84:	ldr	r0, [pc, #144]	; (19e18 <btrfs_check_leaf@@Base+0xe00>)
   19d86:	add	r4, pc
   19d88:	lsrs	r3, r3, #31
   19d8a:	addw	r1, r4, #275	; 0x113
   19d8e:	add	r0, pc
   19d90:	bl	179bc <rb_free_nodes@@Base+0x116>
   19d94:	ldr	r0, [pc, #132]	; (19e1c <btrfs_check_leaf@@Base+0xe04>)
   19d96:	add.w	r1, r4, #264	; 0x108
   19d9a:	mov	r3, r9
   19d9c:	add	r0, pc
   19d9e:	movw	r2, #2325	; 0x915
   19da2:	str	r1, [sp, #32]
   19da4:	bl	179bc <rb_free_nodes@@Base+0x116>
   19da8:	cmp	r7, #2
   19daa:	bne.w	19a68 <btrfs_check_leaf@@Base+0xa50>
   19dae:	ldr	r3, [sp, #52]	; 0x34
   19db0:	movw	r2, #2328	; 0x918
   19db4:	ldr	r0, [pc, #104]	; (19e20 <btrfs_check_leaf@@Base+0xe08>)
   19db6:	subs	r3, #0
   19db8:	ldr	r1, [sp, #32]
   19dba:	add	r0, pc
   19dbc:	it	ne
   19dbe:	movne	r3, #1
   19dc0:	bl	179bc <rb_free_nodes@@Base+0x116>
   19dc4:	ldr	r3, [sp, #52]	; 0x34
   19dc6:	adds	r3, #1
   19dc8:	str	r3, [sp, #52]	; 0x34
   19dca:	b.n	1997e <btrfs_check_leaf@@Base+0x966>
   19dcc:	ldr.w	r1, [r2, #17]
   19dd0:	adds	r3, #1
   19dd2:	adds	r2, #25
   19dd4:	add	r1, r0
   19dd6:	str.w	r1, [r2, #-8]
   19dda:	b.n	19d02 <btrfs_check_leaf@@Base+0xcea>
   19ddc:	mov	r0, r4
   19dde:	bl	16bc8 <free_extent_buffer@@Base>
   19de2:	b.n	19d7c <btrfs_check_leaf@@Base+0xd64>
   19de4:	mvn.w	r9, #74	; 0x4a
   19de8:	b.n	19a68 <btrfs_check_leaf@@Base+0xa50>
   19dea:	mov	r0, r9
   19dec:	add	sp, #116	; 0x74
   19dee:	vpop	{d8}
   19df2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19df6:	nop
   19df8:	lsls	r4, r4, #8
   19dfa:	movs	r0, r0
   19dfc:	push	{r1, r2, r4, r5, r6}
   19dfe:	movs	r4, r0
   19e00:	cmp	r5, #228	; 0xe4
   19e02:	movs	r2, r0
   19e04:	cmp	r5, #68	; 0x44
   19e06:	movs	r2, r0
   19e08:	subs	r4, #247	; 0xf7
   19e0a:	movs	r2, r0
   19e0c:	cbz	r4, 19e56 <btrfs_truncate_item@@Base+0x32>
   19e0e:	movs	r4, r0
   19e10:	movs	r7, #44	; 0x2c
   19e12:	movs	r2, r0
   19e14:	cmp	r1, #210	; 0xd2
   19e16:	movs	r2, r0
   19e18:	movs	r6, #227	; 0xe3
   19e1a:	movs	r2, r0
   19e1c:	lsls	r0, r1, #1
   19e1e:	movs	r2, r0
   19e20:	movs	r6, #225	; 0xe1
   19e22:	movs	r2, r0

00019e24 <btrfs_truncate_item@@Base>:
   19e24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e28:	sub	sp, #60	; 0x3c
   19e2a:	mov	r6, r2
   19e2c:	ldr	r2, [pc, #392]	; (19fb8 <btrfs_truncate_item@@Base+0x194>)
   19e2e:	str	r3, [sp, #24]
   19e30:	mov.w	sl, #25
   19e34:	ldr	r3, [pc, #388]	; (19fbc <btrfs_truncate_item@@Base+0x198>)
   19e36:	add	r2, pc
   19e38:	ldr	r4, [r1, #0]
   19e3a:	mov	r9, r0
   19e3c:	ldr	r7, [r1, #32]
   19e3e:	mov	r8, r1
   19e40:	ldr	r3, [r2, r3]
   19e42:	ldr	r3, [r3, #0]
   19e44:	str	r3, [sp, #52]	; 0x34
   19e46:	mov.w	r3, #0
   19e4a:	add.w	r3, r4, #96	; 0x60
   19e4e:	str	r3, [sp, #16]
   19e50:	mla	r3, sl, r7, r3
   19e54:	add.w	r2, r3, #101	; 0x65
   19e58:	str	r2, [sp, #12]
   19e5a:	ldr.w	r5, [r3, #122]	; 0x7a
   19e5e:	cmp	r6, r5
   19e60:	beq.w	19f9c <btrfs_truncate_item@@Base+0x178>
   19e64:	ldr.w	r0, [r0, #464]	; 0x1d0
   19e68:	mov	r1, r4
   19e6a:	ldr.w	fp, [r4, #192]	; 0xc0
   19e6e:	add.w	r0, r0, #384	; 0x180
   19e72:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19e76:	ldr	r3, [sp, #12]
   19e78:	ldr	r1, [pc, #324]	; (19fc0 <btrfs_truncate_item@@Base+0x19c>)
   19e7a:	mov.w	r2, #2480	; 0x9b0
   19e7e:	ldr.w	r3, [r3, #17]
   19e82:	add	r1, pc
   19e84:	add.w	r1, r1, #290	; 0x122
   19e88:	str	r1, [sp, #28]
   19e8a:	str	r3, [sp, #20]
   19e8c:	subs	r3, r5, r6
   19e8e:	str	r3, [sp, #8]
   19e90:	lsrs	r3, r7, #31
   19e92:	str	r0, [sp, #4]
   19e94:	ldr	r0, [pc, #300]	; (19fc4 <btrfs_truncate_item@@Base+0x1a0>)
   19e96:	add	r0, pc
   19e98:	bl	179bc <rb_free_nodes@@Base+0x116>
   19e9c:	cmp	r7, fp
   19e9e:	ldr	r0, [pc, #296]	; (19fc8 <btrfs_truncate_item@@Base+0x1a4>)
   19ea0:	movw	r2, #2481	; 0x9b1
   19ea4:	ite	cc
   19ea6:	movcc	r3, #0
   19ea8:	movcs	r3, #1
   19eaa:	add	r0, pc
   19eac:	ldr	r1, [sp, #28]
   19eae:	bl	179bc <rb_free_nodes@@Base+0x116>
   19eb2:	add.w	r0, r4, #197	; 0xc5
   19eb6:	mov	r3, r7
   19eb8:	cmp	r3, fp
   19eba:	bcc.n	19f10 <btrfs_truncate_item@@Base+0xec>
   19ebc:	ldr	r3, [sp, #4]
   19ebe:	add.w	sl, r3, #101	; 0x65
   19ec2:	ldr	r3, [sp, #8]
   19ec4:	add.w	fp, r3, sl
   19ec8:	ldr	r3, [sp, #24]
   19eca:	cbz	r3, 19f24 <btrfs_truncate_item@@Base+0x100>
   19ecc:	ldr	r3, [sp, #20]
   19ece:	mov	r1, fp
   19ed0:	ldr	r2, [sp, #4]
   19ed2:	mov	r0, r4
   19ed4:	add	r3, r6
   19ed6:	subs	r3, r3, r2
   19ed8:	mov	r2, sl
   19eda:	bl	17334 <memmove_extent_buffer@@Base>
   19ede:	ldr	r3, [sp, #12]
   19ee0:	mov	r0, r4
   19ee2:	str.w	r6, [r3, #21]
   19ee6:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   19eea:	mov	r0, r4
   19eec:	bl	18f90 <btrfs_leaf_free_space@@Base>
   19ef0:	cmp	r0, #0
   19ef2:	bge.n	19f9c <btrfs_truncate_item@@Base+0x178>
   19ef4:	mov	r0, r4
   19ef6:	bl	24fc8 <btrfs_print_leaf@@Base>
   19efa:	ldr	r1, [pc, #208]	; (19fcc <btrfs_truncate_item@@Base+0x1a8>)
   19efc:	ldr	r0, [pc, #208]	; (19fd0 <btrfs_truncate_item@@Base+0x1ac>)
   19efe:	movs	r3, #1
   19f00:	add	r1, pc
   19f02:	movw	r2, #2542	; 0x9ee
   19f06:	add.w	r1, r1, #290	; 0x122
   19f0a:	add	r0, pc
   19f0c:	bl	17982 <rb_free_nodes@@Base+0xdc>
   19f10:	mla	r1, sl, r3, r0
   19f14:	ldr	r2, [sp, #8]
   19f16:	adds	r3, #1
   19f18:	ldr.w	ip, [r1, #17]
   19f1c:	add	r2, ip
   19f1e:	str.w	r2, [r1, #17]
   19f22:	b.n	19eb8 <btrfs_truncate_item@@Base+0x94>
   19f24:	add	r1, sp, #32
   19f26:	mov	r2, r7
   19f28:	mov	r0, r4
   19f2a:	bl	178ee <rb_free_nodes@@Base+0x48>
   19f2e:	ldrb.w	r3, [sp, #40]	; 0x28
   19f32:	cmp	r3, #108	; 0x6c
   19f34:	bne.n	19f52 <btrfs_truncate_item@@Base+0x12e>
   19f36:	ldr	r3, [sp, #12]
   19f38:	ldr.w	r1, [r3, #17]
   19f3c:	ldr	r3, [sp, #16]
   19f3e:	adds	r1, #101	; 0x65
   19f40:	subs	r2, r1, r5
   19f42:	add	r2, r6
   19f44:	add	r3, r2
   19f46:	ldrb	r3, [r3, #20]
   19f48:	cbnz	r3, 19f52 <btrfs_truncate_item@@Base+0x12e>
   19f4a:	movs	r3, #21
   19f4c:	mov	r0, r4
   19f4e:	bl	17334 <memmove_extent_buffer@@Base>
   19f52:	ldr	r2, [sp, #4]
   19f54:	mov	r1, fp
   19f56:	ldr	r3, [sp, #20]
   19f58:	mov	r0, r4
   19f5a:	add	r5, sp, #32
   19f5c:	subs	r3, r3, r2
   19f5e:	mov	r2, sl
   19f60:	bl	17334 <memmove_extent_buffer@@Base>
   19f64:	ldr.w	r2, [sp, #41]	; 0x29
   19f68:	ldr.w	r3, [sp, #45]	; 0x2d
   19f6c:	mov	r0, r4
   19f6e:	mov	r1, r2
   19f70:	mov	r2, r3
   19f72:	ldr	r3, [sp, #8]
   19f74:	adds	r1, r1, r3
   19f76:	str.w	r1, [sp, #41]	; 0x29
   19f7a:	adc.w	r2, r2, #0
   19f7e:	mov	r1, r5
   19f80:	str.w	r2, [sp, #45]	; 0x2d
   19f84:	mov	r2, r7
   19f86:	bl	178e2 <rb_free_nodes@@Base+0x3c>
   19f8a:	cmp	r7, #0
   19f8c:	bne.n	19ede <btrfs_truncate_item@@Base+0xba>
   19f8e:	movs	r3, #1
   19f90:	mov	r2, r5
   19f92:	mov	r1, r8
   19f94:	mov	r0, r9
   19f96:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   19f9a:	b.n	19ede <btrfs_truncate_item@@Base+0xba>
   19f9c:	ldr	r2, [pc, #52]	; (19fd4 <btrfs_truncate_item@@Base+0x1b0>)
   19f9e:	ldr	r3, [pc, #28]	; (19fbc <btrfs_truncate_item@@Base+0x198>)
   19fa0:	add	r2, pc
   19fa2:	ldr	r3, [r2, r3]
   19fa4:	ldr	r2, [r3, #0]
   19fa6:	ldr	r3, [sp, #52]	; 0x34
   19fa8:	eors	r2, r3
   19faa:	beq.n	19fb0 <btrfs_truncate_item@@Base+0x18c>
   19fac:	blx	86b8 <__stack_chk_fail@plt>
   19fb0:	movs	r0, #0
   19fb2:	add	sp, #60	; 0x3c
   19fb4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fb8:	add	r7, sp, #328	; 0x148
   19fba:	movs	r4, r0
   19fbc:	lsls	r4, r4, #8
   19fbe:	movs	r0, r0
   19fc0:	cmp	r0, #214	; 0xd6
   19fc2:	movs	r2, r0
   19fc4:	movs	r6, #22
   19fc6:	movs	r2, r0
   19fc8:	movs	r6, #11
   19fca:	movs	r2, r0
   19fcc:	cmp	r0, #88	; 0x58
   19fce:	movs	r2, r0
   19fd0:	subs	r0, #7
   19fd2:	movs	r2, r0
   19fd4:	add	r5, sp, #928	; 0x3a0
   19fd6:	movs	r4, r0

00019fd8 <btrfs_extend_item@@Base>:
   19fd8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fdc:	mov	r5, r1
   19fde:	ldr	r4, [r1, #0]
   19fe0:	sub	sp, #20
   19fe2:	ldr.w	r0, [r0, #464]	; 0x1d0
   19fe6:	mov	r6, r2
   19fe8:	ldr.w	fp, [pc, #256]	; 1a0ec <btrfs_extend_item@@Base+0x114>
   19fec:	mov	r1, r4
   19fee:	add.w	r0, r0, #384	; 0x180
   19ff2:	bl	17968 <rb_free_nodes@@Base+0xc2>
   19ff6:	ldr.w	sl, [r4, #192]	; 0xc0
   19ffa:	add	fp, pc
   19ffc:	mov	r7, r0
   19ffe:	mov	r0, r4
   1a000:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1a004:	cmp	r0, r6
   1a006:	bcs.n	1a024 <btrfs_extend_item@@Base+0x4c>
   1a008:	mov	r0, r4
   1a00a:	bl	24fc8 <btrfs_print_leaf@@Base>
   1a00e:	ldr	r1, [pc, #224]	; (1a0f0 <btrfs_extend_item@@Base+0x118>)
   1a010:	ldr	r0, [pc, #224]	; (1a0f4 <btrfs_extend_item@@Base+0x11c>)
   1a012:	movs	r3, #1
   1a014:	add	r1, pc
   1a016:	movw	r2, #2567	; 0xa07
   1a01a:	add.w	r1, r1, #310	; 0x136
   1a01e:	add	r0, pc
   1a020:	bl	17982 <rb_free_nodes@@Base+0xdc>
   1a024:	ldr	r5, [r5, #32]
   1a026:	mov	r0, r4
   1a028:	ldr.w	r8, [pc, #204]	; 1a0f8 <btrfs_extend_item@@Base+0x120>
   1a02c:	mov	r1, r5
   1a02e:	add	r8, pc
   1a030:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   1a034:	add.w	r8, r8, #310	; 0x136
   1a038:	lsrs	r3, r5, #31
   1a03a:	movw	r2, #2572	; 0xa0c
   1a03e:	mov	r1, r8
   1a040:	mov	r9, r0
   1a042:	ldr	r0, [pc, #184]	; (1a0fc <btrfs_extend_item@@Base+0x124>)
   1a044:	add	r0, pc
   1a046:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a04a:	cmp	r5, sl
   1a04c:	str	r5, [sp, #12]
   1a04e:	bcs.n	1a0a6 <btrfs_extend_item@@Base+0xce>
   1a050:	add.w	r1, r4, #197	; 0xc5
   1a054:	movs	r0, #25
   1a056:	cmp	r5, sl
   1a058:	bne.n	1a0d2 <btrfs_extend_item@@Base+0xfa>
   1a05a:	add.w	r2, r7, #101	; 0x65
   1a05e:	sub.w	r3, r9, r7
   1a062:	subs	r1, r2, r6
   1a064:	mov	r0, r4
   1a066:	bl	17334 <memmove_extent_buffer@@Base>
   1a06a:	ldr	r2, [sp, #12]
   1a06c:	movs	r3, #25
   1a06e:	mov	r0, r4
   1a070:	mla	r3, r3, r2, r4
   1a074:	ldr.w	r2, [r3, #218]	; 0xda
   1a078:	add	r6, r2
   1a07a:	str.w	r6, [r3, #218]	; 0xda
   1a07e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a082:	mov	r0, r4
   1a084:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1a088:	cmp	r0, #0
   1a08a:	bge.n	1a0e4 <btrfs_extend_item@@Base+0x10c>
   1a08c:	mov	r0, r4
   1a08e:	bl	24fc8 <btrfs_print_leaf@@Base>
   1a092:	ldr	r1, [pc, #108]	; (1a100 <btrfs_extend_item@@Base+0x128>)
   1a094:	ldr	r0, [pc, #108]	; (1a104 <btrfs_extend_item@@Base+0x12c>)
   1a096:	movs	r3, #1
   1a098:	add	r1, pc
   1a09a:	movw	r2, #2604	; 0xa2c
   1a09e:	add.w	r1, r1, #310	; 0x136
   1a0a2:	add	r0, pc
   1a0a4:	b.n	1a020 <btrfs_extend_item@@Base+0x48>
   1a0a6:	mov	r0, r4
   1a0a8:	bl	24fc8 <btrfs_print_leaf@@Base>
   1a0ac:	ldr	r3, [pc, #88]	; (1a108 <btrfs_extend_item@@Base+0x130>)
   1a0ae:	ldr	r2, [pc, #92]	; (1a10c <btrfs_extend_item@@Base+0x134>)
   1a0b0:	movs	r1, #1
   1a0b2:	ldr.w	r0, [fp, r3]
   1a0b6:	add	r2, pc
   1a0b8:	mov	r3, r5
   1a0ba:	str.w	sl, [sp]
   1a0be:	ldr	r0, [r0, #0]
   1a0c0:	blx	8a14 <__fprintf_chk@plt+0x4>
   1a0c4:	ldr	r0, [pc, #72]	; (1a110 <btrfs_extend_item@@Base+0x138>)
   1a0c6:	movs	r3, #1
   1a0c8:	mov.w	r2, #2576	; 0xa10
   1a0cc:	add	r0, pc
   1a0ce:	mov	r1, r8
   1a0d0:	b.n	1a020 <btrfs_extend_item@@Base+0x48>
   1a0d2:	mla	r2, r0, r5, r1
   1a0d6:	adds	r5, #1
   1a0d8:	ldr.w	r3, [r2, #17]
   1a0dc:	subs	r3, r3, r6
   1a0de:	str.w	r3, [r2, #17]
   1a0e2:	b.n	1a056 <btrfs_extend_item@@Base+0x7e>
   1a0e4:	movs	r0, #0
   1a0e6:	add	sp, #20
   1a0e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0ec:	add	r5, sp, #568	; 0x238
   1a0ee:	movs	r4, r0
   1a0f0:	movs	r7, #68	; 0x44
   1a0f2:	movs	r2, r0
   1a0f4:	adds	r6, #243	; 0xf3
   1a0f6:	movs	r2, r0
   1a0f8:	movs	r7, #42	; 0x2a
   1a0fa:	movs	r2, r0
   1a0fc:	movs	r4, #104	; 0x68
   1a0fe:	movs	r2, r0
   1a100:	movs	r6, #192	; 0xc0
   1a102:	movs	r2, r0
   1a104:	adds	r6, #111	; 0x6f
   1a106:	movs	r2, r0
   1a108:	lsls	r4, r6, #8
   1a10a:	movs	r0, r0
   1a10c:	movs	r4, #15
   1a10e:	movs	r2, r0
   1a110:	adds	r6, #69	; 0x45
   1a112:	movs	r2, r0

0001a114 <btrfs_del_ptr@@Base>:
   1a114:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a118:	mov	r8, r2
   1a11a:	ldr	r2, [pc, #180]	; (1a1d0 <btrfs_del_ptr@@Base+0xbc>)
   1a11c:	mov	r5, r3
   1a11e:	ldr	r3, [pc, #180]	; (1a1d4 <btrfs_del_ptr@@Base+0xc0>)
   1a120:	sub	sp, #28
   1a122:	add	r2, pc
   1a124:	ldr.w	r4, [r1, r8, lsl #2]
   1a128:	mov	r6, r0
   1a12a:	mov	r7, r1
   1a12c:	ldr	r3, [r2, r3]
   1a12e:	ldr	r3, [r3, #0]
   1a130:	str	r3, [sp, #20]
   1a132:	mov.w	r3, #0
   1a136:	ldr.w	r3, [r4, #192]	; 0xc0
   1a13a:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a13e:	cmp	r9, r5
   1a140:	bls.n	1a15a <btrfs_del_ptr@@Base+0x46>
   1a142:	subs	r3, r3, r5
   1a144:	add.w	r1, r5, r5, lsl #5
   1a148:	add.w	r2, r1, #134	; 0x86
   1a14c:	mov	r0, r4
   1a14e:	add.w	r3, r3, r3, lsl #5
   1a152:	adds	r1, #101	; 0x65
   1a154:	subs	r3, #33	; 0x21
   1a156:	bl	17334 <memmove_extent_buffer@@Base>
   1a15a:	str.w	r9, [r4, #192]	; 0xc0
   1a15e:	cmp.w	r9, #0
   1a162:	bne.n	1a1a6 <btrfs_del_ptr@@Base+0x92>
   1a164:	ldr	r3, [r6, #0]
   1a166:	cmp	r3, r4
   1a168:	bne.n	1a1a6 <btrfs_del_ptr@@Base+0x92>
   1a16a:	ldrb.w	r3, [r4, #196]	; 0xc4
   1a16e:	movw	r2, #2775	; 0xad7
   1a172:	ldr	r1, [pc, #100]	; (1a1d8 <btrfs_del_ptr@@Base+0xc4>)
   1a174:	subs	r3, #1
   1a176:	ldr	r0, [pc, #100]	; (1a1dc <btrfs_del_ptr@@Base+0xc8>)
   1a178:	add	r1, pc
   1a17a:	add.w	r1, r1, #328	; 0x148
   1a17e:	add	r0, pc
   1a180:	it	ne
   1a182:	movne	r3, #1
   1a184:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a188:	strb.w	r9, [r4, #196]	; 0xc4
   1a18c:	mov	r0, r4
   1a18e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a192:	ldr	r2, [pc, #76]	; (1a1e0 <btrfs_del_ptr@@Base+0xcc>)
   1a194:	ldr	r3, [pc, #60]	; (1a1d4 <btrfs_del_ptr@@Base+0xc0>)
   1a196:	add	r2, pc
   1a198:	ldr	r3, [r2, r3]
   1a19a:	ldr	r2, [r3, #0]
   1a19c:	ldr	r3, [sp, #20]
   1a19e:	eors	r2, r3
   1a1a0:	beq.n	1a1c6 <btrfs_del_ptr@@Base+0xb2>
   1a1a2:	blx	86b8 <__stack_chk_fail@plt>
   1a1a6:	cmp	r5, #0
   1a1a8:	bne.n	1a18c <btrfs_del_ptr@@Base+0x78>
   1a1aa:	mov	r2, r5
   1a1ac:	mov	r5, sp
   1a1ae:	mov	r1, r5
   1a1b0:	mov	r0, r4
   1a1b2:	bl	178fa <rb_free_nodes@@Base+0x54>
   1a1b6:	add.w	r3, r8, #1
   1a1ba:	mov	r2, r5
   1a1bc:	mov	r1, r7
   1a1be:	mov	r0, r6
   1a1c0:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   1a1c4:	b.n	1a18c <btrfs_del_ptr@@Base+0x78>
   1a1c6:	movs	r0, #0
   1a1c8:	add	sp, #28
   1a1ca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a1ce:	nop
   1a1d0:	add	r4, sp, #408	; 0x198
   1a1d2:	movs	r4, r0
   1a1d4:	lsls	r4, r4, #8
   1a1d6:	movs	r0, r0
   1a1d8:	movs	r5, #224	; 0xe0
   1a1da:	movs	r2, r0
   1a1dc:	movs	r3, #102	; 0x66
   1a1de:	movs	r2, r0
   1a1e0:	add	r3, sp, #968	; 0x3c8
   1a1e2:	movs	r4, r0

0001a1e4 <btrfs_search_slot@@Base>:
   1a1e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1e8:	mov	fp, r3
   1a1ea:	vpush	{d8-d9}
   1a1ee:	mov	sl, r0
   1a1f0:	ldr.w	r3, [pc, #1208]	; 1a6ac <btrfs_search_slot@@Base+0x4c8>
   1a1f4:	mov	r4, r1
   1a1f6:	sub	sp, #140	; 0x8c
   1a1f8:	str	r2, [sp, #56]	; 0x38
   1a1fa:	ldr.w	r2, [pc, #1204]	; 1a6b0 <btrfs_search_slot@@Base+0x4cc>
   1a1fe:	add	r2, pc
   1a200:	ldr	r3, [r2, r3]
   1a202:	ldr	r3, [r3, #0]
   1a204:	str	r3, [sp, #132]	; 0x84
   1a206:	mov.w	r3, #0
   1a20a:	ldrsb.w	r3, [fp, #64]	; 0x40
   1a20e:	str	r3, [sp, #88]	; 0x58
   1a210:	ldr.w	r3, [r1, #464]	; 0x1d0
   1a214:	vmov	s16, r3
   1a218:	ldrb.w	r3, [fp, #65]	; 0x41
   1a21c:	str	r3, [sp, #60]	; 0x3c
   1a21e:	cmp	r3, #0
   1a220:	beq.n	1a2ce <btrfs_search_slot@@Base+0xea>
   1a222:	ldr	r3, [sp, #192]	; 0xc0
   1a224:	cmp	r3, #0
   1a226:	ite	le
   1a228:	movle	r3, #0
   1a22a:	movgt	r3, #1
   1a22c:	ldr.w	r1, [pc, #1156]	; 1a6b4 <btrfs_search_slot@@Base+0x4d0>
   1a230:	movw	r2, #1173	; 0x495
   1a234:	ldr.w	r0, [pc, #1152]	; 1a6b8 <btrfs_search_slot@@Base+0x4d4>
   1a238:	add	r1, pc
   1a23a:	add.w	r1, r1, #342	; 0x156
   1a23e:	add	r0, pc
   1a240:	str	r1, [sp, #40]	; 0x28
   1a242:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1a246:	ldr.w	r3, [fp]
   1a24a:	movw	r2, #1174	; 0x496
   1a24e:	ldr.w	r0, [pc, #1132]	; 1a6bc <btrfs_search_slot@@Base+0x4d8>
   1a252:	subs	r3, #0
   1a254:	ldr	r1, [sp, #40]	; 0x28
   1a256:	add	r0, pc
   1a258:	it	ne
   1a25a:	movne	r3, #1
   1a25c:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1a260:	ldr	r3, [sp, #192]	; 0xc0
   1a262:	ldr	r2, [sp, #196]	; 0xc4
   1a264:	subs	r3, #0
   1a266:	it	ne
   1a268:	movne	r3, #1
   1a26a:	cmp	r2, #0
   1a26c:	it	ne
   1a26e:	movne	r3, #0
   1a270:	vmov	s19, r3
   1a274:	ldr	r3, [r4, #0]
   1a276:	ldr	r2, [r3, #80]	; 0x50
   1a278:	str	r3, [sp, #96]	; 0x60
   1a27a:	adds	r2, #1
   1a27c:	str	r2, [r3, #80]	; 0x50
   1a27e:	ldr.w	r3, [pc, #1088]	; 1a6c0 <btrfs_search_slot@@Base+0x4dc>
   1a282:	add	r3, pc
   1a284:	str	r3, [sp, #92]	; 0x5c
   1a286:	ldr	r2, [sp, #96]	; 0x60
   1a288:	cmp	r2, #0
   1a28a:	beq.w	1a46c <btrfs_search_slot@@Base+0x288>
   1a28e:	ldr	r3, [sp, #196]	; 0xc4
   1a290:	ldrb.w	r5, [r2, #196]	; 0xc4
   1a294:	cbz	r3, 1a2d2 <btrfs_search_slot@@Base+0xee>
   1a296:	add.w	r3, fp, r5, lsl #2
   1a29a:	add	r1, sp, #96	; 0x60
   1a29c:	str	r1, [sp, #4]
   1a29e:	mov	r0, sl
   1a2a0:	ldr	r1, [r3, #36]	; 0x24
   1a2a2:	str	r1, [sp, #0]
   1a2a4:	mov	r1, r4
   1a2a6:	ldr	r3, [r3, #4]
   1a2a8:	bl	1882c <btrfs_cow_block@@Base>
   1a2ac:	mov	r9, r0
   1a2ae:	cbz	r0, 1a2d2 <btrfs_search_slot@@Base+0xee>
   1a2b0:	ldr	r0, [sp, #96]	; 0x60
   1a2b2:	bl	16bc8 <free_extent_buffer@@Base>
   1a2b6:	ldr.w	r2, [pc, #1036]	; 1a6c4 <btrfs_search_slot@@Base+0x4e0>
   1a2ba:	ldr	r3, [pc, #1008]	; (1a6ac <btrfs_search_slot@@Base+0x4c8>)
   1a2bc:	add	r2, pc
   1a2be:	ldr	r3, [r2, r3]
   1a2c0:	ldr	r2, [r3, #0]
   1a2c2:	ldr	r3, [sp, #132]	; 0x84
   1a2c4:	eors	r2, r3
   1a2c6:	beq.w	1ad52 <btrfs_search_slot@@Base+0xb6e>
   1a2ca:	blx	86b8 <__stack_chk_fail@plt>
   1a2ce:	ldr	r3, [sp, #60]	; 0x3c
   1a2d0:	b.n	1a22c <btrfs_search_slot@@Base+0x48>
   1a2d2:	ldr	r3, [sp, #92]	; 0x5c
   1a2d4:	movw	r2, #1194	; 0x4aa
   1a2d8:	ldr	r0, [pc, #1004]	; (1a6c8 <btrfs_search_slot@@Base+0x4e4>)
   1a2da:	add.w	r1, r3, #342	; 0x156
   1a2de:	vmov	r3, s19
   1a2e2:	add	r0, pc
   1a2e4:	str	r1, [sp, #40]	; 0x28
   1a2e6:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a2ea:	ldr	r3, [sp, #96]	; 0x60
   1a2ec:	ldrb.w	r3, [r3, #196]	; 0xc4
   1a2f0:	cmp	r3, r5
   1a2f2:	beq.n	1a304 <btrfs_search_slot@@Base+0x120>
   1a2f4:	ldr	r0, [pc, #980]	; (1a6cc <btrfs_search_slot@@Base+0x4e8>)
   1a2f6:	movs	r3, #1
   1a2f8:	ldr	r1, [sp, #40]	; 0x28
   1a2fa:	movw	r2, #1196	; 0x4ac
   1a2fe:	add	r0, pc
   1a300:	bl	179c6 <rb_free_nodes@@Base+0x120>
   1a304:	ldr	r3, [sp, #96]	; 0x60
   1a306:	ldrb.w	r2, [r3, #196]	; 0xc4
   1a30a:	str.w	r3, [fp, r2, lsl #2]
   1a30e:	add.w	r8, fp, r2, lsl #2
   1a312:	ldrb.w	r3, [fp, #67]	; 0x43
   1a316:	strd	r2, r2, [sp, #40]	; 0x28
   1a31a:	cmp	r3, #0
   1a31c:	beq.n	1a388 <btrfs_search_slot@@Base+0x1a4>
   1a31e:	ldr	r2, [sp, #44]	; 0x2c
   1a320:	add	r3, sp, #100	; 0x64
   1a322:	ldr	r1, [sp, #56]	; 0x38
   1a324:	ldr	r0, [sp, #96]	; 0x60
   1a326:	bl	18b30 <btrfs_bin_search@@Base>
   1a32a:	ldr	r2, [sp, #44]	; 0x2c
   1a32c:	ldr	r3, [sp, #100]	; 0x64
   1a32e:	mov	r9, r0
   1a330:	cmp	r2, #0
   1a332:	bne.n	1a39e <btrfs_search_slot@@Base+0x1ba>
   1a334:	str.w	r3, [fp, #32]
   1a338:	ldr	r3, [sp, #192]	; 0xc0
   1a33a:	cmp	r3, #0
   1a33c:	ble.n	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a33e:	ldr	r0, [sp, #96]	; 0x60
   1a340:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1a344:	ldr	r3, [sp, #192]	; 0xc0
   1a346:	cmp	r0, r3
   1a348:	bge.n	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a34a:	clz	r3, r9
   1a34e:	mov	r1, r4
   1a350:	ldr	r2, [sp, #56]	; 0x38
   1a352:	mov	r0, sl
   1a354:	lsrs	r3, r3, #5
   1a356:	str	r3, [sp, #4]
   1a358:	ldr	r3, [sp, #192]	; 0xc0
   1a35a:	str	r3, [sp, #0]
   1a35c:	mov	r3, fp
   1a35e:	bl	198f8 <btrfs_check_leaf@@Base+0x8e0>
   1a362:	ldr	r1, [pc, #876]	; (1a6d0 <btrfs_search_slot@@Base+0x4ec>)
   1a364:	movw	r2, #1246	; 0x4de
   1a368:	add	r1, pc
   1a36a:	add.w	r1, r1, #342	; 0x156
   1a36e:	cmp	r0, #0
   1a370:	mov	r4, r0
   1a372:	ldr	r0, [pc, #864]	; (1a6d4 <btrfs_search_slot@@Base+0x4f0>)
   1a374:	ite	le
   1a376:	movle	r3, #0
   1a378:	movgt	r3, #1
   1a37a:	add	r0, pc
   1a37c:	cmp	r4, #0
   1a37e:	it	ne
   1a380:	movne	r9, r4
   1a382:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a386:	b.n	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a388:	vmov	r0, s16
   1a38c:	mov	r1, fp
   1a38e:	ldr	r2, [sp, #44]	; 0x2c
   1a390:	bl	192d8 <btrfs_check_leaf@@Base+0x2c0>
   1a394:	cmp	r0, #0
   1a396:	beq.n	1a31e <btrfs_search_slot@@Base+0x13a>
   1a398:	mov.w	r9, #4294967295	; 0xffffffff
   1a39c:	b.n	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a39e:	cbz	r0, 1a3aa <btrfs_search_slot@@Base+0x1c6>
   1a3a0:	cmp	r3, #0
   1a3a2:	itt	gt
   1a3a4:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   1a3a8:	strgt	r3, [sp, #100]	; 0x64
   1a3aa:	ldr	r3, [sp, #100]	; 0x64
   1a3ac:	str	r3, [sp, #48]	; 0x30
   1a3ae:	str.w	r3, [r8, #32]
   1a3b2:	ldrb.w	r3, [fp, #66]	; 0x42
   1a3b6:	cbnz	r3, 1a3c0 <btrfs_search_slot@@Base+0x1dc>
   1a3b8:	ldr	r3, [sp, #192]	; 0xc0
   1a3ba:	cmp	r3, #0
   1a3bc:	ble.w	1a80e <btrfs_search_slot@@Base+0x62a>
   1a3c0:	vmov	r3, s16
   1a3c4:	ldr.w	r2, [r3, #384]	; 0x180
   1a3c8:	ldr	r3, [pc, #732]	; (1a6a8 <btrfs_search_slot@@Base+0x4c4>)
   1a3ca:	subs	r2, #101	; 0x65
   1a3cc:	umull	r2, r3, r2, r3
   1a3d0:	ldr	r2, [sp, #96]	; 0x60
   1a3d2:	ldr.w	r2, [r2, #192]	; 0xc0
   1a3d6:	lsrs	r3, r3, #3
   1a3d8:	subs	r3, #3
   1a3da:	cmp	r3, r2
   1a3dc:	bhi.w	1a80e <btrfs_search_slot@@Base+0x62a>
   1a3e0:	ldr	r3, [sp, #40]	; 0x28
   1a3e2:	ldr	r7, [pc, #756]	; (1a6d8 <btrfs_search_slot@@Base+0x4f4>)
   1a3e4:	ldr.w	r6, [fp, r3, lsl #2]
   1a3e8:	add	r7, pc
   1a3ea:	ldrd	r2, r3, [sl, #8]
   1a3ee:	ldr.w	r1, [r6, #180]	; 0xb4
   1a3f2:	ldr.w	r0, [r6, #176]	; 0xb0
   1a3f6:	cmp	r1, r3
   1a3f8:	add.w	r1, r7, #360	; 0x168
   1a3fc:	it	eq
   1a3fe:	cmpeq	r0, r2
   1a400:	ldr	r0, [pc, #728]	; (1a6dc <btrfs_search_slot@@Base+0x4f8>)
   1a402:	movw	r2, #1668	; 0x684
   1a406:	ite	ne
   1a408:	movne	r3, #1
   1a40a:	moveq	r3, #0
   1a40c:	add	r0, pc
   1a40e:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1a412:	ldr	r3, [r4, #0]
   1a414:	cmp	r6, r3
   1a416:	bne.n	1a472 <btrfs_search_slot@@Base+0x28e>
   1a418:	ldr	r3, [sp, #44]	; 0x2c
   1a41a:	mov	r2, fp
   1a41c:	mov	r1, r4
   1a41e:	mov	r0, sl
   1a420:	adds	r3, #1
   1a422:	bl	17e6a <add_root_to_dirty_list@@Base+0x2e>
   1a426:	mov	r9, r0
   1a428:	cmp	r0, #0
   1a42a:	beq.w	1a5a0 <btrfs_search_slot@@Base+0x3bc>
   1a42e:	ldr	r1, [pc, #688]	; (1a6e0 <btrfs_search_slot@@Base+0x4fc>)
   1a430:	cmp.w	r9, #0
   1a434:	ldr	r0, [pc, #684]	; (1a6e4 <btrfs_search_slot@@Base+0x500>)
   1a436:	movw	r2, #1211	; 0x4bb
   1a43a:	add	r1, pc
   1a43c:	ite	le
   1a43e:	movle	r3, #0
   1a440:	movgt	r3, #1
   1a442:	add.w	r1, r1, #342	; 0x156
   1a446:	add	r0, pc
   1a448:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a44c:	cmp.w	r9, #0
   1a450:	bne.w	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a454:	ldr	r3, [sp, #40]	; 0x28
   1a456:	ldr.w	r3, [fp, r3, lsl #2]
   1a45a:	str	r3, [sp, #96]	; 0x60
   1a45c:	ldr.w	r3, [r8, #32]
   1a460:	str	r3, [sp, #100]	; 0x64
   1a462:	ldr	r3, [sp, #60]	; 0x3c
   1a464:	ldr	r2, [sp, #44]	; 0x2c
   1a466:	cmp	r3, r2
   1a468:	bne.w	1ad16 <btrfs_search_slot@@Base+0xb32>
   1a46c:	mov.w	r9, #1
   1a470:	b.n	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1a472:	movs	r3, #0
   1a474:	strd	r3, r3, [sp, #104]	; 0x68
   1a478:	ldr.w	r3, [r8, #32]
   1a47c:	ldr.w	r9, [r4, #464]	; 0x1d0
   1a480:	str	r3, [sp, #48]	; 0x30
   1a482:	ldr	r3, [sp, #40]	; 0x28
   1a484:	ldr.w	r5, [fp, r3, lsl #2]
   1a488:	ldrd	r2, r3, [sl, #8]
   1a48c:	ldr.w	r1, [r5, #180]	; 0xb4
   1a490:	ldr.w	r0, [r5, #176]	; 0xb0
   1a494:	cmp	r1, r3
   1a496:	addw	r1, r7, #371	; 0x173
   1a49a:	it	eq
   1a49c:	cmpeq	r0, r2
   1a49e:	ldr	r0, [pc, #584]	; (1a6e8 <btrfs_search_slot@@Base+0x504>)
   1a4a0:	mov.w	r2, #932	; 0x3a4
   1a4a4:	ite	ne
   1a4a6:	movne	r3, #1
   1a4a8:	moveq	r3, #0
   1a4aa:	add	r0, pc
   1a4ac:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1a4b0:	ldr	r3, [sp, #44]	; 0x2c
   1a4b2:	cmp	r3, #6
   1a4b4:	ble.n	1a4be <btrfs_search_slot@@Base+0x2da>
   1a4b6:	ldr	r3, [sp, #40]	; 0x28
   1a4b8:	ldr.w	r6, [fp, r3, lsl #2]
   1a4bc:	b.n	1a5a0 <btrfs_search_slot@@Base+0x3bc>
   1a4be:	ldr.w	r6, [r8, #4]
   1a4c2:	cmp	r6, #0
   1a4c4:	beq.n	1a4b6 <btrfs_search_slot@@Base+0x2d2>
   1a4c6:	ldr.w	r3, [r8, #36]	; 0x24
   1a4ca:	mov	r1, r6
   1a4cc:	mov	r0, r9
   1a4ce:	subs	r7, r3, #1
   1a4d0:	str	r3, [sp, #52]	; 0x34
   1a4d2:	mov	r2, r7
   1a4d4:	bl	18bb6 <read_node_slot@@Base>
   1a4d8:	mov	r2, r0
   1a4da:	str	r0, [sp, #108]	; 0x6c
   1a4dc:	bl	17954 <rb_free_nodes@@Base+0xae>
   1a4e0:	cmp	r0, #0
   1a4e2:	beq.w	1a5fc <btrfs_search_slot@@Base+0x418>
   1a4e6:	ldr.w	r3, [r2, #192]	; 0xc0
   1a4ea:	ldr.w	r0, [r9, #384]	; 0x180
   1a4ee:	str	r3, [sp, #64]	; 0x40
   1a4f0:	subs	r0, #101	; 0x65
   1a4f2:	ldr	r3, [pc, #436]	; (1a6a8 <btrfs_search_slot@@Base+0x4c4>)
   1a4f4:	umull	r0, r1, r0, r3
   1a4f8:	lsrs	r3, r1, #3
   1a4fa:	ldr	r1, [sp, #64]	; 0x40
   1a4fc:	subs	r3, #1
   1a4fe:	cmp	r1, r3
   1a500:	bcs.n	1a5f6 <btrfs_search_slot@@Base+0x412>
   1a502:	add	r3, sp, #108	; 0x6c
   1a504:	mov	r1, r4
   1a506:	strd	r7, r3, [sp]
   1a50a:	mov	r0, sl
   1a50c:	mov	r3, r6
   1a50e:	bl	1882c <btrfs_cow_block@@Base>
   1a512:	cmp	r0, #0
   1a514:	bne.n	1a5f6 <btrfs_search_slot@@Base+0x412>
   1a516:	str	r0, [sp, #0]
   1a518:	mov	r3, r5
   1a51a:	ldr	r2, [sp, #108]	; 0x6c
   1a51c:	add.w	r0, sl, #8
   1a520:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a524:	bl	17bf0 <rb_free_nodes@@Base+0x34a>
   1a528:	mov	r2, r0
   1a52a:	cmp	r0, #0
   1a52c:	bne.n	1a5f6 <btrfs_search_slot@@Base+0x412>
   1a52e:	ldr	r3, [sp, #48]	; 0x30
   1a530:	mov	r0, r5
   1a532:	ldr	r1, [sp, #64]	; 0x40
   1a534:	add	r3, r1
   1a536:	add	r1, sp, #112	; 0x70
   1a538:	str	r1, [sp, #48]	; 0x30
   1a53a:	mov	r7, r3
   1a53c:	bl	178fa <rb_free_nodes@@Base+0x54>
   1a540:	ldrd	r1, r2, [sp, #48]	; 0x30
   1a544:	mov	r0, r6
   1a546:	bl	178d6 <rb_free_nodes@@Base+0x30>
   1a54a:	mov	r0, r6
   1a54c:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a550:	ldr	r0, [sp, #108]	; 0x6c
   1a552:	ldr.w	r3, [r0, #192]	; 0xc0
   1a556:	cmp	r7, r3
   1a558:	bcs.n	1a572 <btrfs_search_slot@@Base+0x38e>
   1a55a:	ldr	r3, [sp, #40]	; 0x28
   1a55c:	str.w	r0, [fp, r3, lsl #2]
   1a560:	ldr.w	r3, [r8, #36]	; 0x24
   1a564:	subs	r3, #1
   1a566:	str.w	r3, [r8, #36]	; 0x24
   1a56a:	mov	r0, r5
   1a56c:	str.w	r7, [r8, #32]
   1a570:	b.n	1a578 <btrfs_search_slot@@Base+0x394>
   1a572:	subs	r7, r7, r3
   1a574:	str.w	r7, [r8, #32]
   1a578:	bl	16bc8 <free_extent_buffer@@Base>
   1a57c:	ldr	r3, [sp, #40]	; 0x28
   1a57e:	ldr.w	r6, [fp, r3, lsl #2]
   1a582:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a586:	ldr.w	r1, [r6, #192]	; 0xc0
   1a58a:	ldr.w	r2, [r3, #384]	; 0x180
   1a58e:	ldr	r3, [pc, #280]	; (1a6a8 <btrfs_search_slot@@Base+0x4c4>)
   1a590:	subs	r2, #101	; 0x65
   1a592:	umull	r2, r3, r2, r3
   1a596:	lsrs	r3, r3, #3
   1a598:	subs	r3, #3
   1a59a:	cmp	r1, r3
   1a59c:	bcc.w	1a808 <btrfs_search_slot@@Base+0x624>
   1a5a0:	ldr.w	r3, [r6, #192]	; 0xc0
   1a5a4:	add.w	r9, sp, #112	; 0x70
   1a5a8:	mov	r0, r6
   1a5aa:	adds	r7, r3, #1
   1a5ac:	mov	r1, r9
   1a5ae:	str	r3, [sp, #48]	; 0x30
   1a5b0:	lsrs	r7, r7, #1
   1a5b2:	mov	r2, r7
   1a5b4:	bl	178fa <rb_free_nodes@@Base+0x54>
   1a5b8:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a5bc:	movs	r2, #0
   1a5be:	movs	r3, #0
   1a5c0:	strd	r2, r3, [sp, #24]
   1a5c4:	mov	r0, sl
   1a5c6:	ldrd	r2, r3, [r6, #40]	; 0x28
   1a5ca:	strd	r2, r3, [sp, #16]
   1a5ce:	ldr	r3, [sp, #44]	; 0x2c
   1a5d0:	strd	r9, r3, [sp, #8]
   1a5d4:	ldr.w	r2, [r4, #447]	; 0x1bf
   1a5d8:	ldr.w	r3, [r4, #451]	; 0x1c3
   1a5dc:	strd	r2, r3, [sp]
   1a5e0:	ldr.w	r2, [r1, #384]	; 0x180
   1a5e4:	mov	r1, r4
   1a5e6:	bl	22a0c <btrfs_alloc_free_block@@Base>
   1a5ea:	cmn.w	r0, #4096	; 0x1000
   1a5ee:	mov	r5, r0
   1a5f0:	bls.n	1a6ec <btrfs_search_slot@@Base+0x508>
   1a5f2:	mov	r9, r0
   1a5f4:	b.n	1a42e <btrfs_search_slot@@Base+0x24a>
   1a5f6:	ldr	r0, [sp, #108]	; 0x6c
   1a5f8:	bl	16bc8 <free_extent_buffer@@Base>
   1a5fc:	ldr	r7, [sp, #52]	; 0x34
   1a5fe:	mov	r1, r6
   1a600:	mov	r0, r9
   1a602:	adds	r7, #1
   1a604:	mov	r2, r7
   1a606:	bl	18bb6 <read_node_slot@@Base>
   1a60a:	mov	r2, r0
   1a60c:	str	r0, [sp, #104]	; 0x68
   1a60e:	bl	17954 <rb_free_nodes@@Base+0xae>
   1a612:	cmp	r0, #0
   1a614:	beq.w	1a4b6 <btrfs_search_slot@@Base+0x2d2>
   1a618:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a61c:	ldr.w	ip, [r2, #192]	; 0xc0
   1a620:	ldr.w	r0, [r3, #384]	; 0x180
   1a624:	ldr	r3, [pc, #128]	; (1a6a8 <btrfs_search_slot@@Base+0x4c4>)
   1a626:	subs	r0, #101	; 0x65
   1a628:	umull	r0, r1, r0, r3
   1a62c:	lsrs	r3, r1, #3
   1a62e:	subs	r3, #1
   1a630:	cmp	ip, r3
   1a632:	bcs.n	1a69e <btrfs_search_slot@@Base+0x4ba>
   1a634:	add	r3, sp, #104	; 0x68
   1a636:	mov	r1, r4
   1a638:	strd	r7, r3, [sp]
   1a63c:	mov	r0, sl
   1a63e:	mov	r3, r6
   1a640:	bl	1882c <btrfs_cow_block@@Base>
   1a644:	cbnz	r0, 1a69e <btrfs_search_slot@@Base+0x4ba>
   1a646:	ldr	r2, [sp, #104]	; 0x68
   1a648:	add.w	r1, r4, #464	; 0x1d0
   1a64c:	add.w	r0, sl, #8
   1a650:	mov	r3, r5
   1a652:	bl	17b00 <rb_free_nodes@@Base+0x25a>
   1a656:	mov	r2, r0
   1a658:	cbnz	r0, 1a69e <btrfs_search_slot@@Base+0x4ba>
   1a65a:	add	r1, sp, #112	; 0x70
   1a65c:	ldr	r0, [sp, #104]	; 0x68
   1a65e:	str	r1, [sp, #52]	; 0x34
   1a660:	bl	178fa <rb_free_nodes@@Base+0x54>
   1a664:	mov	r2, r7
   1a666:	ldr	r1, [sp, #52]	; 0x34
   1a668:	mov	r0, r6
   1a66a:	bl	178d6 <rb_free_nodes@@Base+0x30>
   1a66e:	mov	r0, r6
   1a670:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a674:	ldr.w	r3, [r5, #192]	; 0xc0
   1a678:	ldr	r2, [sp, #48]	; 0x30
   1a67a:	cmp	r3, r2
   1a67c:	bhi.n	1a69a <btrfs_search_slot@@Base+0x4b6>
   1a67e:	ldr	r3, [sp, #104]	; 0x68
   1a680:	ldr	r2, [sp, #40]	; 0x28
   1a682:	str.w	r3, [fp, r2, lsl #2]
   1a686:	ldr.w	r3, [r8, #36]	; 0x24
   1a68a:	adds	r3, #1
   1a68c:	str.w	r3, [r8, #36]	; 0x24
   1a690:	ldr	r3, [sp, #48]	; 0x30
   1a692:	ldr.w	r7, [r5, #192]	; 0xc0
   1a696:	subs	r7, r3, r7
   1a698:	b.n	1a56a <btrfs_search_slot@@Base+0x386>
   1a69a:	ldr	r0, [sp, #104]	; 0x68
   1a69c:	b.n	1a578 <btrfs_search_slot@@Base+0x394>
   1a69e:	ldr	r0, [sp, #104]	; 0x68
   1a6a0:	bl	16bc8 <free_extent_buffer@@Base>
   1a6a4:	b.n	1a4b6 <btrfs_search_slot@@Base+0x2d2>
   1a6a6:	nop
   1a6a8:	strh	r1, [r4, #30]
   1a6aa:	subs	r6, #15
   1a6ac:	lsls	r4, r4, #8
   1a6ae:	movs	r0, r0
   1a6b0:	add	r3, sp, #552	; 0x228
   1a6b2:	movs	r4, r0
   1a6b4:	movs	r5, #32
   1a6b6:	movs	r2, r0
   1a6b8:	movs	r2, #202	; 0xca
   1a6ba:	movs	r2, r0
   1a6bc:	movs	r2, #206	; 0xce
   1a6be:	movs	r2, r0
   1a6c0:	movs	r4, #214	; 0xd6
   1a6c2:	movs	r2, r0
   1a6c4:	add	r2, sp, #816	; 0x330
   1a6c6:	movs	r4, r0
   1a6c8:	movs	r2, #86	; 0x56
   1a6ca:	movs	r2, r0
   1a6cc:	adds	r4, #19
   1a6ce:	movs	r2, r0
   1a6d0:	movs	r3, #240	; 0xf0
   1a6d2:	movs	r2, r0
   1a6d4:	movs	r2, #42	; 0x2a
   1a6d6:	movs	r2, r0
   1a6d8:	movs	r3, #112	; 0x70
   1a6da:	movs	r2, r0
   1a6dc:	movs	r1, #60	; 0x3c
   1a6de:	movs	r2, r0
   1a6e0:	movs	r3, #30
   1a6e2:	movs	r2, r0
   1a6e4:	movs	r1, #94	; 0x5e
   1a6e6:	movs	r2, r0
   1a6e8:	movs	r0, #203	; 0xcb
   1a6ea:	movs	r2, r0
   1a6ec:	movs	r2, #0
   1a6ee:	movs	r3, #101	; 0x65
   1a6f0:	mov	r1, r2
   1a6f2:	bl	1734a <memset_extent_buffer@@Base>
   1a6f6:	ldrb.w	r3, [r6, #196]	; 0xc4
   1a6fa:	mov	r0, r5
   1a6fc:	strb.w	r3, [r5, #196]	; 0xc4
   1a700:	ldr	r3, [r5, #40]	; 0x28
   1a702:	str.w	r3, [r5, #144]	; 0x90
   1a706:	ldr	r3, [r5, #44]	; 0x2c
   1a708:	str.w	r3, [r5, #148]	; 0x94
   1a70c:	ldrd	r2, r3, [sl, #8]
   1a710:	str.w	r2, [r5, #176]	; 0xb0
   1a714:	str.w	r3, [r5, #180]	; 0xb4
   1a718:	ldr.w	r2, [r5, #152]	; 0x98
   1a71c:	ldr.w	r3, [r5, #156]	; 0x9c
   1a720:	bic.w	r3, r3, #4278190080	; 0xff000000
   1a724:	str.w	r2, [r5, #152]	; 0x98
   1a728:	orr.w	r3, r3, #16777216	; 0x1000000
   1a72c:	str.w	r3, [r5, #156]	; 0x9c
   1a730:	ldr.w	r2, [r4, #447]	; 0x1bf
   1a734:	ldr.w	r3, [r4, #451]	; 0x1c3
   1a738:	str.w	r2, [r5, #184]	; 0xb8
   1a73c:	movs	r2, #32
   1a73e:	str.w	r3, [r5, #188]	; 0xbc
   1a742:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a746:	ldr.w	r1, [r3, #352]	; 0x160
   1a74a:	movs	r3, #16
   1a74c:	add	r1, r3
   1a74e:	bl	172d8 <write_extent_buffer@@Base>
   1a752:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a756:	movs	r3, #16
   1a758:	movs	r2, #64	; 0x40
   1a75a:	mov	r0, r5
   1a75c:	bl	172d8 <write_extent_buffer@@Base>
   1a760:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a764:	ldr.w	r2, [r4, #200]	; 0xc8
   1a768:	mov	r0, r5
   1a76a:	ldr.w	r3, [r4, #204]	; 0xcc
   1a76e:	ldr.w	r1, [r1, #384]	; 0x180
   1a772:	adds	r2, r2, r1
   1a774:	str.w	r2, [r4, #200]	; 0xc8
   1a778:	adc.w	r3, r3, #0
   1a77c:	str.w	r3, [r4, #204]	; 0xcc
   1a780:	ldr	r3, [sp, #48]	; 0x30
   1a782:	mov	r1, r6
   1a784:	subs	r3, r3, r7
   1a786:	str	r3, [sp, #48]	; 0x30
   1a788:	ldr	r2, [sp, #48]	; 0x30
   1a78a:	add.w	r3, r7, r7, lsl #5
   1a78e:	adds	r3, #101	; 0x65
   1a790:	add.w	r2, r2, r2, lsl #5
   1a794:	str	r2, [sp, #0]
   1a796:	movs	r2, #101	; 0x65
   1a798:	bl	172ea <copy_extent_buffer@@Base>
   1a79c:	ldr	r3, [sp, #48]	; 0x30
   1a79e:	mov	r0, r6
   1a7a0:	str.w	r3, [r5, #192]	; 0xc0
   1a7a4:	str.w	r7, [r6, #192]	; 0xc0
   1a7a8:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a7ac:	mov	r0, r5
   1a7ae:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1a7b2:	ldr	r3, [sp, #44]	; 0x2c
   1a7b4:	add.w	r1, r4, #464	; 0x1d0
   1a7b8:	add.w	r0, sl, #8
   1a7bc:	adds	r3, #1
   1a7be:	str	r3, [sp, #12]
   1a7c0:	ldr.w	r3, [r8, #36]	; 0x24
   1a7c4:	adds	r3, #1
   1a7c6:	str	r3, [sp, #8]
   1a7c8:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a7cc:	strd	r2, r3, [sp]
   1a7d0:	mov	r3, r9
   1a7d2:	mov	r2, fp
   1a7d4:	bl	17a0c <rb_free_nodes@@Base+0x166>
   1a7d8:	ldr.w	r3, [r8, #32]
   1a7dc:	cmp	r7, r3
   1a7de:	mov	r9, r0
   1a7e0:	bgt.n	1a800 <btrfs_search_slot@@Base+0x61c>
   1a7e2:	subs	r7, r3, r7
   1a7e4:	mov	r0, r6
   1a7e6:	str.w	r7, [r8, #32]
   1a7ea:	bl	16bc8 <free_extent_buffer@@Base>
   1a7ee:	ldr	r3, [sp, #40]	; 0x28
   1a7f0:	str.w	r5, [fp, r3, lsl #2]
   1a7f4:	ldr.w	r3, [r8, #36]	; 0x24
   1a7f8:	adds	r3, #1
   1a7fa:	str.w	r3, [r8, #36]	; 0x24
   1a7fe:	b.n	1a42e <btrfs_search_slot@@Base+0x24a>
   1a800:	mov	r0, r5
   1a802:	bl	16bc8 <free_extent_buffer@@Base>
   1a806:	b.n	1a42e <btrfs_search_slot@@Base+0x24a>
   1a808:	mov.w	r9, #0
   1a80c:	b.n	1a42e <btrfs_search_slot@@Base+0x24a>
   1a80e:	ldr	r3, [sp, #192]	; 0xc0
   1a810:	cmp	r3, #0
   1a812:	bge.w	1a462 <btrfs_search_slot@@Base+0x27e>
   1a816:	movs	r3, #0
   1a818:	strd	r3, r3, [sp, #104]	; 0x68
   1a81c:	ldr	r3, [sp, #40]	; 0x28
   1a81e:	ldr.w	r6, [r4, #464]	; 0x1d0
   1a822:	ldr.w	r5, [fp, r3, lsl #2]
   1a826:	ldrd	r2, r3, [sl, #8]
   1a82a:	ldr.w	r1, [r5, #180]	; 0xb4
   1a82e:	ldr.w	r0, [r5, #176]	; 0xb0
   1a832:	cmp	r1, r3
   1a834:	ldr.w	r1, [pc, #1092]	; 1ac7c <btrfs_search_slot@@Base+0xa98>
   1a838:	it	eq
   1a83a:	cmpeq	r0, r2
   1a83c:	ldr.w	r0, [pc, #1088]	; 1ac80 <btrfs_search_slot@@Base+0xa9c>
   1a840:	add	r1, pc
   1a842:	movw	r2, #734	; 0x2de
   1a846:	ite	ne
   1a848:	movne	r3, #1
   1a84a:	moveq	r3, #0
   1a84c:	addw	r1, r1, #393	; 0x189
   1a850:	add	r0, pc
   1a852:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1a856:	ldr	r3, [sp, #44]	; 0x2c
   1a858:	cmp	r3, #6
   1a85a:	bgt.n	1a86a <btrfs_search_slot@@Base+0x686>
   1a85c:	ldr.w	r7, [r8, #4]
   1a860:	adds	r3, #1
   1a862:	vmov	s18, r3
   1a866:	cmp	r7, #0
   1a868:	bne.n	1a940 <btrfs_search_slot@@Base+0x75c>
   1a86a:	ldr.w	r3, [r5, #192]	; 0xc0
   1a86e:	cmp	r3, #1
   1a870:	bne.w	1ac40 <btrfs_search_slot@@Base+0xa5c>
   1a874:	movs	r2, #0
   1a876:	mov	r1, r5
   1a878:	mov	r0, r6
   1a87a:	ldr.w	r6, [pc, #1032]	; 1ac84 <btrfs_search_slot@@Base+0xaa0>
   1a87e:	bl	18bb6 <read_node_slot@@Base>
   1a882:	mov.w	r9, #0
   1a886:	add	r6, pc
   1a888:	addw	r6, r6, #393	; 0x189
   1a88c:	mov	r7, r0
   1a88e:	str	r0, [sp, #112]	; 0x70
   1a890:	bl	17954 <rb_free_nodes@@Base+0xae>
   1a894:	movw	r2, #755	; 0x2f3
   1a898:	mov	r1, r6
   1a89a:	clz	r3, r0
   1a89e:	ldr	r0, [pc, #1000]	; (1ac88 <btrfs_search_slot@@Base+0xaa4>)
   1a8a0:	lsrs	r3, r3, #5
   1a8a2:	add	r0, pc
   1a8a4:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a8a8:	add	r3, sp, #112	; 0x70
   1a8aa:	mov	r2, r7
   1a8ac:	mov	r1, r4
   1a8ae:	str	r3, [sp, #4]
   1a8b0:	mov	r0, sl
   1a8b2:	mov	r3, r5
   1a8b4:	str.w	r9, [sp]
   1a8b8:	bl	1882c <btrfs_cow_block@@Base>
   1a8bc:	movw	r2, #757	; 0x2f5
   1a8c0:	mov	r1, r6
   1a8c2:	mov	r3, r0
   1a8c4:	ldr	r0, [pc, #964]	; (1ac8c <btrfs_search_slot@@Base+0xaa8>)
   1a8c6:	add	r0, pc
   1a8c8:	bl	179bc <rb_free_nodes@@Base+0x116>
   1a8cc:	ldr	r3, [sp, #112]	; 0x70
   1a8ce:	mov	r0, r4
   1a8d0:	str	r3, [r4, #0]
   1a8d2:	bl	17e3c <add_root_to_dirty_list@@Base>
   1a8d6:	ldr	r3, [sp, #40]	; 0x28
   1a8d8:	mov	r0, r5
   1a8da:	str.w	r9, [fp, r3, lsl #2]
   1a8de:	bl	1d4b4 <clean_tree_block@@Base>
   1a8e2:	mov	r0, r5
   1a8e4:	bl	16bc8 <free_extent_buffer@@Base>
   1a8e8:	ldr	r1, [r5, #76]	; 0x4c
   1a8ea:	ldr.w	r2, [r4, #200]	; 0xc8
   1a8ee:	ldrb.w	r0, [sp, #44]	; 0x2c
   1a8f2:	ldr.w	r3, [r4, #204]	; 0xcc
   1a8f6:	subs	r2, r2, r1
   1a8f8:	mov.w	r1, #0
   1a8fc:	str.w	r2, [r4, #200]	; 0xc8
   1a900:	sbc.w	r3, r3, #0
   1a904:	movs	r2, #0
   1a906:	str.w	r3, [r4, #204]	; 0xcc
   1a90a:	movs	r3, #0
   1a90c:	strd	r0, r1, [sp, #24]
   1a910:	strd	r2, r3, [sp, #32]
   1a914:	ldr.w	r0, [r4, #447]	; 0x1bf
   1a918:	ldr.w	r1, [r4, #451]	; 0x1c3
   1a91c:	strd	r2, r3, [sp, #8]
   1a920:	strd	r0, r1, [sp, #16]
   1a924:	mov	r1, r4
   1a926:	ldr	r3, [r5, #76]	; 0x4c
   1a928:	mov	r0, sl
   1a92a:	strd	r3, r9, [sp]
   1a92e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a932:	bl	20bf4 <btrfs_free_extent@@Base>
   1a936:	mov	r9, r0
   1a938:	mov	r0, r5
   1a93a:	bl	16bc8 <free_extent_buffer@@Base>
   1a93e:	b.n	1ac38 <btrfs_search_slot@@Base+0xa54>
   1a940:	ldr.w	r2, [r6, #384]	; 0x180
   1a944:	ldr	r3, [pc, #816]	; (1ac78 <btrfs_search_slot@@Base+0xa94>)
   1a946:	subs	r2, #101	; 0x65
   1a948:	umull	r0, r1, r2, r3
   1a94c:	ldr.w	r2, [r5, #192]	; 0xc0
   1a950:	cmp.w	r2, r1, lsr #5
   1a954:	bhi.w	1ac40 <btrfs_search_slot@@Base+0xa5c>
   1a958:	ldr	r3, [sp, #48]	; 0x30
   1a95a:	mov	r1, r7
   1a95c:	mov	r0, r6
   1a95e:	add.w	r3, r3, r3, lsl #5
   1a962:	add	r3, r5
   1a964:	ldr.w	r2, [r3, #214]!
   1a968:	ldr	r3, [r3, #4]
   1a96a:	str	r2, [sp, #64]	; 0x40
   1a96c:	str	r3, [sp, #68]	; 0x44
   1a96e:	ldr.w	r3, [r8, #36]	; 0x24
   1a972:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a976:	str	r3, [sp, #52]	; 0x34
   1a978:	mov	r2, r9
   1a97a:	bl	18bb6 <read_node_slot@@Base>
   1a97e:	mov	r2, r0
   1a980:	str	r0, [sp, #108]	; 0x6c
   1a982:	bl	17954 <rb_free_nodes@@Base+0xae>
   1a986:	cmp	r0, #0
   1a988:	bne.w	1ac10 <btrfs_search_slot@@Base+0xa2c>
   1a98c:	ldr	r3, [sp, #52]	; 0x34
   1a98e:	mov	r1, r7
   1a990:	mov	r0, r6
   1a992:	adds	r3, #1
   1a994:	mov	r2, r3
   1a996:	vmov	s17, r3
   1a99a:	bl	18bb6 <read_node_slot@@Base>
   1a99e:	mov	r2, r0
   1a9a0:	str	r0, [sp, #104]	; 0x68
   1a9a2:	bl	17954 <rb_free_nodes@@Base+0xae>
   1a9a6:	cbz	r0, 1a9c2 <btrfs_search_slot@@Base+0x7de>
   1a9a8:	add	r3, sp, #104	; 0x68
   1a9aa:	vstr	s17, [sp]
   1a9ae:	str	r3, [sp, #4]
   1a9b0:	mov	r1, r4
   1a9b2:	mov	r3, r7
   1a9b4:	mov	r0, sl
   1a9b6:	bl	1882c <btrfs_cow_block@@Base>
   1a9ba:	mov	r9, r0
   1a9bc:	cmp	r0, #0
   1a9be:	bne.w	1ac28 <btrfs_search_slot@@Base+0xa44>
   1a9c2:	ldr	r2, [sp, #108]	; 0x6c
   1a9c4:	cmp	r2, #0
   1a9c6:	bne.w	1ac56 <btrfs_search_slot@@Base+0xa72>
   1a9ca:	mov	r6, r2
   1a9cc:	ldr	r3, [sp, #104]	; 0x68
   1a9ce:	cmp	r3, #0
   1a9d0:	beq.n	1aa84 <btrfs_search_slot@@Base+0x8a0>
   1a9d2:	movs	r2, #1
   1a9d4:	add.w	r0, sl, #8
   1a9d8:	str	r2, [sp, #0]
   1a9da:	mov	r2, r5
   1a9dc:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a9e0:	bl	17bf0 <rb_free_nodes@@Base+0x34a>
   1a9e4:	cmp	r0, #0
   1a9e6:	bge.n	1a9f0 <btrfs_search_slot@@Base+0x80c>
   1a9e8:	cmn.w	r0, #28
   1a9ec:	it	ne
   1a9ee:	movne	r6, r0
   1a9f0:	ldr	r0, [sp, #104]	; 0x68
   1a9f2:	ldr.w	r9, [r0, #192]	; 0xc0
   1a9f6:	cmp.w	r9, #0
   1a9fa:	bne.w	1aca8 <btrfs_search_slot@@Base+0xac4>
   1a9fe:	ldrd	r2, r3, [r0, #40]	; 0x28
   1aa02:	strd	r2, r3, [sp, #72]	; 0x48
   1aa06:	ldr	r3, [r0, #76]	; 0x4c
   1aa08:	str	r3, [sp, #80]	; 0x50
   1aa0a:	bl	1d4b4 <clean_tree_block@@Base>
   1aa0e:	ldr	r0, [sp, #104]	; 0x68
   1aa10:	bl	16bc8 <free_extent_buffer@@Base>
   1aa14:	vmov	r3, s17
   1aa18:	vmov	r2, s18
   1aa1c:	mov	r1, fp
   1aa1e:	mov	r0, r4
   1aa20:	str.w	r9, [sp, #104]	; 0x68
   1aa24:	bl	1a114 <btrfs_del_ptr@@Base>
   1aa28:	ldr	r1, [sp, #104]	; 0x68
   1aa2a:	ldr.w	r2, [r4, #200]	; 0xc8
   1aa2e:	ldr.w	r3, [r4, #204]	; 0xcc
   1aa32:	ldr	r1, [r1, #76]	; 0x4c
   1aa34:	cmp	r0, #0
   1aa36:	it	ne
   1aa38:	movne	r6, r0
   1aa3a:	ldrb.w	r0, [sp, #44]	; 0x2c
   1aa3e:	subs	r2, r2, r1
   1aa40:	mov.w	r1, #0
   1aa44:	str.w	r2, [r4, #200]	; 0xc8
   1aa48:	sbc.w	r3, r3, #0
   1aa4c:	movs	r2, #0
   1aa4e:	str.w	r3, [r4, #204]	; 0xcc
   1aa52:	movs	r3, #0
   1aa54:	strd	r0, r1, [sp, #24]
   1aa58:	strd	r2, r3, [sp, #32]
   1aa5c:	ldr.w	r0, [r4, #447]	; 0x1bf
   1aa60:	ldr.w	r1, [r4, #451]	; 0x1c3
   1aa64:	strd	r2, r3, [sp, #8]
   1aa68:	ldr	r3, [sp, #80]	; 0x50
   1aa6a:	strd	r0, r1, [sp, #16]
   1aa6e:	mov	r1, r4
   1aa70:	mov	r0, sl
   1aa72:	strd	r3, r9, [sp]
   1aa76:	ldrd	r2, r3, [sp, #72]	; 0x48
   1aa7a:	bl	20bf4 <btrfs_free_extent@@Base>
   1aa7e:	cmp	r0, #0
   1aa80:	it	ne
   1aa82:	movne	r6, r0
   1aa84:	ldr.w	r3, [r5, #192]	; 0xc0
   1aa88:	cmp	r3, #1
   1aa8a:	bne.n	1ab08 <btrfs_search_slot@@Base+0x924>
   1aa8c:	ldr.w	r9, [sp, #108]	; 0x6c
   1aa90:	mov.w	r2, #848	; 0x350
   1aa94:	ldr	r1, [pc, #504]	; (1ac90 <btrfs_search_slot@@Base+0xaac>)
   1aa96:	clz	r3, r9
   1aa9a:	ldr	r0, [pc, #504]	; (1ac94 <btrfs_search_slot@@Base+0xab0>)
   1aa9c:	add	r1, pc
   1aa9e:	lsrs	r3, r3, #5
   1aaa0:	addw	r1, r1, #393	; 0x189
   1aaa4:	add	r0, pc
   1aaa6:	bl	179bc <rb_free_nodes@@Base+0x116>
   1aaaa:	add.w	r3, sl, #8
   1aaae:	add.w	r1, r4, #464	; 0x1d0
   1aab2:	mov	r2, r5
   1aab4:	vmov	s17, r3
   1aab8:	mov	r3, r9
   1aaba:	vmov	r0, s17
   1aabe:	bl	17b00 <rb_free_nodes@@Base+0x25a>
   1aac2:	subs.w	r9, r0, #0
   1aac6:	blt.w	1ac28 <btrfs_search_slot@@Base+0xa44>
   1aaca:	cmp.w	r9, #1
   1aace:	bne.n	1aaec <btrfs_search_slot@@Base+0x908>
   1aad0:	str.w	r9, [sp]
   1aad4:	mov	r3, r5
   1aad6:	vmov	r0, s17
   1aada:	ldr	r2, [sp, #108]	; 0x6c
   1aadc:	ldr.w	r1, [r4, #464]	; 0x1d0
   1aae0:	bl	17bf0 <rb_free_nodes@@Base+0x34a>
   1aae4:	subs.w	r9, r0, #0
   1aae8:	it	lt
   1aaea:	movlt	r6, r9
   1aaec:	add.w	r1, r9, #4294967295	; 0xffffffff
   1aaf0:	ldr	r0, [pc, #420]	; (1ac98 <btrfs_search_slot@@Base+0xab4>)
   1aaf2:	negs	r3, r1
   1aaf4:	movw	r2, #859	; 0x35b
   1aaf8:	adcs	r3, r1
   1aafa:	ldr	r1, [pc, #416]	; (1ac9c <btrfs_search_slot@@Base+0xab8>)
   1aafc:	add	r0, pc
   1aafe:	add	r1, pc
   1ab00:	addw	r1, r1, #393	; 0x189
   1ab04:	bl	179bc <rb_free_nodes@@Base+0x116>
   1ab08:	ldr.w	r3, [r5, #192]	; 0xc0
   1ab0c:	mov	r9, r6
   1ab0e:	str	r3, [sp, #72]	; 0x48
   1ab10:	cmp	r3, #0
   1ab12:	bne.w	1acc6 <btrfs_search_slot@@Base+0xae2>
   1ab16:	ldrd	r2, r3, [r5, #40]	; 0x28
   1ab1a:	mov	r0, r5
   1ab1c:	ldr	r7, [r5, #76]	; 0x4c
   1ab1e:	strd	r2, r3, [sp, #80]	; 0x50
   1ab22:	bl	1d4b4 <clean_tree_block@@Base>
   1ab26:	mov	r0, r5
   1ab28:	bl	16bc8 <free_extent_buffer@@Base>
   1ab2c:	vmov	r2, s18
   1ab30:	ldr	r3, [sp, #52]	; 0x34
   1ab32:	mov	r1, fp
   1ab34:	mov	r0, r4
   1ab36:	bl	1a114 <btrfs_del_ptr@@Base>
   1ab3a:	ldr.w	r2, [r4, #200]	; 0xc8
   1ab3e:	ldr.w	r3, [r4, #204]	; 0xcc
   1ab42:	movs	r1, #0
   1ab44:	cmp	r0, #0
   1ab46:	ite	ne
   1ab48:	movne	r9, r0
   1ab4a:	moveq	r9, r6
   1ab4c:	ldrb.w	r0, [sp, #44]	; 0x2c
   1ab50:	subs	r2, r2, r7
   1ab52:	str.w	r2, [r4, #200]	; 0xc8
   1ab56:	sbc.w	r3, r3, #0
   1ab5a:	movs	r2, #0
   1ab5c:	str.w	r3, [r4, #204]	; 0xcc
   1ab60:	movs	r3, #0
   1ab62:	strd	r0, r1, [sp, #24]
   1ab66:	strd	r2, r3, [sp, #32]
   1ab6a:	ldr.w	r0, [r4, #447]	; 0x1bf
   1ab6e:	ldr.w	r1, [r4, #451]	; 0x1c3
   1ab72:	strd	r2, r3, [sp, #8]
   1ab76:	movs	r3, #0
   1ab78:	str	r7, [sp, #0]
   1ab7a:	strd	r0, r1, [sp, #16]
   1ab7e:	mov	r1, r4
   1ab80:	str	r3, [sp, #4]
   1ab82:	mov	r0, sl
   1ab84:	ldrd	r2, r3, [sp, #80]	; 0x50
   1ab88:	bl	20bf4 <btrfs_free_extent@@Base>
   1ab8c:	ldr	r5, [sp, #72]	; 0x48
   1ab8e:	cmp	r0, #0
   1ab90:	it	ne
   1ab92:	movne	r9, r0
   1ab94:	ldr	r2, [sp, #108]	; 0x6c
   1ab96:	cbz	r2, 1abc6 <btrfs_search_slot@@Base+0x9e2>
   1ab98:	ldr.w	r3, [r2, #192]	; 0xc0
   1ab9c:	ldr	r1, [sp, #48]	; 0x30
   1ab9e:	cmp	r3, r1
   1aba0:	bls.w	1ace4 <btrfs_search_slot@@Base+0xb00>
   1aba4:	ldr	r3, [r2, #80]	; 0x50
   1aba6:	adds	r3, #1
   1aba8:	str	r3, [r2, #80]	; 0x50
   1abaa:	ldr	r3, [sp, #40]	; 0x28
   1abac:	str.w	r2, [fp, r3, lsl #2]
   1abb0:	ldr.w	r3, [r8, #36]	; 0x24
   1abb4:	str.w	r1, [r8, #32]
   1abb8:	subs	r3, #1
   1abba:	str.w	r3, [r8, #36]	; 0x24
   1abbe:	cbz	r5, 1abc6 <btrfs_search_slot@@Base+0x9e2>
   1abc0:	mov	r0, r5
   1abc2:	bl	16bc8 <free_extent_buffer@@Base>
   1abc6:	ldrb.w	r3, [fp, #67]	; 0x43
   1abca:	cbnz	r3, 1abd8 <btrfs_search_slot@@Base+0x9f4>
   1abcc:	ldr	r2, [sp, #44]	; 0x2c
   1abce:	mov	r1, fp
   1abd0:	ldr.w	r0, [r4, #464]	; 0x1d0
   1abd4:	bl	192d8 <btrfs_check_leaf@@Base+0x2c0>
   1abd8:	ldr	r3, [sp, #40]	; 0x28
   1abda:	ldr.w	r2, [r8, #32]
   1abde:	ldr.w	r3, [fp, r3, lsl #2]
   1abe2:	add.w	r2, r2, r2, lsl #5
   1abe6:	add	r3, r2
   1abe8:	ldr.w	r0, [r3, #214]!
   1abec:	ldr	r1, [r3, #4]
   1abee:	ldrd	r2, r3, [sp, #64]	; 0x40
   1abf2:	cmp	r3, r1
   1abf4:	it	eq
   1abf6:	cmpeq	r2, r0
   1abf8:	beq.n	1ac28 <btrfs_search_slot@@Base+0xa44>
   1abfa:	ldr	r1, [pc, #164]	; (1aca0 <btrfs_search_slot@@Base+0xabc>)
   1abfc:	movs	r3, #1
   1abfe:	ldr	r0, [pc, #164]	; (1aca4 <btrfs_search_slot@@Base+0xac0>)
   1ac00:	mov.w	r2, #904	; 0x388
   1ac04:	add	r1, pc
   1ac06:	addw	r1, r1, #393	; 0x189
   1ac0a:	add	r0, pc
   1ac0c:	bl	17982 <rb_free_nodes@@Base+0xdc>
   1ac10:	add	r3, sp, #108	; 0x6c
   1ac12:	mov	r1, r4
   1ac14:	strd	r9, r3, [sp]
   1ac18:	mov	r0, sl
   1ac1a:	mov	r3, r7
   1ac1c:	bl	1882c <btrfs_cow_block@@Base>
   1ac20:	mov	r9, r0
   1ac22:	cmp	r0, #0
   1ac24:	beq.w	1a98c <btrfs_search_slot@@Base+0x7a8>
   1ac28:	ldr	r0, [sp, #104]	; 0x68
   1ac2a:	cbz	r0, 1ac30 <btrfs_search_slot@@Base+0xa4c>
   1ac2c:	bl	16bc8 <free_extent_buffer@@Base>
   1ac30:	ldr	r0, [sp, #108]	; 0x6c
   1ac32:	cmp	r0, #0
   1ac34:	bne.w	1a93a <btrfs_search_slot@@Base+0x756>
   1ac38:	cmp.w	r9, #0
   1ac3c:	bne.w	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1ac40:	ldr	r3, [sp, #40]	; 0x28
   1ac42:	ldr.w	r3, [fp, r3, lsl #2]
   1ac46:	str	r3, [sp, #96]	; 0x60
   1ac48:	cmp	r3, #0
   1ac4a:	bne.n	1acee <btrfs_search_slot@@Base+0xb0a>
   1ac4c:	mov	r0, fp
   1ac4e:	bl	17e00 <btrfs_release_path@@Base>
   1ac52:	b.w	1a274 <btrfs_search_slot@@Base+0x90>
   1ac56:	ldr.w	r3, [r2, #192]	; 0xc0
   1ac5a:	add.w	r0, sl, #8
   1ac5e:	ldr	r1, [sp, #48]	; 0x30
   1ac60:	add	r1, r3
   1ac62:	movs	r3, #1
   1ac64:	str	r1, [sp, #48]	; 0x30
   1ac66:	str	r3, [sp, #0]
   1ac68:	mov	r3, r5
   1ac6a:	ldr.w	r1, [r4, #464]	; 0x1d0
   1ac6e:	bl	17bf0 <rb_free_nodes@@Base+0x34a>
   1ac72:	and.w	r6, r0, r0, asr #31
   1ac76:	b.n	1a9cc <btrfs_search_slot@@Base+0x7e8>
   1ac78:	strh	r1, [r4, #30]
   1ac7a:	subs	r6, #15
   1ac7c:	subs	r0, r3, #4
   1ac7e:	movs	r2, r0
   1ac80:	adds	r5, r4, #4
   1ac82:	movs	r2, r0
   1ac84:	subs	r2, r2, #3
   1ac86:	movs	r2, r0
   1ac88:	adds	r3, r1, #4
   1ac8a:	movs	r2, r0
   1ac8c:	adds.w	r0, lr, #8454144	; 0x810000
   1ac90:	adds	r4, r7, #2
   1ac92:	movs	r2, r0
   1ac94:	subs	r0, r5, r4
   1ac96:	movs	r2, r0
   1ac98:	subs	r6, r2, r3
   1ac9a:	movs	r2, r0
   1ac9c:	adds	r2, r3, #1
   1ac9e:	movs	r2, r0
   1aca0:	subs	r4, r2, r5
   1aca2:	movs	r2, r0
   1aca4:	cmp	r3, #7
   1aca6:	movs	r2, r0
   1aca8:	add	r1, sp, #112	; 0x70
   1acaa:	movs	r2, #0
   1acac:	str	r1, [sp, #72]	; 0x48
   1acae:	bl	178fa <rb_free_nodes@@Base+0x54>
   1acb2:	mov	r0, r7
   1acb4:	vmov	r2, s17
   1acb8:	ldr	r1, [sp, #72]	; 0x48
   1acba:	bl	178d6 <rb_free_nodes@@Base+0x30>
   1acbe:	mov	r0, r7
   1acc0:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1acc4:	b.n	1aa84 <btrfs_search_slot@@Base+0x8a0>
   1acc6:	add	r1, sp, #112	; 0x70
   1acc8:	mov	r0, r5
   1acca:	movs	r2, #0
   1accc:	str	r1, [sp, #72]	; 0x48
   1acce:	bl	178fa <rb_free_nodes@@Base+0x54>
   1acd2:	mov	r0, r7
   1acd4:	ldr	r2, [sp, #52]	; 0x34
   1acd6:	ldr	r1, [sp, #72]	; 0x48
   1acd8:	bl	178d6 <rb_free_nodes@@Base+0x30>
   1acdc:	mov	r0, r7
   1acde:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1ace2:	b.n	1ab94 <btrfs_search_slot@@Base+0x9b0>
   1ace4:	ldr	r2, [sp, #48]	; 0x30
   1ace6:	subs	r3, r2, r3
   1ace8:	str.w	r3, [r8, #32]
   1acec:	b.n	1abc6 <btrfs_search_slot@@Base+0x9e2>
   1acee:	ldr.w	r2, [r8, #32]
   1acf2:	ldr	r1, [pc, #108]	; (1ad60 <btrfs_search_slot@@Base+0xb7c>)
   1acf4:	ldr	r0, [pc, #108]	; (1ad64 <btrfs_search_slot@@Base+0xb80>)
   1acf6:	str	r2, [sp, #100]	; 0x64
   1acf8:	add	r1, pc
   1acfa:	ldr.w	r3, [r3, #192]	; 0xc0
   1acfe:	add.w	r1, r1, #342	; 0x156
   1ad02:	add	r0, pc
   1ad04:	subs	r2, r3, #1
   1ad06:	negs	r3, r2
   1ad08:	adcs	r3, r2
   1ad0a:	movw	r2, #1227	; 0x4cb
   1ad0e:	bl	179bc <rb_free_nodes@@Base+0x116>
   1ad12:	b.w	1a462 <btrfs_search_slot@@Base+0x27e>
   1ad16:	ldr	r3, [sp, #88]	; 0x58
   1ad18:	cbz	r3, 1ad32 <btrfs_search_slot@@Base+0xb4e>
   1ad1a:	ldr	r3, [sp, #56]	; 0x38
   1ad1c:	mov	r1, fp
   1ad1e:	vmov	r0, s16
   1ad22:	ldr	r2, [r3, #0]
   1ad24:	ldr	r3, [r3, #4]
   1ad26:	strd	r2, r3, [sp]
   1ad2a:	ldr	r3, [sp, #100]	; 0x64
   1ad2c:	ldr	r2, [sp, #44]	; 0x2c
   1ad2e:	bl	18c30 <reada_for_search@@Base>
   1ad32:	vmov	r0, s16
   1ad36:	ldrd	r1, r2, [sp, #96]	; 0x60
   1ad3a:	bl	18bb6 <read_node_slot@@Base>
   1ad3e:	str	r0, [sp, #96]	; 0x60
   1ad40:	bl	17954 <rb_free_nodes@@Base+0xae>
   1ad44:	cmp	r0, #0
   1ad46:	bne.w	1a286 <btrfs_search_slot@@Base+0xa2>
   1ad4a:	mvn.w	r9, #4
   1ad4e:	b.w	1a2b6 <btrfs_search_slot@@Base+0xd2>
   1ad52:	mov	r0, r9
   1ad54:	add	sp, #140	; 0x8c
   1ad56:	vpop	{d8-d9}
   1ad5a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad5e:	nop
   1ad60:	subs	r0, r4, r1
   1ad62:	movs	r2, r0
   1ad64:	adds	r2, r3, r3
   1ad66:	movs	r2, r0

0001ad68 <btrfs_split_item@@Base>:
   1ad68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad6c:	sub	sp, #76	; 0x4c
   1ad6e:	mov	r4, r2
   1ad70:	ldr	r2, [pc, #536]	; (1af8c <btrfs_split_item@@Base+0x224>)
   1ad72:	str	r3, [sp, #12]
   1ad74:	add.w	r8, sp, #28
   1ad78:	ldr	r3, [pc, #532]	; (1af90 <btrfs_split_item@@Base+0x228>)
   1ad7a:	add	r2, pc
   1ad7c:	ldr	r5, [r4, #0]
   1ad7e:	mov	r6, r0
   1ad80:	mov	r7, r1
   1ad82:	mov	r1, r8
   1ad84:	ldr	r3, [r2, r3]
   1ad86:	mov	r0, r5
   1ad88:	ldr	r2, [r4, #32]
   1ad8a:	ldr	r3, [r3, #0]
   1ad8c:	str	r3, [sp, #68]	; 0x44
   1ad8e:	mov.w	r3, #0
   1ad92:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1ad96:	mov	r0, r5
   1ad98:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1ad9c:	cmp	r0, #24
   1ad9e:	bhi.n	1ae34 <btrfs_split_item@@Base+0xcc>
   1ada0:	ldr	r3, [r4, #32]
   1ada2:	mov.w	r9, #25
   1ada6:	mov	r0, r4
   1ada8:	mov.w	sl, #0
   1adac:	mla	r3, r9, r3, r5
   1adb0:	ldr.w	fp, [r3, #218]	; 0xda
   1adb4:	bl	17e00 <btrfs_release_path@@Base>
   1adb8:	movs	r3, #1
   1adba:	mov	r2, r8
   1adbc:	strb.w	r3, [r4, #66]	; 0x42
   1adc0:	mov	r1, r7
   1adc2:	str	r3, [sp, #4]
   1adc4:	mov	r0, r6
   1adc6:	mov	r3, r4
   1adc8:	str.w	sl, [sp]
   1adcc:	bl	1a1e4 <btrfs_search_slot@@Base>
   1add0:	strb.w	sl, [r4, #66]	; 0x42
   1add4:	cmp	r0, #0
   1add6:	bne.w	1af80 <btrfs_split_item@@Base+0x218>
   1adda:	ldr	r3, [r4, #32]
   1addc:	ldr	r2, [r4, #0]
   1adde:	mla	r3, r9, r3, r2
   1ade2:	ldr.w	r3, [r3, #218]	; 0xda
   1ade6:	cmp	r3, fp
   1ade8:	bne.w	1af80 <btrfs_split_item@@Base+0x218>
   1adec:	mov	r3, r4
   1adee:	mov	r2, r8
   1adf0:	mov	r1, r7
   1adf2:	strd	r0, r0, [sp]
   1adf6:	mov	r0, r6
   1adf8:	bl	198f8 <btrfs_check_leaf@@Base+0x8e0>
   1adfc:	ldr	r1, [pc, #404]	; (1af94 <btrfs_split_item@@Base+0x22c>)
   1adfe:	movw	r2, #2390	; 0x956
   1ae02:	add	r1, pc
   1ae04:	addw	r1, r1, #407	; 0x197
   1ae08:	str	r1, [sp, #16]
   1ae0a:	mov	r3, r0
   1ae0c:	ldr	r0, [pc, #392]	; (1af98 <btrfs_split_item@@Base+0x230>)
   1ae0e:	add	r0, pc
   1ae10:	bl	179bc <rb_free_nodes@@Base+0x116>
   1ae14:	mov	r0, r5
   1ae16:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1ae1a:	ldr	r1, [sp, #16]
   1ae1c:	movw	r2, #2392	; 0x958
   1ae20:	cmp	r0, #24
   1ae22:	ldr	r0, [pc, #376]	; (1af9c <btrfs_split_item@@Base+0x234>)
   1ae24:	it	hi
   1ae26:	movhi	r3, #0
   1ae28:	add	r0, pc
   1ae2a:	it	ls
   1ae2c:	movls	r3, #1
   1ae2e:	bl	179bc <rb_free_nodes@@Base+0x116>
   1ae32:	ldr	r5, [r4, #0]
   1ae34:	ldr	r3, [r4, #32]
   1ae36:	mov.w	sl, #25
   1ae3a:	mul.w	r3, sl, r3
   1ae3e:	adds	r3, #101	; 0x65
   1ae40:	str	r3, [sp, #20]
   1ae42:	ldr	r2, [sp, #20]
   1ae44:	add.w	r3, r5, #96	; 0x60
   1ae48:	add	r3, r2
   1ae4a:	ldr.w	r6, [r3, #21]
   1ae4e:	ldr.w	r2, [r3, #17]
   1ae52:	mov	r0, r6
   1ae54:	str	r2, [sp, #16]
   1ae56:	blx	8820 <malloc@plt+0x4>
   1ae5a:	ldr	r1, [pc, #324]	; (1afa0 <btrfs_split_item@@Base+0x238>)
   1ae5c:	movw	r2, #2402	; 0x962
   1ae60:	add	r1, pc
   1ae62:	addw	r1, r1, #407	; 0x197
   1ae66:	clz	r3, r0
   1ae6a:	mov	r9, r0
   1ae6c:	ldr	r0, [pc, #308]	; (1afa4 <btrfs_split_item@@Base+0x23c>)
   1ae6e:	lsrs	r3, r3, #5
   1ae70:	add	r0, pc
   1ae72:	bl	179bc <rb_free_nodes@@Base+0x116>
   1ae76:	ldr	r2, [sp, #16]
   1ae78:	mov	r1, r9
   1ae7a:	mov	r0, r5
   1ae7c:	adds	r2, #101	; 0x65
   1ae7e:	mov	r3, r6
   1ae80:	bl	172c2 <read_extent_buffer@@Base>
   1ae84:	ldr	r1, [r4, #32]
   1ae86:	ldr	r5, [r4, #0]
   1ae88:	add.w	fp, r1, #1
   1ae8c:	mla	r1, r1, sl, sl
   1ae90:	ldr.w	r8, [r5, #192]	; 0xc0
   1ae94:	cmp	fp, r8
   1ae96:	add.w	r7, r1, #101	; 0x65
   1ae9a:	bcs.n	1aeae <btrfs_split_item@@Base+0x146>
   1ae9c:	sub.w	r3, r8, fp
   1aea0:	adds	r1, #126	; 0x7e
   1aea2:	mov	r2, r7
   1aea4:	mov	r0, r5
   1aea6:	mul.w	r3, sl, r3
   1aeaa:	bl	17334 <memmove_extent_buffer@@Base>
   1aeae:	ldr	r3, [sp, #12]
   1aeb0:	add	r1, sp, #48	; 0x30
   1aeb2:	mov	r0, r5
   1aeb4:	add.w	r8, r8, #1
   1aeb8:	ldr.w	r2, [r3, #9]
   1aebc:	ldr.w	r3, [r3, #13]
   1aec0:	str.w	r2, [sp, #57]	; 0x39
   1aec4:	str.w	r3, [sp, #61]	; 0x3d
   1aec8:	ldr	r3, [sp, #12]
   1aeca:	ldrb	r3, [r3, #8]
   1aecc:	strb.w	r3, [sp, #56]	; 0x38
   1aed0:	ldr	r3, [sp, #12]
   1aed2:	ldr	r2, [r3, #0]
   1aed4:	ldr	r3, [r3, #4]
   1aed6:	strd	r2, r3, [sp, #48]	; 0x30
   1aeda:	mov	r2, fp
   1aedc:	bl	178e2 <rb_free_nodes@@Base+0x3c>
   1aee0:	add.w	r2, r5, #96	; 0x60
   1aee4:	ldr	r3, [sp, #16]
   1aee6:	add	r7, r2
   1aee8:	ldr	r1, [sp, #16]
   1aeea:	mov	r0, r5
   1aeec:	str.w	r3, [r7, #17]
   1aef0:	ldr	r3, [sp, #112]	; 0x70
   1aef2:	sub.w	sl, r6, r3
   1aef6:	ldr	r3, [sp, #20]
   1aef8:	add	r6, r1
   1aefa:	ldr	r1, [sp, #112]	; 0x70
   1aefc:	add	r3, r2
   1aefe:	str.w	sl, [r7, #21]
   1af02:	subs	r6, r6, r1
   1af04:	str.w	r1, [r3, #21]
   1af08:	movs	r1, #25
   1af0a:	str.w	r6, [r3, #17]
   1af0e:	str.w	r8, [r5, #192]	; 0xc0
   1af12:	ldr	r3, [r4, #32]
   1af14:	mla	r3, r1, r3, r2
   1af18:	mov	r1, r9
   1af1a:	ldr.w	r2, [r3, #118]	; 0x76
   1af1e:	ldr	r3, [sp, #112]	; 0x70
   1af20:	adds	r2, #101	; 0x65
   1af22:	bl	172d8 <write_extent_buffer@@Base>
   1af26:	ldr.w	r2, [r7, #17]
   1af2a:	ldr	r1, [sp, #112]	; 0x70
   1af2c:	mov	r3, sl
   1af2e:	adds	r2, #101	; 0x65
   1af30:	mov	r0, r5
   1af32:	add	r1, r9
   1af34:	bl	172d8 <write_extent_buffer@@Base>
   1af38:	mov	r0, r5
   1af3a:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1af3e:	mov	r0, r5
   1af40:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1af44:	cmp	r0, #0
   1af46:	bge.n	1af64 <btrfs_split_item@@Base+0x1fc>
   1af48:	mov	r0, r5
   1af4a:	bl	24fc8 <btrfs_print_leaf@@Base>
   1af4e:	ldr	r1, [pc, #88]	; (1afa8 <btrfs_split_item@@Base+0x240>)
   1af50:	ldr	r0, [pc, #88]	; (1afac <btrfs_split_item@@Base+0x244>)
   1af52:	movs	r3, #1
   1af54:	add	r1, pc
   1af56:	movw	r2, #2446	; 0x98e
   1af5a:	addw	r1, r1, #407	; 0x197
   1af5e:	add	r0, pc
   1af60:	bl	17982 <rb_free_nodes@@Base+0xdc>
   1af64:	mov	r0, r9
   1af66:	blx	85dc <free@plt+0x4>
   1af6a:	movs	r0, #0
   1af6c:	ldr	r2, [pc, #64]	; (1afb0 <btrfs_split_item@@Base+0x248>)
   1af6e:	ldr	r3, [pc, #32]	; (1af90 <btrfs_split_item@@Base+0x228>)
   1af70:	add	r2, pc
   1af72:	ldr	r3, [r2, r3]
   1af74:	ldr	r2, [r3, #0]
   1af76:	ldr	r3, [sp, #68]	; 0x44
   1af78:	eors	r2, r3
   1af7a:	beq.n	1af86 <btrfs_split_item@@Base+0x21e>
   1af7c:	blx	86b8 <__stack_chk_fail@plt>
   1af80:	mvn.w	r0, #10
   1af84:	b.n	1af6c <btrfs_split_item@@Base+0x204>
   1af86:	add	sp, #76	; 0x4c
   1af88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af8c:	add	r0, pc, #56	; (adr r0, 1afc8 <btrfs_insert_empty_items@@Base+0x14>)
   1af8e:	movs	r4, r0
   1af90:	lsls	r4, r4, #8
   1af92:	movs	r0, r0
   1af94:	adds	r6, r2, r5
   1af96:	movs	r2, r0
   1af98:	vaddl.s16	q8, d6, d1
   1af9c:	asrs	r1, r2, #31
   1af9e:	movs	r2, r0
   1afa0:	adds	r0, r7, r3
   1afa2:	movs	r2, r0
   1afa4:	asrs	r1, r0, #31
   1afa6:	movs	r2, r0
   1afa8:	adds	r4, r0, r0
   1afaa:	movs	r2, r0
   1afac:	movs	r7, #179	; 0xb3
   1afae:	movs	r2, r0
   1afb0:	ldr	r6, [sp, #96]	; 0x60
   1afb2:	movs	r4, r0

0001afb4 <btrfs_insert_empty_items@@Base>:
   1afb4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afb8:	sub	sp, #60	; 0x3c
   1afba:	mov	fp, r3
   1afbc:	mov.w	r8, #0
   1afc0:	ldr	r3, [sp, #96]	; 0x60
   1afc2:	strd	r1, r2, [sp, #16]
   1afc6:	ldr	r2, [pc, #616]	; (1b230 <btrfs_insert_empty_items@@Base+0x27c>)
   1afc8:	str	r3, [sp, #24]
   1afca:	ldr	r3, [pc, #616]	; (1b234 <btrfs_insert_empty_items@@Base+0x280>)
   1afcc:	add	r2, pc
   1afce:	add	r3, pc
   1afd0:	str	r3, [sp, #28]
   1afd2:	ldr	r3, [pc, #612]	; (1b238 <btrfs_insert_empty_items@@Base+0x284>)
   1afd4:	ldr	r3, [r2, r3]
   1afd6:	ldr	r3, [r3, #0]
   1afd8:	str	r3, [sp, #52]	; 0x34
   1afda:	mov.w	r3, #0
   1afde:	mov	r3, r8
   1afe0:	ldr	r2, [sp, #100]	; 0x64
   1afe2:	cmp	r3, r2
   1afe4:	blt.n	1b002 <btrfs_insert_empty_items@@Base+0x4e>
   1afe6:	ldr	r3, [sp, #16]
   1afe8:	ldr	r3, [r3, #0]
   1afea:	cbnz	r3, 1b00e <btrfs_insert_empty_items@@Base+0x5a>
   1afec:	ldr	r1, [pc, #588]	; (1b23c <btrfs_insert_empty_items@@Base+0x288>)
   1afee:	movs	r3, #1
   1aff0:	ldr	r0, [pc, #588]	; (1b240 <btrfs_insert_empty_items@@Base+0x28c>)
   1aff2:	movw	r2, #2636	; 0xa4c
   1aff6:	add	r1, pc
   1aff8:	add.w	r1, r1, #424	; 0x1a8
   1affc:	add	r0, pc
   1affe:	bl	17982 <rb_free_nodes@@Base+0xdc>
   1b002:	ldr	r2, [sp, #24]
   1b004:	ldr.w	r2, [r2, r3, lsl #2]
   1b008:	adds	r3, #1
   1b00a:	add	r8, r2
   1b00c:	b.n	1afe0 <btrfs_insert_empty_items@@Base+0x2c>
   1b00e:	ldr	r3, [sp, #100]	; 0x64
   1b010:	movs	r2, #25
   1b012:	ldr	r1, [sp, #16]
   1b014:	mov.w	r9, #1
   1b018:	mla	r5, r2, r3, r8
   1b01c:	ldr	r3, [sp, #20]
   1b01e:	mov	r2, fp
   1b020:	strd	r5, r9, [sp]
   1b024:	bl	1a1e4 <btrfs_search_slot@@Base>
   1b028:	cmp	r0, #0
   1b02a:	beq.w	1b20e <btrfs_insert_empty_items@@Base+0x25a>
   1b02e:	blt.w	1b212 <btrfs_insert_empty_items@@Base+0x25e>
   1b032:	ldr	r3, [sp, #20]
   1b034:	ldr	r4, [r3, #0]
   1b036:	ldr.w	r3, [r4, #192]	; 0xc0
   1b03a:	mov	r1, r4
   1b03c:	str	r3, [sp, #12]
   1b03e:	ldr	r3, [sp, #16]
   1b040:	ldr.w	r0, [r3, #464]	; 0x1d0
   1b044:	add.w	r0, r0, #384	; 0x180
   1b048:	bl	17968 <rb_free_nodes@@Base+0xc2>
   1b04c:	mov	r6, r0
   1b04e:	mov	r0, r4
   1b050:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1b054:	cmp	r0, r5
   1b056:	bcs.n	1b090 <btrfs_insert_empty_items@@Base+0xdc>
   1b058:	mov	r0, r4
   1b05a:	bl	24fc8 <btrfs_print_leaf@@Base>
   1b05e:	ldr	r2, [sp, #28]
   1b060:	ldr	r3, [pc, #480]	; (1b244 <btrfs_insert_empty_items@@Base+0x290>)
   1b062:	mov	r0, r4
   1b064:	ldr	r3, [r2, r3]
   1b066:	ldr	r6, [r3, #0]
   1b068:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1b06c:	ldr	r2, [pc, #472]	; (1b248 <btrfs_insert_empty_items@@Base+0x294>)
   1b06e:	mov	r3, r5
   1b070:	mov	r1, r9
   1b072:	add	r2, pc
   1b074:	str	r0, [sp, #0]
   1b076:	mov	r0, r6
   1b078:	blx	8a14 <__fprintf_chk@plt+0x4>
   1b07c:	ldr	r1, [pc, #460]	; (1b24c <btrfs_insert_empty_items@@Base+0x298>)
   1b07e:	ldr	r0, [pc, #464]	; (1b250 <btrfs_insert_empty_items@@Base+0x29c>)
   1b080:	mov	r3, r9
   1b082:	add	r1, pc
   1b084:	movw	r2, #2655	; 0xa5f
   1b088:	add.w	r1, r1, #424	; 0x1a8
   1b08c:	add	r0, pc
   1b08e:	b.n	1affe <btrfs_insert_empty_items@@Base+0x4a>
   1b090:	ldr	r3, [sp, #20]
   1b092:	movw	r2, #2659	; 0xa63
   1b096:	ldr.w	sl, [pc, #444]	; 1b254 <btrfs_insert_empty_items@@Base+0x2a0>
   1b09a:	ldr	r0, [pc, #444]	; (1b258 <btrfs_insert_empty_items@@Base+0x2a4>)
   1b09c:	ldr	r5, [r3, #32]
   1b09e:	add	sl, pc
   1b0a0:	add.w	sl, sl, #424	; 0x1a8
   1b0a4:	add	r0, pc
   1b0a6:	lsrs	r3, r5, #31
   1b0a8:	mov	r1, sl
   1b0aa:	bl	179bc <rb_free_nodes@@Base+0x116>
   1b0ae:	ldr	r3, [sp, #12]
   1b0b0:	cmp	r5, r3
   1b0b2:	bcs.n	1b0fa <btrfs_insert_empty_items@@Base+0x146>
   1b0b4:	mov	r1, r5
   1b0b6:	mov	r0, r4
   1b0b8:	bl	178c4 <rb_free_nodes@@Base+0x1e>
   1b0bc:	cmp	r6, r0
   1b0be:	mov	r7, r0
   1b0c0:	bhi.n	1b17a <btrfs_insert_empty_items@@Base+0x1c6>
   1b0c2:	add.w	ip, r4, #197	; 0xc5
   1b0c6:	mov	r2, r5
   1b0c8:	movs	r3, #25
   1b0ca:	ldr	r1, [sp, #12]
   1b0cc:	cmp	r2, r1
   1b0ce:	bne.n	1b1a6 <btrfs_insert_empty_items@@Base+0x1f2>
   1b0d0:	subs	r0, r1, r5
   1b0d2:	ldr	r1, [sp, #100]	; 0x64
   1b0d4:	mul.w	r2, r3, r5
   1b0d8:	add	r1, r5
   1b0da:	muls	r1, r3
   1b0dc:	adds	r2, #101	; 0x65
   1b0de:	muls	r3, r0
   1b0e0:	mov	r0, r4
   1b0e2:	adds	r1, #101	; 0x65
   1b0e4:	bl	17334 <memmove_extent_buffer@@Base>
   1b0e8:	add.w	r2, r6, #101	; 0x65
   1b0ec:	subs	r3, r7, r6
   1b0ee:	sub.w	r1, r2, r8
   1b0f2:	mov	r0, r4
   1b0f4:	mov	r6, r7
   1b0f6:	bl	17334 <memmove_extent_buffer@@Base>
   1b0fa:	mov.w	r9, #25
   1b0fe:	add	r1, sp, #32
   1b100:	mla	r9, r9, r5, r4
   1b104:	mov	r7, fp
   1b106:	mov.w	r8, #0
   1b10a:	ldr	r3, [sp, #100]	; 0x64
   1b10c:	add.w	sl, r9, #25
   1b110:	cmp	r8, r3
   1b112:	blt.n	1b1ba <btrfs_insert_empty_items@@Base+0x206>
   1b114:	ldr	r3, [sp, #12]
   1b116:	mov	r0, r4
   1b118:	ldr	r2, [sp, #100]	; 0x64
   1b11a:	add	r3, r2
   1b11c:	str.w	r3, [r4, #192]	; 0xc0
   1b120:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1b124:	cbnz	r5, 1b156 <btrfs_insert_empty_items@@Base+0x1a2>
   1b126:	ldr.w	r3, [fp, #13]
   1b12a:	ldr.w	r2, [fp, #9]
   1b12e:	ldrd	r0, r1, [sp, #16]
   1b132:	str.w	r3, [sp, #45]	; 0x2d
   1b136:	ldrb.w	r3, [fp, #8]
   1b13a:	str.w	r2, [sp, #41]	; 0x29
   1b13e:	ldr.w	r2, [fp]
   1b142:	strb.w	r3, [sp, #40]	; 0x28
   1b146:	ldr.w	r3, [fp, #4]
   1b14a:	strd	r2, r3, [sp, #32]
   1b14e:	add	r2, sp, #32
   1b150:	movs	r3, #1
   1b152:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   1b156:	mov	r0, r4
   1b158:	bl	18f90 <btrfs_leaf_free_space@@Base>
   1b15c:	cmp	r0, #0
   1b15e:	bge.n	1b226 <btrfs_insert_empty_items@@Base+0x272>
   1b160:	mov	r0, r4
   1b162:	bl	24fc8 <btrfs_print_leaf@@Base>
   1b166:	ldr	r1, [pc, #244]	; (1b25c <btrfs_insert_empty_items@@Base+0x2a8>)
   1b168:	ldr	r0, [pc, #244]	; (1b260 <btrfs_insert_empty_items@@Base+0x2ac>)
   1b16a:	movs	r3, #1
   1b16c:	add	r1, pc
   1b16e:	movw	r2, #2714	; 0xa9a
   1b172:	add.w	r1, r1, #424	; 0x1a8
   1b176:	add	r0, pc
   1b178:	b.n	1affe <btrfs_insert_empty_items@@Base+0x4a>
   1b17a:	mov	r0, r4
   1b17c:	bl	24fc8 <btrfs_print_leaf@@Base>
   1b180:	ldr	r2, [sp, #28]
   1b182:	ldr	r3, [pc, #192]	; (1b244 <btrfs_insert_empty_items@@Base+0x290>)
   1b184:	mov	r1, r9
   1b186:	ldr	r0, [r2, r3]
   1b188:	mov	r3, r5
   1b18a:	ldr	r2, [pc, #216]	; (1b264 <btrfs_insert_empty_items@@Base+0x2b0>)
   1b18c:	strd	r7, r6, [sp]
   1b190:	add	r2, pc
   1b192:	ldr	r0, [r0, #0]
   1b194:	blx	8a14 <__fprintf_chk@plt+0x4>
   1b198:	ldr	r0, [pc, #204]	; (1b268 <btrfs_insert_empty_items@@Base+0x2b4>)
   1b19a:	mov	r3, r9
   1b19c:	movw	r2, #2668	; 0xa6c
   1b1a0:	add	r0, pc
   1b1a2:	mov	r1, sl
   1b1a4:	b.n	1affe <btrfs_insert_empty_items@@Base+0x4a>
   1b1a6:	mla	r0, r3, r2, ip
   1b1aa:	adds	r2, #1
   1b1ac:	ldr.w	r1, [r0, #17]
   1b1b0:	sub.w	r1, r1, r8
   1b1b4:	str.w	r1, [r0, #17]
   1b1b8:	b.n	1b0ca <btrfs_insert_empty_items@@Base+0x116>
   1b1ba:	ldr.w	r3, [r7, #13]
   1b1be:	mov	r0, r4
   1b1c0:	ldr.w	r2, [r7, #9]
   1b1c4:	adds	r7, #17
   1b1c6:	str	r1, [sp, #28]
   1b1c8:	str.w	r3, [sp, #45]	; 0x2d
   1b1cc:	ldrb.w	r3, [r7, #-9]
   1b1d0:	str.w	r2, [sp, #41]	; 0x29
   1b1d4:	ldr.w	r2, [r7, #-17]
   1b1d8:	strb.w	r3, [sp, #40]	; 0x28
   1b1dc:	ldr.w	r3, [r7, #-13]
   1b1e0:	strd	r2, r3, [sp, #32]
   1b1e4:	add.w	r2, r5, r8
   1b1e8:	bl	178e2 <rb_free_nodes@@Base+0x3c>
   1b1ec:	ldr	r3, [sp, #24]
   1b1ee:	ldr	r1, [sp, #28]
   1b1f0:	ldr.w	r3, [r3, r8, lsl #2]
   1b1f4:	subs	r3, r6, r3
   1b1f6:	str.w	r3, [r9, #214]	; 0xd6
   1b1fa:	ldr	r3, [sp, #24]
   1b1fc:	ldr.w	r3, [r3, r8, lsl #2]
   1b200:	add.w	r8, r8, #1
   1b204:	subs	r6, r6, r3
   1b206:	str.w	r3, [r9, #218]	; 0xda
   1b20a:	mov	r9, sl
   1b20c:	b.n	1b10a <btrfs_insert_empty_items@@Base+0x156>
   1b20e:	mvn.w	r0, #16
   1b212:	ldr	r2, [pc, #88]	; (1b26c <btrfs_insert_empty_items@@Base+0x2b8>)
   1b214:	ldr	r3, [pc, #32]	; (1b238 <btrfs_insert_empty_items@@Base+0x284>)
   1b216:	add	r2, pc
   1b218:	ldr	r3, [r2, r3]
   1b21a:	ldr	r2, [r3, #0]
   1b21c:	ldr	r3, [sp, #52]	; 0x34
   1b21e:	eors	r2, r3
   1b220:	beq.n	1b22a <btrfs_insert_empty_items@@Base+0x276>
   1b222:	blx	86b8 <__stack_chk_fail@plt>
   1b226:	movs	r0, #0
   1b228:	b.n	1b212 <btrfs_insert_empty_items@@Base+0x25e>
   1b22a:	add	sp, #60	; 0x3c
   1b22c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b230:	ldr	r5, [sp, #752]	; 0x2f0
   1b232:	movs	r4, r0
   1b234:	ldr	r5, [sp, #744]	; 0x2e8
   1b236:	movs	r4, r0
   1b238:	lsls	r4, r4, #8
   1b23a:	movs	r0, r0
   1b23c:	asrs	r2, r4, #29
   1b23e:	movs	r2, r0
   1b240:	movs	r7, #21
   1b242:	movs	r2, r0
   1b244:	lsls	r4, r6, #8
   1b246:	movs	r0, r0
   1b248:	asrs	r4, r0, #23
   1b24a:	movs	r2, r0
   1b24c:	asrs	r6, r2, #27
   1b24e:	movs	r2, r0
   1b250:	movs	r6, #133	; 0x85
   1b252:	movs	r2, r0
   1b254:	asrs	r2, r7, #26
   1b256:	movs	r2, r0
   1b258:	asrs	r0, r1, #16
   1b25a:	movs	r2, r0
   1b25c:	asrs	r4, r5, #23
   1b25e:	movs	r2, r0
   1b260:	movs	r5, #155	; 0x9b
   1b262:	movs	r2, r0
   1b264:	asrs	r4, r1, #19
   1b266:	movs	r2, r0
   1b268:	movs	r5, #113	; 0x71
   1b26a:	movs	r2, r0
   1b26c:	ldr	r3, [sp, #456]	; 0x1c8
   1b26e:	movs	r4, r0

0001b270 <btrfs_insert_item@@Base>:
   1b270:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b274:	mov	r8, r2
   1b276:	ldr	r2, [pc, #132]	; (1b2fc <btrfs_insert_item@@Base+0x8c>)
   1b278:	mov	r6, r3
   1b27a:	ldr	r3, [pc, #132]	; (1b300 <btrfs_insert_item@@Base+0x90>)
   1b27c:	sub	sp, #24
   1b27e:	add	r2, pc
   1b280:	mov	r5, r0
   1b282:	str	r1, [sp, #12]
   1b284:	ldr	r3, [r2, r3]
   1b286:	ldr	r7, [sp, #48]	; 0x30
   1b288:	ldr	r3, [r3, #0]
   1b28a:	str	r3, [sp, #20]
   1b28c:	mov.w	r3, #0
   1b290:	bl	17df8 <btrfs_alloc_path@@Base>
   1b294:	mov	r4, r0
   1b296:	cbz	r0, 1b2ec <btrfs_insert_item@@Base+0x7c>
   1b298:	movs	r3, #1
   1b29a:	mov	r2, r0
   1b29c:	str	r3, [sp, #4]
   1b29e:	mov	r0, r5
   1b2a0:	add	r3, sp, #16
   1b2a2:	ldr	r1, [sp, #12]
   1b2a4:	str	r3, [sp, #0]
   1b2a6:	mov	r3, r8
   1b2a8:	str	r7, [sp, #16]
   1b2aa:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   1b2ae:	mov	r5, r0
   1b2b0:	cbnz	r0, 1b2d2 <btrfs_insert_item@@Base+0x62>
   1b2b2:	ldr	r0, [r4, #0]
   1b2b4:	movs	r2, #25
   1b2b6:	ldr	r3, [r4, #32]
   1b2b8:	mov	r1, r6
   1b2ba:	str	r0, [sp, #12]
   1b2bc:	mla	r3, r2, r3, r0
   1b2c0:	ldr.w	r2, [r3, #214]	; 0xd6
   1b2c4:	mov	r3, r7
   1b2c6:	adds	r2, #101	; 0x65
   1b2c8:	bl	172d8 <write_extent_buffer@@Base>
   1b2cc:	ldr	r0, [sp, #12]
   1b2ce:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1b2d2:	mov	r0, r4
   1b2d4:	bl	17e26 <btrfs_free_path@@Base>
   1b2d8:	ldr	r2, [pc, #40]	; (1b304 <btrfs_insert_item@@Base+0x94>)
   1b2da:	ldr	r3, [pc, #36]	; (1b300 <btrfs_insert_item@@Base+0x90>)
   1b2dc:	add	r2, pc
   1b2de:	ldr	r3, [r2, r3]
   1b2e0:	ldr	r2, [r3, #0]
   1b2e2:	ldr	r3, [sp, #20]
   1b2e4:	eors	r2, r3
   1b2e6:	beq.n	1b2f2 <btrfs_insert_item@@Base+0x82>
   1b2e8:	blx	86b8 <__stack_chk_fail@plt>
   1b2ec:	mvn.w	r5, #11
   1b2f0:	b.n	1b2d8 <btrfs_insert_item@@Base+0x68>
   1b2f2:	mov	r0, r5
   1b2f4:	add	sp, #24
   1b2f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b2fa:	nop
   1b2fc:	ldr	r3, [sp, #40]	; 0x28
   1b2fe:	movs	r4, r0
   1b300:	lsls	r4, r4, #8
   1b302:	movs	r0, r0
   1b304:	ldr	r2, [sp, #688]	; 0x2b0
   1b306:	movs	r4, r0
   1b308:	push	{r4, r5, r6, r7, lr}
   1b30a:	mov	r6, r0
   1b30c:	mov	r7, r2
   1b30e:	ldr.w	r0, [r3, #176]	; 0xb0
   1b312:	mov	r4, r1
   1b314:	mov	r5, r3
   1b316:	ldr.w	r1, [r3, #180]	; 0xb4
   1b31a:	sub	sp, #44	; 0x2c
   1b31c:	ldrd	r2, r3, [r6, #8]
   1b320:	cmp	r3, r1
   1b322:	ldr	r1, [pc, #116]	; (1b398 <btrfs_insert_item@@Base+0x128>)
   1b324:	it	eq
   1b326:	cmpeq	r2, r0
   1b328:	ldr	r0, [pc, #112]	; (1b39c <btrfs_insert_item@@Base+0x12c>)
   1b32a:	add	r1, pc
   1b32c:	movw	r2, #2805	; 0xaf5
   1b330:	ite	ne
   1b332:	movne	r3, #1
   1b334:	moveq	r3, #0
   1b336:	addw	r1, r1, #449	; 0x1c1
   1b33a:	add	r0, pc
   1b33c:	bl	17a04 <rb_free_nodes@@Base+0x15e>
   1b340:	ldr	r3, [r7, #36]	; 0x24
   1b342:	movs	r2, #1
   1b344:	mov	r1, r7
   1b346:	mov	r0, r4
   1b348:	bl	1a114 <btrfs_del_ptr@@Base>
   1b34c:	cbnz	r0, 1b394 <btrfs_insert_item@@Base+0x124>
   1b34e:	ldr	r1, [r5, #76]	; 0x4c
   1b350:	ldr.w	r2, [r4, #200]	; 0xc8
   1b354:	ldr.w	r3, [r4, #204]	; 0xcc
   1b358:	subs	r2, r2, r1
   1b35a:	ldr.w	r7, [r4, #447]	; 0x1bf
   1b35e:	str.w	r2, [r4, #200]	; 0xc8
   1b362:	sbc.w	r3, r3, #0
   1b366:	movs	r2, #0
   1b368:	str.w	r3, [r4, #204]	; 0xcc
   1b36c:	ldr.w	r1, [r4, #451]	; 0x1c3
   1b370:	movs	r3, #0
   1b372:	strd	r2, r3, [sp, #32]
   1b376:	strd	r2, r3, [sp, #24]
   1b37a:	strd	r2, r3, [sp, #8]
   1b37e:	ldr	r3, [r5, #76]	; 0x4c
   1b380:	strd	r7, r1, [sp, #16]
   1b384:	mov	r1, r4
   1b386:	strd	r3, r0, [sp]
   1b38a:	mov	r0, r6
   1b38c:	ldrd	r2, r3, [r5, #40]	; 0x28
   1b390:	bl	20bf4 <btrfs_free_extent@@Base>
   1b394:	add	sp, #44	; 0x2c
   1b396:	pop	{r4, r5, r6, r7, pc}
   1b398:	asrs	r6, r5, #16
   1b39a:	movs	r2, r0
   1b39c:	asrs	r3, r0, #13
   1b39e:	movs	r2, r0

0001b3a0 <btrfs_del_items@@Base>:
   1b3a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3a4:	mov	r6, r2
   1b3a6:	ldr	r2, [pc, #468]	; (1b57c <btrfs_del_items@@Base+0x1dc>)
   1b3a8:	mov	r8, r3
   1b3aa:	ldr	r3, [pc, #468]	; (1b580 <btrfs_del_items@@Base+0x1e0>)
   1b3ac:	sub	sp, #52	; 0x34
   1b3ae:	add	r2, pc
   1b3b0:	ldr	r5, [r6, #0]
   1b3b2:	mov	sl, r0
   1b3b4:	mov	r7, r1
   1b3b6:	ldr	r3, [r2, r3]
   1b3b8:	ldr	r3, [r3, #0]
   1b3ba:	str	r3, [sp, #44]	; 0x2c
   1b3bc:	mov.w	r3, #0
   1b3c0:	ldr	r3, [sp, #88]	; 0x58
   1b3c2:	add.w	r9, r8, r3
   1b3c6:	add.w	r3, r5, #96	; 0x60
   1b3ca:	str	r3, [sp, #20]
   1b3cc:	movs	r3, #25
   1b3ce:	mul.w	r3, r3, r8
   1b3d2:	adds	r2, r5, r3
   1b3d4:	str	r3, [sp, #12]
   1b3d6:	movs	r3, #0
   1b3d8:	mov	fp, r3
   1b3da:	ldr	r0, [sp, #88]	; 0x58
   1b3dc:	add.w	r1, r2, #25
   1b3e0:	cmp	r3, r0
   1b3e2:	blt.n	1b45c <btrfs_del_items@@Base+0xbc>
   1b3e4:	ldr.w	r4, [r5, #192]	; 0xc0
   1b3e8:	str.w	r9, [sp, #16]
   1b3ec:	cmp	r9, r4
   1b3ee:	beq.n	1b444 <btrfs_del_items@@Base+0xa4>
   1b3f0:	ldr.w	r0, [r7, #464]	; 0x1d0
   1b3f4:	mov	r1, r5
   1b3f6:	add.w	r0, r0, #384	; 0x180
   1b3fa:	bl	17968 <rb_free_nodes@@Base+0xc2>
   1b3fe:	ldr	r3, [sp, #20]
   1b400:	add.w	r1, r9, #4294967295	; 0xffffffff
   1b404:	mov.w	ip, #25
   1b408:	mla	r1, ip, r1, r3
   1b40c:	ldr.w	r3, [r1, #118]	; 0x76
   1b410:	add.w	r2, r0, #101	; 0x65
   1b414:	subs	r3, r3, r0
   1b416:	add.w	r1, r2, fp
   1b41a:	mov	r0, r5
   1b41c:	bl	17334 <memmove_extent_buffer@@Base>
   1b420:	add.w	r0, r5, #197	; 0xc5
   1b424:	movs	r3, #25
   1b426:	cmp	r4, r9
   1b428:	bhi.n	1b468 <btrfs_del_items@@Base+0xc8>
   1b42a:	ldr	r2, [sp, #88]	; 0x58
   1b42c:	mov	r0, r5
   1b42e:	add.w	r1, r2, r8
   1b432:	ldr	r2, [sp, #16]
   1b434:	subs	r1, r4, r1
   1b436:	muls	r2, r3
   1b438:	muls	r3, r1
   1b43a:	ldr	r1, [sp, #12]
   1b43c:	adds	r2, #101	; 0x65
   1b43e:	adds	r1, #101	; 0x65
   1b440:	bl	17334 <memmove_extent_buffer@@Base>
   1b444:	ldr	r3, [sp, #88]	; 0x58
   1b446:	subs	r2, r4, r3
   1b448:	str.w	r2, [r5, #192]	; 0xc0
   1b44c:	cbnz	r2, 1b4a4 <btrfs_del_items@@Base+0x104>
   1b44e:	ldr	r3, [r7, #0]
   1b450:	cmp	r3, r5
   1b452:	bne.n	1b47c <btrfs_del_items@@Base+0xdc>
   1b454:	strb.w	r2, [r5, #196]	; 0xc4
   1b458:	movs	r4, #0
   1b45a:	b.n	1b490 <btrfs_del_items@@Base+0xf0>
   1b45c:	ldr.w	r2, [r2, #218]	; 0xda
   1b460:	adds	r3, #1
   1b462:	add	fp, r2
   1b464:	mov	r2, r1
   1b466:	b.n	1b3da <btrfs_del_items@@Base+0x3a>
   1b468:	mla	r1, r3, r9, r0
   1b46c:	add.w	r9, r9, #1
   1b470:	ldr.w	r2, [r1, #17]
   1b474:	add	r2, fp
   1b476:	str.w	r2, [r1, #17]
   1b47a:	b.n	1b426 <btrfs_del_items@@Base+0x86>
   1b47c:	mov	r0, r5
   1b47e:	bl	1d4b4 <clean_tree_block@@Base>
   1b482:	mov	r3, r5
   1b484:	mov	r2, r6
   1b486:	mov	r1, r7
   1b488:	mov	r0, sl
   1b48a:	bl	1b308 <btrfs_insert_item@@Base+0x98>
   1b48e:	mov	r4, r0
   1b490:	ldr	r2, [pc, #240]	; (1b584 <btrfs_del_items@@Base+0x1e4>)
   1b492:	ldr	r3, [pc, #236]	; (1b580 <btrfs_del_items@@Base+0x1e0>)
   1b494:	add	r2, pc
   1b496:	ldr	r3, [r2, r3]
   1b498:	ldr	r2, [r3, #0]
   1b49a:	ldr	r3, [sp, #44]	; 0x2c
   1b49c:	eors	r2, r3
   1b49e:	beq.n	1b574 <btrfs_del_items@@Base+0x1d4>
   1b4a0:	blx	86b8 <__stack_chk_fail@plt>
   1b4a4:	movs	r1, #0
   1b4a6:	mov	r0, r5
   1b4a8:	bl	17d08 <rb_free_nodes@@Base+0x462>
   1b4ac:	mov	r9, r0
   1b4ae:	cmp.w	r8, #0
   1b4b2:	bne.n	1b4cc <btrfs_del_items@@Base+0x12c>
   1b4b4:	add	r4, sp, #24
   1b4b6:	mov	r2, r8
   1b4b8:	mov	r0, r5
   1b4ba:	mov	r1, r4
   1b4bc:	bl	178ee <rb_free_nodes@@Base+0x48>
   1b4c0:	movs	r3, #1
   1b4c2:	mov	r2, r4
   1b4c4:	mov	r1, r6
   1b4c6:	mov	r0, r7
   1b4c8:	bl	18e08 <btrfs_fixup_low_keys@@Base>
   1b4cc:	ldr.w	r3, [r7, #464]	; 0x1d0
   1b4d0:	ldr.w	r3, [r3, #384]	; 0x180
   1b4d4:	subs	r3, #101	; 0x65
   1b4d6:	cmp.w	r9, r3, lsr #2
   1b4da:	bcs.n	1b56c <btrfs_del_items@@Base+0x1cc>
   1b4dc:	ldr	r3, [r5, #80]	; 0x50
   1b4de:	mov	r2, r6
   1b4e0:	ldr.w	r8, [r6, #36]	; 0x24
   1b4e4:	mov	r1, r7
   1b4e6:	adds	r3, #1
   1b4e8:	mov	r0, sl
   1b4ea:	str	r3, [r5, #80]	; 0x50
   1b4ec:	movs	r3, #1
   1b4ee:	str	r3, [sp, #0]
   1b4f0:	bl	195c8 <btrfs_check_leaf@@Base+0x5b0>
   1b4f4:	subs	r4, r0, #0
   1b4f6:	bge.n	1b562 <btrfs_del_items@@Base+0x1c2>
   1b4f8:	cmn.w	r4, #28
   1b4fc:	it	eq
   1b4fe:	moveq	r4, #0
   1b500:	ldr	r3, [r6, #0]
   1b502:	cmp	r3, r5
   1b504:	bne.n	1b526 <btrfs_del_items@@Base+0x186>
   1b506:	ldr.w	r3, [r5, #192]	; 0xc0
   1b50a:	cbz	r3, 1b526 <btrfs_del_items@@Base+0x186>
   1b50c:	movs	r3, #1
   1b50e:	mov	r2, r6
   1b510:	mov	r1, r7
   1b512:	mov	r0, sl
   1b514:	str	r3, [sp, #0]
   1b516:	bl	19350 <btrfs_check_leaf@@Base+0x338>
   1b51a:	cmp	r0, #0
   1b51c:	bge.n	1b526 <btrfs_del_items@@Base+0x186>
   1b51e:	cmn.w	r0, #28
   1b522:	it	ne
   1b524:	movne	r4, r0
   1b526:	ldr.w	r3, [r5, #192]	; 0xc0
   1b52a:	mov	r0, r5
   1b52c:	cbnz	r3, 1b566 <btrfs_del_items@@Base+0x1c6>
   1b52e:	bl	1d4b4 <clean_tree_block@@Base>
   1b532:	mov	r3, r5
   1b534:	mov	r2, r6
   1b536:	mov	r1, r7
   1b538:	mov	r0, sl
   1b53a:	str.w	r8, [r6, #36]	; 0x24
   1b53e:	bl	1b308 <btrfs_insert_item@@Base+0x98>
   1b542:	ldr	r1, [pc, #68]	; (1b588 <btrfs_del_items@@Base+0x1e8>)
   1b544:	movw	r2, #2909	; 0xb5d
   1b548:	add	r1, pc
   1b54a:	add.w	r1, r1, #464	; 0x1d0
   1b54e:	mov	r4, r0
   1b550:	mov	r3, r0
   1b552:	ldr	r0, [pc, #56]	; (1b58c <btrfs_del_items@@Base+0x1ec>)
   1b554:	add	r0, pc
   1b556:	bl	179bc <rb_free_nodes@@Base+0x116>
   1b55a:	mov	r0, r5
   1b55c:	bl	16bc8 <free_extent_buffer@@Base>
   1b560:	b.n	1b490 <btrfs_del_items@@Base+0xf0>
   1b562:	movs	r4, #0
   1b564:	b.n	1b500 <btrfs_del_items@@Base+0x160>
   1b566:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1b56a:	b.n	1b55a <btrfs_del_items@@Base+0x1ba>
   1b56c:	mov	r0, r5
   1b56e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1b572:	b.n	1b458 <btrfs_del_items@@Base+0xb8>
   1b574:	mov	r0, r4
   1b576:	add	sp, #52	; 0x34
   1b578:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b57c:	ldr	r1, [sp, #872]	; 0x368
   1b57e:	movs	r4, r0
   1b580:	lsls	r4, r4, #8
   1b582:	movs	r0, r0
   1b584:	ldr	r0, [sp, #976]	; 0x3d0
   1b586:	movs	r4, r0
   1b588:	asrs	r0, r2, #8
   1b58a:	movs	r2, r0
   1b58c:	ldmia.w	r0, {r0}

0001b590 <btrfs_prev_leaf@@Base>:
   1b590:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1b594:	adds	r3, r1, #4
   1b596:	mov	r5, r1
   1b598:	movs	r6, #1
   1b59a:	mov	r9, r3
   1b59c:	ldr.w	r1, [r3], #4
   1b5a0:	cbz	r1, 1b5ac <btrfs_prev_leaf@@Base+0x1c>
   1b5a2:	ldr	r7, [r3, #28]
   1b5a4:	cbnz	r7, 1b5b0 <btrfs_prev_leaf@@Base+0x20>
   1b5a6:	adds	r6, #1
   1b5a8:	cmp	r6, #8
   1b5aa:	bne.n	1b59c <btrfs_prev_leaf@@Base+0xc>
   1b5ac:	movs	r0, #1
   1b5ae:	b.n	1b5d0 <btrfs_prev_leaf@@Base+0x40>
   1b5b0:	ldr.w	r8, [r0, #464]	; 0x1d0
   1b5b4:	subs	r7, #1
   1b5b6:	mov	r2, r7
   1b5b8:	mov	r0, r8
   1b5ba:	bl	18bb6 <read_node_slot@@Base>
   1b5be:	mov	r4, r0
   1b5c0:	bl	17954 <rb_free_nodes@@Base+0xae>
   1b5c4:	cbnz	r0, 1b5d4 <btrfs_prev_leaf@@Base+0x44>
   1b5c6:	cmn.w	r4, #4096	; 0x1000
   1b5ca:	bhi.n	1b610 <btrfs_prev_leaf@@Base+0x80>
   1b5cc:	mvn.w	r0, #4
   1b5d0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1b5d4:	add.w	r3, r6, #8
   1b5d8:	str.w	r7, [r5, r3, lsl #2]
   1b5dc:	add.w	r5, r5, r6, lsl #2
   1b5e0:	ldr.w	r0, [r5, #-4]
   1b5e4:	bl	16bc8 <free_extent_buffer@@Base>
   1b5e8:	ldr.w	r2, [r4, #192]	; 0xc0
   1b5ec:	cbz	r2, 1b5f0 <btrfs_prev_leaf@@Base+0x60>
   1b5ee:	subs	r2, #1
   1b5f0:	cmp	r5, r9
   1b5f2:	str.w	r4, [r5, #-4]
   1b5f6:	str	r2, [r5, #28]
   1b5f8:	beq.n	1b614 <btrfs_prev_leaf@@Base+0x84>
   1b5fa:	mov	r1, r4
   1b5fc:	mov	r0, r8
   1b5fe:	bl	18bb6 <read_node_slot@@Base>
   1b602:	subs	r5, #4
   1b604:	mov	r4, r0
   1b606:	bl	17954 <rb_free_nodes@@Base+0xae>
   1b60a:	cmp	r0, #0
   1b60c:	bne.n	1b5e0 <btrfs_prev_leaf@@Base+0x50>
   1b60e:	b.n	1b5c6 <btrfs_prev_leaf@@Base+0x36>
   1b610:	mov	r0, r4
   1b612:	b.n	1b5d0 <btrfs_prev_leaf@@Base+0x40>
   1b614:	movs	r0, #0
   1b616:	b.n	1b5d0 <btrfs_prev_leaf@@Base+0x40>

0001b618 <btrfs_next_sibling_tree_block@@Base>:
   1b618:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b61c:	mov	r5, r1
   1b61e:	ldrb.w	r3, [r1, #65]	; 0x41
   1b622:	mov	r7, r0
   1b624:	ldr	r1, [pc, #232]	; (1b710 <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1b626:	movw	r2, #2996	; 0xbb4
   1b62a:	cmp	r3, #6
   1b62c:	ldr	r0, [pc, #228]	; (1b714 <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1b62e:	add	r1, pc
   1b630:	add.w	r4, r3, #1
   1b634:	add.w	r1, r1, #480	; 0x1e0
   1b638:	add	r0, pc
   1b63a:	ite	ls
   1b63c:	movls	r3, #0
   1b63e:	movhi	r3, #1
   1b640:	bl	179bc <rb_free_nodes@@Base+0x116>
   1b644:	add.w	r2, r5, #32
   1b648:	ldr.w	r6, [r5, r4, lsl #2]
   1b64c:	cmp	r6, #0
   1b64e:	beq.n	1b706 <btrfs_next_sibling_tree_block@@Base+0xee>
   1b650:	ldr.w	r3, [r2, r4, lsl #2]
   1b654:	add.w	r8, r3, #1
   1b658:	ldr.w	r3, [r6, #192]	; 0xc0
   1b65c:	cmp	r8, r3
   1b65e:	bcc.n	1b6ce <btrfs_next_sibling_tree_block@@Base+0xb6>
   1b660:	adds	r4, #1
   1b662:	cmp	r4, #8
   1b664:	beq.n	1b706 <btrfs_next_sibling_tree_block@@Base+0xee>
   1b666:	cmp	r4, #7
   1b668:	ble.n	1b648 <btrfs_next_sibling_tree_block@@Base+0x30>
   1b66a:	movs	r6, #0
   1b66c:	add.w	r3, r4, #8
   1b670:	add.w	sl, r5, r4, lsl #2
   1b674:	mov.w	fp, #0
   1b678:	mov.w	r9, #0
   1b67c:	str.w	r8, [r5, r3, lsl #2]
   1b680:	mov.w	r8, #0
   1b684:	ldr.w	r0, [sl, #-4]
   1b688:	subs	r4, #1
   1b68a:	bl	16bc8 <free_extent_buffer@@Base>
   1b68e:	str.w	r6, [sl, #-4]
   1b692:	str.w	fp, [sl, #28]
   1b696:	ldrb.w	r3, [r5, #65]	; 0x41
   1b69a:	cmp	r3, r4
   1b69c:	beq.n	1b70a <btrfs_next_sibling_tree_block@@Base+0xf2>
   1b69e:	ldrsb.w	r3, [r5, #64]	; 0x40
   1b6a2:	cbz	r3, 1b6b4 <btrfs_next_sibling_tree_block@@Base+0x9c>
   1b6a4:	movs	r3, #0
   1b6a6:	mov	r2, r4
   1b6a8:	mov	r1, r5
   1b6aa:	mov	r0, r7
   1b6ac:	strd	r8, r9, [sp]
   1b6b0:	bl	18c30 <reada_for_search@@Base>
   1b6b4:	mov	r1, r6
   1b6b6:	movs	r2, #0
   1b6b8:	mov	r0, r7
   1b6ba:	sub.w	sl, sl, #4
   1b6be:	bl	18bb6 <read_node_slot@@Base>
   1b6c2:	mov	r6, r0
   1b6c4:	bl	17954 <rb_free_nodes@@Base+0xae>
   1b6c8:	cmp	r0, #0
   1b6ca:	bne.n	1b684 <btrfs_next_sibling_tree_block@@Base+0x6c>
   1b6cc:	b.n	1b6fc <btrfs_next_sibling_tree_block@@Base+0xe4>
   1b6ce:	ldrsb.w	r3, [r5, #64]	; 0x40
   1b6d2:	cbz	r3, 1b6e8 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1b6d4:	movs	r2, #0
   1b6d6:	movs	r3, #0
   1b6d8:	mov	r1, r5
   1b6da:	strd	r2, r3, [sp]
   1b6de:	mov	r0, r7
   1b6e0:	mov	r3, r8
   1b6e2:	mov	r2, r4
   1b6e4:	bl	18c30 <reada_for_search@@Base>
   1b6e8:	mov	r1, r6
   1b6ea:	mov	r2, r8
   1b6ec:	mov	r0, r7
   1b6ee:	bl	18bb6 <read_node_slot@@Base>
   1b6f2:	mov	r6, r0
   1b6f4:	bl	17954 <rb_free_nodes@@Base+0xae>
   1b6f8:	cmp	r0, #0
   1b6fa:	bne.n	1b66c <btrfs_next_sibling_tree_block@@Base+0x54>
   1b6fc:	mvn.w	r0, #4
   1b700:	add	sp, #12
   1b702:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b706:	movs	r0, #1
   1b708:	b.n	1b700 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1b70a:	movs	r0, #0
   1b70c:	b.n	1b700 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1b70e:	nop
   1b710:	asrs	r2, r5, #4
   1b712:	movs	r2, r0
   1b714:	asrs	r5, r6, #1
   1b716:	movs	r2, r0

0001b718 <btrfs_find_item@@Base>:
   1b718:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b71c:	mov	r8, r0
   1b71e:	ldr	r4, [pc, #200]	; (1b7e8 <btrfs_find_item@@Base+0xd0>)
   1b720:	sub	sp, #36	; 0x24
   1b722:	ldr	r0, [pc, #200]	; (1b7ec <btrfs_find_item@@Base+0xd4>)
   1b724:	mov	r6, r1
   1b726:	add	r4, pc
   1b728:	ldr	r7, [sp, #76]	; 0x4c
   1b72a:	ldr	r0, [r4, r0]
   1b72c:	ldr	r0, [r0, #0]
   1b72e:	str	r0, [sp, #28]
   1b730:	mov.w	r0, #0
   1b734:	strd	r2, r3, [sp, #8]
   1b738:	ldr	r3, [sp, #64]	; 0x40
   1b73a:	ldrb.w	r0, [sp, #72]	; 0x48
   1b73e:	str.w	r3, [sp, #17]
   1b742:	ldr	r3, [sp, #68]	; 0x44
   1b744:	strb.w	r0, [sp, #16]
   1b748:	str.w	r3, [sp, #21]
   1b74c:	cbnz	r1, 1b75c <btrfs_find_item@@Base+0x44>
   1b74e:	bl	17df8 <btrfs_alloc_path@@Base>
   1b752:	mov	r5, r0
   1b754:	cbnz	r0, 1b75e <btrfs_find_item@@Base+0x46>
   1b756:	mvn.w	r4, #11
   1b75a:	b.n	1b7c6 <btrfs_find_item@@Base+0xae>
   1b75c:	mov	r5, r1
   1b75e:	mov.w	r9, #0
   1b762:	add	r2, sp, #8
   1b764:	mov	r3, r5
   1b766:	mov	r1, r8
   1b768:	mov	r0, r9
   1b76a:	strd	r9, r9, [sp]
   1b76e:	bl	1a1e4 <btrfs_search_slot@@Base>
   1b772:	subs	r4, r0, #0
   1b774:	blt.n	1b7bc <btrfs_find_item@@Base+0xa4>
   1b776:	cbz	r7, 1b7bc <btrfs_find_item@@Base+0xa4>
   1b778:	ldr	r0, [r5, #0]
   1b77a:	cbz	r4, 1b79a <btrfs_find_item@@Base+0x82>
   1b77c:	ldr.w	r3, [r0, #192]	; 0xc0
   1b780:	ldr	r2, [r5, #32]
   1b782:	cmp	r2, r3
   1b784:	bcc.n	1b79a <btrfs_find_item@@Base+0x82>
   1b786:	strb.w	r9, [r5, #65]	; 0x41
   1b78a:	mov	r1, r5
   1b78c:	ldr.w	r0, [r8, #464]	; 0x1d0
   1b790:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   1b794:	mov	r4, r0
   1b796:	cbnz	r0, 1b7bc <btrfs_find_item@@Base+0xa4>
   1b798:	ldr	r0, [r5, #0]
   1b79a:	ldr	r2, [r5, #32]
   1b79c:	mov	r1, r7
   1b79e:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1b7a2:	ldrb	r2, [r7, #8]
   1b7a4:	ldrb.w	r3, [sp, #16]
   1b7a8:	cmp	r2, r3
   1b7aa:	bne.n	1b7da <btrfs_find_item@@Base+0xc2>
   1b7ac:	ldrd	r2, r3, [sp, #8]
   1b7b0:	ldr	r1, [r7, #4]
   1b7b2:	ldr	r0, [r7, #0]
   1b7b4:	cmp	r1, r3
   1b7b6:	ite	eq
   1b7b8:	cmpeq	r0, r2
   1b7ba:	movne	r4, #1
   1b7bc:	cmp	r5, r6
   1b7be:	beq.n	1b7c6 <btrfs_find_item@@Base+0xae>
   1b7c0:	mov	r0, r5
   1b7c2:	bl	17e26 <btrfs_free_path@@Base>
   1b7c6:	ldr	r2, [pc, #40]	; (1b7f0 <btrfs_find_item@@Base+0xd8>)
   1b7c8:	ldr	r3, [pc, #32]	; (1b7ec <btrfs_find_item@@Base+0xd4>)
   1b7ca:	add	r2, pc
   1b7cc:	ldr	r3, [r2, r3]
   1b7ce:	ldr	r2, [r3, #0]
   1b7d0:	ldr	r3, [sp, #28]
   1b7d2:	eors	r2, r3
   1b7d4:	beq.n	1b7de <btrfs_find_item@@Base+0xc6>
   1b7d6:	blx	86b8 <__stack_chk_fail@plt>
   1b7da:	movs	r4, #1
   1b7dc:	b.n	1b7bc <btrfs_find_item@@Base+0xa4>
   1b7de:	mov	r0, r4
   1b7e0:	add	sp, #36	; 0x24
   1b7e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b7e6:	nop
   1b7e8:	str	r6, [sp, #392]	; 0x188
   1b7ea:	movs	r4, r0
   1b7ec:	lsls	r4, r4, #8
   1b7ee:	movs	r0, r0
   1b7f0:	str	r5, [sp, #760]	; 0x2f8
   1b7f2:	movs	r4, r0

0001b7f4 <btrfs_search_slot_for_read@@Base>:
   1b7f4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1b7f8:	mov	r5, r0
   1b7fa:	ldr.w	r8, [sp, #40]	; 0x28
   1b7fe:	mov	r6, r1
   1b800:	mov	r4, r2
   1b802:	mov	r9, r3
   1b804:	movs	r7, #0
   1b806:	mov	r3, r4
   1b808:	mov	r2, r6
   1b80a:	mov	r1, r5
   1b80c:	movs	r0, #0
   1b80e:	strd	r7, r7, [sp]
   1b812:	bl	1a1e4 <btrfs_search_slot@@Base>
   1b816:	cmp	r0, #0
   1b818:	ble.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>
   1b81a:	ldr	r3, [r4, #32]
   1b81c:	cmp.w	r9, #0
   1b820:	beq.n	1b860 <btrfs_search_slot_for_read@@Base+0x6c>
   1b822:	ldr	r2, [r4, #0]
   1b824:	ldr.w	r2, [r2, #192]	; 0xc0
   1b828:	cmp	r3, r2
   1b82a:	bcs.n	1b834 <btrfs_search_slot_for_read@@Base+0x40>
   1b82c:	movs	r0, #0
   1b82e:	add	sp, #12
   1b830:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b834:	strb.w	r7, [r4, #65]	; 0x41
   1b838:	mov	r1, r4
   1b83a:	ldr.w	r0, [r5, #464]	; 0x1d0
   1b83e:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   1b842:	cmp	r0, #0
   1b844:	ble.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>
   1b846:	cmp.w	r8, #0
   1b84a:	bne.n	1b850 <btrfs_search_slot_for_read@@Base+0x5c>
   1b84c:	movs	r0, #1
   1b84e:	b.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>
   1b850:	mov	r0, r4
   1b852:	mov.w	r9, #0
   1b856:	bl	17e00 <btrfs_release_path@@Base>
   1b85a:	mov.w	r8, #0
   1b85e:	b.n	1b806 <btrfs_search_slot_for_read@@Base+0x12>
   1b860:	cbnz	r3, 1b894 <btrfs_search_slot_for_read@@Base+0xa0>
   1b862:	mov	r1, r4
   1b864:	mov	r0, r5
   1b866:	bl	1b590 <btrfs_prev_leaf@@Base>
   1b86a:	cmp	r0, #0
   1b86c:	blt.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>
   1b86e:	bne.n	1b882 <btrfs_search_slot_for_read@@Base+0x8e>
   1b870:	ldr	r2, [r4, #0]
   1b872:	ldr	r3, [r4, #32]
   1b874:	ldr.w	r2, [r2, #192]	; 0xc0
   1b878:	cmp	r3, r2
   1b87a:	bne.n	1b82c <btrfs_search_slot_for_read@@Base+0x38>
   1b87c:	subs	r3, #1
   1b87e:	str	r3, [r4, #32]
   1b880:	b.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>
   1b882:	cmp.w	r8, #0
   1b886:	beq.n	1b84c <btrfs_search_slot_for_read@@Base+0x58>
   1b888:	mov	r0, r4
   1b88a:	mov.w	r9, #1
   1b88e:	bl	17e00 <btrfs_release_path@@Base>
   1b892:	b.n	1b85a <btrfs_search_slot_for_read@@Base+0x66>
   1b894:	subs	r3, #1
   1b896:	mov	r0, r9
   1b898:	str	r3, [r4, #32]
   1b89a:	b.n	1b82e <btrfs_search_slot_for_read@@Base+0x3a>

0001b89c <btrfs_previous_item@@Base>:
   1b89c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b8a0:	mov	r6, r2
   1b8a2:	ldr	r2, [pc, #144]	; (1b934 <btrfs_previous_item@@Base+0x98>)
   1b8a4:	mov	r7, r3
   1b8a6:	ldr	r3, [pc, #144]	; (1b938 <btrfs_previous_item@@Base+0x9c>)
   1b8a8:	sub	sp, #28
   1b8aa:	add	r2, pc
   1b8ac:	mov	r5, r0
   1b8ae:	ldr.w	r8, [sp, #56]	; 0x38
   1b8b2:	mov	r4, r1
   1b8b4:	ldr	r3, [r2, r3]
   1b8b6:	mov	r9, sp
   1b8b8:	ldr	r3, [r3, #0]
   1b8ba:	str	r3, [sp, #20]
   1b8bc:	mov.w	r3, #0
   1b8c0:	ldr	r3, [r4, #32]
   1b8c2:	cbnz	r3, 1b8e2 <btrfs_previous_item@@Base+0x46>
   1b8c4:	mov	r1, r4
   1b8c6:	mov	r0, r5
   1b8c8:	bl	1b590 <btrfs_prev_leaf@@Base>
   1b8cc:	cbz	r0, 1b8e6 <btrfs_previous_item@@Base+0x4a>
   1b8ce:	ldr	r2, [pc, #108]	; (1b93c <btrfs_previous_item@@Base+0xa0>)
   1b8d0:	ldr	r3, [pc, #100]	; (1b938 <btrfs_previous_item@@Base+0x9c>)
   1b8d2:	add	r2, pc
   1b8d4:	ldr	r3, [r2, r3]
   1b8d6:	ldr	r2, [r3, #0]
   1b8d8:	ldr	r3, [sp, #20]
   1b8da:	eors	r2, r3
   1b8dc:	beq.n	1b92c <btrfs_previous_item@@Base+0x90>
   1b8de:	blx	86b8 <__stack_chk_fail@plt>
   1b8e2:	subs	r3, #1
   1b8e4:	str	r3, [r4, #32]
   1b8e6:	ldr	r0, [r4, #0]
   1b8e8:	ldr.w	r2, [r0, #192]	; 0xc0
   1b8ec:	cbnz	r2, 1b8f2 <btrfs_previous_item@@Base+0x56>
   1b8ee:	movs	r0, #1
   1b8f0:	b.n	1b8ce <btrfs_previous_item@@Base+0x32>
   1b8f2:	ldr	r3, [r4, #32]
   1b8f4:	mov	r1, r9
   1b8f6:	cmp	r3, r2
   1b8f8:	itt	eq
   1b8fa:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b8fe:	streq	r3, [r4, #32]
   1b900:	ldr	r2, [r4, #32]
   1b902:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1b906:	ldrd	r0, r1, [sp]
   1b90a:	cmp	r1, r7
   1b90c:	it	eq
   1b90e:	cmpeq	r0, r6
   1b910:	bcc.n	1b8ee <btrfs_previous_item@@Base+0x52>
   1b912:	ldrb.w	r3, [sp, #8]
   1b916:	cmp	r3, r8
   1b918:	beq.n	1b928 <btrfs_previous_item@@Base+0x8c>
   1b91a:	cmp	r1, r7
   1b91c:	it	eq
   1b91e:	cmpeq	r0, r6
   1b920:	bne.n	1b8c0 <btrfs_previous_item@@Base+0x24>
   1b922:	cmp	r3, r8
   1b924:	bge.n	1b8c0 <btrfs_previous_item@@Base+0x24>
   1b926:	b.n	1b8ee <btrfs_previous_item@@Base+0x52>
   1b928:	movs	r0, #0
   1b92a:	b.n	1b8ce <btrfs_previous_item@@Base+0x32>
   1b92c:	add	sp, #28
   1b92e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b932:	nop
   1b934:	str	r4, [sp, #888]	; 0x378
   1b936:	movs	r4, r0
   1b938:	lsls	r4, r4, #8
   1b93a:	movs	r0, r0
   1b93c:	str	r4, [sp, #728]	; 0x2d8
   1b93e:	movs	r4, r0

0001b940 <btrfs_previous_extent_item@@Base>:
   1b940:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b944:	mov	r6, r2
   1b946:	ldr	r2, [pc, #144]	; (1b9d8 <btrfs_previous_extent_item@@Base+0x98>)
   1b948:	mov	r7, r3
   1b94a:	ldr	r3, [pc, #144]	; (1b9dc <btrfs_previous_extent_item@@Base+0x9c>)
   1b94c:	sub	sp, #24
   1b94e:	add	r2, pc
   1b950:	mov	r5, r0
   1b952:	mov	r4, r1
   1b954:	mov	r8, sp
   1b956:	ldr	r3, [r2, r3]
   1b958:	ldr	r3, [r3, #0]
   1b95a:	str	r3, [sp, #20]
   1b95c:	mov.w	r3, #0
   1b960:	ldr	r3, [r4, #32]
   1b962:	cbnz	r3, 1b982 <btrfs_previous_extent_item@@Base+0x42>
   1b964:	mov	r1, r4
   1b966:	mov	r0, r5
   1b968:	bl	1b590 <btrfs_prev_leaf@@Base>
   1b96c:	cbz	r0, 1b986 <btrfs_previous_extent_item@@Base+0x46>
   1b96e:	ldr	r2, [pc, #112]	; (1b9e0 <btrfs_previous_extent_item@@Base+0xa0>)
   1b970:	ldr	r3, [pc, #104]	; (1b9dc <btrfs_previous_extent_item@@Base+0x9c>)
   1b972:	add	r2, pc
   1b974:	ldr	r3, [r2, r3]
   1b976:	ldr	r2, [r3, #0]
   1b978:	ldr	r3, [sp, #20]
   1b97a:	eors	r2, r3
   1b97c:	beq.n	1b9d2 <btrfs_previous_extent_item@@Base+0x92>
   1b97e:	blx	86b8 <__stack_chk_fail@plt>
   1b982:	subs	r3, #1
   1b984:	str	r3, [r4, #32]
   1b986:	ldr	r0, [r4, #0]
   1b988:	ldr.w	r2, [r0, #192]	; 0xc0
   1b98c:	cbnz	r2, 1b992 <btrfs_previous_extent_item@@Base+0x52>
   1b98e:	movs	r0, #1
   1b990:	b.n	1b96e <btrfs_previous_extent_item@@Base+0x2e>
   1b992:	ldr	r3, [r4, #32]
   1b994:	mov	r1, r8
   1b996:	cmp	r3, r2
   1b998:	itt	eq
   1b99a:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b99e:	streq	r3, [r4, #32]
   1b9a0:	ldr	r2, [r4, #32]
   1b9a2:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1b9a6:	ldrd	r0, r1, [sp]
   1b9aa:	cmp	r1, r7
   1b9ac:	it	eq
   1b9ae:	cmpeq	r0, r6
   1b9b0:	bcc.n	1b98e <btrfs_previous_extent_item@@Base+0x4e>
   1b9b2:	ldrb.w	r2, [sp, #8]
   1b9b6:	add.w	r3, r2, #88	; 0x58
   1b9ba:	uxtb	r3, r3
   1b9bc:	cmp	r3, #1
   1b9be:	bls.n	1b9ce <btrfs_previous_extent_item@@Base+0x8e>
   1b9c0:	cmp	r1, r7
   1b9c2:	it	eq
   1b9c4:	cmpeq	r0, r6
   1b9c6:	bne.n	1b960 <btrfs_previous_extent_item@@Base+0x20>
   1b9c8:	cmp	r2, #167	; 0xa7
   1b9ca:	bhi.n	1b960 <btrfs_previous_extent_item@@Base+0x20>
   1b9cc:	b.n	1b98e <btrfs_previous_extent_item@@Base+0x4e>
   1b9ce:	movs	r0, #0
   1b9d0:	b.n	1b96e <btrfs_previous_extent_item@@Base+0x2e>
   1b9d2:	add	sp, #24
   1b9d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b9d8:	str	r4, [sp, #232]	; 0xe8
   1b9da:	movs	r4, r0
   1b9dc:	lsls	r4, r4, #8
   1b9de:	movs	r0, r0
   1b9e0:	str	r4, [sp, #88]	; 0x58
   1b9e2:	movs	r4, r0

0001b9e4 <btrfs_next_extent_item@@Base>:
   1b9e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b9e8:	mov	r6, r2
   1b9ea:	ldr	r2, [pc, #132]	; (1ba70 <btrfs_next_extent_item@@Base+0x8c>)
   1b9ec:	mov	r7, r3
   1b9ee:	ldr	r3, [pc, #132]	; (1ba74 <btrfs_next_extent_item@@Base+0x90>)
   1b9f0:	sub	sp, #28
   1b9f2:	add	r2, pc
   1b9f4:	mov	r5, r0
   1b9f6:	mov	r4, r1
   1b9f8:	mov.w	r8, #0
   1b9fc:	ldr	r3, [r2, r3]
   1b9fe:	mov	r9, sp
   1ba00:	ldr	r3, [r3, #0]
   1ba02:	str	r3, [sp, #20]
   1ba04:	mov.w	r3, #0
   1ba08:	ldr	r2, [r4, #0]
   1ba0a:	ldr	r3, [r4, #32]
   1ba0c:	adds	r3, #1
   1ba0e:	str	r3, [r4, #32]
   1ba10:	ldr.w	r2, [r2, #192]	; 0xc0
   1ba14:	cmp	r3, r2
   1ba16:	bcs.n	1ba32 <btrfs_next_extent_item@@Base+0x4e>
   1ba18:	ldr	r2, [r4, #32]
   1ba1a:	mov	r1, r9
   1ba1c:	ldr	r0, [r4, #0]
   1ba1e:	bl	17d58 <rb_free_nodes@@Base+0x4b2>
   1ba22:	ldrd	r2, r3, [sp]
   1ba26:	cmp	r7, r3
   1ba28:	it	eq
   1ba2a:	cmpeq	r6, r2
   1ba2c:	bcs.n	1ba58 <btrfs_next_extent_item@@Base+0x74>
   1ba2e:	movs	r0, #1
   1ba30:	b.n	1ba44 <btrfs_next_extent_item@@Base+0x60>
   1ba32:	strb.w	r8, [r4, #65]	; 0x41
   1ba36:	mov	r1, r4
   1ba38:	ldr.w	r0, [r5, #464]	; 0x1d0
   1ba3c:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   1ba40:	cmp	r0, #0
   1ba42:	beq.n	1ba18 <btrfs_next_extent_item@@Base+0x34>
   1ba44:	ldr	r2, [pc, #48]	; (1ba78 <btrfs_next_extent_item@@Base+0x94>)
   1ba46:	ldr	r3, [pc, #44]	; (1ba74 <btrfs_next_extent_item@@Base+0x90>)
   1ba48:	add	r2, pc
   1ba4a:	ldr	r3, [r2, r3]
   1ba4c:	ldr	r2, [r3, #0]
   1ba4e:	ldr	r3, [sp, #20]
   1ba50:	eors	r2, r3
   1ba52:	beq.n	1ba68 <btrfs_next_extent_item@@Base+0x84>
   1ba54:	blx	86b8 <__stack_chk_fail@plt>
   1ba58:	ldrb.w	r3, [sp, #8]
   1ba5c:	adds	r3, #88	; 0x58
   1ba5e:	uxtb	r3, r3
   1ba60:	cmp	r3, #1
   1ba62:	bhi.n	1ba08 <btrfs_next_extent_item@@Base+0x24>
   1ba64:	movs	r0, #0
   1ba66:	b.n	1ba44 <btrfs_next_extent_item@@Base+0x60>
   1ba68:	add	sp, #28
   1ba6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ba6e:	nop
   1ba70:	str	r3, [sp, #600]	; 0x258
   1ba72:	movs	r4, r0
   1ba74:	lsls	r4, r4, #8
   1ba76:	movs	r0, r0
   1ba78:	str	r3, [sp, #256]	; 0x100
   1ba7a:	movs	r4, r0

0001ba7c <btrfs_uuid_tree_add@@Base>:
   1ba7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba80:	mov	sl, r2
   1ba82:	ldr	r2, [pc, #408]	; (1bc1c <btrfs_uuid_tree_add@@Base+0x1a0>)
   1ba84:	sub	sp, #60	; 0x3c
   1ba86:	ldr	r3, [pc, #408]	; (1bc20 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1ba88:	mov	r8, r0
   1ba8a:	add	r2, pc
   1ba8c:	mov	r9, r1
   1ba8e:	ldr	r3, [r2, r3]
   1ba90:	ldr	r3, [r3, #0]
   1ba92:	str	r3, [sp, #52]	; 0x34
   1ba94:	mov.w	r3, #0
   1ba98:	ldr	r3, [r0, #0]
   1ba9a:	ldr	r7, [r3, #52]	; 0x34
   1ba9c:	cbnz	r7, 1bac8 <btrfs_uuid_tree_add@@Base+0x4c>
   1ba9e:	ldr	r1, [pc, #388]	; (1bc24 <btrfs_uuid_tree_add@@Base+0x1a8>)
   1baa0:	mvn.w	r4, #21
   1baa4:	ldr	r0, [pc, #384]	; (1bc28 <btrfs_uuid_tree_add@@Base+0x1ac>)
   1baa6:	add	r1, pc
   1baa8:	add.w	r1, r1, #510	; 0x1fe
   1baac:	add	r0, pc
   1baae:	bl	173a8 <__btrfs_warning@@Base>
   1bab2:	ldr	r2, [pc, #376]	; (1bc2c <btrfs_uuid_tree_add@@Base+0x1b0>)
   1bab4:	ldr	r3, [pc, #360]	; (1bc20 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1bab6:	add	r2, pc
   1bab8:	ldr	r3, [r2, r3]
   1baba:	ldr	r2, [r3, #0]
   1babc:	ldr	r3, [sp, #52]	; 0x34
   1babe:	eors	r2, r3
   1bac0:	beq.w	1bc14 <btrfs_uuid_tree_add@@Base+0x198>
   1bac4:	blx	86b8 <__stack_chk_fail@plt>
   1bac8:	bl	17df8 <btrfs_alloc_path@@Base>
   1bacc:	mov	r5, r0
   1bace:	cmp	r0, #0
   1bad0:	beq.n	1bb4e <btrfs_uuid_tree_add@@Base+0xd2>
   1bad2:	add	r2, sp, #32
   1bad4:	mov	r0, r9
   1bad6:	str	r2, [sp, #16]
   1bad8:	mov	r1, r2
   1bada:	bl	17598 <btrfs_uuid_to_key@@Base>
   1bade:	movs	r0, #0
   1bae0:	ldr	r2, [sp, #16]
   1bae2:	mov	r3, r5
   1bae4:	mov	r1, r7
   1bae6:	strd	r0, r0, [sp]
   1baea:	strb.w	sl, [sp, #40]	; 0x28
   1baee:	bl	1a1e4 <btrfs_search_slot@@Base>
   1baf2:	subs	r4, r0, #0
   1baf4:	blt.n	1bb52 <btrfs_uuid_tree_add@@Base+0xd6>
   1baf6:	bne.n	1bb48 <btrfs_uuid_tree_add@@Base+0xcc>
   1baf8:	ldr	r0, [r5, #0]
   1bafa:	movs	r2, #25
   1bafc:	ldr	r3, [r5, #32]
   1bafe:	mla	r3, r2, r3, r0
   1bb02:	ldr.w	r6, [r3, #218]	; 0xda
   1bb06:	ldr.w	fp, [r3, #214]	; 0xd6
   1bb0a:	lsls	r2, r6, #29
   1bb0c:	add.w	fp, fp, #101	; 0x65
   1bb10:	bne.n	1bb3e <btrfs_uuid_tree_add@@Base+0xc2>
   1bb12:	add	r1, sp, #24
   1bb14:	cbz	r6, 1bb48 <btrfs_uuid_tree_add@@Base+0xcc>
   1bb16:	movs	r3, #8
   1bb18:	mov	r2, fp
   1bb1a:	strd	r0, r1, [sp, #16]
   1bb1e:	bl	172c2 <read_extent_buffer@@Base>
   1bb22:	ldrd	r2, r3, [sp, #24]
   1bb26:	ldrd	r0, r1, [sp, #96]	; 0x60
   1bb2a:	cmp	r1, r3
   1bb2c:	it	eq
   1bb2e:	cmpeq	r0, r2
   1bb30:	beq.n	1bb52 <btrfs_uuid_tree_add@@Base+0xd6>
   1bb32:	ldrd	r0, r1, [sp, #16]
   1bb36:	add.w	fp, fp, #8
   1bb3a:	subs	r6, #8
   1bb3c:	b.n	1bb14 <btrfs_uuid_tree_add@@Base+0x98>
   1bb3e:	ldr	r0, [pc, #240]	; (1bc30 <btrfs_uuid_tree_add@@Base+0x1b4>)
   1bb40:	mov	r1, r6
   1bb42:	add	r0, pc
   1bb44:	bl	173a8 <__btrfs_warning@@Base>
   1bb48:	mvn.w	r4, #1
   1bb4c:	b.n	1bb52 <btrfs_uuid_tree_add@@Base+0xd6>
   1bb4e:	mvn.w	r4, #11
   1bb52:	mov	r0, r5
   1bb54:	bl	17e26 <btrfs_free_path@@Base>
   1bb58:	adds	r3, r4, #2
   1bb5a:	bne.n	1bab2 <btrfs_uuid_tree_add@@Base+0x36>
   1bb5c:	add	r3, sp, #32
   1bb5e:	mov	r0, r9
   1bb60:	str	r3, [sp, #16]
   1bb62:	mov	r1, r3
   1bb64:	strb.w	sl, [sp, #40]	; 0x28
   1bb68:	bl	17598 <btrfs_uuid_to_key@@Base>
   1bb6c:	bl	17df8 <btrfs_alloc_path@@Base>
   1bb70:	mov	r5, r0
   1bb72:	cmp	r0, #0
   1bb74:	beq.n	1bc0e <btrfs_uuid_tree_add@@Base+0x192>
   1bb76:	movs	r2, #1
   1bb78:	ldr	r3, [sp, #16]
   1bb7a:	str	r2, [sp, #4]
   1bb7c:	add	r6, sp, #24
   1bb7e:	mov	r2, r0
   1bb80:	mov	r1, r7
   1bb82:	mov	r0, r8
   1bb84:	str	r6, [sp, #0]
   1bb86:	mov.w	r9, #8
   1bb8a:	str.w	r9, [sp, #24]
   1bb8e:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   1bb92:	subs	r4, r0, #0
   1bb94:	blt.n	1bbc2 <btrfs_uuid_tree_add@@Base+0x146>
   1bb96:	ldr	r4, [r5, #0]
   1bb98:	movs	r2, #25
   1bb9a:	ldr	r3, [r5, #32]
   1bb9c:	mla	r3, r2, r3, r4
   1bba0:	ldr.w	r2, [r3, #214]	; 0xd6
   1bba4:	adds	r2, #101	; 0x65
   1bba6:	ldrd	r0, r1, [sp, #96]	; 0x60
   1bbaa:	movs	r3, #8
   1bbac:	strd	r0, r1, [sp, #24]
   1bbb0:	mov	r0, r4
   1bbb2:	mov	r1, r6
   1bbb4:	bl	172d8 <write_extent_buffer@@Base>
   1bbb8:	mov	r0, r4
   1bbba:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1bbbe:	movs	r4, #0
   1bbc0:	b.n	1bc06 <btrfs_uuid_tree_add@@Base+0x18a>
   1bbc2:	cmn.w	r4, #17
   1bbc6:	bne.n	1bbea <btrfs_uuid_tree_add@@Base+0x16e>
   1bbc8:	mov	r2, r9
   1bbca:	mov	r1, r5
   1bbcc:	mov	r0, r7
   1bbce:	bl	19fd8 <btrfs_extend_item@@Base>
   1bbd2:	ldr	r4, [r5, #0]
   1bbd4:	ldr	r3, [r5, #32]
   1bbd6:	movs	r2, #25
   1bbd8:	mla	r3, r2, r3, r4
   1bbdc:	ldr.w	r2, [r3, #218]	; 0xda
   1bbe0:	ldr.w	r3, [r3, #214]	; 0xd6
   1bbe4:	add	r2, r3
   1bbe6:	adds	r2, #93	; 0x5d
   1bbe8:	b.n	1bba6 <btrfs_uuid_tree_add@@Base+0x12a>
   1bbea:	ldr.w	r2, [sp, #41]	; 0x29
   1bbee:	ldr.w	r3, [sp, #45]	; 0x2d
   1bbf2:	ldr	r0, [pc, #64]	; (1bc34 <btrfs_uuid_tree_add@@Base+0x1b8>)
   1bbf4:	strd	sl, r4, [sp, #8]
   1bbf8:	strd	r2, r3, [sp]
   1bbfc:	add	r0, pc
   1bbfe:	ldrd	r2, r3, [sp, #32]
   1bc02:	bl	173a8 <__btrfs_warning@@Base>
   1bc06:	mov	r0, r5
   1bc08:	bl	17e26 <btrfs_free_path@@Base>
   1bc0c:	b.n	1bab2 <btrfs_uuid_tree_add@@Base+0x36>
   1bc0e:	mvn.w	r4, #11
   1bc12:	b.n	1bc06 <btrfs_uuid_tree_add@@Base+0x18a>
   1bc14:	mov	r0, r4
   1bc16:	add	sp, #60	; 0x3c
   1bc18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc1c:	str	r2, [sp, #1016]	; 0x3f8
   1bc1e:	movs	r4, r0
   1bc20:	lsls	r4, r4, #8
   1bc22:	movs	r0, r0
   1bc24:	lsrs	r2, r6, #18
   1bc26:	movs	r2, r0
   1bc28:	lsrs	r3, r5, #16
   1bc2a:	movs	r2, r0
   1bc2c:	str	r2, [sp, #840]	; 0x348
   1bc2e:	movs	r4, r0
   1bc30:	lsrs	r6, r6, #14
   1bc32:	movs	r2, r0
   1bc34:	lsrs	r5, r3, #12
   1bc36:	movs	r2, r0
   1bc38:	push	{r4, r5, lr}
   1bc3a:	ldrd	r4, r5, [r1]
   1bc3e:	ldrd	r2, r3, [r0, #-56]	; 0x38
   1bc42:	cmp	r3, r5
   1bc44:	it	eq
   1bc46:	cmpeq	r2, r4
   1bc48:	bcc.n	1bc5a <btrfs_uuid_tree_add@@Base+0x1de>
   1bc4a:	cmp	r5, r3
   1bc4c:	it	eq
   1bc4e:	cmpeq	r4, r2
   1bc50:	ite	cc
   1bc52:	movcc.w	r0, #4294967295	; 0xffffffff
   1bc56:	movcs	r0, #0
   1bc58:	pop	{r4, r5, pc}
   1bc5a:	movs	r0, #1
   1bc5c:	b.n	1bc58 <btrfs_uuid_tree_add@@Base+0x1dc>

0001bc5e <btrfs_fs_roots_compare_roots@@Base>:
   1bc5e:	subs	r1, #56	; 0x38
   1bc60:	b.n	1bc38 <btrfs_uuid_tree_add@@Base+0x1bc>
   1bc62:	movs	r2, #0
   1bc64:	addw	r3, r0, #2859	; 0xb2b
   1bc68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1bc6c:	mov.w	r8, #0
   1bc70:	ldr	r6, [r0, #72]	; 0x48
   1bc72:	mov.w	r9, #0
   1bc76:	ldr	r7, [r0, #76]	; 0x4c
   1bc78:	mov	r0, r2
   1bc7a:	ldr	r5, [r3, #12]
   1bc7c:	ldr	r4, [r3, #8]
   1bc7e:	cmp	r5, r7
   1bc80:	it	eq
   1bc82:	cmpeq	r4, r6
   1bc84:	beq.n	1bc94 <btrfs_fs_roots_compare_roots@@Base+0x36>
   1bc86:	cmp	r9, r5
   1bc88:	it	eq
   1bc8a:	cmpeq	r8, r4
   1bc8c:	ittt	cc
   1bc8e:	movcc	r0, r2
   1bc90:	movcc	r8, r4
   1bc92:	movcc	r9, r5
   1bc94:	adds	r2, #1
   1bc96:	adds	r3, #168	; 0xa8
   1bc98:	cmp	r2, #4
   1bc9a:	bne.n	1bc7a <btrfs_fs_roots_compare_roots@@Base+0x1c>
   1bc9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bca0:	ldr	r2, [pc, #60]	; (1bce0 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   1bca2:	movs	r1, #16
   1bca4:	ldr	r3, [pc, #60]	; (1bce4 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1bca6:	push	{r4, lr}
   1bca8:	add	r2, pc
   1bcaa:	sub	sp, #72	; 0x48
   1bcac:	add	r4, sp, #4
   1bcae:	ldr	r3, [r2, r3]
   1bcb0:	mov	r0, r4
   1bcb2:	ldr	r3, [r3, #0]
   1bcb4:	str	r3, [sp, #68]	; 0x44
   1bcb6:	mov.w	r3, #0
   1bcba:	blx	886c <backtrace@plt>
   1bcbe:	movs	r2, #2
   1bcc0:	mov	r1, r0
   1bcc2:	mov	r0, r4
   1bcc4:	blx	8b7c <backtrace_symbols_fd@plt>
   1bcc8:	ldr	r2, [pc, #28]	; (1bce8 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   1bcca:	ldr	r3, [pc, #24]	; (1bce4 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1bccc:	add	r2, pc
   1bcce:	ldr	r3, [r2, r3]
   1bcd0:	ldr	r2, [r3, #0]
   1bcd2:	ldr	r3, [sp, #68]	; 0x44
   1bcd4:	eors	r2, r3
   1bcd6:	beq.n	1bcdc <btrfs_fs_roots_compare_roots@@Base+0x7e>
   1bcd8:	blx	86b8 <__stack_chk_fail@plt>
   1bcdc:	add	sp, #72	; 0x48
   1bcde:	pop	{r4, pc}
   1bce0:	str	r0, [sp, #896]	; 0x380
   1bce2:	movs	r4, r0
   1bce4:	lsls	r4, r4, #8
   1bce6:	movs	r0, r0
   1bce8:	str	r0, [sp, #752]	; 0x2f0
   1bcea:	movs	r4, r0
   1bcec:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bcf0:	mov	r5, r0
   1bcf2:	ldr.w	sl, [r1, #144]	; 0x90
   1bcf6:	mov	r4, r1
   1bcf8:	ldr.w	fp, [r1, #148]	; 0x94
   1bcfc:	ldr.w	r8, [r0, #352]	; 0x160
   1bd00:	ldr.w	r2, [r0, #384]	; 0x180
   1bd04:	ldrd	r0, r1, [r1, #40]	; 0x28
   1bd08:	cmp	r1, fp
   1bd0a:	it	eq
   1bd0c:	cmpeq	r0, sl
   1bd0e:	bne.n	1bd98 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   1bd10:	ldrb.w	r1, [r4, #196]	; 0xc4
   1bd14:	cmp	r1, #7
   1bd16:	bhi.n	1bd9e <btrfs_fs_roots_compare_roots@@Base+0x140>
   1bd18:	ldr.w	r0, [r4, #192]	; 0xc0
   1bd1c:	subs	r2, #101	; 0x65
   1bd1e:	cbnz	r1, 1bd36 <btrfs_fs_roots_compare_roots@@Base+0xd8>
   1bd20:	ldr	r3, [pc, #136]	; (1bdac <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   1bd22:	umull	r2, r3, r2, r3
   1bd26:	lsrs	r3, r3, #3
   1bd28:	cmp	r0, r3
   1bd2a:	bhi.n	1bd30 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   1bd2c:	cbnz	r0, 1bd92 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1bd2e:	cbz	r1, 1bd92 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1bd30:	mvn.w	r0, #3
   1bd34:	b.n	1bd86 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bd36:	ldr	r3, [pc, #120]	; (1bdb0 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   1bd38:	b.n	1bd22 <btrfs_fs_roots_compare_roots@@Base+0xc4>
   1bd3a:	ldr.w	r3, [r5, #352]	; 0x160
   1bd3e:	cmp	r3, r8
   1bd40:	bne.n	1bd8a <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1bd42:	ldr.w	r3, [r5, #308]	; 0x134
   1bd46:	mov	r7, r9
   1bd48:	ldr.w	r3, [r3, #188]	; 0xbc
   1bd4c:	and.w	r6, r3, #1024	; 0x400
   1bd50:	orrs.w	r3, r6, r7
   1bd54:	beq.n	1bd8a <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1bd56:	movs	r3, #16
   1bd58:	add.w	r1, r8, r3
   1bd5c:	movs	r2, #32
   1bd5e:	mov	r0, r4
   1bd60:	bl	172b0 <memcmp_extent_buffer@@Base>
   1bd64:	ldrb.w	r3, [r5, #364]	; 0x16c
   1bd68:	ands.w	r3, r3, #64	; 0x40
   1bd6c:	clz	r0, r0
   1bd70:	mov.w	r0, r0, lsr #5
   1bd74:	bne.n	1bda4 <btrfs_fs_roots_compare_roots@@Base+0x146>
   1bd76:	cbnz	r0, 1bda8 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   1bd78:	ldr.w	r8, [r8, #92]	; 0x5c
   1bd7c:	cmp.w	r8, #0
   1bd80:	bne.n	1bd3a <btrfs_fs_roots_compare_roots@@Base+0xdc>
   1bd82:	mvn.w	r0, #1
   1bd86:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd8a:	movs	r3, #16
   1bd8c:	movs	r2, #32
   1bd8e:	mov	r1, r8
   1bd90:	b.n	1bd5e <btrfs_fs_roots_compare_roots@@Base+0x100>
   1bd92:	mov.w	r9, #0
   1bd96:	b.n	1bd7c <btrfs_fs_roots_compare_roots@@Base+0x11e>
   1bd98:	mov.w	r0, #4294967295	; 0xffffffff
   1bd9c:	b.n	1bd86 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bd9e:	mvn.w	r0, #2
   1bda2:	b.n	1bd86 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bda4:	movs	r0, #0
   1bda6:	b.n	1bd86 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bda8:	mov	r0, r3
   1bdaa:	b.n	1bd86 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bdac:	strh	r7, [r3, #40]	; 0x28
   1bdae:	str	r3, [r5, r7]
   1bdb0:	strh	r1, [r4, #30]
   1bdb2:	subs	r6, #15
   1bdb4:	b.w	85d8 <free@plt>
   1bdb8:	cbz	r0, 1bdca <btrfs_fs_roots_compare_roots@@Base+0x16c>
   1bdba:	cmn.w	r0, #4096	; 0x1000
   1bdbe:	bhi.n	1bdc8 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   1bdc0:	ldr	r0, [r0, #84]	; 0x54
   1bdc2:	ubfx	r0, r0, #2, #1
   1bdc6:	bx	lr
   1bdc8:	movs	r0, #0
   1bdca:	bx	lr
   1bdcc:	push	{r4, r5, r6, r7, lr}
   1bdce:	mov	r1, r3
   1bdd0:	ldr	r6, [pc, #100]	; (1be38 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   1bdd2:	sub	sp, #28
   1bdd4:	mov	r4, r0
   1bdd6:	mov	r0, r2
   1bdd8:	orrs.w	r3, r0, r1
   1bddc:	add	r6, pc
   1bdde:	ldr	r5, [sp, #48]	; 0x30
   1bde0:	beq.n	1be26 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1bde2:	ldr.w	r3, [r4, #180]	; 0xb4
   1bde6:	ldr.w	r2, [r4, #176]	; 0xb0
   1bdea:	cmp	r1, r3
   1bdec:	it	eq
   1bdee:	cmpeq	r0, r2
   1bdf0:	beq.n	1be26 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1bdf2:	ldr	r7, [pc, #72]	; (1be3c <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   1bdf4:	ldr	r6, [r6, r7]
   1bdf6:	strd	r2, r3, [sp, #16]
   1bdfa:	ldrd	r2, r3, [r4, #40]	; 0x28
   1bdfe:	strd	r0, r1, [sp, #8]
   1be02:	movs	r1, #1
   1be04:	strd	r2, r3, [sp]
   1be08:	ldr	r2, [pc, #52]	; (1be40 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   1be0a:	ldr	r0, [r6, #0]
   1be0c:	add	r2, pc
   1be0e:	blx	8a14 <__fprintf_chk@plt+0x4>
   1be12:	ldr	r3, [r4, #84]	; 0x54
   1be14:	cbz	r5, 1be2a <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   1be16:	ldr	r0, [pc, #44]	; (1be44 <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   1be18:	orr.w	r3, r3, #1024	; 0x400
   1be1c:	ldr	r1, [r6, #0]
   1be1e:	add	r0, pc
   1be20:	str	r3, [r4, #84]	; 0x54
   1be22:	blx	8b1c <fputs@plt+0x4>
   1be26:	movs	r0, #0
   1be28:	b.n	1be32 <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   1be2a:	movs	r0, #1
   1be2c:	bic.w	r3, r3, #4
   1be30:	str	r3, [r4, #84]	; 0x54
   1be32:	add	sp, #28
   1be34:	pop	{r4, r5, r6, r7, pc}
   1be36:	nop
   1be38:	ldrh	r4, [r5, #60]	; 0x3c
   1be3a:	movs	r4, r0
   1be3c:	lsls	r4, r6, #8
   1be3e:	movs	r0, r0
   1be40:	lsrs	r6, r3, #13
   1be42:	movs	r2, r0
   1be44:	lsrs	r1, r1, #14
   1be46:	movs	r2, r0
   1be48:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1be4c:	mov	r5, r2
   1be4e:	ldr	r2, [pc, #244]	; (1bf44 <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   1be50:	sub	sp, #128	; 0x80
   1be52:	ldr	r3, [pc, #244]	; (1bf48 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1be54:	movs	r6, #0
   1be56:	add	r2, pc
   1be58:	ldr.w	r8, [pc, #240]	; 1bf4c <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   1be5c:	mov	r7, r0
   1be5e:	mov	r4, r1
   1be60:	ldr	r3, [r2, r3]
   1be62:	mov	r1, r6
   1be64:	add	r0, sp, #48	; 0x30
   1be66:	movs	r2, #33	; 0x21
   1be68:	ldr	r3, [r3, #0]
   1be6a:	str	r3, [sp, #124]	; 0x7c
   1be6c:	mov.w	r3, #0
   1be70:	str	r6, [sp, #44]	; 0x2c
   1be72:	blx	8978 <memset@plt+0x4>
   1be76:	add	r0, sp, #88	; 0x58
   1be78:	movs	r2, #33	; 0x21
   1be7a:	mov	r1, r6
   1be7c:	add	r8, pc
   1be7e:	str	r6, [sp, #84]	; 0x54
   1be80:	blx	8978 <memset@plt+0x4>
   1be84:	cmp	r5, #0
   1be86:	beq.n	1bf08 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1be88:	ldr	r3, [pc, #196]	; (1bf50 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   1be8a:	movs	r1, #1
   1be8c:	adds	r5, #4
   1be8e:	ldr.w	r6, [r8, r3]
   1be92:	ldrd	r2, r3, [r4, #40]	; 0x28
   1be96:	strd	r2, r3, [sp]
   1be9a:	ldr	r2, [pc, #184]	; (1bf54 <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   1be9c:	ldr	r0, [r6, #0]
   1be9e:	add	r2, pc
   1bea0:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bea4:	cmp	r5, #3
   1bea6:	bhi.n	1bf08 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bea8:	tbb	[pc, r5]
   1beac:	subs	r0, #63	; 0x3f
   1beae:	subs	r2, r0, #0
   1beb0:	add	r5, sp, #28
   1beb2:	mov	r0, r4
   1beb4:	add	r4, sp, #84	; 0x54
   1beb6:	movs	r2, #32
   1beb8:	movs	r3, #16
   1beba:	mov	r1, r5
   1bebc:	bl	172c2 <read_extent_buffer@@Base>
   1bec0:	mov	r1, r4
   1bec2:	mov	r0, r5
   1bec4:	blx	8580 <uuid_unparse@plt>
   1bec8:	add	r3, sp, #44	; 0x2c
   1beca:	ldr	r0, [r7, #0]
   1becc:	mov	r1, r3
   1bece:	str	r3, [sp, #20]
   1bed0:	adds	r0, #16
   1bed2:	blx	8580 <uuid_unparse@plt>
   1bed6:	ldr	r2, [pc, #128]	; (1bf58 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   1bed8:	ldr	r3, [sp, #20]
   1beda:	add	r2, pc
   1bedc:	str	r4, [sp, #0]
   1bede:	ldr	r0, [r6, #0]
   1bee0:	movs	r1, #1
   1bee2:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bee6:	b.n	1bf08 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bee8:	ldr.w	r2, [r4, #144]	; 0x90
   1beec:	movs	r1, #1
   1beee:	ldr.w	r3, [r4, #148]	; 0x94
   1bef2:	strd	r2, r3, [sp, #8]
   1bef6:	ldrd	r2, r3, [r4, #40]	; 0x28
   1befa:	strd	r2, r3, [sp]
   1befe:	ldr	r2, [pc, #92]	; (1bf5c <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   1bf00:	ldr	r0, [r6, #0]
   1bf02:	add	r2, pc
   1bf04:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bf08:	ldr	r2, [pc, #84]	; (1bf60 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   1bf0a:	ldr	r3, [pc, #60]	; (1bf48 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1bf0c:	add	r2, pc
   1bf0e:	ldr	r3, [r2, r3]
   1bf10:	ldr	r2, [r3, #0]
   1bf12:	ldr	r3, [sp, #124]	; 0x7c
   1bf14:	eors	r2, r3
   1bf16:	beq.n	1bf3c <btrfs_fs_roots_compare_roots@@Base+0x2de>
   1bf18:	blx	86b8 <__stack_chk_fail@plt>
   1bf1c:	ldr	r2, [pc, #68]	; (1bf64 <btrfs_fs_roots_compare_roots@@Base+0x306>)
   1bf1e:	movs	r3, #8
   1bf20:	str	r3, [sp, #0]
   1bf22:	add	r2, pc
   1bf24:	ldrb.w	r3, [r4, #196]	; 0xc4
   1bf28:	b.n	1bede <btrfs_fs_roots_compare_roots@@Base+0x280>
   1bf2a:	ldr	r2, [pc, #60]	; (1bf68 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   1bf2c:	movs	r1, #1
   1bf2e:	ldr.w	r3, [r4, #192]	; 0xc0
   1bf32:	ldr	r0, [r6, #0]
   1bf34:	add	r2, pc
   1bf36:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bf3a:	b.n	1bf08 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bf3c:	add	sp, #128	; 0x80
   1bf3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bf42:	nop
   1bf44:	ldrh	r2, [r6, #56]	; 0x38
   1bf46:	movs	r4, r0
   1bf48:	lsls	r4, r4, #8
   1bf4a:	movs	r0, r0
   1bf4c:	ldrh	r4, [r1, #56]	; 0x38
   1bf4e:	movs	r4, r0
   1bf50:	lsls	r4, r6, #8
   1bf52:	movs	r0, r0
   1bf54:	lsrs	r3, r4, #12
   1bf56:	movs	r2, r0
   1bf58:	lsrs	r5, r7, #11
   1bf5a:	movs	r2, r0
   1bf5c:	lsrs	r6, r6, #11
   1bf5e:	movs	r2, r0
   1bf60:	ldrh	r4, [r7, #50]	; 0x32
   1bf62:	movs	r4, r0
   1bf64:	lsrs	r5, r7, #11
   1bf66:	movs	r2, r0
   1bf68:	lsrs	r7, r7, #11
   1bf6a:	movs	r2, r0
   1bf6c:	push	{r0, r1, r2, r3, r4, lr}
   1bf6e:	ldr	r3, [pc, #40]	; (1bf98 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   1bf70:	ldr	r4, [pc, #40]	; (1bf9c <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   1bf72:	add	r3, pc
   1bf74:	ldr	r4, [r3, r4]
   1bf76:	movs	r3, #0
   1bf78:	strd	r2, r1, [sp]
   1bf7c:	movs	r1, #1
   1bf7e:	strd	r0, r3, [sp, #8]
   1bf82:	ldr	r2, [pc, #28]	; (1bfa0 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   1bf84:	ldr	r3, [pc, #28]	; (1bfa4 <btrfs_fs_roots_compare_roots@@Base+0x346>)
   1bf86:	add	r2, pc
   1bf88:	ldr	r0, [r4, #0]
   1bf8a:	add	r3, pc
   1bf8c:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bf90:	bl	1bca0 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1bf94:	blx	8b34 <abort@plt>
   1bf98:	ldrh	r6, [r2, #48]	; 0x30
   1bf9a:	movs	r4, r0
   1bf9c:	lsls	r4, r6, #8
   1bf9e:	movs	r0, r0
   1bfa0:	bls.n	1c036 <btrfs_csum_data@@Base+0x48>
   1bfa2:	movs	r1, r0
   1bfa4:	lsrs	r7, r7, #10
   1bfa6:	movs	r2, r0
   1bfa8:	push	{r0, r1, r2, r3, r4, lr}
   1bfaa:	ldr	r4, [pc, #40]	; (1bfd4 <btrfs_fs_roots_compare_roots@@Base+0x376>)
   1bfac:	ldr	r5, [pc, #40]	; (1bfd8 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   1bfae:	add	r4, pc
   1bfb0:	ldr	r4, [r4, r5]
   1bfb2:	strd	r2, r1, [sp]
   1bfb6:	movs	r1, #1
   1bfb8:	strd	r0, r3, [sp, #8]
   1bfbc:	ldr	r2, [pc, #28]	; (1bfdc <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   1bfbe:	ldr	r3, [pc, #32]	; (1bfe0 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   1bfc0:	add	r2, pc
   1bfc2:	ldr	r0, [r4, #0]
   1bfc4:	add	r3, pc
   1bfc6:	blx	8a14 <__fprintf_chk@plt+0x4>
   1bfca:	bl	1bca0 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1bfce:	blx	8b34 <abort@plt>
   1bfd2:	nop
   1bfd4:	ldrh	r2, [r3, #46]	; 0x2e
   1bfd6:	movs	r4, r0
   1bfd8:	lsls	r4, r6, #8
   1bfda:	movs	r0, r0
   1bfdc:	bvc.n	1bfa4 <btrfs_fs_roots_compare_roots@@Base+0x346>
   1bfde:	movs	r1, r0
   1bfe0:	lsrs	r5, r0, #10
   1bfe2:	movs	r2, r0
   1bfe4:	push	{r3, lr}
   1bfe6:	cbz	r3, 1bfec <btrfs_fs_roots_compare_roots@@Base+0x38e>
   1bfe8:	bl	1bfa8 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1bfec:	pop	{r3, pc}

0001bfee <btrfs_csum_data@@Base>:
   1bfee:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bff2:	mov	r4, r2
   1bff4:	ldr.w	r8, [pc, #120]	; 1c070 <btrfs_csum_data@@Base+0x82>
   1bff8:	mov	r7, r0
   1bffa:	mov	r5, r1
   1bffc:	movs	r2, #32
   1bffe:	movs	r1, #0
   1c000:	mov	r0, r4
   1c002:	add	r8, pc
   1c004:	mov	r6, r3
   1c006:	blx	8978 <memset@plt+0x4>
   1c00a:	cmp	r7, #3
   1c00c:	bhi.n	1c04e <btrfs_csum_data@@Base+0x60>
   1c00e:	tbb	[pc, r7]
   1c012:	lsrs	r2, r0, #4
   1c014:	asrs	r0, r2, #28
   1c016:	mov	r2, r4
   1c018:	mov	r1, r6
   1c01a:	mov	r0, r5
   1c01c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c020:	b.w	33a34 <hash_crc32c@@Base>
   1c024:	mov	r2, r4
   1c026:	mov	r1, r6
   1c028:	mov	r0, r5
   1c02a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c02e:	b.w	33a4c <hash_xxhash@@Base>
   1c032:	mov	r2, r4
   1c034:	mov	r1, r6
   1c036:	mov	r0, r5
   1c038:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c03c:	b.w	33a9c <hash_sha256@@Base>
   1c040:	mov	r2, r4
   1c042:	mov	r1, r6
   1c044:	mov	r0, r5
   1c046:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c04a:	b.w	33af8 <hash_blake2b@@Base>
   1c04e:	ldr	r3, [pc, #36]	; (1c074 <btrfs_csum_data@@Base+0x86>)
   1c050:	movs	r1, #1
   1c052:	ldr	r2, [pc, #36]	; (1c078 <btrfs_csum_data@@Base+0x8a>)
   1c054:	ldr.w	r0, [r8, r3]
   1c058:	add	r2, pc
   1c05a:	mov	r3, r7
   1c05c:	ldr	r0, [r0, #0]
   1c05e:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c062:	ldr	r1, [pc, #24]	; (1c07c <btrfs_csum_data@@Base+0x8e>)
   1c064:	ldr	r0, [pc, #24]	; (1c080 <btrfs_csum_data@@Base+0x92>)
   1c066:	movs	r2, #157	; 0x9d
   1c068:	add	r1, pc
   1c06a:	add	r0, pc
   1c06c:	bl	1bf6c <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1c070:	ldrh	r6, [r0, #44]	; 0x2c
   1c072:	movs	r4, r0
   1c074:	lsls	r4, r6, #8
   1c076:	movs	r0, r0
   1c078:	lsrs	r3, r7, #7
   1c07a:	movs	r2, r0
   1c07c:	asrs	r5, r2, #11
   1c07e:	movs	r2, r0
   1c080:	lsls	r0, r3, #16
   1c082:	movs	r2, r0

0001c084 <csum_tree_block_size@@Base>:
   1c084:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c088:	mov	r4, r2
   1c08a:	ldr	r2, [pc, #144]	; (1c11c <csum_tree_block_size@@Base+0x98>)
   1c08c:	mov	r5, r0
   1c08e:	mov	r0, r3
   1c090:	ldr	r3, [pc, #140]	; (1c120 <csum_tree_block_size@@Base+0x9c>)
   1c092:	add	r2, pc
   1c094:	sub	sp, #56	; 0x38
   1c096:	add	r7, sp, #20
   1c098:	ldr.w	r8, [pc, #136]	; 1c124 <csum_tree_block_size@@Base+0xa0>
   1c09c:	ldr	r3, [r2, r3]
   1c09e:	mov	r6, r1
   1c0a0:	add.w	r1, r5, #128	; 0x80
   1c0a4:	mov	r2, r7
   1c0a6:	ldr	r3, [r3, #0]
   1c0a8:	str	r3, [sp, #52]	; 0x34
   1c0aa:	mov.w	r3, #0
   1c0ae:	ldr	r3, [r5, #76]	; 0x4c
   1c0b0:	add	r8, pc
   1c0b2:	subs	r3, #32
   1c0b4:	bl	1bfee <btrfs_csum_data@@Base>
   1c0b8:	mov	r3, r6
   1c0ba:	cbz	r4, 1c106 <csum_tree_block_size@@Base+0x82>
   1c0bc:	movs	r2, #0
   1c0be:	mov	r1, r7
   1c0c0:	mov	r0, r5
   1c0c2:	bl	172b0 <memcmp_extent_buffer@@Base>
   1c0c6:	mov	r4, r0
   1c0c8:	cbz	r0, 1c0f2 <csum_tree_block_size@@Base+0x6e>
   1c0ca:	ldrb.w	r2, [r5, #96]	; 0x60
   1c0ce:	movs	r4, #1
   1c0d0:	ldr	r3, [pc, #84]	; (1c128 <csum_tree_block_size@@Base+0xa4>)
   1c0d2:	ldrd	r0, r1, [r5, #40]	; 0x28
   1c0d6:	ldr.w	r3, [r8, r3]
   1c0da:	str	r2, [sp, #12]
   1c0dc:	ldrb.w	r2, [sp, #20]
   1c0e0:	strd	r0, r1, [sp]
   1c0e4:	movs	r1, #1
   1c0e6:	str	r2, [sp, #8]
   1c0e8:	ldr	r2, [pc, #64]	; (1c12c <csum_tree_block_size@@Base+0xa8>)
   1c0ea:	ldr	r0, [r3, #0]
   1c0ec:	add	r2, pc
   1c0ee:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c0f2:	ldr	r2, [pc, #60]	; (1c130 <csum_tree_block_size@@Base+0xac>)
   1c0f4:	ldr	r3, [pc, #40]	; (1c120 <csum_tree_block_size@@Base+0x9c>)
   1c0f6:	add	r2, pc
   1c0f8:	ldr	r3, [r2, r3]
   1c0fa:	ldr	r2, [r3, #0]
   1c0fc:	ldr	r3, [sp, #52]	; 0x34
   1c0fe:	eors	r2, r3
   1c100:	beq.n	1c112 <csum_tree_block_size@@Base+0x8e>
   1c102:	blx	86b8 <__stack_chk_fail@plt>
   1c106:	mov	r2, r4
   1c108:	mov	r1, r7
   1c10a:	mov	r0, r5
   1c10c:	bl	172d8 <write_extent_buffer@@Base>
   1c110:	b.n	1c0f2 <csum_tree_block_size@@Base+0x6e>
   1c112:	mov	r0, r4
   1c114:	add	sp, #56	; 0x38
   1c116:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c11a:	nop
   1c11c:	ldrh	r6, [r6, #38]	; 0x26
   1c11e:	movs	r4, r0
   1c120:	lsls	r4, r4, #8
   1c122:	movs	r0, r0
   1c124:	ldrh	r0, [r3, #38]	; 0x26
   1c126:	movs	r4, r0
   1c128:	lsls	r4, r6, #8
   1c12a:	movs	r0, r0
   1c12c:	lsrs	r5, r0, #6
   1c12e:	movs	r2, r0
   1c130:	ldrh	r2, [r2, #36]	; 0x24
   1c132:	movs	r4, r0

0001c134 <verify_tree_block_csum_silent@@Base>:
   1c134:	push	{r4, r5, r6, lr}
   1c136:	mov	r4, r0
   1c138:	mov	r0, r2
   1c13a:	ldr	r2, [pc, #76]	; (1c188 <verify_tree_block_csum_silent@@Base+0x54>)
   1c13c:	ldr	r3, [pc, #76]	; (1c18c <verify_tree_block_csum_silent@@Base+0x58>)
   1c13e:	sub	sp, #40	; 0x28
   1c140:	add	r2, pc
   1c142:	add	r5, sp, #4
   1c144:	mov	r6, r1
   1c146:	add.w	r1, r4, #128	; 0x80
   1c14a:	ldr	r3, [r2, r3]
   1c14c:	mov	r2, r5
   1c14e:	ldr	r3, [r3, #0]
   1c150:	str	r3, [sp, #36]	; 0x24
   1c152:	mov.w	r3, #0
   1c156:	ldr	r3, [r4, #76]	; 0x4c
   1c158:	subs	r3, #32
   1c15a:	bl	1bfee <btrfs_csum_data@@Base>
   1c15e:	mov	r3, r6
   1c160:	movs	r2, #0
   1c162:	mov	r1, r5
   1c164:	mov	r0, r4
   1c166:	bl	172b0 <memcmp_extent_buffer@@Base>
   1c16a:	ldr	r2, [pc, #36]	; (1c190 <verify_tree_block_csum_silent@@Base+0x5c>)
   1c16c:	ldr	r3, [pc, #28]	; (1c18c <verify_tree_block_csum_silent@@Base+0x58>)
   1c16e:	add	r2, pc
   1c170:	ldr	r3, [r2, r3]
   1c172:	subs	r0, #0
   1c174:	it	ne
   1c176:	movne	r0, #1
   1c178:	ldr	r2, [r3, #0]
   1c17a:	ldr	r3, [sp, #36]	; 0x24
   1c17c:	eors	r2, r3
   1c17e:	beq.n	1c184 <verify_tree_block_csum_silent@@Base+0x50>
   1c180:	blx	86b8 <__stack_chk_fail@plt>
   1c184:	add	sp, #40	; 0x28
   1c186:	pop	{r4, r5, r6, pc}
   1c188:	ldrh	r0, [r1, #34]	; 0x22
   1c18a:	movs	r4, r0
   1c18c:	lsls	r4, r4, #8
   1c18e:	movs	r0, r0
   1c190:	ldrh	r2, [r3, #32]
   1c192:	movs	r4, r0

0001c194 <csum_tree_block@@Base>:
   1c194:	push	{r4, r5, r6, lr}
   1c196:	mov	r4, r0
   1c198:	ldr.w	r0, [r0, #308]	; 0x134
   1c19c:	mov	r5, r1
   1c19e:	mov	r6, r2
   1c1a0:	bl	17db8 <btrfs_super_csum_size@@Base>
   1c1a4:	ldr.w	r3, [r4, #308]	; 0x134
   1c1a8:	ldrh.w	r3, [r3, #196]	; 0xc4
   1c1ac:	mov	r1, r0
   1c1ae:	cbz	r6, 1c1c4 <csum_tree_block@@Base+0x30>
   1c1b0:	ldrb.w	r2, [r4, #364]	; 0x16c
   1c1b4:	lsls	r2, r2, #26
   1c1b6:	bpl.n	1c1c4 <csum_tree_block@@Base+0x30>
   1c1b8:	mov	r0, r5
   1c1ba:	mov	r2, r3
   1c1bc:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c1c0:	b.w	1c134 <verify_tree_block_csum_silent@@Base>
   1c1c4:	mov	r2, r6
   1c1c6:	mov	r0, r5
   1c1c8:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c1cc:	b.w	1c084 <csum_tree_block_size@@Base>

0001c1d0 <btrfs_find_tree_block@@Base>:
   1c1d0:	adds	r0, #64	; 0x40
   1c1d2:	b.w	16c40 <find_extent_buffer@@Base>

0001c1d6 <btrfs_find_create_tree_block@@Base>:
   1c1d6:	push	{r0, r1, r2, lr}
   1c1d8:	ldr.w	r1, [r0, #384]	; 0x180
   1c1dc:	str	r1, [sp, #0]
   1c1de:	bl	16cc6 <alloc_extent_buffer@@Base>
   1c1e2:	add	sp, #12
   1c1e4:	ldr.w	pc, [sp], #4

0001c1e8 <read_whole_eb@@Base>:
   1c1e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1ec:	sub	sp, #60	; 0x3c
   1c1ee:	ldr	r3, [pc, #328]	; (1c338 <read_whole_eb@@Base+0x150>)
   1c1f0:	mov	r7, r0
   1c1f2:	str	r2, [sp, #16]
   1c1f4:	mov	r4, r1
   1c1f6:	ldr	r2, [pc, #324]	; (1c33c <read_whole_eb@@Base+0x154>)
   1c1f8:	movs	r6, #0
   1c1fa:	ldr	r5, [r1, #76]	; 0x4c
   1c1fc:	add	r2, pc
   1c1fe:	ldr.w	r9, [pc, #320]	; 1c340 <read_whole_eb@@Base+0x158>
   1c202:	ldr	r3, [r2, r3]
   1c204:	add	r9, pc
   1c206:	ldr	r3, [r3, #0]
   1c208:	str	r3, [sp, #52]	; 0x34
   1c20a:	mov.w	r3, #0
   1c20e:	add	r3, sp, #36	; 0x24
   1c210:	str	r6, [sp, #36]	; 0x24
   1c212:	str	r3, [sp, #20]
   1c214:	add	r3, sp, #40	; 0x28
   1c216:	str	r3, [sp, #24]
   1c218:	cbnz	r5, 1c232 <read_whole_eb@@Base+0x4a>
   1c21a:	mov	r0, r5
   1c21c:	ldr	r2, [pc, #292]	; (1c344 <read_whole_eb@@Base+0x15c>)
   1c21e:	ldr	r3, [pc, #280]	; (1c338 <read_whole_eb@@Base+0x150>)
   1c220:	add	r2, pc
   1c222:	ldr	r3, [r2, r3]
   1c224:	ldr	r2, [r3, #0]
   1c226:	ldr	r3, [sp, #52]	; 0x34
   1c228:	eors	r2, r3
   1c22a:	beq.w	1c330 <read_whole_eb@@Base+0x148>
   1c22e:	blx	86b8 <__stack_chk_fail@plt>
   1c232:	ldrb.w	r1, [r7, #364]	; 0x16c
   1c236:	mov	sl, r5
   1c238:	mov.w	fp, #0
   1c23c:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c240:	ands.w	r1, r1, #4
   1c244:	strd	sl, fp, [sp, #40]	; 0x28
   1c248:	bne.n	1c2f2 <read_whole_eb@@Base+0x10a>
   1c24a:	cmp	r3, #0
   1c24c:	it	eq
   1c24e:	cmpeq.w	r2, #65536	; 0x10000
   1c252:	beq.n	1c2f2 <read_whole_eb@@Base+0x10a>
   1c254:	ldr	r0, [sp, #16]
   1c256:	adds	r2, r2, r6
   1c258:	str	r1, [sp, #12]
   1c25a:	adc.w	r3, r3, #0
   1c25e:	str	r0, [sp, #8]
   1c260:	ldr	r0, [sp, #20]
   1c262:	str	r0, [sp, #4]
   1c264:	ldr	r0, [sp, #24]
   1c266:	str	r0, [sp, #0]
   1c268:	mov	r0, r7
   1c26a:	bl	29dd0 <btrfs_map_block@@Base>
   1c26e:	mov	r1, r0
   1c270:	cbz	r0, 1c2a0 <read_whole_eb@@Base+0xb8>
   1c272:	ldr	r3, [pc, #212]	; (1c348 <read_whole_eb@@Base+0x160>)
   1c274:	movs	r2, #0
   1c276:	ldr.w	r0, [r9, r3]
   1c27a:	ldrd	r3, r1, [r4, #40]	; 0x28
   1c27e:	adds	r3, r6, r3
   1c280:	adc.w	r2, r1, r2
   1c284:	strd	r3, r2, [sp]
   1c288:	ldr	r2, [pc, #192]	; (1c34c <read_whole_eb@@Base+0x164>)
   1c28a:	movs	r1, #1
   1c28c:	ldr	r0, [r0, #0]
   1c28e:	add	r2, pc
   1c290:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c294:	ldr	r0, [sp, #36]	; 0x24
   1c296:	blx	85dc <free@plt+0x4>
   1c29a:	mvn.w	r0, #4
   1c29e:	b.n	1c21c <read_whole_eb@@Base+0x34>
   1c2a0:	ldr	r0, [sp, #36]	; 0x24
   1c2a2:	ldr.w	ip, [r0, #8]
   1c2a6:	ldr.w	r3, [ip, #24]
   1c2aa:	cmp	r3, #0
   1c2ac:	ble.n	1c296 <read_whole_eb@@Base+0xae>
   1c2ae:	str	r3, [r4, #88]	; 0x58
   1c2b0:	ldrd	r3, r2, [ip, #16]
   1c2b4:	str	r1, [sp, #28]
   1c2b6:	adds	r3, #1
   1c2b8:	adc.w	r2, r2, #0
   1c2bc:	strd	r3, r2, [ip, #16]
   1c2c0:	ldrd	r2, r3, [r0, #16]
   1c2c4:	strd	r2, r3, [r4, #48]	; 0x30
   1c2c8:	blx	85dc <free@plt+0x4>
   1c2cc:	ldrd	r2, r3, [sp, #40]	; 0x28
   1c2d0:	ldr	r1, [sp, #28]
   1c2d2:	cmp	fp, r3
   1c2d4:	it	eq
   1c2d6:	cmpeq	r5, r2
   1c2d8:	str	r1, [sp, #36]	; 0x24
   1c2da:	bcc.n	1c32a <read_whole_eb@@Base+0x142>
   1c2dc:	ldr	r2, [sp, #40]	; 0x28
   1c2de:	mov	r1, r6
   1c2e0:	mov	r0, r4
   1c2e2:	bl	16df2 <read_extent_from_disk@@Base>
   1c2e6:	cmp	r0, #0
   1c2e8:	bne.n	1c29a <read_whole_eb@@Base+0xb2>
   1c2ea:	ldr	r3, [sp, #40]	; 0x28
   1c2ec:	add	r6, r3
   1c2ee:	subs	r5, r5, r3
   1c2f0:	b.n	1c218 <read_whole_eb@@Base+0x30>
   1c2f2:	ldr.w	r0, [r7, #352]	; 0x160
   1c2f6:	ldr.w	r1, [r0, #72]!
   1c2fa:	cmp	r1, r0
   1c2fc:	bne.n	1c316 <read_whole_eb@@Base+0x12e>
   1c2fe:	ldr	r0, [r1, #24]
   1c300:	strd	r2, r3, [r4, #48]	; 0x30
   1c304:	str	r0, [r4, #88]	; 0x58
   1c306:	ldrd	r3, r2, [r1, #16]
   1c30a:	adds	r3, #1
   1c30c:	adc.w	r2, r2, #0
   1c310:	strd	r3, r2, [r1, #16]
   1c314:	b.n	1c2dc <read_whole_eb@@Base+0xf4>
   1c316:	ldrd	sl, fp, [r1, #64]	; 0x40
   1c31a:	cmp.w	fp, #0
   1c31e:	it	eq
   1c320:	cmpeq.w	sl, #1
   1c324:	beq.n	1c2fe <read_whole_eb@@Base+0x116>
   1c326:	ldr	r1, [r1, #0]
   1c328:	b.n	1c2fa <read_whole_eb@@Base+0x112>
   1c32a:	strd	sl, fp, [sp, #40]	; 0x28
   1c32e:	b.n	1c2dc <read_whole_eb@@Base+0xf4>
   1c330:	add	sp, #60	; 0x3c
   1c332:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c336:	nop
   1c338:	lsls	r4, r4, #8
   1c33a:	movs	r0, r0
   1c33c:	ldrh	r4, [r1, #28]
   1c33e:	movs	r4, r0
   1c340:	ldrh	r4, [r0, #28]
   1c342:	movs	r4, r0
   1c344:	ldrh	r0, [r5, #26]
   1c346:	movs	r4, r0
   1c348:	lsls	r4, r6, #8
   1c34a:	movs	r0, r0
   1c34c:			; <UNDEFINED> instruction: 0xf76b0001

0001c350 <read_extent_data@@Base>:
   1c350:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c354:	mov	r6, r1
   1c356:	ldr	r5, [pc, #176]	; (1c408 <read_extent_data@@Base+0xb8>)
   1c358:	sub	sp, #28
   1c35a:	ldr	r1, [pc, #176]	; (1c40c <read_extent_data@@Base+0xbc>)
   1c35c:	mov	sl, r2
   1c35e:	add	r5, pc
   1c360:	ldr	r4, [sp, #64]	; 0x40
   1c362:	mov	r7, r3
   1c364:	ldr.w	fp, [pc, #168]	; 1c410 <read_extent_data@@Base+0xc0>
   1c368:	ldr	r1, [r5, r1]
   1c36a:	ldr	r5, [sp, #68]	; 0x44
   1c36c:	add	fp, pc
   1c36e:	ldr	r1, [r1, #0]
   1c370:	str	r1, [sp, #20]
   1c372:	mov.w	r1, #0
   1c376:	ldrd	r8, r9, [r4]
   1c37a:	movs	r1, #0
   1c37c:	str	r1, [sp, #12]
   1c37e:	str	r5, [sp, #8]
   1c380:	add	r5, sp, #16
   1c382:	strd	r4, r5, [sp]
   1c386:	str	r1, [sp, #16]
   1c388:	bl	29dd0 <btrfs_map_block@@Base>
   1c38c:	mov	r5, r0
   1c38e:	cbz	r0, 1c3c0 <read_extent_data@@Base+0x70>
   1c390:	ldr	r3, [pc, #128]	; (1c414 <read_extent_data@@Base+0xc4>)
   1c392:	movs	r1, #1
   1c394:	ldr	r2, [pc, #128]	; (1c418 <read_extent_data@@Base+0xc8>)
   1c396:	ldr.w	r3, [fp, r3]
   1c39a:	add	r2, pc
   1c39c:	strd	sl, r7, [sp]
   1c3a0:	ldr	r0, [r3, #0]
   1c3a2:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c3a6:	ldr	r0, [sp, #16]
   1c3a8:	blx	85dc <free@plt+0x4>
   1c3ac:	ldr	r2, [pc, #108]	; (1c41c <read_extent_data@@Base+0xcc>)
   1c3ae:	ldr	r3, [pc, #92]	; (1c40c <read_extent_data@@Base+0xbc>)
   1c3b0:	add	r2, pc
   1c3b2:	ldr	r3, [r2, r3]
   1c3b4:	ldr	r2, [r3, #0]
   1c3b6:	ldr	r3, [sp, #20]
   1c3b8:	eors	r2, r3
   1c3ba:	beq.n	1c400 <read_extent_data@@Base+0xb0>
   1c3bc:	blx	86b8 <__stack_chk_fail@plt>
   1c3c0:	ldr	r1, [sp, #16]
   1c3c2:	ldrd	r2, r3, [r4]
   1c3c6:	ldr	r0, [r1, #8]
   1c3c8:	cmp	r9, r3
   1c3ca:	it	eq
   1c3cc:	cmpeq	r8, r2
   1c3ce:	it	cc
   1c3d0:	strdcc	r8, r9, [r4]
   1c3d4:	ldr	r0, [r0, #24]
   1c3d6:	cmp	r0, #0
   1c3d8:	bge.n	1c3e0 <read_extent_data@@Base+0x90>
   1c3da:	mvn.w	r5, #4
   1c3de:	b.n	1c3a6 <read_extent_data@@Base+0x56>
   1c3e0:	ldrd	r2, r3, [r1, #16]
   1c3e4:	mov	r1, r6
   1c3e6:	strd	r2, r3, [sp]
   1c3ea:	ldr	r2, [r4, #0]
   1c3ec:	blx	87b8 <pread64@plt>
   1c3f0:	ldrd	r2, r3, [r4]
   1c3f4:	asrs	r1, r0, #31
   1c3f6:	cmp	r1, r3
   1c3f8:	it	eq
   1c3fa:	cmpeq	r0, r2
   1c3fc:	beq.n	1c3a6 <read_extent_data@@Base+0x56>
   1c3fe:	b.n	1c3da <read_extent_data@@Base+0x8a>
   1c400:	mov	r0, r5
   1c402:	add	sp, #28
   1c404:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c408:	ldrh	r2, [r5, #16]
   1c40a:	movs	r4, r0
   1c40c:	lsls	r4, r4, #8
   1c40e:	movs	r0, r0
   1c410:	ldrh	r4, [r3, #16]
   1c412:	movs	r4, r0
   1c414:	lsls	r4, r6, #8
   1c416:	movs	r0, r0
   1c418:	lsls	r6, r1, #28
   1c41a:	movs	r2, r0
   1c41c:	ldrh	r0, [r3, #14]
   1c41e:	movs	r4, r0

0001c420 <write_and_map_eb@@Base>:
   1c420:	ldr	r2, [pc, #248]	; (1c51c <write_and_map_eb@@Base+0xfc>)
   1c422:	ldr	r3, [pc, #252]	; (1c520 <write_and_map_eb@@Base+0x100>)
   1c424:	add	r2, pc
   1c426:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c42a:	sub	sp, #48	; 0x30
   1c42c:	ldr	r3, [r2, r3]
   1c42e:	mov	r5, r1
   1c430:	ldr	r2, [r1, #76]	; 0x4c
   1c432:	mov	r6, r0
   1c434:	ldr	r3, [r3, #0]
   1c436:	str	r3, [sp, #44]	; 0x2c
   1c438:	mov.w	r3, #0
   1c43c:	movs	r3, #0
   1c43e:	strd	r3, r3, [sp, #24]
   1c442:	strd	r2, r3, [sp, #32]
   1c446:	add	r2, sp, #24
   1c448:	strd	r3, r2, [sp, #8]
   1c44c:	add	r3, sp, #28
   1c44e:	str	r3, [sp, #4]
   1c450:	add	r3, sp, #32
   1c452:	str	r3, [sp, #0]
   1c454:	ldrd	r2, r3, [r1, #40]	; 0x28
   1c458:	movs	r1, #1
   1c45a:	bl	29dd0 <btrfs_map_block@@Base>
   1c45e:	ldr	r4, [sp, #24]
   1c460:	mov	r3, r0
   1c462:	cmp	r4, #0
   1c464:	beq.n	1c508 <write_and_map_eb@@Base+0xe8>
   1c466:	ldrd	r2, r3, [sp, #32]
   1c46a:	mov	r1, r5
   1c46c:	mov	r0, r6
   1c46e:	str	r4, [sp, #8]
   1c470:	strd	r2, r3, [sp]
   1c474:	ldr	r2, [sp, #28]
   1c476:	bl	2a738 <write_raid56_with_parity@@Base>
   1c47a:	ldr	r1, [pc, #168]	; (1c524 <write_and_map_eb@@Base+0x104>)
   1c47c:	mov.w	r2, #494	; 0x1ee
   1c480:	add	r1, pc
   1c482:	adds	r1, #16
   1c484:	mov	r3, r0
   1c486:	ldr	r0, [pc, #160]	; (1c528 <write_and_map_eb@@Base+0x108>)
   1c488:	add	r0, pc
   1c48a:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c48e:	ldr	r0, [sp, #24]
   1c490:	blx	85dc <free@plt+0x4>
   1c494:	ldr	r0, [sp, #28]
   1c496:	blx	85dc <free@plt+0x4>
   1c49a:	ldr	r2, [pc, #144]	; (1c52c <write_and_map_eb@@Base+0x10c>)
   1c49c:	ldr	r3, [pc, #128]	; (1c520 <write_and_map_eb@@Base+0x100>)
   1c49e:	add	r2, pc
   1c4a0:	ldr	r3, [r2, r3]
   1c4a2:	ldr	r2, [r3, #0]
   1c4a4:	ldr	r3, [sp, #44]	; 0x2c
   1c4a6:	eors	r2, r3
   1c4a8:	beq.n	1c514 <write_and_map_eb@@Base+0xf4>
   1c4aa:	blx	86b8 <__stack_chk_fail@plt>
   1c4ae:	mov.w	r2, #496	; 0x1f0
   1c4b2:	mov	r1, r7
   1c4b4:	mov	r0, r6
   1c4b6:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c4ba:	add.w	r1, r8, r4, lsl #4
   1c4be:	adds	r4, #1
   1c4c0:	mov	r0, r5
   1c4c2:	ldr	r3, [r1, #8]
   1c4c4:	add.w	r8, r8, r4, lsl #4
   1c4c8:	ldr	r3, [r3, #24]
   1c4ca:	str	r3, [r5, #88]	; 0x58
   1c4cc:	ldrd	r2, r3, [r8]
   1c4d0:	strd	r2, r3, [r5, #48]	; 0x30
   1c4d4:	ldr	r2, [r1, #8]
   1c4d6:	ldrd	r3, r1, [r2, #16]
   1c4da:	adds	r3, #1
   1c4dc:	adc.w	r1, r1, #0
   1c4e0:	strd	r3, r1, [r2, #16]
   1c4e4:	bl	16e26 <write_extent_to_disk@@Base>
   1c4e8:	mov.w	r2, #502	; 0x1f6
   1c4ec:	mov	r1, r7
   1c4ee:	mov	r3, r0
   1c4f0:	str	r0, [sp, #20]
   1c4f2:	mov	r0, r6
   1c4f4:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c4f8:	ldr	r3, [sp, #20]
   1c4fa:	ldr.w	r8, [sp, #28]
   1c4fe:	ldr.w	r2, [r8, #4]
   1c502:	cmp	r2, r4
   1c504:	bgt.n	1c4ae <write_and_map_eb@@Base+0x8e>
   1c506:	b.n	1c48e <write_and_map_eb@@Base+0x6e>
   1c508:	ldr	r7, [pc, #36]	; (1c530 <write_and_map_eb@@Base+0x110>)
   1c50a:	ldr	r6, [pc, #40]	; (1c534 <write_and_map_eb@@Base+0x114>)
   1c50c:	add	r7, pc
   1c50e:	adds	r7, #16
   1c510:	add	r6, pc
   1c512:	b.n	1c4fa <write_and_map_eb@@Base+0xda>
   1c514:	movs	r0, #0
   1c516:	add	sp, #48	; 0x30
   1c518:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c51c:	ldrh	r4, [r4, #10]
   1c51e:	movs	r4, r0
   1c520:	lsls	r4, r4, #8
   1c522:	movs	r0, r0
   1c524:	lsrs	r5, r7, #26
   1c526:	movs	r2, r0
   1c528:	bls.n	1c5e4 <btrfs_free_fs_info@@Base+0x2c>
   1c52a:	movs	r1, r0
   1c52c:	ldrh	r2, [r5, #6]
   1c52e:	movs	r4, r0
   1c530:	lsrs	r1, r6, #24
   1c532:	movs	r2, r0
   1c534:	bhi.n	1c4e0 <write_and_map_eb@@Base+0xc0>
   1c536:	movs	r1, r0

0001c538 <btrfs_setup_root@@Base>:
   1c538:	push	{r4, r5, r6, lr}
   1c53a:	mov	r4, r0
   1c53c:	movs	r0, #0
   1c53e:	strd	r2, r3, [r4, #472]	; 0x1d8
   1c542:	mov	r6, r2
   1c544:	mov	r5, r3
   1c546:	movs	r2, #0
   1c548:	movs	r3, #0
   1c54a:	strd	r0, r0, [r4]
   1c54e:	strd	r2, r3, [r4, #480]	; 0x1e0
   1c552:	strd	r2, r3, [r4, #504]	; 0x1f8
   1c556:	add.w	r3, r4, #520	; 0x208
   1c55a:	strd	r0, r0, [r4, #488]	; 0x1e8
   1c55e:	movw	r2, #439	; 0x1b7
   1c562:	str.w	r1, [r4, #464]	; 0x1d0
   1c566:	mov	r1, r0
   1c568:	strd	r3, r3, [r4, #520]	; 0x208
   1c56c:	add.w	r3, r4, #512	; 0x200
   1c570:	str.w	r0, [r4, #455]	; 0x1c7
   1c574:	str.w	r0, [r4, #459]	; 0x1cb
   1c578:	strb.w	r0, [r4, #463]	; 0x1cf
   1c57c:	add.w	r0, r4, #8
   1c580:	strd	r3, r3, [r4, #512]	; 0x200
   1c584:	blx	8978 <memset@plt+0x4>
   1c588:	str.w	r6, [r4, #447]	; 0x1bf
   1c58c:	str.w	r5, [r4, #451]	; 0x1c3
   1c590:	pop	{r4, r5, r6, pc}

0001c592 <btrfs_free_fs_root@@Base>:
   1c592:	push	{r4, lr}
   1c594:	mov	r4, r0
   1c596:	ldr	r0, [r0, #0]
   1c598:	cbz	r0, 1c59e <btrfs_free_fs_root@@Base+0xc>
   1c59a:	bl	16bc8 <free_extent_buffer@@Base>
   1c59e:	ldr	r0, [r4, #4]
   1c5a0:	cbz	r0, 1c5a6 <btrfs_free_fs_root@@Base+0x14>
   1c5a2:	bl	16bc8 <free_extent_buffer@@Base>
   1c5a6:	mov	r0, r4
   1c5a8:	blx	85dc <free@plt+0x4>
   1c5ac:	movs	r0, #0
   1c5ae:	pop	{r4, pc}
   1c5b0:	sub.w	r0, r0, #528	; 0x210
   1c5b4:	b.w	1c592 <btrfs_free_fs_root@@Base>

0001c5b8 <btrfs_free_fs_info@@Base>:
   1c5b8:	push	{r4, lr}
   1c5ba:	mov	r4, r0
   1c5bc:	ldr	r0, [r0, #44]	; 0x2c
   1c5be:	cbz	r0, 1c5c4 <btrfs_free_fs_info@@Base+0xc>
   1c5c0:	blx	85dc <free@plt+0x4>
   1c5c4:	ldr	r0, [r4, #28]
   1c5c6:	blx	85dc <free@plt+0x4>
   1c5ca:	ldr	r0, [r4, #24]
   1c5cc:	blx	85dc <free@plt+0x4>
   1c5d0:	ldr	r0, [r4, #32]
   1c5d2:	blx	85dc <free@plt+0x4>
   1c5d6:	ldr	r0, [r4, #36]	; 0x24
   1c5d8:	blx	85dc <free@plt+0x4>
   1c5dc:	ldr	r0, [r4, #40]	; 0x28
   1c5de:	blx	85dc <free@plt+0x4>
   1c5e2:	ldr	r0, [r4, #48]	; 0x30
   1c5e4:	blx	85dc <free@plt+0x4>
   1c5e8:	ldr	r0, [r4, #52]	; 0x34
   1c5ea:	blx	85dc <free@plt+0x4>
   1c5ee:	ldr.w	r0, [r4, #308]	; 0x134
   1c5f2:	blx	85dc <free@plt+0x4>
   1c5f6:	ldr	r0, [r4, #60]	; 0x3c
   1c5f8:	blx	85dc <free@plt+0x4>
   1c5fc:	mov	r0, r4
   1c5fe:	ldmia.w	sp!, {r4, lr}
   1c602:	b.w	85d8 <free@plt>

0001c606 <btrfs_new_fs_info@@Base>:
   1c606:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c60a:	sub	sp, #20
   1c60c:	mov	fp, r0
   1c60e:	mov.w	r1, #400	; 0x190
   1c612:	movs	r0, #1
   1c614:	strd	r2, r3, [sp]
   1c618:	blx	8544 <calloc@plt+0x4>
   1c61c:	mov	r4, r0
   1c61e:	cmp	r0, #0
   1c620:	beq.n	1c6ca <btrfs_new_fs_info@@Base+0xc4>
   1c622:	mov.w	r1, #544	; 0x220
   1c626:	movs	r0, #1
   1c628:	blx	8544 <calloc@plt+0x4>
   1c62c:	mov.w	r1, #544	; 0x220
   1c630:	str	r0, [r4, #28]
   1c632:	str	r0, [sp, #12]
   1c634:	movs	r0, #1
   1c636:	blx	8544 <calloc@plt+0x4>
   1c63a:	mov.w	r1, #544	; 0x220
   1c63e:	str	r0, [r4, #24]
   1c640:	str	r0, [sp, #8]
   1c642:	movs	r0, #1
   1c644:	blx	8544 <calloc@plt+0x4>
   1c648:	mov.w	r1, #544	; 0x220
   1c64c:	str	r0, [r4, #32]
   1c64e:	mov	sl, r0
   1c650:	movs	r0, #1
   1c652:	blx	8544 <calloc@plt+0x4>
   1c656:	mov.w	r1, #544	; 0x220
   1c65a:	str	r0, [r4, #36]	; 0x24
   1c65c:	mov	r9, r0
   1c65e:	movs	r0, #1
   1c660:	blx	8544 <calloc@plt+0x4>
   1c664:	mov.w	r1, #544	; 0x220
   1c668:	str	r0, [r4, #40]	; 0x28
   1c66a:	mov	r8, r0
   1c66c:	movs	r0, #1
   1c66e:	blx	8544 <calloc@plt+0x4>
   1c672:	mov.w	r1, #544	; 0x220
   1c676:	str	r0, [r4, #44]	; 0x2c
   1c678:	mov	r7, r0
   1c67a:	movs	r0, #1
   1c67c:	blx	8544 <calloc@plt+0x4>
   1c680:	mov.w	r1, #544	; 0x220
   1c684:	str	r0, [r4, #48]	; 0x30
   1c686:	mov	r6, r0
   1c688:	movs	r0, #1
   1c68a:	blx	8544 <calloc@plt+0x4>
   1c68e:	mov.w	r1, #4096	; 0x1000
   1c692:	str	r0, [r4, #52]	; 0x34
   1c694:	mov	r5, r0
   1c696:	movs	r0, #1
   1c698:	blx	8544 <calloc@plt+0x4>
   1c69c:	ldr	r2, [sp, #12]
   1c69e:	str.w	r0, [r4, #308]	; 0x134
   1c6a2:	cbz	r2, 1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6a4:	ldr	r3, [sp, #8]
   1c6a6:	cbz	r3, 1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6a8:	cmp.w	sl, #0
   1c6ac:	beq.n	1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6ae:	cmp.w	r9, #0
   1c6b2:	beq.n	1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6b4:	cmp.w	r8, #0
   1c6b8:	beq.n	1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6ba:	cbz	r7, 1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6bc:	cbz	r6, 1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6be:	cbz	r5, 1c6c2 <btrfs_new_fs_info@@Base+0xbc>
   1c6c0:	cbnz	r0, 1c6d2 <btrfs_new_fs_info@@Base+0xcc>
   1c6c2:	mov	r0, r4
   1c6c4:	movs	r4, #0
   1c6c6:	bl	1c5b8 <btrfs_free_fs_info@@Base>
   1c6ca:	mov	r0, r4
   1c6cc:	add	sp, #20
   1c6ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6d2:	add.w	r0, r4, #64	; 0x40
   1c6d6:	bl	1661c <extent_io_tree_init@@Base>
   1c6da:	add.w	r0, r4, #96	; 0x60
   1c6de:	bl	1661c <extent_io_tree_init@@Base>
   1c6e2:	add.w	r0, r4, #128	; 0x80
   1c6e6:	bl	1661c <extent_io_tree_init@@Base>
   1c6ea:	add.w	r0, r4, #160	; 0xa0
   1c6ee:	bl	1661c <extent_io_tree_init@@Base>
   1c6f2:	add.w	r0, r4, #192	; 0xc0
   1c6f6:	bl	1661c <extent_io_tree_init@@Base>
   1c6fa:	movs	r3, #0
   1c6fc:	add.w	r0, r4, #228	; 0xe4
   1c700:	str.w	r3, [r4, #224]	; 0xe0
   1c704:	str	r3, [r4, #56]	; 0x38
   1c706:	bl	15e3c <cache_tree_init@@Base>
   1c70a:	movs	r3, #1
   1c70c:	str.w	r3, [r4, #312]	; 0x138
   1c710:	add.w	r3, r4, #336	; 0x150
   1c714:	strd	r3, r3, [r4, #336]	; 0x150
   1c718:	add.w	r3, r4, #356	; 0x164
   1c71c:	strd	r3, r3, [r4, #356]	; 0x164
   1c720:	add.w	r3, r4, #344	; 0x158
   1c724:	strd	r3, r3, [r4, #344]	; 0x158
   1c728:	cmp.w	fp, #0
   1c72c:	bne.n	1c73a <btrfs_new_fs_info@@Base+0x134>
   1c72e:	ldrb.w	r3, [r4, #364]	; 0x16c
   1c732:	orr.w	r3, r3, #2
   1c736:	strb.w	r3, [r4, #364]	; 0x16c
   1c73a:	ldr	r3, [sp, #0]
   1c73c:	mov.w	r2, #4294967295	; 0xffffffff
   1c740:	str.w	r3, [r4, #320]	; 0x140
   1c744:	ldr	r3, [sp, #4]
   1c746:	str.w	r3, [r4, #324]	; 0x144
   1c74a:	mov.w	r3, #4294967295	; 0xffffffff
   1c74e:	strd	r2, r3, [r4, #272]	; 0x110
   1c752:	strd	r2, r3, [r4, #280]	; 0x118
   1c756:	strd	r2, r3, [r4, #288]	; 0x120
   1c75a:	b.n	1c6ca <btrfs_new_fs_info@@Base+0xc4>

0001c75c <btrfs_check_fs_compatibility@@Base>:
   1c75c:	push	{r0, r1, r4, r5, r6, lr}
   1c75e:	ldr.w	r4, [r0, #188]	; 0xbc
   1c762:	ldr.w	r5, [r0, #192]	; 0xc0
   1c766:	bic.w	r2, r4, #4080	; 0xff0
   1c76a:	ldr	r6, [pc, #128]	; (1c7ec <btrfs_check_fs_compatibility@@Base+0x90>)
   1c76c:	bic.w	r2, r2, #15
   1c770:	mov	r3, r5
   1c772:	orrs.w	ip, r2, r3
   1c776:	add	r6, pc
   1c778:	beq.n	1c794 <btrfs_check_fs_compatibility@@Base+0x38>
   1c77a:	ldr	r1, [pc, #116]	; (1c7f0 <btrfs_check_fs_compatibility@@Base+0x94>)
   1c77c:	ldr	r0, [r6, r1]
   1c77e:	strd	r2, r3, [sp]
   1c782:	ldr	r2, [pc, #112]	; (1c7f4 <btrfs_check_fs_compatibility@@Base+0x98>)
   1c784:	add	r2, pc
   1c786:	ldr	r0, [r0, #0]
   1c788:	movs	r1, #1
   1c78a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c78e:	mvn.w	r0, #94	; 0x5e
   1c792:	b.n	1c7b0 <btrfs_check_fs_compatibility@@Base+0x54>
   1c794:	and.w	r2, r4, #1
   1c798:	movs	r3, #0
   1c79a:	orrs	r3, r2
   1c79c:	ittt	eq
   1c79e:	streq.w	r5, [r0, #192]	; 0xc0
   1c7a2:	orreq.w	r4, r4, #1
   1c7a6:	streq.w	r4, [r0, #188]	; 0xbc
   1c7aa:	lsls	r4, r1, #31
   1c7ac:	bmi.n	1c7b4 <btrfs_check_fs_compatibility@@Base+0x58>
   1c7ae:	movs	r0, #0
   1c7b0:	add	sp, #8
   1c7b2:	pop	{r4, r5, r6, pc}
   1c7b4:	ldr.w	r3, [r0, #180]	; 0xb4
   1c7b8:	lsls	r1, r1, #18
   1c7ba:	ldr.w	r2, [r0, #184]	; 0xb8
   1c7be:	bic.w	r4, r3, #3
   1c7c2:	itt	mi
   1c7c4:	bicmi.w	r3, r3, #2
   1c7c8:	strmi.w	r3, [r0, #180]	; 0xb4
   1c7cc:	mov	r5, r2
   1c7ce:	itt	mi
   1c7d0:	movmi	r3, r4
   1c7d2:	strmi.w	r2, [r0, #184]	; 0xb8
   1c7d6:	orrs.w	r1, r4, r5
   1c7da:	beq.n	1c7ae <btrfs_check_fs_compatibility@@Base+0x52>
   1c7dc:	ldr	r1, [pc, #16]	; (1c7f0 <btrfs_check_fs_compatibility@@Base+0x94>)
   1c7de:	ldr	r0, [r6, r1]
   1c7e0:	strd	r3, r2, [sp]
   1c7e4:	ldr	r2, [pc, #16]	; (1c7f8 <btrfs_check_fs_compatibility@@Base+0x9c>)
   1c7e6:	add	r2, pc
   1c7e8:	b.n	1c786 <btrfs_check_fs_compatibility@@Base+0x2a>
   1c7ea:	nop
   1c7ec:	strh	r2, [r2, #48]	; 0x30
   1c7ee:	movs	r4, r0
   1c7f0:	lsls	r4, r6, #8
   1c7f2:	movs	r0, r0
   1c7f4:	lsls	r1, r0, #13
   1c7f6:	movs	r2, r0
   1c7f8:	lsls	r5, r3, #12
   1c7fa:	movs	r2, r0

0001c7fc <btrfs_release_all_roots@@Base>:
   1c7fc:	push	{r4, lr}
   1c7fe:	mov	r4, r0
   1c800:	ldr	r3, [r0, #48]	; 0x30
   1c802:	cbz	r3, 1c80a <btrfs_release_all_roots@@Base+0xe>
   1c804:	ldr	r0, [r3, #0]
   1c806:	bl	16bc8 <free_extent_buffer@@Base>
   1c80a:	ldr	r3, [r4, #44]	; 0x2c
   1c80c:	cbz	r3, 1c814 <btrfs_release_all_roots@@Base+0x18>
   1c80e:	ldr	r0, [r3, #0]
   1c810:	bl	16bc8 <free_extent_buffer@@Base>
   1c814:	ldr	r3, [r4, #40]	; 0x28
   1c816:	cbz	r3, 1c81e <btrfs_release_all_roots@@Base+0x22>
   1c818:	ldr	r0, [r3, #0]
   1c81a:	bl	16bc8 <free_extent_buffer@@Base>
   1c81e:	ldr	r3, [r4, #36]	; 0x24
   1c820:	cbz	r3, 1c828 <btrfs_release_all_roots@@Base+0x2c>
   1c822:	ldr	r0, [r3, #0]
   1c824:	bl	16bc8 <free_extent_buffer@@Base>
   1c828:	ldr	r3, [r4, #24]
   1c82a:	cbz	r3, 1c832 <btrfs_release_all_roots@@Base+0x36>
   1c82c:	ldr	r0, [r3, #0]
   1c82e:	bl	16bc8 <free_extent_buffer@@Base>
   1c832:	ldr	r3, [r4, #28]
   1c834:	cbz	r3, 1c83c <btrfs_release_all_roots@@Base+0x40>
   1c836:	ldr	r0, [r3, #0]
   1c838:	bl	16bc8 <free_extent_buffer@@Base>
   1c83c:	ldr	r3, [r4, #60]	; 0x3c
   1c83e:	cbz	r3, 1c846 <btrfs_release_all_roots@@Base+0x4a>
   1c840:	ldr	r0, [r3, #0]
   1c842:	bl	16bc8 <free_extent_buffer@@Base>
   1c846:	ldr	r3, [r4, #32]
   1c848:	cbz	r3, 1c850 <btrfs_release_all_roots@@Base+0x54>
   1c84a:	ldr	r0, [r3, #0]
   1c84c:	bl	16bc8 <free_extent_buffer@@Base>
   1c850:	ldr	r3, [r4, #52]	; 0x34
   1c852:	cbz	r3, 1c85e <btrfs_release_all_roots@@Base+0x62>
   1c854:	ldmia.w	sp!, {r4, lr}
   1c858:	ldr	r0, [r3, #0]
   1c85a:	b.w	16bc8 <free_extent_buffer@@Base>
   1c85e:	pop	{r4, pc}

0001c860 <btrfs_cleanup_all_caches@@Base>:
   1c860:	push	{r3, r4, r5, lr}
   1c862:	add.w	r5, r0, #344	; 0x158
   1c866:	mov	r4, r0
   1c868:	ldr.w	r0, [r4, #344]	; 0x158
   1c86c:	cmp	r0, r5
   1c86e:	bne.n	1c8a8 <btrfs_cleanup_all_caches@@Base+0x48>
   1c870:	ldr	r1, [pc, #72]	; (1c8bc <btrfs_cleanup_all_caches@@Base+0x5c>)
   1c872:	add.w	r0, r4, #228	; 0xe4
   1c876:	add	r1, pc
   1c878:	bl	16066 <cache_tree_free_extents@@Base>
   1c87c:	add.w	r0, r4, #64	; 0x40
   1c880:	bl	16bd0 <extent_io_tree_cleanup@@Base>
   1c884:	add.w	r0, r4, #96	; 0x60
   1c888:	bl	16bd0 <extent_io_tree_cleanup@@Base>
   1c88c:	add.w	r0, r4, #128	; 0x80
   1c890:	bl	16bd0 <extent_io_tree_cleanup@@Base>
   1c894:	add.w	r0, r4, #160	; 0xa0
   1c898:	bl	16bd0 <extent_io_tree_cleanup@@Base>
   1c89c:	add.w	r0, r4, #192	; 0xc0
   1c8a0:	ldmia.w	sp!, {r3, r4, r5, lr}
   1c8a4:	b.w	16bd0 <extent_io_tree_cleanup@@Base>
   1c8a8:	ldrd	r2, r3, [r0]
   1c8ac:	str	r3, [r2, #4]
   1c8ae:	str	r2, [r3, #0]
   1c8b0:	strd	r0, r0, [r0]
   1c8b4:	subs	r0, #68	; 0x44
   1c8b6:	bl	16bc8 <free_extent_buffer@@Base>
   1c8ba:	b.n	1c868 <btrfs_cleanup_all_caches@@Base+0x8>
   1c8bc:	bl	ffd588be <__bss_end__@@Base+0xffcf25ce>

0001c8c0 <btrfs_scan_fs_devices@@Base>:
   1c8c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8c4:	mov	fp, r2
   1c8c6:	ldr	r2, [pc, #220]	; (1c9a4 <btrfs_scan_fs_devices@@Base+0xe4>)
   1c8c8:	sub	sp, #36	; 0x24
   1c8ca:	ldr	r3, [pc, #220]	; (1c9a8 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c8cc:	mov	r7, r0
   1c8ce:	add	r2, pc
   1c8d0:	ldrd	r4, r5, [sp, #72]	; 0x48
   1c8d4:	mov	sl, r1
   1c8d6:	ldr	r6, [pc, #212]	; (1c9ac <btrfs_scan_fs_devices@@Base+0xec>)
   1c8d8:	ldr	r3, [r2, r3]
   1c8da:	movs	r2, #0
   1c8dc:	add	r6, pc
   1c8de:	ldr	r3, [r3, #0]
   1c8e0:	str	r3, [sp, #28]
   1c8e2:	mov.w	r3, #0
   1c8e6:	orrs.w	r3, r4, r5
   1c8ea:	mov.w	r3, #2
   1c8ee:	str	r3, [sp, #0]
   1c8f0:	mov.w	r3, #0
   1c8f4:	itt	eq
   1c8f6:	moveq.w	r4, #65536	; 0x10000
   1c8fa:	moveq	r5, #0
   1c8fc:	blx	8770 <lseek64@plt>
   1c900:	cmp	r0, #0
   1c902:	mov	r8, r0
   1c904:	sbcs.w	r3, r1, #0
   1c908:	mov	r9, r1
   1c90a:	bge.n	1c928 <btrfs_scan_fs_devices@@Base+0x68>
   1c90c:	blx	8938 <__errno_location@plt>
   1c910:	ldr	r4, [r0, #0]
   1c912:	negs	r4, r4
   1c914:	ldr	r2, [pc, #152]	; (1c9b0 <btrfs_scan_fs_devices@@Base+0xf0>)
   1c916:	ldr	r3, [pc, #144]	; (1c9a8 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c918:	add	r2, pc
   1c91a:	ldr	r3, [r2, r3]
   1c91c:	ldr	r2, [r3, #0]
   1c91e:	ldr	r3, [sp, #28]
   1c920:	eors	r2, r3
   1c922:	beq.n	1c99a <btrfs_scan_fs_devices@@Base+0xda>
   1c924:	blx	86b8 <__stack_chk_fail@plt>
   1c928:	movs	r3, #0
   1c92a:	movs	r2, #0
   1c92c:	str	r3, [sp, #0]
   1c92e:	mov	r0, r7
   1c930:	movs	r3, #0
   1c932:	blx	8770 <lseek64@plt>
   1c936:	cmp	r9, r5
   1c938:	it	eq
   1c93a:	cmpeq	r8, r4
   1c93c:	bcs.n	1c954 <btrfs_scan_fs_devices@@Base+0x94>
   1c93e:	ldr	r0, [pc, #116]	; (1c9b4 <btrfs_scan_fs_devices@@Base+0xf4>)
   1c940:	mov	r2, r4
   1c942:	mov	r3, r5
   1c944:	strd	r8, r9, [sp]
   1c948:	add	r0, pc
   1c94a:	mvn.w	r4, #21
   1c94e:	bl	17424 <__btrfs_error@@Base>
   1c952:	b.n	1c914 <btrfs_scan_fs_devices@@Base+0x54>
   1c954:	ldr	r3, [sp, #80]	; 0x50
   1c956:	mov	r2, fp
   1c958:	strd	r4, r5, [sp]
   1c95c:	mov	r1, sl
   1c95e:	mov	r0, r7
   1c960:	str	r3, [sp, #8]
   1c962:	add	r3, sp, #16
   1c964:	bl	28094 <btrfs_scan_one_device@@Base>
   1c968:	mov	r4, r0
   1c96a:	cbz	r0, 1c980 <btrfs_scan_fs_devices@@Base+0xc0>
   1c96c:	ldr	r3, [pc, #72]	; (1c9b8 <btrfs_scan_fs_devices@@Base+0xf8>)
   1c96e:	movs	r1, #1
   1c970:	ldr	r2, [pc, #72]	; (1c9bc <btrfs_scan_fs_devices@@Base+0xfc>)
   1c972:	ldr	r0, [r6, r3]
   1c974:	add	r2, pc
   1c976:	mov	r3, sl
   1c978:	ldr	r0, [r0, #0]
   1c97a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1c97e:	b.n	1c914 <btrfs_scan_fs_devices@@Base+0x54>
   1c980:	ldr	r3, [sp, #84]	; 0x54
   1c982:	cmp	r3, #0
   1c984:	bne.n	1c914 <btrfs_scan_fs_devices@@Base+0x54>
   1c986:	ldrd	r2, r3, [sp, #16]
   1c98a:	cmp	r3, #0
   1c98c:	it	eq
   1c98e:	cmpeq	r2, #1
   1c990:	beq.n	1c914 <btrfs_scan_fs_devices@@Base+0x54>
   1c992:	bl	2f4f0 <btrfs_scan_devices@@Base>
   1c996:	mov	r4, r0
   1c998:	b.n	1c914 <btrfs_scan_fs_devices@@Base+0x54>
   1c99a:	mov	r0, r4
   1c99c:	add	sp, #36	; 0x24
   1c99e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9a2:	nop
   1c9a4:	strh	r2, [r7, #36]	; 0x24
   1c9a6:	movs	r4, r0
   1c9a8:	lsls	r4, r4, #8
   1c9aa:	movs	r0, r0
   1c9ac:	strh	r4, [r5, #36]	; 0x24
   1c9ae:	movs	r4, r0
   1c9b0:	strh	r0, [r6, #34]	; 0x22
   1c9b2:	movs	r4, r0
   1c9b4:	lsls	r7, r7, #7
   1c9b6:	movs	r2, r0
   1c9b8:	lsls	r4, r6, #8
   1c9ba:	movs	r0, r0
   1c9bc:	lsls	r2, r1, #8
   1c9be:	movs	r2, r0

0001c9c0 <btrfs_check_super@@Base>:
   1c9c0:	ldr	r2, [pc, #580]	; (1cc08 <btrfs_check_super@@Base+0x248>)
   1c9c2:	ldr	r3, [pc, #584]	; (1cc0c <btrfs_check_super@@Base+0x24c>)
   1c9c4:	add	r2, pc
   1c9c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c9ca:	sub	sp, #132	; 0x84
   1c9cc:	ldr	r3, [r2, r3]
   1c9ce:	mov	r4, r0
   1c9d0:	mov	r7, r1
   1c9d2:	ldr	r3, [r3, #0]
   1c9d4:	str	r3, [sp, #124]	; 0x7c
   1c9d6:	mov.w	r3, #0
   1c9da:	ldr	r2, [r0, #64]	; 0x40
   1c9dc:	ldr	r3, [r0, #68]	; 0x44
   1c9de:	add	r1, pc, #544	; (adr r1, 1cc00 <btrfs_check_super@@Base+0x240>)
   1c9e0:	ldrd	r0, r1, [r1]
   1c9e4:	cmp	r3, r1
   1c9e6:	it	eq
   1c9e8:	cmpeq	r2, r0
   1c9ea:	bne.n	1c9fa <btrfs_check_super@@Base+0x3a>
   1c9ec:	lsls	r3, r7, #30
   1c9ee:	bmi.n	1c9fa <btrfs_check_super@@Base+0x3a>
   1c9f0:	ldr	r0, [pc, #540]	; (1cc10 <btrfs_check_super@@Base+0x250>)
   1c9f2:	add	r0, pc
   1c9f4:	bl	17424 <__btrfs_error@@Base>
   1c9f8:	b.n	1ca10 <btrfs_check_super@@Base+0x50>
   1c9fa:	ldrh.w	r9, [r4, #196]	; 0xc4
   1c9fe:	bl	17ddc <btrfs_super_num_csums@@Base>
   1ca02:	cmp	r9, r0
   1ca04:	bcc.n	1ca2a <btrfs_check_super@@Base+0x6a>
   1ca06:	ldr	r0, [pc, #524]	; (1cc14 <btrfs_check_super@@Base+0x254>)
   1ca08:	mov	r1, r9
   1ca0a:	add	r0, pc
   1ca0c:	bl	17424 <__btrfs_error@@Base>
   1ca10:	mvn.w	r5, #4
   1ca14:	ldr	r2, [pc, #512]	; (1cc18 <btrfs_check_super@@Base+0x258>)
   1ca16:	ldr	r3, [pc, #500]	; (1cc0c <btrfs_check_super@@Base+0x24c>)
   1ca18:	add	r2, pc
   1ca1a:	ldr	r3, [r2, r3]
   1ca1c:	ldr	r2, [r3, #0]
   1ca1e:	ldr	r3, [sp, #124]	; 0x7c
   1ca20:	eors	r2, r3
   1ca22:	beq.w	1cbf6 <btrfs_check_super@@Base+0x236>
   1ca26:	blx	86b8 <__stack_chk_fail@plt>
   1ca2a:	mov	r0, r4
   1ca2c:	add	r5, sp, #12
   1ca2e:	bl	17db8 <btrfs_super_csum_size@@Base>
   1ca32:	add.w	r6, r4, #32
   1ca36:	mov	r2, r5
   1ca38:	mov.w	r3, #4064	; 0xfe0
   1ca3c:	mov	r1, r6
   1ca3e:	mov	r8, r0
   1ca40:	mov	r0, r9
   1ca42:	bl	1bfee <btrfs_csum_data@@Base>
   1ca46:	mov	r0, r5
   1ca48:	mov	r2, r8
   1ca4a:	mov	r1, r4
   1ca4c:	blx	8650 <memcmp@plt+0x4>
   1ca50:	mov	r5, r0
   1ca52:	cbz	r0, 1ca5a <btrfs_check_super@@Base+0x9a>
   1ca54:	ldr	r0, [pc, #452]	; (1cc1c <btrfs_check_super@@Base+0x25c>)
   1ca56:	add	r0, pc
   1ca58:	b.n	1c9f4 <btrfs_check_super@@Base+0x34>
   1ca5a:	ldrb.w	r1, [r4, #198]	; 0xc6
   1ca5e:	cmp	r1, #7
   1ca60:	bls.n	1ca6e <btrfs_check_super@@Base+0xae>
   1ca62:	ldr	r0, [pc, #444]	; (1cc20 <btrfs_check_super@@Base+0x260>)
   1ca64:	movs	r2, #8
   1ca66:	add	r0, pc
   1ca68:	bl	17424 <__btrfs_error@@Base>
   1ca6c:	b.n	1caa4 <btrfs_check_super@@Base+0xe4>
   1ca6e:	ldrb.w	r1, [r4, #199]	; 0xc7
   1ca72:	cmp	r1, #7
   1ca74:	bls.n	1ca7e <btrfs_check_super@@Base+0xbe>
   1ca76:	ldr	r0, [pc, #428]	; (1cc24 <btrfs_check_super@@Base+0x264>)
   1ca78:	movs	r2, #8
   1ca7a:	add	r0, pc
   1ca7c:	b.n	1ca68 <btrfs_check_super@@Base+0xa8>
   1ca7e:	ldrb.w	r1, [r4, #200]	; 0xc8
   1ca82:	cmp	r1, #7
   1ca84:	bls.n	1ca8e <btrfs_check_super@@Base+0xce>
   1ca86:	ldr	r0, [pc, #416]	; (1cc28 <btrfs_check_super@@Base+0x268>)
   1ca88:	movs	r2, #8
   1ca8a:	add	r0, pc
   1ca8c:	b.n	1ca68 <btrfs_check_super@@Base+0xa8>
   1ca8e:	ldr	r2, [r4, #80]	; 0x50
   1ca90:	mov	r1, r5
   1ca92:	ldr	r3, [r4, #84]	; 0x54
   1ca94:	ubfx	r0, r2, #0, #12
   1ca98:	orrs	r1, r0
   1ca9a:	beq.n	1caaa <btrfs_check_super@@Base+0xea>
   1ca9c:	ldr	r0, [pc, #396]	; (1cc2c <btrfs_check_super@@Base+0x26c>)
   1ca9e:	add	r0, pc
   1caa0:	bl	17424 <__btrfs_error@@Base>
   1caa4:	ldr	r0, [pc, #392]	; (1cc30 <btrfs_check_super@@Base+0x270>)
   1caa6:	add	r0, pc
   1caa8:	b.n	1c9f4 <btrfs_check_super@@Base+0x34>
   1caaa:	ldr	r2, [r4, #88]	; 0x58
   1caac:	mov	r1, r5
   1caae:	ldr	r3, [r4, #92]	; 0x5c
   1cab0:	ubfx	r0, r2, #0, #12
   1cab4:	orrs	r1, r0
   1cab6:	beq.n	1cabe <btrfs_check_super@@Base+0xfe>
   1cab8:	ldr	r0, [pc, #376]	; (1cc34 <btrfs_check_super@@Base+0x274>)
   1caba:	add	r0, pc
   1cabc:	b.n	1caa0 <btrfs_check_super@@Base+0xe0>
   1cabe:	ldr	r2, [r4, #96]	; 0x60
   1cac0:	mov	r1, r5
   1cac2:	ldr	r3, [r4, #100]	; 0x64
   1cac4:	ubfx	r0, r2, #0, #12
   1cac8:	orrs	r1, r0
   1caca:	beq.n	1cad2 <btrfs_check_super@@Base+0x112>
   1cacc:	ldr	r0, [pc, #360]	; (1cc38 <btrfs_check_super@@Base+0x278>)
   1cace:	add	r0, pc
   1cad0:	b.n	1caa0 <btrfs_check_super@@Base+0xe0>
   1cad2:	ldr.w	r1, [r4, #148]	; 0x94
   1cad6:	cmp.w	r1, #4096	; 0x1000
   1cada:	bcs.n	1cae6 <btrfs_check_super@@Base+0x126>
   1cadc:	ldr	r0, [pc, #348]	; (1cc3c <btrfs_check_super@@Base+0x27c>)
   1cade:	add	r0, pc
   1cae0:	bl	17424 <__btrfs_error@@Base>
   1cae4:	b.n	1caa4 <btrfs_check_super@@Base+0xe4>
   1cae6:	ubfx	r3, r1, #0, #12
   1caea:	cbz	r3, 1caf2 <btrfs_check_super@@Base+0x132>
   1caec:	ldr	r0, [pc, #336]	; (1cc40 <btrfs_check_super@@Base+0x280>)
   1caee:	add	r0, pc
   1caf0:	b.n	1cae0 <btrfs_check_super@@Base+0x120>
   1caf2:	ldr.w	ip, [r4, #144]	; 0x90
   1caf6:	cmp.w	ip, #4096	; 0x1000
   1cafa:	bcs.n	1cb04 <btrfs_check_super@@Base+0x144>
   1cafc:	ldr	r0, [pc, #324]	; (1cc44 <btrfs_check_super@@Base+0x284>)
   1cafe:	mov	r1, ip
   1cb00:	add	r0, pc
   1cb02:	b.n	1cae0 <btrfs_check_super@@Base+0x120>
   1cb04:	ubfx	r3, ip, #0, #12
   1cb08:	cbz	r3, 1cb12 <btrfs_check_super@@Base+0x152>
   1cb0a:	ldr	r0, [pc, #316]	; (1cc48 <btrfs_check_super@@Base+0x288>)
   1cb0c:	mov	r1, ip
   1cb0e:	add	r0, pc
   1cb10:	b.n	1cae0 <btrfs_check_super@@Base+0x120>
   1cb12:	ldr	r2, [r4, #112]	; 0x70
   1cb14:	ldr	r3, [r4, #116]	; 0x74
   1cb16:	orrs	r3, r2
   1cb18:	bne.n	1cb24 <btrfs_check_super@@Base+0x164>
   1cb1a:	ldr	r0, [pc, #304]	; (1cc4c <btrfs_check_super@@Base+0x28c>)
   1cb1c:	add	r0, pc
   1cb1e:	bl	17424 <__btrfs_error@@Base>
   1cb22:	b.n	1caa4 <btrfs_check_super@@Base+0xe4>
   1cb24:	movs	r0, #6
   1cb26:	ldr	r3, [r4, #124]	; 0x7c
   1cb28:	muls	r0, r1
   1cb2a:	ldr	r2, [r4, #120]	; 0x78
   1cb2c:	movs	r1, #0
   1cb2e:	cmp	r3, r1
   1cb30:	it	eq
   1cb32:	cmpeq	r2, r0
   1cb34:	bcs.n	1cb3c <btrfs_check_super@@Base+0x17c>
   1cb36:	ldr	r0, [pc, #280]	; (1cc50 <btrfs_check_super@@Base+0x290>)
   1cb38:	add	r0, pc
   1cb3a:	b.n	1caa0 <btrfs_check_super@@Base+0xe0>
   1cb3c:	ldr.w	r1, [r4, #156]	; 0x9c
   1cb40:	cmp.w	r1, #4096	; 0x1000
   1cb44:	beq.n	1cb50 <btrfs_check_super@@Base+0x190>
   1cb46:	cmp	r1, ip
   1cb48:	beq.n	1cb50 <btrfs_check_super@@Base+0x190>
   1cb4a:	ldr	r0, [pc, #264]	; (1cc54 <btrfs_check_super@@Base+0x294>)
   1cb4c:	add	r0, pc
   1cb4e:	b.n	1cae0 <btrfs_check_super@@Base+0x120>
   1cb50:	ldr.w	r1, [r4, #188]	; 0xbc
   1cb54:	movs	r3, #0
   1cb56:	and.w	r2, r1, #1024	; 0x400
   1cb5a:	orrs	r3, r2
   1cb5c:	mov.w	r2, #16
   1cb60:	ite	ne
   1cb62:	addwne	r0, r4, #571	; 0x23b
   1cb66:	moveq	r0, r6
   1cb68:	addw	r6, r4, #283	; 0x11b
   1cb6c:	mov	r1, r6
   1cb6e:	blx	8650 <memcmp@plt+0x4>
   1cb72:	cbz	r0, 1cb9e <btrfs_check_super@@Base+0x1de>
   1cb74:	add	r2, sp, #44	; 0x2c
   1cb76:	addw	r0, r4, #571	; 0x23b
   1cb7a:	str	r2, [sp, #4]
   1cb7c:	mov	r1, r2
   1cb7e:	blx	8580 <uuid_unparse@plt>
   1cb82:	add	r1, sp, #84	; 0x54
   1cb84:	mov	r0, r6
   1cb86:	str	r1, [sp, #0]
   1cb88:	blx	8580 <uuid_unparse@plt>
   1cb8c:	tst.w	r7, #4
   1cb90:	ldrd	r1, r2, [sp]
   1cb94:	beq.n	1cbce <btrfs_check_super@@Base+0x20e>
   1cb96:	ldr	r0, [pc, #192]	; (1cc58 <btrfs_check_super@@Base+0x298>)
   1cb98:	add	r0, pc
   1cb9a:	bl	173a8 <__btrfs_warning@@Base>
   1cb9e:	ldr.w	r3, [r4, #140]	; 0x8c
   1cba2:	movs	r1, #0
   1cba4:	ldr.w	r2, [r4, #136]	; 0x88
   1cba8:	mov.w	r0, #2147483648	; 0x80000000
   1cbac:	cmp	r1, r3
   1cbae:	it	eq
   1cbb0:	cmpeq	r0, r2
   1cbb2:	bcs.n	1cbbc <btrfs_check_super@@Base+0x1fc>
   1cbb4:	ldr	r0, [pc, #164]	; (1cc5c <btrfs_check_super@@Base+0x29c>)
   1cbb6:	add	r0, pc
   1cbb8:	bl	173a8 <__btrfs_warning@@Base>
   1cbbc:	ldr.w	r2, [r4, #136]	; 0x88
   1cbc0:	ldr.w	r3, [r4, #140]	; 0x8c
   1cbc4:	orrs	r3, r2
   1cbc6:	bne.n	1cbd4 <btrfs_check_super@@Base+0x214>
   1cbc8:	ldr	r0, [pc, #148]	; (1cc60 <btrfs_check_super@@Base+0x2a0>)
   1cbca:	add	r0, pc
   1cbcc:	b.n	1cb1e <btrfs_check_super@@Base+0x15e>
   1cbce:	ldr	r0, [pc, #148]	; (1cc64 <btrfs_check_super@@Base+0x2a4>)
   1cbd0:	add	r0, pc
   1cbd2:	b.n	1ca68 <btrfs_check_super@@Base+0xa8>
   1cbd4:	ldr.w	r1, [r4, #160]	; 0xa0
   1cbd8:	cmp.w	r1, #2048	; 0x800
   1cbdc:	bls.n	1cbe8 <btrfs_check_super@@Base+0x228>
   1cbde:	ldr	r0, [pc, #136]	; (1cc68 <btrfs_check_super@@Base+0x2a8>)
   1cbe0:	mov.w	r2, #2048	; 0x800
   1cbe4:	add	r0, pc
   1cbe6:	b.n	1ca68 <btrfs_check_super@@Base+0xa8>
   1cbe8:	cmp	r1, #96	; 0x60
   1cbea:	bhi.w	1ca14 <btrfs_check_super@@Base+0x54>
   1cbee:	ldr	r0, [pc, #124]	; (1cc6c <btrfs_check_super@@Base+0x2ac>)
   1cbf0:	movs	r2, #97	; 0x61
   1cbf2:	add	r0, pc
   1cbf4:	b.n	1ca68 <btrfs_check_super@@Base+0xa8>
   1cbf6:	mov	r0, r5
   1cbf8:	add	sp, #132	; 0x84
   1cbfa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1cbfe:	nop
   1cc00:	tst	r1, r4
   1cc02:	strh	r0, [r1, r1]
   1cc04:	strh	r6, [r4, r5]
   1cc06:	ldr	r5, [pc, #380]	; (1cd84 <btrfs_read_dev_super@@Base+0x114>)
   1cc08:	strh	r4, [r0, #30]
   1cc0a:	movs	r4, r0
   1cc0c:	lsls	r4, r4, #8
   1cc0e:	movs	r0, r0
   1cc10:	lsls	r0, r5, #6
   1cc12:	movs	r2, r0
   1cc14:	lsls	r7, r5, #6
   1cc16:	movs	r2, r0
   1cc18:	strh	r0, [r6, #26]
   1cc1a:	movs	r4, r0
   1cc1c:	lsls	r5, r0, #6
   1cc1e:	movs	r2, r0
   1cc20:	lsls	r2, r2, #6
   1cc22:	movs	r2, r0
   1cc24:	lsls	r0, r4, #6
   1cc26:	movs	r2, r0
   1cc28:	lsls	r3, r6, #6
   1cc2a:	movs	r2, r0
   1cc2c:	lsls	r0, r0, #7
   1cc2e:	movs	r2, r0
   1cc30:	lsls	r3, r4, #14
   1cc32:	movs	r2, r0
   1cc34:	lsls	r4, r0, #7
   1cc36:	movs	r2, r0
   1cc38:	lsls	r1, r2, #7
   1cc3a:	movs	r2, r0
   1cc3c:	lsls	r0, r4, #7
   1cc3e:	movs	r2, r0
   1cc40:	lsls	r6, r5, #7
   1cc42:	movs	r2, r0
   1cc44:	lsls	r3, r6, #7
   1cc46:	movs	r2, r0
   1cc48:	lsls	r5, r0, #8
   1cc4a:	movs	r2, r0
   1cc4c:	lsls	r0, r2, #8
   1cc4e:	movs	r2, r0
   1cc50:	lsls	r2, r1, #8
   1cc52:	movs	r2, r0
   1cc54:	lsls	r6, r1, #8
   1cc56:	movs	r2, r0
   1cc58:	lsls	r0, r3, #7
   1cc5a:	movs	r2, r0
   1cc5c:	lsls	r0, r2, #8
   1cc5e:	movs	r2, r0
   1cc60:	lsls	r7, r3, #8
   1cc62:	movs	r2, r0
   1cc64:	lsls	r2, r1, #7
   1cc66:	movs	r2, r0
   1cc68:	lsls	r4, r3, #8
   1cc6a:	movs	r2, r0
   1cc6c:	lsls	r1, r6, #8
   1cc6e:	movs	r2, r0

0001cc70 <btrfs_read_dev_super@@Base>:
   1cc70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc74:	mov	sl, r2
   1cc76:	vpush	{d8-d9}
   1cc7a:	mov	fp, r3
   1cc7c:	ldr	r2, [pc, #496]	; (1ce70 <btrfs_read_dev_super@@Base+0x200>)
   1cc7e:	vmov	s16, r1
   1cc82:	ldr	r1, [pc, #496]	; (1ce74 <btrfs_read_dev_super@@Base+0x204>)
   1cc84:	sub.w	sp, sp, #4160	; 0x1040
   1cc88:	vmov	s17, r0
   1cc8c:	add	r1, pc
   1cc8e:	sub	sp, #12
   1cc90:	add.w	r3, sp, #4160	; 0x1040
   1cc94:	add	r4, sp, #68	; 0x44
   1cc96:	ldr	r2, [r1, r2]
   1cc98:	adds	r3, #4
   1cc9a:	ldr	r2, [r2, #0]
   1cc9c:	str	r2, [r3, #0]
   1cc9e:	mov.w	r2, #0
   1cca2:	add.w	r3, sp, #4224	; 0x1080
   1cca6:	ldr	r3, [r3, #0]
   1cca8:	tst.w	r3, #1
   1ccac:	ite	ne
   1ccae:	movne	r3, #3
   1ccb0:	moveq	r3, #1
   1ccb2:	cmp.w	fp, #0
   1ccb6:	str	r3, [sp, #28]
   1ccb8:	it	eq
   1ccba:	cmpeq.w	sl, #65536	; 0x10000
   1ccbe:	beq.w	1cdfe <btrfs_read_dev_super@@Base+0x18e>
   1ccc2:	mov.w	r2, #4096	; 0x1000
   1ccc6:	mov	r1, r4
   1ccc8:	strd	sl, fp, [sp]
   1cccc:	blx	87b8 <pread64@plt>
   1ccd0:	cmp	r0, #0
   1ccd2:	bge.n	1ccf8 <btrfs_read_dev_super@@Base+0x88>
   1ccd4:	blx	8938 <__errno_location@plt>
   1ccd8:	ldr	r0, [r0, #0]
   1ccda:	negs	r0, r0
   1ccdc:	ldr	r1, [pc, #408]	; (1ce78 <btrfs_read_dev_super@@Base+0x208>)
   1ccde:	add.w	r3, sp, #4160	; 0x1040
   1cce2:	ldr	r2, [pc, #396]	; (1ce70 <btrfs_read_dev_super@@Base+0x200>)
   1cce4:	adds	r3, #4
   1cce6:	add	r1, pc
   1cce8:	ldr	r2, [r1, r2]
   1ccea:	ldr	r1, [r2, #0]
   1ccec:	ldr	r2, [r3, #0]
   1ccee:	eors	r1, r2
   1ccf0:	beq.w	1ce60 <btrfs_read_dev_super@@Base+0x1f0>
   1ccf4:	blx	86b8 <__stack_chk_fail@plt>
   1ccf8:	cmp.w	r0, #4096	; 0x1000
   1ccfc:	blt.w	1ce54 <btrfs_read_dev_super@@Base+0x1e4>
   1cd00:	ldrd	r2, r3, [r4, #48]	; 0x30
   1cd04:	cmp	fp, r3
   1cd06:	it	eq
   1cd08:	cmpeq	sl, r2
   1cd0a:	bne.w	1ce5a <btrfs_read_dev_super@@Base+0x1ea>
   1cd0e:	add.w	r3, sp, #4224	; 0x1080
   1cd12:	mov	r0, r4
   1cd14:	ldr	r1, [r3, #0]
   1cd16:	bl	1c9c0 <btrfs_check_super@@Base>
   1cd1a:	cmp	r0, #0
   1cd1c:	blt.n	1ccdc <btrfs_read_dev_super@@Base+0x6c>
   1cd1e:	vmov	r0, s16
   1cd22:	mov.w	r2, #4096	; 0x1000
   1cd26:	mov	r1, r4
   1cd28:	blx	8628 <memcpy@plt+0x4>
   1cd2c:	movs	r0, #0
   1cd2e:	b.n	1ccdc <btrfs_read_dev_super@@Base+0x6c>
   1cd30:	movs	r3, #12
   1cd32:	mov.w	r2, #16384	; 0x4000
   1cd36:	muls	r3, r5
   1cd38:	sub.w	r0, r3, #32
   1cd3c:	rsb	r1, r3, #32
   1cd40:	lsl.w	fp, r2, r0
   1cd44:	lsr.w	r1, r2, r1
   1cd48:	orr.w	fp, fp, r1
   1cd4c:	lsl.w	sl, r2, r3
   1cd50:	vmov	r0, s17
   1cd54:	mov.w	r2, #4096	; 0x1000
   1cd58:	mov	r1, r4
   1cd5a:	strd	sl, fp, [sp]
   1cd5e:	blx	87b8 <pread64@plt>
   1cd62:	cmp.w	r0, #4096	; 0x1000
   1cd66:	blt.n	1ce44 <btrfs_read_dev_super@@Base+0x1d4>
   1cd68:	ldrd	r2, r3, [r4, #48]	; 0x30
   1cd6c:	cmp	fp, r3
   1cd6e:	it	eq
   1cd70:	cmpeq	sl, r2
   1cd72:	bne.n	1ce3a <btrfs_read_dev_super@@Base+0x1ca>
   1cd74:	ldrd	r2, r3, [r4, #64]	; 0x40
   1cd78:	orrs	r3, r2
   1cd7a:	bne.n	1cd80 <btrfs_read_dev_super@@Base+0x110>
   1cd7c:	cmp	r5, #0
   1cd7e:	beq.n	1ce44 <btrfs_read_dev_super@@Base+0x1d4>
   1cd80:	add.w	r3, sp, #4224	; 0x1080
   1cd84:	mov	r0, r4
   1cd86:	ldr	r1, [r3, #0]
   1cd88:	bl	1c9c0 <btrfs_check_super@@Base>
   1cd8c:	cmp	r0, #0
   1cd8e:	bne.n	1ce3a <btrfs_read_dev_super@@Base+0x1ca>
   1cd90:	cmp.w	r8, #0
   1cd94:	bne.n	1ce16 <btrfs_read_dev_super@@Base+0x1a6>
   1cd96:	ldr.w	r3, [r4, #188]	; 0xbc
   1cd9a:	and.w	r3, r3, #1024	; 0x400
   1cd9e:	strd	r3, r8, [sp, #16]
   1cda2:	ldrd	r2, r3, [sp, #16]
   1cda6:	orrs	r3, r2
   1cda8:	beq.n	1cdca <btrfs_read_dev_super@@Base+0x15a>
   1cdaa:	addw	r3, r6, #567	; 0x237
   1cdae:	sub.w	r7, r6, #20
   1cdb2:	addw	ip, r6, #583	; 0x247
   1cdb6:	ldr	r0, [r3, #0]
   1cdb8:	adds	r3, #8
   1cdba:	ldr.w	r1, [r3, #-4]
   1cdbe:	cmp	r3, ip
   1cdc0:	mov	r2, r7
   1cdc2:	stmia	r2!, {r0, r1}
   1cdc4:	mov	r7, r2
   1cdc6:	bne.n	1cdb6 <btrfs_read_dev_super@@Base+0x146>
   1cdc8:	movs	r7, #1
   1cdca:	add	r3, sp, #100	; 0x64
   1cdcc:	add.w	ip, sp, #36	; 0x24
   1cdd0:	ldmia	r3, {r0, r1, r2, r3}
   1cdd2:	stmia.w	ip, {r0, r1, r2, r3}
   1cdd6:	ldrd	r8, r9, [r4, #72]	; 0x48
   1cdda:	ldrd	r2, r3, [sp, #8]
   1cdde:	cmp	r3, r9
   1cde0:	it	eq
   1cde2:	cmpeq	r2, r8
   1cde4:	bcs.n	1cdf8 <btrfs_read_dev_super@@Base+0x188>
   1cde6:	vmov	r0, s16
   1cdea:	mov.w	r2, #4096	; 0x1000
   1cdee:	mov	r1, r4
   1cdf0:	blx	8628 <memcpy@plt+0x4>
   1cdf4:	strd	r8, r9, [sp, #8]
   1cdf8:	mov.w	r8, #1
   1cdfc:	b.n	1ce3a <btrfs_read_dev_super@@Base+0x1ca>
   1cdfe:	movs	r3, #0
   1ce00:	movs	r2, #0
   1ce02:	strd	r2, r3, [sp, #8]
   1ce06:	add	r3, sp, #100	; 0x64
   1ce08:	movs	r7, #0
   1ce0a:	add	r6, sp, #72	; 0x48
   1ce0c:	vmov	s18, r3
   1ce10:	mov	r5, r7
   1ce12:	mov	r8, r7
   1ce14:	b.n	1cd50 <btrfs_read_dev_super@@Base+0xe0>
   1ce16:	vmov	r1, s18
   1ce1a:	add	r0, sp, #36	; 0x24
   1ce1c:	movs	r2, #16
   1ce1e:	blx	8650 <memcmp@plt+0x4>
   1ce22:	cbnz	r0, 1ce3a <btrfs_read_dev_super@@Base+0x1ca>
   1ce24:	cmp	r7, #0
   1ce26:	beq.n	1cdd6 <btrfs_read_dev_super@@Base+0x166>
   1ce28:	addw	r1, r6, #567	; 0x237
   1ce2c:	sub.w	r0, r6, #20
   1ce30:	movs	r2, #16
   1ce32:	blx	8650 <memcmp@plt+0x4>
   1ce36:	cmp	r0, #0
   1ce38:	beq.n	1cdd6 <btrfs_read_dev_super@@Base+0x166>
   1ce3a:	ldr	r3, [sp, #28]
   1ce3c:	adds	r5, #1
   1ce3e:	cmp	r3, r5
   1ce40:	bne.w	1cd30 <btrfs_read_dev_super@@Base+0xc0>
   1ce44:	ldrd	r3, r2, [sp, #8]
   1ce48:	orrs	r3, r2
   1ce4a:	ite	eq
   1ce4c:	moveq.w	r0, #4294967295	; 0xffffffff
   1ce50:	movne	r0, #0
   1ce52:	b.n	1ccdc <btrfs_read_dev_super@@Base+0x6c>
   1ce54:	mvn.w	r0, #1
   1ce58:	b.n	1ccdc <btrfs_read_dev_super@@Base+0x6c>
   1ce5a:	mvn.w	r0, #4
   1ce5e:	b.n	1ccdc <btrfs_read_dev_super@@Base+0x6c>
   1ce60:	add.w	sp, sp, #4160	; 0x1040
   1ce64:	add	sp, #12
   1ce66:	vpop	{d8-d9}
   1ce6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce6e:	nop
   1ce70:	lsls	r4, r4, #8
   1ce72:	movs	r0, r0
   1ce74:	strh	r4, [r7, #6]
   1ce76:	movs	r4, r0
   1ce78:	strh	r2, [r4, #4]
   1ce7a:	movs	r4, r0

0001ce7c <write_all_supers@@Base>:
   1ce7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce80:	mov	r4, r0
   1ce82:	vpush	{d8}
   1ce86:	ldr	r2, [pc, #1004]	; (1d274 <write_all_supers@@Base+0x3f8>)
   1ce88:	ldr	r3, [pc, #1004]	; (1d278 <write_all_supers@@Base+0x3fc>)
   1ce8a:	add	r2, pc
   1ce8c:	ldr.w	r5, [r0, #308]	; 0x134
   1ce90:	sub	sp, #68	; 0x44
   1ce92:	ldr	r3, [r2, r3]
   1ce94:	ldr.w	r7, [r0, #352]	; 0x160
   1ce98:	mov	r0, r5
   1ce9a:	ldr	r3, [r3, #0]
   1ce9c:	str	r3, [sp, #60]	; 0x3c
   1ce9e:	mov.w	r3, #0
   1cea2:	add.w	r3, r7, #72	; 0x48
   1cea6:	str	r3, [sp, #20]
   1cea8:	bl	1bc62 <btrfs_fs_roots_compare_roots@@Base+0x4>
   1ceac:	addw	r5, r5, #2859	; 0xb2b
   1ceb0:	movs	r3, #168	; 0xa8
   1ceb2:	mla	r3, r3, r0, r5
   1ceb6:	ldr.w	r8, [r3, #8]
   1ceba:	ldr.w	r9, [r3, #12]
   1cebe:	ldr	r3, [r4, #28]
   1cec0:	ldr	r1, [r3, #0]
   1cec2:	ldr.w	r3, [r1, #180]	; 0xb4
   1cec6:	ldr.w	r2, [r1, #176]	; 0xb0
   1ceca:	cmp	r9, r3
   1cecc:	it	eq
   1cece:	cmpeq	r8, r2
   1ced0:	beq.n	1cee2 <write_all_supers@@Base+0x66>
   1ced2:	adds	r0, #1
   1ced4:	negs	r3, r0
   1ced6:	and.w	r0, r0, #3
   1ceda:	and.w	r3, r3, #3
   1cede:	it	pl
   1cee0:	negpl	r0, r3
   1cee2:	movs	r2, #168	; 0xa8
   1cee4:	movs	r1, #0
   1cee6:	mul.w	r6, r2, r0
   1ceea:	adds	r3, r5, r6
   1ceec:	mov	r0, r3
   1ceee:	blx	8978 <memset@plt+0x4>
   1cef2:	ldr	r2, [r4, #28]
   1cef4:	ldr	r2, [r2, #0]
   1cef6:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cefa:	str	r1, [r5, r6]
   1cefc:	str	r2, [r0, #4]
   1cefe:	mov	r3, r0
   1cf00:	ldr	r2, [r4, #28]
   1cf02:	ldr	r2, [r2, #0]
   1cf04:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf08:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf0c:	str	r1, [r0, #8]
   1cf0e:	str	r2, [r0, #12]
   1cf10:	ldr	r2, [r4, #28]
   1cf12:	ldr	r2, [r2, #0]
   1cf14:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf18:	strb.w	r2, [r0, #152]	; 0x98
   1cf1c:	ldr	r2, [r4, #32]
   1cf1e:	ldr	r2, [r2, #0]
   1cf20:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cf24:	str	r1, [r0, #16]
   1cf26:	str	r2, [r0, #20]
   1cf28:	ldr	r2, [r4, #32]
   1cf2a:	ldr	r2, [r2, #0]
   1cf2c:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf30:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf34:	str	r1, [r0, #24]
   1cf36:	str	r2, [r0, #28]
   1cf38:	ldr	r2, [r4, #32]
   1cf3a:	ldr	r2, [r2, #0]
   1cf3c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf40:	strb.w	r2, [r0, #153]	; 0x99
   1cf44:	ldr	r2, [r4, #24]
   1cf46:	ldr	r2, [r2, #0]
   1cf48:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cf4c:	str	r1, [r0, #32]
   1cf4e:	str	r2, [r0, #36]	; 0x24
   1cf50:	ldr	r2, [r4, #24]
   1cf52:	ldr	r2, [r2, #0]
   1cf54:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf58:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf5c:	str	r1, [r0, #40]	; 0x28
   1cf5e:	str	r2, [r0, #44]	; 0x2c
   1cf60:	ldr	r2, [r4, #24]
   1cf62:	ldr	r2, [r2, #0]
   1cf64:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf68:	strb.w	r2, [r0, #154]	; 0x9a
   1cf6c:	ldr	r2, [r4, #20]
   1cf6e:	cbz	r2, 1cf98 <write_all_supers@@Base+0x11c>
   1cf70:	ldr	r2, [r2, #0]
   1cf72:	cbz	r2, 1cf98 <write_all_supers@@Base+0x11c>
   1cf74:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cf78:	str	r1, [r0, #48]	; 0x30
   1cf7a:	str	r2, [r0, #52]	; 0x34
   1cf7c:	ldr	r2, [r4, #20]
   1cf7e:	ldr	r2, [r2, #0]
   1cf80:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf84:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf88:	str	r1, [r0, #56]	; 0x38
   1cf8a:	str	r2, [r0, #60]	; 0x3c
   1cf8c:	ldr	r2, [r4, #20]
   1cf8e:	ldr	r2, [r2, #0]
   1cf90:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf94:	strb.w	r2, [r0, #155]	; 0x9b
   1cf98:	ldr	r2, [r4, #36]	; 0x24
   1cf9a:	add.w	sl, sp, #28
   1cf9e:	ldr	r2, [r2, #0]
   1cfa0:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cfa4:	str	r1, [r3, #64]	; 0x40
   1cfa6:	str	r2, [r3, #68]	; 0x44
   1cfa8:	ldr	r2, [r4, #36]	; 0x24
   1cfaa:	ldr	r2, [r2, #0]
   1cfac:	ldr.w	r1, [r2, #176]	; 0xb0
   1cfb0:	ldr.w	r2, [r2, #180]	; 0xb4
   1cfb4:	str	r1, [r3, #72]	; 0x48
   1cfb6:	str	r2, [r3, #76]	; 0x4c
   1cfb8:	ldr	r2, [r4, #36]	; 0x24
   1cfba:	ldr	r2, [r2, #0]
   1cfbc:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cfc0:	strb.w	r2, [r3, #156]	; 0x9c
   1cfc4:	ldr	r2, [r4, #40]	; 0x28
   1cfc6:	ldr	r2, [r2, #0]
   1cfc8:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cfcc:	str	r1, [r3, #80]	; 0x50
   1cfce:	str	r2, [r3, #84]	; 0x54
   1cfd0:	ldr	r2, [r4, #40]	; 0x28
   1cfd2:	ldr	r2, [r2, #0]
   1cfd4:	ldr.w	r1, [r2, #176]	; 0xb0
   1cfd8:	ldr.w	r2, [r2, #180]	; 0xb4
   1cfdc:	str	r1, [r3, #88]	; 0x58
   1cfde:	str	r2, [r3, #92]	; 0x5c
   1cfe0:	ldr	r2, [r4, #40]	; 0x28
   1cfe2:	ldr	r2, [r2, #0]
   1cfe4:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cfe8:	strb.w	r2, [r3, #157]	; 0x9d
   1cfec:	ldr.w	r2, [r4, #308]	; 0x134
   1cff0:	ldr	r1, [r2, #112]	; 0x70
   1cff2:	ldr	r2, [r2, #116]	; 0x74
   1cff4:	str	r1, [r3, #96]	; 0x60
   1cff6:	str	r2, [r3, #100]	; 0x64
   1cff8:	ldr.w	r2, [r4, #308]	; 0x134
   1cffc:	ldr	r1, [r2, #120]	; 0x78
   1cffe:	ldr	r2, [r2, #124]	; 0x7c
   1d000:	str	r1, [r3, #104]	; 0x68
   1d002:	str	r2, [r3, #108]	; 0x6c
   1d004:	ldr.w	r2, [r4, #308]	; 0x134
   1d008:	ldr.w	r1, [r2, #136]	; 0x88
   1d00c:	ldr.w	r2, [r2, #140]	; 0x8c
   1d010:	str	r1, [r3, #112]	; 0x70
   1d012:	str	r2, [r3, #116]	; 0x74
   1d014:	ldr	r3, [pc, #612]	; (1d27c <write_all_supers@@Base+0x400>)
   1d016:	ldr.w	r6, [r4, #308]	; 0x134
   1d01a:	add	r3, pc
   1d01c:	ldr	r5, [r7, #72]	; 0x48
   1d01e:	vmov	s17, r3
   1d022:	ldr	r3, [sp, #20]
   1d024:	cmp	r5, r3
   1d026:	bne.n	1d02c <write_all_supers@@Base+0x1b0>
   1d028:	movs	r0, #0
   1d02a:	b.n	1d176 <write_all_supers@@Base+0x2fa>
   1d02c:	ldr	r3, [r5, #28]
   1d02e:	cmp	r3, #0
   1d030:	beq.n	1d0fa <write_all_supers@@Base+0x27e>
   1d032:	movs	r2, #0
   1d034:	strb.w	r2, [r6, #245]	; 0xf5
   1d038:	strb.w	r2, [r6, #246]	; 0xf6
   1d03c:	strb.w	r2, [r6, #247]	; 0xf7
   1d040:	strb.w	r2, [r6, #248]	; 0xf8
   1d044:	strb.w	r2, [r6, #249]	; 0xf9
   1d048:	strb.w	r2, [r6, #250]	; 0xfa
   1d04c:	strb.w	r2, [r6, #251]	; 0xfb
   1d050:	strb.w	r2, [r6, #252]	; 0xfc
   1d054:	ldrd	r1, r2, [r5, #104]	; 0x68
   1d058:	str.w	r1, [r6, #237]	; 0xed
   1d05c:	str.w	r2, [r6, #241]	; 0xf1
   1d060:	ldrd	r1, r2, [r5, #64]	; 0x40
   1d064:	str.w	r1, [r6, #201]	; 0xc9
   1d068:	str.w	r2, [r6, #205]	; 0xcd
   1d06c:	ldrd	r1, r2, [r5, #72]	; 0x48
   1d070:	str.w	r1, [r6, #209]	; 0xd1
   1d074:	str.w	r2, [r6, #213]	; 0xd5
   1d078:	ldrd	r1, r2, [r5, #80]	; 0x50
   1d07c:	str.w	r1, [r6, #217]	; 0xd9
   1d080:	add.w	r1, r5, #128	; 0x80
   1d084:	str.w	r2, [r6, #221]	; 0xdd
   1d088:	addw	r2, r6, #267	; 0x10b
   1d08c:	ldr	r3, [r5, #88]	; 0x58
   1d08e:	str.w	r3, [r6, #225]	; 0xe1
   1d092:	ldr	r3, [r5, #92]	; 0x5c
   1d094:	str.w	r3, [r6, #229]	; 0xe5
   1d098:	ldr	r3, [r5, #96]	; 0x60
   1d09a:	str.w	r3, [r6, #233]	; 0xe9
   1d09e:	add.w	r3, r5, #112	; 0x70
   1d0a2:	ldr.w	r0, [r3], #4
   1d0a6:	cmp	r3, r1
   1d0a8:	str.w	r0, [r2], #4
   1d0ac:	bne.n	1d0a2 <write_all_supers@@Base+0x226>
   1d0ae:	ldr.w	r3, [r4, #352]	; 0x160
   1d0b2:	addw	r1, r6, #283	; 0x11b
   1d0b6:	add.w	r2, r3, #16
   1d0ba:	adds	r3, #32
   1d0bc:	ldr.w	r0, [r2], #4
   1d0c0:	cmp	r2, r3
   1d0c2:	str.w	r0, [r1], #4
   1d0c6:	bne.n	1d0bc <write_all_supers@@Base+0x240>
   1d0c8:	ldr	r2, [r6, #60]	; 0x3c
   1d0ca:	ldr	r3, [r6, #56]	; 0x38
   1d0cc:	ldrh.w	fp, [r6, #196]	; 0xc4
   1d0d0:	orr.w	r3, r3, #1
   1d0d4:	str	r2, [r6, #60]	; 0x3c
   1d0d6:	str	r3, [r6, #56]	; 0x38
   1d0d8:	ldr	r0, [r5, #24]
   1d0da:	blx	855c <fsync@plt>
   1d0de:	cmp	r0, #0
   1d0e0:	bge.n	1d0fe <write_all_supers@@Base+0x282>
   1d0e2:	ldr	r0, [pc, #412]	; (1d280 <write_all_supers@@Base+0x404>)
   1d0e4:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d0e8:	add	r0, pc
   1d0ea:	bl	17424 <__btrfs_error@@Base>
   1d0ee:	blx	8938 <__errno_location@plt>
   1d0f2:	ldr	r0, [r0, #0]
   1d0f4:	negs	r0, r0
   1d0f6:	cmp	r0, #0
   1d0f8:	blt.n	1d176 <write_all_supers@@Base+0x2fa>
   1d0fa:	ldr	r5, [r5, #0]
   1d0fc:	b.n	1d022 <write_all_supers@@Base+0x1a6>
   1d0fe:	ldrd	r8, r9, [r4, #320]	; 0x140
   1d102:	cmp.w	r9, #0
   1d106:	it	eq
   1d108:	cmpeq.w	r8, #65536	; 0x10000
   1d10c:	beq.n	1d19e <write_all_supers@@Base+0x322>
   1d10e:	mov	r2, sl
   1d110:	add.w	r1, r6, #32
   1d114:	mov.w	r3, #4064	; 0xfe0
   1d118:	mov	r0, fp
   1d11a:	str.w	r8, [r6, #48]	; 0x30
   1d11e:	mov	r7, sl
   1d120:	str.w	r9, [r6, #52]	; 0x34
   1d124:	bl	1bfee <btrfs_csum_data@@Base>
   1d128:	add.w	ip, sp, #60	; 0x3c
   1d12c:	mov	r2, r6
   1d12e:	mov	r3, r7
   1d130:	adds	r2, #8
   1d132:	ldmia	r3!, {r0, r1}
   1d134:	cmp	r3, ip
   1d136:	str.w	r0, [r2, #-8]
   1d13a:	mov	r7, r3
   1d13c:	str.w	r1, [r2, #-4]
   1d140:	bne.n	1d12e <write_all_supers@@Base+0x2b2>
   1d142:	ldrd	r2, r3, [r4, #320]	; 0x140
   1d146:	ldr.w	r1, [r4, #308]	; 0x134
   1d14a:	strd	r2, r3, [sp]
   1d14e:	mov.w	r2, #4096	; 0x1000
   1d152:	ldr	r0, [r5, #24]
   1d154:	blx	89dc <pwrite64@plt>
   1d158:	cmp.w	r0, #4096	; 0x1000
   1d15c:	beq.n	1d18a <write_all_supers@@Base+0x30e>
   1d15e:	blx	8938 <__errno_location@plt>
   1d162:	movs	r3, #5
   1d164:	str	r3, [r0, #0]
   1d166:	ldr	r0, [pc, #284]	; (1d284 <write_all_supers@@Base+0x408>)
   1d168:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d16c:	add	r0, pc
   1d16e:	bl	17424 <__btrfs_error@@Base>
   1d172:	mvn.w	r0, #4
   1d176:	ldr	r2, [pc, #272]	; (1d288 <write_all_supers@@Base+0x40c>)
   1d178:	ldr	r3, [pc, #252]	; (1d278 <write_all_supers@@Base+0x3fc>)
   1d17a:	add	r2, pc
   1d17c:	ldr	r3, [r2, r3]
   1d17e:	ldr	r2, [r3, #0]
   1d180:	ldr	r3, [sp, #60]	; 0x3c
   1d182:	eors	r2, r3
   1d184:	beq.n	1d26a <write_all_supers@@Base+0x3ee>
   1d186:	blx	86b8 <__stack_chk_fail@plt>
   1d18a:	ldr	r0, [r5, #24]
   1d18c:	blx	855c <fsync@plt>
   1d190:	cmp	r0, #0
   1d192:	bge.n	1d0fa <write_all_supers@@Base+0x27e>
   1d194:	ldr	r0, [pc, #244]	; (1d28c <write_all_supers@@Base+0x410>)
   1d196:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d19a:	add	r0, pc
   1d19c:	b.n	1d0ea <write_all_supers@@Base+0x26e>
   1d19e:	add.w	r3, r6, #32
   1d1a2:	movs	r7, #0
   1d1a4:	vmov	s16, r3
   1d1a8:	b.n	1d1e6 <write_all_supers@@Base+0x36a>
   1d1aa:	cbnz	r7, 1d1c0 <write_all_supers@@Base+0x344>
   1d1ac:	ldr	r0, [r5, #24]
   1d1ae:	blx	855c <fsync@plt>
   1d1b2:	cmp	r0, #0
   1d1b4:	bge.n	1d1c0 <write_all_supers@@Base+0x344>
   1d1b6:	vmov	r0, s17
   1d1ba:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d1be:	b.n	1d0ea <write_all_supers@@Base+0x26e>
   1d1c0:	adds	r7, #1
   1d1c2:	cmp	r7, #3
   1d1c4:	beq.n	1d0fa <write_all_supers@@Base+0x27e>
   1d1c6:	movs	r3, #12
   1d1c8:	mov.w	r2, #16384	; 0x4000
   1d1cc:	muls	r3, r7
   1d1ce:	sub.w	r0, r3, #32
   1d1d2:	rsb	r1, r3, #32
   1d1d6:	lsl.w	r9, r2, r0
   1d1da:	lsr.w	r1, r2, r1
   1d1de:	orr.w	r9, r9, r1
   1d1e2:	lsl.w	r8, r2, r3
   1d1e6:	adds.w	r3, r8, #4096	; 0x1000
   1d1ea:	str	r3, [sp, #8]
   1d1ec:	adc.w	r3, r9, #0
   1d1f0:	str	r3, [sp, #12]
   1d1f2:	ldrd	r0, r1, [sp, #8]
   1d1f6:	ldrd	r2, r3, [r5, #72]	; 0x48
   1d1fa:	cmp	r3, r1
   1d1fc:	it	eq
   1d1fe:	cmpeq	r2, r0
   1d200:	bcc.w	1d0fa <write_all_supers@@Base+0x27e>
   1d204:	mov	r2, sl
   1d206:	vmov	r1, s16
   1d20a:	mov.w	r3, #4064	; 0xfe0
   1d20e:	mov	r0, fp
   1d210:	str.w	r8, [r6, #48]	; 0x30
   1d214:	str.w	r9, [r6, #52]	; 0x34
   1d218:	bl	1bfee <btrfs_csum_data@@Base>
   1d21c:	add.w	lr, sp, #60	; 0x3c
   1d220:	mov	ip, sl
   1d222:	mov	r2, r6
   1d224:	mov	r3, ip
   1d226:	adds	r2, #8
   1d228:	ldmia	r3!, {r0, r1}
   1d22a:	cmp	r3, lr
   1d22c:	str.w	r0, [r2, #-8]
   1d230:	mov	ip, r3
   1d232:	str.w	r1, [r2, #-4]
   1d236:	bne.n	1d224 <write_all_supers@@Base+0x3a8>
   1d238:	strd	r8, r9, [sp]
   1d23c:	mov.w	r2, #4096	; 0x1000
   1d240:	ldr.w	r1, [r4, #308]	; 0x134
   1d244:	ldr	r0, [r5, #24]
   1d246:	blx	89dc <pwrite64@plt>
   1d24a:	cmp.w	r0, #4096	; 0x1000
   1d24e:	beq.n	1d1aa <write_all_supers@@Base+0x32e>
   1d250:	blx	8938 <__errno_location@plt>
   1d254:	movs	r3, #5
   1d256:	mov	r7, r0
   1d258:	str	r3, [r0, #0]
   1d25a:	ldr	r0, [pc, #52]	; (1d290 <write_all_supers@@Base+0x414>)
   1d25c:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d260:	add	r0, pc
   1d262:	bl	17424 <__btrfs_error@@Base>
   1d266:	ldr	r0, [r7, #0]
   1d268:	b.n	1d0f4 <write_all_supers@@Base+0x278>
   1d26a:	add	sp, #68	; 0x44
   1d26c:	vpop	{d8}
   1d270:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d274:	ldrb	r6, [r7, #27]
   1d276:	movs	r4, r0
   1d278:	lsls	r4, r4, #8
   1d27a:	movs	r0, r0
   1d27c:	cdp2	0, 6, cr0, cr6, cr1, {0}
   1d280:	ldc2	0, cr0, [r8, #4]
   1d284:	ldc2l	0, cr0, [r0, #-4]
   1d288:	ldrb	r6, [r1, #16]
   1d28a:	movs	r4, r0
   1d28c:	stc2l	0, cr0, [r6], #4
   1d290:	mrrc2	0, 0, r0, ip, cr1

0001d294 <write_ctree_super@@Base>:
   1d294:	push	{r4, r5, r6, lr}
   1d296:	mov	r3, r0
   1d298:	ldr	r0, [r0, #0]
   1d29a:	ldr	r5, [pc, #140]	; (1d328 <write_ctree_super@@Base+0x94>)
   1d29c:	ldrb.w	r2, [r0, #364]	; 0x16c
   1d2a0:	add	r5, pc
   1d2a2:	lsls	r2, r2, #30
   1d2a4:	bmi.n	1d322 <write_ctree_super@@Base+0x8e>
   1d2a6:	ldrd	r1, r2, [r0, #28]
   1d2aa:	ldr.w	r4, [r0, #308]	; 0x134
   1d2ae:	ldrd	r6, r3, [r3, #8]
   1d2b2:	str	r6, [r4, #72]	; 0x48
   1d2b4:	str	r3, [r4, #76]	; 0x4c
   1d2b6:	ldr	r4, [r1, #0]
   1d2b8:	ldr.w	r3, [r0, #308]	; 0x134
   1d2bc:	ldrd	r6, r4, [r4, #40]	; 0x28
   1d2c0:	str	r6, [r3, #80]	; 0x50
   1d2c2:	str	r4, [r3, #84]	; 0x54
   1d2c4:	ldr	r1, [r1, #0]
   1d2c6:	ldr.w	r3, [r0, #308]	; 0x134
   1d2ca:	ldrb.w	r1, [r1, #196]	; 0xc4
   1d2ce:	strb.w	r1, [r3, #198]	; 0xc6
   1d2d2:	ldr	r1, [r2, #0]
   1d2d4:	ldr.w	r3, [r0, #308]	; 0x134
   1d2d8:	ldrd	r4, r1, [r1, #40]	; 0x28
   1d2dc:	str	r4, [r3, #88]	; 0x58
   1d2de:	str	r1, [r3, #92]	; 0x5c
   1d2e0:	ldr	r1, [r2, #0]
   1d2e2:	ldr.w	r3, [r0, #308]	; 0x134
   1d2e6:	ldrb.w	r1, [r1, #196]	; 0xc4
   1d2ea:	strb.w	r1, [r3, #199]	; 0xc7
   1d2ee:	ldr	r2, [r2, #0]
   1d2f0:	ldr.w	r3, [r0, #308]	; 0x134
   1d2f4:	ldr.w	r1, [r2, #176]	; 0xb0
   1d2f8:	ldr.w	r2, [r2, #180]	; 0xb4
   1d2fc:	str.w	r1, [r3, #164]	; 0xa4
   1d300:	str.w	r2, [r3, #168]	; 0xa8
   1d304:	bl	1ce7c <write_all_supers@@Base>
   1d308:	mov	r4, r0
   1d30a:	cbz	r0, 1d31e <write_ctree_super@@Base+0x8a>
   1d30c:	ldr	r3, [pc, #28]	; (1d32c <write_ctree_super@@Base+0x98>)
   1d30e:	movs	r1, #1
   1d310:	ldr	r2, [pc, #28]	; (1d330 <write_ctree_super@@Base+0x9c>)
   1d312:	ldr	r0, [r5, r3]
   1d314:	add	r2, pc
   1d316:	mov	r3, r4
   1d318:	ldr	r0, [r0, #0]
   1d31a:	blx	8a14 <__fprintf_chk@plt+0x4>
   1d31e:	mov	r0, r4
   1d320:	pop	{r4, r5, r6, pc}
   1d322:	movs	r4, #0
   1d324:	b.n	1d31e <write_ctree_super@@Base+0x8a>
   1d326:	nop
   1d328:	ldrb	r0, [r5, #11]
   1d32a:	movs	r4, r0
   1d32c:	lsls	r4, r6, #8
   1d32e:	movs	r0, r0
   1d330:	umlal	r0, r0, r4, r1

0001d334 <close_ctree_fs_info@@Base>:
   1d334:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d338:	mov	r5, r0
   1d33a:	ldrd	r2, r3, [r5, #232]	; 0xe8
   1d33e:	ldr	r6, [r0, #28]
   1d340:	ldrd	r0, r1, [r0, #240]	; 0xf0
   1d344:	ldr	r7, [pc, #332]	; (1d494 <close_ctree_fs_info@@Base+0x160>)
   1d346:	cmp	r1, r3
   1d348:	it	eq
   1d34a:	cmpeq	r0, r2
   1d34c:	add	r7, pc
   1d34e:	bne.n	1d3bc <close_ctree_fs_info@@Base+0x88>
   1d350:	ldrb.w	r3, [r5, #365]	; 0x16d
   1d354:	lsls	r3, r3, #29
   1d356:	bpl.w	1d490 <close_ctree_fs_info@@Base+0x15c>
   1d35a:	ldr.w	r3, [r5, #308]	; 0x134
   1d35e:	movs	r2, #95	; 0x5f
   1d360:	movs	r1, #66	; 0x42
   1d362:	movs	r4, #0
   1d364:	mov	r0, r5
   1d366:	strb.w	r2, [r3, #64]	; 0x40
   1d36a:	strb.w	r1, [r3, #65]	; 0x41
   1d36e:	movs	r1, #72	; 0x48
   1d370:	strb.w	r2, [r3, #70]	; 0x46
   1d374:	movs	r2, #77	; 0x4d
   1d376:	strb.w	r1, [r3, #66]	; 0x42
   1d37a:	movs	r1, #82	; 0x52
   1d37c:	strb.w	r2, [r3, #71]	; 0x47
   1d380:	strb.w	r1, [r3, #67]	; 0x43
   1d384:	movs	r1, #102	; 0x66
   1d386:	strb.w	r1, [r3, #68]	; 0x44
   1d38a:	movs	r1, #83	; 0x53
   1d38c:	strb.w	r1, [r3, #69]	; 0x45
   1d390:	ldr.w	r3, [r6, #464]	; 0x1d0
   1d394:	ldrb.w	r2, [r3, #365]	; 0x16d
   1d398:	bfi	r2, r4, #2, #1
   1d39c:	strb.w	r2, [r3, #365]	; 0x16d
   1d3a0:	bl	1ce7c <write_all_supers@@Base>
   1d3a4:	cmp	r0, #0
   1d3a6:	beq.n	1d490 <close_ctree_fs_info@@Base+0x15c>
   1d3a8:	ldr	r3, [pc, #236]	; (1d498 <close_ctree_fs_info@@Base+0x164>)
   1d3aa:	movs	r1, #1
   1d3ac:	ldr	r2, [pc, #236]	; (1d49c <close_ctree_fs_info@@Base+0x168>)
   1d3ae:	ldr	r6, [r7, r3]
   1d3b0:	add	r2, pc
   1d3b2:	mov	r3, r0
   1d3b4:	ldr	r0, [r6, #0]
   1d3b6:	blx	8a14 <__fprintf_chk@plt+0x4>
   1d3ba:	b.n	1d456 <close_ctree_fs_info@@Base+0x122>
   1d3bc:	ldr.w	r9, [pc, #224]	; 1d4a0 <close_ctree_fs_info@@Base+0x16c>
   1d3c0:	clz	r3, r6
   1d3c4:	ldr	r0, [pc, #220]	; (1d4a4 <close_ctree_fs_info@@Base+0x170>)
   1d3c6:	movw	r2, #1870	; 0x74e
   1d3ca:	add	r9, pc
   1d3cc:	lsrs	r3, r3, #5
   1d3ce:	add.w	r9, r9, #33	; 0x21
   1d3d2:	add	r0, pc
   1d3d4:	mov	r1, r9
   1d3d6:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d3da:	movs	r1, #1
   1d3dc:	mov	r0, r6
   1d3de:	bl	2af24 <btrfs_start_transaction@@Base>
   1d3e2:	cmn.w	r0, #4096	; 0x1000
   1d3e6:	mov	r4, r0
   1d3e8:	bhi.n	1d456 <close_ctree_fs_info@@Base+0x122>
   1d3ea:	mov	r1, r6
   1d3ec:	ldr	r4, [pc, #184]	; (1d4a8 <close_ctree_fs_info@@Base+0x174>)
   1d3ee:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   1d3f2:	movs	r1, #1
   1d3f4:	mov	r0, r6
   1d3f6:	add	r4, pc
   1d3f8:	bl	2af24 <btrfs_start_transaction@@Base>
   1d3fc:	movw	r2, #1878	; 0x756
   1d400:	mov	r1, r9
   1d402:	cmn.w	r0, #4096	; 0x1000
   1d406:	mov	r8, r0
   1d408:	ldr	r0, [pc, #160]	; (1d4ac <close_ctree_fs_info@@Base+0x178>)
   1d40a:	ite	ls
   1d40c:	movls	r3, #0
   1d40e:	movhi	r3, #1
   1d410:	add	r0, pc
   1d412:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d416:	mov	r1, r5
   1d418:	mov	r0, r8
   1d41a:	bl	2afb0 <commit_tree_roots@@Base>
   1d41e:	mov.w	r2, #1880	; 0x758
   1d422:	mov	r1, r9
   1d424:	mov	r3, r0
   1d426:	mov	r0, r4
   1d428:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d42c:	mov	r1, r6
   1d42e:	mov	r0, r8
   1d430:	bl	2b0c8 <__commit_transaction@@Base>
   1d434:	movw	r2, #1882	; 0x75a
   1d438:	mov	r1, r9
   1d43a:	mov	r3, r0
   1d43c:	mov	r0, r4
   1d43e:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d442:	mov	r0, r8
   1d444:	bl	1d294 <write_ctree_super@@Base>
   1d448:	mov	r4, r0
   1d44a:	mov	r0, r8
   1d44c:	blx	85dc <free@plt+0x4>
   1d450:	cmp	r4, #0
   1d452:	beq.w	1d350 <close_ctree_fs_info@@Base+0x1c>
   1d456:	mov	r0, r5
   1d458:	bl	20da6 <btrfs_free_block_groups@@Base>
   1d45c:	ldr	r1, [pc, #80]	; (1d4b0 <close_ctree_fs_info@@Base+0x17c>)
   1d45e:	add.w	r0, r5, #56	; 0x38
   1d462:	add	r1, pc
   1d464:	bl	178a6 <rb_free_nodes@@Base>
   1d468:	mov	r0, r5
   1d46a:	bl	1c7fc <btrfs_release_all_roots@@Base>
   1d46e:	ldr.w	r0, [r5, #352]	; 0x160
   1d472:	bl	27ed4 <btrfs_close_devices@@Base>
   1d476:	mov	r6, r0
   1d478:	mov	r0, r5
   1d47a:	bl	1c860 <btrfs_cleanup_all_caches@@Base>
   1d47e:	mov	r0, r5
   1d480:	bl	1c5b8 <btrfs_free_fs_info@@Base>
   1d484:	cmp	r4, #0
   1d486:	ite	ne
   1d488:	movne	r0, r4
   1d48a:	moveq	r0, r6
   1d48c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d490:	movs	r4, #0
   1d492:	b.n	1d456 <close_ctree_fs_info@@Base+0x122>
   1d494:	ldrb	r4, [r7, #8]
   1d496:	movs	r4, r0
   1d498:	lsls	r4, r6, #8
   1d49a:	movs	r0, r0
   1d49c:	smlsd	r0, r8, r1, r0
   1d4a0:	vhadd.u<illegal width 64>	d16, d3, d1
   1d4a4:	smlsd	r0, lr, r1, r0
   1d4a8:	ldmia	r1, {r1, r2, r3, r5, r6, r7}
   1d4aa:	movs	r1, r0
   1d4ac:	smlabb	r0, r6, r1, r0
   1d4b0:	bl	1694b2 <__bss_end__@@Base+0x1031c2>

0001d4b4 <clean_tree_block@@Base>:
   1d4b4:	b.w	17276 <clear_extent_buffer_dirty@@Base>

0001d4b8 <btrfs_mark_buffer_dirty@@Base>:
   1d4b8:	b.w	1723c <set_extent_buffer_dirty@@Base>

0001d4bc <btrfs_buffer_uptodate@@Base>:
   1d4bc:	push	{r0, r1, r2, lr}
   1d4be:	mov	r1, r0
   1d4c0:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d4c4:	cbz	r0, 1d4d6 <btrfs_buffer_uptodate@@Base+0x1a>
   1d4c6:	movs	r0, #1
   1d4c8:	str	r0, [sp, #0]
   1d4ca:	mov	r0, r1
   1d4cc:	bl	1bdcc <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1d4d0:	clz	r0, r0
   1d4d4:	lsrs	r0, r0, #5
   1d4d6:	add	sp, #12
   1d4d8:	ldr.w	pc, [sp], #4

0001d4dc <readahead_tree_block@@Base>:
   1d4dc:	push	{r4, r5, r6, r7, lr}
   1d4de:	sub	sp, #44	; 0x2c
   1d4e0:	ldr	r5, [pc, #148]	; (1d578 <readahead_tree_block@@Base+0x9c>)
   1d4e2:	mov	r4, r0
   1d4e4:	ldr	r1, [pc, #148]	; (1d57c <readahead_tree_block@@Base+0xa0>)
   1d4e6:	mov	r6, r2
   1d4e8:	add	r5, pc
   1d4ea:	mov	r7, r3
   1d4ec:	ldr	r1, [r5, r1]
   1d4ee:	ldr	r1, [r1, #0]
   1d4f0:	str	r1, [sp, #36]	; 0x24
   1d4f2:	mov.w	r1, #0
   1d4f6:	movs	r1, #0
   1d4f8:	str	r1, [sp, #20]
   1d4fa:	ldr.w	r1, [r0, #384]	; 0x180
   1d4fe:	str	r1, [sp, #0]
   1d500:	bl	1c1d0 <btrfs_find_tree_block@@Base>
   1d504:	mov	r5, r0
   1d506:	cbnz	r0, 1d546 <readahead_tree_block@@Base+0x6a>
   1d508:	add	r3, sp, #20
   1d50a:	movs	r1, #0
   1d50c:	str	r3, [sp, #4]
   1d50e:	mov	r2, r6
   1d510:	add	r3, sp, #24
   1d512:	mov	r0, r4
   1d514:	str	r3, [sp, #0]
   1d516:	mov	r3, r7
   1d518:	strd	r1, r1, [sp, #8]
   1d51c:	bl	29dd0 <btrfs_map_block@@Base>
   1d520:	cbnz	r0, 1d552 <readahead_tree_block@@Base+0x76>
   1d522:	ldr	r0, [sp, #20]
   1d524:	ldr	r1, [r0, #8]
   1d526:	ldrd	r3, r2, [r1, #16]
   1d52a:	adds	r3, #1
   1d52c:	adc.w	r2, r2, #0
   1d530:	strd	r3, r2, [r1, #16]
   1d534:	ldr.w	r3, [r4, #384]	; 0x180
   1d538:	str	r3, [sp, #0]
   1d53a:	ldrd	r2, r3, [r0, #16]
   1d53e:	ldr	r0, [r1, #24]
   1d540:	blx	8794 <readahead@plt>
   1d544:	b.n	1d552 <readahead_tree_block@@Base+0x76>
   1d546:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d54a:	bl	1d4bc <btrfs_buffer_uptodate@@Base>
   1d54e:	cmp	r0, #0
   1d550:	beq.n	1d508 <readahead_tree_block@@Base+0x2c>
   1d552:	mov	r0, r5
   1d554:	bl	16bc8 <free_extent_buffer@@Base>
   1d558:	ldr	r0, [sp, #20]
   1d55a:	blx	85dc <free@plt+0x4>
   1d55e:	ldr	r2, [pc, #32]	; (1d580 <readahead_tree_block@@Base+0xa4>)
   1d560:	ldr	r3, [pc, #24]	; (1d57c <readahead_tree_block@@Base+0xa0>)
   1d562:	add	r2, pc
   1d564:	ldr	r3, [r2, r3]
   1d566:	ldr	r2, [r3, #0]
   1d568:	ldr	r3, [sp, #36]	; 0x24
   1d56a:	eors	r2, r3
   1d56c:	beq.n	1d572 <readahead_tree_block@@Base+0x96>
   1d56e:	blx	86b8 <__stack_chk_fail@plt>
   1d572:	add	sp, #44	; 0x2c
   1d574:	pop	{r4, r5, r6, r7, pc}
   1d576:	nop
   1d578:	ldrb	r0, [r4, #2]
   1d57a:	movs	r4, r0
   1d57c:	lsls	r4, r4, #8
   1d57e:	movs	r0, r0
   1d580:	ldrb	r6, [r4, #0]
   1d582:	movs	r4, r0

0001d584 <write_tree_block@@Base>:
   1d584:	push	{r0, r1, r2, r4, r5, lr}
   1d586:	mov	r4, r1
   1d588:	mov	r5, r0
   1d58a:	mov	r1, r2
   1d58c:	mov	r0, r4
   1d58e:	str	r2, [sp, #4]
   1d590:	bl	1bcec <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d594:	ldr	r1, [sp, #4]
   1d596:	cbz	r0, 1d5be <write_tree_block@@Base+0x3a>
   1d598:	mov	r0, r4
   1d59a:	bl	1bcec <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d59e:	ldr	r1, [sp, #4]
   1d5a0:	mov	r2, r0
   1d5a2:	add.w	r0, r4, #352	; 0x160
   1d5a6:	bl	1be48 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1d5aa:	ldr	r1, [pc, #100]	; (1d610 <write_tree_block@@Base+0x8c>)
   1d5ac:	ldr	r0, [pc, #100]	; (1d614 <write_tree_block@@Base+0x90>)
   1d5ae:	movs	r3, #1
   1d5b0:	add	r1, pc
   1d5b2:	mov.w	r2, #516	; 0x204
   1d5b6:	adds	r1, #53	; 0x35
   1d5b8:	add	r0, pc
   1d5ba:	bl	1bfa8 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1d5be:	cbz	r5, 1d5e2 <write_tree_block@@Base+0x5e>
   1d5c0:	mov	r0, r1
   1d5c2:	ldrd	r2, r3, [r5, #8]
   1d5c6:	str	r1, [sp, #4]
   1d5c8:	bl	1d4bc <btrfs_buffer_uptodate@@Base>
   1d5cc:	ldr	r1, [sp, #4]
   1d5ce:	cbnz	r0, 1d5e2 <write_tree_block@@Base+0x5e>
   1d5d0:	ldr	r1, [pc, #68]	; (1d618 <write_tree_block@@Base+0x94>)
   1d5d2:	movs	r3, #1
   1d5d4:	ldr	r0, [pc, #68]	; (1d61c <write_tree_block@@Base+0x98>)
   1d5d6:	mov.w	r2, #520	; 0x208
   1d5da:	add	r1, pc
   1d5dc:	adds	r1, #53	; 0x35
   1d5de:	add	r0, pc
   1d5e0:	b.n	1d5ba <write_tree_block@@Base+0x36>
   1d5e2:	ldr.w	r2, [r1, #156]	; 0x9c
   1d5e6:	mov	r0, r4
   1d5e8:	ldr.w	r3, [r1, #152]	; 0x98
   1d5ec:	str	r1, [sp, #4]
   1d5ee:	orr.w	r3, r3, #1
   1d5f2:	str.w	r2, [r1, #156]	; 0x9c
   1d5f6:	str.w	r3, [r1, #152]	; 0x98
   1d5fa:	movs	r2, #0
   1d5fc:	bl	1c194 <csum_tree_block@@Base>
   1d600:	ldr	r1, [sp, #4]
   1d602:	mov	r0, r4
   1d604:	add	sp, #12
   1d606:	ldmia.w	sp!, {r4, r5, lr}
   1d60a:	b.w	1c420 <write_and_map_eb@@Base>
   1d60e:	nop
   1d610:	stc2	0, cr0, [sp, #4]
   1d614:	lsls	r1, r3, #5
   1d616:	movs	r2, r0
   1d618:	stc2l	0, cr0, [r3, #-4]!
   1d61c:	lsls	r3, r6, #4
   1d61e:	movs	r2, r0

0001d620 <btrfs_set_buffer_uptodate@@Base>:
   1d620:	ldr	r3, [r0, #84]	; 0x54
   1d622:	orr.w	r3, r3, #4
   1d626:	str	r3, [r0, #84]	; 0x54
   1d628:	movs	r0, #0
   1d62a:	bx	lr

0001d62c <read_tree_block@@Base>:
   1d62c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d630:	mov.w	r9, #0
   1d634:	ldr.w	r1, [r0, #388]	; 0x184
   1d638:	cmp	r3, r9
   1d63a:	ldr.w	fp, [pc, #416]	; 1d7dc <read_tree_block@@Base+0x1b0>
   1d63e:	sub	sp, #28
   1d640:	it	eq
   1d642:	cmpeq	r2, r1
   1d644:	mov	r5, r0
   1d646:	add	fp, pc
   1d648:	mov	r6, r2
   1d64a:	mov	r7, r3
   1d64c:	bcc.n	1d66a <read_tree_block@@Base+0x3e>
   1d64e:	adds.w	r4, r1, #4294967295	; 0xffffffff
   1d652:	adc.w	ip, r9, #4294967295	; 0xffffffff
   1d656:	ands	r4, r2
   1d658:	str	r4, [sp, #8]
   1d65a:	and.w	r4, ip, r3
   1d65e:	str	r4, [sp, #12]
   1d660:	ldrd	r8, r9, [sp, #8]
   1d664:	orrs.w	r4, r8, r9
   1d668:	beq.n	1d67e <read_tree_block@@Base+0x52>
   1d66a:	ldr	r0, [pc, #372]	; (1d7e0 <read_tree_block@@Base+0x1b4>)
   1d66c:	mov	r2, r6
   1d66e:	mov	r3, r7
   1d670:	str	r1, [sp, #0]
   1d672:	add	r0, pc
   1d674:	bl	17424 <__btrfs_error@@Base>
   1d678:	mvn.w	r4, #4
   1d67c:	b.n	1d72a <read_tree_block@@Base+0xfe>
   1d67e:	bl	1c1d6 <btrfs_find_create_tree_block@@Base>
   1d682:	mov	r4, r0
   1d684:	cmp	r0, #0
   1d686:	beq.w	1d7cc <read_tree_block@@Base+0x1a0>
   1d68a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d68e:	bl	1d4bc <btrfs_buffer_uptodate@@Base>
   1d692:	mov	r6, r0
   1d694:	cmp	r0, #0
   1d696:	bne.n	1d72a <read_tree_block@@Base+0xfe>
   1d698:	ldr	r3, [r4, #76]	; 0x4c
   1d69a:	add.w	sl, r4, #68	; 0x44
   1d69e:	mov	r8, r6
   1d6a0:	movs	r7, #1
   1d6a2:	strd	r3, r0, [sp]
   1d6a6:	mov	r0, r5
   1d6a8:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d6ac:	bl	2955c <btrfs_num_copies@@Base>
   1d6b0:	str	r6, [sp, #20]
   1d6b2:	mov	r9, r0
   1d6b4:	mov	r2, r7
   1d6b6:	mov	r1, r4
   1d6b8:	mov	r0, r5
   1d6ba:	bl	1c1e8 <read_whole_eb@@Base>
   1d6be:	cmp	r0, #0
   1d6c0:	bne.n	1d74c <read_tree_block@@Base+0x120>
   1d6c2:	movs	r2, #1
   1d6c4:	mov	r1, r4
   1d6c6:	mov	r0, r5
   1d6c8:	bl	1c194 <csum_tree_block@@Base>
   1d6cc:	cmp	r0, #0
   1d6ce:	bne.n	1d74c <read_tree_block@@Base+0x120>
   1d6d0:	mov	r1, r4
   1d6d2:	mov	r0, r5
   1d6d4:	bl	1bcec <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d6d8:	cbnz	r0, 1d74c <read_tree_block@@Base+0x120>
   1d6da:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d6de:	mov	r0, r4
   1d6e0:	str	r6, [sp, #0]
   1d6e2:	bl	1bdcc <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1d6e6:	cbnz	r0, 1d74c <read_tree_block@@Base+0x120>
   1d6e8:	ldr	r3, [r4, #84]	; 0x54
   1d6ea:	lsls	r1, r3, #21
   1d6ec:	bpl.n	1d70e <read_tree_block@@Base+0xe2>
   1d6ee:	ldr	r3, [r4, #68]	; 0x44
   1d6f0:	cmp	sl, r3
   1d6f2:	bne.n	1d70e <read_tree_block@@Base+0xe2>
   1d6f4:	ldr.w	r3, [r5, #348]	; 0x15c
   1d6f8:	add.w	r2, r5, #344	; 0x158
   1d6fc:	str.w	sl, [r5, #348]	; 0x15c
   1d700:	strd	r2, r3, [r4, #68]	; 0x44
   1d704:	str.w	sl, [r3]
   1d708:	ldr	r3, [r4, #80]	; 0x50
   1d70a:	adds	r3, #1
   1d70c:	str	r3, [r4, #80]	; 0x50
   1d70e:	ldrb.w	r1, [r4, #196]	; 0xc4
   1d712:	mov	r2, r4
   1d714:	cbz	r1, 1d73c <read_tree_block@@Base+0x110>
   1d716:	movs	r1, #0
   1d718:	mov	r0, r5
   1d71a:	bl	189c8 <btrfs_check_node@@Base>
   1d71e:	cbz	r0, 1d724 <read_tree_block@@Base+0xf8>
   1d720:	cmp	r7, r8
   1d722:	bne.n	1d744 <read_tree_block@@Base+0x118>
   1d724:	mov	r0, r4
   1d726:	bl	1d620 <btrfs_set_buffer_uptodate@@Base>
   1d72a:	mov	r0, r4
   1d72c:	add	sp, #28
   1d72e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d732:	movs	r6, #0
   1d734:	b.n	1d6b4 <read_tree_block@@Base+0x88>
   1d736:	mov	r7, r8
   1d738:	movs	r6, #1
   1d73a:	b.n	1d6b4 <read_tree_block@@Base+0x88>
   1d73c:	mov	r0, r5
   1d73e:	bl	19018 <btrfs_check_leaf@@Base>
   1d742:	b.n	1d71e <read_tree_block@@Base+0xf2>
   1d744:	cmp.w	r8, #0
   1d748:	bgt.n	1d7d2 <read_tree_block@@Base+0x1a6>
   1d74a:	mov	r8, r7
   1d74c:	cbz	r6, 1d798 <read_tree_block@@Base+0x16c>
   1d74e:	cmp.w	r8, #0
   1d752:	bgt.n	1d7d6 <read_tree_block@@Base+0x1aa>
   1d754:	mov	r1, r4
   1d756:	mov	r0, r5
   1d758:	bl	1bcec <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d75c:	ldrb.w	r3, [r5, #364]	; 0x16c
   1d760:	cbz	r0, 1d782 <read_tree_block@@Base+0x156>
   1d762:	lsls	r2, r3, #26
   1d764:	bmi.n	1d77a <read_tree_block@@Base+0x14e>
   1d766:	mov	r1, r4
   1d768:	mov	r0, r5
   1d76a:	bl	1bcec <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d76e:	mov	r1, r4
   1d770:	mov	r2, r0
   1d772:	add.w	r0, r5, #352	; 0x160
   1d776:	bl	1be48 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1d77a:	mov	r0, r4
   1d77c:	bl	16bcc <free_extent_buffer_nocache@@Base>
   1d780:	b.n	1d678 <read_tree_block@@Base+0x4c>
   1d782:	lsls	r3, r3, #26
   1d784:	bmi.n	1d77a <read_tree_block@@Base+0x14e>
   1d786:	ldr	r3, [pc, #92]	; (1d7e4 <read_tree_block@@Base+0x1b8>)
   1d788:	ldr	r0, [pc, #92]	; (1d7e8 <read_tree_block@@Base+0x1bc>)
   1d78a:	ldr.w	r3, [fp, r3]
   1d78e:	add	r0, pc
   1d790:	ldr	r1, [r3, #0]
   1d792:	blx	8b1c <fputs@plt+0x4>
   1d796:	b.n	1d77a <read_tree_block@@Base+0x14e>
   1d798:	cmp.w	r9, #1
   1d79c:	beq.n	1d738 <read_tree_block@@Base+0x10c>
   1d79e:	ldr.w	r3, [r4, #180]	; 0xb4
   1d7a2:	ldrd	r0, r1, [sp, #8]
   1d7a6:	ldr.w	r2, [r4, #176]	; 0xb0
   1d7aa:	cmp	r1, r3
   1d7ac:	it	eq
   1d7ae:	cmpeq	r0, r2
   1d7b0:	it	cc
   1d7b2:	strcc	r7, [sp, #20]
   1d7b4:	add.w	r7, r7, #1
   1d7b8:	it	cc
   1d7ba:	strdcc	r2, r3, [sp, #8]
   1d7be:	cmp	r9, r7
   1d7c0:	bge.n	1d732 <read_tree_block@@Base+0x106>
   1d7c2:	cmp.w	r8, #0
   1d7c6:	bgt.n	1d736 <read_tree_block@@Base+0x10a>
   1d7c8:	ldr	r7, [sp, #20]
   1d7ca:	b.n	1d738 <read_tree_block@@Base+0x10c>
   1d7cc:	mvn.w	r4, #11
   1d7d0:	b.n	1d72a <read_tree_block@@Base+0xfe>
   1d7d2:	cmp	r6, #0
   1d7d4:	beq.n	1d798 <read_tree_block@@Base+0x16c>
   1d7d6:	mov	r7, r8
   1d7d8:	b.n	1d6b4 <read_tree_block@@Base+0x88>
   1d7da:	nop
   1d7dc:	strb	r2, [r0, #29]
   1d7de:	movs	r4, r0
   1d7e0:	str.w	r0, [r2, #1]
   1d7e4:	lsls	r4, r6, #8
   1d7e6:	movs	r0, r0
   1d7e8:			; <UNDEFINED> instruction: 0xf7dd0001
   1d7ec:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1d7f0:	mov	r5, r0
   1d7f2:	ldr	r4, [sp, #32]
   1d7f4:	mov	r7, r3
   1d7f6:	mov	r8, r2
   1d7f8:	mov	r6, r1
   1d7fa:	mov	r0, r4
   1d7fc:	bl	1c538 <btrfs_setup_root@@Base>
   1d800:	addw	r3, r4, #447	; 0x1bf
   1d804:	mov	r0, r5
   1d806:	str	r3, [sp, #4]
   1d808:	mov	r2, r8
   1d80a:	add.w	r3, r4, #8
   1d80e:	str	r3, [sp, #0]
   1d810:	mov	r3, r7
   1d812:	bl	278f0 <btrfs_find_last_root@@Base>
   1d816:	mov	r5, r0
   1d818:	cbnz	r0, 1d842 <read_tree_block@@Base+0x216>
   1d81a:	ldr.w	r2, [r4, #168]	; 0xa8
   1d81e:	mov	r0, r6
   1d820:	ldr.w	r3, [r4, #172]	; 0xac
   1d824:	strd	r2, r3, [sp]
   1d828:	ldr.w	r2, [r4, #184]	; 0xb8
   1d82c:	ldr.w	r3, [r4, #188]	; 0xbc
   1d830:	bl	1d62c <read_tree_block@@Base>
   1d834:	str	r0, [r4, #0]
   1d836:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d83a:	cmp	r0, #0
   1d83c:	it	eq
   1d83e:	mvneq.w	r5, #4
   1d842:	mov	r0, r5
   1d844:	add	sp, #8
   1d846:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d84a:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1d84c:	mov	r4, r0
   1d84e:	str	r2, [sp, #0]
   1d850:	mov	r6, r1
   1d852:	mov	r5, r2
   1d854:	mov	r1, r0
   1d856:	ldrd	r2, r3, [sp, #32]
   1d85a:	ldr	r0, [r0, #28]
   1d85c:	ldr	r7, [sp, #40]	; 0x28
   1d85e:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1d862:	cbz	r0, 1d876 <read_tree_block@@Base+0x24a>
   1d864:	lsls	r3, r6, #30
   1d866:	mov	r1, r7
   1d868:	bmi.n	1d87a <read_tree_block@@Base+0x24e>
   1d86a:	ldr	r0, [pc, #56]	; (1d8a4 <read_tree_block@@Base+0x278>)
   1d86c:	add	r0, pc
   1d86e:	bl	17424 <__btrfs_error@@Base>
   1d872:	mvn.w	r0, #4
   1d876:	add	sp, #12
   1d878:	pop	{r4, r5, r6, r7, pc}
   1d87a:	ldr	r0, [pc, #44]	; (1d8a8 <read_tree_block@@Base+0x27c>)
   1d87c:	add	r0, pc
   1d87e:	bl	173a8 <__btrfs_warning@@Base>
   1d882:	movs	r2, #0
   1d884:	movs	r3, #0
   1d886:	mov	r0, r4
   1d888:	bl	1c1d6 <btrfs_find_create_tree_block@@Base>
   1d88c:	str	r0, [r5, #0]
   1d88e:	cbz	r0, 1d89c <read_tree_block@@Base+0x270>
   1d890:	ldr	r3, [r0, #84]	; 0x54
   1d892:	bic.w	r3, r3, #4
   1d896:	str	r3, [r0, #84]	; 0x54
   1d898:	movs	r0, #0
   1d89a:	b.n	1d876 <read_tree_block@@Base+0x24a>
   1d89c:	mvn.w	r0, #11
   1d8a0:	b.n	1d876 <read_tree_block@@Base+0x24a>
   1d8a2:	nop
   1d8a4:			; <UNDEFINED> instruction: 0xf7120001
   1d8a8:			; <UNDEFINED> instruction: 0xf71a0001

0001d8ac <btrfs_read_fs_root_no_cache@@Base>:
   1d8ac:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1d8b0:	mov	r7, r0
   1d8b2:	ldr.w	sl, [r0, #28]
   1d8b6:	mov	r5, r1
   1d8b8:	movs	r0, #1
   1d8ba:	mov.w	r1, #544	; 0x220
   1d8be:	blx	8544 <calloc@plt+0x4>
   1d8c2:	mov	r4, r0
   1d8c4:	cbz	r0, 1d912 <btrfs_read_fs_root_no_cache@@Base+0x66>
   1d8c6:	ldr.w	r9, [r5, #13]
   1d8ca:	ldr.w	r8, [r5, #9]
   1d8ce:	cmp.w	r9, #4294967295	; 0xffffffff
   1d8d2:	ldr	r2, [r5, #0]
   1d8d4:	it	eq
   1d8d6:	cmpeq.w	r8, #4294967295	; 0xffffffff
   1d8da:	ldr	r3, [r5, #4]
   1d8dc:	bne.n	1d8fe <btrfs_read_fs_root_no_cache@@Base+0x52>
   1d8de:	str	r0, [sp, #0]
   1d8e0:	mov	r1, r7
   1d8e2:	mov	r0, sl
   1d8e4:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1d8e8:	mov	r5, r0
   1d8ea:	cmp	r0, #0
   1d8ec:	beq.n	1d9a6 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d8ee:	mov	r0, r4
   1d8f0:	mov	r4, r5
   1d8f2:	blx	85dc <free@plt+0x4>
   1d8f6:	mov	r0, r4
   1d8f8:	add	sp, #8
   1d8fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d8fe:	mov	r1, r7
   1d900:	bl	1c538 <btrfs_setup_root@@Base>
   1d904:	bl	17df8 <btrfs_alloc_path@@Base>
   1d908:	mov	r6, r0
   1d90a:	cbnz	r0, 1d918 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   1d90c:	mov	r0, r4
   1d90e:	blx	85dc <free@plt+0x4>
   1d912:	mvn.w	r4, #11
   1d916:	b.n	1d8f6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d918:	movs	r0, #0
   1d91a:	mov	r3, r6
   1d91c:	mov	r2, r5
   1d91e:	mov	r1, sl
   1d920:	strd	r0, r0, [sp]
   1d924:	bl	1a1e4 <btrfs_search_slot@@Base>
   1d928:	subs.w	r8, r0, #0
   1d92c:	beq.n	1d94a <btrfs_read_fs_root_no_cache@@Base+0x9e>
   1d92e:	ble.n	1d934 <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d930:	mvn.w	r8, #1
   1d934:	mov	r0, r6
   1d936:	bl	17e26 <btrfs_free_path@@Base>
   1d93a:	cmp.w	r8, #0
   1d93e:	beq.n	1d980 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   1d940:	mov	r0, r4
   1d942:	mov	r4, r8
   1d944:	blx	85dc <free@plt+0x4>
   1d948:	b.n	1d8f6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d94a:	ldr	r0, [r6, #0]
   1d94c:	movs	r2, #25
   1d94e:	ldr	r3, [r6, #32]
   1d950:	add.w	r1, r4, #8
   1d954:	mla	r3, r2, r3, r0
   1d958:	ldr.w	r2, [r3, #214]	; 0xd6
   1d95c:	movw	r3, #439	; 0x1b7
   1d960:	adds	r2, #101	; 0x65
   1d962:	bl	172c2 <read_extent_buffer@@Base>
   1d966:	addw	r3, r4, #447	; 0x1bf
   1d96a:	add.w	r2, r5, #16
   1d96e:	ldr.w	r1, [r5], #4
   1d972:	cmp	r5, r2
   1d974:	str.w	r1, [r3], #4
   1d978:	bne.n	1d96e <btrfs_read_fs_root_no_cache@@Base+0xc2>
   1d97a:	ldrb	r2, [r5, #0]
   1d97c:	strb	r2, [r3, #0]
   1d97e:	b.n	1d934 <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d980:	ldrd	r2, r3, [r4, #168]	; 0xa8
   1d984:	mov	r0, r7
   1d986:	strd	r2, r3, [sp]
   1d98a:	ldrd	r2, r3, [r4, #184]	; 0xb8
   1d98e:	bl	1d62c <read_tree_block@@Base>
   1d992:	str	r0, [r4, #0]
   1d994:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d998:	cbnz	r0, 1d9a6 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d99a:	mov	r0, r4
   1d99c:	mvn.w	r4, #4
   1d9a0:	blx	85dc <free@plt+0x4>
   1d9a4:	b.n	1d8f6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d9a6:	movs	r3, #1
   1d9a8:	str.w	r3, [r4, #488]	; 0x1e8
   1d9ac:	b.n	1d8f6 <btrfs_read_fs_root_no_cache@@Base+0x4a>

0001d9ae <btrfs_read_fs_root@@Base>:
   1d9ae:	ldr	r2, [pc, #320]	; (1daf0 <btrfs_read_fs_root@@Base+0x142>)
   1d9b0:	ldr	r3, [pc, #320]	; (1daf4 <btrfs_read_fs_root@@Base+0x146>)
   1d9b2:	add	r2, pc
   1d9b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d9b8:	sub	sp, #28
   1d9ba:	ldr	r3, [r2, r3]
   1d9bc:	mov	r5, r0
   1d9be:	ldr	r2, [r1, #0]
   1d9c0:	mov	r9, r1
   1d9c2:	ldr	r3, [r3, #0]
   1d9c4:	str	r3, [sp, #20]
   1d9c6:	mov.w	r3, #0
   1d9ca:	ldr	r3, [r1, #4]
   1d9cc:	ldr.w	r8, [pc, #296]	; 1daf8 <btrfs_read_fs_root@@Base+0x14a>
   1d9d0:	cmp	r3, #0
   1d9d2:	it	eq
   1d9d4:	cmpeq	r2, #1
   1d9d6:	add	r8, pc
   1d9d8:	strd	r2, r3, [sp, #8]
   1d9dc:	bne.n	1d9f4 <btrfs_read_fs_root@@Base+0x46>
   1d9de:	ldr	r4, [r0, #28]
   1d9e0:	ldr	r2, [pc, #280]	; (1dafc <btrfs_read_fs_root@@Base+0x14e>)
   1d9e2:	ldr	r3, [pc, #272]	; (1daf4 <btrfs_read_fs_root@@Base+0x146>)
   1d9e4:	add	r2, pc
   1d9e6:	ldr	r3, [r2, r3]
   1d9e8:	ldr	r2, [r3, #0]
   1d9ea:	ldr	r3, [sp, #20]
   1d9ec:	eors	r2, r3
   1d9ee:	beq.n	1dae6 <btrfs_read_fs_root@@Base+0x138>
   1d9f0:	blx	86b8 <__stack_chk_fail@plt>
   1d9f4:	cmp	r3, #0
   1d9f6:	it	eq
   1d9f8:	cmpeq	r2, #2
   1d9fa:	bne.n	1da00 <btrfs_read_fs_root@@Base+0x52>
   1d9fc:	ldr	r4, [r0, #24]
   1d9fe:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da00:	cmp	r3, #0
   1da02:	it	eq
   1da04:	cmpeq	r2, #3
   1da06:	bne.n	1da0c <btrfs_read_fs_root@@Base+0x5e>
   1da08:	ldr	r4, [r0, #32]
   1da0a:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da0c:	cmp	r3, #0
   1da0e:	it	eq
   1da10:	cmpeq	r2, #4
   1da12:	bne.n	1da18 <btrfs_read_fs_root@@Base+0x6a>
   1da14:	ldr	r4, [r0, #36]	; 0x24
   1da16:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da18:	cmp	r3, #0
   1da1a:	it	eq
   1da1c:	cmpeq	r2, #7
   1da1e:	bne.n	1da24 <btrfs_read_fs_root@@Base+0x76>
   1da20:	ldr	r4, [r0, #40]	; 0x28
   1da22:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da24:	cmp	r3, #0
   1da26:	it	eq
   1da28:	cmpeq	r2, #9
   1da2a:	bne.n	1da38 <btrfs_read_fs_root@@Base+0x8a>
   1da2c:	ldr	r4, [r0, #52]	; 0x34
   1da2e:	cmp	r4, #0
   1da30:	it	eq
   1da32:	mvneq.w	r4, #1
   1da36:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da38:	cmp	r3, #0
   1da3a:	it	eq
   1da3c:	cmpeq	r2, #8
   1da3e:	bne.n	1da4c <btrfs_read_fs_root@@Base+0x9e>
   1da40:	ldrb.w	r3, [r0, #364]	; 0x16c
   1da44:	lsls	r3, r3, #27
   1da46:	bpl.n	1dae0 <btrfs_read_fs_root@@Base+0x132>
   1da48:	ldr	r4, [r0, #44]	; 0x2c
   1da4a:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1da4c:	cmp	r3, #0
   1da4e:	it	eq
   1da50:	cmpeq	r2, #10
   1da52:	bne.n	1da58 <btrfs_read_fs_root@@Base+0xaa>
   1da54:	ldr	r4, [r0, #48]	; 0x30
   1da56:	b.n	1da2e <btrfs_read_fs_root@@Base+0x80>
   1da58:	mov.w	r1, #4294967295	; 0xffffffff
   1da5c:	cmp	r3, r1
   1da5e:	mvn.w	r0, #7
   1da62:	it	eq
   1da64:	cmpeq	r2, r0
   1da66:	beq.n	1daa6 <btrfs_read_fs_root@@Base+0xf8>
   1da68:	ldr.w	r3, [r9, #9]
   1da6c:	ldr.w	r2, [r9, #13]
   1da70:	ands	r3, r2
   1da72:	adds	r3, #1
   1da74:	it	ne
   1da76:	movne	r3, #1
   1da78:	ldr	r6, [pc, #132]	; (1db00 <btrfs_read_fs_root@@Base+0x152>)
   1da7a:	movw	r2, #735	; 0x2df
   1da7e:	ldr	r0, [pc, #132]	; (1db04 <btrfs_read_fs_root@@Base+0x156>)
   1da80:	add.w	r7, r5, #56	; 0x38
   1da84:	add	r6, pc
   1da86:	adds	r6, #70	; 0x46
   1da88:	add	r0, pc
   1da8a:	mov	r1, r6
   1da8c:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1da90:	ldr	r2, [pc, #116]	; (1db08 <btrfs_read_fs_root@@Base+0x15a>)
   1da92:	add	r1, sp, #8
   1da94:	movs	r3, #0
   1da96:	add	r2, pc
   1da98:	mov	r0, r7
   1da9a:	bl	17868 <rb_search@@Base>
   1da9e:	cbz	r0, 1daaa <btrfs_read_fs_root@@Base+0xfc>
   1daa0:	sub.w	r4, r0, #528	; 0x210
   1daa4:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1daa6:	movs	r3, #1
   1daa8:	b.n	1da78 <btrfs_read_fs_root@@Base+0xca>
   1daaa:	mov	r1, r9
   1daac:	mov	r0, r5
   1daae:	bl	1d8ac <btrfs_read_fs_root_no_cache@@Base>
   1dab2:	cmn.w	r0, #4096	; 0x1000
   1dab6:	mov	r4, r0
   1dab8:	bhi.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1daba:	ldr	r3, [pc, #80]	; (1db0c <btrfs_read_fs_root@@Base+0x15e>)
   1dabc:	add.w	r1, r0, #528	; 0x210
   1dac0:	mov	r0, r7
   1dac2:	ldr.w	r3, [r8, r3]
   1dac6:	mov	r2, r3
   1dac8:	str	r3, [sp, #4]
   1daca:	bl	17820 <rb_insert@@Base>
   1dace:	movw	r2, #749	; 0x2ed
   1dad2:	mov	r1, r6
   1dad4:	mov	r3, r0
   1dad6:	ldr	r0, [pc, #56]	; (1db10 <btrfs_read_fs_root@@Base+0x162>)
   1dad8:	add	r0, pc
   1dada:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1dade:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1dae0:	mvn.w	r4, #1
   1dae4:	b.n	1d9e0 <btrfs_read_fs_root@@Base+0x32>
   1dae6:	mov	r0, r4
   1dae8:	add	sp, #28
   1daea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1daee:	nop
   1daf0:	strb	r6, [r2, #15]
   1daf2:	movs	r4, r0
   1daf4:	lsls	r4, r4, #8
   1daf6:	movs	r0, r0
   1daf8:	strb	r2, [r6, #14]
   1dafa:	movs	r4, r0
   1dafc:	strb	r4, [r4, #14]
   1dafe:	movs	r4, r0
   1db00:	ldrh.w	r0, [r9, #1]
   1db04:			; <UNDEFINED> instruction: 0xf5330001
   1db08:	b.n	1de4a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   1db0a:	vmlal.u<illegal width 64>	q8, d15, d28[0]
   1db0e:	movs	r0, r0
   1db10:	stmia	r3!, {r2, r3}
   1db12:	movs	r1, r0

0001db14 <btrfs_setup_all_roots@@Base>:
   1db14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db18:	mov	r6, r2
   1db1a:	ldr	r2, [pc, #716]	; (1dde8 <btrfs_setup_all_roots@@Base+0x2d4>)
   1db1c:	mov	r7, r3
   1db1e:	ldr	r3, [pc, #716]	; (1ddec <btrfs_setup_all_roots@@Base+0x2d8>)
   1db20:	sub	sp, #60	; 0x3c
   1db22:	add	r2, pc
   1db24:	ldr.w	r9, [r0, #28]
   1db28:	ldr.w	r5, [r0, #308]	; 0x134
   1db2c:	mov	r1, r0
   1db2e:	ldr	r3, [r2, r3]
   1db30:	mov	r4, r0
   1db32:	mov	r0, r9
   1db34:	movs	r2, #1
   1db36:	ldr	r3, [r3, #0]
   1db38:	str	r3, [sp, #52]	; 0x34
   1db3a:	mov.w	r3, #0
   1db3e:	movs	r3, #0
   1db40:	ldr.w	sl, [sp, #96]	; 0x60
   1db44:	bl	1c538 <btrfs_setup_root@@Base>
   1db48:	ldr	r3, [r5, #76]	; 0x4c
   1db4a:	orrs.w	r2, r6, r7
   1db4e:	ldr.w	r8, [pc, #672]	; 1ddf0 <btrfs_setup_all_roots@@Base+0x2dc>
   1db52:	ldr.w	fp, [r5, #72]	; 0x48
   1db56:	add	r8, pc
   1db58:	str	r3, [sp, #28]
   1db5a:	and.w	r3, sl, #4
   1db5e:	bne.n	1db90 <btrfs_setup_all_roots@@Base+0x7c>
   1db60:	cbnz	r3, 1db94 <btrfs_setup_all_roots@@Base+0x80>
   1db62:	ldr	r6, [r5, #80]	; 0x50
   1db64:	ldr	r7, [r5, #84]	; 0x54
   1db66:	ldr	r3, [sp, #28]
   1db68:	mov	r2, r6
   1db6a:	mov	r0, r4
   1db6c:	str.w	fp, [sp]
   1db70:	str	r3, [sp, #4]
   1db72:	mov	r3, r7
   1db74:	bl	1d62c <read_tree_block@@Base>
   1db78:	str.w	r0, [r9]
   1db7c:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1db80:	cbnz	r0, 1dbe4 <btrfs_setup_all_roots@@Base+0xd0>
   1db82:	ldr	r3, [pc, #624]	; (1ddf4 <btrfs_setup_all_roots@@Base+0x2e0>)
   1db84:	ldr	r0, [pc, #624]	; (1ddf8 <btrfs_setup_all_roots@@Base+0x2e4>)
   1db86:	ldr.w	r3, [r8, r3]
   1db8a:	add	r0, pc
   1db8c:	ldr	r1, [r3, #0]
   1db8e:	b.n	1dbaa <btrfs_setup_all_roots@@Base+0x96>
   1db90:	cmp	r3, #0
   1db92:	beq.n	1db66 <btrfs_setup_all_roots@@Base+0x52>
   1db94:	mov	r0, r5
   1db96:	bl	1bc62 <btrfs_fs_roots_compare_roots@@Base+0x4>
   1db9a:	cmp	r0, #3
   1db9c:	ble.n	1dbc8 <btrfs_setup_all_roots@@Base+0xb4>
   1db9e:	ldr	r3, [pc, #596]	; (1ddf4 <btrfs_setup_all_roots@@Base+0x2e0>)
   1dba0:	ldr	r0, [pc, #600]	; (1ddfc <btrfs_setup_all_roots@@Base+0x2e8>)
   1dba2:	ldr.w	r3, [r8, r3]
   1dba6:	add	r0, pc
   1dba8:	ldr	r1, [r3, #0]
   1dbaa:	blx	8b1c <fputs@plt+0x4>
   1dbae:	mvn.w	r6, #4
   1dbb2:	ldr	r2, [pc, #588]	; (1de00 <btrfs_setup_all_roots@@Base+0x2ec>)
   1dbb4:	ldr	r3, [pc, #564]	; (1ddec <btrfs_setup_all_roots@@Base+0x2d8>)
   1dbb6:	add	r2, pc
   1dbb8:	ldr	r3, [r2, r3]
   1dbba:	ldr	r2, [r3, #0]
   1dbbc:	ldr	r3, [sp, #52]	; 0x34
   1dbbe:	eors	r2, r3
   1dbc0:	beq.w	1dde0 <btrfs_setup_all_roots@@Base+0x2cc>
   1dbc4:	blx	86b8 <__stack_chk_fail@plt>
   1dbc8:	ldr.w	r3, [r4, #308]	; 0x134
   1dbcc:	movs	r2, #168	; 0xa8
   1dbce:	addw	r3, r3, #2859	; 0xb2b
   1dbd2:	mla	r0, r2, r0, r3
   1dbd6:	ldr	r3, [r0, #12]
   1dbd8:	ldr.w	fp, [r0, #8]
   1dbdc:	ldr	r6, [r0, #0]
   1dbde:	ldr	r7, [r0, #4]
   1dbe0:	str	r3, [sp, #28]
   1dbe2:	b.n	1db66 <btrfs_setup_all_roots@@Base+0x52>
   1dbe4:	ldr	r3, [pc, #540]	; (1de04 <btrfs_setup_all_roots@@Base+0x2f0>)
   1dbe6:	movs	r2, #2
   1dbe8:	mov	r1, sl
   1dbea:	mov	r0, r4
   1dbec:	add	r3, pc
   1dbee:	str	r3, [sp, #8]
   1dbf0:	movs	r3, #0
   1dbf2:	strd	r2, r3, [sp]
   1dbf6:	ldr	r2, [r4, #24]
   1dbf8:	bl	1d84a <read_tree_block@@Base+0x21e>
   1dbfc:	mov	r6, r0
   1dbfe:	cmp	r0, #0
   1dc00:	bne.n	1dbb2 <btrfs_setup_all_roots@@Base+0x9e>
   1dc02:	ldr	r3, [r4, #24]
   1dc04:	movs	r7, #1
   1dc06:	movs	r2, #4
   1dc08:	mov	r1, r4
   1dc0a:	mov	r0, r9
   1dc0c:	str.w	r7, [r3, #492]	; 0x1ec
   1dc10:	ldr	r3, [r4, #36]	; 0x24
   1dc12:	str	r3, [sp, #0]
   1dc14:	movs	r3, #0
   1dc16:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1dc1a:	cbz	r0, 1dc2a <btrfs_setup_all_roots@@Base+0x116>
   1dc1c:	ldr	r3, [pc, #468]	; (1ddf4 <btrfs_setup_all_roots@@Base+0x2e0>)
   1dc1e:	ldr	r0, [pc, #488]	; (1de08 <btrfs_setup_all_roots@@Base+0x2f4>)
   1dc20:	ldr.w	r3, [r8, r3]
   1dc24:	add	r0, pc
   1dc26:	ldr	r1, [r3, #0]
   1dc28:	b.n	1dbaa <btrfs_setup_all_roots@@Base+0x96>
   1dc2a:	ldr	r3, [r4, #36]	; 0x24
   1dc2c:	movs	r2, #7
   1dc2e:	mov	r1, sl
   1dc30:	mov	r0, r4
   1dc32:	str.w	r7, [r3, #492]	; 0x1ec
   1dc36:	ldr	r3, [pc, #468]	; (1de0c <btrfs_setup_all_roots@@Base+0x2f8>)
   1dc38:	add	r3, pc
   1dc3a:	str	r3, [sp, #8]
   1dc3c:	movs	r3, #0
   1dc3e:	strd	r2, r3, [sp]
   1dc42:	ldr	r2, [r4, #40]	; 0x28
   1dc44:	bl	1d84a <read_tree_block@@Base+0x21e>
   1dc48:	mov	r6, r0
   1dc4a:	cmp	r0, #0
   1dc4c:	bne.n	1dbb2 <btrfs_setup_all_roots@@Base+0x9e>
   1dc4e:	ldr	r3, [r4, #40]	; 0x28
   1dc50:	movs	r2, #9
   1dc52:	mov	r1, r4
   1dc54:	mov	r0, r9
   1dc56:	str.w	r7, [r3, #492]	; 0x1ec
   1dc5a:	ldr	r3, [r4, #52]	; 0x34
   1dc5c:	str	r3, [sp, #0]
   1dc5e:	movs	r3, #0
   1dc60:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1dc64:	cbz	r0, 1dcbc <btrfs_setup_all_roots@@Base+0x1a8>
   1dc66:	ldr	r0, [r4, #52]	; 0x34
   1dc68:	blx	85dc <free@plt+0x4>
   1dc6c:	str	r6, [r4, #52]	; 0x34
   1dc6e:	ldr	r3, [r4, #44]	; 0x2c
   1dc70:	movs	r2, #8
   1dc72:	mov	r1, r4
   1dc74:	mov	r0, r9
   1dc76:	str	r3, [sp, #0]
   1dc78:	movs	r3, #0
   1dc7a:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1dc7e:	cbz	r0, 1dcc4 <btrfs_setup_all_roots@@Base+0x1b0>
   1dc80:	ldr	r0, [r4, #44]	; 0x2c
   1dc82:	blx	85dc <free@plt+0x4>
   1dc86:	movs	r3, #0
   1dc88:	str	r3, [r4, #44]	; 0x2c
   1dc8a:	ldr.w	r3, [r4, #308]	; 0x134
   1dc8e:	ldr.w	r1, [r3, #180]	; 0xb4
   1dc92:	movs	r3, #0
   1dc94:	and.w	r2, r1, #1
   1dc98:	orrs	r3, r2
   1dc9a:	beq.n	1dcda <btrfs_setup_all_roots@@Base+0x1c6>
   1dc9c:	ldr	r3, [r4, #48]	; 0x30
   1dc9e:	movs	r2, #10
   1dca0:	mov	r1, r4
   1dca2:	mov	r0, r9
   1dca4:	str	r3, [sp, #0]
   1dca6:	movs	r3, #0
   1dca8:	bl	1d7ec <read_tree_block@@Base+0x1c0>
   1dcac:	cbz	r0, 1dcd2 <btrfs_setup_all_roots@@Base+0x1be>
   1dcae:	ldr	r3, [pc, #324]	; (1ddf4 <btrfs_setup_all_roots@@Base+0x2e0>)
   1dcb0:	ldr	r0, [pc, #348]	; (1de10 <btrfs_setup_all_roots@@Base+0x2fc>)
   1dcb2:	ldr.w	r3, [r8, r3]
   1dcb6:	add	r0, pc
   1dcb8:	ldr	r1, [r3, #0]
   1dcba:	b.n	1dbaa <btrfs_setup_all_roots@@Base+0x96>
   1dcbc:	ldr	r3, [r4, #52]	; 0x34
   1dcbe:	str.w	r7, [r3, #492]	; 0x1ec
   1dcc2:	b.n	1dc6e <btrfs_setup_all_roots@@Base+0x15a>
   1dcc4:	ldrb.w	r3, [r4, #364]	; 0x16c
   1dcc8:	orr.w	r3, r3, #16
   1dccc:	strb.w	r3, [r4, #364]	; 0x16c
   1dcd0:	b.n	1dc8a <btrfs_setup_all_roots@@Base+0x176>
   1dcd2:	ldr	r3, [r4, #48]	; 0x30
   1dcd4:	movs	r2, #1
   1dcd6:	str.w	r2, [r3, #492]	; 0x1ec
   1dcda:	ldr	r3, [r5, #96]	; 0x60
   1dcdc:	mov.w	r0, #544	; 0x220
   1dce0:	str	r3, [sp, #16]
   1dce2:	ldr	r3, [r5, #100]	; 0x64
   1dce4:	str	r3, [sp, #20]
   1dce6:	blx	8820 <malloc@plt+0x4>
   1dcea:	mov	r7, r0
   1dcec:	cmp	r0, #0
   1dcee:	beq.n	1dd82 <btrfs_setup_all_roots@@Base+0x26e>
   1dcf0:	ldrd	r2, r3, [sp, #16]
   1dcf4:	orrs	r3, r2
   1dcf6:	bne.n	1dd3e <btrfs_setup_all_roots@@Base+0x22a>
   1dcf8:	blx	85dc <free@plt+0x4>
   1dcfc:	ldr	r3, [sp, #28]
   1dcfe:	str.w	fp, [r4, #232]	; 0xe8
   1dd02:	strd	r3, fp, [r4, #236]	; 0xec
   1dd06:	str.w	r3, [r4, #244]	; 0xf4
   1dd0a:	ldr	r3, [r4, #24]
   1dd0c:	ldr	r0, [r3, #0]
   1dd0e:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1dd12:	cmp	r0, #0
   1dd14:	beq.n	1dd9a <btrfs_setup_all_roots@@Base+0x286>
   1dd16:	tst.w	sl, #32
   1dd1a:	bne.n	1dd9a <btrfs_setup_all_roots@@Base+0x286>
   1dd1c:	mov	r0, r4
   1dd1e:	bl	21a38 <btrfs_read_block_groups@@Base>
   1dd22:	subs	r5, r0, #0
   1dd24:	bge.n	1dd9a <btrfs_setup_all_roots@@Base+0x286>
   1dd26:	adds	r3, r5, #2
   1dd28:	beq.n	1dd9a <btrfs_setup_all_roots@@Base+0x286>
   1dd2a:	blx	8938 <__errno_location@plt>
   1dd2e:	negs	r3, r5
   1dd30:	mov	r6, r5
   1dd32:	str	r3, [r0, #0]
   1dd34:	ldr	r0, [pc, #220]	; (1de14 <btrfs_setup_all_roots@@Base+0x300>)
   1dd36:	add	r0, pc
   1dd38:	bl	17424 <__btrfs_error@@Base>
   1dd3c:	b.n	1dbb2 <btrfs_setup_all_roots@@Base+0x9e>
   1dd3e:	mov	r1, r4
   1dd40:	mvn.w	r2, #5
   1dd44:	mov.w	r3, #4294967295	; 0xffffffff
   1dd48:	bl	1c538 <btrfs_setup_root@@Base>
   1dd4c:	ldr	r3, [r5, #72]	; 0x48
   1dd4e:	ldr	r2, [r5, #76]	; 0x4c
   1dd50:	mov	r0, r4
   1dd52:	adds	r3, #1
   1dd54:	adc.w	r2, r2, #0
   1dd58:	strd	r3, r2, [sp]
   1dd5c:	ldrd	r2, r3, [sp, #16]
   1dd60:	bl	1d62c <read_tree_block@@Base>
   1dd64:	str	r7, [r4, #60]	; 0x3c
   1dd66:	str	r0, [r7, #0]
   1dd68:	mov	r3, r0
   1dd6a:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1dd6e:	mov	r5, r0
   1dd70:	cmp	r0, #0
   1dd72:	bne.n	1dcfc <btrfs_setup_all_roots@@Base+0x1e8>
   1dd74:	mov	r0, r3
   1dd76:	bl	16bc8 <free_extent_buffer@@Base>
   1dd7a:	mov	r0, r7
   1dd7c:	blx	85dc <free@plt+0x4>
   1dd80:	str	r5, [r4, #60]	; 0x3c
   1dd82:	ldr	r3, [pc, #112]	; (1ddf4 <btrfs_setup_all_roots@@Base+0x2e0>)
   1dd84:	ldr	r0, [pc, #144]	; (1de18 <btrfs_setup_all_roots@@Base+0x304>)
   1dd86:	ldr.w	r3, [r8, r3]
   1dd8a:	add	r0, pc
   1dd8c:	ldr	r1, [r3, #0]
   1dd8e:	blx	8b1c <fputs@plt+0x4>
   1dd92:	tst.w	sl, #2
   1dd96:	bne.n	1dcfc <btrfs_setup_all_roots@@Base+0x1e8>
   1dd98:	b.n	1dbae <btrfs_setup_all_roots@@Base+0x9a>
   1dd9a:	add	r1, sp, #32
   1dd9c:	mov	r0, r4
   1dd9e:	movs	r2, #5
   1dda0:	movs	r3, #0
   1dda2:	strd	r2, r3, [sp, #32]
   1dda6:	mov.w	r2, #4294967295	; 0xffffffff
   1ddaa:	movs	r3, #132	; 0x84
   1ddac:	strb.w	r2, [sp, #41]	; 0x29
   1ddb0:	strb.w	r3, [sp, #40]	; 0x28
   1ddb4:	strb.w	r2, [sp, #42]	; 0x2a
   1ddb8:	strb.w	r2, [sp, #43]	; 0x2b
   1ddbc:	strb.w	r2, [sp, #44]	; 0x2c
   1ddc0:	strb.w	r2, [sp, #45]	; 0x2d
   1ddc4:	strb.w	r2, [sp, #46]	; 0x2e
   1ddc8:	strb.w	r2, [sp, #47]	; 0x2f
   1ddcc:	strb.w	r2, [sp, #48]	; 0x30
   1ddd0:	bl	1d9ae <btrfs_read_fs_root@@Base>
   1ddd4:	cmn.w	r0, #4096	; 0x1000
   1ddd8:	str	r0, [r4, #20]
   1ddda:	bls.w	1dbb2 <btrfs_setup_all_roots@@Base+0x9e>
   1ddde:	b.n	1dbae <btrfs_setup_all_roots@@Base+0x9a>
   1dde0:	mov	r0, r6
   1dde2:	add	sp, #60	; 0x3c
   1dde4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dde8:	strb	r6, [r4, #9]
   1ddea:	movs	r4, r0
   1ddec:	lsls	r4, r4, #8
   1ddee:	movs	r0, r0
   1ddf0:	strb	r2, [r6, #8]
   1ddf2:	movs	r4, r0
   1ddf4:	lsls	r4, r6, #8
   1ddf6:	movs	r0, r0
   1ddf8:	eors.w	r0, ip, #8454144	; 0x810000
   1ddfc:	orn	r0, r4, #8454144	; 0x810000
   1de00:	strb	r2, [r2, #7]
   1de02:	movs	r4, r0
   1de04:	lsrs	r2, r0, #30
   1de06:	movs	r2, r0
   1de08:	ands.w	r0, fp, #8454144	; 0x810000
   1de0c:	bic.w	r0, r3, #8454144	; 0x810000
   1de10:	usat16	r0, #1, sl
   1de14:	bfi	r0, r7, #0, #2
   1de18:			; <UNDEFINED> instruction: 0xf2f50001

0001de1c <btrfs_setup_chunk_tree_and_device_map@@Base>:
   1de1c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de20:	mov	r1, r0
   1de22:	ldr.w	r8, [r0, #308]	; 0x134
   1de26:	mov	r4, r0
   1de28:	mov	r6, r2
   1de2a:	ldr	r0, [r0, #32]
   1de2c:	movs	r2, #3
   1de2e:	mov	r7, r3
   1de30:	movs	r3, #0
   1de32:	ldr.w	r9, [pc, #212]	; 1df08 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   1de36:	bl	1c538 <btrfs_setup_root@@Base>
   1de3a:	mov	r0, r4
   1de3c:	bl	2a310 <btrfs_read_sys_array@@Base>
   1de40:	add	r9, pc
   1de42:	mov	r5, r0
   1de44:	cmp	r0, #0
   1de46:	bne.n	1dec4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1de48:	orrs.w	r3, r6, r7
   1de4c:	ldr.w	fp, [r8, #164]	; 0xa4
   1de50:	ldr.w	sl, [r8, #168]	; 0xa8
   1de54:	beq.n	1de82 <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   1de56:	ldr.w	ip, [r4, #388]	; 0x184
   1de5a:	movs	r0, #0
   1de5c:	adds.w	r1, ip, #4294967295	; 0xffffffff
   1de60:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1de64:	and.w	r2, r1, r6
   1de68:	and.w	r3, r0, r7
   1de6c:	orrs.w	r1, r2, r3
   1de70:	beq.n	1de8e <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   1de72:	ldr	r0, [pc, #152]	; (1df0c <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   1de74:	mov	r2, r6
   1de76:	mov	r3, r7
   1de78:	str.w	ip, [sp]
   1de7c:	add	r0, pc
   1de7e:	bl	173a8 <__btrfs_warning@@Base>
   1de82:	ldr.w	r6, [r8, #88]	; 0x58
   1de86:	mov	r2, fp
   1de88:	ldr.w	r7, [r8, #92]	; 0x5c
   1de8c:	mov	r3, sl
   1de8e:	strd	r2, r3, [sp]
   1de92:	mov	r0, r4
   1de94:	mov	r2, r6
   1de96:	mov	r3, r7
   1de98:	ldr.w	sl, [r4, #32]
   1de9c:	bl	1d62c <read_tree_block@@Base>
   1dea0:	str.w	r0, [sl]
   1dea4:	ldr	r3, [r4, #32]
   1dea6:	ldr	r0, [r3, #0]
   1dea8:	bl	1bdb8 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1deac:	mov	r6, r0
   1deae:	cbnz	r0, 1deda <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   1deb0:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1deb4:	cmp	r3, #0
   1deb6:	bge.n	1decc <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   1deb8:	ldr	r0, [pc, #84]	; (1df10 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   1deba:	mov	r5, r6
   1debc:	add	r0, pc
   1debe:	bl	173a8 <__btrfs_warning@@Base>
   1dec2:	str	r6, [r4, #32]
   1dec4:	mov	r0, r5
   1dec6:	add	sp, #12
   1dec8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1decc:	ldr	r0, [pc, #68]	; (1df14 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   1dece:	mvn.w	r5, #4
   1ded2:	add	r0, pc
   1ded4:	bl	17424 <__btrfs_error@@Base>
   1ded8:	b.n	1dec4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1deda:	ldr.w	r1, [r8, #60]	; 0x3c
   1dede:	movs	r2, #0
   1dee0:	and.w	r3, r1, #2
   1dee4:	orrs	r3, r2
   1dee6:	bne.n	1dec4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1dee8:	mov	r0, r4
   1deea:	bl	2a4b8 <btrfs_read_chunk_tree@@Base>
   1deee:	mov	r5, r0
   1def0:	cmp	r0, #0
   1def2:	beq.n	1dec4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1def4:	ldr	r3, [pc, #32]	; (1df18 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   1def6:	ldr	r0, [pc, #36]	; (1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   1def8:	ldr.w	r3, [r9, r3]
   1defc:	add	r0, pc
   1defe:	ldr	r1, [r3, #0]
   1df00:	blx	8b1c <fputs@plt+0x4>
   1df04:	b.n	1dec4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1df06:	nop
   1df08:	ldr	r0, [r1, #116]	; 0x74
   1df0a:	movs	r4, r0
   1df0c:	movw	r0, #4097	; 0x1001
   1df10:			; <UNDEFINED> instruction: 0xf2360001
   1df14:	movw	r0, #32769	; 0x8001
   1df18:	lsls	r4, r6, #8
   1df1a:	movs	r0, r0
   1df1c:			; <UNDEFINED> instruction: 0xf2350001
   1df20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df24:	mov	r8, r2
   1df26:	ldr	r2, [pc, #624]	; (1e198 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   1df28:	mov	r9, r3
   1df2a:	ldr	r3, [pc, #624]	; (1e19c <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1df2c:	sub	sp, #36	; 0x24
   1df2e:	add	r2, pc
   1df30:	ldr	r7, [pc, #620]	; (1e1a0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   1df32:	ldr	r5, [sp, #88]	; 0x58
   1df34:	mov	sl, r0
   1df36:	ldr	r3, [r2, r3]
   1df38:	movs	r2, #0
   1df3a:	add	r7, pc
   1df3c:	mov	r6, r1
   1df3e:	ldr	r3, [r3, #0]
   1df40:	str	r3, [sp, #28]
   1df42:	mov.w	r3, #0
   1df46:	movs	r3, #0
   1df48:	str	r3, [sp, #24]
   1df4a:	orrs.w	r3, r8, r9
   1df4e:	mov.w	r3, #4
   1df52:	str	r3, [sp, #8]
   1df54:	mov.w	r3, #0
   1df58:	strd	r2, r3, [sp]
   1df5c:	itt	eq
   1df5e:	moveq.w	r8, #65536	; 0x10000
   1df62:	moveq.w	r9, #0
   1df66:	blx	858c <posix_fadvise64@plt>
   1df6a:	cbz	r0, 1df7a <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   1df6c:	ldr	r3, [pc, #564]	; (1e1a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1df6e:	ldr	r0, [pc, #568]	; (1e1a8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   1df70:	ldr	r3, [r7, r3]
   1df72:	add	r0, pc
   1df74:	ldr	r1, [r3, #0]
   1df76:	blx	8b1c <fputs@plt+0x4>
   1df7a:	and.w	fp, r5, #1
   1df7e:	mov	r2, r8
   1df80:	mov	r3, r9
   1df82:	mov	r0, fp
   1df84:	bl	1c606 <btrfs_new_fs_info@@Base>
   1df88:	mov	r4, r0
   1df8a:	cbnz	r0, 1dfb0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   1df8c:	ldr	r3, [pc, #532]	; (1e1a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1df8e:	ldr	r0, [pc, #540]	; (1e1ac <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   1df90:	ldr	r3, [r7, r3]
   1df92:	add	r0, pc
   1df94:	ldr	r1, [r3, #0]
   1df96:	blx	8b1c <fputs@plt+0x4>
   1df9a:	ldr	r2, [pc, #532]	; (1e1b0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   1df9c:	ldr	r3, [pc, #508]	; (1e19c <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1df9e:	add	r2, pc
   1dfa0:	ldr	r3, [r2, r3]
   1dfa2:	ldr	r2, [r3, #0]
   1dfa4:	ldr	r3, [sp, #28]
   1dfa6:	eors	r2, r3
   1dfa8:	beq.w	1e190 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   1dfac:	blx	86b8 <__stack_chk_fail@plt>
   1dfb0:	lsls	r3, r5, #27
   1dfb2:	ittt	mi
   1dfb4:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   1dfb8:	orrmi.w	r3, r3, #4
   1dfbc:	strbmi.w	r3, [r0, #364]	; 0x16c
   1dfc0:	lsls	r0, r5, #23
   1dfc2:	ittt	mi
   1dfc4:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1dfc8:	orrmi.w	r3, r3, #32
   1dfcc:	strbmi.w	r3, [r4, #364]	; 0x16c
   1dfd0:	ands.w	r2, r5, #1024	; 0x400
   1dfd4:	ittt	ne
   1dfd6:	ldrbne.w	r3, [r4, #364]	; 0x16c
   1dfda:	orrne.w	r3, r3, #64	; 0x40
   1dfde:	strbne.w	r3, [r4, #364]	; 0x16c
   1dfe2:	lsls	r1, r5, #20
   1dfe4:	ittt	mi
   1dfe6:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1dfea:	orrmi.w	r3, r3, #128	; 0x80
   1dfee:	strbmi.w	r3, [r4, #364]	; 0x16c
   1dff2:	movw	r3, #4104	; 0x1008
   1dff6:	bics	r3, r5
   1dff8:	bne.n	1e012 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   1dffa:	ldr	r3, [pc, #424]	; (1e1a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1dffc:	ldr	r0, [pc, #436]	; (1e1b4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   1dffe:	ldr	r3, [r7, r3]
   1e000:	add	r0, pc
   1e002:	ldr	r1, [r3, #0]
   1e004:	blx	8b1c <fputs@plt+0x4>
   1e008:	mov	r0, r4
   1e00a:	movs	r4, #0
   1e00c:	bl	1c5b8 <btrfs_free_fs_info@@Base>
   1e010:	b.n	1df9a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e012:	ands.w	r3, r5, #4096	; 0x1000
   1e016:	it	ne
   1e018:	movne	r3, #2
   1e01a:	cbz	r2, 1e020 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   1e01c:	orr.w	r3, r3, #4
   1e020:	and.w	r2, r5, #128	; 0x80
   1e024:	mov	r1, r6
   1e026:	strd	r3, r2, [sp, #8]
   1e02a:	mov	r0, sl
   1e02c:	add	r2, sp, #24
   1e02e:	strd	r8, r9, [sp]
   1e032:	str	r3, [sp, #20]
   1e034:	bl	1c8c0 <btrfs_scan_fs_devices@@Base>
   1e038:	mov	r1, r0
   1e03a:	cmp	r0, #0
   1e03c:	bne.n	1e008 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e03e:	cmp.w	fp, #0
   1e042:	ldr	r0, [sp, #24]
   1e044:	ldr	r3, [sp, #20]
   1e046:	it	ne
   1e048:	movne	r1, #2
   1e04a:	tst.w	r5, #64	; 0x40
   1e04e:	it	ne
   1e050:	orrne.w	r1, r1, #128	; 0x80
   1e054:	str.w	r0, [r4, #352]	; 0x160
   1e058:	str	r3, [sp, #20]
   1e05a:	bl	27fc4 <btrfs_open_devices@@Base>
   1e05e:	cmp	r0, #0
   1e060:	bne.n	1e008 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e062:	tst.w	r5, #8
   1e066:	ldr.w	r6, [r4, #308]	; 0x134
   1e06a:	ldr	r3, [sp, #20]
   1e06c:	beq.n	1e098 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   1e06e:	ldr	r0, [sp, #24]
   1e070:	movs	r3, #1
   1e072:	str	r3, [sp, #0]
   1e074:	mov	r2, r8
   1e076:	mov	r3, r9
   1e078:	mov	r1, r6
   1e07a:	ldr	r0, [r0, #64]	; 0x40
   1e07c:	bl	1cc70 <btrfs_read_dev_super@@Base>
   1e080:	cbz	r0, 1e0a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   1e082:	ldr	r3, [pc, #288]	; (1e1a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e084:	ldr	r0, [pc, #304]	; (1e1b8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   1e086:	ldr	r3, [r7, r3]
   1e088:	add	r0, pc
   1e08a:	ldr	r1, [r3, #0]
   1e08c:	blx	8b1c <fputs@plt+0x4>
   1e090:	ldr	r0, [sp, #24]
   1e092:	bl	27ed4 <btrfs_close_devices@@Base>
   1e096:	b.n	1e008 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e098:	str	r3, [sp, #0]
   1e09a:	mov	r2, r8
   1e09c:	mov	r3, r9
   1e09e:	mov	r1, r6
   1e0a0:	mov	r0, sl
   1e0a2:	b.n	1e07c <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   1e0a4:	ldr	r1, [r6, #60]	; 0x3c
   1e0a6:	mov	r2, r0
   1e0a8:	and.w	r3, r1, #8
   1e0ac:	orrs	r3, r2
   1e0ae:	beq.n	1e0c4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e0b0:	ldrb.w	r3, [r4, #364]	; 0x16c
   1e0b4:	lsls	r2, r3, #25
   1e0b6:	bmi.n	1e0c4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e0b8:	ldr	r3, [pc, #232]	; (1e1a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e0ba:	ldr	r0, [pc, #256]	; (1e1bc <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   1e0bc:	ldr	r3, [r7, r3]
   1e0be:	add	r0, pc
   1e0c0:	ldr	r1, [r3, #0]
   1e0c2:	b.n	1e08c <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   1e0c4:	ldr.w	r8, [sp, #24]
   1e0c8:	add.w	r0, r6, #32
   1e0cc:	movs	r2, #16
   1e0ce:	mov	r1, r8
   1e0d0:	blx	8650 <memcmp@plt+0x4>
   1e0d4:	cbz	r0, 1e0e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   1e0d6:	ldr	r1, [pc, #232]	; (1e1c0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   1e0d8:	movw	r2, #1251	; 0x4e3
   1e0dc:	ldr	r0, [pc, #228]	; (1e1c4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   1e0de:	add	r1, pc
   1e0e0:	adds	r1, #89	; 0x59
   1e0e2:	add	r0, pc
   1e0e4:	bl	1bf6c <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1e0e8:	ldr.w	r7, [r4, #308]	; 0x134
   1e0ec:	mov	r3, r0
   1e0ee:	ldr.w	r1, [r7, #188]	; 0xbc
   1e0f2:	and.w	r2, r1, #1024	; 0x400
   1e0f6:	orrs	r3, r2
   1e0f8:	beq.n	1e11a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e0fa:	movs	r2, #16
   1e0fc:	addw	r0, r6, #571	; 0x23b
   1e100:	add.w	r1, r8, r2
   1e104:	blx	8650 <memcmp@plt+0x4>
   1e108:	cbz	r0, 1e11a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e10a:	ldr	r1, [pc, #188]	; (1e1c8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   1e10c:	movw	r2, #1253	; 0x4e5
   1e110:	ldr	r0, [pc, #184]	; (1e1cc <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   1e112:	add	r1, pc
   1e114:	adds	r1, #89	; 0x59
   1e116:	add	r0, pc
   1e118:	b.n	1e0e4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   1e11a:	ldr.w	r3, [r6, #144]	; 0x90
   1e11e:	mov	r1, r5
   1e120:	mov	r0, r7
   1e122:	str.w	r3, [r4, #388]	; 0x184
   1e126:	ldr.w	r3, [r6, #148]	; 0x94
   1e12a:	str.w	r3, [r4, #384]	; 0x180
   1e12e:	ldr.w	r3, [r6, #156]	; 0x9c
   1e132:	str.w	r3, [r4, #392]	; 0x188
   1e136:	bl	1c75c <btrfs_check_fs_compatibility@@Base>
   1e13a:	cmp	r0, #0
   1e13c:	bne.n	1e090 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e13e:	ldrd	r2, r3, [sp, #80]	; 0x50
   1e142:	mov	r0, r4
   1e144:	bl	1de1c <btrfs_setup_chunk_tree_and_device_map@@Base>
   1e148:	cbz	r0, 1e158 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   1e14a:	mov	r0, r4
   1e14c:	bl	1c7fc <btrfs_release_all_roots@@Base>
   1e150:	mov	r0, r4
   1e152:	bl	1c860 <btrfs_cleanup_all_caches@@Base>
   1e156:	b.n	1e090 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e158:	ldr	r0, [r4, #32]
   1e15a:	cmp	r0, #0
   1e15c:	beq.w	1df9a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e160:	ldr	r0, [r0, #0]
   1e162:	movs	r3, #16
   1e164:	movs	r2, #64	; 0x40
   1e166:	mov	r1, r4
   1e168:	bl	172c2 <read_extent_buffer@@Base>
   1e16c:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e170:	mov	r0, r4
   1e172:	str	r5, [sp, #0]
   1e174:	bl	1db14 <btrfs_setup_all_roots@@Base>
   1e178:	cmp	r0, #0
   1e17a:	beq.w	1df9a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e17e:	lsls	r3, r5, #22
   1e180:	bmi.w	1df9a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e184:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1e188:	cmp	r3, #0
   1e18a:	blt.w	1df9a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e18e:	b.n	1e14a <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   1e190:	mov	r0, r4
   1e192:	add	sp, #36	; 0x24
   1e194:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e198:	ldr	r2, [r3, #100]	; 0x64
   1e19a:	movs	r4, r0
   1e19c:	lsls	r4, r4, #8
   1e19e:	movs	r0, r0
   1e1a0:	ldr	r6, [r1, #100]	; 0x64
   1e1a2:	movs	r4, r0
   1e1a4:	lsls	r4, r6, #8
   1e1a6:	movs	r0, r0
   1e1a8:	rsbs	r0, r9, #1
   1e1ac:	rsbs	r0, r9, #1
   1e1b0:	ldr	r2, [r5, #92]	; 0x5c
   1e1b2:	movs	r4, r0
   1e1b4:			; <UNDEFINED> instruction: 0xf1920001
   1e1b8:	adc.w	r0, fp, #1
   1e1bc:			; <UNDEFINED> instruction: 0xf12b0001
   1e1c0:			; <UNDEFINED> instruction: 0xf25f0001
   1e1c4:			; <UNDEFINED> instruction: 0xf1320001
   1e1c8:			; <UNDEFINED> instruction: 0xf22b0001
   1e1cc:			; <UNDEFINED> instruction: 0xf13b0001

0001e1d0 <open_ctree_fs_info@@Base>:
   1e1d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e1d4:	mov	r9, r2
   1e1d6:	ldr	r2, [pc, #164]	; (1e27c <open_ctree_fs_info@@Base+0xac>)
   1e1d8:	mov	r8, r3
   1e1da:	ldr	r3, [pc, #164]	; (1e280 <open_ctree_fs_info@@Base+0xb0>)
   1e1dc:	sub	sp, #140	; 0x8c
   1e1de:	add	r2, pc
   1e1e0:	add	r1, sp, #24
   1e1e2:	ldr	r6, [sp, #184]	; 0xb8
   1e1e4:	mov	r4, r0
   1e1e6:	ldr	r3, [r2, r3]
   1e1e8:	ldr	r3, [r3, #0]
   1e1ea:	str	r3, [sp, #132]	; 0x84
   1e1ec:	mov.w	r3, #0
   1e1f0:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   1e1f4:	cmp	r0, #0
   1e1f6:	bge.n	1e218 <open_ctree_fs_info@@Base+0x48>
   1e1f8:	ldr	r0, [pc, #136]	; (1e284 <open_ctree_fs_info@@Base+0xb4>)
   1e1fa:	mov	r1, r4
   1e1fc:	add	r0, pc
   1e1fe:	bl	17424 <__btrfs_error@@Base>
   1e202:	movs	r4, #0
   1e204:	ldr	r2, [pc, #128]	; (1e288 <open_ctree_fs_info@@Base+0xb8>)
   1e206:	ldr	r3, [pc, #120]	; (1e280 <open_ctree_fs_info@@Base+0xb0>)
   1e208:	add	r2, pc
   1e20a:	ldr	r3, [r2, r3]
   1e20c:	ldr	r2, [r3, #0]
   1e20e:	ldr	r3, [sp, #132]	; 0x84
   1e210:	eors	r2, r3
   1e212:	beq.n	1e274 <open_ctree_fs_info@@Base+0xa4>
   1e214:	blx	86b8 <__stack_chk_fail@plt>
   1e218:	ldr	r1, [sp, #40]	; 0x28
   1e21a:	and.w	r1, r1, #61440	; 0xf000
   1e21e:	cmp.w	r1, #32768	; 0x8000
   1e222:	beq.n	1e232 <open_ctree_fs_info@@Base+0x62>
   1e224:	cmp.w	r1, #24576	; 0x6000
   1e228:	beq.n	1e232 <open_ctree_fs_info@@Base+0x62>
   1e22a:	ldr	r0, [pc, #96]	; (1e28c <open_ctree_fs_info@@Base+0xbc>)
   1e22c:	mov	r1, r4
   1e22e:	add	r0, pc
   1e230:	b.n	1e1fe <open_ctree_fs_info@@Base+0x2e>
   1e232:	tst.w	r6, #1
   1e236:	mov	r0, r4
   1e238:	ite	ne
   1e23a:	movne	r1, #2
   1e23c:	moveq	r1, #0
   1e23e:	blx	892c <__open64_2@plt>
   1e242:	subs	r5, r0, #0
   1e244:	bge.n	1e24e <open_ctree_fs_info@@Base+0x7e>
   1e246:	ldr	r0, [pc, #72]	; (1e290 <open_ctree_fs_info@@Base+0xc0>)
   1e248:	mov	r1, r4
   1e24a:	add	r0, pc
   1e24c:	b.n	1e1fe <open_ctree_fs_info@@Base+0x2e>
   1e24e:	str	r6, [sp, #16]
   1e250:	mov	r1, r4
   1e252:	ldrd	r6, r7, [sp, #176]	; 0xb0
   1e256:	mov	r2, r9
   1e258:	mov	r3, r8
   1e25a:	strd	r6, r7, [sp, #8]
   1e25e:	ldrd	r6, r7, [sp, #168]	; 0xa8
   1e262:	strd	r6, r7, [sp]
   1e266:	bl	1df20 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1e26a:	mov	r4, r0
   1e26c:	mov	r0, r5
   1e26e:	blx	8b4c <close@plt>
   1e272:	b.n	1e204 <open_ctree_fs_info@@Base+0x34>
   1e274:	mov	r0, r4
   1e276:	add	sp, #140	; 0x8c
   1e278:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e27c:	ldr	r2, [r5, #56]	; 0x38
   1e27e:	movs	r4, r0
   1e280:	lsls	r4, r4, #8
   1e282:	movs	r0, r0
   1e284:			; <UNDEFINED> instruction: 0xf0a40001
   1e288:	ldr	r0, [r0, #56]	; 0x38
   1e28a:	movs	r4, r0
   1e28c:	eor.w	r0, r7, #1
   1e290:	eors.w	r0, r2, #1

0001e294 <open_ctree@@Base>:
   1e294:	push	{r4, r5, r6, r7, lr}
   1e296:	sub	sp, #28
   1e298:	ldr	r1, [pc, #64]	; (1e2dc <open_ctree@@Base+0x48>)
   1e29a:	mov	r5, r0
   1e29c:	ldr	r4, [sp, #48]	; 0x30
   1e29e:	mov	r7, r2
   1e2a0:	ldr	r0, [pc, #60]	; (1e2e0 <open_ctree@@Base+0x4c>)
   1e2a2:	add	r1, pc
   1e2a4:	mov	r6, r3
   1e2a6:	movw	r2, #1335	; 0x537
   1e2aa:	and.w	r3, r4, #2048	; 0x800
   1e2ae:	add	r0, pc
   1e2b0:	adds	r1, #105	; 0x69
   1e2b2:	bl	1bfe4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1e2b6:	movs	r2, #0
   1e2b8:	movs	r3, #0
   1e2ba:	mov	r0, r5
   1e2bc:	strd	r2, r3, [sp, #8]
   1e2c0:	strd	r2, r3, [sp]
   1e2c4:	mov	r2, r7
   1e2c6:	mov	r3, r6
   1e2c8:	str	r4, [sp, #16]
   1e2ca:	bl	1e1d0 <open_ctree_fs_info@@Base>
   1e2ce:	cbz	r0, 1e2d8 <open_ctree@@Base+0x44>
   1e2d0:	lsls	r3, r4, #22
   1e2d2:	ite	mi
   1e2d4:	ldrmi	r0, [r0, #32]
   1e2d6:	ldrpl	r0, [r0, #20]
   1e2d8:	add	sp, #28
   1e2da:	pop	{r4, r5, r6, r7, pc}
   1e2dc:	eors.w	r0, fp, #1
   1e2e0:	orr.w	r0, r3, #1

0001e2e4 <open_ctree_fd@@Base>:
   1e2e4:	push	{r4, r6, r7, lr}
   1e2e6:	sub	sp, #24
   1e2e8:	ldr	r4, [sp, #40]	; 0x28
   1e2ea:	lsls	r6, r4, #20
   1e2ec:	bpl.n	1e300 <open_ctree_fd@@Base+0x1c>
   1e2ee:	ldr	r0, [pc, #48]	; (1e320 <open_ctree_fd@@Base+0x3c>)
   1e2f0:	mov	r2, r4
   1e2f2:	movs	r3, #0
   1e2f4:	add	r0, pc
   1e2f6:	bl	17424 <__btrfs_error@@Base>
   1e2fa:	movs	r0, #0
   1e2fc:	add	sp, #24
   1e2fe:	pop	{r4, r6, r7, pc}
   1e300:	movs	r6, #0
   1e302:	movs	r7, #0
   1e304:	str	r4, [sp, #16]
   1e306:	strd	r6, r7, [sp, #8]
   1e30a:	strd	r6, r7, [sp]
   1e30e:	bl	1df20 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1e312:	cmp	r0, #0
   1e314:	beq.n	1e2fc <open_ctree_fd@@Base+0x18>
   1e316:	lsls	r3, r4, #22
   1e318:	ite	mi
   1e31a:	ldrmi	r0, [r0, #32]
   1e31c:	ldrpl	r0, [r0, #20]
   1e31e:	b.n	1e2fc <open_ctree_fd@@Base+0x18>
   1e320:	bic.w	r0, r8, #1

0001e324 <btrfs_create_tree@@Base>:
   1e324:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e328:	mov	r9, r2
   1e32a:	vpush	{d8}
   1e32e:	mov	r8, r3
   1e330:	ldr	r2, [pc, #428]	; (1e4e0 <btrfs_create_tree@@Base+0x1bc>)
   1e332:	mov	r7, r0
   1e334:	ldr	r3, [pc, #428]	; (1e4e4 <btrfs_create_tree@@Base+0x1c0>)
   1e336:	mov	sl, r1
   1e338:	add	r2, pc
   1e33a:	movs	r0, #1
   1e33c:	sub	sp, #60	; 0x3c
   1e33e:	ldr	r3, [r2, r3]
   1e340:	ldr	r3, [r3, #0]
   1e342:	str	r3, [sp, #52]	; 0x34
   1e344:	mov.w	r3, #0
   1e348:	ldr	r3, [r1, #28]
   1e34a:	mov.w	r1, #544	; 0x220
   1e34e:	vmov	s16, r3
   1e352:	blx	8544 <calloc@plt+0x4>
   1e356:	mov	r4, r0
   1e358:	cmp	r0, #0
   1e35a:	beq.w	1e4cc <btrfs_create_tree@@Base+0x1a8>
   1e35e:	mov	r2, r9
   1e360:	mov	r3, r8
   1e362:	mov	r1, sl
   1e364:	mov.w	fp, #132	; 0x84
   1e368:	bl	1c538 <btrfs_setup_root@@Base>
   1e36c:	movs	r6, #0
   1e36e:	str.w	r9, [r4, #447]	; 0x1bf
   1e372:	movs	r2, #0
   1e374:	str.w	r8, [r4, #451]	; 0x1c3
   1e378:	movs	r3, #0
   1e37a:	strb.w	fp, [r4, #455]	; 0x1c7
   1e37e:	mov	r1, r4
   1e380:	strd	r2, r3, [r4, #456]	; 0x1c8
   1e384:	mov	r0, r7
   1e386:	strd	r2, r3, [sp, #24]
   1e38a:	strd	r2, r3, [sp, #16]
   1e38e:	strd	r6, r6, [sp, #8]
   1e392:	ldr.w	r2, [sl, #384]	; 0x180
   1e396:	strd	r9, r8, [sp]
   1e39a:	bl	22a0c <btrfs_alloc_free_block@@Base>
   1e39e:	cmn.w	r0, #4096	; 0x1000
   1e3a2:	mov	r5, r0
   1e3a4:	bls.n	1e3c6 <btrfs_create_tree@@Base+0xa2>
   1e3a6:	mov	r6, r0
   1e3a8:	mov	r0, r4
   1e3aa:	mov	r4, r6
   1e3ac:	blx	85dc <free@plt+0x4>
   1e3b0:	ldr	r2, [pc, #308]	; (1e4e8 <btrfs_create_tree@@Base+0x1c4>)
   1e3b2:	ldr	r3, [pc, #304]	; (1e4e4 <btrfs_create_tree@@Base+0x1c0>)
   1e3b4:	add	r2, pc
   1e3b6:	ldr	r3, [r2, r3]
   1e3b8:	ldr	r2, [r3, #0]
   1e3ba:	ldr	r3, [sp, #52]	; 0x34
   1e3bc:	eors	r2, r3
   1e3be:	beq.w	1e4d2 <btrfs_create_tree@@Base+0x1ae>
   1e3c2:	blx	86b8 <__stack_chk_fail@plt>
   1e3c6:	mov	r2, r6
   1e3c8:	mov	r1, r6
   1e3ca:	movs	r3, #101	; 0x65
   1e3cc:	bl	1734a <memset_extent_buffer@@Base>
   1e3d0:	ldr	r3, [r5, #40]	; 0x28
   1e3d2:	mov	r0, r5
   1e3d4:	str.w	r3, [r5, #144]	; 0x90
   1e3d8:	ldr	r3, [r5, #44]	; 0x2c
   1e3da:	str.w	r3, [r5, #148]	; 0x94
   1e3de:	ldrd	r2, r3, [r7, #8]
   1e3e2:	str.w	r9, [r5, #184]	; 0xb8
   1e3e6:	str.w	r8, [r5, #188]	; 0xbc
   1e3ea:	str.w	r2, [r5, #176]	; 0xb0
   1e3ee:	str.w	r3, [r5, #180]	; 0xb4
   1e3f2:	ldr.w	r2, [r5, #152]	; 0x98
   1e3f6:	ldr.w	r3, [r5, #156]	; 0x9c
   1e3fa:	bic.w	r3, r3, #4278190080	; 0xff000000
   1e3fe:	str.w	r2, [r5, #152]	; 0x98
   1e402:	orr.w	r3, r3, #16777216	; 0x1000000
   1e406:	str.w	r3, [r5, #156]	; 0x9c
   1e40a:	ldr.w	r1, [sl, #352]	; 0x160
   1e40e:	movs	r3, #16
   1e410:	movs	r2, #32
   1e412:	str	r5, [r4, #0]
   1e414:	add	r1, r3
   1e416:	bl	172d8 <write_extent_buffer@@Base>
   1e41a:	movs	r3, #16
   1e41c:	movs	r2, #64	; 0x40
   1e41e:	mov	r1, sl
   1e420:	mov	r0, r5
   1e422:	bl	172d8 <write_extent_buffer@@Base>
   1e426:	mov	r0, r5
   1e428:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1e42c:	ldr	r2, [r4, #0]
   1e42e:	movs	r1, #1
   1e430:	add.w	r0, r4, #255	; 0xff
   1e434:	ldr	r3, [r2, #80]	; 0x50
   1e436:	adds	r3, #1
   1e438:	str	r3, [r2, #80]	; 0x50
   1e43a:	ldr	r3, [r4, #0]
   1e43c:	movs	r2, #0
   1e43e:	str.w	r1, [r4, #492]	; 0x1ec
   1e442:	str	r3, [r4, #4]
   1e444:	movs	r3, #0
   1e446:	strd	r2, r3, [r4, #216]	; 0xd8
   1e44a:	strd	r2, r3, [r4, #192]	; 0xc0
   1e44e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1e452:	strb.w	r6, [r4, #246]	; 0xf6
   1e456:	str.w	r1, [r4, #224]	; 0xe0
   1e45a:	mov	r1, r6
   1e45c:	strd	r2, r3, [r4, #184]	; 0xb8
   1e460:	ldrd	r2, r3, [r7, #8]
   1e464:	strd	r2, r3, [r4, #168]	; 0xa8
   1e468:	movs	r2, #0
   1e46a:	ldr	r3, [r5, #76]	; 0x4c
   1e46c:	strd	r3, r6, [r4, #200]	; 0xc8
   1e470:	movs	r3, #0
   1e472:	strd	r2, r3, [r4, #208]	; 0xd0
   1e476:	strd	r2, r3, [r4, #176]	; 0xb0
   1e47a:	movs	r2, #16
   1e47c:	blx	8978 <memset@plt+0x4>
   1e480:	strb.w	r6, [r4, #245]	; 0xf5
   1e484:	vmov	r1, s16
   1e488:	add.w	r3, r4, #8
   1e48c:	add	r2, sp, #32
   1e48e:	mov	r0, r7
   1e490:	strb.w	r6, [sp, #41]	; 0x29
   1e494:	strb.w	r6, [sp, #42]	; 0x2a
   1e498:	strb.w	r6, [sp, #43]	; 0x2b
   1e49c:	strb.w	r6, [sp, #44]	; 0x2c
   1e4a0:	strb.w	r6, [sp, #45]	; 0x2d
   1e4a4:	strb.w	r6, [sp, #46]	; 0x2e
   1e4a8:	strb.w	r6, [sp, #47]	; 0x2f
   1e4ac:	strb.w	r6, [sp, #48]	; 0x30
   1e4b0:	strd	r9, r8, [sp, #32]
   1e4b4:	strb.w	fp, [sp, #40]	; 0x28
   1e4b8:	bl	27b58 <btrfs_insert_root@@Base>
   1e4bc:	mov	r6, r0
   1e4be:	cmp	r0, #0
   1e4c0:	beq.w	1e3b0 <btrfs_create_tree@@Base+0x8c>
   1e4c4:	mov	r0, r5
   1e4c6:	bl	16bc8 <free_extent_buffer@@Base>
   1e4ca:	b.n	1e3a8 <btrfs_create_tree@@Base+0x84>
   1e4cc:	mvn.w	r4, #11
   1e4d0:	b.n	1e3b0 <btrfs_create_tree@@Base+0x8c>
   1e4d2:	mov	r0, r4
   1e4d4:	add	sp, #60	; 0x3c
   1e4d6:	vpop	{d8}
   1e4da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4de:	nop
   1e4e0:	ldr	r0, [r2, #36]	; 0x24
   1e4e2:	movs	r4, r0
   1e4e4:	lsls	r4, r4, #8
   1e4e6:	movs	r0, r0
   1e4e8:	ldr	r4, [r2, #28]
   1e4ea:	movs	r4, r0
   1e4ec:	push	{r4, r5, lr}
   1e4ee:	mov	r1, r0
   1e4f0:	ldr.w	r3, [r0, #356]	; 0x164
   1e4f4:	and.w	r2, r2, #7
   1e4f8:	add.w	r1, r1, #356	; 0x164
   1e4fc:	sub.w	r0, r3, #44	; 0x2c
   1e500:	add.w	r3, r0, #44	; 0x2c
   1e504:	cmp	r3, r1
   1e506:	bne.n	1e50c <btrfs_create_tree@@Base+0x1e8>
   1e508:	movs	r0, #0
   1e50a:	pop	{r4, r5, pc}
   1e50c:	ldr	r3, [r0, #0]
   1e50e:	movs	r5, #0
   1e510:	and.w	r4, r2, r3
   1e514:	orrs.w	r3, r4, r5
   1e518:	bne.n	1e50a <btrfs_create_tree@@Base+0x1e6>
   1e51a:	ldr	r0, [r0, #44]	; 0x2c
   1e51c:	subs	r0, #44	; 0x2c
   1e51e:	b.n	1e500 <btrfs_create_tree@@Base+0x1dc>
   1e520:	push	{r4, r5, r6, r7, lr}
   1e522:	movs	r3, #0
   1e524:	and.w	r4, r2, #2040	; 0x7f8
   1e528:	mov	r5, r3
   1e52a:	orrs.w	r1, r4, r5
   1e52e:	beq.n	1e57a <btrfs_create_tree@@Base+0x256>
   1e530:	and.w	r6, r2, #1
   1e534:	mov	r7, r3
   1e536:	orrs.w	r3, r6, r7
   1e53a:	and.w	r6, r2, #4
   1e53e:	mov.w	r7, #0
   1e542:	ittt	ne
   1e544:	ldrne.w	r3, [r0, #248]	; 0xf8
   1e548:	orrne	r3, r4
   1e54a:	strne.w	r3, [r0, #248]	; 0xf8
   1e54e:	orrs.w	r3, r6, r7
   1e552:	and.w	r6, r2, #2
   1e556:	mov.w	r7, #0
   1e55a:	itttt	ne
   1e55c:	ldrdne	r1, r3, [r0, #256]	; 0x100
   1e560:	orrne	r3, r5
   1e562:	orrne	r1, r4
   1e564:	strdne	r1, r3, [r0, #256]	; 0x100
   1e568:	orrs.w	r3, r6, r7
   1e56c:	itttt	ne
   1e56e:	ldrdne	r2, r3, [r0, #264]	; 0x108
   1e572:	orrne	r2, r4
   1e574:	orrne	r3, r5
   1e576:	strdne	r2, r3, [r0, #264]	; 0x108
   1e57a:	pop	{r4, r5, r6, r7, pc}
   1e57c:	push	{r4, lr}
   1e57e:	mov	r4, r1
   1e580:	ldr	r1, [pc, #84]	; (1e5d8 <btrfs_create_tree@@Base+0x2b4>)
   1e582:	sub	sp, #24
   1e584:	ldr	r3, [pc, #84]	; (1e5dc <btrfs_create_tree@@Base+0x2b8>)
   1e586:	add	r1, pc
   1e588:	ldr	r3, [r1, r3]
   1e58a:	mov	r1, sp
   1e58c:	ldr	r3, [r3, #0]
   1e58e:	str	r3, [sp, #20]
   1e590:	mov.w	r3, #0
   1e594:	movs	r3, #25
   1e596:	muls	r2, r3
   1e598:	movs	r3, #17
   1e59a:	adds	r2, #101	; 0x65
   1e59c:	bl	172c2 <read_extent_buffer@@Base>
   1e5a0:	ldr.w	r3, [sp, #13]
   1e5a4:	ldr.w	r2, [sp, #9]
   1e5a8:	str.w	r3, [r4, #13]
   1e5ac:	ldrb.w	r3, [sp, #8]
   1e5b0:	str.w	r2, [r4, #9]
   1e5b4:	ldr	r2, [pc, #40]	; (1e5e0 <btrfs_create_tree@@Base+0x2bc>)
   1e5b6:	strb	r3, [r4, #8]
   1e5b8:	ldr	r3, [sp, #0]
   1e5ba:	add	r2, pc
   1e5bc:	str	r3, [r4, #0]
   1e5be:	ldr	r3, [sp, #4]
   1e5c0:	str	r3, [r4, #4]
   1e5c2:	ldr	r3, [pc, #24]	; (1e5dc <btrfs_create_tree@@Base+0x2b8>)
   1e5c4:	ldr	r3, [r2, r3]
   1e5c6:	ldr	r2, [r3, #0]
   1e5c8:	ldr	r3, [sp, #20]
   1e5ca:	eors	r2, r3
   1e5cc:	beq.n	1e5d2 <btrfs_create_tree@@Base+0x2ae>
   1e5ce:	blx	86b8 <__stack_chk_fail@plt>
   1e5d2:	add	sp, #24
   1e5d4:	pop	{r4, pc}
   1e5d6:	nop
   1e5d8:	ldr	r2, [r0, #0]
   1e5da:	movs	r4, r0
   1e5dc:	lsls	r4, r4, #8
   1e5de:	movs	r0, r0
   1e5e0:	str	r6, [r1, #124]	; 0x7c
   1e5e2:	movs	r4, r0
   1e5e4:	ldr	r2, [pc, #60]	; (1e624 <btrfs_create_tree@@Base+0x300>)
   1e5e6:	movs	r1, #16
   1e5e8:	ldr	r3, [pc, #60]	; (1e628 <btrfs_create_tree@@Base+0x304>)
   1e5ea:	push	{r4, lr}
   1e5ec:	add	r2, pc
   1e5ee:	sub	sp, #72	; 0x48
   1e5f0:	add	r4, sp, #4
   1e5f2:	ldr	r3, [r2, r3]
   1e5f4:	mov	r0, r4
   1e5f6:	ldr	r3, [r3, #0]
   1e5f8:	str	r3, [sp, #68]	; 0x44
   1e5fa:	mov.w	r3, #0
   1e5fe:	blx	886c <backtrace@plt>
   1e602:	movs	r2, #2
   1e604:	mov	r1, r0
   1e606:	mov	r0, r4
   1e608:	blx	8b7c <backtrace_symbols_fd@plt>
   1e60c:	ldr	r2, [pc, #28]	; (1e62c <btrfs_create_tree@@Base+0x308>)
   1e60e:	ldr	r3, [pc, #24]	; (1e628 <btrfs_create_tree@@Base+0x304>)
   1e610:	add	r2, pc
   1e612:	ldr	r3, [r2, r3]
   1e614:	ldr	r2, [r3, #0]
   1e616:	ldr	r3, [sp, #68]	; 0x44
   1e618:	eors	r2, r3
   1e61a:	beq.n	1e620 <btrfs_create_tree@@Base+0x2fc>
   1e61c:	blx	86b8 <__stack_chk_fail@plt>
   1e620:	add	sp, #72	; 0x48
   1e622:	pop	{r4, pc}
   1e624:	str	r4, [r3, #120]	; 0x78
   1e626:	movs	r4, r0
   1e628:	lsls	r4, r4, #8
   1e62a:	movs	r0, r0
   1e62c:	str	r0, [r7, #116]	; 0x74
   1e62e:	movs	r4, r0
   1e630:	push	{r0, r1, r2, lr}
   1e632:	movs	r3, #1
   1e634:	str	r3, [sp, #0]
   1e636:	ldr	r3, [r2, #32]
   1e638:	bl	1b3a0 <btrfs_del_items@@Base>
   1e63c:	add	sp, #12
   1e63e:	ldr.w	pc, [sp], #4
   1e642:	push	{r4, r5, lr}
   1e644:	sub	sp, #20
   1e646:	ldr	r4, [pc, #40]	; (1e670 <btrfs_create_tree@@Base+0x34c>)
   1e648:	ldr	r5, [pc, #40]	; (1e674 <btrfs_create_tree@@Base+0x350>)
   1e64a:	add	r4, pc
   1e64c:	ldr	r4, [r4, r5]
   1e64e:	ldr	r5, [sp, #32]
   1e650:	strd	r3, r2, [sp]
   1e654:	mov	r3, r1
   1e656:	ldr	r2, [pc, #32]	; (1e678 <btrfs_create_tree@@Base+0x354>)
   1e658:	movs	r1, #1
   1e65a:	strd	r0, r5, [sp, #8]
   1e65e:	add	r2, pc
   1e660:	ldr	r0, [r4, #0]
   1e662:	blx	8a14 <__fprintf_chk@plt+0x4>
   1e666:	add	sp, #20
   1e668:	ldmia.w	sp!, {r4, r5, lr}
   1e66c:	b.n	1e5e4 <btrfs_create_tree@@Base+0x2c0>
   1e66e:	nop
   1e670:	str	r6, [r7, #112]	; 0x70
   1e672:	movs	r4, r0
   1e674:	lsls	r4, r6, #8
   1e676:	movs	r0, r0
   1e678:	cbz	r6, 1e67e <btrfs_create_tree@@Base+0x35a>
   1e67a:	movs	r1, r0
   1e67c:	push	{r4}
   1e67e:	ldr	r4, [sp, #4]
   1e680:	cbz	r4, 1e68c <btrfs_create_tree@@Base+0x368>
   1e682:	movs	r4, #1
   1e684:	str	r4, [sp, #4]
   1e686:	ldr.w	r4, [sp], #4
   1e68a:	b.n	1e642 <btrfs_create_tree@@Base+0x31e>
   1e68c:	ldr.w	r4, [sp], #4
   1e690:	bx	lr
   1e692:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e696:	mov	r7, r0
   1e698:	ldr	r5, [pc, #452]	; (1e860 <btrfs_create_tree@@Base+0x53c>)
   1e69a:	sub	sp, #100	; 0x64
   1e69c:	ldr	r0, [pc, #452]	; (1e864 <btrfs_create_tree@@Base+0x540>)
   1e69e:	mov	r6, r1
   1e6a0:	add	r5, pc
   1e6a2:	mov	r4, r2
   1e6a4:	ldrb.w	r9, [r4, #196]	; 0xc4
   1e6a8:	ldr	r0, [r5, r0]
   1e6aa:	ldr	r2, [pc, #444]	; (1e868 <btrfs_create_tree@@Base+0x544>)
   1e6ac:	ldr	r0, [r0, #0]
   1e6ae:	str	r0, [sp, #92]	; 0x5c
   1e6b0:	mov.w	r0, #0
   1e6b4:	ldr.w	r0, [r6, #488]	; 0x1e8
   1e6b8:	add	r2, pc
   1e6ba:	ldr	r1, [sp, #136]	; 0x88
   1e6bc:	orrs.w	r0, r9, r0
   1e6c0:	bne.n	1e6dc <btrfs_create_tree@@Base+0x3b8>
   1e6c2:	mov.w	sl, #0
   1e6c6:	ldr	r2, [pc, #420]	; (1e86c <btrfs_create_tree@@Base+0x548>)
   1e6c8:	ldr	r3, [pc, #408]	; (1e864 <btrfs_create_tree@@Base+0x540>)
   1e6ca:	add	r2, pc
   1e6cc:	ldr	r3, [r2, r3]
   1e6ce:	ldr	r2, [r3, #0]
   1e6d0:	ldr	r3, [sp, #92]	; 0x5c
   1e6d2:	eors	r2, r3
   1e6d4:	beq.w	1e856 <btrfs_create_tree@@Base+0x532>
   1e6d8:	blx	86b8 <__stack_chk_fail@plt>
   1e6dc:	cmp	r1, #0
   1e6de:	bne.w	1e7ee <btrfs_create_tree@@Base+0x4ca>
   1e6e2:	ldr	r1, [pc, #396]	; (1e870 <btrfs_create_tree@@Base+0x54c>)
   1e6e4:	ldr.w	r8, [r2, r1]
   1e6e8:	cmp	r3, #0
   1e6ea:	beq.w	1e7f2 <btrfs_create_tree@@Base+0x4ce>
   1e6ee:	ldrd	r2, r3, [r4, #40]	; 0x28
   1e6f2:	strd	r2, r3, [sp, #40]	; 0x28
   1e6f6:	movs	r5, #0
   1e6f8:	ldr.w	r3, [r4, #184]	; 0xb8
   1e6fc:	str	r3, [sp, #48]	; 0x30
   1e6fe:	ldr.w	r3, [r4, #188]	; 0xbc
   1e702:	str	r3, [sp, #52]	; 0x34
   1e704:	ldr.w	r3, [r4, #192]	; 0xc0
   1e708:	str	r3, [sp, #56]	; 0x38
   1e70a:	add.w	r3, r9, #4294967295	; 0xffffffff
   1e70e:	asrs	r2, r3, #31
   1e710:	mov	r1, r3
   1e712:	strd	r1, r2, [sp, #64]	; 0x40
   1e716:	ldr	r3, [sp, #56]	; 0x38
   1e718:	cmp	r5, r3
   1e71a:	beq.n	1e6c2 <btrfs_create_tree@@Base+0x39e>
   1e71c:	cmp.w	r9, #0
   1e720:	bne.n	1e7f8 <btrfs_create_tree@@Base+0x4d4>
   1e722:	add	r1, sp, #72	; 0x48
   1e724:	mov	r2, r5
   1e726:	mov	r0, r4
   1e728:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1e72c:	ldrb.w	r3, [sp, #80]	; 0x50
   1e730:	cmp	r3, #108	; 0x6c
   1e732:	bne.w	1e852 <btrfs_create_tree@@Base+0x52e>
   1e736:	movs	r3, #25
   1e738:	mla	r3, r3, r5, r4
   1e73c:	ldr.w	r2, [r3, #214]	; 0xd6
   1e740:	add	r2, r4
   1e742:	add.w	r3, r2, #197	; 0xc5
   1e746:	ldrb.w	r2, [r2, #217]	; 0xd9
   1e74a:	cmp	r2, #0
   1e74c:	beq.w	1e852 <btrfs_create_tree@@Base+0x52e>
   1e750:	mov	r2, r3
   1e752:	ldr.w	sl, [r2, #21]!
   1e756:	ldr.w	fp, [r2, #4]
   1e75a:	orrs.w	r2, sl, fp
   1e75e:	beq.n	1e852 <btrfs_create_tree@@Base+0x52e>
   1e760:	mov	r2, r3
   1e762:	ldr.w	r0, [r3, #37]!
   1e766:	ldr.w	r1, [r2, #29]!
   1e76a:	ldr.w	ip, [r3, #4]
   1e76e:	ldr.w	lr, [r2, #4]
   1e772:	ldr.w	r2, [sp, #81]	; 0x51
   1e776:	str	r1, [sp, #60]	; 0x3c
   1e778:	ldr.w	r1, [sp, #85]	; 0x55
   1e77c:	subs	r2, r2, r0
   1e77e:	str.w	r2, [sp, #81]	; 0x51
   1e782:	mov	r0, r7
   1e784:	sbc.w	r1, r1, ip
   1e788:	strd	r2, r1, [sp, #32]
   1e78c:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e790:	str.w	r1, [sp, #85]	; 0x55
   1e794:	mov	r1, r6
   1e796:	strd	r2, r3, [sp, #24]
   1e79a:	ldr	r3, [sp, #48]	; 0x30
   1e79c:	str	r3, [sp, #16]
   1e79e:	ldr	r3, [sp, #52]	; 0x34
   1e7a0:	str	r3, [sp, #20]
   1e7a2:	ldrd	r2, r3, [sp, #40]	; 0x28
   1e7a6:	strd	r2, r3, [sp, #8]
   1e7aa:	mov	r2, sl
   1e7ac:	ldr	r3, [sp, #60]	; 0x3c
   1e7ae:	strd	r3, lr, [sp]
   1e7b2:	mov	r3, fp
   1e7b4:	blx	r8
   1e7b6:	mov	sl, r0
   1e7b8:	cmp	r0, #0
   1e7ba:	beq.n	1e852 <btrfs_create_tree@@Base+0x52e>
   1e7bc:	ldr	r2, [pc, #180]	; (1e874 <btrfs_create_tree@@Base+0x550>)
   1e7be:	movs	r3, #1
   1e7c0:	ldr	r1, [pc, #180]	; (1e878 <btrfs_create_tree@@Base+0x554>)
   1e7c2:	ldr	r0, [pc, #184]	; (1e87c <btrfs_create_tree@@Base+0x558>)
   1e7c4:	add	r2, pc
   1e7c6:	add	r1, pc
   1e7c8:	str	r3, [sp, #0]
   1e7ca:	add	r0, pc
   1e7cc:	movw	r3, #1502	; 0x5de
   1e7d0:	bl	1e642 <btrfs_create_tree@@Base+0x31e>
   1e7d4:	ldr	r2, [pc, #168]	; (1e880 <btrfs_create_tree@@Base+0x55c>)
   1e7d6:	ldr	r1, [pc, #172]	; (1e884 <btrfs_create_tree@@Base+0x560>)
   1e7d8:	movs	r3, #1
   1e7da:	ldr	r0, [pc, #172]	; (1e888 <btrfs_create_tree@@Base+0x564>)
   1e7dc:	add	r2, pc
   1e7de:	str	r3, [sp, #0]
   1e7e0:	add	r1, pc
   1e7e2:	add	r0, pc
   1e7e4:	movw	r3, #1518	; 0x5ee
   1e7e8:	bl	1e642 <btrfs_create_tree@@Base+0x31e>
   1e7ec:	b.n	1e6c6 <btrfs_create_tree@@Base+0x3a2>
   1e7ee:	ldr	r1, [pc, #156]	; (1e88c <btrfs_create_tree@@Base+0x568>)
   1e7f0:	b.n	1e6e4 <btrfs_create_tree@@Base+0x3c0>
   1e7f2:	movs	r2, #0
   1e7f4:	movs	r3, #0
   1e7f6:	b.n	1e6f2 <btrfs_create_tree@@Base+0x3ce>
   1e7f8:	add.w	r3, r5, r5, lsl #5
   1e7fc:	movs	r0, #0
   1e7fe:	add	r3, r4
   1e800:	movs	r1, #0
   1e802:	ldr.w	r2, [r3, #214]!
   1e806:	ldr	r3, [r3, #4]
   1e808:	strd	r0, r1, [sp, #32]
   1e80c:	ldrd	r0, r1, [sp, #64]	; 0x40
   1e810:	strd	r0, r1, [sp, #24]
   1e814:	ldr	r1, [sp, #48]	; 0x30
   1e816:	str	r1, [sp, #16]
   1e818:	ldr	r1, [sp, #52]	; 0x34
   1e81a:	str	r1, [sp, #20]
   1e81c:	ldrd	r0, r1, [sp, #40]	; 0x28
   1e820:	strd	r0, r1, [sp, #8]
   1e824:	mov	r0, r7
   1e826:	ldr.w	r1, [r6, #464]	; 0x1d0
   1e82a:	ldr.w	r1, [r1, #384]	; 0x180
   1e82e:	str	r1, [sp, #0]
   1e830:	movs	r1, #0
   1e832:	str	r1, [sp, #4]
   1e834:	mov	r1, r6
   1e836:	blx	r8
   1e838:	mov	sl, r0
   1e83a:	cbz	r0, 1e852 <btrfs_create_tree@@Base+0x52e>
   1e83c:	ldr	r2, [pc, #80]	; (1e890 <btrfs_create_tree@@Base+0x56c>)
   1e83e:	movs	r3, #1
   1e840:	ldr	r1, [pc, #80]	; (1e894 <btrfs_create_tree@@Base+0x570>)
   1e842:	ldr	r0, [pc, #84]	; (1e898 <btrfs_create_tree@@Base+0x574>)
   1e844:	add	r2, pc
   1e846:	str	r3, [sp, #0]
   1e848:	add	r1, pc
   1e84a:	add	r0, pc
   1e84c:	movw	r3, #1511	; 0x5e7
   1e850:	b.n	1e7d0 <btrfs_create_tree@@Base+0x4ac>
   1e852:	adds	r5, #1
   1e854:	b.n	1e716 <btrfs_create_tree@@Base+0x3f2>
   1e856:	mov	r0, sl
   1e858:	add	sp, #100	; 0x64
   1e85a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e85e:	nop
   1e860:	str	r0, [r5, #108]	; 0x6c
   1e862:	movs	r4, r0
   1e864:	lsls	r4, r4, #8
   1e866:	movs	r0, r0
   1e868:	str	r0, [r2, #108]	; 0x6c
   1e86a:	movs	r4, r0
   1e86c:	str	r6, [r7, #104]	; 0x68
   1e86e:	movs	r4, r0
   1e870:	lsls	r0, r1, #9
   1e872:	movs	r0, r0
   1e874:			; <UNDEFINED> instruction: 0xf31e0001
   1e878:			; <UNDEFINED> instruction: 0xebeb0001
   1e87c:	vhadd.s8	d16, d7, d1
   1e880:	ssat	r0, #2, r6
   1e884:	rsbs	r0, r1, r1
   1e888:	vhadd.s32	d0, d15, d1
   1e88c:	lsls	r4, r3, #9
   1e88e:	movs	r0, r0
   1e890:			; <UNDEFINED> instruction: 0xf29e0001
   1e894:	sbc.w	r0, r9, r1
   1e898:	cdp	0, 12, cr0, cr7, cr1, {0}
   1e89c:	push	{r0, r1, r2, r3, r4, lr}
   1e89e:	ldr	r4, [pc, #40]	; (1e8c8 <btrfs_create_tree@@Base+0x5a4>)
   1e8a0:	ldr	r5, [pc, #40]	; (1e8cc <btrfs_create_tree@@Base+0x5a8>)
   1e8a2:	add	r4, pc
   1e8a4:	ldr	r4, [r4, r5]
   1e8a6:	ldr	r5, [sp, #24]
   1e8a8:	strd	r3, r2, [sp]
   1e8ac:	mov	r3, r1
   1e8ae:	ldr	r2, [pc, #32]	; (1e8d0 <btrfs_create_tree@@Base+0x5ac>)
   1e8b0:	movs	r1, #1
   1e8b2:	strd	r0, r5, [sp, #8]
   1e8b6:	add	r2, pc
   1e8b8:	ldr	r0, [r4, #0]
   1e8ba:	blx	8a14 <__fprintf_chk@plt+0x4>
   1e8be:	bl	1e5e4 <btrfs_create_tree@@Base+0x2c0>
   1e8c2:	blx	8b34 <abort@plt>
   1e8c6:	nop
   1e8c8:	str	r6, [r4, #76]	; 0x4c
   1e8ca:	movs	r4, r0
   1e8cc:	lsls	r4, r6, #8
   1e8ce:	movs	r0, r0
   1e8d0:	add	r6, sp, #944	; 0x3b0
   1e8d2:	movs	r1, r0
   1e8d4:	push	{r0, r1, r4, lr}
   1e8d6:	ldr	r4, [sp, #16]
   1e8d8:	cbz	r4, 1e8e0 <btrfs_create_tree@@Base+0x5bc>
   1e8da:	str	r4, [sp, #0]
   1e8dc:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   1e8e0:	add	sp, #8
   1e8e2:	pop	{r4, pc}
   1e8e4:	cmp	r0, #176	; 0xb0
   1e8e6:	push	{r0, r1, r2, lr}
   1e8e8:	beq.n	1e910 <btrfs_create_tree@@Base+0x5ec>
   1e8ea:	cmp	r0, #182	; 0xb6
   1e8ec:	beq.n	1e910 <btrfs_create_tree@@Base+0x5ec>
   1e8ee:	cmp	r0, #184	; 0xb8
   1e8f0:	beq.n	1e918 <btrfs_create_tree@@Base+0x5f4>
   1e8f2:	cmp	r0, #178	; 0xb2
   1e8f4:	beq.n	1e91c <btrfs_create_tree@@Base+0x5f8>
   1e8f6:	ldr	r2, [pc, #40]	; (1e920 <btrfs_create_tree@@Base+0x5fc>)
   1e8f8:	movs	r3, #1
   1e8fa:	ldr	r1, [pc, #40]	; (1e924 <btrfs_create_tree@@Base+0x600>)
   1e8fc:	ldr	r0, [pc, #40]	; (1e928 <btrfs_create_tree@@Base+0x604>)
   1e8fe:	add	r2, pc
   1e900:	str	r3, [sp, #0]
   1e902:	adds	r2, #16
   1e904:	add	r1, pc
   1e906:	add	r0, pc
   1e908:	movw	r3, #1818	; 0x71a
   1e90c:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   1e910:	movs	r0, #9
   1e912:	add	sp, #12
   1e914:	ldr.w	pc, [sp], #4
   1e918:	movs	r0, #13
   1e91a:	b.n	1e912 <btrfs_create_tree@@Base+0x5ee>
   1e91c:	movs	r0, #29
   1e91e:	b.n	1e912 <btrfs_create_tree@@Base+0x5ee>
   1e920:			; <UNDEFINED> instruction: 0xf1e40001
   1e924:			; <UNDEFINED> instruction: 0xb690
   1e926:	movs	r1, r0
   1e928:	cdp	0, 0, cr0, cr11, cr1, {0}
   1e92c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e930:	mov	r5, r3
   1e932:	vpush	{d8}
   1e936:	mov	r6, r2
   1e938:	movs	r2, #25
   1e93a:	mov	r7, r1
   1e93c:	vmov	s16, r0
   1e940:	ldr.w	fp, [r1]
   1e944:	sub	sp, #44	; 0x2c
   1e946:	ldr	r3, [r1, #32]
   1e948:	add.w	r4, fp, #96	; 0x60
   1e94c:	mla	r3, r2, r3, r4
   1e950:	adds	r2, r5, #1
   1e952:	ldr.w	r3, [r3, #118]	; 0x76
   1e956:	add.w	r3, r3, #101	; 0x65
   1e95a:	str	r3, [sp, #12]
   1e95c:	add.w	r8, r4, r3
   1e960:	ldr.w	r9, [r4, r3]
   1e964:	ldr.w	sl, [r8, #4]
   1e968:	bne.n	1e9e0 <btrfs_create_tree@@Base+0x6bc>
   1e96a:	cmp.w	sl, #0
   1e96e:	itte	eq
   1e970:	cmpeq.w	r9, #1
   1e974:	moveq	r3, #1
   1e976:	movne	r3, #0
   1e978:	ldr	r2, [pc, #336]	; (1eacc <btrfs_create_tree@@Base+0x7a8>)
   1e97a:	ldr	r1, [pc, #340]	; (1ead0 <btrfs_create_tree@@Base+0x7ac>)
   1e97c:	ldr	r0, [pc, #340]	; (1ead4 <btrfs_create_tree@@Base+0x7b0>)
   1e97e:	add	r2, pc
   1e980:	adds	r2, #45	; 0x2d
   1e982:	add	r1, pc
   1e984:	str	r3, [sp, #0]
   1e986:	add	r0, pc
   1e988:	movw	r3, #1129	; 0x469
   1e98c:	strd	r1, r2, [sp, #16]
   1e990:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1e994:	asrs	r3, r5, #31
   1e996:	mov	r2, r5
   1e998:	strd	r2, r3, [sp, #32]
   1e99c:	ldr	r3, [sp, #12]
   1e99e:	adds.w	r9, r9, r5
   1e9a2:	adc.w	sl, sl, r5, asr #31
   1e9a6:	ldrd	r1, r2, [sp, #16]
   1e9aa:	str.w	r9, [r4, r3]
   1e9ae:	str.w	sl, [r8, #4]
   1e9b2:	ldrb.w	sl, [r4, r6]
   1e9b6:	cmp.w	sl, #178	; 0xb2
   1e9ba:	bne.n	1e9e4 <btrfs_create_tree@@Base+0x6c0>
   1e9bc:	add.w	r9, r6, #1
   1e9c0:	add.w	r3, r4, r9
   1e9c4:	ldr	r3, [r3, #24]
   1e9c6:	str	r3, [sp, #16]
   1e9c8:	movs	r3, #0
   1e9ca:	mov	r8, r3
   1e9cc:	str	r3, [sp, #20]
   1e9ce:	adds	r5, #1
   1e9d0:	bne.n	1ea74 <btrfs_create_tree@@Base+0x750>
   1e9d2:	ldrd	r3, r2, [sp, #16]
   1e9d6:	orrs	r3, r2
   1e9d8:	ite	eq
   1e9da:	moveq	r3, #1
   1e9dc:	movne	r3, #0
   1e9de:	b.n	1ea20 <btrfs_create_tree@@Base+0x6fc>
   1e9e0:	movs	r3, #0
   1e9e2:	b.n	1e978 <btrfs_create_tree@@Base+0x654>
   1e9e4:	cmp.w	sl, #184	; 0xb8
   1e9e8:	bne.n	1e9fc <btrfs_create_tree@@Base+0x6d8>
   1e9ea:	add.w	r8, r6, #9
   1e9ee:	ldr.w	r3, [r4, r8]
   1e9f2:	str	r3, [sp, #16]
   1e9f4:	movs	r3, #0
   1e9f6:	mov	r9, r3
   1e9f8:	str	r3, [sp, #20]
   1e9fa:	b.n	1e9ce <btrfs_create_tree@@Base+0x6aa>
   1e9fc:	adds	r5, #1
   1e9fe:	ldr	r0, [pc, #216]	; (1ead8 <btrfs_create_tree@@Base+0x7b4>)
   1ea00:	mov.w	r8, #0
   1ea04:	movw	r3, #1143	; 0x477
   1ea08:	it	ne
   1ea0a:	movne	r5, #1
   1ea0c:	add	r0, pc
   1ea0e:	str	r5, [sp, #0]
   1ea10:	mov	r9, r8
   1ea12:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1ea16:	movs	r3, #1
   1ea18:	str	r3, [sp, #16]
   1ea1a:	mov	r3, r8
   1ea1c:	str.w	r8, [sp, #20]
   1ea20:	ldr	r2, [pc, #184]	; (1eadc <btrfs_create_tree@@Base+0x7b8>)
   1ea22:	ldr	r1, [pc, #188]	; (1eae0 <btrfs_create_tree@@Base+0x7bc>)
   1ea24:	ldr	r0, [pc, #188]	; (1eae4 <btrfs_create_tree@@Base+0x7c0>)
   1ea26:	add	r2, pc
   1ea28:	adds	r2, #45	; 0x2d
   1ea2a:	str	r3, [sp, #0]
   1ea2c:	add	r1, pc
   1ea2e:	movw	r3, #1146	; 0x47a
   1ea32:	add	r0, pc
   1ea34:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1ea38:	ldr	r2, [sp, #16]
   1ea3a:	ldr	r3, [sp, #32]
   1ea3c:	adds	r3, r3, r2
   1ea3e:	ldr	r2, [sp, #36]	; 0x24
   1ea40:	str	r3, [sp, #24]
   1ea42:	ldr	r3, [sp, #20]
   1ea44:	adc.w	r3, r2, r3
   1ea48:	str	r3, [sp, #28]
   1ea4a:	ldrd	r2, r3, [sp, #24]
   1ea4e:	orrs	r3, r2
   1ea50:	beq.n	1ea78 <btrfs_create_tree@@Base+0x754>
   1ea52:	cmp.w	sl, #178	; 0xb2
   1ea56:	ldr	r3, [sp, #24]
   1ea58:	itet	eq
   1ea5a:	addeq	r4, r9
   1ea5c:	strne.w	r3, [r4, r8]
   1ea60:	streq	r3, [r4, #24]
   1ea62:	mov	r0, fp
   1ea64:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1ea68:	movs	r0, #0
   1ea6a:	add	sp, #44	; 0x2c
   1ea6c:	vpop	{d8}
   1ea70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea74:	movs	r3, #0
   1ea76:	b.n	1ea20 <btrfs_create_tree@@Base+0x6fc>
   1ea78:	mov	r0, sl
   1ea7a:	bl	1e8e4 <btrfs_create_tree@@Base+0x5c0>
   1ea7e:	ldr	r3, [r7, #32]
   1ea80:	movs	r2, #25
   1ea82:	mla	r4, r2, r3, r4
   1ea86:	ldr	r3, [sp, #12]
   1ea88:	ldr.w	r4, [r4, #122]	; 0x7a
   1ea8c:	add	r3, r4
   1ea8e:	adds	r2, r6, r0
   1ea90:	mov	r5, r0
   1ea92:	cmp	r3, r2
   1ea94:	bls.n	1eaa2 <btrfs_create_tree@@Base+0x77e>
   1ea96:	subs	r3, r3, r6
   1ea98:	mov	r1, r6
   1ea9a:	subs	r3, r3, r0
   1ea9c:	mov	r0, fp
   1ea9e:	bl	17334 <memmove_extent_buffer@@Base>
   1eaa2:	subs	r2, r4, r5
   1eaa4:	mov	r1, r7
   1eaa6:	vmov	r0, s16
   1eaaa:	movs	r3, #1
   1eaac:	bl	19e24 <btrfs_truncate_item@@Base>
   1eab0:	ldr	r2, [pc, #52]	; (1eae8 <btrfs_create_tree@@Base+0x7c4>)
   1eab2:	ldr	r1, [pc, #56]	; (1eaec <btrfs_create_tree@@Base+0x7c8>)
   1eab4:	movw	r3, #1164	; 0x48c
   1eab8:	add	r2, pc
   1eaba:	adds	r2, #45	; 0x2d
   1eabc:	add	r1, pc
   1eabe:	str	r0, [sp, #0]
   1eac0:	ldr	r0, [pc, #44]	; (1eaf0 <btrfs_create_tree@@Base+0x7cc>)
   1eac2:	add	r0, pc
   1eac4:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1eac8:	b.n	1ea62 <btrfs_create_tree@@Base+0x73e>
   1eaca:	nop
   1eacc:	sbc.w	r0, r4, #1
   1ead0:	bic.w	r0, pc, r1
   1ead4:	bics.w	r0, r9, r1
   1ead8:	ldrd	r0, r0, [lr, #4]
   1eadc:			; <UNDEFINED> instruction: 0xf0bc0001
   1eae0:			; <UNDEFINED> instruction: 0xe9850001
   1eae4:	strd	r0, r0, [sl, #4]
   1eae8:	bic.w	r0, sl, #1
   1eaec:	ldrd	r0, r0, [r5], #4
   1eaf0:	cbz	r2, 1eb3c <btrfs_create_tree@@Base+0x818>
   1eaf2:	movs	r1, r0
   1eaf4:	push	{r4, r5, r6, r7, lr}
   1eaf6:	mov	r7, r2
   1eaf8:	ldr	r2, [pc, #132]	; (1eb80 <btrfs_create_tree@@Base+0x85c>)
   1eafa:	mov	r4, r3
   1eafc:	ldr	r3, [pc, #132]	; (1eb84 <btrfs_create_tree@@Base+0x860>)
   1eafe:	sub	sp, #36	; 0x24
   1eb00:	add	r2, pc
   1eb02:	mov	r5, r1
   1eb04:	mov	r6, r0
   1eb06:	ldr	r0, [r5, #0]
   1eb08:	ldr	r3, [r2, r3]
   1eb0a:	ldr	r2, [r1, #32]
   1eb0c:	add	r1, sp, #8
   1eb0e:	ldr	r3, [r3, #0]
   1eb10:	str	r3, [sp, #28]
   1eb12:	mov.w	r3, #0
   1eb16:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1eb1a:	ldrb.w	r5, [sp, #16]
   1eb1e:	movw	r3, #3377	; 0xd31
   1eb22:	ldr	r2, [pc, #100]	; (1eb88 <btrfs_create_tree@@Base+0x864>)
   1eb24:	add.w	r1, r5, #88	; 0x58
   1eb28:	ldr	r0, [pc, #96]	; (1eb8c <btrfs_create_tree@@Base+0x868>)
   1eb2a:	add	r2, pc
   1eb2c:	uxtb	r1, r1
   1eb2e:	adds	r2, #74	; 0x4a
   1eb30:	cmp	r1, #1
   1eb32:	add	r0, pc
   1eb34:	ite	ls
   1eb36:	movls	r1, #0
   1eb38:	movhi	r1, #1
   1eb3a:	str	r1, [sp, #0]
   1eb3c:	ldr	r1, [pc, #80]	; (1eb90 <btrfs_create_tree@@Base+0x86c>)
   1eb3e:	add	r1, pc
   1eb40:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1eb44:	ldrd	r2, r3, [sp, #8]
   1eb48:	cmp	r5, #168	; 0xa8
   1eb4a:	strd	r2, r3, [r7]
   1eb4e:	iteet	ne
   1eb50:	ldrne	r3, [r6, #0]
   1eb52:	ldreq.w	r2, [sp, #17]
   1eb56:	ldreq.w	r3, [sp, #21]
   1eb5a:	ldrne.w	r2, [r3, #384]	; 0x180
   1eb5e:	it	ne
   1eb60:	movne	r3, #0
   1eb62:	strd	r2, r3, [r4]
   1eb66:	ldr	r2, [pc, #44]	; (1eb94 <btrfs_create_tree@@Base+0x870>)
   1eb68:	ldr	r3, [pc, #24]	; (1eb84 <btrfs_create_tree@@Base+0x860>)
   1eb6a:	add	r2, pc
   1eb6c:	ldr	r3, [r2, r3]
   1eb6e:	ldr	r2, [r3, #0]
   1eb70:	ldr	r3, [sp, #28]
   1eb72:	eors	r2, r3
   1eb74:	beq.n	1eb7a <btrfs_create_tree@@Base+0x856>
   1eb76:	blx	86b8 <__stack_chk_fail@plt>
   1eb7a:	add	sp, #36	; 0x24
   1eb7c:	pop	{r4, r5, r6, r7, pc}
   1eb7e:	nop
   1eb80:	str	r0, [r1, #40]	; 0x28
   1eb82:	movs	r4, r0
   1eb84:	lsls	r4, r4, #8
   1eb86:	movs	r0, r0
   1eb88:	vext.8	d0, d8, d1, #0
   1eb8c:	ldrd	r0, r0, [r1], #4
   1eb90:	ldrd	r0, r0, [r3], #-4
   1eb94:	str	r6, [r3, #32]
   1eb96:	movs	r4, r0
   1eb98:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   1eb9a:	mov	r4, r0
   1eb9c:	ldrd	r0, r3, [r0, #48]	; 0x30
   1eba0:	ldr	r2, [pc, #140]	; (1ec30 <btrfs_create_tree@@Base+0x90c>)
   1eba2:	orrs	r3, r0
   1eba4:	ldr	r1, [pc, #140]	; (1ec34 <btrfs_create_tree@@Base+0x910>)
   1eba6:	ldr	r0, [pc, #144]	; (1ec38 <btrfs_create_tree@@Base+0x914>)
   1eba8:	add	r2, pc
   1ebaa:	ite	eq
   1ebac:	moveq	r3, #1
   1ebae:	movne	r3, #0
   1ebb0:	adds	r2, #92	; 0x5c
   1ebb2:	add	r1, pc
   1ebb4:	add	r0, pc
   1ebb6:	str	r3, [sp, #0]
   1ebb8:	movs	r3, #163	; 0xa3
   1ebba:	strd	r1, r2, [sp, #8]
   1ebbe:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1ebc2:	ldrd	r3, r0, [r4, #48]	; 0x30
   1ebc6:	ldrd	r1, r2, [sp, #8]
   1ebca:	adds.w	r6, r3, #4294967295	; 0xffffffff
   1ebce:	adc.w	r7, r0, #4294967295	; 0xffffffff
   1ebd2:	strd	r6, r7, [r4, #48]	; 0x30
   1ebd6:	orrs.w	r3, r6, r7
   1ebda:	bne.n	1ec2c <btrfs_create_tree@@Base+0x908>
   1ebdc:	ldrb.w	r3, [r4, #62]	; 0x3e
   1ebe0:	ldr	r0, [pc, #88]	; (1ec3c <btrfs_create_tree@@Base+0x918>)
   1ebe2:	ubfx	r3, r3, #1, #1
   1ebe6:	str	r3, [sp, #0]
   1ebe8:	add	r0, pc
   1ebea:	movs	r3, #165	; 0xa5
   1ebec:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1ebf0:	ldrb.w	r3, [r4, #61]	; 0x3d
   1ebf4:	subs	r3, #176	; 0xb0
   1ebf6:	cmp	r3, #8
   1ebf8:	bhi.n	1ec14 <btrfs_create_tree@@Base+0x8f0>
   1ebfa:	tbb	[pc, r3]
   1ebfe:	lsrs	r5, r0, #12
   1ec00:	lsrs	r5, r0, #12
   1ec02:	lsrs	r3, r1, #12
   1ec04:	lsrs	r5, r0, #12
   1ec06:	movs	r5, r0
   1ec08:	mov	r0, r4
   1ec0a:	add	sp, #16
   1ec0c:	ldmia.w	sp!, {r4, r6, r7, lr}
   1ec10:	b.w	85d8 <free@plt>
   1ec14:	ldr	r2, [pc, #40]	; (1ec40 <btrfs_create_tree@@Base+0x91c>)
   1ec16:	movs	r3, #1
   1ec18:	ldr	r1, [pc, #40]	; (1ec44 <btrfs_create_tree@@Base+0x920>)
   1ec1a:	ldr	r0, [pc, #44]	; (1ec48 <btrfs_create_tree@@Base+0x924>)
   1ec1c:	add	r2, pc
   1ec1e:	str	r3, [sp, #0]
   1ec20:	adds	r2, #92	; 0x5c
   1ec22:	add	r1, pc
   1ec24:	add	r0, pc
   1ec26:	movs	r3, #176	; 0xb0
   1ec28:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   1ec2c:	add	sp, #16
   1ec2e:	pop	{r4, r6, r7, pc}
   1ec30:	vhadd.s<illegal width 64>	d0, d10, d1
   1ec34:	ldmia.w	sp!, {r0}
   1ec38:			; <UNDEFINED> instruction: 0xe8c90001
   1ec3c:	stmia.w	r4!, {r0}
   1ec40:	cdp	0, 12, cr0, cr6, cr1, {0}
   1ec44:	strex	r0, r0, [sp, #4]
   1ec48:			; <UNDEFINED> instruction: 0xeaed0001
   1ec4c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec50:	mov	r4, r2
   1ec52:	ldr	r2, [pc, #288]	; (1ed74 <btrfs_create_tree@@Base+0xa50>)
   1ec54:	mov	r5, r3
   1ec56:	ldr	r3, [pc, #288]	; (1ed78 <btrfs_create_tree@@Base+0xa54>)
   1ec58:	sub	sp, #36	; 0x24
   1ec5a:	add	r2, pc
   1ec5c:	ldr.w	r9, [pc, #284]	; 1ed7c <btrfs_create_tree@@Base+0xa58>
   1ec60:	ldr.w	sl, [pc, #284]	; 1ed80 <btrfs_create_tree@@Base+0xa5c>
   1ec64:	mov	r8, r0
   1ec66:	ldr	r3, [r2, r3]
   1ec68:	add	r9, pc
   1ec6a:	ldr	r0, [pc, #280]	; (1ed84 <btrfs_create_tree@@Base+0xa60>)
   1ec6c:	add	sl, pc
   1ec6e:	ldr	r3, [r3, #0]
   1ec70:	str	r3, [sp, #28]
   1ec72:	mov.w	r3, #0
   1ec76:	mov	r6, r1
   1ec78:	movs	r3, #0
   1ec7a:	str	r3, [sp, #0]
   1ec7c:	add.w	r2, sl, #114	; 0x72
   1ec80:	add	r0, pc
   1ec82:	movw	r3, #1223	; 0x4c7
   1ec86:	mov	r1, r9
   1ec88:	ldr	r7, [sp, #72]	; 0x48
   1ec8a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1ec8e:	cbz	r5, 1ecb2 <btrfs_create_tree@@Base+0x98e>
   1ec90:	mov.w	r3, #4294967295	; 0xffffffff
   1ec94:	mov	r2, r5
   1ec96:	mov	r1, r4
   1ec98:	mov	r0, r6
   1ec9a:	bl	1e92c <btrfs_create_tree@@Base+0x608>
   1ec9e:	ldr	r2, [pc, #232]	; (1ed88 <btrfs_create_tree@@Base+0xa64>)
   1eca0:	ldr	r3, [pc, #212]	; (1ed78 <btrfs_create_tree@@Base+0xa54>)
   1eca2:	add	r2, pc
   1eca4:	ldr	r3, [r2, r3]
   1eca6:	ldr	r2, [r3, #0]
   1eca8:	ldr	r3, [sp, #28]
   1ecaa:	eors	r2, r3
   1ecac:	beq.n	1ed6c <btrfs_create_tree@@Base+0xa48>
   1ecae:	blx	86b8 <__stack_chk_fail@plt>
   1ecb2:	cbz	r7, 1ed0a <btrfs_create_tree@@Base+0x9e6>
   1ecb4:	ldr	r7, [r4, #0]
   1ecb6:	add	r1, sp, #8
   1ecb8:	ldr	r2, [r4, #32]
   1ecba:	mov	r0, r7
   1ecbc:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1ecc0:	ldrb.w	fp, [sp, #16]
   1ecc4:	add.w	r3, r7, #96	; 0x60
   1ecc8:	cmp.w	fp, #178	; 0xb2
   1eccc:	bne.n	1ed16 <btrfs_create_tree@@Base+0x9f2>
   1ecce:	ldr	r2, [r4, #32]
   1ecd0:	movs	r1, #25
   1ecd2:	mov	r9, r5
   1ecd4:	mla	r2, r1, r2, r3
   1ecd8:	ldr.w	r2, [r2, #118]	; 0x76
   1ecdc:	adds	r2, #101	; 0x65
   1ecde:	add	r3, r2
   1ece0:	mov	r5, r2
   1ece2:	ldr.w	sl, [r3, #24]
   1ece6:	ldr	r2, [pc, #164]	; (1ed8c <btrfs_create_tree@@Base+0xa68>)
   1ece8:	clz	r3, sl
   1ecec:	ldr	r1, [pc, #160]	; (1ed90 <btrfs_create_tree@@Base+0xa6c>)
   1ecee:	ldr	r0, [pc, #164]	; (1ed94 <btrfs_create_tree@@Base+0xa70>)
   1ecf0:	add	r2, pc
   1ecf2:	lsrs	r3, r3, #5
   1ecf4:	adds	r2, #136	; 0x88
   1ecf6:	str	r3, [sp, #0]
   1ecf8:	add	r1, pc
   1ecfa:	add	r0, pc
   1ecfc:	movw	r3, #733	; 0x2dd
   1ed00:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1ed04:	subs.w	sl, sl, #1
   1ed08:	bne.n	1ed48 <btrfs_create_tree@@Base+0xa24>
   1ed0a:	mov	r2, r4
   1ed0c:	mov	r1, r6
   1ed0e:	mov	r0, r8
   1ed10:	bl	1e630 <btrfs_create_tree@@Base+0x30c>
   1ed14:	b.n	1ec9e <btrfs_create_tree@@Base+0x97a>
   1ed16:	cmp.w	fp, #184	; 0xb8
   1ed1a:	bne.n	1ed32 <btrfs_create_tree@@Base+0xa0e>
   1ed1c:	ldr	r2, [r4, #32]
   1ed1e:	movs	r1, #25
   1ed20:	mla	r2, r1, r2, r3
   1ed24:	ldr.w	r9, [r2, #118]	; 0x76
   1ed28:	add.w	r9, r9, #101	; 0x65
   1ed2c:	ldr.w	sl, [r3, r9]
   1ed30:	b.n	1ece6 <btrfs_create_tree@@Base+0x9c2>
   1ed32:	ldr	r0, [pc, #100]	; (1ed98 <btrfs_create_tree@@Base+0xa74>)
   1ed34:	movs	r3, #1
   1ed36:	add.w	r2, sl, #136	; 0x88
   1ed3a:	str	r3, [sp, #0]
   1ed3c:	add	r0, pc
   1ed3e:	movw	r3, #730	; 0x2da
   1ed42:	mov	r1, r9
   1ed44:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   1ed48:	cmp.w	fp, #178	; 0xb2
   1ed4c:	bne.n	1ed5e <btrfs_create_tree@@Base+0xa3a>
   1ed4e:	add	r5, r7
   1ed50:	str.w	sl, [r5, #120]	; 0x78
   1ed54:	mov	r0, r7
   1ed56:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1ed5a:	movs	r0, #0
   1ed5c:	b.n	1ec9e <btrfs_create_tree@@Base+0x97a>
   1ed5e:	cmp.w	fp, #184	; 0xb8
   1ed62:	itt	eq
   1ed64:	addeq	r9, r7
   1ed66:	streq.w	sl, [r9, #96]	; 0x60
   1ed6a:	b.n	1ed54 <btrfs_create_tree@@Base+0xa30>
   1ed6c:	add	sp, #36	; 0x24
   1ed6e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed72:	nop
   1ed74:	str	r6, [r5, #16]
   1ed76:	movs	r4, r0
   1ed78:	lsls	r4, r4, #8
   1ed7a:	movs	r0, r0
   1ed7c:	b.n	1ec12 <btrfs_create_tree@@Base+0x8ee>
   1ed7e:	movs	r1, r0
   1ed80:	cdp	0, 7, cr0, cr6, cr1, {0}
   1ed84:			; <UNDEFINED> instruction: 0xe8190001
   1ed88:	str	r6, [r4, #12]
   1ed8a:	movs	r4, r0
   1ed8c:	ldcl	0, cr0, [r2, #4]!
   1ed90:	b.n	1eb06 <btrfs_create_tree@@Base+0x7e2>
   1ed92:	movs	r1, r0
   1ed94:	b.n	1ed12 <btrfs_create_tree@@Base+0x9ee>
   1ed96:	movs	r1, r0
   1ed98:	ldrd	r0, r0, [r5, #4]
   1ed9c:	push	{r0, r1, r2, r3, r4, lr}
   1ed9e:	ldr	r3, [pc, #40]	; (1edc8 <btrfs_create_tree@@Base+0xaa4>)
   1eda0:	ldr	r4, [pc, #40]	; (1edcc <btrfs_create_tree@@Base+0xaa8>)
   1eda2:	add	r3, pc
   1eda4:	ldr	r4, [r3, r4]
   1eda6:	movs	r3, #0
   1eda8:	strd	r2, r1, [sp]
   1edac:	movs	r1, #1
   1edae:	strd	r0, r3, [sp, #8]
   1edb2:	ldr	r2, [pc, #28]	; (1edd0 <btrfs_create_tree@@Base+0xaac>)
   1edb4:	ldr	r3, [pc, #28]	; (1edd4 <btrfs_create_tree@@Base+0xab0>)
   1edb6:	add	r2, pc
   1edb8:	ldr	r0, [r4, #0]
   1edba:	add	r3, pc
   1edbc:	blx	8a14 <__fprintf_chk@plt+0x4>
   1edc0:	bl	1e5e4 <btrfs_create_tree@@Base+0x2c0>
   1edc4:	blx	8b34 <abort@plt>
   1edc8:	ldrsh	r6, [r4, r7]
   1edca:	movs	r4, r0
   1edcc:	lsls	r4, r6, #8
   1edce:	movs	r0, r0
   1edd0:	add	r3, sp, #100	; 0x64
   1edd2:	movs	r1, r0
   1edd4:	b.n	1e9c6 <btrfs_create_tree@@Base+0x6a2>
   1edd6:	movs	r1, r0

0001edd8 <btrfs_lookup_first_block_group@@Base>:
   1edd8:	push	{r4, r5, r6, lr}
   1edda:	cmp	r3, #0
   1eddc:	ldr	r4, [pc, #112]	; (1ee50 <btrfs_lookup_first_block_group@@Base+0x78>)
   1edde:	it	eq
   1ede0:	cmpeq.w	r2, #69632	; 0x11000
   1ede4:	ldr	r1, [pc, #108]	; (1ee54 <btrfs_lookup_first_block_group@@Base+0x7c>)
   1ede6:	sub	sp, #48	; 0x30
   1ede8:	add	r4, pc
   1edea:	add.w	r6, r0, #128	; 0x80
   1edee:	mov	r5, r3
   1edf0:	it	cc
   1edf2:	movcc	r5, #0
   1edf4:	ldr	r1, [r4, r1]
   1edf6:	mov	r4, r2
   1edf8:	it	cc
   1edfa:	movcc.w	r4, #69632	; 0x11000
   1edfe:	movs	r3, #22
   1ee00:	ldr	r1, [r1, #0]
   1ee02:	str	r1, [sp, #44]	; 0x2c
   1ee04:	mov.w	r1, #0
   1ee08:	mov	r2, r4
   1ee0a:	str	r3, [sp, #8]
   1ee0c:	mov	r0, r6
   1ee0e:	add	r3, sp, #32
   1ee10:	str	r3, [sp, #4]
   1ee12:	add	r3, sp, #24
   1ee14:	str	r3, [sp, #0]
   1ee16:	mov	r3, r5
   1ee18:	bl	16ac0 <find_first_extent_bit@@Base>
   1ee1c:	cbz	r0, 1ee34 <btrfs_lookup_first_block_group@@Base+0x5c>
   1ee1e:	movs	r0, #0
   1ee20:	ldr	r2, [pc, #52]	; (1ee58 <btrfs_lookup_first_block_group@@Base+0x80>)
   1ee22:	ldr	r3, [pc, #48]	; (1ee54 <btrfs_lookup_first_block_group@@Base+0x7c>)
   1ee24:	add	r2, pc
   1ee26:	ldr	r3, [r2, r3]
   1ee28:	ldr	r2, [r3, #0]
   1ee2a:	ldr	r3, [sp, #44]	; 0x2c
   1ee2c:	eors	r2, r3
   1ee2e:	beq.n	1ee4a <btrfs_lookup_first_block_group@@Base+0x72>
   1ee30:	blx	86b8 <__stack_chk_fail@plt>
   1ee34:	add	r3, sp, #16
   1ee36:	mov	r0, r6
   1ee38:	str	r3, [sp, #0]
   1ee3a:	ldrd	r2, r3, [sp, #24]
   1ee3e:	bl	16b9c <get_state_private@@Base>
   1ee42:	cmp	r0, #0
   1ee44:	bne.n	1ee1e <btrfs_lookup_first_block_group@@Base+0x46>
   1ee46:	ldr	r0, [sp, #16]
   1ee48:	b.n	1ee20 <btrfs_lookup_first_block_group@@Base+0x48>
   1ee4a:	add	sp, #48	; 0x30
   1ee4c:	pop	{r4, r5, r6, pc}
   1ee4e:	nop
   1ee50:	ldrsh	r0, [r4, r6]
   1ee52:	movs	r4, r0
   1ee54:	lsls	r4, r4, #8
   1ee56:	movs	r0, r0
   1ee58:	ldrsh	r4, [r4, r5]
   1ee5a:	movs	r4, r0

0001ee5c <btrfs_lookup_block_group@@Base>:
   1ee5c:	ldr.w	ip, [pc, #136]	; 1eee8 <btrfs_lookup_block_group@@Base+0x8c>
   1ee60:	ldr	r1, [pc, #136]	; (1eeec <btrfs_lookup_block_group@@Base+0x90>)
   1ee62:	add	ip, pc
   1ee64:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ee68:	add.w	r8, r0, #128	; 0x80
   1ee6c:	sub	sp, #48	; 0x30
   1ee6e:	ldr.w	r1, [ip, r1]
   1ee72:	mov	r0, r8
   1ee74:	mov	r4, r2
   1ee76:	ldr	r1, [r1, #0]
   1ee78:	str	r1, [sp, #44]	; 0x2c
   1ee7a:	mov.w	r1, #0
   1ee7e:	movs	r1, #22
   1ee80:	str	r1, [sp, #8]
   1ee82:	add	r1, sp, #32
   1ee84:	str	r1, [sp, #4]
   1ee86:	add	r1, sp, #24
   1ee88:	str	r1, [sp, #0]
   1ee8a:	mov	r5, r3
   1ee8c:	bl	16ac0 <find_first_extent_bit@@Base>
   1ee90:	cbz	r0, 1eea8 <btrfs_lookup_block_group@@Base+0x4c>
   1ee92:	movs	r0, #0
   1ee94:	ldr	r2, [pc, #88]	; (1eef0 <btrfs_lookup_block_group@@Base+0x94>)
   1ee96:	ldr	r3, [pc, #84]	; (1eeec <btrfs_lookup_block_group@@Base+0x90>)
   1ee98:	add	r2, pc
   1ee9a:	ldr	r3, [r2, r3]
   1ee9c:	ldr	r2, [r3, #0]
   1ee9e:	ldr	r3, [sp, #44]	; 0x2c
   1eea0:	eors	r2, r3
   1eea2:	beq.n	1eee0 <btrfs_lookup_block_group@@Base+0x84>
   1eea4:	blx	86b8 <__stack_chk_fail@plt>
   1eea8:	add	r3, sp, #16
   1eeaa:	mov	r0, r8
   1eeac:	str	r3, [sp, #0]
   1eeae:	ldrd	r2, r3, [sp, #24]
   1eeb2:	bl	16b9c <get_state_private@@Base>
   1eeb6:	cmp	r0, #0
   1eeb8:	bne.n	1ee92 <btrfs_lookup_block_group@@Base+0x36>
   1eeba:	ldr	r0, [sp, #16]
   1eebc:	ldrd	r2, r3, [r0, #40]	; 0x28
   1eec0:	cmp	r5, r3
   1eec2:	it	eq
   1eec4:	cmpeq	r4, r2
   1eec6:	bcc.n	1ee92 <btrfs_lookup_block_group@@Base+0x36>
   1eec8:	ldr.w	r1, [r0, #49]	; 0x31
   1eecc:	ldr.w	ip, [r0, #53]	; 0x35
   1eed0:	adds	r6, r1, r2
   1eed2:	adc.w	r7, ip, r3
   1eed6:	cmp	r5, r7
   1eed8:	it	eq
   1eeda:	cmpeq	r4, r6
   1eedc:	bcc.n	1ee94 <btrfs_lookup_block_group@@Base+0x38>
   1eede:	b.n	1ee92 <btrfs_lookup_block_group@@Base+0x36>
   1eee0:	add	sp, #48	; 0x30
   1eee2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1eee6:	nop
   1eee8:	ldrsh	r6, [r4, r4]
   1eeea:	movs	r4, r0
   1eeec:	lsls	r4, r4, #8
   1eeee:	movs	r0, r0
   1eef0:	ldrsh	r0, [r6, r3]
   1eef2:	movs	r4, r0
   1eef4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eef8:	mov	r8, r0
   1eefa:	ldrd	r6, r7, [sp, #48]	; 0x30
   1eefe:	adds	r0, #160	; 0xa0
   1ef00:	ldr.w	sl, [sp, #56]	; 0x38
   1ef04:	mov	r9, r2
   1ef06:	adds.w	r1, r6, #4294967295	; 0xffffffff
   1ef0a:	mov	fp, r3
   1ef0c:	adc.w	ip, r7, #4294967295	; 0xffffffff
   1ef10:	adds	r1, r1, r2
   1ef12:	adc.w	ip, ip, r3
   1ef16:	strd	r1, ip, [sp]
   1ef1a:	cmp.w	sl, #0
   1ef1e:	beq.n	1ef32 <btrfs_lookup_block_group@@Base+0xd6>
   1ef20:	bl	16a90 <set_extent_dirty@@Base>
   1ef24:	orrs.w	r3, r6, r7
   1ef28:	bne.n	1ef38 <btrfs_lookup_block_group@@Base+0xdc>
   1ef2a:	movs	r0, #0
   1ef2c:	add	sp, #12
   1ef2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef32:	bl	16aa8 <clear_extent_dirty@@Base>
   1ef36:	b.n	1ef24 <btrfs_lookup_block_group@@Base+0xc8>
   1ef38:	mov	r2, r9
   1ef3a:	mov	r3, fp
   1ef3c:	mov	r0, r8
   1ef3e:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   1ef42:	cbnz	r0, 1ef66 <btrfs_lookup_block_group@@Base+0x10a>
   1ef44:	ldr.w	r4, [r8, #388]	; 0x184
   1ef48:	cmp	r7, r0
   1ef4a:	mov	r5, r0
   1ef4c:	it	eq
   1ef4e:	cmpeq	r6, r4
   1ef50:	bcs.n	1ef56 <btrfs_lookup_block_group@@Base+0xfa>
   1ef52:	mov	r4, r6
   1ef54:	mov	r5, r7
   1ef56:	adds.w	r9, r9, r4
   1ef5a:	adc.w	fp, fp, r5
   1ef5e:	subs	r6, r6, r4
   1ef60:	sbc.w	r7, r7, r5
   1ef64:	b.n	1ef24 <btrfs_lookup_block_group@@Base+0xc8>
   1ef66:	ldr.w	r1, [r0, #49]	; 0x31
   1ef6a:	ldrd	r3, r2, [r0, #40]	; 0x28
   1ef6e:	ldr.w	ip, [r0, #53]	; 0x35
   1ef72:	adds	r3, r1, r3
   1ef74:	adc.w	r2, ip, r2
   1ef78:	subs.w	r4, r3, r9
   1ef7c:	sbc.w	r5, r2, fp
   1ef80:	ldrd	r3, r1, [r0, #88]	; 0x58
   1ef84:	cmp	r7, r5
   1ef86:	ldr	r2, [r0, #60]	; 0x3c
   1ef88:	it	eq
   1ef8a:	cmpeq	r6, r4
   1ef8c:	itt	cc
   1ef8e:	movcc	r4, r6
   1ef90:	movcc	r5, r7
   1ef92:	cmp.w	sl, #0
   1ef96:	beq.n	1efc0 <btrfs_lookup_block_group@@Base+0x164>
   1ef98:	adds	r3, r3, r4
   1ef9a:	adc.w	r1, r5, r1
   1ef9e:	strd	r3, r1, [r0, #88]	; 0x58
   1efa2:	ldrd	r3, r1, [r2, #24]
   1efa6:	adds	r3, r3, r4
   1efa8:	adc.w	r1, r5, r1
   1efac:	strd	r3, r1, [r2, #24]
   1efb0:	ldrd	r3, r2, [r8, #328]	; 0x148
   1efb4:	adds	r3, r3, r4
   1efb6:	adc.w	r2, r5, r2
   1efba:	strd	r3, r2, [r8, #328]	; 0x148
   1efbe:	b.n	1ef56 <btrfs_lookup_block_group@@Base+0xfa>
   1efc0:	subs	r3, r3, r4
   1efc2:	sbc.w	r1, r1, r5
   1efc6:	strd	r3, r1, [r0, #88]	; 0x58
   1efca:	ldrd	r3, r1, [r2, #24]
   1efce:	subs	r3, r3, r4
   1efd0:	sbc.w	r1, r1, r5
   1efd4:	strd	r3, r1, [r2, #24]
   1efd8:	ldrd	r3, r2, [r8, #328]	; 0x148
   1efdc:	subs	r3, r3, r4
   1efde:	sbc.w	r2, r2, r5
   1efe2:	b.n	1efba <btrfs_lookup_block_group@@Base+0x15e>
   1efe4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1efe8:	mov	r9, r0
   1efea:	vpush	{d8}
   1efee:	mov	r7, r2
   1eff0:	mov	r8, r3
   1eff2:	sub	sp, #28
   1eff4:	ldr.w	r1, [r0, #308]	; 0x134
   1eff8:	ldr	r0, [sp, #80]	; 0x50
   1effa:	ldr	r3, [r1, #120]	; 0x78
   1effc:	ldr	r2, [r1, #124]	; 0x7c
   1effe:	cbz	r0, 1f034 <btrfs_lookup_block_group@@Base+0x1d8>
   1f000:	ldr	r0, [sp, #72]	; 0x48
   1f002:	adds	r3, r0, r3
   1f004:	ldr	r0, [sp, #76]	; 0x4c
   1f006:	adc.w	r2, r0, r2
   1f00a:	str	r3, [r1, #120]	; 0x78
   1f00c:	ldr	r3, [pc, #332]	; (1f15c <btrfs_lookup_block_group@@Base+0x300>)
   1f00e:	str	r2, [r1, #124]	; 0x7c
   1f010:	add	r3, pc
   1f012:	adds	r3, #159	; 0x9f
   1f014:	vmov	s16, r3
   1f018:	ldr	r3, [pc, #324]	; (1f160 <btrfs_lookup_block_group@@Base+0x304>)
   1f01a:	add	r3, pc
   1f01c:	vmov	s17, r3
   1f020:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f024:	orrs	r3, r2
   1f026:	bne.n	1f040 <btrfs_lookup_block_group@@Base+0x1e4>
   1f028:	movs	r0, #0
   1f02a:	add	sp, #28
   1f02c:	vpop	{d8}
   1f030:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f034:	ldr	r0, [sp, #72]	; 0x48
   1f036:	subs	r3, r3, r0
   1f038:	ldr	r0, [sp, #76]	; 0x4c
   1f03a:	sbc.w	r2, r2, r0
   1f03e:	b.n	1f00a <btrfs_lookup_block_group@@Base+0x1ae>
   1f040:	mov	r2, r7
   1f042:	mov	r3, r8
   1f044:	mov	r0, r9
   1f046:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   1f04a:	mov	r6, r0
   1f04c:	cmp	r0, #0
   1f04e:	beq.w	1f156 <btrfs_lookup_block_group@@Base+0x2fa>
   1f052:	ldrd	sl, fp, [r0, #40]	; 0x28
   1f056:	ldr.w	r3, [r0, #53]	; 0x35
   1f05a:	subs.w	r1, r7, sl
   1f05e:	ldr.w	r2, [r0, #49]	; 0x31
   1f062:	str	r1, [sp, #16]
   1f064:	sbc.w	r1, r8, fp
   1f068:	str	r1, [sp, #20]
   1f06a:	ldrd	r0, r1, [sp, #16]
   1f06e:	cmp	r3, r1
   1f070:	vmov	r1, s17
   1f074:	it	eq
   1f076:	cmpeq	r2, r0
   1f078:	ldr	r0, [pc, #232]	; (1f164 <btrfs_lookup_block_group@@Base+0x308>)
   1f07a:	vmov	r2, s16
   1f07e:	ite	cc
   1f080:	movcc	r3, #1
   1f082:	movcs	r3, #0
   1f084:	add	r0, pc
   1f086:	str	r3, [sp, #0]
   1f088:	mov.w	r3, #1784	; 0x6f8
   1f08c:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1f090:	ldrd	r2, r3, [r6, #40]	; 0x28
   1f094:	movs	r1, #1
   1f096:	str	r1, [sp, #8]
   1f098:	ldr.w	r1, [r6, #49]	; 0x31
   1f09c:	ldr.w	r0, [r6, #53]	; 0x35
   1f0a0:	adds	r1, r1, r2
   1f0a2:	adc.w	r0, r3, r0
   1f0a6:	adds.w	r1, r1, #4294967295	; 0xffffffff
   1f0aa:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1f0ae:	strd	r1, r0, [sp]
   1f0b2:	add.w	r0, r9, #128	; 0x80
   1f0b6:	bl	16864 <set_extent_bits@@Base>
   1f0ba:	ldr.w	r3, [r6, #49]	; 0x31
   1f0be:	ldr.w	r0, [r6, #53]	; 0x35
   1f0c2:	adds.w	r3, r3, sl
   1f0c6:	ldrd	r2, r1, [r6, #72]	; 0x48
   1f0ca:	adc.w	fp, r0, fp
   1f0ce:	subs	r4, r3, r7
   1f0d0:	sbc.w	r5, fp, r8
   1f0d4:	ldrd	sl, fp, [sp, #72]	; 0x48
   1f0d8:	ldr	r0, [sp, #80]	; 0x50
   1f0da:	cmp	fp, r5
   1f0dc:	ldr	r3, [r6, #60]	; 0x3c
   1f0de:	it	eq
   1f0e0:	cmpeq	sl, r4
   1f0e2:	itt	cc
   1f0e4:	movcc	r4, sl
   1f0e6:	movcc	r5, fp
   1f0e8:	cbz	r0, 1f11a <btrfs_lookup_block_group@@Base+0x2be>
   1f0ea:	adds.w	sl, r2, r4
   1f0ee:	adc.w	fp, r1, r5
   1f0f2:	ldrd	r2, r1, [r3, #16]
   1f0f6:	adds	r2, r2, r4
   1f0f8:	adc.w	r1, r5, r1
   1f0fc:	strd	r2, r1, [r3, #16]
   1f100:	ldr	r3, [sp, #72]	; 0x48
   1f102:	strd	sl, fp, [r6, #72]	; 0x48
   1f106:	subs	r3, r3, r4
   1f108:	str	r3, [sp, #72]	; 0x48
   1f10a:	ldr	r3, [sp, #76]	; 0x4c
   1f10c:	sbc.w	r3, r3, r5
   1f110:	adds	r7, r7, r4
   1f112:	adc.w	r8, r8, r5
   1f116:	str	r3, [sp, #76]	; 0x4c
   1f118:	b.n	1f020 <btrfs_lookup_block_group@@Base+0x1c4>
   1f11a:	subs.w	sl, r2, r4
   1f11e:	sbc.w	fp, r1, r5
   1f122:	ldrd	r2, r1, [r3, #16]
   1f126:	subs	r2, r2, r4
   1f128:	sbc.w	r1, r1, r5
   1f12c:	strd	r2, r1, [r3, #16]
   1f130:	ldr	r3, [sp, #84]	; 0x54
   1f132:	cmp	r3, #0
   1f134:	beq.n	1f100 <btrfs_lookup_block_group@@Base+0x2a4>
   1f136:	adds.w	r3, r7, #4294967295	; 0xffffffff
   1f13a:	add.w	r0, r9, #96	; 0x60
   1f13e:	adc.w	r2, r8, #4294967295	; 0xffffffff
   1f142:	adds	r3, r3, r4
   1f144:	adc.w	r2, r5, r2
   1f148:	strd	r3, r2, [sp]
   1f14c:	mov	r2, r7
   1f14e:	mov	r3, r8
   1f150:	bl	16a90 <set_extent_dirty@@Base>
   1f154:	b.n	1f100 <btrfs_lookup_block_group@@Base+0x2a4>
   1f156:	mov.w	r0, #4294967295	; 0xffffffff
   1f15a:	b.n	1f02a <btrfs_lookup_block_group@@Base+0x1ce>
   1f15c:			; <UNDEFINED> instruction: 0xead20001
   1f160:	b.n	1f892 <hash_extent_data_ref@@Base+0x512>
   1f162:	movs	r1, r0
   1f164:	b.n	1e9fe <btrfs_create_tree@@Base+0x6da>
   1f166:	movs	r1, r0
   1f168:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f16c:	sub	sp, #108	; 0x6c
   1f16e:	add.w	fp, r0, #128	; 0x80
   1f172:	mov	r5, r1
   1f174:	strd	r2, r3, [sp, #16]
   1f178:	ldr	r2, [pc, #504]	; (1f374 <btrfs_lookup_block_group@@Base+0x518>)
   1f17a:	ldr	r6, [sp, #144]	; 0x90
   1f17c:	ldr	r3, [pc, #504]	; (1f378 <btrfs_lookup_block_group@@Base+0x51c>)
   1f17e:	add	r2, pc
   1f180:	ands.w	r8, r6, #1
   1f184:	mov.w	r4, r6, asr #31
   1f188:	ldr	r3, [r2, r3]
   1f18a:	it	ne
   1f18c:	movne.w	r8, #2
   1f190:	lsls	r2, r6, #29
   1f192:	ldr	r3, [r3, #0]
   1f194:	str	r3, [sp, #100]	; 0x64
   1f196:	mov.w	r3, #0
   1f19a:	it	mi
   1f19c:	orrmi.w	r8, r8, #4
   1f1a0:	mov	r3, r6
   1f1a2:	strd	r3, r4, [sp, #24]
   1f1a6:	lsls	r3, r6, #30
   1f1a8:	ldrd	r3, r4, [sp, #16]
   1f1ac:	it	mi
   1f1ae:	orrmi.w	r8, r8, #16
   1f1b2:	orrs	r3, r4
   1f1b4:	bne.n	1f26e <btrfs_lookup_block_group@@Base+0x412>
   1f1b6:	cmp	r5, #0
   1f1b8:	bne.w	1f2de <btrfs_lookup_block_group@@Base+0x482>
   1f1bc:	ldrd	r9, sl, [sp, #16]
   1f1c0:	movs	r5, #0
   1f1c2:	add	r3, sp, #80	; 0x50
   1f1c4:	str	r3, [sp, #32]
   1f1c6:	add	r3, sp, #72	; 0x48
   1f1c8:	str	r3, [sp, #40]	; 0x28
   1f1ca:	ldr	r3, [sp, #32]
   1f1cc:	mov	r2, r9
   1f1ce:	mov	r0, fp
   1f1d0:	str.w	r8, [sp, #8]
   1f1d4:	str	r3, [sp, #4]
   1f1d6:	ldr	r3, [sp, #40]	; 0x28
   1f1d8:	str	r3, [sp, #0]
   1f1da:	mov	r3, sl
   1f1dc:	bl	16ac0 <find_first_extent_bit@@Base>
   1f1e0:	cmp	r0, #0
   1f1e2:	bne.w	1f360 <btrfs_lookup_block_group@@Base+0x504>
   1f1e6:	add	r3, sp, #88	; 0x58
   1f1e8:	mov	r0, fp
   1f1ea:	str	r3, [sp, #0]
   1f1ec:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f1f0:	bl	16b9c <get_state_private@@Base>
   1f1f4:	cmp	r0, #0
   1f1f6:	bne.w	1f360 <btrfs_lookup_block_group@@Base+0x504>
   1f1fa:	ldr	r4, [sp, #88]	; 0x58
   1f1fc:	ldrd	r3, r2, [r4, #40]	; 0x28
   1f200:	ldr.w	r6, [r4, #49]	; 0x31
   1f204:	ldr.w	r7, [r4, #53]	; 0x35
   1f208:	adds.w	r9, r6, r3
   1f20c:	ldr	r3, [r4, #108]	; 0x6c
   1f20e:	adc.w	sl, r7, r2
   1f212:	cmp	r3, #0
   1f214:	bne.n	1f1ca <btrfs_lookup_block_group@@Base+0x36e>
   1f216:	ldrd	r2, r3, [r4, #96]	; 0x60
   1f21a:	ldr	r1, [sp, #24]
   1f21c:	ands	r2, r1
   1f21e:	str	r2, [sp, #48]	; 0x30
   1f220:	ldr	r2, [sp, #28]
   1f222:	ands	r3, r2
   1f224:	str	r3, [sp, #52]	; 0x34
   1f226:	ldrd	r0, r1, [sp, #48]	; 0x30
   1f22a:	ldrd	r2, r3, [sp, #24]
   1f22e:	cmp	r3, r1
   1f230:	it	eq
   1f232:	cmpeq	r2, r0
   1f234:	bne.n	1f1ca <btrfs_lookup_block_group@@Base+0x36e>
   1f236:	ldr	r3, [r4, #72]	; 0x48
   1f238:	str	r3, [sp, #64]	; 0x40
   1f23a:	ldr	r3, [r4, #76]	; 0x4c
   1f23c:	str	r3, [sp, #68]	; 0x44
   1f23e:	cbnz	r5, 1f24e <btrfs_lookup_block_group@@Base+0x3f2>
   1f240:	mov	r0, r6
   1f242:	mov	r1, r7
   1f244:	movs	r2, #10
   1f246:	bl	31a68 <div_factor@@Base>
   1f24a:	mov	r6, r0
   1f24c:	mov	r7, r1
   1f24e:	ldrd	r3, r2, [r4, #88]	; 0x58
   1f252:	ldr	r1, [sp, #64]	; 0x40
   1f254:	adds	r3, r1, r3
   1f256:	str	r3, [sp, #56]	; 0x38
   1f258:	ldr	r3, [sp, #68]	; 0x44
   1f25a:	adc.w	r3, r2, r3
   1f25e:	str	r3, [sp, #60]	; 0x3c
   1f260:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f264:	cmp	r3, r7
   1f266:	it	eq
   1f268:	cmpeq	r2, r6
   1f26a:	bcs.n	1f1ca <btrfs_lookup_block_group@@Base+0x36e>
   1f26c:	b.n	1f2ca <btrfs_lookup_block_group@@Base+0x46e>
   1f26e:	ldrd	r2, r3, [sp, #16]
   1f272:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   1f276:	mov	r4, r0
   1f278:	cmp	r0, #0
   1f27a:	beq.n	1f1b6 <btrfs_lookup_block_group@@Base+0x35a>
   1f27c:	ldr	r3, [r0, #108]	; 0x6c
   1f27e:	cmp	r3, #0
   1f280:	bne.n	1f1b6 <btrfs_lookup_block_group@@Base+0x35a>
   1f282:	ldrd	r0, r1, [r0, #96]	; 0x60
   1f286:	and.w	r2, r6, r0
   1f28a:	ldr	r0, [sp, #28]
   1f28c:	and.w	r3, r0, r1
   1f290:	asrs	r1, r6, #31
   1f292:	cmp	r1, r3
   1f294:	it	eq
   1f296:	cmpeq	r6, r2
   1f298:	bne.n	1f1b6 <btrfs_lookup_block_group@@Base+0x35a>
   1f29a:	ldrd	r2, r1, [r4, #88]	; 0x58
   1f29e:	ldrd	r3, r0, [r4, #72]	; 0x48
   1f2a2:	adds	r3, r3, r2
   1f2a4:	mov.w	r2, #10
   1f2a8:	str	r3, [sp, #32]
   1f2aa:	adc.w	r3, r0, r1
   1f2ae:	str	r3, [sp, #36]	; 0x24
   1f2b0:	ldr.w	r0, [r4, #49]	; 0x31
   1f2b4:	ldr.w	r1, [r4, #53]	; 0x35
   1f2b8:	bl	31a68 <div_factor@@Base>
   1f2bc:	ldrd	r2, r3, [sp, #32]
   1f2c0:	cmp	r3, r1
   1f2c2:	it	eq
   1f2c4:	cmpeq	r2, r0
   1f2c6:	bcs.w	1f1b6 <btrfs_lookup_block_group@@Base+0x35a>
   1f2ca:	ldr	r2, [pc, #176]	; (1f37c <btrfs_lookup_block_group@@Base+0x520>)
   1f2cc:	ldr	r3, [pc, #168]	; (1f378 <btrfs_lookup_block_group@@Base+0x51c>)
   1f2ce:	add	r2, pc
   1f2d0:	ldr	r3, [r2, r3]
   1f2d2:	ldr	r2, [r3, #0]
   1f2d4:	ldr	r3, [sp, #100]	; 0x64
   1f2d6:	eors	r2, r3
   1f2d8:	beq.n	1f36c <btrfs_lookup_block_group@@Base+0x510>
   1f2da:	blx	86b8 <__stack_chk_fail@plt>
   1f2de:	ldr	r3, [r5, #108]	; 0x6c
   1f2e0:	cbnz	r3, 1f340 <btrfs_lookup_block_group@@Base+0x4e4>
   1f2e2:	ldrd	r0, r1, [r5, #96]	; 0x60
   1f2e6:	and.w	r2, r6, r0
   1f2ea:	ldr	r0, [sp, #28]
   1f2ec:	and.w	r3, r0, r1
   1f2f0:	ldrd	r0, r1, [sp, #24]
   1f2f4:	cmp	r1, r3
   1f2f6:	it	eq
   1f2f8:	cmpeq	r0, r2
   1f2fa:	bne.n	1f340 <btrfs_lookup_block_group@@Base+0x4e4>
   1f2fc:	ldrd	r2, r1, [r5, #88]	; 0x58
   1f300:	ldrd	r3, r0, [r5, #72]	; 0x48
   1f304:	adds	r3, r3, r2
   1f306:	mov.w	r2, #10
   1f30a:	str	r3, [sp, #40]	; 0x28
   1f30c:	adc.w	r3, r0, r1
   1f310:	str	r3, [sp, #44]	; 0x2c
   1f312:	ldr.w	r0, [r5, #49]	; 0x31
   1f316:	ldr.w	r1, [r5, #53]	; 0x35
   1f31a:	bl	31a68 <div_factor@@Base>
   1f31e:	ldrd	r3, r4, [sp, #40]	; 0x28
   1f322:	cmp	r4, r1
   1f324:	it	eq
   1f326:	cmpeq	r3, r0
   1f328:	bcc.n	1f368 <btrfs_lookup_block_group@@Base+0x50c>
   1f32a:	ldrd	r1, r0, [r5, #40]	; 0x28
   1f32e:	ldr.w	r3, [r5, #49]	; 0x31
   1f332:	ldr.w	r2, [r5, #53]	; 0x35
   1f336:	adds.w	r9, r3, r1
   1f33a:	adc.w	sl, r2, r0
   1f33e:	b.n	1f1c0 <btrfs_lookup_block_group@@Base+0x364>
   1f340:	ldrd	r9, sl, [r5, #40]	; 0x28
   1f344:	ldrd	r3, r4, [sp, #16]
   1f348:	cmp	sl, r4
   1f34a:	it	eq
   1f34c:	cmpeq	r9, r3
   1f34e:	bcs.w	1f1c0 <btrfs_lookup_block_group@@Base+0x364>
   1f352:	mov	r9, r3
   1f354:	mov	sl, r4
   1f356:	b.n	1f1c0 <btrfs_lookup_block_group@@Base+0x364>
   1f358:	ldrd	r9, sl, [sp, #16]
   1f35c:	movs	r5, #1
   1f35e:	b.n	1f1ca <btrfs_lookup_block_group@@Base+0x36e>
   1f360:	cmp	r5, #0
   1f362:	beq.n	1f358 <btrfs_lookup_block_group@@Base+0x4fc>
   1f364:	movs	r4, #0
   1f366:	b.n	1f2ca <btrfs_lookup_block_group@@Base+0x46e>
   1f368:	mov	r4, r5
   1f36a:	b.n	1f2ca <btrfs_lookup_block_group@@Base+0x46e>
   1f36c:	mov	r0, r4
   1f36e:	add	sp, #108	; 0x6c
   1f370:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f374:	ldrb	r2, [r1, r0]
   1f376:	movs	r4, r0
   1f378:	lsls	r4, r4, #8
   1f37a:	movs	r0, r0
   1f37c:	ldrh	r2, [r7, r2]
   1f37e:	movs	r4, r0

0001f380 <hash_extent_data_ref@@Base>:
   1f380:	push	{r4, r5, r6, lr}
   1f382:	mov	r6, r2
   1f384:	ldr	r2, [pc, #100]	; (1f3ec <hash_extent_data_ref@@Base+0x6c>)
   1f386:	mov	r5, r3
   1f388:	ldr	r3, [pc, #100]	; (1f3f0 <hash_extent_data_ref@@Base+0x70>)
   1f38a:	sub	sp, #24
   1f38c:	add	r2, pc
   1f38e:	ldr	r3, [r2, r3]
   1f390:	movs	r2, #8
   1f392:	ldr	r3, [r3, #0]
   1f394:	str	r3, [sp, #20]
   1f396:	mov.w	r3, #0
   1f39a:	strd	r0, r1, [sp, #8]
   1f39e:	add.w	r1, sp, r2
   1f3a2:	mov.w	r0, #4294967295	; 0xffffffff
   1f3a6:	str	r1, [sp, #4]
   1f3a8:	bl	173a2 <crc32c_le@@Base>
   1f3ac:	ldr	r1, [sp, #4]
   1f3ae:	movs	r2, #8
   1f3b0:	strd	r6, r5, [sp, #8]
   1f3b4:	mov	r4, r0
   1f3b6:	mov.w	r0, #4294967295	; 0xffffffff
   1f3ba:	bl	173a2 <crc32c_le@@Base>
   1f3be:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f3c2:	ldr	r1, [sp, #4]
   1f3c4:	strd	r2, r3, [sp, #8]
   1f3c8:	movs	r2, #8
   1f3ca:	bl	173a2 <crc32c_le@@Base>
   1f3ce:	ldr	r2, [pc, #36]	; (1f3f4 <hash_extent_data_ref@@Base+0x74>)
   1f3d0:	ldr	r3, [pc, #28]	; (1f3f0 <hash_extent_data_ref@@Base+0x70>)
   1f3d2:	lsrs	r1, r4, #1
   1f3d4:	add	r2, pc
   1f3d6:	ldr	r3, [r2, r3]
   1f3d8:	ldr	r2, [r3, #0]
   1f3da:	ldr	r3, [sp, #20]
   1f3dc:	eors	r2, r3
   1f3de:	eor.w	r0, r0, r4, lsl #31
   1f3e2:	beq.n	1f3e8 <hash_extent_data_ref@@Base+0x68>
   1f3e4:	blx	86b8 <__stack_chk_fail@plt>
   1f3e8:	add	sp, #24
   1f3ea:	pop	{r4, r5, r6, pc}
   1f3ec:	ldr	r4, [r7, r7]
   1f3ee:	movs	r4, r0
   1f3f0:	lsls	r4, r4, #8
   1f3f2:	movs	r0, r0
   1f3f4:	ldr	r4, [r6, r6]
   1f3f6:	movs	r4, r0
   1f3f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3fc:	sub	sp, #68	; 0x44
   1f3fe:	mov	r5, r2
   1f400:	ldr	r2, [pc, #836]	; (1f748 <hash_extent_data_ref@@Base+0x3c8>)
   1f402:	str	r3, [sp, #36]	; 0x24
   1f404:	mov	r4, r0
   1f406:	ldr	r3, [pc, #836]	; (1f74c <hash_extent_data_ref@@Base+0x3cc>)
   1f408:	add	r2, pc
   1f40a:	str	r1, [sp, #28]
   1f40c:	mov.w	r9, #0
   1f410:	ldrd	sl, fp, [sp, #112]	; 0x70
   1f414:	ldr	r3, [r2, r3]
   1f416:	ldr	r3, [r3, #0]
   1f418:	str	r3, [sp, #60]	; 0x3c
   1f41a:	mov.w	r3, #0
   1f41e:	ldr.w	r3, [r1, #464]	; 0x1d0
   1f422:	ldr.w	r3, [r3, #308]	; 0x134
   1f426:	ldr.w	r3, [r3, #188]	; 0xbc
   1f42a:	str.w	sl, [sp, #49]	; 0x31
   1f42e:	and.w	r8, r3, #256	; 0x100
   1f432:	ldrd	r2, r3, [sp, #104]	; 0x68
   1f436:	str.w	fp, [sp, #53]	; 0x35
   1f43a:	strd	r2, r3, [sp, #40]	; 0x28
   1f43e:	movs	r3, #168	; 0xa8
   1f440:	strb.w	r3, [sp, #48]	; 0x30
   1f444:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f448:	cmp	r3, #0
   1f44a:	it	eq
   1f44c:	cmpeq.w	r2, #256	; 0x100
   1f450:	ldrd	r2, r3, [sp, #120]	; 0x78
   1f454:	bcs.n	1f4dc <hash_extent_data_ref@@Base+0x15c>
   1f456:	orrs	r3, r2
   1f458:	ite	ne
   1f45a:	movne	r3, #182	; 0xb6
   1f45c:	moveq	r3, #176	; 0xb0
   1f45e:	str	r3, [sp, #24]
   1f460:	ldr	r3, [sp, #152]	; 0x98
   1f462:	cmp	r3, #0
   1f464:	beq.w	1f738 <hash_extent_data_ref@@Base+0x3b8>
   1f468:	ldr	r0, [sp, #24]
   1f46a:	bl	1e8e4 <btrfs_create_tree@@Base+0x5c0>
   1f46e:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f472:	cmp	r3, #0
   1f474:	it	eq
   1f476:	cmpeq.w	r2, #256	; 0x100
   1f47a:	str	r0, [sp, #20]
   1f47c:	bcs.n	1f4f2 <hash_extent_data_ref@@Base+0x172>
   1f47e:	orrs.w	r3, r8, r9
   1f482:	beq.n	1f4f2 <hash_extent_data_ref@@Base+0x172>
   1f484:	movs	r3, #169	; 0xa9
   1f486:	strb.w	r3, [sp, #48]	; 0x30
   1f48a:	ldr	r3, [sp, #136]	; 0x88
   1f48c:	mov.w	r8, #1
   1f490:	str.w	r3, [sp, #49]	; 0x31
   1f494:	ldr	r3, [sp, #140]	; 0x8c
   1f496:	str.w	r3, [sp, #53]	; 0x35
   1f49a:	add	r6, sp, #40	; 0x28
   1f49c:	movs	r7, #1
   1f49e:	mov.w	r9, #168	; 0xa8
   1f4a2:	ldr	r3, [sp, #20]
   1f4a4:	mov	r2, r6
   1f4a6:	ldr	r1, [sp, #28]
   1f4a8:	mov	r0, r4
   1f4aa:	str	r7, [sp, #4]
   1f4ac:	str	r3, [sp, #0]
   1f4ae:	mov	r3, r5
   1f4b0:	bl	1a1e4 <btrfs_search_slot@@Base>
   1f4b4:	cmp	r0, #0
   1f4b6:	blt.n	1f58a <hash_extent_data_ref@@Base+0x20a>
   1f4b8:	beq.n	1f530 <hash_extent_data_ref@@Base+0x1b0>
   1f4ba:	cmp.w	r8, #0
   1f4be:	beq.n	1f566 <hash_extent_data_ref@@Base+0x1e6>
   1f4c0:	ldr	r2, [r5, #32]
   1f4c2:	cbnz	r2, 1f4f8 <hash_extent_data_ref@@Base+0x178>
   1f4c4:	mov	r0, r5
   1f4c6:	strb.w	r9, [sp, #48]	; 0x30
   1f4ca:	str.w	sl, [sp, #49]	; 0x31
   1f4ce:	mov.w	r8, #0
   1f4d2:	str.w	fp, [sp, #53]	; 0x35
   1f4d6:	bl	17e00 <btrfs_release_path@@Base>
   1f4da:	b.n	1f4a2 <hash_extent_data_ref@@Base+0x122>
   1f4dc:	orrs	r3, r2
   1f4de:	ite	ne
   1f4e0:	movne	r3, #184	; 0xb8
   1f4e2:	moveq	r3, #178	; 0xb2
   1f4e4:	str	r3, [sp, #24]
   1f4e6:	ldr	r3, [sp, #152]	; 0x98
   1f4e8:	cmp	r3, #0
   1f4ea:	bne.n	1f468 <hash_extent_data_ref@@Base+0xe8>
   1f4ec:	mov.w	r3, #4294967295	; 0xffffffff
   1f4f0:	str	r3, [sp, #20]
   1f4f2:	mov.w	r8, #0
   1f4f6:	b.n	1f49a <hash_extent_data_ref@@Base+0x11a>
   1f4f8:	subs	r2, #1
   1f4fa:	ldr	r0, [r5, #0]
   1f4fc:	mov	r1, r6
   1f4fe:	str	r2, [r5, #32]
   1f500:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1f504:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f508:	ldrd	r0, r1, [sp, #104]	; 0x68
   1f50c:	cmp	r3, r1
   1f50e:	it	eq
   1f510:	cmpeq	r2, r0
   1f512:	bne.n	1f4c4 <hash_extent_data_ref@@Base+0x144>
   1f514:	ldrb.w	r3, [sp, #48]	; 0x30
   1f518:	cmp	r3, #168	; 0xa8
   1f51a:	bne.n	1f4c4 <hash_extent_data_ref@@Base+0x144>
   1f51c:	ldr.w	r3, [sp, #53]	; 0x35
   1f520:	ldr.w	r2, [sp, #49]	; 0x31
   1f524:	cmp	r3, fp
   1f526:	it	eq
   1f528:	cmpeq	r2, sl
   1f52a:	bne.n	1f4c4 <hash_extent_data_ref@@Base+0x144>
   1f52c:	mov.w	r8, #0
   1f530:	ldr	r4, [r5, #0]
   1f532:	movs	r3, #25
   1f534:	ldr	r2, [r5, #32]
   1f536:	add.w	r7, r4, #96	; 0x60
   1f53a:	mla	r3, r3, r2, r7
   1f53e:	add.w	r1, r3, #101	; 0x65
   1f542:	ldr.w	r6, [r3, #122]	; 0x7a
   1f546:	cmp	r6, #23
   1f548:	bhi.n	1f5a0 <hash_extent_data_ref@@Base+0x220>
   1f54a:	ldr	r1, [pc, #516]	; (1f750 <hash_extent_data_ref@@Base+0x3d0>)
   1f54c:	movs	r3, #24
   1f54e:	str	r2, [sp, #0]
   1f550:	movs	r0, #1
   1f552:	add	r1, pc
   1f554:	mov	r2, r6
   1f556:	blx	89ec <__printf_chk@plt+0x4>
   1f55a:	mov	r0, r4
   1f55c:	bl	24fc8 <btrfs_print_leaf@@Base>
   1f560:	mvn.w	r0, #21
   1f564:	b.n	1f58a <hash_extent_data_ref@@Base+0x20a>
   1f566:	ldr.w	r2, [sp, #49]	; 0x31
   1f56a:	movs	r0, #1
   1f56c:	ldr.w	r3, [sp, #53]	; 0x35
   1f570:	ldr	r1, [pc, #480]	; (1f754 <hash_extent_data_ref@@Base+0x3d4>)
   1f572:	strd	r2, r3, [sp, #8]
   1f576:	add	r1, pc
   1f578:	ldrb.w	r3, [sp, #48]	; 0x30
   1f57c:	str	r3, [sp, #0]
   1f57e:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f582:	blx	89ec <__printf_chk@plt+0x4>
   1f586:	mvn.w	r0, #1
   1f58a:	ldr	r2, [pc, #460]	; (1f758 <hash_extent_data_ref@@Base+0x3d8>)
   1f58c:	ldr	r3, [pc, #444]	; (1f74c <hash_extent_data_ref@@Base+0x3cc>)
   1f58e:	add	r2, pc
   1f590:	ldr	r3, [r2, r3]
   1f592:	ldr	r2, [r3, #0]
   1f594:	ldr	r3, [sp, #60]	; 0x3c
   1f596:	eors	r2, r3
   1f598:	beq.w	1f740 <hash_extent_data_ref@@Base+0x3c0>
   1f59c:	blx	86b8 <__stack_chk_fail@plt>
   1f5a0:	ldr.w	ip, [r1, #17]
   1f5a4:	movs	r1, #0
   1f5a6:	add.w	fp, ip, #101	; 0x65
   1f5aa:	add.w	r4, ip, #125	; 0x7d
   1f5ae:	add.w	r3, r7, fp
   1f5b2:	ldr	r0, [r3, #16]
   1f5b4:	add.w	r3, fp, r6
   1f5b8:	str	r3, [sp, #32]
   1f5ba:	mov	r3, r1
   1f5bc:	and.w	r2, r0, #2
   1f5c0:	orrs	r3, r2
   1f5c2:	beq.n	1f626 <hash_extent_data_ref@@Base+0x2a6>
   1f5c4:	cmp.w	r8, #0
   1f5c8:	bne.n	1f5f0 <hash_extent_data_ref@@Base+0x270>
   1f5ca:	ldr	r3, [sp, #32]
   1f5cc:	add.w	r4, ip, #143	; 0x8f
   1f5d0:	ldr	r2, [pc, #392]	; (1f75c <hash_extent_data_ref@@Base+0x3dc>)
   1f5d2:	cmp	r3, r4
   1f5d4:	ldr	r1, [pc, #392]	; (1f760 <hash_extent_data_ref@@Base+0x3e0>)
   1f5d6:	ldr	r0, [pc, #396]	; (1f764 <hash_extent_data_ref@@Base+0x3e4>)
   1f5d8:	add	r2, pc
   1f5da:	ite	cs
   1f5dc:	movcs	r3, #0
   1f5de:	movcc	r3, #1
   1f5e0:	adds	r2, #178	; 0xb2
   1f5e2:	str	r3, [sp, #0]
   1f5e4:	add	r1, pc
   1f5e6:	add	r0, pc
   1f5e8:	movw	r3, #943	; 0x3af
   1f5ec:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1f5f0:	ldr	r3, [sp, #32]
   1f5f2:	cmp	r4, r3
   1f5f4:	bcc.n	1f636 <hash_extent_data_ref@@Base+0x2b6>
   1f5f6:	ldr	r2, [pc, #368]	; (1f768 <hash_extent_data_ref@@Base+0x3e8>)
   1f5f8:	it	hi
   1f5fa:	movhi	r3, #1
   1f5fc:	ldr	r1, [pc, #364]	; (1f76c <hash_extent_data_ref@@Base+0x3ec>)
   1f5fe:	it	ls
   1f600:	movls	r3, #0
   1f602:	ldr	r0, [pc, #364]	; (1f770 <hash_extent_data_ref@@Base+0x3f0>)
   1f604:	add	r2, pc
   1f606:	str	r3, [sp, #0]
   1f608:	adds	r2, #178	; 0xb2
   1f60a:	add	r1, pc
   1f60c:	add	r0, pc
   1f60e:	movw	r3, #953	; 0x3b9
   1f612:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1f616:	ldr	r3, [sp, #152]	; 0x98
   1f618:	cmp	r3, #0
   1f61a:	bne.n	1f6ea <hash_extent_data_ref@@Base+0x36a>
   1f61c:	mvn.w	r0, #1
   1f620:	ldr	r3, [sp, #36]	; 0x24
   1f622:	str	r4, [r3, #0]
   1f624:	b.n	1f58a <hash_extent_data_ref@@Base+0x20a>
   1f626:	and.w	r2, r0, #1
   1f62a:	mov	r3, r1
   1f62c:	orrs	r3, r2
   1f62e:	bne.n	1f5f0 <hash_extent_data_ref@@Base+0x270>
   1f630:	mvn.w	r0, #4
   1f634:	b.n	1f58a <hash_extent_data_ref@@Base+0x20a>
   1f636:	ldrb.w	sl, [r7, r4]
   1f63a:	adds	r1, r7, r4
   1f63c:	ldr	r3, [sp, #24]
   1f63e:	cmp	sl, r3
   1f640:	bgt.n	1f616 <hash_extent_data_ref@@Base+0x296>
   1f642:	bge.n	1f64e <hash_extent_data_ref@@Base+0x2ce>
   1f644:	mov	r0, sl
   1f646:	bl	1e8e4 <btrfs_create_tree@@Base+0x5c0>
   1f64a:	add	r4, r0
   1f64c:	b.n	1f5f0 <hash_extent_data_ref@@Base+0x270>
   1f64e:	cmp.w	sl, #178	; 0xb2
   1f652:	bne.n	1f6c4 <hash_extent_data_ref@@Base+0x344>
   1f654:	adds	r3, r4, #1
   1f656:	add.w	ip, r7, r3
   1f65a:	ldr.w	r8, [r7, r3]
   1f65e:	ldr.w	r9, [ip, #4]
   1f662:	ldr.w	r2, [ip, #8]
   1f666:	ldr.w	r3, [ip, #12]
   1f66a:	ldr.w	r0, [ip, #16]
   1f66e:	ldr.w	r1, [ip, #20]
   1f672:	ldrd	fp, ip, [sp, #128]	; 0x80
   1f676:	cmp	ip, r9
   1f678:	it	eq
   1f67a:	cmpeq	fp, r8
   1f67c:	bne.n	1f696 <hash_extent_data_ref@@Base+0x316>
   1f67e:	ldrd	fp, ip, [sp, #136]	; 0x88
   1f682:	cmp	ip, r3
   1f684:	it	eq
   1f686:	cmpeq	fp, r2
   1f688:	bne.n	1f696 <hash_extent_data_ref@@Base+0x316>
   1f68a:	ldrd	fp, ip, [sp, #144]	; 0x90
   1f68e:	cmp	ip, r1
   1f690:	it	eq
   1f692:	cmpeq	fp, r0
   1f694:	beq.n	1f734 <hash_extent_data_ref@@Base+0x3b4>
   1f696:	strd	r0, r1, [sp]
   1f69a:	mov	r0, r8
   1f69c:	mov	r1, r9
   1f69e:	bl	1f380 <hash_extent_data_ref@@Base>
   1f6a2:	ldrd	r2, r3, [sp, #144]	; 0x90
   1f6a6:	strd	r2, r3, [sp]
   1f6aa:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f6ae:	mov	r8, r0
   1f6b0:	mov	r9, r1
   1f6b2:	ldrd	r0, r1, [sp, #128]	; 0x80
   1f6b6:	bl	1f380 <hash_extent_data_ref@@Base>
   1f6ba:	cmp	r9, r1
   1f6bc:	it	eq
   1f6be:	cmpeq	r8, r0
   1f6c0:	bcs.n	1f644 <hash_extent_data_ref@@Base+0x2c4>
   1f6c2:	b.n	1f616 <hash_extent_data_ref@@Base+0x296>
   1f6c4:	ldr.w	r2, [r1, #1]!
   1f6c8:	ldr	r3, [r1, #4]
   1f6ca:	ldrd	r0, r1, [sp, #120]	; 0x78
   1f6ce:	orrs	r1, r0
   1f6d0:	ite	ne
   1f6d2:	ldrdne	r0, r1, [sp, #120]	; 0x78
   1f6d6:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   1f6da:	cmp	r1, r3
   1f6dc:	it	eq
   1f6de:	cmpeq	r0, r2
   1f6e0:	beq.n	1f734 <hash_extent_data_ref@@Base+0x3b4>
   1f6e2:	cmp	r3, r1
   1f6e4:	it	eq
   1f6e6:	cmpeq	r2, r0
   1f6e8:	b.n	1f6c0 <hash_extent_data_ref@@Base+0x340>
   1f6ea:	ldr	r3, [sp, #20]
   1f6ec:	add	r3, r6
   1f6ee:	mov	r6, r3
   1f6f0:	ldr	r3, [sp, #28]
   1f6f2:	ldr.w	r3, [r3, #464]	; 0x1d0
   1f6f6:	ldr.w	r3, [r3, #384]	; 0x180
   1f6fa:	subs	r3, #101	; 0x65
   1f6fc:	lsrs	r3, r3, #4
   1f6fe:	subs	r3, #25
   1f700:	cmp	r6, r3
   1f702:	bcc.n	1f70a <hash_extent_data_ref@@Base+0x38a>
   1f704:	mvn.w	r0, #10
   1f708:	b.n	1f58a <hash_extent_data_ref@@Base+0x20a>
   1f70a:	add	r1, sp, #40	; 0x28
   1f70c:	mov	r0, r5
   1f70e:	bl	31410 <find_next_key@@Base>
   1f712:	cmp	r0, #0
   1f714:	bne.n	1f61c <hash_extent_data_ref@@Base+0x29c>
   1f716:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f71a:	ldrd	r0, r1, [sp, #104]	; 0x68
   1f71e:	cmp	r3, r1
   1f720:	it	eq
   1f722:	cmpeq	r2, r0
   1f724:	bne.w	1f61c <hash_extent_data_ref@@Base+0x29c>
   1f728:	ldrb.w	r3, [sp, #48]	; 0x30
   1f72c:	cmp	r3, #191	; 0xbf
   1f72e:	bhi.w	1f61c <hash_extent_data_ref@@Base+0x29c>
   1f732:	b.n	1f704 <hash_extent_data_ref@@Base+0x384>
   1f734:	movs	r0, #0
   1f736:	b.n	1f620 <hash_extent_data_ref@@Base+0x2a0>
   1f738:	mov.w	r3, #4294967295	; 0xffffffff
   1f73c:	str	r3, [sp, #20]
   1f73e:	b.n	1f47e <hash_extent_data_ref@@Base+0xfe>
   1f740:	add	sp, #68	; 0x44
   1f742:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f746:	nop
   1f748:	ldr	r0, [r0, r6]
   1f74a:	movs	r4, r0
   1f74c:	lsls	r4, r4, #8
   1f74e:	movs	r0, r0
   1f750:	svc	192	; 0xc0
   1f752:	movs	r1, r0
   1f754:	svc	123	; 0x7b
   1f756:	movs	r1, r0
   1f758:	ldrsb	r2, [r7, r7]
   1f75a:	movs	r4, r0
   1f75c:	b.n	1f174 <btrfs_lookup_block_group@@Base+0x318>
   1f75e:	movs	r1, r0
   1f760:	ble.n	1f6fe <hash_extent_data_ref@@Base+0x37e>
   1f762:	movs	r1, r0
   1f764:	add	r6, sp, #548	; 0x224
   1f766:	movs	r1, r0
   1f768:	b.n	1f128 <btrfs_lookup_block_group@@Base+0x2cc>
   1f76a:	movs	r1, r0
   1f76c:	ble.n	1f6be <hash_extent_data_ref@@Base+0x33e>
   1f76e:	movs	r1, r0
   1f770:	add	r6, sp, #396	; 0x18c
   1f772:	movs	r1, r0
   1f774:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f778:	mov	r6, r0
   1f77a:	vpush	{d8}
   1f77e:	ldr.w	r1, [pc, #2168]	; 1fff8 <hash_extent_data_ref@@Base+0xc78>
   1f782:	ldr.w	r0, [pc, #2168]	; 1fffc <hash_extent_data_ref@@Base+0xc7c>
   1f786:	add	r1, pc
   1f788:	sub	sp, #148	; 0x94
   1f78a:	add	r0, pc
   1f78c:	str	r1, [sp, #72]	; 0x48
   1f78e:	ldr.w	r1, [pc, #2160]	; 20000 <hash_extent_data_ref@@Base+0xc80>
   1f792:	strd	r2, r3, [sp, #56]	; 0x38
   1f796:	ldrd	r8, r9, [sp, #200]	; 0xc8
   1f79a:	ldr	r1, [r0, r1]
   1f79c:	ldr	r0, [r6, #0]
   1f79e:	ldr	r1, [r1, #0]
   1f7a0:	str	r1, [sp, #140]	; 0x8c
   1f7a2:	mov.w	r1, #0
   1f7a6:	ldr.w	sl, [r0, #24]
   1f7aa:	ldr.w	r1, [sl, #464]	; 0x1d0
   1f7ae:	ldr.w	r1, [r1, #308]	; 0x134
   1f7b2:	ldr.w	r5, [r1, #188]	; 0xbc
   1f7b6:	ldr.w	r1, [r0, #372]	; 0x174
   1f7ba:	cbz	r1, 1f7e6 <hash_extent_data_ref@@Base+0x466>
   1f7bc:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1f7c0:	movs	r4, #1
   1f7c2:	strd	r8, r9, [sp, #8]
   1f7c6:	str	r4, [sp, #40]	; 0x28
   1f7c8:	strd	fp, ip, [sp, #32]
   1f7cc:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1f7d0:	strd	fp, ip, [sp, #24]
   1f7d4:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1f7d8:	strd	fp, ip, [sp, #16]
   1f7dc:	ldrd	fp, ip, [sp, #192]	; 0xc0
   1f7e0:	strd	fp, ip, [sp]
   1f7e4:	blx	r1
   1f7e6:	bl	17df8 <btrfs_alloc_path@@Base>
   1f7ea:	mov	r4, r0
   1f7ec:	cmp	r0, #0
   1f7ee:	beq.w	1ff8a <hash_extent_data_ref@@Base+0xc0a>
   1f7f2:	movs	r3, #1
   1f7f4:	strb.w	r3, [r0, #64]	; 0x40
   1f7f8:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f7fc:	movs	r7, #0
   1f7fe:	ldr.w	r1, [pc, #2052]	; 20004 <hash_extent_data_ref@@Base+0xc84>
   1f802:	cmp	r3, #0
   1f804:	ldr.w	r0, [pc, #2048]	; 20008 <hash_extent_data_ref@@Base+0xc88>
   1f808:	it	eq
   1f80a:	cmpeq.w	r2, #256	; 0x100
   1f80e:	ldr.w	r2, [pc, #2044]	; 2000c <hash_extent_data_ref@@Base+0xc8c>
   1f812:	add	r1, pc
   1f814:	add	r0, pc
   1f816:	add	r2, pc
   1f818:	ite	cs
   1f81a:	movcs	r3, #1
   1f81c:	movcc	r3, #0
   1f81e:	add.w	r2, r2, #207	; 0xcf
   1f822:	str	r3, [sp, #76]	; 0x4c
   1f824:	ite	cc
   1f826:	ubfxcc	r3, r5, #8, #1
   1f82a:	movcs	r3, #0
   1f82c:	str	r7, [sp, #0]
   1f82e:	str	r3, [sp, #64]	; 0x40
   1f830:	movw	r3, #1959	; 0x7a7
   1f834:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1f838:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1f83c:	mov	r1, sl
   1f83e:	mov	r0, r6
   1f840:	str	r7, [sp, #48]	; 0x30
   1f842:	strd	r2, r3, [sp, #40]	; 0x28
   1f846:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f84a:	strd	r8, r9, [sp, #16]
   1f84e:	strd	r2, r3, [sp, #32]
   1f852:	ldrd	r2, r3, [sp, #208]	; 0xd0
   1f856:	strd	r2, r3, [sp, #24]
   1f85a:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f85e:	strd	r2, r3, [sp, #8]
   1f862:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f866:	strd	r2, r3, [sp]
   1f86a:	add	r3, sp, #96	; 0x60
   1f86c:	mov	r2, r4
   1f86e:	bl	1f3f8 <hash_extent_data_ref@@Base+0x78>
   1f872:	adds	r3, r0, #2
   1f874:	mov	r5, r0
   1f876:	bne.w	1f98a <hash_extent_data_ref@@Base+0x60a>
   1f87a:	mov	r0, r4
   1f87c:	bl	17e00 <btrfs_release_path@@Base>
   1f880:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f884:	str	r7, [sp, #96]	; 0x60
   1f886:	cmp	r3, #0
   1f888:	it	eq
   1f88a:	cmpeq.w	r2, #256	; 0x100
   1f88e:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f892:	strd	r2, r3, [sp, #120]	; 0x78
   1f896:	bcs.n	1f94e <hash_extent_data_ref@@Base+0x5ce>
   1f898:	orrs.w	r3, r8, r9
   1f89c:	add.w	r3, sp, #129	; 0x81
   1f8a0:	beq.n	1f93c <hash_extent_data_ref@@Base+0x5bc>
   1f8a2:	movs	r2, #182	; 0xb6
   1f8a4:	str.w	r8, [sp, #129]	; 0x81
   1f8a8:	strb.w	r2, [sp, #128]	; 0x80
   1f8ac:	str.w	r9, [r3, #4]
   1f8b0:	mov.w	r3, #4294967295	; 0xffffffff
   1f8b4:	movs	r5, #1
   1f8b6:	add	r2, sp, #120	; 0x78
   1f8b8:	strd	r3, r5, [sp]
   1f8bc:	mov	r1, sl
   1f8be:	mov	r3, r4
   1f8c0:	mov	r0, r6
   1f8c2:	bl	1a1e4 <btrfs_search_slot@@Base>
   1f8c6:	subs	r5, r0, #0
   1f8c8:	ble.n	1f98a <hash_extent_data_ref@@Base+0x60a>
   1f8ca:	ldr	r2, [sp, #72]	; 0x48
   1f8cc:	mvn.w	r5, #4
   1f8d0:	ldr.w	r3, [pc, #1852]	; 20010 <hash_extent_data_ref@@Base+0xc90>
   1f8d4:	ldr	r3, [r2, r3]
   1f8d6:	ldrd	r1, r2, [sp, #224]	; 0xe0
   1f8da:	strd	r8, r9, [sp, #8]
   1f8de:	strd	r1, r2, [sp, #32]
   1f8e2:	ldrd	r1, r2, [sp, #216]	; 0xd8
   1f8e6:	strd	r1, r2, [sp, #24]
   1f8ea:	ldrd	r1, r2, [sp, #208]	; 0xd0
   1f8ee:	strd	r1, r2, [sp, #16]
   1f8f2:	ldrd	r1, r2, [sp, #56]	; 0x38
   1f8f6:	strd	r1, r2, [sp]
   1f8fa:	movs	r1, #1
   1f8fc:	ldr.w	r2, [pc, #1812]	; 20014 <hash_extent_data_ref@@Base+0xc94>
   1f900:	ldr	r0, [r3, #0]
   1f902:	add	r2, pc
   1f904:	blx	8a14 <__fprintf_chk@plt+0x4>
   1f908:	ldr.w	r1, [pc, #1804]	; 20018 <hash_extent_data_ref@@Base+0xc98>
   1f90c:	ldr	r2, [r4, #32]
   1f90e:	movs	r0, #1
   1f910:	add	r1, pc
   1f912:	blx	89ec <__printf_chk@plt+0x4>
   1f916:	ldr	r0, [r4, #0]
   1f918:	bl	24fc8 <btrfs_print_leaf@@Base>
   1f91c:	mov	r0, r4
   1f91e:	bl	17e26 <btrfs_free_path@@Base>
   1f922:	ldr.w	r2, [pc, #1784]	; 2001c <hash_extent_data_ref@@Base+0xc9c>
   1f926:	ldr.w	r3, [pc, #1752]	; 20000 <hash_extent_data_ref@@Base+0xc80>
   1f92a:	add	r2, pc
   1f92c:	ldr	r3, [r2, r3]
   1f92e:	ldr	r2, [r3, #0]
   1f930:	ldr	r3, [sp, #140]	; 0x8c
   1f932:	eors	r2, r3
   1f934:	beq.w	1ffea <hash_extent_data_ref@@Base+0xc6a>
   1f938:	blx	86b8 <__stack_chk_fail@plt>
   1f93c:	movs	r2, #176	; 0xb0
   1f93e:	strb.w	r2, [sp, #128]	; 0x80
   1f942:	ldr	r2, [sp, #208]	; 0xd0
   1f944:	str.w	r2, [sp, #129]	; 0x81
   1f948:	ldr	r2, [sp, #212]	; 0xd4
   1f94a:	str	r2, [r3, #4]
   1f94c:	b.n	1f8b0 <hash_extent_data_ref@@Base+0x530>
   1f94e:	orrs.w	r3, r8, r9
   1f952:	beq.n	1f990 <hash_extent_data_ref@@Base+0x610>
   1f954:	movs	r3, #184	; 0xb8
   1f956:	str.w	r8, [sp, #129]	; 0x81
   1f95a:	strb.w	r3, [sp, #128]	; 0x80
   1f95e:	str.w	r9, [sp, #133]	; 0x85
   1f962:	add	r3, sp, #120	; 0x78
   1f964:	vmov	s16, r3
   1f968:	mov.w	r3, #4294967295	; 0xffffffff
   1f96c:	movs	r0, #1
   1f96e:	vmov	r2, s16
   1f972:	mov	r1, sl
   1f974:	strd	r3, r0, [sp]
   1f978:	mov	r3, r4
   1f97a:	mov	r0, r6
   1f97c:	bl	1a1e4 <btrfs_search_slot@@Base>
   1f980:	subs	r5, r0, #0
   1f982:	blt.n	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1f984:	orrs.w	r3, r8, r9
   1f988:	beq.n	1f9b4 <hash_extent_data_ref@@Base+0x634>
   1f98a:	cmp	r5, #0
   1f98c:	beq.n	1fa62 <hash_extent_data_ref@@Base+0x6e2>
   1f98e:	b.n	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1f990:	movs	r3, #178	; 0xb2
   1f992:	strb.w	r3, [sp, #128]	; 0x80
   1f996:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1f99a:	ldrd	r0, r1, [sp, #208]	; 0xd0
   1f99e:	strd	r2, r3, [sp]
   1f9a2:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f9a6:	bl	1f380 <hash_extent_data_ref@@Base>
   1f9aa:	str.w	r0, [sp, #129]	; 0x81
   1f9ae:	str.w	r1, [sp, #133]	; 0x85
   1f9b2:	b.n	1f962 <hash_extent_data_ref@@Base+0x5e2>
   1f9b4:	ldr	r7, [r4, #0]
   1f9b6:	movs	r5, #0
   1f9b8:	ldr.w	r3, [r7, #192]	; 0xc0
   1f9bc:	str	r3, [sp, #80]	; 0x50
   1f9be:	ldr	r3, [r4, #32]
   1f9c0:	ldr	r2, [sp, #80]	; 0x50
   1f9c2:	cmp	r3, r2
   1f9c4:	bcc.n	1f9ec <hash_extent_data_ref@@Base+0x66c>
   1f9c6:	mov.w	r3, #0
   1f9ca:	mov	r1, r4
   1f9cc:	strb.w	r3, [r4, #65]	; 0x41
   1f9d0:	ldr.w	r0, [sl, #464]	; 0x1d0
   1f9d4:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   1f9d8:	cmp	r0, #0
   1f9da:	blt.w	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1f9de:	bne.w	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1f9e2:	ldr	r7, [r4, #0]
   1f9e4:	movs	r5, #1
   1f9e6:	ldr.w	r3, [r7, #192]	; 0xc0
   1f9ea:	str	r3, [sp, #80]	; 0x50
   1f9ec:	vmov	r1, s16
   1f9f0:	mov	r0, r7
   1f9f2:	ldr	r2, [r4, #32]
   1f9f4:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1f9f8:	ldrd	r2, r3, [sp, #120]	; 0x78
   1f9fc:	ldrd	r0, r1, [sp, #56]	; 0x38
   1fa00:	cmp	r1, r3
   1fa02:	it	eq
   1fa04:	cmpeq	r0, r2
   1fa06:	bne.w	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1fa0a:	ldrb.w	r3, [sp, #128]	; 0x80
   1fa0e:	cmp	r3, #178	; 0xb2
   1fa10:	bne.w	1f8ca <hash_extent_data_ref@@Base+0x54a>
   1fa14:	ldr	r0, [r4, #32]
   1fa16:	add.w	ip, r7, #96	; 0x60
   1fa1a:	movs	r3, #25
   1fa1c:	mla	r3, r3, r0, ip
   1fa20:	ldr.w	lr, [r3, #118]	; 0x76
   1fa24:	add.w	lr, lr, #101	; 0x65
   1fa28:	add.w	r1, ip, lr
   1fa2c:	ldr.w	r2, [ip, lr]
   1fa30:	ldr	r3, [r1, #4]
   1fa32:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1fa36:	cmp	ip, r3
   1fa38:	it	eq
   1fa3a:	cmpeq	fp, r2
   1fa3c:	bne.n	1fad8 <hash_extent_data_ref@@Base+0x758>
   1fa3e:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1fa42:	ldr	r3, [r1, #12]
   1fa44:	ldr	r2, [r1, #8]
   1fa46:	cmp	ip, r3
   1fa48:	it	eq
   1fa4a:	cmpeq	fp, r2
   1fa4c:	bne.n	1fad8 <hash_extent_data_ref@@Base+0x758>
   1fa4e:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1fa52:	ldr	r3, [r1, #20]
   1fa54:	ldr	r2, [r1, #16]
   1fa56:	cmp	ip, r3
   1fa58:	it	eq
   1fa5a:	cmpeq	fp, r2
   1fa5c:	bne.n	1fad8 <hash_extent_data_ref@@Base+0x758>
   1fa5e:	cmp	r5, #0
   1fa60:	bne.n	1fade <hash_extent_data_ref@@Base+0x75e>
   1fa62:	ldr	r7, [r4, #32]
   1fa64:	add	r5, sp, #100	; 0x64
   1fa66:	cmp	r7, #0
   1fa68:	bge.n	1fae6 <hash_extent_data_ref@@Base+0x766>
   1fa6a:	ldr.w	r7, [pc, #1460]	; 20020 <hash_extent_data_ref@@Base+0xca0>
   1fa6e:	ldr.w	r5, [pc, #1460]	; 20024 <hash_extent_data_ref@@Base+0xca4>
   1fa72:	ldr	r3, [sp, #96]	; 0x60
   1fa74:	add	r7, pc
   1fa76:	adds	r7, #207	; 0xcf
   1fa78:	add	r5, pc
   1fa7a:	ldr.w	r0, [pc, #1452]	; 20028 <hash_extent_data_ref@@Base+0xca8>
   1fa7e:	mov	r2, r7
   1fa80:	mov	r1, r5
   1fa82:	add	r0, pc
   1fa84:	str	r3, [sp, #0]
   1fa86:	movw	r3, #1987	; 0x7c3
   1fa8a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fa8e:	ldr	r3, [sp, #76]	; 0x4c
   1fa90:	mov	r2, r4
   1fa92:	mov	r1, sl
   1fa94:	mov	r0, r6
   1fa96:	str	r3, [sp, #0]
   1fa98:	movs	r3, #0
   1fa9a:	bl	1ec4c <btrfs_create_tree@@Base+0x928>
   1fa9e:	movw	r3, #1991	; 0x7c7
   1faa2:	mov	r2, r7
   1faa4:	mov	r1, r5
   1faa6:	str	r0, [sp, #0]
   1faa8:	ldr.w	r0, [pc, #1408]	; 2002c <hash_extent_data_ref@@Base+0xcac>
   1faac:	add	r0, pc
   1faae:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fab2:	mov	r0, r4
   1fab4:	bl	17e00 <btrfs_release_path@@Base>
   1fab8:	ldr	r3, [sp, #56]	; 0x38
   1faba:	ldr	r2, [sp, #64]	; 0x40
   1fabc:	str	r3, [sp, #100]	; 0x64
   1fabe:	ldr	r3, [sp, #60]	; 0x3c
   1fac0:	str	r3, [sp, #104]	; 0x68
   1fac2:	add.w	r3, sp, #109	; 0x6d
   1fac6:	cbnz	r2, 1fb3a <hash_extent_data_ref@@Base+0x7ba>
   1fac8:	movs	r2, #168	; 0xa8
   1faca:	strb.w	r2, [sp, #108]	; 0x6c
   1face:	ldr	r2, [sp, #192]	; 0xc0
   1fad0:	str.w	r2, [sp, #109]	; 0x6d
   1fad4:	ldr	r2, [sp, #196]	; 0xc4
   1fad6:	b.n	1fb48 <hash_extent_data_ref@@Base+0x7c8>
   1fad8:	adds	r0, #1
   1fada:	str	r0, [r4, #32]
   1fadc:	b.n	1f9be <hash_extent_data_ref@@Base+0x63e>
   1fade:	mov	r0, r4
   1fae0:	bl	17e00 <btrfs_release_path@@Base>
   1fae4:	b.n	1f968 <hash_extent_data_ref@@Base+0x5e8>
   1fae6:	ldr	r0, [r4, #0]
   1fae8:	mov	r2, r7
   1faea:	mov	r1, r5
   1faec:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1faf0:	ldrd	r2, r3, [sp, #100]	; 0x64
   1faf4:	ldrd	r0, r1, [sp, #56]	; 0x38
   1faf8:	cmp	r1, r3
   1fafa:	it	eq
   1fafc:	cmpeq	r0, r2
   1fafe:	bne.n	1fa6a <hash_extent_data_ref@@Base+0x6ea>
   1fb00:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fb04:	cmp	r3, #168	; 0xa8
   1fb06:	bne.n	1fb28 <hash_extent_data_ref@@Base+0x7a8>
   1fb08:	ldr.w	r2, [sp, #109]	; 0x6d
   1fb0c:	ldr.w	r3, [sp, #113]	; 0x71
   1fb10:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1fb14:	cmp	r1, r3
   1fb16:	it	eq
   1fb18:	cmpeq	r0, r2
   1fb1a:	beq.n	1fc08 <hash_extent_data_ref@@Base+0x888>
   1fb1c:	ldr	r3, [r4, #32]
   1fb1e:	subs	r3, r3, r7
   1fb20:	cmp	r3, #5
   1fb22:	bgt.n	1fa6a <hash_extent_data_ref@@Base+0x6ea>
   1fb24:	subs	r7, #1
   1fb26:	b.n	1fa66 <hash_extent_data_ref@@Base+0x6e6>
   1fb28:	cmp	r3, #169	; 0xa9
   1fb2a:	bne.n	1fb1c <hash_extent_data_ref@@Base+0x79c>
   1fb2c:	ldr.w	r2, [sp, #109]	; 0x6d
   1fb30:	ldr.w	r3, [sp, #113]	; 0x71
   1fb34:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1fb38:	b.n	1fb14 <hash_extent_data_ref@@Base+0x794>
   1fb3a:	movs	r2, #169	; 0xa9
   1fb3c:	strb.w	r2, [sp, #108]	; 0x6c
   1fb40:	ldr	r2, [sp, #216]	; 0xd8
   1fb42:	str.w	r2, [sp, #109]	; 0x6d
   1fb46:	ldr	r2, [sp, #220]	; 0xdc
   1fb48:	add	r7, sp, #100	; 0x64
   1fb4a:	str	r2, [r3, #4]
   1fb4c:	movs	r1, #1
   1fb4e:	mov.w	r3, #4294967295	; 0xffffffff
   1fb52:	mov	r2, r7
   1fb54:	strd	r3, r1, [sp]
   1fb58:	mov	r0, r6
   1fb5a:	mov	r3, r4
   1fb5c:	mov	r1, sl
   1fb5e:	bl	1a1e4 <btrfs_search_slot@@Base>
   1fb62:	subs	r5, r0, #0
   1fb64:	ble.w	1ffc0 <hash_extent_data_ref@@Base+0xc40>
   1fb68:	ldr	r3, [sp, #64]	; 0x40
   1fb6a:	cmp	r3, #0
   1fb6c:	beq.w	1ffc6 <hash_extent_data_ref@@Base+0xc46>
   1fb70:	ldr	r2, [r4, #32]
   1fb72:	cmp	r2, #0
   1fb74:	beq.w	1ff90 <hash_extent_data_ref@@Base+0xc10>
   1fb78:	subs	r2, #1
   1fb7a:	ldr	r0, [r4, #0]
   1fb7c:	mov	r1, r7
   1fb7e:	str	r2, [r4, #32]
   1fb80:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1fb84:	ldrd	r2, r3, [sp, #100]	; 0x64
   1fb88:	ldrd	r0, r1, [sp, #56]	; 0x38
   1fb8c:	cmp	r1, r3
   1fb8e:	it	eq
   1fb90:	cmpeq	r0, r2
   1fb92:	bne.w	1ff90 <hash_extent_data_ref@@Base+0xc10>
   1fb96:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fb9a:	cmp	r3, #168	; 0xa8
   1fb9c:	bne.w	1ff90 <hash_extent_data_ref@@Base+0xc10>
   1fba0:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1fba4:	ldr.w	r3, [sp, #113]	; 0x71
   1fba8:	ldr.w	r2, [sp, #109]	; 0x6d
   1fbac:	cmp	r1, r3
   1fbae:	it	eq
   1fbb0:	cmpeq	r0, r2
   1fbb2:	bne.w	1ff90 <hash_extent_data_ref@@Base+0xc10>
   1fbb6:	movs	r5, #0
   1fbb8:	ldr.w	r2, [pc, #1140]	; 20030 <hash_extent_data_ref@@Base+0xcb0>
   1fbbc:	mov.w	r3, #2032	; 0x7f0
   1fbc0:	ldr.w	r1, [pc, #1136]	; 20034 <hash_extent_data_ref@@Base+0xcb4>
   1fbc4:	mov.w	r8, #0
   1fbc8:	ldr.w	r0, [pc, #1132]	; 20038 <hash_extent_data_ref@@Base+0xcb8>
   1fbcc:	add	r2, pc
   1fbce:	adds	r2, #207	; 0xcf
   1fbd0:	add	r1, pc
   1fbd2:	add	r0, pc
   1fbd4:	str	r5, [sp, #0]
   1fbd6:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fbda:	ldr	r7, [r4, #32]
   1fbdc:	ldr	r3, [r4, #0]
   1fbde:	add.w	fp, r3, #96	; 0x60
   1fbe2:	str	r3, [sp, #80]	; 0x50
   1fbe4:	movs	r3, #25
   1fbe6:	mla	r3, r3, r7, fp
   1fbea:	add.w	r2, r3, #101	; 0x65
   1fbee:	ldr.w	r1, [r3, #122]	; 0x7a
   1fbf2:	cmp	r1, #23
   1fbf4:	bhi.n	1fc10 <hash_extent_data_ref@@Base+0x890>
   1fbf6:	ldr.w	r0, [pc, #1092]	; 2003c <hash_extent_data_ref@@Base+0xcbc>
   1fbfa:	movs	r2, #24
   1fbfc:	mvn.w	r5, #116	; 0x74
   1fc00:	add	r0, pc
   1fc02:	bl	17424 <__btrfs_error@@Base>
   1fc06:	b.n	1f91c <hash_extent_data_ref@@Base+0x59c>
   1fc08:	mov.w	r8, #1
   1fc0c:	movs	r5, #0
   1fc0e:	b.n	1fbdc <hash_extent_data_ref@@Base+0x85c>
   1fc10:	ldr.w	r3, [r2, #17]
   1fc14:	adds	r3, #101	; 0x65
   1fc16:	str	r3, [sp, #72]	; 0x48
   1fc18:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fc1c:	cmp	r3, #0
   1fc1e:	it	eq
   1fc20:	cmpeq.w	r2, #256	; 0x100
   1fc24:	bcs.n	1fc84 <hash_extent_data_ref@@Base+0x904>
   1fc26:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fc2a:	cmp	r3, #168	; 0xa8
   1fc2c:	bne.n	1fc84 <hash_extent_data_ref@@Base+0x904>
   1fc2e:	ldr.w	r0, [pc, #1040]	; 20040 <hash_extent_data_ref@@Base+0xcc0>
   1fc32:	cmp	r1, #41	; 0x29
   1fc34:	ldr.w	r2, [pc, #1036]	; 20044 <hash_extent_data_ref@@Base+0xcc4>
   1fc38:	movw	r3, #2063	; 0x80f
   1fc3c:	add	r0, pc
   1fc3e:	ite	hi
   1fc40:	movhi	r1, #0
   1fc42:	movls	r1, #1
   1fc44:	str	r0, [sp, #64]	; 0x40
   1fc46:	str	r1, [sp, #0]
   1fc48:	mov	r1, r0
   1fc4a:	ldr	r0, [pc, #1020]	; (20048 <hash_extent_data_ref@@Base+0xcc8>)
   1fc4c:	add	r2, pc
   1fc4e:	adds	r2, #207	; 0xcf
   1fc50:	str	r2, [sp, #84]	; 0x54
   1fc52:	add	r0, pc
   1fc54:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fc58:	ldr	r3, [sp, #72]	; 0x48
   1fc5a:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1fc5e:	add	r3, fp
   1fc60:	ldrb.w	r2, [r3, #41]	; 0x29
   1fc64:	movs	r3, #0
   1fc66:	cmp	r3, r1
   1fc68:	ldr	r1, [sp, #64]	; 0x40
   1fc6a:	it	eq
   1fc6c:	cmpeq	r2, r0
   1fc6e:	ldr	r0, [pc, #988]	; (2004c <hash_extent_data_ref@@Base+0xccc>)
   1fc70:	ldr	r2, [sp, #84]	; 0x54
   1fc72:	ite	ne
   1fc74:	movne	r3, #1
   1fc76:	moveq	r3, #0
   1fc78:	add	r0, pc
   1fc7a:	str	r3, [sp, #0]
   1fc7c:	movw	r3, #2065	; 0x811
   1fc80:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   1fc84:	ldr	r3, [sp, #72]	; 0x48
   1fc86:	ldr.w	r9, [pc, #968]	; 20050 <hash_extent_data_ref@@Base+0xcd0>
   1fc8a:	add	r3, fp
   1fc8c:	str	r3, [sp, #84]	; 0x54
   1fc8e:	ldr	r3, [sp, #72]	; 0x48
   1fc90:	add	r9, pc
   1fc92:	ldr	r0, [pc, #960]	; (20054 <hash_extent_data_ref@@Base+0xcd4>)
   1fc94:	ldr.w	r3, [fp, r3]
   1fc98:	add	r0, pc
   1fc9a:	str	r3, [sp, #64]	; 0x40
   1fc9c:	ldr	r3, [sp, #84]	; 0x54
   1fc9e:	ldr	r3, [r3, #4]
   1fca0:	str	r3, [sp, #68]	; 0x44
   1fca2:	ldr	r3, [pc, #948]	; (20058 <hash_extent_data_ref@@Base+0xcd8>)
   1fca4:	add	r3, pc
   1fca6:	str	r3, [sp, #88]	; 0x58
   1fca8:	add.w	r2, r3, #207	; 0xcf
   1fcac:	ldrd	r3, r1, [sp, #64]	; 0x40
   1fcb0:	str	r2, [sp, #92]	; 0x5c
   1fcb2:	orrs	r3, r1
   1fcb4:	mov	r1, r9
   1fcb6:	ite	eq
   1fcb8:	moveq	r3, #1
   1fcba:	movne	r3, #0
   1fcbc:	str	r3, [sp, #0]
   1fcbe:	movw	r3, #2069	; 0x815
   1fcc2:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fcc6:	ldr	r3, [sp, #64]	; 0x40
   1fcc8:	adds.w	r1, r3, #4294967295	; 0xffffffff
   1fccc:	ldr	r3, [sp, #68]	; 0x44
   1fcce:	adc.w	ip, r3, #4294967295	; 0xffffffff
   1fcd2:	ldrd	r2, r3, [sp, #64]	; 0x40
   1fcd6:	cmp	r3, #0
   1fcd8:	it	eq
   1fcda:	cmpeq	r2, #1
   1fcdc:	beq.n	1fd40 <hash_extent_data_ref@@Base+0x9c0>
   1fcde:	ldr	r0, [sp, #96]	; 0x60
   1fce0:	cbz	r0, 1fd2c <hash_extent_data_ref@@Base+0x9ac>
   1fce2:	ldr	r0, [pc, #888]	; (2005c <hash_extent_data_ref@@Base+0xcdc>)
   1fce4:	eor.w	r3, r8, #1
   1fce8:	ldr	r2, [sp, #92]	; 0x5c
   1fcea:	mov	r1, r9
   1fcec:	str	r3, [sp, #0]
   1fcee:	add	r0, pc
   1fcf0:	movw	r3, #2078	; 0x81e
   1fcf4:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fcf8:	cmp.w	r8, #0
   1fcfc:	beq.w	1f91c <hash_extent_data_ref@@Base+0x59c>
   1fd00:	ldr	r3, [sp, #76]	; 0x4c
   1fd02:	mov	r2, r4
   1fd04:	mov	r1, sl
   1fd06:	mov	r0, r6
   1fd08:	str	r3, [sp, #0]
   1fd0a:	ldr	r3, [sp, #96]	; 0x60
   1fd0c:	bl	1ec4c <btrfs_create_tree@@Base+0x928>
   1fd10:	ldr	r2, [pc, #844]	; (20060 <hash_extent_data_ref@@Base+0xce0>)
   1fd12:	ldr	r1, [pc, #848]	; (20064 <hash_extent_data_ref@@Base+0xce4>)
   1fd14:	movw	r3, #2087	; 0x827
   1fd18:	add	r2, pc
   1fd1a:	adds	r2, #207	; 0xcf
   1fd1c:	add	r1, pc
   1fd1e:	mov	r5, r0
   1fd20:	str	r0, [sp, #0]
   1fd22:	ldr	r0, [pc, #836]	; (20068 <hash_extent_data_ref@@Base+0xce8>)
   1fd24:	add	r0, pc
   1fd26:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fd2a:	b.n	1f91c <hash_extent_data_ref@@Base+0x59c>
   1fd2c:	ldr	r3, [sp, #72]	; 0x48
   1fd2e:	ldr	r0, [sp, #80]	; 0x50
   1fd30:	str.w	r1, [fp, r3]
   1fd34:	ldr	r3, [sp, #84]	; 0x54
   1fd36:	str.w	ip, [r3, #4]
   1fd3a:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   1fd3e:	b.n	1fcf8 <hash_extent_data_ref@@Base+0x978>
   1fd40:	cmp.w	r8, #0
   1fd44:	beq.w	1ff62 <hash_extent_data_ref@@Base+0xbe2>
   1fd48:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fd4c:	cmp	r3, #0
   1fd4e:	it	eq
   1fd50:	cmpeq.w	r2, #256	; 0x100
   1fd54:	bcc.w	1ff40 <hash_extent_data_ref@@Base+0xbc0>
   1fd58:	ldr.w	fp, [r4]
   1fd5c:	add	r1, sp, #120	; 0x78
   1fd5e:	ldr	r5, [sp, #96]	; 0x60
   1fd60:	ldr	r2, [r4, #32]
   1fd62:	mov	r0, fp
   1fd64:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   1fd68:	add.w	r0, fp, #96	; 0x60
   1fd6c:	cmp	r5, #0
   1fd6e:	beq.w	1fef6 <hash_extent_data_ref@@Base+0xb76>
   1fd72:	ldrb	r3, [r0, r5]
   1fd74:	add	r0, r5
   1fd76:	cmp	r3, #178	; 0xb2
   1fd78:	ite	eq
   1fd7a:	ldreq.w	r3, [r0, #25]
   1fd7e:	ldrne.w	r3, [r0, #9]
   1fd82:	subs	r3, #1
   1fd84:	it	ne
   1fd86:	movne	r3, #1
   1fd88:	ldr	r2, [pc, #736]	; (2006c <hash_extent_data_ref@@Base+0xcec>)
   1fd8a:	ldr	r1, [pc, #740]	; (20070 <hash_extent_data_ref@@Base+0xcf0>)
   1fd8c:	ldr	r0, [pc, #740]	; (20074 <hash_extent_data_ref@@Base+0xcf4>)
   1fd8e:	add	r2, pc
   1fd90:	adds	r2, #207	; 0xcf
   1fd92:	add	r1, pc
   1fd94:	add	r0, pc
   1fd96:	str	r3, [sp, #0]
   1fd98:	movw	r3, #2093	; 0x82d
   1fd9c:	str	r2, [sp, #72]	; 0x48
   1fd9e:	str	r1, [sp, #64]	; 0x40
   1fda0:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fda4:	ldr	r0, [sp, #96]	; 0x60
   1fda6:	ldr	r3, [r4, #32]
   1fda8:	ldr	r1, [sp, #64]	; 0x40
   1fdaa:	ldr	r2, [sp, #72]	; 0x48
   1fdac:	cmp	r0, #0
   1fdae:	beq.w	1ff44 <hash_extent_data_ref@@Base+0xbc4>
   1fdb2:	subs	r7, r7, r3
   1fdb4:	ldr	r0, [pc, #704]	; (20078 <hash_extent_data_ref@@Base+0xcf8>)
   1fdb6:	mov.w	r3, #2096	; 0x830
   1fdba:	it	ne
   1fdbc:	movne	r7, #1
   1fdbe:	add	r0, pc
   1fdc0:	str	r7, [sp, #0]
   1fdc2:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fdc6:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fdca:	cmp	r3, #0
   1fdcc:	it	eq
   1fdce:	cmpeq.w	r2, #256	; 0x100
   1fdd2:	bcs.w	1ff6e <hash_extent_data_ref@@Base+0xbee>
   1fdd6:	ldr	r3, [sp, #192]	; 0xc0
   1fdd8:	ldr	r0, [r6, #0]
   1fdda:	str	r3, [sp, #0]
   1fddc:	ldrd	r2, r3, [sp, #56]	; 0x38
   1fde0:	bl	1c1d0 <btrfs_find_tree_block@@Base>
   1fde4:	mov	r5, r0
   1fde6:	cmp	r0, #0
   1fde8:	beq.w	1ff6e <hash_extent_data_ref@@Base+0xbee>
   1fdec:	movs	r2, #0
   1fdee:	movs	r3, #0
   1fdf0:	bl	1d4bc <btrfs_buffer_uptodate@@Base>
   1fdf4:	cmp	r0, #0
   1fdf6:	beq.w	1ff68 <hash_extent_data_ref@@Base+0xbe8>
   1fdfa:	ldr.w	r3, [r5, #188]	; 0xbc
   1fdfe:	mov.w	r1, #4294967295	; 0xffffffff
   1fe02:	ldr.w	r2, [r5, #184]	; 0xb8
   1fe06:	mvn.w	r0, #5
   1fe0a:	cmp	r3, r1
   1fe0c:	it	eq
   1fe0e:	cmpeq	r2, r0
   1fe10:	beq.w	1ff68 <hash_extent_data_ref@@Base+0xbe8>
   1fe14:	ldrd	r2, r3, [r6, #8]
   1fe18:	ldr.w	r1, [r5, #180]	; 0xb4
   1fe1c:	ldr.w	r0, [r5, #176]	; 0xb0
   1fe20:	cmp	r1, r3
   1fe22:	it	eq
   1fe24:	cmpeq	r0, r2
   1fe26:	bne.w	1ff68 <hash_extent_data_ref@@Base+0xbe8>
   1fe2a:	ldr.w	r1, [r5, #152]	; 0x98
   1fe2e:	movs	r3, #0
   1fe30:	and.w	r2, r1, #1
   1fe34:	orrs	r3, r2
   1fe36:	bne.w	1ff68 <hash_extent_data_ref@@Base+0xbe8>
   1fe3a:	mov	r0, r5
   1fe3c:	mov.w	r9, #1
   1fe40:	bl	1d4b4 <clean_tree_block@@Base>
   1fe44:	mov	r0, r5
   1fe46:	bl	16bc8 <free_extent_buffer@@Base>
   1fe4a:	ldr	r5, [pc, #560]	; (2007c <hash_extent_data_ref@@Base+0xcfc>)
   1fe4c:	movs	r3, #0
   1fe4e:	ldr	r7, [pc, #560]	; (20080 <hash_extent_data_ref@@Base+0xd00>)
   1fe50:	add	r5, pc
   1fe52:	ldr	r0, [pc, #560]	; (20084 <hash_extent_data_ref@@Base+0xd04>)
   1fe54:	adds	r5, #207	; 0xcf
   1fe56:	add	r7, pc
   1fe58:	add	r0, pc
   1fe5a:	str	r3, [sp, #0]
   1fe5c:	mov	r2, r5
   1fe5e:	movw	r3, #2108	; 0x83c
   1fe62:	mov	r1, r7
   1fe64:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fe68:	str.w	r8, [sp]
   1fe6c:	mov	r2, r4
   1fe6e:	ldr	r3, [r4, #32]
   1fe70:	mov	r1, sl
   1fe72:	mov	r0, r6
   1fe74:	bl	1b3a0 <btrfs_del_items@@Base>
   1fe78:	ldr.w	r8, [pc, #524]	; 20088 <hash_extent_data_ref@@Base+0xd08>
   1fe7c:	mov.w	r3, #2112	; 0x840
   1fe80:	mov	r2, r5
   1fe82:	add	r8, pc
   1fe84:	mov	r1, r7
   1fe86:	str	r0, [sp, #0]
   1fe88:	mov	r0, r8
   1fe8a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fe8e:	mov	r0, r4
   1fe90:	bl	17e00 <btrfs_release_path@@Base>
   1fe94:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fe98:	cmp	r3, #0
   1fe9a:	it	eq
   1fe9c:	cmpeq.w	r2, #256	; 0x100
   1fea0:	bcc.n	1fec4 <hash_extent_data_ref@@Base+0xb44>
   1fea2:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1fea6:	mov	r0, r6
   1fea8:	strd	r2, r3, [sp]
   1feac:	ldrd	r2, r3, [sp, #56]	; 0x38
   1feb0:	bl	2e718 <btrfs_del_csums@@Base>
   1feb4:	movw	r3, #2117	; 0x845
   1feb8:	mov	r2, r5
   1feba:	mov	r1, r7
   1febc:	str	r0, [sp, #0]
   1febe:	mov	r0, r8
   1fec0:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1fec4:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1fec8:	mov	r0, r6
   1feca:	strd	r2, r3, [sp]
   1fece:	ldrd	r2, r3, [sp, #56]	; 0x38
   1fed2:	bl	2ca28 <add_to_free_space_tree@@Base>
   1fed6:	mov	r5, r0
   1fed8:	cmp	r0, #0
   1feda:	bne.w	1f91c <hash_extent_data_ref@@Base+0x59c>
   1fede:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1fee2:	strd	r0, r9, [sp, #8]
   1fee6:	ldr	r0, [r6, #0]
   1fee8:	strd	r2, r3, [sp]
   1feec:	ldrd	r2, r3, [sp, #56]	; 0x38
   1fef0:	bl	1efe4 <btrfs_lookup_block_group@@Base+0x188>
   1fef4:	b.n	1f91c <hash_extent_data_ref@@Base+0x59c>
   1fef6:	ldrb.w	r3, [sp, #128]	; 0x80
   1fefa:	cmp	r3, #178	; 0xb2
   1fefc:	bne.n	1ff12 <hash_extent_data_ref@@Base+0xb92>
   1fefe:	ldr	r3, [r4, #32]
   1ff00:	movs	r2, #25
   1ff02:	mla	r3, r2, r3, r0
   1ff06:	ldr.w	r5, [r3, #118]	; 0x76
   1ff0a:	add	r0, r5
   1ff0c:	ldr.w	r3, [r0, #125]	; 0x7d
   1ff10:	b.n	1fd82 <hash_extent_data_ref@@Base+0xa02>
   1ff12:	cmp	r3, #184	; 0xb8
   1ff14:	bne.n	1ff2a <hash_extent_data_ref@@Base+0xbaa>
   1ff16:	ldr	r3, [r4, #32]
   1ff18:	movs	r2, #25
   1ff1a:	mla	r3, r2, r3, r0
   1ff1e:	ldr.w	r5, [r3, #118]	; 0x76
   1ff22:	add	r0, r5
   1ff24:	ldr.w	r3, [r0, #101]	; 0x65
   1ff28:	b.n	1fd82 <hash_extent_data_ref@@Base+0xa02>
   1ff2a:	ldr	r2, [sp, #88]	; 0x58
   1ff2c:	movs	r3, #1
   1ff2e:	ldr	r0, [pc, #348]	; (2008c <hash_extent_data_ref@@Base+0xd0c>)
   1ff30:	mov	r1, r9
   1ff32:	str	r3, [sp, #0]
   1ff34:	adds	r2, #221	; 0xdd
   1ff36:	add	r0, pc
   1ff38:	movw	r3, #777	; 0x309
   1ff3c:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   1ff40:	movs	r3, #0
   1ff42:	b.n	1fd88 <hash_extent_data_ref@@Base+0xa08>
   1ff44:	adds	r0, r7, #1
   1ff46:	mov.w	r8, #2
   1ff4a:	subs	r3, r0, r3
   1ff4c:	ldr	r0, [pc, #320]	; (20090 <hash_extent_data_ref@@Base+0xd10>)
   1ff4e:	it	ne
   1ff50:	movne	r3, #1
   1ff52:	add	r0, pc
   1ff54:	str	r3, [sp, #0]
   1ff56:	movw	r3, #2098	; 0x832
   1ff5a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   1ff5e:	str	r7, [r4, #32]
   1ff60:	b.n	1fdc6 <hash_extent_data_ref@@Base+0xa46>
   1ff62:	mov.w	r8, #1
   1ff66:	b.n	1fdc6 <hash_extent_data_ref@@Base+0xa46>
   1ff68:	mov	r0, r5
   1ff6a:	bl	16bc8 <free_extent_buffer@@Base>
   1ff6e:	movs	r3, #1
   1ff70:	str	r3, [sp, #8]
   1ff72:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1ff76:	mov.w	r9, #0
   1ff7a:	ldr	r0, [r6, #0]
   1ff7c:	strd	r2, r3, [sp]
   1ff80:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ff84:	bl	1eef4 <btrfs_lookup_block_group@@Base+0x98>
   1ff88:	b.n	1fe4a <hash_extent_data_ref@@Base+0xaca>
   1ff8a:	mvn.w	r5, #11
   1ff8e:	b.n	1f922 <hash_extent_data_ref@@Base+0x5a2>
   1ff90:	mov	r0, r4
   1ff92:	bl	17e00 <btrfs_release_path@@Base>
   1ff96:	movs	r3, #168	; 0xa8
   1ff98:	strb.w	r3, [sp, #108]	; 0x6c
   1ff9c:	movs	r2, #1
   1ff9e:	ldr	r3, [sp, #192]	; 0xc0
   1ffa0:	mov	r1, sl
   1ffa2:	mov	r0, r6
   1ffa4:	str.w	r3, [sp, #109]	; 0x6d
   1ffa8:	ldr	r3, [sp, #196]	; 0xc4
   1ffaa:	str.w	r3, [sp, #113]	; 0x71
   1ffae:	mov.w	r3, #4294967295	; 0xffffffff
   1ffb2:	strd	r3, r2, [sp]
   1ffb6:	add	r2, sp, #100	; 0x64
   1ffb8:	mov	r3, r4
   1ffba:	bl	1a1e4 <btrfs_search_slot@@Base>
   1ffbe:	mov	r5, r0
   1ffc0:	cmp	r5, #0
   1ffc2:	beq.w	1fbb6 <hash_extent_data_ref@@Base+0x836>
   1ffc6:	ldr	r2, [sp, #72]	; 0x48
   1ffc8:	movs	r1, #1
   1ffca:	ldr	r3, [pc, #68]	; (20010 <hash_extent_data_ref@@Base+0xc90>)
   1ffcc:	ldr	r0, [r2, r3]
   1ffce:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ffd2:	strd	r2, r3, [sp]
   1ffd6:	mov	r3, r5
   1ffd8:	ldr	r2, [pc, #184]	; (20094 <hash_extent_data_ref@@Base+0xd14>)
   1ffda:	ldr	r0, [r0, #0]
   1ffdc:	add	r2, pc
   1ffde:	blx	8a14 <__fprintf_chk@plt+0x4>
   1ffe2:	ldr	r0, [r4, #0]
   1ffe4:	bl	24fc8 <btrfs_print_leaf@@Base>
   1ffe8:	b.n	1fbb8 <hash_extent_data_ref@@Base+0x838>
   1ffea:	mov	r0, r5
   1ffec:	add	sp, #148	; 0x94
   1ffee:	vpop	{d8}
   1fff2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fff6:	nop
   1fff8:	ldrsb	r2, [r0, r0]
   1fffa:	movs	r4, r0
   1fffc:	strb	r6, [r7, r7]
   1fffe:	movs	r4, r0
   20000:	lsls	r4, r4, #8
   20002:	movs	r0, r0
   20004:	blt.n	1ff46 <hash_extent_data_ref@@Base+0xbc6>
   20006:	movs	r1, r0
   20008:	bgt.n	1ff16 <hash_extent_data_ref@@Base+0xb96>
   2000a:	movs	r1, r0
   2000c:	b.n	205a8 <btrfs_lookup_extent_info@@Base+0x74>
   2000e:	movs	r1, r0
   20010:	lsls	r4, r6, #8
   20012:	movs	r0, r0
   20014:	bgt.n	200ea <btrfs_inc_extent_ref@@Base+0x52>
   20016:	movs	r1, r0
   20018:	bgt.n	1ff7c <hash_extent_data_ref@@Base+0xbfc>
   2001a:	movs	r1, r0
   2001c:	strb	r6, [r3, r1]
   2001e:	movs	r4, r0
   20020:	b.n	20100 <btrfs_inc_extent_ref@@Base+0x68>
   20022:	movs	r1, r0
   20024:	bls.n	2009a <btrfs_inc_extent_ref@@Base+0x2>
   20026:	movs	r1, r0
   20028:	cbz	r3, 2008e <hash_extent_data_ref@@Base+0xd0e>
   2002a:	movs	r1, r0
   2002c:	add	r3, pc, #224	; (adr r3, 20110 <btrfs_inc_extent_ref@@Base+0x78>)
   2002e:	movs	r1, r0
   20030:	svc	22
   20032:	movs	r1, r0
   20034:	bvc.n	1fffa <hash_extent_data_ref@@Base+0xc7a>
   20036:	movs	r1, r0
   20038:	add	r2, pc, #72	; (adr r2, 20084 <hash_extent_data_ref@@Base+0xd04>)
   2003a:	movs	r1, r0
   2003c:	bls.n	20008 <hash_extent_data_ref@@Base+0xc88>
   2003e:	movs	r1, r0
   20040:	bvc.n	2012e <btrfs_inc_extent_ref@@Base+0x96>
   20042:	movs	r1, r0
   20044:	udf	#150	; 0x96
   20046:	movs	r1, r0
   20048:	bls.n	20006 <hash_extent_data_ref@@Base+0xc86>
   2004a:	movs	r1, r0
   2004c:	bls.n	2000a <hash_extent_data_ref@@Base+0xc8a>
   2004e:	movs	r1, r0
   20050:	bvc.n	20096 <hash_extent_data_ref@@Base+0xd16>
   20052:	movs	r1, r0
   20054:	bhi.n	2009e <btrfs_inc_extent_ref@@Base+0x6>
   20056:	movs	r1, r0
   20058:	udf	#62	; 0x3e
   2005a:	movs	r1, r0
   2005c:	bls.n	1ff94 <hash_extent_data_ref@@Base+0xc14>
   2005e:	movs	r1, r0
   20060:	ble.n	1fff8 <hash_extent_data_ref@@Base+0xc78>
   20062:	movs	r1, r0
   20064:	bvs.n	1ff92 <hash_extent_data_ref@@Base+0xc12>
   20066:	movs	r1, r0
   20068:	add	r0, pc, #768	; (adr r0, 2036c <btrfs_inc_extent_ref@@Base+0x2d4>)
   2006a:	movs	r1, r0
   2006c:	ble.n	20118 <btrfs_inc_extent_ref@@Base+0x80>
   2006e:	movs	r1, r0
   20070:	bvs.n	200b2 <btrfs_inc_extent_ref@@Base+0x1a>
   20072:	movs	r1, r0
   20074:	bls.n	2007c <hash_extent_data_ref@@Base+0xcfc>
   20076:	movs	r1, r0
   20078:	bls.n	200a6 <btrfs_inc_extent_ref@@Base+0xe>
   2007a:	movs	r1, r0
   2007c:	bgt.n	1ffa4 <hash_extent_data_ref@@Base+0xc24>
   2007e:	movs	r1, r0
   20080:	bpl.n	2013a <btrfs_inc_extent_ref@@Base+0xa2>
   20082:	movs	r1, r0
   20084:	bhi.n	1fffe <hash_extent_data_ref@@Base+0xc7e>
   20086:	movs	r1, r0
   20088:	ldr	r7, [sp, #392]	; 0x188
   2008a:	movs	r1, r0
   2008c:	bvc.n	20046 <hash_extent_data_ref@@Base+0xcc6>
   2008e:	movs	r1, r0
   20090:	bvc.n	1ffd2 <hash_extent_data_ref@@Base+0xc52>
   20092:	movs	r1, r0
   20094:	bpl.n	2014e <btrfs_inc_extent_ref@@Base+0xb6>
   20096:	movs	r1, r0

00020098 <btrfs_inc_extent_ref@@Base>:
   20098:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2009c:	sub	sp, #100	; 0x64
   2009e:	mov	r6, r0
   200a0:	mov	r7, r1
   200a2:	strd	r2, r3, [sp, #56]	; 0x38
   200a6:	ldr.w	r2, [pc, #1104]	; 204f8 <btrfs_inc_extent_ref@@Base+0x460>
   200aa:	ldr.w	r3, [pc, #1104]	; 204fc <btrfs_inc_extent_ref@@Base+0x464>
   200ae:	add	r2, pc
   200b0:	ldrd	sl, fp, [sp, #144]	; 0x90
   200b4:	ldr	r3, [r2, r3]
   200b6:	ldr	r3, [r3, #0]
   200b8:	str	r3, [sp, #92]	; 0x5c
   200ba:	mov.w	r3, #0
   200be:	bl	17df8 <btrfs_alloc_path@@Base>
   200c2:	mov	r5, r0
   200c4:	cmp	r0, #0
   200c6:	beq.w	204ea <btrfs_inc_extent_ref@@Base+0x452>
   200ca:	mov.w	r8, #1
   200ce:	strb.w	r8, [r0, #64]	; 0x40
   200d2:	ldr.w	r3, [r7, #464]	; 0x1d0
   200d6:	ldr.w	r9, [r3, #24]
   200da:	ldrd	r3, r4, [sp, #168]	; 0xa8
   200de:	str.w	r8, [sp, #48]	; 0x30
   200e2:	mov	r1, r9
   200e4:	strd	sl, fp, [sp, #16]
   200e8:	strd	r3, r4, [sp, #40]	; 0x28
   200ec:	ldrd	r3, r4, [sp, #160]	; 0xa0
   200f0:	strd	r3, r4, [sp, #32]
   200f4:	ldrd	r3, r4, [sp, #152]	; 0x98
   200f8:	strd	r3, r4, [sp, #24]
   200fc:	ldrd	r2, r3, [sp, #136]	; 0x88
   20100:	strd	r2, r3, [sp, #8]
   20104:	mov	r2, r0
   20106:	ldr	r3, [sp, #56]	; 0x38
   20108:	mov	r0, r6
   2010a:	str	r3, [sp, #0]
   2010c:	ldr	r3, [sp, #60]	; 0x3c
   2010e:	str	r3, [sp, #4]
   20110:	add	r3, sp, #72	; 0x48
   20112:	bl	1f3f8 <hash_extent_data_ref@@Base+0x78>
   20116:	mov	r4, r0
   20118:	cmp	r0, #0
   2011a:	bne.w	20258 <btrfs_inc_extent_ref@@Base+0x1c0>
   2011e:	ldrd	r3, r4, [sp, #160]	; 0xa0
   20122:	ldr	r2, [pc, #988]	; (20500 <btrfs_inc_extent_ref@@Base+0x468>)
   20124:	cmp	r4, #0
   20126:	ldr	r1, [pc, #988]	; (20504 <btrfs_inc_extent_ref@@Base+0x46c>)
   20128:	it	eq
   2012a:	cmpeq.w	r3, #256	; 0x100
   2012e:	ldr	r0, [pc, #984]	; (20508 <btrfs_inc_extent_ref@@Base+0x470>)
   20130:	add	r2, pc
   20132:	add	r1, pc
   20134:	ite	cc
   20136:	movcc	r3, r8
   20138:	movcs	r3, #0
   2013a:	adds	r2, #243	; 0xf3
   2013c:	add	r0, pc
   2013e:	str	r3, [sp, #0]
   20140:	mov.w	r3, #1184	; 0x4a0
   20144:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   20148:	ldr	r2, [sp, #72]	; 0x48
   2014a:	mov	r3, r8
   2014c:	mov	r1, r5
   2014e:	mov	r0, r9
   20150:	bl	1e92c <btrfs_create_tree@@Base+0x608>
   20154:	mov	r4, r0
   20156:	cmp	r0, #0
   20158:	beq.w	2033e <btrfs_inc_extent_ref@@Base+0x2a6>
   2015c:	cmn.w	r4, #11
   20160:	bne.w	2033e <btrfs_inc_extent_ref@@Base+0x2a6>
   20164:	ldr	r0, [r5, #0]
   20166:	movs	r2, #25
   20168:	ldr	r3, [r5, #32]
   2016a:	add.w	r4, r0, #96	; 0x60
   2016e:	mla	r3, r2, r3, r4
   20172:	ldr.w	r2, [r3, #118]	; 0x76
   20176:	adds	r2, #101	; 0x65
   20178:	add.w	ip, r4, r2
   2017c:	ldr	r3, [r4, r2]
   2017e:	ldr.w	r1, [ip, #4]
   20182:	adds	r3, #1
   20184:	str	r3, [r4, r2]
   20186:	adc.w	r1, r1, #0
   2018a:	str.w	r1, [ip, #4]
   2018e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   20192:	mov	r0, r5
   20194:	bl	17e00 <btrfs_release_path@@Base>
   20198:	movs	r3, #1
   2019a:	strb.w	r3, [r5, #64]	; 0x40
   2019e:	ldr.w	r3, [r7, #464]	; 0x1d0
   201a2:	ldr	r7, [r3, #24]
   201a4:	ldrd	r3, r4, [sp, #160]	; 0xa0
   201a8:	cmp	r4, #0
   201aa:	add.w	r4, sp, #81	; 0x51
   201ae:	it	eq
   201b0:	cmpeq.w	r3, #256	; 0x100
   201b4:	bcc.w	20484 <btrfs_inc_extent_ref@@Base+0x3ec>
   201b8:	ldr	r3, [sp, #56]	; 0x38
   201ba:	str	r3, [sp, #72]	; 0x48
   201bc:	ldr	r3, [sp, #60]	; 0x3c
   201be:	str	r3, [sp, #76]	; 0x4c
   201c0:	orrs.w	r3, sl, fp
   201c4:	beq.w	203ae <btrfs_inc_extent_ref@@Base+0x316>
   201c8:	mov.w	r8, #4
   201cc:	movs	r3, #184	; 0xb8
   201ce:	str.w	sl, [sp, #81]	; 0x51
   201d2:	strb.w	r3, [sp, #80]	; 0x50
   201d6:	str.w	fp, [r4, #4]
   201da:	movs	r3, #1
   201dc:	mov	r2, r5
   201de:	str	r3, [sp, #4]
   201e0:	mov	r1, r7
   201e2:	add	r3, sp, #68	; 0x44
   201e4:	mov	r0, r6
   201e6:	str	r3, [sp, #0]
   201e8:	add	r3, sp, #72	; 0x48
   201ea:	str.w	r8, [sp, #68]	; 0x44
   201ee:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   201f2:	mov	r4, r0
   201f4:	cbz	r0, 201fe <btrfs_inc_extent_ref@@Base+0x166>
   201f6:	cmn.w	r0, #17
   201fa:	bne.w	203fa <btrfs_inc_extent_ref@@Base+0x362>
   201fe:	orrs.w	r3, sl, fp
   20202:	ldr	r0, [r5, #0]
   20204:	bne.w	203d4 <btrfs_inc_extent_ref@@Base+0x33c>
   20208:	add.w	r9, sp, #72	; 0x48
   2020c:	mov.w	sl, #1
   20210:	ldr	r3, [r5, #32]
   20212:	add.w	r1, r0, #96	; 0x60
   20216:	movs	r2, #25
   20218:	cmn.w	r4, #17
   2021c:	mla	r3, r2, r3, r1
   20220:	ldr.w	r3, [r3, #118]	; 0x76
   20224:	add.w	r3, r3, #101	; 0x65
   20228:	add	r1, r3
   2022a:	beq.w	2040a <btrfs_inc_extent_ref@@Base+0x372>
   2022e:	cmp	r4, #0
   20230:	bne.w	2047c <btrfs_inc_extent_ref@@Base+0x3e4>
   20234:	ldr	r3, [sp, #152]	; 0x98
   20236:	strb	r4, [r1, #25]
   20238:	strb	r4, [r1, #26]
   2023a:	str	r3, [r1, #0]
   2023c:	ldr	r3, [sp, #156]	; 0x9c
   2023e:	strb	r4, [r1, #27]
   20240:	str	r3, [r1, #4]
   20242:	ldr	r3, [sp, #160]	; 0xa0
   20244:	str	r3, [r1, #8]
   20246:	ldr	r3, [sp, #164]	; 0xa4
   20248:	str	r3, [r1, #12]
   2024a:	ldr	r3, [sp, #168]	; 0xa8
   2024c:	str	r3, [r1, #16]
   2024e:	ldr	r3, [sp, #172]	; 0xac
   20250:	str	r3, [r1, #20]
   20252:	movs	r3, #1
   20254:	strb	r3, [r1, #24]
   20256:	b.n	203f4 <btrfs_inc_extent_ref@@Base+0x35c>
   20258:	adds	r1, r0, #2
   2025a:	bne.w	2015c <btrfs_inc_extent_ref@@Base+0xc4>
   2025e:	ldr.w	r8, [r5]
   20262:	movs	r2, #25
   20264:	ldr	r3, [r5, #32]
   20266:	add.w	r6, r8, #96	; 0x60
   2026a:	ldr	r4, [sp, #72]	; 0x48
   2026c:	mla	r3, r2, r3, r6
   20270:	subs	r4, #101	; 0x65
   20272:	ldr.w	r2, [r3, #118]	; 0x76
   20276:	subs	r4, r4, r2
   20278:	ldrd	r2, r3, [sp, #160]	; 0xa0
   2027c:	cmp	r3, #0
   2027e:	it	eq
   20280:	cmpeq.w	r2, #256	; 0x100
   20284:	bcs.n	20374 <btrfs_inc_extent_ref@@Base+0x2dc>
   20286:	orrs.w	r3, sl, fp
   2028a:	ite	ne
   2028c:	movne	r7, #182	; 0xb6
   2028e:	moveq	r7, #176	; 0xb0
   20290:	mov	r0, r7
   20292:	bl	1e8e4 <btrfs_create_tree@@Base+0x5c0>
   20296:	mov	r1, r5
   20298:	mov	r2, r0
   2029a:	str	r0, [sp, #56]	; 0x38
   2029c:	mov	r0, r9
   2029e:	bl	19fd8 <btrfs_extend_item@@Base>
   202a2:	ldr	r2, [pc, #616]	; (2050c <btrfs_inc_extent_ref@@Base+0x474>)
   202a4:	ldr	r1, [pc, #616]	; (20510 <btrfs_inc_extent_ref@@Base+0x478>)
   202a6:	movw	r3, #1044	; 0x414
   202aa:	add	r2, pc
   202ac:	add.w	r2, r2, #272	; 0x110
   202b0:	add	r1, pc
   202b2:	str	r0, [sp, #0]
   202b4:	ldr	r0, [pc, #604]	; (20514 <btrfs_inc_extent_ref@@Base+0x47c>)
   202b6:	add	r0, pc
   202b8:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   202bc:	ldr	r3, [r5, #32]
   202be:	movs	r0, #25
   202c0:	mla	r3, r0, r3, r6
   202c4:	ldr.w	r3, [r3, #118]	; 0x76
   202c8:	adds	r3, #101	; 0x65
   202ca:	add.w	ip, r6, r3
   202ce:	add	r4, r3
   202d0:	ldr	r2, [r6, r3]
   202d2:	ldr.w	r1, [ip, #4]
   202d6:	adds	r2, #1
   202d8:	str	r2, [r6, r3]
   202da:	adc.w	r1, r1, #0
   202de:	str.w	r1, [ip, #4]
   202e2:	ldr	r2, [r5, #32]
   202e4:	mla	r0, r0, r2, r6
   202e8:	ldr.w	r2, [r0, #122]	; 0x7a
   202ec:	add	r3, r2
   202ee:	ldr	r2, [sp, #56]	; 0x38
   202f0:	subs	r3, r3, r2
   202f2:	cmp	r4, r3
   202f4:	bcs.n	20304 <btrfs_inc_extent_ref@@Base+0x26c>
   202f6:	ldr	r1, [sp, #56]	; 0x38
   202f8:	subs	r3, r3, r4
   202fa:	mov	r2, r4
   202fc:	mov	r0, r8
   202fe:	add	r1, r4
   20300:	bl	17334 <memmove_extent_buffer@@Base>
   20304:	cmp	r7, #178	; 0xb2
   20306:	add.w	r3, r6, r4
   2030a:	strb	r7, [r6, r4]
   2030c:	bne.n	20380 <btrfs_inc_extent_ref@@Base+0x2e8>
   2030e:	ldr	r2, [sp, #152]	; 0x98
   20310:	adds	r4, #1
   20312:	adds	r3, r6, r4
   20314:	movs	r1, #1
   20316:	str	r2, [r6, r4]
   20318:	ldr	r2, [sp, #156]	; 0x9c
   2031a:	strb	r1, [r3, #24]
   2031c:	str	r2, [r3, #4]
   2031e:	ldr	r2, [sp, #160]	; 0xa0
   20320:	str	r2, [r3, #8]
   20322:	ldr	r2, [sp, #164]	; 0xa4
   20324:	str	r2, [r3, #12]
   20326:	ldr	r2, [sp, #168]	; 0xa8
   20328:	str	r2, [r3, #16]
   2032a:	ldr	r2, [sp, #172]	; 0xac
   2032c:	str	r2, [r3, #20]
   2032e:	movs	r2, #0
   20330:	strb	r2, [r3, #25]
   20332:	strb	r2, [r3, #26]
   20334:	strb	r2, [r3, #27]
   20336:	mov	r0, r8
   20338:	movs	r4, #0
   2033a:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2033e:	mov	r0, r5
   20340:	bl	17e26 <btrfs_free_path@@Base>
   20344:	ldr	r2, [pc, #464]	; (20518 <btrfs_inc_extent_ref@@Base+0x480>)
   20346:	ldr	r1, [pc, #468]	; (2051c <btrfs_inc_extent_ref@@Base+0x484>)
   20348:	movw	r3, #1282	; 0x502
   2034c:	ldr	r0, [pc, #464]	; (20520 <btrfs_inc_extent_ref@@Base+0x488>)
   2034e:	add	r2, pc
   20350:	add.w	r2, r2, #322	; 0x142
   20354:	add	r1, pc
   20356:	add	r0, pc
   20358:	str	r4, [sp, #0]
   2035a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2035e:	ldr	r2, [pc, #452]	; (20524 <btrfs_inc_extent_ref@@Base+0x48c>)
   20360:	ldr	r3, [pc, #408]	; (204fc <btrfs_inc_extent_ref@@Base+0x464>)
   20362:	add	r2, pc
   20364:	ldr	r3, [r2, r3]
   20366:	ldr	r2, [r3, #0]
   20368:	ldr	r3, [sp, #92]	; 0x5c
   2036a:	eors	r2, r3
   2036c:	beq.w	204f0 <btrfs_inc_extent_ref@@Base+0x458>
   20370:	blx	86b8 <__stack_chk_fail@plt>
   20374:	orrs.w	r3, sl, fp
   20378:	ite	ne
   2037a:	movne	r7, #184	; 0xb8
   2037c:	moveq	r7, #178	; 0xb2
   2037e:	b.n	20290 <btrfs_inc_extent_ref@@Base+0x1f8>
   20380:	cmp	r7, #184	; 0xb8
   20382:	add.w	r2, r3, #1
   20386:	bne.n	2039e <btrfs_inc_extent_ref@@Base+0x306>
   20388:	movs	r1, #0
   2038a:	movs	r0, #1
   2038c:	strb	r1, [r3, #10]
   2038e:	strb	r0, [r3, #9]
   20390:	strb	r1, [r3, #11]
   20392:	strb	r1, [r3, #12]
   20394:	str.w	sl, [r3, #1]
   20398:	str.w	fp, [r2, #4]
   2039c:	b.n	20336 <btrfs_inc_extent_ref@@Base+0x29e>
   2039e:	cmp	r7, #182	; 0xb6
   203a0:	beq.n	20394 <btrfs_inc_extent_ref@@Base+0x2fc>
   203a2:	ldr	r1, [sp, #152]	; 0x98
   203a4:	str.w	r1, [r3, #1]
   203a8:	ldr	r3, [sp, #156]	; 0x9c
   203aa:	str	r3, [r2, #4]
   203ac:	b.n	20336 <btrfs_inc_extent_ref@@Base+0x29e>
   203ae:	movs	r3, #178	; 0xb2
   203b0:	strb.w	r3, [sp, #80]	; 0x50
   203b4:	ldrd	r2, r3, [sp, #168]	; 0xa8
   203b8:	mov.w	r8, #28
   203bc:	ldrd	r0, r1, [sp, #152]	; 0x98
   203c0:	strd	r2, r3, [sp]
   203c4:	ldrd	r2, r3, [sp, #160]	; 0xa0
   203c8:	bl	1f380 <hash_extent_data_ref@@Base>
   203cc:	str.w	r0, [sp, #81]	; 0x51
   203d0:	str	r1, [r4, #4]
   203d2:	b.n	201da <btrfs_inc_extent_ref@@Base+0x142>
   203d4:	ldr	r3, [r5, #32]
   203d6:	add.w	r2, r0, #96	; 0x60
   203da:	movs	r1, #25
   203dc:	mla	r3, r1, r3, r2
   203e0:	ldr.w	r3, [r3, #118]	; 0x76
   203e4:	adds	r3, #101	; 0x65
   203e6:	adds	r1, r2, r3
   203e8:	cbnz	r4, 20402 <btrfs_inc_extent_ref@@Base+0x36a>
   203ea:	movs	r6, #1
   203ec:	strb	r6, [r2, r3]
   203ee:	strb	r4, [r1, #1]
   203f0:	strb	r4, [r1, #2]
   203f2:	strb	r4, [r1, #3]
   203f4:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   203f8:	movs	r4, #0
   203fa:	mov	r0, r5
   203fc:	bl	17e00 <btrfs_release_path@@Base>
   20400:	b.n	2033e <btrfs_inc_extent_ref@@Base+0x2a6>
   20402:	ldr	r1, [r1, #0]
   20404:	adds	r1, #1
   20406:	str	r1, [r2, r3]
   20408:	b.n	203f4 <btrfs_inc_extent_ref@@Base+0x35c>
   2040a:	ldrd	fp, ip, [sp, #152]	; 0x98
   2040e:	ldr	r3, [r1, #4]
   20410:	ldr	r2, [r1, #0]
   20412:	cmp	ip, r3
   20414:	it	eq
   20416:	cmpeq	fp, r2
   20418:	bne.n	2043a <btrfs_inc_extent_ref@@Base+0x3a2>
   2041a:	ldrd	fp, ip, [sp, #160]	; 0xa0
   2041e:	ldr	r3, [r1, #12]
   20420:	ldr	r2, [r1, #8]
   20422:	cmp	ip, r3
   20424:	it	eq
   20426:	cmpeq	fp, r2
   20428:	bne.n	2043a <btrfs_inc_extent_ref@@Base+0x3a2>
   2042a:	ldrd	fp, ip, [sp, #168]	; 0xa8
   2042e:	ldr	r3, [r1, #20]
   20430:	ldr	r2, [r1, #16]
   20432:	cmp	ip, r3
   20434:	it	eq
   20436:	cmpeq	fp, r2
   20438:	beq.n	2047c <btrfs_inc_extent_ref@@Base+0x3e4>
   2043a:	mov	r0, r5
   2043c:	bl	17e00 <btrfs_release_path@@Base>
   20440:	ldr.w	r3, [sp, #81]	; 0x51
   20444:	ldr.w	r2, [sp, #85]	; 0x55
   20448:	mov	r1, r7
   2044a:	adds	r3, #1
   2044c:	mov	r0, r6
   2044e:	adc.w	r2, r2, #0
   20452:	str.w	r3, [sp, #81]	; 0x51
   20456:	str.w	r2, [sp, #85]	; 0x55
   2045a:	add	r3, sp, #68	; 0x44
   2045c:	mov	r2, r5
   2045e:	str	r3, [sp, #0]
   20460:	str.w	sl, [sp, #4]
   20464:	mov	r3, r9
   20466:	str.w	r8, [sp, #68]	; 0x44
   2046a:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2046e:	mov	r4, r0
   20470:	cbz	r0, 20478 <btrfs_inc_extent_ref@@Base+0x3e0>
   20472:	cmn.w	r0, #17
   20476:	bne.n	203fa <btrfs_inc_extent_ref@@Base+0x362>
   20478:	ldr	r0, [r5, #0]
   2047a:	b.n	20210 <btrfs_inc_extent_ref@@Base+0x178>
   2047c:	ldr	r3, [r1, #24]
   2047e:	adds	r3, #1
   20480:	str	r3, [r1, #24]
   20482:	b.n	203f4 <btrfs_inc_extent_ref@@Base+0x35c>
   20484:	ldr	r2, [pc, #160]	; (20528 <btrfs_inc_extent_ref@@Base+0x490>)
   20486:	movs	r3, #0
   20488:	ldr	r1, [pc, #160]	; (2052c <btrfs_inc_extent_ref@@Base+0x494>)
   2048a:	ldr	r0, [pc, #164]	; (20530 <btrfs_inc_extent_ref@@Base+0x498>)
   2048c:	add	r2, pc
   2048e:	str	r3, [sp, #0]
   20490:	add.w	r2, r2, #300	; 0x12c
   20494:	mov.w	r3, #1208	; 0x4b8
   20498:	add	r1, pc
   2049a:	add	r0, pc
   2049c:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   204a0:	ldr	r3, [sp, #56]	; 0x38
   204a2:	str	r3, [sp, #72]	; 0x48
   204a4:	ldr	r3, [sp, #60]	; 0x3c
   204a6:	str	r3, [sp, #76]	; 0x4c
   204a8:	orrs.w	r3, sl, fp
   204ac:	beq.n	204d8 <btrfs_inc_extent_ref@@Base+0x440>
   204ae:	movs	r3, #182	; 0xb6
   204b0:	str.w	sl, [sp, #81]	; 0x51
   204b4:	strb.w	r3, [sp, #80]	; 0x50
   204b8:	str.w	fp, [r4, #4]
   204bc:	movs	r3, #0
   204be:	mov	r2, r5
   204c0:	str	r3, [sp, #68]	; 0x44
   204c2:	mov	r1, r7
   204c4:	movs	r3, #1
   204c6:	mov	r0, r6
   204c8:	str	r3, [sp, #4]
   204ca:	add	r3, sp, #68	; 0x44
   204cc:	str	r3, [sp, #0]
   204ce:	add	r3, sp, #72	; 0x48
   204d0:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   204d4:	mov	r4, r0
   204d6:	b.n	203fa <btrfs_inc_extent_ref@@Base+0x362>
   204d8:	movs	r3, #176	; 0xb0
   204da:	strb.w	r3, [sp, #80]	; 0x50
   204de:	ldr	r3, [sp, #152]	; 0x98
   204e0:	str.w	r3, [sp, #81]	; 0x51
   204e4:	ldr	r3, [sp, #156]	; 0x9c
   204e6:	str	r3, [r4, #4]
   204e8:	b.n	204bc <btrfs_inc_extent_ref@@Base+0x424>
   204ea:	mvn.w	r4, #11
   204ee:	b.n	2035e <btrfs_inc_extent_ref@@Base+0x2c6>
   204f0:	mov	r0, r4
   204f2:	add	sp, #100	; 0x64
   204f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204f8:	ldr	r4, [pc, #872]	; (20864 <btrfs_set_block_flags@@Base+0x180>)
   204fa:	movs	r4, r0
   204fc:	lsls	r4, r4, #8
   204fe:	movs	r0, r0
   20500:	bls.n	20468 <btrfs_inc_extent_ref@@Base+0x3d0>
   20502:	movs	r1, r0
   20504:	bcs.n	20606 <btrfs_lookup_extent_info@@Base+0xd2>
   20506:	movs	r1, r0
   20508:	bpl.n	204ca <btrfs_inc_extent_ref@@Base+0x432>
   2050a:	movs	r1, r0
   2050c:	bhi.n	20580 <btrfs_lookup_extent_info@@Base+0x4c>
   2050e:	movs	r1, r0
   20510:	bne.n	20516 <btrfs_inc_extent_ref@@Base+0x47e>
   20512:	movs	r1, r0
   20514:	ldr	r3, [sp, #184]	; 0xb8
   20516:	movs	r1, r0
   20518:	bvc.n	20444 <btrfs_inc_extent_ref@@Base+0x3ac>
   2051a:	movs	r1, r0
   2051c:	beq.n	205da <btrfs_lookup_extent_info@@Base+0xa6>
   2051e:	movs	r1, r0
   20520:	bcc.n	20514 <btrfs_inc_extent_ref@@Base+0x47c>
   20522:	movs	r1, r0
   20524:	ldr	r2, [pc, #152]	; (205c0 <btrfs_lookup_extent_info@@Base+0x8c>)
   20526:	movs	r4, r0
   20528:	bvs.n	205d8 <btrfs_lookup_extent_info@@Base+0xa4>
   2052a:	movs	r1, r0
   2052c:	ldmia	r7!, {r0, r3, r4}
   2052e:	movs	r1, r0
   20530:	bcs.n	2047a <btrfs_inc_extent_ref@@Base+0x3e2>
   20532:	movs	r1, r0

00020534 <btrfs_lookup_extent_info@@Base>:
   20534:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20538:	mov	r5, r1
   2053a:	vpush	{d8}
   2053e:	vmov	s16, r0
   20542:	sub	sp, #44	; 0x2c
   20544:	strd	r2, r3, [sp, #8]
   20548:	ldr	r2, [pc, #384]	; (206cc <btrfs_lookup_extent_info@@Base+0x198>)
   2054a:	ldr	r3, [pc, #388]	; (206d0 <btrfs_lookup_extent_info@@Base+0x19c>)
   2054c:	add	r2, pc
   2054e:	ldrd	fp, r7, [sp, #96]	; 0x60
   20552:	ldrd	sl, r8, [sp, #88]	; 0x58
   20556:	ldr	r3, [r2, r3]
   20558:	ldr	r6, [sp, #104]	; 0x68
   2055a:	ldr	r3, [r3, #0]
   2055c:	str	r3, [sp, #36]	; 0x24
   2055e:	mov.w	r3, #0
   20562:	cmp.w	fp, #0
   20566:	beq.n	20584 <btrfs_lookup_extent_info@@Base+0x50>
   20568:	ldr.w	r3, [r1, #308]	; 0x134
   2056c:	movs	r1, #0
   2056e:	ldr.w	r0, [r3, #188]	; 0xbc
   20572:	mov	r3, r1
   20574:	and.w	r2, r0, #256	; 0x100
   20578:	orrs	r3, r2
   2057a:	ittt	eq
   2057c:	ldreq.w	sl, [r5, #384]	; 0x180
   20580:	moveq	r8, r1
   20582:	moveq	fp, r8
   20584:	bl	17df8 <btrfs_alloc_path@@Base>
   20588:	mov	r4, r0
   2058a:	cmp	r0, #0
   2058c:	beq.w	206b8 <btrfs_lookup_extent_info@@Base+0x184>
   20590:	movs	r3, #1
   20592:	strb.w	r3, [r0, #64]	; 0x40
   20596:	ldrd	r2, r3, [sp, #8]
   2059a:	cmp.w	fp, #0
   2059e:	str.w	sl, [sp, #25]
   205a2:	add.w	r9, sp, #25
   205a6:	add.w	sl, sp, #16
   205aa:	str.w	r8, [sp, #29]
   205ae:	mov.w	r8, #0
   205b2:	strd	r2, r3, [sp, #16]
   205b6:	ite	eq
   205b8:	moveq	r3, #168	; 0xa8
   205ba:	movne	r3, #169	; 0xa9
   205bc:	strb.w	r3, [sp, #24]
   205c0:	mov	r3, r4
   205c2:	vmov	r0, s16
   205c6:	ldr	r1, [r5, #24]
   205c8:	mov	r2, sl
   205ca:	strd	r8, r8, [sp]
   205ce:	bl	1a1e4 <btrfs_search_slot@@Base>
   205d2:	subs	r3, r0, #0
   205d4:	blt.n	2066a <btrfs_lookup_extent_info@@Base+0x136>
   205d6:	beq.n	2063c <btrfs_lookup_extent_info@@Base+0x108>
   205d8:	cmp.w	fp, #0
   205dc:	beq.n	206ae <btrfs_lookup_extent_info@@Base+0x17a>
   205de:	ldr	r2, [r4, #32]
   205e0:	cbnz	r2, 20602 <btrfs_lookup_extent_info@@Base+0xce>
   205e2:	mov	r0, r4
   205e4:	mov.w	fp, #0
   205e8:	bl	17e00 <btrfs_release_path@@Base>
   205ec:	mvn.w	r3, #87	; 0x57
   205f0:	strb.w	r3, [sp, #24]
   205f4:	ldr.w	r3, [r5, #384]	; 0x180
   205f8:	str.w	r8, [r9, #4]
   205fc:	str.w	r3, [r9]
   20600:	b.n	205c0 <btrfs_lookup_extent_info@@Base+0x8c>
   20602:	subs	r2, #1
   20604:	ldr	r0, [r4, #0]
   20606:	mov	r1, sl
   20608:	str	r2, [r4, #32]
   2060a:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   2060e:	ldrd	r2, r3, [sp, #16]
   20612:	ldrd	r0, r1, [sp, #8]
   20616:	cmp	r3, r1
   20618:	it	eq
   2061a:	cmpeq	r2, r0
   2061c:	bne.n	205e2 <btrfs_lookup_extent_info@@Base+0xae>
   2061e:	ldrb.w	r3, [sp, #24]
   20622:	cmp	r3, #168	; 0xa8
   20624:	bne.n	205e2 <btrfs_lookup_extent_info@@Base+0xae>
   20626:	ldr.w	r1, [sp, #29]
   2062a:	movs	r3, #0
   2062c:	ldr.w	r0, [sp, #25]
   20630:	ldr.w	r2, [r5, #384]	; 0x180
   20634:	cmp	r1, r3
   20636:	it	eq
   20638:	cmpeq	r0, r2
   2063a:	bne.n	205e2 <btrfs_lookup_extent_info@@Base+0xae>
   2063c:	ldr	r3, [r4, #0]
   2063e:	movs	r1, #25
   20640:	ldr	r2, [r4, #32]
   20642:	adds	r3, #96	; 0x60
   20644:	mla	r2, r1, r2, r3
   20648:	add.w	r1, r2, #101	; 0x65
   2064c:	ldr.w	r2, [r2, #122]	; 0x7a
   20650:	cmp	r2, #23
   20652:	bls.n	20688 <btrfs_lookup_extent_info@@Base+0x154>
   20654:	ldr.w	r2, [r1, #17]
   20658:	adds	r2, #101	; 0x65
   2065a:	add	r3, r2
   2065c:	ldr	r1, [r3, #16]
   2065e:	ldr	r2, [r3, #20]
   20660:	cbnz	r7, 206a4 <btrfs_lookup_extent_info@@Base+0x170>
   20662:	cbz	r6, 206b4 <btrfs_lookup_extent_info@@Base+0x180>
   20664:	movs	r3, #0
   20666:	strd	r1, r2, [r6]
   2066a:	mov	r0, r4
   2066c:	str	r3, [sp, #8]
   2066e:	bl	17e26 <btrfs_free_path@@Base>
   20672:	ldr	r3, [sp, #8]
   20674:	ldr	r1, [pc, #92]	; (206d4 <btrfs_lookup_extent_info@@Base+0x1a0>)
   20676:	ldr	r2, [pc, #88]	; (206d0 <btrfs_lookup_extent_info@@Base+0x19c>)
   20678:	add	r1, pc
   2067a:	ldr	r2, [r1, r2]
   2067c:	ldr	r1, [r2, #0]
   2067e:	ldr	r2, [sp, #36]	; 0x24
   20680:	eors	r1, r2
   20682:	beq.n	206be <btrfs_lookup_extent_info@@Base+0x18a>
   20684:	blx	86b8 <__stack_chk_fail@plt>
   20688:	ldr	r2, [pc, #76]	; (206d8 <btrfs_lookup_extent_info@@Base+0x1a4>)
   2068a:	movs	r3, #1
   2068c:	ldr	r1, [pc, #76]	; (206dc <btrfs_lookup_extent_info@@Base+0x1a8>)
   2068e:	ldr	r0, [pc, #80]	; (206e0 <btrfs_lookup_extent_info@@Base+0x1ac>)
   20690:	add	r2, pc
   20692:	str	r3, [sp, #0]
   20694:	addw	r2, r2, #343	; 0x157
   20698:	add	r1, pc
   2069a:	add	r0, pc
   2069c:	mov.w	r3, #1360	; 0x550
   206a0:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   206a4:	ldr	r0, [r3, #0]
   206a6:	ldr	r3, [r3, #4]
   206a8:	strd	r0, r3, [r7]
   206ac:	b.n	20662 <btrfs_lookup_extent_info@@Base+0x12e>
   206ae:	mvn.w	r3, #4
   206b2:	b.n	2066a <btrfs_lookup_extent_info@@Base+0x136>
   206b4:	mov	r3, r6
   206b6:	b.n	2066a <btrfs_lookup_extent_info@@Base+0x136>
   206b8:	mvn.w	r3, #11
   206bc:	b.n	20674 <btrfs_lookup_extent_info@@Base+0x140>
   206be:	mov	r0, r3
   206c0:	add	sp, #44	; 0x2c
   206c2:	vpop	{d8}
   206c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   206ca:	nop
   206cc:	ldr	r0, [pc, #240]	; (207c0 <btrfs_set_block_flags@@Base+0xdc>)
   206ce:	movs	r4, r0
   206d0:	lsls	r4, r4, #8
   206d2:	movs	r0, r0
   206d4:	bx	r2
   206d6:	movs	r4, r0
   206d8:	bmi.n	20780 <btrfs_set_block_flags@@Base+0x9c>
   206da:	movs	r1, r0
   206dc:	ldmia	r5!, {r0, r3, r4}
   206de:	movs	r1, r0
   206e0:	beq.n	207d2 <btrfs_set_block_flags@@Base+0xee>
   206e2:	movs	r1, r0

000206e4 <btrfs_set_block_flags@@Base>:
   206e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206e8:	sub	sp, #52	; 0x34
   206ea:	ldr	r4, [r0, #0]
   206ec:	mov	r5, r0
   206ee:	strd	r2, r3, [sp, #8]
   206f2:	movs	r7, #0
   206f4:	ldr	r3, [sp, #96]	; 0x60
   206f6:	mov	r9, r7
   206f8:	ldr	r2, [pc, #420]	; (208a0 <btrfs_set_block_flags@@Base+0x1bc>)
   206fa:	ldr	r6, [sp, #88]	; 0x58
   206fc:	str	r3, [sp, #16]
   206fe:	add	r2, pc
   20700:	ldr	r3, [sp, #100]	; 0x64
   20702:	ldr.w	fp, [pc, #416]	; 208a4 <btrfs_set_block_flags@@Base+0x1c0>
   20706:	str	r3, [sp, #20]
   20708:	add	fp, pc
   2070a:	ldr	r3, [pc, #412]	; (208a8 <btrfs_set_block_flags@@Base+0x1c4>)
   2070c:	ldr	r3, [r2, r3]
   2070e:	ldr	r3, [r3, #0]
   20710:	str	r3, [sp, #44]	; 0x2c
   20712:	mov.w	r3, #0
   20716:	ldr.w	r3, [r4, #308]	; 0x134
   2071a:	ldr.w	r3, [r3, #188]	; 0xbc
   2071e:	and.w	r8, r3, #256	; 0x100
   20722:	bl	17df8 <btrfs_alloc_path@@Base>
   20726:	mov	sl, r0
   20728:	cmp	r0, #0
   2072a:	beq.w	20890 <btrfs_set_block_flags@@Base+0x1ac>
   2072e:	ldrd	r1, r2, [sp, #8]
   20732:	movs	r3, #1
   20734:	strb.w	r3, [r0, #64]	; 0x40
   20738:	strd	r1, r2, [sp, #24]
   2073c:	orrs.w	r2, r8, r9
   20740:	add.w	r2, sp, #33	; 0x21
   20744:	beq.n	2079e <btrfs_set_block_flags@@Base+0xba>
   20746:	mov	r8, r3
   20748:	asrs	r1, r6, #31
   2074a:	str.w	r6, [sp, #33]	; 0x21
   2074e:	str	r1, [r2, #4]
   20750:	movs	r2, #169	; 0xa9
   20752:	strb.w	r2, [sp, #32]
   20756:	add	r7, sp, #24
   20758:	movs	r6, #0
   2075a:	strd	r6, r6, [sp]
   2075e:	mov	r3, sl
   20760:	ldr	r1, [r4, #24]
   20762:	mov	r2, r7
   20764:	mov	r0, r5
   20766:	bl	1a1e4 <btrfs_search_slot@@Base>
   2076a:	subs.w	r9, r0, #0
   2076e:	blt.n	2081a <btrfs_set_block_flags@@Base+0x136>
   20770:	beq.n	207f0 <btrfs_set_block_flags@@Base+0x10c>
   20772:	cmp.w	r8, #0
   20776:	beq.n	20834 <btrfs_set_block_flags@@Base+0x150>
   20778:	ldr.w	r2, [sl, #32]
   2077c:	cbnz	r2, 207b2 <btrfs_set_block_flags@@Base+0xce>
   2077e:	mov	r0, sl
   20780:	mov.w	r8, #0
   20784:	bl	17e00 <btrfs_release_path@@Base>
   20788:	ldr.w	r3, [r4, #384]	; 0x180
   2078c:	str.w	r6, [sp, #37]	; 0x25
   20790:	str.w	r3, [sp, #33]	; 0x21
   20794:	mvn.w	r3, #87	; 0x57
   20798:	strb.w	r3, [sp, #32]
   2079c:	b.n	2075a <btrfs_set_block_flags@@Base+0x76>
   2079e:	ldr.w	r3, [r4, #384]	; 0x180
   207a2:	mov	r8, r7
   207a4:	str	r7, [r2, #4]
   207a6:	str.w	r3, [sp, #33]	; 0x21
   207aa:	movs	r3, #168	; 0xa8
   207ac:	strb.w	r3, [sp, #32]
   207b0:	b.n	20756 <btrfs_set_block_flags@@Base+0x72>
   207b2:	subs	r2, #1
   207b4:	ldr.w	r0, [sl]
   207b8:	mov	r1, r7
   207ba:	str.w	r2, [sl, #32]
   207be:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   207c2:	ldrd	r2, r3, [sp, #24]
   207c6:	ldrd	r0, r1, [sp, #8]
   207ca:	cmp	r3, r1
   207cc:	it	eq
   207ce:	cmpeq	r2, r0
   207d0:	bne.n	2077e <btrfs_set_block_flags@@Base+0x9a>
   207d2:	ldr.w	r9, [sp, #37]	; 0x25
   207d6:	movs	r3, #0
   207d8:	ldr.w	r8, [sp, #33]	; 0x21
   207dc:	ldr.w	r2, [r4, #384]	; 0x180
   207e0:	cmp	r9, r3
   207e2:	it	eq
   207e4:	cmpeq	r8, r2
   207e6:	bne.n	2077e <btrfs_set_block_flags@@Base+0x9a>
   207e8:	ldrb.w	r3, [sp, #32]
   207ec:	cmp	r3, #168	; 0xa8
   207ee:	bne.n	2077e <btrfs_set_block_flags@@Base+0x9a>
   207f0:	ldr.w	r3, [sl]
   207f4:	movs	r1, #25
   207f6:	ldr.w	r2, [sl, #32]
   207fa:	adds	r3, #96	; 0x60
   207fc:	mla	r2, r1, r2, r3
   20800:	add.w	r0, r2, #101	; 0x65
   20804:	ldr.w	r1, [r2, #122]	; 0x7a
   20808:	cmp	r1, #23
   2080a:	bhi.n	20872 <btrfs_set_block_flags@@Base+0x18e>
   2080c:	ldr	r0, [pc, #156]	; (208ac <btrfs_set_block_flags@@Base+0x1c8>)
   2080e:	movs	r2, #24
   20810:	mvn.w	r9, #116	; 0x74
   20814:	add	r0, pc
   20816:	bl	17424 <__btrfs_error@@Base>
   2081a:	mov	r0, sl
   2081c:	bl	17e26 <btrfs_free_path@@Base>
   20820:	ldr	r2, [pc, #140]	; (208b0 <btrfs_set_block_flags@@Base+0x1cc>)
   20822:	ldr	r3, [pc, #132]	; (208a8 <btrfs_set_block_flags@@Base+0x1c4>)
   20824:	add	r2, pc
   20826:	ldr	r3, [r2, r3]
   20828:	ldr	r2, [r3, #0]
   2082a:	ldr	r3, [sp, #44]	; 0x2c
   2082c:	eors	r2, r3
   2082e:	beq.n	20896 <btrfs_set_block_flags@@Base+0x1b2>
   20830:	blx	86b8 <__stack_chk_fail@plt>
   20834:	ldr.w	r0, [sl]
   20838:	bl	24fc8 <btrfs_print_leaf@@Base>
   2083c:	ldr	r3, [pc, #116]	; (208b4 <btrfs_set_block_flags@@Base+0x1d0>)
   2083e:	ldrd	r1, r2, [sp, #8]
   20842:	ldr.w	r3, [fp, r3]
   20846:	strd	r1, r2, [sp]
   2084a:	movs	r1, #1
   2084c:	ldr	r2, [pc, #104]	; (208b8 <btrfs_set_block_flags@@Base+0x1d4>)
   2084e:	ldr	r0, [r3, #0]
   20850:	add	r2, pc
   20852:	blx	8a14 <__fprintf_chk@plt+0x4>
   20856:	ldr	r2, [pc, #100]	; (208bc <btrfs_set_block_flags@@Base+0x1d8>)
   20858:	ldr	r1, [pc, #100]	; (208c0 <btrfs_set_block_flags@@Base+0x1dc>)
   2085a:	movs	r3, #1
   2085c:	ldr	r0, [pc, #100]	; (208c4 <btrfs_set_block_flags@@Base+0x1e0>)
   2085e:	add	r2, pc
   20860:	str	r3, [sp, #0]
   20862:	add.w	r2, r2, #368	; 0x170
   20866:	add	r1, pc
   20868:	add	r0, pc
   2086a:	movw	r3, #1426	; 0x592
   2086e:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   20872:	ldr.w	r2, [r0, #17]
   20876:	mov.w	r9, #0
   2087a:	ldr	r0, [sp, #16]
   2087c:	adds	r2, #101	; 0x65
   2087e:	add	r3, r2
   20880:	ldr	r1, [r3, #16]
   20882:	ldr	r2, [r3, #20]
   20884:	orrs	r1, r0
   20886:	ldr	r0, [sp, #20]
   20888:	str	r1, [r3, #16]
   2088a:	orrs	r2, r0
   2088c:	str	r2, [r3, #20]
   2088e:	b.n	2081a <btrfs_set_block_flags@@Base+0x136>
   20890:	mvn.w	r9, #11
   20894:	b.n	20820 <btrfs_set_block_flags@@Base+0x13c>
   20896:	mov	r0, r9
   20898:	add	sp, #52	; 0x34
   2089a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2089e:	nop
   208a0:	mov	sl, r1
   208a2:	movs	r4, r0
   208a4:	mov	r8, r0
   208a6:	movs	r4, r0
   208a8:	lsls	r4, r4, #8
   208aa:	movs	r0, r0
   208ac:	ldmia	r5!, {r4, r6, r7}
   208ae:	movs	r1, r0
   208b0:	cmp	r4, ip
   208b2:	movs	r4, r0
   208b4:	lsls	r4, r6, #8
   208b6:	movs	r0, r0
   208b8:	ldmia	r7!, {r1}
   208ba:	movs	r1, r0
   208bc:	bcs.n	207c8 <btrfs_set_block_flags@@Base+0xe4>
   208be:	movs	r1, r0
   208c0:	ldmia	r3, {r0, r1, r3, r6}
   208c2:	movs	r1, r0
   208c4:	ldmia	r6!, {r0, r3, r5, r7}
   208c6:	movs	r1, r0

000208c8 <btrfs_inc_ref@@Base>:
   208c8:	push	{r0, r1, r4, lr}
   208ca:	movs	r4, #1
   208cc:	str	r4, [sp, #0]
   208ce:	bl	1e692 <btrfs_create_tree@@Base+0x36e>
   208d2:	add	sp, #8
   208d4:	pop	{r4, pc}

000208d6 <btrfs_dec_ref@@Base>:
   208d6:	push	{r0, r1, r4, lr}
   208d8:	movs	r4, #0
   208da:	str	r4, [sp, #0]
   208dc:	bl	1e692 <btrfs_create_tree@@Base+0x36e>
   208e0:	add	sp, #8
   208e2:	pop	{r4, pc}

000208e4 <btrfs_write_dirty_block_groups@@Base>:
   208e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208e8:	mov	r8, r0
   208ea:	vpush	{d8}
   208ee:	ldr	r2, [pc, #340]	; (20a44 <btrfs_write_dirty_block_groups@@Base+0x160>)
   208f0:	ldr	r3, [pc, #340]	; (20a48 <btrfs_write_dirty_block_groups@@Base+0x164>)
   208f2:	add	r2, pc
   208f4:	sub	sp, #92	; 0x5c
   208f6:	ldr	r7, [r0, #0]
   208f8:	ldr	r3, [r2, r3]
   208fa:	ldr	r3, [r3, #0]
   208fc:	str	r3, [sp, #84]	; 0x54
   208fe:	mov.w	r3, #0
   20902:	bl	17df8 <btrfs_alloc_path@@Base>
   20906:	mov	r4, r0
   20908:	cmp	r0, #0
   2090a:	beq.w	20a32 <btrfs_write_dirty_block_groups@@Base+0x14e>
   2090e:	movs	r3, #0
   20910:	movs	r2, #0
   20912:	strd	r2, r3, [sp, #16]
   20916:	adds	r7, #128	; 0x80
   20918:	ldr	r3, [pc, #304]	; (20a4c <btrfs_write_dirty_block_groups@@Base+0x168>)
   2091a:	ldr.w	fp, [pc, #308]	; 20a50 <btrfs_write_dirty_block_groups@@Base+0x16c>
   2091e:	add	r3, pc
   20920:	str	r3, [sp, #24]
   20922:	add.w	r3, r3, #390	; 0x186
   20926:	add	fp, pc
   20928:	vmov	s16, r3
   2092c:	add	r3, sp, #40	; 0x28
   2092e:	mov.w	r9, #1
   20932:	str	r3, [sp, #4]
   20934:	mov	r0, r7
   20936:	add	r3, sp, #32
   20938:	str.w	r9, [sp, #8]
   2093c:	str	r3, [sp, #0]
   2093e:	ldrd	r2, r3, [sp, #16]
   20942:	bl	16ac0 <find_first_extent_bit@@Base>
   20946:	mov	r5, r0
   20948:	cbz	r0, 2095c <btrfs_write_dirty_block_groups@@Base+0x78>
   2094a:	ldrd	r2, r3, [sp, #16]
   2094e:	orrs	r3, r2
   20950:	beq.n	20a16 <btrfs_write_dirty_block_groups@@Base+0x132>
   20952:	movs	r2, #0
   20954:	movs	r3, #0
   20956:	strd	r2, r3, [sp, #16]
   2095a:	b.n	2092c <btrfs_write_dirty_block_groups@@Base+0x48>
   2095c:	ldr	r3, [sp, #40]	; 0x28
   2095e:	mov	r0, r7
   20960:	ldr.w	sl, [pc, #240]	; 20a54 <btrfs_write_dirty_block_groups@@Base+0x170>
   20964:	adds	r3, #1
   20966:	str	r3, [sp, #16]
   20968:	ldr	r3, [sp, #44]	; 0x2c
   2096a:	add	sl, pc
   2096c:	adc.w	r3, r3, #0
   20970:	str	r3, [sp, #20]
   20972:	add	r3, sp, #48	; 0x30
   20974:	str	r3, [sp, #0]
   20976:	ldrd	r2, r3, [sp, #32]
   2097a:	bl	16b9c <get_state_private@@Base>
   2097e:	mov	r1, fp
   20980:	vmov	r2, s16
   20984:	mov.w	r3, #1592	; 0x638
   20988:	str	r0, [sp, #0]
   2098a:	mov	r0, sl
   2098c:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   20990:	ldrd	r2, r3, [sp, #40]	; 0x28
   20994:	mov	r0, r7
   20996:	str.w	r9, [sp, #8]
   2099a:	strd	r2, r3, [sp]
   2099e:	ldrd	r2, r3, [sp, #32]
   209a2:	bl	166ee <clear_extent_bits@@Base>
   209a6:	ldr.w	r1, [r8]
   209aa:	ldr	r6, [sp, #48]	; 0x30
   209ac:	mov	r3, r4
   209ae:	strd	r5, r9, [sp]
   209b2:	mov	r0, r8
   209b4:	ldr	r1, [r1, #24]
   209b6:	add.w	r2, r6, #40	; 0x28
   209ba:	bl	1a1e4 <btrfs_search_slot@@Base>
   209be:	cmp	r0, #0
   209c0:	blt.n	2092c <btrfs_write_dirty_block_groups@@Base+0x48>
   209c2:	ldr	r2, [sp, #24]
   209c4:	mov	r1, fp
   209c6:	str	r0, [sp, #0]
   209c8:	movw	r3, #1547	; 0x60b
   209cc:	mov	r0, sl
   209ce:	addw	r2, r2, #421	; 0x1a5
   209d2:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   209d6:	ldr	r0, [r4, #0]
   209d8:	ldr	r3, [r4, #32]
   209da:	movs	r2, #25
   209dc:	add	r1, sp, #60	; 0x3c
   209de:	str	r0, [sp, #28]
   209e0:	mla	r3, r2, r3, r0
   209e4:	ldr.w	r2, [r3, #214]	; 0xd6
   209e8:	ldr	r3, [r6, #72]	; 0x48
   209ea:	adds	r2, #101	; 0x65
   209ec:	str	r3, [sp, #60]	; 0x3c
   209ee:	ldr	r3, [r6, #76]	; 0x4c
   209f0:	str	r3, [sp, #64]	; 0x40
   209f2:	ldr	r3, [r6, #96]	; 0x60
   209f4:	str	r3, [sp, #76]	; 0x4c
   209f6:	ldr	r3, [r6, #100]	; 0x64
   209f8:	str	r3, [sp, #80]	; 0x50
   209fa:	mov.w	r3, #256	; 0x100
   209fe:	strd	r3, r5, [sp, #68]	; 0x44
   20a02:	movs	r3, #24
   20a04:	bl	172d8 <write_extent_buffer@@Base>
   20a08:	ldr	r0, [sp, #28]
   20a0a:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   20a0e:	mov	r0, r4
   20a10:	bl	17e00 <btrfs_release_path@@Base>
   20a14:	b.n	2092c <btrfs_write_dirty_block_groups@@Base+0x48>
   20a16:	mov	r0, r4
   20a18:	bl	17e26 <btrfs_free_path@@Base>
   20a1c:	movs	r0, #0
   20a1e:	ldr	r2, [pc, #56]	; (20a58 <btrfs_write_dirty_block_groups@@Base+0x174>)
   20a20:	ldr	r3, [pc, #36]	; (20a48 <btrfs_write_dirty_block_groups@@Base+0x164>)
   20a22:	add	r2, pc
   20a24:	ldr	r3, [r2, r3]
   20a26:	ldr	r2, [r3, #0]
   20a28:	ldr	r3, [sp, #84]	; 0x54
   20a2a:	eors	r2, r3
   20a2c:	beq.n	20a38 <btrfs_write_dirty_block_groups@@Base+0x154>
   20a2e:	blx	86b8 <__stack_chk_fail@plt>
   20a32:	mvn.w	r0, #11
   20a36:	b.n	20a1e <btrfs_write_dirty_block_groups@@Base+0x13a>
   20a38:	add	sp, #92	; 0x5c
   20a3a:	vpop	{d8}
   20a3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a42:	nop
   20a44:	add	lr, r2
   20a46:	movs	r4, r0
   20a48:	lsls	r4, r4, #8
   20a4a:	movs	r0, r0
   20a4c:	bne.n	209d8 <btrfs_write_dirty_block_groups@@Base+0xf4>
   20a4e:	movs	r1, r0
   20a50:	ldmia	r2!, {r0, r1, r3, r7}
   20a52:	movs	r1, r0
   20a54:	str	r4, [sp, #488]	; 0x1e8
   20a56:	movs	r1, r0
   20a58:	muls	r6, r4
   20a5a:	movs	r4, r0

00020a5c <update_space_info@@Base>:
   20a5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a60:	sub	sp, #36	; 0x24
   20a62:	mov	r5, r0
   20a64:	mov	r4, r2
   20a66:	ldr	r1, [sp, #80]	; 0x50
   20a68:	ldrd	r7, fp, [sp, #72]	; 0x48
   20a6c:	ldr.w	sl, [sp, #84]	; 0x54
   20a70:	str	r1, [sp, #24]
   20a72:	ldr	r1, [pc, #176]	; (20b24 <update_space_info@@Base+0xc8>)
   20a74:	add	r1, pc
   20a76:	str	r1, [sp, #28]
   20a78:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   20a7c:	mov	r6, r0
   20a7e:	cbz	r0, 20ada <update_space_info@@Base+0x7e>
   20a80:	ldrd	r2, r0, [r0, #8]
   20a84:	ldr	r1, [sp, #28]
   20a86:	adds	r3, r7, r2
   20a88:	str	r3, [sp, #16]
   20a8a:	adc.w	r3, fp, r0
   20a8e:	str	r3, [sp, #20]
   20a90:	ldrd	r3, r4, [sp, #16]
   20a94:	ldrd	r2, r0, [r6, #16]
   20a98:	strd	r3, r4, [r6, #8]
   20a9c:	ldr	r3, [sp, #24]
   20a9e:	adds.w	r8, r3, r2
   20aa2:	ldrd	r3, r4, [sp, #16]
   20aa6:	adc.w	r9, sl, r0
   20aaa:	strd	r8, r9, [r6, #16]
   20aae:	cmp	r4, r9
   20ab0:	it	eq
   20ab2:	cmpeq	r3, r8
   20ab4:	bcs.n	20ace <update_space_info@@Base+0x72>
   20ab6:	ldr	r2, [pc, #112]	; (20b28 <update_space_info@@Base+0xcc>)
   20ab8:	ldr	r0, [r1, r2]
   20aba:	movs	r1, #1
   20abc:	ldr	r2, [pc, #108]	; (20b2c <update_space_info@@Base+0xd0>)
   20abe:	strd	r8, r9, [sp, #8]
   20ac2:	strd	r3, r4, [sp]
   20ac6:	add	r2, pc
   20ac8:	ldr	r0, [r0, #0]
   20aca:	blx	8a14 <__fprintf_chk@plt+0x4>
   20ace:	ldr	r3, [sp, #88]	; 0x58
   20ad0:	str	r6, [r3, #0]
   20ad2:	movs	r0, #0
   20ad4:	add	sp, #36	; 0x24
   20ad6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ada:	movs	r0, #56	; 0x38
   20adc:	blx	8820 <malloc@plt+0x4>
   20ae0:	cbz	r0, 20b1e <update_space_info@@Base+0xc2>
   20ae2:	ldr.w	r1, [r5, #356]	; 0x164
   20ae6:	add.w	r2, r0, #44	; 0x2c
   20aea:	ldr	r3, [sp, #24]
   20aec:	and.w	r4, r4, #7
   20af0:	str	r2, [r1, #4]
   20af2:	strd	r3, sl, [r0, #16]
   20af6:	ldr	r3, [sp, #88]	; 0x58
   20af8:	str.w	r2, [r5, #356]	; 0x164
   20afc:	str	r1, [r0, #44]	; 0x2c
   20afe:	add.w	r1, r5, #356	; 0x164
   20b02:	strd	r4, r6, [r0]
   20b06:	movs	r5, #0
   20b08:	movs	r4, #0
   20b0a:	str	r1, [r0, #48]	; 0x30
   20b0c:	strd	r7, fp, [r0, #8]
   20b10:	strd	r4, r5, [r0, #24]
   20b14:	strd	r4, r5, [r0, #32]
   20b18:	str	r6, [r0, #40]	; 0x28
   20b1a:	str	r0, [r3, #0]
   20b1c:	b.n	20ad2 <update_space_info@@Base+0x76>
   20b1e:	mvn.w	r0, #11
   20b22:	b.n	20ad4 <update_space_info@@Base+0x78>
   20b24:	orrs	r4, r2
   20b26:	movs	r4, r0
   20b28:	lsls	r4, r6, #8
   20b2a:	movs	r0, r0
   20b2c:	ldmia	r4!, {r0, r2, r3, r5, r7}
   20b2e:	movs	r1, r0

00020b30 <btrfs_finish_extent_commit@@Base>:
   20b30:	ldr	r2, [pc, #156]	; (20bd0 <btrfs_finish_extent_commit@@Base+0xa0>)
   20b32:	ldr	r3, [pc, #160]	; (20bd4 <btrfs_finish_extent_commit@@Base+0xa4>)
   20b34:	add	r2, pc
   20b36:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20b3a:	sub	sp, #44	; 0x2c
   20b3c:	ldr	r4, [r0, #0]
   20b3e:	add	r7, sp, #24
   20b40:	ldr	r3, [r2, r3]
   20b42:	add.w	r8, sp, #16
   20b46:	add.w	r5, r4, #96	; 0x60
   20b4a:	adds	r4, #160	; 0xa0
   20b4c:	ldr	r3, [r3, #0]
   20b4e:	str	r3, [sp, #36]	; 0x24
   20b50:	mov.w	r3, #0
   20b54:	mov	r9, r0
   20b56:	movs	r6, #1
   20b58:	movs	r2, #0
   20b5a:	movs	r3, #0
   20b5c:	mov	r0, r4
   20b5e:	strd	r7, r6, [sp, #4]
   20b62:	str.w	r8, [sp]
   20b66:	bl	16ac0 <find_first_extent_bit@@Base>
   20b6a:	cbnz	r0, 20bb4 <btrfs_finish_extent_commit@@Base+0x84>
   20b6c:	ldr	r1, [sp, #24]
   20b6e:	ldrd	r2, r3, [sp, #16]
   20b72:	str	r0, [sp, #8]
   20b74:	adds	r1, #1
   20b76:	ldr	r0, [sp, #28]
   20b78:	adc.w	r0, r0, #0
   20b7c:	subs	r1, r1, r2
   20b7e:	sbc.w	r0, r0, r3
   20b82:	strd	r1, r0, [sp]
   20b86:	ldr.w	r0, [r9]
   20b8a:	bl	1eef4 <btrfs_lookup_block_group@@Base+0x98>
   20b8e:	ldrd	r2, r3, [sp, #24]
   20b92:	mov	r0, r4
   20b94:	strd	r2, r3, [sp]
   20b98:	ldrd	r2, r3, [sp, #16]
   20b9c:	bl	16aa8 <clear_extent_dirty@@Base>
   20ba0:	ldrd	r2, r3, [sp, #24]
   20ba4:	mov	r0, r5
   20ba6:	strd	r2, r3, [sp]
   20baa:	ldrd	r2, r3, [sp, #16]
   20bae:	bl	16a90 <set_extent_dirty@@Base>
   20bb2:	b.n	20b58 <btrfs_finish_extent_commit@@Base+0x28>
   20bb4:	ldr	r2, [pc, #32]	; (20bd8 <btrfs_finish_extent_commit@@Base+0xa8>)
   20bb6:	ldr	r3, [pc, #28]	; (20bd4 <btrfs_finish_extent_commit@@Base+0xa4>)
   20bb8:	add	r2, pc
   20bba:	ldr	r3, [r2, r3]
   20bbc:	ldr	r2, [r3, #0]
   20bbe:	ldr	r3, [sp, #36]	; 0x24
   20bc0:	eors	r2, r3
   20bc2:	beq.n	20bc8 <btrfs_finish_extent_commit@@Base+0x98>
   20bc4:	blx	86b8 <__stack_chk_fail@plt>
   20bc8:	add	sp, #44	; 0x2c
   20bca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20bce:	nop
   20bd0:	negs	r4, r2
   20bd2:	movs	r4, r0
   20bd4:	lsls	r4, r4, #8
   20bd6:	movs	r0, r0
   20bd8:	rors	r0, r2
   20bda:	movs	r4, r0

00020bdc <btrfs_pin_extent@@Base>:
   20bdc:	push	{r4, r5, lr}
   20bde:	sub	sp, #20
   20be0:	movs	r1, #1
   20be2:	ldrd	r4, r5, [sp, #32]
   20be6:	str	r1, [sp, #8]
   20be8:	strd	r4, r5, [sp]
   20bec:	bl	1eef4 <btrfs_lookup_block_group@@Base+0x98>
   20bf0:	add	sp, #20
   20bf2:	pop	{r4, r5, pc}

00020bf4 <btrfs_free_extent@@Base>:
   20bf4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bf8:	sub	sp, #84	; 0x54
   20bfa:	mov	r6, r2
   20bfc:	mov	r5, r3
   20bfe:	ldrd	r2, r3, [sp, #128]	; 0x80
   20c02:	mov	r4, r0
   20c04:	mov	r0, r1
   20c06:	ldrd	r8, r9, [sp, #120]	; 0x78
   20c0a:	mov.w	ip, #0
   20c0e:	ldr	r1, [pc, #296]	; (20d38 <btrfs_free_extent@@Base+0x144>)
   20c10:	strd	r2, r3, [sp, #64]	; 0x40
   20c14:	cmp	r9, ip
   20c16:	ldrd	r2, r3, [sp, #136]	; 0x88
   20c1a:	add	r1, pc
   20c1c:	ldrd	r7, sl, [sp, #152]	; 0x98
   20c20:	mvn.w	fp, #5
   20c24:	strd	r2, r3, [sp, #56]	; 0x38
   20c28:	ldrd	r2, r3, [sp, #144]	; 0x90
   20c2c:	strd	r2, r3, [sp, #48]	; 0x30
   20c30:	ldr.w	r3, [r0, #464]	; 0x1d0
   20c34:	ldr	r2, [pc, #260]	; (20d3c <btrfs_free_extent@@Base+0x148>)
   20c36:	ldr	r0, [pc, #264]	; (20d40 <btrfs_free_extent@@Base+0x14c>)
   20c38:	ldr.w	r3, [r3, #388]	; 0x184
   20c3c:	add	r2, pc
   20c3e:	addw	r2, r2, #443	; 0x1bb
   20c42:	add	r0, pc
   20c44:	it	eq
   20c46:	cmpeq	r8, r3
   20c48:	strd	r1, r2, [sp, #72]	; 0x48
   20c4c:	ite	cc
   20c4e:	movcc	r3, #1
   20c50:	movcs	r3, #0
   20c52:	str	r3, [sp, #0]
   20c54:	movw	r3, #2154	; 0x86a
   20c58:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   20c5c:	ldrd	r2, r3, [sp, #56]	; 0x38
   20c60:	mov.w	ip, #4294967295	; 0xffffffff
   20c64:	cmp	r3, ip
   20c66:	it	eq
   20c68:	cmpeq	r2, fp
   20c6a:	ldrd	r1, r2, [sp, #72]	; 0x48
   20c6e:	bne.n	20cb6 <btrfs_free_extent@@Base+0xc2>
   20c70:	ldr	r0, [pc, #208]	; (20d44 <btrfs_free_extent@@Base+0x150>)
   20c72:	str	r1, [sp, #64]	; 0x40
   20c74:	add	r0, pc
   20c76:	str	r2, [sp, #56]	; 0x38
   20c78:	blx	8804 <puts@plt+0x4>
   20c7c:	ldrd	r2, r3, [sp, #48]	; 0x30
   20c80:	ldr	r0, [pc, #196]	; (20d48 <btrfs_free_extent@@Base+0x154>)
   20c82:	cmp	r3, #0
   20c84:	ldr	r1, [sp, #64]	; 0x40
   20c86:	it	eq
   20c88:	cmpeq.w	r2, #256	; 0x100
   20c8c:	add	r0, pc
   20c8e:	ldr	r2, [sp, #56]	; 0x38
   20c90:	ite	cs
   20c92:	movcs	r3, #1
   20c94:	movcc	r3, #0
   20c96:	str	r3, [sp, #0]
   20c98:	movw	r3, #2161	; 0x871
   20c9c:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   20ca0:	ldr	r0, [r4, #0]
   20ca2:	mov	r2, r6
   20ca4:	mov	r3, r5
   20ca6:	strd	r8, r9, [sp]
   20caa:	bl	20bdc <btrfs_pin_extent@@Base>
   20cae:	movs	r0, #0
   20cb0:	add	sp, #84	; 0x54
   20cb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20cb6:	ldrd	fp, ip, [sp, #48]	; 0x30
   20cba:	cmp.w	ip, #0
   20cbe:	it	eq
   20cc0:	cmpeq.w	fp, #256	; 0x100
   20cc4:	bcs.n	20d06 <btrfs_free_extent@@Base+0x112>
   20cc6:	ldr	r0, [pc, #132]	; (20d4c <btrfs_free_extent@@Base+0x158>)
   20cc8:	movw	r3, #2165	; 0x875
   20ccc:	str	r7, [sp, #0]
   20cce:	add	r0, pc
   20cd0:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   20cd4:	movs	r3, #0
   20cd6:	strd	r3, r3, [sp, #36]	; 0x24
   20cda:	mov	r1, r4
   20cdc:	str	r3, [sp, #32]
   20cde:	movs	r3, #2
   20ce0:	str	r3, [sp, #28]
   20ce2:	ldr	r3, [sp, #48]	; 0x30
   20ce4:	ldr	r0, [r4, #0]
   20ce6:	strd	r8, r9, [sp]
   20cea:	str	r3, [sp, #24]
   20cec:	ldrd	r2, r3, [sp, #56]	; 0x38
   20cf0:	strd	r2, r3, [sp, #16]
   20cf4:	ldrd	r2, r3, [sp, #64]	; 0x40
   20cf8:	strd	r2, r3, [sp, #8]
   20cfc:	mov	r2, r6
   20cfe:	mov	r3, r5
   20d00:	bl	23e9c <btrfs_add_delayed_tree_ref@@Base>
   20d04:	b.n	20cb0 <btrfs_free_extent@@Base+0xbc>
   20d06:	ldrd	r2, r3, [sp, #48]	; 0x30
   20d0a:	mov	r0, r4
   20d0c:	strd	r7, sl, [sp, #152]	; 0x98
   20d10:	strd	r8, r9, [sp, #120]	; 0x78
   20d14:	strd	r2, r3, [sp, #144]	; 0x90
   20d18:	ldrd	r2, r3, [sp, #56]	; 0x38
   20d1c:	strd	r2, r3, [sp, #136]	; 0x88
   20d20:	ldrd	r2, r3, [sp, #64]	; 0x40
   20d24:	strd	r2, r3, [sp, #128]	; 0x80
   20d28:	mov	r2, r6
   20d2a:	mov	r3, r5
   20d2c:	add	sp, #84	; 0x54
   20d2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d32:	b.w	1f774 <hash_extent_data_ref@@Base+0x3f4>
   20d36:	nop
   20d38:	stmia	r7!, {r0, r1, r2, r4, r7}
   20d3a:	movs	r1, r0
   20d3c:	ldmia	r6!, {r1, r2, r5, r7}
   20d3e:	movs	r1, r0
   20d40:	ldmia	r3!, {r0, r2, r5, r6}
   20d42:	movs	r1, r0
   20d44:	ldmia	r3, {r0, r3, r4, r6}
   20d46:	movs	r1, r0
   20d48:	ldmia	r3, {r0, r2, r3, r4, r6}
   20d4a:	movs	r1, r0
   20d4c:	b.n	20a96 <update_space_info@@Base+0x3a>
   20d4e:	movs	r1, r0

00020d50 <btrfs_unpin_extent@@Base>:
   20d50:	push	{r4, r5, lr}
   20d52:	sub	sp, #20
   20d54:	movs	r1, #0
   20d56:	ldrd	r4, r5, [sp, #32]
   20d5a:	str	r1, [sp, #8]
   20d5c:	strd	r4, r5, [sp]
   20d60:	bl	1eef4 <btrfs_lookup_block_group@@Base+0x98>
   20d64:	add	sp, #20
   20d66:	pop	{r4, r5, pc}

00020d68 <btrfs_free_tree_block@@Base>:
   20d68:	push	{r4, r5, lr}
   20d6a:	sub	sp, #44	; 0x2c
   20d6c:	movs	r4, #0
   20d6e:	movs	r5, #0
   20d70:	strd	r4, r5, [sp, #32]
   20d74:	movs	r5, #0
   20d76:	ldrb.w	r4, [r2, #196]	; 0xc4
   20d7a:	ldr.w	r3, [r1, #451]	; 0x1c3
   20d7e:	strd	r4, r5, [sp, #24]
   20d82:	ldr.w	r4, [r1, #447]	; 0x1bf
   20d86:	strd	r4, r3, [sp, #16]
   20d8a:	ldrd	r4, r5, [sp, #56]	; 0x38
   20d8e:	strd	r4, r5, [sp, #8]
   20d92:	ldr	r3, [r2, #76]	; 0x4c
   20d94:	str	r3, [sp, #0]
   20d96:	movs	r3, #0
   20d98:	str	r3, [sp, #4]
   20d9a:	ldrd	r2, r3, [r2, #40]	; 0x28
   20d9e:	bl	20bf4 <btrfs_free_extent@@Base>
   20da2:	add	sp, #44	; 0x2c
   20da4:	pop	{r4, r5, pc}

00020da6 <btrfs_free_block_groups@@Base>:
   20da6:	ldr	r2, [pc, #260]	; (20eac <btrfs_free_block_groups@@Base+0x106>)
   20da8:	ldr	r3, [pc, #260]	; (20eb0 <btrfs_free_block_groups@@Base+0x10a>)
   20daa:	add	r2, pc
   20dac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20db0:	sub	sp, #52	; 0x34
   20db2:	ldr	r3, [r2, r3]
   20db4:	add.w	r6, r0, #128	; 0x80
   20db8:	add	r7, sp, #24
   20dba:	mov	r4, r0
   20dbc:	ldr	r3, [r3, #0]
   20dbe:	str	r3, [sp, #44]	; 0x2c
   20dc0:	mov.w	r3, #0
   20dc4:	mov.w	r9, #4294967295	; 0xffffffff
   20dc8:	add.w	r8, sp, #16
   20dcc:	movs	r2, #0
   20dce:	movs	r3, #0
   20dd0:	mov	r0, r6
   20dd2:	strd	r7, r9, [sp, #4]
   20dd6:	str.w	r8, [sp]
   20dda:	bl	16ac0 <find_first_extent_bit@@Base>
   20dde:	cbz	r0, 20e1e <btrfs_free_block_groups@@Base+0x78>
   20de0:	add.w	r5, r4, #96	; 0x60
   20de4:	movs	r6, #1
   20de6:	movs	r2, #0
   20de8:	movs	r3, #0
   20dea:	mov	r0, r5
   20dec:	strd	r7, r6, [sp, #4]
   20df0:	str.w	r8, [sp]
   20df4:	bl	16ac0 <find_first_extent_bit@@Base>
   20df8:	cbz	r0, 20e5e <btrfs_free_block_groups@@Base+0xb8>
   20dfa:	ldr	r6, [pc, #184]	; (20eb4 <btrfs_free_block_groups@@Base+0x10e>)
   20dfc:	add.w	r5, r4, #356	; 0x164
   20e00:	add	r6, pc
   20e02:	ldr.w	r3, [r4, #356]	; 0x164
   20e06:	cmp	r3, r5
   20e08:	bne.n	20e72 <btrfs_free_block_groups@@Base+0xcc>
   20e0a:	ldr	r2, [pc, #172]	; (20eb8 <btrfs_free_block_groups@@Base+0x112>)
   20e0c:	ldr	r3, [pc, #160]	; (20eb0 <btrfs_free_block_groups@@Base+0x10a>)
   20e0e:	add	r2, pc
   20e10:	ldr	r3, [r2, r3]
   20e12:	ldr	r2, [r3, #0]
   20e14:	ldr	r3, [sp, #44]	; 0x2c
   20e16:	eors	r2, r3
   20e18:	beq.n	20ea2 <btrfs_free_block_groups@@Base+0xfc>
   20e1a:	blx	86b8 <__stack_chk_fail@plt>
   20e1e:	add	r3, sp, #32
   20e20:	mov	r0, r6
   20e22:	str	r3, [sp, #0]
   20e24:	ldrd	r2, r3, [sp, #16]
   20e28:	bl	16b9c <get_state_private@@Base>
   20e2c:	cbnz	r0, 20e46 <btrfs_free_block_groups@@Base+0xa0>
   20e2e:	ldr	r5, [sp, #32]
   20e30:	ldr	r3, [r5, #64]	; 0x40
   20e32:	cbz	r3, 20e40 <btrfs_free_block_groups@@Base+0x9a>
   20e34:	mov	r0, r5
   20e36:	bl	26bbc <btrfs_remove_free_space_cache@@Base>
   20e3a:	ldr	r0, [r5, #64]	; 0x40
   20e3c:	blx	85dc <free@plt+0x4>
   20e40:	mov	r0, r5
   20e42:	blx	85dc <free@plt+0x4>
   20e46:	ldrd	r2, r3, [sp, #24]
   20e4a:	mov	r0, r6
   20e4c:	str.w	r9, [sp, #8]
   20e50:	strd	r2, r3, [sp]
   20e54:	ldrd	r2, r3, [sp, #16]
   20e58:	bl	166ee <clear_extent_bits@@Base>
   20e5c:	b.n	20dc8 <btrfs_free_block_groups@@Base+0x22>
   20e5e:	ldrd	r2, r3, [sp, #24]
   20e62:	mov	r0, r5
   20e64:	strd	r2, r3, [sp]
   20e68:	ldrd	r2, r3, [sp, #16]
   20e6c:	bl	16aa8 <clear_extent_dirty@@Base>
   20e70:	b.n	20de6 <btrfs_free_block_groups@@Base+0x40>
   20e72:	ldrd	r1, r2, [r3]
   20e76:	sub.w	r7, r3, #44	; 0x2c
   20e7a:	str	r2, [r1, #4]
   20e7c:	str	r1, [r2, #0]
   20e7e:	ldrd	r0, r1, [r3, #-12]
   20e82:	strd	r3, r3, [r3]
   20e86:	orrs.w	r2, r0, r1
   20e8a:	beq.n	20e9a <btrfs_free_block_groups@@Base+0xf4>
   20e8c:	strd	r0, r1, [sp]
   20e90:	mov	r0, r6
   20e92:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   20e96:	bl	173a8 <__btrfs_warning@@Base>
   20e9a:	mov	r0, r7
   20e9c:	blx	85dc <free@plt+0x4>
   20ea0:	b.n	20e02 <btrfs_free_block_groups@@Base+0x5c>
   20ea2:	movs	r0, #0
   20ea4:	add	sp, #52	; 0x34
   20ea6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20eaa:	nop
   20eac:	subs	r7, #222	; 0xde
   20eae:	movs	r4, r0
   20eb0:	lsls	r4, r4, #8
   20eb2:	movs	r0, r0
   20eb4:	ldmia	r2, {r2, r3}
   20eb6:	movs	r1, r0
   20eb8:	subs	r7, #122	; 0x7a
   20eba:	movs	r4, r0

00020ebc <btrfs_make_block_groups@@Base>:
   20ebc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ec0:	mov	r7, r1
   20ec2:	vpush	{d8-d9}
   20ec6:	movs	r6, #0
   20ec8:	ldr	r2, [pc, #768]	; (211cc <btrfs_make_block_groups@@Base+0x310>)
   20eca:	mov	r8, r6
   20ecc:	ldr	r3, [pc, #768]	; (211d0 <btrfs_make_block_groups@@Base+0x314>)
   20ece:	mov	r9, r6
   20ed0:	add	r2, pc
   20ed2:	vmov	s19, r0
   20ed6:	sub	sp, #124	; 0x7c
   20ed8:	ldr	r3, [r2, r3]
   20eda:	ldr	r3, [r3, #0]
   20edc:	str	r3, [sp, #116]	; 0x74
   20ede:	mov.w	r3, #0
   20ee2:	ldr	r3, [r1, #24]
   20ee4:	vmov	s18, r3
   20ee8:	add.w	r3, r1, #128	; 0x80
   20eec:	vmov	s16, r3
   20ef0:	ldr.w	r3, [r1, #308]	; 0x134
   20ef4:	ldr	r2, [r3, #112]	; 0x70
   20ef6:	str	r2, [sp, #40]	; 0x28
   20ef8:	movs	r2, #0
   20efa:	ldr	r3, [r3, #116]	; 0x74
   20efc:	str	r3, [sp, #44]	; 0x2c
   20efe:	ldr.w	r3, [r1, #388]	; 0x184
   20f02:	lsls	r3, r3, #6
   20f04:	mov	r1, r3
   20f06:	movs	r3, #0
   20f08:	strd	r1, r2, [sp, #64]	; 0x40
   20f0c:	movs	r2, #12
   20f0e:	ldrd	r0, r1, [sp, #40]	; 0x28
   20f12:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   20f16:	ldr	r3, [pc, #700]	; (211d4 <btrfs_make_block_groups@@Base+0x318>)
   20f18:	str	r6, [sp, #80]	; 0x50
   20f1a:	add	r3, pc
   20f1c:	strd	r6, r6, [sp, #32]
   20f20:	addw	r3, r3, #461	; 0x1cd
   20f24:	vmov	s17, r3
   20f28:	strd	r0, r1, [sp, #56]	; 0x38
   20f2c:	ldrd	r2, r3, [sp, #40]	; 0x28
   20f30:	cmp	r9, r3
   20f32:	it	eq
   20f34:	cmpeq	r8, r2
   20f36:	bcc.n	20f70 <btrfs_make_block_groups@@Base+0xb4>
   20f38:	ldr.w	r8, [pc, #668]	; 211d8 <btrfs_make_block_groups@@Base+0x31c>
   20f3c:	movs	r4, #0
   20f3e:	ldr.w	r9, [pc, #668]	; 211dc <btrfs_make_block_groups@@Base+0x320>
   20f42:	movs	r5, #0
   20f44:	add	r8, pc
   20f46:	addw	r8, r8, #461	; 0x1cd
   20f4a:	add	r9, pc
   20f4c:	ldrd	r2, r3, [sp, #40]	; 0x28
   20f50:	cmp	r5, r3
   20f52:	it	eq
   20f54:	cmpeq	r4, r2
   20f56:	bcc.w	21146 <btrfs_make_block_groups@@Base+0x28a>
   20f5a:	ldr	r2, [pc, #644]	; (211e0 <btrfs_make_block_groups@@Base+0x324>)
   20f5c:	ldr	r3, [pc, #624]	; (211d0 <btrfs_make_block_groups@@Base+0x314>)
   20f5e:	add	r2, pc
   20f60:	ldr	r3, [r2, r3]
   20f62:	ldr	r2, [r3, #0]
   20f64:	ldr	r3, [sp, #116]	; 0x74
   20f66:	eors	r2, r3
   20f68:	beq.w	211c0 <btrfs_make_block_groups@@Base+0x304>
   20f6c:	blx	86b8 <__stack_chk_fail@plt>
   20f70:	ldr	r3, [sp, #40]	; 0x28
   20f72:	ldrd	sl, fp, [sp, #56]	; 0x38
   20f76:	subs.w	r3, r3, r8
   20f7a:	str	r3, [sp, #24]
   20f7c:	ldr	r3, [sp, #44]	; 0x2c
   20f7e:	sbc.w	r3, r3, r9
   20f82:	str	r3, [sp, #28]
   20f84:	ldrd	r0, r1, [sp, #24]
   20f88:	ldrd	r3, r2, [sp, #56]	; 0x38
   20f8c:	cmp	r1, fp
   20f8e:	it	eq
   20f90:	cmpeq	r0, sl
   20f92:	it	cc
   20f94:	ldrdcc	r3, r2, [sp, #24]
   20f98:	orrs.w	r1, r8, r9
   20f9c:	bne.w	210aa <btrfs_make_block_groups@@Base+0x1ee>
   20fa0:	ldrd	r0, r1, [sp, #64]	; 0x40
   20fa4:	lsrs	r3, r3, #2
   20fa6:	orr.w	r3, r3, r2, lsl #30
   20faa:	negs	r0, r0
   20fac:	and.w	r4, r0, r3
   20fb0:	mov.w	r3, #0
   20fb4:	sbc.w	r1, r1, r1, lsl #1
   20fb8:	and.w	r5, r1, r2, lsr #2
   20fbc:	mov.w	r2, #33554432	; 0x2000000
   20fc0:	cmp	r5, #0
   20fc2:	it	eq
   20fc4:	cmpeq.w	r4, #8388608	; 0x800000
   20fc8:	itt	cc
   20fca:	movcc.w	r4, #8388608	; 0x800000
   20fce:	movcc	r5, #0
   20fd0:	cmp	r3, r5
   20fd2:	it	eq
   20fd4:	cmpeq	r2, r4
   20fd6:	itt	cc
   20fd8:	movcc	r4, r2
   20fda:	movcc	r5, r3
   20fdc:	movs	r2, #2
   20fde:	movs	r3, #0
   20fe0:	strd	r2, r3, [sp, #48]	; 0x30
   20fe4:	movs	r1, #120	; 0x78
   20fe6:	movs	r0, #1
   20fe8:	blx	8544 <calloc@plt+0x4>
   20fec:	ldr	r1, [pc, #500]	; (211e4 <btrfs_make_block_groups@@Base+0x328>)
   20fee:	vmov	r2, s17
   20ff2:	movw	r3, #2893	; 0xb4d
   20ff6:	add	r1, pc
   20ff8:	str	r1, [sp, #84]	; 0x54
   20ffa:	mov	sl, r0
   20ffc:	clz	r0, r0
   21000:	lsrs	r0, r0, #5
   21002:	str	r0, [sp, #0]
   21004:	ldr	r0, [pc, #480]	; (211e8 <btrfs_make_block_groups@@Base+0x32c>)
   21006:	add	r0, pc
   21008:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2100c:	ldrd	r0, r1, [sp, #48]	; 0x30
   21010:	strd	r8, r9, [sl, #40]	; 0x28
   21014:	movs	r2, #0
   21016:	str.w	r4, [sl, #49]	; 0x31
   2101a:	movs	r3, #192	; 0xc0
   2101c:	strd	r0, r1, [sl, #96]	; 0x60
   21020:	add.w	r0, sl, #60	; 0x3c
   21024:	strb.w	r3, [sl, #48]	; 0x30
   21028:	movs	r3, #0
   2102a:	str.w	r5, [sl, #53]	; 0x35
   2102e:	strd	r2, r3, [sl, #72]	; 0x48
   21032:	str	r0, [sp, #16]
   21034:	mov	r0, r7
   21036:	strd	r2, r3, [sp, #8]
   2103a:	strd	r4, r5, [sp]
   2103e:	ldrd	r2, r3, [sp, #48]	; 0x30
   21042:	bl	20a5c <update_space_info@@Base>
   21046:	ldr	r1, [sp, #84]	; 0x54
   21048:	vmov	r2, s17
   2104c:	movw	r3, #2903	; 0xb57
   21050:	str	r0, [sp, #0]
   21052:	ldr	r0, [pc, #408]	; (211ec <btrfs_make_block_groups@@Base+0x330>)
   21054:	add	r0, pc
   21056:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2105a:	ldrd	r2, r3, [sp, #48]	; 0x30
   2105e:	mov	r0, r7
   21060:	bl	1e520 <btrfs_create_tree@@Base+0x1fc>
   21064:	adds.w	r3, r8, r4
   21068:	adc.w	r1, r9, r5
   2106c:	vmov	r0, s16
   21070:	mov	fp, r3
   21072:	adds.w	r2, fp, #4294967295	; 0xffffffff
   21076:	mov.w	r3, #24
   2107a:	str	r3, [sp, #8]
   2107c:	adc.w	r3, r1, #4294967295	; 0xffffffff
   21080:	strd	r2, r3, [sp]
   21084:	mov	r2, r8
   21086:	mov	r3, r9
   21088:	str	r1, [sp, #48]	; 0x30
   2108a:	bl	16864 <set_extent_bits@@Base>
   2108e:	movs	r3, #0
   21090:	mov	r2, r8
   21092:	str	r3, [sp, #4]
   21094:	mov	r3, r9
   21096:	vmov	r0, s16
   2109a:	mov	r8, fp
   2109c:	str.w	sl, [sp]
   210a0:	bl	16b72 <set_state_private@@Base>
   210a4:	ldr	r1, [sp, #48]	; 0x30
   210a6:	mov	r9, r1
   210a8:	b.n	20f2c <btrfs_make_block_groups@@Base+0x70>
   210aa:	ldrd	r0, r1, [sp, #64]	; 0x40
   210ae:	negs	r0, r0
   210b0:	and.w	r3, r3, r0
   210b4:	sbc.w	r1, r1, r1, lsl #1
   210b8:	ands	r2, r1
   210ba:	adds	r1, r6, r6
   210bc:	str	r1, [sp, #72]	; 0x48
   210be:	ldr	r1, [sp, #80]	; 0x50
   210c0:	adcs	r1, r1
   210c2:	str	r1, [sp, #76]	; 0x4c
   210c4:	ldrd	r4, r5, [sp, #72]	; 0x48
   210c8:	ldrd	r0, r1, [sp, #32]
   210cc:	cmp	r1, r5
   210ce:	mov	r5, r2
   210d0:	it	eq
   210d2:	cmpeq	r0, r4
   210d4:	mov.w	r2, #1073741824	; 0x40000000
   210d8:	mov	r4, r3
   210da:	bcc.n	21124 <btrfs_make_block_groups@@Base+0x268>
   210dc:	movs	r3, #0
   210de:	cmp	r3, r5
   210e0:	it	eq
   210e2:	cmpeq	r2, r4
   210e4:	it	cc
   210e6:	movcc	r5, r3
   210e8:	ldr	r3, [sp, #80]	; 0x50
   210ea:	it	cc
   210ec:	movcc	r4, r2
   210ee:	movs	r2, #4
   210f0:	adds	r6, r6, r4
   210f2:	adc.w	r3, r5, r3
   210f6:	str	r3, [sp, #80]	; 0x50
   210f8:	ldr	r1, [sp, #28]
   210fa:	movs	r3, #0
   210fc:	strd	r2, r3, [sp, #48]	; 0x30
   21100:	mov.w	ip, #5
   21104:	lsls	r3, r1, #2
   21106:	ldr	r1, [sp, #24]
   21108:	orr.w	r3, r3, r1, lsr #30
   2110c:	lsls	r2, r1, #2
   2110e:	umull	r0, r1, r4, ip
   21112:	mla	r1, ip, r5, r1
   21116:	cmp	r3, r1
   21118:	it	eq
   2111a:	cmpeq	r2, r0
   2111c:	it	cc
   2111e:	ldrdcc	r4, r5, [sp, #24]
   21122:	b.n	20fe4 <btrfs_make_block_groups@@Base+0x128>
   21124:	movs	r3, #1
   21126:	cmp	r3, r5
   21128:	it	eq
   2112a:	cmpeq	r2, r4
   2112c:	it	cc
   2112e:	movcc	r5, r3
   21130:	ldr	r3, [sp, #32]
   21132:	it	cc
   21134:	movcc	r4, r2
   21136:	movs	r2, #1
   21138:	adds	r3, r3, r4
   2113a:	str	r3, [sp, #32]
   2113c:	ldr	r3, [sp, #36]	; 0x24
   2113e:	adc.w	r3, r5, r3
   21142:	str	r3, [sp, #36]	; 0x24
   21144:	b.n	210f8 <btrfs_make_block_groups@@Base+0x23c>
   21146:	mov	r2, r4
   21148:	mov	r3, r5
   2114a:	mov	r0, r7
   2114c:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   21150:	movw	r3, #2919	; 0xb67
   21154:	mov	r2, r8
   21156:	mov	r1, r9
   21158:	mov	r6, r0
   2115a:	clz	r0, r0
   2115e:	lsrs	r0, r0, #5
   21160:	str	r0, [sp, #0]
   21162:	ldr	r0, [pc, #140]	; (211f0 <btrfs_make_block_groups@@Base+0x334>)
   21164:	add	r0, pc
   21166:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2116a:	ldr	r3, [r6, #72]	; 0x48
   2116c:	vmov	r1, s18
   21170:	mov.w	r2, #256	; 0x100
   21174:	vmov	r0, s19
   21178:	str	r3, [sp, #92]	; 0x5c
   2117a:	ldr	r3, [r6, #76]	; 0x4c
   2117c:	str	r3, [sp, #96]	; 0x60
   2117e:	ldr	r3, [r6, #96]	; 0x60
   21180:	str	r3, [sp, #108]	; 0x6c
   21182:	ldr	r3, [r6, #100]	; 0x64
   21184:	str	r3, [sp, #112]	; 0x70
   21186:	movs	r3, #0
   21188:	strd	r2, r3, [sp, #100]	; 0x64
   2118c:	add.w	r2, r6, #40	; 0x28
   21190:	movs	r3, #24
   21192:	str	r3, [sp, #0]
   21194:	add	r3, sp, #92	; 0x5c
   21196:	bl	1b270 <btrfs_insert_item@@Base>
   2119a:	movw	r3, #2927	; 0xb6f
   2119e:	mov	r2, r8
   211a0:	mov	r1, r9
   211a2:	str	r0, [sp, #0]
   211a4:	ldr	r0, [pc, #76]	; (211f4 <btrfs_make_block_groups@@Base+0x338>)
   211a6:	add	r0, pc
   211a8:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   211ac:	ldrd	r1, r0, [r6, #40]	; 0x28
   211b0:	ldr.w	r3, [r6, #49]	; 0x31
   211b4:	ldr.w	r2, [r6, #53]	; 0x35
   211b8:	adds	r4, r3, r1
   211ba:	adc.w	r5, r2, r0
   211be:	b.n	20f4c <btrfs_make_block_groups@@Base+0x90>
   211c0:	movs	r0, #0
   211c2:	add	sp, #124	; 0x7c
   211c4:	vpop	{d8-d9}
   211c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211cc:	subs	r6, #184	; 0xb8
   211ce:	movs	r4, r0
   211d0:	lsls	r4, r4, #8
   211d2:	movs	r0, r0
   211d4:	ldmia	r3, {r3, r6, r7}
   211d6:	movs	r1, r0
   211d8:	ldmia	r3, {r1, r2, r3, r4, r7}
   211da:	movs	r1, r0
   211dc:	stmia	r4!, {r0, r1, r2, r5, r6}
   211de:	movs	r1, r0
   211e0:	subs	r6, #42	; 0x2a
   211e2:	movs	r4, r0
   211e4:	stmia	r3!, {r0, r1, r3, r4, r5, r7}
   211e6:	movs	r1, r0
   211e8:	ldmia	r0, {r0, r2, r3, r4, r5}
   211ea:	movs	r1, r0
   211ec:	ldrh	r0, [r2, #44]	; 0x2c
   211ee:	movs	r1, r0
   211f0:	stmia	r6!, {r0, r1, r2, r3, r4, r6, r7}
   211f2:	movs	r1, r0
   211f4:	ldrh	r6, [r7, #32]
   211f6:	movs	r1, r0

000211f8 <btrfs_update_block_group@@Base>:
   211f8:	ldr.w	r0, [r0, #464]	; 0x1d0
   211fc:	b.w	1efe4 <btrfs_lookup_block_group@@Base+0x188>

00021200 <btrfs_free_block_group@@Base>:
   21200:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21204:	mov	fp, r3
   21206:	vpush	{d8}
   2120a:	mov	sl, r2
   2120c:	ldr.w	r3, [pc, #1568]	; 21830 <btrfs_free_block_group@@Base+0x630>
   21210:	mov	r9, r1
   21212:	ldr.w	r2, [pc, #1568]	; 21834 <btrfs_free_block_group@@Base+0x634>
   21216:	mov	r8, r0
   21218:	add	r3, pc
   2121a:	sub	sp, #164	; 0xa4
   2121c:	add	r2, pc
   2121e:	ldr	r1, [r1, #24]
   21220:	str	r3, [sp, #36]	; 0x24
   21222:	ldr.w	r3, [pc, #1556]	; 21838 <btrfs_free_block_group@@Base+0x638>
   21226:	ldr	r3, [r2, r3]
   21228:	ldr	r3, [r3, #0]
   2122a:	str	r3, [sp, #156]	; 0x9c
   2122c:	mov.w	r3, #0
   21230:	str	r1, [sp, #24]
   21232:	bl	17df8 <btrfs_alloc_path@@Base>
   21236:	str	r0, [sp, #28]
   21238:	cmp	r0, #0
   2123a:	beq.w	2181c <btrfs_free_block_group@@Base+0x61c>
   2123e:	ldr	r3, [sp, #208]	; 0xd0
   21240:	add	r2, sp, #96	; 0x60
   21242:	ldr	r1, [sp, #24]
   21244:	movs	r4, #192	; 0xc0
   21246:	strd	sl, fp, [sp, #96]	; 0x60
   2124a:	str.w	r3, [sp, #105]	; 0x69
   2124e:	ldr	r3, [sp, #212]	; 0xd4
   21250:	strb.w	r4, [sp, #104]	; 0x68
   21254:	str.w	r3, [sp, #109]	; 0x6d
   21258:	movs	r3, #0
   2125a:	strd	r3, r3, [sp]
   2125e:	mov	r3, r0
   21260:	mov	r0, r8
   21262:	bl	1a1e4 <btrfs_search_slot@@Base>
   21266:	subs	r3, r0, #0
   21268:	str	r3, [sp, #24]
   2126a:	bgt.w	21816 <btrfs_free_block_group@@Base+0x616>
   2126e:	bne.n	21342 <btrfs_free_block_group@@Base+0x142>
   21270:	ldr	r3, [sp, #28]
   21272:	movs	r1, #25
   21274:	ldr	r2, [sp, #28]
   21276:	ldr	r3, [r3, #0]
   21278:	ldr	r2, [r2, #32]
   2127a:	adds	r3, #96	; 0x60
   2127c:	mla	r2, r1, r2, r3
   21280:	ldr.w	r2, [r2, #118]	; 0x76
   21284:	add	r3, r2
   21286:	ldr.w	r0, [r3, #101]!
   2128a:	ldr	r1, [r3, #4]
   2128c:	orrs.w	r3, r0, r1
   21290:	beq.n	212c4 <btrfs_free_block_group@@Base+0xc4>
   21292:	ldr	r2, [sp, #36]	; 0x24
   21294:	ldr.w	r3, [pc, #1444]	; 2183c <btrfs_free_block_group@@Base+0x63c>
   21298:	ldr	r3, [r2, r3]
   2129a:	ldr	r2, [sp, #208]	; 0xd0
   2129c:	strd	sl, fp, [sp]
   212a0:	adds.w	r1, sl, r2
   212a4:	ldr	r2, [sp, #212]	; 0xd4
   212a6:	adc.w	r2, fp, r2
   212aa:	strd	r1, r2, [sp, #8]
   212ae:	ldr.w	r2, [pc, #1424]	; 21840 <btrfs_free_block_group@@Base+0x640>
   212b2:	movs	r1, #1
   212b4:	ldr	r0, [r3, #0]
   212b6:	add	r2, pc
   212b8:	blx	8a14 <__fprintf_chk@plt+0x4>
   212bc:	mvn.w	r3, #21
   212c0:	str	r3, [sp, #24]
   212c2:	b.n	21342 <btrfs_free_block_group@@Base+0x142>
   212c4:	ldr	r0, [sp, #28]
   212c6:	bl	17e00 <btrfs_release_path@@Base>
   212ca:	ldrd	r2, r3, [sp, #208]	; 0xd0
   212ce:	mov	r0, r9
   212d0:	strd	r2, r3, [sp]
   212d4:	mov	r2, sl
   212d6:	mov	r3, fp
   212d8:	bl	20bdc <btrfs_pin_extent@@Base>
   212dc:	ldr	r3, [sp, #208]	; 0xd0
   212de:	ldr.w	r1, [r9, #24]
   212e2:	strd	sl, fp, [sp, #136]	; 0x88
   212e6:	str.w	r3, [sp, #145]	; 0x91
   212ea:	ldr	r3, [sp, #212]	; 0xd4
   212ec:	str	r1, [sp, #32]
   212ee:	strb.w	r4, [sp, #144]	; 0x90
   212f2:	str.w	r3, [sp, #149]	; 0x95
   212f6:	bl	17df8 <btrfs_alloc_path@@Base>
   212fa:	ldr	r1, [sp, #32]
   212fc:	mov	r5, r0
   212fe:	cbnz	r0, 21362 <btrfs_free_block_group@@Base+0x162>
   21300:	mvn.w	r4, #11
   21304:	ldr	r2, [sp, #36]	; 0x24
   21306:	ldr.w	r3, [pc, #1332]	; 2183c <btrfs_free_block_group@@Base+0x63c>
   2130a:	ldr	r3, [r2, r3]
   2130c:	ldr	r2, [sp, #208]	; 0xd0
   2130e:	strd	sl, fp, [sp]
   21312:	adds.w	r1, sl, r2
   21316:	ldr	r2, [sp, #212]	; 0xd4
   21318:	adc.w	r2, fp, r2
   2131c:	strd	r1, r2, [sp, #8]
   21320:	ldr.w	r2, [pc, #1312]	; 21844 <btrfs_free_block_group@@Base+0x644>
   21324:	add	r2, pc
   21326:	ldr	r0, [r3, #0]
   21328:	movs	r1, #1
   2132a:	blx	8a14 <__fprintf_chk@plt+0x4>
   2132e:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21332:	mov	r0, r9
   21334:	strd	r2, r3, [sp]
   21338:	mov	r2, sl
   2133a:	mov	r3, fp
   2133c:	bl	20d50 <btrfs_unpin_extent@@Base>
   21340:	str	r4, [sp, #24]
   21342:	ldr	r0, [sp, #28]
   21344:	bl	17e26 <btrfs_free_path@@Base>
   21348:	ldr.w	r2, [pc, #1276]	; 21848 <btrfs_free_block_group@@Base+0x648>
   2134c:	ldr.w	r3, [pc, #1256]	; 21838 <btrfs_free_block_group@@Base+0x638>
   21350:	add	r2, pc
   21352:	ldr	r3, [r2, r3]
   21354:	ldr	r2, [r3, #0]
   21356:	ldr	r3, [sp, #156]	; 0x9c
   21358:	eors	r2, r3
   2135a:	beq.w	21824 <btrfs_free_block_group@@Base+0x624>
   2135e:	blx	86b8 <__stack_chk_fail@plt>
   21362:	mov.w	r3, #4294967295	; 0xffffffff
   21366:	add	r2, sp, #136	; 0x88
   21368:	movs	r6, #1
   2136a:	strd	r3, r6, [sp]
   2136e:	mov	r3, r0
   21370:	mov	r0, r8
   21372:	str	r1, [sp, #32]
   21374:	bl	1a1e4 <btrfs_search_slot@@Base>
   21378:	subs	r4, r0, #0
   2137a:	bgt.n	213cc <btrfs_free_block_group@@Base+0x1cc>
   2137c:	bne.n	2138a <btrfs_free_block_group@@Base+0x18a>
   2137e:	ldr	r1, [sp, #32]
   21380:	mov	r2, r5
   21382:	mov	r0, r8
   21384:	bl	1e630 <btrfs_create_tree@@Base+0x30c>
   21388:	mov	r4, r0
   2138a:	mov	r0, r5
   2138c:	bl	17e26 <btrfs_free_path@@Base>
   21390:	cmp	r4, #0
   21392:	blt.n	21304 <btrfs_free_block_group@@Base+0x104>
   21394:	ldr.w	r1, [r9, #32]
   21398:	str	r1, [sp, #32]
   2139a:	bl	17df8 <btrfs_alloc_path@@Base>
   2139e:	ldr	r1, [sp, #32]
   213a0:	mov	r5, r0
   213a2:	cbnz	r0, 213d2 <btrfs_free_block_group@@Base+0x1d2>
   213a4:	mvn.w	r4, #11
   213a8:	ldr	r2, [sp, #36]	; 0x24
   213aa:	ldr.w	r3, [pc, #1168]	; 2183c <btrfs_free_block_group@@Base+0x63c>
   213ae:	ldr	r3, [r2, r3]
   213b0:	ldr	r2, [sp, #208]	; 0xd0
   213b2:	strd	sl, fp, [sp]
   213b6:	adds.w	r1, sl, r2
   213ba:	ldr	r2, [sp, #212]	; 0xd4
   213bc:	adc.w	r2, fp, r2
   213c0:	strd	r1, r2, [sp, #8]
   213c4:	ldr.w	r2, [pc, #1156]	; 2184c <btrfs_free_block_group@@Base+0x64c>
   213c8:	add	r2, pc
   213ca:	b.n	21326 <btrfs_free_block_group@@Base+0x126>
   213cc:	mvn.w	r4, #1
   213d0:	b.n	2138a <btrfs_free_block_group@@Base+0x18a>
   213d2:	movs	r3, #0
   213d4:	mov.w	r4, #256	; 0x100
   213d8:	movs	r2, #228	; 0xe4
   213da:	strd	r4, r3, [sp, #116]	; 0x74
   213de:	strb.w	r2, [sp, #124]	; 0x7c
   213e2:	add	r2, sp, #116	; 0x74
   213e4:	strd	r3, r3, [sp]
   213e8:	mov	r3, r0
   213ea:	mov	r0, r8
   213ec:	str.w	sl, [sp, #125]	; 0x7d
   213f0:	str.w	fp, [sp, #129]	; 0x81
   213f4:	bl	1a1e4 <btrfs_search_slot@@Base>
   213f8:	subs	r4, r0, #0
   213fa:	blt.n	21456 <btrfs_free_block_group@@Base+0x256>
   213fc:	bne.w	21508 <btrfs_free_block_group@@Base+0x308>
   21400:	ldr	r3, [r5, #0]
   21402:	movs	r1, #25
   21404:	ldr	r2, [r5, #32]
   21406:	adds	r3, #96	; 0x60
   21408:	str	r4, [sp, #32]
   2140a:	mla	r2, r1, r2, r3
   2140e:	ldr.w	r6, [r2, #118]	; 0x76
   21412:	add	r3, r6
   21414:	adds	r6, #149	; 0x95
   21416:	ldrh.w	r3, [r3, #145]	; 0x91
   2141a:	str	r3, [sp, #40]	; 0x28
   2141c:	add	r3, sp, #136	; 0x88
   2141e:	vmov	s16, r3
   21422:	ldr	r3, [sp, #32]
   21424:	ldr	r2, [sp, #40]	; 0x28
   21426:	cmp	r3, r2
   21428:	bge.n	21456 <btrfs_free_block_group@@Base+0x256>
   2142a:	ldr	r3, [r5, #0]
   2142c:	adds	r3, #96	; 0x60
   2142e:	adds	r1, r3, r6
   21430:	ldr	r2, [r3, r6]
   21432:	ldr	r3, [r1, #4]
   21434:	ldr	r4, [r1, #12]
   21436:	str	r2, [sp, #56]	; 0x38
   21438:	str	r3, [sp, #44]	; 0x2c
   2143a:	ldr	r3, [r1, #8]
   2143c:	ldr.w	r1, [r9, #36]	; 0x24
   21440:	str	r3, [sp, #52]	; 0x34
   21442:	str	r1, [sp, #48]	; 0x30
   21444:	bl	17df8 <btrfs_alloc_path@@Base>
   21448:	ldrd	r1, r3, [sp, #48]	; 0x30
   2144c:	ldr	r2, [sp, #56]	; 0x38
   2144e:	mov	r7, r0
   21450:	cbnz	r0, 214ae <btrfs_free_block_group@@Base+0x2ae>
   21452:	mvn.w	r4, #11
   21456:	mov	r0, r5
   21458:	bl	17e26 <btrfs_free_path@@Base>
   2145c:	cmp	r4, #0
   2145e:	blt.n	213a8 <btrfs_free_block_group@@Base+0x1a8>
   21460:	ldr.w	r1, [r9, #32]
   21464:	mov.w	r2, #256	; 0x100
   21468:	movs	r3, #0
   2146a:	str.w	sl, [sp, #145]	; 0x91
   2146e:	strd	r2, r3, [sp, #136]	; 0x88
   21472:	movs	r3, #228	; 0xe4
   21474:	str	r1, [sp, #32]
   21476:	str.w	fp, [sp, #149]	; 0x95
   2147a:	strb.w	r3, [sp, #144]	; 0x90
   2147e:	bl	17df8 <btrfs_alloc_path@@Base>
   21482:	ldr	r1, [sp, #32]
   21484:	mov	r6, r0
   21486:	cmp	r0, #0
   21488:	bne.n	2150e <btrfs_free_block_group@@Base+0x30e>
   2148a:	mvn.w	r4, #11
   2148e:	ldr	r2, [sp, #36]	; 0x24
   21490:	ldr	r3, [pc, #936]	; (2183c <btrfs_free_block_group@@Base+0x63c>)
   21492:	ldr	r3, [r2, r3]
   21494:	ldr	r2, [sp, #208]	; 0xd0
   21496:	strd	sl, fp, [sp]
   2149a:	adds.w	r1, sl, r2
   2149e:	ldr	r2, [sp, #212]	; 0xd4
   214a0:	adc.w	r2, fp, r2
   214a4:	strd	r1, r2, [sp, #8]
   214a8:	ldr	r2, [pc, #932]	; (21850 <btrfs_free_block_group@@Base+0x650>)
   214aa:	add	r2, pc
   214ac:	b.n	21326 <btrfs_free_block_group@@Base+0x126>
   214ae:	str	r2, [sp, #136]	; 0x88
   214b0:	movs	r0, #1
   214b2:	ldr	r2, [sp, #44]	; 0x2c
   214b4:	str.w	r3, [sp, #145]	; 0x91
   214b8:	mov.w	r3, #4294967295	; 0xffffffff
   214bc:	strd	r3, r0, [sp]
   214c0:	mov	r3, r7
   214c2:	str	r2, [sp, #140]	; 0x8c
   214c4:	mov	r0, r8
   214c6:	mvn.w	r2, #51	; 0x33
   214ca:	strb.w	r2, [sp, #144]	; 0x90
   214ce:	vmov	r2, s16
   214d2:	str.w	r4, [sp, #149]	; 0x95
   214d6:	str	r1, [sp, #44]	; 0x2c
   214d8:	bl	1a1e4 <btrfs_search_slot@@Base>
   214dc:	subs	r4, r0, #0
   214de:	blt.n	214ee <btrfs_free_block_group@@Base+0x2ee>
   214e0:	bne.n	21502 <btrfs_free_block_group@@Base+0x302>
   214e2:	ldr	r1, [sp, #44]	; 0x2c
   214e4:	mov	r2, r7
   214e6:	mov	r0, r8
   214e8:	bl	1e630 <btrfs_create_tree@@Base+0x30c>
   214ec:	mov	r4, r0
   214ee:	mov	r0, r7
   214f0:	adds	r6, #32
   214f2:	bl	17e26 <btrfs_free_path@@Base>
   214f6:	cmp	r4, #0
   214f8:	blt.n	21456 <btrfs_free_block_group@@Base+0x256>
   214fa:	ldr	r3, [sp, #32]
   214fc:	adds	r3, #1
   214fe:	str	r3, [sp, #32]
   21500:	b.n	21422 <btrfs_free_block_group@@Base+0x222>
   21502:	mvn.w	r4, #1
   21506:	b.n	214ee <btrfs_free_block_group@@Base+0x2ee>
   21508:	mvn.w	r4, #1
   2150c:	b.n	21456 <btrfs_free_block_group@@Base+0x256>
   2150e:	mov.w	r3, #4294967295	; 0xffffffff
   21512:	movs	r2, #1
   21514:	strd	r3, r2, [sp]
   21518:	mov	r3, r0
   2151a:	add	r2, sp, #136	; 0x88
   2151c:	mov	r0, r8
   2151e:	str	r1, [sp, #40]	; 0x28
   21520:	bl	1a1e4 <btrfs_search_slot@@Base>
   21524:	subs	r3, r0, #0
   21526:	str	r3, [sp, #32]
   21528:	bgt.w	2163e <btrfs_free_block_group@@Base+0x43e>
   2152c:	bne.n	2162e <btrfs_free_block_group@@Base+0x42e>
   2152e:	ldr	r3, [r6, #0]
   21530:	movs	r0, #25
   21532:	ldr	r2, [r6, #32]
   21534:	adds	r3, #96	; 0x60
   21536:	ldr	r1, [sp, #40]	; 0x28
   21538:	mla	r2, r0, r2, r3
   2153c:	mov	r0, r8
   2153e:	ldr.w	r2, [r2, #118]	; 0x76
   21542:	add	r3, r2
   21544:	mov	r2, r6
   21546:	ldr.w	r5, [r3, #125]	; 0x7d
   2154a:	bl	1e630 <btrfs_create_tree@@Base+0x30c>
   2154e:	subs	r4, r0, #0
   21550:	blt.n	21642 <btrfs_free_block_group@@Base+0x442>
   21552:	ldr	r3, [sp, #32]
   21554:	and.w	r2, r5, #2
   21558:	orrs	r3, r2
   2155a:	beq.n	21642 <btrfs_free_block_group@@Base+0x442>
   2155c:	ldr.w	r3, [r9, #308]	; 0x134
   21560:	ldr	r5, [sp, #32]
   21562:	str	r3, [sp, #40]	; 0x28
   21564:	ldr.w	r3, [r3, #160]	; 0xa0
   21568:	str	r3, [sp, #44]	; 0x2c
   2156a:	ldr	r3, [sp, #40]	; 0x28
   2156c:	addw	r3, r3, #811	; 0x32b
   21570:	str	r3, [sp, #48]	; 0x30
   21572:	ldrd	r3, r4, [sp, #136]	; 0x88
   21576:	strd	r3, r4, [sp, #80]	; 0x50
   2157a:	ldr.w	r3, [sp, #145]	; 0x91
   2157e:	str	r3, [sp, #56]	; 0x38
   21580:	ldr.w	r3, [sp, #149]	; 0x95
   21584:	str	r3, [sp, #60]	; 0x3c
   21586:	ldrb.w	r3, [sp, #144]	; 0x90
   2158a:	str	r3, [sp, #88]	; 0x58
   2158c:	ldr	r3, [pc, #708]	; (21854 <btrfs_free_block_group@@Base+0x654>)
   2158e:	add	r3, pc
   21590:	addw	r2, r3, #485	; 0x1e5
   21594:	ldr	r3, [pc, #704]	; (21858 <btrfs_free_block_group@@Base+0x658>)
   21596:	add	r3, pc
   21598:	vmov	s16, r3
   2159c:	ldr	r3, [sp, #44]	; 0x2c
   2159e:	cmp	r3, r5
   215a0:	bhi.n	215aa <btrfs_free_block_group@@Base+0x3aa>
   215a2:	mvn.w	r3, #1
   215a6:	str	r3, [sp, #32]
   215a8:	b.n	2162e <btrfs_free_block_group@@Base+0x42e>
   215aa:	ldr	r3, [sp, #48]	; 0x30
   215ac:	adds	r7, r3, r5
   215ae:	ldr	r3, [r3, r5]
   215b0:	str	r3, [sp, #64]	; 0x40
   215b2:	ldr	r3, [r7, #4]
   215b4:	str	r3, [sp, #68]	; 0x44
   215b6:	ldrb	r3, [r7, #8]
   215b8:	cmp	r3, #228	; 0xe4
   215ba:	bne.n	21638 <btrfs_free_block_group@@Base+0x438>
   215bc:	ldrh.w	r4, [r7, #61]	; 0x3d
   215c0:	ldr	r0, [pc, #664]	; (2185c <btrfs_free_block_group@@Base+0x65c>)
   215c2:	clz	r3, r4
   215c6:	vmov	r1, s16
   215ca:	add	r0, pc
   215cc:	lsls	r4, r4, #5
   215ce:	lsrs	r3, r3, #5
   215d0:	str	r3, [sp, #0]
   215d2:	mov.w	r3, #322	; 0x142
   215d6:	str	r2, [sp, #92]	; 0x5c
   215d8:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   215dc:	ldrd	r0, r1, [sp, #64]	; 0x40
   215e0:	add.w	r3, r4, #65	; 0x41
   215e4:	str	r3, [sp, #52]	; 0x34
   215e6:	ldrd	r2, r3, [sp, #80]	; 0x50
   215ea:	cmp	r3, r1
   215ec:	it	eq
   215ee:	cmpeq	r2, r0
   215f0:	ldr	r2, [sp, #92]	; 0x5c
   215f2:	bne.n	21632 <btrfs_free_block_group@@Base+0x432>
   215f4:	ldrd	r3, r4, [sp, #56]	; 0x38
   215f8:	ldr.w	r1, [r7, #13]
   215fc:	ldr.w	r0, [r7, #9]
   21600:	cmp	r4, r1
   21602:	it	eq
   21604:	cmpeq	r3, r0
   21606:	bne.n	21632 <btrfs_free_block_group@@Base+0x432>
   21608:	ldr	r3, [sp, #88]	; 0x58
   2160a:	cmp	r3, #228	; 0xe4
   2160c:	bne.n	21632 <btrfs_free_block_group@@Base+0x432>
   2160e:	ldr	r3, [sp, #52]	; 0x34
   21610:	mov	r0, r7
   21612:	adds	r1, r5, r3
   21614:	ldr	r3, [sp, #44]	; 0x2c
   21616:	subs	r2, r3, r1
   21618:	ldr	r3, [sp, #48]	; 0x30
   2161a:	add	r3, r1
   2161c:	mov	r1, r3
   2161e:	blx	85cc <memmove@plt+0x4>
   21622:	ldr	r3, [sp, #44]	; 0x2c
   21624:	ldr	r2, [sp, #52]	; 0x34
   21626:	subs	r4, r3, r2
   21628:	ldr	r3, [sp, #40]	; 0x28
   2162a:	str.w	r4, [r3, #160]	; 0xa0
   2162e:	ldr	r4, [sp, #32]
   21630:	b.n	21642 <btrfs_free_block_group@@Base+0x442>
   21632:	ldr	r3, [sp, #52]	; 0x34
   21634:	add	r5, r3
   21636:	b.n	2159c <btrfs_free_block_group@@Base+0x39c>
   21638:	mvn.w	r3, #4
   2163c:	b.n	215a6 <btrfs_free_block_group@@Base+0x3a6>
   2163e:	mvn.w	r4, #1
   21642:	mov	r0, r6
   21644:	bl	17e26 <btrfs_free_path@@Base>
   21648:	cmp	r4, #0
   2164a:	blt.w	2148e <btrfs_free_block_group@@Base+0x28e>
   2164e:	mov	r2, sl
   21650:	mov	r3, fp
   21652:	mov	r0, r9
   21654:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   21658:	mov	r6, r0
   2165a:	cbnz	r0, 21676 <btrfs_free_block_group@@Base+0x476>
   2165c:	mvn.w	r3, #1
   21660:	str	r3, [sp, #24]
   21662:	ldrd	r3, r4, [sp, #208]	; 0xd0
   21666:	mov	r2, sl
   21668:	mov	r0, r9
   2166a:	strd	r3, r4, [sp]
   2166e:	mov	r3, fp
   21670:	bl	20d50 <btrfs_unpin_extent@@Base>
   21674:	b.n	21342 <btrfs_free_block_group@@Base+0x142>
   21676:	ldr	r3, [r0, #64]	; 0x40
   21678:	ldrd	r4, r5, [r0, #96]	; 0x60
   2167c:	cbz	r3, 21688 <btrfs_free_block_group@@Base+0x488>
   2167e:	bl	26bbc <btrfs_remove_free_space_cache@@Base>
   21682:	ldr	r0, [r6, #64]	; 0x40
   21684:	blx	85dc <free@plt+0x4>
   21688:	mov.w	r3, #4294967295	; 0xffffffff
   2168c:	str	r3, [sp, #8]
   2168e:	ldr	r3, [sp, #208]	; 0xd0
   21690:	add.w	r0, r9, #128	; 0x80
   21694:	ldr	r2, [sp, #212]	; 0xd4
   21696:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2169a:	adc.w	r2, r2, #4294967295	; 0xffffffff
   2169e:	adds.w	r3, r3, sl
   216a2:	adc.w	r2, r2, fp
   216a6:	strd	r3, r2, [sp]
   216aa:	mov	r2, sl
   216ac:	mov	r3, fp
   216ae:	bl	166ee <clear_extent_bits@@Base>
   216b2:	mov	r2, r4
   216b4:	mov	r3, r5
   216b6:	mov	r0, r9
   216b8:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   216bc:	cmp	r0, #0
   216be:	beq.n	2165c <btrfs_free_block_group@@Base+0x45c>
   216c0:	ldrd	r4, r5, [r0, #8]
   216c4:	ldrd	r2, r3, [sp, #208]	; 0xd0
   216c8:	cmp	r5, r3
   216ca:	it	eq
   216cc:	cmpeq	r4, r2
   216ce:	bcs.n	216f4 <btrfs_free_block_group@@Base+0x4f4>
   216d0:	ldr	r2, [sp, #36]	; 0x24
   216d2:	ldr	r3, [pc, #360]	; (2183c <btrfs_free_block_group@@Base+0x63c>)
   216d4:	ldr	r3, [r2, r3]
   216d6:	ldrd	r1, r2, [sp, #208]	; 0xd0
   216da:	strd	r4, r5, [sp, #8]
   216de:	strd	r1, r2, [sp]
   216e2:	movs	r1, #1
   216e4:	ldr	r2, [pc, #376]	; (21860 <btrfs_free_block_group@@Base+0x660>)
   216e6:	ldr	r0, [r3, #0]
   216e8:	add	r2, pc
   216ea:	blx	8a14 <__fprintf_chk@plt+0x4>
   216ee:	mvn.w	r3, #21
   216f2:	b.n	21660 <btrfs_free_block_group@@Base+0x460>
   216f4:	ldr	r3, [sp, #208]	; 0xd0
   216f6:	subs	r2, r4, r3
   216f8:	ldr	r3, [sp, #212]	; 0xd4
   216fa:	sbc.w	r3, r5, r3
   216fe:	strd	r2, r3, [r0, #8]
   21702:	mov	r0, r6
   21704:	add.w	r6, r9, #228	; 0xe4
   21708:	blx	85dc <free@plt+0x4>
   2170c:	mov	r2, sl
   2170e:	mov	r3, fp
   21710:	mov	r0, r6
   21712:	bl	15f84 <search_cache_extent@@Base>
   21716:	mov	r4, r0
   21718:	cmp	r0, #0
   2171a:	beq.n	2165c <btrfs_free_block_group@@Base+0x45c>
   2171c:	ldrd	r2, r3, [r0, #24]
   21720:	cmp	fp, r3
   21722:	it	eq
   21724:	cmpeq	sl, r2
   21726:	bne.n	2165c <btrfs_free_block_group@@Base+0x45c>
   21728:	ldr	r5, [sp, #24]
   2172a:	add.w	r3, r0, #72	; 0x48
   2172e:	str	r3, [sp, #32]
   21730:	ldr	r0, [r4, #64]	; 0x40
   21732:	cmp	r5, r0
   21734:	blt.n	21746 <btrfs_free_block_group@@Base+0x546>
   21736:	mov	r0, r6
   21738:	mov	r1, r4
   2173a:	bl	1605c <remove_cache_extent@@Base>
   2173e:	mov	r0, r4
   21740:	blx	85dc <free@plt+0x4>
   21744:	b.n	21662 <btrfs_free_block_group@@Base+0x462>
   21746:	ldr	r2, [sp, #32]
   21748:	lsls	r3, r5, #4
   2174a:	ldr	r7, [r2, r3]
   2174c:	ldr	r3, [r4, #40]	; 0x28
   2174e:	and.w	r2, r3, #2040	; 0x7f8
   21752:	str	r2, [sp, #16]
   21754:	movs	r2, #0
   21756:	str	r2, [sp, #20]
   21758:	ldrd	r1, r2, [sp, #16]
   2175c:	cmp	r2, #0
   2175e:	it	eq
   21760:	cmpeq	r1, #128	; 0x80
   21762:	beq.n	217da <btrfs_free_block_group@@Base+0x5da>
   21764:	cmp	r2, #0
   21766:	it	eq
   21768:	cmpeq	r1, #129	; 0x81
   2176a:	bcs.n	217b2 <btrfs_free_block_group@@Base+0x5b2>
   2176c:	cmp	r2, #0
   2176e:	it	eq
   21770:	cmpeq	r1, #64	; 0x40
   21772:	beq.n	2180e <btrfs_free_block_group@@Base+0x60e>
   21774:	cmp	r2, #0
   21776:	it	eq
   21778:	cmpeq	r1, #65	; 0x41
   2177a:	bcs.n	21796 <btrfs_free_block_group@@Base+0x596>
   2177c:	cmp	r2, #0
   2177e:	it	eq
   21780:	cmpeq	r1, #32
   21782:	beq.n	217d6 <btrfs_free_block_group@@Base+0x5d6>
   21784:	and.w	r3, r3, #2024	; 0x7e8
   21788:	str	r3, [sp, #72]	; 0x48
   2178a:	movs	r3, #0
   2178c:	str	r3, [sp, #76]	; 0x4c
   2178e:	ldrd	r2, r3, [sp, #72]	; 0x48
   21792:	orrs	r3, r2
   21794:	beq.n	217d6 <btrfs_free_block_group@@Base+0x5d6>
   21796:	ldr	r2, [pc, #204]	; (21864 <btrfs_free_block_group@@Base+0x664>)
   21798:	movs	r3, #1
   2179a:	ldr	r1, [pc, #204]	; (21868 <btrfs_free_block_group@@Base+0x668>)
   2179c:	ldr	r0, [pc, #204]	; (2186c <btrfs_free_block_group@@Base+0x66c>)
   2179e:	add	r2, pc
   217a0:	str	r3, [sp, #0]
   217a2:	addw	r2, r2, #507	; 0x1fb
   217a6:	add	r1, pc
   217a8:	add	r0, pc
   217aa:	movw	r3, #3160	; 0xc58
   217ae:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   217b2:	ldrd	r2, r3, [sp, #16]
   217b6:	cmp	r3, #0
   217b8:	it	eq
   217ba:	cmpeq.w	r2, #256	; 0x100
   217be:	beq.n	2180a <btrfs_free_block_group@@Base+0x60a>
   217c0:	bcc.n	21796 <btrfs_free_block_group@@Base+0x596>
   217c2:	cmp	r3, #0
   217c4:	it	eq
   217c6:	cmpeq.w	r2, #512	; 0x200
   217ca:	beq.n	217d6 <btrfs_free_block_group@@Base+0x5d6>
   217cc:	cmp	r3, #0
   217ce:	it	eq
   217d0:	cmpeq.w	r2, #1024	; 0x400
   217d4:	bne.n	21796 <btrfs_free_block_group@@Base+0x596>
   217d6:	movs	r0, #1
   217d8:	b.n	217dc <btrfs_free_block_group@@Base+0x5dc>
   217da:	subs	r0, #1
   217dc:	asrs	r3, r0, #31
   217de:	mov	r2, r0
   217e0:	ldrd	r0, r1, [r4, #32]
   217e4:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   217e8:	ldrd	r3, r2, [r7, #80]	; 0x50
   217ec:	subs	r0, r3, r0
   217ee:	sbc.w	r1, r2, r1
   217f2:	strd	r0, r1, [r7, #80]	; 0x50
   217f6:	mov	r1, r7
   217f8:	mov	r0, r8
   217fa:	bl	28680 <btrfs_update_device@@Base>
   217fe:	subs	r3, r0, #0
   21800:	str	r3, [sp, #24]
   21802:	blt.w	21662 <btrfs_free_block_group@@Base+0x462>
   21806:	adds	r5, #1
   21808:	b.n	21730 <btrfs_free_block_group@@Base+0x530>
   2180a:	subs	r0, #2
   2180c:	b.n	217dc <btrfs_free_block_group@@Base+0x5dc>
   2180e:	ldr	r1, [r4, #68]	; 0x44
   21810:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   21814:	b.n	217dc <btrfs_free_block_group@@Base+0x5dc>
   21816:	mvn.w	r3, #63	; 0x3f
   2181a:	b.n	212c0 <btrfs_free_block_group@@Base+0xc0>
   2181c:	mvn.w	r3, #11
   21820:	str	r3, [sp, #24]
   21822:	b.n	21348 <btrfs_free_block_group@@Base+0x148>
   21824:	ldr	r0, [sp, #24]
   21826:	add	sp, #164	; 0xa4
   21828:	vpop	{d8}
   2182c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21830:	subs	r3, #112	; 0x70
   21832:	movs	r4, r0
   21834:	subs	r3, #108	; 0x6c
   21836:	movs	r4, r0
   21838:	lsls	r4, r4, #8
   2183a:	movs	r0, r0
   2183c:	lsls	r4, r6, #8
   2183e:	movs	r0, r0
   21840:	stmia	r5!, {r2, r4, r7}
   21842:	movs	r1, r0
   21844:	stmia	r5!, {r0, r2, r4, r6}
   21846:	movs	r1, r0
   21848:	subs	r2, #56	; 0x38
   2184a:	movs	r4, r0
   2184c:	stmia	r4!, {r1, r5, r6, r7}
   2184e:	movs	r1, r0
   21850:	stmia	r4!, {r0, r1, r2, r3, r4, r5}
   21852:	movs	r1, r0
   21854:	stmia	r5!, {r2, r4, r6}
   21856:	movs	r1, r0
   21858:	ldrh	r6, [r7, #14]
   2185a:	movs	r1, r0
   2185c:	stmia	r3!, {r1, r2, r3}
   2185e:	movs	r1, r0
   21860:	stmia	r2!, {r0, r1, r2, r5}
   21862:	movs	r1, r0
   21864:	stmia	r3!, {r2, r6}
   21866:	movs	r1, r0
   21868:	pop	{r0, r1, r3}
   2186a:	movs	r1, r0
   2186c:	itett	vs
   2186e:	movvs	r1, r0

00021870 <free_excluded_extents@@Base>:
   21870:	pushvc	{r4, r5, lr}
   21872:	subvs	sp, #20
   21874:	ldrdvs	r2, r3, [r1, #40]	; 0x28
   21878:	movs	r4, #4
   2187a:	str	r4, [sp, #8]
   2187c:	adds	r0, #160	; 0xa0
   2187e:	ldr.w	r4, [r1, #49]	; 0x31
   21882:	ldr.w	r5, [r1, #53]	; 0x35
   21886:	adds	r4, r4, r2
   21888:	adc.w	r5, r3, r5
   2188c:	adds.w	r4, r4, #4294967295	; 0xffffffff
   21890:	adc.w	r5, r5, #4294967295	; 0xffffffff
   21894:	strd	r4, r5, [sp]
   21898:	bl	166ee <clear_extent_bits@@Base>
   2189c:	add	sp, #20
   2189e:	pop	{r4, r5, pc}

000218a0 <exclude_super_stripes@@Base>:
   218a0:	ldr	r2, [pc, #392]	; (21a2c <exclude_super_stripes@@Base+0x18c>)
   218a2:	ldr	r3, [pc, #396]	; (21a30 <exclude_super_stripes@@Base+0x190>)
   218a4:	add	r2, pc
   218a6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218aa:	sub	sp, #68	; 0x44
   218ac:	ldr	r3, [r2, r3]
   218ae:	mov	r5, r0
   218b0:	mov	r4, r1
   218b2:	ldr	r3, [r3, #0]
   218b4:	str	r3, [sp, #60]	; 0x3c
   218b6:	mov.w	r3, #0
   218ba:	ldrd	r2, r3, [r1, #40]	; 0x28
   218be:	cmp	r3, #0
   218c0:	it	eq
   218c2:	cmpeq.w	r2, #65536	; 0x10000
   218c6:	bcs.n	21900 <exclude_super_stripes@@Base+0x60>
   218c8:	ldrd	r0, r1, [r1, #80]	; 0x50
   218cc:	rsb	ip, r2, #65536	; 0x10000
   218d0:	str.w	ip, [sp, #52]	; 0x34
   218d4:	adds.w	r0, r0, ip
   218d8:	adc.w	r1, r1, #0
   218dc:	adds.w	r6, r2, #4294967295	; 0xffffffff
   218e0:	adc.w	r7, r3, #4294967295	; 0xffffffff
   218e4:	adds.w	r6, r6, ip
   218e8:	strd	r0, r1, [r4, #80]	; 0x50
   218ec:	adc.w	r7, r7, #0
   218f0:	movs	r1, #4
   218f2:	add.w	r0, r5, #160	; 0xa0
   218f6:	str	r1, [sp, #8]
   218f8:	strd	r6, r7, [sp]
   218fc:	bl	16864 <set_extent_bits@@Base>
   21900:	movs	r6, #0
   21902:	add.w	r7, r5, #160	; 0xa0
   21906:	mov.w	r2, #65536	; 0x10000
   2190a:	mov	r3, r6
   2190c:	add	r1, sp, #52	; 0x34
   2190e:	str	r1, [sp, #44]	; 0x2c
   21910:	ldr	r1, [sp, #44]	; 0x2c
   21912:	mov	r0, r5
   21914:	strd	r2, r3, [sp]
   21918:	ldrd	r2, r3, [r4, #40]	; 0x28
   2191c:	str	r1, [sp, #16]
   2191e:	add	r1, sp, #56	; 0x38
   21920:	str	r1, [sp, #12]
   21922:	add	r1, sp, #48	; 0x30
   21924:	str	r1, [sp, #8]
   21926:	bl	296a6 <btrfs_rmap_block@@Base>
   2192a:	mov	r3, r0
   2192c:	cbnz	r0, 21946 <exclude_super_stripes@@Base+0xa6>
   2192e:	ldr	r3, [sp, #56]	; 0x38
   21930:	ldr	r0, [sp, #48]	; 0x30
   21932:	subs	r2, r3, #1
   21934:	str	r2, [sp, #56]	; 0x38
   21936:	cbnz	r3, 2197a <exclude_super_stripes@@Base+0xda>
   21938:	adds	r6, #1
   2193a:	str	r3, [sp, #32]
   2193c:	blx	85dc <free@plt+0x4>
   21940:	cmp	r6, #3
   21942:	ldr	r3, [sp, #32]
   21944:	bne.n	2195a <exclude_super_stripes@@Base+0xba>
   21946:	ldr	r1, [pc, #236]	; (21a34 <exclude_super_stripes@@Base+0x194>)
   21948:	ldr	r2, [pc, #228]	; (21a30 <exclude_super_stripes@@Base+0x190>)
   2194a:	add	r1, pc
   2194c:	ldr	r2, [r1, r2]
   2194e:	ldr	r1, [r2, #0]
   21950:	ldr	r2, [sp, #60]	; 0x3c
   21952:	eors	r1, r2
   21954:	beq.n	21a22 <exclude_super_stripes@@Base+0x182>
   21956:	blx	86b8 <__stack_chk_fail@plt>
   2195a:	movs	r2, #12
   2195c:	mul.w	r1, r2, r6
   21960:	mov.w	r2, #16384	; 0x4000
   21964:	sub.w	r3, r1, #32
   21968:	rsb	r0, r1, #32
   2196c:	lsl.w	r3, r2, r3
   21970:	lsr.w	r0, r2, r0
   21974:	orrs	r3, r0
   21976:	lsls	r2, r1
   21978:	b.n	21910 <exclude_super_stripes@@Base+0x70>
   2197a:	add.w	r0, r0, r2, lsl #3
   2197e:	ldr.w	r1, [r4, #49]	; 0x31
   21982:	ldrd	r2, r3, [r4, #40]	; 0x28
   21986:	ldrd	sl, fp, [r0]
   2198a:	ldr.w	r0, [r4, #53]	; 0x35
   2198e:	adds	r1, r1, r2
   21990:	str	r1, [sp, #24]
   21992:	adc.w	r1, r0, r3
   21996:	str	r1, [sp, #28]
   21998:	ldrd	r0, r1, [sp, #24]
   2199c:	cmp	fp, r1
   2199e:	it	eq
   219a0:	cmpeq	sl, r0
   219a2:	bcs.n	2192e <exclude_super_stripes@@Base+0x8e>
   219a4:	ldr.w	ip, [sp, #52]	; 0x34
   219a8:	mov	r0, ip
   219aa:	asrs	r1, r0, #31
   219ac:	strd	r0, r1, [sp, #32]
   219b0:	adds.w	r0, sl, ip
   219b4:	adc.w	r1, fp, ip, asr #31
   219b8:	cmp	r3, r1
   219ba:	it	eq
   219bc:	cmpeq	r2, r0
   219be:	bcs.n	2192e <exclude_super_stripes@@Base+0x8e>
   219c0:	cmp	fp, r3
   219c2:	it	eq
   219c4:	cmpeq	sl, r2
   219c6:	bcs.n	21a00 <exclude_super_stripes@@Base+0x160>
   219c8:	subs.w	r8, r0, r2
   219cc:	sbc.w	r9, r1, r3
   219d0:	ldrd	r1, r0, [r4, #80]	; 0x50
   219d4:	adds.w	r1, r1, r8
   219d8:	adc.w	r0, r0, r9
   219dc:	strd	r1, r0, [r4, #80]	; 0x50
   219e0:	movs	r1, #4
   219e2:	str	r1, [sp, #8]
   219e4:	adds.w	r1, r2, r8
   219e8:	adc.w	r0, r3, r9
   219ec:	adds.w	r1, r1, #4294967295	; 0xffffffff
   219f0:	adc.w	r0, r0, #4294967295	; 0xffffffff
   219f4:	strd	r1, r0, [sp]
   219f8:	mov	r0, r7
   219fa:	bl	16864 <set_extent_bits@@Base>
   219fe:	b.n	2192e <exclude_super_stripes@@Base+0x8e>
   21a00:	ldr	r3, [sp, #24]
   21a02:	subs.w	r8, r3, sl
   21a06:	ldr	r3, [sp, #28]
   21a08:	sbc.w	r9, r3, fp
   21a0c:	ldrd	r2, r3, [sp, #32]
   21a10:	cmp	r3, r9
   21a12:	it	eq
   21a14:	cmpeq	r2, r8
   21a16:	itt	cc
   21a18:	movcc	r8, r2
   21a1a:	movcc	r9, r3
   21a1c:	mov	r2, sl
   21a1e:	mov	r3, fp
   21a20:	b.n	219d0 <exclude_super_stripes@@Base+0x130>
   21a22:	mov	r0, r3
   21a24:	add	sp, #68	; 0x44
   21a26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a2a:	nop
   21a2c:	adds	r4, #228	; 0xe4
   21a2e:	movs	r4, r0
   21a30:	lsls	r4, r4, #8
   21a32:	movs	r0, r0
   21a34:	adds	r4, #62	; 0x3e
   21a36:	movs	r4, r0

00021a38 <btrfs_read_block_groups@@Base>:
   21a38:	ldr	r2, [pc, #660]	; (21cd0 <btrfs_read_block_groups@@Base+0x298>)
   21a3a:	ldr	r3, [pc, #664]	; (21cd4 <btrfs_read_block_groups@@Base+0x29c>)
   21a3c:	add	r2, pc
   21a3e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a42:	sub	sp, #204	; 0xcc
   21a44:	ldr	r3, [r2, r3]
   21a46:	movs	r6, #0
   21a48:	add.w	r9, sp, #104	; 0x68
   21a4c:	ldr.w	r8, [r0, #24]
   21a50:	mov	r4, r0
   21a52:	mov	fp, r6
   21a54:	add	r0, sp, #128	; 0x80
   21a56:	ldr	r3, [r3, #0]
   21a58:	str	r3, [sp, #196]	; 0xc4
   21a5a:	mov.w	r3, #0
   21a5e:	movs	r3, #192	; 0xc0
   21a60:	strd	r6, r6, [sp, #64]	; 0x40
   21a64:	strb.w	r6, [sp, #73]	; 0x49
   21a68:	strb.w	r6, [sp, #74]	; 0x4a
   21a6c:	strb.w	r6, [sp, #75]	; 0x4b
   21a70:	strb.w	r6, [sp, #76]	; 0x4c
   21a74:	strb.w	r6, [sp, #77]	; 0x4d
   21a78:	strb.w	r6, [sp, #78]	; 0x4e
   21a7c:	strb.w	r6, [sp, #79]	; 0x4f
   21a80:	strb.w	r6, [sp, #80]	; 0x50
   21a84:	strb.w	r3, [sp, #72]	; 0x48
   21a88:	bl	17df0 <btrfs_init_path@@Base>
   21a8c:	str	r6, [sp, #52]	; 0x34
   21a8e:	add.w	sl, sp, #128	; 0x80
   21a92:	movs	r5, #0
   21a94:	add	r2, sp, #64	; 0x40
   21a96:	mov	r1, r8
   21a98:	mov	r3, sl
   21a9a:	mov	r0, r5
   21a9c:	strd	r5, r5, [sp]
   21aa0:	bl	1a1e4 <btrfs_search_slot@@Base>
   21aa4:	subs	r7, r0, #0
   21aa6:	blt.n	21ac8 <btrfs_read_block_groups@@Base+0x90>
   21aa8:	ldr	r0, [sp, #128]	; 0x80
   21aaa:	ldr	r2, [sp, #160]	; 0xa0
   21aac:	ldr.w	r3, [r0, #192]	; 0xc0
   21ab0:	cmp	r3, r2
   21ab2:	bhi.n	21ae4 <btrfs_read_block_groups@@Base+0xac>
   21ab4:	ldr.w	r0, [r8, #464]	; 0x1d0
   21ab8:	mov	r1, sl
   21aba:	strb.w	r5, [sp, #193]	; 0xc1
   21abe:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   21ac2:	subs	r7, r0, #0
   21ac4:	beq.n	21aa8 <btrfs_read_block_groups@@Base+0x70>
   21ac6:	bge.n	21b0c <btrfs_read_block_groups@@Base+0xd4>
   21ac8:	add	r0, sp, #128	; 0x80
   21aca:	bl	17e00 <btrfs_release_path@@Base>
   21ace:	ldr	r2, [pc, #520]	; (21cd8 <btrfs_read_block_groups@@Base+0x2a0>)
   21ad0:	ldr	r3, [pc, #512]	; (21cd4 <btrfs_read_block_groups@@Base+0x29c>)
   21ad2:	add	r2, pc
   21ad4:	ldr	r3, [r2, r3]
   21ad6:	ldr	r2, [r3, #0]
   21ad8:	ldr	r3, [sp, #196]	; 0xc4
   21ada:	eors	r2, r3
   21adc:	beq.w	21cc6 <btrfs_read_block_groups@@Base+0x28e>
   21ae0:	blx	86b8 <__stack_chk_fail@plt>
   21ae4:	mov	r1, r9
   21ae6:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   21aea:	ldrd	r6, r7, [sp, #104]	; 0x68
   21aee:	ldrd	r2, r3, [sp, #64]	; 0x40
   21af2:	cmp	r7, r3
   21af4:	it	eq
   21af6:	cmpeq	r6, r2
   21af8:	bcc.n	21b04 <btrfs_read_block_groups@@Base+0xcc>
   21afa:	ldrb.w	r3, [sp, #112]	; 0x70
   21afe:	cmp	r3, #192	; 0xc0
   21b00:	beq.w	21c8c <btrfs_read_block_groups@@Base+0x254>
   21b04:	ldr	r3, [sp, #160]	; 0xa0
   21b06:	adds	r3, #1
   21b08:	str	r3, [sp, #160]	; 0xa0
   21b0a:	b.n	21aa8 <btrfs_read_block_groups@@Base+0x70>
   21b0c:	movs	r7, #0
   21b0e:	b.n	21ac8 <btrfs_read_block_groups@@Base+0x90>
   21b10:	ldr.w	r2, [sp, #93]	; 0x5d
   21b14:	ldr.w	r3, [sp, #97]	; 0x61
   21b18:	orrs	r3, r2
   21b1a:	beq.n	21bb6 <btrfs_read_block_groups@@Base+0x17e>
   21b1c:	movs	r1, #120	; 0x78
   21b1e:	movs	r0, #1
   21b20:	blx	8544 <calloc@plt+0x4>
   21b24:	mov	r5, r0
   21b26:	cmp	r0, #0
   21b28:	beq.w	21c7e <btrfs_read_block_groups@@Base+0x246>
   21b2c:	movs	r2, #25
   21b2e:	mov	r0, r7
   21b30:	mla	r2, r2, sl, r7
   21b34:	movs	r3, #24
   21b36:	mov	r1, r9
   21b38:	add.w	r7, r5, #40	; 0x28
   21b3c:	ldr.w	r2, [r2, #214]	; 0xd6
   21b40:	adds	r2, #101	; 0x65
   21b42:	bl	172c2 <read_extent_buffer@@Base>
   21b46:	ldmia	r6!, {r0, r1, r2, r3}
   21b48:	stmia	r7!, {r0, r1, r2, r3}
   21b4a:	ldr	r3, [r6, #0]
   21b4c:	movs	r6, #0
   21b4e:	ldrd	r0, r1, [sp, #104]	; 0x68
   21b52:	strb	r3, [r7, #0]
   21b54:	ldr	r3, [sp, #52]	; 0x34
   21b56:	strd	r0, r1, [r5, #72]	; 0x48
   21b5a:	str	r6, [r5, #104]	; 0x68
   21b5c:	strd	r3, fp, [r5, #88]	; 0x58
   21b60:	ldrd	r2, r3, [sp, #120]	; 0x78
   21b64:	and.w	r1, r2, #1
   21b68:	strd	r1, r6, [sp, #24]
   21b6c:	ldrd	r0, r1, [sp, #24]
   21b70:	strd	r2, r3, [r5, #96]	; 0x60
   21b74:	orrs	r1, r0
   21b76:	bne.n	21bfc <btrfs_read_block_groups@@Base+0x1c4>
   21b78:	and.w	r1, r2, #2
   21b7c:	strd	r1, r6, [sp, #32]
   21b80:	ldrd	r0, r1, [sp, #32]
   21b84:	orrs	r1, r0
   21b86:	bne.n	21c00 <btrfs_read_block_groups@@Base+0x1c8>
   21b88:	and.w	r1, r2, #4
   21b8c:	strd	r1, r6, [sp, #40]	; 0x28
   21b90:	ldrd	r0, r1, [sp, #40]	; 0x28
   21b94:	orrs	r1, r0
   21b96:	it	ne
   21b98:	movne	r6, #4
   21b9a:	mov	r0, r4
   21b9c:	bl	1e520 <btrfs_create_tree@@Base+0x1fc>
   21ba0:	ldrd	r2, r3, [r5, #40]	; 0x28
   21ba4:	bl	29e68 <btrfs_chunk_readonly@@Base>
   21ba8:	subs	r7, r0, #0
   21baa:	bge.n	21c04 <btrfs_read_block_groups@@Base+0x1cc>
   21bac:	mov	r0, r5
   21bae:	blx	85dc <free@plt+0x4>
   21bb2:	adds	r3, r7, #2
   21bb4:	bne.n	21ac8 <btrfs_read_block_groups@@Base+0x90>
   21bb6:	ldr.w	r0, [sp, #73]	; 0x49
   21bba:	ldr.w	r1, [sp, #77]	; 0x4d
   21bbe:	ldrd	r3, r2, [sp, #64]	; 0x40
   21bc2:	orrs.w	r5, r0, r1
   21bc6:	bne.n	21c84 <btrfs_read_block_groups@@Base+0x24c>
   21bc8:	adds	r3, #1
   21bca:	adc.w	r2, r2, #0
   21bce:	add	r0, sp, #128	; 0x80
   21bd0:	strd	r3, r2, [sp, #64]	; 0x40
   21bd4:	movs	r2, #0
   21bd6:	strb.w	r2, [sp, #73]	; 0x49
   21bda:	strb.w	r2, [sp, #74]	; 0x4a
   21bde:	strb.w	r2, [sp, #75]	; 0x4b
   21be2:	strb.w	r2, [sp, #76]	; 0x4c
   21be6:	strb.w	r2, [sp, #77]	; 0x4d
   21bea:	strb.w	r2, [sp, #78]	; 0x4e
   21bee:	strb.w	r2, [sp, #79]	; 0x4f
   21bf2:	strb.w	r2, [sp, #80]	; 0x50
   21bf6:	bl	17e00 <btrfs_release_path@@Base>
   21bfa:	b.n	21a8e <btrfs_read_block_groups@@Base+0x56>
   21bfc:	movs	r6, #2
   21bfe:	b.n	21b9a <btrfs_read_block_groups@@Base+0x162>
   21c00:	movs	r6, #16
   21c02:	b.n	21b9a <btrfs_read_block_groups@@Base+0x162>
   21c04:	it	ne
   21c06:	movne	r3, #1
   21c08:	mov	r1, r5
   21c0a:	it	ne
   21c0c:	strne	r3, [r5, #108]	; 0x6c
   21c0e:	mov	r0, r4
   21c10:	bl	218a0 <exclude_super_stripes@@Base>
   21c14:	add	r3, sp, #60	; 0x3c
   21c16:	str	r3, [sp, #16]
   21c18:	mov	r0, r4
   21c1a:	ldrd	r2, r3, [r5, #72]	; 0x48
   21c1e:	strd	r2, r3, [sp, #8]
   21c22:	ldr.w	r2, [r5, #49]	; 0x31
   21c26:	ldr.w	r3, [r5, #53]	; 0x35
   21c2a:	strd	r2, r3, [sp]
   21c2e:	ldrd	r2, r3, [r5, #96]	; 0x60
   21c32:	bl	20a5c <update_space_info@@Base>
   21c36:	subs	r7, r0, #0
   21c38:	blt.n	21bac <btrfs_read_block_groups@@Base+0x174>
   21c3a:	ldr	r3, [sp, #60]	; 0x3c
   21c3c:	orr.w	r6, r6, #8
   21c40:	add.w	r0, r4, #128	; 0x80
   21c44:	str	r3, [r5, #60]	; 0x3c
   21c46:	ldrd	r2, r3, [r5, #40]	; 0x28
   21c4a:	str	r6, [sp, #8]
   21c4c:	ldr.w	r1, [r5, #49]	; 0x31
   21c50:	ldr.w	r6, [r5, #53]	; 0x35
   21c54:	adds	r1, r1, r2
   21c56:	adc.w	r6, r3, r6
   21c5a:	adds.w	r1, r1, #4294967295	; 0xffffffff
   21c5e:	adc.w	r6, r6, #4294967295	; 0xffffffff
   21c62:	strd	r1, r6, [sp]
   21c66:	mov	r6, r0
   21c68:	bl	16864 <set_extent_bits@@Base>
   21c6c:	movs	r3, #0
   21c6e:	str	r5, [sp, #0]
   21c70:	str	r3, [sp, #4]
   21c72:	mov	r0, r6
   21c74:	ldrd	r2, r3, [r5, #40]	; 0x28
   21c78:	bl	16b72 <set_state_private@@Base>
   21c7c:	b.n	21bb6 <btrfs_read_block_groups@@Base+0x17e>
   21c7e:	mvn.w	r7, #11
   21c82:	b.n	21ac8 <btrfs_read_block_groups@@Base+0x90>
   21c84:	adds	r3, r0, r3
   21c86:	adc.w	r2, r1, r2
   21c8a:	b.n	21bce <btrfs_read_block_groups@@Base+0x196>
   21c8c:	ldr	r2, [sp, #160]	; 0xa0
   21c8e:	add	r1, sp, #64	; 0x40
   21c90:	ldr	r0, [sp, #128]	; 0x80
   21c92:	add	r6, sp, #84	; 0x54
   21c94:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   21c98:	ldr	r7, [sp, #128]	; 0x80
   21c9a:	ldr.w	sl, [sp, #160]	; 0xa0
   21c9e:	mov	r1, r6
   21ca0:	mov	r0, r7
   21ca2:	mov	r2, sl
   21ca4:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   21ca8:	ldrb.w	r3, [sp, #92]	; 0x5c
   21cac:	cmp	r3, #192	; 0xc0
   21cae:	beq.w	21b10 <btrfs_read_block_groups@@Base+0xd8>
   21cb2:	ldr	r1, [pc, #40]	; (21cdc <btrfs_read_block_groups@@Base+0x2a4>)
   21cb4:	movw	r2, #2684	; 0xa7c
   21cb8:	ldr	r0, [pc, #36]	; (21ce0 <btrfs_read_block_groups@@Base+0x2a8>)
   21cba:	add	r1, pc
   21cbc:	addw	r1, r1, #526	; 0x20e
   21cc0:	add	r0, pc
   21cc2:	bl	1ed9c <btrfs_create_tree@@Base+0xa78>
   21cc6:	mov	r0, r7
   21cc8:	add	sp, #204	; 0xcc
   21cca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21cce:	nop
   21cd0:	adds	r3, #76	; 0x4c
   21cd2:	movs	r4, r0
   21cd4:	lsls	r4, r4, #8
   21cd6:	movs	r0, r0
   21cd8:	adds	r2, #182	; 0xb6
   21cda:	movs	r4, r0
   21cdc:	bkpt	0x0028
   21cde:	movs	r1, r0
   21ce0:	pop	{r2, r7}
   21ce2:	movs	r1, r0

00021ce4 <btrfs_add_block_group@@Base>:
   21ce4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ce8:	sub	sp, #52	; 0x34
   21cea:	mov	r5, r0
   21cec:	add.w	fp, r0, #128	; 0x80
   21cf0:	strd	r2, r3, [sp, #40]	; 0x28
   21cf4:	movs	r1, #120	; 0x78
   21cf6:	ldrd	r6, r3, [sp, #88]	; 0x58
   21cfa:	movs	r0, #1
   21cfc:	ldrd	r7, r8, [sp, #96]	; 0x60
   21d00:	ldr.w	sl, [pc, #320]	; 21e44 <btrfs_add_block_group@@Base+0x160>
   21d04:	str	r3, [sp, #36]	; 0x24
   21d06:	ldr	r3, [sp, #104]	; 0x68
   21d08:	add	sl, pc
   21d0a:	ldr.w	r9, [pc, #316]	; 21e48 <btrfs_add_block_group@@Base+0x164>
   21d0e:	addw	sl, sl, #547	; 0x223
   21d12:	str	r3, [sp, #28]
   21d14:	add	r9, pc
   21d16:	ldr	r3, [sp, #108]	; 0x6c
   21d18:	str	r3, [sp, #32]
   21d1a:	blx	8544 <calloc@plt+0x4>
   21d1e:	mov	r2, sl
   21d20:	mov	r1, r9
   21d22:	movw	r3, #2789	; 0xae5
   21d26:	mov	r4, r0
   21d28:	clz	r0, r0
   21d2c:	lsrs	r0, r0, #5
   21d2e:	str	r0, [sp, #0]
   21d30:	ldr	r0, [pc, #280]	; (21e4c <btrfs_add_block_group@@Base+0x168>)
   21d32:	add	r0, pc
   21d34:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21d38:	ldr	r3, [sp, #28]
   21d3a:	mov	r1, r4
   21d3c:	mov	r0, r5
   21d3e:	strd	r7, r8, [r4, #40]	; 0x28
   21d42:	str.w	r3, [r4, #49]	; 0x31
   21d46:	ldr	r3, [sp, #32]
   21d48:	str	r6, [r4, #96]	; 0x60
   21d4a:	str.w	r3, [r4, #53]	; 0x35
   21d4e:	movs	r3, #192	; 0xc0
   21d50:	strb.w	r3, [r4, #48]	; 0x30
   21d54:	ldr	r3, [sp, #40]	; 0x28
   21d56:	str	r3, [r4, #72]	; 0x48
   21d58:	ldr	r3, [sp, #44]	; 0x2c
   21d5a:	str	r3, [r4, #76]	; 0x4c
   21d5c:	ldr	r3, [sp, #36]	; 0x24
   21d5e:	str	r3, [r4, #100]	; 0x64
   21d60:	bl	218a0 <exclude_super_stripes@@Base>
   21d64:	add.w	r3, r4, #60	; 0x3c
   21d68:	str	r3, [sp, #16]
   21d6a:	mov	r0, r5
   21d6c:	ldr	r3, [sp, #40]	; 0x28
   21d6e:	str	r3, [sp, #8]
   21d70:	ldr	r3, [sp, #44]	; 0x2c
   21d72:	str	r3, [sp, #12]
   21d74:	ldr	r3, [sp, #28]
   21d76:	str	r3, [sp, #0]
   21d78:	ldr	r3, [sp, #32]
   21d7a:	str	r3, [sp, #4]
   21d7c:	ldrd	r2, r3, [r4, #96]	; 0x60
   21d80:	bl	20a5c <update_space_info@@Base>
   21d84:	mov	r2, sl
   21d86:	mov	r1, r9
   21d88:	mov.w	r3, #2800	; 0xaf0
   21d8c:	ldr.w	sl, [pc, #192]	; 21e50 <btrfs_add_block_group@@Base+0x16c>
   21d90:	ldr.w	r9, [pc, #192]	; 21e54 <btrfs_add_block_group@@Base+0x170>
   21d94:	add	sl, pc
   21d96:	addw	sl, sl, #547	; 0x223
   21d9a:	add	r9, pc
   21d9c:	str	r0, [sp, #0]
   21d9e:	ldr	r0, [pc, #184]	; (21e58 <btrfs_add_block_group@@Base+0x174>)
   21da0:	add	r0, pc
   21da2:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21da6:	mov.w	ip, #0
   21daa:	and.w	r2, r6, #1
   21dae:	mov	r3, ip
   21db0:	orrs	r3, r2
   21db2:	and.w	r0, r6, #4
   21db6:	mov	r1, ip
   21db8:	ite	eq
   21dba:	moveq	r3, ip
   21dbc:	movne	r3, #2
   21dbe:	orrs.w	r2, r0, r1
   21dc2:	and.w	r0, r6, #2
   21dc6:	it	ne
   21dc8:	orrne.w	r3, r3, #4
   21dcc:	movs	r1, #0
   21dce:	orrs.w	r2, r0, r1
   21dd2:	ldr	r2, [sp, #32]
   21dd4:	it	ne
   21dd6:	orrne.w	r3, r3, #16
   21dda:	mov	r0, fp
   21ddc:	orr.w	r3, r3, #8
   21de0:	str	r3, [sp, #8]
   21de2:	ldr	r3, [sp, #28]
   21de4:	adds.w	r3, r3, #4294967295	; 0xffffffff
   21de8:	adc.w	r2, r2, #4294967295	; 0xffffffff
   21dec:	adds	r3, r3, r7
   21dee:	adc.w	r2, r2, r8
   21df2:	strd	r3, r2, [sp]
   21df6:	mov	r2, r7
   21df8:	mov	r3, r8
   21dfa:	bl	16864 <set_extent_bits@@Base>
   21dfe:	ldr	r1, [pc, #92]	; (21e5c <btrfs_add_block_group@@Base+0x178>)
   21e00:	mov	r2, sl
   21e02:	movw	r3, #2806	; 0xaf6
   21e06:	add	r1, pc
   21e08:	str	r1, [sp, #28]
   21e0a:	str	r0, [sp, #0]
   21e0c:	mov	r0, r9
   21e0e:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21e12:	mov	r2, r7
   21e14:	movs	r3, #0
   21e16:	mov	r0, fp
   21e18:	str	r3, [sp, #4]
   21e1a:	mov	r3, r8
   21e1c:	str	r4, [sp, #0]
   21e1e:	bl	16b72 <set_state_private@@Base>
   21e22:	ldr	r1, [sp, #28]
   21e24:	mov	r2, sl
   21e26:	movw	r3, #2810	; 0xafa
   21e2a:	str	r0, [sp, #0]
   21e2c:	mov	r0, r9
   21e2e:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21e32:	mov	r0, r5
   21e34:	ldr	r3, [sp, #36]	; 0x24
   21e36:	mov	r2, r6
   21e38:	bl	1e520 <btrfs_create_tree@@Base+0x1fc>
   21e3c:	mov	r0, r4
   21e3e:	add	sp, #52	; 0x34
   21e40:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e44:	pop	{r1, r3, r4, r6, r7, pc}
   21e46:	movs	r1, r0
   21e48:			; <UNDEFINED> instruction: 0xb69d
   21e4a:	movs	r1, r0
   21e4c:	cbnz	r1, 21e94 <btrfs_make_block_group@@Base+0x34>
   21e4e:	movs	r1, r0
   21e50:	pop	{r1, r2, r3, r6, pc}
   21e52:	movs	r1, r0
   21e54:	strh	r2, [r1, #2]
   21e56:	movs	r1, r0
   21e58:	strh	r4, [r0, #2]
   21e5a:	movs	r1, r0
   21e5c:	push	{r0, r1, r3, r5, r7, lr}
   21e5e:	movs	r1, r0

00021e60 <btrfs_make_block_group@@Base>:
   21e60:	push	{r4, r5, r6, r7, lr}
   21e62:	mov	r4, r0
   21e64:	ldr	r5, [pc, #144]	; (21ef8 <btrfs_make_block_group@@Base+0x98>)
   21e66:	sub	sp, #68	; 0x44
   21e68:	mov	r0, r1
   21e6a:	ldr	r1, [pc, #144]	; (21efc <btrfs_make_block_group@@Base+0x9c>)
   21e6c:	add	r5, pc
   21e6e:	ldrd	r6, r7, [sp, #104]	; 0x68
   21e72:	ldr	r1, [r5, r1]
   21e74:	movs	r5, #0
   21e76:	ldr	r1, [r1, #0]
   21e78:	str	r1, [sp, #60]	; 0x3c
   21e7a:	mov.w	r1, #0
   21e7e:	ldr	r1, [r0, #24]
   21e80:	strd	r6, r7, [sp, #16]
   21e84:	ldrd	r6, r7, [sp, #96]	; 0x60
   21e88:	str	r1, [sp, #28]
   21e8a:	strd	r6, r7, [sp, #8]
   21e8e:	ldrd	r6, r7, [sp, #88]	; 0x58
   21e92:	strd	r6, r7, [sp]
   21e96:	bl	21ce4 <btrfs_add_block_group@@Base>
   21e9a:	ldr	r1, [sp, #28]
   21e9c:	ldr	r3, [r0, #72]	; 0x48
   21e9e:	add.w	r2, r0, #40	; 0x28
   21ea2:	str	r3, [sp, #36]	; 0x24
   21ea4:	ldr	r3, [r0, #76]	; 0x4c
   21ea6:	str	r3, [sp, #40]	; 0x28
   21ea8:	ldr	r3, [r0, #96]	; 0x60
   21eaa:	str	r3, [sp, #52]	; 0x34
   21eac:	ldr	r3, [r0, #100]	; 0x64
   21eae:	mov	r0, r4
   21eb0:	str	r3, [sp, #56]	; 0x38
   21eb2:	mov.w	r3, #256	; 0x100
   21eb6:	strd	r3, r5, [sp, #44]	; 0x2c
   21eba:	movs	r3, #24
   21ebc:	str	r3, [sp, #0]
   21ebe:	add	r3, sp, #36	; 0x24
   21ec0:	bl	1b270 <btrfs_insert_item@@Base>
   21ec4:	ldr	r2, [pc, #56]	; (21f00 <btrfs_make_block_group@@Base+0xa0>)
   21ec6:	ldr	r1, [pc, #60]	; (21f04 <btrfs_make_block_group@@Base+0xa4>)
   21ec8:	movw	r3, #2833	; 0xb11
   21ecc:	add	r2, pc
   21ece:	addw	r2, r2, #569	; 0x239
   21ed2:	add	r1, pc
   21ed4:	str	r0, [sp, #0]
   21ed6:	ldr	r0, [pc, #48]	; (21f08 <btrfs_make_block_group@@Base+0xa8>)
   21ed8:	add	r0, pc
   21eda:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21ede:	ldr	r2, [pc, #44]	; (21f0c <btrfs_make_block_group@@Base+0xac>)
   21ee0:	ldr	r3, [pc, #24]	; (21efc <btrfs_make_block_group@@Base+0x9c>)
   21ee2:	add	r2, pc
   21ee4:	ldr	r3, [r2, r3]
   21ee6:	ldr	r2, [r3, #0]
   21ee8:	ldr	r3, [sp, #60]	; 0x3c
   21eea:	eors	r2, r3
   21eec:	beq.n	21ef2 <btrfs_make_block_group@@Base+0x92>
   21eee:	blx	86b8 <__stack_chk_fail@plt>
   21ef2:	mov	r0, r5
   21ef4:	add	sp, #68	; 0x44
   21ef6:	pop	{r4, r5, r6, r7, pc}
   21ef8:	cmp	r7, #28
   21efa:	movs	r4, r0
   21efc:	lsls	r4, r4, #8
   21efe:	movs	r0, r0
   21f00:	pop	{r1, r2, r4}
   21f02:	movs	r1, r0
   21f04:	push	{r0, r1, r2, r3, r4, r6, r7}
   21f06:	movs	r1, r0
   21f08:	ldrb	r4, [r1, #28]
   21f0a:	movs	r1, r0
   21f0c:	cmp	r6, #166	; 0xa6
   21f0e:	movs	r4, r0
   21f10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f14:	mov	r5, r1
   21f16:	ldr	r1, [pc, #412]	; (220b4 <btrfs_make_block_group@@Base+0x254>)
   21f18:	sub	sp, #76	; 0x4c
   21f1a:	mov	r7, r2
   21f1c:	ldr	r2, [pc, #408]	; (220b8 <btrfs_make_block_group@@Base+0x258>)
   21f1e:	add	r1, pc
   21f20:	mov	r9, r3
   21f22:	ldrd	r6, r3, [sp, #112]	; 0x70
   21f26:	mov	r4, r0
   21f28:	ldr	r2, [r1, r2]
   21f2a:	mov	r0, r5
   21f2c:	ldr	r2, [r2, #0]
   21f2e:	str	r2, [sp, #68]	; 0x44
   21f30:	mov.w	r2, #0
   21f34:	mov	r2, r6
   21f36:	str	r3, [sp, #36]	; 0x24
   21f38:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   21f3c:	ldr	r3, [sp, #36]	; 0x24
   21f3e:	str	r0, [sp, #44]	; 0x2c
   21f40:	cbnz	r0, 21f74 <btrfs_make_block_group@@Base+0x114>
   21f42:	movs	r1, #0
   21f44:	movs	r0, #0
   21f46:	add	r2, sp, #44	; 0x2c
   21f48:	strd	r0, r1, [sp, #8]
   21f4c:	strd	r0, r1, [sp]
   21f50:	mov	r0, r5
   21f52:	str	r2, [sp, #16]
   21f54:	mov	r2, r6
   21f56:	bl	20a5c <update_space_info@@Base>
   21f5a:	ldr	r2, [pc, #352]	; (220bc <btrfs_make_block_group@@Base+0x25c>)
   21f5c:	ldr	r1, [pc, #352]	; (220c0 <btrfs_make_block_group@@Base+0x260>)
   21f5e:	mov.w	r3, #1712	; 0x6b0
   21f62:	add	r2, pc
   21f64:	add.w	r2, r2, #592	; 0x250
   21f68:	add	r1, pc
   21f6a:	str	r0, [sp, #0]
   21f6c:	ldr	r0, [pc, #340]	; (220c4 <btrfs_make_block_group@@Base+0x264>)
   21f6e:	add	r0, pc
   21f70:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21f74:	ldr.w	sl, [sp, #44]	; 0x2c
   21f78:	ldr	r2, [pc, #332]	; (220c8 <btrfs_make_block_group@@Base+0x268>)
   21f7a:	ldr	r1, [pc, #336]	; (220cc <btrfs_make_block_group@@Base+0x26c>)
   21f7c:	clz	r3, sl
   21f80:	ldr	r0, [pc, #332]	; (220d0 <btrfs_make_block_group@@Base+0x270>)
   21f82:	add	r2, pc
   21f84:	lsrs	r3, r3, #5
   21f86:	add.w	r2, r2, #592	; 0x250
   21f8a:	str	r3, [sp, #0]
   21f8c:	add	r1, pc
   21f8e:	add	r0, pc
   21f90:	movw	r3, #1714	; 0x6b2
   21f94:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   21f98:	ldr.w	r8, [sl, #40]	; 0x28
   21f9c:	cmp.w	r8, #0
   21fa0:	bne.n	2203e <btrfs_make_block_group@@Base+0x1de>
   21fa2:	ldrd	r0, r1, [sl, #8]
   21fa6:	movs	r2, #7
   21fa8:	bl	31a68 <div_factor@@Base>
   21fac:	mov	sl, r0
   21fae:	ldr	r0, [sp, #44]	; 0x2c
   21fb0:	mov	fp, r1
   21fb2:	ldr	r2, [r0, #24]
   21fb4:	ldrd	r3, r1, [r0, #16]
   21fb8:	adds	r3, r3, r2
   21fba:	ldr	r2, [r0, #28]
   21fbc:	adc.w	r1, r2, r1
   21fc0:	ldr	r2, [r0, #32]
   21fc2:	adds	r3, r3, r2
   21fc4:	ldr	r2, [r0, #36]	; 0x24
   21fc6:	adc.w	r1, r2, r1
   21fca:	adds	r3, r3, r7
   21fcc:	str	r3, [sp, #24]
   21fce:	adc.w	r3, r1, r9
   21fd2:	str	r3, [sp, #28]
   21fd4:	ldrd	r2, r3, [sp, #24]
   21fd8:	cmp	r3, fp
   21fda:	it	eq
   21fdc:	cmpeq	r2, sl
   21fde:	bcc.n	2203e <btrfs_make_block_group@@Base+0x1de>
   21fe0:	ldrb.w	r1, [r5, #365]	; 0x16d
   21fe4:	lsls	r2, r1, #31
   21fe6:	bpl.n	21ff2 <btrfs_make_block_group@@Base+0x192>
   21fe8:	and.w	r2, r6, #4
   21fec:	mov	r3, r8
   21fee:	orrs	r3, r2
   21ff0:	bne.n	2203e <btrfs_make_block_group@@Base+0x1de>
   21ff2:	lsls	r3, r1, #30
   21ff4:	bpl.n	22000 <btrfs_make_block_group@@Base+0x1a0>
   21ff6:	and.w	r2, r6, #2
   21ffa:	movs	r3, #0
   21ffc:	orrs	r3, r2
   21ffe:	bne.n	2203e <btrfs_make_block_group@@Base+0x1de>
   22000:	ldrb.w	r3, [r4, #33]	; 0x21
   22004:	ands.w	r8, r3, #1
   22008:	bne.n	2203e <btrfs_make_block_group@@Base+0x1de>
   2200a:	orr.w	r3, r3, #1
   2200e:	strb.w	r3, [r4, #33]	; 0x21
   22012:	ldrd	r2, r3, [r0]
   22016:	mov	r1, r5
   22018:	mov	r0, r4
   2201a:	strd	r2, r3, [sp]
   2201e:	add	r3, sp, #56	; 0x38
   22020:	add	r2, sp, #48	; 0x30
   22022:	bl	287c4 <btrfs_alloc_chunk@@Base>
   22026:	cmn.w	r0, #28
   2202a:	bne.n	22052 <btrfs_make_block_group@@Base+0x1f2>
   2202c:	ldr	r3, [sp, #44]	; 0x2c
   2202e:	movs	r2, #1
   22030:	str	r2, [r3, #40]	; 0x28
   22032:	ldrb.w	r3, [r4, #33]	; 0x21
   22036:	bfi	r3, r8, #0, #1
   2203a:	strb.w	r3, [r4, #33]	; 0x21
   2203e:	ldr	r2, [pc, #148]	; (220d4 <btrfs_make_block_group@@Base+0x274>)
   22040:	ldr	r3, [pc, #116]	; (220b8 <btrfs_make_block_group@@Base+0x258>)
   22042:	add	r2, pc
   22044:	ldr	r3, [r2, r3]
   22046:	ldr	r2, [r3, #0]
   22048:	ldr	r3, [sp, #68]	; 0x44
   2204a:	eors	r2, r3
   2204c:	beq.n	220ac <btrfs_make_block_group@@Base+0x24c>
   2204e:	blx	86b8 <__stack_chk_fail@plt>
   22052:	ldr.w	r9, [pc, #132]	; 220d8 <btrfs_make_block_group@@Base+0x278>
   22056:	movw	r3, #1751	; 0x6d7
   2205a:	ldr	r7, [pc, #128]	; (220dc <btrfs_make_block_group@@Base+0x27c>)
   2205c:	ldr	r6, [pc, #128]	; (220e0 <btrfs_make_block_group@@Base+0x280>)
   2205e:	add	r9, pc
   22060:	add.w	r9, r9, #592	; 0x250
   22064:	add	r7, pc
   22066:	add	r6, pc
   22068:	str	r0, [sp, #0]
   2206a:	mov	r2, r9
   2206c:	mov	r1, r7
   2206e:	mov	r0, r6
   22070:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22074:	ldrd	r2, r3, [sp, #56]	; 0x38
   22078:	mov	r1, r5
   2207a:	mov	r0, r4
   2207c:	strd	r2, r3, [sp, #16]
   22080:	ldrd	r2, r3, [sp, #48]	; 0x30
   22084:	strd	r2, r3, [sp, #8]
   22088:	ldr	r3, [sp, #44]	; 0x2c
   2208a:	ldrd	r2, r3, [r3]
   2208e:	strd	r2, r3, [sp]
   22092:	movs	r2, #0
   22094:	movs	r3, #0
   22096:	bl	21e60 <btrfs_make_block_group@@Base>
   2209a:	movw	r3, #1755	; 0x6db
   2209e:	mov	r2, r9
   220a0:	mov	r1, r7
   220a2:	str	r0, [sp, #0]
   220a4:	mov	r0, r6
   220a6:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   220aa:	b.n	22032 <btrfs_make_block_group@@Base+0x1d2>
   220ac:	movs	r0, #0
   220ae:	add	sp, #76	; 0x4c
   220b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220b4:	cmp	r6, #106	; 0x6a
   220b6:	movs	r4, r0
   220b8:	lsls	r4, r4, #8
   220ba:	movs	r0, r0
   220bc:	cbnz	r0, 22120 <btrfs_reserve_extent@@Base+0x3c>
   220be:	movs	r1, r0
   220c0:	push	{r0, r3, r6}
   220c2:	movs	r1, r0
   220c4:	ldrb	r6, [r6, #25]
   220c6:	movs	r1, r0
   220c8:	cbnz	r0, 22124 <btrfs_reserve_extent@@Base+0x40>
   220ca:	movs	r1, r0
   220cc:	push	{r0, r2, r5}
   220ce:	movs	r1, r0
   220d0:	cbnz	r5, 2210a <btrfs_reserve_extent@@Base+0x26>
   220d2:	movs	r1, r0
   220d4:	cmp	r5, #70	; 0x46
   220d6:	movs	r4, r0
   220d8:	hlt	0x0004
   220da:	movs	r1, r0
   220dc:	cbz	r5, 22132 <btrfs_reserve_extent@@Base+0x4e>
   220de:	movs	r1, r0
   220e0:	ldrb	r6, [r7, #21]
   220e2:	movs	r1, r0

000220e4 <btrfs_reserve_extent@@Base>:
   220e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220e8:	mov	sl, r2
   220ea:	vpush	{d8-d10}
   220ee:	mov	r6, r1
   220f0:	ldr.w	r2, [pc, #2256]	; 229c4 <btrfs_reserve_extent@@Base+0x8e0>
   220f4:	mov	fp, r3
   220f6:	ldr.w	r1, [pc, #2256]	; 229c8 <btrfs_reserve_extent@@Base+0x8e4>
   220fa:	add	r2, pc
   220fc:	sub	sp, #252	; 0xfc
   220fe:	add	r1, pc
   22100:	ldr.w	r5, [r6, #464]	; 0x1d0
   22104:	ldr	r3, [sp, #312]	; 0x138
   22106:	str	r2, [sp, #168]	; 0xa8
   22108:	ldr.w	r2, [pc, #2240]	; 229cc <btrfs_reserve_extent@@Base+0x8e8>
   2210c:	str	r3, [sp, #172]	; 0xac
   2210e:	ldrb.w	r3, [sp, #340]	; 0x154
   22112:	str	r0, [sp, #60]	; 0x3c
   22114:	ldr	r2, [r1, r2]
   22116:	ldrd	r8, r9, [sp, #320]	; 0x140
   2211a:	ldr	r7, [sp, #336]	; 0x150
   2211c:	ldr	r2, [r2, #0]
   2211e:	str	r2, [sp, #244]	; 0xf4
   22120:	mov.w	r2, #0
   22124:	cmp	r3, #0
   22126:	beq.w	22614 <btrfs_reserve_extent@@Base+0x530>
   2212a:	ldrd	r3, r4, [r5, #248]	; 0xf8
   2212e:	ldrd	r1, r2, [r5, #272]	; 0x110
   22132:	ands	r3, r1
   22134:	orr.w	r3, r3, #1
   22138:	str	r3, [sp, #40]	; 0x28
   2213a:	ands	r4, r2
   2213c:	ldr.w	r3, [r6, #488]	; 0x1e8
   22140:	cbnz	r3, 22152 <btrfs_reserve_extent@@Base+0x6e>
   22142:	ldr.w	r3, [r6, #451]	; 0x1c3
   22146:	ldr.w	r2, [r6, #447]	; 0x1bf
   2214a:	cmp	r3, #0
   2214c:	it	eq
   2214e:	cmpeq	r2, #7
   22150:	bne.n	221c8 <btrfs_reserve_extent@@Base+0xe4>
   22152:	ldr	r1, [sp, #40]	; 0x28
   22154:	movs	r3, #0
   22156:	and.w	r2, r1, #4
   2215a:	orrs	r3, r2
   2215c:	bne.n	22192 <btrfs_reserve_extent@@Base+0xae>
   2215e:	movs	r2, #4
   22160:	movs	r3, #0
   22162:	mov	r1, r5
   22164:	strd	r2, r3, [sp]
   22168:	ldr	r0, [sp, #60]	; 0x3c
   2216a:	mov	r2, sl
   2216c:	mov	r3, fp
   2216e:	bl	21f10 <btrfs_make_block_group@@Base+0xb0>
   22172:	ldr.w	r2, [pc, #2140]	; 229d0 <btrfs_reserve_extent@@Base+0x8ec>
   22176:	ldr.w	r1, [pc, #2140]	; 229d4 <btrfs_reserve_extent@@Base+0x8f0>
   2217a:	movw	r3, #2360	; 0x938
   2217e:	add	r2, pc
   22180:	addw	r2, r2, #607	; 0x25f
   22184:	add	r1, pc
   22186:	str	r0, [sp, #0]
   22188:	ldr.w	r0, [pc, #2124]	; 229d8 <btrfs_reserve_extent@@Base+0x8f4>
   2218c:	add	r0, pc
   2218e:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22192:	ldr	r3, [sp, #40]	; 0x28
   22194:	adds.w	r2, sl, #2097152	; 0x200000
   22198:	mov	r1, r5
   2219a:	ldr	r0, [sp, #60]	; 0x3c
   2219c:	strd	r3, r4, [sp]
   221a0:	adc.w	r3, fp, #0
   221a4:	bl	21f10 <btrfs_make_block_group@@Base+0xb0>
   221a8:	ldr.w	r2, [pc, #2096]	; 229dc <btrfs_reserve_extent@@Base+0x8f8>
   221ac:	ldr.w	r1, [pc, #2096]	; 229e0 <btrfs_reserve_extent@@Base+0x8fc>
   221b0:	movw	r3, #2364	; 0x93c
   221b4:	add	r2, pc
   221b6:	addw	r2, r2, #607	; 0x25f
   221ba:	add	r1, pc
   221bc:	str	r0, [sp, #0]
   221be:	ldr.w	r0, [pc, #2084]	; 229e4 <btrfs_reserve_extent@@Base+0x900>
   221c2:	add	r0, pc
   221c4:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   221c8:	ldr.w	r2, [r5, #388]	; 0x184
   221cc:	movs	r3, #0
   221ce:	ldr.w	r4, [pc, #2072]	; 229e8 <btrfs_reserve_extent@@Base+0x904>
   221d2:	cmp	fp, r3
   221d4:	it	eq
   221d6:	cmpeq	sl, r2
   221d8:	ldr.w	r1, [pc, #2064]	; 229ec <btrfs_reserve_extent@@Base+0x908>
   221dc:	ldr.w	r0, [pc, #2064]	; 229f0 <btrfs_reserve_extent@@Base+0x90c>
   221e0:	add	r4, pc
   221e2:	ite	cc
   221e4:	movcc	r3, #1
   221e6:	movcs	r3, #0
   221e8:	add	r1, pc
   221ea:	add	r0, pc
   221ec:	addw	r2, r4, #607	; 0x25f
   221f0:	str	r3, [sp, #0]
   221f2:	movw	r3, #2367	; 0x93f
   221f6:	str	r1, [sp, #32]
   221f8:	str	r0, [sp, #24]
   221fa:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   221fe:	ldr	r3, [sp, #60]	; 0x3c
   22200:	ldr	r1, [sp, #32]
   22202:	ldr	r0, [sp, #24]
   22204:	ldrd	r2, r3, [r3, #16]
   22208:	strd	r2, r3, [sp, #80]	; 0x50
   2220c:	ldr	r3, [sp, #60]	; 0x3c
   2220e:	ldrd	r2, r3, [r3, #24]
   22212:	strd	r2, r3, [sp, #88]	; 0x58
   22216:	ldr.w	r3, [r6, #464]	; 0x1d0
   2221a:	ldr	r3, [r3, #24]
   2221c:	str	r3, [sp, #44]	; 0x2c
   2221e:	ldr.w	r3, [r3, #464]	; 0x1d0
   22222:	ldr.w	r2, [r3, #388]	; 0x184
   22226:	vmov	s16, r3
   2222a:	movs	r3, #0
   2222c:	cmp	fp, r3
   2222e:	it	eq
   22230:	cmpeq	sl, r2
   22232:	add.w	r2, r4, #628	; 0x274
   22236:	ite	cc
   22238:	movcc	r3, #1
   2223a:	movcs	r3, #0
   2223c:	str	r3, [sp, #0]
   2223e:	mov.w	r3, #2208	; 0x8a0
   22242:	bl	1e67c <btrfs_create_tree@@Base+0x358>
   22246:	movs	r3, #168	; 0xa8
   22248:	strb	r3, [r7, #8]
   2224a:	orrs.w	r3, r8, r9
   2224e:	beq.w	22642 <btrfs_reserve_extent@@Base+0x55e>
   22252:	vmov	r0, s16
   22256:	mov	r2, r8
   22258:	mov	r3, r9
   2225a:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   2225e:	mov	r1, r0
   22260:	cbnz	r0, 2226a <btrfs_reserve_extent@@Base+0x186>
   22262:	mov.w	r8, #0
   22266:	mov.w	r9, #0
   2226a:	ldr	r3, [sp, #40]	; 0x28
   2226c:	mov	r2, r8
   2226e:	str	r3, [sp, #0]
   22270:	mov	r3, r9
   22272:	ldr	r0, [sp, #44]	; 0x2c
   22274:	ldr.w	r0, [r0, #464]	; 0x1d0
   22278:	bl	1f168 <btrfs_lookup_block_group@@Base+0x30c>
   2227c:	ldr	r3, [sp, #172]	; 0xac
   2227e:	movs	r2, #0
   22280:	adds.w	r3, sl, r3
   22284:	str	r3, [sp, #112]	; 0x70
   22286:	movs	r3, #0
   22288:	strd	r2, r3, [sp, #24]
   2228c:	movs	r3, #0
   2228e:	str	r3, [sp, #56]	; 0x38
   22290:	str	r3, [sp, #100]	; 0x64
   22292:	ldr.w	r3, [pc, #1888]	; 229f4 <btrfs_reserve_extent@@Base+0x910>
   22296:	add	r3, pc
   22298:	str	r3, [sp, #180]	; 0xb4
   2229a:	adds.w	r3, sl, #4294967295	; 0xffffffff
   2229e:	str	r3, [sp, #184]	; 0xb8
   222a0:	adc.w	r3, fp, #4294967295	; 0xffffffff
   222a4:	str	r3, [sp, #188]	; 0xbc
   222a6:	mov	r4, r0
   222a8:	ldr	r3, [sp, #44]	; 0x2c
   222aa:	movs	r2, #0
   222ac:	ldr	r1, [sp, #24]
   222ae:	ldr.w	r3, [r3, #464]	; 0x1d0
   222b2:	ldr.w	r3, [r3, #392]	; 0x188
   222b6:	adds.w	r3, r3, #4294967295	; 0xffffffff
   222ba:	adc.w	r2, r2, #4294967295	; 0xffffffff
   222be:	adds.w	r0, r1, #4294967295	; 0xffffffff
   222c2:	ldr	r1, [sp, #28]
   222c4:	orr.w	r3, r3, r0
   222c8:	adc.w	r1, r1, #4294967295	; 0xffffffff
   222cc:	adds	r3, #1
   222ce:	orr.w	r2, r2, r1
   222d2:	str	r3, [sp, #48]	; 0x30
   222d4:	adc.w	r3, r2, #0
   222d8:	str	r3, [sp, #52]	; 0x34
   222da:	cbnz	r4, 222fa <btrfs_reserve_extent@@Base+0x216>
   222dc:	vmov	r0, s16
   222e0:	ldrd	r2, r3, [sp, #48]	; 0x30
   222e4:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   222e8:	mov	r4, r0
   222ea:	cbnz	r0, 222fa <btrfs_reserve_extent@@Base+0x216>
   222ec:	vmov	r0, s16
   222f0:	movs	r2, #0
   222f2:	movs	r3, #0
   222f4:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   222f8:	mov	r4, r0
   222fa:	movs	r2, #0
   222fc:	movs	r3, #0
   222fe:	ldr	r1, [sp, #112]	; 0x70
   22300:	strd	r2, r3, [sp, #208]	; 0xd0
   22304:	strd	r2, r3, [sp, #216]	; 0xd8
   22308:	cmp	r4, #0
   2230a:	beq.w	2274e <btrfs_reserve_extent@@Base+0x66a>
   2230e:	ldrd	r2, r3, [sp, #48]	; 0x30
   22312:	strd	r2, r3, [sp, #24]
   22316:	movs	r3, #0
   22318:	mov	r2, r1
   2231a:	str	r3, [sp, #116]	; 0x74
   2231c:	asrs	r3, r1, #31
   2231e:	strd	r2, r3, [sp, #104]	; 0x68
   22322:	ldr	r3, [r4, #104]	; 0x68
   22324:	cmp	r3, #0
   22326:	bne.w	224b0 <btrfs_reserve_extent@@Base+0x3cc>
   2232a:	ldr	r3, [sp, #44]	; 0x2c
   2232c:	ldr.w	r3, [r3, #464]	; 0x1d0
   22330:	ldr	r3, [r3, #24]
   22332:	str	r3, [sp, #96]	; 0x60
   22334:	ldr.w	r3, [r3, #464]	; 0x1d0
   22338:	mov	r9, r3
   2233a:	bl	17df8 <btrfs_alloc_path@@Base>
   2233e:	mov	r6, r0
   22340:	cmp	r0, #0
   22342:	beq.w	22756 <btrfs_reserve_extent@@Base+0x672>
   22346:	movs	r3, #2
   22348:	strb.w	r3, [r0, #64]	; 0x40
   2234c:	ldrd	r2, r3, [r4, #40]	; 0x28
   22350:	mov.w	r8, #0
   22354:	ldr	r1, [sp, #96]	; 0x60
   22356:	cmp	r3, #0
   22358:	strd	r8, r8, [sp]
   2235c:	it	eq
   2235e:	cmpeq.w	r2, #65536	; 0x10000
   22362:	strd	r2, r3, [sp, #32]
   22366:	strb.w	r8, [sp, #233]	; 0xe9
   2236a:	ittt	cc
   2236c:	movcc.w	r2, #65536	; 0x10000
   22370:	movcc	r3, #0
   22372:	strdcc	r2, r3, [sp, #32]
   22376:	ldrd	r2, r3, [sp, #32]
   2237a:	strb.w	r8, [sp, #234]	; 0xea
   2237e:	strb.w	r8, [sp, #235]	; 0xeb
   22382:	strd	r2, r3, [sp, #224]	; 0xe0
   22386:	add	r2, sp, #224	; 0xe0
   22388:	mov	r3, r0
   2238a:	mov	r0, r8
   2238c:	strb.w	r8, [sp, #236]	; 0xec
   22390:	strb.w	r8, [sp, #237]	; 0xed
   22394:	strb.w	r8, [sp, #238]	; 0xee
   22398:	strb.w	r8, [sp, #239]	; 0xef
   2239c:	strb.w	r8, [sp, #240]	; 0xf0
   223a0:	strb.w	r8, [sp, #232]	; 0xe8
   223a4:	str	r2, [sp, #176]	; 0xb0
   223a6:	bl	1a1e4 <btrfs_search_slot@@Base>
   223aa:	cmp	r0, r8
   223ac:	blt.n	224aa <btrfs_reserve_extent@@Base+0x3c6>
   223ae:	ldr	r2, [sp, #176]	; 0xb0
   223b0:	mov	r3, r9
   223b2:	adds	r3, #96	; 0x60
   223b4:	str.w	r8, [sp, #176]	; 0xb0
   223b8:	vmov	s17, r3
   223bc:	vmov	s18, r2
   223c0:	ldr	r0, [r6, #0]
   223c2:	ldr	r2, [r6, #32]
   223c4:	ldr.w	r3, [r0, #192]	; 0xc0
   223c8:	cmp	r3, r2
   223ca:	bhi.w	22650 <btrfs_reserve_extent@@Base+0x56c>
   223ce:	ldr	r3, [sp, #176]	; 0xb0
   223d0:	mov	r1, r6
   223d2:	strb.w	r3, [r6, #65]	; 0x41
   223d6:	ldr	r3, [sp, #96]	; 0x60
   223d8:	ldr.w	r0, [r3, #464]	; 0x1d0
   223dc:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   223e0:	cmp	r0, #0
   223e2:	blt.n	224aa <btrfs_reserve_extent@@Base+0x3c6>
   223e4:	beq.n	223c0 <btrfs_reserve_extent@@Base+0x2dc>
   223e6:	ldr.w	r3, [r4, #49]	; 0x31
   223ea:	ldrd	r1, r0, [r4, #40]	; 0x28
   223ee:	ldr.w	r2, [r4, #53]	; 0x35
   223f2:	adds	r3, r3, r1
   223f4:	str	r3, [sp, #72]	; 0x48
   223f6:	adc.w	r3, r2, r0
   223fa:	str	r3, [sp, #76]	; 0x4c
   223fc:	ldrd	r0, r1, [sp, #72]	; 0x48
   22400:	ldrd	r2, r3, [sp, #32]
   22404:	cmp	r3, r1
   22406:	it	eq
   22408:	cmpeq	r2, r0
   2240a:	bcs.n	22428 <btrfs_reserve_extent@@Base+0x344>
   2240c:	ldr	r3, [sp, #72]	; 0x48
   2240e:	vmov	r0, s17
   22412:	adds.w	r2, r3, #4294967295	; 0xffffffff
   22416:	ldr	r3, [sp, #76]	; 0x4c
   22418:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2241c:	strd	r2, r3, [sp]
   22420:	ldrd	r2, r3, [sp, #32]
   22424:	bl	16a90 <set_extent_dirty@@Base>
   22428:	ldr	r1, [sp, #180]	; 0xb4
   2242a:	mov.w	r8, #12
   2242e:	ldr	r3, [sp, #96]	; 0x60
   22430:	mov.w	r2, #65536	; 0x10000
   22434:	addw	r1, r1, #645	; 0x285
   22438:	vmov	s18, r1
   2243c:	ldr.w	r1, [pc, #1464]	; 229f8 <btrfs_reserve_extent@@Base+0x914>
   22440:	ldr.w	r9, [r3, #464]	; 0x1d0
   22444:	add	r1, pc
   22446:	add.w	r3, r9, #96	; 0x60
   2244a:	vmov	s19, r1
   2244e:	ldr.w	r1, [pc, #1452]	; 229fc <btrfs_reserve_extent@@Base+0x918>
   22452:	vmov	s17, r3
   22456:	movs	r3, #0
   22458:	add	r1, pc
   2245a:	vmov	s20, r1
   2245e:	add	r1, sp, #200	; 0xc8
   22460:	strd	r2, r3, [sp]
   22464:	str	r1, [sp, #16]
   22466:	mov	r0, r9
   22468:	add	r1, sp, #204	; 0xcc
   2246a:	str	r1, [sp, #12]
   2246c:	add	r1, sp, #196	; 0xc4
   2246e:	str	r1, [sp, #8]
   22470:	ldrd	r2, r3, [r4, #40]	; 0x28
   22474:	bl	296a6 <btrfs_rmap_block@@Base>
   22478:	vmov	r2, s18
   2247c:	vmov	r1, s19
   22480:	movs	r3, #71	; 0x47
   22482:	str	r0, [sp, #0]
   22484:	vmov	r0, s20
   22488:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2248c:	ldr	r3, [sp, #204]	; 0xcc
   2248e:	ldr	r0, [sp, #196]	; 0xc4
   22490:	subs	r2, r3, #1
   22492:	str	r2, [sp, #204]	; 0xcc
   22494:	cmp	r3, #0
   22496:	bne.w	22718 <btrfs_reserve_extent@@Base+0x634>
   2249a:	blx	85dc <free@plt+0x4>
   2249e:	cmp.w	r8, #36	; 0x24
   224a2:	bne.w	226f8 <btrfs_reserve_extent@@Base+0x614>
   224a6:	movs	r3, #1
   224a8:	str	r3, [r4, #104]	; 0x68
   224aa:	mov	r0, r6
   224ac:	bl	17e26 <btrfs_free_path@@Base>
   224b0:	ldr	r3, [r4, #108]	; 0x6c
   224b2:	cmp	r3, #0
   224b4:	bne.w	227d2 <btrfs_reserve_extent@@Base+0x6ee>
   224b8:	ldr	r2, [sp, #40]	; 0x28
   224ba:	ldrd	r3, r1, [r4, #96]	; 0x60
   224be:	mov.w	r9, r2, asr #31
   224c2:	ands	r3, r2
   224c4:	and.w	r1, r9, r1
   224c8:	str	r3, [sp, #128]	; 0x80
   224ca:	str	r1, [sp, #132]	; 0x84
   224cc:	ldrd	r0, r1, [sp, #128]	; 0x80
   224d0:	cmp	r9, r1
   224d2:	it	eq
   224d4:	cmpeq	r2, r0
   224d6:	bne.w	227d2 <btrfs_reserve_extent@@Base+0x6ee>
   224da:	ldrd	r2, r3, [r4, #40]	; 0x28
   224de:	movs	r6, #1
   224e0:	strd	r2, r3, [sp, #32]
   224e4:	ldrd	r0, r1, [sp, #32]
   224e8:	ldrd	r2, r3, [sp, #48]	; 0x30
   224ec:	cmp	r1, r3
   224ee:	it	eq
   224f0:	cmpeq	r0, r2
   224f2:	it	cc
   224f4:	strdcc	r2, r3, [sp, #32]
   224f8:	add	r3, sp, #216	; 0xd8
   224fa:	str	r3, [sp, #96]	; 0x60
   224fc:	ldr	r3, [sp, #44]	; 0x2c
   224fe:	ldr.w	r0, [r3, #464]	; 0x1d0
   22502:	ldr	r3, [sp, #96]	; 0x60
   22504:	adds	r0, #96	; 0x60
   22506:	str	r6, [sp, #8]
   22508:	str	r3, [sp, #4]
   2250a:	add	r3, sp, #208	; 0xd0
   2250c:	str	r3, [sp, #0]
   2250e:	ldrd	r2, r3, [sp, #32]
   22512:	bl	16ac0 <find_first_extent_bit@@Base>
   22516:	cmp	r0, #0
   22518:	bne.w	227d2 <btrfs_reserve_extent@@Base+0x6ee>
   2251c:	ldrd	r0, r1, [sp, #32]
   22520:	ldrd	r2, r3, [sp, #208]	; 0xd0
   22524:	ldrd	r8, r9, [sp, #104]	; 0x68
   22528:	cmp	r3, r1
   2252a:	it	eq
   2252c:	cmpeq	r2, r0
   2252e:	it	cc
   22530:	movcc	r3, r1
   22532:	ldr	r1, [sp, #216]	; 0xd8
   22534:	it	cc
   22536:	movcc	r2, r0
   22538:	strd	r2, r3, [sp, #208]	; 0xd0
   2253c:	adds	r1, #1
   2253e:	str	r1, [sp, #32]
   22540:	ldr	r1, [sp, #220]	; 0xdc
   22542:	adc.w	r1, r1, #0
   22546:	str	r1, [sp, #36]	; 0x24
   22548:	ldr	r1, [sp, #32]
   2254a:	subs	r1, r1, r2
   2254c:	str	r1, [sp, #136]	; 0x88
   2254e:	ldr	r1, [sp, #36]	; 0x24
   22550:	sbc.w	r1, r1, r3
   22554:	str	r1, [sp, #140]	; 0x8c
   22556:	ldrd	r0, r1, [sp, #136]	; 0x88
   2255a:	cmp	r1, r9
   2255c:	it	eq
   2255e:	cmpeq	r0, r8
   22560:	bcc.n	224fc <btrfs_reserve_extent@@Base+0x418>
   22562:	ldr	r1, [sp, #104]	; 0x68
   22564:	adds	r1, r2, r1
   22566:	str	r1, [sp, #144]	; 0x90
   22568:	ldr	r1, [sp, #108]	; 0x6c
   2256a:	adc.w	r1, r3, r1
   2256e:	str	r1, [sp, #148]	; 0x94
   22570:	ldrd	r1, r0, [r4, #40]	; 0x28
   22574:	ldr.w	r6, [r4, #49]	; 0x31
   22578:	ldr.w	ip, [r4, #53]	; 0x35
   2257c:	adds	r1, r6, r1
   2257e:	str	r1, [sp, #152]	; 0x98
   22580:	adc.w	r1, ip, r0
   22584:	str	r1, [sp, #156]	; 0x9c
   22586:	ldrd	r0, r1, [sp, #152]	; 0x98
   2258a:	ldrd	r8, r9, [sp, #144]	; 0x90
   2258e:	cmp	r1, r9
   22590:	it	eq
   22592:	cmpeq	r0, r8
   22594:	bcc.w	227d2 <btrfs_reserve_extent@@Base+0x6ee>
   22598:	adds.w	r1, sl, r2
   2259c:	str	r2, [r7, #0]
   2259e:	str	r1, [sp, #64]	; 0x40
   225a0:	adc.w	r1, fp, r3
   225a4:	str	r3, [r7, #4]
   225a6:	str.w	sl, [r7, #9]
   225aa:	str.w	fp, [r7, #13]
   225ae:	str	r1, [sp, #68]	; 0x44
   225b0:	ldr.w	r0, [r4, #53]	; 0x35
   225b4:	ldr.w	r1, [r4, #49]	; 0x31
   225b8:	ldrd	r6, r4, [r4, #40]	; 0x28
   225bc:	ldrd	r8, r9, [sp, #64]	; 0x40
   225c0:	adds	r1, r1, r6
   225c2:	str	r1, [sp, #24]
   225c4:	adc.w	r1, r0, r4
   225c8:	str	r1, [sp, #28]
   225ca:	ldrd	r0, r1, [sp, #24]
   225ce:	cmp	r1, r9
   225d0:	it	eq
   225d2:	cmpeq	r0, r8
   225d4:	bcc.w	22780 <btrfs_reserve_extent@@Base+0x69c>
   225d8:	movs	r1, #8
   225da:	movs	r0, #0
   225dc:	strd	r1, r0, [sp, #8]
   225e0:	ldr	r1, [sp, #64]	; 0x40
   225e2:	adds.w	r0, r1, #4294967295	; 0xffffffff
   225e6:	ldr	r1, [sp, #68]	; 0x44
   225e8:	adc.w	r1, r1, #4294967295	; 0xffffffff
   225ec:	strd	r0, r1, [sp]
   225f0:	vmov	r1, s16
   225f4:	add.w	r0, r1, #192	; 0xc0
   225f8:	bl	16b02 <test_range_bit@@Base>
   225fc:	cmp	r0, #0
   225fe:	beq.w	22812 <btrfs_reserve_extent@@Base+0x72e>
   22602:	ldr	r3, [r7, #0]
   22604:	ldr	r2, [r7, #4]
   22606:	adds.w	r3, r3, sl
   2260a:	str	r3, [sp, #24]
   2260c:	adc.w	r3, r2, fp
   22610:	str	r3, [sp, #28]
   22612:	b.n	22780 <btrfs_reserve_extent@@Base+0x69c>
   22614:	ldrb.w	r3, [r5, #364]	; 0x16c
   22618:	lsls	r4, r3, #31
   2261a:	bmi.n	22622 <btrfs_reserve_extent@@Base+0x53e>
   2261c:	ldr	r3, [r5, #32]
   2261e:	cmp	r3, r6
   22620:	bne.n	22632 <btrfs_reserve_extent@@Base+0x54e>
   22622:	ldrd	r3, r4, [r5, #264]	; 0x108
   22626:	ldrd	r1, r2, [r5, #288]	; 0x120
   2262a:	ands	r3, r1
   2262c:	orr.w	r3, r3, #2
   22630:	b.n	22138 <btrfs_reserve_extent@@Base+0x54>
   22632:	ldrd	r3, r4, [r5, #256]	; 0x100
   22636:	ldrd	r1, r2, [r5, #280]	; 0x118
   2263a:	ands	r3, r1
   2263c:	orr.w	r3, r3, #4
   22640:	b.n	22138 <btrfs_reserve_extent@@Base+0x54>
   22642:	ldr	r3, [sp, #40]	; 0x28
   22644:	mov	r2, r8
   22646:	ldr	r1, [sp, #60]	; 0x3c
   22648:	str	r3, [sp, #0]
   2264a:	mov	r3, r9
   2264c:	ldr	r1, [r1, #56]	; 0x38
   2264e:	b.n	22272 <btrfs_reserve_extent@@Base+0x18e>
   22650:	vmov	r1, s18
   22654:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   22658:	ldrd	r8, r9, [sp, #224]	; 0xe0
   2265c:	ldrd	r0, r1, [r4, #40]	; 0x28
   22660:	cmp	r9, r1
   22662:	it	eq
   22664:	cmpeq	r8, r0
   22666:	bcc.n	226dc <btrfs_reserve_extent@@Base+0x5f8>
   22668:	ldr.w	ip, [r4, #49]	; 0x31
   2266c:	ldr.w	lr, [r4, #53]	; 0x35
   22670:	adds.w	r3, ip, r0
   22674:	str	r3, [sp, #120]	; 0x78
   22676:	adc.w	r3, lr, r1
   2267a:	str	r3, [sp, #124]	; 0x7c
   2267c:	ldrd	r2, r3, [sp, #120]	; 0x78
   22680:	cmp	r9, r3
   22682:	it	eq
   22684:	cmpeq	r8, r2
   22686:	bcs.w	223e6 <btrfs_reserve_extent@@Base+0x302>
   2268a:	ldrb.w	r1, [sp, #232]	; 0xe8
   2268e:	adds	r1, #88	; 0x58
   22690:	uxtb	r1, r1
   22692:	cmp	r1, #1
   22694:	bhi.n	226dc <btrfs_reserve_extent@@Base+0x5f8>
   22696:	ldrd	r2, r3, [sp, #32]
   2269a:	cmp	r3, r9
   2269c:	it	eq
   2269e:	cmpeq	r2, r8
   226a0:	bcs.n	226ba <btrfs_reserve_extent@@Base+0x5d6>
   226a2:	adds.w	r2, r8, #4294967295	; 0xffffffff
   226a6:	vmov	r0, s17
   226aa:	adc.w	r3, r9, #4294967295	; 0xffffffff
   226ae:	strd	r2, r3, [sp]
   226b2:	ldrd	r2, r3, [sp, #32]
   226b6:	bl	16a90 <set_extent_dirty@@Base>
   226ba:	ldrb.w	r1, [sp, #232]	; 0xe8
   226be:	ldrd	r2, r3, [sp, #224]	; 0xe0
   226c2:	cmp	r1, #169	; 0xa9
   226c4:	bne.n	226e4 <btrfs_reserve_extent@@Base+0x600>
   226c6:	ldr	r1, [sp, #96]	; 0x60
   226c8:	ldr.w	r1, [r1, #464]	; 0x1d0
   226cc:	ldr.w	r1, [r1, #384]	; 0x180
   226d0:	adds.w	r8, r2, r1
   226d4:	adc.w	r9, r3, #0
   226d8:	strd	r8, r9, [sp, #32]
   226dc:	ldr	r3, [r6, #32]
   226de:	adds	r3, #1
   226e0:	str	r3, [r6, #32]
   226e2:	b.n	223c0 <btrfs_reserve_extent@@Base+0x2dc>
   226e4:	ldr.w	r1, [sp, #233]	; 0xe9
   226e8:	ldr.w	r0, [sp, #237]	; 0xed
   226ec:	adds	r1, r1, r2
   226ee:	str	r1, [sp, #32]
   226f0:	adc.w	r3, r0, r3
   226f4:	str	r3, [sp, #36]	; 0x24
   226f6:	b.n	226dc <btrfs_reserve_extent@@Base+0x5f8>
   226f8:	mov.w	r2, #16384	; 0x4000
   226fc:	sub.w	r3, r8, #32
   22700:	rsb	r1, r8, #32
   22704:	lsl.w	r3, r2, r3
   22708:	lsr.w	r1, r2, r1
   2270c:	lsl.w	r2, r2, r8
   22710:	orrs	r3, r1
   22712:	add.w	r8, r8, #12
   22716:	b.n	2245e <btrfs_reserve_extent@@Base+0x37a>
   22718:	add.w	r0, r0, r2, lsl #3
   2271c:	ldrd	ip, r3, [r0]
   22720:	ldr	r0, [sp, #200]	; 0xc8
   22722:	asrs	r2, r0, #31
   22724:	mov	r1, r0
   22726:	strd	r1, r2, [sp, #32]
   2272a:	mov	r2, ip
   2272c:	ldr	r1, [sp, #32]
   2272e:	adds.w	r0, r1, #4294967295	; 0xffffffff
   22732:	ldr	r1, [sp, #36]	; 0x24
   22734:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22738:	adds.w	r0, r0, ip
   2273c:	adc.w	r1, r3, r1
   22740:	strd	r0, r1, [sp]
   22744:	vmov	r0, s17
   22748:	bl	16aa8 <clear_extent_dirty@@Base>
   2274c:	b.n	2248c <btrfs_reserve_extent@@Base+0x3a8>
   2274e:	ldrd	r3, r4, [sp, #48]	; 0x30
   22752:	strd	r3, r4, [sp, #24]
   22756:	ldr	r1, [sp, #44]	; 0x2c
   22758:	ldrd	r2, r3, [sp, #48]	; 0x30
   2275c:	ldr.w	r0, [r1, #464]	; 0x1d0
   22760:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   22764:	cbnz	r0, 22780 <btrfs_reserve_extent@@Base+0x69c>
   22766:	ldr	r2, [sp, #168]	; 0xa8
   22768:	ldr	r3, [pc, #660]	; (22a00 <btrfs_reserve_extent@@Base+0x91c>)
   2276a:	ldr	r3, [r2, r3]
   2276c:	ldrd	r1, r2, [sp, #48]	; 0x30
   22770:	strd	r1, r2, [sp]
   22774:	movs	r1, #1
   22776:	ldr	r2, [pc, #652]	; (22a04 <btrfs_reserve_extent@@Base+0x920>)
   22778:	ldr	r0, [r3, #0]
   2277a:	add	r2, pc
   2277c:	blx	8a14 <__fprintf_chk@plt+0x4>
   22780:	vmov	r0, s16
   22784:	ldrd	r2, r3, [sp, #24]
   22788:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   2278c:	mov	r1, r0
   2278e:	cmp	r0, #0
   22790:	bne.w	2299c <btrfs_reserve_extent@@Base+0x8b8>
   22794:	ldr	r3, [sp, #100]	; 0x64
   22796:	cmp	r3, #0
   22798:	bne.w	229b0 <btrfs_reserve_extent@@Base+0x8cc>
   2279c:	ldr	r3, [sp, #56]	; 0x38
   2279e:	cmp	r3, #0
   227a0:	beq.w	229a4 <btrfs_reserve_extent@@Base+0x8c0>
   227a4:	ldr	r6, [sp, #56]	; 0x38
   227a6:	movs	r4, #0
   227a8:	ldr	r3, [sp, #112]	; 0x70
   227aa:	ldr	r2, [sp, #172]	; 0xac
   227ac:	subs	r3, r3, r2
   227ae:	str	r3, [sp, #112]	; 0x70
   227b0:	movs	r3, #0
   227b2:	strd	r3, r4, [sp, #24]
   227b6:	ldr	r3, [sp, #40]	; 0x28
   227b8:	ldr	r0, [sp, #44]	; 0x2c
   227ba:	str	r3, [sp, #0]
   227bc:	ldrd	r2, r3, [sp, #24]
   227c0:	ldr.w	r0, [r0, #464]	; 0x1d0
   227c4:	bl	1f168 <btrfs_lookup_block_group@@Base+0x30c>
   227c8:	ldr	r3, [sp, #56]	; 0x38
   227ca:	str	r6, [sp, #56]	; 0x38
   227cc:	str	r3, [sp, #100]	; 0x64
   227ce:	mov	r4, r0
   227d0:	b.n	222a8 <btrfs_reserve_extent@@Base+0x1c4>
   227d2:	ldr.w	r3, [r4, #49]	; 0x31
   227d6:	ldrd	r1, r0, [r4, #40]	; 0x28
   227da:	ldr.w	r2, [r4, #53]	; 0x35
   227de:	adds	r3, r3, r1
   227e0:	str	r3, [sp, #24]
   227e2:	adc.w	r3, r2, r0
   227e6:	str	r3, [sp, #28]
   227e8:	ldr	r1, [sp, #44]	; 0x2c
   227ea:	ldrd	r2, r3, [sp, #24]
   227ee:	ldr.w	r0, [r1, #464]	; 0x1d0
   227f2:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   227f6:	mov	r4, r0
   227f8:	cmp	r0, #0
   227fa:	bne.w	22322 <btrfs_reserve_extent@@Base+0x23e>
   227fe:	ldr	r3, [sp, #116]	; 0x74
   22800:	cmp	r3, #0
   22802:	bne.n	22756 <btrfs_reserve_extent@@Base+0x672>
   22804:	movs	r3, #1
   22806:	str	r3, [sp, #116]	; 0x74
   22808:	ldrd	r3, r4, [sp, #48]	; 0x30
   2280c:	strd	r3, r4, [sp, #24]
   22810:	b.n	227e8 <btrfs_reserve_extent@@Base+0x704>
   22812:	ldr	r2, [r7, #0]
   22814:	movs	r6, #1
   22816:	ldr	r3, [r7, #4]
   22818:	adds.w	r1, r2, #4294967295	; 0xffffffff
   2281c:	str	r0, [sp, #12]
   2281e:	adc.w	r0, r3, #4294967295	; 0xffffffff
   22822:	adds.w	r1, r1, sl
   22826:	adc.w	r0, r0, fp
   2282a:	strd	r1, r0, [sp]
   2282e:	vmov	r1, s16
   22832:	str	r6, [sp, #8]
   22834:	add.w	r0, r1, #160	; 0xa0
   22838:	bl	16b02 <test_range_bit@@Base>
   2283c:	mov	r4, r0
   2283e:	cmp	r0, #0
   22840:	bne.w	22602 <btrfs_reserve_extent@@Base+0x51e>
   22844:	vmov	r3, s16
   22848:	ldr.w	r0, [r3, #224]	; 0xe0
   2284c:	cbz	r0, 22874 <btrfs_reserve_extent@@Base+0x790>
   2284e:	ldr	r2, [r7, #0]
   22850:	ldr	r3, [r7, #4]
   22852:	adds.w	r1, r2, #4294967295	; 0xffffffff
   22856:	strd	r6, r4, [sp, #8]
   2285a:	adc.w	r6, r3, #4294967295	; 0xffffffff
   2285e:	adds.w	r1, r1, sl
   22862:	adc.w	r6, r6, fp
   22866:	strd	r1, r6, [sp]
   2286a:	bl	16b02 <test_range_bit@@Base>
   2286e:	cmp	r0, #0
   22870:	bne.w	22602 <btrfs_reserve_extent@@Base+0x51e>
   22874:	ldrd	r2, r3, [sp, #88]	; 0x58
   22878:	ldr.w	r8, [r7]
   2287c:	orrs	r3, r2
   2287e:	ldr.w	r9, [r7, #4]
   22882:	beq.n	228be <btrfs_reserve_extent@@Base+0x7da>
   22884:	adds.w	r3, sl, r8
   22888:	str	r3, [sp, #160]	; 0xa0
   2288a:	adc.w	r3, fp, r9
   2288e:	str	r3, [sp, #164]	; 0xa4
   22890:	ldrd	r0, r1, [sp, #160]	; 0xa0
   22894:	ldrd	r2, r3, [sp, #80]	; 0x50
   22898:	cmp	r3, r1
   2289a:	it	eq
   2289c:	cmpeq	r2, r0
   2289e:	bcs.n	228be <btrfs_reserve_extent@@Base+0x7da>
   228a0:	ldr	r2, [sp, #88]	; 0x58
   228a2:	ldr	r3, [sp, #80]	; 0x50
   228a4:	adds	r3, r3, r2
   228a6:	ldr	r2, [sp, #92]	; 0x5c
   228a8:	str	r3, [sp, #24]
   228aa:	ldr	r3, [sp, #84]	; 0x54
   228ac:	adcs	r3, r2
   228ae:	str	r3, [sp, #28]
   228b0:	ldrd	r2, r3, [sp, #24]
   228b4:	cmp	r9, r3
   228b6:	it	eq
   228b8:	cmpeq	r8, r2
   228ba:	bcc.w	22780 <btrfs_reserve_extent@@Base+0x69c>
   228be:	ldr	r3, [sp, #40]	; 0x28
   228c0:	lsls	r3, r3, #31
   228c2:	bmi.n	22960 <btrfs_reserve_extent@@Base+0x87c>
   228c4:	vmov	r0, s16
   228c8:	mov	r2, r8
   228ca:	mov	r3, r9
   228cc:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   228d0:	cmp	r0, #0
   228d2:	beq.n	2294e <btrfs_reserve_extent@@Base+0x86a>
   228d4:	ldrd	r3, r6, [r0, #40]	; 0x28
   228d8:	ldr	r1, [sp, #184]	; 0xb8
   228da:	subs.w	ip, r8, r3
   228de:	ldr	r2, [r7, #0]
   228e0:	sbc.w	r6, r9, r6
   228e4:	ldr	r3, [r7, #4]
   228e6:	mov.w	r8, ip, lsr #16
   228ea:	adds.w	ip, r1, ip
   228ee:	ldr	r1, [sp, #188]	; 0xbc
   228f0:	orr.w	r8, r8, r6, lsl #16
   228f4:	mov.w	r9, r6, lsr #16
   228f8:	mov.w	r0, ip, lsr #16
   228fc:	adc.w	r6, r1, r6
   22900:	lsrs	r1, r6, #16
   22902:	orr.w	r0, r0, r6, lsl #16
   22906:	cmp	r9, r1
   22908:	it	eq
   2290a:	cmpeq	r8, r0
   2290c:	beq.n	2294e <btrfs_reserve_extent@@Base+0x86a>
   2290e:	vmov	r0, s16
   22912:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   22916:	cbz	r0, 2294e <btrfs_reserve_extent@@Base+0x86a>
   22918:	ldr	r3, [r7, #0]
   2291a:	ldrd	r2, r1, [r0, #40]	; 0x28
   2291e:	ldr	r0, [r7, #4]
   22920:	adds.w	r3, r3, #4294967295	; 0xffffffff
   22924:	adc.w	r0, r0, #4294967295	; 0xffffffff
   22928:	adds.w	r3, r3, sl
   2292c:	adc.w	r0, r0, fp
   22930:	subs	r3, r3, r2
   22932:	sbc.w	r0, r0, r1
   22936:	adds	r2, #1
   22938:	mvn.w	r3, r3, lsr #16
   2293c:	adc.w	r1, r1, #0
   22940:	mvn.w	r3, r3, lsl #16
   22944:	adds	r3, r3, r2
   22946:	str	r3, [sp, #24]
   22948:	adc.w	r3, r0, r1
   2294c:	b.n	22610 <btrfs_reserve_extent@@Base+0x52c>
   2294e:	vmov	r0, s16
   22952:	ldr	r2, [r7, #0]
   22954:	ldr	r3, [r7, #4]
   22956:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   2295a:	cbz	r0, 22960 <btrfs_reserve_extent@@Base+0x87c>
   2295c:	ldr	r3, [sp, #60]	; 0x3c
   2295e:	str	r0, [r3, #56]	; 0x38
   22960:	ldr	r2, [r7, #0]
   22962:	ldr	r3, [r7, #4]
   22964:	adds.w	r1, r2, #4294967295	; 0xffffffff
   22968:	str.w	sl, [r7, #9]
   2296c:	adc.w	r0, r3, #4294967295	; 0xffffffff
   22970:	adds.w	r1, r1, sl
   22974:	adc.w	r0, r0, fp
   22978:	str.w	fp, [r7, #13]
   2297c:	strd	r1, r0, [sp]
   22980:	add.w	r0, r5, #96	; 0x60
   22984:	bl	16aa8 <clear_extent_dirty@@Base>
   22988:	ldr	r2, [pc, #124]	; (22a08 <btrfs_reserve_extent@@Base+0x924>)
   2298a:	ldr	r3, [pc, #64]	; (229cc <btrfs_reserve_extent@@Base+0x8e8>)
   2298c:	add	r2, pc
   2298e:	ldr	r3, [r2, r3]
   22990:	ldr	r2, [r3, #0]
   22992:	ldr	r3, [sp, #244]	; 0xf4
   22994:	eors	r2, r3
   22996:	beq.n	229b6 <btrfs_reserve_extent@@Base+0x8d2>
   22998:	blx	86b8 <__stack_chk_fail@plt>
   2299c:	ldr	r3, [sp, #100]	; 0x64
   2299e:	ldr	r6, [sp, #56]	; 0x38
   229a0:	str	r3, [sp, #56]	; 0x38
   229a2:	b.n	227b6 <btrfs_reserve_extent@@Base+0x6d2>
   229a4:	movs	r3, #0
   229a6:	movs	r4, #0
   229a8:	movs	r6, #1
   229aa:	strd	r3, r4, [sp, #24]
   229ae:	b.n	227b6 <btrfs_reserve_extent@@Base+0x6d2>
   229b0:	mvn.w	r4, #27
   229b4:	b.n	22988 <btrfs_reserve_extent@@Base+0x8a4>
   229b6:	mov	r0, r4
   229b8:	add	sp, #252	; 0xfc
   229ba:	vpop	{d8-d10}
   229be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229c2:	nop
   229c4:	cmp	r4, #142	; 0x8e
   229c6:	movs	r4, r0
   229c8:	cmp	r4, #138	; 0x8a
   229ca:	movs	r4, r0
   229cc:	lsls	r4, r4, #8
   229ce:	movs	r0, r0
   229d0:	cbnz	r4, 229ec <btrfs_reserve_extent@@Base+0x908>
   229d2:	movs	r1, r0
   229d4:	sxth	r5, r5
   229d6:	movs	r1, r0
   229d8:	ldrb	r0, [r3, #17]
   229da:	movs	r1, r0
   229dc:	cbnz	r6, 229ea <btrfs_reserve_extent@@Base+0x906>
   229de:	movs	r1, r0
   229e0:	cbz	r7, 22a20 <btrfs_alloc_free_block@@Base+0x14>
   229e2:	movs	r1, r0
   229e4:	ldrb	r2, [r4, #16]
   229e6:	movs	r1, r0
   229e8:	cbnz	r2, 229ec <btrfs_reserve_extent@@Base+0x908>
   229ea:	movs	r1, r0
   229ec:	cbz	r1, 22a22 <btrfs_alloc_free_block@@Base+0x16>
   229ee:	movs	r1, r0
   229f0:			; <UNDEFINED> instruction: 0xb78d
   229f2:	movs	r1, r0
   229f4:			; <UNDEFINED> instruction: 0xb84c
   229f6:	movs	r1, r0
   229f8:	add	r7, sp, #436	; 0x1b4
   229fa:	movs	r1, r0
   229fc:	ldrb	r4, [r1, #6]
   229fe:	movs	r1, r0
   22a00:	lsls	r4, r6, #8
   22a02:	movs	r0, r0
   22a04:	sxth	r2, r3
   22a06:	movs	r1, r0
   22a08:	movs	r3, #252	; 0xfc
   22a0a:	movs	r4, r0

00022a0c <btrfs_alloc_free_block@@Base>:
   22a0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a10:	mov	r4, r2
   22a12:	ldr	r2, [pc, #600]	; (22c6c <btrfs_alloc_free_block@@Base+0x260>)
   22a14:	sub	sp, #84	; 0x54
   22a16:	ldr	r3, [pc, #600]	; (22c70 <btrfs_alloc_free_block@@Base+0x264>)
   22a18:	mov	r7, r0
   22a1a:	add	r2, pc
   22a1c:	ldr.w	r8, [r1, #464]	; 0x1d0
   22a20:	movs	r0, #32
   22a22:	ldrd	r9, sl, [sp, #128]	; 0x80
   22a26:	ldr	r3, [r2, r3]
   22a28:	mov	r6, r1
   22a2a:	mov.w	fp, #0
   22a2e:	ldr	r3, [r3, #0]
   22a30:	str	r3, [sp, #76]	; 0x4c
   22a32:	mov.w	r3, #0
   22a36:	ldr.w	r3, [r8, #308]	; 0x134
   22a3a:	ldr.w	r2, [r3, #188]	; 0xbc
   22a3e:	str	r2, [sp, #48]	; 0x30
   22a40:	ldr.w	r3, [r3, #192]	; 0xc0
   22a44:	str	r3, [sp, #52]	; 0x34
   22a46:	blx	8820 <malloc@plt+0x4>
   22a4a:	mov	r5, r0
   22a4c:	cmp	r0, #0
   22a4e:	beq.w	22c50 <btrfs_alloc_free_block@@Base+0x244>
   22a52:	mov	r0, r8
   22a54:	movs	r2, #4
   22a56:	movs	r3, #0
   22a58:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   22a5c:	mov	r8, r0
   22a5e:	cbnz	r0, 22aa4 <btrfs_alloc_free_block@@Base+0x98>
   22a60:	ldr	r0, [pc, #528]	; (22c74 <btrfs_alloc_free_block@@Base+0x268>)
   22a62:	mvn.w	r4, #116	; 0x74
   22a66:	add	r0, pc
   22a68:	bl	17424 <__btrfs_error@@Base>
   22a6c:	ldr	r2, [pc, #520]	; (22c78 <btrfs_alloc_free_block@@Base+0x26c>)
   22a6e:	cmp	r4, #0
   22a70:	ldr	r1, [pc, #520]	; (22c7c <btrfs_alloc_free_block@@Base+0x270>)
   22a72:	ldr	r0, [pc, #524]	; (22c80 <btrfs_alloc_free_block@@Base+0x274>)
   22a74:	add	r2, pc
   22a76:	ite	le
   22a78:	movle	r3, #0
   22a7a:	movgt	r3, #1
   22a7c:	addw	r2, r2, #683	; 0x2ab
   22a80:	str	r3, [sp, #0]
   22a82:	add	r1, pc
   22a84:	add	r0, pc
   22a86:	movw	r3, #2559	; 0x9ff
   22a8a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22a8e:	ldr	r2, [pc, #500]	; (22c84 <btrfs_alloc_free_block@@Base+0x278>)
   22a90:	ldr	r3, [pc, #476]	; (22c70 <btrfs_alloc_free_block@@Base+0x264>)
   22a92:	add	r2, pc
   22a94:	ldr	r3, [r2, r3]
   22a96:	ldr	r2, [r3, #0]
   22a98:	ldr	r3, [sp, #76]	; 0x4c
   22a9a:	eors	r2, r3
   22a9c:	beq.w	22c62 <btrfs_alloc_free_block@@Base+0x256>
   22aa0:	blx	86b8 <__stack_chk_fail@plt>
   22aa4:	add	r3, sp, #56	; 0x38
   22aa6:	mov.w	r2, #4294967295	; 0xffffffff
   22aaa:	str	r3, [sp, #24]
   22aac:	mov.w	r3, #4294967295	; 0xffffffff
   22ab0:	strd	r2, r3, [sp, #16]
   22ab4:	mov	r1, r6
   22ab6:	ldrd	r2, r3, [sp, #136]	; 0x88
   22aba:	mov	r0, r7
   22abc:	str.w	fp, [sp, #28]
   22ac0:	strd	r2, r3, [sp, #8]
   22ac4:	ldrd	r2, r3, [sp, #144]	; 0x90
   22ac8:	strd	r2, r3, [sp]
   22acc:	mov	r2, r4
   22ace:	mov	r3, fp
   22ad0:	bl	220e4 <btrfs_reserve_extent@@Base>
   22ad4:	subs	r4, r0, #0
   22ad6:	blt.n	22a6c <btrfs_alloc_free_block@@Base+0x60>
   22ad8:	cmp.w	r9, #0
   22adc:	beq.w	22c44 <btrfs_alloc_free_block@@Base+0x238>
   22ae0:	add.w	r2, r9, #16
   22ae4:	mov	r3, r5
   22ae6:	ldr.w	r1, [r9], #4
   22aea:	cmp	r9, r2
   22aec:	str.w	r1, [r3], #4
   22af0:	bne.n	22ae6 <btrfs_alloc_free_block@@Base+0xda>
   22af2:	ldrb.w	r2, [r9]
   22af6:	strb	r2, [r3, #0]
   22af8:	movs	r2, #0
   22afa:	movs	r3, #0
   22afc:	strd	r2, r3, [r5, #24]
   22b00:	movs	r1, #0
   22b02:	ldr	r3, [sp, #48]	; 0x30
   22b04:	ldr	r2, [sp, #52]	; 0x34
   22b06:	strb	r1, [r5, #20]
   22b08:	lsrs	r3, r3, #8
   22b0a:	strb.w	sl, [r5, #17]
   22b0e:	orr.w	r3, r3, r2, lsl #24
   22b12:	eor.w	r3, r3, #1
   22b16:	and.w	r3, r3, #1
   22b1a:	strb	r3, [r5, #18]
   22b1c:	movs	r3, #1
   22b1e:	strb	r3, [r5, #19]
   22b20:	ldr.w	r3, [r6, #464]	; 0x1d0
   22b24:	ldr.w	r4, [sp, #65]	; 0x41
   22b28:	ldr.w	fp, [sp, #69]	; 0x45
   22b2c:	ldr.w	r3, [r3, #308]	; 0x134
   22b30:	ldr.w	r0, [r3, #188]	; 0xbc
   22b34:	mov	r3, r1
   22b36:	and.w	r2, r0, #256	; 0x100
   22b3a:	orrs	r3, r2
   22b3c:	beq.n	22b50 <btrfs_alloc_free_block@@Base+0x144>
   22b3e:	mov	r2, sl
   22b40:	str.w	sl, [sp, #65]	; 0x41
   22b44:	asrs	r3, r2, #31
   22b46:	str.w	r3, [sp, #69]	; 0x45
   22b4a:	movs	r3, #169	; 0xa9
   22b4c:	strb.w	r3, [sp, #64]	; 0x40
   22b50:	ldrd	r2, r3, [sp, #120]	; 0x78
   22b54:	cmp	r3, #0
   22b56:	it	eq
   22b58:	cmpeq	r2, #2
   22b5a:	bne.n	22b9a <btrfs_alloc_free_block@@Base+0x18e>
   22b5c:	ldrd	r2, r3, [sp, #56]	; 0x38
   22b60:	movs	r1, #8
   22b62:	str	r1, [sp, #8]
   22b64:	adds	r1, r2, r4
   22b66:	adc.w	ip, r3, fp
   22b6a:	adds.w	r1, r1, #4294967295	; 0xffffffff
   22b6e:	adc.w	r0, ip, #4294967295	; 0xffffffff
   22b72:	strd	r1, r0, [sp]
   22b76:	ldr	r1, [r7, #0]
   22b78:	add.w	r0, r1, #192	; 0xc0
   22b7c:	bl	16864 <set_extent_bits@@Base>
   22b80:	ldr	r2, [pc, #260]	; (22c88 <btrfs_alloc_free_block@@Base+0x27c>)
   22b82:	ldr	r1, [pc, #264]	; (22c8c <btrfs_alloc_free_block@@Base+0x280>)
   22b84:	movw	r3, #2530	; 0x9e2
   22b88:	add	r2, pc
   22b8a:	addw	r2, r2, #666	; 0x29a
   22b8e:	add	r1, pc
   22b90:	str	r0, [sp, #0]
   22b92:	ldr	r0, [pc, #252]	; (22c90 <btrfs_alloc_free_block@@Base+0x284>)
   22b94:	add	r0, pc
   22b96:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22b9a:	ldrd	r3, r2, [r8, #32]
   22b9e:	mov.w	r9, #0
   22ba2:	mov	r1, r7
   22ba4:	adds	r3, r3, r4
   22ba6:	adc.w	r2, r2, fp
   22baa:	strd	r3, r2, [r8, #32]
   22bae:	movs	r3, #0
   22bb0:	strd	r3, r3, [sp, #36]	; 0x24
   22bb4:	movs	r3, #3
   22bb6:	strd	sl, r3, [sp, #24]
   22bba:	ldrd	r2, r3, [sp, #120]	; 0x78
   22bbe:	mov.w	r8, #0
   22bc2:	strd	r4, fp, [sp]
   22bc6:	ldr.w	r0, [r6, #464]	; 0x1d0
   22bca:	strd	r2, r3, [sp, #16]
   22bce:	str	r5, [sp, #32]
   22bd0:	ldrd	r2, r3, [sp, #56]	; 0x38
   22bd4:	strd	r8, r9, [sp, #8]
   22bd8:	bl	23e9c <btrfs_add_delayed_tree_ref@@Base>
   22bdc:	mov	r4, r0
   22bde:	cmp	r0, #0
   22be0:	bne.w	22a6c <btrfs_alloc_free_block@@Base+0x60>
   22be4:	ldrd	r2, r3, [sp, #56]	; 0x38
   22be8:	ldr.w	r0, [r6, #464]	; 0x1d0
   22bec:	bl	1c1d6 <btrfs_find_create_tree_block@@Base>
   22bf0:	mov	r4, r0
   22bf2:	cbnz	r0, 22c56 <btrfs_alloc_free_block@@Base+0x24a>
   22bf4:	ldr.w	r2, [r6, #447]	; 0x1bf
   22bf8:	mov	r1, r6
   22bfa:	ldr.w	r3, [r6, #451]	; 0x1c3
   22bfe:	mov.w	fp, sl, asr #31
   22c02:	mov	r0, r7
   22c04:	strd	r8, r9, [sp, #32]
   22c08:	strd	sl, fp, [sp, #24]
   22c0c:	strd	r2, r3, [sp, #16]
   22c10:	ldr.w	r2, [sp, #65]	; 0x41
   22c14:	ldr.w	r3, [sp, #69]	; 0x45
   22c18:	strd	r8, r9, [sp, #8]
   22c1c:	strd	r2, r3, [sp]
   22c20:	ldrd	r2, r3, [sp, #56]	; 0x38
   22c24:	bl	20bf4 <btrfs_free_extent@@Base>
   22c28:	ldr	r2, [pc, #104]	; (22c94 <btrfs_alloc_free_block@@Base+0x288>)
   22c2a:	ldr	r1, [pc, #108]	; (22c98 <btrfs_alloc_free_block@@Base+0x28c>)
   22c2c:	movs	r3, #1
   22c2e:	ldr	r0, [pc, #108]	; (22c9c <btrfs_alloc_free_block@@Base+0x290>)
   22c30:	add	r2, pc
   22c32:	str	r3, [sp, #0]
   22c34:	addw	r2, r2, #683	; 0x2ab
   22c38:	add	r1, pc
   22c3a:	add	r0, pc
   22c3c:	movw	r3, #2567	; 0xa07
   22c40:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   22c44:	movs	r2, #17
   22c46:	mov	r1, r9
   22c48:	mov	r0, r5
   22c4a:	blx	8978 <memset@plt+0x4>
   22c4e:	b.n	22af8 <btrfs_alloc_free_block@@Base+0xec>
   22c50:	mvn.w	r4, #11
   22c54:	b.n	22a6c <btrfs_alloc_free_block@@Base+0x60>
   22c56:	bl	1d620 <btrfs_set_buffer_uptodate@@Base>
   22c5a:	ldr	r3, [r7, #52]	; 0x34
   22c5c:	adds	r3, #1
   22c5e:	str	r3, [r7, #52]	; 0x34
   22c60:	b.n	22a8e <btrfs_alloc_free_block@@Base+0x82>
   22c62:	mov	r0, r4
   22c64:	add	sp, #84	; 0x54
   22c66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c6a:	nop
   22c6c:	movs	r3, #110	; 0x6e
   22c6e:	movs	r4, r0
   22c70:	lsls	r4, r4, #8
   22c72:	movs	r0, r0
   22c74:	add	r7, sp, #332	; 0x14c
   22c76:	movs	r1, r0
   22c78:	add	sp, #440	; 0x1b8
   22c7a:	movs	r1, r0
   22c7c:	add	r1, sp, #188	; 0xbc
   22c7e:	movs	r1, r0
   22c80:	ldr	r3, [sp, #132]	; 0x84
   22c82:	movs	r1, r0
   22c84:	movs	r2, #246	; 0xf6
   22c86:	movs	r4, r0
   22c88:	add	r7, sp, #360	; 0x168
   22c8a:	movs	r1, r0
   22c8c:	add	r0, sp, #140	; 0x8c
   22c8e:	movs	r1, r0
   22c90:	strb	r0, [r2, #9]
   22c92:	movs	r1, r0
   22c94:	add	r6, sp, #712	; 0x2c8
   22c96:	movs	r1, r0
   22c98:	add	r7, pc, #484	; (adr r7, 22e80 <cleanup_ref_head@@Base+0xb0>)
   22c9a:	movs	r1, r0
   22c9c:	add	r2, sp, #860	; 0x35c
   22c9e:	movs	r1, r0

00022ca0 <add_new_free_space@@Base>:
   22ca0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ca4:	mov	r4, r2
   22ca6:	ldr	r2, [pc, #260]	; (22dac <add_new_free_space@@Base+0x10c>)
   22ca8:	mov	r5, r3
   22caa:	ldr	r3, [pc, #260]	; (22db0 <add_new_free_space@@Base+0x110>)
   22cac:	sub	sp, #44	; 0x2c
   22cae:	add	r2, pc
   22cb0:	ldr.w	sl, [pc, #256]	; 22db4 <add_new_free_space@@Base+0x114>
   22cb4:	ldr.w	fp, [pc, #256]	; 22db8 <add_new_free_space@@Base+0x118>
   22cb8:	movs	r6, #0
   22cba:	ldr	r3, [r2, r3]
   22cbc:	add	sl, pc
   22cbe:	addw	sl, sl, #706	; 0x2c2
   22cc2:	add	fp, pc
   22cc4:	ldr	r3, [r3, #0]
   22cc6:	str	r3, [sp, #36]	; 0x24
   22cc8:	mov.w	r3, #0
   22ccc:	mov	r8, r0
   22cce:	mov	r9, r1
   22cd0:	mov	r7, r6
   22cd2:	ldrd	r2, r3, [sp, #80]	; 0x50
   22cd6:	cmp	r5, r3
   22cd8:	it	eq
   22cda:	cmpeq	r4, r2
   22cdc:	bcc.n	22cf2 <add_new_free_space@@Base+0x52>
   22cde:	ldr	r2, [pc, #220]	; (22dbc <add_new_free_space@@Base+0x11c>)
   22ce0:	ldr	r3, [pc, #204]	; (22db0 <add_new_free_space@@Base+0x110>)
   22ce2:	add	r2, pc
   22ce4:	ldr	r3, [r2, r3]
   22ce6:	ldr	r2, [r3, #0]
   22ce8:	ldr	r3, [sp, #36]	; 0x24
   22cea:	eors	r2, r3
   22cec:	beq.n	22da2 <add_new_free_space@@Base+0x102>
   22cee:	blx	86b8 <__stack_chk_fail@plt>
   22cf2:	movs	r3, #5
   22cf4:	add.w	r0, r9, #160	; 0xa0
   22cf8:	str	r3, [sp, #8]
   22cfa:	mov	r2, r4
   22cfc:	add	r3, sp, #24
   22cfe:	str	r3, [sp, #4]
   22d00:	add	r3, sp, #16
   22d02:	str	r3, [sp, #0]
   22d04:	mov	r3, r5
   22d06:	bl	16ac0 <find_first_extent_bit@@Base>
   22d0a:	cbnz	r0, 22d66 <add_new_free_space@@Base+0xc6>
   22d0c:	ldrd	r2, r3, [sp, #16]
   22d10:	cmp	r5, r3
   22d12:	it	eq
   22d14:	cmpeq	r4, r2
   22d16:	mov	r0, r2
   22d18:	mov	r1, r3
   22d1a:	bcc.n	22d28 <add_new_free_space@@Base+0x88>
   22d1c:	ldr	r3, [sp, #24]
   22d1e:	adds	r4, r3, #1
   22d20:	ldr	r3, [sp, #28]
   22d22:	adc.w	r5, r3, #0
   22d26:	b.n	22cd2 <add_new_free_space@@Base+0x32>
   22d28:	ldrd	r2, r3, [sp, #80]	; 0x50
   22d2c:	ldr.w	ip, [r8, #64]	; 0x40
   22d30:	cmp	r1, r3
   22d32:	it	eq
   22d34:	cmpeq	r0, r2
   22d36:	bcs.n	22d66 <add_new_free_space@@Base+0xc6>
   22d38:	subs	r2, r0, r4
   22d3a:	mov	r0, ip
   22d3c:	sbc.w	r3, r1, r5
   22d40:	adds	r6, r6, r2
   22d42:	strd	r2, r3, [sp]
   22d46:	adc.w	r7, r3, r7
   22d4a:	mov	r2, r4
   22d4c:	mov	r3, r5
   22d4e:	bl	26bc2 <btrfs_add_free_space@@Base>
   22d52:	movw	r3, #3693	; 0xe6d
   22d56:	mov	r2, sl
   22d58:	mov	r1, fp
   22d5a:	str	r0, [sp, #0]
   22d5c:	ldr	r0, [pc, #96]	; (22dc0 <add_new_free_space@@Base+0x120>)
   22d5e:	add	r0, pc
   22d60:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22d64:	b.n	22d1c <add_new_free_space@@Base+0x7c>
   22d66:	ldr	r3, [sp, #80]	; 0x50
   22d68:	ldr	r2, [sp, #84]	; 0x54
   22d6a:	subs	r3, r3, r4
   22d6c:	ldr.w	r0, [r8, #64]	; 0x40
   22d70:	sbc.w	r2, r2, r5
   22d74:	adds	r6, r6, r3
   22d76:	strd	r3, r2, [sp]
   22d7a:	adc.w	r7, r2, r7
   22d7e:	mov	r3, r5
   22d80:	mov	r2, r4
   22d82:	bl	26bc2 <btrfs_add_free_space@@Base>
   22d86:	ldr	r2, [pc, #60]	; (22dc4 <add_new_free_space@@Base+0x124>)
   22d88:	ldr	r1, [pc, #60]	; (22dc8 <add_new_free_space@@Base+0x128>)
   22d8a:	movw	r3, #3705	; 0xe79
   22d8e:	add	r2, pc
   22d90:	addw	r2, r2, #706	; 0x2c2
   22d94:	add	r1, pc
   22d96:	str	r0, [sp, #0]
   22d98:	ldr	r0, [pc, #48]	; (22dcc <add_new_free_space@@Base+0x12c>)
   22d9a:	add	r0, pc
   22d9c:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   22da0:	b.n	22cde <add_new_free_space@@Base+0x3e>
   22da2:	mov	r0, r6
   22da4:	mov	r1, r7
   22da6:	add	sp, #44	; 0x2c
   22da8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dac:	movs	r0, #218	; 0xda
   22dae:	movs	r4, r0
   22db0:	lsls	r4, r4, #8
   22db2:	movs	r0, r0
   22db4:	add	r6, sp, #152	; 0x98
   22db6:	movs	r1, r0
   22db8:	add	r6, pc, #956	; (adr r6, 23178 <btrfs_run_delayed_refs@@Base+0x2ec>)
   22dba:	movs	r1, r0
   22dbc:	movs	r0, #166	; 0xa6
   22dbe:	movs	r4, r0
   22dc0:	strb	r6, [r0, #2]
   22dc2:	movs	r1, r0
   22dc4:	add	r5, sp, #336	; 0x150
   22dc6:	movs	r1, r0
   22dc8:	add	r6, pc, #116	; (adr r6, 22e40 <cleanup_ref_head@@Base+0x70>)
   22dca:	movs	r1, r0
   22dcc:	strb	r2, [r1, #1]
   22dce:	movs	r1, r0

00022dd0 <cleanup_ref_head@@Base>:
   22dd0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   22dd2:	mov	r5, r0
   22dd4:	ldr	r0, [r2, #48]	; 0x30
   22dd6:	mov	r7, r1
   22dd8:	mov	r4, r2
   22dda:	cbz	r0, 22de4 <cleanup_ref_head@@Base+0x14>
   22ddc:	movs	r3, #0
   22dde:	str	r3, [r2, #48]	; 0x30
   22de0:	blx	85dc <free@plt+0x4>
   22de4:	ldr	r3, [r4, #24]
   22de6:	cmp	r3, #0
   22de8:	bne.n	22e80 <cleanup_ref_head@@Base+0xb0>
   22dea:	ldr	r3, [r4, #48]	; 0x30
   22dec:	cmp	r3, #0
   22dee:	bne.n	22e80 <cleanup_ref_head@@Base+0xb0>
   22df0:	ldr	r3, [r5, #72]	; 0x48
   22df2:	add.w	r6, r4, #36	; 0x24
   22df6:	add.w	r1, r5, #64	; 0x40
   22dfa:	subs	r3, #1
   22dfc:	mov	r0, r6
   22dfe:	str	r3, [r5, #72]	; 0x48
   22e00:	bl	13278 <rb_erase@@Base>
   22e04:	ldrb.w	r3, [r4, #60]	; 0x3c
   22e08:	str	r6, [r4, #36]	; 0x24
   22e0a:	lsls	r2, r3, #31
   22e0c:	bpl.n	22e5a <cleanup_ref_head@@Base+0x8a>
   22e0e:	ldrd	r2, r3, [r4, #8]
   22e12:	mov	r0, r7
   22e14:	strd	r2, r3, [sp]
   22e18:	ldrd	r2, r3, [r4]
   22e1c:	bl	20bdc <btrfs_pin_extent@@Base>
   22e20:	ldrb.w	r3, [r4, #60]	; 0x3c
   22e24:	lsls	r3, r3, #30
   22e26:	bmi.n	22e5a <cleanup_ref_head@@Base+0x8a>
   22e28:	ldr	r0, [r5, #0]
   22e2a:	movs	r2, #4
   22e2c:	movs	r3, #0
   22e2e:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   22e32:	cbnz	r0, 22e48 <cleanup_ref_head@@Base+0x78>
   22e34:	ldr	r1, [pc, #76]	; (22e84 <cleanup_ref_head@@Base+0xb4>)
   22e36:	movw	r2, #3758	; 0xeae
   22e3a:	ldr	r0, [pc, #76]	; (22e88 <cleanup_ref_head@@Base+0xb8>)
   22e3c:	add	r1, pc
   22e3e:	addw	r1, r1, #725	; 0x2d5
   22e42:	add	r0, pc
   22e44:	bl	1ed9c <btrfs_create_tree@@Base+0xa78>
   22e48:	ldrd	r3, r2, [r0, #32]
   22e4c:	ldrd	r1, r5, [r4, #8]
   22e50:	subs	r3, r3, r1
   22e52:	sbc.w	r2, r2, r5
   22e56:	strd	r3, r2, [r0, #32]
   22e5a:	ldrd	r2, r3, [r4, #16]
   22e5e:	adds.w	r0, r2, #4294967295	; 0xffffffff
   22e62:	adc.w	r1, r3, #4294967295	; 0xffffffff
   22e66:	cmp	r3, #0
   22e68:	it	eq
   22e6a:	cmpeq	r2, #1
   22e6c:	beq.n	22e78 <cleanup_ref_head@@Base+0xa8>
   22e6e:	strd	r0, r1, [r4, #16]
   22e72:	movs	r0, #0
   22e74:	add	sp, #12
   22e76:	pop	{r4, r5, r6, r7, pc}
   22e78:	mov	r0, r4
   22e7a:	blx	85dc <free@plt+0x4>
   22e7e:	b.n	22e72 <cleanup_ref_head@@Base+0xa2>
   22e80:	movs	r0, #1
   22e82:	b.n	22e74 <cleanup_ref_head@@Base+0xa4>
   22e84:	add	r4, sp, #664	; 0x298
   22e86:	movs	r1, r0
   22e88:	add	r3, sp, #676	; 0x2a4
   22e8a:	movs	r1, r0

00022e8c <btrfs_run_delayed_refs@@Base>:
   22e8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22e90:	mov	sl, r0
   22e92:	vpush	{d8}
   22e96:	movs	r6, #0
   22e98:	ldr	r2, [pc, #736]	; (2317c <btrfs_run_delayed_refs@@Base+0x2f0>)
   22e9a:	ldr	r3, [pc, #740]	; (23180 <btrfs_run_delayed_refs@@Base+0x2f4>)
   22e9c:	add	r2, pc
   22e9e:	sub	sp, #132	; 0x84
   22ea0:	ldr	r3, [r2, r3]
   22ea2:	mov	r2, r0
   22ea4:	ldr	r3, [r3, #0]
   22ea6:	str	r3, [sp, #124]	; 0x7c
   22ea8:	mov.w	r3, #0
   22eac:	ldr.w	r3, [r2], #64
   22eb0:	vmov	s16, r3
   22eb4:	ldr	r3, [pc, #716]	; (23184 <btrfs_run_delayed_refs@@Base+0x2f8>)
   22eb6:	str	r2, [sp, #72]	; 0x48
   22eb8:	add	r3, pc
   22eba:	str	r3, [sp, #68]	; 0x44
   22ebc:	add.w	r3, r3, #784	; 0x310
   22ec0:	vmov	s17, r3
   22ec4:	cbnz	r6, 22ed4 <btrfs_run_delayed_refs@@Base+0x48>
   22ec6:	mov	r0, sl
   22ec8:	bl	23de4 <btrfs_select_ref_head@@Base>
   22ecc:	mov	r6, r0
   22ece:	cmp	r0, #0
   22ed0:	beq.w	233c6 <btrfs_run_delayed_refs@@Base+0x53a>
   22ed4:	ldr	r1, [sp, #72]	; 0x48
   22ed6:	mov	r2, r6
   22ed8:	mov	r0, sl
   22eda:	bl	23cd0 <btrfs_merge_delayed_refs@@Base>
   22ede:	ldr	r3, [r6, #24]
   22ee0:	cmp	r3, #0
   22ee2:	beq.w	23004 <btrfs_run_delayed_refs@@Base+0x178>
   22ee6:	ldr	r4, [r6, #28]
   22ee8:	add.w	r3, r6, #28
   22eec:	add.w	r1, r6, #24
   22ef0:	cmp	r4, r3
   22ef2:	beq.n	22fda <btrfs_run_delayed_refs@@Base+0x14e>
   22ef4:	subs	r4, #12
   22ef6:	ldrb.w	r3, [r4, #62]	; 0x3e
   22efa:	mov	r0, r4
   22efc:	bfc	r3, #1, #1
   22f00:	strb.w	r3, [r4, #62]	; 0x3e
   22f04:	bl	13278 <rb_erase@@Base>
   22f08:	mov	r3, r4
   22f0a:	str	r4, [r4, #0]
   22f0c:	ldr.w	r2, [r3, #12]!
   22f10:	cmp	r2, r3
   22f12:	beq.n	22f22 <btrfs_run_delayed_refs@@Base+0x96>
   22f14:	ldr	r3, [r4, #16]
   22f16:	str	r3, [r2, #4]
   22f18:	str	r2, [r3, #0]
   22f1a:	ldr	r2, [pc, #600]	; (23174 <btrfs_run_delayed_refs@@Base+0x2e8>)
   22f1c:	ldr	r3, [pc, #600]	; (23178 <btrfs_run_delayed_refs@@Base+0x2ec>)
   22f1e:	strd	r2, r3, [r4, #12]
   22f22:	ldrb.w	r3, [r4, #60]	; 0x3c
   22f26:	cmp	r3, #2
   22f28:	beq.n	23018 <btrfs_run_delayed_refs@@Base+0x18c>
   22f2a:	and.w	r3, r3, #253	; 0xfd
   22f2e:	cmp	r3, #1
   22f30:	bne.n	23020 <btrfs_run_delayed_refs@@Base+0x194>
   22f32:	ldr	r3, [r6, #56]	; 0x38
   22f34:	ldr	r2, [r4, #56]	; 0x38
   22f36:	subs	r3, r3, r2
   22f38:	str	r3, [r6, #56]	; 0x38
   22f3a:	ldrb.w	r3, [r6, #60]	; 0x3c
   22f3e:	ldr.w	fp, [r6, #48]	; 0x30
   22f42:	and.w	r2, r3, #1
   22f46:	bfc	r3, #0, #1
   22f4a:	strb.w	r3, [r6, #60]	; 0x3c
   22f4e:	movs	r3, #0
   22f50:	str	r3, [r6, #48]	; 0x30
   22f52:	ldrb.w	r3, [r4, #61]	; 0x3d
   22f56:	cmp	r3, #176	; 0xb0
   22f58:	beq.n	2303e <btrfs_run_delayed_refs@@Base+0x1b2>
   22f5a:	cmp	r3, #182	; 0xb6
   22f5c:	bne.w	233a4 <btrfs_run_delayed_refs@@Base+0x518>
   22f60:	ldrd	r0, r1, [r4, #72]	; 0x48
   22f64:	ldr	r3, [r4, #56]	; 0x38
   22f66:	ldrd	r8, r9, [r4, #64]	; 0x40
   22f6a:	cmp	r3, #1
   22f6c:	ldrb.w	r5, [r4, #60]	; 0x3c
   22f70:	beq.n	23044 <btrfs_run_delayed_refs@@Base+0x1b8>
   22f72:	strd	r0, r1, [sp, #16]
   22f76:	movs	r0, #1
   22f78:	ldr	r1, [pc, #524]	; (23188 <btrfs_run_delayed_refs@@Base+0x2fc>)
   22f7a:	strd	r3, r5, [sp]
   22f7e:	mvn.w	r5, #4
   22f82:	strd	r8, r9, [sp, #8]
   22f86:	add	r1, pc
   22f88:	ldrd	r2, r3, [r4, #24]
   22f8c:	blx	89ec <__printf_chk@plt+0x4>
   22f90:	cmp.w	fp, #0
   22f94:	bne.w	233be <btrfs_run_delayed_refs@@Base+0x532>
   22f98:	ldrb.w	r3, [sl, #32]
   22f9c:	cbz	r3, 22fa8 <btrfs_run_delayed_refs@@Base+0x11c>
   22f9e:	ldrb.w	r3, [r4, #60]	; 0x3c
   22fa2:	cmp	r3, #2
   22fa4:	beq.w	23332 <btrfs_run_delayed_refs@@Base+0x4a6>
   22fa8:	ldrb.w	r3, [r6, #60]	; 0x3c
   22fac:	mov	r0, r4
   22fae:	bfc	r3, #3, #1
   22fb2:	strb.w	r3, [r6, #60]	; 0x3c
   22fb6:	ldr.w	r3, [sl, #76]	; 0x4c
   22fba:	adds	r3, #1
   22fbc:	str.w	r3, [sl, #76]	; 0x4c
   22fc0:	bl	1eb98 <btrfs_create_tree@@Base+0x874>
   22fc4:	ldr	r2, [pc, #452]	; (2318c <btrfs_run_delayed_refs@@Base+0x300>)
   22fc6:	ldr	r3, [pc, #440]	; (23180 <btrfs_run_delayed_refs@@Base+0x2f4>)
   22fc8:	add	r2, pc
   22fca:	ldr	r3, [r2, r3]
   22fcc:	ldr	r2, [r3, #0]
   22fce:	ldr	r3, [sp, #124]	; 0x7c
   22fd0:	eors	r2, r3
   22fd2:	beq.w	233ca <btrfs_run_delayed_refs@@Base+0x53e>
   22fd6:	blx	86b8 <__stack_chk_fail@plt>
   22fda:	mov	r0, r1
   22fdc:	str	r1, [sp, #64]	; 0x40
   22fde:	bl	134ee <rb_first@@Base>
   22fe2:	ldr	r1, [sp, #64]	; 0x40
   22fe4:	ldr	r2, [r0, #12]
   22fe6:	add.w	r3, r0, #12
   22fea:	mov	r4, r0
   22fec:	cmp	r2, r3
   22fee:	beq.n	22ef6 <btrfs_run_delayed_refs@@Base+0x6a>
   22ff0:	ldr	r1, [pc, #412]	; (23190 <btrfs_run_delayed_refs@@Base+0x304>)
   22ff2:	movw	r2, #3786	; 0xeca
   22ff6:	ldr	r0, [pc, #412]	; (23194 <btrfs_run_delayed_refs@@Base+0x308>)
   22ff8:	add	r1, pc
   22ffa:	addw	r1, r1, #742	; 0x2e6
   22ffe:	add	r0, pc
   23000:	bl	1ed9c <btrfs_create_tree@@Base+0xa78>
   23004:	vmov	r1, s16
   23008:	mov	r2, r6
   2300a:	mov	r0, sl
   2300c:	bl	22dd0 <cleanup_ref_head@@Base>
   23010:	cmp	r0, #0
   23012:	bgt.w	22ec4 <btrfs_run_delayed_refs@@Base+0x38>
   23016:	b.n	22ec6 <btrfs_run_delayed_refs@@Base+0x3a>
   23018:	ldr	r3, [r6, #56]	; 0x38
   2301a:	ldr	r2, [r4, #56]	; 0x38
   2301c:	add	r3, r2
   2301e:	b.n	22f38 <btrfs_run_delayed_refs@@Base+0xac>
   23020:	ldr	r2, [pc, #372]	; (23198 <btrfs_run_delayed_refs@@Base+0x30c>)
   23022:	movs	r3, #1
   23024:	ldr	r1, [pc, #372]	; (2319c <btrfs_run_delayed_refs@@Base+0x310>)
   23026:	ldr	r0, [pc, #376]	; (231a0 <btrfs_run_delayed_refs@@Base+0x314>)
   23028:	add	r2, pc
   2302a:	str	r3, [sp, #0]
   2302c:	addw	r2, r2, #761	; 0x2f9
   23030:	add	r1, pc
   23032:	add	r0, pc
   23034:	movw	r3, #3910	; 0xf46
   23038:	bl	1e642 <btrfs_create_tree@@Base+0x31e>
   2303c:	b.n	22f3a <btrfs_run_delayed_refs@@Base+0xae>
   2303e:	movs	r0, #0
   23040:	movs	r1, #0
   23042:	b.n	22f64 <btrfs_run_delayed_refs@@Base+0xd8>
   23044:	cmp	r5, #1
   23046:	bne.w	23352 <btrfs_run_delayed_refs@@Base+0x4c6>
   2304a:	cmp	r2, #0
   2304c:	beq.w	23388 <btrfs_run_delayed_refs@@Base+0x4fc>
   23050:	cmp.w	fp, #0
   23054:	beq.n	2305e <btrfs_run_delayed_refs@@Base+0x1d2>
   23056:	ldrb.w	r3, [fp, #19]
   2305a:	eor.w	r3, r3, #1
   2305e:	ldr	r1, [pc, #324]	; (231a4 <btrfs_run_delayed_refs@@Base+0x318>)
   23060:	ldr	r0, [pc, #324]	; (231a8 <btrfs_run_delayed_refs@@Base+0x31c>)
   23062:	vmov	r2, s17
   23066:	add	r1, pc
   23068:	add	r0, pc
   2306a:	str	r3, [sp, #0]
   2306c:	movw	r3, #3815	; 0xee7
   23070:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   23074:	ldr.w	r7, [sl]
   23078:	movs	r2, #4
   2307a:	ldr.w	r3, [r7, #308]	; 0x134
   2307e:	mov	r0, r7
   23080:	ldr.w	r3, [r3, #188]	; 0xbc
   23084:	and.w	r3, r3, #256	; 0x100
   23088:	str	r3, [sp, #40]	; 0x28
   2308a:	movs	r3, #0
   2308c:	str	r3, [sp, #44]	; 0x2c
   2308e:	movs	r3, #0
   23090:	bl	1e4ec <btrfs_create_tree@@Base+0x1c8>
   23094:	str	r0, [sp, #64]	; 0x40
   23096:	cbnz	r0, 230a8 <btrfs_run_delayed_refs@@Base+0x21c>
   23098:	ldr	r3, [sp, #68]	; 0x44
   2309a:	movw	r2, #2398	; 0x95e
   2309e:	ldr	r0, [pc, #268]	; (231ac <btrfs_run_delayed_refs@@Base+0x320>)
   230a0:	addw	r1, r3, #805	; 0x325
   230a4:	add	r0, pc
   230a6:	b.n	23000 <btrfs_run_delayed_refs@@Base+0x174>
   230a8:	ldrd	r0, r1, [sp, #40]	; 0x28
   230ac:	add.w	r5, sp, #113	; 0x71
   230b0:	ldrd	r2, r3, [r4, #24]
   230b4:	orrs	r1, r0
   230b6:	strd	r2, r3, [sp, #104]	; 0x68
   230ba:	beq.n	23106 <btrfs_run_delayed_refs@@Base+0x27a>
   230bc:	ldr.w	ip, [r4, #80]	; 0x50
   230c0:	mov	r0, ip
   230c2:	str.w	ip, [sp, #113]	; 0x71
   230c6:	asrs	r1, r0, #31
   230c8:	str	r1, [r5, #4]
   230ca:	movs	r5, #33	; 0x21
   230cc:	movs	r1, #169	; 0xa9
   230ce:	strb.w	r1, [sp, #112]	; 0x70
   230d2:	cmp.w	r9, #0
   230d6:	it	eq
   230d8:	cmpeq.w	r8, #2
   230dc:	bne.n	231c8 <btrfs_run_delayed_refs@@Base+0x33c>
   230de:	movs	r1, #8
   230e0:	add.w	r0, r7, #192	; 0xc0
   230e4:	str	r1, [sp, #8]
   230e6:	add	r1, sp, #96	; 0x60
   230e8:	str	r1, [sp, #4]
   230ea:	add	r1, sp, #88	; 0x58
   230ec:	str	r1, [sp, #0]
   230ee:	bl	16ac0 <find_first_extent_bit@@Base>
   230f2:	cbz	r0, 2311a <btrfs_run_delayed_refs@@Base+0x28e>
   230f4:	ldr	r1, [pc, #184]	; (231b0 <btrfs_run_delayed_refs@@Base+0x324>)
   230f6:	movw	r2, #2415	; 0x96f
   230fa:	ldr	r0, [pc, #184]	; (231b4 <btrfs_run_delayed_refs@@Base+0x328>)
   230fc:	add	r1, pc
   230fe:	addw	r1, r1, #805	; 0x325
   23102:	add	r0, pc
   23104:	b.n	23000 <btrfs_run_delayed_refs@@Base+0x174>
   23106:	ldr	r1, [r4, #32]
   23108:	str.w	r1, [sp, #113]	; 0x71
   2310c:	ldr	r1, [r4, #36]	; 0x24
   2310e:	str	r1, [r5, #4]
   23110:	movs	r1, #168	; 0xa8
   23112:	movs	r5, #51	; 0x33
   23114:	strb.w	r1, [sp, #112]	; 0x70
   23118:	b.n	230d2 <btrfs_run_delayed_refs@@Base+0x246>
   2311a:	ldrd	r0, r1, [r4, #24]
   2311e:	ldrd	r2, r3, [sp, #88]	; 0x58
   23122:	cmp	r1, r3
   23124:	it	eq
   23126:	cmpeq	r0, r2
   23128:	beq.n	2313c <btrfs_run_delayed_refs@@Base+0x2b0>
   2312a:	ldr	r1, [pc, #140]	; (231b8 <btrfs_run_delayed_refs@@Base+0x32c>)
   2312c:	mov.w	r2, #2416	; 0x970
   23130:	ldr	r0, [pc, #136]	; (231bc <btrfs_run_delayed_refs@@Base+0x330>)
   23132:	add	r1, pc
   23134:	addw	r1, r1, #805	; 0x325
   23138:	add	r0, pc
   2313a:	b.n	23000 <btrfs_run_delayed_refs@@Base+0x174>
   2313c:	ldrd	r3, r2, [r4, #32]
   23140:	adds	r3, r0, r3
   23142:	adc.w	r2, r1, r2
   23146:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2314a:	str	r3, [sp, #56]	; 0x38
   2314c:	adc.w	r3, r2, #4294967295	; 0xffffffff
   23150:	str	r3, [sp, #60]	; 0x3c
   23152:	ldrd	r0, r1, [sp, #56]	; 0x38
   23156:	ldrd	r2, r3, [sp, #96]	; 0x60
   2315a:	cmp	r1, r3
   2315c:	it	eq
   2315e:	cmpeq	r0, r2
   23160:	beq.n	231c8 <btrfs_run_delayed_refs@@Base+0x33c>
   23162:	ldr	r1, [pc, #92]	; (231c0 <btrfs_run_delayed_refs@@Base+0x334>)
   23164:	movw	r2, #2417	; 0x971
   23168:	ldr	r0, [pc, #88]	; (231c4 <btrfs_run_delayed_refs@@Base+0x338>)
   2316a:	add	r1, pc
   2316c:	addw	r1, r1, #805	; 0x325
   23170:	add	r0, pc
   23172:	b.n	23000 <btrfs_run_delayed_refs@@Base+0x174>
   23174:	lsls	r0, r0, #4
   23176:	movs	r0, r2
   23178:	lsls	r0, r0, #8
   2317a:	movs	r0, r4
   2317c:	subs	r4, r5, #3
   2317e:	movs	r4, r0
   23180:	lsls	r4, r4, #8
   23182:	movs	r0, r0
   23184:	add	r4, sp, #168	; 0xa8
   23186:	movs	r1, r0
   23188:	add	r2, sp, #536	; 0x218
   2318a:	movs	r1, r0
   2318c:	adds	r0, r0, #7
   2318e:	movs	r4, r0
   23190:	add	r2, sp, #936	; 0x3a8
   23192:	movs	r1, r0
   23194:	add	r1, sp, #972	; 0x3cc
   23196:	movs	r1, r0
   23198:	add	r2, sp, #744	; 0x2e8
   2319a:	movs	r1, r0
   2319c:	add	r3, pc, #516	; (adr r3, 233a4 <btrfs_run_delayed_refs@@Base+0x518>)
   2319e:	movs	r1, r0
   231a0:	add	r6, pc, #892	; (adr r6, 23520 <btrfs_fix_block_accounting@@Base+0x124>)
   231a2:	movs	r1, r0
   231a4:	add	r3, pc, #300	; (adr r3, 232d4 <btrfs_run_delayed_refs@@Base+0x448>)
   231a6:	movs	r1, r0
   231a8:	add	r1, sp, #1004	; 0x3ec
   231aa:	movs	r1, r0
   231ac:	add	r1, sp, #284	; 0x11c
   231ae:	movs	r1, r0
   231b0:	add	r1, sp, #920	; 0x398
   231b2:	movs	r1, r0
   231b4:	ldr	r1, [r4, #76]	; 0x4c
   231b6:	movs	r1, r0
   231b8:	add	r1, sp, #704	; 0x2c0
   231ba:	movs	r1, r0
   231bc:	add	r1, sp, #328	; 0x148
   231be:	movs	r1, r0
   231c0:	add	r1, sp, #480	; 0x1e0
   231c2:	movs	r1, r0
   231c4:	add	r1, sp, #192	; 0xc0
   231c6:	movs	r1, r0
   231c8:	bl	17df8 <btrfs_alloc_path@@Base>
   231cc:	mov	r8, r0
   231ce:	cmp	r0, #0
   231d0:	beq.w	2334c <btrfs_run_delayed_refs@@Base+0x4c0>
   231d4:	ldr	r1, [r7, #24]
   231d6:	movs	r3, #1
   231d8:	mov	r2, r0
   231da:	str	r3, [sp, #4]
   231dc:	mov	r0, sl
   231de:	add	r3, sp, #84	; 0x54
   231e0:	str	r3, [sp, #0]
   231e2:	add	r3, sp, #104	; 0x68
   231e4:	str	r5, [sp, #84]	; 0x54
   231e6:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   231ea:	mov	r5, r0
   231ec:	cmp	r0, #0
   231ee:	bne.w	23326 <btrfs_run_delayed_refs@@Base+0x49a>
   231f2:	ldr.w	r0, [r8]
   231f6:	movs	r2, #25
   231f8:	ldr.w	r3, [r8, #32]
   231fc:	mov.w	r1, #1
   23200:	add.w	r9, r0, #96	; 0x60
   23204:	mla	r3, r2, r3, r9
   23208:	ldr.w	r3, [r3, #118]	; 0x76
   2320c:	add.w	r2, r3, #101	; 0x65
   23210:	str	r3, [sp, #48]	; 0x30
   23212:	add.w	r3, r9, r2
   23216:	strb.w	r1, [r9, r2]
   2321a:	strb	r5, [r3, #1]
   2321c:	strb	r5, [r3, #2]
   2321e:	strb	r5, [r3, #3]
   23220:	strb	r5, [r3, #4]
   23222:	strb	r5, [r3, #5]
   23224:	strb	r5, [r3, #6]
   23226:	strb	r5, [r3, #7]
   23228:	ldrd	r1, r2, [sl, #8]
   2322c:	str	r1, [r3, #8]
   2322e:	str	r2, [r3, #12]
   23230:	ldrd	r2, r1, [fp, #24]
   23234:	orr.w	r2, r2, #2
   23238:	str	r2, [r3, #16]
   2323a:	str	r1, [r3, #20]
   2323c:	ldr	r3, [sp, #48]	; 0x30
   2323e:	add.w	r5, r3, #125	; 0x7d
   23242:	ldrd	r2, r3, [sp, #40]	; 0x28
   23246:	orrs	r3, r2
   23248:	bne.n	23262 <btrfs_run_delayed_refs@@Base+0x3d6>
   2324a:	movs	r3, #17
   2324c:	mov	r2, r5
   2324e:	mov	r1, fp
   23250:	str	r0, [sp, #76]	; 0x4c
   23252:	bl	172d8 <write_extent_buffer@@Base>
   23256:	ldr	r3, [r4, #80]	; 0x50
   23258:	add	r5, r9
   2325a:	ldr	r0, [sp, #76]	; 0x4c
   2325c:	strb	r3, [r5, #17]
   2325e:	ldr	r5, [sp, #48]	; 0x30
   23260:	adds	r5, #143	; 0x8f
   23262:	movs	r2, #176	; 0xb0
   23264:	strb.w	r2, [r9, r5]
   23268:	ldrd	r1, r2, [r4, #64]	; 0x40
   2326c:	add.w	r3, r9, r5
   23270:	str.w	r1, [r3, #1]
   23274:	str.w	r2, [r3, #5]
   23278:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2327c:	mov	r0, r8
   2327e:	bl	17e26 <btrfs_free_path@@Base>
   23282:	ldr.w	r3, [r7, #384]	; 0x180
   23286:	mov	r0, sl
   23288:	str	r3, [sp, #0]
   2328a:	movs	r3, #0
   2328c:	str	r3, [sp, #4]
   2328e:	ldrd	r2, r3, [sp, #104]	; 0x68
   23292:	bl	2c788 <remove_from_free_space_tree@@Base>
   23296:	mov	r5, r0
   23298:	cmp	r0, #0
   2329a:	bne.n	23326 <btrfs_run_delayed_refs@@Base+0x49a>
   2329c:	str	r0, [sp, #12]
   2329e:	mov.w	r8, #1
   232a2:	str.w	r8, [sp, #8]
   232a6:	ldr.w	r3, [r7, #384]	; 0x180
   232aa:	strd	r3, r0, [sp]
   232ae:	mov	r0, r7
   232b0:	ldrd	r2, r3, [sp, #104]	; 0x68
   232b4:	bl	1efe4 <btrfs_lookup_block_group@@Base+0x188>
   232b8:	ldr.w	r2, [r7, #384]	; 0x180
   232bc:	ldr	r3, [sp, #64]	; 0x40
   232be:	movs	r1, #0
   232c0:	mov	r5, r0
   232c2:	mov	r0, r2
   232c4:	strd	r0, r1, [sp, #48]	; 0x30
   232c8:	ldrd	r0, r1, [r3, #32]
   232cc:	ldrd	r2, r3, [sp, #48]	; 0x30
   232d0:	cmp	r1, r3
   232d2:	it	eq
   232d4:	cmpeq	r0, r2
   232d6:	bcs.n	2333a <btrfs_run_delayed_refs@@Base+0x4ae>
   232d8:	ldr	r2, [pc, #252]	; (233d8 <btrfs_run_delayed_refs@@Base+0x54c>)
   232da:	movw	r3, #2462	; 0x99e
   232de:	ldr	r1, [pc, #252]	; (233dc <btrfs_run_delayed_refs@@Base+0x550>)
   232e0:	ldr	r0, [pc, #252]	; (233e0 <btrfs_run_delayed_refs@@Base+0x554>)
   232e2:	add	r2, pc
   232e4:	addw	r2, r2, #805	; 0x325
   232e8:	add	r1, pc
   232ea:	add	r0, pc
   232ec:	str.w	r8, [sp]
   232f0:	bl	1e642 <btrfs_create_tree@@Base+0x31e>
   232f4:	ldr	r3, [sp, #64]	; 0x40
   232f6:	movs	r2, #0
   232f8:	mov	r1, r3
   232fa:	movs	r3, #0
   232fc:	strd	r2, r3, [r1, #32]
   23300:	ldrd	r2, r3, [r4, #64]	; 0x40
   23304:	cmp	r3, #0
   23306:	it	eq
   23308:	cmpeq	r2, #2
   2330a:	bne.n	23326 <btrfs_run_delayed_refs@@Base+0x49a>
   2330c:	movs	r3, #8
   2330e:	str	r3, [sp, #8]
   23310:	ldrd	r2, r3, [sp, #96]	; 0x60
   23314:	ldr.w	r0, [sl]
   23318:	strd	r2, r3, [sp]
   2331c:	adds	r0, #192	; 0xc0
   2331e:	ldrd	r2, r3, [sp, #88]	; 0x58
   23322:	bl	166ee <clear_extent_bits@@Base>
   23326:	cmp.w	fp, #0
   2332a:	bne.n	233be <btrfs_run_delayed_refs@@Base+0x532>
   2332c:	cmp	r5, #0
   2332e:	bne.w	22f98 <btrfs_run_delayed_refs@@Base+0x10c>
   23332:	mov	r0, r4
   23334:	bl	1eb98 <btrfs_create_tree@@Base+0x874>
   23338:	b.n	22ec4 <btrfs_run_delayed_refs@@Base+0x38>
   2333a:	ldr	r3, [sp, #48]	; 0x30
   2333c:	subs	r2, r0, r3
   2333e:	ldr	r3, [sp, #52]	; 0x34
   23340:	sbc.w	r3, r1, r3
   23344:	ldr	r1, [sp, #64]	; 0x40
   23346:	str	r2, [r1, #32]
   23348:	str	r3, [r1, #36]	; 0x24
   2334a:	b.n	23300 <btrfs_run_delayed_refs@@Base+0x474>
   2334c:	mvn.w	r5, #11
   23350:	b.n	23326 <btrfs_run_delayed_refs@@Base+0x49a>
   23352:	cmp	r5, #2
   23354:	bne.n	23388 <btrfs_run_delayed_refs@@Base+0x4fc>
   23356:	movs	r2, #0
   23358:	movs	r3, #0
   2335a:	strd	r2, r3, [sp, #32]
   2335e:	mov	r0, sl
   23360:	ldr	r2, [r4, #80]	; 0x50
   23362:	strd	r8, r9, [sp, #16]
   23366:	asrs	r3, r2, #31
   23368:	strd	r2, r3, [sp, #24]
   2336c:	ldrd	r2, r3, [r4, #72]	; 0x48
   23370:	strd	r2, r3, [sp, #8]
   23374:	ldrd	r2, r3, [r4, #32]
   23378:	strd	r2, r3, [sp]
   2337c:	ldrd	r2, r3, [r4, #24]
   23380:	bl	1f774 <hash_extent_data_ref@@Base+0x3f4>
   23384:	mov	r5, r0
   23386:	b.n	23326 <btrfs_run_delayed_refs@@Base+0x49a>
   23388:	ldr	r2, [pc, #88]	; (233e4 <btrfs_run_delayed_refs@@Base+0x558>)
   2338a:	movs	r3, #1
   2338c:	ldr	r1, [pc, #88]	; (233e8 <btrfs_run_delayed_refs@@Base+0x55c>)
   2338e:	ldr	r0, [pc, #92]	; (233ec <btrfs_run_delayed_refs@@Base+0x560>)
   23390:	add	r2, pc
   23392:	add.w	r2, r2, #784	; 0x310
   23396:	add	r1, pc
   23398:	add	r0, pc
   2339a:	str	r3, [sp, #0]
   2339c:	movw	r3, #3822	; 0xeee
   233a0:	bl	1e89c <btrfs_create_tree@@Base+0x578>
   233a4:	ldr	r2, [pc, #72]	; (233f0 <btrfs_run_delayed_refs@@Base+0x564>)
   233a6:	movs	r3, #1
   233a8:	ldr	r1, [pc, #72]	; (233f4 <btrfs_run_delayed_refs@@Base+0x568>)
   233aa:	ldr	r0, [pc, #76]	; (233f8 <btrfs_run_delayed_refs@@Base+0x56c>)
   233ac:	add	r2, pc
   233ae:	str	r3, [sp, #0]
   233b0:	addw	r2, r2, #831	; 0x33f
   233b4:	add	r1, pc
   233b6:	add	r0, pc
   233b8:	movw	r3, #3842	; 0xf02
   233bc:	b.n	233a0 <btrfs_run_delayed_refs@@Base+0x514>
   233be:	mov	r0, fp
   233c0:	blx	85dc <free@plt+0x4>
   233c4:	b.n	2332c <btrfs_run_delayed_refs@@Base+0x4a0>
   233c6:	mov	r5, r0
   233c8:	b.n	22fc4 <btrfs_run_delayed_refs@@Base+0x138>
   233ca:	mov	r0, r5
   233cc:	add	sp, #132	; 0x84
   233ce:	vpop	{d8}
   233d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233d6:	nop
   233d8:	add	r0, sp, #0
   233da:	movs	r1, r0
   233dc:	add	r0, pc, #804	; (adr r0, 23704 <btrfs_record_file_extent@@Base+0x120>)
   233de:	movs	r1, r0
   233e0:	add	r4, pc, #156	; (adr r4, 23480 <btrfs_fix_block_accounting@@Base+0x84>)
   233e2:	movs	r1, r0
   233e4:	add	r7, pc, #328	; (adr r7, 23530 <btrfs_fix_block_accounting@@Base+0x134>)
   233e6:	movs	r1, r0
   233e8:	add	r0, pc, #108	; (adr r0, 23458 <btrfs_fix_block_accounting@@Base+0x5c>)
   233ea:	movs	r1, r0
   233ec:	add	r3, pc, #484	; (adr r3, 235d4 <btrfs_fix_block_accounting@@Base+0x1d8>)
   233ee:	movs	r1, r0
   233f0:	add	r7, pc, #216	; (adr r7, 234cc <btrfs_fix_block_accounting@@Base+0xd0>)
   233f2:	movs	r1, r0
   233f4:	ldr	r7, [sp, #1012]	; 0x3f4
   233f6:	movs	r1, r0
   233f8:	add	r3, pc, #364	; (adr r3, 23568 <btrfs_fix_block_accounting@@Base+0x16c>)
   233fa:	movs	r1, r0

000233fc <btrfs_fix_block_accounting@@Base>:
   233fc:	ldr	r2, [pc, #460]	; (235cc <btrfs_fix_block_accounting@@Base+0x1d0>)
   233fe:	mov.w	r1, #4294967295	; 0xffffffff
   23402:	ldr	r3, [pc, #460]	; (235d0 <btrfs_fix_block_accounting@@Base+0x1d4>)
   23404:	add	r2, pc
   23406:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2340a:	sub	sp, #124	; 0x7c
   2340c:	ldr.w	r8, [r0]
   23410:	mov	r5, r0
   23412:	ldr	r3, [r2, r3]
   23414:	ldr.w	r6, [r8, #24]
   23418:	ldr	r3, [r3, #0]
   2341a:	str	r3, [sp, #116]	; 0x74
   2341c:	mov.w	r3, #0
   23420:	bl	22e8c <btrfs_run_delayed_refs@@Base>
   23424:	cmp	r0, #0
   23426:	bne.w	235c0 <btrfs_fix_block_accounting@@Base+0x1c4>
   2342a:	movs	r7, #0
   2342c:	mov	fp, r7
   2342e:	mov	sl, r7
   23430:	mov	r9, r7
   23432:	mov	r2, r7
   23434:	mov	r3, fp
   23436:	mov	r0, r8
   23438:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   2343c:	mov	r4, r0
   2343e:	cbz	r0, 2348c <btrfs_fix_block_accounting@@Base+0x90>
   23440:	ldrd	r2, r3, [r0, #40]	; 0x28
   23444:	ldr.w	r7, [r0, #49]	; 0x31
   23448:	ldr.w	r1, [r0, #53]	; 0x35
   2344c:	adds	r7, r7, r2
   2344e:	strd	sl, r9, [r0, #72]	; 0x48
   23452:	adc.w	fp, r1, r3
   23456:	ldr	r3, [r0, #60]	; 0x3c
   23458:	movs	r1, #1
   2345a:	strd	sl, r9, [r3, #16]
   2345e:	ldrd	r2, r3, [r0, #40]	; 0x28
   23462:	ldr.w	r0, [r6, #464]	; 0x1d0
   23466:	str	r1, [sp, #8]
   23468:	ldr.w	ip, [r4, #49]	; 0x31
   2346c:	adds	r0, #128	; 0x80
   2346e:	ldr.w	lr, [r4, #53]	; 0x35
   23472:	adds.w	ip, ip, r2
   23476:	adc.w	lr, lr, r3
   2347a:	adds.w	r4, ip, #4294967295	; 0xffffffff
   2347e:	adc.w	lr, lr, #4294967295	; 0xffffffff
   23482:	strd	r4, lr, [sp]
   23486:	bl	16864 <set_extent_bits@@Base>
   2348a:	b.n	23432 <btrfs_fix_block_accounting@@Base+0x36>
   2348c:	add	r7, sp, #48	; 0x30
   2348e:	add.w	sl, sp, #28
   23492:	mov	r0, r7
   23494:	bl	17df0 <btrfs_init_path@@Base>
   23498:	ldr.w	r1, [r6, #464]	; 0x1d0
   2349c:	movs	r3, #168	; 0xa8
   2349e:	strd	r4, r4, [sp]
   234a2:	strb.w	r3, [sp, #36]	; 0x24
   234a6:	mov	r2, sl
   234a8:	mov	r3, r7
   234aa:	ldr	r1, [r1, #24]
   234ac:	mov	r0, r5
   234ae:	strb.w	r4, [sp, #37]	; 0x25
   234b2:	strb.w	r4, [sp, #38]	; 0x26
   234b6:	strb.w	r4, [sp, #39]	; 0x27
   234ba:	strb.w	r4, [sp, #40]	; 0x28
   234be:	strb.w	r4, [sp, #41]	; 0x29
   234c2:	strb.w	r4, [sp, #42]	; 0x2a
   234c6:	strb.w	r4, [sp, #43]	; 0x2b
   234ca:	strb.w	r4, [sp, #44]	; 0x2c
   234ce:	strd	r4, r4, [sp, #28]
   234d2:	bl	1a1e4 <btrfs_search_slot@@Base>
   234d6:	subs	r3, r0, #0
   234d8:	blt.n	2359c <btrfs_fix_block_accounting@@Base+0x1a0>
   234da:	ldr.w	r9, [pc, #248]	; 235d4 <btrfs_fix_block_accounting@@Base+0x1d8>
   234de:	movs	r4, #0
   234e0:	ldr.w	fp, [pc, #244]	; 235d8 <btrfs_fix_block_accounting@@Base+0x1dc>
   234e4:	movs	r5, #0
   234e6:	add	r9, pc
   234e8:	addw	r9, r9, #851	; 0x353
   234ec:	add	fp, pc
   234ee:	ldr	r0, [sp, #48]	; 0x30
   234f0:	ldr	r2, [sp, #80]	; 0x50
   234f2:	ldr.w	r3, [r0, #192]	; 0xc0
   234f6:	cmp	r2, r3
   234f8:	bcc.n	23518 <btrfs_fix_block_accounting@@Base+0x11c>
   234fa:	ldr.w	r0, [r6, #464]	; 0x1d0
   234fe:	mov	r1, r7
   23500:	movs	r2, #0
   23502:	strb.w	r2, [sp, #113]	; 0x71
   23506:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   2350a:	subs	r3, r0, #0
   2350c:	blt.n	2359c <btrfs_fix_block_accounting@@Base+0x1a0>
   2350e:	mov.w	r2, #0
   23512:	bne.n	235b0 <btrfs_fix_block_accounting@@Base+0x1b4>
   23514:	ldr	r0, [sp, #48]	; 0x30
   23516:	ldr	r2, [sp, #80]	; 0x50
   23518:	mov	r1, sl
   2351a:	bl	1e57c <btrfs_create_tree@@Base+0x258>
   2351e:	ldrb.w	r3, [sp, #36]	; 0x24
   23522:	cmp	r3, #168	; 0xa8
   23524:	bne.n	23564 <btrfs_fix_block_accounting@@Base+0x168>
   23526:	ldr.w	r3, [sp, #37]	; 0x25
   2352a:	movs	r1, #1
   2352c:	ldr.w	r2, [sp, #41]	; 0x29
   23530:	movs	r0, #0
   23532:	adds	r4, r4, r3
   23534:	strd	r1, r0, [sp, #8]
   23538:	adc.w	r5, r2, r5
   2353c:	mov	r0, r6
   2353e:	strd	r3, r2, [sp]
   23542:	ldrd	r2, r3, [sp, #28]
   23546:	bl	211f8 <btrfs_update_block_group@@Base>
   2354a:	movw	r3, #3354	; 0xd1a
   2354e:	mov	r2, r9
   23550:	mov	r1, fp
   23552:	str	r0, [sp, #0]
   23554:	ldr	r0, [pc, #132]	; (235dc <btrfs_fix_block_accounting@@Base+0x1e0>)
   23556:	add	r0, pc
   23558:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2355c:	ldr	r3, [sp, #80]	; 0x50
   2355e:	adds	r3, #1
   23560:	str	r3, [sp, #80]	; 0x50
   23562:	b.n	234ee <btrfs_fix_block_accounting@@Base+0xf2>
   23564:	cmp	r3, #169	; 0xa9
   23566:	bne.n	2355c <btrfs_fix_block_accounting@@Base+0x160>
   23568:	ldr.w	r3, [r8, #384]	; 0x180
   2356c:	movs	r2, #1
   2356e:	movs	r1, #0
   23570:	mov	r0, r6
   23572:	adds	r4, r4, r3
   23574:	strd	r2, r1, [sp, #8]
   23578:	str	r3, [sp, #0]
   2357a:	mov.w	r3, #0
   2357e:	str	r3, [sp, #4]
   23580:	adc.w	r5, r5, #0
   23584:	ldrd	r2, r3, [sp, #28]
   23588:	bl	211f8 <btrfs_update_block_group@@Base>
   2358c:	mov	r3, r0
   2358e:	cmp	r0, #0
   23590:	beq.n	2355c <btrfs_fix_block_accounting@@Base+0x160>
   23592:	mov	r0, r7
   23594:	str	r3, [sp, #20]
   23596:	bl	17e00 <btrfs_release_path@@Base>
   2359a:	ldr	r3, [sp, #20]
   2359c:	ldr	r1, [pc, #64]	; (235e0 <btrfs_fix_block_accounting@@Base+0x1e4>)
   2359e:	ldr	r2, [pc, #48]	; (235d0 <btrfs_fix_block_accounting@@Base+0x1d4>)
   235a0:	add	r1, pc
   235a2:	ldr	r2, [r1, r2]
   235a4:	ldr	r1, [r2, #0]
   235a6:	ldr	r2, [sp, #116]	; 0x74
   235a8:	eors	r1, r2
   235aa:	beq.n	235c4 <btrfs_fix_block_accounting@@Base+0x1c8>
   235ac:	blx	86b8 <__stack_chk_fail@plt>
   235b0:	ldr.w	r3, [r6, #464]	; 0x1d0
   235b4:	ldr.w	r3, [r3, #308]	; 0x134
   235b8:	str	r4, [r3, #120]	; 0x78
   235ba:	str	r5, [r3, #124]	; 0x7c
   235bc:	mov	r3, r2
   235be:	b.n	23592 <btrfs_fix_block_accounting@@Base+0x196>
   235c0:	mov	r3, r0
   235c2:	b.n	2359c <btrfs_fix_block_accounting@@Base+0x1a0>
   235c4:	mov	r0, r3
   235c6:	add	sp, #124	; 0x7c
   235c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235cc:	adds	r4, r0, r6
   235ce:	movs	r4, r0
   235d0:	lsls	r4, r4, #8
   235d2:	movs	r0, r0
   235d4:	add	r5, pc, #1008	; (adr r5, 239c8 <btrfs_record_file_extent@@Base+0x3e4>)
   235d6:	movs	r1, r0
   235d8:	ldr	r6, [sp, #788]	; 0x314
   235da:	movs	r1, r0
   235dc:	ldr	r6, [r1, #8]
   235de:	movs	r1, r0
   235e0:	asrs	r0, r5, #31
   235e2:	movs	r4, r0

000235e4 <btrfs_record_file_extent@@Base>:
   235e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235e8:	mov	r6, r0
   235ea:	vpush	{d8}
   235ee:	mov	fp, r1
   235f0:	sub	sp, #156	; 0x9c
   235f2:	strd	r2, r3, [sp, #96]	; 0x60
   235f6:	ldr	r3, [sp, #200]	; 0xc8
   235f8:	ldr.w	r2, [pc, #1080]	; 23a34 <btrfs_record_file_extent@@Base+0x450>
   235fc:	ldrd	r9, sl, [sp, #216]	; 0xd8
   23600:	str	r3, [sp, #76]	; 0x4c
   23602:	add	r2, pc
   23604:	ldr	r3, [sp, #208]	; 0xd0
   23606:	str	r3, [sp, #68]	; 0x44
   23608:	ldr	r3, [sp, #212]	; 0xd4
   2360a:	str	r3, [sp, #72]	; 0x48
   2360c:	ldr.w	r3, [pc, #1064]	; 23a38 <btrfs_record_file_extent@@Base+0x454>
   23610:	ldr	r3, [r2, r3]
   23612:	ldr	r3, [r3, #0]
   23614:	str	r3, [sp, #148]	; 0x94
   23616:	mov.w	r3, #0
   2361a:	ldrd	r3, r4, [sp, #224]	; 0xe0
   2361e:	strd	r3, r4, [sp, #56]	; 0x38
   23622:	movs	r4, #0
   23624:	ldr.w	r3, [pc, #1044]	; 23a3c <btrfs_record_file_extent@@Base+0x458>
   23628:	add	r3, pc
   2362a:	addw	r3, r3, #878	; 0x36e
   2362e:	vmov	s16, r3
   23632:	ldr.w	r3, [pc, #1036]	; 23a40 <btrfs_record_file_extent@@Base+0x45c>
   23636:	add	r3, pc
   23638:	vmov	s17, r3
   2363c:	ldrd	r2, r3, [sp, #56]	; 0x38
   23640:	orrs	r3, r2
   23642:	beq.n	236b8 <btrfs_record_file_extent@@Base+0xd4>
   23644:	orrs.w	r3, r9, sl
   23648:	bne.n	236a6 <btrfs_record_file_extent@@Base+0xc2>
   2364a:	ldrd	r3, r4, [sp, #224]	; 0xe0
   2364e:	mov	r1, fp
   23650:	mov	r0, r6
   23652:	strd	r9, sl, [sp, #8]
   23656:	strd	r3, r4, [sp, #24]
   2365a:	strd	r3, r4, [sp, #16]
   2365e:	ldr	r3, [sp, #68]	; 0x44
   23660:	str	r3, [sp, #0]
   23662:	ldr	r3, [sp, #72]	; 0x48
   23664:	str	r3, [sp, #4]
   23666:	ldrd	r2, r3, [sp, #96]	; 0x60
   2366a:	bl	2e072 <btrfs_insert_file_extent@@Base>
   2366e:	mov	r4, r0
   23670:	cmp	r4, #0
   23672:	blt.n	236b8 <btrfs_record_file_extent@@Base+0xd4>
   23674:	ldr	r3, [sp, #224]	; 0xe0
   23676:	ldr	r2, [sp, #224]	; 0xe0
   23678:	adds.w	r9, r9, r3
   2367c:	ldr	r3, [sp, #228]	; 0xe4
   2367e:	adc.w	sl, sl, r3
   23682:	ldr	r3, [sp, #68]	; 0x44
   23684:	adds	r3, r3, r2
   23686:	ldr	r2, [sp, #228]	; 0xe4
   23688:	str	r3, [sp, #68]	; 0x44
   2368a:	ldr	r3, [sp, #72]	; 0x48
   2368c:	adc.w	r3, r2, r3
   23690:	ldr	r2, [sp, #224]	; 0xe0
   23692:	str	r3, [sp, #72]	; 0x48
   23694:	ldr	r3, [sp, #56]	; 0x38
   23696:	subs	r3, r3, r2
   23698:	ldr	r2, [sp, #228]	; 0xe4
   2369a:	str	r3, [sp, #56]	; 0x38
   2369c:	ldr	r3, [sp, #60]	; 0x3c
   2369e:	sbc.w	r3, r3, r2
   236a2:	str	r3, [sp, #60]	; 0x3c
   236a4:	b.n	2363c <btrfs_record_file_extent@@Base+0x58>
   236a6:	ldr.w	r3, [fp, #464]	; 0x1d0
   236aa:	ldr	r7, [r3, #24]
   236ac:	bl	17df8 <btrfs_alloc_path@@Base>
   236b0:	mov	r5, r0
   236b2:	cbnz	r0, 236ce <btrfs_record_file_extent@@Base+0xea>
   236b4:	mvn.w	r4, #11
   236b8:	ldr	r2, [pc, #904]	; (23a44 <btrfs_record_file_extent@@Base+0x460>)
   236ba:	ldr	r3, [pc, #892]	; (23a38 <btrfs_record_file_extent@@Base+0x454>)
   236bc:	add	r2, pc
   236be:	ldr	r3, [r2, r3]
   236c0:	ldr	r2, [r3, #0]
   236c2:	ldr	r3, [sp, #148]	; 0x94
   236c4:	eors	r2, r3
   236c6:	beq.w	23a26 <btrfs_record_file_extent@@Base+0x442>
   236ca:	blx	86b8 <__stack_chk_fail@plt>
   236ce:	mov.w	r2, #4294967295	; 0xffffffff
   236d2:	movs	r3, #108	; 0x6c
   236d4:	movs	r0, #0
   236d6:	strb.w	r3, [sp, #136]	; 0x88
   236da:	strb.w	r2, [sp, #137]	; 0x89
   236de:	mov	r3, r5
   236e0:	strb.w	r2, [sp, #138]	; 0x8a
   236e4:	mov	r1, r7
   236e6:	strb.w	r2, [sp, #139]	; 0x8b
   236ea:	strb.w	r2, [sp, #140]	; 0x8c
   236ee:	strb.w	r2, [sp, #141]	; 0x8d
   236f2:	strb.w	r2, [sp, #142]	; 0x8e
   236f6:	strb.w	r2, [sp, #143]	; 0x8f
   236fa:	strb.w	r2, [sp, #144]	; 0x90
   236fe:	add	r2, sp, #128	; 0x80
   23700:	strd	r0, r0, [sp]
   23704:	strd	r9, sl, [sp, #128]	; 0x80
   23708:	bl	1a1e4 <btrfs_search_slot@@Base>
   2370c:	subs	r4, r0, #0
   2370e:	blt.w	23a1e <btrfs_record_file_extent@@Base+0x43a>
   23712:	ldr	r0, [pc, #820]	; (23a48 <btrfs_record_file_extent@@Base+0x464>)
   23714:	ite	eq
   23716:	moveq	r3, #1
   23718:	movne	r3, #0
   2371a:	vmov	r2, s16
   2371e:	vmov	r1, s17
   23722:	add	r0, pc
   23724:	str	r3, [sp, #0]
   23726:	movw	r3, #3407	; 0xd4f
   2372a:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   2372e:	movs	r2, #0
   23730:	movs	r3, #0
   23732:	mov	r1, r5
   23734:	mov	r0, r7
   23736:	bl	1b940 <btrfs_previous_extent_item@@Base>
   2373a:	subs	r4, r0, #0
   2373c:	blt.w	23a1e <btrfs_record_file_extent@@Base+0x43a>
   23740:	ldrd	r2, r3, [sp, #224]	; 0xe0
   23744:	ldrd	r0, r1, [sp, #224]	; 0xe0
   23748:	strd	r2, r3, [sp, #40]	; 0x28
   2374c:	movs	r3, #0
   2374e:	cmp	r3, r1
   23750:	mov.w	r2, #134217728	; 0x8000000
   23754:	it	eq
   23756:	cmpeq	r2, r0
   23758:	it	cc
   2375a:	strdcc	r2, r3, [sp, #40]	; 0x28
   2375e:	cmp	r4, #0
   23760:	bne.w	2391a <btrfs_record_file_extent@@Base+0x336>
   23764:	add	r3, sp, #120	; 0x78
   23766:	add	r2, sp, #112	; 0x70
   23768:	add.w	r0, r7, #464	; 0x1d0
   2376c:	mov	r1, r5
   2376e:	bl	1eaf4 <btrfs_create_tree@@Base+0x7d0>
   23772:	ldr	r2, [sp, #120]	; 0x78
   23774:	ldr	r3, [sp, #112]	; 0x70
   23776:	adds	r3, r3, r2
   23778:	ldr	r2, [sp, #116]	; 0x74
   2377a:	str	r3, [sp, #104]	; 0x68
   2377c:	ldr	r3, [sp, #124]	; 0x7c
   2377e:	adc.w	r3, r2, r3
   23782:	str	r3, [sp, #108]	; 0x6c
   23784:	ldrd	r3, r4, [sp, #104]	; 0x68
   23788:	cmp	sl, r4
   2378a:	it	eq
   2378c:	cmpeq	r9, r3
   2378e:	bcs.w	2391a <btrfs_record_file_extent@@Base+0x336>
   23792:	add.w	r0, r7, #464	; 0x1d0
   23796:	add	r3, sp, #128	; 0x80
   23798:	add	r2, sp, #120	; 0x78
   2379a:	mov	r1, r5
   2379c:	bl	1eaf4 <btrfs_create_tree@@Base+0x7d0>
   237a0:	ldrd	r3, r4, [sp, #120]	; 0x78
   237a4:	ldr	r2, [pc, #676]	; (23a4c <btrfs_record_file_extent@@Base+0x468>)
   237a6:	cmp	sl, r4
   237a8:	ldr	r1, [pc, #676]	; (23a50 <btrfs_record_file_extent@@Base+0x46c>)
   237aa:	it	eq
   237ac:	cmpeq	r9, r3
   237ae:	ldr	r0, [pc, #676]	; (23a54 <btrfs_record_file_extent@@Base+0x470>)
   237b0:	add	r2, pc
   237b2:	strd	r3, r4, [sp, #48]	; 0x30
   237b6:	addw	r2, r2, #906	; 0x38a
   237ba:	ite	cc
   237bc:	movcc	r3, #1
   237be:	movcs	r3, #0
   237c0:	add	r1, pc
   237c2:	str	r3, [sp, #0]
   237c4:	add	r0, pc
   237c6:	movw	r3, #3487	; 0xd9f
   237ca:	bl	1e8d4 <btrfs_create_tree@@Base+0x5b0>
   237ce:	ldr	r3, [sp, #48]	; 0x30
   237d0:	ldrd	r8, r7, [sp, #128]	; 0x80
   237d4:	subs.w	r3, r9, r3
   237d8:	str	r3, [sp, #80]	; 0x50
   237da:	ldr	r3, [sp, #52]	; 0x34
   237dc:	sbc.w	r3, sl, r3
   237e0:	mov	r0, r5
   237e2:	str	r3, [sp, #84]	; 0x54
   237e4:	bl	17e00 <btrfs_release_path@@Base>
   237e8:	ldr	r3, [sp, #96]	; 0x60
   237ea:	mov	r2, r5
   237ec:	mov	r1, fp
   237ee:	mov	r0, r6
   237f0:	str	r3, [sp, #128]	; 0x80
   237f2:	ldr	r3, [sp, #100]	; 0x64
   237f4:	str	r3, [sp, #132]	; 0x84
   237f6:	ldr	r3, [sp, #68]	; 0x44
   237f8:	str.w	r3, [sp, #137]	; 0x89
   237fc:	ldr	r3, [sp, #72]	; 0x48
   237fe:	str.w	r3, [sp, #141]	; 0x8d
   23802:	movs	r3, #108	; 0x6c
   23804:	strb.w	r3, [sp, #136]	; 0x88
   23808:	movs	r3, #53	; 0x35
   2380a:	str	r3, [sp, #120]	; 0x78
   2380c:	movs	r3, #1
   2380e:	str	r3, [sp, #4]
   23810:	add	r3, sp, #120	; 0x78
   23812:	str	r3, [sp, #0]
   23814:	add	r3, sp, #128	; 0x80
   23816:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2381a:	mov	r4, r0
   2381c:	cmp	r0, #0
   2381e:	bne.w	23a1e <btrfs_record_file_extent@@Base+0x43a>
   23822:	ldr	r0, [r5, #0]
   23824:	mov.w	lr, #25
   23828:	ldr	r3, [r5, #32]
   2382a:	add.w	r2, r0, #96	; 0x60
   2382e:	ldr	r1, [r6, #8]
   23830:	ldr.w	ip, [r6, #12]
   23834:	mla	r3, lr, r3, r2
   23838:	ldr.w	lr, [r3, #118]	; 0x76
   2383c:	add.w	lr, lr, #101	; 0x65
   23840:	add.w	r3, r2, lr
   23844:	str.w	r1, [r2, lr]
   23848:	mov.w	r2, #1
   2384c:	strb	r2, [r3, #20]
   2384e:	ldr	r2, [sp, #48]	; 0x30
   23850:	str.w	ip, [r3, #4]
   23854:	strb	r4, [r3, #16]
   23856:	str.w	r2, [r3, #21]
   2385a:	ldr	r2, [sp, #52]	; 0x34
   2385c:	strb	r4, [r3, #17]
   2385e:	strb	r4, [r3, #18]
   23860:	str.w	r2, [r3, #25]
   23864:	ldr	r2, [sp, #80]	; 0x50
   23866:	strb	r4, [r3, #19]
   23868:	str.w	r8, [r3, #29]
   2386c:	str.w	r2, [r3, #37]	; 0x25
   23870:	ldr	r2, [sp, #84]	; 0x54
   23872:	str.w	r7, [r3, #33]	; 0x21
   23876:	str.w	r8, [r3, #8]
   2387a:	str.w	r2, [r3, #41]	; 0x29
   2387e:	ldr	r2, [sp, #40]	; 0x28
   23880:	str	r7, [r3, #12]
   23882:	str.w	r2, [r3, #45]	; 0x2d
   23886:	ldr	r2, [sp, #44]	; 0x2c
   23888:	str.w	r2, [r3, #49]	; 0x31
   2388c:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   23890:	ldr	r3, [sp, #76]	; 0x4c
   23892:	ldr	r2, [sp, #76]	; 0x4c
   23894:	mov	r0, r5
   23896:	ldr	r1, [sp, #40]	; 0x28
   23898:	ldr	r3, [r3, #24]
   2389a:	ldr	r2, [r2, #28]
   2389c:	adds	r3, r3, r1
   2389e:	ldr	r1, [sp, #44]	; 0x2c
   238a0:	adc.w	r2, r1, r2
   238a4:	ldr	r1, [sp, #76]	; 0x4c
   238a6:	str	r3, [r1, #24]
   238a8:	str	r2, [r1, #28]
   238aa:	bl	17e00 <btrfs_release_path@@Base>
   238ae:	ldr	r3, [sp, #68]	; 0x44
   238b0:	ldr	r2, [sp, #80]	; 0x50
   238b2:	mov	r0, r6
   238b4:	ldr	r1, [sp, #84]	; 0x54
   238b6:	subs	r2, r3, r2
   238b8:	ldr	r3, [sp, #72]	; 0x48
   238ba:	strd	r8, r7, [sp]
   238be:	sbc.w	r3, r3, r1
   238c2:	strd	r2, r3, [sp, #32]
   238c6:	ldr	r3, [sp, #96]	; 0x60
   238c8:	mov	r1, fp
   238ca:	ldr.w	r2, [fp, #447]	; 0x1bf
   238ce:	str	r3, [sp, #24]
   238d0:	ldr	r3, [sp, #100]	; 0x64
   238d2:	str	r3, [sp, #28]
   238d4:	ldr.w	r3, [fp, #451]	; 0x1c3
   238d8:	strd	r2, r3, [sp, #16]
   238dc:	movs	r2, #0
   238de:	movs	r3, #0
   238e0:	strd	r2, r3, [sp, #8]
   238e4:	ldrd	r2, r3, [sp, #48]	; 0x30
   238e8:	bl	20098 <btrfs_inc_extent_ref@@Base>
   238ec:	mov	r4, r0
   238ee:	cmp	r0, #0
   238f0:	bne.w	23a1e <btrfs_record_file_extent@@Base+0x43a>
   238f4:	ldr	r3, [sp, #80]	; 0x50
   238f6:	subs.w	r3, r8, r3
   238fa:	str	r3, [sp, #224]	; 0xe0
   238fc:	ldr	r3, [sp, #84]	; 0x54
   238fe:	sbc.w	r3, r7, r3
   23902:	str	r3, [sp, #228]	; 0xe4
   23904:	ldrd	r0, r1, [sp, #224]	; 0xe0
   23908:	ldrd	r2, r3, [sp, #40]	; 0x28
   2390c:	cmp	r3, r1
   2390e:	it	eq
   23910:	cmpeq	r2, r0
   23912:	it	cc
   23914:	strdcc	r2, r3, [sp, #224]	; 0xe0
   23918:	b.n	23a1e <btrfs_record_file_extent@@Base+0x43a>
   2391a:	ldr	r3, [sp, #40]	; 0x28
   2391c:	mov	r1, r5
   2391e:	mov	r0, r7
   23920:	adds.w	r3, r9, r3
   23924:	str	r3, [sp, #88]	; 0x58
   23926:	ldr	r3, [sp, #44]	; 0x2c
   23928:	adc.w	r3, sl, r3
   2392c:	str	r3, [sp, #92]	; 0x5c
   2392e:	ldrd	r2, r3, [sp, #88]	; 0x58
   23932:	bl	1b9e4 <btrfs_next_extent_item@@Base>
   23936:	subs	r4, r0, #0
   23938:	blt.n	23a1e <btrfs_record_file_extent@@Base+0x43a>
   2393a:	bne.n	2395c <btrfs_record_file_extent@@Base+0x378>
   2393c:	add	r3, sp, #120	; 0x78
   2393e:	add	r2, sp, #112	; 0x70
   23940:	add.w	r0, r7, #464	; 0x1d0
   23944:	mov	r1, r5
   23946:	bl	1eaf4 <btrfs_create_tree@@Base+0x7d0>
   2394a:	ldrd	r2, r3, [sp, #112]	; 0x70
   2394e:	ldrd	r0, r1, [sp, #88]	; 0x58
   23952:	cmp	r3, r1
   23954:	it	eq
   23956:	cmpeq	r2, r0
   23958:	bcc.w	23792 <btrfs_record_file_extent@@Base+0x1ae>
   2395c:	mov	r0, r5
   2395e:	mov.w	r8, #1
   23962:	bl	17e00 <btrfs_release_path@@Base>
   23966:	ldr	r3, [sp, #40]	; 0x28
   23968:	mov	r2, r5
   2396a:	mov	r1, r7
   2396c:	mov	r0, r6
   2396e:	str.w	r8, [sp, #4]
   23972:	str.w	r3, [sp, #137]	; 0x89
   23976:	ldr	r3, [sp, #44]	; 0x2c
   23978:	strd	r9, sl, [sp, #128]	; 0x80
   2397c:	str.w	r3, [sp, #141]	; 0x8d
   23980:	movs	r3, #168	; 0xa8
   23982:	strb.w	r3, [sp, #136]	; 0x88
   23986:	movs	r3, #24
   23988:	str	r3, [sp, #120]	; 0x78
   2398a:	add	r3, sp, #120	; 0x78
   2398c:	str	r3, [sp, #0]
   2398e:	add	r3, sp, #128	; 0x80
   23990:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   23994:	mov	r4, r0
   23996:	cmp	r0, #0
   23998:	bne.n	23a18 <btrfs_record_file_extent@@Base+0x434>
   2399a:	ldr	r0, [r5, #0]
   2399c:	movs	r2, #25
   2399e:	ldr	r3, [r5, #32]
   239a0:	add.w	r1, r0, #96	; 0x60
   239a4:	mla	r3, r2, r3, r1
   239a8:	ldr.w	r2, [r3, #118]	; 0x76
   239ac:	adds	r2, #101	; 0x65
   239ae:	adds	r3, r1, r2
   239b0:	strb	r4, [r1, r2]
   239b2:	strb	r4, [r3, #1]
   239b4:	strb	r4, [r3, #2]
   239b6:	strb	r4, [r3, #3]
   239b8:	strb	r4, [r3, #4]
   239ba:	strb	r4, [r3, #5]
   239bc:	strb	r4, [r3, #6]
   239be:	strb	r4, [r3, #7]
   239c0:	strb	r4, [r3, #8]
   239c2:	strb	r4, [r3, #9]
   239c4:	strb	r4, [r3, #10]
   239c6:	strb	r4, [r3, #11]
   239c8:	strb	r4, [r3, #12]
   239ca:	strb	r4, [r3, #13]
   239cc:	strb	r4, [r3, #14]
   239ce:	strb	r4, [r3, #15]
   239d0:	strb.w	r8, [r3, #16]
   239d4:	strb	r4, [r3, #17]
   239d6:	strb	r4, [r3, #18]
   239d8:	strb	r4, [r3, #19]
   239da:	strb	r4, [r3, #20]
   239dc:	strb	r4, [r3, #21]
   239de:	strb	r4, [r3, #22]
   239e0:	strb	r4, [r3, #23]
   239e2:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   239e6:	strd	r8, r4, [sp, #8]
   239ea:	ldrd	r3, r4, [sp, #40]	; 0x28
   239ee:	mov	r2, r9
   239f0:	mov	r0, fp
   239f2:	strd	r3, r4, [sp]
   239f6:	mov	r3, sl
   239f8:	bl	211f8 <btrfs_update_block_group@@Base>
   239fc:	mov	r4, r0
   239fe:	cbnz	r0, 23a1e <btrfs_record_file_extent@@Base+0x43a>
   23a00:	mov.w	r1, #4294967295	; 0xffffffff
   23a04:	mov	r0, r6
   23a06:	bl	22e8c <btrfs_run_delayed_refs@@Base>
   23a0a:	movs	r3, #0
   23a0c:	ldrd	r8, r7, [sp, #40]	; 0x28
   23a10:	strd	r9, sl, [sp, #48]	; 0x30
   23a14:	str	r3, [sp, #80]	; 0x50
   23a16:	b.n	237e0 <btrfs_record_file_extent@@Base+0x1fc>
   23a18:	cmn.w	r0, #17
   23a1c:	beq.n	23a00 <btrfs_record_file_extent@@Base+0x41c>
   23a1e:	mov	r0, r5
   23a20:	bl	17e26 <btrfs_free_path@@Base>
   23a24:	b.n	23670 <btrfs_record_file_extent@@Base+0x8c>
   23a26:	mov	r0, r4
   23a28:	add	sp, #156	; 0x9c
   23a2a:	vpop	{d8}
   23a2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a32:	nop
   23a34:	asrs	r6, r0, #30
   23a36:	movs	r4, r0
   23a38:	lsls	r4, r4, #8
   23a3a:	movs	r0, r0
   23a3c:	add	r4, pc, #744	; (adr r4, 23d28 <btrfs_merge_delayed_refs@@Base+0x58>)
   23a3e:	movs	r1, r0
   23a40:	ldr	r5, [sp, #492]	; 0x1ec
   23a42:	movs	r1, r0
   23a44:	asrs	r4, r1, #27
   23a46:	movs	r4, r0
   23a48:	ldr	r1, [r4, #64]	; 0x40
   23a4a:	movs	r1, r0
   23a4c:	add	r3, pc, #200	; (adr r3, 23b18 <btrfs_record_file_extent@@Base+0x534>)
   23a4e:	movs	r1, r0
   23a50:	ldr	r3, [sp, #964]	; 0x3c4
   23a52:	movs	r1, r0
   23a54:	add	r3, pc, #24	; (adr r3, 23a70 <btrfs_record_file_extent@@Base+0x48c>)
   23a56:	movs	r1, r0
   23a58:	ldr	r2, [pc, #60]	; (23a98 <btrfs_record_file_extent@@Base+0x4b4>)
   23a5a:	movs	r1, #16
   23a5c:	ldr	r3, [pc, #60]	; (23a9c <btrfs_record_file_extent@@Base+0x4b8>)
   23a5e:	push	{r4, lr}
   23a60:	add	r2, pc
   23a62:	sub	sp, #72	; 0x48
   23a64:	add	r4, sp, #4
   23a66:	ldr	r3, [r2, r3]
   23a68:	mov	r0, r4
   23a6a:	ldr	r3, [r3, #0]
   23a6c:	str	r3, [sp, #68]	; 0x44
   23a6e:	mov.w	r3, #0
   23a72:	blx	886c <backtrace@plt>
   23a76:	movs	r2, #2
   23a78:	mov	r1, r0
   23a7a:	mov	r0, r4
   23a7c:	blx	8b7c <backtrace_symbols_fd@plt>
   23a80:	ldr	r2, [pc, #28]	; (23aa0 <btrfs_record_file_extent@@Base+0x4bc>)
   23a82:	ldr	r3, [pc, #24]	; (23a9c <btrfs_record_file_extent@@Base+0x4b8>)
   23a84:	add	r2, pc
   23a86:	ldr	r3, [r2, r3]
   23a88:	ldr	r2, [r3, #0]
   23a8a:	ldr	r3, [sp, #68]	; 0x44
   23a8c:	eors	r2, r3
   23a8e:	beq.n	23a94 <btrfs_record_file_extent@@Base+0x4b0>
   23a90:	blx	86b8 <__stack_chk_fail@plt>
   23a94:	add	sp, #72	; 0x48
   23a96:	pop	{r4, pc}
   23a98:	asrs	r0, r5, #12
   23a9a:	movs	r4, r0
   23a9c:	lsls	r4, r4, #8
   23a9e:	movs	r0, r0
   23aa0:	asrs	r4, r0, #12
   23aa2:	movs	r4, r0
   23aa4:	push	{r0, r1, r2, r3, r4, lr}
   23aa6:	ldr	r4, [pc, #40]	; (23ad0 <btrfs_record_file_extent@@Base+0x4ec>)
   23aa8:	ldr	r5, [pc, #40]	; (23ad4 <btrfs_record_file_extent@@Base+0x4f0>)
   23aaa:	add	r4, pc
   23aac:	ldr	r4, [r4, r5]
   23aae:	ldr	r5, [sp, #24]
   23ab0:	strd	r3, r2, [sp]
   23ab4:	mov	r3, r1
   23ab6:	ldr	r2, [pc, #32]	; (23ad8 <btrfs_record_file_extent@@Base+0x4f4>)
   23ab8:	movs	r1, #1
   23aba:	strd	r0, r5, [sp, #8]
   23abe:	add	r2, pc
   23ac0:	ldr	r0, [r4, #0]
   23ac2:	blx	8a14 <__fprintf_chk@plt+0x4>
   23ac6:	bl	23a58 <btrfs_record_file_extent@@Base+0x474>
   23aca:	blx	8b34 <abort@plt>
   23ace:	nop
   23ad0:	asrs	r6, r3, #11
   23ad2:	movs	r4, r0
   23ad4:	lsls	r4, r6, #8
   23ad6:	movs	r0, r0
   23ad8:	ldrb	r4, [r4, r3]
   23ada:	movs	r1, r0
   23adc:	push	{r0, r1, r2, lr}
   23ade:	movs	r3, #1
   23ae0:	ldr	r2, [pc, #16]	; (23af4 <btrfs_record_file_extent@@Base+0x510>)
   23ae2:	ldr	r1, [pc, #20]	; (23af8 <btrfs_record_file_extent@@Base+0x514>)
   23ae4:	ldr	r0, [pc, #20]	; (23afc <btrfs_record_file_extent@@Base+0x518>)
   23ae6:	add	r2, pc
   23ae8:	str	r3, [sp, #0]
   23aea:	add	r1, pc
   23aec:	add	r0, pc
   23aee:	movs	r3, #55	; 0x37
   23af0:	bl	23aa4 <btrfs_record_file_extent@@Base+0x4c0>
   23af4:	add	r4, pc, #712	; (adr r4, 23dc0 <btrfs_merge_delayed_refs@@Base+0xf0>)
   23af6:	movs	r1, r0
   23af8:	add	r3, pc, #628	; (adr r3, 23d70 <btrfs_merge_delayed_refs@@Base+0xa0>)
   23afa:	movs	r1, r0
   23afc:	ldr	r4, [sp, #148]	; 0x94
   23afe:	movs	r1, r0
   23b00:	push	{r4, r5, lr}
   23b02:	sub	sp, #20
   23b04:	ldr	r4, [pc, #36]	; (23b2c <btrfs_record_file_extent@@Base+0x548>)
   23b06:	ldr	r5, [pc, #40]	; (23b30 <btrfs_record_file_extent@@Base+0x54c>)
   23b08:	add	r4, pc
   23b0a:	ldr	r4, [r4, r5]
   23b0c:	ldr	r5, [sp, #32]
   23b0e:	strd	r3, r2, [sp]
   23b12:	mov	r3, r1
   23b14:	ldr	r2, [pc, #28]	; (23b34 <btrfs_record_file_extent@@Base+0x550>)
   23b16:	movs	r1, #1
   23b18:	strd	r0, r5, [sp, #8]
   23b1c:	add	r2, pc
   23b1e:	ldr	r0, [r4, #0]
   23b20:	blx	8a14 <__fprintf_chk@plt+0x4>
   23b24:	add	sp, #20
   23b26:	ldmia.w	sp!, {r4, r5, lr}
   23b2a:	b.n	23a58 <btrfs_record_file_extent@@Base+0x474>
   23b2c:	asrs	r0, r0, #10
   23b2e:	movs	r4, r0
   23b30:	lsls	r4, r6, #8
   23b32:	movs	r0, r0
   23b34:	ldrb	r0, [r2, r1]
   23b36:	movs	r1, r0
   23b38:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   23b3c:	mov	r6, r0
   23b3e:	mov	r5, r3
   23b40:	mov	r4, r2
   23b42:	ldr	r3, [r0, #0]
   23b44:	movs	r0, #0
   23b46:	cbnz	r3, 23b6a <btrfs_record_file_extent@@Base+0x586>
   23b48:	cbz	r0, 23b66 <btrfs_record_file_extent@@Base+0x582>
   23b4a:	ldrd	r2, r3, [r0]
   23b4e:	cmp	r3, r5
   23b50:	it	eq
   23b52:	cmpeq	r2, r4
   23b54:	bcs.n	23b66 <btrfs_record_file_extent@@Base+0x582>
   23b56:	adds	r0, #36	; 0x24
   23b58:	bl	1350e <rb_next@@Base>
   23b5c:	cbnz	r0, 23b64 <btrfs_record_file_extent@@Base+0x580>
   23b5e:	mov	r0, r6
   23b60:	bl	134ee <rb_first@@Base>
   23b64:	subs	r0, #36	; 0x24
   23b66:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   23b6a:	ldrd	r8, r9, [r3, #-36]	; 0x24
   23b6e:	sub.w	r0, r3, #36	; 0x24
   23b72:	cmp	r5, r9
   23b74:	it	eq
   23b76:	cmpeq	r4, r8
   23b78:	bcs.n	23b7e <btrfs_record_file_extent@@Base+0x59a>
   23b7a:	ldr	r3, [r3, #8]
   23b7c:	b.n	23b46 <btrfs_record_file_extent@@Base+0x562>
   23b7e:	cmp	r9, r5
   23b80:	it	eq
   23b82:	cmpeq	r8, r4
   23b84:	bcs.n	23b66 <btrfs_record_file_extent@@Base+0x582>
   23b86:	ldr	r3, [r3, #4]
   23b88:	b.n	23b46 <btrfs_record_file_extent@@Base+0x562>
   23b8a:	push	{r0, r1, r2, r3, r4, lr}
   23b8c:	ldr	r3, [pc, #40]	; (23bb8 <btrfs_record_file_extent@@Base+0x5d4>)
   23b8e:	ldr	r4, [pc, #44]	; (23bbc <btrfs_record_file_extent@@Base+0x5d8>)
   23b90:	add	r3, pc
   23b92:	ldr	r4, [r3, r4]
   23b94:	movs	r3, #0
   23b96:	strd	r2, r1, [sp]
   23b9a:	movs	r1, #1
   23b9c:	strd	r0, r3, [sp, #8]
   23ba0:	ldr	r2, [pc, #28]	; (23bc0 <btrfs_record_file_extent@@Base+0x5dc>)
   23ba2:	ldr	r3, [pc, #32]	; (23bc4 <btrfs_record_file_extent@@Base+0x5e0>)
   23ba4:	add	r2, pc
   23ba6:	ldr	r0, [r4, #0]
   23ba8:	add	r3, pc
   23baa:	blx	8a14 <__fprintf_chk@plt+0x4>
   23bae:	bl	23a58 <btrfs_record_file_extent@@Base+0x474>
   23bb2:	blx	8b34 <abort@plt>
   23bb6:	nop
   23bb8:	asrs	r0, r7, #7
   23bba:	movs	r4, r0
   23bbc:	lsls	r4, r6, #8
   23bbe:	movs	r0, r0
   23bc0:	ldrb	r3, [r5, r4]
   23bc2:	movs	r1, r0
   23bc4:	add	r2, pc, #892	; (adr r2, 23f44 <btrfs_add_delayed_tree_ref@@Base+0xa8>)
   23bc6:	movs	r1, r0
   23bc8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   23bca:	mov	r4, r2
   23bcc:	adds	r1, #24
   23bce:	mov	r5, r0
   23bd0:	mov	r0, r2
   23bd2:	bl	13278 <rb_erase@@Base>
   23bd6:	mov	r2, r4
   23bd8:	str	r4, [r4, #0]
   23bda:	ldr.w	r3, [r2, #12]!
   23bde:	cmp	r3, r2
   23be0:	beq.n	23bf0 <btrfs_record_file_extent@@Base+0x60c>
   23be2:	ldr	r2, [r4, #16]
   23be4:	str	r2, [r3, #4]
   23be6:	str	r3, [r2, #0]
   23be8:	ldr	r2, [pc, #184]	; (23ca4 <btrfs_record_file_extent@@Base+0x6c0>)
   23bea:	ldr	r3, [pc, #188]	; (23ca8 <btrfs_record_file_extent@@Base+0x6c4>)
   23bec:	strd	r2, r3, [r4, #12]
   23bf0:	ldrb.w	r3, [r4, #62]	; 0x3e
   23bf4:	bfc	r3, #1, #1
   23bf8:	strb.w	r3, [r4, #62]	; 0x3e
   23bfc:	ldrd	r2, r3, [r4, #48]	; 0x30
   23c00:	orrs	r3, r2
   23c02:	bne.n	23c1c <btrfs_record_file_extent@@Base+0x638>
   23c04:	ldr	r2, [pc, #164]	; (23cac <btrfs_record_file_extent@@Base+0x6c8>)
   23c06:	movs	r3, #1
   23c08:	ldr	r1, [pc, #164]	; (23cb0 <btrfs_record_file_extent@@Base+0x6cc>)
   23c0a:	ldr	r0, [pc, #168]	; (23cb4 <btrfs_record_file_extent@@Base+0x6d0>)
   23c0c:	add	r2, pc
   23c0e:	str	r3, [sp, #0]
   23c10:	adds	r2, #10
   23c12:	add	r1, pc
   23c14:	add	r0, pc
   23c16:	movs	r3, #163	; 0xa3
   23c18:	bl	23b00 <btrfs_record_file_extent@@Base+0x51c>
   23c1c:	ldrd	r3, r2, [r4, #48]	; 0x30
   23c20:	adds.w	r6, r3, #4294967295	; 0xffffffff
   23c24:	adc.w	r7, r2, #4294967295	; 0xffffffff
   23c28:	strd	r6, r7, [r4, #48]	; 0x30
   23c2c:	orrs.w	r3, r6, r7
   23c30:	bne.n	23c70 <btrfs_record_file_extent@@Base+0x68c>
   23c32:	ldrb.w	r3, [r4, #62]	; 0x3e
   23c36:	lsls	r3, r3, #30
   23c38:	bpl.n	23c52 <btrfs_record_file_extent@@Base+0x66e>
   23c3a:	ldr	r2, [pc, #124]	; (23cb8 <btrfs_record_file_extent@@Base+0x6d4>)
   23c3c:	movs	r3, #1
   23c3e:	ldr	r1, [pc, #124]	; (23cbc <btrfs_record_file_extent@@Base+0x6d8>)
   23c40:	ldr	r0, [pc, #124]	; (23cc0 <btrfs_record_file_extent@@Base+0x6dc>)
   23c42:	add	r2, pc
   23c44:	str	r3, [sp, #0]
   23c46:	adds	r2, #10
   23c48:	add	r1, pc
   23c4a:	add	r0, pc
   23c4c:	movs	r3, #165	; 0xa5
   23c4e:	bl	23b00 <btrfs_record_file_extent@@Base+0x51c>
   23c52:	ldrb.w	r3, [r4, #61]	; 0x3d
   23c56:	subs	r3, #176	; 0xb0
   23c58:	cmp	r3, #8
   23c5a:	bhi.n	23c8a <btrfs_record_file_extent@@Base+0x6a6>
   23c5c:	tbb	[pc, r3]
   23c60:	asrs	r5, r0, #20
   23c62:	asrs	r5, r0, #20
   23c64:	asrs	r5, r2, #20
   23c66:	asrs	r5, r0, #20
   23c68:	movs	r5, r0
   23c6a:	mov	r0, r4
   23c6c:	blx	85dc <free@plt+0x4>
   23c70:	ldrd	r0, r1, [r5]
   23c74:	orrs.w	r3, r0, r1
   23c78:	beq.n	23c86 <btrfs_record_file_extent@@Base+0x6a2>
   23c7a:	adds.w	r2, r0, #4294967295	; 0xffffffff
   23c7e:	adc.w	r3, r1, #4294967295	; 0xffffffff
   23c82:	strd	r2, r3, [r5]
   23c86:	add	sp, #12
   23c88:	pop	{r4, r5, r6, r7, pc}
   23c8a:	ldr	r2, [pc, #56]	; (23cc4 <btrfs_record_file_extent@@Base+0x6e0>)
   23c8c:	movs	r3, #1
   23c8e:	ldr	r1, [pc, #56]	; (23cc8 <btrfs_record_file_extent@@Base+0x6e4>)
   23c90:	ldr	r0, [pc, #56]	; (23ccc <btrfs_record_file_extent@@Base+0x6e8>)
   23c92:	add	r2, pc
   23c94:	str	r3, [sp, #0]
   23c96:	adds	r2, #10
   23c98:	add	r1, pc
   23c9a:	add	r0, pc
   23c9c:	movs	r3, #176	; 0xb0
   23c9e:	bl	23aa4 <btrfs_record_file_extent@@Base+0x4c0>
   23ca2:	nop
   23ca4:	lsls	r0, r0, #4
   23ca6:	movs	r0, r2
   23ca8:	lsls	r0, r0, #8
   23caa:	movs	r0, r4
   23cac:	add	r3, pc, #560	; (adr r3, 23ee0 <btrfs_add_delayed_tree_ref@@Base+0x44>)
   23cae:	movs	r1, r0
   23cb0:	ldr	r0, [sp, #372]	; 0x174
   23cb2:	movs	r1, r0
   23cb4:	ldr	r0, [sp, #420]	; 0x1a4
   23cb6:	movs	r1, r0
   23cb8:	add	r3, pc, #344	; (adr r3, 23e14 <btrfs_select_ref_head@@Base+0x30>)
   23cba:	movs	r1, r0
   23cbc:	ldr	r0, [sp, #156]	; 0x9c
   23cbe:	movs	r1, r0
   23cc0:	ldr	r0, [sp, #264]	; 0x108
   23cc2:	movs	r1, r0
   23cc4:	add	r3, pc, #24	; (adr r3, 23ce0 <btrfs_merge_delayed_refs@@Base+0x10>)
   23cc6:	movs	r1, r0
   23cc8:	str	r7, [sp, #860]	; 0x35c
   23cca:	movs	r1, r0
   23ccc:	ldr	r2, [sp, #476]	; 0x1dc
   23cce:	movs	r1, r0

00023cd0 <btrfs_merge_delayed_refs@@Base>:
   23cd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23cd4:	sub	sp, #28
   23cd6:	ldr	r3, [r2, #24]
   23cd8:	mov	r5, r2
   23cda:	str	r0, [sp, #16]
   23cdc:	cbz	r3, 23cfe <btrfs_merge_delayed_refs@@Base+0x2e>
   23cde:	ldrb.w	r3, [r2, #60]	; 0x3c
   23ce2:	lsls	r3, r3, #30
   23ce4:	bmi.n	23cfe <btrfs_merge_delayed_refs@@Base+0x2e>
   23ce6:	ldr	r3, [pc, #240]	; (23dd8 <btrfs_merge_delayed_refs@@Base+0x108>)
   23ce8:	add	r3, pc
   23cea:	add.w	r9, r3, #32
   23cee:	add.w	r0, r5, #24
   23cf2:	bl	134ee <rb_first@@Base>
   23cf6:	mov	fp, r0
   23cf8:	cmp.w	fp, #0
   23cfc:	bne.n	23d04 <btrfs_merge_delayed_refs@@Base+0x34>
   23cfe:	add	sp, #28
   23d00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d04:	mov	r0, fp
   23d06:	ldr.w	r8, [pc, #212]	; 23ddc <btrfs_merge_delayed_refs@@Base+0x10c>
   23d0a:	bl	1350e <rb_next@@Base>
   23d0e:	mov	r4, fp
   23d10:	add	r8, pc
   23d12:	mov	sl, r0
   23d14:	cmp.w	sl, #0
   23d18:	bne.n	23d22 <btrfs_merge_delayed_refs@@Base+0x52>
   23d1a:	mov	r0, fp
   23d1c:	bl	1350e <rb_next@@Base>
   23d20:	b.n	23cf6 <btrfs_merge_delayed_refs@@Base+0x26>
   23d22:	mov	r0, sl
   23d24:	bl	1350e <rb_next@@Base>
   23d28:	ldrb.w	r2, [r4, #61]	; 0x3d
   23d2c:	ldrb.w	r3, [sl, #61]	; 0x3d
   23d30:	cmp	r3, r2
   23d32:	str	r0, [sp, #12]
   23d34:	bne.n	23d1a <btrfs_merge_delayed_refs@@Base+0x4a>
   23d36:	cmp	r3, #176	; 0xb0
   23d38:	beq.n	23d42 <btrfs_merge_delayed_refs@@Base+0x72>
   23d3a:	cmp	r3, #182	; 0xb6
   23d3c:	beq.n	23da2 <btrfs_merge_delayed_refs@@Base+0xd2>
   23d3e:	bl	23adc <btrfs_record_file_extent@@Base+0x4f8>
   23d42:	ldrd	r2, r3, [r4, #64]	; 0x40
   23d46:	ldrd	r6, r7, [sl, #64]	; 0x40
   23d4a:	cmp	r3, r7
   23d4c:	it	eq
   23d4e:	cmpeq	r2, r6
   23d50:	bne.n	23d1a <btrfs_merge_delayed_refs@@Base+0x4a>
   23d52:	ldrb.w	r2, [r4, #60]	; 0x3c
   23d56:	ldrb.w	r3, [sl, #60]	; 0x3c
   23d5a:	ldr.w	r7, [sl, #56]	; 0x38
   23d5e:	cmp	r2, r3
   23d60:	beq.n	23dac <btrfs_merge_delayed_refs@@Base+0xdc>
   23d62:	ldr	r3, [r4, #56]	; 0x38
   23d64:	cmp	r3, r7
   23d66:	itttt	ge
   23d68:	movge	r3, sl
   23d6a:	movge	sl, r4
   23d6c:	movge	r4, r3
   23d6e:	movge	r6, #0
   23d70:	ldr	r7, [r4, #56]	; 0x38
   23d72:	mov	r3, r4
   23d74:	it	lt
   23d76:	movlt	r6, #1
   23d78:	mov	r4, sl
   23d7a:	negs	r7, r7
   23d7c:	mov	sl, r3
   23d7e:	ldr	r3, [sp, #16]
   23d80:	mov	r2, sl
   23d82:	mov	r1, r5
   23d84:	add.w	r0, r3, #40	; 0x28
   23d88:	str	r0, [sp, #20]
   23d8a:	bl	23bc8 <btrfs_record_file_extent@@Base+0x5e4>
   23d8e:	ldr	r3, [r4, #56]	; 0x38
   23d90:	ldr	r0, [sp, #20]
   23d92:	add	r7, r3
   23d94:	str	r7, [r4, #56]	; 0x38
   23d96:	cbnz	r7, 23db0 <btrfs_merge_delayed_refs@@Base+0xe0>
   23d98:	mov	r2, r4
   23d9a:	mov	r1, r5
   23d9c:	bl	23bc8 <btrfs_record_file_extent@@Base+0x5e4>
   23da0:	b.n	23cee <btrfs_merge_delayed_refs@@Base+0x1e>
   23da2:	ldrd	r2, r3, [r4, #72]	; 0x48
   23da6:	ldrd	r6, r7, [sl, #72]	; 0x48
   23daa:	b.n	23d4a <btrfs_merge_delayed_refs@@Base+0x7a>
   23dac:	movs	r6, #0
   23dae:	b.n	23d7e <btrfs_merge_delayed_refs@@Base+0xae>
   23db0:	ldrb.w	r3, [r4, #61]	; 0x3d
   23db4:	cmp	r3, #176	; 0xb0
   23db6:	beq.n	23dbc <btrfs_merge_delayed_refs@@Base+0xec>
   23db8:	cmp	r3, #182	; 0xb6
   23dba:	bne.n	23dce <btrfs_merge_delayed_refs@@Base+0xfe>
   23dbc:	ldr	r0, [pc, #32]	; (23de0 <btrfs_merge_delayed_refs@@Base+0x110>)
   23dbe:	movs	r3, #1
   23dc0:	mov	r2, r9
   23dc2:	str	r3, [sp, #0]
   23dc4:	add	r0, pc
   23dc6:	movs	r3, #219	; 0xdb
   23dc8:	mov	r1, r8
   23dca:	bl	23b00 <btrfs_record_file_extent@@Base+0x51c>
   23dce:	cmp	r6, #0
   23dd0:	bne.n	23cee <btrfs_merge_delayed_refs@@Base+0x1e>
   23dd2:	ldr.w	sl, [sp, #12]
   23dd6:	b.n	23d14 <btrfs_merge_delayed_refs@@Base+0x44>
   23dd8:	add	r2, pc, #704	; (adr r2, 2409c <btrfs_add_delayed_tree_ref@@Base+0x200>)
   23dda:	movs	r1, r0
   23ddc:	add	r1, pc, #476	; (adr r1, 23fbc <btrfs_add_delayed_tree_ref@@Base+0x120>)
   23dde:	movs	r1, r0
   23de0:	add	r0, pc, #836	; (adr r0, 24128 <btrfs_add_delayed_tree_ref@@Base+0x28c>)
   23de2:	movs	r1, r0

00023de4 <btrfs_select_ref_head@@Base>:
   23de4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   23de8:	add.w	r9, r0, #64	; 0x40
   23dec:	mov	r8, r0
   23dee:	movs	r5, #0
   23df0:	movs	r6, #0
   23df2:	movs	r7, #0
   23df4:	ldrd	r2, r3, [r8, #88]	; 0x58
   23df8:	mov	r0, r9
   23dfa:	bl	23b38 <btrfs_record_file_extent@@Base+0x554>
   23dfe:	mov	r4, r0
   23e00:	cbnz	r0, 23e24 <btrfs_select_ref_head@@Base+0x40>
   23e02:	cbz	r5, 23e0e <btrfs_select_ref_head@@Base+0x2a>
   23e04:	movs	r4, #0
   23e06:	mov	r0, r4
   23e08:	add	sp, #12
   23e0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   23e0e:	movs	r2, #0
   23e10:	movs	r3, #0
   23e12:	mov	r0, r9
   23e14:	strd	r6, r7, [r8, #88]	; 0x58
   23e18:	bl	23b38 <btrfs_record_file_extent@@Base+0x554>
   23e1c:	mov	r4, r0
   23e1e:	cmp	r0, #0
   23e20:	beq.n	23e04 <btrfs_select_ref_head@@Base+0x20>
   23e22:	movs	r5, #1
   23e24:	ldrb.w	r2, [r4, #60]	; 0x3c
   23e28:	mov	r3, r2
   23e2a:	lsls	r2, r2, #28
   23e2c:	bmi.n	23e74 <btrfs_select_ref_head@@Base+0x90>
   23e2e:	orr.w	r3, r3, #8
   23e32:	strb.w	r3, [r4, #60]	; 0x3c
   23e36:	ldr.w	r3, [r8, #76]	; 0x4c
   23e3a:	cbnz	r3, 23e56 <btrfs_select_ref_head@@Base+0x72>
   23e3c:	ldr	r2, [pc, #80]	; (23e90 <btrfs_select_ref_head@@Base+0xac>)
   23e3e:	movs	r3, #1
   23e40:	ldr	r1, [pc, #80]	; (23e94 <btrfs_select_ref_head@@Base+0xb0>)
   23e42:	ldr	r0, [pc, #84]	; (23e98 <btrfs_select_ref_head@@Base+0xb4>)
   23e44:	add	r2, pc
   23e46:	str	r3, [sp, #0]
   23e48:	adds	r2, #42	; 0x2a
   23e4a:	add	r1, pc
   23e4c:	add	r0, pc
   23e4e:	mov.w	r3, #290	; 0x122
   23e52:	bl	23b00 <btrfs_record_file_extent@@Base+0x51c>
   23e56:	ldr.w	r3, [r8, #76]	; 0x4c
   23e5a:	subs	r3, #1
   23e5c:	str.w	r3, [r8, #76]	; 0x4c
   23e60:	ldrd	r3, r2, [r4]
   23e64:	ldrd	r1, r0, [r4, #8]
   23e68:	adds	r3, r3, r1
   23e6a:	adc.w	r2, r0, r2
   23e6e:	strd	r3, r2, [r8, #88]	; 0x58
   23e72:	b.n	23e06 <btrfs_select_ref_head@@Base+0x22>
   23e74:	add.w	r0, r4, #36	; 0x24
   23e78:	bl	1350e <rb_next@@Base>
   23e7c:	cbnz	r0, 23e8a <btrfs_select_ref_head@@Base+0xa6>
   23e7e:	cmp	r5, #0
   23e80:	bne.n	23e04 <btrfs_select_ref_head@@Base+0x20>
   23e82:	movs	r5, #1
   23e84:	strd	r6, r7, [r8, #88]	; 0x58
   23e88:	b.n	23df4 <btrfs_select_ref_head@@Base+0x10>
   23e8a:	sub.w	r4, r0, #36	; 0x24
   23e8e:	b.n	23e24 <btrfs_select_ref_head@@Base+0x40>
   23e90:	add	r1, pc, #336	; (adr r1, 23fe4 <btrfs_add_delayed_tree_ref@@Base+0x148>)
   23e92:	movs	r1, r0
   23e94:	add	r0, pc, #244	; (adr r0, 23f8c <btrfs_add_delayed_tree_ref@@Base+0xf0>)
   23e96:	movs	r1, r0
   23e98:	add	r0, pc, #616	; (adr r0, 24104 <btrfs_add_delayed_tree_ref@@Base+0x268>)
   23e9a:	movs	r1, r0

00023e9c <btrfs_add_delayed_tree_ref@@Base>:
   23e9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ea0:	sub	sp, #20
   23ea2:	mov	fp, r1
   23ea4:	strd	r2, r3, [sp, #8]
   23ea8:	ldrd	r3, r4, [sp, #72]	; 0x48
   23eac:	ldrd	r9, r8, [sp, #84]	; 0x54
   23eb0:	cmp	r4, #0
   23eb2:	ldr	r7, [sp, #92]	; 0x5c
   23eb4:	itte	eq
   23eb6:	cmpeq	r3, #3
   23eb8:	moveq	r6, #1
   23eba:	movne	r6, #0
   23ebc:	cmp.w	r8, #0
   23ec0:	beq.n	23ee2 <btrfs_add_delayed_tree_ref@@Base+0x46>
   23ec2:	ldrb.w	r3, [r8, #20]
   23ec6:	cbz	r3, 23ee2 <btrfs_add_delayed_tree_ref@@Base+0x46>
   23ec8:	ldr	r2, [pc, #920]	; (24264 <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   23eca:	movs	r3, #1
   23ecc:	ldr	r1, [pc, #920]	; (24268 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   23ece:	ldr	r0, [pc, #924]	; (2426c <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   23ed0:	add	r2, pc
   23ed2:	adds	r2, #64	; 0x40
   23ed4:	add	r1, pc
   23ed6:	add	r0, pc
   23ed8:	str	r3, [sp, #0]
   23eda:	mov.w	r3, #568	; 0x238
   23ede:	bl	23aa4 <btrfs_record_file_extent@@Base+0x4c0>
   23ee2:	movs	r0, #88	; 0x58
   23ee4:	blx	8820 <malloc@plt+0x4>
   23ee8:	mov	r5, r0
   23eea:	cmp	r0, #0
   23eec:	beq.n	23f78 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   23eee:	ldrd	r3, r4, [sp, #64]	; 0x40
   23ef2:	movs	r2, #1
   23ef4:	add.w	sl, r5, #12
   23ef8:	str	r5, [r5, #0]
   23efa:	orrs	r3, r4
   23efc:	mov.w	r3, #0
   23f00:	strd	r2, r3, [r5, #48]	; 0x30
   23f04:	mov.w	r2, #0
   23f08:	ldrd	r3, r4, [sp, #8]
   23f0c:	ite	ne
   23f0e:	movne	r0, #182	; 0xb6
   23f10:	moveq	r0, #176	; 0xb0
   23f12:	cmp.w	r9, #3
   23f16:	strb.w	r0, [r5, #61]	; 0x3d
   23f1a:	mov.w	r0, #64	; 0x40
   23f1e:	strd	r3, r4, [r5, #24]
   23f22:	it	ne
   23f24:	movne	ip, r9
   23f26:	ldrd	r3, r4, [sp, #56]	; 0x38
   23f2a:	it	eq
   23f2c:	moveq.w	ip, #1
   23f30:	strd	sl, sl, [r5, #12]
   23f34:	strb.w	ip, [r5, #60]	; 0x3c
   23f38:	strd	r3, r4, [r5, #32]
   23f3c:	movs	r3, #1
   23f3e:	str	r3, [r5, #56]	; 0x38
   23f40:	ldrb.w	r3, [r5, #62]	; 0x3e
   23f44:	bic.w	r3, r3, #3
   23f48:	orr.w	r3, r3, #2
   23f4c:	strb.w	r3, [r5, #62]	; 0x3e
   23f50:	movs	r3, #0
   23f52:	strd	r2, r3, [r5, #40]	; 0x28
   23f56:	ldrd	r3, r4, [sp, #72]	; 0x48
   23f5a:	strd	r3, r4, [r5, #64]	; 0x40
   23f5e:	ldrd	r3, r4, [sp, #64]	; 0x40
   23f62:	strd	r3, r4, [r5, #72]	; 0x48
   23f66:	ldr	r3, [sp, #80]	; 0x50
   23f68:	str	r3, [r5, #80]	; 0x50
   23f6a:	blx	8820 <malloc@plt+0x4>
   23f6e:	mov	r4, r0
   23f70:	cbnz	r0, 23f7e <btrfs_add_delayed_tree_ref@@Base+0xe2>
   23f72:	mov	r0, r5
   23f74:	blx	85dc <free@plt+0x4>
   23f78:	mvn.w	r0, #11
   23f7c:	b.n	24114 <btrfs_add_delayed_tree_ref@@Base+0x278>
   23f7e:	cmp.w	r9, #4
   23f82:	beq.n	2402e <btrfs_add_delayed_tree_ref@@Base+0x192>
   23f84:	cmp.w	r9, #2
   23f88:	sub.w	lr, r9, #3
   23f8c:	ite	ne
   23f8e:	movne.w	ip, #1
   23f92:	moveq.w	ip, #4294967295	; 0xffffffff
   23f96:	rsbs	r3, lr, #0
   23f9a:	adc.w	r3, r3, lr
   23f9e:	movs	r0, #1
   23fa0:	movs	r1, #0
   23fa2:	strd	r0, r1, [r4, #16]
   23fa6:	orr.w	r6, r3, r6, lsl #2
   23faa:	ldrd	r1, r2, [sp, #8]
   23fae:	add.w	r0, r4, #28
   23fb2:	ldrb.w	r9, [r4, #60]	; 0x3c
   23fb6:	mov.w	lr, #0
   23fba:	strd	r8, ip, [r4, #48]	; 0x30
   23fbe:	strd	r1, r2, [r4]
   23fc2:	bic.w	r9, r9, #15
   23fc6:	ldrd	r1, r2, [sp, #56]	; 0x38
   23fca:	orr.w	r6, r6, r9
   23fce:	str.w	ip, [r4, #56]	; 0x38
   23fd2:	add.w	ip, fp, #64	; 0x40
   23fd6:	strd	r0, r0, [r4, #28]
   23fda:	add.w	r0, r4, #36	; 0x24
   23fde:	mov	r8, ip
   23fe0:	strd	r1, r2, [r4, #8]
   23fe4:	str.w	lr, [r4, #24]
   23fe8:	str	r0, [r4, #36]	; 0x24
   23fea:	strb.w	r6, [r4, #60]	; 0x3c
   23fee:	ldr.w	r6, [r8]
   23ff2:	cbnz	r6, 24036 <btrfs_add_delayed_tree_ref@@Base+0x19a>
   23ff4:	strd	lr, r6, [r4, #36]	; 0x24
   23ff8:	mov	r1, ip
   23ffa:	str	r6, [r4, #44]	; 0x2c
   23ffc:	str.w	r0, [r8]
   24000:	bl	131d2 <rb_insert_color@@Base>
   24004:	cmp	r7, #0
   24006:	bne.w	24166 <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   2400a:	ldr.w	r3, [fp, #72]	; 0x48
   2400e:	adds	r3, #1
   24010:	str.w	r3, [fp, #72]	; 0x48
   24014:	ldr.w	r3, [fp, #76]	; 0x4c
   24018:	adds	r3, #1
   2401a:	str.w	r3, [fp, #76]	; 0x4c
   2401e:	ldrd	r3, r2, [fp, #40]	; 0x28
   24022:	adds	r3, #1
   24024:	adc.w	r2, r2, #0
   24028:	strd	r3, r2, [fp, #40]	; 0x28
   2402c:	b.n	240c6 <btrfs_add_delayed_tree_ref@@Base+0x22a>
   2402e:	mov.w	ip, #0
   24032:	mov	r3, ip
   24034:	b.n	23f9e <btrfs_add_delayed_tree_ref@@Base+0x102>
   24036:	ldrd	r8, r9, [r6, #-36]	; 0x24
   2403a:	ldrd	r1, r2, [sp, #8]
   2403e:	cmp	r2, r9
   24040:	it	eq
   24042:	cmpeq	r1, r8
   24044:	bcs.n	2404e <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   24046:	add.w	r8, r6, #8
   2404a:	mov	lr, r6
   2404c:	b.n	23fee <btrfs_add_delayed_tree_ref@@Base+0x152>
   2404e:	ldrd	r1, r2, [sp, #8]
   24052:	cmp	r9, r2
   24054:	it	eq
   24056:	cmpeq	r8, r1
   24058:	bcs.n	24060 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   2405a:	add.w	r8, r6, #4
   2405e:	b.n	2404a <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   24060:	ldrb.w	r1, [r4, #60]	; 0x3c
   24064:	ldrb	r2, [r6, #24]
   24066:	eor.w	r0, r1, r2
   2406a:	lsls	r0, r0, #30
   2406c:	bpl.n	24086 <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   2406e:	ldr	r2, [pc, #512]	; (24270 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   24070:	movs	r3, #1
   24072:	ldr	r1, [pc, #512]	; (24274 <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   24074:	ldr	r0, [pc, #512]	; (24278 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   24076:	add	r2, pc
   24078:	str	r3, [sp, #0]
   2407a:	adds	r2, #91	; 0x5b
   2407c:	add	r1, pc
   2407e:	add	r0, pc
   24080:	movw	r3, #363	; 0x16b
   24084:	b.n	23ede <btrfs_add_delayed_tree_ref@@Base+0x42>
   24086:	lsls	r1, r1, #31
   24088:	itttt	mi
   2408a:	bfimi	r2, r3, #0, #1
   2408e:	strbmi	r2, [r6, #24]
   24090:	ldrdmi	r2, r3, [r4, #8]
   24094:	strdmi	r2, r3, [r6, #-28]
   24098:	ldr	r3, [r4, #48]	; 0x30
   2409a:	cbz	r3, 240a4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   2409c:	ldr	r2, [r6, #12]
   2409e:	cmp	r2, #0
   240a0:	bne.n	2411a <btrfs_add_delayed_tree_ref@@Base+0x27e>
   240a2:	str	r3, [r6, #12]
   240a4:	cbz	r7, 240aa <btrfs_add_delayed_tree_ref@@Base+0x20e>
   240a6:	ldr	r3, [r6, #16]
   240a8:	str	r3, [r7, #0]
   240aa:	ldr	r2, [r4, #56]	; 0x38
   240ac:	mov	r0, r4
   240ae:	ldr	r3, [r6, #20]
   240b0:	sub.w	r7, r6, #36	; 0x24
   240b4:	add	r3, r2
   240b6:	str	r3, [r6, #20]
   240b8:	ldr	r3, [r6, #16]
   240ba:	ldr	r2, [r4, #56]	; 0x38
   240bc:	mov	r4, r7
   240be:	add	r3, r2
   240c0:	str	r3, [r6, #16]
   240c2:	blx	85dc <free@plt+0x4>
   240c6:	ldr	r3, [sp, #96]	; 0x60
   240c8:	cbz	r3, 240d0 <btrfs_add_delayed_tree_ref@@Base+0x234>
   240ca:	ldr	r3, [r4, #52]	; 0x34
   240cc:	ldr	r2, [sp, #96]	; 0x60
   240ce:	str	r3, [r2, #0]
   240d0:	add.w	r1, r4, #24
   240d4:	movs	r0, #0
   240d6:	mov	r3, r1
   240d8:	ldr	r2, [r3, #0]
   240da:	cmp	r2, #0
   240dc:	bne.n	2416a <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   240de:	strd	r0, r2, [r5]
   240e2:	mov	r0, r5
   240e4:	str	r2, [r5, #8]
   240e6:	str	r5, [r3, #0]
   240e8:	bl	131d2 <rb_insert_color@@Base>
   240ec:	ldrb.w	r3, [r5, #60]	; 0x3c
   240f0:	cmp	r3, #1
   240f2:	bne.n	24104 <btrfs_add_delayed_tree_ref@@Base+0x268>
   240f4:	ldr	r3, [r4, #32]
   240f6:	adds	r4, #28
   240f8:	str.w	sl, [r4, #4]
   240fc:	strd	r4, r3, [r5, #12]
   24100:	str.w	sl, [r3]
   24104:	ldrd	r3, r2, [fp, #40]	; 0x28
   24108:	adds	r3, #1
   2410a:	adc.w	r2, r2, #0
   2410e:	strd	r3, r2, [fp, #40]	; 0x28
   24112:	movs	r0, #0
   24114:	add	sp, #20
   24116:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2411a:	ldrb	r1, [r3, #18]
   2411c:	cbz	r1, 24138 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   2411e:	add.w	r1, r3, #16
   24122:	ldr.w	r0, [r3], #4
   24126:	cmp	r3, r1
   24128:	str.w	r0, [r2], #4
   2412c:	bne.n	24122 <btrfs_add_delayed_tree_ref@@Base+0x286>
   2412e:	ldrb	r3, [r3, #0]
   24130:	strb	r3, [r2, #0]
   24132:	movs	r2, #1
   24134:	ldr	r3, [r6, #12]
   24136:	strb	r2, [r3, #18]
   24138:	ldr	r0, [r4, #48]	; 0x30
   2413a:	ldrb	r3, [r0, #19]
   2413c:	cbz	r3, 2415a <btrfs_add_delayed_tree_ref@@Base+0x2be>
   2413e:	ldr	r1, [r6, #12]
   24140:	ldrd	r2, r0, [r0, #24]
   24144:	ldr	r3, [r1, #28]
   24146:	str	r3, [sp, #8]
   24148:	ldr	r3, [r1, #24]
   2414a:	orrs	r2, r3
   2414c:	ldr	r3, [sp, #8]
   2414e:	orrs	r3, r0
   24150:	strd	r2, r3, [r1, #24]
   24154:	ldr	r3, [r6, #12]
   24156:	movs	r2, #1
   24158:	strb	r2, [r3, #19]
   2415a:	ldr	r0, [r4, #48]	; 0x30
   2415c:	cmp	r0, #0
   2415e:	beq.n	240a4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   24160:	blx	85dc <free@plt+0x4>
   24164:	b.n	240a4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   24166:	str	r6, [r7, #0]
   24168:	b.n	2400a <btrfs_add_delayed_tree_ref@@Base+0x16e>
   2416a:	ldrb.w	r3, [r5, #61]	; 0x3d
   2416e:	ldrb.w	r0, [r2, #61]	; 0x3d
   24172:	cmp	r3, r0
   24174:	bcc.n	24214 <btrfs_add_delayed_tree_ref@@Base+0x378>
   24176:	bhi.n	2419c <btrfs_add_delayed_tree_ref@@Base+0x300>
   24178:	cmp	r3, #176	; 0xb0
   2417a:	beq.n	24184 <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   2417c:	cmp	r3, #182	; 0xb6
   2417e:	beq.n	241a0 <btrfs_add_delayed_tree_ref@@Base+0x304>
   24180:	bl	23adc <btrfs_record_file_extent@@Base+0x4f8>
   24184:	ldrd	r6, r7, [r5, #64]	; 0x40
   24188:	ldrd	r8, r9, [r2, #64]	; 0x40
   2418c:	cmp	r7, r9
   2418e:	it	eq
   24190:	cmpeq	r6, r8
   24192:	bcc.n	24214 <btrfs_add_delayed_tree_ref@@Base+0x378>
   24194:	cmp	r9, r7
   24196:	it	eq
   24198:	cmpeq	r8, r6
   2419a:	bcs.n	241aa <btrfs_add_delayed_tree_ref@@Base+0x30e>
   2419c:	adds	r3, r2, #4
   2419e:	b.n	24218 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   241a0:	ldrd	r6, r7, [r5, #72]	; 0x48
   241a4:	ldrd	r8, r9, [r2, #72]	; 0x48
   241a8:	b.n	2418c <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   241aa:	ldrd	r6, r7, [r5, #40]	; 0x28
   241ae:	ldrd	r8, r9, [r2, #40]	; 0x28
   241b2:	cmp	r7, r9
   241b4:	it	eq
   241b6:	cmpeq	r6, r8
   241b8:	bcc.n	24214 <btrfs_add_delayed_tree_ref@@Base+0x378>
   241ba:	cmp	r9, r7
   241bc:	it	eq
   241be:	cmpeq	r8, r6
   241c0:	bcc.n	2419c <btrfs_add_delayed_tree_ref@@Base+0x300>
   241c2:	ldrb.w	r0, [r5, #60]	; 0x3c
   241c6:	ldrb.w	r1, [r2, #60]	; 0x3c
   241ca:	ldr	r3, [r5, #56]	; 0x38
   241cc:	cmp	r1, r0
   241ce:	beq.n	241fa <btrfs_add_delayed_tree_ref@@Base+0x35e>
   241d0:	ldr	r1, [r2, #56]	; 0x38
   241d2:	cmp	r3, r1
   241d4:	ble.n	24258 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   241d6:	strb.w	r0, [r2, #60]	; 0x3c
   241da:	negs	r3, r1
   241dc:	ldr	r1, [r5, #56]	; 0x38
   241de:	add.w	r0, r2, #12
   241e2:	str	r1, [r2, #56]	; 0x38
   241e4:	ldrb.w	r1, [r5, #60]	; 0x3c
   241e8:	cmp	r1, #1
   241ea:	bne.n	2421c <btrfs_add_delayed_tree_ref@@Base+0x380>
   241ec:	ldr	r1, [r4, #32]
   241ee:	add.w	r6, r4, #28
   241f2:	str	r0, [r4, #32]
   241f4:	strd	r6, r1, [r2, #12]
   241f8:	str	r0, [r1, #0]
   241fa:	ldr	r1, [r2, #56]	; 0x38
   241fc:	add	r3, r1
   241fe:	str	r3, [r2, #56]	; 0x38
   24200:	cbnz	r3, 2420c <btrfs_add_delayed_tree_ref@@Base+0x370>
   24202:	add.w	r0, fp, #40	; 0x28
   24206:	mov	r1, r4
   24208:	bl	23bc8 <btrfs_record_file_extent@@Base+0x5e4>
   2420c:	mov	r0, r5
   2420e:	blx	85dc <free@plt+0x4>
   24212:	b.n	24112 <btrfs_add_delayed_tree_ref@@Base+0x276>
   24214:	add.w	r3, r2, #8
   24218:	mov	r0, r2
   2421a:	b.n	240d8 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   2421c:	cmp	r1, #2
   2421e:	bne.n	24248 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   24220:	ldr	r1, [r2, #12]
   24222:	cmp	r1, r0
   24224:	bne.n	24238 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   24226:	ldr	r1, [pc, #84]	; (2427c <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   24228:	mov.w	r2, #330	; 0x14a
   2422c:	ldr	r0, [pc, #80]	; (24280 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   2422e:	add	r1, pc
   24230:	adds	r1, #116	; 0x74
   24232:	add	r0, pc
   24234:	bl	23b8a <btrfs_record_file_extent@@Base+0x5a6>
   24238:	ldr	r0, [r2, #16]
   2423a:	str	r0, [r1, #4]
   2423c:	str	r1, [r0, #0]
   2423e:	ldr	r0, [pc, #28]	; (2425c <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   24240:	ldr	r1, [pc, #28]	; (24260 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   24242:	strd	r0, r1, [r2, #12]
   24246:	b.n	241fa <btrfs_add_delayed_tree_ref@@Base+0x35e>
   24248:	ldr	r1, [pc, #56]	; (24284 <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   2424a:	movw	r2, #333	; 0x14d
   2424e:	ldr	r0, [pc, #56]	; (24288 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   24250:	add	r1, pc
   24252:	adds	r1, #116	; 0x74
   24254:	add	r0, pc
   24256:	b.n	24234 <btrfs_add_delayed_tree_ref@@Base+0x398>
   24258:	negs	r3, r3
   2425a:	b.n	241fa <btrfs_add_delayed_tree_ref@@Base+0x35e>
   2425c:	lsls	r0, r0, #4
   2425e:	movs	r0, r2
   24260:	lsls	r0, r0, #8
   24262:	movs	r0, r4
   24264:	add	r0, pc, #800	; (adr r0, 24588 <btrfs_destroy_delayed_refs@@Base+0x2fc>)
   24266:	movs	r1, r0
   24268:	ldr	r7, [sp, #716]	; 0x2cc
   2426a:	movs	r1, r0
   2426c:	add	r0, pc, #204	; (adr r0, 2433c <btrfs_destroy_delayed_refs@@Base+0xb0>)
   2426e:	movs	r1, r0
   24270:	ldr	r7, [sp, #136]	; 0x88
   24272:	movs	r1, r0
   24274:	ldr	r6, [sp, #44]	; 0x2c
   24276:	movs	r1, r0
   24278:	ldr	r6, [sp, #684]	; 0x2ac
   2427a:	movs	r1, r0
   2427c:	ldr	r5, [sp, #424]	; 0x1a8
   2427e:	movs	r1, r0
   24280:	ldr	r5, [sp, #112]	; 0x70
   24282:	movs	r1, r0
   24284:	ldr	r5, [sp, #288]	; 0x120
   24286:	movs	r1, r0
   24288:	strh	r6, [r5, #16]
   2428a:	movs	r1, r0

0002428c <btrfs_destroy_delayed_refs@@Base>:
   2428c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   24290:	mov	r5, r0
   24292:	ldr	r3, [r0, #64]	; 0x40
   24294:	cbnz	r3, 242a4 <btrfs_destroy_delayed_refs@@Base+0x18>
   24296:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2429a:	mov	r1, r9
   2429c:	mov	r0, r8
   2429e:	bl	23bc8 <btrfs_record_file_extent@@Base+0x5e4>
   242a2:	b.n	242c0 <btrfs_destroy_delayed_refs@@Base+0x34>
   242a4:	mov	r6, r0
   242a6:	add.w	r8, r0, #40	; 0x28
   242aa:	ldr.w	r7, [r6], #64
   242ae:	mov	r0, r6
   242b0:	bl	134ee <rb_first@@Base>
   242b4:	cmp	r0, #0
   242b6:	beq.n	24296 <btrfs_destroy_delayed_refs@@Base+0xa>
   242b8:	sub.w	r9, r0, #36	; 0x24
   242bc:	sub.w	r4, r0, #12
   242c0:	mov	r0, r4
   242c2:	bl	134ee <rb_first@@Base>
   242c6:	mov	r2, r0
   242c8:	cmp	r0, #0
   242ca:	bne.n	2429a <btrfs_destroy_delayed_refs@@Base+0xe>
   242cc:	mov	r2, r9
   242ce:	mov	r1, r7
   242d0:	mov	r0, r5
   242d2:	bl	22dd0 <cleanup_ref_head@@Base>
   242d6:	cmp	r0, #0
   242d8:	beq.n	242ae <btrfs_destroy_delayed_refs@@Base+0x22>
   242da:	ldr	r1, [pc, #16]	; (242ec <btrfs_destroy_delayed_refs@@Base+0x60>)
   242dc:	movw	r2, #629	; 0x275
   242e0:	ldr	r0, [pc, #12]	; (242f0 <btrfs_destroy_delayed_refs@@Base+0x64>)
   242e2:	add	r1, pc
   242e4:	adds	r1, #135	; 0x87
   242e6:	add	r0, pc
   242e8:	bl	23b8a <btrfs_record_file_extent@@Base+0x5a6>
   242ec:	ldr	r4, [sp, #728]	; 0x2d8
   242ee:	movs	r1, r0
   242f0:	ldr	r4, [sp, #536]	; 0x218
   242f2:	movs	r1, r0
   242f4:	ldr.w	ip, [pc, #60]	; 24334 <btrfs_destroy_delayed_refs@@Base+0xa8>
   242f8:	push	{r0, r1, r2, r3, r4, lr}
   242fa:	add	ip, pc
   242fc:	ldr	r3, [pc, #56]	; (24338 <btrfs_destroy_delayed_refs@@Base+0xac>)
   242fe:	add.w	r2, r1, r2, lsl #3
   24302:	mov	r1, sp
   24304:	ldr.w	r3, [ip, r3]
   24308:	ldr	r3, [r3, #0]
   2430a:	str	r3, [sp, #12]
   2430c:	mov.w	r3, #0
   24310:	movs	r3, #8
   24312:	bl	172c2 <read_extent_buffer@@Base>
   24316:	ldr	r2, [pc, #36]	; (2433c <btrfs_destroy_delayed_refs@@Base+0xb0>)
   24318:	ldr	r3, [pc, #28]	; (24338 <btrfs_destroy_delayed_refs@@Base+0xac>)
   2431a:	add	r2, pc
   2431c:	ldrd	r0, r1, [sp]
   24320:	ldr	r3, [r2, r3]
   24322:	ldr	r2, [r3, #0]
   24324:	ldr	r3, [sp, #12]
   24326:	eors	r2, r3
   24328:	beq.n	2432e <btrfs_destroy_delayed_refs@@Base+0xa2>
   2432a:	blx	86b8 <__stack_chk_fail@plt>
   2432e:	add	sp, #20
   24330:	ldr.w	pc, [sp], #4
   24334:	lsrs	r6, r1, #10
   24336:	movs	r4, r0
   24338:	lsls	r4, r4, #8
   2433a:	movs	r0, r0
   2433c:	lsrs	r6, r5, #9
   2433e:	movs	r4, r0
   24340:	ldr	r2, [pc, #60]	; (24380 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   24342:	movs	r1, #16
   24344:	ldr	r3, [pc, #60]	; (24384 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   24346:	push	{r4, lr}
   24348:	add	r2, pc
   2434a:	sub	sp, #72	; 0x48
   2434c:	add	r4, sp, #4
   2434e:	ldr	r3, [r2, r3]
   24350:	mov	r0, r4
   24352:	ldr	r3, [r3, #0]
   24354:	str	r3, [sp, #68]	; 0x44
   24356:	mov.w	r3, #0
   2435a:	blx	886c <backtrace@plt>
   2435e:	movs	r2, #2
   24360:	mov	r1, r0
   24362:	mov	r0, r4
   24364:	blx	8b7c <backtrace_symbols_fd@plt>
   24368:	ldr	r2, [pc, #28]	; (24388 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   2436a:	ldr	r3, [pc, #24]	; (24384 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   2436c:	add	r2, pc
   2436e:	ldr	r3, [r2, r3]
   24370:	ldr	r2, [r3, #0]
   24372:	ldr	r3, [sp, #68]	; 0x44
   24374:	eors	r2, r3
   24376:	beq.n	2437c <btrfs_destroy_delayed_refs@@Base+0xf0>
   24378:	blx	86b8 <__stack_chk_fail@plt>
   2437c:	add	sp, #72	; 0x48
   2437e:	pop	{r4, pc}
   24380:	lsrs	r0, r0, #9
   24382:	movs	r4, r0
   24384:	lsls	r4, r4, #8
   24386:	movs	r0, r0
   24388:	lsrs	r4, r3, #8
   2438a:	movs	r4, r0
   2438c:	push	{r4, r5, r6, lr}
   2438e:	mov	r6, r0
   24390:	movs	r4, #0
   24392:	and.w	r0, r0, #1
   24396:	mov	r1, r4
   24398:	orrs.w	r3, r0, r1
   2439c:	beq.n	2442e <btrfs_destroy_delayed_refs@@Base+0x1a2>
   2439e:	ldr	r1, [pc, #240]	; (24490 <btrfs_destroy_delayed_refs@@Base+0x204>)
   243a0:	mov	r0, r2
   243a2:	add	r1, pc
   243a4:	blx	87a0 <strcpy@plt>
   243a8:	mov	r2, r0
   243aa:	and.w	r0, r6, #4
   243ae:	movs	r1, #0
   243b0:	orrs.w	r3, r0, r1
   243b4:	beq.n	243d0 <btrfs_destroy_delayed_refs@@Base+0x144>
   243b6:	cbnz	r4, 243c4 <btrfs_destroy_delayed_refs@@Base+0x138>
   243b8:	ldr	r1, [pc, #216]	; (24494 <btrfs_destroy_delayed_refs@@Base+0x208>)
   243ba:	mov	r0, r2
   243bc:	add	r1, pc
   243be:	blx	8758 <strcat@plt+0x4>
   243c2:	mov	r2, r0
   243c4:	ldr	r1, [pc, #208]	; (24498 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   243c6:	mov	r0, r2
   243c8:	add	r1, pc
   243ca:	blx	8758 <strcat@plt+0x4>
   243ce:	mov	r2, r0
   243d0:	and.w	r0, r6, #2
   243d4:	movs	r1, #0
   243d6:	orrs.w	r3, r0, r1
   243da:	beq.n	243f6 <btrfs_destroy_delayed_refs@@Base+0x16a>
   243dc:	cbnz	r4, 243ea <btrfs_destroy_delayed_refs@@Base+0x15e>
   243de:	ldr	r1, [pc, #188]	; (2449c <btrfs_destroy_delayed_refs@@Base+0x210>)
   243e0:	mov	r0, r2
   243e2:	add	r1, pc
   243e4:	blx	8758 <strcat@plt+0x4>
   243e8:	mov	r2, r0
   243ea:	ldr	r1, [pc, #180]	; (244a0 <btrfs_destroy_delayed_refs@@Base+0x214>)
   243ec:	mov	r0, r2
   243ee:	add	r1, pc
   243f0:	blx	8758 <strcat@plt+0x4>
   243f4:	mov	r2, r0
   243f6:	and.w	r4, r6, #2040	; 0x7f8
   243fa:	movs	r5, #0
   243fc:	cmp	r5, #0
   243fe:	it	eq
   24400:	cmpeq	r4, #128	; 0x80
   24402:	beq.n	2448a <btrfs_destroy_delayed_refs@@Base+0x1fe>
   24404:	cmp	r5, #0
   24406:	it	eq
   24408:	cmpeq	r4, #129	; 0x81
   2440a:	bcs.n	24440 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   2440c:	cmp	r5, #0
   2440e:	it	eq
   24410:	cmpeq	r4, #32
   24412:	beq.n	24484 <btrfs_destroy_delayed_refs@@Base+0x1f8>
   24414:	cmp	r5, #0
   24416:	it	eq
   24418:	cmpeq	r4, #33	; 0x21
   2441a:	bcs.n	24432 <btrfs_destroy_delayed_refs@@Base+0x1a6>
   2441c:	cmp	r5, #0
   2441e:	it	eq
   24420:	cmpeq	r4, #8
   24422:	beq.n	24464 <btrfs_destroy_delayed_refs@@Base+0x1d8>
   24424:	cmp	r5, #0
   24426:	it	eq
   24428:	cmpeq	r4, #16
   2442a:	beq.n	24472 <btrfs_destroy_delayed_refs@@Base+0x1e6>
   2442c:	pop	{r4, r5, r6, pc}
   2442e:	movs	r4, #1
   24430:	b.n	243aa <btrfs_destroy_delayed_refs@@Base+0x11e>
   24432:	cmp	r5, #0
   24434:	it	eq
   24436:	cmpeq	r4, #64	; 0x40
   24438:	bne.n	2442c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   2443a:	ldr	r1, [pc, #104]	; (244a4 <btrfs_destroy_delayed_refs@@Base+0x218>)
   2443c:	add	r1, pc
   2443e:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24440:	cmp	r5, #0
   24442:	it	eq
   24444:	cmpeq.w	r4, #512	; 0x200
   24448:	beq.n	24478 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   2444a:	cmp	r5, #0
   2444c:	it	eq
   2444e:	cmpeq.w	r4, #1024	; 0x400
   24452:	beq.n	2447e <btrfs_destroy_delayed_refs@@Base+0x1f2>
   24454:	cmp	r5, #0
   24456:	it	eq
   24458:	cmpeq.w	r4, #256	; 0x100
   2445c:	bne.n	2442c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   2445e:	ldr	r1, [pc, #72]	; (244a8 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   24460:	add	r1, pc
   24462:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24464:	ldr	r1, [pc, #68]	; (244ac <btrfs_destroy_delayed_refs@@Base+0x220>)
   24466:	add	r1, pc
   24468:	ldmia.w	sp!, {r4, r5, r6, lr}
   2446c:	mov	r0, r2
   2446e:	b.w	8754 <strcat@plt>
   24472:	ldr	r1, [pc, #60]	; (244b0 <btrfs_destroy_delayed_refs@@Base+0x224>)
   24474:	add	r1, pc
   24476:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24478:	ldr	r1, [pc, #56]	; (244b4 <btrfs_destroy_delayed_refs@@Base+0x228>)
   2447a:	add	r1, pc
   2447c:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   2447e:	ldr	r1, [pc, #56]	; (244b8 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   24480:	add	r1, pc
   24482:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24484:	ldr	r1, [pc, #52]	; (244bc <btrfs_destroy_delayed_refs@@Base+0x230>)
   24486:	add	r1, pc
   24488:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   2448a:	ldr	r1, [pc, #52]	; (244c0 <btrfs_destroy_delayed_refs@@Base+0x234>)
   2448c:	add	r1, pc
   2448e:	b.n	24468 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24490:	add	r3, sp, #508	; 0x1fc
   24492:	movs	r1, r0
   24494:	strb	r3, [r6, #6]
   24496:	movs	r1, r0
   24498:	add	r3, sp, #384	; 0x180
   2449a:	movs	r1, r0
   2449c:	strb	r5, [r1, #6]
   2449e:	movs	r1, r0
   244a0:	add	r3, sp, #276	; 0x114
   244a2:	movs	r1, r0
   244a4:	ldr	r4, [sp, #140]	; 0x8c
   244a6:	movs	r1, r0
   244a8:	ldr	r4, [sp, #56]	; 0x38
   244aa:	movs	r1, r0
   244ac:	ldr	r3, [sp, #848]	; 0x350
   244ae:	movs	r1, r0
   244b0:	ldr	r3, [sp, #820]	; 0x334
   244b2:	movs	r1, r0
   244b4:	ldr	r3, [sp, #824]	; 0x338
   244b6:	movs	r1, r0
   244b8:	ldr	r3, [sp, #836]	; 0x344
   244ba:	movs	r1, r0
   244bc:	ldr	r3, [sp, #848]	; 0x350
   244be:	movs	r1, r0
   244c0:	ldr	r3, [sp, #876]	; 0x36c
   244c2:	movs	r1, r0
   244c4:	push	{r4, lr}
   244c6:	sub	sp, #24
   244c8:	ldr	r2, [r0, #64]	; 0x40
   244ca:	mov	r4, r0
   244cc:	ldr	r3, [r0, #68]	; 0x44
   244ce:	ldr	r1, [pc, #112]	; (24540 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   244d0:	strd	r2, r3, [sp, #16]
   244d4:	add	r1, pc
   244d6:	ldr	r2, [r0, #56]	; 0x38
   244d8:	ldr	r3, [r0, #60]	; 0x3c
   244da:	strd	r2, r3, [sp, #8]
   244de:	ldr	r2, [r0, #16]
   244e0:	ldr	r3, [r0, #20]
   244e2:	strd	r2, r3, [sp]
   244e6:	ldr	r2, [r0, #0]
   244e8:	ldr	r3, [r0, #4]
   244ea:	movs	r0, #1
   244ec:	blx	89ec <__printf_chk@plt+0x4>
   244f0:	ldr	r2, [r4, #32]
   244f2:	ldr	r3, [r4, #36]	; 0x24
   244f4:	movs	r0, #1
   244f6:	ldr	r1, [pc, #76]	; (24544 <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   244f8:	strd	r2, r3, [sp, #8]
   244fc:	add	r1, pc
   244fe:	ldr	r2, [r4, #24]
   24500:	ldr	r3, [r4, #28]
   24502:	strd	r2, r3, [sp]
   24506:	ldr	r3, [r4, #12]
   24508:	ldr	r2, [r4, #8]
   2450a:	blx	89ec <__printf_chk@plt+0x4>
   2450e:	ldr	r3, [r4, #76]	; 0x4c
   24510:	ldr	r2, [r4, #48]	; 0x30
   24512:	movs	r0, #1
   24514:	ldr	r1, [pc, #48]	; (24548 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   24516:	str	r3, [sp, #12]
   24518:	ldr	r3, [r4, #72]	; 0x48
   2451a:	add	r1, pc
   2451c:	str	r3, [sp, #8]
   2451e:	ldr	r3, [r4, #52]	; 0x34
   24520:	strd	r2, r3, [sp]
   24524:	ldr	r2, [r4, #40]	; 0x28
   24526:	ldr	r3, [r4, #44]	; 0x2c
   24528:	blx	89ec <__printf_chk@plt+0x4>
   2452c:	ldr	r1, [pc, #28]	; (2454c <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   2452e:	ldr	r3, [r4, #84]	; 0x54
   24530:	movs	r0, #1
   24532:	ldr	r2, [r4, #80]	; 0x50
   24534:	add	r1, pc
   24536:	add	sp, #24
   24538:	ldmia.w	sp!, {r4, lr}
   2453c:	b.w	89e8 <__printf_chk@plt>
   24540:	ldr	r3, [sp, #644]	; 0x284
   24542:	movs	r1, r0
   24544:	ldr	r3, [sp, #688]	; 0x2b0
   24546:	movs	r1, r0
   24548:	ldr	r3, [sp, #772]	; 0x304
   2454a:	movs	r1, r0
   2454c:	ldr	r3, [sp, #872]	; 0x368
   2454e:	movs	r1, r0
   24550:	push	{r4, r5, r6, r7, lr}
   24552:	mov	r6, r2
   24554:	ldr	r2, [pc, #104]	; (245c0 <btrfs_destroy_delayed_refs@@Base+0x334>)
   24556:	sub	sp, #292	; 0x124
   24558:	ldr	r3, [pc, #104]	; (245c4 <btrfs_destroy_delayed_refs@@Base+0x338>)
   2455a:	add.w	r4, r0, #96	; 0x60
   2455e:	add	r2, pc
   24560:	add	r5, sp, #28
   24562:	ldr	r3, [r2, r3]
   24564:	ldr	r3, [r3, #0]
   24566:	str	r3, [sp, #284]	; 0x11c
   24568:	mov.w	r3, #0
   2456c:	movs	r3, #25
   2456e:	mla	r1, r3, r1, r4
   24572:	ldr.w	r2, [r1, #118]	; 0x76
   24576:	mov	r1, r5
   24578:	add.w	r3, r2, #101	; 0x65
   2457c:	adds	r2, #119	; 0x77
   2457e:	add	r4, r3
   24580:	ldrh	r7, [r4, #16]
   24582:	mov	r3, r7
   24584:	bl	172c2 <read_extent_buffer@@Base>
   24588:	strd	r7, r5, [sp, #16]
   2458c:	ldr	r2, [r4, #8]
   2458e:	movs	r0, #1
   24590:	ldr	r3, [r4, #12]
   24592:	ldr	r1, [pc, #52]	; (245c8 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   24594:	strd	r2, r3, [sp, #8]
   24598:	add	r1, pc
   2459a:	ldr	r2, [r4, #0]
   2459c:	ldr	r3, [r4, #4]
   2459e:	strd	r2, r3, [sp]
   245a2:	mov	r2, r6
   245a4:	blx	89ec <__printf_chk@plt+0x4>
   245a8:	ldr	r2, [pc, #32]	; (245cc <btrfs_destroy_delayed_refs@@Base+0x340>)
   245aa:	ldr	r3, [pc, #24]	; (245c4 <btrfs_destroy_delayed_refs@@Base+0x338>)
   245ac:	add	r2, pc
   245ae:	ldr	r3, [r2, r3]
   245b0:	ldr	r2, [r3, #0]
   245b2:	ldr	r3, [sp, #284]	; 0x11c
   245b4:	eors	r2, r3
   245b6:	beq.n	245bc <btrfs_destroy_delayed_refs@@Base+0x330>
   245b8:	blx	86b8 <__stack_chk_fail@plt>
   245bc:	add	sp, #292	; 0x124
   245be:	pop	{r4, r5, r6, r7, pc}
   245c0:	lsrs	r2, r5, #32
   245c2:	movs	r4, r0
   245c4:	lsls	r4, r4, #8
   245c6:	movs	r0, r0
   245c8:	ldr	r3, [sp, #604]	; 0x25c
   245ca:	movs	r1, r0
   245cc:	lsls	r4, r3, #31
   245ce:	movs	r4, r0
   245d0:	ldr	r2, [pc, #112]	; (24644 <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   245d2:	ldr	r3, [pc, #116]	; (24648 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   245d4:	add	r2, pc
   245d6:	push	{r4, r5, r6, r7, lr}
   245d8:	sub	sp, #116	; 0x74
   245da:	ldr	r3, [r2, r3]
   245dc:	add	r4, sp, #12
   245de:	add	r6, sp, #28
   245e0:	movs	r2, #32
   245e2:	ldr	r3, [r3, #0]
   245e4:	str	r3, [sp, #108]	; 0x6c
   245e6:	mov.w	r3, #0
   245ea:	mov	r1, r4
   245ec:	movs	r3, #16
   245ee:	mov	r5, r0
   245f0:	bl	172c2 <read_extent_buffer@@Base>
   245f4:	mov	r1, r6
   245f6:	mov	r0, r4
   245f8:	movs	r7, #0
   245fa:	strb.w	r7, [sp, #64]	; 0x40
   245fe:	blx	8580 <uuid_unparse@plt>
   24602:	movs	r2, #64	; 0x40
   24604:	movs	r3, #16
   24606:	mov	r1, r4
   24608:	mov	r0, r5
   2460a:	bl	172c2 <read_extent_buffer@@Base>
   2460e:	add	r3, sp, #68	; 0x44
   24610:	mov	r0, r4
   24612:	str	r3, [sp, #4]
   24614:	mov	r1, r3
   24616:	strb.w	r7, [sp, #104]	; 0x68
   2461a:	blx	8580 <uuid_unparse@plt>
   2461e:	ldr	r1, [pc, #44]	; (2464c <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   24620:	ldr	r3, [sp, #4]
   24622:	mov	r2, r6
   24624:	add	r1, pc
   24626:	movs	r0, #1
   24628:	blx	89ec <__printf_chk@plt+0x4>
   2462c:	ldr	r2, [pc, #32]	; (24650 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   2462e:	ldr	r3, [pc, #24]	; (24648 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   24630:	add	r2, pc
   24632:	ldr	r3, [r2, r3]
   24634:	ldr	r2, [r3, #0]
   24636:	ldr	r3, [sp, #108]	; 0x6c
   24638:	eors	r2, r3
   2463a:	beq.n	24640 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   2463c:	blx	86b8 <__stack_chk_fail@plt>
   24640:	add	sp, #116	; 0x74
   24642:	pop	{r4, r5, r6, r7, pc}
   24644:	lsls	r4, r6, #30
   24646:	movs	r4, r0
   24648:	lsls	r4, r4, #8
   2464a:	movs	r0, r0
   2464c:	ldr	r3, [sp, #244]	; 0xf4
   2464e:	movs	r1, r0
   24650:	lsls	r0, r3, #29
   24652:	movs	r4, r0
   24654:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24658:	mov	r5, r2
   2465a:	ldr	r2, [pc, #112]	; (246cc <btrfs_destroy_delayed_refs@@Base+0x440>)
   2465c:	sub	sp, #344	; 0x158
   2465e:	ldr	r3, [pc, #112]	; (246d0 <btrfs_destroy_delayed_refs@@Base+0x444>)
   24660:	adds	r0, #96	; 0x60
   24662:	add	r2, pc
   24664:	add	r4, sp, #84	; 0x54
   24666:	ldr	r6, [r0, r1]
   24668:	ldr	r3, [r2, r3]
   2466a:	ldr	r3, [r3, #0]
   2466c:	str	r3, [sp, #340]	; 0x154
   2466e:	mov.w	r3, #0
   24672:	adds	r3, r0, r1
   24674:	add	r0, sp, #36	; 0x24
   24676:	str	r6, [r0, #0]
   24678:	ldr	r7, [r3, #4]
   2467a:	ldr.w	r8, [r3, #8]
   2467e:	add	r3, sp, #40	; 0x28
   24680:	str	r3, [sp, #28]
   24682:	mov	r1, r3
   24684:	blx	86e0 <localtime_r@plt>
   24688:	ldr	r2, [pc, #72]	; (246d4 <btrfs_destroy_delayed_refs@@Base+0x448>)
   2468a:	ldr	r3, [sp, #28]
   2468c:	mov.w	r1, #256	; 0x100
   24690:	add	r2, pc
   24692:	mov	r0, r4
   24694:	blx	8854 <strftime@plt>
   24698:	ldr	r3, [pc, #60]	; (246d8 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   2469a:	ldr	r1, [pc, #64]	; (246dc <btrfs_destroy_delayed_refs@@Base+0x450>)
   2469c:	mov	r2, r5
   2469e:	add	r3, pc
   246a0:	movs	r0, #1
   246a2:	strd	r4, r3, [sp, #12]
   246a6:	add	r1, pc
   246a8:	stmia.w	sp, {r6, r7, r8}
   246ac:	blx	89ec <__printf_chk@plt+0x4>
   246b0:	ldr	r2, [pc, #44]	; (246e0 <btrfs_destroy_delayed_refs@@Base+0x454>)
   246b2:	ldr	r3, [pc, #28]	; (246d0 <btrfs_destroy_delayed_refs@@Base+0x444>)
   246b4:	add	r2, pc
   246b6:	ldr	r3, [r2, r3]
   246b8:	ldr	r2, [r3, #0]
   246ba:	ldr	r3, [sp, #340]	; 0x154
   246bc:	eors	r2, r3
   246be:	beq.n	246c4 <btrfs_destroy_delayed_refs@@Base+0x438>
   246c0:	blx	86b8 <__stack_chk_fail@plt>
   246c4:	add	sp, #344	; 0x158
   246c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   246ca:	nop
   246cc:	lsls	r6, r4, #28
   246ce:	movs	r4, r0
   246d0:	lsls	r4, r4, #8
   246d2:	movs	r0, r0
   246d4:	ldr	r2, [sp, #940]	; 0x3ac
   246d6:	movs	r1, r0
   246d8:	add	r5, sp, #356	; 0x164
   246da:	movs	r1, r0
   246dc:	ldr	r2, [sp, #924]	; 0x39c
   246de:	movs	r1, r0
   246e0:	lsls	r4, r2, #27
   246e2:	movs	r4, r0
   246e4:	push	{r0, r1, r2, r3, r4, lr}
   246e6:	ldr	r4, [pc, #40]	; (24710 <btrfs_destroy_delayed_refs@@Base+0x484>)
   246e8:	ldr	r5, [pc, #40]	; (24714 <btrfs_destroy_delayed_refs@@Base+0x488>)
   246ea:	add	r4, pc
   246ec:	ldr	r4, [r4, r5]
   246ee:	strd	r2, r1, [sp]
   246f2:	movs	r1, #1
   246f4:	strd	r0, r3, [sp, #8]
   246f8:	ldr	r2, [pc, #28]	; (24718 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   246fa:	ldr	r3, [pc, #32]	; (2471c <btrfs_destroy_delayed_refs@@Base+0x490>)
   246fc:	add	r2, pc
   246fe:	ldr	r0, [r4, #0]
   24700:	add	r3, pc
   24702:	blx	8a14 <__fprintf_chk@plt+0x4>
   24706:	bl	24340 <btrfs_destroy_delayed_refs@@Base+0xb4>
   2470a:	blx	8b34 <abort@plt>
   2470e:	nop
   24710:	lsls	r6, r3, #26
   24712:	movs	r4, r0
   24714:	lsls	r4, r6, #8
   24716:	movs	r0, r0
   24718:	str	r6, [r4, r2]
   2471a:	movs	r1, r0
   2471c:	ldr	r4, [r2, r2]
   2471e:	movs	r1, r0
   24720:	push	{r3, lr}
   24722:	ldr	r3, [r0, #92]	; 0x5c
   24724:	ldr	r2, [r0, #76]	; 0x4c
   24726:	cbz	r3, 24742 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24728:	ldr.w	r3, [r3, #384]	; 0x180
   2472c:	cmp	r3, r2
   2472e:	beq.n	24742 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24730:	ldr	r1, [pc, #32]	; (24754 <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   24732:	movs	r3, #1
   24734:	ldr	r0, [pc, #32]	; (24758 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   24736:	movw	r2, #1246	; 0x4de
   2473a:	add	r1, pc
   2473c:	add	r0, pc
   2473e:	bl	246e4 <btrfs_destroy_delayed_refs@@Base+0x458>
   24742:	ldr	r3, [pc, #12]	; (24750 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   24744:	subs	r2, #101	; 0x65
   24746:	umull	r2, r3, r2, r3
   2474a:	lsrs	r0, r3, #3
   2474c:	pop	{r3, pc}
   2474e:	nop
   24750:	strh	r1, [r4, #30]
   24752:	subs	r6, #15
   24754:	add	r3, sp, #592	; 0x250
   24756:	movs	r1, r0
   24758:	ldr	r2, [sp, #392]	; 0x188
   2475a:	movs	r1, r0

0002475c <print_chunk_item@@Base>:
   2475c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24760:	add.w	r8, r0, #96	; 0x60
   24764:	ldr	r2, [pc, #376]	; (248e0 <print_chunk_item@@Base+0x184>)
   24766:	add.w	r9, r8, r1
   2476a:	ldr	r3, [pc, #376]	; (248e4 <print_chunk_item@@Base+0x188>)
   2476c:	sub	sp, #148	; 0x94
   2476e:	add	r2, pc
   24770:	ldrh.w	r6, [r9, #44]	; 0x2c
   24774:	movs	r5, #0
   24776:	mov	r7, r0
   24778:	ldr	r3, [r2, r3]
   2477a:	mov	r4, r1
   2477c:	add	r0, sp, #72	; 0x48
   2477e:	movs	r2, #28
   24780:	mov	r1, r5
   24782:	ldr	r3, [r3, #0]
   24784:	str	r3, [sp, #140]	; 0x8c
   24786:	mov.w	r3, #0
   2478a:	str	r5, [sp, #68]	; 0x44
   2478c:	blx	8978 <memset@plt+0x4>
   24790:	cbnz	r6, 247a0 <print_chunk_item@@Base+0x44>
   24792:	ldr	r1, [pc, #340]	; (248e8 <print_chunk_item@@Base+0x18c>)
   24794:	mov	r2, r6
   24796:	add	r1, pc
   24798:	movs	r0, #1
   2479a:	blx	89ec <__printf_chk@plt+0x4>
   2479e:	b.n	247b4 <print_chunk_item@@Base+0x58>
   247a0:	ldr	r2, [r7, #76]	; 0x4c
   247a2:	add.w	r3, r4, r6, lsl #5
   247a6:	adds	r3, #48	; 0x30
   247a8:	cmp	r3, r2
   247aa:	bls.n	247ca <print_chunk_item@@Base+0x6e>
   247ac:	ldr	r0, [pc, #316]	; (248ec <print_chunk_item@@Base+0x190>)
   247ae:	add	r0, pc
   247b0:	blx	8804 <puts@plt+0x4>
   247b4:	ldr	r2, [pc, #312]	; (248f0 <print_chunk_item@@Base+0x194>)
   247b6:	ldr	r3, [pc, #300]	; (248e4 <print_chunk_item@@Base+0x188>)
   247b8:	add	r2, pc
   247ba:	ldr	r3, [r2, r3]
   247bc:	ldr	r2, [r3, #0]
   247be:	ldr	r3, [sp, #140]	; 0x8c
   247c0:	eors	r2, r3
   247c2:	beq.w	248d8 <print_chunk_item@@Base+0x17c>
   247c6:	blx	86b8 <__stack_chk_fail@plt>
   247ca:	add.w	sl, sp, #68	; 0x44
   247ce:	ldr.w	r0, [r9, #24]
   247d2:	ldr.w	r1, [r9, #28]
   247d6:	adds	r4, #48	; 0x30
   247d8:	mov	r2, sl
   247da:	ldr.w	fp, [pc, #280]	; 248f4 <print_chunk_item@@Base+0x198>
   247de:	bl	2438c <btrfs_destroy_delayed_refs@@Base+0x100>
   247e2:	str.w	sl, [sp, #16]
   247e6:	ldr.w	r2, [r9, #16]
   247ea:	movs	r0, #1
   247ec:	ldr.w	r3, [r9, #20]
   247f0:	add	fp, pc
   247f2:	ldr	r1, [pc, #260]	; (248f8 <print_chunk_item@@Base+0x19c>)
   247f4:	ldr.w	sl, [pc, #260]	; 248fc <print_chunk_item@@Base+0x1a0>
   247f8:	strd	r2, r3, [sp, #8]
   247fc:	add	r1, pc
   247fe:	ldr.w	r2, [r9, #8]
   24802:	add	sl, pc
   24804:	ldr.w	r3, [r9, #12]
   24808:	strd	r2, r3, [sp]
   2480c:	ldr.w	r2, [r9]
   24810:	ldr.w	r3, [r9, #4]
   24814:	blx	89ec <__printf_chk@plt+0x4>
   24818:	ldr.w	r3, [r9, #40]	; 0x28
   2481c:	ldr	r1, [pc, #224]	; (24900 <print_chunk_item@@Base+0x1a4>)
   2481e:	movs	r0, #1
   24820:	str	r3, [sp, #0]
   24822:	add	r1, pc
   24824:	ldr.w	r3, [r9, #36]	; 0x24
   24828:	ldr.w	r2, [r9, #32]
   2482c:	blx	89ec <__printf_chk@plt+0x4>
   24830:	ldr	r1, [pc, #208]	; (24904 <print_chunk_item@@Base+0x1a8>)
   24832:	ldrh.w	r3, [r9, #46]	; 0x2e
   24836:	mov	r2, r6
   24838:	add	r1, pc
   2483a:	movs	r0, #1
   2483c:	blx	89ec <__printf_chk@plt+0x4>
   24840:	add.w	r9, sp, #52	; 0x34
   24844:	add.w	ip, r4, #16
   24848:	movs	r3, #0
   2484a:	movs	r1, #0
   2484c:	cmp	r3, r1
   2484e:	it	eq
   24850:	cmpeq	ip, r4
   24852:	mov	r2, ip
   24854:	strd	r2, r3, [sp, #24]
   24858:	bcc.n	24884 <print_chunk_item@@Base+0x128>
   2485a:	ldr	r3, [sp, #24]
   2485c:	adds	r3, #16
   2485e:	str	r3, [sp, #32]
   24860:	ldr	r3, [sp, #28]
   24862:	adc.w	r3, r3, #0
   24866:	str	r3, [sp, #36]	; 0x24
   24868:	adds.w	r3, r4, #32
   2486c:	str	r3, [sp, #40]	; 0x28
   2486e:	adc.w	r3, r1, #0
   24872:	str	r3, [sp, #44]	; 0x2c
   24874:	ldrd	r2, r3, [sp, #40]	; 0x28
   24878:	ldrd	r0, r1, [sp, #32]
   2487c:	cmp	r3, r1
   2487e:	it	eq
   24880:	cmpeq	r2, r0
   24882:	bcs.n	2488c <print_chunk_item@@Base+0x130>
   24884:	ldr	r1, [pc, #128]	; (24908 <print_chunk_item@@Base+0x1ac>)
   24886:	mov	r2, r5
   24888:	add	r1, pc
   2488a:	b.n	24798 <print_chunk_item@@Base+0x3c>
   2488c:	mov	r2, ip
   2488e:	movs	r3, #16
   24890:	mov	r1, r9
   24892:	mov	r0, r7
   24894:	bl	172c2 <read_extent_buffer@@Base>
   24898:	add	r3, sp, #100	; 0x64
   2489a:	mov	r0, r9
   2489c:	str	r3, [sp, #24]
   2489e:	mov	r1, r3
   248a0:	blx	8580 <uuid_unparse@plt>
   248a4:	add.w	r2, r8, r4
   248a8:	adds	r4, #32
   248aa:	ldr	r0, [r2, #8]
   248ac:	ldr	r1, [r2, #12]
   248ae:	strd	r0, r1, [sp, #8]
   248b2:	movs	r0, #1
   248b4:	ldr	r1, [r2, #0]
   248b6:	ldr	r2, [r2, #4]
   248b8:	strd	r1, r2, [sp]
   248bc:	mov	r2, r5
   248be:	mov	r1, fp
   248c0:	adds	r5, #1
   248c2:	blx	89ec <__printf_chk@plt+0x4>
   248c6:	ldr	r3, [sp, #24]
   248c8:	mov	r1, sl
   248ca:	movs	r0, #1
   248cc:	mov	r2, r3
   248ce:	blx	89ec <__printf_chk@plt+0x4>
   248d2:	cmp	r6, r5
   248d4:	bgt.n	24844 <print_chunk_item@@Base+0xe8>
   248d6:	b.n	247b4 <print_chunk_item@@Base+0x58>
   248d8:	add	sp, #148	; 0x94
   248da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248de:	nop
   248e0:	lsls	r2, r3, #24
   248e2:	movs	r4, r0
   248e4:	lsls	r4, r4, #8
   248e6:	movs	r0, r0
   248e8:	ldr	r2, [sp, #224]	; 0xe0
   248ea:	movs	r1, r0
   248ec:	ldr	r2, [sp, #228]	; 0xe4
   248ee:	movs	r1, r0
   248f0:	lsls	r0, r2, #23
   248f2:	movs	r4, r0
   248f4:	ldr	r2, [sp, #644]	; 0x284
   248f6:	movs	r1, r0
   248f8:	ldr	r2, [sp, #0]
   248fa:	movs	r1, r0
   248fc:	ldr	r2, [sp, #720]	; 0x2d0
   248fe:	movs	r1, r0
   24900:	ldr	r2, [sp, #48]	; 0x30
   24902:	movs	r1, r0
   24904:	ldr	r2, [sp, #128]	; 0x80
   24906:	movs	r1, r0
   24908:	ldr	r1, [sp, #972]	; 0x3cc
   2490a:	movs	r1, r0

0002490c <print_key_type@@Base>:
   2490c:	push	{r4, r5, r6, r7}
   2490e:	mov	r5, r3
   24910:	ldrb.w	r3, [sp, #16]
   24914:	cbnz	r3, 24932 <print_key_type@@Base+0x26>
   24916:	mov.w	r7, #4294967295	; 0xffffffff
   2491a:	cmp	r5, r7
   2491c:	mvn.w	r6, #10
   24920:	it	eq
   24922:	cmpeq	r2, r6
   24924:	bne.n	24932 <print_key_type@@Base+0x26>
   24926:	mov	r1, r0
   24928:	ldr	r0, [pc, #36]	; (24950 <print_key_type@@Base+0x44>)
   2492a:	add	r0, pc
   2492c:	pop	{r4, r5, r6, r7}
   2492e:	b.w	8b18 <fputs@plt>
   24932:	ldr	r2, [pc, #32]	; (24954 <print_key_type@@Base+0x48>)
   24934:	add	r2, pc
   24936:	ldr.w	r2, [r2, r3, lsl #2]
   2493a:	cbz	r2, 24942 <print_key_type@@Base+0x36>
   2493c:	mov	r1, r0
   2493e:	mov	r0, r2
   24940:	b.n	2492c <print_key_type@@Base+0x20>
   24942:	ldr	r2, [pc, #20]	; (24958 <print_key_type@@Base+0x4c>)
   24944:	movs	r1, #1
   24946:	pop	{r4, r5, r6, r7}
   24948:	add	r2, pc
   2494a:	b.w	8a10 <__fprintf_chk@plt>
   2494e:	nop
   24950:	ldr	r1, [sp, #624]	; 0x270
   24952:	movs	r1, r0
   24954:	cdp2	0, 10, cr0, cr12, cr3, {0}
   24958:	ldr	r1, [sp, #536]	; 0x218
   2495a:	movs	r1, r0

0002495c <print_objectid@@Base>:
   2495c:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   24960:	mov	r4, r0
   24962:	ldrb.w	r1, [sp, #48]	; 0x30
   24966:	mov	r6, r2
   24968:	mov	r7, r3
   2496a:	cmp	r1, #249	; 0xf9
   2496c:	beq.n	249c4 <print_objectid@@Base+0x68>
   2496e:	bhi.n	249b2 <print_objectid@@Base+0x56>
   24970:	cmp	r1, #204	; 0xcc
   24972:	beq.n	249a0 <print_objectid@@Base+0x44>
   24974:	cmp	r1, #246	; 0xf6
   24976:	beq.n	249e6 <print_objectid@@Base+0x8a>
   24978:	mov.w	r3, #4294967295	; 0xffffffff
   2497c:	cmp	r7, r3
   2497e:	mvn.w	r2, #254	; 0xfe
   24982:	it	eq
   24984:	cmpeq	r6, r2
   24986:	beq.w	24b4a <print_objectid@@Base+0x1ee>
   2498a:	cmp	r3, r7
   2498c:	it	eq
   2498e:	cmpeq	r2, r6
   24990:	bcc.n	24a42 <print_objectid@@Base+0xe6>
   24992:	cmp	r7, #0
   24994:	it	eq
   24996:	cmpeq	r6, #11
   24998:	bcs.n	24a2c <print_objectid@@Base+0xd0>
   2499a:	orrs.w	r3, r6, r7
   2499e:	bne.n	24a04 <print_objectid@@Base+0xa8>
   249a0:	ldr	r2, [pc, #440]	; (24b5c <print_objectid@@Base+0x200>)
   249a2:	movs	r1, #1
   249a4:	mov	r0, r4
   249a6:	strd	r6, r7, [sp]
   249aa:	add	r2, pc
   249ac:	blx	8a14 <__fprintf_chk@plt+0x4>
   249b0:	b.n	249fe <print_objectid@@Base+0xa2>
   249b2:	adds	r3, r1, #5
   249b4:	uxtb	r3, r3
   249b6:	cmp	r3, #1
   249b8:	bhi.n	24978 <print_objectid@@Base+0x1c>
   249ba:	ldr	r2, [pc, #420]	; (24b60 <print_objectid@@Base+0x204>)
   249bc:	strd	r6, r7, [sp]
   249c0:	add	r2, pc
   249c2:	b.n	249e2 <print_objectid@@Base+0x86>
   249c4:	orrs.w	r3, r6, r7
   249c8:	bne.n	249da <print_objectid@@Base+0x7e>
   249ca:	mov	r1, r0
   249cc:	ldr	r0, [pc, #404]	; (24b64 <print_objectid@@Base+0x208>)
   249ce:	add	r0, pc
   249d0:	add	sp, #16
   249d2:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   249d6:	b.w	8b18 <fputs@plt>
   249da:	ldr	r2, [pc, #396]	; (24b68 <print_objectid@@Base+0x20c>)
   249dc:	strd	r6, r7, [sp]
   249e0:	add	r2, pc
   249e2:	movs	r1, #1
   249e4:	b.n	249ac <print_objectid@@Base+0x50>
   249e6:	uxth	r3, r3
   249e8:	strd	r2, r3, [sp, #8]
   249ec:	ldr	r2, [pc, #380]	; (24b6c <print_objectid@@Base+0x210>)
   249ee:	lsrs	r3, r7, #16
   249f0:	movs	r1, #1
   249f2:	str	r3, [sp, #0]
   249f4:	add	r2, pc
   249f6:	movs	r3, #0
   249f8:	str	r3, [sp, #4]
   249fa:	blx	8a14 <__fprintf_chk@plt+0x4>
   249fe:	add	sp, #16
   24a00:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   24a04:	subs.w	sl, r6, #2
   24a08:	adc.w	fp, r7, #4294967295	; 0xffffffff
   24a0c:	cmp.w	fp, #0
   24a10:	it	eq
   24a12:	cmpeq.w	sl, #9
   24a16:	bcs.n	24aa8 <print_objectid@@Base+0x14c>
   24a18:	cmp.w	sl, #8
   24a1c:	bhi.n	24aa8 <print_objectid@@Base+0x14c>
   24a1e:	tbb	[pc, sl]
   24a22:	str	r4, [r1, r1]
   24a24:	ldr	r4, [r2, r1]
   24a26:	str	r4, [r3, #4]
   24a28:	ldrh	r0, [r1, #36]	; 0x24
   24a2a:	lsls	r0, r2, #2
   24a2c:	cmp	r7, #0
   24a2e:	it	eq
   24a30:	cmpeq.w	r6, #256	; 0x100
   24a34:	bne.n	249a0 <print_objectid@@Base+0x44>
   24a36:	cmp	r1, #228	; 0xe4
   24a38:	bne.n	249a0 <print_objectid@@Base+0x44>
   24a3a:	ldr	r0, [pc, #308]	; (24b70 <print_objectid@@Base+0x214>)
   24a3c:	mov	r1, r4
   24a3e:	add	r0, pc
   24a40:	b.n	249d0 <print_objectid@@Base+0x74>
   24a42:	mov.w	r3, #4294967295	; 0xffffffff
   24a46:	cmp	r3, r7
   24a48:	mvn.w	r2, #12
   24a4c:	it	eq
   24a4e:	cmpeq	r2, r6
   24a50:	bcs.n	249a0 <print_objectid@@Base+0x44>
   24a52:	adds.w	r8, r6, #12
   24a56:	adc.w	r9, r7, #0
   24a5a:	cmp.w	r9, #0
   24a5e:	it	eq
   24a60:	cmpeq.w	r8, #12
   24a64:	bcs.n	249a0 <print_objectid@@Base+0x44>
   24a66:	cmp.w	r8, #11
   24a6a:	bhi.n	249a0 <print_objectid@@Base+0x44>
   24a6c:	add	r3, pc, #8	; (adr r3, 24a78 <print_objectid@@Base+0x11c>)
   24a6e:	ldr.w	r2, [r3, r8, lsl #2]
   24a72:	add	r3, r2
   24a74:	bx	r3
   24a76:	nop
   24a78:	lsls	r3, r6, #2
   24a7a:	movs	r0, r0
   24a7c:	lsls	r3, r5, #2
   24a7e:	movs	r0, r0
   24a80:	lsls	r3, r4, #2
   24a82:	movs	r0, r0
   24a84:	lsls	r3, r3, #2
   24a86:	movs	r0, r0
   24a88:	lsls	r3, r2, #2
   24a8a:	movs	r0, r0
   24a8c:	lsls	r3, r1, #2
   24a8e:	movs	r0, r0
   24a90:	lsls	r3, r0, #2
   24a92:	movs	r0, r0
   24a94:	lsls	r3, r7, #1
   24a96:	movs	r0, r0
   24a98:	lsls	r3, r6, #1
   24a9a:	movs	r0, r0
   24a9c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   24aa0:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   24aa4:	lsls	r3, r3, #3
   24aa6:	movs	r0, r0
   24aa8:	cmp	r1, #216	; 0xd8
   24aaa:	mov	r1, r4
   24aac:	bne.n	24ab4 <print_objectid@@Base+0x158>
   24aae:	ldr	r0, [pc, #196]	; (24b74 <print_objectid@@Base+0x218>)
   24ab0:	add	r0, pc
   24ab2:	b.n	249d0 <print_objectid@@Base+0x74>
   24ab4:	ldr	r0, [pc, #192]	; (24b78 <print_objectid@@Base+0x21c>)
   24ab6:	add	r0, pc
   24ab8:	b.n	249d0 <print_objectid@@Base+0x74>
   24aba:	ldr	r0, [pc, #192]	; (24b7c <print_objectid@@Base+0x220>)
   24abc:	mov	r1, r4
   24abe:	add	r0, pc
   24ac0:	b.n	249d0 <print_objectid@@Base+0x74>
   24ac2:	ldr	r0, [pc, #188]	; (24b80 <print_objectid@@Base+0x224>)
   24ac4:	mov	r1, r4
   24ac6:	add	r0, pc
   24ac8:	b.n	249d0 <print_objectid@@Base+0x74>
   24aca:	ldr	r0, [pc, #184]	; (24b84 <print_objectid@@Base+0x228>)
   24acc:	mov	r1, r4
   24ace:	add	r0, pc
   24ad0:	b.n	249d0 <print_objectid@@Base+0x74>
   24ad2:	ldr	r0, [pc, #180]	; (24b88 <print_objectid@@Base+0x22c>)
   24ad4:	mov	r1, r4
   24ad6:	add	r0, pc
   24ad8:	b.n	249d0 <print_objectid@@Base+0x74>
   24ada:	ldr	r0, [pc, #176]	; (24b8c <print_objectid@@Base+0x230>)
   24adc:	mov	r1, r4
   24ade:	add	r0, pc
   24ae0:	b.n	249d0 <print_objectid@@Base+0x74>
   24ae2:	ldr	r0, [pc, #172]	; (24b90 <print_objectid@@Base+0x234>)
   24ae4:	mov	r1, r4
   24ae6:	add	r0, pc
   24ae8:	b.n	249d0 <print_objectid@@Base+0x74>
   24aea:	ldr	r0, [pc, #168]	; (24b94 <print_objectid@@Base+0x238>)
   24aec:	mov	r1, r4
   24aee:	add	r0, pc
   24af0:	b.n	249d0 <print_objectid@@Base+0x74>
   24af2:	ldr	r0, [pc, #164]	; (24b98 <print_objectid@@Base+0x23c>)
   24af4:	mov	r1, r4
   24af6:	add	r0, pc
   24af8:	b.n	249d0 <print_objectid@@Base+0x74>
   24afa:	ldr	r0, [pc, #160]	; (24b9c <print_objectid@@Base+0x240>)
   24afc:	mov	r1, r4
   24afe:	add	r0, pc
   24b00:	b.n	249d0 <print_objectid@@Base+0x74>
   24b02:	ldr	r0, [pc, #156]	; (24ba0 <print_objectid@@Base+0x244>)
   24b04:	mov	r1, r4
   24b06:	add	r0, pc
   24b08:	b.n	249d0 <print_objectid@@Base+0x74>
   24b0a:	ldr	r0, [pc, #152]	; (24ba4 <print_objectid@@Base+0x248>)
   24b0c:	mov	r1, r4
   24b0e:	add	r0, pc
   24b10:	b.n	249d0 <print_objectid@@Base+0x74>
   24b12:	ldr	r0, [pc, #148]	; (24ba8 <print_objectid@@Base+0x24c>)
   24b14:	mov	r1, r4
   24b16:	add	r0, pc
   24b18:	b.n	249d0 <print_objectid@@Base+0x74>
   24b1a:	ldr	r0, [pc, #144]	; (24bac <print_objectid@@Base+0x250>)
   24b1c:	mov	r1, r4
   24b1e:	add	r0, pc
   24b20:	b.n	249d0 <print_objectid@@Base+0x74>
   24b22:	ldr	r0, [pc, #140]	; (24bb0 <print_objectid@@Base+0x254>)
   24b24:	mov	r1, r4
   24b26:	add	r0, pc
   24b28:	b.n	249d0 <print_objectid@@Base+0x74>
   24b2a:	ldr	r0, [pc, #136]	; (24bb4 <print_objectid@@Base+0x258>)
   24b2c:	mov	r1, r4
   24b2e:	add	r0, pc
   24b30:	b.n	249d0 <print_objectid@@Base+0x74>
   24b32:	ldr	r0, [pc, #132]	; (24bb8 <print_objectid@@Base+0x25c>)
   24b34:	mov	r1, r4
   24b36:	add	r0, pc
   24b38:	b.n	249d0 <print_objectid@@Base+0x74>
   24b3a:	ldr	r0, [pc, #128]	; (24bbc <print_objectid@@Base+0x260>)
   24b3c:	mov	r1, r4
   24b3e:	add	r0, pc
   24b40:	b.n	249d0 <print_objectid@@Base+0x74>
   24b42:	ldr	r0, [pc, #124]	; (24bc0 <print_objectid@@Base+0x264>)
   24b44:	mov	r1, r4
   24b46:	add	r0, pc
   24b48:	b.n	249d0 <print_objectid@@Base+0x74>
   24b4a:	ldr	r0, [pc, #120]	; (24bc4 <print_objectid@@Base+0x268>)
   24b4c:	mov	r1, r4
   24b4e:	add	r0, pc
   24b50:	b.n	249d0 <print_objectid@@Base+0x74>
   24b52:	ldr	r0, [pc, #116]	; (24bc8 <print_objectid@@Base+0x26c>)
   24b54:	mov	r1, r4
   24b56:	add	r0, pc
   24b58:	b.n	249d0 <print_objectid@@Base+0x74>
   24b5a:	nop
   24b5c:	add	sp, #268	; 0x10c
   24b5e:	movs	r1, r0
   24b60:	ldr	r1, [sp, #140]	; 0x8c
   24b62:	movs	r1, r0
   24b64:	ldr	r1, [sp, #44]	; 0x2c
   24b66:	movs	r1, r0
   24b68:	add	sp, #52	; 0x34
   24b6a:	movs	r1, r0
   24b6c:	ldr	r7, [pc, #684]	; (24e1c <print_extent_item@@Base+0x134>)
   24b6e:	movs	r1, r0
   24b70:	ldr	r1, [sp, #524]	; 0x20c
   24b72:	movs	r1, r0
   24b74:	ldr	r0, [sp, #244]	; 0xf4
   24b76:	movs	r1, r0
   24b78:	ldr	r0, [sp, #260]	; 0x104
   24b7a:	movs	r1, r0
   24b7c:	ldr	r0, [sp, #268]	; 0x10c
   24b7e:	movs	r1, r0
   24b80:	ldr	r1, [sp, #4]
   24b82:	movs	r1, r0
   24b84:	ldr	r0, [sp, #252]	; 0xfc
   24b86:	movs	r1, r0
   24b88:	ldr	r0, [sp, #256]	; 0x100
   24b8a:	movs	r1, r0
   24b8c:	ldr	r0, [sp, #256]	; 0x100
   24b8e:	movs	r1, r0
   24b90:	ldr	r0, [sp, #280]	; 0x118
   24b92:	movs	r1, r0
   24b94:	ldr	r0, [sp, #288]	; 0x120
   24b96:	movs	r1, r0
   24b98:	ldr	r0, [sp, #288]	; 0x120
   24b9a:	movs	r1, r0
   24b9c:	ldr	r0, [sp, #284]	; 0x11c
   24b9e:	movs	r1, r0
   24ba0:	ldr	r0, [sp, #288]	; 0x120
   24ba2:	movs	r1, r0
   24ba4:	ldr	r0, [sp, #296]	; 0x128
   24ba6:	movs	r1, r0
   24ba8:	ldr	r0, [sp, #308]	; 0x134
   24baa:	movs	r1, r0
   24bac:	ldr	r0, [sp, #340]	; 0x154
   24bae:	movs	r1, r0
   24bb0:	ldr	r0, [sp, #356]	; 0x164
   24bb2:	movs	r1, r0
   24bb4:	ldr	r0, [sp, #368]	; 0x170
   24bb6:	movs	r1, r0
   24bb8:	ldr	r0, [sp, #372]	; 0x174
   24bba:	movs	r1, r0
   24bbc:	ldr	r0, [sp, #384]	; 0x180
   24bbe:	movs	r1, r0
   24bc0:	ldr	r0, [sp, #392]	; 0x188
   24bc2:	movs	r1, r0
   24bc4:	ldr	r0, [sp, #424]	; 0x1a8
   24bc6:	movs	r1, r0
   24bc8:	ldrh	r3, [r4, #4]
   24bca:	movs	r1, r0

00024bcc <btrfs_print_key@@Base>:
   24bcc:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   24bd0:	ldr	r1, [pc, #244]	; (24cc8 <btrfs_print_key@@Base+0xfc>)
   24bd2:	ldrb	r6, [r0, #8]
   24bd4:	ldr.w	r8, [r0]
   24bd8:	add	r1, pc
   24bda:	ldr.w	r9, [r0, #4]
   24bde:	ldr.w	r4, [r0, #9]
   24be2:	ldr.w	r5, [r0, #13]
   24be6:	movs	r0, #1
   24be8:	ldr	r7, [pc, #224]	; (24ccc <btrfs_print_key@@Base+0x100>)
   24bea:	blx	89ec <__printf_chk@plt+0x4>
   24bee:	ldr	r3, [pc, #224]	; (24cd0 <btrfs_print_key@@Base+0x104>)
   24bf0:	mov	r2, r8
   24bf2:	add	r7, pc
   24bf4:	ldr	r7, [r7, r3]
   24bf6:	mov	r3, r9
   24bf8:	str	r6, [sp, #0]
   24bfa:	ldr	r0, [r7, #0]
   24bfc:	bl	2495c <print_objectid@@Base>
   24c00:	movs	r0, #32
   24c02:	blx	8988 <putchar@plt+0x4>
   24c06:	str	r6, [sp, #0]
   24c08:	ldr	r0, [r7, #0]
   24c0a:	mov	r2, r8
   24c0c:	mov	r3, r9
   24c0e:	bl	2490c <print_key_type@@Base>
   24c12:	cmp	r6, #132	; 0x84
   24c14:	beq.n	24c64 <btrfs_print_key@@Base+0x98>
   24c16:	add.w	r3, r6, #14
   24c1a:	uxtb	r3, r3
   24c1c:	cmp	r3, #10
   24c1e:	bhi.n	24ca2 <btrfs_print_key@@Base+0xd6>
   24c20:	subs	r6, #242	; 0xf2
   24c22:	cmp	r6, #10
   24c24:	bhi.n	24ca2 <btrfs_print_key@@Base+0xd6>
   24c26:	tbb	[pc, r6]
   24c2a:	subs	r4, #6
   24c2c:	subs	r4, #6
   24c2e:	subs	r4, #6
   24c30:	subs	r4, #60	; 0x3c
   24c32:	asrs	r4, r7, #12
   24c34:	movs	r3, r2
   24c36:	ldr	r1, [pc, #156]	; (24cd4 <btrfs_print_key@@Base+0x108>)
   24c38:	uxth	r3, r5
   24c3a:	lsrs	r2, r5, #16
   24c3c:	strd	r4, r3, [sp]
   24c40:	add	r1, pc
   24c42:	movs	r3, #0
   24c44:	movs	r0, #1
   24c46:	blx	89ec <__printf_chk@plt+0x4>
   24c4a:	add	sp, #12
   24c4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   24c50:	ldr	r1, [pc, #132]	; (24cd8 <btrfs_print_key@@Base+0x10c>)
   24c52:	mov	r2, r4
   24c54:	mov	r3, r5
   24c56:	add	r1, pc
   24c58:	movs	r0, #1
   24c5a:	add	sp, #12
   24c5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24c60:	b.w	89e8 <__printf_chk@plt>
   24c64:	movs	r0, #32
   24c66:	blx	8988 <putchar@plt+0x4>
   24c6a:	mov.w	r3, #4294967295	; 0xffffffff
   24c6e:	cmp	r9, r3
   24c70:	mvn.w	r2, #7
   24c74:	it	eq
   24c76:	cmpeq	r8, r2
   24c78:	bne.n	24c92 <btrfs_print_key@@Base+0xc6>
   24c7a:	str	r6, [sp, #0]
   24c7c:	mov	r2, r4
   24c7e:	ldr	r0, [r7, #0]
   24c80:	mov	r3, r5
   24c82:	bl	2495c <print_objectid@@Base>
   24c86:	movs	r0, #41	; 0x29
   24c88:	add	sp, #12
   24c8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24c8e:	b.w	8984 <putchar@plt>
   24c92:	ldr	r1, [pc, #72]	; (24cdc <btrfs_print_key@@Base+0x110>)
   24c94:	mov	r2, r4
   24c96:	mov	r3, r5
   24c98:	movs	r0, #1
   24c9a:	add	r1, pc
   24c9c:	blx	89ec <__printf_chk@plt+0x4>
   24ca0:	b.n	24c86 <btrfs_print_key@@Base+0xba>
   24ca2:	adds	r3, r5, #1
   24ca4:	it	eq
   24ca6:	cmpeq.w	r4, #4294967295	; 0xffffffff
   24caa:	bne.n	24cbc <btrfs_print_key@@Base+0xf0>
   24cac:	ldr	r1, [pc, #48]	; (24ce0 <btrfs_print_key@@Base+0x114>)
   24cae:	movs	r0, #1
   24cb0:	add	r1, pc
   24cb2:	add	sp, #12
   24cb4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24cb8:	b.w	89e8 <__printf_chk@plt>
   24cbc:	ldr	r1, [pc, #36]	; (24ce4 <btrfs_print_key@@Base+0x118>)
   24cbe:	mov	r2, r4
   24cc0:	mov	r3, r5
   24cc2:	add	r1, pc
   24cc4:	b.n	24c58 <btrfs_print_key@@Base+0x8c>
   24cc6:	nop
   24cc8:	str	r7, [sp, #1000]	; 0x3e8
   24cca:	movs	r1, r0
   24ccc:	lsls	r6, r2, #6
   24cce:	movs	r4, r0
   24cd0:	lsls	r0, r3, #9
   24cd2:	movs	r0, r0
   24cd4:	str	r7, [sp, #608]	; 0x260
   24cd6:	movs	r1, r0
   24cd8:	str	r7, [sp, #568]	; 0x238
   24cda:	movs	r1, r0
   24cdc:	add	r5, sp, #332	; 0x14c
   24cde:	movs	r1, r0
   24ce0:	str	r7, [sp, #256]	; 0x100
   24ce2:	movs	r1, r0
   24ce4:	str	r7, [sp, #204]	; 0xcc
   24ce6:	movs	r1, r0

00024ce8 <print_extent_item@@Base>:
   24ce8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cec:	sub	sp, #92	; 0x5c
   24cee:	ldr	r3, [pc, #632]	; (24f68 <print_extent_item@@Base+0x280>)
   24cf0:	add.w	r5, r0, #96	; 0x60
   24cf4:	str	r2, [sp, #28]
   24cf6:	movs	r6, #0
   24cf8:	ldr	r2, [pc, #624]	; (24f6c <print_extent_item@@Base+0x284>)
   24cfa:	mov	r8, r0
   24cfc:	add	r0, sp, #56	; 0x38
   24cfe:	ldr.w	sl, [pc, #624]	; 24f70 <print_extent_item@@Base+0x288>
   24d02:	add	r2, pc
   24d04:	add	sl, pc
   24d06:	ldr	r3, [r2, r3]
   24d08:	movs	r2, #28
   24d0a:	ldr	r3, [r3, #0]
   24d0c:	str	r3, [sp, #84]	; 0x54
   24d0e:	mov.w	r3, #0
   24d12:	movs	r3, #25
   24d14:	muls	r1, r3
   24d16:	str	r6, [sp, #52]	; 0x34
   24d18:	add.w	r7, r1, #101	; 0x65
   24d1c:	mov	r1, r6
   24d1e:	adds	r4, r5, r7
   24d20:	ldr.w	r3, [r4, #21]
   24d24:	str	r3, [sp, #24]
   24d26:	blx	8978 <memset@plt+0x4>
   24d2a:	ldr	r3, [sp, #24]
   24d2c:	cmp	r3, #23
   24d2e:	bls.w	24e60 <print_extent_item@@Base+0x178>
   24d32:	ldr.w	r4, [r4, #17]
   24d36:	mov	r3, r6
   24d38:	adds	r4, #101	; 0x65
   24d3a:	add.w	r9, r5, r4
   24d3e:	ldr.w	fp, [r9, #16]
   24d42:	and.w	r2, fp, #1
   24d46:	orrs	r3, r2
   24d48:	add	r3, sp, #52	; 0x34
   24d4a:	beq.w	24e74 <print_extent_item@@Base+0x18c>
   24d4e:	ldr	r1, [pc, #548]	; (24f74 <print_extent_item@@Base+0x28c>)
   24d50:	mov	r0, r3
   24d52:	add	r1, pc
   24d54:	blx	87a0 <strcpy@plt>
   24d58:	mov	r3, r0
   24d5a:	and.w	r2, fp, #2
   24d5e:	str	r2, [sp, #16]
   24d60:	movs	r2, #0
   24d62:	str	r2, [sp, #20]
   24d64:	ldrd	r1, r2, [sp, #16]
   24d68:	orrs	r2, r1
   24d6a:	beq.n	24d86 <print_extent_item@@Base+0x9e>
   24d6c:	cbnz	r6, 24d7a <print_extent_item@@Base+0x92>
   24d6e:	ldr	r1, [pc, #520]	; (24f78 <print_extent_item@@Base+0x290>)
   24d70:	movs	r2, #32
   24d72:	mov	r0, r3
   24d74:	add	r1, pc
   24d76:	blx	8944 <__strcat_chk@plt>
   24d7a:	ldr	r1, [pc, #512]	; (24f7c <print_extent_item@@Base+0x294>)
   24d7c:	add	r0, sp, #52	; 0x34
   24d7e:	movs	r2, #32
   24d80:	add	r1, pc
   24d82:	blx	8944 <__strcat_chk@plt>
   24d86:	and.w	r2, fp, #256	; 0x100
   24d8a:	movs	r3, #0
   24d8c:	orrs	r3, r2
   24d8e:	beq.n	24da8 <print_extent_item@@Base+0xc0>
   24d90:	add	r3, sp, #52	; 0x34
   24d92:	ldr	r1, [pc, #492]	; (24f80 <print_extent_item@@Base+0x298>)
   24d94:	movs	r2, #32
   24d96:	add	r1, pc
   24d98:	mov	r0, r3
   24d9a:	blx	8944 <__strcat_chk@plt>
   24d9e:	ldr	r1, [pc, #484]	; (24f84 <print_extent_item@@Base+0x29c>)
   24da0:	movs	r2, #32
   24da2:	add	r1, pc
   24da4:	blx	8944 <__strcat_chk@plt>
   24da8:	add	r3, sp, #52	; 0x34
   24daa:	str	r3, [sp, #8]
   24dac:	ldr.w	r2, [r9, #8]
   24db0:	movs	r0, #1
   24db2:	ldr.w	r3, [r9, #12]
   24db6:	add.w	r6, r4, #24
   24dba:	ldr	r1, [pc, #460]	; (24f88 <print_extent_item@@Base+0x2a0>)
   24dbc:	strd	r2, r3, [sp]
   24dc0:	add	r1, pc
   24dc2:	ldr.w	r2, [r9]
   24dc6:	ldr.w	r3, [r9, #4]
   24dca:	blx	89ec <__printf_chk@plt+0x4>
   24dce:	ldrd	r2, r3, [sp, #16]
   24dd2:	orrs	r3, r2
   24dd4:	ldr	r3, [sp, #28]
   24dd6:	beq.n	24e78 <print_extent_item@@Base+0x190>
   24dd8:	cmp	r3, #0
   24dda:	bne.n	24e7c <print_extent_item@@Base+0x194>
   24ddc:	add	r7, sp, #32
   24dde:	mov	r2, r6
   24de0:	movs	r3, #17
   24de2:	mov	r0, r8
   24de4:	mov	r1, r7
   24de6:	add	r6, r5
   24de8:	bl	172c2 <read_extent_buffer@@Base>
   24dec:	ldr	r1, [pc, #412]	; (24f8c <print_extent_item@@Base+0x2a4>)
   24dee:	movs	r0, #1
   24df0:	add	r1, pc
   24df2:	blx	89ec <__printf_chk@plt+0x4>
   24df6:	mov	r0, r7
   24df8:	bl	24bcc <btrfs_print_key@@Base>
   24dfc:	ldr	r1, [pc, #400]	; (24f90 <print_extent_item@@Base+0x2a8>)
   24dfe:	ldrb	r2, [r6, #17]
   24e00:	movs	r0, #1
   24e02:	add	r1, pc
   24e04:	add.w	r6, r4, #42	; 0x2a
   24e08:	blx	89ec <__printf_chk@plt+0x4>
   24e0c:	ldr	r3, [sp, #24]
   24e0e:	ldr.w	r8, [pc, #388]	; 24f94 <print_extent_item@@Base+0x2ac>
   24e12:	ldr.w	r9, [pc, #388]	; 24f98 <print_extent_item@@Base+0x2b0>
   24e16:	add	r4, r3
   24e18:	ldr.w	fp, [pc, #384]	; 24f9c <print_extent_item@@Base+0x2b4>
   24e1c:	add	r8, pc
   24e1e:	add	r9, pc
   24e20:	add	fp, pc
   24e22:	cmp	r6, r4
   24e24:	bcc.n	24e98 <print_extent_item@@Base+0x1b0>
   24e26:	beq.n	24e60 <print_extent_item@@Base+0x178>
   24e28:	ldr	r3, [pc, #372]	; (24fa0 <print_extent_item@@Base+0x2b8>)
   24e2a:	mov.w	r1, #1
   24e2e:	ldr	r2, [pc, #372]	; (24fa4 <print_extent_item@@Base+0x2bc>)
   24e30:	ldr.w	r0, [sl, r3]
   24e34:	ite	hi
   24e36:	movhi	r3, #1
   24e38:	movls	r3, #0
   24e3a:	str	r3, [sp, #12]
   24e3c:	ldr	r3, [pc, #360]	; (24fa8 <print_extent_item@@Base+0x2c0>)
   24e3e:	add	r2, pc
   24e40:	add	r3, pc
   24e42:	str	r3, [sp, #8]
   24e44:	ldr	r3, [pc, #356]	; (24fac <print_extent_item@@Base+0x2c4>)
   24e46:	add	r3, pc
   24e48:	adds	r3, #33	; 0x21
   24e4a:	str	r3, [sp, #4]
   24e4c:	movw	r3, #497	; 0x1f1
   24e50:	str	r3, [sp, #0]
   24e52:	ldr	r3, [pc, #348]	; (24fb0 <print_extent_item@@Base+0x2c8>)
   24e54:	ldr	r0, [r0, #0]
   24e56:	add	r3, pc
   24e58:	blx	8a14 <__fprintf_chk@plt+0x4>
   24e5c:	bl	24340 <btrfs_destroy_delayed_refs@@Base+0xb4>
   24e60:	ldr	r2, [pc, #336]	; (24fb4 <print_extent_item@@Base+0x2cc>)
   24e62:	ldr	r3, [pc, #260]	; (24f68 <print_extent_item@@Base+0x280>)
   24e64:	add	r2, pc
   24e66:	ldr	r3, [r2, r3]
   24e68:	ldr	r2, [r3, #0]
   24e6a:	ldr	r3, [sp, #84]	; 0x54
   24e6c:	eors	r2, r3
   24e6e:	beq.n	24f60 <print_extent_item@@Base+0x278>
   24e70:	blx	86b8 <__stack_chk_fail@plt>
   24e74:	movs	r6, #1
   24e76:	b.n	24d5a <print_extent_item@@Base+0x72>
   24e78:	cmp	r3, #0
   24e7a:	beq.n	24e0c <print_extent_item@@Base+0x124>
   24e7c:	add	r1, sp, #32
   24e7e:	mov	r2, r7
   24e80:	mov	r0, r8
   24e82:	movs	r3, #17
   24e84:	bl	172c2 <read_extent_buffer@@Base>
   24e88:	ldr	r1, [pc, #300]	; (24fb8 <print_extent_item@@Base+0x2d0>)
   24e8a:	ldr.w	r2, [sp, #41]	; 0x29
   24e8e:	movs	r0, #1
   24e90:	add	r1, pc
   24e92:	blx	89ec <__printf_chk@plt+0x4>
   24e96:	b.n	24e0c <print_extent_item@@Base+0x124>
   24e98:	adds	r0, r5, r6
   24e9a:	ldrb	r1, [r5, r6]
   24e9c:	mov	r3, r0
   24e9e:	subs	r1, #176	; 0xb0
   24ea0:	ldr.w	r2, [r3, #1]!
   24ea4:	ldr	r3, [r3, #4]
   24ea6:	cmp	r1, #8
   24ea8:	bhi.n	24e60 <print_extent_item@@Base+0x178>
   24eaa:	add	r7, pc, #8	; (adr r7, 24eb4 <print_extent_item@@Base+0x1cc>)
   24eac:	ldr.w	r1, [r7, r1, lsl #2]
   24eb0:	add	r7, r1
   24eb2:	bx	r7
   24eb4:	movs	r5, r4
   24eb6:	movs	r0, r0
   24eb8:			; <UNDEFINED> instruction: 0xffadffff
   24ebc:	lsls	r7, r3, #1
   24ebe:	movs	r0, r0
   24ec0:			; <UNDEFINED> instruction: 0xffadffff
   24ec4:			; <UNDEFINED> instruction: 0xffadffff
   24ec8:			; <UNDEFINED> instruction: 0xffadffff
   24ecc:	lsls	r3, r2, #1
   24ece:	movs	r0, r0
   24ed0:			; <UNDEFINED> instruction: 0xffadffff
   24ed4:	lsls	r3, r3, #2
   24ed6:	movs	r0, r0
   24ed8:	ldr	r1, [pc, #224]	; (24fbc <print_extent_item@@Base+0x2d4>)
   24eda:	movs	r0, #1
   24edc:	str	r3, [sp, #24]
   24ede:	add	r1, pc
   24ee0:	str	r2, [sp, #16]
   24ee2:	blx	89ec <__printf_chk@plt+0x4>
   24ee6:	ldr	r1, [pc, #216]	; (24fc0 <print_extent_item@@Base+0x2d8>)
   24ee8:	movs	r0, #0
   24eea:	ldr	r2, [sp, #16]
   24eec:	ldr	r3, [sp, #24]
   24eee:	ldr.w	r1, [sl, r1]
   24ef2:	str	r0, [sp, #0]
   24ef4:	ldr	r0, [r1, #0]
   24ef6:	bl	2495c <print_objectid@@Base>
   24efa:	movs	r0, #10
   24efc:	blx	8988 <putchar@plt+0x4>
   24f00:	movs	r3, #9
   24f02:	add	r6, r3
   24f04:	b.n	24e22 <print_extent_item@@Base+0x13a>
   24f06:	ldr	r1, [pc, #188]	; (24fc4 <print_extent_item@@Base+0x2dc>)
   24f08:	movs	r0, #1
   24f0a:	add	r1, pc
   24f0c:	blx	89ec <__printf_chk@plt+0x4>
   24f10:	b.n	24f00 <print_extent_item@@Base+0x218>
   24f12:	mov	r1, r9
   24f14:	movs	r0, #1
   24f16:	blx	89ec <__printf_chk@plt+0x4>
   24f1a:	ldr	r2, [pc, #164]	; (24fc0 <print_extent_item@@Base+0x2d8>)
   24f1c:	adds	r3, r6, #1
   24f1e:	adds	r7, r5, r3
   24f20:	ldr.w	r1, [sl, r2]
   24f24:	movs	r2, #0
   24f26:	str	r2, [sp, #0]
   24f28:	ldr	r2, [r5, r3]
   24f2a:	ldr	r0, [r1, #0]
   24f2c:	ldr	r3, [r7, #4]
   24f2e:	bl	2495c <print_objectid@@Base>
   24f32:	ldr	r3, [r7, #24]
   24f34:	mov	r1, fp
   24f36:	movs	r0, #1
   24f38:	str	r3, [sp, #8]
   24f3a:	ldr	r2, [r7, #16]
   24f3c:	ldr	r3, [r7, #20]
   24f3e:	strd	r2, r3, [sp]
   24f42:	ldr	r3, [r7, #12]
   24f44:	ldr	r2, [r7, #8]
   24f46:	blx	89ec <__printf_chk@plt+0x4>
   24f4a:	movs	r3, #29
   24f4c:	b.n	24f02 <print_extent_item@@Base+0x21a>
   24f4e:	ldr.w	r1, [r0, #9]
   24f52:	movs	r0, #1
   24f54:	str	r1, [sp, #0]
   24f56:	mov	r1, r8
   24f58:	blx	89ec <__printf_chk@plt+0x4>
   24f5c:	movs	r3, #13
   24f5e:	b.n	24f02 <print_extent_item@@Base+0x21a>
   24f60:	add	sp, #92	; 0x5c
   24f62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f66:	nop
   24f68:	lsls	r4, r4, #8
   24f6a:	movs	r0, r0
   24f6c:	lsls	r6, r0, #2
   24f6e:	movs	r4, r0
   24f70:	lsls	r4, r0, #2
   24f72:	movs	r4, r0
   24f74:	add	r1, pc, #828	; (adr r1, 252b4 <btrfs_print_leaf@@Base+0x2ec>)
   24f76:	movs	r1, r0
   24f78:	str	r3, [r7, #124]	; 0x7c
   24f7a:	movs	r1, r0
   24f7c:	str	r6, [sp, #496]	; 0x1f0
   24f7e:	movs	r1, r0
   24f80:	str	r1, [r3, #124]	; 0x7c
   24f82:	movs	r1, r0
   24f84:	str	r6, [sp, #404]	; 0x194
   24f86:	movs	r1, r0
   24f88:	str	r6, [sp, #336]	; 0x150
   24f8a:	movs	r1, r0
   24f8c:	str	r6, [sp, #268]	; 0x10c
   24f8e:	movs	r1, r0
   24f90:	str	r6, [sp, #328]	; 0x148
   24f92:	movs	r1, r0
   24f94:	str	r6, [sp, #780]	; 0x30c
   24f96:	movs	r1, r0
   24f98:	str	r6, [sp, #512]	; 0x200
   24f9a:	movs	r1, r0
   24f9c:	str	r6, [sp, #616]	; 0x268
   24f9e:	movs	r1, r0
   24fa0:	lsls	r4, r6, #8
   24fa2:	movs	r0, r0
   24fa4:	ldr	r1, [pc, #184]	; (25060 <btrfs_print_leaf@@Base+0x98>)
   24fa6:	movs	r1, r0
   24fa8:	ldrsb	r7, [r5, r0]
   24faa:	movs	r1, r0
   24fac:	add	r4, pc, #544	; (adr r4, 251d0 <btrfs_print_leaf@@Base+0x208>)
   24fae:	movs	r1, r0
   24fb0:	str	r6, [sp, #724]	; 0x2d4
   24fb2:	movs	r1, r0
   24fb4:	vhadd.u32	d0, d4, d3
   24fb8:	str	r5, [sp, #708]	; 0x2c4
   24fba:	movs	r1, r0
   24fbc:	str	r5, [sp, #516]	; 0x204
   24fbe:	movs	r1, r0
   24fc0:	lsls	r0, r3, #9
   24fc2:	movs	r0, r0
   24fc4:	str	r5, [sp, #448]	; 0x1c0
   24fc6:	movs	r1, r0

00024fc8 <btrfs_print_leaf@@Base>:
   24fc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fcc:	mov.w	r8, #0
   24fd0:	vpush	{d8-d10}
   24fd4:	mov	r9, r0
   24fd6:	ldr.w	r2, [pc, #3380]	; 25d0c <btrfs_print_leaf@@Base+0xd44>
   24fda:	ldr.w	r3, [pc, #3380]	; 25d10 <btrfs_print_leaf@@Base+0xd48>
   24fde:	add	r2, pc
   24fe0:	ldr.w	r6, [pc, #3376]	; 25d14 <btrfs_print_leaf@@Base+0xd4c>
   24fe4:	subw	sp, sp, #1204	; 0x4b4
   24fe8:	ldr	r3, [r2, r3]
   24fea:	add	r6, pc
   24fec:	ldr	r3, [r3, #0]
   24fee:	str.w	r3, [sp, #1196]	; 0x4ac
   24ff2:	mov.w	r3, #0
   24ff6:	ldr	r3, [r0, #92]	; 0x5c
   24ff8:	str	r3, [sp, #104]	; 0x68
   24ffa:	ldr.w	r3, [r3, #384]	; 0x180
   24ffe:	subs	r3, #101	; 0x65
   25000:	str	r3, [sp, #108]	; 0x6c
   25002:	ldr.w	r5, [r0, #152]	; 0x98
   25006:	mov	r3, r8
   25008:	ldr.w	r4, [r0, #156]	; 0x9c
   2500c:	and.w	r2, r5, #1
   25010:	orrs	r3, r2
   25012:	bic.w	r7, r4, #4278190080	; 0xff000000
   25016:	add	r3, sp, #812	; 0x32c
   25018:	mov.w	r4, r4, lsr #24
   2501c:	beq.w	25170 <btrfs_print_leaf@@Base+0x1a8>
   25020:	ldr.w	r1, [pc, #3316]	; 25d18 <btrfs_print_leaf@@Base+0xd50>
   25024:	mov	r0, r3
   25026:	add	r1, pc
   25028:	blx	87a0 <strcpy@plt>
   2502c:	mov	r2, r8
   2502e:	mov	r3, r0
   25030:	and.w	r0, r5, #2
   25034:	movs	r1, #0
   25036:	orrs	r1, r0
   25038:	beq.n	2505a <btrfs_print_leaf@@Base+0x92>
   2503a:	cbnz	r2, 2504c <btrfs_print_leaf@@Base+0x84>
   2503c:	ldr.w	r1, [pc, #3292]	; 25d1c <btrfs_print_leaf@@Base+0xd54>
   25040:	mov	r0, r3
   25042:	movs	r2, #128	; 0x80
   25044:	add	r1, pc
   25046:	blx	8944 <__strcat_chk@plt>
   2504a:	mov	r3, r0
   2504c:	ldr.w	r1, [pc, #3280]	; 25d20 <btrfs_print_leaf@@Base+0xd58>
   25050:	movs	r2, #128	; 0x80
   25052:	mov	r0, r3
   25054:	add	r1, pc
   25056:	blx	8944 <__strcat_chk@plt>
   2505a:	ldr.w	r3, [r9, #192]	; 0xc0
   2505e:	mov	r0, r9
   25060:	ldr.w	r2, [r9, #144]	; 0x90
   25064:	add.w	sl, r9, #197	; 0xc5
   25068:	str	r3, [sp, #240]	; 0xf0
   2506a:	ldr.w	r3, [r9, #148]	; 0x94
   2506e:	str	r2, [sp, #84]	; 0x54
   25070:	str	r3, [sp, #80]	; 0x50
   25072:	bl	18f90 <btrfs_leaf_free_space@@Base>
   25076:	ldr.w	ip, [r9, #176]	; 0xb0
   2507a:	ldr.w	r1, [r9, #180]	; 0xb4
   2507e:	ldr	r3, [sp, #240]	; 0xf0
   25080:	strd	ip, r1, [sp, #8]
   25084:	ldr.w	r1, [pc, #3228]	; 25d24 <btrfs_print_leaf@@Base+0xd5c>
   25088:	str	r3, [sp, #0]
   2508a:	add	r1, pc
   2508c:	ldrd	r3, r2, [sp, #80]	; 0x50
   25090:	str	r0, [sp, #4]
   25092:	movs	r0, #1
   25094:	blx	89ec <__printf_chk@plt+0x4>
   25098:	ldr.w	r3, [pc, #3212]	; 25d28 <btrfs_print_leaf@@Base+0xd60>
   2509c:	ldr.w	r2, [r9, #184]	; 0xb8
   250a0:	ldr	r3, [r6, r3]
   250a2:	movs	r6, #0
   250a4:	str	r6, [sp, #0]
   250a6:	str	r3, [sp, #100]	; 0x64
   250a8:	ldr	r1, [sp, #100]	; 0x64
   250aa:	ldr.w	r3, [r9, #188]	; 0xbc
   250ae:	ldr	r0, [r1, #0]
   250b0:	bl	2495c <print_objectid@@Base>
   250b4:	movs	r0, #10
   250b6:	blx	8988 <putchar@plt+0x4>
   250ba:	ldr.w	r1, [pc, #3184]	; 25d2c <btrfs_print_leaf@@Base+0xd64>
   250be:	ldr.w	r2, [r9, #144]	; 0x90
   250c2:	add	r3, sp, #812	; 0x32c
   250c4:	add	r1, pc
   250c6:	str	r3, [sp, #8]
   250c8:	movs	r0, #1
   250ca:	ldr.w	r3, [r9, #148]	; 0x94
   250ce:	str	r4, [sp, #12]
   250d0:	strd	r5, r7, [sp]
   250d4:	blx	89ec <__printf_chk@plt+0x4>
   250d8:	mov	r0, r9
   250da:	bl	245d0 <btrfs_destroy_delayed_refs@@Base+0x344>
   250de:	ldr	r3, [sp, #100]	; 0x64
   250e0:	ldr	r0, [r3, #0]
   250e2:	blx	85b0 <fflush@plt>
   250e6:	ldr.w	r3, [pc, #3144]	; 25d30 <btrfs_print_leaf@@Base+0xd68>
   250ea:	str	r6, [sp, #80]	; 0x50
   250ec:	add	r3, pc
   250ee:	vmov	s20, r3
   250f2:	ldr.w	r3, [pc, #3136]	; 25d34 <btrfs_print_leaf@@Base+0xd6c>
   250f6:	add	r3, pc
   250f8:	vmov	s21, r3
   250fc:	ldr	r3, [sp, #80]	; 0x50
   250fe:	ldr	r2, [sp, #240]	; 0xf0
   25100:	cmp	r3, r2
   25102:	beq.n	25154 <btrfs_print_leaf@@Base+0x18c>
   25104:	ldr	r3, [sp, #80]	; 0x50
   25106:	movs	r2, #25
   25108:	ldr.w	r8, [sl, #17]
   2510c:	add.w	fp, r9, #96	; 0x60
   25110:	muls	r2, r3
   25112:	ldr.w	r3, [sl, #21]
   25116:	str	r3, [sp, #84]	; 0x54
   25118:	adds	r2, #101	; 0x65
   2511a:	ldr	r3, [sp, #108]	; 0x6c
   2511c:	cmp	r3, r8
   2511e:	bcc.n	2512a <btrfs_print_leaf@@Base+0x162>
   25120:	ldr	r3, [sp, #84]	; 0x54
   25122:	ldr	r1, [sp, #108]	; 0x6c
   25124:	add	r3, r8
   25126:	cmp	r3, r1
   25128:	bls.n	25174 <btrfs_print_leaf@@Base+0x1ac>
   2512a:	ldr	r3, [sp, #108]	; 0x6c
   2512c:	ldr.w	r0, [pc, #3080]	; 25d38 <btrfs_print_leaf@@Base+0xd70>
   25130:	ldr.w	r2, [r9, #144]	; 0x90
   25134:	str	r3, [sp, #12]
   25136:	add	r0, pc
   25138:	ldr	r3, [sp, #84]	; 0x54
   2513a:	strd	r8, r3, [sp, #4]
   2513e:	ldr	r3, [sp, #80]	; 0x50
   25140:	str	r3, [sp, #0]
   25142:	ldr.w	r3, [r9, #148]	; 0x94
   25146:	bl	17424 <__btrfs_error@@Base>
   2514a:	ldr.w	r0, [pc, #3056]	; 25d3c <btrfs_print_leaf@@Base+0xd74>
   2514e:	add	r0, pc
   25150:	bl	17424 <__btrfs_error@@Base>
   25154:	ldr.w	r2, [pc, #3048]	; 25d40 <btrfs_print_leaf@@Base+0xd78>
   25158:	ldr.w	r3, [pc, #2996]	; 25d10 <btrfs_print_leaf@@Base+0xd48>
   2515c:	add	r2, pc
   2515e:	ldr	r3, [r2, r3]
   25160:	ldr	r2, [r3, #0]
   25162:	ldr.w	r3, [sp, #1196]	; 0x4ac
   25166:	eors	r2, r3
   25168:	beq.w	262fc <btrfs_print_leaf@@Base+0x1334>
   2516c:	blx	86b8 <__stack_chk_fail@plt>
   25170:	movs	r2, #1
   25172:	b.n	25030 <btrfs_print_leaf@@Base+0x68>
   25174:	add	r1, sp, #252	; 0xfc
   25176:	movs	r3, #17
   25178:	mov	r0, r9
   2517a:	str	r1, [sp, #96]	; 0x60
   2517c:	bl	172c2 <read_extent_buffer@@Base>
   25180:	ldr	r3, [sp, #96]	; 0x60
   25182:	vmov	r1, s20
   25186:	movs	r0, #1
   25188:	ldr	r2, [sp, #80]	; 0x50
   2518a:	add.w	r7, r8, #101	; 0x65
   2518e:	ldrb	r6, [r3, #8]
   25190:	ldrd	r4, r5, [r3]
   25194:	ldr.w	r3, [r3, #9]
   25198:	str	r3, [sp, #88]	; 0x58
   2519a:	ldr	r3, [sp, #96]	; 0x60
   2519c:	ldr.w	r3, [r3, #13]
   251a0:	str	r3, [sp, #92]	; 0x5c
   251a2:	blx	89ec <__printf_chk@plt+0x4>
   251a6:	ldr	r0, [sp, #96]	; 0x60
   251a8:	bl	24bcc <btrfs_print_key@@Base>
   251ac:	ldr.w	r1, [pc, #2964]	; 25d44 <btrfs_print_leaf@@Base+0xd7c>
   251b0:	ldr.w	r3, [sl, #21]
   251b4:	movs	r0, #1
   251b6:	ldr.w	r2, [sl, #17]
   251ba:	add	r1, pc
   251bc:	blx	89ec <__printf_chk@plt+0x4>
   251c0:	cmp	r6, #0
   251c2:	bne.n	25244 <btrfs_print_leaf@@Base+0x27c>
   251c4:	mov.w	r3, #4294967295	; 0xffffffff
   251c8:	cmp	r5, r3
   251ca:	mvn.w	r2, #10
   251ce:	it	eq
   251d0:	cmpeq	r4, r2
   251d2:	bne.n	25230 <btrfs_print_leaf@@Base+0x268>
   251d4:	ldr.w	r3, [sl, #17]
   251d8:	add	r4, sp, #272	; 0x110
   251da:	mov	r0, r9
   251dc:	add.w	r5, r3, #101	; 0x65
   251e0:	mov	r1, r4
   251e2:	movs	r3, #17
   251e4:	mov	r2, r5
   251e6:	bl	172c2 <read_extent_buffer@@Base>
   251ea:	ldr.w	r1, [pc, #2908]	; 25d48 <btrfs_print_leaf@@Base+0xd80>
   251ee:	movs	r0, #1
   251f0:	add	r1, pc
   251f2:	blx	89ec <__printf_chk@plt+0x4>
   251f6:	mov	r0, r4
   251f8:	bl	24bcc <btrfs_print_key@@Base>
   251fc:	movs	r0, #10
   251fe:	blx	8988 <putchar@plt+0x4>
   25202:	add.w	r3, fp, r5
   25206:	mov	r0, r3
   25208:	mov	r1, r3
   2520a:	ldr.w	r4, [r0, #33]!
   2520e:	ldr.w	r2, [r1, #17]!
   25212:	ldr	r0, [r0, #4]
   25214:	strd	r4, r0, [sp, #8]
   25218:	ldr.w	r0, [r3, #25]!
   2521c:	ldr	r3, [r3, #4]
   2521e:	strd	r0, r3, [sp]
   25222:	movs	r0, #1
   25224:	ldr	r3, [r1, #4]
   25226:	ldr.w	r1, [pc, #2852]	; 25d4c <btrfs_print_leaf@@Base+0xd84>
   2522a:	add	r1, pc
   2522c:	blx	89ec <__printf_chk@plt+0x4>
   25230:	ldr	r3, [sp, #100]	; 0x64
   25232:	add.w	sl, sl, #25
   25236:	ldr	r0, [r3, #0]
   25238:	blx	85b0 <fflush@plt>
   2523c:	ldr	r3, [sp, #80]	; 0x50
   2523e:	adds	r3, #1
   25240:	str	r3, [sp, #80]	; 0x50
   25242:	b.n	250fc <btrfs_print_leaf@@Base+0x134>
   25244:	cmp	r6, #184	; 0xb8
   25246:	bhi.w	253e6 <btrfs_print_leaf@@Base+0x41e>
   2524a:	cmp	r6, #167	; 0xa7
   2524c:	bhi.n	252f4 <btrfs_print_leaf@@Base+0x32c>
   2524e:	cmp	r6, #96	; 0x60
   25250:	beq.w	25372 <btrfs_print_leaf@@Base+0x3aa>
   25254:	bhi.w	25394 <btrfs_print_leaf@@Base+0x3cc>
   25258:	cmp	r6, #13
   2525a:	beq.w	258de <btrfs_print_leaf@@Base+0x916>
   2525e:	bhi.n	25348 <btrfs_print_leaf@@Base+0x380>
   25260:	cmp	r6, #1
   25262:	beq.w	254de <btrfs_print_leaf@@Base+0x516>
   25266:	cmp	r6, #12
   25268:	bne.n	25230 <btrfs_print_leaf@@Base+0x268>
   2526a:	ldr.w	r3, [pc, #2788]	; 25d50 <btrfs_print_leaf@@Base+0xd88>
   2526e:	add	r6, sp, #940	; 0x3ac
   25270:	movs	r5, #0
   25272:	add	r3, pc
   25274:	vmov	s17, r3
   25278:	b.n	2587a <btrfs_print_leaf@@Base+0x8b2>
   2527a:	subs	r6, #228	; 0xe4
   2527c:	cmp	r6, #25
   2527e:	bhi.n	25230 <btrfs_print_leaf@@Base+0x268>
   25280:	add	r3, pc, #8	; (adr r3, 2528c <btrfs_print_leaf@@Base+0x2c4>)
   25282:	ldr.w	r2, [r3, r6, lsl #2]
   25286:	add	r3, r2
   25288:	bx	r3
   2528a:	nop
   2528c:	lsrs	r1, r7, #19
   2528e:	movs	r0, r0
   25290:			; <UNDEFINED> instruction: 0xffa5ffff
   25294:			; <UNDEFINED> instruction: 0xffa5ffff
   25298:			; <UNDEFINED> instruction: 0xffa5ffff
   2529c:			; <UNDEFINED> instruction: 0xffa5ffff
   252a0:			; <UNDEFINED> instruction: 0xffa5ffff
   252a4:			; <UNDEFINED> instruction: 0xffa5ffff
   252a8:			; <UNDEFINED> instruction: 0xffa5ffff
   252ac:			; <UNDEFINED> instruction: 0xffa5ffff
   252b0:			; <UNDEFINED> instruction: 0xffa5ffff
   252b4:			; <UNDEFINED> instruction: 0xffa5ffff
   252b8:			; <UNDEFINED> instruction: 0xffa5ffff
   252bc:	lsrs	r7, r2, #21
   252be:	movs	r0, r0
   252c0:			; <UNDEFINED> instruction: 0xffa5ffff
   252c4:	lsrs	r1, r7, #23
   252c6:	movs	r0, r0
   252c8:			; <UNDEFINED> instruction: 0xffa5ffff
   252cc:	lsrs	r7, r6, #24
   252ce:	movs	r0, r0
   252d0:			; <UNDEFINED> instruction: 0xffa5ffff
   252d4:			; <UNDEFINED> instruction: 0xffa5ffff
   252d8:			; <UNDEFINED> instruction: 0xffa5ffff
   252dc:	lsrs	r3, r5, #30
   252de:	movs	r0, r0
   252e0:	lsrs	r7, r7, #26
   252e2:	movs	r0, r0
   252e4:			; <UNDEFINED> instruction: 0xffa5ffff
   252e8:	lsrs	r5, r5, #25
   252ea:	movs	r0, r0
   252ec:	lsrs	r5, r5, #25
   252ee:	movs	r0, r0
   252f0:	lsrs	r7, r5, #26
   252f2:	movs	r0, r0
   252f4:	subs	r6, #168	; 0xa8
   252f6:	cmp	r6, #16
   252f8:	bhi.n	25230 <btrfs_print_leaf@@Base+0x268>
   252fa:	add	r3, pc, #8	; (adr r3, 25304 <btrfs_print_leaf@@Base+0x33c>)
   252fc:	ldr.w	r2, [r3, r6, lsl #2]
   25300:	add	r3, r2
   25302:	bx	r3
   25304:	lsrs	r1, r4, #3
   25306:	movs	r0, r0
   25308:	lsrs	r7, r5, #3
   2530a:	movs	r0, r0
   2530c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25310:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25314:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25318:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2531c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25320:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25324:	lsrs	r3, r6, #3
   25326:	movs	r0, r0
   25328:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2532c:	lsrs	r3, r0, #4
   2532e:	movs	r0, r0
   25330:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25334:	lsrs	r7, r2, #5
   25336:	movs	r0, r0
   25338:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2533c:	lsrs	r3, r7, #3
   2533e:	movs	r0, r0
   25340:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25344:	lsrs	r7, r0, #5
   25346:	movs	r0, r0
   25348:	cmp	r6, #60	; 0x3c
   2534a:	beq.w	259e0 <btrfs_print_leaf@@Base+0xa18>
   2534e:	bhi.n	25366 <btrfs_print_leaf@@Base+0x39e>
   25350:	cmp	r6, #24
   25352:	beq.n	25372 <btrfs_print_leaf@@Base+0x3aa>
   25354:	cmp	r6, #48	; 0x30
   25356:	bne.w	25230 <btrfs_print_leaf@@Base+0x268>
   2535a:	ldr.w	r0, [pc, #2552]	; 25d54 <btrfs_print_leaf@@Base+0xd8c>
   2535e:	add	r0, pc
   25360:	blx	8804 <puts@plt+0x4>
   25364:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   25366:	cmp	r6, #72	; 0x48
   25368:	beq.w	259e0 <btrfs_print_leaf@@Base+0xa18>
   2536c:	cmp	r6, #84	; 0x54
   2536e:	bne.w	25230 <btrfs_print_leaf@@Base+0x268>
   25372:	ldr.w	r3, [pc, #2532]	; 25d58 <btrfs_print_leaf@@Base+0xd90>
   25376:	movs	r6, #0
   25378:	add	r3, pc
   2537a:	vmov	s17, r3
   2537e:	ldr.w	r3, [pc, #2524]	; 25d5c <btrfs_print_leaf@@Base+0xd94>
   25382:	add	r3, pc
   25384:	vmov	s18, r3
   25388:	ldr.w	r3, [pc, #2516]	; 25d60 <btrfs_print_leaf@@Base+0xd98>
   2538c:	add	r3, pc
   2538e:	vmov	s19, r3
   25392:	b.n	259d0 <btrfs_print_leaf@@Base+0xa08>
   25394:	cmp	r6, #132	; 0x84
   25396:	beq.w	259fa <btrfs_print_leaf@@Base+0xa32>
   2539a:	bhi.n	253ca <btrfs_print_leaf@@Base+0x402>
   2539c:	cmp	r6, #120	; 0x78
   2539e:	beq.w	25c62 <btrfs_print_leaf@@Base+0xc9a>
   253a2:	cmp	r6, #128	; 0x80
   253a4:	beq.w	25c6a <btrfs_print_leaf@@Base+0xca2>
   253a8:	cmp	r6, #108	; 0x6c
   253aa:	bne.w	25230 <btrfs_print_leaf@@Base+0x268>
   253ae:	add.w	r4, fp, r7
   253b2:	add	r0, sp, #940	; 0x3ac
   253b4:	ldrb	r3, [r4, #16]
   253b6:	ldrb	r5, [r4, #20]
   253b8:	cmp	r3, #3
   253ba:	bhi.w	25e6c <btrfs_print_leaf@@Base+0xea4>
   253be:	tbh	[pc, r3, lsl #1]
   253c2:	lsls	r6, r5, #17
   253c4:	lsls	r3, r3, #18
   253c6:	lsls	r6, r3, #18
   253c8:	lsls	r1, r4, #18
   253ca:	cmp	r6, #144	; 0x90
   253cc:	beq.w	25bdc <btrfs_print_leaf@@Base+0xc14>
   253d0:	cmp	r6, #156	; 0x9c
   253d2:	bne.w	25230 <btrfs_print_leaf@@Base+0x268>
   253d6:	ldr.w	r2, [pc, #2444]	; 25d64 <btrfs_print_leaf@@Base+0xd9c>
   253da:	add	r2, pc
   253dc:	ldr	r1, [sp, #80]	; 0x50
   253de:	mov	r0, r9
   253e0:	bl	24550 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   253e4:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   253e6:	cmp	r6, #253	; 0xfd
   253e8:	bhi.w	25230 <btrfs_print_leaf@@Base+0x268>
   253ec:	cmp	r6, #227	; 0xe3
   253ee:	bhi.w	2527a <btrfs_print_leaf@@Base+0x2b2>
   253f2:	cmp	r6, #204	; 0xcc
   253f4:	bhi.n	25444 <btrfs_print_leaf@@Base+0x47c>
   253f6:	cmp	r6, #191	; 0xbf
   253f8:	bls.w	25230 <btrfs_print_leaf@@Base+0x268>
   253fc:	subs	r6, #192	; 0xc0
   253fe:	cmp	r6, #12
   25400:	bhi.w	25230 <btrfs_print_leaf@@Base+0x268>
   25404:	add	r3, pc, #8	; (adr r3, 25410 <btrfs_print_leaf@@Base+0x448>)
   25406:	ldr.w	r2, [r3, r6, lsl #2]
   2540a:	add	r3, r2
   2540c:	bx	r3
   2540e:	nop
   25410:	lsrs	r5, r2, #12
   25412:	movs	r0, r0
   25414:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25418:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   2541c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25420:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25424:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25428:	lsrs	r7, r1, #13
   2542a:	movs	r0, r0
   2542c:	lsrs	r5, r4, #13
   2542e:	movs	r0, r0
   25430:	lsrs	r5, r5, #13
   25432:	movs	r0, r0
   25434:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25438:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   2543c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25440:	lsrs	r1, r0, #14
   25442:	movs	r0, r0
   25444:	cmp	r6, #216	; 0xd8
   25446:	bne.w	25230 <btrfs_print_leaf@@Base+0x268>
   2544a:	add	r4, sp, #740	; 0x2e4
   2544c:	add.w	r2, r8, #167	; 0xa7
   25450:	add	r5, sp, #772	; 0x304
   25452:	movs	r3, #16
   25454:	mov	r1, r4
   25456:	mov	r0, r9
   25458:	bl	172c2 <read_extent_buffer@@Base>
   2545c:	mov	r0, r4
   2545e:	add	r4, sp, #756	; 0x2f4
   25460:	add	r6, sp, #940	; 0x3ac
   25462:	mov	r1, r5
   25464:	blx	8580 <uuid_unparse@plt>
   25468:	add.w	r2, r8, #183	; 0xb7
   2546c:	movs	r3, #16
   2546e:	mov	r1, r4
   25470:	mov	r0, r9
   25472:	bl	172c2 <read_extent_buffer@@Base>
   25476:	mov	r1, r6
   25478:	mov	r0, r4
   2547a:	blx	8580 <uuid_unparse@plt>
   2547e:	add.w	r3, fp, r7
   25482:	strd	r5, r6, [sp, #68]	; 0x44
   25486:	movs	r0, #1
   25488:	ldrb.w	r2, [r3, #65]	; 0x41
   2548c:	str	r2, [sp, #64]	; 0x40
   2548e:	ldrb.w	r2, [r3, #64]	; 0x40
   25492:	str	r2, [sp, #60]	; 0x3c
   25494:	ldr	r2, [r3, #60]	; 0x3c
   25496:	str	r2, [sp, #56]	; 0x38
   25498:	ldr	r1, [r3, #52]	; 0x34
   2549a:	ldr	r2, [r3, #56]	; 0x38
   2549c:	strd	r1, r2, [sp, #48]	; 0x30
   254a0:	ldr	r1, [r3, #44]	; 0x2c
   254a2:	ldr	r2, [r3, #48]	; 0x30
   254a4:	strd	r1, r2, [sp, #40]	; 0x28
   254a8:	ldr	r1, [r3, #36]	; 0x24
   254aa:	ldr	r2, [r3, #40]	; 0x28
   254ac:	strd	r1, r2, [sp, #32]
   254b0:	ldr	r2, [r3, #32]
   254b2:	str	r2, [sp, #24]
   254b4:	ldr	r2, [r3, #28]
   254b6:	str	r2, [sp, #20]
   254b8:	ldr	r2, [r3, #24]
   254ba:	str	r2, [sp, #16]
   254bc:	ldr	r1, [r3, #16]
   254be:	ldr	r2, [r3, #20]
   254c0:	strd	r1, r2, [sp, #8]
   254c4:	ldr	r1, [r3, #8]
   254c6:	ldr	r2, [r3, #12]
   254c8:	strd	r1, r2, [sp]
   254cc:	ldr.w	r1, [pc, #2200]	; 25d68 <btrfs_print_leaf@@Base+0xda0>
   254d0:	ldr.w	r2, [fp, r7]
   254d4:	ldr	r3, [r3, #4]
   254d6:	add	r1, pc
   254d8:	blx	89ec <__printf_chk@plt+0x4>
   254dc:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   254de:	add	r3, sp, #940	; 0x3ac
   254e0:	add	fp, r7
   254e2:	mov.w	r2, #256	; 0x100
   254e6:	movs	r1, #0
   254e8:	mov	r0, r3
   254ea:	movs	r7, #0
   254ec:	blx	8978 <memset@plt+0x4>
   254f0:	ldr.w	r5, [fp, #64]	; 0x40
   254f4:	ldr.w	r4, [fp, #68]	; 0x44
   254f8:	and.w	r2, r5, #1
   254fc:	strd	r2, r7, [sp, #112]	; 0x70
   25500:	ldrd	r1, r2, [sp, #112]	; 0x70
   25504:	orrs	r2, r1
   25506:	beq.n	25518 <btrfs_print_leaf@@Base+0x550>
   25508:	ldr.w	r1, [pc, #2144]	; 25d6c <btrfs_print_leaf@@Base+0xda4>
   2550c:	mov.w	r2, #256	; 0x100
   25510:	mov	r6, r7
   25512:	add	r1, pc
   25514:	blx	8944 <__strcat_chk@plt>
   25518:	and.w	r3, r5, #2
   2551c:	str	r3, [sp, #120]	; 0x78
   2551e:	movs	r3, #0
   25520:	str	r3, [sp, #124]	; 0x7c
   25522:	ldrd	r2, r3, [sp, #120]	; 0x78
   25526:	orrs	r3, r2
   25528:	beq.n	2554e <btrfs_print_leaf@@Base+0x586>
   2552a:	cbnz	r6, 2553c <btrfs_print_leaf@@Base+0x574>
   2552c:	ldr.w	r1, [pc, #2112]	; 25d70 <btrfs_print_leaf@@Base+0xda8>
   25530:	add	r0, sp, #940	; 0x3ac
   25532:	mov.w	r2, #256	; 0x100
   25536:	add	r1, pc
   25538:	blx	8944 <__strcat_chk@plt>
   2553c:	ldr.w	r1, [pc, #2100]	; 25d74 <btrfs_print_leaf@@Base+0xdac>
   25540:	add	r0, sp, #940	; 0x3ac
   25542:	mov.w	r2, #256	; 0x100
   25546:	movs	r6, #0
   25548:	add	r1, pc
   2554a:	blx	8944 <__strcat_chk@plt>
   2554e:	and.w	r3, r5, #4
   25552:	str	r3, [sp, #128]	; 0x80
   25554:	movs	r3, #0
   25556:	str	r3, [sp, #132]	; 0x84
   25558:	ldrd	r2, r3, [sp, #128]	; 0x80
   2555c:	orrs	r3, r2
   2555e:	beq.n	25584 <btrfs_print_leaf@@Base+0x5bc>
   25560:	cbnz	r6, 25572 <btrfs_print_leaf@@Base+0x5aa>
   25562:	ldr.w	r1, [pc, #2068]	; 25d78 <btrfs_print_leaf@@Base+0xdb0>
   25566:	add	r0, sp, #940	; 0x3ac
   25568:	mov.w	r2, #256	; 0x100
   2556c:	add	r1, pc
   2556e:	blx	8944 <__strcat_chk@plt>
   25572:	ldr.w	r1, [pc, #2056]	; 25d7c <btrfs_print_leaf@@Base+0xdb4>
   25576:	add	r0, sp, #940	; 0x3ac
   25578:	mov.w	r2, #256	; 0x100
   2557c:	movs	r6, #0
   2557e:	add	r1, pc
   25580:	blx	8944 <__strcat_chk@plt>
   25584:	and.w	r3, r5, #8
   25588:	str	r3, [sp, #136]	; 0x88
   2558a:	movs	r3, #0
   2558c:	str	r3, [sp, #140]	; 0x8c
   2558e:	ldrd	r2, r3, [sp, #136]	; 0x88
   25592:	orrs	r3, r2
   25594:	beq.n	255ba <btrfs_print_leaf@@Base+0x5f2>
   25596:	cbnz	r6, 255a8 <btrfs_print_leaf@@Base+0x5e0>
   25598:	ldr.w	r1, [pc, #2020]	; 25d80 <btrfs_print_leaf@@Base+0xdb8>
   2559c:	add	r0, sp, #940	; 0x3ac
   2559e:	mov.w	r2, #256	; 0x100
   255a2:	add	r1, pc
   255a4:	blx	8944 <__strcat_chk@plt>
   255a8:	ldr.w	r1, [pc, #2008]	; 25d84 <btrfs_print_leaf@@Base+0xdbc>
   255ac:	add	r0, sp, #940	; 0x3ac
   255ae:	mov.w	r2, #256	; 0x100
   255b2:	movs	r6, #0
   255b4:	add	r1, pc
   255b6:	blx	8944 <__strcat_chk@plt>
   255ba:	and.w	r3, r5, #16
   255be:	str	r3, [sp, #144]	; 0x90
   255c0:	movs	r3, #0
   255c2:	str	r3, [sp, #148]	; 0x94
   255c4:	ldrd	r2, r3, [sp, #144]	; 0x90
   255c8:	orrs	r3, r2
   255ca:	beq.n	255f0 <btrfs_print_leaf@@Base+0x628>
   255cc:	cbnz	r6, 255de <btrfs_print_leaf@@Base+0x616>
   255ce:	ldr.w	r1, [pc, #1976]	; 25d88 <btrfs_print_leaf@@Base+0xdc0>
   255d2:	add	r0, sp, #940	; 0x3ac
   255d4:	mov.w	r2, #256	; 0x100
   255d8:	add	r1, pc
   255da:	blx	8944 <__strcat_chk@plt>
   255de:	ldr.w	r1, [pc, #1964]	; 25d8c <btrfs_print_leaf@@Base+0xdc4>
   255e2:	add	r0, sp, #940	; 0x3ac
   255e4:	mov.w	r2, #256	; 0x100
   255e8:	movs	r6, #0
   255ea:	add	r1, pc
   255ec:	blx	8944 <__strcat_chk@plt>
   255f0:	and.w	r3, r5, #32
   255f4:	str	r3, [sp, #152]	; 0x98
   255f6:	movs	r3, #0
   255f8:	str	r3, [sp, #156]	; 0x9c
   255fa:	ldrd	r2, r3, [sp, #152]	; 0x98
   255fe:	orrs	r3, r2
   25600:	beq.n	25626 <btrfs_print_leaf@@Base+0x65e>
   25602:	cbnz	r6, 25614 <btrfs_print_leaf@@Base+0x64c>
   25604:	ldr.w	r1, [pc, #1928]	; 25d90 <btrfs_print_leaf@@Base+0xdc8>
   25608:	add	r0, sp, #940	; 0x3ac
   2560a:	mov.w	r2, #256	; 0x100
   2560e:	add	r1, pc
   25610:	blx	8944 <__strcat_chk@plt>
   25614:	ldr.w	r1, [pc, #1916]	; 25d94 <btrfs_print_leaf@@Base+0xdcc>
   25618:	add	r0, sp, #940	; 0x3ac
   2561a:	mov.w	r2, #256	; 0x100
   2561e:	movs	r6, #0
   25620:	add	r1, pc
   25622:	blx	8944 <__strcat_chk@plt>
   25626:	and.w	r3, r5, #64	; 0x40
   2562a:	str	r3, [sp, #160]	; 0xa0
   2562c:	movs	r3, #0
   2562e:	str	r3, [sp, #164]	; 0xa4
   25630:	ldrd	r2, r3, [sp, #160]	; 0xa0
   25634:	orrs	r3, r2
   25636:	beq.n	2565c <btrfs_print_leaf@@Base+0x694>
   25638:	cbnz	r6, 2564a <btrfs_print_leaf@@Base+0x682>
   2563a:	ldr.w	r1, [pc, #1884]	; 25d98 <btrfs_print_leaf@@Base+0xdd0>
   2563e:	add	r0, sp, #940	; 0x3ac
   25640:	mov.w	r2, #256	; 0x100
   25644:	add	r1, pc
   25646:	blx	8944 <__strcat_chk@plt>
   2564a:	ldr.w	r1, [pc, #1872]	; 25d9c <btrfs_print_leaf@@Base+0xdd4>
   2564e:	add	r0, sp, #940	; 0x3ac
   25650:	mov.w	r2, #256	; 0x100
   25654:	movs	r6, #0
   25656:	add	r1, pc
   25658:	blx	8944 <__strcat_chk@plt>
   2565c:	and.w	r3, r5, #128	; 0x80
   25660:	str	r3, [sp, #168]	; 0xa8
   25662:	movs	r3, #0
   25664:	str	r3, [sp, #172]	; 0xac
   25666:	ldrd	r2, r3, [sp, #168]	; 0xa8
   2566a:	orrs	r3, r2
   2566c:	beq.n	25692 <btrfs_print_leaf@@Base+0x6ca>
   2566e:	cbnz	r6, 25680 <btrfs_print_leaf@@Base+0x6b8>
   25670:	ldr.w	r1, [pc, #1836]	; 25da0 <btrfs_print_leaf@@Base+0xdd8>
   25674:	add	r0, sp, #940	; 0x3ac
   25676:	mov.w	r2, #256	; 0x100
   2567a:	add	r1, pc
   2567c:	blx	8944 <__strcat_chk@plt>
   25680:	ldr.w	r1, [pc, #1824]	; 25da4 <btrfs_print_leaf@@Base+0xddc>
   25684:	add	r0, sp, #940	; 0x3ac
   25686:	mov.w	r2, #256	; 0x100
   2568a:	movs	r6, #0
   2568c:	add	r1, pc
   2568e:	blx	8944 <__strcat_chk@plt>
   25692:	and.w	r3, r5, #256	; 0x100
   25696:	str	r3, [sp, #176]	; 0xb0
   25698:	movs	r3, #0
   2569a:	str	r3, [sp, #180]	; 0xb4
   2569c:	ldrd	r2, r3, [sp, #176]	; 0xb0
   256a0:	orrs	r3, r2
   256a2:	beq.n	256c8 <btrfs_print_leaf@@Base+0x700>
   256a4:	cbnz	r6, 256b6 <btrfs_print_leaf@@Base+0x6ee>
   256a6:	ldr.w	r1, [pc, #1792]	; 25da8 <btrfs_print_leaf@@Base+0xde0>
   256aa:	add	r0, sp, #940	; 0x3ac
   256ac:	mov.w	r2, #256	; 0x100
   256b0:	add	r1, pc
   256b2:	blx	8944 <__strcat_chk@plt>
   256b6:	ldr.w	r1, [pc, #1780]	; 25dac <btrfs_print_leaf@@Base+0xde4>
   256ba:	add	r0, sp, #940	; 0x3ac
   256bc:	mov.w	r2, #256	; 0x100
   256c0:	movs	r6, #0
   256c2:	add	r1, pc
   256c4:	blx	8944 <__strcat_chk@plt>
   256c8:	and.w	r3, r5, #512	; 0x200
   256cc:	str	r3, [sp, #184]	; 0xb8
   256ce:	movs	r3, #0
   256d0:	str	r3, [sp, #188]	; 0xbc
   256d2:	ldrd	r2, r3, [sp, #184]	; 0xb8
   256d6:	orrs	r3, r2
   256d8:	beq.n	256fe <btrfs_print_leaf@@Base+0x736>
   256da:	cbnz	r6, 256ec <btrfs_print_leaf@@Base+0x724>
   256dc:	ldr.w	r1, [pc, #1744]	; 25db0 <btrfs_print_leaf@@Base+0xde8>
   256e0:	add	r0, sp, #940	; 0x3ac
   256e2:	mov.w	r2, #256	; 0x100
   256e6:	add	r1, pc
   256e8:	blx	8944 <__strcat_chk@plt>
   256ec:	ldr.w	r1, [pc, #1732]	; 25db4 <btrfs_print_leaf@@Base+0xdec>
   256f0:	add	r0, sp, #940	; 0x3ac
   256f2:	mov.w	r2, #256	; 0x100
   256f6:	movs	r6, #0
   256f8:	add	r1, pc
   256fa:	blx	8944 <__strcat_chk@plt>
   256fe:	and.w	r3, r5, #1024	; 0x400
   25702:	str	r3, [sp, #192]	; 0xc0
   25704:	movs	r3, #0
   25706:	str	r3, [sp, #196]	; 0xc4
   25708:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2570c:	orrs	r3, r2
   2570e:	beq.n	25734 <btrfs_print_leaf@@Base+0x76c>
   25710:	cbnz	r6, 25722 <btrfs_print_leaf@@Base+0x75a>
   25712:	ldr.w	r1, [pc, #1700]	; 25db8 <btrfs_print_leaf@@Base+0xdf0>
   25716:	add	r0, sp, #940	; 0x3ac
   25718:	mov.w	r2, #256	; 0x100
   2571c:	add	r1, pc
   2571e:	blx	8944 <__strcat_chk@plt>
   25722:	ldr.w	r1, [pc, #1688]	; 25dbc <btrfs_print_leaf@@Base+0xdf4>
   25726:	add	r0, sp, #940	; 0x3ac
   25728:	mov.w	r2, #256	; 0x100
   2572c:	movs	r6, #0
   2572e:	add	r1, pc
   25730:	blx	8944 <__strcat_chk@plt>
   25734:	and.w	r3, r5, #2048	; 0x800
   25738:	str	r3, [sp, #200]	; 0xc8
   2573a:	movs	r3, #0
   2573c:	str	r3, [sp, #204]	; 0xcc
   2573e:	ldrd	r2, r3, [sp, #200]	; 0xc8
   25742:	add	r0, sp, #940	; 0x3ac
   25744:	orrs	r3, r2
   25746:	beq.n	25826 <btrfs_print_leaf@@Base+0x85e>
   25748:	cbnz	r6, 25758 <btrfs_print_leaf@@Base+0x790>
   2574a:	ldr.w	r1, [pc, #1652]	; 25dc0 <btrfs_print_leaf@@Base+0xdf8>
   2574e:	mov.w	r2, #256	; 0x100
   25752:	add	r1, pc
   25754:	blx	8944 <__strcat_chk@plt>
   25758:	ldr.w	r1, [pc, #1640]	; 25dc4 <btrfs_print_leaf@@Base+0xdfc>
   2575c:	add	r0, sp, #940	; 0x3ac
   2575e:	mov.w	r2, #256	; 0x100
   25762:	add	r1, pc
   25764:	blx	8944 <__strcat_chk@plt>
   25768:	strd	r5, r4, [sp, #64]	; 0x40
   2576c:	add	r3, sp, #940	; 0x3ac
   2576e:	str	r3, [sp, #72]	; 0x48
   25770:	movs	r0, #1
   25772:	ldr.w	r2, [fp, #72]	; 0x48
   25776:	ldr.w	r3, [fp, #76]	; 0x4c
   2577a:	ldr.w	r1, [pc, #1612]	; 25dc8 <btrfs_print_leaf@@Base+0xe00>
   2577e:	strd	r2, r3, [sp, #56]	; 0x38
   25782:	add	r1, pc
   25784:	ldr.w	r2, [fp, #56]	; 0x38
   25788:	ldr.w	r3, [fp, #60]	; 0x3c
   2578c:	strd	r2, r3, [sp, #48]	; 0x30
   25790:	ldr.w	r3, [fp, #48]	; 0x30
   25794:	str	r3, [sp, #44]	; 0x2c
   25796:	ldr.w	r3, [fp, #44]	; 0x2c
   2579a:	str	r3, [sp, #40]	; 0x28
   2579c:	ldr.w	r3, [fp, #40]	; 0x28
   257a0:	str	r3, [sp, #36]	; 0x24
   257a2:	ldr.w	r3, [fp, #52]	; 0x34
   257a6:	str	r3, [sp, #32]
   257a8:	ldr.w	r2, [fp, #32]
   257ac:	ldr.w	r3, [fp, #36]	; 0x24
   257b0:	strd	r2, r3, [sp, #24]
   257b4:	ldr.w	r2, [fp, #24]
   257b8:	ldr.w	r3, [fp, #28]
   257bc:	strd	r2, r3, [sp, #16]
   257c0:	ldr.w	r2, [fp, #16]
   257c4:	ldr.w	r3, [fp, #20]
   257c8:	strd	r2, r3, [sp, #8]
   257cc:	ldr.w	r2, [fp, #8]
   257d0:	ldr.w	r3, [fp, #12]
   257d4:	strd	r2, r3, [sp]
   257d8:	ldr.w	r3, [fp, #4]
   257dc:	ldr.w	r2, [fp]
   257e0:	blx	89ec <__printf_chk@plt+0x4>
   257e4:	ldr.w	r2, [pc, #1508]	; 25dcc <btrfs_print_leaf@@Base+0xe04>
   257e8:	add.w	r1, r8, #213	; 0xd5
   257ec:	mov	r0, r9
   257ee:	add	r2, pc
   257f0:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   257f4:	ldr.w	r2, [pc, #1496]	; 25dd0 <btrfs_print_leaf@@Base+0xe08>
   257f8:	add.w	r1, r8, #225	; 0xe1
   257fc:	mov	r0, r9
   257fe:	add	r2, pc
   25800:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25804:	ldr.w	r2, [pc, #1484]	; 25dd4 <btrfs_print_leaf@@Base+0xe0c>
   25808:	add.w	r1, r8, #237	; 0xed
   2580c:	mov	r0, r9
   2580e:	add	r2, pc
   25810:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25814:	ldr.w	r2, [pc, #1472]	; 25dd8 <btrfs_print_leaf@@Base+0xe10>
   25818:	add.w	r1, r8, #249	; 0xf9
   2581c:	mov	r0, r9
   2581e:	add	r2, pc
   25820:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25824:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   25826:	cmp	r6, #0
   25828:	beq.n	25768 <btrfs_print_leaf@@Base+0x7a0>
   2582a:	ldr.w	r1, [pc, #1456]	; 25ddc <btrfs_print_leaf@@Base+0xe14>
   2582e:	mov.w	r2, #256	; 0x100
   25832:	add	r1, pc
   25834:	b.n	25764 <btrfs_print_leaf@@Base+0x79c>
   25836:	add.w	r3, fp, r7
   2583a:	mov	r1, r6
   2583c:	mov	r0, r9
   2583e:	ldrh	r4, [r3, #8]
   25840:	ldr	r2, [r3, #0]
   25842:	cmp	r4, #255	; 0xff
   25844:	ldr.w	r8, [r3, #4]
   25848:	mov	r3, r4
   2584a:	vmov	s16, r2
   2584e:	it	cs
   25850:	movcs	r3, #255	; 0xff
   25852:	add.w	r2, r7, #10
   25856:	str	r3, [sp, #96]	; 0x60
   25858:	bl	172c2 <read_extent_buffer@@Base>
   2585c:	ldr	r3, [sp, #96]	; 0x60
   2585e:	vmov	r2, s16
   25862:	movs	r0, #1
   25864:	vmov	r1, s17
   25868:	strd	r4, r3, [sp]
   2586c:	mov	r3, r8
   2586e:	str	r6, [sp, #8]
   25870:	adds	r4, #10
   25872:	blx	89ec <__printf_chk@plt+0x4>
   25876:	add	r7, r4
   25878:	add	r5, r4
   2587a:	ldr	r3, [sp, #84]	; 0x54
   2587c:	cmp	r3, r5
   2587e:	bhi.n	25836 <btrfs_print_leaf@@Base+0x86e>
   25880:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   25882:	add.w	r3, fp, r7
   25886:	mov	r1, r6
   25888:	mov	r0, r9
   2588a:	ldr	r2, [r3, #8]
   2588c:	ldrh	r4, [r3, #16]
   2588e:	ldr.w	r8, [r3, #12]
   25892:	vmov	s16, r2
   25896:	ldr	r2, [r3, #0]
   25898:	ldr	r3, [r3, #4]
   2589a:	cmp	r4, #255	; 0xff
   2589c:	str	r2, [sp, #96]	; 0x60
   2589e:	add.w	r2, r7, #18
   258a2:	str	r3, [sp, #88]	; 0x58
   258a4:	mov	r3, r4
   258a6:	it	cs
   258a8:	movcs	r3, #255	; 0xff
   258aa:	str	r3, [sp, #244]	; 0xf4
   258ac:	bl	172c2 <read_extent_buffer@@Base>
   258b0:	ldr	r3, [sp, #244]	; 0xf4
   258b2:	vmov	r2, s16
   258b6:	movs	r0, #1
   258b8:	vmov	r1, s17
   258bc:	strd	r4, r3, [sp, #8]
   258c0:	adds	r4, #18
   258c2:	ldr	r3, [sp, #96]	; 0x60
   258c4:	add	r7, r4
   258c6:	str	r6, [sp, #16]
   258c8:	add	r5, r4
   258ca:	str	r3, [sp, #0]
   258cc:	ldr	r3, [sp, #88]	; 0x58
   258ce:	str	r3, [sp, #4]
   258d0:	mov	r3, r8
   258d2:	blx	89ec <__printf_chk@plt+0x4>
   258d6:	ldr	r3, [sp, #84]	; 0x54
   258d8:	cmp	r3, r5
   258da:	bhi.n	25882 <btrfs_print_leaf@@Base+0x8ba>
   258dc:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   258de:	ldr.w	r3, [pc, #1280]	; 25de0 <btrfs_print_leaf@@Base+0xe18>
   258e2:	add	r6, sp, #940	; 0x3ac
   258e4:	movs	r5, #0
   258e6:	add	r3, pc
   258e8:	vmov	s17, r3
   258ec:	b.n	258d6 <btrfs_print_leaf@@Base+0x90e>
   258ee:	add	r4, sp, #272	; 0x110
   258f0:	movs	r3, #17
   258f2:	mov	r2, r7
   258f4:	mov	r0, r9
   258f6:	mov	r1, r4
   258f8:	add.w	r5, fp, r7
   258fc:	bl	172c2 <read_extent_buffer@@Base>
   25900:	vmov	r1, s17
   25904:	movs	r0, #1
   25906:	blx	89ec <__printf_chk@plt+0x4>
   2590a:	mov	r0, r4
   2590c:	bl	24bcc <btrfs_print_key@@Base>
   25910:	vmov	r1, s18
   25914:	movs	r0, #1
   25916:	blx	89ec <__printf_chk@plt+0x4>
   2591a:	ldrb	r3, [r5, #29]
   2591c:	cmp	r3, #8
   2591e:	bhi.n	259d8 <btrfs_print_leaf@@Base+0xa10>
   25920:	ldr.w	r2, [pc, #1216]	; 25de4 <btrfs_print_leaf@@Base+0xe1c>
   25924:	add	r2, pc
   25926:	add.w	r2, r2, r3, lsl #2
   2592a:	ldr.w	r2, [r2, #1024]	; 0x400
   2592e:	cmp	r2, #0
   25930:	beq.n	259d8 <btrfs_print_leaf@@Base+0xa10>
   25932:	ldr.w	r1, [pc, #1204]	; 25de8 <btrfs_print_leaf@@Base+0xe20>
   25936:	add	r1, pc
   25938:	movs	r0, #1
   2593a:	add.w	r8, sp, #940	; 0x3ac
   2593e:	blx	89ec <__printf_chk@plt+0x4>
   25942:	movs	r0, #10
   25944:	blx	8988 <putchar@plt+0x4>
   25948:	ldrh.w	r4, [r5, #27]
   2594c:	ldrh.w	r3, [r5, #25]
   25950:	mov	r1, r8
   25952:	cmp	r4, #255	; 0xff
   25954:	mov	r0, r9
   25956:	str	r3, [sp, #96]	; 0x60
   25958:	mov	r3, r4
   2595a:	it	cs
   2595c:	movcs	r3, #255	; 0xff
   2595e:	vmov	s16, r3
   25962:	add.w	r3, r7, #30
   25966:	str	r3, [sp, #88]	; 0x58
   25968:	ldr	r2, [sp, #88]	; 0x58
   2596a:	vmov	r3, s16
   2596e:	bl	172c2 <read_extent_buffer@@Base>
   25972:	ldr.w	r2, [r5, #17]!
   25976:	ldr	r3, [sp, #96]	; 0x60
   25978:	movs	r0, #1
   2597a:	ldr.w	r1, [pc, #1136]	; 25dec <btrfs_print_leaf@@Base+0xe24>
   2597e:	str	r4, [sp, #4]
   25980:	add	r1, pc
   25982:	str	r3, [sp, #0]
   25984:	ldr	r3, [r5, #4]
   25986:	blx	89ec <__printf_chk@plt+0x4>
   2598a:	ldr.w	r1, [pc, #1124]	; 25df0 <btrfs_print_leaf@@Base+0xe28>
   2598e:	mov	r3, r8
   25990:	vmov	r2, s16
   25994:	add	r1, pc
   25996:	movs	r0, #1
   25998:	blx	89ec <__printf_chk@plt+0x4>
   2599c:	ldr	r3, [sp, #96]	; 0x60
   2599e:	cbz	r3, 259c6 <btrfs_print_leaf@@Base+0x9fe>
   259a0:	cmp	r3, #255	; 0xff
   259a2:	ldr	r2, [sp, #88]	; 0x58
   259a4:	mov	r5, r3
   259a6:	mov	r1, r8
   259a8:	it	cs
   259aa:	movcs	r5, #255	; 0xff
   259ac:	add	r2, r4
   259ae:	mov	r3, r5
   259b0:	mov	r0, r9
   259b2:	bl	172c2 <read_extent_buffer@@Base>
   259b6:	ldr.w	r1, [pc, #1084]	; 25df4 <btrfs_print_leaf@@Base+0xe2c>
   259ba:	mov	r3, r8
   259bc:	mov	r2, r5
   259be:	add	r1, pc
   259c0:	movs	r0, #1
   259c2:	blx	89ec <__printf_chk@plt+0x4>
   259c6:	ldr	r3, [sp, #96]	; 0x60
   259c8:	add	r4, r3
   259ca:	adds	r4, #30
   259cc:	add	r7, r4
   259ce:	add	r6, r4
   259d0:	ldr	r3, [sp, #84]	; 0x54
   259d2:	cmp	r3, r6
   259d4:	bhi.n	258ee <btrfs_print_leaf@@Base+0x926>
   259d6:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   259d8:	vmov	r1, s19
   259dc:	mov	r2, r3
   259de:	b.n	25938 <btrfs_print_leaf@@Base+0x970>
   259e0:	ldr.w	r3, [sl, #17]
   259e4:	ldr.w	r1, [pc, #1040]	; 25df8 <btrfs_print_leaf@@Base+0xe30>
   259e8:	add	r3, fp
   259ea:	add	r1, pc
   259ec:	ldr.w	r2, [r3, #101]!
   259f0:	ldr	r3, [r3, #4]
   259f2:	movs	r0, #1
   259f4:	blx	89ec <__printf_chk@plt+0x4>
   259f8:	b.n	25230 <btrfs_print_leaf@@Base+0x268>
   259fa:	movs	r6, #0
   259fc:	movs	r2, #28
   259fe:	mov	r1, r6
   25a00:	add	r0, sp, #776	; 0x308
   25a02:	add	r5, sp, #300	; 0x12c
   25a04:	str	r6, [sp, #772]	; 0x304
   25a06:	blx	8978 <memset@plt+0x4>
   25a0a:	ldr.w	r3, [sl, #21]
   25a0e:	ldr.w	r4, [sl, #17]
   25a12:	movw	r2, #439	; 0x1b7
   25a16:	mov	r1, r6
   25a18:	mov	r0, r5
   25a1a:	str	r3, [sp, #84]	; 0x54
   25a1c:	blx	8978 <memset@plt+0x4>
   25a20:	ldr	r3, [sp, #84]	; 0x54
   25a22:	add.w	r2, r4, #101	; 0x65
   25a26:	mov	r1, r5
   25a28:	mov	r0, r9
   25a2a:	bl	172c2 <read_extent_buffer@@Base>
   25a2e:	ldr.w	r3, [r5, #208]	; 0xd0
   25a32:	add	r7, sp, #772	; 0x304
   25a34:	and.w	r3, r3, #1
   25a38:	strd	r3, r6, [sp, #208]	; 0xd0
   25a3c:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25a40:	orrs	r3, r2
   25a42:	mov.w	r2, #32
   25a46:	beq.w	25bd6 <btrfs_print_leaf@@Base+0xc0e>
   25a4a:	ldr	r1, [pc, #944]	; (25dfc <btrfs_print_leaf@@Base+0xe34>)
   25a4c:	add	r1, pc
   25a4e:	add	r5, sp, #300	; 0x12c
   25a50:	mov	r0, r7
   25a52:	blx	8944 <__strcat_chk@plt>
   25a56:	ldr	r1, [pc, #936]	; (25e00 <btrfs_print_leaf@@Base+0xe38>)
   25a58:	ldr.w	r3, [r5, #216]	; 0xd8
   25a5c:	movs	r0, #1
   25a5e:	add	r1, pc
   25a60:	str	r3, [sp, #20]
   25a62:	ldrb.w	r3, [r5, #238]	; 0xee
   25a66:	str	r3, [sp, #16]
   25a68:	ldrd	r2, r3, [r5, #176]	; 0xb0
   25a6c:	strd	r2, r3, [sp, #8]
   25a70:	ldrd	r2, r3, [r5, #168]	; 0xa8
   25a74:	strd	r2, r3, [sp]
   25a78:	ldrd	r2, r3, [r5, #160]	; 0xa0
   25a7c:	blx	89ec <__printf_chk@plt+0x4>
   25a80:	add	r3, sp, #772	; 0x304
   25a82:	str	r3, [sp, #24]
   25a84:	movs	r0, #1
   25a86:	ldrd	r2, r3, [r5, #208]	; 0xd0
   25a8a:	ldr	r1, [pc, #888]	; (25e04 <btrfs_print_leaf@@Base+0xe3c>)
   25a8c:	strd	r2, r3, [sp, #16]
   25a90:	add	r1, pc
   25a92:	ldrd	r2, r3, [r5, #192]	; 0xc0
   25a96:	strd	r2, r3, [sp, #8]
   25a9a:	ldrd	r2, r3, [r5, #184]	; 0xb8
   25a9e:	strd	r2, r3, [sp]
   25aa2:	ldrd	r2, r3, [r5, #200]	; 0xc8
   25aa6:	blx	89ec <__printf_chk@plt+0x4>
   25aaa:	ldrd	r0, r1, [r5, #160]	; 0xa0
   25aae:	ldr.w	r3, [r5, #243]	; 0xf3
   25ab2:	ldr.w	r2, [r5, #239]	; 0xef
   25ab6:	cmp	r1, r3
   25ab8:	it	eq
   25aba:	cmpeq	r0, r2
   25abc:	bne.n	25bb4 <btrfs_print_leaf@@Base+0xbec>
   25abe:	add	r2, sp, #940	; 0x3ac
   25ac0:	addw	r0, sp, #547	; 0x223
   25ac4:	str	r2, [sp, #84]	; 0x54
   25ac6:	mov	r1, r2
   25ac8:	blx	8580 <uuid_unparse@plt>
   25acc:	ldr	r1, [pc, #824]	; (25e08 <btrfs_print_leaf@@Base+0xe40>)
   25ace:	ldr	r2, [sp, #84]	; 0x54
   25ad0:	movs	r0, #1
   25ad2:	add	r1, pc
   25ad4:	blx	89ec <__printf_chk@plt+0x4>
   25ad8:	addw	r2, sp, #563	; 0x233
   25adc:	movs	r3, #0
   25ade:	ldrb.w	r1, [r2], #1
   25ae2:	cmp	r1, #0
   25ae4:	bne.w	262de <btrfs_print_leaf@@Base+0x1316>
   25ae8:	adds	r3, #1
   25aea:	cmp	r3, #16
   25aec:	bne.n	25ade <btrfs_print_leaf@@Base+0xb16>
   25aee:	addw	r2, sp, #579	; 0x243
   25af2:	movs	r3, #0
   25af4:	ldrb.w	r1, [r2], #1
   25af8:	cmp	r1, #0
   25afa:	bne.w	262c2 <btrfs_print_leaf@@Base+0x12fa>
   25afe:	adds	r3, #1
   25b00:	cmp	r3, #16
   25b02:	bne.n	25af4 <btrfs_print_leaf@@Base+0xb2c>
   25b04:	ldr.w	r0, [sp, #595]	; 0x253
   25b08:	ldr.w	r1, [sp, #599]	; 0x257
   25b0c:	orrs.w	r2, r0, r1
   25b10:	beq.n	25b44 <btrfs_print_leaf@@Base+0xb7c>
   25b12:	ldr.w	r5, [sp, #619]	; 0x26b
   25b16:	ldr.w	r2, [sp, #623]	; 0x26f
   25b1a:	ldr.w	r3, [sp, #607]	; 0x25f
   25b1e:	strd	r5, r2, [sp, #16]
   25b22:	ldr.w	r2, [sp, #615]	; 0x267
   25b26:	ldr.w	r5, [sp, #611]	; 0x263
   25b2a:	strd	r5, r2, [sp, #8]
   25b2e:	ldr.w	r2, [sp, #603]	; 0x25b
   25b32:	strd	r2, r3, [sp]
   25b36:	mov	r3, r1
   25b38:	ldr	r1, [pc, #720]	; (25e0c <btrfs_print_leaf@@Base+0xe44>)
   25b3a:	mov	r2, r0
   25b3c:	movs	r0, #1
   25b3e:	add	r1, pc
   25b40:	blx	89ec <__printf_chk@plt+0x4>
   25b44:	add.w	r1, r4, #428	; 0x1ac
   25b48:	add.w	r0, fp, r1
   25b4c:	ldr.w	r2, [fp, r1]
   25b50:	ldr	r3, [r0, #4]
   25b52:	orrs	r3, r2
   25b54:	beq.n	25b60 <btrfs_print_leaf@@Base+0xb98>
   25b56:	ldr	r2, [pc, #696]	; (25e10 <btrfs_print_leaf@@Base+0xe48>)
   25b58:	mov	r0, r9
   25b5a:	add	r2, pc
   25b5c:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25b60:	add.w	r1, r4, #440	; 0x1b8
   25b64:	add.w	r0, fp, r1
   25b68:	ldr.w	r2, [fp, r1]
   25b6c:	ldr	r3, [r0, #4]
   25b6e:	orrs	r3, r2
   25b70:	beq.n	25b7c <btrfs_print_leaf@@Base+0xbb4>
   25b72:	ldr	r2, [pc, #672]	; (25e14 <btrfs_print_leaf@@Base+0xe4c>)
   25b74:	mov	r0, r9
   25b76:	add	r2, pc
   25b78:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25b7c:	add.w	r1, r4, #452	; 0x1c4
   25b80:	add.w	r0, fp, r1
   25b84:	ldr.w	r2, [fp, r1]
   25b88:	ldr	r3, [r0, #4]
   25b8a:	orrs	r3, r2
   25b8c:	beq.n	25b98 <btrfs_print_leaf@@Base+0xbd0>
   25b8e:	ldr	r2, [pc, #648]	; (25e18 <btrfs_print_leaf@@Base+0xe50>)
   25b90:	mov	r0, r9
   25b92:	add	r2, pc
   25b94:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25b98:	add.w	r1, r4, #464	; 0x1d0
   25b9c:	add.w	r0, fp, r1
   25ba0:	ldr.w	r2, [fp, r1]
   25ba4:	ldr	r3, [r0, #4]
   25ba6:	orrs	r3, r2
   25ba8:	beq.n	25bb4 <btrfs_print_leaf@@Base+0xbec>
   25baa:	ldr	r2, [pc, #624]	; (25e1c <btrfs_print_leaf@@Base+0xe54>)
   25bac:	mov	r0, r9
   25bae:	add	r2, pc
   25bb0:	bl	24654 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25bb4:	ldr	r1, [pc, #616]	; (25e20 <btrfs_print_leaf@@Base+0xe58>)
   25bb6:	movs	r0, #1
   25bb8:	add	r1, pc
   25bba:	blx	89ec <__printf_chk@plt+0x4>
   25bbe:	add	r0, sp, #520	; 0x208
   25bc0:	bl	24bcc <btrfs_print_key@@Base>
   25bc4:	ldr	r1, [pc, #604]	; (25e24 <btrfs_print_leaf@@Base+0xe5c>)
   25bc6:	ldrb.w	r2, [sp, #537]	; 0x219
   25bca:	add	r1, pc
   25bcc:	movs	r0, #1
   25bce:	blx	89ec <__printf_chk@plt+0x4>
   25bd2:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25bd6:	ldr	r1, [pc, #592]	; (25e28 <btrfs_print_leaf@@Base+0xe60>)
   25bd8:	add	r1, pc
   25bda:	b.n	25a4e <btrfs_print_leaf@@Base+0xa86>
   25bdc:	ldr	r2, [pc, #588]	; (25e2c <btrfs_print_leaf@@Base+0xe64>)
   25bde:	add	r2, pc
   25be0:	b.w	253dc <btrfs_print_leaf@@Base+0x414>
   25be4:	movs	r2, #0
   25be6:	ldr	r1, [sp, #80]	; 0x50
   25be8:	mov	r0, r9
   25bea:	bl	24ce8 <print_extent_item@@Base>
   25bee:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25bf2:	movs	r2, #1
   25bf4:	b.n	25be6 <btrfs_print_leaf@@Base+0xc1e>
   25bf6:	ldr	r0, [pc, #568]	; (25e30 <btrfs_print_leaf@@Base+0xe68>)
   25bf8:	add	r0, pc
   25bfa:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25bfe:	ldr	r0, [pc, #564]	; (25e34 <btrfs_print_leaf@@Base+0xe6c>)
   25c00:	add	r0, pc
   25c02:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25c06:	ldr	r1, [pc, #560]	; (25e38 <btrfs_print_leaf@@Base+0xe70>)
   25c08:	movs	r0, #1
   25c0a:	ldr.w	r5, [sl, #17]
   25c0e:	add	r1, pc
   25c10:	blx	89ec <__printf_chk@plt+0x4>
   25c14:	adds	r5, #101	; 0x65
   25c16:	ldr	r1, [sp, #100]	; 0x64
   25c18:	add.w	r4, fp, r5
   25c1c:	movs	r3, #0
   25c1e:	str	r3, [sp, #0]
   25c20:	ldr.w	r2, [fp, r5]
   25c24:	ldr	r3, [r4, #4]
   25c26:	ldr	r0, [r1, #0]
   25c28:	bl	2495c <print_objectid@@Base>
   25c2c:	ldr	r3, [r4, #24]
   25c2e:	ldr	r1, [pc, #524]	; (25e3c <btrfs_print_leaf@@Base+0xe74>)
   25c30:	str	r3, [sp, #8]
   25c32:	add	r1, pc
   25c34:	ldr	r2, [r4, #16]
   25c36:	ldr	r3, [r4, #20]
   25c38:	strd	r2, r3, [sp]
   25c3c:	ldr	r2, [r4, #8]
   25c3e:	ldr	r3, [r4, #12]
   25c40:	movs	r0, #1
   25c42:	blx	89ec <__printf_chk@plt+0x4>
   25c46:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25c4a:	ldr.w	r2, [sl, #17]
   25c4e:	ldr	r1, [pc, #496]	; (25e40 <btrfs_print_leaf@@Base+0xe78>)
   25c50:	add	r2, fp
   25c52:	add	r1, pc
   25c54:	ldr.w	r2, [r2, #101]	; 0x65
   25c58:	b.n	25bcc <btrfs_print_leaf@@Base+0xc04>
   25c5a:	ldr	r0, [pc, #488]	; (25e44 <btrfs_print_leaf@@Base+0xe7c>)
   25c5c:	add	r0, pc
   25c5e:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25c62:	ldr	r0, [pc, #484]	; (25e48 <btrfs_print_leaf@@Base+0xe80>)
   25c64:	add	r0, pc
   25c66:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25c6a:	ldr	r3, [sp, #104]	; 0x68
   25c6c:	ldr.w	r0, [r3, #308]	; 0x134
   25c70:	bl	17db8 <btrfs_super_csum_size@@Base>
   25c74:	mov	r1, r0
   25c76:	ldr	r0, [sp, #84]	; 0x54
   25c78:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   25c7c:	ldr	r3, [sp, #104]	; 0x68
   25c7e:	ldr	r1, [pc, #460]	; (25e4c <btrfs_print_leaf@@Base+0xe84>)
   25c80:	ldr.w	r3, [r3, #388]	; 0x184
   25c84:	add	r1, pc
   25c86:	muls	r0, r3
   25c88:	ldrd	r2, r3, [sp, #88]	; 0x58
   25c8c:	adds	r2, r2, r0
   25c8e:	adc.w	r3, r3, #0
   25c92:	strd	r2, r3, [sp]
   25c96:	str	r0, [sp, #8]
   25c98:	ldrd	r2, r3, [sp, #88]	; 0x58
   25c9c:	b.n	25c40 <btrfs_print_leaf@@Base+0xc78>
   25c9e:	ldr	r1, [pc, #432]	; (25e50 <btrfs_print_leaf@@Base+0xe88>)
   25ca0:	add	r1, pc
   25ca2:	blx	87a0 <strcpy@plt>
   25ca6:	cmp	r5, #1
   25ca8:	ldr	r2, [r4, #0]
   25caa:	ldr	r3, [r4, #4]
   25cac:	beq.w	25e7e <btrfs_print_leaf@@Base+0xeb6>
   25cb0:	cmp	r5, #2
   25cb2:	beq.w	25e86 <btrfs_print_leaf@@Base+0xebe>
   25cb6:	cmp	r5, #0
   25cb8:	beq.w	25e8e <btrfs_print_leaf@@Base+0xec6>
   25cbc:	ldr	r1, [pc, #404]	; (25e54 <btrfs_print_leaf@@Base+0xe8c>)
   25cbe:	add	r1, pc
   25cc0:	strd	r5, r1, [sp]
   25cc4:	movs	r0, #1
   25cc6:	ldr	r1, [pc, #400]	; (25e58 <btrfs_print_leaf@@Base+0xe90>)
   25cc8:	add	r1, pc
   25cca:	blx	89ec <__printf_chk@plt+0x4>
   25cce:	cmp	r5, #0
   25cd0:	bne.w	25e96 <btrfs_print_leaf@@Base+0xece>
   25cd4:	ldr.w	r2, [sl, #21]
   25cd8:	add	r3, sp, #940	; 0x3ac
   25cda:	str	r3, [sp, #12]
   25cdc:	movs	r0, #1
   25cde:	ldrb	r3, [r4, #16]
   25ce0:	subs	r2, #21
   25ce2:	str	r3, [sp, #8]
   25ce4:	ldr	r1, [r4, #8]
   25ce6:	ldr	r3, [r4, #12]
   25ce8:	strd	r1, r3, [sp]
   25cec:	ldr	r1, [pc, #364]	; (25e5c <btrfs_print_leaf@@Base+0xe94>)
   25cee:	add	r1, pc
   25cf0:	blx	89ec <__printf_chk@plt+0x4>
   25cf4:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25cf8:	ldr	r1, [pc, #356]	; (25e60 <btrfs_print_leaf@@Base+0xe98>)
   25cfa:	add	r1, pc
   25cfc:	b.n	25ca2 <btrfs_print_leaf@@Base+0xcda>
   25cfe:	ldr	r1, [pc, #356]	; (25e64 <btrfs_print_leaf@@Base+0xe9c>)
   25d00:	add	r1, pc
   25d02:	b.n	25ca2 <btrfs_print_leaf@@Base+0xcda>
   25d04:	ldr	r1, [pc, #352]	; (25e68 <btrfs_print_leaf@@Base+0xea0>)
   25d06:	add	r1, pc
   25d08:	b.n	25ca2 <btrfs_print_leaf@@Base+0xcda>
   25d0a:	nop
   25d0c:	stc2	0, cr0, [sl, #12]!
   25d10:	lsls	r4, r4, #8
   25d12:	movs	r0, r0
   25d14:	ldc2	0, cr0, [lr, #12]
   25d18:	str	r5, [sp, #72]	; 0x48
   25d1a:	movs	r1, r0
   25d1c:	str	r3, [r5, #80]	; 0x50
   25d1e:	movs	r1, r0
   25d20:	str	r3, [sp, #36]	; 0x24
   25d22:	movs	r1, r0
   25d24:	str	r4, [sp, #728]	; 0x2d8
   25d26:	movs	r1, r0
   25d28:	lsls	r0, r3, #9
   25d2a:	movs	r0, r0
   25d2c:	str	r4, [sp, #720]	; 0x2d0
   25d2e:	movs	r1, r0
   25d30:	str	r5, [sp, #100]	; 0x64
   25d32:	movs	r1, r0
   25d34:	ldr	r5, [sp, #636]	; 0x27c
   25d36:	movs	r1, r0
   25d38:	str	r4, [sp, #456]	; 0x1c8
   25d3a:	movs	r1, r0
   25d3c:	str	r4, [sp, #648]	; 0x288
   25d3e:	movs	r1, r0
   25d40:	stc2	0, cr0, [ip], #-12
   25d44:	str	r4, [sp, #340]	; 0x154
   25d46:	movs	r1, r0
   25d48:	str	r4, [sp, #224]	; 0xe0
   25d4a:	movs	r1, r0
   25d4c:	str	r4, [sp, #40]	; 0x28
   25d4e:	movs	r1, r0
   25d50:	str	r4, [sp, #1008]	; 0x3f0
   25d52:	movs	r1, r0
   25d54:	str	r4, [sp, #820]	; 0x334
   25d56:	movs	r1, r0
   25d58:	str	r2, [sp, #704]	; 0x2c0
   25d5a:	movs	r1, r0
   25d5c:	str	r4, [sp, #256]	; 0x100
   25d5e:	movs	r1, r0
   25d60:	str	r4, [sp, #244]	; 0xf4
   25d62:	movs	r1, r0
   25d64:	ldrh	r4, [r6, r0]
   25d66:	movs	r1, r0
   25d68:	str	r6, [sp, #716]	; 0x2cc
   25d6a:	movs	r1, r0
   25d6c:	str	r1, [sp, #340]	; 0x154
   25d6e:	movs	r1, r0
   25d70:	str	r1, [r7, #0]
   25d72:	movs	r1, r0
   25d74:	str	r1, [sp, #164]	; 0xa4
   25d76:	movs	r1, r0
   25d78:	str	r3, [r0, #0]
   25d7a:	movs	r1, r0
   25d7c:	str	r0, [sp, #1012]	; 0x3f4
   25d7e:	movs	r1, r0
   25d80:	ldrsh	r5, [r1, r7]
   25d82:	movs	r1, r0
   25d84:	str	r0, [sp, #832]	; 0x340
   25d86:	movs	r1, r0
   25d88:	ldrsh	r7, [r2, r6]
   25d8a:	movs	r1, r0
   25d8c:	str	r5, [r0, #4]
   25d8e:	movs	r1, r0
   25d90:	ldrsh	r1, [r4, r5]
   25d92:	movs	r1, r0
   25d94:	str	r0, [sp, #584]	; 0x248
   25d96:	movs	r1, r0
   25d98:	ldrsh	r3, [r5, r4]
   25d9a:	movs	r1, r0
   25d9c:	str	r0, [sp, #228]	; 0xe4
   25d9e:	movs	r1, r0
   25da0:	ldrsh	r5, [r6, r3]
   25da2:	movs	r1, r0
   25da4:	str	r0, [sp, #52]	; 0x34
   25da6:	movs	r1, r0
   25da8:	ldrsh	r7, [r7, r2]
   25daa:	movs	r1, r0
   25dac:	ldrh	r6, [r3, #62]	; 0x3e
   25dae:	movs	r1, r0
   25db0:	ldrsh	r1, [r1, r2]
   25db2:	movs	r1, r0
   25db4:	ldrh	r7, [r5, #60]	; 0x3c
   25db6:	movs	r1, r0
   25db8:	ldrsh	r3, [r2, r1]
   25dba:	movs	r1, r0
   25dbc:	ldrh	r1, [r0, #60]	; 0x3c
   25dbe:	movs	r1, r0
   25dc0:	ldrsh	r5, [r3, r0]
   25dc2:	movs	r1, r0
   25dc4:	ldrh	r4, [r4, #56]	; 0x38
   25dc6:	movs	r1, r0
   25dc8:	ldrh	r5, [r6, #56]	; 0x38
   25dca:	movs	r1, r0
   25dcc:	ldrh	r4, [r3, #58]	; 0x3a
   25dce:	movs	r1, r0
   25dd0:	ldrh	r5, [r2, #58]	; 0x3a
   25dd2:	movs	r1, r0
   25dd4:	ldrh	r6, [r1, #58]	; 0x3a
   25dd6:	movs	r1, r0
   25dd8:	ldrh	r7, [r0, #58]	; 0x3a
   25dda:	movs	r1, r0
   25ddc:	ldrsb	r7, [r3, r7]
   25dde:	movs	r1, r0
   25de0:	ldrh	r4, [r5, #52]	; 0x34
   25de2:	movs	r1, r0
   25de4:	cdp	0, 11, cr0, cr12, cr3, {0}
   25de8:	add	r3, pc, #632	; (adr r3, 26064 <btrfs_print_leaf@@Base+0x109c>)
   25dea:	movs	r1, r0
   25dec:	ldrh	r5, [r2, #50]	; 0x32
   25dee:	movs	r1, r0
   25df0:	ldrh	r1, [r5, #50]	; 0x32
   25df2:	movs	r1, r0
   25df4:	ldrh	r5, [r1, #50]	; 0x32
   25df6:	movs	r1, r0
   25df8:	ldrh	r6, [r5, #48]	; 0x30
   25dfa:	movs	r1, r0
   25dfc:	ldrh	r5, [r5, #46]	; 0x2e
   25dfe:	movs	r1, r0
   25e00:	ldrh	r2, [r4, #46]	; 0x2e
   25e02:	movs	r1, r0
   25e04:	ldrh	r2, [r6, #46]	; 0x2e
   25e06:	movs	r1, r0
   25e08:	ldrh	r2, [r6, #46]	; 0x2e
   25e0a:	movs	r1, r0
   25e0c:	ldrh	r1, [r2, #44]	; 0x2c
   25e0e:	movs	r1, r0
   25e10:	ldrh	r1, [r7, #30]
   25e12:	movs	r1, r0
   25e14:	ldrh	r7, [r5, #30]
   25e16:	movs	r1, r0
   25e18:	ldrh	r0, [r7, #42]	; 0x2a
   25e1a:	movs	r1, r0
   25e1c:	ldrh	r5, [r4, #42]	; 0x2a
   25e1e:	movs	r1, r0
   25e20:	ldrh	r4, [r4, #42]	; 0x2a
   25e22:	movs	r1, r0
   25e24:	ldrh	r2, [r3, #42]	; 0x2a
   25e26:	movs	r1, r0
   25e28:	strb	r1, [r7, r0]
   25e2a:	movs	r1, r0
   25e2c:	ldrh	r7, [r6, #42]	; 0x2a
   25e2e:	movs	r1, r0
   25e30:	ldrh	r1, [r7, #40]	; 0x28
   25e32:	movs	r1, r0
   25e34:	ldrh	r6, [r0, #42]	; 0x2a
   25e36:	movs	r1, r0
   25e38:	ldrh	r0, [r2, #4]
   25e3a:	movs	r1, r0
   25e3c:	ldrh	r0, [r1, #4]
   25e3e:	movs	r1, r0
   25e40:	ldrh	r3, [r1, #40]	; 0x28
   25e42:	movs	r1, r0
   25e44:	ldrh	r1, [r4, #40]	; 0x28
   25e46:	movs	r1, r0
   25e48:	ldrh	r6, [r6, #40]	; 0x28
   25e4a:	movs	r1, r0
   25e4c:	ldrh	r2, [r4, #40]	; 0x28
   25e4e:	movs	r1, r0
   25e50:	strh	r1, [r6, r5]
   25e52:	movs	r1, r0
   25e54:	ldrh	r2, [r6, #2]
   25e56:	movs	r1, r0
   25e58:	ldrh	r3, [r2, #40]	; 0x28
   25e5a:	movs	r1, r0
   25e5c:	ldrh	r7, [r1, #40]	; 0x28
   25e5e:	movs	r1, r0
   25e60:	ldrh	r3, [r2, #38]	; 0x26
   25e62:	movs	r1, r0
   25e64:	ldrh	r2, [r2, #38]	; 0x26
   25e66:	movs	r1, r0
   25e68:	ldrh	r0, [r2, #38]	; 0x26
   25e6a:	movs	r1, r0
   25e6c:	str	r3, [sp, #0]
   25e6e:	movs	r2, #16
   25e70:	ldr.w	r3, [pc, #1172]	; 26308 <btrfs_print_leaf@@Base+0x1340>
   25e74:	movs	r1, #1
   25e76:	add	r3, pc
   25e78:	blx	8950 <__sprintf_chk@plt>
   25e7c:	b.n	25ca6 <btrfs_print_leaf@@Base+0xcde>
   25e7e:	ldr.w	r1, [pc, #1164]	; 2630c <btrfs_print_leaf@@Base+0x1344>
   25e82:	add	r1, pc
   25e84:	b.n	25cc0 <btrfs_print_leaf@@Base+0xcf8>
   25e86:	ldr.w	r1, [pc, #1160]	; 26310 <btrfs_print_leaf@@Base+0x1348>
   25e8a:	add	r1, pc
   25e8c:	b.n	25cc0 <btrfs_print_leaf@@Base+0xcf8>
   25e8e:	ldr.w	r1, [pc, #1156]	; 26314 <btrfs_print_leaf@@Base+0x134c>
   25e92:	add	r1, pc
   25e94:	b.n	25cc0 <btrfs_print_leaf@@Base+0xcf8>
   25e96:	mov	r1, r4
   25e98:	mov	r3, r4
   25e9a:	ldr.w	r0, [r1, #29]!
   25e9e:	cmp	r5, #2
   25ea0:	ldr.w	r2, [r3, #21]!
   25ea4:	ldr	r1, [r1, #4]
   25ea6:	ldr	r3, [r3, #4]
   25ea8:	strd	r0, r1, [sp]
   25eac:	bne.n	25edc <btrfs_print_leaf@@Base+0xf14>
   25eae:	ldr.w	r1, [pc, #1128]	; 26318 <btrfs_print_leaf@@Base+0x1350>
   25eb2:	movs	r0, #1
   25eb4:	add	r1, pc
   25eb6:	blx	89ec <__printf_chk@plt+0x4>
   25eba:	mov	r3, r4
   25ebc:	ldr.w	r0, [r4, #45]!
   25ec0:	ldr.w	r2, [r3, #37]!
   25ec4:	ldr	r1, [r4, #4]
   25ec6:	strd	r0, r1, [sp]
   25eca:	movs	r0, #1
   25ecc:	ldr.w	r1, [pc, #1100]	; 2631c <btrfs_print_leaf@@Base+0x1354>
   25ed0:	ldr	r3, [r3, #4]
   25ed2:	add	r1, pc
   25ed4:	blx	89ec <__printf_chk@plt+0x4>
   25ed8:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25edc:	ldr.w	r1, [pc, #1088]	; 26320 <btrfs_print_leaf@@Base+0x1358>
   25ee0:	movs	r0, #1
   25ee2:	add	r1, pc
   25ee4:	blx	89ec <__printf_chk@plt+0x4>
   25ee8:	ldr	r0, [r4, #8]
   25eea:	ldr	r1, [r4, #12]
   25eec:	mov	r3, r4
   25eee:	ldr.w	r2, [r3, #37]!
   25ef2:	strd	r0, r1, [sp, #8]
   25ef6:	mov	r1, r4
   25ef8:	ldr.w	r0, [r1, #45]!
   25efc:	ldr	r1, [r1, #4]
   25efe:	strd	r0, r1, [sp]
   25f02:	movs	r0, #1
   25f04:	ldr.w	r1, [pc, #1052]	; 26324 <btrfs_print_leaf@@Base+0x135c>
   25f08:	ldr	r3, [r3, #4]
   25f0a:	add	r1, pc
   25f0c:	blx	89ec <__printf_chk@plt+0x4>
   25f10:	ldr.w	r1, [pc, #1044]	; 26328 <btrfs_print_leaf@@Base+0x1360>
   25f14:	ldrb	r2, [r4, #16]
   25f16:	add	r3, sp, #940	; 0x3ac
   25f18:	add	r1, pc
   25f1a:	movs	r0, #1
   25f1c:	blx	89ec <__printf_chk@plt+0x4>
   25f20:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25f24:	add	r4, sp, #272	; 0x110
   25f26:	add	r5, sp, #940	; 0x3ac
   25f28:	movs	r3, #24
   25f2a:	mov	r2, r7
   25f2c:	mov	r1, r4
   25f2e:	mov	r0, r9
   25f30:	bl	172c2 <read_extent_buffer@@Base>
   25f34:	mov.w	r2, #256	; 0x100
   25f38:	movs	r1, #0
   25f3a:	mov	r0, r5
   25f3c:	blx	8978 <memset@plt+0x4>
   25f40:	ldrd	r0, r1, [r4, #16]
   25f44:	mov	r2, r5
   25f46:	bl	2438c <btrfs_destroy_delayed_refs@@Base+0x100>
   25f4a:	str	r5, [sp, #8]
   25f4c:	ldrd	r2, r3, [r4, #8]
   25f50:	ldr	r1, [pc, #984]	; (2632c <btrfs_print_leaf@@Base+0x1364>)
   25f52:	strd	r2, r3, [sp]
   25f56:	add	r1, pc
   25f58:	ldrd	r2, r3, [sp, #272]	; 0x110
   25f5c:	b.n	25c40 <btrfs_print_leaf@@Base+0xc78>
   25f5e:	ldr.w	r2, [sl, #17]
   25f62:	ldr	r1, [pc, #972]	; (26330 <btrfs_print_leaf@@Base+0x1368>)
   25f64:	adds	r2, #101	; 0x65
   25f66:	add.w	r3, fp, r2
   25f6a:	add	r1, pc
   25f6c:	ldr.w	r2, [fp, r2]
   25f70:	ldr	r3, [r3, #4]
   25f72:	b.n	25f1a <btrfs_print_leaf@@Base+0xf52>
   25f74:	ldr	r0, [pc, #956]	; (26334 <btrfs_print_leaf@@Base+0x136c>)
   25f76:	add	r0, pc
   25f78:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25f7c:	ldr	r0, [pc, #952]	; (26338 <btrfs_print_leaf@@Base+0x1370>)
   25f7e:	add	r0, pc
   25f80:	b.w	25360 <btrfs_print_leaf@@Base+0x398>
   25f84:	mov	r1, r7
   25f86:	mov	r0, r9
   25f88:	bl	2475c <print_chunk_item@@Base>
   25f8c:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25f90:	ldr.w	r4, [sl, #17]
   25f94:	add	r5, sp, #772	; 0x304
   25f96:	add	r6, sp, #940	; 0x3ac
   25f98:	movs	r3, #16
   25f9a:	add.w	r2, r4, #133	; 0x85
   25f9e:	mov	r1, r5
   25fa0:	mov	r0, r9
   25fa2:	adds	r4, #101	; 0x65
   25fa4:	bl	172c2 <read_extent_buffer@@Base>
   25fa8:	mov	r1, r6
   25faa:	mov	r0, r5
   25fac:	blx	8580 <uuid_unparse@plt>
   25fb0:	add.w	r3, fp, r4
   25fb4:	str	r6, [sp, #24]
   25fb6:	movs	r0, #1
   25fb8:	ldr	r1, [r3, #24]
   25fba:	ldr	r2, [r3, #28]
   25fbc:	strd	r1, r2, [sp, #16]
   25fc0:	ldr	r1, [r3, #16]
   25fc2:	ldr	r2, [r3, #20]
   25fc4:	strd	r1, r2, [sp, #8]
   25fc8:	ldr	r1, [r3, #8]
   25fca:	ldr	r2, [r3, #12]
   25fcc:	strd	r1, r2, [sp]
   25fd0:	ldr	r1, [pc, #872]	; (2633c <btrfs_print_leaf@@Base+0x1374>)
   25fd2:	ldr.w	r2, [fp, r4]
   25fd6:	ldr	r3, [r3, #4]
   25fd8:	add	r1, pc
   25fda:	blx	89ec <__printf_chk@plt+0x4>
   25fde:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   25fe2:	add	r3, sp, #940	; 0x3ac
   25fe4:	mov.w	r2, #256	; 0x100
   25fe8:	movs	r1, #0
   25fea:	ldr.w	r5, [sl, #17]
   25fee:	mov	r0, r3
   25ff0:	blx	8978 <memset@plt+0x4>
   25ff4:	adds	r5, #101	; 0x65
   25ff6:	add	r5, fp
   25ff8:	ldr	r4, [r5, #16]
   25ffa:	and.w	r2, r4, #1
   25ffe:	str	r2, [sp, #216]	; 0xd8
   26000:	movs	r2, #0
   26002:	str	r2, [sp, #220]	; 0xdc
   26004:	ldrd	r1, r2, [sp, #216]	; 0xd8
   26008:	orrs	r2, r1
   2600a:	mov	r3, r0
   2600c:	beq.n	2607e <btrfs_print_leaf@@Base+0x10b6>
   2600e:	ldr	r1, [pc, #816]	; (26340 <btrfs_print_leaf@@Base+0x1378>)
   26010:	add	r1, pc
   26012:	mov	r0, r3
   26014:	blx	87a0 <strcpy@plt>
   26018:	and.w	r3, r4, #2
   2601c:	str	r3, [sp, #224]	; 0xe0
   2601e:	movs	r3, #0
   26020:	str	r3, [sp, #228]	; 0xe4
   26022:	ldrd	r2, r3, [sp, #224]	; 0xe0
   26026:	orrs	r3, r2
   26028:	beq.n	26038 <btrfs_print_leaf@@Base+0x1070>
   2602a:	ldr	r1, [pc, #792]	; (26344 <btrfs_print_leaf@@Base+0x137c>)
   2602c:	add	r0, sp, #940	; 0x3ac
   2602e:	mov.w	r2, #256	; 0x100
   26032:	add	r1, pc
   26034:	blx	8944 <__strcat_chk@plt>
   26038:	and.w	r3, r4, #4
   2603c:	str	r3, [sp, #232]	; 0xe8
   2603e:	movs	r3, #0
   26040:	str	r3, [sp, #236]	; 0xec
   26042:	ldrd	r3, r4, [sp, #232]	; 0xe8
   26046:	orrs	r3, r4
   26048:	beq.n	26058 <btrfs_print_leaf@@Base+0x1090>
   2604a:	ldr	r1, [pc, #764]	; (26348 <btrfs_print_leaf@@Base+0x1380>)
   2604c:	add	r0, sp, #940	; 0x3ac
   2604e:	mov.w	r2, #256	; 0x100
   26052:	add	r1, pc
   26054:	blx	8944 <__strcat_chk@plt>
   26058:	ldr	r2, [r5, #24]
   2605a:	movs	r0, #1
   2605c:	ldr	r3, [r5, #28]
   2605e:	ldr	r1, [pc, #748]	; (2634c <btrfs_print_leaf@@Base+0x1384>)
   26060:	strd	r2, r3, [sp, #16]
   26064:	add	r3, sp, #940	; 0x3ac
   26066:	str	r3, [sp, #8]
   26068:	add	r1, pc
   2606a:	ldr	r2, [r5, #8]
   2606c:	ldr	r3, [r5, #12]
   2606e:	strd	r2, r3, [sp]
   26072:	ldr	r2, [r5, #0]
   26074:	ldr	r3, [r5, #4]
   26076:	blx	89ec <__printf_chk@plt+0x4>
   2607a:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   2607e:	ldr	r1, [pc, #720]	; (26350 <btrfs_print_leaf@@Base+0x1388>)
   26080:	add	r1, pc
   26082:	b.n	26012 <btrfs_print_leaf@@Base+0x104a>
   26084:	ldr.w	r2, [sl, #17]
   26088:	adds	r2, #101	; 0x65
   2608a:	add.w	r3, fp, r2
   2608e:	ldr	r0, [r3, #32]
   26090:	ldr	r1, [r3, #36]	; 0x24
   26092:	strd	r0, r1, [sp, #24]
   26096:	ldr	r0, [r3, #24]
   26098:	ldr	r1, [r3, #28]
   2609a:	strd	r0, r1, [sp, #16]
   2609e:	ldr	r0, [r3, #16]
   260a0:	ldr	r1, [r3, #20]
   260a2:	strd	r0, r1, [sp, #8]
   260a6:	ldr	r1, [r3, #12]
   260a8:	ldr	r0, [r3, #8]
   260aa:	strd	r0, r1, [sp]
   260ae:	ldr	r1, [pc, #676]	; (26354 <btrfs_print_leaf@@Base+0x138c>)
   260b0:	ldr.w	r2, [fp, r2]
   260b4:	ldr	r3, [r3, #4]
   260b6:	add	r1, pc
   260b8:	movs	r0, #1
   260ba:	blx	89ec <__printf_chk@plt+0x4>
   260be:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   260c2:	ldr.w	r2, [sl, #17]
   260c6:	adds	r2, #101	; 0x65
   260c8:	add.w	r3, fp, r2
   260cc:	ldr	r0, [r3, #32]
   260ce:	ldr	r1, [r3, #36]	; 0x24
   260d0:	strd	r0, r1, [sp, #24]
   260d4:	ldr	r0, [r3, #24]
   260d6:	ldr	r1, [r3, #28]
   260d8:	strd	r0, r1, [sp, #16]
   260dc:	ldr	r0, [r3, #16]
   260de:	ldr	r1, [r3, #20]
   260e0:	strd	r0, r1, [sp, #8]
   260e4:	ldr	r1, [r3, #12]
   260e6:	ldr	r0, [r3, #8]
   260e8:	strd	r0, r1, [sp]
   260ec:	ldr	r1, [pc, #616]	; (26358 <btrfs_print_leaf@@Base+0x1390>)
   260ee:	ldr.w	r2, [fp, r2]
   260f2:	ldr	r3, [r3, #4]
   260f4:	add	r1, pc
   260f6:	b.n	260b8 <btrfs_print_leaf@@Base+0x10f0>
   260f8:	ldr.w	r4, [sl, #21]
   260fc:	ldr.w	r5, [sl, #17]
   26100:	lsls	r3, r4, #29
   26102:	add.w	r5, r5, #101	; 0x65
   26106:	bne.n	26132 <btrfs_print_leaf@@Base+0x116a>
   26108:	ldr	r7, [pc, #592]	; (2635c <btrfs_print_leaf@@Base+0x1394>)
   2610a:	add	r6, sp, #272	; 0x110
   2610c:	add	r7, pc
   2610e:	cmp	r4, #0
   26110:	beq.w	25230 <btrfs_print_leaf@@Base+0x268>
   26114:	mov	r2, r5
   26116:	movs	r3, #8
   26118:	mov	r1, r6
   2611a:	mov	r0, r9
   2611c:	bl	172c2 <read_extent_buffer@@Base>
   26120:	ldrd	r2, r3, [sp, #272]	; 0x110
   26124:	mov	r1, r7
   26126:	movs	r0, #1
   26128:	blx	89ec <__printf_chk@plt+0x4>
   2612c:	subs	r4, #8
   2612e:	adds	r5, #8
   26130:	b.n	2610e <btrfs_print_leaf@@Base+0x1146>
   26132:	ldr	r1, [pc, #556]	; (26360 <btrfs_print_leaf@@Base+0x1398>)
   26134:	mov	r2, r4
   26136:	add	r1, pc
   26138:	b.n	25bcc <btrfs_print_leaf@@Base+0xc04>
   2613a:	ldr.w	r3, [sl, #17]
   2613e:	ldr	r1, [pc, #548]	; (26364 <btrfs_print_leaf@@Base+0x139c>)
   26140:	adds	r3, #101	; 0x65
   26142:	ldr	r2, [sp, #84]	; 0x54
   26144:	add	r3, fp
   26146:	add	r1, pc
   26148:	b.n	25f1a <btrfs_print_leaf@@Base+0xf52>
   2614a:	ldr	r1, [pc, #540]	; (26368 <btrfs_print_leaf@@Base+0x13a0>)
   2614c:	movs	r0, #1
   2614e:	add	r1, pc
   26150:	blx	89ec <__printf_chk@plt+0x4>
   26154:	ldr	r1, [sp, #100]	; 0x64
   26156:	movs	r3, #249	; 0xf9
   26158:	mov	r2, r4
   2615a:	str	r3, [sp, #0]
   2615c:	mov	r3, r5
   2615e:	ldr	r0, [r1, #0]
   26160:	bl	2495c <print_objectid@@Base>
   26164:	ldr	r1, [pc, #516]	; (2636c <btrfs_print_leaf@@Base+0x13a4>)
   26166:	ldrd	r2, r3, [sp, #88]	; 0x58
   2616a:	movs	r0, #1
   2616c:	add	r1, pc
   2616e:	blx	89ec <__printf_chk@plt+0x4>
   26172:	orrs.w	r3, r4, r5
   26176:	bne.n	2622a <btrfs_print_leaf@@Base+0x1262>
   26178:	ldr	r0, [pc, #500]	; (26370 <btrfs_print_leaf@@Base+0x13a8>)
   2617a:	add	r0, pc
   2617c:	blx	8804 <puts@plt+0x4>
   26180:	movs	r2, #0
   26182:	mov	r1, r7
   26184:	mov	r0, r9
   26186:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   2618a:	movs	r2, #1
   2618c:	mov	r4, r0
   2618e:	str	r1, [sp, #244]	; 0xf4
   26190:	mov	r0, r9
   26192:	mov	r1, r7
   26194:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   26198:	movs	r2, #2
   2619a:	mov	r6, r0
   2619c:	mov	r5, r1
   2619e:	mov	r0, r9
   261a0:	mov	r1, r7
   261a2:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   261a6:	movs	r2, #3
   261a8:	mov	r8, r0
   261aa:	mov	fp, r1
   261ac:	mov	r0, r9
   261ae:	mov	r1, r7
   261b0:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   261b4:	movs	r2, #4
   261b6:	str	r0, [sp, #96]	; 0x60
   261b8:	mov	r0, r9
   261ba:	str	r1, [sp, #88]	; 0x58
   261bc:	mov	r1, r7
   261be:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   261c2:	ldr	r3, [sp, #96]	; 0x60
   261c4:	mov	r2, r4
   261c6:	strd	r8, fp, [sp, #8]
   261ca:	strd	r6, r5, [sp]
   261ce:	str	r3, [sp, #16]
   261d0:	ldr	r3, [sp, #88]	; 0x58
   261d2:	str	r3, [sp, #20]
   261d4:	ldr	r3, [sp, #244]	; 0xf4
   261d6:	strd	r0, r1, [sp, #24]
   261da:	movs	r0, #1
   261dc:	ldr	r1, [pc, #404]	; (26374 <btrfs_print_leaf@@Base+0x13ac>)
   261de:	add	r1, pc
   261e0:	blx	89ec <__printf_chk@plt+0x4>
   261e4:	ldr	r3, [sp, #84]	; 0x54
   261e6:	cmp	r3, #40	; 0x28
   261e8:	bls.w	25230 <btrfs_print_leaf@@Base+0x268>
   261ec:	ldr	r1, [pc, #392]	; (26378 <btrfs_print_leaf@@Base+0x13b0>)
   261ee:	sub.w	r2, r3, #40	; 0x28
   261f2:	movs	r0, #1
   261f4:	movs	r4, #5
   261f6:	add	r1, pc
   261f8:	blx	89ec <__printf_chk@plt+0x4>
   261fc:	ldr	r2, [sp, #84]	; 0x54
   261fe:	lsls	r3, r4, #3
   26200:	cmp.w	r2, r4, lsl #3
   26204:	bls.w	25230 <btrfs_print_leaf@@Base+0x268>
   26208:	mov	r2, r4
   2620a:	mov	r1, r7
   2620c:	mov	r0, r9
   2620e:	str	r3, [sp, #96]	; 0x60
   26210:	bl	242f4 <btrfs_destroy_delayed_refs@@Base+0x68>
   26214:	mov	r2, r4
   26216:	ldr	r3, [sp, #96]	; 0x60
   26218:	adds	r4, #1
   2621a:	strd	r0, r1, [sp]
   2621e:	movs	r0, #1
   26220:	vmov	r1, s21
   26224:	blx	89ec <__printf_chk@plt+0x4>
   26228:	b.n	261fc <btrfs_print_leaf@@Base+0x1234>
   2622a:	ldr	r1, [pc, #336]	; (2637c <btrfs_print_leaf@@Base+0x13b4>)
   2622c:	mov	r2, r4
   2622e:	mov	r3, r5
   26230:	add	r1, pc
   26232:	b.w	259f2 <btrfs_print_leaf@@Base+0xa2a>
   26236:	ldr	r1, [pc, #328]	; (26380 <btrfs_print_leaf@@Base+0x13b8>)
   26238:	movs	r0, #1
   2623a:	add	r1, pc
   2623c:	blx	89ec <__printf_chk@plt+0x4>
   26240:	ldr	r1, [sp, #100]	; 0x64
   26242:	movs	r3, #248	; 0xf8
   26244:	mov	r2, r4
   26246:	str	r3, [sp, #0]
   26248:	mov	r3, r5
   2624a:	ldr	r0, [r1, #0]
   2624c:	bl	2495c <print_objectid@@Base>
   26250:	ldr	r1, [pc, #304]	; (26384 <btrfs_print_leaf@@Base+0x13bc>)
   26252:	ldrd	r2, r3, [sp, #88]	; 0x58
   26256:	movs	r0, #1
   26258:	add	r1, pc
   2625a:	blx	89ec <__printf_chk@plt+0x4>
   2625e:	mov.w	r3, #4294967295	; 0xffffffff
   26262:	cmp	r5, r3
   26264:	mvn.w	r2, #3
   26268:	it	eq
   2626a:	cmpeq	r4, r2
   2626c:	bne.n	262b6 <btrfs_print_leaf@@Base+0x12ee>
   2626e:	add.w	r4, fp, r7
   26272:	ldr	r1, [pc, #276]	; (26388 <btrfs_print_leaf@@Base+0x13c0>)
   26274:	ldr.w	r2, [fp, r7]
   26278:	movs	r0, #1
   2627a:	ldr	r3, [r4, #4]
   2627c:	add	r1, pc
   2627e:	blx	89ec <__printf_chk@plt+0x4>
   26282:	ldr	r0, [pc, #264]	; (2638c <btrfs_print_leaf@@Base+0x13c4>)
   26284:	add	r0, pc
   26286:	blx	8804 <puts@plt+0x4>
   2628a:	add.w	r0, r4, #8
   2628e:	bl	244c4 <btrfs_destroy_delayed_refs@@Base+0x238>
   26292:	ldr	r0, [pc, #252]	; (26390 <btrfs_print_leaf@@Base+0x13c8>)
   26294:	add	r0, pc
   26296:	blx	8804 <puts@plt+0x4>
   2629a:	add.w	r0, r4, #144	; 0x90
   2629e:	bl	244c4 <btrfs_destroy_delayed_refs@@Base+0x238>
   262a2:	ldr	r0, [pc, #240]	; (26394 <btrfs_print_leaf@@Base+0x13cc>)
   262a4:	add	r0, pc
   262a6:	blx	8804 <puts@plt+0x4>
   262aa:	add.w	r0, r4, #280	; 0x118
   262ae:	bl	244c4 <btrfs_destroy_delayed_refs@@Base+0x238>
   262b2:	b.w	25230 <btrfs_print_leaf@@Base+0x268>
   262b6:	ldr	r1, [pc, #224]	; (26398 <btrfs_print_leaf@@Base+0x13d0>)
   262b8:	mov	r2, r4
   262ba:	mov	r3, r5
   262bc:	add	r1, pc
   262be:	b.w	259f2 <btrfs_print_leaf@@Base+0xa2a>
   262c2:	add	r2, sp, #940	; 0x3ac
   262c4:	addw	r0, sp, #579	; 0x243
   262c8:	str	r2, [sp, #84]	; 0x54
   262ca:	mov	r1, r2
   262cc:	blx	8580 <uuid_unparse@plt>
   262d0:	ldr	r1, [pc, #200]	; (2639c <btrfs_print_leaf@@Base+0x13d4>)
   262d2:	ldr	r2, [sp, #84]	; 0x54
   262d4:	movs	r0, #1
   262d6:	add	r1, pc
   262d8:	blx	89ec <__printf_chk@plt+0x4>
   262dc:	b.n	25b04 <btrfs_print_leaf@@Base+0xb3c>
   262de:	add	r2, sp, #940	; 0x3ac
   262e0:	addw	r0, sp, #563	; 0x233
   262e4:	str	r2, [sp, #84]	; 0x54
   262e6:	mov	r1, r2
   262e8:	blx	8580 <uuid_unparse@plt>
   262ec:	ldr	r1, [pc, #176]	; (263a0 <btrfs_print_leaf@@Base+0x13d8>)
   262ee:	ldr	r2, [sp, #84]	; 0x54
   262f0:	movs	r0, #1
   262f2:	add	r1, pc
   262f4:	blx	89ec <__printf_chk@plt+0x4>
   262f8:	b.w	25aee <btrfs_print_leaf@@Base+0xb26>
   262fc:	addw	sp, sp, #1204	; 0x4b4
   26300:	vpop	{d8-d10}
   26304:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26308:	strh	r0, [r3, #34]	; 0x22
   2630a:	movs	r1, r0
   2630c:	strh	r7, [r3, #52]	; 0x34
   2630e:	movs	r1, r0
   26310:	strh	r6, [r1, #52]	; 0x34
   26312:	movs	r1, r0
   26314:	strh	r7, [r2, #52]	; 0x34
   26316:	movs	r1, r0
   26318:	ldrh	r4, [r1, #28]
   2631a:	movs	r1, r0
   2631c:	ldrh	r6, [r2, #28]
   2631e:	movs	r1, r0
   26320:	ldrh	r3, [r5, #28]
   26322:	movs	r1, r0
   26324:	ldrh	r1, [r5, #28]
   26326:	movs	r1, r0
   26328:	ldrh	r7, [r0, #30]
   2632a:	movs	r1, r0
   2632c:	ldrh	r1, [r5, #28]
   2632e:	movs	r1, r0
   26330:	ldrh	r3, [r1, #30]
   26332:	movs	r1, r0
   26334:	ldrh	r3, [r5, #30]
   26336:	movs	r1, r0
   26338:	ldrh	r7, [r6, #30]
   2633a:	movs	r1, r0
   2633c:	ldrh	r0, [r7, #34]	; 0x22
   2633e:	movs	r1, r0
   26340:	str	r2, [sp, #364]	; 0x16c
   26342:	movs	r1, r0
   26344:	ldrh	r1, [r1, #36]	; 0x24
   26346:	movs	r1, r0
   26348:	ldrh	r3, [r6, #34]	; 0x22
   2634a:	movs	r1, r0
   2634c:	ldrh	r3, [r5, #34]	; 0x22
   2634e:	movs	r1, r0
   26350:	ldrh	r7, [r6, #32]
   26352:	movs	r1, r0
   26354:	ldrh	r0, [r2, #34]	; 0x22
   26356:	movs	r1, r0
   26358:	ldrh	r5, [r7, #34]	; 0x22
   2635a:	movs	r1, r0
   2635c:	ldrh	r5, [r0, #38]	; 0x26
   2635e:	movs	r1, r0
   26360:	ldrsh	r2, [r0, r2]
   26362:	movs	r1, r0
   26364:	ldrh	r5, [r3, #36]	; 0x24
   26366:	movs	r1, r0
   26368:	ldrh	r7, [r4, #36]	; 0x24
   2636a:	movs	r1, r0
   2636c:	strh	r4, [r7, #8]
   2636e:	movs	r1, r0
   26370:	ldrh	r7, [r2, #36]	; 0x24
   26372:	movs	r1, r0
   26374:	ldrh	r2, [r0, #34]	; 0x22
   26376:	movs	r1, r0
   26378:	ldrh	r1, [r0, #36]	; 0x24
   2637a:	movs	r1, r0
   2637c:	ldrh	r6, [r1, #36]	; 0x24
   2637e:	movs	r1, r0
   26380:	ldrh	r5, [r5, #36]	; 0x24
   26382:	movs	r1, r0
   26384:	strh	r0, [r2, #2]
   26386:	movs	r1, r0
   26388:	ldrh	r6, [r0, #36]	; 0x24
   2638a:	movs	r1, r0
   2638c:	ldrh	r3, [r3, #36]	; 0x24
   2638e:	movs	r1, r0
   26390:	ldrh	r2, [r2, #36]	; 0x24
   26392:	movs	r1, r0
   26394:	ldrh	r5, [r1, #36]	; 0x24
   26396:	movs	r1, r0
   26398:	ldrh	r6, [r7, #34]	; 0x22
   2639a:	movs	r1, r0
   2639c:	ldrh	r4, [r1, #36]	; 0x24
   2639e:	movs	r1, r0
   263a0:	ldrh	r4, [r0, #36]	; 0x24
   263a2:	movs	r1, r0

000263a4 <btrfs_print_tree@@Base>:
   263a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   263a8:	cmp	r2, #1
   263aa:	vpush	{d8}
   263ae:	mov	r4, r0
   263b0:	ldr	r3, [pc, #688]	; (26664 <btrfs_print_tree@@Base+0x2c0>)
   263b2:	it	cs
   263b4:	movcs	r2, #1
   263b6:	mov	r9, r2
   263b8:	add	r3, pc
   263ba:	sub	sp, #148	; 0x94
   263bc:	str	r1, [sp, #44]	; 0x2c
   263be:	ldr	r1, [pc, #680]	; (26668 <btrfs_print_tree@@Base+0x2c4>)
   263c0:	str	r3, [sp, #32]
   263c2:	ldr	r3, [pc, #680]	; (2666c <btrfs_print_tree@@Base+0x2c8>)
   263c4:	add	r1, pc
   263c6:	ldr	r3, [r1, r3]
   263c8:	ldr	r3, [r3, #0]
   263ca:	str	r3, [sp, #140]	; 0x8c
   263cc:	mov.w	r3, #0
   263d0:	ldrb.w	r3, [r0, #196]	; 0xc4
   263d4:	cbnz	r3, 263f0 <btrfs_print_tree@@Base+0x4c>
   263d6:	bl	24fc8 <btrfs_print_leaf@@Base>
   263da:	ldr	r2, [pc, #660]	; (26670 <btrfs_print_tree@@Base+0x2cc>)
   263dc:	ldr	r3, [pc, #652]	; (2666c <btrfs_print_tree@@Base+0x2c8>)
   263de:	add	r2, pc
   263e0:	ldr	r3, [r2, r3]
   263e2:	ldr	r2, [r3, #0]
   263e4:	ldr	r3, [sp, #140]	; 0x8c
   263e6:	eors	r2, r3
   263e8:	beq.w	2665a <btrfs_print_tree@@Base+0x2b6>
   263ec:	blx	86b8 <__stack_chk_fail@plt>
   263f0:	ldr	r3, [r0, #92]	; 0x5c
   263f2:	str	r3, [sp, #36]	; 0x24
   263f4:	ldr.w	r6, [r0, #192]	; 0xc0
   263f8:	bl	24720 <btrfs_destroy_delayed_refs@@Base+0x494>
   263fc:	cmp	r0, r6
   263fe:	mov	r2, r0
   26400:	bcs.n	2640c <btrfs_print_tree@@Base+0x68>
   26402:	ldr	r0, [pc, #624]	; (26674 <btrfs_print_tree@@Base+0x2d0>)
   26404:	mov	r1, r6
   26406:	add	r0, pc
   26408:	bl	173a8 <__btrfs_warning@@Base>
   2640c:	mov	r0, r4
   2640e:	movs	r5, #0
   26410:	bl	24720 <btrfs_destroy_delayed_refs@@Base+0x494>
   26414:	ldr.w	r2, [r4, #176]	; 0xb0
   26418:	ldr.w	r3, [r4, #180]	; 0xb4
   2641c:	add.w	r7, r4, #197	; 0xc5
   26420:	ldr	r1, [pc, #596]	; (26678 <btrfs_print_tree@@Base+0x2d4>)
   26422:	add.w	fp, sp, #52	; 0x34
   26426:	mov	r8, r7
   26428:	strd	r2, r3, [sp, #16]
   2642c:	add	r1, pc
   2642e:	subs	r0, r0, r6
   26430:	strd	r6, r0, [sp, #4]
   26434:	ldrb.w	r3, [r4, #196]	; 0xc4
   26438:	movs	r0, #1
   2643a:	str	r3, [sp, #0]
   2643c:	ldrd	r2, r3, [r4, #40]	; 0x28
   26440:	blx	89ec <__printf_chk@plt+0x4>
   26444:	ldr	r2, [sp, #32]
   26446:	ldr	r3, [pc, #564]	; (2667c <btrfs_print_tree@@Base+0x2d8>)
   26448:	ldr	r3, [r2, r3]
   2644a:	str	r5, [sp, #0]
   2644c:	str	r3, [sp, #28]
   2644e:	ldr	r1, [sp, #28]
   26450:	ldr.w	r2, [r4, #184]	; 0xb8
   26454:	ldr.w	r3, [r4, #188]	; 0xbc
   26458:	ldr	r0, [r1, #0]
   2645a:	bl	2495c <print_objectid@@Base>
   2645e:	movs	r0, #10
   26460:	blx	8988 <putchar@plt+0x4>
   26464:	mov	r0, r4
   26466:	bl	245d0 <btrfs_destroy_delayed_refs@@Base+0x344>
   2646a:	ldr	r3, [sp, #28]
   2646c:	ldr	r0, [r3, #0]
   2646e:	blx	85b0 <fflush@plt>
   26472:	mov	r0, r4
   26474:	bl	24720 <btrfs_destroy_delayed_refs@@Base+0x494>
   26478:	ldr	r3, [pc, #516]	; (26680 <btrfs_print_tree@@Base+0x2dc>)
   2647a:	add	r3, pc
   2647c:	vmov	s17, r3
   26480:	str	r0, [sp, #40]	; 0x28
   26482:	cmp	r5, r6
   26484:	beq.n	2648c <btrfs_print_tree@@Base+0xe8>
   26486:	ldr	r3, [sp, #40]	; 0x28
   26488:	cmp	r5, r3
   2648a:	bne.n	26524 <btrfs_print_tree@@Base+0x180>
   2648c:	ldr	r3, [sp, #44]	; 0x2c
   2648e:	cmp	r3, #0
   26490:	beq.n	263da <btrfs_print_tree@@Base+0x36>
   26492:	ldr	r3, [sp, #36]	; 0x24
   26494:	cmp	r3, #0
   26496:	beq.n	263da <btrfs_print_tree@@Base+0x36>
   26498:	ldr.w	r8, [r4, #92]	; 0x5c
   2649c:	ldrb.w	r6, [r4, #196]	; 0xc4
   264a0:	cmp.w	r9, #0
   264a4:	bne.w	265ae <btrfs_print_tree@@Base+0x20a>
   264a8:	ldr.w	sl, [pc, #472]	; 26684 <btrfs_print_tree@@Base+0x2e0>
   264ac:	ldr.w	fp, [pc, #472]	; 26688 <btrfs_print_tree@@Base+0x2e4>
   264b0:	ldr.w	r3, [r4, #192]	; 0xc0
   264b4:	add	sl, pc
   264b6:	add	fp, pc
   264b8:	str	r3, [sp, #28]
   264ba:	ldr	r3, [sp, #28]
   264bc:	cmp	r3, r9
   264be:	ble.n	263da <btrfs_print_tree@@Base+0x36>
   264c0:	mov	r0, r7
   264c2:	mov	r1, r7
   264c4:	ldr.w	r5, [r0, #25]!
   264c8:	ldr.w	r2, [r1, #17]!
   264cc:	ldr	r0, [r0, #4]
   264ce:	ldr	r3, [r1, #4]
   264d0:	str	r1, [sp, #36]	; 0x24
   264d2:	strd	r5, r0, [sp]
   264d6:	mov	r0, r8
   264d8:	bl	1d62c <read_tree_block@@Base>
   264dc:	ldr	r1, [sp, #36]	; 0x24
   264de:	mov	r5, r0
   264e0:	cmp	r0, #0
   264e2:	beq.n	26578 <btrfs_print_tree@@Base+0x1d4>
   264e4:	cmn.w	r0, #4096	; 0x1000
   264e8:	bhi.n	26578 <btrfs_print_tree@@Base+0x1d4>
   264ea:	ldr	r3, [r0, #84]	; 0x54
   264ec:	lsls	r3, r3, #29
   264ee:	bpl.n	26578 <btrfs_print_tree@@Base+0x1d4>
   264f0:	ldrb.w	r3, [r0, #196]	; 0xc4
   264f4:	subs	r2, r6, #1
   264f6:	cmp	r3, r2
   264f8:	beq.n	265a4 <btrfs_print_tree@@Base+0x200>
   264fa:	strd	r3, r2, [sp, #16]
   264fe:	ldr.w	r2, [r0, #144]	; 0x90
   26502:	ldr.w	r3, [r0, #148]	; 0x94
   26506:	mov	r0, fp
   26508:	strd	r9, r6, [sp]
   2650c:	strd	r2, r3, [sp, #8]
   26510:	ldr.w	r2, [r4, #144]	; 0x90
   26514:	ldr.w	r3, [r4, #148]	; 0x94
   26518:	bl	173a8 <__btrfs_warning@@Base>
   2651c:	mov	r0, r5
   2651e:	bl	16bc8 <free_extent_buffer@@Base>
   26522:	b.n	2659c <btrfs_print_tree@@Base+0x1f8>
   26524:	mov	r3, r8
   26526:	add.w	r2, r5, r5, lsl #5
   2652a:	ldr.w	sl, [r3, #17]!
   2652e:	adds	r2, #101	; 0x65
   26530:	mov	r1, fp
   26532:	mov	r0, r4
   26534:	adds	r5, #1
   26536:	ldr	r3, [r3, #4]
   26538:	vmov	s16, r3
   2653c:	movs	r3, #17
   2653e:	bl	172c2 <read_extent_buffer@@Base>
   26542:	movs	r0, #9
   26544:	blx	8988 <putchar@plt+0x4>
   26548:	mov	r0, fp
   2654a:	bl	24bcc <btrfs_print_key@@Base>
   2654e:	mov	r3, r8
   26550:	ldr.w	r2, [r3, #25]!
   26554:	movs	r0, #1
   26556:	vmov	r1, s17
   2655a:	add.w	r8, r8, #33	; 0x21
   2655e:	ldr	r3, [r3, #4]
   26560:	strd	r2, r3, [sp]
   26564:	mov	r2, sl
   26566:	vmov	r3, s16
   2656a:	blx	89ec <__printf_chk@plt+0x4>
   2656e:	ldr	r3, [sp, #28]
   26570:	ldr	r0, [r3, #0]
   26572:	blx	85b0 <fflush@plt>
   26576:	b.n	26482 <btrfs_print_tree@@Base+0xde>
   26578:	ldr	r2, [sp, #32]
   2657a:	ldr	r3, [pc, #272]	; (2668c <btrfs_print_tree@@Base+0x2e8>)
   2657c:	ldr.w	r0, [r4, #184]	; 0xb8
   26580:	ldr	r3, [r2, r3]
   26582:	ldr.w	r2, [r4, #188]	; 0xbc
   26586:	strd	r0, r2, [sp, #8]
   2658a:	ldr	r0, [r1, #0]
   2658c:	ldr	r2, [r1, #4]
   2658e:	movs	r1, #1
   26590:	strd	r0, r2, [sp]
   26594:	mov	r2, sl
   26596:	ldr	r0, [r3, #0]
   26598:	blx	8a14 <__fprintf_chk@plt+0x4>
   2659c:	add.w	r9, r9, #1
   265a0:	adds	r7, #33	; 0x21
   265a2:	b.n	264ba <btrfs_print_tree@@Base+0x116>
   265a4:	movs	r2, #0
   265a6:	movs	r1, #1
   265a8:	bl	263a4 <btrfs_print_tree@@Base>
   265ac:	b.n	2651c <btrfs_print_tree@@Base+0x178>
   265ae:	cmp	r6, #0
   265b0:	beq.w	263da <btrfs_print_tree@@Base+0x36>
   265b4:	add	r5, sp, #72	; 0x48
   265b6:	subs	r7, r6, #1
   265b8:	add.w	sl, r5, r6, lsl #2
   265bc:	mov.w	fp, #0
   265c0:	mov	r0, r5
   265c2:	bl	17df0 <btrfs_init_path@@Base>
   265c6:	ldr	r3, [r4, #80]	; 0x50
   265c8:	mov	r9, sl
   265ca:	adds	r3, #1
   265cc:	str	r3, [r4, #80]	; 0x50
   265ce:	add	r3, sp, #144	; 0x90
   265d0:	add.w	r3, r3, r6, lsl #2
   265d4:	str.w	r4, [r3, #-72]
   265d8:	mov	r3, r5
   265da:	movs	r4, #0
   265dc:	strb.w	r7, [sp, #137]	; 0x89
   265e0:	str.w	fp, [r3, #32]
   265e4:	ldr.w	r0, [r3], #4
   265e8:	cbz	r0, 265f2 <btrfs_print_tree@@Base+0x24e>
   265ea:	str	r3, [sp, #28]
   265ec:	bl	16bc8 <free_extent_buffer@@Base>
   265f0:	ldr	r3, [sp, #28]
   265f2:	adds	r4, #1
   265f4:	cmp	r4, r6
   265f6:	blt.n	265e0 <btrfs_print_tree@@Base+0x23c>
   265f8:	mov	r4, sl
   265fa:	mov	r3, r6
   265fc:	ldrb.w	r2, [sp, #137]	; 0x89
   26600:	cmp	r3, r2
   26602:	bgt.n	2662a <btrfs_print_tree@@Base+0x286>
   26604:	ldr.w	r0, [r9, #-4]
   26608:	movs	r2, #1
   2660a:	movs	r1, #0
   2660c:	bl	263a4 <btrfs_print_tree@@Base>
   26610:	mov	r1, r5
   26612:	mov	r0, r8
   26614:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   26618:	cmp	r0, #0
   2661a:	blt.n	26640 <btrfs_print_tree@@Base+0x29c>
   2661c:	beq.n	26604 <btrfs_print_tree@@Base+0x260>
   2661e:	subs	r7, #1
   26620:	sub.w	r9, r9, #4
   26624:	adds	r3, r7, #1
   26626:	bne.n	265d8 <btrfs_print_tree@@Base+0x234>
   26628:	b.n	26640 <btrfs_print_tree@@Base+0x29c>
   2662a:	ldr	r1, [r4, #0]
   2662c:	movs	r2, #0
   2662e:	str.w	fp, [r4, #32]
   26632:	mov	r0, r8
   26634:	str	r3, [sp, #28]
   26636:	bl	18bb6 <read_node_slot@@Base>
   2663a:	subs	r4, #4
   2663c:	ldr	r3, [sp, #28]
   2663e:	cbnz	r0, 26648 <btrfs_print_tree@@Base+0x2a4>
   26640:	mov	r0, r5
   26642:	bl	17e00 <btrfs_release_path@@Base>
   26646:	b.n	263da <btrfs_print_tree@@Base+0x36>
   26648:	cmn.w	r0, #4096	; 0x1000
   2664c:	bhi.n	26640 <btrfs_print_tree@@Base+0x29c>
   2664e:	ldr	r2, [r0, #84]	; 0x54
   26650:	lsls	r2, r2, #29
   26652:	bpl.n	26640 <btrfs_print_tree@@Base+0x29c>
   26654:	subs	r3, #1
   26656:	str	r0, [r4, #0]
   26658:	b.n	265fc <btrfs_print_tree@@Base+0x258>
   2665a:	add	sp, #148	; 0x94
   2665c:	vpop	{d8}
   26660:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26664:	ldrd	r0, r0, [r0, #12]
   26668:	strd	r0, r0, [r4, #12]
   2666c:	lsls	r4, r4, #8
   2666e:	movs	r0, r0
   26670:			; <UNDEFINED> instruction: 0xe9aa0003
   26674:	ldrh	r2, [r0, #28]
   26676:	movs	r1, r0
   26678:	ldrh	r6, [r2, #28]
   2667a:	movs	r1, r0
   2667c:	lsls	r0, r3, #9
   2667e:	movs	r0, r0
   26680:	ldrh	r3, [r0, #28]
   26682:	movs	r1, r0
   26684:	ldrh	r7, [r3, #26]
   26686:	movs	r1, r0
   26688:	ldrh	r7, [r7, #26]
   2668a:	movs	r1, r0
   2668c:	lsls	r4, r6, #8
   2668e:	movs	r0, r0
   26690:	ldr	r3, [r0, #0]
   26692:	cbz	r3, 2669a <btrfs_print_tree@@Base+0x2f6>
   26694:	movs	r3, #0
   26696:	strd	r3, r3, [r0]
   2669a:	bx	lr
   2669c:	push	{r4, r5, r6, lr}
   2669e:	lsrs	r4, r2, #5
   266a0:	and.w	r6, r2, #31
   266a4:	bic.w	r2, r2, #31
   266a8:	ldr.w	r5, [r0, r4, lsl #2]
   266ac:	mov.w	r4, #4294967295	; 0xffffffff
   266b0:	lsls	r4, r6
   266b2:	eors	r5, r3
   266b4:	ands	r4, r5
   266b6:	cbz	r4, 266ec <btrfs_print_tree@@Base+0x348>
   266b8:	uxth	r3, r4
   266ba:	cbnz	r3, 266fc <btrfs_print_tree@@Base+0x358>
   266bc:	lsrs	r4, r4, #16
   266be:	movs	r3, #16
   266c0:	tst.w	r4, #255	; 0xff
   266c4:	itt	eq
   266c6:	lsreq	r4, r4, #8
   266c8:	addeq	r3, #8
   266ca:	lsls	r6, r4, #28
   266cc:	itt	eq
   266ce:	lsreq	r4, r4, #4
   266d0:	addeq	r3, #4
   266d2:	lsls	r5, r4, #30
   266d4:	itt	eq
   266d6:	lsreq	r4, r4, #2
   266d8:	addeq	r3, #2
   266da:	lsls	r0, r4, #31
   266dc:	it	pl
   266de:	addpl	r3, #1
   266e0:	add	r3, r2
   266e2:	cmp	r1, r3
   266e4:	it	cs
   266e6:	movcs	r1, r3
   266e8:	mov	r0, r1
   266ea:	pop	{r4, r5, r6, pc}
   266ec:	adds	r2, #32
   266ee:	cmp	r2, r1
   266f0:	bcs.n	266e8 <btrfs_print_tree@@Base+0x344>
   266f2:	lsrs	r4, r2, #5
   266f4:	ldr.w	r4, [r0, r4, lsl #2]
   266f8:	eors	r4, r3
   266fa:	b.n	266b6 <btrfs_print_tree@@Base+0x312>
   266fc:	movs	r3, #0
   266fe:	b.n	266c0 <btrfs_print_tree@@Base+0x31c>
   26700:	ldr.w	ip, [pc, #104]	; 2676c <btrfs_print_tree@@Base+0x3c8>
   26704:	push	{r4, r5, lr}
   26706:	add	ip, pc
   26708:	ldr	r5, [pc, #100]	; (26770 <btrfs_print_tree@@Base+0x3cc>)
   2670a:	sub	sp, #92	; 0x5c
   2670c:	ldr	r4, [pc, #100]	; (26774 <btrfs_print_tree@@Base+0x3d0>)
   2670e:	ldr.w	r5, [ip, r5]
   26712:	add	r4, pc
   26714:	ldr	r5, [r5, #0]
   26716:	str	r5, [sp, #84]	; 0x54
   26718:	mov.w	r5, #0
   2671c:	cbz	r3, 26752 <btrfs_print_tree@@Base+0x3ae>
   2671e:	ldr	r5, [pc, #88]	; (26778 <btrfs_print_tree@@Base+0x3d4>)
   26720:	ldr	r4, [r4, r5]
   26722:	strd	r2, r1, [sp]
   26726:	movs	r1, #1
   26728:	strd	r0, r3, [sp, #8]
   2672c:	ldr	r2, [pc, #76]	; (2677c <btrfs_print_tree@@Base+0x3d8>)
   2672e:	ldr	r3, [pc, #80]	; (26780 <btrfs_print_tree@@Base+0x3dc>)
   26730:	ldr	r0, [r4, #0]
   26732:	add	r4, sp, #20
   26734:	add	r3, pc
   26736:	add	r2, pc
   26738:	blx	8a14 <__fprintf_chk@plt+0x4>
   2673c:	movs	r1, #16
   2673e:	mov	r0, r4
   26740:	blx	886c <backtrace@plt>
   26744:	movs	r2, #2
   26746:	mov	r1, r0
   26748:	mov	r0, r4
   2674a:	blx	8b7c <backtrace_symbols_fd@plt>
   2674e:	blx	8b34 <abort@plt>
   26752:	ldr	r2, [pc, #48]	; (26784 <btrfs_print_tree@@Base+0x3e0>)
   26754:	ldr	r3, [pc, #24]	; (26770 <btrfs_print_tree@@Base+0x3cc>)
   26756:	add	r2, pc
   26758:	ldr	r3, [r2, r3]
   2675a:	ldr	r2, [r3, #0]
   2675c:	ldr	r3, [sp, #84]	; 0x54
   2675e:	eors	r2, r3
   26760:	beq.n	26766 <btrfs_print_tree@@Base+0x3c2>
   26762:	blx	86b8 <__stack_chk_fail@plt>
   26766:	add	sp, #92	; 0x5c
   26768:	pop	{r4, r5, pc}
   2676a:	nop
   2676c:	b.n	26474 <btrfs_print_tree@@Base+0xd0>
   2676e:	movs	r3, r0
   26770:	lsls	r4, r4, #8
   26772:	movs	r0, r0
   26774:	b.n	26464 <btrfs_print_tree@@Base+0xc0>
   26776:	movs	r3, r0
   26778:	lsls	r4, r6, #8
   2677a:	movs	r0, r0
   2677c:	adds	r0, #108	; 0x6c
   2677e:	movs	r1, r0
   26780:	ldrh	r5, [r1, #30]
   26782:	movs	r1, r0
   26784:	b.n	263ec <btrfs_print_tree@@Base+0x48>
   26786:	movs	r3, r0
   26788:	push	{r3, r4, r5, lr}
   2678a:	mov	r4, r0
   2678c:	ldrd	r5, r3, [r0, #32]
   26790:	movs	r2, #83	; 0x53
   26792:	ldr	r1, [pc, #56]	; (267cc <btrfs_print_tree@@Base+0x428>)
   26794:	cmp	r5, r3
   26796:	ldr	r0, [pc, #56]	; (267d0 <btrfs_print_tree@@Base+0x42c>)
   26798:	add	r1, pc
   2679a:	ite	lt
   2679c:	movlt	r3, #0
   2679e:	movge	r3, #1
   267a0:	add	r0, pc
   267a2:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   267a6:	adds	r3, r5, #1
   267a8:	str	r3, [r4, #32]
   267aa:	ldr	r3, [r4, #12]
   267ac:	ldr	r2, [r4, #8]
   267ae:	ldr.w	r1, [r3, #464]	; 0x1d0
   267b2:	ldr.w	r1, [r1, #388]	; 0x184
   267b6:	mla	r5, r1, r5, r2
   267ba:	strd	r5, r5, [r4]
   267be:	ldr.w	r3, [r3, #464]	; 0x1d0
   267c2:	ldr.w	r3, [r3, #388]	; 0x184
   267c6:	str	r3, [r4, #16]
   267c8:	pop	{r3, r4, r5, pc}
   267ca:	nop
   267cc:	str	r0, [sp, #676]	; 0x2a4
   267ce:	movs	r1, r0
   267d0:	ldrh	r4, [r6, #26]
   267d2:	movs	r1, r0
   267d4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   267d6:	mov	r4, r0
   267d8:	ldr	r2, [pc, #144]	; (2686c <btrfs_print_tree@@Base+0x4c8>)
   267da:	ldr	r3, [pc, #148]	; (26870 <btrfs_print_tree@@Base+0x4cc>)
   267dc:	add	r2, pc
   267de:	ldr	r6, [pc, #148]	; (26874 <btrfs_print_tree@@Base+0x4d0>)
   267e0:	ldr	r3, [r2, r3]
   267e2:	add	r6, pc
   267e4:	ldr	r3, [r3, #0]
   267e6:	str	r3, [sp, #4]
   267e8:	mov.w	r3, #0
   267ec:	mov.w	r3, #4294967295	; 0xffffffff
   267f0:	str	r3, [sp, #0]
   267f2:	ldrb.w	r3, [r0, #40]	; 0x28
   267f6:	ands.w	r5, r3, #1
   267fa:	bne.n	26804 <btrfs_print_tree@@Base+0x460>
   267fc:	bl	26788 <btrfs_print_tree@@Base+0x3e4>
   26800:	movs	r0, #0
   26802:	b.n	2684e <btrfs_print_tree@@Base+0x4aa>
   26804:	cbnz	r1, 26862 <btrfs_print_tree@@Base+0x4be>
   26806:	ldr	r5, [r0, #36]	; 0x24
   26808:	lsls	r5, r5, #2
   2680a:	ldr	r3, [r4, #8]
   2680c:	mov	r0, r4
   2680e:	ldr.w	r7, [r3, r1, lsl #2]
   26812:	bl	26788 <btrfs_print_tree@@Base+0x3e4>
   26816:	ldr	r3, [r4, #12]
   26818:	mov.w	r0, #4294967295	; 0xffffffff
   2681c:	ldr	r1, [r4, #4]
   2681e:	ldr.w	r3, [r3, #464]	; 0x1d0
   26822:	add	r1, r5
   26824:	ldr.w	r2, [r3, #388]	; 0x184
   26828:	subs	r2, r2, r5
   2682a:	bl	173a2 <crc32c_le@@Base>
   2682e:	mvns	r0, r0
   26830:	cmp	r0, r7
   26832:	str	r0, [sp, #0]
   26834:	beq.n	26800 <btrfs_print_tree@@Base+0x45c>
   26836:	ldr	r3, [pc, #64]	; (26878 <btrfs_print_tree@@Base+0x4d4>)
   26838:	ldr	r0, [pc, #64]	; (2687c <btrfs_print_tree@@Base+0x4d8>)
   2683a:	ldr	r3, [r6, r3]
   2683c:	add	r0, pc
   2683e:	ldr	r1, [r3, #0]
   26840:	blx	8b1c <fputs@plt+0x4>
   26844:	mov	r0, r4
   26846:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   2684a:	mvn.w	r0, #4
   2684e:	ldr	r2, [pc, #48]	; (26880 <btrfs_print_tree@@Base+0x4dc>)
   26850:	ldr	r3, [pc, #28]	; (26870 <btrfs_print_tree@@Base+0x4cc>)
   26852:	add	r2, pc
   26854:	ldr	r3, [r2, r3]
   26856:	ldr	r2, [r3, #0]
   26858:	ldr	r3, [sp, #4]
   2685a:	eors	r2, r3
   2685c:	beq.n	26866 <btrfs_print_tree@@Base+0x4c2>
   2685e:	blx	86b8 <__stack_chk_fail@plt>
   26862:	movs	r5, #0
   26864:	b.n	2680a <btrfs_print_tree@@Base+0x466>
   26866:	add	sp, #12
   26868:	pop	{r4, r5, r6, r7, pc}
   2686a:	nop
   2686c:	b.n	263c8 <btrfs_print_tree@@Base+0x24>
   2686e:	movs	r3, r0
   26870:	lsls	r4, r4, #8
   26872:	movs	r0, r0
   26874:	b.n	263c4 <btrfs_print_tree@@Base+0x20>
   26876:	movs	r3, r0
   26878:	lsls	r4, r6, #8
   2687a:	movs	r0, r0
   2687c:	ldrh	r3, [r7, #22]
   2687e:	movs	r1, r0
   26880:	b.n	262f0 <btrfs_print_leaf@@Base+0x1328>
   26882:	movs	r3, r0
   26884:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   26888:	mov	sl, r0
   2688a:	ldr	r4, [r0, #0]
   2688c:	mov	r8, r2
   2688e:	mov	r9, r3
   26890:	movs	r5, #0
   26892:	cbz	r4, 268d0 <btrfs_print_tree@@Base+0x52c>
   26894:	ldrd	r2, r3, [r4, #16]
   26898:	cmp	r9, r3
   2689a:	it	eq
   2689c:	cmpeq	r8, r2
   2689e:	bcs.n	268a8 <btrfs_print_tree@@Base+0x504>
   268a0:	ldr	r3, [r4, #8]
   268a2:	mov	r5, r4
   268a4:	mov	r4, r3
   268a6:	b.n	26892 <btrfs_print_tree@@Base+0x4ee>
   268a8:	cmp	r3, r9
   268aa:	it	eq
   268ac:	cmpeq	r2, r8
   268ae:	bcs.n	26962 <btrfs_print_tree@@Base+0x5be>
   268b0:	ldr	r3, [r4, #4]
   268b2:	b.n	268a2 <btrfs_print_tree@@Base+0x4fe>
   268b4:	ldrd	r2, r1, [r5, #24]
   268b8:	ldrd	r3, r0, [r5, #16]
   268bc:	adds	r3, r3, r2
   268be:	str	r3, [sp, #8]
   268c0:	adc.w	r3, r0, r1
   268c4:	str	r3, [sp, #12]
   268c6:	ldrd	r2, r3, [sp, #8]
   268ca:	b.n	26956 <btrfs_print_tree@@Base+0x5b2>
   268cc:	mov	r4, r0
   268ce:	b.n	2698a <btrfs_print_tree@@Base+0x5e6>
   268d0:	cmp	r5, #0
   268d2:	beq.n	2698a <btrfs_print_tree@@Base+0x5e6>
   268d4:	ldrd	r2, r3, [r5, #16]
   268d8:	ldr.w	r6, [sl, #44]	; 0x2c
   268dc:	cmp	r9, r3
   268de:	it	eq
   268e0:	cmpeq	r8, r2
   268e2:	bcs.n	26914 <btrfs_print_tree@@Base+0x570>
   268e4:	mov	r0, r5
   268e6:	bl	1353a <rb_prev@@Base>
   268ea:	mov	r5, r0
   268ec:	cmp	r0, #0
   268ee:	beq.n	2698a <btrfs_print_tree@@Base+0x5e6>
   268f0:	ldrd	r2, r3, [r0, #16]
   268f4:	ldr	r1, [pc, #156]	; (26994 <btrfs_print_tree@@Base+0x5f0>)
   268f6:	cmp	r9, r3
   268f8:	ldr	r0, [pc, #156]	; (26998 <btrfs_print_tree@@Base+0x5f4>)
   268fa:	it	eq
   268fc:	cmpeq	r8, r2
   268fe:	add	r1, pc
   26900:	add.w	r1, r1, #16
   26904:	add	r0, pc
   26906:	ite	cc
   26908:	movcc	r3, #1
   2690a:	movcs	r3, #0
   2690c:	mov.w	r2, #628	; 0x274
   26910:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   26914:	ldr	r3, [r5, #32]
   26916:	cmp	r3, #0
   26918:	beq.n	268b4 <btrfs_print_tree@@Base+0x510>
   2691a:	mov	r0, r5
   2691c:	bl	1353a <rb_prev@@Base>
   26920:	cbz	r0, 26944 <btrfs_print_tree@@Base+0x5a0>
   26922:	ldr	r3, [r0, #32]
   26924:	cbnz	r3, 26944 <btrfs_print_tree@@Base+0x5a0>
   26926:	ldrd	r2, r1, [r0, #24]
   2692a:	ldrd	r3, r7, [r0, #16]
   2692e:	adds	r3, r3, r2
   26930:	str	r3, [sp, #0]
   26932:	adc.w	r3, r7, r1
   26936:	str	r3, [sp, #4]
   26938:	ldrd	r2, r3, [sp]
   2693c:	cmp	r9, r3
   2693e:	it	eq
   26940:	cmpeq	r8, r2
   26942:	bcc.n	268cc <btrfs_print_tree@@Base+0x528>
   26944:	ldr.w	r3, [sl, #28]
   26948:	muls	r6, r3
   2694a:	ldrd	r2, r3, [r5, #16]
   2694e:	lsls	r6, r6, #3
   26950:	adds	r2, r2, r6
   26952:	adc.w	r3, r3, #0
   26956:	cmp	r9, r3
   26958:	it	eq
   2695a:	cmpeq	r8, r2
   2695c:	it	cc
   2695e:	movcc	r4, r5
   26960:	b.n	2698a <btrfs_print_tree@@Base+0x5e6>
   26962:	ldr	r3, [r4, #32]
   26964:	cbz	r3, 2698a <btrfs_print_tree@@Base+0x5e6>
   26966:	mov	r0, r4
   26968:	bl	1353a <rb_prev@@Base>
   2696c:	cbz	r0, 2698a <btrfs_print_tree@@Base+0x5e6>
   2696e:	ldr	r3, [r0, #32]
   26970:	cbnz	r3, 2698a <btrfs_print_tree@@Base+0x5e6>
   26972:	ldrd	r3, r5, [r0, #16]
   26976:	ldrd	r2, r1, [r0, #24]
   2697a:	adds	r6, r3, r2
   2697c:	adc.w	r7, r5, r1
   26980:	cmp	r9, r7
   26982:	it	eq
   26984:	cmpeq	r8, r6
   26986:	it	cc
   26988:	movcc	r4, r0
   2698a:	mov	r0, r4
   2698c:	add	sp, #16
   2698e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   26992:	nop
   26994:	ldrh	r3, [r0, #58]	; 0x3a
   26996:	movs	r1, r0
   26998:	ldrh	r5, [r3, #18]
   2699a:	movs	r1, r0
   2699c:	push	{r3, r4, r5, r6, r7, lr}
   2699e:	mov	r6, r0
   269a0:	ldr	r7, [r1, #32]
   269a2:	mov	r5, r1
   269a4:	cbnz	r7, 269fc <btrfs_print_tree@@Base+0x658>
   269a6:	ldrd	r2, r3, [r1, #24]
   269aa:	orrs	r3, r2
   269ac:	ite	eq
   269ae:	moveq	r3, #1
   269b0:	movne	r3, #0
   269b2:	ldr	r1, [pc, #128]	; (26a34 <btrfs_print_tree@@Base+0x690>)
   269b4:	movw	r2, #685	; 0x2ad
   269b8:	ldr	r0, [pc, #124]	; (26a38 <btrfs_print_tree@@Base+0x694>)
   269ba:	add	r1, pc
   269bc:	adds	r1, #35	; 0x23
   269be:	add	r0, pc
   269c0:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   269c4:	ldrd	r0, r1, [r5, #16]
   269c8:	mov	r3, r6
   269ca:	movs	r2, #0
   269cc:	ldr	r4, [r3, #0]
   269ce:	cbnz	r4, 26a00 <btrfs_print_tree@@Base+0x65c>
   269d0:	strd	r2, r4, [r5]
   269d4:	mov	r1, r6
   269d6:	mov	r0, r5
   269d8:	str	r4, [r5, #8]
   269da:	str	r5, [r3, #0]
   269dc:	bl	131d2 <rb_insert_color@@Base>
   269e0:	ldrd	r1, r0, [r5, #24]
   269e4:	ldrd	r3, r2, [r6, #8]
   269e8:	adds	r3, r3, r1
   269ea:	adc.w	r2, r0, r2
   269ee:	strd	r3, r2, [r6, #8]
   269f2:	ldr	r3, [r6, #20]
   269f4:	mov	r0, r4
   269f6:	adds	r3, #1
   269f8:	str	r3, [r6, #20]
   269fa:	pop	{r3, r4, r5, r6, r7, pc}
   269fc:	movs	r3, #0
   269fe:	b.n	269b2 <btrfs_print_tree@@Base+0x60e>
   26a00:	ldrd	r2, r3, [r4, #16]
   26a04:	cmp	r1, r3
   26a06:	it	eq
   26a08:	cmpeq	r0, r2
   26a0a:	bcs.n	26a12 <btrfs_print_tree@@Base+0x66e>
   26a0c:	add.w	r3, r4, #8
   26a10:	b.n	26a1c <btrfs_print_tree@@Base+0x678>
   26a12:	cmp	r3, r1
   26a14:	it	eq
   26a16:	cmpeq	r2, r0
   26a18:	bcs.n	26a20 <btrfs_print_tree@@Base+0x67c>
   26a1a:	adds	r3, r4, #4
   26a1c:	mov	r2, r4
   26a1e:	b.n	269cc <btrfs_print_tree@@Base+0x628>
   26a20:	ldr	r3, [r4, #32]
   26a22:	cbz	r7, 26a2e <btrfs_print_tree@@Base+0x68a>
   26a24:	cmp	r3, #0
   26a26:	beq.n	26a1a <btrfs_print_tree@@Base+0x676>
   26a28:	mvn.w	r0, #16
   26a2c:	b.n	269fa <btrfs_print_tree@@Base+0x656>
   26a2e:	cmp	r3, #0
   26a30:	bne.n	26a0c <btrfs_print_tree@@Base+0x668>
   26a32:	b.n	26a28 <btrfs_print_tree@@Base+0x684>
   26a34:	ldrh	r7, [r0, #52]	; 0x34
   26a36:	movs	r1, r0
   26a38:	ldrh	r2, [r7, #12]
   26a3a:	movs	r1, r0
   26a3c:	push	{r4, lr}
   26a3e:	mov	r4, r1
   26a40:	ldr	r1, [pc, #84]	; (26a98 <btrfs_print_tree@@Base+0x6f4>)
   26a42:	sub	sp, #24
   26a44:	ldr	r3, [pc, #84]	; (26a9c <btrfs_print_tree@@Base+0x6f8>)
   26a46:	add	r1, pc
   26a48:	ldr	r3, [r1, r3]
   26a4a:	mov	r1, sp
   26a4c:	ldr	r3, [r3, #0]
   26a4e:	str	r3, [sp, #20]
   26a50:	mov.w	r3, #0
   26a54:	movs	r3, #25
   26a56:	muls	r2, r3
   26a58:	movs	r3, #17
   26a5a:	adds	r2, #101	; 0x65
   26a5c:	bl	172c2 <read_extent_buffer@@Base>
   26a60:	ldr.w	r3, [sp, #13]
   26a64:	ldr.w	r2, [sp, #9]
   26a68:	str.w	r3, [r4, #13]
   26a6c:	ldrb.w	r3, [sp, #8]
   26a70:	str.w	r2, [r4, #9]
   26a74:	ldr	r2, [pc, #40]	; (26aa0 <btrfs_print_tree@@Base+0x6fc>)
   26a76:	strb	r3, [r4, #8]
   26a78:	ldr	r3, [sp, #0]
   26a7a:	add	r2, pc
   26a7c:	str	r3, [r4, #0]
   26a7e:	ldr	r3, [sp, #4]
   26a80:	str	r3, [r4, #4]
   26a82:	ldr	r3, [pc, #24]	; (26a9c <btrfs_print_tree@@Base+0x6f8>)
   26a84:	ldr	r3, [r2, r3]
   26a86:	ldr	r2, [r3, #0]
   26a88:	ldr	r3, [sp, #20]
   26a8a:	eors	r2, r3
   26a8c:	beq.n	26a92 <btrfs_print_tree@@Base+0x6ee>
   26a8e:	blx	86b8 <__stack_chk_fail@plt>
   26a92:	add	sp, #24
   26a94:	pop	{r4, pc}
   26a96:	nop
   26a98:	b.n	27120 <load_free_space_cache@@Base+0x458>
   26a9a:	movs	r3, r0
   26a9c:	lsls	r4, r4, #8
   26a9e:	movs	r0, r0
   26aa0:	b.n	270c0 <load_free_space_cache@@Base+0x3f8>
   26aa2:	movs	r3, r0

00026aa4 <unlink_free_space@@Base>:
   26aa4:	push	{r3, r4, r5, lr}
   26aa6:	mov	r5, r1
   26aa8:	mov	r4, r0
   26aaa:	mov	r1, r0
   26aac:	mov	r0, r5
   26aae:	bl	13278 <rb_erase@@Base>
   26ab2:	ldr	r3, [r4, #20]
   26ab4:	subs	r3, #1
   26ab6:	str	r3, [r4, #20]
   26ab8:	ldrd	r3, r2, [r4, #8]
   26abc:	ldrd	r1, r0, [r5, #24]
   26ac0:	subs	r3, r3, r1
   26ac2:	sbc.w	r2, r2, r0
   26ac6:	strd	r3, r2, [r4, #8]
   26aca:	pop	{r3, r4, r5, pc}

00026acc <btrfs_find_free_space@@Base>:
   26acc:	b.n	26884 <btrfs_print_tree@@Base+0x4e0>

00026ace <btrfs_dump_free_space@@Base>:
   26ace:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ad2:	mov	r5, r0
   26ad4:	sub	sp, #36	; 0x24
   26ad6:	ldr	r0, [r0, #64]	; 0x40
   26ad8:	mov	r9, r3
   26ada:	mov	r8, r2
   26adc:	bl	134ee <rb_first@@Base>
   26ae0:	ldr	r7, [pc, #112]	; (26b54 <btrfs_dump_free_space@@Base+0x86>)
   26ae2:	ldr	r3, [pc, #116]	; (26b58 <btrfs_dump_free_space@@Base+0x8a>)
   26ae4:	movs	r6, #0
   26ae6:	add	r7, pc
   26ae8:	ldr	r7, [r7, r3]
   26aea:	ldr	r3, [pc, #112]	; (26b5c <btrfs_dump_free_space@@Base+0x8e>)
   26aec:	add	r3, pc
   26aee:	str	r3, [sp, #24]
   26af0:	ldr	r3, [pc, #108]	; (26b60 <btrfs_dump_free_space@@Base+0x92>)
   26af2:	add	r3, pc
   26af4:	str	r3, [sp, #28]
   26af6:	mov	r4, r0
   26af8:	cbnz	r4, 26b0e <btrfs_dump_free_space@@Base+0x40>
   26afa:	ldr	r2, [pc, #104]	; (26b64 <btrfs_dump_free_space@@Base+0x96>)
   26afc:	mov	r3, r6
   26afe:	ldr	r0, [r7, #0]
   26b00:	movs	r1, #1
   26b02:	add	r2, pc
   26b04:	add	sp, #36	; 0x24
   26b06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b0a:	b.w	8a10 <__fprintf_chk@plt>
   26b0e:	ldrd	r2, r3, [r4, #24]
   26b12:	cmp	r3, r9
   26b14:	it	eq
   26b16:	cmpeq	r2, r8
   26b18:	bcc.n	26b20 <btrfs_dump_free_space@@Base+0x52>
   26b1a:	ldr	r1, [r5, #108]	; 0x6c
   26b1c:	cbnz	r1, 26b20 <btrfs_dump_free_space@@Base+0x52>
   26b1e:	adds	r6, #1
   26b20:	ldr	r1, [r4, #32]
   26b22:	ldrd	sl, fp, [r4, #16]
   26b26:	cmp	r1, #0
   26b28:	ldr	r1, [sp, #24]
   26b2a:	ldr	r0, [r7, #0]
   26b2c:	strd	r2, r3, [sp, #8]
   26b30:	mov	ip, r1
   26b32:	ldr	r1, [sp, #28]
   26b34:	ldr	r2, [pc, #48]	; (26b68 <btrfs_dump_free_space@@Base+0x9a>)
   26b36:	it	ne
   26b38:	movne	r1, ip
   26b3a:	strd	sl, fp, [sp]
   26b3e:	add	r2, pc
   26b40:	str	r1, [sp, #16]
   26b42:	movs	r1, #1
   26b44:	blx	8a14 <__fprintf_chk@plt+0x4>
   26b48:	mov	r0, r4
   26b4a:	bl	1350e <rb_next@@Base>
   26b4e:	mov	r4, r0
   26b50:	b.n	26af8 <btrfs_dump_free_space@@Base+0x2a>
   26b52:	nop
   26b54:	b.n	2709c <load_free_space_cache@@Base+0x3d4>
   26b56:	movs	r3, r0
   26b58:	lsls	r4, r6, #8
   26b5a:	movs	r0, r0
   26b5c:	ldrh	r2, [r5, #4]
   26b5e:	movs	r1, r0
   26b60:	adds	r1, #200	; 0xc8
   26b62:	movs	r1, r0
   26b64:	ldrh	r2, [r0, #6]
   26b66:	movs	r1, r0
   26b68:	ldrh	r4, [r3, #2]
   26b6a:	movs	r1, r0

00026b6c <btrfs_init_free_space_ctl@@Base>:
   26b6c:	push	{r3, r4, r5, lr}
   26b6e:	mov	r4, r0
   26b70:	mov	r5, r1
   26b72:	movs	r0, #1
   26b74:	movs	r1, #48	; 0x30
   26b76:	blx	8544 <calloc@plt+0x4>
   26b7a:	cbz	r0, 26b90 <btrfs_init_free_space_ctl@@Base+0x24>
   26b7c:	ldrd	r2, r3, [r4, #40]	; 0x28
   26b80:	str	r5, [r0, #44]	; 0x2c
   26b82:	str	r5, [r0, #28]
   26b84:	strd	r2, r3, [r0, #32]
   26b88:	str	r4, [r0, #40]	; 0x28
   26b8a:	str	r0, [r4, #64]	; 0x40
   26b8c:	movs	r0, #0
   26b8e:	pop	{r3, r4, r5, pc}
   26b90:	mvn.w	r0, #11
   26b94:	b.n	26b8e <btrfs_init_free_space_ctl@@Base+0x22>

00026b96 <__btrfs_remove_free_space_cache@@Base>:
   26b96:	push	{r3, r4, r5, lr}
   26b98:	mov	r5, r0
   26b9a:	mov	r0, r5
   26b9c:	bl	134fe <rb_last@@Base>
   26ba0:	mov	r4, r0
   26ba2:	cbnz	r0, 26ba6 <__btrfs_remove_free_space_cache@@Base+0x10>
   26ba4:	pop	{r3, r4, r5, pc}
   26ba6:	mov	r1, r4
   26ba8:	mov	r0, r5
   26baa:	bl	26aa4 <unlink_free_space@@Base>
   26bae:	ldr	r0, [r4, #32]
   26bb0:	blx	85dc <free@plt+0x4>
   26bb4:	mov	r0, r4
   26bb6:	blx	85dc <free@plt+0x4>
   26bba:	b.n	26b9a <__btrfs_remove_free_space_cache@@Base+0x4>

00026bbc <btrfs_remove_free_space_cache@@Base>:
   26bbc:	ldr	r0, [r0, #64]	; 0x40
   26bbe:	b.w	26b96 <__btrfs_remove_free_space_cache@@Base>

00026bc2 <btrfs_add_free_space@@Base>:
   26bc2:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26bc6:	mov	r9, r3
   26bc8:	ldr	r3, [pc, #240]	; (26cbc <btrfs_add_free_space@@Base+0xfa>)
   26bca:	mov	r7, r0
   26bcc:	movs	r1, #48	; 0x30
   26bce:	movs	r0, #1
   26bd0:	add	r3, pc
   26bd2:	ldrd	r5, r6, [sp, #48]	; 0x30
   26bd6:	mov	r8, r2
   26bd8:	str	r3, [sp, #4]
   26bda:	blx	8544 <calloc@plt+0x4>
   26bde:	mov	r4, r0
   26be0:	cmp	r0, #0
   26be2:	beq.n	26cb4 <btrfs_add_free_space@@Base+0xf2>
   26be4:	adds.w	r2, r8, r5
   26be8:	strd	r5, r6, [r0, #24]
   26bec:	adc.w	r3, r9, r6
   26bf0:	strd	r8, r9, [r0, #16]
   26bf4:	mov	r0, r7
   26bf6:	bl	26884 <btrfs_print_tree@@Base+0x4e0>
   26bfa:	mov	r6, r0
   26bfc:	cbz	r0, 26c32 <btrfs_add_free_space@@Base+0x70>
   26bfe:	bl	1353a <rb_prev@@Base>
   26c02:	cbz	r0, 26c32 <btrfs_add_free_space@@Base+0x70>
   26c04:	mov	r0, r6
   26c06:	bl	1353a <rb_prev@@Base>
   26c0a:	mov	r5, r0
   26c0c:	ldr	r3, [r6, #32]
   26c0e:	cbnz	r3, 26c46 <btrfs_add_free_space@@Base+0x84>
   26c10:	mov	r1, r6
   26c12:	mov	r0, r7
   26c14:	bl	26aa4 <unlink_free_space@@Base>
   26c18:	ldrd	r1, r0, [r6, #24]
   26c1c:	ldrd	r3, r2, [r4, #24]
   26c20:	adds	r3, r3, r1
   26c22:	adc.w	r2, r0, r2
   26c26:	mov	r0, r6
   26c28:	strd	r3, r2, [r4, #24]
   26c2c:	blx	85dc <free@plt+0x4>
   26c30:	b.n	26c46 <btrfs_add_free_space@@Base+0x84>
   26c32:	adds.w	r2, r8, #4294967295	; 0xffffffff
   26c36:	mov	r0, r7
   26c38:	adc.w	r3, r9, #4294967295	; 0xffffffff
   26c3c:	bl	26884 <btrfs_print_tree@@Base+0x4e0>
   26c40:	mov	r5, r0
   26c42:	cmp	r6, #0
   26c44:	bne.n	26c0c <btrfs_add_free_space@@Base+0x4a>
   26c46:	cbz	r5, 26c8c <btrfs_add_free_space@@Base+0xca>
   26c48:	ldr	r3, [r5, #32]
   26c4a:	cbnz	r3, 26c8c <btrfs_add_free_space@@Base+0xca>
   26c4c:	ldrd	r3, r0, [r5, #16]
   26c50:	ldrd	r2, r1, [r5, #24]
   26c54:	adds.w	sl, r3, r2
   26c58:	adc.w	fp, r0, r1
   26c5c:	cmp	r9, fp
   26c5e:	it	eq
   26c60:	cmpeq	r8, sl
   26c62:	bne.n	26c8c <btrfs_add_free_space@@Base+0xca>
   26c64:	mov	r1, r5
   26c66:	mov	r0, r7
   26c68:	bl	26aa4 <unlink_free_space@@Base>
   26c6c:	ldrd	r2, r3, [r5, #16]
   26c70:	strd	r2, r3, [r4, #16]
   26c74:	ldrd	r3, r2, [r4, #24]
   26c78:	ldrd	r0, r1, [r5, #24]
   26c7c:	adds	r3, r3, r0
   26c7e:	mov	r0, r5
   26c80:	adc.w	r2, r1, r2
   26c84:	strd	r3, r2, [r4, #24]
   26c88:	blx	85dc <free@plt+0x4>
   26c8c:	mov	r1, r4
   26c8e:	mov	r0, r7
   26c90:	bl	2699c <btrfs_print_tree@@Base+0x5f8>
   26c94:	mov	r4, r0
   26c96:	cbz	r0, 26cac <btrfs_add_free_space@@Base+0xea>
   26c98:	ldr	r3, [pc, #36]	; (26cc0 <btrfs_add_free_space@@Base+0xfe>)
   26c9a:	movs	r1, #1
   26c9c:	ldr	r2, [sp, #4]
   26c9e:	ldr	r0, [r2, r3]
   26ca0:	mov	r3, r4
   26ca2:	ldr	r2, [pc, #32]	; (26cc4 <btrfs_add_free_space@@Base+0x102>)
   26ca4:	ldr	r0, [r0, #0]
   26ca6:	add	r2, pc
   26ca8:	blx	8a14 <__fprintf_chk@plt+0x4>
   26cac:	mov	r0, r4
   26cae:	add	sp, #12
   26cb0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26cb4:	mvn.w	r4, #11
   26cb8:	b.n	26cac <btrfs_add_free_space@@Base+0xea>
   26cba:	nop
   26cbc:	b.n	27030 <load_free_space_cache@@Base+0x368>
   26cbe:	movs	r3, r0
   26cc0:	lsls	r4, r6, #8
   26cc2:	movs	r0, r0
   26cc4:	strh	r3, [r2, #58]	; 0x3a
   26cc6:	movs	r1, r0

00026cc8 <load_free_space_cache@@Base>:
   26cc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ccc:	mov	r6, r0
   26cce:	vpush	{d8}
   26cd2:	ldr.w	r2, [pc, #2148]	; 27538 <load_free_space_cache@@Base+0x870>
   26cd6:	ldr.w	r3, [pc, #2148]	; 2753c <load_free_space_cache@@Base+0x874>
   26cda:	add	r2, pc
   26cdc:	ldr.w	fp, [pc, #2144]	; 27540 <load_free_space_cache@@Base+0x878>
   26ce0:	sub	sp, #244	; 0xf4
   26ce2:	ldr	r5, [r1, #64]	; 0x40
   26ce4:	add	fp, pc
   26ce6:	str	r1, [sp, #72]	; 0x48
   26ce8:	ldr	r3, [r2, r3]
   26cea:	ldr	r3, [r3, #0]
   26cec:	str	r3, [sp, #236]	; 0xec
   26cee:	mov.w	r3, #0
   26cf2:	ldr	r3, [r1, #72]	; 0x48
   26cf4:	str	r3, [sp, #88]	; 0x58
   26cf6:	ldr	r3, [r1, #76]	; 0x4c
   26cf8:	str	r3, [sp, #92]	; 0x5c
   26cfa:	bl	17df8 <btrfs_alloc_path@@Base>
   26cfe:	mov	r4, r0
   26d00:	cmp	r0, #0
   26d02:	beq.w	27526 <load_free_space_cache@@Base+0x85e>
   26d06:	ldr	r3, [sp, #72]	; 0x48
   26d08:	movs	r7, #0
   26d0a:	ldr.w	r9, [r6, #28]
   26d0e:	add	r1, sp, #96	; 0x60
   26d10:	mvn.w	r0, #10
   26d14:	strd	r1, r1, [sp, #96]	; 0x60
   26d18:	ldrd	r2, r3, [r3, #40]	; 0x28
   26d1c:	mov.w	r1, #4294967295	; 0xffffffff
   26d20:	strd	r7, r7, [sp]
   26d24:	strd	r0, r1, [sp, #104]	; 0x68
   26d28:	mov	r1, r9
   26d2a:	str.w	r2, [sp, #113]	; 0x71
   26d2e:	mov	r0, r7
   26d30:	str.w	r3, [sp, #117]	; 0x75
   26d34:	add	r2, sp, #104	; 0x68
   26d36:	mov	r3, r4
   26d38:	strb.w	r7, [sp, #112]	; 0x70
   26d3c:	bl	1a1e4 <btrfs_search_slot@@Base>
   26d40:	subs	r6, r0, #0
   26d42:	blt.n	26d4c <load_free_space_cache@@Base+0x84>
   26d44:	beq.n	26d52 <load_free_space_cache@@Base+0x8a>
   26d46:	mov	r0, r4
   26d48:	bl	17e00 <btrfs_release_path@@Base>
   26d4c:	mov.w	r8, #0
   26d50:	b.n	26e16 <load_free_space_cache@@Base+0x14e>
   26d52:	ldr.w	ip, [r4]
   26d56:	movs	r7, #25
   26d58:	ldr	r2, [r4, #32]
   26d5a:	add.w	r3, ip, #96	; 0x60
   26d5e:	mla	r2, r7, r2, r3
   26d62:	ldr.w	r2, [r2, #118]	; 0x76
   26d66:	adds	r2, #101	; 0x65
   26d68:	add	r3, r2
   26d6a:	mov	r1, r3
   26d6c:	ldr.w	r0, [r1, #25]!
   26d70:	ldr	r1, [r1, #4]
   26d72:	str	r0, [sp, #24]
   26d74:	str	r1, [sp, #28]
   26d76:	mov	r1, r3
   26d78:	ldr.w	r0, [r1, #33]!
   26d7c:	ldr	r1, [r1, #4]
   26d7e:	str	r0, [sp, #64]	; 0x40
   26d80:	mov	r0, ip
   26d82:	str	r1, [sp, #76]	; 0x4c
   26d84:	ldr.w	r1, [r3, #17]!
   26d88:	ldr	r3, [r3, #4]
   26d8a:	str	r1, [sp, #40]	; 0x28
   26d8c:	add	r1, sp, #144	; 0x90
   26d8e:	str	r3, [sp, #44]	; 0x2c
   26d90:	movs	r3, #17
   26d92:	bl	172c2 <read_extent_buffer@@Base>
   26d96:	ldr.w	r3, [sp, #157]	; 0x9d
   26d9a:	ldr.w	r2, [sp, #153]	; 0x99
   26d9e:	mov	r0, r4
   26da0:	str.w	r3, [sp, #137]	; 0x89
   26da4:	ldrb.w	r3, [sp, #152]	; 0x98
   26da8:	str.w	r2, [sp, #133]	; 0x85
   26dac:	strb.w	r3, [sp, #132]	; 0x84
   26db0:	ldr	r3, [sp, #144]	; 0x90
   26db2:	str	r3, [sp, #124]	; 0x7c
   26db4:	ldr	r3, [sp, #148]	; 0x94
   26db6:	str	r3, [sp, #128]	; 0x80
   26db8:	bl	17e00 <btrfs_release_path@@Base>
   26dbc:	add	r2, sp, #124	; 0x7c
   26dbe:	mov	r3, r4
   26dc0:	mov	r1, r9
   26dc2:	mov	r0, r6
   26dc4:	strd	r6, r6, [sp]
   26dc8:	bl	1a1e4 <btrfs_search_slot@@Base>
   26dcc:	mov	r8, r0
   26dce:	cbz	r0, 26dea <load_free_space_cache@@Base+0x122>
   26dd0:	ldr.w	r3, [pc, #1904]	; 27544 <load_free_space_cache@@Base+0x87c>
   26dd4:	movs	r1, #1
   26dd6:	ldr.w	r2, [pc, #1904]	; 27548 <load_free_space_cache@@Base+0x880>
   26dda:	ldr.w	r0, [fp, r3]
   26dde:	add	r2, pc
   26de0:	mov	r3, r8
   26de2:	ldr	r0, [r0, #0]
   26de4:	blx	8a14 <__fprintf_chk@plt+0x4>
   26de8:	b.n	26d4c <load_free_space_cache@@Base+0x84>
   26dea:	ldr	r3, [r4, #0]
   26dec:	ldr	r2, [r4, #32]
   26dee:	adds	r3, #96	; 0x60
   26df0:	mla	r7, r7, r2, r3
   26df4:	ldr.w	r2, [r7, #118]	; 0x76
   26df8:	adds	r2, #101	; 0x65
   26dfa:	add	r3, r2
   26dfc:	ldr	r6, [r3, #16]
   26dfe:	ldr	r7, [r3, #20]
   26e00:	orrs.w	r2, r6, r7
   26e04:	beq.n	26e10 <load_free_space_cache@@Base+0x148>
   26e06:	ldr	r0, [r3, #0]
   26e08:	ldr	r1, [r3, #4]
   26e0a:	orrs.w	r3, r0, r1
   26e0e:	bne.n	26eda <load_free_space_cache@@Base+0x212>
   26e10:	mov	r0, r4
   26e12:	bl	17e00 <btrfs_release_path@@Base>
   26e16:	mov	r0, r4
   26e18:	bl	17e26 <btrfs_free_path@@Base>
   26e1c:	ldr	r3, [sp, #72]	; 0x48
   26e1e:	ldrd	r4, r6, [r5, #8]
   26e22:	ldr.w	r2, [r3, #49]	; 0x31
   26e26:	ldr.w	r0, [r3, #53]	; 0x35
   26e2a:	ldrd	r1, r7, [r3, #80]	; 0x50
   26e2e:	ldr	r3, [sp, #88]	; 0x58
   26e30:	adds	r1, r3, r1
   26e32:	ldr	r3, [sp, #92]	; 0x5c
   26e34:	adc.w	r7, r3, r7
   26e38:	adds	r3, r4, r1
   26e3a:	adc.w	ip, r6, r7
   26e3e:	subs	r3, r3, r2
   26e40:	str	r3, [sp, #56]	; 0x38
   26e42:	sbc.w	r3, ip, r0
   26e46:	cmp.w	r8, #1
   26e4a:	str	r3, [sp, #60]	; 0x3c
   26e4c:	bne.w	2750e <load_free_space_cache@@Base+0x846>
   26e50:	ldrd	r9, sl, [sp, #56]	; 0x38
   26e54:	orrs.w	r3, r9, sl
   26e58:	beq.n	26ec0 <load_free_space_cache@@Base+0x1f8>
   26e5a:	ldr.w	r3, [pc, #1768]	; 27544 <load_free_space_cache@@Base+0x87c>
   26e5e:	subs	r2, r2, r1
   26e60:	sbc.w	r0, r0, r7
   26e64:	ldr.w	r3, [fp, r3]
   26e68:	strd	r2, r0, [sp, #16]
   26e6c:	ldr	r2, [sp, #72]	; 0x48
   26e6e:	strd	r4, r6, [sp, #8]
   26e72:	ldrd	r0, r1, [r2, #40]	; 0x28
   26e76:	ldr.w	r2, [pc, #1748]	; 2754c <load_free_space_cache@@Base+0x884>
   26e7a:	strd	r0, r1, [sp]
   26e7e:	add	r2, pc
   26e80:	ldr	r0, [r3, #0]
   26e82:	mov	r1, r8
   26e84:	blx	8a14 <__fprintf_chk@plt+0x4>
   26e88:	mov	r0, r5
   26e8a:	bl	26b96 <__btrfs_remove_free_space_cache@@Base>
   26e8e:	ldrd	r3, r4, [sp, #56]	; 0x38
   26e92:	cmp	r3, #1
   26e94:	sbcs.w	r3, r4, #0
   26e98:	bge.w	27500 <load_free_space_cache@@Base+0x838>
   26e9c:	mov.w	r8, #0
   26ea0:	ldr	r2, [sp, #72]	; 0x48
   26ea2:	ldr.w	r3, [pc, #1696]	; 27544 <load_free_space_cache@@Base+0x87c>
   26ea6:	ldrd	r0, r1, [r2, #40]	; 0x28
   26eaa:	ldr.w	r3, [fp, r3]
   26eae:	ldr.w	r2, [pc, #1696]	; 27550 <load_free_space_cache@@Base+0x888>
   26eb2:	strd	r0, r1, [sp]
   26eb6:	movs	r1, #1
   26eb8:	ldr	r0, [r3, #0]
   26eba:	add	r2, pc
   26ebc:	blx	8a14 <__fprintf_chk@plt+0x4>
   26ec0:	ldr.w	r2, [pc, #1680]	; 27554 <load_free_space_cache@@Base+0x88c>
   26ec4:	ldr.w	r3, [pc, #1652]	; 2753c <load_free_space_cache@@Base+0x874>
   26ec8:	add	r2, pc
   26eca:	ldr	r3, [r2, r3]
   26ecc:	ldr	r2, [r3, #0]
   26ece:	ldr	r3, [sp, #236]	; 0xec
   26ed0:	eors	r2, r3
   26ed2:	beq.w	2752a <load_free_space_cache@@Base+0x862>
   26ed6:	blx	86b8 <__stack_chk_fail@plt>
   26eda:	ldrd	r2, r3, [sp, #40]	; 0x28
   26ede:	cmp	r3, r1
   26ee0:	it	eq
   26ee2:	cmpeq	r2, r0
   26ee4:	beq.n	26f0a <load_free_space_cache@@Base+0x242>
   26ee6:	ldr.w	r3, [pc, #1628]	; 27544 <load_free_space_cache@@Base+0x87c>
   26eea:	ldrd	r6, r7, [sp, #40]	; 0x28
   26eee:	ldr.w	r2, [pc, #1640]	; 27558 <load_free_space_cache@@Base+0x890>
   26ef2:	ldr.w	r3, [fp, r3]
   26ef6:	add	r2, pc
   26ef8:	strd	r0, r1, [sp]
   26efc:	strd	r6, r7, [sp, #8]
   26f00:	movs	r1, #1
   26f02:	ldr	r0, [r3, #0]
   26f04:	blx	8a14 <__fprintf_chk@plt+0x4>
   26f08:	b.n	26e10 <load_free_space_cache@@Base+0x148>
   26f0a:	mov	r0, r4
   26f0c:	bl	17e00 <btrfs_release_path@@Base>
   26f10:	ldrd	r2, r3, [sp, #24]
   26f14:	orrs	r3, r2
   26f16:	beq.w	26d4c <load_free_space_cache@@Base+0x84>
   26f1a:	ldr	r3, [sp, #124]	; 0x7c
   26f1c:	movs	r2, #48	; 0x30
   26f1e:	mov	r1, r8
   26f20:	add	r0, sp, #184	; 0xb8
   26f22:	str	r3, [sp, #32]
   26f24:	ldr	r3, [sp, #128]	; 0x80
   26f26:	str	r3, [sp, #36]	; 0x24
   26f28:	blx	8978 <memset@plt+0x4>
   26f2c:	ldr.w	r3, [r9, #464]	; 0x1d0
   26f30:	ldr.w	r2, [r3, #388]	; 0x184
   26f34:	movs	r3, #0
   26f36:	adds.w	r0, r2, #4294967295	; 0xffffffff
   26f3a:	adc.w	r1, r3, #4294967295	; 0xffffffff
   26f3e:	adds	r0, r0, r6
   26f40:	adc.w	r1, r7, r1
   26f44:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   26f48:	mov	r1, r6
   26f4a:	str	r0, [sp, #220]	; 0xdc
   26f4c:	movs	r0, #1
   26f4e:	blx	8544 <calloc@plt+0x4>
   26f52:	str	r0, [sp, #192]	; 0xc0
   26f54:	cmp	r0, #0
   26f56:	beq.w	274fa <load_free_space_cache@@Base+0x832>
   26f5a:	ldrd	r0, r1, [sp, #32]
   26f5e:	mov.w	r3, #4294967295	; 0xffffffff
   26f62:	mvn.w	r2, #11
   26f66:	strd	r6, r7, [sp, #208]	; 0xd0
   26f6a:	cmp	r1, r3
   26f6c:	add	r7, sp, #164	; 0xa4
   26f6e:	it	eq
   26f70:	cmpeq	r0, r2
   26f72:	mov	r1, r9
   26f74:	mov.w	r0, #0
   26f78:	mov	r2, r7
   26f7a:	it	ne
   26f7c:	ldrbne.w	r3, [sp, #224]	; 0xe0
   26f80:	strd	r0, r0, [sp]
   26f84:	it	ne
   26f86:	orrne.w	r3, r3, #1
   26f8a:	str.w	r9, [sp, #196]	; 0xc4
   26f8e:	it	ne
   26f90:	strbne.w	r3, [sp, #224]	; 0xe0
   26f94:	ldr	r3, [sp, #32]
   26f96:	strb.w	r0, [sp, #173]	; 0xad
   26f9a:	strb.w	r0, [sp, #174]	; 0xae
   26f9e:	str	r3, [sp, #164]	; 0xa4
   26fa0:	ldr	r3, [sp, #36]	; 0x24
   26fa2:	strb.w	r0, [sp, #175]	; 0xaf
   26fa6:	strb.w	r0, [sp, #176]	; 0xb0
   26faa:	str	r3, [sp, #168]	; 0xa8
   26fac:	movs	r3, #108	; 0x6c
   26fae:	strb.w	r3, [sp, #172]	; 0xac
   26fb2:	mov	r3, r4
   26fb4:	strb.w	r0, [sp, #177]	; 0xb1
   26fb8:	strb.w	r0, [sp, #178]	; 0xb2
   26fbc:	strb.w	r0, [sp, #179]	; 0xb3
   26fc0:	strb.w	r0, [sp, #180]	; 0xb4
   26fc4:	bl	1a1e4 <btrfs_search_slot@@Base>
   26fc8:	cmp	r0, #0
   26fca:	beq.w	2716e <load_free_space_cache@@Base+0x4a6>
   26fce:	ldr.w	r3, [pc, #1396]	; 27544 <load_free_space_cache@@Base+0x87c>
   26fd2:	mvn.w	r8, #21
   26fd6:	ldrd	r1, r2, [sp, #32]
   26fda:	ldr.w	r3, [fp, r3]
   26fde:	strd	r1, r2, [sp]
   26fe2:	movs	r1, #1
   26fe4:	ldr.w	r2, [pc, #1396]	; 2755c <load_free_space_cache@@Base+0x894>
   26fe8:	ldr	r0, [r3, #0]
   26fea:	add	r2, pc
   26fec:	blx	8a14 <__fprintf_chk@plt+0x4>
   26ff0:	mov	r0, r4
   26ff2:	bl	17e00 <btrfs_release_path@@Base>
   26ff6:	ldr	r0, [sp, #192]	; 0xc0
   26ff8:	blx	85dc <free@plt+0x4>
   26ffc:	b.n	26e16 <load_free_space_cache@@Base+0x14e>
   26ffe:	ldr	r3, [r4, #0]
   27000:	ldr	r2, [r4, #32]
   27002:	ldr.w	r3, [r3, #192]	; 0xc0
   27006:	cmp	r2, r3
   27008:	bcs.n	270ae <load_free_space_cache@@Base+0x3e6>
   2700a:	ldr	r7, [r4, #0]
   2700c:	vmov	r1, s16
   27010:	ldr	r2, [r4, #32]
   27012:	mov	r0, r7
   27014:	bl	26a3c <btrfs_print_tree@@Base+0x698>
   27018:	ldrd	r2, r3, [sp, #164]	; 0xa4
   2701c:	ldrd	r0, r1, [sp, #32]
   27020:	cmp	r1, r3
   27022:	it	eq
   27024:	cmpeq	r0, r2
   27026:	beq.n	270c2 <load_free_space_cache@@Base+0x3fa>
   27028:	mvn.w	r8, #21
   2702c:	mov	r0, r4
   2702e:	bl	17e00 <btrfs_release_path@@Base>
   27032:	cmp.w	r8, #0
   27036:	bne.n	26ff6 <load_free_space_cache@@Base+0x32e>
   27038:	mov	r1, r8
   2703a:	add	r0, sp, #184	; 0xb8
   2703c:	bl	267d4 <btrfs_print_tree@@Base+0x430>
   27040:	mov	r8, r0
   27042:	cbnz	r0, 270a0 <load_free_space_cache@@Base+0x3d8>
   27044:	ldrb.w	r2, [sp, #224]	; 0xe0
   27048:	ldr	r3, [sp, #184]	; 0xb8
   2704a:	lsls	r2, r2, #31
   2704c:	ldr	r1, [sp, #200]	; 0xc8
   2704e:	bpl.w	2717e <load_free_space_cache@@Base+0x4b6>
   27052:	ldr	r0, [sp, #220]	; 0xdc
   27054:	lsls	r2, r0, #2
   27056:	add.w	r3, r3, r0, lsl #2
   2705a:	str	r3, [sp, #184]	; 0xb8
   2705c:	add.w	r3, r2, #8
   27060:	subs	r3, r1, r3
   27062:	str	r3, [sp, #200]	; 0xc8
   27064:	ldr	r3, [sp, #184]	; 0xb8
   27066:	ldrd	r6, r7, [sp, #40]	; 0x28
   2706a:	ldrd	r0, r1, [r3]
   2706e:	cmp	r7, r1
   27070:	it	eq
   27072:	cmpeq	r6, r0
   27074:	beq.w	27188 <load_free_space_cache@@Base+0x4c0>
   27078:	ldr.w	r3, [pc, #1224]	; 27544 <load_free_space_cache@@Base+0x87c>
   2707c:	mvn.w	r8, #4
   27080:	ldr.w	r2, [pc, #1244]	; 27560 <load_free_space_cache@@Base+0x898>
   27084:	ldr.w	r3, [fp, r3]
   27088:	add	r2, pc
   2708a:	strd	r0, r1, [sp]
   2708e:	movs	r1, #1
   27090:	strd	r6, r7, [sp, #8]
   27094:	ldr	r0, [r3, #0]
   27096:	blx	8a14 <__fprintf_chk@plt+0x4>
   2709a:	add	r0, sp, #184	; 0xb8
   2709c:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   270a0:	add	r0, sp, #184	; 0xb8
   270a2:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   270a6:	mov	r0, r5
   270a8:	bl	26b96 <__btrfs_remove_free_space_cache@@Base>
   270ac:	b.n	26ff6 <load_free_space_cache@@Base+0x32e>
   270ae:	strb.w	r6, [r4, #65]	; 0x41
   270b2:	mov	r1, r4
   270b4:	ldr.w	r0, [r9, #464]	; 0x1d0
   270b8:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   270bc:	cmp	r0, #0
   270be:	beq.n	2700a <load_free_space_cache@@Base+0x342>
   270c0:	b.n	27028 <load_free_space_cache@@Base+0x360>
   270c2:	ldrb.w	r3, [sp, #172]	; 0xac
   270c6:	cmp	r3, #108	; 0x6c
   270c8:	bne.n	27028 <load_free_space_cache@@Base+0x360>
   270ca:	ldr	r3, [r4, #0]
   270cc:	movs	r1, #25
   270ce:	ldr	r2, [r4, #32]
   270d0:	adds	r3, #96	; 0x60
   270d2:	mla	r2, r1, r2, r3
   270d6:	ldr.w	r0, [r2, #118]	; 0x76
   270da:	add.w	r2, r0, #101	; 0x65
   270de:	add	r3, r2
   270e0:	ldrb	r3, [r3, #20]
   270e2:	cmp	r3, #1
   270e4:	beq.n	270fc <load_free_space_cache@@Base+0x434>
   270e6:	ldr.w	r3, [pc, #1116]	; 27544 <load_free_space_cache@@Base+0x87c>
   270ea:	ldr.w	r0, [pc, #1144]	; 27564 <load_free_space_cache@@Base+0x89c>
   270ee:	ldr.w	r3, [fp, r3]
   270f2:	add	r0, pc
   270f4:	ldr	r1, [r3, #0]
   270f6:	blx	8b1c <fputs@plt+0x4>
   270fa:	b.n	27028 <load_free_space_cache@@Base+0x360>
   270fc:	add.w	r0, r7, #96	; 0x60
   27100:	ldr.w	r1, [sp, #173]	; 0xad
   27104:	add	r0, r2
   27106:	mov	r3, r0
   27108:	ldr.w	r7, [r3, #45]!
   2710c:	ldr.w	sl, [r3, #4]
   27110:	mov	r3, r0
   27112:	ldr.w	r2, [r3, #21]!
   27116:	ldr.w	lr, [r0, #37]!
   2711a:	ldr.w	ip, [r3, #4]
   2711e:	adds.w	r2, r2, lr
   27122:	ldr	r3, [r0, #4]
   27124:	ldr	r0, [sp, #192]	; 0xc0
   27126:	str	r6, [sp, #8]
   27128:	adc.w	r3, ip, r3
   2712c:	add	r1, r0
   2712e:	strd	r7, sl, [sp]
   27132:	ldr.w	r0, [r9, #464]	; 0x1d0
   27136:	bl	16e52 <read_data_from_disk@@Base>
   2713a:	mov	r8, r0
   2713c:	cmp	r0, #0
   2713e:	bne.w	2702c <load_free_space_cache@@Base+0x364>
   27142:	ldr	r3, [sp, #48]	; 0x30
   27144:	adds	r3, r3, r7
   27146:	str	r3, [sp, #48]	; 0x30
   27148:	ldr	r3, [sp, #52]	; 0x34
   2714a:	adc.w	r3, r3, sl
   2714e:	str	r3, [sp, #52]	; 0x34
   27150:	ldr	r3, [r4, #32]
   27152:	adds	r3, #1
   27154:	str	r3, [r4, #32]
   27156:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2715a:	ldrd	r0, r1, [sp, #48]	; 0x30
   2715e:	cmp	r1, r3
   27160:	it	eq
   27162:	cmpeq	r0, r2
   27164:	bcc.w	26ffe <load_free_space_cache@@Base+0x336>
   27168:	mov.w	r8, #0
   2716c:	b.n	2702c <load_free_space_cache@@Base+0x364>
   2716e:	movs	r2, #0
   27170:	movs	r3, #0
   27172:	vmov	s16, r7
   27176:	mov	r6, r0
   27178:	strd	r2, r3, [sp, #48]	; 0x30
   2717c:	b.n	27156 <load_free_space_cache@@Base+0x48e>
   2717e:	adds	r3, #8
   27180:	subs	r1, #16
   27182:	str	r3, [sp, #184]	; 0xb8
   27184:	str	r1, [sp, #200]	; 0xc8
   27186:	b.n	27064 <load_free_space_cache@@Base+0x39c>
   27188:	ldr	r7, [pc, #988]	; (27568 <load_free_space_cache@@Base+0x8a0>)
   2718a:	adds	r3, #8
   2718c:	ldr.w	r9, [pc, #988]	; 2756c <load_free_space_cache@@Base+0x8a4>
   27190:	add	r7, pc
   27192:	str	r3, [sp, #184]	; 0xb8
   27194:	adds	r7, #51	; 0x33
   27196:	add	r9, pc
   27198:	movs	r1, #48	; 0x30
   2719a:	movs	r0, #1
   2719c:	blx	8544 <calloc@plt+0x4>
   271a0:	mov	r6, r0
   271a2:	cmp	r0, #0
   271a4:	beq.w	270a0 <load_free_space_cache@@Base+0x3d8>
   271a8:	ldr	r3, [sp, #184]	; 0xb8
   271aa:	cbz	r3, 271ee <load_free_space_cache@@Base+0x526>
   271ac:	ldr	r3, [sp, #184]	; 0xb8
   271ae:	adds	r3, #17
   271b0:	ldr.w	r1, [r3, #-17]
   271b4:	ldr.w	r2, [r3, #-13]
   271b8:	strd	r1, r2, [r6, #16]
   271bc:	ldr.w	r1, [r3, #-9]
   271c0:	ldr.w	r2, [r3, #-5]
   271c4:	strd	r1, r2, [r6, #24]
   271c8:	ldrb.w	r1, [r3, #-1]
   271cc:	str	r3, [sp, #184]	; 0xb8
   271ce:	ldr	r3, [sp, #200]	; 0xc8
   271d0:	subs	r3, #17
   271d2:	str	r3, [sp, #200]	; 0xc8
   271d4:	cmp	r3, #16
   271d6:	bhi.n	271de <load_free_space_cache@@Base+0x516>
   271d8:	add	r0, sp, #184	; 0xb8
   271da:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   271de:	ldrd	r2, r3, [r6, #24]
   271e2:	orrs	r3, r2
   271e4:	bne.n	27206 <load_free_space_cache@@Base+0x53e>
   271e6:	mov	r0, r6
   271e8:	blx	85dc <free@plt+0x4>
   271ec:	b.n	270a0 <load_free_space_cache@@Base+0x3d8>
   271ee:	ldr	r1, [sp, #216]	; 0xd8
   271f0:	add	r0, sp, #184	; 0xb8
   271f2:	bl	267d4 <btrfs_print_tree@@Base+0x430>
   271f6:	mov	sl, r0
   271f8:	cmp	r0, #0
   271fa:	beq.n	271ac <load_free_space_cache@@Base+0x4e4>
   271fc:	mov	r0, r6
   271fe:	mov	r8, sl
   27200:	blx	85dc <free@plt+0x4>
   27204:	b.n	270a0 <load_free_space_cache@@Base+0x3d8>
   27206:	cmp	r1, #1
   27208:	bne.n	2722a <load_free_space_cache@@Base+0x562>
   2720a:	mov	r1, r6
   2720c:	mov	r0, r5
   2720e:	bl	2699c <btrfs_print_tree@@Base+0x5f8>
   27212:	mov	sl, r0
   27214:	cmp	r0, #0
   27216:	beq.n	2729a <load_free_space_cache@@Base+0x5d2>
   27218:	ldr	r3, [pc, #808]	; (27544 <load_free_space_cache@@Base+0x87c>)
   2721a:	ldr	r0, [pc, #852]	; (27570 <load_free_space_cache@@Base+0x8a8>)
   2721c:	ldr.w	r3, [fp, r3]
   27220:	add	r0, pc
   27222:	ldr	r1, [r3, #0]
   27224:	blx	8b1c <fputs@plt+0x4>
   27228:	b.n	271fc <load_free_space_cache@@Base+0x534>
   2722a:	ldr	r3, [sp, #64]	; 0x40
   2722c:	mov	r1, r7
   2722e:	ldr	r2, [sp, #76]	; 0x4c
   27230:	mov	r0, r9
   27232:	orrs	r3, r2
   27234:	movw	r2, #387	; 0x183
   27238:	ite	eq
   2723a:	moveq	r3, #1
   2723c:	movne	r3, #0
   2723e:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   27242:	ldr	r3, [sp, #64]	; 0x40
   27244:	ldr	r1, [r5, #44]	; 0x2c
   27246:	movs	r0, #1
   27248:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2724c:	str	r3, [sp, #64]	; 0x40
   2724e:	ldr	r3, [sp, #76]	; 0x4c
   27250:	adc.w	r3, r3, #4294967295	; 0xffffffff
   27254:	str	r3, [sp, #76]	; 0x4c
   27256:	blx	8544 <calloc@plt+0x4>
   2725a:	str	r0, [r6, #32]
   2725c:	cmp	r0, #0
   2725e:	beq.n	271e6 <load_free_space_cache@@Base+0x51e>
   27260:	mov	r1, r6
   27262:	mov	r0, r5
   27264:	bl	2699c <btrfs_print_tree@@Base+0x5f8>
   27268:	ldr	r3, [r5, #24]
   2726a:	adds	r3, #1
   2726c:	str	r3, [r5, #24]
   2726e:	mov	sl, r0
   27270:	cbz	r0, 2728a <load_free_space_cache@@Base+0x5c2>
   27272:	ldr	r3, [pc, #720]	; (27544 <load_free_space_cache@@Base+0x87c>)
   27274:	ldr	r0, [pc, #764]	; (27574 <load_free_space_cache@@Base+0x8ac>)
   27276:	ldr.w	r3, [fp, r3]
   2727a:	add	r0, pc
   2727c:	ldr	r1, [r3, #0]
   2727e:	blx	8b1c <fputs@plt+0x4>
   27282:	ldr	r0, [r6, #32]
   27284:	blx	85dc <free@plt+0x4>
   27288:	b.n	271fc <load_free_space_cache@@Base+0x534>
   2728a:	ldr	r3, [sp, #100]	; 0x64
   2728c:	add.w	r2, r6, #36	; 0x24
   27290:	add	r1, sp, #96	; 0x60
   27292:	str	r2, [sp, #100]	; 0x64
   27294:	strd	r1, r3, [r6, #36]	; 0x24
   27298:	str	r2, [r3, #0]
   2729a:	ldr	r3, [sp, #24]
   2729c:	adds.w	r3, r3, #4294967295	; 0xffffffff
   272a0:	str	r3, [sp, #24]
   272a2:	ldr	r3, [sp, #28]
   272a4:	adc.w	r3, r3, #4294967295	; 0xffffffff
   272a8:	str	r3, [sp, #28]
   272aa:	ldrd	r2, r3, [sp, #24]
   272ae:	orrs	r3, r2
   272b0:	bne.w	27198 <load_free_space_cache@@Base+0x4d0>
   272b4:	add.w	sl, sp, #184	; 0xb8
   272b8:	add.w	r9, sp, #96	; 0x60
   272bc:	mov	r0, sl
   272be:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   272c2:	ldr	r6, [sp, #96]	; 0x60
   272c4:	ldr.w	r7, [r6], #-36
   272c8:	subs	r7, #36	; 0x24
   272ca:	add.w	r3, r6, #36	; 0x24
   272ce:	cmp	r3, r9
   272d0:	bne.n	27304 <load_free_space_cache@@Base+0x63c>
   272d2:	mov	r0, sl
   272d4:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   272d8:	ldr	r3, [r5, #44]	; 0x2c
   272da:	str	r3, [sp, #48]	; 0x30
   272dc:	ldr	r3, [pc, #664]	; (27578 <load_free_space_cache@@Base+0x8b0>)
   272de:	add	r3, pc
   272e0:	adds	r3, #75	; 0x4b
   272e2:	vmov	s16, r3
   272e6:	ldr	r3, [pc, #660]	; (2757c <load_free_space_cache@@Base+0x8b4>)
   272e8:	add	r3, pc
   272ea:	vmov	s17, r3
   272ee:	mov	r0, r5
   272f0:	movs	r6, #0
   272f2:	bl	134ee <rb_first@@Base>
   272f6:	mov	sl, r0
   272f8:	cmp.w	sl, #0
   272fc:	bne.n	27342 <load_free_space_cache@@Base+0x67a>
   272fe:	mov.w	r8, #1
   27302:	b.n	26ff6 <load_free_space_cache@@Base+0x32e>
   27304:	ldrd	r1, r2, [r6, #36]	; 0x24
   27308:	mov	r0, sl
   2730a:	str	r2, [r1, #4]
   2730c:	str	r1, [r2, #0]
   2730e:	ldr	r1, [sp, #216]	; 0xd8
   27310:	strd	r3, r3, [r6, #36]	; 0x24
   27314:	bl	267d4 <btrfs_print_tree@@Base+0x430>
   27318:	mov	r8, r0
   2731a:	cmp	r0, #0
   2731c:	bne.w	270a0 <load_free_space_cache@@Base+0x3d8>
   27320:	ldr	r3, [sp, #196]	; 0xc4
   27322:	ldr	r1, [sp, #184]	; 0xb8
   27324:	ldr	r0, [r6, #32]
   27326:	mov	r6, r7
   27328:	ldr.w	r3, [r3, #464]	; 0x1d0
   2732c:	ldr.w	r2, [r3, #388]	; 0x184
   27330:	blx	8628 <memcpy@plt+0x4>
   27334:	mov	r0, sl
   27336:	bl	26690 <btrfs_print_tree@@Base+0x2ec>
   2733a:	ldr	r3, [r7, #36]	; 0x24
   2733c:	sub.w	r7, r3, #36	; 0x24
   27340:	b.n	272ca <load_free_space_cache@@Base+0x602>
   27342:	ldr.w	r3, [sl, #32]
   27346:	cmp	r3, #0
   27348:	beq.w	27498 <load_free_space_cache@@Base+0x7d0>
   2734c:	ldrd	r2, r3, [sl, #16]
   27350:	mov	r0, r5
   27352:	strd	r2, r3, [sp, #24]
   27356:	ldr	r3, [r5, #28]
   27358:	asrs	r2, r3, #31
   2735a:	mov	r1, r3
   2735c:	strd	r1, r2, [sp, #40]	; 0x28
   27360:	ldr	r2, [sp, #48]	; 0x30
   27362:	muls	r3, r2
   27364:	ldrd	r1, r2, [sp, #24]
   27368:	lsls	r3, r3, #3
   2736a:	adds	r1, r1, r3
   2736c:	adc.w	r2, r2, #0
   27370:	strd	r1, r2, [sp, #64]	; 0x40
   27374:	mov	r1, sl
   27376:	bl	26aa4 <unlink_free_space@@Base>
   2737a:	ldrd	r2, r3, [sl, #16]
   2737e:	ldrd	r0, r1, [sp, #24]
   27382:	ldr	r6, [r5, #28]
   27384:	cmp	r3, r1
   27386:	strd	r2, r3, [sp, #32]
   2738a:	it	eq
   2738c:	cmpeq	r2, r0
   2738e:	mov	r8, r2
   27390:	mov	r9, r3
   27392:	ldrd	r2, r3, [sp, #32]
   27396:	itt	cc
   27398:	movcc	r8, r0
   2739a:	movcc	r9, r1
   2739c:	cmp	r9, r3
   2739e:	vmov	r1, s16
   273a2:	it	eq
   273a4:	cmpeq	r8, r2
   273a6:	vmov	r0, s17
   273aa:	movw	r2, #491	; 0x1eb
   273ae:	ite	cc
   273b0:	movcc	r3, #1
   273b2:	movcs	r3, #0
   273b4:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   273b8:	ldr	r1, [sp, #32]
   273ba:	mov	r2, r6
   273bc:	movs	r3, #0
   273be:	subs.w	r0, r8, r1
   273c2:	ldr	r1, [sp, #36]	; 0x24
   273c4:	sbc.w	r1, r9, r1
   273c8:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   273cc:	movs	r3, #0
   273ce:	mov	r2, r6
   273d0:	mov	r7, r0
   273d2:	ldrd	r0, r1, [sp, #40]	; 0x28
   273d6:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   273da:	ldr	r3, [r5, #44]	; 0x2c
   273dc:	ldr.w	r9, [sl, #32]
   273e0:	cmp.w	r7, r3, lsl #3
   273e4:	mov.w	r8, r3, lsl #3
   273e8:	str	r0, [sp, #40]	; 0x28
   273ea:	bcs.n	2742e <load_free_space_cache@@Base+0x766>
   273ec:	movs	r3, #0
   273ee:	mov	r2, r7
   273f0:	mov	r1, r8
   273f2:	mov	r0, r9
   273f4:	bl	2669c <btrfs_print_tree@@Base+0x2f8>
   273f8:	mov	r7, r0
   273fa:	cmp	r8, r7
   273fc:	bhi.n	2740e <load_free_space_cache@@Base+0x746>
   273fe:	ldr.w	r0, [sl, #32]
   27402:	blx	85dc <free@plt+0x4>
   27406:	mov	r0, sl
   27408:	blx	85dc <free@plt+0x4>
   2740c:	b.n	272ee <load_free_space_cache@@Base+0x626>
   2740e:	mov.w	r3, #4294967295	; 0xffffffff
   27412:	mov	r2, r7
   27414:	mov	r1, r8
   27416:	mov	r0, r9
   27418:	bl	2669c <btrfs_print_tree@@Base+0x2f8>
   2741c:	ldr	r2, [sp, #40]	; 0x28
   2741e:	subs	r3, r0, r7
   27420:	cmp	r2, r3
   27422:	bls.n	27432 <load_free_space_cache@@Base+0x76a>
   27424:	adds	r2, r0, #1
   27426:	cmp	r8, r2
   27428:	bls.n	2742e <load_free_space_cache@@Base+0x766>
   2742a:	movs	r3, #0
   2742c:	b.n	273f0 <load_free_space_cache@@Base+0x728>
   2742e:	mov	r7, r8
   27430:	b.n	273fa <load_free_space_cache@@Base+0x732>
   27432:	cmp	r3, #0
   27434:	beq.n	273fe <load_free_space_cache@@Base+0x736>
   27436:	muls	r7, r6
   27438:	ldrd	r8, r9, [sp, #32]
   2743c:	asrs	r1, r6, #31
   2743e:	mov	r0, r5
   27440:	adds.w	r8, r8, r7
   27444:	umull	r6, r7, r3, r6
   27448:	adc.w	r9, r9, #0
   2744c:	mov	r2, r8
   2744e:	mla	r7, r3, r1, r7
   27452:	mov	r3, r9
   27454:	strd	r6, r7, [sp]
   27458:	bl	26bc2 <btrfs_add_free_space@@Base>
   2745c:	ldr	r1, [pc, #288]	; (27580 <load_free_space_cache@@Base+0x8b8>)
   2745e:	movw	r2, #873	; 0x369
   27462:	add	r1, pc
   27464:	adds	r1, #89	; 0x59
   27466:	mov	r3, r0
   27468:	ldr	r0, [pc, #280]	; (27584 <load_free_space_cache@@Base+0x8bc>)
   2746a:	add	r0, pc
   2746c:	bl	26700 <btrfs_print_tree@@Base+0x35c>
   27470:	adds.w	r3, r8, r6
   27474:	str	r3, [sp, #24]
   27476:	adc.w	r3, r9, r7
   2747a:	str	r3, [sp, #28]
   2747c:	ldrd	r2, r3, [sp, #24]
   27480:	ldrd	r0, r1, [sp, #64]	; 0x40
   27484:	cmp	r3, r1
   27486:	it	eq
   27488:	cmpeq	r2, r0
   2748a:	bcs.n	273fe <load_free_space_cache@@Base+0x736>
   2748c:	ldr	r3, [r5, #28]
   2748e:	asrs	r2, r3, #31
   27490:	mov	r1, r3
   27492:	strd	r1, r2, [sp, #40]	; 0x28
   27496:	b.n	2737a <load_free_space_cache@@Base+0x6b2>
   27498:	cbz	r6, 274ee <load_free_space_cache@@Base+0x826>
   2749a:	ldrd	r2, r1, [r6, #24]
   2749e:	ldrd	r3, r0, [r6, #16]
   274a2:	adds	r3, r3, r2
   274a4:	str	r3, [sp, #80]	; 0x50
   274a6:	adc.w	r3, r0, r1
   274aa:	str	r3, [sp, #84]	; 0x54
   274ac:	ldrd	r0, r1, [sp, #80]	; 0x50
   274b0:	ldrd	r2, r3, [sl, #16]
   274b4:	cmp	r1, r3
   274b6:	it	eq
   274b8:	cmpeq	r0, r2
   274ba:	bne.n	274ee <load_free_space_cache@@Base+0x826>
   274bc:	mov	r1, r6
   274be:	mov	r0, r5
   274c0:	bl	26aa4 <unlink_free_space@@Base>
   274c4:	mov	r1, sl
   274c6:	mov	r0, r5
   274c8:	bl	26aa4 <unlink_free_space@@Base>
   274cc:	ldrd	r1, r0, [sl, #24]
   274d0:	ldrd	r3, r2, [r6, #24]
   274d4:	adds	r3, r3, r1
   274d6:	adc.w	r2, r0, r2
   274da:	mov	r0, sl
   274dc:	strd	r3, r2, [r6, #24]
   274e0:	blx	85dc <free@plt+0x4>
   274e4:	mov	r1, r6
   274e6:	mov	r0, r5
   274e8:	bl	2699c <btrfs_print_tree@@Base+0x5f8>
   274ec:	b.n	272ee <load_free_space_cache@@Base+0x626>
   274ee:	mov	r0, sl
   274f0:	mov	r6, sl
   274f2:	bl	1350e <rb_next@@Base>
   274f6:	mov	sl, r0
   274f8:	b.n	272f8 <load_free_space_cache@@Base+0x630>
   274fa:	mvn.w	r8, #11
   274fe:	b.n	26e16 <load_free_space_cache@@Base+0x14e>
   27500:	ldr	r0, [pc, #132]	; (27588 <load_free_space_cache@@Base+0x8c0>)
   27502:	mov.w	r8, #4294967295	; 0xffffffff
   27506:	add	r0, pc
   27508:	bl	17424 <__btrfs_error@@Base>
   2750c:	b.n	26ea0 <load_free_space_cache@@Base+0x1d8>
   2750e:	cmp.w	r8, #0
   27512:	bge.w	26ec0 <load_free_space_cache@@Base+0x1f8>
   27516:	ldrd	r3, r4, [sp, #56]	; 0x38
   2751a:	cmp	r3, #1
   2751c:	sbcs.w	r3, r4, #0
   27520:	bge.w	26ea0 <load_free_space_cache@@Base+0x1d8>
   27524:	b.n	26e9c <load_free_space_cache@@Base+0x1d4>
   27526:	mov	r8, r0
   27528:	b.n	26ec0 <load_free_space_cache@@Base+0x1f8>
   2752a:	mov	r0, r8
   2752c:	add	sp, #244	; 0xf4
   2752e:	vpop	{d8}
   27532:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27536:	nop
   27538:	b.n	27698 <btrfs_clear_free_space_cache@@Base+0x10c>
   2753a:	movs	r3, r0
   2753c:	lsls	r4, r4, #8
   2753e:	movs	r0, r0
   27540:	b.n	2768c <btrfs_clear_free_space_cache@@Base+0x100>
   27542:	movs	r3, r0
   27544:	lsls	r4, r6, #8
   27546:	movs	r0, r0
   27548:	strh	r0, [r0, #50]	; 0x32
   2754a:	movs	r1, r0
   2754c:	strh	r7, [r7, #54]	; 0x36
   2754e:	movs	r1, r0
   27550:	strh	r0, [r5, #60]	; 0x3c
   27552:	movs	r1, r0
   27554:	udf	#192	; 0xc0
   27556:	movs	r3, r0
   27558:	strh	r3, [r1, #42]	; 0x2a
   2755a:	movs	r1, r0
   2755c:	strh	r4, [r5, #36]	; 0x24
   2755e:	movs	r1, r0
   27560:	strh	r3, [r5, #34]	; 0x22
   27562:	movs	r1, r0
   27564:	strh	r5, [r3, #30]
   27566:	movs	r1, r0
   27568:	strh	r1, [r6, #52]	; 0x34
   2756a:	movs	r1, r0
   2756c:	strh	r4, [r0, #30]
   2756e:	movs	r1, r0
   27570:	strh	r3, [r2, #24]
   27572:	movs	r1, r0
   27574:	strh	r1, [r7, #20]
   27576:	movs	r1, r0
   27578:	strh	r3, [r4, #42]	; 0x2a
   2757a:	movs	r1, r0
   2757c:	strh	r7, [r7, #18]
   2757e:	movs	r1, r0
   27580:	strh	r7, [r3, #30]
   27582:	movs	r1, r0
   27584:	cmp	r1, #122	; 0x7a
   27586:	movs	r1, r0
   27588:	strh	r0, [r3, #6]
   2758a:	movs	r1, r0

0002758c <btrfs_clear_free_space_cache@@Base>:
   2758c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27590:	mov	fp, r1
   27592:	vpush	{d8}
   27596:	movs	r1, #1
   27598:	ldr	r2, [pc, #704]	; (2785c <btrfs_clear_free_space_cache@@Base+0x2d0>)
   2759a:	ldr	r3, [pc, #708]	; (27860 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   2759c:	add	r2, pc
   2759e:	ldr	r7, [r0, #28]
   275a0:	sub	sp, #172	; 0xac
   275a2:	ldr	r3, [r2, r3]
   275a4:	mov	r0, r7
   275a6:	ldr	r3, [r3, #0]
   275a8:	str	r3, [sp, #164]	; 0xa4
   275aa:	mov.w	r3, #0
   275ae:	bl	2af24 <btrfs_start_transaction@@Base>
   275b2:	cmn.w	r0, #4096	; 0x1000
   275b6:	mov	r5, r0
   275b8:	bls.n	275d2 <btrfs_clear_free_space_cache@@Base+0x46>
   275ba:	mov	r4, r0
   275bc:	ldr	r2, [pc, #676]	; (27864 <btrfs_clear_free_space_cache@@Base+0x2d8>)
   275be:	ldr	r3, [pc, #672]	; (27860 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   275c0:	add	r2, pc
   275c2:	ldr	r3, [r2, r3]
   275c4:	ldr	r2, [r3, #0]
   275c6:	ldr	r3, [sp, #164]	; 0xa4
   275c8:	eors	r2, r3
   275ca:	beq.w	27850 <btrfs_clear_free_space_cache@@Base+0x2c4>
   275ce:	blx	86b8 <__stack_chk_fail@plt>
   275d2:	add	r6, sp, #96	; 0x60
   275d4:	mov.w	r8, #4294967295	; 0xffffffff
   275d8:	mov.w	r9, #0
   275dc:	add.w	sl, sp, #65	; 0x41
   275e0:	mov	r0, r6
   275e2:	bl	17df0 <btrfs_init_path@@Base>
   275e6:	mvn.w	r2, #10
   275ea:	mov.w	r3, #4294967295	; 0xffffffff
   275ee:	strd	r2, r3, [sp, #56]	; 0x38
   275f2:	ldr.w	r3, [fp, #40]	; 0x28
   275f6:	mov	r1, r7
   275f8:	mov	r0, r5
   275fa:	strb.w	r9, [sp, #64]	; 0x40
   275fe:	str.w	r3, [sp, #65]	; 0x41
   27602:	ldr.w	r3, [fp, #44]	; 0x2c
   27606:	str.w	r3, [sp, #69]	; 0x45
   2760a:	add	r3, sp, #56	; 0x38
   2760c:	vmov	s17, r3
   27610:	movs	r3, #1
   27612:	strd	r8, r3, [sp]
   27616:	mov	r3, r6
   27618:	vmov	r2, s17
   2761c:	bl	1a1e4 <btrfs_search_slot@@Base>
   27620:	subs	r4, r0, #0
   27622:	bgt.w	2784c <btrfs_clear_free_space_cache@@Base+0x2c0>
   27626:	bne.n	2766a <btrfs_clear_free_space_cache@@Base+0xde>
   27628:	ldr	r0, [sp, #96]	; 0x60
   2762a:	movs	r2, #25
   2762c:	ldr	r3, [sp, #128]	; 0x80
   2762e:	add	r1, sp, #76	; 0x4c
   27630:	mla	r3, r2, r3, r0
   27634:	ldr.w	r2, [r3, #214]	; 0xd6
   27638:	movs	r3, #17
   2763a:	adds	r2, #101	; 0x65
   2763c:	bl	172c2 <read_extent_buffer@@Base>
   27640:	ldrd	r9, r3, [sp, #76]	; 0x4c
   27644:	mov	r2, r6
   27646:	mov	r1, r7
   27648:	mov	r0, r5
   2764a:	vmov	s16, r3
   2764e:	movs	r3, #1
   27650:	str	r3, [sp, #0]
   27652:	ldr	r3, [sp, #128]	; 0x80
   27654:	bl	1b3a0 <btrfs_del_items@@Base>
   27658:	subs	r4, r0, #0
   2765a:	bge.n	2767e <btrfs_clear_free_space_cache@@Base+0xf2>
   2765c:	ldr	r0, [pc, #520]	; (27868 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   2765e:	ldrd	r2, r3, [fp, #40]	; 0x28
   27662:	add	r0, pc
   27664:	str	r4, [sp, #0]
   27666:	bl	17424 <__btrfs_error@@Base>
   2766a:	add	r0, sp, #96	; 0x60
   2766c:	bl	17e00 <btrfs_release_path@@Base>
   27670:	cmp	r4, #0
   27672:	bne.n	275bc <btrfs_clear_free_space_cache@@Base+0x30>
   27674:	mov	r1, r7
   27676:	mov	r0, r5
   27678:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   2767c:	b.n	275bc <btrfs_clear_free_space_cache@@Base+0x30>
   2767e:	mov	r0, r6
   27680:	bl	17e00 <btrfs_release_path@@Base>
   27684:	mov.w	r3, #108	; 0x6c
   27688:	strb.w	r8, [sl]
   2768c:	mov	r1, r7
   2768e:	strb.w	r3, [sp, #64]	; 0x40
   27692:	mov	r0, r5
   27694:	movs	r3, #1
   27696:	strb.w	r8, [sl, #1]
   2769a:	strb.w	r8, [sl, #2]
   2769e:	strb.w	r8, [sl, #3]
   276a2:	strb.w	r8, [sl, #4]
   276a6:	strb.w	r8, [sl, #5]
   276aa:	strb.w	r8, [sl, #6]
   276ae:	strb.w	r8, [sl, #7]
   276b2:	vmov	r2, s17
   276b6:	strd	r8, r3, [sp]
   276ba:	mov	r3, r6
   276bc:	vstr	s16, [sp, #60]	; 0x3c
   276c0:	str.w	r9, [sp, #56]	; 0x38
   276c4:	bl	1a1e4 <btrfs_search_slot@@Base>
   276c8:	subs	r4, r0, #0
   276ca:	blt.n	2776c <btrfs_clear_free_space_cache@@Base+0x1e0>
   276cc:	movs	r3, #108	; 0x6c
   276ce:	str	r3, [sp, #44]	; 0x2c
   276d0:	ldr	r3, [sp, #44]	; 0x2c
   276d2:	mov	r2, r9
   276d4:	mov	r1, r6
   276d6:	mov	r0, r7
   276d8:	str	r3, [sp, #0]
   276da:	vmov	r3, s16
   276de:	bl	1b89c <btrfs_previous_item@@Base>
   276e2:	subs	r4, r0, #0
   276e4:	ble.n	27778 <btrfs_clear_free_space_cache@@Base+0x1ec>
   276e6:	mov	r0, r6
   276e8:	bl	17e00 <btrfs_release_path@@Base>
   276ec:	movs	r3, #0
   276ee:	movs	r2, #1
   276f0:	strb.w	r3, [sl, #1]
   276f4:	strb.w	r3, [sl, #2]
   276f8:	mov	r1, r7
   276fa:	strb.w	r3, [sl, #3]
   276fe:	mov	r0, r5
   27700:	strb.w	r3, [sl, #4]
   27704:	strb.w	r3, [sl, #5]
   27708:	strb.w	r3, [sl, #6]
   2770c:	strb.w	r3, [sl, #7]
   27710:	strb.w	r2, [sp, #64]	; 0x40
   27714:	strb.w	r3, [sp, #65]	; 0x41
   27718:	mov.w	r3, #4294967295	; 0xffffffff
   2771c:	str	r2, [sp, #4]
   2771e:	add	r2, sp, #56	; 0x38
   27720:	str	r3, [sp, #0]
   27722:	mov	r3, r6
   27724:	vstr	s16, [sp, #60]	; 0x3c
   27728:	str.w	r9, [sp, #56]	; 0x38
   2772c:	bl	1a1e4 <btrfs_search_slot@@Base>
   27730:	subs	r4, r0, #0
   27732:	ble.n	27834 <btrfs_clear_free_space_cache@@Base+0x2a8>
   27734:	ldr	r0, [pc, #308]	; (2786c <btrfs_clear_free_space_cache@@Base+0x2e0>)
   27736:	mov	r2, r9
   27738:	vmov	r3, s16
   2773c:	add	r0, pc
   2773e:	bl	173a8 <__btrfs_warning@@Base>
   27742:	movs	r3, #1
   27744:	mov	r2, r6
   27746:	str	r3, [sp, #0]
   27748:	mov	r1, r7
   2774a:	ldr	r3, [sp, #128]	; 0x80
   2774c:	mov	r0, r5
   2774e:	bl	1b3a0 <btrfs_del_items@@Base>
   27752:	subs	r4, r0, #0
   27754:	bge.n	2766a <btrfs_clear_free_space_cache@@Base+0xde>
   27756:	ldrd	r2, r3, [fp, #40]	; 0x28
   2775a:	ldr	r0, [pc, #276]	; (27870 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   2775c:	str	r4, [sp, #8]
   2775e:	strd	r2, r3, [sp]
   27762:	add	r0, pc
   27764:	vmov	r3, s16
   27768:	mov	r2, r9
   2776a:	b.n	2782e <btrfs_clear_free_space_cache@@Base+0x2a2>
   2776c:	ldr	r0, [pc, #260]	; (27874 <btrfs_clear_free_space_cache@@Base+0x2e8>)
   2776e:	ldrd	r2, r3, [fp, #40]	; 0x28
   27772:	add	r0, pc
   27774:	str	r4, [sp, #0]
   27776:	b.n	27666 <btrfs_clear_free_space_cache@@Base+0xda>
   27778:	beq.n	27786 <btrfs_clear_free_space_cache@@Base+0x1fa>
   2777a:	ldr	r0, [pc, #252]	; (27878 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   2777c:	ldrd	r2, r3, [fp, #40]	; 0x28
   27780:	add	r0, pc
   27782:	str	r4, [sp, #0]
   27784:	b.n	27666 <btrfs_clear_free_space_cache@@Base+0xda>
   27786:	ldr	r4, [sp, #96]	; 0x60
   27788:	ldr.w	r8, [sp, #128]	; 0x80
   2778c:	vmov	r1, s17
   27790:	mov	r0, r4
   27792:	mov	r2, r8
   27794:	bl	26a3c <btrfs_print_tree@@Base+0x698>
   27798:	add.w	r0, r4, #96	; 0x60
   2779c:	movs	r2, #25
   2779e:	ldr.w	r1, [sp, #69]	; 0x45
   277a2:	mla	r8, r2, r8, r0
   277a6:	ldr.w	r4, [r8, #118]	; 0x76
   277aa:	adds	r4, #101	; 0x65
   277ac:	add.w	ip, r0, r4
   277b0:	ldr.w	r4, [sp, #65]	; 0x41
   277b4:	mov	r3, ip
   277b6:	ldr.w	r2, [r3, #21]!
   277ba:	ldr	r3, [r3, #4]
   277bc:	vstr	s16, [sp, #28]
   277c0:	str.w	r9, [sp, #24]
   277c4:	strd	r4, r1, [sp, #32]
   277c8:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   277cc:	strd	r3, r2, [sp, #48]	; 0x30
   277d0:	strd	r0, r1, [sp, #16]
   277d4:	movs	r0, #0
   277d6:	movs	r1, #0
   277d8:	strd	r0, r1, [sp, #8]
   277dc:	mov	r0, ip
   277de:	ldr.w	r4, [r0, #29]!
   277e2:	ldr	r1, [r0, #4]
   277e4:	mov	r0, r5
   277e6:	strd	r4, r1, [sp]
   277ea:	mov	r1, r7
   277ec:	bl	20bf4 <btrfs_free_extent@@Base>
   277f0:	ldrd	r3, r2, [sp, #48]	; 0x30
   277f4:	subs	r4, r0, #0
   277f6:	bge.n	27800 <btrfs_clear_free_space_cache@@Base+0x274>
   277f8:	ldr	r0, [pc, #128]	; (2787c <btrfs_clear_free_space_cache@@Base+0x2f0>)
   277fa:	str	r4, [sp, #0]
   277fc:	add	r0, pc
   277fe:	b.n	27666 <btrfs_clear_free_space_cache@@Base+0xda>
   27800:	movs	r3, #1
   27802:	mov	r2, r6
   27804:	str	r3, [sp, #0]
   27806:	mov	r1, r7
   27808:	ldr	r3, [sp, #128]	; 0x80
   2780a:	mov	r0, r5
   2780c:	bl	1b3a0 <btrfs_del_items@@Base>
   27810:	subs	r4, r0, #0
   27812:	bge.w	276d0 <btrfs_clear_free_space_cache@@Base+0x144>
   27816:	ldr.w	r2, [sp, #65]	; 0x41
   2781a:	ldr.w	r3, [sp, #69]	; 0x45
   2781e:	ldr	r0, [pc, #96]	; (27880 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   27820:	str	r4, [sp, #8]
   27822:	strd	r2, r3, [sp]
   27826:	add	r0, pc
   27828:	vmov	r3, s16
   2782c:	mov	r2, r9
   2782e:	bl	17424 <__btrfs_error@@Base>
   27832:	b.n	2766a <btrfs_clear_free_space_cache@@Base+0xde>
   27834:	beq.n	27742 <btrfs_clear_free_space_cache@@Base+0x1b6>
   27836:	ldrd	r2, r3, [fp, #40]	; 0x28
   2783a:	ldr	r0, [pc, #72]	; (27884 <btrfs_clear_free_space_cache@@Base+0x2f8>)
   2783c:	str	r4, [sp, #8]
   2783e:	strd	r2, r3, [sp]
   27842:	add	r0, pc
   27844:	vmov	r3, s16
   27848:	mov	r2, r9
   2784a:	b.n	2782e <btrfs_clear_free_space_cache@@Base+0x2a2>
   2784c:	mov	r4, r9
   2784e:	b.n	2766a <btrfs_clear_free_space_cache@@Base+0xde>
   27850:	mov	r0, r4
   27852:	add	sp, #172	; 0xac
   27854:	vpop	{d8}
   27858:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2785c:	bvc.n	27838 <btrfs_clear_free_space_cache@@Base+0x2ac>
   2785e:	movs	r3, r0
   27860:	lsls	r4, r4, #8
   27862:	movs	r0, r0
   27864:	bvc.n	277f8 <btrfs_clear_free_space_cache@@Base+0x26c>
   27866:	movs	r3, r0
   27868:	strh	r6, [r6, #0]
   2786a:	movs	r1, r0
   2786c:	strh	r1, [r2, #2]
   2786e:	movs	r1, r0
   27870:	strh	r1, [r3, #4]
   27872:	movs	r1, r0
   27874:	ldrb	r2, [r4, #29]
   27876:	movs	r1, r0
   27878:	ldrb	r4, [r2, #29]
   2787a:	movs	r1, r0
   2787c:	ldrb	r2, [r3, #28]
   2787e:	movs	r1, r0
   27880:	ldrb	r2, [r4, #28]
   27882:	movs	r1, r0
   27884:	ldrb	r3, [r6, #29]
   27886:	movs	r1, r0
   27888:	ldr.w	ip, [pc, #76]	; 278d8 <btrfs_clear_free_space_cache@@Base+0x34c>
   2788c:	ldr	r5, [pc, #76]	; (278dc <btrfs_clear_free_space_cache@@Base+0x350>)
   2788e:	add	ip, pc
   27890:	ldr	r4, [pc, #76]	; (278e0 <btrfs_clear_free_space_cache@@Base+0x354>)
   27892:	push	{lr}
   27894:	sub	sp, #92	; 0x5c
   27896:	ldr.w	r5, [ip, r5]
   2789a:	add	r4, pc
   2789c:	ldr	r5, [r5, #0]
   2789e:	str	r5, [sp, #84]	; 0x54
   278a0:	mov.w	r5, #0
   278a4:	ldr	r5, [pc, #60]	; (278e4 <btrfs_clear_free_space_cache@@Base+0x358>)
   278a6:	ldr	r4, [r4, r5]
   278a8:	strd	r2, r1, [sp]
   278ac:	movs	r1, #1
   278ae:	strd	r0, r3, [sp, #8]
   278b2:	ldr	r2, [pc, #52]	; (278e8 <btrfs_clear_free_space_cache@@Base+0x35c>)
   278b4:	ldr	r3, [pc, #52]	; (278ec <btrfs_clear_free_space_cache@@Base+0x360>)
   278b6:	ldr	r0, [r4, #0]
   278b8:	add	r4, sp, #20
   278ba:	add	r3, pc
   278bc:	add	r2, pc
   278be:	blx	8a14 <__fprintf_chk@plt+0x4>
   278c2:	movs	r1, #16
   278c4:	mov	r0, r4
   278c6:	blx	886c <backtrace@plt>
   278ca:	movs	r2, #2
   278cc:	mov	r1, r0
   278ce:	mov	r0, r4
   278d0:	blx	8b7c <backtrace_symbols_fd@plt>
   278d4:	blx	8b34 <abort@plt>
   278d8:	bmi.n	278d0 <btrfs_clear_free_space_cache@@Base+0x344>
   278da:	movs	r3, r0
   278dc:	lsls	r4, r4, #8
   278de:	movs	r0, r0
   278e0:	bmi.n	278c0 <btrfs_clear_free_space_cache@@Base+0x334>
   278e2:	movs	r3, r0
   278e4:	lsls	r4, r6, #8
   278e6:	movs	r0, r0
   278e8:	subs	r6, r4, #3
   278ea:	movs	r1, r0
   278ec:	ldrb	r1, [r6, #31]
   278ee:	movs	r1, r0

000278f0 <btrfs_find_last_root@@Base>:
   278f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   278f4:	mov	r6, r2
   278f6:	ldr	r2, [pc, #276]	; (27a0c <btrfs_find_last_root@@Base+0x11c>)
   278f8:	mov	r7, r3
   278fa:	ldr	r3, [pc, #276]	; (27a10 <btrfs_find_last_root@@Base+0x120>)
   278fc:	sub	sp, #76	; 0x4c
   278fe:	add	r2, pc
   27900:	str	r0, [sp, #12]
   27902:	ldr	r3, [r2, r3]
   27904:	ldrd	fp, r5, [sp, #112]	; 0x70
   27908:	ldr	r3, [r3, #0]
   2790a:	str	r3, [sp, #68]	; 0x44
   2790c:	mov.w	r3, #0
   27910:	bl	17df8 <btrfs_alloc_path@@Base>
   27914:	mov	r4, r0
   27916:	cmp	r0, #0
   27918:	beq.n	279fc <btrfs_find_last_root@@Base+0x10c>
   2791a:	mov.w	r8, #0
   2791e:	mov.w	r2, #4294967295	; 0xffffffff
   27922:	movs	r3, #132	; 0x84
   27924:	strb.w	r2, [sp, #37]	; 0x25
   27928:	strb.w	r3, [sp, #36]	; 0x24
   2792c:	mov	r3, r0
   2792e:	strb.w	r2, [sp, #38]	; 0x26
   27932:	mov	r0, r8
   27934:	strb.w	r2, [sp, #39]	; 0x27
   27938:	strb.w	r2, [sp, #40]	; 0x28
   2793c:	strb.w	r2, [sp, #41]	; 0x29
   27940:	strb.w	r2, [sp, #42]	; 0x2a
   27944:	strb.w	r2, [sp, #43]	; 0x2b
   27948:	strb.w	r2, [sp, #44]	; 0x2c
   2794c:	add	r2, sp, #28
   2794e:	ldr	r1, [sp, #12]
   27950:	strd	r8, r8, [sp]
   27954:	strd	r6, r7, [sp, #28]
   27958:	bl	1a1e4 <btrfs_search_slot@@Base>
   2795c:	subs.w	r9, r0, #0
   27960:	blt.n	2796a <btrfs_find_last_root@@Base+0x7a>
   27962:	ldr	r2, [r4, #32]
   27964:	cbnz	r2, 27984 <btrfs_find_last_root@@Base+0x94>
   27966:	mvn.w	r9, #1
   2796a:	mov	r0, r4
   2796c:	bl	17e26 <btrfs_free_path@@Base>
   27970:	ldr	r2, [pc, #160]	; (27a14 <btrfs_find_last_root@@Base+0x124>)
   27972:	ldr	r3, [pc, #156]	; (27a10 <btrfs_find_last_root@@Base+0x120>)
   27974:	add	r2, pc
   27976:	ldr	r3, [r2, r3]
   27978:	ldr	r2, [r3, #0]
   2797a:	ldr	r3, [sp, #68]	; 0x44
   2797c:	eors	r2, r3
   2797e:	beq.n	27a02 <btrfs_find_last_root@@Base+0x112>
   27980:	blx	86b8 <__stack_chk_fail@plt>
   27984:	cmp.w	r9, #0
   27988:	bne.n	2799a <btrfs_find_last_root@@Base+0xaa>
   2798a:	ldr	r1, [pc, #140]	; (27a18 <btrfs_find_last_root@@Base+0x128>)
   2798c:	movs	r3, #1
   2798e:	ldr	r0, [pc, #140]	; (27a1c <btrfs_find_last_root@@Base+0x12c>)
   27990:	movs	r2, #50	; 0x32
   27992:	add	r1, pc
   27994:	add	r0, pc
   27996:	bl	27888 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2799a:	subs	r2, #1
   2799c:	movs	r3, #25
   2799e:	ldr	r0, [r4, #0]
   279a0:	add	r1, sp, #48	; 0x30
   279a2:	muls	r2, r3
   279a4:	movs	r3, #17
   279a6:	str	r0, [sp, #16]
   279a8:	adds	r2, #101	; 0x65
   279aa:	str	r2, [sp, #20]
   279ac:	bl	172c2 <read_extent_buffer@@Base>
   279b0:	ldrb.w	r9, [sp, #56]	; 0x38
   279b4:	ldr.w	r3, [sp, #61]	; 0x3d
   279b8:	cmp.w	r9, #132	; 0x84
   279bc:	ldr.w	sl, [sp, #57]	; 0x39
   279c0:	str	r3, [sp, #12]
   279c2:	ldrd	r2, r3, [sp, #48]	; 0x30
   279c6:	bne.n	27966 <btrfs_find_last_root@@Base+0x76>
   279c8:	cmp	r7, r3
   279ca:	it	eq
   279cc:	cmpeq	r6, r2
   279ce:	ldrd	r0, r2, [sp, #16]
   279d2:	bne.n	27966 <btrfs_find_last_root@@Base+0x76>
   279d4:	add	r2, r0
   279d6:	movw	r3, #439	; 0x1b7
   279da:	mov	r1, fp
   279dc:	ldr.w	r2, [r2, #113]	; 0x71
   279e0:	adds	r2, #101	; 0x65
   279e2:	bl	172c2 <read_extent_buffer@@Base>
   279e6:	ldr	r3, [sp, #12]
   279e8:	strb.w	r9, [r5, #8]
   279ec:	mov	r9, r8
   279ee:	str	r6, [r5, #0]
   279f0:	str	r7, [r5, #4]
   279f2:	str.w	sl, [r5, #9]
   279f6:	str.w	r3, [r5, #13]
   279fa:	b.n	2796a <btrfs_find_last_root@@Base+0x7a>
   279fc:	mvn.w	r9, #11
   27a00:	b.n	27970 <btrfs_find_last_root@@Base+0x80>
   27a02:	mov	r0, r9
   27a04:	add	sp, #76	; 0x4c
   27a06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a0a:	nop
   27a0c:	bmi.n	27924 <btrfs_find_last_root@@Base+0x34>
   27a0e:	movs	r3, r0
   27a10:	lsls	r4, r4, #8
   27a12:	movs	r0, r0
   27a14:	bmi.n	27a40 <btrfs_update_root@@Base+0x20>
   27a16:	movs	r3, r0
   27a18:	ldrb	r6, [r5, #28]
   27a1a:	movs	r1, r0
   27a1c:	cmp	r1, #175	; 0xaf
   27a1e:	movs	r1, r0

00027a20 <btrfs_update_root@@Base>:
   27a20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27a24:	mov	r8, r2
   27a26:	ldr	r2, [pc, #284]	; (27b44 <btrfs_update_root@@Base+0x124>)
   27a28:	mov	r6, r3
   27a2a:	ldr	r3, [pc, #284]	; (27b48 <btrfs_update_root@@Base+0x128>)
   27a2c:	sub	sp, #20
   27a2e:	add	r2, pc
   27a30:	mov	r7, r0
   27a32:	mov	fp, r1
   27a34:	ldr	r3, [r2, r3]
   27a36:	ldr	r3, [r3, #0]
   27a38:	str	r3, [sp, #12]
   27a3a:	mov.w	r3, #0
   27a3e:	bl	17df8 <btrfs_alloc_path@@Base>
   27a42:	mov	r5, r0
   27a44:	cmp	r0, #0
   27a46:	beq.n	27b34 <btrfs_update_root@@Base+0x114>
   27a48:	movs	r3, #0
   27a4a:	mov.w	r9, #1
   27a4e:	mov	r2, r8
   27a50:	strd	r3, r9, [sp]
   27a54:	mov	r1, fp
   27a56:	mov	r3, r0
   27a58:	mov	r0, r7
   27a5a:	bl	1a1e4 <btrfs_search_slot@@Base>
   27a5e:	subs	r4, r0, #0
   27a60:	blt.n	27ab6 <btrfs_update_root@@Base+0x96>
   27a62:	beq.n	27a76 <btrfs_update_root@@Base+0x56>
   27a64:	ldr	r1, [pc, #228]	; (27b4c <btrfs_update_root@@Base+0x12c>)
   27a66:	mov	r3, r9
   27a68:	ldr	r0, [pc, #228]	; (27b50 <btrfs_update_root@@Base+0x130>)
   27a6a:	movs	r2, #86	; 0x56
   27a6c:	add	r1, pc
   27a6e:	adds	r1, #21
   27a70:	add	r0, pc
   27a72:	bl	27888 <btrfs_clear_free_space_cache@@Base+0x2fc>
   27a76:	ldr	r0, [r5, #0]
   27a78:	mov.w	sl, #25
   27a7c:	ldr	r3, [r5, #32]
   27a7e:	mla	r3, sl, r3, r0
   27a82:	add.w	r2, r3, #197	; 0xc5
   27a86:	ldr.w	r3, [r3, #218]	; 0xda
   27a8a:	cmp.w	r3, #438	; 0x1b6
   27a8e:	bls.n	27ad0 <btrfs_update_root@@Base+0xb0>
   27a90:	ldr.w	r2, [r2, #17]
   27a94:	ldr.w	r1, [r6, #160]	; 0xa0
   27a98:	adds	r2, #101	; 0x65
   27a9a:	ldr.w	r3, [r6, #164]	; 0xa4
   27a9e:	str.w	r1, [r6, #239]	; 0xef
   27aa2:	mov	r1, r6
   27aa4:	str.w	r3, [r6, #243]	; 0xf3
   27aa8:	movw	r3, #439	; 0x1b7
   27aac:	bl	172d8 <write_extent_buffer@@Base>
   27ab0:	ldr	r0, [r5, #0]
   27ab2:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   27ab6:	mov	r0, r5
   27ab8:	bl	17e26 <btrfs_free_path@@Base>
   27abc:	ldr	r2, [pc, #148]	; (27b54 <btrfs_update_root@@Base+0x134>)
   27abe:	ldr	r3, [pc, #136]	; (27b48 <btrfs_update_root@@Base+0x128>)
   27ac0:	add	r2, pc
   27ac2:	ldr	r3, [r2, r3]
   27ac4:	ldr	r2, [r3, #0]
   27ac6:	ldr	r3, [sp, #12]
   27ac8:	eors	r2, r3
   27aca:	beq.n	27b3a <btrfs_update_root@@Base+0x11a>
   27acc:	blx	86b8 <__stack_chk_fail@plt>
   27ad0:	mov	r0, r5
   27ad2:	bl	17e00 <btrfs_release_path@@Base>
   27ad6:	mov.w	r3, #4294967295	; 0xffffffff
   27ada:	mov	r2, r8
   27adc:	str	r3, [sp, #0]
   27ade:	mov	r1, fp
   27ae0:	mov	r3, r5
   27ae2:	mov	r0, r7
   27ae4:	str.w	r9, [sp, #4]
   27ae8:	bl	1a1e4 <btrfs_search_slot@@Base>
   27aec:	subs	r4, r0, #0
   27aee:	blt.n	27ab6 <btrfs_update_root@@Base+0x96>
   27af0:	str.w	r9, [sp]
   27af4:	mov	r2, r5
   27af6:	ldr	r3, [r5, #32]
   27af8:	mov	r1, fp
   27afa:	mov	r0, r7
   27afc:	bl	1b3a0 <btrfs_del_items@@Base>
   27b00:	subs	r4, r0, #0
   27b02:	blt.n	27ab6 <btrfs_update_root@@Base+0x96>
   27b04:	mov	r0, r5
   27b06:	bl	17e00 <btrfs_release_path@@Base>
   27b0a:	movw	r3, #439	; 0x1b7
   27b0e:	mov	r2, r5
   27b10:	strd	r9, r3, [sp, #4]
   27b14:	mov	r1, fp
   27b16:	add	r3, sp, #8
   27b18:	mov	r0, r7
   27b1a:	str	r3, [sp, #0]
   27b1c:	mov	r3, r8
   27b1e:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   27b22:	subs	r4, r0, #0
   27b24:	blt.n	27ab6 <btrfs_update_root@@Base+0x96>
   27b26:	ldr	r0, [r5, #0]
   27b28:	ldr	r3, [r5, #32]
   27b2a:	mla	r3, sl, r3, r0
   27b2e:	ldr.w	r2, [r3, #214]	; 0xd6
   27b32:	b.n	27a94 <btrfs_update_root@@Base+0x74>
   27b34:	mvn.w	r4, #11
   27b38:	b.n	27abc <btrfs_update_root@@Base+0x9c>
   27b3a:	mov	r0, r4
   27b3c:	add	sp, #20
   27b3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b42:	nop
   27b44:	bcc.n	27bfc <btrfs_add_root_ref@@Base+0x2c>
   27b46:	movs	r3, r0
   27b48:	lsls	r4, r4, #8
   27b4a:	movs	r0, r0
   27b4c:	ldrb	r4, [r2, #25]
   27b4e:	movs	r1, r0
   27b50:	ldrb	r7, [r0, #25]
   27b52:	movs	r1, r0
   27b54:	bcs.n	27ae8 <btrfs_update_root@@Base+0xc8>
   27b56:	movs	r3, r0

00027b58 <btrfs_insert_root@@Base>:
   27b58:	push	{r0, r1, r4, r5, r6, lr}
   27b5a:	movw	r4, #439	; 0x1b7
   27b5e:	ldr.w	r6, [r3, #160]	; 0xa0
   27b62:	ldr.w	r5, [r3, #164]	; 0xa4
   27b66:	str	r4, [sp, #0]
   27b68:	str.w	r6, [r3, #239]	; 0xef
   27b6c:	str.w	r5, [r3, #243]	; 0xf3
   27b70:	bl	1b270 <btrfs_insert_item@@Base>
   27b74:	add	sp, #8
   27b76:	pop	{r4, r5, r6, pc}

00027b78 <btrfs_del_root@@Base>:
   27b78:	push	{r4, r5, r6, r7, lr}
   27b7a:	sub	sp, #20
   27b7c:	mov	r6, r0
   27b7e:	strd	r2, r1, [sp, #8]
   27b82:	bl	17df8 <btrfs_alloc_path@@Base>
   27b86:	mov	r5, r0
   27b88:	cbz	r0, 27bca <btrfs_del_root@@Base+0x52>
   27b8a:	ldrd	r2, r1, [sp, #8]
   27b8e:	mov.w	r3, #4294967295	; 0xffffffff
   27b92:	movs	r7, #1
   27b94:	strd	r3, r7, [sp]
   27b98:	mov	r3, r0
   27b9a:	mov	r0, r6
   27b9c:	str	r1, [sp, #8]
   27b9e:	bl	1a1e4 <btrfs_search_slot@@Base>
   27ba2:	subs	r4, r0, #0
   27ba4:	blt.n	27bb8 <btrfs_del_root@@Base+0x40>
   27ba6:	bne.n	27bc4 <btrfs_del_root@@Base+0x4c>
   27ba8:	str	r7, [sp, #0]
   27baa:	mov	r2, r5
   27bac:	ldr	r3, [r5, #32]
   27bae:	mov	r0, r6
   27bb0:	ldr	r1, [sp, #8]
   27bb2:	bl	1b3a0 <btrfs_del_items@@Base>
   27bb6:	mov	r4, r0
   27bb8:	mov	r0, r5
   27bba:	bl	17e26 <btrfs_free_path@@Base>
   27bbe:	mov	r0, r4
   27bc0:	add	sp, #20
   27bc2:	pop	{r4, r5, r6, r7, pc}
   27bc4:	mvn.w	r4, #1
   27bc8:	b.n	27bb8 <btrfs_del_root@@Base+0x40>
   27bca:	mvn.w	r4, #11
   27bce:	b.n	27bbe <btrfs_del_root@@Base+0x46>

00027bd0 <btrfs_add_root_ref@@Base>:
   27bd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27bd4:	sub	sp, #68	; 0x44
   27bd6:	mov	r7, r3
   27bd8:	mov	fp, r2
   27bda:	ldr	r3, [sp, #116]	; 0x74
   27bdc:	mov	r6, r0
   27bde:	ldr	r2, [sp, #112]	; 0x70
   27be0:	str	r1, [sp, #28]
   27be2:	str	r3, [sp, #20]
   27be4:	ldr	r3, [sp, #128]	; 0x80
   27be6:	str	r2, [sp, #24]
   27be8:	ldr	r2, [pc, #208]	; (27cbc <btrfs_add_root_ref@@Base+0xec>)
   27bea:	str	r3, [sp, #12]
   27bec:	ldr	r3, [sp, #132]	; 0x84
   27bee:	add	r2, pc
   27bf0:	ldrd	sl, r9, [sp, #120]	; 0x78
   27bf4:	ldrd	r8, r5, [sp, #136]	; 0x88
   27bf8:	str	r3, [sp, #16]
   27bfa:	ldr	r3, [pc, #196]	; (27cc0 <btrfs_add_root_ref@@Base+0xf0>)
   27bfc:	ldr	r3, [r2, r3]
   27bfe:	ldr	r3, [r3, #0]
   27c00:	str	r3, [sp, #60]	; 0x3c
   27c02:	mov.w	r3, #0
   27c06:	bl	17df8 <btrfs_alloc_path@@Base>
   27c0a:	mov	r4, r0
   27c0c:	cmp	r0, #0
   27c0e:	beq.n	27cae <btrfs_add_root_ref@@Base+0xde>
   27c10:	ldrb.w	r0, [sp, #104]	; 0x68
   27c14:	ldr	r2, [sp, #24]
   27c16:	ldr	r3, [sp, #20]
   27c18:	strb.w	r0, [sp, #48]	; 0x30
   27c1c:	mov	r0, r6
   27c1e:	str.w	r2, [sp, #49]	; 0x31
   27c22:	mov	r2, r4
   27c24:	str.w	r3, [sp, #53]	; 0x35
   27c28:	add.w	r3, r5, #18
   27c2c:	ldr	r1, [sp, #28]
   27c2e:	str	r3, [sp, #36]	; 0x24
   27c30:	movs	r3, #1
   27c32:	str	r3, [sp, #4]
   27c34:	add	r3, sp, #36	; 0x24
   27c36:	str	r3, [sp, #0]
   27c38:	add	r3, sp, #40	; 0x28
   27c3a:	strd	fp, r7, [sp, #40]	; 0x28
   27c3e:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   27c42:	mov	r6, r0
   27c44:	cbz	r0, 27c58 <btrfs_add_root_ref@@Base+0x88>
   27c46:	ldr	r1, [pc, #124]	; (27cc4 <btrfs_add_root_ref@@Base+0xf4>)
   27c48:	mov	r3, r0
   27c4a:	ldr	r0, [pc, #124]	; (27cc8 <btrfs_add_root_ref@@Base+0xf8>)
   27c4c:	movs	r2, #209	; 0xd1
   27c4e:	add	r1, pc
   27c50:	adds	r1, #39	; 0x27
   27c52:	add	r0, pc
   27c54:	bl	27888 <btrfs_clear_free_space_cache@@Base+0x2fc>
   27c58:	ldr	r0, [r4, #0]
   27c5a:	movs	r2, #25
   27c5c:	ldr	r3, [r4, #32]
   27c5e:	add.w	r1, r0, #96	; 0x60
   27c62:	mla	r3, r2, r3, r1
   27c66:	ldr.w	r2, [r3, #118]	; 0x76
   27c6a:	add.w	r7, r2, #101	; 0x65
   27c6e:	adds	r2, #119	; 0x77
   27c70:	adds	r3, r1, r7
   27c72:	str.w	sl, [r1, r7]
   27c76:	ldr	r1, [sp, #12]
   27c78:	str.w	r9, [r3, #4]
   27c7c:	strh	r5, [r3, #16]
   27c7e:	str	r1, [r3, #8]
   27c80:	ldr	r1, [sp, #16]
   27c82:	str	r0, [sp, #12]
   27c84:	str	r1, [r3, #12]
   27c86:	mov	r3, r5
   27c88:	mov	r1, r8
   27c8a:	bl	172d8 <write_extent_buffer@@Base>
   27c8e:	ldr	r0, [sp, #12]
   27c90:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   27c94:	mov	r0, r4
   27c96:	bl	17e26 <btrfs_free_path@@Base>
   27c9a:	ldr	r2, [pc, #48]	; (27ccc <btrfs_add_root_ref@@Base+0xfc>)
   27c9c:	ldr	r3, [pc, #32]	; (27cc0 <btrfs_add_root_ref@@Base+0xf0>)
   27c9e:	add	r2, pc
   27ca0:	ldr	r3, [r2, r3]
   27ca2:	ldr	r2, [r3, #0]
   27ca4:	ldr	r3, [sp, #60]	; 0x3c
   27ca6:	eors	r2, r3
   27ca8:	beq.n	27cb4 <btrfs_add_root_ref@@Base+0xe4>
   27caa:	blx	86b8 <__stack_chk_fail@plt>
   27cae:	mvn.w	r6, #11
   27cb2:	b.n	27c9a <btrfs_add_root_ref@@Base+0xca>
   27cb4:	mov	r0, r6
   27cb6:	add	sp, #68	; 0x44
   27cb8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cbc:	bne.n	27bf4 <btrfs_add_root_ref@@Base+0x24>
   27cbe:	movs	r3, r0
   27cc0:	lsls	r4, r4, #8
   27cc2:	movs	r0, r0
   27cc4:	ldrb	r2, [r6, #17]
   27cc6:	movs	r1, r0
   27cc8:	movs	r1, #146	; 0x92
   27cca:	movs	r1, r0
   27ccc:	beq.n	27ca4 <btrfs_add_root_ref@@Base+0xd4>
   27cce:	movs	r3, r0
   27cd0:	push	{r4, r5, lr}
   27cd2:	movs	r1, #0
   27cd4:	ldr	r4, [r0, #40]	; 0x28
   27cd6:	mov	r3, r1
   27cd8:	ldr	r5, [r0, #64]	; 0x40
   27cda:	and.w	r2, r4, #128	; 0x80
   27cde:	orrs	r3, r2
   27ce0:	bne.n	27cf4 <btrfs_add_root_ref@@Base+0x124>
   27ce2:	and.w	r2, r4, #256	; 0x100
   27ce6:	mov	r3, r1
   27ce8:	orrs	r3, r2
   27cea:	ite	ne
   27cec:	movne	r0, #2
   27cee:	moveq	r0, r1
   27cf0:	subs	r0, r5, r0
   27cf2:	pop	{r4, r5, pc}
   27cf4:	movs	r0, #1
   27cf6:	b.n	27cf0 <btrfs_add_root_ref@@Base+0x120>
   27cf8:	push	{r3, r4, r5, r6, r7, lr}
   27cfa:	mov	r6, r0
   27cfc:	ldr	r3, [pc, #40]	; (27d28 <btrfs_add_root_ref@@Base+0x158>)
   27cfe:	add	r3, pc
   27d00:	ldr	r4, [r3, #0]
   27d02:	mov	r5, r3
   27d04:	subs	r4, #80	; 0x50
   27d06:	add.w	r3, r4, #80	; 0x50
   27d0a:	cmp	r5, r3
   27d0c:	bne.n	27d14 <btrfs_add_root_ref@@Base+0x144>
   27d0e:	movs	r4, #0
   27d10:	mov	r0, r4
   27d12:	pop	{r3, r4, r5, r6, r7, pc}
   27d14:	movs	r2, #16
   27d16:	mov	r1, r4
   27d18:	mov	r0, r6
   27d1a:	blx	8650 <memcmp@plt+0x4>
   27d1e:	cmp	r0, #0
   27d20:	beq.n	27d10 <btrfs_add_root_ref@@Base+0x140>
   27d22:	ldr	r4, [r4, #80]	; 0x50
   27d24:	subs	r4, #80	; 0x50
   27d26:	b.n	27d06 <btrfs_add_root_ref@@Base+0x136>
   27d28:	b.n	276a0 <btrfs_clear_free_space_cache@@Base+0x114>
   27d2a:	movs	r3, r0
   27d2c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   27d30:	add.w	r8, r0, #72	; 0x48
   27d34:	ldr	r5, [sp, #24]
   27d36:	mov	r6, r2
   27d38:	ldr	r4, [r0, #72]	; 0x48
   27d3a:	mov	r7, r3
   27d3c:	cmp	r4, r8
   27d3e:	bne.n	27d48 <btrfs_add_root_ref@@Base+0x178>
   27d40:	movs	r4, #0
   27d42:	mov	r0, r4
   27d44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   27d48:	ldrd	r2, r3, [r4, #64]	; 0x40
   27d4c:	cmp	r3, r7
   27d4e:	it	eq
   27d50:	cmpeq	r2, r6
   27d52:	bne.n	27d68 <btrfs_add_root_ref@@Base+0x198>
   27d54:	cmp	r5, #0
   27d56:	beq.n	27d42 <btrfs_add_root_ref@@Base+0x172>
   27d58:	add.w	r0, r4, #112	; 0x70
   27d5c:	movs	r2, #16
   27d5e:	mov	r1, r5
   27d60:	blx	8650 <memcmp@plt+0x4>
   27d64:	cmp	r0, #0
   27d66:	beq.n	27d42 <btrfs_add_root_ref@@Base+0x172>
   27d68:	ldr	r4, [r4, #0]
   27d6a:	b.n	27d3c <btrfs_add_root_ref@@Base+0x16c>
   27d6c:	push	{r3, r4, r5, r6, r7, lr}
   27d6e:	mov	r1, r0
   27d70:	mov	r5, r3
   27d72:	and.w	r6, r1, #1584	; 0x630
   27d76:	movs	r3, #0
   27d78:	mov	r4, r2
   27d7a:	mov	r7, r3
   27d7c:	orrs.w	r2, r6, r7
   27d80:	ldr	r0, [sp, #24]
   27d82:	bne.n	27da2 <btrfs_add_root_ref@@Base+0x1d2>
   27d84:	and.w	r6, r1, #64	; 0x40
   27d88:	orrs.w	r2, r6, r7
   27d8c:	beq.n	27da8 <btrfs_add_root_ref@@Base+0x1d8>
   27d8e:	ldr	r1, [sp, #28]
   27d90:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   27d94:	asrs	r3, r0, #31
   27d96:	muls	r3, r4
   27d98:	mla	r3, r0, r5, r3
   27d9c:	umull	r4, r5, r4, r0
   27da0:	add	r5, r3
   27da2:	mov	r0, r4
   27da4:	mov	r1, r5
   27da6:	pop	{r3, r4, r5, r6, r7, pc}
   27da8:	and.w	r6, r1, #128	; 0x80
   27dac:	orrs.w	r2, r6, r7
   27db0:	beq.n	27db6 <btrfs_add_root_ref@@Base+0x1e6>
   27db2:	subs	r0, #1
   27db4:	b.n	27d94 <btrfs_add_root_ref@@Base+0x1c4>
   27db6:	and.w	r6, r1, #256	; 0x100
   27dba:	orrs.w	r3, r6, r7
   27dbe:	it	ne
   27dc0:	subne	r0, #2
   27dc2:	b.n	27d94 <btrfs_add_root_ref@@Base+0x1c4>
   27dc4:	ldr.w	ip, [pc, #76]	; 27e14 <btrfs_add_root_ref@@Base+0x244>
   27dc8:	ldr	r5, [pc, #76]	; (27e18 <btrfs_add_root_ref@@Base+0x248>)
   27dca:	add	ip, pc
   27dcc:	ldr	r4, [pc, #76]	; (27e1c <btrfs_add_root_ref@@Base+0x24c>)
   27dce:	push	{lr}
   27dd0:	sub	sp, #92	; 0x5c
   27dd2:	ldr.w	r5, [ip, r5]
   27dd6:	add	r4, pc
   27dd8:	ldr	r5, [r5, #0]
   27dda:	str	r5, [sp, #84]	; 0x54
   27ddc:	mov.w	r5, #0
   27de0:	ldr	r5, [pc, #60]	; (27e20 <btrfs_add_root_ref@@Base+0x250>)
   27de2:	ldr	r4, [r4, r5]
   27de4:	ldr	r5, [sp, #96]	; 0x60
   27de6:	strd	r3, r2, [sp]
   27dea:	mov	r3, r1
   27dec:	ldr	r2, [pc, #52]	; (27e24 <btrfs_add_root_ref@@Base+0x254>)
   27dee:	movs	r1, #1
   27df0:	strd	r0, r5, [sp, #8]
   27df4:	ldr	r0, [r4, #0]
   27df6:	add	r4, sp, #20
   27df8:	add	r2, pc
   27dfa:	blx	8a14 <__fprintf_chk@plt+0x4>
   27dfe:	movs	r1, #16
   27e00:	mov	r0, r4
   27e02:	blx	886c <backtrace@plt>
   27e06:	movs	r2, #2
   27e08:	mov	r1, r0
   27e0a:	mov	r0, r4
   27e0c:	blx	8b7c <backtrace_symbols_fd@plt>
   27e10:	blx	8b34 <abort@plt>
   27e14:	ldmia	r7, {r1, r2, r3, r4, r5, r7}
   27e16:	movs	r3, r0
   27e18:	lsls	r4, r4, #8
   27e1a:	movs	r0, r0
   27e1c:	ldmia	r7, {r1, r4, r5, r7}
   27e1e:	movs	r3, r0
   27e20:	lsls	r4, r6, #8
   27e22:	movs	r0, r0
   27e24:	adds	r2, r5, r6
   27e26:	movs	r1, r0
   27e28:	push	{r0, r1, r4, lr}
   27e2a:	ldr	r4, [sp, #16]
   27e2c:	cbz	r4, 27e34 <btrfs_add_root_ref@@Base+0x264>
   27e2e:	str	r4, [sp, #0]
   27e30:	bl	27dc4 <btrfs_add_root_ref@@Base+0x1f4>
   27e34:	add	sp, #8
   27e36:	pop	{r4, pc}
   27e38:	push	{r0, r1, r4, lr}
   27e3a:	mov	r4, r0
   27e3c:	clz	r0, r0
   27e40:	ldr	r2, [pc, #28]	; (27e60 <btrfs_add_root_ref@@Base+0x290>)
   27e42:	ldr	r1, [pc, #32]	; (27e64 <btrfs_add_root_ref@@Base+0x294>)
   27e44:	mov.w	r3, #322	; 0x142
   27e48:	lsrs	r0, r0, #5
   27e4a:	str	r0, [sp, #0]
   27e4c:	ldr	r0, [pc, #24]	; (27e68 <btrfs_add_root_ref@@Base+0x298>)
   27e4e:	add	r2, pc
   27e50:	add	r1, pc
   27e52:	add	r0, pc
   27e54:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   27e58:	lsls	r0, r4, #5
   27e5a:	adds	r0, #48	; 0x30
   27e5c:	add	sp, #8
   27e5e:	pop	{r4, pc}
   27e60:	strh	r6, [r5, #16]
   27e62:	movs	r1, r0
   27e64:	movs	r1, #68	; 0x44
   27e66:	movs	r1, r0
   27e68:	ldrh	r6, [r0, r2]
   27e6a:	movs	r1, r0
   27e6c:	push	{r4, lr}
   27e6e:	mov	r4, r1
   27e70:	ldr	r1, [pc, #84]	; (27ec8 <btrfs_add_root_ref@@Base+0x2f8>)
   27e72:	sub	sp, #24
   27e74:	ldr	r3, [pc, #84]	; (27ecc <btrfs_add_root_ref@@Base+0x2fc>)
   27e76:	add	r1, pc
   27e78:	ldr	r3, [r1, r3]
   27e7a:	mov	r1, sp
   27e7c:	ldr	r3, [r3, #0]
   27e7e:	str	r3, [sp, #20]
   27e80:	mov.w	r3, #0
   27e84:	movs	r3, #25
   27e86:	muls	r2, r3
   27e88:	movs	r3, #17
   27e8a:	adds	r2, #101	; 0x65
   27e8c:	bl	172c2 <read_extent_buffer@@Base>
   27e90:	ldr.w	r3, [sp, #13]
   27e94:	ldr.w	r2, [sp, #9]
   27e98:	str.w	r3, [r4, #13]
   27e9c:	ldrb.w	r3, [sp, #8]
   27ea0:	str.w	r2, [r4, #9]
   27ea4:	ldr	r2, [pc, #40]	; (27ed0 <btrfs_add_root_ref@@Base+0x300>)
   27ea6:	strb	r3, [r4, #8]
   27ea8:	ldr	r3, [sp, #0]
   27eaa:	add	r2, pc
   27eac:	str	r3, [r4, #0]
   27eae:	ldr	r3, [sp, #4]
   27eb0:	str	r3, [r4, #4]
   27eb2:	ldr	r3, [pc, #24]	; (27ecc <btrfs_add_root_ref@@Base+0x2fc>)
   27eb4:	ldr	r3, [r2, r3]
   27eb6:	ldr	r2, [r3, #0]
   27eb8:	ldr	r3, [sp, #20]
   27eba:	eors	r2, r3
   27ebc:	beq.n	27ec2 <btrfs_add_root_ref@@Base+0x2f2>
   27ebe:	blx	86b8 <__stack_chk_fail@plt>
   27ec2:	add	sp, #24
   27ec4:	pop	{r4, pc}
   27ec6:	nop
   27ec8:	ldmia	r7!, {r1, r4}
   27eca:	movs	r3, r0
   27ecc:	lsls	r4, r4, #8
   27ece:	movs	r0, r0
   27ed0:	ldmia	r6, {r1, r2, r3, r4, r6, r7}
   27ed2:	movs	r3, r0

00027ed4 <btrfs_close_devices@@Base>:
   27ed4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ed8:	sub	sp, #20
   27eda:	ldr.w	sl, [pc, #188]	; 27f98 <btrfs_close_devices@@Base+0xc4>
   27ede:	mov	r4, r0
   27ee0:	ldr	r7, [pc, #184]	; (27f9c <btrfs_close_devices@@Base+0xc8>)
   27ee2:	movs	r6, #0
   27ee4:	add	sl, pc
   27ee6:	mov.w	r8, #0
   27eea:	mov.w	r9, #0
   27eee:	add	r7, pc
   27ef0:	cmp	r4, #0
   27ef2:	beq.n	27f92 <btrfs_close_devices@@Base+0xbe>
   27ef4:	ldr.w	fp, [pc, #168]	; 27fa0 <btrfs_close_devices@@Base+0xcc>
   27ef8:	add	fp, pc
   27efa:	mov	r3, r4
   27efc:	ldr.w	r5, [r3, #72]!
   27f00:	cmp	r5, r3
   27f02:	bne.n	27f20 <btrfs_close_devices@@Base+0x4c>
   27f04:	ldr	r5, [r4, #92]	; 0x5c
   27f06:	movs	r3, #0
   27f08:	str	r3, [r4, #92]	; 0x5c
   27f0a:	mov	r0, r4
   27f0c:	ldrd	r2, r3, [r4, #80]	; 0x50
   27f10:	str	r3, [r2, #4]
   27f12:	str	r2, [r3, #0]
   27f14:	cmp	r5, #0
   27f16:	beq.n	27f86 <btrfs_close_devices@@Base+0xb2>
   27f18:	blx	85dc <free@plt+0x4>
   27f1c:	mov	r4, r5
   27f1e:	b.n	27ef0 <btrfs_close_devices@@Base+0x1c>
   27f20:	ldr	r0, [r5, #24]
   27f22:	adds	r3, r0, #1
   27f24:	beq.n	27f6a <btrfs_close_devices@@Base+0x96>
   27f26:	ldr	r3, [r5, #28]
   27f28:	cbz	r3, 27f44 <btrfs_close_devices@@Base+0x70>
   27f2a:	blx	855c <fsync@plt>
   27f2e:	adds	r0, #1
   27f30:	bne.n	27f44 <btrfs_close_devices@@Base+0x70>
   27f32:	ldrd	r2, r3, [r5, #64]	; 0x40
   27f36:	mov	r0, fp
   27f38:	bl	173a8 <__btrfs_warning@@Base>
   27f3c:	blx	8938 <__errno_location@plt>
   27f40:	ldr	r6, [r0, #0]
   27f42:	negs	r6, r6
   27f44:	movs	r3, #4
   27f46:	strd	r8, r9, [sp]
   27f4a:	str	r3, [sp, #8]
   27f4c:	movs	r2, #0
   27f4e:	ldr	r0, [r5, #24]
   27f50:	movs	r3, #0
   27f52:	blx	858c <posix_fadvise64@plt>
   27f56:	cbz	r0, 27f64 <btrfs_close_devices@@Base+0x90>
   27f58:	ldr	r3, [pc, #72]	; (27fa4 <btrfs_close_devices@@Base+0xd0>)
   27f5a:	mov	r0, sl
   27f5c:	ldr	r3, [r7, r3]
   27f5e:	ldr	r1, [r3, #0]
   27f60:	blx	8b1c <fputs@plt+0x4>
   27f64:	ldr	r0, [r5, #24]
   27f66:	blx	8b4c <close@plt>
   27f6a:	ldrd	r2, r3, [r5]
   27f6e:	str	r3, [r2, #4]
   27f70:	str	r2, [r3, #0]
   27f72:	ldr	r0, [r5, #32]
   27f74:	blx	85dc <free@plt+0x4>
   27f78:	ldr	r0, [r5, #36]	; 0x24
   27f7a:	blx	85dc <free@plt+0x4>
   27f7e:	mov	r0, r5
   27f80:	blx	85dc <free@plt+0x4>
   27f84:	b.n	27efa <btrfs_close_devices@@Base+0x26>
   27f86:	blx	85dc <free@plt+0x4>
   27f8a:	mov	r0, r6
   27f8c:	add	sp, #20
   27f8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f92:	mov	r6, r4
   27f94:	b.n	27f8a <btrfs_close_devices@@Base+0xb6>
   27f96:	nop
   27f98:	strh	r7, [r4, r1]
   27f9a:	movs	r1, r0
   27f9c:	ldmia	r6!, {r1, r3, r4, r7}
   27f9e:	movs	r3, r0
   27fa0:	ldrb	r2, [r0, #8]
   27fa2:	movs	r1, r0
   27fa4:	lsls	r4, r6, #8
	...

00027fa8 <btrfs_close_all_devices@@Base>:
   27fa8:	push	{r4, lr}
   27faa:	ldr	r4, [pc, #20]	; (27fc0 <btrfs_close_all_devices@@Base+0x18>)
   27fac:	add	r4, pc
   27fae:	ldr	r0, [r4, #0]
   27fb0:	cmp	r0, r4
   27fb2:	bne.n	27fb6 <btrfs_close_all_devices@@Base+0xe>
   27fb4:	pop	{r4, pc}
   27fb6:	subs	r0, #80	; 0x50
   27fb8:	bl	27ed4 <btrfs_close_devices@@Base>
   27fbc:	b.n	27fae <btrfs_close_all_devices@@Base+0x6>
   27fbe:	nop
   27fc0:	b.n	283dc <btrfs_insert_dev_extent@@Base+0xa8>
   27fc2:	movs	r3, r0

00027fc4 <btrfs_open_devices@@Base>:
   27fc4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   27fc8:	mov	r5, r0
   27fca:	ldr.w	sl, [pc, #180]	; 28080 <btrfs_open_devices@@Base+0xbc>
   27fce:	mov	r8, r1
   27fd0:	ldr.w	r9, [pc, #176]	; 28084 <btrfs_open_devices@@Base+0xc0>
   27fd4:	ldr	r4, [r0, #72]	; 0x48
   27fd6:	add	sl, pc
   27fd8:	ldr	r6, [pc, #172]	; (28088 <btrfs_open_devices@@Base+0xc4>)
   27fda:	add	r9, pc
   27fdc:	add	r6, pc
   27fde:	add.w	r3, r5, #72	; 0x48
   27fe2:	cmp	r4, r3
   27fe4:	bne.n	27fea <btrfs_open_devices@@Base+0x26>
   27fe6:	movs	r6, #0
   27fe8:	b.n	2802a <btrfs_open_devices@@Base+0x66>
   27fea:	ldr	r0, [r4, #32]
   27fec:	cbnz	r0, 28008 <btrfs_open_devices@@Base+0x44>
   27fee:	ldr	r3, [pc, #156]	; (2808c <btrfs_open_devices@@Base+0xc8>)
   27ff0:	mov	r2, r9
   27ff2:	ldrd	r0, r1, [r4, #64]	; 0x40
   27ff6:	ldr	r3, [r6, r3]
   27ff8:	strd	r0, r1, [sp]
   27ffc:	movs	r1, #1
   27ffe:	ldr	r0, [r3, #0]
   28000:	blx	8a14 <__fprintf_chk@plt+0x4>
   28004:	ldr	r4, [r4, #0]
   28006:	b.n	27fde <btrfs_open_devices@@Base+0x1a>
   28008:	mov	r1, r8
   2800a:	blx	892c <__open64_2@plt>
   2800e:	subs	r7, r0, #0
   28010:	bge.n	28032 <btrfs_open_devices@@Base+0x6e>
   28012:	blx	8938 <__errno_location@plt>
   28016:	ldr	r1, [r4, #32]
   28018:	ldr	r6, [r0, #0]
   2801a:	ldr	r0, [pc, #116]	; (28090 <btrfs_open_devices@@Base+0xcc>)
   2801c:	negs	r6, r6
   2801e:	add	r0, pc
   28020:	bl	17424 <__btrfs_error@@Base>
   28024:	mov	r0, r5
   28026:	bl	27ed4 <btrfs_close_devices@@Base>
   2802a:	mov	r0, r6
   2802c:	add	sp, #16
   2802e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   28032:	movs	r3, #4
   28034:	movs	r2, #0
   28036:	str	r3, [sp, #8]
   28038:	movs	r3, #0
   2803a:	strd	r2, r3, [sp]
   2803e:	blx	858c <posix_fadvise64@plt>
   28042:	cbz	r0, 28050 <btrfs_open_devices@@Base+0x8c>
   28044:	ldr	r3, [pc, #68]	; (2808c <btrfs_open_devices@@Base+0xc8>)
   28046:	mov	r0, sl
   28048:	ldr	r3, [r6, r3]
   2804a:	ldr	r1, [r3, #0]
   2804c:	blx	8b1c <fputs@plt+0x4>
   28050:	ldrd	r0, r1, [r4, #64]	; 0x40
   28054:	ldrd	r2, r3, [r5, #32]
   28058:	cmp	r1, r3
   2805a:	it	eq
   2805c:	cmpeq	r0, r2
   2805e:	ldrd	r2, r3, [r5, #48]	; 0x30
   28062:	it	eq
   28064:	streq	r7, [r5, #64]	; 0x40
   28066:	ldrd	r0, r1, [r4, #64]	; 0x40
   2806a:	cmp	r1, r3
   2806c:	itt	eq
   2806e:	cmpeq	r0, r2
   28070:	streq	r7, [r5, #68]	; 0x44
   28072:	tst.w	r8, #2
   28076:	str	r7, [r4, #24]
   28078:	itt	ne
   2807a:	movne	r3, #1
   2807c:	strne	r3, [r4, #28]
   2807e:	b.n	28004 <btrfs_open_devices@@Base+0x40>
   28080:	str	r5, [r6, r5]
   28082:	movs	r1, r0
   28084:	ldrb	r0, [r0, #5]
   28086:	movs	r1, r0
   28088:	ldmia	r5, {r2, r3, r5, r7}
   2808a:	movs	r3, r0
   2808c:	lsls	r4, r6, #8
   2808e:	movs	r0, r0
   28090:	ldrb	r2, [r4, #4]
   28092:	movs	r1, r0

00028094 <btrfs_scan_one_device@@Base>:
   28094:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28098:	sub.w	sp, sp, #4128	; 0x1020
   2809c:	sub	sp, #12
   2809e:	mov	sl, r1
   280a0:	ldr	r1, [pc, #636]	; (28320 <btrfs_scan_one_device@@Base+0x28c>)
   280a2:	mov	r4, r3
   280a4:	str	r2, [sp, #28]
   280a6:	add.w	r3, sp, #4128	; 0x1020
   280aa:	ldr	r2, [pc, #632]	; (28324 <btrfs_scan_one_device@@Base+0x290>)
   280ac:	add	r1, pc
   280ae:	adds	r3, #4
   280b0:	add.w	fp, sp, #40	; 0x28
   280b4:	sub.w	r5, fp, #4
   280b8:	ldr	r2, [r1, r2]
   280ba:	mov	r1, r5
   280bc:	ldr	r2, [r2, #0]
   280be:	str	r2, [r3, #0]
   280c0:	mov.w	r2, #0
   280c4:	add.w	r3, sp, #4160	; 0x1040
   280c8:	adds	r3, #24
   280ca:	ldr	r3, [r3, #0]
   280cc:	str	r3, [sp, #0]
   280ce:	add.w	r3, sp, #4160	; 0x1040
   280d2:	adds	r3, #16
   280d4:	ldrd	r2, r3, [r3]
   280d8:	bl	1cc70 <btrfs_read_dev_super@@Base>
   280dc:	cmp	r0, #0
   280de:	blt.w	28310 <btrfs_scan_one_device@@Base+0x27c>
   280e2:	ldr.w	r3, [r5, #201]	; 0xc9
   280e6:	movs	r2, #0
   280e8:	mov	r0, r2
   280ea:	str	r3, [sp, #16]
   280ec:	ldr.w	r3, [r5, #205]	; 0xcd
   280f0:	str	r3, [sp, #20]
   280f2:	ldr	r3, [r5, #60]	; 0x3c
   280f4:	and.w	r1, r3, #2
   280f8:	orrs.w	r3, r0, r1
   280fc:	mov.w	r1, #0
   28100:	mov	r9, r1
   28102:	add.w	r0, fp, #28
   28106:	ite	eq
   28108:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   2810c:	movne	r3, #1
   2810e:	strd	r3, r2, [r4]
   28112:	ldr.w	r3, [r5, #188]	; 0xbc
   28116:	ldrd	r6, r7, [r5, #72]	; 0x48
   2811a:	and.w	r8, r3, #1024	; 0x400
   2811e:	orrs.w	r3, r8, r9
   28122:	it	ne
   28124:	addwne	r1, fp, #567	; 0x237
   28128:	bl	27cf8 <btrfs_add_root_ref@@Base+0x128>
   2812c:	mov	r4, r0
   2812e:	cmp	r0, #0
   28130:	bne.n	2821a <btrfs_scan_one_device@@Base+0x186>
   28132:	movs	r1, #96	; 0x60
   28134:	movs	r0, #1
   28136:	blx	8544 <calloc@plt+0x4>
   2813a:	mov	r4, r0
   2813c:	cbnz	r0, 2815e <btrfs_scan_one_device@@Base+0xca>
   2813e:	mvn.w	r0, #11
   28142:	ldr	r1, [pc, #484]	; (28328 <btrfs_scan_one_device@@Base+0x294>)
   28144:	add.w	r3, sp, #4128	; 0x1020
   28148:	ldr	r2, [pc, #472]	; (28324 <btrfs_scan_one_device@@Base+0x290>)
   2814a:	adds	r3, #4
   2814c:	add	r1, pc
   2814e:	ldr	r2, [r1, r2]
   28150:	ldr	r1, [r2, #0]
   28152:	ldr	r2, [r3, #0]
   28154:	eors	r1, r2
   28156:	beq.w	28316 <btrfs_scan_one_device@@Base+0x282>
   2815a:	blx	86b8 <__stack_chk_fail@plt>
   2815e:	ldr	r2, [pc, #460]	; (2832c <btrfs_scan_one_device@@Base+0x298>)
   28160:	add.w	r3, r0, #72	; 0x48
   28164:	strd	r3, r3, [r0, #72]	; 0x48
   28168:	add.w	r3, r0, #80	; 0x50
   2816c:	add	r2, pc
   2816e:	add.w	ip, r4, #16
   28172:	ldr	r1, [r2, #0]
   28174:	str	r3, [r2, #0]
   28176:	str	r3, [r1, #4]
   28178:	add	r3, sp, #68	; 0x44
   2817a:	strd	r1, r2, [r0, #80]	; 0x50
   2817e:	ldmia	r3, {r0, r1, r2, r3}
   28180:	stmia.w	r4, {r0, r1, r2, r3}
   28184:	orrs.w	r3, r8, r9
   28188:	beq.n	28210 <btrfs_scan_one_device@@Base+0x17c>
   2818a:	addw	r3, sp, #607	; 0x25f
   2818e:	addw	lr, sp, #623	; 0x26f
   28192:	ldr	r0, [r3, #0]
   28194:	adds	r3, #8
   28196:	ldr.w	r1, [r3, #-4]
   2819a:	cmp	r3, lr
   2819c:	mov	r2, ip
   2819e:	stmia	r2!, {r0, r1}
   281a0:	mov	ip, r2
   281a2:	bne.n	28192 <btrfs_scan_one_device@@Base+0xfe>
   281a4:	ldrd	r2, r3, [sp, #16]
   281a8:	strd	r6, r7, [r4, #40]	; 0x28
   281ac:	strd	r2, r3, [r4, #32]
   281b0:	mov.w	r2, #4294967295	; 0xffffffff
   281b4:	mov.w	r3, #4294967295	; 0xffffffff
   281b8:	strd	r2, r3, [r4, #48]	; 0x30
   281bc:	movs	r1, #128	; 0x80
   281be:	movs	r0, #1
   281c0:	blx	8544 <calloc@plt+0x4>
   281c4:	mov	r8, r0
   281c6:	cmp	r0, #0
   281c8:	beq.n	2813e <btrfs_scan_one_device@@Base+0xaa>
   281ca:	mov.w	r3, #4294967295	; 0xffffffff
   281ce:	str	r3, [r0, #24]
   281d0:	ldrd	r2, r3, [sp, #16]
   281d4:	add.w	ip, r0, #112	; 0x70
   281d8:	addw	lr, sp, #319	; 0x13f
   281dc:	strd	r6, r7, [r0, #56]	; 0x38
   281e0:	strd	r2, r3, [r0, #64]	; 0x40
   281e4:	addw	r3, sp, #303	; 0x12f
   281e8:	ldr	r0, [r3, #0]
   281ea:	adds	r3, #8
   281ec:	ldr.w	r1, [r3, #-4]
   281f0:	cmp	r3, lr
   281f2:	mov	r2, ip
   281f4:	stmia	r2!, {r0, r1}
   281f6:	mov	ip, r2
   281f8:	bne.n	281e8 <btrfs_scan_one_device@@Base+0x154>
   281fa:	mov	r0, sl
   281fc:	blx	86a0 <strdup@plt+0x4>
   28200:	mov	r9, r0
   28202:	str.w	r0, [r8, #32]
   28206:	cbnz	r0, 2826a <btrfs_scan_one_device@@Base+0x1d6>
   28208:	mov	r0, r8
   2820a:	blx	85dc <free@plt+0x4>
   2820e:	b.n	2813e <btrfs_scan_one_device@@Base+0xaa>
   28210:	ldmia.w	r4, {r0, r1, r2, r3}
   28214:	stmia.w	ip, {r0, r1, r2, r3}
   28218:	b.n	281a4 <btrfs_scan_one_device@@Base+0x110>
   2821a:	addw	r3, fp, #263	; 0x107
   2821e:	str	r3, [sp, #0]
   28220:	ldrd	r2, r3, [sp, #16]
   28224:	bl	27d2c <btrfs_add_root_ref@@Base+0x15c>
   28228:	mov	r8, r0
   2822a:	cmp	r0, #0
   2822c:	beq.n	281bc <btrfs_scan_one_device@@Base+0x128>
   2822e:	ldr.w	r9, [r0, #32]
   28232:	cmp.w	r9, #0
   28236:	beq.n	28242 <btrfs_scan_one_device@@Base+0x1ae>
   28238:	mov	r1, sl
   2823a:	mov	r0, r9
   2823c:	blx	8568 <strcmp@plt>
   28240:	cbz	r0, 282be <btrfs_scan_one_device@@Base+0x22a>
   28242:	ldrd	r2, r3, [r8, #56]	; 0x38
   28246:	cmp	r7, r3
   28248:	it	eq
   2824a:	cmpeq	r6, r2
   2824c:	bcs.n	282f6 <btrfs_scan_one_device@@Base+0x262>
   2824e:	ldr	r0, [pc, #224]	; (28330 <btrfs_scan_one_device@@Base+0x29c>)
   28250:	mov	r1, sl
   28252:	strd	r2, r3, [sp, #8]
   28256:	mov	r2, r6
   28258:	add	r0, pc
   2825a:	mov	r3, r7
   2825c:	str.w	r9, [sp]
   28260:	bl	173a8 <__btrfs_warning@@Base>
   28264:	mvn.w	r0, #16
   28268:	b.n	28142 <btrfs_scan_one_device@@Base+0xae>
   2826a:	addw	r0, sp, #335	; 0x14f
   2826e:	blx	86a0 <strdup@plt+0x4>
   28272:	str.w	r0, [r8, #36]	; 0x24
   28276:	cbnz	r0, 28280 <btrfs_scan_one_device@@Base+0x1ec>
   28278:	mov	r0, r9
   2827a:	blx	85dc <free@plt+0x4>
   2827e:	b.n	28208 <btrfs_scan_one_device@@Base+0x174>
   28280:	ldrd	r2, r3, [r5, #136]	; 0x88
   28284:	strd	r2, r3, [r8, #40]	; 0x28
   28288:	ldrd	r2, r3, [r5, #120]	; 0x78
   2828c:	strd	r2, r3, [r8, #48]	; 0x30
   28290:	ldr.w	r2, [r5, #209]	; 0xd1
   28294:	ldr.w	r3, [r5, #213]	; 0xd5
   28298:	strd	r2, r3, [r8, #72]	; 0x48
   2829c:	ldr.w	r2, [r5, #217]	; 0xd9
   282a0:	ldr.w	r3, [r5, #221]	; 0xdd
   282a4:	strd	r2, r3, [r8, #80]	; 0x50
   282a8:	mov	r3, r4
   282aa:	ldr.w	r2, [r3, #72]!
   282ae:	str.w	r8, [r2, #4]
   282b2:	strd	r2, r3, [r8]
   282b6:	str.w	r8, [r4, #72]	; 0x48
   282ba:	str.w	r4, [r8, #12]
   282be:	ldrd	r2, r3, [r4, #40]	; 0x28
   282c2:	ldrd	r0, r1, [sp, #16]
   282c6:	cmp	r3, r7
   282c8:	it	eq
   282ca:	cmpeq	r2, r6
   282cc:	ittt	cc
   282ce:	strdcc	r6, r7, [r4, #40]	; 0x28
   282d2:	ldrdcc	r2, r3, [sp, #16]
   282d6:	strdcc	r2, r3, [r4, #32]
   282da:	ldrd	r2, r3, [r4, #48]	; 0x30
   282de:	cmp	r1, r3
   282e0:	it	eq
   282e2:	cmpeq	r0, r2
   282e4:	ittt	cc
   282e6:	movcc	r2, r0
   282e8:	movcc	r3, r1
   282ea:	strdcc	r2, r3, [r4, #48]	; 0x30
   282ee:	movs	r0, #0
   282f0:	ldr	r3, [sp, #28]
   282f2:	str	r4, [r3, #0]
   282f4:	b.n	28142 <btrfs_scan_one_device@@Base+0xae>
   282f6:	mov	r0, sl
   282f8:	blx	86a0 <strdup@plt+0x4>
   282fc:	mov	r5, r0
   282fe:	cmp	r0, #0
   28300:	beq.w	2813e <btrfs_scan_one_device@@Base+0xaa>
   28304:	mov	r0, r9
   28306:	blx	85dc <free@plt+0x4>
   2830a:	str.w	r5, [r8, #32]
   2830e:	b.n	282be <btrfs_scan_one_device@@Base+0x22a>
   28310:	mvn.w	r0, #4
   28314:	b.n	28142 <btrfs_scan_one_device@@Base+0xae>
   28316:	add.w	sp, sp, #4128	; 0x1020
   2831a:	add	sp, #12
   2831c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28320:	ldmia	r4, {r2, r3, r4, r6, r7}
   28322:	movs	r3, r0
   28324:	lsls	r4, r4, #8
   28326:	movs	r0, r0
   28328:	ldmia	r4, {r2, r3, r4, r5}
   2832a:	movs	r3, r0
   2832c:	b.n	283c8 <btrfs_insert_dev_extent@@Base+0x94>
   2832e:	movs	r3, r0
   28330:	strb	r4, [r0, #28]
   28332:	movs	r1, r0

00028334 <btrfs_insert_dev_extent@@Base>:
   28334:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28338:	sub	sp, #52	; 0x34
   2833a:	mov	r7, r3
   2833c:	mov	r8, r2
   2833e:	ldrd	sl, r3, [sp, #88]	; 0x58
   28342:	mov	r4, r0
   28344:	ldr	r2, [pc, #236]	; (28434 <btrfs_insert_dev_extent@@Base+0x100>)
   28346:	mov	r6, r1
   28348:	ldr.w	r9, [sp, #100]	; 0x64
   2834c:	str	r3, [sp, #8]
   2834e:	add	r2, pc
   28350:	ldr	r3, [sp, #96]	; 0x60
   28352:	ldr.w	fp, [r1, #8]
   28356:	str	r3, [sp, #12]
   28358:	ldr	r3, [pc, #220]	; (28438 <btrfs_insert_dev_extent@@Base+0x104>)
   2835a:	ldr	r3, [r2, r3]
   2835c:	ldr	r3, [r3, #0]
   2835e:	str	r3, [sp, #44]	; 0x2c
   28360:	mov.w	r3, #0
   28364:	bl	17df8 <btrfs_alloc_path@@Base>
   28368:	mov	r5, r0
   2836a:	cmp	r0, #0
   2836c:	beq.n	28426 <btrfs_insert_dev_extent@@Base+0xf2>
   2836e:	ldrd	r0, r1, [r6, #64]	; 0x40
   28372:	mov	r2, r5
   28374:	ldr	r3, [sp, #12]
   28376:	str.w	r9, [sp, #37]	; 0x25
   2837a:	mov.w	r9, #1
   2837e:	strd	r0, r1, [sp, #24]
   28382:	mov	r1, fp
   28384:	str.w	r3, [sp, #33]	; 0x21
   28388:	mov	r0, r4
   2838a:	movs	r3, #204	; 0xcc
   2838c:	str.w	r9, [sp, #4]
   28390:	strb.w	r3, [sp, #32]
   28394:	movs	r3, #48	; 0x30
   28396:	str	r3, [sp, #20]
   28398:	add	r3, sp, #20
   2839a:	str	r3, [sp, #0]
   2839c:	add	r3, sp, #24
   2839e:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   283a2:	subs	r6, r0, #0
   283a4:	blt.n	2840c <btrfs_insert_dev_extent@@Base+0xd8>
   283a6:	ldr	r0, [r5, #0]
   283a8:	movs	r2, #25
   283aa:	ldr	r3, [r5, #32]
   283ac:	mov.w	lr, #3
   283b0:	add.w	r1, r0, #96	; 0x60
   283b4:	str	r0, [sp, #12]
   283b6:	mla	r3, r2, r3, r1
   283ba:	ldr.w	r2, [r3, #118]	; 0x76
   283be:	movs	r3, #0
   283c0:	add.w	ip, r2, #101	; 0x65
   283c4:	adds	r2, #133	; 0x85
   283c6:	add.w	r4, r1, ip
   283ca:	strb.w	lr, [r1, ip]
   283ce:	strb	r3, [r4, #1]
   283d0:	strb	r3, [r4, #2]
   283d2:	strb	r3, [r4, #3]
   283d4:	strb	r3, [r4, #4]
   283d6:	strb	r3, [r4, #5]
   283d8:	strb	r3, [r4, #6]
   283da:	strb	r3, [r4, #7]
   283dc:	strb	r3, [r4, #8]
   283de:	strb	r3, [r4, #10]
   283e0:	strb	r3, [r4, #11]
   283e2:	strb	r3, [r4, #12]
   283e4:	strb	r3, [r4, #13]
   283e6:	strb	r3, [r4, #14]
   283e8:	strb	r3, [r4, #15]
   283ea:	movs	r3, #16
   283ec:	strb.w	r9, [r4, #9]
   283f0:	str.w	r8, [r4, #16]
   283f4:	str	r7, [r4, #20]
   283f6:	ldr.w	r1, [fp, #464]	; 0x1d0
   283fa:	bl	172d8 <write_extent_buffer@@Base>
   283fe:	ldr	r3, [sp, #8]
   28400:	ldr	r0, [sp, #12]
   28402:	str.w	sl, [r4, #24]
   28406:	str	r3, [r4, #28]
   28408:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2840c:	mov	r0, r5
   2840e:	bl	17e26 <btrfs_free_path@@Base>
   28412:	ldr	r2, [pc, #40]	; (2843c <btrfs_insert_dev_extent@@Base+0x108>)
   28414:	ldr	r3, [pc, #32]	; (28438 <btrfs_insert_dev_extent@@Base+0x104>)
   28416:	add	r2, pc
   28418:	ldr	r3, [r2, r3]
   2841a:	ldr	r2, [r3, #0]
   2841c:	ldr	r3, [sp, #44]	; 0x2c
   2841e:	eors	r2, r3
   28420:	beq.n	2842c <btrfs_insert_dev_extent@@Base+0xf8>
   28422:	blx	86b8 <__stack_chk_fail@plt>
   28426:	mvn.w	r6, #11
   2842a:	b.n	28412 <btrfs_insert_dev_extent@@Base+0xde>
   2842c:	mov	r0, r6
   2842e:	add	sp, #52	; 0x34
   28430:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28434:	ldmia	r2!, {r1, r3, r4, r5}
   28436:	movs	r3, r0
   28438:	lsls	r4, r4, #8
   2843a:	movs	r0, r0
   2843c:	ldmia	r1, {r1, r4, r5, r6}
   2843e:	movs	r3, r0

00028440 <btrfs_add_device@@Base>:
   28440:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28444:	mov	r5, r2
   28446:	vpush	{d8}
   2844a:	mov	sl, r1
   2844c:	ldr	r2, [pc, #536]	; (28668 <btrfs_add_device@@Base+0x228>)
   2844e:	ldr	r3, [pc, #540]	; (2866c <btrfs_add_device@@Base+0x22c>)
   28450:	add	r2, pc
   28452:	vmov	s16, r0
   28456:	sub	sp, #68	; 0x44
   28458:	ldr.w	fp, [r1, #32]
   2845c:	ldr	r3, [r2, r3]
   2845e:	ldr	r3, [r3, #0]
   28460:	str	r3, [sp, #60]	; 0x3c
   28462:	mov.w	r3, #0
   28466:	bl	17df8 <btrfs_alloc_path@@Base>
   2846a:	mov	r6, r0
   2846c:	cmp	r0, #0
   2846e:	beq.w	28656 <btrfs_add_device@@Base+0x216>
   28472:	mov.w	r9, #0
   28476:	movs	r3, #1
   28478:	strd	r3, r9, [sp, #20]
   2847c:	add	r3, sp, #20
   2847e:	str	r3, [sp, #12]
   28480:	mov.w	r2, #4294967295	; 0xffffffff
   28484:	mov	r3, r0
   28486:	strb.w	r2, [sp, #29]
   2848a:	strb.w	r2, [sp, #30]
   2848e:	mov	r1, fp
   28490:	strb.w	r2, [sp, #31]
   28494:	mov	r0, r9
   28496:	strb.w	r2, [sp, #32]
   2849a:	movs	r7, #216	; 0xd8
   2849c:	strb.w	r2, [sp, #33]	; 0x21
   284a0:	strb.w	r2, [sp, #34]	; 0x22
   284a4:	strb.w	r2, [sp, #35]	; 0x23
   284a8:	strb.w	r2, [sp, #36]	; 0x24
   284ac:	strd	r9, r9, [sp]
   284b0:	ldr	r2, [sp, #12]
   284b2:	strb.w	r7, [sp, #28]
   284b6:	bl	1a1e4 <btrfs_search_slot@@Base>
   284ba:	subs	r4, r0, #0
   284bc:	blt.w	28646 <btrfs_add_device@@Base+0x206>
   284c0:	ldr	r2, [pc, #428]	; (28670 <btrfs_add_device@@Base+0x230>)
   284c2:	it	eq
   284c4:	moveq	r3, #1
   284c6:	ldr	r1, [pc, #428]	; (28674 <btrfs_add_device@@Base+0x234>)
   284c8:	it	ne
   284ca:	movne	r3, r9
   284cc:	ldr	r0, [pc, #424]	; (28678 <btrfs_add_device@@Base+0x238>)
   284ce:	add	r2, pc
   284d0:	adds	r2, #22
   284d2:	add	r1, pc
   284d4:	add	r0, pc
   284d6:	str	r3, [sp, #0]
   284d8:	movw	r3, #719	; 0x2cf
   284dc:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   284e0:	movs	r2, #1
   284e2:	movs	r3, #0
   284e4:	mov	r1, r6
   284e6:	mov	r0, fp
   284e8:	str	r7, [sp, #0]
   284ea:	bl	1b89c <btrfs_previous_item@@Base>
   284ee:	mov	r4, r0
   284f0:	cmp	r0, #0
   284f2:	bne.w	2864c <btrfs_add_device@@Base+0x20c>
   284f6:	ldr	r2, [r6, #32]
   284f8:	add	r1, sp, #40	; 0x28
   284fa:	ldr	r0, [r6, #0]
   284fc:	bl	27e6c <btrfs_add_root_ref@@Base+0x29c>
   28500:	ldr.w	r7, [sp, #49]	; 0x31
   28504:	ldr.w	r8, [sp, #53]	; 0x35
   28508:	adds	r7, #1
   2850a:	adc.w	r8, r8, r9
   2850e:	mov	r0, r6
   28510:	bl	17e00 <btrfs_release_path@@Base>
   28514:	cmp	r4, #0
   28516:	bne.w	2862c <btrfs_add_device@@Base+0x1ec>
   2851a:	movs	r2, #1
   2851c:	movs	r3, #0
   2851e:	strd	r2, r3, [sp, #40]	; 0x28
   28522:	movs	r3, #216	; 0xd8
   28524:	strb.w	r3, [sp, #48]	; 0x30
   28528:	movs	r3, #98	; 0x62
   2852a:	str	r3, [sp, #20]
   2852c:	movs	r3, #1
   2852e:	str	r3, [sp, #4]
   28530:	mov	r2, r6
   28532:	ldr	r3, [sp, #12]
   28534:	mov	r1, fp
   28536:	vmov	r0, s16
   2853a:	str.w	r7, [sp, #49]	; 0x31
   2853e:	str	r3, [sp, #0]
   28540:	add	r3, sp, #40	; 0x28
   28542:	str.w	r8, [sp, #53]	; 0x35
   28546:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2854a:	mov	r4, r0
   2854c:	cmp	r0, #0
   2854e:	bne.n	2862c <btrfs_add_device@@Base+0x1ec>
   28550:	ldr	r0, [r6, #0]
   28552:	movs	r1, #25
   28554:	ldr	r3, [r6, #32]
   28556:	add.w	r2, r0, #96	; 0x60
   2855a:	mla	r3, r1, r3, r2
   2855e:	ldr.w	r9, [r3, #118]	; 0x76
   28562:	strd	r7, r8, [r5, #64]	; 0x40
   28566:	add.w	r1, r9, #101	; 0x65
   2856a:	adds	r3, r2, r1
   2856c:	str	r7, [r2, r1]
   2856e:	str.w	r8, [r3, #4]
   28572:	strb.w	r4, [r3, #44]	; 0x2c
   28576:	strb.w	r4, [r3, #45]	; 0x2d
   2857a:	strb.w	r4, [r3, #46]	; 0x2e
   2857e:	strb.w	r4, [r3, #47]	; 0x2f
   28582:	strb.w	r4, [r3, #48]	; 0x30
   28586:	strb.w	r4, [r3, #49]	; 0x31
   2858a:	strb.w	r4, [r3, #50]	; 0x32
   2858e:	strb.w	r4, [r3, #51]	; 0x33
   28592:	ldrd	r1, r2, [r5, #104]	; 0x68
   28596:	str	r1, [r3, #36]	; 0x24
   28598:	str	r2, [r3, #40]	; 0x28
   2859a:	ldr	r2, [r5, #88]	; 0x58
   2859c:	str	r2, [r3, #24]
   2859e:	ldr	r2, [r5, #92]	; 0x5c
   285a0:	str	r2, [r3, #28]
   285a2:	ldr	r2, [r5, #96]	; 0x60
   285a4:	str	r2, [r3, #32]
   285a6:	ldrd	r1, r2, [r5, #72]	; 0x48
   285aa:	str	r1, [r3, #8]
   285ac:	str	r2, [r3, #12]
   285ae:	ldrd	r1, r2, [r5, #80]	; 0x50
   285b2:	str	r1, [r3, #16]
   285b4:	add.w	r1, r5, #112	; 0x70
   285b8:	str	r2, [r3, #20]
   285ba:	add.w	r2, r9, #167	; 0xa7
   285be:	strb.w	r4, [r3, #60]	; 0x3c
   285c2:	strb.w	r4, [r3, #61]	; 0x3d
   285c6:	strb.w	r4, [r3, #62]	; 0x3e
   285ca:	strb.w	r4, [r3, #63]	; 0x3f
   285ce:	strb.w	r4, [r3, #64]	; 0x40
   285d2:	strb.w	r4, [r3, #65]	; 0x41
   285d6:	strb.w	r4, [r3, #52]	; 0x34
   285da:	strb.w	r4, [r3, #53]	; 0x35
   285de:	strb.w	r4, [r3, #54]	; 0x36
   285e2:	strb.w	r4, [r3, #55]	; 0x37
   285e6:	strb.w	r4, [r3, #56]	; 0x38
   285ea:	strb.w	r4, [r3, #57]	; 0x39
   285ee:	strb.w	r4, [r3, #58]	; 0x3a
   285f2:	strb.w	r4, [r3, #59]	; 0x3b
   285f6:	movs	r3, #16
   285f8:	str	r0, [sp, #12]
   285fa:	bl	172d8 <write_extent_buffer@@Base>
   285fe:	ldr.w	r1, [sl, #352]	; 0x160
   28602:	movs	r3, #16
   28604:	add.w	r2, r9, #183	; 0xb7
   28608:	ldr	r0, [sp, #12]
   2860a:	add	r1, r3
   2860c:	bl	172d8 <write_extent_buffer@@Base>
   28610:	ldr	r0, [sp, #12]
   28612:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   28616:	ldr.w	r2, [sl, #352]	; 0x160
   2861a:	ldrd	r0, r5, [r5, #72]	; 0x48
   2861e:	ldrd	r3, r1, [r2, #56]	; 0x38
   28622:	adds	r3, r3, r0
   28624:	adc.w	r1, r5, r1
   28628:	strd	r3, r1, [r2, #56]	; 0x38
   2862c:	mov	r0, r6
   2862e:	bl	17e26 <btrfs_free_path@@Base>
   28632:	ldr	r2, [pc, #72]	; (2867c <btrfs_add_device@@Base+0x23c>)
   28634:	ldr	r3, [pc, #52]	; (2866c <btrfs_add_device@@Base+0x22c>)
   28636:	add	r2, pc
   28638:	ldr	r3, [r2, r3]
   2863a:	ldr	r2, [r3, #0]
   2863c:	ldr	r3, [sp, #60]	; 0x3c
   2863e:	eors	r2, r3
   28640:	beq.n	2865c <btrfs_add_device@@Base+0x21c>
   28642:	blx	86b8 <__stack_chk_fail@plt>
   28646:	movs	r7, #0
   28648:	mov	r8, r7
   2864a:	b.n	2850e <btrfs_add_device@@Base+0xce>
   2864c:	movs	r7, #1
   2864e:	mov.w	r8, #0
   28652:	mov	r4, r9
   28654:	b.n	2850e <btrfs_add_device@@Base+0xce>
   28656:	mvn.w	r4, #11
   2865a:	b.n	28632 <btrfs_add_device@@Base+0x1f2>
   2865c:	mov	r0, r4
   2865e:	add	sp, #68	; 0x44
   28660:	vpop	{d8}
   28664:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28668:	ldmia	r1!, {r3, r4, r5}
   2866a:	movs	r3, r0
   2866c:	lsls	r4, r4, #8
   2866e:	movs	r0, r0
   28670:	ldrb	r6, [r5, #14]
   28672:	movs	r1, r0
   28674:	strb	r5, [r1, #19]
   28676:	movs	r1, r0
   28678:	subs	r7, r5, #1
   2867a:	movs	r1, r0
   2867c:	stmia	r7!, {r1, r4, r6}
   2867e:	movs	r3, r0

00028680 <btrfs_update_device@@Base>:
   28680:	ldr	r2, [pc, #212]	; (28758 <btrfs_update_device@@Base+0xd8>)
   28682:	ldr	r3, [pc, #216]	; (2875c <btrfs_update_device@@Base+0xdc>)
   28684:	add	r2, pc
   28686:	push	{r4, r5, r6, r7, lr}
   28688:	sub	sp, #44	; 0x2c
   2868a:	ldr	r3, [r2, r3]
   2868c:	mov	r4, r1
   2868e:	mov	r6, r0
   28690:	ldr	r3, [r3, #0]
   28692:	str	r3, [sp, #36]	; 0x24
   28694:	mov.w	r3, #0
   28698:	ldr	r3, [r1, #8]
   2869a:	ldr.w	r3, [r3, #464]	; 0x1d0
   2869e:	ldr	r1, [r3, #32]
   286a0:	str	r1, [sp, #12]
   286a2:	bl	17df8 <btrfs_alloc_path@@Base>
   286a6:	mov	r5, r0
   286a8:	cmp	r0, #0
   286aa:	beq.n	2874a <btrfs_update_device@@Base+0xca>
   286ac:	movs	r2, #1
   286ae:	movs	r3, #0
   286b0:	strd	r2, r3, [sp, #16]
   286b4:	movs	r3, #216	; 0xd8
   286b6:	strb.w	r3, [sp, #24]
   286ba:	movs	r2, #1
   286bc:	ldr	r3, [r4, #64]	; 0x40
   286be:	ldr	r1, [sp, #12]
   286c0:	str.w	r3, [sp, #25]
   286c4:	ldr	r3, [r4, #68]	; 0x44
   286c6:	str.w	r3, [sp, #29]
   286ca:	movs	r3, #0
   286cc:	strd	r3, r2, [sp]
   286d0:	mov	r3, r0
   286d2:	add	r2, sp, #16
   286d4:	mov	r0, r6
   286d6:	bl	1a1e4 <btrfs_search_slot@@Base>
   286da:	subs	r6, r0, #0
   286dc:	blt.n	2872a <btrfs_update_device@@Base+0xaa>
   286de:	bne.n	28744 <btrfs_update_device@@Base+0xc4>
   286e0:	ldr	r0, [r5, #0]
   286e2:	movs	r2, #25
   286e4:	ldr	r3, [r5, #32]
   286e6:	add.w	r1, r0, #96	; 0x60
   286ea:	ldr.w	ip, [r4, #68]	; 0x44
   286ee:	ldr	r7, [r4, #64]	; 0x40
   286f0:	mla	r3, r2, r3, r1
   286f4:	ldr.w	r3, [r3, #118]	; 0x76
   286f8:	adds	r3, #101	; 0x65
   286fa:	adds	r2, r1, r3
   286fc:	str	r7, [r1, r3]
   286fe:	str.w	ip, [r2, #4]
   28702:	ldrd	r1, r3, [r4, #104]	; 0x68
   28706:	str	r1, [r2, #36]	; 0x24
   28708:	str	r3, [r2, #40]	; 0x28
   2870a:	ldr	r3, [r4, #88]	; 0x58
   2870c:	str	r3, [r2, #24]
   2870e:	ldr	r3, [r4, #92]	; 0x5c
   28710:	str	r3, [r2, #28]
   28712:	ldr	r3, [r4, #96]	; 0x60
   28714:	str	r3, [r2, #32]
   28716:	ldrd	r1, r3, [r4, #72]	; 0x48
   2871a:	str	r1, [r2, #8]
   2871c:	str	r3, [r2, #12]
   2871e:	ldrd	r1, r3, [r4, #80]	; 0x50
   28722:	str	r1, [r2, #16]
   28724:	str	r3, [r2, #20]
   28726:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2872a:	mov	r0, r5
   2872c:	bl	17e26 <btrfs_free_path@@Base>
   28730:	ldr	r2, [pc, #44]	; (28760 <btrfs_update_device@@Base+0xe0>)
   28732:	ldr	r3, [pc, #40]	; (2875c <btrfs_update_device@@Base+0xdc>)
   28734:	add	r2, pc
   28736:	ldr	r3, [r2, r3]
   28738:	ldr	r2, [r3, #0]
   2873a:	ldr	r3, [sp, #36]	; 0x24
   2873c:	eors	r2, r3
   2873e:	beq.n	28750 <btrfs_update_device@@Base+0xd0>
   28740:	blx	86b8 <__stack_chk_fail@plt>
   28744:	mvn.w	r6, #1
   28748:	b.n	2872a <btrfs_update_device@@Base+0xaa>
   2874a:	mvn.w	r6, #11
   2874e:	b.n	28730 <btrfs_update_device@@Base+0xb0>
   28750:	mov	r0, r6
   28752:	add	sp, #44	; 0x2c
   28754:	pop	{r4, r5, r6, r7, pc}
   28756:	nop
   28758:	stmia	r7!, {r2}
   2875a:	movs	r3, r0
   2875c:	lsls	r4, r4, #8
   2875e:	movs	r0, r0
   28760:	stmia	r6!, {r2, r4, r6}
   28762:	movs	r3, r0

00028764 <btrfs_add_system_chunk@@Base>:
   28764:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   28768:	mov	r4, r1
   2876a:	ldr.w	r6, [r0, #308]	; 0x134
   2876e:	mov	r1, r2
   28770:	add.w	r5, r3, #17
   28774:	ldr.w	r2, [r6, #160]	; 0xa0
   28778:	add	r5, r2
   2877a:	cmp.w	r5, #2048	; 0x800
   2877e:	bhi.n	287be <btrfs_add_system_chunk@@Base+0x5a>
   28780:	ldr.w	lr, [r4, #9]
   28784:	addw	r7, r6, #811	; 0x32b
   28788:	ldr.w	ip, [r4, #13]
   2878c:	adds	r0, r7, r2
   2878e:	ldrb.w	r8, [r4, #8]
   28792:	adds	r0, #17
   28794:	ldr.w	r9, [r4]
   28798:	ldr	r4, [r4, #4]
   2879a:	str.w	r9, [r7, r2]
   2879e:	mov	r2, r3
   287a0:	str.w	r4, [r0, #-13]
   287a4:	strb.w	r8, [r0, #-9]
   287a8:	str.w	lr, [r0, #-8]
   287ac:	str.w	ip, [r0, #-4]
   287b0:	blx	8628 <memcpy@plt+0x4>
   287b4:	movs	r0, #0
   287b6:	str.w	r5, [r6, #160]	; 0xa0
   287ba:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   287be:	mvn.w	r0, #26
   287c2:	b.n	287ba <btrfs_add_system_chunk@@Base+0x56>

000287c4 <btrfs_alloc_chunk@@Base>:
   287c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   287c8:	vpush	{d8-d11}
   287cc:	vmov	s16, r0
   287d0:	sub	sp, #252	; 0xfc
   287d2:	str	r3, [sp, #148]	; 0x94
   287d4:	ldrd	sl, r3, [sp, #320]	; 0x140
   287d8:	str	r2, [sp, #176]	; 0xb0
   287da:	ldr.w	r2, [pc, #1252]	; 28cc0 <btrfs_alloc_chunk@@Base+0x4fc>
   287de:	str	r3, [sp, #120]	; 0x78
   287e0:	ldr.w	r3, [pc, #1248]	; 28cc4 <btrfs_alloc_chunk@@Base+0x500>
   287e4:	add	r2, pc
   287e6:	str	r1, [sp, #44]	; 0x2c
   287e8:	ldr	r3, [r2, r3]
   287ea:	ldr	r3, [r3, #0]
   287ec:	str	r3, [sp, #244]	; 0xf4
   287ee:	mov.w	r3, #0
   287f2:	ldr	r3, [r1, #24]
   287f4:	str	r3, [sp, #172]	; 0xac
   287f6:	ldr	r3, [r1, #32]
   287f8:	vmov	s17, r3
   287fc:	ldr.w	r3, [r1, #352]	; 0x160
   28800:	str	r3, [sp, #48]	; 0x30
   28802:	adds	r3, #72	; 0x48
   28804:	str	r3, [sp, #108]	; 0x6c
   28806:	ldr	r3, [sp, #48]	; 0x30
   28808:	ldr	r2, [sp, #108]	; 0x6c
   2880a:	ldr	r3, [r3, #72]	; 0x48
   2880c:	cmp	r2, r3
   2880e:	bne.n	2882e <btrfs_alloc_chunk@@Base+0x6a>
   28810:	mvn.w	r6, #27
   28814:	ldr.w	r2, [pc, #1200]	; 28cc8 <btrfs_alloc_chunk@@Base+0x504>
   28818:	ldr.w	r3, [pc, #1192]	; 28cc4 <btrfs_alloc_chunk@@Base+0x500>
   2881c:	add	r2, pc
   2881e:	ldr	r3, [r2, r3]
   28820:	ldr	r2, [r3, #0]
   28822:	ldr	r3, [sp, #244]	; 0xf4
   28824:	eors	r2, r3
   28826:	beq.w	29304 <btrfs_alloc_chunk@@Base+0xb40>
   2882a:	blx	86b8 <__stack_chk_fail@plt>
   2882e:	and.w	r0, sl, #2040	; 0x7f8
   28832:	movs	r3, #0
   28834:	mov	r1, r3
   28836:	orrs.w	r2, r0, r1
   2883a:	beq.w	28a9e <btrfs_alloc_chunk@@Base+0x2da>
   2883e:	and.w	r0, sl, #2
   28842:	orrs.w	r2, r0, r1
   28846:	bne.w	28a86 <btrfs_alloc_chunk@@Base+0x2c2>
   2884a:	and.w	r0, sl, #1
   2884e:	orrs.w	r2, r0, r1
   28852:	beq.w	28a44 <btrfs_alloc_chunk@@Base+0x280>
   28856:	ldr	r3, [sp, #44]	; 0x2c
   28858:	movs	r2, #0
   2885a:	mov.w	r1, #1073741824	; 0x40000000
   2885e:	mov.w	r5, #2147483648	; 0x80000000
   28862:	strd	r1, r2, [sp, #16]
   28866:	movs	r4, #2
   28868:	ldr.w	r3, [r3, #384]	; 0x180
   2886c:	mov.w	r2, #67108864	; 0x4000000
   28870:	subs	r3, #206	; 0xce
   28872:	lsrs	r3, r3, #5
   28874:	adds	r3, #1
   28876:	str	r2, [sp, #72]	; 0x48
   28878:	and.w	r6, sl, #16
   2887c:	ldr	r2, [sp, #44]	; 0x2c
   2887e:	movs	r7, #0
   28880:	ldr.w	r1, [r2, #308]	; 0x134
   28884:	orrs.w	r2, r6, r7
   28888:	beq.w	28aa4 <btrfs_alloc_chunk@@Base+0x2e0>
   2888c:	ldr.w	r7, [r1, #140]	; 0x8c
   28890:	ldr.w	r6, [r1, #136]	; 0x88
   28894:	cmp	r7, #0
   28896:	it	eq
   28898:	cmpeq	r6, #3
   2889a:	it	cs
   2889c:	movcs	r6, #2
   2889e:	cmp	r6, #2
   288a0:	mov	fp, r6
   288a2:	bne.n	28810 <btrfs_alloc_chunk@@Base+0x4c>
   288a4:	and.w	r6, sl, #512	; 0x200
   288a8:	movs	r7, #0
   288aa:	orrs.w	r2, r6, r7
   288ae:	beq.n	288c8 <btrfs_alloc_chunk@@Base+0x104>
   288b0:	ldr.w	r7, [r1, #140]	; 0x8c
   288b4:	ldr.w	r6, [r1, #136]	; 0x88
   288b8:	cmp	r7, #0
   288ba:	it	eq
   288bc:	cmpeq	r6, #4
   288be:	it	cs
   288c0:	movcs	r6, #3
   288c2:	cmp	r6, #3
   288c4:	mov	fp, r6
   288c6:	bne.n	28810 <btrfs_alloc_chunk@@Base+0x4c>
   288c8:	and.w	r6, sl, #1024	; 0x400
   288cc:	movs	r7, #0
   288ce:	orrs.w	r2, r6, r7
   288d2:	beq.n	288ec <btrfs_alloc_chunk@@Base+0x128>
   288d4:	ldr.w	r7, [r1, #140]	; 0x8c
   288d8:	ldr.w	r6, [r1, #136]	; 0x88
   288dc:	cmp	r7, #0
   288de:	it	eq
   288e0:	cmpeq	r6, #5
   288e2:	it	cs
   288e4:	movcs	r6, #4
   288e6:	cmp	r6, #4
   288e8:	mov	fp, r6
   288ea:	bne.n	28810 <btrfs_alloc_chunk@@Base+0x4c>
   288ec:	movs	r2, #0
   288ee:	and.w	r0, sl, #32
   288f2:	strd	r0, r2, [sp, #56]	; 0x38
   288f6:	ldrd	r6, r7, [sp, #56]	; 0x38
   288fa:	orrs.w	r0, r6, r7
   288fe:	and.w	r6, sl, #8
   28902:	mov	r7, r2
   28904:	it	ne
   28906:	movne.w	fp, #2
   2890a:	orrs.w	r2, r6, r7
   2890e:	beq.w	28aaa <btrfs_alloc_chunk@@Base+0x2e6>
   28912:	ldr.w	r2, [r1, #136]	; 0x88
   28916:	cmp	r2, r3
   28918:	it	ge
   2891a:	movge	r2, r3
   2891c:	mov	fp, r2
   2891e:	movs	r2, #2
   28920:	str	r2, [sp, #76]	; 0x4c
   28922:	and.w	r2, sl, #64	; 0x40
   28926:	str	r2, [sp, #88]	; 0x58
   28928:	movs	r2, #0
   2892a:	str	r2, [sp, #92]	; 0x5c
   2892c:	ldrd	r6, r7, [sp, #88]	; 0x58
   28930:	orrs.w	r2, r6, r7
   28934:	beq.w	28ab0 <btrfs_alloc_chunk@@Base+0x2ec>
   28938:	ldr.w	r2, [r1, #136]	; 0x88
   2893c:	cmp	r2, r3
   2893e:	it	ge
   28940:	movge	r2, r3
   28942:	cmp	r2, #3
   28944:	ble.w	28810 <btrfs_alloc_chunk@@Base+0x4c>
   28948:	bic.w	fp, r2, #1
   2894c:	movs	r2, #2
   2894e:	str	r2, [sp, #52]	; 0x34
   28950:	movs	r2, #4
   28952:	str	r2, [sp, #76]	; 0x4c
   28954:	and.w	r6, sl, #128	; 0x80
   28958:	movs	r7, #0
   2895a:	orrs.w	r2, r6, r7
   2895e:	beq.n	28976 <btrfs_alloc_chunk@@Base+0x1b2>
   28960:	ldr.w	r2, [r1, #136]	; 0x88
   28964:	cmp	r2, r3
   28966:	it	ge
   28968:	movge	r2, r3
   2896a:	cmp	r2, #1
   2896c:	mov	fp, r2
   2896e:	ble.w	28810 <btrfs_alloc_chunk@@Base+0x4c>
   28972:	movs	r2, #2
   28974:	str	r2, [sp, #76]	; 0x4c
   28976:	and.w	r6, sl, #256	; 0x100
   2897a:	movs	r7, #0
   2897c:	orrs.w	r2, r6, r7
   28980:	beq.n	28998 <btrfs_alloc_chunk@@Base+0x1d4>
   28982:	ldr.w	r2, [r1, #136]	; 0x88
   28986:	cmp	r3, r2
   28988:	it	ge
   2898a:	movge	r3, r2
   2898c:	cmp	r3, #2
   2898e:	mov	fp, r3
   28990:	ble.w	28810 <btrfs_alloc_chunk@@Base+0x4c>
   28994:	movs	r3, #3
   28996:	str	r3, [sp, #76]	; 0x4c
   28998:	ldr	r0, [r1, #112]	; 0x70
   2899a:	movs	r2, #1
   2899c:	ldr	r1, [r1, #116]	; 0x74
   2899e:	bl	31a68 <div_factor@@Base>
   289a2:	strd	r5, r4, [sp, #64]	; 0x40
   289a6:	movs	r4, #0
   289a8:	mov	r3, r1
   289aa:	mov	r2, r0
   289ac:	ldrd	r0, r1, [sp, #64]	; 0x40
   289b0:	cmp	r3, r1
   289b2:	it	eq
   289b4:	cmpeq	r2, r0
   289b6:	it	cc
   289b8:	strdcc	r2, r3, [sp, #64]	; 0x40
   289bc:	movs	r3, #0
   289be:	strd	r3, r4, [sp, #32]
   289c2:	str	r3, [sp, #168]	; 0xa8
   289c4:	movs	r4, #0
   289c6:	movs	r3, #0
   289c8:	strd	r3, r4, [sp, #96]	; 0x60
   289cc:	ldr	r3, [sp, #52]	; 0x34
   289ce:	mov	r0, sl
   289d0:	ldr	r1, [sp, #120]	; 0x78
   289d2:	strd	fp, r3, [sp]
   289d6:	ldrd	r2, r3, [sp, #16]
   289da:	bl	27d6c <btrfs_add_root_ref@@Base+0x19c>
   289de:	ldrd	r3, r4, [sp, #64]	; 0x40
   289e2:	cmp	r4, r1
   289e4:	ldr	r4, [pc, #724]	; (28cbc <btrfs_alloc_chunk@@Base+0x4f8>)
   289e6:	it	eq
   289e8:	cmpeq	r3, r0
   289ea:	bcs.n	28a00 <btrfs_alloc_chunk@@Base+0x23c>
   289ec:	mov	r2, fp
   289ee:	ldrd	r0, r1, [sp, #64]	; 0x40
   289f2:	asrs	r3, r2, #31
   289f4:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   289f8:	and.w	r3, r4, r0
   289fc:	strd	r3, r1, [sp, #16]
   28a00:	ldr	r3, [sp, #72]	; 0x48
   28a02:	asrs	r2, r3, #31
   28a04:	mov	r1, r3
   28a06:	mov	r3, r2
   28a08:	mov	r2, r1
   28a0a:	ldrd	r0, r1, [sp, #16]
   28a0e:	cmp	r3, r1
   28a10:	it	eq
   28a12:	cmpeq	r2, r0
   28a14:	itt	cc
   28a16:	movcc	r3, r1
   28a18:	movcc	r2, r0
   28a1a:	and.w	r1, r4, r2
   28a1e:	strd	r1, r3, [sp, #16]
   28a22:	add	r3, sp, #196	; 0xc4
   28a24:	strd	r3, r3, [sp, #196]	; 0xc4
   28a28:	ldr	r3, [sp, #48]	; 0x30
   28a2a:	ldr	r5, [r3, #72]	; 0x48
   28a2c:	ldrd	r3, r4, [sp, #56]	; 0x38
   28a30:	orrs	r3, r4
   28a32:	beq.w	28dde <btrfs_alloc_chunk@@Base+0x61a>
   28a36:	adds	r3, r1, r1
   28a38:	str	r3, [sp, #128]	; 0x80
   28a3a:	ldr	r3, [sp, #20]
   28a3c:	adcs	r3, r3
   28a3e:	str	r3, [sp, #132]	; 0x84
   28a40:	movs	r7, #0
   28a42:	b.n	28bd0 <btrfs_alloc_chunk@@Base+0x40c>
   28a44:	and.w	r0, sl, #4
   28a48:	orrs.w	r2, r0, r1
   28a4c:	beq.n	28a9e <btrfs_alloc_chunk@@Base+0x2da>
   28a4e:	ldr	r3, [sp, #48]	; 0x30
   28a50:	movs	r1, #12
   28a52:	mov.w	r0, #2147483648	; 0x80000000
   28a56:	movs	r4, #0
   28a58:	ldrd	r2, r3, [r3, #56]	; 0x38
   28a5c:	cmp	r1, r3
   28a5e:	it	eq
   28a60:	cmpeq	r0, r2
   28a62:	mov.w	r2, #33554432	; 0x2000000
   28a66:	ite	cs
   28a68:	movcs.w	r3, #268435456	; 0x10000000
   28a6c:	movcc.w	r3, #1073741824	; 0x40000000
   28a70:	strd	r3, r4, [sp, #16]
   28a74:	ldr	r3, [sp, #44]	; 0x2c
   28a76:	ldrd	r5, r4, [sp, #16]
   28a7a:	ldr.w	r3, [r3, #384]	; 0x180
   28a7e:	subs	r3, #206	; 0xce
   28a80:	lsrs	r3, r3, #5
   28a82:	adds	r3, #1
   28a84:	b.n	28876 <btrfs_alloc_chunk@@Base+0xb2>
   28a86:	movs	r3, #58	; 0x3a
   28a88:	mov.w	r5, #16777216	; 0x1000000
   28a8c:	movs	r2, #0
   28a8e:	mov.w	r1, #8388608	; 0x800000
   28a92:	movs	r4, #0
   28a94:	strd	r1, r2, [sp, #16]
   28a98:	mov.w	r2, #1048576	; 0x100000
   28a9c:	b.n	28876 <btrfs_alloc_chunk@@Base+0xb2>
   28a9e:	mov.w	r5, #33554432	; 0x2000000
   28aa2:	b.n	28a8c <btrfs_alloc_chunk@@Base+0x2c8>
   28aa4:	mov.w	fp, #1
   28aa8:	b.n	288a4 <btrfs_alloc_chunk@@Base+0xe0>
   28aaa:	str.w	fp, [sp, #76]	; 0x4c
   28aae:	b.n	28922 <btrfs_alloc_chunk@@Base+0x15e>
   28ab0:	movs	r2, #1
   28ab2:	str	r2, [sp, #52]	; 0x34
   28ab4:	b.n	28954 <btrfs_alloc_chunk@@Base+0x190>
   28ab6:	ldr	r3, [r5, #8]
   28ab8:	str	r3, [sp, #104]	; 0x68
   28aba:	ldr.w	r3, [r3, #464]	; 0x1d0
   28abe:	ldrd	r9, r8, [r3, #296]	; 0x128
   28ac2:	ldrd	r3, r4, [r5, #72]	; 0x48
   28ac6:	strd	r3, r4, [sp, #80]	; 0x50
   28aca:	bl	17df8 <btrfs_alloc_path@@Base>
   28ace:	mov	r4, r0
   28ad0:	cbnz	r0, 28ad8 <btrfs_alloc_chunk@@Base+0x314>
   28ad2:	mvn.w	r6, #11
   28ad6:	b.n	28814 <btrfs_alloc_chunk@@Base+0x50>
   28ad8:	ldrd	r2, r3, [r5, #64]	; 0x40
   28adc:	ldr	r1, [sp, #104]	; 0x68
   28ade:	strd	r2, r3, [sp, #224]	; 0xe0
   28ae2:	ldr	r3, [sp, #104]	; 0x68
   28ae4:	ldr.w	r3, [r3, #464]	; 0x1d0
   28ae8:	ldr.w	r2, [r3, #296]	; 0x128
   28aec:	str.w	r2, [sp, #233]	; 0xe9
   28af0:	add	r2, sp, #224	; 0xe0
   28af2:	ldr.w	r3, [r3, #300]	; 0x12c
   28af6:	str.w	r3, [sp, #237]	; 0xed
   28afa:	movs	r3, #204	; 0xcc
   28afc:	strb.w	r3, [sp, #232]	; 0xe8
   28b00:	movs	r3, #2
   28b02:	strb.w	r3, [r0, #64]	; 0x40
   28b06:	movs	r3, #0
   28b08:	strd	r3, r3, [sp]
   28b0c:	mov	r3, r0
   28b0e:	vmov	r0, s16
   28b12:	bl	1a1e4 <btrfs_search_slot@@Base>
   28b16:	subs	r6, r0, #0
   28b18:	blt.n	28b88 <btrfs_alloc_chunk@@Base+0x3c4>
   28b1a:	ldrb.w	r3, [sp, #232]	; 0xe8
   28b1e:	movs	r2, #0
   28b20:	ldr	r0, [sp, #104]	; 0x68
   28b22:	mov	r1, r4
   28b24:	str	r3, [sp, #0]
   28b26:	movs	r3, #0
   28b28:	bl	1b89c <btrfs_previous_item@@Base>
   28b2c:	subs	r6, r0, #0
   28b2e:	blt.n	28b88 <btrfs_alloc_chunk@@Base+0x3c4>
   28b30:	strd	r9, r8, [sp, #24]
   28b34:	ldrd	r2, r3, [sp, #24]
   28b38:	cmp	r3, #0
   28b3a:	it	eq
   28b3c:	cmpeq.w	r2, #1048576	; 0x100000
   28b40:	ittt	cc
   28b42:	movcc.w	r2, #1048576	; 0x100000
   28b46:	movcc	r3, #0
   28b48:	strdcc	r2, r3, [sp, #24]
   28b4c:	add	r2, sp, #224	; 0xe0
   28b4e:	movs	r3, #0
   28b50:	str	r3, [sp, #124]	; 0x7c
   28b52:	vmov	s18, r2
   28b56:	ldr	r2, [r4, #32]
   28b58:	ldr	r6, [r4, #0]
   28b5a:	str	r2, [sp, #144]	; 0x90
   28b5c:	ldr	r1, [sp, #144]	; 0x90
   28b5e:	ldr.w	r2, [r6, #192]	; 0xc0
   28b62:	cmp	r2, r1
   28b64:	bhi.w	28cd8 <btrfs_alloc_chunk@@Base+0x514>
   28b68:	str	r3, [sp, #144]	; 0x90
   28b6a:	mov.w	r3, #0
   28b6e:	strb.w	r3, [r4, #65]	; 0x41
   28b72:	mov	r1, r4
   28b74:	ldr	r3, [sp, #104]	; 0x68
   28b76:	ldr.w	r0, [r3, #464]	; 0x1d0
   28b7a:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   28b7e:	ldr	r3, [sp, #144]	; 0x90
   28b80:	subs	r6, r0, #0
   28b82:	beq.n	28b56 <btrfs_alloc_chunk@@Base+0x392>
   28b84:	bge.w	28d90 <btrfs_alloc_chunk@@Base+0x5cc>
   28b88:	mov	r0, r4
   28b8a:	bl	17e26 <btrfs_free_path@@Base>
   28b8e:	cmp	r6, #0
   28b90:	bne.w	28814 <btrfs_alloc_chunk@@Base+0x50>
   28b94:	ldrd	r1, r2, [sp, #32]
   28b98:	ldrd	r8, r9, [sp, #128]	; 0x80
   28b9c:	ldr	r3, [r5, #0]
   28b9e:	cmp	r2, r9
   28ba0:	it	eq
   28ba2:	cmpeq	r1, r8
   28ba4:	bcc.w	28dc4 <btrfs_alloc_chunk@@Base+0x600>
   28ba8:	ldr	r2, [r5, #4]
   28baa:	str	r2, [r3, #4]
   28bac:	str	r3, [r2, #0]
   28bae:	ldr	r2, [sp, #196]	; 0xc4
   28bb0:	str	r5, [r2, #4]
   28bb2:	str	r2, [r5, #0]
   28bb4:	add	r2, sp, #196	; 0xc4
   28bb6:	str	r2, [r5, #4]
   28bb8:	ldrd	r1, r2, [sp, #56]	; 0x38
   28bbc:	str	r5, [sp, #196]	; 0xc4
   28bbe:	orrs	r2, r1
   28bc0:	ite	eq
   28bc2:	addeq	r7, #1
   28bc4:	addne	r7, #2
   28bc6:	ldr	r2, [sp, #108]	; 0x6c
   28bc8:	cmp	r2, r3
   28bca:	beq.w	28de8 <btrfs_alloc_chunk@@Base+0x624>
   28bce:	mov	r5, r3
   28bd0:	cmp	fp, r7
   28bd2:	bgt.w	28ab6 <btrfs_alloc_chunk@@Base+0x2f2>
   28bd6:	ldr	r3, [sp, #44]	; 0x2c
   28bd8:	ldr	r5, [r3, #32]
   28bda:	bl	17df8 <btrfs_alloc_path@@Base>
   28bde:	mov	r4, r0
   28be0:	cmp	r0, #0
   28be2:	beq.w	28ad2 <btrfs_alloc_chunk@@Base+0x30e>
   28be6:	mov.w	r2, #4294967295	; 0xffffffff
   28bea:	movs	r0, #0
   28bec:	mov.w	r3, #256	; 0x100
   28bf0:	strb.w	r2, [sp, #213]	; 0xd5
   28bf4:	strd	r3, r0, [sp, #204]	; 0xcc
   28bf8:	mov	r1, r5
   28bfa:	strb.w	r2, [sp, #214]	; 0xd6
   28bfe:	mov	r3, r4
   28c00:	strb.w	r2, [sp, #215]	; 0xd7
   28c04:	movs	r7, #228	; 0xe4
   28c06:	strb.w	r2, [sp, #216]	; 0xd8
   28c0a:	strb.w	r2, [sp, #217]	; 0xd9
   28c0e:	strb.w	r2, [sp, #218]	; 0xda
   28c12:	strb.w	r2, [sp, #219]	; 0xdb
   28c16:	strb.w	r2, [sp, #220]	; 0xdc
   28c1a:	add	r2, sp, #204	; 0xcc
   28c1c:	strd	r0, r0, [sp]
   28c20:	strb.w	r7, [sp, #212]	; 0xd4
   28c24:	bl	1a1e4 <btrfs_search_slot@@Base>
   28c28:	subs	r6, r0, #0
   28c2a:	blt.n	28c6a <btrfs_alloc_chunk@@Base+0x4a6>
   28c2c:	ldr	r2, [pc, #156]	; (28ccc <btrfs_alloc_chunk@@Base+0x508>)
   28c2e:	it	eq
   28c30:	moveq	r3, #1
   28c32:	ldr	r1, [pc, #156]	; (28cd0 <btrfs_alloc_chunk@@Base+0x50c>)
   28c34:	it	ne
   28c36:	movne	r3, #0
   28c38:	ldr	r0, [pc, #152]	; (28cd4 <btrfs_alloc_chunk@@Base+0x510>)
   28c3a:	add	r2, pc
   28c3c:	adds	r2, #38	; 0x26
   28c3e:	add	r1, pc
   28c40:	add	r0, pc
   28c42:	str	r3, [sp, #0]
   28c44:	movw	r3, #681	; 0x2a9
   28c48:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   28c4c:	movs	r2, #0
   28c4e:	movs	r3, #0
   28c50:	mov	r1, r4
   28c52:	mov	r0, r5
   28c54:	str	r7, [sp, #0]
   28c56:	bl	1b89c <btrfs_previous_item@@Base>
   28c5a:	mov	r6, r0
   28c5c:	cmp	r0, #0
   28c5e:	beq.w	28e4a <btrfs_alloc_chunk@@Base+0x686>
   28c62:	movs	r3, #0
   28c64:	strd	r3, r3, [sp, #180]	; 0xb4
   28c68:	mov	r6, r3
   28c6a:	mov	r0, r4
   28c6c:	bl	17e26 <btrfs_free_path@@Base>
   28c70:	cmp	r6, #0
   28c72:	bne.w	28814 <btrfs_alloc_chunk@@Base+0x50>
   28c76:	mov.w	r3, #256	; 0x100
   28c7a:	strd	r3, r6, [sp, #204]	; 0xcc
   28c7e:	movs	r3, #228	; 0xe4
   28c80:	strb.w	r3, [sp, #212]	; 0xd4
   28c84:	ldr	r3, [sp, #180]	; 0xb4
   28c86:	mov	r0, fp
   28c88:	str.w	r3, [sp, #213]	; 0xd5
   28c8c:	ldr	r3, [sp, #184]	; 0xb8
   28c8e:	str.w	r3, [sp, #217]	; 0xd9
   28c92:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   28c96:	blx	8820 <malloc@plt+0x4>
   28c9a:	mov	r5, r0
   28c9c:	cmp	r0, #0
   28c9e:	beq.w	28ad2 <btrfs_alloc_chunk@@Base+0x30e>
   28ca2:	mov.w	r0, fp, lsl #4
   28ca6:	adds	r0, #72	; 0x48
   28ca8:	blx	8820 <malloc@plt+0x4>
   28cac:	mov	r7, r0
   28cae:	cmp	r0, #0
   28cb0:	bne.w	28e90 <btrfs_alloc_chunk@@Base+0x6cc>
   28cb4:	mov	r0, r5
   28cb6:	blx	85dc <free@plt+0x4>
   28cba:	b.n	28ad2 <btrfs_alloc_chunk@@Base+0x30e>
   28cbc:	movs	r0, r0
   28cbe:	vabal.u<illegal width 64>	q14, d31, d20
   28cc2:	movs	r3, r0
   28cc4:	lsls	r4, r4, #8
   28cc6:	movs	r0, r0
   28cc8:	stmia	r5!, {r2, r3, r5, r6}
   28cca:	movs	r3, r0
   28ccc:	strb	r2, [r0, #17]
   28cce:	movs	r1, r0
   28cd0:	ldr	r1, [r4, #84]	; 0x54
   28cd2:	movs	r1, r0
   28cd4:	asrs	r3, r0, #28
   28cd6:	movs	r1, r0
   28cd8:	vmov	r1, s18
   28cdc:	mov	r0, r6
   28cde:	ldr	r2, [sp, #144]	; 0x90
   28ce0:	str	r3, [sp, #188]	; 0xbc
   28ce2:	bl	27e6c <btrfs_add_root_ref@@Base+0x29c>
   28ce6:	ldrd	r0, r1, [sp, #224]	; 0xe0
   28cea:	ldrd	r8, r9, [r5, #64]	; 0x40
   28cee:	ldr	r3, [sp, #188]	; 0xbc
   28cf0:	cmp	r1, r9
   28cf2:	it	eq
   28cf4:	cmpeq	r0, r8
   28cf6:	bcc.n	28d88 <btrfs_alloc_chunk@@Base+0x5c4>
   28cf8:	cmp	r9, r1
   28cfa:	it	eq
   28cfc:	cmpeq	r8, r0
   28cfe:	bcc.n	28d90 <btrfs_alloc_chunk@@Base+0x5cc>
   28d00:	ldrb.w	r2, [sp, #232]	; 0xe8
   28d04:	cmp	r2, #204	; 0xcc
   28d06:	bne.n	28d88 <btrfs_alloc_chunk@@Base+0x5c4>
   28d08:	ldrd	r1, r2, [sp, #80]	; 0x50
   28d0c:	ldr.w	r9, [sp, #237]	; 0xed
   28d10:	ldr.w	r8, [sp, #233]	; 0xe9
   28d14:	cmp	r2, r9
   28d16:	it	eq
   28d18:	cmpeq	r1, r8
   28d1a:	bcc.n	28d90 <btrfs_alloc_chunk@@Base+0x5cc>
   28d1c:	ldrd	r1, r2, [sp, #24]
   28d20:	cmp	r2, r9
   28d22:	it	eq
   28d24:	cmpeq	r1, r8
   28d26:	bcs.n	28d3e <btrfs_alloc_chunk@@Base+0x57a>
   28d28:	ldr	r2, [sp, #124]	; 0x7c
   28d2a:	ldr	r1, [sp, #24]
   28d2c:	adds.w	r2, r8, r2
   28d30:	adc.w	r3, r9, r3
   28d34:	subs	r2, r2, r1
   28d36:	str	r2, [sp, #124]	; 0x7c
   28d38:	ldr	r2, [sp, #28]
   28d3a:	sbc.w	r3, r3, r2
   28d3e:	ldr	r2, [sp, #144]	; 0x90
   28d40:	adds	r6, #96	; 0x60
   28d42:	movs	r1, #25
   28d44:	mla	r2, r1, r2, r6
   28d48:	ldr.w	r0, [r2, #118]	; 0x76
   28d4c:	add	r6, r0
   28d4e:	ldr.w	r2, [r6, #125]!
   28d52:	adds.w	r2, r2, r8
   28d56:	str	r2, [sp, #152]	; 0x98
   28d58:	ldr	r1, [r6, #4]
   28d5a:	adc.w	r2, r1, r9
   28d5e:	str	r2, [sp, #156]	; 0x9c
   28d60:	ldrd	r8, r9, [sp, #152]	; 0x98
   28d64:	ldrd	r1, r2, [sp, #24]
   28d68:	cmp	r2, r9
   28d6a:	it	eq
   28d6c:	cmpeq	r1, r8
   28d6e:	ittt	cc
   28d70:	movcc	r1, r8
   28d72:	movcc	r2, r9
   28d74:	strdcc	r1, r2, [sp, #24]
   28d78:	ldrd	r1, r2, [sp, #80]	; 0x50
   28d7c:	ldrd	r8, r9, [sp, #24]
   28d80:	cmp	r2, r9
   28d82:	it	eq
   28d84:	cmpeq	r1, r8
   28d86:	bcc.n	28d90 <btrfs_alloc_chunk@@Base+0x5cc>
   28d88:	ldr	r2, [r4, #32]
   28d8a:	adds	r2, #1
   28d8c:	str	r2, [r4, #32]
   28d8e:	b.n	28b56 <btrfs_alloc_chunk@@Base+0x392>
   28d90:	ldrd	r1, r2, [sp, #24]
   28d94:	ldrd	r8, r9, [sp, #80]	; 0x50
   28d98:	cmp	r2, r9
   28d9a:	it	eq
   28d9c:	cmpeq	r1, r8
   28d9e:	bcs.n	28dbe <btrfs_alloc_chunk@@Base+0x5fa>
   28da0:	ldr	r1, [sp, #124]	; 0x7c
   28da2:	ldr	r2, [sp, #80]	; 0x50
   28da4:	adds	r2, r2, r1
   28da6:	ldr	r1, [sp, #84]	; 0x54
   28da8:	adc.w	r3, r1, r3
   28dac:	ldr	r1, [sp, #24]
   28dae:	subs	r2, r2, r1
   28db0:	str	r2, [sp, #32]
   28db2:	ldr	r2, [sp, #28]
   28db4:	sbc.w	r3, r3, r2
   28db8:	movs	r6, #0
   28dba:	str	r3, [sp, #36]	; 0x24
   28dbc:	b.n	28b88 <btrfs_alloc_chunk@@Base+0x3c4>
   28dbe:	ldr	r2, [sp, #124]	; 0x7c
   28dc0:	str	r2, [sp, #32]
   28dc2:	b.n	28db8 <btrfs_alloc_chunk@@Base+0x5f4>
   28dc4:	ldrd	r1, r2, [sp, #96]	; 0x60
   28dc8:	ldrd	r4, r5, [sp, #32]
   28dcc:	cmp	r2, r5
   28dce:	it	eq
   28dd0:	cmpeq	r1, r4
   28dd2:	ittt	cc
   28dd4:	movcc	r1, r4
   28dd6:	movcc	r2, r5
   28dd8:	strdcc	r1, r2, [sp, #96]	; 0x60
   28ddc:	b.n	28bc6 <btrfs_alloc_chunk@@Base+0x402>
   28dde:	ldrd	r3, r4, [sp, #16]
   28de2:	strd	r3, r4, [sp, #128]	; 0x80
   28de6:	b.n	28a40 <btrfs_alloc_chunk@@Base+0x27c>
   28de8:	cmp	fp, r7
   28dea:	ble.w	28bd6 <btrfs_alloc_chunk@@Base+0x412>
   28dee:	ldr	r3, [sp, #196]	; 0xc4
   28df0:	add	r2, sp, #196	; 0xc4
   28df2:	cmp	r3, r2
   28df4:	beq.n	28e08 <btrfs_alloc_chunk@@Base+0x644>
   28df6:	ldr	r0, [sp, #108]	; 0x6c
   28df8:	ldr	r2, [sp, #48]	; 0x30
   28dfa:	ldr	r1, [sp, #200]	; 0xc8
   28dfc:	ldr	r2, [r2, #72]	; 0x48
   28dfe:	str	r0, [r3, #4]
   28e00:	ldr	r0, [sp, #48]	; 0x30
   28e02:	str	r3, [r0, #72]	; 0x48
   28e04:	str	r2, [r1, #0]
   28e06:	str	r1, [r2, #4]
   28e08:	ldr	r3, [sp, #76]	; 0x4c
   28e0a:	cmp	r3, r7
   28e0c:	bgt.n	28e26 <btrfs_alloc_chunk@@Base+0x662>
   28e0e:	ldrd	r3, r4, [sp, #88]	; 0x58
   28e12:	orrs	r3, r4
   28e14:	beq.n	28e42 <btrfs_alloc_chunk@@Base+0x67e>
   28e16:	mov	r0, r7
   28e18:	ldr	r1, [sp, #52]	; 0x34
   28e1a:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   28e1e:	ldr	r3, [sp, #52]	; 0x34
   28e20:	mul.w	r7, r0, r3
   28e24:	b.n	28e42 <btrfs_alloc_chunk@@Base+0x67e>
   28e26:	ldr	r3, [sp, #168]	; 0xa8
   28e28:	cmp	r3, #0
   28e2a:	bne.w	28810 <btrfs_alloc_chunk@@Base+0x4c>
   28e2e:	ldrd	r3, r4, [sp, #96]	; 0x60
   28e32:	orrs	r3, r4
   28e34:	beq.w	28810 <btrfs_alloc_chunk@@Base+0x4c>
   28e38:	ldrd	r3, r4, [sp, #96]	; 0x60
   28e3c:	mov	r7, fp
   28e3e:	strd	r3, r4, [sp, #16]
   28e42:	movs	r3, #1
   28e44:	mov	fp, r7
   28e46:	str	r3, [sp, #168]	; 0xa8
   28e48:	b.n	289cc <btrfs_alloc_chunk@@Base+0x208>
   28e4a:	ldr	r2, [r4, #32]
   28e4c:	add	r1, sp, #224	; 0xe0
   28e4e:	ldr	r0, [r4, #0]
   28e50:	bl	27e6c <btrfs_add_root_ref@@Base+0x29c>
   28e54:	ldrd	r2, r3, [sp, #224]	; 0xe0
   28e58:	cmp	r3, #0
   28e5a:	it	eq
   28e5c:	cmpeq.w	r2, #256	; 0x100
   28e60:	bne.w	28c62 <btrfs_alloc_chunk@@Base+0x49e>
   28e64:	ldr	r3, [r4, #0]
   28e66:	movs	r1, #25
   28e68:	ldr	r2, [r4, #32]
   28e6a:	adds	r3, #96	; 0x60
   28e6c:	mla	r2, r1, r2, r3
   28e70:	ldr.w	r1, [sp, #237]	; 0xed
   28e74:	ldr.w	r2, [r2, #118]	; 0x76
   28e78:	add	r3, r2
   28e7a:	ldr.w	r2, [r3, #101]!
   28e7e:	ldr	r0, [r3, #4]
   28e80:	ldr.w	r3, [sp, #233]	; 0xe9
   28e84:	adds	r3, r2, r3
   28e86:	str	r3, [sp, #180]	; 0xb4
   28e88:	adc.w	r3, r0, r1
   28e8c:	str	r3, [sp, #184]	; 0xb8
   28e8e:	b.n	28c6a <btrfs_alloc_chunk@@Base+0x4a6>
   28e90:	ldr	r3, [sp, #52]	; 0x34
   28e92:	mov	r0, sl
   28e94:	ldr	r1, [sp, #120]	; 0x78
   28e96:	strd	fp, r3, [sp]
   28e9a:	ldrd	r2, r3, [sp, #16]
   28e9e:	bl	27d6c <btrfs_add_root_ref@@Base+0x19c>
   28ea2:	ldr	r3, [sp, #148]	; 0x94
   28ea4:	str	r6, [sp, #76]	; 0x4c
   28ea6:	strd	r0, r1, [r3]
   28eaa:	add.w	r3, r7, #72	; 0x48
   28eae:	str	r3, [sp, #72]	; 0x48
   28eb0:	add.w	r3, r5, #48	; 0x30
   28eb4:	str	r3, [sp, #88]	; 0x58
   28eb6:	ldr.w	r3, [pc, #1112]	; 29310 <btrfs_alloc_chunk@@Base+0xb4c>
   28eba:	add	r3, pc
   28ebc:	adds	r3, #54	; 0x36
   28ebe:	vmov	s21, r3
   28ec2:	ldr.w	r3, [pc, #1104]	; 29314 <btrfs_alloc_chunk@@Base+0xb50>
   28ec6:	add	r3, pc
   28ec8:	vmov	s22, r3
   28ecc:	ldr	r3, [sp, #76]	; 0x4c
   28ece:	ldr	r4, [sp, #196]	; 0xc4
   28ed0:	cmp	fp, r3
   28ed2:	bgt.w	28fe0 <btrfs_alloc_chunk@@Base+0x81c>
   28ed6:	ldr.w	r6, [pc, #1088]	; 29318 <btrfs_alloc_chunk@@Base+0xb54>
   28eda:	add	r3, sp, #196	; 0xc4
   28edc:	ldr.w	r1, [pc, #1084]	; 2931c <btrfs_alloc_chunk@@Base+0xb58>
   28ee0:	subs	r3, r4, r3
   28ee2:	add	r6, pc
   28ee4:	ldr.w	r0, [pc, #1080]	; 29320 <btrfs_alloc_chunk@@Base+0xb5c>
   28ee8:	add.w	r6, r6, #54	; 0x36
   28eec:	add	r1, pc
   28eee:	it	ne
   28ef0:	movne	r3, #1
   28ef2:	add	r0, pc
   28ef4:	mov	r2, r6
   28ef6:	str	r3, [sp, #0]
   28ef8:	movw	r3, #1223	; 0x4c7
   28efc:	mov	r4, r1
   28efe:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   28f02:	ldr	r3, [sp, #148]	; 0x94
   28f04:	ldr	r1, [sp, #52]	; 0x34
   28f06:	mov	r0, fp
   28f08:	add.w	r8, sp, #204	; 0xcc
   28f0c:	ldrd	r2, r3, [r3]
   28f10:	strd	r2, r3, [r5]
   28f14:	ldr	r3, [sp, #172]	; 0xac
   28f16:	ldr.w	r2, [r3, #447]	; 0x1bf
   28f1a:	ldr.w	r3, [r3, #451]	; 0x1c3
   28f1e:	strh	r1, [r5, #46]	; 0x2e
   28f20:	str	r1, [r7, #68]	; 0x44
   28f22:	strd	r2, r3, [r5, #8]
   28f26:	mov.w	r2, #65536	; 0x10000
   28f2a:	movs	r3, #0
   28f2c:	strd	r2, r3, [r5, #16]
   28f30:	ldr	r2, [sp, #44]	; 0x2c
   28f32:	ldr	r3, [sp, #120]	; 0x78
   28f34:	str.w	sl, [r5, #24]
   28f38:	ldr.w	r2, [r2, #388]	; 0x184
   28f3c:	str	r3, [r5, #28]
   28f3e:	mov.w	r3, #65536	; 0x10000
   28f42:	strd	r3, r3, [r5, #32]
   28f46:	strd	r3, r2, [r7, #56]	; 0x38
   28f4a:	strd	r3, r3, [r7, #48]	; 0x30
   28f4e:	ldr	r3, [sp, #120]	; 0x78
   28f50:	str	r2, [r5, #40]	; 0x28
   28f52:	strh.w	fp, [r5, #44]	; 0x2c
   28f56:	str	r3, [r7, #44]	; 0x2c
   28f58:	str.w	sl, [r7, #40]	; 0x28
   28f5c:	str.w	fp, [r7, #64]	; 0x40
   28f60:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   28f64:	vmov	r1, s17
   28f68:	mov	r3, r5
   28f6a:	mov	r2, r8
   28f6c:	str	r0, [sp, #0]
   28f6e:	vmov	r0, s16
   28f72:	bl	1b270 <btrfs_insert_item@@Base>
   28f76:	movw	r3, #1245	; 0x4dd
   28f7a:	mov	r2, r6
   28f7c:	mov	r1, r4
   28f7e:	str	r0, [sp, #0]
   28f80:	ldr	r0, [pc, #928]	; (29324 <btrfs_alloc_chunk@@Base+0xb60>)
   28f82:	add	r0, pc
   28f84:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   28f88:	ldr.w	r2, [sp, #213]	; 0xd5
   28f8c:	ldr.w	r3, [sp, #217]	; 0xd9
   28f90:	ldr	r1, [sp, #176]	; 0xb0
   28f92:	strd	r2, r3, [r7, #24]
   28f96:	strd	r2, r3, [r1]
   28f9a:	mov	r1, r7
   28f9c:	ldr	r3, [sp, #148]	; 0x94
   28f9e:	ldrd	r2, r3, [r3]
   28fa2:	strd	r2, r3, [r7, #32]
   28fa6:	ldr	r3, [sp, #44]	; 0x2c
   28fa8:	add.w	r0, r3, #228	; 0xe4
   28fac:	bl	15e42 <insert_cache_extent@@Base>
   28fb0:	subs.w	r9, r0, #0
   28fb4:	blt.n	29072 <btrfs_alloc_chunk@@Base+0x8ae>
   28fb6:	and.w	r2, sl, #2
   28fba:	movs	r3, #0
   28fbc:	orrs	r3, r2
   28fbe:	beq.n	28fd6 <btrfs_alloc_chunk@@Base+0x812>
   28fc0:	mov	r0, fp
   28fc2:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   28fc6:	mov	r2, r5
   28fc8:	mov	r1, r8
   28fca:	mov	r3, r0
   28fcc:	ldr	r0, [sp, #44]	; 0x2c
   28fce:	bl	28764 <btrfs_add_system_chunk@@Base>
   28fd2:	subs.w	r9, r0, #0
   28fd6:	mov	r0, r5
   28fd8:	mov	r6, r9
   28fda:	blx	85dc <free@plt+0x4>
   28fde:	b.n	28814 <btrfs_alloc_chunk@@Base+0x50>
   28fe0:	add	r3, sp, #196	; 0xc4
   28fe2:	ldr	r0, [pc, #836]	; (29328 <btrfs_alloc_chunk@@Base+0xb64>)
   28fe4:	subs	r2, r4, r3
   28fe6:	vmov	r1, s22
   28fea:	negs	r3, r2
   28fec:	add	r0, pc
   28fee:	adcs	r3, r2
   28ff0:	vmov	r2, s21
   28ff4:	str	r3, [sp, #0]
   28ff6:	movw	r3, #1196	; 0x4ac
   28ffa:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   28ffe:	ldrd	r2, r3, [sp, #56]	; 0x38
   29002:	orrs	r3, r2
   29004:	beq.n	29010 <btrfs_alloc_chunk@@Base+0x84c>
   29006:	ldr	r2, [sp, #76]	; 0x4c
   29008:	add.w	r3, fp, #4294967295	; 0xffffffff
   2900c:	cmp	r3, r2
   2900e:	bne.n	29028 <btrfs_alloc_chunk@@Base+0x864>
   29010:	ldrd	r2, r3, [r4]
   29014:	str	r3, [r2, #4]
   29016:	str	r2, [r3, #0]
   29018:	ldr	r3, [sp, #48]	; 0x30
   2901a:	ldr	r3, [r3, #72]	; 0x48
   2901c:	str	r4, [r3, #4]
   2901e:	str	r3, [r4, #0]
   29020:	ldr	r3, [sp, #108]	; 0x6c
   29022:	str	r3, [r4, #4]
   29024:	ldr	r3, [sp, #48]	; 0x30
   29026:	str	r4, [r3, #72]	; 0x48
   29028:	ldr.w	r3, [sp, #213]	; 0xd5
   2902c:	vmov	s18, r3
   29030:	ldr.w	r3, [sp, #217]	; 0xd9
   29034:	vmov	s19, r3
   29038:	ldr	r3, [r4, #8]
   2903a:	str	r3, [sp, #104]	; 0x68
   2903c:	ldrd	r2, r3, [r4, #72]	; 0x48
   29040:	strd	r2, r3, [sp, #80]	; 0x50
   29044:	ldr	r3, [sp, #104]	; 0x68
   29046:	ldr.w	r3, [r3, #464]	; 0x1d0
   2904a:	ldrd	r2, r3, [r3, #296]	; 0x128
   2904e:	cmp	r3, #0
   29050:	it	eq
   29052:	cmpeq.w	r2, #1048576	; 0x100000
   29056:	strd	r2, r3, [sp, #24]
   2905a:	ittt	cc
   2905c:	movcc.w	r2, #1048576	; 0x100000
   29060:	movcc	r3, #0
   29062:	strdcc	r2, r3, [sp, #24]
   29066:	bl	17df8 <btrfs_alloc_path@@Base>
   2906a:	mov	r6, r0
   2906c:	cbnz	r0, 2907a <btrfs_alloc_chunk@@Base+0x8b6>
   2906e:	mvn.w	r9, #11
   29072:	mov	r0, r7
   29074:	blx	85dc <free@plt+0x4>
   29078:	b.n	28fd6 <btrfs_alloc_chunk@@Base+0x812>
   2907a:	ldrd	r2, r3, [sp, #24]
   2907e:	ldrd	r0, r1, [sp, #80]	; 0x50
   29082:	cmp	r3, r1
   29084:	it	eq
   29086:	cmpeq	r2, r0
   29088:	bcs.w	292f8 <btrfs_alloc_chunk@@Base+0xb34>
   2908c:	movs	r3, #2
   2908e:	strb.w	r3, [r6, #64]	; 0x40
   29092:	ldrd	r2, r3, [r4, #64]	; 0x40
   29096:	movs	r0, #0
   29098:	ldr	r1, [sp, #104]	; 0x68
   2909a:	strd	r0, r0, [sp]
   2909e:	strd	r2, r3, [sp, #224]	; 0xe0
   290a2:	add	r2, sp, #224	; 0xe0
   290a4:	ldr	r3, [sp, #24]
   290a6:	str.w	r3, [sp, #233]	; 0xe9
   290aa:	ldr	r3, [sp, #28]
   290ac:	str.w	r3, [sp, #237]	; 0xed
   290b0:	movs	r3, #204	; 0xcc
   290b2:	strb.w	r3, [sp, #232]	; 0xe8
   290b6:	mov	r3, r6
   290b8:	bl	1a1e4 <btrfs_search_slot@@Base>
   290bc:	subs.w	r9, r0, #0
   290c0:	blt.n	2917c <btrfs_alloc_chunk@@Base+0x9b8>
   290c2:	bne.n	29164 <btrfs_alloc_chunk@@Base+0x9a0>
   290c4:	ldrd	r2, r3, [sp, #24]
   290c8:	strd	r2, r3, [sp, #32]
   290cc:	movs	r3, #0
   290ce:	movs	r2, #0
   290d0:	strd	r2, r3, [sp, #64]	; 0x40
   290d4:	add	r3, sp, #224	; 0xe0
   290d6:	vmov	s20, r3
   290da:	ldr.w	ip, [r6]
   290de:	ldr.w	lr, [r6, #32]
   290e2:	ldr.w	r3, [ip, #192]	; 0xc0
   290e6:	cmp	r3, lr
   290e8:	bhi.w	29224 <btrfs_alloc_chunk@@Base+0xa60>
   290ec:	mov.w	r3, #0
   290f0:	strb.w	r3, [r6, #65]	; 0x41
   290f4:	ldr	r3, [sp, #104]	; 0x68
   290f6:	mov	r1, r6
   290f8:	ldr.w	r0, [r3, #464]	; 0x1d0
   290fc:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   29100:	subs.w	r9, r0, #0
   29104:	beq.n	290da <btrfs_alloc_chunk@@Base+0x916>
   29106:	blt.n	2917c <btrfs_alloc_chunk@@Base+0x9b8>
   29108:	ldrd	r2, r3, [sp, #32]
   2910c:	ldrd	r0, r1, [sp, #80]	; 0x50
   29110:	cmp	r3, r1
   29112:	it	eq
   29114:	cmpeq	r2, r0
   29116:	bcs.n	2914a <btrfs_alloc_chunk@@Base+0x986>
   29118:	ldr	r2, [sp, #32]
   2911a:	ldr	r3, [sp, #80]	; 0x50
   2911c:	subs	r3, r3, r2
   2911e:	ldr	r2, [sp, #36]	; 0x24
   29120:	str	r3, [sp, #136]	; 0x88
   29122:	ldr	r3, [sp, #84]	; 0x54
   29124:	sbc.w	r3, r3, r2
   29128:	str	r3, [sp, #140]	; 0x8c
   2912a:	ldrd	r0, r1, [sp, #136]	; 0x88
   2912e:	ldrd	r2, r3, [sp, #64]	; 0x40
   29132:	cmp	r3, r1
   29134:	it	eq
   29136:	cmpeq	r2, r0
   29138:	bcs.n	2914a <btrfs_alloc_chunk@@Base+0x986>
   2913a:	mov	r2, r0
   2913c:	mov	r3, r1
   2913e:	strd	r2, r3, [sp, #64]	; 0x40
   29142:	ldrd	r2, r3, [sp, #32]
   29146:	strd	r2, r3, [sp, #24]
   2914a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2914e:	ldrd	r0, r1, [sp, #16]
   29152:	cmp	r3, r1
   29154:	it	eq
   29156:	cmpeq	r2, r0
   29158:	ite	cc
   2915a:	mvncc.w	r9, #27
   2915e:	movcs.w	r9, #0
   29162:	b.n	2917c <btrfs_alloc_chunk@@Base+0x9b8>
   29164:	ldrb.w	r3, [sp, #232]	; 0xe8
   29168:	mov	r1, r6
   2916a:	ldr	r0, [sp, #104]	; 0x68
   2916c:	str	r3, [sp, #0]
   2916e:	ldrd	r2, r3, [sp, #224]	; 0xe0
   29172:	bl	1b89c <btrfs_previous_item@@Base>
   29176:	subs.w	r9, r0, #0
   2917a:	bge.n	290c4 <btrfs_alloc_chunk@@Base+0x900>
   2917c:	mov	r0, r6
   2917e:	bl	17e26 <btrfs_free_path@@Base>
   29182:	cmp.w	r9, #0
   29186:	bne.w	29072 <btrfs_alloc_chunk@@Base+0x8ae>
   2918a:	ldrd	r2, r3, [sp, #24]
   2918e:	mov	r1, r4
   29190:	vmov	r0, s16
   29194:	strd	r2, r3, [sp, #8]
   29198:	ldrd	r2, r3, [sp, #16]
   2919c:	strd	r2, r3, [sp]
   291a0:	vmov	r2, s18
   291a4:	vmov	r3, s19
   291a8:	bl	28334 <btrfs_insert_dev_extent@@Base>
   291ac:	subs.w	r9, r0, #0
   291b0:	blt.w	29072 <btrfs_alloc_chunk@@Base+0x8ae>
   291b4:	ldrd	r3, r2, [r4, #80]	; 0x50
   291b8:	ldr	r1, [sp, #16]
   291ba:	vmov	r0, s16
   291be:	adds	r3, r3, r1
   291c0:	ldr	r1, [sp, #20]
   291c2:	adc.w	r2, r1, r2
   291c6:	mov	r1, r4
   291c8:	strd	r3, r2, [r4, #80]	; 0x50
   291cc:	bl	28680 <btrfs_update_device@@Base>
   291d0:	ldr	r3, [sp, #72]	; 0x48
   291d2:	adds	r3, #16
   291d4:	str	r3, [sp, #72]	; 0x48
   291d6:	ldr	r3, [sp, #88]	; 0x58
   291d8:	add.w	r1, r3, #32
   291dc:	subs.w	r9, r0, #0
   291e0:	blt.w	29072 <btrfs_alloc_chunk@@Base+0x8ae>
   291e4:	ldr	r3, [sp, #72]	; 0x48
   291e6:	str.w	r4, [r3, #-16]
   291ea:	mov	r0, r3
   291ec:	ldrd	r2, r3, [sp, #24]
   291f0:	strd	r2, r3, [r0, #-8]
   291f4:	ldrd	r2, r3, [r4, #64]	; 0x40
   291f8:	strd	r2, r3, [r1, #-32]
   291fc:	ldrd	r2, r3, [sp, #24]
   29200:	strd	r2, r3, [r1, #-24]
   29204:	add.w	r3, r4, #112	; 0x70
   29208:	ldr	r2, [sp, #88]	; 0x58
   2920a:	adds	r4, #128	; 0x80
   2920c:	adds	r2, #16
   2920e:	ldr.w	r0, [r3], #4
   29212:	cmp	r3, r4
   29214:	str.w	r0, [r2], #4
   29218:	bne.n	2920e <btrfs_alloc_chunk@@Base+0xa4a>
   2921a:	ldr	r3, [sp, #76]	; 0x4c
   2921c:	str	r1, [sp, #88]	; 0x58
   2921e:	adds	r3, #1
   29220:	str	r3, [sp, #76]	; 0x4c
   29222:	b.n	28ecc <btrfs_alloc_chunk@@Base+0x708>
   29224:	mov	r2, lr
   29226:	vmov	r1, s20
   2922a:	mov	r0, ip
   2922c:	str.w	lr, [sp, #124]	; 0x7c
   29230:	str.w	ip, [sp, #96]	; 0x60
   29234:	bl	27e6c <btrfs_add_root_ref@@Base+0x29c>
   29238:	ldrd	r8, r9, [sp, #224]	; 0xe0
   2923c:	ldrd	r2, r3, [r4, #64]	; 0x40
   29240:	cmp	r9, r3
   29242:	it	eq
   29244:	cmpeq	r8, r2
   29246:	bcc.n	292f0 <btrfs_alloc_chunk@@Base+0xb2c>
   29248:	cmp	r3, r9
   2924a:	it	eq
   2924c:	cmpeq	r2, r8
   2924e:	bcc.w	29108 <btrfs_alloc_chunk@@Base+0x944>
   29252:	ldrb.w	r3, [sp, #232]	; 0xe8
   29256:	cmp	r3, #204	; 0xcc
   29258:	bne.n	292f0 <btrfs_alloc_chunk@@Base+0xb2c>
   2925a:	ldrd	r2, r3, [sp, #32]
   2925e:	ldr.w	r9, [sp, #237]	; 0xed
   29262:	ldr.w	r8, [sp, #233]	; 0xe9
   29266:	cmp	r3, r9
   29268:	ldr.w	ip, [sp, #96]	; 0x60
   2926c:	it	eq
   2926e:	cmpeq	r2, r8
   29270:	ldr.w	lr, [sp, #124]	; 0x7c
   29274:	bcs.n	292b6 <btrfs_alloc_chunk@@Base+0xaf2>
   29276:	ldr	r3, [sp, #32]
   29278:	subs.w	r3, r8, r3
   2927c:	str	r3, [sp, #112]	; 0x70
   2927e:	ldr	r3, [sp, #36]	; 0x24
   29280:	sbc.w	r3, r9, r3
   29284:	str	r3, [sp, #116]	; 0x74
   29286:	ldrd	r0, r1, [sp, #112]	; 0x70
   2928a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2928e:	cmp	r3, r1
   29290:	it	eq
   29292:	cmpeq	r2, r0
   29294:	bcs.n	292a6 <btrfs_alloc_chunk@@Base+0xae2>
   29296:	mov	r2, r0
   29298:	mov	r3, r1
   2929a:	strd	r2, r3, [sp, #64]	; 0x40
   2929e:	ldrd	r2, r3, [sp, #32]
   292a2:	strd	r2, r3, [sp, #24]
   292a6:	ldrd	r2, r3, [sp, #112]	; 0x70
   292aa:	ldrd	r0, r1, [sp, #16]
   292ae:	cmp	r3, r1
   292b0:	it	eq
   292b2:	cmpeq	r2, r0
   292b4:	bcs.n	292fe <btrfs_alloc_chunk@@Base+0xb3a>
   292b6:	add.w	r0, ip, #96	; 0x60
   292ba:	movs	r3, #25
   292bc:	mla	r2, r3, lr, r0
   292c0:	ldr.w	r3, [r2, #118]	; 0x76
   292c4:	add	r0, r3
   292c6:	ldr.w	r3, [r0, #125]!
   292ca:	adds.w	r3, r3, r8
   292ce:	str	r3, [sp, #160]	; 0xa0
   292d0:	ldr	r2, [r0, #4]
   292d2:	adc.w	r3, r2, r9
   292d6:	str	r3, [sp, #164]	; 0xa4
   292d8:	ldrd	r0, r1, [sp, #160]	; 0xa0
   292dc:	ldrd	r2, r3, [sp, #32]
   292e0:	cmp	r3, r1
   292e2:	it	eq
   292e4:	cmpeq	r2, r0
   292e6:	ittt	cc
   292e8:	movcc	r2, r0
   292ea:	movcc	r3, r1
   292ec:	strdcc	r2, r3, [sp, #32]
   292f0:	ldr	r3, [r6, #32]
   292f2:	adds	r3, #1
   292f4:	str	r3, [r6, #32]
   292f6:	b.n	290da <btrfs_alloc_chunk@@Base+0x916>
   292f8:	mvn.w	r9, #27
   292fc:	b.n	2917c <btrfs_alloc_chunk@@Base+0x9b8>
   292fe:	mov.w	r9, #0
   29302:	b.n	2917c <btrfs_alloc_chunk@@Base+0x9b8>
   29304:	mov	r0, r6
   29306:	add	sp, #252	; 0xfc
   29308:	vpop	{d8-d11}
   2930c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29310:	strb	r2, [r0, #7]
   29312:	movs	r1, r0
   29314:	ldr	r1, [r3, #44]	; 0x2c
   29316:	movs	r1, r0
   29318:	strb	r2, [r3, #6]
   2931a:	movs	r1, r0
   2931c:	ldr	r3, [r6, #40]	; 0x28
   2931e:	movs	r1, r0
   29320:	ldr	r7, [r6, #40]	; 0x28
   29322:	movs	r1, r0
   29324:	lsrs	r2, r4, #25
   29326:	movs	r1, r0
   29328:	ldr	r6, [r7, #24]
   2932a:	movs	r1, r0

0002932c <btrfs_alloc_data_chunk@@Base>:
   2932c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29330:	mov	r7, r1
   29332:	vpush	{d8}
   29336:	mov	r8, r0
   29338:	ldr	r1, [pc, #504]	; (29534 <btrfs_alloc_data_chunk@@Base+0x208>)
   2933a:	ldr.w	r6, [r7, #352]	; 0x160
   2933e:	add	r1, pc
   29340:	sub	sp, #60	; 0x3c
   29342:	ldrd	sl, fp, [r2]
   29346:	ldr	r3, [sp, #104]	; 0x68
   29348:	cmp	fp, fp
   2934a:	str	r3, [sp, #16]
   2934c:	ldr	r3, [sp, #108]	; 0x6c
   2934e:	str	r3, [sp, #20]
   29350:	ldr	r3, [pc, #484]	; (29538 <btrfs_alloc_data_chunk@@Base+0x20c>)
   29352:	ldr	r3, [r1, r3]
   29354:	ldr	r3, [r3, #0]
   29356:	str	r3, [sp, #52]	; 0x34
   29358:	mov.w	r3, #0
   2935c:	ldr	r3, [r7, #24]
   2935e:	str	r3, [sp, #24]
   29360:	ldr	r3, [r7, #32]
   29362:	vmov	s17, r3
   29366:	ldr.w	r3, [r7, #388]	; 0x184
   2936a:	rsb	r1, r3, #0
   2936e:	mov	r3, fp
   29370:	and.w	r2, r1, sl
   29374:	it	eq
   29376:	cmpeq	sl, r2
   29378:	beq.n	2939e <btrfs_alloc_data_chunk@@Base+0x72>
   2937a:	ldr	r0, [pc, #448]	; (2953c <btrfs_alloc_data_chunk@@Base+0x210>)
   2937c:	mov	r2, sl
   2937e:	mvn.w	r5, #21
   29382:	add	r0, pc
   29384:	bl	17424 <__btrfs_error@@Base>
   29388:	ldr	r2, [pc, #436]	; (29540 <btrfs_alloc_data_chunk@@Base+0x214>)
   2938a:	ldr	r3, [pc, #428]	; (29538 <btrfs_alloc_data_chunk@@Base+0x20c>)
   2938c:	add	r2, pc
   2938e:	ldr	r3, [r2, r3]
   29390:	ldr	r2, [r3, #0]
   29392:	ldr	r3, [sp, #52]	; 0x34
   29394:	eors	r2, r3
   29396:	beq.w	29528 <btrfs_alloc_data_chunk@@Base+0x1fc>
   2939a:	blx	86b8 <__stack_chk_fail@plt>
   2939e:	movs	r0, #1
   293a0:	mov.w	r2, #256	; 0x100
   293a4:	movs	r3, #0
   293a6:	str.w	sl, [sp, #41]	; 0x29
   293aa:	strd	r2, r3, [sp, #32]
   293ae:	movs	r3, #228	; 0xe4
   293b0:	str.w	fp, [sp, #45]	; 0x2d
   293b4:	strb.w	r3, [sp, #40]	; 0x28
   293b8:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   293bc:	blx	8820 <malloc@plt+0x4>
   293c0:	mov	r4, r0
   293c2:	cbz	r0, 293d4 <btrfs_alloc_data_chunk@@Base+0xa8>
   293c4:	movs	r0, #88	; 0x58
   293c6:	blx	8820 <malloc@plt+0x4>
   293ca:	mov	r5, r0
   293cc:	cbnz	r0, 293da <btrfs_alloc_data_chunk@@Base+0xae>
   293ce:	mov	r0, r4
   293d0:	blx	85dc <free@plt+0x4>
   293d4:	mvn.w	r5, #11
   293d8:	b.n	29388 <btrfs_alloc_data_chunk@@Base+0x5c>
   293da:	ldr	r3, [sp, #16]
   293dc:	mov	r2, sl
   293de:	ldr	r6, [r6, #72]	; 0x48
   293e0:	mov	r0, r8
   293e2:	strd	sl, fp, [sp, #8]
   293e6:	str	r3, [sp, #0]
   293e8:	ldr	r3, [sp, #20]
   293ea:	mov	r1, r6
   293ec:	ldr.w	r9, [pc, #340]	; 29544 <btrfs_alloc_data_chunk@@Base+0x218>
   293f0:	str	r3, [sp, #4]
   293f2:	mov	r3, fp
   293f4:	bl	28334 <btrfs_insert_dev_extent@@Base>
   293f8:	ldr	r2, [pc, #332]	; (29548 <btrfs_alloc_data_chunk@@Base+0x21c>)
   293fa:	ldr	r1, [pc, #336]	; (2954c <btrfs_alloc_data_chunk@@Base+0x220>)
   293fc:	add	r9, pc
   293fe:	add	r2, pc
   29400:	movw	r3, #1332	; 0x534
   29404:	add	r1, pc
   29406:	adds	r2, #72	; 0x48
   29408:	str	r2, [sp, #28]
   2940a:	vmov	s16, r1
   2940e:	str	r0, [sp, #0]
   29410:	mov	r0, r9
   29412:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   29416:	ldrd	r3, r1, [r6, #80]	; 0x50
   2941a:	ldr	r2, [sp, #16]
   2941c:	mov	r0, r8
   2941e:	adds	r3, r3, r2
   29420:	ldr	r2, [sp, #20]
   29422:	adc.w	r1, r2, r1
   29426:	strd	r3, r1, [r6, #80]	; 0x50
   2942a:	mov	r1, r6
   2942c:	bl	28680 <btrfs_update_device@@Base>
   29430:	ldr	r2, [sp, #28]
   29432:	mov.w	r3, #1336	; 0x538
   29436:	vmov	r1, s16
   2943a:	str	r0, [sp, #0]
   2943c:	mov	r0, r9
   2943e:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   29442:	str	r6, [r5, #72]	; 0x48
   29444:	strd	sl, fp, [r5, #80]	; 0x50
   29448:	add.w	ip, r4, #64	; 0x40
   2944c:	ldrd	r2, r3, [r6, #64]	; 0x40
   29450:	strd	sl, fp, [r4, #56]	; 0x38
   29454:	strd	r2, r3, [r4, #48]	; 0x30
   29458:	add.w	r3, r6, #112	; 0x70
   2945c:	adds	r6, #128	; 0x80
   2945e:	ldr	r0, [r3, #0]
   29460:	adds	r3, #8
   29462:	ldr.w	r1, [r3, #-4]
   29466:	cmp	r3, r6
   29468:	mov	r2, ip
   2946a:	stmia	r2!, {r0, r1}
   2946c:	mov	ip, r2
   2946e:	bne.n	2945e <btrfs_alloc_data_chunk@@Base+0x132>
   29470:	ldr	r3, [sp, #16]
   29472:	movs	r0, #1
   29474:	movs	r1, #0
   29476:	mov.w	r6, #65537	; 0x10001
   2947a:	str	r3, [r4, #0]
   2947c:	ldr	r3, [sp, #20]
   2947e:	str	r3, [r4, #4]
   29480:	ldr	r3, [sp, #24]
   29482:	ldr.w	r2, [r3, #447]	; 0x1bf
   29486:	ldr.w	r3, [r3, #451]	; 0x1c3
   2948a:	strd	r0, r1, [r4, #24]
   2948e:	str	r6, [r4, #44]	; 0x2c
   29490:	strd	r2, r3, [r4, #8]
   29494:	mov.w	r2, #65536	; 0x10000
   29498:	movs	r3, #0
   2949a:	strd	r2, r3, [r4, #16]
   2949e:	ldr.w	r2, [r7, #388]	; 0x184
   294a2:	mov.w	r3, #65536	; 0x10000
   294a6:	strd	r0, r1, [r5, #40]	; 0x28
   294aa:	strd	r3, r3, [r4, #32]
   294ae:	strd	r3, r2, [r5, #56]	; 0x38
   294b2:	str	r2, [r4, #40]	; 0x28
   294b4:	strd	r3, r3, [r5, #48]	; 0x30
   294b8:	strd	r0, r0, [r5, #64]	; 0x40
   294bc:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   294c0:	vmov	r1, s17
   294c4:	add	r2, sp, #32
   294c6:	mov	r3, r4
   294c8:	ldr	r6, [pc, #132]	; (29550 <btrfs_alloc_data_chunk@@Base+0x224>)
   294ca:	add	r6, pc
   294cc:	str	r0, [sp, #0]
   294ce:	mov	r0, r8
   294d0:	bl	1b270 <btrfs_insert_item@@Base>
   294d4:	ldr.w	r8, [pc, #124]	; 29554 <btrfs_alloc_data_chunk@@Base+0x228>
   294d8:	ldr	r2, [pc, #124]	; (29558 <btrfs_alloc_data_chunk@@Base+0x22c>)
   294da:	movw	r3, #1367	; 0x557
   294de:	add	r8, pc
   294e0:	add	r2, pc
   294e2:	adds	r2, #72	; 0x48
   294e4:	mov	r1, r8
   294e6:	str	r2, [sp, #24]
   294e8:	str	r0, [sp, #0]
   294ea:	mov	r0, r6
   294ec:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   294f0:	ldr.w	r1, [sp, #41]	; 0x29
   294f4:	ldr.w	r3, [sp, #45]	; 0x2d
   294f8:	add.w	r0, r7, #228	; 0xe4
   294fc:	strd	r1, r3, [r5, #24]
   29500:	mov	r1, r5
   29502:	ldr	r3, [sp, #16]
   29504:	str	r3, [r5, #32]
   29506:	ldr	r3, [sp, #20]
   29508:	str	r3, [r5, #36]	; 0x24
   2950a:	bl	15e42 <insert_cache_extent@@Base>
   2950e:	ldr	r2, [sp, #24]
   29510:	movw	r3, #1373	; 0x55d
   29514:	mov	r1, r8
   29516:	str	r0, [sp, #0]
   29518:	mov	r5, r0
   2951a:	mov	r0, r6
   2951c:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   29520:	mov	r0, r4
   29522:	blx	85dc <free@plt+0x4>
   29526:	b.n	29388 <btrfs_alloc_data_chunk@@Base+0x5c>
   29528:	mov	r0, r5
   2952a:	add	sp, #60	; 0x3c
   2952c:	vpop	{d8}
   29530:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29534:	rev16	r2, r1
   29536:	movs	r3, r0
   29538:	lsls	r4, r4, #8
   2953a:	movs	r0, r0
   2953c:	str	r2, [r0, #100]	; 0x64
   2953e:	movs	r1, r0
   29540:	cbnz	r4, 29582 <btrfs_num_copies@@Base+0x26>
   29542:	movs	r3, r0
   29544:	lsrs	r0, r5, #7
   29546:	movs	r1, r0
   29548:	ldr	r6, [r7, #68]	; 0x44
   2954a:	movs	r1, r0
   2954c:	str	r3, [r3, #88]	; 0x58
   2954e:	movs	r1, r0
   29550:	lsrs	r2, r3, #4
   29552:	movs	r1, r0
   29554:	str	r1, [r0, #76]	; 0x4c
   29556:	movs	r1, r0
   29558:	ldr	r4, [r3, #56]	; 0x38
   2955a:	movs	r1, r0

0002955c <btrfs_num_copies@@Base>:
   2955c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29560:	sub	sp, #44	; 0x2c
   29562:	adds	r0, #228	; 0xe4
   29564:	mov	r4, r2
   29566:	ldrd	fp, r1, [sp, #80]	; 0x50
   2956a:	mov	r5, r3
   2956c:	ldr.w	sl, [pc, #196]	; 29634 <btrfs_num_copies@@Base+0xd8>
   29570:	str	r1, [sp, #36]	; 0x24
   29572:	bl	15f84 <search_cache_extent@@Base>
   29576:	add	sl, pc
   29578:	ldr	r1, [sp, #36]	; 0x24
   2957a:	cbnz	r0, 295a6 <btrfs_num_copies@@Base+0x4a>
   2957c:	ldr	r3, [pc, #184]	; (29638 <btrfs_num_copies@@Base+0xdc>)
   2957e:	adds.w	r2, r4, fp
   29582:	adc.w	r1, r5, r1
   29586:	ldr.w	r3, [sl, r3]
   2958a:	strd	r2, r1, [sp, #8]
   2958e:	movs	r1, #1
   29590:	ldr	r2, [pc, #168]	; (2963c <btrfs_num_copies@@Base+0xe0>)
   29592:	strd	r4, r5, [sp]
   29596:	add	r2, pc
   29598:	ldr	r0, [r3, #0]
   2959a:	blx	8a14 <__fprintf_chk@plt+0x4>
   2959e:	movs	r0, #1
   295a0:	add	sp, #44	; 0x2c
   295a2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   295a6:	ldrd	r8, r9, [r0, #24]
   295aa:	ldrd	r3, r2, [r0, #32]
   295ae:	adds.w	r6, r8, r3
   295b2:	adc.w	r7, r9, r2
   295b6:	cmp	r5, r9
   295b8:	it	eq
   295ba:	cmpeq	r4, r8
   295bc:	bcc.n	295c6 <btrfs_num_copies@@Base+0x6a>
   295be:	cmp	r7, r5
   295c0:	it	eq
   295c2:	cmpeq	r6, r4
   295c4:	bcs.n	295f2 <btrfs_num_copies@@Base+0x96>
   295c6:	ldr	r3, [pc, #112]	; (29638 <btrfs_num_copies@@Base+0xdc>)
   295c8:	adds.w	r2, r4, fp
   295cc:	adc.w	r1, r5, r1
   295d0:	ldr.w	r3, [sl, r3]
   295d4:	strd	r2, r1, [sp, #8]
   295d8:	movs	r1, #1
   295da:	ldr	r2, [pc, #100]	; (29640 <btrfs_num_copies@@Base+0xe4>)
   295dc:	strd	r6, r7, [sp, #24]
   295e0:	strd	r8, r9, [sp, #16]
   295e4:	add	r2, pc
   295e6:	strd	r4, r5, [sp]
   295ea:	ldr	r0, [r3, #0]
   295ec:	blx	8a14 <__fprintf_chk@plt+0x4>
   295f0:	b.n	2959e <btrfs_num_copies@@Base+0x42>
   295f2:	ldr	r2, [r0, #40]	; 0x28
   295f4:	movs	r3, #0
   295f6:	mov	r5, r3
   295f8:	and.w	r4, r2, #1584	; 0x630
   295fc:	orrs.w	r1, r4, r5
   29600:	beq.n	29606 <btrfs_num_copies@@Base+0xaa>
   29602:	ldr	r0, [r0, #64]	; 0x40
   29604:	b.n	295a0 <btrfs_num_copies@@Base+0x44>
   29606:	and.w	r4, r2, #64	; 0x40
   2960a:	orrs.w	r1, r4, r5
   2960e:	beq.n	29614 <btrfs_num_copies@@Base+0xb8>
   29610:	ldr	r0, [r0, #68]	; 0x44
   29612:	b.n	295a0 <btrfs_num_copies@@Base+0x44>
   29614:	and.w	r0, r2, #128	; 0x80
   29618:	mov	r1, r3
   2961a:	orrs	r1, r0
   2961c:	bne.n	29630 <btrfs_num_copies@@Base+0xd4>
   2961e:	and.w	r0, r2, #256	; 0x100
   29622:	mov	r1, r3
   29624:	orrs.w	r3, r0, r1
   29628:	ite	ne
   2962a:	movne	r0, #3
   2962c:	moveq	r0, #1
   2962e:	b.n	295a0 <btrfs_num_copies@@Base+0x44>
   29630:	movs	r0, #2
   29632:	b.n	295a0 <btrfs_num_copies@@Base+0x44>
   29634:			; <UNDEFINED> instruction: 0xb812
   29636:	movs	r3, r0
   29638:	lsls	r4, r6, #8
   2963a:	movs	r0, r0
   2963c:	str	r4, [r3, #68]	; 0x44
   2963e:	movs	r1, r0
   29640:	str	r0, [r5, #64]	; 0x40
   29642:	movs	r1, r0

00029644 <btrfs_next_bg@@Base>:
   29644:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29648:	adds	r0, #228	; 0xe4
   2964a:	ldrd	r4, r5, [r1]
   2964e:	mov	r7, r2
   29650:	ldrd	sl, fp, [sp, #40]	; 0x28
   29654:	mov	r6, r1
   29656:	mov	r2, r4
   29658:	mov	r3, r5
   2965a:	bl	15f84 <search_cache_extent@@Base>
   2965e:	cbz	r0, 2966c <btrfs_next_bg@@Base+0x28>
   29660:	orrs.w	r3, r4, r5
   29664:	beq.n	29674 <btrfs_next_bg@@Base+0x30>
   29666:	bl	16058 <next_cache_extent@@Base>
   2966a:	cbnz	r0, 29674 <btrfs_next_bg@@Base+0x30>
   2966c:	mvn.w	r0, #1
   29670:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29674:	ldrd	r2, r3, [r0, #40]	; 0x28
   29678:	ldrd	r4, r5, [r0, #24]
   2967c:	and.w	r8, sl, r2
   29680:	and.w	r9, fp, r3
   29684:	orrs.w	r3, r8, r9
   29688:	beq.n	2969a <btrfs_next_bg@@Base+0x56>
   2968a:	strd	r4, r5, [r6]
   2968e:	ldrd	r2, r3, [r0, #32]
   29692:	movs	r0, #0
   29694:	strd	r2, r3, [r7]
   29698:	b.n	29670 <btrfs_next_bg@@Base+0x2c>
   2969a:	orrs.w	r3, r4, r5
   2969e:	bne.n	2965e <btrfs_next_bg@@Base+0x1a>
   296a0:	bl	16058 <next_cache_extent@@Base>
   296a4:	b.n	2965e <btrfs_next_bg@@Base+0x1a>

000296a6 <btrfs_rmap_block@@Base>:
   296a6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   296aa:	adds	r0, #228	; 0xe4
   296ac:	sub	sp, #60	; 0x3c
   296ae:	bl	15f84 <search_cache_extent@@Base>
   296b2:	ldr	r2, [pc, #464]	; (29884 <btrfs_rmap_block@@Base+0x1de>)
   296b4:	ldr	r1, [pc, #464]	; (29888 <btrfs_rmap_block@@Base+0x1e2>)
   296b6:	movw	r3, #1467	; 0x5bb
   296ba:	add	r2, pc
   296bc:	adds	r2, #95	; 0x5f
   296be:	add	r1, pc
   296c0:	mov	r4, r0
   296c2:	clz	r0, r0
   296c6:	lsrs	r0, r0, #5
   296c8:	str	r0, [sp, #0]
   296ca:	ldr	r0, [pc, #448]	; (2988c <btrfs_rmap_block@@Base+0x1e6>)
   296cc:	add	r0, pc
   296ce:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   296d2:	ldr	r5, [r4, #56]	; 0x38
   296d4:	ldr	r0, [r4, #40]	; 0x28
   296d6:	movs	r1, #0
   296d8:	ldrd	r6, r7, [r4, #32]
   296dc:	asrs	r3, r5, #31
   296de:	mov	r2, r5
   296e0:	strd	r2, r3, [sp, #8]
   296e4:	and.w	r2, r0, #64	; 0x40
   296e8:	mov	r3, r1
   296ea:	orrs	r3, r2
   296ec:	beq.n	2973c <btrfs_rmap_block@@Base+0x96>
   296ee:	ldrd	r0, r1, [r4, #64]	; 0x40
   296f2:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   296f6:	mov	r2, r0
   296f8:	mov	r0, r6
   296fa:	mov	r1, r7
   296fc:	asrs	r3, r2, #31
   296fe:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29702:	mov	r6, r0
   29704:	mov	r7, r1
   29706:	ldr	r1, [r4, #64]	; 0x40
   29708:	movs	r0, #1
   2970a:	mov.w	r8, #0
   2970e:	mov	sl, r8
   29710:	mov	r9, r8
   29712:	lsls	r1, r1, #3
   29714:	blx	8544 <calloc@plt+0x4>
   29718:	strd	r0, r4, [sp, #24]
   2971c:	ldr	r5, [r4, #64]	; 0x40
   2971e:	cmp	r5, r8
   29720:	bgt.n	2977a <btrfs_rmap_block@@Base+0xd4>
   29722:	ldr	r3, [sp, #104]	; 0x68
   29724:	movs	r0, #0
   29726:	ldr	r2, [sp, #24]
   29728:	str	r2, [r3, #0]
   2972a:	ldr	r3, [sp, #108]	; 0x6c
   2972c:	ldr	r2, [sp, #8]
   2972e:	str.w	r9, [r3]
   29732:	ldr	r3, [sp, #112]	; 0x70
   29734:	str	r2, [r3, #0]
   29736:	add	sp, #60	; 0x3c
   29738:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2973c:	and.w	r8, r0, #8
   29740:	mov	r9, r1
   29742:	orrs.w	r3, r8, r9
   29746:	ldr	r2, [r4, #64]	; 0x40
   29748:	bne.n	296f8 <btrfs_rmap_block@@Base+0x52>
   2974a:	and.w	r2, r0, #384	; 0x180
   2974e:	mov	r3, r1
   29750:	orrs	r3, r2
   29752:	beq.n	29706 <btrfs_rmap_block@@Base+0x60>
   29754:	mov	r0, r4
   29756:	bl	27cd0 <btrfs_add_root_ref@@Base+0x100>
   2975a:	mov	r1, r7
   2975c:	asrs	r3, r0, #31
   2975e:	mov	r2, r0
   29760:	mov	r8, r0
   29762:	mov	r0, r6
   29764:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29768:	mul.w	r5, r8, r5
   2976c:	asrs	r3, r5, #31
   2976e:	mov	r2, r5
   29770:	strd	r2, r3, [sp, #8]
   29774:	mov	r6, r0
   29776:	mov	r7, r1
   29778:	b.n	29706 <btrfs_rmap_block@@Base+0x60>
   2977a:	ldr	r3, [sp, #28]
   2977c:	ldrd	fp, ip, [r3, #80]	; 0x50
   29780:	ldrd	r2, r3, [sp, #96]	; 0x60
   29784:	cmp	r3, ip
   29786:	it	eq
   29788:	cmpeq	r2, fp
   2978a:	bcc.n	29834 <btrfs_rmap_block@@Base+0x18e>
   2978c:	adds.w	r3, fp, r6
   29790:	str	r3, [sp, #32]
   29792:	adc.w	r3, ip, r7
   29796:	str	r3, [sp, #36]	; 0x24
   29798:	ldrd	r0, r1, [sp, #32]
   2979c:	ldrd	r2, r3, [sp, #96]	; 0x60
   297a0:	cmp	r3, r1
   297a2:	it	eq
   297a4:	cmpeq	r2, r0
   297a6:	bcs.n	29834 <btrfs_rmap_block@@Base+0x18e>
   297a8:	ldr	r1, [sp, #96]	; 0x60
   297aa:	ldr	r2, [r4, #56]	; 0x38
   297ac:	subs.w	r0, r1, fp
   297b0:	ldr	r1, [sp, #100]	; 0x64
   297b2:	mov.w	r3, r2, asr #31
   297b6:	sbc.w	r1, r1, ip
   297ba:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   297be:	ldr	r3, [r4, #40]	; 0x28
   297c0:	and.w	r2, r3, #64	; 0x40
   297c4:	str	r2, [sp, #40]	; 0x28
   297c6:	movs	r2, #0
   297c8:	str	r2, [sp, #44]	; 0x2c
   297ca:	ldrd	fp, ip, [sp, #40]	; 0x28
   297ce:	orrs.w	r2, fp, ip
   297d2:	mov	lr, r0
   297d4:	beq.n	29844 <btrfs_rmap_block@@Base+0x19e>
   297d6:	asrs	r3, r5, #31
   297d8:	ldr	r2, [r4, #68]	; 0x44
   297da:	muls	r1, r5
   297dc:	mla	r1, lr, r3, r1
   297e0:	asrs	r3, r2, #31
   297e2:	umull	fp, ip, r5, lr
   297e6:	add	ip, r1
   297e8:	adds.w	r0, fp, r8
   297ec:	adc.w	r1, ip, sl
   297f0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   297f4:	mov	lr, r0
   297f6:	ldr	r3, [sp, #12]
   297f8:	ldr	r2, [sp, #8]
   297fa:	mul.w	r3, lr, r3
   297fe:	mla	r1, r2, r1, r3
   29802:	umull	r2, r3, lr, r2
   29806:	add	r3, r1
   29808:	ldrd	r1, r0, [r4, #24]
   2980c:	adds	r1, r2, r1
   2980e:	str	r1, [sp, #16]
   29810:	adcs	r3, r0
   29812:	str	r3, [sp, #20]
   29814:	ldr	r3, [sp, #24]
   29816:	sub.w	r2, r3, #8
   2981a:	movs	r3, #0
   2981c:	cmp	r3, r9
   2981e:	blt.n	2986e <btrfs_rmap_block@@Base+0x1c8>
   29820:	bne.n	29834 <btrfs_rmap_block@@Base+0x18e>
   29822:	ldr	r3, [sp, #24]
   29824:	ldrd	r1, r2, [sp, #16]
   29828:	add.w	r3, r3, r9, lsl #3
   2982c:	add.w	r9, r9, #1
   29830:	strd	r1, r2, [r3]
   29834:	ldr	r3, [sp, #28]
   29836:	adds.w	r8, r8, #1
   2983a:	adc.w	sl, sl, #0
   2983e:	adds	r3, #16
   29840:	str	r3, [sp, #28]
   29842:	b.n	2971c <btrfs_rmap_block@@Base+0x76>
   29844:	and.w	r3, r3, #8
   29848:	str	r3, [sp, #48]	; 0x30
   2984a:	movs	r3, #0
   2984c:	str	r3, [sp, #52]	; 0x34
   2984e:	ldrd	r2, r3, [sp, #48]	; 0x30
   29852:	orrs	r3, r2
   29854:	beq.n	297f6 <btrfs_rmap_block@@Base+0x150>
   29856:	asrs	r3, r5, #31
   29858:	muls	r1, r5
   2985a:	mla	r3, lr, r3, r1
   2985e:	umull	r0, r1, r5, lr
   29862:	add	r1, r3
   29864:	adds.w	lr, r0, r8
   29868:	adc.w	r1, r1, sl
   2986c:	b.n	297f6 <btrfs_rmap_block@@Base+0x150>
   2986e:	ldrd	r0, r1, [r2, #8]!
   29872:	ldrd	fp, ip, [sp, #16]
   29876:	cmp	r1, ip
   29878:	it	eq
   2987a:	cmpeq	r0, fp
   2987c:	beq.n	29834 <btrfs_rmap_block@@Base+0x18e>
   2987e:	adds	r3, #1
   29880:	b.n	2981c <btrfs_rmap_block@@Base+0x176>
   29882:	nop
   29884:	ldr	r2, [r0, #28]
   29886:	movs	r1, r0
   29888:	str	r1, [r4, #44]	; 0x2c
   2988a:	movs	r1, r0
   2988c:	str	r6, [r5, #52]	; 0x34
   2988e:	movs	r1, r0

00029890 <__btrfs_map_block@@Base>:
   29890:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29894:	sub	sp, #124	; 0x7c
   29896:	mov	fp, r1
   29898:	strd	r2, r3, [sp, #16]
   2989c:	ldrd	r3, r5, [sp, #168]	; 0xa8
   298a0:	cbz	r3, 298da <__btrfs_map_block@@Base+0x4a>
   298a2:	cmp	r1, #0
   298a4:	ite	eq
   298a6:	moveq	r7, #1
   298a8:	movne	r7, #8
   298aa:	add.w	sl, r0, #228	; 0xe4
   298ae:	movs	r6, #1
   298b0:	mov.w	r9, #0
   298b4:	ldrd	r2, r3, [sp, #16]
   298b8:	mov	r0, sl
   298ba:	bl	15f84 <search_cache_extent@@Base>
   298be:	mov	r4, r0
   298c0:	cbnz	r0, 298de <__btrfs_map_block@@Base+0x4e>
   298c2:	ldr	r1, [sp, #160]	; 0xa0
   298c4:	mov.w	r2, #4294967295	; 0xffffffff
   298c8:	mov.w	r3, #4294967295	; 0xffffffff
   298cc:	strd	r2, r3, [r1]
   298d0:	mvn.w	r0, #1
   298d4:	add	sp, #124	; 0x7c
   298d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   298da:	movs	r7, #8
   298dc:	b.n	298aa <__btrfs_map_block@@Base+0x1a>
   298de:	ldrd	r2, r3, [r0, #24]
   298e2:	strd	r2, r3, [sp, #24]
   298e6:	ldrd	r0, r1, [sp, #24]
   298ea:	ldrd	r2, r3, [sp, #16]
   298ee:	cmp	r3, r1
   298f0:	it	eq
   298f2:	cmpeq	r2, r0
   298f4:	bcs.n	2990c <__btrfs_map_block@@Base+0x7c>
   298f6:	ldr	r3, [sp, #24]
   298f8:	ldr	r2, [sp, #16]
   298fa:	ldr	r1, [sp, #20]
   298fc:	subs	r2, r3, r2
   298fe:	ldr	r3, [sp, #28]
   29900:	sbc.w	r3, r3, r1
   29904:	ldr	r1, [sp, #160]	; 0xa0
   29906:	str	r2, [r1, #0]
   29908:	str	r3, [r1, #4]
   2990a:	b.n	298d0 <__btrfs_map_block@@Base+0x40>
   2990c:	ldr	r3, [sp, #168]	; 0xa8
   2990e:	cbz	r3, 29924 <__btrfs_map_block@@Base+0x94>
   29910:	lsls	r1, r7, #4
   29912:	movs	r0, #1
   29914:	adds	r1, #8
   29916:	blx	8544 <calloc@plt+0x4>
   2991a:	mov	r8, r0
   2991c:	cbnz	r0, 29928 <__btrfs_map_block@@Base+0x98>
   2991e:	mvn.w	r0, #11
   29922:	b.n	298d4 <__btrfs_map_block@@Base+0x44>
   29924:	ldr.w	r8, [sp, #168]	; 0xa8
   29928:	ldr	r3, [r4, #40]	; 0x28
   2992a:	cmp.w	fp, #1
   2992e:	str	r3, [sp, #76]	; 0x4c
   29930:	bne.n	29944 <__btrfs_map_block@@Base+0xb4>
   29932:	and.w	r3, r3, #1584	; 0x630
   29936:	strd	r3, r9, [sp, #8]
   2993a:	ldrd	r2, r3, [sp, #8]
   2993e:	orrs	r3, r2
   29940:	beq.n	29980 <__btrfs_map_block@@Base+0xf0>
   29942:	ldr	r6, [r4, #64]	; 0x40
   29944:	ldr	r3, [sp, #76]	; 0x4c
   29946:	and.w	r3, r3, #384	; 0x180
   2994a:	strd	r3, r9, [sp, #48]	; 0x30
   2994e:	ldrd	r2, r3, [sp, #48]	; 0x30
   29952:	orrs	r3, r2
   29954:	ldr	r3, [sp, #168]	; 0xa8
   29956:	beq.n	29996 <__btrfs_map_block@@Base+0x106>
   29958:	cbz	r3, 299a6 <__btrfs_map_block@@Base+0x116>
   2995a:	tst.w	fp, #1
   2995e:	bne.n	29964 <__btrfs_map_block@@Base+0xd4>
   29960:	cmp	r5, #1
   29962:	ble.n	29998 <__btrfs_map_block@@Base+0x108>
   29964:	ldr	r3, [sp, #176]	; 0xb0
   29966:	cbz	r3, 29998 <__btrfs_map_block@@Base+0x108>
   29968:	ldr	r6, [r4, #64]	; 0x40
   2996a:	cmp	r7, r6
   2996c:	blt.n	2999c <__btrfs_map_block@@Base+0x10c>
   2996e:	lsls	r0, r6, #3
   29970:	blx	8820 <malloc@plt+0x4>
   29974:	str	r0, [sp, #8]
   29976:	cbnz	r0, 299aa <__btrfs_map_block@@Base+0x11a>
   29978:	mov	r0, r8
   2997a:	blx	85dc <free@plt+0x4>
   2997e:	b.n	2991e <__btrfs_map_block@@Base+0x8e>
   29980:	ldr	r3, [sp, #76]	; 0x4c
   29982:	and.w	r3, r3, #64	; 0x40
   29986:	strd	r3, r9, [sp, #32]
   2998a:	ldrd	r2, r3, [sp, #32]
   2998e:	orrs	r3, r2
   29990:	it	ne
   29992:	ldrne	r6, [r4, #68]	; 0x44
   29994:	b.n	29944 <__btrfs_map_block@@Base+0xb4>
   29996:	cbz	r3, 299a6 <__btrfs_map_block@@Base+0x116>
   29998:	cmp	r7, r6
   2999a:	bge.n	299a6 <__btrfs_map_block@@Base+0x116>
   2999c:	mov	r0, r8
   2999e:	mov	r7, r6
   299a0:	blx	85dc <free@plt+0x4>
   299a4:	b.n	298b4 <__btrfs_map_block@@Base+0x24>
   299a6:	movs	r3, #0
   299a8:	str	r3, [sp, #8]
   299aa:	ldr	r2, [sp, #24]
   299ac:	ldr	r3, [sp, #16]
   299ae:	ldr	r6, [r4, #56]	; 0x38
   299b0:	subs	r3, r3, r2
   299b2:	ldr	r2, [sp, #28]
   299b4:	str	r3, [sp, #64]	; 0x40
   299b6:	ldr	r3, [sp, #20]
   299b8:	sbc.w	r3, r3, r2
   299bc:	str	r3, [sp, #68]	; 0x44
   299be:	mov	r2, r6
   299c0:	asrs	r3, r6, #31
   299c2:	ldrd	r0, r1, [sp, #64]	; 0x40
   299c6:	strd	r2, r3, [sp, #80]	; 0x50
   299ca:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   299ce:	mov	r9, r2
   299d0:	ldr	r2, [sp, #84]	; 0x54
   299d2:	mov	r7, r0
   299d4:	str	r3, [sp, #100]	; 0x64
   299d6:	mul.w	r3, r6, r1
   299da:	str	r1, [sp, #48]	; 0x30
   299dc:	mla	r3, r7, r2, r3
   299e0:	mov	sl, r1
   299e2:	umull	r1, r2, r6, r7
   299e6:	str	r0, [sp, #32]
   299e8:	strd	r1, r2, [sp, #56]	; 0x38
   299ec:	ldr	r2, [sp, #60]	; 0x3c
   299ee:	add	r3, r2
   299f0:	str	r3, [sp, #60]	; 0x3c
   299f2:	ldrd	r0, r1, [sp, #56]	; 0x38
   299f6:	ldrd	r2, r3, [sp, #64]	; 0x40
   299fa:	cmp	r3, r1
   299fc:	ldr	r1, [pc, #952]	; (29db8 <__btrfs_map_block@@Base+0x528>)
   299fe:	it	eq
   29a00:	cmpeq	r2, r0
   29a02:	ldr	r2, [pc, #952]	; (29dbc <__btrfs_map_block@@Base+0x52c>)
   29a04:	ldr	r0, [pc, #952]	; (29dc0 <__btrfs_map_block@@Base+0x530>)
   29a06:	add	r1, pc
   29a08:	add	r2, pc
   29a0a:	ite	cc
   29a0c:	movcc	r3, #1
   29a0e:	movcs	r3, #0
   29a10:	adds	r2, #112	; 0x70
   29a12:	add	r0, pc
   29a14:	str	r3, [sp, #0]
   29a16:	movw	r3, #1638	; 0x666
   29a1a:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   29a1e:	ldr	r3, [sp, #76]	; 0x4c
   29a20:	movs	r1, #0
   29a22:	ldrd	r2, r6, [r4, #32]
   29a26:	and.w	r0, r3, #2040	; 0x7f8
   29a2a:	str.w	r9, [sp, #96]	; 0x60
   29a2e:	orrs.w	r3, r0, r1
   29a32:	ldr	r3, [sp, #24]
   29a34:	ldr	r1, [sp, #16]
   29a36:	beq.n	29a90 <__btrfs_map_block@@Base+0x200>
   29a38:	subs	r3, r3, r1
   29a3a:	ldr	r0, [sp, #20]
   29a3c:	ldr	r1, [sp, #28]
   29a3e:	sbc.w	r0, r1, r0
   29a42:	ldr	r1, [sp, #80]	; 0x50
   29a44:	adds.w	lr, r1, r3
   29a48:	ldr	r1, [sp, #84]	; 0x54
   29a4a:	adc.w	ip, r1, r0
   29a4e:	adds	r3, r3, r2
   29a50:	str	r3, [sp, #88]	; 0x58
   29a52:	adc.w	r3, r0, r6
   29a56:	str	r3, [sp, #92]	; 0x5c
   29a58:	ldr	r3, [sp, #56]	; 0x38
   29a5a:	adds.w	r3, lr, r3
   29a5e:	str	r3, [sp, #40]	; 0x28
   29a60:	ldr	r3, [sp, #60]	; 0x3c
   29a62:	adc.w	r3, ip, r3
   29a66:	str	r3, [sp, #44]	; 0x2c
   29a68:	ldrd	r0, r1, [sp, #40]	; 0x28
   29a6c:	ldrd	r2, r3, [sp, #88]	; 0x58
   29a70:	cmp	r3, r1
   29a72:	it	eq
   29a74:	cmpeq	r2, r0
   29a76:	bcs.n	29a7c <__btrfs_map_block@@Base+0x1ec>
   29a78:	strd	r2, r3, [sp, #40]	; 0x28
   29a7c:	ldr	r3, [sp, #160]	; 0xa0
   29a7e:	mov	r1, r3
   29a80:	ldrd	r2, r3, [sp, #40]	; 0x28
   29a84:	strd	r2, r3, [r1]
   29a88:	ldr	r3, [sp, #168]	; 0xa8
   29a8a:	cbnz	r3, 29aa6 <__btrfs_map_block@@Base+0x216>
   29a8c:	movs	r0, #0
   29a8e:	b.n	298d4 <__btrfs_map_block@@Base+0x44>
   29a90:	subs	r3, r3, r1
   29a92:	ldr	r0, [sp, #20]
   29a94:	ldr	r1, [sp, #28]
   29a96:	sbc.w	r1, r1, r0
   29a9a:	adds	r3, r3, r2
   29a9c:	str	r3, [sp, #40]	; 0x28
   29a9e:	adc.w	r3, r1, r6
   29aa2:	str	r3, [sp, #44]	; 0x2c
   29aa4:	b.n	29a7c <__btrfs_map_block@@Base+0x1ec>
   29aa6:	movs	r3, #1
   29aa8:	str.w	r3, [r8, #4]
   29aac:	ldr	r1, [r4, #40]	; 0x28
   29aae:	mov.w	r9, #0
   29ab2:	mov	r3, r9
   29ab4:	ldr	r0, [r4, #64]	; 0x40
   29ab6:	and.w	r2, r1, #1552	; 0x610
   29aba:	orrs	r3, r2
   29abc:	beq.n	29b44 <__btrfs_map_block@@Base+0x2b4>
   29abe:	cmp.w	fp, #1
   29ac2:	bne.n	29b30 <__btrfs_map_block@@Base+0x2a0>
   29ac4:	mov	r5, r9
   29ac6:	str.w	r0, [r8, #4]
   29aca:	ldr	r3, [r4, #64]	; 0x40
   29acc:	ldr	r2, [pc, #756]	; (29dc4 <__btrfs_map_block@@Base+0x534>)
   29ace:	cmp	r3, r5
   29ad0:	ldr	r1, [pc, #756]	; (29dc8 <__btrfs_map_block@@Base+0x538>)
   29ad2:	ldr	r0, [pc, #760]	; (29dcc <__btrfs_map_block@@Base+0x53c>)
   29ad4:	add	r2, pc
   29ad6:	ite	gt
   29ad8:	movgt	r3, #0
   29ada:	movle	r3, #1
   29adc:	add	r1, pc
   29ade:	add	r0, pc
   29ae0:	str	r3, [sp, #0]
   29ae2:	adds	r2, #112	; 0x70
   29ae4:	movw	r3, #1748	; 0x6d4
   29ae8:	add.w	r5, r4, r5, lsl #4
   29aec:	bl	27e28 <btrfs_add_root_ref@@Base+0x258>
   29af0:	ldr.w	ip, [r8, #4]
   29af4:	add.w	r1, r8, #8
   29af8:	movs	r0, #0
   29afa:	cmp	ip, r0
   29afc:	add.w	r5, r5, #16
   29b00:	add.w	r1, r1, #16
   29b04:	bgt.w	29cf8 <__btrfs_map_block@@Base+0x468>
   29b08:	ldr	r3, [sp, #168]	; 0xa8
   29b0a:	str.w	r8, [r3]
   29b0e:	ldr	r3, [sp, #164]	; 0xa4
   29b10:	cbz	r3, 29b1c <__btrfs_map_block@@Base+0x28c>
   29b12:	ldrd	r2, r3, [r4, #40]	; 0x28
   29b16:	ldr	r1, [sp, #164]	; 0xa4
   29b18:	strd	r2, r3, [r1]
   29b1c:	ldr	r3, [sp, #8]
   29b1e:	cmp	r3, #0
   29b20:	beq.n	29a8c <__btrfs_map_block@@Base+0x1fc>
   29b22:	movs	r0, #0
   29b24:	add.w	r7, ip, #4294967295	; 0xffffffff
   29b28:	add.w	r9, sp, #104	; 0x68
   29b2c:	mov	r4, r0
   29b2e:	b.n	29da0 <__btrfs_map_block@@Base+0x510>
   29b30:	cbz	r5, 29b36 <__btrfs_map_block@@Base+0x2a6>
   29b32:	subs	r5, #1
   29b34:	b.n	29aca <__btrfs_map_block@@Base+0x23a>
   29b36:	asrs	r3, r0, #31
   29b38:	mov	r2, r0
   29b3a:	mov	r1, sl
   29b3c:	mov	r0, r7
   29b3e:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29b42:	b.n	29b74 <__btrfs_map_block@@Base+0x2e4>
   29b44:	and.w	r2, r1, #64	; 0x40
   29b48:	mov	r3, r9
   29b4a:	orrs	r3, r2
   29b4c:	beq.n	29b82 <__btrfs_map_block@@Base+0x2f2>
   29b4e:	ldr	r6, [r4, #68]	; 0x44
   29b50:	mov	r1, r6
   29b52:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   29b56:	mov	r1, sl
   29b58:	asrs	r3, r0, #31
   29b5a:	mov	r2, r0
   29b5c:	mov	r0, r7
   29b5e:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29b62:	cmp.w	fp, #1
   29b66:	mul.w	r2, r2, r6
   29b6a:	bne.n	29b78 <__btrfs_map_block@@Base+0x2e8>
   29b6c:	str.w	r6, [r8, #4]
   29b70:	str	r0, [sp, #32]
   29b72:	str	r1, [sp, #48]	; 0x30
   29b74:	mov	r5, r2
   29b76:	b.n	29aca <__btrfs_map_block@@Base+0x23a>
   29b78:	cmp	r5, #0
   29b7a:	beq.n	29b70 <__btrfs_map_block@@Base+0x2e0>
   29b7c:	subs	r5, #1
   29b7e:	add	r2, r5
   29b80:	b.n	29b70 <__btrfs_map_block@@Base+0x2e0>
   29b82:	and.w	r2, r1, #32
   29b86:	mov	r3, r9
   29b88:	orrs	r3, r2
   29b8a:	beq.n	29b98 <__btrfs_map_block@@Base+0x308>
   29b8c:	cmp.w	fp, #1
   29b90:	beq.n	29ac4 <__btrfs_map_block@@Base+0x234>
   29b92:	cmp	r5, #0
   29b94:	beq.n	29aca <__btrfs_map_block@@Base+0x23a>
   29b96:	b.n	29b32 <__btrfs_map_block@@Base+0x2a2>
   29b98:	asrs	r3, r0, #31
   29b9a:	mov	r2, r0
   29b9c:	strd	r2, r3, [sp, #16]
   29ba0:	and.w	r2, r1, #384	; 0x180
   29ba4:	mov	r3, r9
   29ba6:	orrs	r3, r2
   29ba8:	beq.w	29ce4 <__btrfs_map_block@@Base+0x454>
   29bac:	mov	r0, r4
   29bae:	bl	27cd0 <btrfs_add_root_ref@@Base+0x100>
   29bb2:	asrs	r3, r0, #31
   29bb4:	mov	r2, r0
   29bb6:	strd	r2, r3, [sp, #24]
   29bba:	mov	r6, r0
   29bbc:	ldr	r3, [sp, #8]
   29bbe:	cmp	r3, #0
   29bc0:	beq.n	29cba <__btrfs_map_block@@Base+0x42a>
   29bc2:	ldr	r7, [r4, #56]	; 0x38
   29bc4:	mul.w	r5, r0, r7
   29bc8:	ldrd	r0, r1, [sp, #64]	; 0x40
   29bcc:	mov.w	fp, r5, asr #31
   29bd0:	mov	r2, r5
   29bd2:	mov	r3, fp
   29bd4:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29bd8:	mov	r2, r7
   29bda:	mul.w	r3, r5, r1
   29bde:	mla	r3, r0, fp, r3
   29be2:	umull	r0, r1, r5, r0
   29be6:	add	r1, r3
   29be8:	asrs	r3, r7, #31
   29bea:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29bee:	asrs	r3, r6, #31
   29bf0:	mov	r2, r6
   29bf2:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29bf6:	ldrd	r2, r3, [sp, #16]
   29bfa:	str	r0, [sp, #32]
   29bfc:	str	r1, [sp, #48]	; 0x30
   29bfe:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29c02:	mov	r5, r2
   29c04:	ldrd	r3, r2, [sp, #28]
   29c08:	muls	r3, r2
   29c0a:	ldr	r2, [sp, #48]	; 0x30
   29c0c:	mla	r3, r6, r2, r3
   29c10:	ldr	r2, [sp, #32]
   29c12:	umull	r6, r7, r2, r6
   29c16:	add	r7, r3
   29c18:	mov	r0, r4
   29c1a:	add.w	sl, r9, r5
   29c1e:	bl	27cd0 <btrfs_add_root_ref@@Base+0x100>
   29c22:	ldr	r1, [r4, #64]	; 0x40
   29c24:	cmp	r0, r9
   29c26:	mov	r0, sl
   29c28:	bgt.n	29c82 <__btrfs_map_block@@Base+0x3f2>
   29c2a:	bl	391d4 <btrfs_util_strerror@@Base+0x524>
   29c2e:	ldr	r3, [sp, #8]
   29c30:	mvn.w	r2, #1
   29c34:	add.w	r1, r3, r1, lsl #3
   29c38:	mov.w	r3, #4294967295	; 0xffffffff
   29c3c:	strd	r2, r3, [r1]
   29c40:	movs	r3, #0
   29c42:	ldr	r1, [r4, #40]	; 0x28
   29c44:	and.w	r2, r1, #256	; 0x100
   29c48:	orrs	r3, r2
   29c4a:	beq.n	29c68 <__btrfs_map_block@@Base+0x3d8>
   29c4c:	ldr	r1, [r4, #64]	; 0x40
   29c4e:	add.w	r0, sl, #1
   29c52:	bl	391d4 <btrfs_util_strerror@@Base+0x524>
   29c56:	ldr	r3, [sp, #8]
   29c58:	mov.w	r2, #4294967295	; 0xffffffff
   29c5c:	add.w	r1, r3, r1, lsl #3
   29c60:	mov.w	r3, #4294967295	; 0xffffffff
   29c64:	strd	r2, r3, [r1]
   29c68:	ldr	r2, [r4, #56]	; 0x38
   29c6a:	ldr	r1, [sp, #160]	; 0xa0
   29c6c:	asrs	r3, r2, #31
   29c6e:	strd	r2, r3, [r1]
   29c72:	ldr	r3, [r4, #64]	; 0x40
   29c74:	str.w	r3, [r8, #4]
   29c78:	movs	r3, #0
   29c7a:	mov	r5, r3
   29c7c:	strd	r3, r3, [sp, #96]	; 0x60
   29c80:	b.n	29aca <__btrfs_map_block@@Base+0x23a>
   29c82:	bl	391d4 <btrfs_util_strerror@@Base+0x524>
   29c86:	ldr	r0, [r4, #56]	; 0x38
   29c88:	ldr	r3, [sp, #8]
   29c8a:	add.w	r9, r9, #1
   29c8e:	mov.w	fp, r0, asr #31
   29c92:	mul.w	r2, r0, r7
   29c96:	add.w	ip, r3, r1, lsl #3
   29c9a:	umull	r0, r1, r0, r6
   29c9e:	mla	r3, r6, fp, r2
   29ca2:	add	r1, r3
   29ca4:	ldrd	r3, r2, [r4, #24]
   29ca8:	adds	r3, r3, r0
   29caa:	adc.w	r2, r1, r2
   29cae:	adds	r6, #1
   29cb0:	adc.w	r7, r7, #0
   29cb4:	strd	r3, r2, [ip]
   29cb8:	b.n	29c18 <__btrfs_map_block@@Base+0x388>
   29cba:	asrs	r3, r0, #31
   29cbc:	mov	r1, sl
   29cbe:	mov	r0, r7
   29cc0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29cc4:	cmp	r5, #1
   29cc6:	itte	gt
   29cc8:	addgt	r6, r6, r5
   29cca:	subgt	r6, #2
   29ccc:	movle	r6, r2
   29cce:	mov	sl, r0
   29cd0:	str	r0, [sp, #32]
   29cd2:	adds.w	r0, sl, r6
   29cd6:	mov	fp, r1
   29cd8:	str	r1, [sp, #48]	; 0x30
   29cda:	ldrd	r2, r3, [sp, #16]
   29cde:	adc.w	r1, fp, r6, asr #31
   29ce2:	b.n	29b3e <__btrfs_map_block@@Base+0x2ae>
   29ce4:	ldrd	r2, r3, [sp, #16]
   29ce8:	mov	r0, r7
   29cea:	mov	r1, sl
   29cec:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   29cf0:	mov	r5, r2
   29cf2:	str	r0, [sp, #32]
   29cf4:	str	r1, [sp, #48]	; 0x30
   29cf6:	b.n	29aca <__btrfs_map_block@@Base+0x23a>
   29cf8:	ldrd	r3, r2, [r5, #64]	; 0x40
   29cfc:	adds	r0, #1
   29cfe:	ldr	r6, [sp, #96]	; 0x60
   29d00:	ldr.w	sl, [r4, #56]	; 0x38
   29d04:	adds.w	lr, r6, r3
   29d08:	ldr	r6, [sp, #100]	; 0x64
   29d0a:	adc.w	r2, r6, r2
   29d0e:	mov	r6, sl
   29d10:	asrs	r7, r6, #31
   29d12:	strd	r6, r7, [sp, #16]
   29d16:	ldr	r6, [sp, #48]	; 0x30
   29d18:	ldr	r7, [sp, #32]
   29d1a:	ldr	r3, [sp, #20]
   29d1c:	mul.w	r6, sl, r6
   29d20:	mla	r6, r7, r3, r6
   29d24:	umull	sl, fp, sl, r7
   29d28:	adds.w	r3, lr, sl
   29d2c:	add	fp, r6
   29d2e:	adc.w	r2, r2, fp
   29d32:	strd	r3, r2, [r1, #-8]
   29d36:	ldr	r3, [r5, #56]	; 0x38
   29d38:	str.w	r3, [r1, #-16]
   29d3c:	b.n	29afa <__btrfs_map_block@@Base+0x26a>
   29d3e:	ldr	r3, [sp, #8]
   29d40:	add.w	lr, r4, #1
   29d44:	add.w	sl, r3, r4, lsl #3
   29d48:	add.w	ip, sl, #8
   29d4c:	ldrd	r2, r3, [sl]
   29d50:	strd	r2, r3, [sp, #16]
   29d54:	ldrd	r5, r6, [sp, #16]
   29d58:	ldrd	r2, r3, [sl, #8]
   29d5c:	cmp	r3, r6
   29d5e:	it	eq
   29d60:	cmpeq	r2, r5
   29d62:	strd	r2, r3, [sp, #24]
   29d66:	bcs.n	29d9e <__btrfs_map_block@@Base+0x50e>
   29d68:	add.w	r4, r8, r4, lsl #4
   29d6c:	add.w	r5, r8, lr, lsl #4
   29d70:	adds	r4, #8
   29d72:	adds	r5, #8
   29d74:	ldmia.w	r4, {r0, r1, r2, r3}
   29d78:	stmia.w	r9, {r0, r1, r2, r3}
   29d7c:	ldmia.w	r5, {r0, r1, r2, r3}
   29d80:	stmia.w	r4, {r0, r1, r2, r3}
   29d84:	ldrd	r3, r4, [sp, #24]
   29d88:	strd	r3, r4, [sl]
   29d8c:	ldmia.w	r9, {r0, r1, r2, r3}
   29d90:	stmia.w	r5, {r0, r1, r2, r3}
   29d94:	movs	r0, #1
   29d96:	ldrd	r3, r4, [sp, #16]
   29d9a:	strd	r3, r4, [ip]
   29d9e:	mov	r4, lr
   29da0:	cmp	r4, r7
   29da2:	blt.n	29d3e <__btrfs_map_block@@Base+0x4ae>
   29da4:	cbnz	r0, 29db0 <__btrfs_map_block@@Base+0x520>
   29da6:	ldr	r3, [sp, #176]	; 0xb0
   29da8:	mov	r2, r3
   29daa:	ldr	r3, [sp, #8]
   29dac:	str	r3, [r2, #0]
   29dae:	b.n	298d4 <__btrfs_map_block@@Base+0x44>
   29db0:	movs	r0, #0
   29db2:	mov	lr, r0
   29db4:	b.n	29d9e <__btrfs_map_block@@Base+0x50e>
   29db6:	nop
   29db8:	ldrsh	r1, [r3, r6]
   29dba:	movs	r1, r0
   29dbc:	str	r4, [r6, #100]	; 0x64
   29dbe:	movs	r1, r0
   29dc0:	str	r4, [r5, #0]
   29dc2:	movs	r1, r0
   29dc4:	str	r0, [r5, #88]	; 0x58
   29dc6:	movs	r1, r0
   29dc8:	ldrsh	r3, [r0, r3]
   29dca:	movs	r1, r0
   29dcc:	ldrsh	r7, [r6, r5]
   29dce:	movs	r1, r0

00029dd0 <btrfs_map_block@@Base>:
   29dd0:	push	{r4, lr}
   29dd2:	sub	sp, #24
   29dd4:	ldr	r4, [sp, #44]	; 0x2c
   29dd6:	str	r4, [sp, #16]
   29dd8:	ldr	r4, [sp, #40]	; 0x28
   29dda:	str	r4, [sp, #12]
   29ddc:	ldr	r4, [sp, #36]	; 0x24
   29dde:	str	r4, [sp, #8]
   29de0:	movs	r4, #0
   29de2:	str	r4, [sp, #4]
   29de4:	ldr	r4, [sp, #32]
   29de6:	str	r4, [sp, #0]
   29de8:	bl	29890 <__btrfs_map_block@@Base>
   29dec:	add	sp, #24
   29dee:	pop	{r4, pc}

00029df0 <btrfs_find_device@@Base>:
   29df0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   29df4:	mov	r6, r0
   29df6:	ldr	r5, [sp, #36]	; 0x24
   29df8:	mov	r7, r2
   29dfa:	ldr.w	r4, [r0, #352]	; 0x160
   29dfe:	mov	r8, r3
   29e00:	cbnz	r4, 29e0a <btrfs_find_device@@Base+0x1a>
   29e02:	mov	r0, r4
   29e04:	add	sp, #8
   29e06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   29e0a:	cbz	r5, 29e20 <btrfs_find_device@@Base+0x30>
   29e0c:	movs	r2, #16
   29e0e:	mov	r1, r5
   29e10:	adds	r0, r4, r2
   29e12:	blx	8650 <memcmp@plt+0x4>
   29e16:	cbz	r0, 29e20 <btrfs_find_device@@Base+0x30>
   29e18:	ldrb.w	r3, [r6, #364]	; 0x16c
   29e1c:	lsls	r3, r3, #25
   29e1e:	bpl.n	29e32 <btrfs_find_device@@Base+0x42>
   29e20:	ldr	r3, [sp, #32]
   29e22:	mov	r2, r7
   29e24:	mov	r0, r4
   29e26:	str	r3, [sp, #0]
   29e28:	mov	r3, r8
   29e2a:	bl	27d2c <btrfs_add_root_ref@@Base+0x15c>
   29e2e:	cmp	r0, #0
   29e30:	bne.n	29e04 <btrfs_find_device@@Base+0x14>
   29e32:	ldr	r4, [r4, #92]	; 0x5c
   29e34:	b.n	29e00 <btrfs_find_device@@Base+0x10>

00029e36 <btrfs_find_device_by_devid@@Base>:
   29e36:	push	{r4, r5, r6, r7, lr}
   29e38:	add.w	r1, r0, #72	; 0x48
   29e3c:	mov	r6, r2
   29e3e:	ldr	r0, [r0, #72]	; 0x48
   29e40:	ldr	r2, [sp, #20]
   29e42:	mov	r7, r3
   29e44:	movs	r3, #0
   29e46:	cmp	r0, r1
   29e48:	bne.n	29e4e <btrfs_find_device_by_devid@@Base+0x18>
   29e4a:	movs	r0, #0
   29e4c:	pop	{r4, r5, r6, r7, pc}
   29e4e:	ldrd	r4, r5, [r0, #64]	; 0x40
   29e52:	cmp	r5, r7
   29e54:	it	eq
   29e56:	cmpeq	r4, r6
   29e58:	bne.n	29e64 <btrfs_find_device_by_devid@@Base+0x2e>
   29e5a:	cmp	r3, r2
   29e5c:	add.w	r4, r3, #1
   29e60:	beq.n	29e4c <btrfs_find_device_by_devid@@Base+0x16>
   29e62:	mov	r3, r4
   29e64:	ldr	r0, [r0, #0]
   29e66:	b.n	29e46 <btrfs_find_device_by_devid@@Base+0x10>

00029e68 <btrfs_chunk_readonly@@Base>:
   29e68:	push	{r4, lr}
   29e6a:	ldrb.w	r1, [r0, #364]	; 0x16c
   29e6e:	ands.w	r4, r1, #8
   29e72:	beq.n	29e78 <btrfs_chunk_readonly@@Base+0x10>
   29e74:	movs	r0, #0
   29e76:	pop	{r4, pc}
   29e78:	adds	r0, #228	; 0xe4
   29e7a:	bl	15f84 <search_cache_extent@@Base>
   29e7e:	cbz	r0, 29e96 <btrfs_chunk_readonly@@Base+0x2e>
   29e80:	ldr	r2, [r0, #64]	; 0x40
   29e82:	adds	r0, #72	; 0x48
   29e84:	mov	r3, r4
   29e86:	cmp	r2, r3
   29e88:	ble.n	29e74 <btrfs_chunk_readonly@@Base+0xc>
   29e8a:	lsls	r1, r3, #4
   29e8c:	ldr	r1, [r0, r1]
   29e8e:	ldr	r1, [r1, #28]
   29e90:	cbz	r1, 29e9c <btrfs_chunk_readonly@@Base+0x34>
   29e92:	adds	r3, #1
   29e94:	b.n	29e86 <btrfs_chunk_readonly@@Base+0x1e>
   29e96:	mvn.w	r0, #1
   29e9a:	b.n	29e76 <btrfs_chunk_readonly@@Base+0xe>
   29e9c:	movs	r0, #1
   29e9e:	b.n	29e76 <btrfs_chunk_readonly@@Base+0xe>

00029ea0 <btrfs_check_chunk_valid@@Base>:
   29ea0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29ea4:	sub	sp, #36	; 0x24
   29ea6:	subs	r6, r3, #0
   29ea8:	add.w	r8, r1, #96	; 0x60
   29eac:	ldr	r4, [sp, #72]	; 0x48
   29eae:	str	r4, [sp, #20]
   29eb0:	ldr	r4, [sp, #76]	; 0x4c
   29eb2:	str	r4, [sp, #24]
   29eb4:	ldr.w	r4, [r0, #388]	; 0x184
   29eb8:	str	r4, [sp, #16]
   29eba:	blt.n	29ee4 <btrfs_check_chunk_valid@@Base+0x44>
   29ebc:	movs	r3, #25
   29ebe:	mla	r3, r3, r6, r8
   29ec2:	ldr.w	r1, [r3, #122]	; 0x7a
   29ec6:	cmp	r1, #79	; 0x4f
   29ec8:	bhi.n	29ee4 <btrfs_check_chunk_valid@@Base+0x44>
   29eca:	ldr.w	r3, [r0, #384]	; 0x180
   29ece:	movs	r2, #80	; 0x50
   29ed0:	ldr	r0, [pc, #528]	; (2a0e4 <btrfs_check_chunk_valid@@Base+0x244>)
   29ed2:	subs	r3, #101	; 0x65
   29ed4:	add	r0, pc
   29ed6:	bl	17424 <__btrfs_error@@Base>
   29eda:	mvn.w	r0, #116	; 0x74
   29ede:	add	sp, #36	; 0x24
   29ee0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ee4:	add.w	r7, r8, r2
   29ee8:	ldr.w	sl, [r8, r2]
   29eec:	ldr	r3, [r7, #16]
   29eee:	ldrh	r5, [r7, #44]	; 0x2c
   29ef0:	ldr.w	fp, [r7, #4]
   29ef4:	str	r3, [sp, #8]
   29ef6:	ldr	r3, [r7, #20]
   29ef8:	ldrh.w	r9, [r7, #46]	; 0x2e
   29efc:	ldr	r4, [r7, #24]
   29efe:	str	r3, [sp, #12]
   29f00:	ldr	r3, [r7, #28]
   29f02:	cbnz	r5, 29f10 <btrfs_check_chunk_valid@@Base+0x70>
   29f04:	ldr	r0, [pc, #480]	; (2a0e8 <btrfs_check_chunk_valid@@Base+0x248>)
   29f06:	mov	r1, r5
   29f08:	add	r0, pc
   29f0a:	bl	17424 <__btrfs_error@@Base>
   29f0e:	b.n	29eda <btrfs_check_chunk_valid@@Base+0x3a>
   29f10:	cmp	r6, #0
   29f12:	blt.n	29f38 <btrfs_check_chunk_valid@@Base+0x98>
   29f14:	mov	r0, r5
   29f16:	str	r3, [sp, #28]
   29f18:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   29f1c:	movs	r2, #25
   29f1e:	mla	r2, r2, r6, r8
   29f22:	ldr	r3, [sp, #28]
   29f24:	ldr.w	r1, [r2, #122]	; 0x7a
   29f28:	cmp	r0, r1
   29f2a:	beq.n	29f38 <btrfs_check_chunk_valid@@Base+0x98>
   29f2c:	mov	r2, r0
   29f2e:	ldr	r0, [pc, #444]	; (2a0ec <btrfs_check_chunk_valid@@Base+0x24c>)
   29f30:	add	r0, pc
   29f32:	bl	17424 <__btrfs_error@@Base>
   29f36:	b.n	29eda <btrfs_check_chunk_valid@@Base+0x3a>
   29f38:	ldr.w	ip, [sp, #16]
   29f3c:	mov.w	lr, #0
   29f40:	ldr	r2, [sp, #20]
   29f42:	adds.w	ip, ip, #4294967295	; 0xffffffff
   29f46:	and.w	r0, ip, r2
   29f4a:	ldr	r2, [sp, #24]
   29f4c:	adc.w	lr, lr, #4294967295	; 0xffffffff
   29f50:	and.w	r1, lr, r2
   29f54:	orrs.w	r2, r0, r1
   29f58:	beq.n	29f6c <btrfs_check_chunk_valid@@Base+0xcc>
   29f5a:	ldr	r0, [pc, #404]	; (2a0f0 <btrfs_check_chunk_valid@@Base+0x250>)
   29f5c:	ldrd	r2, r3, [sp, #20]
   29f60:	add	r0, pc
   29f62:	bl	17424 <__btrfs_error@@Base>
   29f66:	mvn.w	r0, #4
   29f6a:	b.n	29ede <btrfs_check_chunk_valid@@Base+0x3e>
   29f6c:	ldr	r2, [r7, #40]	; 0x28
   29f6e:	ldr	r1, [sp, #16]
   29f70:	cmp	r1, r2
   29f72:	beq.n	29f7c <btrfs_check_chunk_valid@@Base+0xdc>
   29f74:	ldr	r0, [pc, #380]	; (2a0f4 <btrfs_check_chunk_valid@@Base+0x254>)
   29f76:	movs	r3, #0
   29f78:	add	r0, pc
   29f7a:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29f7c:	orrs.w	r2, sl, fp
   29f80:	beq.n	29f90 <btrfs_check_chunk_valid@@Base+0xf0>
   29f82:	and.w	r0, ip, sl
   29f86:	and.w	r1, lr, fp
   29f8a:	orrs.w	r2, r0, r1
   29f8e:	beq.n	29f9a <btrfs_check_chunk_valid@@Base+0xfa>
   29f90:	ldr	r0, [pc, #356]	; (2a0f8 <btrfs_check_chunk_valid@@Base+0x258>)
   29f92:	mov	r2, sl
   29f94:	mov	r3, fp
   29f96:	add	r0, pc
   29f98:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29f9a:	ldrd	r1, r2, [sp, #8]
   29f9e:	cmp	r2, #0
   29fa0:	it	eq
   29fa2:	cmpeq.w	r1, #65536	; 0x10000
   29fa6:	beq.n	29fb2 <btrfs_check_chunk_valid@@Base+0x112>
   29fa8:	ldr	r0, [pc, #336]	; (2a0fc <btrfs_check_chunk_valid@@Base+0x25c>)
   29faa:	mov	r3, r2
   29fac:	mov	r2, r1
   29fae:	add	r0, pc
   29fb0:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29fb2:	adds	r1, r6, #1
   29fb4:	bne.n	29fca <btrfs_check_chunk_valid@@Base+0x12a>
   29fb6:	and.w	r0, r4, #2
   29fba:	movs	r1, #0
   29fbc:	orrs.w	r2, r0, r1
   29fc0:	bne.n	29fca <btrfs_check_chunk_valid@@Base+0x12a>
   29fc2:	ldr	r0, [pc, #316]	; (2a100 <btrfs_check_chunk_valid@@Base+0x260>)
   29fc4:	mov	r2, r4
   29fc6:	add	r0, pc
   29fc8:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29fca:	bic.w	r0, r4, #2040	; 0x7f8
   29fce:	mov	r1, r3
   29fd0:	bic.w	r0, r0, #7
   29fd4:	orrs.w	r2, r0, r1
   29fd8:	beq.n	29fe2 <btrfs_check_chunk_valid@@Base+0x142>
   29fda:	mov	r2, r0
   29fdc:	ldr	r0, [pc, #292]	; (2a104 <btrfs_check_chunk_valid@@Base+0x264>)
   29fde:	add	r0, pc
   29fe0:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29fe2:	and.w	r0, r4, #7
   29fe6:	movs	r1, #0
   29fe8:	orrs.w	r2, r0, r1
   29fec:	bne.n	29ff6 <btrfs_check_chunk_valid@@Base+0x156>
   29fee:	ldr	r0, [pc, #280]	; (2a108 <btrfs_check_chunk_valid@@Base+0x268>)
   29ff0:	mov	r2, r4
   29ff2:	add	r0, pc
   29ff4:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   29ff6:	ands.w	r2, r4, #2040	; 0x7f8
   29ffa:	beq.n	2a002 <btrfs_check_chunk_valid@@Base+0x162>
   29ffc:	subs	r1, r2, #1
   29ffe:	tst	r1, r2
   2a000:	beq.n	2a016 <btrfs_check_chunk_valid@@Base+0x176>
   2a002:	and.w	r0, r4, #2040	; 0x7f8
   2a006:	movs	r2, #0
   2a008:	mov	r1, r2
   2a00a:	orrs	r1, r0
   2a00c:	beq.n	2a018 <btrfs_check_chunk_valid@@Base+0x178>
   2a00e:	ldr	r0, [pc, #252]	; (2a10c <btrfs_check_chunk_valid@@Base+0x26c>)
   2a010:	mov	r2, r4
   2a012:	add	r0, pc
   2a014:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   2a016:	movs	r2, #1
   2a018:	and.w	sl, r4, #2040	; 0x7f8
   2a01c:	mov.w	fp, #0
   2a020:	orrs.w	r1, sl, fp
   2a024:	beq.n	2a030 <btrfs_check_chunk_valid@@Base+0x190>
   2a026:	cbnz	r2, 2a030 <btrfs_check_chunk_valid@@Base+0x190>
   2a028:	ldr	r0, [pc, #228]	; (2a110 <btrfs_check_chunk_valid@@Base+0x270>)
   2a02a:	mov	r2, r4
   2a02c:	add	r0, pc
   2a02e:	b.n	29f62 <btrfs_check_chunk_valid@@Base+0xc2>
   2a030:	mov	r0, r5
   2a032:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   2a036:	adds	r2, r6, #1
   2a038:	bne.n	2a04c <btrfs_check_chunk_valid@@Base+0x1ac>
   2a03a:	cmp.w	r0, #2048	; 0x800
   2a03e:	bls.n	2a05e <btrfs_check_chunk_valid@@Base+0x1be>
   2a040:	ldr	r0, [pc, #208]	; (2a114 <btrfs_check_chunk_valid@@Base+0x274>)
   2a042:	mov	r1, r5
   2a044:	add	r0, pc
   2a046:	bl	17424 <__btrfs_error@@Base>
   2a04a:	b.n	29f66 <btrfs_check_chunk_valid@@Base+0xc6>
   2a04c:	cmp	r6, #0
   2a04e:	blt.n	2a05e <btrfs_check_chunk_valid@@Base+0x1be>
   2a050:	movs	r3, #25
   2a052:	mla	r6, r3, r6, r8
   2a056:	ldr.w	r3, [r6, #122]	; 0x7a
   2a05a:	cmp	r0, r3
   2a05c:	b.n	2a03e <btrfs_check_chunk_valid@@Base+0x19e>
   2a05e:	and.w	r2, r4, #64	; 0x40
   2a062:	movs	r3, #0
   2a064:	orrs	r3, r2
   2a066:	beq.n	2a072 <btrfs_check_chunk_valid@@Base+0x1d2>
   2a068:	cmp.w	r9, #2
   2a06c:	bne.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a06e:	lsls	r3, r5, #31
   2a070:	bmi.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a072:	and.w	r0, r4, #512	; 0x200
   2a076:	movs	r3, #0
   2a078:	mov	r1, r3
   2a07a:	orrs.w	r2, r0, r1
   2a07e:	beq.n	2a084 <btrfs_check_chunk_valid@@Base+0x1e4>
   2a080:	cmp	r5, #2
   2a082:	bls.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a084:	and.w	r0, r4, #1024	; 0x400
   2a088:	mov	r1, r3
   2a08a:	orrs.w	r3, r0, r1
   2a08e:	beq.n	2a094 <btrfs_check_chunk_valid@@Base+0x1f4>
   2a090:	cmp	r5, #3
   2a092:	bls.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a094:	and.w	r0, r4, #128	; 0x80
   2a098:	movs	r3, #0
   2a09a:	mov	r1, r3
   2a09c:	orrs.w	r2, r0, r1
   2a0a0:	beq.n	2a0a6 <btrfs_check_chunk_valid@@Base+0x206>
   2a0a2:	cmp	r5, #1
   2a0a4:	bls.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a0a6:	and.w	r0, r4, #256	; 0x100
   2a0aa:	mov	r1, r3
   2a0ac:	orrs.w	r3, r0, r1
   2a0b0:	beq.n	2a0b6 <btrfs_check_chunk_valid@@Base+0x216>
   2a0b2:	cmp	r5, #2
   2a0b4:	bls.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a0b6:	and.w	r2, r4, #32
   2a0ba:	movs	r3, #0
   2a0bc:	orrs	r3, r2
   2a0be:	beq.n	2a0c4 <btrfs_check_chunk_valid@@Base+0x224>
   2a0c0:	cmp	r5, #2
   2a0c2:	bhi.n	2a0ce <btrfs_check_chunk_valid@@Base+0x22e>
   2a0c4:	orrs.w	r3, sl, fp
   2a0c8:	bne.n	2a0e0 <btrfs_check_chunk_valid@@Base+0x240>
   2a0ca:	cmp	r5, #1
   2a0cc:	beq.n	2a0e0 <btrfs_check_chunk_valid@@Base+0x240>
   2a0ce:	ldr	r0, [pc, #72]	; (2a118 <btrfs_check_chunk_valid@@Base+0x278>)
   2a0d0:	mov	r2, r9
   2a0d2:	mov	r1, r5
   2a0d4:	strd	sl, fp, [sp]
   2a0d8:	add	r0, pc
   2a0da:	bl	17424 <__btrfs_error@@Base>
   2a0de:	b.n	29f66 <btrfs_check_chunk_valid@@Base+0xc6>
   2a0e0:	movs	r0, #0
   2a0e2:	b.n	29ede <btrfs_check_chunk_valid@@Base+0x3e>
   2a0e4:	ldrh	r2, [r4, r6]
   2a0e6:	movs	r1, r0
   2a0e8:	ldrh	r1, [r4, r6]
   2a0ea:	movs	r1, r0
   2a0ec:	ldrh	r6, [r4, r6]
   2a0ee:	movs	r1, r0
   2a0f0:	ldrh	r2, [r4, r6]
   2a0f2:	movs	r1, r0
   2a0f4:	ldrh	r5, [r4, r6]
   2a0f6:	movs	r1, r0
   2a0f8:	ldrh	r5, [r4, r6]
   2a0fa:	movs	r1, r0
   2a0fc:	ldrh	r7, [r4, r6]
   2a0fe:	movs	r1, r0
   2a100:	ldrh	r1, [r6, r6]
   2a102:	movs	r1, r0
   2a104:	ldrh	r1, [r6, r6]
   2a106:	movs	r1, r0
   2a108:	ldrh	r3, [r7, r6]
   2a10a:	movs	r1, r0
   2a10c:	ldrh	r1, [r7, r6]
   2a10e:	movs	r1, r0
   2a110:	ldrh	r5, [r0, r7]
   2a112:	movs	r1, r0
   2a114:	ldrh	r6, [r2, r7]
   2a116:	movs	r1, r0
   2a118:	ldrh	r2, [r3, r5]
   2a11a:	movs	r1, r0
   2a11c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a120:	mov	r9, r2
   2a122:	vpush	{d8}
   2a126:	mov	r5, r3
   2a128:	ldr	r2, [pc, #444]	; (2a2e8 <btrfs_check_chunk_valid@@Base+0x448>)
   2a12a:	ldr	r3, [pc, #448]	; (2a2ec <btrfs_check_chunk_valid@@Base+0x44c>)
   2a12c:	add	r2, pc
   2a12e:	sub	sp, #68	; 0x44
   2a130:	str	r0, [sp, #20]
   2a132:	ldr	r3, [r2, r3]
   2a134:	mov	r2, r5
   2a136:	ldr	r4, [sp, #112]	; 0x70
   2a138:	ldr	r3, [r3, #0]
   2a13a:	str	r3, [sp, #60]	; 0x3c
   2a13c:	mov.w	r3, #0
   2a140:	add.w	r3, r9, #96	; 0x60
   2a144:	adds	r7, r3, r5
   2a146:	ldr	r3, [r3, r5]
   2a148:	ldr.w	sl, [r1, #9]
   2a14c:	ldr.w	fp, [r1, #13]
   2a150:	mov	r1, r9
   2a152:	str	r3, [sp, #32]
   2a154:	ldr	r3, [r7, #4]
   2a156:	ldrh.w	r8, [r7, #44]	; 0x2c
   2a15a:	strd	sl, fp, [sp]
   2a15e:	str	r3, [sp, #36]	; 0x24
   2a160:	mov	r3, r4
   2a162:	bl	29ea0 <btrfs_check_chunk_valid@@Base>
   2a166:	mov	r6, r0
   2a168:	cbz	r0, 2a19e <btrfs_check_chunk_valid@@Base+0x2fe>
   2a16a:	adds	r4, #1
   2a16c:	bne.n	2a194 <btrfs_check_chunk_valid@@Base+0x2f4>
   2a16e:	ldr	r1, [pc, #384]	; (2a2f0 <btrfs_check_chunk_valid@@Base+0x450>)
   2a170:	ldr	r2, [pc, #384]	; (2a2f4 <btrfs_check_chunk_valid@@Base+0x454>)
   2a172:	add	r1, pc
   2a174:	add	r2, pc
   2a176:	ldr	r0, [pc, #384]	; (2a2f8 <btrfs_check_chunk_valid@@Base+0x458>)
   2a178:	add	r0, pc
   2a17a:	bl	17424 <__btrfs_error@@Base>
   2a17e:	ldr	r2, [pc, #380]	; (2a2fc <btrfs_check_chunk_valid@@Base+0x45c>)
   2a180:	ldr	r3, [pc, #360]	; (2a2ec <btrfs_check_chunk_valid@@Base+0x44c>)
   2a182:	add	r2, pc
   2a184:	ldr	r3, [r2, r3]
   2a186:	ldr	r2, [r3, #0]
   2a188:	ldr	r3, [sp, #60]	; 0x3c
   2a18a:	eors	r2, r3
   2a18c:	beq.w	2a2da <btrfs_check_chunk_valid@@Base+0x43a>
   2a190:	blx	86b8 <__stack_chk_fail@plt>
   2a194:	ldr	r1, [pc, #360]	; (2a300 <btrfs_check_chunk_valid@@Base+0x460>)
   2a196:	ldr	r2, [pc, #364]	; (2a304 <btrfs_check_chunk_valid@@Base+0x464>)
   2a198:	add	r1, pc
   2a19a:	add	r2, pc
   2a19c:	b.n	2a176 <btrfs_check_chunk_valid@@Base+0x2d6>
   2a19e:	ldr	r3, [sp, #20]
   2a1a0:	mov	r2, sl
   2a1a2:	adds	r3, #228	; 0xe4
   2a1a4:	vmov	s16, r3
   2a1a8:	mov	r3, fp
   2a1aa:	vmov	r0, s16
   2a1ae:	bl	15f84 <search_cache_extent@@Base>
   2a1b2:	cbz	r0, 2a1d8 <btrfs_check_chunk_valid@@Base+0x338>
   2a1b4:	ldrd	r2, r3, [r0, #24]
   2a1b8:	cmp	fp, r3
   2a1ba:	it	eq
   2a1bc:	cmpeq	sl, r2
   2a1be:	bcc.n	2a1d8 <btrfs_check_chunk_valid@@Base+0x338>
   2a1c0:	ldrd	r1, r0, [r0, #32]
   2a1c4:	adds	r1, r2, r1
   2a1c6:	str	r1, [sp, #24]
   2a1c8:	adcs	r3, r0
   2a1ca:	str	r3, [sp, #28]
   2a1cc:	ldrd	r3, r4, [sp, #24]
   2a1d0:	cmp	fp, r4
   2a1d2:	it	eq
   2a1d4:	cmpeq	sl, r3
   2a1d6:	bcc.n	2a17e <btrfs_check_chunk_valid@@Base+0x2de>
   2a1d8:	mov.w	r3, r8, lsl #4
   2a1dc:	str	r3, [sp, #24]
   2a1de:	add.w	r0, r3, #72	; 0x48
   2a1e2:	blx	8820 <malloc@plt+0x4>
   2a1e6:	mov	r4, r0
   2a1e8:	cmp	r0, #0
   2a1ea:	beq.n	2a2d4 <btrfs_check_chunk_valid@@Base+0x434>
   2a1ec:	ldr	r2, [r7, #36]	; 0x24
   2a1ee:	adds	r5, #48	; 0x30
   2a1f0:	ldr	r3, [sp, #32]
   2a1f2:	mov	r6, r0
   2a1f4:	ldr	r1, [r7, #24]
   2a1f6:	str	r2, [r0, #52]	; 0x34
   2a1f8:	ldr	r2, [r7, #32]
   2a1fa:	str	r3, [r0, #32]
   2a1fc:	ldr	r3, [sp, #36]	; 0x24
   2a1fe:	str	r2, [r0, #48]	; 0x30
   2a200:	ldr	r2, [r7, #40]	; 0x28
   2a202:	strd	sl, fp, [r0, #24]
   2a206:	add.w	sl, sp, #44	; 0x2c
   2a20a:	ldr.w	fp, [pc, #252]	; 2a308 <btrfs_check_chunk_valid@@Base+0x468>
   2a20e:	str	r2, [r0, #60]	; 0x3c
   2a210:	ldr	r2, [r7, #16]
   2a212:	add	fp, pc
   2a214:	str	r3, [r0, #36]	; 0x24
   2a216:	ldr	r3, [sp, #24]
   2a218:	str	r2, [r0, #56]	; 0x38
   2a21a:	ldr	r2, [r7, #28]
   2a21c:	add	r3, r0
   2a21e:	str.w	r8, [r0, #64]	; 0x40
   2a222:	str	r3, [sp, #24]
   2a224:	add.w	r3, r9, #96	; 0x60
   2a228:	strd	r1, r2, [r0, #40]	; 0x28
   2a22c:	ldrh	r2, [r7, #46]	; 0x2e
   2a22e:	str	r3, [sp, #32]
   2a230:	str	r2, [r0, #68]	; 0x44
   2a232:	ldr	r3, [sp, #24]
   2a234:	cmp	r3, r6
   2a236:	bne.n	2a266 <btrfs_check_chunk_valid@@Base+0x3c6>
   2a238:	vmov	r0, s16
   2a23c:	mov	r1, r4
   2a23e:	bl	15e42 <insert_cache_extent@@Base>
   2a242:	subs	r6, r0, #0
   2a244:	bge.n	2a17e <btrfs_check_chunk_valid@@Base+0x2de>
   2a246:	blx	8938 <__errno_location@plt>
   2a24a:	negs	r3, r6
   2a24c:	str	r3, [r0, #0]
   2a24e:	str	r6, [sp, #8]
   2a250:	ldrd	r2, r3, [r4, #32]
   2a254:	ldr	r0, [pc, #180]	; (2a30c <btrfs_check_chunk_valid@@Base+0x46c>)
   2a256:	strd	r2, r3, [sp]
   2a25a:	add	r0, pc
   2a25c:	ldrd	r2, r3, [r4, #24]
   2a260:	bl	17424 <__btrfs_error@@Base>
   2a264:	b.n	2a17e <btrfs_check_chunk_valid@@Base+0x2de>
   2a266:	ldr	r3, [sp, #32]
   2a268:	mov	r0, r9
   2a26a:	add	r3, r5
   2a26c:	ldr	r1, [r3, #8]
   2a26e:	ldr	r2, [r3, #12]
   2a270:	ldr.w	r8, [r3]
   2a274:	ldr	r7, [r3, #4]
   2a276:	movs	r3, #16
   2a278:	strd	r1, r2, [r6, #80]	; 0x50
   2a27c:	adds	r2, r5, r3
   2a27e:	mov	r1, sl
   2a280:	bl	172c2 <read_extent_buffer@@Base>
   2a284:	movs	r3, #0
   2a286:	ldr	r0, [sp, #20]
   2a288:	mov	r2, r8
   2a28a:	strd	sl, r3, [sp]
   2a28e:	mov	r3, r7
   2a290:	bl	29df0 <btrfs_find_device@@Base>
   2a294:	str	r0, [r6, #72]	; 0x48
   2a296:	cbnz	r0, 2a2ce <btrfs_check_chunk_valid@@Base+0x42e>
   2a298:	movs	r1, #128	; 0x80
   2a29a:	movs	r0, #1
   2a29c:	blx	8544 <calloc@plt+0x4>
   2a2a0:	mov.w	r3, #4294967295	; 0xffffffff
   2a2a4:	mov	r2, r8
   2a2a6:	mov	r1, fp
   2a2a8:	str	r3, [r0, #24]
   2a2aa:	mov	r3, r7
   2a2ac:	strd	r8, r7, [r0, #64]	; 0x40
   2a2b0:	str	r0, [r6, #72]	; 0x48
   2a2b2:	movs	r0, #1
   2a2b4:	blx	89ec <__printf_chk@plt+0x4>
   2a2b8:	ldr	r2, [sp, #20]
   2a2ba:	ldr	r3, [r6, #72]	; 0x48
   2a2bc:	ldr.w	r1, [r2, #352]	; 0x160
   2a2c0:	mov	r2, r1
   2a2c2:	ldr.w	r0, [r2, #72]!
   2a2c6:	str	r3, [r0, #4]
   2a2c8:	strd	r0, r2, [r3]
   2a2cc:	str	r3, [r1, #72]	; 0x48
   2a2ce:	adds	r6, #16
   2a2d0:	adds	r5, #32
   2a2d2:	b.n	2a232 <btrfs_check_chunk_valid@@Base+0x392>
   2a2d4:	mvn.w	r6, #11
   2a2d8:	b.n	2a17e <btrfs_check_chunk_valid@@Base+0x2de>
   2a2da:	mov	r0, r6
   2a2dc:	add	sp, #68	; 0x44
   2a2de:	vpop	{d8}
   2a2e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a2e6:	nop
   2a2e8:	add	r4, sp, #368	; 0x170
   2a2ea:	movs	r3, r0
   2a2ec:	lsls	r4, r4, #8
   2a2ee:	movs	r0, r0
   2a2f0:	ldrh	r7, [r6, r3]
   2a2f2:	movs	r1, r0
   2a2f4:	ldrh	r0, [r0, r4]
   2a2f6:	movs	r1, r0
   2a2f8:	ldrh	r3, [r5, r4]
   2a2fa:	movs	r1, r0
   2a2fc:	add	r4, sp, #24
   2a2fe:	movs	r3, r0
   2a300:	str	r3, [sp, #132]	; 0x84
   2a302:	movs	r2, r0
   2a304:	ldc2l	0, cr0, [r3, #-0]
   2a308:	ldrh	r5, [r0, r3]
   2a30a:	movs	r1, r0
   2a30c:	ldrh	r6, [r3, r2]
   2a30e:	movs	r1, r0

0002a310 <btrfs_read_sys_array@@Base>:
   2a310:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a314:	mov	r8, r0
   2a316:	vpush	{d8}
   2a31a:	ldr	r2, [pc, #376]	; (2a494 <btrfs_read_sys_array@@Base+0x184>)
   2a31c:	ldr	r3, [pc, #376]	; (2a498 <btrfs_read_sys_array@@Base+0x188>)
   2a31e:	add	r2, pc
   2a320:	ldr.w	r9, [pc, #376]	; 2a49c <btrfs_read_sys_array@@Base+0x18c>
   2a324:	sub	sp, #44	; 0x2c
   2a326:	ldr.w	r5, [r0, #308]	; 0x134
   2a32a:	ldr	r3, [r2, r3]
   2a32c:	add	r9, pc
   2a32e:	ldr.w	r2, [r0, #384]	; 0x180
   2a332:	ldr	r3, [r3, #0]
   2a334:	str	r3, [sp, #36]	; 0x24
   2a336:	mov.w	r3, #0
   2a33a:	cmp.w	r2, #4096	; 0x1000
   2a33e:	bcs.n	2a364 <btrfs_read_sys_array@@Base+0x54>
   2a340:	ldr	r1, [pc, #348]	; (2a4a0 <btrfs_read_sys_array@@Base+0x190>)
   2a342:	movs	r0, #1
   2a344:	add	r1, pc
   2a346:	blx	89ec <__printf_chk@plt+0x4>
   2a34a:	mvn.w	r3, #21
   2a34e:	ldr	r1, [pc, #340]	; (2a4a4 <btrfs_read_sys_array@@Base+0x194>)
   2a350:	ldr	r2, [pc, #324]	; (2a498 <btrfs_read_sys_array@@Base+0x188>)
   2a352:	add	r1, pc
   2a354:	ldr	r2, [r1, r2]
   2a356:	ldr	r1, [r2, #0]
   2a358:	ldr	r2, [sp, #36]	; 0x24
   2a35a:	eors	r1, r2
   2a35c:	beq.w	2a488 <btrfs_read_sys_array@@Base+0x178>
   2a360:	blx	86b8 <__stack_chk_fail@plt>
   2a364:	mov.w	r3, #4096	; 0x1000
   2a368:	mov.w	r2, #65536	; 0x10000
   2a36c:	str	r3, [sp, #0]
   2a36e:	movs	r3, #0
   2a370:	bl	16dd4 <alloc_dummy_extent_buffer@@Base>
   2a374:	mov	r6, r0
   2a376:	cmp	r0, #0
   2a378:	beq.w	2a482 <btrfs_read_sys_array@@Base+0x172>
   2a37c:	bl	1d620 <btrfs_set_buffer_uptodate@@Base>
   2a380:	movw	r3, #3531	; 0xdcb
   2a384:	mov	r1, r5
   2a386:	movs	r2, #0
   2a388:	mov	r0, r6
   2a38a:	movs	r7, #0
   2a38c:	bl	172d8 <write_extent_buffer@@Base>
   2a390:	add	r3, sp, #16
   2a392:	ldr.w	sl, [r5, #160]	; 0xa0
   2a396:	addw	r5, r5, #811	; 0x32b
   2a39a:	vmov	s16, r3
   2a39e:	movw	fp, #811	; 0x32b
   2a3a2:	cmp	r7, sl
   2a3a4:	bcc.n	2a3aa <btrfs_read_sys_array@@Base+0x9a>
   2a3a6:	movs	r3, #0
   2a3a8:	b.n	2a438 <btrfs_read_sys_array@@Base+0x128>
   2a3aa:	add.w	r2, r7, #17
   2a3ae:	cmp	r2, sl
   2a3b0:	bhi.n	2a45c <btrfs_read_sys_array@@Base+0x14c>
   2a3b2:	ldr.w	r1, [r5, #9]
   2a3b6:	add.w	fp, fp, #17
   2a3ba:	ldr.w	r3, [r5, #13]
   2a3be:	str.w	r1, [sp, #25]
   2a3c2:	str.w	r3, [sp, #29]
   2a3c6:	ldrb	r3, [r5, #8]
   2a3c8:	cmp	r3, #228	; 0xe4
   2a3ca:	strb.w	r3, [sp, #24]
   2a3ce:	ldr	r0, [r5, #0]
   2a3d0:	ldr	r1, [r5, #4]
   2a3d2:	strd	r0, r1, [sp, #16]
   2a3d6:	bne.n	2a444 <btrfs_read_sys_array@@Base+0x134>
   2a3d8:	movs	r0, #1
   2a3da:	str	r2, [sp, #12]
   2a3dc:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   2a3e0:	ldr	r2, [sp, #12]
   2a3e2:	adds	r3, r2, r0
   2a3e4:	mov	r4, r0
   2a3e6:	cmp	r3, sl
   2a3e8:	bhi.n	2a460 <btrfs_read_sys_array@@Base+0x150>
   2a3ea:	add.w	r3, r6, fp
   2a3ee:	ldrh.w	r3, [r3, #140]	; 0x8c
   2a3f2:	cbnz	r3, 2a40e <btrfs_read_sys_array@@Base+0xfe>
   2a3f4:	ldr	r1, [pc, #176]	; (2a4a8 <btrfs_read_sys_array@@Base+0x198>)
   2a3f6:	ldr.w	r0, [r9, r1]
   2a3fa:	str	r2, [sp, #0]
   2a3fc:	ldr	r2, [pc, #172]	; (2a4ac <btrfs_read_sys_array@@Base+0x19c>)
   2a3fe:	add	r2, pc
   2a400:	ldr	r0, [r0, #0]
   2a402:	movs	r1, #1
   2a404:	blx	8a14 <__fprintf_chk@plt+0x4>
   2a408:	mvn.w	r3, #4
   2a40c:	b.n	2a438 <btrfs_read_sys_array@@Base+0x128>
   2a40e:	mov	r0, r3
   2a410:	str	r2, [sp, #12]
   2a412:	bl	27e38 <btrfs_add_root_ref@@Base+0x268>
   2a416:	ldr	r2, [sp, #12]
   2a418:	adds	r7, r2, r0
   2a41a:	mov	r4, r0
   2a41c:	cmp	r7, sl
   2a41e:	bhi.n	2a460 <btrfs_read_sys_array@@Base+0x150>
   2a420:	mov.w	r3, #4294967295	; 0xffffffff
   2a424:	vmov	r1, s16
   2a428:	str	r3, [sp, #0]
   2a42a:	mov	r2, r6
   2a42c:	mov	r3, fp
   2a42e:	mov	r0, r8
   2a430:	bl	2a11c <btrfs_check_chunk_valid@@Base+0x27c>
   2a434:	mov	r3, r0
   2a436:	cbz	r0, 2a452 <btrfs_read_sys_array@@Base+0x142>
   2a438:	mov	r0, r6
   2a43a:	str	r3, [sp, #12]
   2a43c:	bl	16bc8 <free_extent_buffer@@Base>
   2a440:	ldr	r3, [sp, #12]
   2a442:	b.n	2a34e <btrfs_read_sys_array@@Base+0x3e>
   2a444:	ldr	r1, [pc, #96]	; (2a4a8 <btrfs_read_sys_array@@Base+0x198>)
   2a446:	ldr.w	r0, [r9, r1]
   2a44a:	str	r2, [sp, #0]
   2a44c:	ldr	r2, [pc, #96]	; (2a4b0 <btrfs_read_sys_array@@Base+0x1a0>)
   2a44e:	add	r2, pc
   2a450:	b.n	2a400 <btrfs_read_sys_array@@Base+0xf0>
   2a452:	add.w	r3, r4, #17
   2a456:	add	fp, r4
   2a458:	add	r5, r3
   2a45a:	b.n	2a3a2 <btrfs_read_sys_array@@Base+0x92>
   2a45c:	mov	r2, r7
   2a45e:	movs	r4, #17
   2a460:	ldr	r3, [pc, #68]	; (2a4a8 <btrfs_read_sys_array@@Base+0x198>)
   2a462:	movs	r1, #1
   2a464:	ldr.w	r0, [r9, r3]
   2a468:	mov	r3, r4
   2a46a:	str	r2, [sp, #0]
   2a46c:	ldr	r2, [pc, #68]	; (2a4b4 <btrfs_read_sys_array@@Base+0x1a4>)
   2a46e:	ldr	r0, [r0, #0]
   2a470:	add	r2, pc
   2a472:	blx	8a14 <__fprintf_chk@plt+0x4>
   2a476:	mov	r0, r6
   2a478:	bl	16bc8 <free_extent_buffer@@Base>
   2a47c:	mvn.w	r3, #4
   2a480:	b.n	2a34e <btrfs_read_sys_array@@Base+0x3e>
   2a482:	mvn.w	r3, #11
   2a486:	b.n	2a34e <btrfs_read_sys_array@@Base+0x3e>
   2a488:	mov	r0, r3
   2a48a:	add	sp, #44	; 0x2c
   2a48c:	vpop	{d8}
   2a490:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a494:	add	r2, sp, #424	; 0x1a8
   2a496:	movs	r3, r0
   2a498:	lsls	r4, r4, #8
   2a49a:	movs	r0, r0
   2a49c:	add	r2, sp, #368	; 0x170
   2a49e:	movs	r3, r0
   2a4a0:	ldr	r1, [r5, r7]
   2a4a2:	movs	r1, r0
   2a4a4:	add	r2, sp, #216	; 0xd8
   2a4a6:	movs	r3, r0
   2a4a8:	lsls	r4, r6, #8
   2a4aa:	movs	r0, r0
   2a4ac:	ldr	r0, [r4, r5]
   2a4ae:	movs	r1, r0
   2a4b0:	ldr	r7, [r1, r5]
   2a4b2:	movs	r1, r0
   2a4b4:	ldr	r7, [r4, r5]
   2a4b6:	movs	r1, r0

0002a4b8 <btrfs_read_chunk_tree@@Base>:
   2a4b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a4bc:	mov	r7, r0
   2a4be:	vpush	{d8-d9}
   2a4c2:	ldr	r2, [pc, #600]	; (2a71c <btrfs_read_chunk_tree@@Base+0x264>)
   2a4c4:	ldr	r3, [pc, #600]	; (2a720 <btrfs_read_chunk_tree@@Base+0x268>)
   2a4c6:	add	r2, pc
   2a4c8:	sub	sp, #100	; 0x64
   2a4ca:	ldr	r3, [r2, r3]
   2a4cc:	ldr	r3, [r3, #0]
   2a4ce:	str	r3, [sp, #92]	; 0x5c
   2a4d0:	mov.w	r3, #0
   2a4d4:	ldr	r3, [r0, #32]
   2a4d6:	str	r3, [sp, #8]
   2a4d8:	bl	17df8 <btrfs_alloc_path@@Base>
   2a4dc:	mov	r6, r0
   2a4de:	cmp	r0, #0
   2a4e0:	beq.w	2a70a <btrfs_read_chunk_tree@@Base+0x252>
   2a4e4:	movs	r0, #0
   2a4e6:	movs	r3, #1
   2a4e8:	ldr	r1, [sp, #8]
   2a4ea:	add	r2, sp, #20
   2a4ec:	strd	r3, r0, [sp, #20]
   2a4f0:	mov	r3, r6
   2a4f2:	strd	r0, r0, [sp]
   2a4f6:	strb.w	r0, [sp, #29]
   2a4fa:	strb.w	r0, [sp, #30]
   2a4fe:	strb.w	r0, [sp, #31]
   2a502:	strb.w	r0, [sp, #32]
   2a506:	strb.w	r0, [sp, #33]	; 0x21
   2a50a:	strb.w	r0, [sp, #34]	; 0x22
   2a50e:	strb.w	r0, [sp, #35]	; 0x23
   2a512:	strb.w	r0, [sp, #36]	; 0x24
   2a516:	strb.w	r0, [sp, #28]
   2a51a:	bl	1a1e4 <btrfs_search_slot@@Base>
   2a51e:	subs	r3, r0, #0
   2a520:	blt.n	2a554 <btrfs_read_chunk_tree@@Base+0x9c>
   2a522:	ldr.w	sl, [pc, #512]	; 2a724 <btrfs_read_chunk_tree@@Base+0x26c>
   2a526:	add.w	fp, sp, #40	; 0x28
   2a52a:	add	sl, pc
   2a52c:	ldr.w	r9, [r6]
   2a530:	ldr	r4, [r6, #32]
   2a532:	ldr.w	r3, [r9, #192]	; 0xc0
   2a536:	cmp	r4, r3
   2a538:	bcc.n	2a574 <btrfs_read_chunk_tree@@Base+0xbc>
   2a53a:	movs	r3, #0
   2a53c:	strb.w	r3, [r6, #65]	; 0x41
   2a540:	ldr	r3, [sp, #8]
   2a542:	mov	r1, r6
   2a544:	ldr.w	r0, [r3, #464]	; 0x1d0
   2a548:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   2a54c:	cmp	r0, #0
   2a54e:	beq.n	2a52c <btrfs_read_chunk_tree@@Base+0x74>
   2a550:	and.w	r3, r0, r0, asr #31
   2a554:	mov	r0, r6
   2a556:	str	r3, [sp, #8]
   2a558:	bl	17e26 <btrfs_free_path@@Base>
   2a55c:	ldr	r3, [sp, #8]
   2a55e:	ldr	r1, [pc, #456]	; (2a728 <btrfs_read_chunk_tree@@Base+0x270>)
   2a560:	ldr	r2, [pc, #444]	; (2a720 <btrfs_read_chunk_tree@@Base+0x268>)
   2a562:	add	r1, pc
   2a564:	ldr	r2, [r1, r2]
   2a566:	ldr	r1, [r2, #0]
   2a568:	ldr	r2, [sp, #92]	; 0x5c
   2a56a:	eors	r1, r2
   2a56c:	beq.w	2a710 <btrfs_read_chunk_tree@@Base+0x258>
   2a570:	blx	86b8 <__stack_chk_fail@plt>
   2a574:	mov	r2, r4
   2a576:	mov	r1, fp
   2a578:	mov	r0, r9
   2a57a:	bl	27e6c <btrfs_add_root_ref@@Base+0x29c>
   2a57e:	ldrb.w	r3, [sp, #48]	; 0x30
   2a582:	cmp	r3, #216	; 0xd8
   2a584:	bne.w	2a6e8 <btrfs_read_chunk_tree@@Base+0x230>
   2a588:	add.w	r3, r9, #96	; 0x60
   2a58c:	movs	r2, #25
   2a58e:	add.w	r8, sp, #60	; 0x3c
   2a592:	mov	r0, r9
   2a594:	mla	r4, r2, r4, r3
   2a598:	ldr.w	r4, [r4, #118]	; 0x76
   2a59c:	add.w	r2, r4, #101	; 0x65
   2a5a0:	adds	r5, r3, r2
   2a5a2:	ldr	r3, [r3, r2]
   2a5a4:	vmov	s17, r3
   2a5a8:	ldr	r3, [r5, #4]
   2a5aa:	vmov	s18, r3
   2a5ae:	add.w	r3, r4, #167	; 0xa7
   2a5b2:	vmov	s16, r3
   2a5b6:	add	r3, sp, #76	; 0x4c
   2a5b8:	str	r3, [sp, #12]
   2a5ba:	movs	r3, #16
   2a5bc:	vmov	r2, s16
   2a5c0:	ldr	r1, [sp, #12]
   2a5c2:	bl	172c2 <read_extent_buffer@@Base>
   2a5c6:	add.w	r2, r4, #183	; 0xb7
   2a5ca:	mov	r1, r8
   2a5cc:	mov	r0, r9
   2a5ce:	movs	r3, #16
   2a5d0:	bl	172c2 <read_extent_buffer@@Base>
   2a5d4:	ldr.w	r4, [r7, #352]	; 0x160
   2a5d8:	movs	r2, #16
   2a5da:	mov	r0, r8
   2a5dc:	mov	r1, r4
   2a5de:	blx	8650 <memcmp@plt+0x4>
   2a5e2:	cbz	r0, 2a64a <btrfs_read_chunk_tree@@Base+0x192>
   2a5e4:	ldr	r4, [r4, #92]	; 0x5c
   2a5e6:	cbnz	r4, 2a606 <btrfs_read_chunk_tree@@Base+0x14e>
   2a5e8:	mov	r1, r4
   2a5ea:	mov	r0, r8
   2a5ec:	bl	27cf8 <btrfs_add_root_ref@@Base+0x128>
   2a5f0:	mov	r4, r0
   2a5f2:	cbnz	r0, 2a630 <btrfs_read_chunk_tree@@Base+0x178>
   2a5f4:	movs	r1, #96	; 0x60
   2a5f6:	movs	r0, #1
   2a5f8:	blx	8544 <calloc@plt+0x4>
   2a5fc:	mov	r4, r0
   2a5fe:	cbnz	r0, 2a60e <btrfs_read_chunk_tree@@Base+0x156>
   2a600:	mvn.w	r3, #11
   2a604:	b.n	2a554 <btrfs_read_chunk_tree@@Base+0x9c>
   2a606:	movs	r2, #16
   2a608:	mov	r1, r8
   2a60a:	mov	r0, r4
   2a60c:	b.n	2a5de <btrfs_read_chunk_tree@@Base+0x126>
   2a60e:	ldr.w	r2, [sl]
   2a612:	add.w	r3, r0, #72	; 0x48
   2a616:	strd	r3, r3, [r0, #72]	; 0x48
   2a61a:	add.w	r3, r0, #80	; 0x50
   2a61e:	str.w	r3, [sl]
   2a622:	str	r3, [r2, #4]
   2a624:	strd	r2, sl, [r0, #80]	; 0x50
   2a628:	ldmia.w	r8, {r0, r1, r2, r3}
   2a62c:	stmia.w	r4, {r0, r1, r2, r3}
   2a630:	movs	r1, #0
   2a632:	mov	r0, r4
   2a634:	bl	27fc4 <btrfs_open_devices@@Base>
   2a638:	subs	r3, r0, #0
   2a63a:	bne.n	2a706 <btrfs_read_chunk_tree@@Base+0x24e>
   2a63c:	ldr.w	r3, [r7, #352]	; 0x160
   2a640:	ldr	r3, [r3, #92]	; 0x5c
   2a642:	str	r3, [r4, #92]	; 0x5c
   2a644:	ldr.w	r3, [r7, #352]	; 0x160
   2a648:	str	r4, [r3, #92]	; 0x5c
   2a64a:	ldr	r3, [sp, #12]
   2a64c:	mov	r0, r7
   2a64e:	vmov	r2, s17
   2a652:	str.w	r8, [sp, #4]
   2a656:	str	r3, [sp, #0]
   2a658:	vmov	r3, s18
   2a65c:	bl	29df0 <btrfs_find_device@@Base>
   2a660:	mov	r4, r0
   2a662:	cbnz	r0, 2a68a <btrfs_read_chunk_tree@@Base+0x1d2>
   2a664:	movs	r1, #128	; 0x80
   2a666:	movs	r0, #1
   2a668:	blx	8544 <calloc@plt+0x4>
   2a66c:	mov	r4, r0
   2a66e:	cmp	r0, #0
   2a670:	beq.n	2a600 <btrfs_read_chunk_tree@@Base+0x148>
   2a672:	ldr.w	r2, [r7, #352]	; 0x160
   2a676:	mov.w	r3, #4294967295	; 0xffffffff
   2a67a:	str	r3, [r0, #24]
   2a67c:	mov	r3, r2
   2a67e:	ldr.w	r1, [r3, #72]!
   2a682:	str	r0, [r1, #4]
   2a684:	strd	r1, r3, [r0]
   2a688:	str	r0, [r2, #72]	; 0x48
   2a68a:	ldr	r2, [r5, #0]
   2a68c:	add.w	r1, r4, #112	; 0x70
   2a690:	ldr	r3, [r5, #4]
   2a692:	mov	r0, r9
   2a694:	strd	r2, r3, [r4, #64]	; 0x40
   2a698:	ldr	r2, [r5, #8]
   2a69a:	ldr	r3, [r5, #12]
   2a69c:	strd	r2, r3, [r4, #72]	; 0x48
   2a6a0:	ldr	r2, [r5, #16]
   2a6a2:	ldr	r3, [r5, #20]
   2a6a4:	strd	r2, r3, [r4, #80]	; 0x50
   2a6a8:	ldr	r2, [r5, #36]	; 0x24
   2a6aa:	ldr	r3, [r5, #40]	; 0x28
   2a6ac:	strd	r2, r3, [r4, #104]	; 0x68
   2a6b0:	ldr	r3, [r5, #24]
   2a6b2:	vmov	r2, s16
   2a6b6:	str	r3, [r4, #88]	; 0x58
   2a6b8:	ldr	r3, [r5, #28]
   2a6ba:	str	r3, [r4, #92]	; 0x5c
   2a6bc:	ldr	r3, [r5, #32]
   2a6be:	str	r3, [r4, #96]	; 0x60
   2a6c0:	movs	r3, #16
   2a6c2:	bl	172c2 <read_extent_buffer@@Base>
   2a6c6:	ldr	r3, [r7, #36]	; 0x24
   2a6c8:	str	r3, [r4, #8]
   2a6ca:	ldr.w	r2, [r7, #352]	; 0x160
   2a6ce:	ldr	r0, [r5, #8]
   2a6d0:	ldr	r4, [r5, #12]
   2a6d2:	ldrd	r3, r1, [r2, #56]	; 0x38
   2a6d6:	adds	r3, r3, r0
   2a6d8:	adc.w	r1, r4, r1
   2a6dc:	strd	r3, r1, [r2, #56]	; 0x38
   2a6e0:	ldr	r3, [r6, #32]
   2a6e2:	adds	r3, #1
   2a6e4:	str	r3, [r6, #32]
   2a6e6:	b.n	2a52c <btrfs_read_chunk_tree@@Base+0x74>
   2a6e8:	cmp	r3, #228	; 0xe4
   2a6ea:	bne.n	2a6e0 <btrfs_read_chunk_tree@@Base+0x228>
   2a6ec:	movs	r3, #25
   2a6ee:	mov	r2, r9
   2a6f0:	mla	r3, r3, r4, r9
   2a6f4:	mov	r1, fp
   2a6f6:	mov	r0, r7
   2a6f8:	ldr.w	r3, [r3, #214]	; 0xd6
   2a6fc:	str	r4, [sp, #0]
   2a6fe:	adds	r3, #101	; 0x65
   2a700:	bl	2a11c <btrfs_check_chunk_valid@@Base+0x27c>
   2a704:	subs	r3, r0, #0
   2a706:	bge.n	2a6e0 <btrfs_read_chunk_tree@@Base+0x228>
   2a708:	b.n	2a554 <btrfs_read_chunk_tree@@Base+0x9c>
   2a70a:	mvn.w	r3, #11
   2a70e:	b.n	2a55e <btrfs_read_chunk_tree@@Base+0xa6>
   2a710:	mov	r0, r3
   2a712:	add	sp, #100	; 0x64
   2a714:	vpop	{d8-d9}
   2a718:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a71c:	add	r0, sp, #776	; 0x308
   2a71e:	movs	r3, r0
   2a720:	lsls	r4, r4, #8
   2a722:	movs	r0, r0
   2a724:	pop	{r1, r2, r3, r7}
   2a726:	movs	r3, r0
   2a728:	add	r0, sp, #152	; 0x98
   2a72a:	movs	r3, r0

0002a72c <btrfs_scanned_uuids@@Base>:
   2a72c:	ldr	r0, [pc, #4]	; (2a734 <btrfs_scanned_uuids@@Base+0x8>)
   2a72e:	add	r0, pc
   2a730:	bx	lr
   2a732:	nop
   2a734:	hlt	0x000a
   2a736:	movs	r3, r0

0002a738 <write_raid56_with_parity@@Base>:
   2a738:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a73c:	vpush	{d8}
   2a740:	vmov	s16, r0
   2a744:	ldr	r3, [r1, #76]	; 0x4c
   2a746:	sub	sp, #44	; 0x2c
   2a748:	str	r1, [sp, #4]
   2a74a:	str	r3, [sp, #16]
   2a74c:	ldr	r3, [r2, #4]
   2a74e:	str	r2, [sp, #12]
   2a750:	lsls	r5, r3, #2
   2a752:	str	r3, [sp, #8]
   2a754:	mov	r0, r5
   2a756:	blx	8820 <malloc@plt+0x4>
   2a75a:	mov	r4, r0
   2a75c:	mov	r0, r5
   2a75e:	blx	8820 <malloc@plt+0x4>
   2a762:	mov	sl, r0
   2a764:	cbz	r4, 2a768 <write_raid56_with_parity@@Base+0x30>
   2a766:	cbnz	r0, 2a784 <write_raid56_with_parity@@Base+0x4c>
   2a768:	mov	r0, r4
   2a76a:	mvn.w	r9, #11
   2a76e:	blx	85dc <free@plt+0x4>
   2a772:	mov	r0, sl
   2a774:	blx	85dc <free@plt+0x4>
   2a778:	mov	r0, r9
   2a77a:	add	sp, #44	; 0x2c
   2a77c:	vpop	{d8}
   2a780:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a784:	ldr	r3, [sp, #16]
   2a786:	asrs	r2, r3, #31
   2a788:	mov	r1, r3
   2a78a:	mov	r3, r2
   2a78c:	mov	r2, r1
   2a78e:	ldrd	r0, r1, [sp, #88]	; 0x58
   2a792:	cmp	r3, r1
   2a794:	ldr	r3, [sp, #16]
   2a796:	it	eq
   2a798:	cmpeq	r2, r0
   2a79a:	ldr	r2, [sp, #88]	; 0x58
   2a79c:	ldr	r0, [sp, #8]
   2a79e:	mov.w	r1, #4
   2a7a2:	it	cc
   2a7a4:	movcc	r3, r2
   2a7a6:	str	r3, [sp, #16]
   2a7a8:	ldr	r3, [sp, #4]
   2a7aa:	ldrd	r2, r3, [r3, #40]	; 0x28
   2a7ae:	strd	r2, r3, [sp, #24]
   2a7b2:	blx	8544 <calloc@plt+0x4>
   2a7b6:	mov	r8, r0
   2a7b8:	cmp	r0, #0
   2a7ba:	beq.w	2aac2 <write_raid56_with_parity@@Base+0x38a>
   2a7be:	ldr	r3, [sp, #96]	; 0x60
   2a7c0:	movs	r5, #0
   2a7c2:	ldr	r1, [sp, #88]	; 0x58
   2a7c4:	mvn.w	r2, #2
   2a7c8:	subs	r3, #8
   2a7ca:	str	r3, [sp, #20]
   2a7cc:	add.w	r7, r1, #96	; 0x60
   2a7d0:	mov	r6, r3
   2a7d2:	mov.w	r3, #4294967295	; 0xffffffff
   2a7d6:	ldr	r1, [sp, #8]
   2a7d8:	cmp	r1, r5
   2a7da:	bgt.n	2a7e2 <write_raid56_with_parity@@Base+0xaa>
   2a7dc:	mov.w	fp, #0
   2a7e0:	b.n	2a910 <write_raid56_with_parity@@Base+0x1d8>
   2a7e2:	ldrd	r0, r1, [r6, #8]!
   2a7e6:	cmp	r3, r1
   2a7e8:	it	eq
   2a7ea:	cmpeq	r2, r0
   2a7ec:	bcc.n	2a7dc <write_raid56_with_parity@@Base+0xa4>
   2a7ee:	mov	r1, r7
   2a7f0:	movs	r0, #1
   2a7f2:	blx	8544 <calloc@plt+0x4>
   2a7f6:	str.w	r0, [r8, r5, lsl #2]
   2a7fa:	cmp	r0, #0
   2a7fc:	beq.w	2a99a <write_raid56_with_parity@@Base+0x262>
   2a800:	adds	r5, #1
   2a802:	mvn.w	r2, #2
   2a806:	mov.w	r3, #4294967295	; 0xffffffff
   2a80a:	b.n	2a7d6 <write_raid56_with_parity@@Base+0x9e>
   2a80c:	ldr	r3, [sp, #20]
   2a80e:	mvn.w	r2, #2
   2a812:	ldr.w	r5, [r8, fp, lsl #2]
   2a816:	ldrd	r6, r7, [r3, #8]!
   2a81a:	str	r3, [sp, #20]
   2a81c:	mov.w	r3, #4294967295	; 0xffffffff
   2a820:	cmp	r3, r7
   2a822:	it	eq
   2a824:	cmpeq	r2, r6
   2a826:	bcc.n	2a918 <write_raid56_with_parity@@Base+0x1e0>
   2a828:	ldr	r3, [sp, #88]	; 0x58
   2a82a:	movs	r2, #1
   2a82c:	strd	r6, r7, [r5, #40]	; 0x28
   2a830:	str	r3, [r5, #76]	; 0x4c
   2a832:	movs	r3, #0
   2a834:	strd	r2, r3, [r5, #80]	; 0x50
   2a838:	mov.w	r3, #4294967295	; 0xffffffff
   2a83c:	mov.w	r2, #4294967295	; 0xffffffff
   2a840:	str	r3, [r5, #88]	; 0x58
   2a842:	mov.w	r3, #4294967295	; 0xffffffff
   2a846:	strd	r2, r3, [r5, #48]	; 0x30
   2a84a:	ldrd	r2, r3, [sp, #24]
   2a84e:	cmp	r7, r3
   2a850:	it	eq
   2a852:	cmpeq	r6, r2
   2a854:	bcc.n	2a87e <write_raid56_with_parity@@Base+0x146>
   2a856:	ldr	r3, [sp, #4]
   2a858:	ldr	r1, [r3, #76]	; 0x4c
   2a85a:	ldrd	r2, r3, [sp, #24]
   2a85e:	adds	r2, r2, r1
   2a860:	ldr	r1, [sp, #88]	; 0x58
   2a862:	adc.w	r3, r3, #0
   2a866:	adds	r1, r1, r6
   2a868:	str	r1, [sp, #32]
   2a86a:	ldr	r1, [sp, #92]	; 0x5c
   2a86c:	adcs	r1, r7
   2a86e:	str	r1, [sp, #36]	; 0x24
   2a870:	ldrd	r0, r1, [sp, #32]
   2a874:	cmp	r3, r1
   2a876:	it	eq
   2a878:	cmpeq	r2, r0
   2a87a:	bcs.w	2a986 <write_raid56_with_parity@@Base+0x24e>
   2a87e:	vmov	r0, s16
   2a882:	movs	r2, #0
   2a884:	mov	r1, r5
   2a886:	bl	1c1e8 <read_whole_eb@@Base>
   2a88a:	mov	r9, r0
   2a88c:	cmp	r0, #0
   2a88e:	bne.w	2a99e <write_raid56_with_parity@@Base+0x266>
   2a892:	ldr	r3, [sp, #4]
   2a894:	ldrd	r0, r1, [r5, #40]	; 0x28
   2a898:	ldr.w	ip, [r5, #76]	; 0x4c
   2a89c:	ldrd	r6, r7, [r3, #40]	; 0x28
   2a8a0:	adds.w	r2, r0, ip
   2a8a4:	adc.w	r3, r1, #0
   2a8a8:	cmp	r7, r3
   2a8aa:	it	eq
   2a8ac:	cmpeq	r6, r2
   2a8ae:	bcs.n	2a908 <write_raid56_with_parity@@Base+0x1d0>
   2a8b0:	ldr	r3, [sp, #4]
   2a8b2:	ldr.w	lr, [r3, #76]	; 0x4c
   2a8b6:	adds.w	r2, r6, lr
   2a8ba:	adc.w	r3, r7, #0
   2a8be:	cmp	r1, r3
   2a8c0:	it	eq
   2a8c2:	cmpeq	r0, r2
   2a8c4:	bcs.n	2a908 <write_raid56_with_parity@@Base+0x1d0>
   2a8c6:	cmp	r7, r1
   2a8c8:	ldr	r3, [sp, #88]	; 0x58
   2a8ca:	it	eq
   2a8cc:	cmpeq	r6, r0
   2a8ce:	it	cc
   2a8d0:	subcc.w	r9, r0, r6
   2a8d4:	cmp	r1, r7
   2a8d6:	it	eq
   2a8d8:	cmpeq	r0, r6
   2a8da:	sub.w	lr, lr, r9
   2a8de:	it	cc
   2a8e0:	subcc	r6, r6, r0
   2a8e2:	add.w	r0, r5, #96	; 0x60
   2a8e6:	it	cs
   2a8e8:	movcs	r6, #0
   2a8ea:	cmp	lr, r3
   2a8ec:	sub.w	r2, ip, r6
   2a8f0:	add	r0, r6
   2a8f2:	it	cs
   2a8f4:	movcs	lr, r3
   2a8f6:	ldr	r3, [sp, #4]
   2a8f8:	cmp	r2, lr
   2a8fa:	add.w	r1, r3, #96	; 0x60
   2a8fe:	add	r1, r9
   2a900:	it	cs
   2a902:	movcs	r2, lr
   2a904:	blx	8628 <memcpy@plt+0x4>
   2a908:	str.w	r5, [r4, fp, lsl #2]
   2a90c:	add.w	fp, fp, #1
   2a910:	ldr	r3, [sp, #8]
   2a912:	cmp	r3, fp
   2a914:	bgt.w	2a80c <write_raid56_with_parity@@Base+0xd4>
   2a918:	mov	r0, r8
   2a91a:	movs	r6, #0
   2a91c:	blx	85dc <free@plt+0x4>
   2a920:	ldr	r3, [sp, #16]
   2a922:	ldr	r7, [sp, #12]
   2a924:	mov	r5, r6
   2a926:	ldr.w	r8, [sp, #96]	; 0x60
   2a92a:	add.w	r9, r3, #96	; 0x60
   2a92e:	str	r6, [sp, #8]
   2a930:	ldr	r3, [sp, #12]
   2a932:	ldr	r0, [r3, #4]
   2a934:	cmp	r0, r6
   2a936:	bgt.n	2a9c6 <write_raid56_with_parity@@Base+0x28e>
   2a938:	add.w	r3, r0, #1073741824	; 0x40000000
   2a93c:	subs	r3, #1
   2a93e:	add.w	r2, r4, r3, lsl #2
   2a942:	cmp	r5, #0
   2a944:	beq.w	2aa70 <write_raid56_with_parity@@Base+0x338>
   2a948:	ldr	r1, [sp, #8]
   2a94a:	str.w	r1, [r2, #-4]
   2a94e:	str.w	r5, [r4, r3, lsl #2]
   2a952:	movs	r3, #0
   2a954:	cmp	r0, r3
   2a956:	bgt.w	2aa62 <write_raid56_with_parity@@Base+0x32a>
   2a95a:	ldr	r1, [sp, #88]	; 0x58
   2a95c:	mov	r2, sl
   2a95e:	bl	2eaa4 <raid6_gen_syndrome@@Base>
   2a962:	mov.w	r9, #0
   2a966:	movs	r5, #0
   2a968:	ldr	r3, [sp, #12]
   2a96a:	ldr	r3, [r3, #4]
   2a96c:	cmp	r3, r5
   2a96e:	ble.w	2aa8c <write_raid56_with_parity@@Base+0x354>
   2a972:	ldr.w	r0, [r4, r5, lsl #2]
   2a976:	bl	16e26 <write_extent_to_disk@@Base>
   2a97a:	subs.w	r9, r0, #0
   2a97e:	blt.w	2aa8c <write_raid56_with_parity@@Base+0x354>
   2a982:	adds	r5, #1
   2a984:	b.n	2a968 <write_raid56_with_parity@@Base+0x230>
   2a986:	ldr	r3, [sp, #4]
   2a988:	add.w	r0, r5, #96	; 0x60
   2a98c:	ldr	r2, [sp, #88]	; 0x58
   2a98e:	add.w	r1, r3, #96	; 0x60
   2a992:	ldr	r3, [sp, #24]
   2a994:	subs	r6, r6, r3
   2a996:	add	r1, r6
   2a998:	b.n	2a904 <write_raid56_with_parity@@Base+0x1cc>
   2a99a:	mvn.w	r9, #11
   2a99e:	movs	r5, #0
   2a9a0:	ldr	r3, [sp, #8]
   2a9a2:	cmp	r3, r5
   2a9a4:	bgt.n	2a9ba <write_raid56_with_parity@@Base+0x282>
   2a9a6:	mov	r0, r8
   2a9a8:	blx	85dc <free@plt+0x4>
   2a9ac:	mov	r0, r4
   2a9ae:	blx	85dc <free@plt+0x4>
   2a9b2:	mov	r0, sl
   2a9b4:	blx	85dc <free@plt+0x4>
   2a9b8:	b.n	2a778 <write_raid56_with_parity@@Base+0x40>
   2a9ba:	ldr.w	r0, [r8, r5, lsl #2]
   2a9be:	adds	r5, #1
   2a9c0:	blx	85dc <free@plt+0x4>
   2a9c4:	b.n	2a9a0 <write_raid56_with_parity@@Base+0x268>
   2a9c6:	ldrd	r2, r3, [r8]
   2a9ca:	mov.w	r1, #4294967295	; 0xffffffff
   2a9ce:	mvn.w	r0, #2
   2a9d2:	cmp	r1, r3
   2a9d4:	it	eq
   2a9d6:	cmpeq	r0, r2
   2a9d8:	bcc.n	2aa14 <write_raid56_with_parity@@Base+0x2dc>
   2a9da:	ldrd	r2, r3, [r7, #16]
   2a9de:	ldr	r1, [r7, #8]
   2a9e0:	ldr.w	r0, [r4, r6, lsl #2]
   2a9e4:	strd	r2, r3, [r0, #48]	; 0x30
   2a9e8:	ldr	r3, [r1, #24]
   2a9ea:	str	r3, [r0, #88]	; 0x58
   2a9ec:	ldrd	r3, r2, [r1, #16]
   2a9f0:	adds	r3, #1
   2a9f2:	adc.w	r2, r2, #0
   2a9f6:	strd	r3, r2, [r1, #16]
   2a9fa:	ldrd	r0, r1, [r0, #40]	; 0x28
   2a9fe:	ldrd	r2, r3, [r8]
   2aa02:	cmp	r1, r3
   2aa04:	it	eq
   2aa06:	cmpeq	r0, r2
   2aa08:	bne.n	2aab6 <write_raid56_with_parity@@Base+0x37e>
   2aa0a:	adds	r6, #1
   2aa0c:	adds	r7, #16
   2aa0e:	add.w	r8, r8, #8
   2aa12:	b.n	2a930 <write_raid56_with_parity@@Base+0x1f8>
   2aa14:	mov	r0, r9
   2aa16:	blx	8820 <malloc@plt+0x4>
   2aa1a:	cmp	r0, #0
   2aa1c:	beq.n	2aabc <write_raid56_with_parity@@Base+0x384>
   2aa1e:	ldrd	r2, r3, [r7, #16]
   2aa22:	mov.w	ip, #4294967295	; 0xffffffff
   2aa26:	ldr	r1, [r7, #8]
   2aa28:	mvn.w	fp, #1
   2aa2c:	strd	r2, r3, [r0, #48]	; 0x30
   2aa30:	ldr	r3, [r1, #24]
   2aa32:	str	r3, [r0, #88]	; 0x58
   2aa34:	ldrd	r3, r2, [r1, #16]
   2aa38:	adds	r3, #1
   2aa3a:	adc.w	r2, r2, #0
   2aa3e:	strd	r3, r2, [r1, #16]
   2aa42:	ldr	r3, [sp, #88]	; 0x58
   2aa44:	str	r3, [r0, #76]	; 0x4c
   2aa46:	ldrd	r2, r3, [r8]
   2aa4a:	cmp	r3, ip
   2aa4c:	it	eq
   2aa4e:	cmpeq	r2, fp
   2aa50:	beq.n	2aa5e <write_raid56_with_parity@@Base+0x326>
   2aa52:	adds	r3, #1
   2aa54:	itt	eq
   2aa56:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2aa5a:	moveq	r5, r0
   2aa5c:	b.n	2aa0a <write_raid56_with_parity@@Base+0x2d2>
   2aa5e:	str	r0, [sp, #8]
   2aa60:	b.n	2aa0a <write_raid56_with_parity@@Base+0x2d2>
   2aa62:	ldr.w	r2, [r4, r3, lsl #2]
   2aa66:	adds	r2, #96	; 0x60
   2aa68:	str.w	r2, [sl, r3, lsl #2]
   2aa6c:	adds	r3, #1
   2aa6e:	b.n	2a954 <write_raid56_with_parity@@Base+0x21c>
   2aa70:	ldr	r2, [sp, #8]
   2aa72:	str.w	r2, [r4, r3, lsl #2]
   2aa76:	cmp	r0, r5
   2aa78:	bgt.n	2aaa8 <write_raid56_with_parity@@Base+0x370>
   2aa7a:	ldr	r1, [sp, #88]	; 0x58
   2aa7c:	subs	r2, r0, #1
   2aa7e:	mov	r3, sl
   2aa80:	bl	2eb10 <raid5_gen_result@@Base>
   2aa84:	subs.w	r9, r0, #0
   2aa88:	bge.w	2a966 <write_raid56_with_parity@@Base+0x22e>
   2aa8c:	movs	r5, #0
   2aa8e:	ldr	r3, [sp, #12]
   2aa90:	ldr	r3, [r3, #4]
   2aa92:	cmp	r3, r5
   2aa94:	ble.n	2a9ac <write_raid56_with_parity@@Base+0x274>
   2aa96:	ldr.w	r0, [r4, r5, lsl #2]
   2aa9a:	ldr	r3, [sp, #4]
   2aa9c:	cmp	r0, r3
   2aa9e:	beq.n	2aaa4 <write_raid56_with_parity@@Base+0x36c>
   2aaa0:	blx	85dc <free@plt+0x4>
   2aaa4:	adds	r5, #1
   2aaa6:	b.n	2aa8e <write_raid56_with_parity@@Base+0x356>
   2aaa8:	ldr.w	r3, [r4, r5, lsl #2]
   2aaac:	adds	r3, #96	; 0x60
   2aaae:	str.w	r3, [sl, r5, lsl #2]
   2aab2:	adds	r5, #1
   2aab4:	b.n	2aa76 <write_raid56_with_parity@@Base+0x33e>
   2aab6:	mvn.w	r9, #21
   2aaba:	b.n	2aa8c <write_raid56_with_parity@@Base+0x354>
   2aabc:	mvn.w	r9, #11
   2aac0:	b.n	2aa8c <write_raid56_with_parity@@Base+0x354>
   2aac2:	mvn.w	r9, #11
   2aac6:	b.n	2a9ac <write_raid56_with_parity@@Base+0x274>

0002aac8 <btrfs_stripe_length@@Base>:
   2aac8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2aacc:	adds	r1, #96	; 0x60
   2aace:	add	r1, r2
   2aad0:	movs	r3, #0
   2aad2:	cmp	r3, #0
   2aad4:	mov	r7, r3
   2aad6:	ldr	r4, [r1, #24]
   2aad8:	ldrh	r2, [r1, #44]	; 0x2c
   2aada:	and.w	r6, r4, #2040	; 0x7f8
   2aade:	ldr	r5, [r1, #0]
   2aae0:	it	eq
   2aae2:	cmpeq	r6, #64	; 0x40
   2aae4:	ldr	r4, [r1, #4]
   2aae6:	uxth	r0, r2
   2aae8:	beq.n	2ab8c <btrfs_stripe_length@@Base+0xc4>
   2aaea:	cmp	r3, #0
   2aaec:	it	eq
   2aaee:	cmpeq	r6, #65	; 0x41
   2aaf0:	bcs.n	2ab3c <btrfs_stripe_length@@Base+0x74>
   2aaf2:	cmp	r3, #0
   2aaf4:	it	eq
   2aaf6:	cmpeq	r6, #8
   2aaf8:	beq.n	2ab82 <btrfs_stripe_length@@Base+0xba>
   2aafa:	cmp	r3, #0
   2aafc:	it	eq
   2aafe:	cmpeq	r6, #9
   2ab00:	bcs.n	2ab22 <btrfs_stripe_length@@Base+0x5a>
   2ab02:	orrs.w	r3, r6, r7
   2ab06:	beq.n	2ab32 <btrfs_stripe_length@@Base+0x6a>
   2ab08:	ldr	r2, [pc, #140]	; (2ab98 <btrfs_stripe_length@@Base+0xd0>)
   2ab0a:	movs	r3, #1
   2ab0c:	ldr	r1, [pc, #140]	; (2ab9c <btrfs_stripe_length@@Base+0xd4>)
   2ab0e:	ldr	r0, [pc, #144]	; (2aba0 <btrfs_stripe_length@@Base+0xd8>)
   2ab10:	add	r2, pc
   2ab12:	str	r3, [sp, #0]
   2ab14:	adds	r2, #130	; 0x82
   2ab16:	add	r1, pc
   2ab18:	add	r0, pc
   2ab1a:	movw	r3, #2545	; 0x9f1
   2ab1e:	bl	27dc4 <btrfs_add_root_ref@@Base+0x1f4>
   2ab22:	cmp	r3, #0
   2ab24:	it	eq
   2ab26:	cmpeq	r6, #16
   2ab28:	beq.n	2ab32 <btrfs_stripe_length@@Base+0x6a>
   2ab2a:	cmp	r3, #0
   2ab2c:	it	eq
   2ab2e:	cmpeq	r6, #32
   2ab30:	bne.n	2ab08 <btrfs_stripe_length@@Base+0x40>
   2ab32:	mov	r0, r5
   2ab34:	mov	r1, r4
   2ab36:	add	sp, #12
   2ab38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ab3c:	cmp	r3, #0
   2ab3e:	it	eq
   2ab40:	cmpeq.w	r6, #256	; 0x100
   2ab44:	beq.n	2ab88 <btrfs_stripe_length@@Base+0xc0>
   2ab46:	mov.w	r9, #0
   2ab4a:	cmp	r9, r3
   2ab4c:	mov.w	r8, #256	; 0x100
   2ab50:	it	eq
   2ab52:	cmpeq	r8, r6
   2ab54:	bcc.n	2ab6e <btrfs_stripe_length@@Base+0xa6>
   2ab56:	cmp	r3, #0
   2ab58:	it	eq
   2ab5a:	cmpeq	r6, #128	; 0x80
   2ab5c:	bne.n	2ab08 <btrfs_stripe_length@@Base+0x40>
   2ab5e:	subs	r2, r0, #1
   2ab60:	mov	r0, r5
   2ab62:	mov	r1, r4
   2ab64:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2ab68:	mov	r5, r0
   2ab6a:	mov	r4, r1
   2ab6c:	b.n	2ab32 <btrfs_stripe_length@@Base+0x6a>
   2ab6e:	cmp	r3, #0
   2ab70:	it	eq
   2ab72:	cmpeq.w	r6, #512	; 0x200
   2ab76:	beq.n	2ab32 <btrfs_stripe_length@@Base+0x6a>
   2ab78:	cmp	r3, #0
   2ab7a:	it	eq
   2ab7c:	cmpeq.w	r6, #1024	; 0x400
   2ab80:	b.n	2ab30 <btrfs_stripe_length@@Base+0x68>
   2ab82:	uxth	r2, r2
   2ab84:	movs	r3, #0
   2ab86:	b.n	2ab60 <btrfs_stripe_length@@Base+0x98>
   2ab88:	subs	r2, r0, #2
   2ab8a:	b.n	2ab60 <btrfs_stripe_length@@Base+0x98>
   2ab8c:	ldrh	r1, [r1, #46]	; 0x2e
   2ab8e:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2ab92:	mov	r2, r0
   2ab94:	b.n	2ab84 <btrfs_stripe_length@@Base+0xbc>
   2ab96:	nop
   2ab98:	strb	r4, [r5, r5]
   2ab9a:	movs	r1, r0
   2ab9c:	ldr	r6, [pc, #548]	; (2adc4 <btrfs_fix_super_size@@Base+0xa4>)
   2ab9e:	movs	r1, r0
   2aba0:	cmp	r3, #249	; 0xf9
   2aba2:	movs	r1, r0

0002aba4 <btrfs_fix_device_size@@Base>:
   2aba4:	ldr	r2, [pc, #344]	; (2ad00 <btrfs_fix_device_size@@Base+0x15c>)
   2aba6:	ldr	r3, [pc, #348]	; (2ad04 <btrfs_fix_device_size@@Base+0x160>)
   2aba8:	add	r2, pc
   2abaa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2abae:	sub	sp, #116	; 0x74
   2abb0:	ldr	r3, [r2, r3]
   2abb2:	mov	r5, r1
   2abb4:	ldrd	sl, fp, [r1, #72]	; 0x48
   2abb8:	movs	r1, #0
   2abba:	ldr	r3, [r3, #0]
   2abbc:	str	r3, [sp, #108]	; 0x6c
   2abbe:	mov.w	r3, #0
   2abc2:	ldr.w	r3, [r0, #388]	; 0x184
   2abc6:	movs	r4, #0
   2abc8:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2abcc:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2abd0:	and.w	r6, r2, sl
   2abd4:	and.w	r7, r1, fp
   2abd8:	orrs.w	r2, r6, r7
   2abdc:	beq.n	2ac28 <btrfs_fix_device_size@@Base+0x84>
   2abde:	negs	r3, r3
   2abe0:	ldr.w	r9, [r0, #32]
   2abe4:	and.w	r3, r3, sl
   2abe8:	str	r3, [r5, #72]	; 0x48
   2abea:	movs	r3, #216	; 0xd8
   2abec:	strb.w	r3, [sp, #28]
   2abf0:	ldr	r3, [r5, #64]	; 0x40
   2abf2:	mov.w	r8, #1
   2abf6:	mov	r1, r8
   2abf8:	mov	r0, r9
   2abfa:	strd	r8, r4, [sp, #20]
   2abfe:	str.w	r3, [sp, #29]
   2ac02:	ldr	r3, [r5, #68]	; 0x44
   2ac04:	str.w	r3, [sp, #33]	; 0x21
   2ac08:	bl	2af24 <btrfs_start_transaction@@Base>
   2ac0c:	cmn.w	r0, #4096	; 0x1000
   2ac10:	mov	r6, r0
   2ac12:	bls.n	2ac3c <btrfs_fix_device_size@@Base+0x98>
   2ac14:	mov	r4, r0
   2ac16:	blx	8938 <__errno_location@plt>
   2ac1a:	negs	r3, r6
   2ac1c:	mov	r1, r6
   2ac1e:	str	r3, [r0, #0]
   2ac20:	ldr	r0, [pc, #228]	; (2ad08 <btrfs_fix_device_size@@Base+0x164>)
   2ac22:	add	r0, pc
   2ac24:	bl	17424 <__btrfs_error@@Base>
   2ac28:	ldr	r2, [pc, #224]	; (2ad0c <btrfs_fix_device_size@@Base+0x168>)
   2ac2a:	ldr	r3, [pc, #216]	; (2ad04 <btrfs_fix_device_size@@Base+0x160>)
   2ac2c:	add	r2, pc
   2ac2e:	ldr	r3, [r2, r3]
   2ac30:	ldr	r2, [r3, #0]
   2ac32:	ldr	r3, [sp, #108]	; 0x6c
   2ac34:	eors	r2, r3
   2ac36:	beq.n	2acf8 <btrfs_fix_device_size@@Base+0x154>
   2ac38:	blx	86b8 <__stack_chk_fail@plt>
   2ac3c:	add	r7, sp, #40	; 0x28
   2ac3e:	mov	r0, r7
   2ac40:	bl	17df0 <btrfs_init_path@@Base>
   2ac44:	strd	r4, r8, [sp]
   2ac48:	add	r2, sp, #20
   2ac4a:	mov	r3, r7
   2ac4c:	mov	r1, r9
   2ac4e:	mov	r0, r6
   2ac50:	bl	1a1e4 <btrfs_search_slot@@Base>
   2ac54:	subs	r4, r0, #0
   2ac56:	ble.n	2ac72 <btrfs_fix_device_size@@Base+0xce>
   2ac58:	ldr	r0, [pc, #180]	; (2ad10 <btrfs_fix_device_size@@Base+0x16c>)
   2ac5a:	mvn.w	r4, #1
   2ac5e:	ldrd	r2, r3, [r5, #64]	; 0x40
   2ac62:	add	r0, pc
   2ac64:	bl	17424 <__btrfs_error@@Base>
   2ac68:	mov	r1, r9
   2ac6a:	mov	r0, r6
   2ac6c:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   2ac70:	b.n	2accc <btrfs_fix_device_size@@Base+0x128>
   2ac72:	beq.n	2ac88 <btrfs_fix_device_size@@Base+0xe4>
   2ac74:	blx	8938 <__errno_location@plt>
   2ac78:	negs	r3, r4
   2ac7a:	mov	r1, r4
   2ac7c:	str	r3, [r0, #0]
   2ac7e:	ldr	r0, [pc, #148]	; (2ad14 <btrfs_fix_device_size@@Base+0x170>)
   2ac80:	add	r0, pc
   2ac82:	bl	17424 <__btrfs_error@@Base>
   2ac86:	b.n	2ac68 <btrfs_fix_device_size@@Base+0xc4>
   2ac88:	ldr	r0, [sp, #40]	; 0x28
   2ac8a:	mov.w	ip, #25
   2ac8e:	ldr	r2, [sp, #72]	; 0x48
   2ac90:	add.w	r3, r0, #96	; 0x60
   2ac94:	ldrd	r1, r4, [r5, #72]	; 0x48
   2ac98:	mla	r2, ip, r2, r3
   2ac9c:	ldr.w	r2, [r2, #118]	; 0x76
   2aca0:	add	r3, r2
   2aca2:	str.w	r1, [r3, #109]	; 0x6d
   2aca6:	str.w	r4, [r3, #113]	; 0x71
   2acaa:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2acae:	mov	r1, r9
   2acb0:	mov	r0, r6
   2acb2:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   2acb6:	subs	r4, r0, #0
   2acb8:	bge.n	2acd4 <btrfs_fix_device_size@@Base+0x130>
   2acba:	blx	8938 <__errno_location@plt>
   2acbe:	negs	r3, r4
   2acc0:	mov	r1, r4
   2acc2:	str	r3, [r0, #0]
   2acc4:	ldr	r0, [pc, #80]	; (2ad18 <btrfs_fix_device_size@@Base+0x174>)
   2acc6:	add	r0, pc
   2acc8:	bl	17424 <__btrfs_error@@Base>
   2accc:	mov	r0, r7
   2acce:	bl	17e00 <btrfs_release_path@@Base>
   2acd2:	b.n	2ac28 <btrfs_fix_device_size@@Base+0x84>
   2acd4:	mov	r0, r7
   2acd6:	mov	r4, r8
   2acd8:	bl	17e00 <btrfs_release_path@@Base>
   2acdc:	ldrd	r2, r3, [r5, #72]	; 0x48
   2ace0:	ldr	r1, [pc, #56]	; (2ad1c <btrfs_fix_device_size@@Base+0x178>)
   2ace2:	mov	r0, r8
   2ace4:	strd	sl, fp, [sp]
   2ace8:	strd	r2, r3, [sp, #8]
   2acec:	add	r1, pc
   2acee:	ldrd	r2, r3, [r5, #64]	; 0x40
   2acf2:	blx	89ec <__printf_chk@plt+0x4>
   2acf6:	b.n	2ac28 <btrfs_fix_device_size@@Base+0x84>
   2acf8:	mov	r0, r4
   2acfa:	add	sp, #116	; 0x74
   2acfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad00:	add	r1, pc, #896	; (adr r1, 2b084 <commit_tree_roots@@Base+0xd4>)
   2ad02:	movs	r3, r0
   2ad04:	lsls	r4, r4, #8
   2ad06:	movs	r0, r0
   2ad08:	str	r7, [r5, r7]
   2ad0a:	movs	r1, r0
   2ad0c:	add	r1, pc, #368	; (adr r1, 2ae80 <btrfs_fix_device_and_super_size@@Base+0x7c>)
   2ad0e:	movs	r3, r0
   2ad10:	str	r3, [r2, r7]
   2ad12:	movs	r1, r0
   2ad14:	str	r4, [r3, r7]
   2ad16:	movs	r1, r0
   2ad18:	str	r3, [r7, r6]
   2ad1a:	movs	r1, r0
   2ad1c:	str	r3, [r0, r7]
   2ad1e:	movs	r1, r0

0002ad20 <btrfs_fix_super_size@@Base>:
   2ad20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ad24:	sub	sp, #20
   2ad26:	ldr.w	r3, [r0, #352]	; 0x160
   2ad2a:	mov	r5, r0
   2ad2c:	movs	r6, #0
   2ad2e:	movs	r7, #0
   2ad30:	add.w	lr, r3, #72	; 0x48
   2ad34:	ldr	r3, [r3, #72]	; 0x48
   2ad36:	cmp	r3, lr
   2ad38:	bne.n	2ad76 <btrfs_fix_super_size@@Base+0x56>
   2ad3a:	ldr.w	r3, [r5, #308]	; 0x134
   2ad3e:	ldr.w	r9, [r3, #116]	; 0x74
   2ad42:	ldr.w	r8, [r3, #112]	; 0x70
   2ad46:	cmp	r7, r9
   2ad48:	it	eq
   2ad4a:	cmpeq	r6, r8
   2ad4c:	beq.n	2adf0 <btrfs_fix_super_size@@Base+0xd0>
   2ad4e:	str	r6, [r3, #112]	; 0x70
   2ad50:	movs	r1, #1
   2ad52:	str	r7, [r3, #116]	; 0x74
   2ad54:	ldr	r0, [r5, #28]
   2ad56:	bl	2af24 <btrfs_start_transaction@@Base>
   2ad5a:	cmn.w	r0, #4096	; 0x1000
   2ad5e:	mov	r4, r0
   2ad60:	bls.n	2adc0 <btrfs_fix_super_size@@Base+0xa0>
   2ad62:	blx	8938 <__errno_location@plt>
   2ad66:	negs	r3, r4
   2ad68:	mov	r1, r4
   2ad6a:	str	r3, [r0, #0]
   2ad6c:	ldr	r0, [pc, #132]	; (2adf4 <btrfs_fix_super_size@@Base+0xd4>)
   2ad6e:	add	r0, pc
   2ad70:	bl	17424 <__btrfs_error@@Base>
   2ad74:	b.n	2adae <btrfs_fix_super_size@@Base+0x8e>
   2ad76:	ldr.w	ip, [r5, #388]	; 0x184
   2ad7a:	movs	r4, #0
   2ad7c:	ldrd	r1, r0, [r3, #72]	; 0x48
   2ad80:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2ad84:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2ad88:	and.w	r8, r2, r1
   2ad8c:	and.w	r9, r4, r0
   2ad90:	orrs.w	r2, r8, r9
   2ad94:	beq.n	2adb6 <btrfs_fix_super_size@@Base+0x96>
   2ad96:	strd	r1, r0, [sp]
   2ad9a:	mvn.w	r4, #116	; 0x74
   2ad9e:	ldr	r0, [pc, #88]	; (2adf8 <btrfs_fix_super_size@@Base+0xd8>)
   2ada0:	str.w	ip, [sp, #8]
   2ada4:	add	r0, pc
   2ada6:	ldrd	r2, r3, [r3, #64]	; 0x40
   2adaa:	bl	17424 <__btrfs_error@@Base>
   2adae:	mov	r0, r4
   2adb0:	add	sp, #20
   2adb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2adb6:	adds	r6, r6, r1
   2adb8:	ldr	r3, [r3, #0]
   2adba:	adc.w	r7, r0, r7
   2adbe:	b.n	2ad36 <btrfs_fix_super_size@@Base+0x16>
   2adc0:	ldr	r1, [r5, #28]
   2adc2:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   2adc6:	subs	r4, r0, #0
   2adc8:	bge.n	2adda <btrfs_fix_super_size@@Base+0xba>
   2adca:	blx	8938 <__errno_location@plt>
   2adce:	negs	r3, r4
   2add0:	mov	r1, r4
   2add2:	str	r3, [r0, #0]
   2add4:	ldr	r0, [pc, #36]	; (2adfc <btrfs_fix_super_size@@Base+0xdc>)
   2add6:	add	r0, pc
   2add8:	b.n	2ad70 <btrfs_fix_super_size@@Base+0x50>
   2adda:	ldr	r1, [pc, #36]	; (2ae00 <btrfs_fix_super_size@@Base+0xe0>)
   2addc:	mov	r2, r8
   2adde:	mov	r3, r9
   2ade0:	movs	r0, #1
   2ade2:	add	r1, pc
   2ade4:	strd	r6, r7, [sp]
   2ade8:	blx	89ec <__printf_chk@plt+0x4>
   2adec:	movs	r4, #1
   2adee:	b.n	2adae <btrfs_fix_super_size@@Base+0x8e>
   2adf0:	movs	r4, #0
   2adf2:	b.n	2adae <btrfs_fix_super_size@@Base+0x8e>
   2adf4:	str	r3, [r4, r2]
   2adf6:	movs	r1, r0
   2adf8:	str	r4, [r1, r5]
   2adfa:	movs	r1, r0
   2adfc:	str	r3, [r5, r2]
   2adfe:	movs	r1, r0
   2ae00:	str	r5, [r7, r4]
   2ae02:	movs	r1, r0

0002ae04 <btrfs_fix_device_and_super_size@@Base>:
   2ae04:	push	{r3, r4, r5, r6, r7, lr}
   2ae06:	mov	r5, r0
   2ae08:	ldr.w	r3, [r0, #352]	; 0x160
   2ae0c:	add.w	r7, r3, #72	; 0x48
   2ae10:	ldr	r2, [r3, #92]	; 0x5c
   2ae12:	cbz	r2, 2ae22 <btrfs_fix_device_and_super_size@@Base+0x1e>
   2ae14:	ldr	r0, [pc, #132]	; (2ae9c <btrfs_fix_device_and_super_size@@Base+0x98>)
   2ae16:	add	r0, pc
   2ae18:	bl	17424 <__btrfs_error@@Base>
   2ae1c:	mvn.w	r0, #94	; 0x5e
   2ae20:	pop	{r3, r4, r5, r6, r7, pc}
   2ae22:	ldr	r4, [r3, #72]	; 0x48
   2ae24:	cmp	r7, r4
   2ae26:	bne.n	2ae78 <btrfs_fix_device_and_super_size@@Base+0x74>
   2ae28:	ldr	r0, [pc, #116]	; (2aea0 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2ae2a:	add	r0, pc
   2ae2c:	bl	17424 <__btrfs_error@@Base>
   2ae30:	mvn.w	r0, #18
   2ae34:	b.n	2ae20 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2ae36:	ldr	r2, [r3, #24]
   2ae38:	adds	r2, #1
   2ae3a:	bne.n	2ae4e <btrfs_fix_device_and_super_size@@Base+0x4a>
   2ae3c:	ldr	r0, [pc, #100]	; (2aea4 <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2ae3e:	ldrd	r2, r3, [r3, #64]	; 0x40
   2ae42:	add	r0, pc
   2ae44:	bl	17424 <__btrfs_error@@Base>
   2ae48:	ldr	r0, [pc, #92]	; (2aea8 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2ae4a:	add	r0, pc
   2ae4c:	b.n	2ae2c <btrfs_fix_device_and_super_size@@Base+0x28>
   2ae4e:	ldr	r2, [r3, #28]
   2ae50:	cmp	r2, #0
   2ae52:	beq.n	2ae3c <btrfs_fix_device_and_super_size@@Base+0x38>
   2ae54:	ldr	r3, [r3, #0]
   2ae56:	cmp	r3, r7
   2ae58:	bne.n	2ae36 <btrfs_fix_device_and_super_size@@Base+0x32>
   2ae5a:	movs	r6, #0
   2ae5c:	cmp	r4, r7
   2ae5e:	bne.n	2ae7c <btrfs_fix_device_and_super_size@@Base+0x78>
   2ae60:	mov	r0, r5
   2ae62:	bl	2ad20 <btrfs_fix_super_size@@Base>
   2ae66:	cmp	r0, #0
   2ae68:	bgt.n	2ae6c <btrfs_fix_device_and_super_size@@Base+0x68>
   2ae6a:	cbz	r6, 2ae90 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2ae6c:	ldr	r0, [pc, #60]	; (2aeac <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2ae6e:	add	r0, pc
   2ae70:	blx	8804 <puts@plt+0x4>
   2ae74:	movs	r0, #1
   2ae76:	b.n	2ae20 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2ae78:	mov	r3, r4
   2ae7a:	b.n	2ae56 <btrfs_fix_device_and_super_size@@Base+0x52>
   2ae7c:	mov	r1, r4
   2ae7e:	mov	r0, r5
   2ae80:	bl	2aba4 <btrfs_fix_device_size@@Base>
   2ae84:	cmp	r0, #0
   2ae86:	blt.n	2ae20 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2ae88:	ldr	r4, [r4, #0]
   2ae8a:	it	ne
   2ae8c:	movne	r6, #1
   2ae8e:	b.n	2ae5c <btrfs_fix_device_and_super_size@@Base+0x58>
   2ae90:	ldr	r0, [pc, #28]	; (2aeb0 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2ae92:	add	r0, pc
   2ae94:	blx	8804 <puts@plt+0x4>
   2ae98:	mov	r0, r6
   2ae9a:	b.n	2ae20 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2ae9c:	str	r1, [r0, r5]
   2ae9e:	movs	r1, r0
   2aea0:	str	r6, [r4, r5]
   2aea2:	movs	r1, r0
   2aea4:	str	r6, [r3, r5]
   2aea6:	movs	r1, r0
   2aea8:	str	r5, [r7, r5]
   2aeaa:	movs	r1, r0
   2aeac:	str	r4, [r3, r6]
   2aeae:	movs	r1, r0
   2aeb0:	str	r0, [r0, r7]
   2aeb2:	movs	r1, r0
   2aeb4:	ldr.w	ip, [pc, #80]	; 2af08 <btrfs_fix_device_and_super_size@@Base+0x104>
   2aeb8:	ldr	r4, [pc, #80]	; (2af0c <btrfs_fix_device_and_super_size@@Base+0x108>)
   2aeba:	add	ip, pc
   2aebc:	ldr	r3, [pc, #80]	; (2af10 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2aebe:	push	{lr}
   2aec0:	sub	sp, #92	; 0x5c
   2aec2:	ldr.w	r4, [ip, r4]
   2aec6:	add	r3, pc
   2aec8:	ldr	r4, [r4, #0]
   2aeca:	str	r4, [sp, #84]	; 0x54
   2aecc:	mov.w	r4, #0
   2aed0:	ldr	r4, [pc, #64]	; (2af14 <btrfs_fix_device_and_super_size@@Base+0x110>)
   2aed2:	ldr	r4, [r3, r4]
   2aed4:	ldr	r3, [pc, #64]	; (2af18 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2aed6:	strd	r0, r2, [sp, #8]
   2aeda:	add	r3, pc
   2aedc:	ldr	r2, [pc, #60]	; (2af1c <btrfs_fix_device_and_super_size@@Base+0x118>)
   2aede:	strd	r1, r3, [sp]
   2aee2:	movs	r1, #1
   2aee4:	ldr	r3, [pc, #56]	; (2af20 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2aee6:	add	r2, pc
   2aee8:	ldr	r0, [r4, #0]
   2aeea:	add	r4, sp, #20
   2aeec:	add	r3, pc
   2aeee:	blx	8a14 <__fprintf_chk@plt+0x4>
   2aef2:	movs	r1, #16
   2aef4:	mov	r0, r4
   2aef6:	blx	886c <backtrace@plt>
   2aefa:	movs	r2, #2
   2aefc:	mov	r1, r0
   2aefe:	mov	r0, r4
   2af00:	blx	8b7c <backtrace_symbols_fd@plt>
   2af04:	blx	8b34 <abort@plt>
   2af08:	ldr	r6, [sp, #824]	; 0x338
   2af0a:	movs	r3, r0
   2af0c:	lsls	r4, r4, #8
   2af0e:	movs	r0, r0
   2af10:	ldr	r6, [sp, #776]	; 0x308
   2af12:	movs	r3, r0
   2af14:	lsls	r4, r6, #8
   2af16:	movs	r0, r0
   2af18:	strb	r0, [r5, r4]
   2af1a:	movs	r1, r0
   2af1c:	ldmia.w	ip!, {}
   2af20:	strb	r0, [r4, r0]
   2af22:	movs	r1, r0

0002af24 <btrfs_start_transaction@@Base>:
   2af24:	push	{r3, r4, r5, r6, r7, lr}
   2af26:	mov	r5, r0
   2af28:	ldr.w	r6, [r0, #464]	; 0x1d0
   2af2c:	mov	r7, r1
   2af2e:	movs	r0, #1
   2af30:	movs	r1, #96	; 0x60
   2af32:	blx	8544 <calloc@plt+0x4>
   2af36:	ldr.w	r3, [r6, #368]	; 0x170
   2af3a:	mov	r4, r0
   2af3c:	cbnz	r3, 2af9c <btrfs_start_transaction@@Base+0x78>
   2af3e:	cbz	r0, 2afa2 <btrfs_start_transaction@@Base+0x7e>
   2af40:	ldr	r3, [r5, #4]
   2af42:	cbz	r3, 2af5a <btrfs_start_transaction@@Base+0x36>
   2af44:	ldr	r0, [pc, #96]	; (2afa8 <btrfs_start_transaction@@Base+0x84>)
   2af46:	add	r0, pc
   2af48:	bl	17424 <__btrfs_error@@Base>
   2af4c:	mov	r0, r4
   2af4e:	blx	85dc <free@plt+0x4>
   2af52:	mvn.w	r4, #21
   2af56:	mov	r0, r4
   2af58:	pop	{r3, r4, r5, r6, r7, pc}
   2af5a:	ldr.w	r3, [r6, #304]	; 0x130
   2af5e:	cbz	r3, 2af66 <btrfs_start_transaction@@Base+0x42>
   2af60:	ldr	r0, [pc, #72]	; (2afac <btrfs_start_transaction@@Base+0x88>)
   2af62:	add	r0, pc
   2af64:	b.n	2af48 <btrfs_start_transaction@@Base+0x24>
   2af66:	str	r6, [r0, #0]
   2af68:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2af6c:	str.w	r0, [r6, #304]	; 0x130
   2af70:	adds	r3, #1
   2af72:	adc.w	r2, r2, #0
   2af76:	strd	r3, r2, [r6, #232]	; 0xe8
   2af7a:	strd	r3, r2, [r0, #8]
   2af7e:	ldrh	r1, [r0, #32]
   2af80:	strd	r3, r2, [r5, #480]	; 0x1e0
   2af84:	ldr	r3, [r5, #0]
   2af86:	bic.w	r1, r1, #510	; 0x1fe
   2af8a:	str	r7, [r0, #48]	; 0x30
   2af8c:	bic.w	r1, r1, #1
   2af90:	strh	r1, [r0, #32]
   2af92:	str	r3, [r5, #4]
   2af94:	ldr	r2, [r3, #80]	; 0x50
   2af96:	adds	r2, #1
   2af98:	str	r2, [r3, #80]	; 0x50
   2af9a:	b.n	2af56 <btrfs_start_transaction@@Base+0x32>
   2af9c:	mvn.w	r4, #29
   2afa0:	b.n	2af56 <btrfs_start_transaction@@Base+0x32>
   2afa2:	mvn.w	r4, #11
   2afa6:	b.n	2af56 <btrfs_start_transaction@@Base+0x32>
   2afa8:	strh	r4, [r2, r7]
   2afaa:	movs	r1, r0
   2afac:	strh	r2, [r5, r7]
   2afae:	movs	r1, r0

0002afb0 <commit_tree_roots@@Base>:
   2afb0:	ldr	r2, [pc, #264]	; (2b0bc <commit_tree_roots@@Base+0x10c>)
   2afb2:	ldr	r3, [pc, #268]	; (2b0c0 <commit_tree_roots@@Base+0x110>)
   2afb4:	add	r2, pc
   2afb6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2afba:	sub	sp, #28
   2afbc:	ldr	r3, [r2, r3]
   2afbe:	mov	r6, r0
   2afc0:	mov	r5, r1
   2afc2:	ldr	r3, [r3, #0]
   2afc4:	str	r3, [sp, #20]
   2afc6:	mov.w	r3, #0
   2afca:	ldrb.w	r3, [r1, #364]	; 0x16c
   2afce:	ands.w	r3, r3, #2
   2afd2:	beq.n	2afec <commit_tree_roots@@Base+0x3c>
   2afd4:	mov.w	sl, #0
   2afd8:	ldr	r2, [pc, #232]	; (2b0c4 <commit_tree_roots@@Base+0x114>)
   2afda:	ldr	r3, [pc, #228]	; (2b0c0 <commit_tree_roots@@Base+0x110>)
   2afdc:	add	r2, pc
   2afde:	ldr	r3, [r2, r3]
   2afe0:	ldr	r2, [r3, #0]
   2afe2:	ldr	r3, [sp, #20]
   2afe4:	eors	r2, r3
   2afe6:	beq.n	2b0b4 <commit_tree_roots@@Base+0x104>
   2afe8:	blx	86b8 <__stack_chk_fail@plt>
   2afec:	ldr	r2, [r1, #28]
   2afee:	ldr	r2, [r2, #0]
   2aff0:	ldr	r1, [r2, #80]	; 0x50
   2aff2:	str	r2, [sp, #16]
   2aff4:	adds	r1, #1
   2aff6:	str	r1, [r2, #80]	; 0x50
   2aff8:	add	r1, sp, #16
   2affa:	strd	r3, r1, [sp]
   2affe:	ldr	r1, [r5, #28]
   2b000:	bl	1882c <btrfs_cow_block@@Base>
   2b004:	mov	sl, r0
   2b006:	ldr	r0, [sp, #16]
   2b008:	bl	16bc8 <free_extent_buffer@@Base>
   2b00c:	cmp.w	sl, #0
   2b010:	bne.n	2afd8 <commit_tree_roots@@Base+0x28>
   2b012:	mov.w	r1, #4294967295	; 0xffffffff
   2b016:	mov	r0, r6
   2b018:	bl	22e8c <btrfs_run_delayed_refs@@Base>
   2b01c:	cmp	r0, #0
   2b01e:	bne.n	2b0b0 <commit_tree_roots@@Base+0x100>
   2b020:	add.w	fp, r5, #336	; 0x150
   2b024:	str	r0, [sp, #12]
   2b026:	ldr.w	r4, [r5, #336]	; 0x150
   2b02a:	cmp	r4, fp
   2b02c:	beq.n	2afd4 <commit_tree_roots@@Base+0x24>
   2b02e:	ldrd	r2, r3, [r4]
   2b032:	sub.w	r7, r4, #520	; 0x208
   2b036:	sub.w	r8, r4, #512	; 0x200
   2b03a:	str	r3, [r2, #4]
   2b03c:	str	r2, [r3, #0]
   2b03e:	strd	r4, r4, [r4]
   2b042:	subs	r4, #73	; 0x49
   2b044:	ldr.w	r3, [r7, #464]	; 0x1d0
   2b048:	ldr.w	r9, [r3, #28]
   2b04c:	ldr.w	ip, [r7]
   2b050:	ldr.w	r1, [r8, #180]	; 0xb4
   2b054:	ldr.w	r0, [r8, #176]	; 0xb0
   2b058:	ldrd	r2, r3, [ip, #40]	; 0x28
   2b05c:	cmp	r1, r3
   2b05e:	it	eq
   2b060:	cmpeq	r0, r2
   2b062:	beq.n	2b09a <commit_tree_roots@@Base+0xea>
   2b064:	str.w	r2, [r8, #176]	; 0xb0
   2b068:	mov	r1, r9
   2b06a:	str.w	r3, [r8, #180]	; 0xb4
   2b06e:	mov	r0, r6
   2b070:	ldrd	r3, r2, [r6, #8]
   2b074:	str.w	r2, [r8, #164]	; 0xa4
   2b078:	mov	r2, r4
   2b07a:	str.w	r3, [r8, #160]	; 0xa0
   2b07e:	ldrb.w	r3, [ip, #196]	; 0xc4
   2b082:	strb.w	r3, [r7, #246]	; 0xf6
   2b086:	mov	r3, r8
   2b088:	bl	27a20 <btrfs_update_root@@Base>
   2b08c:	subs.w	sl, r0, #0
   2b090:	blt.n	2b09e <commit_tree_roots@@Base+0xee>
   2b092:	mov	r0, r6
   2b094:	bl	208e4 <btrfs_write_dirty_block_groups@@Base>
   2b098:	b.n	2b04c <commit_tree_roots@@Base+0x9c>
   2b09a:	mov.w	sl, #0
   2b09e:	ldr	r0, [r7, #4]
   2b0a0:	bl	16bc8 <free_extent_buffer@@Base>
   2b0a4:	ldr	r3, [sp, #12]
   2b0a6:	str	r3, [r7, #4]
   2b0a8:	cmp.w	sl, #0
   2b0ac:	beq.n	2b026 <commit_tree_roots@@Base+0x76>
   2b0ae:	b.n	2afd8 <commit_tree_roots@@Base+0x28>
   2b0b0:	mov	sl, r0
   2b0b2:	b.n	2afd8 <commit_tree_roots@@Base+0x28>
   2b0b4:	mov	r0, sl
   2b0b6:	add	sp, #28
   2b0b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b0bc:	ldr	r5, [sp, #848]	; 0x350
   2b0be:	movs	r3, r0
   2b0c0:	lsls	r4, r4, #8
   2b0c2:	movs	r0, r0
   2b0c4:	ldr	r5, [sp, #688]	; 0x2b0
   2b0c6:	movs	r3, r0

0002b0c8 <__commit_transaction@@Base>:
   2b0c8:	ldr	r2, [pc, #196]	; (2b190 <__commit_transaction@@Base+0xc8>)
   2b0ca:	ldr	r3, [pc, #200]	; (2b194 <__commit_transaction@@Base+0xcc>)
   2b0cc:	add	r2, pc
   2b0ce:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2b0d2:	sub	sp, #40	; 0x28
   2b0d4:	ldr	r3, [r2, r3]
   2b0d6:	add.w	fp, sp, #24
   2b0da:	ldr.w	r6, [r1, #464]	; 0x1d0
   2b0de:	add.w	sl, sp, #16
   2b0e2:	ldr	r3, [r3, #0]
   2b0e4:	str	r3, [sp, #36]	; 0x24
   2b0e6:	mov.w	r3, #0
   2b0ea:	mov	r5, r0
   2b0ec:	add.w	r9, r6, #64	; 0x40
   2b0f0:	movs	r7, #1
   2b0f2:	movs	r2, #0
   2b0f4:	movs	r3, #0
   2b0f6:	mov	r0, r9
   2b0f8:	strd	fp, r7, [sp, #4]
   2b0fc:	str.w	sl, [sp]
   2b100:	bl	16ac0 <find_first_extent_bit@@Base>
   2b104:	cbz	r0, 2b142 <__commit_transaction@@Base+0x7a>
   2b106:	ldr	r2, [pc, #144]	; (2b198 <__commit_transaction@@Base+0xd0>)
   2b108:	ldr	r3, [pc, #136]	; (2b194 <__commit_transaction@@Base+0xcc>)
   2b10a:	add	r2, pc
   2b10c:	ldr	r3, [r2, r3]
   2b10e:	ldr	r2, [r3, #0]
   2b110:	ldr	r3, [sp, #36]	; 0x24
   2b112:	eors	r2, r3
   2b114:	beq.n	2b186 <__commit_transaction@@Base+0xbe>
   2b116:	blx	86b8 <__stack_chk_fail@plt>
   2b11a:	ldr	r0, [pc, #128]	; (2b19c <__commit_transaction@@Base+0xd4>)
   2b11c:	movs	r2, #1
   2b11e:	movs	r1, #145	; 0x91
   2b120:	add	r0, pc
   2b122:	bl	2aeb4 <btrfs_fix_device_and_super_size@@Base+0xb0>
   2b126:	ldrd	r2, r3, [sp, #16]
   2b12a:	mov	r0, r4
   2b12c:	ldr	r1, [r4, #76]	; 0x4c
   2b12e:	adds	r2, r2, r1
   2b130:	adc.w	r3, r3, #0
   2b134:	strd	r2, r3, [sp, #16]
   2b138:	bl	17276 <clear_extent_buffer_dirty@@Base>
   2b13c:	mov	r0, r4
   2b13e:	bl	16bc8 <free_extent_buffer@@Base>
   2b142:	ldrd	r2, r3, [sp, #16]
   2b146:	ldrd	r0, r1, [sp, #24]
   2b14a:	cmp	r1, r3
   2b14c:	it	eq
   2b14e:	cmpeq	r0, r2
   2b150:	bcc.n	2b0f2 <__commit_transaction@@Base+0x2a>
   2b152:	mov	r0, r9
   2b154:	bl	16c9a <find_first_extent_buffer@@Base>
   2b158:	mov	r4, r0
   2b15a:	cmp	r0, #0
   2b15c:	beq.n	2b11a <__commit_transaction@@Base+0x52>
   2b15e:	ldrd	r0, r1, [r0, #40]	; 0x28
   2b162:	ldrd	r2, r3, [sp, #16]
   2b166:	cmp	r1, r3
   2b168:	it	eq
   2b16a:	cmpeq	r0, r2
   2b16c:	bne.n	2b11a <__commit_transaction@@Base+0x52>
   2b16e:	mov	r2, r4
   2b170:	mov	r1, r6
   2b172:	mov	r0, r5
   2b174:	bl	1d584 <write_tree_block@@Base>
   2b178:	mov	r2, r0
   2b17a:	cmp	r0, #0
   2b17c:	beq.n	2b126 <__commit_transaction@@Base+0x5e>
   2b17e:	ldr	r0, [pc, #32]	; (2b1a0 <__commit_transaction@@Base+0xd8>)
   2b180:	movs	r1, #147	; 0x93
   2b182:	add	r0, pc
   2b184:	b.n	2b122 <__commit_transaction@@Base+0x5a>
   2b186:	movs	r0, #0
   2b188:	add	sp, #40	; 0x28
   2b18a:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2b18e:	nop
   2b190:	ldr	r4, [sp, #752]	; 0x2f0
   2b192:	movs	r3, r0
   2b194:	lsls	r4, r4, #8
   2b196:	movs	r0, r0
   2b198:	ldr	r4, [sp, #504]	; 0x1f8
   2b19a:	movs	r3, r0
   2b19c:	strh	r2, [r4, r1]
   2b19e:	movs	r1, r0
   2b1a0:	stcl	0, cr0, [r2], #-0

0002b1a4 <btrfs_commit_transaction@@Base>:
   2b1a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b1a8:	mov	r6, r0
   2b1aa:	ldr	r3, [r0, #0]
   2b1ac:	sub	sp, #20
   2b1ae:	ldrd	r8, r9, [r0, #8]
   2b1b2:	mov	r5, r1
   2b1b4:	ldr.w	r7, [r1, #464]	; 0x1d0
   2b1b8:	ldr.w	sl, [r3, #368]	; 0x170
   2b1bc:	cmp.w	sl, #0
   2b1c0:	bne.w	2b30e <btrfs_commit_transaction@@Base+0x16a>
   2b1c4:	mov.w	r1, #4294967295	; 0xffffffff
   2b1c8:	bl	22e8c <btrfs_run_delayed_refs@@Base>
   2b1cc:	subs	r4, r0, #0
   2b1ce:	blt.n	2b27e <btrfs_commit_transaction@@Base+0xda>
   2b1d0:	ldrd	r3, r0, [r5]
   2b1d4:	cmp	r0, r3
   2b1d6:	bne.n	2b22c <btrfs_commit_transaction@@Base+0x88>
   2b1d8:	mov	r1, r7
   2b1da:	mov	r0, r6
   2b1dc:	bl	2afb0 <commit_tree_roots@@Base>
   2b1e0:	subs	r4, r0, #0
   2b1e2:	blt.n	2b27e <btrfs_commit_transaction@@Base+0xda>
   2b1e4:	add.w	sl, r7, #128	; 0x80
   2b1e8:	mov.w	fp, #1
   2b1ec:	ldr	r3, [r6, #64]	; 0x40
   2b1ee:	cmp	r3, #0
   2b1f0:	bne.n	2b28c <btrfs_commit_transaction@@Base+0xe8>
   2b1f2:	mov.w	r2, #4294967295	; 0xffffffff
   2b1f6:	strd	fp, r3, [sp, #8]
   2b1fa:	mov	r0, sl
   2b1fc:	mov.w	r3, #4294967295	; 0xffffffff
   2b200:	strd	r2, r3, [sp]
   2b204:	movs	r2, #0
   2b206:	movs	r3, #0
   2b208:	bl	16b02 <test_range_bit@@Base>
   2b20c:	cmp	r0, #0
   2b20e:	bne.n	2b28c <btrfs_commit_transaction@@Base+0xe8>
   2b210:	mov	r1, r5
   2b212:	mov	r0, r6
   2b214:	bl	2b0c8 <__commit_transaction@@Base>
   2b218:	ldr.w	sl, [r6, #64]	; 0x40
   2b21c:	cmp.w	sl, #0
   2b220:	beq.n	2b2a6 <btrfs_commit_transaction@@Base+0x102>
   2b222:	ldr	r0, [pc, #240]	; (2b314 <btrfs_commit_transaction@@Base+0x170>)
   2b224:	add	r0, pc
   2b226:	bl	17424 <__btrfs_error@@Base>
   2b22a:	b.n	2b27e <btrfs_commit_transaction@@Base+0xda>
   2b22c:	ldr.w	r3, [r5, #464]	; 0x1d0
   2b230:	ldr	r2, [r3, #28]
   2b232:	cmp	r2, r5
   2b234:	beq.n	2b1d8 <btrfs_commit_transaction@@Base+0x34>
   2b236:	ldr	r3, [r3, #32]
   2b238:	cmp	r3, r5
   2b23a:	beq.n	2b1d8 <btrfs_commit_transaction@@Base+0x34>
   2b23c:	bl	16bc8 <free_extent_buffer@@Base>
   2b240:	ldr	r3, [r5, #0]
   2b242:	str.w	sl, [r5, #4]
   2b246:	mov	r0, r6
   2b248:	ldrd	r1, r2, [r3, #40]	; 0x28
   2b24c:	str.w	r1, [r5, #184]	; 0xb8
   2b250:	str.w	r2, [r5, #188]	; 0xbc
   2b254:	ldrd	r1, r2, [r6, #8]
   2b258:	str.w	r1, [r5, #168]	; 0xa8
   2b25c:	str.w	r2, [r5, #172]	; 0xac
   2b260:	addw	r2, r5, #447	; 0x1bf
   2b264:	ldrb.w	r3, [r3, #196]	; 0xc4
   2b268:	ldr.w	r1, [r5, #464]	; 0x1d0
   2b26c:	strb.w	r3, [r5, #246]	; 0xf6
   2b270:	add.w	r3, r5, #8
   2b274:	ldr	r1, [r1, #28]
   2b276:	bl	27a20 <btrfs_update_root@@Base>
   2b27a:	subs	r4, r0, #0
   2b27c:	bge.n	2b1d8 <btrfs_commit_transaction@@Base+0x34>
   2b27e:	mov	r0, r6
   2b280:	bl	2428c <btrfs_destroy_delayed_refs@@Base>
   2b284:	mov	r0, r6
   2b286:	blx	85dc <free@plt+0x4>
   2b28a:	b.n	2b2e0 <btrfs_commit_transaction@@Base+0x13c>
   2b28c:	mov	r0, r6
   2b28e:	bl	208e4 <btrfs_write_dirty_block_groups@@Base>
   2b292:	subs	r4, r0, #0
   2b294:	blt.n	2b27e <btrfs_commit_transaction@@Base+0xda>
   2b296:	mov.w	r1, #4294967295	; 0xffffffff
   2b29a:	mov	r0, r6
   2b29c:	bl	22e8c <btrfs_run_delayed_refs@@Base>
   2b2a0:	subs	r4, r0, #0
   2b2a2:	bge.n	2b1ec <btrfs_commit_transaction@@Base+0x48>
   2b2a4:	b.n	2b27e <btrfs_commit_transaction@@Base+0xda>
   2b2a6:	mov	r0, r6
   2b2a8:	add.w	r7, r7, #356	; 0x164
   2b2ac:	bl	1d294 <write_ctree_super@@Base>
   2b2b0:	mov	r4, r0
   2b2b2:	mov	r0, r6
   2b2b4:	bl	20b30 <btrfs_finish_extent_commit@@Base>
   2b2b8:	mov	r0, r6
   2b2ba:	blx	85dc <free@plt+0x4>
   2b2be:	ldr	r0, [r5, #4]
   2b2c0:	bl	16bc8 <free_extent_buffer@@Base>
   2b2c4:	str.w	sl, [r5, #4]
   2b2c8:	ldr	r5, [r7, #0]
   2b2ca:	ldr	r6, [pc, #76]	; (2b318 <btrfs_commit_transaction@@Base+0x174>)
   2b2cc:	subs	r5, #44	; 0x2c
   2b2ce:	str.w	sl, [r7, #-52]
   2b2d2:	add	r6, pc
   2b2d4:	strd	r8, r9, [r7, #-116]	; 0x74
   2b2d8:	add.w	r3, r5, #44	; 0x2c
   2b2dc:	cmp	r3, r7
   2b2de:	bne.n	2b2e8 <btrfs_commit_transaction@@Base+0x144>
   2b2e0:	mov	r0, r4
   2b2e2:	add	sp, #20
   2b2e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2e8:	ldrd	r2, r3, [r5, #32]
   2b2ec:	orrs.w	r1, r2, r3
   2b2f0:	beq.n	2b308 <btrfs_commit_transaction@@Base+0x164>
   2b2f2:	strd	r2, r3, [sp, #8]
   2b2f6:	mov	r0, r6
   2b2f8:	ldrd	r2, r3, [r5]
   2b2fc:	strd	r2, r3, [sp]
   2b300:	mov	r2, r8
   2b302:	mov	r3, r9
   2b304:	bl	173a8 <__btrfs_warning@@Base>
   2b308:	ldr	r5, [r5, #44]	; 0x2c
   2b30a:	subs	r5, #44	; 0x2c
   2b30c:	b.n	2b2d8 <btrfs_commit_transaction@@Base+0x134>
   2b30e:	mvn.w	r4, #29
   2b312:	b.n	2b2e0 <btrfs_commit_transaction@@Base+0x13c>
   2b314:	str	r0, [r7, r5]
   2b316:	movs	r1, r0
   2b318:	str	r4, [r5, r3]
   2b31a:	movs	r1, r0

0002b31c <btrfs_abort_transaction@@Base>:
   2b31c:	ldr	r3, [r0, #0]
   2b31e:	str.w	r1, [r3, #368]	; 0x170
   2b322:	bx	lr
   2b324:	push	{r4, lr}
   2b326:	mov	r4, r1
   2b328:	ldr	r1, [pc, #84]	; (2b380 <btrfs_abort_transaction@@Base+0x64>)
   2b32a:	sub	sp, #24
   2b32c:	ldr	r3, [pc, #84]	; (2b384 <btrfs_abort_transaction@@Base+0x68>)
   2b32e:	add	r1, pc
   2b330:	ldr	r3, [r1, r3]
   2b332:	mov	r1, sp
   2b334:	ldr	r3, [r3, #0]
   2b336:	str	r3, [sp, #20]
   2b338:	mov.w	r3, #0
   2b33c:	movs	r3, #25
   2b33e:	muls	r2, r3
   2b340:	movs	r3, #17
   2b342:	adds	r2, #101	; 0x65
   2b344:	bl	172c2 <read_extent_buffer@@Base>
   2b348:	ldr.w	r3, [sp, #13]
   2b34c:	ldr.w	r2, [sp, #9]
   2b350:	str.w	r3, [r4, #13]
   2b354:	ldrb.w	r3, [sp, #8]
   2b358:	str.w	r2, [r4, #9]
   2b35c:	ldr	r2, [pc, #40]	; (2b388 <btrfs_abort_transaction@@Base+0x6c>)
   2b35e:	strb	r3, [r4, #8]
   2b360:	ldr	r3, [sp, #0]
   2b362:	add	r2, pc
   2b364:	str	r3, [r4, #0]
   2b366:	ldr	r3, [sp, #4]
   2b368:	str	r3, [r4, #4]
   2b36a:	ldr	r3, [pc, #24]	; (2b384 <btrfs_abort_transaction@@Base+0x68>)
   2b36c:	ldr	r3, [r2, r3]
   2b36e:	ldr	r2, [r3, #0]
   2b370:	ldr	r3, [sp, #20]
   2b372:	eors	r2, r3
   2b374:	beq.n	2b37a <btrfs_abort_transaction@@Base+0x5e>
   2b376:	blx	86b8 <__stack_chk_fail@plt>
   2b37a:	add	sp, #24
   2b37c:	pop	{r4, pc}
   2b37e:	nop
   2b380:	ldr	r2, [sp, #360]	; 0x168
   2b382:	movs	r3, r0
   2b384:	lsls	r4, r4, #8
   2b386:	movs	r0, r0
   2b388:	ldr	r2, [sp, #152]	; 0x98
   2b38a:	movs	r3, r0
   2b38c:	push	{r4, r5, r6, r7, lr}
   2b38e:	sub	sp, #36	; 0x24
   2b390:	ldr	r6, [pc, #112]	; (2b404 <btrfs_abort_transaction@@Base+0xe8>)
   2b392:	mov	r4, r3
   2b394:	ldr	r5, [pc, #112]	; (2b408 <btrfs_abort_transaction@@Base+0xec>)
   2b396:	add	r6, pc
   2b398:	ldr	r5, [r6, r5]
   2b39a:	ldrd	r6, r7, [r2, #40]	; 0x28
   2b39e:	ldr	r5, [r5, #0]
   2b3a0:	str	r5, [sp, #28]
   2b3a2:	mov.w	r5, #0
   2b3a6:	movs	r5, #198	; 0xc6
   2b3a8:	strb.w	r5, [sp, #16]
   2b3ac:	strd	r6, r7, [sp, #8]
   2b3b0:	ldr.w	r5, [r2, #49]	; 0x31
   2b3b4:	ldr.w	r2, [r2, #53]	; 0x35
   2b3b8:	str.w	r5, [sp, #17]
   2b3bc:	str.w	r2, [sp, #21]
   2b3c0:	ldr	r2, [sp, #56]	; 0x38
   2b3c2:	str	r2, [sp, #4]
   2b3c4:	movs	r2, #0
   2b3c6:	str	r2, [sp, #0]
   2b3c8:	add	r2, sp, #8
   2b3ca:	bl	1a1e4 <btrfs_search_slot@@Base>
   2b3ce:	cmp	r0, #0
   2b3d0:	blt.n	2b3ea <btrfs_abort_transaction@@Base+0xce>
   2b3d2:	ittte	eq
   2b3d4:	ldreq	r3, [r4, #32]
   2b3d6:	moveq	r1, #25
   2b3d8:	ldreq	r2, [r4, #0]
   2b3da:	mvnne.w	r0, #1
   2b3de:	ittt	eq
   2b3e0:	mlaeq	r3, r1, r3, r2
   2b3e4:	ldreq.w	r0, [r3, #214]	; 0xd6
   2b3e8:	addeq	r0, #101	; 0x65
   2b3ea:	ldr	r2, [pc, #32]	; (2b40c <btrfs_abort_transaction@@Base+0xf0>)
   2b3ec:	ldr	r3, [pc, #24]	; (2b408 <btrfs_abort_transaction@@Base+0xec>)
   2b3ee:	add	r2, pc
   2b3f0:	ldr	r3, [r2, r3]
   2b3f2:	ldr	r2, [r3, #0]
   2b3f4:	ldr	r3, [sp, #28]
   2b3f6:	eors	r2, r3
   2b3f8:	beq.n	2b3fe <btrfs_abort_transaction@@Base+0xe2>
   2b3fa:	blx	86b8 <__stack_chk_fail@plt>
   2b3fe:	add	sp, #36	; 0x24
   2b400:	pop	{r4, r5, r6, r7, pc}
   2b402:	nop
   2b404:	ldr	r1, [sp, #968]	; 0x3c8
   2b406:	movs	r3, r0
   2b408:	lsls	r4, r4, #8
   2b40a:	movs	r0, r0
   2b40c:	ldr	r1, [sp, #616]	; 0x268
   2b40e:	movs	r3, r0
   2b410:	push	{r4}
   2b412:	ldr	r4, [r1, #0]
   2b414:	ldr	r2, [r1, #32]
   2b416:	adds	r2, #1
   2b418:	str	r2, [r1, #32]
   2b41a:	ldr.w	r4, [r4, #192]	; 0xc0
   2b41e:	cmp	r2, r4
   2b420:	bcc.n	2b434 <btrfs_abort_transaction@@Base+0x118>
   2b422:	movs	r2, #0
   2b424:	ldr.w	r4, [sp], #4
   2b428:	strb.w	r2, [r1, #65]	; 0x41
   2b42c:	ldr.w	r0, [r0, #464]	; 0x1d0
   2b430:	b.w	1b618 <btrfs_next_sibling_tree_block@@Base>
   2b434:	movs	r0, #0
   2b436:	ldr.w	r4, [sp], #4
   2b43a:	bx	lr
   2b43c:	push	{r4, r5, r6, lr}
   2b43e:	lsrs	r4, r2, #5
   2b440:	and.w	r6, r2, #31
   2b444:	bic.w	r2, r2, #31
   2b448:	ldr.w	r5, [r0, r4, lsl #2]
   2b44c:	mov.w	r4, #4294967295	; 0xffffffff
   2b450:	lsls	r4, r6
   2b452:	eors	r5, r3
   2b454:	ands	r4, r5
   2b456:	cbz	r4, 2b48c <btrfs_abort_transaction@@Base+0x170>
   2b458:	uxth	r3, r4
   2b45a:	cbnz	r3, 2b49c <btrfs_abort_transaction@@Base+0x180>
   2b45c:	lsrs	r4, r4, #16
   2b45e:	movs	r3, #16
   2b460:	tst.w	r4, #255	; 0xff
   2b464:	itt	eq
   2b466:	lsreq	r4, r4, #8
   2b468:	addeq	r3, #8
   2b46a:	lsls	r6, r4, #28
   2b46c:	itt	eq
   2b46e:	lsreq	r4, r4, #4
   2b470:	addeq	r3, #4
   2b472:	lsls	r5, r4, #30
   2b474:	itt	eq
   2b476:	lsreq	r4, r4, #2
   2b478:	addeq	r3, #2
   2b47a:	lsls	r0, r4, #31
   2b47c:	it	pl
   2b47e:	addpl	r3, #1
   2b480:	add	r3, r2
   2b482:	cmp	r1, r3
   2b484:	it	cs
   2b486:	movcs	r1, r3
   2b488:	mov	r0, r1
   2b48a:	pop	{r4, r5, r6, pc}
   2b48c:	adds	r2, #32
   2b48e:	cmp	r2, r1
   2b490:	bcs.n	2b488 <btrfs_abort_transaction@@Base+0x16c>
   2b492:	lsrs	r4, r2, #5
   2b494:	ldr.w	r4, [r0, r4, lsl #2]
   2b498:	eors	r4, r3
   2b49a:	b.n	2b456 <btrfs_abort_transaction@@Base+0x13a>
   2b49c:	movs	r3, #0
   2b49e:	b.n	2b460 <btrfs_abort_transaction@@Base+0x144>
   2b4a0:	ldr.w	ip, [pc, #80]	; 2b4f4 <btrfs_abort_transaction@@Base+0x1d8>
   2b4a4:	ldr	r4, [pc, #80]	; (2b4f8 <btrfs_abort_transaction@@Base+0x1dc>)
   2b4a6:	add	ip, pc
   2b4a8:	ldr	r3, [pc, #80]	; (2b4fc <btrfs_abort_transaction@@Base+0x1e0>)
   2b4aa:	push	{lr}
   2b4ac:	sub	sp, #92	; 0x5c
   2b4ae:	ldr.w	r4, [ip, r4]
   2b4b2:	add	r3, pc
   2b4b4:	ldr	r4, [r4, #0]
   2b4b6:	str	r4, [sp, #84]	; 0x54
   2b4b8:	mov.w	r4, #0
   2b4bc:	ldr	r4, [pc, #64]	; (2b500 <btrfs_abort_transaction@@Base+0x1e4>)
   2b4be:	ldr	r4, [r3, r4]
   2b4c0:	movs	r3, #0
   2b4c2:	strd	r2, r1, [sp]
   2b4c6:	movs	r1, #1
   2b4c8:	strd	r0, r3, [sp, #8]
   2b4cc:	ldr	r2, [pc, #52]	; (2b504 <btrfs_abort_transaction@@Base+0x1e8>)
   2b4ce:	ldr	r3, [pc, #56]	; (2b508 <btrfs_abort_transaction@@Base+0x1ec>)
   2b4d0:	ldr	r0, [r4, #0]
   2b4d2:	add	r4, sp, #20
   2b4d4:	add	r3, pc
   2b4d6:	add	r2, pc
   2b4d8:	blx	8a14 <__fprintf_chk@plt+0x4>
   2b4dc:	movs	r1, #16
   2b4de:	mov	r0, r4
   2b4e0:	blx	886c <backtrace@plt>
   2b4e4:	movs	r2, #2
   2b4e6:	mov	r1, r0
   2b4e8:	mov	r0, r4
   2b4ea:	blx	8b7c <backtrace_symbols_fd@plt>
   2b4ee:	blx	8b34 <abort@plt>
   2b4f2:	nop
   2b4f4:	ldr	r0, [sp, #904]	; 0x388
   2b4f6:	movs	r3, r0
   2b4f8:	lsls	r4, r4, #8
   2b4fa:	movs	r0, r0
   2b4fc:	ldr	r0, [sp, #856]	; 0x358
   2b4fe:	movs	r3, r0
   2b500:	lsls	r4, r6, #8
   2b502:	movs	r0, r0
   2b504:	b.n	2bcfa <btrfs_abort_transaction@@Base+0x9de>
   2b506:	movs	r0, r0
   2b508:	ldr	r7, [pc, #268]	; (2b618 <btrfs_abort_transaction@@Base+0x2fc>)
   2b50a:	movs	r1, r0
   2b50c:	push	{r3, lr}
   2b50e:	cbnz	r3, 2b514 <btrfs_abort_transaction@@Base+0x1f8>
   2b510:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2b514:	pop	{r3, pc}
   2b516:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b51a:	mov	r6, r2
   2b51c:	ldr	r2, [pc, #192]	; (2b5e0 <btrfs_abort_transaction@@Base+0x2c4>)
   2b51e:	mov	r7, r3
   2b520:	ldr	r3, [pc, #192]	; (2b5e4 <btrfs_abort_transaction@@Base+0x2c8>)
   2b522:	sub	sp, #28
   2b524:	add	r2, pc
   2b526:	ldr.w	fp, [r0]
   2b52a:	mov	r1, sp
   2b52c:	mov	sl, r0
   2b52e:	ldr	r3, [r2, r3]
   2b530:	ldr	r2, [r0, #32]
   2b532:	mov	r0, fp
   2b534:	ldr	r3, [r3, #0]
   2b536:	str	r3, [sp, #20]
   2b538:	mov.w	r3, #0
   2b53c:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2b540:	ldrb.w	r3, [sp, #8]
   2b544:	ldr	r1, [pc, #160]	; (2b5e8 <btrfs_abort_transaction@@Base+0x2cc>)
   2b546:	sub.w	r2, r3, #200	; 0xc8
   2b54a:	ldr	r0, [pc, #160]	; (2b5ec <btrfs_abort_transaction@@Base+0x2d0>)
   2b54c:	negs	r3, r2
   2b54e:	add	r1, pc
   2b550:	adcs	r3, r2
   2b552:	add	r0, pc
   2b554:	movs	r2, #62	; 0x3e
   2b556:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b55a:	ldrd	r4, r5, [sp]
   2b55e:	ldr.w	r3, [sp, #9]
   2b562:	cmp	r7, r5
   2b564:	ldr.w	r2, [sp, #13]
   2b568:	it	eq
   2b56a:	cmpeq	r6, r4
   2b56c:	bcc.n	2b5d6 <btrfs_abort_transaction@@Base+0x2ba>
   2b56e:	adds.w	r8, r4, r3
   2b572:	adc.w	r9, r5, r2
   2b576:	cmp	r7, r9
   2b578:	it	eq
   2b57a:	cmpeq	r6, r8
   2b57c:	ite	cc
   2b57e:	movcc	r3, #1
   2b580:	movcs	r3, #0
   2b582:	ldr	r1, [pc, #108]	; (2b5f0 <btrfs_abort_transaction@@Base+0x2d4>)
   2b584:	movs	r2, #66	; 0x42
   2b586:	ldr	r0, [pc, #108]	; (2b5f4 <btrfs_abort_transaction@@Base+0x2d8>)
   2b588:	add	r1, pc
   2b58a:	add	r0, pc
   2b58c:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b590:	ldr.w	r3, [fp, #92]	; 0x5c
   2b594:	subs	r0, r6, r4
   2b596:	sbc.w	r1, r7, r5
   2b59a:	ldr.w	r2, [r3, #388]	; 0x184
   2b59e:	movs	r3, #0
   2b5a0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2b5a4:	ldr.w	r3, [sl, #32]
   2b5a8:	movs	r1, #25
   2b5aa:	mla	r3, r1, r3, fp
   2b5ae:	ldr.w	r1, [r3, #214]	; 0xd6
   2b5b2:	adds	r1, #101	; 0x65
   2b5b4:	mov	r2, r0
   2b5b6:	mov	r0, fp
   2b5b8:	bl	1735c <extent_buffer_test_bit@@Base>
   2b5bc:	ldr	r2, [pc, #56]	; (2b5f8 <btrfs_abort_transaction@@Base+0x2dc>)
   2b5be:	ldr	r3, [pc, #36]	; (2b5e4 <btrfs_abort_transaction@@Base+0x2c8>)
   2b5c0:	add	r2, pc
   2b5c2:	ldr	r3, [r2, r3]
   2b5c4:	subs	r0, #0
   2b5c6:	it	ne
   2b5c8:	movne	r0, #1
   2b5ca:	ldr	r2, [r3, #0]
   2b5cc:	ldr	r3, [sp, #20]
   2b5ce:	eors	r2, r3
   2b5d0:	beq.n	2b5da <btrfs_abort_transaction@@Base+0x2be>
   2b5d2:	blx	86b8 <__stack_chk_fail@plt>
   2b5d6:	movs	r3, #0
   2b5d8:	b.n	2b582 <btrfs_abort_transaction@@Base+0x266>
   2b5da:	add	sp, #28
   2b5dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5e0:	ldr	r0, [sp, #400]	; 0x190
   2b5e2:	movs	r3, r0
   2b5e4:	lsls	r4, r4, #8
   2b5e6:	movs	r0, r0
   2b5e8:	strh	r5, [r4, r6]
   2b5ea:	movs	r1, r0
   2b5ec:	ldr	r6, [pc, #860]	; (2b94c <btrfs_abort_transaction@@Base+0x630>)
   2b5ee:	movs	r1, r0
   2b5f0:	strh	r3, [r5, r5]
   2b5f2:	movs	r1, r0
   2b5f4:	ldr	r6, [pc, #796]	; (2b914 <btrfs_abort_transaction@@Base+0x5f8>)
   2b5f6:	movs	r1, r0
   2b5f8:	str	r7, [sp, #800]	; 0x320
   2b5fa:	movs	r3, r0
   2b5fc:	push	{r0, r1, r2, r4, r5, lr}
   2b5fe:	movs	r5, #1
   2b600:	str	r5, [sp, #4]
   2b602:	mov	r4, r3
   2b604:	ldr	r5, [sp, #24]
   2b606:	str	r5, [sp, #0]
   2b608:	bl	1a1e4 <btrfs_search_slot@@Base>
   2b60c:	cmp	r0, #0
   2b60e:	blt.n	2b63a <btrfs_abort_transaction@@Base+0x31e>
   2b610:	bne.n	2b622 <btrfs_abort_transaction@@Base+0x306>
   2b612:	ldr	r1, [pc, #44]	; (2b640 <btrfs_abort_transaction@@Base+0x324>)
   2b614:	movs	r2, #89	; 0x59
   2b616:	ldr	r0, [pc, #44]	; (2b644 <btrfs_abort_transaction@@Base+0x328>)
   2b618:	add	r1, pc
   2b61a:	adds	r1, #20
   2b61c:	add	r0, pc
   2b61e:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2b622:	ldr	r3, [r4, #32]
   2b624:	cbnz	r3, 2b634 <btrfs_abort_transaction@@Base+0x318>
   2b626:	ldr	r1, [pc, #32]	; (2b648 <btrfs_abort_transaction@@Base+0x32c>)
   2b628:	movs	r2, #94	; 0x5e
   2b62a:	ldr	r0, [pc, #32]	; (2b64c <btrfs_abort_transaction@@Base+0x330>)
   2b62c:	add	r1, pc
   2b62e:	adds	r1, #20
   2b630:	add	r0, pc
   2b632:	b.n	2b61e <btrfs_abort_transaction@@Base+0x302>
   2b634:	movs	r0, #0
   2b636:	subs	r3, #1
   2b638:	str	r3, [r4, #32]
   2b63a:	add	sp, #12
   2b63c:	pop	{r4, r5, pc}
   2b63e:	nop
   2b640:	strh	r3, [r3, r3]
   2b642:	movs	r1, r0
   2b644:	lsrs	r6, r4, #25
   2b646:	movs	r1, r0
   2b648:	strh	r7, [r0, r3]
   2b64a:	movs	r1, r0
   2b64c:	lsrs	r2, r2, #25
   2b64e:	movs	r1, r0
   2b650:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2b654:	mov	r6, r2
   2b656:	ldr	r2, [pc, #156]	; (2b6f4 <btrfs_abort_transaction@@Base+0x3d8>)
   2b658:	sub	sp, #36	; 0x24
   2b65a:	ldr	r3, [pc, #156]	; (2b6f8 <btrfs_abort_transaction@@Base+0x3dc>)
   2b65c:	mov	r8, r0
   2b65e:	add	r2, pc
   2b660:	ldr	r0, [r6, #0]
   2b662:	mov	r9, r1
   2b664:	ldr	r3, [r2, r3]
   2b666:	ldr	r2, [r6, #32]
   2b668:	ldr	r3, [r3, #0]
   2b66a:	str	r3, [sp, #28]
   2b66c:	mov.w	r3, #0
   2b670:	adds	r3, r2, #1
   2b672:	ldr.w	r1, [r0, #192]	; 0xc0
   2b676:	cmp	r3, r1
   2b678:	bcs.n	2b692 <btrfs_abort_transaction@@Base+0x376>
   2b67a:	movs	r0, #0
   2b67c:	str	r3, [r6, #32]
   2b67e:	ldr	r2, [pc, #124]	; (2b6fc <btrfs_abort_transaction@@Base+0x3e0>)
   2b680:	ldr	r3, [pc, #116]	; (2b6f8 <btrfs_abort_transaction@@Base+0x3dc>)
   2b682:	add	r2, pc
   2b684:	ldr	r3, [r2, r3]
   2b686:	ldr	r2, [r3, #0]
   2b688:	ldr	r3, [sp, #28]
   2b68a:	eors	r2, r3
   2b68c:	beq.n	2b6ee <btrfs_abort_transaction@@Base+0x3d2>
   2b68e:	blx	86b8 <__stack_chk_fail@plt>
   2b692:	add	r7, sp, #8
   2b694:	movs	r5, #255	; 0xff
   2b696:	mov	r1, r7
   2b698:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2b69c:	mov	r0, r6
   2b69e:	bl	17e00 <btrfs_release_path@@Base>
   2b6a2:	ldr.w	r1, [sp, #17]
   2b6a6:	ldr	r3, [sp, #8]
   2b6a8:	ldr.w	r0, [sp, #21]
   2b6ac:	ldr	r2, [sp, #12]
   2b6ae:	adds	r3, r3, r1
   2b6b0:	mov	r1, r9
   2b6b2:	strb.w	r5, [sp, #16]
   2b6b6:	adc.w	r2, r0, r2
   2b6ba:	mov	r0, r8
   2b6bc:	strd	r3, r2, [sp, #8]
   2b6c0:	movs	r3, #0
   2b6c2:	mov	r2, r7
   2b6c4:	str	r3, [sp, #0]
   2b6c6:	mov	r3, r6
   2b6c8:	strb.w	r5, [sp, #17]
   2b6cc:	strb.w	r5, [sp, #18]
   2b6d0:	strb.w	r5, [sp, #19]
   2b6d4:	strb.w	r5, [sp, #20]
   2b6d8:	strb.w	r5, [sp, #21]
   2b6dc:	strb.w	r5, [sp, #22]
   2b6e0:	strb.w	r5, [sp, #23]
   2b6e4:	strb.w	r5, [sp, #24]
   2b6e8:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2b6ec:	b.n	2b67e <btrfs_abort_transaction@@Base+0x362>
   2b6ee:	add	sp, #36	; 0x24
   2b6f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2b6f4:	str	r7, [sp, #168]	; 0xa8
   2b6f6:	movs	r3, r0
   2b6f8:	lsls	r4, r4, #8
   2b6fa:	movs	r0, r0
   2b6fc:	str	r7, [sp, #24]
   2b6fe:	movs	r3, r0
   2b700:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b704:	mov	r7, r3
   2b706:	vpush	{d8-d9}
   2b70a:	mov	r4, r2
   2b70c:	ldr.w	r3, [pc, #2080]	; 2bf30 <btrfs_abort_transaction@@Base+0xc14>
   2b710:	mov	fp, r1
   2b712:	ldr.w	r2, [pc, #2080]	; 2bf34 <btrfs_abort_transaction@@Base+0xc18>
   2b716:	mov.w	r8, #1
   2b71a:	add	r3, pc
   2b71c:	mov	r5, r0
   2b71e:	sub	sp, #124	; 0x7c
   2b720:	add	r2, pc
   2b722:	ldr	r1, [r0, #0]
   2b724:	str	r3, [sp, #64]	; 0x40
   2b726:	ldr.w	r3, [pc, #2064]	; 2bf38 <btrfs_abort_transaction@@Base+0xc1c>
   2b72a:	ldr	r3, [r2, r3]
   2b72c:	mov	r2, fp
   2b72e:	ldr	r3, [r3, #0]
   2b730:	str	r3, [sp, #116]	; 0x74
   2b732:	mov.w	r3, #0
   2b736:	str.w	r8, [sp]
   2b73a:	mov	r3, r4
   2b73c:	ldr	r1, [r1, #48]	; 0x30
   2b73e:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2b742:	cmn.w	r0, #4096	; 0x1000
   2b746:	bls.n	2b764 <btrfs_abort_transaction@@Base+0x448>
   2b748:	mov	r6, r0
   2b74a:	ldr.w	r2, [pc, #2032]	; 2bf3c <btrfs_abort_transaction@@Base+0xc20>
   2b74e:	ldr.w	r3, [pc, #2024]	; 2bf38 <btrfs_abort_transaction@@Base+0xc1c>
   2b752:	add	r2, pc
   2b754:	ldr	r3, [r2, r3]
   2b756:	ldr	r2, [r3, #0]
   2b758:	ldr	r3, [sp, #116]	; 0x74
   2b75a:	eors	r2, r3
   2b75c:	beq.w	2bf24 <btrfs_abort_transaction@@Base+0xc08>
   2b760:	blx	86b8 <__stack_chk_fail@plt>
   2b764:	ldr	r2, [r4, #0]
   2b766:	adds	r2, #96	; 0x60
   2b768:	adds	r3, r2, r0
   2b76a:	ldr.w	sl, [r3, #4]
   2b76e:	ldr	r3, [r3, #0]
   2b770:	add	r7, r3
   2b772:	str	r7, [r2, r0]
   2b774:	ldr	r0, [r4, #0]
   2b776:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2b77a:	mov	r0, r4
   2b77c:	bl	17e00 <btrfs_release_path@@Base>
   2b780:	ands.w	sl, sl, #1
   2b784:	bne.w	2bb70 <btrfs_abort_transaction@@Base+0x854>
   2b788:	ldr.w	r3, [fp, #112]	; 0x70
   2b78c:	cmp	r7, r3
   2b78e:	bls.w	2bf20 <btrfs_abort_transaction@@Base+0xc04>
   2b792:	ldr	r3, [r5, #0]
   2b794:	str	r3, [sp, #40]	; 0x28
   2b796:	ldr	r3, [r3, #48]	; 0x30
   2b798:	ldr.w	r6, [fp, #49]	; 0x31
   2b79c:	ldr.w	r7, [fp, #53]	; 0x35
   2b7a0:	vmov	s16, r3
   2b7a4:	ldr	r3, [sp, #40]	; 0x28
   2b7a6:	mov	r0, r6
   2b7a8:	mov	r1, r7
   2b7aa:	ldr.w	r2, [r3, #388]	; 0x184
   2b7ae:	mov	r3, sl
   2b7b0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2b7b4:	adds	r1, r0, #7
   2b7b6:	mov	r0, r8
   2b7b8:	lsrs	r1, r1, #3
   2b7ba:	subs	r1, #1
   2b7bc:	orr.w	r1, r1, #3
   2b7c0:	adds	r1, #1
   2b7c2:	blx	8544 <calloc@plt+0x4>
   2b7c6:	str	r0, [sp, #56]	; 0x38
   2b7c8:	cmp	r0, #0
   2b7ca:	beq.w	2bb66 <btrfs_abort_transaction@@Base+0x84a>
   2b7ce:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b7d2:	ldr.w	r8, [pc, #1900]	; 2bf40 <btrfs_abort_transaction@@Base+0xc24>
   2b7d6:	strd	r2, r3, [sp, #16]
   2b7da:	add	r8, pc
   2b7dc:	ldr	r3, [sp, #16]
   2b7de:	add.w	r8, r8, #43	; 0x2b
   2b7e2:	adds	r3, r6, r3
   2b7e4:	str	r3, [sp, #24]
   2b7e6:	ldr	r3, [sp, #20]
   2b7e8:	adc.w	r3, r7, r3
   2b7ec:	str	r3, [sp, #28]
   2b7ee:	ldr	r3, [sp, #24]
   2b7f0:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2b7f4:	ldr	r3, [sp, #28]
   2b7f6:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2b7fa:	strd	r2, r3, [sp, #76]	; 0x4c
   2b7fe:	movs	r2, #255	; 0xff
   2b800:	strb.w	r2, [sp, #84]	; 0x54
   2b804:	strb.w	r2, [sp, #85]	; 0x55
   2b808:	strb.w	r2, [sp, #86]	; 0x56
   2b80c:	strb.w	r2, [sp, #87]	; 0x57
   2b810:	strb.w	r2, [sp, #88]	; 0x58
   2b814:	strb.w	r2, [sp, #89]	; 0x59
   2b818:	strb.w	r2, [sp, #90]	; 0x5a
   2b81c:	strb.w	r2, [sp, #91]	; 0x5b
   2b820:	strb.w	r2, [sp, #92]	; 0x5c
   2b824:	mov.w	r3, #4294967295	; 0xffffffff
   2b828:	vmov	r1, s16
   2b82c:	str	r3, [sp, #0]
   2b82e:	add	r2, sp, #76	; 0x4c
   2b830:	mov	r3, r4
   2b832:	mov	r0, r5
   2b834:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2b838:	mov	r6, r0
   2b83a:	cmp	r0, #0
   2b83c:	bne.n	2b91e <btrfs_abort_transaction@@Base+0x602>
   2b83e:	ldr	r3, [r4, #0]
   2b840:	mov	r9, r0
   2b842:	vmov	s17, r3
   2b846:	ldr	r3, [r4, #32]
   2b848:	adds	r3, #1
   2b84a:	str	r3, [r4, #32]
   2b84c:	ldr.w	r3, [pc, #1780]	; 2bf44 <btrfs_abort_transaction@@Base+0xc28>
   2b850:	add	r3, pc
   2b852:	vmov	s18, r3
   2b856:	ldr	r2, [r4, #32]
   2b858:	add.w	r7, r9, sl
   2b85c:	cmp	r2, #0
   2b85e:	bgt.n	2b86a <btrfs_abort_transaction@@Base+0x54e>
   2b860:	mov.w	sl, #0
   2b864:	b.n	2b8da <btrfs_abort_transaction@@Base+0x5be>
   2b866:	mov	sl, r7
   2b868:	b.n	2b824 <btrfs_abort_transaction@@Base+0x508>
   2b86a:	vmov	r0, s17
   2b86e:	subs	r2, #1
   2b870:	add	r1, sp, #96	; 0x60
   2b872:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2b876:	ldrb.w	r3, [sp, #104]	; 0x68
   2b87a:	cmp	r3, #198	; 0xc6
   2b87c:	bne.n	2b934 <btrfs_abort_transaction@@Base+0x618>
   2b87e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b882:	mov.w	sl, #1
   2b886:	ldrd	r0, r1, [sp, #96]	; 0x60
   2b88a:	ldr.w	r6, [pc, #1724]	; 2bf48 <btrfs_abort_transaction@@Base+0xc2c>
   2b88e:	cmp	r1, r3
   2b890:	add	r6, pc
   2b892:	it	eq
   2b894:	cmpeq	r0, r2
   2b896:	add.w	r6, r6, #43	; 0x2b
   2b89a:	ldr.w	r0, [pc, #1712]	; 2bf4c <btrfs_abort_transaction@@Base+0xc30>
   2b89e:	ite	eq
   2b8a0:	moveq	r3, #1
   2b8a2:	movne	r3, #0
   2b8a4:	add	r0, pc
   2b8a6:	movs	r2, #222	; 0xde
   2b8a8:	mov	r1, r6
   2b8aa:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b8ae:	ldr.w	r3, [fp, #53]	; 0x35
   2b8b2:	ldr.w	r1, [sp, #109]	; 0x6d
   2b8b6:	ldr.w	r0, [sp, #105]	; 0x69
   2b8ba:	ldr.w	r2, [fp, #49]	; 0x31
   2b8be:	cmp	r1, r3
   2b8c0:	mov	r1, r6
   2b8c2:	it	eq
   2b8c4:	cmpeq	r0, r2
   2b8c6:	ldr.w	r0, [pc, #1672]	; 2bf50 <btrfs_abort_transaction@@Base+0xc34>
   2b8ca:	mov.w	r2, #223	; 0xdf
   2b8ce:	add	r0, pc
   2b8d0:	ite	eq
   2b8d2:	moveq	r3, #1
   2b8d4:	movne	r3, #0
   2b8d6:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b8da:	vmov	r1, s16
   2b8de:	mov	r2, r4
   2b8e0:	ldr	r3, [r4, #32]
   2b8e2:	mov	r0, r5
   2b8e4:	str.w	r9, [sp]
   2b8e8:	bl	1b3a0 <btrfs_del_items@@Base>
   2b8ec:	mov	r6, r0
   2b8ee:	cbnz	r0, 2b91e <btrfs_abort_transaction@@Base+0x602>
   2b8f0:	mov	r0, r4
   2b8f2:	bl	17e00 <btrfs_release_path@@Base>
   2b8f6:	cmp.w	sl, #0
   2b8fa:	beq.n	2b866 <btrfs_abort_transaction@@Base+0x54a>
   2b8fc:	ldr	r1, [sp, #40]	; 0x28
   2b8fe:	mov	r3, r4
   2b900:	mov.w	r8, #1
   2b904:	mov	r2, fp
   2b906:	str.w	r8, [sp]
   2b90a:	mov	r0, r5
   2b90c:	ldr	r1, [r1, #48]	; 0x30
   2b90e:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2b912:	cmn.w	r0, #4096	; 0x1000
   2b916:	mov	r3, r0
   2b918:	bls.w	2ba42 <btrfs_abort_transaction@@Base+0x726>
   2b91c:	mov	r6, r0
   2b91e:	ldr	r0, [sp, #56]	; 0x38
   2b920:	blx	85dc <free@plt+0x4>
   2b924:	cmp	r6, #0
   2b926:	beq.w	2b74a <btrfs_abort_transaction@@Base+0x42e>
   2b92a:	mov	r1, r6
   2b92c:	mov	r0, r5
   2b92e:	bl	2b31c <btrfs_abort_transaction@@Base>
   2b932:	b.n	2b74a <btrfs_abort_transaction@@Base+0x42e>
   2b934:	cmp	r3, #199	; 0xc7
   2b936:	bne.n	2ba2e <btrfs_abort_transaction@@Base+0x712>
   2b938:	ldrd	r6, r7, [sp, #96]	; 0x60
   2b93c:	mov	r1, r8
   2b93e:	ldrd	r2, r3, [sp, #16]
   2b942:	vmov	r0, s18
   2b946:	cmp	r7, r3
   2b948:	it	eq
   2b94a:	cmpeq	r6, r2
   2b94c:	mov.w	r2, #229	; 0xe5
   2b950:	ite	cs
   2b952:	movcs	r3, #1
   2b954:	movcc	r3, #0
   2b956:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b95a:	ldrd	r2, r3, [sp, #24]
   2b95e:	ldr.w	r0, [pc, #1524]	; 2bf54 <btrfs_abort_transaction@@Base+0xc38>
   2b962:	mov	r1, r8
   2b964:	cmp	r7, r3
   2b966:	it	eq
   2b968:	cmpeq	r6, r2
   2b96a:	add	r0, pc
   2b96c:	mov.w	r2, #230	; 0xe6
   2b970:	ite	cc
   2b972:	movcc	r3, #1
   2b974:	movcs	r3, #0
   2b976:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b97a:	ldr.w	r3, [sp, #105]	; 0x69
   2b97e:	ldr.w	r2, [sp, #109]	; 0x6d
   2b982:	adds	r3, r3, r6
   2b984:	str	r3, [sp, #48]	; 0x30
   2b986:	adc.w	r3, r2, r7
   2b98a:	str	r3, [sp, #52]	; 0x34
   2b98c:	ldrd	r0, r1, [sp, #48]	; 0x30
   2b990:	ldrd	r2, r3, [sp, #24]
   2b994:	cmp	r3, r1
   2b996:	mov	r1, r8
   2b998:	it	eq
   2b99a:	cmpeq	r2, r0
   2b99c:	ldr.w	r0, [pc, #1464]	; 2bf58 <btrfs_abort_transaction@@Base+0xc3c>
   2b9a0:	mov.w	r2, #231	; 0xe7
   2b9a4:	ite	cs
   2b9a6:	movcs	r3, #1
   2b9a8:	movcc	r3, #0
   2b9aa:	add	r0, pc
   2b9ac:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2b9b0:	ldr	r3, [sp, #40]	; 0x28
   2b9b2:	ldr	r1, [sp, #16]
   2b9b4:	ldr.w	r2, [r3, #388]	; 0x184
   2b9b8:	subs	r0, r6, r1
   2b9ba:	ldr	r1, [sp, #20]
   2b9bc:	mov.w	r3, #0
   2b9c0:	sbc.w	r1, r7, r1
   2b9c4:	str	r2, [sp, #68]	; 0x44
   2b9c6:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2b9ca:	ldr	r1, [sp, #48]	; 0x30
   2b9cc:	ldr	r7, [sp, #20]
   2b9ce:	movs	r3, #0
   2b9d0:	ldr	r2, [sp, #68]	; 0x44
   2b9d2:	mov	r6, r0
   2b9d4:	ldr	r0, [sp, #16]
   2b9d6:	subs	r0, r1, r0
   2b9d8:	ldr	r1, [sp, #52]	; 0x34
   2b9da:	sbc.w	r1, r1, r7
   2b9de:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2b9e2:	ldr	r3, [sp, #56]	; 0x38
   2b9e4:	add.w	r2, r3, r6, lsr #3
   2b9e8:	movs	r3, #255	; 0xff
   2b9ea:	subs	r7, r0, r6
   2b9ec:	and.w	r6, r6, #7
   2b9f0:	rsb	r1, r6, #8
   2b9f4:	lsl.w	r6, r3, r6
   2b9f8:	uxtb	r6, r6
   2b9fa:	subs	r1, r7, r1
   2b9fc:	bpl.n	2ba1e <btrfs_abort_transaction@@Base+0x702>
   2b9fe:	cbz	r7, 2ba12 <btrfs_abort_transaction@@Base+0x6f6>
   2ba00:	negs	r0, r0
   2ba02:	movs	r3, #255	; 0xff
   2ba04:	and.w	r0, r0, #7
   2ba08:	ldrb	r1, [r2, #0]
   2ba0a:	asrs	r3, r0
   2ba0c:	ands	r3, r6
   2ba0e:	orrs	r3, r1
   2ba10:	strb	r3, [r2, #0]
   2ba12:	ldr	r3, [r4, #32]
   2ba14:	add.w	r9, r9, #1
   2ba18:	subs	r3, #1
   2ba1a:	str	r3, [r4, #32]
   2ba1c:	b.n	2b856 <btrfs_abort_transaction@@Base+0x53a>
   2ba1e:	ldrb	r3, [r2, #0]
   2ba20:	mov	r7, r1
   2ba22:	movs	r1, #8
   2ba24:	orrs	r3, r6
   2ba26:	movs	r6, #255	; 0xff
   2ba28:	strb.w	r3, [r2], #1
   2ba2c:	b.n	2b9fa <btrfs_abort_transaction@@Base+0x6de>
   2ba2e:	ldr.w	r1, [pc, #1324]	; 2bf5c <btrfs_abort_transaction@@Base+0xc40>
   2ba32:	movs	r2, #243	; 0xf3
   2ba34:	ldr.w	r0, [pc, #1320]	; 2bf60 <btrfs_abort_transaction@@Base+0xc44>
   2ba38:	add	r1, pc
   2ba3a:	adds	r1, #43	; 0x2b
   2ba3c:	add	r0, pc
   2ba3e:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2ba42:	ldr	r0, [r4, #0]
   2ba44:	add.w	r2, r0, #96	; 0x60
   2ba48:	add	r3, r2
   2ba4a:	ldr	r2, [r3, #4]
   2ba4c:	ldr.w	r9, [r3]
   2ba50:	orr.w	r2, r2, #1
   2ba54:	str	r2, [r3, #4]
   2ba56:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2ba5a:	mov	r0, r4
   2ba5c:	bl	17e00 <btrfs_release_path@@Base>
   2ba60:	cmp	r9, r7
   2ba62:	beq.n	2ba9a <btrfs_abort_transaction@@Base+0x77e>
   2ba64:	ldr	r2, [sp, #64]	; 0x40
   2ba66:	ldr.w	r3, [pc, #1276]	; 2bf64 <btrfs_abort_transaction@@Base+0xc48>
   2ba6a:	ldr	r3, [r2, r3]
   2ba6c:	strd	r7, r9, [sp, #8]
   2ba70:	ldrd	r0, r1, [fp, #40]	; 0x28
   2ba74:	ldr.w	r2, [pc, #1264]	; 2bf68 <btrfs_abort_transaction@@Base+0xc4c>
   2ba78:	strd	r0, r1, [sp]
   2ba7c:	add	r2, pc
   2ba7e:	mov	r1, r8
   2ba80:	ldr	r0, [r3, #0]
   2ba82:	blx	8a14 <__fprintf_chk@plt+0x4>
   2ba86:	ldr.w	r1, [pc, #1252]	; 2bf6c <btrfs_abort_transaction@@Base+0xc50>
   2ba8a:	ldr.w	r0, [pc, #1252]	; 2bf70 <btrfs_abort_transaction@@Base+0xc54>
   2ba8e:	movw	r2, #271	; 0x10f
   2ba92:	add	r1, pc
   2ba94:	adds	r1, #43	; 0x2b
   2ba96:	add	r0, pc
   2ba98:	b.n	2ba3e <btrfs_abort_transaction@@Base+0x722>
   2ba9a:	ldr	r3, [sp, #40]	; 0x28
   2ba9c:	mov.w	fp, #0
   2baa0:	ldr.w	r8, [sp, #56]	; 0x38
   2baa4:	mov.w	r9, #200	; 0xc8
   2baa8:	ldr.w	r3, [r3, #388]	; 0x184
   2baac:	lsls	r3, r3, #11
   2baae:	mov	sl, r3
   2bab0:	ldrd	r2, r3, [sp, #16]
   2bab4:	ldrd	r0, r1, [sp, #24]
   2bab8:	cmp	r3, r1
   2baba:	it	eq
   2babc:	cmpeq	r2, r0
   2babe:	bcs.w	2b91e <btrfs_abort_transaction@@Base+0x602>
   2bac2:	ldr	r2, [sp, #16]
   2bac4:	ldr	r3, [sp, #24]
   2bac6:	subs	r3, r3, r2
   2bac8:	ldr	r2, [sp, #20]
   2baca:	str	r3, [sp, #32]
   2bacc:	ldr	r3, [sp, #28]
   2bace:	sbc.w	r3, r3, r2
   2bad2:	str	r3, [sp, #36]	; 0x24
   2bad4:	ldrd	r2, r3, [sp, #32]
   2bad8:	cmp	fp, r3
   2bada:	ldr	r3, [sp, #40]	; 0x28
   2badc:	it	eq
   2bade:	cmpeq	sl, r2
   2bae0:	it	cc
   2bae2:	strdcc	sl, fp, [sp, #32]
   2bae6:	ldrd	r0, r1, [sp, #32]
   2baea:	ldr.w	r2, [r3, #388]	; 0x184
   2baee:	movs	r3, #0
   2baf0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2baf4:	ldr	r3, [sp, #16]
   2baf6:	vmov	r1, s16
   2bafa:	mov	r2, r4
   2bafc:	strb.w	r9, [sp, #84]	; 0x54
   2bb00:	str	r3, [sp, #76]	; 0x4c
   2bb02:	ldr	r3, [sp, #20]
   2bb04:	str	r3, [sp, #80]	; 0x50
   2bb06:	ldr	r3, [sp, #32]
   2bb08:	str.w	r3, [sp, #85]	; 0x55
   2bb0c:	ldr	r3, [sp, #36]	; 0x24
   2bb0e:	str.w	r3, [sp, #89]	; 0x59
   2bb12:	movs	r3, #1
   2bb14:	str	r3, [sp, #4]
   2bb16:	add	r3, sp, #72	; 0x48
   2bb18:	str	r3, [sp, #0]
   2bb1a:	add	r3, sp, #76	; 0x4c
   2bb1c:	adds	r0, #7
   2bb1e:	lsrs	r7, r0, #3
   2bb20:	mov	r0, r5
   2bb22:	str	r7, [sp, #72]	; 0x48
   2bb24:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2bb28:	cbnz	r0, 2bb6c <btrfs_abort_transaction@@Base+0x850>
   2bb2a:	ldr	r0, [r4, #0]
   2bb2c:	movs	r2, #25
   2bb2e:	ldr	r3, [r4, #32]
   2bb30:	mov	r1, r8
   2bb32:	add	r8, r7
   2bb34:	str	r0, [sp, #48]	; 0x30
   2bb36:	mla	r3, r2, r3, r0
   2bb3a:	ldr.w	r2, [r3, #214]	; 0xd6
   2bb3e:	mov	r3, r7
   2bb40:	adds	r2, #101	; 0x65
   2bb42:	bl	172d8 <write_extent_buffer@@Base>
   2bb46:	ldr	r0, [sp, #48]	; 0x30
   2bb48:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2bb4c:	mov	r0, r4
   2bb4e:	bl	17e00 <btrfs_release_path@@Base>
   2bb52:	ldr	r3, [sp, #16]
   2bb54:	ldr	r2, [sp, #32]
   2bb56:	adds	r3, r3, r2
   2bb58:	ldr	r2, [sp, #36]	; 0x24
   2bb5a:	str	r3, [sp, #16]
   2bb5c:	ldr	r3, [sp, #20]
   2bb5e:	adc.w	r3, r2, r3
   2bb62:	str	r3, [sp, #20]
   2bb64:	b.n	2bab0 <btrfs_abort_transaction@@Base+0x794>
   2bb66:	mvn.w	r6, #11
   2bb6a:	b.n	2b91e <btrfs_abort_transaction@@Base+0x602>
   2bb6c:	mov	r6, r0
   2bb6e:	b.n	2b91e <btrfs_abort_transaction@@Base+0x602>
   2bb70:	ldr.w	r3, [fp, #116]	; 0x74
   2bb74:	cmp	r7, r3
   2bb76:	bcs.w	2bf20 <btrfs_abort_transaction@@Base+0xc04>
   2bb7a:	ldr	r3, [r5, #0]
   2bb7c:	str	r3, [sp, #16]
   2bb7e:	ldr	r3, [r3, #48]	; 0x30
   2bb80:	ldr.w	r6, [fp, #49]	; 0x31
   2bb84:	ldr.w	r7, [fp, #53]	; 0x35
   2bb88:	vmov	s16, r3
   2bb8c:	ldr	r3, [sp, #16]
   2bb8e:	mov	r0, r6
   2bb90:	mov	r1, r7
   2bb92:	ldr.w	r2, [r3, #388]	; 0x184
   2bb96:	movs	r3, #0
   2bb98:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2bb9c:	adds	r1, r0, #7
   2bb9e:	mov	r0, r8
   2bba0:	lsrs	r1, r1, #3
   2bba2:	subs	r1, #1
   2bba4:	orr.w	r1, r1, #3
   2bba8:	adds	r1, #1
   2bbaa:	blx	8544 <calloc@plt+0x4>
   2bbae:	mov	r8, r0
   2bbb0:	cmp	r0, #0
   2bbb2:	beq.w	2bf16 <btrfs_abort_transaction@@Base+0xbfa>
   2bbb6:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bbba:	ldr.w	r9, [pc, #952]	; 2bf74 <btrfs_abort_transaction@@Base+0xc58>
   2bbbe:	strd	r2, r3, [sp, #24]
   2bbc2:	add	r9, pc
   2bbc4:	ldr	r3, [sp, #24]
   2bbc6:	add.w	r9, r9, #73	; 0x49
   2bbca:	adds	r3, r6, r3
   2bbcc:	str	r3, [sp, #40]	; 0x28
   2bbce:	ldr	r3, [sp, #28]
   2bbd0:	adc.w	r3, r7, r3
   2bbd4:	str	r3, [sp, #44]	; 0x2c
   2bbd6:	ldr	r3, [sp, #40]	; 0x28
   2bbd8:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2bbdc:	ldr	r3, [sp, #44]	; 0x2c
   2bbde:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bbe2:	strd	r2, r3, [sp, #76]	; 0x4c
   2bbe6:	movs	r2, #255	; 0xff
   2bbe8:	strb.w	r2, [sp, #84]	; 0x54
   2bbec:	strb.w	r2, [sp, #85]	; 0x55
   2bbf0:	strb.w	r2, [sp, #86]	; 0x56
   2bbf4:	strb.w	r2, [sp, #87]	; 0x57
   2bbf8:	strb.w	r2, [sp, #88]	; 0x58
   2bbfc:	strb.w	r2, [sp, #89]	; 0x59
   2bc00:	strb.w	r2, [sp, #90]	; 0x5a
   2bc04:	strb.w	r2, [sp, #91]	; 0x5b
   2bc08:	strb.w	r2, [sp, #92]	; 0x5c
   2bc0c:	mov.w	r3, #4294967295	; 0xffffffff
   2bc10:	vmov	r1, s16
   2bc14:	str	r3, [sp, #0]
   2bc16:	add	r2, sp, #76	; 0x4c
   2bc18:	mov	r3, r4
   2bc1a:	mov	r0, r5
   2bc1c:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2bc20:	mov	r6, r0
   2bc22:	cmp	r0, #0
   2bc24:	bne.n	2bcea <btrfs_abort_transaction@@Base+0x9ce>
   2bc26:	ldr	r3, [r4, #32]
   2bc28:	ldr	r7, [r4, #0]
   2bc2a:	adds	r3, #1
   2bc2c:	str	r3, [r4, #32]
   2bc2e:	ldr	r3, [pc, #840]	; (2bf78 <btrfs_abort_transaction@@Base+0xc5c>)
   2bc30:	str	r0, [sp, #48]	; 0x30
   2bc32:	add	r3, pc
   2bc34:	vmov	s17, r3
   2bc38:	ldr	r2, [r4, #32]
   2bc3a:	cmp	r2, #0
   2bc3c:	bgt.n	2bc42 <btrfs_abort_transaction@@Base+0x926>
   2bc3e:	movs	r7, #0
   2bc40:	b.n	2bcae <btrfs_abort_transaction@@Base+0x992>
   2bc42:	subs	r2, #1
   2bc44:	add	r1, sp, #96	; 0x60
   2bc46:	mov	r0, r7
   2bc48:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2bc4c:	ldrb.w	r3, [sp, #104]	; 0x68
   2bc50:	cmp	r3, #198	; 0xc6
   2bc52:	bne.n	2bcee <btrfs_abort_transaction@@Base+0x9d2>
   2bc54:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bc58:	ldrd	r6, r7, [sp, #96]	; 0x60
   2bc5c:	ldr	r0, [pc, #796]	; (2bf7c <btrfs_abort_transaction@@Base+0xc60>)
   2bc5e:	cmp	r7, r3
   2bc60:	mov.w	r7, #1
   2bc64:	it	eq
   2bc66:	cmpeq	r6, r2
   2bc68:	ldr	r6, [pc, #788]	; (2bf80 <btrfs_abort_transaction@@Base+0xc64>)
   2bc6a:	add	r0, pc
   2bc6c:	mov.w	r2, #360	; 0x168
   2bc70:	add	r6, pc
   2bc72:	it	eq
   2bc74:	moveq	r3, #1
   2bc76:	add.w	r6, r6, #73	; 0x49
   2bc7a:	it	ne
   2bc7c:	movne	r3, #0
   2bc7e:	mov	r1, r6
   2bc80:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bc84:	ldr.w	r3, [fp, #53]	; 0x35
   2bc88:	ldr.w	r1, [sp, #109]	; 0x6d
   2bc8c:	ldr.w	r0, [sp, #105]	; 0x69
   2bc90:	ldr.w	r2, [fp, #49]	; 0x31
   2bc94:	cmp	r1, r3
   2bc96:	mov	r1, r6
   2bc98:	it	eq
   2bc9a:	cmpeq	r0, r2
   2bc9c:	ldr	r0, [pc, #740]	; (2bf84 <btrfs_abort_transaction@@Base+0xc68>)
   2bc9e:	movw	r2, #361	; 0x169
   2bca2:	add	r0, pc
   2bca4:	ite	eq
   2bca6:	moveq	r3, #1
   2bca8:	movne	r3, #0
   2bcaa:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bcae:	ldr	r3, [sp, #48]	; 0x30
   2bcb0:	mov	r2, r4
   2bcb2:	vmov	r1, s16
   2bcb6:	mov	r0, r5
   2bcb8:	str	r3, [sp, #0]
   2bcba:	ldr	r3, [r4, #32]
   2bcbc:	bl	1b3a0 <btrfs_del_items@@Base>
   2bcc0:	mov	r6, r0
   2bcc2:	cbnz	r0, 2bcea <btrfs_abort_transaction@@Base+0x9ce>
   2bcc4:	mov	r0, r4
   2bcc6:	bl	17e00 <btrfs_release_path@@Base>
   2bcca:	cmp	r7, #0
   2bccc:	beq.n	2bc0c <btrfs_abort_transaction@@Base+0x8f0>
   2bcce:	ldr	r1, [sp, #16]
   2bcd0:	movs	r3, #1
   2bcd2:	mov	r2, fp
   2bcd4:	str	r3, [sp, #0]
   2bcd6:	mov	r0, r5
   2bcd8:	mov	r3, r4
   2bcda:	ldr	r1, [r1, #48]	; 0x30
   2bcdc:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2bce0:	cmn.w	r0, #4096	; 0x1000
   2bce4:	mov	r3, r0
   2bce6:	bls.n	2bde0 <btrfs_abort_transaction@@Base+0xac4>
   2bce8:	mov	r6, r0
   2bcea:	mov	r0, r8
   2bcec:	b.n	2b920 <btrfs_abort_transaction@@Base+0x604>
   2bcee:	cmp	r3, #200	; 0xc8
   2bcf0:	bne.n	2bdd0 <btrfs_abort_transaction@@Base+0xab4>
   2bcf2:	ldrd	r2, r3, [sp, #96]	; 0x60
   2bcf6:	ldrd	r0, r1, [sp, #24]
   2bcfa:	cmp	r3, r1
   2bcfc:	strd	r2, r3, [sp, #32]
   2bd00:	it	eq
   2bd02:	cmpeq	r2, r0
   2bd04:	mov	r1, r9
   2bd06:	vmov	r0, s17
   2bd0a:	movw	r2, #369	; 0x171
   2bd0e:	ite	cs
   2bd10:	movcs	r3, #1
   2bd12:	movcc	r3, #0
   2bd14:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bd18:	ldrd	r2, r3, [sp, #32]
   2bd1c:	ldrd	r0, r1, [sp, #40]	; 0x28
   2bd20:	cmp	r3, r1
   2bd22:	mov	r1, r9
   2bd24:	it	eq
   2bd26:	cmpeq	r2, r0
   2bd28:	ldr	r0, [pc, #604]	; (2bf88 <btrfs_abort_transaction@@Base+0xc6c>)
   2bd2a:	mov.w	r2, #370	; 0x172
   2bd2e:	ite	cc
   2bd30:	movcc	r3, #1
   2bd32:	movcs	r3, #0
   2bd34:	add	r0, pc
   2bd36:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bd3a:	ldr.w	r6, [sp, #105]	; 0x69
   2bd3e:	ldr	r3, [sp, #32]
   2bd40:	ldr.w	sl, [sp, #109]	; 0x6d
   2bd44:	adds	r3, r3, r6
   2bd46:	str	r3, [sp, #56]	; 0x38
   2bd48:	ldr	r3, [sp, #36]	; 0x24
   2bd4a:	adc.w	r3, r3, sl
   2bd4e:	str	r3, [sp, #60]	; 0x3c
   2bd50:	ldrd	r0, r1, [sp, #56]	; 0x38
   2bd54:	ldrd	r2, r3, [sp, #40]	; 0x28
   2bd58:	cmp	r3, r1
   2bd5a:	mov	r1, r9
   2bd5c:	it	eq
   2bd5e:	cmpeq	r2, r0
   2bd60:	ldr	r0, [pc, #552]	; (2bf8c <btrfs_abort_transaction@@Base+0xc70>)
   2bd62:	movw	r2, #371	; 0x173
   2bd66:	ite	cs
   2bd68:	movcs	r3, #1
   2bd6a:	movcc	r3, #0
   2bd6c:	add	r0, pc
   2bd6e:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bd72:	ldr	r3, [sp, #16]
   2bd74:	mov	r0, r6
   2bd76:	mov	r1, sl
   2bd78:	ldr.w	r2, [r3, #388]	; 0x184
   2bd7c:	movs	r3, #0
   2bd7e:	str	r2, [sp, #68]	; 0x44
   2bd80:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2bd84:	ldr	r3, [r4, #32]
   2bd86:	movs	r1, #25
   2bd88:	ldr	r2, [sp, #68]	; 0x44
   2bd8a:	subs	r3, #1
   2bd8c:	mla	r3, r1, r3, r7
   2bd90:	ldr	r1, [sp, #32]
   2bd92:	lsls	r2, r2, #3
   2bd94:	ldr.w	sl, [r3, #214]	; 0xd6
   2bd98:	movs	r3, #0
   2bd9a:	add.w	sl, sl, #101	; 0x65
   2bd9e:	adds	r0, #7
   2bda0:	lsrs	r6, r0, #3
   2bda2:	ldr	r0, [sp, #24]
   2bda4:	subs	r0, r1, r0
   2bda6:	ldr	r1, [sp, #36]	; 0x24
   2bda8:	mov	ip, r1
   2bdaa:	ldr	r1, [sp, #28]
   2bdac:	sbc.w	r1, ip, r1
   2bdb0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2bdb4:	mov	r3, r6
   2bdb6:	mov	r2, sl
   2bdb8:	add.w	r1, r8, r0
   2bdbc:	mov	r0, r7
   2bdbe:	bl	172c2 <read_extent_buffer@@Base>
   2bdc2:	ldr	r3, [sp, #48]	; 0x30
   2bdc4:	adds	r3, #1
   2bdc6:	str	r3, [sp, #48]	; 0x30
   2bdc8:	ldr	r3, [r4, #32]
   2bdca:	subs	r3, #1
   2bdcc:	str	r3, [r4, #32]
   2bdce:	b.n	2bc38 <btrfs_abort_transaction@@Base+0x91c>
   2bdd0:	ldr	r1, [pc, #444]	; (2bf90 <btrfs_abort_transaction@@Base+0xc74>)
   2bdd2:	movw	r2, #387	; 0x183
   2bdd6:	ldr	r0, [pc, #444]	; (2bf94 <btrfs_abort_transaction@@Base+0xc78>)
   2bdd8:	add	r1, pc
   2bdda:	adds	r1, #73	; 0x49
   2bddc:	add	r0, pc
   2bdde:	b.n	2ba3e <btrfs_abort_transaction@@Base+0x722>
   2bde0:	ldr	r0, [r4, #0]
   2bde2:	add.w	r2, r0, #96	; 0x60
   2bde6:	add	r3, r2
   2bde8:	ldr	r2, [r3, #4]
   2bdea:	bic.w	r2, r2, #1
   2bdee:	str	r2, [r3, #4]
   2bdf0:	ldr	r3, [r3, #0]
   2bdf2:	str	r3, [sp, #40]	; 0x28
   2bdf4:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2bdf8:	mov	r0, r4
   2bdfa:	bl	17e00 <btrfs_release_path@@Base>
   2bdfe:	ldr	r3, [sp, #16]
   2be00:	ldr.w	r0, [fp, #49]	; 0x31
   2be04:	ldr.w	r1, [fp, #53]	; 0x35
   2be08:	ldr.w	r2, [r3, #388]	; 0x184
   2be0c:	mov	r3, r6
   2be0e:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2be12:	mov	r9, r0
   2be14:	cmp	r0, #0
   2be16:	beq.n	2bf12 <btrfs_abort_transaction@@Base+0xbf6>
   2be18:	mov	r3, r6
   2be1a:	mov	r1, r0
   2be1c:	mov	r2, r6
   2be1e:	mov	r0, r8
   2be20:	bl	2b43c <btrfs_abort_transaction@@Base+0x120>
   2be24:	ldr	r3, [pc, #368]	; (2bf98 <btrfs_abort_transaction@@Base+0xc7c>)
   2be26:	str	r6, [sp, #32]
   2be28:	add	r3, pc
   2be2a:	adds	r3, #73	; 0x49
   2be2c:	vmov	s17, r3
   2be30:	ldr	r3, [pc, #360]	; (2bf9c <btrfs_abort_transaction@@Base+0xc80>)
   2be32:	add	r3, pc
   2be34:	vmov	s18, r3
   2be38:	mov	r7, r0
   2be3a:	cmp	r9, r7
   2be3c:	bhi.n	2be7a <btrfs_abort_transaction@@Base+0xb5e>
   2be3e:	ldr	r3, [sp, #32]
   2be40:	ldr	r2, [sp, #40]	; 0x28
   2be42:	cmp	r3, r2
   2be44:	beq.w	2bcea <btrfs_abort_transaction@@Base+0x9ce>
   2be48:	ldr	r2, [sp, #64]	; 0x40
   2be4a:	ldr	r3, [pc, #280]	; (2bf64 <btrfs_abort_transaction@@Base+0xc48>)
   2be4c:	ldr	r3, [r2, r3]
   2be4e:	ldr	r2, [sp, #40]	; 0x28
   2be50:	str	r2, [sp, #12]
   2be52:	ldr	r2, [sp, #32]
   2be54:	str	r2, [sp, #8]
   2be56:	ldrd	r0, r1, [fp, #40]	; 0x28
   2be5a:	ldr	r2, [pc, #324]	; (2bfa0 <btrfs_abort_transaction@@Base+0xc84>)
   2be5c:	strd	r0, r1, [sp]
   2be60:	add	r2, pc
   2be62:	movs	r1, #1
   2be64:	ldr	r0, [r3, #0]
   2be66:	blx	8a14 <__fprintf_chk@plt+0x4>
   2be6a:	ldr	r1, [pc, #312]	; (2bfa4 <btrfs_abort_transaction@@Base+0xc88>)
   2be6c:	ldr	r0, [pc, #312]	; (2bfa8 <btrfs_abort_transaction@@Base+0xc8c>)
   2be6e:	mov.w	r2, #436	; 0x1b4
   2be72:	add	r1, pc
   2be74:	adds	r1, #73	; 0x49
   2be76:	add	r0, pc
   2be78:	b.n	2ba3e <btrfs_abort_transaction@@Base+0x722>
   2be7a:	mov.w	r3, #4294967295	; 0xffffffff
   2be7e:	mov	r2, r7
   2be80:	mov	r1, r9
   2be82:	mov	r0, r8
   2be84:	bl	2b43c <btrfs_abort_transaction@@Base+0x120>
   2be88:	vmov	r1, s17
   2be8c:	movw	r2, #415	; 0x19f
   2be90:	cmp	r7, r0
   2be92:	mov	sl, r0
   2be94:	vmov	r0, s18
   2be98:	ite	cs
   2be9a:	movcs	r3, #0
   2be9c:	movcc	r3, #1
   2be9e:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2bea2:	ldr	r3, [sp, #16]
   2bea4:	ldrd	r0, r1, [sp, #24]
   2bea8:	ldr.w	r3, [r3, #388]	; 0x184
   2beac:	mul.w	r2, r3, r7
   2beb0:	sub.w	r7, sl, r7
   2beb4:	muls	r3, r7
   2beb6:	adds	r0, r0, r2
   2beb8:	adc.w	r1, r1, #0
   2bebc:	movs	r2, #199	; 0xc7
   2bebe:	strd	r0, r1, [sp, #76]	; 0x4c
   2bec2:	mov	r0, r5
   2bec4:	strb.w	r2, [sp, #84]	; 0x54
   2bec8:	movs	r2, #0
   2beca:	vmov	r1, s16
   2bece:	str.w	r3, [sp, #85]	; 0x55
   2bed2:	movs	r3, #1
   2bed4:	str.w	r2, [sp, #89]	; 0x59
   2bed8:	str	r2, [sp, #72]	; 0x48
   2beda:	mov	r2, r4
   2bedc:	str	r3, [sp, #4]
   2bede:	add	r3, sp, #72	; 0x48
   2bee0:	str	r3, [sp, #0]
   2bee2:	add	r3, sp, #76	; 0x4c
   2bee4:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2bee8:	mov	r7, r0
   2beea:	cbnz	r0, 2bf1c <btrfs_abort_transaction@@Base+0xc00>
   2beec:	mov	r0, r4
   2beee:	bl	17e00 <btrfs_release_path@@Base>
   2bef2:	ldr	r3, [sp, #32]
   2bef4:	cmp	r9, sl
   2bef6:	add.w	r3, r3, #1
   2befa:	str	r3, [sp, #32]
   2befc:	bls.n	2bf0e <btrfs_abort_transaction@@Base+0xbf2>
   2befe:	mov	r3, r7
   2bf00:	mov	r2, sl
   2bf02:	mov	r1, r9
   2bf04:	mov	r0, r8
   2bf06:	bl	2b43c <btrfs_abort_transaction@@Base+0x120>
   2bf0a:	mov	r7, r0
   2bf0c:	b.n	2be3a <btrfs_abort_transaction@@Base+0xb1e>
   2bf0e:	mov	r7, r9
   2bf10:	b.n	2be3a <btrfs_abort_transaction@@Base+0xb1e>
   2bf12:	str	r6, [sp, #32]
   2bf14:	b.n	2be3e <btrfs_abort_transaction@@Base+0xb22>
   2bf16:	mvn.w	r6, #11
   2bf1a:	b.n	2bcea <btrfs_abort_transaction@@Base+0x9ce>
   2bf1c:	mov	r6, r0
   2bf1e:	b.n	2bcea <btrfs_abort_transaction@@Base+0x9ce>
   2bf20:	movs	r6, #0
   2bf22:	b.n	2b74a <btrfs_abort_transaction@@Base+0x42e>
   2bf24:	mov	r0, r6
   2bf26:	add	sp, #124	; 0x7c
   2bf28:	vpop	{d8-d9}
   2bf2c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bf30:	str	r6, [sp, #440]	; 0x1b8
   2bf32:	movs	r3, r0
   2bf34:	str	r6, [sp, #416]	; 0x1a0
   2bf36:	movs	r3, r0
   2bf38:	lsls	r4, r4, #8
   2bf3a:	movs	r0, r0
   2bf3c:	str	r6, [sp, #216]	; 0xd8
   2bf3e:	movs	r3, r0
   2bf40:	str	r1, [r3, r4]
   2bf42:	movs	r1, r0
   2bf44:	ldr	r4, [pc, #548]	; (2c16c <btrfs_abort_transaction@@Base+0xe50>)
   2bf46:	movs	r1, r0
   2bf48:	str	r3, [r4, r1]
   2bf4a:	movs	r1, r0
   2bf4c:	ldr	r3, [pc, #868]	; (2c2b4 <btrfs_abort_transaction@@Base+0xf98>)
   2bf4e:	movs	r1, r0
   2bf50:	ldr	r3, [pc, #892]	; (2c2d0 <btrfs_abort_transaction@@Base+0xfb4>)
   2bf52:	movs	r1, r0
   2bf54:	ldr	r3, [pc, #556]	; (2c184 <btrfs_abort_transaction@@Base+0xe68>)
   2bf56:	movs	r1, r0
   2bf58:	ldr	r3, [pc, #400]	; (2c0ec <btrfs_abort_transaction@@Base+0xdd0>)
   2bf5a:	movs	r1, r0
   2bf5c:	ldr	r6, [pc, #748]	; (2c24c <btrfs_abort_transaction@@Base+0xf30>)
   2bf5e:	movs	r1, r0
   2bf60:	lsrs	r6, r0, #9
   2bf62:	movs	r1, r0
   2bf64:	lsls	r4, r6, #8
   2bf66:	movs	r0, r0
   2bf68:	ldr	r2, [pc, #764]	; (2c268 <btrfs_abort_transaction@@Base+0xf4c>)
   2bf6a:	movs	r1, r0
   2bf6c:	ldr	r6, [pc, #388]	; (2c0f4 <btrfs_abort_transaction@@Base+0xdd8>)
   2bf6e:	movs	r1, r0
   2bf70:	lsrs	r4, r5, #7
   2bf72:	movs	r1, r0
   2bf74:	ldr	r5, [pc, #196]	; (2c03c <btrfs_abort_transaction@@Base+0xd20>)
   2bf76:	movs	r1, r0
   2bf78:	ldr	r0, [pc, #668]	; (2c218 <btrfs_abort_transaction@@Base+0xefc>)
   2bf7a:	movs	r1, r0
   2bf7c:	ldr	r0, [pc, #76]	; (2bfcc <btrfs_abort_transaction@@Base+0xcb0>)
   2bf7e:	movs	r1, r0
   2bf80:	ldr	r4, [pc, #524]	; (2c190 <btrfs_abort_transaction@@Base+0xe74>)
   2bf82:	movs	r1, r0
   2bf84:	ldr	r0, [pc, #44]	; (2bfb4 <btrfs_abort_transaction@@Base+0xc98>)
   2bf86:	movs	r1, r0
   2bf88:			; <UNDEFINED> instruction: 0x47c1
   2bf8a:	movs	r1, r0
   2bf8c:			; <UNDEFINED> instruction: 0x47a2
   2bf8e:	movs	r1, r0
   2bf90:	ldr	r3, [pc, #108]	; (2c000 <btrfs_abort_transaction@@Base+0xce4>)
   2bf92:	movs	r1, r0
   2bf94:	lsls	r6, r4, #26
   2bf96:	movs	r1, r0
   2bf98:	ldr	r2, [pc, #812]	; (2c2c8 <btrfs_abort_transaction@@Base+0xfac>)
   2bf9a:	movs	r1, r0
   2bf9c:	bx	r8
   2bf9e:	movs	r1, r0
   2bfa0:	mov	fp, fp
   2bfa2:	movs	r1, r0
   2bfa4:	ldr	r2, [pc, #516]	; (2c1ac <btrfs_abort_transaction@@Base+0xe90>)
   2bfa6:	movs	r1, r0
   2bfa8:	lsls	r4, r1, #24
   2bfaa:	movs	r1, r0
   2bfac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bfb0:	sub	sp, #156	; 0x9c
   2bfb2:	mov	r4, r2
   2bfb4:	ldr	r2, [pc, #900]	; (2c33c <btrfs_abort_transaction@@Base+0x1020>)
   2bfb6:	ldr	r3, [sp, #200]	; 0xc8
   2bfb8:	mov	r5, r1
   2bfba:	add	r2, pc
   2bfbc:	ldrd	r9, sl, [sp, #192]	; 0xc0
   2bfc0:	ldr	r1, [r0, #0]
   2bfc2:	mov	r6, r0
   2bfc4:	str	r3, [sp, #92]	; 0x5c
   2bfc6:	ldr	r3, [sp, #204]	; 0xcc
   2bfc8:	ldr.w	r8, [r1, #48]	; 0x30
   2bfcc:	str	r3, [sp, #96]	; 0x60
   2bfce:	ldr	r3, [pc, #880]	; (2c340 <btrfs_abort_transaction@@Base+0x1024>)
   2bfd0:	ldr	r3, [r2, r3]
   2bfd2:	ldr	r3, [r3, #0]
   2bfd4:	str	r3, [sp, #148]	; 0x94
   2bfd6:	mov.w	r3, #0
   2bfda:	ldrd	r2, r3, [r5, #40]	; 0x28
   2bfde:	cmp	r3, sl
   2bfe0:	it	eq
   2bfe2:	cmpeq	r2, r9
   2bfe4:	bcs.n	2c094 <btrfs_abort_transaction@@Base+0xd78>
   2bfe6:	ldr.w	r3, [r1, #388]	; 0x184
   2bfea:	add	r7, sp, #108	; 0x6c
   2bfec:	movs	r2, #255	; 0xff
   2bfee:	mov	fp, sl
   2bff0:	strb.w	r2, [sp, #116]	; 0x74
   2bff4:	subs.w	sl, r9, r3
   2bff8:	strb.w	r2, [sp, #117]	; 0x75
   2bffc:	mov.w	r3, #0
   2c000:	strb.w	r2, [sp, #118]	; 0x76
   2c004:	mov	r1, r8
   2c006:	strb.w	r2, [sp, #119]	; 0x77
   2c00a:	sbc.w	fp, fp, #0
   2c00e:	strb.w	r2, [sp, #120]	; 0x78
   2c012:	strb.w	r2, [sp, #121]	; 0x79
   2c016:	strb.w	r2, [sp, #122]	; 0x7a
   2c01a:	strb.w	r2, [sp, #123]	; 0x7b
   2c01e:	strb.w	r2, [sp, #124]	; 0x7c
   2c022:	mov	r2, r7
   2c024:	str	r3, [sp, #0]
   2c026:	mov	r3, r4
   2c028:	strd	sl, fp, [sp, #108]	; 0x6c
   2c02c:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2c030:	mov	r3, r0
   2c032:	cbnz	r0, 2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c034:	mov	r3, fp
   2c036:	mov	r2, sl
   2c038:	mov	r0, r4
   2c03a:	bl	2b516 <btrfs_abort_transaction@@Base+0x1fa>
   2c03e:	ldr	r2, [r4, #32]
   2c040:	mov	r1, r7
   2c042:	str	r0, [sp, #68]	; 0x44
   2c044:	ldr	r0, [r4, #0]
   2c046:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c04a:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2c04e:	ldr.w	r2, [sp, #117]	; 0x75
   2c052:	ldr.w	r1, [sp, #121]	; 0x79
   2c056:	adds	r3, r3, r2
   2c058:	str	r3, [sp, #8]
   2c05a:	adc.w	r3, r0, r1
   2c05e:	str	r3, [sp, #12]
   2c060:	ldrd	r0, r1, [sp, #8]
   2c064:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c068:	cmp	r3, r1
   2c06a:	it	eq
   2c06c:	cmpeq	r2, r0
   2c06e:	bcc.n	2c0dc <btrfs_abort_transaction@@Base+0xdc0>
   2c070:	mov	r2, r4
   2c072:	mov	r1, r8
   2c074:	mov	r0, r6
   2c076:	bl	2b650 <btrfs_abort_transaction@@Base+0x334>
   2c07a:	mov	r3, r0
   2c07c:	cbz	r0, 2c0dc <btrfs_abort_transaction@@Base+0xdc0>
   2c07e:	ldr	r1, [pc, #708]	; (2c344 <btrfs_abort_transaction@@Base+0x1028>)
   2c080:	ldr	r2, [pc, #700]	; (2c340 <btrfs_abort_transaction@@Base+0x1024>)
   2c082:	add	r1, pc
   2c084:	ldr	r2, [r1, r2]
   2c086:	ldr	r1, [r2, #0]
   2c088:	ldr	r2, [sp, #148]	; 0x94
   2c08a:	eors	r1, r2
   2c08c:	beq.w	2c332 <btrfs_abort_transaction@@Base+0x1016>
   2c090:	blx	86b8 <__stack_chk_fail@plt>
   2c094:	ldr	r3, [sp, #192]	; 0xc0
   2c096:	movs	r2, #255	; 0xff
   2c098:	mov	r1, r8
   2c09a:	strb.w	r2, [sp, #116]	; 0x74
   2c09e:	strb.w	r2, [sp, #117]	; 0x75
   2c0a2:	str	r3, [sp, #108]	; 0x6c
   2c0a4:	ldr	r3, [sp, #196]	; 0xc4
   2c0a6:	strb.w	r2, [sp, #118]	; 0x76
   2c0aa:	strb.w	r2, [sp, #119]	; 0x77
   2c0ae:	str	r3, [sp, #112]	; 0x70
   2c0b0:	movs	r3, #0
   2c0b2:	strb.w	r2, [sp, #120]	; 0x78
   2c0b6:	strb.w	r2, [sp, #121]	; 0x79
   2c0ba:	strb.w	r2, [sp, #122]	; 0x7a
   2c0be:	strb.w	r2, [sp, #123]	; 0x7b
   2c0c2:	strb.w	r2, [sp, #124]	; 0x7c
   2c0c6:	add	r2, sp, #108	; 0x6c
   2c0c8:	str	r3, [sp, #0]
   2c0ca:	mov	r3, r4
   2c0cc:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2c0d0:	mov	r3, r0
   2c0d2:	cmp	r0, #0
   2c0d4:	bne.n	2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c0d6:	mov.w	r3, #4294967295	; 0xffffffff
   2c0da:	str	r3, [sp, #68]	; 0x44
   2c0dc:	ldr	r3, [sp, #92]	; 0x5c
   2c0de:	str	r3, [sp, #8]
   2c0e0:	ldr	r3, [sp, #96]	; 0x60
   2c0e2:	str	r3, [sp, #12]
   2c0e4:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c0e8:	strd	r2, r3, [sp, #16]
   2c0ec:	ldr	r3, [pc, #600]	; (2c348 <btrfs_abort_transaction@@Base+0x102c>)
   2c0ee:	add	r3, pc
   2c0f0:	adds	r3, #103	; 0x67
   2c0f2:	str	r3, [sp, #88]	; 0x58
   2c0f4:	mov	fp, r3
   2c0f6:	ldr	r2, [sp, #8]
   2c0f8:	add	r1, sp, #128	; 0x80
   2c0fa:	ldr	r3, [sp, #16]
   2c0fc:	ldr	r7, [r4, #0]
   2c0fe:	adds	r3, r3, r2
   2c100:	ldr	r2, [sp, #12]
   2c102:	str	r3, [sp, #56]	; 0x38
   2c104:	ldr	r3, [sp, #20]
   2c106:	mov	r0, r7
   2c108:	ldr.w	r9, [r7, #92]	; 0x5c
   2c10c:	adcs	r3, r2
   2c10e:	ldr	r2, [r4, #32]
   2c110:	str	r3, [sp, #60]	; 0x3c
   2c112:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c116:	ldrb.w	r3, [sp, #136]	; 0x88
   2c11a:	ldr	r0, [pc, #560]	; (2c34c <btrfs_abort_transaction@@Base+0x1030>)
   2c11c:	sub.w	r2, r3, #200	; 0xc8
   2c120:	ldr	r1, [sp, #88]	; 0x58
   2c122:	negs	r3, r2
   2c124:	add	r0, pc
   2c126:	adcs	r3, r2
   2c128:	mov.w	r2, #502	; 0x1f6
   2c12c:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c130:	ldrd	r2, r3, [sp, #128]	; 0x80
   2c134:	strd	r2, r3, [sp, #24]
   2c138:	ldr	r1, [sp, #24]
   2c13a:	ldr.w	r3, [sp, #137]	; 0x89
   2c13e:	ldr.w	r2, [sp, #141]	; 0x8d
   2c142:	adds	r3, r3, r1
   2c144:	str	r3, [sp, #48]	; 0x30
   2c146:	ldr	r3, [sp, #28]
   2c148:	ldrd	r0, r1, [sp, #24]
   2c14c:	adc.w	r3, r2, r3
   2c150:	str	r3, [sp, #52]	; 0x34
   2c152:	ldrd	r2, r3, [sp, #16]
   2c156:	cmp	r3, r1
   2c158:	it	eq
   2c15a:	cmpeq	r2, r0
   2c15c:	bcc.n	2c25a <btrfs_abort_transaction@@Base+0xf3e>
   2c15e:	ldrd	r0, r1, [sp, #48]	; 0x30
   2c162:	cmp	r3, r1
   2c164:	it	eq
   2c166:	cmpeq	r2, r0
   2c168:	ite	cc
   2c16a:	movcc	r3, #1
   2c16c:	movcs	r3, #0
   2c16e:	ldr	r0, [pc, #480]	; (2c350 <btrfs_abort_transaction@@Base+0x1034>)
   2c170:	mov.w	r2, #506	; 0x1fa
   2c174:	mov	r1, fp
   2c176:	add	r0, pc
   2c178:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c17c:	ldrd	r2, r3, [sp, #24]
   2c180:	ldrd	r0, r1, [sp, #56]	; 0x38
   2c184:	cmp	r3, r1
   2c186:	mov	r1, fp
   2c188:	it	eq
   2c18a:	cmpeq	r2, r0
   2c18c:	ldr	r0, [pc, #452]	; (2c354 <btrfs_abort_transaction@@Base+0x1038>)
   2c18e:	movw	r2, #507	; 0x1fb
   2c192:	ite	cc
   2c194:	movcc	r3, #1
   2c196:	movcs	r3, #0
   2c198:	add	r0, pc
   2c19a:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c19e:	ldrd	r2, r3, [sp, #56]	; 0x38
   2c1a2:	strd	r2, r3, [sp, #32]
   2c1a6:	ldrd	r0, r1, [sp, #32]
   2c1aa:	ldrd	r2, r3, [sp, #48]	; 0x30
   2c1ae:	cmp	r3, r1
   2c1b0:	ldr	r1, [sp, #16]
   2c1b2:	it	eq
   2c1b4:	cmpeq	r2, r0
   2c1b6:	it	cc
   2c1b8:	strdcc	r2, r3, [sp, #32]
   2c1bc:	ldr	r3, [r4, #32]
   2c1be:	movs	r2, #25
   2c1c0:	ldr	r0, [sp, #24]
   2c1c2:	mla	r3, r2, r3, r7
   2c1c6:	subs	r0, r1, r0
   2c1c8:	ldr	r1, [sp, #20]
   2c1ca:	ldr.w	r2, [r9, #388]	; 0x184
   2c1ce:	mov	ip, r1
   2c1d0:	ldr	r1, [sp, #28]
   2c1d2:	ldr.w	sl, [r3, #214]	; 0xd6
   2c1d6:	mov.w	r3, #0
   2c1da:	sbc.w	r1, ip, r1
   2c1de:	str	r2, [sp, #100]	; 0x64
   2c1e0:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2c1e4:	ldr	r1, [sp, #32]
   2c1e6:	ldr	r2, [sp, #100]	; 0x64
   2c1e8:	movs	r3, #0
   2c1ea:	add.w	sl, sl, #101	; 0x65
   2c1ee:	mov	r9, r0
   2c1f0:	ldr	r0, [sp, #24]
   2c1f2:	subs	r0, r1, r0
   2c1f4:	ldr	r1, [sp, #36]	; 0x24
   2c1f6:	mov	ip, r1
   2c1f8:	ldr	r1, [sp, #28]
   2c1fa:	sbc.w	r1, ip, r1
   2c1fe:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2c202:	ldr	r2, [sp, #208]	; 0xd0
   2c204:	sub.w	r3, r0, r9
   2c208:	cbnz	r2, 2c25e <btrfs_abort_transaction@@Base+0xf42>
   2c20a:	mov	r2, r9
   2c20c:	mov	r1, sl
   2c20e:	mov	r0, r7
   2c210:	bl	1665a <extent_buffer_bitmap_set@@Base>
   2c214:	mov	r0, r7
   2c216:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2c21a:	ldr	r2, [sp, #32]
   2c21c:	ldr	r3, [sp, #16]
   2c21e:	ldr	r1, [sp, #36]	; 0x24
   2c220:	subs	r3, r3, r2
   2c222:	ldr	r2, [sp, #20]
   2c224:	sbc.w	r2, r2, r1
   2c228:	ldr	r1, [sp, #8]
   2c22a:	adds	r3, r1, r3
   2c22c:	str	r3, [sp, #8]
   2c22e:	ldr	r3, [sp, #12]
   2c230:	adc.w	r3, r2, r3
   2c234:	str	r3, [sp, #12]
   2c236:	ldrd	r2, r3, [sp, #8]
   2c23a:	orrs	r3, r2
   2c23c:	beq.n	2c26a <btrfs_abort_transaction@@Base+0xf4e>
   2c23e:	mov	r2, r4
   2c240:	mov	r1, r8
   2c242:	mov	r0, r6
   2c244:	bl	2b650 <btrfs_abort_transaction@@Base+0x334>
   2c248:	mov	r3, r0
   2c24a:	cmp	r0, #0
   2c24c:	bne.w	2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c250:	ldrd	r2, r3, [sp, #32]
   2c254:	strd	r2, r3, [sp, #16]
   2c258:	b.n	2c0f6 <btrfs_abort_transaction@@Base+0xdda>
   2c25a:	movs	r3, #0
   2c25c:	b.n	2c16e <btrfs_abort_transaction@@Base+0xe52>
   2c25e:	mov	r2, r9
   2c260:	mov	r1, sl
   2c262:	mov	r0, r7
   2c264:	bl	166a2 <extent_buffer_bitmap_clear@@Base>
   2c268:	b.n	2c214 <btrfs_abort_transaction@@Base+0xef8>
   2c26a:	ldr	r2, [sp, #92]	; 0x5c
   2c26c:	ldr	r3, [sp, #192]	; 0xc0
   2c26e:	ldrd	r1, r0, [r5, #40]	; 0x28
   2c272:	adds	r3, r3, r2
   2c274:	ldr	r2, [sp, #196]	; 0xc4
   2c276:	str	r3, [sp, #40]	; 0x28
   2c278:	ldr	r3, [sp, #96]	; 0x60
   2c27a:	adc.w	r3, r2, r3
   2c27e:	str	r3, [sp, #44]	; 0x2c
   2c280:	ldr.w	r3, [r5, #49]	; 0x31
   2c284:	ldr.w	r2, [r5, #53]	; 0x35
   2c288:	adds	r3, r3, r1
   2c28a:	str	r3, [sp, #72]	; 0x48
   2c28c:	adc.w	r3, r2, r0
   2c290:	str	r3, [sp, #76]	; 0x4c
   2c292:	ldrd	r0, r1, [sp, #72]	; 0x48
   2c296:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c29a:	cmp	r3, r1
   2c29c:	it	eq
   2c29e:	cmpeq	r2, r0
   2c2a0:	bcs.n	2c322 <btrfs_abort_transaction@@Base+0x1006>
   2c2a2:	ldr	r2, [r4, #32]
   2c2a4:	add	r1, sp, #108	; 0x6c
   2c2a6:	ldr	r0, [r4, #0]
   2c2a8:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c2ac:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2c2b0:	ldr.w	r2, [sp, #117]	; 0x75
   2c2b4:	ldr.w	r1, [sp, #121]	; 0x79
   2c2b8:	adds	r3, r3, r2
   2c2ba:	str	r3, [sp, #80]	; 0x50
   2c2bc:	adc.w	r3, r0, r1
   2c2c0:	str	r3, [sp, #84]	; 0x54
   2c2c2:	ldrd	r0, r1, [sp, #80]	; 0x50
   2c2c6:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c2ca:	cmp	r3, r1
   2c2cc:	it	eq
   2c2ce:	cmpeq	r2, r0
   2c2d0:	bcs.n	2c310 <btrfs_abort_transaction@@Base+0xff4>
   2c2d2:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c2d6:	mov	r0, r4
   2c2d8:	bl	2b516 <btrfs_abort_transaction@@Base+0x1fa>
   2c2dc:	ldr	r3, [sp, #68]	; 0x44
   2c2de:	ldr	r2, [sp, #208]	; 0xd0
   2c2e0:	subs	r3, #1
   2c2e2:	it	ne
   2c2e4:	movne	r3, #1
   2c2e6:	cbz	r2, 2c328 <btrfs_abort_transaction@@Base+0x100c>
   2c2e8:	cmp	r0, #1
   2c2ea:	ite	ne
   2c2ec:	negne	r3, r3
   2c2ee:	rsbeq	r3, r3, #1
   2c2f2:	mov	r0, r4
   2c2f4:	str	r3, [sp, #8]
   2c2f6:	bl	17e00 <btrfs_release_path@@Base>
   2c2fa:	ldr	r3, [sp, #8]
   2c2fc:	cmp	r3, #0
   2c2fe:	beq.w	2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c302:	mov	r2, r4
   2c304:	mov	r1, r5
   2c306:	mov	r0, r6
   2c308:	bl	2b700 <btrfs_abort_transaction@@Base+0x3e4>
   2c30c:	mov	r3, r0
   2c30e:	b.n	2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c310:	mov	r2, r4
   2c312:	mov	r1, r8
   2c314:	mov	r0, r6
   2c316:	bl	2b650 <btrfs_abort_transaction@@Base+0x334>
   2c31a:	mov	r3, r0
   2c31c:	cmp	r0, #0
   2c31e:	beq.n	2c2d2 <btrfs_abort_transaction@@Base+0xfb6>
   2c320:	b.n	2c07e <btrfs_abort_transaction@@Base+0xd62>
   2c322:	mov.w	r0, #4294967295	; 0xffffffff
   2c326:	b.n	2c2dc <btrfs_abort_transaction@@Base+0xfc0>
   2c328:	cmp	r0, #1
   2c32a:	it	eq
   2c32c:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2c330:	b.n	2c2f2 <btrfs_abort_transaction@@Base+0xfd6>
   2c332:	mov	r0, r3
   2c334:	add	sp, #156	; 0x9c
   2c336:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c33a:	nop
   2c33c:	ldrh	r6, [r1, #46]	; 0x2e
   2c33e:	movs	r3, r0
   2c340:	lsls	r4, r4, #8
   2c342:	movs	r0, r0
   2c344:	ldrh	r6, [r0, #40]	; 0x28
   2c346:	movs	r3, r0
   2c348:	ldr	r0, [pc, #20]	; (2c360 <btrfs_abort_transaction@@Base+0x1044>)
   2c34a:	movs	r1, r0
   2c34c:	orrs	r5, r0
   2c34e:	movs	r1, r0
   2c350:	add	r2, r2
   2c352:	movs	r1, r0
   2c354:	add	r4, r3
   2c356:	movs	r1, r0
   2c358:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c35c:	sub	sp, #116	; 0x74
   2c35e:	mov	r5, r2
   2c360:	ldr	r2, [pc, #1000]	; (2c74c <btrfs_abort_transaction@@Base+0x1430>)
   2c362:	ldr	r3, [sp, #160]	; 0xa0
   2c364:	mov	r6, r1
   2c366:	add	r2, pc
   2c368:	ldr	r1, [r0, #0]
   2c36a:	mov.w	r8, #0
   2c36e:	mov	r7, r0
   2c370:	str	r3, [sp, #48]	; 0x30
   2c372:	mov	r0, r8
   2c374:	ldr	r3, [sp, #164]	; 0xa4
   2c376:	str	r3, [sp, #52]	; 0x34
   2c378:	ldr	r3, [pc, #980]	; (2c750 <btrfs_abort_transaction@@Base+0x1434>)
   2c37a:	ldr	r3, [r2, r3]
   2c37c:	mov	r2, r6
   2c37e:	ldr	r3, [r3, #0]
   2c380:	str	r3, [sp, #108]	; 0x6c
   2c382:	mov.w	r3, #0
   2c386:	str.w	r8, [sp]
   2c38a:	mov	r3, r5
   2c38c:	ldr	r1, [r1, #48]	; 0x30
   2c38e:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2c392:	cmn.w	r0, #4096	; 0x1000
   2c396:	bls.n	2c3b0 <btrfs_abort_transaction@@Base+0x1094>
   2c398:	mov	r4, r0
   2c39a:	ldr	r2, [pc, #952]	; (2c754 <btrfs_abort_transaction@@Base+0x1438>)
   2c39c:	ldr	r3, [pc, #944]	; (2c750 <btrfs_abort_transaction@@Base+0x1434>)
   2c39e:	add	r2, pc
   2c3a0:	ldr	r3, [r2, r3]
   2c3a2:	ldr	r2, [r3, #0]
   2c3a4:	ldr	r3, [sp, #108]	; 0x6c
   2c3a6:	eors	r2, r3
   2c3a8:	beq.w	2c742 <btrfs_abort_transaction@@Base+0x1426>
   2c3ac:	blx	86b8 <__stack_chk_fail@plt>
   2c3b0:	ldr	r4, [r5, #0]
   2c3b2:	add	r4, r0
   2c3b4:	mov	r0, r5
   2c3b6:	ldr	r4, [r4, #100]	; 0x64
   2c3b8:	bl	17e00 <btrfs_release_path@@Base>
   2c3bc:	lsls	r4, r4, #31
   2c3be:	bpl.n	2c3e0 <btrfs_abort_transaction@@Base+0x10c4>
   2c3c0:	ldr	r3, [sp, #48]	; 0x30
   2c3c2:	mov	r2, r5
   2c3c4:	mov	r1, r6
   2c3c6:	mov	r0, r7
   2c3c8:	str.w	r8, [sp, #16]
   2c3cc:	str	r3, [sp, #8]
   2c3ce:	ldr	r3, [sp, #52]	; 0x34
   2c3d0:	str	r3, [sp, #12]
   2c3d2:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c3d6:	strd	r3, r4, [sp]
   2c3da:	bl	2bfac <btrfs_abort_transaction@@Base+0xc90>
   2c3de:	b.n	2c398 <btrfs_abort_transaction@@Base+0x107c>
   2c3e0:	ldr	r3, [r7, #0]
   2c3e2:	ldrd	r0, r1, [sp, #152]	; 0x98
   2c3e6:	ldr.w	sl, [r3, #48]	; 0x30
   2c3ea:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c3ee:	strd	r3, r4, [sp, #88]	; 0x58
   2c3f2:	movs	r3, #199	; 0xc7
   2c3f4:	strb.w	r3, [sp, #96]	; 0x60
   2c3f8:	ldr	r3, [sp, #48]	; 0x30
   2c3fa:	str.w	r3, [sp, #97]	; 0x61
   2c3fe:	ldr	r3, [sp, #52]	; 0x34
   2c400:	str.w	r3, [sp, #101]	; 0x65
   2c404:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c408:	cmp	r1, r3
   2c40a:	it	eq
   2c40c:	cmpeq	r0, r2
   2c40e:	beq.n	2c494 <btrfs_abort_transaction@@Base+0x1178>
   2c410:	ldr	r3, [sp, #152]	; 0x98
   2c412:	add.w	r8, sp, #68	; 0x44
   2c416:	mov.w	r1, #4294967295	; 0xffffffff
   2c41a:	mov	r0, r7
   2c41c:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2c420:	ldr	r3, [sp, #156]	; 0x9c
   2c422:	strb.w	r1, [sp, #77]	; 0x4d
   2c426:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2c42a:	str	r1, [sp, #0]
   2c42c:	strd	r2, r3, [sp, #68]	; 0x44
   2c430:	mov	r1, sl
   2c432:	movs	r2, #255	; 0xff
   2c434:	mov	r3, r5
   2c436:	strb.w	r2, [sp, #76]	; 0x4c
   2c43a:	strb.w	r2, [sp, #78]	; 0x4e
   2c43e:	strb.w	r2, [sp, #79]	; 0x4f
   2c442:	strb.w	r2, [sp, #80]	; 0x50
   2c446:	strb.w	r2, [sp, #81]	; 0x51
   2c44a:	strb.w	r2, [sp, #82]	; 0x52
   2c44e:	strb.w	r2, [sp, #83]	; 0x53
   2c452:	strb.w	r2, [sp, #84]	; 0x54
   2c456:	mov	r2, r8
   2c458:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2c45c:	mov	r4, r0
   2c45e:	cmp	r0, #0
   2c460:	bne.n	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c462:	ldr	r2, [r5, #32]
   2c464:	mov	r1, r8
   2c466:	ldr	r0, [r5, #0]
   2c468:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c46c:	ldrb.w	r3, [sp, #76]	; 0x4c
   2c470:	cmp	r3, #199	; 0xc7
   2c472:	beq.n	2c49a <btrfs_abort_transaction@@Base+0x117e>
   2c474:	sub.w	r0, r3, #198	; 0xc6
   2c478:	ldr	r1, [pc, #732]	; (2c758 <btrfs_abort_transaction@@Base+0x143c>)
   2c47a:	negs	r3, r0
   2c47c:	movw	r2, #857	; 0x359
   2c480:	adcs	r3, r0
   2c482:	ldr	r0, [pc, #728]	; (2c75c <btrfs_abort_transaction@@Base+0x1440>)
   2c484:	add	r1, pc
   2c486:	add	r0, pc
   2c488:	adds	r1, #123	; 0x7b
   2c48a:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c48e:	mov	r0, r5
   2c490:	bl	17e00 <btrfs_release_path@@Base>
   2c494:	mov.w	fp, #1
   2c498:	b.n	2c56a <btrfs_abort_transaction@@Base+0x124e>
   2c49a:	ldrd	r8, r9, [sp, #68]	; 0x44
   2c49e:	ldr.w	r3, [sp, #77]	; 0x4d
   2c4a2:	ldr.w	r2, [sp, #81]	; 0x51
   2c4a6:	adds.w	r3, r3, r8
   2c4aa:	str	r3, [sp, #32]
   2c4ac:	adc.w	r3, r2, r9
   2c4b0:	str	r3, [sp, #36]	; 0x24
   2c4b2:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c4b6:	cmp	r9, r3
   2c4b8:	it	eq
   2c4ba:	cmpeq	r8, r2
   2c4bc:	bcc.w	2c65c <btrfs_abort_transaction@@Base+0x1340>
   2c4c0:	ldrd	r0, r1, [sp, #32]
   2c4c4:	cmp	r3, r1
   2c4c6:	it	eq
   2c4c8:	cmpeq	r2, r0
   2c4ca:	ite	cc
   2c4cc:	movcc	r3, #1
   2c4ce:	movcs	r3, #0
   2c4d0:	ldr	r1, [pc, #652]	; (2c760 <btrfs_abort_transaction@@Base+0x1444>)
   2c4d2:	mov.w	r2, #864	; 0x360
   2c4d6:	ldr	r0, [pc, #652]	; (2c764 <btrfs_abort_transaction@@Base+0x1448>)
   2c4d8:	add	r1, pc
   2c4da:	adds	r1, #123	; 0x7b
   2c4dc:	add	r0, pc
   2c4de:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c4e2:	ldrd	r2, r3, [sp, #152]	; 0x98
   2c4e6:	cmp	r9, r3
   2c4e8:	it	eq
   2c4ea:	cmpeq	r8, r2
   2c4ec:	bcs.n	2c502 <btrfs_abort_transaction@@Base+0x11e6>
   2c4ee:	mov	r4, r3
   2c4f0:	mov	r3, r2
   2c4f2:	ldrd	r1, r2, [sp, #32]
   2c4f6:	cmp	r4, r2
   2c4f8:	it	eq
   2c4fa:	cmpeq	r3, r1
   2c4fc:	ite	cs
   2c4fe:	movcs	r4, #1
   2c500:	movcc	r4, #0
   2c502:	ldr	r1, [pc, #612]	; (2c768 <btrfs_abort_transaction@@Base+0x144c>)
   2c504:	mov	r3, r4
   2c506:	ldr	r0, [pc, #612]	; (2c76c <btrfs_abort_transaction@@Base+0x1450>)
   2c508:	movw	r2, #866	; 0x362
   2c50c:	add	r1, pc
   2c50e:	adds	r1, #123	; 0x7b
   2c510:	add	r0, pc
   2c512:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c516:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c51a:	ldrd	r1, r2, [sp, #32]
   2c51e:	cmp	r4, r2
   2c520:	mov.w	r4, #1
   2c524:	it	eq
   2c526:	cmpeq	r3, r1
   2c528:	bne.n	2c562 <btrfs_abort_transaction@@Base+0x1246>
   2c52a:	str	r4, [sp, #0]
   2c52c:	mov	r2, r5
   2c52e:	ldr	r3, [r5, #32]
   2c530:	mov	r1, sl
   2c532:	mov	r0, r7
   2c534:	bl	1b3a0 <btrfs_del_items@@Base>
   2c538:	mov	r4, r0
   2c53a:	cmp	r0, #0
   2c53c:	bne.w	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c540:	ldr.w	r3, [sp, #97]	; 0x61
   2c544:	ldr.w	r1, [sp, #77]	; 0x4d
   2c548:	ldr.w	r2, [sp, #101]	; 0x65
   2c54c:	ldr.w	r0, [sp, #81]	; 0x51
   2c550:	adds	r3, r3, r1
   2c552:	strd	r8, r9, [sp, #88]	; 0x58
   2c556:	adc.w	r2, r0, r2
   2c55a:	str.w	r3, [sp, #97]	; 0x61
   2c55e:	str.w	r2, [sp, #101]	; 0x65
   2c562:	mov	r0, r5
   2c564:	mov	fp, r4
   2c566:	bl	17e00 <btrfs_release_path@@Base>
   2c56a:	ldr	r2, [sp, #48]	; 0x30
   2c56c:	ldr	r3, [sp, #152]	; 0x98
   2c56e:	ldrd	r1, r0, [r6, #40]	; 0x28
   2c572:	adds	r3, r3, r2
   2c574:	ldr	r2, [sp, #156]	; 0x9c
   2c576:	str	r3, [sp, #24]
   2c578:	ldr	r3, [sp, #52]	; 0x34
   2c57a:	adc.w	r3, r2, r3
   2c57e:	str	r3, [sp, #28]
   2c580:	ldr.w	r3, [r6, #49]	; 0x31
   2c584:	ldr.w	r2, [r6, #53]	; 0x35
   2c588:	adds	r3, r3, r1
   2c58a:	str	r3, [sp, #56]	; 0x38
   2c58c:	adc.w	r3, r2, r0
   2c590:	str	r3, [sp, #60]	; 0x3c
   2c592:	ldrd	r1, r2, [sp, #56]	; 0x38
   2c596:	ldrd	r3, r4, [sp, #24]
   2c59a:	cmp	r4, r2
   2c59c:	it	eq
   2c59e:	cmpeq	r3, r1
   2c5a0:	beq.n	2c620 <btrfs_abort_transaction@@Base+0x1304>
   2c5a2:	ldr	r3, [sp, #24]
   2c5a4:	add.w	r8, sp, #68	; 0x44
   2c5a8:	movs	r2, #255	; 0xff
   2c5aa:	mov.w	r1, #4294967295	; 0xffffffff
   2c5ae:	strb.w	r2, [sp, #76]	; 0x4c
   2c5b2:	mov	r0, r7
   2c5b4:	str	r3, [sp, #68]	; 0x44
   2c5b6:	ldr	r3, [sp, #28]
   2c5b8:	strb.w	r1, [sp, #77]	; 0x4d
   2c5bc:	strb.w	r2, [sp, #78]	; 0x4e
   2c5c0:	str	r3, [sp, #72]	; 0x48
   2c5c2:	mov	r3, r5
   2c5c4:	strb.w	r2, [sp, #79]	; 0x4f
   2c5c8:	strb.w	r2, [sp, #80]	; 0x50
   2c5cc:	strb.w	r2, [sp, #81]	; 0x51
   2c5d0:	strb.w	r2, [sp, #82]	; 0x52
   2c5d4:	strb.w	r2, [sp, #83]	; 0x53
   2c5d8:	strb.w	r2, [sp, #84]	; 0x54
   2c5dc:	mov	r2, r8
   2c5de:	str	r1, [sp, #0]
   2c5e0:	mov	r1, sl
   2c5e2:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2c5e6:	mov	r4, r0
   2c5e8:	cmp	r0, #0
   2c5ea:	bne.w	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c5ee:	ldr	r2, [r5, #32]
   2c5f0:	mov	r1, r8
   2c5f2:	ldr	r0, [r5, #0]
   2c5f4:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c5f8:	ldrb.w	r3, [sp, #76]	; 0x4c
   2c5fc:	cmp	r3, #199	; 0xc7
   2c5fe:	beq.n	2c660 <btrfs_abort_transaction@@Base+0x1344>
   2c600:	sub.w	r1, r3, #198	; 0xc6
   2c604:	ldr	r0, [pc, #360]	; (2c770 <btrfs_abort_transaction@@Base+0x1454>)
   2c606:	negs	r3, r1
   2c608:	mov.w	r2, #896	; 0x380
   2c60c:	adcs	r3, r1
   2c60e:	ldr	r1, [pc, #356]	; (2c774 <btrfs_abort_transaction@@Base+0x1458>)
   2c610:	add	r0, pc
   2c612:	add	r1, pc
   2c614:	adds	r1, #123	; 0x7b
   2c616:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c61a:	mov	r0, r5
   2c61c:	bl	17e00 <btrfs_release_path@@Base>
   2c620:	movs	r3, #0
   2c622:	mov	r2, r5
   2c624:	str	r3, [sp, #64]	; 0x40
   2c626:	mov	r1, sl
   2c628:	movs	r3, #1
   2c62a:	mov	r0, r7
   2c62c:	str	r3, [sp, #4]
   2c62e:	add	r3, sp, #64	; 0x40
   2c630:	str	r3, [sp, #0]
   2c632:	add	r3, sp, #88	; 0x58
   2c634:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2c638:	mov	r4, r0
   2c63a:	cmp	r0, #0
   2c63c:	bne.w	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c640:	mov	r0, r5
   2c642:	bl	17e00 <btrfs_release_path@@Base>
   2c646:	cmp.w	fp, #0
   2c64a:	beq.w	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c64e:	mov	r3, fp
   2c650:	mov	r2, r5
   2c652:	mov	r1, r6
   2c654:	mov	r0, r7
   2c656:	bl	2b700 <btrfs_abort_transaction@@Base+0x3e4>
   2c65a:	b.n	2c398 <btrfs_abort_transaction@@Base+0x107c>
   2c65c:	mov	r3, r4
   2c65e:	b.n	2c4d0 <btrfs_abort_transaction@@Base+0x11b4>
   2c660:	ldrd	r8, r9, [sp, #68]	; 0x44
   2c664:	ldr.w	r3, [sp, #77]	; 0x4d
   2c668:	ldr.w	r2, [sp, #81]	; 0x51
   2c66c:	adds.w	r3, r3, r8
   2c670:	str	r3, [sp, #40]	; 0x28
   2c672:	adc.w	r3, r2, r9
   2c676:	str	r3, [sp, #44]	; 0x2c
   2c678:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c67c:	cmp	r9, r3
   2c67e:	it	eq
   2c680:	cmpeq	r8, r2
   2c682:	bcc.n	2c73a <btrfs_abort_transaction@@Base+0x141e>
   2c684:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c688:	cmp	r3, r1
   2c68a:	it	eq
   2c68c:	cmpeq	r2, r0
   2c68e:	ite	cc
   2c690:	movcc	r3, #1
   2c692:	movcs	r3, #0
   2c694:	ldr	r1, [pc, #224]	; (2c778 <btrfs_abort_transaction@@Base+0x145c>)
   2c696:	movw	r2, #903	; 0x387
   2c69a:	ldr	r0, [pc, #224]	; (2c77c <btrfs_abort_transaction@@Base+0x1460>)
   2c69c:	add	r1, pc
   2c69e:	adds	r1, #123	; 0x7b
   2c6a0:	add	r0, pc
   2c6a2:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c6a6:	ldrd	r2, r3, [sp, #152]	; 0x98
   2c6aa:	cmp	r9, r3
   2c6ac:	it	eq
   2c6ae:	cmpeq	r8, r2
   2c6b0:	bcs.n	2c6be <btrfs_abort_transaction@@Base+0x13a2>
   2c6b2:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c6b6:	cmp	r3, r1
   2c6b8:	it	eq
   2c6ba:	cmpeq	r2, r0
   2c6bc:	bcs.n	2c73e <btrfs_abort_transaction@@Base+0x1422>
   2c6be:	ldrd	r2, r3, [sp, #24]
   2c6c2:	cmp	r9, r3
   2c6c4:	it	eq
   2c6c6:	cmpeq	r8, r2
   2c6c8:	bcc.n	2c6de <btrfs_abort_transaction@@Base+0x13c2>
   2c6ca:	mov	r4, r3
   2c6cc:	mov	r3, r2
   2c6ce:	ldrd	r1, r2, [sp, #40]	; 0x28
   2c6d2:	cmp	r4, r2
   2c6d4:	it	eq
   2c6d6:	cmpeq	r3, r1
   2c6d8:	ite	cc
   2c6da:	movcc	r4, #1
   2c6dc:	movcs	r4, #0
   2c6de:	ldr	r1, [pc, #160]	; (2c780 <btrfs_abort_transaction@@Base+0x1464>)
   2c6e0:	mov	r3, r4
   2c6e2:	ldr	r0, [pc, #160]	; (2c784 <btrfs_abort_transaction@@Base+0x1468>)
   2c6e4:	movw	r2, #905	; 0x389
   2c6e8:	add	r1, pc
   2c6ea:	adds	r1, #123	; 0x7b
   2c6ec:	add	r0, pc
   2c6ee:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c6f2:	ldrd	r3, r4, [sp, #24]
   2c6f6:	cmp	r4, r9
   2c6f8:	it	eq
   2c6fa:	cmpeq	r3, r8
   2c6fc:	bne.n	2c61a <btrfs_abort_transaction@@Base+0x12fe>
   2c6fe:	movs	r3, #1
   2c700:	mov	r2, r5
   2c702:	str	r3, [sp, #0]
   2c704:	mov	r1, sl
   2c706:	ldr	r3, [r5, #32]
   2c708:	mov	r0, r7
   2c70a:	bl	1b3a0 <btrfs_del_items@@Base>
   2c70e:	mov	r4, r0
   2c710:	cmp	r0, #0
   2c712:	bne.w	2c39a <btrfs_abort_transaction@@Base+0x107e>
   2c716:	ldr.w	r3, [sp, #97]	; 0x61
   2c71a:	add.w	fp, fp, #4294967295	; 0xffffffff
   2c71e:	ldr.w	r1, [sp, #77]	; 0x4d
   2c722:	ldr.w	r2, [sp, #101]	; 0x65
   2c726:	ldr.w	r0, [sp, #81]	; 0x51
   2c72a:	adds	r3, r3, r1
   2c72c:	str.w	r3, [sp, #97]	; 0x61
   2c730:	adc.w	r2, r0, r2
   2c734:	str.w	r2, [sp, #101]	; 0x65
   2c738:	b.n	2c61a <btrfs_abort_transaction@@Base+0x12fe>
   2c73a:	mov	r3, r4
   2c73c:	b.n	2c694 <btrfs_abort_transaction@@Base+0x1378>
   2c73e:	movs	r4, #1
   2c740:	b.n	2c6de <btrfs_abort_transaction@@Base+0x13c2>
   2c742:	mov	r0, r4
   2c744:	add	sp, #116	; 0x74
   2c746:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c74a:	nop
   2c74c:	ldrh	r2, [r4, #16]
   2c74e:	movs	r3, r0
   2c750:	lsls	r4, r4, #8
   2c752:	movs	r0, r0
   2c754:	ldrh	r2, [r5, #14]
   2c756:	movs	r3, r0
   2c758:	add	r7, sp
   2c75a:	movs	r1, r0
   2c75c:	adcs	r0, r0
   2c75e:	movs	r1, r0
   2c760:	add	r3, r3
   2c762:	movs	r1, r0
   2c764:	asrs	r0, r2
   2c766:	movs	r1, r0
   2c768:	mvns	r7, r4
   2c76a:	movs	r1, r0
   2c76c:	asrs	r6, r5
   2c76e:	movs	r1, r0
   2c770:	subs	r7, #182	; 0xb6
   2c772:	movs	r1, r0
   2c774:	cmn	r1, r4
   2c776:	movs	r1, r0
   2c778:	negs	r7, r2
   2c77a:	movs	r1, r0
   2c77c:	subs	r7, #76	; 0x4c
   2c77e:	movs	r1, r0
   2c780:	tst	r3, r1
   2c782:	movs	r1, r0
   2c784:	subs	r7, #124	; 0x7c
   2c786:	movs	r1, r0

0002c788 <remove_from_free_space_tree@@Base>:
   2c788:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c78c:	sub	sp, #92	; 0x5c
   2c78e:	movs	r4, #0
   2c790:	mov	r6, r0
   2c792:	strd	r2, r3, [sp, #24]
   2c796:	ldrd	sl, r3, [sp, #128]	; 0x80
   2c79a:	ldr	r2, [pc, #616]	; (2ca04 <remove_from_free_space_tree@@Base+0x27c>)
   2c79c:	str	r3, [sp, #52]	; 0x34
   2c79e:	add	r2, pc
   2c7a0:	ldr	r3, [pc, #612]	; (2ca08 <remove_from_free_space_tree@@Base+0x280>)
   2c7a2:	ldr	r3, [r2, r3]
   2c7a4:	ldr	r3, [r3, #0]
   2c7a6:	str	r3, [sp, #84]	; 0x54
   2c7a8:	mov.w	r3, #0
   2c7ac:	ldr	r3, [r0, #0]
   2c7ae:	ldr.w	r3, [r3, #308]	; 0x134
   2c7b2:	ldr.w	r1, [r3, #180]	; 0xb4
   2c7b6:	mov	r3, r4
   2c7b8:	and.w	r2, r1, #1
   2c7bc:	orrs	r3, r2
   2c7be:	beq.w	2c972 <remove_from_free_space_tree@@Base+0x1ea>
   2c7c2:	bl	17df8 <btrfs_alloc_path@@Base>
   2c7c6:	mov	r5, r0
   2c7c8:	cmp	r0, #0
   2c7ca:	beq.w	2c9f6 <remove_from_free_space_tree@@Base+0x26e>
   2c7ce:	ldrd	r2, r3, [sp, #24]
   2c7d2:	ldr	r0, [r6, #0]
   2c7d4:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   2c7d8:	mov	r8, r0
   2c7da:	cbnz	r0, 2c7ee <remove_from_free_space_tree@@Base+0x66>
   2c7dc:	ldr	r1, [pc, #556]	; (2ca0c <remove_from_free_space_tree@@Base+0x284>)
   2c7de:	movw	r2, #795	; 0x31b
   2c7e2:	ldr	r0, [pc, #556]	; (2ca10 <remove_from_free_space_tree@@Base+0x288>)
   2c7e4:	add	r1, pc
   2c7e6:	adds	r1, #145	; 0x91
   2c7e8:	add	r0, pc
   2c7ea:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2c7ee:	ldr	r1, [r6, #0]
   2c7f0:	mov	r2, r0
   2c7f2:	str	r4, [sp, #0]
   2c7f4:	mov	r3, r5
   2c7f6:	mov	r0, r4
   2c7f8:	ldr	r1, [r1, #48]	; 0x30
   2c7fa:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2c7fe:	cmn.w	r0, #4096	; 0x1000
   2c802:	bls.n	2c808 <remove_from_free_space_tree@@Base+0x80>
   2c804:	mov	r4, r0
   2c806:	b.n	2c962 <remove_from_free_space_tree@@Base+0x1da>
   2c808:	ldr	r4, [r5, #0]
   2c80a:	add	r4, r0
   2c80c:	mov	r0, r5
   2c80e:	ldr	r4, [r4, #100]	; 0x64
   2c810:	bl	17e00 <btrfs_release_path@@Base>
   2c814:	lsls	r0, r4, #31
   2c816:	bpl.n	2c838 <remove_from_free_space_tree@@Base+0xb0>
   2c818:	movs	r3, #1
   2c81a:	str	r3, [sp, #16]
   2c81c:	ldr	r3, [sp, #52]	; 0x34
   2c81e:	mov	r2, r5
   2c820:	mov	r1, r8
   2c822:	mov	r0, r6
   2c824:	str.w	sl, [sp, #8]
   2c828:	str	r3, [sp, #12]
   2c82a:	ldrd	r3, r4, [sp, #24]
   2c82e:	strd	r3, r4, [sp]
   2c832:	bl	2bfac <btrfs_abort_transaction@@Base+0xc90>
   2c836:	b.n	2c804 <remove_from_free_space_tree@@Base+0x7c>
   2c838:	ldr	r3, [r6, #0]
   2c83a:	add.w	r7, sp, #73	; 0x49
   2c83e:	add.w	fp, sp, #64	; 0x40
   2c842:	mov.w	r2, #4294967295	; 0xffffffff
   2c846:	mov	r0, r6
   2c848:	strb.w	r2, [sp, #73]	; 0x49
   2c84c:	ldr.w	r9, [r3, #48]	; 0x30
   2c850:	ldrd	r3, r4, [sp, #24]
   2c854:	mov	r1, r9
   2c856:	strd	r3, r4, [sp, #64]	; 0x40
   2c85a:	movs	r3, #255	; 0xff
   2c85c:	strb	r3, [r7, #1]
   2c85e:	strb	r3, [r7, #2]
   2c860:	strb	r3, [r7, #3]
   2c862:	strb	r3, [r7, #4]
   2c864:	strb	r3, [r7, #5]
   2c866:	strb	r3, [r7, #6]
   2c868:	strb	r3, [r7, #7]
   2c86a:	strb.w	r3, [sp, #72]	; 0x48
   2c86e:	mov	r3, r5
   2c870:	str	r2, [sp, #0]
   2c872:	mov	r2, fp
   2c874:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2c878:	mov	r4, r0
   2c87a:	cmp	r0, #0
   2c87c:	bne.n	2c962 <remove_from_free_space_tree@@Base+0x1da>
   2c87e:	ldr	r3, [sp, #24]
   2c880:	mov	r1, fp
   2c882:	ldr	r2, [sp, #28]
   2c884:	adds.w	r3, r3, sl
   2c888:	str	r3, [sp, #32]
   2c88a:	ldr	r3, [sp, #52]	; 0x34
   2c88c:	ldr	r0, [r5, #0]
   2c88e:	adc.w	r3, r2, r3
   2c892:	ldr	r2, [r5, #32]
   2c894:	str	r3, [sp, #36]	; 0x24
   2c896:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2c89a:	ldrb.w	r3, [sp, #72]	; 0x48
   2c89e:	movw	r2, #691	; 0x2b3
   2c8a2:	ldr	r0, [pc, #368]	; (2ca14 <remove_from_free_space_tree@@Base+0x28c>)
   2c8a4:	sub.w	r1, r3, #199	; 0xc7
   2c8a8:	negs	r3, r1
   2c8aa:	add	r0, pc
   2c8ac:	adcs	r3, r1
   2c8ae:	ldr	r1, [pc, #360]	; (2ca18 <remove_from_free_space_tree@@Base+0x290>)
   2c8b0:	add	r1, pc
   2c8b2:	adds	r1, #173	; 0xad
   2c8b4:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c8b8:	ldrd	sl, fp, [sp, #64]	; 0x40
   2c8bc:	ldr.w	r3, [sp, #73]	; 0x49
   2c8c0:	ldr.w	r2, [sp, #77]	; 0x4d
   2c8c4:	adds.w	r3, r3, sl
   2c8c8:	str	r3, [sp, #40]	; 0x28
   2c8ca:	adc.w	r3, r2, fp
   2c8ce:	str	r3, [sp, #44]	; 0x2c
   2c8d0:	ldrd	r2, r3, [sp, #24]
   2c8d4:	cmp	r3, fp
   2c8d6:	it	eq
   2c8d8:	cmpeq	r2, sl
   2c8da:	bcc.n	2c8f0 <remove_from_free_space_tree@@Base+0x168>
   2c8dc:	ldrd	r3, r4, [sp, #40]	; 0x28
   2c8e0:	ldrd	r1, r2, [sp, #32]
   2c8e4:	cmp	r4, r2
   2c8e6:	it	eq
   2c8e8:	cmpeq	r3, r1
   2c8ea:	ite	cs
   2c8ec:	movcs	r4, #1
   2c8ee:	movcc	r4, #0
   2c8f0:	ldr	r1, [pc, #296]	; (2ca1c <remove_from_free_space_tree@@Base+0x294>)
   2c8f2:	mov	r3, r4
   2c8f4:	ldr	r0, [pc, #296]	; (2ca20 <remove_from_free_space_tree@@Base+0x298>)
   2c8f6:	movw	r2, #695	; 0x2b7
   2c8fa:	add	r1, pc
   2c8fc:	adds	r1, #173	; 0xad
   2c8fe:	add	r0, pc
   2c900:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2c904:	movs	r3, #1
   2c906:	mov	r2, r5
   2c908:	str	r3, [sp, #0]
   2c90a:	mov	r1, r9
   2c90c:	ldr	r3, [r5, #32]
   2c90e:	mov	r0, r6
   2c910:	bl	1b3a0 <btrfs_del_items@@Base>
   2c914:	mov	r4, r0
   2c916:	cbnz	r0, 2c962 <remove_from_free_space_tree@@Base+0x1da>
   2c918:	ldrd	r2, r3, [sp, #24]
   2c91c:	cmp	fp, r3
   2c91e:	it	eq
   2c920:	cmpeq	sl, r2
   2c922:	bcs.n	2c986 <remove_from_free_space_tree@@Base+0x1fe>
   2c924:	movs	r3, #199	; 0xc7
   2c926:	strb.w	r3, [sp, #72]	; 0x48
   2c92a:	ldr	r3, [sp, #24]
   2c92c:	mov	r0, r5
   2c92e:	strd	sl, fp, [sp, #64]	; 0x40
   2c932:	subs.w	r2, r3, sl
   2c936:	ldr	r3, [sp, #28]
   2c938:	str.w	r2, [sp, #73]	; 0x49
   2c93c:	sbc.w	r3, r3, fp
   2c940:	str.w	r3, [sp, #77]	; 0x4d
   2c944:	bl	17e00 <btrfs_release_path@@Base>
   2c948:	movs	r3, #1
   2c94a:	mov	r2, r5
   2c94c:	str	r3, [sp, #4]
   2c94e:	mov	r1, r9
   2c950:	add	r3, sp, #60	; 0x3c
   2c952:	mov	r0, r6
   2c954:	str	r3, [sp, #0]
   2c956:	add	r3, sp, #64	; 0x40
   2c958:	str	r4, [sp, #60]	; 0x3c
   2c95a:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2c95e:	mov	r4, r0
   2c960:	cbz	r0, 2c98a <remove_from_free_space_tree@@Base+0x202>
   2c962:	mov	r0, r5
   2c964:	bl	17e26 <btrfs_free_path@@Base>
   2c968:	cbz	r4, 2c972 <remove_from_free_space_tree@@Base+0x1ea>
   2c96a:	mov	r1, r4
   2c96c:	mov	r0, r6
   2c96e:	bl	2b31c <btrfs_abort_transaction@@Base>
   2c972:	ldr	r2, [pc, #176]	; (2ca24 <remove_from_free_space_tree@@Base+0x29c>)
   2c974:	ldr	r3, [pc, #144]	; (2ca08 <remove_from_free_space_tree@@Base+0x280>)
   2c976:	add	r2, pc
   2c978:	ldr	r3, [r2, r3]
   2c97a:	ldr	r2, [r3, #0]
   2c97c:	ldr	r3, [sp, #84]	; 0x54
   2c97e:	eors	r2, r3
   2c980:	beq.n	2c9fc <remove_from_free_space_tree@@Base+0x274>
   2c982:	blx	86b8 <__stack_chk_fail@plt>
   2c986:	mov.w	r4, #4294967295	; 0xffffffff
   2c98a:	ldrd	r2, r3, [sp, #32]
   2c98e:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c992:	cmp	r3, r1
   2c994:	it	eq
   2c996:	cmpeq	r2, r0
   2c998:	bcs.n	2c9de <remove_from_free_space_tree@@Base+0x256>
   2c99a:	strd	r2, r3, [sp, #64]	; 0x40
   2c99e:	movs	r3, #199	; 0xc7
   2c9a0:	ldr	r2, [sp, #32]
   2c9a2:	mov	r0, r5
   2c9a4:	strb.w	r3, [sp, #72]	; 0x48
   2c9a8:	ldr	r3, [sp, #40]	; 0x28
   2c9aa:	ldr	r1, [sp, #36]	; 0x24
   2c9ac:	subs	r2, r3, r2
   2c9ae:	ldr	r3, [sp, #44]	; 0x2c
   2c9b0:	str.w	r2, [sp, #73]	; 0x49
   2c9b4:	sbc.w	r3, r3, r1
   2c9b8:	str	r3, [r7, #4]
   2c9ba:	bl	17e00 <btrfs_release_path@@Base>
   2c9be:	movs	r3, #0
   2c9c0:	mov	r2, r5
   2c9c2:	str	r3, [sp, #60]	; 0x3c
   2c9c4:	mov	r1, r9
   2c9c6:	movs	r3, #1
   2c9c8:	mov	r0, r6
   2c9ca:	str	r3, [sp, #4]
   2c9cc:	add	r3, sp, #60	; 0x3c
   2c9ce:	str	r3, [sp, #0]
   2c9d0:	add	r3, sp, #64	; 0x40
   2c9d2:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2c9d6:	cmp	r0, #0
   2c9d8:	bne.w	2c804 <remove_from_free_space_tree@@Base+0x7c>
   2c9dc:	adds	r4, #1
   2c9de:	mov	r0, r5
   2c9e0:	bl	17e00 <btrfs_release_path@@Base>
   2c9e4:	cmp	r4, #0
   2c9e6:	beq.n	2c962 <remove_from_free_space_tree@@Base+0x1da>
   2c9e8:	mov	r3, r4
   2c9ea:	mov	r2, r5
   2c9ec:	mov	r1, r8
   2c9ee:	mov	r0, r6
   2c9f0:	bl	2b700 <btrfs_abort_transaction@@Base+0x3e4>
   2c9f4:	b.n	2c804 <remove_from_free_space_tree@@Base+0x7c>
   2c9f6:	mvn.w	r4, #11
   2c9fa:	b.n	2c962 <remove_from_free_space_tree@@Base+0x1da>
   2c9fc:	mov	r0, r4
   2c9fe:	add	sp, #92	; 0x5c
   2ca00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca04:	strh	r2, [r5, #46]	; 0x2e
   2ca06:	movs	r3, r0
   2ca08:	lsls	r4, r4, #8
   2ca0a:	movs	r0, r0
   2ca0c:	asrs	r7, r1
   2ca0e:	movs	r1, r0
   2ca10:	ldc2	0, cr0, [sl], {0}
   2ca14:	subs	r6, #21
   2ca16:	movs	r1, r0
   2ca18:	eors	r3, r0
   2ca1a:	movs	r1, r0
   2ca1c:	subs	r7, #249	; 0xf9
   2ca1e:	movs	r1, r0
   2ca20:	subs	r5, #233	; 0xe9
   2ca22:	movs	r1, r0
   2ca24:	strh	r2, [r2, #32]
   2ca26:	movs	r3, r0

0002ca28 <add_to_free_space_tree@@Base>:
   2ca28:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2ca2c:	mov	r7, r3
   2ca2e:	ldr	r3, [r0, #0]
   2ca30:	mov	sl, r2
   2ca32:	movs	r4, #0
   2ca34:	mov	r5, r0
   2ca36:	ldr.w	r3, [r3, #308]	; 0x134
   2ca3a:	ldr.w	r1, [r3, #180]	; 0xb4
   2ca3e:	mov	r3, r4
   2ca40:	and.w	r2, r1, #1
   2ca44:	orrs	r3, r2
   2ca46:	beq.n	2ca96 <add_to_free_space_tree@@Base+0x6e>
   2ca48:	bl	17df8 <btrfs_alloc_path@@Base>
   2ca4c:	mov	r6, r0
   2ca4e:	cbz	r0, 2ca9e <add_to_free_space_tree@@Base+0x76>
   2ca50:	ldr	r0, [r5, #0]
   2ca52:	mov	r2, sl
   2ca54:	mov	r3, r7
   2ca56:	bl	1ee5c <btrfs_lookup_block_group@@Base>
   2ca5a:	mov	r1, r0
   2ca5c:	cbnz	r0, 2ca70 <add_to_free_space_tree@@Base+0x48>
   2ca5e:	ldr	r1, [pc, #68]	; (2caa4 <add_to_free_space_tree@@Base+0x7c>)
   2ca60:	mov.w	r2, #976	; 0x3d0
   2ca64:	ldr	r0, [pc, #64]	; (2caa8 <add_to_free_space_tree@@Base+0x80>)
   2ca66:	add	r1, pc
   2ca68:	adds	r1, #198	; 0xc6
   2ca6a:	add	r0, pc
   2ca6c:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2ca70:	ldrd	r8, r9, [sp, #48]	; 0x30
   2ca74:	mov	r2, r6
   2ca76:	mov	r0, r5
   2ca78:	strd	sl, r7, [sp]
   2ca7c:	strd	r8, r9, [sp, #8]
   2ca80:	bl	2c358 <btrfs_abort_transaction@@Base+0x103c>
   2ca84:	mov	r4, r0
   2ca86:	mov	r0, r6
   2ca88:	bl	17e26 <btrfs_free_path@@Base>
   2ca8c:	cbz	r4, 2ca96 <add_to_free_space_tree@@Base+0x6e>
   2ca8e:	mov	r1, r4
   2ca90:	mov	r0, r5
   2ca92:	bl	2b31c <btrfs_abort_transaction@@Base>
   2ca96:	mov	r0, r4
   2ca98:	add	sp, #16
   2ca9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2ca9e:	mvn.w	r4, #11
   2caa2:	b.n	2ca86 <add_to_free_space_tree@@Base+0x5e>
   2caa4:	subs	r6, #141	; 0x8d
   2caa6:	movs	r1, r0
   2caa8:			; <UNDEFINED> instruction: 0xfa180000

0002caac <populate_free_space_tree@@Base>:
   2caac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cab0:	mov	r9, r0
   2cab2:	vpush	{d8}
   2cab6:	mov	r5, r1
   2cab8:	ldr	r2, [pc, #544]	; (2ccdc <populate_free_space_tree@@Base+0x230>)
   2caba:	ldr	r3, [pc, #548]	; (2cce0 <populate_free_space_tree@@Base+0x234>)
   2cabc:	add	r2, pc
   2cabe:	sub	sp, #60	; 0x3c
   2cac0:	ldr	r3, [r2, r3]
   2cac2:	ldr	r3, [r3, #0]
   2cac4:	str	r3, [sp, #52]	; 0x34
   2cac6:	mov.w	r3, #0
   2caca:	ldr	r3, [r0, #0]
   2cacc:	ldr	r3, [r3, #24]
   2cace:	vmov	s17, r3
   2cad2:	bl	17df8 <btrfs_alloc_path@@Base>
   2cad6:	mov	r7, r0
   2cad8:	cbz	r0, 2caee <populate_free_space_tree@@Base+0x42>
   2cada:	movs	r3, #2
   2cadc:	strb.w	r3, [r0, #64]	; 0x40
   2cae0:	bl	17df8 <btrfs_alloc_path@@Base>
   2cae4:	mov	r8, r0
   2cae6:	cbnz	r0, 2caf4 <populate_free_space_tree@@Base+0x48>
   2cae8:	mov	r0, r7
   2caea:	bl	17e26 <btrfs_free_path@@Base>
   2caee:	mvn.w	r4, #11
   2caf2:	b.n	2cc6a <populate_free_space_tree@@Base+0x1be>
   2caf4:	ldr.w	r3, [r9]
   2caf8:	add.w	r6, sp, #41	; 0x29
   2cafc:	ldr	r1, [r3, #48]	; 0x30
   2cafe:	ldrd	r2, r3, [r5, #40]	; 0x28
   2cb02:	strd	r2, r3, [sp, #32]
   2cb06:	movs	r3, #198	; 0xc6
   2cb08:	strb.w	r3, [sp, #40]	; 0x28
   2cb0c:	ldr.w	r3, [r5, #53]	; 0x35
   2cb10:	ldr.w	r2, [r5, #49]	; 0x31
   2cb14:	str.w	r3, [sp, #45]	; 0x2d
   2cb18:	movs	r3, #8
   2cb1a:	str	r3, [sp, #28]
   2cb1c:	add	r3, sp, #32
   2cb1e:	str.w	r2, [sp, #41]	; 0x29
   2cb22:	mov	r2, r0
   2cb24:	vmov	s16, r3
   2cb28:	mov	r0, r9
   2cb2a:	movs	r3, #1
   2cb2c:	str	r3, [sp, #4]
   2cb2e:	add	r3, sp, #28
   2cb30:	str	r3, [sp, #0]
   2cb32:	vmov	r3, s16
   2cb36:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2cb3a:	mov	r4, r0
   2cb3c:	cbnz	r0, 2cb6c <populate_free_space_tree@@Base+0xc0>
   2cb3e:	ldr.w	r0, [r8]
   2cb42:	movs	r2, #25
   2cb44:	ldr.w	r3, [r8, #32]
   2cb48:	add.w	r1, r0, #96	; 0x60
   2cb4c:	mla	r3, r2, r3, r1
   2cb50:	ldr.w	r2, [r3, #118]	; 0x76
   2cb54:	adds	r2, #101	; 0x65
   2cb56:	adds	r3, r1, r2
   2cb58:	strb	r4, [r1, r2]
   2cb5a:	strb	r4, [r3, #1]
   2cb5c:	strb	r4, [r3, #2]
   2cb5e:	strb	r4, [r3, #3]
   2cb60:	strb	r4, [r3, #4]
   2cb62:	strb	r4, [r3, #5]
   2cb64:	strb	r4, [r3, #6]
   2cb66:	strb	r4, [r3, #7]
   2cb68:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2cb6c:	mov	r0, r8
   2cb6e:	bl	17e00 <btrfs_release_path@@Base>
   2cb72:	cmp	r4, #0
   2cb74:	bne.n	2cc5e <populate_free_space_tree@@Base+0x1b2>
   2cb76:	ldrd	r2, r3, [r5, #40]	; 0x28
   2cb7a:	strb	r4, [r6, #1]
   2cb7c:	strb	r4, [r6, #2]
   2cb7e:	strd	r2, r3, [sp, #32]
   2cb82:	movs	r3, #168	; 0xa8
   2cb84:	strb	r4, [r6, #3]
   2cb86:	mov	r2, r7
   2cb88:	strb.w	r3, [sp, #40]	; 0x28
   2cb8c:	movs	r3, #1
   2cb8e:	strb	r4, [r6, #4]
   2cb90:	strb	r4, [r6, #5]
   2cb92:	strb	r4, [r6, #6]
   2cb94:	strb	r4, [r6, #7]
   2cb96:	vmov	r1, s16
   2cb9a:	vmov	r0, s17
   2cb9e:	str	r4, [sp, #0]
   2cba0:	strb.w	r4, [sp, #41]	; 0x29
   2cba4:	bl	1b7f4 <btrfs_search_slot_for_read@@Base>
   2cba8:	cmp	r0, #0
   2cbaa:	blt.n	2cc5c <populate_free_space_tree@@Base+0x1b0>
   2cbac:	ldr	r1, [pc, #308]	; (2cce4 <populate_free_space_tree@@Base+0x238>)
   2cbae:	it	eq
   2cbb0:	moveq	r3, #1
   2cbb2:	ldr	r0, [pc, #308]	; (2cce8 <populate_free_space_tree@@Base+0x23c>)
   2cbb4:	it	ne
   2cbb6:	movne	r3, #0
   2cbb8:	add	r1, pc
   2cbba:	movw	r2, #1027	; 0x403
   2cbbe:	adds	r1, #221	; 0xdd
   2cbc0:	add	r0, pc
   2cbc2:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2cbc6:	ldrd	sl, fp, [r5, #40]	; 0x28
   2cbca:	ldr.w	r3, [r5, #49]	; 0x31
   2cbce:	ldr.w	r2, [r5, #53]	; 0x35
   2cbd2:	adds.w	r3, r3, sl
   2cbd6:	str	r3, [sp, #16]
   2cbd8:	adc.w	r3, r2, fp
   2cbdc:	str	r3, [sp, #20]
   2cbde:	ldr	r2, [r7, #32]
   2cbe0:	vmov	r1, s16
   2cbe4:	ldr	r0, [r7, #0]
   2cbe6:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2cbea:	ldrb.w	r2, [sp, #40]	; 0x28
   2cbee:	add.w	r3, r2, #88	; 0x58
   2cbf2:	uxtb	r3, r3
   2cbf4:	cmp	r3, #1
   2cbf6:	bhi.n	2cc90 <populate_free_space_tree@@Base+0x1e4>
   2cbf8:	ldrd	r0, r1, [sp, #32]
   2cbfc:	ldrd	r2, r3, [sp, #16]
   2cc00:	cmp	r1, r3
   2cc02:	it	eq
   2cc04:	cmpeq	r0, r2
   2cc06:	bcs.n	2cca4 <populate_free_space_tree@@Base+0x1f8>
   2cc08:	cmp	fp, r1
   2cc0a:	it	eq
   2cc0c:	cmpeq	sl, r0
   2cc0e:	bcc.n	2cc3e <populate_free_space_tree@@Base+0x192>
   2cc10:	ldrb.w	r1, [sp, #40]	; 0x28
   2cc14:	ldrd	r2, r3, [sp, #32]
   2cc18:	cmp	r1, #169	; 0xa9
   2cc1a:	bne.n	2cc7e <populate_free_space_tree@@Base+0x1d2>
   2cc1c:	ldr.w	r1, [r9]
   2cc20:	ldr.w	r1, [r1, #384]	; 0x180
   2cc24:	adds.w	sl, r2, r1
   2cc28:	adc.w	fp, r3, #0
   2cc2c:	vmov	r0, s17
   2cc30:	mov	r1, r7
   2cc32:	bl	2b410 <btrfs_abort_transaction@@Base+0xf4>
   2cc36:	cmp	r0, #0
   2cc38:	blt.n	2cc5c <populate_free_space_tree@@Base+0x1b0>
   2cc3a:	beq.n	2cbde <populate_free_space_tree@@Base+0x132>
   2cc3c:	b.n	2cca4 <populate_free_space_tree@@Base+0x1f8>
   2cc3e:	subs.w	r2, r0, sl
   2cc42:	strd	sl, fp, [sp]
   2cc46:	sbc.w	r3, r1, fp
   2cc4a:	mov	r0, r9
   2cc4c:	strd	r2, r3, [sp, #8]
   2cc50:	mov	r1, r5
   2cc52:	mov	r2, r8
   2cc54:	bl	2c358 <btrfs_abort_transaction@@Base+0x103c>
   2cc58:	cmp	r0, #0
   2cc5a:	beq.n	2cc10 <populate_free_space_tree@@Base+0x164>
   2cc5c:	mov	r4, r0
   2cc5e:	mov	r0, r8
   2cc60:	bl	17e26 <btrfs_free_path@@Base>
   2cc64:	mov	r0, r7
   2cc66:	bl	17e26 <btrfs_free_path@@Base>
   2cc6a:	ldr	r2, [pc, #128]	; (2ccec <populate_free_space_tree@@Base+0x240>)
   2cc6c:	ldr	r3, [pc, #112]	; (2cce0 <populate_free_space_tree@@Base+0x234>)
   2cc6e:	add	r2, pc
   2cc70:	ldr	r3, [r2, r3]
   2cc72:	ldr	r2, [r3, #0]
   2cc74:	ldr	r3, [sp, #52]	; 0x34
   2cc76:	eors	r2, r3
   2cc78:	beq.n	2ccd0 <populate_free_space_tree@@Base+0x224>
   2cc7a:	blx	86b8 <__stack_chk_fail@plt>
   2cc7e:	ldr.w	r1, [sp, #41]	; 0x29
   2cc82:	ldr.w	r0, [sp, #45]	; 0x2d
   2cc86:	adds.w	sl, r1, r2
   2cc8a:	adc.w	fp, r0, r3
   2cc8e:	b.n	2cc2c <populate_free_space_tree@@Base+0x180>
   2cc90:	cmp	r2, #192	; 0xc0
   2cc92:	bne.n	2cc2c <populate_free_space_tree@@Base+0x180>
   2cc94:	ldrd	r2, r3, [r5, #40]	; 0x28
   2cc98:	ldrd	r0, r1, [sp, #32]
   2cc9c:	cmp	r1, r3
   2cc9e:	it	eq
   2cca0:	cmpeq	r0, r2
   2cca2:	beq.n	2cc2c <populate_free_space_tree@@Base+0x180>
   2cca4:	ldrd	r2, r3, [sp, #16]
   2cca8:	cmp	fp, r3
   2ccaa:	it	eq
   2ccac:	cmpeq	sl, r2
   2ccae:	bcs.n	2cc5e <populate_free_space_tree@@Base+0x1b2>
   2ccb0:	ldr	r3, [sp, #16]
   2ccb2:	mov	r1, r5
   2ccb4:	mov	r0, r9
   2ccb6:	strd	sl, fp, [sp]
   2ccba:	subs.w	r2, r3, sl
   2ccbe:	ldr	r3, [sp, #20]
   2ccc0:	sbc.w	r3, r3, fp
   2ccc4:	strd	r2, r3, [sp, #8]
   2ccc8:	mov	r2, r8
   2ccca:	bl	2c358 <btrfs_abort_transaction@@Base+0x103c>
   2ccce:	b.n	2cc5c <populate_free_space_tree@@Base+0x1b0>
   2ccd0:	mov	r0, r4
   2ccd2:	add	sp, #60	; 0x3c
   2ccd4:	vpop	{d8}
   2ccd8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ccdc:	strh	r4, [r1, #22]
   2ccde:	movs	r3, r0
   2cce0:	lsls	r4, r4, #8
   2cce2:	movs	r0, r0
   2cce4:	subs	r5, #59	; 0x3b
   2cce6:	movs	r1, r0
   2cce8:	bvc.n	2cbf2 <populate_free_space_tree@@Base+0x146>
   2ccea:	movs	r0, r0
   2ccec:	strh	r2, [r3, #8]
   2ccee:	movs	r3, r0

0002ccf0 <remove_block_group_free_space@@Base>:
   2ccf0:	ldr	r2, [pc, #536]	; (2cf0c <remove_block_group_free_space@@Base+0x21c>)
   2ccf2:	ldr	r3, [pc, #540]	; (2cf10 <remove_block_group_free_space@@Base+0x220>)
   2ccf4:	add	r2, pc
   2ccf6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ccfa:	sub	sp, #92	; 0x5c
   2ccfc:	ldr	r3, [r2, r3]
   2ccfe:	mov	r9, r0
   2cd00:	mov	r8, r1
   2cd02:	ldr	r3, [r3, #0]
   2cd04:	str	r3, [sp, #84]	; 0x54
   2cd06:	mov.w	r3, #0
   2cd0a:	ldr	r3, [r0, #0]
   2cd0c:	ldr.w	fp, [r3, #48]	; 0x30
   2cd10:	bl	17df8 <btrfs_alloc_path@@Base>
   2cd14:	mov	r5, r0
   2cd16:	cmp	r0, #0
   2cd18:	beq.w	2cefe <remove_block_group_free_space@@Base+0x20e>
   2cd1c:	ldrd	r3, r4, [r8, #40]	; 0x28
   2cd20:	ldr.w	r2, [r8, #53]	; 0x35
   2cd24:	ldr.w	sl, [pc, #492]	; 2cf14 <remove_block_group_free_space@@Base+0x224>
   2cd28:	strd	r3, r4, [sp, #24]
   2cd2c:	ldr	r1, [sp, #24]
   2cd2e:	add	sl, pc
   2cd30:	ldr.w	r3, [r8, #49]	; 0x31
   2cd34:	add.w	sl, sl, #246	; 0xf6
   2cd38:	adds	r3, r3, r1
   2cd3a:	str	r3, [sp, #8]
   2cd3c:	ldr	r3, [sp, #28]
   2cd3e:	adc.w	r3, r2, r3
   2cd42:	str	r3, [sp, #12]
   2cd44:	ldr	r3, [sp, #8]
   2cd46:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2cd4a:	ldr	r3, [sp, #12]
   2cd4c:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2cd50:	strd	r2, r3, [sp, #44]	; 0x2c
   2cd54:	movs	r2, #255	; 0xff
   2cd56:	strb.w	r2, [sp, #52]	; 0x34
   2cd5a:	strb.w	r2, [sp, #53]	; 0x35
   2cd5e:	strb.w	r2, [sp, #54]	; 0x36
   2cd62:	strb.w	r2, [sp, #55]	; 0x37
   2cd66:	strb.w	r2, [sp, #56]	; 0x38
   2cd6a:	strb.w	r2, [sp, #57]	; 0x39
   2cd6e:	strb.w	r2, [sp, #58]	; 0x3a
   2cd72:	strb.w	r2, [sp, #59]	; 0x3b
   2cd76:	strb.w	r2, [sp, #60]	; 0x3c
   2cd7a:	mov.w	r3, #4294967295	; 0xffffffff
   2cd7e:	add	r2, sp, #44	; 0x2c
   2cd80:	str	r3, [sp, #0]
   2cd82:	mov	r1, fp
   2cd84:	mov	r3, r5
   2cd86:	mov	r0, r9
   2cd88:	bl	2b5fc <btrfs_abort_transaction@@Base+0x2e0>
   2cd8c:	mov	r4, r0
   2cd8e:	cmp	r0, #0
   2cd90:	bne.n	2ce38 <remove_block_group_free_space@@Base+0x148>
   2cd92:	ldr	r7, [pc, #388]	; (2cf18 <remove_block_group_free_space@@Base+0x228>)
   2cd94:	ldr	r6, [r5, #0]
   2cd96:	ldr	r3, [r5, #32]
   2cd98:	add	r7, pc
   2cd9a:	adds	r3, #1
   2cd9c:	str	r3, [r5, #32]
   2cd9e:	ldr	r2, [r5, #32]
   2cda0:	cmp	r2, #0
   2cda2:	bgt.n	2cda8 <remove_block_group_free_space@@Base+0xb8>
   2cda4:	movs	r6, #0
   2cda6:	b.n	2ce1c <remove_block_group_free_space@@Base+0x12c>
   2cda8:	subs	r2, #1
   2cdaa:	add	r1, sp, #64	; 0x40
   2cdac:	mov	r0, r6
   2cdae:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2cdb2:	ldrb.w	r3, [sp, #72]	; 0x48
   2cdb6:	cmp	r3, #198	; 0xc6
   2cdb8:	bne.n	2ce5c <remove_block_group_free_space@@Base+0x16c>
   2cdba:	ldrd	r2, r3, [r8, #40]	; 0x28
   2cdbe:	adds	r4, #1
   2cdc0:	ldrd	r6, r7, [sp, #64]	; 0x40
   2cdc4:	ldr	r0, [pc, #340]	; (2cf1c <remove_block_group_free_space@@Base+0x22c>)
   2cdc6:	cmp	r7, r3
   2cdc8:	it	eq
   2cdca:	cmpeq	r6, r2
   2cdcc:	ldr	r6, [pc, #336]	; (2cf20 <remove_block_group_free_space@@Base+0x230>)
   2cdce:	add	r0, pc
   2cdd0:	mov.w	r2, #1112	; 0x458
   2cdd4:	add	r6, pc
   2cdd6:	it	eq
   2cdd8:	moveq	r3, #1
   2cdda:	add.w	r6, r6, #246	; 0xf6
   2cdde:	it	ne
   2cde0:	movne	r3, #0
   2cde2:	mov	r1, r6
   2cde4:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2cde8:	ldr.w	r3, [r8, #53]	; 0x35
   2cdec:	ldr.w	r1, [sp, #77]	; 0x4d
   2cdf0:	ldr.w	r0, [sp, #73]	; 0x49
   2cdf4:	ldr.w	r2, [r8, #49]	; 0x31
   2cdf8:	cmp	r1, r3
   2cdfa:	mov	r1, r6
   2cdfc:	mov.w	r6, #1
   2ce00:	it	eq
   2ce02:	cmpeq	r0, r2
   2ce04:	ldr	r0, [pc, #284]	; (2cf24 <remove_block_group_free_space@@Base+0x234>)
   2ce06:	movw	r2, #1113	; 0x459
   2ce0a:	ite	eq
   2ce0c:	moveq	r3, #1
   2ce0e:	movne	r3, #0
   2ce10:	add	r0, pc
   2ce12:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2ce16:	ldr	r3, [r5, #32]
   2ce18:	subs	r3, #1
   2ce1a:	str	r3, [r5, #32]
   2ce1c:	str	r4, [sp, #0]
   2ce1e:	mov	r2, r5
   2ce20:	ldr	r3, [r5, #32]
   2ce22:	mov	r1, fp
   2ce24:	mov	r0, r9
   2ce26:	bl	1b3a0 <btrfs_del_items@@Base>
   2ce2a:	mov	r4, r0
   2ce2c:	cbnz	r0, 2ce38 <remove_block_group_free_space@@Base+0x148>
   2ce2e:	mov	r0, r5
   2ce30:	bl	17e00 <btrfs_release_path@@Base>
   2ce34:	cmp	r6, #0
   2ce36:	beq.n	2cd7a <remove_block_group_free_space@@Base+0x8a>
   2ce38:	mov	r0, r5
   2ce3a:	bl	17e26 <btrfs_free_path@@Base>
   2ce3e:	cbz	r4, 2ce48 <remove_block_group_free_space@@Base+0x158>
   2ce40:	mov	r1, r4
   2ce42:	mov	r0, r9
   2ce44:	bl	2b31c <btrfs_abort_transaction@@Base>
   2ce48:	ldr	r2, [pc, #220]	; (2cf28 <remove_block_group_free_space@@Base+0x238>)
   2ce4a:	ldr	r3, [pc, #196]	; (2cf10 <remove_block_group_free_space@@Base+0x220>)
   2ce4c:	add	r2, pc
   2ce4e:	ldr	r3, [r2, r3]
   2ce50:	ldr	r2, [r3, #0]
   2ce52:	ldr	r3, [sp, #84]	; 0x54
   2ce54:	eors	r2, r3
   2ce56:	beq.n	2cf04 <remove_block_group_free_space@@Base+0x214>
   2ce58:	blx	86b8 <__stack_chk_fail@plt>
   2ce5c:	adds	r3, #57	; 0x39
   2ce5e:	uxtb	r3, r3
   2ce60:	cmp	r3, #1
   2ce62:	bhi.n	2ceec <remove_block_group_free_space@@Base+0x1fc>
   2ce64:	ldrd	r2, r3, [sp, #64]	; 0x40
   2ce68:	adds	r4, #1
   2ce6a:	ldrd	r0, r1, [sp, #24]
   2ce6e:	cmp	r3, r1
   2ce70:	strd	r2, r3, [sp, #16]
   2ce74:	it	eq
   2ce76:	cmpeq	r2, r0
   2ce78:	mov	r1, sl
   2ce7a:	mov.w	r2, #1120	; 0x460
   2ce7e:	mov	r0, r7
   2ce80:	ite	cs
   2ce82:	movcs	r3, #1
   2ce84:	movcc	r3, #0
   2ce86:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2ce8a:	ldrd	r2, r3, [sp, #16]
   2ce8e:	ldrd	r0, r1, [sp, #8]
   2ce92:	cmp	r3, r1
   2ce94:	mov	r1, sl
   2ce96:	it	eq
   2ce98:	cmpeq	r2, r0
   2ce9a:	ldr	r0, [pc, #144]	; (2cf2c <remove_block_group_free_space@@Base+0x23c>)
   2ce9c:	movw	r2, #1121	; 0x461
   2cea0:	ite	cc
   2cea2:	movcc	r3, #1
   2cea4:	movcs	r3, #0
   2cea6:	add	r0, pc
   2cea8:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2ceac:	ldr.w	r3, [sp, #73]	; 0x49
   2ceb0:	ldr	r1, [sp, #16]
   2ceb2:	ldr.w	r2, [sp, #77]	; 0x4d
   2ceb6:	adds	r3, r3, r1
   2ceb8:	str	r3, [sp, #32]
   2ceba:	ldr	r3, [sp, #20]
   2cebc:	adc.w	r3, r2, r3
   2cec0:	str	r3, [sp, #36]	; 0x24
   2cec2:	ldrd	r0, r1, [sp, #32]
   2cec6:	ldrd	r2, r3, [sp, #8]
   2ceca:	cmp	r3, r1
   2cecc:	mov	r1, sl
   2cece:	it	eq
   2ced0:	cmpeq	r2, r0
   2ced2:	ldr	r0, [pc, #92]	; (2cf30 <remove_block_group_free_space@@Base+0x240>)
   2ced4:	movw	r2, #1122	; 0x462
   2ced8:	ite	cs
   2ceda:	movcs	r3, #1
   2cedc:	movcc	r3, #0
   2cede:	add	r0, pc
   2cee0:	bl	2b50c <btrfs_abort_transaction@@Base+0x1f0>
   2cee4:	ldr	r3, [r5, #32]
   2cee6:	subs	r3, #1
   2cee8:	str	r3, [r5, #32]
   2ceea:	b.n	2cd9e <remove_block_group_free_space@@Base+0xae>
   2ceec:	ldr	r1, [pc, #68]	; (2cf34 <remove_block_group_free_space@@Base+0x244>)
   2ceee:	movw	r2, #1126	; 0x466
   2cef2:	ldr	r0, [pc, #68]	; (2cf38 <remove_block_group_free_space@@Base+0x248>)
   2cef4:	add	r1, pc
   2cef6:	adds	r1, #246	; 0xf6
   2cef8:	add	r0, pc
   2cefa:	bl	2b4a0 <btrfs_abort_transaction@@Base+0x184>
   2cefe:	mvn.w	r4, #11
   2cf02:	b.n	2ce38 <remove_block_group_free_space@@Base+0x148>
   2cf04:	mov	r0, r4
   2cf06:	add	sp, #92	; 0x5c
   2cf08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf0c:	strh	r4, [r2, #4]
   2cf0e:	movs	r3, r0
   2cf10:	lsls	r4, r4, #8
   2cf12:	movs	r0, r0
   2cf14:	subs	r3, #197	; 0xc5
   2cf16:	movs	r1, r0
   2cf18:	adds	r7, #65	; 0x41
   2cf1a:	movs	r1, r0
   2cf1c:	adds	r6, #175	; 0xaf
   2cf1e:	movs	r1, r0
   2cf20:	subs	r3, #31
   2cf22:	movs	r1, r0
   2cf24:	adds	r6, #157	; 0x9d
   2cf26:	movs	r1, r0
   2cf28:	ldrb	r4, [r7, #28]
   2cf2a:	movs	r3, r0
   2cf2c:	adds	r6, #79	; 0x4f
   2cf2e:	movs	r1, r0
   2cf30:	adds	r6, #48	; 0x30
   2cf32:	movs	r1, r0
   2cf34:	subs	r1, #255	; 0xff
   2cf36:	movs	r1, r0
   2cf38:			; <UNDEFINED> instruction: 0xf58a0000

0002cf3c <btrfs_clear_free_space_tree@@Base>:
   2cf3c:	ldr	r2, [pc, #352]	; (2d0a0 <btrfs_clear_free_space_tree@@Base+0x164>)
   2cf3e:	movs	r1, #0
   2cf40:	ldr	r3, [pc, #352]	; (2d0a4 <btrfs_clear_free_space_tree@@Base+0x168>)
   2cf42:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf46:	add	r2, pc
   2cf48:	ldr.w	r8, [r0, #28]
   2cf4c:	sub	sp, #44	; 0x2c
   2cf4e:	ldr	r3, [r2, r3]
   2cf50:	mov	r7, r0
   2cf52:	ldr	r5, [r0, #48]	; 0x30
   2cf54:	mov	r0, r8
   2cf56:	ldr	r3, [r3, #0]
   2cf58:	str	r3, [sp, #36]	; 0x24
   2cf5a:	mov.w	r3, #0
   2cf5e:	bl	2af24 <btrfs_start_transaction@@Base>
   2cf62:	cmn.w	r0, #4096	; 0x1000
   2cf66:	mov	r6, r0
   2cf68:	bls.n	2cf82 <btrfs_clear_free_space_tree@@Base+0x46>
   2cf6a:	mov	r4, r0
   2cf6c:	ldr	r2, [pc, #312]	; (2d0a8 <btrfs_clear_free_space_tree@@Base+0x16c>)
   2cf6e:	ldr	r3, [pc, #308]	; (2d0a4 <btrfs_clear_free_space_tree@@Base+0x168>)
   2cf70:	add	r2, pc
   2cf72:	ldr	r3, [r2, r3]
   2cf74:	ldr	r2, [r3, #0]
   2cf76:	ldr	r3, [sp, #36]	; 0x24
   2cf78:	eors	r2, r3
   2cf7a:	beq.w	2d090 <btrfs_clear_free_space_tree@@Base+0x154>
   2cf7e:	blx	86b8 <__stack_chk_fail@plt>
   2cf82:	ldr.w	r3, [r7, #308]	; 0x134
   2cf86:	movs	r4, #0
   2cf88:	ldr.w	r1, [r3, #184]	; 0xb8
   2cf8c:	ldr.w	r2, [r3, #180]	; 0xb4
   2cf90:	str.w	r1, [r3, #184]	; 0xb8
   2cf94:	bic.w	r2, r2, #3
   2cf98:	str.w	r2, [r3, #180]	; 0xb4
   2cf9c:	str	r4, [r7, #48]	; 0x30
   2cf9e:	bl	17df8 <btrfs_alloc_path@@Base>
   2cfa2:	mov	r7, r0
   2cfa4:	cbnz	r0, 2cfac <btrfs_clear_free_space_tree@@Base+0x70>
   2cfa6:	mvn.w	r4, #11
   2cfaa:	b.n	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2cfac:	add.w	r9, sp, #16
   2cfb0:	mov.w	sl, #1
   2cfb4:	mov.w	fp, #4294967295	; 0xffffffff
   2cfb8:	movs	r2, #0
   2cfba:	movs	r3, #0
   2cfbc:	strb.w	r4, [sp, #24]
   2cfc0:	strd	r2, r3, [sp, #16]
   2cfc4:	strb.w	r4, [sp, #25]
   2cfc8:	strb.w	r4, [sp, #26]
   2cfcc:	strb.w	r4, [sp, #27]
   2cfd0:	strb.w	r4, [sp, #28]
   2cfd4:	strb.w	r4, [sp, #29]
   2cfd8:	strb.w	r4, [sp, #30]
   2cfdc:	strb.w	r4, [sp, #31]
   2cfe0:	strb.w	r4, [sp, #32]
   2cfe4:	mov	r3, r7
   2cfe6:	mov	r2, r9
   2cfe8:	mov	r1, r5
   2cfea:	mov	r0, r6
   2cfec:	strd	fp, sl, [sp]
   2cff0:	bl	1a1e4 <btrfs_search_slot@@Base>
   2cff4:	subs	r4, r0, #0
   2cff6:	blt.n	2d01c <btrfs_clear_free_space_tree@@Base+0xe0>
   2cff8:	ldr	r3, [r7, #0]
   2cffa:	ldr.w	r4, [r3, #192]	; 0xc0
   2cffe:	cbz	r4, 2d01c <btrfs_clear_free_space_tree@@Base+0xe0>
   2d000:	movs	r3, #0
   2d002:	mov	r2, r7
   2d004:	str	r3, [r7, #32]
   2d006:	mov	r1, r5
   2d008:	str	r4, [sp, #0]
   2d00a:	mov	r0, r6
   2d00c:	bl	1b3a0 <btrfs_del_items@@Base>
   2d010:	mov	r4, r0
   2d012:	cbnz	r0, 2d01c <btrfs_clear_free_space_tree@@Base+0xe0>
   2d014:	mov	r0, r7
   2d016:	bl	17e00 <btrfs_release_path@@Base>
   2d01a:	b.n	2cfe4 <btrfs_clear_free_space_tree@@Base+0xa8>
   2d01c:	mov	r0, r7
   2d01e:	bl	17e26 <btrfs_free_path@@Base>
   2d022:	cmp	r4, #0
   2d024:	bne.n	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2d026:	addw	r2, r5, #447	; 0x1bf
   2d02a:	mov	r1, r8
   2d02c:	mov	r0, r6
   2d02e:	bl	27b78 <btrfs_del_root@@Base>
   2d032:	mov	r4, r0
   2d034:	cmp	r0, #0
   2d036:	bne.n	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2d038:	ldrd	r2, r3, [r5, #520]	; 0x208
   2d03c:	str	r3, [r2, #4]
   2d03e:	str	r2, [r3, #0]
   2d040:	ldr	r2, [pc, #84]	; (2d098 <btrfs_clear_free_space_tree@@Base+0x15c>)
   2d042:	ldr	r3, [pc, #88]	; (2d09c <btrfs_clear_free_space_tree@@Base+0x160>)
   2d044:	ldr	r0, [r5, #0]
   2d046:	strd	r2, r3, [r5, #520]	; 0x208
   2d04a:	bl	1d4b4 <clean_tree_block@@Base>
   2d04e:	mov	r4, r0
   2d050:	cmp	r0, #0
   2d052:	bne.n	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2d054:	movs	r3, #1
   2d056:	movs	r2, #0
   2d058:	str	r3, [sp, #8]
   2d05a:	mov	r1, r5
   2d05c:	movs	r3, #0
   2d05e:	mov	r0, r6
   2d060:	strd	r2, r3, [sp]
   2d064:	ldr	r2, [r5, #0]
   2d066:	bl	20d68 <btrfs_free_tree_block@@Base>
   2d06a:	mov	r4, r0
   2d06c:	cmp	r0, #0
   2d06e:	bne.w	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2d072:	ldr	r0, [r5, #0]
   2d074:	bl	16bc8 <free_extent_buffer@@Base>
   2d078:	ldr	r0, [r5, #4]
   2d07a:	bl	16bc8 <free_extent_buffer@@Base>
   2d07e:	mov	r0, r5
   2d080:	blx	85dc <free@plt+0x4>
   2d084:	mov	r1, r8
   2d086:	mov	r0, r6
   2d088:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   2d08c:	mov	r4, r0
   2d08e:	b.n	2cf6c <btrfs_clear_free_space_tree@@Base+0x30>
   2d090:	mov	r0, r4
   2d092:	add	sp, #44	; 0x2c
   2d094:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d098:	lsls	r0, r0, #4
   2d09a:	movs	r0, r2
   2d09c:	lsls	r0, r0, #8
   2d09e:	movs	r0, r4
   2d0a0:	ldrb	r2, [r0, #25]
   2d0a2:	movs	r3, r0
   2d0a4:	lsls	r4, r4, #8
   2d0a6:	movs	r0, r0
   2d0a8:	ldrb	r0, [r3, #24]
   2d0aa:	movs	r3, r0

0002d0ac <btrfs_create_free_space_tree@@Base>:
   2d0ac:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d0b0:	movs	r1, #0
   2d0b2:	ldr	r7, [r0, #28]
   2d0b4:	mov	r5, r0
   2d0b6:	mov	r0, r7
   2d0b8:	bl	2af24 <btrfs_start_transaction@@Base>
   2d0bc:	cmn.w	r0, #4096	; 0x1000
   2d0c0:	mov	r6, r0
   2d0c2:	bls.n	2d0cc <btrfs_create_free_space_tree@@Base+0x20>
   2d0c4:	mov	r4, r0
   2d0c6:	mov	r0, r4
   2d0c8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2d0cc:	movs	r2, #10
   2d0ce:	movs	r3, #0
   2d0d0:	mov	r1, r5
   2d0d2:	bl	1e324 <btrfs_create_tree@@Base>
   2d0d6:	cmn.w	r0, #4096	; 0x1000
   2d0da:	mov	r4, r0
   2d0dc:	bhi.n	2d116 <btrfs_create_free_space_tree@@Base+0x6a>
   2d0de:	mov.w	r8, #69632	; 0x11000
   2d0e2:	mov.w	r9, #0
   2d0e6:	str	r0, [r5, #48]	; 0x30
   2d0e8:	mov	r2, r8
   2d0ea:	mov	r3, r9
   2d0ec:	mov	r0, r5
   2d0ee:	bl	1edd8 <btrfs_lookup_first_block_group@@Base>
   2d0f2:	mov	r1, r0
   2d0f4:	cbz	r0, 2d120 <btrfs_create_free_space_tree@@Base+0x74>
   2d0f6:	ldr.w	r2, [r0, #49]	; 0x31
   2d0fa:	ldr.w	r9, [r0, #53]	; 0x35
   2d0fe:	ldrd	r0, r3, [r0, #40]	; 0x28
   2d102:	adds.w	r8, r2, r0
   2d106:	mov	r0, r6
   2d108:	adc.w	r9, r9, r3
   2d10c:	bl	2caac <populate_free_space_tree@@Base>
   2d110:	mov	r4, r0
   2d112:	cmp	r0, #0
   2d114:	beq.n	2d0e8 <btrfs_create_free_space_tree@@Base+0x3c>
   2d116:	mov	r1, r4
   2d118:	mov	r0, r6
   2d11a:	bl	2b31c <btrfs_abort_transaction@@Base>
   2d11e:	b.n	2d0c6 <btrfs_create_free_space_tree@@Base+0x1a>
   2d120:	ldr.w	r3, [r5, #308]	; 0x134
   2d124:	mov	r9, r1
   2d126:	ldr.w	r2, [r3, #180]	; 0xb4
   2d12a:	ldr.w	r0, [r3, #184]	; 0xb8
   2d12e:	and.w	r8, r2, #1
   2d132:	orrs.w	r1, r8, r9
   2d136:	mov.w	r1, #0
   2d13a:	ittt	eq
   2d13c:	streq.w	r0, [r3, #184]	; 0xb8
   2d140:	orreq.w	r2, r2, #1
   2d144:	streq.w	r2, [r3, #180]	; 0xb4
   2d148:	ldr.w	r3, [r5, #308]	; 0x134
   2d14c:	ldr.w	r2, [r3, #180]	; 0xb4
   2d150:	ldr.w	r4, [r3, #184]	; 0xb8
   2d154:	and.w	r0, r2, #2
   2d158:	orrs	r1, r0
   2d15a:	mov	r1, r7
   2d15c:	it	eq
   2d15e:	orreq.w	r2, r2, #2
   2d162:	mov	r0, r6
   2d164:	itt	eq
   2d166:	streq.w	r2, [r3, #180]	; 0xb4
   2d16a:	streq.w	r4, [r3, #184]	; 0xb8
   2d16e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d172:	b.w	2b1a4 <btrfs_commit_transaction@@Base>

0002d176 <load_free_space_tree@@Base>:
   2d176:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d17a:	mov	r9, r0
   2d17c:	vpush	{d8-d9}
   2d180:	mov	r8, r1
   2d182:	ldr	r2, [pc, #976]	; (2d554 <load_free_space_tree@@Base+0x3de>)
   2d184:	ldr	r3, [pc, #976]	; (2d558 <load_free_space_tree@@Base+0x3e2>)
   2d186:	add	r2, pc
   2d188:	ldr	r6, [pc, #976]	; (2d55c <load_free_space_tree@@Base+0x3e6>)
   2d18a:	sub	sp, #124	; 0x7c
   2d18c:	ldr	r3, [r2, r3]
   2d18e:	add	r6, pc
   2d190:	ldr	r3, [r3, #0]
   2d192:	str	r3, [sp, #116]	; 0x74
   2d194:	mov.w	r3, #0
   2d198:	bl	17df8 <btrfs_alloc_path@@Base>
   2d19c:	mov	r5, r0
   2d19e:	cmp	r0, #0
   2d1a0:	beq.w	2d542 <load_free_space_tree@@Base+0x3cc>
   2d1a4:	movs	r4, #0
   2d1a6:	movs	r3, #1
   2d1a8:	mov	r2, r8
   2d1aa:	strb.w	r3, [r0, #64]	; 0x40
   2d1ae:	mov	r3, r0
   2d1b0:	str	r4, [sp, #0]
   2d1b2:	mov	r0, r4
   2d1b4:	ldr.w	r1, [r9, #48]	; 0x30
   2d1b8:	bl	2b38c <btrfs_abort_transaction@@Base+0x70>
   2d1bc:	cmn.w	r0, #4096	; 0x1000
   2d1c0:	bls.n	2d1ea <load_free_space_tree@@Base+0x74>
   2d1c2:	mov	r3, r0
   2d1c4:	mov	r0, r5
   2d1c6:	str	r3, [sp, #32]
   2d1c8:	bl	17e26 <btrfs_free_path@@Base>
   2d1cc:	ldr	r3, [sp, #32]
   2d1ce:	cmp	r3, #0
   2d1d0:	it	eq
   2d1d2:	moveq	r3, r4
   2d1d4:	ldr	r1, [pc, #904]	; (2d560 <load_free_space_tree@@Base+0x3ea>)
   2d1d6:	ldr	r2, [pc, #896]	; (2d558 <load_free_space_tree@@Base+0x3e2>)
   2d1d8:	add	r1, pc
   2d1da:	ldr	r2, [r1, r2]
   2d1dc:	ldr	r1, [r2, #0]
   2d1de:	ldr	r2, [sp, #116]	; 0x74
   2d1e0:	eors	r1, r2
   2d1e2:	beq.w	2d548 <load_free_space_tree@@Base+0x3d2>
   2d1e6:	blx	86b8 <__stack_chk_fail@plt>
   2d1ea:	ldr	r3, [r5, #0]
   2d1ec:	adds	r3, #96	; 0x60
   2d1ee:	adds	r2, r3, r0
   2d1f0:	ldr	r3, [r3, r0]
   2d1f2:	ldr	r7, [r2, #4]
   2d1f4:	str	r3, [sp, #64]	; 0x40
   2d1f6:	ldr.w	r3, [r9, #48]	; 0x30
   2d1fa:	vmov	s18, r3
   2d1fe:	ldr.w	r3, [r8, #40]	; 0x28
   2d202:	str	r3, [sp, #48]	; 0x30
   2d204:	ldr.w	r3, [r8, #44]	; 0x2c
   2d208:	ldr	r1, [sp, #48]	; 0x30
   2d20a:	str	r3, [sp, #52]	; 0x34
   2d20c:	ldr.w	r3, [r8, #49]	; 0x31
   2d210:	ldr.w	r2, [r8, #53]	; 0x35
   2d214:	adds	r3, r3, r1
   2d216:	str	r3, [sp, #32]
   2d218:	ldr	r3, [sp, #52]	; 0x34
   2d21a:	adc.w	r3, r2, r3
   2d21e:	ands.w	r7, r7, #1
   2d222:	str	r3, [sp, #36]	; 0x24
   2d224:	beq.w	2d3ac <load_free_space_tree@@Base+0x236>
   2d228:	movs	r3, #0
   2d22a:	mov	r7, r4
   2d22c:	vmov	s16, r3
   2d230:	str	r4, [sp, #40]	; 0x28
   2d232:	vmov	s17, r3
   2d236:	add	r3, sp, #96	; 0x60
   2d238:	vmov	s19, r3
   2d23c:	vmov	r0, s18
   2d240:	mov	r1, r5
   2d242:	bl	2b410 <btrfs_abort_transaction@@Base+0xf4>
   2d246:	subs	r3, r0, #0
   2d248:	blt.w	2d3a8 <load_free_space_tree@@Base+0x232>
   2d24c:	bne.w	2d3a4 <load_free_space_tree@@Base+0x22e>
   2d250:	vmov	r1, s19
   2d254:	ldr	r2, [r5, #32]
   2d256:	ldr	r0, [r5, #0]
   2d258:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2d25c:	ldrb.w	r3, [sp, #104]	; 0x68
   2d260:	cmp	r3, #198	; 0xc6
   2d262:	beq.w	2d3a4 <load_free_space_tree@@Base+0x22e>
   2d266:	cmp	r3, #200	; 0xc8
   2d268:	beq.n	2d2bc <load_free_space_tree@@Base+0x146>
   2d26a:	ldr	r2, [pc, #760]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d26c:	movs	r1, #1
   2d26e:	ldr	r0, [r6, r2]
   2d270:	ldr	r2, [pc, #756]	; (2d568 <load_free_space_tree@@Base+0x3f2>)
   2d272:	ldr	r0, [r0, #0]
   2d274:	add	r2, pc
   2d276:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d27a:	movs	r4, #1
   2d27c:	ldr	r3, [sp, #40]	; 0x28
   2d27e:	cmp	r3, #1
   2d280:	bne.n	2d29c <load_free_space_tree@@Base+0x126>
   2d282:	ldrd	r2, r3, [sp, #32]
   2d286:	mov	r1, r9
   2d288:	mov	r0, r8
   2d28a:	adds	r7, #1
   2d28c:	strd	r2, r3, [sp]
   2d290:	vmov	r2, s16
   2d294:	vmov	r3, s17
   2d298:	bl	22ca0 <add_new_free_space@@Base>
   2d29c:	ldr	r3, [sp, #64]	; 0x40
   2d29e:	cmp	r3, r7
   2d2a0:	beq.n	2d2b8 <load_free_space_tree@@Base+0x142>
   2d2a2:	ldr	r3, [pc, #704]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d2a4:	ldr	r2, [pc, #708]	; (2d56c <load_free_space_tree@@Base+0x3f6>)
   2d2a6:	ldr	r0, [r6, r3]
   2d2a8:	add	r2, pc
   2d2aa:	ldr	r3, [sp, #64]	; 0x40
   2d2ac:	str	r7, [sp, #0]
   2d2ae:	ldr	r0, [r0, #0]
   2d2b0:	movs	r1, #1
   2d2b2:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d2b6:	adds	r4, #1
   2d2b8:	movs	r3, #0
   2d2ba:	b.n	2d1c4 <load_free_space_tree@@Base+0x4e>
   2d2bc:	ldrd	sl, fp, [sp, #96]	; 0x60
   2d2c0:	ldrd	r3, r4, [sp, #32]
   2d2c4:	cmp	fp, r4
   2d2c6:	it	eq
   2d2c8:	cmpeq	sl, r3
   2d2ca:	bcc.n	2d2f2 <load_free_space_tree@@Base+0x17c>
   2d2cc:	ldrd	r1, r2, [sp, #32]
   2d2d0:	ldr	r3, [pc, #656]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d2d2:	ldr	r3, [r6, r3]
   2d2d4:	strd	r1, r2, [sp, #16]
   2d2d8:	ldr	r2, [sp, #48]	; 0x30
   2d2da:	strd	sl, fp, [sp]
   2d2de:	str	r2, [sp, #8]
   2d2e0:	ldr	r2, [sp, #52]	; 0x34
   2d2e2:	str	r2, [sp, #12]
   2d2e4:	ldr	r2, [pc, #648]	; (2d570 <load_free_space_tree@@Base+0x3fa>)
   2d2e6:	add	r2, pc
   2d2e8:	ldr	r0, [r3, #0]
   2d2ea:	movs	r1, #1
   2d2ec:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d2f0:	b.n	2d27a <load_free_space_tree@@Base+0x104>
   2d2f2:	ldr.w	r3, [sp, #105]	; 0x69
   2d2f6:	ldr.w	r2, [sp, #109]	; 0x6d
   2d2fa:	adds.w	r3, r3, sl
   2d2fe:	str	r3, [sp, #72]	; 0x48
   2d300:	adc.w	r3, r2, fp
   2d304:	str	r3, [sp, #76]	; 0x4c
   2d306:	ldrd	r1, r2, [sp, #72]	; 0x48
   2d30a:	ldrd	r3, r4, [sp, #32]
   2d30e:	cmp	r4, r2
   2d310:	it	eq
   2d312:	cmpeq	r3, r1
   2d314:	bcs.n	2d35e <load_free_space_tree@@Base+0x1e8>
   2d316:	ldrd	r1, r2, [sp, #32]
   2d31a:	ldr	r3, [pc, #584]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d31c:	ldr	r3, [r6, r3]
   2d31e:	strd	r1, r2, [sp, #16]
   2d322:	ldr	r2, [sp, #48]	; 0x30
   2d324:	strd	sl, fp, [sp]
   2d328:	str	r2, [sp, #8]
   2d32a:	ldr	r2, [sp, #52]	; 0x34
   2d32c:	str	r2, [sp, #12]
   2d32e:	ldr	r2, [pc, #580]	; (2d574 <load_free_space_tree@@Base+0x3fe>)
   2d330:	add	r2, pc
   2d332:	b.n	2d2e8 <load_free_space_tree@@Base+0x172>
   2d334:	mov	r3, fp
   2d336:	mov	r2, sl
   2d338:	mov	r0, r5
   2d33a:	bl	2b516 <btrfs_abort_transaction@@Base+0x1fa>
   2d33e:	ldr	r3, [sp, #40]	; 0x28
   2d340:	mov	r4, r0
   2d342:	cbnz	r3, 2d382 <load_free_space_tree@@Base+0x20c>
   2d344:	cmp	r0, #1
   2d346:	bne.n	2d350 <load_free_space_tree@@Base+0x1da>
   2d348:	vmov	s16, sl
   2d34c:	vmov	s17, fp
   2d350:	ldr.w	r3, [r9, #388]	; 0x184
   2d354:	str	r4, [sp, #40]	; 0x28
   2d356:	adds.w	sl, sl, r3
   2d35a:	adc.w	fp, fp, #0
   2d35e:	ldr.w	r3, [sp, #105]	; 0x69
   2d362:	ldr	r1, [sp, #96]	; 0x60
   2d364:	ldr.w	r2, [sp, #109]	; 0x6d
   2d368:	adds	r3, r3, r1
   2d36a:	str	r3, [sp, #80]	; 0x50
   2d36c:	ldr	r3, [sp, #100]	; 0x64
   2d36e:	adc.w	r3, r2, r3
   2d372:	str	r3, [sp, #84]	; 0x54
   2d374:	ldrd	r3, r4, [sp, #80]	; 0x50
   2d378:	cmp	fp, r4
   2d37a:	it	eq
   2d37c:	cmpeq	sl, r3
   2d37e:	bcc.n	2d334 <load_free_space_tree@@Base+0x1be>
   2d380:	b.n	2d23c <load_free_space_tree@@Base+0xc6>
   2d382:	ldr	r3, [sp, #40]	; 0x28
   2d384:	cmp	r3, #1
   2d386:	bne.n	2d350 <load_free_space_tree@@Base+0x1da>
   2d388:	cmp	r0, #0
   2d38a:	bne.n	2d350 <load_free_space_tree@@Base+0x1da>
   2d38c:	vmov	r2, s16
   2d390:	mov	r1, r9
   2d392:	vmov	r3, s17
   2d396:	mov	r0, r8
   2d398:	strd	sl, fp, [sp]
   2d39c:	adds	r7, #1
   2d39e:	bl	22ca0 <add_new_free_space@@Base>
   2d3a2:	b.n	2d350 <load_free_space_tree@@Base+0x1da>
   2d3a4:	movs	r4, #0
   2d3a6:	b.n	2d27c <load_free_space_tree@@Base+0x106>
   2d3a8:	movs	r4, #0
   2d3aa:	b.n	2d1c4 <load_free_space_tree@@Base+0x4e>
   2d3ac:	add	r3, sp, #96	; 0x60
   2d3ae:	mov	r4, r7
   2d3b0:	str	r7, [sp, #72]	; 0x48
   2d3b2:	vmov	s16, r3
   2d3b6:	ldr	r3, [pc, #448]	; (2d578 <load_free_space_tree@@Base+0x402>)
   2d3b8:	add	r3, pc
   2d3ba:	vmov	s17, r3
   2d3be:	ldr	r3, [pc, #444]	; (2d57c <load_free_space_tree@@Base+0x406>)
   2d3c0:	add	r3, pc
   2d3c2:	vmov	s19, r3
   2d3c6:	vmov	r0, s18
   2d3ca:	mov	r1, r5
   2d3cc:	bl	2b410 <btrfs_abort_transaction@@Base+0xf4>
   2d3d0:	subs	r3, r0, #0
   2d3d2:	blt.w	2d1c4 <load_free_space_tree@@Base+0x4e>
   2d3d6:	bne.n	2d402 <load_free_space_tree@@Base+0x28c>
   2d3d8:	vmov	r1, s16
   2d3dc:	ldr	r2, [r5, #32]
   2d3de:	ldr	r0, [r5, #0]
   2d3e0:	bl	2b324 <btrfs_abort_transaction@@Base+0x8>
   2d3e4:	ldrb.w	r3, [sp, #104]	; 0x68
   2d3e8:	cmp	r3, #198	; 0xc6
   2d3ea:	beq.n	2d402 <load_free_space_tree@@Base+0x28c>
   2d3ec:	cmp	r3, #199	; 0xc7
   2d3ee:	beq.n	2d418 <load_free_space_tree@@Base+0x2a2>
   2d3f0:	ldr	r2, [pc, #368]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d3f2:	movs	r1, #1
   2d3f4:	ldr	r0, [r6, r2]
   2d3f6:	ldr	r2, [pc, #392]	; (2d580 <load_free_space_tree@@Base+0x40a>)
   2d3f8:	ldr	r0, [r0, #0]
   2d3fa:	add	r2, pc
   2d3fc:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d400:	adds	r4, #1
   2d402:	ldr	r3, [sp, #64]	; 0x40
   2d404:	cmp	r3, r7
   2d406:	beq.w	2d2b8 <load_free_space_tree@@Base+0x142>
   2d40a:	ldr	r3, [pc, #344]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d40c:	ldr	r2, [pc, #372]	; (2d584 <load_free_space_tree@@Base+0x40e>)
   2d40e:	ldr	r0, [r6, r3]
   2d410:	add	r2, pc
   2d412:	ldr	r3, [sp, #64]	; 0x40
   2d414:	str	r7, [sp, #0]
   2d416:	b.n	2d2ae <load_free_space_tree@@Base+0x138>
   2d418:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d41c:	ldrd	r0, r1, [sp, #32]
   2d420:	cmp	r3, r1
   2d422:	it	eq
   2d424:	cmpeq	r2, r0
   2d426:	bcc.n	2d44e <load_free_space_tree@@Base+0x2d8>
   2d428:	ldr	r1, [pc, #312]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d42a:	ldrd	r8, r9, [sp, #32]
   2d42e:	ldr	r0, [r6, r1]
   2d430:	ldr	r1, [sp, #48]	; 0x30
   2d432:	strd	r2, r3, [sp]
   2d436:	ldr	r2, [pc, #336]	; (2d588 <load_free_space_tree@@Base+0x412>)
   2d438:	str	r1, [sp, #8]
   2d43a:	ldr	r1, [sp, #52]	; 0x34
   2d43c:	add	r2, pc
   2d43e:	strd	r8, r9, [sp, #16]
   2d442:	str	r1, [sp, #12]
   2d444:	movs	r1, #1
   2d446:	ldr	r0, [r0, #0]
   2d448:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d44c:	b.n	2d400 <load_free_space_tree@@Base+0x28a>
   2d44e:	ldr.w	r1, [sp, #105]	; 0x69
   2d452:	ldr.w	r0, [sp, #109]	; 0x6d
   2d456:	adds	r1, r1, r2
   2d458:	str	r1, [sp, #40]	; 0x28
   2d45a:	adc.w	r1, r0, r3
   2d45e:	str	r1, [sp, #44]	; 0x2c
   2d460:	ldrd	fp, ip, [sp, #40]	; 0x28
   2d464:	ldrd	r0, r1, [sp, #32]
   2d468:	cmp	r1, ip
   2d46a:	it	eq
   2d46c:	cmpeq	r0, fp
   2d46e:	bcs.n	2d496 <load_free_space_tree@@Base+0x320>
   2d470:	ldr	r3, [pc, #240]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d472:	mov	r2, r1
   2d474:	mov	r1, r0
   2d476:	ldr	r3, [r6, r3]
   2d478:	strd	r1, r2, [sp, #16]
   2d47c:	mov	r1, fp
   2d47e:	ldr	r2, [sp, #48]	; 0x30
   2d480:	str	r2, [sp, #8]
   2d482:	ldr	r2, [sp, #52]	; 0x34
   2d484:	str	r2, [sp, #12]
   2d486:	mov	r2, ip
   2d488:	strd	r1, r2, [sp]
   2d48c:	movs	r1, #1
   2d48e:	ldr	r2, [pc, #252]	; (2d58c <load_free_space_tree@@Base+0x416>)
   2d490:	ldr	r0, [r3, #0]
   2d492:	add	r2, pc
   2d494:	b.n	2d448 <load_free_space_tree@@Base+0x2d2>
   2d496:	ldr	r1, [sp, #72]	; 0x48
   2d498:	cbz	r1, 2d4e6 <load_free_space_tree@@Base+0x370>
   2d49a:	ldr	r1, [sp, #88]	; 0x58
   2d49c:	ldr	r0, [sp, #68]	; 0x44
   2d49e:	adds.w	r1, sl, r1
   2d4a2:	str	r1, [sp, #56]	; 0x38
   2d4a4:	ldr	r1, [sp, #92]	; 0x5c
   2d4a6:	adc.w	r1, r0, r1
   2d4aa:	str	r1, [sp, #60]	; 0x3c
   2d4ac:	ldrd	r0, r1, [sp, #56]	; 0x38
   2d4b0:	cmp	r3, r1
   2d4b2:	it	eq
   2d4b4:	cmpeq	r2, r0
   2d4b6:	bcs.n	2d51e <load_free_space_tree@@Base+0x3a8>
   2d4b8:	ldr	r1, [pc, #168]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d4ba:	ldrd	fp, ip, [sp, #56]	; 0x38
   2d4be:	ldr	r0, [r6, r1]
   2d4c0:	strd	r2, r3, [sp]
   2d4c4:	vmov	r2, s19
   2d4c8:	ldr	r1, [sp, #68]	; 0x44
   2d4ca:	strd	fp, ip, [sp, #24]
   2d4ce:	str.w	sl, [sp, #16]
   2d4d2:	ldrd	sl, fp, [sp, #40]	; 0x28
   2d4d6:	str	r1, [sp, #20]
   2d4d8:	strd	sl, fp, [sp, #8]
   2d4dc:	ldr	r0, [r0, #0]
   2d4de:	movs	r1, #1
   2d4e0:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d4e4:	adds	r4, #1
   2d4e6:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d4ea:	adds	r7, #1
   2d4ec:	ldr.w	r1, [sp, #105]	; 0x69
   2d4f0:	ldr.w	r0, [sp, #109]	; 0x6d
   2d4f4:	adds	r1, r1, r2
   2d4f6:	adc.w	r0, r3, r0
   2d4fa:	strd	r1, r0, [sp]
   2d4fe:	mov	r1, r9
   2d500:	mov	r0, r8
   2d502:	bl	22ca0 <add_new_free_space@@Base>
   2d506:	ldrd	sl, r3, [sp, #96]	; 0x60
   2d50a:	str	r3, [sp, #68]	; 0x44
   2d50c:	ldr.w	r3, [sp, #105]	; 0x69
   2d510:	str	r3, [sp, #88]	; 0x58
   2d512:	ldr.w	r3, [sp, #109]	; 0x6d
   2d516:	str	r3, [sp, #92]	; 0x5c
   2d518:	movs	r3, #1
   2d51a:	str	r3, [sp, #72]	; 0x48
   2d51c:	b.n	2d3c6 <load_free_space_tree@@Base+0x250>
   2d51e:	bne.n	2d4e6 <load_free_space_tree@@Base+0x370>
   2d520:	ldr	r1, [pc, #64]	; (2d564 <load_free_space_tree@@Base+0x3ee>)
   2d522:	ldr	r0, [r6, r1]
   2d524:	ldr	r1, [sp, #68]	; 0x44
   2d526:	str.w	sl, [sp, #16]
   2d52a:	ldrd	sl, fp, [sp, #40]	; 0x28
   2d52e:	strd	r2, r3, [sp, #24]
   2d532:	strd	r2, r3, [sp]
   2d536:	str	r1, [sp, #20]
   2d538:	vmov	r2, s17
   2d53c:	strd	sl, fp, [sp, #8]
   2d540:	b.n	2d4dc <load_free_space_tree@@Base+0x366>
   2d542:	mvn.w	r3, #11
   2d546:	b.n	2d1d4 <load_free_space_tree@@Base+0x5e>
   2d548:	mov	r0, r3
   2d54a:	add	sp, #124	; 0x7c
   2d54c:	vpop	{d8-d9}
   2d550:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d554:	ldrb	r2, [r0, #16]
   2d556:	movs	r3, r0
   2d558:	lsls	r4, r4, #8
   2d55a:	movs	r0, r0
   2d55c:	ldrb	r2, [r7, #15]
   2d55e:	movs	r3, r0
   2d560:	ldrb	r0, [r6, #14]
   2d562:	movs	r3, r0
   2d564:	lsls	r4, r6, #8
   2d566:	movs	r0, r0
   2d568:	adds	r4, #156	; 0x9c
   2d56a:	movs	r1, r0
   2d56c:	adds	r5, #15
   2d56e:	movs	r1, r0
   2d570:	adds	r4, #69	; 0x45
   2d572:	movs	r1, r0
   2d574:	adds	r4, #66	; 0x42
   2d576:	movs	r1, r0
   2d578:	adds	r4, #250	; 0xfa
   2d57a:	movs	r1, r0
   2d57c:	adds	r4, #180	; 0xb4
   2d57e:	movs	r1, r0
   2d580:	adds	r3, #22
   2d582:	movs	r1, r0
   2d584:	adds	r3, #167	; 0xa7
   2d586:	movs	r1, r0
   2d588:	adds	r3, #172	; 0xac
   2d58a:	movs	r1, r0
   2d58c:	adds	r3, #157	; 0x9d
   2d58e:	movs	r1, r0

0002d590 <btrfs_add_corrupt_extent_record@@Base>:
   2d590:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d594:	mov	sl, r2
   2d596:	ldr	r2, [pc, #220]	; (2d674 <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   2d598:	mov	r9, r3
   2d59a:	ldr	r3, [pc, #220]	; (2d678 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2d59c:	sub	sp, #92	; 0x5c
   2d59e:	add	r2, pc
   2d5a0:	ldr.w	r8, [pc, #216]	; 2d67c <btrfs_add_corrupt_extent_record@@Base+0xec>
   2d5a4:	ldr.w	fp, [r0, #380]	; 0x17c
   2d5a8:	mov	r4, r1
   2d5aa:	ldr	r3, [r2, r3]
   2d5ac:	add	r8, pc
   2d5ae:	ldr	r3, [r3, #0]
   2d5b0:	str	r3, [sp, #84]	; 0x54
   2d5b2:	mov.w	r3, #0
   2d5b6:	cmp.w	fp, #0
   2d5ba:	beq.n	2d64e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2d5bc:	movs	r0, #64	; 0x40
   2d5be:	blx	8820 <malloc@plt+0x4>
   2d5c2:	mov	r5, r0
   2d5c4:	cmp	r0, #0
   2d5c6:	beq.n	2d664 <btrfs_add_corrupt_extent_record@@Base+0xd4>
   2d5c8:	add.w	r6, r0, #40	; 0x28
   2d5cc:	add.w	r3, r4, #16
   2d5d0:	ldr	r0, [r4, #0]
   2d5d2:	adds	r4, #8
   2d5d4:	ldr.w	r1, [r4, #-4]
   2d5d8:	cmp	r4, r3
   2d5da:	mov	r7, r6
   2d5dc:	stmia	r7!, {r0, r1}
   2d5de:	mov	r6, r7
   2d5e0:	bne.n	2d5d0 <btrfs_add_corrupt_extent_record@@Base+0x40>
   2d5e2:	ldrb	r3, [r4, #0]
   2d5e4:	mov	r1, r5
   2d5e6:	mov	r0, fp
   2d5e8:	strb	r3, [r7, #0]
   2d5ea:	ldrd	r2, r3, [sp, #128]	; 0x80
   2d5ee:	strd	sl, r9, [r5, #24]
   2d5f2:	strd	r2, r3, [r5, #32]
   2d5f6:	ldr	r3, [sp, #136]	; 0x88
   2d5f8:	str	r3, [r5, #60]	; 0x3c
   2d5fa:	bl	15e42 <insert_cache_extent@@Base>
   2d5fe:	mov	r4, r0
   2d600:	cbz	r0, 2d64e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2d602:	mov	r0, r5
   2d604:	blx	85dc <free@plt+0x4>
   2d608:	cmn.w	r4, #17
   2d60c:	beq.n	2d650 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2d60e:	ldr	r3, [pc, #112]	; (2d680 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   2d610:	add	r4, sp, #20
   2d612:	ldr	r2, [pc, #112]	; (2d684 <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   2d614:	movs	r1, #1
   2d616:	ldr.w	r0, [r8, r3]
   2d61a:	add	r2, pc
   2d61c:	ldr	r3, [pc, #104]	; (2d688 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   2d61e:	str	r1, [sp, #12]
   2d620:	add	r3, pc
   2d622:	str	r3, [sp, #8]
   2d624:	ldr	r3, [pc, #100]	; (2d68c <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   2d626:	add	r3, pc
   2d628:	str	r3, [sp, #4]
   2d62a:	movs	r3, #49	; 0x31
   2d62c:	str	r3, [sp, #0]
   2d62e:	ldr	r3, [pc, #96]	; (2d690 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   2d630:	ldr	r0, [r0, #0]
   2d632:	add	r3, pc
   2d634:	blx	8a14 <__fprintf_chk@plt+0x4>
   2d638:	movs	r1, #16
   2d63a:	mov	r0, r4
   2d63c:	blx	886c <backtrace@plt>
   2d640:	movs	r2, #2
   2d642:	mov	r1, r0
   2d644:	mov	r0, r4
   2d646:	blx	8b7c <backtrace_symbols_fd@plt>
   2d64a:	blx	8b34 <abort@plt>
   2d64e:	movs	r4, #0
   2d650:	ldr	r2, [pc, #64]	; (2d694 <btrfs_add_corrupt_extent_record@@Base+0x104>)
   2d652:	ldr	r3, [pc, #36]	; (2d678 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2d654:	add	r2, pc
   2d656:	ldr	r3, [r2, r3]
   2d658:	ldr	r2, [r3, #0]
   2d65a:	ldr	r3, [sp, #84]	; 0x54
   2d65c:	eors	r2, r3
   2d65e:	beq.n	2d66a <btrfs_add_corrupt_extent_record@@Base+0xda>
   2d660:	blx	86b8 <__stack_chk_fail@plt>
   2d664:	mvn.w	r4, #11
   2d668:	b.n	2d650 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2d66a:	mov	r0, r4
   2d66c:	add	sp, #92	; 0x5c
   2d66e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d672:	nop
   2d674:	strb	r2, [r5, #31]
   2d676:	movs	r3, r0
   2d678:	lsls	r4, r4, #8
   2d67a:	movs	r0, r0
   2d67c:	strb	r4, [r3, #31]
   2d67e:	movs	r3, r0
   2d680:	lsls	r4, r6, #8
   2d682:	movs	r0, r0
   2d684:	stmia	r1!, {r3, r7}
   2d686:	movs	r0, r0
   2d688:	adds	r3, #240	; 0xf0
   2d68a:	movs	r1, r0
   2d68c:	adds	r4, #0
   2d68e:	movs	r1, r0
   2d690:	adds	r3, #213	; 0xd5
   2d692:	movs	r1, r0
   2d694:	strb	r4, [r6, #28]
   2d696:	movs	r3, r0
   2d698:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d69c:	mov	r7, r3
   2d69e:	ldr.w	r9, [r0]
   2d6a2:	mov	r5, r2
   2d6a4:	ldr	r3, [r0, #32]
   2d6a6:	movs	r2, #25
   2d6a8:	add.w	sl, r9, #96	; 0x60
   2d6ac:	movs	r4, #0
   2d6ae:	mla	r3, r2, r3, sl
   2d6b2:	ldr.w	r6, [r3, #118]	; 0x76
   2d6b6:	ldr.w	fp, [r3, #122]	; 0x7a
   2d6ba:	adds	r6, #101	; 0x65
   2d6bc:	cmp	r4, fp
   2d6be:	bcc.n	2d6c4 <btrfs_add_corrupt_extent_record@@Base+0x134>
   2d6c0:	movs	r0, #0
   2d6c2:	b.n	2d6f2 <btrfs_add_corrupt_extent_record@@Base+0x162>
   2d6c4:	add.w	r8, r4, r6
   2d6c8:	add.w	r3, sl, r8
   2d6cc:	ldrh	r3, [r3, #8]
   2d6ce:	cmp	r3, r5
   2d6d0:	add.w	r2, r3, #10
   2d6d4:	add	r4, r2
   2d6d6:	bne.n	2d6bc <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2d6d8:	add.w	r2, r8, #10
   2d6dc:	mov	r3, r5
   2d6de:	mov	r0, r9
   2d6e0:	str	r1, [sp, #4]
   2d6e2:	bl	172b0 <memcmp_extent_buffer@@Base>
   2d6e6:	ldr	r1, [sp, #4]
   2d6e8:	cmp	r0, #0
   2d6ea:	bne.n	2d6bc <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2d6ec:	movs	r0, #1
   2d6ee:	str.w	r8, [r7]
   2d6f2:	add	sp, #12
   2d6f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d6f8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d6fc:	mov	sl, r2
   2d6fe:	ldr.w	r8, [r0]
   2d702:	movs	r1, #25
   2d704:	ldr	r2, [r0, #32]
   2d706:	mov	fp, r3
   2d708:	add.w	r9, r8, #96	; 0x60
   2d70c:	ldr	r3, [sp, #52]	; 0x34
   2d70e:	movs	r4, #0
   2d710:	mla	r2, r1, r2, r9
   2d714:	ldr.w	r6, [r2, #118]	; 0x76
   2d718:	ldr.w	r1, [r2, #122]	; 0x7a
   2d71c:	adds	r6, #101	; 0x65
   2d71e:	str	r1, [sp, #4]
   2d720:	ldr	r2, [sp, #4]
   2d722:	cmp	r4, r2
   2d724:	bcc.n	2d72e <btrfs_add_corrupt_extent_record@@Base+0x19e>
   2d726:	movs	r0, #0
   2d728:	add	sp, #12
   2d72a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d72e:	adds	r7, r4, r6
   2d730:	add.w	r2, r9, r7
   2d734:	ldrh	r5, [r2, #16]
   2d736:	cmp	r5, r3
   2d738:	bne.n	2d762 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d73a:	ldr	r1, [r2, #4]
   2d73c:	ldr	r0, [r2, #0]
   2d73e:	cmp	fp, r1
   2d740:	it	eq
   2d742:	cmpeq	sl, r0
   2d744:	bne.n	2d762 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d746:	ldr	r1, [sp, #48]	; 0x30
   2d748:	add.w	r2, r7, #18
   2d74c:	mov	r0, r8
   2d74e:	str	r3, [sp, #52]	; 0x34
   2d750:	bl	172b0 <memcmp_extent_buffer@@Base>
   2d754:	ldr	r3, [sp, #52]	; 0x34
   2d756:	cbnz	r0, 2d762 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d758:	ldr	r3, [sp, #56]	; 0x38
   2d75a:	cbz	r3, 2d75e <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   2d75c:	str	r7, [r3, #0]
   2d75e:	movs	r0, #1
   2d760:	b.n	2d728 <btrfs_add_corrupt_extent_record@@Base+0x198>
   2d762:	adds	r5, #18
   2d764:	add	r4, r5
   2d766:	b.n	2d720 <btrfs_add_corrupt_extent_record@@Base+0x190>

0002d768 <btrfs_lookup_inode@@Base>:
   2d768:	push	{r4, r5, r6, r7, lr}
   2d76a:	mov	r5, r2
   2d76c:	ldr	r6, [pc, #152]	; (2d808 <btrfs_lookup_inode@@Base+0xa0>)
   2d76e:	sub	sp, #36	; 0x24
   2d770:	ldr	r2, [pc, #152]	; (2d80c <btrfs_lookup_inode@@Base+0xa4>)
   2d772:	mov	r4, r3
   2d774:	add	r6, pc
   2d776:	ldr	r3, [sp, #56]	; 0x38
   2d778:	ldr	r2, [r6, r2]
   2d77a:	ldr	r2, [r2, #0]
   2d77c:	str	r2, [sp, #28]
   2d77e:	mov.w	r2, #0
   2d782:	subs	r2, r3, #0
   2d784:	mov.w	r3, r3, asr #31
   2d788:	str	r3, [sp, #0]
   2d78a:	it	ne
   2d78c:	movne	r2, #1
   2d78e:	mov	r3, r5
   2d790:	str	r2, [sp, #4]
   2d792:	mov	r2, r4
   2d794:	bl	1a1e4 <btrfs_search_slot@@Base>
   2d798:	subs	r6, r0, #0
   2d79a:	ble.n	2d7ee <btrfs_lookup_inode@@Base+0x86>
   2d79c:	ldrb	r3, [r4, #8]
   2d79e:	cmp	r3, #132	; 0x84
   2d7a0:	bne.n	2d7ee <btrfs_lookup_inode@@Base+0x86>
   2d7a2:	ldr.w	r3, [r4, #13]
   2d7a6:	ldr.w	r2, [r4, #9]
   2d7aa:	adds	r3, #1
   2d7ac:	it	eq
   2d7ae:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2d7b2:	bne.n	2d7ee <btrfs_lookup_inode@@Base+0x86>
   2d7b4:	ldr	r2, [r5, #32]
   2d7b6:	cbz	r2, 2d7ee <btrfs_lookup_inode@@Base+0x86>
   2d7b8:	subs	r2, #1
   2d7ba:	movs	r3, #25
   2d7bc:	ldr	r0, [r5, #0]
   2d7be:	add	r1, sp, #8
   2d7c0:	muls	r2, r3
   2d7c2:	movs	r3, #17
   2d7c4:	adds	r2, #101	; 0x65
   2d7c6:	bl	172c2 <read_extent_buffer@@Base>
   2d7ca:	ldrd	r2, r3, [sp, #8]
   2d7ce:	ldr	r1, [r4, #4]
   2d7d0:	ldr	r0, [r4, #0]
   2d7d2:	cmp	r1, r3
   2d7d4:	ldrb.w	r7, [sp, #16]
   2d7d8:	it	eq
   2d7da:	cmpeq	r0, r2
   2d7dc:	bne.n	2d7ee <btrfs_lookup_inode@@Base+0x86>
   2d7de:	ldrb	r3, [r4, #8]
   2d7e0:	cmp	r3, r7
   2d7e2:	itttt	eq
   2d7e4:	ldreq	r3, [r5, #32]
   2d7e6:	moveq	r6, #0
   2d7e8:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2d7ec:	streq	r3, [r5, #32]
   2d7ee:	ldr	r2, [pc, #32]	; (2d810 <btrfs_lookup_inode@@Base+0xa8>)
   2d7f0:	ldr	r3, [pc, #24]	; (2d80c <btrfs_lookup_inode@@Base+0xa4>)
   2d7f2:	add	r2, pc
   2d7f4:	ldr	r3, [r2, r3]
   2d7f6:	ldr	r2, [r3, #0]
   2d7f8:	ldr	r3, [sp, #28]
   2d7fa:	eors	r2, r3
   2d7fc:	beq.n	2d802 <btrfs_lookup_inode@@Base+0x9a>
   2d7fe:	blx	86b8 <__stack_chk_fail@plt>
   2d802:	mov	r0, r6
   2d804:	add	sp, #36	; 0x24
   2d806:	pop	{r4, r5, r6, r7, pc}
   2d808:	strb	r4, [r2, #24]
   2d80a:	movs	r3, r0
   2d80c:	lsls	r4, r4, #8
   2d80e:	movs	r0, r0
   2d810:	strb	r6, [r2, #22]
   2d812:	movs	r3, r0

0002d814 <btrfs_insert_inode@@Base>:
   2d814:	push	{lr}
   2d816:	sub	sp, #36	; 0x24
   2d818:	ldr.w	lr, [pc, #104]	; 2d884 <btrfs_insert_inode@@Base+0x70>
   2d81c:	ldr.w	ip, [pc, #104]	; 2d888 <btrfs_insert_inode@@Base+0x74>
   2d820:	add	lr, pc
   2d822:	ldr.w	ip, [lr, ip]
   2d826:	ldr.w	ip, [ip]
   2d82a:	str.w	ip, [sp, #28]
   2d82e:	mov.w	ip, #0
   2d832:	strd	r2, r3, [sp, #8]
   2d836:	movs	r2, #0
   2d838:	movs	r3, #1
   2d83a:	strb.w	r2, [sp, #17]
   2d83e:	strb.w	r3, [sp, #16]
   2d842:	movs	r3, #160	; 0xa0
   2d844:	strb.w	r2, [sp, #18]
   2d848:	strb.w	r2, [sp, #19]
   2d84c:	strb.w	r2, [sp, #20]
   2d850:	strb.w	r2, [sp, #21]
   2d854:	strb.w	r2, [sp, #22]
   2d858:	strb.w	r2, [sp, #23]
   2d85c:	strb.w	r2, [sp, #24]
   2d860:	add	r2, sp, #8
   2d862:	str	r3, [sp, #0]
   2d864:	ldr	r3, [sp, #40]	; 0x28
   2d866:	bl	1b270 <btrfs_insert_item@@Base>
   2d86a:	ldr	r2, [pc, #32]	; (2d88c <btrfs_insert_inode@@Base+0x78>)
   2d86c:	ldr	r3, [pc, #24]	; (2d888 <btrfs_insert_inode@@Base+0x74>)
   2d86e:	add	r2, pc
   2d870:	ldr	r3, [r2, r3]
   2d872:	ldr	r2, [r3, #0]
   2d874:	ldr	r3, [sp, #28]
   2d876:	eors	r2, r3
   2d878:	beq.n	2d87e <btrfs_insert_inode@@Base+0x6a>
   2d87a:	blx	86b8 <__stack_chk_fail@plt>
   2d87e:	add	sp, #36	; 0x24
   2d880:	ldr.w	pc, [sp], #4
   2d884:	strb	r0, [r5, #21]
   2d886:	movs	r3, r0
   2d888:	lsls	r4, r4, #8
   2d88a:	movs	r0, r0
   2d88c:	strb	r2, [r3, #20]
   2d88e:	movs	r3, r0

0002d890 <btrfs_lookup_inode_ref@@Base>:
   2d890:	push	{r4, r5, r6, lr}
   2d892:	mov	r4, r2
   2d894:	ldr	r2, [pc, #112]	; (2d908 <btrfs_lookup_inode_ref@@Base+0x78>)
   2d896:	mov	r5, r3
   2d898:	ldr	r3, [pc, #112]	; (2d90c <btrfs_lookup_inode_ref@@Base+0x7c>)
   2d89a:	sub	sp, #40	; 0x28
   2d89c:	add	r2, pc
   2d89e:	ldr	r6, [sp, #80]	; 0x50
   2d8a0:	ldr	r3, [r2, r3]
   2d8a2:	ldr	r3, [r3, #0]
   2d8a4:	str	r3, [sp, #36]	; 0x24
   2d8a6:	mov.w	r3, #0
   2d8aa:	movs	r3, #0
   2d8ac:	str	r3, [sp, #12]
   2d8ae:	ldrd	r2, r3, [sp, #64]	; 0x40
   2d8b2:	strd	r2, r3, [sp, #16]
   2d8b6:	movs	r3, #12
   2d8b8:	strb.w	r3, [sp, #24]
   2d8bc:	add	r2, sp, #16
   2d8be:	ldr	r3, [sp, #72]	; 0x48
   2d8c0:	str.w	r3, [sp, #25]
   2d8c4:	ldr	r3, [sp, #76]	; 0x4c
   2d8c6:	str.w	r3, [sp, #29]
   2d8ca:	subs	r3, r6, #0
   2d8cc:	it	ne
   2d8ce:	movne	r3, #1
   2d8d0:	strd	r6, r3, [sp]
   2d8d4:	mov	r3, r4
   2d8d6:	bl	1a1e4 <btrfs_search_slot@@Base>
   2d8da:	cmp	r0, #0
   2d8dc:	bne.n	2d8ee <btrfs_lookup_inode_ref@@Base+0x5e>
   2d8de:	ldr	r2, [sp, #56]	; 0x38
   2d8e0:	add	r3, sp, #12
   2d8e2:	mov	r1, r5
   2d8e4:	mov	r0, r4
   2d8e6:	bl	2d698 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2d8ea:	ldr	r0, [sp, #12]
   2d8ec:	b.n	2d8f0 <btrfs_lookup_inode_ref@@Base+0x60>
   2d8ee:	bge.n	2d8ea <btrfs_lookup_inode_ref@@Base+0x5a>
   2d8f0:	ldr	r2, [pc, #28]	; (2d910 <btrfs_lookup_inode_ref@@Base+0x80>)
   2d8f2:	ldr	r3, [pc, #24]	; (2d90c <btrfs_lookup_inode_ref@@Base+0x7c>)
   2d8f4:	add	r2, pc
   2d8f6:	ldr	r3, [r2, r3]
   2d8f8:	ldr	r2, [r3, #0]
   2d8fa:	ldr	r3, [sp, #36]	; 0x24
   2d8fc:	eors	r2, r3
   2d8fe:	beq.n	2d904 <btrfs_lookup_inode_ref@@Base+0x74>
   2d900:	blx	86b8 <__stack_chk_fail@plt>
   2d904:	add	sp, #40	; 0x28
   2d906:	pop	{r4, r5, r6, pc}
   2d908:	strb	r4, [r5, #19]
   2d90a:	movs	r3, r0
   2d90c:	lsls	r4, r4, #8
   2d90e:	movs	r0, r0
   2d910:	strb	r4, [r2, #18]
   2d912:	movs	r3, r0

0002d914 <btrfs_lookup_inode_extref@@Base>:
   2d914:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d918:	mov	sl, r2
   2d91a:	ldr	r2, [pc, #152]	; (2d9b4 <btrfs_lookup_inode_extref@@Base+0xa0>)
   2d91c:	sub	sp, #52	; 0x34
   2d91e:	ldr	r3, [pc, #152]	; (2d9b8 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d920:	mov	r5, r0
   2d922:	add	r2, pc
   2d924:	ldrd	r7, r8, [sp, #112]	; 0x70
   2d928:	ldrd	r6, r9, [sp, #96]	; 0x60
   2d92c:	mov	r4, r1
   2d92e:	ldr	r3, [r2, r3]
   2d930:	mov	r1, r7
   2d932:	ldr.w	fp, [sp, #120]	; 0x78
   2d936:	ldr	r3, [r3, #0]
   2d938:	str	r3, [sp, #44]	; 0x2c
   2d93a:	mov.w	r3, #0
   2d93e:	ldrd	r2, r3, [sp, #88]	; 0x58
   2d942:	mov	r0, r6
   2d944:	strd	r2, r3, [sp, #24]
   2d948:	mov	r2, r8
   2d94a:	movs	r3, #13
   2d94c:	strb.w	r3, [sp, #32]
   2d950:	bl	173a2 <crc32c_le@@Base>
   2d954:	movs	r3, #0
   2d956:	str.w	r3, [sp, #37]	; 0x25
   2d95a:	subs.w	r3, fp, r3
   2d95e:	add	r2, sp, #24
   2d960:	mov	r1, sl
   2d962:	it	ne
   2d964:	movne	r3, #1
   2d966:	strd	fp, r3, [sp]
   2d96a:	mov	r3, r4
   2d96c:	str.w	r0, [sp, #33]	; 0x21
   2d970:	mov	r0, r5
   2d972:	bl	1a1e4 <btrfs_search_slot@@Base>
   2d976:	cmp	r0, #0
   2d978:	blt.n	2d97e <btrfs_lookup_inode_extref@@Base+0x6a>
   2d97a:	beq.n	2d992 <btrfs_lookup_inode_extref@@Base+0x7e>
   2d97c:	movs	r0, #0
   2d97e:	ldr	r2, [pc, #60]	; (2d9bc <btrfs_lookup_inode_extref@@Base+0xa8>)
   2d980:	ldr	r3, [pc, #52]	; (2d9b8 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d982:	add	r2, pc
   2d984:	ldr	r3, [r2, r3]
   2d986:	ldr	r2, [r3, #0]
   2d988:	ldr	r3, [sp, #44]	; 0x2c
   2d98a:	eors	r2, r3
   2d98c:	beq.n	2d9ac <btrfs_lookup_inode_extref@@Base+0x98>
   2d98e:	blx	86b8 <__stack_chk_fail@plt>
   2d992:	add	r3, sp, #20
   2d994:	mov	r2, r6
   2d996:	strd	r8, r3, [sp, #4]
   2d99a:	mov	r0, r4
   2d99c:	mov	r3, r9
   2d99e:	str	r7, [sp, #0]
   2d9a0:	bl	2d6f8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2d9a4:	cmp	r0, #0
   2d9a6:	beq.n	2d97c <btrfs_lookup_inode_extref@@Base+0x68>
   2d9a8:	ldr	r0, [sp, #20]
   2d9aa:	b.n	2d97e <btrfs_lookup_inode_extref@@Base+0x6a>
   2d9ac:	add	sp, #52	; 0x34
   2d9ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d9b2:	nop
   2d9b4:	strb	r6, [r4, #17]
   2d9b6:	movs	r3, r0
   2d9b8:	lsls	r4, r4, #8
   2d9ba:	movs	r0, r0
   2d9bc:	strb	r6, [r0, #16]
   2d9be:	movs	r3, r0

0002d9c0 <btrfs_del_inode_extref@@Base>:
   2d9c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d9c4:	mov	r6, r3
   2d9c6:	vpush	{d8}
   2d9ca:	mov	fp, r2
   2d9cc:	ldr	r2, [pc, #284]	; (2daec <btrfs_del_inode_extref@@Base+0x12c>)
   2d9ce:	mov	r8, r0
   2d9d0:	mov	r7, r1
   2d9d2:	mov	r1, fp
   2d9d4:	add	r2, pc
   2d9d6:	sub	sp, #52	; 0x34
   2d9d8:	ldrd	sl, r3, [sp, #104]	; 0x68
   2d9dc:	ldr.w	r9, [sp, #112]	; 0x70
   2d9e0:	vmov	s16, r3
   2d9e4:	ldr	r3, [pc, #264]	; (2daf0 <btrfs_del_inode_extref@@Base+0x130>)
   2d9e6:	mov	r0, sl
   2d9e8:	ldr	r3, [r2, r3]
   2d9ea:	ldr	r3, [r3, #0]
   2d9ec:	str	r3, [sp, #44]	; 0x2c
   2d9ee:	mov.w	r3, #0
   2d9f2:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d9f6:	strd	r2, r3, [sp, #24]
   2d9fa:	mov	r2, r6
   2d9fc:	movs	r3, #13
   2d9fe:	strb.w	r3, [sp, #32]
   2da02:	bl	173a2 <crc32c_le@@Base>
   2da06:	movs	r3, #0
   2da08:	str.w	r3, [sp, #37]	; 0x25
   2da0c:	str.w	r0, [sp, #33]	; 0x21
   2da10:	bl	17df8 <btrfs_alloc_path@@Base>
   2da14:	mov	r4, r0
   2da16:	cmp	r0, #0
   2da18:	beq.n	2dad8 <btrfs_del_inode_extref@@Base+0x118>
   2da1a:	mov.w	r3, #4294967295	; 0xffffffff
   2da1e:	movs	r2, #1
   2da20:	mov	r1, r7
   2da22:	strd	r3, r2, [sp]
   2da26:	mov	r3, r0
   2da28:	add	r2, sp, #24
   2da2a:	mov	r0, r8
   2da2c:	bl	1a1e4 <btrfs_search_slot@@Base>
   2da30:	subs	r5, r0, #0
   2da32:	ble.n	2da52 <btrfs_del_inode_extref@@Base+0x92>
   2da34:	mvn.w	r5, #1
   2da38:	mov	r0, r4
   2da3a:	bl	17e26 <btrfs_free_path@@Base>
   2da3e:	ldr	r2, [pc, #180]	; (2daf4 <btrfs_del_inode_extref@@Base+0x134>)
   2da40:	ldr	r3, [pc, #172]	; (2daf0 <btrfs_del_inode_extref@@Base+0x130>)
   2da42:	add	r2, pc
   2da44:	ldr	r3, [r2, r3]
   2da46:	ldr	r2, [r3, #0]
   2da48:	ldr	r3, [sp, #44]	; 0x2c
   2da4a:	eors	r2, r3
   2da4c:	beq.n	2dade <btrfs_del_inode_extref@@Base+0x11e>
   2da4e:	blx	86b8 <__stack_chk_fail@plt>
   2da52:	bne.n	2da38 <btrfs_del_inode_extref@@Base+0x78>
   2da54:	add	r3, sp, #20
   2da56:	mov	r2, sl
   2da58:	strd	r6, r3, [sp, #4]
   2da5c:	mov	r0, r4
   2da5e:	vmov	r3, s16
   2da62:	str.w	fp, [sp]
   2da66:	bl	2d6f8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2da6a:	cmp	r0, #0
   2da6c:	beq.n	2da34 <btrfs_del_inode_extref@@Base+0x74>
   2da6e:	ldr	r0, [r4, #0]
   2da70:	movs	r2, #25
   2da72:	ldr	r3, [r4, #32]
   2da74:	add.w	ip, r0, #96	; 0x60
   2da78:	mla	r3, r2, r3, ip
   2da7c:	ldr.w	sl, [r3, #122]	; 0x7a
   2da80:	cmp.w	r9, #0
   2da84:	beq.n	2da92 <btrfs_del_inode_extref@@Base+0xd2>
   2da86:	ldr	r2, [sp, #20]
   2da88:	add	r2, ip
   2da8a:	ldr	r1, [r2, #8]
   2da8c:	ldr	r3, [r2, #12]
   2da8e:	strd	r1, r3, [r9]
   2da92:	adds	r6, #18
   2da94:	ldr	r3, [r4, #32]
   2da96:	cmp	r6, sl
   2da98:	bne.n	2daac <btrfs_del_inode_extref@@Base+0xec>
   2da9a:	movs	r2, #1
   2da9c:	mov	r1, r7
   2da9e:	str	r2, [sp, #0]
   2daa0:	mov	r0, r8
   2daa2:	mov	r2, r4
   2daa4:	bl	1b3a0 <btrfs_del_items@@Base>
   2daa8:	mov	r5, r0
   2daaa:	b.n	2da38 <btrfs_del_inode_extref@@Base+0x78>
   2daac:	mov.w	lr, #25
   2dab0:	ldr	r1, [sp, #20]
   2dab2:	mla	r3, lr, r3, ip
   2dab6:	adds	r2, r6, r1
   2dab8:	ldr.w	ip, [r3, #118]	; 0x76
   2dabc:	rsb	r3, r2, #101	; 0x65
   2dac0:	add	r3, sl
   2dac2:	add	r3, ip
   2dac4:	bl	17334 <memmove_extent_buffer@@Base>
   2dac8:	sub.w	r2, sl, r6
   2dacc:	movs	r3, #1
   2dace:	mov	r1, r4
   2dad0:	mov	r0, r7
   2dad2:	bl	19e24 <btrfs_truncate_item@@Base>
   2dad6:	b.n	2da38 <btrfs_del_inode_extref@@Base+0x78>
   2dad8:	mvn.w	r5, #11
   2dadc:	b.n	2da3e <btrfs_del_inode_extref@@Base+0x7e>
   2dade:	mov	r0, r5
   2dae0:	add	sp, #52	; 0x34
   2dae2:	vpop	{d8}
   2dae6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2daea:	nop
   2daec:	strb	r4, [r6, #14]
   2daee:	movs	r3, r0
   2daf0:	lsls	r4, r4, #8
   2daf2:	movs	r0, r0
   2daf4:	strb	r6, [r0, #13]
   2daf6:	movs	r3, r0

0002daf8 <btrfs_insert_inode_extref@@Base>:
   2daf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dafc:	sub	sp, #68	; 0x44
   2dafe:	mov	r6, r3
   2db00:	mov	r7, r2
   2db02:	ldrd	sl, r3, [sp, #112]	; 0x70
   2db06:	mov	r5, r0
   2db08:	ldr	r2, [pc, #260]	; (2dc10 <btrfs_insert_inode_extref@@Base+0x118>)
   2db0a:	mov	r9, r1
   2db0c:	mov	r1, r7
   2db0e:	mov.w	fp, #0
   2db12:	str	r3, [sp, #20]
   2db14:	add	r2, pc
   2db16:	ldr	r3, [sp, #120]	; 0x78
   2db18:	mov	r0, sl
   2db1a:	add.w	r8, r6, #18
   2db1e:	str	r3, [sp, #24]
   2db20:	ldr	r3, [sp, #124]	; 0x7c
   2db22:	str	r3, [sp, #28]
   2db24:	ldr	r3, [pc, #236]	; (2dc14 <btrfs_insert_inode_extref@@Base+0x11c>)
   2db26:	ldr	r3, [r2, r3]
   2db28:	ldr	r3, [r3, #0]
   2db2a:	str	r3, [sp, #60]	; 0x3c
   2db2c:	mov.w	r3, #0
   2db30:	ldrd	r2, r3, [sp, #104]	; 0x68
   2db34:	strd	r2, r3, [sp, #40]	; 0x28
   2db38:	mov	r2, r6
   2db3a:	movs	r3, #13
   2db3c:	strb.w	r3, [sp, #48]	; 0x30
   2db40:	bl	173a2 <crc32c_le@@Base>
   2db44:	str.w	fp, [sp, #53]	; 0x35
   2db48:	str.w	r0, [sp, #49]	; 0x31
   2db4c:	bl	17df8 <btrfs_alloc_path@@Base>
   2db50:	mov	r4, r0
   2db52:	cmp	r0, #0
   2db54:	beq.n	2dc00 <btrfs_insert_inode_extref@@Base+0x108>
   2db56:	movs	r3, #1
   2db58:	mov	r2, r0
   2db5a:	str	r3, [sp, #4]
   2db5c:	mov	r0, r5
   2db5e:	add	r3, sp, #36	; 0x24
   2db60:	mov	r1, r9
   2db62:	str	r3, [sp, #0]
   2db64:	add	r3, sp, #40	; 0x28
   2db66:	str.w	r8, [sp, #36]	; 0x24
   2db6a:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2db6e:	cmn.w	r0, #17
   2db72:	mov	r5, r0
   2db74:	bne.n	2dbe2 <btrfs_insert_inode_extref@@Base+0xea>
   2db76:	strd	r6, fp, [sp, #4]
   2db7a:	mov	r2, sl
   2db7c:	ldr	r3, [sp, #20]
   2db7e:	mov	r0, r4
   2db80:	str	r7, [sp, #0]
   2db82:	bl	2d6f8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2db86:	mov	fp, r0
   2db88:	cbnz	r0, 2dbe6 <btrfs_insert_inode_extref@@Base+0xee>
   2db8a:	mov	r2, r8
   2db8c:	mov	r1, r4
   2db8e:	mov	r0, r9
   2db90:	mov	r5, fp
   2db92:	bl	19fd8 <btrfs_extend_item@@Base>
   2db96:	ldr	r3, [r4, #0]
   2db98:	movs	r2, #25
   2db9a:	ldr	r1, [r4, #32]
   2db9c:	rsb	r8, r8, #101	; 0x65
   2dba0:	adds	r3, #96	; 0x60
   2dba2:	mla	r1, r2, r1, r3
   2dba6:	ldr.w	r2, [r1, #118]	; 0x76
   2dbaa:	add	r8, r2
   2dbac:	ldr.w	r2, [r1, #122]	; 0x7a
   2dbb0:	ldr	r1, [sp, #24]
   2dbb2:	add	r2, r8
   2dbb4:	add	r3, r2
   2dbb6:	strh	r6, [r3, #16]
   2dbb8:	ldr	r3, [r4, #0]
   2dbba:	add	r3, r2
   2dbbc:	str	r1, [r3, #104]	; 0x68
   2dbbe:	ldr	r1, [sp, #28]
   2dbc0:	str	r1, [r3, #108]	; 0x6c
   2dbc2:	ldr	r3, [r4, #0]
   2dbc4:	ldr	r1, [sp, #20]
   2dbc6:	add	r3, r2
   2dbc8:	adds	r2, #18
   2dbca:	str.w	sl, [r3, #96]	; 0x60
   2dbce:	str	r1, [r3, #100]	; 0x64
   2dbd0:	mov	r3, r6
   2dbd2:	ldr	r0, [r4, #0]
   2dbd4:	mov	r1, r7
   2dbd6:	bl	172d8 <write_extent_buffer@@Base>
   2dbda:	ldr	r0, [r4, #0]
   2dbdc:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2dbe0:	b.n	2dbe6 <btrfs_insert_inode_extref@@Base+0xee>
   2dbe2:	cmp	r0, #0
   2dbe4:	bge.n	2db96 <btrfs_insert_inode_extref@@Base+0x9e>
   2dbe6:	mov	r0, r4
   2dbe8:	bl	17e26 <btrfs_free_path@@Base>
   2dbec:	ldr	r2, [pc, #40]	; (2dc18 <btrfs_insert_inode_extref@@Base+0x120>)
   2dbee:	ldr	r3, [pc, #36]	; (2dc14 <btrfs_insert_inode_extref@@Base+0x11c>)
   2dbf0:	add	r2, pc
   2dbf2:	ldr	r3, [r2, r3]
   2dbf4:	ldr	r2, [r3, #0]
   2dbf6:	ldr	r3, [sp, #60]	; 0x3c
   2dbf8:	eors	r2, r3
   2dbfa:	beq.n	2dc06 <btrfs_insert_inode_extref@@Base+0x10e>
   2dbfc:	blx	86b8 <__stack_chk_fail@plt>
   2dc00:	mvn.w	r5, #11
   2dc04:	b.n	2dbec <btrfs_insert_inode_extref@@Base+0xf4>
   2dc06:	mov	r0, r5
   2dc08:	add	sp, #68	; 0x44
   2dc0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc0e:	nop
   2dc10:	strb	r4, [r6, #9]
   2dc12:	movs	r3, r0
   2dc14:	lsls	r4, r4, #8
   2dc16:	movs	r0, r0
   2dc18:	strb	r0, [r3, #6]
   2dc1a:	movs	r3, r0

0002dc1c <btrfs_insert_inode_ref@@Base>:
   2dc1c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc20:	sub	sp, #148	; 0x94
   2dc22:	mov	r6, r3
   2dc24:	mov	r8, r2
   2dc26:	ldr	r3, [sp, #192]	; 0xc0
   2dc28:	mov	r9, r0
   2dc2a:	ldr	r2, [pc, #424]	; (2ddd4 <btrfs_insert_inode_ref@@Base+0x1b8>)
   2dc2c:	mov	r7, r1
   2dc2e:	ldr.w	fp, [sp, #204]	; 0xcc
   2dc32:	str	r3, [sp, #36]	; 0x24
   2dc34:	add	r2, pc
   2dc36:	ldr	r3, [sp, #196]	; 0xc4
   2dc38:	str	r3, [sp, #40]	; 0x28
   2dc3a:	ldr	r3, [sp, #200]	; 0xc8
   2dc3c:	str	r3, [sp, #24]
   2dc3e:	ldr	r3, [pc, #408]	; (2ddd8 <btrfs_insert_inode_ref@@Base+0x1bc>)
   2dc40:	add	r3, pc
   2dc42:	str	r3, [sp, #32]
   2dc44:	ldr	r3, [pc, #404]	; (2dddc <btrfs_insert_inode_ref@@Base+0x1c0>)
   2dc46:	ldr	r3, [r2, r3]
   2dc48:	ldr	r3, [r3, #0]
   2dc4a:	str	r3, [sp, #140]	; 0x8c
   2dc4c:	mov.w	r3, #0
   2dc50:	add.w	r3, r6, #10
   2dc54:	str	r3, [sp, #28]
   2dc56:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2dc5a:	strd	r3, r4, [sp, #56]	; 0x38
   2dc5e:	ldr	r3, [sp, #36]	; 0x24
   2dc60:	str.w	r3, [sp, #65]	; 0x41
   2dc64:	ldr	r3, [sp, #40]	; 0x28
   2dc66:	str.w	r3, [sp, #69]	; 0x45
   2dc6a:	movs	r3, #12
   2dc6c:	strb.w	r3, [sp, #64]	; 0x40
   2dc70:	bl	17df8 <btrfs_alloc_path@@Base>
   2dc74:	mov	r4, r0
   2dc76:	cmp	r0, #0
   2dc78:	beq.w	2ddc6 <btrfs_insert_inode_ref@@Base+0x1aa>
   2dc7c:	ldr	r3, [sp, #28]
   2dc7e:	mov	r2, r0
   2dc80:	add.w	sl, sp, #52	; 0x34
   2dc84:	mov	r1, r7
   2dc86:	mov	r0, r9
   2dc88:	str.w	sl, [sp]
   2dc8c:	str	r3, [sp, #52]	; 0x34
   2dc8e:	movs	r3, #1
   2dc90:	str	r3, [sp, #4]
   2dc92:	add	r3, sp, #56	; 0x38
   2dc94:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2dc98:	cmn.w	r0, #17
   2dc9c:	mov	r5, r0
   2dc9e:	bne.n	2dd4e <btrfs_insert_inode_ref@@Base+0x132>
   2dca0:	mov	r3, sl
   2dca2:	mov	r2, r6
   2dca4:	mov	r1, r8
   2dca6:	mov	r0, r4
   2dca8:	bl	2d698 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2dcac:	cmp	r0, #0
   2dcae:	bne.n	2dd5c <btrfs_insert_inode_ref@@Base+0x140>
   2dcb0:	ldr	r2, [r4, #0]
   2dcb2:	mov.w	sl, #25
   2dcb6:	ldr	r3, [r4, #32]
   2dcb8:	mov	r1, r4
   2dcba:	mov	r0, r7
   2dcbc:	mla	r3, sl, r3, r2
   2dcc0:	ldr	r2, [sp, #28]
   2dcc2:	ldr.w	r3, [r3, #218]	; 0xda
   2dcc6:	str	r3, [sp, #44]	; 0x2c
   2dcc8:	bl	19fd8 <btrfs_extend_item@@Base>
   2dccc:	ldr	r3, [sp, #44]	; 0x2c
   2dcce:	mov	r5, r0
   2dcd0:	cbz	r0, 2dd12 <btrfs_insert_inode_ref@@Base+0xf6>
   2dcd2:	ldr	r2, [sp, #32]
   2dcd4:	add	r4, sp, #76	; 0x4c
   2dcd6:	ldr	r3, [pc, #264]	; (2dde0 <btrfs_insert_inode_ref@@Base+0x1c4>)
   2dcd8:	movs	r1, #1
   2dcda:	ldr	r0, [r2, r3]
   2dcdc:	ldr	r3, [pc, #260]	; (2dde4 <btrfs_insert_inode_ref@@Base+0x1c8>)
   2dcde:	ldr	r2, [pc, #264]	; (2dde8 <btrfs_insert_inode_ref@@Base+0x1cc>)
   2dce0:	add	r3, pc
   2dce2:	str	r3, [sp, #8]
   2dce4:	ldr	r3, [pc, #260]	; (2ddec <btrfs_insert_inode_ref@@Base+0x1d0>)
   2dce6:	add	r2, pc
   2dce8:	str	r5, [sp, #12]
   2dcea:	add	r3, pc
   2dcec:	str	r3, [sp, #4]
   2dcee:	movs	r3, #83	; 0x53
   2dcf0:	str	r3, [sp, #0]
   2dcf2:	ldr	r3, [pc, #252]	; (2ddf0 <btrfs_insert_inode_ref@@Base+0x1d4>)
   2dcf4:	ldr	r0, [r0, #0]
   2dcf6:	add	r3, pc
   2dcf8:	blx	8a14 <__fprintf_chk@plt+0x4>
   2dcfc:	movs	r1, #16
   2dcfe:	mov	r0, r4
   2dd00:	blx	886c <backtrace@plt>
   2dd04:	movs	r2, #2
   2dd06:	mov	r1, r0
   2dd08:	mov	r0, r4
   2dd0a:	blx	8b7c <backtrace_symbols_fd@plt>
   2dd0e:	blx	8b34 <abort@plt>
   2dd12:	ldr	r2, [r4, #32]
   2dd14:	ldr	r1, [r4, #0]
   2dd16:	mla	r2, sl, r2, r1
   2dd1a:	ldr.w	r2, [r2, #214]	; 0xd6
   2dd1e:	add	r3, r2
   2dd20:	adds	r3, #101	; 0x65
   2dd22:	str	r3, [sp, #52]	; 0x34
   2dd24:	ldr	r2, [r4, #0]
   2dd26:	mov	r1, r8
   2dd28:	add	r2, r3
   2dd2a:	strh.w	r6, [r2, #104]	; 0x68
   2dd2e:	ldr	r2, [r4, #0]
   2dd30:	add	r3, r2
   2dd32:	ldr	r2, [sp, #24]
   2dd34:	str.w	fp, [r3, #100]	; 0x64
   2dd38:	str	r2, [r3, #96]	; 0x60
   2dd3a:	mov	r3, r6
   2dd3c:	ldr	r2, [sp, #52]	; 0x34
   2dd3e:	ldr	r0, [r4, #0]
   2dd40:	adds	r2, #10
   2dd42:	bl	172d8 <write_extent_buffer@@Base>
   2dd46:	ldr	r0, [r4, #0]
   2dd48:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2dd4c:	b.n	2dd5c <btrfs_insert_inode_ref@@Base+0x140>
   2dd4e:	cmp	r0, #0
   2dd50:	bge.n	2ddb6 <btrfs_insert_inode_ref@@Base+0x19a>
   2dd52:	cmn.w	r0, #75	; 0x4b
   2dd56:	it	eq
   2dd58:	mvneq.w	r5, #30
   2dd5c:	mov	r0, r4
   2dd5e:	bl	17e26 <btrfs_free_path@@Base>
   2dd62:	cmn.w	r5, #31
   2dd66:	bne.n	2dda2 <btrfs_insert_inode_ref@@Base+0x186>
   2dd68:	ldr.w	r3, [r7, #464]	; 0x1d0
   2dd6c:	ldr.w	r3, [r3, #308]	; 0x134
   2dd70:	ldr.w	r1, [r3, #188]	; 0xbc
   2dd74:	movs	r3, #0
   2dd76:	and.w	r2, r1, #64	; 0x40
   2dd7a:	orrs	r3, r2
   2dd7c:	beq.n	2dda2 <btrfs_insert_inode_ref@@Base+0x186>
   2dd7e:	ldr	r3, [sp, #24]
   2dd80:	mov	r2, r8
   2dd82:	mov	r1, r7
   2dd84:	mov	r0, r9
   2dd86:	strd	r3, fp, [sp, #16]
   2dd8a:	ldr	r3, [sp, #36]	; 0x24
   2dd8c:	str	r3, [sp, #8]
   2dd8e:	ldr	r3, [sp, #40]	; 0x28
   2dd90:	str	r3, [sp, #12]
   2dd92:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2dd96:	strd	r3, r4, [sp]
   2dd9a:	mov	r3, r6
   2dd9c:	bl	2daf8 <btrfs_insert_inode_extref@@Base>
   2dda0:	mov	r5, r0
   2dda2:	ldr	r2, [pc, #80]	; (2ddf4 <btrfs_insert_inode_ref@@Base+0x1d8>)
   2dda4:	ldr	r3, [pc, #52]	; (2dddc <btrfs_insert_inode_ref@@Base+0x1c0>)
   2dda6:	add	r2, pc
   2dda8:	ldr	r3, [r2, r3]
   2ddaa:	ldr	r2, [r3, #0]
   2ddac:	ldr	r3, [sp, #140]	; 0x8c
   2ddae:	eors	r2, r3
   2ddb0:	beq.n	2ddcc <btrfs_insert_inode_ref@@Base+0x1b0>
   2ddb2:	blx	86b8 <__stack_chk_fail@plt>
   2ddb6:	ldr	r3, [r4, #32]
   2ddb8:	movs	r1, #25
   2ddba:	ldr	r2, [r4, #0]
   2ddbc:	mla	r3, r1, r3, r2
   2ddc0:	ldr.w	r3, [r3, #214]	; 0xd6
   2ddc4:	b.n	2dd20 <btrfs_insert_inode_ref@@Base+0x104>
   2ddc6:	mvn.w	r5, #11
   2ddca:	b.n	2dda2 <btrfs_insert_inode_ref@@Base+0x186>
   2ddcc:	mov	r0, r5
   2ddce:	add	sp, #148	; 0x94
   2ddd0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ddd4:	strb	r4, [r2, #5]
   2ddd6:	movs	r3, r0
   2ddd8:	strb	r0, [r1, #5]
   2ddda:	movs	r3, r0
   2dddc:	lsls	r4, r4, #8
   2ddde:	movs	r0, r0
   2dde0:	lsls	r4, r6, #8
   2dde2:	movs	r0, r0
   2dde4:	stmia	r1!, {r2}
   2dde6:	movs	r0, r0
   2dde8:	hlt	0x003c
   2ddea:	movs	r0, r0
   2ddec:	cmp	r5, #105	; 0x69
   2ddee:	movs	r1, r0
   2ddf0:	cmp	r5, #80	; 0x50
   2ddf2:	movs	r1, r0
   2ddf4:	ldr	r2, [r4, #124]	; 0x7c
   2ddf6:	movs	r3, r0

0002ddf8 <btrfs_del_inode_ref@@Base>:
   2ddf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ddfc:	sub	sp, #76	; 0x4c
   2ddfe:	mov	r8, r3
   2de00:	mov	r9, r2
   2de02:	ldr	r3, [sp, #120]	; 0x78
   2de04:	mov	r7, r0
   2de06:	ldr	r2, [pc, #356]	; (2df6c <btrfs_del_inode_ref@@Base+0x174>)
   2de08:	mov	r6, r1
   2de0a:	ldr.w	sl, [sp, #128]	; 0x80
   2de0e:	str	r3, [sp, #32]
   2de10:	add	r2, pc
   2de12:	ldr	r3, [sp, #124]	; 0x7c
   2de14:	str	r3, [sp, #36]	; 0x24
   2de16:	ldr	r3, [pc, #344]	; (2df70 <btrfs_del_inode_ref@@Base+0x178>)
   2de18:	ldr	r3, [r2, r3]
   2de1a:	ldr	r3, [r3, #0]
   2de1c:	str	r3, [sp, #68]	; 0x44
   2de1e:	mov.w	r3, #0
   2de22:	ldrd	r3, r4, [sp, #112]	; 0x70
   2de26:	strd	r3, r4, [sp, #48]	; 0x30
   2de2a:	ldr	r3, [sp, #32]
   2de2c:	str.w	r3, [sp, #57]	; 0x39
   2de30:	ldr	r3, [sp, #36]	; 0x24
   2de32:	str.w	r3, [sp, #61]	; 0x3d
   2de36:	movs	r3, #12
   2de38:	strb.w	r3, [sp, #56]	; 0x38
   2de3c:	bl	17df8 <btrfs_alloc_path@@Base>
   2de40:	mov	r5, r0
   2de42:	cmp	r0, #0
   2de44:	beq.w	2df5e <btrfs_del_inode_ref@@Base+0x166>
   2de48:	mov.w	r3, #4294967295	; 0xffffffff
   2de4c:	movs	r2, #1
   2de4e:	mov	r1, r6
   2de50:	strd	r3, r2, [sp]
   2de54:	mov	r3, r0
   2de56:	add	r2, sp, #48	; 0x30
   2de58:	mov	r0, r7
   2de5a:	bl	1a1e4 <btrfs_search_slot@@Base>
   2de5e:	subs	r4, r0, #0
   2de60:	ble.n	2dec2 <btrfs_del_inode_ref@@Base+0xca>
   2de62:	mov.w	fp, #1
   2de66:	mvn.w	r4, #1
   2de6a:	mov	r0, r5
   2de6c:	bl	17e26 <btrfs_free_path@@Base>
   2de70:	cmp.w	fp, #0
   2de74:	beq.n	2deae <btrfs_del_inode_ref@@Base+0xb6>
   2de76:	ldr.w	r3, [r6, #464]	; 0x1d0
   2de7a:	ldr.w	r3, [r3, #308]	; 0x134
   2de7e:	ldr.w	r1, [r3, #188]	; 0xbc
   2de82:	movs	r3, #0
   2de84:	and.w	r2, r1, #64	; 0x40
   2de88:	orrs	r3, r2
   2de8a:	beq.n	2deae <btrfs_del_inode_ref@@Base+0xb6>
   2de8c:	ldr	r3, [sp, #32]
   2de8e:	mov	r2, r9
   2de90:	mov	r1, r6
   2de92:	mov	r0, r7
   2de94:	str.w	sl, [sp, #16]
   2de98:	str	r3, [sp, #8]
   2de9a:	ldr	r3, [sp, #36]	; 0x24
   2de9c:	str	r3, [sp, #12]
   2de9e:	ldrd	r3, r4, [sp, #112]	; 0x70
   2dea2:	strd	r3, r4, [sp]
   2dea6:	mov	r3, r8
   2dea8:	bl	2d9c0 <btrfs_del_inode_extref@@Base>
   2deac:	mov	r4, r0
   2deae:	ldr	r2, [pc, #196]	; (2df74 <btrfs_del_inode_ref@@Base+0x17c>)
   2deb0:	ldr	r3, [pc, #188]	; (2df70 <btrfs_del_inode_ref@@Base+0x178>)
   2deb2:	add	r2, pc
   2deb4:	ldr	r3, [r2, r3]
   2deb6:	ldr	r2, [r3, #0]
   2deb8:	ldr	r3, [sp, #68]	; 0x44
   2deba:	eors	r2, r3
   2debc:	beq.n	2df64 <btrfs_del_inode_ref@@Base+0x16c>
   2debe:	blx	86b8 <__stack_chk_fail@plt>
   2dec2:	bne.n	2df58 <btrfs_del_inode_ref@@Base+0x160>
   2dec4:	add	r3, sp, #44	; 0x2c
   2dec6:	mov	r2, r8
   2dec8:	mov	r1, r9
   2deca:	mov	r0, r5
   2decc:	bl	2d698 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2ded0:	cmp	r0, #0
   2ded2:	beq.n	2de62 <btrfs_del_inode_ref@@Base+0x6a>
   2ded4:	ldr	r0, [r5, #0]
   2ded6:	movs	r2, #25
   2ded8:	ldr	r3, [r5, #32]
   2deda:	add.w	ip, r0, #96	; 0x60
   2dede:	mla	r3, r2, r3, ip
   2dee2:	ldr.w	r3, [r3, #122]	; 0x7a
   2dee6:	str	r3, [sp, #28]
   2dee8:	cmp.w	sl, #0
   2deec:	beq.n	2defe <btrfs_del_inode_ref@@Base+0x106>
   2deee:	ldr	r3, [sp, #44]	; 0x2c
   2def0:	add.w	r1, ip, r3
   2def4:	ldr.w	r2, [ip, r3]
   2def8:	ldr	r3, [r1, #4]
   2defa:	strd	r2, r3, [sl]
   2defe:	ldr	r2, [sp, #28]
   2df00:	add.w	fp, r8, #10
   2df04:	ldr	r3, [r5, #32]
   2df06:	cmp	fp, r2
   2df08:	bne.n	2df1e <btrfs_del_inode_ref@@Base+0x126>
   2df0a:	movs	r2, #1
   2df0c:	mov	r1, r6
   2df0e:	str	r2, [sp, #0]
   2df10:	mov	r0, r7
   2df12:	mov	r2, r5
   2df14:	mov	fp, r4
   2df16:	bl	1b3a0 <btrfs_del_items@@Base>
   2df1a:	mov	r4, r0
   2df1c:	b.n	2de6a <btrfs_del_inode_ref@@Base+0x72>
   2df1e:	mov.w	lr, #25
   2df22:	ldr	r1, [sp, #44]	; 0x2c
   2df24:	mla	r3, lr, r3, ip
   2df28:	add.w	r2, fp, r1
   2df2c:	rsb	lr, r2, #101	; 0x65
   2df30:	ldr.w	ip, [r3, #118]	; 0x76
   2df34:	ldr	r3, [sp, #28]
   2df36:	add	r3, lr
   2df38:	add	r3, ip
   2df3a:	bl	17334 <memmove_extent_buffer@@Base>
   2df3e:	ldr	r2, [sp, #28]
   2df40:	movs	r3, #1
   2df42:	mov	r1, r5
   2df44:	sub.w	r2, r2, fp
   2df48:	mov	r0, r6
   2df4a:	bl	19e24 <btrfs_truncate_item@@Base>
   2df4e:	ldr	r0, [r5, #0]
   2df50:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2df54:	mov	fp, r4
   2df56:	b.n	2de6a <btrfs_del_inode_ref@@Base+0x72>
   2df58:	mov.w	fp, #0
   2df5c:	b.n	2de6a <btrfs_del_inode_ref@@Base+0x72>
   2df5e:	mvn.w	r4, #11
   2df62:	b.n	2deae <btrfs_del_inode_ref@@Base+0xb6>
   2df64:	mov	r0, r4
   2df66:	add	sp, #76	; 0x4c
   2df68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2df6c:	ldr	r0, [r7, #116]	; 0x74
   2df6e:	movs	r3, r0
   2df70:	lsls	r4, r4, #8
   2df72:	movs	r0, r0
   2df74:	ldr	r6, [r2, #108]	; 0x6c
   2df76:	movs	r3, r0
   2df78:	ldr	r2, [pc, #60]	; (2dfb8 <btrfs_del_inode_ref@@Base+0x1c0>)
   2df7a:	movs	r1, #16
   2df7c:	ldr	r3, [pc, #60]	; (2dfbc <btrfs_del_inode_ref@@Base+0x1c4>)
   2df7e:	push	{r4, lr}
   2df80:	add	r2, pc
   2df82:	sub	sp, #72	; 0x48
   2df84:	add	r4, sp, #4
   2df86:	ldr	r3, [r2, r3]
   2df88:	mov	r0, r4
   2df8a:	ldr	r3, [r3, #0]
   2df8c:	str	r3, [sp, #68]	; 0x44
   2df8e:	mov.w	r3, #0
   2df92:	blx	886c <backtrace@plt>
   2df96:	movs	r2, #2
   2df98:	mov	r1, r0
   2df9a:	mov	r0, r4
   2df9c:	blx	8b7c <backtrace_symbols_fd@plt>
   2dfa0:	ldr	r2, [pc, #28]	; (2dfc0 <btrfs_del_inode_ref@@Base+0x1c8>)
   2dfa2:	ldr	r3, [pc, #24]	; (2dfbc <btrfs_del_inode_ref@@Base+0x1c4>)
   2dfa4:	add	r2, pc
   2dfa6:	ldr	r3, [r2, r3]
   2dfa8:	ldr	r2, [r3, #0]
   2dfaa:	ldr	r3, [sp, #68]	; 0x44
   2dfac:	eors	r2, r3
   2dfae:	beq.n	2dfb4 <btrfs_del_inode_ref@@Base+0x1bc>
   2dfb0:	blx	86b8 <__stack_chk_fail@plt>
   2dfb4:	add	sp, #72	; 0x48
   2dfb6:	pop	{r4, pc}
   2dfb8:	ldr	r0, [r1, #96]	; 0x60
   2dfba:	movs	r3, r0
   2dfbc:	lsls	r4, r4, #8
   2dfbe:	movs	r0, r0
   2dfc0:	ldr	r4, [r4, #92]	; 0x5c
   2dfc2:	movs	r3, r0
   2dfc4:	push	{r4, lr}
   2dfc6:	mov	r4, r1
   2dfc8:	ldr	r1, [pc, #84]	; (2e020 <btrfs_del_inode_ref@@Base+0x228>)
   2dfca:	sub	sp, #24
   2dfcc:	ldr	r3, [pc, #84]	; (2e024 <btrfs_del_inode_ref@@Base+0x22c>)
   2dfce:	add	r1, pc
   2dfd0:	ldr	r3, [r1, r3]
   2dfd2:	mov	r1, sp
   2dfd4:	ldr	r3, [r3, #0]
   2dfd6:	str	r3, [sp, #20]
   2dfd8:	mov.w	r3, #0
   2dfdc:	movs	r3, #25
   2dfde:	muls	r2, r3
   2dfe0:	movs	r3, #17
   2dfe2:	adds	r2, #101	; 0x65
   2dfe4:	bl	172c2 <read_extent_buffer@@Base>
   2dfe8:	ldr.w	r3, [sp, #13]
   2dfec:	ldr.w	r2, [sp, #9]
   2dff0:	str.w	r3, [r4, #13]
   2dff4:	ldrb.w	r3, [sp, #8]
   2dff8:	str.w	r2, [r4, #9]
   2dffc:	ldr	r2, [pc, #40]	; (2e028 <btrfs_del_inode_ref@@Base+0x230>)
   2dffe:	strb	r3, [r4, #8]
   2e000:	ldr	r3, [sp, #0]
   2e002:	add	r2, pc
   2e004:	str	r3, [r4, #0]
   2e006:	ldr	r3, [sp, #4]
   2e008:	str	r3, [r4, #4]
   2e00a:	ldr	r3, [pc, #24]	; (2e024 <btrfs_del_inode_ref@@Base+0x22c>)
   2e00c:	ldr	r3, [r2, r3]
   2e00e:	ldr	r2, [r3, #0]
   2e010:	ldr	r3, [sp, #20]
   2e012:	eors	r2, r3
   2e014:	beq.n	2e01a <btrfs_del_inode_ref@@Base+0x222>
   2e016:	blx	86b8 <__stack_chk_fail@plt>
   2e01a:	add	sp, #24
   2e01c:	pop	{r4, pc}
   2e01e:	nop
   2e020:	ldr	r2, [r7, #88]	; 0x58
   2e022:	movs	r3, r0
   2e024:	lsls	r4, r4, #8
   2e026:	movs	r0, r0
   2e028:	ldr	r6, [r0, #88]	; 0x58
   2e02a:	movs	r3, r0
   2e02c:	push	{r0, r1, r2, r3, r4, lr}
   2e02e:	ldr	r4, [pc, #40]	; (2e058 <btrfs_del_inode_ref@@Base+0x260>)
   2e030:	ldr	r5, [pc, #40]	; (2e05c <btrfs_del_inode_ref@@Base+0x264>)
   2e032:	add	r4, pc
   2e034:	ldr	r4, [r4, r5]
   2e036:	strd	r2, r1, [sp]
   2e03a:	movs	r1, #1
   2e03c:	strd	r0, r3, [sp, #8]
   2e040:	ldr	r2, [pc, #28]	; (2e060 <btrfs_del_inode_ref@@Base+0x268>)
   2e042:	ldr	r3, [pc, #32]	; (2e064 <btrfs_del_inode_ref@@Base+0x26c>)
   2e044:	add	r2, pc
   2e046:	ldr	r0, [r4, #0]
   2e048:	add	r3, pc
   2e04a:	blx	8a14 <__fprintf_chk@plt+0x4>
   2e04e:	bl	2df78 <btrfs_del_inode_ref@@Base+0x180>
   2e052:	blx	8b34 <abort@plt>
   2e056:	nop
   2e058:	ldr	r6, [r2, #84]	; 0x54
   2e05a:	movs	r3, r0
   2e05c:	lsls	r4, r6, #8
   2e05e:	movs	r0, r0
   2e060:			; <UNDEFINED> instruction: 0xb75e
   2e062:	movs	r0, r0
   2e064:	cmp	r2, #34	; 0x22
   2e066:	movs	r1, r0
   2e068:	push	{r3, lr}
   2e06a:	cbz	r3, 2e070 <btrfs_del_inode_ref@@Base+0x278>
   2e06c:	bl	2e02c <btrfs_del_inode_ref@@Base+0x234>
   2e070:	pop	{r3, pc}

0002e072 <btrfs_insert_file_extent@@Base>:
   2e072:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e076:	sub	sp, #60	; 0x3c
   2e078:	mov	r8, r3
   2e07a:	mov	r6, r1
   2e07c:	ldr	r3, [sp, #96]	; 0x60
   2e07e:	mov	r5, r0
   2e080:	str	r2, [sp, #16]
   2e082:	movs	r0, #0
   2e084:	ldr	r2, [pc, #312]	; (2e1c0 <btrfs_insert_file_extent@@Base+0x14e>)
   2e086:	str	r3, [sp, #12]
   2e088:	ldr	r3, [pc, #312]	; (2e1c4 <btrfs_insert_file_extent@@Base+0x152>)
   2e08a:	add	r2, pc
   2e08c:	ldr	r1, [sp, #100]	; 0x64
   2e08e:	ldrd	r7, fp, [sp, #112]	; 0x70
   2e092:	ldr	r3, [r2, r3]
   2e094:	ldrd	sl, r9, [sp, #120]	; 0x78
   2e098:	ldr	r3, [r3, #0]
   2e09a:	str	r3, [sp, #52]	; 0x34
   2e09c:	mov.w	r3, #0
   2e0a0:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e0a4:	ldr.w	r3, [r3, #308]	; 0x134
   2e0a8:	ldr.w	ip, [r3, #188]	; 0xbc
   2e0ac:	mov	r3, r0
   2e0ae:	and.w	r2, ip, #512	; 0x200
   2e0b2:	orrs	r3, r2
   2e0b4:	ldrd	r3, r4, [sp, #104]	; 0x68
   2e0b8:	beq.n	2e0c2 <btrfs_insert_file_extent@@Base+0x50>
   2e0ba:	orrs	r3, r4
   2e0bc:	bne.n	2e0ca <btrfs_insert_file_extent@@Base+0x58>
   2e0be:	mov	r6, r0
   2e0c0:	b.n	2e19c <btrfs_insert_file_extent@@Base+0x12a>
   2e0c2:	orrs	r3, r4
   2e0c4:	itt	eq
   2e0c6:	moveq	r7, r0
   2e0c8:	moveq	fp, r7
   2e0ca:	str	r1, [sp, #20]
   2e0cc:	bl	17df8 <btrfs_alloc_path@@Base>
   2e0d0:	mov	r4, r0
   2e0d2:	cmp	r0, #0
   2e0d4:	beq.n	2e1b0 <btrfs_insert_file_extent@@Base+0x13e>
   2e0d6:	ldr	r3, [sp, #16]
   2e0d8:	mov	r2, r0
   2e0da:	ldr	r1, [sp, #20]
   2e0dc:	mov	r0, r5
   2e0de:	strd	r3, r8, [sp, #32]
   2e0e2:	mov.w	r8, #1
   2e0e6:	ldr	r3, [sp, #12]
   2e0e8:	str.w	r1, [sp, #45]	; 0x2d
   2e0ec:	mov	r1, r6
   2e0ee:	str.w	r8, [sp, #4]
   2e0f2:	str.w	r3, [sp, #41]	; 0x29
   2e0f6:	movs	r3, #108	; 0x6c
   2e0f8:	strb.w	r3, [sp, #40]	; 0x28
   2e0fc:	movs	r3, #53	; 0x35
   2e0fe:	str	r3, [sp, #28]
   2e100:	add	r3, sp, #28
   2e102:	str	r3, [sp, #0]
   2e104:	add	r3, sp, #32
   2e106:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2e10a:	subs	r6, r0, #0
   2e10c:	blt.n	2e196 <btrfs_insert_file_extent@@Base+0x124>
   2e10e:	ldr	r1, [pc, #184]	; (2e1c8 <btrfs_insert_file_extent@@Base+0x156>)
   2e110:	mov	r3, r6
   2e112:	ldr	r0, [pc, #184]	; (2e1cc <btrfs_insert_file_extent@@Base+0x15a>)
   2e114:	movs	r2, #67	; 0x43
   2e116:	add	r1, pc
   2e118:	add	r0, pc
   2e11a:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2e11e:	ldr	r0, [r4, #0]
   2e120:	ldr	r3, [r4, #32]
   2e122:	movs	r2, #25
   2e124:	add.w	ip, r0, #96	; 0x60
   2e128:	mla	r3, r2, r3, ip
   2e12c:	ldr	r2, [sp, #104]	; 0x68
   2e12e:	ldr.w	r1, [r3, #118]	; 0x76
   2e132:	adds	r1, #101	; 0x65
   2e134:	add.w	r3, ip, r1
   2e138:	str.w	r2, [r3, #21]
   2e13c:	ldr	r2, [sp, #108]	; 0x6c
   2e13e:	str.w	r7, [r3, #29]
   2e142:	str.w	fp, [r3, #33]	; 0x21
   2e146:	str.w	r2, [r3, #25]
   2e14a:	movs	r2, #0
   2e14c:	str.w	sl, [r3, #45]	; 0x2d
   2e150:	strb.w	r2, [r3, #37]	; 0x25
   2e154:	strb.w	r2, [r3, #38]	; 0x26
   2e158:	strb.w	r2, [r3, #39]	; 0x27
   2e15c:	strb.w	r2, [r3, #40]	; 0x28
   2e160:	strb.w	r2, [r3, #41]	; 0x29
   2e164:	strb.w	r2, [r3, #42]	; 0x2a
   2e168:	strb.w	r2, [r3, #43]	; 0x2b
   2e16c:	strb.w	r2, [r3, #44]	; 0x2c
   2e170:	str.w	r9, [r3, #49]	; 0x31
   2e174:	str.w	sl, [r3, #8]
   2e178:	str.w	r9, [r3, #12]
   2e17c:	ldrd	r7, r5, [r5, #8]
   2e180:	str.w	r7, [ip, r1]
   2e184:	str	r5, [r3, #4]
   2e186:	strb.w	r8, [r3, #20]
   2e18a:	strb	r2, [r3, #16]
   2e18c:	strb	r2, [r3, #17]
   2e18e:	strb	r2, [r3, #18]
   2e190:	strb	r2, [r3, #19]
   2e192:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2e196:	mov	r0, r4
   2e198:	bl	17e26 <btrfs_free_path@@Base>
   2e19c:	ldr	r2, [pc, #48]	; (2e1d0 <btrfs_insert_file_extent@@Base+0x15e>)
   2e19e:	ldr	r3, [pc, #36]	; (2e1c4 <btrfs_insert_file_extent@@Base+0x152>)
   2e1a0:	add	r2, pc
   2e1a2:	ldr	r3, [r2, r3]
   2e1a4:	ldr	r2, [r3, #0]
   2e1a6:	ldr	r3, [sp, #52]	; 0x34
   2e1a8:	eors	r2, r3
   2e1aa:	beq.n	2e1b6 <btrfs_insert_file_extent@@Base+0x144>
   2e1ac:	blx	86b8 <__stack_chk_fail@plt>
   2e1b0:	mvn.w	r6, #11
   2e1b4:	b.n	2e19c <btrfs_insert_file_extent@@Base+0x12a>
   2e1b6:	mov	r0, r6
   2e1b8:	add	sp, #60	; 0x3c
   2e1ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1be:	nop
   2e1c0:	ldr	r6, [r7, #76]	; 0x4c
   2e1c2:	movs	r3, r0
   2e1c4:	lsls	r4, r4, #8
   2e1c6:	movs	r0, r0
   2e1c8:	cmp	r1, #118	; 0x76
   2e1ca:	movs	r1, r0
   2e1cc:	pop	{r2, r3, r6, r7}
   2e1ce:	movs	r0, r0
   2e1d0:	ldr	r0, [r5, #60]	; 0x3c
   2e1d2:	movs	r3, r0

0002e1d4 <btrfs_insert_inline_extent@@Base>:
   2e1d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e1d8:	mov	sl, r2
   2e1da:	ldr	r2, [pc, #208]	; (2e2ac <btrfs_insert_inline_extent@@Base+0xd8>)
   2e1dc:	mov	r4, r3
   2e1de:	ldr	r3, [pc, #208]	; (2e2b0 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e1e0:	sub	sp, #52	; 0x34
   2e1e2:	add	r2, pc
   2e1e4:	mov	r9, r0
   2e1e6:	str	r1, [sp, #12]
   2e1e8:	ldr	r3, [r2, r3]
   2e1ea:	ldrd	r8, fp, [sp, #88]	; 0x58
   2e1ee:	ldrd	r7, r6, [sp, #96]	; 0x60
   2e1f2:	ldr	r3, [r3, #0]
   2e1f4:	str	r3, [sp, #44]	; 0x2c
   2e1f6:	mov.w	r3, #0
   2e1fa:	bl	17df8 <btrfs_alloc_path@@Base>
   2e1fe:	mov	r5, r0
   2e200:	cmp	r0, #0
   2e202:	beq.n	2e29c <btrfs_insert_inline_extent@@Base+0xc8>
   2e204:	movs	r3, #108	; 0x6c
   2e206:	mov	r2, r0
   2e208:	strb.w	r3, [sp, #32]
   2e20c:	mov	r0, r9
   2e20e:	add.w	r3, r6, #21
   2e212:	ldr	r1, [sp, #12]
   2e214:	str	r3, [sp, #20]
   2e216:	movs	r3, #1
   2e218:	str	r3, [sp, #4]
   2e21a:	add	r3, sp, #20
   2e21c:	str	r3, [sp, #0]
   2e21e:	add	r3, sp, #24
   2e220:	strd	sl, r4, [sp, #24]
   2e224:	str.w	r8, [sp, #33]	; 0x21
   2e228:	str.w	fp, [sp, #37]	; 0x25
   2e22c:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2e230:	mov	r4, r0
   2e232:	cbnz	r0, 2e282 <btrfs_insert_inline_extent@@Base+0xae>
   2e234:	ldr	r0, [r5, #0]
   2e236:	movs	r2, #25
   2e238:	ldr	r3, [r5, #32]
   2e23a:	add.w	r1, r0, #96	; 0x60
   2e23e:	ldrd	sl, lr, [r9, #8]
   2e242:	str	r0, [sp, #12]
   2e244:	mla	r3, r2, r3, r1
   2e248:	ldr.w	ip, [r3, #118]	; 0x76
   2e24c:	add.w	r2, ip, #101	; 0x65
   2e250:	adds	r3, r1, r2
   2e252:	str.w	sl, [r1, r2]
   2e256:	mov	r1, r7
   2e258:	str.w	lr, [r3, #4]
   2e25c:	strb	r4, [r3, #20]
   2e25e:	str	r6, [r3, #8]
   2e260:	str	r4, [r3, #12]
   2e262:	strb	r4, [r3, #16]
   2e264:	strb	r4, [r3, #17]
   2e266:	strb	r4, [r3, #18]
   2e268:	strb	r4, [r3, #19]
   2e26a:	mov	r3, r6
   2e26c:	ldr.w	r2, [sp, #33]	; 0x21
   2e270:	rsb	r2, r2, #122	; 0x7a
   2e274:	add	r2, r8
   2e276:	add	r2, ip
   2e278:	bl	172d8 <write_extent_buffer@@Base>
   2e27c:	ldr	r0, [sp, #12]
   2e27e:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2e282:	mov	r0, r5
   2e284:	bl	17e26 <btrfs_free_path@@Base>
   2e288:	ldr	r2, [pc, #40]	; (2e2b4 <btrfs_insert_inline_extent@@Base+0xe0>)
   2e28a:	ldr	r3, [pc, #36]	; (2e2b0 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e28c:	add	r2, pc
   2e28e:	ldr	r3, [r2, r3]
   2e290:	ldr	r2, [r3, #0]
   2e292:	ldr	r3, [sp, #44]	; 0x2c
   2e294:	eors	r2, r3
   2e296:	beq.n	2e2a2 <btrfs_insert_inline_extent@@Base+0xce>
   2e298:	blx	86b8 <__stack_chk_fail@plt>
   2e29c:	mvn.w	r4, #11
   2e2a0:	b.n	2e288 <btrfs_insert_inline_extent@@Base+0xb4>
   2e2a2:	mov	r0, r4
   2e2a4:	add	sp, #52	; 0x34
   2e2a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e2aa:	nop
   2e2ac:	ldr	r6, [r4, #56]	; 0x38
   2e2ae:	movs	r3, r0
   2e2b0:	lsls	r4, r4, #8
   2e2b2:	movs	r0, r0
   2e2b4:	ldr	r4, [r7, #44]	; 0x2c
   2e2b6:	movs	r3, r0

0002e2b8 <btrfs_csum_file_block@@Base>:
   2e2b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2bc:	mov	fp, r0
   2e2be:	vpush	{d8-d9}
   2e2c2:	mov	r6, r1
   2e2c4:	sub	sp, #140	; 0x8c
   2e2c6:	strd	r2, r3, [sp, #24]
   2e2ca:	ldr	r3, [sp, #200]	; 0xc8
   2e2cc:	ldr.w	r2, [pc, #1044]	; 2e6e4 <btrfs_csum_file_block@@Base+0x42c>
   2e2d0:	ldrd	r7, r8, [sp, #192]	; 0xc0
   2e2d4:	vmov	s18, r3
   2e2d8:	ldr.w	r3, [pc, #1036]	; 2e6e8 <btrfs_csum_file_block@@Base+0x430>
   2e2dc:	add	r2, pc
   2e2de:	add	r3, pc
   2e2e0:	str	r3, [sp, #36]	; 0x24
   2e2e2:	ldr.w	r3, [pc, #1032]	; 2e6ec <btrfs_csum_file_block@@Base+0x434>
   2e2e6:	ldr	r3, [r2, r3]
   2e2e8:	ldr	r3, [r3, #0]
   2e2ea:	str	r3, [sp, #132]	; 0x84
   2e2ec:	mov.w	r3, #0
   2e2f0:	ldr.w	r3, [r1, #464]	; 0x1d0
   2e2f4:	ldr.w	r2, [r3, #388]	; 0x184
   2e2f8:	ldr.w	r0, [r3, #308]	; 0x134
   2e2fc:	vmov	s16, r2
   2e300:	bl	17db8 <btrfs_super_csum_size@@Base>
   2e304:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e308:	ldr.w	r3, [r3, #308]	; 0x134
   2e30c:	ldrh.w	r3, [r3, #196]	; 0xc4
   2e310:	vmov	s17, r3
   2e314:	mov	r5, r0
   2e316:	bl	17df8 <btrfs_alloc_path@@Base>
   2e31a:	mov	r4, r0
   2e31c:	cmp	r0, #0
   2e31e:	beq.w	2e6d2 <btrfs_csum_file_block@@Base+0x41a>
   2e322:	mvn.w	r2, #9
   2e326:	mov.w	r3, #4294967295	; 0xffffffff
   2e32a:	strd	r2, r3, [sp, #40]	; 0x28
   2e32e:	mov.w	r9, #128	; 0x80
   2e332:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e336:	str.w	r7, [sp, #49]	; 0x31
   2e33a:	str.w	r8, [sp, #53]	; 0x35
   2e33e:	ldr.w	r0, [r3, #308]	; 0x134
   2e342:	strb.w	r9, [sp, #48]	; 0x30
   2e346:	bl	17db8 <btrfs_super_csum_size@@Base>
   2e34a:	mvn.w	r2, #9
   2e34e:	mov.w	r3, #4294967295	; 0xffffffff
   2e352:	movs	r1, #1
   2e354:	strd	r2, r3, [sp, #60]	; 0x3c
   2e358:	movs	r3, #0
   2e35a:	add	r2, sp, #60	; 0x3c
   2e35c:	strd	r3, r1, [sp]
   2e360:	mov	r3, r4
   2e362:	mov	r1, r6
   2e364:	str.w	r7, [sp, #69]	; 0x45
   2e368:	str.w	r8, [sp, #73]	; 0x49
   2e36c:	strb.w	r9, [sp, #68]	; 0x44
   2e370:	mov	sl, r0
   2e372:	mov	r0, fp
   2e374:	bl	1a1e4 <btrfs_search_slot@@Base>
   2e378:	cmp	r0, #0
   2e37a:	blt.n	2e38a <btrfs_csum_file_block@@Base+0xd2>
   2e37c:	ldr.w	r9, [r4]
   2e380:	beq.n	2e3e8 <btrfs_csum_file_block@@Base+0x130>
   2e382:	ldr	r2, [r4, #32]
   2e384:	cbnz	r2, 2e38e <btrfs_csum_file_block@@Base+0xd6>
   2e386:	mvn.w	r0, #1
   2e38a:	mov	r8, r0
   2e38c:	b.n	2e406 <btrfs_csum_file_block@@Base+0x14e>
   2e38e:	subs	r2, #1
   2e390:	add	r1, sp, #80	; 0x50
   2e392:	mov	r0, r9
   2e394:	str	r2, [r4, #32]
   2e396:	bl	2dfc4 <btrfs_del_inode_ref@@Base+0x1cc>
   2e39a:	ldrb.w	r3, [sp, #88]	; 0x58
   2e39e:	cmp	r3, #128	; 0x80
   2e3a0:	bne.n	2e386 <btrfs_csum_file_block@@Base+0xce>
   2e3a2:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e3a6:	ldr.w	r0, [sp, #89]	; 0x59
   2e3aa:	ldr.w	r1, [sp, #93]	; 0x5d
   2e3ae:	subs	r0, r7, r0
   2e3b0:	ldr.w	r2, [r3, #388]	; 0x184
   2e3b4:	sbc.w	r1, r8, r1
   2e3b8:	movs	r3, #0
   2e3ba:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e3be:	ldr	r3, [r4, #32]
   2e3c0:	movs	r2, #25
   2e3c2:	mla	r3, r2, r3, r9
   2e3c6:	strd	r0, r1, [sp, #16]
   2e3ca:	mov	r1, sl
   2e3cc:	ldr.w	r0, [r3, #218]	; 0xda
   2e3d0:	bl	38f40 <btrfs_util_strerror@@Base+0x290>
   2e3d4:	ldrd	r2, r3, [sp, #16]
   2e3d8:	asrs	r1, r0, #31
   2e3da:	cmp	r3, r1
   2e3dc:	it	eq
   2e3de:	cmpeq	r2, r0
   2e3e0:	bcc.n	2e3f0 <btrfs_csum_file_block@@Base+0x138>
   2e3e2:	mvn.w	r0, #26
   2e3e6:	b.n	2e38a <btrfs_csum_file_block@@Base+0xd2>
   2e3e8:	movs	r2, #0
   2e3ea:	movs	r3, #0
   2e3ec:	strd	r2, r3, [sp, #16]
   2e3f0:	ldr	r3, [r4, #32]
   2e3f2:	movs	r2, #25
   2e3f4:	mla	r3, r2, r3, r9
   2e3f8:	ldr.w	r8, [r3, #214]	; 0xd6
   2e3fc:	ldr	r3, [sp, #16]
   2e3fe:	add.w	r8, r8, #101	; 0x65
   2e402:	mla	r8, sl, r3, r8
   2e406:	cmn.w	r8, #4096	; 0x1000
   2e40a:	ldr	r2, [r4, #0]
   2e40c:	bhi.n	2e438 <btrfs_csum_file_block@@Base+0x180>
   2e40e:	mov	r6, r2
   2e410:	add	r7, sp, #100	; 0x64
   2e412:	vmov	r1, s18
   2e416:	ldr	r3, [sp, #204]	; 0xcc
   2e418:	mov	r2, r7
   2e41a:	vmov	r0, s17
   2e41e:	bl	1bfee <btrfs_csum_data@@Base>
   2e422:	mov	r1, r7
   2e424:	mov	r3, r5
   2e426:	mov	r2, r8
   2e428:	mov	r0, r6
   2e42a:	movs	r7, #0
   2e42c:	bl	172d8 <write_extent_buffer@@Base>
   2e430:	ldr	r0, [r4, #0]
   2e432:	bl	1d4b8 <btrfs_mark_buffer_dirty@@Base>
   2e436:	b.n	2e5b0 <btrfs_csum_file_block@@Base+0x2f8>
   2e438:	cmn.w	r8, #27
   2e43c:	ldr	r0, [r4, #32]
   2e43e:	bne.n	2e4a4 <btrfs_csum_file_block@@Base+0x1ec>
   2e440:	mov.w	sl, #25
   2e444:	mov	r1, r5
   2e446:	mla	r0, sl, r0, r2
   2e44a:	ldr.w	r0, [r0, #218]	; 0xda
   2e44e:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e452:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e456:	mov	r1, r5
   2e458:	mov	r7, r0
   2e45a:	ldr.w	r0, [r3, #384]	; 0x180
   2e45e:	subs	r0, #151	; 0x97
   2e460:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e464:	subs	r3, r0, #1
   2e466:	cmp	r7, r3
   2e468:	bcs.w	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e46c:	mov	r0, r4
   2e46e:	mov.w	r8, #1
   2e472:	bl	17e00 <btrfs_release_path@@Base>
   2e476:	add	r2, sp, #40	; 0x28
   2e478:	mov	r3, r4
   2e47a:	mov	r1, r6
   2e47c:	mov	r0, fp
   2e47e:	strd	r5, r8, [sp]
   2e482:	bl	1a1e4 <btrfs_search_slot@@Base>
   2e486:	subs	r7, r0, #0
   2e488:	blt.w	2e5b0 <btrfs_csum_file_block@@Base+0x2f8>
   2e48c:	bne.w	2e5fa <btrfs_csum_file_block@@Base+0x342>
   2e490:	ldr	r1, [pc, #604]	; (2e6f0 <btrfs_csum_file_block@@Base+0x438>)
   2e492:	mov	r3, r8
   2e494:	ldr	r0, [pc, #604]	; (2e6f4 <btrfs_csum_file_block@@Base+0x43c>)
   2e496:	movw	r2, #265	; 0x109
   2e49a:	add	r1, pc
   2e49c:	adds	r1, #25
   2e49e:	add	r0, pc
   2e4a0:	bl	2e02c <btrfs_del_inode_ref@@Base+0x234>
   2e4a4:	ldr.w	r3, [r2, #192]	; 0xc0
   2e4a8:	subs	r3, #1
   2e4aa:	cmp	r3, r0
   2e4ac:	bls.w	2e5cc <btrfs_csum_file_block@@Base+0x314>
   2e4b0:	adds	r2, r0, #1
   2e4b2:	ldr	r0, [r4, #0]
   2e4b4:	add	r1, sp, #80	; 0x50
   2e4b6:	bl	2dfc4 <btrfs_del_inode_ref@@Base+0x1cc>
   2e4ba:	ldrd	r2, r3, [sp, #80]	; 0x50
   2e4be:	mov.w	r1, #4294967295	; 0xffffffff
   2e4c2:	mvn.w	r0, #9
   2e4c6:	cmp	r3, r1
   2e4c8:	it	eq
   2e4ca:	cmpeq	r2, r0
   2e4cc:	bne.w	2e5e2 <btrfs_csum_file_block@@Base+0x32a>
   2e4d0:	ldrb.w	r3, [sp, #88]	; 0x58
   2e4d4:	cmp	r3, #128	; 0x80
   2e4d6:	bne.w	2e5e2 <btrfs_csum_file_block@@Base+0x32a>
   2e4da:	ldr.w	r7, [sp, #89]	; 0x59
   2e4de:	mov.w	r9, #1
   2e4e2:	ldr.w	r8, [sp, #93]	; 0x5d
   2e4e6:	mov	r0, r4
   2e4e8:	bl	17e00 <btrfs_release_path@@Base>
   2e4ec:	cmp.w	r9, #0
   2e4f0:	beq.w	2e6c8 <btrfs_csum_file_block@@Base+0x410>
   2e4f4:	ldrd	r0, r1, [sp, #24]
   2e4f8:	mov	r3, r8
   2e4fa:	ldr.w	r9, [sp, #53]	; 0x35
   2e4fe:	mov	r2, r7
   2e500:	cmp	r1, r8
   2e502:	ldr.w	r8, [sp, #49]	; 0x31
   2e506:	it	eq
   2e508:	cmpeq	r0, r7
   2e50a:	mov.w	sl, #0
   2e50e:	itt	cc
   2e510:	movcc	r2, r0
   2e512:	movcc	r3, r1
   2e514:	subs.w	r8, r2, r8
   2e518:	mov	r1, r5
   2e51a:	sbc.w	r9, r3, r9
   2e51e:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e522:	ldr.w	r0, [r3, #384]	; 0x180
   2e526:	subs	r0, #151	; 0x97
   2e528:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e52c:	vmov	r2, s16
   2e530:	mov	r3, sl
   2e532:	mov	r1, r9
   2e534:	subs	r7, r0, #1
   2e536:	mov	r0, r8
   2e538:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e53c:	mov	r2, r7
   2e53e:	mov	r8, r0
   2e540:	mov	r9, r1
   2e542:	orrs.w	r3, r8, r9
   2e546:	itt	eq
   2e548:	moveq.w	r8, #1
   2e54c:	moveq.w	r9, #0
   2e550:	cmp	r9, sl
   2e552:	it	eq
   2e554:	cmpeq	r8, r7
   2e556:	it	cc
   2e558:	movcc	r2, r8
   2e55a:	muls	r2, r5
   2e55c:	add	r3, sp, #60	; 0x3c
   2e55e:	str	r2, [sp, #60]	; 0x3c
   2e560:	mov.w	r8, #1
   2e564:	str	r3, [sp, #0]
   2e566:	mov	r2, r4
   2e568:	add	r3, sp, #40	; 0x28
   2e56a:	mov	r1, r6
   2e56c:	mov	r0, fp
   2e56e:	str.w	r8, [sp, #4]
   2e572:	bl	1afb4 <btrfs_insert_empty_items@@Base>
   2e576:	subs	r7, r0, #0
   2e578:	blt.n	2e5b0 <btrfs_csum_file_block@@Base+0x2f8>
   2e57a:	beq.w	2e6cc <btrfs_csum_file_block@@Base+0x414>
   2e57e:	ldr	r3, [pc, #376]	; (2e6f8 <btrfs_csum_file_block@@Base+0x440>)
   2e580:	mov	r1, r8
   2e582:	ldr	r2, [sp, #36]	; 0x24
   2e584:	ldr	r0, [r2, r3]
   2e586:	ldr	r3, [pc, #372]	; (2e6fc <btrfs_csum_file_block@@Base+0x444>)
   2e588:	ldr	r2, [pc, #372]	; (2e700 <btrfs_csum_file_block@@Base+0x448>)
   2e58a:	add	r3, pc
   2e58c:	str	r3, [sp, #8]
   2e58e:	ldr	r3, [pc, #372]	; (2e704 <btrfs_csum_file_block@@Base+0x44c>)
   2e590:	add	r2, pc
   2e592:	str.w	r8, [sp, #12]
   2e596:	add	r3, pc
   2e598:	adds	r3, #25
   2e59a:	str	r3, [sp, #4]
   2e59c:	mov.w	r3, #308	; 0x134
   2e5a0:	str	r3, [sp, #0]
   2e5a2:	ldr	r3, [pc, #356]	; (2e708 <btrfs_csum_file_block@@Base+0x450>)
   2e5a4:	ldr	r0, [r0, #0]
   2e5a6:	add	r3, pc
   2e5a8:	blx	8a14 <__fprintf_chk@plt+0x4>
   2e5ac:	bl	2df78 <btrfs_del_inode_ref@@Base+0x180>
   2e5b0:	mov	r0, r4
   2e5b2:	bl	17e26 <btrfs_free_path@@Base>
   2e5b6:	ldr	r2, [pc, #340]	; (2e70c <btrfs_csum_file_block@@Base+0x454>)
   2e5b8:	ldr	r3, [pc, #304]	; (2e6ec <btrfs_csum_file_block@@Base+0x434>)
   2e5ba:	add	r2, pc
   2e5bc:	ldr	r3, [r2, r3]
   2e5be:	ldr	r2, [r3, #0]
   2e5c0:	ldr	r3, [sp, #132]	; 0x84
   2e5c2:	eors	r2, r3
   2e5c4:	beq.w	2e6d8 <btrfs_csum_file_block@@Base+0x420>
   2e5c8:	blx	86b8 <__stack_chk_fail@plt>
   2e5cc:	movs	r3, #0
   2e5ce:	mov	r1, r4
   2e5d0:	strb.w	r3, [r4, #65]	; 0x41
   2e5d4:	ldr.w	r0, [r6, #464]	; 0x1d0
   2e5d8:	bl	1b618 <btrfs_next_sibling_tree_block@@Base>
   2e5dc:	cmp	r0, #1
   2e5de:	mov	r2, r0
   2e5e0:	bne.n	2e5ee <btrfs_csum_file_block@@Base+0x336>
   2e5e2:	mov.w	r9, #1
   2e5e6:	mov.w	r7, #4294967295	; 0xffffffff
   2e5ea:	mov	r8, r7
   2e5ec:	b.n	2e4e6 <btrfs_csum_file_block@@Base+0x22e>
   2e5ee:	cmp	r0, #0
   2e5f0:	beq.w	2e4b2 <btrfs_csum_file_block@@Base+0x1fa>
   2e5f4:	mov.w	r9, #0
   2e5f8:	b.n	2e5e6 <btrfs_csum_file_block@@Base+0x32e>
   2e5fa:	ldr	r2, [r4, #32]
   2e5fc:	cmp	r2, #0
   2e5fe:	beq.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e600:	ldr	r7, [r4, #0]
   2e602:	subs	r2, #1
   2e604:	add	r1, sp, #80	; 0x50
   2e606:	str	r2, [r4, #32]
   2e608:	mov	r0, r7
   2e60a:	bl	2dfc4 <btrfs_del_inode_ref@@Base+0x1cc>
   2e60e:	ldrd	r2, r3, [sp, #80]	; 0x50
   2e612:	mov.w	r1, #4294967295	; 0xffffffff
   2e616:	mvn.w	r0, #9
   2e61a:	cmp	r3, r1
   2e61c:	it	eq
   2e61e:	cmpeq	r2, r0
   2e620:	bne.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e622:	ldrb.w	r3, [sp, #88]	; 0x58
   2e626:	cmp	r3, #128	; 0x80
   2e628:	bne.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e62a:	ldr.w	lr, [sp, #49]	; 0x31
   2e62e:	movs	r3, #0
   2e630:	ldr.w	r0, [sp, #89]	; 0x59
   2e634:	ldr.w	ip, [sp, #53]	; 0x35
   2e638:	ldr.w	r1, [sp, #93]	; 0x5d
   2e63c:	subs.w	r0, lr, r0
   2e640:	vmov	r2, s16
   2e644:	sbc.w	r1, ip, r1
   2e648:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e64c:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e650:	mov	r8, r0
   2e652:	ldr.w	r0, [r3, #384]	; 0x180
   2e656:	mov	r9, r1
   2e658:	mov	r1, r5
   2e65a:	subs	r0, #151	; 0x97
   2e65c:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e660:	movs	r1, #0
   2e662:	cmp	r9, r1
   2e664:	add.w	r0, r0, #4294967295	; 0xffffffff
   2e668:	it	eq
   2e66a:	cmpeq	r8, r0
   2e66c:	bcs.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e66e:	ldr	r3, [r4, #32]
   2e670:	mov	r1, r5
   2e672:	mla	r7, sl, r3, r7
   2e676:	ldr.w	r7, [r7, #218]	; 0xda
   2e67a:	mov	r0, r7
   2e67c:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e680:	movs	r1, #0
   2e682:	cmp	r9, r1
   2e684:	it	eq
   2e686:	cmpeq	r8, r0
   2e688:	bcc.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e68a:	mla	r0, r5, r8, r5
   2e68e:	subs	r0, r0, r7
   2e690:	cmp	r0, r5
   2e692:	bne.n	2e5f4 <btrfs_csum_file_block@@Base+0x33c>
   2e694:	mov	r2, r5
   2e696:	mov	r1, r4
   2e698:	mov	r0, r6
   2e69a:	bl	19fd8 <btrfs_extend_item@@Base>
   2e69e:	ldr	r1, [pc, #112]	; (2e710 <btrfs_csum_file_block@@Base+0x458>)
   2e6a0:	mov.w	r2, #286	; 0x11e
   2e6a4:	add	r1, pc
   2e6a6:	adds	r1, #25
   2e6a8:	mov	r3, r0
   2e6aa:	ldr	r0, [pc, #104]	; (2e714 <btrfs_csum_file_block@@Base+0x45c>)
   2e6ac:	add	r0, pc
   2e6ae:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2e6b2:	ldr	r6, [r4, #0]
   2e6b4:	movs	r2, #25
   2e6b6:	ldr	r3, [r4, #32]
   2e6b8:	mla	r3, r2, r3, r6
   2e6bc:	ldr.w	r0, [r3, #214]	; 0xd6
   2e6c0:	adds	r0, #101	; 0x65
   2e6c2:	mla	r8, r5, r8, r0
   2e6c6:	b.n	2e410 <btrfs_csum_file_block@@Base+0x158>
   2e6c8:	mov	r2, r5
   2e6ca:	b.n	2e55c <btrfs_csum_file_block@@Base+0x2a4>
   2e6cc:	mov.w	r8, #0
   2e6d0:	b.n	2e6b2 <btrfs_csum_file_block@@Base+0x3fa>
   2e6d2:	mvn.w	r7, #11
   2e6d6:	b.n	2e5b6 <btrfs_csum_file_block@@Base+0x2fe>
   2e6d8:	mov	r0, r7
   2e6da:	add	sp, #140	; 0x8c
   2e6dc:	vpop	{d8-d9}
   2e6e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6e4:	ldr	r4, [r5, #40]	; 0x28
   2e6e6:	movs	r3, r0
   2e6e8:	ldr	r2, [r5, #40]	; 0x28
   2e6ea:	movs	r3, r0
   2e6ec:	lsls	r4, r4, #8
   2e6ee:	movs	r0, r0
   2e6f0:	movs	r5, #242	; 0xf2
   2e6f2:	movs	r1, r0
   2e6f4:			; <UNDEFINED> instruction: 0xf2730000
   2e6f8:	lsls	r4, r6, #8
   2e6fa:	movs	r0, r0
   2e6fc:			; <UNDEFINED> instruction: 0xf1870000
   2e700:	cbz	r4, 2e73a <btrfs_del_csums@@Base+0x22>
   2e702:	movs	r0, r0
   2e704:	movs	r4, #246	; 0xf6
   2e706:	movs	r1, r0
   2e708:	movs	r4, #196	; 0xc4
   2e70a:	movs	r1, r0
   2e70c:	str	r6, [r1, #124]	; 0x7c
   2e70e:	movs	r3, r0
   2e710:	movs	r3, #232	; 0xe8
   2e712:	movs	r1, r0
   2e714:			; <UNDEFINED> instruction: 0xb738
	...

0002e718 <btrfs_del_csums@@Base>:
   2e718:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e71c:	sub	sp, #100	; 0x64
   2e71e:	mov	sl, r0
   2e720:	strd	r2, r3, [sp, #8]
   2e724:	ldr	r3, [sp, #136]	; 0x88
   2e726:	ldr	r2, [pc, #832]	; (2ea68 <btrfs_del_csums@@Base+0x350>)
   2e728:	str	r3, [sp, #60]	; 0x3c
   2e72a:	add	r2, pc
   2e72c:	ldr	r3, [sp, #140]	; 0x8c
   2e72e:	str	r3, [sp, #64]	; 0x40
   2e730:	ldr	r3, [pc, #824]	; (2ea6c <btrfs_del_csums@@Base+0x354>)
   2e732:	ldr	r3, [r2, r3]
   2e734:	ldr	r2, [sp, #60]	; 0x3c
   2e736:	ldr	r3, [r3, #0]
   2e738:	str	r3, [sp, #92]	; 0x5c
   2e73a:	mov.w	r3, #0
   2e73e:	ldr	r3, [sp, #8]
   2e740:	adds.w	r8, r3, r2
   2e744:	ldr	r3, [sp, #12]
   2e746:	ldr	r2, [sp, #64]	; 0x40
   2e748:	adc.w	r9, r3, r2
   2e74c:	ldr	r3, [r0, #0]
   2e74e:	ldr.w	r0, [r3, #308]	; 0x134
   2e752:	bl	17db8 <btrfs_super_csum_size@@Base>
   2e756:	ldr.w	r3, [sl]
   2e75a:	ldr.w	r2, [r3, #388]	; 0x184
   2e75e:	ldr	r5, [r3, #40]	; 0x28
   2e760:	str	r2, [sp, #48]	; 0x30
   2e762:	str	r0, [sp, #44]	; 0x2c
   2e764:	bl	17df8 <btrfs_alloc_path@@Base>
   2e768:	mov	r4, r0
   2e76a:	cmp	r0, #0
   2e76c:	beq.w	2ea5c <btrfs_del_csums@@Base+0x344>
   2e770:	adds.w	r3, r8, #4294967295	; 0xffffffff
   2e774:	str	r3, [sp, #52]	; 0x34
   2e776:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2e77a:	str	r3, [sp, #56]	; 0x38
   2e77c:	add.w	r3, sp, #81	; 0x51
   2e780:	str	r3, [sp, #40]	; 0x28
   2e782:	mvn.w	r2, #9
   2e786:	mov.w	r3, #4294967295	; 0xffffffff
   2e78a:	strd	r2, r3, [sp, #72]	; 0x48
   2e78e:	mov	r1, r5
   2e790:	ldr	r2, [sp, #40]	; 0x28
   2e792:	mov	r0, sl
   2e794:	ldr	r3, [sp, #52]	; 0x34
   2e796:	str	r3, [r2, #0]
   2e798:	ldr	r3, [sp, #56]	; 0x38
   2e79a:	str	r3, [r2, #4]
   2e79c:	movs	r3, #128	; 0x80
   2e79e:	movs	r2, #1
   2e7a0:	strb.w	r3, [sp, #80]	; 0x50
   2e7a4:	mov.w	r3, #4294967295	; 0xffffffff
   2e7a8:	strd	r3, r2, [sp]
   2e7ac:	add	r2, sp, #72	; 0x48
   2e7ae:	mov	r3, r4
   2e7b0:	bl	1a1e4 <btrfs_search_slot@@Base>
   2e7b4:	cmp	r0, #0
   2e7b6:	ble.n	2e7c4 <btrfs_del_csums@@Base+0xac>
   2e7b8:	ldr	r3, [r4, #32]
   2e7ba:	cmp	r3, #0
   2e7bc:	beq.w	2ea40 <btrfs_del_csums@@Base+0x328>
   2e7c0:	subs	r3, #1
   2e7c2:	str	r3, [r4, #32]
   2e7c4:	ldr	r6, [r4, #0]
   2e7c6:	add	r7, sp, #72	; 0x48
   2e7c8:	ldr	r2, [r4, #32]
   2e7ca:	mov	r1, r7
   2e7cc:	mov	r0, r6
   2e7ce:	bl	2dfc4 <btrfs_del_inode_ref@@Base+0x1cc>
   2e7d2:	ldrd	r2, r3, [sp, #72]	; 0x48
   2e7d6:	mov.w	r1, #4294967295	; 0xffffffff
   2e7da:	mvn.w	r0, #9
   2e7de:	cmp	r3, r1
   2e7e0:	it	eq
   2e7e2:	cmpeq	r2, r0
   2e7e4:	bne.w	2ea40 <btrfs_del_csums@@Base+0x328>
   2e7e8:	ldrb.w	r3, [sp, #80]	; 0x50
   2e7ec:	cmp	r3, #128	; 0x80
   2e7ee:	bne.w	2ea40 <btrfs_del_csums@@Base+0x328>
   2e7f2:	ldr.w	r3, [sp, #81]	; 0x51
   2e7f6:	str	r3, [sp, #16]
   2e7f8:	ldr.w	r3, [sp, #85]	; 0x55
   2e7fc:	str	r3, [sp, #20]
   2e7fe:	ldrd	r2, r3, [sp, #16]
   2e802:	cmp	r3, r9
   2e804:	it	eq
   2e806:	cmpeq	r2, r8
   2e808:	bcs.w	2ea40 <btrfs_del_csums@@Base+0x328>
   2e80c:	ldr	r3, [r4, #32]
   2e80e:	ldr	r1, [sp, #44]	; 0x2c
   2e810:	mov	fp, r3
   2e812:	movs	r3, #25
   2e814:	mla	r3, r3, fp, r6
   2e818:	add.w	r2, r3, #197	; 0xc5
   2e81c:	str	r2, [sp, #68]	; 0x44
   2e81e:	ldr.w	r0, [r3, #218]	; 0xda
   2e822:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e826:	ldr	r3, [sp, #48]	; 0x30
   2e828:	mov	r1, r3
   2e82a:	asrs	r2, r3, #31
   2e82c:	strd	r1, r2, [sp, #32]
   2e830:	ldr	r1, [sp, #36]	; 0x24
   2e832:	umull	r2, r3, r3, r0
   2e836:	mla	r3, r0, r1, r3
   2e83a:	ldr	r1, [sp, #16]
   2e83c:	adds	r1, r1, r2
   2e83e:	str	r1, [sp, #24]
   2e840:	ldr	r1, [sp, #20]
   2e842:	adc.w	r3, r1, r3
   2e846:	str	r3, [sp, #28]
   2e848:	ldrd	r0, r1, [sp, #24]
   2e84c:	ldrd	r2, r3, [sp, #8]
   2e850:	cmp	r3, r1
   2e852:	it	eq
   2e854:	cmpeq	r2, r0
   2e856:	bcs.w	2ea40 <btrfs_del_csums@@Base+0x328>
   2e85a:	ldrd	r2, r3, [sp, #16]
   2e85e:	ldrd	r0, r1, [sp, #8]
   2e862:	cmp	r3, r1
   2e864:	it	eq
   2e866:	cmpeq	r2, r0
   2e868:	ldrd	r2, r3, [sp, #24]
   2e86c:	bcc.n	2e89c <btrfs_del_csums@@Base+0x184>
   2e86e:	cmp	r9, r3
   2e870:	it	eq
   2e872:	cmpeq	r8, r2
   2e874:	bcc.n	2e930 <btrfs_del_csums@@Base+0x218>
   2e876:	movs	r3, #1
   2e878:	mov	r2, r4
   2e87a:	mov	r1, r5
   2e87c:	str	r3, [sp, #0]
   2e87e:	mov	r0, sl
   2e880:	mov	r3, fp
   2e882:	bl	1b3a0 <btrfs_del_items@@Base>
   2e886:	ldr	r1, [pc, #488]	; (2ea70 <btrfs_del_csums@@Base+0x358>)
   2e888:	mov.w	r2, #450	; 0x1c2
   2e88c:	add	r1, pc
   2e88e:	adds	r1, #47	; 0x2f
   2e890:	mov	r3, r0
   2e892:	ldr	r0, [pc, #480]	; (2ea74 <btrfs_del_csums@@Base+0x35c>)
   2e894:	add	r0, pc
   2e896:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2e89a:	b.n	2e928 <btrfs_del_csums@@Base+0x210>
   2e89c:	cmp	r9, r3
   2e89e:	it	eq
   2e8a0:	cmpeq	r8, r2
   2e8a2:	bcs.n	2e930 <btrfs_del_csums@@Base+0x218>
   2e8a4:	ldr	r1, [sp, #8]
   2e8a6:	ldr	r0, [sp, #16]
   2e8a8:	ldrd	r2, r3, [sp, #32]
   2e8ac:	subs	r0, r1, r0
   2e8ae:	ldr	r1, [sp, #12]
   2e8b0:	mov	ip, r1
   2e8b2:	ldr	r1, [sp, #20]
   2e8b4:	sbc.w	r1, ip, r1
   2e8b8:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e8bc:	ldr	r3, [sp, #44]	; 0x2c
   2e8be:	muls	r3, r0
   2e8c0:	ldrd	r0, r1, [sp, #60]	; 0x3c
   2e8c4:	mov	fp, r3
   2e8c6:	ldrd	r2, r3, [sp, #32]
   2e8ca:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e8ce:	ldr	r3, [sp, #68]	; 0x44
   2e8d0:	add.w	r2, fp, #101	; 0x65
   2e8d4:	ldr.w	r1, [r3, #17]
   2e8d8:	ldr	r3, [sp, #44]	; 0x2c
   2e8da:	add	r2, r1
   2e8dc:	movs	r1, #0
   2e8de:	muls	r3, r0
   2e8e0:	mov	r0, r6
   2e8e2:	bl	1734a <memset_extent_buffer@@Base>
   2e8e6:	ldr	r2, [sp, #40]	; 0x28
   2e8e8:	ldr	r3, [sp, #8]
   2e8ea:	mov	r1, r5
   2e8ec:	mov	r0, sl
   2e8ee:	str	r3, [r2, #0]
   2e8f0:	ldr	r3, [sp, #12]
   2e8f2:	str	r3, [r2, #4]
   2e8f4:	mov	r3, r7
   2e8f6:	mov	r2, r4
   2e8f8:	str.w	fp, [sp]
   2e8fc:	bl	1ad68 <btrfs_split_item@@Base>
   2e900:	mov	r3, r0
   2e902:	cbz	r0, 2e90c <btrfs_del_csums@@Base+0x1f4>
   2e904:	adds.w	r3, r0, #11
   2e908:	it	ne
   2e90a:	movne	r3, #1
   2e90c:	ldr	r1, [pc, #360]	; (2ea78 <btrfs_del_csums@@Base+0x360>)
   2e90e:	movw	r2, #491	; 0x1eb
   2e912:	ldr	r0, [pc, #360]	; (2ea7c <btrfs_del_csums@@Base+0x364>)
   2e914:	add	r1, pc
   2e916:	adds	r1, #47	; 0x2f
   2e918:	add	r0, pc
   2e91a:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2e91e:	ldr	r3, [sp, #52]	; 0x34
   2e920:	ldr	r2, [sp, #40]	; 0x28
   2e922:	str	r3, [r2, #0]
   2e924:	ldr	r3, [sp, #56]	; 0x38
   2e926:	str	r3, [r2, #4]
   2e928:	mov	r0, r4
   2e92a:	bl	17e00 <btrfs_release_path@@Base>
   2e92e:	b.n	2e782 <btrfs_del_csums@@Base+0x6a>
   2e930:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e934:	ldr.w	r0, [r3, #308]	; 0x134
   2e938:	bl	17db8 <btrfs_super_csum_size@@Base>
   2e93c:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e940:	ldr	r1, [r4, #0]
   2e942:	ldr.w	r6, [sp, #81]	; 0x51
   2e946:	ldr.w	r2, [r3, #388]	; 0x184
   2e94a:	ldr	r3, [r4, #32]
   2e94c:	ldr.w	r7, [sp, #85]	; 0x55
   2e950:	mov	fp, r6
   2e952:	str	r2, [sp, #32]
   2e954:	str	r0, [sp, #16]
   2e956:	movs	r0, #25
   2e958:	mla	r3, r0, r3, r1
   2e95c:	ldr	r1, [sp, #16]
   2e95e:	ldr.w	r0, [r3, #218]	; 0xda
   2e962:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   2e966:	ldr	r2, [sp, #32]
   2e968:	mov	ip, r7
   2e96a:	umlal	fp, ip, r2, r0
   2e96e:	ldrd	r0, r1, [sp, #8]
   2e972:	cmp	r7, r1
   2e974:	it	eq
   2e976:	cmpeq	r6, r0
   2e978:	bcs.n	2e9c6 <btrfs_del_csums@@Base+0x2ae>
   2e97a:	cmp	r9, ip
   2e97c:	it	eq
   2e97e:	cmpeq	r8, fp
   2e980:	bcc.n	2ea2c <btrfs_del_csums@@Base+0x314>
   2e982:	ldr	r1, [sp, #8]
   2e984:	movs	r3, #0
   2e986:	subs	r0, r1, r6
   2e988:	ldr	r1, [sp, #12]
   2e98a:	sbc.w	r1, r1, r7
   2e98e:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e992:	ldr	r2, [sp, #16]
   2e994:	movs	r3, #1
   2e996:	mov	r1, r4
   2e998:	muls	r2, r0
   2e99a:	mov	r0, r5
   2e99c:	bl	19e24 <btrfs_truncate_item@@Base>
   2e9a0:	ldr	r1, [pc, #220]	; (2ea80 <btrfs_del_csums@@Base+0x368>)
   2e9a2:	mov.w	r2, #372	; 0x174
   2e9a6:	add	r1, pc
   2e9a8:	adds	r1, #63	; 0x3f
   2e9aa:	mov	r3, r0
   2e9ac:	ldr	r0, [pc, #212]	; (2ea84 <btrfs_del_csums@@Base+0x36c>)
   2e9ae:	add	r0, pc
   2e9b0:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2e9b4:	ldr	r1, [pc, #208]	; (2ea88 <btrfs_del_csums@@Base+0x370>)
   2e9b6:	ldr	r0, [pc, #212]	; (2ea8c <btrfs_del_csums@@Base+0x374>)
   2e9b8:	movs	r3, #0
   2e9ba:	add	r1, pc
   2e9bc:	movw	r2, #497	; 0x1f1
   2e9c0:	adds	r1, #47	; 0x2f
   2e9c2:	add	r0, pc
   2e9c4:	b.n	2e896 <btrfs_del_csums@@Base+0x17e>
   2e9c6:	cmp	r9, ip
   2e9c8:	it	eq
   2e9ca:	cmpeq	r8, fp
   2e9cc:	bcs.n	2ea2c <btrfs_del_csums@@Base+0x314>
   2e9ce:	cmp	r7, r9
   2e9d0:	it	eq
   2e9d2:	cmpeq	r6, r8
   2e9d4:	bcs.n	2ea2c <btrfs_del_csums@@Base+0x314>
   2e9d6:	subs.w	r0, fp, r8
   2e9da:	mov.w	r3, #0
   2e9de:	sbc.w	r1, ip, r9
   2e9e2:	ldr	r7, [pc, #172]	; (2ea90 <btrfs_del_csums@@Base+0x378>)
   2e9e4:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2e9e8:	ldr	r2, [sp, #16]
   2e9ea:	movs	r3, #0
   2e9ec:	mov	r1, r4
   2e9ee:	ldr	r6, [pc, #164]	; (2ea94 <btrfs_del_csums@@Base+0x37c>)
   2e9f0:	add	r7, pc
   2e9f2:	adds	r7, #63	; 0x3f
   2e9f4:	add	r6, pc
   2e9f6:	muls	r2, r0
   2e9f8:	mov	r0, r5
   2e9fa:	bl	19e24 <btrfs_truncate_item@@Base>
   2e9fe:	movw	r2, #385	; 0x181
   2ea02:	mov	r1, r7
   2ea04:	mov	r3, r0
   2ea06:	mov	r0, r6
   2ea08:	bl	2e068 <btrfs_del_inode_ref@@Base+0x270>
   2ea0c:	ldr	r3, [sp, #40]	; 0x28
   2ea0e:	add	r2, sp, #72	; 0x48
   2ea10:	mov	r1, r4
   2ea12:	mov	r0, r5
   2ea14:	str.w	r8, [r3]
   2ea18:	str.w	r9, [r3, #4]
   2ea1c:	bl	18e40 <btrfs_set_item_key_safe@@Base>
   2ea20:	movw	r2, #389	; 0x185
   2ea24:	mov	r1, r7
   2ea26:	mov	r3, r0
   2ea28:	mov	r0, r6
   2ea2a:	b.n	2e9b0 <btrfs_del_csums@@Base+0x298>
   2ea2c:	ldr	r1, [pc, #104]	; (2ea98 <btrfs_del_csums@@Base+0x380>)
   2ea2e:	movs	r3, #1
   2ea30:	ldr	r0, [pc, #104]	; (2ea9c <btrfs_del_csums@@Base+0x384>)
   2ea32:	movw	r2, #391	; 0x187
   2ea36:	add	r1, pc
   2ea38:	adds	r1, #63	; 0x3f
   2ea3a:	add	r0, pc
   2ea3c:	bl	2e02c <btrfs_del_inode_ref@@Base+0x234>
   2ea40:	mov	r0, r4
   2ea42:	bl	17e26 <btrfs_free_path@@Base>
   2ea46:	movs	r0, #0
   2ea48:	ldr	r2, [pc, #84]	; (2eaa0 <btrfs_del_csums@@Base+0x388>)
   2ea4a:	ldr	r3, [pc, #32]	; (2ea6c <btrfs_del_csums@@Base+0x354>)
   2ea4c:	add	r2, pc
   2ea4e:	ldr	r3, [r2, r3]
   2ea50:	ldr	r2, [r3, #0]
   2ea52:	ldr	r3, [sp, #92]	; 0x5c
   2ea54:	eors	r2, r3
   2ea56:	beq.n	2ea62 <btrfs_del_csums@@Base+0x34a>
   2ea58:	blx	86b8 <__stack_chk_fail@plt>
   2ea5c:	mvn.w	r0, #11
   2ea60:	b.n	2ea48 <btrfs_del_csums@@Base+0x330>
   2ea62:	add	sp, #100	; 0x64
   2ea64:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea68:	str	r6, [r3, #100]	; 0x64
   2ea6a:	movs	r3, r0
   2ea6c:	lsls	r4, r4, #8
   2ea6e:	movs	r0, r0
   2ea70:	movs	r2, #0
   2ea72:	movs	r1, r0
   2ea74:	push	{r4, r6, lr}
   2ea76:	movs	r0, r0
   2ea78:	movs	r1, #120	; 0x78
   2ea7a:	movs	r1, r0
   2ea7c:	movs	r1, #94	; 0x5e
   2ea7e:	movs	r1, r0
   2ea80:	movs	r0, #230	; 0xe6
   2ea82:	movs	r1, r0
   2ea84:	push	{r1, r2, r4, r5}
   2ea86:	movs	r0, r0
   2ea88:	movs	r0, #210	; 0xd2
   2ea8a:	movs	r1, r0
   2ea8c:	push	{r1, r5}
   2ea8e:	movs	r0, r0
   2ea90:	movs	r0, #156	; 0x9c
   2ea92:	movs	r1, r0
   2ea94:	cbz	r0, 2eb14 <raid5_gen_result@@Base+0x4>
   2ea96:	movs	r0, r0
   2ea98:	movs	r0, #86	; 0x56
   2ea9a:	movs	r1, r0
   2ea9c:	ldcl	0, cr0, [r7], {0}
   2eaa0:	str	r4, [r7, #48]	; 0x30
   2eaa2:	movs	r3, r0

0002eaa4 <raid6_gen_syndrome@@Base>:
   2eaa4:	subs	r3, r0, #2
   2eaa6:	sub.w	ip, r0, #3
   2eaaa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2eaae:	add.w	ip, r2, ip, lsl #2
   2eab2:	ldr.w	r8, [r2, r3, lsl #2]
   2eab6:	add.w	r3, r2, r3, lsl #2
   2eaba:	movs	r4, #0
   2eabc:	ldr.w	r9, [r3, #4]
   2eac0:	cmp	r1, r4
   2eac2:	bhi.n	2eac8 <raid6_gen_syndrome@@Base+0x24>
   2eac4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2eac8:	ldr.w	r3, [ip]
   2eacc:	subs	r7, r0, #4
   2eace:	ldr	r6, [r3, r4]
   2ead0:	mov	r3, r6
   2ead2:	cmp	r7, #0
   2ead4:	bge.n	2eae2 <raid6_gen_syndrome@@Base+0x3e>
   2ead6:	str.w	r6, [r8, r4]
   2eada:	str.w	r3, [r9, r4]
   2eade:	adds	r4, #4
   2eae0:	b.n	2eac0 <raid6_gen_syndrome@@Base+0x1c>
   2eae2:	ldr.w	r5, [r2, r7, lsl #2]
   2eae6:	and.w	sl, r3, #2155905152	; 0x80808080
   2eaea:	lsls	r3, r3, #1
   2eaec:	subs	r7, #1
   2eaee:	and.w	r3, r3, #4278124286	; 0xfefefefe
   2eaf2:	ldr.w	lr, [r5, r4]
   2eaf6:	mov.w	r5, sl, lsr #7
   2eafa:	rsb	r5, r5, sl, lsl #1
   2eafe:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   2eb02:	eor.w	r6, r6, lr
   2eb06:	eor.w	lr, r5, lr
   2eb0a:	eor.w	r3, lr, r3
   2eb0e:	b.n	2ead2 <raid6_gen_syndrome@@Base+0x2e>

0002eb10 <raid5_gen_result@@Base>:
   2eb10:	cmp.w	r1, #65536	; 0x10000
   2eb14:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb18:	mov	r6, r0
   2eb1a:	ldr.w	r8, [r3, r2, lsl #2]
   2eb1e:	mov	r5, r2
   2eb20:	mov	r7, r3
   2eb22:	beq.n	2eb3a <raid5_gen_result@@Base+0x2a>
   2eb24:	ldr	r1, [pc, #184]	; (2ebe0 <raid5_gen_result@@Base+0xd0>)
   2eb26:	ldr	r0, [pc, #188]	; (2ebe4 <raid5_gen_result@@Base+0xd4>)
   2eb28:	add	r1, pc
   2eb2a:	add	r0, pc
   2eb2c:	bl	17424 <__btrfs_error@@Base>
   2eb30:	mvn.w	r0, #21
   2eb34:	add	sp, #12
   2eb36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb3a:	cmp	r2, r0
   2eb3c:	bge.n	2eb24 <raid5_gen_result@@Base+0x14>
   2eb3e:	cmp	r0, #1
   2eb40:	ble.n	2eb24 <raid5_gen_result@@Base+0x14>
   2eb42:	cmp	r0, #2
   2eb44:	bne.n	2eb5a <raid5_gen_result@@Base+0x4a>
   2eb46:	rsb	r5, r2, #1
   2eb4a:	mov	r0, r8
   2eb4c:	mov	r2, r1
   2eb4e:	ldr.w	r1, [r3, r5, lsl #2]
   2eb52:	blx	8628 <memcpy@plt+0x4>
   2eb56:	movs	r0, #0
   2eb58:	b.n	2eb34 <raid5_gen_result@@Base+0x24>
   2eb5a:	mov	r2, r1
   2eb5c:	mov	r0, r8
   2eb5e:	movs	r1, #0
   2eb60:	mvn.w	fp, #3
   2eb64:	blx	8978 <memset@plt+0x4>
   2eb68:	movs	r0, #0
   2eb6a:	cmp	r0, r6
   2eb6c:	beq.n	2eb56 <raid5_gen_result@@Base+0x46>
   2eb6e:	cmp	r0, r5
   2eb70:	bne.n	2eb76 <raid5_gen_result@@Base+0x66>
   2eb72:	adds	r0, #1
   2eb74:	b.n	2eb6a <raid5_gen_result@@Base+0x5a>
   2eb76:	ldr.w	r1, [r7, r0, lsl #2]
   2eb7a:	mov.w	r2, #65536	; 0x10000
   2eb7e:	mov	r4, r8
   2eb80:	lsls	r3, r4, #29
   2eb82:	bmi.n	2ebb8 <raid5_gen_result@@Base+0xa8>
   2eb84:	bic.w	r9, r2, #3
   2eb88:	sub.w	ip, r4, #4
   2eb8c:	add.w	sl, r1, r9
   2eb90:	lsrs	r3, r2, #2
   2eb92:	str	r3, [sp, #4]
   2eb94:	cmp	r1, sl
   2eb96:	bne.n	2ebce <raid5_gen_result@@Base+0xbe>
   2eb98:	ldr	r3, [sp, #4]
   2eb9a:	add	r4, r9
   2eb9c:	mla	r2, fp, r3, r2
   2eba0:	add	r2, r1
   2eba2:	cmp	r1, r2
   2eba4:	beq.n	2eb72 <raid5_gen_result@@Base+0x62>
   2eba6:	ldrb.w	ip, [r4], #1
   2ebaa:	ldrb.w	r3, [r1], #1
   2ebae:	eor.w	r3, r3, ip
   2ebb2:	strb.w	r3, [r4, #-1]
   2ebb6:	b.n	2eba2 <raid5_gen_result@@Base+0x92>
   2ebb8:	ldrb.w	ip, [r4], #1
   2ebbc:	subs	r2, #1
   2ebbe:	ldrb.w	r3, [r1], #1
   2ebc2:	eor.w	r3, r3, ip
   2ebc6:	strb.w	r3, [r4, #-1]
   2ebca:	bne.n	2eb80 <raid5_gen_result@@Base+0x70>
   2ebcc:	b.n	2eb72 <raid5_gen_result@@Base+0x62>
   2ebce:	ldr.w	lr, [ip, #4]!
   2ebd2:	ldr.w	r3, [r1], #4
   2ebd6:	eor.w	lr, lr, r3
   2ebda:	str.w	lr, [ip]
   2ebde:	b.n	2eb94 <raid5_gen_result@@Base+0x84>
   2ebe0:	subs	r6, r1, #7
   2ebe2:	movs	r1, r0
   2ebe4:	subs	r3, r6, #6
   2ebe6:	movs	r1, r0

0002ebe8 <raid6_recov_data2@@Base>:
   2ebe8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ebec:	mov	r5, r2
   2ebee:	ldr.w	sl, [pc, #320]	; 2ed30 <raid6_recov_data2@@Base+0x148>
   2ebf2:	sub	sp, #28
   2ebf4:	cmp	r5, #0
   2ebf6:	mov	fp, r1
   2ebf8:	add	sl, pc
   2ebfa:	mov	r4, r3
   2ebfc:	str	r0, [sp, #8]
   2ebfe:	blt.w	2ed2a <raid6_recov_data2@@Base+0x142>
   2ec02:	subs	r3, r0, #2
   2ec04:	cmp	r3, r5
   2ec06:	ble.w	2ed2a <raid6_recov_data2@@Base+0x142>
   2ec0a:	cmp	r4, #0
   2ec0c:	blt.w	2ed2a <raid6_recov_data2@@Base+0x142>
   2ec10:	cmp	r3, r4
   2ec12:	ble.w	2ed2a <raid6_recov_data2@@Base+0x142>
   2ec16:	cmp	r5, r4
   2ec18:	bge.w	2ed2a <raid6_recov_data2@@Base+0x142>
   2ec1c:	movs	r0, #1
   2ec1e:	blx	8544 <calloc@plt+0x4>
   2ec22:	mov	r1, fp
   2ec24:	mov	r8, r0
   2ec26:	movs	r0, #1
   2ec28:	blx	8544 <calloc@plt+0x4>
   2ec2c:	mov	r7, r0
   2ec2e:	cmp.w	r8, #0
   2ec32:	beq.n	2ec38 <raid6_recov_data2@@Base+0x50>
   2ec34:	ldr	r2, [sp, #64]	; 0x40
   2ec36:	cbnz	r0, 2ec4e <raid6_recov_data2@@Base+0x66>
   2ec38:	mov	r0, r8
   2ec3a:	blx	85dc <free@plt+0x4>
   2ec3e:	mov	r0, r7
   2ec40:	blx	85dc <free@plt+0x4>
   2ec44:	mvn.w	r0, #11
   2ec48:	add	sp, #28
   2ec4a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ec4e:	ldr	r3, [sp, #8]
   2ec50:	str	r2, [sp, #64]	; 0x40
   2ec52:	add.w	r9, r3, #1073741824	; 0x40000000
   2ec56:	sub.w	r9, r9, #2
   2ec5a:	ldr.w	r1, [r2, r9, lsl #2]
   2ec5e:	mov.w	r3, r9, lsl #2
   2ec62:	adds	r3, #4
   2ec64:	str	r3, [sp, #20]
   2ec66:	str	r1, [sp, #12]
   2ec68:	ldr	r1, [r2, r3]
   2ec6a:	str	r1, [sp, #16]
   2ec6c:	ldr.w	r1, [r2, r5, lsl #2]
   2ec70:	str.w	r8, [r2, r5, lsl #2]
   2ec74:	str.w	r1, [r2, r9, lsl #2]
   2ec78:	ldr.w	r6, [r2, r4, lsl #2]
   2ec7c:	str	r1, [sp, #4]
   2ec7e:	mov	r1, fp
   2ec80:	str.w	r0, [r2, r4, lsl #2]
   2ec84:	str	r6, [r2, r3]
   2ec86:	ldr	r0, [sp, #8]
   2ec88:	bl	2eaa4 <raid6_gen_syndrome@@Base>
   2ec8c:	ldr	r2, [sp, #64]	; 0x40
   2ec8e:	ldr	r3, [sp, #4]
   2ec90:	str.w	r3, [r2, r5, lsl #2]
   2ec94:	ldr	r3, [sp, #12]
   2ec96:	str.w	r6, [r2, r4, lsl #2]
   2ec9a:	str.w	r3, [r2, r9, lsl #2]
   2ec9e:	ldrd	r1, r3, [sp, #16]
   2eca2:	str	r1, [r2, r3]
   2eca4:	ldr	r3, [pc, #140]	; (2ed34 <raid6_recov_data2@@Base+0x14c>)
   2eca6:	ldr.w	r2, [sl, r3]
   2ecaa:	subs	r3, r4, r5
   2ecac:	ldrb	r0, [r2, r3]
   2ecae:	ldr	r3, [pc, #136]	; (2ed38 <raid6_recov_data2@@Base+0x150>)
   2ecb0:	lsls	r0, r0, #8
   2ecb2:	ldr.w	r2, [sl, r3]
   2ecb6:	ldr	r3, [pc, #132]	; (2ed3c <raid6_recov_data2@@Base+0x154>)
   2ecb8:	ldr.w	r1, [sl, r3]
   2ecbc:	ldrb	r3, [r1, r5]
   2ecbe:	ldrb	r1, [r1, r4]
   2ecc0:	eors	r3, r1
   2ecc2:	add.w	r1, r6, fp
   2ecc6:	ldrb	r4, [r2, r3]
   2ecc8:	ldr	r3, [sp, #12]
   2ecca:	subs	r5, r3, #1
   2eccc:	ldr	r3, [sp, #4]
   2ecce:	lsls	r4, r4, #8
   2ecd0:	add.w	ip, r3, #4294967295	; 0xffffffff
   2ecd4:	ldr	r3, [sp, #16]
   2ecd6:	add.w	lr, r3, #4294967295	; 0xffffffff
   2ecda:	cmp	r6, r1
   2ecdc:	bne.n	2ecee <raid6_recov_data2@@Base+0x106>
   2ecde:	mov	r0, r8
   2ece0:	blx	85dc <free@plt+0x4>
   2ece4:	mov	r0, r7
   2ece6:	blx	85dc <free@plt+0x4>
   2ecea:	movs	r0, #0
   2ecec:	b.n	2ec48 <raid6_recov_data2@@Base+0x60>
   2ecee:	ldrb.w	r2, [r5, #1]!
   2ecf2:	ldrb.w	r3, [ip, #1]!
   2ecf6:	ldrb.w	r9, [r6]
   2ecfa:	eors	r3, r2
   2ecfc:	ldrb.w	r2, [lr, #1]!
   2ed00:	add.w	fp, r3, r0
   2ed04:	eor.w	r2, r2, r9
   2ed08:	ldr.w	r9, [pc, #52]	; 2ed40 <raid6_recov_data2@@Base+0x158>
   2ed0c:	add	r2, r4
   2ed0e:	ldr.w	r9, [sl, r9]
   2ed12:	ldrb.w	r2, [r2, r9]
   2ed16:	ldrb.w	r9, [fp, r9]
   2ed1a:	eor.w	r2, r2, r9
   2ed1e:	strb.w	r2, [r6], #1
   2ed22:	eors	r3, r2
   2ed24:	strb.w	r3, [ip]
   2ed28:	b.n	2ecda <raid6_recov_data2@@Base+0xf2>
   2ed2a:	mvn.w	r0, #21
   2ed2e:	b.n	2ec48 <raid6_recov_data2@@Base+0x60>
   2ed30:	str	r0, [r2, #24]
   2ed32:	movs	r3, r0
   2ed34:	lsls	r4, r4, #9
   2ed36:	movs	r0, r0
   2ed38:	lsls	r0, r7, #8
   2ed3a:	movs	r0, r0
   2ed3c:	lsls	r4, r5, #8
   2ed3e:	movs	r0, r0
   2ed40:	lsls	r4, r7, #8
	...

0002ed44 <raid6_recov_datap@@Base>:
   2ed44:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ed48:	mov	r7, r2
   2ed4a:	add.w	r2, r0, #1073741824	; 0x40000000
   2ed4e:	mov	r4, r3
   2ed50:	subs	r2, #2
   2ed52:	ldr.w	sl, [pc, #144]	; 2ede4 <raid6_recov_datap@@Base+0xa0>
   2ed56:	mov	fp, r0
   2ed58:	movs	r0, #1
   2ed5a:	lsls	r3, r2, #2
   2ed5c:	add	sl, pc
   2ed5e:	add.w	r9, r3, #4
   2ed62:	ldr.w	r8, [r4, r2, lsl #2]
   2ed66:	mov	r6, r1
   2ed68:	ldr.w	r3, [r4, r9]
   2ed6c:	str	r3, [sp, #4]
   2ed6e:	blx	8544 <calloc@plt+0x4>
   2ed72:	cbz	r0, 2edde <raid6_recov_datap@@Base+0x9a>
   2ed74:	ldr.w	r5, [r4, r7, lsl #2]
   2ed78:	mov	r2, r4
   2ed7a:	str.w	r0, [r4, r7, lsl #2]
   2ed7e:	mov	r1, r6
   2ed80:	mov	r0, fp
   2ed82:	add	r6, r8
   2ed84:	str.w	r5, [r4, r9]
   2ed88:	bl	2eaa4 <raid6_gen_syndrome@@Base>
   2ed8c:	ldr	r3, [sp, #4]
   2ed8e:	str.w	r5, [r4, r7, lsl #2]
   2ed92:	subs	r5, #1
   2ed94:	str.w	r3, [r4, r9]
   2ed98:	ldr	r3, [pc, #76]	; (2ede8 <raid6_recov_datap@@Base+0xa4>)
   2ed9a:	ldr.w	r2, [sl, r3]
   2ed9e:	ldr	r3, [pc, #76]	; (2edec <raid6_recov_datap@@Base+0xa8>)
   2eda0:	ldr.w	r3, [sl, r3]
   2eda4:	ldrb	r3, [r3, r7]
   2eda6:	ldrb	r2, [r2, r3]
   2eda8:	ldr	r3, [sp, #4]
   2edaa:	lsls	r2, r2, #8
   2edac:	add.w	r9, r3, #4294967295	; 0xffffffff
   2edb0:	cmp	r8, r6
   2edb2:	bne.n	2edbc <raid6_recov_datap@@Base+0x78>
   2edb4:	movs	r0, #0
   2edb6:	add	sp, #12
   2edb8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2edbc:	ldrb.w	r1, [r5, #1]!
   2edc0:	ldrb.w	r3, [r9, #1]!
   2edc4:	eors	r3, r1
   2edc6:	ldr	r1, [pc, #40]	; (2edf0 <raid6_recov_datap@@Base+0xac>)
   2edc8:	add	r3, r2
   2edca:	ldr.w	r1, [sl, r1]
   2edce:	ldrb	r3, [r3, r1]
   2edd0:	strb	r3, [r5, #0]
   2edd2:	ldrb.w	r1, [r8], #1
   2edd6:	eors	r3, r1
   2edd8:	strb.w	r3, [r8, #-1]
   2eddc:	b.n	2edb0 <raid6_recov_datap@@Base+0x6c>
   2edde:	mvn.w	r0, #11
   2ede2:	b.n	2edb6 <raid6_recov_datap@@Base+0x72>
   2ede4:	str	r4, [r5, #0]
   2ede6:	movs	r3, r0
   2ede8:	lsls	r0, r7, #8
   2edea:	movs	r0, r0
   2edec:	lsls	r4, r5, #8
   2edee:	movs	r0, r0
   2edf0:	lsls	r4, r7, #8
	...

0002edf4 <raid56_recov@@Base>:
   2edf4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2edf8:	mov.w	ip, #0
   2edfc:	mov	r5, r0
   2edfe:	mov	r0, r2
   2ee00:	and.w	r6, r0, #128	; 0x80
   2ee04:	mov	r7, ip
   2ee06:	orrs.w	lr, r6, r7
   2ee0a:	ldrd	r2, r4, [sp, #40]	; 0x28
   2ee0e:	ldr	r3, [sp, #48]	; 0x30
   2ee10:	bne.n	2ee30 <raid56_recov@@Base+0x3c>
   2ee12:	and.w	r8, r0, #256	; 0x100
   2ee16:	mov	r9, ip
   2ee18:	orrs.w	r0, r8, r9
   2ee1c:	beq.n	2ee9c <raid56_recov@@Base+0xa8>
   2ee1e:	movs	r0, #3
   2ee20:	cmp	r0, r5
   2ee22:	bgt.n	2ee9c <raid56_recov@@Base+0xa8>
   2ee24:	adds	r0, r2, #1
   2ee26:	bne.n	2ee34 <raid56_recov@@Base+0x40>
   2ee28:	adds	r2, r4, #1
   2ee2a:	bne.n	2eea6 <raid56_recov@@Base+0xb2>
   2ee2c:	movs	r0, #0
   2ee2e:	b.n	2ee96 <raid56_recov@@Base+0xa2>
   2ee30:	movs	r0, #2
   2ee32:	b.n	2ee20 <raid56_recov@@Base+0x2c>
   2ee34:	adds	r0, r4, #1
   2ee36:	beq.n	2eed0 <raid56_recov@@Base+0xdc>
   2ee38:	cmp	r2, r4
   2ee3a:	bgt.n	2eec2 <raid56_recov@@Base+0xce>
   2ee3c:	orrs.w	r0, r6, r7
   2ee40:	bne.n	2eea2 <raid56_recov@@Base+0xae>
   2ee42:	subs	r0, r5, #2
   2ee44:	cmp	r0, r2
   2ee46:	bne.n	2ee4e <raid56_recov@@Base+0x5a>
   2ee48:	subs	r6, r5, #1
   2ee4a:	cmp	r6, r4
   2ee4c:	beq.n	2eeb8 <raid56_recov@@Base+0xc4>
   2ee4e:	cmp	r0, r4
   2ee50:	ble.n	2ee74 <raid56_recov@@Base+0x80>
   2ee52:	str	r3, [sp, #40]	; 0x28
   2ee54:	mov	r0, r5
   2ee56:	mov	r3, r4
   2ee58:	add	sp, #12
   2ee5a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ee5e:	b.w	2ebe8 <raid6_recov_data2@@Base>
   2ee62:	mov	r2, r4
   2ee64:	mov	r0, r5
   2ee66:	add	sp, #12
   2ee68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ee6c:	b.w	2eb10 <raid5_gen_result@@Base>
   2ee70:	mov	r2, r4
   2ee72:	b.n	2ee66 <raid56_recov@@Base+0x72>
   2ee74:	subs	r0, r5, #1
   2ee76:	cmp	r0, r4
   2ee78:	bne.n	2ee86 <raid56_recov@@Base+0x92>
   2ee7a:	mov	r0, r5
   2ee7c:	add	sp, #12
   2ee7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ee82:	b.w	2ed44 <raid6_recov_datap@@Base>
   2ee86:	strd	r1, r3, [sp]
   2ee8a:	bl	2eb10 <raid5_gen_result@@Base>
   2ee8e:	ldrd	r1, r3, [sp]
   2ee92:	cmp	r0, #0
   2ee94:	bge.n	2eeb8 <raid56_recov@@Base+0xc4>
   2ee96:	add	sp, #12
   2ee98:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ee9c:	mvn.w	r0, #21
   2eea0:	b.n	2ee96 <raid56_recov@@Base+0xa2>
   2eea2:	movs	r0, #1
   2eea4:	b.n	2ee96 <raid56_recov@@Base+0xa2>
   2eea6:	orrs.w	r2, r6, r7
   2eeaa:	bne.n	2ee62 <raid56_recov@@Base+0x6e>
   2eeac:	subs	r0, r5, #1
   2eeae:	cmp	r0, r4
   2eeb0:	beq.n	2eeb8 <raid56_recov@@Base+0xc4>
   2eeb2:	subs	r2, r5, #2
   2eeb4:	cmp	r2, r4
   2eeb6:	bne.n	2ee70 <raid56_recov@@Base+0x7c>
   2eeb8:	mov	r2, r3
   2eeba:	mov	r0, r5
   2eebc:	bl	2eaa4 <raid6_gen_syndrome@@Base>
   2eec0:	b.n	2ee2c <raid56_recov@@Base+0x38>
   2eec2:	orrs.w	r0, r6, r7
   2eec6:	bne.n	2eea2 <raid56_recov@@Base+0xae>
   2eec8:	mov	r0, r2
   2eeca:	mov	r2, r4
   2eecc:	mov	r4, r0
   2eece:	b.n	2ee42 <raid56_recov@@Base+0x4e>
   2eed0:	orrs.w	r0, r6, r7
   2eed4:	mov	r4, r2
   2eed6:	b.n	2eeaa <raid56_recov@@Base+0xb6>

0002eed8 <check_arg_type@@Base>:
   2eed8:	ldr	r1, [pc, #128]	; (2ef5c <check_arg_type@@Base+0x84>)
   2eeda:	ldr	r2, [pc, #132]	; (2ef60 <check_arg_type@@Base+0x88>)
   2eedc:	push	{r4, lr}
   2eede:	add	r1, pc
   2eee0:	sub.w	sp, sp, #4096	; 0x1000
   2eee4:	sub	sp, #8
   2eee6:	ldr	r2, [r1, r2]
   2eee8:	add.w	r3, sp, #4096	; 0x1000
   2eeec:	adds	r3, #4
   2eeee:	ldr	r2, [r2, #0]
   2eef0:	str	r2, [r3, #0]
   2eef2:	mov.w	r2, #0
   2eef6:	cbz	r0, 2ef4a <check_arg_type@@Base+0x72>
   2eef8:	add	r4, sp, #4
   2eefa:	mov.w	r2, #4096	; 0x1000
   2eefe:	mov	r1, r4
   2ef00:	blx	8788 <__realpath_chk@plt>
   2ef04:	cbz	r0, 2ef40 <check_arg_type@@Base+0x68>
   2ef06:	mov	r0, r4
   2ef08:	bl	2f8f4 <path_is_block_device@@Base>
   2ef0c:	cmp	r0, #1
   2ef0e:	beq.n	2ef50 <check_arg_type@@Base+0x78>
   2ef10:	mov	r0, r4
   2ef12:	bl	2f950 <path_is_mount_point@@Base>
   2ef16:	cmp	r0, #1
   2ef18:	beq.n	2ef26 <check_arg_type@@Base+0x4e>
   2ef1a:	mov	r0, r4
   2ef1c:	bl	2f998 <path_is_reg_file@@Base>
   2ef20:	cmp	r0, #0
   2ef22:	it	ne
   2ef24:	movne	r0, #4
   2ef26:	ldr	r1, [pc, #60]	; (2ef64 <check_arg_type@@Base+0x8c>)
   2ef28:	add.w	r3, sp, #4096	; 0x1000
   2ef2c:	ldr	r2, [pc, #48]	; (2ef60 <check_arg_type@@Base+0x88>)
   2ef2e:	adds	r3, #4
   2ef30:	add	r1, pc
   2ef32:	ldr	r2, [r1, r2]
   2ef34:	ldr	r1, [r2, #0]
   2ef36:	ldr	r2, [r3, #0]
   2ef38:	eors	r1, r2
   2ef3a:	beq.n	2ef54 <check_arg_type@@Base+0x7c>
   2ef3c:	blx	86b8 <__stack_chk_fail@plt>
   2ef40:	blx	8938 <__errno_location@plt>
   2ef44:	ldr	r0, [r0, #0]
   2ef46:	negs	r0, r0
   2ef48:	b.n	2ef26 <check_arg_type@@Base+0x4e>
   2ef4a:	mvn.w	r0, #21
   2ef4e:	b.n	2ef26 <check_arg_type@@Base+0x4e>
   2ef50:	movs	r0, #3
   2ef52:	b.n	2ef26 <check_arg_type@@Base+0x4e>
   2ef54:	add.w	sp, sp, #4096	; 0x1000
   2ef58:	add	sp, #8
   2ef5a:	pop	{r4, pc}
   2ef5c:	ldrsh	r2, [r5, r2]
   2ef5e:	movs	r3, r0
   2ef60:	lsls	r4, r4, #8
   2ef62:	movs	r0, r0
   2ef64:	ldrsh	r0, [r3, r1]
   2ef66:	movs	r3, r0

0002ef68 <test_uuid_unique@@Base>:
   2ef68:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   2ef6a:	movs	r1, #0
   2ef6c:	ldr	r2, [pc, #136]	; (2eff8 <test_uuid_unique@@Base+0x90>)
   2ef6e:	mov	r4, r0
   2ef70:	ldr	r3, [pc, #136]	; (2effc <test_uuid_unique@@Base+0x94>)
   2ef72:	add	r0, sp, #8
   2ef74:	add	r2, pc
   2ef76:	ldr	r3, [r2, r3]
   2ef78:	ldr	r3, [r3, #0]
   2ef7a:	str	r3, [sp, #12]
   2ef7c:	mov.w	r3, #0
   2ef80:	strd	r1, r1, [sp, #4]
   2ef84:	blx	8b0c <blkid_get_cache@plt>
   2ef88:	cmp	r0, #0
   2ef8a:	bge.n	2efaa <test_uuid_unique@@Base+0x42>
   2ef8c:	ldr	r0, [pc, #112]	; (2f000 <test_uuid_unique@@Base+0x98>)
   2ef8e:	movs	r4, #1
   2ef90:	add	r0, pc
   2ef92:	blx	8804 <puts@plt+0x4>
   2ef96:	ldr	r2, [pc, #108]	; (2f004 <test_uuid_unique@@Base+0x9c>)
   2ef98:	ldr	r3, [pc, #96]	; (2effc <test_uuid_unique@@Base+0x94>)
   2ef9a:	add	r2, pc
   2ef9c:	ldr	r3, [r2, r3]
   2ef9e:	ldr	r2, [r3, #0]
   2efa0:	ldr	r3, [sp, #12]
   2efa2:	eors	r2, r3
   2efa4:	beq.n	2eff0 <test_uuid_unique@@Base+0x88>
   2efa6:	blx	86b8 <__stack_chk_fail@plt>
   2efaa:	ldr	r0, [sp, #8]
   2efac:	add	r6, sp, #4
   2efae:	blx	8b58 <blkid_probe_all@plt>
   2efb2:	ldr	r0, [sp, #8]
   2efb4:	blx	86c4 <blkid_dev_iterate_begin@plt>
   2efb8:	ldr	r1, [pc, #76]	; (2f008 <test_uuid_unique@@Base+0xa0>)
   2efba:	mov	r2, r4
   2efbc:	add	r1, pc
   2efbe:	mov	r5, r0
   2efc0:	blx	872c <blkid_dev_set_search@plt>
   2efc4:	mov	r1, r6
   2efc6:	mov	r0, r5
   2efc8:	blx	8878 <blkid_dev_next@plt>
   2efcc:	mov	r4, r0
   2efce:	cbz	r0, 2efd4 <test_uuid_unique@@Base+0x6c>
   2efd0:	movs	r4, #1
   2efd2:	b.n	2efe2 <test_uuid_unique@@Base+0x7a>
   2efd4:	ldrd	r1, r0, [sp, #4]
   2efd8:	blx	8884 <blkid_verify@plt>
   2efdc:	str	r0, [sp, #4]
   2efde:	cmp	r0, #0
   2efe0:	beq.n	2efc4 <test_uuid_unique@@Base+0x5c>
   2efe2:	mov	r0, r5
   2efe4:	blx	89d0 <blkid_dev_iterate_end@plt>
   2efe8:	ldr	r0, [sp, #8]
   2efea:	blx	8678 <blkid_put_cache@plt>
   2efee:	b.n	2ef96 <test_uuid_unique@@Base+0x2e>
   2eff0:	mov	r0, r4
   2eff2:	add	sp, #16
   2eff4:	pop	{r4, r5, r6, pc}
   2eff6:	nop
   2eff8:	ldrsh	r4, [r2, r0]
   2effa:	movs	r3, r0
   2effc:	lsls	r4, r4, #8
   2effe:	movs	r0, r0
   2f000:	subs	r7, #108	; 0x6c
   2f002:	movs	r2, r0
   2f004:	ldrb	r6, [r5, r7]
   2f006:	movs	r3, r0
   2f008:	stmia	r7!, {r0, r1, r5, r6}
	...

0002f00c <btrfs_add_to_fsid@@Base>:
   2f00c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f010:	sub	sp, #132	; 0x84
   2f012:	mov	fp, r3
   2f014:	ldr	r3, [pc, #596]	; (2f26c <btrfs_add_to_fsid@@Base+0x260>)
   2f016:	str	r2, [sp, #48]	; 0x30
   2f018:	mov	r9, r0
   2f01a:	ldr	r2, [pc, #596]	; (2f270 <btrfs_add_to_fsid@@Base+0x264>)
   2f01c:	add	r3, pc
   2f01e:	str	r3, [sp, #52]	; 0x34
   2f020:	ldr	r3, [pc, #592]	; (2f274 <btrfs_add_to_fsid@@Base+0x268>)
   2f022:	add	r2, pc
   2f024:	ldr.w	r8, [r1, #464]	; 0x1d0
   2f028:	ldr	r7, [sp, #184]	; 0xb8
   2f02a:	ldr	r3, [r2, r3]
   2f02c:	ldr.w	r6, [r8, #308]	; 0x134
   2f030:	ldr	r3, [r3, #0]
   2f032:	str	r3, [sp, #124]	; 0x7c
   2f034:	mov.w	r3, #0
   2f038:	ldrd	r0, r1, [sp, #168]	; 0xa8
   2f03c:	mov	r2, r7
   2f03e:	ldr	r3, [r6, #112]	; 0x70
   2f040:	str	r3, [sp, #32]
   2f042:	ldr	r3, [r6, #116]	; 0x74
   2f044:	str	r3, [sp, #36]	; 0x24
   2f046:	movs	r3, #0
   2f048:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   2f04c:	umull	r3, r4, r7, r0
   2f050:	movs	r0, #1
   2f052:	strd	r3, r4, [sp, #16]
   2f056:	ldr	r3, [sp, #20]
   2f058:	mla	r3, r7, r1, r3
   2f05c:	movs	r1, #128	; 0x80
   2f05e:	str	r3, [sp, #20]
   2f060:	blx	8544 <calloc@plt+0x4>
   2f064:	mov	r4, r0
   2f066:	cmp	r0, #0
   2f068:	beq.w	2f254 <btrfs_add_to_fsid@@Base+0x248>
   2f06c:	mov	r1, r7
   2f06e:	movs	r0, #1
   2f070:	blx	8544 <calloc@plt+0x4>
   2f074:	mov	r5, r0
   2f076:	cmp	r0, #0
   2f078:	beq.w	2f254 <btrfs_add_to_fsid@@Base+0x248>
   2f07c:	add.w	r3, r4, #112	; 0x70
   2f080:	str	r3, [sp, #44]	; 0x2c
   2f082:	mov	r0, r3
   2f084:	blx	8a04 <uuid_generate@plt>
   2f088:	ldr	r2, [sp, #176]	; 0xb0
   2f08a:	movs	r3, #0
   2f08c:	str	r7, [r4, #96]	; 0x60
   2f08e:	strd	r3, r3, [r4, #64]	; 0x40
   2f092:	mov	r0, fp
   2f094:	str	r2, [r4, #92]	; 0x5c
   2f096:	mov	sl, r3
   2f098:	ldr	r2, [sp, #180]	; 0xb4
   2f09a:	strd	r3, r3, [r4, #104]	; 0x68
   2f09e:	strd	r3, r3, [r4, #80]	; 0x50
   2f0a2:	str	r2, [r4, #88]	; 0x58
   2f0a4:	ldr	r2, [sp, #48]	; 0x30
   2f0a6:	strd	r3, r3, [r4, #16]
   2f0aa:	str	r2, [r4, #24]
   2f0ac:	movs	r2, #1
   2f0ae:	str	r2, [r4, #28]
   2f0b0:	ldrd	r1, r2, [sp, #16]
   2f0b4:	strd	r1, r2, [r4, #72]	; 0x48
   2f0b8:	ldr.w	r2, [r8, #36]	; 0x24
   2f0bc:	str	r2, [r4, #8]
   2f0be:	blx	86a0 <strdup@plt+0x4>
   2f0c2:	str	r0, [r4, #32]
   2f0c4:	cmp	r0, #0
   2f0c6:	beq.w	2f25c <btrfs_add_to_fsid@@Base+0x250>
   2f0ca:	ldrd	r0, r1, [sp, #32]
   2f0ce:	strd	sl, sl, [sp, #24]
   2f0d2:	ldrd	sl, fp, [sp, #16]
   2f0d6:	adds.w	r2, sl, r0
   2f0da:	adcs.w	r3, fp, r1
   2f0de:	mov	fp, r2
   2f0e0:	itt	cs
   2f0e2:	movcs	r0, #1
   2f0e4:	movcs	r1, #0
   2f0e6:	mov	sl, r3
   2f0e8:	it	cs
   2f0ea:	strdcs	r0, r1, [sp, #24]
   2f0ee:	ldrd	r2, r3, [sp, #24]
   2f0f2:	orrs	r3, r2
   2f0f4:	beq.n	2f122 <btrfs_add_to_fsid@@Base+0x116>
   2f0f6:	ldrd	r0, r1, [sp, #16]
   2f0fa:	mov.w	r2, #512	; 0x200
   2f0fe:	bl	304a8 <pretty_size_mode@@Base>
   2f102:	ldrd	r2, r3, [sp, #16]
   2f106:	mvn.w	r9, #74	; 0x4a
   2f10a:	str	r0, [sp, #0]
   2f10c:	ldr	r0, [pc, #360]	; (2f278 <btrfs_add_to_fsid@@Base+0x26c>)
   2f10e:	add	r0, pc
   2f110:	bl	17424 <__btrfs_error@@Base>
   2f114:	mov	r0, r4
   2f116:	blx	85dc <free@plt+0x4>
   2f11a:	mov	r0, r5
   2f11c:	blx	85dc <free@plt+0x4>
   2f120:	b.n	2f240 <btrfs_add_to_fsid@@Base+0x234>
   2f122:	mov	r0, r9
   2f124:	mov	r2, r4
   2f126:	mov	r1, r8
   2f128:	strd	r4, r4, [r4]
   2f12c:	bl	28440 <btrfs_add_device@@Base>
   2f130:	mov	r9, r0
   2f132:	cmp	r0, #0
   2f134:	bne.n	2f114 <btrfs_add_to_fsid@@Base+0x108>
   2f136:	ldr.w	r3, [r6, #136]	; 0x88
   2f13a:	mov	r1, r6
   2f13c:	ldr.w	r2, [r6, #140]	; 0x8c
   2f140:	mov	r0, r5
   2f142:	adds	r3, #1
   2f144:	str.w	fp, [r6, #112]	; 0x70
   2f148:	adc.w	r2, r2, #0
   2f14c:	str.w	r3, [r6, #136]	; 0x88
   2f150:	str.w	r2, [r6, #140]	; 0x8c
   2f154:	movw	r2, #3531	; 0xdcb
   2f158:	str.w	sl, [r6, #116]	; 0x74
   2f15c:	addw	r6, r5, #267	; 0x10b
   2f160:	blx	8628 <memcpy@plt+0x4>
   2f164:	movs	r3, #0
   2f166:	mov.w	r2, #65536	; 0x10000
   2f16a:	strd	r2, r3, [r5, #48]	; 0x30
   2f16e:	ldr	r3, [r4, #64]	; 0x40
   2f170:	str.w	r3, [r5, #201]	; 0xc9
   2f174:	ldr	r3, [r4, #68]	; 0x44
   2f176:	str.w	r3, [r5, #205]	; 0xcd
   2f17a:	ldr	r3, [r4, #104]	; 0x68
   2f17c:	str.w	r3, [r5, #237]	; 0xed
   2f180:	ldr	r3, [r4, #108]	; 0x6c
   2f182:	str.w	r3, [r5, #241]	; 0xf1
   2f186:	ldr	r3, [r4, #88]	; 0x58
   2f188:	str.w	r3, [r5, #225]	; 0xe1
   2f18c:	ldr	r3, [r4, #92]	; 0x5c
   2f18e:	str.w	r3, [r5, #229]	; 0xe5
   2f192:	ldr	r3, [r4, #96]	; 0x60
   2f194:	str.w	r3, [r5, #233]	; 0xe9
   2f198:	ldr	r3, [r4, #72]	; 0x48
   2f19a:	str.w	r3, [r5, #209]	; 0xd1
   2f19e:	ldr	r3, [r4, #76]	; 0x4c
   2f1a0:	str.w	r3, [r5, #213]	; 0xd5
   2f1a4:	ldr	r3, [r4, #80]	; 0x50
   2f1a6:	str.w	r3, [r5, #217]	; 0xd9
   2f1aa:	ldr	r3, [r4, #84]	; 0x54
   2f1ac:	str.w	r3, [r5, #221]	; 0xdd
   2f1b0:	ldr	r3, [sp, #44]	; 0x2c
   2f1b2:	add.w	ip, r3, #16
   2f1b6:	mov	r2, r3
   2f1b8:	adds	r6, #8
   2f1ba:	ldmia	r2!, {r0, r1}
   2f1bc:	cmp	r2, ip
   2f1be:	str.w	r0, [r6, #-8]
   2f1c2:	mov	r3, r2
   2f1c4:	str.w	r1, [r6, #-4]
   2f1c8:	bne.n	2f1b6 <btrfs_add_to_fsid@@Base+0x1aa>
   2f1ca:	mov.w	r2, #65536	; 0x10000
   2f1ce:	movs	r3, #0
   2f1d0:	ldr	r0, [sp, #48]	; 0x30
   2f1d2:	mov	r1, r5
   2f1d4:	strd	r2, r3, [sp]
   2f1d8:	mov	r2, r7
   2f1da:	blx	89dc <pwrite64@plt>
   2f1de:	cmp	r0, r7
   2f1e0:	beq.n	2f222 <btrfs_add_to_fsid@@Base+0x216>
   2f1e2:	ldr	r2, [sp, #52]	; 0x34
   2f1e4:	add	r4, sp, #60	; 0x3c
   2f1e6:	ldr	r3, [pc, #148]	; (2f27c <btrfs_add_to_fsid@@Base+0x270>)
   2f1e8:	movs	r1, #1
   2f1ea:	ldr	r0, [r2, r3]
   2f1ec:	ldr	r3, [pc, #144]	; (2f280 <btrfs_add_to_fsid@@Base+0x274>)
   2f1ee:	ldr	r2, [pc, #148]	; (2f284 <btrfs_add_to_fsid@@Base+0x278>)
   2f1f0:	add	r3, pc
   2f1f2:	str	r3, [sp, #8]
   2f1f4:	ldr	r3, [pc, #144]	; (2f288 <btrfs_add_to_fsid@@Base+0x27c>)
   2f1f6:	add	r2, pc
   2f1f8:	str	r1, [sp, #12]
   2f1fa:	add	r3, pc
   2f1fc:	str	r3, [sp, #4]
   2f1fe:	movs	r3, #192	; 0xc0
   2f200:	str	r3, [sp, #0]
   2f202:	ldr	r3, [pc, #136]	; (2f28c <btrfs_add_to_fsid@@Base+0x280>)
   2f204:	ldr	r0, [r0, #0]
   2f206:	add	r3, pc
   2f208:	blx	8a14 <__fprintf_chk@plt+0x4>
   2f20c:	movs	r1, #16
   2f20e:	mov	r0, r4
   2f210:	blx	886c <backtrace@plt>
   2f214:	movs	r2, #2
   2f216:	mov	r1, r0
   2f218:	mov	r0, r4
   2f21a:	blx	8b7c <backtrace_symbols_fd@plt>
   2f21e:	blx	8b34 <abort@plt>
   2f222:	mov	r0, r5
   2f224:	blx	85dc <free@plt+0x4>
   2f228:	ldr.w	r2, [r8, #352]	; 0x160
   2f22c:	mov	r3, r2
   2f22e:	ldr.w	r1, [r3, #72]!
   2f232:	str	r4, [r1, #4]
   2f234:	strd	r1, r3, [r4]
   2f238:	str	r4, [r2, #72]	; 0x48
   2f23a:	ldr.w	r3, [r8, #352]	; 0x160
   2f23e:	str	r3, [r4, #12]
   2f240:	ldr	r2, [pc, #76]	; (2f290 <btrfs_add_to_fsid@@Base+0x284>)
   2f242:	ldr	r3, [pc, #48]	; (2f274 <btrfs_add_to_fsid@@Base+0x268>)
   2f244:	add	r2, pc
   2f246:	ldr	r3, [r2, r3]
   2f248:	ldr	r2, [r3, #0]
   2f24a:	ldr	r3, [sp, #124]	; 0x7c
   2f24c:	eors	r2, r3
   2f24e:	beq.n	2f262 <btrfs_add_to_fsid@@Base+0x256>
   2f250:	blx	86b8 <__stack_chk_fail@plt>
   2f254:	mvn.w	r9, #11
   2f258:	movs	r5, #0
   2f25a:	b.n	2f114 <btrfs_add_to_fsid@@Base+0x108>
   2f25c:	mvn.w	r9, #11
   2f260:	b.n	2f114 <btrfs_add_to_fsid@@Base+0x108>
   2f262:	mov	r0, r9
   2f264:	add	sp, #132	; 0x84
   2f266:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f26a:	nop
   2f26c:	ldrb	r4, [r5, r5]
   2f26e:	movs	r3, r0
   2f270:	ldrb	r6, [r4, r5]
   2f272:	movs	r3, r0
   2f274:	lsls	r4, r4, #8
   2f276:	movs	r0, r0
   2f278:	subs	r6, #13
   2f27a:	movs	r2, r0
   2f27c:	lsls	r4, r6, #8
   2f27e:	movs	r0, r0
   2f280:	subs	r5, #131	; 0x83
   2f282:	movs	r2, r0
   2f284:	add	r5, pc, #688	; (adr r5, 2f538 <btrfs_scan_devices@@Base+0x48>)
   2f286:	movs	r0, r0
   2f288:	subs	r6, #58	; 0x3a
   2f28a:	movs	r2, r0
   2f28c:	subs	r5, #88	; 0x58
   2f28e:	movs	r2, r0
   2f290:	ldrh	r4, [r0, r5]
   2f292:	movs	r3, r0

0002f294 <btrfs_register_one_device@@Base>:
   2f294:	ldr	r1, [pc, #168]	; (2f340 <btrfs_register_one_device@@Base+0xac>)
   2f296:	ldr	r2, [pc, #172]	; (2f344 <btrfs_register_one_device@@Base+0xb0>)
   2f298:	push	{r4, r5, r6, r7, lr}
   2f29a:	add	r1, pc
   2f29c:	sub.w	sp, sp, #4096	; 0x1000
   2f2a0:	mov	r6, r0
   2f2a2:	sub	sp, #12
   2f2a4:	ldr	r0, [pc, #160]	; (2f348 <btrfs_register_one_device@@Base+0xb4>)
   2f2a6:	ldr	r2, [r1, r2]
   2f2a8:	add.w	r3, sp, #4096	; 0x1000
   2f2ac:	add	r0, pc
   2f2ae:	movs	r1, #2
   2f2b0:	adds	r3, #4
   2f2b2:	ldr	r2, [r2, #0]
   2f2b4:	str	r2, [r3, #0]
   2f2b6:	mov.w	r2, #0
   2f2ba:	blx	87f4 <open64@plt>
   2f2be:	subs	r5, r0, #0
   2f2c0:	bge.n	2f2ec <btrfs_register_one_device@@Base+0x58>
   2f2c2:	ldr	r0, [pc, #136]	; (2f34c <btrfs_register_one_device@@Base+0xb8>)
   2f2c4:	add	r0, pc
   2f2c6:	bl	173a8 <__btrfs_warning@@Base>
   2f2ca:	blx	8938 <__errno_location@plt>
   2f2ce:	ldr	r4, [r0, #0]
   2f2d0:	negs	r4, r4
   2f2d2:	ldr	r1, [pc, #124]	; (2f350 <btrfs_register_one_device@@Base+0xbc>)
   2f2d4:	add.w	r3, sp, #4096	; 0x1000
   2f2d8:	ldr	r2, [pc, #104]	; (2f344 <btrfs_register_one_device@@Base+0xb0>)
   2f2da:	adds	r3, #4
   2f2dc:	add	r1, pc
   2f2de:	ldr	r2, [r1, r2]
   2f2e0:	ldr	r1, [r2, #0]
   2f2e2:	ldr	r2, [r3, #0]
   2f2e4:	eors	r1, r2
   2f2e6:	beq.n	2f330 <btrfs_register_one_device@@Base+0x9c>
   2f2e8:	blx	86b8 <__stack_chk_fail@plt>
   2f2ec:	mov	r4, sp
   2f2ee:	add	r7, sp, #8
   2f2f0:	mov.w	r2, #4096	; 0x1000
   2f2f4:	movs	r1, #0
   2f2f6:	mov	r0, r4
   2f2f8:	blx	8978 <memset@plt+0x4>
   2f2fc:	movw	r2, #4088	; 0xff8
   2f300:	mov	r1, r6
   2f302:	mov	r0, r7
   2f304:	bl	2fb28 <__strncpy_null@@Base>
   2f308:	mov	r2, r4
   2f30a:	ldr	r1, [pc, #48]	; (2f33c <btrfs_register_one_device@@Base+0xa8>)
   2f30c:	mov	r0, r5
   2f30e:	blx	8764 <ioctl@plt>
   2f312:	subs	r4, r0, #0
   2f314:	bge.n	2f328 <btrfs_register_one_device@@Base+0x94>
   2f316:	ldr	r0, [pc, #60]	; (2f354 <btrfs_register_one_device@@Base+0xc0>)
   2f318:	mov	r1, r6
   2f31a:	add	r0, pc
   2f31c:	bl	17424 <__btrfs_error@@Base>
   2f320:	blx	8938 <__errno_location@plt>
   2f324:	ldr	r4, [r0, #0]
   2f326:	negs	r4, r4
   2f328:	mov	r0, r5
   2f32a:	blx	8b4c <close@plt>
   2f32e:	b.n	2f2d2 <btrfs_register_one_device@@Base+0x3e>
   2f330:	mov	r0, r4
   2f332:	add.w	sp, sp, #4096	; 0x1000
   2f336:	add	sp, #12
   2f338:	pop	{r4, r5, r6, r7, pc}
   2f33a:	nop
   2f33c:	str	r4, [sp, #16]
   2f33e:	str	r0, [r0, r0]
   2f340:	ldrh	r6, [r5, r3]
   2f342:	movs	r3, r0
   2f344:	lsls	r4, r4, #8
   2f346:	movs	r0, r0
   2f348:	subs	r4, #217	; 0xd9
   2f34a:	movs	r2, r0
   2f34c:	subs	r4, #212	; 0xd4
   2f34e:	movs	r2, r0
   2f350:	ldrh	r4, [r5, r2]
   2f352:	movs	r3, r0
   2f354:	subs	r4, #194	; 0xc2
   2f356:	movs	r2, r0

0002f358 <btrfs_register_all_devices@@Base>:
   2f358:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2f35c:	bl	2a72c <btrfs_scanned_uuids@@Base>
   2f360:	movs	r5, #0
   2f362:	ldr	r4, [r0, #0]
   2f364:	mov	r6, r0
   2f366:	mov	r0, r5
   2f368:	subs	r4, #80	; 0x50
   2f36a:	add.w	r3, r4, #80	; 0x50
   2f36e:	cmp	r6, r3
   2f370:	bne.n	2f378 <btrfs_register_all_devices@@Base+0x20>
   2f372:	mov	r0, r5
   2f374:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2f378:	mov	r8, r4
   2f37a:	ldr.w	r7, [r8, #72]!
   2f37e:	cmp	r7, r8
   2f380:	bne.n	2f388 <btrfs_register_all_devices@@Base+0x30>
   2f382:	ldr	r4, [r4, #80]	; 0x50
   2f384:	subs	r4, #80	; 0x50
   2f386:	b.n	2f36a <btrfs_register_all_devices@@Base+0x12>
   2f388:	ldr	r3, [r7, #32]
   2f38a:	ldrb	r2, [r3, #0]
   2f38c:	cbz	r2, 2f394 <btrfs_register_all_devices@@Base+0x3c>
   2f38e:	mov	r0, r3
   2f390:	bl	2f294 <btrfs_register_one_device@@Base>
   2f394:	cbz	r0, 2f398 <btrfs_register_all_devices@@Base+0x40>
   2f396:	adds	r5, #1
   2f398:	ldr	r7, [r7, #0]
   2f39a:	b.n	2f37e <btrfs_register_all_devices@@Base+0x26>

0002f39c <btrfs_device_already_in_root@@Base>:
   2f39c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2f39e:	mov	r6, r0
   2f3a0:	mov.w	r0, #4096	; 0x1000
   2f3a4:	mov	r7, r1
   2f3a6:	mov	r4, r2
   2f3a8:	blx	8820 <malloc@plt+0x4>
   2f3ac:	mov	r5, r0
   2f3ae:	cbz	r0, 2f416 <btrfs_device_already_in_root@@Base+0x7a>
   2f3b0:	asrs	r3, r4, #31
   2f3b2:	mov	r2, r4
   2f3b4:	mov	r1, r0
   2f3b6:	strd	r2, r3, [sp]
   2f3ba:	mov	r0, r7
   2f3bc:	mov.w	r2, #4096	; 0x1000
   2f3c0:	blx	87b8 <pread64@plt>
   2f3c4:	cmp.w	r0, #4096	; 0x1000
   2f3c8:	mov	r4, r0
   2f3ca:	bne.n	2f406 <btrfs_device_already_in_root@@Base+0x6a>
   2f3cc:	ldrd	r2, r3, [r5, #64]	; 0x40
   2f3d0:	add	r1, pc, #76	; (adr r1, 2f420 <btrfs_device_already_in_root@@Base+0x84>)
   2f3d2:	ldrd	r0, r1, [r1]
   2f3d6:	cmp	r3, r1
   2f3d8:	it	eq
   2f3da:	cmpeq	r2, r0
   2f3dc:	beq.n	2f3ec <btrfs_device_already_in_root@@Base+0x50>
   2f3de:	add	r1, pc, #72	; (adr r1, 2f428 <btrfs_device_already_in_root@@Base+0x8c>)
   2f3e0:	ldrd	r0, r1, [r1]
   2f3e4:	cmp	r3, r1
   2f3e6:	it	eq
   2f3e8:	cmpeq	r2, r0
   2f3ea:	bne.n	2f412 <btrfs_device_already_in_root@@Base+0x76>
   2f3ec:	ldr.w	r3, [r6, #464]	; 0x1d0
   2f3f0:	add.w	r0, r5, #32
   2f3f4:	movs	r2, #16
   2f3f6:	ldr.w	r1, [r3, #308]	; 0x134
   2f3fa:	adds	r1, #32
   2f3fc:	blx	8650 <memcmp@plt+0x4>
   2f400:	clz	r4, r0
   2f404:	lsrs	r4, r4, #5
   2f406:	mov	r0, r5
   2f408:	blx	85dc <free@plt+0x4>
   2f40c:	mov	r0, r4
   2f40e:	add	sp, #12
   2f410:	pop	{r4, r5, r6, r7, pc}
   2f412:	movs	r4, #0
   2f414:	b.n	2f406 <btrfs_device_already_in_root@@Base+0x6a>
   2f416:	mvn.w	r4, #11
   2f41a:	b.n	2f40c <btrfs_device_already_in_root@@Base+0x70>
   2f41c:	nop.w
   2f420:	negs	r7, r3
   2f422:	strh	r0, [r1, r1]
   2f424:	strh	r6, [r4, r5]
   2f426:	ldr	r5, [pc, #380]	; (2f5a4 <btrfs_scan_devices@@Base+0xb4>)
   2f428:	tst	r1, r4
   2f42a:	strh	r0, [r1, r1]
   2f42c:	strh	r6, [r4, r5]
   2f42e:	ldr	r5, [pc, #380]	; (2f5ac <btrfs_scan_devices@@Base+0xbc>)

0002f430 <is_seen_fsid@@Base>:
   2f430:	push	{r3, r4, r5, lr}
   2f432:	mov	r5, r0
   2f434:	ldrb	r3, [r0, #0]
   2f436:	ldr.w	r4, [r1, r3, lsl #2]
   2f43a:	cbnz	r4, 2f440 <is_seen_fsid@@Base+0x10>
   2f43c:	mov	r0, r4
   2f43e:	pop	{r3, r4, r5, pc}
   2f440:	movs	r2, #16
   2f442:	mov	r1, r5
   2f444:	mov	r0, r4
   2f446:	blx	8650 <memcmp@plt+0x4>
   2f44a:	cbz	r0, 2f450 <is_seen_fsid@@Base+0x20>
   2f44c:	ldr	r4, [r4, #16]
   2f44e:	b.n	2f43a <is_seen_fsid@@Base+0xa>
   2f450:	movs	r0, #1
   2f452:	b.n	2f43e <is_seen_fsid@@Base+0xe>

0002f454 <add_seen_fsid@@Base>:
   2f454:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2f458:	mov	r5, r0
   2f45a:	ldrb.w	sl, [r0]
   2f45e:	mov	r7, r1
   2f460:	mov	r9, r2
   2f462:	mov	r8, r3
   2f464:	ldr.w	r4, [r1, sl, lsl #2]
   2f468:	cbnz	r4, 2f4a0 <add_seen_fsid@@Base+0x4c>
   2f46a:	movs	r0, #28
   2f46c:	blx	8820 <malloc@plt+0x4>
   2f470:	mov	r6, r0
   2f472:	cbz	r0, 2f4c0 <add_seen_fsid@@Base+0x6c>
   2f474:	add.w	ip, r5, #16
   2f478:	mov	r2, r0
   2f47a:	movs	r3, #0
   2f47c:	str	r3, [r0, #16]
   2f47e:	ldr	r0, [r5, #0]
   2f480:	adds	r5, #8
   2f482:	ldr.w	r1, [r5, #-4]
   2f486:	cmp	r5, ip
   2f488:	mov	r3, r2
   2f48a:	stmia	r3!, {r0, r1}
   2f48c:	mov	r2, r3
   2f48e:	bne.n	2f47e <add_seen_fsid@@Base+0x2a>
   2f490:	strd	r8, r9, [r6, #20]
   2f494:	cbz	r4, 2f4b4 <add_seen_fsid@@Base+0x60>
   2f496:	str	r6, [r4, #16]
   2f498:	movs	r0, #0
   2f49a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2f49e:	mov	r4, r3
   2f4a0:	movs	r2, #16
   2f4a2:	mov	r1, r5
   2f4a4:	mov	r0, r4
   2f4a6:	blx	8650 <memcmp@plt+0x4>
   2f4aa:	cbz	r0, 2f4ba <add_seen_fsid@@Base+0x66>
   2f4ac:	ldr	r3, [r4, #16]
   2f4ae:	cmp	r3, #0
   2f4b0:	bne.n	2f49e <add_seen_fsid@@Base+0x4a>
   2f4b2:	b.n	2f46a <add_seen_fsid@@Base+0x16>
   2f4b4:	str.w	r6, [r7, sl, lsl #2]
   2f4b8:	b.n	2f498 <add_seen_fsid@@Base+0x44>
   2f4ba:	mvn.w	r0, #16
   2f4be:	b.n	2f49a <add_seen_fsid@@Base+0x46>
   2f4c0:	mvn.w	r0, #11
   2f4c4:	b.n	2f49a <add_seen_fsid@@Base+0x46>

0002f4c6 <free_seen_fsid@@Base>:
   2f4c6:	push	{r3, r4, r5, r6, r7, lr}
   2f4c8:	subs	r6, r0, #4
   2f4ca:	add.w	r5, r0, #1020	; 0x3fc
   2f4ce:	ldr.w	r4, [r6, #4]!
   2f4d2:	cbnz	r4, 2f4dc <free_seen_fsid@@Base+0x16>
   2f4d4:	cmp	r6, r5
   2f4d6:	str	r4, [r6, #0]
   2f4d8:	bne.n	2f4ce <free_seen_fsid@@Base+0x8>
   2f4da:	pop	{r3, r4, r5, r6, r7, pc}
   2f4dc:	ldrd	r7, r1, [r4, #16]
   2f4e0:	ldr	r0, [r4, #24]
   2f4e2:	bl	30d08 <close_file_or_dir@@Base>
   2f4e6:	mov	r0, r4
   2f4e8:	blx	85dc <free@plt+0x4>
   2f4ec:	mov	r4, r7
   2f4ee:	b.n	2f4d2 <free_seen_fsid@@Base+0xc>

0002f4f0 <btrfs_scan_devices@@Base>:
   2f4f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4f4:	vpush	{d8}
   2f4f8:	ldr	r1, [pc, #324]	; (2f640 <btrfs_scan_devices@@Base+0x150>)
   2f4fa:	ldr	r2, [pc, #328]	; (2f644 <btrfs_scan_devices@@Base+0x154>)
   2f4fc:	add	r1, pc
   2f4fe:	sub.w	sp, sp, #4128	; 0x1020
   2f502:	sub	sp, #20
   2f504:	ldr	r2, [r1, r2]
   2f506:	add.w	r3, sp, #4128	; 0x1020
   2f50a:	add	r4, sp, #48	; 0x30
   2f50c:	ldr	r2, [r2, #0]
   2f50e:	str	r2, [r3, #12]
   2f510:	mov.w	r2, #0
   2f514:	ldr	r2, [pc, #304]	; (2f648 <btrfs_scan_devices@@Base+0x158>)
   2f516:	adds	r3, #12
   2f518:	sub.w	sl, r4, #20
   2f51c:	add	r2, pc
   2f51e:	movs	r3, #0
   2f520:	str.w	r3, [r4, #-24]
   2f524:	ldr	r5, [r2, #0]
   2f526:	str.w	r3, [r4, #-20]
   2f52a:	cmp	r5, #0
   2f52c:	bne.n	2f62c <btrfs_scan_devices@@Base+0x13c>
   2f52e:	mov	r1, r5
   2f530:	mov	r0, sl
   2f532:	blx	8b0c <blkid_get_cache@plt>
   2f536:	subs	r6, r0, #0
   2f538:	bge.n	2f566 <btrfs_scan_devices@@Base+0x76>
   2f53a:	blx	8938 <__errno_location@plt>
   2f53e:	negs	r3, r6
   2f540:	mov	r5, r6
   2f542:	str	r3, [r0, #0]
   2f544:	ldr	r0, [pc, #260]	; (2f64c <btrfs_scan_devices@@Base+0x15c>)
   2f546:	add	r0, pc
   2f548:	bl	17424 <__btrfs_error@@Base>
   2f54c:	ldr	r1, [pc, #256]	; (2f650 <btrfs_scan_devices@@Base+0x160>)
   2f54e:	add.w	r3, sp, #4128	; 0x1020
   2f552:	ldr	r2, [pc, #240]	; (2f644 <btrfs_scan_devices@@Base+0x154>)
   2f554:	adds	r3, #12
   2f556:	add	r1, pc
   2f558:	ldr	r2, [r1, r2]
   2f55a:	ldr	r1, [r2, #0]
   2f55c:	ldr	r2, [r3, #0]
   2f55e:	eors	r1, r2
   2f560:	beq.n	2f630 <btrfs_scan_devices@@Base+0x140>
   2f562:	blx	86b8 <__stack_chk_fail@plt>
   2f566:	ldr.w	r0, [sl]
   2f56a:	blx	8b58 <blkid_probe_all@plt>
   2f56e:	ldr.w	r0, [sl]
   2f572:	blx	86c4 <blkid_dev_iterate_begin@plt>
   2f576:	ldr	r2, [pc, #220]	; (2f654 <btrfs_scan_devices@@Base+0x164>)
   2f578:	ldr	r1, [pc, #220]	; (2f658 <btrfs_scan_devices@@Base+0x168>)
   2f57a:	add	r2, pc
   2f57c:	ldr.w	fp, [pc, #220]	; 2f65c <btrfs_scan_devices@@Base+0x16c>
   2f580:	add	r1, pc
   2f582:	add	fp, pc
   2f584:	mov	r9, r0
   2f586:	blx	872c <blkid_dev_set_search@plt>
   2f58a:	ldr	r3, [pc, #212]	; (2f660 <btrfs_scan_devices@@Base+0x170>)
   2f58c:	add	r3, pc
   2f58e:	vmov	s16, r3
   2f592:	sub.w	r7, r4, #24
   2f596:	mov	r1, r7
   2f598:	mov	r0, r9
   2f59a:	blx	8878 <blkid_dev_next@plt>
   2f59e:	mov	r6, r0
   2f5a0:	cbz	r0, 2f5ba <btrfs_scan_devices@@Base+0xca>
   2f5a2:	mov	r0, r9
   2f5a4:	blx	89d0 <blkid_dev_iterate_end@plt>
   2f5a8:	ldr.w	r0, [r4, #-20]
   2f5ac:	blx	8678 <blkid_put_cache@plt>
   2f5b0:	ldr	r3, [pc, #176]	; (2f664 <btrfs_scan_devices@@Base+0x174>)
   2f5b2:	movs	r2, #1
   2f5b4:	add	r3, pc
   2f5b6:	str	r2, [r3, #0]
   2f5b8:	b.n	2f54c <btrfs_scan_devices@@Base+0x5c>
   2f5ba:	ldr	r1, [r7, #0]
   2f5bc:	ldr.w	r0, [sl]
   2f5c0:	blx	8884 <blkid_verify@plt>
   2f5c4:	str	r0, [r7, #0]
   2f5c6:	cmp	r0, #0
   2f5c8:	beq.n	2f596 <btrfs_scan_devices@@Base+0xa6>
   2f5ca:	blx	8ac0 <blkid_dev_devname@plt>
   2f5ce:	sub.w	r8, r4, #4
   2f5d2:	mov.w	r2, #4096	; 0x1000
   2f5d6:	mov	r1, r0
   2f5d8:	mov	r0, r8
   2f5da:	bl	2fb28 <__strncpy_null@@Base>
   2f5de:	mov	r1, r6
   2f5e0:	mov	r0, r8
   2f5e2:	blx	87f4 <open64@plt>
   2f5e6:	subs	r7, r0, #0
   2f5e8:	bge.n	2f5f4 <btrfs_scan_devices@@Base+0x104>
   2f5ea:	mov	r1, r8
   2f5ec:	mov	r0, fp
   2f5ee:	bl	17424 <__btrfs_error@@Base>
   2f5f2:	b.n	2f592 <btrfs_scan_devices@@Base+0xa2>
   2f5f4:	mov.w	r2, #65536	; 0x10000
   2f5f8:	movs	r3, #0
   2f5fa:	str	r6, [sp, #8]
   2f5fc:	mov	r1, r8
   2f5fe:	strd	r2, r3, [sp]
   2f602:	sub.w	r3, r4, #16
   2f606:	sub.w	r2, r4, #28
   2f60a:	bl	28094 <btrfs_scan_one_device@@Base>
   2f60e:	mov	r6, r0
   2f610:	cbz	r0, 2f624 <btrfs_scan_devices@@Base+0x134>
   2f612:	blx	8938 <__errno_location@plt>
   2f616:	negs	r6, r6
   2f618:	mov	r1, r8
   2f61a:	str	r6, [r0, #0]
   2f61c:	vmov	r0, s16
   2f620:	bl	17424 <__btrfs_error@@Base>
   2f624:	mov	r0, r7
   2f626:	blx	8b4c <close@plt>
   2f62a:	b.n	2f592 <btrfs_scan_devices@@Base+0xa2>
   2f62c:	mov	r5, r3
   2f62e:	b.n	2f54c <btrfs_scan_devices@@Base+0x5c>
   2f630:	mov	r0, r5
   2f632:	add.w	sp, sp, #4128	; 0x1020
   2f636:	add	sp, #20
   2f638:	vpop	{d8}
   2f63c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f640:	ldr	r4, [r1, r2]
   2f642:	movs	r3, r0
   2f644:	lsls	r4, r4, #8
   2f646:	movs	r0, r0
   2f648:	ldr	r4, [r7, #88]	; 0x58
   2f64a:	movs	r3, r0
   2f64c:	subs	r2, #181	; 0xb5
   2f64e:	movs	r2, r0
   2f650:	ldr	r2, [r6, r0]
   2f652:	movs	r3, r0
   2f654:	subs	r2, #156	; 0x9c
   2f656:	movs	r2, r0
   2f658:	subs	r2, #156	; 0x9c
   2f65a:	movs	r2, r0
   2f65c:	subs	r3, #189	; 0xbd
   2f65e:	movs	r2, r0
   2f660:	subs	r2, #149	; 0x95
   2f662:	movs	r2, r0
   2f664:	ldr	r4, [r4, #80]	; 0x50
   2f666:	movs	r3, r0
   2f668:	ldr	r2, [pc, #100]	; (2f6d0 <btrfs_scan_devices@@Base+0x1e0>)
   2f66a:	ldr	r3, [pc, #104]	; (2f6d4 <btrfs_scan_devices@@Base+0x1e4>)
   2f66c:	add	r2, pc
   2f66e:	push	{lr}
   2f670:	sub	sp, #116	; 0x74
   2f672:	ldr	r3, [r2, r3]
   2f674:	mov	r1, sp
   2f676:	ldr	r3, [r3, #0]
   2f678:	str	r3, [sp, #108]	; 0x6c
   2f67a:	mov.w	r3, #0
   2f67e:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2f682:	cmp	r0, #0
   2f684:	bge.n	2f6a2 <btrfs_scan_devices@@Base+0x1b2>
   2f686:	blx	8938 <__errno_location@plt>
   2f68a:	ldr	r0, [r0, #0]
   2f68c:	negs	r0, r0
   2f68e:	ldr	r2, [pc, #72]	; (2f6d8 <btrfs_scan_devices@@Base+0x1e8>)
   2f690:	ldr	r3, [pc, #64]	; (2f6d4 <btrfs_scan_devices@@Base+0x1e4>)
   2f692:	add	r2, pc
   2f694:	ldr	r3, [r2, r3]
   2f696:	ldr	r2, [r3, #0]
   2f698:	ldr	r3, [sp, #108]	; 0x6c
   2f69a:	eors	r2, r3
   2f69c:	beq.n	2f6ca <btrfs_scan_devices@@Base+0x1da>
   2f69e:	blx	86b8 <__stack_chk_fail@plt>
   2f6a2:	ldr	r3, [sp, #16]
   2f6a4:	and.w	r3, r3, #61440	; 0xf000
   2f6a8:	cmp.w	r3, #24576	; 0x6000
   2f6ac:	bne.n	2f6c6 <btrfs_scan_devices@@Base+0x1d6>
   2f6ae:	ldrd	r0, r1, [sp, #32]
   2f6b2:	lsrs	r2, r0, #8
   2f6b4:	lsrs	r3, r1, #8
   2f6b6:	orr.w	r2, r2, r1, lsl #24
   2f6ba:	cmp	r3, #0
   2f6bc:	itte	eq
   2f6be:	cmpeq	r2, #7
   2f6c0:	moveq	r0, #1
   2f6c2:	movne	r0, #0
   2f6c4:	b.n	2f68e <btrfs_scan_devices@@Base+0x19e>
   2f6c6:	movs	r0, #0
   2f6c8:	b.n	2f68e <btrfs_scan_devices@@Base+0x19e>
   2f6ca:	add	sp, #116	; 0x74
   2f6cc:	ldr.w	pc, [sp], #4
   2f6d0:	ldrsb	r4, [r3, r4]
   2f6d2:	movs	r3, r0
   2f6d4:	lsls	r4, r4, #8
   2f6d6:	movs	r0, r0
   2f6d8:	ldrsb	r6, [r6, r3]
   2f6da:	movs	r3, r0
   2f6dc:	ldr	r1, [pc, #192]	; (2f7a0 <btrfs_scan_devices@@Base+0x2b0>)
   2f6de:	ldr	r2, [pc, #196]	; (2f7a4 <btrfs_scan_devices@@Base+0x2b4>)
   2f6e0:	push	{r4, r5, r6, r7, lr}
   2f6e2:	add	r1, pc
   2f6e4:	sub.w	sp, sp, #8192	; 0x2000
   2f6e8:	sub	sp, #20
   2f6ea:	ldr	r2, [r1, r2]
   2f6ec:	add.w	r3, sp, #8192	; 0x2000
   2f6f0:	add	r5, sp, #12
   2f6f2:	ldr	r2, [r2, #0]
   2f6f4:	str	r2, [r3, #12]
   2f6f6:	mov.w	r2, #0
   2f6fa:	adds	r3, #12
   2f6fc:	ldr	r3, [pc, #168]	; (2f7a8 <btrfs_scan_devices@@Base+0x2b8>)
   2f6fe:	movs	r2, #1
   2f700:	str	r0, [sp, #4]
   2f702:	mov	r0, r5
   2f704:	add	r3, pc
   2f706:	str	r3, [sp, #0]
   2f708:	mov.w	r3, #4096	; 0x1000
   2f70c:	mov	r1, r3
   2f70e:	blx	8b70 <__snprintf_chk@plt>
   2f712:	ldr	r1, [pc, #152]	; (2f7ac <btrfs_scan_devices@@Base+0x2bc>)
   2f714:	mov	r0, r5
   2f716:	add	r1, pc
   2f718:	blx	8acc <fopen64@plt>
   2f71c:	mov	r4, r0
   2f71e:	cbz	r0, 2f73e <btrfs_scan_devices@@Base+0x24e>
   2f720:	add.w	r6, sp, #4096	; 0x1000
   2f724:	mov	r2, r0
   2f726:	adds	r6, #12
   2f728:	mov.w	r1, #4096	; 0x1000
   2f72c:	mov	r0, r6
   2f72e:	blx	85e8 <fgets@plt>
   2f732:	cbnz	r0, 2f758 <btrfs_scan_devices@@Base+0x268>
   2f734:	movs	r5, #0
   2f736:	mov	r0, r4
   2f738:	mov	r4, r5
   2f73a:	blx	8a2c <fclose@plt>
   2f73e:	ldr	r1, [pc, #112]	; (2f7b0 <btrfs_scan_devices@@Base+0x2c0>)
   2f740:	add.w	r3, sp, #8192	; 0x2000
   2f744:	ldr	r2, [pc, #92]	; (2f7a4 <btrfs_scan_devices@@Base+0x2b4>)
   2f746:	adds	r3, #12
   2f748:	add	r1, pc
   2f74a:	ldr	r2, [r1, r2]
   2f74c:	ldr	r1, [r2, #0]
   2f74e:	ldr	r2, [r3, #0]
   2f750:	eors	r1, r2
   2f752:	beq.n	2f796 <btrfs_scan_devices@@Base+0x2a6>
   2f754:	blx	86b8 <__stack_chk_fail@plt>
   2f758:	mov	r0, r6
   2f75a:	blx	88f0 <strlen@plt>
   2f75e:	cmp	r0, #1
   2f760:	bls.n	2f734 <btrfs_scan_devices@@Base+0x244>
   2f762:	add	r0, r6
   2f764:	ldr	r3, [pc, #76]	; (2f7b4 <btrfs_scan_devices@@Base+0x2c4>)
   2f766:	movs	r7, #0
   2f768:	movs	r2, #1
   2f76a:	strb.w	r7, [r0, #-1]
   2f76e:	add	r3, pc
   2f770:	str	r3, [sp, #0]
   2f772:	mov.w	r3, #4096	; 0x1000
   2f776:	mov	r1, r3
   2f778:	mov	r0, r5
   2f77a:	str	r6, [sp, #4]
   2f77c:	blx	8b70 <__snprintf_chk@plt>
   2f780:	mov	r1, r7
   2f782:	mov	r0, r5
   2f784:	blx	8a20 <access@plt>
   2f788:	cmp	r0, #0
   2f78a:	bne.n	2f734 <btrfs_scan_devices@@Base+0x244>
   2f78c:	mov	r0, r5
   2f78e:	blx	86a0 <strdup@plt+0x4>
   2f792:	mov	r5, r0
   2f794:	b.n	2f736 <btrfs_scan_devices@@Base+0x246>
   2f796:	mov	r0, r4
   2f798:	add.w	sp, sp, #8192	; 0x2000
   2f79c:	add	sp, #20
   2f79e:	pop	{r4, r5, r6, r7, pc}
   2f7a0:	ldrsb	r6, [r4, r2]
   2f7a2:	movs	r3, r0
   2f7a4:	lsls	r4, r4, #8
   2f7a6:	movs	r0, r0
   2f7a8:	subs	r1, #66	; 0x42
   2f7aa:	movs	r2, r0
   2f7ac:	cdp	0, 1, cr0, cr1, cr0, {0}
   2f7b0:	ldrsb	r0, [r0, r1]
   2f7b2:	movs	r3, r0
   2f7b4:	subs	r0, #238	; 0xee
   2f7b6:	movs	r2, r0
   2f7b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f7bc:	mov	r8, r1
   2f7be:	ldr	r1, [pc, #284]	; (2f8dc <btrfs_scan_devices@@Base+0x3ec>)
   2f7c0:	sub.w	sp, sp, #8448	; 0x2100
   2f7c4:	ldr	r2, [pc, #280]	; (2f8e0 <btrfs_scan_devices@@Base+0x3f0>)
   2f7c6:	sub	sp, #12
   2f7c8:	add	r1, pc
   2f7ca:	add.w	r4, sp, #4352	; 0x1100
   2f7ce:	add.w	r3, sp, #8448	; 0x2100
   2f7d2:	adds	r4, #4
   2f7d4:	ldr	r2, [r1, r2]
   2f7d6:	adds	r3, #4
   2f7d8:	mov	r1, r4
   2f7da:	mov	r9, r0
   2f7dc:	ldr	r2, [r2, #0]
   2f7de:	str	r2, [r3, #0]
   2f7e0:	mov.w	r2, #0
   2f7e4:	mov.w	r2, #4096	; 0x1000
   2f7e8:	blx	8788 <__realpath_chk@plt>
   2f7ec:	cbnz	r0, 2f7f6 <btrfs_scan_devices@@Base+0x306>
   2f7ee:	blx	8938 <__errno_location@plt>
   2f7f2:	ldr	r6, [r0, #0]
   2f7f4:	b.n	2f846 <btrfs_scan_devices@@Base+0x356>
   2f7f6:	movs	r1, #47	; 0x2f
   2f7f8:	mov	r0, r4
   2f7fa:	blx	8a5c <strrchr@plt>
   2f7fe:	add	r4, sp, #264	; 0x108
   2f800:	ldr	r3, [pc, #224]	; (2f8e4 <btrfs_scan_devices@@Base+0x3f4>)
   2f802:	subs	r5, r4, #4
   2f804:	movs	r2, #1
   2f806:	add	r3, pc
   2f808:	str	r3, [sp, #0]
   2f80a:	mov.w	r3, #4096	; 0x1000
   2f80e:	mov	r1, r3
   2f810:	str	r0, [sp, #4]
   2f812:	mov	r0, r5
   2f814:	blx	8b70 <__snprintf_chk@plt>
   2f818:	ldr	r1, [pc, #204]	; (2f8e8 <btrfs_scan_devices@@Base+0x3f8>)
   2f81a:	mov	r0, r5
   2f81c:	add	r1, pc
   2f81e:	blx	8acc <fopen64@plt>
   2f822:	mov	r7, r0
   2f824:	cmp	r0, #0
   2f826:	bne.n	2f89c <btrfs_scan_devices@@Base+0x3ac>
   2f828:	blx	8938 <__errno_location@plt>
   2f82c:	ldr	r6, [r0, #0]
   2f82e:	mov	r5, r0
   2f830:	cmp	r6, #2
   2f832:	bne.n	2f846 <btrfs_scan_devices@@Base+0x356>
   2f834:	mov	r0, r9
   2f836:	mov.w	r1, #2048	; 0x800
   2f83a:	blx	87f4 <open64@plt>
   2f83e:	subs.w	r9, r0, #0
   2f842:	bge.n	2f84a <btrfs_scan_devices@@Base+0x35a>
   2f844:	ldr	r6, [r5, #0]
   2f846:	negs	r6, r6
   2f848:	b.n	2f864 <btrfs_scan_devices@@Base+0x374>
   2f84a:	add	r4, sp, #8
   2f84c:	movw	r1, #19461	; 0x4c05
   2f850:	mov	r2, r4
   2f852:	blx	8764 <ioctl@plt>
   2f856:	subs	r6, r0, #0
   2f858:	bge.n	2f87e <btrfs_scan_devices@@Base+0x38e>
   2f85a:	ldr	r6, [r5, #0]
   2f85c:	negs	r6, r6
   2f85e:	mov	r0, r9
   2f860:	blx	8b4c <close@plt>
   2f864:	ldr	r1, [pc, #132]	; (2f8ec <btrfs_scan_devices@@Base+0x3fc>)
   2f866:	add.w	r3, sp, #8448	; 0x2100
   2f86a:	ldr	r2, [pc, #116]	; (2f8e0 <btrfs_scan_devices@@Base+0x3f0>)
   2f86c:	adds	r3, #4
   2f86e:	add	r1, pc
   2f870:	ldr	r2, [r1, r2]
   2f872:	ldr	r1, [r2, #0]
   2f874:	ldr	r2, [r3, #0]
   2f876:	eors	r1, r2
   2f878:	beq.n	2f8d0 <btrfs_scan_devices@@Base+0x3e0>
   2f87a:	blx	86b8 <__stack_chk_fail@plt>
   2f87e:	adds	r4, #56	; 0x38
   2f880:	mov	r5, r8
   2f882:	ldmia	r4!, {r0, r1, r2, r3}
   2f884:	stmia	r5!, {r0, r1, r2, r3}
   2f886:	ldmia	r4!, {r0, r1, r2, r3}
   2f888:	stmia	r5!, {r0, r1, r2, r3}
   2f88a:	ldmia	r4!, {r0, r1, r2, r3}
   2f88c:	stmia	r5!, {r0, r1, r2, r3}
   2f88e:	ldmia.w	r4, {r0, r1, r2, r3}
   2f892:	stmia.w	r5, {r0, r1, r2, r3}
   2f896:	strb.w	r7, [r8, #64]	; 0x40
   2f89a:	b.n	2f85e <btrfs_scan_devices@@Base+0x36e>
   2f89c:	movw	r3, #4095	; 0xfff
   2f8a0:	str	r3, [sp, #4]
   2f8a2:	ldr	r3, [pc, #76]	; (2f8f0 <btrfs_scan_devices@@Base+0x400>)
   2f8a4:	subs	r4, #24
   2f8a6:	movs	r2, #1
   2f8a8:	add	r3, pc
   2f8aa:	str	r3, [sp, #0]
   2f8ac:	movs	r3, #20
   2f8ae:	mov	r0, r4
   2f8b0:	mov	r1, r3
   2f8b2:	blx	8b70 <__snprintf_chk@plt>
   2f8b6:	mov	r1, r4
   2f8b8:	mov	r2, r8
   2f8ba:	mov	r0, r7
   2f8bc:	blx	89ac <fscanf@plt>
   2f8c0:	mov	r4, r0
   2f8c2:	mov	r0, r7
   2f8c4:	blx	8a2c <fclose@plt>
   2f8c8:	adds	r4, #1
   2f8ca:	beq.n	2f7ee <btrfs_scan_devices@@Base+0x2fe>
   2f8cc:	movs	r6, #0
   2f8ce:	b.n	2f864 <btrfs_scan_devices@@Base+0x374>
   2f8d0:	mov	r0, r6
   2f8d2:	add.w	sp, sp, #8448	; 0x2100
   2f8d6:	add	sp, #12
   2f8d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f8dc:	strb	r0, [r0, r7]
   2f8de:	movs	r3, r0
   2f8e0:	lsls	r4, r4, #8
   2f8e2:	movs	r0, r0
   2f8e4:	subs	r0, #101	; 0x65
   2f8e6:	movs	r2, r0
   2f8e8:	stc	0, cr0, [fp, #-0]
   2f8ec:	strb	r2, [r3, r4]
   2f8ee:	movs	r3, r0
   2f8f0:	adds	r7, #227	; 0xe3
   2f8f2:	movs	r2, r0

0002f8f4 <path_is_block_device@@Base>:
   2f8f4:	ldr	r2, [pc, #76]	; (2f944 <path_is_block_device@@Base+0x50>)
   2f8f6:	ldr	r3, [pc, #80]	; (2f948 <path_is_block_device@@Base+0x54>)
   2f8f8:	add	r2, pc
   2f8fa:	push	{lr}
   2f8fc:	sub	sp, #116	; 0x74
   2f8fe:	ldr	r3, [r2, r3]
   2f900:	mov	r1, sp
   2f902:	ldr	r3, [r3, #0]
   2f904:	str	r3, [sp, #108]	; 0x6c
   2f906:	mov.w	r3, #0
   2f90a:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2f90e:	cmp	r0, #0
   2f910:	bge.n	2f92e <path_is_block_device@@Base+0x3a>
   2f912:	blx	8938 <__errno_location@plt>
   2f916:	ldr	r0, [r0, #0]
   2f918:	negs	r0, r0
   2f91a:	ldr	r2, [pc, #48]	; (2f94c <path_is_block_device@@Base+0x58>)
   2f91c:	ldr	r3, [pc, #40]	; (2f948 <path_is_block_device@@Base+0x54>)
   2f91e:	add	r2, pc
   2f920:	ldr	r3, [r2, r3]
   2f922:	ldr	r2, [r3, #0]
   2f924:	ldr	r3, [sp, #108]	; 0x6c
   2f926:	eors	r2, r3
   2f928:	beq.n	2f93e <path_is_block_device@@Base+0x4a>
   2f92a:	blx	86b8 <__stack_chk_fail@plt>
   2f92e:	ldr	r0, [sp, #16]
   2f930:	and.w	r0, r0, #61440	; 0xf000
   2f934:	sub.w	r3, r0, #24576	; 0x6000
   2f938:	negs	r0, r3
   2f93a:	adcs	r0, r3
   2f93c:	b.n	2f91a <path_is_block_device@@Base+0x26>
   2f93e:	add	sp, #116	; 0x74
   2f940:	ldr.w	pc, [sp], #4
   2f944:	strb	r0, [r2, r2]
   2f946:	movs	r3, r0
   2f948:	lsls	r4, r4, #8
   2f94a:	movs	r0, r0
   2f94c:	strb	r2, [r5, r1]
   2f94e:	movs	r3, r0

0002f950 <path_is_mount_point@@Base>:
   2f950:	push	{r4, r5, r6, lr}
   2f952:	mov	r6, r0
   2f954:	ldr	r1, [pc, #56]	; (2f990 <path_is_mount_point@@Base+0x40>)
   2f956:	ldr	r0, [pc, #60]	; (2f994 <path_is_mount_point@@Base+0x44>)
   2f958:	add	r1, pc
   2f95a:	add	r0, pc
   2f95c:	blx	8ad8 <setmntent@plt>
   2f960:	mov	r5, r0
   2f962:	cbnz	r0, 2f974 <path_is_mount_point@@Base+0x24>
   2f964:	mov.w	r4, #4294967295	; 0xffffffff
   2f968:	b.n	2f986 <path_is_mount_point@@Base+0x36>
   2f96a:	ldr	r0, [r4, #4]
   2f96c:	mov	r1, r6
   2f96e:	blx	8568 <strcmp@plt>
   2f972:	cbz	r0, 2f98a <path_is_mount_point@@Base+0x3a>
   2f974:	mov	r0, r5
   2f976:	blx	87dc <getmntent@plt>
   2f97a:	mov	r4, r0
   2f97c:	cmp	r0, #0
   2f97e:	bne.n	2f96a <path_is_mount_point@@Base+0x1a>
   2f980:	mov	r0, r5
   2f982:	blx	8a38 <endmntent@plt>
   2f986:	mov	r0, r4
   2f988:	pop	{r4, r5, r6, pc}
   2f98a:	movs	r4, #1
   2f98c:	b.n	2f980 <path_is_mount_point@@Base+0x30>
   2f98e:	nop
   2f990:	rsb	r0, pc, r0
   2f994:	adds	r7, #58	; 0x3a
   2f996:	movs	r2, r0

0002f998 <path_is_reg_file@@Base>:
   2f998:	ldr	r2, [pc, #76]	; (2f9e8 <path_is_reg_file@@Base+0x50>)
   2f99a:	ldr	r3, [pc, #80]	; (2f9ec <path_is_reg_file@@Base+0x54>)
   2f99c:	add	r2, pc
   2f99e:	push	{lr}
   2f9a0:	sub	sp, #116	; 0x74
   2f9a2:	ldr	r3, [r2, r3]
   2f9a4:	mov	r1, sp
   2f9a6:	ldr	r3, [r3, #0]
   2f9a8:	str	r3, [sp, #108]	; 0x6c
   2f9aa:	mov.w	r3, #0
   2f9ae:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2f9b2:	cmp	r0, #0
   2f9b4:	bge.n	2f9d2 <path_is_reg_file@@Base+0x3a>
   2f9b6:	blx	8938 <__errno_location@plt>
   2f9ba:	ldr	r0, [r0, #0]
   2f9bc:	negs	r0, r0
   2f9be:	ldr	r2, [pc, #48]	; (2f9f0 <path_is_reg_file@@Base+0x58>)
   2f9c0:	ldr	r3, [pc, #40]	; (2f9ec <path_is_reg_file@@Base+0x54>)
   2f9c2:	add	r2, pc
   2f9c4:	ldr	r3, [r2, r3]
   2f9c6:	ldr	r2, [r3, #0]
   2f9c8:	ldr	r3, [sp, #108]	; 0x6c
   2f9ca:	eors	r2, r3
   2f9cc:	beq.n	2f9e2 <path_is_reg_file@@Base+0x4a>
   2f9ce:	blx	86b8 <__stack_chk_fail@plt>
   2f9d2:	ldr	r0, [sp, #16]
   2f9d4:	and.w	r0, r0, #61440	; 0xf000
   2f9d8:	sub.w	r3, r0, #32768	; 0x8000
   2f9dc:	negs	r0, r3
   2f9de:	adcs	r0, r3
   2f9e0:	b.n	2f9be <path_is_reg_file@@Base+0x26>
   2f9e2:	add	sp, #116	; 0x74
   2f9e4:	ldr.w	pc, [sp], #4
   2f9e8:	strh	r4, [r5, r7]
   2f9ea:	movs	r3, r0
   2f9ec:	lsls	r4, r4, #8
   2f9ee:	movs	r0, r0
   2f9f0:	strh	r6, [r0, r7]
   2f9f2:	movs	r3, r0

0002f9f4 <path_exists@@Base>:
   2f9f4:	ldr	r2, [pc, #72]	; (2fa40 <path_exists@@Base+0x4c>)
   2f9f6:	ldr	r3, [pc, #76]	; (2fa44 <path_exists@@Base+0x50>)
   2f9f8:	add	r2, pc
   2f9fa:	push	{lr}
   2f9fc:	sub	sp, #116	; 0x74
   2f9fe:	ldr	r3, [r2, r3]
   2fa00:	mov	r1, sp
   2fa02:	ldr	r3, [r3, #0]
   2fa04:	str	r3, [sp, #108]	; 0x6c
   2fa06:	mov.w	r3, #0
   2fa0a:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2fa0e:	cmp	r0, #0
   2fa10:	bge.n	2fa32 <path_exists@@Base+0x3e>
   2fa12:	blx	8938 <__errno_location@plt>
   2fa16:	ldr	r0, [r0, #0]
   2fa18:	cmp	r0, #2
   2fa1a:	beq.n	2fa36 <path_exists@@Base+0x42>
   2fa1c:	negs	r0, r0
   2fa1e:	ldr	r2, [pc, #40]	; (2fa48 <path_exists@@Base+0x54>)
   2fa20:	ldr	r3, [pc, #32]	; (2fa44 <path_exists@@Base+0x50>)
   2fa22:	add	r2, pc
   2fa24:	ldr	r3, [r2, r3]
   2fa26:	ldr	r2, [r3, #0]
   2fa28:	ldr	r3, [sp, #108]	; 0x6c
   2fa2a:	eors	r2, r3
   2fa2c:	beq.n	2fa3a <path_exists@@Base+0x46>
   2fa2e:	blx	86b8 <__stack_chk_fail@plt>
   2fa32:	movs	r0, #1
   2fa34:	b.n	2fa1e <path_exists@@Base+0x2a>
   2fa36:	movs	r0, #0
   2fa38:	b.n	2fa1e <path_exists@@Base+0x2a>
   2fa3a:	add	sp, #116	; 0x74
   2fa3c:	ldr.w	pc, [sp], #4
   2fa40:	strh	r0, [r2, r6]
   2fa42:	movs	r3, r0
   2fa44:	lsls	r4, r4, #8
   2fa46:	movs	r0, r0
   2fa48:	strh	r6, [r4, r5]
   2fa4a:	movs	r3, r0

0002fa4c <path_is_reg_or_block_device@@Base>:
   2fa4c:	ldr	r2, [pc, #96]	; (2fab0 <path_is_reg_or_block_device@@Base+0x64>)
   2fa4e:	ldr	r3, [pc, #100]	; (2fab4 <path_is_reg_or_block_device@@Base+0x68>)
   2fa50:	add	r2, pc
   2fa52:	push	{lr}
   2fa54:	sub	sp, #116	; 0x74
   2fa56:	ldr	r3, [r2, r3]
   2fa58:	mov	r1, sp
   2fa5a:	ldr	r3, [r3, #0]
   2fa5c:	str	r3, [sp, #108]	; 0x6c
   2fa5e:	mov.w	r3, #0
   2fa62:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2fa66:	cmp	r0, #0
   2fa68:	bge.n	2fa8a <path_is_reg_or_block_device@@Base+0x3e>
   2fa6a:	blx	8938 <__errno_location@plt>
   2fa6e:	ldr	r0, [r0, #0]
   2fa70:	cmp	r0, #2
   2fa72:	beq.n	2faa0 <path_is_reg_or_block_device@@Base+0x54>
   2fa74:	negs	r0, r0
   2fa76:	ldr	r2, [pc, #64]	; (2fab8 <path_is_reg_or_block_device@@Base+0x6c>)
   2fa78:	ldr	r3, [pc, #56]	; (2fab4 <path_is_reg_or_block_device@@Base+0x68>)
   2fa7a:	add	r2, pc
   2fa7c:	ldr	r3, [r2, r3]
   2fa7e:	ldr	r2, [r3, #0]
   2fa80:	ldr	r3, [sp, #108]	; 0x6c
   2fa82:	eors	r2, r3
   2fa84:	beq.n	2faa8 <path_is_reg_or_block_device@@Base+0x5c>
   2fa86:	blx	86b8 <__stack_chk_fail@plt>
   2fa8a:	ldr	r0, [sp, #16]
   2fa8c:	and.w	r0, r0, #61440	; 0xf000
   2fa90:	cmp.w	r0, #24576	; 0x6000
   2fa94:	beq.n	2faa4 <path_is_reg_or_block_device@@Base+0x58>
   2fa96:	sub.w	r3, r0, #32768	; 0x8000
   2fa9a:	negs	r0, r3
   2fa9c:	adcs	r0, r3
   2fa9e:	b.n	2fa76 <path_is_reg_or_block_device@@Base+0x2a>
   2faa0:	movs	r0, #0
   2faa2:	b.n	2fa76 <path_is_reg_or_block_device@@Base+0x2a>
   2faa4:	movs	r0, #1
   2faa6:	b.n	2fa76 <path_is_reg_or_block_device@@Base+0x2a>
   2faa8:	add	sp, #116	; 0x74
   2faaa:	ldr.w	pc, [sp], #4
   2faae:	nop
   2fab0:	strh	r0, [r7, r4]
   2fab2:	movs	r3, r0
   2fab4:	lsls	r4, r4, #8
   2fab6:	movs	r0, r0
   2fab8:	strh	r6, [r1, r4]
   2faba:	movs	r3, r0

0002fabc <canonicalize_dm_name@@Base>:
   2fabc:	cbz	r0, 2fac4 <canonicalize_dm_name@@Base+0x8>
   2fabe:	ldrb	r3, [r0, #0]
   2fac0:	cbz	r3, 2fac4 <canonicalize_dm_name@@Base+0x8>
   2fac2:	b.n	2f6dc <btrfs_scan_devices@@Base+0x1ec>
   2fac4:	movs	r0, #0
   2fac6:	bx	lr

0002fac8 <canonicalize_path@@Base>:
   2fac8:	push	{r3, r4, r5, lr}
   2faca:	mov	r5, r0
   2facc:	cbz	r0, 2fb1c <canonicalize_path@@Base+0x54>
   2face:	ldrb	r4, [r0, #0]
   2fad0:	cbz	r4, 2fb1e <canonicalize_path@@Base+0x56>
   2fad2:	movs	r1, #0
   2fad4:	blx	8b40 <realpath@plt>
   2fad8:	mov	r4, r0
   2fada:	cbnz	r0, 2fae6 <canonicalize_path@@Base+0x1e>
   2fadc:	mov	r0, r5
   2fade:	ldmia.w	sp!, {r3, r4, r5, lr}
   2fae2:	b.w	869c <strdup@plt>
   2fae6:	movs	r1, #47	; 0x2f
   2fae8:	blx	8a5c <strrchr@plt>
   2faec:	mov	r5, r0
   2faee:	cbz	r0, 2fb1e <canonicalize_path@@Base+0x56>
   2faf0:	ldr	r1, [pc, #48]	; (2fb24 <canonicalize_path@@Base+0x5c>)
   2faf2:	movs	r2, #4
   2faf4:	add	r1, pc
   2faf6:	blx	8b28 <strncmp@plt>
   2fafa:	cbnz	r0, 2fb1e <canonicalize_path@@Base+0x56>
   2fafc:	blx	88cc <__ctype_b_loc@plt>
   2fb00:	ldrb	r2, [r5, #4]
   2fb02:	ldr	r3, [r0, #0]
   2fb04:	ldrh.w	r3, [r3, r2, lsl #1]
   2fb08:	lsls	r3, r3, #20
   2fb0a:	bpl.n	2fb1e <canonicalize_path@@Base+0x56>
   2fb0c:	adds	r0, r5, #1
   2fb0e:	bl	2fabc <canonicalize_dm_name@@Base>
   2fb12:	mov	r5, r0
   2fb14:	cbz	r0, 2fb1e <canonicalize_path@@Base+0x56>
   2fb16:	mov	r0, r4
   2fb18:	blx	85dc <free@plt+0x4>
   2fb1c:	mov	r4, r5
   2fb1e:	mov	r0, r4
   2fb20:	pop	{r3, r4, r5, pc}
   2fb22:	nop
   2fb24:	adds	r5, #178	; 0xb2
   2fb26:	movs	r2, r0

0002fb28 <__strncpy_null@@Base>:
   2fb28:	push	{r3, r4, r5, lr}
   2fb2a:	mov	r4, r2
   2fb2c:	mov	r5, r0
   2fb2e:	blx	8994 <strncpy@plt>
   2fb32:	cbz	r4, 2fb3c <__strncpy_null@@Base+0x14>
   2fb34:	add	r4, r5
   2fb36:	movs	r3, #0
   2fb38:	strb.w	r3, [r4, #-1]
   2fb3c:	mov	r0, r5
   2fb3e:	pop	{r3, r4, r5, pc}

0002fb40 <is_same_loop_file@@Base>:
   2fb40:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2fb44:	mov	r5, r1
   2fb46:	ldr	r1, [pc, #368]	; (2fcb8 <is_same_loop_file@@Base+0x178>)
   2fb48:	sub.w	sp, sp, #16512	; 0x4080
   2fb4c:	ldr	r2, [pc, #364]	; (2fcbc <is_same_loop_file@@Base+0x17c>)
   2fb4e:	sub	sp, #88	; 0x58
   2fb50:	add	r1, pc
   2fb52:	add.w	r3, sp, #16512	; 0x4080
   2fb56:	adds	r3, #84	; 0x54
   2fb58:	mov	r6, r0
   2fb5a:	ldr	r2, [r1, r2]
   2fb5c:	ldr	r2, [r2, #0]
   2fb5e:	str	r2, [r3, #0]
   2fb60:	mov.w	r2, #0
   2fb64:	bl	2f668 <btrfs_scan_devices@@Base+0x178>
   2fb68:	subs	r4, r0, #0
   2fb6a:	bge.n	2fb74 <is_same_loop_file@@Base+0x34>
   2fb6c:	adds	r3, r4, #2
   2fb6e:	bne.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fb70:	movs	r4, #0
   2fb72:	b.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fb74:	beq.n	2fb90 <is_same_loop_file@@Base+0x50>
   2fb76:	add	r7, sp, #212	; 0xd4
   2fb78:	mov	r0, r6
   2fb7a:	mov	r1, r7
   2fb7c:	bl	2f7b8 <btrfs_scan_devices@@Base+0x2c8>
   2fb80:	subs	r4, r0, #0
   2fb82:	bge.n	2fc20 <is_same_loop_file@@Base+0xe0>
   2fb84:	blx	8938 <__errno_location@plt>
   2fb88:	ldr	r3, [r0, #0]
   2fb8a:	cmp	r3, #1
   2fb8c:	bne.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fb8e:	movs	r6, #0
   2fb90:	mov	r0, r5
   2fb92:	bl	2f668 <btrfs_scan_devices@@Base+0x178>
   2fb96:	subs	r4, r0, #0
   2fb98:	blt.n	2fb6c <is_same_loop_file@@Base+0x2c>
   2fb9a:	beq.n	2fbba <is_same_loop_file@@Base+0x7a>
   2fb9c:	add.w	r7, sp, #4288	; 0x10c0
   2fba0:	mov	r0, r5
   2fba2:	adds	r7, #20
   2fba4:	mov	r1, r7
   2fba6:	bl	2f7b8 <btrfs_scan_devices@@Base+0x2c8>
   2fbaa:	subs	r4, r0, #0
   2fbac:	bge.n	2fc24 <is_same_loop_file@@Base+0xe4>
   2fbae:	blx	8938 <__errno_location@plt>
   2fbb2:	ldr	r3, [r0, #0]
   2fbb4:	cmp	r3, #1
   2fbb6:	bne.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fbb8:	movs	r5, #0
   2fbba:	add.w	r4, sp, #8384	; 0x20c0
   2fbbe:	mov.w	r2, #4096	; 0x1000
   2fbc2:	adds	r4, #20
   2fbc4:	mov	r0, r6
   2fbc6:	mov	r1, r4
   2fbc8:	blx	8788 <__realpath_chk@plt>
   2fbcc:	cbnz	r0, 2fbda <is_same_loop_file@@Base+0x9a>
   2fbce:	mov.w	r2, #4096	; 0x1000
   2fbd2:	mov	r1, r6
   2fbd4:	mov	r0, r4
   2fbd6:	bl	2fb28 <__strncpy_null@@Base>
   2fbda:	add.w	r7, sp, #12480	; 0x30c0
   2fbde:	mov.w	r2, #4096	; 0x1000
   2fbe2:	adds	r7, #20
   2fbe4:	mov	r0, r5
   2fbe6:	mov	r1, r7
   2fbe8:	blx	8788 <__realpath_chk@plt>
   2fbec:	cbnz	r0, 2fbfa <is_same_loop_file@@Base+0xba>
   2fbee:	mov.w	r2, #4096	; 0x1000
   2fbf2:	mov	r1, r5
   2fbf4:	mov	r0, r7
   2fbf6:	bl	2fb28 <__strncpy_null@@Base>
   2fbfa:	mov	r1, r7
   2fbfc:	mov	r0, r4
   2fbfe:	blx	8568 <strcmp@plt>
   2fc02:	cbnz	r0, 2fc28 <is_same_loop_file@@Base+0xe8>
   2fc04:	movs	r4, #1
   2fc06:	ldr	r1, [pc, #184]	; (2fcc0 <is_same_loop_file@@Base+0x180>)
   2fc08:	add.w	r3, sp, #16512	; 0x4080
   2fc0c:	ldr	r2, [pc, #172]	; (2fcbc <is_same_loop_file@@Base+0x17c>)
   2fc0e:	adds	r3, #84	; 0x54
   2fc10:	add	r1, pc
   2fc12:	ldr	r2, [r1, r2]
   2fc14:	ldr	r1, [r2, #0]
   2fc16:	ldr	r2, [r3, #0]
   2fc18:	eors	r1, r2
   2fc1a:	beq.n	2fcaa <is_same_loop_file@@Base+0x16a>
   2fc1c:	blx	86b8 <__stack_chk_fail@plt>
   2fc20:	mov	r6, r7
   2fc22:	b.n	2fb90 <is_same_loop_file@@Base+0x50>
   2fc24:	mov	r5, r7
   2fc26:	b.n	2fbba <is_same_loop_file@@Base+0x7a>
   2fc28:	add	r7, sp, #88	; 0x58
   2fc2a:	mov	r0, r6
   2fc2c:	sub.w	r8, r7, #88	; 0x58
   2fc30:	mov	r1, r8
   2fc32:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2fc36:	cmp	r0, #0
   2fc38:	bge.n	2fc48 <is_same_loop_file@@Base+0x108>
   2fc3a:	blx	8938 <__errno_location@plt>
   2fc3e:	ldr	r4, [r0, #0]
   2fc40:	cmp	r4, #2
   2fc42:	beq.n	2fb70 <is_same_loop_file@@Base+0x30>
   2fc44:	negs	r4, r4
   2fc46:	b.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fc48:	add	r6, sp, #216	; 0xd8
   2fc4a:	mov	r0, r5
   2fc4c:	sub.w	r4, r6, #112	; 0x70
   2fc50:	mov	r1, r4
   2fc52:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2fc56:	cmp	r0, #0
   2fc58:	blt.n	2fc3a <is_same_loop_file@@Base+0xfa>
   2fc5a:	ldr.w	r3, [r8, #16]
   2fc5e:	and.w	r3, r3, #61440	; 0xf000
   2fc62:	cmp.w	r3, #24576	; 0x6000
   2fc66:	bne.n	2fc84 <is_same_loop_file@@Base+0x144>
   2fc68:	ldr	r3, [r4, #16]
   2fc6a:	and.w	r3, r3, #61440	; 0xf000
   2fc6e:	cmp.w	r3, #24576	; 0x6000
   2fc72:	bne.n	2fc84 <is_same_loop_file@@Base+0x144>
   2fc74:	ldrd	r0, r1, [r8, #32]
   2fc78:	ldrd	r2, r3, [r4, #32]
   2fc7c:	cmp	r1, r3
   2fc7e:	it	eq
   2fc80:	cmpeq	r0, r2
   2fc82:	beq.n	2fc04 <is_same_loop_file@@Base+0xc4>
   2fc84:	ldrd	r0, r1, [r7, #-88]	; 0x58
   2fc88:	ldrd	r2, r3, [r6, #-112]	; 0x70
   2fc8c:	cmp	r1, r3
   2fc8e:	it	eq
   2fc90:	cmpeq	r0, r2
   2fc92:	bne.w	2fb70 <is_same_loop_file@@Base+0x30>
   2fc96:	ldrd	r2, r3, [r4, #96]	; 0x60
   2fc9a:	ldrd	r0, r1, [r8, #96]	; 0x60
   2fc9e:	cmp	r1, r3
   2fca0:	itte	eq
   2fca2:	cmpeq	r0, r2
   2fca4:	moveq	r4, #1
   2fca6:	movne	r4, #0
   2fca8:	b.n	2fc06 <is_same_loop_file@@Base+0xc6>
   2fcaa:	mov	r0, r4
   2fcac:	add.w	sp, sp, #16512	; 0x4080
   2fcb0:	add	sp, #88	; 0x58
   2fcb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2fcb6:	nop
   2fcb8:	strh	r0, [r7, r0]
   2fcba:	movs	r3, r0
   2fcbc:	lsls	r4, r4, #8
   2fcbe:	movs	r0, r0
   2fcc0:	str	r0, [r7, r5]
   2fcc2:	movs	r3, r0

0002fcc4 <path_is_dir@@Base>:
   2fcc4:	ldr	r2, [pc, #76]	; (2fd14 <path_is_dir@@Base+0x50>)
   2fcc6:	ldr	r3, [pc, #80]	; (2fd18 <path_is_dir@@Base+0x54>)
   2fcc8:	add	r2, pc
   2fcca:	push	{lr}
   2fccc:	sub	sp, #116	; 0x74
   2fcce:	ldr	r3, [r2, r3]
   2fcd0:	mov	r1, sp
   2fcd2:	ldr	r3, [r3, #0]
   2fcd4:	str	r3, [sp, #108]	; 0x6c
   2fcd6:	mov.w	r3, #0
   2fcda:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   2fcde:	cmp	r0, #0
   2fce0:	bge.n	2fcfe <path_is_dir@@Base+0x3a>
   2fce2:	blx	8938 <__errno_location@plt>
   2fce6:	ldr	r0, [r0, #0]
   2fce8:	negs	r0, r0
   2fcea:	ldr	r2, [pc, #48]	; (2fd1c <path_is_dir@@Base+0x58>)
   2fcec:	ldr	r3, [pc, #40]	; (2fd18 <path_is_dir@@Base+0x54>)
   2fcee:	add	r2, pc
   2fcf0:	ldr	r3, [r2, r3]
   2fcf2:	ldr	r2, [r3, #0]
   2fcf4:	ldr	r3, [sp, #108]	; 0x6c
   2fcf6:	eors	r2, r3
   2fcf8:	beq.n	2fd0e <path_is_dir@@Base+0x4a>
   2fcfa:	blx	86b8 <__stack_chk_fail@plt>
   2fcfe:	ldr	r0, [sp, #16]
   2fd00:	and.w	r0, r0, #61440	; 0xf000
   2fd04:	sub.w	r3, r0, #16384	; 0x4000
   2fd08:	negs	r0, r3
   2fd0a:	adcs	r0, r3
   2fd0c:	b.n	2fcea <path_is_dir@@Base+0x26>
   2fd0e:	add	sp, #116	; 0x74
   2fd10:	ldr.w	pc, [sp], #4
   2fd14:	str	r0, [r0, r3]
   2fd16:	movs	r3, r0
   2fd18:	lsls	r4, r4, #8
   2fd1a:	movs	r0, r0
   2fd1c:	str	r2, [r3, r2]
   2fd1e:	movs	r3, r0

0002fd20 <arg_copy_path@@Base>:
   2fd20:	push	{r0, r1, r2, r4, r5, lr}
   2fd22:	mov	r5, r0
   2fd24:	mov	r0, r1
   2fd26:	mov	r4, r2
   2fd28:	str	r1, [sp, #4]
   2fd2a:	blx	88f0 <strlen@plt>
   2fd2e:	cmp.w	r0, #4096	; 0x1000
   2fd32:	bcs.n	2fd48 <arg_copy_path@@Base+0x28>
   2fd34:	cmp	r4, r0
   2fd36:	bls.n	2fd48 <arg_copy_path@@Base+0x28>
   2fd38:	ldr	r1, [sp, #4]
   2fd3a:	mov	r2, r4
   2fd3c:	mov	r0, r5
   2fd3e:	bl	2fb28 <__strncpy_null@@Base>
   2fd42:	movs	r0, #0
   2fd44:	add	sp, #12
   2fd46:	pop	{r4, r5, pc}
   2fd48:	mvn.w	r0, #35	; 0x23
   2fd4c:	b.n	2fd44 <arg_copy_path@@Base+0x24>

0002fd4e <test_issubvolname@@Base>:
   2fd4e:	push	{r4, lr}
   2fd50:	mov	r4, r0
   2fd52:	ldrb	r3, [r0, #0]
   2fd54:	cbz	r3, 2fd7c <test_issubvolname@@Base+0x2e>
   2fd56:	movs	r1, #47	; 0x2f
   2fd58:	blx	88fc <strchr@plt>
   2fd5c:	cbnz	r0, 2fd7c <test_issubvolname@@Base+0x2e>
   2fd5e:	ldr	r1, [pc, #32]	; (2fd80 <test_issubvolname@@Base+0x32>)
   2fd60:	mov	r0, r4
   2fd62:	add	r1, pc
   2fd64:	blx	8568 <strcmp@plt>
   2fd68:	cbz	r0, 2fd7a <test_issubvolname@@Base+0x2c>
   2fd6a:	ldr	r1, [pc, #24]	; (2fd84 <test_issubvolname@@Base+0x36>)
   2fd6c:	mov	r0, r4
   2fd6e:	add	r1, pc
   2fd70:	blx	8568 <strcmp@plt>
   2fd74:	subs	r0, #0
   2fd76:	it	ne
   2fd78:	movne	r0, #1
   2fd7a:	pop	{r4, pc}
   2fd7c:	movs	r0, #0
   2fd7e:	b.n	2fd7a <test_issubvolname@@Base+0x2c>
   2fd80:	adds	r3, #74	; 0x4a
   2fd82:	movs	r2, r0
   2fd84:	adds	r3, #61	; 0x3d
   2fd86:	movs	r2, r0
   2fd88:	and.w	r2, r0, #2040	; 0x7f8
   2fd8c:	movs	r3, #0
   2fd8e:	cmp	r3, #0
   2fd90:	it	eq
   2fd92:	cmpeq	r2, #64	; 0x40
   2fd94:	beq.n	2fe10 <test_issubvolname@@Base+0xc2>
   2fd96:	cmp	r3, #0
   2fd98:	it	eq
   2fd9a:	cmpeq	r2, #65	; 0x41
   2fd9c:	bcs.n	2fdd0 <test_issubvolname@@Base+0x82>
   2fd9e:	cmp	r3, #0
   2fda0:	it	eq
   2fda2:	cmpeq	r2, #16
   2fda4:	beq.n	2fe1c <test_issubvolname@@Base+0xce>
   2fda6:	cmp	r3, #0
   2fda8:	it	eq
   2fdaa:	cmpeq	r2, #17
   2fdac:	bcs.n	2fdc2 <test_issubvolname@@Base+0x74>
   2fdae:	orrs.w	r1, r2, r3
   2fdb2:	beq.n	2fe14 <test_issubvolname@@Base+0xc6>
   2fdb4:	cmp	r3, #0
   2fdb6:	itet	eq
   2fdb8:	cmpeq	r2, #8
   2fdba:	movne.w	r0, #4294967295	; 0xffffffff
   2fdbe:	moveq	r0, #2
   2fdc0:	bx	lr
   2fdc2:	cmp	r3, #0
   2fdc4:	itet	eq
   2fdc6:	cmpeq	r2, #32
   2fdc8:	movne.w	r0, #4294967295	; 0xffffffff
   2fdcc:	moveq	r0, #1
   2fdce:	bx	lr
   2fdd0:	cmp	r3, #0
   2fdd2:	it	eq
   2fdd4:	cmpeq.w	r2, #512	; 0x200
   2fdd8:	beq.n	2fe18 <test_issubvolname@@Base+0xca>
   2fdda:	movs	r1, #0
   2fddc:	cmp	r1, r3
   2fdde:	mov.w	r0, #512	; 0x200
   2fde2:	it	eq
   2fde4:	cmpeq	r0, r2
   2fde6:	bcc.n	2fe00 <test_issubvolname@@Base+0xb2>
   2fde8:	cmp	r3, #0
   2fdea:	it	eq
   2fdec:	cmpeq	r2, #128	; 0x80
   2fdee:	beq.n	2fe1c <test_issubvolname@@Base+0xce>
   2fdf0:	cmp	r3, #0
   2fdf2:	itet	eq
   2fdf4:	cmpeq.w	r2, #256	; 0x100
   2fdf8:	movne.w	r0, #4294967295	; 0xffffffff
   2fdfc:	moveq	r0, #3
   2fdfe:	bx	lr
   2fe00:	cmp	r3, #0
   2fe02:	itet	eq
   2fe04:	cmpeq.w	r2, #1024	; 0x400
   2fe08:	movne.w	r0, #4294967295	; 0xffffffff
   2fe0c:	moveq	r0, #4
   2fe0e:	bx	lr
   2fe10:	movs	r0, #4
   2fe12:	bx	lr
   2fe14:	movs	r0, #1
   2fe16:	bx	lr
   2fe18:	movs	r0, #3
   2fe1a:	bx	lr
   2fe1c:	movs	r0, #2
   2fe1e:	bx	lr
   2fe20:	ldr	r2, [pc, #136]	; (2feac <test_issubvolname@@Base+0x15e>)
   2fe22:	movs	r1, #0
   2fe24:	ldr	r3, [pc, #136]	; (2feb0 <test_issubvolname@@Base+0x162>)
   2fe26:	add	r2, pc
   2fe28:	ldr	r0, [pc, #136]	; (2feb4 <test_issubvolname@@Base+0x166>)
   2fe2a:	push	{r4, r5, lr}
   2fe2c:	sub	sp, #20
   2fe2e:	ldr	r3, [r2, r3]
   2fe30:	add	r0, pc
   2fe32:	ldr	r3, [r3, #0]
   2fe34:	str	r3, [sp, #12]
   2fe36:	mov.w	r3, #0
   2fe3a:	blx	87f4 <open64@plt>
   2fe3e:	subs	r4, r0, #0
   2fe40:	bge.n	2fe8e <test_issubvolname@@Base+0x140>
   2fe42:	ldr	r0, [pc, #116]	; (2feb8 <test_issubvolname@@Base+0x16a>)
   2fe44:	ldr	r4, [pc, #116]	; (2febc <test_issubvolname@@Base+0x16e>)
   2fe46:	add	r0, pc
   2fe48:	bl	173a8 <__btrfs_warning@@Base>
   2fe4c:	movs	r1, #0
   2fe4e:	add	r0, sp, #4
   2fe50:	add	r4, pc
   2fe52:	blx	87ac <gettimeofday@plt>
   2fe56:	blx	88d8 <getpid@plt>
   2fe5a:	ldr	r3, [sp, #4]
   2fe5c:	eors	r0, r3
   2fe5e:	strh	r0, [r4, #0]
   2fe60:	blx	8aa8 <getppid@plt>
   2fe64:	ldr	r3, [sp, #8]
   2fe66:	ldr	r2, [sp, #4]
   2fe68:	eors	r0, r3
   2fe6a:	eors	r3, r2
   2fe6c:	strh	r0, [r4, #2]
   2fe6e:	asrs	r3, r3, #16
   2fe70:	strh	r3, [r4, #4]
   2fe72:	ldr	r3, [pc, #76]	; (2fec0 <test_issubvolname@@Base+0x172>)
   2fe74:	movs	r2, #1
   2fe76:	add	r3, pc
   2fe78:	str	r2, [r3, #8]
   2fe7a:	ldr	r2, [pc, #72]	; (2fec4 <test_issubvolname@@Base+0x176>)
   2fe7c:	ldr	r3, [pc, #48]	; (2feb0 <test_issubvolname@@Base+0x162>)
   2fe7e:	add	r2, pc
   2fe80:	ldr	r3, [r2, r3]
   2fe82:	ldr	r2, [r3, #0]
   2fe84:	ldr	r3, [sp, #12]
   2fe86:	eors	r2, r3
   2fe88:	beq.n	2fea6 <test_issubvolname@@Base+0x158>
   2fe8a:	blx	86b8 <__stack_chk_fail@plt>
   2fe8e:	ldr	r1, [pc, #56]	; (2fec8 <test_issubvolname@@Base+0x17a>)
   2fe90:	movs	r2, #6
   2fe92:	add	r1, pc
   2fe94:	blx	85a4 <read@plt>
   2fe98:	mov	r5, r0
   2fe9a:	mov	r0, r4
   2fe9c:	blx	8b4c <close@plt>
   2fea0:	cmp	r5, #5
   2fea2:	bhi.n	2fe72 <test_issubvolname@@Base+0x124>
   2fea4:	b.n	2fe42 <test_issubvolname@@Base+0xf4>
   2fea6:	add	sp, #20
   2fea8:	pop	{r4, r5, pc}
   2feaa:	nop
   2feac:	ldr	r7, [pc, #392]	; (30038 <check_mounted_where@@Base+0x1c>)
   2feae:	movs	r3, r0
   2feb0:	lsls	r4, r4, #8
   2feb2:	movs	r0, r0
   2feb4:	adds	r2, #126	; 0x7e
   2feb6:	movs	r2, r0
   2feb8:	adds	r2, #117	; 0x75
   2feba:	movs	r2, r0
   2febc:	str	r4, [r1, #72]	; 0x48
   2febe:	movs	r3, r0
   2fec0:	str	r6, [r4, #68]	; 0x44
   2fec2:	movs	r3, r0
   2fec4:	ldr	r7, [pc, #40]	; (2fef0 <test_issubvolname@@Base+0x1a2>)
   2fec6:	movs	r3, r0
   2fec8:	str	r2, [r1, #68]	; 0x44
   2feca:	movs	r3, r0
   2fecc:	ldr.w	ip, [pc, #76]	; 2ff1c <test_issubvolname@@Base+0x1ce>
   2fed0:	ldr	r5, [pc, #76]	; (2ff20 <test_issubvolname@@Base+0x1d2>)
   2fed2:	add	ip, pc
   2fed4:	ldr	r4, [pc, #76]	; (2ff24 <test_issubvolname@@Base+0x1d6>)
   2fed6:	push	{lr}
   2fed8:	sub	sp, #92	; 0x5c
   2feda:	ldr.w	r5, [ip, r5]
   2fede:	add	r4, pc
   2fee0:	ldr	r5, [r5, #0]
   2fee2:	str	r5, [sp, #84]	; 0x54
   2fee4:	mov.w	r5, #0
   2fee8:	ldr	r5, [pc, #60]	; (2ff28 <test_issubvolname@@Base+0x1da>)
   2feea:	ldr	r4, [r4, r5]
   2feec:	strd	r2, r1, [sp]
   2fef0:	movs	r1, #1
   2fef2:	strd	r0, r3, [sp, #8]
   2fef6:	ldr	r2, [pc, #52]	; (2ff2c <test_issubvolname@@Base+0x1de>)
   2fef8:	ldr	r3, [pc, #52]	; (2ff30 <test_issubvolname@@Base+0x1e2>)
   2fefa:	ldr	r0, [r4, #0]
   2fefc:	add	r4, sp, #20
   2fefe:	add	r3, pc
   2ff00:	add	r2, pc
   2ff02:	blx	8a14 <__fprintf_chk@plt+0x4>
   2ff06:	movs	r1, #16
   2ff08:	mov	r0, r4
   2ff0a:	blx	886c <backtrace@plt>
   2ff0e:	movs	r2, #2
   2ff10:	mov	r1, r0
   2ff12:	mov	r0, r4
   2ff14:	blx	8b7c <backtrace_symbols_fd@plt>
   2ff18:	blx	8b34 <abort@plt>
   2ff1c:	ldr	r6, [pc, #728]	; (301f8 <check_mounted@@Base>)
   2ff1e:	movs	r3, r0
   2ff20:	lsls	r4, r4, #8
   2ff22:	movs	r0, r0
   2ff24:	ldr	r6, [pc, #680]	; (301d0 <get_btrfs_mount@@Base+0x68>)
   2ff26:	movs	r3, r0
   2ff28:	lsls	r4, r6, #8
   2ff2a:	movs	r0, r0
   2ff2c:	ldr	r0, [sp, #648]	; 0x288
   2ff2e:	movs	r0, r0
   2ff30:	adds	r1, #250	; 0xfa
   2ff32:	movs	r2, r0

0002ff34 <btrfs_make_root_dir@@Base>:
   2ff34:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2ff38:	mov	r6, r2
   2ff3a:	ldr	r2, [pc, #208]	; (3000c <btrfs_make_root_dir@@Base+0xd8>)
   2ff3c:	mov	r5, r3
   2ff3e:	ldr	r3, [pc, #208]	; (30010 <btrfs_make_root_dir@@Base+0xdc>)
   2ff40:	sub	sp, #192	; 0xc0
   2ff42:	add	r2, pc
   2ff44:	mov	r8, r0
   2ff46:	movs	r0, #0
   2ff48:	mov	r4, r1
   2ff4a:	ldr	r3, [r2, r3]
   2ff4c:	ldr	r3, [r3, #0]
   2ff4e:	str	r3, [sp, #188]	; 0xbc
   2ff50:	mov.w	r3, #0
   2ff54:	blx	8640 <time@plt>
   2ff58:	movs	r2, #104	; 0x68
   2ff5a:	movs	r1, #0
   2ff5c:	mov	r7, r0
   2ff5e:	add	r0, sp, #36	; 0x24
   2ff60:	blx	8978 <memset@plt+0x4>
   2ff64:	ldr.w	r3, [r8, #8]
   2ff68:	movs	r2, #1
   2ff6a:	str	r2, [sp, #68]	; 0x44
   2ff6c:	ldr.w	r2, [r4, #464]	; 0x1d0
   2ff70:	mov	r0, r8
   2ff72:	str	r3, [sp, #28]
   2ff74:	ldr.w	r3, [r8, #12]
   2ff78:	ldr.w	r1, [r2, #384]	; 0x180
   2ff7c:	str	r3, [sp, #32]
   2ff7e:	movs	r3, #0
   2ff80:	strd	r3, r7, [sp, #172]	; 0xac
   2ff84:	strd	r1, r3, [sp, #52]	; 0x34
   2ff88:	movw	r1, #16877	; 0x41ed
   2ff8c:	strd	r3, r7, [sp, #148]	; 0x94
   2ff90:	str	r1, [sp, #80]	; 0x50
   2ff92:	asrs	r1, r7, #31
   2ff94:	strd	r1, r3, [sp, #156]	; 0x9c
   2ff98:	strd	r7, r1, [sp, #164]	; 0xa4
   2ff9c:	strd	r1, r3, [sp, #180]	; 0xb4
   2ffa0:	strd	r7, r1, [sp, #140]	; 0x8c
   2ffa4:	mov	r1, r4
   2ffa6:	ldr	r3, [r2, #28]
   2ffa8:	cmp	r3, r4
   2ffaa:	it	eq
   2ffac:	ldreq.w	r3, [r2, #308]	; 0x134
   2ffb0:	mov	r2, r6
   2ffb2:	itt	eq
   2ffb4:	streq.w	r6, [r3, #128]	; 0x80
   2ffb8:	streq.w	r5, [r3, #132]	; 0x84
   2ffbc:	add	r3, sp, #28
   2ffbe:	str	r3, [sp, #0]
   2ffc0:	mov	r3, r5
   2ffc2:	bl	2d814 <btrfs_insert_inode@@Base>
   2ffc6:	cbnz	r0, 2fff0 <btrfs_make_root_dir@@Base+0xbc>
   2ffc8:	movs	r2, #0
   2ffca:	movs	r3, #0
   2ffcc:	strd	r2, r3, [sp, #16]
   2ffd0:	mov	r1, r4
   2ffd2:	ldr	r2, [pc, #64]	; (30014 <btrfs_make_root_dir@@Base+0xe0>)
   2ffd4:	movs	r3, #2
   2ffd6:	mov	r0, r8
   2ffd8:	strd	r6, r5, [sp, #8]
   2ffdc:	add	r2, pc
   2ffde:	strd	r6, r5, [sp]
   2ffe2:	bl	2dc1c <btrfs_insert_inode_ref@@Base>
   2ffe6:	cbnz	r0, 2fff0 <btrfs_make_root_dir@@Base+0xbc>
   2ffe8:	str.w	r6, [r4, #176]	; 0xb0
   2ffec:	str.w	r5, [r4, #180]	; 0xb4
   2fff0:	ldr	r2, [pc, #36]	; (30018 <btrfs_make_root_dir@@Base+0xe4>)
   2fff2:	ldr	r3, [pc, #28]	; (30010 <btrfs_make_root_dir@@Base+0xdc>)
   2fff4:	add	r2, pc
   2fff6:	ldr	r3, [r2, r3]
   2fff8:	ldr	r2, [r3, #0]
   2fffa:	ldr	r3, [sp, #188]	; 0xbc
   2fffc:	eors	r2, r3
   2fffe:	beq.n	30004 <btrfs_make_root_dir@@Base+0xd0>
   30000:	blx	86b8 <__stack_chk_fail@plt>
   30004:	add	sp, #192	; 0xc0
   30006:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3000a:	nop
   3000c:	ldr	r6, [pc, #280]	; (30128 <check_mounted_where@@Base+0x10c>)
   3000e:	movs	r3, r0
   30010:	lsls	r4, r4, #8
   30012:	movs	r0, r0
   30014:	adds	r0, #207	; 0xcf
   30016:	movs	r2, r0
   30018:	ldr	r5, [pc, #592]	; (3026c <pretty_size_snprintf@@Base+0x30>)
   3001a:	movs	r3, r0

0003001c <check_mounted_where@@Base>:
   3001c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30020:	mov	r8, r2
   30022:	ldr	r2, [pc, #300]	; (30150 <check_mounted_where@@Base+0x134>)
   30024:	mov	r6, r3
   30026:	ldr	r3, [pc, #300]	; (30154 <check_mounted_where@@Base+0x138>)
   30028:	sub	sp, #60	; 0x3c
   3002a:	add	r2, pc
   3002c:	mov	r9, r1
   3002e:	ldr.w	sl, [sp, #96]	; 0x60
   30032:	ldr	r3, [r2, r3]
   30034:	movs	r2, #1
   30036:	ldr	r3, [r3, #0]
   30038:	str	r3, [sp, #52]	; 0x34
   3003a:	mov.w	r3, #0
   3003e:	movs	r3, #0
   30040:	strd	r2, r3, [sp, #40]	; 0x28
   30044:	movs	r3, #0
   30046:	str	r3, [sp, #36]	; 0x24
   30048:	mov.w	r2, #65536	; 0x10000
   3004c:	ldr	r3, [sp, #100]	; 0x64
   3004e:	str	r3, [sp, #8]
   30050:	movs	r3, #0
   30052:	strd	r2, r3, [sp]
   30056:	add	r3, sp, #40	; 0x28
   30058:	add	r2, sp, #36	; 0x24
   3005a:	bl	28094 <btrfs_scan_one_device@@Base>
   3005e:	subs	r3, r0, #0
   30060:	str	r3, [sp, #16]
   30062:	bge.n	300c0 <check_mounted_where@@Base+0xa4>
   30064:	ldr	r1, [pc, #240]	; (30158 <check_mounted_where@@Base+0x13c>)
   30066:	ldr	r0, [pc, #244]	; (3015c <check_mounted_where@@Base+0x140>)
   30068:	add	r1, pc
   3006a:	add	r0, pc
   3006c:	blx	8ad8 <setmntent@plt>
   30070:	mov	r7, r0
   30072:	cmp	r0, #0
   30074:	beq.n	300ea <check_mounted_where@@Base+0xce>
   30076:	ldr.w	fp, [pc, #232]	; 30160 <check_mounted_where@@Base+0x144>
   3007a:	add	fp, pc
   3007c:	mov	r0, r7
   3007e:	blx	87dc <getmntent@plt>
   30082:	mov	r5, r0
   30084:	cmp	r0, #0
   30086:	beq.n	30110 <check_mounted_where@@Base+0xf4>
   30088:	ldr	r3, [sp, #16]
   3008a:	cmp	r3, #0
   3008c:	blt.n	300f4 <check_mounted_where@@Base+0xd8>
   3008e:	ldr	r0, [r5, #8]
   30090:	mov	r1, fp
   30092:	blx	8568 <strcmp@plt>
   30096:	cmp	r0, #0
   30098:	bne.n	3007c <check_mounted_where@@Base+0x60>
   3009a:	ldr	r2, [sp, #36]	; 0x24
   3009c:	ldr	r1, [r5, #0]
   3009e:	ldr.w	r3, [r2, #72]!
   300a2:	cmp	r3, r2
   300a4:	beq.n	3007c <check_mounted_where@@Base+0x60>
   300a6:	ldr	r0, [r3, #32]
   300a8:	strd	r1, r2, [sp, #24]
   300ac:	str	r3, [sp, #20]
   300ae:	bl	2fb40 <is_same_loop_file@@Base>
   300b2:	subs	r4, r0, #0
   300b4:	bne.n	30144 <check_mounted_where@@Base+0x128>
   300b6:	ldr	r3, [sp, #20]
   300b8:	ldrd	r1, r2, [sp, #24]
   300bc:	ldr	r3, [r3, #0]
   300be:	b.n	300a2 <check_mounted_where@@Base+0x86>
   300c0:	ldrd	r2, r3, [sp, #40]	; 0x28
   300c4:	cmp	r3, #0
   300c6:	it	eq
   300c8:	cmpeq	r2, #2
   300ca:	bcc.n	30064 <check_mounted_where@@Base+0x48>
   300cc:	bl	2f4f0 <btrfs_scan_devices@@Base>
   300d0:	mov	r4, r0
   300d2:	cmp	r0, #0
   300d4:	beq.n	30064 <check_mounted_where@@Base+0x48>
   300d6:	ldr	r2, [pc, #140]	; (30164 <check_mounted_where@@Base+0x148>)
   300d8:	ldr	r3, [pc, #120]	; (30154 <check_mounted_where@@Base+0x138>)
   300da:	add	r2, pc
   300dc:	ldr	r3, [r2, r3]
   300de:	ldr	r2, [r3, #0]
   300e0:	ldr	r3, [sp, #52]	; 0x34
   300e2:	eors	r2, r3
   300e4:	beq.n	30148 <check_mounted_where@@Base+0x12c>
   300e6:	blx	86b8 <__stack_chk_fail@plt>
   300ea:	blx	8938 <__errno_location@plt>
   300ee:	ldr	r4, [r0, #0]
   300f0:	negs	r4, r4
   300f2:	b.n	300d6 <check_mounted_where@@Base+0xba>
   300f4:	ldr	r0, [r5, #0]
   300f6:	bl	2fa4c <path_is_reg_or_block_device@@Base>
   300fa:	subs	r4, r0, #0
   300fc:	blt.n	30122 <check_mounted_where@@Base+0x106>
   300fe:	beq.n	3007c <check_mounted_where@@Base+0x60>
   30100:	ldr	r1, [r5, #0]
   30102:	mov	r0, r9
   30104:	bl	2fb40 <is_same_loop_file@@Base>
   30108:	subs	r4, r0, #0
   3010a:	blt.n	30122 <check_mounted_where@@Base+0x106>
   3010c:	beq.n	3007c <check_mounted_where@@Base+0x60>
   3010e:	cbnz	r6, 3012a <check_mounted_where@@Base+0x10e>
   30110:	cmp.w	sl, #0
   30114:	beq.n	3011c <check_mounted_where@@Base+0x100>
   30116:	ldr	r3, [sp, #36]	; 0x24
   30118:	str.w	r3, [sl]
   3011c:	subs	r4, r5, #0
   3011e:	it	ne
   30120:	movne	r4, #1
   30122:	mov	r0, r7
   30124:	blx	8a38 <endmntent@plt>
   30128:	b.n	300d6 <check_mounted_where@@Base+0xba>
   3012a:	cmp.w	r8, #0
   3012e:	beq.n	30110 <check_mounted_where@@Base+0xf4>
   30130:	mov	r2, r6
   30132:	add	r6, r8
   30134:	ldr	r1, [r5, #4]
   30136:	mov	r0, r8
   30138:	blx	8994 <strncpy@plt>
   3013c:	movs	r3, #0
   3013e:	strb.w	r3, [r6, #-1]
   30142:	b.n	30110 <check_mounted_where@@Base+0xf4>
   30144:	blt.n	30122 <check_mounted_where@@Base+0x106>
   30146:	b.n	3010e <check_mounted_where@@Base+0xf2>
   30148:	mov	r0, r4
   3014a:	add	sp, #60	; 0x3c
   3014c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30150:	ldr	r5, [pc, #376]	; (302cc <pretty_size_snprintf@@Base+0x90>)
   30152:	movs	r3, r0
   30154:	lsls	r4, r4, #8
   30156:	movs	r0, r0
   30158:	b.n	2fada <canonicalize_path@@Base+0x12>
   3015a:	movs	r0, r0
   3015c:	adds	r0, #42	; 0x2a
   3015e:	movs	r2, r0
   30160:	cmp	r7, #156	; 0x9c
   30162:	movs	r2, r0
   30164:	ldr	r4, [pc, #696]	; (30420 <pretty_size_snprintf@@Base+0x1e4>)
   30166:	movs	r3, r0

00030168 <get_btrfs_mount@@Base>:
   30168:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   3016c:	mov	r5, r0
   3016e:	mov	r7, r1
   30170:	mov	r8, r2
   30172:	bl	2f8f4 <path_is_block_device@@Base>
   30176:	subs	r4, r0, #0
   30178:	bgt.n	301a6 <get_btrfs_mount@@Base+0x3e>
   3017a:	bne.n	30192 <get_btrfs_mount@@Base+0x2a>
   3017c:	ldr	r0, [pc, #108]	; (301ec <get_btrfs_mount@@Base+0x84>)
   3017e:	mov	r1, r5
   30180:	mvn.w	r4, #21
   30184:	add	r0, pc
   30186:	bl	17424 <__btrfs_error@@Base>
   3018a:	mov	r0, r4
   3018c:	add	sp, #8
   3018e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30192:	blx	8938 <__errno_location@plt>
   30196:	negs	r3, r4
   30198:	mov	r1, r5
   3019a:	str	r3, [r0, #0]
   3019c:	ldr	r0, [pc, #80]	; (301f0 <get_btrfs_mount@@Base+0x88>)
   3019e:	add	r0, pc
   301a0:	bl	17424 <__btrfs_error@@Base>
   301a4:	b.n	3018a <get_btrfs_mount@@Base+0x22>
   301a6:	movs	r1, #0
   301a8:	mov	r0, r5
   301aa:	blx	87f4 <open64@plt>
   301ae:	subs	r6, r0, #0
   301b0:	bge.n	301d0 <get_btrfs_mount@@Base+0x68>
   301b2:	blx	8938 <__errno_location@plt>
   301b6:	mov	r1, r5
   301b8:	ldr	r4, [r0, #0]
   301ba:	ldr	r0, [pc, #56]	; (301f4 <get_btrfs_mount@@Base+0x8c>)
   301bc:	negs	r4, r4
   301be:	add	r0, pc
   301c0:	bl	17424 <__btrfs_error@@Base>
   301c4:	adds	r3, r6, #1
   301c6:	beq.n	3018a <get_btrfs_mount@@Base+0x22>
   301c8:	mov	r0, r6
   301ca:	blx	8b4c <close@plt>
   301ce:	b.n	3018a <get_btrfs_mount@@Base+0x22>
   301d0:	movs	r3, #0
   301d2:	mov	r2, r7
   301d4:	strd	r3, r3, [sp]
   301d8:	mov	r1, r5
   301da:	mov	r3, r8
   301dc:	bl	3001c <check_mounted_where@@Base>
   301e0:	cmp	r0, #0
   301e2:	ite	eq
   301e4:	mvneq.w	r4, #21
   301e8:	movne	r4, #0
   301ea:	b.n	301c8 <get_btrfs_mount@@Base+0x60>
   301ec:	cmp	r7, #131	; 0x83
   301ee:	movs	r2, r0
   301f0:	cmp	r7, #128	; 0x80
   301f2:	movs	r2, r0
   301f4:	cmp	r7, #129	; 0x81
   301f6:	movs	r2, r0

000301f8 <check_mounted@@Base>:
   301f8:	push	{r0, r1, r2, r4, r5, lr}
   301fa:	movs	r1, #0
   301fc:	mov	r4, r0
   301fe:	blx	87f4 <open64@plt>
   30202:	subs	r5, r0, #0
   30204:	bge.n	3021e <check_mounted@@Base+0x26>
   30206:	ldr	r0, [pc, #48]	; (30238 <check_mounted@@Base+0x40>)
   30208:	mov	r1, r4
   3020a:	add	r0, pc
   3020c:	bl	17424 <__btrfs_error@@Base>
   30210:	blx	8938 <__errno_location@plt>
   30214:	ldr	r4, [r0, #0]
   30216:	negs	r4, r4
   30218:	mov	r0, r4
   3021a:	add	sp, #12
   3021c:	pop	{r4, r5, pc}
   3021e:	movs	r3, #0
   30220:	mov	r1, r4
   30222:	mov	r2, r3
   30224:	strd	r3, r3, [sp]
   30228:	bl	3001c <check_mounted_where@@Base>
   3022c:	mov	r4, r0
   3022e:	mov	r0, r5
   30230:	blx	8b4c <close@plt>
   30234:	b.n	30218 <check_mounted@@Base+0x20>
   30236:	nop
   30238:	cmp	r7, #40	; 0x28
   3023a:	movs	r2, r0

0003023c <pretty_size_snprintf@@Base>:
   3023c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30240:	mov	r7, r1
   30242:	vpush	{d8}
   30246:	mov	r6, r0
   30248:	mov	r5, r3
   3024a:	vmov	s17, r2
   3024e:	ldr	r2, [pc, #540]	; (3046c <pretty_size_snprintf@@Base+0x230>)
   30250:	sub	sp, #44	; 0x2c
   30252:	add	r2, pc
   30254:	ldr	r1, [sp, #88]	; 0x58
   30256:	cbz	r3, 3028a <pretty_size_snprintf@@Base+0x4e>
   30258:	and.w	r3, r1, #1024	; 0x400
   3025c:	str	r3, [sp, #32]
   3025e:	bic.w	r3, r1, #1272	; 0x4f8
   30262:	bic.w	r3, r3, #7
   30266:	cmp.w	r3, #256	; 0x100
   3026a:	bne.n	3029c <pretty_size_snprintf@@Base+0x60>
   3026c:	ldr	r3, [sp, #32]
   3026e:	strd	r0, r7, [sp, #8]
   30272:	cbz	r3, 30296 <pretty_size_snprintf@@Base+0x5a>
   30274:	ldr	r3, [pc, #504]	; (30470 <pretty_size_snprintf@@Base+0x234>)
   30276:	add	r3, pc
   30278:	str	r3, [sp, #0]
   3027a:	movs	r2, #1
   3027c:	vmov	r0, s17
   30280:	mov.w	r3, #4294967295	; 0xffffffff
   30284:	mov	r1, r5
   30286:	blx	8b70 <__snprintf_chk@plt>
   3028a:	movs	r0, #0
   3028c:	add	sp, #44	; 0x2c
   3028e:	vpop	{d8}
   30292:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30296:	ldr	r3, [pc, #476]	; (30474 <pretty_size_snprintf@@Base+0x238>)
   30298:	add	r3, pc
   3029a:	b.n	30278 <pretty_size_snprintf@@Base+0x3c>
   3029c:	cmp.w	r3, #512	; 0x200
   302a0:	beq.w	30430 <pretty_size_snprintf@@Base+0x1f4>
   302a4:	cmp.w	r3, #768	; 0x300
   302a8:	bne.w	3040a <pretty_size_snprintf@@Base+0x1ce>
   302ac:	ldr	r3, [pc, #456]	; (30478 <pretty_size_snprintf@@Base+0x23c>)
   302ae:	mov.w	r2, #1000	; 0x3e8
   302b2:	mov.w	sl, #1000	; 0x3e8
   302b6:	add	r3, pc
   302b8:	adds	r3, #28
   302ba:	str	r3, [sp, #36]	; 0x24
   302bc:	b.n	3043e <pretty_size_snprintf@@Base+0x202>
   302be:	asrs	r1, r2, #31
   302c0:	movs	r4, #1
   302c2:	mul.w	r3, sl, r1
   302c6:	mla	r3, r2, fp, r3
   302ca:	umull	sl, fp, sl, r2
   302ce:	add	fp, r3
   302d0:	asrs	r1, r2, #31
   302d2:	adds	r4, #1
   302d4:	mul.w	r3, sl, r1
   302d8:	mla	r3, r2, fp, r3
   302dc:	umull	sl, fp, sl, r2
   302e0:	add	fp, r3
   302e2:	asrs	r1, r2, #31
   302e4:	adds	r4, #1
   302e6:	mul.w	r3, sl, r1
   302ea:	mla	r3, r2, fp, r3
   302ee:	umull	sl, fp, sl, r2
   302f2:	add	fp, r3
   302f4:	adds	r4, #1
   302f6:	cmp	r4, #6
   302f8:	ble.n	3036e <pretty_size_snprintf@@Base+0x132>
   302fa:	vmov	r2, s17
   302fe:	movs	r3, #0
   30300:	ldr	r1, [pc, #376]	; (3047c <pretty_size_snprintf@@Base+0x240>)
   30302:	movs	r0, #1
   30304:	add	r1, pc
   30306:	strb	r3, [r2, #0]
   30308:	mov	r2, r4
   3030a:	blx	89ec <__printf_chk@plt+0x4>
   3030e:	ldr	r3, [pc, #368]	; (30480 <pretty_size_snprintf@@Base+0x244>)
   30310:	ldr	r1, [pc, #368]	; (30484 <pretty_size_snprintf@@Base+0x248>)
   30312:	movw	r2, #451	; 0x1c3
   30316:	ldr	r0, [pc, #368]	; (30488 <pretty_size_snprintf@@Base+0x24c>)
   30318:	add	r3, pc
   3031a:	add	r1, pc
   3031c:	add	r0, pc
   3031e:	blx	8b88 <__assert_fail@plt>
   30322:	movs	r4, #0
   30324:	b.n	302d0 <pretty_size_snprintf@@Base+0x94>
   30326:	movs	r4, #0
   30328:	b.n	302e2 <pretty_size_snprintf@@Base+0xa6>
   3032a:	movs	r4, #0
   3032c:	b.n	302f4 <pretty_size_snprintf@@Base+0xb8>
   3032e:	mov	r3, r2
   30330:	asrs	r4, r2, #31
   30332:	strd	r3, r4, [sp, #24]
   30336:	mov	r8, r6
   30338:	ldr	r3, [sp, #32]
   3033a:	mov	r9, r7
   3033c:	cmp	r3, #0
   3033e:	beq.n	303f4 <pretty_size_snprintf@@Base+0x1b8>
   30340:	movs	r4, #0
   30342:	cmp.w	r8, #0
   30346:	mov	r2, r8
   30348:	sbcs.w	r1, r9, #0
   3034c:	mov	r3, r9
   3034e:	bge.n	30358 <pretty_size_snprintf@@Base+0x11c>
   30350:	rsbs	r2, r8, #0
   30354:	sbc.w	r3, r9, r9, lsl #1
   30358:	ldrd	r0, r1, [sp, #24]
   3035c:	cmp	r2, r0
   3035e:	sbcs	r3, r1
   30360:	bge.n	303b8 <pretty_size_snprintf@@Base+0x17c>
   30362:	cmp	r4, #0
   30364:	bne.n	302f6 <pretty_size_snprintf@@Base+0xba>
   30366:	mov.w	sl, #1
   3036a:	mov.w	fp, #0
   3036e:	mov	r1, fp
   30370:	mov	r0, sl
   30372:	bl	39380 <btrfs_util_strerror@@Base+0x6d0>
   30376:	ldr	r3, [sp, #32]
   30378:	mov	r1, r7
   3037a:	vmov	s16, r0
   3037e:	mov	r0, r6
   30380:	cmp	r3, #0
   30382:	beq.n	30404 <pretty_size_snprintf@@Base+0x1c8>
   30384:	bl	39390 <btrfs_util_strerror@@Base+0x6e0>
   30388:	vmov	s15, r0
   3038c:	ldr	r3, [sp, #36]	; 0x24
   3038e:	vmov	r0, s17
   30392:	movs	r2, #1
   30394:	vdiv.f32	s14, s15, s16
   30398:	mov	r1, r5
   3039a:	ldr.w	r3, [r3, r4, lsl #2]
   3039e:	str	r3, [sp, #16]
   303a0:	ldr	r3, [pc, #232]	; (3048c <pretty_size_snprintf@@Base+0x250>)
   303a2:	add	r3, pc
   303a4:	str	r3, [sp, #0]
   303a6:	mov.w	r3, #4294967295	; 0xffffffff
   303aa:	vcvt.f64.f32	d7, s14
   303ae:	vstr	d7, [sp, #8]
   303b2:	blx	8b70 <__snprintf_chk@plt>
   303b6:	b.n	3028c <pretty_size_snprintf@@Base+0x50>
   303b8:	mov	r0, r8
   303ba:	mov	r1, r9
   303bc:	ldrd	r2, r3, [sp, #24]
   303c0:	mov	r6, r8
   303c2:	bl	3940c <btrfs_util_strerror@@Base+0x75c>
   303c6:	mov	r7, r9
   303c8:	adds	r4, #1
   303ca:	mov	r8, r0
   303cc:	mov	r9, r1
   303ce:	b.n	30342 <pretty_size_snprintf@@Base+0x106>
   303d0:	mov	r0, r8
   303d2:	mov	r1, r9
   303d4:	ldrd	r2, r3, [sp, #24]
   303d8:	adds	r4, #1
   303da:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   303de:	mov	r6, r8
   303e0:	mov	r7, r9
   303e2:	mov	r8, r0
   303e4:	mov	r9, r1
   303e6:	ldrd	r2, r3, [sp, #24]
   303ea:	cmp	r9, r3
   303ec:	it	eq
   303ee:	cmpeq	r8, r2
   303f0:	bcs.n	303d0 <pretty_size_snprintf@@Base+0x194>
   303f2:	b.n	30362 <pretty_size_snprintf@@Base+0x126>
   303f4:	ldr	r4, [sp, #32]
   303f6:	b.n	303e6 <pretty_size_snprintf@@Base+0x1aa>
   303f8:	mov.w	sl, #1
   303fc:	mov.w	fp, #0
   30400:	movs	r4, #0
   30402:	b.n	3036e <pretty_size_snprintf@@Base+0x132>
   30404:	bl	39380 <btrfs_util_strerror@@Base+0x6d0>
   30408:	b.n	30388 <pretty_size_snprintf@@Base+0x14c>
   3040a:	ldr	r3, [pc, #132]	; (30490 <pretty_size_snprintf@@Base+0x254>)
   3040c:	ldr	r0, [r2, r3]
   3040e:	bic.w	r3, r1, #1024	; 0x400
   30412:	ldr	r2, [pc, #128]	; (30494 <pretty_size_snprintf@@Base+0x258>)
   30414:	movs	r1, #1
   30416:	add	r2, pc
   30418:	ldr	r0, [r0, #0]
   3041a:	blx	8a14 <__fprintf_chk@plt+0x4>
   3041e:	ldr	r3, [pc, #120]	; (30498 <pretty_size_snprintf@@Base+0x25c>)
   30420:	ldr	r1, [pc, #120]	; (3049c <pretty_size_snprintf@@Base+0x260>)
   30422:	mov.w	r2, #394	; 0x18a
   30426:	ldr	r0, [pc, #120]	; (304a0 <pretty_size_snprintf@@Base+0x264>)
   30428:	add	r3, pc
   3042a:	add	r1, pc
   3042c:	add	r0, pc
   3042e:	b.n	3031e <pretty_size_snprintf@@Base+0xe2>
   30430:	ldr	r3, [pc, #112]	; (304a4 <pretty_size_snprintf@@Base+0x268>)
   30432:	mov.w	r2, #1024	; 0x400
   30436:	mov.w	sl, #1024	; 0x400
   3043a:	add	r3, pc
   3043c:	str	r3, [sp, #36]	; 0x24
   3043e:	uxtb	r1, r1
   30440:	mov.w	fp, #0
   30444:	subs	r1, #1
   30446:	cmp	r1, #4
   30448:	bhi.w	3032e <pretty_size_snprintf@@Base+0xf2>
   3044c:	add	r3, pc, #8	; (adr r3, 30458 <pretty_size_snprintf@@Base+0x21c>)
   3044e:	ldr.w	r1, [r3, r1, lsl #2]
   30452:	add	r3, r1
   30454:	bx	r3
   30456:	nop
   30458:			; <UNDEFINED> instruction: 0xffa1ffff
   3045c:	mrc2	15, 6, pc, cr3, cr15, {7}
   30460:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   30464:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   30468:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   3046c:	ldr	r3, [pc, #216]	; (30548 <get_label_unmounted@@Base+0x4c>)
   3046e:	movs	r3, r0
   30470:	cmp	r6, #220	; 0xdc
   30472:	movs	r2, r0
   30474:			; <UNDEFINED> instruction: 0xf7550000
   30478:	ldrsh	r2, [r1, r4]
   3047a:	movs	r3, r0
   3047c:	cmp	r6, #83	; 0x53
   3047e:	movs	r2, r0
   30480:	adds	r4, #101	; 0x65
   30482:	movs	r2, r0
   30484:	cmp	r5, #222	; 0xde
   30486:	movs	r2, r0
   30488:	stmia	r1!, {r1, r2, r5, r6}
   3048a:	movs	r0, r0
   3048c:	cmp	r5, #232	; 0xe8
   3048e:	movs	r2, r0
   30490:	lsls	r4, r6, #8
   30492:	movs	r0, r0
   30494:	cmp	r5, #123	; 0x7b
   30496:	movs	r2, r0
   30498:	adds	r3, #85	; 0x55
   3049a:	movs	r2, r0
   3049c:	cmp	r4, #206	; 0xce
   3049e:	movs	r2, r0
   304a0:	stmia	r0!, {r1, r2, r4, r6}
   304a2:	movs	r0, r0
   304a4:	ldrb	r6, [r0, r6]
   304a6:	movs	r3, r0

000304a8 <pretty_size_mode@@Base>:
   304a8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   304ac:	mov	r7, r0
   304ae:	ldr	r0, [pc, #68]	; (304f4 <pretty_size_mode@@Base+0x4c>)
   304b0:	mov	r8, r2
   304b2:	mov	r6, r1
   304b4:	ldr.w	r9, [pc, #64]	; 304f8 <pretty_size_mode@@Base+0x50>
   304b8:	add	r0, pc
   304ba:	blx	8ae4 <__tls_get_addr@plt>
   304be:	movs	r1, #10
   304c0:	add.w	r4, r0, r9
   304c4:	mov	r5, r0
   304c6:	ldr.w	r0, [r0, r9]
   304ca:	adds	r4, #4
   304cc:	add.w	r4, r4, r0, lsl #5
   304d0:	adds	r0, #1
   304d2:	bl	391d4 <btrfs_util_strerror@@Base+0x524>
   304d6:	movs	r3, #32
   304d8:	mov	r2, r4
   304da:	mov	r0, r7
   304dc:	str.w	r1, [r9, r5]
   304e0:	mov	r1, r6
   304e2:	str.w	r8, [sp]
   304e6:	bl	3023c <pretty_size_snprintf@@Base>
   304ea:	mov	r0, r4
   304ec:	add	sp, #12
   304ee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   304f2:	nop
   304f4:	ldr	r2, [pc, #880]	; (30868 <parse_size@@Base+0xcc>)
   304f6:	movs	r3, r0
   304f8:	movs	r0, r0
	...

000304fc <get_label_unmounted@@Base>:
   304fc:	push	{r0, r1, r4, r5, r6, lr}
   304fe:	mov	r5, r0
   30500:	mov	r6, r1
   30502:	bl	301f8 <check_mounted@@Base>
   30506:	subs	r2, r0, #0
   30508:	bge.n	3051a <get_label_unmounted@@Base+0x1e>
   3050a:	ldr	r0, [pc, #68]	; (30550 <get_label_unmounted@@Base+0x54>)
   3050c:	mov	r1, r5
   3050e:	add	r0, pc
   30510:	bl	17424 <__btrfs_error@@Base>
   30514:	mov.w	r0, #4294967295	; 0xffffffff
   30518:	b.n	3054c <get_label_unmounted@@Base+0x50>
   3051a:	mov	r0, r5
   3051c:	movs	r4, #0
   3051e:	movs	r2, #0
   30520:	movs	r3, #0
   30522:	str	r4, [sp, #0]
   30524:	bl	1e294 <open_ctree@@Base>
   30528:	mov	r5, r0
   3052a:	cmp	r0, #0
   3052c:	beq.n	30514 <get_label_unmounted@@Base+0x18>
   3052e:	ldr.w	r3, [r0, #464]	; 0x1d0
   30532:	movs	r2, #255	; 0xff
   30534:	mov	r0, r6
   30536:	ldr.w	r1, [r3, #308]	; 0x134
   3053a:	addw	r1, r1, #299	; 0x12b
   3053e:	bl	2fb28 <__strncpy_null@@Base>
   30542:	ldr.w	r0, [r5, #464]	; 0x1d0
   30546:	bl	1d334 <close_ctree_fs_info@@Base>
   3054a:	mov	r0, r4
   3054c:	add	sp, #8
   3054e:	pop	{r4, r5, r6, pc}
   30550:	cmp	r4, #175	; 0xaf
   30552:	movs	r2, r0

00030554 <get_label_mounted@@Base>:
   30554:	ldr	r2, [pc, #160]	; (305f8 <get_label_mounted@@Base+0xa4>)
   30556:	ldr	r3, [pc, #164]	; (305fc <get_label_mounted@@Base+0xa8>)
   30558:	add	r2, pc
   3055a:	push	{r4, r5, r6, r7, lr}
   3055c:	mov	r5, r1
   3055e:	ldr	r3, [r2, r3]
   30560:	sub	sp, #268	; 0x10c
   30562:	mov.w	r1, #262144	; 0x40000
   30566:	mov	r7, r0
   30568:	ldr	r3, [r3, #0]
   3056a:	str	r3, [sp, #260]	; 0x104
   3056c:	mov.w	r3, #0
   30570:	blx	87f4 <open64@plt>
   30574:	subs	r4, r0, #0
   30576:	bge.n	3059a <get_label_mounted@@Base+0x46>
   30578:	ldr	r0, [pc, #132]	; (30600 <get_label_mounted@@Base+0xac>)
   3057a:	mov	r1, r7
   3057c:	mov.w	r5, #4294967295	; 0xffffffff
   30580:	add	r0, pc
   30582:	bl	17424 <__btrfs_error@@Base>
   30586:	ldr	r2, [pc, #124]	; (30604 <get_label_mounted@@Base+0xb0>)
   30588:	ldr	r3, [pc, #112]	; (305fc <get_label_mounted@@Base+0xa8>)
   3058a:	add	r2, pc
   3058c:	ldr	r3, [r2, r3]
   3058e:	ldr	r2, [r3, #0]
   30590:	ldr	r3, [sp, #260]	; 0x104
   30592:	eors	r2, r3
   30594:	beq.n	305ec <get_label_mounted@@Base+0x98>
   30596:	blx	86b8 <__stack_chk_fail@plt>
   3059a:	add	r6, sp, #4
   3059c:	mov.w	r2, #256	; 0x100
   305a0:	movs	r1, #0
   305a2:	mov	r0, r6
   305a4:	blx	8978 <memset@plt+0x4>
   305a8:	ldr	r1, [pc, #72]	; (305f4 <get_label_mounted@@Base+0xa0>)
   305aa:	mov	r2, r6
   305ac:	mov	r0, r4
   305ae:	blx	8764 <ioctl@plt>
   305b2:	cmp	r0, #0
   305b4:	bge.n	305d8 <get_label_mounted@@Base+0x84>
   305b6:	blx	8938 <__errno_location@plt>
   305ba:	ldr	r3, [r0, #0]
   305bc:	mov	r5, r0
   305be:	cmp	r3, #25
   305c0:	beq.n	305cc <get_label_mounted@@Base+0x78>
   305c2:	ldr	r0, [pc, #68]	; (30608 <get_label_mounted@@Base+0xb4>)
   305c4:	mov	r1, r7
   305c6:	add	r0, pc
   305c8:	bl	17424 <__btrfs_error@@Base>
   305cc:	ldr	r5, [r5, #0]
   305ce:	mov	r0, r4
   305d0:	negs	r5, r5
   305d2:	blx	8b4c <close@plt>
   305d6:	b.n	30586 <get_label_mounted@@Base+0x32>
   305d8:	movs	r2, #255	; 0xff
   305da:	mov	r1, r6
   305dc:	mov	r0, r5
   305de:	movs	r5, #0
   305e0:	bl	2fb28 <__strncpy_null@@Base>
   305e4:	mov	r0, r4
   305e6:	blx	8b4c <close@plt>
   305ea:	b.n	30586 <get_label_mounted@@Base+0x32>
   305ec:	mov	r0, r5
   305ee:	add	sp, #268	; 0x10c
   305f0:	pop	{r4, r5, r6, r7, pc}
   305f2:	nop
   305f4:	str	r4, [sp, #196]	; 0xc4
   305f6:	strh	r0, [r0, #8]
   305f8:	ldr	r0, [pc, #192]	; (306bc <set_label@@Base+0x82>)
   305fa:	movs	r3, r0
   305fc:	lsls	r4, r4, #8
   305fe:	movs	r0, r0
   30600:	cmp	r4, #100	; 0x64
   30602:	movs	r2, r0
   30604:			; <UNDEFINED> instruction: 0x47fe
   30606:	movs	r3, r0
   30608:	cmp	r4, #54	; 0x36
   3060a:	movs	r2, r0

0003060c <get_label@@Base>:
   3060c:	push	{r0, r1, r4, lr}
   3060e:	mov	r4, r0
   30610:	str	r1, [sp, #4]
   30612:	bl	2fa4c <path_is_reg_or_block_device@@Base>
   30616:	ldr	r1, [sp, #4]
   30618:	cmp	r0, #0
   3061a:	bne.n	30628 <get_label@@Base+0x1c>
   3061c:	mov	r0, r4
   3061e:	add	sp, #8
   30620:	ldmia.w	sp!, {r4, lr}
   30624:	b.w	30554 <get_label_mounted@@Base>
   30628:	ble.n	30636 <get_label@@Base+0x2a>
   3062a:	mov	r0, r4
   3062c:	add	sp, #8
   3062e:	ldmia.w	sp!, {r4, lr}
   30632:	b.w	304fc <get_label_unmounted@@Base>
   30636:	add	sp, #8
   30638:	pop	{r4, pc}

0003063a <set_label@@Base>:
   3063a:	ldr	r2, [pc, #312]	; (30774 <set_label@@Base+0x13a>)
   3063c:	ldr	r3, [pc, #312]	; (30778 <set_label@@Base+0x13e>)
   3063e:	add	r2, pc
   30640:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   30644:	mov	r5, r0
   30646:	ldr	r3, [r2, r3]
   30648:	sub	sp, #272	; 0x110
   3064a:	mov	r0, r1
   3064c:	mov	r6, r1
   3064e:	ldr	r3, [r3, #0]
   30650:	str	r3, [sp, #268]	; 0x10c
   30652:	mov.w	r3, #0
   30656:	blx	88f0 <strlen@plt>
   3065a:	cmp	r0, #255	; 0xff
   3065c:	bhi.n	30682 <set_label@@Base+0x48>
   3065e:	mov	r0, r5
   30660:	bl	2fa4c <path_is_reg_or_block_device@@Base>
   30664:	subs	r4, r0, #0
   30666:	bne.n	306e8 <set_label@@Base+0xae>
   30668:	mov.w	r1, #262144	; 0x40000
   3066c:	mov	r0, r5
   3066e:	blx	87f4 <open64@plt>
   30672:	subs	r7, r0, #0
   30674:	bge.n	30690 <set_label@@Base+0x56>
   30676:	ldr	r0, [pc, #260]	; (3077c <set_label@@Base+0x142>)
   30678:	mov	r1, r5
   3067a:	add	r0, pc
   3067c:	bl	17424 <__btrfs_error@@Base>
   30680:	b.n	306c8 <set_label@@Base+0x8e>
   30682:	ldr	r0, [pc, #252]	; (30780 <set_label@@Base+0x146>)
   30684:	movs	r2, #255	; 0xff
   30686:	mov	r1, r6
   30688:	add	r0, pc
   3068a:	bl	17424 <__btrfs_error@@Base>
   3068e:	b.n	306c8 <set_label@@Base+0x8e>
   30690:	add.w	r8, sp, #12
   30694:	mov.w	r2, #256	; 0x100
   30698:	mov	r1, r4
   3069a:	mov	r0, r8
   3069c:	blx	8978 <memset@plt+0x4>
   306a0:	movs	r2, #255	; 0xff
   306a2:	mov	r1, r6
   306a4:	mov	r0, r8
   306a6:	bl	2fb28 <__strncpy_null@@Base>
   306aa:	ldr	r1, [pc, #196]	; (30770 <set_label@@Base+0x136>)
   306ac:	mov	r2, r8
   306ae:	mov	r0, r7
   306b0:	blx	8764 <ioctl@plt>
   306b4:	cmp	r0, #0
   306b6:	bge.n	306ce <set_label@@Base+0x94>
   306b8:	ldr	r0, [pc, #200]	; (30784 <set_label@@Base+0x14a>)
   306ba:	mov	r1, r5
   306bc:	add	r0, pc
   306be:	bl	17424 <__btrfs_error@@Base>
   306c2:	mov	r0, r7
   306c4:	blx	8b4c <close@plt>
   306c8:	mov.w	r4, #4294967295	; 0xffffffff
   306cc:	b.n	306d4 <set_label@@Base+0x9a>
   306ce:	mov	r0, r7
   306d0:	blx	8b4c <close@plt>
   306d4:	ldr	r2, [pc, #176]	; (30788 <set_label@@Base+0x14e>)
   306d6:	ldr	r3, [pc, #160]	; (30778 <set_label@@Base+0x13e>)
   306d8:	add	r2, pc
   306da:	ldr	r3, [r2, r3]
   306dc:	ldr	r2, [r3, #0]
   306de:	ldr	r3, [sp, #268]	; 0x10c
   306e0:	eors	r2, r3
   306e2:	beq.n	30768 <set_label@@Base+0x12e>
   306e4:	blx	86b8 <__stack_chk_fail@plt>
   306e8:	ble.n	306d4 <set_label@@Base+0x9a>
   306ea:	mov	r0, r5
   306ec:	bl	301f8 <check_mounted@@Base>
   306f0:	subs	r4, r0, #0
   306f2:	bge.n	306fe <set_label@@Base+0xc4>
   306f4:	ldr	r0, [pc, #148]	; (3078c <set_label@@Base+0x152>)
   306f6:	mov	r2, r4
   306f8:	mov	r1, r5
   306fa:	add	r0, pc
   306fc:	b.n	3068a <set_label@@Base+0x50>
   306fe:	beq.n	30708 <set_label@@Base+0xce>
   30700:	ldr	r0, [pc, #140]	; (30790 <set_label@@Base+0x156>)
   30702:	mov	r1, r5
   30704:	add	r0, pc
   30706:	b.n	3067c <set_label@@Base+0x42>
   30708:	mov	r0, r5
   3070a:	mov.w	r8, #1
   3070e:	movs	r2, #0
   30710:	movs	r3, #0
   30712:	str.w	r8, [sp]
   30716:	bl	1e294 <open_ctree@@Base>
   3071a:	mov	r5, r0
   3071c:	cmp	r0, #0
   3071e:	beq.n	306c8 <set_label@@Base+0x8e>
   30720:	mov	r1, r8
   30722:	bl	2af24 <btrfs_start_transaction@@Base>
   30726:	cmn.w	r0, #4096	; 0x1000
   3072a:	mov	r7, r0
   3072c:	bls.n	30742 <set_label@@Base+0x108>
   3072e:	ldr	r1, [pc, #100]	; (30794 <set_label@@Base+0x15a>)
   30730:	mov	r3, r8
   30732:	ldr	r0, [pc, #100]	; (30798 <set_label@@Base+0x15e>)
   30734:	movw	r2, #507	; 0x1fb
   30738:	add	r1, pc
   3073a:	adds	r1, #21
   3073c:	add	r0, pc
   3073e:	bl	2fecc <test_issubvolname@@Base+0x17e>
   30742:	ldr.w	r3, [r5, #464]	; 0x1d0
   30746:	movs	r2, #255	; 0xff
   30748:	mov	r1, r6
   3074a:	ldr.w	r0, [r3, #308]	; 0x134
   3074e:	addw	r0, r0, #299	; 0x12b
   30752:	bl	2fb28 <__strncpy_null@@Base>
   30756:	mov	r1, r5
   30758:	mov	r0, r7
   3075a:	bl	2b1a4 <btrfs_commit_transaction@@Base>
   3075e:	ldr.w	r0, [r5, #464]	; 0x1d0
   30762:	bl	1d334 <close_ctree_fs_info@@Base>
   30766:	b.n	306d4 <set_label@@Base+0x9a>
   30768:	mov	r0, r4
   3076a:	add	sp, #272	; 0x110
   3076c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30770:	str	r4, [sp, #200]	; 0xc8
   30772:	asrs	r0, r0
   30774:	bx	r9
   30776:	movs	r3, r0
   30778:	lsls	r4, r4, #8
   3077a:	movs	r0, r0
   3077c:	cmp	r3, #106	; 0x6a
   3077e:	movs	r2, r0
   30780:	cmp	r3, #146	; 0x92
   30782:	movs	r2, r0
   30784:	cmp	r3, #124	; 0x7c
   30786:	movs	r2, r0
   30788:	mov	r8, r6
   3078a:	movs	r3, r0
   3078c:	cmp	r2, #195	; 0xc3
   3078e:	movs	r2, r0
   30790:	cmp	r3, #82	; 0x52
   30792:	movs	r2, r0
   30794:	adds	r0, #69	; 0x45
   30796:	movs	r2, r0
   30798:	stmia	r7!, {r1, r3, r5, r6, r7}
	...

0003079c <parse_size@@Base>:
   3079c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   307a0:	mov	sl, r0
   307a2:	ldr	r2, [pc, #404]	; (30938 <parse_size@@Base+0x19c>)
   307a4:	ldr	r3, [pc, #404]	; (3093c <parse_size@@Base+0x1a0>)
   307a6:	add	r2, pc
   307a8:	ldr	r3, [r2, r3]
   307aa:	ldr	r3, [r3, #0]
   307ac:	str	r3, [sp, #4]
   307ae:	mov.w	r3, #0
   307b2:	cbnz	r0, 307c2 <parse_size@@Base+0x26>
   307b4:	ldr	r0, [pc, #392]	; (30940 <parse_size@@Base+0x1a4>)
   307b6:	add	r0, pc
   307b8:	bl	17424 <__btrfs_error@@Base>
   307bc:	movs	r0, #1
   307be:	blx	88e4 <exit@plt>
   307c2:	ldrb	r3, [r0, #0]
   307c4:	cmp	r3, #45	; 0x2d
   307c6:	bne.n	307d4 <parse_size@@Base+0x38>
   307c8:	mov	r1, r0
   307ca:	ldr	r0, [pc, #376]	; (30944 <parse_size@@Base+0x1a8>)
   307cc:	add	r0, pc
   307ce:	bl	17424 <__btrfs_error@@Base>
   307d2:	b.n	307bc <parse_size@@Base+0x20>
   307d4:	movs	r2, #10
   307d6:	mov	r1, sp
   307d8:	blx	89b8 <strtoull@plt>
   307dc:	mov	r9, r1
   307de:	ldr	r1, [sp, #0]
   307e0:	mov	r8, r0
   307e2:	cmp	r1, sl
   307e4:	bne.n	307ec <parse_size@@Base+0x50>
   307e6:	ldr	r0, [pc, #352]	; (30948 <parse_size@@Base+0x1ac>)
   307e8:	add	r0, pc
   307ea:	b.n	307ce <parse_size@@Base+0x32>
   307ec:	ldrb.w	fp, [r1]
   307f0:	cmp.w	fp, #0
   307f4:	beq.n	30800 <parse_size@@Base+0x64>
   307f6:	ldrb	r1, [r1, #1]
   307f8:	cbz	r1, 30800 <parse_size@@Base+0x64>
   307fa:	ldr	r0, [pc, #336]	; (3094c <parse_size@@Base+0x1b0>)
   307fc:	add	r0, pc
   307fe:	b.n	307ce <parse_size@@Base+0x32>
   30800:	blx	8938 <__errno_location@plt>
   30804:	ldr	r3, [r0, #0]
   30806:	cmp	r3, #34	; 0x22
   30808:	bne.n	3081e <parse_size@@Base+0x82>
   3080a:	cmp.w	r9, #4294967295	; 0xffffffff
   3080e:	it	eq
   30810:	cmpeq.w	r8, #4294967295	; 0xffffffff
   30814:	bne.n	3081e <parse_size@@Base+0x82>
   30816:	ldr	r0, [pc, #312]	; (30950 <parse_size@@Base+0x1b4>)
   30818:	mov	r1, sl
   3081a:	add	r0, pc
   3081c:	b.n	307ce <parse_size@@Base+0x32>
   3081e:	cmp.w	fp, #0
   30822:	beq.n	30920 <parse_size@@Base+0x184>
   30824:	blx	8890 <__ctype_tolower_loc@plt>
   30828:	ldr	r3, [r0, #0]
   3082a:	ldrb.w	r1, [r3, fp, lsl #2]
   3082e:	sub.w	r3, r1, #98	; 0x62
   30832:	cmp	r3, #18
   30834:	bhi.n	3091a <parse_size@@Base+0x17e>
   30836:	tbb	[pc, r3]
   3083a:	strb	r3, [r6, #1]
   3083c:	lsrs	r0, r6, #9
   3083e:	str	r0, [r6, #116]	; 0x74
   30840:	strb	r0, [r6, #1]
   30842:	ldr	r0, [r6, #84]	; 0x54
   30844:	ldr	r0, [r6, #36]	; 0x24
   30846:	strb	r0, [r6, #1]
   30848:	strb	r2, [r4, #1]
   3084a:	strb	r0, [r6, #1]
   3084c:	lsls	r4, r4, #1
   3084e:	mov.w	r2, #1024	; 0x400
   30852:	movs	r3, #0
   30854:	orr.w	r3, r3, r2, lsr #22
   30858:	lsls	r2, r2, #10
   3085a:	lsls	r3, r3, #10
   3085c:	orr.w	r3, r3, r2, lsr #22
   30860:	lsls	r2, r2, #10
   30862:	lsls	r3, r3, #10
   30864:	orr.w	r3, r3, r2, lsr #22
   30868:	lsls	r2, r2, #10
   3086a:	lsls	r3, r3, #10
   3086c:	orr.w	r3, r3, r2, lsr #22
   30870:	lsls	r2, r2, #10
   30872:	lsls	r3, r3, #10
   30874:	orr.w	r3, r3, r2, lsr #22
   30878:	lsls	r2, r2, #10
   3087a:	movs	r1, #0
   3087c:	sub.w	ip, r1, #32
   30880:	rsb	r0, r1, #32
   30884:	lsl.w	r7, r9, r1
   30888:	lsl.w	ip, r8, ip
   3088c:	lsr.w	r0, r8, r0
   30890:	orr.w	r7, r7, ip
   30894:	lsl.w	r6, r8, r1
   30898:	orrs	r7, r0
   3089a:	cmp	r6, #0
   3089c:	sbcs.w	r0, r7, #0
   308a0:	bge.n	30926 <parse_size@@Base+0x18a>
   308a2:	rsb	r0, r1, #64	; 0x40
   308a6:	movs	r1, #0
   308a8:	adds	r1, #1
   308aa:	cmp	r1, #64	; 0x40
   308ac:	beq.n	308dc <parse_size@@Base+0x140>
   308ae:	sub.w	r7, r1, #32
   308b2:	rsb	r6, r1, #32
   308b6:	lsl.w	r5, r3, r1
   308ba:	lsl.w	r7, r2, r7
   308be:	lsr.w	r6, r2, r6
   308c2:	orrs	r5, r7
   308c4:	lsl.w	r4, r2, r1
   308c8:	orrs	r5, r6
   308ca:	cmp	r4, #0
   308cc:	sbcs.w	r6, r5, #0
   308d0:	bge.n	308a8 <parse_size@@Base+0x10c>
   308d2:	rsb	r1, r1, #64	; 0x40
   308d6:	add	r1, r0
   308d8:	cmp	r1, #65	; 0x41
   308da:	bgt.n	30816 <parse_size@@Base+0x7a>
   308dc:	mul.w	r3, r8, r3
   308e0:	mla	r3, r2, r9, r3
   308e4:	umull	r0, r1, r8, r2
   308e8:	ldr	r2, [pc, #104]	; (30954 <parse_size@@Base+0x1b8>)
   308ea:	add	r1, r3
   308ec:	ldr	r3, [pc, #76]	; (3093c <parse_size@@Base+0x1a0>)
   308ee:	add	r2, pc
   308f0:	ldr	r3, [r2, r3]
   308f2:	ldr	r2, [r3, #0]
   308f4:	ldr	r3, [sp, #4]
   308f6:	eors	r2, r3
   308f8:	beq.n	30930 <parse_size@@Base+0x194>
   308fa:	blx	86b8 <__stack_chk_fail@plt>
   308fe:	movs	r2, #1
   30900:	b.n	30852 <parse_size@@Base+0xb6>
   30902:	movs	r2, #1
   30904:	movs	r3, #0
   30906:	b.n	3085a <parse_size@@Base+0xbe>
   30908:	movs	r2, #1
   3090a:	movs	r3, #0
   3090c:	b.n	30862 <parse_size@@Base+0xc6>
   3090e:	movs	r2, #1
   30910:	movs	r3, #0
   30912:	b.n	3086a <parse_size@@Base+0xce>
   30914:	movs	r2, #1
   30916:	movs	r3, #0
   30918:	b.n	30872 <parse_size@@Base+0xd6>
   3091a:	ldr	r0, [pc, #60]	; (30958 <parse_size@@Base+0x1bc>)
   3091c:	add	r0, pc
   3091e:	b.n	307ce <parse_size@@Base+0x32>
   30920:	movs	r2, #1
   30922:	movs	r3, #0
   30924:	b.n	3087a <parse_size@@Base+0xde>
   30926:	adds	r1, #1
   30928:	cmp	r1, #64	; 0x40
   3092a:	bne.n	3087c <parse_size@@Base+0xe0>
   3092c:	movs	r0, #0
   3092e:	b.n	308a6 <parse_size@@Base+0x10a>
   30930:	add	sp, #12
   30932:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30936:	nop
   30938:	cmp	sl, ip
   3093a:	movs	r3, r0
   3093c:	lsls	r4, r4, #8
   3093e:	movs	r0, r0
   30940:	cmp	r2, #198	; 0xc6
   30942:	movs	r2, r0
   30944:	cmp	r2, #196	; 0xc4
   30946:	movs	r2, r0
   30948:	cmp	r2, #205	; 0xcd
   3094a:	movs	r2, r0
   3094c:	cmp	r2, #212	; 0xd4
   3094e:	movs	r2, r0
   30950:	cmp	r2, #239	; 0xef
   30952:	movs	r2, r0
   30954:	add	sl, r3
   30956:	movs	r3, r0
   30958:	cmp	r2, #18
   3095a:	movs	r2, r0

0003095c <parse_qgroupid@@Base>:
   3095c:	ldr	r2, [pc, #220]	; (30a3c <parse_qgroupid@@Base+0xe0>)
   3095e:	movs	r1, #47	; 0x2f
   30960:	ldr	r3, [pc, #220]	; (30a40 <parse_qgroupid@@Base+0xe4>)
   30962:	add	r2, pc
   30964:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   30968:	sub	sp, #24
   3096a:	ldr	r3, [r2, r3]
   3096c:	mov	r4, r0
   3096e:	ldr	r3, [r3, #0]
   30970:	str	r3, [sp, #20]
   30972:	mov.w	r3, #0
   30976:	blx	88fc <strchr@plt>
   3097a:	mov	r6, r0
   3097c:	mov	r0, r4
   3097e:	blx	88f0 <strlen@plt>
   30982:	movs	r3, #0
   30984:	str	r3, [sp, #4]
   30986:	ldrb	r3, [r4, #0]
   30988:	cmp	r3, #47	; 0x2f
   3098a:	add.w	r5, r4, r0
   3098e:	beq.n	309e4 <parse_qgroupid@@Base+0x88>
   30990:	add.w	r8, sp, #4
   30994:	movs	r2, #10
   30996:	mov	r0, r4
   30998:	mov	r1, r8
   3099a:	cbnz	r6, 309be <parse_qgroupid@@Base+0x62>
   3099c:	blx	89b8 <strtoull@plt>
   309a0:	ldr	r3, [sp, #4]
   309a2:	cmp	r3, r5
   309a4:	strd	r0, r1, [sp, #8]
   309a8:	bne.n	309e4 <parse_qgroupid@@Base+0x88>
   309aa:	ldr	r2, [pc, #152]	; (30a44 <parse_qgroupid@@Base+0xe8>)
   309ac:	ldr	r3, [pc, #144]	; (30a40 <parse_qgroupid@@Base+0xe4>)
   309ae:	add	r2, pc
   309b0:	ldr	r3, [r2, r3]
   309b2:	ldr	r2, [r3, #0]
   309b4:	ldr	r3, [sp, #20]
   309b6:	eors	r2, r3
   309b8:	beq.n	30a34 <parse_qgroupid@@Base+0xd8>
   309ba:	blx	86b8 <__stack_chk_fail@plt>
   309be:	blx	89b8 <strtoull@plt>
   309c2:	mov	r7, r0
   309c4:	ldr	r0, [sp, #4]
   309c6:	cmp	r0, r6
   309c8:	bne.n	309e4 <parse_qgroupid@@Base+0x88>
   309ca:	adds	r0, #1
   309cc:	movs	r2, #10
   309ce:	mov	r1, r8
   309d0:	blx	89b8 <strtoull@plt>
   309d4:	ldr	r3, [sp, #4]
   309d6:	cmp	r3, r5
   309d8:	strd	r0, r1, [sp, #8]
   309dc:	bne.n	309e4 <parse_qgroupid@@Base+0x88>
   309de:	orr.w	r1, r1, r7, lsl #16
   309e2:	b.n	309aa <parse_qgroupid@@Base+0x4e>
   309e4:	mov	r0, r4
   309e6:	bl	323a0 <btrfs_util_is_subvolume@@Base>
   309ea:	mov	r1, r0
   309ec:	cbnz	r0, 30a22 <parse_qgroupid@@Base+0xc6>
   309ee:	mov	r0, r4
   309f0:	blx	87f4 <open64@plt>
   309f4:	subs	r6, r0, #0
   309f6:	blt.n	30a22 <parse_qgroupid@@Base+0xc6>
   309f8:	add	r1, sp, #8
   309fa:	bl	1778c <lookup_path_rootid@@Base>
   309fe:	mov	r5, r0
   30a00:	cbz	r0, 30a12 <parse_qgroupid@@Base+0xb6>
   30a02:	blx	8938 <__errno_location@plt>
   30a06:	negs	r3, r5
   30a08:	str	r3, [r0, #0]
   30a0a:	ldr	r0, [pc, #60]	; (30a48 <parse_qgroupid@@Base+0xec>)
   30a0c:	add	r0, pc
   30a0e:	bl	17424 <__btrfs_error@@Base>
   30a12:	mov	r0, r6
   30a14:	blx	8b4c <close@plt>
   30a18:	cmp	r5, #0
   30a1a:	blt.n	30a22 <parse_qgroupid@@Base+0xc6>
   30a1c:	ldrd	r0, r1, [sp, #8]
   30a20:	b.n	309aa <parse_qgroupid@@Base+0x4e>
   30a22:	ldr	r0, [pc, #40]	; (30a4c <parse_qgroupid@@Base+0xf0>)
   30a24:	mov	r1, r4
   30a26:	add	r0, pc
   30a28:	bl	17424 <__btrfs_error@@Base>
   30a2c:	mov.w	r0, #4294967295	; 0xffffffff
   30a30:	blx	88e4 <exit@plt>
   30a34:	add	sp, #24
   30a36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30a3a:	nop
   30a3c:	add	r6, r4
   30a3e:	movs	r3, r0
   30a40:	lsls	r4, r4, #8
   30a42:	movs	r0, r0
   30a44:	mvns	r2, r3
   30a46:	movs	r3, r0
   30a48:	cmp	r1, #63	; 0x3f
   30a4a:	movs	r2, r0
   30a4c:	cmp	r1, #66	; 0x42
   30a4e:	movs	r2, r0

00030a50 <parse_csum_type@@Base>:
   30a50:	ldr	r1, [pc, #100]	; (30ab8 <parse_csum_type@@Base+0x68>)
   30a52:	push	{r4, lr}
   30a54:	add	r1, pc
   30a56:	mov	r4, r0
   30a58:	blx	86f8 <strcasecmp@plt>
   30a5c:	cbz	r0, 30aac <parse_csum_type@@Base+0x5c>
   30a5e:	ldr	r1, [pc, #92]	; (30abc <parse_csum_type@@Base+0x6c>)
   30a60:	mov	r0, r4
   30a62:	add	r1, pc
   30a64:	blx	86f8 <strcasecmp@plt>
   30a68:	cbz	r0, 30aaa <parse_csum_type@@Base+0x5a>
   30a6a:	ldr	r1, [pc, #84]	; (30ac0 <parse_csum_type@@Base+0x70>)
   30a6c:	mov	r0, r4
   30a6e:	add	r1, pc
   30a70:	blx	86f8 <strcasecmp@plt>
   30a74:	cbz	r0, 30aaa <parse_csum_type@@Base+0x5a>
   30a76:	ldr	r1, [pc, #76]	; (30ac4 <parse_csum_type@@Base+0x74>)
   30a78:	mov	r0, r4
   30a7a:	add	r1, pc
   30a7c:	blx	86f8 <strcasecmp@plt>
   30a80:	cbz	r0, 30aae <parse_csum_type@@Base+0x5e>
   30a82:	ldr	r1, [pc, #68]	; (30ac8 <parse_csum_type@@Base+0x78>)
   30a84:	mov	r0, r4
   30a86:	add	r1, pc
   30a88:	blx	86f8 <strcasecmp@plt>
   30a8c:	cbz	r0, 30ab2 <parse_csum_type@@Base+0x62>
   30a8e:	ldr	r1, [pc, #60]	; (30acc <parse_csum_type@@Base+0x7c>)
   30a90:	mov	r0, r4
   30a92:	add	r1, pc
   30a94:	blx	86f8 <strcasecmp@plt>
   30a98:	cbz	r0, 30ab2 <parse_csum_type@@Base+0x62>
   30a9a:	ldr	r0, [pc, #52]	; (30ad0 <parse_csum_type@@Base+0x80>)
   30a9c:	mov	r1, r4
   30a9e:	add	r0, pc
   30aa0:	bl	17424 <__btrfs_error@@Base>
   30aa4:	movs	r0, #1
   30aa6:	blx	88e4 <exit@plt>
   30aaa:	movs	r0, #1
   30aac:	pop	{r4, pc}
   30aae:	movs	r0, #2
   30ab0:	b.n	30aac <parse_csum_type@@Base+0x5c>
   30ab2:	movs	r0, #3
   30ab4:	b.n	30aac <parse_csum_type@@Base+0x5c>
   30ab6:	nop
   30ab8:	cmp	r1, #59	; 0x3b
   30aba:	movs	r2, r0
   30abc:	cmp	r1, #52	; 0x34
   30abe:	movs	r2, r0
   30ac0:	cmp	r1, #49	; 0x31
   30ac2:	movs	r2, r0
   30ac4:	cmp	r1, #44	; 0x2c
   30ac6:	movs	r2, r0
   30ac8:	cmp	r1, #39	; 0x27
   30aca:	movs	r2, r0
   30acc:	cmp	r1, #35	; 0x23
   30ace:	movs	r2, r0
   30ad0:	cmp	r1, #30
   30ad2:	movs	r2, r0

00030ad4 <open_file_or_dir3@@Base>:
   30ad4:	push	{r4, r5, r6, lr}
   30ad6:	mov	r6, r2
   30ad8:	ldr	r2, [pc, #136]	; (30b64 <open_file_or_dir3@@Base+0x90>)
   30ada:	sub	sp, #112	; 0x70
   30adc:	ldr	r3, [pc, #136]	; (30b68 <open_file_or_dir3@@Base+0x94>)
   30ade:	mov	r4, r1
   30ae0:	add	r2, pc
   30ae2:	mov	r1, sp
   30ae4:	mov	r5, r0
   30ae6:	ldr	r3, [r2, r3]
   30ae8:	ldr	r3, [r3, #0]
   30aea:	str	r3, [sp, #108]	; 0x6c
   30aec:	mov.w	r3, #0
   30af0:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   30af4:	cmp	r0, #0
   30af6:	bge.n	30b10 <open_file_or_dir3@@Base+0x3c>
   30af8:	mov.w	r0, #4294967295	; 0xffffffff
   30afc:	ldr	r2, [pc, #108]	; (30b6c <open_file_or_dir3@@Base+0x98>)
   30afe:	ldr	r3, [pc, #104]	; (30b68 <open_file_or_dir3@@Base+0x94>)
   30b00:	add	r2, pc
   30b02:	ldr	r3, [r2, r3]
   30b04:	ldr	r2, [r3, #0]
   30b06:	ldr	r3, [sp, #108]	; 0x6c
   30b08:	eors	r2, r3
   30b0a:	beq.n	30b5e <open_file_or_dir3@@Base+0x8a>
   30b0c:	blx	86b8 <__stack_chk_fail@plt>
   30b10:	ldr	r3, [sp, #16]
   30b12:	and.w	r2, r3, #61440	; 0xf000
   30b16:	cmp.w	r2, #16384	; 0x4000
   30b1a:	bne.n	30b40 <open_file_or_dir3@@Base+0x6c>
   30b1c:	mov	r0, r5
   30b1e:	blx	87e8 <opendir@plt>
   30b22:	str	r0, [r4, #0]
   30b24:	cmp	r0, #0
   30b26:	beq.n	30af8 <open_file_or_dir3@@Base+0x24>
   30b28:	blx	8a9c <dirfd@plt>
   30b2c:	cmp	r0, #0
   30b2e:	bge.n	30afc <open_file_or_dir3@@Base+0x28>
   30b30:	ldr	r0, [r4, #0]
   30b32:	cmp	r0, #0
   30b34:	beq.n	30af8 <open_file_or_dir3@@Base+0x24>
   30b36:	blx	8b64 <closedir@plt>
   30b3a:	movs	r3, #0
   30b3c:	str	r3, [r4, #0]
   30b3e:	b.n	30af8 <open_file_or_dir3@@Base+0x24>
   30b40:	and.w	r3, r3, #53248	; 0xd000
   30b44:	cmp.w	r3, #32768	; 0x8000
   30b48:	bne.n	30b54 <open_file_or_dir3@@Base+0x80>
   30b4a:	mov	r1, r6
   30b4c:	mov	r0, r5
   30b4e:	blx	892c <__open64_2@plt>
   30b52:	b.n	30b2c <open_file_or_dir3@@Base+0x58>
   30b54:	blx	8938 <__errno_location@plt>
   30b58:	movs	r3, #22
   30b5a:	str	r3, [r0, #0]
   30b5c:	b.n	30af8 <open_file_or_dir3@@Base+0x24>
   30b5e:	add	sp, #112	; 0x70
   30b60:	pop	{r4, r5, r6, pc}
   30b62:	nop
   30b64:	cmp	r0, r5
   30b66:	movs	r3, r0
   30b68:	lsls	r4, r4, #8
   30b6a:	movs	r0, r0
   30b6c:	cmp	r0, r1
   30b6e:	movs	r3, r0

00030b70 <open_file_or_dir@@Base>:
   30b70:	movs	r2, #2
   30b72:	b.w	30ad4 <open_file_or_dir3@@Base>

00030b76 <btrfs_open@@Base>:
   30b76:	push	{r4, r5, r6, r7, lr}
   30b78:	mov	r6, r2
   30b7a:	ldr	r2, [pc, #172]	; (30c28 <btrfs_open@@Base+0xb2>)
   30b7c:	mov	r7, r3
   30b7e:	ldr	r3, [pc, #172]	; (30c2c <btrfs_open@@Base+0xb6>)
   30b80:	sub	sp, #204	; 0xcc
   30b82:	add	r2, pc
   30b84:	mov	r5, r1
   30b86:	add	r1, sp, #104	; 0x68
   30b88:	mov	r4, r0
   30b8a:	ldr	r3, [r2, r3]
   30b8c:	ldr	r3, [r3, #0]
   30b8e:	str	r3, [sp, #196]	; 0xc4
   30b90:	mov.w	r3, #0
   30b94:	blx	8a74 <statfs64@plt>
   30b98:	cbz	r0, 30bbe <btrfs_open@@Base+0x48>
   30b9a:	ldr	r1, [pc, #148]	; (30c30 <btrfs_open@@Base+0xba>)
   30b9c:	mov	r2, r4
   30b9e:	mov	r0, r6
   30ba0:	mov.w	r5, #4294967295	; 0xffffffff
   30ba4:	add	r1, pc
   30ba6:	bl	1751c <__btrfs_error_on@@Base>
   30baa:	ldr	r2, [pc, #136]	; (30c34 <btrfs_open@@Base+0xbe>)
   30bac:	ldr	r3, [pc, #124]	; (30c2c <btrfs_open@@Base+0xb6>)
   30bae:	add	r2, pc
   30bb0:	ldr	r3, [r2, r3]
   30bb2:	ldr	r2, [r3, #0]
   30bb4:	ldr	r3, [sp, #196]	; 0xc4
   30bb6:	eors	r2, r3
   30bb8:	beq.n	30c1e <btrfs_open@@Base+0xa8>
   30bba:	blx	86b8 <__stack_chk_fail@plt>
   30bbe:	ldr	r3, [pc, #100]	; (30c24 <btrfs_open@@Base+0xae>)
   30bc0:	ldr	r2, [sp, #104]	; 0x68
   30bc2:	cmp	r2, r3
   30bc4:	beq.n	30bd8 <btrfs_open@@Base+0x62>
   30bc6:	ldr	r1, [pc, #112]	; (30c38 <btrfs_open@@Base+0xc2>)
   30bc8:	mov	r2, r4
   30bca:	mov	r0, r6
   30bcc:	mvn.w	r5, #1
   30bd0:	add	r1, pc
   30bd2:	bl	1751c <__btrfs_error_on@@Base>
   30bd6:	b.n	30baa <btrfs_open@@Base+0x34>
   30bd8:	mov	r1, sp
   30bda:	mov	r0, r4
   30bdc:	bl	39660 <__libc_csu_fini@@Base+0x1c>
   30be0:	cmp	r0, #0
   30be2:	bne.n	30b9a <btrfs_open@@Base+0x24>
   30be4:	cbz	r7, 30c04 <btrfs_open@@Base+0x8e>
   30be6:	ldr	r3, [sp, #16]
   30be8:	and.w	r3, r3, #61440	; 0xf000
   30bec:	cmp.w	r3, #16384	; 0x4000
   30bf0:	beq.n	30c04 <btrfs_open@@Base+0x8e>
   30bf2:	ldr	r1, [pc, #72]	; (30c3c <btrfs_open@@Base+0xc6>)
   30bf4:	mov	r2, r4
   30bf6:	mov	r0, r6
   30bf8:	mvn.w	r5, #2
   30bfc:	add	r1, pc
   30bfe:	bl	1751c <__btrfs_error_on@@Base>
   30c02:	b.n	30baa <btrfs_open@@Base+0x34>
   30c04:	mov	r1, r5
   30c06:	mov	r0, r4
   30c08:	bl	30b70 <open_file_or_dir@@Base>
   30c0c:	subs	r5, r0, #0
   30c0e:	bge.n	30baa <btrfs_open@@Base+0x34>
   30c10:	ldr	r1, [pc, #44]	; (30c40 <btrfs_open@@Base+0xca>)
   30c12:	mov	r2, r4
   30c14:	mov	r0, r6
   30c16:	add	r1, pc
   30c18:	bl	1751c <__btrfs_error_on@@Base>
   30c1c:	b.n	30baa <btrfs_open@@Base+0x34>
   30c1e:	mov	r0, r5
   30c20:	add	sp, #204	; 0xcc
   30c22:	pop	{r4, r5, r6, r7, pc}
   30c24:	ldr	r6, [r7, #0]
   30c26:	str	r1, [sp, #140]	; 0x8c
   30c28:	tst	r6, r0
   30c2a:	movs	r3, r0
   30c2c:	lsls	r4, r4, #8
   30c2e:	movs	r0, r0
   30c30:	cmp	r0, #45	; 0x2d
   30c32:	movs	r2, r0
   30c34:	rors	r2, r3
   30c36:	movs	r3, r0
   30c38:	cmp	r0, #24
   30c3a:	movs	r2, r0
   30c3c:	cmp	r0, #7
   30c3e:	movs	r2, r0
   30c40:	movs	r7, #187	; 0xbb
   30c42:	movs	r2, r0

00030c44 <btrfs_open_dir@@Base>:
   30c44:	movs	r3, #1
   30c46:	b.w	30b76 <btrfs_open@@Base>

00030c4a <btrfs_open_file_or_dir@@Base>:
   30c4a:	movs	r3, #0
   30c4c:	b.w	30b76 <btrfs_open@@Base>

00030c50 <open_path_or_dev_mnt@@Base>:
   30c50:	push	{r4, r5, r6, r7, lr}
   30c52:	mov	r4, r1
   30c54:	ldr	r1, [pc, #156]	; (30cf4 <open_path_or_dev_mnt@@Base+0xa4>)
   30c56:	mov	r6, r2
   30c58:	ldr	r2, [pc, #156]	; (30cf8 <open_path_or_dev_mnt@@Base+0xa8>)
   30c5a:	sub.w	sp, sp, #4096	; 0x1000
   30c5e:	add	r1, pc
   30c60:	sub	sp, #12
   30c62:	add.w	r3, sp, #4096	; 0x1000
   30c66:	mov	r5, r0
   30c68:	ldr	r2, [r1, r2]
   30c6a:	adds	r3, #4
   30c6c:	ldr	r2, [r2, #0]
   30c6e:	str	r2, [r3, #0]
   30c70:	mov.w	r2, #0
   30c74:	bl	2f8f4 <path_is_block_device@@Base>
   30c78:	cbz	r0, 30cda <open_path_or_dev_mnt@@Base+0x8a>
   30c7a:	add	r7, sp, #4
   30c7c:	mov.w	r2, #4096	; 0x1000
   30c80:	mov	r0, r5
   30c82:	mov	r1, r7
   30c84:	bl	30168 <get_btrfs_mount@@Base>
   30c88:	cmp	r0, #0
   30c8a:	bge.n	30cbe <open_path_or_dev_mnt@@Base+0x6e>
   30c8c:	ldr	r1, [pc, #108]	; (30cfc <open_path_or_dev_mnt@@Base+0xac>)
   30c8e:	mov	r2, r5
   30c90:	mov	r0, r6
   30c92:	mov.w	r4, #4294967295	; 0xffffffff
   30c96:	add	r1, pc
   30c98:	bl	1751c <__btrfs_error_on@@Base>
   30c9c:	blx	8938 <__errno_location@plt>
   30ca0:	movs	r3, #22
   30ca2:	str	r3, [r0, #0]
   30ca4:	ldr	r1, [pc, #88]	; (30d00 <open_path_or_dev_mnt@@Base+0xb0>)
   30ca6:	add.w	r3, sp, #4096	; 0x1000
   30caa:	ldr	r2, [pc, #76]	; (30cf8 <open_path_or_dev_mnt@@Base+0xa8>)
   30cac:	adds	r3, #4
   30cae:	add	r1, pc
   30cb0:	ldr	r2, [r1, r2]
   30cb2:	ldr	r1, [r2, #0]
   30cb4:	ldr	r2, [r3, #0]
   30cb6:	eors	r1, r2
   30cb8:	beq.n	30ce8 <open_path_or_dev_mnt@@Base+0x98>
   30cba:	blx	86b8 <__stack_chk_fail@plt>
   30cbe:	mov	r1, r4
   30cc0:	mov	r0, r7
   30cc2:	bl	30b70 <open_file_or_dir@@Base>
   30cc6:	mov	r4, r0
   30cc8:	cbz	r6, 30ccc <open_path_or_dev_mnt@@Base+0x7c>
   30cca:	lsrs	r6, r0, #31
   30ccc:	ldr	r1, [pc, #52]	; (30d04 <open_path_or_dev_mnt@@Base+0xb4>)
   30cce:	mov	r2, r5
   30cd0:	mov	r0, r6
   30cd2:	add	r1, pc
   30cd4:	bl	1751c <__btrfs_error_on@@Base>
   30cd8:	b.n	30ca4 <open_path_or_dev_mnt@@Base+0x54>
   30cda:	mov	r1, r4
   30cdc:	movs	r2, #1
   30cde:	mov	r0, r5
   30ce0:	bl	30c44 <btrfs_open_dir@@Base>
   30ce4:	mov	r4, r0
   30ce6:	b.n	30ca4 <open_path_or_dev_mnt@@Base+0x54>
   30ce8:	mov	r0, r4
   30cea:	add.w	sp, sp, #4096	; 0x1000
   30cee:	add	sp, #12
   30cf0:	pop	{r4, r5, r6, r7, pc}
   30cf2:	nop
   30cf4:	asrs	r2, r5
   30cf6:	movs	r3, r0
   30cf8:	lsls	r4, r4, #8
   30cfa:	movs	r0, r0
   30cfc:	movs	r7, #129	; 0x81
   30cfe:	movs	r2, r0
   30d00:	lsrs	r2, r3
   30d02:	movs	r3, r0
   30d04:	movs	r7, #104	; 0x68
   30d06:	movs	r2, r0

00030d08 <close_file_or_dir@@Base>:
   30d08:	push	{r3, r4, r5, r6, r7, lr}
   30d0a:	mov	r5, r0
   30d0c:	mov	r6, r1
   30d0e:	blx	8938 <__errno_location@plt>
   30d12:	ldr	r7, [r0, #0]
   30d14:	mov	r4, r0
   30d16:	cbz	r6, 30d22 <close_file_or_dir@@Base+0x1a>
   30d18:	mov	r0, r6
   30d1a:	blx	8b64 <closedir@plt>
   30d1e:	str	r7, [r4, #0]
   30d20:	pop	{r3, r4, r5, r6, r7, pc}
   30d22:	cmp	r5, #0
   30d24:	blt.n	30d1e <close_file_or_dir@@Base+0x16>
   30d26:	mov	r0, r5
   30d28:	blx	8b4c <close@plt>
   30d2c:	b.n	30d1e <close_file_or_dir@@Base+0x16>

00030d2e <get_device_info@@Base>:
   30d2e:	push	{r4, lr}
   30d30:	mov	r4, r0
   30d32:	ldr	r0, [sp, #8]
   30d34:	movs	r1, #0
   30d36:	strd	r2, r3, [r0], #8
   30d3a:	movs	r2, #16
   30d3c:	blx	8978 <memset@plt+0x4>
   30d40:	ldr	r2, [sp, #8]
   30d42:	ldr	r1, [pc, #24]	; (30d5c <get_device_info@@Base+0x2e>)
   30d44:	mov	r0, r4
   30d46:	blx	8764 <ioctl@plt>
   30d4a:	cmp	r0, #0
   30d4c:	bge.n	30d58 <get_device_info@@Base+0x2a>
   30d4e:	blx	8938 <__errno_location@plt>
   30d52:	ldr	r0, [r0, #0]
   30d54:	negs	r0, r0
   30d56:	pop	{r4, pc}
   30d58:	movs	r0, #0
   30d5a:	b.n	30d56 <get_device_info@@Base+0x28>
   30d5c:	str	r4, [sp, #120]	; 0x78
   30d5e:	beq.n	30d62 <get_df@@Base+0x2>

00030d60 <get_df@@Base>:
   30d60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   30d64:	mov	r5, r0
   30d66:	movs	r0, #16
   30d68:	mov	sl, r1
   30d6a:	blx	8820 <malloc@plt+0x4>
   30d6e:	mov	r4, r0
   30d70:	cbnz	r0, 30d7a <get_df@@Base+0x1a>
   30d72:	mvn.w	r0, #11
   30d76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   30d7a:	mov.w	r8, #0
   30d7e:	mov.w	r9, #0
   30d82:	mov	r2, r0
   30d84:	strd	r8, r9, [r0]
   30d88:	strd	r8, r9, [r0, #8]
   30d8c:	mov	r0, r5
   30d8e:	ldr	r1, [pc, #120]	; (30e08 <get_df@@Base+0xa8>)
   30d90:	blx	8764 <ioctl@plt>
   30d94:	cmp	r0, #0
   30d96:	bge.n	30db0 <get_df@@Base+0x50>
   30d98:	ldr	r0, [pc, #112]	; (30e0c <get_df@@Base+0xac>)
   30d9a:	add	r0, pc
   30d9c:	bl	17424 <__btrfs_error@@Base>
   30da0:	mov	r0, r4
   30da2:	blx	85dc <free@plt+0x4>
   30da6:	blx	8938 <__errno_location@plt>
   30daa:	ldr	r0, [r0, #0]
   30dac:	negs	r0, r0
   30dae:	b.n	30d76 <get_df@@Base+0x16>
   30db0:	ldrd	r6, r7, [r4, #8]
   30db4:	mov	r0, r4
   30db6:	orrs.w	r3, r6, r7
   30dba:	bne.n	30dc6 <get_df@@Base+0x66>
   30dbc:	blx	85dc <free@plt+0x4>
   30dc0:	mvn.w	r0, #1
   30dc4:	b.n	30d76 <get_df@@Base+0x16>
   30dc6:	blx	85dc <free@plt+0x4>
   30dca:	movs	r0, #24
   30dcc:	muls	r0, r6
   30dce:	adds	r0, #16
   30dd0:	blx	8820 <malloc@plt+0x4>
   30dd4:	mov	r4, r0
   30dd6:	cmp	r0, #0
   30dd8:	beq.n	30d72 <get_df@@Base+0x12>
   30dda:	mov	r2, r0
   30ddc:	strd	r6, r7, [r0]
   30de0:	strd	r8, r9, [r0, #8]
   30de4:	mov	r0, r5
   30de6:	ldr	r1, [pc, #32]	; (30e08 <get_df@@Base+0xa8>)
   30de8:	blx	8764 <ioctl@plt>
   30dec:	cmp	r0, #0
   30dee:	bge.n	30dfe <get_df@@Base+0x9e>
   30df0:	ldr	r0, [pc, #28]	; (30e10 <get_df@@Base+0xb0>)
   30df2:	mov	r2, r6
   30df4:	mov	r3, r7
   30df6:	add	r0, pc
   30df8:	bl	17424 <__btrfs_error@@Base>
   30dfc:	b.n	30da0 <get_df@@Base+0x40>
   30dfe:	movs	r0, #0
   30e00:	str.w	r4, [sl]
   30e04:	b.n	30d76 <get_df@@Base+0x16>
   30e06:	nop
   30e08:	str	r4, [sp, #80]	; 0x50
   30e0a:	stmia	r0!, {r4}
   30e0c:	movs	r6, #182	; 0xb6
   30e0e:	movs	r2, r0
   30e10:	movs	r6, #116	; 0x74
   30e12:	movs	r2, r0

00030e14 <get_fs_info@@Base>:
   30e14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30e18:	sub.w	sp, sp, #12288	; 0x3000
   30e1c:	sub	sp, #44	; 0x2c
   30e1e:	mov	r5, r1
   30e20:	ldr	r1, [pc, #736]	; (31104 <get_fs_info@@Base+0x2f0>)
   30e22:	add.w	r3, sp, #12288	; 0x3000
   30e26:	str	r2, [sp, #20]
   30e28:	adds	r3, #36	; 0x24
   30e2a:	ldr	r2, [pc, #732]	; (31108 <get_fs_info@@Base+0x2f4>)
   30e2c:	add	r1, pc
   30e2e:	add	r7, sp, #40	; 0x28
   30e30:	mov.w	r9, #0
   30e34:	mov	r8, r0
   30e36:	mov	r0, r5
   30e38:	ldr	r2, [r1, r2]
   30e3a:	mov	r1, r9
   30e3c:	ldr	r2, [r2, #0]
   30e3e:	str	r2, [r3, #0]
   30e40:	mov.w	r2, #0
   30e44:	mov.w	r2, #1024	; 0x400
   30e48:	sub.w	r3, r7, #16
   30e4c:	strd	r9, r9, [r7, #-16]
   30e50:	str	r3, [sp, #12]
   30e52:	blx	8978 <memset@plt+0x4>
   30e56:	mov	r0, r8
   30e58:	bl	2f8f4 <path_is_block_device@@Base>
   30e5c:	cmp	r0, #1
   30e5e:	bne.n	30f3c <get_fs_info@@Base+0x128>
   30e60:	mov	r1, r9
   30e62:	mov	r0, r8
   30e64:	blx	87f4 <open64@plt>
   30e68:	subs	r6, r0, #0
   30e6a:	bge.n	30ea4 <get_fs_info@@Base+0x90>
   30e6c:	blx	8938 <__errno_location@plt>
   30e70:	mov	r1, r8
   30e72:	ldr	r4, [r0, #0]
   30e74:	ldr	r0, [pc, #660]	; (3110c <get_fs_info@@Base+0x2f8>)
   30e76:	negs	r4, r4
   30e78:	add	r0, pc
   30e7a:	bl	17424 <__btrfs_error@@Base>
   30e7e:	ldr.w	r1, [r7, #-12]
   30e82:	mov	r0, r6
   30e84:	bl	30d08 <close_file_or_dir@@Base>
   30e88:	ldr	r1, [pc, #644]	; (31110 <get_fs_info@@Base+0x2fc>)
   30e8a:	ldr	r2, [pc, #636]	; (31108 <get_fs_info@@Base+0x2f4>)
   30e8c:	add.w	r3, sp, #12288	; 0x3000
   30e90:	add	r1, pc
   30e92:	adds	r3, #36	; 0x24
   30e94:	ldr	r2, [r1, r2]
   30e96:	ldr	r1, [r2, #0]
   30e98:	ldr	r2, [r3, #0]
   30e9a:	eors	r1, r2
   30e9c:	beq.w	310ee <get_fs_info@@Base+0x2da>
   30ea0:	blx	86b8 <__stack_chk_fail@plt>
   30ea4:	add.w	r3, sp, #4128	; 0x1020
   30ea8:	mov	r1, r8
   30eaa:	adds	r3, #4
   30eac:	str	r3, [sp, #16]
   30eae:	ldr	r3, [sp, #12]
   30eb0:	ldr	r2, [sp, #16]
   30eb2:	str.w	r9, [sp, #4]
   30eb6:	str	r3, [sp, #0]
   30eb8:	mov.w	r3, #4096	; 0x1000
   30ebc:	bl	3001c <check_mounted_where@@Base>
   30ec0:	subs	r4, r0, #0
   30ec2:	beq.n	30f30 <get_fs_info@@Base+0x11c>
   30ec4:	blt.n	30e7e <get_fs_info@@Base+0x6a>
   30ec6:	add.w	r8, sp, #8192	; 0x2000
   30eca:	movs	r2, #1
   30ecc:	add.w	r8, r8, #36	; 0x24
   30ed0:	movs	r3, #0
   30ed2:	mov	r0, r6
   30ed4:	strd	r2, r3, [r5, #8]
   30ed8:	mov	r1, r8
   30eda:	mov.w	r2, #65536	; 0x10000
   30ede:	movs	r3, #0
   30ee0:	str.w	r9, [sp]
   30ee4:	bl	1cc70 <btrfs_read_dev_super@@Base>
   30ee8:	subs	r4, r0, #0
   30eea:	blt.n	30f36 <get_fs_info@@Base+0x122>
   30eec:	ldr	r2, [sp, #12]
   30eee:	mov	r3, r5
   30ef0:	ldr.w	sl, [r8, #201]	; 0xc9
   30ef4:	ldr.w	fp, [r8, #205]	; 0xcd
   30ef8:	ldr	r2, [r2, #0]
   30efa:	add.w	r1, r2, #16
   30efe:	strd	sl, fp, [r3], #16
   30f02:	ldr.w	r0, [r2], #4
   30f06:	cmp	r2, r1
   30f08:	str.w	r0, [r3], #4
   30f0c:	bne.n	30f02 <get_fs_info@@Base+0xee>
   30f0e:	mov	r0, r6
   30f10:	blx	8b4c <close@plt>
   30f14:	ldr.w	r8, [sp, #16]
   30f18:	sub.w	r1, r7, #12
   30f1c:	mov	r0, r8
   30f1e:	bl	30b70 <open_file_or_dir@@Base>
   30f22:	subs	r6, r0, #0
   30f24:	bge.n	30f48 <get_fs_info@@Base+0x134>
   30f26:	blx	8938 <__errno_location@plt>
   30f2a:	ldr	r4, [r0, #0]
   30f2c:	negs	r4, r4
   30f2e:	b.n	30e7e <get_fs_info@@Base+0x6a>
   30f30:	mvn.w	r4, #21
   30f34:	b.n	30e7e <get_fs_info@@Base+0x6a>
   30f36:	mvn.w	r4, #4
   30f3a:	b.n	30e7e <get_fs_info@@Base+0x6a>
   30f3c:	mov.w	sl, #0
   30f40:	mov.w	fp, #0
   30f44:	mov	r4, r9
   30f46:	b.n	30f18 <get_fs_info@@Base+0x104>
   30f48:	ldrd	r2, r3, [r5, #8]
   30f4c:	cmp	r3, #0
   30f4e:	it	eq
   30f50:	cmpeq	r2, #1
   30f52:	beq.w	310b8 <get_fs_info@@Base+0x2a4>
   30f56:	ldr	r1, [pc, #420]	; (310fc <get_fs_info@@Base+0x2e8>)
   30f58:	mov	r2, r5
   30f5a:	blx	8764 <ioctl@plt>
   30f5e:	cmp	r0, #0
   30f60:	blt.n	30f26 <get_fs_info@@Base+0x112>
   30f62:	mov	r8, r7
   30f64:	movs	r2, #3
   30f66:	movs	r3, #0
   30f68:	strd	r2, r3, [r7, #-8]
   30f6c:	movs	r2, #1
   30f6e:	movs	r3, #0
   30f70:	movs	r4, #216	; 0xd8
   30f72:	strd	r2, r3, [r8], #-8
   30f76:	mov	r9, r3
   30f78:	strd	r4, r4, [r8, #56]	; 0x38
   30f7c:	movs	r4, #30
   30f7e:	str.w	r4, [r8, #64]	; 0x40
   30f82:	mov	r4, r2
   30f84:	movs	r0, #0
   30f86:	movs	r1, #0
   30f88:	strd	r2, r3, [r8, #16]
   30f8c:	strd	r0, r1, [r5, #8]
   30f90:	strd	r0, r1, [r8, #40]	; 0x28
   30f94:	mov.w	r0, #4294967295	; 0xffffffff
   30f98:	mov.w	r1, #4294967295	; 0xffffffff
   30f9c:	strd	r0, r1, [r8, #48]	; 0x30
   30fa0:	strd	r0, r1, [r8, #32]
   30fa4:	ldr	r1, [pc, #344]	; (31100 <get_fs_info@@Base+0x2ec>)
   30fa6:	mov	r2, r8
   30fa8:	mov	r0, r6
   30faa:	strd	r4, r9, [r8, #24]
   30fae:	blx	8764 <ioctl@plt>
   30fb2:	cmp	r0, #0
   30fb4:	bge.n	31066 <get_fs_info@@Base+0x252>
   30fb6:	blx	8938 <__errno_location@plt>
   30fba:	ldr	r3, [r0, #0]
   30fbc:	negs	r4, r3
   30fbe:	cmp	r3, #0
   30fc0:	bne.w	30e7e <get_fs_info@@Base+0x6a>
   30fc4:	movs	r2, #0
   30fc6:	movs	r3, #0
   30fc8:	mov	r0, r6
   30fca:	str.w	r8, [sp]
   30fce:	bl	30d2e <get_device_info@@Base>
   30fd2:	mov	r4, r0
   30fd4:	cmp	r0, #0
   30fd6:	bne.n	310b8 <get_fs_info@@Base+0x2a4>
   30fd8:	ldrd	r3, r2, [r5, #8]
   30fdc:	mov.w	r8, #1
   30fe0:	adds	r3, #1
   30fe2:	adc.w	r2, r2, #0
   30fe6:	strd	r3, r2, [r5, #8]
   30fea:	orrs.w	r3, sl, fp
   30fee:	itt	eq
   30ff0:	moveq.w	sl, #1
   30ff4:	moveq.w	fp, #0
   30ff8:	ldrd	r0, r1, [r5, #8]
   30ffc:	orrs.w	r3, r0, r1
   31000:	beq.w	30e7e <get_fs_info@@Base+0x6a>
   31004:	lsls	r0, r0, #12
   31006:	blx	8820 <malloc@plt+0x4>
   3100a:	ldr	r3, [sp, #20]
   3100c:	mov	r9, r0
   3100e:	str	r0, [r3, #0]
   31010:	cmp	r0, #0
   31012:	beq.n	30f26 <get_fs_info@@Base+0x112>
   31014:	cmp.w	r8, #0
   31018:	beq.n	31026 <get_fs_info@@Base+0x212>
   3101a:	sub.w	r1, r7, #8
   3101e:	mov.w	r2, #4096	; 0x1000
   31022:	blx	8628 <memcpy@plt+0x4>
   31026:	ldrd	r2, r3, [r5]
   3102a:	ldrd	r0, r1, [r5, #8]
   3102e:	cmp	r3, fp
   31030:	it	eq
   31032:	cmpeq	r2, sl
   31034:	bcc.n	31042 <get_fs_info@@Base+0x22e>
   31036:	mov	r2, r8
   31038:	asrs	r3, r2, #31
   3103a:	cmp	r3, r1
   3103c:	it	eq
   3103e:	cmpeq	r8, r0
   31040:	bcc.n	310be <get_fs_info@@Base+0x2aa>
   31042:	cmp	r1, #0
   31044:	it	eq
   31046:	cmpeq	r0, #1
   31048:	beq.w	30e7e <get_fs_info@@Base+0x6a>
   3104c:	cmp.w	r8, #0
   31050:	bne.n	310ea <get_fs_info@@Base+0x2d6>
   31052:	ldr	r1, [pc, #192]	; (31114 <get_fs_info@@Base+0x300>)
   31054:	movs	r3, #1
   31056:	ldr	r0, [pc, #192]	; (31118 <get_fs_info@@Base+0x304>)
   31058:	movw	r2, #1091	; 0x443
   3105c:	add	r1, pc
   3105e:	adds	r1, #41	; 0x29
   31060:	add	r0, pc
   31062:	bl	2fecc <test_issubvolname@@Base+0x17e>
   31066:	ldrd	r2, r3, [r5, #8]
   3106a:	ldr.w	r1, [r8, #64]	; 0x40
   3106e:	adds	r2, r2, r1
   31070:	adc.w	r3, r3, #0
   31074:	cmp	r1, #30
   31076:	strd	r2, r3, [r5, #8]
   3107a:	bne.n	3108c <get_fs_info@@Base+0x278>
   3107c:	ldr.w	r4, [r8, #3906]	; 0xf42
   31080:	ldr.w	r9, [r8, #3910]	; 0xf46
   31084:	adds	r4, #1
   31086:	adc.w	r9, r9, #0
   3108a:	b.n	30fa4 <get_fs_info@@Base+0x190>
   3108c:	cbnz	r1, 3109c <get_fs_info@@Base+0x288>
   3108e:	adds.w	r4, r4, #4294967295	; 0xffffffff
   31092:	str	r4, [r5, #0]
   31094:	adc.w	r3, r9, #4294967295	; 0xffffffff
   31098:	str	r3, [r5, #4]
   3109a:	b.n	30fc4 <get_fs_info@@Base+0x1b0>
   3109c:	add.w	r2, sp, #12288	; 0x3000
   310a0:	subs	r1, #1
   310a2:	adds	r2, #40	; 0x28
   310a4:	movs	r3, #130	; 0x82
   310a6:	mla	r1, r3, r1, r2
   310aa:	sub.w	r1, r1, #12160	; 0x2f80
   310ae:	ldr.w	r2, [r1], #-32
   310b2:	ldr	r3, [r1, #36]	; 0x24
   310b4:	str	r2, [r5, #0]
   310b6:	b.n	31098 <get_fs_info@@Base+0x284>
   310b8:	mov.w	r8, #0
   310bc:	b.n	30ff8 <get_fs_info@@Base+0x1e4>
   310be:	add.w	r3, r9, r8, lsl #12
   310c2:	mov	r2, sl
   310c4:	str	r3, [sp, #0]
   310c6:	mov	r0, r6
   310c8:	mov	r3, fp
   310ca:	bl	30d2e <get_device_info@@Base>
   310ce:	cmn.w	r0, #19
   310d2:	mov	r4, r0
   310d4:	beq.n	310e0 <get_fs_info@@Base+0x2cc>
   310d6:	cmp	r0, #0
   310d8:	bne.w	30e7e <get_fs_info@@Base+0x6a>
   310dc:	add.w	r8, r8, #1
   310e0:	adds.w	sl, sl, #1
   310e4:	adc.w	fp, fp, #0
   310e8:	b.n	31026 <get_fs_info@@Base+0x212>
   310ea:	movs	r4, #0
   310ec:	b.n	30e7e <get_fs_info@@Base+0x6a>
   310ee:	mov	r0, r4
   310f0:	add.w	sp, sp, #12288	; 0x3000
   310f4:	add	sp, #44	; 0x2c
   310f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   310fa:	nop
   310fc:	str	r4, [sp, #124]	; 0x7c
   310fe:	strh	r0, [r0, #32]
   31100:	str	r4, [sp, #68]	; 0x44
   31102:	beq.n	31106 <get_fs_info@@Base+0x2f2>
   31104:	subs	r7, #92	; 0x5c
   31106:	movs	r3, r0
   31108:	lsls	r4, r4, #8
   3110a:	movs	r0, r0
   3110c:	movs	r2, #199	; 0xc7
   3110e:	movs	r2, r0
   31110:	subs	r6, #248	; 0xf8
   31112:	movs	r3, r0
   31114:	movs	r7, #33	; 0x21
   31116:	movs	r2, r0
   31118:	movs	r4, #52	; 0x34
   3111a:	movs	r2, r0

0003111c <get_fsid@@Base>:
   3111c:	push	{r4, r5, r6, r7, lr}
   3111e:	mov	r7, r2
   31120:	ldr	r2, [pc, #148]	; (311b8 <get_fsid@@Base+0x9c>)
   31122:	subw	sp, sp, #1036	; 0x40c
   31126:	ldr	r3, [pc, #148]	; (311bc <get_fsid@@Base+0xa0>)
   31128:	mov	r4, r1
   3112a:	add	r2, pc
   3112c:	movs	r1, #0
   3112e:	mov	r6, r0
   31130:	ldr	r3, [r2, r3]
   31132:	ldr	r3, [r3, #0]
   31134:	str.w	r3, [sp, #1028]	; 0x404
   31138:	mov.w	r3, #0
   3113c:	blx	87f4 <open64@plt>
   31140:	subs	r5, r0, #0
   31142:	bge.n	31172 <get_fsid@@Base+0x56>
   31144:	blx	8938 <__errno_location@plt>
   31148:	ldr	r4, [r0, #0]
   3114a:	negs	r4, r4
   3114c:	cbnz	r7, 31158 <get_fsid@@Base+0x3c>
   3114e:	ldr	r0, [pc, #112]	; (311c0 <get_fsid@@Base+0xa4>)
   31150:	mov	r1, r6
   31152:	add	r0, pc
   31154:	bl	17424 <__btrfs_error@@Base>
   31158:	adds	r3, r5, #1
   3115a:	bne.n	31186 <get_fsid@@Base+0x6a>
   3115c:	ldr	r2, [pc, #100]	; (311c4 <get_fsid@@Base+0xa8>)
   3115e:	ldr	r3, [pc, #92]	; (311bc <get_fsid@@Base+0xa0>)
   31160:	add	r2, pc
   31162:	ldr	r3, [r2, r3]
   31164:	ldr	r2, [r3, #0]
   31166:	ldr.w	r3, [sp, #1028]	; 0x404
   3116a:	eors	r2, r3
   3116c:	beq.n	311ac <get_fsid@@Base+0x90>
   3116e:	blx	86b8 <__stack_chk_fail@plt>
   31172:	ldr	r1, [pc, #64]	; (311b4 <get_fsid@@Base+0x98>)
   31174:	mov	r2, sp
   31176:	blx	8764 <ioctl@plt>
   3117a:	cmp	r0, #0
   3117c:	bge.n	3118e <get_fsid@@Base+0x72>
   3117e:	blx	8938 <__errno_location@plt>
   31182:	ldr	r4, [r0, #0]
   31184:	negs	r4, r4
   31186:	mov	r0, r5
   31188:	blx	8b4c <close@plt>
   3118c:	b.n	3115c <get_fsid@@Base+0x40>
   3118e:	mov	r3, r4
   31190:	add	r6, sp, #16
   31192:	add	r4, sp, #32
   31194:	mov	r2, r6
   31196:	adds	r3, #8
   31198:	ldmia	r2!, {r0, r1}
   3119a:	cmp	r2, r4
   3119c:	str.w	r0, [r3, #-8]
   311a0:	mov	r6, r2
   311a2:	str.w	r1, [r3, #-4]
   311a6:	bne.n	31194 <get_fsid@@Base+0x78>
   311a8:	movs	r4, #0
   311aa:	b.n	31186 <get_fsid@@Base+0x6a>
   311ac:	mov	r0, r4
   311ae:	addw	sp, sp, #1036	; 0x40c
   311b2:	pop	{r4, r5, r6, r7, pc}
   311b4:	str	r4, [sp, #124]	; 0x7c
   311b6:	strh	r0, [r0, #32]
   311b8:	subs	r4, #94	; 0x5e
   311ba:	movs	r3, r0
   311bc:	lsls	r4, r4, #8
   311be:	movs	r0, r0
   311c0:	ldrh	r3, [r1, #26]
   311c2:	movs	r0, r0
   311c4:	subs	r4, #40	; 0x28
   311c6:	movs	r3, r0

000311c8 <group_profile_max_safe_loss@@Base>:
   311c8:	movs	r3, #0
   311ca:	cmp	r3, #0
   311cc:	push	{r4, r5, lr}
   311ce:	and.w	r4, r0, #2040	; 0x7f8
   311d2:	it	eq
   311d4:	cmpeq	r4, #128	; 0x80
   311d6:	mov	r5, r3
   311d8:	beq.n	31248 <group_profile_max_safe_loss@@Base+0x80>
   311da:	cmp	r3, #0
   311dc:	it	eq
   311de:	cmpeq	r4, #129	; 0x81
   311e0:	bcs.n	31216 <group_profile_max_safe_loss@@Base+0x4e>
   311e2:	cmp	r3, #0
   311e4:	it	eq
   311e6:	cmpeq	r4, #16
   311e8:	beq.n	31248 <group_profile_max_safe_loss@@Base+0x80>
   311ea:	cmp	r3, #0
   311ec:	it	eq
   311ee:	cmpeq	r4, #17
   311f0:	bcs.n	31200 <group_profile_max_safe_loss@@Base+0x38>
   311f2:	tst.w	r0, #2032	; 0x7f0
   311f6:	ite	ne
   311f8:	movne.w	r0, #4294967295	; 0xffffffff
   311fc:	moveq	r0, r3
   311fe:	pop	{r4, r5, pc}
   31200:	cmp	r3, #0
   31202:	it	eq
   31204:	cmpeq	r4, #32
   31206:	beq.n	3124c <group_profile_max_safe_loss@@Base+0x84>
   31208:	cmp	r3, #0
   3120a:	itet	eq
   3120c:	cmpeq	r4, #64	; 0x40
   3120e:	movne.w	r0, #4294967295	; 0xffffffff
   31212:	moveq	r0, #1
   31214:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   31216:	cmp	r3, #0
   31218:	it	eq
   3121a:	cmpeq.w	r4, #1024	; 0x400
   3121e:	beq.n	31250 <group_profile_max_safe_loss@@Base+0x88>
   31220:	movs	r3, #0
   31222:	cmp	r3, r5
   31224:	mov.w	r2, #1024	; 0x400
   31228:	it	eq
   3122a:	cmpeq	r2, r4
   3122c:	bcc.n	31254 <group_profile_max_safe_loss@@Base+0x8c>
   3122e:	cmp	r5, #0
   31230:	it	eq
   31232:	cmpeq.w	r4, #256	; 0x100
   31236:	beq.n	3125a <group_profile_max_safe_loss@@Base+0x92>
   31238:	cmp	r5, #0
   3123a:	itet	eq
   3123c:	cmpeq.w	r4, #512	; 0x200
   31240:	movne.w	r0, #4294967295	; 0xffffffff
   31244:	moveq	r0, #2
   31246:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   31248:	movs	r0, #1
   3124a:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   3124c:	mov	r0, r3
   3124e:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   31250:	movs	r0, #3
   31252:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   31254:	mov.w	r0, #4294967295	; 0xffffffff
   31258:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>
   3125a:	movs	r0, #2
   3125c:	b.n	311fe <group_profile_max_safe_loss@@Base+0x36>

0003125e <ask_user@@Base>:
   3125e:	ldr	r2, [pc, #148]	; (312f4 <ask_user@@Base+0x96>)
   31260:	ldr	r3, [pc, #148]	; (312f8 <ask_user@@Base+0x9a>)
   31262:	add	r2, pc
   31264:	push	{r4, r5, r6, lr}
   31266:	movs	r5, #0
   31268:	sub	sp, #40	; 0x28
   3126a:	ldr	r3, [r2, r3]
   3126c:	mov	r4, r0
   3126e:	movs	r2, #26
   31270:	mov	r1, r5
   31272:	add	r0, sp, #8
   31274:	ldr	r3, [r3, #0]
   31276:	str	r3, [sp, #36]	; 0x24
   31278:	mov.w	r3, #0
   3127c:	str	r5, [sp, #4]
   3127e:	blx	8978 <memset@plt+0x4>
   31282:	ldr	r1, [pc, #120]	; (312fc <ask_user@@Base+0x9e>)
   31284:	mov	r2, r4
   31286:	ldr	r6, [pc, #120]	; (31300 <ask_user@@Base+0xa2>)
   31288:	add	r1, pc
   3128a:	movs	r0, #1
   3128c:	str	r5, [sp, #0]
   3128e:	blx	89ec <__printf_chk@plt+0x4>
   31292:	ldr	r3, [pc, #112]	; (31304 <ask_user@@Base+0xa6>)
   31294:	add	r6, pc
   31296:	add	r4, sp, #4
   31298:	movs	r1, #29
   3129a:	ldr	r3, [r6, r3]
   3129c:	mov	r0, r4
   3129e:	ldr	r2, [r3, #0]
   312a0:	blx	85e8 <fgets@plt>
   312a4:	cbnz	r0, 312bc <ask_user@@Base+0x5e>
   312a6:	movs	r0, #0
   312a8:	ldr	r2, [pc, #92]	; (31308 <ask_user@@Base+0xaa>)
   312aa:	ldr	r3, [pc, #76]	; (312f8 <ask_user@@Base+0x9a>)
   312ac:	add	r2, pc
   312ae:	ldr	r3, [r2, r3]
   312b0:	ldr	r2, [r3, #0]
   312b2:	ldr	r3, [sp, #36]	; 0x24
   312b4:	eors	r2, r3
   312b6:	beq.n	312ee <ask_user@@Base+0x90>
   312b8:	blx	86b8 <__stack_chk_fail@plt>
   312bc:	ldr	r1, [pc, #76]	; (3130c <ask_user@@Base+0xae>)
   312be:	mov	r0, r4
   312c0:	mov	r2, sp
   312c2:	add	r1, pc
   312c4:	blx	87d0 <strtok_r@plt>
   312c8:	mov	r4, r0
   312ca:	cmp	r0, #0
   312cc:	beq.n	312a6 <ask_user@@Base+0x48>
   312ce:	ldr	r1, [pc, #64]	; (31310 <ask_user@@Base+0xb2>)
   312d0:	add	r1, pc
   312d2:	blx	86f8 <strcasecmp@plt>
   312d6:	cbz	r0, 312ea <ask_user@@Base+0x8c>
   312d8:	ldr	r1, [pc, #56]	; (31314 <ask_user@@Base+0xb6>)
   312da:	mov	r0, r4
   312dc:	add	r1, pc
   312de:	blx	86f8 <strcasecmp@plt>
   312e2:	clz	r0, r0
   312e6:	lsrs	r0, r0, #5
   312e8:	b.n	312a8 <ask_user@@Base+0x4a>
   312ea:	movs	r0, #1
   312ec:	b.n	312a8 <ask_user@@Base+0x4a>
   312ee:	add	sp, #40	; 0x28
   312f0:	pop	{r4, r5, r6, pc}
   312f2:	nop
   312f4:	subs	r3, #38	; 0x26
   312f6:	movs	r3, r0
   312f8:	lsls	r4, r4, #8
   312fa:	movs	r0, r0
   312fc:	movs	r2, #23
   312fe:	movs	r2, r0
   31300:	subs	r2, #244	; 0xf4
   31302:	movs	r3, r0
   31304:	lsls	r4, r1, #9
   31306:	movs	r0, r0
   31308:	subs	r2, #220	; 0xdc
   3130a:	movs	r3, r0
   3130c:	movs	r1, #232	; 0xe8
   3130e:	movs	r2, r0
   31310:	b.n	314a0 <find_next_key@@Base+0x90>
   31312:	movs	r0, r0
   31314:	bkpt	0x003c
	...

00031318 <find_mount_root@@Base>:
   31318:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3131c:	mov	r9, r0
   3131e:	str	r1, [sp, #0]
   31320:	mov.w	r1, #262144	; 0x40000
   31324:	blx	87f4 <open64@plt>
   31328:	cmp	r0, #0
   3132a:	bge.n	3133c <find_mount_root@@Base+0x24>
   3132c:	blx	8938 <__errno_location@plt>
   31330:	ldr	r4, [r0, #0]
   31332:	negs	r4, r4
   31334:	mov	r0, r4
   31336:	add	sp, #12
   31338:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3133c:	blx	8b4c <close@plt>
   31340:	ldr	r1, [pc, #172]	; (313f0 <find_mount_root@@Base+0xd8>)
   31342:	ldr	r0, [pc, #176]	; (313f4 <find_mount_root@@Base+0xdc>)
   31344:	add	r1, pc
   31346:	add	r0, pc
   31348:	blx	8ad8 <setmntent@plt>
   3134c:	mov	r7, r0
   3134e:	cmp	r0, #0
   31350:	beq.n	3132c <find_mount_root@@Base+0x14>
   31352:	ldr.w	fp, [pc, #164]	; 313f8 <find_mount_root@@Base+0xe0>
   31356:	movs	r5, #0
   31358:	mov	sl, r5
   3135a:	movs	r6, #1
   3135c:	add	fp, pc
   3135e:	b.n	3136c <find_mount_root@@Base+0x54>
   31360:	ldr	r0, [r4, #8]
   31362:	mov	r1, fp
   31364:	blx	8568 <strcmp@plt>
   31368:	mov	sl, r8
   3136a:	mov	r6, r0
   3136c:	mov	r0, r7
   3136e:	blx	87dc <getmntent@plt>
   31372:	mov	r4, r0
   31374:	cbz	r0, 313b0 <find_mount_root@@Base+0x98>
   31376:	ldr	r3, [r4, #4]
   31378:	mov	r0, r3
   3137a:	str	r3, [sp, #4]
   3137c:	blx	88f0 <strlen@plt>
   31380:	ldr	r3, [sp, #4]
   31382:	mov	r1, r9
   31384:	mov	r8, r0
   31386:	mov	r2, r0
   31388:	mov	r0, r3
   3138a:	blx	8b28 <strncmp@plt>
   3138e:	cmp	r0, #0
   31390:	bne.n	3136c <find_mount_root@@Base+0x54>
   31392:	cmp	sl, r8
   31394:	bgt.n	3136c <find_mount_root@@Base+0x54>
   31396:	mov	r0, r5
   31398:	blx	85dc <free@plt+0x4>
   3139c:	ldr	r0, [r4, #4]
   3139e:	blx	86a0 <strdup@plt+0x4>
   313a2:	mov	r5, r0
   313a4:	cmp	r0, #0
   313a6:	bne.n	31360 <find_mount_root@@Base+0x48>
   313a8:	blx	8938 <__errno_location@plt>
   313ac:	ldr	r4, [r0, #0]
   313ae:	negs	r4, r4
   313b0:	mov	r0, r7
   313b2:	blx	8a38 <endmntent@plt>
   313b6:	cmp	r4, #0
   313b8:	bne.n	31334 <find_mount_root@@Base+0x1c>
   313ba:	cbz	r5, 313e8 <find_mount_root@@Base+0xd0>
   313bc:	cbz	r6, 313c8 <find_mount_root@@Base+0xb0>
   313be:	mov	r0, r5
   313c0:	movs	r4, #1
   313c2:	blx	85dc <free@plt+0x4>
   313c6:	b.n	31334 <find_mount_root@@Base+0x1c>
   313c8:	mov	r1, r6
   313ca:	mov	r0, r5
   313cc:	blx	8b40 <realpath@plt>
   313d0:	ldr	r3, [sp, #0]
   313d2:	str	r0, [r3, #0]
   313d4:	cbnz	r0, 313de <find_mount_root@@Base+0xc6>
   313d6:	blx	8938 <__errno_location@plt>
   313da:	ldr	r6, [r0, #0]
   313dc:	negs	r6, r6
   313de:	mov	r0, r5
   313e0:	mov	r4, r6
   313e2:	blx	85dc <free@plt+0x4>
   313e6:	b.n	31334 <find_mount_root@@Base+0x1c>
   313e8:	mvn.w	r4, #1
   313ec:	b.n	31334 <find_mount_root@@Base+0x1c>
   313ee:	nop
   313f0:	bne.n	313ba <find_mount_root@@Base+0xa2>
   313f2:	movs	r0, r0
   313f4:	adds	r6, r1, #5
   313f6:	movs	r2, r0
   313f8:	adds	r2, r7, #2
   313fa:	movs	r2, r0

000313fc <units_set_mode@@Base>:
   313fc:	ldrb	r3, [r0, #0]
   313fe:	orrs	r1, r3
   31400:	str	r1, [r0, #0]
   31402:	bx	lr

00031404 <units_set_base@@Base>:
   31404:	ldr	r3, [r0, #0]
   31406:	bic.w	r3, r3, #255	; 0xff
   3140a:	orrs	r3, r1
   3140c:	str	r3, [r0, #0]
   3140e:	bx	lr

00031410 <find_next_key@@Base>:
   31410:	ldr	r2, [pc, #168]	; (314bc <find_next_key@@Base+0xac>)
   31412:	ldr	r3, [pc, #172]	; (314c0 <find_next_key@@Base+0xb0>)
   31414:	add	r2, pc
   31416:	push	{r4, r5, r6, lr}
   31418:	sub	sp, #24
   3141a:	ldr	r3, [r2, r3]
   3141c:	mov	r4, r1
   3141e:	movs	r5, #0
   31420:	ldr	r3, [r3, #0]
   31422:	str	r3, [sp, #20]
   31424:	mov.w	r3, #0
   31428:	subs	r3, r0, #4
   3142a:	ldr.w	r0, [r3, #4]!
   3142e:	cbz	r0, 31442 <find_next_key@@Base+0x32>
   31430:	ldr	r2, [r3, #32]
   31432:	ldr.w	r1, [r0, #192]	; 0xc0
   31436:	adds	r2, #1
   31438:	cmp	r2, r1
   3143a:	bcc.n	31446 <find_next_key@@Base+0x36>
   3143c:	adds	r5, #1
   3143e:	cmp	r5, #8
   31440:	bne.n	3142a <find_next_key@@Base+0x1a>
   31442:	movs	r5, #1
   31444:	b.n	31476 <find_next_key@@Base+0x66>
   31446:	add.w	r6, r4, #9
   3144a:	mov	r1, sp
   3144c:	cbnz	r5, 3148a <find_next_key@@Base+0x7a>
   3144e:	movs	r3, #25
   31450:	muls	r2, r3
   31452:	movs	r3, #17
   31454:	adds	r2, #101	; 0x65
   31456:	bl	172c2 <read_extent_buffer@@Base>
   3145a:	ldr.w	r2, [sp, #9]
   3145e:	ldr.w	r3, [sp, #13]
   31462:	str.w	r2, [r4, #9]
   31466:	str	r3, [r6, #4]
   31468:	ldrb.w	r3, [sp, #8]
   3146c:	strb	r3, [r4, #8]
   3146e:	ldr	r3, [sp, #0]
   31470:	str	r3, [r4, #0]
   31472:	ldr	r3, [sp, #4]
   31474:	str	r3, [r4, #4]
   31476:	ldr	r2, [pc, #76]	; (314c4 <find_next_key@@Base+0xb4>)
   31478:	ldr	r3, [pc, #68]	; (314c0 <find_next_key@@Base+0xb0>)
   3147a:	add	r2, pc
   3147c:	ldr	r3, [r2, r3]
   3147e:	ldr	r2, [r3, #0]
   31480:	ldr	r3, [sp, #20]
   31482:	eors	r2, r3
   31484:	beq.n	314b6 <find_next_key@@Base+0xa6>
   31486:	blx	86b8 <__stack_chk_fail@plt>
   3148a:	add.w	r2, r2, r2, lsl #5
   3148e:	movs	r3, #17
   31490:	adds	r2, #101	; 0x65
   31492:	movs	r5, #0
   31494:	bl	172c2 <read_extent_buffer@@Base>
   31498:	ldr.w	r2, [sp, #9]
   3149c:	ldr.w	r3, [sp, #13]
   314a0:	str.w	r2, [r4, #9]
   314a4:	str	r3, [r6, #4]
   314a6:	ldrb.w	r3, [sp, #8]
   314aa:	strb	r3, [r4, #8]
   314ac:	ldr	r3, [sp, #0]
   314ae:	str	r3, [r4, #0]
   314b0:	ldr	r3, [sp, #4]
   314b2:	str	r3, [r4, #4]
   314b4:	b.n	31476 <find_next_key@@Base+0x66>
   314b6:	mov	r0, r5
   314b8:	add	sp, #24
   314ba:	pop	{r4, r5, r6, pc}
   314bc:	subs	r1, #116	; 0x74
   314be:	movs	r3, r0
   314c0:	lsls	r4, r4, #8
   314c2:	movs	r0, r0
   314c4:	subs	r1, #14
   314c6:	movs	r3, r0

000314c8 <btrfs_group_type_str@@Base>:
   314c8:	and.w	r3, r1, #131072	; 0x20000
   314cc:	and.w	r2, r0, #7
   314d0:	cmp	r3, #0
   314d2:	it	eq
   314d4:	cmpeq	r2, #6
   314d6:	push	{r4, r5, lr}
   314d8:	bcs.n	3150a <btrfs_group_type_str@@Base+0x42>
   314da:	orrs.w	r1, r2, r3
   314de:	beq.n	31526 <btrfs_group_type_str@@Base+0x5e>
   314e0:	adds.w	r4, r2, #4294967295	; 0xffffffff
   314e4:	adc.w	r5, r3, #4294967295	; 0xffffffff
   314e8:	cmp	r5, #0
   314ea:	it	eq
   314ec:	cmpeq	r4, #5
   314ee:	bcs.n	31504 <btrfs_group_type_str@@Base+0x3c>
   314f0:	cmp	r4, #4
   314f2:	bhi.n	31504 <btrfs_group_type_str@@Base+0x3c>
   314f4:	tbb	[pc, r4]
   314f8:	lsls	r2, r3, #12
   314fa:	asrs	r6, r0, #4
   314fc:	movs	r4, r2
   314fe:	ldr	r0, [pc, #56]	; (31538 <btrfs_group_type_str@@Base+0x70>)
   31500:	add	r0, pc
   31502:	pop	{r4, r5, pc}
   31504:	ldr	r0, [pc, #52]	; (3153c <btrfs_group_type_str@@Base+0x74>)
   31506:	add	r0, pc
   31508:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   3150a:	cmp.w	r3, #131072	; 0x20000
   3150e:	it	eq
   31510:	cmpeq	r2, #0
   31512:	bne.n	31532 <btrfs_group_type_str@@Base+0x6a>
   31514:	ldr	r0, [pc, #40]	; (31540 <btrfs_group_type_str@@Base+0x78>)
   31516:	add	r0, pc
   31518:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   3151a:	ldr	r0, [pc, #40]	; (31544 <btrfs_group_type_str@@Base+0x7c>)
   3151c:	add	r0, pc
   3151e:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   31520:	ldr	r0, [pc, #36]	; (31548 <btrfs_group_type_str@@Base+0x80>)
   31522:	add	r0, pc
   31524:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   31526:	ldr	r0, [pc, #36]	; (3154c <btrfs_group_type_str@@Base+0x84>)
   31528:	add	r0, pc
   3152a:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   3152c:	ldr	r0, [pc, #32]	; (31550 <btrfs_group_type_str@@Base+0x88>)
   3152e:	add	r0, pc
   31530:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   31532:	ldr	r0, [pc, #32]	; (31554 <btrfs_group_type_str@@Base+0x8c>)
   31534:	add	r0, pc
   31536:	b.n	31502 <btrfs_group_type_str@@Base+0x3a>
   31538:	subs	r2, r0, #7
   3153a:	movs	r2, r0
   3153c:	beq.n	31594 <btrfs_group_profile_str@@Base+0x3c>
   3153e:	movs	r0, r0
   31540:	subs	r3, r6, #6
   31542:	movs	r2, r0
   31544:	subs	r5, r3, #6
   31546:	movs	r2, r0
   31548:	subs	r2, r2, #6
   3154a:	movs	r2, r0
   3154c:	beq.n	31560 <btrfs_group_profile_str@@Base+0x8>
   3154e:	movs	r0, r0
   31550:	subs	r1, r0, #6
   31552:	movs	r2, r0
   31554:	ldmia	r7, {r2, r3, r4, r5, r6, r7}
	...

00031558 <btrfs_group_profile_str@@Base>:
   31558:	and.w	r2, r0, #2040	; 0x7f8
   3155c:	movs	r3, #0
   3155e:	cmp	r3, #0
   31560:	it	eq
   31562:	cmpeq	r2, #64	; 0x40
   31564:	beq.n	315e0 <btrfs_group_profile_str@@Base+0x88>
   31566:	cmp	r3, #0
   31568:	it	eq
   3156a:	cmpeq	r2, #65	; 0x41
   3156c:	bcs.n	315a0 <btrfs_group_profile_str@@Base+0x48>
   3156e:	cmp	r3, #0
   31570:	it	eq
   31572:	cmpeq	r2, #16
   31574:	beq.n	315e6 <btrfs_group_profile_str@@Base+0x8e>
   31576:	cmp	r3, #0
   31578:	it	eq
   3157a:	cmpeq	r2, #17
   3157c:	bcs.n	31592 <btrfs_group_profile_str@@Base+0x3a>
   3157e:	orrs.w	r1, r2, r3
   31582:	beq.n	315ec <btrfs_group_profile_str@@Base+0x94>
   31584:	cmp	r3, #0
   31586:	it	eq
   31588:	cmpeq	r2, #8
   3158a:	bne.n	315f2 <btrfs_group_profile_str@@Base+0x9a>
   3158c:	ldr	r0, [pc, #136]	; (31618 <btrfs_group_profile_str@@Base+0xc0>)
   3158e:	add	r0, pc
   31590:	bx	lr
   31592:	cmp	r3, #0
   31594:	it	eq
   31596:	cmpeq	r2, #32
   31598:	bne.n	315f8 <btrfs_group_profile_str@@Base+0xa0>
   3159a:	ldr	r0, [pc, #128]	; (3161c <btrfs_group_profile_str@@Base+0xc4>)
   3159c:	add	r0, pc
   3159e:	bx	lr
   315a0:	cmp	r3, #0
   315a2:	it	eq
   315a4:	cmpeq.w	r2, #512	; 0x200
   315a8:	beq.n	315fe <btrfs_group_profile_str@@Base+0xa6>
   315aa:	movs	r1, #0
   315ac:	cmp	r1, r3
   315ae:	mov.w	r0, #512	; 0x200
   315b2:	it	eq
   315b4:	cmpeq	r0, r2
   315b6:	bcc.n	315d0 <btrfs_group_profile_str@@Base+0x78>
   315b8:	cmp	r3, #0
   315ba:	it	eq
   315bc:	cmpeq	r2, #128	; 0x80
   315be:	beq.n	31604 <btrfs_group_profile_str@@Base+0xac>
   315c0:	cmp	r3, #0
   315c2:	it	eq
   315c4:	cmpeq.w	r2, #256	; 0x100
   315c8:	bne.n	3160a <btrfs_group_profile_str@@Base+0xb2>
   315ca:	ldr	r0, [pc, #84]	; (31620 <btrfs_group_profile_str@@Base+0xc8>)
   315cc:	add	r0, pc
   315ce:	bx	lr
   315d0:	cmp	r3, #0
   315d2:	it	eq
   315d4:	cmpeq.w	r2, #1024	; 0x400
   315d8:	bne.n	31610 <btrfs_group_profile_str@@Base+0xb8>
   315da:	ldr	r0, [pc, #72]	; (31624 <btrfs_group_profile_str@@Base+0xcc>)
   315dc:	add	r0, pc
   315de:	bx	lr
   315e0:	ldr	r0, [pc, #68]	; (31628 <btrfs_group_profile_str@@Base+0xd0>)
   315e2:	add	r0, pc
   315e4:	bx	lr
   315e6:	ldr	r0, [pc, #68]	; (3162c <btrfs_group_profile_str@@Base+0xd4>)
   315e8:	add	r0, pc
   315ea:	bx	lr
   315ec:	ldr	r0, [pc, #64]	; (31630 <btrfs_group_profile_str@@Base+0xd8>)
   315ee:	add	r0, pc
   315f0:	bx	lr
   315f2:	ldr	r0, [pc, #64]	; (31634 <btrfs_group_profile_str@@Base+0xdc>)
   315f4:	add	r0, pc
   315f6:	bx	lr
   315f8:	ldr	r0, [pc, #60]	; (31638 <btrfs_group_profile_str@@Base+0xe0>)
   315fa:	add	r0, pc
   315fc:	bx	lr
   315fe:	ldr	r0, [pc, #60]	; (3163c <btrfs_group_profile_str@@Base+0xe4>)
   31600:	add	r0, pc
   31602:	bx	lr
   31604:	ldr	r0, [pc, #56]	; (31640 <btrfs_group_profile_str@@Base+0xe8>)
   31606:	add	r0, pc
   31608:	bx	lr
   3160a:	ldr	r0, [pc, #56]	; (31644 <btrfs_group_profile_str@@Base+0xec>)
   3160c:	add	r0, pc
   3160e:	bx	lr
   31610:	ldr	r0, [pc, #52]	; (31648 <btrfs_group_profile_str@@Base+0xf0>)
   31612:	add	r0, pc
   31614:	bx	lr
   31616:	nop
   31618:	ldmia	r2, {r0, r2, r3, r5, r7}
   3161a:	movs	r0, r0
   3161c:	ldmia	r2, {r0, r1, r2, r3, r4, r5, r7}
   3161e:	movs	r0, r0
   31620:	ldmia	r2!, {r0, r1, r5, r7}
   31622:	movs	r0, r0
   31624:	ldmia	r2, {r1, r2, r4, r5, r6}
   31626:	movs	r0, r0
   31628:	ldmia	r2, {r1, r2, r3, r4, r5, r6}
   3162a:	movs	r0, r0
   3162c:	ldmia	r2!, {r1, r3, r4, r6}
   3162e:	movs	r0, r0
   31630:	subs	r1, r5, #3
   31632:	movs	r2, r0
   31634:	ldmia	r7!, {r2, r3, r4, r5}
   31636:	movs	r0, r0
   31638:	ldmia	r7!, {r1, r2, r4, r5}
   3163a:	movs	r0, r0
   3163c:	ldmia	r2!, {r0, r3, r6}
   3163e:	movs	r0, r0
   31640:	ldmia	r2!, {r1, r5, r6}
   31642:	movs	r0, r0
   31644:	ldmia	r7!, {r2, r5}
   31646:	movs	r0, r0
   31648:	ldmia	r7!, {r1, r2, r3, r4}
	...

0003164c <test_num_disk_vs_raid@@Base>:
   3164c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31650:	sub	sp, #36	; 0x24
   31652:	mov	sl, r3
   31654:	ldr	r3, [pc, #316]	; (31794 <test_num_disk_vs_raid@@Base+0x148>)
   31656:	ldrd	r6, r7, [sp, #72]	; 0x48
   3165a:	orr.w	fp, r0, r2
   3165e:	add	r3, pc
   31660:	ldr	r5, [sp, #80]	; 0x50
   31662:	cmp	r7, #0
   31664:	mov	r9, r0
   31666:	it	eq
   31668:	cmpeq	r6, #2
   3166a:	mov	r8, r2
   3166c:	str	r3, [sp, #28]
   3166e:	beq.n	316fc <test_num_disk_vs_raid@@Base+0xb0>
   31670:	cmp	r7, #0
   31672:	it	eq
   31674:	cmpeq	r6, #3
   31676:	beq.n	316f8 <test_num_disk_vs_raid@@Base+0xac>
   31678:	cmp	r7, #0
   3167a:	it	eq
   3167c:	cmpeq	r6, #1
   3167e:	beq.n	31700 <test_num_disk_vs_raid@@Base+0xb4>
   31680:	mov.w	r4, #1088	; 0x440
   31684:	orr.w	r4, r4, #768	; 0x300
   31688:	orr.w	r4, r4, #152	; 0x98
   3168c:	cmp	r7, #0
   3168e:	orr.w	r4, r4, #32
   31692:	it	eq
   31694:	cmpeq	r6, #2
   31696:	bcc.n	316ae <test_num_disk_vs_raid@@Base+0x62>
   31698:	and.w	r2, fp, #32
   3169c:	movs	r3, #0
   3169e:	orrs	r3, r2
   316a0:	beq.n	316ae <test_num_disk_vs_raid@@Base+0x62>
   316a2:	ldr	r0, [pc, #244]	; (31798 <test_num_disk_vs_raid@@Base+0x14c>)
   316a4:	str	r1, [sp, #16]
   316a6:	add	r0, pc
   316a8:	bl	173a8 <__btrfs_warning@@Base>
   316ac:	ldr	r1, [sp, #16]
   316ae:	bic.w	r3, r9, r4
   316b2:	mvn.w	ip, r4
   316b6:	strd	r3, r1, [sp, #16]
   316ba:	ldrd	r3, r4, [sp, #16]
   316be:	orrs	r3, r4
   316c0:	beq.n	31704 <test_num_disk_vs_raid@@Base+0xb8>
   316c2:	ldr	r2, [pc, #216]	; (3179c <test_num_disk_vs_raid@@Base+0x150>)
   316c4:	mov	r0, r9
   316c6:	ldr	r3, [sp, #28]
   316c8:	ldr	r3, [r3, r2]
   316ca:	str	r1, [sp, #28]
   316cc:	ldr	r4, [r3, #0]
   316ce:	bl	31558 <btrfs_group_profile_str@@Base>
   316d2:	ldr	r1, [sp, #28]
   316d4:	str	r0, [sp, #16]
   316d6:	mov	r0, r9
   316d8:	bl	2fd88 <test_issubvolname@@Base+0x3a>
   316dc:	ldr	r2, [pc, #192]	; (317a0 <test_num_disk_vs_raid@@Base+0x154>)
   316de:	ldr	r3, [sp, #16]
   316e0:	add	r2, pc
   316e2:	strd	r6, r7, [sp]
   316e6:	str	r0, [sp, #8]
   316e8:	movs	r1, #1
   316ea:	mov	r0, r4
   316ec:	blx	8a14 <__fprintf_chk@plt+0x4>
   316f0:	movs	r0, #1
   316f2:	add	sp, #36	; 0x24
   316f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   316f8:	movs	r4, #0
   316fa:	b.n	31684 <test_num_disk_vs_raid@@Base+0x38>
   316fc:	movs	r4, #0
   316fe:	b.n	31688 <test_num_disk_vs_raid@@Base+0x3c>
   31700:	movs	r4, #0
   31702:	b.n	3168c <test_num_disk_vs_raid@@Base+0x40>
   31704:	and.w	r0, ip, r8
   31708:	mov	r1, sl
   3170a:	orrs.w	r3, r0, r1
   3170e:	beq.n	31736 <test_num_disk_vs_raid@@Base+0xea>
   31710:	ldr	r2, [pc, #136]	; (3179c <test_num_disk_vs_raid@@Base+0x150>)
   31712:	mov	r0, r8
   31714:	ldr	r3, [sp, #28]
   31716:	ldr	r3, [r3, r2]
   31718:	ldr	r4, [r3, #0]
   3171a:	bl	31558 <btrfs_group_profile_str@@Base>
   3171e:	mov	r1, sl
   31720:	str	r0, [sp, #16]
   31722:	mov	r0, r8
   31724:	bl	2fd88 <test_issubvolname@@Base+0x3a>
   31728:	ldr	r2, [pc, #120]	; (317a4 <test_num_disk_vs_raid@@Base+0x158>)
   3172a:	ldr	r3, [sp, #16]
   3172c:	add	r2, pc
   3172e:	strd	r6, r7, [sp]
   31732:	str	r0, [sp, #8]
   31734:	b.n	316e8 <test_num_disk_vs_raid@@Base+0x9c>
   31736:	cmp	r7, #0
   31738:	mov.w	r1, #0
   3173c:	it	eq
   3173e:	cmpeq	r6, #3
   31740:	bne.n	31776 <test_num_disk_vs_raid@@Base+0x12a>
   31742:	and.w	r2, fp, #256	; 0x100
   31746:	mov	r3, r1
   31748:	orrs	r3, r2
   3174a:	beq.n	31754 <test_num_disk_vs_raid@@Base+0x108>
   3174c:	ldr	r0, [pc, #88]	; (317a8 <test_num_disk_vs_raid@@Base+0x15c>)
   3174e:	add	r0, pc
   31750:	bl	173a8 <__btrfs_warning@@Base>
   31754:	cbnz	r5, 3178e <test_num_disk_vs_raid@@Base+0x142>
   31756:	and.w	r2, r8, #32
   3175a:	mov	r3, r5
   3175c:	orrs	r3, r2
   3175e:	beq.n	31768 <test_num_disk_vs_raid@@Base+0x11c>
   31760:	ldr	r5, [sp, #84]	; 0x54
   31762:	subs	r5, #0
   31764:	it	ne
   31766:	movne	r5, #1
   31768:	ldr	r1, [pc, #64]	; (317ac <test_num_disk_vs_raid@@Base+0x160>)
   3176a:	mov	r0, r5
   3176c:	add	r1, pc
   3176e:	bl	174a0 <__btrfs_warning_on@@Base>
   31772:	movs	r0, #0
   31774:	b.n	316f2 <test_num_disk_vs_raid@@Base+0xa6>
   31776:	cmp	r7, #0
   31778:	it	eq
   3177a:	cmpeq	r6, #2
   3177c:	bne.n	31754 <test_num_disk_vs_raid@@Base+0x108>
   3177e:	and.w	r2, fp, #128	; 0x80
   31782:	mov	r3, r1
   31784:	orrs	r3, r2
   31786:	beq.n	31754 <test_num_disk_vs_raid@@Base+0x108>
   31788:	ldr	r0, [pc, #36]	; (317b0 <test_num_disk_vs_raid@@Base+0x164>)
   3178a:	add	r0, pc
   3178c:	b.n	31750 <test_num_disk_vs_raid@@Base+0x104>
   3178e:	movs	r5, #0
   31790:	b.n	31768 <test_num_disk_vs_raid@@Base+0x11c>
   31792:	nop
   31794:	adds	r7, #42	; 0x2a
   31796:	movs	r3, r0
   31798:	subs	r0, r7, #0
   3179a:	movs	r2, r0
   3179c:	lsls	r4, r6, #8
   3179e:	movs	r0, r0
   317a0:	subs	r1, r7, #0
   317a2:	movs	r2, r0
   317a4:	subs	r2, r2, #1
   317a6:	movs	r2, r0
   317a8:	subs	r1, r2, #2
   317aa:	movs	r2, r0
   317ac:	subs	r1, r5, #3
   317ae:	movs	r2, r0
   317b0:	subs	r0, r2, #2
   317b2:	movs	r2, r0

000317b4 <btrfs_tree_search2_ioctl_supported@@Base>:
   317b4:	ldr	r2, [pc, #144]	; (31848 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   317b6:	ldr	r3, [pc, #148]	; (3184c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   317b8:	add	r2, pc
   317ba:	ldr	r1, [pc, #136]	; (31844 <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   317bc:	push	{r4, r5, r7, lr}
   317be:	sub	sp, #8
   317c0:	add	r7, sp, #0
   317c2:	ldr	r3, [r2, r3]
   317c4:	sub.w	sp, sp, #1024	; 0x400
   317c8:	movs	r2, #1
   317ca:	ldr	r3, [r3, #0]
   317cc:	str	r3, [r7, #4]
   317ce:	mov.w	r3, #0
   317d2:	movs	r3, #0
   317d4:	strd	r2, r3, [sp]
   317d8:	movs	r2, #2
   317da:	movs	r3, #0
   317dc:	strd	r2, r3, [sp, #8]
   317e0:	strd	r2, r3, [sp, #16]
   317e4:	mov.w	r2, #4294967295	; 0xffffffff
   317e8:	movs	r3, #132	; 0x84
   317ea:	strd	r3, r3, [sp, #56]	; 0x38
   317ee:	mov.w	r3, #4294967295	; 0xffffffff
   317f2:	strd	r2, r3, [sp, #32]
   317f6:	strd	r2, r3, [sp, #48]	; 0x30
   317fa:	movs	r3, #1
   317fc:	mov.w	r2, #912	; 0x390
   31800:	str	r3, [sp, #64]	; 0x40
   31802:	movs	r3, #0
   31804:	strd	r2, r3, [sp, #104]	; 0x68
   31808:	mov	r2, sp
   3180a:	movs	r4, #0
   3180c:	movs	r5, #0
   3180e:	strd	r4, r5, [sp, #24]
   31812:	strd	r4, r5, [sp, #40]	; 0x28
   31816:	blx	8764 <ioctl@plt>
   3181a:	cmn.w	r0, #95	; 0x5f
   3181e:	beq.n	3183a <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   31820:	cmp	r0, #0
   31822:	it	eq
   31824:	moveq	r0, #1
   31826:	ldr	r2, [pc, #40]	; (31850 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   31828:	ldr	r3, [pc, #32]	; (3184c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   3182a:	add	r2, pc
   3182c:	ldr	r3, [r2, r3]
   3182e:	ldr	r2, [r3, #0]
   31830:	ldr	r3, [r7, #4]
   31832:	eors	r2, r3
   31834:	beq.n	3183e <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   31836:	blx	86b8 <__stack_chk_fail@plt>
   3183a:	movs	r0, #0
   3183c:	b.n	31826 <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   3183e:	adds	r7, #8
   31840:	mov	sp, r7
   31842:	pop	{r4, r5, r7, pc}
   31844:	str	r4, [sp, #68]	; 0x44
   31846:	stmia	r0!, {r4, r5, r6}
   31848:	adds	r5, #208	; 0xd0
   3184a:	movs	r3, r0
   3184c:	lsls	r4, r4, #8
   3184e:	movs	r0, r0
   31850:	adds	r5, #94	; 0x5e
   31852:	movs	r3, r0

00031854 <get_unit_mode_from_arg@@Base>:
   31854:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31858:	mov	r8, r2
   3185a:	ldr	r2, [pc, #448]	; (31a1c <get_unit_mode_from_arg@@Base+0x1c8>)
   3185c:	sub	sp, #20
   3185e:	ldr	r3, [pc, #448]	; (31a20 <get_unit_mode_from_arg@@Base+0x1cc>)
   31860:	mov	r7, r0
   31862:	add	r2, pc
   31864:	ldr.w	r9, [pc, #444]	; 31a24 <get_unit_mode_from_arg@@Base+0x1d0>
   31868:	ldr.w	sl, [pc, #444]	; 31a28 <get_unit_mode_from_arg@@Base+0x1d4>
   3186c:	mov	r4, r1
   3186e:	ldr.w	fp, [pc, #444]	; 31a2c <get_unit_mode_from_arg@@Base+0x1d8>
   31872:	add	r9, pc
   31874:	ldr	r3, [r2, r3]
   31876:	add	sl, pc
   31878:	add	fp, pc
   3187a:	movs	r5, #0
   3187c:	ldr	r3, [r3, #0]
   3187e:	str	r3, [sp, #12]
   31880:	mov.w	r3, #0
   31884:	mov.w	r3, #512	; 0x200
   31888:	str	r3, [sp, #8]
   3188a:	ldr	r3, [r7, #0]
   3188c:	cmp	r3, r5
   3188e:	bgt.n	318b6 <get_unit_mode_from_arg@@Base+0x62>
   31890:	movs	r3, #0
   31892:	mov	r0, r3
   31894:	ldr	r2, [r7, #0]
   31896:	cmp	r2, r0
   31898:	bgt.w	31a02 <get_unit_mode_from_arg@@Base+0x1ae>
   3189c:	ldr	r2, [pc, #400]	; (31a30 <get_unit_mode_from_arg@@Base+0x1dc>)
   3189e:	str	r3, [r7, #0]
   318a0:	ldr	r3, [pc, #380]	; (31a20 <get_unit_mode_from_arg@@Base+0x1cc>)
   318a2:	add	r2, pc
   318a4:	ldr	r0, [sp, #8]
   318a6:	ldr	r3, [r2, r3]
   318a8:	ldr	r2, [r3, #0]
   318aa:	ldr	r3, [sp, #12]
   318ac:	eors	r2, r3
   318ae:	beq.w	31a16 <get_unit_mode_from_arg@@Base+0x1c2>
   318b2:	blx	86b8 <__stack_chk_fail@plt>
   318b6:	ldr.w	r6, [r4, r5, lsl #2]
   318ba:	mov	r1, r9
   318bc:	mov	r0, r6
   318be:	blx	8568 <strcmp@plt>
   318c2:	cmp	r0, #0
   318c4:	beq.w	31a12 <get_unit_mode_from_arg@@Base+0x1be>
   318c8:	mov	r1, sl
   318ca:	mov	r0, r6
   318cc:	blx	8568 <strcmp@plt>
   318d0:	cbnz	r0, 318d8 <get_unit_mode_from_arg@@Base+0x84>
   318d2:	mov.w	r3, #256	; 0x100
   318d6:	b.n	318e6 <get_unit_mode_from_arg@@Base+0x92>
   318d8:	mov	r1, fp
   318da:	mov	r0, r6
   318dc:	blx	8568 <strcmp@plt>
   318e0:	cbnz	r0, 318f0 <get_unit_mode_from_arg@@Base+0x9c>
   318e2:	mov.w	r3, #512	; 0x200
   318e6:	str	r3, [sp, #8]
   318e8:	str.w	r0, [r4, r5, lsl #2]
   318ec:	adds	r5, #1
   318ee:	b.n	3188a <get_unit_mode_from_arg@@Base+0x36>
   318f0:	ldr	r1, [pc, #320]	; (31a34 <get_unit_mode_from_arg@@Base+0x1e0>)
   318f2:	mov	r0, r6
   318f4:	add	r1, pc
   318f6:	blx	8568 <strcmp@plt>
   318fa:	cbnz	r0, 3190c <get_unit_mode_from_arg@@Base+0xb8>
   318fc:	mov.w	r1, #512	; 0x200
   31900:	str	r0, [sp, #4]
   31902:	add	r0, sp, #8
   31904:	bl	313fc <units_set_mode@@Base>
   31908:	ldr	r3, [sp, #4]
   3190a:	b.n	31978 <get_unit_mode_from_arg@@Base+0x124>
   3190c:	ldr	r1, [pc, #296]	; (31a38 <get_unit_mode_from_arg@@Base+0x1e4>)
   3190e:	mov	r0, r6
   31910:	add	r1, pc
   31912:	blx	8568 <strcmp@plt>
   31916:	cbnz	r0, 31920 <get_unit_mode_from_arg@@Base+0xcc>
   31918:	mov.w	r1, #768	; 0x300
   3191c:	str	r0, [sp, #4]
   3191e:	b.n	31902 <get_unit_mode_from_arg@@Base+0xae>
   31920:	ldr	r1, [pc, #280]	; (31a3c <get_unit_mode_from_arg@@Base+0x1e8>)
   31922:	mov	r0, r6
   31924:	add	r1, pc
   31926:	blx	8568 <strcmp@plt>
   3192a:	mov	r3, r0
   3192c:	cbnz	r0, 3193a <get_unit_mode_from_arg@@Base+0xe6>
   3192e:	movs	r1, #2
   31930:	str	r3, [sp, #4]
   31932:	add	r0, sp, #8
   31934:	bl	31404 <units_set_base@@Base>
   31938:	b.n	31908 <get_unit_mode_from_arg@@Base+0xb4>
   3193a:	ldr	r1, [pc, #260]	; (31a40 <get_unit_mode_from_arg@@Base+0x1ec>)
   3193c:	mov	r0, r6
   3193e:	add	r1, pc
   31940:	blx	8568 <strcmp@plt>
   31944:	mov	r3, r0
   31946:	cbnz	r0, 3194e <get_unit_mode_from_arg@@Base+0xfa>
   31948:	movs	r1, #3
   3194a:	str	r3, [sp, #4]
   3194c:	b.n	31932 <get_unit_mode_from_arg@@Base+0xde>
   3194e:	ldr	r1, [pc, #244]	; (31a44 <get_unit_mode_from_arg@@Base+0x1f0>)
   31950:	mov	r0, r6
   31952:	add	r1, pc
   31954:	blx	8568 <strcmp@plt>
   31958:	mov	r3, r0
   3195a:	cbnz	r0, 31962 <get_unit_mode_from_arg@@Base+0x10e>
   3195c:	movs	r1, #4
   3195e:	str	r3, [sp, #4]
   31960:	b.n	31932 <get_unit_mode_from_arg@@Base+0xde>
   31962:	ldr	r1, [pc, #228]	; (31a48 <get_unit_mode_from_arg@@Base+0x1f4>)
   31964:	mov	r0, r6
   31966:	add	r1, pc
   31968:	blx	8568 <strcmp@plt>
   3196c:	cbnz	r0, 3197e <get_unit_mode_from_arg@@Base+0x12a>
   3196e:	add	r0, sp, #8
   31970:	movs	r1, #5
   31972:	bl	31404 <units_set_base@@Base>
   31976:	movs	r3, #0
   31978:	str.w	r3, [r4, r5, lsl #2]
   3197c:	b.n	318ec <get_unit_mode_from_arg@@Base+0x98>
   3197e:	cmp.w	r8, #0
   31982:	beq.n	318ec <get_unit_mode_from_arg@@Base+0x98>
   31984:	ldr	r1, [pc, #196]	; (31a4c <get_unit_mode_from_arg@@Base+0x1f8>)
   31986:	mov	r0, r6
   31988:	add	r1, pc
   3198a:	blx	8568 <strcmp@plt>
   3198e:	cmp	r0, #0
   31990:	beq.n	318d2 <get_unit_mode_from_arg@@Base+0x7e>
   31992:	ldr	r1, [pc, #188]	; (31a50 <get_unit_mode_from_arg@@Base+0x1fc>)
   31994:	mov	r0, r6
   31996:	add	r1, pc
   31998:	blx	8568 <strcmp@plt>
   3199c:	cmp	r0, #0
   3199e:	beq.n	318e2 <get_unit_mode_from_arg@@Base+0x8e>
   319a0:	ldr	r1, [pc, #176]	; (31a54 <get_unit_mode_from_arg@@Base+0x200>)
   319a2:	mov	r0, r6
   319a4:	add	r1, pc
   319a6:	blx	8568 <strcmp@plt>
   319aa:	cbnz	r0, 319b2 <get_unit_mode_from_arg@@Base+0x15e>
   319ac:	mov.w	r3, #768	; 0x300
   319b0:	b.n	318e6 <get_unit_mode_from_arg@@Base+0x92>
   319b2:	ldr	r1, [pc, #164]	; (31a58 <get_unit_mode_from_arg@@Base+0x204>)
   319b4:	mov	r0, r6
   319b6:	add	r1, pc
   319b8:	blx	8568 <strcmp@plt>
   319bc:	mov	r3, r0
   319be:	cmp	r0, #0
   319c0:	beq.n	3192e <get_unit_mode_from_arg@@Base+0xda>
   319c2:	ldr	r1, [pc, #152]	; (31a5c <get_unit_mode_from_arg@@Base+0x208>)
   319c4:	mov	r0, r6
   319c6:	add	r1, pc
   319c8:	blx	8568 <strcmp@plt>
   319cc:	mov	r3, r0
   319ce:	cmp	r0, #0
   319d0:	beq.n	31948 <get_unit_mode_from_arg@@Base+0xf4>
   319d2:	ldr	r1, [pc, #140]	; (31a60 <get_unit_mode_from_arg@@Base+0x20c>)
   319d4:	mov	r0, r6
   319d6:	add	r1, pc
   319d8:	blx	8568 <strcmp@plt>
   319dc:	mov	r3, r0
   319de:	cmp	r0, #0
   319e0:	beq.n	3195c <get_unit_mode_from_arg@@Base+0x108>
   319e2:	ldr	r1, [pc, #128]	; (31a64 <get_unit_mode_from_arg@@Base+0x210>)
   319e4:	mov	r0, r6
   319e6:	add	r1, pc
   319e8:	blx	8568 <strcmp@plt>
   319ec:	mov	r6, r0
   319ee:	cmp	r0, #0
   319f0:	bne.w	318ec <get_unit_mode_from_arg@@Base+0x98>
   319f4:	add	r0, sp, #8
   319f6:	movs	r1, #5
   319f8:	bl	31404 <units_set_base@@Base>
   319fc:	str.w	r6, [r4, r5, lsl #2]
   31a00:	b.n	318ec <get_unit_mode_from_arg@@Base+0x98>
   31a02:	ldr.w	r2, [r4, r0, lsl #2]
   31a06:	cbz	r2, 31a0e <get_unit_mode_from_arg@@Base+0x1ba>
   31a08:	str.w	r2, [r4, r3, lsl #2]
   31a0c:	adds	r3, #1
   31a0e:	adds	r0, #1
   31a10:	b.n	31894 <get_unit_mode_from_arg@@Base+0x40>
   31a12:	mov	r3, r0
   31a14:	b.n	31894 <get_unit_mode_from_arg@@Base+0x40>
   31a16:	add	sp, #20
   31a18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a1c:	adds	r5, #38	; 0x26
   31a1e:	movs	r3, r0
   31a20:	lsls	r4, r4, #8
   31a22:	movs	r0, r0
   31a24:	strh	r6, [r5, #20]
   31a26:	movs	r0, r0
   31a28:	subs	r4, r4, #0
   31a2a:	movs	r2, r0
   31a2c:	subs	r0, r5, #0
   31a2e:	movs	r2, r0
   31a30:	adds	r4, #230	; 0xe6
   31a32:	movs	r3, r0
   31a34:	adds	r5, r7, #6
   31a36:	movs	r2, r0
   31a38:	adds	r7, r4, #6
   31a3a:	movs	r2, r0
   31a3c:	adds	r0, r3, #6
   31a3e:	movs	r2, r0
   31a40:	adds	r7, r0, #6
   31a42:	movs	r2, r0
   31a44:	adds	r4, r7, #5
   31a46:	movs	r2, r0
   31a48:	adds	r1, r6, #5
   31a4a:	movs	r2, r0
   31a4c:	adds	r0, r3, #5
   31a4e:	movs	r2, r0
   31a50:	adds	r5, r1, #5
   31a52:	movs	r2, r0
   31a54:	adds	r2, r0, #5
   31a56:	movs	r2, r0
   31a58:	adds	r3, r6, #4
   31a5a:	movs	r2, r0
   31a5c:	adds	r6, r4, #4
   31a5e:	movs	r2, r0
   31a60:	adds	r1, r3, #4
   31a62:	movs	r2, r0
   31a64:	adds	r4, r1, #4
   31a66:	movs	r2, r0

00031a68 <div_factor@@Base>:
   31a68:	cmp	r2, #10
   31a6a:	push	{r3, r4, r5, lr}
   31a6c:	beq.n	31a88 <div_factor@@Base+0x20>
   31a6e:	asrs	r5, r2, #31
   31a70:	movs	r3, #0
   31a72:	muls	r1, r2
   31a74:	mla	r1, r0, r5, r1
   31a78:	umull	r4, r5, r2, r0
   31a7c:	movs	r2, #10
   31a7e:	add	r5, r1
   31a80:	mov	r1, r5
   31a82:	mov	r0, r4
   31a84:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   31a88:	pop	{r3, r4, r5, pc}

00031a8a <count_digits@@Base>:
   31a8a:	mov	r2, r0
   31a8c:	mov	r3, r1
   31a8e:	orrs.w	r1, r2, r3
   31a92:	push	{r4, r6, r7, lr}
   31a94:	beq.n	31abc <count_digits@@Base+0x32>
   31a96:	movs	r4, #0
   31a98:	mov	r6, r2
   31a9a:	mov	r7, r3
   31a9c:	movs	r2, #10
   31a9e:	movs	r3, #0
   31aa0:	mov	r0, r6
   31aa2:	mov	r1, r7
   31aa4:	bl	394ac <btrfs_util_strerror@@Base+0x7fc>
   31aa8:	cmp	r7, #0
   31aaa:	it	eq
   31aac:	cmpeq	r6, #10
   31aae:	add.w	r4, r4, #1
   31ab2:	mov	r2, r0
   31ab4:	mov	r3, r1
   31ab6:	bcs.n	31a98 <count_digits@@Base+0xe>
   31ab8:	mov	r0, r4
   31aba:	pop	{r4, r6, r7, pc}
   31abc:	movs	r4, #1
   31abe:	b.n	31ab8 <count_digits@@Base+0x2e>

00031ac0 <string_is_numerical@@Base>:
   31ac0:	cbz	r0, 31ae2 <string_is_numerical@@Base+0x22>
   31ac2:	ldrb	r3, [r0, #0]
   31ac4:	subs	r3, #48	; 0x30
   31ac6:	cmp	r3, #9
   31ac8:	bhi.n	31ae0 <string_is_numerical@@Base+0x20>
   31aca:	subs	r3, r0, #1
   31acc:	ldrb.w	r0, [r3, #1]!
   31ad0:	sub.w	r2, r0, #48	; 0x30
   31ad4:	cmp	r2, #9
   31ad6:	bls.n	31acc <string_is_numerical@@Base+0xc>
   31ad8:	clz	r0, r0
   31adc:	lsrs	r0, r0, #5
   31ade:	bx	lr
   31ae0:	movs	r0, #0
   31ae2:	bx	lr

00031ae4 <prefixcmp@@Base>:
   31ae4:	subs	r1, #1
   31ae6:	subs	r3, r0, #1
   31ae8:	ldrb.w	r0, [r1, #1]!
   31aec:	cbz	r0, 31af8 <prefixcmp@@Base+0x14>
   31aee:	ldrb.w	r2, [r3, #1]!
   31af2:	cmp	r0, r2
   31af4:	beq.n	31ae8 <prefixcmp@@Base+0x4>
   31af6:	subs	r0, r0, r2
   31af8:	bx	lr

00031afa <subvol_strip_mountpoint@@Base>:
   31afa:	push	{r4, r5, r6, lr}
   31afc:	mov	r6, r0
   31afe:	mov	r5, r1
   31b00:	blx	88f0 <strlen@plt>
   31b04:	mov	r4, r0
   31b06:	cbz	r0, 31b3e <subvol_strip_mountpoint@@Base+0x44>
   31b08:	mov	r2, r0
   31b0a:	mov	r1, r5
   31b0c:	mov	r0, r6
   31b0e:	blx	8b28 <strncmp@plt>
   31b12:	cbnz	r0, 31b20 <subvol_strip_mountpoint@@Base+0x26>
   31b14:	cmp	r4, #1
   31b16:	mov	r3, r4
   31b18:	beq.n	31b30 <subvol_strip_mountpoint@@Base+0x36>
   31b1a:	ldrb	r2, [r5, r4]
   31b1c:	cmp	r2, #47	; 0x2f
   31b1e:	beq.n	31b30 <subvol_strip_mountpoint@@Base+0x36>
   31b20:	ldr	r0, [pc, #32]	; (31b44 <subvol_strip_mountpoint@@Base+0x4a>)
   31b22:	mov	r1, r6
   31b24:	add	r0, pc
   31b26:	bl	17424 <__btrfs_error@@Base>
   31b2a:	movs	r0, #1
   31b2c:	blx	88e4 <exit@plt>
   31b30:	add	r6, r4
   31b32:	ldrb.w	r2, [r6, #-1]
   31b36:	cmp	r2, #47	; 0x2f
   31b38:	it	ne
   31b3a:	addne	r3, r4, #1
   31b3c:	add	r5, r3
   31b3e:	mov	r0, r5
   31b40:	pop	{r4, r5, r6, pc}
   31b42:	nop
   31b44:	subs	r1, r2, r7
   31b46:	movs	r2, r0

00031b48 <init_rand_seed@@Base>:
   31b48:	ldr	r3, [pc, #24]	; (31b64 <init_rand_seed@@Base+0x1c>)
   31b4a:	mvns	r2, r0
   31b4c:	lsrs	r0, r0, #16
   31b4e:	add	r3, pc
   31b50:	orr.w	r0, r0, r1, lsl #16
   31b54:	mvns	r1, r1
   31b56:	mvns	r0, r0
   31b58:	strh	r2, [r3, #0]
   31b5a:	strh	r0, [r3, #2]
   31b5c:	movs	r2, #1
   31b5e:	strh	r1, [r3, #4]
   31b60:	str	r2, [r3, #8]
   31b62:	bx	lr
   31b64:			; <UNDEFINED> instruction: 0x478e
   31b66:	movs	r3, r0

00031b68 <rand_u32@@Base>:
   31b68:	push	{r3, lr}
   31b6a:	ldr	r3, [pc, #24]	; (31b84 <rand_u32@@Base+0x1c>)
   31b6c:	add	r3, pc
   31b6e:	ldr	r3, [r3, #8]
   31b70:	cbnz	r3, 31b76 <rand_u32@@Base+0xe>
   31b72:	bl	2fe20 <test_issubvolname@@Base+0xd2>
   31b76:	ldr	r0, [pc, #16]	; (31b88 <rand_u32@@Base+0x20>)
   31b78:	ldmia.w	sp!, {r3, lr}
   31b7c:	add	r0, pc
   31b7e:	b.w	8668 <jrand48@plt>
   31b82:	nop
   31b84:	bx	lr
   31b86:	movs	r3, r0
   31b88:	bx	ip
   31b8a:	movs	r3, r0

00031b8c <rand_range@@Base>:
   31b8c:	ldr	r3, [pc, #32]	; (31bb0 <rand_range@@Base+0x24>)
   31b8e:	push	{r4, lr}
   31b90:	add	r3, pc
   31b92:	mov	r4, r0
   31b94:	ldr	r3, [r3, #8]
   31b96:	cbnz	r3, 31b9c <rand_range@@Base+0x10>
   31b98:	bl	2fe20 <test_issubvolname@@Base+0xd2>
   31b9c:	ldr	r0, [pc, #20]	; (31bb4 <rand_range@@Base+0x28>)
   31b9e:	add	r0, pc
   31ba0:	blx	866c <jrand48@plt+0x4>
   31ba4:	mov	r1, r4
   31ba6:	bl	38f24 <btrfs_util_strerror@@Base+0x274>
   31baa:	mov	r0, r1
   31bac:	pop	{r4, pc}
   31bae:	nop
   31bb0:	bxns	r9
   31bb2:	movs	r3, r0
   31bb4:	bx	r7
   31bb6:	movs	r3, r0

00031bb8 <rand_int@@Base>:
   31bb8:	b.w	31b68 <rand_u32@@Base>

00031bbc <rand_u64@@Base>:
   31bbc:	push	{r3, r4, r5, lr}
   31bbe:	bl	31b68 <rand_u32@@Base>
   31bc2:	movs	r4, #0
   31bc4:	mov	r5, r0
   31bc6:	bl	31b68 <rand_u32@@Base>
   31bca:	adds	r0, r4, r0
   31bcc:	adc.w	r1, r5, #0
   31bd0:	pop	{r3, r4, r5, pc}

00031bd2 <rand_u16@@Base>:
   31bd2:	push	{r3, lr}
   31bd4:	bl	31b68 <rand_u32@@Base>
   31bd8:	uxth	r0, r0
   31bda:	pop	{r3, pc}

00031bdc <rand_u8@@Base>:
   31bdc:	push	{r3, lr}
   31bde:	bl	31b68 <rand_u32@@Base>
   31be2:	uxtb	r0, r0
   31be4:	pop	{r3, pc}

00031be6 <btrfs_config_init@@Base>:
   31be6:	ldr	r3, [pc, #12]	; (31bf4 <btrfs_config_init@@Base+0xe>)
   31be8:	ldr	r2, [pc, #12]	; (31bf8 <btrfs_config_init@@Base+0x12>)
   31bea:	add	r3, pc
   31bec:	ldr	r3, [r3, r2]
   31bee:	movs	r2, #4
   31bf0:	str	r2, [r3, #0]
   31bf2:	bx	lr
   31bf4:	adds	r1, #158	; 0x9e
   31bf6:	movs	r3, r0
   31bf8:	lsls	r0, r4, #8
	...

00031bfc <total_memory@@Base>:
   31bfc:	ldr	r2, [pc, #72]	; (31c48 <total_memory@@Base+0x4c>)
   31bfe:	ldr	r3, [pc, #76]	; (31c4c <total_memory@@Base+0x50>)
   31c00:	add	r2, pc
   31c02:	push	{lr}
   31c04:	sub	sp, #76	; 0x4c
   31c06:	ldr	r3, [r2, r3]
   31c08:	add	r0, sp, #4
   31c0a:	ldr	r3, [r3, #0]
   31c0c:	str	r3, [sp, #68]	; 0x44
   31c0e:	mov.w	r3, #0
   31c12:	blx	8810 <sysinfo@plt>
   31c16:	cmp	r0, #0
   31c18:	bge.n	31c3a <total_memory@@Base+0x3e>
   31c1a:	ldr	r0, [pc, #52]	; (31c50 <total_memory@@Base+0x54>)
   31c1c:	add	r0, pc
   31c1e:	bl	17424 <__btrfs_error@@Base>
   31c22:	mov.w	r0, #4294967295	; 0xffffffff
   31c26:	ldr	r2, [pc, #44]	; (31c54 <total_memory@@Base+0x58>)
   31c28:	ldr	r3, [pc, #32]	; (31c4c <total_memory@@Base+0x50>)
   31c2a:	add	r2, pc
   31c2c:	ldr	r3, [r2, r3]
   31c2e:	ldr	r2, [r3, #0]
   31c30:	ldr	r3, [sp, #68]	; 0x44
   31c32:	eors	r2, r3
   31c34:	beq.n	31c42 <total_memory@@Base+0x46>
   31c36:	blx	86b8 <__stack_chk_fail@plt>
   31c3a:	ldr	r3, [sp, #20]
   31c3c:	ldr	r0, [sp, #56]	; 0x38
   31c3e:	muls	r0, r3
   31c40:	b.n	31c26 <total_memory@@Base+0x2a>
   31c42:	add	sp, #76	; 0x4c
   31c44:	ldr.w	pc, [sp], #4
   31c48:	adds	r1, #136	; 0x88
   31c4a:	movs	r3, r0
   31c4c:	lsls	r4, r4, #8
   31c4e:	movs	r0, r0
   31c50:	subs	r0, r6, r3
   31c52:	movs	r2, r0
   31c54:	adds	r1, #94	; 0x5e
   31c56:	movs	r3, r0

00031c58 <print_device_info@@Base>:
   31c58:	push	{r0, r1, r4, lr}
   31c5a:	mov	r2, r1
   31c5c:	mov	r4, r0
   31c5e:	cbz	r1, 31c6a <print_device_info@@Base+0x12>
   31c60:	ldr	r1, [pc, #28]	; (31c80 <print_device_info@@Base+0x28>)
   31c62:	movs	r0, #1
   31c64:	add	r1, pc
   31c66:	blx	89ec <__printf_chk@plt+0x4>
   31c6a:	ldr	r3, [r4, #32]
   31c6c:	movs	r0, #1
   31c6e:	ldr	r1, [pc, #20]	; (31c84 <print_device_info@@Base+0x2c>)
   31c70:	str	r3, [sp, #0]
   31c72:	add	r1, pc
   31c74:	ldrd	r2, r3, [r4, #64]	; 0x40
   31c78:	blx	89ec <__printf_chk@plt+0x4>
   31c7c:	add	sp, #8
   31c7e:	pop	{r4, pc}
   31c80:	b.n	31d64 <print_all_devices@@Base+0xdc>
   31c82:	movs	r0, r0
   31c84:	subs	r6, r6, r2
   31c86:	movs	r2, r0

00031c88 <print_all_devices@@Base>:
   31c88:	push	{r4, r5, r6, lr}
   31c8a:	mov	r4, r0
   31c8c:	ldr	r0, [pc, #36]	; (31cb4 <print_all_devices@@Base+0x2c>)
   31c8e:	ldr	r6, [pc, #40]	; (31cb8 <print_all_devices@@Base+0x30>)
   31c90:	add	r0, pc
   31c92:	blx	8804 <puts@plt+0x4>
   31c96:	ldr	r5, [r4, #0]
   31c98:	add	r6, pc
   31c9a:	cmp	r5, r4
   31c9c:	bne.n	31ca8 <print_all_devices@@Base+0x20>
   31c9e:	ldmia.w	sp!, {r4, r5, r6, lr}
   31ca2:	movs	r0, #10
   31ca4:	b.w	8984 <putchar@plt>
   31ca8:	mov	r0, r5
   31caa:	mov	r1, r6
   31cac:	bl	31c58 <print_device_info@@Base>
   31cb0:	ldr	r5, [r5, #0]
   31cb2:	b.n	31c9a <print_all_devices@@Base+0x12>
   31cb4:	subs	r6, r6, r2
   31cb6:	movs	r2, r0
   31cb8:	strh	r4, [r6, #18]
   31cba:	movs	r0, r0
   31cbc:	ldr	r2, [pc, #284]	; (31ddc <print_all_devices@@Base+0x154>)
   31cbe:	ldr	r3, [pc, #288]	; (31de0 <print_all_devices@@Base+0x158>)
   31cc0:	push	{r4, r5, r6, r7, lr}
   31cc2:	add	r2, pc
   31cc4:	sub.w	sp, sp, #516	; 0x204
   31cc8:	mov	r4, r1
   31cca:	ldr	r3, [r2, r3]
   31ccc:	mov	r5, sp
   31cce:	ldr	r1, [pc, #264]	; (31dd8 <print_all_devices@@Base+0x150>)
   31cd0:	mov	r2, r5
   31cd2:	ldr	r3, [r3, #0]
   31cd4:	str	r3, [sp, #508]	; 0x1fc
   31cd6:	mov.w	r3, #0
   31cda:	blx	8764 <ioctl@plt>
   31cde:	adds	r0, #1
   31ce0:	beq.n	31dcc <print_all_devices@@Base+0x144>
   31ce2:	ldrd	r2, r3, [sp]
   31ce6:	add	r7, sp, #296	; 0x128
   31ce8:	add.w	r6, r4, #32
   31cec:	strd	r2, r3, [r4]
   31cf0:	ldrd	r2, r3, [r5, #264]	; 0x108
   31cf4:	strd	r2, r3, [r4, #8]
   31cf8:	ldrd	r2, r3, [r5, #272]	; 0x110
   31cfc:	strd	r2, r3, [r4, #16]
   31d00:	ldrd	r2, r3, [r5, #288]	; 0x120
   31d04:	strd	r2, r3, [r4, #24]
   31d08:	ldrd	r2, r3, [r5, #280]	; 0x118
   31d0c:	strd	r2, r3, [r4, #80]	; 0x50
   31d10:	add	r2, sp, #312	; 0x138
   31d12:	mov	r3, r7
   31d14:	adds	r6, #8
   31d16:	ldmia	r3!, {r0, r1}
   31d18:	cmp	r3, r2
   31d1a:	str.w	r0, [r6, #-8]
   31d1e:	mov	r7, r3
   31d20:	str.w	r1, [r6, #-4]
   31d24:	bne.n	31d12 <print_all_devices@@Base+0x8a>
   31d26:	add.w	r7, r4, #48	; 0x30
   31d2a:	add	r3, sp, #328	; 0x148
   31d2c:	mov	r6, r2
   31d2e:	adds	r7, #8
   31d30:	ldmia	r6!, {r0, r1}
   31d32:	cmp	r6, r3
   31d34:	str.w	r0, [r7, #-8]
   31d38:	mov	r2, r6
   31d3a:	str.w	r1, [r7, #-4]
   31d3e:	bne.n	31d2c <print_all_devices@@Base+0xa4>
   31d40:	add.w	r6, r4, #64	; 0x40
   31d44:	add	r7, sp, #344	; 0x158
   31d46:	mov	r2, r3
   31d48:	adds	r6, #8
   31d4a:	ldmia	r2!, {r0, r1}
   31d4c:	cmp	r2, r7
   31d4e:	str.w	r0, [r6, #-8]
   31d52:	mov	r3, r2
   31d54:	str.w	r1, [r6, #-4]
   31d58:	bne.n	31d46 <print_all_devices@@Base+0xbe>
   31d5a:	ldrd	r2, r3, [r5, #344]	; 0x158
   31d5e:	movs	r0, #0
   31d60:	strd	r2, r3, [r4, #88]	; 0x58
   31d64:	ldrd	r2, r3, [r5, #352]	; 0x160
   31d68:	strd	r2, r3, [r4, #96]	; 0x60
   31d6c:	ldrd	r2, r3, [r5, #360]	; 0x168
   31d70:	strd	r2, r3, [r4, #104]	; 0x68
   31d74:	ldrd	r2, r3, [r5, #368]	; 0x170
   31d78:	strd	r2, r3, [r4, #112]	; 0x70
   31d7c:	ldr.w	r3, [r5, #376]	; 0x178
   31d80:	str	r3, [r4, #120]	; 0x78
   31d82:	ldr.w	r3, [r5, #384]	; 0x180
   31d86:	str	r3, [r4, #124]	; 0x7c
   31d88:	ldr.w	r3, [r5, #392]	; 0x188
   31d8c:	str.w	r3, [r4, #128]	; 0x80
   31d90:	ldr.w	r3, [r5, #400]	; 0x190
   31d94:	str.w	r3, [r4, #132]	; 0x84
   31d98:	ldr.w	r3, [r5, #408]	; 0x198
   31d9c:	str.w	r3, [r4, #136]	; 0x88
   31da0:	ldr.w	r3, [r5, #416]	; 0x1a0
   31da4:	str.w	r3, [r4, #140]	; 0x8c
   31da8:	ldr.w	r3, [r5, #424]	; 0x1a8
   31dac:	str.w	r3, [r4, #144]	; 0x90
   31db0:	ldr.w	r3, [r5, #432]	; 0x1b0
   31db4:	str.w	r3, [r4, #148]	; 0x94
   31db8:	ldr	r2, [pc, #40]	; (31de4 <print_all_devices@@Base+0x15c>)
   31dba:	ldr	r3, [pc, #36]	; (31de0 <print_all_devices@@Base+0x158>)
   31dbc:	add	r2, pc
   31dbe:	ldr	r3, [r2, r3]
   31dc0:	ldr	r2, [r3, #0]
   31dc2:	ldr	r3, [sp, #508]	; 0x1fc
   31dc4:	eors	r2, r3
   31dc6:	beq.n	31dd0 <print_all_devices@@Base+0x148>
   31dc8:	blx	86b8 <__stack_chk_fail@plt>
   31dcc:	movs	r0, #23
   31dce:	b.n	31db8 <print_all_devices@@Base+0x130>
   31dd0:	add.w	sp, sp, #516	; 0x204
   31dd4:	pop	{r4, r5, r6, r7, pc}
   31dd6:	nop
   31dd8:	str	r4, [sp, #240]	; 0xf0
   31dda:	strh	r0, [r7, #14]
   31ddc:	adds	r0, #198	; 0xc6
   31dde:	movs	r3, r0
   31de0:	lsls	r4, r4, #8
   31de2:	movs	r0, r0
   31de4:	cmp	r7, #204	; 0xcc
   31de6:	movs	r3, r0
   31de8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   31dec:	mov	r7, r0
   31dee:	mov	r0, r1
   31df0:	mov	r9, r1
   31df2:	mov	r6, r2
   31df4:	mov	r8, r3
   31df6:	blx	88f0 <strlen@plt>
   31dfa:	mov	r5, r0
   31dfc:	cmp	r5, #1
   31dfe:	bls.n	31e0a <print_all_devices@@Base+0x182>
   31e00:	subs	r3, r5, #1
   31e02:	ldrb.w	r2, [r9, r3]
   31e06:	cmp	r2, #47	; 0x2f
   31e08:	beq.n	31e5e <print_all_devices@@Base+0x1d6>
   31e0a:	adds	r0, r5, #1
   31e0c:	blx	8820 <malloc@plt+0x4>
   31e10:	mov	r4, r0
   31e12:	cmp	r0, #0
   31e14:	beq.n	31eac <print_all_devices@@Base+0x224>
   31e16:	mov	r2, r5
   31e18:	mov	r1, r9
   31e1a:	blx	8628 <memcpy@plt+0x4>
   31e1e:	mov.w	r9, #0
   31e22:	mov	r2, r5
   31e24:	strb.w	r9, [r4, r5]
   31e28:	movs	r1, #47	; 0x2f
   31e2a:	mov	r0, r4
   31e2c:	blx	8914 <memrchr@plt>
   31e30:	cmp	r4, r0
   31e32:	mov	r5, r0
   31e34:	bne.n	31e62 <print_all_devices@@Base+0x1da>
   31e36:	ldr.w	sl, [pc, #120]	; 31eb0 <print_all_devices@@Base+0x228>
   31e3a:	adds	r5, r4, #1
   31e3c:	add	sl, pc
   31e3e:	mov	r0, r5
   31e40:	blx	88f0 <strlen@plt>
   31e44:	cmp	r0, r8
   31e46:	mov	r9, r0
   31e48:	bcc.n	31e76 <print_all_devices@@Base+0x1ee>
   31e4a:	mov	r0, r4
   31e4c:	blx	85dc <free@plt+0x4>
   31e50:	blx	8938 <__errno_location@plt>
   31e54:	movs	r3, #36	; 0x24
   31e56:	str	r3, [r0, #0]
   31e58:	movs	r0, #3
   31e5a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   31e5e:	mov	r5, r3
   31e60:	b.n	31dfc <print_all_devices@@Base+0x174>
   31e62:	cbz	r0, 31e6c <print_all_devices@@Base+0x1e4>
   31e64:	mov	sl, r4
   31e66:	strb.w	r9, [r5], #1
   31e6a:	b.n	31e3e <print_all_devices@@Base+0x1b6>
   31e6c:	ldr.w	sl, [pc, #68]	; 31eb4 <print_all_devices@@Base+0x22c>
   31e70:	mov	r5, r4
   31e72:	add	sl, pc
   31e74:	b.n	31e3e <print_all_devices@@Base+0x1b6>
   31e76:	mov	r2, r0
   31e78:	mov	r1, r5
   31e7a:	mov	r0, r6
   31e7c:	movs	r5, #0
   31e7e:	blx	8628 <memcpy@plt+0x4>
   31e82:	mov.w	r2, #16384	; 0x4000
   31e86:	mov	r1, sl
   31e88:	mov	r0, r7
   31e8a:	strb.w	r5, [r6, r9]
   31e8e:	blx	86ac <openat@plt>
   31e92:	ldr	r3, [sp, #32]
   31e94:	str	r0, [r3, #0]
   31e96:	adds	r0, #1
   31e98:	mov	r0, r4
   31e9a:	bne.n	31ea4 <print_all_devices@@Base+0x21c>
   31e9c:	blx	85dc <free@plt+0x4>
   31ea0:	movs	r0, #7
   31ea2:	b.n	31e5a <print_all_devices@@Base+0x1d2>
   31ea4:	blx	85dc <free@plt+0x4>
   31ea8:	mov	r0, r5
   31eaa:	b.n	31e5a <print_all_devices@@Base+0x1d2>
   31eac:	movs	r0, #2
   31eae:	b.n	31e5a <print_all_devices@@Base+0x1d2>
   31eb0:	str	r4, [sp, #772]	; 0x304
   31eb2:	movs	r0, r0
   31eb4:	asrs	r2, r7, #8
   31eb6:	movs	r2, r0
   31eb8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31ebc:	sub.w	sp, sp, #4096	; 0x1000
   31ec0:	sub	sp, #20
   31ec2:	ldr	r1, [pc, #528]	; (320d4 <print_all_devices@@Base+0x44c>)
   31ec4:	mov	r6, r2
   31ec6:	mov	r7, r3
   31ec8:	ldr	r2, [pc, #524]	; (320d8 <print_all_devices@@Base+0x450>)
   31eca:	add.w	r3, sp, #4128	; 0x1020
   31ece:	add	r1, pc
   31ed0:	add.w	r8, sp, #16
   31ed4:	sub.w	r5, r8, #8
   31ed8:	ldr	r4, [r3, #24]
   31eda:	ldr	r2, [r1, r2]
   31edc:	adds	r3, #24
   31ede:	add.w	r3, sp, #4096	; 0x1000
   31ee2:	mov	r9, r0
   31ee4:	ldr	r2, [r2, #0]
   31ee6:	str	r2, [r3, #12]
   31ee8:	mov.w	r2, #0
   31eec:	mov	r0, r5
   31eee:	mov.w	r2, #4096	; 0x1000
   31ef2:	movs	r1, #0
   31ef4:	adds	r3, #12
   31ef6:	blx	8978 <memset@plt+0x4>
   31efa:	movs	r2, #1
   31efc:	movs	r3, #0
   31efe:	strd	r6, r7, [r5, #16]
   31f02:	strd	r2, r3, [r8, #-8]
   31f06:	mov.w	r2, #4294967295	; 0xffffffff
   31f0a:	mov.w	r3, #4294967295	; 0xffffffff
   31f0e:	strd	r6, r7, [r5, #8]
   31f12:	strd	r2, r3, [r5, #32]
   31f16:	strd	r2, r3, [r5, #48]	; 0x30
   31f1a:	movs	r2, #132	; 0x84
   31f1c:	movs	r3, #144	; 0x90
   31f1e:	strd	r2, r3, [r5, #56]	; 0x38
   31f22:	cbnz	r4, 31f76 <print_all_devices@@Base+0x2ee>
   31f24:	movs	r6, #0
   31f26:	movs	r3, #132	; 0x84
   31f28:	str	r3, [r5, #60]	; 0x3c
   31f2a:	ldr.w	fp, [pc, #432]	; 320dc <print_all_devices@@Base+0x454>
   31f2e:	movs	r2, #0
   31f30:	movs	r7, #1
   31f32:	mov	ip, r2
   31f34:	mov.w	sl, #4096	; 0x1000
   31f38:	ldr	r3, [r5, #64]	; 0x40
   31f3a:	cmp	r3, ip
   31f3c:	bhi.n	31fa6 <print_all_devices@@Base+0x31e>
   31f3e:	mov	r2, r5
   31f40:	mov	r1, fp
   31f42:	mov	r0, r9
   31f44:	str.w	sl, [r5, #64]	; 0x40
   31f48:	blx	8764 <ioctl@plt>
   31f4c:	adds	r0, #1
   31f4e:	beq.w	320c4 <print_all_devices@@Base+0x43c>
   31f52:	ldr	r3, [r5, #64]	; 0x40
   31f54:	cbnz	r3, 31fa2 <print_all_devices@@Base+0x31a>
   31f56:	cbnz	r7, 31f96 <print_all_devices@@Base+0x30e>
   31f58:	movs	r0, #0
   31f5a:	ldr	r1, [pc, #388]	; (320e0 <print_all_devices@@Base+0x458>)
   31f5c:	add.w	r3, sp, #4096	; 0x1000
   31f60:	ldr	r2, [pc, #372]	; (320d8 <print_all_devices@@Base+0x450>)
   31f62:	adds	r3, #12
   31f64:	add	r1, pc
   31f66:	ldr	r2, [r1, r2]
   31f68:	ldr	r1, [r2, #0]
   31f6a:	ldr	r2, [r3, #0]
   31f6c:	eors	r1, r2
   31f6e:	beq.w	320c8 <print_all_devices@@Base+0x440>
   31f72:	blx	86b8 <__stack_chk_fail@plt>
   31f76:	cmp	r7, #0
   31f78:	mov.w	r2, #0
   31f7c:	it	eq
   31f7e:	cmpeq	r6, #5
   31f80:	mov.w	r3, #0
   31f84:	strd	r6, r7, [r4]
   31f88:	strd	r2, r3, [r4, #8]
   31f8c:	strd	r2, r3, [r4, #16]
   31f90:	beq.n	31f24 <print_all_devices@@Base+0x29c>
   31f92:	movs	r6, #1
   31f94:	b.n	31f2a <print_all_devices@@Base+0x2a2>
   31f96:	blx	8938 <__errno_location@plt>
   31f9a:	movs	r3, #2
   31f9c:	str	r3, [r0, #0]
   31f9e:	movs	r0, #6
   31fa0:	b.n	31f5a <print_all_devices@@Base+0x2d2>
   31fa2:	movs	r2, #0
   31fa4:	mov	ip, r2
   31fa6:	add	r3, sp, #112	; 0x70
   31fa8:	add	r3, r2
   31faa:	ldr	r1, [r3, #24]
   31fac:	cmp	r1, #132	; 0x84
   31fae:	bne.n	32096 <print_all_devices@@Base+0x40e>
   31fb0:	cmp	r4, #0
   31fb2:	beq.n	32078 <print_all_devices@@Base+0x3f0>
   31fb4:	ldr.w	r0, [r3, #240]	; 0xf0
   31fb8:	addw	r7, r3, #295	; 0x127
   31fbc:	ldr.w	r1, [r3, #244]	; 0xf4
   31fc0:	strd	r0, r1, [r4, #24]
   31fc4:	addw	r1, r3, #279	; 0x117
   31fc8:	add.w	r0, r4, #32
   31fcc:	ldr.w	lr, [r1], #4
   31fd0:	cmp	r1, r7
   31fd2:	str.w	lr, [r0], #4
   31fd6:	bne.n	31fcc <print_all_devices@@Base+0x344>
   31fd8:	add.w	r0, r4, #48	; 0x30
   31fdc:	addw	r7, r3, #311	; 0x137
   31fe0:	ldr.w	lr, [r1], #4
   31fe4:	cmp	r1, r7
   31fe6:	str.w	lr, [r0], #4
   31fea:	bne.n	31fe0 <print_all_devices@@Base+0x358>
   31fec:	add.w	r0, r4, #64	; 0x40
   31ff0:	addw	r7, r3, #327	; 0x147
   31ff4:	ldr.w	lr, [r1], #4
   31ff8:	cmp	r1, r7
   31ffa:	str.w	lr, [r0], #4
   31ffe:	bne.n	31ff4 <print_all_devices@@Base+0x36c>
   32000:	ldr.w	r0, [r3, #192]	; 0xc0
   32004:	ldr.w	r1, [r3, #196]	; 0xc4
   32008:	strd	r0, r1, [r4, #80]	; 0x50
   3200c:	ldr.w	r0, [r3, #327]	; 0x147
   32010:	ldr.w	r1, [r3, #331]	; 0x14b
   32014:	strd	r0, r1, [r4, #88]	; 0x58
   32018:	ldr.w	r0, [r3, #335]	; 0x14f
   3201c:	ldr.w	r1, [r3, #339]	; 0x153
   32020:	strd	r0, r1, [r4, #96]	; 0x60
   32024:	ldr.w	r0, [r3, #343]	; 0x157
   32028:	ldr.w	r1, [r3, #347]	; 0x15b
   3202c:	strd	r0, r1, [r4, #104]	; 0x68
   32030:	ldr.w	r1, [r3, #355]	; 0x163
   32034:	ldr.w	r0, [r3, #351]	; 0x15f
   32038:	strd	r0, r1, [r4, #112]	; 0x70
   3203c:	ldr.w	r1, [r3, #359]	; 0x167
   32040:	str	r1, [r4, #120]	; 0x78
   32042:	ldr.w	r1, [r3, #367]	; 0x16f
   32046:	str	r1, [r4, #124]	; 0x7c
   32048:	ldr.w	r1, [r3, #371]	; 0x173
   3204c:	str.w	r1, [r4, #128]	; 0x80
   32050:	ldr.w	r1, [r3, #379]	; 0x17b
   32054:	str.w	r1, [r4, #132]	; 0x84
   32058:	ldr.w	r1, [r3, #383]	; 0x17f
   3205c:	str.w	r1, [r4, #136]	; 0x88
   32060:	ldr.w	r1, [r3, #391]	; 0x187
   32064:	str.w	r1, [r4, #140]	; 0x8c
   32068:	ldr.w	r1, [r3, #395]	; 0x18b
   3206c:	str.w	r1, [r4, #144]	; 0x90
   32070:	ldr.w	r1, [r3, #403]	; 0x193
   32074:	str.w	r1, [r4, #148]	; 0x94
   32078:	movs	r7, #0
   3207a:	movs	r1, #144	; 0x90
   3207c:	str	r1, [r5, #56]	; 0x38
   3207e:	ldr	r3, [r3, #28]
   32080:	adds	r2, #32
   32082:	add.w	ip, ip, #1
   32086:	add	r2, r3
   32088:	cmp	r7, #0
   3208a:	bne.w	31f38 <print_all_devices@@Base+0x2b0>
   3208e:	cmp	r6, #0
   32090:	bne.w	31f38 <print_all_devices@@Base+0x2b0>
   32094:	b.n	31f58 <print_all_devices@@Base+0x2d0>
   32096:	cmp	r1, #144	; 0x90
   32098:	bne.n	3207e <print_all_devices@@Base+0x3f6>
   3209a:	cbz	r4, 320ba <print_all_devices@@Base+0x432>
   3209c:	mov	r1, r3
   3209e:	sub.w	r6, r8, #16
   320a2:	ldr.w	r0, [r1, #16]!
   320a6:	ldr	r1, [r1, #4]
   320a8:	stmia	r6!, {r0, r1}
   320aa:	ldrd	r0, r1, [r8, #-16]
   320ae:	strd	r0, r1, [r4, #8]
   320b2:	ldr	r0, [r3, #32]
   320b4:	ldr	r1, [r3, #36]	; 0x24
   320b6:	strd	r0, r1, [r4, #16]
   320ba:	mov.w	r1, #4294967295	; 0xffffffff
   320be:	movs	r6, #0
   320c0:	str	r1, [r5, #56]	; 0x38
   320c2:	b.n	3207e <print_all_devices@@Base+0x3f6>
   320c4:	movs	r0, #12
   320c6:	b.n	31f5a <print_all_devices@@Base+0x2d2>
   320c8:	add.w	sp, sp, #4096	; 0x1000
   320cc:	add	sp, #20
   320ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   320d2:	nop
   320d4:	cmp	r6, #186	; 0xba
   320d6:	movs	r3, r0
   320d8:	lsls	r4, r4, #8
   320da:	movs	r0, r0
   320dc:	str	r4, [sp, #68]	; 0x44
   320de:	beq.n	320e2 <print_all_devices@@Base+0x45a>
   320e0:	cmp	r6, #36	; 0x24
   320e2:	movs	r3, r0
   320e4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   320e8:	mov	r9, r3
   320ea:	ldr	r3, [r0, #20]
   320ec:	mov	r5, r2
   320ee:	movw	r2, #4112	; 0x1010
   320f2:	ldr	r6, [sp, #40]	; 0x28
   320f4:	mov	r4, r0
   320f6:	mov	r8, r1
   320f8:	muls	r2, r3
   320fa:	ldr	r3, [r0, #16]
   320fc:	sub.w	r2, r2, #4096	; 0x1000
   32100:	subs	r2, #16
   32102:	add.w	sl, r3, r2
   32106:	movw	r3, #4108	; 0x100c
   3210a:	ldr.w	r3, [sl, r3]
   3210e:	cbz	r3, 32184 <print_all_devices@@Base+0x4fc>
   32110:	cbz	r6, 32184 <print_all_devices@@Base+0x4fc>
   32112:	adds	r2, r3, #1
   32114:	adds	r7, r2, r6
   32116:	cbz	r3, 3211e <print_all_devices@@Base+0x496>
   32118:	cbnz	r6, 3211e <print_all_devices@@Base+0x496>
   3211a:	cbz	r5, 3211e <print_all_devices@@Base+0x496>
   3211c:	adds	r7, r2, #1
   3211e:	ldr	r3, [r4, #32]
   32120:	add	r7, r5
   32122:	add.w	fp, r7, #1
   32126:	cmp	fp, r3
   32128:	bls.n	32138 <print_all_devices@@Base+0x4b0>
   3212a:	ldr	r0, [r4, #28]
   3212c:	mov	r1, fp
   3212e:	blx	86d4 <realloc@plt+0x4>
   32132:	cbz	r0, 32188 <print_all_devices@@Base+0x500>
   32134:	strd	r0, fp, [r4, #28]
   32138:	movw	r3, #4108	; 0x100c
   3213c:	ldr	r1, [r4, #28]
   3213e:	ldr.w	r2, [sl, r3]
   32142:	adds	r3, r1, r2
   32144:	cbz	r2, 3214e <print_all_devices@@Base+0x4c6>
   32146:	cbz	r6, 3214e <print_all_devices@@Base+0x4c6>
   32148:	adds	r3, #1
   3214a:	movs	r0, #47	; 0x2f
   3214c:	strb	r0, [r1, r2]
   3214e:	mov	r2, r6
   32150:	mov	r1, r9
   32152:	mov	r0, r3
   32154:	blx	8628 <memcpy@plt+0x4>
   32158:	movw	r2, #4108	; 0x100c
   3215c:	ldr.w	r2, [sl, r2]
   32160:	adds	r4, r0, r6
   32162:	cbz	r2, 3216e <print_all_devices@@Base+0x4e6>
   32164:	cbnz	r6, 3216e <print_all_devices@@Base+0x4e6>
   32166:	cbz	r5, 3216e <print_all_devices@@Base+0x4e6>
   32168:	movs	r2, #47	; 0x2f
   3216a:	strb	r2, [r4, #0]
   3216c:	adds	r4, r0, #1
   3216e:	mov	r2, r5
   32170:	mov	r1, r8
   32172:	mov	r0, r4
   32174:	blx	8628 <memcpy@plt+0x4>
   32178:	ldr	r3, [sp, #44]	; 0x2c
   3217a:	movs	r0, #0
   3217c:	strb	r0, [r4, r5]
   3217e:	str	r7, [r3, #0]
   32180:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32184:	mov	r2, r3
   32186:	b.n	32114 <print_all_devices@@Base+0x48c>
   32188:	movs	r0, #2
   3218a:	b.n	32180 <print_all_devices@@Base+0x4f8>
   3218c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   32190:	mov	r4, r1
   32192:	ldr	r1, [pc, #172]	; (32240 <print_all_devices@@Base+0x5b8>)
   32194:	sub.w	sp, sp, #4128	; 0x1020
   32198:	mov	r5, r2
   3219a:	ldr	r2, [pc, #168]	; (32244 <print_all_devices@@Base+0x5bc>)
   3219c:	add	r1, pc
   3219e:	mov	r9, r3
   321a0:	add.w	r3, sp, #4160	; 0x1040
   321a4:	add	r7, sp, #24
   321a6:	ldr	r2, [r1, r2]
   321a8:	mov	r6, r0
   321aa:	ldr.w	sl, [r3]
   321ae:	add.w	r3, sp, #4096	; 0x1000
   321b2:	ldr	r2, [r2, #0]
   321b4:	str	r2, [r3, #28]
   321b6:	mov.w	r2, #0
   321ba:	mov	r0, r7
   321bc:	mov.w	r2, #4096	; 0x1000
   321c0:	movs	r1, #0
   321c2:	adds	r3, #28
   321c4:	blx	8978 <memset@plt+0x4>
   321c8:	mov	r1, r4
   321ca:	add.w	r8, sp, #32
   321ce:	ldr.w	r0, [r1, #8]!
   321d2:	sub.w	r3, r8, #16
   321d6:	ldr	r1, [r1, #4]
   321d8:	stmia	r3!, {r0, r1}
   321da:	ldrd	r2, r3, [r8, #-16]
   321de:	ldr	r1, [pc, #92]	; (3223c <print_all_devices@@Base+0x5b4>)
   321e0:	ldr	r0, [r6, #4]
   321e2:	strd	r2, r3, [r8, #-8]
   321e6:	ldr	r2, [r5, #0]
   321e8:	ldr	r3, [r5, #4]
   321ea:	str	r2, [r7, #8]
   321ec:	mov	r2, r7
   321ee:	str.w	r3, [r8, #4]
   321f2:	blx	8764 <ioctl@plt>
   321f6:	adds	r0, #1
   321f8:	beq.n	3222e <print_all_devices@@Base+0x5a6>
   321fa:	add	r3, sp, #40	; 0x28
   321fc:	str	r3, [sp, #12]
   321fe:	mov	r0, r3
   32200:	blx	88f0 <strlen@plt>
   32204:	ldr	r3, [sp, #12]
   32206:	ldrh	r2, [r5, #16]
   32208:	mov	r1, r9
   3220a:	strd	r0, sl, [sp]
   3220e:	mov	r0, r6
   32210:	bl	320e4 <print_all_devices@@Base+0x45c>
   32214:	ldr	r1, [pc, #48]	; (32248 <print_all_devices@@Base+0x5c0>)
   32216:	add.w	r3, sp, #4096	; 0x1000
   3221a:	ldr	r2, [pc, #40]	; (32244 <print_all_devices@@Base+0x5bc>)
   3221c:	adds	r3, #28
   3221e:	add	r1, pc
   32220:	ldr	r2, [r1, r2]
   32222:	ldr	r1, [r2, #0]
   32224:	ldr	r2, [r3, #0]
   32226:	eors	r1, r2
   32228:	beq.n	32232 <print_all_devices@@Base+0x5aa>
   3222a:	blx	86b8 <__stack_chk_fail@plt>
   3222e:	movs	r0, #13
   32230:	b.n	32214 <print_all_devices@@Base+0x58c>
   32232:	add.w	sp, sp, #4128	; 0x1020
   32236:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3223a:	nop
   3223c:	str	r4, [sp, #72]	; 0x48
   3223e:	beq.n	32242 <print_all_devices@@Base+0x5ba>
   32240:	cmp	r3, #236	; 0xec
   32242:	movs	r3, r0
   32244:	lsls	r4, r4, #8
   32246:	movs	r0, r0
   32248:	cmp	r3, #106	; 0x6a
   3224a:	movs	r3, r0
   3224c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32250:	sub.w	sp, sp, #4128	; 0x1020
   32254:	sub	sp, #4
   32256:	ldr	r1, [pc, #168]	; (32300 <print_all_devices@@Base+0x678>)
   32258:	mov	r7, r2
   3225a:	mov	r6, r3
   3225c:	ldr	r2, [pc, #164]	; (32304 <print_all_devices@@Base+0x67c>)
   3225e:	add.w	r3, sp, #4160	; 0x1040
   32262:	add	r1, pc
   32264:	add	r5, sp, #24
   32266:	ldr.w	r8, [r3, #8]
   3226a:	adds	r3, #8
   3226c:	ldr	r2, [r1, r2]
   3226e:	add.w	r3, sp, #4096	; 0x1000
   32272:	mov	r4, r0
   32274:	mov	r0, r5
   32276:	ldr	r2, [r2, #0]
   32278:	str	r2, [r3, #28]
   3227a:	mov.w	r2, #0
   3227e:	movs	r1, #0
   32280:	mov.w	r2, #4096	; 0x1000
   32284:	adds	r3, #28
   32286:	blx	8978 <memset@plt+0x4>
   3228a:	add.w	r3, sp, #4160	; 0x1040
   3228e:	ldr	r1, [pc, #108]	; (322fc <print_all_devices@@Base+0x674>)
   32290:	add.w	r9, sp, #32
   32294:	ldrd	r2, r3, [r3]
   32298:	ldr	r0, [r4, #8]
   3229a:	str	r7, [r5, #8]
   3229c:	strd	r2, r3, [r9, #-8]
   322a0:	mov	r2, r5
   322a2:	str.w	r6, [r9, #4]
   322a6:	blx	8764 <ioctl@plt>
   322aa:	adds	r0, #1
   322ac:	beq.n	322ee <print_all_devices@@Base+0x666>
   322ae:	add	r1, sp, #40	; 0x28
   322b0:	str	r1, [sp, #20]
   322b2:	mov	r0, r1
   322b4:	blx	88f0 <strlen@plt>
   322b8:	add	r3, sp, #296	; 0x128
   322ba:	str	r3, [sp, #12]
   322bc:	str	r0, [sp, #16]
   322be:	mov	r0, r3
   322c0:	blx	88f0 <strlen@plt>
   322c4:	ldrd	r3, r2, [sp, #12]
   322c8:	ldr	r1, [sp, #20]
   322ca:	strd	r0, r8, [sp]
   322ce:	mov	r0, r4
   322d0:	bl	320e4 <print_all_devices@@Base+0x45c>
   322d4:	ldr	r1, [pc, #48]	; (32308 <print_all_devices@@Base+0x680>)
   322d6:	add.w	r3, sp, #4096	; 0x1000
   322da:	ldr	r2, [pc, #40]	; (32304 <print_all_devices@@Base+0x67c>)
   322dc:	adds	r3, #28
   322de:	add	r1, pc
   322e0:	ldr	r2, [r1, r2]
   322e2:	ldr	r1, [r2, #0]
   322e4:	ldr	r2, [r3, #0]
   322e6:	eors	r1, r2
   322e8:	beq.n	322f2 <print_all_devices@@Base+0x66a>
   322ea:	blx	86b8 <__stack_chk_fail@plt>
   322ee:	movs	r0, #25
   322f0:	b.n	322d4 <print_all_devices@@Base+0x64c>
   322f2:	add.w	sp, sp, #4128	; 0x1020
   322f6:	add	sp, #4
   322f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   322fc:	str	r4, [sp, #248]	; 0xf8
   322fe:	beq.n	32302 <print_all_devices@@Base+0x67a>
   32300:	cmp	r3, #38	; 0x26
   32302:	movs	r3, r0
   32304:	lsls	r4, r4, #8
   32306:	movs	r0, r0
   32308:	cmp	r2, #170	; 0xaa
   3230a:	movs	r3, r0
   3230c:	ldrb	r1, [r0, #0]
   3230e:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32312:	mov	r4, r0
   32314:	ldr	r3, [r0, #20]
   32316:	subs	r2, r3, #1
   32318:	cbnz	r1, 3231e <print_all_devices@@Base+0x696>
   3231a:	cmp	r3, #1
   3231c:	bne.n	32326 <print_all_devices@@Base+0x69e>
   3231e:	str	r2, [r4, #20]
   32320:	movs	r0, #0
   32322:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32326:	ldr	r1, [r0, #16]
   32328:	movw	r0, #4112	; 0x1010
   3232c:	str	r2, [r4, #20]
   3232e:	ldr.w	sl, [pc, #108]	; 3239c <print_all_devices@@Base+0x714>
   32332:	mla	r2, r0, r2, r1
   32336:	ldr	r6, [r4, #8]
   32338:	mla	r3, r0, r3, r1
   3233c:	add	sl, pc
   3233e:	ldr.w	r7, [r2, #-4]
   32342:	subs	r5, r3, #4
   32344:	ldr	r3, [r5, #0]
   32346:	cmp	r3, r7
   32348:	bhi.n	3235a <print_all_devices@@Base+0x6d2>
   3234a:	ldrd	r3, r0, [r4, #4]
   3234e:	cmp	r0, r3
   32350:	beq.n	32356 <print_all_devices@@Base+0x6ce>
   32352:	blx	8b4c <close@plt>
   32356:	str	r6, [r4, #8]
   32358:	b.n	32320 <print_all_devices@@Base+0x698>
   3235a:	cbz	r7, 32364 <print_all_devices@@Base+0x6dc>
   3235c:	ldr	r3, [r4, #28]
   3235e:	ldrb	r3, [r3, r7]
   32360:	cmp	r3, #47	; 0x2f
   32362:	bne.n	32392 <print_all_devices@@Base+0x70a>
   32364:	movs	r2, #0
   32366:	mov	r1, sl
   32368:	mov	r0, r6
   3236a:	blx	86ac <openat@plt>
   3236e:	ldr	r3, [r4, #8]
   32370:	cmp	r3, r6
   32372:	mov	r8, r0
   32374:	beq.n	3238a <print_all_devices@@Base+0x702>
   32376:	blx	8938 <__errno_location@plt>
   3237a:	ldr.w	fp, [r0]
   3237e:	mov	r9, r0
   32380:	mov	r0, r6
   32382:	blx	8b4c <close@plt>
   32386:	str.w	fp, [r9]
   3238a:	cmp.w	r8, #4294967295	; 0xffffffff
   3238e:	beq.n	32396 <print_all_devices@@Base+0x70e>
   32390:	mov	r6, r8
   32392:	adds	r7, #1
   32394:	b.n	32344 <print_all_devices@@Base+0x6bc>
   32396:	movs	r0, #7
   32398:	b.n	32322 <print_all_devices@@Base+0x69a>
   3239a:	nop
   3239c:	lsrs	r7, r5, #21
   3239e:	movs	r2, r0

000323a0 <btrfs_util_is_subvolume@@Base>:
   323a0:	ldr	r2, [pc, #132]	; (32428 <btrfs_util_is_subvolume@@Base+0x88>)
   323a2:	ldr	r3, [pc, #136]	; (3242c <btrfs_util_is_subvolume@@Base+0x8c>)
   323a4:	add	r2, pc
   323a6:	push	{r4, lr}
   323a8:	sub	sp, #160	; 0xa0
   323aa:	ldr	r3, [r2, r3]
   323ac:	add	r1, sp, #92	; 0x5c
   323ae:	mov	r4, r0
   323b0:	ldr	r3, [r3, #0]
   323b2:	str	r3, [sp, #156]	; 0x9c
   323b4:	mov.w	r3, #0
   323b8:	blx	8600 <statfs@plt>
   323bc:	adds	r0, #1
   323be:	beq.n	32412 <btrfs_util_is_subvolume@@Base+0x72>
   323c0:	ldr	r3, [pc, #96]	; (32424 <btrfs_util_is_subvolume@@Base+0x84>)
   323c2:	ldr	r2, [sp, #92]	; 0x5c
   323c4:	cmp	r2, r3
   323c6:	beq.n	323e6 <btrfs_util_is_subvolume@@Base+0x46>
   323c8:	blx	8938 <__errno_location@plt>
   323cc:	movs	r3, #22
   323ce:	str	r3, [r0, #0]
   323d0:	movs	r0, #4
   323d2:	ldr	r2, [pc, #92]	; (32430 <btrfs_util_is_subvolume@@Base+0x90>)
   323d4:	ldr	r3, [pc, #84]	; (3242c <btrfs_util_is_subvolume@@Base+0x8c>)
   323d6:	add	r2, pc
   323d8:	ldr	r3, [r2, r3]
   323da:	ldr	r2, [r3, #0]
   323dc:	ldr	r3, [sp, #156]	; 0x9c
   323de:	eors	r2, r3
   323e0:	beq.n	3241e <btrfs_util_is_subvolume@@Base+0x7e>
   323e2:	blx	86b8 <__stack_chk_fail@plt>
   323e6:	mov	r1, sp
   323e8:	mov	r0, r4
   323ea:	bl	39648 <__libc_csu_fini@@Base+0x4>
   323ee:	adds	r0, #1
   323f0:	beq.n	32416 <btrfs_util_is_subvolume@@Base+0x76>
   323f2:	ldr	r3, [sp, #12]
   323f4:	cmp.w	r3, #256	; 0x100
   323f8:	bne.n	32406 <btrfs_util_is_subvolume@@Base+0x66>
   323fa:	ldr	r3, [sp, #16]
   323fc:	and.w	r3, r3, #61440	; 0xf000
   32400:	cmp.w	r3, #16384	; 0x4000
   32404:	beq.n	3241a <btrfs_util_is_subvolume@@Base+0x7a>
   32406:	blx	8938 <__errno_location@plt>
   3240a:	movs	r3, #22
   3240c:	str	r3, [r0, #0]
   3240e:	movs	r0, #5
   32410:	b.n	323d2 <btrfs_util_is_subvolume@@Base+0x32>
   32412:	movs	r0, #11
   32414:	b.n	323d2 <btrfs_util_is_subvolume@@Base+0x32>
   32416:	movs	r0, #10
   32418:	b.n	323d2 <btrfs_util_is_subvolume@@Base+0x32>
   3241a:	movs	r0, #0
   3241c:	b.n	323d2 <btrfs_util_is_subvolume@@Base+0x32>
   3241e:	add	sp, #160	; 0xa0
   32420:	pop	{r4, pc}
   32422:	nop
   32424:	ldr	r6, [r7, #0]
   32426:	str	r1, [sp, #140]	; 0x8c
   32428:	cmp	r1, #228	; 0xe4
   3242a:	movs	r3, r0
   3242c:	lsls	r4, r4, #8
   3242e:	movs	r0, r0
   32430:	cmp	r1, #178	; 0xb2
   32432:	movs	r3, r0

00032434 <btrfs_util_is_subvolume_fd@@Base>:
   32434:	ldr	r2, [pc, #132]	; (324bc <btrfs_util_is_subvolume_fd@@Base+0x88>)
   32436:	ldr	r3, [pc, #136]	; (324c0 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   32438:	add	r2, pc
   3243a:	push	{r4, lr}
   3243c:	sub	sp, #160	; 0xa0
   3243e:	ldr	r3, [r2, r3]
   32440:	add	r1, sp, #92	; 0x5c
   32442:	mov	r4, r0
   32444:	ldr	r3, [r3, #0]
   32446:	str	r3, [sp, #156]	; 0x9c
   32448:	mov.w	r3, #0
   3244c:	blx	89f8 <fstatfs@plt>
   32450:	adds	r0, #1
   32452:	beq.n	324a6 <btrfs_util_is_subvolume_fd@@Base+0x72>
   32454:	ldr	r3, [pc, #96]	; (324b8 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   32456:	ldr	r2, [sp, #92]	; 0x5c
   32458:	cmp	r2, r3
   3245a:	beq.n	3247a <btrfs_util_is_subvolume_fd@@Base+0x46>
   3245c:	blx	8938 <__errno_location@plt>
   32460:	movs	r3, #22
   32462:	str	r3, [r0, #0]
   32464:	movs	r0, #4
   32466:	ldr	r2, [pc, #92]	; (324c4 <btrfs_util_is_subvolume_fd@@Base+0x90>)
   32468:	ldr	r3, [pc, #84]	; (324c0 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   3246a:	add	r2, pc
   3246c:	ldr	r3, [r2, r3]
   3246e:	ldr	r2, [r3, #0]
   32470:	ldr	r3, [sp, #156]	; 0x9c
   32472:	eors	r2, r3
   32474:	beq.n	324b2 <btrfs_util_is_subvolume_fd@@Base+0x7e>
   32476:	blx	86b8 <__stack_chk_fail@plt>
   3247a:	mov	r1, sp
   3247c:	mov	r0, r4
   3247e:	bl	39654 <__libc_csu_fini@@Base+0x10>
   32482:	adds	r0, #1
   32484:	beq.n	324aa <btrfs_util_is_subvolume_fd@@Base+0x76>
   32486:	ldr	r3, [sp, #12]
   32488:	cmp.w	r3, #256	; 0x100
   3248c:	bne.n	3249a <btrfs_util_is_subvolume_fd@@Base+0x66>
   3248e:	ldr	r3, [sp, #16]
   32490:	and.w	r3, r3, #61440	; 0xf000
   32494:	cmp.w	r3, #16384	; 0x4000
   32498:	beq.n	324ae <btrfs_util_is_subvolume_fd@@Base+0x7a>
   3249a:	blx	8938 <__errno_location@plt>
   3249e:	movs	r3, #22
   324a0:	str	r3, [r0, #0]
   324a2:	movs	r0, #5
   324a4:	b.n	32466 <btrfs_util_is_subvolume_fd@@Base+0x32>
   324a6:	movs	r0, #11
   324a8:	b.n	32466 <btrfs_util_is_subvolume_fd@@Base+0x32>
   324aa:	movs	r0, #10
   324ac:	b.n	32466 <btrfs_util_is_subvolume_fd@@Base+0x32>
   324ae:	movs	r0, #0
   324b0:	b.n	32466 <btrfs_util_is_subvolume_fd@@Base+0x32>
   324b2:	add	sp, #160	; 0xa0
   324b4:	pop	{r4, pc}
   324b6:	nop
   324b8:	ldr	r6, [r7, #0]
   324ba:	str	r1, [sp, #140]	; 0x8c
   324bc:	cmp	r1, #80	; 0x50
   324be:	movs	r3, r0
   324c0:	lsls	r4, r4, #8
   324c2:	movs	r0, r0
   324c4:	cmp	r1, #30
   324c6:	movs	r3, r0

000324c8 <btrfs_util_subvolume_id_fd@@Base>:
   324c8:	push	{r4, r5, r6, lr}
   324ca:	mov	r4, r1
   324cc:	ldr	r1, [pc, #120]	; (32548 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   324ce:	sub.w	sp, sp, #4096	; 0x1000
   324d2:	ldr	r2, [pc, #120]	; (3254c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   324d4:	sub	sp, #8
   324d6:	add	r1, pc
   324d8:	add.w	r3, sp, #4096	; 0x1000
   324dc:	adds	r3, #4
   324de:	mov	r5, r0
   324e0:	ldr	r2, [r1, r2]
   324e2:	movs	r1, #0
   324e4:	add	r6, sp, #8
   324e6:	ldr	r2, [r2, #0]
   324e8:	str	r2, [r3, #0]
   324ea:	mov.w	r2, #0
   324ee:	mov	r3, sp
   324f0:	mov.w	r2, #4096	; 0x1000
   324f4:	mov	r0, r3
   324f6:	blx	8978 <memset@plt+0x4>
   324fa:	movs	r1, #0
   324fc:	mov	r3, r0
   324fe:	mov.w	r0, #256	; 0x100
   32502:	mov	r2, r3
   32504:	strd	r0, r1, [r3, #8]
   32508:	ldr	r1, [pc, #56]	; (32544 <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   3250a:	mov	r0, r5
   3250c:	blx	8764 <ioctl@plt>
   32510:	ldr	r1, [pc, #60]	; (32550 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   32512:	add	r1, pc
   32514:	adds	r0, #1
   32516:	ittet	ne
   32518:	ldrdne	r2, r3, [r6, #-8]
   3251c:	movne	r0, #0
   3251e:	moveq	r0, #13
   32520:	strdne	r2, r3, [r4]
   32524:	add.w	r3, sp, #4096	; 0x1000
   32528:	ldr	r2, [pc, #32]	; (3254c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   3252a:	adds	r3, #4
   3252c:	ldr	r2, [r1, r2]
   3252e:	ldr	r1, [r2, #0]
   32530:	ldr	r2, [r3, #0]
   32532:	eors	r1, r2
   32534:	beq.n	3253a <btrfs_util_subvolume_id_fd@@Base+0x72>
   32536:	blx	86b8 <__stack_chk_fail@plt>
   3253a:	add.w	sp, sp, #4096	; 0x1000
   3253e:	add	sp, #8
   32540:	pop	{r4, r5, r6, pc}
   32542:	nop
   32544:	str	r4, [sp, #72]	; 0x48
   32546:	beq.n	3254a <btrfs_util_subvolume_id_fd@@Base+0x82>
   32548:	cmp	r0, #178	; 0xb2
   3254a:	movs	r3, r0
   3254c:	lsls	r4, r4, #8
   3254e:	movs	r0, r0
   32550:	cmp	r0, #118	; 0x76
   32552:	movs	r3, r0

00032554 <btrfs_util_subvolume_id@@Base>:
   32554:	push	{r3, r4, r5, r6, r7, lr}
   32556:	mov	r4, r1
   32558:	movs	r1, #0
   3255a:	blx	88a8 <open@plt>
   3255e:	adds	r3, r0, #1
   32560:	mov	r6, r0
   32562:	beq.n	32580 <btrfs_util_subvolume_id@@Base+0x2c>
   32564:	mov	r1, r4
   32566:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   3256a:	mov	r4, r0
   3256c:	blx	8938 <__errno_location@plt>
   32570:	ldr	r7, [r0, #0]
   32572:	mov	r5, r0
   32574:	mov	r0, r6
   32576:	blx	8b4c <close@plt>
   3257a:	str	r7, [r5, #0]
   3257c:	mov	r0, r4
   3257e:	pop	{r3, r4, r5, r6, r7, pc}
   32580:	movs	r4, #7
   32582:	b.n	3257c <btrfs_util_subvolume_id@@Base+0x28>
   32584:	push	{r4, r5, r6, r7, lr}
   32586:	mov	r4, r2
   32588:	ldr	r2, [pc, #156]	; (32628 <btrfs_util_subvolume_id@@Base+0xd4>)
   3258a:	mov	r5, r3
   3258c:	ldr	r3, [pc, #156]	; (3262c <btrfs_util_subvolume_id@@Base+0xd8>)
   3258e:	subw	sp, sp, #2068	; 0x814
   32592:	add	r2, pc
   32594:	mov	r6, r0
   32596:	mov	r7, r1
   32598:	ldr	r3, [r2, r3]
   3259a:	ldr	r3, [r3, #0]
   3259c:	str.w	r3, [sp, #2060]	; 0x80c
   325a0:	mov.w	r3, #0
   325a4:	bl	32434 <btrfs_util_is_subvolume_fd@@Base>
   325a8:	subs	r3, r0, #4
   325aa:	cmp	r3, #1
   325ac:	bhi.n	325ba <btrfs_util_subvolume_id@@Base+0x66>
   325ae:	blx	8938 <__errno_location@plt>
   325b2:	movs	r3, #2
   325b4:	str	r3, [r0, #0]
   325b6:	movs	r0, #6
   325b8:	b.n	325cc <btrfs_util_subvolume_id@@Base+0x78>
   325ba:	cbnz	r0, 325cc <btrfs_util_subvolume_id@@Base+0x78>
   325bc:	ldr	r1, [pc, #100]	; (32624 <btrfs_util_subvolume_id@@Base+0xd0>)
   325be:	add	r2, sp, #8
   325c0:	mov	r0, r7
   325c2:	blx	8764 <ioctl@plt>
   325c6:	adds	r0, #1
   325c8:	bne.n	325e2 <btrfs_util_subvolume_id@@Base+0x8e>
   325ca:	movs	r0, #26
   325cc:	ldr	r2, [pc, #96]	; (32630 <btrfs_util_subvolume_id@@Base+0xdc>)
   325ce:	ldr	r3, [pc, #92]	; (3262c <btrfs_util_subvolume_id@@Base+0xd8>)
   325d0:	add	r2, pc
   325d2:	ldr	r3, [r2, r3]
   325d4:	ldr	r2, [r3, #0]
   325d6:	ldr.w	r3, [sp, #2060]	; 0x80c
   325da:	eors	r2, r3
   325dc:	beq.n	3261e <btrfs_util_subvolume_id@@Base+0xca>
   325de:	blx	86b8 <__stack_chk_fail@plt>
   325e2:	ldr	r1, [pc, #64]	; (32624 <btrfs_util_subvolume_id@@Base+0xd0>)
   325e4:	add.w	r2, sp, #1032	; 0x408
   325e8:	mov	r0, r6
   325ea:	blx	8764 <ioctl@plt>
   325ee:	adds	r0, #1
   325f0:	beq.n	325ca <btrfs_util_subvolume_id@@Base+0x76>
   325f2:	add.w	r1, sp, #1048	; 0x418
   325f6:	add	r0, sp, #24
   325f8:	movs	r2, #16
   325fa:	blx	8650 <memcmp@plt+0x4>
   325fe:	cmp	r0, #0
   32600:	bne.n	325ae <btrfs_util_subvolume_id@@Base+0x5a>
   32602:	mov	r7, sp
   32604:	mov	r0, r6
   32606:	mov	r1, r7
   32608:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   3260c:	cmp	r0, #0
   3260e:	bne.n	325cc <btrfs_util_subvolume_id@@Base+0x78>
   32610:	ldrd	r2, r3, [r7]
   32614:	cmp	r3, r5
   32616:	it	eq
   32618:	cmpeq	r2, r4
   3261a:	beq.n	325cc <btrfs_util_subvolume_id@@Base+0x78>
   3261c:	b.n	325ae <btrfs_util_subvolume_id@@Base+0x5a>
   3261e:	addw	sp, sp, #2068	; 0x814
   32622:	pop	{r4, r5, r6, r7, pc}
   32624:	str	r4, [sp, #124]	; 0x7c
   32626:	strh	r0, [r0, #32]
   32628:	movs	r7, #246	; 0xf6
   3262a:	movs	r3, r0
   3262c:	lsls	r4, r4, #8
   3262e:	movs	r0, r0
   32630:	movs	r7, #184	; 0xb8
   32632:	movs	r3, r0
   32634:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   32638:	mov	r6, r3
   3263a:	ldrd	r3, r5, [r0, #20]
   3263e:	mov	r4, r0
   32640:	mov	r7, r2
   32642:	cmp	r3, r5
   32644:	bcc.n	3265c <btrfs_util_subvolume_id@@Base+0x108>
   32646:	lsls	r5, r5, #1
   32648:	ldr	r0, [r0, #16]
   3264a:	movw	r2, #4112	; 0x1010
   3264e:	mov	r1, r5
   32650:	bl	33a10 <btrfs_util_deleted_subvolumes@@Base+0x38>
   32654:	cmp	r0, #0
   32656:	beq.n	32714 <btrfs_util_subvolume_id@@Base+0x1c0>
   32658:	str	r5, [r4, #24]
   3265a:	str	r0, [r4, #16]
   3265c:	ldr	r3, [r4, #16]
   3265e:	movw	r8, #4112	; 0x1010
   32662:	ldr	r5, [r4, #20]
   32664:	mov	r2, r8
   32666:	movs	r1, #0
   32668:	mla	r5, r8, r5, r3
   3266c:	mov	r0, r5
   3266e:	blx	8978 <memset@plt+0x4>
   32672:	ldr	r2, [sp, #24]
   32674:	movw	r3, #4108	; 0x100c
   32678:	str	r2, [r5, r3]
   3267a:	ldrb	r3, [r4, #0]
   3267c:	cbz	r3, 326be <btrfs_util_subvolume_id@@Base+0x16a>
   3267e:	movs	r2, #1
   32680:	movs	r3, #0
   32682:	movs	r0, #0
   32684:	movs	r1, #0
   32686:	strd	r2, r3, [r5]
   3268a:	movs	r3, #156	; 0x9c
   3268c:	mov.w	r2, #4294967295	; 0xffffffff
   32690:	strd	r3, r3, [r5, #56]	; 0x38
   32694:	strd	r7, r6, [r5, #8]
   32698:	mov.w	r3, #4294967295	; 0xffffffff
   3269c:	strd	r7, r6, [r5, #16]
   326a0:	strd	r2, r3, [r5, #32]
   326a4:	strd	r2, r3, [r5, #48]	; 0x30
   326a8:	movs	r3, #0
   326aa:	strd	r0, r1, [r5, #24]
   326ae:	strd	r0, r1, [r5, #40]	; 0x28
   326b2:	str	r3, [r5, #64]	; 0x40
   326b4:	ldr	r3, [r4, #20]
   326b6:	movs	r5, #0
   326b8:	adds	r3, #1
   326ba:	str	r3, [r4, #20]
   326bc:	b.n	32702 <btrfs_util_subvolume_id@@Base+0x1ae>
   326be:	ldr	r3, [r4, #20]
   326c0:	strd	r7, r6, [r5]
   326c4:	cmp	r3, #0
   326c6:	beq.n	326b4 <btrfs_util_subvolume_id@@Base+0x160>
   326c8:	ldr	r2, [r4, #16]
   326ca:	ldr	r0, [r4, #8]
   326cc:	mla	r3, r8, r3, r2
   326d0:	ldr	r2, [r4, #28]
   326d2:	ldr.w	r3, [r3, #-4]
   326d6:	adds	r1, r2, r3
   326d8:	ldrb	r3, [r2, r3]
   326da:	movs	r2, #0
   326dc:	cmp	r3, #47	; 0x2f
   326de:	it	eq
   326e0:	addeq	r1, #1
   326e2:	blx	86ac <openat@plt>
   326e6:	cmp.w	r0, #4294967295	; 0xffffffff
   326ea:	mov	r8, r0
   326ec:	beq.n	32718 <btrfs_util_subvolume_id@@Base+0x1c4>
   326ee:	ldr	r1, [r4, #8]
   326f0:	mov	r2, r7
   326f2:	mov	r3, r6
   326f4:	bl	32584 <btrfs_util_subvolume_id@@Base+0x30>
   326f8:	mov	r5, r0
   326fa:	cbz	r0, 32708 <btrfs_util_subvolume_id@@Base+0x1b4>
   326fc:	mov	r0, r8
   326fe:	blx	8b4c <close@plt>
   32702:	mov	r0, r5
   32704:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32708:	ldr	r0, [r4, #8]
   3270a:	blx	8b4c <close@plt>
   3270e:	str.w	r8, [r4, #8]
   32712:	b.n	326b4 <btrfs_util_subvolume_id@@Base+0x160>
   32714:	movs	r5, #2
   32716:	b.n	32702 <btrfs_util_subvolume_id@@Base+0x1ae>
   32718:	movs	r5, #7
   3271a:	b.n	32702 <btrfs_util_subvolume_id@@Base+0x1ae>

0003271c <btrfs_util_subvolume_path_fd@@Base>:
   3271c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32720:	sub.w	sp, sp, #8192	; 0x2000
   32724:	sub	sp, #44	; 0x2c
   32726:	ldr	r5, [pc, #496]	; (32918 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   32728:	add.w	r1, sp, #8256	; 0x2040
   3272c:	ldr	r4, [pc, #492]	; (3291c <btrfs_util_subvolume_path_fd@@Base+0x200>)
   3272e:	adds	r1, #16
   32730:	add	r5, pc
   32732:	strd	r2, r3, [sp, #24]
   32736:	orrs	r3, r2
   32738:	ldr	r1, [r1, #0]
   3273a:	add	r6, sp, #40	; 0x28
   3273c:	sub.w	fp, r6, #16
   32740:	mov	r7, r0
   32742:	str	r1, [sp, #16]
   32744:	add.w	r1, sp, #8192	; 0x2000
   32748:	ldr	r4, [r5, r4]
   3274a:	add.w	r1, r1, #36	; 0x24
   3274e:	ldr	r4, [r4, #0]
   32750:	str	r4, [r1, #0]
   32752:	mov.w	r4, #0
   32756:	beq.n	32768 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   32758:	mov.w	r0, #4096	; 0x1000
   3275c:	blx	8820 <malloc@plt+0x4>
   32760:	mov	r4, r0
   32762:	cbnz	r0, 32796 <btrfs_util_subvolume_path_fd@@Base+0x7a>
   32764:	movs	r0, #2
   32766:	b.n	3277a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32768:	bl	32434 <btrfs_util_is_subvolume_fd@@Base>
   3276c:	cbnz	r0, 3277a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   3276e:	mov	r1, fp
   32770:	mov	r0, r7
   32772:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   32776:	cmp	r0, #0
   32778:	beq.n	32758 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   3277a:	ldr	r1, [pc, #420]	; (32920 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   3277c:	add.w	r3, sp, #8192	; 0x2000
   32780:	ldr	r2, [pc, #408]	; (3291c <btrfs_util_subvolume_path_fd@@Base+0x200>)
   32782:	adds	r3, #36	; 0x24
   32784:	add	r1, pc
   32786:	ldr	r2, [r1, r2]
   32788:	ldr	r1, [r2, #0]
   3278a:	ldr	r2, [r3, #0]
   3278c:	eors	r1, r2
   3278e:	beq.w	32906 <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   32792:	blx	86b8 <__stack_chk_fail@plt>
   32796:	addw	r5, r0, #4095	; 0xfff
   3279a:	movs	r3, #0
   3279c:	strb.w	r3, [r0, #4095]	; 0xfff
   327a0:	mov.w	r3, #4096	; 0x1000
   327a4:	str	r3, [sp, #0]
   327a6:	ldrd	r8, r9, [fp]
   327aa:	cmp.w	r9, #0
   327ae:	it	eq
   327b0:	cmpeq.w	r8, #5
   327b4:	bne.n	327d0 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   327b6:	cmp	r4, r5
   327b8:	beq.n	327c8 <btrfs_util_subvolume_path_fd@@Base+0xac>
   327ba:	ldr	r3, [sp, #0]
   327bc:	mov	r1, r5
   327be:	mov	r0, r4
   327c0:	add	r3, r4
   327c2:	subs	r2, r3, r5
   327c4:	blx	85cc <memmove@plt+0x4>
   327c8:	ldr	r3, [sp, #16]
   327ca:	movs	r0, #0
   327cc:	str	r4, [r3, #0]
   327ce:	b.n	3277a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   327d0:	sub.w	sl, r6, #8
   327d4:	mov.w	r2, #4096	; 0x1000
   327d8:	movs	r1, #0
   327da:	mov	r0, sl
   327dc:	blx	8978 <memset@plt+0x4>
   327e0:	movs	r2, #1
   327e2:	movs	r3, #0
   327e4:	ldr	r1, [pc, #296]	; (32910 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   327e6:	strd	r2, r3, [r6, #-8]
   327ea:	mov	r0, r7
   327ec:	mov.w	r2, #4294967295	; 0xffffffff
   327f0:	mov.w	r3, #4294967295	; 0xffffffff
   327f4:	strd	r2, r3, [sl, #32]
   327f8:	strd	r2, r3, [sl, #48]	; 0x30
   327fc:	mov	r2, sl
   327fe:	movs	r3, #144	; 0x90
   32800:	strd	r8, r9, [sl, #8]
   32804:	strd	r3, r3, [sl, #56]	; 0x38
   32808:	movs	r3, #1
   3280a:	strd	r8, r9, [sl, #16]
   3280e:	str.w	r3, [sl, #64]	; 0x40
   32812:	blx	8764 <ioctl@plt>
   32816:	adds	r0, #1
   32818:	bne.n	32824 <btrfs_util_subvolume_path_fd@@Base+0x108>
   3281a:	mov	r0, r4
   3281c:	blx	85dc <free@plt+0x4>
   32820:	movs	r0, #12
   32822:	b.n	3277a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32824:	ldr.w	r3, [sl, #64]	; 0x40
   32828:	cbnz	r3, 3283c <btrfs_util_subvolume_path_fd@@Base+0x120>
   3282a:	mov	r0, r4
   3282c:	blx	85dc <free@plt+0x4>
   32830:	blx	8938 <__errno_location@plt>
   32834:	movs	r3, #2
   32836:	str	r3, [r0, #0]
   32838:	movs	r0, #6
   3283a:	b.n	3277a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   3283c:	ldrd	r0, r1, [sl, #120]	; 0x78
   32840:	add.w	r2, sp, #4128	; 0x1020
   32844:	adds	r2, #8
   32846:	ldrh.w	r9, [sl, #152]	; 0x98
   3284a:	strd	r0, r1, [r2, #-8]
   3284e:	strd	r0, r1, [fp]
   32852:	ldrd	r0, r1, [sl, #136]	; 0x88
   32856:	strd	r0, r1, [r2], #-8
   3285a:	mov	r0, r7
   3285c:	ldr	r1, [pc, #180]	; (32914 <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   3285e:	blx	8764 <ioctl@plt>
   32862:	adds	r0, #1
   32864:	beq.n	3281a <btrfs_util_subvolume_path_fd@@Base+0xfe>
   32866:	add.w	r0, sp, #4128	; 0x1020
   3286a:	adds	r0, #16
   3286c:	blx	88f0 <strlen@plt>
   32870:	ldrd	r2, r3, [fp]
   32874:	cmp	r3, #0
   32876:	it	eq
   32878:	cmpeq	r2, #5
   3287a:	strd	r2, r3, [sp, #8]
   3287e:	ite	ne
   32880:	movne	r3, #1
   32882:	moveq	r3, #0
   32884:	add	r3, r9
   32886:	add	r3, r0
   32888:	mov	r8, r0
   3288a:	subs	r3, r5, r3
   3288c:	cmp	r4, r3
   3288e:	bls.n	328ce <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   32890:	ldr	r3, [sp, #0]
   32892:	lsls	r3, r3, #1
   32894:	str	r3, [sp, #4]
   32896:	mov	r0, r3
   32898:	blx	8820 <malloc@plt+0x4>
   3289c:	cbnz	r0, 328a6 <btrfs_util_subvolume_path_fd@@Base+0x18a>
   3289e:	mov	r0, r4
   328a0:	blx	85dc <free@plt+0x4>
   328a4:	b.n	32764 <btrfs_util_subvolume_path_fd@@Base+0x48>
   328a6:	ldr	r2, [sp, #0]
   328a8:	ldr	r1, [sp, #4]
   328aa:	add	r2, r4
   328ac:	str	r0, [sp, #20]
   328ae:	subs	r2, r2, r5
   328b0:	sub.w	sl, r1, r2
   328b4:	mov	r1, r5
   328b6:	add	sl, r0
   328b8:	mov	r0, sl
   328ba:	mov	r5, sl
   328bc:	blx	8628 <memcpy@plt+0x4>
   328c0:	mov	r0, r4
   328c2:	blx	85dc <free@plt+0x4>
   328c6:	ldr	r3, [sp, #4]
   328c8:	str	r3, [sp, #0]
   328ca:	ldr	r3, [sp, #20]
   328cc:	mov	r4, r3
   328ce:	sub.w	r5, r5, r9
   328d2:	add.w	r1, r6, #146	; 0x92
   328d6:	mov	r2, r9
   328d8:	mov	r0, r5
   328da:	sub.w	r5, r5, r8
   328de:	blx	8628 <memcpy@plt+0x4>
   328e2:	add.w	r1, sp, #4128	; 0x1020
   328e6:	mov	r2, r8
   328e8:	mov	r0, r5
   328ea:	adds	r1, #16
   328ec:	blx	8628 <memcpy@plt+0x4>
   328f0:	ldrd	r2, r3, [sp, #8]
   328f4:	cmp	r3, #0
   328f6:	iteee	eq
   328f8:	cmpeq	r2, #5
   328fa:	movne	r3, #47	; 0x2f
   328fc:	strbne.w	r3, [r5, #-1]
   32900:	addne.w	r5, r5, #4294967295	; 0xffffffff
   32904:	b.n	327a6 <btrfs_util_subvolume_path_fd@@Base+0x8a>
   32906:	add.w	sp, sp, #8192	; 0x2000
   3290a:	add	sp, #44	; 0x2c
   3290c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32910:	str	r4, [sp, #68]	; 0x44
   32912:	beq.n	32916 <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   32914:	str	r4, [sp, #72]	; 0x48
   32916:	beq.n	3291a <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   32918:	movs	r6, #88	; 0x58
   3291a:	movs	r3, r0
   3291c:	lsls	r4, r4, #8
   3291e:	movs	r0, r0
   32920:	movs	r6, #4
   32922:	movs	r3, r0

00032924 <btrfs_util_subvolume_path@@Base>:
   32924:	push	{r4, r5, r6, r7, lr}
   32926:	sub	sp, #20
   32928:	movs	r1, #0
   3292a:	strd	r3, r2, [sp, #8]
   3292e:	blx	88a8 <open@plt>
   32932:	adds	r3, r0, #1
   32934:	mov	r6, r0
   32936:	beq.n	3295c <btrfs_util_subvolume_path@@Base+0x38>
   32938:	ldr	r1, [sp, #40]	; 0x28
   3293a:	ldrd	r3, r2, [sp, #8]
   3293e:	str	r1, [sp, #0]
   32940:	bl	3271c <btrfs_util_subvolume_path_fd@@Base>
   32944:	mov	r4, r0
   32946:	blx	8938 <__errno_location@plt>
   3294a:	ldr	r7, [r0, #0]
   3294c:	mov	r5, r0
   3294e:	mov	r0, r6
   32950:	blx	8b4c <close@plt>
   32954:	str	r7, [r5, #0]
   32956:	mov	r0, r4
   32958:	add	sp, #20
   3295a:	pop	{r4, r5, r6, r7, pc}
   3295c:	movs	r4, #7
   3295e:	b.n	32956 <btrfs_util_subvolume_path@@Base+0x32>

00032960 <btrfs_util_subvolume_info_fd@@Base>:
   32960:	push	{r4, r5, lr}
   32962:	sub	sp, #20
   32964:	mov	r4, r0
   32966:	strd	r2, r3, [sp, #8]
   3296a:	orrs	r3, r2
   3296c:	ldr	r5, [sp, #32]
   3296e:	beq.n	32998 <btrfs_util_subvolume_info_fd@@Base+0x38>
   32970:	ldrd	r2, r3, [sp, #8]
   32974:	cmp	r3, #0
   32976:	it	eq
   32978:	cmpeq.w	r2, #256	; 0x100
   3297c:	bcc.n	329be <btrfs_util_subvolume_info_fd@@Base+0x5e>
   3297e:	mov.w	r1, #4294967295	; 0xffffffff
   32982:	cmp	r1, r3
   32984:	mvn.w	r0, #255	; 0xff
   32988:	it	eq
   3298a:	cmpeq	r0, r2
   3298c:	bcc.n	329c6 <btrfs_util_subvolume_info_fd@@Base+0x66>
   3298e:	mov	r0, r4
   32990:	str	r5, [sp, #0]
   32992:	bl	31eb8 <print_all_devices@@Base+0x230>
   32996:	b.n	329ac <btrfs_util_subvolume_info_fd@@Base+0x4c>
   32998:	bl	32434 <btrfs_util_is_subvolume_fd@@Base>
   3299c:	cbnz	r0, 329ac <btrfs_util_subvolume_info_fd@@Base+0x4c>
   3299e:	blx	8704 <geteuid@plt>
   329a2:	cbz	r0, 329b0 <btrfs_util_subvolume_info_fd@@Base+0x50>
   329a4:	mov	r1, r5
   329a6:	mov	r0, r4
   329a8:	bl	31cbc <print_all_devices@@Base+0x34>
   329ac:	add	sp, #20
   329ae:	pop	{r4, r5, pc}
   329b0:	add	r1, sp, #8
   329b2:	mov	r0, r4
   329b4:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   329b8:	cmp	r0, #0
   329ba:	beq.n	32970 <btrfs_util_subvolume_info_fd@@Base+0x10>
   329bc:	b.n	329ac <btrfs_util_subvolume_info_fd@@Base+0x4c>
   329be:	cmp	r3, #0
   329c0:	it	eq
   329c2:	cmpeq	r2, #5
   329c4:	beq.n	3298e <btrfs_util_subvolume_info_fd@@Base+0x2e>
   329c6:	blx	8938 <__errno_location@plt>
   329ca:	movs	r3, #2
   329cc:	str	r3, [r0, #0]
   329ce:	movs	r0, #6
   329d0:	b.n	329ac <btrfs_util_subvolume_info_fd@@Base+0x4c>

000329d2 <btrfs_util_subvolume_info@@Base>:
   329d2:	push	{r4, r5, r6, r7, lr}
   329d4:	sub	sp, #20
   329d6:	movs	r1, #0
   329d8:	strd	r3, r2, [sp, #8]
   329dc:	blx	88a8 <open@plt>
   329e0:	adds	r3, r0, #1
   329e2:	mov	r6, r0
   329e4:	beq.n	32a0a <btrfs_util_subvolume_info@@Base+0x38>
   329e6:	ldr	r1, [sp, #40]	; 0x28
   329e8:	ldrd	r3, r2, [sp, #8]
   329ec:	str	r1, [sp, #0]
   329ee:	bl	32960 <btrfs_util_subvolume_info_fd@@Base>
   329f2:	mov	r4, r0
   329f4:	blx	8938 <__errno_location@plt>
   329f8:	ldr	r7, [r0, #0]
   329fa:	mov	r5, r0
   329fc:	mov	r0, r6
   329fe:	blx	8b4c <close@plt>
   32a02:	str	r7, [r5, #0]
   32a04:	mov	r0, r4
   32a06:	add	sp, #20
   32a08:	pop	{r4, r5, r6, r7, pc}
   32a0a:	movs	r4, #7
   32a0c:	b.n	32a04 <btrfs_util_subvolume_info@@Base+0x32>

00032a0e <btrfs_util_get_subvolume_read_only_fd@@Base>:
   32a0e:	push	{r0, r1, r2, r3, r4, lr}
   32a10:	mov	r4, r1
   32a12:	ldr	r2, [pc, #68]	; (32a58 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   32a14:	ldr	r3, [pc, #68]	; (32a5c <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32a16:	add	r2, pc
   32a18:	ldr	r1, [pc, #56]	; (32a54 <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   32a1a:	ldr	r3, [r2, r3]
   32a1c:	mov	r2, sp
   32a1e:	ldr	r3, [r3, #0]
   32a20:	str	r3, [sp, #12]
   32a22:	mov.w	r3, #0
   32a26:	blx	8764 <ioctl@plt>
   32a2a:	ldr	r2, [pc, #52]	; (32a60 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   32a2c:	add	r2, pc
   32a2e:	adds	r0, #1
   32a30:	ittet	ne
   32a32:	ldrne	r3, [sp, #0]
   32a34:	movne	r0, #0
   32a36:	moveq	r0, #14
   32a38:	ubfxne	r3, r3, #1, #1
   32a3c:	it	ne
   32a3e:	strbne	r3, [r4, #0]
   32a40:	ldr	r3, [pc, #24]	; (32a5c <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32a42:	ldr	r3, [r2, r3]
   32a44:	ldr	r2, [r3, #0]
   32a46:	ldr	r3, [sp, #12]
   32a48:	eors	r2, r3
   32a4a:	beq.n	32a50 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   32a4c:	blx	86b8 <__stack_chk_fail@plt>
   32a50:	add	sp, #16
   32a52:	pop	{r4, pc}
   32a54:	str	r4, [sp, #100]	; 0x64
   32a56:	strh	r0, [r1, #0]
   32a58:	movs	r3, #114	; 0x72
   32a5a:	movs	r3, r0
   32a5c:	lsls	r4, r4, #8
   32a5e:	movs	r0, r0
   32a60:	movs	r3, #92	; 0x5c
   32a62:	movs	r3, r0

00032a64 <btrfs_util_get_subvolume_read_only@@Base>:
   32a64:	push	{r3, r4, r5, r6, r7, lr}
   32a66:	mov	r4, r1
   32a68:	movs	r1, #0
   32a6a:	blx	88a8 <open@plt>
   32a6e:	adds	r3, r0, #1
   32a70:	mov	r6, r0
   32a72:	beq.n	32a90 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   32a74:	mov	r1, r4
   32a76:	bl	32a0e <btrfs_util_get_subvolume_read_only_fd@@Base>
   32a7a:	mov	r4, r0
   32a7c:	blx	8938 <__errno_location@plt>
   32a80:	ldr	r7, [r0, #0]
   32a82:	mov	r5, r0
   32a84:	mov	r0, r6
   32a86:	blx	8b4c <close@plt>
   32a8a:	str	r7, [r5, #0]
   32a8c:	mov	r0, r4
   32a8e:	pop	{r3, r4, r5, r6, r7, pc}
   32a90:	movs	r4, #7
   32a92:	b.n	32a8c <btrfs_util_get_subvolume_read_only@@Base+0x28>

00032a94 <btrfs_util_set_subvolume_read_only_fd@@Base>:
   32a94:	ldr	r2, [pc, #108]	; (32b04 <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   32a96:	ldr	r3, [pc, #112]	; (32b08 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   32a98:	add	r2, pc
   32a9a:	push	{r4, r5, lr}
   32a9c:	sub	sp, #28
   32a9e:	ldr	r3, [r2, r3]
   32aa0:	mov	r5, r1
   32aa2:	add	r2, sp, #8
   32aa4:	ldr	r1, [pc, #84]	; (32afc <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   32aa6:	ldr	r3, [r3, #0]
   32aa8:	str	r3, [sp, #20]
   32aaa:	mov.w	r3, #0
   32aae:	mov	r4, r0
   32ab0:	str	r2, [sp, #4]
   32ab2:	blx	8764 <ioctl@plt>
   32ab6:	adds	r0, #1
   32ab8:	beq.n	32af4 <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   32aba:	ldrd	r3, r1, [sp, #8]
   32abe:	ldr	r2, [sp, #4]
   32ac0:	cbz	r5, 32aee <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   32ac2:	orr.w	r3, r3, #2
   32ac6:	strd	r3, r1, [sp, #8]
   32aca:	mov	r0, r4
   32acc:	ldr	r1, [pc, #48]	; (32b00 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   32ace:	blx	8764 <ioctl@plt>
   32ad2:	adds	r3, r0, #1
   32ad4:	ite	ne
   32ad6:	movne	r0, #0
   32ad8:	moveq	r0, #15
   32ada:	ldr	r2, [pc, #48]	; (32b0c <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   32adc:	ldr	r3, [pc, #40]	; (32b08 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   32ade:	add	r2, pc
   32ae0:	ldr	r3, [r2, r3]
   32ae2:	ldr	r2, [r3, #0]
   32ae4:	ldr	r3, [sp, #20]
   32ae6:	eors	r2, r3
   32ae8:	beq.n	32af8 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   32aea:	blx	86b8 <__stack_chk_fail@plt>
   32aee:	bic.w	r3, r3, #2
   32af2:	b.n	32ac6 <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   32af4:	movs	r0, #14
   32af6:	b.n	32ada <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   32af8:	add	sp, #28
   32afa:	pop	{r4, r5, pc}
   32afc:	str	r4, [sp, #100]	; 0x64
   32afe:	strh	r0, [r1, #0]
   32b00:	str	r4, [sp, #104]	; 0x68
   32b02:	ands	r0, r1
   32b04:	movs	r2, #240	; 0xf0
   32b06:	movs	r3, r0
   32b08:	lsls	r4, r4, #8
   32b0a:	movs	r0, r0
   32b0c:	movs	r2, #170	; 0xaa
   32b0e:	movs	r3, r0

00032b10 <btrfs_util_set_subvolume_read_only@@Base>:
   32b10:	push	{r3, r4, r5, r6, r7, lr}
   32b12:	mov	r4, r1
   32b14:	movs	r1, #0
   32b16:	blx	88a8 <open@plt>
   32b1a:	adds	r3, r0, #1
   32b1c:	mov	r6, r0
   32b1e:	beq.n	32b3c <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   32b20:	mov	r1, r4
   32b22:	bl	32a94 <btrfs_util_set_subvolume_read_only_fd@@Base>
   32b26:	mov	r4, r0
   32b28:	blx	8938 <__errno_location@plt>
   32b2c:	ldr	r7, [r0, #0]
   32b2e:	mov	r5, r0
   32b30:	mov	r0, r6
   32b32:	blx	8b4c <close@plt>
   32b36:	str	r7, [r5, #0]
   32b38:	mov	r0, r4
   32b3a:	pop	{r3, r4, r5, r6, r7, pc}
   32b3c:	movs	r4, #7
   32b3e:	b.n	32b38 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00032b40 <btrfs_util_get_default_subvolume_fd@@Base>:
   32b40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b44:	mov	r7, r1
   32b46:	ldr	r1, [pc, #256]	; (32c48 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   32b48:	sub.w	sp, sp, #4096	; 0x1000
   32b4c:	ldr	r2, [pc, #252]	; (32c4c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   32b4e:	sub	sp, #20
   32b50:	add	r1, pc
   32b52:	add.w	r9, sp, #16
   32b56:	sub.w	r4, r9, #8
   32b5a:	add.w	r3, sp, #4096	; 0x1000
   32b5e:	ldr	r2, [r1, r2]
   32b60:	mov	r8, r0
   32b62:	ldr.w	fp, [pc, #236]	; 32c50 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   32b66:	mov	r0, r4
   32b68:	ldr.w	sl, [pc, #232]	; 32c54 <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   32b6c:	ldr	r2, [r2, #0]
   32b6e:	str	r2, [r3, #12]
   32b70:	mov.w	r2, #0
   32b74:	movs	r6, #0
   32b76:	mov.w	r2, #4096	; 0x1000
   32b7a:	add	fp, pc
   32b7c:	movs	r1, #0
   32b7e:	adds	r3, #12
   32b80:	blx	8978 <memset@plt+0x4>
   32b84:	movs	r2, #1
   32b86:	movs	r3, #0
   32b88:	strd	r2, r3, [r9, #-8]
   32b8c:	movs	r2, #6
   32b8e:	movs	r3, #0
   32b90:	strd	r2, r3, [r4, #8]
   32b94:	strd	r2, r3, [r4, #16]
   32b98:	mov.w	r3, #4294967295	; 0xffffffff
   32b9c:	mov.w	r2, #4294967295	; 0xffffffff
   32ba0:	strd	r2, r3, [r4, #32]
   32ba4:	strd	r2, r3, [r4, #48]	; 0x30
   32ba8:	movs	r3, #84	; 0x54
   32baa:	strd	r3, r3, [r4, #56]	; 0x38
   32bae:	mov	r3, r6
   32bb0:	ldr	r2, [r4, #64]	; 0x40
   32bb2:	cmp	r2, r3
   32bb4:	bhi.n	32bf6 <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   32bb6:	mov	r2, r4
   32bb8:	mov	r1, sl
   32bba:	mov	r0, r8
   32bbc:	mov.w	r3, #4096	; 0x1000
   32bc0:	str	r3, [r4, #64]	; 0x40
   32bc2:	blx	8764 <ioctl@plt>
   32bc6:	adds	r0, #1
   32bc8:	beq.n	32c38 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   32bca:	ldr	r3, [r4, #64]	; 0x40
   32bcc:	cbnz	r3, 32bf2 <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   32bce:	blx	8938 <__errno_location@plt>
   32bd2:	movs	r3, #2
   32bd4:	str	r3, [r0, #0]
   32bd6:	movs	r0, #6
   32bd8:	ldr	r1, [pc, #124]	; (32c58 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   32bda:	add.w	r3, sp, #4096	; 0x1000
   32bde:	ldr	r2, [pc, #108]	; (32c4c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   32be0:	adds	r3, #12
   32be2:	add	r1, pc
   32be4:	ldr	r2, [r1, r2]
   32be6:	ldr	r1, [r2, #0]
   32be8:	ldr	r2, [r3, #0]
   32bea:	eors	r1, r2
   32bec:	beq.n	32c3c <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   32bee:	blx	86b8 <__stack_chk_fail@plt>
   32bf2:	movs	r6, #0
   32bf4:	mov	r3, r6
   32bf6:	add.w	r5, r9, #96	; 0x60
   32bfa:	add	r5, r6
   32bfc:	ldr	r2, [r5, #24]
   32bfe:	cmp	r2, #84	; 0x54
   32c00:	bne.n	32c20 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32c02:	str	r3, [sp, #4]
   32c04:	add.w	r0, r5, #62	; 0x3e
   32c08:	ldrh.w	r2, [r5, #59]	; 0x3b
   32c0c:	mov	r1, fp
   32c0e:	blx	8b28 <strncmp@plt>
   32c12:	ldr	r3, [sp, #4]
   32c14:	cbnz	r0, 32c20 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32c16:	ldr	r2, [r5, #32]
   32c18:	ldr	r3, [r5, #36]	; 0x24
   32c1a:	strd	r2, r3, [r7]
   32c1e:	b.n	32bd8 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   32c20:	ldr	r2, [r5, #28]
   32c22:	adds	r6, #32
   32c24:	adds	r3, #1
   32c26:	add	r6, r2
   32c28:	ldrd	r2, r1, [r5, #16]
   32c2c:	adds	r2, #1
   32c2e:	adc.w	r1, r1, #0
   32c32:	strd	r2, r1, [r4, #24]
   32c36:	b.n	32bb0 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   32c38:	movs	r0, #12
   32c3a:	b.n	32bd8 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   32c3c:	add.w	sp, sp, #4096	; 0x1000
   32c40:	add	sp, #20
   32c42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c46:	nop
   32c48:	movs	r2, #56	; 0x38
   32c4a:	movs	r3, r0
   32c4c:	lsls	r4, r4, #8
   32c4e:	movs	r0, r0
   32c50:	ldrh	r6, [r1, #14]
   32c52:	movs	r0, r0
   32c54:	str	r4, [sp, #68]	; 0x44
   32c56:	beq.n	32c5a <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   32c58:	movs	r1, #166	; 0xa6
   32c5a:	movs	r3, r0

00032c5c <btrfs_util_get_default_subvolume@@Base>:
   32c5c:	push	{r3, r4, r5, r6, r7, lr}
   32c5e:	mov	r4, r1
   32c60:	movs	r1, #0
   32c62:	blx	88a8 <open@plt>
   32c66:	adds	r3, r0, #1
   32c68:	mov	r6, r0
   32c6a:	beq.n	32c88 <btrfs_util_get_default_subvolume@@Base+0x2c>
   32c6c:	mov	r1, r4
   32c6e:	bl	32b40 <btrfs_util_get_default_subvolume_fd@@Base>
   32c72:	mov	r4, r0
   32c74:	blx	8938 <__errno_location@plt>
   32c78:	ldr	r7, [r0, #0]
   32c7a:	mov	r5, r0
   32c7c:	mov	r0, r6
   32c7e:	blx	8b4c <close@plt>
   32c82:	str	r7, [r5, #0]
   32c84:	mov	r0, r4
   32c86:	pop	{r3, r4, r5, r6, r7, pc}
   32c88:	movs	r4, #7
   32c8a:	b.n	32c84 <btrfs_util_get_default_subvolume@@Base+0x28>

00032c8c <btrfs_util_set_default_subvolume_fd@@Base>:
   32c8c:	push	{r0, r1, r4, lr}
   32c8e:	mov	r4, r0
   32c90:	strd	r2, r3, [sp]
   32c94:	orrs	r3, r2
   32c96:	beq.n	32cae <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   32c98:	ldr	r1, [pc, #40]	; (32cc4 <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   32c9a:	mov	r2, sp
   32c9c:	mov	r0, r4
   32c9e:	blx	8764 <ioctl@plt>
   32ca2:	adds	r3, r0, #1
   32ca4:	ite	ne
   32ca6:	movne	r0, #0
   32ca8:	moveq	r0, #19
   32caa:	add	sp, #8
   32cac:	pop	{r4, pc}
   32cae:	bl	32434 <btrfs_util_is_subvolume_fd@@Base>
   32cb2:	cmp	r0, #0
   32cb4:	bne.n	32caa <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32cb6:	mov	r1, sp
   32cb8:	mov	r0, r4
   32cba:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   32cbe:	cmp	r0, #0
   32cc0:	beq.n	32c98 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   32cc2:	b.n	32caa <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32cc4:	str	r4, [sp, #76]	; 0x4c
   32cc6:	ands	r0, r1

00032cc8 <btrfs_util_set_default_subvolume@@Base>:
   32cc8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   32cca:	movs	r1, #0
   32ccc:	strd	r3, r2, [sp]
   32cd0:	blx	88a8 <open@plt>
   32cd4:	adds	r3, r0, #1
   32cd6:	mov	r6, r0
   32cd8:	beq.n	32cfa <btrfs_util_set_default_subvolume@@Base+0x32>
   32cda:	ldrd	r3, r2, [sp]
   32cde:	bl	32c8c <btrfs_util_set_default_subvolume_fd@@Base>
   32ce2:	mov	r4, r0
   32ce4:	blx	8938 <__errno_location@plt>
   32ce8:	ldr	r7, [r0, #0]
   32cea:	mov	r5, r0
   32cec:	mov	r0, r6
   32cee:	blx	8b4c <close@plt>
   32cf2:	str	r7, [r5, #0]
   32cf4:	mov	r0, r4
   32cf6:	add	sp, #12
   32cf8:	pop	{r4, r5, r6, r7, pc}
   32cfa:	movs	r4, #7
   32cfc:	b.n	32cf4 <btrfs_util_set_default_subvolume@@Base+0x2c>

00032cfe <btrfs_util_create_subvolume_fd@@Base>:
   32cfe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32d02:	sub.w	sp, sp, #4096	; 0x1000
   32d06:	sub	sp, #12
   32d08:	mov	r8, r1
   32d0a:	ldr	r1, [pc, #232]	; (32df4 <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   32d0c:	mov	r9, r2
   32d0e:	mov	r4, r3
   32d10:	ldr	r2, [pc, #228]	; (32df8 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   32d12:	add.w	r3, sp, #4128	; 0x1020
   32d16:	add	r1, pc
   32d18:	adds	r3, #8
   32d1a:	mov	r5, sp
   32d1c:	ldr	r2, [r1, r2]
   32d1e:	mov	r7, r0
   32d20:	ldr	r6, [r3, #0]
   32d22:	add.w	r3, sp, #4096	; 0x1000
   32d26:	ldr	r2, [r2, #0]
   32d28:	str	r2, [r3, #4]
   32d2a:	mov.w	r2, #0
   32d2e:	movs	r1, #0
   32d30:	mov.w	r2, #4096	; 0x1000
   32d34:	mov	r0, r5
   32d36:	adds	r3, #4
   32d38:	blx	8978 <memset@plt+0x4>
   32d3c:	cmp.w	r9, #0
   32d40:	beq.n	32d66 <btrfs_util_create_subvolume_fd@@Base+0x68>
   32d42:	blx	8938 <__errno_location@plt>
   32d46:	movs	r3, #22
   32d48:	str	r3, [r0, #0]
   32d4a:	movs	r0, #3
   32d4c:	ldr	r1, [pc, #172]	; (32dfc <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   32d4e:	add.w	r3, sp, #4096	; 0x1000
   32d52:	ldr	r2, [pc, #164]	; (32df8 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   32d54:	adds	r3, #4
   32d56:	add	r1, pc
   32d58:	ldr	r2, [r1, r2]
   32d5a:	ldr	r1, [r2, #0]
   32d5c:	ldr	r2, [r3, #0]
   32d5e:	eors	r1, r2
   32d60:	beq.n	32de6 <btrfs_util_create_subvolume_fd@@Base+0xe8>
   32d62:	blx	86b8 <__stack_chk_fail@plt>
   32d66:	cbz	r4, 32d70 <btrfs_util_create_subvolume_fd@@Base+0x72>
   32d68:	movs	r2, #1
   32d6a:	movs	r3, #0
   32d6c:	strd	r2, r3, [r5, #16]
   32d70:	cbz	r6, 32d92 <btrfs_util_create_subvolume_fd@@Base+0x94>
   32d72:	ldr	r3, [r5, #16]
   32d74:	str	r6, [r5, #32]
   32d76:	orr.w	r3, r3, #4
   32d7a:	str	r3, [r5, #16]
   32d7c:	ldrd	r3, r2, [r6, #8]
   32d80:	adds	r3, #9
   32d82:	adc.w	r2, r2, #0
   32d86:	lsls	r2, r2, #3
   32d88:	orr.w	r2, r2, r3, lsr #29
   32d8c:	lsls	r3, r3, #3
   32d8e:	strd	r3, r2, [r5, #24]
   32d92:	mov	r0, r8
   32d94:	blx	88f0 <strlen@plt>
   32d98:	movw	r3, #4039	; 0xfc7
   32d9c:	cmp	r0, r3
   32d9e:	mov	r6, r0
   32da0:	bls.n	32daa <btrfs_util_create_subvolume_fd@@Base+0xac>
   32da2:	blx	8938 <__errno_location@plt>
   32da6:	movs	r3, #36	; 0x24
   32da8:	b.n	32d48 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   32daa:	mov	r2, r0
   32dac:	mov	r1, r8
   32dae:	movw	r3, #4040	; 0xfc8
   32db2:	add	r0, sp, #56	; 0x38
   32db4:	add	r6, r5
   32db6:	blx	8748 <__memcpy_chk@plt>
   32dba:	ldr	r1, [pc, #52]	; (32df0 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   32dbc:	mov	r2, r5
   32dbe:	mov	r0, r7
   32dc0:	mov.w	r8, #0
   32dc4:	strb.w	r8, [r6, #56]	; 0x38
   32dc8:	blx	8764 <ioctl@plt>
   32dcc:	adds	r0, #1
   32dce:	beq.n	32dde <btrfs_util_create_subvolume_fd@@Base+0xe0>
   32dd0:	cbz	r4, 32de2 <btrfs_util_create_subvolume_fd@@Base+0xe4>
   32dd2:	ldrd	r2, r3, [r5, #8]
   32dd6:	mov	r0, r8
   32dd8:	strd	r2, r3, [r4]
   32ddc:	b.n	32d4c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32dde:	movs	r0, #16
   32de0:	b.n	32d4c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32de2:	mov	r0, r4
   32de4:	b.n	32d4c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32de6:	add.w	sp, sp, #4096	; 0x1000
   32dea:	add	sp, #12
   32dec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32df0:	str	r4, [sp, #96]	; 0x60
   32df2:	str	r0, [r0, r0]
   32df4:	movs	r0, #114	; 0x72
   32df6:	movs	r3, r0
   32df8:	lsls	r4, r4, #8
   32dfa:	movs	r0, r0
   32dfc:	movs	r0, #50	; 0x32
   32dfe:	movs	r3, r0

00032e00 <btrfs_util_create_subvolume@@Base>:
   32e00:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32e04:	mov	r7, r2
   32e06:	ldr	r2, [pc, #120]	; (32e80 <btrfs_util_create_subvolume@@Base+0x80>)
   32e08:	mov	r8, r3
   32e0a:	ldr	r3, [pc, #120]	; (32e84 <btrfs_util_create_subvolume@@Base+0x84>)
   32e0c:	subw	sp, sp, #4060	; 0xfdc
   32e10:	add	r2, pc
   32e12:	add.w	r9, sp, #12
   32e16:	add	r6, sp, #8
   32e18:	mov	r5, r1
   32e1a:	ldr	r3, [r2, r3]
   32e1c:	mov	r1, r0
   32e1e:	mvn.w	r0, #99	; 0x63
   32e22:	mov	r2, r9
   32e24:	ldr	r3, [r3, #0]
   32e26:	str.w	r3, [sp, #4052]	; 0xfd4
   32e2a:	mov.w	r3, #0
   32e2e:	movw	r3, #4040	; 0xfc8
   32e32:	str	r6, [sp, #0]
   32e34:	bl	31de8 <print_all_devices@@Base+0x160>
   32e38:	mov	r4, r0
   32e3a:	cbnz	r0, 32e5e <btrfs_util_create_subvolume@@Base+0x5e>
   32e3c:	mov	r3, r7
   32e3e:	mov	r2, r5
   32e40:	mov	r1, r9
   32e42:	str.w	r8, [sp]
   32e46:	ldr	r0, [r6, #0]
   32e48:	bl	32cfe <btrfs_util_create_subvolume_fd@@Base>
   32e4c:	mov	r4, r0
   32e4e:	blx	8938 <__errno_location@plt>
   32e52:	ldr	r7, [r0, #0]
   32e54:	mov	r5, r0
   32e56:	ldr	r0, [r6, #0]
   32e58:	blx	8b4c <close@plt>
   32e5c:	str	r7, [r5, #0]
   32e5e:	ldr	r2, [pc, #40]	; (32e88 <btrfs_util_create_subvolume@@Base+0x88>)
   32e60:	ldr	r3, [pc, #32]	; (32e84 <btrfs_util_create_subvolume@@Base+0x84>)
   32e62:	add	r2, pc
   32e64:	ldr	r3, [r2, r3]
   32e66:	ldr	r2, [r3, #0]
   32e68:	ldr.w	r3, [sp, #4052]	; 0xfd4
   32e6c:	eors	r2, r3
   32e6e:	beq.n	32e74 <btrfs_util_create_subvolume@@Base+0x74>
   32e70:	blx	86b8 <__stack_chk_fail@plt>
   32e74:	mov	r0, r4
   32e76:	addw	sp, sp, #4060	; 0xfdc
   32e7a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32e7e:	nop
   32e80:	subs	r0, r7, #5
   32e82:	movs	r3, r0
   32e84:	lsls	r4, r4, #8
   32e86:	movs	r0, r0
   32e88:	subs	r6, r4, #4
   32e8a:	movs	r3, r0

00032e8c <btrfs_util_create_subvolume_iterator_fd@@Base>:
   32e8c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   32e90:	mov	r7, r0
   32e92:	ldr.w	r8, [sp, #40]	; 0x28
   32e96:	strd	r2, r3, [sp, #8]
   32e9a:	bics.w	r1, r8, #1
   32e9e:	beq.n	32eb2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   32ea0:	blx	8938 <__errno_location@plt>
   32ea4:	movs	r5, #3
   32ea6:	movs	r3, #22
   32ea8:	str	r3, [r0, #0]
   32eaa:	mov	r0, r5
   32eac:	add	sp, #16
   32eae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32eb2:	orrs	r3, r2
   32eb4:	bne.n	32ed8 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   32eb6:	blx	8704 <geteuid@plt>
   32eba:	ldrd	r2, r3, [sp, #8]
   32ebe:	orrs	r3, r2
   32ec0:	clz	r6, r0
   32ec4:	mov.w	r6, r6, lsr #5
   32ec8:	beq.n	32edc <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   32eca:	movs	r0, #36	; 0x24
   32ecc:	blx	8820 <malloc@plt+0x4>
   32ed0:	mov	r4, r0
   32ed2:	cbnz	r0, 32ef8 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   32ed4:	movs	r5, #2
   32ed6:	b.n	32eaa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32ed8:	movs	r6, #1
   32eda:	b.n	32eca <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   32edc:	mov	r0, r7
   32ede:	bl	32434 <btrfs_util_is_subvolume_fd@@Base>
   32ee2:	mov	r5, r0
   32ee4:	cmp	r0, #0
   32ee6:	bne.n	32eaa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32ee8:	add	r1, sp, #8
   32eea:	mov	r0, r7
   32eec:	bl	324c8 <btrfs_util_subvolume_id_fd@@Base>
   32ef0:	mov	r5, r0
   32ef2:	cmp	r0, #0
   32ef4:	beq.n	32eca <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   32ef6:	b.n	32eaa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32ef8:	movs	r3, #4
   32efa:	strd	r7, r7, [r0, #4]
   32efe:	str.w	r8, [r0, #12]
   32f02:	movs	r5, #0
   32f04:	strb	r6, [r0, #0]
   32f06:	strd	r5, r3, [r0, #20]
   32f0a:	movw	r0, #16448	; 0x4040
   32f0e:	blx	8820 <malloc@plt+0x4>
   32f12:	str	r0, [r4, #16]
   32f14:	cbz	r0, 32f52 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   32f16:	mov.w	r0, #256	; 0x100
   32f1a:	str	r0, [r4, #32]
   32f1c:	blx	8820 <malloc@plt+0x4>
   32f20:	str	r0, [r4, #28]
   32f22:	cbz	r0, 32f4e <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   32f24:	str	r5, [sp, #0]
   32f26:	mov	r0, r4
   32f28:	ldrd	r2, r3, [sp, #8]
   32f2c:	bl	32634 <btrfs_util_subvolume_id@@Base+0xe0>
   32f30:	mov	r5, r0
   32f32:	cbz	r0, 32f48 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   32f34:	ldr	r0, [r4, #28]
   32f36:	blx	85dc <free@plt+0x4>
   32f3a:	ldr	r0, [r4, #16]
   32f3c:	blx	85dc <free@plt+0x4>
   32f40:	mov	r0, r4
   32f42:	blx	85dc <free@plt+0x4>
   32f46:	b.n	32eaa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32f48:	ldr	r3, [sp, #44]	; 0x2c
   32f4a:	str	r4, [r3, #0]
   32f4c:	b.n	32eaa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32f4e:	movs	r5, #2
   32f50:	b.n	32f3a <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   32f52:	movs	r5, #2
   32f54:	b.n	32f40 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

00032f56 <btrfs_util_create_subvolume_iterator@@Base>:
   32f56:	push	{r4, r5, r6, r7, lr}
   32f58:	sub	sp, #20
   32f5a:	movs	r1, #0
   32f5c:	strd	r3, r2, [sp, #8]
   32f60:	ldr	r5, [sp, #44]	; 0x2c
   32f62:	blx	88a8 <open@plt>
   32f66:	adds	r3, r0, #1
   32f68:	mov	r6, r0
   32f6a:	beq.n	32fa0 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   32f6c:	ldr	r1, [sp, #40]	; 0x28
   32f6e:	ldrd	r3, r2, [sp, #8]
   32f72:	str	r5, [sp, #4]
   32f74:	str	r1, [sp, #0]
   32f76:	bl	32e8c <btrfs_util_create_subvolume_iterator_fd@@Base>
   32f7a:	mov	r4, r0
   32f7c:	cbz	r0, 32f94 <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   32f7e:	blx	8938 <__errno_location@plt>
   32f82:	ldr	r7, [r0, #0]
   32f84:	mov	r5, r0
   32f86:	mov	r0, r6
   32f88:	blx	8b4c <close@plt>
   32f8c:	str	r7, [r5, #0]
   32f8e:	mov	r0, r4
   32f90:	add	sp, #20
   32f92:	pop	{r4, r5, r6, r7, pc}
   32f94:	ldr	r2, [r5, #0]
   32f96:	ldr	r3, [r2, #12]
   32f98:	orr.w	r3, r3, #1073741824	; 0x40000000
   32f9c:	str	r3, [r2, #12]
   32f9e:	b.n	32f8e <btrfs_util_create_subvolume_iterator@@Base+0x38>
   32fa0:	movs	r4, #7
   32fa2:	b.n	32f8e <btrfs_util_create_subvolume_iterator@@Base+0x38>

00032fa4 <btrfs_util_destroy_subvolume_iterator@@Base>:
   32fa4:	push	{r3, r4, r5, r6, r7, lr}
   32fa6:	mov	r4, r0
   32fa8:	cbz	r0, 32fee <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   32faa:	ldr	r0, [r0, #28]
   32fac:	blx	85dc <free@plt+0x4>
   32fb0:	ldr	r0, [r4, #16]
   32fb2:	blx	85dc <free@plt+0x4>
   32fb6:	ldrd	r3, r6, [r4, #4]
   32fba:	cmp	r6, r3
   32fbc:	beq.n	32fce <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   32fbe:	blx	8938 <__errno_location@plt>
   32fc2:	ldr	r7, [r0, #0]
   32fc4:	mov	r5, r0
   32fc6:	mov	r0, r6
   32fc8:	blx	8b4c <close@plt>
   32fcc:	str	r7, [r5, #0]
   32fce:	ldr	r3, [r4, #12]
   32fd0:	lsls	r3, r3, #1
   32fd2:	bpl.n	32fe4 <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   32fd4:	blx	8938 <__errno_location@plt>
   32fd8:	ldr	r6, [r0, #0]
   32fda:	mov	r5, r0
   32fdc:	ldr	r0, [r4, #4]
   32fde:	blx	8b4c <close@plt>
   32fe2:	str	r6, [r5, #0]
   32fe4:	mov	r0, r4
   32fe6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   32fea:	b.w	85d8 <free@plt>
   32fee:	pop	{r3, r4, r5, r6, r7, pc}

00032ff0 <btrfs_util_subvolume_iterator_fd@@Base>:
   32ff0:	ldr	r0, [r0, #4]
   32ff2:	bx	lr

00032ff4 <btrfs_util_subvolume_iterator_next@@Base>:
   32ff4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ff8:	mov	r5, r2
   32ffa:	ldr	r2, [pc, #696]	; (332b4 <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   32ffc:	sub	sp, #52	; 0x34
   32ffe:	ldr	r3, [pc, #696]	; (332b8 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   33000:	mov	r4, r0
   33002:	add	r2, pc
   33004:	mov	r8, r1
   33006:	ldr	r3, [r2, r3]
   33008:	ldr	r3, [r3, #0]
   3300a:	str	r3, [sp, #44]	; 0x2c
   3300c:	mov.w	r3, #0
   33010:	ldrb	r3, [r0, #0]
   33012:	cmp	r3, #0
   33014:	beq.n	330d6 <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   33016:	movw	r6, #4112	; 0x1010
   3301a:	movw	sl, #4104	; 0x1008
   3301e:	ldr	r3, [r4, #20]
   33020:	cmp	r3, #0
   33022:	beq.w	33294 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   33026:	muls	r3, r6
   33028:	ldr	r2, [r4, #16]
   3302a:	sub.w	r3, r3, #4096	; 0x1000
   3302e:	subs	r3, #16
   33030:	add.w	fp, r2, r3
   33034:	add.w	r7, fp, sl
   33038:	ldr.w	r1, [fp, sl]
   3303c:	ldr.w	r2, [fp, #64]	; 0x40
   33040:	cmp	r1, r2
   33042:	bcc.w	33186 <btrfs_util_subvolume_iterator_next@@Base+0x192>
   33046:	mov.w	r2, #4096	; 0x1000
   3304a:	ldr	r1, [pc, #608]	; (332ac <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   3304c:	str.w	r2, [fp, #64]	; 0x40
   33050:	mov	r2, fp
   33052:	ldr	r0, [r4, #4]
   33054:	blx	8764 <ioctl@plt>
   33058:	adds	r0, #1
   3305a:	beq.w	3321e <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   3305e:	add.w	r1, fp, #4096	; 0x1000
   33062:	movs	r2, #0
   33064:	str	r2, [r7, #0]
   33066:	str	r2, [r1, #0]
   33068:	ldr.w	r2, [fp, #64]	; 0x40
   3306c:	cmp	r2, #0
   3306e:	bne.n	3301e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33070:	mov	r0, r4
   33072:	bl	3230c <print_all_devices@@Base+0x684>
   33076:	ldr	r2, [r4, #12]
   33078:	lsls	r0, r2, #31
   3307a:	bpl.n	3301e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   3307c:	ldr	r2, [r4, #20]
   3307e:	cmp	r2, #0
   33080:	beq.n	3301e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33082:	cmp.w	r8, #0
   33086:	beq.n	330b4 <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   33088:	movw	r7, #4108	; 0x100c
   3308c:	ldr.w	r9, [fp, r7]
   33090:	add.w	r0, r9, #1
   33094:	blx	8820 <malloc@plt+0x4>
   33098:	mov	r6, r0
   3309a:	str.w	r0, [r8]
   3309e:	cmp	r0, #0
   330a0:	beq.w	3329c <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   330a4:	ldr	r1, [r4, #28]
   330a6:	mov	r2, r9
   330a8:	blx	8628 <memcpy@plt+0x4>
   330ac:	ldr.w	r2, [fp, r7]
   330b0:	movs	r1, #0
   330b2:	strb	r1, [r6, r2]
   330b4:	cbz	r5, 330be <btrfs_util_subvolume_iterator_next@@Base+0xca>
   330b6:	ldrd	r2, r3, [fp, #8]
   330ba:	strd	r2, r3, [r5]
   330be:	movs	r3, #0
   330c0:	ldr	r1, [pc, #504]	; (332bc <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   330c2:	ldr	r2, [pc, #500]	; (332b8 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   330c4:	add	r1, pc
   330c6:	ldr	r2, [r1, r2]
   330c8:	ldr	r1, [r2, #0]
   330ca:	ldr	r2, [sp, #44]	; 0x2c
   330cc:	eors	r1, r2
   330ce:	beq.w	332a4 <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   330d2:	blx	86b8 <__stack_chk_fail@plt>
   330d6:	movw	r9, #4112	; 0x1010
   330da:	movw	sl, #4104	; 0x1008
   330de:	ldr	r3, [r4, #20]
   330e0:	cmp	r3, #0
   330e2:	beq.w	33294 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   330e6:	mul.w	fp, r9, r3
   330ea:	ldr	r3, [r4, #16]
   330ec:	sub.w	fp, fp, #4096	; 0x1000
   330f0:	sub.w	fp, fp, #16
   330f4:	add	fp, r3
   330f6:	add.w	r6, fp, #4096	; 0x1000
   330fa:	add.w	r7, fp, sl
   330fe:	ldr.w	r1, [fp, sl]
   33102:	ldrb	r3, [r6, #0]
   33104:	cmp	r1, r3
   33106:	bcc.w	33222 <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   3310a:	ldr	r1, [pc, #420]	; (332b0 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   3310c:	add.w	r2, fp, #8
   33110:	ldr	r0, [r4, #8]
   33112:	blx	8764 <ioctl@plt>
   33116:	adds	r0, #1
   33118:	bne.n	33126 <btrfs_util_subvolume_iterator_next@@Base+0x132>
   3311a:	blx	8938 <__errno_location@plt>
   3311e:	ldr	r3, [r0, #0]
   33120:	cmp	r3, #75	; 0x4b
   33122:	bne.w	33298 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   33126:	movs	r3, #0
   33128:	str	r3, [r7, #0]
   3312a:	ldrb	r3, [r6, #0]
   3312c:	cmp	r3, #0
   3312e:	bne.n	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33130:	mov	r0, r4
   33132:	bl	3230c <print_all_devices@@Base+0x684>
   33136:	mov	r3, r0
   33138:	cmp	r0, #0
   3313a:	bne.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3313c:	ldr	r3, [r4, #12]
   3313e:	lsls	r2, r3, #31
   33140:	bpl.n	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33142:	ldr	r3, [r4, #20]
   33144:	cmp	r3, #0
   33146:	beq.n	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33148:	cmp.w	r8, #0
   3314c:	beq.n	3317a <btrfs_util_subvolume_iterator_next@@Base+0x186>
   3314e:	movw	r7, #4108	; 0x100c
   33152:	ldr.w	r9, [fp, r7]
   33156:	add.w	r0, r9, #1
   3315a:	blx	8820 <malloc@plt+0x4>
   3315e:	mov	r6, r0
   33160:	str.w	r0, [r8]
   33164:	cmp	r0, #0
   33166:	beq.w	3329c <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   3316a:	mov	r2, r9
   3316c:	ldr	r1, [r4, #28]
   3316e:	blx	8628 <memcpy@plt+0x4>
   33172:	ldr.w	r3, [fp, r7]
   33176:	movs	r2, #0
   33178:	strb	r2, [r6, r3]
   3317a:	cmp	r5, #0
   3317c:	beq.w	332a0 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   33180:	ldrd	r2, r3, [fp]
   33184:	b.n	330ba <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   33186:	add.w	r0, fp, #4096	; 0x1000
   3318a:	add.w	ip, fp, #104	; 0x68
   3318e:	adds	r1, #1
   33190:	add	r7, sp, #32
   33192:	ldr	r2, [r0, #0]
   33194:	str.w	r1, [fp, sl]
   33198:	add	ip, r2
   3319a:	adds	r2, #32
   3319c:	ldr.w	r1, [ip, #28]
   331a0:	mov	r9, ip
   331a2:	add	r2, r1
   331a4:	str	r2, [r0, #0]
   331a6:	ldr.w	r0, [r9, #16]!
   331aa:	mov	r2, r7
   331ac:	ldr.w	r1, [r9, #4]
   331b0:	stmia	r2!, {r0, r1}
   331b2:	adds	r2, r0, #1
   331b4:	ldr	r1, [sp, #36]	; 0x24
   331b6:	adc.w	r1, r1, #0
   331ba:	strd	r2, r1, [fp, #24]
   331be:	ldr.w	r3, [ip, #24]
   331c2:	cmp	r3, #156	; 0x9c
   331c4:	bne.w	3301e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   331c8:	add	r3, sp, #28
   331ca:	add.w	r2, ip, #32
   331ce:	str	r3, [sp, #0]
   331d0:	mov	r1, ip
   331d2:	add.w	r3, ip, #50	; 0x32
   331d6:	mov	r0, r4
   331d8:	bl	3218c <print_all_devices@@Base+0x504>
   331dc:	mov	r3, r0
   331de:	cmp	r0, #0
   331e0:	bne.w	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   331e4:	ldr.w	r0, [r9]
   331e8:	ldr.w	r1, [r9, #4]
   331ec:	ldr	r3, [sp, #28]
   331ee:	stmia	r7!, {r0, r1}
   331f0:	mov	r0, r4
   331f2:	str	r3, [sp, #0]
   331f4:	ldrd	r2, r3, [sp, #32]
   331f8:	bl	32634 <btrfs_util_subvolume_id@@Base+0xe0>
   331fc:	mov	r3, r0
   331fe:	cmp	r0, #0
   33200:	bne.w	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33204:	ldr	r3, [r4, #12]
   33206:	lsls	r1, r3, #31
   33208:	bmi.w	3301e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   3320c:	ldr	r3, [r4, #20]
   3320e:	muls	r6, r3
   33210:	ldr	r3, [r4, #16]
   33212:	sub.w	r6, r6, #4096	; 0x1000
   33216:	subs	r6, #16
   33218:	add.w	fp, r3, r6
   3321c:	b.n	33082 <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   3321e:	movs	r3, #12
   33220:	b.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33222:	adds	r1, #1
   33224:	mov	r0, r4
   33226:	add.w	r3, fp, r1, lsl #4
   3322a:	ldrd	r6, r7, [r3]
   3322e:	ldrd	r2, r3, [r3, #8]
   33232:	str.w	r1, [fp, sl]
   33236:	add	r1, sp, #32
   33238:	str	r1, [sp, #8]
   3323a:	strd	r2, r3, [sp]
   3323e:	mov	r2, r6
   33240:	mov	r3, r7
   33242:	bl	3224c <print_all_devices@@Base+0x5c4>
   33246:	str	r0, [sp, #20]
   33248:	cbz	r0, 3325a <btrfs_util_subvolume_iterator_next@@Base+0x266>
   3324a:	blx	8938 <__errno_location@plt>
   3324e:	ldr	r2, [r0, #0]
   33250:	cmp	r2, #13
   33252:	ldr	r3, [sp, #20]
   33254:	bne.w	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33258:	b.n	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   3325a:	ldr	r3, [sp, #32]
   3325c:	mov	r2, r6
   3325e:	mov	r0, r4
   33260:	str	r3, [sp, #0]
   33262:	mov	r3, r7
   33264:	bl	32634 <btrfs_util_subvolume_id@@Base+0xe0>
   33268:	str	r0, [sp, #20]
   3326a:	cbz	r0, 33278 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   3326c:	blx	8938 <__errno_location@plt>
   33270:	ldr	r2, [r0, #0]
   33272:	cmp	r2, #2
   33274:	bne.n	33250 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   33276:	b.n	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33278:	ldr	r3, [r4, #12]
   3327a:	lsls	r3, r3, #31
   3327c:	bmi.w	330de <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33280:	ldr	r3, [r4, #20]
   33282:	mul.w	fp, r9, r3
   33286:	ldr	r3, [r4, #16]
   33288:	sub.w	fp, fp, #4096	; 0x1000
   3328c:	sub.w	fp, fp, #16
   33290:	add	fp, r3
   33292:	b.n	33148 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   33294:	movs	r3, #1
   33296:	b.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33298:	movs	r3, #24
   3329a:	b.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3329c:	movs	r3, #2
   3329e:	b.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332a0:	mov	r3, r5
   332a2:	b.n	330c0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332a4:	mov	r0, r3
   332a6:	add	sp, #52	; 0x34
   332a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   332ac:	str	r4, [sp, #68]	; 0x44
   332ae:	beq.n	332b2 <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   332b0:	str	r4, [sp, #244]	; 0xf4
   332b2:	beq.n	332b6 <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   332b4:	adds	r6, r0, #6
   332b6:	movs	r3, r0
   332b8:	lsls	r4, r4, #8
   332ba:	movs	r0, r0
   332bc:	adds	r4, r0, #3
   332be:	movs	r3, r0

000332c0 <btrfs_util_create_snapshot_fd2@@Base>:
   332c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   332c4:	sub.w	sp, sp, #8192	; 0x2000
   332c8:	sub	sp, #4
   332ca:	mov	r6, r3
   332cc:	add.w	r3, sp, #8192	; 0x2000
   332d0:	mov	sl, r1
   332d2:	ldr	r1, [pc, #604]	; (33530 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   332d4:	adds	r3, #40	; 0x28
   332d6:	mov	r7, r2
   332d8:	ldr	r5, [r3, #0]
   332da:	ldr	r2, [pc, #600]	; (33534 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   332dc:	add.w	r3, sp, #8192	; 0x2000
   332e0:	add	r1, pc
   332e2:	add.w	r8, sp, #64	; 0x40
   332e6:	ldr.w	fp, [r3, #44]	; 0x2c
   332ea:	adds	r3, #44	; 0x2c
   332ec:	ldr	r2, [r1, r2]
   332ee:	add.w	r3, sp, #8160	; 0x1fe0
   332f2:	sub.w	r4, r8, #16
   332f6:	mov	r9, r0
   332f8:	ldr	r2, [r2, #0]
   332fa:	str	r2, [r3, #28]
   332fc:	mov.w	r2, #0
   33300:	mov.w	r2, #4096	; 0x1000
   33304:	movs	r1, #0
   33306:	mov	r0, r4
   33308:	adds	r3, #28
   3330a:	blx	8978 <memset@plt+0x4>
   3330e:	mov	r2, r9
   33310:	asrs	r3, r2, #31
   33312:	strd	r2, r3, [r8, #-16]
   33316:	bics.w	r3, r6, #3
   3331a:	bne.n	33320 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   3331c:	cmp	r6, #3
   3331e:	bne.n	33346 <btrfs_util_create_snapshot_fd2@@Base+0x86>
   33320:	blx	8938 <__errno_location@plt>
   33324:	movs	r3, #22
   33326:	movs	r6, #3
   33328:	str	r3, [r0, #0]
   3332a:	ldr	r1, [pc, #524]	; (33538 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   3332c:	add.w	r3, sp, #8160	; 0x1fe0
   33330:	ldr	r2, [pc, #512]	; (33534 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   33332:	adds	r3, #28
   33334:	add	r1, pc
   33336:	ldr	r2, [r1, r2]
   33338:	ldr	r1, [r2, #0]
   3333a:	ldr	r2, [r3, #0]
   3333c:	eors	r1, r2
   3333e:	beq.w	3351e <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   33342:	blx	86b8 <__stack_chk_fail@plt>
   33346:	lsls	r2, r6, #30
   33348:	ittt	mi
   3334a:	movmi	r2, #2
   3334c:	movmi	r3, #0
   3334e:	strdmi	r2, r3, [r4, #16]
   33352:	cbz	r5, 3335c <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   33354:	ldr	r3, [r4, #16]
   33356:	orr.w	r3, r3, #1
   3335a:	str	r3, [r4, #16]
   3335c:	cmp.w	fp, #0
   33360:	beq.n	33384 <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   33362:	ldr	r3, [r4, #16]
   33364:	str.w	fp, [r4, #32]
   33368:	orr.w	r3, r3, #4
   3336c:	str	r3, [r4, #16]
   3336e:	ldrd	r3, r2, [fp, #8]
   33372:	adds	r3, #9
   33374:	adc.w	r2, r2, #0
   33378:	lsls	r2, r2, #3
   3337a:	orr.w	r2, r2, r3, lsr #29
   3337e:	lsls	r3, r3, #3
   33380:	strd	r3, r2, [r4, #24]
   33384:	mov	r0, r7
   33386:	blx	88f0 <strlen@plt>
   3338a:	movw	r3, #4039	; 0xfc7
   3338e:	cmp	r0, r3
   33390:	mov	fp, r0
   33392:	bls.n	3339c <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   33394:	blx	8938 <__errno_location@plt>
   33398:	movs	r3, #36	; 0x24
   3339a:	b.n	33326 <btrfs_util_create_snapshot_fd2@@Base+0x66>
   3339c:	mov	r2, r0
   3339e:	movw	r3, #4040	; 0xfc8
   333a2:	mov	r1, r7
   333a4:	add.w	r0, r8, #40	; 0x28
   333a8:	add	fp, r4
   333aa:	blx	8748 <__memcpy_chk@plt>
   333ae:	ldr	r1, [pc, #380]	; (3352c <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   333b0:	mov	r2, r4
   333b2:	mov	r0, sl
   333b4:	movs	r3, #0
   333b6:	strb.w	r3, [fp, #56]	; 0x38
   333ba:	blx	8764 <ioctl@plt>
   333be:	adds	r0, #1
   333c0:	beq.w	33516 <btrfs_util_create_snapshot_fd2@@Base+0x256>
   333c4:	cbz	r5, 333ce <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   333c6:	ldrd	r2, r3, [r4, #8]
   333ca:	strd	r2, r3, [r5]
   333ce:	ands.w	r3, r6, #1
   333d2:	beq.w	3351a <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   333d6:	mov	r1, r7
   333d8:	movs	r2, #0
   333da:	mov	r0, sl
   333dc:	blx	86ac <openat@plt>
   333e0:	adds	r3, r0, #1
   333e2:	mov	r7, r0
   333e4:	beq.w	33512 <btrfs_util_create_snapshot_fd2@@Base+0x252>
   333e8:	add	r4, sp, #32
   333ea:	movs	r2, #0
   333ec:	subs	r3, r4, #4
   333ee:	mov	r0, r9
   333f0:	str	r3, [sp, #12]
   333f2:	str	r3, [sp, #4]
   333f4:	movs	r3, #0
   333f6:	str	r3, [sp, #0]
   333f8:	movs	r3, #0
   333fa:	bl	32e8c <btrfs_util_create_subvolume_iterator_fd@@Base>
   333fe:	mov	r6, r0
   33400:	cbnz	r0, 33440 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   33402:	cmp	r5, #0
   33404:	add.w	sl, sp, #36	; 0x24
   33408:	sub.w	r3, r8, #24
   3340c:	str	r3, [sp, #16]
   3340e:	it	eq
   33410:	moveq	r3, #0
   33412:	str	r3, [sp, #20]
   33414:	ldr	r3, [sp, #12]
   33416:	movs	r2, #0
   33418:	mov	r1, r4
   3341a:	ldr	r0, [r3, #0]
   3341c:	bl	32ff4 <btrfs_util_subvolume_iterator_next@@Base>
   33420:	mov	fp, r0
   33422:	blx	8938 <__errno_location@plt>
   33426:	mov	r6, r0
   33428:	cmp.w	fp, #0
   3342c:	beq.n	33452 <btrfs_util_create_snapshot_fd2@@Base+0x192>
   3342e:	cmp.w	fp, #1
   33432:	it	eq
   33434:	moveq.w	fp, #0
   33438:	ldr	r0, [sp, #28]
   3343a:	mov	r6, fp
   3343c:	bl	32fa4 <btrfs_util_destroy_subvolume_iterator@@Base>
   33440:	blx	8938 <__errno_location@plt>
   33444:	ldr	r5, [r0, #0]
   33446:	mov	r4, r0
   33448:	mov	r0, r7
   3344a:	blx	8b4c <close@plt>
   3344e:	str	r5, [r4, #0]
   33450:	b.n	3332a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33452:	ldr	r1, [r4, #0]
   33454:	mov.w	r2, #512	; 0x200
   33458:	mov	r0, r7
   3345a:	blx	85bc <unlinkat@plt>
   3345e:	adds	r0, #1
   33460:	bne.n	3346e <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   33462:	ldr	r0, [r4, #0]
   33464:	mov.w	fp, #8
   33468:	blx	85dc <free@plt+0x4>
   3346c:	b.n	33438 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   3346e:	ldr	r1, [r4, #0]
   33470:	mov	r2, fp
   33472:	mov	r0, r9
   33474:	blx	86ac <openat@plt>
   33478:	cmp.w	r0, #4294967295	; 0xffffffff
   3347c:	mov	r8, r0
   3347e:	bne.n	3348c <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   33480:	ldr	r0, [r4, #0]
   33482:	mov.w	fp, #7
   33486:	blx	85dc <free@plt+0x4>
   3348a:	b.n	33438 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   3348c:	add.w	r2, sp, #4128	; 0x1020
   33490:	movw	r3, #4040	; 0xfc8
   33494:	adds	r2, #20
   33496:	str.w	sl, [sp]
   3349a:	mov	r0, r7
   3349c:	ldr	r1, [r4, #0]
   3349e:	str	r2, [sp, #8]
   334a0:	bl	31de8 <print_all_devices@@Base+0x160>
   334a4:	mov	fp, r0
   334a6:	ldr	r0, [r4, #0]
   334a8:	blx	85dc <free@plt+0x4>
   334ac:	ldr	r2, [sp, #8]
   334ae:	cmp.w	fp, #0
   334b2:	beq.n	334c0 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   334b4:	ldr	r4, [r6, #0]
   334b6:	mov	r0, r8
   334b8:	blx	8b4c <close@plt>
   334bc:	str	r4, [r6, #0]
   334be:	b.n	33438 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   334c0:	ldr	r3, [sp, #20]
   334c2:	mov	r0, r8
   334c4:	str.w	fp, [sp, #4]
   334c8:	str	r3, [sp, #0]
   334ca:	mov	r3, fp
   334cc:	ldr.w	r1, [sl]
   334d0:	bl	332c0 <btrfs_util_create_snapshot_fd2@@Base>
   334d4:	ldr	r3, [r6, #0]
   334d6:	str	r3, [sp, #8]
   334d8:	mov	fp, r0
   334da:	mov	r0, r8
   334dc:	blx	8b4c <close@plt>
   334e0:	ldr	r3, [sp, #8]
   334e2:	ldr.w	r0, [sl]
   334e6:	str	r3, [r6, #0]
   334e8:	blx	8b4c <close@plt>
   334ec:	ldr	r3, [sp, #8]
   334ee:	str	r3, [r6, #0]
   334f0:	cmp.w	fp, #0
   334f4:	bne.n	33438 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   334f6:	cmp	r5, #0
   334f8:	beq.n	33414 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   334fa:	ldr	r3, [sp, #16]
   334fc:	ldrd	r0, r1, [r3]
   33500:	ldrd	r2, r3, [r5]
   33504:	cmp	r3, r1
   33506:	it	eq
   33508:	cmpeq	r2, r0
   3350a:	bcs.n	33414 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   3350c:	strd	r0, r1, [r5]
   33510:	b.n	33414 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33512:	movs	r6, #7
   33514:	b.n	3332a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33516:	movs	r6, #16
   33518:	b.n	3332a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   3351a:	mov	r6, r3
   3351c:	b.n	3332a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   3351e:	mov	r0, r6
   33520:	add.w	sp, sp, #8192	; 0x2000
   33524:	add	sp, #4
   33526:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3352a:	nop
   3352c:	str	r4, [sp, #92]	; 0x5c
   3352e:	str	r0, [r0, r0]
   33530:	subs	r0, r5, r2
   33532:	movs	r3, r0
   33534:	lsls	r4, r4, #8
   33536:	movs	r0, r0
   33538:	subs	r4, r2, r1
   3353a:	movs	r3, r0

0003353c <btrfs_util_create_snapshot_fd@@Base>:
   3353c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33540:	subw	sp, sp, #4068	; 0xfe4
   33544:	mov	r8, r3
   33546:	add.w	r3, sp, #4096	; 0x1000
   3354a:	mov	r7, r2
   3354c:	ldr	r2, [pc, #112]	; (335c0 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   3354e:	ldr.w	r9, [r3]
   33552:	add	r6, sp, #16
   33554:	ldr	r3, [pc, #108]	; (335c4 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   33556:	add	r2, pc
   33558:	mov	r5, r0
   3355a:	mvn.w	r0, #99	; 0x63
   3355e:	ldr	r3, [r2, r3]
   33560:	add	r2, sp, #20
   33562:	ldr	r3, [r3, #0]
   33564:	str.w	r3, [sp, #4060]	; 0xfdc
   33568:	mov.w	r3, #0
   3356c:	movw	r3, #4040	; 0xfc8
   33570:	str	r6, [sp, #0]
   33572:	str	r2, [sp, #12]
   33574:	bl	31de8 <print_all_devices@@Base+0x160>
   33578:	mov	r4, r0
   3357a:	cbnz	r0, 3359e <btrfs_util_create_snapshot_fd@@Base+0x62>
   3357c:	mov	r3, r7
   3357e:	ldr	r2, [sp, #12]
   33580:	mov	r0, r5
   33582:	strd	r8, r9, [sp]
   33586:	ldr	r1, [r6, #0]
   33588:	bl	332c0 <btrfs_util_create_snapshot_fd2@@Base>
   3358c:	mov	r4, r0
   3358e:	blx	8938 <__errno_location@plt>
   33592:	ldr	r7, [r0, #0]
   33594:	mov	r5, r0
   33596:	ldr	r0, [r6, #0]
   33598:	blx	8b4c <close@plt>
   3359c:	str	r7, [r5, #0]
   3359e:	ldr	r2, [pc, #40]	; (335c8 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   335a0:	ldr	r3, [pc, #32]	; (335c4 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   335a2:	add	r2, pc
   335a4:	ldr	r3, [r2, r3]
   335a6:	ldr	r2, [r3, #0]
   335a8:	ldr.w	r3, [sp, #4060]	; 0xfdc
   335ac:	eors	r2, r3
   335ae:	beq.n	335b4 <btrfs_util_create_snapshot_fd@@Base+0x78>
   335b0:	blx	86b8 <__stack_chk_fail@plt>
   335b4:	mov	r0, r4
   335b6:	addw	sp, sp, #4068	; 0xfe4
   335ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   335be:	nop
   335c0:	adds	r2, r6, r0
   335c2:	movs	r3, r0
   335c4:	lsls	r4, r4, #8
   335c6:	movs	r0, r0
   335c8:	asrs	r6, r4, #31
   335ca:	movs	r3, r0

000335cc <btrfs_util_create_snapshot@@Base>:
   335cc:	push	{r4, r5, r6, r7, lr}
   335ce:	sub	sp, #20
   335d0:	mov	r4, r1
   335d2:	movs	r1, #0
   335d4:	strd	r3, r2, [sp, #8]
   335d8:	blx	88a8 <open@plt>
   335dc:	adds	r3, r0, #1
   335de:	mov	r6, r0
   335e0:	beq.n	33608 <btrfs_util_create_snapshot@@Base+0x3c>
   335e2:	ldr	r1, [sp, #40]	; 0x28
   335e4:	ldrd	r3, r2, [sp, #8]
   335e8:	str	r1, [sp, #0]
   335ea:	mov	r1, r4
   335ec:	bl	3353c <btrfs_util_create_snapshot_fd@@Base>
   335f0:	mov	r4, r0
   335f2:	blx	8938 <__errno_location@plt>
   335f6:	ldr	r7, [r0, #0]
   335f8:	mov	r5, r0
   335fa:	mov	r0, r6
   335fc:	blx	8b4c <close@plt>
   33600:	str	r7, [r5, #0]
   33602:	mov	r0, r4
   33604:	add	sp, #20
   33606:	pop	{r4, r5, r6, r7, pc}
   33608:	movs	r4, #7
   3360a:	b.n	33602 <btrfs_util_create_snapshot@@Base+0x36>

0003360c <btrfs_util_delete_subvolume_fd@@Base>:
   3360c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33610:	mov	r5, r1
   33612:	ldr	r1, [pc, #384]	; (33794 <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   33614:	mov	r6, r2
   33616:	ldr	r2, [pc, #384]	; (33798 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   33618:	sub.w	sp, sp, #8192	; 0x2000
   3361c:	add	r1, pc
   3361e:	sub	sp, #36	; 0x24
   33620:	add.w	r3, sp, #8192	; 0x2000
   33624:	add	r4, sp, #32
   33626:	ldr	r2, [r1, r2]
   33628:	mov	r7, r0
   3362a:	mov	r0, r4
   3362c:	movs	r1, #0
   3362e:	ldr	r2, [r2, #0]
   33630:	str	r2, [r3, #28]
   33632:	mov.w	r2, #0
   33636:	mov.w	r2, #4096	; 0x1000
   3363a:	adds	r3, #28
   3363c:	blx	8978 <memset@plt+0x4>
   33640:	bics.w	r2, r6, #1
   33644:	beq.n	33654 <btrfs_util_delete_subvolume_fd@@Base+0x48>
   33646:	blx	8938 <__errno_location@plt>
   3364a:	movs	r3, #22
   3364c:	mov.w	r8, #3
   33650:	str	r3, [r0, #0]
   33652:	b.n	33680 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33654:	cbnz	r6, 3366e <btrfs_util_delete_subvolume_fd@@Base+0x62>
   33656:	mov	r0, r5
   33658:	blx	88f0 <strlen@plt>
   3365c:	movw	r3, #4087	; 0xff7
   33660:	cmp	r0, r3
   33662:	mov	r6, r0
   33664:	bls.n	33754 <btrfs_util_delete_subvolume_fd@@Base+0x148>
   33666:	blx	8938 <__errno_location@plt>
   3366a:	movs	r3, #36	; 0x24
   3366c:	b.n	3364c <btrfs_util_delete_subvolume_fd@@Base+0x40>
   3366e:	mov	r1, r5
   33670:	mov	r0, r7
   33672:	blx	86ac <openat@plt>
   33676:	adds	r3, r0, #1
   33678:	mov	r6, r0
   3367a:	bne.n	3369a <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   3367c:	mov.w	r8, #7
   33680:	ldr	r1, [pc, #280]	; (3379c <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   33682:	add.w	r3, sp, #8192	; 0x2000
   33686:	ldr	r2, [pc, #272]	; (33798 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   33688:	adds	r3, #28
   3368a:	add	r1, pc
   3368c:	ldr	r2, [r1, r2]
   3368e:	ldr	r1, [r2, #0]
   33690:	ldr	r2, [r3, #0]
   33692:	eors	r1, r2
   33694:	beq.n	33782 <btrfs_util_delete_subvolume_fd@@Base+0x176>
   33696:	blx	86b8 <__stack_chk_fail@plt>
   3369a:	sub.w	r3, r4, #12
   3369e:	movs	r2, #0
   336a0:	strd	r3, r3, [sp, #4]
   336a4:	movs	r3, #1
   336a6:	str	r3, [sp, #0]
   336a8:	movs	r3, #0
   336aa:	bl	32e8c <btrfs_util_create_subvolume_iterator_fd@@Base>
   336ae:	mov	r8, r0
   336b0:	cbnz	r0, 336ea <btrfs_util_delete_subvolume_fd@@Base+0xde>
   336b2:	add.w	sl, sp, #4128	; 0x1020
   336b6:	sub.w	r9, r4, #8
   336ba:	add.w	sl, sl, #4
   336be:	ldr	r3, [sp, #8]
   336c0:	movs	r2, #0
   336c2:	mov	r1, r9
   336c4:	ldr	r0, [r3, #0]
   336c6:	bl	32ff4 <btrfs_util_subvolume_iterator_next@@Base>
   336ca:	mov	r8, r0
   336cc:	blx	8938 <__errno_location@plt>
   336d0:	mov	fp, r0
   336d2:	cmp.w	r8, #0
   336d6:	beq.n	33706 <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   336d8:	cmp.w	r8, #1
   336dc:	it	eq
   336de:	moveq.w	r8, #0
   336e2:	ldr.w	r0, [r4, #-12]
   336e6:	bl	32fa4 <btrfs_util_destroy_subvolume_iterator@@Base>
   336ea:	blx	8938 <__errno_location@plt>
   336ee:	ldr.w	sl, [r0]
   336f2:	mov	r9, r0
   336f4:	mov	r0, r6
   336f6:	blx	8b4c <close@plt>
   336fa:	str.w	sl, [r9]
   336fe:	cmp.w	r8, #0
   33702:	beq.n	33656 <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   33704:	b.n	33680 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33706:	subs	r3, r4, #4
   33708:	mov	r2, sl
   3370a:	str	r3, [sp, #0]
   3370c:	mov	r0, r6
   3370e:	ldr.w	r1, [r9]
   33712:	movw	r3, #4088	; 0xff8
   33716:	bl	31de8 <print_all_devices@@Base+0x160>
   3371a:	mov	r8, r0
   3371c:	ldr.w	r0, [r9]
   33720:	blx	85dc <free@plt+0x4>
   33724:	cmp.w	r8, #0
   33728:	bne.n	336e2 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   3372a:	mov	r2, r8
   3372c:	mov	r1, sl
   3372e:	ldr.w	r0, [r4, #-4]
   33732:	bl	3360c <btrfs_util_delete_subvolume_fd@@Base>
   33736:	ldr.w	r3, [fp]
   3373a:	str	r3, [sp, #12]
   3373c:	mov	r8, r0
   3373e:	ldr.w	r0, [r4, #-4]
   33742:	blx	8b4c <close@plt>
   33746:	ldr	r3, [sp, #12]
   33748:	str.w	r3, [fp]
   3374c:	cmp.w	r8, #0
   33750:	beq.n	336be <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   33752:	b.n	336e2 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   33754:	mov	r2, r0
   33756:	movw	r3, #4088	; 0xff8
   3375a:	mov	r1, r5
   3375c:	add.w	r0, r4, #8
   33760:	add	r6, r4
   33762:	blx	8748 <__memcpy_chk@plt>
   33766:	ldr	r1, [pc, #40]	; (33790 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   33768:	mov	r2, r4
   3376a:	mov	r0, r7
   3376c:	movs	r3, #0
   3376e:	strb	r3, [r6, #8]
   33770:	blx	8764 <ioctl@plt>
   33774:	adds	r0, #1
   33776:	ite	ne
   33778:	movne.w	r8, #0
   3377c:	moveq.w	r8, #18
   33780:	b.n	33680 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33782:	mov	r0, r8
   33784:	add.w	sp, sp, #8192	; 0x2000
   33788:	add	sp, #36	; 0x24
   3378a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3378e:	nop
   33790:	str	r4, [sp, #60]	; 0x3c
   33792:	str	r0, [r0, r0]
   33794:	asrs	r4, r5, #29
   33796:	movs	r3, r0
   33798:	lsls	r4, r4, #8
   3379a:	movs	r0, r0
   3379c:	asrs	r6, r7, #27
   3379e:	movs	r3, r0

000337a0 <btrfs_util_delete_subvolume@@Base>:
   337a0:	push	{r4, r5, r6, r7, lr}
   337a2:	mov	r5, r1
   337a4:	ldr	r1, [pc, #116]	; (3381c <btrfs_util_delete_subvolume@@Base+0x7c>)
   337a6:	sub.w	sp, sp, #4096	; 0x1000
   337aa:	ldr	r2, [pc, #116]	; (33820 <btrfs_util_delete_subvolume@@Base+0x80>)
   337ac:	sub	sp, #12
   337ae:	add	r1, pc
   337b0:	add.w	r3, sp, #4096	; 0x1000
   337b4:	add	r7, sp, #12
   337b6:	adds	r3, #4
   337b8:	ldr	r2, [r1, r2]
   337ba:	add	r6, sp, #8
   337bc:	mov	r1, r0
   337be:	mvn.w	r0, #99	; 0x63
   337c2:	ldr	r2, [r2, #0]
   337c4:	str	r2, [r3, #0]
   337c6:	mov.w	r2, #0
   337ca:	movw	r3, #4088	; 0xff8
   337ce:	mov	r2, r7
   337d0:	str	r6, [sp, #0]
   337d2:	bl	31de8 <print_all_devices@@Base+0x160>
   337d6:	mov	r4, r0
   337d8:	cbnz	r0, 337f6 <btrfs_util_delete_subvolume@@Base+0x56>
   337da:	mov	r2, r5
   337dc:	mov	r1, r7
   337de:	ldr	r0, [r6, #0]
   337e0:	bl	3360c <btrfs_util_delete_subvolume_fd@@Base>
   337e4:	mov	r4, r0
   337e6:	blx	8938 <__errno_location@plt>
   337ea:	ldr	r7, [r0, #0]
   337ec:	mov	r5, r0
   337ee:	ldr	r0, [r6, #0]
   337f0:	blx	8b4c <close@plt>
   337f4:	str	r7, [r5, #0]
   337f6:	ldr	r1, [pc, #44]	; (33824 <btrfs_util_delete_subvolume@@Base+0x84>)
   337f8:	add.w	r3, sp, #4096	; 0x1000
   337fc:	ldr	r2, [pc, #32]	; (33820 <btrfs_util_delete_subvolume@@Base+0x80>)
   337fe:	adds	r3, #4
   33800:	add	r1, pc
   33802:	ldr	r2, [r1, r2]
   33804:	ldr	r1, [r2, #0]
   33806:	ldr	r2, [r3, #0]
   33808:	eors	r1, r2
   3380a:	beq.n	33810 <btrfs_util_delete_subvolume@@Base+0x70>
   3380c:	blx	86b8 <__stack_chk_fail@plt>
   33810:	mov	r0, r4
   33812:	add.w	sp, sp, #4096	; 0x1000
   33816:	add	sp, #12
   33818:	pop	{r4, r5, r6, r7, pc}
   3381a:	nop
   3381c:	asrs	r2, r3, #23
   3381e:	movs	r3, r0
   33820:	lsls	r4, r4, #8
   33822:	movs	r0, r0
   33824:	asrs	r0, r1, #22
   33826:	movs	r3, r0

00033828 <btrfs_util_subvolume_iterator_next_info@@Base>:
   33828:	push	{r4, r5, lr}
   3382a:	mov	r5, r2
   3382c:	ldr	r2, [pc, #72]	; (33878 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   3382e:	sub	sp, #28
   33830:	ldr	r3, [pc, #72]	; (3387c <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   33832:	mov	r4, r0
   33834:	add	r2, pc
   33836:	ldr	r3, [r2, r3]
   33838:	add	r2, sp, #8
   3383a:	ldr	r3, [r3, #0]
   3383c:	str	r3, [sp, #20]
   3383e:	mov.w	r3, #0
   33842:	bl	32ff4 <btrfs_util_subvolume_iterator_next@@Base>
   33846:	cbnz	r0, 33858 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   33848:	ldrb	r3, [r4, #0]
   3384a:	str	r5, [sp, #0]
   3384c:	cbz	r3, 3386c <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   3384e:	ldrd	r2, r3, [sp, #8]
   33852:	ldr	r0, [r4, #4]
   33854:	bl	32960 <btrfs_util_subvolume_info_fd@@Base>
   33858:	ldr	r2, [pc, #36]	; (33880 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   3385a:	ldr	r3, [pc, #32]	; (3387c <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   3385c:	add	r2, pc
   3385e:	ldr	r3, [r2, r3]
   33860:	ldr	r2, [r3, #0]
   33862:	ldr	r3, [sp, #20]
   33864:	eors	r2, r3
   33866:	beq.n	33874 <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   33868:	blx	86b8 <__stack_chk_fail@plt>
   3386c:	ldr	r0, [r4, #8]
   3386e:	movs	r2, #0
   33870:	movs	r3, #0
   33872:	b.n	33854 <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   33874:	add	sp, #28
   33876:	pop	{r4, r5, pc}
   33878:	asrs	r4, r2, #21
   3387a:	movs	r3, r0
   3387c:	lsls	r4, r4, #8
   3387e:	movs	r0, r0
   33880:	asrs	r4, r5, #20
   33882:	movs	r3, r0

00033884 <btrfs_util_deleted_subvolumes_fd@@Base>:
   33884:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33888:	mov	r6, r1
   3388a:	ldr	r1, [pc, #320]	; (339cc <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   3388c:	mov	r7, r2
   3388e:	ldr	r2, [pc, #320]	; (339d0 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   33890:	sub.w	sp, sp, #4096	; 0x1000
   33894:	add	r1, pc
   33896:	sub	sp, #28
   33898:	add	r5, sp, #16
   3389a:	add.w	r3, sp, #4096	; 0x1000
   3389e:	ldr	r2, [r1, r2]
   338a0:	add	r4, sp, #24
   338a2:	mov	fp, r0
   338a4:	mov	r0, r5
   338a6:	ldr	r2, [r2, #0]
   338a8:	str	r2, [r3, #20]
   338aa:	mov.w	r2, #0
   338ae:	movs	r1, #0
   338b0:	mov.w	r2, #4096	; 0x1000
   338b4:	adds	r3, #20
   338b6:	blx	8978 <memset@plt+0x4>
   338ba:	movs	r2, #1
   338bc:	movs	r3, #0
   338be:	strd	r2, r3, [r4, #-8]
   338c2:	movs	r4, #0
   338c4:	mvn.w	r2, #4
   338c8:	mov	sl, r4
   338ca:	mov	r9, r4
   338cc:	mov.w	r3, #4294967295	; 0xffffffff
   338d0:	str	r4, [r6, #0]
   338d2:	strd	r2, r3, [r5, #8]
   338d6:	strd	r2, r3, [r5, #16]
   338da:	mov.w	r3, #4294967295	; 0xffffffff
   338de:	mov.w	r2, #4294967295	; 0xffffffff
   338e2:	str	r4, [r7, #0]
   338e4:	strd	r2, r3, [r5, #32]
   338e8:	strd	r2, r3, [r5, #48]	; 0x30
   338ec:	movs	r3, #48	; 0x30
   338ee:	strd	r3, r3, [r5, #56]	; 0x38
   338f2:	ldr	r3, [r5, #64]	; 0x40
   338f4:	cmp	r3, sl
   338f6:	bhi.n	33916 <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   338f8:	ldr	r1, [pc, #204]	; (339c8 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   338fa:	mov	r2, r5
   338fc:	mov	r0, fp
   338fe:	mov.w	r3, #4096	; 0x1000
   33902:	str	r3, [r5, #64]	; 0x40
   33904:	blx	8764 <ioctl@plt>
   33908:	adds	r0, #1
   3390a:	beq.n	339b2 <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   3390c:	ldr	r3, [r5, #64]	; 0x40
   3390e:	cmp	r3, #0
   33910:	beq.n	33998 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   33912:	movs	r4, #0
   33914:	mov	sl, r4
   33916:	add.w	r8, sp, #120	; 0x78
   3391a:	movs	r3, #0
   3391c:	add	r8, r4
   3391e:	str	r3, [sp, #0]
   33920:	mov	r0, fp
   33922:	ldrd	r2, r3, [r8, #16]
   33926:	bl	32960 <btrfs_util_subvolume_info_fd@@Base>
   3392a:	mov	r3, r0
   3392c:	cbnz	r0, 33984 <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   3392e:	ldr	r3, [r7, #0]
   33930:	cmp	r3, r9
   33932:	bcc.n	3394e <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   33934:	cmp.w	r9, #0
   33938:	beq.n	3397e <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   3393a:	mov.w	r9, r9, lsl #1
   3393e:	ldr	r0, [r6, #0]
   33940:	movs	r2, #8
   33942:	mov	r1, r9
   33944:	bl	33a10 <btrfs_util_deleted_subvolumes@@Base+0x38>
   33948:	cmp	r0, #0
   3394a:	beq.n	339b6 <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   3394c:	str	r0, [r6, #0]
   3394e:	ldr	r0, [r7, #0]
   33950:	ldr	r1, [r6, #0]
   33952:	adds	r3, r0, #1
   33954:	str	r3, [r7, #0]
   33956:	ldrd	r2, r3, [r8, #16]
   3395a:	add.w	r1, r1, r0, lsl #3
   3395e:	strd	r2, r3, [r1]
   33962:	ldr.w	r3, [r8, #28]
   33966:	adds	r4, #32
   33968:	add.w	sl, sl, #1
   3396c:	add	r4, r3
   3396e:	ldrd	r3, r2, [r8, #16]
   33972:	adds	r3, #1
   33974:	adc.w	r2, r2, #0
   33978:	strd	r3, r2, [r5, #24]
   3397c:	b.n	338f2 <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   3397e:	mov.w	r9, #1
   33982:	b.n	3393e <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   33984:	cmp	r0, #6
   33986:	beq.n	33962 <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   33988:	ldr	r0, [r6, #0]
   3398a:	str	r3, [sp, #12]
   3398c:	blx	85dc <free@plt+0x4>
   33990:	ldr	r3, [sp, #12]
   33992:	movs	r2, #0
   33994:	str	r2, [r6, #0]
   33996:	str	r2, [r7, #0]
   33998:	ldr	r0, [pc, #56]	; (339d4 <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   3399a:	add.w	r2, sp, #4096	; 0x1000
   3399e:	ldr	r1, [pc, #48]	; (339d0 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   339a0:	adds	r2, #20
   339a2:	add	r0, pc
   339a4:	ldr	r1, [r0, r1]
   339a6:	ldr	r0, [r1, #0]
   339a8:	ldr	r1, [r2, #0]
   339aa:	eors	r0, r1
   339ac:	beq.n	339ba <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   339ae:	blx	86b8 <__stack_chk_fail@plt>
   339b2:	movs	r3, #12
   339b4:	b.n	33988 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   339b6:	movs	r3, #2
   339b8:	b.n	33988 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   339ba:	mov	r0, r3
   339bc:	add.w	sp, sp, #4096	; 0x1000
   339c0:	add	sp, #28
   339c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   339c6:	nop
   339c8:	str	r4, [sp, #68]	; 0x44
   339ca:	beq.n	339ce <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   339cc:	asrs	r4, r6, #19
   339ce:	movs	r3, r0
   339d0:	lsls	r4, r4, #8
   339d2:	movs	r0, r0
   339d4:	asrs	r6, r4, #15
   339d6:	movs	r3, r0

000339d8 <btrfs_util_deleted_subvolumes@@Base>:
   339d8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   339da:	mov	r4, r1
   339dc:	movs	r1, #0
   339de:	str	r2, [sp, #4]
   339e0:	blx	88a8 <open@plt>
   339e4:	adds	r3, r0, #1
   339e6:	mov	r6, r0
   339e8:	beq.n	33a0a <btrfs_util_deleted_subvolumes@@Base+0x32>
   339ea:	mov	r1, r4
   339ec:	ldr	r2, [sp, #4]
   339ee:	bl	33884 <btrfs_util_deleted_subvolumes_fd@@Base>
   339f2:	mov	r4, r0
   339f4:	blx	8938 <__errno_location@plt>
   339f8:	ldr	r7, [r0, #0]
   339fa:	mov	r5, r0
   339fc:	mov	r0, r6
   339fe:	blx	8b4c <close@plt>
   33a02:	str	r7, [r5, #0]
   33a04:	mov	r0, r4
   33a06:	add	sp, #12
   33a08:	pop	{r4, r5, r6, r7, pc}
   33a0a:	movs	r4, #7
   33a0c:	b.n	33a04 <btrfs_util_deleted_subvolumes@@Base+0x2c>
   33a0e:	nop
   33a10:	push	{r3, lr}
   33a12:	mul.w	r3, r2, r1
   33a16:	cmp	r1, r3
   33a18:	bhi.n	33a28 <btrfs_util_deleted_subvolumes@@Base+0x50>
   33a1a:	cmp	r2, r3
   33a1c:	bhi.n	33a28 <btrfs_util_deleted_subvolumes@@Base+0x50>
   33a1e:	mov	r1, r3
   33a20:	ldmia.w	sp!, {r3, lr}
   33a24:	b.w	86d0 <realloc@plt>
   33a28:	blx	8938 <__errno_location@plt>
   33a2c:	movs	r3, #12
   33a2e:	str	r3, [r0, #0]
   33a30:	movs	r0, #0
   33a32:	pop	{r3, pc}

00033a34 <hash_crc32c@@Base>:
   33a34:	push	{r4, lr}
   33a36:	mov	r4, r2
   33a38:	mov	r2, r1
   33a3a:	mov	r1, r0
   33a3c:	mov.w	r0, #4294967295	; 0xffffffff
   33a40:	bl	173a2 <crc32c_le@@Base>
   33a44:	mvns	r0, r0
   33a46:	str	r0, [r4, #0]
   33a48:	movs	r0, #0
   33a4a:	pop	{r4, pc}

00033a4c <hash_xxhash@@Base>:
   33a4c:	push	{r0, r1, r2, r3, r4, lr}
   33a4e:	mov	r4, r2
   33a50:	ldr	r2, [pc, #60]	; (33a90 <hash_xxhash@@Base+0x44>)
   33a52:	ldr	r3, [pc, #64]	; (33a94 <hash_xxhash@@Base+0x48>)
   33a54:	add	r2, pc
   33a56:	ldr	r3, [r2, r3]
   33a58:	movs	r2, #0
   33a5a:	ldr	r3, [r3, #0]
   33a5c:	str	r3, [sp, #12]
   33a5e:	mov.w	r3, #0
   33a62:	movs	r3, #0
   33a64:	bl	34408 <XXH64@@Base>
   33a68:	ldr	r2, [pc, #44]	; (33a98 <hash_xxhash@@Base+0x4c>)
   33a6a:	mov	r3, sp
   33a6c:	add	r2, pc
   33a6e:	strd	r0, r1, [sp]
   33a72:	ldmia	r3!, {r0, r1}
   33a74:	ldr	r3, [pc, #28]	; (33a94 <hash_xxhash@@Base+0x48>)
   33a76:	str	r0, [r4, #0]
   33a78:	str	r1, [r4, #4]
   33a7a:	ldr	r3, [r2, r3]
   33a7c:	ldr	r2, [r3, #0]
   33a7e:	ldr	r3, [sp, #12]
   33a80:	eors	r2, r3
   33a82:	beq.n	33a88 <hash_xxhash@@Base+0x3c>
   33a84:	blx	86b8 <__stack_chk_fail@plt>
   33a88:	movs	r0, #0
   33a8a:	add	sp, #16
   33a8c:	pop	{r4, pc}
   33a8e:	nop
   33a90:	asrs	r4, r6, #12
   33a92:	movs	r3, r0
   33a94:	lsls	r4, r4, #8
   33a96:	movs	r0, r0
   33a98:	asrs	r4, r3, #12
   33a9a:	movs	r3, r0

00033a9c <hash_sha256@@Base>:
   33a9c:	push	{r4, r5, r6, r7, lr}
   33a9e:	mov	r5, r2
   33aa0:	ldr	r2, [pc, #72]	; (33aec <hash_sha256@@Base+0x50>)
   33aa2:	sub	sp, #124	; 0x7c
   33aa4:	ldr	r3, [pc, #72]	; (33af0 <hash_sha256@@Base+0x54>)
   33aa6:	mov	r7, r1
   33aa8:	add	r2, pc
   33aaa:	mov	r4, sp
   33aac:	mov	r6, r0
   33aae:	mov	r0, r4
   33ab0:	ldr	r3, [r2, r3]
   33ab2:	ldr	r3, [r3, #0]
   33ab4:	str	r3, [sp, #116]	; 0x74
   33ab6:	mov.w	r3, #0
   33aba:	bl	34cb6 <SHA256Reset@@Base>
   33abe:	mov	r2, r7
   33ac0:	mov	r1, r6
   33ac2:	mov	r0, r4
   33ac4:	bl	34cf4 <SHA256Input@@Base>
   33ac8:	mov	r1, r5
   33aca:	mov	r0, r4
   33acc:	bl	34dec <SHA256Result@@Base>
   33ad0:	ldr	r2, [pc, #32]	; (33af4 <hash_sha256@@Base+0x58>)
   33ad2:	ldr	r3, [pc, #28]	; (33af0 <hash_sha256@@Base+0x54>)
   33ad4:	add	r2, pc
   33ad6:	ldr	r3, [r2, r3]
   33ad8:	ldr	r2, [r3, #0]
   33ada:	ldr	r3, [sp, #116]	; 0x74
   33adc:	eors	r2, r3
   33ade:	beq.n	33ae4 <hash_sha256@@Base+0x48>
   33ae0:	blx	86b8 <__stack_chk_fail@plt>
   33ae4:	movs	r0, #0
   33ae6:	add	sp, #124	; 0x7c
   33ae8:	pop	{r4, r5, r6, r7, pc}
   33aea:	nop
   33aec:	asrs	r0, r4, #11
   33aee:	movs	r3, r0
   33af0:	lsls	r4, r4, #8
   33af2:	movs	r0, r0
   33af4:	asrs	r4, r6, #10
   33af6:	movs	r3, r0

00033af8 <hash_blake2b@@Base>:
   33af8:	push	{r4, r5, r6, r7, lr}
   33afa:	mov	r5, r2
   33afc:	ldr	r2, [pc, #76]	; (33b4c <hash_blake2b@@Base+0x54>)
   33afe:	sub	sp, #252	; 0xfc
   33b00:	ldr	r3, [pc, #76]	; (33b50 <hash_blake2b@@Base+0x58>)
   33b02:	mov	r6, r0
   33b04:	add	r2, pc
   33b06:	mov	r4, sp
   33b08:	mov	r7, r1
   33b0a:	mov	r0, r4
   33b0c:	ldr	r3, [r2, r3]
   33b0e:	movs	r1, #32
   33b10:	ldr	r3, [r3, #0]
   33b12:	str	r3, [sp, #244]	; 0xf4
   33b14:	mov.w	r3, #0
   33b18:	bl	388a4 <blake2b_init@@Base>
   33b1c:	mov	r2, r7
   33b1e:	mov	r1, r6
   33b20:	mov	r0, r4
   33b22:	bl	38930 <blake2b_update@@Base>
   33b26:	movs	r2, #32
   33b28:	mov	r1, r5
   33b2a:	mov	r0, r4
   33b2c:	bl	38ae0 <blake2b_final@@Base>
   33b30:	ldr	r2, [pc, #32]	; (33b54 <hash_blake2b@@Base+0x5c>)
   33b32:	ldr	r3, [pc, #28]	; (33b50 <hash_blake2b@@Base+0x58>)
   33b34:	add	r2, pc
   33b36:	ldr	r3, [r2, r3]
   33b38:	ldr	r2, [r3, #0]
   33b3a:	ldr	r3, [sp, #244]	; 0xf4
   33b3c:	eors	r2, r3
   33b3e:	beq.n	33b44 <hash_blake2b@@Base+0x4c>
   33b40:	blx	86b8 <__stack_chk_fail@plt>
   33b44:	movs	r0, #0
   33b46:	add	sp, #252	; 0xfc
   33b48:	pop	{r4, r5, r6, r7, pc}
   33b4a:	nop
   33b4c:	asrs	r4, r0, #10
   33b4e:	movs	r3, r0
   33b50:	lsls	r4, r4, #8
   33b52:	movs	r0, r0
   33b54:	asrs	r4, r2, #9
   33b56:	movs	r3, r0
   33b58:	push	{r4, r5, r6, r7, lr}
   33b5a:	and.w	r2, r2, #15
   33b5e:	ldr	r6, [pc, #96]	; (33bc0 <hash_blake2b@@Base+0xc8>)
   33b60:	adds	r5, r1, r2
   33b62:	ldr	r7, [pc, #96]	; (33bc4 <hash_blake2b@@Base+0xcc>)
   33b64:	mov	r4, r2
   33b66:	cmp	r4, #3
   33b68:	sub.w	r3, r5, r4
   33b6c:	bhi.n	33b9e <hash_blake2b@@Base+0xa6>
   33b6e:	and.w	r4, r2, #12
   33b72:	lsrs	r3, r2, #2
   33b74:	add	r1, r4
   33b76:	mvn.w	r4, #3
   33b7a:	mla	r2, r4, r3, r2
   33b7e:	ldr	r5, [pc, #72]	; (33bc8 <hash_blake2b@@Base+0xd0>)
   33b80:	ldr	r4, [pc, #72]	; (33bcc <hash_blake2b@@Base+0xd4>)
   33b82:	add	r2, r1
   33b84:	cmp	r1, r2
   33b86:	bne.n	33bae <hash_blake2b@@Base+0xb6>
   33b88:	ldr	r3, [pc, #68]	; (33bd0 <hash_blake2b@@Base+0xd8>)
   33b8a:	eor.w	r0, r0, r0, lsr #15
   33b8e:	muls	r0, r3
   33b90:	ldr	r3, [pc, #44]	; (33bc0 <hash_blake2b@@Base+0xc8>)
   33b92:	eor.w	r0, r0, r0, lsr #13
   33b96:	muls	r0, r3
   33b98:	eor.w	r0, r0, r0, lsr #16
   33b9c:	pop	{r4, r5, r6, r7, pc}
   33b9e:	ldr	r3, [r3, #0]
   33ba0:	subs	r4, #4
   33ba2:	mla	r0, r6, r3, r0
   33ba6:	mov.w	r0, r0, ror #15
   33baa:	muls	r0, r7
   33bac:	b.n	33b66 <hash_blake2b@@Base+0x6e>
   33bae:	ldrb.w	r3, [r1], #1
   33bb2:	mla	r0, r4, r3, r0
   33bb6:	mov.w	r0, r0, ror #21
   33bba:	muls	r0, r5
   33bbc:	b.n	33b84 <hash_blake2b@@Base+0x8c>
   33bbe:	nop
   33bc0:	add	r6, sp, #244	; 0xf4
   33bc2:	stmia	r2!, {r1, r4, r5, r7}
   33bc4:			; <UNDEFINED> instruction: 0xeb2f27d4
   33bc8:	ldrb	r1, [r6, #6]
   33bca:	ldr	r6, [sp, #220]	; 0xdc
   33bcc:	str	r1, [r6, #120]	; 0x78
   33bce:	asrs	r6, r2, #25
   33bd0:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33bd2:	strh	r3, [r5, #46]	; 0x2e
   33bd4:	cmp	r1, #15
   33bd6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33bda:	mov	r6, r1
   33bdc:	bls.n	33c70 <hash_blake2b@@Base+0x178>
   33bde:	ldr	r4, [pc, #152]	; (33c78 <hash_blake2b@@Base+0x180>)
   33be0:	sub.w	lr, r1, #15
   33be4:	ldr	r7, [pc, #148]	; (33c7c <hash_blake2b@@Base+0x184>)
   33be6:	add	lr, r0
   33be8:	ldr.w	ip, [pc, #152]	; 33c84 <hash_blake2b@@Base+0x18c>
   33bec:	add	r4, r2
   33bee:	ldr.w	r9, [pc, #152]	; 33c88 <hash_blake2b@@Base+0x190>
   33bf2:	adds	r5, r2, r7
   33bf4:	add	ip, r2
   33bf6:	mov	r1, r0
   33bf8:	ldr.w	r8, [r1]
   33bfc:	adds	r1, #16
   33bfe:	mla	r4, r7, r8, r4
   33c02:	ldr.w	r8, [r1, #-12]
   33c06:	mla	r5, r7, r8, r5
   33c0a:	ldr.w	r8, [r1, #-8]
   33c0e:	mov.w	r4, r4, ror #19
   33c12:	mla	r2, r7, r8, r2
   33c16:	ldr.w	r8, [r1, #-4]
   33c1a:	mov.w	r5, r5, ror #19
   33c1e:	cmp	lr, r1
   33c20:	mul.w	r4, r9, r4
   33c24:	mla	ip, r7, r8, ip
   33c28:	mov.w	r2, r2, ror #19
   33c2c:	mul.w	r5, r9, r5
   33c30:	mul.w	r2, r9, r2
   33c34:	mov.w	ip, ip, ror #19
   33c38:	mul.w	ip, r9, ip
   33c3c:	bhi.n	33bf8 <hash_blake2b@@Base+0x100>
   33c3e:	sub.w	r1, r6, #16
   33c42:	mov.w	r5, r5, ror #25
   33c46:	bic.w	r1, r1, #15
   33c4a:	adds	r7, r0, #1
   33c4c:	adds	r1, #16
   33c4e:	add.w	r5, r5, r4, ror #31
   33c52:	cmp	lr, r7
   33c54:	it	cc
   33c56:	movcc	r1, #16
   33c58:	add.w	r4, r5, r2, ror #20
   33c5c:	add	r0, r1
   33c5e:	add.w	r4, r4, ip, ror #14
   33c62:	and.w	r2, r6, #15
   33c66:	mov	r1, r0
   33c68:	adds	r0, r4, r6
   33c6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33c6e:	b.n	33b58 <hash_blake2b@@Base+0x60>
   33c70:	ldr	r4, [pc, #12]	; (33c80 <hash_blake2b@@Base+0x188>)
   33c72:	add	r4, r2
   33c74:	b.n	33c62 <hash_blake2b@@Base+0x16a>
   33c76:	nop
   33c78:	add	r0, r5
   33c7a:	movs	r4, #35	; 0x23
   33c7c:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33c7e:	strh	r3, [r5, #46]	; 0x2e
   33c80:	str	r1, [r6, #120]	; 0x78
   33c82:	asrs	r6, r2, #25
   33c84:	strh	r7, [r1, #50]	; 0x32
   33c86:	str	r0, [r1, #28]
   33c88:	ldrb	r1, [r6, #6]
   33c8a:	ldr	r6, [sp, #220]	; 0xdc
   33c8c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c90:	and.w	r3, r3, #31
   33c94:	ldr.w	r8, [pc, #368]	; 33e08 <hash_blake2b@@Base+0x310>
   33c98:	add.w	sl, r2, r3
   33c9c:	ldr.w	lr, [pc, #352]	; 33e00 <hash_blake2b@@Base+0x308>
   33ca0:	mov	ip, r3
   33ca2:	ldr.w	r9, [pc, #352]	; 33e04 <hash_blake2b@@Base+0x30c>
   33ca6:	ldr.w	fp, [pc, #376]	; 33e20 <hash_blake2b@@Base+0x328>
   33caa:	strd	r0, r1, [sp]
   33cae:	cmp.w	ip, #7
   33cb2:	sub.w	r1, sl, ip
   33cb6:	bhi.n	33d64 <hash_blake2b@@Base+0x26c>
   33cb8:	and.w	r0, r3, #24
   33cbc:	lsrs	r1, r3, #3
   33cbe:	add	r2, r0
   33cc0:	mvn.w	r0, #7
   33cc4:	mla	r3, r0, r1, r3
   33cc8:	cmp	r3, #3
   33cca:	bls.n	33d12 <hash_blake2b@@Base+0x21a>
   33ccc:	ldr.w	r6, [r2], #4
   33cd0:	subs	r3, #4
   33cd2:	ldr	r0, [pc, #300]	; (33e00 <hash_blake2b@@Base+0x308>)
   33cd4:	ldr	r7, [pc, #300]	; (33e04 <hash_blake2b@@Base+0x30c>)
   33cd6:	ldr	r1, [sp, #0]
   33cd8:	umull	r4, r5, r6, r0
   33cdc:	eor.w	r0, r4, r1
   33ce0:	ldr	r1, [sp, #4]
   33ce2:	mla	r5, r7, r6, r5
   33ce6:	ldr	r7, [pc, #288]	; (33e08 <hash_blake2b@@Base+0x310>)
   33ce8:	eors	r1, r5
   33cea:	lsls	r6, r1, #23
   33cec:	orr.w	r6, r6, r0, lsr #9
   33cf0:	lsls	r0, r0, #23
   33cf2:	orr.w	r0, r0, r1, lsr #9
   33cf6:	ldr	r1, [pc, #276]	; (33e0c <hash_blake2b@@Base+0x314>)
   33cf8:	umull	r4, r5, r0, r7
   33cfc:	muls	r1, r0
   33cfe:	ldr	r0, [pc, #272]	; (33e10 <hash_blake2b@@Base+0x318>)
   33d00:	mla	r6, r7, r6, r1
   33d04:	add	r5, r6
   33d06:	ldr	r6, [pc, #268]	; (33e14 <hash_blake2b@@Base+0x31c>)
   33d08:	adds	r1, r4, r6
   33d0a:	str	r1, [sp, #0]
   33d0c:	adc.w	r1, r5, r0
   33d10:	str	r1, [sp, #4]
   33d12:	ldr	r7, [pc, #260]	; (33e18 <hash_blake2b@@Base+0x320>)
   33d14:	add	r3, r2
   33d16:	ldr.w	ip, [pc, #268]	; 33e24 <hash_blake2b@@Base+0x32c>
   33d1a:	ldr	r6, [pc, #228]	; (33e00 <hash_blake2b@@Base+0x308>)
   33d1c:	ldr.w	lr, [pc, #228]	; 33e04 <hash_blake2b@@Base+0x30c>
   33d20:	cmp	r2, r3
   33d22:	bne.n	33dc6 <hash_blake2b@@Base+0x2ce>
   33d24:	ldrd	r3, r2, [sp]
   33d28:	ldr	r1, [pc, #224]	; (33e0c <hash_blake2b@@Base+0x314>)
   33d2a:	ldr	r0, [sp, #4]
   33d2c:	eor.w	r2, r3, r2, lsr #1
   33d30:	ldr	r3, [pc, #212]	; (33e08 <hash_blake2b@@Base+0x310>)
   33d32:	muls	r1, r2
   33d34:	mla	r1, r3, r0, r1
   33d38:	umull	r2, r3, r2, r3
   33d3c:	add	r3, r1
   33d3e:	eor.w	r1, r3, r3, lsr #29
   33d42:	lsrs	r0, r2, #29
   33d44:	orr.w	r0, r0, r3, lsl #3
   33d48:	ldr	r3, [pc, #196]	; (33e10 <hash_blake2b@@Base+0x318>)
   33d4a:	eors	r0, r2
   33d4c:	ldr	r2, [pc, #196]	; (33e14 <hash_blake2b@@Base+0x31c>)
   33d4e:	muls	r3, r0
   33d50:	umull	r4, r5, r0, r2
   33d54:	mla	r3, r2, r1, r3
   33d58:	adds	r1, r5, r3
   33d5a:	eor.w	r0, r4, r1
   33d5e:	add	sp, #12
   33d60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33d64:	ldr	r0, [r1, #0]
   33d66:	sub.w	ip, ip, #8
   33d6a:	ldr	r6, [r1, #4]
   33d6c:	ldr	r1, [pc, #156]	; (33e0c <hash_blake2b@@Base+0x314>)
   33d6e:	muls	r1, r0
   33d70:	mla	r6, r8, r6, r1
   33d74:	umull	r0, r1, r0, r8
   33d78:	add	r1, r6
   33d7a:	lsls	r7, r1, #31
   33d7c:	lsls	r6, r0, #31
   33d7e:	orr.w	r7, r7, r0, lsr #1
   33d82:	orr.w	r6, r6, r1, lsr #1
   33d86:	mul.w	r1, r9, r6
   33d8a:	mla	r1, lr, r7, r1
   33d8e:	umull	r6, r7, r6, lr
   33d92:	add	r7, r1
   33d94:	ldr	r1, [sp, #0]
   33d96:	eor.w	r0, r6, r1
   33d9a:	ldr	r1, [sp, #4]
   33d9c:	eors	r1, r7
   33d9e:	lsls	r6, r1, #27
   33da0:	orr.w	r6, r6, r0, lsr #5
   33da4:	lsls	r0, r0, #27
   33da6:	orr.w	r0, r0, r1, lsr #5
   33daa:	mul.w	r1, r9, r0
   33dae:	mla	r6, lr, r6, r1
   33db2:	umull	r0, r1, r0, lr
   33db6:	adds.w	r4, r0, fp
   33dba:	str	r4, [sp, #0]
   33dbc:	ldr	r4, [pc, #92]	; (33e1c <hash_blake2b@@Base+0x324>)
   33dbe:	add	r1, r6
   33dc0:	adcs	r1, r4
   33dc2:	str	r1, [sp, #4]
   33dc4:	b.n	33cae <hash_blake2b@@Base+0x1b6>
   33dc6:	ldrb.w	r8, [r2], #1
   33dca:	ldr	r5, [sp, #4]
   33dcc:	ldr	r4, [sp, #0]
   33dce:	umull	r0, r1, r8, r7
   33dd2:	eors	r4, r0
   33dd4:	mla	r1, ip, r8, r1
   33dd8:	eors	r5, r1
   33dda:	lsls	r1, r5, #11
   33ddc:	orr.w	r1, r1, r4, lsr #21
   33de0:	lsls	r4, r4, #11
   33de2:	orr.w	r4, r4, r5, lsr #21
   33de6:	mul.w	r0, lr, r4
   33dea:	umull	r4, r5, r4, r6
   33dee:	mla	r1, r6, r1, r0
   33df2:	strd	r4, r5, [sp]
   33df6:	ldr	r0, [sp, #4]
   33df8:	add	r0, r1
   33dfa:	str	r0, [sp, #4]
   33dfc:	b.n	33d20 <hash_blake2b@@Base+0x228>
   33dfe:	nop
   33e00:	ldmia	r2, {r0, r1, r2, r7}
   33e02:	strh	r3, [r5, #46]	; 0x2e
   33e04:	ldrb	r1, [r6, #6]
   33e06:	ldr	r6, [sp, #220]	; 0xdc
   33e08:	adc.w	r7, pc, r4, lsr #11
   33e0c:	add	r6, sp, #244	; 0xf4
   33e0e:	stmia	r2!, {r1, r4, r5, r7}
   33e10:	str	r1, [r6, #120]	; 0x78
   33e12:	asrs	r6, r2, #25
   33e14:	ldrb	r1, [r7, #7]
   33e16:	ldr	r6, [sp, #220]	; 0xdc
   33e18:	str	r5, [r0, #124]	; 0x7c
   33e1a:	asrs	r6, r2, #25
   33e1c:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33e1e:	strh	r3, [r5, #46]	; 0x2e
   33e20:	add	r6, sp, #396	; 0x18c
   33e22:	stmia	r2!, {r1, r4, r5, r7}
   33e24:			; <UNDEFINED> instruction: 0xeb2f27d4
   33e28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e2c:	sub	sp, #84	; 0x54
   33e2e:	mov	fp, r3
   33e30:	cmp	r1, #31
   33e32:	ldr	r3, [sp, #120]	; 0x78
   33e34:	mov	sl, r2
   33e36:	str	r0, [sp, #40]	; 0x28
   33e38:	str	r1, [sp, #52]	; 0x34
   33e3a:	str	r3, [sp, #76]	; 0x4c
   33e3c:	bls.w	341ac <hash_blake2b@@Base+0x6b4>
   33e40:	sub.w	r3, r1, #32
   33e44:	str	r3, [sp, #56]	; 0x38
   33e46:	ldr	r3, [pc, #820]	; (3417c <hash_blake2b@@Base+0x684>)
   33e48:	mov	r1, r0
   33e4a:	ldr	r2, [sp, #56]	; 0x38
   33e4c:	adds.w	r3, sl, r3
   33e50:	str	r3, [sp, #0]
   33e52:	ldr	r3, [pc, #812]	; (34180 <hash_blake2b@@Base+0x688>)
   33e54:	add.w	r9, r0, r2
   33e58:	ldr	r5, [pc, #808]	; (34184 <hash_blake2b@@Base+0x68c>)
   33e5a:	adc.w	r3, fp, r3
   33e5e:	str	r3, [sp, #4]
   33e60:	ldr	r3, [pc, #800]	; (34184 <hash_blake2b@@Base+0x68c>)
   33e62:	ldr.w	ip, [pc, #804]	; 34188 <hash_blake2b@@Base+0x690>
   33e66:	adds.w	r3, sl, r3
   33e6a:	str	r3, [sp, #8]
   33e6c:	ldr	r3, [pc, #792]	; (34188 <hash_blake2b@@Base+0x690>)
   33e6e:	ldr	r2, [pc, #796]	; (3418c <hash_blake2b@@Base+0x694>)
   33e70:	adc.w	r3, fp, r3
   33e74:	str	r3, [sp, #12]
   33e76:	ldr	r3, [pc, #792]	; (34190 <hash_blake2b@@Base+0x698>)
   33e78:	adds.w	r3, sl, r3
   33e7c:	str	r3, [sp, #16]
   33e7e:	ldr	r3, [pc, #788]	; (34194 <hash_blake2b@@Base+0x69c>)
   33e80:	adc.w	r3, fp, r3
   33e84:	str	r3, [sp, #20]
   33e86:	ldr	r3, [pc, #784]	; (34198 <hash_blake2b@@Base+0x6a0>)
   33e88:	ldr	r6, [r1, #0]
   33e8a:	adds	r1, #32
   33e8c:	ldr.w	r4, [r1, #-28]
   33e90:	ldr.w	lr, [r1, #-12]
   33e94:	mul.w	r0, ip, r6
   33e98:	mla	r0, r5, r4, r0
   33e9c:	ldr	r4, [sp, #4]
   33e9e:	umull	r6, r7, r6, r5
   33ea2:	add	r7, r0
   33ea4:	ldr	r0, [sp, #0]
   33ea6:	adds	r0, r6, r0
   33ea8:	adc.w	r4, r7, r4
   33eac:	mov.w	r8, r4, lsl #31
   33eb0:	orr.w	r6, r8, r0, lsr #1
   33eb4:	lsls	r0, r0, #31
   33eb6:	orr.w	r0, r0, r4, lsr #1
   33eba:	str	r0, [sp, #48]	; 0x30
   33ebc:	str	r6, [sp, #72]	; 0x48
   33ebe:	mul.w	r4, r2, r0
   33ec2:	ldr	r0, [sp, #48]	; 0x30
   33ec4:	mla	r4, r3, r6, r4
   33ec8:	umull	r6, r7, r0, r3
   33ecc:	strd	r6, r7, [sp]
   33ed0:	ldr.w	r6, [r1, #-24]
   33ed4:	ldr.w	r7, [r1, #-20]
   33ed8:	ldr	r0, [sp, #4]
   33eda:	adds	r0, r4, r0
   33edc:	str	r0, [sp, #4]
   33ede:	mul.w	r4, ip, r6
   33ee2:	ldr	r0, [sp, #8]
   33ee4:	mla	r4, r5, r7, r4
   33ee8:	umull	r6, r7, r6, r5
   33eec:	add	r7, r4
   33eee:	adds	r4, r6, r0
   33ef0:	ldr	r0, [sp, #12]
   33ef2:	adc.w	r0, r7, r0
   33ef6:	lsls	r7, r0, #31
   33ef8:	mov	r6, r0
   33efa:	orr.w	r0, r7, r4, lsr #1
   33efe:	lsls	r4, r4, #31
   33f00:	orr.w	r4, r4, r6, lsr #1
   33f04:	str	r0, [sp, #68]	; 0x44
   33f06:	umull	r7, r8, r4, r3
   33f0a:	mul.w	r6, r2, r4
   33f0e:	mla	r6, r3, r0, r6
   33f12:	strd	r7, r8, [sp, #8]
   33f16:	ldr	r0, [sp, #12]
   33f18:	adds	r0, r6, r0
   33f1a:	ldr.w	r6, [r1, #-16]
   33f1e:	str	r0, [sp, #12]
   33f20:	mul.w	r7, ip, r6
   33f24:	mla	lr, r5, lr, r7
   33f28:	umull	r7, r8, r6, r5
   33f2c:	adds.w	r6, r7, sl
   33f30:	add	r8, lr
   33f32:	adc.w	sl, r8, fp
   33f36:	ldr.w	lr, [r1, #-4]
   33f3a:	mov.w	r7, sl, lsl #31
   33f3e:	orr.w	r0, r7, r6, lsr #1
   33f42:	lsls	r6, r6, #31
   33f44:	str	r0, [sp, #60]	; 0x3c
   33f46:	orr.w	r0, r6, sl, lsr #1
   33f4a:	str	r0, [sp, #44]	; 0x2c
   33f4c:	mul.w	r6, r2, r0
   33f50:	ldr	r0, [sp, #60]	; 0x3c
   33f52:	mla	r6, r3, r0, r6
   33f56:	ldr	r0, [sp, #44]	; 0x2c
   33f58:	umull	sl, fp, r0, r3
   33f5c:	add	fp, r6
   33f5e:	ldr.w	r6, [r1, #-8]
   33f62:	mul.w	r7, ip, r6
   33f66:	mla	lr, r5, lr, r7
   33f6a:	umull	r6, r7, r6, r5
   33f6e:	strd	r6, r7, [sp, #32]
   33f72:	ldr	r0, [sp, #36]	; 0x24
   33f74:	ldr	r6, [sp, #32]
   33f76:	add	r0, lr
   33f78:	str	r0, [sp, #36]	; 0x24
   33f7a:	ldr	r0, [sp, #16]
   33f7c:	ldr	r7, [sp, #20]
   33f7e:	adds	r6, r6, r0
   33f80:	ldr	r0, [sp, #36]	; 0x24
   33f82:	adc.w	r7, r0, r7
   33f86:	cmp	r9, r1
   33f88:	mov.w	lr, r7, lsl #31
   33f8c:	orr.w	r0, lr, r6, lsr #1
   33f90:	mov.w	r6, r6, lsl #31
   33f94:	str	r0, [sp, #64]	; 0x40
   33f96:	orr.w	r0, r6, r7, lsr #1
   33f9a:	str	r0, [sp, #32]
   33f9c:	mul.w	r6, r2, r0
   33fa0:	ldr	r0, [sp, #64]	; 0x40
   33fa2:	mla	r6, r3, r0, r6
   33fa6:	ldr	r0, [sp, #32]
   33fa8:	umull	r7, r8, r0, r3
   33fac:	strd	r7, r8, [sp, #16]
   33fb0:	ldr	r0, [sp, #20]
   33fb2:	add	r0, r6
   33fb4:	str	r0, [sp, #20]
   33fb6:	bcs.w	33e88 <hash_blake2b@@Base+0x390>
   33fba:	ldr	r1, [sp, #56]	; 0x38
   33fbc:	add.w	r5, r9, #1
   33fc0:	ldr	r0, [sp, #40]	; 0x28
   33fc2:	bic.w	r1, r1, #31
   33fc6:	ldr.w	r9, [pc, #468]	; 3419c <hash_blake2b@@Base+0x6a4>
   33fca:	adds	r6, r0, #1
   33fcc:	adds	r1, #32
   33fce:	cmp	r5, r6
   33fd0:	it	cc
   33fd2:	movcc	r1, #32
   33fd4:	ldr.w	lr, [pc, #456]	; 341a0 <hash_blake2b@@Base+0x6a8>
   33fd8:	adds	r1, r0, r1
   33fda:	str	r1, [sp, #40]	; 0x28
   33fdc:	ldr	r1, [sp, #48]	; 0x30
   33fde:	ldr	r0, [sp, #72]	; 0x48
   33fe0:	mul.w	r1, r9, r1
   33fe4:	mla	r8, lr, r0, r1
   33fe8:	ldr	r1, [sp, #48]	; 0x30
   33fea:	umull	r6, r7, r1, lr
   33fee:	add	r7, r8
   33ff0:	lsls	r5, r7, #31
   33ff2:	orr.w	r1, r5, r6, lsr #1
   33ff6:	str	r1, [sp, #48]	; 0x30
   33ff8:	ldr	r1, [sp, #4]
   33ffa:	lsls	r0, r6, #31
   33ffc:	ldr	r6, [sp, #0]
   33ffe:	orr.w	r0, r0, r7, lsr #1
   34002:	ldr	r5, [sp, #12]
   34004:	lsls	r1, r1, #1
   34006:	orr.w	r7, r1, r6, lsr #31
   3400a:	ldr	r1, [sp, #4]
   3400c:	lsls	r6, r6, #1
   3400e:	orr.w	r6, r6, r1, lsr #31
   34012:	ldr	r1, [sp, #12]
   34014:	mov.w	r8, r1, lsl #7
   34018:	ldr	r1, [sp, #8]
   3401a:	orr.w	ip, r8, r1, lsr #25
   3401e:	lsls	r1, r1, #7
   34020:	orr.w	r1, r1, r5, lsr #25
   34024:	ldr	r5, [sp, #20]
   34026:	adds	r1, r6, r1
   34028:	mov.w	r6, sl, lsl #12
   3402c:	orr.w	r6, r6, fp, lsr #20
   34030:	adc.w	r7, r7, ip
   34034:	adds	r6, r1, r6
   34036:	ldr	r1, [sp, #20]
   34038:	mov.w	ip, fp, lsl #12
   3403c:	orr.w	r8, ip, sl, lsr #20
   34040:	adc.w	r7, r7, r8
   34044:	mov.w	r8, r1, lsl #18
   34048:	ldr	r1, [sp, #16]
   3404a:	orr.w	ip, r8, r1, lsr #14
   3404e:	lsls	r1, r1, #18
   34050:	orr.w	r1, r1, r5, lsr #14
   34054:	ldr	r5, [sp, #48]	; 0x30
   34056:	adds	r6, r6, r1
   34058:	ldr.w	r8, [pc, #328]	; 341a4 <hash_blake2b@@Base+0x6ac>
   3405c:	mul.w	r1, r2, r0
   34060:	adc.w	r7, r7, ip
   34064:	mla	r5, r3, r5, r1
   34068:	umull	r0, r1, r0, r3
   3406c:	add	r1, r5
   3406e:	eors	r6, r0
   34070:	ldr	r0, [sp, #68]	; 0x44
   34072:	eors	r7, r1
   34074:	mul.w	r1, r9, r4
   34078:	umull	r4, r5, r4, lr
   3407c:	mla	r1, lr, r0, r1
   34080:	mul.w	ip, r2, r6
   34084:	add	r5, r1
   34086:	lsls	r0, r4, #31
   34088:	mla	ip, r3, r7, ip
   3408c:	orr.w	r0, r0, r5, lsr #1
   34090:	lsls	r1, r5, #31
   34092:	umull	r6, r7, r6, r3
   34096:	orr.w	r1, r1, r4, lsr #1
   3409a:	mul.w	r4, r2, r0
   3409e:	add	r7, ip
   340a0:	mla	r4, r3, r1, r4
   340a4:	ldr.w	ip, [pc, #256]	; 341a8 <hash_blake2b@@Base+0x6b0>
   340a8:	umull	r0, r1, r0, r3
   340ac:	add	r1, r4
   340ae:	adds.w	r4, r6, ip
   340b2:	adc.w	r5, r7, r8
   340b6:	eors	r4, r0
   340b8:	eors	r1, r5
   340ba:	mul.w	r0, r2, r4
   340be:	mla	r1, r3, r1, r0
   340c2:	umull	r4, r5, r4, r3
   340c6:	add	r5, r1
   340c8:	ldr	r1, [sp, #44]	; 0x2c
   340ca:	mul.w	r7, r9, r1
   340ce:	ldr	r1, [sp, #60]	; 0x3c
   340d0:	mla	r7, lr, r1, r7
   340d4:	ldr	r1, [sp, #44]	; 0x2c
   340d6:	umull	r0, r1, r1, lr
   340da:	add	r1, r7
   340dc:	lsls	r7, r1, #31
   340de:	lsls	r6, r0, #31
   340e0:	orr.w	r7, r7, r0, lsr #1
   340e4:	orr.w	r6, r6, r1, lsr #1
   340e8:	adds.w	r0, r4, ip
   340ec:	adc.w	r4, r5, r8
   340f0:	mul.w	r1, r2, r6
   340f4:	mla	r1, r3, r7, r1
   340f8:	umull	r6, r7, r6, r3
   340fc:	eors	r0, r6
   340fe:	add	r7, r1
   34100:	eors	r4, r7
   34102:	mul.w	r1, r2, r0
   34106:	mla	r4, r3, r4, r1
   3410a:	ldr	r1, [sp, #32]
   3410c:	umull	sl, fp, r0, r3
   34110:	mul.w	r9, r9, r1
   34114:	ldr	r1, [sp, #64]	; 0x40
   34116:	add	fp, r4
   34118:	mla	r9, lr, r1, r9
   3411c:	ldr	r1, [sp, #32]
   3411e:	umull	r0, r1, r1, lr
   34122:	add	r1, r9
   34124:	lsls	r6, r1, #31
   34126:	lsls	r4, r0, #31
   34128:	orr.w	r6, r6, r0, lsr #1
   3412c:	orr.w	r4, r4, r1, lsr #1
   34130:	adds.w	r0, sl, ip
   34134:	adc.w	r1, fp, r8
   34138:	mul.w	r5, r2, r4
   3413c:	mla	r6, r3, r6, r5
   34140:	umull	r4, r5, r4, r3
   34144:	eors	r0, r4
   34146:	add	r5, r6
   34148:	eors	r1, r5
   3414a:	muls	r2, r0
   3414c:	mla	r2, r3, r1, r2
   34150:	umull	r0, r1, r0, r3
   34154:	adds.w	r3, r0, ip
   34158:	add	r1, r2
   3415a:	str	r3, [sp, #24]
   3415c:	adc.w	r3, r1, r8
   34160:	str	r3, [sp, #28]
   34162:	ldr	r3, [sp, #76]	; 0x4c
   34164:	ldrd	r0, r1, [sp, #24]
   34168:	ldr	r2, [sp, #40]	; 0x28
   3416a:	str	r3, [sp, #120]	; 0x78
   3416c:	ldr	r3, [sp, #52]	; 0x34
   3416e:	adds	r0, r0, r3
   34170:	adc.w	r1, r1, #0
   34174:	add	sp, #84	; 0x54
   34176:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3417a:	b.n	33c8c <hash_blake2b@@Base+0x194>
   3417c:	push	{r1, r2, r4, r6, r7, lr}
   3417e:	add	r5, sp, #768	; 0x300
   34180:	movs	r7, #238	; 0xee
   34182:	str	r2, [r5, #12]
   34184:	adc.w	r7, pc, r4, lsr #11
   34188:	add	r6, sp, #244	; 0xf4
   3418a:	stmia	r2!, {r1, r4, r5, r7}
   3418c:	ldrb	r1, [r6, #6]
   3418e:	ldr	r6, [sp, #220]	; 0xdc
   34190:	adds	r5, #121	; 0x79
   34192:	ldrb	r4, [r2, #8]
   34194:	strh	r6, [r1, #50]	; 0x32
   34196:	str	r0, [r1, #28]
   34198:	ldmia	r2, {r0, r1, r2, r7}
   3419a:	strh	r3, [r5, #46]	; 0x2e
   3419c:	ldrh	r1, [r0, r4]
   3419e:	udf	#243	; 0xf3
   341a0:	ldr	r1, [r5, #72]	; 0x48
   341a2:	lsrs	r1, r7, #29
   341a4:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   341a6:	strh	r3, [r5, #46]	; 0x2e
   341a8:	add	r6, sp, #396	; 0x18c
   341aa:	stmia	r2!, {r1, r4, r5, r7}
   341ac:	ldr	r3, [pc, #12]	; (341bc <hash_blake2b@@Base+0x6c4>)
   341ae:	adds	r3, r2, r3
   341b0:	str	r3, [sp, #24]
   341b2:	ldr	r3, [pc, #12]	; (341c0 <hash_blake2b@@Base+0x6c8>)
   341b4:	adc.w	r3, fp, r3
   341b8:	b.n	34160 <hash_blake2b@@Base+0x668>
   341ba:	nop
   341bc:	str	r5, [r0, #124]	; 0x7c
   341be:	asrs	r6, r2, #25
   341c0:			; <UNDEFINED> instruction: 0xeb2f27d4
   341c4:	b.w	8624 <memcpy@plt>

000341c8 <XXH_versionNumber@@Base>:
   341c8:	movw	r0, #701	; 0x2bd
   341cc:	bx	lr

000341ce <XXH32@@Base>:
   341ce:	ands.w	r3, r0, #3
   341d2:	it	ne
   341d4:	movne	r3, #1
   341d6:	b.n	33bd4 <hash_blake2b@@Base+0xdc>

000341d8 <XXH32_createState@@Base>:
   341d8:	movs	r0, #48	; 0x30
   341da:	b.w	881c <malloc@plt>

000341de <XXH32_freeState@@Base>:
   341de:	push	{r3, lr}
   341e0:	blx	85dc <free@plt+0x4>
   341e4:	movs	r0, #0
   341e6:	pop	{r3, pc}

000341e8 <XXH32_copyState@@Base>:
   341e8:	add.w	r3, r1, #48	; 0x30
   341ec:	ldr.w	r2, [r1], #4
   341f0:	cmp	r1, r3
   341f2:	str.w	r2, [r0], #4
   341f6:	bne.n	341ec <XXH32_copyState@@Base+0x4>
   341f8:	bx	lr

000341fa <XXH32_reset@@Base>:
   341fa:	ldr	r2, [pc, #124]	; (34278 <XXH32_reset@@Base+0x7e>)
   341fc:	ldr	r3, [pc, #124]	; (3427c <XXH32_reset@@Base+0x82>)
   341fe:	add	r2, pc
   34200:	push	{r4, r5, lr}
   34202:	sub	sp, #60	; 0x3c
   34204:	ldr	r3, [r2, r3]
   34206:	mov	r5, r1
   34208:	mov	r4, r0
   3420a:	movs	r2, #48	; 0x30
   3420c:	ldr	r3, [r3, #0]
   3420e:	str	r3, [sp, #52]	; 0x34
   34210:	mov.w	r3, #0
   34214:	add	r3, sp, #4
   34216:	movs	r1, #0
   34218:	mov	r0, r3
   3421a:	blx	8978 <memset@plt+0x4>
   3421e:	ldr	r2, [pc, #76]	; (3426c <XXH32_reset@@Base+0x72>)
   34220:	mov	r3, r4
   34222:	add	r2, r5
   34224:	str	r2, [sp, #12]
   34226:	ldr	r2, [pc, #72]	; (34270 <XXH32_reset@@Base+0x76>)
   34228:	add	r2, r5
   3422a:	strd	r2, r5, [sp, #16]
   3422e:	ldr	r2, [pc, #68]	; (34274 <XXH32_reset@@Base+0x7a>)
   34230:	add	r2, r5
   34232:	add	r5, sp, #44	; 0x2c
   34234:	str	r2, [sp, #24]
   34236:	mov	r2, r0
   34238:	mov	r4, r2
   3423a:	adds	r3, #8
   3423c:	ldmia	r4!, {r0, r1}
   3423e:	cmp	r4, r5
   34240:	str.w	r0, [r3, #-8]
   34244:	mov	r2, r4
   34246:	str.w	r1, [r3, #-4]
   3424a:	bne.n	34238 <XXH32_reset@@Base+0x3e>
   3424c:	ldr	r0, [r4, #0]
   3424e:	ldr	r2, [pc, #48]	; (34280 <XXH32_reset@@Base+0x86>)
   34250:	str	r0, [r3, #0]
   34252:	add	r2, pc
   34254:	ldr	r3, [pc, #36]	; (3427c <XXH32_reset@@Base+0x82>)
   34256:	ldr	r3, [r2, r3]
   34258:	ldr	r2, [r3, #0]
   3425a:	ldr	r3, [sp, #52]	; 0x34
   3425c:	eors	r2, r3
   3425e:	beq.n	34264 <XXH32_reset@@Base+0x6a>
   34260:	blx	86b8 <__stack_chk_fail@plt>
   34264:	movs	r0, #0
   34266:	add	sp, #60	; 0x3c
   34268:	pop	{r4, r5, pc}
   3426a:	nop
   3426c:	add	r0, r5
   3426e:	movs	r4, #35	; 0x23
   34270:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   34272:	strh	r3, [r5, #46]	; 0x2e
   34274:	strh	r7, [r1, #50]	; 0x32
   34276:	str	r0, [r1, #28]
   34278:	lsrs	r2, r1, #14
   3427a:	movs	r3, r0
   3427c:	lsls	r4, r4, #8
   3427e:	movs	r0, r0
   34280:	lsrs	r6, r6, #12
   34282:	movs	r3, r0

00034284 <XXH32_update@@Base>:
   34284:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   34288:	mov	r4, r0
   3428a:	mov	r7, r2
   3428c:	mov	r5, r1
   3428e:	cmp	r1, #0
   34290:	beq.w	343b0 <XXH32_update@@Base+0x12c>
   34294:	ldr	r3, [r0, #0]
   34296:	adds	r6, r1, r2
   34298:	add	r3, r2
   3429a:	str	r3, [r0, #0]
   3429c:	cmp	r3, #15
   3429e:	it	ls
   342a0:	cmpls	r2, #15
   342a2:	ldr	r0, [r0, #4]
   342a4:	ite	hi
   342a6:	movhi	r3, #1
   342a8:	movls	r3, #0
   342aa:	orrs	r3, r0
   342ac:	str	r3, [r4, #4]
   342ae:	ldr	r3, [r4, #40]	; 0x28
   342b0:	adds	r0, r3, r2
   342b2:	cmp	r0, #15
   342b4:	bhi.n	342ca <XXH32_update@@Base+0x46>
   342b6:	add.w	r0, r4, #24
   342ba:	add	r0, r3
   342bc:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   342c0:	ldr	r2, [r4, #40]	; 0x28
   342c2:	add	r2, r7
   342c4:	str	r2, [r4, #40]	; 0x28
   342c6:	movs	r0, #0
   342c8:	b.n	343b2 <XXH32_update@@Base+0x12e>
   342ca:	cbz	r3, 3432a <XXH32_update@@Base+0xa6>
   342cc:	add.w	r0, r4, #24
   342d0:	rsb	r2, r3, #16
   342d4:	add	r0, r3
   342d6:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   342da:	ldr	r1, [pc, #220]	; (343b8 <XXH32_update@@Base+0x134>)
   342dc:	ldr	r2, [r4, #8]
   342de:	ldr	r3, [r4, #24]
   342e0:	ldr	r0, [r4, #12]
   342e2:	mla	r3, r1, r3, r2
   342e6:	ldr	r2, [pc, #212]	; (343bc <XXH32_update@@Base+0x138>)
   342e8:	mov.w	r3, r3, ror #19
   342ec:	muls	r3, r2
   342ee:	str	r3, [r4, #8]
   342f0:	ldr	r3, [r4, #28]
   342f2:	mla	r3, r1, r3, r0
   342f6:	ldr	r0, [r4, #16]
   342f8:	mov.w	r3, r3, ror #19
   342fc:	muls	r3, r2
   342fe:	str	r3, [r4, #12]
   34300:	ldr	r3, [r4, #32]
   34302:	mla	r3, r1, r3, r0
   34306:	ldr	r0, [r4, #20]
   34308:	mov.w	r3, r3, ror #19
   3430c:	muls	r3, r2
   3430e:	str	r3, [r4, #16]
   34310:	ldr	r3, [r4, #36]	; 0x24
   34312:	mla	r1, r1, r3, r0
   34316:	ldr	r3, [r4, #40]	; 0x28
   34318:	rsb	r3, r3, #16
   3431c:	add	r5, r3
   3431e:	movs	r3, #0
   34320:	str	r3, [r4, #40]	; 0x28
   34322:	mov.w	r1, r1, ror #19
   34326:	muls	r2, r1
   34328:	str	r2, [r4, #20]
   3432a:	sub.w	r3, r6, #16
   3432e:	cmp	r3, r5
   34330:	bcc.n	3439a <XXH32_update@@Base+0x116>
   34332:	ldrd	ip, r7, [r4, #8]
   34336:	mov	r1, r5
   34338:	ldrd	r0, r8, [r4, #16]
   3433c:	ldr.w	r9, [pc, #120]	; 343b8 <XXH32_update@@Base+0x134>
   34340:	ldr.w	lr, [pc, #120]	; 343bc <XXH32_update@@Base+0x138>
   34344:	ldr	r2, [r1, #0]
   34346:	adds	r1, #16
   34348:	mla	ip, r9, r2, ip
   3434c:	ldr.w	r2, [r1, #-12]
   34350:	mla	r7, r9, r2, r7
   34354:	ldr.w	r2, [r1, #-8]
   34358:	mov.w	ip, ip, ror #19
   3435c:	mla	r0, r9, r2, r0
   34360:	ldr.w	r2, [r1, #-4]
   34364:	mov.w	r7, r7, ror #19
   34368:	cmp	r3, r1
   3436a:	mul.w	ip, lr, ip
   3436e:	mla	r2, r9, r2, r8
   34372:	mov.w	r0, r0, ror #19
   34376:	mul.w	r7, lr, r7
   3437a:	mul.w	r0, lr, r0
   3437e:	mov.w	r2, r2, ror #19
   34382:	mul.w	r8, lr, r2
   34386:	bcs.n	34344 <XXH32_update@@Base+0xc0>
   34388:	subs	r3, r3, r5
   3438a:	strd	ip, r7, [r4, #8]
   3438e:	bic.w	r3, r3, #15
   34392:	strd	r0, r8, [r4, #16]
   34396:	adds	r3, #16
   34398:	add	r5, r3
   3439a:	cmp	r5, r6
   3439c:	bcs.n	342c6 <XXH32_update@@Base+0x42>
   3439e:	subs	r6, r6, r5
   343a0:	add.w	r0, r4, #24
   343a4:	mov	r1, r5
   343a6:	mov	r2, r6
   343a8:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   343ac:	str	r6, [r4, #40]	; 0x28
   343ae:	b.n	342c6 <XXH32_update@@Base+0x42>
   343b0:	movs	r0, #1
   343b2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   343b6:	nop
   343b8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   343ba:	strh	r3, [r5, #46]	; 0x2e
   343bc:	ldrb	r1, [r6, #6]
   343be:	ldr	r6, [sp, #220]	; 0xdc

000343c0 <XXH32_digest@@Base>:
   343c0:	push	{r4, r5}
   343c2:	ldr	r3, [r0, #4]
   343c4:	ldr	r2, [r0, #16]
   343c6:	cbz	r3, 343f0 <XXH32_digest@@Base+0x30>
   343c8:	ldrd	r1, r3, [r0, #8]
   343cc:	mov.w	r4, r3, ror #25
   343d0:	ldr	r3, [r0, #20]
   343d2:	add.w	r4, r4, r1, ror #31
   343d6:	add.w	r4, r4, r2, ror #20
   343da:	add.w	r4, r4, r3, ror #14
   343de:	mov	r1, r0
   343e0:	ldr	r2, [r0, #40]	; 0x28
   343e2:	ldr.w	r5, [r1], #24
   343e6:	movs	r3, #0
   343e8:	adds	r0, r4, r5
   343ea:	pop	{r4, r5}
   343ec:	b.w	33b58 <hash_blake2b@@Base+0x60>
   343f0:	ldr	r4, [pc, #4]	; (343f8 <XXH32_digest@@Base+0x38>)
   343f2:	add	r4, r2
   343f4:	b.n	343de <XXH32_digest@@Base+0x1e>
   343f6:	nop
   343f8:	str	r1, [r6, #120]	; 0x78
   343fa:	asrs	r6, r2, #25

000343fc <XXH32_canonicalFromHash@@Base>:
   343fc:	rev	r1, r1
   343fe:	str	r1, [r0, #0]
   34400:	bx	lr

00034402 <XXH32_hashFromCanonical@@Base>:
   34402:	ldr	r0, [r0, #0]
   34404:	rev	r0, r0
   34406:	bx	lr

00034408 <XXH64@@Base>:
   34408:	push	{r0, r1, r4, lr}
   3440a:	ands.w	r4, r0, #7
   3440e:	it	ne
   34410:	movne	r4, #1
   34412:	str	r4, [sp, #0]
   34414:	bl	33e28 <hash_blake2b@@Base+0x330>
   34418:	add	sp, #8
   3441a:	pop	{r4, pc}

0003441c <XXH64_createState@@Base>:
   3441c:	movs	r0, #88	; 0x58
   3441e:	b.w	881c <malloc@plt>

00034422 <XXH64_freeState@@Base>:
   34422:	push	{r3, lr}
   34424:	blx	85dc <free@plt+0x4>
   34428:	movs	r0, #0
   3442a:	pop	{r3, pc}

0003442c <XXH64_copyState@@Base>:
   3442c:	movs	r2, #88	; 0x58
   3442e:	b.w	8624 <memcpy@plt>

00034432 <XXH64_reset@@Base>:
   34432:	push	{r4, r5, r6, r7, lr}
   34434:	mov	r4, r2
   34436:	ldr	r2, [pc, #140]	; (344c4 <XXH64_reset@@Base+0x92>)
   34438:	mov	r5, r3
   3443a:	ldr	r3, [pc, #140]	; (344c8 <XXH64_reset@@Base+0x96>)
   3443c:	sub	sp, #100	; 0x64
   3443e:	add	r2, pc
   34440:	mov	r7, r0
   34442:	mov	r6, sp
   34444:	movs	r1, #0
   34446:	ldr	r3, [r2, r3]
   34448:	mov	r0, r6
   3444a:	movs	r2, #88	; 0x58
   3444c:	ldr	r3, [r3, #0]
   3444e:	str	r3, [sp, #92]	; 0x5c
   34450:	mov.w	r3, #0
   34454:	blx	8978 <memset@plt+0x4>
   34458:	ldr	r3, [pc, #80]	; (344ac <XXH64_reset@@Base+0x7a>)
   3445a:	mov	r1, r6
   3445c:	ldr	r2, [pc, #80]	; (344b0 <XXH64_reset@@Base+0x7e>)
   3445e:	mov	r0, r7
   34460:	adds	r3, r4, r3
   34462:	strd	r4, r5, [sp, #24]
   34466:	adc.w	r2, r5, r2
   3446a:	strd	r3, r2, [sp, #8]
   3446e:	ldr	r3, [pc, #68]	; (344b4 <XXH64_reset@@Base+0x82>)
   34470:	ldr	r2, [pc, #68]	; (344b8 <XXH64_reset@@Base+0x86>)
   34472:	adds	r3, r4, r3
   34474:	adc.w	r2, r5, r2
   34478:	strd	r3, r2, [sp, #16]
   3447c:	ldr	r2, [pc, #60]	; (344bc <XXH64_reset@@Base+0x8a>)
   3447e:	ldr	r3, [pc, #64]	; (344c0 <XXH64_reset@@Base+0x8e>)
   34480:	adds	r4, r4, r2
   34482:	mov.w	r2, #80	; 0x50
   34486:	adc.w	r5, r3, r5
   3448a:	strd	r4, r5, [sp, #32]
   3448e:	blx	8628 <memcpy@plt+0x4>
   34492:	ldr	r2, [pc, #56]	; (344cc <XXH64_reset@@Base+0x9a>)
   34494:	ldr	r3, [pc, #48]	; (344c8 <XXH64_reset@@Base+0x96>)
   34496:	add	r2, pc
   34498:	ldr	r3, [r2, r3]
   3449a:	ldr	r2, [r3, #0]
   3449c:	ldr	r3, [sp, #92]	; 0x5c
   3449e:	eors	r2, r3
   344a0:	beq.n	344a6 <XXH64_reset@@Base+0x74>
   344a2:	blx	86b8 <__stack_chk_fail@plt>
   344a6:	movs	r0, #0
   344a8:	add	sp, #100	; 0x64
   344aa:	pop	{r4, r5, r6, r7, pc}
   344ac:	push	{r1, r2, r4, r6, r7, lr}
   344ae:	add	r5, sp, #768	; 0x300
   344b0:	movs	r7, #238	; 0xee
   344b2:	str	r2, [r5, #12]
   344b4:	adc.w	r7, pc, r4, lsr #11
   344b8:	add	r6, sp, #244	; 0xf4
   344ba:	stmia	r2!, {r1, r4, r5, r7}
   344bc:	adds	r5, #121	; 0x79
   344be:	ldrb	r4, [r2, #8]
   344c0:	strh	r6, [r1, #50]	; 0x32
   344c2:	str	r0, [r1, #28]
   344c4:	lsrs	r2, r1, #5
   344c6:	movs	r3, r0
   344c8:	lsls	r4, r4, #8
   344ca:	movs	r0, r0
   344cc:	lsrs	r2, r6, #3
   344ce:	movs	r3, r0

000344d0 <XXH64_update@@Base>:
   344d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   344d4:	mov	r4, r0
   344d6:	sub	sp, #36	; 0x24
   344d8:	mov	r5, r2
   344da:	mov	r8, r1
   344dc:	cmp	r1, #0
   344de:	beq.w	347c4 <XXH64_update@@Base+0x2f4>
   344e2:	ldrd	r6, r7, [r0]
   344e6:	add.w	r9, r1, r2
   344ea:	ldr	r3, [r0, #72]	; 0x48
   344ec:	adds	r6, r6, r2
   344ee:	adc.w	r7, r7, #0
   344f2:	strd	r6, r7, [r0]
   344f6:	adds	r0, r3, r2
   344f8:	cmp	r0, #31
   344fa:	bhi.n	34510 <XXH64_update@@Base+0x40>
   344fc:	add.w	r0, r4, #40	; 0x28
   34500:	add	r0, r3
   34502:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   34506:	ldr	r2, [r4, #72]	; 0x48
   34508:	add	r2, r5
   3450a:	str	r2, [r4, #72]	; 0x48
   3450c:	movs	r0, #0
   3450e:	b.n	347c6 <XXH64_update@@Base+0x2f6>
   34510:	cmp	r3, #0
   34512:	beq.w	34620 <XXH64_update@@Base+0x150>
   34516:	add.w	r0, r4, #40	; 0x28
   3451a:	rsb	r2, r3, #32
   3451e:	add	r0, r3
   34520:	ldr	r5, [pc, #680]	; (347cc <XXH64_update@@Base+0x2fc>)
   34522:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   34526:	ldr.w	ip, [pc, #688]	; 347d8 <XXH64_update@@Base+0x308>
   3452a:	ldr	r6, [r4, #40]	; 0x28
   3452c:	ldr	r3, [r4, #44]	; 0x2c
   3452e:	mul.w	r2, ip, r6
   34532:	mla	r3, r5, r3, r2
   34536:	umull	r6, r7, r6, r5
   3453a:	add	r7, r3
   3453c:	ldrd	r3, r2, [r4, #8]
   34540:	adds	r3, r6, r3
   34542:	ldr	r6, [pc, #652]	; (347d0 <XXH64_update@@Base+0x300>)
   34544:	adc.w	r0, r7, r2
   34548:	ldr	r2, [pc, #648]	; (347d4 <XXH64_update@@Base+0x304>)
   3454a:	lsls	r1, r0, #31
   3454c:	orr.w	r1, r1, r3, lsr #1
   34550:	lsls	r3, r3, #31
   34552:	orr.w	r0, r3, r0, lsr #1
   34556:	mul.w	r3, r6, r0
   3455a:	mla	r3, r2, r1, r3
   3455e:	umull	r0, r1, r0, r2
   34562:	add	r1, r3
   34564:	ldr	r3, [r4, #52]	; 0x34
   34566:	strd	r0, r1, [r4, #8]
   3456a:	ldr	r0, [r4, #48]	; 0x30
   3456c:	mul.w	r1, ip, r0
   34570:	mla	r3, r5, r3, r1
   34574:	umull	r0, r1, r0, r5
   34578:	add	r1, r3
   3457a:	ldrd	r3, r7, [r4, #16]
   3457e:	adds	r3, r0, r3
   34580:	adc.w	r0, r1, r7
   34584:	lsls	r1, r0, #31
   34586:	orr.w	r1, r1, r3, lsr #1
   3458a:	lsls	r3, r3, #31
   3458c:	orr.w	r0, r3, r0, lsr #1
   34590:	mul.w	r3, r6, r0
   34594:	mla	r3, r2, r1, r3
   34598:	umull	r0, r1, r0, r2
   3459c:	add	r1, r3
   3459e:	ldr	r3, [r4, #60]	; 0x3c
   345a0:	strd	r0, r1, [r4, #16]
   345a4:	ldr	r0, [r4, #56]	; 0x38
   345a6:	mul.w	r1, ip, r0
   345aa:	mla	r3, r5, r3, r1
   345ae:	umull	r0, r1, r0, r5
   345b2:	add	r1, r3
   345b4:	ldrd	r3, r7, [r4, #24]
   345b8:	adds	r3, r0, r3
   345ba:	adc.w	r0, r1, r7
   345be:	lsls	r1, r0, #31
   345c0:	orr.w	r1, r1, r3, lsr #1
   345c4:	lsls	r3, r3, #31
   345c6:	orr.w	r0, r3, r0, lsr #1
   345ca:	mul.w	r3, r6, r0
   345ce:	mla	r3, r2, r1, r3
   345d2:	umull	r0, r1, r0, r2
   345d6:	add	r1, r3
   345d8:	ldr	r3, [r4, #68]	; 0x44
   345da:	strd	r0, r1, [r4, #24]
   345de:	ldr	r0, [r4, #64]	; 0x40
   345e0:	mul.w	ip, ip, r0
   345e4:	mla	ip, r5, r3, ip
   345e8:	umull	r0, r1, r0, r5
   345ec:	ldrd	r3, r5, [r4, #32]
   345f0:	add	r1, ip
   345f2:	adds	r3, r0, r3
   345f4:	adc.w	r5, r1, r5
   345f8:	lsls	r1, r5, #31
   345fa:	orr.w	r1, r1, r3, lsr #1
   345fe:	lsls	r3, r3, #31
   34600:	orr.w	r5, r3, r5, lsr #1
   34604:	muls	r6, r5
   34606:	mla	r6, r2, r1, r6
   3460a:	umull	r2, r3, r5, r2
   3460e:	add	r3, r6
   34610:	strd	r2, r3, [r4, #32]
   34614:	ldr	r3, [r4, #72]	; 0x48
   34616:	rsb	r3, r3, #32
   3461a:	add	r8, r3
   3461c:	movs	r3, #0
   3461e:	str	r3, [r4, #72]	; 0x48
   34620:	add.w	r3, r8, #32
   34624:	cmp	r9, r3
   34626:	bcc.w	347aa <XXH64_update@@Base+0x2da>
   3462a:	ldrd	r2, r3, [r4, #8]
   3462e:	sub.w	ip, r9, #32
   34632:	ldr	r5, [pc, #408]	; (347cc <XXH64_update@@Base+0x2fc>)
   34634:	ldr	r7, [pc, #416]	; (347d8 <XXH64_update@@Base+0x308>)
   34636:	strd	r2, r3, [sp]
   3463a:	ldrd	r2, r3, [r4, #16]
   3463e:	strd	r2, r3, [sp, #8]
   34642:	ldrd	r2, r3, [r4, #24]
   34646:	strd	r2, r3, [sp, #16]
   3464a:	ldrd	r2, r3, [r4, #32]
   3464e:	strd	r2, r3, [sp, #24]
   34652:	mov	r3, r8
   34654:	ldr	r2, [pc, #380]	; (347d4 <XXH64_update@@Base+0x304>)
   34656:	ldr	r0, [r3, #0]
   34658:	adds	r3, #32
   3465a:	ldr.w	lr, [r3, #-28]
   3465e:	ldr	r6, [pc, #368]	; (347d0 <XXH64_update@@Base+0x300>)
   34660:	umull	sl, fp, r0, r5
   34664:	mul.w	r1, r7, r0
   34668:	mla	lr, r5, lr, r1
   3466c:	ldr	r1, [sp, #0]
   3466e:	adds.w	r0, sl, r1
   34672:	ldr	r1, [sp, #4]
   34674:	add	fp, lr
   34676:	adc.w	r1, fp, r1
   3467a:	mov.w	lr, r1, lsl #31
   3467e:	orr.w	lr, lr, r0, lsr #1
   34682:	lsls	r0, r0, #31
   34684:	orr.w	r1, r0, r1, lsr #1
   34688:	ldr	r0, [pc, #324]	; (347d0 <XXH64_update@@Base+0x300>)
   3468a:	muls	r0, r1
   3468c:	mla	lr, r2, lr, r0
   34690:	umull	r0, r1, r1, r2
   34694:	strd	r0, r1, [sp]
   34698:	ldr	r1, [sp, #4]
   3469a:	ldr.w	r0, [r3, #-24]
   3469e:	add	r1, lr
   346a0:	ldr.w	lr, [r3, #-20]
   346a4:	str	r1, [sp, #4]
   346a6:	umull	sl, fp, r0, r5
   346aa:	mul.w	r1, r7, r0
   346ae:	mla	lr, r5, lr, r1
   346b2:	ldr	r1, [sp, #8]
   346b4:	adds.w	r0, sl, r1
   346b8:	ldr	r1, [sp, #12]
   346ba:	add	fp, lr
   346bc:	adc.w	r1, fp, r1
   346c0:	mov.w	lr, r1, lsl #31
   346c4:	orr.w	lr, lr, r0, lsr #1
   346c8:	lsls	r0, r0, #31
   346ca:	orr.w	r1, r0, r1, lsr #1
   346ce:	ldr	r0, [pc, #256]	; (347d0 <XXH64_update@@Base+0x300>)
   346d0:	muls	r0, r1
   346d2:	mla	lr, r2, lr, r0
   346d6:	umull	r0, r1, r1, r2
   346da:	strd	r0, r1, [sp, #8]
   346de:	ldr	r1, [sp, #12]
   346e0:	ldr.w	r0, [r3, #-16]
   346e4:	add	r1, lr
   346e6:	ldr.w	lr, [r3, #-12]
   346ea:	str	r1, [sp, #12]
   346ec:	umull	sl, fp, r0, r5
   346f0:	mul.w	r1, r7, r0
   346f4:	mla	lr, r5, lr, r1
   346f8:	ldr	r1, [sp, #16]
   346fa:	adds.w	r0, sl, r1
   346fe:	ldr	r1, [sp, #20]
   34700:	add	fp, lr
   34702:	adc.w	lr, fp, r1
   34706:	mov.w	r1, lr, lsl #31
   3470a:	orr.w	r1, r1, r0, lsr #1
   3470e:	lsls	r0, r0, #31
   34710:	orr.w	r0, r0, lr, lsr #1
   34714:	umull	sl, fp, r0, r2
   34718:	mul.w	lr, r6, r0
   3471c:	ldr	r6, [sp, #24]
   3471e:	mla	r1, r2, r1, lr
   34722:	ldr.w	lr, [r3, #-4]
   34726:	strd	sl, fp, [sp, #16]
   3472a:	ldr	r0, [sp, #20]
   3472c:	add	r1, r0
   3472e:	ldr.w	r0, [r3, #-8]
   34732:	str	r1, [sp, #20]
   34734:	mul.w	r1, r7, r0
   34738:	mla	lr, r5, lr, r1
   3473c:	umull	r0, r1, r0, r5
   34740:	adds.w	sl, r0, r6
   34744:	ldr	r6, [sp, #28]
   34746:	add	r1, lr
   34748:	ldr	r0, [pc, #132]	; (347d0 <XXH64_update@@Base+0x300>)
   3474a:	adc.w	r6, r1, r6
   3474e:	cmp	ip, r3
   34750:	mov.w	r1, r6, lsl #31
   34754:	orr.w	r1, r1, sl, lsr #1
   34758:	mov.w	sl, sl, lsl #31
   3475c:	orr.w	sl, sl, r6, lsr #1
   34760:	mul.w	r0, r0, sl
   34764:	umull	sl, fp, sl, r2
   34768:	mla	r1, r2, r1, r0
   3476c:	strd	sl, fp, [sp, #24]
   34770:	ldr	r0, [sp, #28]
   34772:	add	r0, r1
   34774:	str	r0, [sp, #28]
   34776:	bcs.w	34656 <XXH64_update@@Base+0x186>
   3477a:	sub.w	r3, r9, #32
   3477e:	sub.w	r3, r3, r8
   34782:	bic.w	r3, r3, #31
   34786:	adds	r3, #32
   34788:	add	r8, r3
   3478a:	ldrd	r2, r3, [sp]
   3478e:	strd	r2, r3, [r4, #8]
   34792:	ldrd	r2, r3, [sp, #8]
   34796:	strd	r2, r3, [r4, #16]
   3479a:	ldrd	r2, r3, [sp, #16]
   3479e:	strd	r2, r3, [r4, #24]
   347a2:	ldrd	r2, r3, [sp, #24]
   347a6:	strd	r2, r3, [r4, #32]
   347aa:	cmp	r8, r9
   347ac:	bcs.w	3450c <XXH64_update@@Base+0x3c>
   347b0:	sub.w	r5, r9, r8
   347b4:	add.w	r0, r4, #40	; 0x28
   347b8:	mov	r1, r8
   347ba:	mov	r2, r5
   347bc:	bl	341c4 <hash_blake2b@@Base+0x6cc>
   347c0:	str	r5, [r4, #72]	; 0x48
   347c2:	b.n	3450c <XXH64_update@@Base+0x3c>
   347c4:	movs	r0, #1
   347c6:	add	sp, #36	; 0x24
   347c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   347cc:	adc.w	r7, pc, r4, lsr #11
   347d0:	ldrb	r1, [r6, #6]
   347d2:	ldr	r6, [sp, #220]	; 0xdc
   347d4:	ldmia	r2, {r0, r1, r2, r7}
   347d6:	strh	r3, [r5, #46]	; 0x2e
   347d8:	add	r6, sp, #244	; 0xf4
   347da:	stmia	r2!, {r1, r4, r5, r7}

000347dc <XXH64_digest@@Base>:
   347dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   347e0:	sub	sp, #28
   347e2:	ldrd	r3, r4, [r0]
   347e6:	strd	r3, r4, [sp, #8]
   347ea:	ldrd	r2, r3, [sp, #8]
   347ee:	ldrd	r4, r5, [r0, #24]
   347f2:	cmp	r3, #0
   347f4:	it	eq
   347f6:	cmpeq	r2, #32
   347f8:	bcc.w	349c0 <XXH64_digest@@Base+0x1e4>
   347fc:	ldrd	sl, lr, [r0, #8]
   34800:	ldr	r6, [pc, #456]	; (349cc <XXH64_digest@@Base+0x1f0>)
   34802:	ldr	r7, [pc, #460]	; (349d0 <XXH64_digest@@Base+0x1f4>)
   34804:	ldrd	r1, ip, [r0, #16]
   34808:	umull	r2, r3, sl, r6
   3480c:	mul.w	r8, r7, sl
   34810:	ldr	r7, [r0, #36]	; 0x24
   34812:	mla	r8, r6, lr, r8
   34816:	add	r3, r8
   34818:	mov.w	r8, r2, lsl #31
   3481c:	mov.w	fp, r3, lsl #31
   34820:	orr.w	r8, r8, r3, lsr #1
   34824:	mov.w	r3, lr, lsl #1
   34828:	orr.w	r9, fp, r2, lsr #1
   3482c:	orr.w	r2, r3, sl, lsr #31
   34830:	mov.w	r3, sl, lsl #1
   34834:	orr.w	fp, r3, lr, lsr #31
   34838:	mov.w	lr, r1, lsl #7
   3483c:	mov.w	r3, ip, lsl #7
   34840:	orr.w	lr, lr, ip, lsr #25
   34844:	orr.w	sl, r3, r1, lsr #25
   34848:	adds.w	r3, fp, lr
   3484c:	mov.w	lr, r4, lsl #12
   34850:	adc.w	sl, r2, sl
   34854:	orr.w	lr, lr, r5, lsr #20
   34858:	lsls	r2, r5, #12
   3485a:	adds.w	lr, r3, lr
   3485e:	ldr	r3, [r0, #36]	; 0x24
   34860:	orr.w	fp, r2, r4, lsr #20
   34864:	adc.w	sl, sl, fp
   34868:	mov.w	fp, r3, lsl #18
   3486c:	ldr	r3, [r0, #32]
   3486e:	orr.w	r2, fp, r3, lsr #14
   34872:	lsls	r3, r3, #18
   34874:	orr.w	r3, r3, r7, lsr #14
   34878:	adds.w	lr, lr, r3
   3487c:	ldr	r3, [pc, #340]	; (349d4 <XXH64_digest@@Base+0x1f8>)
   3487e:	adc.w	sl, sl, r2
   34882:	ldr	r2, [pc, #340]	; (349d8 <XXH64_digest@@Base+0x1fc>)
   34884:	mul.w	fp, r2, r8
   34888:	mla	fp, r3, r9, fp
   3488c:	umull	r8, r9, r8, r3
   34890:	add	r9, fp
   34892:	eor.w	lr, lr, r8
   34896:	eor.w	sl, sl, r9
   3489a:	mul.w	r8, r2, lr
   3489e:	mla	sl, r3, sl, r8
   348a2:	umull	r7, r8, lr, r3
   348a6:	strd	r7, r8, [sp, #16]
   348aa:	ldr	r7, [sp, #20]
   348ac:	add	r7, sl
   348ae:	str	r7, [sp, #20]
   348b0:	ldr	r7, [pc, #284]	; (349d0 <XXH64_digest@@Base+0x1f4>)
   348b2:	umull	sl, fp, r1, r6
   348b6:	mul.w	lr, r7, r1
   348ba:	ldr	r7, [sp, #16]
   348bc:	mla	ip, r6, ip, lr
   348c0:	mov.w	r8, sl, lsl #31
   348c4:	add	fp, ip
   348c6:	orr.w	r8, r8, fp, lsr #1
   348ca:	mov.w	r1, fp, lsl #31
   348ce:	orr.w	r1, r1, sl, lsr #1
   348d2:	mul.w	ip, r2, r8
   348d6:	mla	r1, r3, r1, ip
   348da:	ldr.w	ip, [pc, #268]	; 349e8 <XXH64_digest@@Base+0x20c>
   348de:	umull	r8, r9, r8, r3
   348e2:	add	r9, r1
   348e4:	ldr	r1, [pc, #244]	; (349dc <XXH64_digest@@Base+0x200>)
   348e6:	adds.w	sl, r7, r1
   348ea:	ldr	r7, [sp, #20]
   348ec:	eor.w	sl, r8, sl
   348f0:	adc.w	lr, r7, ip
   348f4:	ldr	r7, [pc, #216]	; (349d0 <XXH64_digest@@Base+0x1f4>)
   348f6:	eor.w	lr, r9, lr
   348fa:	mul.w	r8, r2, sl
   348fe:	mla	lr, r3, lr, r8
   34902:	umull	sl, fp, sl, r3
   34906:	add	fp, lr
   34908:	mul.w	lr, r7, r4
   3490c:	umull	r7, r8, r4, r6
   34910:	mla	lr, r6, r5, lr
   34914:	add	r8, lr
   34916:	lsls	r4, r7, #31
   34918:	orr.w	r4, r4, r8, lsr #1
   3491c:	mov.w	lr, r8, lsl #31
   34920:	orr.w	lr, lr, r7, lsr #1
   34924:	adds.w	r8, sl, r1
   34928:	mul.w	r5, r2, r4
   3492c:	mla	lr, r3, lr, r5
   34930:	umull	r4, r5, r4, r3
   34934:	add	r5, lr
   34936:	eor.w	r8, r4, r8
   3493a:	adc.w	lr, fp, ip
   3493e:	eor.w	r4, r5, lr
   34942:	mul.w	r5, r2, r8
   34946:	mla	r4, r3, r4, r5
   3494a:	ldr	r5, [pc, #132]	; (349d0 <XXH64_digest@@Base+0x1f4>)
   3494c:	umull	r8, r9, r8, r3
   34950:	add	r9, r4
   34952:	ldr	r4, [r0, #32]
   34954:	mul.w	r7, r5, r4
   34958:	ldr	r5, [r0, #32]
   3495a:	ldr	r4, [r0, #36]	; 0x24
   3495c:	umull	sl, fp, r5, r6
   34960:	mla	r4, r6, r4, r7
   34964:	add	fp, r4
   34966:	mov.w	r6, sl, lsl #31
   3496a:	orr.w	r6, r6, fp, lsr #1
   3496e:	mov.w	r4, fp, lsl #31
   34972:	orr.w	r4, r4, sl, lsr #1
   34976:	mul.w	r5, r2, r6
   3497a:	mla	r4, r3, r4, r5
   3497e:	umull	r6, r7, r6, r3
   34982:	add	r7, r4
   34984:	adds.w	r4, r8, r1
   34988:	eor.w	r4, r4, r6
   3498c:	adc.w	r5, r9, ip
   34990:	eors	r5, r7
   34992:	muls	r2, r4
   34994:	mla	r2, r3, r5, r2
   34998:	umull	r5, r6, r4, r3
   3499c:	add	r6, r2
   3499e:	adds	r4, r5, r1
   349a0:	adc.w	r1, r6, ip
   349a4:	movs	r3, #0
   349a6:	str	r3, [sp, #0]
   349a8:	ldr	r3, [sp, #8]
   349aa:	add.w	r2, r0, #40	; 0x28
   349ae:	adds	r0, r3, r4
   349b0:	ldr	r4, [sp, #12]
   349b2:	adc.w	r1, r4, r1
   349b6:	bl	33c8c <hash_blake2b@@Base+0x194>
   349ba:	add	sp, #28
   349bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   349c0:	ldr	r1, [pc, #28]	; (349e0 <XXH64_digest@@Base+0x204>)
   349c2:	adds	r4, r4, r1
   349c4:	ldr	r1, [pc, #28]	; (349e4 <XXH64_digest@@Base+0x208>)
   349c6:	adc.w	r1, r5, r1
   349ca:	b.n	349a4 <XXH64_digest@@Base+0x1c8>
   349cc:	adc.w	r7, pc, r4, lsr #11
   349d0:	add	r6, sp, #244	; 0xf4
   349d2:	stmia	r2!, {r1, r4, r5, r7}
   349d4:	ldmia	r2, {r0, r1, r2, r7}
   349d6:	strh	r3, [r5, #46]	; 0x2e
   349d8:	ldrb	r1, [r6, #6]
   349da:	ldr	r6, [sp, #220]	; 0xdc
   349dc:	add	r6, sp, #396	; 0x18c
   349de:	stmia	r2!, {r1, r4, r5, r7}
   349e0:	str	r5, [r0, #124]	; 0x7c
   349e2:	asrs	r6, r2, #25
   349e4:			; <UNDEFINED> instruction: 0xeb2f27d4
   349e8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   349ea:	strh	r3, [r5, #46]	; 0x2e

000349ec <XXH64_canonicalFromHash@@Base>:
   349ec:	push	{r0, r1, r4, lr}
   349ee:	mov	r4, r0
   349f0:	strd	r2, r3, [sp]
   349f4:	rev	r2, r2
   349f6:	ldr	r3, [sp, #4]
   349f8:	rev	r3, r3
   349fa:	strd	r3, r2, [sp]
   349fe:	mov	r3, sp
   34a00:	ldmia	r3!, {r0, r1}
   34a02:	str	r0, [r4, #0]
   34a04:	str	r1, [r4, #4]
   34a06:	add	sp, #8
   34a08:	pop	{r4, pc}

00034a0a <XXH64_hashFromCanonical@@Base>:
   34a0a:	ldr	r1, [r0, #0]
   34a0c:	ldr	r0, [r0, #4]
   34a0e:	rev	r1, r1
   34a10:	rev	r0, r0
   34a12:	bx	lr
   34a14:	ldr	r2, [pc, #372]	; (34b8c <XXH64_hashFromCanonical@@Base+0x182>)
   34a16:	ldr	r3, [pc, #376]	; (34b90 <XXH64_hashFromCanonical@@Base+0x186>)
   34a18:	add	r2, pc
   34a1a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34a1e:	sub	sp, #308	; 0x134
   34a20:	ldr	r3, [r2, r3]
   34a22:	add	r1, sp, #44	; 0x2c
   34a24:	add.w	r5, r0, #64	; 0x40
   34a28:	mov	r2, r0
   34a2a:	ldr	r3, [r3, #0]
   34a2c:	str	r3, [sp, #300]	; 0x12c
   34a2e:	mov.w	r3, #0
   34a32:	mov	r4, r1
   34a34:	ldrb.w	r3, [r2, #43]	; 0x2b
   34a38:	adds	r2, #4
   34a3a:	ldrb.w	r6, [r2, #38]	; 0x26
   34a3e:	lsls	r3, r3, #16
   34a40:	orr.w	r3, r3, r6, lsl #24
   34a44:	ldrb.w	r6, [r2, #41]	; 0x29
   34a48:	orrs	r3, r6
   34a4a:	ldrb.w	r6, [r2, #40]	; 0x28
   34a4e:	cmp	r5, r2
   34a50:	orr.w	r3, r3, r6, lsl #8
   34a54:	str.w	r3, [r4], #4
   34a58:	bne.n	34a34 <XXH64_hashFromCanonical@@Base+0x2a>
   34a5a:	movs	r4, #16
   34a5c:	ldr	r2, [r1, #56]	; 0x38
   34a5e:	mov	r6, r1
   34a60:	ldr.w	r5, [r1, #4]!
   34a64:	adds	r4, #1
   34a66:	cmp	r4, #64	; 0x40
   34a68:	mov.w	r3, r2, ror #19
   34a6c:	eor.w	r3, r3, r2, ror #17
   34a70:	eor.w	r3, r3, r2, lsr #10
   34a74:	ldr	r2, [r6, #36]	; 0x24
   34a76:	ldr	r6, [r6, #0]
   34a78:	add	r2, r6
   34a7a:	add	r3, r2
   34a7c:	mov.w	r2, r5, ror #18
   34a80:	eor.w	r2, r2, r5, ror #7
   34a84:	eor.w	r2, r2, r5, lsr #3
   34a88:	add	r3, r2
   34a8a:	str	r3, [r1, #60]	; 0x3c
   34a8c:	bne.n	34a5c <XXH64_hashFromCanonical@@Base+0x52>
   34a8e:	ldr	r3, [r0, #0]
   34a90:	add.w	r9, sp, #44	; 0x2c
   34a94:	mov.w	lr, #0
   34a98:	str	r3, [sp, #0]
   34a9a:	ldr	r3, [r0, #4]
   34a9c:	str	r3, [sp, #4]
   34a9e:	ldr	r3, [r0, #8]
   34aa0:	ldrd	r4, r6, [sp]
   34aa4:	str	r3, [sp, #8]
   34aa6:	ldr	r3, [r0, #12]
   34aa8:	str	r3, [sp, #12]
   34aaa:	ldr	r3, [r0, #16]
   34aac:	ldrd	r5, r8, [sp, #8]
   34ab0:	str	r3, [sp, #16]
   34ab2:	ldr	r3, [r0, #20]
   34ab4:	str	r3, [sp, #20]
   34ab6:	ldr	r3, [r0, #24]
   34ab8:	ldrd	r1, ip, [sp, #16]
   34abc:	str	r3, [sp, #24]
   34abe:	ldr	r3, [r0, #28]
   34ac0:	str	r3, [sp, #28]
   34ac2:	ldrd	r7, fp, [sp, #24]
   34ac6:	ldr	r3, [pc, #204]	; (34b94 <XXH64_hashFromCanonical@@Base+0x18a>)
   34ac8:	add	r3, pc
   34aca:	str	r3, [sp, #36]	; 0x24
   34acc:	ldr	r3, [sp, #36]	; 0x24
   34ace:	ldr.w	r2, [r3], #4
   34ad2:	str	r3, [sp, #36]	; 0x24
   34ad4:	mov.w	r3, r1, ror #11
   34ad8:	eor.w	r3, r3, r1, ror #6
   34adc:	eor.w	sl, r3, r1, ror #25
   34ae0:	ldr.w	r3, [r9, lr, lsl #2]
   34ae4:	add.w	lr, lr, #1
   34ae8:	add	r2, r3
   34aea:	cmp.w	lr, #64	; 0x40
   34aee:	add.w	r3, sl, r2
   34af2:	bic.w	sl, r7, r1
   34af6:	and.w	r2, r1, ip
   34afa:	eor.w	r2, sl, r2
   34afe:	mov.w	sl, r4, ror #13
   34b02:	add	r2, r3
   34b04:	eor.w	r3, r6, r5
   34b08:	add	r2, fp
   34b0a:	eor.w	sl, sl, r4, ror #2
   34b0e:	and.w	fp, r6, r5
   34b12:	and.w	r3, r3, r4
   34b16:	eor.w	r3, r3, fp
   34b1a:	eor.w	sl, sl, r4, ror #22
   34b1e:	add	sl, r3
   34b20:	mov	fp, r7
   34b22:	add.w	r3, r2, r8
   34b26:	add	r2, sl
   34b28:	mov	r8, r5
   34b2a:	str	r3, [sp, #32]
   34b2c:	bne.n	34b78 <XXH64_hashFromCanonical@@Base+0x16e>
   34b2e:	ldr	r3, [sp, #0]
   34b30:	add	r3, r2
   34b32:	str	r3, [r0, #0]
   34b34:	ldr	r3, [sp, #4]
   34b36:	ldr	r2, [sp, #32]
   34b38:	add	r3, r4
   34b3a:	str	r3, [r0, #4]
   34b3c:	ldr	r3, [sp, #8]
   34b3e:	add	r3, r6
   34b40:	str	r3, [r0, #8]
   34b42:	ldr	r3, [sp, #12]
   34b44:	add	r3, r5
   34b46:	str	r3, [r0, #12]
   34b48:	ldr	r3, [sp, #16]
   34b4a:	add	r3, r2
   34b4c:	str	r3, [r0, #16]
   34b4e:	ldr	r3, [sp, #20]
   34b50:	ldr	r2, [pc, #68]	; (34b98 <XXH64_hashFromCanonical@@Base+0x18e>)
   34b52:	add	r3, r1
   34b54:	str	r3, [r0, #20]
   34b56:	ldr	r3, [sp, #24]
   34b58:	add	r2, pc
   34b5a:	add	r3, ip
   34b5c:	str	r3, [r0, #24]
   34b5e:	ldr	r3, [sp, #28]
   34b60:	add	r3, r7
   34b62:	str	r3, [r0, #28]
   34b64:	movs	r3, #0
   34b66:	strh	r3, [r0, #40]	; 0x28
   34b68:	ldr	r3, [pc, #36]	; (34b90 <XXH64_hashFromCanonical@@Base+0x186>)
   34b6a:	ldr	r3, [r2, r3]
   34b6c:	ldr	r2, [r3, #0]
   34b6e:	ldr	r3, [sp, #300]	; 0x12c
   34b70:	eors	r2, r3
   34b72:	beq.n	34b86 <XXH64_hashFromCanonical@@Base+0x17c>
   34b74:	blx	86b8 <__stack_chk_fail@plt>
   34b78:	mov	r7, ip
   34b7a:	mov	r5, r6
   34b7c:	mov	ip, r1
   34b7e:	mov	r6, r4
   34b80:	ldr	r1, [sp, #32]
   34b82:	mov	r4, r2
   34b84:	b.n	34acc <XXH64_hashFromCanonical@@Base+0xc2>
   34b86:	add	sp, #308	; 0x134
   34b88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34b8c:	lsls	r0, r6, #13
   34b8e:	movs	r3, r0
   34b90:	lsls	r4, r4, #8
   34b92:	movs	r0, r0
   34b94:	stcl	0, cr0, [ip], #4
   34b98:	lsls	r0, r6, #8
   34b9a:	movs	r3, r0
   34b9c:	push	{r4, lr}
   34b9e:	mov	r4, r0
   34ba0:	ldrsh.w	r3, [r0, #40]	; 0x28
   34ba4:	adds	r2, r3, #1
   34ba6:	cmp	r3, #55	; 0x37
   34ba8:	add	r3, r0
   34baa:	sxth	r2, r2
   34bac:	strh	r2, [r0, #40]	; 0x28
   34bae:	strb.w	r1, [r3, #42]	; 0x2a
   34bb2:	ble.n	34bc4 <XXH64_hashFromCanonical@@Base+0x1ba>
   34bb4:	movs	r2, #0
   34bb6:	ldrsh.w	r3, [r4, #40]	; 0x28
   34bba:	cmp	r3, #63	; 0x3f
   34bbc:	ble.n	34c02 <XXH64_hashFromCanonical@@Base+0x1f8>
   34bbe:	mov	r0, r4
   34bc0:	bl	34a14 <XXH64_hashFromCanonical@@Base+0xa>
   34bc4:	movs	r2, #0
   34bc6:	ldrsh.w	r3, [r4, #40]	; 0x28
   34bca:	cmp	r3, #55	; 0x37
   34bcc:	ble.n	34c0e <XXH64_hashFromCanonical@@Base+0x204>
   34bce:	ldr	r3, [r4, #32]
   34bd0:	mov	r0, r4
   34bd2:	ldrh	r2, [r4, #32]
   34bd4:	lsrs	r1, r3, #24
   34bd6:	lsrs	r3, r3, #16
   34bd8:	strb.w	r3, [r4, #99]	; 0x63
   34bdc:	rev16	r2, r2
   34bde:	ldr	r3, [r4, #36]	; 0x24
   34be0:	strh.w	r2, [r4, #100]	; 0x64
   34be4:	ldrh	r2, [r4, #36]	; 0x24
   34be6:	strb.w	r1, [r4, #98]	; 0x62
   34bea:	lsrs	r1, r3, #24
   34bec:	rev16	r2, r2
   34bee:	lsrs	r3, r3, #16
   34bf0:	strb.w	r1, [r4, #102]	; 0x66
   34bf4:	strb.w	r3, [r4, #103]	; 0x67
   34bf8:	strh.w	r2, [r4, #104]	; 0x68
   34bfc:	ldmia.w	sp!, {r4, lr}
   34c00:	b.n	34a14 <XXH64_hashFromCanonical@@Base+0xa>
   34c02:	adds	r1, r3, #1
   34c04:	add	r3, r4
   34c06:	strh	r1, [r4, #40]	; 0x28
   34c08:	strb.w	r2, [r3, #42]	; 0x2a
   34c0c:	b.n	34bb6 <XXH64_hashFromCanonical@@Base+0x1ac>
   34c0e:	adds	r1, r3, #1
   34c10:	add	r3, r4
   34c12:	strh	r1, [r4, #40]	; 0x28
   34c14:	strb.w	r2, [r3, #42]	; 0x2a
   34c18:	b.n	34bc6 <XXH64_hashFromCanonical@@Base+0x1bc>
   34c1a:	push	{r3, r4, r5, r6, r7, lr}
   34c1c:	mov	r4, r0
   34c1e:	ldr	r5, [r0, #108]	; 0x6c
   34c20:	mov	r7, r1
   34c22:	mov	r6, r2
   34c24:	cbnz	r5, 34c44 <XXH64_hashFromCanonical@@Base+0x23a>
   34c26:	movs	r1, #128	; 0x80
   34c28:	bl	34b9c <XXH64_hashFromCanonical@@Base+0x192>
   34c2c:	add.w	r2, r4, #42	; 0x2a
   34c30:	add.w	r1, r4, #106	; 0x6a
   34c34:	strb.w	r5, [r2], #1
   34c38:	cmp	r2, r1
   34c3a:	bne.n	34c34 <XXH64_hashFromCanonical@@Base+0x22a>
   34c3c:	movs	r3, #1
   34c3e:	strd	r5, r5, [r4, #32]
   34c42:	str	r3, [r4, #108]	; 0x6c
   34c44:	movs	r3, #0
   34c46:	asrs	r2, r3, #2
   34c48:	mvns	r0, r3
   34c4a:	and.w	r0, r0, #3
   34c4e:	ldr.w	r2, [r4, r2, lsl #2]
   34c52:	lsls	r0, r0, #3
   34c54:	lsr.w	r0, r2, r0
   34c58:	strb	r0, [r7, r3]
   34c5a:	adds	r3, #1
   34c5c:	cmp	r3, r6
   34c5e:	bne.n	34c46 <XXH64_hashFromCanonical@@Base+0x23c>
   34c60:	movs	r0, #0
   34c62:	pop	{r3, r4, r5, r6, r7, pc}

00034c64 <SHA224Reset@@Base>:
   34c64:	cbz	r0, 34c9a <SHA224Reset@@Base+0x36>
   34c66:	ldr	r2, [pc, #56]	; (34ca0 <SHA224Reset@@Base+0x3c>)
   34c68:	movs	r3, #0
   34c6a:	strd	r3, r3, [r0, #32]
   34c6e:	add	r2, pc
   34c70:	strh	r3, [r0, #40]	; 0x28
   34c72:	strd	r3, r3, [r0, #108]	; 0x6c
   34c76:	ldr	r1, [r2, #0]
   34c78:	str	r1, [r0, #0]
   34c7a:	ldr	r1, [r2, #4]
   34c7c:	str	r1, [r0, #4]
   34c7e:	ldr	r1, [r2, #8]
   34c80:	str	r1, [r0, #8]
   34c82:	ldr	r1, [r2, #12]
   34c84:	str	r1, [r0, #12]
   34c86:	ldr	r1, [r2, #16]
   34c88:	str	r1, [r0, #16]
   34c8a:	ldr	r1, [r2, #20]
   34c8c:	str	r1, [r0, #20]
   34c8e:	ldr	r1, [r2, #24]
   34c90:	str	r1, [r0, #24]
   34c92:	ldr	r2, [r2, #28]
   34c94:	str	r2, [r0, #28]
   34c96:	mov	r0, r3
   34c98:	bx	lr
   34c9a:	movs	r0, #1
   34c9c:	bx	lr
   34c9e:	nop
   34ca0:	asrs	r2, r1, #22
   34ca2:	movs	r3, r0

00034ca4 <SHA224Result@@Base>:
   34ca4:	cbz	r0, 34cb0 <SHA224Result@@Base+0xc>
   34ca6:	cbz	r1, 34cb0 <SHA224Result@@Base+0xc>
   34ca8:	ldr	r3, [r0, #112]	; 0x70
   34caa:	cbnz	r3, 34cb2 <SHA224Result@@Base+0xe>
   34cac:	movs	r2, #28
   34cae:	b.n	34c1a <XXH64_hashFromCanonical@@Base+0x210>
   34cb0:	movs	r3, #1
   34cb2:	mov	r0, r3
   34cb4:	bx	lr

00034cb6 <SHA256Reset@@Base>:
   34cb6:	cbz	r0, 34cec <SHA256Reset@@Base+0x36>
   34cb8:	ldr	r2, [pc, #52]	; (34cf0 <SHA256Reset@@Base+0x3a>)
   34cba:	movs	r3, #0
   34cbc:	strd	r3, r3, [r0, #32]
   34cc0:	add	r2, pc
   34cc2:	strh	r3, [r0, #40]	; 0x28
   34cc4:	strd	r3, r3, [r0, #108]	; 0x6c
   34cc8:	ldr	r1, [r2, #32]
   34cca:	str	r1, [r0, #0]
   34ccc:	ldr	r1, [r2, #36]	; 0x24
   34cce:	str	r1, [r0, #4]
   34cd0:	ldr	r1, [r2, #40]	; 0x28
   34cd2:	str	r1, [r0, #8]
   34cd4:	ldr	r1, [r2, #44]	; 0x2c
   34cd6:	str	r1, [r0, #12]
   34cd8:	ldr	r1, [r2, #48]	; 0x30
   34cda:	str	r1, [r0, #16]
   34cdc:	ldr	r1, [r2, #52]	; 0x34
   34cde:	str	r1, [r0, #20]
   34ce0:	ldr	r1, [r2, #56]	; 0x38
   34ce2:	str	r1, [r0, #24]
   34ce4:	ldr	r2, [r2, #60]	; 0x3c
   34ce6:	str	r2, [r0, #28]
   34ce8:	mov	r0, r3
   34cea:	bx	lr
   34cec:	movs	r0, #1
   34cee:	bx	lr
   34cf0:	asrs	r0, r7, #20
   34cf2:	movs	r3, r0

00034cf4 <SHA256Input@@Base>:
   34cf4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   34cf8:	mov	r4, r0
   34cfa:	cmp	r0, #0
   34cfc:	beq.n	34d6a <SHA256Input@@Base+0x76>
   34cfe:	cmp	r2, #0
   34d00:	beq.n	34d66 <SHA256Input@@Base+0x72>
   34d02:	cmp	r1, #0
   34d04:	beq.n	34d6a <SHA256Input@@Base+0x76>
   34d06:	ldr	r3, [r0, #108]	; 0x6c
   34d08:	cbz	r3, 34d12 <SHA256Input@@Base+0x1e>
   34d0a:	movs	r0, #3
   34d0c:	str	r0, [r4, #112]	; 0x70
   34d0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   34d12:	ldr	r0, [r0, #112]	; 0x70
   34d14:	cmp	r0, #0
   34d16:	bne.n	34d0e <SHA256Input@@Base+0x1a>
   34d18:	adds	r6, r1, r2
   34d1a:	mov	r5, r1
   34d1c:	movs	r7, #8
   34d1e:	mov.w	r8, #2
   34d22:	cmp	r5, r6
   34d24:	bne.n	34d2a <SHA256Input@@Base+0x36>
   34d26:	ldr	r0, [r4, #112]	; 0x70
   34d28:	b.n	34d0e <SHA256Input@@Base+0x1a>
   34d2a:	ldrsh.w	r3, [r4, #40]	; 0x28
   34d2e:	adds	r2, r3, #1
   34d30:	add	r3, r4
   34d32:	sxth	r2, r2
   34d34:	strh	r2, [r4, #40]	; 0x28
   34d36:	ldrb.w	r1, [r5], #1
   34d3a:	strb.w	r1, [r3, #42]	; 0x2a
   34d3e:	ldr	r3, [r4, #36]	; 0x24
   34d40:	adds	r3, r3, r7
   34d42:	str	r3, [r4, #36]	; 0x24
   34d44:	bcc.n	34d54 <SHA256Input@@Base+0x60>
   34d46:	ldr	r3, [r4, #32]
   34d48:	adds	r3, #1
   34d4a:	str	r3, [r4, #32]
   34d4c:	cbnz	r3, 34d54 <SHA256Input@@Base+0x60>
   34d4e:	str.w	r8, [r4, #112]	; 0x70
   34d52:	b.n	34d22 <SHA256Input@@Base+0x2e>
   34d54:	ldr	r3, [r4, #112]	; 0x70
   34d56:	cmp	r3, #0
   34d58:	bne.n	34d22 <SHA256Input@@Base+0x2e>
   34d5a:	cmp	r2, #64	; 0x40
   34d5c:	bne.n	34d22 <SHA256Input@@Base+0x2e>
   34d5e:	mov	r0, r4
   34d60:	bl	34a14 <XXH64_hashFromCanonical@@Base+0xa>
   34d64:	b.n	34d22 <SHA256Input@@Base+0x2e>
   34d66:	mov	r0, r2
   34d68:	b.n	34d0e <SHA256Input@@Base+0x1a>
   34d6a:	movs	r0, #1
   34d6c:	b.n	34d0e <SHA256Input@@Base+0x1a>

00034d6e <SHA224Input@@Base>:
   34d6e:	b.w	34cf4 <SHA256Input@@Base>

00034d72 <SHA256FinalBits@@Base>:
   34d72:	push	{r4, lr}
   34d74:	mov	r4, r0
   34d76:	cbz	r0, 34ddc <SHA256FinalBits@@Base+0x6a>
   34d78:	cbz	r2, 34de0 <SHA256FinalBits@@Base+0x6e>
   34d7a:	ldr	r0, [r0, #112]	; 0x70
   34d7c:	cbnz	r0, 34d86 <SHA256FinalBits@@Base+0x14>
   34d7e:	ldr	r0, [r4, #108]	; 0x6c
   34d80:	cbz	r0, 34d88 <SHA256FinalBits@@Base+0x16>
   34d82:	movs	r0, #3
   34d84:	str	r0, [r4, #112]	; 0x70
   34d86:	pop	{r4, pc}
   34d88:	cmp	r2, #7
   34d8a:	bls.n	34d90 <SHA256FinalBits@@Base+0x1e>
   34d8c:	movs	r0, #4
   34d8e:	b.n	34d84 <SHA256FinalBits@@Base+0x12>
   34d90:	ldr	r3, [r4, #36]	; 0x24
   34d92:	adds	r3, r2, r3
   34d94:	str	r3, [r4, #36]	; 0x24
   34d96:	bcc.n	34da4 <SHA256FinalBits@@Base+0x32>
   34d98:	ldr	r3, [r4, #32]
   34d9a:	adds	r3, #1
   34d9c:	str	r3, [r4, #32]
   34d9e:	cmp	r3, #0
   34da0:	it	eq
   34da2:	moveq	r0, #2
   34da4:	ldr	r3, [pc, #60]	; (34de4 <SHA256FinalBits@@Base+0x72>)
   34da6:	str	r0, [r4, #112]	; 0x70
   34da8:	mov	r0, r4
   34daa:	add	r3, pc
   34dac:	add	r2, r3
   34dae:	ldrb.w	r3, [r2, #256]	; 0x100
   34db2:	ands	r1, r3
   34db4:	ldrb.w	r3, [r2, #264]	; 0x108
   34db8:	orrs	r1, r3
   34dba:	bl	34b9c <XXH64_hashFromCanonical@@Base+0x192>
   34dbe:	add.w	r2, r4, #42	; 0x2a
   34dc2:	add.w	r1, r4, #106	; 0x6a
   34dc6:	movs	r3, #0
   34dc8:	strb.w	r3, [r2], #1
   34dcc:	cmp	r1, r2
   34dce:	bne.n	34dc8 <SHA256FinalBits@@Base+0x56>
   34dd0:	strd	r3, r3, [r4, #32]
   34dd4:	movs	r3, #1
   34dd6:	ldr	r0, [r4, #112]	; 0x70
   34dd8:	str	r3, [r4, #108]	; 0x6c
   34dda:	b.n	34d86 <SHA256FinalBits@@Base+0x14>
   34ddc:	movs	r0, #1
   34dde:	b.n	34d86 <SHA256FinalBits@@Base+0x14>
   34de0:	mov	r0, r2
   34de2:	b.n	34d86 <SHA256FinalBits@@Base+0x14>
   34de4:	and.w	r0, sl, r1

00034de8 <SHA224FinalBits@@Base>:
   34de8:	b.w	34d72 <SHA256FinalBits@@Base>

00034dec <SHA256Result@@Base>:
   34dec:	cbz	r0, 34df8 <SHA256Result@@Base+0xc>
   34dee:	cbz	r1, 34df8 <SHA256Result@@Base+0xc>
   34df0:	ldr	r3, [r0, #112]	; 0x70
   34df2:	cbnz	r3, 34dfa <SHA256Result@@Base+0xe>
   34df4:	movs	r2, #32
   34df6:	b.n	34c1a <XXH64_hashFromCanonical@@Base+0x210>
   34df8:	movs	r3, #1
   34dfa:	mov	r0, r3
   34dfc:	bx	lr
   34dfe:	nop
   34e00:	mov	r3, r0
   34e02:	ldr	r0, [r0, #0]
   34e04:	ldr	r1, [r3, #4]
   34e06:	bx	lr
   34e08:	ldr	r2, [pc, #952]	; (351c4 <SHA256Result@@Base+0x3d8>)
   34e0a:	ldr	r3, [pc, #956]	; (351c8 <SHA256Result@@Base+0x3dc>)
   34e0c:	add	r2, pc
   34e0e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34e12:	sub.w	sp, sp, #540	; 0x21c
   34e16:	ldr	r3, [r2, r3]
   34e18:	add	r5, sp, #272	; 0x110
   34e1a:	add.w	r7, r1, #128	; 0x80
   34e1e:	mov	fp, r0
   34e20:	ldr	r3, [r3, #0]
   34e22:	str	r3, [sp, #532]	; 0x214
   34e24:	mov.w	r3, #0
   34e28:	mov	r2, r1
   34e2a:	mov	r4, r5
   34e2c:	mov	r0, r2
   34e2e:	bl	34e00 <SHA256Result@@Base+0x14>
   34e32:	adds	r2, #8
   34e34:	strd	r0, r1, [r5], #8
   34e38:	cmp	r2, r7
   34e3a:	bne.n	34e2c <SHA256Result@@Base+0x40>
   34e3c:	sub.w	r3, fp, #8
   34e40:	str	r3, [sp, #132]	; 0x84
   34e42:	add	r3, sp, #400	; 0x190
   34e44:	str	r3, [sp, #136]	; 0x88
   34e46:	ldrd	r1, r0, [sp, #132]	; 0x84
   34e4a:	add.w	r3, fp, #56	; 0x38
   34e4e:	str	r3, [sp, #140]	; 0x8c
   34e50:	ldrd	r2, r3, [r1, #8]!
   34e54:	strd	r2, r3, [r0], #8
   34e58:	ldr	r3, [sp, #140]	; 0x8c
   34e5a:	cmp	r1, r3
   34e5c:	bne.n	34e50 <SHA256Result@@Base+0x64>
   34e5e:	ldr	r3, [sp, #272]	; 0x110
   34e60:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   34e64:	ldr	r7, [sp, #400]	; 0x190
   34e66:	str	r3, [sp, #4]
   34e68:	ldr	r3, [sp, #276]	; 0x114
   34e6a:	adds.w	r7, r8, r7
   34e6e:	ldr	r6, [r4, #8]
   34e70:	str	r3, [sp, #8]
   34e72:	ldr	r3, [sp, #404]	; 0x194
   34e74:	str	r6, [sp, #12]
   34e76:	adc.w	r9, r0, r3
   34e7a:	ldr	r3, [sp, #4]
   34e7c:	ldr	r6, [r4, #12]
   34e7e:	adds	r7, r7, r3
   34e80:	ldr	r3, [sp, #8]
   34e82:	adc.w	r9, r9, r3
   34e86:	ldrd	r3, r2, [fp, #64]	; 0x40
   34e8a:	str	r6, [sp, #16]
   34e8c:	eor.w	r2, r9, r2
   34e90:	eor.w	r5, r7, r3
   34e94:	eor.w	r1, r2, #1358954496	; 0x51000000
   34e98:	eor.w	r3, r5, #2902458368	; 0xad000000
   34e9c:	eor.w	r1, r1, #937984	; 0xe5000
   34ea0:	ldr	r2, [pc, #768]	; (351a4 <SHA256Result@@Base+0x3b8>)
   34ea2:	eor.w	r1, r1, #636	; 0x27c
   34ea6:	eor.w	r3, r3, #15073280	; 0xe60000
   34eaa:	eor.w	r1, r1, #3
   34eae:	ldr	r5, [pc, #760]	; (351a8 <SHA256Result@@Base+0x3bc>)
   34eb0:	eor.w	r3, r3, #33280	; 0x8200
   34eb4:	adds	r2, r1, r2
   34eb6:	eor.w	r3, r3, #209	; 0xd1
   34eba:	eor.w	r8, r8, r2
   34ebe:	adc.w	r5, r3, r5
   34ec2:	ldr	r6, [sp, #12]
   34ec4:	eor.w	ip, r0, r5
   34ec8:	mov.w	sl, r8, lsr #24
   34ecc:	adds	r7, r7, r6
   34ece:	ldr	r6, [sp, #16]
   34ed0:	orr.w	lr, sl, ip, lsl #8
   34ed4:	mov.w	r0, ip, lsr #24
   34ed8:	orr.w	r0, r0, r8, lsl #8
   34edc:	adc.w	r9, r9, r6
   34ee0:	adds.w	r6, r7, lr
   34ee4:	str	r6, [sp, #76]	; 0x4c
   34ee6:	adc.w	r6, r9, r0
   34eea:	str	r6, [sp, #80]	; 0x50
   34eec:	ldr	r6, [sp, #76]	; 0x4c
   34eee:	eors	r1, r6
   34ef0:	ldr	r6, [sp, #80]	; 0x50
   34ef2:	eors	r3, r6
   34ef4:	lsrs	r7, r1, #16
   34ef6:	orr.w	r6, r7, r3, lsl #16
   34efa:	lsrs	r3, r3, #16
   34efc:	orr.w	r3, r3, r1, lsl #16
   34f00:	str	r3, [sp, #168]	; 0xa8
   34f02:	adds	r3, r2, r6
   34f04:	str	r3, [sp, #108]	; 0x6c
   34f06:	ldr	r3, [sp, #168]	; 0xa8
   34f08:	str	r6, [sp, #104]	; 0x68
   34f0a:	adc.w	r3, r5, r3
   34f0e:	str	r3, [sp, #112]	; 0x70
   34f10:	ldr	r3, [sp, #108]	; 0x6c
   34f12:	eor.w	lr, r3, lr
   34f16:	ldr	r3, [sp, #112]	; 0x70
   34f18:	eors	r0, r3
   34f1a:	lsls	r3, r0, #1
   34f1c:	orr.w	r3, r3, lr, lsr #31
   34f20:	mov.w	lr, lr, lsl #1
   34f24:	str	r3, [sp, #196]	; 0xc4
   34f26:	orr.w	r3, lr, r0, lsr #31
   34f2a:	str	r3, [sp, #192]	; 0xc0
   34f2c:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   34f30:	ldr	r3, [r4, #16]
   34f32:	ldr	r2, [sp, #408]	; 0x198
   34f34:	ldr	r7, [sp, #412]	; 0x19c
   34f36:	str	r3, [sp, #20]
   34f38:	adds.w	r2, r9, r2
   34f3c:	ldr	r3, [r4, #20]
   34f3e:	adc.w	r7, ip, r7
   34f42:	ldr	r6, [r4, #24]
   34f44:	str	r3, [sp, #24]
   34f46:	ldr	r3, [sp, #20]
   34f48:	str	r6, [sp, #28]
   34f4a:	adds	r2, r2, r3
   34f4c:	ldr	r3, [sp, #24]
   34f4e:	ldr	r6, [r4, #28]
   34f50:	adc.w	r7, r3, r7
   34f54:	ldrd	r3, r1, [fp, #72]	; 0x48
   34f58:	eor.w	r0, r7, r1
   34f5c:	eors	r3, r2
   34f5e:	eor.w	r5, r0, #2600468480	; 0x9b000000
   34f62:	eor.w	r1, r3, #721420288	; 0x2b000000
   34f66:	eor.w	r5, r5, #354304	; 0x56800
   34f6a:	ldr	r3, [pc, #576]	; (351ac <SHA256Result@@Base+0x3c0>)
   34f6c:	eor.w	r1, r1, #4079616	; 0x3e4000
   34f70:	eor.w	r5, r5, #140	; 0x8c
   34f74:	ldr	r0, [pc, #568]	; (351b0 <SHA256Result@@Base+0x3c4>)
   34f76:	eor.w	r1, r1, #11264	; 0x2c00
   34f7a:	adds	r3, r5, r3
   34f7c:	eor.w	r1, r1, #31
   34f80:	adc.w	r0, r1, r0
   34f84:	eor.w	r9, r9, r3
   34f88:	str	r6, [sp, #32]
   34f8a:	eor.w	ip, ip, r0
   34f8e:	ldr	r6, [sp, #28]
   34f90:	mov.w	sl, r9, lsr #24
   34f94:	orr.w	r8, sl, ip, lsl #8
   34f98:	mov.w	ip, ip, lsr #24
   34f9c:	adds	r2, r2, r6
   34f9e:	ldr	r6, [sp, #32]
   34fa0:	orr.w	lr, ip, r9, lsl #8
   34fa4:	adc.w	r7, r6, r7
   34fa8:	adds.w	r2, r2, r8
   34fac:	str	r2, [sp, #92]	; 0x5c
   34fae:	adc.w	r2, r7, lr
   34fb2:	str	r2, [sp, #96]	; 0x60
   34fb4:	ldr	r2, [sp, #92]	; 0x5c
   34fb6:	eors	r5, r2
   34fb8:	ldr	r2, [sp, #96]	; 0x60
   34fba:	eors	r1, r2
   34fbc:	lsrs	r2, r5, #16
   34fbe:	orr.w	r2, r2, r1, lsl #16
   34fc2:	lsrs	r1, r1, #16
   34fc4:	str	r2, [sp, #184]	; 0xb8
   34fc6:	orr.w	r2, r1, r5, lsl #16
   34fca:	str	r2, [sp, #188]	; 0xbc
   34fcc:	ldr	r2, [sp, #184]	; 0xb8
   34fce:	adds	r3, r3, r2
   34fd0:	str	r3, [sp, #124]	; 0x7c
   34fd2:	ldr	r3, [sp, #188]	; 0xbc
   34fd4:	adc.w	r3, r0, r3
   34fd8:	str	r3, [sp, #128]	; 0x80
   34fda:	ldr	r3, [sp, #124]	; 0x7c
   34fdc:	eor.w	r8, r3, r8
   34fe0:	ldr	r3, [sp, #128]	; 0x80
   34fe2:	eor.w	lr, r3, lr
   34fe6:	mov.w	r3, lr, lsl #1
   34fea:	orr.w	r3, r3, r8, lsr #31
   34fee:	mov.w	r8, r8, lsl #1
   34ff2:	str	r3, [sp, #88]	; 0x58
   34ff4:	orr.w	r3, r8, lr, lsr #31
   34ff8:	str	r3, [sp, #84]	; 0x54
   34ffa:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   34ffe:	ldr	r3, [r4, #32]
   35000:	ldr	r2, [sp, #420]	; 0x1a4
   35002:	ldr	r6, [r4, #40]	; 0x28
   35004:	str	r3, [sp, #36]	; 0x24
   35006:	ldr	r3, [r4, #36]	; 0x24
   35008:	ldr	r1, [sp, #36]	; 0x24
   3500a:	str	r6, [sp, #44]	; 0x2c
   3500c:	str	r3, [sp, #40]	; 0x28
   3500e:	ldr	r3, [sp, #416]	; 0x1a0
   35010:	ldr	r6, [r4, #44]	; 0x2c
   35012:	adds.w	r3, r8, r3
   35016:	adc.w	r2, r7, r2
   3501a:	adds	r3, r3, r1
   3501c:	ldr	r1, [sp, #40]	; 0x28
   3501e:	str	r6, [sp, #48]	; 0x30
   35020:	adc.w	ip, r2, r1
   35024:	ldrd	r2, r1, [fp, #80]	; 0x50
   35028:	ldr	r6, [sp, #44]	; 0x2c
   3502a:	eor.w	r5, ip, r1
   3502e:	eors	r2, r3
   35030:	eor.w	r0, r5, #528482304	; 0x1f800000
   35034:	eor.w	r1, r2, #4211081216	; 0xfb000000
   35038:	eor.w	r0, r0, #251904	; 0x3d800
   3503c:	ldr	r2, [pc, #372]	; (351b4 <SHA256Result@@Base+0x3c8>)
   3503e:	eor.w	r0, r0, #426	; 0x1aa
   35042:	eor.w	r1, r1, #4292608	; 0x418000
   35046:	eor.w	r0, r0, #1
   3504a:	ldr	r5, [pc, #364]	; (351b8 <SHA256Result@@Base+0x3cc>)
   3504c:	eor.w	r1, r1, #15680	; 0x3d40
   35050:	adds	r2, r0, r2
   35052:	eor.w	r1, r1, #43	; 0x2b
   35056:	eor.w	r8, r8, r2
   3505a:	adc.w	r5, r1, r5
   3505e:	adds	r3, r3, r6
   35060:	eor.w	lr, r7, r5
   35064:	ldr	r6, [sp, #48]	; 0x30
   35066:	mov.w	sl, r8, lsr #24
   3506a:	orr.w	r7, sl, lr, lsl #8
   3506e:	mov.w	lr, lr, lsr #24
   35072:	orr.w	r9, lr, r8, lsl #8
   35076:	adc.w	ip, ip, r6
   3507a:	adds	r3, r3, r7
   3507c:	str	r3, [sp, #116]	; 0x74
   3507e:	adc.w	r3, ip, r9
   35082:	str	r3, [sp, #120]	; 0x78
   35084:	ldr	r3, [sp, #116]	; 0x74
   35086:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   3508a:	eors	r0, r3
   3508c:	ldr	r3, [sp, #120]	; 0x78
   3508e:	eors	r1, r3
   35090:	lsrs	r3, r0, #16
   35092:	orr.w	r3, r3, r1, lsl #16
   35096:	lsrs	r1, r1, #16
   35098:	str	r3, [sp, #200]	; 0xc8
   3509a:	orr.w	r3, r1, r0, lsl #16
   3509e:	str	r3, [sp, #204]	; 0xcc
   350a0:	ldr	r3, [sp, #200]	; 0xc8
   350a2:	adds	r2, r2, r3
   350a4:	ldr	r3, [sp, #204]	; 0xcc
   350a6:	eor.w	r7, r7, r2
   350aa:	adc.w	r5, r3, r5
   350ae:	eor.w	r9, r5, r9
   350b2:	mov.w	r3, r9, lsl #1
   350b6:	orr.w	r3, r3, r7, lsr #31
   350ba:	lsls	r7, r7, #1
   350bc:	str	r3, [sp, #176]	; 0xb0
   350be:	orr.w	r3, r7, r9, lsr #31
   350c2:	str	r3, [sp, #172]	; 0xac
   350c4:	ldr	r3, [r4, #48]	; 0x30
   350c6:	str	r3, [sp, #52]	; 0x34
   350c8:	ldr	r3, [r4, #52]	; 0x34
   350ca:	str	r3, [sp, #56]	; 0x38
   350cc:	ldr	r1, [sp, #424]	; 0x1a8
   350ce:	ldr	r3, [sp, #428]	; 0x1ac
   350d0:	adds.w	r1, sl, r1
   350d4:	adc.w	r9, r8, r3
   350d8:	ldr	r3, [sp, #52]	; 0x34
   350da:	adds	r1, r1, r3
   350dc:	ldr	r3, [sp, #56]	; 0x38
   350de:	adc.w	r9, r9, r3
   350e2:	ldrd	r3, r0, [fp, #88]	; 0x58
   350e6:	eor.w	r0, r9, r0
   350ea:	eors	r3, r1
   350ec:	eor.w	r7, r0, #1535115264	; 0x5b800000
   350f0:	eor.w	r6, r3, #325058560	; 0x13600000
   350f4:	eor.w	r7, r7, #6324224	; 0x608000
   350f8:	ldr	r3, [pc, #192]	; (351bc <SHA256Result@@Base+0x3d0>)
   350fa:	eor.w	r7, r7, #19712	; 0x4d00
   350fe:	eor.w	r6, r6, #1974272	; 0x1e2000
   35102:	eor.w	r7, r7, #25
   35106:	ldr	r0, [pc, #184]	; (351c0 <SHA256Result@@Base+0x3d4>)
   35108:	adds	r3, r7, r3
   3510a:	str	r3, [sp, #68]	; 0x44
   3510c:	eor.w	sl, sl, r3
   35110:	ldr	r3, [r4, #56]	; 0x38
   35112:	eor.w	r6, r6, #376	; 0x178
   35116:	eor.w	r6, r6, #1
   3511a:	mov.w	fp, sl, lsr #24
   3511e:	str	r3, [sp, #60]	; 0x3c
   35120:	adc.w	r0, r6, r0
   35124:	ldr	r3, [r4, #60]	; 0x3c
   35126:	eor.w	r8, r8, r0
   3512a:	orr.w	ip, fp, r8, lsl #8
   3512e:	mov.w	lr, r8, lsr #24
   35132:	str	r3, [sp, #64]	; 0x40
   35134:	orr.w	lr, lr, sl, lsl #8
   35138:	ldr	r3, [sp, #60]	; 0x3c
   3513a:	adds	r1, r1, r3
   3513c:	ldr	r3, [sp, #64]	; 0x40
   3513e:	adc.w	r9, r9, r3
   35142:	adds.w	r3, r1, ip
   35146:	str	r3, [sp, #144]	; 0x90
   35148:	adc.w	r3, r9, lr
   3514c:	str	r3, [sp, #148]	; 0x94
   3514e:	ldr	r3, [sp, #144]	; 0x90
   35150:	eors	r7, r3
   35152:	ldr	r3, [sp, #148]	; 0x94
   35154:	eors	r6, r3
   35156:	lsrs	r1, r7, #16
   35158:	ldr	r3, [sp, #68]	; 0x44
   3515a:	orr.w	r8, r1, r6, lsl #16
   3515e:	lsrs	r6, r6, #16
   35160:	adds.w	r3, r3, r8
   35164:	orr.w	sl, r6, r7, lsl #16
   35168:	adc.w	r0, r0, sl
   3516c:	eor.w	ip, r3, ip
   35170:	eor.w	lr, r0, lr
   35174:	str	r3, [sp, #100]	; 0x64
   35176:	mov.w	r1, lr, lsl #1
   3517a:	orr.w	fp, r1, ip, lsr #31
   3517e:	mov.w	ip, ip, lsl #1
   35182:	orr.w	r1, ip, lr, lsr #31
   35186:	str	r1, [sp, #208]	; 0xd0
   35188:	ldr	r1, [r4, #64]	; 0x40
   3518a:	str	r1, [sp, #68]	; 0x44
   3518c:	ldr	r1, [r4, #68]	; 0x44
   3518e:	ldr	r6, [sp, #68]	; 0x44
   35190:	str	r1, [sp, #72]	; 0x48
   35192:	ldr	r1, [sp, #76]	; 0x4c
   35194:	ldr	r7, [sp, #72]	; 0x48
   35196:	adds	r1, r1, r6
   35198:	ldr	r6, [sp, #80]	; 0x50
   3519a:	adc.w	r9, r6, r7
   3519e:	ldr	r6, [sp, #84]	; 0x54
   351a0:	adds	r1, r1, r6
   351a2:	b.n	351cc <SHA256Result@@Base+0x3e0>
   351a4:	ldmia	r1!, {r3}
   351a6:	bfcsel	e, 35e76 <SHA256Result@@Base+0x108a>, 10, <und>
   351aa:	ldr	r1, [r1, #32]
   351ac:	add	r7, pc, #236	; (adr r7, 3529c <SHA256Result@@Base+0x4b0>)
   351ae:	strh	r2, [r1, #38]	; 0x26
   351b0:	add	r6, sp, #532	; 0x214
   351b2:	cbnz	r7, 3520e <SHA256Result@@Base+0x422>
   351b4:	strht	pc, [fp, #148]
   351b8:			; <UNDEFINED> instruction: 0xf3723c6e
   351bc:	adds	r6, #241	; 0xf1
   351be:	ldrsh	r5, [r3, r4]
   351c0:	bmi.w	fffafc62 <__bss_end__@@Base+0xfff49972>
   351c4:	vhadd.u<illegal width 64>	d16, d12, d2
   351c8:	lsls	r4, r4, #8
   351ca:	movs	r0, r0
   351cc:	ldr	r6, [sp, #88]	; 0x58
   351ce:	eor.w	r7, r1, r8
   351d2:	adc.w	r9, r9, r6
   351d6:	ldr	r6, [sp, #84]	; 0x54
   351d8:	eor.w	lr, r9, sl
   351dc:	adds.w	r2, r2, lr
   351e0:	eor.w	r8, r2, r6
   351e4:	ldr	r6, [sp, #88]	; 0x58
   351e6:	ldr	r3, [r4, #72]	; 0x48
   351e8:	adc.w	r5, r7, r5
   351ec:	eor.w	ip, r5, r6
   351f0:	mov.w	r6, r8, lsr #24
   351f4:	str	r3, [sp, #76]	; 0x4c
   351f6:	orr.w	r6, r6, ip, lsl #8
   351fa:	ldr	r3, [r4, #76]	; 0x4c
   351fc:	mov.w	ip, ip, lsr #24
   35200:	orr.w	sl, ip, r8, lsl #8
   35204:	str	r3, [sp, #80]	; 0x50
   35206:	ldr	r3, [sp, #76]	; 0x4c
   35208:	adds	r1, r1, r3
   3520a:	ldr	r3, [sp, #80]	; 0x50
   3520c:	adc.w	r9, r9, r3
   35210:	adds	r3, r1, r6
   35212:	str	r3, [sp, #152]	; 0x98
   35214:	adc.w	r3, r9, sl
   35218:	str	r3, [sp, #156]	; 0x9c
   3521a:	ldr	r3, [sp, #152]	; 0x98
   3521c:	eor.w	lr, r3, lr
   35220:	ldr	r3, [sp, #156]	; 0x9c
   35222:	eors	r7, r3
   35224:	mov.w	r1, lr, lsr #16
   35228:	orr.w	r3, r1, r7, lsl #16
   3522c:	lsrs	r7, r7, #16
   3522e:	str	r3, [sp, #212]	; 0xd4
   35230:	orr.w	r3, r7, lr, lsl #16
   35234:	str	r3, [sp, #216]	; 0xd8
   35236:	ldr	r3, [sp, #212]	; 0xd4
   35238:	adds	r3, r2, r3
   3523a:	str	r3, [sp, #160]	; 0xa0
   3523c:	ldr	r3, [sp, #216]	; 0xd8
   3523e:	adc.w	r3, r5, r3
   35242:	str	r3, [sp, #164]	; 0xa4
   35244:	ldr	r3, [sp, #160]	; 0xa0
   35246:	eors	r6, r3
   35248:	ldr	r3, [sp, #164]	; 0xa4
   3524a:	eor.w	sl, r3, sl
   3524e:	mov.w	r2, sl, lsl #1
   35252:	orr.w	r3, r2, r6, lsr #31
   35256:	lsls	r6, r6, #1
   35258:	str	r3, [sp, #224]	; 0xe0
   3525a:	orr.w	r3, r6, sl, lsr #31
   3525e:	str	r3, [sp, #220]	; 0xdc
   35260:	ldr	r3, [r4, #80]	; 0x50
   35262:	str	r3, [sp, #84]	; 0x54
   35264:	ldr	r3, [r4, #84]	; 0x54
   35266:	ldr	r2, [sp, #84]	; 0x54
   35268:	str	r3, [sp, #88]	; 0x58
   3526a:	ldr	r3, [sp, #92]	; 0x5c
   3526c:	ldr	r1, [sp, #88]	; 0x58
   3526e:	adds	r2, r3, r2
   35270:	ldr	r3, [sp, #96]	; 0x60
   35272:	adc.w	r6, r3, r1
   35276:	ldr	r3, [sp, #172]	; 0xac
   35278:	adds	r2, r2, r3
   3527a:	ldr	r3, [sp, #176]	; 0xb0
   3527c:	adc.w	r6, r3, r6
   35280:	ldr	r3, [sp, #168]	; 0xa8
   35282:	eor.w	r5, r6, r3
   35286:	ldr	r3, [sp, #104]	; 0x68
   35288:	eor.w	r1, r2, r3
   3528c:	ldr	r3, [sp, #100]	; 0x64
   3528e:	ldr	r7, [sp, #172]	; 0xac
   35290:	adds.w	sl, r3, r5
   35294:	ldr	r3, [r4, #88]	; 0x58
   35296:	eor.w	r8, sl, r7
   3529a:	ldr	r7, [sp, #176]	; 0xb0
   3529c:	adc.w	r0, r1, r0
   352a0:	str	r3, [sp, #92]	; 0x5c
   352a2:	eor.w	ip, r0, r7
   352a6:	ldr	r3, [r4, #92]	; 0x5c
   352a8:	mov.w	r9, r8, lsr #24
   352ac:	orr.w	r7, r9, ip, lsl #8
   352b0:	mov.w	ip, ip, lsr #24
   352b4:	orr.w	lr, ip, r8, lsl #8
   352b8:	str	r3, [sp, #96]	; 0x60
   352ba:	ldr	r3, [sp, #92]	; 0x5c
   352bc:	adds	r2, r2, r3
   352be:	ldr	r3, [sp, #96]	; 0x60
   352c0:	adc.w	r6, r3, r6
   352c4:	adds	r3, r2, r7
   352c6:	str	r3, [sp, #168]	; 0xa8
   352c8:	adc.w	r3, r6, lr
   352cc:	str	r3, [sp, #172]	; 0xac
   352ce:	ldr	r3, [sp, #168]	; 0xa8
   352d0:	eors	r5, r3
   352d2:	ldr	r3, [sp, #172]	; 0xac
   352d4:	eors	r1, r3
   352d6:	lsrs	r2, r5, #16
   352d8:	orr.w	r3, r2, r1, lsl #16
   352dc:	lsrs	r1, r1, #16
   352de:	str	r3, [sp, #228]	; 0xe4
   352e0:	orr.w	r3, r1, r5, lsl #16
   352e4:	str	r3, [sp, #232]	; 0xe8
   352e6:	ldr	r3, [sp, #228]	; 0xe4
   352e8:	adds.w	r3, sl, r3
   352ec:	str	r3, [sp, #176]	; 0xb0
   352ee:	ldr	r3, [sp, #232]	; 0xe8
   352f0:	adc.w	r3, r0, r3
   352f4:	str	r3, [sp, #180]	; 0xb4
   352f6:	ldr	r3, [sp, #176]	; 0xb0
   352f8:	eors	r7, r3
   352fa:	ldr	r3, [sp, #180]	; 0xb4
   352fc:	eor.w	lr, r3, lr
   35300:	mov.w	r3, lr, lsl #1
   35304:	orr.w	r3, r3, r7, lsr #31
   35308:	lsls	r7, r7, #1
   3530a:	str	r3, [sp, #240]	; 0xf0
   3530c:	orr.w	r3, r7, lr, lsr #31
   35310:	str	r3, [sp, #236]	; 0xec
   35312:	ldr	r3, [r4, #96]	; 0x60
   35314:	str	r3, [sp, #100]	; 0x64
   35316:	ldr	r3, [r4, #100]	; 0x64
   35318:	ldr	r2, [sp, #100]	; 0x64
   3531a:	str	r3, [sp, #104]	; 0x68
   3531c:	ldr	r3, [sp, #116]	; 0x74
   3531e:	ldr	r1, [sp, #104]	; 0x68
   35320:	adds	r3, r3, r2
   35322:	ldr	r2, [sp, #120]	; 0x78
   35324:	adc.w	ip, r2, r1
   35328:	ldr	r2, [sp, #208]	; 0xd0
   3532a:	adds	r3, r3, r2
   3532c:	ldr	r2, [sp, #188]	; 0xbc
   3532e:	adc.w	ip, ip, fp
   35332:	ldr	r0, [sp, #112]	; 0x70
   35334:	eor.w	r7, ip, r2
   35338:	ldr	r2, [sp, #184]	; 0xb8
   3533a:	eor.w	r1, r3, r2
   3533e:	ldr	r2, [sp, #108]	; 0x6c
   35340:	adds	r2, r2, r7
   35342:	adc.w	r5, r0, r1
   35346:	ldr	r0, [sp, #208]	; 0xd0
   35348:	eor.w	lr, r2, r0
   3534c:	eor.w	r0, r5, fp
   35350:	mov.w	r9, lr, lsr #24
   35354:	orr.w	r8, r9, r0, lsl #8
   35358:	lsrs	r0, r0, #24
   3535a:	orr.w	r6, r0, lr, lsl #8
   3535e:	ldr	r0, [r4, #104]	; 0x68
   35360:	str	r0, [sp, #108]	; 0x6c
   35362:	ldr	r0, [r4, #108]	; 0x6c
   35364:	str	r0, [sp, #112]	; 0x70
   35366:	ldr	r0, [sp, #108]	; 0x6c
   35368:	adds	r3, r3, r0
   3536a:	ldr	r0, [sp, #112]	; 0x70
   3536c:	adc.w	ip, ip, r0
   35370:	adds.w	r3, r3, r8
   35374:	str	r3, [sp, #184]	; 0xb8
   35376:	adc.w	r3, ip, r6
   3537a:	str	r3, [sp, #188]	; 0xbc
   3537c:	ldr	r3, [sp, #184]	; 0xb8
   3537e:	eors	r7, r3
   35380:	ldr	r3, [sp, #188]	; 0xbc
   35382:	eors	r1, r3
   35384:	lsrs	r3, r7, #16
   35386:	orr.w	r3, r3, r1, lsl #16
   3538a:	lsrs	r1, r1, #16
   3538c:	str	r3, [sp, #208]	; 0xd0
   3538e:	orr.w	r3, r1, r7, lsl #16
   35392:	str	r3, [sp, #244]	; 0xf4
   35394:	ldr	r3, [sp, #208]	; 0xd0
   35396:	adds	r2, r2, r3
   35398:	ldr	r3, [sp, #244]	; 0xf4
   3539a:	eor.w	r8, r2, r8
   3539e:	adc.w	r5, r3, r5
   353a2:	eors	r6, r5
   353a4:	lsls	r3, r6, #1
   353a6:	orr.w	r3, r3, r8, lsr #31
   353aa:	mov.w	r8, r8, lsl #1
   353ae:	str	r3, [sp, #252]	; 0xfc
   353b0:	orr.w	r3, r8, r6, lsr #31
   353b4:	str	r3, [sp, #248]	; 0xf8
   353b6:	ldr	r3, [r4, #112]	; 0x70
   353b8:	str	r3, [sp, #116]	; 0x74
   353ba:	ldr	r3, [r4, #116]	; 0x74
   353bc:	ldr	r1, [sp, #116]	; 0x74
   353be:	str	r3, [sp, #120]	; 0x78
   353c0:	ldr	r3, [sp, #144]	; 0x90
   353c2:	ldr	r0, [sp, #120]	; 0x78
   353c4:	adds	r1, r3, r1
   353c6:	ldr	r3, [sp, #148]	; 0x94
   353c8:	adc.w	r9, r3, r0
   353cc:	ldr	r3, [sp, #192]	; 0xc0
   353ce:	adds	r1, r1, r3
   353d0:	ldr	r3, [sp, #196]	; 0xc4
   353d2:	adc.w	r9, r9, r3
   353d6:	ldr	r3, [sp, #204]	; 0xcc
   353d8:	eor.w	r7, r9, r3
   353dc:	ldr	r3, [sp, #200]	; 0xc8
   353de:	ldr	r6, [sp, #192]	; 0xc0
   353e0:	eor.w	sl, r1, r3
   353e4:	ldr	r3, [sp, #124]	; 0x7c
   353e6:	ldr	r0, [sp, #128]	; 0x80
   353e8:	adds	r3, r3, r7
   353ea:	eor.w	lr, r3, r6
   353ee:	ldr	r6, [sp, #196]	; 0xc4
   353f0:	adc.w	r0, r0, sl
   353f4:	eors	r6, r0
   353f6:	mov.w	fp, lr, lsr #24
   353fa:	orr.w	ip, fp, r6, lsl #8
   353fe:	lsrs	r6, r6, #24
   35400:	orr.w	r8, r6, lr, lsl #8
   35404:	ldr	r6, [r4, #120]	; 0x78
   35406:	ldr	r4, [r4, #124]	; 0x7c
   35408:	adds	r1, r1, r6
   3540a:	str	r6, [sp, #124]	; 0x7c
   3540c:	str	r4, [sp, #128]	; 0x80
   3540e:	ldr	r4, [sp, #128]	; 0x80
   35410:	adc.w	r9, r9, r4
   35414:	adds.w	r1, r1, ip
   35418:	str	r1, [sp, #144]	; 0x90
   3541a:	adc.w	r1, r9, r8
   3541e:	str	r1, [sp, #148]	; 0x94
   35420:	ldr	r1, [sp, #144]	; 0x90
   35422:	eors	r7, r1
   35424:	ldr	r1, [sp, #148]	; 0x94
   35426:	eor.w	r1, r1, sl
   3542a:	lsrs	r4, r7, #16
   3542c:	orr.w	fp, r4, r1, lsl #16
   35430:	mov.w	sl, r1, lsr #16
   35434:	adds.w	r3, r3, fp
   35438:	orr.w	sl, sl, r7, lsl #16
   3543c:	adc.w	r0, r0, sl
   35440:	eor.w	ip, r3, ip
   35444:	eor.w	r8, r0, r8
   35448:	ldr	r4, [sp, #116]	; 0x74
   3544a:	ldr	r7, [sp, #120]	; 0x78
   3544c:	mov.w	r1, r8, lsl #1
   35450:	str	r3, [sp, #192]	; 0xc0
   35452:	orr.w	r6, r1, ip, lsr #31
   35456:	ldr	r1, [sp, #152]	; 0x98
   35458:	mov.w	ip, ip, lsl #1
   3545c:	adds	r1, r1, r4
   3545e:	ldr	r4, [sp, #156]	; 0x9c
   35460:	orr.w	lr, ip, r8, lsr #31
   35464:	adc.w	r9, r4, r7
   35468:	adds.w	r1, r1, lr
   3546c:	ldr	r4, [sp, #232]	; 0xe8
   3546e:	adc.w	r9, r9, r6
   35472:	eor.w	r7, r9, r4
   35476:	ldr	r4, [sp, #228]	; 0xe4
   35478:	adds	r2, r2, r7
   3547a:	eor.w	r4, r1, r4
   3547e:	eor.w	ip, r2, lr
   35482:	adc.w	r5, r4, r5
   35486:	eors	r6, r5
   35488:	mov.w	r3, ip, lsr #24
   3548c:	orr.w	lr, r3, r6, lsl #8
   35490:	ldr	r3, [sp, #84]	; 0x54
   35492:	lsrs	r6, r6, #24
   35494:	adds	r1, r3, r1
   35496:	ldr	r3, [sp, #88]	; 0x58
   35498:	orr.w	r8, r6, ip, lsl #8
   3549c:	adc.w	r9, r3, r9
   354a0:	adds.w	r3, r1, lr
   354a4:	str	r3, [sp, #152]	; 0x98
   354a6:	adc.w	r3, r9, r8
   354aa:	str	r3, [sp, #156]	; 0x9c
   354ac:	ldr	r3, [sp, #152]	; 0x98
   354ae:	eors	r7, r3
   354b0:	ldr	r3, [sp, #156]	; 0x9c
   354b2:	eors	r4, r3
   354b4:	lsrs	r1, r7, #16
   354b6:	orr.w	r3, r1, r4, lsl #16
   354ba:	lsrs	r4, r4, #16
   354bc:	str	r3, [sp, #228]	; 0xe4
   354be:	orr.w	r3, r4, r7, lsl #16
   354c2:	str	r3, [sp, #232]	; 0xe8
   354c4:	ldr	r3, [sp, #228]	; 0xe4
   354c6:	adds	r3, r2, r3
   354c8:	str	r3, [sp, #196]	; 0xc4
   354ca:	ldr	r3, [sp, #232]	; 0xe8
   354cc:	adc.w	r3, r5, r3
   354d0:	str	r3, [sp, #200]	; 0xc8
   354d2:	ldr	r3, [sp, #196]	; 0xc4
   354d4:	ldr	r1, [sp, #172]	; 0xac
   354d6:	eor.w	lr, r3, lr
   354da:	ldr	r3, [sp, #200]	; 0xc8
   354dc:	ldr	r4, [sp, #220]	; 0xdc
   354de:	eor.w	r8, r3, r8
   354e2:	mov.w	r2, r8, lsl #1
   354e6:	orr.w	r3, r2, lr, lsr #31
   354ea:	mov.w	lr, lr, lsl #1
   354ee:	ldr	r2, [sp, #168]	; 0xa8
   354f0:	str	r3, [sp, #260]	; 0x104
   354f2:	orr.w	r3, lr, r8, lsr #31
   354f6:	str	r3, [sp, #256]	; 0x100
   354f8:	ldr	r3, [sp, #36]	; 0x24
   354fa:	adds	r2, r3, r2
   354fc:	ldr	r3, [sp, #40]	; 0x28
   354fe:	adc.w	r7, r3, r1
   35502:	ldr	r3, [sp, #220]	; 0xdc
   35504:	adds	r2, r2, r3
   35506:	ldr	r3, [sp, #224]	; 0xe0
   35508:	adc.w	r7, r3, r7
   3550c:	ldr	r3, [sp, #244]	; 0xf4
   3550e:	eor.w	r5, r7, r3
   35512:	ldr	r3, [sp, #208]	; 0xd0
   35514:	eor.w	r1, r2, r3
   35518:	ldr	r3, [sp, #192]	; 0xc0
   3551a:	adds	r3, r3, r5
   3551c:	eor.w	r6, r3, r4
   35520:	ldr	r4, [sp, #224]	; 0xe0
   35522:	adc.w	r0, r1, r0
   35526:	eors	r4, r0
   35528:	mov.w	r8, r6, lsr #24
   3552c:	orr.w	ip, r8, r4, lsl #8
   35530:	lsrs	r4, r4, #24
   35532:	orr.w	lr, r4, r6, lsl #8
   35536:	ldr	r4, [sp, #68]	; 0x44
   35538:	adds	r2, r4, r2
   3553a:	ldr	r4, [sp, #72]	; 0x48
   3553c:	adc.w	r7, r4, r7
   35540:	adds.w	r2, r2, ip
   35544:	str	r2, [sp, #168]	; 0xa8
   35546:	adc.w	r2, r7, lr
   3554a:	str	r2, [sp, #172]	; 0xac
   3554c:	ldr	r2, [sp, #168]	; 0xa8
   3554e:	eors	r5, r2
   35550:	ldr	r2, [sp, #172]	; 0xac
   35552:	eors	r1, r2
   35554:	lsrs	r2, r5, #16
   35556:	orr.w	r2, r2, r1, lsl #16
   3555a:	lsrs	r1, r1, #16
   3555c:	str	r2, [sp, #208]	; 0xd0
   3555e:	orr.w	r2, r1, r5, lsl #16
   35562:	str	r2, [sp, #220]	; 0xdc
   35564:	ldr	r2, [sp, #208]	; 0xd0
   35566:	adds	r3, r3, r2
   35568:	str	r3, [sp, #192]	; 0xc0
   3556a:	ldr	r3, [sp, #220]	; 0xdc
   3556c:	adc.w	r3, r0, r3
   35570:	str	r3, [sp, #204]	; 0xcc
   35572:	ldr	r2, [sp, #204]	; 0xcc
   35574:	ldr	r3, [sp, #192]	; 0xc0
   35576:	eor.w	lr, r2, lr
   3557a:	eor.w	r3, r3, ip
   3557e:	mov.w	r2, lr, lsl #1
   35582:	orr.w	r2, r2, r3, lsr #31
   35586:	mov.w	ip, r3, lsl #1
   3558a:	str	r2, [sp, #224]	; 0xe0
   3558c:	orr.w	ip, ip, lr, lsr #31
   35590:	ldr	r3, [sp, #76]	; 0x4c
   35592:	ldr	r2, [sp, #184]	; 0xb8
   35594:	adds	r3, r3, r2
   35596:	ldr	r2, [sp, #80]	; 0x50
   35598:	ldr	r1, [sp, #188]	; 0xbc
   3559a:	adc.w	r8, r2, r1
   3559e:	ldr	r2, [sp, #236]	; 0xec
   355a0:	ldr	r1, [sp, #164]	; 0xa4
   355a2:	adds	r3, r3, r2
   355a4:	ldr	r2, [sp, #240]	; 0xf0
   355a6:	eor.w	r0, r3, fp
   355aa:	adc.w	r8, r8, r2
   355ae:	ldr	r2, [sp, #160]	; 0xa0
   355b0:	eor.w	r6, r8, sl
   355b4:	adds	r2, r2, r6
   355b6:	adc.w	r5, r1, r0
   355ba:	ldr	r1, [sp, #236]	; 0xec
   355bc:	eor.w	r7, r2, r1
   355c0:	ldr	r1, [sp, #240]	; 0xf0
   355c2:	eor.w	r4, r5, r1
   355c6:	mov.w	r9, r7, lsr #24
   355ca:	orr.w	r1, r9, r4, lsl #8
   355ce:	lsrs	r4, r4, #24
   355d0:	orr.w	lr, r4, r7, lsl #8
   355d4:	ldr	r4, [sp, #124]	; 0x7c
   355d6:	adds	r3, r4, r3
   355d8:	ldr	r4, [sp, #128]	; 0x80
   355da:	adc.w	r8, r4, r8
   355de:	adds	r3, r3, r1
   355e0:	str	r3, [sp, #160]	; 0xa0
   355e2:	adc.w	r3, r8, lr
   355e6:	str	r3, [sp, #164]	; 0xa4
   355e8:	ldr	r3, [sp, #160]	; 0xa0
   355ea:	ldr	r4, [sp, #248]	; 0xf8
   355ec:	eors	r6, r3
   355ee:	ldr	r3, [sp, #164]	; 0xa4
   355f0:	eors	r0, r3
   355f2:	lsrs	r3, r6, #16
   355f4:	orr.w	r3, r3, r0, lsl #16
   355f8:	lsrs	r0, r0, #16
   355fa:	str	r3, [sp, #236]	; 0xec
   355fc:	orr.w	r3, r0, r6, lsl #16
   35600:	str	r3, [sp, #240]	; 0xf0
   35602:	ldr	r3, [sp, #236]	; 0xec
   35604:	ldr	r0, [sp, #148]	; 0x94
   35606:	adds	r2, r2, r3
   35608:	ldr	r3, [sp, #240]	; 0xf0
   3560a:	eor.w	r1, r1, r2
   3560e:	adc.w	r5, r3, r5
   35612:	eor.w	lr, r5, lr
   35616:	mov.w	r3, lr, lsl #1
   3561a:	orr.w	r3, r3, r1, lsr #31
   3561e:	lsls	r1, r1, #1
   35620:	str	r3, [sp, #188]	; 0xbc
   35622:	orr.w	r3, r1, lr, lsr #31
   35626:	ldr	r1, [sp, #144]	; 0x90
   35628:	str	r3, [sp, #184]	; 0xb8
   3562a:	ldr	r3, [sp, #108]	; 0x6c
   3562c:	adds	r1, r3, r1
   3562e:	ldr	r3, [sp, #112]	; 0x70
   35630:	adc.w	sl, r3, r0
   35634:	ldr	r3, [sp, #248]	; 0xf8
   35636:	ldr	r0, [sp, #180]	; 0xb4
   35638:	adds	r1, r1, r3
   3563a:	ldr	r3, [sp, #252]	; 0xfc
   3563c:	adc.w	sl, sl, r3
   35640:	ldr	r3, [sp, #216]	; 0xd8
   35642:	eor.w	lr, sl, r3
   35646:	ldr	r3, [sp, #212]	; 0xd4
   35648:	eor.w	r6, r1, r3
   3564c:	ldr	r3, [sp, #176]	; 0xb0
   3564e:	adds.w	r3, r3, lr
   35652:	eor.w	r8, r3, r4
   35656:	ldr	r4, [sp, #252]	; 0xfc
   35658:	adcs	r0, r6
   3565a:	eor.w	r7, r0, r4
   3565e:	mov.w	fp, r8, lsr #24
   35662:	orr.w	r4, fp, r7, lsl #8
   35666:	lsrs	r7, r7, #24
   35668:	orr.w	r9, r7, r8, lsl #8
   3566c:	ldr	r7, [sp, #52]	; 0x34
   3566e:	adds	r1, r7, r1
   35670:	ldr	r7, [sp, #56]	; 0x38
   35672:	adc.w	sl, r7, sl
   35676:	adds	r1, r1, r4
   35678:	str	r1, [sp, #144]	; 0x90
   3567a:	adc.w	r1, sl, r9
   3567e:	str	r1, [sp, #148]	; 0x94
   35680:	ldr	r1, [sp, #144]	; 0x90
   35682:	eor.w	lr, r1, lr
   35686:	ldr	r1, [sp, #148]	; 0x94
   35688:	eors	r6, r1
   3568a:	mov.w	r1, lr, lsr #16
   3568e:	orr.w	r8, r1, r6, lsl #16
   35692:	lsrs	r6, r6, #16
   35694:	adds.w	r3, r3, r8
   35698:	orr.w	sl, r6, lr, lsl #16
   3569c:	adc.w	r0, r0, sl
   356a0:	eors	r4, r3
   356a2:	eor.w	r9, r0, r9
   356a6:	ldr	r6, [sp, #156]	; 0x9c
   356a8:	mov.w	r1, r9, lsl #1
   356ac:	orr.w	r1, r1, r4, lsr #31
   356b0:	lsls	r4, r4, #1
   356b2:	orr.w	fp, r4, r9, lsr #31
   356b6:	str	r1, [sp, #212]	; 0xd4
   356b8:	ldr	r4, [sp, #152]	; 0x98
   356ba:	ldr	r1, [sp, #12]
   356bc:	adds	r1, r1, r4
   356be:	ldr	r4, [sp, #16]
   356c0:	adc.w	r9, r4, r6
   356c4:	ldr	r4, [sp, #224]	; 0xe0
   356c6:	adds.w	r1, r1, ip
   356ca:	adc.w	r9, r9, r4
   356ce:	eor.w	r7, r1, r8
   356d2:	eor.w	lr, r9, sl
   356d6:	adds.w	r2, r2, lr
   356da:	adc.w	r5, r7, r5
   356de:	eor.w	ip, r2, ip
   356e2:	eor.w	r6, r5, r4
   356e6:	mov.w	sl, ip, lsr #24
   356ea:	orr.w	r4, sl, r6, lsl #8
   356ee:	lsrs	r6, r6, #24
   356f0:	orr.w	r8, r6, ip, lsl #8
   356f4:	ldr	r6, [sp, #100]	; 0x64
   356f6:	adds	r1, r6, r1
   356f8:	ldr	r6, [sp, #104]	; 0x68
   356fa:	adc.w	r9, r6, r9
   356fe:	adds	r1, r1, r4
   35700:	str	r1, [sp, #152]	; 0x98
   35702:	adc.w	r1, r9, r8
   35706:	str	r1, [sp, #156]	; 0x9c
   35708:	ldr	r1, [sp, #152]	; 0x98
   3570a:	eor.w	lr, r1, lr
   3570e:	ldr	r1, [sp, #156]	; 0x9c
   35710:	eors	r7, r1
   35712:	mov.w	r1, lr, lsr #16
   35716:	orr.w	r1, r1, r7, lsl #16
   3571a:	lsrs	r7, r7, #16
   3571c:	str	r1, [sp, #216]	; 0xd8
   3571e:	orr.w	r1, r7, lr, lsl #16
   35722:	str	r1, [sp, #224]	; 0xe0
   35724:	ldr	r1, [sp, #216]	; 0xd8
   35726:	adds	r2, r2, r1
   35728:	str	r2, [sp, #176]	; 0xb0
   3572a:	ldr	r2, [sp, #224]	; 0xe0
   3572c:	ldr	r1, [sp, #168]	; 0xa8
   3572e:	adc.w	r2, r5, r2
   35732:	str	r2, [sp, #180]	; 0xb4
   35734:	ldr	r2, [sp, #176]	; 0xb0
   35736:	eors	r4, r2
   35738:	ldr	r2, [sp, #180]	; 0xb4
   3573a:	eor.w	r8, r2, r8
   3573e:	mov.w	r2, r8, lsl #1
   35742:	orr.w	r2, r2, r4, lsr #31
   35746:	lsls	r4, r4, #1
   35748:	str	r2, [sp, #248]	; 0xf8
   3574a:	orr.w	r2, r4, r8, lsr #31
   3574e:	str	r2, [sp, #244]	; 0xf4
   35750:	ldr	r2, [sp, #4]
   35752:	ldr	r4, [sp, #172]	; 0xac
   35754:	adds	r2, r2, r1
   35756:	ldr	r1, [sp, #8]
   35758:	adc.w	r7, r1, r4
   3575c:	ldr	r1, [sp, #184]	; 0xb8
   3575e:	adds	r2, r2, r1
   35760:	ldr	r1, [sp, #188]	; 0xbc
   35762:	adc.w	r7, r1, r7
   35766:	ldr	r1, [sp, #232]	; 0xe8
   35768:	eor.w	r4, r7, r1
   3576c:	ldr	r1, [sp, #228]	; 0xe4
   3576e:	adds	r3, r3, r4
   35770:	eor.w	r9, r2, r1
   35774:	ldr	r1, [sp, #184]	; 0xb8
   35776:	adc.w	r0, r0, r9
   3577a:	eor.w	ip, r3, r1
   3577e:	ldr	r1, [sp, #188]	; 0xbc
   35780:	eor.w	r5, r0, r1
   35784:	mov.w	lr, ip, lsr #24
   35788:	orr.w	r1, lr, r5, lsl #8
   3578c:	lsrs	r5, r5, #24
   3578e:	orr.w	r6, r5, ip, lsl #8
   35792:	ldr	r5, [sp, #20]
   35794:	adds	r2, r5, r2
   35796:	ldr	r5, [sp, #24]
   35798:	adc.w	r7, r5, r7
   3579c:	adds	r2, r2, r1
   3579e:	str	r2, [sp, #168]	; 0xa8
   357a0:	adc.w	r2, r7, r6
   357a4:	str	r2, [sp, #172]	; 0xac
   357a6:	ldr	r2, [sp, #168]	; 0xa8
   357a8:	eors	r4, r2
   357aa:	ldr	r2, [sp, #172]	; 0xac
   357ac:	eor.w	r2, r2, r9
   357b0:	lsrs	r5, r4, #16
   357b2:	orr.w	r5, r5, r2, lsl #16
   357b6:	mov.w	r9, r2, lsr #16
   357ba:	orr.w	r9, r9, r4, lsl #16
   357be:	adds	r3, r3, r5
   357c0:	str	r3, [sp, #184]	; 0xb8
   357c2:	adc.w	r3, r0, r9
   357c6:	str	r3, [sp, #188]	; 0xbc
   357c8:	ldr	r3, [sp, #184]	; 0xb8
   357ca:	ldr	r2, [sp, #160]	; 0xa0
   357cc:	eors	r1, r3
   357ce:	ldr	r3, [sp, #188]	; 0xbc
   357d0:	ldr	r0, [sp, #200]	; 0xc8
   357d2:	eors	r6, r3
   357d4:	str	r5, [sp, #228]	; 0xe4
   357d6:	lsls	r3, r6, #1
   357d8:	orr.w	r3, r3, r1, lsr #31
   357dc:	lsls	r1, r1, #1
   357de:	str	r3, [sp, #252]	; 0xfc
   357e0:	orr.w	r3, r1, r6, lsr #31
   357e4:	str	r3, [sp, #232]	; 0xe8
   357e6:	ldr	r3, [sp, #92]	; 0x5c
   357e8:	ldr	r1, [sp, #164]	; 0xa4
   357ea:	adds	r3, r3, r2
   357ec:	ldr	r2, [sp, #96]	; 0x60
   357ee:	adc.w	ip, r2, r1
   357f2:	ldr	r2, [sp, #212]	; 0xd4
   357f4:	adds.w	r3, r3, fp
   357f8:	adc.w	ip, ip, r2
   357fc:	ldr	r2, [sp, #220]	; 0xdc
   357fe:	eor.w	r7, ip, r2
   35802:	ldr	r2, [sp, #208]	; 0xd0
   35804:	eor.w	r1, r3, r2
   35808:	ldr	r2, [sp, #196]	; 0xc4
   3580a:	adds	r2, r2, r7
   3580c:	adc.w	r5, r0, r1
   35810:	ldr	r0, [sp, #212]	; 0xd4
   35812:	eor.w	fp, r2, fp
   35816:	eors	r0, r5
   35818:	mov.w	r4, fp, lsr #24
   3581c:	orr.w	r8, r4, r0, lsl #8
   35820:	lsrs	r0, r0, #24
   35822:	orr.w	r6, r0, fp, lsl #8
   35826:	ldr	r0, [sp, #60]	; 0x3c
   35828:	adds	r3, r0, r3
   3582a:	ldr	r0, [sp, #64]	; 0x40
   3582c:	adc.w	ip, r0, ip
   35830:	adds.w	r3, r3, r8
   35834:	str	r3, [sp, #160]	; 0xa0
   35836:	adc.w	r3, ip, r6
   3583a:	str	r3, [sp, #164]	; 0xa4
   3583c:	ldr	r3, [sp, #160]	; 0xa0
   3583e:	ldr	r0, [sp, #148]	; 0x94
   35840:	eors	r7, r3
   35842:	ldr	r3, [sp, #164]	; 0xa4
   35844:	ldr	r4, [sp, #256]	; 0x100
   35846:	eors	r1, r3
   35848:	lsrs	r3, r7, #16
   3584a:	orr.w	r3, r3, r1, lsl #16
   3584e:	lsrs	r1, r1, #16
   35850:	str	r3, [sp, #200]	; 0xc8
   35852:	orr.w	r3, r1, r7, lsl #16
   35856:	str	r3, [sp, #208]	; 0xd0
   35858:	ldr	r3, [sp, #200]	; 0xc8
   3585a:	ldr	r1, [sp, #144]	; 0x90
   3585c:	adds	r2, r2, r3
   3585e:	ldr	r3, [sp, #208]	; 0xd0
   35860:	eor.w	r8, r2, r8
   35864:	adc.w	r5, r3, r5
   35868:	eors	r6, r5
   3586a:	lsls	r3, r6, #1
   3586c:	orr.w	r3, r3, r8, lsr #31
   35870:	mov.w	r8, r8, lsl #1
   35874:	str	r3, [sp, #220]	; 0xdc
   35876:	orr.w	r3, r8, r6, lsr #31
   3587a:	str	r3, [sp, #212]	; 0xd4
   3587c:	ldr	r3, [sp, #44]	; 0x2c
   3587e:	adds	r1, r3, r1
   35880:	ldr	r3, [sp, #48]	; 0x30
   35882:	adc.w	sl, r3, r0
   35886:	ldr	r3, [sp, #256]	; 0x100
   35888:	ldr	r0, [sp, #204]	; 0xcc
   3588a:	adds	r1, r1, r3
   3588c:	ldr	r3, [sp, #260]	; 0x104
   3588e:	adc.w	sl, sl, r3
   35892:	ldr	r3, [sp, #240]	; 0xf0
   35894:	eor.w	ip, sl, r3
   35898:	ldr	r3, [sp, #236]	; 0xec
   3589a:	eor.w	r6, r1, r3
   3589e:	ldr	r3, [sp, #192]	; 0xc0
   358a0:	adds.w	r3, r3, ip
   358a4:	eor.w	lr, r3, r4
   358a8:	ldr	r4, [sp, #260]	; 0x104
   358aa:	adcs	r0, r6
   358ac:	eor.w	r7, r0, r4
   358b0:	mov.w	fp, lr, lsr #24
   358b4:	orr.w	r4, fp, r7, lsl #8
   358b8:	lsrs	r7, r7, #24
   358ba:	orr.w	r8, r7, lr, lsl #8
   358be:	ldr	r7, [sp, #28]
   358c0:	adds	r1, r7, r1
   358c2:	ldr	r7, [sp, #32]
   358c4:	adc.w	sl, r7, sl
   358c8:	adds	r1, r1, r4
   358ca:	str	r1, [sp, #144]	; 0x90
   358cc:	adc.w	r1, sl, r8
   358d0:	str	r1, [sp, #148]	; 0x94
   358d2:	ldr	r1, [sp, #144]	; 0x90
   358d4:	ldr	r7, [sp, #156]	; 0x9c
   358d6:	eor.w	ip, r1, ip
   358da:	ldr	r1, [sp, #148]	; 0x94
   358dc:	eors	r6, r1
   358de:	mov.w	r1, ip, lsr #16
   358e2:	orr.w	r1, r1, r6, lsl #16
   358e6:	lsrs	r6, r6, #16
   358e8:	orr.w	fp, r6, ip, lsl #16
   358ec:	adds	r3, r3, r1
   358ee:	adc.w	r0, r0, fp
   358f2:	eors	r4, r3
   358f4:	eor.w	r8, r0, r8
   358f8:	str	r1, [sp, #236]	; 0xec
   358fa:	mov.w	r1, r8, lsl #1
   358fe:	orr.w	r6, r1, r4, lsr #31
   35902:	lsls	r4, r4, #1
   35904:	orr.w	ip, r4, r8, lsr #31
   35908:	ldr	r1, [sp, #92]	; 0x5c
   3590a:	ldr	r4, [sp, #152]	; 0x98
   3590c:	adds	r1, r1, r4
   3590e:	ldr	r4, [sp, #96]	; 0x60
   35910:	adc.w	sl, r4, r7
   35914:	adds.w	r1, r1, ip
   35918:	adc.w	sl, sl, r6
   3591c:	ldr	r4, [sp, #228]	; 0xe4
   3591e:	eor.w	lr, sl, r9
   35922:	adds.w	r2, r2, lr
   35926:	eor.w	r7, r1, r4
   3592a:	adc.w	r5, r7, r5
   3592e:	eor.w	r4, r2, ip
   35932:	eor.w	ip, r5, r6
   35936:	mov.w	r9, r4, lsr #24
   3593a:	orr.w	r6, r9, ip, lsl #8
   3593e:	mov.w	ip, ip, lsr #24
   35942:	orr.w	r8, ip, r4, lsl #8
   35946:	ldr	r4, [sp, #68]	; 0x44
   35948:	adds	r1, r4, r1
   3594a:	ldr	r4, [sp, #72]	; 0x48
   3594c:	adc.w	sl, r4, sl
   35950:	adds	r1, r1, r6
   35952:	str	r1, [sp, #152]	; 0x98
   35954:	adc.w	r1, sl, r8
   35958:	str	r1, [sp, #156]	; 0x9c
   3595a:	ldr	r1, [sp, #152]	; 0x98
   3595c:	ldr	r4, [sp, #172]	; 0xac
   3595e:	eor.w	lr, r1, lr
   35962:	ldr	r1, [sp, #156]	; 0x9c
   35964:	eors	r7, r1
   35966:	mov.w	r1, lr, lsr #16
   3596a:	orr.w	r1, r1, r7, lsl #16
   3596e:	lsrs	r7, r7, #16
   35970:	str	r1, [sp, #228]	; 0xe4
   35972:	orr.w	r1, r7, lr, lsl #16
   35976:	str	r1, [sp, #240]	; 0xf0
   35978:	ldr	r1, [sp, #228]	; 0xe4
   3597a:	adds	r2, r2, r1
   3597c:	str	r2, [sp, #192]	; 0xc0
   3597e:	ldr	r2, [sp, #240]	; 0xf0
   35980:	ldr	r1, [sp, #168]	; 0xa8
   35982:	adc.w	r2, r5, r2
   35986:	str	r2, [sp, #196]	; 0xc4
   35988:	ldr	r2, [sp, #192]	; 0xc0
   3598a:	ldr	r5, [sp, #248]	; 0xf8
   3598c:	eors	r6, r2
   3598e:	ldr	r2, [sp, #196]	; 0xc4
   35990:	eor.w	r8, r2, r8
   35994:	mov.w	r2, r8, lsl #1
   35998:	orr.w	r2, r2, r6, lsr #31
   3599c:	lsls	r6, r6, #1
   3599e:	str	r2, [sp, #260]	; 0x104
   359a0:	orr.w	r2, r6, r8, lsr #31
   359a4:	str	r2, [sp, #256]	; 0x100
   359a6:	ldr	r2, [sp, #100]	; 0x64
   359a8:	adds	r2, r2, r1
   359aa:	ldr	r1, [sp, #104]	; 0x68
   359ac:	adc.w	r7, r1, r4
   359b0:	ldr	r1, [sp, #244]	; 0xf4
   359b2:	ldr	r4, [sp, #244]	; 0xf4
   359b4:	adds	r2, r2, r1
   359b6:	ldr	r1, [sp, #248]	; 0xf8
   359b8:	adc.w	r7, r1, r7
   359bc:	ldr	r1, [sp, #208]	; 0xd0
   359be:	eor.w	r6, r7, r1
   359c2:	ldr	r1, [sp, #200]	; 0xc8
   359c4:	adds	r3, r3, r6
   359c6:	eor.w	r1, r2, r1
   359ca:	eor.w	r4, r3, r4
   359ce:	adc.w	r0, r1, r0
   359d2:	eors	r5, r0
   359d4:	mov.w	r8, r4, lsr #24
   359d8:	orr.w	ip, r8, r5, lsl #8
   359dc:	lsrs	r5, r5, #24
   359de:	orr.w	lr, r5, r4, lsl #8
   359e2:	ldr	r4, [sp, #4]
   359e4:	adds	r2, r4, r2
   359e6:	ldr	r4, [sp, #8]
   359e8:	adc.w	r7, r4, r7
   359ec:	adds.w	r2, r2, ip
   359f0:	str	r2, [sp, #168]	; 0xa8
   359f2:	adc.w	r2, r7, lr
   359f6:	str	r2, [sp, #172]	; 0xac
   359f8:	ldr	r2, [sp, #168]	; 0xa8
   359fa:	eors	r6, r2
   359fc:	ldr	r2, [sp, #172]	; 0xac
   359fe:	eors	r1, r2
   35a00:	lsrs	r2, r6, #16
   35a02:	orr.w	r2, r2, r1, lsl #16
   35a06:	lsrs	r1, r1, #16
   35a08:	str	r2, [sp, #208]	; 0xd0
   35a0a:	orr.w	r2, r1, r6, lsl #16
   35a0e:	str	r2, [sp, #244]	; 0xf4
   35a10:	ldr	r2, [sp, #208]	; 0xd0
   35a12:	ldr	r1, [sp, #164]	; 0xa4
   35a14:	adds	r3, r3, r2
   35a16:	str	r3, [sp, #200]	; 0xc8
   35a18:	ldr	r3, [sp, #244]	; 0xf4
   35a1a:	adc.w	r3, r0, r3
   35a1e:	str	r3, [sp, #204]	; 0xcc
   35a20:	ldr	r2, [sp, #204]	; 0xcc
   35a22:	ldr	r3, [sp, #200]	; 0xc8
   35a24:	eor.w	lr, r2, lr
   35a28:	eor.w	r3, r3, ip
   35a2c:	mov.w	r2, lr, lsl #1
   35a30:	orr.w	r2, r2, r3, lsr #31
   35a34:	mov.w	ip, r3, lsl #1
   35a38:	str	r2, [sp, #248]	; 0xf8
   35a3a:	orr.w	ip, ip, lr, lsr #31
   35a3e:	ldr	r2, [sp, #160]	; 0xa0
   35a40:	ldr	r3, [sp, #44]	; 0x2c
   35a42:	adds	r3, r3, r2
   35a44:	ldr	r2, [sp, #48]	; 0x30
   35a46:	adc.w	lr, r2, r1
   35a4a:	ldr	r2, [sp, #232]	; 0xe8
   35a4c:	ldr	r1, [sp, #180]	; 0xb4
   35a4e:	adds	r3, r3, r2
   35a50:	ldr	r2, [sp, #252]	; 0xfc
   35a52:	adc.w	lr, lr, r2
   35a56:	ldr	r2, [sp, #236]	; 0xec
   35a58:	eor.w	r6, lr, fp
   35a5c:	eor.w	r0, r3, r2
   35a60:	ldr	r2, [sp, #176]	; 0xb0
   35a62:	adds	r2, r2, r6
   35a64:	adc.w	r5, r1, r0
   35a68:	ldr	r1, [sp, #232]	; 0xe8
   35a6a:	eor.w	r8, r2, r1
   35a6e:	ldr	r1, [sp, #252]	; 0xfc
   35a70:	eor.w	r4, r5, r1
   35a74:	mov.w	r9, r8, lsr #24
   35a78:	orr.w	r1, r9, r4, lsl #8
   35a7c:	lsrs	r4, r4, #24
   35a7e:	orr.w	r7, r4, r8, lsl #8
   35a82:	ldr	r4, [sp, #20]
   35a84:	adds	r3, r4, r3
   35a86:	ldr	r4, [sp, #24]
   35a88:	adc.w	lr, r4, lr
   35a8c:	adds	r3, r3, r1
   35a8e:	str	r3, [sp, #160]	; 0xa0
   35a90:	adc.w	r3, lr, r7
   35a94:	str	r3, [sp, #164]	; 0xa4
   35a96:	ldr	r3, [sp, #160]	; 0xa0
   35a98:	eors	r6, r3
   35a9a:	ldr	r3, [sp, #164]	; 0xa4
   35a9c:	eors	r0, r3
   35a9e:	lsrs	r3, r6, #16
   35aa0:	orr.w	r3, r3, r0, lsl #16
   35aa4:	lsrs	r0, r0, #16
   35aa6:	str	r3, [sp, #232]	; 0xe8
   35aa8:	orr.w	r3, r0, r6, lsl #16
   35aac:	str	r3, [sp, #236]	; 0xec
   35aae:	ldr	r3, [sp, #232]	; 0xe8
   35ab0:	adds	r2, r2, r3
   35ab2:	ldr	r3, [sp, #236]	; 0xec
   35ab4:	eor.w	r1, r1, r2
   35ab8:	adc.w	r5, r3, r5
   35abc:	eors	r7, r5
   35abe:	lsls	r3, r7, #1
   35ac0:	orr.w	r3, r3, r1, lsr #31
   35ac4:	lsls	r1, r1, #1
   35ac6:	str	r3, [sp, #264]	; 0x108
   35ac8:	orr.w	r3, r1, r7, lsr #31
   35acc:	str	r3, [sp, #252]	; 0xfc
   35ace:	ldr	r3, [sp, #124]	; 0x7c
   35ad0:	ldr	r1, [sp, #144]	; 0x90
   35ad2:	ldr	r0, [sp, #148]	; 0x94
   35ad4:	adds	r1, r3, r1
   35ad6:	ldr	r3, [sp, #128]	; 0x80
   35ad8:	ldr	r4, [sp, #212]	; 0xd4
   35ada:	adc.w	sl, r3, r0
   35ade:	ldr	r3, [sp, #212]	; 0xd4
   35ae0:	ldr	r0, [sp, #188]	; 0xbc
   35ae2:	adds	r1, r1, r3
   35ae4:	ldr	r3, [sp, #220]	; 0xdc
   35ae6:	adc.w	sl, sl, r3
   35aea:	ldr	r3, [sp, #224]	; 0xe0
   35aec:	eor.w	lr, sl, r3
   35af0:	ldr	r3, [sp, #216]	; 0xd8
   35af2:	eor.w	r6, r1, r3
   35af6:	ldr	r3, [sp, #184]	; 0xb8
   35af8:	adds.w	r3, r3, lr
   35afc:	eor.w	r8, r3, r4
   35b00:	ldr	r4, [sp, #220]	; 0xdc
   35b02:	adcs	r0, r6
   35b04:	eor.w	r7, r0, r4
   35b08:	mov.w	fp, r8, lsr #24
   35b0c:	orr.w	r4, fp, r7, lsl #8
   35b10:	lsrs	r7, r7, #24
   35b12:	orr.w	r9, r7, r8, lsl #8
   35b16:	ldr	r7, [sp, #108]	; 0x6c
   35b18:	adds	r1, r7, r1
   35b1a:	ldr	r7, [sp, #112]	; 0x70
   35b1c:	adc.w	sl, r7, sl
   35b20:	adds	r1, r1, r4
   35b22:	str	r1, [sp, #144]	; 0x90
   35b24:	adc.w	r1, sl, r9
   35b28:	str	r1, [sp, #148]	; 0x94
   35b2a:	ldr	r1, [sp, #144]	; 0x90
   35b2c:	eor.w	lr, r1, lr
   35b30:	ldr	r1, [sp, #148]	; 0x94
   35b32:	eors	r6, r1
   35b34:	mov.w	r1, lr, lsr #16
   35b38:	orr.w	r8, r1, r6, lsl #16
   35b3c:	lsrs	r6, r6, #16
   35b3e:	adds.w	r3, r3, r8
   35b42:	orr.w	sl, r6, lr, lsl #16
   35b46:	adc.w	r0, r0, sl
   35b4a:	eors	r4, r3
   35b4c:	eor.w	r9, r0, r9
   35b50:	ldr	r6, [sp, #156]	; 0x9c
   35b52:	mov.w	r1, r9, lsl #1
   35b56:	orr.w	r1, r1, r4, lsr #31
   35b5a:	lsls	r4, r4, #1
   35b5c:	orr.w	fp, r4, r9, lsr #31
   35b60:	str	r1, [sp, #212]	; 0xd4
   35b62:	ldr	r4, [sp, #152]	; 0x98
   35b64:	ldr	r1, [sp, #84]	; 0x54
   35b66:	adds	r1, r1, r4
   35b68:	ldr	r4, [sp, #88]	; 0x58
   35b6a:	adc.w	r9, r4, r6
   35b6e:	ldr	r4, [sp, #248]	; 0xf8
   35b70:	adds.w	r1, r1, ip
   35b74:	adc.w	r9, r9, r4
   35b78:	eor.w	r7, r1, r8
   35b7c:	eor.w	lr, r9, sl
   35b80:	adds.w	r2, r2, lr
   35b84:	adc.w	r5, r7, r5
   35b88:	eor.w	ip, r2, ip
   35b8c:	eor.w	r6, r5, r4
   35b90:	mov.w	sl, ip, lsr #24
   35b94:	orr.w	r4, sl, r6, lsl #8
   35b98:	lsrs	r6, r6, #24
   35b9a:	orr.w	r8, r6, ip, lsl #8
   35b9e:	ldr	r6, [sp, #116]	; 0x74
   35ba0:	adds	r1, r6, r1
   35ba2:	ldr	r6, [sp, #120]	; 0x78
   35ba4:	adc.w	r9, r6, r9
   35ba8:	adds	r1, r1, r4
   35baa:	str	r1, [sp, #152]	; 0x98
   35bac:	adc.w	r1, r9, r8
   35bb0:	str	r1, [sp, #156]	; 0x9c
   35bb2:	ldr	r1, [sp, #152]	; 0x98
   35bb4:	eor.w	lr, r1, lr
   35bb8:	ldr	r1, [sp, #156]	; 0x9c
   35bba:	eors	r7, r1
   35bbc:	mov.w	r1, lr, lsr #16
   35bc0:	orr.w	r1, r1, r7, lsl #16
   35bc4:	lsrs	r7, r7, #16
   35bc6:	str	r1, [sp, #216]	; 0xd8
   35bc8:	orr.w	r1, r7, lr, lsl #16
   35bcc:	str	r1, [sp, #220]	; 0xdc
   35bce:	ldr	r1, [sp, #216]	; 0xd8
   35bd0:	adds	r2, r2, r1
   35bd2:	str	r2, [sp, #176]	; 0xb0
   35bd4:	ldr	r2, [sp, #220]	; 0xdc
   35bd6:	ldr	r1, [sp, #168]	; 0xa8
   35bd8:	adc.w	r2, r5, r2
   35bdc:	str	r2, [sp, #180]	; 0xb4
   35bde:	ldr	r2, [sp, #176]	; 0xb0
   35be0:	eors	r4, r2
   35be2:	ldr	r2, [sp, #180]	; 0xb4
   35be4:	eor.w	r8, r2, r8
   35be8:	mov.w	r2, r8, lsl #1
   35bec:	orr.w	r2, r2, r4, lsr #31
   35bf0:	lsls	r4, r4, #1
   35bf2:	str	r2, [sp, #248]	; 0xf8
   35bf4:	orr.w	r2, r4, r8, lsr #31
   35bf8:	str	r2, [sp, #224]	; 0xe0
   35bfa:	ldr	r2, [sp, #28]
   35bfc:	ldr	r4, [sp, #172]	; 0xac
   35bfe:	adds	r2, r2, r1
   35c00:	ldr	r1, [sp, #32]
   35c02:	adc.w	r7, r1, r4
   35c06:	ldr	r1, [sp, #252]	; 0xfc
   35c08:	adds	r2, r2, r1
   35c0a:	ldr	r1, [sp, #264]	; 0x108
   35c0c:	adc.w	r7, r1, r7
   35c10:	ldr	r1, [sp, #240]	; 0xf0
   35c12:	eor.w	r4, r7, r1
   35c16:	ldr	r1, [sp, #228]	; 0xe4
   35c18:	adds	r3, r3, r4
   35c1a:	eor.w	r9, r2, r1
   35c1e:	ldr	r1, [sp, #252]	; 0xfc
   35c20:	adc.w	r0, r0, r9
   35c24:	eor.w	ip, r3, r1
   35c28:	ldr	r1, [sp, #264]	; 0x108
   35c2a:	eor.w	r5, r0, r1
   35c2e:	mov.w	lr, ip, lsr #24
   35c32:	orr.w	r1, lr, r5, lsl #8
   35c36:	lsrs	r5, r5, #24
   35c38:	orr.w	r6, r5, ip, lsl #8
   35c3c:	ldr	r5, [sp, #52]	; 0x34
   35c3e:	adds	r2, r5, r2
   35c40:	ldr	r5, [sp, #56]	; 0x38
   35c42:	adc.w	r7, r5, r7
   35c46:	adds	r2, r2, r1
   35c48:	str	r2, [sp, #168]	; 0xa8
   35c4a:	adc.w	r2, r7, r6
   35c4e:	str	r2, [sp, #172]	; 0xac
   35c50:	ldr	r2, [sp, #168]	; 0xa8
   35c52:	eors	r4, r2
   35c54:	ldr	r2, [sp, #172]	; 0xac
   35c56:	eor.w	r2, r2, r9
   35c5a:	lsrs	r5, r4, #16
   35c5c:	orr.w	r5, r5, r2, lsl #16
   35c60:	mov.w	r9, r2, lsr #16
   35c64:	orr.w	r9, r9, r4, lsl #16
   35c68:	adds	r3, r3, r5
   35c6a:	str	r3, [sp, #184]	; 0xb8
   35c6c:	adc.w	r3, r0, r9
   35c70:	str	r3, [sp, #188]	; 0xbc
   35c72:	ldr	r3, [sp, #184]	; 0xb8
   35c74:	ldr	r2, [sp, #160]	; 0xa0
   35c76:	eors	r1, r3
   35c78:	ldr	r3, [sp, #188]	; 0xbc
   35c7a:	str	r5, [sp, #228]	; 0xe4
   35c7c:	eors	r6, r3
   35c7e:	lsls	r3, r6, #1
   35c80:	orr.w	r3, r3, r1, lsr #31
   35c84:	lsls	r1, r1, #1
   35c86:	str	r3, [sp, #252]	; 0xfc
   35c88:	orr.w	r3, r1, r6, lsr #31
   35c8c:	str	r3, [sp, #240]	; 0xf0
   35c8e:	ldr	r3, [sp, #60]	; 0x3c
   35c90:	adds	r3, r3, r2
   35c92:	ldr	r2, [sp, #64]	; 0x40
   35c94:	ldr	r1, [sp, #164]	; 0xa4
   35c96:	ldr	r0, [sp, #196]	; 0xc4
   35c98:	adc.w	ip, r2, r1
   35c9c:	ldr	r2, [sp, #212]	; 0xd4
   35c9e:	adds.w	r3, r3, fp
   35ca2:	adc.w	ip, ip, r2
   35ca6:	ldr	r2, [sp, #244]	; 0xf4
   35ca8:	eor.w	r7, ip, r2
   35cac:	ldr	r2, [sp, #208]	; 0xd0
   35cae:	eor.w	r1, r3, r2
   35cb2:	ldr	r2, [sp, #192]	; 0xc0
   35cb4:	adds	r2, r2, r7
   35cb6:	adc.w	r5, r0, r1
   35cba:	ldr	r0, [sp, #212]	; 0xd4
   35cbc:	eor.w	fp, r2, fp
   35cc0:	eors	r0, r5
   35cc2:	mov.w	r4, fp, lsr #24
   35cc6:	orr.w	r8, r4, r0, lsl #8
   35cca:	lsrs	r0, r0, #24
   35ccc:	orr.w	r6, r0, fp, lsl #8
   35cd0:	ldr	r0, [sp, #12]
   35cd2:	ldr	r4, [sp, #256]	; 0x100
   35cd4:	adds	r3, r0, r3
   35cd6:	ldr	r0, [sp, #16]
   35cd8:	adc.w	ip, r0, ip
   35cdc:	adds.w	r3, r3, r8
   35ce0:	str	r3, [sp, #160]	; 0xa0
   35ce2:	adc.w	r3, ip, r6
   35ce6:	str	r3, [sp, #164]	; 0xa4
   35ce8:	ldr	r3, [sp, #160]	; 0xa0
   35cea:	ldr	r0, [sp, #148]	; 0x94
   35cec:	eors	r7, r3
   35cee:	ldr	r3, [sp, #164]	; 0xa4
   35cf0:	eors	r1, r3
   35cf2:	lsrs	r3, r7, #16
   35cf4:	orr.w	r3, r3, r1, lsl #16
   35cf8:	lsrs	r1, r1, #16
   35cfa:	str	r3, [sp, #208]	; 0xd0
   35cfc:	orr.w	r3, r1, r7, lsl #16
   35d00:	str	r3, [sp, #212]	; 0xd4
   35d02:	ldr	r3, [sp, #208]	; 0xd0
   35d04:	ldr	r1, [sp, #144]	; 0x90
   35d06:	adds	r2, r2, r3
   35d08:	ldr	r3, [sp, #212]	; 0xd4
   35d0a:	eor.w	r8, r2, r8
   35d0e:	adc.w	r5, r3, r5
   35d12:	eors	r6, r5
   35d14:	lsls	r3, r6, #1
   35d16:	orr.w	r3, r3, r8, lsr #31
   35d1a:	mov.w	r8, r8, lsl #1
   35d1e:	str	r3, [sp, #264]	; 0x108
   35d20:	orr.w	r3, r8, r6, lsr #31
   35d24:	str	r3, [sp, #244]	; 0xf4
   35d26:	ldr	r3, [sp, #76]	; 0x4c
   35d28:	adds	r1, r3, r1
   35d2a:	ldr	r3, [sp, #80]	; 0x50
   35d2c:	adc.w	sl, r3, r0
   35d30:	ldr	r3, [sp, #256]	; 0x100
   35d32:	ldr	r0, [sp, #204]	; 0xcc
   35d34:	adds	r1, r1, r3
   35d36:	ldr	r3, [sp, #260]	; 0x104
   35d38:	adc.w	sl, sl, r3
   35d3c:	ldr	r3, [sp, #236]	; 0xec
   35d3e:	eor.w	lr, sl, r3
   35d42:	ldr	r3, [sp, #232]	; 0xe8
   35d44:	eor.w	r7, r1, r3
   35d48:	ldr	r3, [sp, #200]	; 0xc8
   35d4a:	adds.w	r3, r3, lr
   35d4e:	eor.w	r6, r3, r4
   35d52:	ldr	r4, [sp, #260]	; 0x104
   35d54:	adcs	r0, r7
   35d56:	eor.w	ip, r0, r4
   35d5a:	mov.w	fp, r6, lsr #24
   35d5e:	orr.w	r4, fp, ip, lsl #8
   35d62:	mov.w	ip, ip, lsr #24
   35d66:	orr.w	r8, ip, r6, lsl #8
   35d6a:	ldr	r6, [sp, #36]	; 0x24
   35d6c:	adds	r1, r6, r1
   35d6e:	ldr	r6, [sp, #40]	; 0x28
   35d70:	adc.w	sl, r6, sl
   35d74:	adds	r1, r1, r4
   35d76:	str	r1, [sp, #144]	; 0x90
   35d78:	adc.w	r1, sl, r8
   35d7c:	str	r1, [sp, #148]	; 0x94
   35d7e:	ldr	r1, [sp, #144]	; 0x90
   35d80:	eor.w	lr, r1, lr
   35d84:	ldr	r1, [sp, #148]	; 0x94
   35d86:	eors	r7, r1
   35d88:	mov.w	r1, lr, lsr #16
   35d8c:	orr.w	r1, r1, r7, lsl #16
   35d90:	lsrs	r7, r7, #16
   35d92:	str	r1, [sp, #232]	; 0xe8
   35d94:	orr.w	r1, r7, lr, lsl #16
   35d98:	str	r1, [sp, #236]	; 0xec
   35d9a:	ldr	r1, [sp, #232]	; 0xe8
   35d9c:	ldr	r7, [sp, #156]	; 0x9c
   35d9e:	adds	r3, r3, r1
   35da0:	ldr	r1, [sp, #236]	; 0xec
   35da2:	eor.w	r4, r4, r3
   35da6:	adc.w	r0, r1, r0
   35daa:	eor.w	r8, r0, r8
   35dae:	mov.w	r1, r8, lsl #1
   35db2:	orr.w	r6, r1, r4, lsr #31
   35db6:	lsls	r4, r4, #1
   35db8:	orr.w	fp, r4, r8, lsr #31
   35dbc:	ldr	r1, [sp, #60]	; 0x3c
   35dbe:	ldr	r4, [sp, #152]	; 0x98
   35dc0:	adds	r1, r1, r4
   35dc2:	ldr	r4, [sp, #64]	; 0x40
   35dc4:	adc.w	sl, r4, r7
   35dc8:	adds.w	r1, r1, fp
   35dcc:	ldr	r4, [sp, #228]	; 0xe4
   35dce:	adc.w	sl, sl, r6
   35dd2:	eor.w	lr, sl, r9
   35dd6:	adds.w	r2, r2, lr
   35dda:	eor.w	r7, r1, r4
   35dde:	adc.w	r5, r7, r5
   35de2:	eor.w	fp, r2, fp
   35de6:	eor.w	ip, r5, r6
   35dea:	mov.w	r4, fp, lsr #24
   35dee:	orr.w	r6, r4, ip, lsl #8
   35df2:	ldr	r4, [sp, #76]	; 0x4c
   35df4:	mov.w	ip, ip, lsr #24
   35df8:	adds	r1, r4, r1
   35dfa:	ldr	r4, [sp, #80]	; 0x50
   35dfc:	orr.w	r8, ip, fp, lsl #8
   35e00:	adc.w	sl, r4, sl
   35e04:	adds	r1, r1, r6
   35e06:	str	r1, [sp, #152]	; 0x98
   35e08:	adc.w	r1, sl, r8
   35e0c:	str	r1, [sp, #156]	; 0x9c
   35e0e:	ldr	r1, [sp, #152]	; 0x98
   35e10:	eor.w	lr, r1, lr
   35e14:	ldr	r1, [sp, #156]	; 0x9c
   35e16:	eors	r7, r1
   35e18:	mov.w	r1, lr, lsr #16
   35e1c:	orr.w	r1, r1, r7, lsl #16
   35e20:	lsrs	r7, r7, #16
   35e22:	str	r1, [sp, #228]	; 0xe4
   35e24:	orr.w	r1, r7, lr, lsl #16
   35e28:	str	r1, [sp, #256]	; 0x100
   35e2a:	ldr	r1, [sp, #228]	; 0xe4
   35e2c:	adds	r2, r2, r1
   35e2e:	str	r2, [sp, #192]	; 0xc0
   35e30:	ldr	r2, [sp, #256]	; 0x100
   35e32:	ldr	r1, [sp, #168]	; 0xa8
   35e34:	adc.w	r2, r5, r2
   35e38:	str	r2, [sp, #196]	; 0xc4
   35e3a:	ldr	r2, [sp, #192]	; 0xc0
   35e3c:	eors	r6, r2
   35e3e:	ldr	r2, [sp, #196]	; 0xc4
   35e40:	eor.w	r8, r2, r8
   35e44:	mov.w	r2, r8, lsl #1
   35e48:	orr.w	r2, r2, r6, lsr #31
   35e4c:	lsls	r6, r6, #1
   35e4e:	str	r2, [sp, #268]	; 0x10c
   35e50:	orr.w	r2, r6, r8, lsr #31
   35e54:	str	r2, [sp, #260]	; 0x104
   35e56:	ldr	r2, [sp, #28]
   35e58:	adds	r2, r2, r1
   35e5a:	ldr	r1, [sp, #32]
   35e5c:	ldr	r4, [sp, #172]	; 0xac
   35e5e:	ldr	r5, [sp, #248]	; 0xf8
   35e60:	adc.w	r7, r1, r4
   35e64:	ldr	r1, [sp, #224]	; 0xe0
   35e66:	ldr	r4, [sp, #224]	; 0xe0
   35e68:	adds	r2, r2, r1
   35e6a:	ldr	r1, [sp, #248]	; 0xf8
   35e6c:	adc.w	r7, r1, r7
   35e70:	ldr	r1, [sp, #212]	; 0xd4
   35e72:	eor.w	r6, r7, r1
   35e76:	ldr	r1, [sp, #208]	; 0xd0
   35e78:	adds	r3, r3, r6
   35e7a:	eor.w	r1, r2, r1
   35e7e:	eor.w	r4, r3, r4
   35e82:	adc.w	r0, r1, r0
   35e86:	eors	r5, r0
   35e88:	mov.w	r8, r4, lsr #24
   35e8c:	orr.w	ip, r8, r5, lsl #8
   35e90:	lsrs	r5, r5, #24
   35e92:	orr.w	lr, r5, r4, lsl #8
   35e96:	ldr	r4, [sp, #12]
   35e98:	adds	r2, r4, r2
   35e9a:	ldr	r4, [sp, #16]
   35e9c:	adc.w	r7, r4, r7
   35ea0:	adds.w	r2, r2, ip
   35ea4:	str	r2, [sp, #168]	; 0xa8
   35ea6:	adc.w	r2, r7, lr
   35eaa:	str	r2, [sp, #172]	; 0xac
   35eac:	ldr	r2, [sp, #168]	; 0xa8
   35eae:	eors	r6, r2
   35eb0:	ldr	r2, [sp, #172]	; 0xac
   35eb2:	eors	r1, r2
   35eb4:	lsrs	r2, r6, #16
   35eb6:	orr.w	r2, r2, r1, lsl #16
   35eba:	lsrs	r1, r1, #16
   35ebc:	str	r2, [sp, #208]	; 0xd0
   35ebe:	orr.w	r2, r1, r6, lsl #16
   35ec2:	str	r2, [sp, #212]	; 0xd4
   35ec4:	ldr	r2, [sp, #208]	; 0xd0
   35ec6:	ldr	r1, [sp, #164]	; 0xa4
   35ec8:	adds	r3, r3, r2
   35eca:	str	r3, [sp, #200]	; 0xc8
   35ecc:	ldr	r3, [sp, #212]	; 0xd4
   35ece:	adc.w	r3, r0, r3
   35ed2:	str	r3, [sp, #204]	; 0xcc
   35ed4:	ldr	r2, [sp, #204]	; 0xcc
   35ed6:	ldr	r3, [sp, #200]	; 0xc8
   35ed8:	eor.w	lr, r2, lr
   35edc:	eor.w	r3, r3, ip
   35ee0:	mov.w	r2, lr, lsl #1
   35ee4:	orr.w	r2, r2, r3, lsr #31
   35ee8:	mov.w	ip, r3, lsl #1
   35eec:	str	r2, [sp, #224]	; 0xe0
   35eee:	orr.w	ip, ip, lr, lsr #31
   35ef2:	ldr	r2, [sp, #160]	; 0xa0
   35ef4:	ldr	r3, [sp, #108]	; 0x6c
   35ef6:	adds	r3, r3, r2
   35ef8:	ldr	r2, [sp, #112]	; 0x70
   35efa:	adc.w	lr, r2, r1
   35efe:	ldr	r2, [sp, #240]	; 0xf0
   35f00:	adds	r3, r3, r2
   35f02:	ldr	r2, [sp, #252]	; 0xfc
   35f04:	adc.w	lr, lr, r2
   35f08:	ldr	r2, [sp, #236]	; 0xec
   35f0a:	eor.w	r6, lr, r2
   35f0e:	ldr	r2, [sp, #232]	; 0xe8
   35f10:	eor.w	r0, r3, r2
   35f14:	ldr	r2, [sp, #176]	; 0xb0
   35f16:	ldr	r1, [sp, #180]	; 0xb4
   35f18:	adds	r2, r2, r6
   35f1a:	adc.w	r5, r1, r0
   35f1e:	ldr	r1, [sp, #240]	; 0xf0
   35f20:	eor.w	r8, r2, r1
   35f24:	ldr	r1, [sp, #252]	; 0xfc
   35f26:	eor.w	r4, r5, r1
   35f2a:	mov.w	r9, r8, lsr #24
   35f2e:	orr.w	r1, r9, r4, lsl #8
   35f32:	lsrs	r4, r4, #24
   35f34:	orr.w	r7, r4, r8, lsl #8
   35f38:	ldr	r4, [sp, #100]	; 0x64
   35f3a:	adds	r3, r4, r3
   35f3c:	ldr	r4, [sp, #104]	; 0x68
   35f3e:	adc.w	lr, r4, lr
   35f42:	adds	r3, r3, r1
   35f44:	str	r3, [sp, #160]	; 0xa0
   35f46:	adc.w	r3, lr, r7
   35f4a:	str	r3, [sp, #164]	; 0xa4
   35f4c:	ldr	r3, [sp, #160]	; 0xa0
   35f4e:	ldr	r4, [sp, #244]	; 0xf4
   35f50:	eors	r6, r3
   35f52:	ldr	r3, [sp, #164]	; 0xa4
   35f54:	eors	r0, r3
   35f56:	lsrs	r3, r6, #16
   35f58:	orr.w	r3, r3, r0, lsl #16
   35f5c:	lsrs	r0, r0, #16
   35f5e:	str	r3, [sp, #232]	; 0xe8
   35f60:	orr.w	r3, r0, r6, lsl #16
   35f64:	str	r3, [sp, #236]	; 0xec
   35f66:	ldr	r3, [sp, #232]	; 0xe8
   35f68:	ldr	r0, [sp, #148]	; 0x94
   35f6a:	adds	r2, r2, r3
   35f6c:	ldr	r3, [sp, #236]	; 0xec
   35f6e:	eor.w	r1, r1, r2
   35f72:	adc.w	r5, r3, r5
   35f76:	eors	r7, r5
   35f78:	lsls	r3, r7, #1
   35f7a:	orr.w	r3, r3, r1, lsr #31
   35f7e:	lsls	r1, r1, #1
   35f80:	str	r3, [sp, #248]	; 0xf8
   35f82:	orr.w	r3, r1, r7, lsr #31
   35f86:	ldr	r1, [sp, #144]	; 0x90
   35f88:	str	r3, [sp, #240]	; 0xf0
   35f8a:	ldr	r3, [sp, #92]	; 0x5c
   35f8c:	adds	r1, r3, r1
   35f8e:	ldr	r3, [sp, #96]	; 0x60
   35f90:	adc.w	sl, r3, r0
   35f94:	ldr	r3, [sp, #244]	; 0xf4
   35f96:	ldr	r0, [sp, #188]	; 0xbc
   35f98:	adds	r1, r1, r3
   35f9a:	ldr	r3, [sp, #264]	; 0x108
   35f9c:	adc.w	sl, sl, r3
   35fa0:	ldr	r3, [sp, #220]	; 0xdc
   35fa2:	eor.w	lr, sl, r3
   35fa6:	ldr	r3, [sp, #216]	; 0xd8
   35fa8:	eor.w	r6, r1, r3
   35fac:	ldr	r3, [sp, #184]	; 0xb8
   35fae:	adds.w	r3, r3, lr
   35fb2:	eor.w	r8, r3, r4
   35fb6:	ldr	r4, [sp, #264]	; 0x108
   35fb8:	adcs	r0, r6
   35fba:	eor.w	r7, r0, r4
   35fbe:	mov.w	fp, r8, lsr #24
   35fc2:	orr.w	r4, fp, r7, lsl #8
   35fc6:	lsrs	r7, r7, #24
   35fc8:	orr.w	r9, r7, r8, lsl #8
   35fcc:	ldr	r7, [sp, #116]	; 0x74
   35fce:	adds	r1, r7, r1
   35fd0:	ldr	r7, [sp, #120]	; 0x78
   35fd2:	adc.w	sl, r7, sl
   35fd6:	adds	r1, r1, r4
   35fd8:	str	r1, [sp, #144]	; 0x90
   35fda:	adc.w	r1, sl, r9
   35fde:	str	r1, [sp, #148]	; 0x94
   35fe0:	ldr	r1, [sp, #144]	; 0x90
   35fe2:	eor.w	lr, r1, lr
   35fe6:	ldr	r1, [sp, #148]	; 0x94
   35fe8:	eors	r6, r1
   35fea:	mov.w	r1, lr, lsr #16
   35fee:	orr.w	r8, r1, r6, lsl #16
   35ff2:	lsrs	r6, r6, #16
   35ff4:	adds.w	r3, r3, r8
   35ff8:	orr.w	sl, r6, lr, lsl #16
   35ffc:	adc.w	r0, r0, sl
   36000:	eors	r4, r3
   36002:	eor.w	r9, r0, r9
   36006:	ldr	r6, [sp, #156]	; 0x9c
   36008:	mov.w	r1, r9, lsl #1
   3600c:	orr.w	r1, r1, r4, lsr #31
   36010:	lsls	r4, r4, #1
   36012:	orr.w	fp, r4, r9, lsr #31
   36016:	str	r1, [sp, #216]	; 0xd8
   36018:	ldr	r4, [sp, #152]	; 0x98
   3601a:	ldr	r1, [sp, #20]
   3601c:	adds	r1, r1, r4
   3601e:	ldr	r4, [sp, #24]
   36020:	adc.w	r9, r4, r6
   36024:	ldr	r4, [sp, #224]	; 0xe0
   36026:	adds.w	r1, r1, ip
   3602a:	adc.w	r9, r9, r4
   3602e:	eor.w	r7, r1, r8
   36032:	eor.w	lr, r9, sl
   36036:	adds.w	r2, r2, lr
   3603a:	adc.w	r5, r7, r5
   3603e:	eor.w	ip, r2, ip
   36042:	eor.w	r6, r5, r4
   36046:	mov.w	sl, ip, lsr #24
   3604a:	orr.w	r4, sl, r6, lsl #8
   3604e:	lsrs	r6, r6, #24
   36050:	orr.w	r8, r6, ip, lsl #8
   36054:	ldr	r6, [sp, #52]	; 0x34
   36056:	adds	r1, r6, r1
   36058:	ldr	r6, [sp, #56]	; 0x38
   3605a:	adc.w	r9, r6, r9
   3605e:	adds	r1, r1, r4
   36060:	str	r1, [sp, #152]	; 0x98
   36062:	adc.w	r1, r9, r8
   36066:	str	r1, [sp, #156]	; 0x9c
   36068:	ldr	r1, [sp, #152]	; 0x98
   3606a:	eor.w	lr, r1, lr
   3606e:	ldr	r1, [sp, #156]	; 0x9c
   36070:	eors	r7, r1
   36072:	mov.w	r1, lr, lsr #16
   36076:	orr.w	r1, r1, r7, lsl #16
   3607a:	lsrs	r7, r7, #16
   3607c:	str	r1, [sp, #220]	; 0xdc
   3607e:	orr.w	r1, r7, lr, lsl #16
   36082:	str	r1, [sp, #224]	; 0xe0
   36084:	ldr	r1, [sp, #220]	; 0xdc
   36086:	adds	r2, r2, r1
   36088:	str	r2, [sp, #176]	; 0xb0
   3608a:	ldr	r2, [sp, #224]	; 0xe0
   3608c:	ldr	r1, [sp, #168]	; 0xa8
   3608e:	adc.w	r2, r5, r2
   36092:	str	r2, [sp, #180]	; 0xb4
   36094:	ldr	r2, [sp, #176]	; 0xb0
   36096:	eors	r4, r2
   36098:	ldr	r2, [sp, #180]	; 0xb4
   3609a:	eor.w	r8, r2, r8
   3609e:	mov.w	r2, r8, lsl #1
   360a2:	orr.w	r2, r2, r4, lsr #31
   360a6:	lsls	r4, r4, #1
   360a8:	str	r2, [sp, #252]	; 0xfc
   360aa:	orr.w	r2, r4, r8, lsr #31
   360ae:	str	r2, [sp, #244]	; 0xf4
   360b0:	ldr	r2, [sp, #44]	; 0x2c
   360b2:	ldr	r4, [sp, #172]	; 0xac
   360b4:	adds	r2, r2, r1
   360b6:	ldr	r1, [sp, #48]	; 0x30
   360b8:	adc.w	r7, r1, r4
   360bc:	ldr	r1, [sp, #240]	; 0xf0
   360be:	adds	r2, r2, r1
   360c0:	ldr	r1, [sp, #248]	; 0xf8
   360c2:	adc.w	r7, r1, r7
   360c6:	ldr	r1, [sp, #256]	; 0x100
   360c8:	eor.w	r4, r7, r1
   360cc:	ldr	r1, [sp, #228]	; 0xe4
   360ce:	adds	r3, r3, r4
   360d0:	eor.w	r9, r2, r1
   360d4:	ldr	r1, [sp, #240]	; 0xf0
   360d6:	adc.w	r0, r0, r9
   360da:	eor.w	ip, r3, r1
   360de:	ldr	r1, [sp, #248]	; 0xf8
   360e0:	eor.w	r5, r0, r1
   360e4:	mov.w	lr, ip, lsr #24
   360e8:	orr.w	r1, lr, r5, lsl #8
   360ec:	lsrs	r5, r5, #24
   360ee:	orr.w	r6, r5, ip, lsl #8
   360f2:	ldr	r5, [sp, #84]	; 0x54
   360f4:	adds	r2, r5, r2
   360f6:	ldr	r5, [sp, #88]	; 0x58
   360f8:	adc.w	r7, r5, r7
   360fc:	adds	r2, r2, r1
   360fe:	str	r2, [sp, #168]	; 0xa8
   36100:	adc.w	r2, r7, r6
   36104:	str	r2, [sp, #172]	; 0xac
   36106:	ldr	r2, [sp, #168]	; 0xa8
   36108:	eors	r4, r2
   3610a:	ldr	r2, [sp, #172]	; 0xac
   3610c:	eor.w	r2, r2, r9
   36110:	lsrs	r5, r4, #16
   36112:	orr.w	r5, r5, r2, lsl #16
   36116:	mov.w	r9, r2, lsr #16
   3611a:	orr.w	r9, r9, r4, lsl #16
   3611e:	adds	r3, r3, r5
   36120:	str	r3, [sp, #184]	; 0xb8
   36122:	adc.w	r3, r0, r9
   36126:	str	r3, [sp, #188]	; 0xbc
   36128:	ldr	r3, [sp, #184]	; 0xb8
   3612a:	ldr	r2, [sp, #160]	; 0xa0
   3612c:	eors	r1, r3
   3612e:	ldr	r3, [sp, #188]	; 0xbc
   36130:	ldr	r0, [sp, #196]	; 0xc4
   36132:	eors	r6, r3
   36134:	str	r5, [sp, #228]	; 0xe4
   36136:	lsls	r3, r6, #1
   36138:	orr.w	r3, r3, r1, lsr #31
   3613c:	lsls	r1, r1, #1
   3613e:	str	r3, [sp, #248]	; 0xf8
   36140:	orr.w	r3, r1, r6, lsr #31
   36144:	str	r3, [sp, #240]	; 0xf0
   36146:	ldr	r3, [sp, #36]	; 0x24
   36148:	ldr	r1, [sp, #164]	; 0xa4
   3614a:	adds	r3, r3, r2
   3614c:	ldr	r2, [sp, #40]	; 0x28
   3614e:	adc.w	ip, r2, r1
   36152:	ldr	r2, [sp, #216]	; 0xd8
   36154:	adds.w	r3, r3, fp
   36158:	adc.w	ip, ip, r2
   3615c:	ldr	r2, [sp, #212]	; 0xd4
   3615e:	eor.w	r7, ip, r2
   36162:	ldr	r2, [sp, #208]	; 0xd0
   36164:	eor.w	r1, r3, r2
   36168:	ldr	r2, [sp, #192]	; 0xc0
   3616a:	adds	r2, r2, r7
   3616c:	adc.w	r5, r0, r1
   36170:	ldr	r0, [sp, #216]	; 0xd8
   36172:	eor.w	fp, r2, fp
   36176:	eors	r0, r5
   36178:	mov.w	r4, fp, lsr #24
   3617c:	orr.w	r8, r4, r0, lsl #8
   36180:	lsrs	r0, r0, #24
   36182:	orr.w	r6, r0, fp, lsl #8
   36186:	ldr	r0, [sp, #4]
   36188:	adds	r3, r0, r3
   3618a:	ldr	r0, [sp, #8]
   3618c:	adc.w	ip, r0, ip
   36190:	adds.w	r3, r3, r8
   36194:	str	r3, [sp, #160]	; 0xa0
   36196:	adc.w	r3, ip, r6
   3619a:	str	r3, [sp, #164]	; 0xa4
   3619c:	ldr	r3, [sp, #160]	; 0xa0
   3619e:	eors	r7, r3
   361a0:	ldr	r3, [sp, #164]	; 0xa4
   361a2:	eors	r1, r3
   361a4:	lsrs	r3, r7, #16
   361a6:	orr.w	r3, r3, r1, lsl #16
   361aa:	lsrs	r1, r1, #16
   361ac:	str	r3, [sp, #208]	; 0xd0
   361ae:	orr.w	r3, r1, r7, lsl #16
   361b2:	str	r3, [sp, #212]	; 0xd4
   361b4:	ldr	r3, [sp, #208]	; 0xd0
   361b6:	ldr	r1, [sp, #144]	; 0x90
   361b8:	adds	r2, r2, r3
   361ba:	ldr	r3, [sp, #212]	; 0xd4
   361bc:	eor.w	r8, r2, r8
   361c0:	ldr	r0, [sp, #148]	; 0x94
   361c2:	adc.w	r5, r3, r5
   361c6:	ldr	r4, [sp, #260]	; 0x104
   361c8:	eors	r6, r5
   361ca:	lsls	r3, r6, #1
   361cc:	orr.w	r3, r3, r8, lsr #31
   361d0:	mov.w	r8, r8, lsl #1
   361d4:	str	r3, [sp, #256]	; 0x100
   361d6:	orr.w	r3, r8, r6, lsr #31
   361da:	str	r3, [sp, #216]	; 0xd8
   361dc:	ldr	r3, [sp, #124]	; 0x7c
   361de:	adds	r1, r3, r1
   361e0:	ldr	r3, [sp, #128]	; 0x80
   361e2:	adc.w	sl, r3, r0
   361e6:	ldr	r3, [sp, #260]	; 0x104
   361e8:	ldr	r0, [sp, #204]	; 0xcc
   361ea:	adds	r1, r1, r3
   361ec:	ldr	r3, [sp, #268]	; 0x10c
   361ee:	adc.w	sl, sl, r3
   361f2:	ldr	r3, [sp, #236]	; 0xec
   361f4:	eor.w	lr, sl, r3
   361f8:	ldr	r3, [sp, #232]	; 0xe8
   361fa:	eor.w	r7, r1, r3
   361fe:	ldr	r3, [sp, #200]	; 0xc8
   36200:	adds.w	r3, r3, lr
   36204:	eor.w	r6, r3, r4
   36208:	ldr	r4, [sp, #268]	; 0x10c
   3620a:	adcs	r0, r7
   3620c:	eor.w	ip, r0, r4
   36210:	mov.w	fp, r6, lsr #24
   36214:	orr.w	r4, fp, ip, lsl #8
   36218:	mov.w	ip, ip, lsr #24
   3621c:	orr.w	r8, ip, r6, lsl #8
   36220:	ldr	r6, [sp, #68]	; 0x44
   36222:	adds	r1, r6, r1
   36224:	ldr	r6, [sp, #72]	; 0x48
   36226:	adc.w	sl, r6, sl
   3622a:	adds	r1, r1, r4
   3622c:	str	r1, [sp, #144]	; 0x90
   3622e:	adc.w	r1, sl, r8
   36232:	str	r1, [sp, #148]	; 0x94
   36234:	ldr	r1, [sp, #144]	; 0x90
   36236:	eor.w	lr, r1, lr
   3623a:	ldr	r1, [sp, #148]	; 0x94
   3623c:	eors	r7, r1
   3623e:	mov.w	r1, lr, lsr #16
   36242:	orr.w	r1, r1, r7, lsl #16
   36246:	lsrs	r7, r7, #16
   36248:	str	r1, [sp, #232]	; 0xe8
   3624a:	orr.w	r1, r7, lr, lsl #16
   3624e:	str	r1, [sp, #236]	; 0xec
   36250:	ldr	r1, [sp, #232]	; 0xe8
   36252:	ldr	r7, [sp, #156]	; 0x9c
   36254:	adds	r3, r3, r1
   36256:	ldr	r1, [sp, #236]	; 0xec
   36258:	eor.w	r4, r4, r3
   3625c:	adc.w	r0, r1, r0
   36260:	eor.w	r8, r0, r8
   36264:	mov.w	r1, r8, lsl #1
   36268:	orr.w	r6, r1, r4, lsr #31
   3626c:	lsls	r4, r4, #1
   3626e:	orr.w	fp, r4, r8, lsr #31
   36272:	ldr	r1, [sp, #76]	; 0x4c
   36274:	ldr	r4, [sp, #152]	; 0x98
   36276:	adds	r1, r1, r4
   36278:	ldr	r4, [sp, #80]	; 0x50
   3627a:	adc.w	sl, r4, r7
   3627e:	adds.w	r1, r1, fp
   36282:	adc.w	sl, sl, r6
   36286:	ldr	r4, [sp, #228]	; 0xe4
   36288:	eor.w	lr, sl, r9
   3628c:	adds.w	r2, r2, lr
   36290:	eor.w	r7, r1, r4
   36294:	adc.w	r5, r7, r5
   36298:	eor.w	fp, r2, fp
   3629c:	eor.w	ip, r5, r6
   362a0:	mov.w	r4, fp, lsr #24
   362a4:	orr.w	r6, r4, ip, lsl #8
   362a8:	ldr	r4, [sp, #4]
   362aa:	mov.w	ip, ip, lsr #24
   362ae:	adds	r1, r4, r1
   362b0:	ldr	r4, [sp, #8]
   362b2:	orr.w	r8, ip, fp, lsl #8
   362b6:	adc.w	sl, r4, sl
   362ba:	adds	r1, r1, r6
   362bc:	str	r1, [sp, #152]	; 0x98
   362be:	adc.w	r1, sl, r8
   362c2:	str	r1, [sp, #156]	; 0x9c
   362c4:	ldr	r1, [sp, #152]	; 0x98
   362c6:	ldr	r4, [sp, #172]	; 0xac
   362c8:	eor.w	lr, r1, lr
   362cc:	ldr	r1, [sp, #156]	; 0x9c
   362ce:	eors	r7, r1
   362d0:	mov.w	r1, lr, lsr #16
   362d4:	orr.w	r1, r1, r7, lsl #16
   362d8:	lsrs	r7, r7, #16
   362da:	str	r1, [sp, #228]	; 0xe4
   362dc:	orr.w	r1, r7, lr, lsl #16
   362e0:	str	r1, [sp, #260]	; 0x104
   362e2:	ldr	r1, [sp, #228]	; 0xe4
   362e4:	adds	r2, r2, r1
   362e6:	str	r2, [sp, #192]	; 0xc0
   362e8:	ldr	r2, [sp, #260]	; 0x104
   362ea:	ldr	r1, [sp, #168]	; 0xa8
   362ec:	adc.w	r2, r5, r2
   362f0:	str	r2, [sp, #196]	; 0xc4
   362f2:	ldr	r2, [sp, #192]	; 0xc0
   362f4:	ldr	r5, [sp, #252]	; 0xfc
   362f6:	eors	r6, r2
   362f8:	ldr	r2, [sp, #196]	; 0xc4
   362fa:	eor.w	r8, r2, r8
   362fe:	mov.w	r2, r8, lsl #1
   36302:	orr.w	r2, r2, r6, lsr #31
   36306:	lsls	r6, r6, #1
   36308:	str	r2, [sp, #268]	; 0x10c
   3630a:	orr.w	r2, r6, r8, lsr #31
   3630e:	str	r2, [sp, #264]	; 0x108
   36310:	ldr	r2, [sp, #44]	; 0x2c
   36312:	adds	r2, r2, r1
   36314:	ldr	r1, [sp, #48]	; 0x30
   36316:	adc.w	r7, r1, r4
   3631a:	ldr	r1, [sp, #244]	; 0xf4
   3631c:	ldr	r4, [sp, #244]	; 0xf4
   3631e:	adds	r2, r2, r1
   36320:	ldr	r1, [sp, #252]	; 0xfc
   36322:	adc.w	r7, r1, r7
   36326:	ldr	r1, [sp, #212]	; 0xd4
   36328:	eor.w	r6, r7, r1
   3632c:	ldr	r1, [sp, #208]	; 0xd0
   3632e:	adds	r3, r3, r6
   36330:	eor.w	r1, r2, r1
   36334:	eor.w	r4, r3, r4
   36338:	adc.w	r0, r1, r0
   3633c:	eors	r5, r0
   3633e:	mov.w	r8, r4, lsr #24
   36342:	orr.w	ip, r8, r5, lsl #8
   36346:	lsrs	r5, r5, #24
   36348:	orr.w	lr, r5, r4, lsl #8
   3634c:	ldr	r4, [sp, #60]	; 0x3c
   3634e:	adds	r2, r4, r2
   36350:	ldr	r4, [sp, #64]	; 0x40
   36352:	adc.w	r7, r4, r7
   36356:	adds.w	r2, r2, ip
   3635a:	str	r2, [sp, #168]	; 0xa8
   3635c:	adc.w	r2, r7, lr
   36360:	str	r2, [sp, #172]	; 0xac
   36362:	ldr	r2, [sp, #168]	; 0xa8
   36364:	eors	r6, r2
   36366:	ldr	r2, [sp, #172]	; 0xac
   36368:	eors	r1, r2
   3636a:	lsrs	r2, r6, #16
   3636c:	orr.w	r2, r2, r1, lsl #16
   36370:	lsrs	r1, r1, #16
   36372:	str	r2, [sp, #208]	; 0xd0
   36374:	orr.w	r2, r1, r6, lsl #16
   36378:	str	r2, [sp, #212]	; 0xd4
   3637a:	ldr	r2, [sp, #208]	; 0xd0
   3637c:	ldr	r1, [sp, #164]	; 0xa4
   3637e:	adds	r3, r3, r2
   36380:	str	r3, [sp, #200]	; 0xc8
   36382:	ldr	r3, [sp, #212]	; 0xd4
   36384:	adc.w	r3, r0, r3
   36388:	str	r3, [sp, #204]	; 0xcc
   3638a:	ldr	r2, [sp, #204]	; 0xcc
   3638c:	ldr	r3, [sp, #200]	; 0xc8
   3638e:	eor.w	lr, r2, lr
   36392:	eor.w	r3, r3, ip
   36396:	mov.w	r2, lr, lsl #1
   3639a:	orr.w	r2, r2, r3, lsr #31
   3639e:	mov.w	ip, r3, lsl #1
   363a2:	str	r2, [sp, #244]	; 0xf4
   363a4:	orr.w	ip, ip, lr, lsr #31
   363a8:	ldr	r2, [sp, #160]	; 0xa0
   363aa:	ldr	r3, [sp, #20]
   363ac:	adds	r3, r3, r2
   363ae:	ldr	r2, [sp, #24]
   363b0:	adc.w	lr, r2, r1
   363b4:	ldr	r2, [sp, #240]	; 0xf0
   363b6:	ldr	r1, [sp, #180]	; 0xb4
   363b8:	adds	r3, r3, r2
   363ba:	ldr	r2, [sp, #248]	; 0xf8
   363bc:	adc.w	lr, lr, r2
   363c0:	ldr	r2, [sp, #236]	; 0xec
   363c2:	eor.w	r6, lr, r2
   363c6:	ldr	r2, [sp, #232]	; 0xe8
   363c8:	eor.w	r0, r3, r2
   363cc:	ldr	r2, [sp, #176]	; 0xb0
   363ce:	adds	r2, r2, r6
   363d0:	adc.w	r5, r1, r0
   363d4:	ldr	r1, [sp, #240]	; 0xf0
   363d6:	eor.w	r8, r2, r1
   363da:	ldr	r1, [sp, #248]	; 0xf8
   363dc:	eor.w	r4, r5, r1
   363e0:	mov.w	r9, r8, lsr #24
   363e4:	orr.w	r1, r9, r4, lsl #8
   363e8:	lsrs	r4, r4, #24
   363ea:	orr.w	r7, r4, r8, lsl #8
   363ee:	ldr	r4, [sp, #36]	; 0x24
   363f0:	adds	r3, r4, r3
   363f2:	ldr	r4, [sp, #40]	; 0x28
   363f4:	adc.w	lr, r4, lr
   363f8:	adds	r3, r3, r1
   363fa:	str	r3, [sp, #160]	; 0xa0
   363fc:	adc.w	r3, lr, r7
   36400:	str	r3, [sp, #164]	; 0xa4
   36402:	ldr	r3, [sp, #160]	; 0xa0
   36404:	eors	r6, r3
   36406:	ldr	r3, [sp, #164]	; 0xa4
   36408:	eors	r0, r3
   3640a:	lsrs	r3, r6, #16
   3640c:	orr.w	r3, r3, r0, lsl #16
   36410:	lsrs	r0, r0, #16
   36412:	str	r3, [sp, #232]	; 0xe8
   36414:	orr.w	r3, r0, r6, lsl #16
   36418:	str	r3, [sp, #236]	; 0xec
   3641a:	ldr	r3, [sp, #232]	; 0xe8
   3641c:	adds	r2, r2, r3
   3641e:	ldr	r3, [sp, #236]	; 0xec
   36420:	eor.w	r1, r1, r2
   36424:	adc.w	r5, r3, r5
   36428:	eors	r7, r5
   3642a:	lsls	r3, r7, #1
   3642c:	orr.w	r3, r3, r1, lsr #31
   36430:	lsls	r1, r1, #1
   36432:	str	r3, [sp, #248]	; 0xf8
   36434:	orr.w	r3, r1, r7, lsr #31
   36438:	str	r3, [sp, #240]	; 0xf0
   3643a:	ldr	r3, [sp, #84]	; 0x54
   3643c:	ldr	r1, [sp, #144]	; 0x90
   3643e:	ldr	r0, [sp, #148]	; 0x94
   36440:	adds	r1, r3, r1
   36442:	ldr	r3, [sp, #88]	; 0x58
   36444:	ldr	r4, [sp, #216]	; 0xd8
   36446:	adc.w	sl, r3, r0
   3644a:	ldr	r3, [sp, #216]	; 0xd8
   3644c:	ldr	r0, [sp, #188]	; 0xbc
   3644e:	adds	r1, r1, r3
   36450:	ldr	r3, [sp, #256]	; 0x100
   36452:	adc.w	sl, sl, r3
   36456:	ldr	r3, [sp, #224]	; 0xe0
   36458:	eor.w	lr, sl, r3
   3645c:	ldr	r3, [sp, #220]	; 0xdc
   3645e:	eor.w	r6, r1, r3
   36462:	ldr	r3, [sp, #184]	; 0xb8
   36464:	adds.w	r3, r3, lr
   36468:	eor.w	r8, r3, r4
   3646c:	ldr	r4, [sp, #256]	; 0x100
   3646e:	adcs	r0, r6
   36470:	eor.w	r7, r0, r4
   36474:	mov.w	fp, r8, lsr #24
   36478:	orr.w	r4, fp, r7, lsl #8
   3647c:	lsrs	r7, r7, #24
   3647e:	orr.w	r9, r7, r8, lsl #8
   36482:	ldr	r7, [sp, #124]	; 0x7c
   36484:	adds	r1, r7, r1
   36486:	ldr	r7, [sp, #128]	; 0x80
   36488:	adc.w	sl, r7, sl
   3648c:	adds	r1, r1, r4
   3648e:	str	r1, [sp, #144]	; 0x90
   36490:	adc.w	r1, sl, r9
   36494:	str	r1, [sp, #148]	; 0x94
   36496:	ldr	r1, [sp, #144]	; 0x90
   36498:	eor.w	lr, r1, lr
   3649c:	ldr	r1, [sp, #148]	; 0x94
   3649e:	eors	r6, r1
   364a0:	mov.w	r1, lr, lsr #16
   364a4:	orr.w	r8, r1, r6, lsl #16
   364a8:	lsrs	r6, r6, #16
   364aa:	adds.w	r3, r3, r8
   364ae:	orr.w	sl, r6, lr, lsl #16
   364b2:	adc.w	r0, r0, sl
   364b6:	eors	r4, r3
   364b8:	eor.w	r9, r0, r9
   364bc:	ldr	r6, [sp, #156]	; 0x9c
   364be:	mov.w	r1, r9, lsl #1
   364c2:	orr.w	r1, r1, r4, lsr #31
   364c6:	lsls	r4, r4, #1
   364c8:	orr.w	fp, r4, r9, lsr #31
   364cc:	str	r1, [sp, #216]	; 0xd8
   364ce:	ldr	r4, [sp, #152]	; 0x98
   364d0:	ldr	r1, [sp, #116]	; 0x74
   364d2:	adds	r1, r1, r4
   364d4:	ldr	r4, [sp, #120]	; 0x78
   364d6:	adc.w	r9, r4, r6
   364da:	ldr	r4, [sp, #244]	; 0xf4
   364dc:	adds.w	r1, r1, ip
   364e0:	adc.w	r9, r9, r4
   364e4:	eor.w	r7, r1, r8
   364e8:	eor.w	lr, r9, sl
   364ec:	adds.w	r2, r2, lr
   364f0:	adc.w	r5, r7, r5
   364f4:	eor.w	ip, r2, ip
   364f8:	eor.w	r6, r5, r4
   364fc:	mov.w	sl, ip, lsr #24
   36500:	orr.w	r4, sl, r6, lsl #8
   36504:	lsrs	r6, r6, #24
   36506:	orr.w	r8, r6, ip, lsl #8
   3650a:	ldr	r6, [sp, #12]
   3650c:	adds	r1, r6, r1
   3650e:	ldr	r6, [sp, #16]
   36510:	adc.w	r9, r6, r9
   36514:	adds	r1, r1, r4
   36516:	str	r1, [sp, #152]	; 0x98
   36518:	adc.w	r1, r9, r8
   3651c:	str	r1, [sp, #156]	; 0x9c
   3651e:	ldr	r1, [sp, #152]	; 0x98
   36520:	eor.w	lr, r1, lr
   36524:	ldr	r1, [sp, #156]	; 0x9c
   36526:	eors	r7, r1
   36528:	mov.w	r1, lr, lsr #16
   3652c:	orr.w	r1, r1, r7, lsl #16
   36530:	lsrs	r7, r7, #16
   36532:	str	r1, [sp, #220]	; 0xdc
   36534:	orr.w	r1, r7, lr, lsl #16
   36538:	str	r1, [sp, #224]	; 0xe0
   3653a:	ldr	r1, [sp, #220]	; 0xdc
   3653c:	adds	r2, r2, r1
   3653e:	str	r2, [sp, #176]	; 0xb0
   36540:	ldr	r2, [sp, #224]	; 0xe0
   36542:	ldr	r1, [sp, #168]	; 0xa8
   36544:	adc.w	r2, r5, r2
   36548:	str	r2, [sp, #180]	; 0xb4
   3654a:	ldr	r2, [sp, #176]	; 0xb0
   3654c:	eors	r4, r2
   3654e:	ldr	r2, [sp, #180]	; 0xb4
   36550:	eor.w	r8, r2, r8
   36554:	mov.w	r2, r8, lsl #1
   36558:	orr.w	r2, r2, r4, lsr #31
   3655c:	lsls	r4, r4, #1
   3655e:	str	r2, [sp, #252]	; 0xfc
   36560:	orr.w	r2, r4, r8, lsr #31
   36564:	str	r2, [sp, #244]	; 0xf4
   36566:	ldr	r2, [sp, #92]	; 0x5c
   36568:	ldr	r4, [sp, #172]	; 0xac
   3656a:	adds	r2, r2, r1
   3656c:	ldr	r1, [sp, #96]	; 0x60
   3656e:	adc.w	r7, r1, r4
   36572:	ldr	r1, [sp, #240]	; 0xf0
   36574:	adds	r2, r2, r1
   36576:	ldr	r1, [sp, #248]	; 0xf8
   36578:	adc.w	r7, r1, r7
   3657c:	ldr	r1, [sp, #260]	; 0x104
   3657e:	eor.w	r4, r7, r1
   36582:	ldr	r1, [sp, #228]	; 0xe4
   36584:	adds	r3, r3, r4
   36586:	eor.w	r9, r2, r1
   3658a:	ldr	r1, [sp, #240]	; 0xf0
   3658c:	adc.w	r0, r0, r9
   36590:	eor.w	ip, r3, r1
   36594:	ldr	r1, [sp, #248]	; 0xf8
   36596:	eor.w	r5, r0, r1
   3659a:	mov.w	lr, ip, lsr #24
   3659e:	orr.w	r1, lr, r5, lsl #8
   365a2:	lsrs	r5, r5, #24
   365a4:	orr.w	r6, r5, ip, lsl #8
   365a8:	ldr	r5, [sp, #100]	; 0x64
   365aa:	adds	r2, r5, r2
   365ac:	ldr	r5, [sp, #104]	; 0x68
   365ae:	adc.w	r7, r5, r7
   365b2:	adds	r2, r2, r1
   365b4:	str	r2, [sp, #168]	; 0xa8
   365b6:	adc.w	r2, r7, r6
   365ba:	str	r2, [sp, #172]	; 0xac
   365bc:	ldr	r2, [sp, #168]	; 0xa8
   365be:	eors	r4, r2
   365c0:	ldr	r2, [sp, #172]	; 0xac
   365c2:	eor.w	r2, r2, r9
   365c6:	lsrs	r5, r4, #16
   365c8:	orr.w	r5, r5, r2, lsl #16
   365cc:	mov.w	r9, r2, lsr #16
   365d0:	orr.w	r9, r9, r4, lsl #16
   365d4:	adds	r3, r3, r5
   365d6:	str	r3, [sp, #184]	; 0xb8
   365d8:	adc.w	r3, r0, r9
   365dc:	str	r3, [sp, #188]	; 0xbc
   365de:	ldr	r3, [sp, #184]	; 0xb8
   365e0:	ldr	r2, [sp, #160]	; 0xa0
   365e2:	eors	r1, r3
   365e4:	ldr	r3, [sp, #188]	; 0xbc
   365e6:	str	r5, [sp, #228]	; 0xe4
   365e8:	eors	r6, r3
   365ea:	lsls	r3, r6, #1
   365ec:	orr.w	r3, r3, r1, lsr #31
   365f0:	lsls	r1, r1, #1
   365f2:	str	r3, [sp, #248]	; 0xf8
   365f4:	orr.w	r3, r1, r6, lsr #31
   365f8:	str	r3, [sp, #240]	; 0xf0
   365fa:	ldr	r3, [sp, #52]	; 0x34
   365fc:	adds	r3, r3, r2
   365fe:	ldr	r2, [sp, #56]	; 0x38
   36600:	ldr	r1, [sp, #164]	; 0xa4
   36602:	ldr	r0, [sp, #196]	; 0xc4
   36604:	adc.w	ip, r2, r1
   36608:	ldr	r2, [sp, #216]	; 0xd8
   3660a:	adds.w	r3, r3, fp
   3660e:	adc.w	ip, ip, r2
   36612:	ldr	r2, [sp, #212]	; 0xd4
   36614:	eor.w	r7, ip, r2
   36618:	ldr	r2, [sp, #208]	; 0xd0
   3661a:	eor.w	r1, r3, r2
   3661e:	ldr	r2, [sp, #192]	; 0xc0
   36620:	adds	r2, r2, r7
   36622:	adc.w	r5, r0, r1
   36626:	ldr	r0, [sp, #216]	; 0xd8
   36628:	eor.w	fp, r2, fp
   3662c:	eors	r0, r5
   3662e:	mov.w	r4, fp, lsr #24
   36632:	orr.w	r8, r4, r0, lsl #8
   36636:	lsrs	r0, r0, #24
   36638:	orr.w	r6, r0, fp, lsl #8
   3663c:	ldr	r0, [sp, #68]	; 0x44
   3663e:	ldr	r4, [sp, #264]	; 0x108
   36640:	adds	r3, r0, r3
   36642:	ldr	r0, [sp, #72]	; 0x48
   36644:	adc.w	ip, r0, ip
   36648:	adds.w	r3, r3, r8
   3664c:	str	r3, [sp, #160]	; 0xa0
   3664e:	adc.w	r3, ip, r6
   36652:	str	r3, [sp, #164]	; 0xa4
   36654:	ldr	r3, [sp, #160]	; 0xa0
   36656:	ldr	r0, [sp, #148]	; 0x94
   36658:	eors	r7, r3
   3665a:	ldr	r3, [sp, #164]	; 0xa4
   3665c:	eors	r1, r3
   3665e:	lsrs	r3, r7, #16
   36660:	orr.w	r3, r3, r1, lsl #16
   36664:	lsrs	r1, r1, #16
   36666:	str	r3, [sp, #208]	; 0xd0
   36668:	orr.w	r3, r1, r7, lsl #16
   3666c:	str	r3, [sp, #212]	; 0xd4
   3666e:	ldr	r3, [sp, #208]	; 0xd0
   36670:	ldr	r1, [sp, #144]	; 0x90
   36672:	adds	r2, r2, r3
   36674:	ldr	r3, [sp, #212]	; 0xd4
   36676:	eor.w	r8, r2, r8
   3667a:	adc.w	r5, r3, r5
   3667e:	eors	r6, r5
   36680:	lsls	r3, r6, #1
   36682:	orr.w	r3, r3, r8, lsr #31
   36686:	mov.w	r8, r8, lsl #1
   3668a:	str	r3, [sp, #256]	; 0x100
   3668c:	orr.w	r3, r8, r6, lsr #31
   36690:	str	r3, [sp, #216]	; 0xd8
   36692:	ldr	r3, [sp, #28]
   36694:	adds	r1, r3, r1
   36696:	ldr	r3, [sp, #32]
   36698:	adc.w	sl, r3, r0
   3669c:	ldr	r3, [sp, #264]	; 0x108
   3669e:	ldr	r0, [sp, #204]	; 0xcc
   366a0:	adds	r1, r1, r3
   366a2:	ldr	r3, [sp, #268]	; 0x10c
   366a4:	adc.w	sl, sl, r3
   366a8:	ldr	r3, [sp, #236]	; 0xec
   366aa:	eor.w	lr, sl, r3
   366ae:	ldr	r3, [sp, #232]	; 0xe8
   366b0:	eor.w	r7, r1, r3
   366b4:	ldr	r3, [sp, #200]	; 0xc8
   366b6:	adds.w	r3, r3, lr
   366ba:	eor.w	r6, r3, r4
   366be:	ldr	r4, [sp, #268]	; 0x10c
   366c0:	adcs	r0, r7
   366c2:	eor.w	ip, r0, r4
   366c6:	mov.w	fp, r6, lsr #24
   366ca:	orr.w	r4, fp, ip, lsl #8
   366ce:	mov.w	ip, ip, lsr #24
   366d2:	orr.w	r8, ip, r6, lsl #8
   366d6:	ldr	r6, [sp, #108]	; 0x6c
   366d8:	adds	r1, r6, r1
   366da:	ldr	r6, [sp, #112]	; 0x70
   366dc:	adc.w	sl, r6, sl
   366e0:	adds	r1, r1, r4
   366e2:	str	r1, [sp, #144]	; 0x90
   366e4:	adc.w	r1, sl, r8
   366e8:	str	r1, [sp, #148]	; 0x94
   366ea:	ldr	r1, [sp, #144]	; 0x90
   366ec:	eor.w	lr, r1, lr
   366f0:	ldr	r1, [sp, #148]	; 0x94
   366f2:	eors	r7, r1
   366f4:	mov.w	r1, lr, lsr #16
   366f8:	orr.w	r1, r1, r7, lsl #16
   366fc:	lsrs	r7, r7, #16
   366fe:	str	r1, [sp, #232]	; 0xe8
   36700:	orr.w	r1, r7, lr, lsl #16
   36704:	str	r1, [sp, #236]	; 0xec
   36706:	ldr	r1, [sp, #232]	; 0xe8
   36708:	ldr	r7, [sp, #156]	; 0x9c
   3670a:	adds	r3, r3, r1
   3670c:	ldr	r1, [sp, #236]	; 0xec
   3670e:	eor.w	r4, r4, r3
   36712:	adc.w	r0, r1, r0
   36716:	eor.w	r8, r0, r8
   3671a:	mov.w	r1, r8, lsl #1
   3671e:	orr.w	r6, r1, r4, lsr #31
   36722:	lsls	r4, r4, #1
   36724:	orr.w	fp, r4, r8, lsr #31
   36728:	ldr	r1, [sp, #20]
   3672a:	ldr	r4, [sp, #152]	; 0x98
   3672c:	adds	r1, r1, r4
   3672e:	ldr	r4, [sp, #24]
   36730:	adc.w	sl, r4, r7
   36734:	adds.w	r1, r1, fp
   36738:	ldr	r4, [sp, #228]	; 0xe4
   3673a:	adc.w	sl, sl, r6
   3673e:	eor.w	lr, sl, r9
   36742:	adds.w	r2, r2, lr
   36746:	eor.w	r7, r1, r4
   3674a:	adc.w	r5, r7, r5
   3674e:	eor.w	fp, r2, fp
   36752:	eor.w	ip, r5, r6
   36756:	mov.w	r4, fp, lsr #24
   3675a:	orr.w	r6, r4, ip, lsl #8
   3675e:	ldr	r4, [sp, #100]	; 0x64
   36760:	mov.w	ip, ip, lsr #24
   36764:	adds	r1, r4, r1
   36766:	ldr	r4, [sp, #104]	; 0x68
   36768:	orr.w	r8, ip, fp, lsl #8
   3676c:	adc.w	sl, r4, sl
   36770:	adds	r1, r1, r6
   36772:	str	r1, [sp, #152]	; 0x98
   36774:	adc.w	r1, sl, r8
   36778:	str	r1, [sp, #156]	; 0x9c
   3677a:	ldr	r1, [sp, #152]	; 0x98
   3677c:	eor.w	lr, r1, lr
   36780:	ldr	r1, [sp, #156]	; 0x9c
   36782:	eors	r7, r1
   36784:	mov.w	r1, lr, lsr #16
   36788:	orr.w	r1, r1, r7, lsl #16
   3678c:	lsrs	r7, r7, #16
   3678e:	str	r1, [sp, #228]	; 0xe4
   36790:	orr.w	r1, r7, lr, lsl #16
   36794:	str	r1, [sp, #260]	; 0x104
   36796:	ldr	r1, [sp, #228]	; 0xe4
   36798:	adds	r2, r2, r1
   3679a:	str	r2, [sp, #192]	; 0xc0
   3679c:	ldr	r2, [sp, #260]	; 0x104
   3679e:	ldr	r1, [sp, #168]	; 0xa8
   367a0:	adc.w	r2, r5, r2
   367a4:	str	r2, [sp, #196]	; 0xc4
   367a6:	ldr	r2, [sp, #192]	; 0xc0
   367a8:	eors	r6, r2
   367aa:	ldr	r2, [sp, #196]	; 0xc4
   367ac:	eor.w	r8, r2, r8
   367b0:	mov.w	r2, r8, lsl #1
   367b4:	orr.w	r2, r2, r6, lsr #31
   367b8:	lsls	r6, r6, #1
   367ba:	str	r2, [sp, #268]	; 0x10c
   367bc:	orr.w	r2, r6, r8, lsr #31
   367c0:	str	r2, [sp, #264]	; 0x108
   367c2:	ldr	r2, [sp, #52]	; 0x34
   367c4:	adds	r2, r2, r1
   367c6:	ldr	r1, [sp, #56]	; 0x38
   367c8:	ldr	r4, [sp, #172]	; 0xac
   367ca:	ldr	r5, [sp, #252]	; 0xfc
   367cc:	adc.w	r7, r1, r4
   367d0:	ldr	r1, [sp, #244]	; 0xf4
   367d2:	ldr	r4, [sp, #244]	; 0xf4
   367d4:	adds	r2, r2, r1
   367d6:	ldr	r1, [sp, #252]	; 0xfc
   367d8:	adc.w	r7, r1, r7
   367dc:	ldr	r1, [sp, #212]	; 0xd4
   367de:	eor.w	r6, r7, r1
   367e2:	ldr	r1, [sp, #208]	; 0xd0
   367e4:	adds	r3, r3, r6
   367e6:	eor.w	r1, r2, r1
   367ea:	eor.w	r4, r3, r4
   367ee:	adc.w	r0, r1, r0
   367f2:	eors	r5, r0
   367f4:	mov.w	r8, r4, lsr #24
   367f8:	orr.w	ip, r8, r5, lsl #8
   367fc:	lsrs	r5, r5, #24
   367fe:	orr.w	lr, r5, r4, lsl #8
   36802:	ldr	r4, [sp, #84]	; 0x54
   36804:	adds	r2, r4, r2
   36806:	ldr	r4, [sp, #88]	; 0x58
   36808:	adc.w	r7, r4, r7
   3680c:	adds.w	r2, r2, ip
   36810:	str	r2, [sp, #168]	; 0xa8
   36812:	adc.w	r2, r7, lr
   36816:	str	r2, [sp, #172]	; 0xac
   36818:	ldr	r2, [sp, #168]	; 0xa8
   3681a:	eors	r6, r2
   3681c:	ldr	r2, [sp, #172]	; 0xac
   3681e:	eors	r1, r2
   36820:	lsrs	r2, r6, #16
   36822:	orr.w	r2, r2, r1, lsl #16
   36826:	lsrs	r1, r1, #16
   36828:	str	r2, [sp, #208]	; 0xd0
   3682a:	orr.w	r2, r1, r6, lsl #16
   3682e:	str	r2, [sp, #212]	; 0xd4
   36830:	ldr	r2, [sp, #208]	; 0xd0
   36832:	ldr	r1, [sp, #164]	; 0xa4
   36834:	adds	r3, r3, r2
   36836:	str	r3, [sp, #200]	; 0xc8
   36838:	ldr	r3, [sp, #212]	; 0xd4
   3683a:	adc.w	r3, r0, r3
   3683e:	str	r3, [sp, #204]	; 0xcc
   36840:	ldr	r2, [sp, #204]	; 0xcc
   36842:	ldr	r3, [sp, #200]	; 0xc8
   36844:	eor.w	lr, r2, lr
   36848:	eor.w	r3, r3, ip
   3684c:	mov.w	r2, lr, lsl #1
   36850:	orr.w	r2, r2, r3, lsr #31
   36854:	mov.w	ip, r3, lsl #1
   36858:	str	r2, [sp, #244]	; 0xf4
   3685a:	orr.w	ip, ip, lr, lsr #31
   3685e:	ldr	r2, [sp, #160]	; 0xa0
   36860:	ldr	r3, [sp, #4]
   36862:	adds	r3, r3, r2
   36864:	ldr	r2, [sp, #8]
   36866:	adc.w	lr, r2, r1
   3686a:	ldr	r2, [sp, #240]	; 0xf0
   3686c:	adds	r3, r3, r2
   3686e:	ldr	r2, [sp, #248]	; 0xf8
   36870:	adc.w	lr, lr, r2
   36874:	ldr	r2, [sp, #236]	; 0xec
   36876:	eor.w	r6, lr, r2
   3687a:	ldr	r2, [sp, #232]	; 0xe8
   3687c:	eor.w	r0, r3, r2
   36880:	ldr	r2, [sp, #176]	; 0xb0
   36882:	ldr	r1, [sp, #180]	; 0xb4
   36884:	adds	r2, r2, r6
   36886:	adc.w	r5, r1, r0
   3688a:	ldr	r1, [sp, #240]	; 0xf0
   3688c:	eor.w	r8, r2, r1
   36890:	ldr	r1, [sp, #248]	; 0xf8
   36892:	eor.w	r4, r5, r1
   36896:	mov.w	r9, r8, lsr #24
   3689a:	orr.w	r1, r9, r4, lsl #8
   3689e:	lsrs	r4, r4, #24
   368a0:	orr.w	r7, r4, r8, lsl #8
   368a4:	ldr	r4, [sp, #92]	; 0x5c
   368a6:	adds	r3, r4, r3
   368a8:	ldr	r4, [sp, #96]	; 0x60
   368aa:	adc.w	lr, r4, lr
   368ae:	adds	r3, r3, r1
   368b0:	str	r3, [sp, #160]	; 0xa0
   368b2:	adc.w	r3, lr, r7
   368b6:	str	r3, [sp, #164]	; 0xa4
   368b8:	ldr	r3, [sp, #160]	; 0xa0
   368ba:	ldr	r4, [sp, #216]	; 0xd8
   368bc:	eors	r6, r3
   368be:	ldr	r3, [sp, #164]	; 0xa4
   368c0:	eors	r0, r3
   368c2:	lsrs	r3, r6, #16
   368c4:	orr.w	r3, r3, r0, lsl #16
   368c8:	lsrs	r0, r0, #16
   368ca:	str	r3, [sp, #232]	; 0xe8
   368cc:	orr.w	r3, r0, r6, lsl #16
   368d0:	str	r3, [sp, #236]	; 0xec
   368d2:	ldr	r3, [sp, #232]	; 0xe8
   368d4:	ldr	r0, [sp, #148]	; 0x94
   368d6:	adds	r2, r2, r3
   368d8:	ldr	r3, [sp, #236]	; 0xec
   368da:	eor.w	r1, r1, r2
   368de:	adc.w	r5, r3, r5
   368e2:	eors	r7, r5
   368e4:	lsls	r3, r7, #1
   368e6:	orr.w	r3, r3, r1, lsr #31
   368ea:	lsls	r1, r1, #1
   368ec:	str	r3, [sp, #248]	; 0xf8
   368ee:	orr.w	r3, r1, r7, lsr #31
   368f2:	ldr	r1, [sp, #144]	; 0x90
   368f4:	str	r3, [sp, #240]	; 0xf0
   368f6:	ldr	r3, [sp, #68]	; 0x44
   368f8:	adds	r1, r3, r1
   368fa:	ldr	r3, [sp, #72]	; 0x48
   368fc:	adc.w	sl, r3, r0
   36900:	ldr	r3, [sp, #216]	; 0xd8
   36902:	ldr	r0, [sp, #188]	; 0xbc
   36904:	adds	r1, r1, r3
   36906:	ldr	r3, [sp, #256]	; 0x100
   36908:	adc.w	sl, sl, r3
   3690c:	ldr	r3, [sp, #224]	; 0xe0
   3690e:	eor.w	lr, sl, r3
   36912:	ldr	r3, [sp, #220]	; 0xdc
   36914:	eor.w	r6, r1, r3
   36918:	ldr	r3, [sp, #184]	; 0xb8
   3691a:	adds.w	r3, r3, lr
   3691e:	eor.w	r8, r3, r4
   36922:	ldr	r4, [sp, #256]	; 0x100
   36924:	adcs	r0, r6
   36926:	eor.w	r7, r0, r4
   3692a:	mov.w	fp, r8, lsr #24
   3692e:	orr.w	r4, fp, r7, lsl #8
   36932:	lsrs	r7, r7, #24
   36934:	orr.w	r9, r7, r8, lsl #8
   36938:	ldr	r7, [sp, #28]
   3693a:	adds	r1, r7, r1
   3693c:	ldr	r7, [sp, #32]
   3693e:	adc.w	sl, r7, sl
   36942:	adds	r1, r1, r4
   36944:	str	r1, [sp, #144]	; 0x90
   36946:	adc.w	r1, sl, r9
   3694a:	str	r1, [sp, #148]	; 0x94
   3694c:	ldr	r1, [sp, #144]	; 0x90
   3694e:	eor.w	lr, r1, lr
   36952:	ldr	r1, [sp, #148]	; 0x94
   36954:	eors	r6, r1
   36956:	mov.w	r1, lr, lsr #16
   3695a:	orr.w	r8, r1, r6, lsl #16
   3695e:	lsrs	r6, r6, #16
   36960:	adds.w	r3, r3, r8
   36964:	orr.w	sl, r6, lr, lsl #16
   36968:	adc.w	r0, r0, sl
   3696c:	eors	r4, r3
   3696e:	eor.w	r9, r0, r9
   36972:	ldr	r6, [sp, #156]	; 0x9c
   36974:	mov.w	r1, r9, lsl #1
   36978:	orr.w	r1, r1, r4, lsr #31
   3697c:	lsls	r4, r4, #1
   3697e:	orr.w	fp, r4, r9, lsr #31
   36982:	str	r1, [sp, #216]	; 0xd8
   36984:	ldr	r4, [sp, #152]	; 0x98
   36986:	ldr	r1, [sp, #36]	; 0x24
   36988:	adds	r1, r1, r4
   3698a:	ldr	r4, [sp, #40]	; 0x28
   3698c:	adc.w	r9, r4, r6
   36990:	ldr	r4, [sp, #244]	; 0xf4
   36992:	adds.w	r1, r1, ip
   36996:	adc.w	r9, r9, r4
   3699a:	eor.w	r7, r1, r8
   3699e:	eor.w	lr, r9, sl
   369a2:	adds.w	r2, r2, lr
   369a6:	adc.w	r5, r7, r5
   369aa:	eor.w	ip, r2, ip
   369ae:	eor.w	r6, r5, r4
   369b2:	mov.w	sl, ip, lsr #24
   369b6:	orr.w	r4, sl, r6, lsl #8
   369ba:	lsrs	r6, r6, #24
   369bc:	orr.w	r8, r6, ip, lsl #8
   369c0:	ldr	r6, [sp, #108]	; 0x6c
   369c2:	adds	r1, r6, r1
   369c4:	ldr	r6, [sp, #112]	; 0x70
   369c6:	adc.w	r9, r6, r9
   369ca:	adds	r1, r1, r4
   369cc:	str	r1, [sp, #152]	; 0x98
   369ce:	adc.w	r1, r9, r8
   369d2:	str	r1, [sp, #156]	; 0x9c
   369d4:	ldr	r1, [sp, #152]	; 0x98
   369d6:	eor.w	lr, r1, lr
   369da:	ldr	r1, [sp, #156]	; 0x9c
   369dc:	eors	r7, r1
   369de:	mov.w	r1, lr, lsr #16
   369e2:	orr.w	r1, r1, r7, lsl #16
   369e6:	lsrs	r7, r7, #16
   369e8:	str	r1, [sp, #220]	; 0xdc
   369ea:	orr.w	r1, r7, lr, lsl #16
   369ee:	str	r1, [sp, #224]	; 0xe0
   369f0:	ldr	r1, [sp, #220]	; 0xdc
   369f2:	adds	r2, r2, r1
   369f4:	str	r2, [sp, #176]	; 0xb0
   369f6:	ldr	r2, [sp, #224]	; 0xe0
   369f8:	ldr	r1, [sp, #168]	; 0xa8
   369fa:	adc.w	r2, r5, r2
   369fe:	str	r2, [sp, #180]	; 0xb4
   36a00:	ldr	r2, [sp, #176]	; 0xb0
   36a02:	eors	r4, r2
   36a04:	ldr	r2, [sp, #180]	; 0xb4
   36a06:	eor.w	r8, r2, r8
   36a0a:	mov.w	r2, r8, lsl #1
   36a0e:	orr.w	r2, r2, r4, lsr #31
   36a12:	lsls	r4, r4, #1
   36a14:	str	r2, [sp, #252]	; 0xfc
   36a16:	orr.w	r2, r4, r8, lsr #31
   36a1a:	str	r2, [sp, #244]	; 0xf4
   36a1c:	ldr	r2, [sp, #60]	; 0x3c
   36a1e:	ldr	r4, [sp, #172]	; 0xac
   36a20:	adds	r2, r2, r1
   36a22:	ldr	r1, [sp, #64]	; 0x40
   36a24:	adc.w	r7, r1, r4
   36a28:	ldr	r1, [sp, #240]	; 0xf0
   36a2a:	adds	r2, r2, r1
   36a2c:	ldr	r1, [sp, #248]	; 0xf8
   36a2e:	adc.w	r7, r1, r7
   36a32:	ldr	r1, [sp, #260]	; 0x104
   36a34:	eor.w	r4, r7, r1
   36a38:	ldr	r1, [sp, #228]	; 0xe4
   36a3a:	adds	r3, r3, r4
   36a3c:	eor.w	r9, r2, r1
   36a40:	ldr	r1, [sp, #240]	; 0xf0
   36a42:	adc.w	r0, r0, r9
   36a46:	eor.w	ip, r3, r1
   36a4a:	ldr	r1, [sp, #248]	; 0xf8
   36a4c:	eor.w	r5, r0, r1
   36a50:	mov.w	lr, ip, lsr #24
   36a54:	orr.w	r1, lr, r5, lsl #8
   36a58:	lsrs	r5, r5, #24
   36a5a:	orr.w	r6, r5, ip, lsl #8
   36a5e:	ldr	r5, [sp, #44]	; 0x2c
   36a60:	adds	r2, r5, r2
   36a62:	ldr	r5, [sp, #48]	; 0x30
   36a64:	adc.w	r7, r5, r7
   36a68:	adds	r2, r2, r1
   36a6a:	str	r2, [sp, #168]	; 0xa8
   36a6c:	adc.w	r2, r7, r6
   36a70:	str	r2, [sp, #172]	; 0xac
   36a72:	ldr	r2, [sp, #168]	; 0xa8
   36a74:	eors	r4, r2
   36a76:	ldr	r2, [sp, #172]	; 0xac
   36a78:	eor.w	r2, r2, r9
   36a7c:	lsrs	r5, r4, #16
   36a7e:	orr.w	r5, r5, r2, lsl #16
   36a82:	mov.w	r9, r2, lsr #16
   36a86:	orr.w	r9, r9, r4, lsl #16
   36a8a:	adds	r3, r3, r5
   36a8c:	str	r3, [sp, #184]	; 0xb8
   36a8e:	adc.w	r3, r0, r9
   36a92:	str	r3, [sp, #188]	; 0xbc
   36a94:	ldr	r3, [sp, #184]	; 0xb8
   36a96:	ldr	r2, [sp, #160]	; 0xa0
   36a98:	eors	r1, r3
   36a9a:	ldr	r3, [sp, #188]	; 0xbc
   36a9c:	ldr	r0, [sp, #196]	; 0xc4
   36a9e:	eors	r6, r3
   36aa0:	str	r5, [sp, #228]	; 0xe4
   36aa2:	lsls	r3, r6, #1
   36aa4:	orr.w	r3, r3, r1, lsr #31
   36aa8:	lsls	r1, r1, #1
   36aaa:	str	r3, [sp, #248]	; 0xf8
   36aac:	orr.w	r3, r1, r6, lsr #31
   36ab0:	str	r3, [sp, #240]	; 0xf0
   36ab2:	ldr	r3, [sp, #124]	; 0x7c
   36ab4:	ldr	r1, [sp, #164]	; 0xa4
   36ab6:	adds	r3, r3, r2
   36ab8:	ldr	r2, [sp, #128]	; 0x80
   36aba:	adc.w	ip, r2, r1
   36abe:	ldr	r2, [sp, #216]	; 0xd8
   36ac0:	adds.w	r3, r3, fp
   36ac4:	adc.w	ip, ip, r2
   36ac8:	ldr	r2, [sp, #212]	; 0xd4
   36aca:	eor.w	r7, ip, r2
   36ace:	ldr	r2, [sp, #208]	; 0xd0
   36ad0:	eor.w	r1, r3, r2
   36ad4:	ldr	r2, [sp, #192]	; 0xc0
   36ad6:	adds	r2, r2, r7
   36ad8:	adc.w	r5, r0, r1
   36adc:	ldr	r0, [sp, #216]	; 0xd8
   36ade:	eor.w	fp, r2, fp
   36ae2:	eors	r0, r5
   36ae4:	mov.w	r4, fp, lsr #24
   36ae8:	orr.w	r8, r4, r0, lsl #8
   36aec:	lsrs	r0, r0, #24
   36aee:	orr.w	r6, r0, fp, lsl #8
   36af2:	ldr	r0, [sp, #116]	; 0x74
   36af4:	adds	r3, r0, r3
   36af6:	ldr	r0, [sp, #120]	; 0x78
   36af8:	adc.w	ip, r0, ip
   36afc:	adds.w	r3, r3, r8
   36b00:	str	r3, [sp, #160]	; 0xa0
   36b02:	adc.w	r3, ip, r6
   36b06:	str	r3, [sp, #164]	; 0xa4
   36b08:	ldr	r3, [sp, #160]	; 0xa0
   36b0a:	eors	r7, r3
   36b0c:	ldr	r3, [sp, #164]	; 0xa4
   36b0e:	eors	r1, r3
   36b10:	lsrs	r3, r7, #16
   36b12:	orr.w	r3, r3, r1, lsl #16
   36b16:	lsrs	r1, r1, #16
   36b18:	str	r3, [sp, #208]	; 0xd0
   36b1a:	orr.w	r3, r1, r7, lsl #16
   36b1e:	str	r3, [sp, #212]	; 0xd4
   36b20:	ldr	r3, [sp, #208]	; 0xd0
   36b22:	ldr	r1, [sp, #144]	; 0x90
   36b24:	adds	r2, r2, r3
   36b26:	ldr	r3, [sp, #212]	; 0xd4
   36b28:	eor.w	r8, r2, r8
   36b2c:	ldr	r0, [sp, #148]	; 0x94
   36b2e:	adc.w	r5, r3, r5
   36b32:	ldr	r4, [sp, #264]	; 0x108
   36b34:	eors	r6, r5
   36b36:	lsls	r3, r6, #1
   36b38:	orr.w	r3, r3, r8, lsr #31
   36b3c:	mov.w	r8, r8, lsl #1
   36b40:	str	r3, [sp, #256]	; 0x100
   36b42:	orr.w	r3, r8, r6, lsr #31
   36b46:	str	r3, [sp, #216]	; 0xd8
   36b48:	ldr	r3, [sp, #12]
   36b4a:	adds	r1, r3, r1
   36b4c:	ldr	r3, [sp, #16]
   36b4e:	adc.w	sl, r3, r0
   36b52:	ldr	r3, [sp, #264]	; 0x108
   36b54:	ldr	r0, [sp, #204]	; 0xcc
   36b56:	adds	r1, r1, r3
   36b58:	ldr	r3, [sp, #268]	; 0x10c
   36b5a:	adc.w	sl, sl, r3
   36b5e:	ldr	r3, [sp, #236]	; 0xec
   36b60:	eor.w	lr, sl, r3
   36b64:	ldr	r3, [sp, #232]	; 0xe8
   36b66:	eor.w	r7, r1, r3
   36b6a:	ldr	r3, [sp, #200]	; 0xc8
   36b6c:	adds.w	r3, r3, lr
   36b70:	eor.w	r6, r3, r4
   36b74:	ldr	r4, [sp, #268]	; 0x10c
   36b76:	adcs	r0, r7
   36b78:	eor.w	ip, r0, r4
   36b7c:	mov.w	fp, r6, lsr #24
   36b80:	orr.w	r4, fp, ip, lsl #8
   36b84:	mov.w	ip, ip, lsr #24
   36b88:	orr.w	r8, ip, r6, lsl #8
   36b8c:	ldr	r6, [sp, #76]	; 0x4c
   36b8e:	adds	r1, r6, r1
   36b90:	ldr	r6, [sp, #80]	; 0x50
   36b92:	adc.w	sl, r6, sl
   36b96:	adds	r1, r1, r4
   36b98:	str	r1, [sp, #144]	; 0x90
   36b9a:	adc.w	r1, sl, r8
   36b9e:	str	r1, [sp, #148]	; 0x94
   36ba0:	ldr	r1, [sp, #144]	; 0x90
   36ba2:	eor.w	lr, r1, lr
   36ba6:	ldr	r1, [sp, #148]	; 0x94
   36ba8:	eors	r7, r1
   36baa:	mov.w	r1, lr, lsr #16
   36bae:	orr.w	r1, r1, r7, lsl #16
   36bb2:	lsrs	r7, r7, #16
   36bb4:	str	r1, [sp, #232]	; 0xe8
   36bb6:	orr.w	r1, r7, lr, lsl #16
   36bba:	str	r1, [sp, #236]	; 0xec
   36bbc:	ldr	r1, [sp, #232]	; 0xe8
   36bbe:	ldr	r7, [sp, #156]	; 0x9c
   36bc0:	adds	r3, r3, r1
   36bc2:	ldr	r1, [sp, #236]	; 0xec
   36bc4:	eor.w	r4, r4, r3
   36bc8:	adc.w	r0, r1, r0
   36bcc:	eor.w	r8, r0, r8
   36bd0:	mov.w	r1, r8, lsl #1
   36bd4:	orr.w	r6, r1, r4, lsr #31
   36bd8:	lsls	r4, r4, #1
   36bda:	orr.w	fp, r4, r8, lsr #31
   36bde:	ldr	r1, [sp, #100]	; 0x64
   36be0:	ldr	r4, [sp, #152]	; 0x98
   36be2:	adds	r1, r1, r4
   36be4:	ldr	r4, [sp, #104]	; 0x68
   36be6:	adc.w	sl, r4, r7
   36bea:	adds.w	r1, r1, fp
   36bee:	adc.w	sl, sl, r6
   36bf2:	ldr	r4, [sp, #228]	; 0xe4
   36bf4:	eor.w	lr, sl, r9
   36bf8:	adds.w	r2, r2, lr
   36bfc:	eor.w	r7, r1, r4
   36c00:	adc.w	r5, r7, r5
   36c04:	eor.w	fp, r2, fp
   36c08:	eor.w	ip, r5, r6
   36c0c:	mov.w	r4, fp, lsr #24
   36c10:	orr.w	r6, r4, ip, lsl #8
   36c14:	ldr	r4, [sp, #44]	; 0x2c
   36c16:	mov.w	ip, ip, lsr #24
   36c1a:	adds	r1, r4, r1
   36c1c:	ldr	r4, [sp, #48]	; 0x30
   36c1e:	orr.w	r8, ip, fp, lsl #8
   36c22:	adc.w	sl, r4, sl
   36c26:	adds	r1, r1, r6
   36c28:	str	r1, [sp, #152]	; 0x98
   36c2a:	adc.w	r1, sl, r8
   36c2e:	str	r1, [sp, #156]	; 0x9c
   36c30:	ldr	r1, [sp, #152]	; 0x98
   36c32:	ldr	r4, [sp, #172]	; 0xac
   36c34:	eor.w	lr, r1, lr
   36c38:	ldr	r1, [sp, #156]	; 0x9c
   36c3a:	eors	r7, r1
   36c3c:	mov.w	r1, lr, lsr #16
   36c40:	orr.w	r1, r1, r7, lsl #16
   36c44:	lsrs	r7, r7, #16
   36c46:	str	r1, [sp, #228]	; 0xe4
   36c48:	orr.w	r1, r7, lr, lsl #16
   36c4c:	str	r1, [sp, #260]	; 0x104
   36c4e:	ldr	r1, [sp, #228]	; 0xe4
   36c50:	adds	r2, r2, r1
   36c52:	str	r2, [sp, #192]	; 0xc0
   36c54:	ldr	r2, [sp, #260]	; 0x104
   36c56:	ldr	r1, [sp, #168]	; 0xa8
   36c58:	adc.w	r2, r5, r2
   36c5c:	str	r2, [sp, #196]	; 0xc4
   36c5e:	ldr	r2, [sp, #192]	; 0xc0
   36c60:	ldr	r5, [sp, #252]	; 0xfc
   36c62:	eors	r6, r2
   36c64:	ldr	r2, [sp, #196]	; 0xc4
   36c66:	eor.w	r8, r2, r8
   36c6a:	mov.w	r2, r8, lsl #1
   36c6e:	orr.w	r2, r2, r6, lsr #31
   36c72:	lsls	r6, r6, #1
   36c74:	str	r2, [sp, #268]	; 0x10c
   36c76:	orr.w	r2, r6, r8, lsr #31
   36c7a:	str	r2, [sp, #264]	; 0x108
   36c7c:	ldr	r2, [sp, #12]
   36c7e:	adds	r2, r2, r1
   36c80:	ldr	r1, [sp, #16]
   36c82:	adc.w	r7, r1, r4
   36c86:	ldr	r1, [sp, #244]	; 0xf4
   36c88:	ldr	r4, [sp, #244]	; 0xf4
   36c8a:	adds	r2, r2, r1
   36c8c:	ldr	r1, [sp, #252]	; 0xfc
   36c8e:	adc.w	r7, r1, r7
   36c92:	ldr	r1, [sp, #212]	; 0xd4
   36c94:	eor.w	r6, r7, r1
   36c98:	ldr	r1, [sp, #208]	; 0xd0
   36c9a:	adds	r3, r3, r6
   36c9c:	eor.w	r1, r2, r1
   36ca0:	eor.w	r4, r3, r4
   36ca4:	adc.w	r0, r1, r0
   36ca8:	eors	r5, r0
   36caa:	mov.w	r8, r4, lsr #24
   36cae:	orr.w	ip, r8, r5, lsl #8
   36cb2:	lsrs	r5, r5, #24
   36cb4:	orr.w	lr, r5, r4, lsl #8
   36cb8:	ldr	r4, [sp, #124]	; 0x7c
   36cba:	adds	r2, r4, r2
   36cbc:	ldr	r4, [sp, #128]	; 0x80
   36cbe:	adc.w	r7, r4, r7
   36cc2:	adds.w	r2, r2, ip
   36cc6:	str	r2, [sp, #168]	; 0xa8
   36cc8:	adc.w	r2, r7, lr
   36ccc:	str	r2, [sp, #172]	; 0xac
   36cce:	ldr	r2, [sp, #168]	; 0xa8
   36cd0:	eors	r6, r2
   36cd2:	ldr	r2, [sp, #172]	; 0xac
   36cd4:	eors	r1, r2
   36cd6:	lsrs	r2, r6, #16
   36cd8:	orr.w	r2, r2, r1, lsl #16
   36cdc:	lsrs	r1, r1, #16
   36cde:	str	r2, [sp, #208]	; 0xd0
   36ce0:	orr.w	r2, r1, r6, lsl #16
   36ce4:	str	r2, [sp, #212]	; 0xd4
   36ce6:	ldr	r2, [sp, #208]	; 0xd0
   36ce8:	ldr	r1, [sp, #164]	; 0xa4
   36cea:	adds	r3, r3, r2
   36cec:	str	r3, [sp, #200]	; 0xc8
   36cee:	ldr	r3, [sp, #212]	; 0xd4
   36cf0:	adc.w	r3, r0, r3
   36cf4:	str	r3, [sp, #204]	; 0xcc
   36cf6:	ldr	r2, [sp, #204]	; 0xcc
   36cf8:	ldr	r3, [sp, #200]	; 0xc8
   36cfa:	eor.w	lr, r2, lr
   36cfe:	eor.w	r3, r3, ip
   36d02:	mov.w	r2, lr, lsl #1
   36d06:	orr.w	r2, r2, r3, lsr #31
   36d0a:	mov.w	ip, r3, lsl #1
   36d0e:	str	r2, [sp, #244]	; 0xf4
   36d10:	orr.w	ip, ip, lr, lsr #31
   36d14:	ldr	r2, [sp, #160]	; 0xa0
   36d16:	ldr	r3, [sp, #116]	; 0x74
   36d18:	adds	r3, r3, r2
   36d1a:	ldr	r2, [sp, #120]	; 0x78
   36d1c:	adc.w	lr, r2, r1
   36d20:	ldr	r2, [sp, #240]	; 0xf0
   36d22:	ldr	r1, [sp, #180]	; 0xb4
   36d24:	adds	r3, r3, r2
   36d26:	ldr	r2, [sp, #248]	; 0xf8
   36d28:	adc.w	lr, lr, r2
   36d2c:	ldr	r2, [sp, #236]	; 0xec
   36d2e:	eor.w	r6, lr, r2
   36d32:	ldr	r2, [sp, #232]	; 0xe8
   36d34:	eor.w	r0, r3, r2
   36d38:	ldr	r2, [sp, #176]	; 0xb0
   36d3a:	adds	r2, r2, r6
   36d3c:	adc.w	r5, r1, r0
   36d40:	ldr	r1, [sp, #240]	; 0xf0
   36d42:	eor.w	r8, r2, r1
   36d46:	ldr	r1, [sp, #248]	; 0xf8
   36d48:	eor.w	r4, r5, r1
   36d4c:	mov.w	r9, r8, lsr #24
   36d50:	orr.w	r1, r9, r4, lsl #8
   36d54:	lsrs	r4, r4, #24
   36d56:	orr.w	r7, r4, r8, lsl #8
   36d5a:	ldr	r4, [sp, #108]	; 0x6c
   36d5c:	adds	r3, r4, r3
   36d5e:	ldr	r4, [sp, #112]	; 0x70
   36d60:	adc.w	lr, r4, lr
   36d64:	adds	r3, r3, r1
   36d66:	str	r3, [sp, #160]	; 0xa0
   36d68:	adc.w	r3, lr, r7
   36d6c:	str	r3, [sp, #164]	; 0xa4
   36d6e:	ldr	r3, [sp, #160]	; 0xa0
   36d70:	eors	r6, r3
   36d72:	ldr	r3, [sp, #164]	; 0xa4
   36d74:	eors	r0, r3
   36d76:	lsrs	r3, r6, #16
   36d78:	orr.w	r3, r3, r0, lsl #16
   36d7c:	lsrs	r0, r0, #16
   36d7e:	str	r3, [sp, #232]	; 0xe8
   36d80:	orr.w	r3, r0, r6, lsl #16
   36d84:	str	r3, [sp, #236]	; 0xec
   36d86:	ldr	r3, [sp, #232]	; 0xe8
   36d88:	adds	r2, r2, r3
   36d8a:	ldr	r3, [sp, #236]	; 0xec
   36d8c:	eor.w	r1, r1, r2
   36d90:	adc.w	r5, r3, r5
   36d94:	eors	r7, r5
   36d96:	lsls	r3, r7, #1
   36d98:	orr.w	r3, r3, r1, lsr #31
   36d9c:	lsls	r1, r1, #1
   36d9e:	str	r3, [sp, #248]	; 0xf8
   36da0:	orr.w	r3, r1, r7, lsr #31
   36da4:	str	r3, [sp, #240]	; 0xf0
   36da6:	ldr	r3, [sp, #36]	; 0x24
   36da8:	ldr	r1, [sp, #144]	; 0x90
   36daa:	ldr	r0, [sp, #148]	; 0x94
   36dac:	adds	r1, r3, r1
   36dae:	ldr	r3, [sp, #40]	; 0x28
   36db0:	ldr	r4, [sp, #216]	; 0xd8
   36db2:	adc.w	sl, r3, r0
   36db6:	ldr	r3, [sp, #216]	; 0xd8
   36db8:	ldr	r0, [sp, #188]	; 0xbc
   36dba:	adds	r1, r1, r3
   36dbc:	ldr	r3, [sp, #256]	; 0x100
   36dbe:	adc.w	sl, sl, r3
   36dc2:	ldr	r3, [sp, #224]	; 0xe0
   36dc4:	eor.w	lr, sl, r3
   36dc8:	ldr	r3, [sp, #220]	; 0xdc
   36dca:	eor.w	r6, r1, r3
   36dce:	ldr	r3, [sp, #184]	; 0xb8
   36dd0:	adds.w	r3, r3, lr
   36dd4:	eor.w	r8, r3, r4
   36dd8:	ldr	r4, [sp, #256]	; 0x100
   36dda:	adcs	r0, r6
   36ddc:	eor.w	r7, r0, r4
   36de0:	mov.w	fp, r8, lsr #24
   36de4:	orr.w	r4, fp, r7, lsl #8
   36de8:	lsrs	r7, r7, #24
   36dea:	orr.w	r9, r7, r8, lsl #8
   36dee:	ldr	r7, [sp, #84]	; 0x54
   36df0:	adds	r1, r7, r1
   36df2:	ldr	r7, [sp, #88]	; 0x58
   36df4:	adc.w	sl, r7, sl
   36df8:	adds	r1, r1, r4
   36dfa:	str	r1, [sp, #144]	; 0x90
   36dfc:	adc.w	r1, sl, r9
   36e00:	str	r1, [sp, #148]	; 0x94
   36e02:	ldr	r1, [sp, #144]	; 0x90
   36e04:	eor.w	lr, r1, lr
   36e08:	ldr	r1, [sp, #148]	; 0x94
   36e0a:	eors	r6, r1
   36e0c:	mov.w	r1, lr, lsr #16
   36e10:	orr.w	r8, r1, r6, lsl #16
   36e14:	lsrs	r6, r6, #16
   36e16:	adds.w	r3, r3, r8
   36e1a:	orr.w	sl, r6, lr, lsl #16
   36e1e:	adc.w	r0, r0, sl
   36e22:	eors	r4, r3
   36e24:	eor.w	r9, r0, r9
   36e28:	ldr	r6, [sp, #156]	; 0x9c
   36e2a:	mov.w	r1, r9, lsl #1
   36e2e:	orr.w	r1, r1, r4, lsr #31
   36e32:	lsls	r4, r4, #1
   36e34:	orr.w	fp, r4, r9, lsr #31
   36e38:	str	r1, [sp, #216]	; 0xd8
   36e3a:	ldr	r4, [sp, #152]	; 0x98
   36e3c:	ldr	r1, [sp, #4]
   36e3e:	adds	r1, r1, r4
   36e40:	ldr	r4, [sp, #8]
   36e42:	adc.w	r9, r4, r6
   36e46:	ldr	r4, [sp, #244]	; 0xf4
   36e48:	adds.w	r1, r1, ip
   36e4c:	adc.w	r9, r9, r4
   36e50:	eor.w	r7, r1, r8
   36e54:	eor.w	lr, r9, sl
   36e58:	adds.w	r2, r2, lr
   36e5c:	adc.w	r5, r7, r5
   36e60:	eor.w	ip, r2, ip
   36e64:	eor.w	r6, r5, r4
   36e68:	mov.w	sl, ip, lsr #24
   36e6c:	orr.w	r4, sl, r6, lsl #8
   36e70:	lsrs	r6, r6, #24
   36e72:	orr.w	r8, r6, ip, lsl #8
   36e76:	ldr	r6, [sp, #60]	; 0x3c
   36e78:	adds	r1, r6, r1
   36e7a:	ldr	r6, [sp, #64]	; 0x40
   36e7c:	adc.w	r9, r6, r9
   36e80:	adds	r1, r1, r4
   36e82:	str	r1, [sp, #152]	; 0x98
   36e84:	adc.w	r1, r9, r8
   36e88:	str	r1, [sp, #156]	; 0x9c
   36e8a:	ldr	r1, [sp, #152]	; 0x98
   36e8c:	eor.w	lr, r1, lr
   36e90:	ldr	r1, [sp, #156]	; 0x9c
   36e92:	eors	r7, r1
   36e94:	mov.w	r1, lr, lsr #16
   36e98:	orr.w	r1, r1, r7, lsl #16
   36e9c:	lsrs	r7, r7, #16
   36e9e:	str	r1, [sp, #220]	; 0xdc
   36ea0:	orr.w	r1, r7, lr, lsl #16
   36ea4:	str	r1, [sp, #224]	; 0xe0
   36ea6:	ldr	r1, [sp, #220]	; 0xdc
   36ea8:	adds	r2, r2, r1
   36eaa:	str	r2, [sp, #176]	; 0xb0
   36eac:	ldr	r2, [sp, #224]	; 0xe0
   36eae:	ldr	r1, [sp, #168]	; 0xa8
   36eb0:	adc.w	r2, r5, r2
   36eb4:	str	r2, [sp, #180]	; 0xb4
   36eb6:	ldr	r2, [sp, #176]	; 0xb0
   36eb8:	eors	r4, r2
   36eba:	ldr	r2, [sp, #180]	; 0xb4
   36ebc:	eor.w	r8, r2, r8
   36ec0:	mov.w	r2, r8, lsl #1
   36ec4:	orr.w	r2, r2, r4, lsr #31
   36ec8:	lsls	r4, r4, #1
   36eca:	str	r2, [sp, #252]	; 0xfc
   36ecc:	orr.w	r2, r4, r8, lsr #31
   36ed0:	str	r2, [sp, #244]	; 0xf4
   36ed2:	ldr	r2, [sp, #52]	; 0x34
   36ed4:	ldr	r4, [sp, #172]	; 0xac
   36ed6:	adds	r2, r2, r1
   36ed8:	ldr	r1, [sp, #56]	; 0x38
   36eda:	adc.w	r7, r1, r4
   36ede:	ldr	r1, [sp, #240]	; 0xf0
   36ee0:	adds	r2, r2, r1
   36ee2:	ldr	r1, [sp, #248]	; 0xf8
   36ee4:	adc.w	r7, r1, r7
   36ee8:	ldr	r1, [sp, #260]	; 0x104
   36eea:	eor.w	r4, r7, r1
   36eee:	ldr	r1, [sp, #228]	; 0xe4
   36ef0:	adds	r3, r3, r4
   36ef2:	eor.w	r9, r2, r1
   36ef6:	ldr	r1, [sp, #240]	; 0xf0
   36ef8:	adc.w	r0, r0, r9
   36efc:	eor.w	ip, r3, r1
   36f00:	ldr	r1, [sp, #248]	; 0xf8
   36f02:	eor.w	r5, r0, r1
   36f06:	mov.w	lr, ip, lsr #24
   36f0a:	orr.w	r1, lr, r5, lsl #8
   36f0e:	lsrs	r5, r5, #24
   36f10:	orr.w	r6, r5, ip, lsl #8
   36f14:	ldr	r5, [sp, #28]
   36f16:	adds	r2, r5, r2
   36f18:	ldr	r5, [sp, #32]
   36f1a:	adc.w	r7, r5, r7
   36f1e:	adds	r2, r2, r1
   36f20:	str	r2, [sp, #168]	; 0xa8
   36f22:	adc.w	r2, r7, r6
   36f26:	str	r2, [sp, #172]	; 0xac
   36f28:	ldr	r2, [sp, #168]	; 0xa8
   36f2a:	eors	r4, r2
   36f2c:	ldr	r2, [sp, #172]	; 0xac
   36f2e:	eor.w	r2, r2, r9
   36f32:	lsrs	r5, r4, #16
   36f34:	orr.w	r5, r5, r2, lsl #16
   36f38:	mov.w	r9, r2, lsr #16
   36f3c:	orr.w	r9, r9, r4, lsl #16
   36f40:	adds	r3, r3, r5
   36f42:	str	r3, [sp, #184]	; 0xb8
   36f44:	adc.w	r3, r0, r9
   36f48:	str	r3, [sp, #188]	; 0xbc
   36f4a:	ldr	r3, [sp, #184]	; 0xb8
   36f4c:	ldr	r2, [sp, #160]	; 0xa0
   36f4e:	eors	r1, r3
   36f50:	ldr	r3, [sp, #188]	; 0xbc
   36f52:	str	r5, [sp, #228]	; 0xe4
   36f54:	eors	r6, r3
   36f56:	lsls	r3, r6, #1
   36f58:	orr.w	r3, r3, r1, lsr #31
   36f5c:	lsls	r1, r1, #1
   36f5e:	str	r3, [sp, #248]	; 0xf8
   36f60:	orr.w	r3, r1, r6, lsr #31
   36f64:	str	r3, [sp, #240]	; 0xf0
   36f66:	ldr	r3, [sp, #76]	; 0x4c
   36f68:	adds	r3, r3, r2
   36f6a:	ldr	r2, [sp, #80]	; 0x50
   36f6c:	ldr	r1, [sp, #164]	; 0xa4
   36f6e:	ldr	r0, [sp, #196]	; 0xc4
   36f70:	adc.w	ip, r2, r1
   36f74:	ldr	r2, [sp, #216]	; 0xd8
   36f76:	adds.w	r3, r3, fp
   36f7a:	adc.w	ip, ip, r2
   36f7e:	ldr	r2, [sp, #212]	; 0xd4
   36f80:	eor.w	r7, ip, r2
   36f84:	ldr	r2, [sp, #208]	; 0xd0
   36f86:	eor.w	r1, r3, r2
   36f8a:	ldr	r2, [sp, #192]	; 0xc0
   36f8c:	adds	r2, r2, r7
   36f8e:	adc.w	r5, r0, r1
   36f92:	ldr	r0, [sp, #216]	; 0xd8
   36f94:	eor.w	fp, r2, fp
   36f98:	eors	r0, r5
   36f9a:	mov.w	r4, fp, lsr #24
   36f9e:	orr.w	r8, r4, r0, lsl #8
   36fa2:	lsrs	r0, r0, #24
   36fa4:	orr.w	r6, r0, fp, lsl #8
   36fa8:	ldr	r0, [sp, #20]
   36faa:	ldr	r4, [sp, #264]	; 0x108
   36fac:	adds	r3, r0, r3
   36fae:	ldr	r0, [sp, #24]
   36fb0:	adc.w	ip, r0, ip
   36fb4:	adds.w	r3, r3, r8
   36fb8:	str	r3, [sp, #160]	; 0xa0
   36fba:	adc.w	r3, ip, r6
   36fbe:	str	r3, [sp, #164]	; 0xa4
   36fc0:	ldr	r3, [sp, #160]	; 0xa0
   36fc2:	ldr	r0, [sp, #148]	; 0x94
   36fc4:	eors	r7, r3
   36fc6:	ldr	r3, [sp, #164]	; 0xa4
   36fc8:	eors	r1, r3
   36fca:	lsrs	r3, r7, #16
   36fcc:	orr.w	r3, r3, r1, lsl #16
   36fd0:	lsrs	r1, r1, #16
   36fd2:	str	r3, [sp, #208]	; 0xd0
   36fd4:	orr.w	r3, r1, r7, lsl #16
   36fd8:	str	r3, [sp, #212]	; 0xd4
   36fda:	ldr	r3, [sp, #208]	; 0xd0
   36fdc:	ldr	r1, [sp, #144]	; 0x90
   36fde:	adds	r2, r2, r3
   36fe0:	ldr	r3, [sp, #212]	; 0xd4
   36fe2:	eor.w	r8, r2, r8
   36fe6:	adc.w	r5, r3, r5
   36fea:	eors	r6, r5
   36fec:	lsls	r3, r6, #1
   36fee:	orr.w	r3, r3, r8, lsr #31
   36ff2:	mov.w	r8, r8, lsl #1
   36ff6:	str	r3, [sp, #256]	; 0x100
   36ff8:	orr.w	r3, r8, r6, lsr #31
   36ffc:	str	r3, [sp, #216]	; 0xd8
   36ffe:	ldr	r3, [sp, #68]	; 0x44
   37000:	adds	r1, r3, r1
   37002:	ldr	r3, [sp, #72]	; 0x48
   37004:	adc.w	sl, r3, r0
   37008:	ldr	r3, [sp, #264]	; 0x108
   3700a:	ldr	r0, [sp, #204]	; 0xcc
   3700c:	adds	r1, r1, r3
   3700e:	ldr	r3, [sp, #268]	; 0x10c
   37010:	adc.w	sl, sl, r3
   37014:	ldr	r3, [sp, #236]	; 0xec
   37016:	eor.w	lr, sl, r3
   3701a:	ldr	r3, [sp, #232]	; 0xe8
   3701c:	eor.w	r7, r1, r3
   37020:	ldr	r3, [sp, #200]	; 0xc8
   37022:	adds.w	r3, r3, lr
   37026:	eor.w	r6, r3, r4
   3702a:	ldr	r4, [sp, #268]	; 0x10c
   3702c:	adcs	r0, r7
   3702e:	eor.w	ip, r0, r4
   37032:	mov.w	fp, r6, lsr #24
   37036:	orr.w	r4, fp, ip, lsl #8
   3703a:	mov.w	ip, ip, lsr #24
   3703e:	orr.w	r8, ip, r6, lsl #8
   37042:	ldr	r6, [sp, #92]	; 0x5c
   37044:	adds	r1, r6, r1
   37046:	ldr	r6, [sp, #96]	; 0x60
   37048:	adc.w	sl, r6, sl
   3704c:	adds	r1, r1, r4
   3704e:	str	r1, [sp, #144]	; 0x90
   37050:	adc.w	r1, sl, r8
   37054:	str	r1, [sp, #148]	; 0x94
   37056:	ldr	r1, [sp, #144]	; 0x90
   37058:	eor.w	lr, r1, lr
   3705c:	ldr	r1, [sp, #148]	; 0x94
   3705e:	eors	r7, r1
   37060:	mov.w	r1, lr, lsr #16
   37064:	orr.w	r1, r1, r7, lsl #16
   37068:	lsrs	r7, r7, #16
   3706a:	str	r1, [sp, #232]	; 0xe8
   3706c:	orr.w	r1, r7, lr, lsl #16
   37070:	str	r1, [sp, #236]	; 0xec
   37072:	ldr	r1, [sp, #232]	; 0xe8
   37074:	ldr	r7, [sp, #156]	; 0x9c
   37076:	adds	r3, r3, r1
   37078:	ldr	r1, [sp, #236]	; 0xec
   3707a:	eor.w	r4, r4, r3
   3707e:	adc.w	r0, r1, r0
   37082:	eor.w	r8, r0, r8
   37086:	mov.w	r1, r8, lsl #1
   3708a:	orr.w	r6, r1, r4, lsr #31
   3708e:	lsls	r4, r4, #1
   37090:	orr.w	fp, r4, r8, lsr #31
   37094:	ldr	r1, [sp, #108]	; 0x6c
   37096:	ldr	r4, [sp, #152]	; 0x98
   37098:	adds	r1, r1, r4
   3709a:	ldr	r4, [sp, #112]	; 0x70
   3709c:	adc.w	sl, r4, r7
   370a0:	adds.w	r1, r1, fp
   370a4:	ldr	r4, [sp, #228]	; 0xe4
   370a6:	adc.w	sl, sl, r6
   370aa:	eor.w	lr, sl, r9
   370ae:	adds.w	r2, r2, lr
   370b2:	eor.w	r7, r1, r4
   370b6:	adc.w	r5, r7, r5
   370ba:	eor.w	fp, r2, fp
   370be:	eor.w	ip, r5, r6
   370c2:	mov.w	r4, fp, lsr #24
   370c6:	orr.w	r6, r4, ip, lsl #8
   370ca:	ldr	r4, [sp, #92]	; 0x5c
   370cc:	mov.w	ip, ip, lsr #24
   370d0:	adds	r1, r4, r1
   370d2:	ldr	r4, [sp, #96]	; 0x60
   370d4:	orr.w	r8, ip, fp, lsl #8
   370d8:	adc.w	sl, r4, sl
   370dc:	adds	r1, r1, r6
   370de:	str	r1, [sp, #152]	; 0x98
   370e0:	adc.w	r1, sl, r8
   370e4:	str	r1, [sp, #156]	; 0x9c
   370e6:	ldr	r1, [sp, #152]	; 0x98
   370e8:	eor.w	lr, r1, lr
   370ec:	ldr	r1, [sp, #156]	; 0x9c
   370ee:	eors	r7, r1
   370f0:	mov.w	r1, lr, lsr #16
   370f4:	orr.w	r1, r1, r7, lsl #16
   370f8:	lsrs	r7, r7, #16
   370fa:	str	r1, [sp, #228]	; 0xe4
   370fc:	orr.w	r1, r7, lr, lsl #16
   37100:	str	r1, [sp, #260]	; 0x104
   37102:	ldr	r1, [sp, #228]	; 0xe4
   37104:	adds	r2, r2, r1
   37106:	str	r2, [sp, #192]	; 0xc0
   37108:	ldr	r2, [sp, #260]	; 0x104
   3710a:	ldr	r1, [sp, #168]	; 0xa8
   3710c:	adc.w	r2, r5, r2
   37110:	str	r2, [sp, #196]	; 0xc4
   37112:	ldr	r2, [sp, #192]	; 0xc0
   37114:	eors	r6, r2
   37116:	ldr	r2, [sp, #196]	; 0xc4
   37118:	eor.w	r8, r2, r8
   3711c:	mov.w	r2, r8, lsl #1
   37120:	orr.w	r2, r2, r6, lsr #31
   37124:	lsls	r6, r6, #1
   37126:	str	r2, [sp, #268]	; 0x10c
   37128:	orr.w	r2, r6, r8, lsr #31
   3712c:	str	r2, [sp, #264]	; 0x108
   3712e:	ldr	r2, [sp, #60]	; 0x3c
   37130:	adds	r2, r2, r1
   37132:	ldr	r1, [sp, #64]	; 0x40
   37134:	ldr	r4, [sp, #172]	; 0xac
   37136:	ldr	r5, [sp, #252]	; 0xfc
   37138:	adc.w	r7, r1, r4
   3713c:	ldr	r1, [sp, #244]	; 0xf4
   3713e:	ldr	r4, [sp, #244]	; 0xf4
   37140:	adds	r2, r2, r1
   37142:	ldr	r1, [sp, #252]	; 0xfc
   37144:	adc.w	r7, r1, r7
   37148:	ldr	r1, [sp, #212]	; 0xd4
   3714a:	eor.w	r6, r7, r1
   3714e:	ldr	r1, [sp, #208]	; 0xd0
   37150:	adds	r3, r3, r6
   37152:	eor.w	r1, r2, r1
   37156:	eor.w	r4, r3, r4
   3715a:	adc.w	r0, r1, r0
   3715e:	eors	r5, r0
   37160:	mov.w	r8, r4, lsr #24
   37164:	orr.w	ip, r8, r5, lsl #8
   37168:	lsrs	r5, r5, #24
   3716a:	orr.w	lr, r5, r4, lsl #8
   3716e:	ldr	r4, [sp, #116]	; 0x74
   37170:	adds	r2, r4, r2
   37172:	ldr	r4, [sp, #120]	; 0x78
   37174:	adc.w	r7, r4, r7
   37178:	adds.w	r2, r2, ip
   3717c:	str	r2, [sp, #168]	; 0xa8
   3717e:	adc.w	r2, r7, lr
   37182:	str	r2, [sp, #172]	; 0xac
   37184:	ldr	r2, [sp, #168]	; 0xa8
   37186:	eors	r6, r2
   37188:	ldr	r2, [sp, #172]	; 0xac
   3718a:	eors	r1, r2
   3718c:	lsrs	r2, r6, #16
   3718e:	orr.w	r2, r2, r1, lsl #16
   37192:	lsrs	r1, r1, #16
   37194:	str	r2, [sp, #208]	; 0xd0
   37196:	orr.w	r2, r1, r6, lsl #16
   3719a:	str	r2, [sp, #212]	; 0xd4
   3719c:	ldr	r2, [sp, #208]	; 0xd0
   3719e:	ldr	r1, [sp, #164]	; 0xa4
   371a0:	adds	r3, r3, r2
   371a2:	str	r3, [sp, #200]	; 0xc8
   371a4:	ldr	r3, [sp, #212]	; 0xd4
   371a6:	adc.w	r3, r0, r3
   371aa:	str	r3, [sp, #204]	; 0xcc
   371ac:	ldr	r2, [sp, #204]	; 0xcc
   371ae:	ldr	r3, [sp, #200]	; 0xc8
   371b0:	eor.w	lr, r2, lr
   371b4:	eor.w	r3, r3, ip
   371b8:	mov.w	r2, lr, lsl #1
   371bc:	orr.w	r2, r2, r3, lsr #31
   371c0:	mov.w	ip, r3, lsl #1
   371c4:	str	r2, [sp, #244]	; 0xf4
   371c6:	orr.w	ip, ip, lr, lsr #31
   371ca:	ldr	r2, [sp, #160]	; 0xa0
   371cc:	ldr	r3, [sp, #100]	; 0x64
   371ce:	adds	r3, r3, r2
   371d0:	ldr	r2, [sp, #104]	; 0x68
   371d2:	adc.w	lr, r2, r1
   371d6:	ldr	r2, [sp, #240]	; 0xf0
   371d8:	adds	r3, r3, r2
   371da:	ldr	r2, [sp, #248]	; 0xf8
   371dc:	adc.w	lr, lr, r2
   371e0:	ldr	r2, [sp, #236]	; 0xec
   371e2:	eor.w	r6, lr, r2
   371e6:	ldr	r2, [sp, #232]	; 0xe8
   371e8:	eor.w	r0, r3, r2
   371ec:	ldr	r2, [sp, #176]	; 0xb0
   371ee:	ldr	r1, [sp, #180]	; 0xb4
   371f0:	adds	r2, r2, r6
   371f2:	adc.w	r5, r1, r0
   371f6:	ldr	r1, [sp, #240]	; 0xf0
   371f8:	eor.w	r8, r2, r1
   371fc:	ldr	r1, [sp, #248]	; 0xf8
   371fe:	eor.w	r4, r5, r1
   37202:	mov.w	r9, r8, lsr #24
   37206:	orr.w	r1, r9, r4, lsl #8
   3720a:	lsrs	r4, r4, #24
   3720c:	orr.w	r7, r4, r8, lsl #8
   37210:	ldr	r4, [sp, #12]
   37212:	adds	r3, r4, r3
   37214:	ldr	r4, [sp, #16]
   37216:	adc.w	lr, r4, lr
   3721a:	adds	r3, r3, r1
   3721c:	str	r3, [sp, #160]	; 0xa0
   3721e:	adc.w	r3, lr, r7
   37222:	str	r3, [sp, #164]	; 0xa4
   37224:	ldr	r3, [sp, #160]	; 0xa0
   37226:	ldr	r4, [sp, #216]	; 0xd8
   37228:	eors	r6, r3
   3722a:	ldr	r3, [sp, #164]	; 0xa4
   3722c:	eors	r0, r3
   3722e:	lsrs	r3, r6, #16
   37230:	orr.w	r3, r3, r0, lsl #16
   37234:	lsrs	r0, r0, #16
   37236:	str	r3, [sp, #232]	; 0xe8
   37238:	orr.w	r3, r0, r6, lsl #16
   3723c:	str	r3, [sp, #236]	; 0xec
   3723e:	ldr	r3, [sp, #232]	; 0xe8
   37240:	ldr	r0, [sp, #148]	; 0x94
   37242:	adds	r2, r2, r3
   37244:	ldr	r3, [sp, #236]	; 0xec
   37246:	eor.w	r1, r1, r2
   3724a:	adc.w	r5, r3, r5
   3724e:	eors	r7, r5
   37250:	lsls	r3, r7, #1
   37252:	orr.w	r3, r3, r1, lsr #31
   37256:	lsls	r1, r1, #1
   37258:	str	r3, [sp, #248]	; 0xf8
   3725a:	orr.w	r3, r1, r7, lsr #31
   3725e:	ldr	r1, [sp, #144]	; 0x90
   37260:	str	r3, [sp, #240]	; 0xf0
   37262:	ldr	r3, [sp, #28]
   37264:	adds	r1, r3, r1
   37266:	ldr	r3, [sp, #32]
   37268:	adc.w	sl, r3, r0
   3726c:	ldr	r3, [sp, #216]	; 0xd8
   3726e:	ldr	r0, [sp, #188]	; 0xbc
   37270:	adds	r1, r1, r3
   37272:	ldr	r3, [sp, #256]	; 0x100
   37274:	adc.w	sl, sl, r3
   37278:	ldr	r3, [sp, #224]	; 0xe0
   3727a:	eor.w	lr, sl, r3
   3727e:	ldr	r3, [sp, #220]	; 0xdc
   37280:	eor.w	r6, r1, r3
   37284:	ldr	r3, [sp, #184]	; 0xb8
   37286:	adds.w	r3, r3, lr
   3728a:	eor.w	r8, r3, r4
   3728e:	ldr	r4, [sp, #256]	; 0x100
   37290:	adcs	r0, r6
   37292:	eor.w	r7, r0, r4
   37296:	mov.w	fp, r8, lsr #24
   3729a:	orr.w	r4, fp, r7, lsl #8
   3729e:	lsrs	r7, r7, #24
   372a0:	orr.w	r9, r7, r8, lsl #8
   372a4:	ldr	r7, [sp, #76]	; 0x4c
   372a6:	adds	r1, r7, r1
   372a8:	ldr	r7, [sp, #80]	; 0x50
   372aa:	adc.w	sl, r7, sl
   372ae:	adds	r1, r1, r4
   372b0:	str	r1, [sp, #144]	; 0x90
   372b2:	adc.w	r1, sl, r9
   372b6:	str	r1, [sp, #148]	; 0x94
   372b8:	ldr	r1, [sp, #144]	; 0x90
   372ba:	eor.w	lr, r1, lr
   372be:	ldr	r1, [sp, #148]	; 0x94
   372c0:	eors	r6, r1
   372c2:	mov.w	r1, lr, lsr #16
   372c6:	orr.w	r8, r1, r6, lsl #16
   372ca:	lsrs	r6, r6, #16
   372cc:	adds.w	r3, r3, r8
   372d0:	orr.w	sl, r6, lr, lsl #16
   372d4:	adc.w	r0, r0, sl
   372d8:	eors	r4, r3
   372da:	eor.w	r9, r0, r9
   372de:	ldr	r6, [sp, #156]	; 0x9c
   372e0:	mov.w	r1, r9, lsl #1
   372e4:	orr.w	r1, r1, r4, lsr #31
   372e8:	lsls	r4, r4, #1
   372ea:	orr.w	fp, r4, r9, lsr #31
   372ee:	str	r1, [sp, #216]	; 0xd8
   372f0:	ldr	r4, [sp, #152]	; 0x98
   372f2:	ldr	r1, [sp, #44]	; 0x2c
   372f4:	adds	r1, r1, r4
   372f6:	ldr	r4, [sp, #48]	; 0x30
   372f8:	adc.w	r9, r4, r6
   372fc:	ldr	r4, [sp, #244]	; 0xf4
   372fe:	adds.w	r1, r1, ip
   37302:	adc.w	r9, r9, r4
   37306:	eor.w	r7, r1, r8
   3730a:	eor.w	lr, r9, sl
   3730e:	adds.w	r2, r2, lr
   37312:	adc.w	r5, r7, r5
   37316:	eor.w	ip, r2, ip
   3731a:	eor.w	r6, r5, r4
   3731e:	mov.w	sl, ip, lsr #24
   37322:	orr.w	r4, sl, r6, lsl #8
   37326:	lsrs	r6, r6, #24
   37328:	orr.w	r8, r6, ip, lsl #8
   3732c:	ldr	r6, [sp, #4]
   3732e:	adds	r1, r6, r1
   37330:	ldr	r6, [sp, #8]
   37332:	adc.w	r9, r6, r9
   37336:	adds	r1, r1, r4
   37338:	str	r1, [sp, #152]	; 0x98
   3733a:	adc.w	r1, r9, r8
   3733e:	str	r1, [sp, #156]	; 0x9c
   37340:	ldr	r1, [sp, #152]	; 0x98
   37342:	eor.w	lr, r1, lr
   37346:	ldr	r1, [sp, #156]	; 0x9c
   37348:	eors	r7, r1
   3734a:	mov.w	r1, lr, lsr #16
   3734e:	orr.w	r1, r1, r7, lsl #16
   37352:	lsrs	r7, r7, #16
   37354:	str	r1, [sp, #220]	; 0xdc
   37356:	orr.w	r1, r7, lr, lsl #16
   3735a:	str	r1, [sp, #224]	; 0xe0
   3735c:	ldr	r1, [sp, #220]	; 0xdc
   3735e:	adds	r2, r2, r1
   37360:	str	r2, [sp, #176]	; 0xb0
   37362:	ldr	r2, [sp, #224]	; 0xe0
   37364:	ldr	r1, [sp, #168]	; 0xa8
   37366:	adc.w	r2, r5, r2
   3736a:	str	r2, [sp, #180]	; 0xb4
   3736c:	ldr	r2, [sp, #176]	; 0xb0
   3736e:	eors	r4, r2
   37370:	ldr	r2, [sp, #180]	; 0xb4
   37372:	eor.w	r8, r2, r8
   37376:	mov.w	r2, r8, lsl #1
   3737a:	orr.w	r2, r2, r4, lsr #31
   3737e:	lsls	r4, r4, #1
   37380:	str	r2, [sp, #252]	; 0xfc
   37382:	orr.w	r2, r4, r8, lsr #31
   37386:	str	r2, [sp, #244]	; 0xf4
   37388:	ldr	r2, [sp, #124]	; 0x7c
   3738a:	ldr	r4, [sp, #172]	; 0xac
   3738c:	adds	r2, r2, r1
   3738e:	ldr	r1, [sp, #128]	; 0x80
   37390:	adc.w	r7, r1, r4
   37394:	ldr	r1, [sp, #240]	; 0xf0
   37396:	adds	r2, r2, r1
   37398:	ldr	r1, [sp, #248]	; 0xf8
   3739a:	adc.w	r7, r1, r7
   3739e:	ldr	r1, [sp, #260]	; 0x104
   373a0:	eor.w	r4, r7, r1
   373a4:	ldr	r1, [sp, #228]	; 0xe4
   373a6:	adds	r3, r3, r4
   373a8:	eor.w	r9, r2, r1
   373ac:	ldr	r1, [sp, #240]	; 0xf0
   373ae:	adc.w	r0, r0, r9
   373b2:	eor.w	ip, r3, r1
   373b6:	ldr	r1, [sp, #248]	; 0xf8
   373b8:	eor.w	r5, r0, r1
   373bc:	mov.w	lr, ip, lsr #24
   373c0:	orr.w	r1, lr, r5, lsl #8
   373c4:	lsrs	r5, r5, #24
   373c6:	orr.w	r6, r5, ip, lsl #8
   373ca:	ldr	r5, [sp, #36]	; 0x24
   373cc:	adds	r2, r5, r2
   373ce:	ldr	r5, [sp, #40]	; 0x28
   373d0:	adc.w	r7, r5, r7
   373d4:	adds	r2, r2, r1
   373d6:	str	r2, [sp, #168]	; 0xa8
   373d8:	adc.w	r2, r7, r6
   373dc:	str	r2, [sp, #172]	; 0xac
   373de:	ldr	r2, [sp, #168]	; 0xa8
   373e0:	eors	r4, r2
   373e2:	ldr	r2, [sp, #172]	; 0xac
   373e4:	eor.w	r2, r2, r9
   373e8:	lsrs	r5, r4, #16
   373ea:	orr.w	r5, r5, r2, lsl #16
   373ee:	mov.w	r9, r2, lsr #16
   373f2:	orr.w	r9, r9, r4, lsl #16
   373f6:	adds	r3, r3, r5
   373f8:	str	r3, [sp, #184]	; 0xb8
   373fa:	adc.w	r3, r0, r9
   373fe:	str	r3, [sp, #188]	; 0xbc
   37400:	ldr	r3, [sp, #184]	; 0xb8
   37402:	ldr	r2, [sp, #160]	; 0xa0
   37404:	eors	r1, r3
   37406:	ldr	r3, [sp, #188]	; 0xbc
   37408:	ldr	r0, [sp, #196]	; 0xc4
   3740a:	eors	r6, r3
   3740c:	str	r5, [sp, #228]	; 0xe4
   3740e:	lsls	r3, r6, #1
   37410:	orr.w	r3, r3, r1, lsr #31
   37414:	lsls	r1, r1, #1
   37416:	str	r3, [sp, #248]	; 0xf8
   37418:	orr.w	r3, r1, r6, lsr #31
   3741c:	str	r3, [sp, #240]	; 0xf0
   3741e:	ldr	r3, [sp, #68]	; 0x44
   37420:	ldr	r1, [sp, #164]	; 0xa4
   37422:	adds	r3, r3, r2
   37424:	ldr	r2, [sp, #72]	; 0x48
   37426:	adc.w	ip, r2, r1
   3742a:	ldr	r2, [sp, #216]	; 0xd8
   3742c:	adds.w	r3, r3, fp
   37430:	adc.w	ip, ip, r2
   37434:	ldr	r2, [sp, #212]	; 0xd4
   37436:	eor.w	r7, ip, r2
   3743a:	ldr	r2, [sp, #208]	; 0xd0
   3743c:	eor.w	r1, r3, r2
   37440:	ldr	r2, [sp, #192]	; 0xc0
   37442:	adds	r2, r2, r7
   37444:	adc.w	r5, r0, r1
   37448:	ldr	r0, [sp, #216]	; 0xd8
   3744a:	eor.w	fp, r2, fp
   3744e:	eors	r0, r5
   37450:	mov.w	r4, fp, lsr #24
   37454:	orr.w	r8, r4, r0, lsl #8
   37458:	lsrs	r0, r0, #24
   3745a:	orr.w	r6, r0, fp, lsl #8
   3745e:	ldr	r0, [sp, #52]	; 0x34
   37460:	adds	r3, r0, r3
   37462:	ldr	r0, [sp, #56]	; 0x38
   37464:	adc.w	ip, r0, ip
   37468:	adds.w	r3, r3, r8
   3746c:	str	r3, [sp, #160]	; 0xa0
   3746e:	adc.w	r3, ip, r6
   37472:	str	r3, [sp, #164]	; 0xa4
   37474:	ldr	r3, [sp, #160]	; 0xa0
   37476:	eors	r7, r3
   37478:	ldr	r3, [sp, #164]	; 0xa4
   3747a:	eors	r1, r3
   3747c:	lsrs	r3, r7, #16
   3747e:	orr.w	r3, r3, r1, lsl #16
   37482:	lsrs	r1, r1, #16
   37484:	str	r3, [sp, #208]	; 0xd0
   37486:	orr.w	r3, r1, r7, lsl #16
   3748a:	str	r3, [sp, #212]	; 0xd4
   3748c:	ldr	r3, [sp, #208]	; 0xd0
   3748e:	ldr	r1, [sp, #144]	; 0x90
   37490:	adds	r2, r2, r3
   37492:	ldr	r3, [sp, #212]	; 0xd4
   37494:	eor.w	r8, r2, r8
   37498:	ldr	r0, [sp, #148]	; 0x94
   3749a:	adc.w	r5, r3, r5
   3749e:	ldr	r4, [sp, #264]	; 0x108
   374a0:	eors	r6, r5
   374a2:	lsls	r3, r6, #1
   374a4:	orr.w	r3, r3, r8, lsr #31
   374a8:	mov.w	r8, r8, lsl #1
   374ac:	str	r3, [sp, #256]	; 0x100
   374ae:	orr.w	r3, r8, r6, lsr #31
   374b2:	str	r3, [sp, #216]	; 0xd8
   374b4:	ldr	r3, [sp, #20]
   374b6:	adds	r1, r3, r1
   374b8:	ldr	r3, [sp, #24]
   374ba:	adc.w	sl, r3, r0
   374be:	ldr	r3, [sp, #264]	; 0x108
   374c0:	ldr	r0, [sp, #204]	; 0xcc
   374c2:	adds	r1, r1, r3
   374c4:	ldr	r3, [sp, #268]	; 0x10c
   374c6:	adc.w	sl, sl, r3
   374ca:	ldr	r3, [sp, #236]	; 0xec
   374cc:	eor.w	lr, sl, r3
   374d0:	ldr	r3, [sp, #232]	; 0xe8
   374d2:	eor.w	r7, r1, r3
   374d6:	ldr	r3, [sp, #200]	; 0xc8
   374d8:	adds.w	r3, r3, lr
   374dc:	eor.w	r6, r3, r4
   374e0:	ldr	r4, [sp, #268]	; 0x10c
   374e2:	adcs	r0, r7
   374e4:	eor.w	ip, r0, r4
   374e8:	mov.w	fp, r6, lsr #24
   374ec:	orr.w	r4, fp, ip, lsl #8
   374f0:	mov.w	ip, ip, lsr #24
   374f4:	orr.w	r8, ip, r6, lsl #8
   374f8:	ldr	r6, [sp, #84]	; 0x54
   374fa:	adds	r1, r6, r1
   374fc:	ldr	r6, [sp, #88]	; 0x58
   374fe:	adc.w	sl, r6, sl
   37502:	adds	r1, r1, r4
   37504:	str	r1, [sp, #144]	; 0x90
   37506:	adc.w	r1, sl, r8
   3750a:	str	r1, [sp, #148]	; 0x94
   3750c:	ldr	r1, [sp, #144]	; 0x90
   3750e:	eor.w	lr, r1, lr
   37512:	ldr	r1, [sp, #148]	; 0x94
   37514:	eors	r7, r1
   37516:	mov.w	r1, lr, lsr #16
   3751a:	orr.w	r1, r1, r7, lsl #16
   3751e:	lsrs	r7, r7, #16
   37520:	str	r1, [sp, #232]	; 0xe8
   37522:	orr.w	r1, r7, lr, lsl #16
   37526:	str	r1, [sp, #236]	; 0xec
   37528:	ldr	r1, [sp, #232]	; 0xe8
   3752a:	ldr	r7, [sp, #156]	; 0x9c
   3752c:	adds	r3, r3, r1
   3752e:	ldr	r1, [sp, #236]	; 0xec
   37530:	eor.w	r4, r4, r3
   37534:	adc.w	r0, r1, r0
   37538:	eor.w	r8, r0, r8
   3753c:	mov.w	r1, r8, lsl #1
   37540:	orr.w	r6, r1, r4, lsr #31
   37544:	lsls	r4, r4, #1
   37546:	orr.w	fp, r4, r8, lsr #31
   3754a:	ldr	r1, [sp, #52]	; 0x34
   3754c:	ldr	r4, [sp, #152]	; 0x98
   3754e:	adds	r1, r1, r4
   37550:	ldr	r4, [sp, #56]	; 0x38
   37552:	adc.w	sl, r4, r7
   37556:	adds.w	r1, r1, fp
   3755a:	adc.w	sl, sl, r6
   3755e:	ldr	r4, [sp, #228]	; 0xe4
   37560:	eor.w	lr, sl, r9
   37564:	adds.w	r2, r2, lr
   37568:	eor.w	r7, r1, r4
   3756c:	adc.w	r5, r7, r5
   37570:	eor.w	fp, r2, fp
   37574:	eor.w	ip, r5, r6
   37578:	mov.w	r4, fp, lsr #24
   3757c:	orr.w	r6, r4, ip, lsl #8
   37580:	ldr	r4, [sp, #124]	; 0x7c
   37582:	mov.w	ip, ip, lsr #24
   37586:	adds	r1, r4, r1
   37588:	ldr	r4, [sp, #128]	; 0x80
   3758a:	orr.w	r8, ip, fp, lsl #8
   3758e:	adc.w	sl, r4, sl
   37592:	adds	r1, r1, r6
   37594:	str	r1, [sp, #152]	; 0x98
   37596:	adc.w	r1, sl, r8
   3759a:	str	r1, [sp, #156]	; 0x9c
   3759c:	ldr	r1, [sp, #152]	; 0x98
   3759e:	ldr	r4, [sp, #172]	; 0xac
   375a0:	eor.w	lr, r1, lr
   375a4:	ldr	r1, [sp, #156]	; 0x9c
   375a6:	eors	r7, r1
   375a8:	mov.w	r1, lr, lsr #16
   375ac:	orr.w	r1, r1, r7, lsl #16
   375b0:	lsrs	r7, r7, #16
   375b2:	str	r1, [sp, #228]	; 0xe4
   375b4:	orr.w	r1, r7, lr, lsl #16
   375b8:	str	r1, [sp, #260]	; 0x104
   375ba:	ldr	r1, [sp, #228]	; 0xe4
   375bc:	adds	r2, r2, r1
   375be:	str	r2, [sp, #192]	; 0xc0
   375c0:	ldr	r2, [sp, #260]	; 0x104
   375c2:	ldr	r1, [sp, #168]	; 0xa8
   375c4:	adc.w	r2, r5, r2
   375c8:	str	r2, [sp, #196]	; 0xc4
   375ca:	ldr	r2, [sp, #192]	; 0xc0
   375cc:	ldr	r5, [sp, #252]	; 0xfc
   375ce:	eors	r6, r2
   375d0:	ldr	r2, [sp, #196]	; 0xc4
   375d2:	eor.w	r8, r2, r8
   375d6:	mov.w	r2, r8, lsl #1
   375da:	orr.w	r2, r2, r6, lsr #31
   375de:	lsls	r6, r6, #1
   375e0:	str	r2, [sp, #268]	; 0x10c
   375e2:	orr.w	r2, r6, r8, lsr #31
   375e6:	str	r2, [sp, #264]	; 0x108
   375e8:	ldr	r2, [sp, #116]	; 0x74
   375ea:	adds	r2, r2, r1
   375ec:	ldr	r1, [sp, #120]	; 0x78
   375ee:	adc.w	r7, r1, r4
   375f2:	ldr	r1, [sp, #244]	; 0xf4
   375f4:	ldr	r4, [sp, #244]	; 0xf4
   375f6:	adds	r2, r2, r1
   375f8:	ldr	r1, [sp, #252]	; 0xfc
   375fa:	adc.w	r7, r1, r7
   375fe:	ldr	r1, [sp, #212]	; 0xd4
   37600:	eor.w	r6, r7, r1
   37604:	ldr	r1, [sp, #208]	; 0xd0
   37606:	adds	r3, r3, r6
   37608:	eor.w	r1, r2, r1
   3760c:	eor.w	r4, r3, r4
   37610:	adc.w	r0, r1, r0
   37614:	eors	r5, r0
   37616:	mov.w	r8, r4, lsr #24
   3761a:	orr.w	ip, r8, r5, lsl #8
   3761e:	lsrs	r5, r5, #24
   37620:	orr.w	lr, r5, r4, lsl #8
   37624:	ldr	r4, [sp, #76]	; 0x4c
   37626:	adds	r2, r4, r2
   37628:	ldr	r4, [sp, #80]	; 0x50
   3762a:	adc.w	r7, r4, r7
   3762e:	adds.w	r2, r2, ip
   37632:	str	r2, [sp, #168]	; 0xa8
   37634:	adc.w	r2, r7, lr
   37638:	str	r2, [sp, #172]	; 0xac
   3763a:	ldr	r2, [sp, #168]	; 0xa8
   3763c:	eors	r6, r2
   3763e:	ldr	r2, [sp, #172]	; 0xac
   37640:	eors	r1, r2
   37642:	lsrs	r2, r6, #16
   37644:	orr.w	r2, r2, r1, lsl #16
   37648:	lsrs	r1, r1, #16
   3764a:	str	r2, [sp, #208]	; 0xd0
   3764c:	orr.w	r2, r1, r6, lsl #16
   37650:	str	r2, [sp, #212]	; 0xd4
   37652:	ldr	r2, [sp, #208]	; 0xd0
   37654:	ldr	r1, [sp, #164]	; 0xa4
   37656:	adds	r3, r3, r2
   37658:	str	r3, [sp, #200]	; 0xc8
   3765a:	ldr	r3, [sp, #212]	; 0xd4
   3765c:	adc.w	r3, r0, r3
   37660:	str	r3, [sp, #204]	; 0xcc
   37662:	ldr	r2, [sp, #204]	; 0xcc
   37664:	ldr	r3, [sp, #200]	; 0xc8
   37666:	eor.w	lr, r2, lr
   3766a:	eor.w	r3, r3, ip
   3766e:	mov.w	r2, lr, lsl #1
   37672:	orr.w	r2, r2, r3, lsr #31
   37676:	mov.w	ip, r3, lsl #1
   3767a:	str	r2, [sp, #244]	; 0xf4
   3767c:	orr.w	ip, ip, lr, lsr #31
   37680:	ldr	r2, [sp, #160]	; 0xa0
   37682:	ldr	r3, [sp, #92]	; 0x5c
   37684:	adds	r3, r3, r2
   37686:	ldr	r2, [sp, #96]	; 0x60
   37688:	adc.w	lr, r2, r1
   3768c:	ldr	r2, [sp, #240]	; 0xf0
   3768e:	ldr	r1, [sp, #180]	; 0xb4
   37690:	adds	r3, r3, r2
   37692:	ldr	r2, [sp, #248]	; 0xf8
   37694:	adc.w	lr, lr, r2
   37698:	ldr	r2, [sp, #236]	; 0xec
   3769a:	eor.w	r6, lr, r2
   3769e:	ldr	r2, [sp, #232]	; 0xe8
   376a0:	eor.w	r0, r3, r2
   376a4:	ldr	r2, [sp, #176]	; 0xb0
   376a6:	adds	r2, r2, r6
   376a8:	adc.w	r5, r1, r0
   376ac:	ldr	r1, [sp, #240]	; 0xf0
   376ae:	eor.w	r8, r2, r1
   376b2:	ldr	r1, [sp, #248]	; 0xf8
   376b4:	eor.w	r4, r5, r1
   376b8:	mov.w	r9, r8, lsr #24
   376bc:	orr.w	r1, r9, r4, lsl #8
   376c0:	lsrs	r4, r4, #24
   376c2:	orr.w	r7, r4, r8, lsl #8
   376c6:	ldr	r4, [sp, #28]
   376c8:	adds	r3, r4, r3
   376ca:	ldr	r4, [sp, #32]
   376cc:	adc.w	lr, r4, lr
   376d0:	adds	r3, r3, r1
   376d2:	str	r3, [sp, #160]	; 0xa0
   376d4:	adc.w	r3, lr, r7
   376d8:	str	r3, [sp, #164]	; 0xa4
   376da:	ldr	r3, [sp, #160]	; 0xa0
   376dc:	eors	r6, r3
   376de:	ldr	r3, [sp, #164]	; 0xa4
   376e0:	eors	r0, r3
   376e2:	lsrs	r3, r6, #16
   376e4:	orr.w	r3, r3, r0, lsl #16
   376e8:	lsrs	r0, r0, #16
   376ea:	str	r3, [sp, #232]	; 0xe8
   376ec:	orr.w	r3, r0, r6, lsl #16
   376f0:	str	r3, [sp, #236]	; 0xec
   376f2:	ldr	r3, [sp, #232]	; 0xe8
   376f4:	adds	r2, r2, r3
   376f6:	ldr	r3, [sp, #236]	; 0xec
   376f8:	eor.w	r1, r1, r2
   376fc:	adc.w	r5, r3, r5
   37700:	eors	r7, r5
   37702:	lsls	r3, r7, #1
   37704:	orr.w	r3, r3, r1, lsr #31
   37708:	lsls	r1, r1, #1
   3770a:	str	r3, [sp, #248]	; 0xf8
   3770c:	orr.w	r3, r1, r7, lsr #31
   37710:	str	r3, [sp, #240]	; 0xf0
   37712:	ldr	r3, [sp, #4]
   37714:	ldr	r1, [sp, #144]	; 0x90
   37716:	ldr	r0, [sp, #148]	; 0x94
   37718:	adds	r1, r3, r1
   3771a:	ldr	r3, [sp, #8]
   3771c:	ldr	r4, [sp, #216]	; 0xd8
   3771e:	adc.w	sl, r3, r0
   37722:	ldr	r3, [sp, #216]	; 0xd8
   37724:	ldr	r0, [sp, #188]	; 0xbc
   37726:	adds	r1, r1, r3
   37728:	ldr	r3, [sp, #256]	; 0x100
   3772a:	adc.w	sl, sl, r3
   3772e:	ldr	r3, [sp, #224]	; 0xe0
   37730:	eor.w	lr, sl, r3
   37734:	ldr	r3, [sp, #220]	; 0xdc
   37736:	eor.w	r6, r1, r3
   3773a:	ldr	r3, [sp, #184]	; 0xb8
   3773c:	adds.w	r3, r3, lr
   37740:	eor.w	r8, r3, r4
   37744:	ldr	r4, [sp, #256]	; 0x100
   37746:	adcs	r0, r6
   37748:	eor.w	r7, r0, r4
   3774c:	mov.w	fp, r8, lsr #24
   37750:	orr.w	r4, fp, r7, lsl #8
   37754:	lsrs	r7, r7, #24
   37756:	orr.w	r9, r7, r8, lsl #8
   3775a:	ldr	r7, [sp, #68]	; 0x44
   3775c:	adds	r1, r7, r1
   3775e:	ldr	r7, [sp, #72]	; 0x48
   37760:	adc.w	sl, r7, sl
   37764:	adds	r1, r1, r4
   37766:	str	r1, [sp, #144]	; 0x90
   37768:	adc.w	r1, sl, r9
   3776c:	str	r1, [sp, #148]	; 0x94
   3776e:	ldr	r1, [sp, #144]	; 0x90
   37770:	eor.w	lr, r1, lr
   37774:	ldr	r1, [sp, #148]	; 0x94
   37776:	eors	r6, r1
   37778:	mov.w	r1, lr, lsr #16
   3777c:	orr.w	r8, r1, r6, lsl #16
   37780:	lsrs	r6, r6, #16
   37782:	adds.w	r3, r3, r8
   37786:	orr.w	sl, r6, lr, lsl #16
   3778a:	adc.w	r0, r0, sl
   3778e:	eors	r4, r3
   37790:	eor.w	r9, r0, r9
   37794:	ldr	r6, [sp, #156]	; 0x9c
   37796:	mov.w	r1, r9, lsl #1
   3779a:	orr.w	r1, r1, r4, lsr #31
   3779e:	lsls	r4, r4, #1
   377a0:	orr.w	fp, r4, r9, lsr #31
   377a4:	str	r1, [sp, #216]	; 0xd8
   377a6:	ldr	r4, [sp, #152]	; 0x98
   377a8:	ldr	r1, [sp, #100]	; 0x64
   377aa:	adds	r1, r1, r4
   377ac:	ldr	r4, [sp, #104]	; 0x68
   377ae:	adc.w	r9, r4, r6
   377b2:	ldr	r4, [sp, #244]	; 0xf4
   377b4:	adds.w	r1, r1, ip
   377b8:	adc.w	r9, r9, r4
   377bc:	eor.w	r7, r1, r8
   377c0:	eor.w	lr, r9, sl
   377c4:	adds.w	r2, r2, lr
   377c8:	adc.w	r5, r7, r5
   377cc:	eor.w	ip, r2, ip
   377d0:	eor.w	r6, r5, r4
   377d4:	mov.w	sl, ip, lsr #24
   377d8:	orr.w	r4, sl, r6, lsl #8
   377dc:	lsrs	r6, r6, #24
   377de:	orr.w	r8, r6, ip, lsl #8
   377e2:	ldr	r6, [sp, #20]
   377e4:	adds	r1, r6, r1
   377e6:	ldr	r6, [sp, #24]
   377e8:	adc.w	r9, r6, r9
   377ec:	adds	r1, r1, r4
   377ee:	str	r1, [sp, #152]	; 0x98
   377f0:	adc.w	r1, r9, r8
   377f4:	str	r1, [sp, #156]	; 0x9c
   377f6:	ldr	r1, [sp, #152]	; 0x98
   377f8:	eor.w	lr, r1, lr
   377fc:	ldr	r1, [sp, #156]	; 0x9c
   377fe:	eors	r7, r1
   37800:	mov.w	r1, lr, lsr #16
   37804:	orr.w	r1, r1, r7, lsl #16
   37808:	lsrs	r7, r7, #16
   3780a:	str	r1, [sp, #220]	; 0xdc
   3780c:	orr.w	r1, r7, lr, lsl #16
   37810:	str	r1, [sp, #224]	; 0xe0
   37812:	ldr	r1, [sp, #220]	; 0xdc
   37814:	adds	r2, r2, r1
   37816:	str	r2, [sp, #176]	; 0xb0
   37818:	ldr	r2, [sp, #224]	; 0xe0
   3781a:	ldr	r1, [sp, #168]	; 0xa8
   3781c:	adc.w	r2, r5, r2
   37820:	str	r2, [sp, #180]	; 0xb4
   37822:	ldr	r2, [sp, #176]	; 0xb0
   37824:	eors	r4, r2
   37826:	ldr	r2, [sp, #180]	; 0xb4
   37828:	eor.w	r8, r2, r8
   3782c:	mov.w	r2, r8, lsl #1
   37830:	orr.w	r2, r2, r4, lsr #31
   37834:	lsls	r4, r4, #1
   37836:	str	r2, [sp, #252]	; 0xfc
   37838:	orr.w	r2, r4, r8, lsr #31
   3783c:	str	r2, [sp, #244]	; 0xf4
   3783e:	ldr	r2, [sp, #108]	; 0x6c
   37840:	ldr	r4, [sp, #172]	; 0xac
   37842:	adds	r2, r2, r1
   37844:	ldr	r1, [sp, #112]	; 0x70
   37846:	adc.w	r7, r1, r4
   3784a:	ldr	r1, [sp, #240]	; 0xf0
   3784c:	adds	r2, r2, r1
   3784e:	ldr	r1, [sp, #248]	; 0xf8
   37850:	adc.w	r7, r1, r7
   37854:	ldr	r1, [sp, #260]	; 0x104
   37856:	eor.w	r4, r7, r1
   3785a:	ldr	r1, [sp, #228]	; 0xe4
   3785c:	adds	r3, r3, r4
   3785e:	eor.w	r9, r2, r1
   37862:	ldr	r1, [sp, #240]	; 0xf0
   37864:	adc.w	r0, r0, r9
   37868:	eor.w	ip, r3, r1
   3786c:	ldr	r1, [sp, #248]	; 0xf8
   3786e:	eor.w	r5, r0, r1
   37872:	mov.w	lr, ip, lsr #24
   37876:	orr.w	r1, lr, r5, lsl #8
   3787a:	lsrs	r5, r5, #24
   3787c:	orr.w	r6, r5, ip, lsl #8
   37880:	ldr	r5, [sp, #60]	; 0x3c
   37882:	adds	r2, r5, r2
   37884:	ldr	r5, [sp, #64]	; 0x40
   37886:	adc.w	r7, r5, r7
   3788a:	adds	r2, r2, r1
   3788c:	str	r2, [sp, #168]	; 0xa8
   3788e:	adc.w	r2, r7, r6
   37892:	str	r2, [sp, #172]	; 0xac
   37894:	ldr	r2, [sp, #168]	; 0xa8
   37896:	eors	r4, r2
   37898:	ldr	r2, [sp, #172]	; 0xac
   3789a:	eor.w	r2, r2, r9
   3789e:	lsrs	r5, r4, #16
   378a0:	orr.w	r5, r5, r2, lsl #16
   378a4:	mov.w	r9, r2, lsr #16
   378a8:	orr.w	r9, r9, r4, lsl #16
   378ac:	adds	r3, r3, r5
   378ae:	str	r3, [sp, #184]	; 0xb8
   378b0:	adc.w	r3, r0, r9
   378b4:	str	r3, [sp, #188]	; 0xbc
   378b6:	ldr	r3, [sp, #184]	; 0xb8
   378b8:	ldr	r2, [sp, #160]	; 0xa0
   378ba:	eors	r1, r3
   378bc:	ldr	r3, [sp, #188]	; 0xbc
   378be:	str	r5, [sp, #228]	; 0xe4
   378c0:	eors	r6, r3
   378c2:	lsls	r3, r6, #1
   378c4:	orr.w	r3, r3, r1, lsr #31
   378c8:	lsls	r1, r1, #1
   378ca:	str	r3, [sp, #248]	; 0xf8
   378cc:	orr.w	r3, r1, r6, lsr #31
   378d0:	str	r3, [sp, #240]	; 0xf0
   378d2:	ldr	r3, [sp, #12]
   378d4:	adds	r3, r3, r2
   378d6:	ldr	r2, [sp, #16]
   378d8:	ldr	r1, [sp, #164]	; 0xa4
   378da:	ldr	r0, [sp, #196]	; 0xc4
   378dc:	adc.w	ip, r2, r1
   378e0:	ldr	r2, [sp, #216]	; 0xd8
   378e2:	adds.w	r3, r3, fp
   378e6:	adc.w	ip, ip, r2
   378ea:	ldr	r2, [sp, #212]	; 0xd4
   378ec:	eor.w	r7, ip, r2
   378f0:	ldr	r2, [sp, #208]	; 0xd0
   378f2:	eor.w	r1, r3, r2
   378f6:	ldr	r2, [sp, #192]	; 0xc0
   378f8:	adds	r2, r2, r7
   378fa:	adc.w	r5, r0, r1
   378fe:	ldr	r0, [sp, #216]	; 0xd8
   37900:	eor.w	fp, r2, fp
   37904:	eors	r0, r5
   37906:	mov.w	r4, fp, lsr #24
   3790a:	orr.w	r8, r4, r0, lsl #8
   3790e:	lsrs	r0, r0, #24
   37910:	orr.w	r6, r0, fp, lsl #8
   37914:	ldr	r0, [sp, #36]	; 0x24
   37916:	ldr	r4, [sp, #264]	; 0x108
   37918:	adds	r3, r0, r3
   3791a:	ldr	r0, [sp, #40]	; 0x28
   3791c:	adc.w	ip, r0, ip
   37920:	adds.w	r3, r3, r8
   37924:	str	r3, [sp, #160]	; 0xa0
   37926:	adc.w	r3, ip, r6
   3792a:	str	r3, [sp, #164]	; 0xa4
   3792c:	ldr	r3, [sp, #160]	; 0xa0
   3792e:	ldr	r0, [sp, #148]	; 0x94
   37930:	eors	r7, r3
   37932:	ldr	r3, [sp, #164]	; 0xa4
   37934:	eors	r1, r3
   37936:	lsrs	r3, r7, #16
   37938:	orr.w	r3, r3, r1, lsl #16
   3793c:	lsrs	r1, r1, #16
   3793e:	str	r3, [sp, #208]	; 0xd0
   37940:	orr.w	r3, r1, r7, lsl #16
   37944:	str	r3, [sp, #212]	; 0xd4
   37946:	ldr	r3, [sp, #208]	; 0xd0
   37948:	ldr	r1, [sp, #144]	; 0x90
   3794a:	adds	r2, r2, r3
   3794c:	ldr	r3, [sp, #212]	; 0xd4
   3794e:	eor.w	r8, r2, r8
   37952:	adc.w	r5, r3, r5
   37956:	eors	r6, r5
   37958:	lsls	r3, r6, #1
   3795a:	orr.w	r3, r3, r8, lsr #31
   3795e:	mov.w	r8, r8, lsl #1
   37962:	str	r3, [sp, #256]	; 0x100
   37964:	orr.w	r3, r8, r6, lsr #31
   37968:	str	r3, [sp, #216]	; 0xd8
   3796a:	ldr	r3, [sp, #84]	; 0x54
   3796c:	adds	r1, r3, r1
   3796e:	ldr	r3, [sp, #88]	; 0x58
   37970:	adc.w	sl, r3, r0
   37974:	ldr	r3, [sp, #264]	; 0x108
   37976:	ldr	r0, [sp, #204]	; 0xcc
   37978:	adds	r1, r1, r3
   3797a:	ldr	r3, [sp, #268]	; 0x10c
   3797c:	adc.w	sl, sl, r3
   37980:	ldr	r3, [sp, #236]	; 0xec
   37982:	eor.w	lr, sl, r3
   37986:	ldr	r3, [sp, #232]	; 0xe8
   37988:	eor.w	r7, r1, r3
   3798c:	ldr	r3, [sp, #200]	; 0xc8
   3798e:	adds.w	r3, r3, lr
   37992:	eor.w	r6, r3, r4
   37996:	ldr	r4, [sp, #268]	; 0x10c
   37998:	adcs	r0, r7
   3799a:	eor.w	ip, r0, r4
   3799e:	mov.w	fp, r6, lsr #24
   379a2:	orr.w	r4, fp, ip, lsl #8
   379a6:	mov.w	ip, ip, lsr #24
   379aa:	orr.w	r8, ip, r6, lsl #8
   379ae:	ldr	r6, [sp, #44]	; 0x2c
   379b0:	adds	r1, r6, r1
   379b2:	ldr	r6, [sp, #48]	; 0x30
   379b4:	adc.w	sl, r6, sl
   379b8:	adds	r1, r1, r4
   379ba:	str	r1, [sp, #144]	; 0x90
   379bc:	adc.w	r1, sl, r8
   379c0:	str	r1, [sp, #148]	; 0x94
   379c2:	ldr	r1, [sp, #144]	; 0x90
   379c4:	eor.w	lr, r1, lr
   379c8:	ldr	r1, [sp, #148]	; 0x94
   379ca:	eors	r7, r1
   379cc:	mov.w	r1, lr, lsr #16
   379d0:	orr.w	r1, r1, r7, lsl #16
   379d4:	lsrs	r7, r7, #16
   379d6:	str	r1, [sp, #232]	; 0xe8
   379d8:	orr.w	r1, r7, lr, lsl #16
   379dc:	str	r1, [sp, #236]	; 0xec
   379de:	ldr	r1, [sp, #232]	; 0xe8
   379e0:	ldr	r7, [sp, #156]	; 0x9c
   379e2:	adds	r3, r3, r1
   379e4:	ldr	r1, [sp, #236]	; 0xec
   379e6:	eor.w	r4, r4, r3
   379ea:	adc.w	r0, r1, r0
   379ee:	eor.w	r8, r0, r8
   379f2:	mov.w	r1, r8, lsl #1
   379f6:	orr.w	r6, r1, r4, lsr #31
   379fa:	lsls	r4, r4, #1
   379fc:	orr.w	fp, r4, r8, lsr #31
   37a00:	ldr	r1, [sp, #84]	; 0x54
   37a02:	ldr	r4, [sp, #152]	; 0x98
   37a04:	adds	r1, r1, r4
   37a06:	ldr	r4, [sp, #88]	; 0x58
   37a08:	adc.w	sl, r4, r7
   37a0c:	adds.w	r1, r1, fp
   37a10:	ldr	r4, [sp, #228]	; 0xe4
   37a12:	adc.w	sl, sl, r6
   37a16:	eor.w	lr, sl, r9
   37a1a:	adds.w	r2, r2, lr
   37a1e:	eor.w	r7, r1, r4
   37a22:	adc.w	r5, r7, r5
   37a26:	eor.w	fp, r2, fp
   37a2a:	eor.w	ip, r5, r6
   37a2e:	mov.w	r4, fp, lsr #24
   37a32:	orr.w	r6, r4, ip, lsl #8
   37a36:	ldr	r4, [sp, #20]
   37a38:	mov.w	ip, ip, lsr #24
   37a3c:	adds	r1, r4, r1
   37a3e:	ldr	r4, [sp, #24]
   37a40:	orr.w	r8, ip, fp, lsl #8
   37a44:	adc.w	sl, r4, sl
   37a48:	adds	r1, r1, r6
   37a4a:	str	r1, [sp, #152]	; 0x98
   37a4c:	adc.w	r1, sl, r8
   37a50:	str	r1, [sp, #156]	; 0x9c
   37a52:	ldr	r1, [sp, #152]	; 0x98
   37a54:	eor.w	lr, r1, lr
   37a58:	ldr	r1, [sp, #156]	; 0x9c
   37a5a:	eors	r7, r1
   37a5c:	mov.w	r1, lr, lsr #16
   37a60:	orr.w	r1, r1, r7, lsl #16
   37a64:	lsrs	r7, r7, #16
   37a66:	str	r1, [sp, #228]	; 0xe4
   37a68:	orr.w	r1, r7, lr, lsl #16
   37a6c:	str	r1, [sp, #260]	; 0x104
   37a6e:	ldr	r1, [sp, #228]	; 0xe4
   37a70:	adds	r2, r2, r1
   37a72:	str	r2, [sp, #192]	; 0xc0
   37a74:	ldr	r2, [sp, #260]	; 0x104
   37a76:	ldr	r1, [sp, #168]	; 0xa8
   37a78:	adc.w	r2, r5, r2
   37a7c:	str	r2, [sp, #196]	; 0xc4
   37a7e:	ldr	r2, [sp, #192]	; 0xc0
   37a80:	eors	r6, r2
   37a82:	ldr	r2, [sp, #196]	; 0xc4
   37a84:	eor.w	r8, r2, r8
   37a88:	mov.w	r2, r8, lsl #1
   37a8c:	orr.w	r2, r2, r6, lsr #31
   37a90:	lsls	r6, r6, #1
   37a92:	str	r2, [sp, #268]	; 0x10c
   37a94:	orr.w	r2, r6, r8, lsr #31
   37a98:	str	r2, [sp, #264]	; 0x108
   37a9a:	ldr	r2, [sp, #68]	; 0x44
   37a9c:	adds	r2, r2, r1
   37a9e:	ldr	r1, [sp, #72]	; 0x48
   37aa0:	ldr	r4, [sp, #172]	; 0xac
   37aa2:	ldr	r5, [sp, #252]	; 0xfc
   37aa4:	adc.w	r7, r1, r4
   37aa8:	ldr	r1, [sp, #244]	; 0xf4
   37aaa:	ldr	r4, [sp, #244]	; 0xf4
   37aac:	adds	r2, r2, r1
   37aae:	ldr	r1, [sp, #252]	; 0xfc
   37ab0:	adc.w	r7, r1, r7
   37ab4:	ldr	r1, [sp, #212]	; 0xd4
   37ab6:	eor.w	r6, r7, r1
   37aba:	ldr	r1, [sp, #208]	; 0xd0
   37abc:	adds	r3, r3, r6
   37abe:	eor.w	r1, r2, r1
   37ac2:	eor.w	r4, r3, r4
   37ac6:	adc.w	r0, r1, r0
   37aca:	eors	r5, r0
   37acc:	mov.w	r8, r4, lsr #24
   37ad0:	orr.w	ip, r8, r5, lsl #8
   37ad4:	lsrs	r5, r5, #24
   37ad6:	orr.w	lr, r5, r4, lsl #8
   37ada:	ldr	r4, [sp, #36]	; 0x24
   37adc:	adds	r2, r4, r2
   37ade:	ldr	r4, [sp, #40]	; 0x28
   37ae0:	adc.w	r7, r4, r7
   37ae4:	adds.w	r2, r2, ip
   37ae8:	str	r2, [sp, #168]	; 0xa8
   37aea:	adc.w	r2, r7, lr
   37aee:	str	r2, [sp, #172]	; 0xac
   37af0:	ldr	r2, [sp, #168]	; 0xa8
   37af2:	eors	r6, r2
   37af4:	ldr	r2, [sp, #172]	; 0xac
   37af6:	eors	r1, r2
   37af8:	lsrs	r2, r6, #16
   37afa:	orr.w	r2, r2, r1, lsl #16
   37afe:	lsrs	r1, r1, #16
   37b00:	str	r2, [sp, #208]	; 0xd0
   37b02:	orr.w	r2, r1, r6, lsl #16
   37b06:	str	r2, [sp, #212]	; 0xd4
   37b08:	ldr	r2, [sp, #208]	; 0xd0
   37b0a:	ldr	r1, [sp, #164]	; 0xa4
   37b0c:	adds	r3, r3, r2
   37b0e:	str	r3, [sp, #200]	; 0xc8
   37b10:	ldr	r3, [sp, #212]	; 0xd4
   37b12:	adc.w	r3, r0, r3
   37b16:	str	r3, [sp, #204]	; 0xcc
   37b18:	ldr	r2, [sp, #204]	; 0xcc
   37b1a:	ldr	r3, [sp, #200]	; 0xc8
   37b1c:	eor.w	lr, r2, lr
   37b20:	eor.w	r3, r3, ip
   37b24:	mov.w	r2, lr, lsl #1
   37b28:	orr.w	r2, r2, r3, lsr #31
   37b2c:	mov.w	ip, r3, lsl #1
   37b30:	str	r2, [sp, #244]	; 0xf4
   37b32:	orr.w	ip, ip, lr, lsr #31
   37b36:	ldr	r2, [sp, #160]	; 0xa0
   37b38:	ldr	r3, [sp, #60]	; 0x3c
   37b3a:	adds	r3, r3, r2
   37b3c:	ldr	r2, [sp, #64]	; 0x40
   37b3e:	adc.w	lr, r2, r1
   37b42:	ldr	r2, [sp, #240]	; 0xf0
   37b44:	adds	r3, r3, r2
   37b46:	ldr	r2, [sp, #248]	; 0xf8
   37b48:	adc.w	lr, lr, r2
   37b4c:	ldr	r2, [sp, #236]	; 0xec
   37b4e:	eor.w	r6, lr, r2
   37b52:	ldr	r2, [sp, #232]	; 0xe8
   37b54:	eor.w	r0, r3, r2
   37b58:	ldr	r2, [sp, #176]	; 0xb0
   37b5a:	ldr	r1, [sp, #180]	; 0xb4
   37b5c:	adds	r2, r2, r6
   37b5e:	adc.w	r5, r1, r0
   37b62:	ldr	r1, [sp, #240]	; 0xf0
   37b64:	eor.w	r8, r2, r1
   37b68:	ldr	r1, [sp, #248]	; 0xf8
   37b6a:	eor.w	r4, r5, r1
   37b6e:	mov.w	r9, r8, lsr #24
   37b72:	orr.w	r1, r9, r4, lsl #8
   37b76:	lsrs	r4, r4, #24
   37b78:	orr.w	r7, r4, r8, lsl #8
   37b7c:	ldr	r4, [sp, #52]	; 0x34
   37b7e:	adds	r3, r4, r3
   37b80:	ldr	r4, [sp, #56]	; 0x38
   37b82:	adc.w	lr, r4, lr
   37b86:	adds	r3, r3, r1
   37b88:	str	r3, [sp, #160]	; 0xa0
   37b8a:	adc.w	r3, lr, r7
   37b8e:	str	r3, [sp, #164]	; 0xa4
   37b90:	ldr	r3, [sp, #160]	; 0xa0
   37b92:	ldr	r4, [sp, #216]	; 0xd8
   37b94:	eors	r6, r3
   37b96:	ldr	r3, [sp, #164]	; 0xa4
   37b98:	eors	r0, r3
   37b9a:	lsrs	r3, r6, #16
   37b9c:	orr.w	r3, r3, r0, lsl #16
   37ba0:	lsrs	r0, r0, #16
   37ba2:	str	r3, [sp, #232]	; 0xe8
   37ba4:	orr.w	r3, r0, r6, lsl #16
   37ba8:	str	r3, [sp, #236]	; 0xec
   37baa:	ldr	r3, [sp, #232]	; 0xe8
   37bac:	ldr	r0, [sp, #148]	; 0x94
   37bae:	adds	r2, r2, r3
   37bb0:	ldr	r3, [sp, #236]	; 0xec
   37bb2:	eor.w	r1, r1, r2
   37bb6:	adc.w	r5, r3, r5
   37bba:	eors	r7, r5
   37bbc:	lsls	r3, r7, #1
   37bbe:	orr.w	r3, r3, r1, lsr #31
   37bc2:	lsls	r1, r1, #1
   37bc4:	str	r3, [sp, #248]	; 0xf8
   37bc6:	orr.w	r3, r1, r7, lsr #31
   37bca:	ldr	r1, [sp, #144]	; 0x90
   37bcc:	str	r3, [sp, #240]	; 0xf0
   37bce:	ldr	r3, [sp, #12]
   37bd0:	adds	r1, r3, r1
   37bd2:	ldr	r3, [sp, #16]
   37bd4:	adc.w	sl, r3, r0
   37bd8:	ldr	r3, [sp, #216]	; 0xd8
   37bda:	ldr	r0, [sp, #188]	; 0xbc
   37bdc:	adds	r1, r1, r3
   37bde:	ldr	r3, [sp, #256]	; 0x100
   37be0:	adc.w	sl, sl, r3
   37be4:	ldr	r3, [sp, #224]	; 0xe0
   37be6:	eor.w	lr, sl, r3
   37bea:	ldr	r3, [sp, #220]	; 0xdc
   37bec:	eor.w	r6, r1, r3
   37bf0:	ldr	r3, [sp, #184]	; 0xb8
   37bf2:	adds.w	r3, r3, lr
   37bf6:	eor.w	r8, r3, r4
   37bfa:	ldr	r4, [sp, #256]	; 0x100
   37bfc:	adcs	r0, r6
   37bfe:	eor.w	r7, r0, r4
   37c02:	mov.w	fp, r8, lsr #24
   37c06:	orr.w	r4, fp, r7, lsl #8
   37c0a:	lsrs	r7, r7, #24
   37c0c:	orr.w	r9, r7, r8, lsl #8
   37c10:	ldr	r7, [sp, #44]	; 0x2c
   37c12:	adds	r1, r7, r1
   37c14:	ldr	r7, [sp, #48]	; 0x30
   37c16:	adc.w	sl, r7, sl
   37c1a:	adds	r1, r1, r4
   37c1c:	str	r1, [sp, #144]	; 0x90
   37c1e:	adc.w	r1, sl, r9
   37c22:	str	r1, [sp, #148]	; 0x94
   37c24:	ldr	r1, [sp, #144]	; 0x90
   37c26:	eor.w	lr, r1, lr
   37c2a:	ldr	r1, [sp, #148]	; 0x94
   37c2c:	eors	r6, r1
   37c2e:	mov.w	r1, lr, lsr #16
   37c32:	orr.w	r8, r1, r6, lsl #16
   37c36:	lsrs	r6, r6, #16
   37c38:	adds.w	r3, r3, r8
   37c3c:	orr.w	sl, r6, lr, lsl #16
   37c40:	adc.w	r0, r0, sl
   37c44:	eors	r4, r3
   37c46:	eor.w	r9, r0, r9
   37c4a:	ldr	r6, [sp, #156]	; 0x9c
   37c4c:	mov.w	r1, r9, lsl #1
   37c50:	orr.w	r1, r1, r4, lsr #31
   37c54:	lsls	r4, r4, #1
   37c56:	orr.w	fp, r4, r9, lsr #31
   37c5a:	str	r1, [sp, #216]	; 0xd8
   37c5c:	ldr	r4, [sp, #152]	; 0x98
   37c5e:	ldr	r1, [sp, #124]	; 0x7c
   37c60:	adds	r1, r1, r4
   37c62:	ldr	r4, [sp, #128]	; 0x80
   37c64:	adc.w	r9, r4, r6
   37c68:	ldr	r4, [sp, #244]	; 0xf4
   37c6a:	adds.w	r1, r1, ip
   37c6e:	adc.w	r9, r9, r4
   37c72:	eor.w	r7, r1, r8
   37c76:	eor.w	lr, r9, sl
   37c7a:	adds.w	r2, r2, lr
   37c7e:	adc.w	r5, r7, r5
   37c82:	eor.w	ip, r2, ip
   37c86:	eor.w	r6, r5, r4
   37c8a:	mov.w	sl, ip, lsr #24
   37c8e:	orr.w	r4, sl, r6, lsl #8
   37c92:	lsrs	r6, r6, #24
   37c94:	orr.w	r8, r6, ip, lsl #8
   37c98:	ldr	r6, [sp, #92]	; 0x5c
   37c9a:	adds	r1, r6, r1
   37c9c:	ldr	r6, [sp, #96]	; 0x60
   37c9e:	adc.w	r9, r6, r9
   37ca2:	adds	r1, r1, r4
   37ca4:	str	r1, [sp, #152]	; 0x98
   37ca6:	adc.w	r1, r9, r8
   37caa:	str	r1, [sp, #156]	; 0x9c
   37cac:	ldr	r1, [sp, #152]	; 0x98
   37cae:	eor.w	lr, r1, lr
   37cb2:	ldr	r1, [sp, #156]	; 0x9c
   37cb4:	eors	r7, r1
   37cb6:	mov.w	r1, lr, lsr #16
   37cba:	orr.w	r1, r1, r7, lsl #16
   37cbe:	lsrs	r7, r7, #16
   37cc0:	str	r1, [sp, #220]	; 0xdc
   37cc2:	orr.w	r1, r7, lr, lsl #16
   37cc6:	str	r1, [sp, #224]	; 0xe0
   37cc8:	ldr	r1, [sp, #220]	; 0xdc
   37cca:	adds	r2, r2, r1
   37ccc:	str	r2, [sp, #176]	; 0xb0
   37cce:	ldr	r2, [sp, #224]	; 0xe0
   37cd0:	ldr	r1, [sp, #168]	; 0xa8
   37cd2:	adc.w	r2, r5, r2
   37cd6:	str	r2, [sp, #180]	; 0xb4
   37cd8:	ldr	r2, [sp, #176]	; 0xb0
   37cda:	eors	r4, r2
   37cdc:	ldr	r2, [sp, #180]	; 0xb4
   37cde:	eor.w	r8, r2, r8
   37ce2:	mov.w	r2, r8, lsl #1
   37ce6:	orr.w	r2, r2, r4, lsr #31
   37cea:	lsls	r4, r4, #1
   37cec:	str	r2, [sp, #252]	; 0xfc
   37cee:	orr.w	r2, r4, r8, lsr #31
   37cf2:	str	r2, [sp, #244]	; 0xf4
   37cf4:	ldr	r2, [sp, #76]	; 0x4c
   37cf6:	ldr	r4, [sp, #172]	; 0xac
   37cf8:	adds	r2, r2, r1
   37cfa:	ldr	r1, [sp, #80]	; 0x50
   37cfc:	adc.w	r7, r1, r4
   37d00:	ldr	r1, [sp, #240]	; 0xf0
   37d02:	adds	r2, r2, r1
   37d04:	ldr	r1, [sp, #248]	; 0xf8
   37d06:	adc.w	r7, r1, r7
   37d0a:	ldr	r1, [sp, #260]	; 0x104
   37d0c:	eor.w	r4, r7, r1
   37d10:	ldr	r1, [sp, #228]	; 0xe4
   37d12:	adds	r3, r3, r4
   37d14:	eor.w	r9, r2, r1
   37d18:	ldr	r1, [sp, #240]	; 0xf0
   37d1a:	adc.w	r0, r0, r9
   37d1e:	eor.w	ip, r3, r1
   37d22:	ldr	r1, [sp, #248]	; 0xf8
   37d24:	eor.w	r5, r0, r1
   37d28:	mov.w	lr, ip, lsr #24
   37d2c:	orr.w	r1, lr, r5, lsl #8
   37d30:	lsrs	r5, r5, #24
   37d32:	orr.w	r6, r5, ip, lsl #8
   37d36:	ldr	r5, [sp, #116]	; 0x74
   37d38:	adds	r2, r5, r2
   37d3a:	ldr	r5, [sp, #120]	; 0x78
   37d3c:	adc.w	r7, r5, r7
   37d40:	adds	r2, r2, r1
   37d42:	str	r2, [sp, #168]	; 0xa8
   37d44:	adc.w	r2, r7, r6
   37d48:	str	r2, [sp, #172]	; 0xac
   37d4a:	ldr	r2, [sp, #168]	; 0xa8
   37d4c:	eors	r4, r2
   37d4e:	ldr	r2, [sp, #172]	; 0xac
   37d50:	eor.w	r2, r2, r9
   37d54:	lsrs	r5, r4, #16
   37d56:	orr.w	r5, r5, r2, lsl #16
   37d5a:	mov.w	r9, r2, lsr #16
   37d5e:	orr.w	r9, r9, r4, lsl #16
   37d62:	adds	r3, r3, r5
   37d64:	str	r3, [sp, #184]	; 0xb8
   37d66:	adc.w	r3, r0, r9
   37d6a:	str	r3, [sp, #188]	; 0xbc
   37d6c:	ldr	r3, [sp, #184]	; 0xb8
   37d6e:	ldr	r2, [sp, #160]	; 0xa0
   37d70:	eors	r1, r3
   37d72:	ldr	r3, [sp, #188]	; 0xbc
   37d74:	ldr	r0, [sp, #196]	; 0xc4
   37d76:	eors	r6, r3
   37d78:	str	r5, [sp, #228]	; 0xe4
   37d7a:	lsls	r3, r6, #1
   37d7c:	orr.w	r3, r3, r1, lsr #31
   37d80:	lsls	r1, r1, #1
   37d82:	str	r3, [sp, #248]	; 0xf8
   37d84:	orr.w	r3, r1, r6, lsr #31
   37d88:	str	r3, [sp, #240]	; 0xf0
   37d8a:	ldr	r3, [sp, #28]
   37d8c:	ldr	r1, [sp, #164]	; 0xa4
   37d8e:	adds	r3, r3, r2
   37d90:	ldr	r2, [sp, #32]
   37d92:	adc.w	ip, r2, r1
   37d96:	ldr	r2, [sp, #216]	; 0xd8
   37d98:	adds.w	r3, r3, fp
   37d9c:	adc.w	ip, ip, r2
   37da0:	ldr	r2, [sp, #212]	; 0xd4
   37da2:	eor.w	r7, ip, r2
   37da6:	ldr	r2, [sp, #208]	; 0xd0
   37da8:	eor.w	r1, r3, r2
   37dac:	ldr	r2, [sp, #192]	; 0xc0
   37dae:	adds	r2, r2, r7
   37db0:	adc.w	r5, r0, r1
   37db4:	ldr	r0, [sp, #216]	; 0xd8
   37db6:	eor.w	fp, r2, fp
   37dba:	eors	r0, r5
   37dbc:	mov.w	r4, fp, lsr #24
   37dc0:	orr.w	r8, r4, r0, lsl #8
   37dc4:	lsrs	r0, r0, #24
   37dc6:	orr.w	r6, r0, fp, lsl #8
   37dca:	ldr	r0, [sp, #100]	; 0x64
   37dcc:	adds	r3, r0, r3
   37dce:	ldr	r0, [sp, #104]	; 0x68
   37dd0:	adc.w	ip, r0, ip
   37dd4:	adds.w	r3, r3, r8
   37dd8:	str	r3, [sp, #160]	; 0xa0
   37dda:	adc.w	r3, ip, r6
   37dde:	str	r3, [sp, #164]	; 0xa4
   37de0:	ldr	r3, [sp, #160]	; 0xa0
   37de2:	eors	r7, r3
   37de4:	ldr	r3, [sp, #164]	; 0xa4
   37de6:	eors	r1, r3
   37de8:	lsrs	r3, r7, #16
   37dea:	orr.w	r3, r3, r1, lsl #16
   37dee:	lsrs	r1, r1, #16
   37df0:	str	r3, [sp, #208]	; 0xd0
   37df2:	orr.w	r3, r1, r7, lsl #16
   37df6:	str	r3, [sp, #212]	; 0xd4
   37df8:	ldr	r3, [sp, #208]	; 0xd0
   37dfa:	ldr	r1, [sp, #144]	; 0x90
   37dfc:	adds	r2, r2, r3
   37dfe:	ldr	r3, [sp, #212]	; 0xd4
   37e00:	eor.w	r8, r2, r8
   37e04:	ldr	r0, [sp, #148]	; 0x94
   37e06:	adc.w	r5, r3, r5
   37e0a:	ldr	r4, [sp, #264]	; 0x108
   37e0c:	eors	r6, r5
   37e0e:	lsls	r3, r6, #1
   37e10:	orr.w	r3, r3, r8, lsr #31
   37e14:	mov.w	r8, r8, lsl #1
   37e18:	str	r3, [sp, #256]	; 0x100
   37e1a:	orr.w	r3, r8, r6, lsr #31
   37e1e:	str	r3, [sp, #216]	; 0xd8
   37e20:	ldr	r3, [sp, #108]	; 0x6c
   37e22:	adds	r1, r3, r1
   37e24:	ldr	r3, [sp, #112]	; 0x70
   37e26:	adc.w	sl, r3, r0
   37e2a:	ldr	r3, [sp, #264]	; 0x108
   37e2c:	ldr	r0, [sp, #204]	; 0xcc
   37e2e:	adds	r1, r1, r3
   37e30:	ldr	r3, [sp, #268]	; 0x10c
   37e32:	adc.w	sl, sl, r3
   37e36:	ldr	r3, [sp, #236]	; 0xec
   37e38:	eor.w	lr, sl, r3
   37e3c:	ldr	r3, [sp, #232]	; 0xe8
   37e3e:	eor.w	r7, r1, r3
   37e42:	ldr	r3, [sp, #200]	; 0xc8
   37e44:	adds.w	r3, r3, lr
   37e48:	eor.w	r6, r3, r4
   37e4c:	ldr	r4, [sp, #268]	; 0x10c
   37e4e:	adcs	r0, r7
   37e50:	eor.w	ip, r0, r4
   37e54:	mov.w	fp, r6, lsr #24
   37e58:	orr.w	r4, fp, ip, lsl #8
   37e5c:	mov.w	ip, ip, lsr #24
   37e60:	orr.w	r8, ip, r6, lsl #8
   37e64:	ldr	r6, [sp, #4]
   37e66:	adds	r1, r6, r1
   37e68:	ldr	r6, [sp, #8]
   37e6a:	adc.w	sl, r6, sl
   37e6e:	adds	r1, r1, r4
   37e70:	str	r1, [sp, #144]	; 0x90
   37e72:	adc.w	r1, sl, r8
   37e76:	str	r1, [sp, #148]	; 0x94
   37e78:	ldr	r1, [sp, #144]	; 0x90
   37e7a:	eor.w	lr, r1, lr
   37e7e:	ldr	r1, [sp, #148]	; 0x94
   37e80:	eors	r7, r1
   37e82:	mov.w	r1, lr, lsr #16
   37e86:	orr.w	r1, r1, r7, lsl #16
   37e8a:	lsrs	r7, r7, #16
   37e8c:	str	r1, [sp, #232]	; 0xe8
   37e8e:	orr.w	r1, r7, lr, lsl #16
   37e92:	str	r1, [sp, #236]	; 0xec
   37e94:	ldr	r1, [sp, #232]	; 0xe8
   37e96:	ldr	r7, [sp, #156]	; 0x9c
   37e98:	adds	r3, r3, r1
   37e9a:	ldr	r1, [sp, #236]	; 0xec
   37e9c:	eor.w	r4, r4, r3
   37ea0:	adc.w	r0, r1, r0
   37ea4:	eor.w	r8, r0, r8
   37ea8:	mov.w	r1, r8, lsl #1
   37eac:	orr.w	r6, r1, r4, lsr #31
   37eb0:	lsls	r4, r4, #1
   37eb2:	orr.w	fp, r4, r8, lsr #31
   37eb6:	ldr	r1, [sp, #4]
   37eb8:	ldr	r4, [sp, #152]	; 0x98
   37eba:	adds	r1, r1, r4
   37ebc:	ldr	r4, [sp, #8]
   37ebe:	adc.w	sl, r4, r7
   37ec2:	adds.w	r1, r1, fp
   37ec6:	adc.w	sl, sl, r6
   37eca:	ldr	r4, [sp, #228]	; 0xe4
   37ecc:	eor.w	lr, sl, r9
   37ed0:	adds.w	r2, r2, lr
   37ed4:	eor.w	r7, r1, r4
   37ed8:	adc.w	r5, r7, r5
   37edc:	eor.w	fp, r2, fp
   37ee0:	eor.w	ip, r5, r6
   37ee4:	mov.w	r4, fp, lsr #24
   37ee8:	orr.w	r6, r4, ip, lsl #8
   37eec:	ldr	r4, [sp, #12]
   37eee:	mov.w	ip, ip, lsr #24
   37ef2:	adds	r1, r4, r1
   37ef4:	ldr	r4, [sp, #16]
   37ef6:	orr.w	r8, ip, fp, lsl #8
   37efa:	adc.w	sl, r4, sl
   37efe:	adds	r1, r1, r6
   37f00:	str	r1, [sp, #152]	; 0x98
   37f02:	adc.w	r1, sl, r8
   37f06:	str	r1, [sp, #156]	; 0x9c
   37f08:	ldr	r1, [sp, #152]	; 0x98
   37f0a:	ldr	r4, [sp, #172]	; 0xac
   37f0c:	eor.w	lr, r1, lr
   37f10:	ldr	r1, [sp, #156]	; 0x9c
   37f12:	eors	r7, r1
   37f14:	mov.w	r1, lr, lsr #16
   37f18:	orr.w	r1, r1, r7, lsl #16
   37f1c:	lsrs	r7, r7, #16
   37f1e:	str	r1, [sp, #228]	; 0xe4
   37f20:	orr.w	r1, r7, lr, lsl #16
   37f24:	str	r1, [sp, #260]	; 0x104
   37f26:	ldr	r1, [sp, #228]	; 0xe4
   37f28:	adds	r2, r2, r1
   37f2a:	str	r2, [sp, #192]	; 0xc0
   37f2c:	ldr	r2, [sp, #260]	; 0x104
   37f2e:	ldr	r1, [sp, #168]	; 0xa8
   37f30:	adc.w	r2, r5, r2
   37f34:	str	r2, [sp, #196]	; 0xc4
   37f36:	ldr	r2, [sp, #192]	; 0xc0
   37f38:	ldr	r5, [sp, #252]	; 0xfc
   37f3a:	eors	r6, r2
   37f3c:	ldr	r2, [sp, #196]	; 0xc4
   37f3e:	eor.w	r8, r2, r8
   37f42:	mov.w	r2, r8, lsl #1
   37f46:	orr.w	r2, r2, r6, lsr #31
   37f4a:	lsls	r6, r6, #1
   37f4c:	str	r2, [sp, #268]	; 0x10c
   37f4e:	orr.w	r2, r6, r8, lsr #31
   37f52:	str	r2, [sp, #264]	; 0x108
   37f54:	ldr	r2, [sp, #20]
   37f56:	adds	r2, r2, r1
   37f58:	ldr	r1, [sp, #24]
   37f5a:	adc.w	r7, r1, r4
   37f5e:	ldr	r1, [sp, #244]	; 0xf4
   37f60:	ldr	r4, [sp, #244]	; 0xf4
   37f62:	adds	r2, r2, r1
   37f64:	ldr	r1, [sp, #252]	; 0xfc
   37f66:	adc.w	r7, r1, r7
   37f6a:	ldr	r1, [sp, #212]	; 0xd4
   37f6c:	eor.w	r6, r7, r1
   37f70:	ldr	r1, [sp, #208]	; 0xd0
   37f72:	adds	r3, r3, r6
   37f74:	eor.w	r1, r2, r1
   37f78:	eor.w	r4, r3, r4
   37f7c:	adc.w	r0, r1, r0
   37f80:	eors	r5, r0
   37f82:	mov.w	r8, r4, lsr #24
   37f86:	orr.w	ip, r8, r5, lsl #8
   37f8a:	lsrs	r5, r5, #24
   37f8c:	orr.w	lr, r5, r4, lsl #8
   37f90:	ldr	r4, [sp, #28]
   37f92:	adds	r2, r4, r2
   37f94:	ldr	r4, [sp, #32]
   37f96:	adc.w	r7, r4, r7
   37f9a:	adds.w	r2, r2, ip
   37f9e:	str	r2, [sp, #168]	; 0xa8
   37fa0:	adc.w	r2, r7, lr
   37fa4:	str	r2, [sp, #172]	; 0xac
   37fa6:	ldr	r2, [sp, #168]	; 0xa8
   37fa8:	eors	r6, r2
   37faa:	ldr	r2, [sp, #172]	; 0xac
   37fac:	eors	r1, r2
   37fae:	lsrs	r2, r6, #16
   37fb0:	orr.w	r2, r2, r1, lsl #16
   37fb4:	lsrs	r1, r1, #16
   37fb6:	str	r2, [sp, #208]	; 0xd0
   37fb8:	orr.w	r2, r1, r6, lsl #16
   37fbc:	str	r2, [sp, #212]	; 0xd4
   37fbe:	ldr	r2, [sp, #208]	; 0xd0
   37fc0:	ldr	r1, [sp, #164]	; 0xa4
   37fc2:	adds	r3, r3, r2
   37fc4:	str	r3, [sp, #200]	; 0xc8
   37fc6:	ldr	r3, [sp, #212]	; 0xd4
   37fc8:	adc.w	r3, r0, r3
   37fcc:	str	r3, [sp, #204]	; 0xcc
   37fce:	ldr	r2, [sp, #204]	; 0xcc
   37fd0:	ldr	r3, [sp, #200]	; 0xc8
   37fd2:	eor.w	lr, r2, lr
   37fd6:	eor.w	r3, r3, ip
   37fda:	mov.w	r2, lr, lsl #1
   37fde:	orr.w	r2, r2, r3, lsr #31
   37fe2:	mov.w	ip, r3, lsl #1
   37fe6:	str	r2, [sp, #244]	; 0xf4
   37fe8:	orr.w	ip, ip, lr, lsr #31
   37fec:	ldr	r2, [sp, #160]	; 0xa0
   37fee:	ldr	r3, [sp, #36]	; 0x24
   37ff0:	adds	r3, r3, r2
   37ff2:	ldr	r2, [sp, #40]	; 0x28
   37ff4:	adc.w	lr, r2, r1
   37ff8:	ldr	r2, [sp, #240]	; 0xf0
   37ffa:	ldr	r1, [sp, #180]	; 0xb4
   37ffc:	adds	r3, r3, r2
   37ffe:	ldr	r2, [sp, #248]	; 0xf8
   38000:	adc.w	lr, lr, r2
   38004:	ldr	r2, [sp, #236]	; 0xec
   38006:	eor.w	r6, lr, r2
   3800a:	ldr	r2, [sp, #232]	; 0xe8
   3800c:	eor.w	r0, r3, r2
   38010:	ldr	r2, [sp, #176]	; 0xb0
   38012:	adds	r2, r2, r6
   38014:	adc.w	r5, r1, r0
   38018:	ldr	r1, [sp, #240]	; 0xf0
   3801a:	eor.w	r8, r2, r1
   3801e:	ldr	r1, [sp, #248]	; 0xf8
   38020:	eor.w	r4, r5, r1
   38024:	mov.w	r9, r8, lsr #24
   38028:	orr.w	r1, r9, r4, lsl #8
   3802c:	lsrs	r4, r4, #24
   3802e:	orr.w	r7, r4, r8, lsl #8
   38032:	ldr	r4, [sp, #44]	; 0x2c
   38034:	adds	r3, r4, r3
   38036:	ldr	r4, [sp, #48]	; 0x30
   38038:	adc.w	lr, r4, lr
   3803c:	adds	r3, r3, r1
   3803e:	str	r3, [sp, #160]	; 0xa0
   38040:	adc.w	r3, lr, r7
   38044:	str	r3, [sp, #164]	; 0xa4
   38046:	ldr	r3, [sp, #160]	; 0xa0
   38048:	eors	r6, r3
   3804a:	ldr	r3, [sp, #164]	; 0xa4
   3804c:	eors	r0, r3
   3804e:	lsrs	r3, r6, #16
   38050:	orr.w	r3, r3, r0, lsl #16
   38054:	lsrs	r0, r0, #16
   38056:	str	r3, [sp, #232]	; 0xe8
   38058:	orr.w	r3, r0, r6, lsl #16
   3805c:	str	r3, [sp, #236]	; 0xec
   3805e:	ldr	r3, [sp, #232]	; 0xe8
   38060:	adds	r2, r2, r3
   38062:	ldr	r3, [sp, #236]	; 0xec
   38064:	eor.w	r1, r1, r2
   38068:	adc.w	r5, r3, r5
   3806c:	eors	r7, r5
   3806e:	lsls	r3, r7, #1
   38070:	orr.w	r3, r3, r1, lsr #31
   38074:	lsls	r1, r1, #1
   38076:	str	r3, [sp, #248]	; 0xf8
   38078:	orr.w	r3, r1, r7, lsr #31
   3807c:	str	r3, [sp, #240]	; 0xf0
   3807e:	ldr	r3, [sp, #52]	; 0x34
   38080:	ldr	r1, [sp, #144]	; 0x90
   38082:	ldr	r0, [sp, #148]	; 0x94
   38084:	adds	r1, r3, r1
   38086:	ldr	r3, [sp, #56]	; 0x38
   38088:	ldr	r4, [sp, #216]	; 0xd8
   3808a:	adc.w	sl, r3, r0
   3808e:	ldr	r3, [sp, #216]	; 0xd8
   38090:	ldr	r0, [sp, #188]	; 0xbc
   38092:	adds	r1, r1, r3
   38094:	ldr	r3, [sp, #256]	; 0x100
   38096:	adc.w	sl, sl, r3
   3809a:	ldr	r3, [sp, #224]	; 0xe0
   3809c:	eor.w	lr, sl, r3
   380a0:	ldr	r3, [sp, #220]	; 0xdc
   380a2:	eor.w	r6, r1, r3
   380a6:	ldr	r3, [sp, #184]	; 0xb8
   380a8:	adds.w	r3, r3, lr
   380ac:	eor.w	r8, r3, r4
   380b0:	ldr	r4, [sp, #256]	; 0x100
   380b2:	adcs	r0, r6
   380b4:	eor.w	r7, r0, r4
   380b8:	mov.w	fp, r8, lsr #24
   380bc:	orr.w	r4, fp, r7, lsl #8
   380c0:	lsrs	r7, r7, #24
   380c2:	orr.w	r9, r7, r8, lsl #8
   380c6:	ldr	r7, [sp, #60]	; 0x3c
   380c8:	adds	r1, r7, r1
   380ca:	ldr	r7, [sp, #64]	; 0x40
   380cc:	adc.w	sl, r7, sl
   380d0:	adds	r1, r1, r4
   380d2:	str	r1, [sp, #144]	; 0x90
   380d4:	adc.w	r1, sl, r9
   380d8:	str	r1, [sp, #148]	; 0x94
   380da:	ldr	r1, [sp, #144]	; 0x90
   380dc:	eor.w	lr, r1, lr
   380e0:	ldr	r1, [sp, #148]	; 0x94
   380e2:	eors	r6, r1
   380e4:	mov.w	r1, lr, lsr #16
   380e8:	orr.w	r8, r1, r6, lsl #16
   380ec:	lsrs	r6, r6, #16
   380ee:	adds.w	r3, r3, r8
   380f2:	orr.w	sl, r6, lr, lsl #16
   380f6:	adc.w	r0, r0, sl
   380fa:	eors	r4, r3
   380fc:	eor.w	r9, r0, r9
   38100:	ldr	r6, [sp, #156]	; 0x9c
   38102:	mov.w	r1, r9, lsl #1
   38106:	orr.w	r1, r1, r4, lsr #31
   3810a:	lsls	r4, r4, #1
   3810c:	orr.w	fp, r4, r9, lsr #31
   38110:	str	r1, [sp, #216]	; 0xd8
   38112:	ldr	r4, [sp, #152]	; 0x98
   38114:	ldr	r1, [sp, #68]	; 0x44
   38116:	adds	r1, r1, r4
   38118:	ldr	r4, [sp, #72]	; 0x48
   3811a:	adc.w	r9, r4, r6
   3811e:	ldr	r4, [sp, #244]	; 0xf4
   38120:	adds.w	r1, r1, ip
   38124:	adc.w	r9, r9, r4
   38128:	eor.w	r7, r1, r8
   3812c:	eor.w	lr, r9, sl
   38130:	adds.w	r2, r2, lr
   38134:	adc.w	r5, r7, r5
   38138:	eor.w	ip, r2, ip
   3813c:	eor.w	r6, r5, r4
   38140:	mov.w	sl, ip, lsr #24
   38144:	orr.w	r4, sl, r6, lsl #8
   38148:	lsrs	r6, r6, #24
   3814a:	orr.w	r8, r6, ip, lsl #8
   3814e:	ldr	r6, [sp, #76]	; 0x4c
   38150:	adds	r1, r6, r1
   38152:	ldr	r6, [sp, #80]	; 0x50
   38154:	adc.w	r9, r6, r9
   38158:	adds	r1, r1, r4
   3815a:	str	r1, [sp, #152]	; 0x98
   3815c:	adc.w	r1, r9, r8
   38160:	str	r1, [sp, #156]	; 0x9c
   38162:	ldr	r1, [sp, #152]	; 0x98
   38164:	eor.w	lr, r1, lr
   38168:	ldr	r1, [sp, #156]	; 0x9c
   3816a:	eors	r7, r1
   3816c:	mov.w	r1, lr, lsr #16
   38170:	orr.w	r1, r1, r7, lsl #16
   38174:	lsrs	r7, r7, #16
   38176:	str	r1, [sp, #220]	; 0xdc
   38178:	orr.w	r1, r7, lr, lsl #16
   3817c:	str	r1, [sp, #224]	; 0xe0
   3817e:	ldr	r1, [sp, #220]	; 0xdc
   38180:	adds	r2, r2, r1
   38182:	str	r2, [sp, #176]	; 0xb0
   38184:	ldr	r2, [sp, #224]	; 0xe0
   38186:	ldr	r1, [sp, #168]	; 0xa8
   38188:	adc.w	r2, r5, r2
   3818c:	str	r2, [sp, #180]	; 0xb4
   3818e:	ldr	r2, [sp, #176]	; 0xb0
   38190:	eors	r4, r2
   38192:	ldr	r2, [sp, #180]	; 0xb4
   38194:	eor.w	r8, r2, r8
   38198:	mov.w	r2, r8, lsl #1
   3819c:	orr.w	r2, r2, r4, lsr #31
   381a0:	lsls	r4, r4, #1
   381a2:	str	r2, [sp, #252]	; 0xfc
   381a4:	orr.w	r2, r4, r8, lsr #31
   381a8:	str	r2, [sp, #244]	; 0xf4
   381aa:	ldr	r2, [sp, #84]	; 0x54
   381ac:	ldr	r4, [sp, #172]	; 0xac
   381ae:	adds	r2, r2, r1
   381b0:	ldr	r1, [sp, #88]	; 0x58
   381b2:	adc.w	r7, r1, r4
   381b6:	ldr	r1, [sp, #240]	; 0xf0
   381b8:	adds	r2, r2, r1
   381ba:	ldr	r1, [sp, #248]	; 0xf8
   381bc:	adc.w	r7, r1, r7
   381c0:	ldr	r1, [sp, #260]	; 0x104
   381c2:	eor.w	r4, r7, r1
   381c6:	ldr	r1, [sp, #228]	; 0xe4
   381c8:	adds	r3, r3, r4
   381ca:	eor.w	sl, r2, r1
   381ce:	ldr	r1, [sp, #240]	; 0xf0
   381d0:	adc.w	r0, r0, sl
   381d4:	eor.w	ip, r3, r1
   381d8:	ldr	r1, [sp, #248]	; 0xf8
   381da:	eor.w	r5, r0, r1
   381de:	mov.w	lr, ip, lsr #24
   381e2:	orr.w	r1, lr, r5, lsl #8
   381e6:	lsrs	r5, r5, #24
   381e8:	orr.w	r6, r5, ip, lsl #8
   381ec:	ldr	r5, [sp, #92]	; 0x5c
   381ee:	adds	r2, r5, r2
   381f0:	ldr	r5, [sp, #96]	; 0x60
   381f2:	adc.w	r7, r5, r7
   381f6:	adds	r2, r2, r1
   381f8:	str	r2, [sp, #168]	; 0xa8
   381fa:	adc.w	r2, r7, r6
   381fe:	str	r2, [sp, #172]	; 0xac
   38200:	ldr	r2, [sp, #168]	; 0xa8
   38202:	eors	r4, r2
   38204:	ldr	r2, [sp, #172]	; 0xac
   38206:	eor.w	r2, r2, sl
   3820a:	lsrs	r5, r4, #16
   3820c:	orr.w	r5, r5, r2, lsl #16
   38210:	mov.w	sl, r2, lsr #16
   38214:	orr.w	sl, sl, r4, lsl #16
   38218:	adds	r3, r3, r5
   3821a:	str	r3, [sp, #184]	; 0xb8
   3821c:	adc.w	r3, r0, sl
   38220:	str	r3, [sp, #188]	; 0xbc
   38222:	ldr	r3, [sp, #184]	; 0xb8
   38224:	ldr	r2, [sp, #160]	; 0xa0
   38226:	eors	r1, r3
   38228:	ldr	r3, [sp, #188]	; 0xbc
   3822a:	str	r5, [sp, #228]	; 0xe4
   3822c:	eors	r6, r3
   3822e:	lsls	r3, r6, #1
   38230:	orr.w	r3, r3, r1, lsr #31
   38234:	lsls	r1, r1, #1
   38236:	str	r3, [sp, #248]	; 0xf8
   38238:	orr.w	r3, r1, r6, lsr #31
   3823c:	str	r3, [sp, #240]	; 0xf0
   3823e:	ldr	r3, [sp, #100]	; 0x64
   38240:	adds	r3, r3, r2
   38242:	ldr	r2, [sp, #104]	; 0x68
   38244:	ldr	r1, [sp, #164]	; 0xa4
   38246:	ldr	r0, [sp, #196]	; 0xc4
   38248:	adc.w	ip, r2, r1
   3824c:	ldr	r2, [sp, #216]	; 0xd8
   3824e:	adds.w	r3, r3, fp
   38252:	adc.w	ip, ip, r2
   38256:	ldr	r2, [sp, #212]	; 0xd4
   38258:	eor.w	r7, ip, r2
   3825c:	ldr	r2, [sp, #208]	; 0xd0
   3825e:	eor.w	r1, r3, r2
   38262:	ldr	r2, [sp, #192]	; 0xc0
   38264:	adds	r2, r2, r7
   38266:	adc.w	r5, r0, r1
   3826a:	ldr	r0, [sp, #216]	; 0xd8
   3826c:	eor.w	fp, r2, fp
   38270:	eors	r0, r5
   38272:	mov.w	r4, fp, lsr #24
   38276:	orr.w	r9, r4, r0, lsl #8
   3827a:	lsrs	r0, r0, #24
   3827c:	orr.w	r6, r0, fp, lsl #8
   38280:	ldr	r0, [sp, #108]	; 0x6c
   38282:	adds	r3, r0, r3
   38284:	ldr	r0, [sp, #112]	; 0x70
   38286:	adc.w	ip, r0, ip
   3828a:	adds.w	r3, r3, r9
   3828e:	str	r3, [sp, #160]	; 0xa0
   38290:	adc.w	r3, ip, r6
   38294:	str	r3, [sp, #164]	; 0xa4
   38296:	ldr	r3, [sp, #160]	; 0xa0
   38298:	ldr	r0, [sp, #148]	; 0x94
   3829a:	eors	r7, r3
   3829c:	ldr	r3, [sp, #164]	; 0xa4
   3829e:	eors	r1, r3
   382a0:	lsrs	r3, r7, #16
   382a2:	orr.w	r3, r3, r1, lsl #16
   382a6:	lsrs	r1, r1, #16
   382a8:	str	r3, [sp, #192]	; 0xc0
   382aa:	orr.w	r3, r1, r7, lsl #16
   382ae:	str	r3, [sp, #196]	; 0xc4
   382b0:	ldr	r3, [sp, #192]	; 0xc0
   382b2:	ldr	r1, [sp, #144]	; 0x90
   382b4:	adds	r2, r2, r3
   382b6:	ldr	r3, [sp, #196]	; 0xc4
   382b8:	eor.w	r9, r2, r9
   382bc:	ldr	r7, [sp, #268]	; 0x10c
   382be:	adc.w	r5, r3, r5
   382c2:	eors	r6, r5
   382c4:	lsls	r3, r6, #1
   382c6:	orr.w	r3, r3, r9, lsr #31
   382ca:	mov.w	r9, r9, lsl #1
   382ce:	str	r3, [sp, #212]	; 0xd4
   382d0:	orr.w	r3, r9, r6, lsr #31
   382d4:	str	r3, [sp, #208]	; 0xd0
   382d6:	ldr	r3, [sp, #116]	; 0x74
   382d8:	ldr	r6, [sp, #264]	; 0x108
   382da:	adds	r1, r3, r1
   382dc:	ldr	r3, [sp, #120]	; 0x78
   382de:	adc.w	r4, r3, r0
   382e2:	ldr	r3, [sp, #264]	; 0x108
   382e4:	ldr	r0, [sp, #204]	; 0xcc
   382e6:	adds	r1, r1, r3
   382e8:	ldr	r3, [sp, #268]	; 0x10c
   382ea:	adc.w	r4, r3, r4
   382ee:	ldr	r3, [sp, #236]	; 0xec
   382f0:	eor.w	r8, r4, r3
   382f4:	ldr	r3, [sp, #232]	; 0xe8
   382f6:	eor.w	ip, r1, r3
   382fa:	ldr	r3, [sp, #200]	; 0xc8
   382fc:	adds.w	r3, r3, r8
   38300:	adc.w	r0, r0, ip
   38304:	eors	r6, r3
   38306:	eor.w	lr, r0, r7
   3830a:	mov.w	fp, r6, lsr #24
   3830e:	orr.w	r7, fp, lr, lsl #8
   38312:	mov.w	lr, lr, lsr #24
   38316:	orr.w	r9, lr, r6, lsl #8
   3831a:	ldr	r6, [sp, #124]	; 0x7c
   3831c:	adds	r1, r6, r1
   3831e:	ldr	r6, [sp, #128]	; 0x80
   38320:	adc.w	r4, r6, r4
   38324:	adds	r1, r1, r7
   38326:	str	r1, [sp, #144]	; 0x90
   38328:	adc.w	r1, r4, r9
   3832c:	str	r1, [sp, #148]	; 0x94
   3832e:	ldr	r1, [sp, #144]	; 0x90
   38330:	ldr	r6, [sp, #152]	; 0x98
   38332:	eor.w	r8, r1, r8
   38336:	ldr	r1, [sp, #148]	; 0x94
   38338:	eor.w	ip, r1, ip
   3833c:	mov.w	r1, r8, lsr #16
   38340:	orr.w	r1, r1, ip, lsl #16
   38344:	mov.w	ip, ip, lsr #16
   38348:	orr.w	fp, ip, r8, lsl #16
   3834c:	adds	r3, r3, r1
   3834e:	adc.w	r0, r0, fp
   38352:	eors	r7, r3
   38354:	eor.w	r9, r0, r9
   38358:	str	r1, [sp, #200]	; 0xc8
   3835a:	mov.w	r1, r9, lsl #1
   3835e:	orr.w	r4, r1, r7, lsr #31
   38362:	ldr	r1, [sp, #116]	; 0x74
   38364:	lsls	r7, r7, #1
   38366:	orr.w	ip, r7, r9, lsr #31
   3836a:	adds	r1, r1, r6
   3836c:	ldr	r7, [sp, #156]	; 0x9c
   3836e:	ldr	r6, [sp, #120]	; 0x78
   38370:	adc.w	r9, r6, r7
   38374:	adds.w	r1, r1, ip
   38378:	adc.w	r9, r9, r4
   3837c:	ldr	r6, [sp, #228]	; 0xe4
   3837e:	eor.w	lr, r9, sl
   38382:	adds.w	r2, r2, lr
   38386:	eor.w	r6, r1, r6
   3838a:	adc.w	r5, r6, r5
   3838e:	eor.w	r7, r2, ip
   38392:	eor.w	ip, r5, r4
   38396:	mov.w	sl, r7, lsr #24
   3839a:	orr.w	r4, sl, ip, lsl #8
   3839e:	mov.w	ip, ip, lsr #24
   383a2:	orr.w	r8, ip, r7, lsl #8
   383a6:	ldr	r7, [sp, #84]	; 0x54
   383a8:	adds	r1, r7, r1
   383aa:	ldr	r7, [sp, #88]	; 0x58
   383ac:	adc.w	r9, r7, r9
   383b0:	adds	r1, r1, r4
   383b2:	str	r1, [sp, #84]	; 0x54
   383b4:	adc.w	r1, r9, r8
   383b8:	str	r1, [sp, #88]	; 0x58
   383ba:	ldr	r1, [sp, #84]	; 0x54
   383bc:	eor.w	lr, r1, lr
   383c0:	ldr	r1, [sp, #88]	; 0x58
   383c2:	eors	r6, r1
   383c4:	mov.w	r1, lr, lsr #16
   383c8:	orr.w	r1, r1, r6, lsl #16
   383cc:	lsrs	r6, r6, #16
   383ce:	str	r1, [sp, #152]	; 0x98
   383d0:	orr.w	r1, r6, lr, lsl #16
   383d4:	str	r1, [sp, #156]	; 0x9c
   383d6:	ldr	r1, [sp, #152]	; 0x98
   383d8:	adds	r2, r2, r1
   383da:	str	r2, [sp, #116]	; 0x74
   383dc:	ldr	r2, [sp, #156]	; 0x9c
   383de:	ldr	r1, [sp, #168]	; 0xa8
   383e0:	adc.w	r2, r5, r2
   383e4:	str	r2, [sp, #120]	; 0x78
   383e6:	ldr	r2, [sp, #116]	; 0x74
   383e8:	eors	r4, r2
   383ea:	ldr	r2, [sp, #120]	; 0x78
   383ec:	eor.w	r8, r2, r8
   383f0:	mov.w	r2, r8, lsl #1
   383f4:	orr.w	r2, r2, r4, lsr #31
   383f8:	lsls	r4, r4, #1
   383fa:	str	r2, [sp, #216]	; 0xd8
   383fc:	orr.w	r2, r4, r8, lsr #31
   38400:	str	r2, [sp, #204]	; 0xcc
   38402:	ldr	r2, [sp, #36]	; 0x24
   38404:	ldr	r4, [sp, #172]	; 0xac
   38406:	adds	r2, r2, r1
   38408:	ldr	r1, [sp, #40]	; 0x28
   3840a:	adc.w	r7, r1, r4
   3840e:	ldr	r1, [sp, #244]	; 0xf4
   38410:	adds	r2, r2, r1
   38412:	ldr	r1, [sp, #252]	; 0xfc
   38414:	ldr	r4, [sp, #244]	; 0xf4
   38416:	adc.w	r7, r1, r7
   3841a:	ldr	r1, [sp, #196]	; 0xc4
   3841c:	ldr	r5, [sp, #252]	; 0xfc
   3841e:	eor.w	r6, r7, r1
   38422:	ldr	r1, [sp, #192]	; 0xc0
   38424:	adds	r3, r3, r6
   38426:	eor.w	r1, r2, r1
   3842a:	eor.w	r4, r3, r4
   3842e:	adc.w	r0, r1, r0
   38432:	eors	r5, r0
   38434:	mov.w	r8, r4, lsr #24
   38438:	orr.w	lr, r8, r5, lsl #8
   3843c:	lsrs	r5, r5, #24
   3843e:	orr.w	ip, r5, r4, lsl #8
   38442:	ldr	r4, [sp, #68]	; 0x44
   38444:	adds	r2, r4, r2
   38446:	ldr	r4, [sp, #72]	; 0x48
   38448:	adc.w	r7, r4, r7
   3844c:	adds.w	r2, r2, lr
   38450:	str	r2, [sp, #36]	; 0x24
   38452:	adc.w	r2, r7, ip
   38456:	str	r2, [sp, #40]	; 0x28
   38458:	ldr	r2, [sp, #36]	; 0x24
   3845a:	eors	r6, r2
   3845c:	ldr	r2, [sp, #40]	; 0x28
   3845e:	eors	r1, r2
   38460:	lsrs	r2, r6, #16
   38462:	orr.w	r2, r2, r1, lsl #16
   38466:	lsrs	r1, r1, #16
   38468:	str	r2, [sp, #168]	; 0xa8
   3846a:	orr.w	r2, r1, r6, lsl #16
   3846e:	str	r2, [sp, #172]	; 0xac
   38470:	ldr	r2, [sp, #168]	; 0xa8
   38472:	ldr	r1, [sp, #164]	; 0xa4
   38474:	adds	r3, r3, r2
   38476:	str	r3, [sp, #68]	; 0x44
   38478:	ldr	r3, [sp, #172]	; 0xac
   3847a:	adc.w	r3, r0, r3
   3847e:	str	r3, [sp, #72]	; 0x48
   38480:	ldr	r2, [sp, #72]	; 0x48
   38482:	ldr	r3, [sp, #68]	; 0x44
   38484:	eor.w	ip, r2, ip
   38488:	eor.w	r3, r3, lr
   3848c:	mov.w	r2, ip, lsl #1
   38490:	orr.w	r2, r2, r3, lsr #31
   38494:	mov.w	lr, r3, lsl #1
   38498:	str	r2, [sp, #192]	; 0xc0
   3849a:	orr.w	lr, lr, ip, lsr #31
   3849e:	ldr	r2, [sp, #160]	; 0xa0
   384a0:	ldr	r3, [sp, #76]	; 0x4c
   384a2:	adds	r3, r3, r2
   384a4:	ldr	r2, [sp, #80]	; 0x50
   384a6:	adc.w	ip, r2, r1
   384aa:	ldr	r2, [sp, #240]	; 0xf0
   384ac:	ldr	r1, [sp, #180]	; 0xb4
   384ae:	adds	r3, r3, r2
   384b0:	ldr	r2, [sp, #248]	; 0xf8
   384b2:	adc.w	ip, ip, r2
   384b6:	ldr	r2, [sp, #200]	; 0xc8
   384b8:	eor.w	r6, ip, fp
   384bc:	eor.w	r0, r3, r2
   384c0:	ldr	r2, [sp, #176]	; 0xb0
   384c2:	adds	r2, r2, r6
   384c4:	adc.w	r5, r1, r0
   384c8:	ldr	r1, [sp, #240]	; 0xf0
   384ca:	eor.w	r8, r2, r1
   384ce:	ldr	r1, [sp, #248]	; 0xf8
   384d0:	eor.w	r4, r5, r1
   384d4:	mov.w	r9, r8, lsr #24
   384d8:	orr.w	r1, r9, r4, lsl #8
   384dc:	lsrs	r4, r4, #24
   384de:	orr.w	r7, r4, r8, lsl #8
   384e2:	ldr	r4, [sp, #124]	; 0x7c
   384e4:	adds	r3, r4, r3
   384e6:	ldr	r4, [sp, #128]	; 0x80
   384e8:	adc.w	ip, r4, ip
   384ec:	adds	r3, r3, r1
   384ee:	str	r3, [sp, #76]	; 0x4c
   384f0:	adc.w	r3, ip, r7
   384f4:	str	r3, [sp, #80]	; 0x50
   384f6:	ldr	r3, [sp, #76]	; 0x4c
   384f8:	eors	r6, r3
   384fa:	ldr	r3, [sp, #80]	; 0x50
   384fc:	eors	r0, r3
   384fe:	lsrs	r3, r6, #16
   38500:	orr.w	r3, r3, r0, lsl #16
   38504:	lsrs	r0, r0, #16
   38506:	str	r3, [sp, #124]	; 0x7c
   38508:	orr.w	r3, r0, r6, lsl #16
   3850c:	str	r3, [sp, #128]	; 0x80
   3850e:	ldr	r3, [sp, #124]	; 0x7c
   38510:	ldr	r0, [sp, #148]	; 0x94
   38512:	adds	r2, r2, r3
   38514:	ldr	r3, [sp, #128]	; 0x80
   38516:	eor.w	r1, r1, r2
   3851a:	ldr	r6, [sp, #208]	; 0xd0
   3851c:	adc.w	r5, r3, r5
   38520:	eors	r7, r5
   38522:	lsls	r3, r7, #1
   38524:	orr.w	r3, r3, r1, lsr #31
   38528:	lsls	r1, r1, #1
   3852a:	str	r3, [sp, #164]	; 0xa4
   3852c:	orr.w	r3, r1, r7, lsr #31
   38530:	ldr	r1, [sp, #144]	; 0x90
   38532:	str	r3, [sp, #160]	; 0xa0
   38534:	ldr	r3, [sp, #108]	; 0x6c
   38536:	adds	r1, r3, r1
   38538:	ldr	r3, [sp, #112]	; 0x70
   3853a:	adc.w	r4, r3, r0
   3853e:	ldr	r3, [sp, #208]	; 0xd0
   38540:	ldr	r0, [sp, #188]	; 0xbc
   38542:	adds	r1, r1, r3
   38544:	ldr	r3, [sp, #212]	; 0xd4
   38546:	adc.w	r4, r3, r4
   3854a:	ldr	r3, [sp, #224]	; 0xe0
   3854c:	eor.w	r8, r4, r3
   38550:	ldr	r3, [sp, #220]	; 0xdc
   38552:	eor.w	r7, r1, r3
   38556:	ldr	r3, [sp, #184]	; 0xb8
   38558:	adds.w	r3, r3, r8
   3855c:	str	r3, [sp, #108]	; 0x6c
   3855e:	eor.w	r9, r3, r6
   38562:	ldr	r6, [sp, #212]	; 0xd4
   38564:	ldr	r3, [sp, #52]	; 0x34
   38566:	adcs	r0, r7
   38568:	eor.w	ip, r0, r6
   3856c:	mov.w	fp, r9, lsr #24
   38570:	adds	r1, r3, r1
   38572:	ldr	r3, [sp, #56]	; 0x38
   38574:	orr.w	r6, fp, ip, lsl #8
   38578:	mov.w	ip, ip, lsr #24
   3857c:	orr.w	sl, ip, r9, lsl #8
   38580:	adc.w	r4, r3, r4
   38584:	adds	r3, r1, r6
   38586:	str	r3, [sp, #52]	; 0x34
   38588:	adc.w	r3, r4, sl
   3858c:	str	r3, [sp, #56]	; 0x38
   3858e:	ldr	r3, [sp, #52]	; 0x34
   38590:	eor.w	r8, r3, r8
   38594:	ldr	r3, [sp, #56]	; 0x38
   38596:	eors	r7, r3
   38598:	mov.w	r1, r8, lsr #16
   3859c:	ldr	r3, [sp, #108]	; 0x6c
   3859e:	orr.w	r4, r1, r7, lsl #16
   385a2:	lsrs	r7, r7, #16
   385a4:	adds	r3, r3, r4
   385a6:	orr.w	fp, r7, r8, lsl #16
   385aa:	adc.w	r0, r0, fp
   385ae:	eors	r6, r3
   385b0:	eor.w	sl, r0, sl
   385b4:	mov.w	r1, sl, lsl #1
   385b8:	orr.w	r1, r1, r6, lsr #31
   385bc:	lsls	r6, r6, #1
   385be:	str	r1, [sp, #112]	; 0x70
   385c0:	orr.w	r1, r6, sl, lsr #31
   385c4:	str	r1, [sp, #108]	; 0x6c
   385c6:	ldr	r6, [sp, #84]	; 0x54
   385c8:	ldr	r1, [sp, #12]
   385ca:	ldr	r7, [sp, #88]	; 0x58
   385cc:	adds	r1, r1, r6
   385ce:	ldr	r6, [sp, #16]
   385d0:	adc.w	r9, r6, r7
   385d4:	ldr	r6, [sp, #192]	; 0xc0
   385d6:	adds.w	r1, r1, lr
   385da:	adc.w	r9, r9, r6
   385de:	eor.w	r7, r1, r4
   385e2:	eor.w	r6, r9, fp
   385e6:	ldr	r4, [sp, #192]	; 0xc0
   385e8:	adds	r2, r2, r6
   385ea:	adc.w	r5, r7, r5
   385ee:	eor.w	lr, r2, lr
   385f2:	eors	r4, r5
   385f4:	mov.w	sl, lr, lsr #24
   385f8:	orr.w	ip, sl, r4, lsl #8
   385fc:	lsrs	r4, r4, #24
   385fe:	orr.w	r8, r4, lr, lsl #8
   38602:	ldr	r4, [sp, #100]	; 0x64
   38604:	adds	r1, r4, r1
   38606:	ldr	r4, [sp, #104]	; 0x68
   38608:	adc.w	r9, r4, r9
   3860c:	adds.w	r1, r1, ip
   38610:	adc.w	r4, r9, r8
   38614:	eors	r6, r1
   38616:	eors	r7, r4
   38618:	strd	r1, r4, [sp, #400]	; 0x190
   3861c:	mov.w	lr, r6, lsr #16
   38620:	orr.w	r1, lr, r7, lsl #16
   38624:	lsrs	r7, r7, #16
   38626:	orr.w	r4, r7, r6, lsl #16
   3862a:	adds	r2, r2, r1
   3862c:	adc.w	r5, r4, r5
   38630:	strd	r2, r5, [sp, #480]	; 0x1e0
   38634:	eor.w	r5, r5, r8
   38638:	eor.w	r2, r2, ip
   3863c:	strd	r1, r4, [sp, #520]	; 0x208
   38640:	lsls	r6, r5, #1
   38642:	ldr	r1, [sp, #36]	; 0x24
   38644:	orr.w	r6, r6, r2, lsr #31
   38648:	lsls	r2, r2, #1
   3864a:	orr.w	r5, r2, r5, lsr #31
   3864e:	ldr	r2, [sp, #4]
   38650:	ldr	r4, [sp, #40]	; 0x28
   38652:	adds	r2, r2, r1
   38654:	ldr	r1, [sp, #8]
   38656:	strd	r5, r6, [sp, #440]	; 0x1b8
   3865a:	adc.w	r7, r1, r4
   3865e:	ldr	r1, [sp, #160]	; 0xa0
   38660:	ldr	r5, [sp, #160]	; 0xa0
   38662:	adds	r2, r2, r1
   38664:	ldr	r1, [sp, #164]	; 0xa4
   38666:	ldr	r4, [sp, #152]	; 0x98
   38668:	adc.w	r7, r1, r7
   3866c:	ldr	r1, [sp, #156]	; 0x9c
   3866e:	eors	r4, r2
   38670:	eors	r1, r7
   38672:	adds	r3, r3, r1
   38674:	eor.w	lr, r3, r5
   38678:	ldr	r5, [sp, #164]	; 0xa4
   3867a:	adc.w	r0, r4, r0
   3867e:	eors	r5, r0
   38680:	mov.w	r8, lr, lsr #24
   38684:	orr.w	r6, r8, r5, lsl #8
   38688:	lsrs	r5, r5, #24
   3868a:	orr.w	ip, r5, lr, lsl #8
   3868e:	ldr	r5, [sp, #20]
   38690:	adds	r2, r5, r2
   38692:	ldr	r5, [sp, #24]
   38694:	adc.w	r7, r5, r7
   38698:	adds	r2, r2, r6
   3869a:	adc.w	r7, r7, ip
   3869e:	eors	r1, r2
   386a0:	eors	r4, r7
   386a2:	strd	r2, r7, [sp, #408]	; 0x198
   386a6:	lsrs	r7, r1, #16
   386a8:	orr.w	r2, r7, r4, lsl #16
   386ac:	lsrs	r4, r4, #16
   386ae:	orr.w	r5, r4, r1, lsl #16
   386b2:	adds	r3, r3, r2
   386b4:	adc.w	r0, r5, r0
   386b8:	strd	r2, r5, [sp, #496]	; 0x1f0
   386bc:	strd	r3, r0, [sp, #488]	; 0x1e8
   386c0:	eor.w	r0, r0, ip
   386c4:	eors	r3, r6
   386c6:	ldr	r2, [sp, #76]	; 0x4c
   386c8:	lsls	r1, r0, #1
   386ca:	orr.w	r1, r1, r3, lsr #31
   386ce:	lsls	r3, r3, #1
   386d0:	orr.w	r0, r3, r0, lsr #31
   386d4:	ldr	r3, [sp, #92]	; 0x5c
   386d6:	strd	r0, r1, [sp, #448]	; 0x1c0
   386da:	adds	r3, r3, r2
   386dc:	ldr	r1, [sp, #80]	; 0x50
   386de:	ldr	r2, [sp, #96]	; 0x60
   386e0:	adc.w	ip, r2, r1
   386e4:	ldr	r2, [sp, #108]	; 0x6c
   386e6:	ldr	r1, [sp, #120]	; 0x78
   386e8:	adds	r3, r3, r2
   386ea:	ldr	r2, [sp, #112]	; 0x70
   386ec:	adc.w	ip, ip, r2
   386f0:	ldr	r2, [sp, #172]	; 0xac
   386f2:	eor.w	r0, ip, r2
   386f6:	ldr	r2, [sp, #168]	; 0xa8
   386f8:	eor.w	r4, r3, r2
   386fc:	ldr	r2, [sp, #116]	; 0x74
   386fe:	adds	r2, r2, r0
   38700:	adc.w	r5, r1, r4
   38704:	ldr	r1, [sp, #108]	; 0x6c
   38706:	eor.w	r6, r2, r1
   3870a:	ldr	r1, [sp, #112]	; 0x70
   3870c:	eors	r1, r5
   3870e:	mov.w	r8, r6, lsr #24
   38712:	orr.w	r7, r8, r1, lsl #8
   38716:	lsrs	r1, r1, #24
   38718:	orr.w	lr, r1, r6, lsl #8
   3871c:	ldr	r1, [sp, #60]	; 0x3c
   3871e:	adds	r3, r1, r3
   38720:	ldr	r1, [sp, #64]	; 0x40
   38722:	adc.w	ip, r1, ip
   38726:	adds	r3, r3, r7
   38728:	adc.w	r1, ip, lr
   3872c:	eors	r0, r3
   3872e:	eors	r4, r1
   38730:	strd	r3, r1, [sp, #416]	; 0x1a0
   38734:	lsrs	r6, r0, #16
   38736:	orr.w	r3, r6, r4, lsl #16
   3873a:	lsrs	r4, r4, #16
   3873c:	orr.w	r1, r4, r0, lsl #16
   38740:	adds	r2, r2, r3
   38742:	adc.w	r5, r1, r5
   38746:	strd	r2, r5, [sp, #464]	; 0x1d0
   3874a:	eor.w	r5, r5, lr
   3874e:	eors	r2, r7
   38750:	strd	r3, r1, [sp, #504]	; 0x1f8
   38754:	lsls	r0, r5, #1
   38756:	ldr	r3, [sp, #44]	; 0x2c
   38758:	orr.w	r0, r0, r2, lsr #31
   3875c:	lsls	r2, r2, #1
   3875e:	orr.w	r5, r2, r5, lsr #31
   38762:	ldr	r2, [sp, #52]	; 0x34
   38764:	strd	r5, r0, [sp, #456]	; 0x1c8
   38768:	adds	r1, r3, r2
   3876a:	ldr	r3, [sp, #48]	; 0x30
   3876c:	ldr	r2, [sp, #56]	; 0x38
   3876e:	adc.w	r4, r3, r2
   38772:	ldr	r3, [sp, #204]	; 0xcc
   38774:	adds	r1, r1, r3
   38776:	ldr	r3, [sp, #216]	; 0xd8
   38778:	adc.w	r2, r4, r3
   3877c:	ldr	r3, [sp, #128]	; 0x80
   3877e:	eor.w	r5, r2, r3
   38782:	ldr	r3, [sp, #124]	; 0x7c
   38784:	ldr	r0, [sp, #72]	; 0x48
   38786:	eor.w	r6, r1, r3
   3878a:	ldr	r3, [sp, #68]	; 0x44
   3878c:	ldr	r4, [sp, #204]	; 0xcc
   3878e:	adds	r3, r3, r5
   38790:	ldr	r7, [sp, #216]	; 0xd8
   38792:	adcs	r0, r6
   38794:	eors	r4, r3
   38796:	eors	r7, r0
   38798:	mov.w	r8, r4, lsr #24
   3879c:	orr.w	ip, r8, r7, lsl #8
   387a0:	lsrs	r7, r7, #24
   387a2:	orr.w	lr, r7, r4, lsl #8
   387a6:	ldr	r4, [sp, #28]
   387a8:	adds	r1, r4, r1
   387aa:	ldr	r4, [sp, #32]
   387ac:	adc.w	r2, r4, r2
   387b0:	adds.w	r1, r1, ip
   387b4:	adc.w	r2, r2, lr
   387b8:	eors	r5, r1
   387ba:	eors	r6, r2
   387bc:	strd	r1, r2, [sp, #424]	; 0x1a8
   387c0:	lsrs	r1, r5, #16
   387c2:	orr.w	r2, r1, r6, lsl #16
   387c6:	lsrs	r6, r6, #16
   387c8:	adds	r3, r3, r2
   387ca:	orr.w	r7, r6, r5, lsl #16
   387ce:	adc.w	r0, r7, r0
   387d2:	strd	r3, r0, [sp, #472]	; 0x1d8
   387d6:	eor.w	r0, r0, lr
   387da:	eor.w	ip, r3, ip
   387de:	strd	r2, r7, [sp, #512]	; 0x200
   387e2:	lsls	r3, r0, #1
   387e4:	orr.w	r3, r3, ip, lsr #31
   387e8:	mov.w	ip, ip, lsl #1
   387ec:	orr.w	r0, ip, r0, lsr #31
   387f0:	strd	r0, r3, [sp, #432]	; 0x1b0
   387f4:	ldr	r1, [sp, #136]	; 0x88
   387f6:	ldr	r3, [sp, #136]	; 0x88
   387f8:	adds	r1, #8
   387fa:	str	r1, [sp, #136]	; 0x88
   387fc:	ldr	r1, [sp, #132]	; 0x84
   387fe:	ldrd	r2, r3, [r3]
   38802:	ldr.w	r0, [r1, #8]!
   38806:	eors	r2, r0
   38808:	str	r1, [sp, #132]	; 0x84
   3880a:	ldr	r1, [r1, #4]
   3880c:	eors	r3, r1
   3880e:	ldr	r1, [sp, #136]	; 0x88
   38810:	ldrd	r0, r1, [r1, #56]	; 0x38
   38814:	eors	r3, r1
   38816:	ldr	r1, [sp, #132]	; 0x84
   38818:	eors	r2, r0
   3881a:	str	r2, [r1, #0]
   3881c:	ldr	r2, [sp, #140]	; 0x8c
   3881e:	str	r3, [r1, #4]
   38820:	cmp	r1, r2
   38822:	bne.n	387f4 <SHA256Result@@Base+0x3a08>
   38824:	ldr	r2, [pc, #24]	; (38840 <SHA256Result@@Base+0x3a54>)
   38826:	ldr	r3, [pc, #28]	; (38844 <SHA256Result@@Base+0x3a58>)
   38828:	add	r2, pc
   3882a:	ldr	r3, [r2, r3]
   3882c:	ldr	r2, [r3, #0]
   3882e:	ldr	r3, [sp, #532]	; 0x214
   38830:	eors	r2, r3
   38832:	beq.n	38838 <SHA256Result@@Base+0x3a4c>
   38834:	blx	86b8 <__stack_chk_fail@plt>
   38838:	add.w	sp, sp, #540	; 0x21c
   3883c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38840:	stmia	r5!, {r5, r6}
   38842:	movs	r2, r0
   38844:	lsls	r4, r4, #8
	...

00038848 <blake2b_init_param@@Base>:
   38848:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3884c:	movs	r2, #240	; 0xf0
   3884e:	ldr	r6, [pc, #80]	; (388a0 <blake2b_init_param@@Base+0x58>)
   38850:	mov	r5, r1
   38852:	movs	r1, #0
   38854:	mov	r4, r0
   38856:	blx	8978 <memset@plt+0x4>
   3885a:	sub.w	r2, r4, #8
   3885e:	add	r6, pc
   38860:	add.w	r8, r4, #56	; 0x38
   38864:	mov	r3, r2
   38866:	ldrd	r0, r1, [r6], #8
   3886a:	strd	r0, r1, [r3, #8]!
   3886e:	cmp	r3, r8
   38870:	bne.n	38866 <blake2b_init_param@@Base+0x1e>
   38872:	mov	r6, r5
   38874:	mov	r0, r6
   38876:	adds	r6, #8
   38878:	bl	34e00 <SHA256Result@@Base+0x14>
   3887c:	ldr.w	r7, [r2, #8]!
   38880:	cmp	r2, r8
   38882:	eor.w	r0, r0, r7
   38886:	ldr	r3, [r2, #4]
   38888:	eor.w	r1, r1, r3
   3888c:	strd	r0, r1, [r2]
   38890:	bne.n	38874 <blake2b_init_param@@Base+0x2c>
   38892:	ldrb	r3, [r5, #0]
   38894:	movs	r0, #0
   38896:	str.w	r3, [r4, #228]	; 0xe4
   3889a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3889e:	nop
   388a0:	add	sp, #408	; 0x198
   388a2:	movs	r1, r0

000388a4 <blake2b_init@@Base>:
   388a4:	ldr	r2, [pc, #124]	; (38924 <blake2b_init@@Base+0x80>)
   388a6:	ldr	r3, [pc, #128]	; (38928 <blake2b_init@@Base+0x84>)
   388a8:	add	r2, pc
   388aa:	push	{r4, r5, lr}
   388ac:	sub	sp, #76	; 0x4c
   388ae:	ldr	r3, [r2, r3]
   388b0:	mov	r5, r0
   388b2:	ldr	r3, [r3, #0]
   388b4:	str	r3, [sp, #68]	; 0x44
   388b6:	mov.w	r3, #0
   388ba:	subs	r3, r1, #1
   388bc:	cmp	r3, #63	; 0x3f
   388be:	bhi.n	38918 <blake2b_init@@Base+0x74>
   388c0:	movs	r4, #0
   388c2:	movs	r2, #14
   388c4:	strb.w	r1, [sp, #4]
   388c8:	add.w	r0, sp, #22
   388cc:	mov	r1, r4
   388ce:	movw	r3, #257	; 0x101
   388d2:	strb.w	r4, [sp, #5]
   388d6:	strh.w	r3, [sp, #6]
   388da:	strd	r4, r4, [sp, #8]
   388de:	str	r4, [sp, #16]
   388e0:	strh.w	r4, [sp, #20]
   388e4:	blx	8978 <memset@plt+0x4>
   388e8:	movs	r2, #16
   388ea:	mov	r1, r4
   388ec:	add	r0, sp, #36	; 0x24
   388ee:	blx	8978 <memset@plt+0x4>
   388f2:	mov	r1, r4
   388f4:	add	r0, sp, #52	; 0x34
   388f6:	movs	r2, #16
   388f8:	blx	8978 <memset@plt+0x4>
   388fc:	add	r1, sp, #4
   388fe:	mov	r0, r5
   38900:	bl	38848 <blake2b_init_param@@Base>
   38904:	ldr	r2, [pc, #36]	; (3892c <blake2b_init@@Base+0x88>)
   38906:	ldr	r3, [pc, #32]	; (38928 <blake2b_init@@Base+0x84>)
   38908:	add	r2, pc
   3890a:	ldr	r3, [r2, r3]
   3890c:	ldr	r2, [r3, #0]
   3890e:	ldr	r3, [sp, #68]	; 0x44
   38910:	eors	r2, r3
   38912:	beq.n	3891e <blake2b_init@@Base+0x7a>
   38914:	blx	86b8 <__stack_chk_fail@plt>
   38918:	mov.w	r0, #4294967295	; 0xffffffff
   3891c:	b.n	38904 <blake2b_init@@Base+0x60>
   3891e:	add	sp, #76	; 0x4c
   38920:	pop	{r4, r5, pc}
   38922:	nop
   38924:	stmia	r4!, {r5, r6, r7}
   38926:	movs	r2, r0
   38928:	lsls	r4, r4, #8
   3892a:	movs	r0, r0
   3892c:	stmia	r4!, {r7}
   3892e:	movs	r2, r0

00038930 <blake2b_update@@Base>:
   38930:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38934:	mov	r4, r0
   38936:	mov	sl, r1
   38938:	mov	r5, r2
   3893a:	cmp	r2, #0
   3893c:	beq.n	389ca <blake2b_update@@Base+0x9a>
   3893e:	ldr.w	r3, [r0, #224]	; 0xe0
   38942:	add.w	fp, r0, #96	; 0x60
   38946:	rsb	r2, r3, #128	; 0x80
   3894a:	cmp	r5, r2
   3894c:	bls.n	389b2 <blake2b_update@@Base+0x82>
   3894e:	movs	r0, #0
   38950:	str.w	r0, [r4, #224]	; 0xe0
   38954:	add.w	r0, fp, r3
   38958:	str	r2, [sp, #4]
   3895a:	str	r3, [sp, #0]
   3895c:	blx	8628 <memcpy@plt+0x4>
   38960:	ldrd	r1, r0, [r4, #64]	; 0x40
   38964:	adds.w	r8, r1, #128	; 0x80
   38968:	adc.w	r9, r0, #0
   3896c:	ldrd	r0, r1, [r4, #72]	; 0x48
   38970:	cmp.w	r9, #0
   38974:	strd	r8, r9, [r4, #64]	; 0x40
   38978:	it	eq
   3897a:	cmpeq.w	r8, #128	; 0x80
   3897e:	ite	cc
   38980:	movcc.w	ip, #1
   38984:	movcs.w	ip, #0
   38988:	adds.w	r0, r0, ip
   3898c:	adc.w	r1, r1, #0
   38990:	strd	r0, r1, [r4, #72]	; 0x48
   38994:	mov	r1, fp
   38996:	mov	r0, r4
   38998:	bl	34e08 <SHA256Result@@Base+0x1c>
   3899c:	ldr	r3, [sp, #0]
   3899e:	ldr	r2, [sp, #4]
   389a0:	subs	r3, #128	; 0x80
   389a2:	add	r2, sl
   389a4:	add	r5, r3
   389a6:	add.w	r8, r2, r5
   389aa:	cmp	r5, #128	; 0x80
   389ac:	sub.w	sl, r8, r5
   389b0:	bhi.n	389d2 <blake2b_update@@Base+0xa2>
   389b2:	ldr.w	r0, [r4, #224]	; 0xe0
   389b6:	mov	r2, r5
   389b8:	mov	r1, sl
   389ba:	add	r0, fp
   389bc:	blx	8628 <memcpy@plt+0x4>
   389c0:	ldr.w	r2, [r4, #224]	; 0xe0
   389c4:	add	r2, r5
   389c6:	str.w	r2, [r4, #224]	; 0xe0
   389ca:	movs	r0, #0
   389cc:	add	sp, #12
   389ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   389d2:	ldrd	r3, r2, [r4, #64]	; 0x40
   389d6:	mov	r0, r4
   389d8:	subs	r5, #128	; 0x80
   389da:	adds.w	r6, r3, #128	; 0x80
   389de:	adc.w	r7, r2, #0
   389e2:	ldrd	r2, r3, [r4, #72]	; 0x48
   389e6:	cmp	r7, #0
   389e8:	strd	r6, r7, [r4, #64]	; 0x40
   389ec:	it	eq
   389ee:	cmpeq	r6, #128	; 0x80
   389f0:	ite	cc
   389f2:	movcc	r1, #1
   389f4:	movcs	r1, #0
   389f6:	adds	r2, r2, r1
   389f8:	mov	r1, sl
   389fa:	adc.w	r3, r3, #0
   389fe:	strd	r2, r3, [r4, #72]	; 0x48
   38a02:	bl	34e08 <SHA256Result@@Base+0x1c>
   38a06:	b.n	389aa <blake2b_update@@Base+0x7a>

00038a08 <blake2b_init_key@@Base>:
   38a08:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38a0c:	mov	r8, r2
   38a0e:	ldr	r2, [pc, #192]	; (38ad0 <blake2b_init_key@@Base+0xc8>)
   38a10:	mov	r6, r3
   38a12:	ldr	r3, [pc, #192]	; (38ad4 <blake2b_init_key@@Base+0xcc>)
   38a14:	sub	sp, #200	; 0xc8
   38a16:	add	r2, pc
   38a18:	mov	r7, r0
   38a1a:	ldr	r3, [r2, r3]
   38a1c:	ldr	r3, [r3, #0]
   38a1e:	str	r3, [sp, #196]	; 0xc4
   38a20:	mov.w	r3, #0
   38a24:	subs	r3, r1, #1
   38a26:	cmp	r3, #63	; 0x3f
   38a28:	bls.n	38a42 <blake2b_init_key@@Base+0x3a>
   38a2a:	mov.w	r0, #4294967295	; 0xffffffff
   38a2e:	ldr	r2, [pc, #168]	; (38ad8 <blake2b_init_key@@Base+0xd0>)
   38a30:	ldr	r3, [pc, #160]	; (38ad4 <blake2b_init_key@@Base+0xcc>)
   38a32:	add	r2, pc
   38a34:	ldr	r3, [r2, r3]
   38a36:	ldr	r2, [r3, #0]
   38a38:	ldr	r3, [sp, #196]	; 0xc4
   38a3a:	eors	r2, r3
   38a3c:	beq.n	38aca <blake2b_init_key@@Base+0xc2>
   38a3e:	blx	86b8 <__stack_chk_fail@plt>
   38a42:	cmp.w	r8, #0
   38a46:	beq.n	38a2a <blake2b_init_key@@Base+0x22>
   38a48:	subs	r3, r6, #1
   38a4a:	cmp	r3, #63	; 0x3f
   38a4c:	bhi.n	38a2a <blake2b_init_key@@Base+0x22>
   38a4e:	movs	r4, #0
   38a50:	movs	r2, #14
   38a52:	strb.w	r1, [sp, #4]
   38a56:	add.w	r0, sp, #22
   38a5a:	mov	r1, r4
   38a5c:	movw	r3, #257	; 0x101
   38a60:	strb.w	r6, [sp, #5]
   38a64:	strh.w	r3, [sp, #6]
   38a68:	strd	r4, r4, [sp, #8]
   38a6c:	str	r4, [sp, #16]
   38a6e:	strh.w	r4, [sp, #20]
   38a72:	blx	8978 <memset@plt+0x4>
   38a76:	movs	r2, #16
   38a78:	mov	r1, r4
   38a7a:	add	r0, sp, #36	; 0x24
   38a7c:	blx	8978 <memset@plt+0x4>
   38a80:	movs	r2, #16
   38a82:	mov	r1, r4
   38a84:	add	r0, sp, #52	; 0x34
   38a86:	blx	8978 <memset@plt+0x4>
   38a8a:	add	r1, sp, #4
   38a8c:	mov	r0, r7
   38a8e:	bl	38848 <blake2b_init_param@@Base>
   38a92:	cmp	r0, r4
   38a94:	blt.n	38a2a <blake2b_init_key@@Base+0x22>
   38a96:	add	r5, sp, #68	; 0x44
   38a98:	movs	r2, #128	; 0x80
   38a9a:	mov	r1, r4
   38a9c:	mov	r0, r5
   38a9e:	blx	8978 <memset@plt+0x4>
   38aa2:	movs	r3, #128	; 0x80
   38aa4:	mov	r2, r6
   38aa6:	mov	r1, r8
   38aa8:	mov	r0, r5
   38aaa:	blx	8748 <__memcpy_chk@plt>
   38aae:	movs	r2, #128	; 0x80
   38ab0:	mov	r1, r5
   38ab2:	mov	r0, r7
   38ab4:	bl	38930 <blake2b_update@@Base>
   38ab8:	ldr	r3, [pc, #32]	; (38adc <blake2b_init_key@@Base+0xd4>)
   38aba:	movs	r2, #128	; 0x80
   38abc:	mov	r1, r4
   38abe:	add	r3, pc
   38ac0:	mov	r0, r5
   38ac2:	ldr	r3, [r3, #0]
   38ac4:	blx	r3
   38ac6:	mov	r0, r4
   38ac8:	b.n	38a2e <blake2b_init_key@@Base+0x26>
   38aca:	add	sp, #200	; 0xc8
   38acc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38ad0:	stmia	r3!, {r1, r4, r5, r6}
   38ad2:	movs	r2, r0
   38ad4:	lsls	r4, r4, #8
   38ad6:	movs	r0, r0
   38ad8:	stmia	r3!, {r1, r2, r4, r6}
   38ada:	movs	r2, r0
   38adc:	bvc.n	38bd4 <blake2b_final@@Base+0xf4>
   38ade:	movs	r2, r0

00038ae0 <blake2b_final@@Base>:
   38ae0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   38ae4:	mov	r6, r2
   38ae6:	ldr	r2, [pc, #280]	; (38c00 <blake2b_final@@Base+0x120>)
   38ae8:	sub	sp, #76	; 0x4c
   38aea:	ldr	r3, [pc, #280]	; (38c04 <blake2b_final@@Base+0x124>)
   38aec:	mov	r5, r1
   38aee:	add	r2, pc
   38af0:	mov	r4, r0
   38af2:	movs	r1, #0
   38af4:	add	r0, sp, #8
   38af6:	ldr	r3, [r2, r3]
   38af8:	movs	r2, #60	; 0x3c
   38afa:	ldr	r3, [r3, #0]
   38afc:	str	r3, [sp, #68]	; 0x44
   38afe:	mov.w	r3, #0
   38b02:	str	r1, [sp, #4]
   38b04:	blx	8978 <memset@plt+0x4>
   38b08:	cmp	r5, #0
   38b0a:	beq.n	38bf4 <blake2b_final@@Base+0x114>
   38b0c:	ldr.w	r3, [r4, #228]	; 0xe4
   38b10:	cmp	r3, r6
   38b12:	bhi.n	38bf4 <blake2b_final@@Base+0x114>
   38b14:	ldrd	r2, r3, [r4, #80]	; 0x50
   38b18:	orrs	r3, r2
   38b1a:	bne.n	38bf4 <blake2b_final@@Base+0x114>
   38b1c:	ldrd	r2, r3, [r4, #64]	; 0x40
   38b20:	movs	r7, #0
   38b22:	ldr.w	r0, [r4, #224]	; 0xe0
   38b26:	adds.w	r8, r0, r2
   38b2a:	adcs.w	r9, r7, r3
   38b2e:	ldrd	r2, r3, [r4, #72]	; 0x48
   38b32:	strd	r8, r9, [r4, #64]	; 0x40
   38b36:	ite	cs
   38b38:	movcs	r1, #1
   38b3a:	movcc	r1, #0
   38b3c:	adds	r2, r2, r1
   38b3e:	ldrb.w	r1, [r4, #232]	; 0xe8
   38b42:	adc.w	r3, r3, #0
   38b46:	strd	r2, r3, [r4, #72]	; 0x48
   38b4a:	mov.w	r2, #4294967295	; 0xffffffff
   38b4e:	mov.w	r3, #4294967295	; 0xffffffff
   38b52:	cbz	r1, 38b58 <blake2b_final@@Base+0x78>
   38b54:	strd	r2, r3, [r4, #88]	; 0x58
   38b58:	add.w	r6, r4, #96	; 0x60
   38b5c:	strd	r2, r3, [r4, #80]	; 0x50
   38b60:	movs	r1, #0
   38b62:	rsb	r2, r0, #128	; 0x80
   38b66:	add	r0, r6
   38b68:	add.w	r7, r4, #56	; 0x38
   38b6c:	blx	8978 <memset@plt+0x4>
   38b70:	mov	r1, r6
   38b72:	mov	r0, r4
   38b74:	bl	34e08 <SHA256Result@@Base+0x1c>
   38b78:	add	r3, sp, #4
   38b7a:	sub.w	r1, r4, #8
   38b7e:	mov	r6, r3
   38b80:	ldr.w	r0, [r1, #8]!
   38b84:	adds	r3, #8
   38b86:	cmp	r1, r7
   38b88:	ldr	r2, [r1, #4]
   38b8a:	mov.w	ip, r0, lsr #8
   38b8e:	strb.w	r0, [r3, #-8]
   38b92:	strb.w	ip, [r3, #-7]
   38b96:	mov.w	ip, r0, lsr #16
   38b9a:	strb.w	r2, [r3, #-4]
   38b9e:	mov.w	r0, r0, lsr #24
   38ba2:	strb.w	ip, [r3, #-6]
   38ba6:	strb.w	r0, [r3, #-5]
   38baa:	mov.w	r0, r2, lsr #8
   38bae:	strb.w	r0, [r3, #-3]
   38bb2:	mov.w	r0, r2, lsr #16
   38bb6:	mov.w	r2, r2, lsr #24
   38bba:	strb.w	r0, [r3, #-2]
   38bbe:	strb.w	r2, [r3, #-1]
   38bc2:	bne.n	38b80 <blake2b_final@@Base+0xa0>
   38bc4:	ldr.w	r2, [r4, #228]	; 0xe4
   38bc8:	mov	r1, r6
   38bca:	mov	r0, r5
   38bcc:	blx	8628 <memcpy@plt+0x4>
   38bd0:	ldr	r3, [pc, #52]	; (38c08 <blake2b_final@@Base+0x128>)
   38bd2:	movs	r2, #64	; 0x40
   38bd4:	movs	r1, #0
   38bd6:	add	r3, pc
   38bd8:	mov	r0, r6
   38bda:	ldr	r3, [r3, #0]
   38bdc:	blx	r3
   38bde:	movs	r0, #0
   38be0:	ldr	r2, [pc, #40]	; (38c0c <blake2b_final@@Base+0x12c>)
   38be2:	ldr	r3, [pc, #32]	; (38c04 <blake2b_final@@Base+0x124>)
   38be4:	add	r2, pc
   38be6:	ldr	r3, [r2, r3]
   38be8:	ldr	r2, [r3, #0]
   38bea:	ldr	r3, [sp, #68]	; 0x44
   38bec:	eors	r2, r3
   38bee:	beq.n	38bfa <blake2b_final@@Base+0x11a>
   38bf0:	blx	86b8 <__stack_chk_fail@plt>
   38bf4:	mov.w	r0, #4294967295	; 0xffffffff
   38bf8:	b.n	38be0 <blake2b_final@@Base+0x100>
   38bfa:	add	sp, #76	; 0x4c
   38bfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   38c00:	stmia	r2!, {r1, r3, r4, r7}
   38c02:	movs	r2, r0
   38c04:	lsls	r4, r4, #8
   38c06:	movs	r0, r0
   38c08:	bvs.n	38cd0 <btrfs_util_strerror@@Base+0x20>
   38c0a:	movs	r2, r0
   38c0c:	stmia	r1!, {r2, r5, r7}
   38c0e:	movs	r2, r0

00038c10 <blake2b@@Base>:
   38c10:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38c14:	mov	r6, r0
   38c16:	ldr	r5, [pc, #136]	; (38ca0 <blake2b@@Base+0x90>)
   38c18:	sub	sp, #248	; 0xf8
   38c1a:	ldr	r0, [pc, #136]	; (38ca4 <blake2b@@Base+0x94>)
   38c1c:	mov	r4, r1
   38c1e:	add	r5, pc
   38c20:	mov	r8, r3
   38c22:	mov	r7, r2
   38c24:	ldrd	r1, r3, [sp, #272]	; 0x110
   38c28:	ldr	r0, [r5, r0]
   38c2a:	ldr	r0, [r0, #0]
   38c2c:	str	r0, [sp, #244]	; 0xf4
   38c2e:	mov.w	r0, #0
   38c32:	cbnz	r2, 38c52 <blake2b@@Base+0x42>
   38c34:	cmp.w	r8, #0
   38c38:	beq.n	38c52 <blake2b@@Base+0x42>
   38c3a:	mov.w	r0, #4294967295	; 0xffffffff
   38c3e:	ldr	r2, [pc, #104]	; (38ca8 <blake2b@@Base+0x98>)
   38c40:	ldr	r3, [pc, #96]	; (38ca4 <blake2b@@Base+0x94>)
   38c42:	add	r2, pc
   38c44:	ldr	r3, [r2, r3]
   38c46:	ldr	r2, [r3, #0]
   38c48:	ldr	r3, [sp, #244]	; 0xf4
   38c4a:	eors	r2, r3
   38c4c:	beq.n	38c9a <blake2b@@Base+0x8a>
   38c4e:	blx	86b8 <__stack_chk_fail@plt>
   38c52:	cmp	r6, #0
   38c54:	beq.n	38c3a <blake2b@@Base+0x2a>
   38c56:	cbnz	r1, 38c5c <blake2b@@Base+0x4c>
   38c58:	cmp	r3, #0
   38c5a:	bne.n	38c3a <blake2b@@Base+0x2a>
   38c5c:	subs	r2, r4, #1
   38c5e:	cmp	r2, #63	; 0x3f
   38c60:	bhi.n	38c3a <blake2b@@Base+0x2a>
   38c62:	cmp	r3, #64	; 0x40
   38c64:	bhi.n	38c3a <blake2b@@Base+0x2a>
   38c66:	mov	r5, sp
   38c68:	cbz	r3, 38c90 <blake2b@@Base+0x80>
   38c6a:	mov	r2, r1
   38c6c:	mov	r0, r5
   38c6e:	mov	r1, r4
   38c70:	bl	38a08 <blake2b_init_key@@Base>
   38c74:	cmp	r0, #0
   38c76:	blt.n	38c3a <blake2b@@Base+0x2a>
   38c78:	mov	r2, r8
   38c7a:	mov	r1, r7
   38c7c:	mov	r0, r5
   38c7e:	bl	38930 <blake2b_update@@Base>
   38c82:	mov	r2, r4
   38c84:	mov	r1, r6
   38c86:	mov	r0, r5
   38c88:	bl	38ae0 <blake2b_final@@Base>
   38c8c:	movs	r0, #0
   38c8e:	b.n	38c3e <blake2b@@Base+0x2e>
   38c90:	mov	r1, r4
   38c92:	mov	r0, r5
   38c94:	bl	388a4 <blake2b_init@@Base>
   38c98:	b.n	38c74 <blake2b@@Base+0x64>
   38c9a:	add	sp, #248	; 0xf8
   38c9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38ca0:	stmia	r1!, {r1, r3, r5, r6}
   38ca2:	movs	r2, r0
   38ca4:	lsls	r4, r4, #8
   38ca6:	movs	r0, r0
   38ca8:	stmia	r1!, {r1, r2, r6}
   38caa:	movs	r2, r0

00038cac <blake2@@Base>:
   38cac:	b.w	38c10 <blake2b@@Base>

00038cb0 <btrfs_util_strerror@@Base>:
   38cb0:	cmp	r0, #26
   38cb2:	bhi.n	38cbe <btrfs_util_strerror@@Base+0xe>
   38cb4:	ldr	r3, [pc, #12]	; (38cc4 <btrfs_util_strerror@@Base+0x14>)
   38cb6:	add	r3, pc
   38cb8:	ldr.w	r0, [r3, r0, lsl #2]
   38cbc:	bx	lr
   38cbe:	movs	r0, #0
   38cc0:	bx	lr
   38cc2:	nop
   38cc4:	itee	mi
   38cc6:	movmi	r2, r0
   38cc8:	subpl	r2, r1, #1
   38cca:	it	eq	; unpredictable <IT:pl>
   38ccc:	bxeq	lr
   38cce:	bcc.w	38f1a <btrfs_util_strerror@@Base+0x26a>
   38cd2:	cmp	r0, r1
   38cd4:	bls.w	38f04 <btrfs_util_strerror@@Base+0x254>
   38cd8:	tst	r1, r2
   38cda:	beq.w	38f0c <btrfs_util_strerror@@Base+0x25c>
   38cde:	clz	r3, r0
   38ce2:	clz	r2, r1
   38ce6:	sub.w	r3, r2, r3
   38cea:	rsb	r3, r3, #31
   38cee:	add	r2, pc, #16	; (adr r2, 38d00 <btrfs_util_strerror@@Base+0x50>)
   38cf0:	add.w	r3, r2, r3, lsl #4
   38cf4:	mov.w	r2, #0
   38cf8:	mov	pc, r3
   38cfa:	nop
   38cfc:	nop.w
   38d00:	cmp.w	r0, r1, lsl #31
   38d04:	nop
   38d06:	adc.w	r2, r2, r2
   38d0a:	it	cs
   38d0c:	subcs.w	r0, r0, r1, lsl #31
   38d10:	cmp.w	r0, r1, lsl #30
   38d14:	nop
   38d16:	adc.w	r2, r2, r2
   38d1a:	it	cs
   38d1c:	subcs.w	r0, r0, r1, lsl #30
   38d20:	cmp.w	r0, r1, lsl #29
   38d24:	nop
   38d26:	adc.w	r2, r2, r2
   38d2a:	it	cs
   38d2c:	subcs.w	r0, r0, r1, lsl #29
   38d30:	cmp.w	r0, r1, lsl #28
   38d34:	nop
   38d36:	adc.w	r2, r2, r2
   38d3a:	it	cs
   38d3c:	subcs.w	r0, r0, r1, lsl #28
   38d40:	cmp.w	r0, r1, lsl #27
   38d44:	nop
   38d46:	adc.w	r2, r2, r2
   38d4a:	it	cs
   38d4c:	subcs.w	r0, r0, r1, lsl #27
   38d50:	cmp.w	r0, r1, lsl #26
   38d54:	nop
   38d56:	adc.w	r2, r2, r2
   38d5a:	it	cs
   38d5c:	subcs.w	r0, r0, r1, lsl #26
   38d60:	cmp.w	r0, r1, lsl #25
   38d64:	nop
   38d66:	adc.w	r2, r2, r2
   38d6a:	it	cs
   38d6c:	subcs.w	r0, r0, r1, lsl #25
   38d70:	cmp.w	r0, r1, lsl #24
   38d74:	nop
   38d76:	adc.w	r2, r2, r2
   38d7a:	it	cs
   38d7c:	subcs.w	r0, r0, r1, lsl #24
   38d80:	cmp.w	r0, r1, lsl #23
   38d84:	nop
   38d86:	adc.w	r2, r2, r2
   38d8a:	it	cs
   38d8c:	subcs.w	r0, r0, r1, lsl #23
   38d90:	cmp.w	r0, r1, lsl #22
   38d94:	nop
   38d96:	adc.w	r2, r2, r2
   38d9a:	it	cs
   38d9c:	subcs.w	r0, r0, r1, lsl #22
   38da0:	cmp.w	r0, r1, lsl #21
   38da4:	nop
   38da6:	adc.w	r2, r2, r2
   38daa:	it	cs
   38dac:	subcs.w	r0, r0, r1, lsl #21
   38db0:	cmp.w	r0, r1, lsl #20
   38db4:	nop
   38db6:	adc.w	r2, r2, r2
   38dba:	it	cs
   38dbc:	subcs.w	r0, r0, r1, lsl #20
   38dc0:	cmp.w	r0, r1, lsl #19
   38dc4:	nop
   38dc6:	adc.w	r2, r2, r2
   38dca:	it	cs
   38dcc:	subcs.w	r0, r0, r1, lsl #19
   38dd0:	cmp.w	r0, r1, lsl #18
   38dd4:	nop
   38dd6:	adc.w	r2, r2, r2
   38dda:	it	cs
   38ddc:	subcs.w	r0, r0, r1, lsl #18
   38de0:	cmp.w	r0, r1, lsl #17
   38de4:	nop
   38de6:	adc.w	r2, r2, r2
   38dea:	it	cs
   38dec:	subcs.w	r0, r0, r1, lsl #17
   38df0:	cmp.w	r0, r1, lsl #16
   38df4:	nop
   38df6:	adc.w	r2, r2, r2
   38dfa:	it	cs
   38dfc:	subcs.w	r0, r0, r1, lsl #16
   38e00:	cmp.w	r0, r1, lsl #15
   38e04:	nop
   38e06:	adc.w	r2, r2, r2
   38e0a:	it	cs
   38e0c:	subcs.w	r0, r0, r1, lsl #15
   38e10:	cmp.w	r0, r1, lsl #14
   38e14:	nop
   38e16:	adc.w	r2, r2, r2
   38e1a:	it	cs
   38e1c:	subcs.w	r0, r0, r1, lsl #14
   38e20:	cmp.w	r0, r1, lsl #13
   38e24:	nop
   38e26:	adc.w	r2, r2, r2
   38e2a:	it	cs
   38e2c:	subcs.w	r0, r0, r1, lsl #13
   38e30:	cmp.w	r0, r1, lsl #12
   38e34:	nop
   38e36:	adc.w	r2, r2, r2
   38e3a:	it	cs
   38e3c:	subcs.w	r0, r0, r1, lsl #12
   38e40:	cmp.w	r0, r1, lsl #11
   38e44:	nop
   38e46:	adc.w	r2, r2, r2
   38e4a:	it	cs
   38e4c:	subcs.w	r0, r0, r1, lsl #11
   38e50:	cmp.w	r0, r1, lsl #10
   38e54:	nop
   38e56:	adc.w	r2, r2, r2
   38e5a:	it	cs
   38e5c:	subcs.w	r0, r0, r1, lsl #10
   38e60:	cmp.w	r0, r1, lsl #9
   38e64:	nop
   38e66:	adc.w	r2, r2, r2
   38e6a:	it	cs
   38e6c:	subcs.w	r0, r0, r1, lsl #9
   38e70:	cmp.w	r0, r1, lsl #8
   38e74:	nop
   38e76:	adc.w	r2, r2, r2
   38e7a:	it	cs
   38e7c:	subcs.w	r0, r0, r1, lsl #8
   38e80:	cmp.w	r0, r1, lsl #7
   38e84:	nop
   38e86:	adc.w	r2, r2, r2
   38e8a:	it	cs
   38e8c:	subcs.w	r0, r0, r1, lsl #7
   38e90:	cmp.w	r0, r1, lsl #6
   38e94:	nop
   38e96:	adc.w	r2, r2, r2
   38e9a:	it	cs
   38e9c:	subcs.w	r0, r0, r1, lsl #6
   38ea0:	cmp.w	r0, r1, lsl #5
   38ea4:	nop
   38ea6:	adc.w	r2, r2, r2
   38eaa:	it	cs
   38eac:	subcs.w	r0, r0, r1, lsl #5
   38eb0:	cmp.w	r0, r1, lsl #4
   38eb4:	nop
   38eb6:	adc.w	r2, r2, r2
   38eba:	it	cs
   38ebc:	subcs.w	r0, r0, r1, lsl #4
   38ec0:	cmp.w	r0, r1, lsl #3
   38ec4:	nop
   38ec6:	adc.w	r2, r2, r2
   38eca:	it	cs
   38ecc:	subcs.w	r0, r0, r1, lsl #3
   38ed0:	cmp.w	r0, r1, lsl #2
   38ed4:	nop
   38ed6:	adc.w	r2, r2, r2
   38eda:	it	cs
   38edc:	subcs.w	r0, r0, r1, lsl #2
   38ee0:	cmp.w	r0, r1, lsl #1
   38ee4:	nop
   38ee6:	adc.w	r2, r2, r2
   38eea:	it	cs
   38eec:	subcs.w	r0, r0, r1, lsl #1
   38ef0:	cmp.w	r0, r1
   38ef4:	nop
   38ef6:	adc.w	r2, r2, r2
   38efa:	it	cs
   38efc:	subcs.w	r0, r0, r1
   38f00:	mov	r0, r2
   38f02:	bx	lr
   38f04:	ite	eq
   38f06:	moveq	r0, #1
   38f08:	movne	r0, #0
   38f0a:	bx	lr
   38f0c:	clz	r2, r1
   38f10:	rsb	r2, r2, #31
   38f14:	lsr.w	r0, r0, r2
   38f18:	bx	lr
   38f1a:	cbz	r0, 38f20 <btrfs_util_strerror@@Base+0x270>
   38f1c:	mov.w	r0, #4294967295	; 0xffffffff
   38f20:	b.w	394dc <btrfs_util_strerror@@Base+0x82c>
   38f24:	cmp	r1, #0
   38f26:	beq.n	38f1a <btrfs_util_strerror@@Base+0x26a>
   38f28:	stmdb	sp!, {r0, r1, lr}
   38f2c:	bl	38cc8 <btrfs_util_strerror@@Base+0x18>
   38f30:	ldmia.w	sp!, {r1, r2, lr}
   38f34:	mul.w	r3, r2, r0
   38f38:	sub.w	r1, r1, r3
   38f3c:	bx	lr
   38f3e:	nop
   38f40:	cmp	r1, #0
   38f42:	beq.w	391c2 <btrfs_util_strerror@@Base+0x512>
   38f46:	eor.w	ip, r0, r1
   38f4a:	it	mi
   38f4c:	negmi	r1, r1
   38f4e:	subs	r2, r1, #1
   38f50:	beq.w	39192 <btrfs_util_strerror@@Base+0x4e2>
   38f54:	movs	r3, r0
   38f56:	it	mi
   38f58:	negmi	r3, r0
   38f5a:	cmp	r3, r1
   38f5c:	bls.w	3919c <btrfs_util_strerror@@Base+0x4ec>
   38f60:	tst	r1, r2
   38f62:	beq.w	391ac <btrfs_util_strerror@@Base+0x4fc>
   38f66:	clz	r2, r3
   38f6a:	clz	r0, r1
   38f6e:	sub.w	r2, r0, r2
   38f72:	rsb	r2, r2, #31
   38f76:	add	r0, pc, #16	; (adr r0, 38f88 <btrfs_util_strerror@@Base+0x2d8>)
   38f78:	add.w	r2, r0, r2, lsl #4
   38f7c:	mov.w	r0, #0
   38f80:	mov	pc, r2
   38f82:	nop
   38f84:	nop.w
   38f88:	cmp.w	r3, r1, lsl #31
   38f8c:	nop
   38f8e:	adc.w	r0, r0, r0
   38f92:	it	cs
   38f94:	subcs.w	r3, r3, r1, lsl #31
   38f98:	cmp.w	r3, r1, lsl #30
   38f9c:	nop
   38f9e:	adc.w	r0, r0, r0
   38fa2:	it	cs
   38fa4:	subcs.w	r3, r3, r1, lsl #30
   38fa8:	cmp.w	r3, r1, lsl #29
   38fac:	nop
   38fae:	adc.w	r0, r0, r0
   38fb2:	it	cs
   38fb4:	subcs.w	r3, r3, r1, lsl #29
   38fb8:	cmp.w	r3, r1, lsl #28
   38fbc:	nop
   38fbe:	adc.w	r0, r0, r0
   38fc2:	it	cs
   38fc4:	subcs.w	r3, r3, r1, lsl #28
   38fc8:	cmp.w	r3, r1, lsl #27
   38fcc:	nop
   38fce:	adc.w	r0, r0, r0
   38fd2:	it	cs
   38fd4:	subcs.w	r3, r3, r1, lsl #27
   38fd8:	cmp.w	r3, r1, lsl #26
   38fdc:	nop
   38fde:	adc.w	r0, r0, r0
   38fe2:	it	cs
   38fe4:	subcs.w	r3, r3, r1, lsl #26
   38fe8:	cmp.w	r3, r1, lsl #25
   38fec:	nop
   38fee:	adc.w	r0, r0, r0
   38ff2:	it	cs
   38ff4:	subcs.w	r3, r3, r1, lsl #25
   38ff8:	cmp.w	r3, r1, lsl #24
   38ffc:	nop
   38ffe:	adc.w	r0, r0, r0
   39002:	it	cs
   39004:	subcs.w	r3, r3, r1, lsl #24
   39008:	cmp.w	r3, r1, lsl #23
   3900c:	nop
   3900e:	adc.w	r0, r0, r0
   39012:	it	cs
   39014:	subcs.w	r3, r3, r1, lsl #23
   39018:	cmp.w	r3, r1, lsl #22
   3901c:	nop
   3901e:	adc.w	r0, r0, r0
   39022:	it	cs
   39024:	subcs.w	r3, r3, r1, lsl #22
   39028:	cmp.w	r3, r1, lsl #21
   3902c:	nop
   3902e:	adc.w	r0, r0, r0
   39032:	it	cs
   39034:	subcs.w	r3, r3, r1, lsl #21
   39038:	cmp.w	r3, r1, lsl #20
   3903c:	nop
   3903e:	adc.w	r0, r0, r0
   39042:	it	cs
   39044:	subcs.w	r3, r3, r1, lsl #20
   39048:	cmp.w	r3, r1, lsl #19
   3904c:	nop
   3904e:	adc.w	r0, r0, r0
   39052:	it	cs
   39054:	subcs.w	r3, r3, r1, lsl #19
   39058:	cmp.w	r3, r1, lsl #18
   3905c:	nop
   3905e:	adc.w	r0, r0, r0
   39062:	it	cs
   39064:	subcs.w	r3, r3, r1, lsl #18
   39068:	cmp.w	r3, r1, lsl #17
   3906c:	nop
   3906e:	adc.w	r0, r0, r0
   39072:	it	cs
   39074:	subcs.w	r3, r3, r1, lsl #17
   39078:	cmp.w	r3, r1, lsl #16
   3907c:	nop
   3907e:	adc.w	r0, r0, r0
   39082:	it	cs
   39084:	subcs.w	r3, r3, r1, lsl #16
   39088:	cmp.w	r3, r1, lsl #15
   3908c:	nop
   3908e:	adc.w	r0, r0, r0
   39092:	it	cs
   39094:	subcs.w	r3, r3, r1, lsl #15
   39098:	cmp.w	r3, r1, lsl #14
   3909c:	nop
   3909e:	adc.w	r0, r0, r0
   390a2:	it	cs
   390a4:	subcs.w	r3, r3, r1, lsl #14
   390a8:	cmp.w	r3, r1, lsl #13
   390ac:	nop
   390ae:	adc.w	r0, r0, r0
   390b2:	it	cs
   390b4:	subcs.w	r3, r3, r1, lsl #13
   390b8:	cmp.w	r3, r1, lsl #12
   390bc:	nop
   390be:	adc.w	r0, r0, r0
   390c2:	it	cs
   390c4:	subcs.w	r3, r3, r1, lsl #12
   390c8:	cmp.w	r3, r1, lsl #11
   390cc:	nop
   390ce:	adc.w	r0, r0, r0
   390d2:	it	cs
   390d4:	subcs.w	r3, r3, r1, lsl #11
   390d8:	cmp.w	r3, r1, lsl #10
   390dc:	nop
   390de:	adc.w	r0, r0, r0
   390e2:	it	cs
   390e4:	subcs.w	r3, r3, r1, lsl #10
   390e8:	cmp.w	r3, r1, lsl #9
   390ec:	nop
   390ee:	adc.w	r0, r0, r0
   390f2:	it	cs
   390f4:	subcs.w	r3, r3, r1, lsl #9
   390f8:	cmp.w	r3, r1, lsl #8
   390fc:	nop
   390fe:	adc.w	r0, r0, r0
   39102:	it	cs
   39104:	subcs.w	r3, r3, r1, lsl #8
   39108:	cmp.w	r3, r1, lsl #7
   3910c:	nop
   3910e:	adc.w	r0, r0, r0
   39112:	it	cs
   39114:	subcs.w	r3, r3, r1, lsl #7
   39118:	cmp.w	r3, r1, lsl #6
   3911c:	nop
   3911e:	adc.w	r0, r0, r0
   39122:	it	cs
   39124:	subcs.w	r3, r3, r1, lsl #6
   39128:	cmp.w	r3, r1, lsl #5
   3912c:	nop
   3912e:	adc.w	r0, r0, r0
   39132:	it	cs
   39134:	subcs.w	r3, r3, r1, lsl #5
   39138:	cmp.w	r3, r1, lsl #4
   3913c:	nop
   3913e:	adc.w	r0, r0, r0
   39142:	it	cs
   39144:	subcs.w	r3, r3, r1, lsl #4
   39148:	cmp.w	r3, r1, lsl #3
   3914c:	nop
   3914e:	adc.w	r0, r0, r0
   39152:	it	cs
   39154:	subcs.w	r3, r3, r1, lsl #3
   39158:	cmp.w	r3, r1, lsl #2
   3915c:	nop
   3915e:	adc.w	r0, r0, r0
   39162:	it	cs
   39164:	subcs.w	r3, r3, r1, lsl #2
   39168:	cmp.w	r3, r1, lsl #1
   3916c:	nop
   3916e:	adc.w	r0, r0, r0
   39172:	it	cs
   39174:	subcs.w	r3, r3, r1, lsl #1
   39178:	cmp.w	r3, r1
   3917c:	nop
   3917e:	adc.w	r0, r0, r0
   39182:	it	cs
   39184:	subcs.w	r3, r3, r1
   39188:	cmp.w	ip, #0
   3918c:	it	mi
   3918e:	negmi	r0, r0
   39190:	bx	lr
   39192:	teq	ip, r0
   39196:	it	mi
   39198:	negmi	r0, r0
   3919a:	bx	lr
   3919c:	it	cc
   3919e:	movcc	r0, #0
   391a0:	itt	eq
   391a2:	moveq.w	r0, ip, asr #31
   391a6:	orreq.w	r0, r0, #1
   391aa:	bx	lr
   391ac:	clz	r2, r1
   391b0:	rsb	r2, r2, #31
   391b4:	cmp.w	ip, #0
   391b8:	lsr.w	r0, r3, r2
   391bc:	it	mi
   391be:	negmi	r0, r0
   391c0:	bx	lr
   391c2:	cmp	r0, #0
   391c4:	it	gt
   391c6:	mvngt.w	r0, #2147483648	; 0x80000000
   391ca:	it	lt
   391cc:	movlt.w	r0, #2147483648	; 0x80000000
   391d0:	b.w	394dc <btrfs_util_strerror@@Base+0x82c>
   391d4:	cmp	r1, #0
   391d6:	beq.n	391c2 <btrfs_util_strerror@@Base+0x512>
   391d8:	stmdb	sp!, {r0, r1, lr}
   391dc:	bl	38f46 <btrfs_util_strerror@@Base+0x296>
   391e0:	ldmia.w	sp!, {r1, r2, lr}
   391e4:	mul.w	r3, r2, r0
   391e8:	sub.w	r1, r1, r3
   391ec:	bx	lr
   391ee:	nop
   391f0:	eor.w	r0, r0, #2147483648	; 0x80000000
   391f4:	b.n	391fc <btrfs_util_strerror@@Base+0x54c>
   391f6:	nop
   391f8:	eor.w	r1, r1, #2147483648	; 0x80000000
   391fc:	lsls	r2, r0, #1
   391fe:	itttt	ne
   39200:	movsne.w	r3, r1, lsl #1
   39204:	teqne	r2, r3
   39208:	mvnsne.w	ip, r2, asr #24
   3920c:	mvnsne.w	ip, r3, asr #24
   39210:	beq.n	392e8 <btrfs_util_strerror@@Base+0x638>
   39212:	mov.w	r2, r2, lsr #24
   39216:	rsbs	r3, r2, r3, lsr #24
   3921a:	itttt	gt
   3921c:	addgt	r2, r2, r3
   3921e:	eorgt	r1, r0
   39220:	eorgt	r0, r1
   39222:	eorgt	r1, r0
   39224:	it	lt
   39226:	neglt	r3, r3
   39228:	cmp	r3, #25
   3922a:	it	hi
   3922c:	bxhi	lr
   3922e:	tst.w	r0, #2147483648	; 0x80000000
   39232:	orr.w	r0, r0, #8388608	; 0x800000
   39236:	bic.w	r0, r0, #4278190080	; 0xff000000
   3923a:	it	ne
   3923c:	negne	r0, r0
   3923e:	tst.w	r1, #2147483648	; 0x80000000
   39242:	orr.w	r1, r1, #8388608	; 0x800000
   39246:	bic.w	r1, r1, #4278190080	; 0xff000000
   3924a:	it	ne
   3924c:	negne	r1, r1
   3924e:	teq	r2, r3
   39252:	beq.n	392d4 <btrfs_util_strerror@@Base+0x624>
   39254:	sub.w	r2, r2, #1
   39258:	asr.w	ip, r1, r3
   3925c:	adds.w	r0, r0, ip
   39260:	rsb	r3, r3, #32
   39264:	lsl.w	r1, r1, r3
   39268:	and.w	r3, r0, #2147483648	; 0x80000000
   3926c:	bpl.n	39274 <btrfs_util_strerror@@Base+0x5c4>
   3926e:	negs	r1, r1
   39270:	sbc.w	r0, r0, r0, lsl #1
   39274:	cmp.w	r0, #8388608	; 0x800000
   39278:	bcc.n	392a2 <btrfs_util_strerror@@Base+0x5f2>
   3927a:	cmp.w	r0, #16777216	; 0x1000000
   3927e:	bcc.n	3928e <btrfs_util_strerror@@Base+0x5de>
   39280:	lsrs	r0, r0, #1
   39282:	mov.w	r1, r1, rrx
   39286:	add.w	r2, r2, #1
   3928a:	cmp	r2, #254	; 0xfe
   3928c:	bcs.n	39332 <btrfs_util_strerror@@Base+0x682>
   3928e:	cmp.w	r1, #2147483648	; 0x80000000
   39292:	adc.w	r0, r0, r2, lsl #23
   39296:	it	eq
   39298:	biceq.w	r0, r0, #1
   3929c:	orr.w	r0, r0, r3
   392a0:	bx	lr
   392a2:	lsls	r1, r1, #1
   392a4:	adc.w	r0, r0, r0
   392a8:	subs	r2, #1
   392aa:	it	cs
   392ac:	cmpcs.w	r0, #8388608	; 0x800000
   392b0:	bcs.n	3928e <btrfs_util_strerror@@Base+0x5de>
   392b2:	clz	ip, r0
   392b6:	sub.w	ip, ip, #8
   392ba:	subs.w	r2, r2, ip
   392be:	lsl.w	r0, r0, ip
   392c2:	itet	ge
   392c4:	addge.w	r0, r0, r2, lsl #23
   392c8:	neglt	r2, r2
   392ca:	orrge	r0, r3
   392cc:	itt	lt
   392ce:	lsrlt	r0, r2
   392d0:	orrlt	r0, r3
   392d2:	bx	lr
   392d4:	teq	r2, #0
   392d8:	eor.w	r1, r1, #8388608	; 0x800000
   392dc:	itte	eq
   392de:	eoreq.w	r0, r0, #8388608	; 0x800000
   392e2:	addeq	r2, #1
   392e4:	subne	r3, #1
   392e6:	b.n	39254 <btrfs_util_strerror@@Base+0x5a4>
   392e8:	mov.w	r3, r1, lsl #1
   392ec:	mvns.w	ip, r2, asr #24
   392f0:	it	ne
   392f2:	mvnsne.w	ip, r3, asr #24
   392f6:	beq.n	3933c <btrfs_util_strerror@@Base+0x68c>
   392f8:	teq	r2, r3
   392fc:	beq.n	39308 <btrfs_util_strerror@@Base+0x658>
   392fe:	teq	r2, #0
   39302:	it	eq
   39304:	moveq	r0, r1
   39306:	bx	lr
   39308:	teq	r0, r1
   3930c:	itt	ne
   3930e:	movne	r0, #0
   39310:	bxne	lr
   39312:	tst.w	r2, #4278190080	; 0xff000000
   39316:	bne.n	39322 <btrfs_util_strerror@@Base+0x672>
   39318:	lsls	r0, r0, #1
   3931a:	it	cs
   3931c:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   39320:	bx	lr
   39322:	adds.w	r2, r2, #33554432	; 0x2000000
   39326:	itt	cc
   39328:	addcc.w	r0, r0, #8388608	; 0x800000
   3932c:	bxcc	lr
   3932e:	and.w	r3, r0, #2147483648	; 0x80000000
   39332:	orr.w	r0, r3, #2130706432	; 0x7f000000
   39336:	orr.w	r0, r0, #8388608	; 0x800000
   3933a:	bx	lr
   3933c:	mvns.w	r2, r2, asr #24
   39340:	itet	ne
   39342:	movne	r0, r1
   39344:	mvnseq.w	r3, r3, asr #24
   39348:	movne	r1, r0
   3934a:	lsls	r2, r0, #9
   3934c:	itte	eq
   3934e:	movseq.w	r3, r1, lsl #9
   39352:	teqeq	r0, r1
   39356:	orrne.w	r0, r0, #4194304	; 0x400000
   3935a:	bx	lr
   3935c:	mov.w	r3, #0
   39360:	b.n	3936c <btrfs_util_strerror@@Base+0x6bc>
   39362:	nop
   39364:	ands.w	r3, r0, #2147483648	; 0x80000000
   39368:	it	mi
   3936a:	negmi	r0, r0
   3936c:	movs.w	ip, r0
   39370:	it	eq
   39372:	bxeq	lr
   39374:	orr.w	r3, r3, #1258291200	; 0x4b000000
   39378:	mov	r1, r0
   3937a:	mov.w	r0, #0
   3937e:	b.n	393ba <btrfs_util_strerror@@Base+0x70a>
   39380:	orrs.w	r2, r0, r1
   39384:	it	eq
   39386:	bxeq	lr
   39388:	mov.w	r3, #0
   3938c:	b.n	393a4 <btrfs_util_strerror@@Base+0x6f4>
   3938e:	nop
   39390:	orrs.w	r2, r0, r1
   39394:	it	eq
   39396:	bxeq	lr
   39398:	ands.w	r3, r1, #2147483648	; 0x80000000
   3939c:	bpl.n	393a4 <btrfs_util_strerror@@Base+0x6f4>
   3939e:	negs	r0, r0
   393a0:	sbc.w	r1, r1, r1, lsl #1
   393a4:	movs.w	ip, r1
   393a8:	ittt	eq
   393aa:	moveq	ip, r0
   393ac:	moveq	r1, r0
   393ae:	moveq	r0, #0
   393b0:	orr.w	r3, r3, #1526726656	; 0x5b000000
   393b4:	it	eq
   393b6:	subeq.w	r3, r3, #268435456	; 0x10000000
   393ba:	sub.w	r3, r3, #8388608	; 0x800000
   393be:	clz	r2, ip
   393c2:	subs	r2, #8
   393c4:	sub.w	r3, r3, r2, lsl #23
   393c8:	blt.n	393ec <btrfs_util_strerror@@Base+0x73c>
   393ca:	lsl.w	ip, r1, r2
   393ce:	add	r3, ip
   393d0:	lsl.w	ip, r0, r2
   393d4:	rsb	r2, r2, #32
   393d8:	cmp.w	ip, #2147483648	; 0x80000000
   393dc:	lsr.w	r2, r0, r2
   393e0:	adc.w	r0, r3, r2
   393e4:	it	eq
   393e6:	biceq.w	r0, r0, #1
   393ea:	bx	lr
   393ec:	add.w	r2, r2, #32
   393f0:	lsl.w	ip, r1, r2
   393f4:	rsb	r2, r2, #32
   393f8:	orrs.w	r0, r0, ip, lsl #1
   393fc:	lsr.w	r2, r1, r2
   39400:	adc.w	r0, r3, r2
   39404:	it	eq
   39406:	biceq.w	r0, r0, ip, lsr #31
   3940a:	bx	lr
   3940c:	cbnz	r3, 3942e <btrfs_util_strerror@@Base+0x77e>
   3940e:	cbnz	r2, 3942e <btrfs_util_strerror@@Base+0x77e>
   39410:	cmp	r1, #0
   39412:	ittt	lt
   39414:	movlt	r0, #0
   39416:	movlt.w	r1, #2147483648	; 0x80000000
   3941a:	blt.n	3942a <btrfs_util_strerror@@Base+0x77a>
   3941c:	it	eq
   3941e:	cmpeq	r0, #0
   39420:	itt	ne
   39422:	mvnne.w	r1, #2147483648	; 0x80000000
   39426:	movne.w	r0, #4294967295	; 0xffffffff
   3942a:	b.w	394dc <btrfs_util_strerror@@Base+0x82c>
   3942e:	sub.w	ip, sp, #8
   39432:	strd	ip, lr, [sp, #-16]!
   39436:	cmp	r1, #0
   39438:	blt.n	3944e <btrfs_util_strerror@@Base+0x79e>
   3943a:	cmp	r3, #0
   3943c:	blt.n	39474 <btrfs_util_strerror@@Base+0x7c4>
   3943e:	bl	394e8 <btrfs_util_strerror@@Base+0x838>
   39442:	ldr.w	lr, [sp, #4]
   39446:	ldrd	r2, r3, [sp, #8]
   3944a:	add	sp, #16
   3944c:	bx	lr
   3944e:	negs	r0, r0
   39450:	sbc.w	r1, r1, r1, lsl #1
   39454:	cmp	r3, #0
   39456:	blt.n	39490 <btrfs_util_strerror@@Base+0x7e0>
   39458:	bl	394e8 <btrfs_util_strerror@@Base+0x838>
   3945c:	ldr.w	lr, [sp, #4]
   39460:	ldrd	r2, r3, [sp, #8]
   39464:	add	sp, #16
   39466:	negs	r0, r0
   39468:	sbc.w	r1, r1, r1, lsl #1
   3946c:	negs	r2, r2
   3946e:	sbc.w	r3, r3, r3, lsl #1
   39472:	bx	lr
   39474:	negs	r2, r2
   39476:	sbc.w	r3, r3, r3, lsl #1
   3947a:	bl	394e8 <btrfs_util_strerror@@Base+0x838>
   3947e:	ldr.w	lr, [sp, #4]
   39482:	ldrd	r2, r3, [sp, #8]
   39486:	add	sp, #16
   39488:	negs	r0, r0
   3948a:	sbc.w	r1, r1, r1, lsl #1
   3948e:	bx	lr
   39490:	negs	r2, r2
   39492:	sbc.w	r3, r3, r3, lsl #1
   39496:	bl	394e8 <btrfs_util_strerror@@Base+0x838>
   3949a:	ldr.w	lr, [sp, #4]
   3949e:	ldrd	r2, r3, [sp, #8]
   394a2:	add	sp, #16
   394a4:	negs	r2, r2
   394a6:	sbc.w	r3, r3, r3, lsl #1
   394aa:	bx	lr
   394ac:	cbnz	r3, 394c4 <btrfs_util_strerror@@Base+0x814>
   394ae:	cbnz	r2, 394c4 <btrfs_util_strerror@@Base+0x814>
   394b0:	cmp	r1, #0
   394b2:	it	eq
   394b4:	cmpeq	r0, #0
   394b6:	itt	ne
   394b8:	movne.w	r1, #4294967295	; 0xffffffff
   394bc:	movne.w	r0, #4294967295	; 0xffffffff
   394c0:	b.w	394dc <btrfs_util_strerror@@Base+0x82c>
   394c4:	sub.w	ip, sp, #8
   394c8:	strd	ip, lr, [sp, #-16]!
   394cc:	bl	394e8 <btrfs_util_strerror@@Base+0x838>
   394d0:	ldr.w	lr, [sp, #4]
   394d4:	ldrd	r2, r3, [sp, #8]
   394d8:	add	sp, #16
   394da:	bx	lr
   394dc:	push	{r1, lr}
   394de:	mov.w	r0, #8
   394e2:	blx	8550 <raise@plt>
   394e6:	pop	{r1, pc}
   394e8:	cmp	r1, r3
   394ea:	it	eq
   394ec:	cmpeq	r0, r2
   394ee:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   394f2:	mov	r4, r0
   394f4:	it	cc
   394f6:	movcc	r0, #0
   394f8:	mov	r5, r1
   394fa:	ldr.w	ip, [sp, #36]	; 0x24
   394fe:	it	cc
   39500:	movcc	r1, r0
   39502:	bcc.n	395dc <btrfs_util_strerror@@Base+0x92c>
   39504:	mov	r8, r2
   39506:	mov	r9, r3
   39508:	clz	r2, r3
   3950c:	cmp	r3, #0
   3950e:	beq.n	395f2 <btrfs_util_strerror@@Base+0x942>
   39510:	clz	r3, r5
   39514:	cmp	r5, #0
   39516:	beq.n	395ea <btrfs_util_strerror@@Base+0x93a>
   39518:	subs	r2, r2, r3
   3951a:	sub.w	lr, r2, #32
   3951e:	lsl.w	fp, r9, r2
   39522:	lsl.w	r3, r8, lr
   39526:	rsb	r7, r2, #32
   3952a:	orr.w	fp, fp, r3
   3952e:	lsr.w	r3, r8, r7
   39532:	orr.w	fp, fp, r3
   39536:	lsl.w	sl, r8, r2
   3953a:	cmp	r5, fp
   3953c:	it	eq
   3953e:	cmpeq	r4, sl
   39540:	itt	cc
   39542:	movcc	r0, #0
   39544:	movcc	r1, r0
   39546:	bcc.n	3955e <btrfs_util_strerror@@Base+0x8ae>
   39548:	movs	r0, #1
   3954a:	subs.w	r4, r4, sl
   3954e:	lsl.w	r1, r0, lr
   39552:	lsr.w	r3, r0, r7
   39556:	sbc.w	r5, r5, fp
   3955a:	orrs	r1, r3
   3955c:	lsls	r0, r2
   3955e:	cmp	r2, #0
   39560:	beq.n	395dc <btrfs_util_strerror@@Base+0x92c>
   39562:	mov.w	r8, sl, lsr #1
   39566:	mov.w	r9, fp, lsr #1
   3956a:	orr.w	r8, r8, fp, lsl #31
   3956e:	mov	r6, r2
   39570:	b.n	3958a <btrfs_util_strerror@@Base+0x8da>
   39572:	subs.w	r3, r4, r8
   39576:	sbc.w	sl, r5, r9
   3957a:	adds	r3, r3, r3
   3957c:	adc.w	sl, sl, sl
   39580:	adds	r4, r3, #1
   39582:	adc.w	r5, sl, #0
   39586:	subs	r6, #1
   39588:	beq.n	3959a <btrfs_util_strerror@@Base+0x8ea>
   3958a:	cmp	r5, r9
   3958c:	it	eq
   3958e:	cmpeq	r4, r8
   39590:	bcs.n	39572 <btrfs_util_strerror@@Base+0x8c2>
   39592:	adds	r4, r4, r4
   39594:	adcs	r5, r5
   39596:	subs	r6, #1
   39598:	bne.n	3958a <btrfs_util_strerror@@Base+0x8da>
   3959a:	lsl.w	r7, r5, r7
   3959e:	lsr.w	r3, r4, r2
   395a2:	orrs	r3, r7
   395a4:	lsr.w	lr, r5, lr
   395a8:	adds	r0, r0, r4
   395aa:	lsr.w	r8, r5, r2
   395ae:	orr.w	r4, r3, lr
   395b2:	sub.w	r7, r2, #32
   395b6:	rsb	r6, r2, #32
   395ba:	lsl.w	r3, r8, r2
   395be:	lsl.w	r7, r4, r7
   395c2:	lsl.w	r2, r4, r2
   395c6:	orr.w	r3, r3, r7
   395ca:	lsr.w	r6, r4, r6
   395ce:	adc.w	r1, r5, r1
   395d2:	orrs	r3, r6
   395d4:	subs	r0, r0, r2
   395d6:	mov	r5, r8
   395d8:	sbc.w	r1, r1, r3
   395dc:	cmp.w	ip, #0
   395e0:	beq.n	395e6 <btrfs_util_strerror@@Base+0x936>
   395e2:	strd	r4, r5, [ip]
   395e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   395ea:	clz	r3, r4
   395ee:	adds	r3, #32
   395f0:	b.n	39518 <btrfs_util_strerror@@Base+0x868>
   395f2:	clz	r2, r8
   395f6:	clz	r3, r5
   395fa:	adds	r2, #32
   395fc:	cmp	r5, #0
   395fe:	bne.n	39518 <btrfs_util_strerror@@Base+0x868>
   39600:	b.n	395ea <btrfs_util_strerror@@Base+0x93a>
   39602:	nop

00039604 <__libc_csu_init@@Base>:
   39604:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   39608:	mov	r7, r0
   3960a:	ldr	r6, [pc, #48]	; (3963c <__libc_csu_init@@Base+0x38>)
   3960c:	mov	r8, r1
   3960e:	ldr	r5, [pc, #48]	; (39640 <__libc_csu_init@@Base+0x3c>)
   39610:	mov	r9, r2
   39612:	add	r6, pc
   39614:	blx	8520 <calloc@plt-0x20>
   39618:	add	r5, pc
   3961a:	subs	r6, r6, r5
   3961c:	asrs	r6, r6, #2
   3961e:	beq.n	39636 <__libc_csu_init@@Base+0x32>
   39620:	subs	r5, #4
   39622:	movs	r4, #0
   39624:	ldr.w	r3, [r5, #4]!
   39628:	adds	r4, #1
   3962a:	mov	r2, r9
   3962c:	mov	r1, r8
   3962e:	mov	r0, r7
   39630:	blx	r3
   39632:	cmp	r6, r4
   39634:	bne.n	39624 <__libc_csu_init@@Base+0x20>
   39636:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   3963a:	nop
   3963c:	add	r7, sp, #792	; 0x318
   3963e:	movs	r2, r0
   39640:	add	r7, sp, #752	; 0x2f0
   39642:	movs	r2, r0

00039644 <__libc_csu_fini@@Base>:
   39644:	bx	lr
   39646:	nop
   39648:	mov	r2, r1
   3964a:	mov	r1, r0
   3964c:	movs	r0, #3
   3964e:	b.w	871c <__xstat@plt>
   39652:	nop
   39654:	mov	r2, r1
   39656:	mov	r1, r0
   39658:	movs	r0, #3
   3965a:	b.w	8844 <__fxstat@plt>
   3965e:	nop
   39660:	mov	r2, r1
   39662:	mov	r1, r0
   39664:	movs	r0, #3
   39666:	b.w	8afc <__xstat64@plt>
   3966a:	nop
   3966c:	mov	r2, r1
   3966e:	mov	r1, r0
   39670:	movs	r0, #3
   39672:	b.w	8738 <__fxstat64@plt>
   39676:	nop

Disassembly of section .fini:

00039678 <.fini>:
   39678:	push	{r3, lr}
   3967c:	pop	{r3, pc}
