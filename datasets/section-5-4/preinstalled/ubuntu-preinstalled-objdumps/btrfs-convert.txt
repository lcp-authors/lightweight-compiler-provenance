
ubuntu-preinstalled/btrfs-convert:     file format elf32-littlearm


Disassembly of section .init:

00008a88 <.init>:
    8a88:	push	{r3, lr}
    8a8c:	bl	accc <_start@@Base+0x48>
    8a90:	pop	{r3, pc}

Disassembly of section .plt:

00008a94 <pthread_mutex_unlock@plt-0x14>:
    8a94:	push	{lr}		; (str lr, [sp, #-4]!)
    8a98:	ldr	lr, [pc, #4]	; 8aa4 <pthread_mutex_unlock@plt-0x4>
    8a9c:	add	lr, pc, lr
    8aa0:	ldr	pc, [lr, #8]!
    8aa4:	andeq	r2, r6, r8, ror r2

00008aa8 <pthread_mutex_unlock@plt>:
    8aa8:	add	ip, pc, #0, 12
    8aac:	add	ip, ip, #401408	; 0x62000
    8ab0:	ldr	pc, [ip, #632]!	; 0x278

00008ab4 <calloc@plt>:
    8ab4:			; <UNDEFINED> instruction: 0xe7fd4778
    8ab8:	add	ip, pc, #0, 12
    8abc:	add	ip, ip, #401408	; 0x62000
    8ac0:	ldr	pc, [ip, #620]!	; 0x26c

00008ac4 <raise@plt>:
    8ac4:	add	ip, pc, #0, 12
    8ac8:	add	ip, ip, #401408	; 0x62000
    8acc:	ldr	pc, [ip, #612]!	; 0x264

00008ad0 <ext2fs_free@plt>:
    8ad0:			; <UNDEFINED> instruction: 0xe7fd4778
    8ad4:	add	ip, pc, #0, 12
    8ad8:	add	ip, ip, #401408	; 0x62000
    8adc:	ldr	pc, [ip, #600]!	; 0x258

00008ae0 <__strncat_chk@plt>:
    8ae0:	add	ip, pc, #0, 12
    8ae4:	add	ip, ip, #401408	; 0x62000
    8ae8:	ldr	pc, [ip, #592]!	; 0x250

00008aec <fsync@plt>:
    8aec:	add	ip, pc, #0, 12
    8af0:	add	ip, ip, #401408	; 0x62000
    8af4:	ldr	pc, [ip, #584]!	; 0x248

00008af8 <ext2fs_inode_data_blocks2@plt>:
    8af8:	add	ip, pc, #0, 12
    8afc:	add	ip, ip, #401408	; 0x62000
    8b00:	ldr	pc, [ip, #576]!	; 0x240

00008b04 <strcmp@plt>:
    8b04:	add	ip, pc, #0, 12
    8b08:	add	ip, ip, #401408	; 0x62000
    8b0c:	ldr	pc, [ip, #568]!	; 0x238

00008b10 <__cxa_finalize@plt>:
    8b10:	add	ip, pc, #0, 12
    8b14:	add	ip, ip, #401408	; 0x62000
    8b18:	ldr	pc, [ip, #560]!	; 0x230

00008b1c <uuid_unparse@plt>:
    8b1c:	add	ip, pc, #0, 12
    8b20:	add	ip, ip, #401408	; 0x62000
    8b24:	ldr	pc, [ip, #552]!	; 0x228

00008b28 <posix_fadvise64@plt>:
    8b28:	add	ip, pc, #0, 12
    8b2c:	add	ip, ip, #401408	; 0x62000
    8b30:	ldr	pc, [ip, #544]!	; 0x220

00008b34 <blkid_probe_lookup_value@plt>:
    8b34:	add	ip, pc, #0, 12
    8b38:	add	ip, ip, #401408	; 0x62000
    8b3c:	ldr	pc, [ip, #536]!	; 0x218

00008b40 <read@plt>:
    8b40:	add	ip, pc, #0, 12
    8b44:	add	ip, ip, #401408	; 0x62000
    8b48:	ldr	pc, [ip, #528]!	; 0x210

00008b4c <ext2fs_read_inode_bitmap@plt>:
    8b4c:	add	ip, pc, #0, 12
    8b50:	add	ip, ip, #401408	; 0x62000
    8b54:	ldr	pc, [ip, #520]!	; 0x208

00008b58 <fflush@plt>:
    8b58:	add	ip, pc, #0, 12
    8b5c:	add	ip, ip, #401408	; 0x62000
    8b60:	ldr	pc, [ip, #512]!	; 0x200

00008b64 <unlinkat@plt>:
    8b64:	add	ip, pc, #0, 12
    8b68:	add	ip, ip, #401408	; 0x62000
    8b6c:	ldr	pc, [ip, #504]!	; 0x1f8

00008b70 <memmove@plt>:
    8b70:			; <UNDEFINED> instruction: 0xe7fd4778
    8b74:	add	ip, pc, #0, 12
    8b78:	add	ip, ip, #401408	; 0x62000
    8b7c:	ldr	pc, [ip, #492]!	; 0x1ec

00008b80 <free@plt>:
    8b80:			; <UNDEFINED> instruction: 0xe7fd4778
    8b84:	add	ip, pc, #0, 12
    8b88:	add	ip, ip, #401408	; 0x62000
    8b8c:	ldr	pc, [ip, #480]!	; 0x1e0

00008b90 <fgets@plt>:
    8b90:	add	ip, pc, #0, 12
    8b94:	add	ip, ip, #401408	; 0x62000
    8b98:	ldr	pc, [ip, #472]!	; 0x1d8

00008b9c <fgetxattr@plt>:
    8b9c:	add	ip, pc, #0, 12
    8ba0:	add	ip, ip, #401408	; 0x62000
    8ba4:	ldr	pc, [ip, #464]!	; 0x1d0

00008ba8 <pthread_mutex_lock@plt>:
    8ba8:	add	ip, pc, #0, 12
    8bac:	add	ip, ip, #401408	; 0x62000
    8bb0:	ldr	pc, [ip, #456]!	; 0x1c8

00008bb4 <statfs@plt>:
    8bb4:	add	ip, pc, #0, 12
    8bb8:	add	ip, ip, #401408	; 0x62000
    8bbc:	ldr	pc, [ip, #448]!	; 0x1c0

00008bc0 <strndup@plt>:
    8bc0:	add	ip, pc, #0, 12
    8bc4:	add	ip, ip, #401408	; 0x62000
    8bc8:	ldr	pc, [ip, #440]!	; 0x1b8

00008bcc <__vsnprintf_chk@plt>:
    8bcc:	add	ip, pc, #0, 12
    8bd0:	add	ip, ip, #401408	; 0x62000
    8bd4:	ldr	pc, [ip, #432]!	; 0x1b0

00008bd8 <memcpy@plt>:
    8bd8:			; <UNDEFINED> instruction: 0xe7fd4778
    8bdc:	add	ip, pc, #0, 12
    8be0:	add	ip, ip, #401408	; 0x62000
    8be4:	ldr	pc, [ip, #420]!	; 0x1a4

00008be8 <ext2fs_close_inode_scan@plt>:
    8be8:	add	ip, pc, #0, 12
    8bec:	add	ip, ip, #401408	; 0x62000
    8bf0:	ldr	pc, [ip, #412]!	; 0x19c

00008bf4 <__memset_chk@plt>:
    8bf4:	add	ip, pc, #0, 12
    8bf8:	add	ip, ip, #401408	; 0x62000
    8bfc:	ldr	pc, [ip, #404]!	; 0x194

00008c00 <pthread_mutex_init@plt>:
    8c00:	add	ip, pc, #0, 12
    8c04:	add	ip, ip, #401408	; 0x62000
    8c08:	ldr	pc, [ip, #396]!	; 0x18c

00008c0c <time@plt>:
    8c0c:	add	ip, pc, #0, 12
    8c10:	add	ip, ip, #401408	; 0x62000
    8c14:	ldr	pc, [ip, #388]!	; 0x184

00008c18 <memcmp@plt>:
    8c18:			; <UNDEFINED> instruction: 0xe7fd4778
    8c1c:	add	ip, pc, #0, 12
    8c20:	add	ip, ip, #401408	; 0x62000
    8c24:	ldr	pc, [ip, #376]!	; 0x178

00008c28 <__vprintf_chk@plt>:
    8c28:	add	ip, pc, #0, 12
    8c2c:	add	ip, ip, #401408	; 0x62000
    8c30:	ldr	pc, [ip, #368]!	; 0x170

00008c34 <jrand48@plt>:
    8c34:			; <UNDEFINED> instruction: 0xe7fd4778
    8c38:	add	ip, pc, #0, 12
    8c3c:	add	ip, ip, #401408	; 0x62000
    8c40:	ldr	pc, [ip, #356]!	; 0x164

00008c44 <blkid_put_cache@plt>:
    8c44:	add	ip, pc, #0, 12
    8c48:	add	ip, ip, #401408	; 0x62000
    8c4c:	ldr	pc, [ip, #348]!	; 0x15c

00008c50 <uname@plt>:
    8c50:	add	ip, pc, #0, 12
    8c54:	add	ip, ip, #401408	; 0x62000
    8c58:	ldr	pc, [ip, #340]!	; 0x154

00008c5c <blkid_probe_set_device@plt>:
    8c5c:	add	ip, pc, #0, 12
    8c60:	add	ip, ip, #401408	; 0x62000
    8c64:	ldr	pc, [ip, #332]!	; 0x14c

00008c68 <ext2fs_open@plt>:
    8c68:	add	ip, pc, #0, 12
    8c6c:	add	ip, ip, #401408	; 0x62000
    8c70:	ldr	pc, [ip, #324]!	; 0x144

00008c74 <strdup@plt>:
    8c74:			; <UNDEFINED> instruction: 0xe7fd4778
    8c78:	add	ip, pc, #0, 12
    8c7c:	add	ip, ip, #401408	; 0x62000
    8c80:	ldr	pc, [ip, #312]!	; 0x138

00008c84 <openat@plt>:
    8c84:	add	ip, pc, #0, 12
    8c88:	add	ip, ip, #401408	; 0x62000
    8c8c:	ldr	pc, [ip, #304]!	; 0x130

00008c90 <__stack_chk_fail@plt>:
    8c90:	add	ip, pc, #0, 12
    8c94:	add	ip, ip, #401408	; 0x62000
    8c98:	ldr	pc, [ip, #296]!	; 0x128

00008c9c <blkid_dev_iterate_begin@plt>:
    8c9c:	add	ip, pc, #0, 12
    8ca0:	add	ip, ip, #401408	; 0x62000
    8ca4:	ldr	pc, [ip, #288]!	; 0x120

00008ca8 <sysconf@plt>:
    8ca8:	add	ip, pc, #0, 12
    8cac:	add	ip, ip, #401408	; 0x62000
    8cb0:	ldr	pc, [ip, #280]!	; 0x118

00008cb4 <realloc@plt>:
    8cb4:			; <UNDEFINED> instruction: 0xe7fd4778
    8cb8:	add	ip, pc, #0, 12
    8cbc:	add	ip, ip, #401408	; 0x62000
    8cc0:	ldr	pc, [ip, #268]!	; 0x10c

00008cc4 <localtime_r@plt>:
    8cc4:	add	ip, pc, #0, 12
    8cc8:	add	ip, ip, #401408	; 0x62000
    8ccc:	ldr	pc, [ip, #260]!	; 0x104

00008cd0 <uuid_compare@plt>:
    8cd0:	add	ip, pc, #0, 12
    8cd4:	add	ip, ip, #401408	; 0x62000
    8cd8:	ldr	pc, [ip, #252]!	; 0xfc

00008cdc <strcasecmp@plt>:
    8cdc:	add	ip, pc, #0, 12
    8ce0:	add	ip, ip, #401408	; 0x62000
    8ce4:	ldr	pc, [ip, #244]!	; 0xf4

00008ce8 <geteuid@plt>:
    8ce8:	add	ip, pc, #0, 12
    8cec:	add	ip, ip, #401408	; 0x62000
    8cf0:	ldr	pc, [ip, #236]!	; 0xec

00008cf4 <perror@plt>:
    8cf4:	add	ip, pc, #0, 12
    8cf8:	add	ip, ip, #401408	; 0x62000
    8cfc:	ldr	pc, [ip, #228]!	; 0xe4

00008d00 <__xstat@plt>:
    8d00:			; <UNDEFINED> instruction: 0xe7fd4778
    8d04:	add	ip, pc, #0, 12
    8d08:	add	ip, ip, #401408	; 0x62000
    8d0c:	ldr	pc, [ip, #216]!	; 0xd8

00008d10 <blkid_dev_set_search@plt>:
    8d10:	add	ip, pc, #0, 12
    8d14:	add	ip, ip, #401408	; 0x62000
    8d18:	ldr	pc, [ip, #208]!	; 0xd0

00008d1c <__fxstat64@plt>:
    8d1c:			; <UNDEFINED> instruction: 0xe7fd4778
    8d20:	add	ip, pc, #0, 12
    8d24:	add	ip, ip, #401408	; 0x62000
    8d28:	ldr	pc, [ip, #196]!	; 0xc4

00008d2c <__memcpy_chk@plt>:
    8d2c:	add	ip, pc, #0, 12
    8d30:	add	ip, ip, #401408	; 0x62000
    8d34:	ldr	pc, [ip, #188]!	; 0xbc

00008d38 <strcat@plt>:
    8d38:			; <UNDEFINED> instruction: 0xe7fd4778
    8d3c:	add	ip, pc, #0, 12
    8d40:	add	ip, ip, #401408	; 0x62000
    8d44:	ldr	pc, [ip, #176]!	; 0xb0

00008d48 <ioctl@plt>:
    8d48:	add	ip, pc, #0, 12
    8d4c:	add	ip, ip, #401408	; 0x62000
    8d50:	ldr	pc, [ip, #168]!	; 0xa8

00008d54 <lseek64@plt>:
    8d54:	add	ip, pc, #0, 12
    8d58:	add	ip, ip, #401408	; 0x62000
    8d5c:	ldr	pc, [ip, #160]!	; 0xa0

00008d60 <strtoll@plt>:
    8d60:	add	ip, pc, #0, 12
    8d64:	add	ip, ip, #401408	; 0x62000
    8d68:	ldr	pc, [ip, #152]!	; 0x98

00008d6c <__realpath_chk@plt>:
    8d6c:	add	ip, pc, #0, 12
    8d70:	add	ip, ip, #401408	; 0x62000
    8d74:	ldr	pc, [ip, #144]!	; 0x90

00008d78 <readahead@plt>:
    8d78:	add	ip, pc, #0, 12
    8d7c:	add	ip, ip, #401408	; 0x62000
    8d80:	ldr	pc, [ip, #136]!	; 0x88

00008d84 <ext2fs_open_inode_scan@plt>:
    8d84:	add	ip, pc, #0, 12
    8d88:	add	ip, ip, #401408	; 0x62000
    8d8c:	ldr	pc, [ip, #128]!	; 0x80

00008d90 <ext2fs_new_inode@plt>:
    8d90:	add	ip, pc, #0, 12
    8d94:	add	ip, ip, #401408	; 0x62000
    8d98:	ldr	pc, [ip, #120]!	; 0x78

00008d9c <strcpy@plt>:
    8d9c:	add	ip, pc, #0, 12
    8da0:	add	ip, ip, #401408	; 0x62000
    8da4:	ldr	pc, [ip, #112]!	; 0x70

00008da8 <gettimeofday@plt>:
    8da8:	add	ip, pc, #0, 12
    8dac:	add	ip, ip, #401408	; 0x62000
    8db0:	ldr	pc, [ip, #104]!	; 0x68

00008db4 <__strcpy_chk@plt>:
    8db4:	add	ip, pc, #0, 12
    8db8:	add	ip, ip, #401408	; 0x62000
    8dbc:	ldr	pc, [ip, #96]!	; 0x60

00008dc0 <ext2fs_read_inode_full@plt>:
    8dc0:	add	ip, pc, #0, 12
    8dc4:	add	ip, ip, #401408	; 0x62000
    8dc8:	ldr	pc, [ip, #88]!	; 0x58

00008dcc <pread64@plt>:
    8dcc:	add	ip, pc, #0, 12
    8dd0:	add	ip, ip, #401408	; 0x62000
    8dd4:	ldr	pc, [ip, #80]!	; 0x50

00008dd8 <pthread_create@plt>:
    8dd8:	add	ip, pc, #0, 12
    8ddc:	add	ip, ip, #401408	; 0x62000
    8de0:	ldr	pc, [ip, #72]!	; 0x48

00008de4 <strtok_r@plt>:
    8de4:	add	ip, pc, #0, 12
    8de8:	add	ip, ip, #401408	; 0x62000
    8dec:	ldr	pc, [ip, #64]!	; 0x40

00008df0 <getmntent@plt>:
    8df0:	add	ip, pc, #0, 12
    8df4:	add	ip, ip, #401408	; 0x62000
    8df8:	ldr	pc, [ip, #56]!	; 0x38

00008dfc <opendir@plt>:
    8dfc:	add	ip, pc, #0, 12
    8e00:	add	ip, ip, #401408	; 0x62000
    8e04:	ldr	pc, [ip, #48]!	; 0x30

00008e08 <ext2fs_blocks_count@plt>:
    8e08:	add	ip, pc, #0, 12
    8e0c:	add	ip, ip, #401408	; 0x62000
    8e10:	ldr	pc, [ip, #40]!	; 0x28

00008e14 <open64@plt>:
    8e14:	add	ip, pc, #0, 12
    8e18:	add	ip, ip, #401408	; 0x62000
    8e1c:	ldr	pc, [ip, #32]!

00008e20 <puts@plt>:
    8e20:			; <UNDEFINED> instruction: 0xe7fd4778
    8e24:	add	ip, pc, #0, 12
    8e28:	add	ip, ip, #401408	; 0x62000
    8e2c:	ldr	pc, [ip, #20]!

00008e30 <sysinfo@plt>:
    8e30:	add	ip, pc, #0, 12
    8e34:	add	ip, ip, #401408	; 0x62000
    8e38:	ldr	pc, [ip, #12]!

00008e3c <malloc@plt>:
    8e3c:			; <UNDEFINED> instruction: 0xe7fd4778
    8e40:	add	ip, pc, #0, 12
    8e44:	add	ip, ip, #401408	; 0x62000
    8e48:	ldr	pc, [ip, #0]!

00008e4c <__libc_start_main@plt>:
    8e4c:	add	ip, pc, #0, 12
    8e50:	add	ip, ip, #397312	; 0x61000
    8e54:	ldr	pc, [ip, #4088]!	; 0xff8

00008e58 <strerror@plt>:
    8e58:	add	ip, pc, #0, 12
    8e5c:	add	ip, ip, #397312	; 0x61000
    8e60:	ldr	pc, [ip, #4080]!	; 0xff0

00008e64 <__fxstat@plt>:
    8e64:			; <UNDEFINED> instruction: 0xe7fd4778
    8e68:	add	ip, pc, #0, 12
    8e6c:	add	ip, ip, #397312	; 0x61000
    8e70:	ldr	pc, [ip, #4068]!	; 0xfe4

00008e74 <strftime@plt>:
    8e74:	add	ip, pc, #0, 12
    8e78:	add	ip, ip, #397312	; 0x61000
    8e7c:	ldr	pc, [ip, #4060]!	; 0xfdc

00008e80 <ext2fs_close@plt>:
    8e80:	add	ip, pc, #0, 12
    8e84:	add	ip, ip, #397312	; 0x61000
    8e88:	ldr	pc, [ip, #4052]!	; 0xfd4

00008e8c <__vfprintf_chk@plt>:
    8e8c:	add	ip, pc, #0, 12
    8e90:	add	ip, ip, #397312	; 0x61000
    8e94:	ldr	pc, [ip, #4044]!	; 0xfcc

00008e98 <backtrace@plt>:
    8e98:	add	ip, pc, #0, 12
    8e9c:	add	ip, ip, #397312	; 0x61000
    8ea0:	ldr	pc, [ip, #4036]!	; 0xfc4

00008ea4 <blkid_dev_next@plt>:
    8ea4:	add	ip, pc, #0, 12
    8ea8:	add	ip, ip, #397312	; 0x61000
    8eac:	ldr	pc, [ip, #4028]!	; 0xfbc

00008eb0 <blkid_verify@plt>:
    8eb0:	add	ip, pc, #0, 12
    8eb4:	add	ip, ip, #397312	; 0x61000
    8eb8:	ldr	pc, [ip, #4020]!	; 0xfb4

00008ebc <__ctype_tolower_loc@plt>:
    8ebc:	add	ip, pc, #0, 12
    8ec0:	add	ip, ip, #397312	; 0x61000
    8ec4:	ldr	pc, [ip, #4012]!	; 0xfac

00008ec8 <__gmon_start__@plt>:
    8ec8:	add	ip, pc, #0, 12
    8ecc:	add	ip, ip, #397312	; 0x61000
    8ed0:	ldr	pc, [ip, #4004]!	; 0xfa4

00008ed4 <open@plt>:
    8ed4:	add	ip, pc, #0, 12
    8ed8:	add	ip, ip, #397312	; 0x61000
    8edc:	ldr	pc, [ip, #3996]!	; 0xf9c

00008ee0 <timerfd_create@plt>:
    8ee0:	add	ip, pc, #0, 12
    8ee4:	add	ip, ip, #397312	; 0x61000
    8ee8:	ldr	pc, [ip, #3988]!	; 0xf94

00008eec <getopt_long@plt>:
    8eec:	add	ip, pc, #0, 12
    8ef0:	add	ip, ip, #397312	; 0x61000
    8ef4:	ldr	pc, [ip, #3980]!	; 0xf8c

00008ef8 <__ctype_b_loc@plt>:
    8ef8:	add	ip, pc, #0, 12
    8efc:	add	ip, ip, #397312	; 0x61000
    8f00:	ldr	pc, [ip, #3972]!	; 0xf84

00008f04 <getpid@plt>:
    8f04:	add	ip, pc, #0, 12
    8f08:	add	ip, ip, #397312	; 0x61000
    8f0c:	ldr	pc, [ip, #3964]!	; 0xf7c

00008f10 <exit@plt>:
    8f10:	add	ip, pc, #0, 12
    8f14:	add	ip, ip, #397312	; 0x61000
    8f18:	ldr	pc, [ip, #3956]!	; 0xf74

00008f1c <strlen@plt>:
    8f1c:	add	ip, pc, #0, 12
    8f20:	add	ip, ip, #397312	; 0x61000
    8f24:	ldr	pc, [ip, #3948]!	; 0xf6c

00008f28 <strchr@plt>:
    8f28:	add	ip, pc, #0, 12
    8f2c:	add	ip, ip, #397312	; 0x61000
    8f30:	ldr	pc, [ip, #3940]!	; 0xf64

00008f34 <openat64@plt>:
    8f34:	add	ip, pc, #0, 12
    8f38:	add	ip, ip, #397312	; 0x61000
    8f3c:	ldr	pc, [ip, #3932]!	; 0xf5c

00008f40 <memrchr@plt>:
    8f40:	add	ip, pc, #0, 12
    8f44:	add	ip, ip, #397312	; 0x61000
    8f48:	ldr	pc, [ip, #3924]!	; 0xf54

00008f4c <__open64_2@plt>:
    8f4c:	add	ip, pc, #0, 12
    8f50:	add	ip, ip, #397312	; 0x61000
    8f54:	ldr	pc, [ip, #3916]!	; 0xf4c

00008f58 <__errno_location@plt>:
    8f58:	add	ip, pc, #0, 12
    8f5c:	add	ip, ip, #397312	; 0x61000
    8f60:	ldr	pc, [ip, #3908]!	; 0xf44

00008f64 <__strcat_chk@plt>:
    8f64:	add	ip, pc, #0, 12
    8f68:	add	ip, ip, #397312	; 0x61000
    8f6c:	ldr	pc, [ip, #3900]!	; 0xf3c

00008f70 <__sprintf_chk@plt>:
    8f70:	add	ip, pc, #0, 12
    8f74:	add	ip, ip, #397312	; 0x61000
    8f78:	ldr	pc, [ip, #3892]!	; 0xf34

00008f7c <blkid_new_probe@plt>:
    8f7c:	add	ip, pc, #0, 12
    8f80:	add	ip, ip, #397312	; 0x61000
    8f84:	ldr	pc, [ip, #3884]!	; 0xf2c

00008f88 <uuid_is_null@plt>:
    8f88:	add	ip, pc, #0, 12
    8f8c:	add	ip, ip, #397312	; 0x61000
    8f90:	ldr	pc, [ip, #3876]!	; 0xf24

00008f94 <memset@plt>:
    8f94:			; <UNDEFINED> instruction: 0xe7fd4778
    8f98:	add	ip, pc, #0, 12
    8f9c:	add	ip, ip, #397312	; 0x61000
    8fa0:	ldr	pc, [ip, #3864]!	; 0xf18

00008fa4 <putchar@plt>:
    8fa4:			; <UNDEFINED> instruction: 0xe7fd4778
    8fa8:	add	ip, pc, #0, 12
    8fac:	add	ip, ip, #397312	; 0x61000
    8fb0:	ldr	pc, [ip, #3852]!	; 0xf0c

00008fb4 <strncpy@plt>:
    8fb4:	add	ip, pc, #0, 12
    8fb8:	add	ip, ip, #397312	; 0x61000
    8fbc:	ldr	pc, [ip, #3844]!	; 0xf04

00008fc0 <pthread_cancel@plt>:
    8fc0:	add	ip, pc, #0, 12
    8fc4:	add	ip, ip, #397312	; 0x61000
    8fc8:	ldr	pc, [ip, #3836]!	; 0xefc

00008fcc <fscanf@plt>:
    8fcc:	add	ip, pc, #0, 12
    8fd0:	add	ip, ip, #397312	; 0x61000
    8fd4:	ldr	pc, [ip, #3828]!	; 0xef4

00008fd8 <strtoull@plt>:
    8fd8:	add	ip, pc, #0, 12
    8fdc:	add	ip, ip, #397312	; 0x61000
    8fe0:	ldr	pc, [ip, #3820]!	; 0xeec

00008fe4 <fsetxattr@plt>:
    8fe4:	add	ip, pc, #0, 12
    8fe8:	add	ip, ip, #397312	; 0x61000
    8fec:	ldr	pc, [ip, #3812]!	; 0xee4

00008ff0 <blkid_dev_iterate_end@plt>:
    8ff0:	add	ip, pc, #0, 12
    8ff4:	add	ip, ip, #397312	; 0x61000
    8ff8:	ldr	pc, [ip, #3804]!	; 0xedc

00008ffc <pwrite64@plt>:
    8ffc:	add	ip, pc, #0, 12
    9000:	add	ip, ip, #397312	; 0x61000
    9004:	ldr	pc, [ip, #3796]!	; 0xed4

00009008 <__printf_chk@plt>:
    9008:			; <UNDEFINED> instruction: 0xe7fd4778
    900c:	add	ip, pc, #0, 12
    9010:	add	ip, ip, #397312	; 0x61000
    9014:	ldr	pc, [ip, #3784]!	; 0xec8

00009018 <error_message@plt>:
    9018:	add	ip, pc, #0, 12
    901c:	add	ip, ip, #397312	; 0x61000
    9020:	ldr	pc, [ip, #3776]!	; 0xec0

00009024 <fstatfs@plt>:
    9024:	add	ip, pc, #0, 12
    9028:	add	ip, ip, #397312	; 0x61000
    902c:	ldr	pc, [ip, #3768]!	; 0xeb8

00009030 <uuid_generate@plt>:
    9030:	add	ip, pc, #0, 12
    9034:	add	ip, ip, #397312	; 0x61000
    9038:	ldr	pc, [ip, #3760]!	; 0xeb0

0000903c <__fprintf_chk@plt>:
    903c:			; <UNDEFINED> instruction: 0xe7fd4778
    9040:	add	ip, pc, #0, 12
    9044:	add	ip, ip, #397312	; 0x61000
    9048:	ldr	pc, [ip, #3748]!	; 0xea4

0000904c <access@plt>:
    904c:	add	ip, pc, #0, 12
    9050:	add	ip, ip, #397312	; 0x61000
    9054:	ldr	pc, [ip, #3740]!	; 0xe9c

00009058 <fclose@plt>:
    9058:	add	ip, pc, #0, 12
    905c:	add	ip, ip, #397312	; 0x61000
    9060:	ldr	pc, [ip, #3732]!	; 0xe94

00009064 <endmntent@plt>:
    9064:	add	ip, pc, #0, 12
    9068:	add	ip, ip, #397312	; 0x61000
    906c:	ldr	pc, [ip, #3724]!	; 0xe8c

00009070 <strtok@plt>:
    9070:	add	ip, pc, #0, 12
    9074:	add	ip, ip, #397312	; 0x61000
    9078:	ldr	pc, [ip, #3716]!	; 0xe84

0000907c <blkid_free_probe@plt>:
    907c:	add	ip, pc, #0, 12
    9080:	add	ip, ip, #397312	; 0x61000
    9084:	ldr	pc, [ip, #3708]!	; 0xe7c

00009088 <ext2fs_get_next_inode@plt>:
    9088:	add	ip, pc, #0, 12
    908c:	add	ip, ip, #397312	; 0x61000
    9090:	ldr	pc, [ip, #3700]!	; 0xe74

00009094 <strrchr@plt>:
    9094:	add	ip, pc, #0, 12
    9098:	add	ip, ip, #397312	; 0x61000
    909c:	ldr	pc, [ip, #3692]!	; 0xe6c

000090a0 <pthread_join@plt>:
    90a0:	add	ip, pc, #0, 12
    90a4:	add	ip, ip, #397312	; 0x61000
    90a8:	ldr	pc, [ip, #3684]!	; 0xe64

000090ac <statfs64@plt>:
    90ac:	add	ip, pc, #0, 12
    90b0:	add	ip, ip, #397312	; 0x61000
    90b4:	ldr	pc, [ip, #3676]!	; 0xe5c

000090b8 <uuid_parse@plt>:
    90b8:	add	ip, pc, #0, 12
    90bc:	add	ip, ip, #397312	; 0x61000
    90c0:	ldr	pc, [ip, #3668]!	; 0xe54

000090c4 <fputc@plt>:
    90c4:			; <UNDEFINED> instruction: 0xe7fd4778
    90c8:	add	ip, pc, #0, 12
    90cc:	add	ip, ip, #397312	; 0x61000
    90d0:	ldr	pc, [ip, #3656]!	; 0xe48

000090d4 <timerfd_settime@plt>:
    90d4:	add	ip, pc, #0, 12
    90d8:	add	ip, ip, #397312	; 0x61000
    90dc:	ldr	pc, [ip, #3648]!	; 0xe40

000090e0 <ext2fs_test_bit@plt>:
    90e0:	add	ip, pc, #0, 12
    90e4:	add	ip, ip, #397312	; 0x61000
    90e8:	ldr	pc, [ip, #3640]!	; 0xe38

000090ec <dirfd@plt>:
    90ec:	add	ip, pc, #0, 12
    90f0:	add	ip, ip, #397312	; 0x61000
    90f4:	ldr	pc, [ip, #3632]!	; 0xe30

000090f8 <getppid@plt>:
    90f8:	add	ip, pc, #0, 12
    90fc:	add	ip, ip, #397312	; 0x61000
    9100:	ldr	pc, [ip, #3624]!	; 0xe28

00009104 <atoi@plt>:
    9104:	add	ip, pc, #0, 12
    9108:	add	ip, ip, #397312	; 0x61000
    910c:	ldr	pc, [ip, #3616]!	; 0xe20

00009110 <blkid_dev_devname@plt>:
    9110:	add	ip, pc, #0, 12
    9114:	add	ip, ip, #397312	; 0x61000
    9118:	ldr	pc, [ip, #3608]!	; 0xe18

0000911c <fopen64@plt>:
    911c:	add	ip, pc, #0, 12
    9120:	add	ip, ip, #397312	; 0x61000
    9124:	ldr	pc, [ip, #3600]!	; 0xe10

00009128 <setmntent@plt>:
    9128:	add	ip, pc, #0, 12
    912c:	add	ip, ip, #397312	; 0x61000
    9130:	ldr	pc, [ip, #3592]!	; 0xe08

00009134 <ext2fs_get_block_bitmap_range2@plt>:
    9134:	add	ip, pc, #0, 12
    9138:	add	ip, ip, #397312	; 0x61000
    913c:	ldr	pc, [ip, #3584]!	; 0xe00

00009140 <ext2fs_read_block_bitmap@plt>:
    9140:	add	ip, pc, #0, 12
    9144:	add	ip, ip, #397312	; 0x61000
    9148:	ldr	pc, [ip, #3576]!	; 0xdf8

0000914c <__tls_get_addr@plt>:
    914c:	add	ip, pc, #0, 12
    9150:	add	ip, ip, #397312	; 0x61000
    9154:	ldr	pc, [ip, #3568]!	; 0xdf0

00009158 <ext2fs_read_ext_attr2@plt>:
    9158:	add	ip, pc, #0, 12
    915c:	add	ip, ip, #397312	; 0x61000
    9160:	ldr	pc, [ip, #3560]!	; 0xde8

00009164 <ext2fs_block_iterate2@plt>:
    9164:	add	ip, pc, #0, 12
    9168:	add	ip, ip, #397312	; 0x61000
    916c:	ldr	pc, [ip, #3552]!	; 0xde0

00009170 <strncat@plt>:
    9170:	add	ip, pc, #0, 12
    9174:	add	ip, ip, #397312	; 0x61000
    9178:	ldr	pc, [ip, #3544]!	; 0xdd8

0000917c <__xstat64@plt>:
    917c:			; <UNDEFINED> instruction: 0xe7fd4778
    9180:	add	ip, pc, #0, 12
    9184:	add	ip, ip, #397312	; 0x61000
    9188:	ldr	pc, [ip, #3532]!	; 0xdcc

0000918c <blkid_get_cache@plt>:
    918c:	add	ip, pc, #0, 12
    9190:	add	ip, ip, #397312	; 0x61000
    9194:	ldr	pc, [ip, #3524]!	; 0xdc4

00009198 <uuid_copy@plt>:
    9198:	add	ip, pc, #0, 12
    919c:	add	ip, ip, #397312	; 0x61000
    91a0:	ldr	pc, [ip, #3516]!	; 0xdbc

000091a4 <fputs@plt>:
    91a4:			; <UNDEFINED> instruction: 0xe7fd4778
    91a8:	add	ip, pc, #0, 12
    91ac:	add	ip, ip, #397312	; 0x61000
    91b0:	ldr	pc, [ip, #3504]!	; 0xdb0

000091b4 <strncmp@plt>:
    91b4:	add	ip, pc, #0, 12
    91b8:	add	ip, ip, #397312	; 0x61000
    91bc:	ldr	pc, [ip, #3496]!	; 0xda8

000091c0 <abort@plt>:
    91c0:	add	ip, pc, #0, 12
    91c4:	add	ip, ip, #397312	; 0x61000
    91c8:	ldr	pc, [ip, #3488]!	; 0xda0

000091cc <realpath@plt>:
    91cc:	add	ip, pc, #0, 12
    91d0:	add	ip, ip, #397312	; 0x61000
    91d4:	ldr	pc, [ip, #3480]!	; 0xd98

000091d8 <ext2fs_dir_iterate2@plt>:
    91d8:	add	ip, pc, #0, 12
    91dc:	add	ip, ip, #397312	; 0x61000
    91e0:	ldr	pc, [ip, #3472]!	; 0xd90

000091e4 <close@plt>:
    91e4:	add	ip, pc, #0, 12
    91e8:	add	ip, ip, #397312	; 0x61000
    91ec:	ldr	pc, [ip, #3464]!	; 0xd88

000091f0 <blkid_probe_all@plt>:
    91f0:	add	ip, pc, #0, 12
    91f4:	add	ip, ip, #397312	; 0x61000
    91f8:	ldr	pc, [ip, #3456]!	; 0xd80

000091fc <closedir@plt>:
    91fc:	add	ip, pc, #0, 12
    9200:	add	ip, ip, #397312	; 0x61000
    9204:	ldr	pc, [ip, #3448]!	; 0xd78

00009208 <__snprintf_chk@plt>:
    9208:	add	ip, pc, #0, 12
    920c:	add	ip, ip, #397312	; 0x61000
    9210:	ldr	pc, [ip, #3440]!	; 0xd70

00009214 <backtrace_symbols_fd@plt>:
    9214:	add	ip, pc, #0, 12
    9218:	add	ip, ip, #397312	; 0x61000
    921c:	ldr	pc, [ip, #3432]!	; 0xd68

00009220 <__assert_fail@plt>:
    9220:	add	ip, pc, #0, 12
    9224:	add	ip, ip, #397312	; 0x61000
    9228:	ldr	pc, [ip, #3424]!	; 0xd60

Disassembly of section .text:

00009230 <main@@Base>:
    9230:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9234:	mov	r5, r1
    9236:	vpush	{d8-d9}
    923a:	movs	r4, #0
    923c:	ldr.w	r3, [pc, #1276]	; 973c <main@@Base+0x50c>
    9240:	mov	sl, r4
    9242:	ldr.w	r2, [pc, #1276]	; 9740 <main@@Base+0x510>
    9246:	mov	r9, r4
    9248:	add	r3, pc
    924a:	subw	sp, sp, #1212	; 0x4bc
    924e:	add	r2, pc
    9250:	str	r3, [sp, #32]
    9252:	ldr.w	r3, [pc, #1264]	; 9744 <main@@Base+0x514>
    9256:	str	r0, [sp, #196]	; 0xc4
    9258:	movs	r0, #30
    925a:	ldr	r3, [r2, r3]
    925c:	ldr	r3, [r3, #0]
    925e:	str.w	r3, [sp, #1204]	; 0x4b4
    9262:	mov.w	r3, #0
    9266:	blx	8ca8 <sysconf@plt>
    926a:	mov.w	r2, #320	; 0x140
    926e:	cmp.w	r0, #16384	; 0x4000
    9272:	mov	r3, r0
    9274:	it	cc
    9276:	movcc.w	r3, #16384	; 0x4000
    927a:	str	r3, [sp, #112]	; 0x70
    927c:	movs	r3, #0
    927e:	strd	r2, r3, [sp, #280]	; 0x118
    9282:	bl	1bc98 <crc32c_optimization_init@@Base>
    9286:	movs	r3, #0
    9288:	str	r3, [sp, #192]	; 0xc0
    928a:	movs	r3, #1
    928c:	mov	r8, r3
    928e:	mov	r7, r3
    9290:	str	r3, [sp, #56]	; 0x38
    9292:	ldr.w	r3, [pc, #1204]	; 9748 <main@@Base+0x518>
    9296:	add	r3, pc
    9298:	vmov	s16, r3
    929c:	ldr.w	r3, [pc, #1196]	; 974c <main@@Base+0x51c>
    92a0:	add	r3, pc
    92a2:	vmov	s17, r3
    92a6:	ldr.w	r3, [pc, #1192]	; 9750 <main@@Base+0x520>
    92aa:	add	r3, pc
    92ac:	vmov	s18, r3
    92b0:	vmov	r3, s16
    92b4:	movs	r6, #0
    92b6:	vmov	r2, s17
    92ba:	mov	r1, r5
    92bc:	ldr	r0, [sp, #196]	; 0xc4
    92be:	str	r6, [sp, #0]
    92c0:	blx	8eec <getopt_long@plt>
    92c4:	cmp	r0, #0
    92c6:	blt.w	9454 <main@@Base+0x224>
    92ca:	cmp	r0, #114	; 0x72
    92cc:	bgt.n	936e <main@@Base+0x13e>
    92ce:	cmp	r0, #99	; 0x63
    92d0:	bgt.n	931a <main@@Base+0xea>
    92d2:	cmp	r0, #78	; 0x4e
    92d4:	beq.n	9392 <main@@Base+0x162>
    92d6:	cmp	r0, #79	; 0x4f
    92d8:	beq.n	93d6 <main@@Base+0x1a6>
    92da:	cmp	r0, #76	; 0x4c
    92dc:	beq.n	930c <main@@Base+0xdc>
    92de:	str	r0, [sp, #192]	; 0xc0
    92e0:	bl	ad94 <_start@@Base+0x110>
    92e4:	ldr	r0, [sp, #192]	; 0xc0
    92e6:	subs.w	sl, r0, #270	; 0x10e
    92ea:	it	ne
    92ec:	movne.w	sl, #1
    92f0:	ldr.w	r2, [pc, #1120]	; 9754 <main@@Base+0x524>
    92f4:	ldr.w	r3, [pc, #1100]	; 9744 <main@@Base+0x514>
    92f8:	add	r2, pc
    92fa:	ldr	r3, [r2, r3]
    92fc:	ldr	r2, [r3, #0]
    92fe:	ldr.w	r3, [sp, #1204]	; 0x4b4
    9302:	eors	r2, r3
    9304:	beq.w	ac1c <main@@Base+0x19ec>
    9308:	blx	8c90 <__stack_chk_fail@plt>
    930c:	movs	r4, #8
    930e:	b.n	92b0 <main@@Base+0x80>
    9310:	mov.w	r8, #0
    9314:	b.n	92b0 <main@@Base+0x80>
    9316:	str	r6, [sp, #56]	; 0x38
    9318:	b.n	92b0 <main@@Base+0x80>
    931a:	sub.w	r3, r0, #100	; 0x64
    931e:	cmp	r3, #14
    9320:	bhi.n	92de <main@@Base+0xae>
    9322:	add	r2, pc, #8	; (adr r2, 932c <main@@Base+0xfc>)
    9324:	ldr.w	r3, [r2, r3, lsl #2]
    9328:	add	r2, r3
    932a:	bx	r2
    932c:			; <UNDEFINED> instruction: 0xffe5ffff
    9330:			; <UNDEFINED> instruction: 0xffb3ffff
    9334:			; <UNDEFINED> instruction: 0xffb3ffff
    9338:			; <UNDEFINED> instruction: 0xffb3ffff
    933c:			; <UNDEFINED> instruction: 0xffb3ffff
    9340:	movs	r5, r7
    9342:	movs	r0, r0
    9344:			; <UNDEFINED> instruction: 0xffb3ffff
    9348:			; <UNDEFINED> instruction: 0xffb3ffff
    934c:	lsls	r5, r7, #1
    934e:	movs	r0, r0
    9350:			; <UNDEFINED> instruction: 0xffb3ffff
    9354:	lsls	r3, r4, #1
    9356:	movs	r0, r0
    9358:			; <UNDEFINED> instruction: 0xffb3ffff
    935c:	lsls	r5, r4, #2
    935e:	movs	r0, r0
    9360:			; <UNDEFINED> instruction: 0xffb3ffff
    9364:	lsls	r7, r6, #1
    9366:	movs	r0, r0
    9368:	mov.w	r9, #1
    936c:	b.n	92b0 <main@@Base+0x80>
    936e:	cmp.w	r0, #256	; 0x100
    9372:	beq.n	9316 <main@@Base+0xe6>
    9374:	movw	r3, #257	; 0x101
    9378:	cmp	r0, r3
    937a:	bne.n	92de <main@@Base+0xae>
    937c:	ldr	r2, [sp, #32]
    937e:	ldr	r3, [pc, #984]	; (9758 <main@@Base+0x528>)
    9380:	ldr	r3, [r2, r3]
    9382:	ldr	r0, [r3, #0]
    9384:	bl	35348 <parse_csum_type@@Base>
    9388:	uxth	r3, r0
    938a:	str	r3, [sp, #192]	; 0xc0
    938c:	b.n	92b0 <main@@Base+0x80>
    938e:	movs	r7, #0
    9390:	b.n	92b0 <main@@Base+0x80>
    9392:	ldr	r2, [sp, #32]
    9394:	ldr	r3, [pc, #960]	; (9758 <main@@Base+0x528>)
    9396:	ldr	r3, [r2, r3]
    9398:	ldr	r0, [r3, #0]
    939a:	bl	35094 <parse_size@@Base>
    939e:	str	r0, [sp, #112]	; 0x70
    93a0:	b.n	92b0 <main@@Base+0x80>
    93a2:	mov.w	sl, #1
    93a6:	b.n	92b0 <main@@Base+0x80>
    93a8:	ldr	r3, [pc, #940]	; (9758 <main@@Base+0x528>)
    93aa:	ldr	r2, [sp, #32]
    93ac:	ldr	r4, [r2, r3]
    93ae:	ldr	r0, [r4, #0]
    93b0:	blx	8f1c <strlen@plt>
    93b4:	cmp	r0, #255	; 0xff
    93b6:	bls.n	93c2 <main@@Base+0x192>
    93b8:	vmov	r0, s18
    93bc:	movs	r1, #255	; 0xff
    93be:	bl	1bca0 <__btrfs_warning@@Base>
    93c2:	ldr	r1, [r4, #0]
    93c4:	add	r0, sp, #948	; 0x3b4
    93c6:	movs	r2, #255	; 0xff
    93c8:	movs	r4, #16
    93ca:	bl	34420 <__strncpy_null@@Base>
    93ce:	b.n	92b0 <main@@Base+0x80>
    93d0:	movs	r3, #1
    93d2:	str	r3, [sp, #56]	; 0x38
    93d4:	b.n	92b0 <main@@Base+0x80>
    93d6:	ldr	r2, [sp, #32]
    93d8:	ldr	r3, [pc, #892]	; (9758 <main@@Base+0x528>)
    93da:	ldr	r3, [r2, r3]
    93dc:	ldr	r0, [r3, #0]
    93de:	blx	8c78 <strdup@plt+0x4>
    93e2:	add	r1, sp, #280	; 0x118
    93e4:	mov	r6, r0
    93e6:	bl	16768 <btrfs_parse_fs_features@@Base>
    93ea:	mov	fp, r0
    93ec:	cbz	r0, 9402 <main@@Base+0x1d2>
    93ee:	mov	r1, r0
    93f0:	ldr	r0, [pc, #872]	; (975c <main@@Base+0x52c>)
    93f2:	add	r0, pc
    93f4:	bl	1bd1c <__btrfs_error@@Base>
    93f8:	mov	r0, r6
    93fa:	blx	8b84 <free@plt+0x4>
    93fe:	movs	r0, #1
    9400:	b.n	9420 <main@@Base+0x1f0>
    9402:	mov	r0, r6
    9404:	blx	8b84 <free@plt+0x4>
    9408:	ldrd	r2, r3, [sp, #280]	; 0x118
    940c:	cmp	r2, #0
    940e:	sbcs.w	r1, r3, #0
    9412:	bge.n	9424 <main@@Base+0x1f4>
    9414:	ldr	r0, [pc, #800]	; (9738 <main@@Base+0x508>)
    9416:	mov.w	r1, #4294967295	; 0xffffffff
    941a:	bl	16698 <btrfs_list_all_fs_features@@Base>
    941e:	mov	r0, fp
    9420:	blx	8f10 <exit@plt>
    9424:	bic.w	r1, r2, #888	; 0x378
    9428:	bic.w	r1, r1, #3
    942c:	strd	r1, r3, [sp, #80]	; 0x50
    9430:	ldrd	r2, r3, [sp, #80]	; 0x50
    9434:	orrs	r3, r2
    9436:	beq.w	92b0 <main@@Base+0x80>
    943a:	add	r1, sp, #884	; 0x374
    943c:	ldrd	r2, r3, [sp, #80]	; 0x50
    9440:	str	r1, [sp, #192]	; 0xc0
    9442:	mov	r0, r1
    9444:	bl	165f8 <btrfs_parse_features_to_string@@Base>
    9448:	ldr	r0, [pc, #788]	; (9760 <main@@Base+0x530>)
    944a:	ldr	r1, [sp, #192]	; 0xc0
    944c:	add	r0, pc
    944e:	bl	1bd1c <__btrfs_error@@Base>
    9452:	b.n	93fe <main@@Base+0x1ce>
    9454:	mov	r0, r5
    9456:	bl	158a4 <set_argv0@@Base>
    945a:	ldr	r3, [pc, #776]	; (9764 <main@@Base+0x534>)
    945c:	ldr	r2, [sp, #32]
    945e:	movs	r1, #1
    9460:	ldr.w	fp, [r2, r3]
    9464:	ldr	r3, [sp, #196]	; 0xc4
    9466:	ldr.w	r0, [fp]
    946a:	subs	r0, r3, r0
    946c:	bl	158c4 <check_argc_exact@@Base>
    9470:	cbz	r0, 947c <main@@Base+0x24c>
    9472:	bl	ad94 <_start@@Base+0x110>
    9476:	mov.w	sl, #1
    947a:	b.n	92f0 <main@@Base+0xc0>
    947c:	cmp.w	sl, #0
    9480:	beq.n	94a6 <main@@Base+0x276>
    9482:	cmp.w	r8, #0
    9486:	beq.n	9490 <main@@Base+0x260>
    9488:	cmp.w	r9, #0
    948c:	bne.n	9490 <main@@Base+0x260>
    948e:	cbnz	r7, 94a6 <main@@Base+0x276>
    9490:	ldr	r2, [sp, #32]
    9492:	ldr	r3, [pc, #724]	; (9768 <main@@Base+0x538>)
    9494:	ldr	r0, [pc, #724]	; (976c <main@@Base+0x53c>)
    9496:	ldr	r3, [r2, r3]
    9498:	add	r0, pc
    949a:	ldr	r1, [r3, #0]
    949c:	blx	91a8 <fputs@plt+0x4>
    94a0:	bl	ad94 <_start@@Base+0x110>
    94a4:	b.n	92f0 <main@@Base+0xc0>
    94a6:	ldr.w	r3, [fp]
    94aa:	ldr.w	r3, [r5, r3, lsl #2]
    94ae:	mov	r0, r3
    94b0:	vmov	s17, r3
    94b4:	bl	34af0 <check_mounted@@Base>
    94b8:	subs	r5, r0, #0
    94ba:	bge.n	94ce <main@@Base+0x29e>
    94bc:	blx	8f58 <__errno_location@plt>
    94c0:	negs	r5, r5
    94c2:	str	r5, [r0, #0]
    94c4:	ldr	r0, [pc, #680]	; (9770 <main@@Base+0x540>)
    94c6:	add	r0, pc
    94c8:	bl	1bd1c <__btrfs_error@@Base>
    94cc:	b.n	9476 <main@@Base+0x246>
    94ce:	beq.n	94de <main@@Base+0x2ae>
    94d0:	ldr	r0, [pc, #672]	; (9774 <main@@Base+0x544>)
    94d2:	vmov	r1, s17
    94d6:	add	r0, pc
    94d8:	bl	1bd1c <__btrfs_error@@Base>
    94dc:	b.n	9476 <main@@Base+0x246>
    94de:	cmp.w	sl, #0
    94e2:	beq.w	9b56 <main@@Base+0x926>
    94e6:	ldr	r3, [pc, #656]	; (9778 <main@@Base+0x548>)
    94e8:	add	r4, sp, #436	; 0x1b4
    94ea:	ldr	r2, [sp, #32]
    94ec:	strd	r5, r5, [r4]
    94f0:	str	r5, [r4, #8]
    94f2:	ldr	r3, [r2, r3]
    94f4:	mov	r6, r3
    94f6:	str	r3, [sp, #192]	; 0xc0
    94f8:	ldr	r1, [r6, #8]
    94fa:	movs	r0, #1
    94fc:	blx	8ab8 <calloc@plt+0x4>
    9500:	str.w	r0, [r4], #4
    9504:	cmp	r0, #0
    9506:	beq.w	9b40 <main@@Base+0x910>
    950a:	adds	r5, #1
    950c:	adds	r6, #16
    950e:	cmp	r5, #3
    9510:	bne.n	94f8 <main@@Base+0x2c8>
    9512:	vmov	r0, s17
    9516:	movs	r1, #2
    9518:	blx	8e14 <open64@plt>
    951c:	subs	r3, r0, #0
    951e:	vmov	s18, r3
    9522:	bge.n	9558 <main@@Base+0x328>
    9524:	ldr	r0, [pc, #596]	; (977c <main@@Base+0x54c>)
    9526:	vmov	r1, s17
    952a:	add	r0, pc
    952c:	bl	1bd1c <__btrfs_error@@Base>
    9530:	mvn.w	r6, #4
    9534:	add	r4, sp, #436	; 0x1b4
    9536:	ldr	r0, [sp, #436]	; 0x1b4
    9538:	blx	8b84 <free@plt+0x4>
    953c:	ldr	r0, [r4, #4]
    953e:	blx	8b84 <free@plt+0x4>
    9542:	ldr	r0, [r4, #8]
    9544:	blx	8b84 <free@plt+0x4>
    9548:	cmp	r6, #0
    954a:	beq.w	9b46 <main@@Base+0x916>
    954e:	ldr	r0, [pc, #560]	; (9780 <main@@Base+0x550>)
    9550:	add	r0, pc
    9552:	bl	1bd1c <__btrfs_error@@Base>
    9556:	b.n	92f0 <main@@Base+0xc0>
    9558:	movs	r3, #2
    955a:	movs	r2, #0
    955c:	str	r3, [sp, #0]
    955e:	movs	r3, #0
    9560:	blx	8d54 <lseek64@plt>
    9564:	movs	r4, #0
    9566:	movs	r2, #0
    9568:	movs	r3, #0
    956a:	str	r4, [sp, #0]
    956c:	strd	r0, r1, [sp, #72]	; 0x48
    9570:	vmov	r1, s17
    9574:	vmov	r0, s18
    9578:	bl	22bdc <open_ctree_fd@@Base>
    957c:	cbnz	r0, 9588 <main@@Base+0x358>
    957e:	ldr	r0, [pc, #516]	; (9784 <main@@Base+0x554>)
    9580:	add	r0, pc
    9582:	bl	1bd1c <__btrfs_error@@Base>
    9586:	b.n	9530 <main@@Base+0x300>
    9588:	ldr.w	r3, [r0, #464]	; 0x1d0
    958c:	add.w	r8, sp, #504	; 0x1f8
    9590:	add	r7, sp, #316	; 0x13c
    9592:	strb.w	r4, [sp, #326]	; 0x146
    9596:	mov	r0, r8
    9598:	strb.w	r4, [sp, #327]	; 0x147
    959c:	vmov	s16, r3
    95a0:	strb.w	r4, [sp, #328]	; 0x148
    95a4:	movs	r3, #144	; 0x90
    95a6:	strb.w	r4, [sp, #329]	; 0x149
    95aa:	strb	r3, [r7, #8]
    95ac:	mov.w	r9, #256	; 0x100
    95b0:	strb.w	r4, [sp, #330]	; 0x14a
    95b4:	movs	r6, #5
    95b6:	strd	r9, r4, [r7]
    95ba:	addw	r5, sp, #325	; 0x145
    95be:	strb	r4, [r5, #6]
    95c0:	strb	r4, [r5, #7]
    95c2:	strb	r6, [r5, #0]
    95c4:	bl	1c6e8 <btrfs_init_path@@Base>
    95c8:	vmov	r1, s16
    95cc:	mov	r3, r8
    95ce:	strd	r4, r4, [sp]
    95d2:	mov	r2, r7
    95d4:	mov	r0, r4
    95d6:	ldr	r1, [r1, #28]
    95d8:	bl	1eadc <btrfs_search_slot@@Base>
    95dc:	mov	r4, r0
    95de:	mov	r0, r8
    95e0:	bl	1c6f8 <btrfs_release_path@@Base>
    95e4:	cmp	r4, #0
    95e6:	ble.n	9692 <main@@Base+0x462>
    95e8:	ldr	r0, [pc, #412]	; (9788 <main@@Base+0x558>)
    95ea:	mvn.w	r6, #1
    95ee:	add	r0, pc
    95f0:	bl	1bd1c <__btrfs_error@@Base>
    95f4:	add	r0, sp, #504	; 0x1f8
    95f6:	bl	1c6f8 <btrfs_release_path@@Base>
    95fa:	vmov	r0, s16
    95fe:	bl	21c2c <close_ctree_fs_info@@Base>
    9602:	cmp	r6, #0
    9604:	bne.n	9534 <main@@Base+0x304>
    9606:	add.w	r8, sp, #436	; 0x1b4
    960a:	movs	r5, #2
    960c:	ldr	r3, [sp, #192]	; 0xc0
    960e:	ldr	r2, [sp, #192]	; 0xc0
    9610:	ldrd	r0, r1, [sp, #72]	; 0x48
    9614:	ldrd	r4, r7, [r3, #32]
    9618:	ldr	r3, [r3, #40]	; 0x28
    961a:	ldr	r2, [r2, #44]	; 0x2c
    961c:	adds	r3, r4, r3
    961e:	str	r3, [sp, #120]	; 0x78
    9620:	adc.w	r3, r7, r2
    9624:	str	r3, [sp, #124]	; 0x7c
    9626:	ldrd	r2, r3, [sp, #120]	; 0x78
    962a:	cmp	r3, r1
    962c:	it	eq
    962e:	cmpeq	r2, r0
    9630:	bcs.w	9b2e <main@@Base+0x8fe>
    9634:	ldr	r3, [sp, #120]	; 0x78
    9636:	strd	r4, r7, [sp]
    963a:	subs	r3, r3, r4
    963c:	str	r3, [sp, #128]	; 0x80
    963e:	ldr	r3, [sp, #124]	; 0x7c
    9640:	ldr.w	r1, [r8, r5, lsl #2]
    9644:	vmov	r0, s18
    9648:	sbc.w	r3, r3, r7
    964c:	ldr	r2, [sp, #128]	; 0x80
    964e:	str	r3, [sp, #132]	; 0x84
    9650:	blx	8ffc <pwrite64@plt>
    9654:	asrs	r3, r0, #31
    9656:	mov	r9, r0
    9658:	ldrd	r0, r1, [sp, #128]	; 0x80
    965c:	cmp	r3, r1
    965e:	it	eq
    9660:	cmpeq	r9, r0
    9662:	bcs.w	9b2e <main@@Base+0x8fe>
    9666:	blx	8f58 <__errno_location@plt>
    966a:	cmp.w	r9, #0
    966e:	itee	ge
    9670:	mvnge.w	r6, #4
    9674:	ldrlt	r6, [r0, #0]
    9676:	neglt	r6, r6
    9678:	negs	r3, r6
    967a:	str	r3, [r0, #0]
    967c:	ldrd	r2, r3, [sp, #128]	; 0x80
    9680:	ldr	r0, [pc, #264]	; (978c <main@@Base+0x55c>)
    9682:	strd	r2, r3, [sp]
    9686:	add	r0, pc
    9688:	mov	r2, r4
    968a:	mov	r3, r7
    968c:	bl	1bd1c <__btrfs_error@@Base>
    9690:	b.n	9534 <main@@Base+0x304>
    9692:	beq.n	96a8 <main@@Base+0x478>
    9694:	blx	8f58 <__errno_location@plt>
    9698:	negs	r3, r4
    969a:	mov	r6, r4
    969c:	str	r3, [r0, #0]
    969e:	ldr	r0, [pc, #240]	; (9790 <main@@Base+0x560>)
    96a0:	add	r0, pc
    96a2:	bl	1bd1c <__btrfs_error@@Base>
    96a6:	b.n	95f4 <main@@Base+0x3c4>
    96a8:	vmov	r0, s16
    96ac:	mov	r1, r7
    96ae:	movs	r3, #132	; 0x84
    96b0:	strd	r9, r4, [r7]
    96b4:	strb	r3, [r7, #8]
    96b6:	mov.w	r3, #4294967295	; 0xffffffff
    96ba:	strb	r3, [r5, #0]
    96bc:	strb	r3, [r5, #1]
    96be:	strb	r3, [r5, #2]
    96c0:	strb	r3, [r5, #3]
    96c2:	strb	r3, [r5, #4]
    96c4:	strb	r3, [r5, #5]
    96c6:	strb	r3, [r5, #6]
    96c8:	strb	r3, [r5, #7]
    96ca:	bl	222a6 <btrfs_read_fs_root@@Base>
    96ce:	cmn.w	r0, #4096	; 0x1000
    96d2:	mov	fp, r0
    96d4:	bls.n	96ea <main@@Base+0x4ba>
    96d6:	mov	r6, r0
    96d8:	blx	8f58 <__errno_location@plt>
    96dc:	negs	r3, r6
    96de:	str	r3, [r0, #0]
    96e0:	ldr	r0, [pc, #176]	; (9794 <main@@Base+0x564>)
    96e2:	add	r0, pc
    96e4:	bl	1bd1c <__btrfs_error@@Base>
    96e8:	b.n	95f4 <main@@Base+0x3c4>
    96ea:	ldr	r3, [pc, #172]	; (9798 <main@@Base+0x568>)
    96ec:	mov	r1, r0
    96ee:	strd	r6, r4, [sp, #12]
    96f2:	add	r3, pc
    96f4:	str	r3, [sp, #8]
    96f6:	ldr.w	r2, [r0, #176]	; 0xb0
    96fa:	ldr.w	r3, [r0, #180]	; 0xb4
    96fe:	mov	r0, r4
    9700:	strd	r2, r3, [sp]
    9704:	mov	r2, r8
    9706:	bl	e68c <btrfs_lookup_dir_item@@Base>
    970a:	mov	r6, r0
    970c:	cbz	r0, 9714 <main@@Base+0x4e4>
    970e:	cmn.w	r0, #4096	; 0x1000
    9712:	bls.n	97a4 <main@@Base+0x574>
    9714:	add	r0, sp, #504	; 0x1f8
    9716:	bl	1c6f8 <btrfs_release_path@@Base>
    971a:	cmp	r6, #0
    971c:	it	eq
    971e:	mvneq.w	r6, #1
    9722:	blx	8f58 <__errno_location@plt>
    9726:	negs	r3, r6
    9728:	ldr	r1, [pc, #112]	; (979c <main@@Base+0x56c>)
    972a:	add	r1, pc
    972c:	str	r3, [r0, #0]
    972e:	ldr	r0, [pc, #112]	; (97a0 <main@@Base+0x570>)
    9730:	add	r0, pc
    9732:	bl	1bd1c <__btrfs_error@@Base>
    9736:	b.n	95f4 <main@@Base+0x3c4>
    9738:	stc2	15, cr15, [r4], {255}	; 0xff
    973c:	subs	r0, r2, r3
    973e:	movs	r6, r0
    9740:	subs	r2, r1, r3
    9742:	movs	r6, r0
    9744:	lsls	r0, r1, #10
    9746:	movs	r0, r0
    9748:	asrs	r6, r4, #6
    974a:	movs	r6, r0
    974c:	strh	r0, [r0, r1]
    974e:	movs	r3, r0
    9750:	strh	r3, [r0, r1]
    9752:	movs	r3, r0
    9754:	subs	r0, r4, r0
    9756:	movs	r6, r0
    9758:	lsls	r0, r4, #11
    975a:	movs	r0, r0
    975c:	str	r7, [r3, r4]
    975e:	movs	r3, r0
    9760:	str	r1, [r5, r3]
    9762:	movs	r3, r0
    9764:	lsls	r0, r2, #10
    9766:	movs	r0, r0
    9768:	lsls	r4, r3, #10
    976a:	movs	r0, r0
    976c:	str	r2, [r0, r3]
    976e:	movs	r3, r0
    9770:	str	r6, [r1, r3]
    9772:	movs	r3, r0
    9774:	str	r7, [r3, r3]
    9776:	movs	r3, r0
    9778:	lsls	r4, r1, #10
    977a:	movs	r0, r0
    977c:	str	r1, [r3, r2]
    977e:	movs	r3, r0
    9780:	strh	r7, [r0, r3]
    9782:	movs	r3, r0
    9784:	str	r1, [r3, r1]
    9786:	movs	r3, r0
    9788:	str	r0, [r0, r0]
    978a:	movs	r3, r0
    978c:	str	r0, [r5, r5]
    978e:	movs	r3, r0
    9790:	ldr	r7, [pc, #540]	; (99b0 <main@@Base+0x780>)
    9792:	movs	r3, r0
    9794:	ldr	r7, [pc, #456]	; (9960 <main@@Base+0x730>)
    9796:	movs	r3, r0
    9798:	ldr	r7, [pc, #564]	; (99d0 <main@@Base+0x7a0>)
    979a:	movs	r3, r0
    979c:	ldr	r7, [pc, #340]	; (98f4 <main@@Base+0x6c4>)
    979e:	movs	r3, r0
    97a0:	ldr	r7, [pc, #340]	; (98f8 <main@@Base+0x6c8>)
    97a2:	movs	r3, r0
    97a4:	add.w	r9, sp, #360	; 0x168
    97a8:	mov	r2, r0
    97aa:	movs	r3, #17
    97ac:	ldr.w	r0, [r8]
    97b0:	mov	r1, r9
    97b2:	bl	1bbba <read_extent_buffer@@Base>
    97b6:	ldr.w	r3, [r9, #13]
    97ba:	ldr.w	r2, [r9, #9]
    97be:	mov	r0, r8
    97c0:	str	r3, [r5, #4]
    97c2:	ldrb.w	r3, [r9, #8]
    97c6:	str	r2, [r5, #0]
    97c8:	strb	r3, [r7, #8]
    97ca:	ldr.w	r3, [r9]
    97ce:	str	r3, [r7, #0]
    97d0:	ldr.w	r3, [r9, #4]
    97d4:	str	r3, [r7, #4]
    97d6:	bl	1c6f8 <btrfs_release_path@@Base>
    97da:	ldr	r3, [r7, #0]
    97dc:	mov	r2, r8
    97de:	mov	r1, fp
    97e0:	mov	r0, r4
    97e2:	str	r3, [sp, #32]
    97e4:	ldr	r3, [r7, #4]
    97e6:	str	r4, [sp, #0]
    97e8:	str	r3, [sp, #36]	; 0x24
    97ea:	mov	r3, r7
    97ec:	bl	32060 <btrfs_lookup_inode@@Base>
    97f0:	subs	r6, r0, #0
    97f2:	bge.n	9812 <main@@Base+0x5e2>
    97f4:	mov	r0, r8
    97f6:	bl	1c6f8 <btrfs_release_path@@Base>
    97fa:	blx	8f58 <__errno_location@plt>
    97fe:	negs	r3, r6
    9800:	str	r3, [r0, #0]
    9802:	ldr.w	r0, [pc, #3208]	; a48c <main@@Base+0x125c>
    9806:	ldrd	r2, r3, [sp, #32]
    980a:	add	r0, pc
    980c:	bl	1bd1c <__btrfs_error@@Base>
    9810:	b.n	95f4 <main@@Base+0x3c4>
    9812:	ldr.w	r3, [r8]
    9816:	movs	r7, #25
    9818:	ldr.w	r2, [r8, #32]
    981c:	mov	r0, r8
    981e:	adds	r3, #96	; 0x60
    9820:	add	r5, sp, #664	; 0x298
    9822:	add.w	r8, sp, #336	; 0x150
    9826:	movs	r6, #0
    9828:	mla	r2, r7, r2, r3
    982c:	ldr.w	r2, [r2, #118]	; 0x76
    9830:	add	r3, r2
    9832:	ldr.w	r2, [r3, #117]!
    9836:	ldr	r3, [r3, #4]
    9838:	str	r2, [sp, #56]	; 0x38
    983a:	str	r3, [sp, #60]	; 0x3c
    983c:	bl	1c6f8 <btrfs_release_path@@Base>
    9840:	ldr.w	r3, [fp, #464]	; 0x1d0
    9844:	mov	r0, r5
    9846:	strb.w	r6, [sp, #345]	; 0x159
    984a:	strb.w	r6, [sp, #346]	; 0x15a
    984e:	str	r3, [sp, #96]	; 0x60
    9850:	ldrd	r2, r3, [sp, #32]
    9854:	strb.w	r6, [sp, #347]	; 0x15b
    9858:	strb.w	r6, [sp, #348]	; 0x15c
    985c:	strd	r2, r3, [sp, #336]	; 0x150
    9860:	movs	r3, #108	; 0x6c
    9862:	strb.w	r6, [sp, #349]	; 0x15d
    9866:	strb.w	r6, [sp, #350]	; 0x15e
    986a:	strb.w	r6, [sp, #351]	; 0x15f
    986e:	strb.w	r6, [sp, #352]	; 0x160
    9872:	strb.w	r3, [sp, #344]	; 0x158
    9876:	bl	1c6e8 <btrfs_init_path@@Base>
    987a:	mov	r0, r6
    987c:	strd	r6, r6, [sp]
    9880:	mov	r3, r5
    9882:	mov	r2, r8
    9884:	mov	r1, fp
    9886:	bl	1eadc <btrfs_search_slot@@Base>
    988a:	subs	r6, r0, #0
    988c:	bge.n	98ae <main@@Base+0x67e>
    988e:	blx	8f58 <__errno_location@plt>
    9892:	negs	r3, r6
    9894:	str	r3, [r0, #0]
    9896:	ldr.w	r0, [pc, #3064]	; a490 <main@@Base+0x1260>
    989a:	add	r0, pc
    989c:	bl	1bd1c <__btrfs_error@@Base>
    98a0:	mov	r0, r5
    98a2:	bl	1c6f8 <btrfs_release_path@@Base>
    98a6:	ldr.w	r0, [pc, #3052]	; a494 <main@@Base+0x1264>
    98aa:	add	r0, pc
    98ac:	b.n	96e4 <main@@Base+0x4b4>
    98ae:	movs	r3, #0
    98b0:	movs	r2, #0
    98b2:	str	r7, [sp, #104]	; 0x68
    98b4:	strd	r2, r3, [sp, #40]	; 0x28
    98b8:	add	r3, sp, #360	; 0x168
    98ba:	str	r3, [sp, #48]	; 0x30
    98bc:	ldr	r6, [r5, #0]
    98be:	ldr	r7, [r5, #32]
    98c0:	ldr.w	r3, [r6, #192]	; 0xc0
    98c4:	cmp	r3, r7
    98c6:	bls.w	9a80 <main@@Base+0x850>
    98ca:	ldr	r3, [sp, #104]	; 0x68
    98cc:	mov	r0, r6
    98ce:	ldr	r1, [sp, #48]	; 0x30
    98d0:	muls	r7, r3
    98d2:	movs	r3, #17
    98d4:	adds	r7, #101	; 0x65
    98d6:	mov	r2, r7
    98d8:	bl	1bbba <read_extent_buffer@@Base>
    98dc:	ldr	r3, [sp, #48]	; 0x30
    98de:	ldr.w	r8, [r3, #9]
    98e2:	ldr.w	r9, [r3, #13]
    98e6:	ldr	r3, [sp, #48]	; 0x30
    98e8:	str.w	r8, [sp, #345]	; 0x159
    98ec:	str.w	r9, [sp, #349]	; 0x15d
    98f0:	ldrd	r0, r1, [r3]
    98f4:	ldrb.w	ip, [r3, #8]
    98f8:	ldrd	r2, r3, [sp, #32]
    98fc:	strd	r0, r1, [sp, #336]	; 0x150
    9900:	cmp	r3, r1
    9902:	strb.w	ip, [sp, #344]	; 0x158
    9906:	it	eq
    9908:	cmpeq	r2, r0
    990a:	bne.n	993a <main@@Base+0x70a>
    990c:	cmp.w	ip, #108	; 0x6c
    9910:	bne.n	993a <main@@Base+0x70a>
    9912:	adds	r6, #96	; 0x60
    9914:	add	r7, r6
    9916:	ldr.w	r0, [r7, #17]
    991a:	adds	r0, #101	; 0x65
    991c:	add	r0, r6
    991e:	ldrb	r3, [r0, #20]
    9920:	cmp	r3, #1
    9922:	beq.n	9982 <main@@Base+0x752>
    9924:	ldr.w	r0, [pc, #2928]	; a498 <main@@Base+0x1268>
    9928:	ldrd	r2, r3, [sp, #32]
    992c:	add	r0, pc
    992e:	strd	r8, r9, [sp]
    9932:	bl	1bd1c <__btrfs_error@@Base>
    9936:	mvn.w	r4, #21
    993a:	add	r0, sp, #664	; 0x298
    993c:	bl	1c6f8 <btrfs_release_path@@Base>
    9940:	cmp	r4, #0
    9942:	bne.w	ac16 <main@@Base+0x19e6>
    9946:	ldr	r3, [sp, #96]	; 0x60
    9948:	ldr.w	r3, [r3, #308]	; 0x134
    994c:	ldr.w	r1, [r3, #188]	; 0xbc
    9950:	mov	r3, r4
    9952:	and.w	r2, r1, #512	; 0x200
    9956:	orrs	r3, r2
    9958:	bne.w	9aae <main@@Base+0x87e>
    995c:	ldrd	r2, r3, [sp, #56]	; 0x38
    9960:	ldrd	r0, r1, [sp, #40]	; 0x28
    9964:	cmp	r3, r1
    9966:	it	eq
    9968:	cmpeq	r2, r0
    996a:	beq.w	9aae <main@@Base+0x87e>
    996e:	ldr.w	r0, [pc, #2860]	; a49c <main@@Base+0x126c>
    9972:	mvn.w	r6, #21
    9976:	ldrd	r2, r3, [sp, #32]
    997a:	add	r0, pc
    997c:	bl	1bd1c <__btrfs_error@@Base>
    9980:	b.n	98a6 <main@@Base+0x676>
    9982:	ldrb	r3, [r0, #16]
    9984:	cbnz	r3, 998e <main@@Base+0x75e>
    9986:	ldrb	r3, [r0, #17]
    9988:	cbnz	r3, 998e <main@@Base+0x75e>
    998a:	ldrh	r3, [r0, #18]
    998c:	cbz	r3, 999e <main@@Base+0x76e>
    998e:	ldr.w	r0, [pc, #2832]	; a4a0 <main@@Base+0x1270>
    9992:	ldrd	r2, r3, [sp, #32]
    9996:	add	r0, pc
    9998:	strd	r8, r9, [sp]
    999c:	b.n	9932 <main@@Base+0x702>
    999e:	mov	r3, r0
    99a0:	ldr.w	r6, [r3, #21]!
    99a4:	ldr	r7, [r3, #4]
    99a6:	ldr	r3, [r0, #8]
    99a8:	str	r3, [sp, #80]	; 0x50
    99aa:	ldr	r3, [r0, #12]
    99ac:	ldr	r2, [sp, #80]	; 0x50
    99ae:	str	r3, [sp, #88]	; 0x58
    99b0:	ldr	r3, [sp, #40]	; 0x28
    99b2:	adds	r3, r3, r2
    99b4:	ldr	r2, [sp, #88]	; 0x58
    99b6:	str	r3, [sp, #40]	; 0x28
    99b8:	ldr	r3, [sp, #44]	; 0x2c
    99ba:	adc.w	r3, r2, r3
    99be:	str	r3, [sp, #44]	; 0x2c
    99c0:	orrs.w	r3, r6, r7
    99c4:	beq.n	9a80 <main@@Base+0x850>
    99c6:	cmp	r7, r9
    99c8:	it	eq
    99ca:	cmpeq	r6, r8
    99cc:	beq.n	9a2a <main@@Base+0x7fa>
    99ce:	ldr	r3, [sp, #80]	; 0x50
    99d0:	mov	lr, r4
    99d2:	ldr.w	ip, [sp, #192]	; 0xc0
    99d6:	adds.w	r3, r3, r8
    99da:	str	r3, [sp, #256]	; 0x100
    99dc:	ldr	r3, [sp, #88]	; 0x58
    99de:	adc.w	r3, r3, r9
    99e2:	str	r3, [sp, #260]	; 0x104
    99e4:	ldrd	r2, r3, [ip]
    99e8:	cmp	r9, r3
    99ea:	it	eq
    99ec:	cmpeq	r8, r2
    99ee:	bcc.n	9a0c <main@@Base+0x7dc>
    99f0:	ldrd	r1, r0, [ip, #8]
    99f4:	adds	r1, r2, r1
    99f6:	str	r1, [sp, #208]	; 0xd0
    99f8:	adcs	r3, r0
    99fa:	str	r3, [sp, #212]	; 0xd4
    99fc:	ldrd	r2, r3, [sp, #208]	; 0xd0
    9a00:	ldrd	r0, r1, [sp, #256]	; 0x100
    9a04:	cmp	r3, r1
    9a06:	it	eq
    9a08:	cmpeq	r2, r0
    9a0a:	bcs.n	9a80 <main@@Base+0x850>
    9a0c:	add.w	lr, lr, #1
    9a10:	add.w	ip, ip, #16
    9a14:	cmp.w	lr, #3
    9a18:	bne.n	99e4 <main@@Base+0x7b4>
    9a1a:	ldr.w	r0, [pc, #2696]	; a4a4 <main@@Base+0x1274>
    9a1e:	ldrd	r2, r3, [sp, #32]
    9a22:	add	r0, pc
    9a24:	strd	r8, r9, [sp]
    9a28:	b.n	9932 <main@@Base+0x702>
    9a2a:	ldr	r1, [sp, #96]	; 0x60
    9a2c:	mov	r2, r6
    9a2e:	mov	r3, r7
    9a30:	add.w	r0, r1, #228	; 0xe4
    9a34:	bl	1a87c <search_cache_extent@@Base>
    9a38:	cmp	r0, #0
    9a3a:	beq.n	99ce <main@@Base+0x79e>
    9a3c:	ldrd	r2, r3, [r0, #24]
    9a40:	cmp	r7, r3
    9a42:	it	eq
    9a44:	cmpeq	r6, r2
    9a46:	strd	r2, r3, [sp, #64]	; 0x40
    9a4a:	bcc.n	99ce <main@@Base+0x79e>
    9a4c:	ldr	r3, [sp, #64]	; 0x40
    9a4e:	ldr	r1, [r0, #32]
    9a50:	adds	r1, r3, r1
    9a52:	ldr	r3, [sp, #68]	; 0x44
    9a54:	str	r1, [sp, #200]	; 0xc8
    9a56:	ldr	r1, [r0, #36]	; 0x24
    9a58:	adc.w	r1, r3, r1
    9a5c:	str	r1, [sp, #204]	; 0xcc
    9a5e:	ldrd	r2, r3, [sp, #200]	; 0xc8
    9a62:	cmp	r3, r7
    9a64:	it	eq
    9a66:	cmpeq	r2, r6
    9a68:	bcc.n	99ce <main@@Base+0x79e>
    9a6a:	ldr	r1, [r0, #64]	; 0x40
    9a6c:	cmp	r1, #1
    9a6e:	bne.n	99ce <main@@Base+0x79e>
    9a70:	ldrd	r0, r1, [r0, #80]	; 0x50
    9a74:	ldrd	r2, r3, [sp, #64]	; 0x40
    9a78:	cmp	r3, r1
    9a7a:	it	eq
    9a7c:	cmpeq	r2, r0
    9a7e:	bne.n	99ce <main@@Base+0x79e>
    9a80:	ldr	r2, [r5, #0]
    9a82:	ldr	r3, [r5, #32]
    9a84:	adds	r3, #1
    9a86:	str	r3, [r5, #32]
    9a88:	ldr.w	r2, [r2, #192]	; 0xc0
    9a8c:	cmp	r3, r2
    9a8e:	bcc.w	98bc <main@@Base+0x68c>
    9a92:	movs	r3, #0
    9a94:	mov	r1, r5
    9a96:	strb.w	r3, [r5, #65]	; 0x41
    9a9a:	ldr.w	r0, [fp, #464]	; 0x1d0
    9a9e:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
    9aa2:	cmp	r0, #0
    9aa4:	beq.w	98bc <main@@Base+0x68c>
    9aa8:	and.w	r4, r0, r0, asr #31
    9aac:	b.n	993a <main@@Base+0x70a>
    9aae:	ldr	r5, [sp, #192]	; 0xc0
    9ab0:	add	r3, sp, #436	; 0x1b4
    9ab2:	str	r3, [sp, #48]	; 0x30
    9ab4:	ldr	r3, [r5, #0]
    9ab6:	ldrd	r8, r9, [r5, #8]
    9aba:	ldr	r1, [r5, #4]
    9abc:	str	r3, [sp, #40]	; 0x28
    9abe:	adds.w	r3, r3, r8
    9ac2:	str	r3, [sp, #216]	; 0xd8
    9ac4:	adc.w	r3, r1, r9
    9ac8:	str	r3, [sp, #220]	; 0xdc
    9aca:	ldrd	r2, r3, [sp, #216]	; 0xd8
    9ace:	ldrd	r6, r7, [sp, #56]	; 0x38
    9ad2:	cmp	r3, r7
    9ad4:	it	eq
    9ad6:	cmpeq	r2, r6
    9ad8:	bcs.n	9b2a <main@@Base+0x8fa>
    9ada:	ldr	r3, [sp, #48]	; 0x30
    9adc:	mov	r0, fp
    9ade:	str	r1, [sp, #64]	; 0x40
    9ae0:	adds	r5, #16
    9ae2:	ldr.w	r3, [r3, r4, lsl #2]
    9ae6:	strd	r8, r3, [sp, #8]
    9aea:	ldr	r3, [sp, #40]	; 0x28
    9aec:	strd	r3, r1, [sp]
    9af0:	ldrd	r2, r3, [sp, #32]
    9af4:	bl	14f5c <btrfs_read_file@@Base>
    9af8:	ldr	r1, [sp, #64]	; 0x40
    9afa:	asrs	r3, r0, #31
    9afc:	mov	r6, r0
    9afe:	cmp	r3, r9
    9b00:	it	eq
    9b02:	cmpeq	r0, r8
    9b04:	bcs.n	9b24 <main@@Base+0x8f4>
    9b06:	str	r0, [sp, #8]
    9b08:	mov	r3, r1
    9b0a:	ldr.w	r0, [pc, #2460]	; a4a8 <main@@Base+0x1278>
    9b0e:	ldr	r2, [sp, #40]	; 0x28
    9b10:	add	r0, pc
    9b12:	strd	r8, r9, [sp]
    9b16:	bl	1bd1c <__btrfs_error@@Base>
    9b1a:	cmp	r6, #0
    9b1c:	it	ge
    9b1e:	mvnge.w	r6, #4
    9b22:	b.n	98a6 <main@@Base+0x676>
    9b24:	adds	r4, #1
    9b26:	cmp	r4, #3
    9b28:	bne.n	9ab4 <main@@Base+0x884>
    9b2a:	movs	r6, #0
    9b2c:	b.n	95f4 <main@@Base+0x3c4>
    9b2e:	subs	r5, #1
    9b30:	ldr	r3, [sp, #192]	; 0xc0
    9b32:	adds	r1, r5, #1
    9b34:	sub.w	r3, r3, #16
    9b38:	str	r3, [sp, #192]	; 0xc0
    9b3a:	bne.w	960c <main@@Base+0x3dc>
    9b3e:	b.n	9534 <main@@Base+0x304>
    9b40:	mvn.w	r6, #11
    9b44:	b.n	9534 <main@@Base+0x304>
    9b46:	ldr.w	r0, [pc, #2404]	; a4ac <main@@Base+0x127c>
    9b4a:	mov	sl, r6
    9b4c:	add	r0, pc
    9b4e:	blx	8e24 <puts@plt+0x4>
    9b52:	b.w	92f0 <main@@Base+0xc0>
    9b56:	orr.w	r4, r4, r8
    9b5a:	cmp.w	r9, #0
    9b5e:	orr.w	r7, r4, r7, lsl #1
    9b62:	add	r4, sp, #360	; 0x168
    9b64:	ite	ne
    9b66:	movne	r3, #0
    9b68:	moveq	r3, #4
    9b6a:	mov	r0, r4
    9b6c:	orrs	r3, r7
    9b6e:	ldrd	sl, fp, [sp, #280]	; 0x118
    9b72:	str	r3, [sp, #80]	; 0x50
    9b74:	bl	ca7e <init_convert_context@@Base>
    9b78:	ldr.w	r3, [pc, #2356]	; a4b0 <main@@Base+0x1280>
    9b7c:	mov	r0, r4
    9b7e:	ldr	r2, [sp, #32]
    9b80:	vmov	r1, s17
    9b84:	ldr	r5, [r2, r3]
    9b86:	ldr	r3, [r5, #16]
    9b88:	blx	r3
    9b8a:	cmp	r0, #0
    9b8c:	bne.n	9c34 <main@@Base+0xa04>
    9b8e:	ldr	r3, [r5, #32]
    9b90:	mov	r0, r4
    9b92:	str	r5, [r4, #52]	; 0x34
    9b94:	blx	r3
    9b96:	cbz	r0, 9ba2 <main@@Base+0x972>
    9b98:	ldr.w	r0, [pc, #2328]	; a4b4 <main@@Base+0x1284>
    9b9c:	add	r0, pc
    9b9e:	bl	1bca0 <__btrfs_warning@@Base>
    9ba2:	ldr	r3, [r4, #52]	; 0x34
    9ba4:	mov	r0, r4
    9ba6:	ldr	r3, [r3, #20]
    9ba8:	blx	r3
    9baa:	cmp	r0, #0
    9bac:	bne.n	9c3e <main@@Base+0xa0e>
    9bae:	add	r0, sp, #416	; 0x1a0
    9bb0:	add	r6, sp, #420	; 0x1a4
    9bb2:	bl	1a944 <first_cache_extent@@Base>
    9bb6:	movs	r4, #0
    9bb8:	movs	r5, #0
    9bba:	mov	r7, r0
    9bbc:	cmp	r7, #0
    9bbe:	bne.n	9c48 <main@@Base+0xa18>
    9bc0:	add	r4, sp, #420	; 0x1a4
    9bc2:	movs	r3, #1
    9bc4:	mov.w	r2, #33554432	; 0x2000000
    9bc8:	str	r3, [sp, #0]
    9bca:	mov	r0, r4
    9bcc:	movs	r3, #0
    9bce:	bl	b178 <_start@@Base+0x4f4>
    9bd2:	cmp	r0, #0
    9bd4:	blt.n	9c3e <main@@Base+0xa0e>
    9bd6:	mov	r0, r4
    9bd8:	add	r7, sp, #424	; 0x1a8
    9bda:	bl	1a944 <first_cache_extent@@Base>
    9bde:	movs	r4, #0
    9be0:	movs	r5, #0
    9be2:	movw	r6, #65535	; 0xffff
    9be6:	mov	r8, r0
    9be8:	cmp.w	r8, #0
    9bec:	bne.n	9cd4 <main@@Base+0xaa4>
    9bee:	ldrd	r8, r9, [sp, #400]	; 0x190
    9bf2:	cmp	r5, r9
    9bf4:	it	eq
    9bf6:	cmpeq	r4, r8
    9bf8:	bcc.w	9d3a <main@@Base+0xb0a>
    9bfc:	movs	r3, #0
    9bfe:	add	r0, sp, #424	; 0x1a8
    9c00:	str	r3, [sp, #0]
    9c02:	mov.w	r2, #33554432	; 0x2000000
    9c06:	movs	r3, #0
    9c08:	add	r5, sp, #360	; 0x168
    9c0a:	bl	b178 <_start@@Base+0x4f4>
    9c0e:	cbnz	r0, 9c3e <main@@Base+0xa0e>
    9c10:	ldr	r4, [r5, #0]
    9c12:	ldrd	r2, r3, [r5, #16]
    9c16:	cmp.w	r4, #4096	; 0x1000
    9c1a:	umull	r8, r9, r2, r4
    9c1e:	mla	r9, r4, r3, r9
    9c22:	bcs.w	9d6a <main@@Base+0xb3a>
    9c26:	ldr.w	r0, [pc, #2192]	; a4b8 <main@@Base+0x1288>
    9c2a:	mov	r1, r4
    9c2c:	add	r0, pc
    9c2e:	bl	1bd1c <__btrfs_error@@Base>
    9c32:	b.n	9c3e <main@@Base+0xa0e>
    9c34:	ldr.w	r0, [pc, #2180]	; a4bc <main@@Base+0x128c>
    9c38:	add	r0, pc
    9c3a:	bl	1bd1c <__btrfs_error@@Base>
    9c3e:	mov.w	r3, #4294967295	; 0xffffffff
    9c42:	vmov	s16, r3
    9c46:	b.n	a176 <main@@Base+0xf46>
    9c48:	ldrd	r1, r0, [r7, #32]
    9c4c:	ldrd	r2, r3, [r7, #24]
    9c50:	adds	r1, r2, r1
    9c52:	str	r1, [sp, #136]	; 0x88
    9c54:	adc.w	r1, r3, r0
    9c58:	str	r1, [sp, #140]	; 0x8c
    9c5a:	ldrd	r0, r1, [sp, #136]	; 0x88
    9c5e:	cmp	r1, r5
    9c60:	it	eq
    9c62:	cmpeq	r0, r4
    9c64:	bcc.n	9cca <main@@Base+0xa9a>
    9c66:	adds.w	r1, r4, #33554432	; 0x2000000
    9c6a:	str	r1, [sp, #224]	; 0xe0
    9c6c:	adc.w	r1, r5, #0
    9c70:	str	r1, [sp, #228]	; 0xe4
    9c72:	ldrd	r0, r1, [sp, #224]	; 0xe0
    9c76:	cmp	r1, r3
    9c78:	it	eq
    9c7a:	cmpeq	r0, r2
    9c7c:	mov	r0, r6
    9c7e:	it	cc
    9c80:	movcc	r5, r3
    9c82:	ldr	r3, [sp, #136]	; 0x88
    9c84:	it	cc
    9c86:	movcc	r4, r2
    9c88:	subs	r3, r3, r4
    9c8a:	str	r3, [sp, #64]	; 0x40
    9c8c:	ldr	r3, [sp, #140]	; 0x8c
    9c8e:	sbc.w	r3, r3, r5
    9c92:	str	r3, [sp, #68]	; 0x44
    9c94:	ldrd	r2, r3, [sp, #64]	; 0x40
    9c98:	cmp	r3, #0
    9c9a:	it	eq
    9c9c:	cmpeq.w	r2, #33554432	; 0x2000000
    9ca0:	ittt	cc
    9ca2:	movcc.w	r2, #33554432	; 0x2000000
    9ca6:	movcc	r3, #0
    9ca8:	strdcc	r2, r3, [sp, #64]	; 0x40
    9cac:	ldrd	r2, r3, [sp, #64]	; 0x40
    9cb0:	strd	r2, r3, [sp]
    9cb4:	mov	r2, r4
    9cb6:	mov	r3, r5
    9cb8:	bl	1a98c <add_merge_cache_extent@@Base>
    9cbc:	cmp	r0, #0
    9cbe:	blt.n	9c3e <main@@Base+0xa0e>
    9cc0:	ldr	r3, [sp, #64]	; 0x40
    9cc2:	adds	r4, r4, r3
    9cc4:	ldr	r3, [sp, #68]	; 0x44
    9cc6:	adc.w	r5, r3, r5
    9cca:	mov	r0, r7
    9ccc:	bl	1a950 <next_cache_extent@@Base>
    9cd0:	mov	r7, r0
    9cd2:	b.n	9bbc <main@@Base+0x98c>
    9cd4:	ldrd	r2, r3, [r8, #24]
    9cd8:	cmp	r3, r5
    9cda:	it	eq
    9cdc:	cmpeq	r2, r4
    9cde:	strd	r2, r3, [sp, #64]	; 0x40
    9ce2:	bcc.n	9cfe <main@@Base+0xace>
    9ce4:	cmp	r5, r3
    9ce6:	it	eq
    9ce8:	cmpeq	r4, r2
    9cea:	bcc.n	9d08 <main@@Base+0xad8>
    9cec:	ldr.w	r3, [r8, #24]
    9cf0:	ldrd	r2, r1, [r8, #32]
    9cf4:	adds	r4, r3, r2
    9cf6:	ldr.w	r3, [r8, #28]
    9cfa:	adc.w	r5, r3, r1
    9cfe:	mov	r0, r8
    9d00:	bl	1a950 <next_cache_extent@@Base>
    9d04:	mov	r8, r0
    9d06:	b.n	9be8 <main@@Base+0x9b8>
    9d08:	ldr	r1, [sp, #64]	; 0x40
    9d0a:	adds.w	r2, r4, #4294967295	; 0xffffffff
    9d0e:	adc.w	r3, r5, #4294967295	; 0xffffffff
    9d12:	orrs	r2, r6
    9d14:	adds.w	r0, r1, #4294967295	; 0xffffffff
    9d18:	ldr	r1, [sp, #68]	; 0x44
    9d1a:	adc.w	r1, r1, #4294967295	; 0xffffffff
    9d1e:	subs	r0, r0, r2
    9d20:	sbc.w	r1, r1, r3
    9d24:	adds	r2, #1
    9d26:	adc.w	r3, r3, #0
    9d2a:	strd	r0, r1, [sp]
    9d2e:	mov	r0, r7
    9d30:	bl	1a98c <add_merge_cache_extent@@Base>
    9d34:	cmp	r0, #0
    9d36:	bge.n	9cec <main@@Base+0xabc>
    9d38:	b.n	9c3e <main@@Base+0xa0e>
    9d3a:	adds.w	r7, r4, #4294967295	; 0xffffffff
    9d3e:	adc.w	r6, r5, #4294967295	; 0xffffffff
    9d42:	subs.w	r0, r8, r4
    9d46:	mvn.w	r2, r7, lsr #16
    9d4a:	sbc.w	r1, r9, r5
    9d4e:	mvn.w	r2, r2, lsl #16
    9d52:	adds	r2, #1
    9d54:	adc.w	r3, r6, #0
    9d58:	strd	r0, r1, [sp]
    9d5c:	add	r0, sp, #424	; 0x1a8
    9d5e:	bl	1a98c <add_merge_cache_extent@@Base>
    9d62:	cmp	r0, #0
    9d64:	bge.w	9bfc <main@@Base+0x9cc>
    9d68:	b.n	9c3e <main@@Base+0xa0e>
    9d6a:	ldr	r0, [sp, #112]	; 0x70
    9d6c:	mov	r2, sl
    9d6e:	mov	r3, fp
    9d70:	mov	r1, r4
    9d72:	bl	16964 <btrfs_check_nodesize@@Base>
    9d76:	cmp	r0, #0
    9d78:	bne.w	9c3e <main@@Base+0xa0e>
    9d7c:	vmov	r0, s17
    9d80:	movs	r1, #2
    9d82:	blx	8e14 <open64@plt>
    9d86:	subs	r3, r0, #0
    9d88:	vmov	s16, r3
    9d8c:	bge.n	9d9e <main@@Base+0xb6e>
    9d8e:	vmov	r1, s17
    9d92:	ldr.w	r0, [pc, #1836]	; a4c0 <main@@Base+0x1290>
    9d96:	add	r0, pc
    9d98:	bl	1bd1c <__btrfs_error@@Base>
    9d9c:	b.n	a176 <main@@Base+0xf46>
    9d9e:	add	r0, sp, #884	; 0x374
    9da0:	mov	r2, sl
    9da2:	mov	r3, fp
    9da4:	str	r0, [sp, #64]	; 0x40
    9da6:	bl	165f8 <btrfs_parse_features_to_string@@Base>
    9daa:	cmp.w	fp, #0
    9dae:	it	eq
    9db0:	cmpeq.w	sl, #320	; 0x140
    9db4:	ldr	r0, [sp, #64]	; 0x40
    9db6:	bne.n	9dc4 <main@@Base+0xb94>
    9db8:	ldr.w	r1, [pc, #1800]	; a4c4 <main@@Base+0x1294>
    9dbc:	movs	r2, #64	; 0x40
    9dbe:	add	r1, pc
    9dc0:	blx	8f64 <__strcat_chk@plt>
    9dc4:	ldr.w	r0, [pc, #1792]	; a4c8 <main@@Base+0x1298>
    9dc8:	add	r6, sp, #664	; 0x298
    9dca:	add	r0, pc
    9dcc:	blx	8e24 <puts@plt+0x4>
    9dd0:	ldr.w	r1, [pc, #1784]	; a4cc <main@@Base+0x129c>
    9dd4:	mov	r2, r4
    9dd6:	movs	r0, #1
    9dd8:	add	r1, pc
    9dda:	blx	900c <__printf_chk@plt+0x4>
    9dde:	ldr.w	r1, [pc, #1776]	; a4d0 <main@@Base+0x12a0>
    9de2:	ldr	r2, [sp, #112]	; 0x70
    9de4:	movs	r0, #1
    9de6:	add	r1, pc
    9de8:	blx	900c <__printf_chk@plt+0x4>
    9dec:	ldr.w	r1, [pc, #1764]	; a4d4 <main@@Base+0x12a4>
    9df0:	add	r2, sp, #884	; 0x374
    9df2:	movs	r0, #1
    9df4:	add	r1, pc
    9df6:	blx	900c <__printf_chk@plt+0x4>
    9dfa:	ldr	r0, [sp, #192]	; 0xc0
    9dfc:	bl	1c6c4 <btrfs_super_csum_name@@Base>
    9e00:	ldr.w	r1, [pc, #1748]	; a4d8 <main@@Base+0x12a8>
    9e04:	add	r1, pc
    9e06:	mov	r2, r0
    9e08:	movs	r0, #1
    9e0a:	blx	900c <__printf_chk@plt+0x4>
    9e0e:	movs	r2, #156	; 0x9c
    9e10:	movs	r1, #0
    9e12:	add	r0, sp, #700	; 0x2bc
    9e14:	blx	8f98 <memset@plt+0x4>
    9e18:	ldr	r3, [sp, #192]	; 0xc0
    9e1a:	add	r2, sp, #360	; 0x168
    9e1c:	vmov	r0, s16
    9e20:	mov	r1, r6
    9e22:	str	r4, [r6, #12]
    9e24:	str	r3, [r6, #32]
    9e26:	ldr	r3, [r2, #48]	; 0x30
    9e28:	strd	r8, r9, [r6, #24]
    9e2c:	strd	sl, fp, [r6, #16]
    9e30:	str	r3, [r6, #0]
    9e32:	ldr	r3, [sp, #112]	; 0x70
    9e34:	strd	r3, r4, [r6, #4]
    9e38:	bl	c2f6 <make_convert_btrfs@@Base>
    9e3c:	mov	r4, r0
    9e3e:	cbz	r0, 9e54 <main@@Base+0xc24>
    9e40:	blx	8f58 <__errno_location@plt>
    9e44:	negs	r4, r4
    9e46:	str	r4, [r0, #0]
    9e48:	ldr.w	r0, [pc, #1680]	; a4dc <main@@Base+0x12ac>
    9e4c:	add	r0, pc
    9e4e:	bl	1bd1c <__btrfs_error@@Base>
    9e52:	b.n	a176 <main@@Base+0xf46>
    9e54:	movw	r3, #4097	; 0x1001
    9e58:	vmov	r1, s17
    9e5c:	str	r3, [sp, #0]
    9e5e:	vmov	r0, s16
    9e62:	ldrd	r2, r3, [r6, #184]	; 0xb8
    9e66:	bl	22bdc <open_ctree_fd@@Base>
    9e6a:	str	r0, [sp, #192]	; 0xc0
    9e6c:	cbnz	r0, 9e76 <main@@Base+0xc46>
    9e6e:	ldr.w	r0, [pc, #1648]	; a4e0 <main@@Base+0x12b0>
    9e72:	add	r0, pc
    9e74:	b.n	9e4e <main@@Base+0xc1e>
    9e76:	ldr	r3, [sp, #192]	; 0xc0
    9e78:	movs	r1, #1
    9e7a:	ldr.w	r5, [r3, #464]	; 0x1d0
    9e7e:	ldrb.w	r3, [r5, #365]	; 0x16d
    9e82:	bic.w	r3, r3, #3
    9e86:	orr.w	r3, r3, #3
    9e8a:	strb.w	r3, [r5, #365]	; 0x16d
    9e8e:	bl	2f81c <btrfs_start_transaction@@Base>
    9e92:	cmn.w	r0, #4096	; 0x1000
    9e96:	mov	r8, r0
    9e98:	bls.n	9f22 <main@@Base+0xcf2>
    9e9a:	ldr.w	r0, [pc, #1608]	; a4e4 <main@@Base+0x12b4>
    9e9e:	mov	r4, r8
    9ea0:	add	r0, pc
    9ea2:	bl	1bd1c <__btrfs_error@@Base>
    9ea6:	cmp	r4, #0
    9ea8:	bne.w	a074 <main@@Base+0xe44>
    9eac:	ldr.w	r1, [pc, #1592]	; a4e8 <main@@Base+0x12b8>
    9eb0:	add	r5, sp, #360	; 0x168
    9eb2:	ldr	r2, [sp, #412]	; 0x19c
    9eb4:	movs	r0, #1
    9eb6:	add	r1, pc
    9eb8:	blx	900c <__printf_chk@plt+0x4>
    9ebc:	ldr	r3, [r5, #52]	; 0x34
    9ebe:	movs	r2, #1
    9ec0:	add	r0, sp, #860	; 0x35c
    9ec2:	str	r3, [sp, #4]
    9ec4:	ldr.w	r3, [pc, #1572]	; a4ec <main@@Base+0x12bc>
    9ec8:	add	r3, pc
    9eca:	str	r3, [sp, #0]
    9ecc:	movs	r3, #24
    9ece:	mov	r1, r3
    9ed0:	blx	9208 <__snprintf_chk@plt>
    9ed4:	add	r1, sp, #296	; 0x128
    9ed6:	mov.w	r2, #256	; 0x100
    9eda:	movs	r3, #0
    9edc:	strd	r2, r3, [sp, #296]	; 0x128
    9ee0:	movs	r3, #132	; 0x84
    9ee2:	strb	r3, [r1, #8]
    9ee4:	mov.w	r2, #4294967295	; 0xffffffff
    9ee8:	ldr	r3, [sp, #192]	; 0xc0
    9eea:	strb.w	r2, [sp, #305]	; 0x131
    9eee:	strb.w	r2, [sp, #306]	; 0x132
    9ef2:	ldr.w	r0, [r3, #464]	; 0x1d0
    9ef6:	strb.w	r2, [sp, #307]	; 0x133
    9efa:	strb.w	r2, [sp, #308]	; 0x134
    9efe:	strb.w	r2, [sp, #309]	; 0x135
    9f02:	strb.w	r2, [sp, #310]	; 0x136
    9f06:	strb.w	r2, [sp, #311]	; 0x137
    9f0a:	strb.w	r2, [sp, #312]	; 0x138
    9f0e:	bl	222a6 <btrfs_read_fs_root@@Base>
    9f12:	mov	r8, r0
    9f14:	cmp	r0, #0
    9f16:	bne.w	a14c <main@@Base+0xf1c>
    9f1a:	ldr.w	r0, [pc, #1492]	; a4f0 <main@@Base+0x12c0>
    9f1e:	add	r0, pc
    9f20:	b.n	9e4e <main@@Base+0xc1e>
    9f22:	bl	27cf4 <btrfs_fix_block_accounting@@Base>
    9f26:	mov	r4, r0
    9f28:	cmp	r0, #0
    9f2a:	bne.w	a074 <main@@Base+0xe44>
    9f2e:	movs	r2, #10
    9f30:	movs	r3, #0
    9f32:	ldrd	r0, r1, [r6, #24]
    9f36:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
    9f3a:	mov	r3, r1
    9f3c:	movs	r1, #0
    9f3e:	cmp	r1, r3
    9f40:	mov	r2, r0
    9f42:	mov.w	r0, #1073741824	; 0x40000000
    9f46:	it	eq
    9f48:	cmpeq	r0, r2
    9f4a:	it	cc
    9f4c:	movcc	r3, r1
    9f4e:	ldr	r1, [r5, #24]
    9f50:	it	cc
    9f52:	movcc	r2, r0
    9f54:	add	r0, sp, #420	; 0x1a4
    9f56:	mov	fp, r3
    9f58:	ldr.w	r1, [r1, #464]	; 0x1d0
    9f5c:	ldr.w	r1, [r1, #388]	; 0x184
    9f60:	negs	r1, r1
    9f62:	and.w	sl, r1, r2
    9f66:	bl	1a944 <first_cache_extent@@Base>
    9f6a:	mov	r9, r0
    9f6c:	cmp	r0, #0
    9f6e:	bne.w	a07e <main@@Base+0xe4e>
    9f72:	cmp	r4, #0
    9f74:	bne.n	a074 <main@@Base+0xe44>
    9f76:	ldr	r1, [r5, #28]
    9f78:	movs	r2, #6
    9f7a:	movs	r3, #0
    9f7c:	mov	r0, r8
    9f7e:	bl	3482c <btrfs_make_root_dir@@Base>
    9f82:	mov	r4, r0
    9f84:	cmp	r0, #0
    9f86:	bne.n	a074 <main@@Base+0xe44>
    9f88:	ldr	r3, [sp, #192]	; 0xc0
    9f8a:	add	r2, sp, #336	; 0x150
    9f8c:	ldr	r1, [sp, #192]	; 0xc0
    9f8e:	addw	r3, r3, #447	; 0x1bf
    9f92:	addw	r6, r1, #463	; 0x1cf
    9f96:	ldr	r0, [r3, #0]
    9f98:	adds	r3, #8
    9f9a:	ldr.w	r1, [r3, #-4]
    9f9e:	cmp	r3, r6
    9fa0:	mov	r4, r2
    9fa2:	stmia	r4!, {r0, r1}
    9fa4:	mov	r2, r4
    9fa6:	bne.n	9f96 <main@@Base+0xd66>
    9fa8:	ldrb	r3, [r3, #0]
    9faa:	mov.w	r2, #4294967295	; 0xffffffff
    9fae:	movs	r6, #0
    9fb0:	movs	r7, #0
    9fb2:	mov	r0, r8
    9fb4:	strb	r3, [r4, #0]
    9fb6:	movs	r3, #2
    9fb8:	strb.w	r2, [sp, #345]	; 0x159
    9fbc:	strb.w	r2, [sp, #346]	; 0x15a
    9fc0:	strb.w	r2, [sp, #347]	; 0x15b
    9fc4:	strb.w	r2, [sp, #348]	; 0x15c
    9fc8:	strb.w	r2, [sp, #349]	; 0x15d
    9fcc:	strb.w	r2, [sp, #350]	; 0x15e
    9fd0:	strb.w	r2, [sp, #351]	; 0x15f
    9fd4:	strb.w	r2, [sp, #352]	; 0x160
    9fd8:	str	r3, [sp, #12]
    9fda:	add	r3, sp, #336	; 0x150
    9fdc:	strd	r6, r7, [sp, #16]
    9fe0:	str	r3, [sp, #8]
    9fe2:	ldr.w	r3, [r5, #308]	; 0x134
    9fe6:	ldr.w	r2, [pc, #1292]	; a4f4 <main@@Base+0x12c4>
    9fea:	ldr.w	r1, [r3, #128]	; 0x80
    9fee:	add	r2, pc
    9ff0:	ldr.w	r3, [r3, #132]	; 0x84
    9ff4:	str	r2, [sp, #40]	; 0x28
    9ff6:	strd	r1, r3, [sp]
    9ffa:	movs	r3, #7
    9ffc:	ldr	r1, [r5, #28]
    9ffe:	bl	e4dc <btrfs_insert_dir_item@@Base>
    a002:	mov	r4, r0
    a004:	cbnz	r0, a074 <main@@Base+0xe44>
    a006:	strd	r6, r7, [sp, #16]
    a00a:	ldr.w	r3, [r5, #308]	; 0x134
    a00e:	ldr	r2, [sp, #40]	; 0x28
    a010:	ldr.w	r1, [r3, #128]	; 0x80
    a014:	ldr.w	r3, [r3, #132]	; 0x84
    a018:	strd	r1, r3, [sp, #8]
    a01c:	movs	r3, #7
    a01e:	ldrd	r0, r1, [sp, #336]	; 0x150
    a022:	strd	r0, r1, [sp]
    a026:	mov	r0, r8
    a028:	ldr	r1, [r5, #28]
    a02a:	bl	32514 <btrfs_insert_inode_ref@@Base>
    a02e:	mov	r4, r0
    a030:	cbnz	r0, a074 <main@@Base+0xe44>
    a032:	ldr	r3, [r5, #20]
    a034:	movs	r2, #1
    a036:	ldr	r1, [sp, #192]	; 0xc0
    a038:	strb.w	r0, [r3, #176]	; 0xb0
    a03c:	strb.w	r2, [r3, #177]	; 0xb1
    a040:	mov.w	r2, #256	; 0x100
    a044:	strb.w	r0, [r3, #178]	; 0xb2
    a048:	strb.w	r0, [r3, #179]	; 0xb3
    a04c:	strb.w	r0, [r3, #180]	; 0xb4
    a050:	strb.w	r0, [r3, #181]	; 0xb5
    a054:	strb.w	r0, [r3, #182]	; 0xb6
    a058:	strb.w	r0, [r3, #183]	; 0xb7
    a05c:	movs	r3, #0
    a05e:	mov	r0, r8
    a060:	bl	af30 <_start@@Base+0x2ac>
    a064:	subs	r4, r0, #0
    a066:	bge.n	a118 <main@@Base+0xee8>
    a068:	ldr.w	r0, [pc, #1164]	; a4f8 <main@@Base+0x12c8>
    a06c:	mov	r1, r4
    a06e:	add	r0, pc
    a070:	bl	1bd1c <__btrfs_error@@Base>
    a074:	ldr.w	r0, [pc, #1156]	; a4fc <main@@Base+0x12cc>
    a078:	mov	r1, r4
    a07a:	add	r0, pc
    a07c:	b.n	9d98 <main@@Base+0xb68>
    a07e:	add	r3, sp, #336	; 0x150
    a080:	ldrd	r6, r7, [r9, #24]
    a084:	vmov	s18, r3
    a088:	ldrd	r2, r1, [r9, #32]
    a08c:	ldrd	r3, r0, [r9, #24]
    a090:	adds	r3, r3, r2
    a092:	str	r3, [sp, #144]	; 0x90
    a094:	adc.w	r3, r0, r1
    a098:	str	r3, [sp, #148]	; 0x94
    a09a:	ldrd	r2, r3, [sp, #144]	; 0x90
    a09e:	cmp	r7, r3
    a0a0:	it	eq
    a0a2:	cmpeq	r6, r2
    a0a4:	bcc.n	a0ae <main@@Base+0xe7e>
    a0a6:	mov	r0, r9
    a0a8:	bl	1a950 <next_cache_extent@@Base>
    a0ac:	b.n	9f6a <main@@Base+0xd3a>
    a0ae:	ldr	r3, [sp, #144]	; 0x90
    a0b0:	mov	r1, r5
    a0b2:	vmov	r2, s18
    a0b6:	mov	r0, r8
    a0b8:	subs	r3, r3, r6
    a0ba:	str	r3, [sp, #40]	; 0x28
    a0bc:	ldr	r3, [sp, #148]	; 0x94
    a0be:	strd	r6, r7, [sp, #336]	; 0x150
    a0c2:	sbc.w	r3, r3, r7
    a0c6:	str	r3, [sp, #44]	; 0x2c
    a0c8:	ldrd	r3, r4, [sp, #40]	; 0x28
    a0cc:	cmp	fp, r4
    a0ce:	it	eq
    a0d0:	cmpeq	sl, r3
    a0d2:	it	cc
    a0d4:	strdcc	sl, fp, [sp, #40]	; 0x28
    a0d8:	ldrd	r3, r4, [sp, #40]	; 0x28
    a0dc:	strd	r3, r4, [sp]
    a0e0:	bl	2dc24 <btrfs_alloc_data_chunk@@Base>
    a0e4:	subs	r4, r0, #0
    a0e6:	blt.n	a0a6 <main@@Base+0xe76>
    a0e8:	ldrd	r3, r4, [sp, #40]	; 0x28
    a0ec:	movs	r2, #0
    a0ee:	mov	r1, r5
    a0f0:	mov	r0, r8
    a0f2:	strd	r6, r7, [sp, #8]
    a0f6:	strd	r3, r4, [sp, #16]
    a0fa:	movs	r3, #1
    a0fc:	movs	r4, #0
    a0fe:	strd	r3, r4, [sp]
    a102:	movs	r3, #0
    a104:	bl	26758 <btrfs_make_block_group@@Base>
    a108:	subs	r4, r0, #0
    a10a:	blt.n	a0a6 <main@@Base+0xe76>
    a10c:	ldr	r3, [sp, #40]	; 0x28
    a10e:	adds	r6, r6, r3
    a110:	ldr	r3, [sp, #44]	; 0x2c
    a112:	adc.w	r7, r3, r7
    a116:	b.n	a088 <main@@Base+0xe58>
    a118:	ldr	r1, [sp, #192]	; 0xc0
    a11a:	mvn.w	r2, #8
    a11e:	mov.w	r3, #4294967295	; 0xffffffff
    a122:	mov	r0, r8
    a124:	bl	af30 <_start@@Base+0x2ac>
    a128:	subs	r4, r0, #0
    a12a:	bge.n	a134 <main@@Base+0xf04>
    a12c:	ldr	r0, [pc, #976]	; (a500 <main@@Base+0x12d0>)
    a12e:	mov	r1, r4
    a130:	add	r0, pc
    a132:	b.n	a070 <main@@Base+0xe40>
    a134:	ldr	r1, [sp, #192]	; 0xc0
    a136:	mov	r0, r8
    a138:	bl	2fa9c <btrfs_commit_transaction@@Base>
    a13c:	ldrb.w	r3, [r5, #365]	; 0x16d
    a140:	bic.w	r3, r3, #3
    a144:	strb.w	r3, [r5, #365]	; 0x16d
    a148:	mov	r4, r0
    a14a:	b.n	9ea6 <main@@Base+0xc76>
    a14c:	ldrd	r2, r3, [sp, #688]	; 0x2b0
    a150:	movs	r1, #1
    a152:	strd	r2, r3, [sp, #120]	; 0x78
    a156:	bl	2f81c <btrfs_start_transaction@@Base>
    a15a:	cmn.w	r0, #4096	; 0x1000
    a15e:	mov	r9, r0
    a160:	bls.n	a198 <main@@Base+0xf68>
    a162:	mov	r5, r0
    a164:	cmp	r5, #0
    a166:	beq.w	a982 <main@@Base+0x1752>
    a16a:	ldr	r0, [pc, #920]	; (a504 <main@@Base+0x12d4>)
    a16c:	add	r1, sp, #860	; 0x35c
    a16e:	mov	r2, r5
    a170:	add	r0, pc
    a172:	bl	1bd1c <__btrfs_error@@Base>
    a176:	add	r0, sp, #360	; 0x168
    a178:	bl	caa6 <clean_convert_context@@Base>
    a17c:	vmov	r3, s16
    a180:	adds	r3, #1
    a182:	beq.n	a18c <main@@Base+0xf5c>
    a184:	vmov	r0, s16
    a188:	blx	91e4 <close@plt>
    a18c:	ldr	r0, [pc, #888]	; (a508 <main@@Base+0x12d8>)
    a18e:	add	r0, pc
    a190:	bl	1bca0 <__btrfs_warning@@Base>
    a194:	b.w	9476 <main@@Base+0x246>
    a198:	add.w	fp, sp, #276	; 0x114
    a19c:	add	r6, sp, #436	; 0x1b4
    a19e:	add.w	sl, sp, #288	; 0x120
    a1a2:	mov	r0, fp
    a1a4:	bl	1a734 <cache_tree_init@@Base>
    a1a8:	mov	r0, r6
    a1aa:	bl	1c6e8 <btrfs_init_path@@Base>
    a1ae:	mov.w	r2, #256	; 0x100
    a1b2:	movs	r3, #0
    a1b4:	mov	r1, r8
    a1b6:	mov	r0, r9
    a1b8:	str.w	sl, [sp]
    a1bc:	bl	e804 <btrfs_find_free_objectid@@Base>
    a1c0:	subs	r5, r0, #0
    a1c2:	bge.n	a1f2 <main@@Base+0xfc2>
    a1c4:	blx	8f58 <__errno_location@plt>
    a1c8:	negs	r3, r5
    a1ca:	str	r3, [r0, #0]
    a1cc:	ldr	r0, [pc, #828]	; (a50c <main@@Base+0x12dc>)
    a1ce:	ldr.w	r2, [r8, #447]	; 0x1bf
    a1d2:	ldr.w	r3, [r8, #451]	; 0x1c3
    a1d6:	add	r0, pc
    a1d8:	bl	1bd1c <__btrfs_error@@Base>
    a1dc:	add	r0, sp, #276	; 0x114
    a1de:	bl	1a97e <free_extent_cache_tree@@Base>
    a1e2:	add	r0, sp, #436	; 0x1b4
    a1e4:	bl	1c6f8 <btrfs_release_path@@Base>
    a1e8:	mov	r1, r8
    a1ea:	mov	r0, r9
    a1ec:	bl	2fa9c <btrfs_commit_transaction@@Base>
    a1f0:	b.n	a164 <main@@Base+0xf34>
    a1f2:	mov.w	r3, #33024	; 0x8100
    a1f6:	mov	r1, r8
    a1f8:	str	r3, [sp, #0]
    a1fa:	mov	r0, r9
    a1fc:	ldrd	r2, r3, [sp, #288]	; 0x120
    a200:	bl	146f4 <btrfs_new_inode@@Base>
    a204:	subs	r5, r0, #0
    a206:	bge.n	a21e <main@@Base+0xfee>
    a208:	blx	8f58 <__errno_location@plt>
    a20c:	negs	r3, r5
    a20e:	str	r3, [r0, #0]
    a210:	ldr	r0, [pc, #764]	; (a510 <main@@Base+0x12e0>)
    a212:	ldr.w	r2, [r8, #447]	; 0x1bf
    a216:	ldr.w	r3, [r8, #451]	; 0x1c3
    a21a:	add	r0, pc
    a21c:	b.n	a1d8 <main@@Base+0xfa8>
    a21e:	ldr	r3, [sp, #80]	; 0x50
    a220:	movs	r2, #5
    a222:	mov	r1, r2
    a224:	mov	r0, r9
    a226:	and.w	r3, r3, #1
    a22a:	str	r3, [sp, #64]	; 0x40
    a22c:	movs	r3, #0
    a22e:	mov	r2, r3
    a230:	ldr	r3, [sp, #64]	; 0x40
    a232:	subs	r1, r1, r3
    a234:	sbc.w	r2, r2, #0
    a238:	mov	r3, r2
    a23a:	mov	r2, r1
    a23c:	mov	r1, r8
    a23e:	strd	r2, r3, [sp]
    a242:	ldrd	r2, r3, [sp, #288]	; 0x120
    a246:	bl	14784 <btrfs_change_inode_flags@@Base>
    a24a:	subs	r5, r0, #0
    a24c:	bge.n	a270 <main@@Base+0x1040>
    a24e:	blx	8f58 <__errno_location@plt>
    a252:	negs	r3, r5
    a254:	str	r3, [r0, #0]
    a256:	ldr.w	r2, [r8, #447]	; 0x1bf
    a25a:	ldr.w	r3, [r8, #451]	; 0x1c3
    a25e:	ldr	r0, [pc, #692]	; (a514 <main@@Base+0x12e4>)
    a260:	strd	r2, r3, [sp]
    a264:	add	r0, pc
    a266:	ldrd	r2, r3, [sp, #288]	; 0x120
    a26a:	bl	1bd1c <__btrfs_error@@Base>
    a26e:	b.n	a1dc <main@@Base+0xfac>
    a270:	movs	r3, #5
    a272:	str	r3, [sp, #12]
    a274:	ldr	r3, [pc, #672]	; (a518 <main@@Base+0x12e8>)
    a276:	movs	r7, #1
    a278:	mov.w	r2, #256	; 0x100
    a27c:	mov	r1, r8
    a27e:	add	r3, pc
    a280:	mov	r0, r9
    a282:	str	r3, [sp, #40]	; 0x28
    a284:	str	r3, [sp, #8]
    a286:	movs	r3, #0
    a288:	str	r4, [sp, #28]
    a28a:	strd	r2, r3, [sp]
    a28e:	strd	r4, r7, [sp, #20]
    a292:	ldrd	r2, r3, [sp, #288]	; 0x120
    a296:	str	r7, [sp, #16]
    a298:	bl	13fd0 <btrfs_add_link@@Base>
    a29c:	subs	r5, r0, #0
    a29e:	bge.n	a2c6 <main@@Base+0x1096>
    a2a0:	blx	8f58 <__errno_location@plt>
    a2a4:	negs	r3, r5
    a2a6:	str	r3, [r0, #0]
    a2a8:	ldr.w	r2, [r8, #447]	; 0x1bf
    a2ac:	ldr.w	r3, [r8, #451]	; 0x1c3
    a2b0:	ldr	r0, [pc, #616]	; (a51c <main@@Base+0x12ec>)
    a2b2:	strd	r2, r3, [sp, #8]
    a2b6:	add	r0, pc
    a2b8:	ldr	r3, [sp, #40]	; 0x28
    a2ba:	str	r3, [sp, #0]
    a2bc:	ldrd	r2, r3, [sp, #288]	; 0x120
    a2c0:	bl	1bd1c <__btrfs_error@@Base>
    a2c4:	b.n	a1dc <main@@Base+0xfac>
    a2c6:	ldr.w	r3, [sl]
    a2ca:	add	r2, sp, #316	; 0x13c
    a2cc:	mov	r1, r8
    a2ce:	strb	r7, [r2, #8]
    a2d0:	mov	r0, r9
    a2d2:	strb.w	r4, [sp, #325]	; 0x145
    a2d6:	str	r3, [r2, #0]
    a2d8:	ldr	r3, [sp, #292]	; 0x124
    a2da:	strb.w	r4, [sp, #326]	; 0x146
    a2de:	strb.w	r4, [sp, #327]	; 0x147
    a2e2:	str	r3, [r2, #4]
    a2e4:	mov	r3, r6
    a2e6:	strd	r4, r7, [sp]
    a2ea:	strb.w	r4, [sp, #328]	; 0x148
    a2ee:	strb.w	r4, [sp, #329]	; 0x149
    a2f2:	strb.w	r4, [sp, #330]	; 0x14a
    a2f6:	strb.w	r4, [sp, #331]	; 0x14b
    a2fa:	strb.w	r4, [sp, #332]	; 0x14c
    a2fe:	bl	1eadc <btrfs_search_slot@@Base>
    a302:	cmp	r0, #0
    a304:	beq.n	a310 <main@@Base+0x10e0>
    a306:	ble.w	a97e <main@@Base+0x174e>
    a30a:	mvn.w	r5, #1
    a30e:	b.n	a1dc <main@@Base+0xfac>
    a310:	ldr	r0, [r6, #0]
    a312:	movs	r2, #25
    a314:	ldr	r3, [r6, #32]
    a316:	add	r1, sp, #504	; 0x1f8
    a318:	mov	r4, fp
    a31a:	mla	r3, r2, r3, r0
    a31e:	ldr.w	r2, [r3, #214]	; 0xd6
    a322:	movs	r3, #160	; 0xa0
    a324:	adds	r2, #101	; 0x65
    a326:	bl	1bbba <read_extent_buffer@@Base>
    a32a:	mov	r0, r6
    a32c:	bl	1c6f8 <btrfs_release_path@@Base>
    a330:	add	r0, sp, #416	; 0x1a0
    a332:	bl	1a944 <first_cache_extent@@Base>
    a336:	mov	r6, r0
    a338:	cmp	r6, #0
    a33a:	bne.n	a40a <main@@Base+0x11da>
    a33c:	movs	r2, #0
    a33e:	movs	r3, #0
    a340:	mov	r0, r4
    a342:	str	r6, [sp, #0]
    a344:	bl	b178 <_start@@Base+0x4f4>
    a348:	subs	r5, r0, #0
    a34a:	blt.w	a1dc <main@@Base+0xfac>
    a34e:	vmov	s18, r4
    a352:	mov.w	r6, #1048576	; 0x100000
    a356:	movs	r7, #0
    a358:	ldrd	r3, r4, [sp, #288]	; 0x120
    a35c:	strd	r3, r4, [sp, #112]	; 0x70
    a360:	ldrd	r3, r4, [sp, #120]	; 0x78
    a364:	cmp	r7, r4
    a366:	it	eq
    a368:	cmpeq	r6, r3
    a36a:	bcc.n	a42c <main@@Base+0x11fc>
    a36c:	ldrd	r3, r4, [sp, #688]	; 0x2b0
    a370:	ldr	r2, [sp, #32]
    a372:	strd	r3, r4, [sp, #120]	; 0x78
    a376:	ldr	r3, [pc, #424]	; (a520 <main@@Base+0x12f0>)
    a378:	ldr	r5, [r2, r3]
    a37a:	movs	r3, #0
    a37c:	str	r3, [sp, #96]	; 0x60
    a37e:	ldr	r3, [pc, #420]	; (a524 <main@@Base+0x12f4>)
    a380:	add	r3, pc
    a382:	adds	r3, #24
    a384:	vmov	s19, r3
    a388:	ldrd	r3, r4, [r5]
    a38c:	strd	r3, r4, [sp, #40]	; 0x28
    a390:	ldrd	r1, r2, [sp, #40]	; 0x28
    a394:	ldrd	r3, r4, [sp, #120]	; 0x78
    a398:	cmp	r4, r2
    a39a:	it	eq
    a39c:	cmpeq	r3, r1
    a39e:	bcs.w	a968 <main@@Base+0x1738>
    a3a2:	ldr	r3, [sp, #288]	; 0x120
    a3a4:	add	r4, sp, #436	; 0x1b4
    a3a6:	movs	r1, #0
    a3a8:	add	r2, sp, #316	; 0x13c
    a3aa:	movs	r0, #1
    a3ac:	strb.w	r1, [sp, #325]	; 0x145
    a3b0:	str	r3, [r2, #0]
    a3b2:	ldr	r3, [sp, #292]	; 0x124
    a3b4:	strb	r0, [r2, #8]
    a3b6:	strb.w	r1, [sp, #326]	; 0x146
    a3ba:	str	r3, [r2, #4]
    a3bc:	mov	r3, r4
    a3be:	strd	r1, r0, [sp]
    a3c2:	mov	r0, r9
    a3c4:	strb.w	r1, [sp, #327]	; 0x147
    a3c8:	strb.w	r1, [sp, #328]	; 0x148
    a3cc:	strb.w	r1, [sp, #329]	; 0x149
    a3d0:	strb.w	r1, [sp, #330]	; 0x14a
    a3d4:	strb.w	r1, [sp, #331]	; 0x14b
    a3d8:	strb.w	r1, [sp, #332]	; 0x14c
    a3dc:	mov	r1, r8
    a3de:	bl	1eadc <btrfs_search_slot@@Base>
    a3e2:	subs	r5, r0, #0
    a3e4:	bne.w	a978 <main@@Base+0x1748>
    a3e8:	ldrd	r2, r3, [sp, #688]	; 0x2b0
    a3ec:	add	r1, sp, #504	; 0x1f8
    a3ee:	ldr	r0, [r4, #0]
    a3f0:	strd	r2, r3, [r1, #16]
    a3f4:	movs	r2, #25
    a3f6:	ldr	r3, [r4, #32]
    a3f8:	mla	r3, r2, r3, r0
    a3fc:	ldr.w	r2, [r3, #214]	; 0xd6
    a400:	movs	r3, #160	; 0xa0
    a402:	adds	r2, #101	; 0x65
    a404:	bl	1bbd0 <write_extent_buffer@@Base>
    a408:	b.n	a1dc <main@@Base+0xfac>
    a40a:	ldrd	r2, r3, [r6, #32]
    a40e:	mov	r0, r4
    a410:	strd	r2, r3, [sp]
    a414:	ldrd	r2, r3, [r6, #24]
    a418:	bl	1a748 <add_cache_extent@@Base>
    a41c:	subs	r5, r0, #0
    a41e:	blt.w	a1dc <main@@Base+0xfac>
    a422:	mov	r0, r6
    a424:	bl	1a950 <next_cache_extent@@Base>
    a428:	mov	r6, r0
    a42a:	b.n	a338 <main@@Base+0x1108>
    a42c:	ldr	r3, [sp, #120]	; 0x78
    a42e:	subs	r3, r3, r6
    a430:	str	r3, [sp, #96]	; 0x60
    a432:	ldr	r3, [sp, #124]	; 0x7c
    a434:	sbc.w	r3, r3, r7
    a438:	str	r3, [sp, #100]	; 0x64
    a43a:	ldr.w	r3, [r8, #464]	; 0x1d0
    a43e:	ldr.w	r3, [r3, #388]	; 0x184
    a442:	negs	r3, r3
    a444:	and.w	r2, r6, r3
    a448:	strd	r2, r7, [sp, #232]	; 0xe8
    a44c:	ldrd	r1, r2, [sp, #232]	; 0xe8
    a450:	cmp	r7, r2
    a452:	it	eq
    a454:	cmpeq	r6, r1
    a456:	beq.n	a466 <main@@Base+0x1236>
    a458:	ldr	r0, [pc, #204]	; (a528 <main@@Base+0x12f8>)
    a45a:	mov	r2, r6
    a45c:	mov	r3, r7
    a45e:	add	r0, pc
    a460:	bl	1bd1c <__btrfs_error@@Base>
    a464:	b.n	a6ca <main@@Base+0x149a>
    a466:	ldr	r2, [sp, #96]	; 0x60
    a468:	ands	r3, r2
    a46a:	str	r3, [sp, #152]	; 0x98
    a46c:	ldr	r3, [sp, #100]	; 0x64
    a46e:	str	r3, [sp, #156]	; 0x9c
    a470:	ldrd	r1, r2, [sp, #152]	; 0x98
    a474:	ldrd	r3, r4, [sp, #96]	; 0x60
    a478:	cmp	r4, r2
    a47a:	it	eq
    a47c:	cmpeq	r3, r1
    a47e:	beq.n	a530 <main@@Base+0x1300>
    a480:	ldr	r0, [pc, #168]	; (a52c <main@@Base+0x12fc>)
    a482:	mov	r2, r3
    a484:	mov	r3, r4
    a486:	add	r0, pc
    a488:	b.n	a460 <main@@Base+0x1230>
    a48a:	nop
    a48c:	ldr	r6, [pc, #608]	; (a6f0 <main@@Base+0x14c0>)
    a48e:	movs	r3, r0
    a490:	ldr	r6, [pc, #152]	; (a52c <main@@Base+0x12fc>)
    a492:	movs	r3, r0
    a494:	ldr	r7, [pc, #136]	; (a520 <main@@Base+0x12f0>)
    a496:	movs	r3, r0
    a498:	ldr	r5, [pc, #780]	; (a7a8 <main@@Base+0x1578>)
    a49a:	movs	r3, r0
    a49c:	ldr	r5, [pc, #908]	; (a82c <main@@Base+0x15fc>)
    a49e:	movs	r3, r0
    a4a0:	ldr	r5, [pc, #580]	; (a6e8 <main@@Base+0x14b8>)
    a4a2:	movs	r3, r0
    a4a4:	strh	r1, [r3, r6]
    a4a6:	movs	r3, r0
    a4a8:	ldr	r4, [pc, #488]	; (a694 <main@@Base+0x1464>)
    a4aa:	movs	r3, r0
    a4ac:	ldr	r4, [pc, #876]	; (a81c <main@@Base+0x15ec>)
    a4ae:	movs	r3, r0
    a4b0:	lsls	r0, r4, #10
    a4b2:	movs	r0, r0
    a4b4:	ldr	r4, [pc, #760]	; (a7b0 <main@@Base+0x1580>)
    a4b6:	movs	r3, r0
    a4b8:	ldr	r4, [pc, #472]	; (a694 <main@@Base+0x1464>)
    a4ba:	movs	r3, r0
    a4bc:	ldr	r4, [pc, #8]	; (a4c8 <main@@Base+0x1298>)
    a4be:	movs	r3, r0
    a4c0:	ldr	r0, [pc, #180]	; (a578 <main@@Base+0x1348>)
    a4c2:	movs	r3, r0
    a4c4:	add	sl, r0
    a4c6:	movs	r3, r0
    a4c8:	ldr	r2, [pc, #1004]	; (a8b8 <main@@Base+0x1688>)
    a4ca:	movs	r3, r0
    a4cc:	ldr	r3, [pc, #24]	; (a4e8 <main@@Base+0x12b8>)
    a4ce:	movs	r3, r0
    a4d0:	ldr	r3, [pc, #32]	; (a4f4 <main@@Base+0x12c4>)
    a4d2:	movs	r3, r0
    a4d4:	ldr	r3, [pc, #40]	; (a500 <main@@Base+0x12d0>)
    a4d6:	movs	r3, r0
    a4d8:	ldr	r3, [pc, #40]	; (a504 <main@@Base+0x12d4>)
    a4da:	movs	r3, r0
    a4dc:	ldr	r2, [pc, #840]	; (a828 <main@@Base+0x15f8>)
    a4de:	movs	r3, r0
    a4e0:	bx	ip
    a4e2:	movs	r3, r0
    a4e4:	ldr	r2, [pc, #644]	; (a76c <main@@Base+0x153c>)
    a4e6:	movs	r3, r0
    a4e8:	ldr	r3, [pc, #96]	; (a54c <main@@Base+0x131c>)
    a4ea:	movs	r3, r0
    a4ec:	ldr	r3, [pc, #120]	; (a568 <main@@Base+0x1338>)
    a4ee:	movs	r3, r0
    a4f0:	ldr	r2, [pc, #836]	; (a838 <main@@Base+0x1608>)
    a4f2:	movs	r3, r0
    a4f4:	strb	r3, [r4, r1]
    a4f6:	movs	r3, r0
    a4f8:	ldr	r0, [pc, #956]	; (a8b8 <main@@Base+0x1688>)
    a4fa:	movs	r3, r0
    a4fc:	ldr	r1, [pc, #200]	; (a5c8 <main@@Base+0x1398>)
    a4fe:	movs	r3, r0
    a500:	ldr	r0, [pc, #348]	; (a660 <main@@Base+0x1430>)
    a502:	movs	r3, r0
    a504:	ldr	r2, [pc, #488]	; (a6f0 <main@@Base+0x14c0>)
    a506:	movs	r3, r0
    a508:	ldr	r3, [pc, #784]	; (a81c <main@@Base+0x15ec>)
    a50a:	movs	r3, r0
    a50c:	ldr	r0, [pc, #232]	; (a5f8 <main@@Base+0x13c8>)
    a50e:	movs	r3, r0
    a510:	ldr	r0, [pc, #148]	; (a5a8 <main@@Base+0x1378>)
    a512:	movs	r3, r0
    a514:	ldr	r0, [pc, #32]	; (a538 <main@@Base+0x1308>)
    a516:	movs	r3, r0
    a518:	add	r1, r0
    a51a:	movs	r3, r0
    a51c:			; <UNDEFINED> instruction: 0x47ed
    a51e:	movs	r3, r0
    a520:	lsls	r4, r1, #10
    a522:	movs	r0, r0
    a524:	ldr	r2, [pc, #788]	; (a83c <main@@Base+0x160c>)
    a526:	movs	r3, r0
    a528:	mov	r7, lr
    a52a:	movs	r3, r0
    a52c:	mov	lr, ip
    a52e:	movs	r3, r0
    a530:	ldrd	sl, fp, [sp, #152]	; 0x98
    a534:	movs	r4, #0
    a536:	mov.w	r3, #134217728	; 0x8000000
    a53a:	ldr	r2, [sp, #32]
    a53c:	cmp	r4, fp
    a53e:	mov.w	r5, #0
    a542:	it	eq
    a544:	cmpeq	r3, sl
    a546:	it	cc
    a548:	movcc	sl, r3
    a54a:	ldr.w	r3, [pc, #1760]	; ac2c <main@@Base+0x19fc>
    a54e:	it	cc
    a550:	movcc	fp, r4
    a552:	ldr	r4, [r2, r3]
    a554:	adds.w	r3, r6, sl
    a558:	str	r3, [sp, #264]	; 0x108
    a55a:	adc.w	r3, r7, fp
    a55e:	str	r3, [sp, #268]	; 0x10c
    a560:	ldrd	r2, r3, [r4]
    a564:	ldrd	r1, r0, [r4, #8]
    a568:	strd	r2, r3, [sp, #40]	; 0x28
    a56c:	ldr	r3, [sp, #40]	; 0x28
    a56e:	adds	r1, r3, r1
    a570:	ldr	r3, [sp, #44]	; 0x2c
    a572:	str	r1, [sp, #88]	; 0x58
    a574:	adc.w	r1, r3, r0
    a578:	ldrd	r2, r3, [sp, #40]	; 0x28
    a57c:	str	r1, [sp, #92]	; 0x5c
    a57e:	cmp	r7, r3
    a580:	it	eq
    a582:	cmpeq	r6, r2
    a584:	bcc.n	a5a6 <main@@Base+0x1376>
    a586:	ldrd	r2, r3, [sp, #88]	; 0x58
    a58a:	cmp	r7, r3
    a58c:	it	eq
    a58e:	cmpeq	r6, r2
    a590:	bcs.n	a64c <main@@Base+0x141c>
    a592:	ldr	r3, [sp, #88]	; 0x58
    a594:	subs.w	sl, r3, r6
    a598:	sbc.w	fp, r1, r7
    a59c:	adds.w	r6, r6, sl
    a5a0:	adc.w	r7, r7, fp
    a5a4:	b.n	a358 <main@@Base+0x1128>
    a5a6:	ldrd	r0, r1, [sp, #264]	; 0x108
    a5aa:	ldrd	r2, r3, [sp, #88]	; 0x58
    a5ae:	cmp	r1, r3
    a5b0:	it	eq
    a5b2:	cmpeq	r0, r2
    a5b4:	bcc.n	a64c <main@@Base+0x141c>
    a5b6:	ldr	r3, [sp, #40]	; 0x28
    a5b8:	subs	r1, r3, r6
    a5ba:	ldr	r3, [sp, #44]	; 0x2c
    a5bc:	str	r1, [sp, #160]	; 0xa0
    a5be:	sbc.w	r3, r3, r7
    a5c2:	str	r3, [sp, #164]	; 0xa4
    a5c4:	ldrd	r3, r4, [sp, #160]	; 0xa0
    a5c8:	cmp	r4, fp
    a5ca:	it	eq
    a5cc:	cmpeq	r3, sl
    a5ce:	bcs.n	a5d4 <main@@Base+0x13a4>
    a5d0:	mov	sl, r3
    a5d2:	mov	fp, r4
    a5d4:	vmov	r0, s18
    a5d8:	mov	r2, r6
    a5da:	mov	r3, r7
    a5dc:	bl	1a87c <search_cache_extent@@Base>
    a5e0:	cmp	r0, #0
    a5e2:	beq.w	a6fa <main@@Base+0x14ca>
    a5e6:	ldrd	r4, r5, [r0, #24]
    a5ea:	cmp	r7, r5
    a5ec:	it	eq
    a5ee:	cmpeq	r6, r4
    a5f0:	bcc.n	a656 <main@@Base+0x1426>
    a5f2:	ldrd	r1, r0, [r0, #32]
    a5f6:	adds	r2, r4, r1
    a5f8:	adc.w	r3, r0, r5
    a5fc:	subs	r2, r2, r6
    a5fe:	sbc.w	r3, r3, r7
    a602:	str	r2, [sp, #168]	; 0xa8
    a604:	str	r3, [sp, #172]	; 0xac
    a606:	ldrd	r3, r4, [sp, #168]	; 0xa8
    a60a:	cmp	r4, fp
    a60c:	it	eq
    a60e:	cmpeq	r3, sl
    a610:	itt	cc
    a612:	movcc	sl, r3
    a614:	movcc	fp, r4
    a616:	orrs.w	r3, r6, r7
    a61a:	bne.n	a67c <main@@Base+0x144c>
    a61c:	ldr	r4, [sp, #64]	; 0x40
    a61e:	mov	r2, r6
    a620:	mov	r3, r7
    a622:	ldr.w	r1, [r8, #464]	; 0x1d0
    a626:	ldr.w	r1, [r1, #388]	; 0x184
    a62a:	negs	r1, r1
    a62c:	and.w	r1, r1, sl
    a630:	strd	r1, fp, [sp, #248]	; 0xf8
    a634:	ldrd	r0, r1, [sp, #248]	; 0xf8
    a638:	cmp	fp, r1
    a63a:	it	eq
    a63c:	cmpeq	sl, r0
    a63e:	beq.n	a700 <main@@Base+0x14d0>
    a640:	ldr.w	r0, [pc, #1516]	; ac30 <main@@Base+0x1a00>
    a644:	mov	r2, sl
    a646:	mov	r3, fp
    a648:	add	r0, pc
    a64a:	b.n	a460 <main@@Base+0x1230>
    a64c:	adds	r5, #1
    a64e:	adds	r4, #16
    a650:	cmp	r5, #3
    a652:	bne.n	a560 <main@@Base+0x1330>
    a654:	b.n	a5d4 <main@@Base+0x13a4>
    a656:	subs	r3, r4, r6
    a658:	str	r3, [sp, #176]	; 0xb0
    a65a:	sbc.w	r3, r5, r7
    a65e:	str	r3, [sp, #180]	; 0xb4
    a660:	ldrd	r3, r4, [sp, #176]	; 0xb0
    a664:	cmp	r4, fp
    a666:	it	eq
    a668:	cmpeq	r3, sl
    a66a:	it	cc
    a66c:	movcc	fp, r4
    a66e:	mov.w	r4, #0
    a672:	it	cc
    a674:	movcc	sl, r3
    a676:	mov	r2, r4
    a678:	mov	r3, r2
    a67a:	b.n	a622 <main@@Base+0x13f2>
    a67c:	ldr.w	r0, [r8, #464]	; 0x1d0
    a680:	mov	r2, r6
    a682:	mov	r3, r7
    a684:	bl	23754 <btrfs_lookup_block_group@@Base>
    a688:	cbnz	r0, a69a <main@@Base+0x146a>
    a68a:	ldr.w	r0, [pc, #1448]	; ac34 <main@@Base+0x1a04>
    a68e:	mov	r2, r6
    a690:	mov	r3, r7
    a692:	add	r0, pc
    a694:	bl	1bd1c <__btrfs_error@@Base>
    a698:	b.n	a30a <main@@Base+0x10da>
    a69a:	ldrd	r3, r2, [r0, #96]	; 0x60
    a69e:	ldrd	r1, ip, [r0, #40]	; 0x28
    a6a2:	and.w	r5, r3, #1
    a6a6:	str	r5, [sp, #240]	; 0xf0
    a6a8:	movs	r5, #0
    a6aa:	str	r5, [sp, #244]	; 0xf4
    a6ac:	ldrd	r4, r5, [sp, #240]	; 0xf0
    a6b0:	orrs	r4, r5
    a6b2:	bne.n	a6d0 <main@@Base+0x14a0>
    a6b4:	ldr.w	r0, [pc, #1408]	; ac38 <main@@Base+0x1a08>
    a6b8:	strd	r3, r2, [sp, #8]
    a6bc:	mov	r2, r6
    a6be:	add	r0, pc
    a6c0:	mov	r3, r7
    a6c2:	strd	r1, ip, [sp]
    a6c6:	bl	1bd1c <__btrfs_error@@Base>
    a6ca:	mvn.w	r5, #21
    a6ce:	b.n	a1dc <main@@Base+0xfac>
    a6d0:	ldr.w	r3, [r0, #49]	; 0x31
    a6d4:	ldr.w	r2, [r0, #53]	; 0x35
    a6d8:	adds	r3, r3, r1
    a6da:	adc.w	r2, ip, r2
    a6de:	subs	r3, r3, r6
    a6e0:	str	r3, [sp, #184]	; 0xb8
    a6e2:	sbc.w	r3, r2, r7
    a6e6:	str	r3, [sp, #188]	; 0xbc
    a6e8:	ldrd	r3, r4, [sp, #184]	; 0xb8
    a6ec:	cmp	r4, fp
    a6ee:	it	eq
    a6f0:	cmpeq	r3, sl
    a6f2:	itt	cc
    a6f4:	movcc	sl, r3
    a6f6:	movcc	fp, r4
    a6f8:	b.n	a61c <main@@Base+0x13ec>
    a6fa:	mov	r4, r0
    a6fc:	movs	r2, #0
    a6fe:	b.n	a678 <main@@Base+0x1448>
    a700:	strd	r2, r3, [sp, #16]
    a704:	mov	r1, r8
    a706:	add	r3, sp, #504	; 0x1f8
    a708:	mov	r0, r9
    a70a:	str	r3, [sp, #0]
    a70c:	strd	sl, fp, [sp, #24]
    a710:	ldrd	r2, r3, [sp, #112]	; 0x70
    a714:	strd	r6, r7, [sp, #8]
    a718:	bl	27edc <btrfs_record_file_extent@@Base>
    a71c:	subs	r5, r0, #0
    a71e:	blt.w	a1dc <main@@Base+0xfac>
    a722:	cmp	r4, #0
    a724:	beq.w	a59c <main@@Base+0x136c>
    a728:	mov	r2, r6
    a72a:	mov	r3, r7
    a72c:	mov	r1, r8
    a72e:	mov	r0, r9
    a730:	strd	sl, fp, [sp]
    a734:	bl	b034 <_start@@Base+0x3b0>
    a738:	subs	r5, r0, #0
    a73a:	bge.w	a59c <main@@Base+0x136c>
    a73e:	blx	8f58 <__errno_location@plt>
    a742:	negs	r3, r5
    a744:	mov	r2, r6
    a746:	str	r3, [r0, #0]
    a748:	mov	r3, r7
    a74a:	ldr.w	r0, [pc, #1264]	; ac3c <main@@Base+0x1a0c>
    a74e:	strd	sl, fp, [sp]
    a752:	add	r0, pc
    a754:	b.n	a26a <main@@Base+0x103a>
    a756:	add	r0, sp, #416	; 0x1a0
    a758:	mov	r2, sl
    a75a:	mov	r3, fp
    a75c:	bl	1a87c <search_cache_extent@@Base>
    a760:	cmp	r0, #0
    a762:	beq.n	a84c <main@@Base+0x161c>
    a764:	ldrd	r3, r4, [r0, #24]
    a768:	mov	r6, sl
    a76a:	mov	r7, fp
    a76c:	cmp	fp, r4
    a76e:	it	eq
    a770:	cmpeq	sl, r3
    a772:	strd	r3, r4, [sp, #88]	; 0x58
    a776:	itt	cc
    a778:	movcc	r6, r3
    a77a:	movcc	r7, r4
    a77c:	ldrd	r3, r4, [sp, #48]	; 0x30
    a780:	cmp	r7, r4
    a782:	it	eq
    a784:	cmpeq	r6, r3
    a786:	bcs.n	a84c <main@@Base+0x161c>
    a788:	ldrd	r1, r0, [r0, #32]
    a78c:	ldr	r3, [sp, #88]	; 0x58
    a78e:	adds	r1, r3, r1
    a790:	ldr	r3, [sp, #92]	; 0x5c
    a792:	str	r1, [sp, #104]	; 0x68
    a794:	adc.w	r3, r0, r3
    a798:	str	r3, [sp, #108]	; 0x6c
    a79a:	ldrd	r1, r2, [sp, #104]	; 0x68
    a79e:	ldrd	r3, r4, [sp, #48]	; 0x30
    a7a2:	cmp	r4, r2
    a7a4:	it	eq
    a7a6:	cmpeq	r3, r1
    a7a8:	it	cc
    a7aa:	strdcc	r3, r4, [sp, #104]	; 0x68
    a7ae:	ldr	r3, [sp, #104]	; 0x68
    a7b0:	add	r4, sp, #336	; 0x150
    a7b2:	subs	r3, r3, r6
    a7b4:	str	r3, [sp, #72]	; 0x48
    a7b6:	ldr	r3, [sp, #108]	; 0x6c
    a7b8:	sbc.w	r3, r3, r7
    a7bc:	str	r3, [sp, #76]	; 0x4c
    a7be:	ldr.w	r3, [r8, #464]	; 0x1d0
    a7c2:	ldrd	r0, r1, [sp, #72]	; 0x48
    a7c6:	ldr.w	r2, [r3, #388]	; 0x184
    a7ca:	movs	r3, #0
    a7cc:	cmp	r1, r3
    a7ce:	vmov	r1, s19
    a7d2:	it	eq
    a7d4:	cmpeq	r0, r2
    a7d6:	vmov	r0, s18
    a7da:	mov.w	r2, #374	; 0x176
    a7de:	ite	cc
    a7e0:	movcc	r3, #1
    a7e2:	movcs	r3, #0
    a7e4:	bl	b0ee <_start@@Base+0x46a>
    a7e8:	movs	r3, #1
    a7ea:	mov.w	r2, #4294967295	; 0xffffffff
    a7ee:	str	r3, [sp, #28]
    a7f0:	mov	r1, r8
    a7f2:	mov.w	r3, #4294967295	; 0xffffffff
    a7f6:	mov	r0, r9
    a7f8:	strd	r2, r3, [sp, #16]
    a7fc:	str	r4, [sp, #24]
    a7fe:	movs	r2, #0
    a800:	movs	r3, #0
    a802:	strd	r2, r3, [sp, #8]
    a806:	strd	r2, r3, [sp]
    a80a:	ldrd	r2, r3, [sp, #72]	; 0x48
    a80e:	bl	269dc <btrfs_reserve_extent@@Base>
    a812:	cmp	r0, #0
    a814:	blt.n	a84c <main@@Base+0x161c>
    a816:	ldr	r3, [sp, #72]	; 0x48
    a818:	add.w	r0, r3, #96	; 0x60
    a81c:	blx	8e40 <malloc@plt+0x4>
    a820:	cbz	r0, a84c <main@@Base+0x161c>
    a822:	add.w	r1, r0, #96	; 0x60
    a826:	ldr	r2, [sp, #72]	; 0x48
    a828:	str	r0, [sp, #88]	; 0x58
    a82a:	strd	r6, r7, [sp]
    a82e:	vmov	r0, s16
    a832:	blx	8dcc <pread64@plt>
    a836:	ldrd	r2, r3, [sp, #72]	; 0x48
    a83a:	asrs	r1, r0, #31
    a83c:	cmp	r1, r3
    a83e:	ldr	r3, [sp, #88]	; 0x58
    a840:	it	eq
    a842:	cmpeq	r0, r2
    a844:	bcs.n	a87a <main@@Base+0x164a>
    a846:	mov	r0, r3
    a848:	blx	8b84 <free@plt+0x4>
    a84c:	ldr	r3, [sp, #48]	; 0x30
    a84e:	mov	r1, r8
    a850:	mov	r0, r9
    a852:	strd	sl, fp, [sp, #8]
    a856:	subs.w	r2, r3, sl
    a85a:	ldr	r3, [sp, #52]	; 0x34
    a85c:	sbc.w	r3, r3, fp
    a860:	strd	r2, r3, [sp, #24]
    a864:	movs	r2, #0
    a866:	movs	r3, #0
    a868:	strd	r2, r3, [sp, #16]
    a86c:	add	r3, sp, #504	; 0x1f8
    a86e:	str	r3, [sp, #0]
    a870:	ldrd	r2, r3, [sp, #112]	; 0x70
    a874:	bl	27edc <btrfs_record_file_extent@@Base>
    a878:	b.n	a952 <main@@Base+0x1722>
    a87a:	ldrd	r0, r1, [r4]
    a87e:	strd	r0, r1, [r3, #40]	; 0x28
    a882:	mov	r1, r3
    a884:	ldr.w	r2, [r4, #9]
    a888:	str	r3, [sp, #128]	; 0x80
    a88a:	str	r2, [r3, #76]	; 0x4c
    a88c:	ldr.w	r0, [r8, #464]	; 0x1d0
    a890:	bl	20d18 <write_and_map_eb@@Base>
    a894:	ldr	r3, [sp, #128]	; 0x80
    a896:	str	r0, [sp, #88]	; 0x58
    a898:	mov	r0, r3
    a89a:	blx	8b84 <free@plt+0x4>
    a89e:	ldr	r2, [sp, #88]	; 0x58
    a8a0:	cmp	r2, #0
    a8a2:	blt.n	a84c <main@@Base+0x161c>
    a8a4:	ldr.w	r2, [r4, #9]
    a8a8:	mov	r1, r8
    a8aa:	ldr.w	r3, [r4, #13]
    a8ae:	mov	r0, r9
    a8b0:	strd	r2, r3, [sp, #24]
    a8b4:	ldrd	r2, r3, [r4]
    a8b8:	strd	r6, r7, [sp, #8]
    a8bc:	strd	r2, r3, [sp, #16]
    a8c0:	add	r3, sp, #504	; 0x1f8
    a8c2:	str	r3, [sp, #0]
    a8c4:	ldrd	r2, r3, [sp, #112]	; 0x70
    a8c8:	bl	27edc <btrfs_record_file_extent@@Base>
    a8cc:	cmp	r0, #0
    a8ce:	blt.n	a84c <main@@Base+0x161c>
    a8d0:	ldr	r3, [sp, #64]	; 0x40
    a8d2:	cbz	r3, a8ec <main@@Base+0x16bc>
    a8d4:	ldr.w	r2, [r4, #9]
    a8d8:	mov	r1, r8
    a8da:	ldr.w	r3, [r4, #13]
    a8de:	mov	r0, r9
    a8e0:	strd	r2, r3, [sp]
    a8e4:	ldrd	r2, r3, [r4]
    a8e8:	bl	b034 <_start@@Base+0x3b0>
    a8ec:	subs.w	r2, r6, sl
    a8f0:	sbc.w	r3, r7, fp
    a8f4:	cmp	r7, fp
    a8f6:	it	eq
    a8f8:	cmpeq	r6, sl
    a8fa:	beq.n	a920 <main@@Base+0x16f0>
    a8fc:	strd	r2, r3, [sp, #24]
    a900:	mov	r1, r8
    a902:	movs	r2, #0
    a904:	movs	r3, #0
    a906:	mov	r0, r9
    a908:	strd	r2, r3, [sp, #16]
    a90c:	strd	sl, fp, [sp, #8]
    a910:	add	r3, sp, #504	; 0x1f8
    a912:	str	r3, [sp, #0]
    a914:	ldrd	r2, r3, [sp, #112]	; 0x70
    a918:	bl	27edc <btrfs_record_file_extent@@Base>
    a91c:	cmp	r0, #0
    a91e:	blt.n	a84c <main@@Base+0x161c>
    a920:	ldr.w	r3, [sp, #345]	; 0x159
    a924:	ldr.w	r2, [sp, #349]	; 0x15d
    a928:	adds.w	sl, r3, r6
    a92c:	adc.w	fp, r2, r7
    a930:	ldrd	r3, r2, [r5, #8]
    a934:	ldr	r1, [sp, #40]	; 0x28
    a936:	adds	r3, r1, r3
    a938:	str	r3, [sp, #48]	; 0x30
    a93a:	ldr	r3, [sp, #44]	; 0x2c
    a93c:	adcs	r3, r2
    a93e:	str	r3, [sp, #52]	; 0x34
    a940:	ldrd	r3, r4, [sp, #48]	; 0x30
    a944:	cmp	fp, r4
    a946:	it	eq
    a948:	cmpeq	sl, r3
    a94a:	bcc.w	a756 <main@@Base+0x1526>
    a94e:	bne.w	a84c <main@@Base+0x161c>
    a952:	cmp	r0, #0
    a954:	blt.w	a3a2 <main@@Base+0x1172>
    a958:	ldr	r3, [sp, #96]	; 0x60
    a95a:	adds	r5, #16
    a95c:	adds	r3, #1
    a95e:	str	r3, [sp, #96]	; 0x60
    a960:	cmp	r3, #3
    a962:	bne.w	a388 <main@@Base+0x1158>
    a966:	b.n	a3a2 <main@@Base+0x1172>
    a968:	ldr	r3, [pc, #724]	; (ac40 <main@@Base+0x1a10>)
    a96a:	movs	r0, #0
    a96c:	ldrd	sl, fp, [sp, #40]	; 0x28
    a970:	add	r3, pc
    a972:	vmov	s18, r3
    a976:	b.n	a930 <main@@Base+0x1700>
    a978:	bgt.w	a30a <main@@Base+0x10da>
    a97c:	b.n	a1dc <main@@Base+0xfac>
    a97e:	mov	r5, r0
    a980:	b.n	a1dc <main@@Base+0xfac>
    a982:	ldr	r0, [pc, #704]	; (ac44 <main@@Base+0x1a14>)
    a984:	add	r7, sp, #504	; 0x1f8
    a986:	add	r0, pc
    a988:	blx	8e24 <puts@plt+0x4>
    a98c:	mov	r1, r5
    a98e:	mov	r0, r7
    a990:	blx	8c00 <pthread_mutex_init@plt>
    a994:	mov	r1, r0
    a996:	cbz	r0, a9a0 <main@@Base+0x1770>
    a998:	ldr	r0, [pc, #684]	; (ac48 <main@@Base+0x1a18>)
    a99a:	add	r0, pc
    a99c:	b.w	9d98 <main@@Base+0xb68>
    a9a0:	add	r4, sp, #360	; 0x168
    a9a2:	movs	r3, #0
    a9a4:	ldrd	r2, r1, [r4, #24]
    a9a8:	ldrd	r0, r6, [r4, #32]
    a9ac:	subs	r2, r2, r0
    a9ae:	sbc.w	r1, r1, r6
    a9b2:	strd	r2, r1, [r7, #24]
    a9b6:	movs	r2, #0
    a9b8:	strd	r2, r3, [r7, #32]
    a9bc:	ldr	r3, [sp, #56]	; 0x38
    a9be:	cbz	r3, a9d8 <main@@Base+0x17a8>
    a9c0:	ldr	r1, [pc, #648]	; (ac4c <main@@Base+0x1a1c>)
    a9c2:	mov	r2, r7
    a9c4:	ldr	r0, [pc, #648]	; (ac50 <main@@Base+0x1a20>)
    a9c6:	add	r1, pc
    a9c8:	add	r0, pc
    a9ca:	bl	13c88 <task_init@@Base>
    a9ce:	mov	r2, r5
    a9d0:	mov	r1, r5
    a9d2:	str	r0, [r7, #40]	; 0x28
    a9d4:	bl	13ca2 <task_start@@Base>
    a9d8:	ldr	r3, [r4, #52]	; 0x34
    a9da:	mov	r0, r4
    a9dc:	ldr	r1, [sp, #192]	; 0xc0
    a9de:	ldr	r2, [sp, #80]	; 0x50
    a9e0:	ldr	r5, [r3, #24]
    a9e2:	mov	r3, r7
    a9e4:	blx	r5
    a9e6:	mov	r1, r0
    a9e8:	cbz	r0, a9f2 <main@@Base+0x17c2>
    a9ea:	ldr	r0, [pc, #616]	; (ac54 <main@@Base+0x1a24>)
    a9ec:	add	r0, pc
    a9ee:	b.w	9d98 <main@@Base+0xb68>
    a9f2:	ldr	r3, [sp, #56]	; 0x38
    a9f4:	cbz	r3, aa02 <main@@Base+0x17d2>
    a9f6:	ldr	r0, [r7, #40]	; 0x28
    a9f8:	bl	13ce0 <task_stop@@Base>
    a9fc:	ldr	r0, [r7, #40]	; 0x28
    a9fe:	bl	13d14 <task_deinit@@Base>
    aa02:	add	r1, sp, #860	; 0x35c
    aa04:	ldr	r0, [sp, #192]	; 0xc0
    aa06:	movs	r6, #1
    aa08:	mov.w	r2, #256	; 0x100
    aa0c:	movs	r3, #0
    aa0e:	str	r6, [sp, #0]
    aa10:	str	r1, [sp, #40]	; 0x28
    aa12:	bl	1497c <btrfs_mksubvol@@Base>
    aa16:	ldr	r1, [sp, #40]	; 0x28
    aa18:	cbnz	r0, aa22 <main@@Base+0x17f2>
    aa1a:	ldr	r0, [pc, #572]	; (ac58 <main@@Base+0x1a28>)
    aa1c:	add	r0, pc
    aa1e:	b.w	9d98 <main@@Base+0xb68>
    aa22:	ldr	r3, [sp, #192]	; 0xc0
    aa24:	mov.w	r2, #256	; 0x100
    aa28:	movs	r1, #0
    aa2a:	ldr.w	r3, [r3, #464]	; 0x1d0
    aa2e:	ldr.w	r0, [r3, #308]	; 0x134
    aa32:	addw	r0, r0, #299	; 0x12b
    aa36:	blx	8f98 <memset@plt+0x4>
    aa3a:	ldr	r3, [sp, #80]	; 0x50
    aa3c:	lsls	r2, r3, #28
    aa3e:	bpl.n	aa86 <main@@Base+0x1856>
    aa40:	ldr	r3, [sp, #192]	; 0xc0
    aa42:	movs	r2, #255	; 0xff
    aa44:	ldr	r1, [r4, #48]	; 0x30
    aa46:	ldr.w	r3, [r3, #464]	; 0x1d0
    aa4a:	ldr.w	r0, [r3, #308]	; 0x134
    aa4e:	addw	r0, r0, #299	; 0x12b
    aa52:	bl	34420 <__strncpy_null@@Base>
    aa56:	ldr	r3, [sp, #192]	; 0xc0
    aa58:	ldr	r1, [pc, #512]	; (ac5c <main@@Base+0x1a2c>)
    aa5a:	ldr.w	r3, [r3, #464]	; 0x1d0
    aa5e:	add	r1, pc
    aa60:	ldr.w	r2, [r3, #308]	; 0x134
    aa64:	addw	r2, r2, #299	; 0x12b
    aa68:	mov	r0, r6
    aa6a:	blx	900c <__printf_chk@plt+0x4>
    aa6e:	ldr	r3, [sp, #192]	; 0xc0
    aa70:	ldr.w	r0, [r3, #464]	; 0x1d0
    aa74:	bl	21c2c <close_ctree_fs_info@@Base>
    aa78:	mov	r6, r0
    aa7a:	cbz	r0, aaae <main@@Base+0x187e>
    aa7c:	mov	r1, r0
    aa7e:	ldr	r0, [pc, #480]	; (ac60 <main@@Base+0x1a30>)
    aa80:	add	r0, pc
    aa82:	b.w	9d98 <main@@Base+0xb68>
    aa86:	ldr	r3, [sp, #80]	; 0x50
    aa88:	lsls	r3, r3, #27
    aa8a:	bpl.n	aa6e <main@@Base+0x183e>
    aa8c:	ldr	r3, [sp, #192]	; 0xc0
    aa8e:	add	r5, sp, #948	; 0x3b4
    aa90:	mov.w	r2, #256	; 0x100
    aa94:	mov	r1, r5
    aa96:	ldr.w	r3, [r3, #464]	; 0x1d0
    aa9a:	ldr.w	r0, [r3, #308]	; 0x134
    aa9e:	addw	r0, r0, #299	; 0x12b
    aaa2:	blx	8db4 <__strcpy_chk@plt>
    aaa6:	ldr	r1, [pc, #444]	; (ac64 <main@@Base+0x1a34>)
    aaa8:	mov	r2, r5
    aaaa:	add	r1, pc
    aaac:	b.n	aa68 <main@@Base+0x1838>
    aaae:	ldr	r3, [r4, #52]	; 0x34
    aab0:	mov	r0, r4
    aab2:	ldr	r3, [r3, #28]
    aab4:	blx	r3
    aab6:	mov	r0, r4
    aab8:	bl	caa6 <clean_convert_context@@Base>
    aabc:	mov.w	r0, #4192	; 0x1060
    aac0:	ldrd	r8, r9, [sp, #848]	; 0x350
    aac4:	blx	8e40 <malloc@plt+0x4>
    aac8:	mov	r4, r0
    aaca:	cmp	r0, #0
    aacc:	beq.n	abbe <main@@Base+0x198e>
    aace:	add.w	r5, r0, #96	; 0x60
    aad2:	mov.w	r7, #4096	; 0x1000
    aad6:	mov	r2, r7
    aad8:	str	r7, [r0, #76]	; 0x4c
    aada:	mov	r1, r5
    aadc:	vmov	r0, s16
    aae0:	strd	r8, r9, [sp]
    aae4:	blx	8dcc <pread64@plt>
    aae8:	cmp	r0, r7
    aaea:	mov	sl, r0
    aaec:	bne.n	ab9c <main@@Base+0x196c>
    aaee:	ldrd	r2, r3, [r4, #144]	; 0x90
    aaf2:	ldr	r1, [pc, #372]	; (ac68 <main@@Base+0x1a38>)
    aaf4:	cmp	r3, r9
    aaf6:	ldr	r0, [pc, #372]	; (ac6c <main@@Base+0x1a3c>)
    aaf8:	it	eq
    aafa:	cmpeq	r2, r8
    aafc:	add	r1, pc
    aafe:	add.w	r1, r1, #51	; 0x33
    ab02:	mov.w	r2, #1056	; 0x420
    ab06:	ite	ne
    ab08:	movne	r3, #1
    ab0a:	moveq	r3, #0
    ab0c:	add	r0, pc
    ab0e:	mov.w	r8, #65536	; 0x10000
    ab12:	bl	b0ee <_start@@Base+0x46a>
    ab16:	mov.w	r9, #0
    ab1a:	mov	r0, r5
    ab1c:	strd	r8, r9, [r4, #144]	; 0x90
    ab20:	bl	1c6b0 <btrfs_super_csum_size@@Base>
    ab24:	ldrh.w	r3, [r4, #292]	; 0x124
    ab28:	mov	r2, r6
    ab2a:	mov	r1, r0
    ab2c:	mov	r0, r4
    ab2e:	bl	2097c <csum_tree_block_size@@Base>
    ab32:	mov	r2, sl
    ab34:	vmov	r0, s16
    ab38:	mov	r1, r5
    ab3a:	strd	r8, r9, [sp]
    ab3e:	blx	8ffc <pwrite64@plt>
    ab42:	cmp	r0, r7
    ab44:	mov	sl, r0
    ab46:	bne.n	ab9c <main@@Base+0x196c>
    ab48:	vmov	r0, s16
    ab4c:	blx	8aec <fsync@plt>
    ab50:	mov	sl, r0
    ab52:	cbnz	r0, ab9c <main@@Base+0x196c>
    ab54:	mov	r1, r0
    ab56:	mov	r2, r7
    ab58:	mov	r0, r5
    ab5a:	mov	r6, sl
    ab5c:	blx	8f98 <memset@plt+0x4>
    ab60:	mov	r8, sl
    ab62:	rsb	r7, r6, #65536	; 0x10000
    ab66:	vmov	r0, s16
    ab6a:	cmp.w	r7, #4096	; 0x1000
    ab6e:	mov	r1, r5
    ab70:	strd	r6, r8, [sp]
    ab74:	it	cs
    ab76:	movcs.w	r7, #4096	; 0x1000
    ab7a:	mov	r2, r7
    ab7c:	blx	8ffc <pwrite64@plt>
    ab80:	cmp	r7, r0
    ab82:	beq.n	abb4 <main@@Base+0x1984>
    ab84:	ldr	r3, [pc, #232]	; (ac70 <main@@Base+0x1a40>)
    ab86:	ldr	r2, [sp, #32]
    ab88:	ldr	r0, [pc, #232]	; (ac74 <main@@Base+0x1a44>)
    ab8a:	ldr	r3, [r2, r3]
    ab8c:	add	r0, pc
    ab8e:	ldr	r1, [r3, #0]
    ab90:	blx	91a8 <fputs@plt+0x4>
    ab94:	vmov	r0, s16
    ab98:	blx	8aec <fsync@plt>
    ab9c:	mov	r0, r4
    ab9e:	blx	8b84 <free@plt+0x4>
    aba2:	cmp.w	sl, #0
    aba6:	bgt.n	abc4 <main@@Base+0x1994>
    aba8:	beq.n	abca <main@@Base+0x199a>
    abaa:	ldr	r0, [pc, #204]	; (ac78 <main@@Base+0x1a48>)
    abac:	mov	r1, sl
    abae:	add	r0, pc
    abb0:	b.w	9d98 <main@@Base+0xb68>
    abb4:	add	r6, r7
    abb6:	cmp.w	r6, #65536	; 0x10000
    abba:	bcc.n	ab62 <main@@Base+0x1932>
    abbc:	b.n	ab94 <main@@Base+0x1964>
    abbe:	mvn.w	sl, #11
    abc2:	b.n	abaa <main@@Base+0x197a>
    abc4:	mov.w	sl, #4294967295	; 0xffffffff
    abc8:	b.n	abaa <main@@Base+0x197a>
    abca:	movw	r3, #4097	; 0x1001
    abce:	vmov	r1, s17
    abd2:	str	r3, [sp, #0]
    abd4:	movs	r2, #0
    abd6:	vmov	r0, s16
    abda:	movs	r3, #0
    abdc:	bl	22bdc <open_ctree_fd@@Base>
    abe0:	cbnz	r0, abea <main@@Base+0x19ba>
    abe2:	ldr	r0, [pc, #152]	; (ac7c <main@@Base+0x1a4c>)
    abe4:	add	r0, pc
    abe6:	b.w	9e4e <main@@Base+0xc1e>
    abea:	ldr.w	r2, [r0, #464]	; 0x1d0
    abee:	ldrb.w	r3, [r2, #365]	; 0x16d
    abf2:	orr.w	r3, r3, #4
    abf6:	strb.w	r3, [r2, #365]	; 0x16d
    abfa:	ldr.w	r0, [r0, #464]	; 0x1d0
    abfe:	bl	21c2c <close_ctree_fs_info@@Base>
    ac02:	vmov	r0, s16
    ac06:	blx	91e4 <close@plt>
    ac0a:	ldr	r0, [pc, #116]	; (ac80 <main@@Base+0x1a50>)
    ac0c:	add	r0, pc
    ac0e:	blx	8e24 <puts@plt+0x4>
    ac12:	b.w	92f0 <main@@Base+0xc0>
    ac16:	mov	r6, r4
    ac18:	b.w	98a6 <main@@Base+0x676>
    ac1c:	mov	r0, sl
    ac1e:	addw	sp, sp, #1212	; 0x4bc
    ac22:	vpop	{d8-d9}
    ac26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ac2a:	nop
    ac2c:	lsls	r4, r1, #10
    ac2e:	movs	r0, r0
    ac30:	cmp	r2, r3
    ac32:	movs	r3, r0
    ac34:	add	r7, ip
    ac36:	movs	r3, r0
    ac38:	add	r6, fp
    ac3a:	movs	r3, r0
    ac3c:	add	r6, r7
    ac3e:	movs	r3, r0
    ac40:	negs	r6, r2
    ac42:	movs	r3, r0
    ac44:	cmp	r2, r0
    ac46:	movs	r3, r0
    ac48:	cmp	r6, r0
    ac4a:	movs	r3, r0
    ac4c:	lsls	r7, r6, #18
    ac4e:	movs	r0, r0
    ac50:	lsls	r1, r3, #19
    ac52:	movs	r0, r0
    ac54:	negs	r3, r2
    ac56:	movs	r3, r0
    ac58:	tst	r7, r7
    ac5a:	movs	r3, r0
    ac5c:	tst	r1, r3
    ac5e:	movs	r3, r0
    ac60:	tst	r3, r3
    ac62:	movs	r3, r0
    ac64:	rors	r6, r3
    ac66:	movs	r3, r0
    ac68:	muls	r1, r1
    ac6a:	movs	r3, r0
    ac6c:	sbcs	r6, r4
    ac6e:	movs	r3, r0
    ac70:	lsls	r4, r3, #10
    ac72:	movs	r0, r0
    ac74:	adcs	r6, r1
    ac76:	movs	r3, r0
    ac78:	adcs	r0, r1
    ac7a:	movs	r3, r0
    ac7c:	asrs	r4, r6
    ac7e:	movs	r3, r0
    ac80:	asrs	r2, r6
    ac82:	movs	r3, r0

0000ac84 <_start@@Base>:
    ac84:	mov.w	fp, #0
    ac88:	mov.w	lr, #0
    ac8c:	pop	{r1}
    ac8e:	mov	r2, sp
    ac90:	push	{r2}
    ac92:	push	{r0}
    ac94:	ldr.w	sl, [pc, #36]	; acbc <_start@@Base+0x38>
    ac98:	add	r3, pc, #32	; (adr r3, acbc <_start@@Base+0x38>)
    ac9a:	add	sl, r3
    ac9c:	ldr.w	ip, [pc, #32]	; acc0 <_start@@Base+0x3c>
    aca0:	ldr.w	ip, [sl, ip]
    aca4:	str.w	ip, [sp, #-4]!
    aca8:	ldr	r3, [pc, #24]	; (acc4 <_start@@Base+0x40>)
    acaa:	ldr.w	r3, [sl, r3]
    acae:	ldr	r0, [pc, #24]	; (acc8 <_start@@Base+0x44>)
    acb0:	ldr.w	r0, [sl, r0]
    acb4:	blx	8e4c <__libc_start_main@plt>
    acb8:	blx	91c0 <abort@plt>
    acbc:	lsls	r0, r4, #1
    acbe:	movs	r6, r0
    acc0:	lsls	r0, r7, #9
    acc2:	movs	r0, r0
    acc4:	lsls	r4, r7, #10
    acc6:	movs	r0, r0
    acc8:	lsls	r4, r1, #11
    acca:	movs	r0, r0
    accc:	adds	r0, #20
    acce:	b.n	a810 <main@@Base+0x15e0>
    acd0:	movs	r0, #20
    acd2:	b.n	a814 <main@@Base+0x15e4>
    acd4:	adds	r0, #3
    acd6:	b.n	adf8 <_start@@Base+0x174>
    acd8:	movs	r0, #2
    acda:	b.n	ac04 <main@@Base+0x19d4>
    acdc:	movs	r0, r0
    acde:	b.n	b386 <_start@@Base+0x702>
    ace0:	vrhadd.u16	d0, d14, d31
    ace4:	ldr??.w	lr, [r7, <undefined>]
    ace8:	lsls	r0, r0, #1
    acea:	movs	r6, r0
    acec:	lsls	r4, r5, #10
    acee:	movs	r0, r0
    acf0:	ldr	r0, [pc, #24]	; (ad0c <_start@@Base+0x88>)
    acf2:	ldr	r3, [pc, #28]	; (ad10 <_start@@Base+0x8c>)
    acf4:	add	r0, pc
    acf6:	ldr	r2, [pc, #28]	; (ad14 <_start@@Base+0x90>)
    acf8:	add	r3, pc
    acfa:	cmp	r3, r0
    acfc:	add	r2, pc
    acfe:	beq.n	ad08 <_start@@Base+0x84>
    ad00:	ldr	r3, [pc, #20]	; (ad18 <_start@@Base+0x94>)
    ad02:	ldr	r3, [r2, r3]
    ad04:	cbz	r3, ad08 <_start@@Base+0x84>
    ad06:	bx	r3
    ad08:	bx	lr
    ad0a:	nop
    ad0c:	asrs	r0, r1, #21
    ad0e:	movs	r6, r0
    ad10:	asrs	r4, r0, #21
    ad12:	movs	r6, r0
    ad14:	movs	r4, r3
    ad16:	movs	r6, r0
    ad18:	lsls	r0, r0, #10
    ad1a:	movs	r0, r0
    ad1c:	ldr	r0, [pc, #32]	; (ad40 <_start@@Base+0xbc>)
    ad1e:	ldr	r1, [pc, #36]	; (ad44 <_start@@Base+0xc0>)
    ad20:	add	r0, pc
    ad22:	ldr	r2, [pc, #36]	; (ad48 <_start@@Base+0xc4>)
    ad24:	add	r1, pc
    ad26:	subs	r1, r1, r0
    ad28:	add	r2, pc
    ad2a:	lsrs	r3, r1, #31
    ad2c:	add.w	r1, r3, r1, asr #2
    ad30:	asrs	r1, r1, #1
    ad32:	beq.n	ad3c <_start@@Base+0xb8>
    ad34:	ldr	r3, [pc, #20]	; (ad4c <_start@@Base+0xc8>)
    ad36:	ldr	r3, [r2, r3]
    ad38:	cbz	r3, ad3c <_start@@Base+0xb8>
    ad3a:	bx	r3
    ad3c:	bx	lr
    ad3e:	nop
    ad40:	asrs	r4, r3, #20
    ad42:	movs	r6, r0
    ad44:	asrs	r0, r3, #20
    ad46:	movs	r6, r0
    ad48:	vrev64.8	d16, d5
    ad4c:	lsls	r0, r3, #11
    ad4e:	movs	r0, r0
    ad50:	push	{r3, lr}
    ad52:	ldr	r3, [pc, #40]	; (ad7c <_start@@Base+0xf8>)
    ad54:	ldr	r2, [pc, #40]	; (ad80 <_start@@Base+0xfc>)
    ad56:	add	r3, pc
    ad58:	add	r2, pc
    ad5a:	ldrb	r3, [r3, #0]
    ad5c:	cbnz	r3, ad7a <_start@@Base+0xf6>
    ad5e:	ldr	r3, [pc, #36]	; (ad84 <_start@@Base+0x100>)
    ad60:	ldr	r3, [r2, r3]
    ad62:	cbz	r3, ad6e <_start@@Base+0xea>
    ad64:	ldr	r3, [pc, #32]	; (ad88 <_start@@Base+0x104>)
    ad66:	add	r3, pc
    ad68:	ldr	r0, [r3, #0]
    ad6a:	blx	8b10 <__cxa_finalize@plt>
    ad6e:	bl	acf0 <_start@@Base+0x6c>
    ad72:	ldr	r3, [pc, #24]	; (ad8c <_start@@Base+0x108>)
    ad74:	movs	r2, #1
    ad76:	add	r3, pc
    ad78:	strb	r2, [r3, #0]
    ad7a:	pop	{r3, pc}
    ad7c:	asrs	r6, r4, #19
    ad7e:	movs	r6, r0
    ad80:	vaddl.u8	q8, d0, d5
    ad84:	lsls	r4, r7, #9
    ad86:	movs	r0, r0
    ad88:	lsls	r2, r3, #10
    ad8a:	movs	r6, r0
    ad8c:	asrs	r6, r0, #19
    ad8e:	movs	r6, r0
    ad90:	b.n	ad1c <_start@@Base+0x98>
    ad92:	nop
    ad94:	ldr	r0, [pc, #156]	; (ae34 <_start@@Base+0x1b0>)
    ad96:	push	{r3, lr}
    ad98:	add	r0, pc
    ad9a:	blx	8e24 <puts@plt+0x4>
    ad9e:	ldr	r0, [pc, #152]	; (ae38 <_start@@Base+0x1b4>)
    ada0:	add	r0, pc
    ada2:	blx	8e24 <puts@plt+0x4>
    ada6:	ldr	r0, [pc, #148]	; (ae3c <_start@@Base+0x1b8>)
    ada8:	add	r0, pc
    adaa:	blx	8e24 <puts@plt+0x4>
    adae:	ldr	r0, [pc, #144]	; (ae40 <_start@@Base+0x1bc>)
    adb0:	add	r0, pc
    adb2:	blx	8e24 <puts@plt+0x4>
    adb6:	ldr	r0, [pc, #140]	; (ae44 <_start@@Base+0x1c0>)
    adb8:	add	r0, pc
    adba:	blx	8e24 <puts@plt+0x4>
    adbe:	ldr	r0, [pc, #136]	; (ae48 <_start@@Base+0x1c4>)
    adc0:	add	r0, pc
    adc2:	blx	8e24 <puts@plt+0x4>
    adc6:	ldr	r0, [pc, #132]	; (ae4c <_start@@Base+0x1c8>)
    adc8:	add	r0, pc
    adca:	blx	8e24 <puts@plt+0x4>
    adce:	ldr	r0, [pc, #128]	; (ae50 <_start@@Base+0x1cc>)
    add0:	add	r0, pc
    add2:	blx	8e24 <puts@plt+0x4>
    add6:	ldr	r0, [pc, #124]	; (ae54 <_start@@Base+0x1d0>)
    add8:	add	r0, pc
    adda:	blx	8e24 <puts@plt+0x4>
    adde:	ldr	r0, [pc, #120]	; (ae58 <_start@@Base+0x1d4>)
    ade0:	add	r0, pc
    ade2:	blx	8e24 <puts@plt+0x4>
    ade6:	ldr	r0, [pc, #116]	; (ae5c <_start@@Base+0x1d8>)
    ade8:	add	r0, pc
    adea:	blx	8e24 <puts@plt+0x4>
    adee:	ldr	r0, [pc, #112]	; (ae60 <_start@@Base+0x1dc>)
    adf0:	add	r0, pc
    adf2:	blx	8e24 <puts@plt+0x4>
    adf6:	ldr	r0, [pc, #108]	; (ae64 <_start@@Base+0x1e0>)
    adf8:	add	r0, pc
    adfa:	blx	8e24 <puts@plt+0x4>
    adfe:	ldr	r0, [pc, #104]	; (ae68 <_start@@Base+0x1e4>)
    ae00:	add	r0, pc
    ae02:	blx	8e24 <puts@plt+0x4>
    ae06:	movs	r0, #10
    ae08:	blx	8fa8 <putchar@plt+0x4>
    ae0c:	ldr	r0, [pc, #92]	; (ae6c <_start@@Base+0x1e8>)
    ae0e:	add	r0, pc
    ae10:	blx	8e24 <puts@plt+0x4>
    ae14:	ldr	r2, [pc, #88]	; (ae70 <_start@@Base+0x1ec>)
    ae16:	ldr	r1, [pc, #92]	; (ae74 <_start@@Base+0x1f0>)
    ae18:	movs	r0, #1
    ae1a:	add	r2, pc
    ae1c:	add	r1, pc
    ae1e:	blx	900c <__printf_chk@plt+0x4>
    ae22:	ldr	r2, [pc, #84]	; (ae78 <_start@@Base+0x1f4>)
    ae24:	ldr	r1, [pc, #84]	; (ae7c <_start@@Base+0x1f8>)
    ae26:	movs	r0, #1
    ae28:	ldmia.w	sp!, {r3, lr}
    ae2c:	add	r2, pc
    ae2e:	add	r1, pc
    ae30:	b.w	9008 <__printf_chk@plt>
    ae34:	adds	r2, #104	; 0x68
    ae36:	movs	r3, r0
    ae38:	adds	r2, #134	; 0x86
    ae3a:	movs	r3, r0
    ae3c:	adds	r2, #135	; 0x87
    ae3e:	movs	r3, r0
    ae40:	adds	r2, #189	; 0xbd
    ae42:	movs	r3, r0
    ae44:	adds	r2, #228	; 0xe4
    ae46:	movs	r3, r0
    ae48:	adds	r3, #32
    ae4a:	movs	r3, r0
    ae4c:	adds	r3, #37	; 0x25
    ae4e:	movs	r3, r0
    ae50:	adds	r3, #97	; 0x61
    ae52:	movs	r3, r0
    ae54:	adds	r3, #146	; 0x92
    ae56:	movs	r3, r0
    ae58:	adds	r3, #199	; 0xc7
    ae5a:	movs	r3, r0
    ae5c:	adds	r3, #236	; 0xec
    ae5e:	movs	r3, r0
    ae60:	adds	r4, #32
    ae62:	movs	r3, r0
    ae64:	adds	r4, #83	; 0x53
    ae66:	movs	r3, r0
    ae68:	adds	r4, #143	; 0x8f
    ae6a:	movs	r3, r0
    ae6c:	adds	r4, #199	; 0xc7
    ae6e:	movs	r3, r0
    ae70:	adds	r4, #210	; 0xd2
    ae72:	movs	r3, r0
    ae74:	adds	r4, #212	; 0xd4
    ae76:	movs	r3, r0
    ae78:	adds	r4, #211	; 0xd3
    ae7a:	movs	r3, r0
    ae7c:	adds	r4, #212	; 0xd4
    ae7e:	movs	r3, r0
    ae80:	push	{r4, lr}
    ae82:	movs	r0, #10
    ae84:	ldr	r4, [pc, #20]	; (ae9c <_start@@Base+0x218>)
    ae86:	blx	8fa8 <putchar@plt+0x4>
    ae8a:	ldr	r3, [pc, #20]	; (aea0 <_start@@Base+0x21c>)
    ae8c:	add	r4, pc
    ae8e:	ldr	r3, [r4, r3]
    ae90:	ldr	r0, [r3, #0]
    ae92:	blx	8b58 <fflush@plt>
    ae96:	movs	r0, #0
    ae98:	pop	{r4, pc}
    ae9a:	nop
    ae9c:	cdp2	0, 8, cr0, cr12, cr5, {0}
    aea0:	lsls	r4, r0, #11
    aea2:	movs	r0, r0
    aea4:	ldr	r2, [pc, #116]	; (af1c <_start@@Base+0x298>)
    aea6:	mov.w	r1, #1000	; 0x3e8
    aeaa:	ldr	r3, [pc, #116]	; (af20 <_start@@Base+0x29c>)
    aeac:	add	r2, pc
    aeae:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    aeb2:	sub	sp, #24
    aeb4:	ldr	r3, [r2, r3]
    aeb6:	mov	r4, r0
    aeb8:	ldr	r0, [r0, #40]	; 0x28
    aeba:	add	r7, sp, #16
    aebc:	ldr	r3, [r3, #0]
    aebe:	str	r3, [sp, #20]
    aec0:	mov.w	r3, #0
    aec4:	ldr	r3, [pc, #80]	; (af18 <_start@@Base+0x294>)
    aec6:	ldr.w	r8, [pc, #92]	; af24 <_start@@Base+0x2a0>
    aeca:	movs	r5, #0
    aecc:	ldr	r6, [pc, #88]	; (af28 <_start@@Base+0x2a4>)
    aece:	str	r3, [sp, #16]
    aed0:	bl	13d1c <task_period_start@@Base>
    aed4:	add	r8, pc
    aed6:	add	r6, pc
    aed8:	mov	r0, r4
    aeda:	adds	r5, #1
    aedc:	blx	8ba8 <pthread_mutex_lock@plt>
    aee0:	ldrd	r2, r3, [r4, #24]
    aee4:	and.w	r1, r5, #3
    aee8:	movs	r0, #1
    aeea:	strd	r2, r3, [sp, #8]
    aeee:	ldrd	r2, r3, [r4, #32]
    aef2:	strd	r2, r3, [sp]
    aef6:	ldrb	r2, [r7, r1]
    aef8:	mov	r1, r8
    aefa:	blx	900c <__printf_chk@plt+0x4>
    aefe:	mov	r0, r4
    af00:	blx	8aa8 <pthread_mutex_unlock@plt>
    af04:	ldr	r3, [pc, #36]	; (af2c <_start@@Base+0x2a8>)
    af06:	ldr	r3, [r6, r3]
    af08:	ldr	r0, [r3, #0]
    af0a:	blx	8b58 <fflush@plt>
    af0e:	ldr	r0, [r4, #40]	; 0x28
    af10:	bl	13dac <task_period_wait@@Base>
    af14:	b.n	aed8 <_start@@Base+0x254>
    af16:	nop
    af18:	ldr	r6, [r5, #112]	; 0x70
    af1a:	ldr	r7, [r1, #116]	; 0x74
    af1c:	cdp2	0, 6, cr0, cr12, cr5, {0}
    af20:	lsls	r0, r1, #10
    af22:	movs	r0, r0
    af24:	adds	r4, #61	; 0x3d
    af26:	movs	r3, r0
    af28:	cdp2	0, 4, cr0, cr2, cr5, {0}
    af2c:	lsls	r4, r0, #11
    af2e:	movs	r0, r0
    af30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    af34:	mov	r9, r2
    af36:	ldr	r2, [pc, #236]	; (b024 <_start@@Base+0x3a0>)
    af38:	mov	r8, r3
    af3a:	ldr	r3, [pc, #236]	; (b028 <_start@@Base+0x3a4>)
    af3c:	sub	sp, #480	; 0x1e0
    af3e:	add	r2, pc
    af40:	add.w	sl, sp, #12
    af44:	mov	r6, r0
    af46:	mov	r7, r1
    af48:	ldr	r3, [r2, r3]
    af4a:	ldr	r3, [r3, #0]
    af4c:	str	r3, [sp, #476]	; 0x1dc
    af4e:	mov.w	r3, #0
    af52:	strd	r9, r8, [sp]
    af56:	mov	r3, sl
    af58:	ldr	r2, [r1, #0]
    af5a:	bl	1c960 <btrfs_copy_root@@Base>
    af5e:	mov	r4, r0
    af60:	cmp	r0, #0
    af62:	bne.n	aff8 <_start@@Base+0x374>
    af64:	add	r5, sp, #36	; 0x24
    af66:	add.w	r1, r7, #8
    af6a:	movw	r2, #439	; 0x1b7
    af6e:	add.w	r4, sp, #25
    af72:	mov	r0, r5
    af74:	blx	8bdc <memcpy@plt+0x4>
    af78:	ldr.w	r0, [sl]
    af7c:	ldrd	r2, r3, [r0, #40]	; 0x28
    af80:	strd	r2, r3, [r5, #176]	; 0xb0
    af84:	ldrb.w	r3, [r0, #196]	; 0xc4
    af88:	strb.w	r3, [r5, #238]	; 0xee
    af8c:	ldr	r3, [r6, #8]
    af8e:	str.w	r3, [r5, #160]	; 0xa0
    af92:	ldr	r3, [r6, #12]
    af94:	str.w	r3, [r5, #164]	; 0xa4
    af98:	bl	1b4c0 <free_extent_buffer@@Base>
    af9c:	movs	r3, #132	; 0x84
    af9e:	strb.w	r3, [sp, #24]
    afa2:	ldr	r3, [r6, #8]
    afa4:	mov	r0, r6
    afa6:	ldr.w	r1, [r7, #464]	; 0x1d0
    afaa:	strd	r9, r8, [sp, #16]
    afae:	add.w	r8, sp, #16
    afb2:	str.w	r3, [sp, #25]
    afb6:	ldr	r3, [r6, #12]
    afb8:	mov	r2, r8
    afba:	ldr	r1, [r1, #28]
    afbc:	str.w	r3, [sp, #29]
    afc0:	mov	r3, r5
    afc2:	bl	2c450 <btrfs_insert_root@@Base>
    afc6:	mov	r1, r8
    afc8:	ldr.w	r0, [r7, #464]	; 0x1d0
    afcc:	mov.w	r3, #4294967295	; 0xffffffff
    afd0:	strb	r3, [r4, #0]
    afd2:	strb	r3, [r4, #1]
    afd4:	strb	r3, [r4, #2]
    afd6:	strb	r3, [r4, #3]
    afd8:	strb	r3, [r4, #4]
    afda:	strb	r3, [r4, #5]
    afdc:	strb	r3, [r4, #6]
    afde:	strb	r3, [r4, #7]
    afe0:	bl	222a6 <btrfs_read_fs_root@@Base>
    afe4:	mov	r1, r0
    afe6:	cbz	r0, afee <_start@@Base+0x36a>
    afe8:	cmn.w	r0, #4096	; 0x1000
    afec:	bls.n	b00c <_start@@Base+0x388>
    afee:	ldr	r0, [pc, #60]	; (b02c <_start@@Base+0x3a8>)
    aff0:	mov	r4, r1
    aff2:	add	r0, pc
    aff4:	bl	1bd1c <__btrfs_error@@Base>
    aff8:	ldr	r2, [pc, #52]	; (b030 <_start@@Base+0x3ac>)
    affa:	ldr	r3, [pc, #44]	; (b028 <_start@@Base+0x3a4>)
    affc:	add	r2, pc
    affe:	ldr	r3, [r2, r3]
    b000:	ldr	r2, [r3, #0]
    b002:	ldr	r3, [sp, #476]	; 0x1dc
    b004:	eors	r2, r3
    b006:	beq.n	b01c <_start@@Base+0x398>
    b008:	blx	8c90 <__stack_chk_fail@plt>
    b00c:	mov.w	r2, #256	; 0x100
    b010:	movs	r3, #0
    b012:	mov	r0, r6
    b014:	bl	3482c <btrfs_make_root_dir@@Base>
    b018:	mov	r4, r0
    b01a:	b.n	aff8 <_start@@Base+0x374>
    b01c:	mov	r0, r4
    b01e:	add	sp, #480	; 0x1e0
    b020:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b024:	ldc2l	0, cr0, [sl, #20]
    b028:	lsls	r0, r1, #10
    b02a:	movs	r0, r0
    b02c:	adds	r3, #65	; 0x41
    b02e:	movs	r3, r0
    b030:	ldc2	0, cr0, [ip, #-20]	; 0xffffffec
    b034:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b038:	mov	r8, r3
    b03a:	vpush	{d8}
    b03e:	mov	r9, r0
    b040:	mov	r6, r1
    b042:	mov	r5, r2
    b044:	ldr.w	r3, [r1, #464]	; 0x1d0
    b048:	sub	sp, #36	; 0x24
    b04a:	ldr.w	r7, [r3, #388]	; 0x184
    b04e:	mov	r0, r7
    b050:	blx	8e40 <malloc@plt+0x4>
    b054:	mov	r4, r0
    b056:	cmp	r0, #0
    b058:	beq.n	b0e8 <_start@@Base+0x464>
    b05a:	ldr	r3, [sp, #80]	; 0x50
    b05c:	mov.w	sl, #0
    b060:	mov.w	fp, #0
    b064:	str	r7, [sp, #20]
    b066:	adds	r3, r3, r5
    b068:	vmov	s16, r3
    b06c:	ldr	r3, [sp, #84]	; 0x54
    b06e:	adc.w	r3, r3, r8
    b072:	vmov	s17, r3
    b076:	ldrd	r2, r3, [sp, #80]	; 0x50
    b07a:	cmp	fp, r3
    b07c:	it	eq
    b07e:	cmpeq	sl, r2
    b080:	bcc.n	b09a <_start@@Base+0x416>
    b082:	movs	r1, #0
    b084:	mov	r0, r4
    b086:	str	r1, [sp, #20]
    b088:	blx	8b84 <free@plt+0x4>
    b08c:	ldr	r1, [sp, #20]
    b08e:	mov	r0, r1
    b090:	add	sp, #36	; 0x24
    b092:	vpop	{d8}
    b096:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b09a:	adds.w	r2, sl, r5
    b09e:	mov	r0, r6
    b0a0:	adc.w	r3, fp, r8
    b0a4:	strd	r7, r4, [sp]
    b0a8:	strd	r3, r2, [sp, #24]
    b0ac:	bl	cc7c <read_disk_extent@@Base>
    b0b0:	mov	r1, r0
    b0b2:	cmp	r0, #0
    b0b4:	bne.n	b084 <_start@@Base+0x400>
    b0b6:	ldr	r2, [sp, #28]
    b0b8:	mov	r0, r9
    b0ba:	ldr	r3, [sp, #24]
    b0bc:	ldr.w	r1, [r6, #464]	; 0x1d0
    b0c0:	str	r2, [sp, #0]
    b0c2:	str	r3, [sp, #4]
    b0c4:	strd	r4, r7, [sp, #8]
    b0c8:	vmov	r2, s16
    b0cc:	ldr	r1, [r1, #40]	; 0x28
    b0ce:	vmov	r3, s17
    b0d2:	bl	32bb0 <btrfs_csum_file_block@@Base>
    b0d6:	mov	r1, r0
    b0d8:	cmp	r0, #0
    b0da:	bne.n	b084 <_start@@Base+0x400>
    b0dc:	ldr	r3, [sp, #20]
    b0de:	adds.w	sl, sl, r3
    b0e2:	adc.w	fp, fp, #0
    b0e6:	b.n	b076 <_start@@Base+0x3f2>
    b0e8:	mvn.w	r1, #11
    b0ec:	b.n	b08e <_start@@Base+0x40a>
    b0ee:	ldr.w	ip, [pc, #108]	; b15c <_start@@Base+0x4d8>
    b0f2:	push	{r4, r5, lr}
    b0f4:	add	ip, pc
    b0f6:	ldr	r5, [pc, #104]	; (b160 <_start@@Base+0x4dc>)
    b0f8:	sub	sp, #92	; 0x5c
    b0fa:	ldr	r4, [pc, #104]	; (b164 <_start@@Base+0x4e0>)
    b0fc:	ldr.w	r5, [ip, r5]
    b100:	add	r4, pc
    b102:	ldr	r5, [r5, #0]
    b104:	str	r5, [sp, #84]	; 0x54
    b106:	mov.w	r5, #0
    b10a:	cbz	r3, b142 <_start@@Base+0x4be>
    b10c:	ldr	r3, [pc, #88]	; (b168 <_start@@Base+0x4e4>)
    b10e:	ldr	r5, [r4, r3]
    b110:	movs	r4, #1
    b112:	strd	r2, r1, [sp]
    b116:	mov	r1, r4
    b118:	ldr	r3, [pc, #80]	; (b16c <_start@@Base+0x4e8>)
    b11a:	ldr	r2, [pc, #84]	; (b170 <_start@@Base+0x4ec>)
    b11c:	strd	r0, r4, [sp, #8]
    b120:	add	r4, sp, #20
    b122:	add	r3, pc
    b124:	add	r2, pc
    b126:	ldr	r0, [r5, #0]
    b128:	blx	9040 <__fprintf_chk@plt+0x4>
    b12c:	movs	r1, #16
    b12e:	mov	r0, r4
    b130:	blx	8e98 <backtrace@plt>
    b134:	movs	r2, #2
    b136:	mov	r1, r0
    b138:	mov	r0, r4
    b13a:	blx	9214 <backtrace_symbols_fd@plt>
    b13e:	blx	91c0 <abort@plt>
    b142:	ldr	r2, [pc, #48]	; (b174 <_start@@Base+0x4f0>)
    b144:	ldr	r3, [pc, #24]	; (b160 <_start@@Base+0x4dc>)
    b146:	add	r2, pc
    b148:	ldr	r3, [r2, r3]
    b14a:	ldr	r2, [r3, #0]
    b14c:	ldr	r3, [sp, #84]	; 0x54
    b14e:	eors	r2, r3
    b150:	beq.n	b156 <_start@@Base+0x4d2>
    b152:	blx	8c90 <__stack_chk_fail@plt>
    b156:	add	sp, #92	; 0x5c
    b158:	pop	{r4, r5, pc}
    b15a:	nop
    b15c:	stc2	0, cr0, [r4], #-20	; 0xffffffec
    b160:	lsls	r0, r1, #10
    b162:	movs	r0, r0
    b164:	ldc2	0, cr0, [r8], {5}
    b168:	lsls	r4, r3, #10
    b16a:	movs	r0, r0
    b16c:	adds	r2, #45	; 0x2d
    b16e:	movs	r3, r0
    b170:	adds	r2, #58	; 0x3a
    b172:	movs	r3, r0
    b174:			; <UNDEFINED> instruction: 0xfbd20005
    b178:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b17c:	mov	sl, r0
    b17e:	vpush	{d8-d9}
    b182:	sub	sp, #148	; 0x94
    b184:	strd	r2, r3, [sp, #16]
    b188:	ldr	r1, [sp, #20]
    b18a:	ldr	r3, [pc, #1000]	; (b574 <_start@@Base+0x8f0>)
    b18c:	orrs	r2, r1
    b18e:	ldr	r1, [sp, #200]	; 0xc8
    b190:	add	r3, pc
    b192:	ite	eq
    b194:	moveq	r2, #1
    b196:	movne	r2, #0
    b198:	cmp	r1, #0
    b19a:	ldr	r1, [sp, #20]
    b19c:	it	eq
    b19e:	moveq	r2, #0
    b1a0:	vmov	s16, r2
    b1a4:	ldr	r2, [sp, #16]
    b1a6:	lsrs	r2, r2, #1
    b1a8:	orr.w	r2, r2, r1, lsl #31
    b1ac:	str	r2, [sp, #24]
    b1ae:	lsrs	r2, r1, #1
    b1b0:	str	r2, [sp, #28]
    b1b2:	ldr	r2, [sp, #24]
    b1b4:	str	r2, [sp, #92]	; 0x5c
    b1b6:	ldr	r2, [pc, #960]	; (b578 <_start@@Base+0x8f4>)
    b1b8:	ldr	r3, [r3, r2]
    b1ba:	str	r3, [sp, #52]	; 0x34
    b1bc:	movs	r3, #0
    b1be:	str	r3, [sp, #88]	; 0x58
    b1c0:	ldr	r3, [pc, #952]	; (b57c <_start@@Base+0x8f8>)
    b1c2:	add	r3, pc
    b1c4:	str	r3, [sp, #136]	; 0x88
    b1c6:	ldr	r3, [pc, #952]	; (b580 <_start@@Base+0x8fc>)
    b1c8:	add	r3, pc
    b1ca:	vmov	s17, r3
    b1ce:	ldr	r3, [sp, #136]	; 0x88
    b1d0:	vmov	s18, r3
    b1d4:	ldr	r3, [sp, #52]	; 0x34
    b1d6:	movw	r2, #527	; 0x20f
    b1da:	vmov	r0, s17
    b1de:	ldr	r1, [sp, #136]	; 0x88
    b1e0:	ldrd	r6, r7, [r3]
    b1e4:	ldrd	r5, r3, [r3, #8]
    b1e8:	mov	fp, r3
    b1ea:	vmov	r3, s16
    b1ee:	bl	b0ee <_start@@Base+0x46a>
    b1f2:	ldrd	r3, r4, [sp, #16]
    b1f6:	orrs	r3, r4
    b1f8:	beq.n	b2c0 <_start@@Base+0x63c>
    b1fa:	adds	r3, r5, r5
    b1fc:	str	r3, [sp, #96]	; 0x60
    b1fe:	mov	r3, fp
    b200:	adcs	r3, r3
    b202:	str	r3, [sp, #100]	; 0x64
    b204:	ldrd	r1, r2, [sp, #96]	; 0x60
    b208:	ldrd	r3, r4, [sp, #16]
    b20c:	cmp	r4, r2
    b20e:	it	eq
    b210:	cmpeq	r3, r1
    b212:	bcc.n	b2c4 <_start@@Base+0x640>
    b214:	cmp	r4, #0
    b216:	it	eq
    b218:	cmpeq.w	r3, #131072	; 0x20000
    b21c:	ite	cc
    b21e:	movcc	r3, #1
    b220:	movcs	r3, #0
    b222:	ldr	r0, [pc, #864]	; (b584 <_start@@Base+0x900>)
    b224:	mov.w	r2, #532	; 0x214
    b228:	vmov	r1, s18
    b22c:	add	r0, pc
    b22e:	bl	b0ee <_start@@Base+0x46a>
    b232:	lsrs	r3, r6, #16
    b234:	lsls	r3, r3, #16
    b236:	strd	r3, r7, [sp, #80]	; 0x50
    b23a:	ldrd	r3, r4, [sp, #80]	; 0x50
    b23e:	cmp	r7, r4
    b240:	it	eq
    b242:	cmpeq	r6, r3
    b244:	bne.n	b2c8 <_start@@Base+0x644>
    b246:	adds	r3, r6, r5
    b248:	str	r3, [sp, #56]	; 0x38
    b24a:	mov	r3, fp
    b24c:	adc.w	r3, r7, r3
    b250:	str	r3, [sp, #60]	; 0x3c
    b252:	ldr	r3, [sp, #56]	; 0x38
    b254:	ldr	r2, [sp, #60]	; 0x3c
    b256:	adds.w	r3, r3, #4294967295	; 0xffffffff
    b25a:	adc.w	r2, r2, #4294967295	; 0xffffffff
    b25e:	mvn.w	r3, r3, lsr #16
    b262:	mvn.w	r3, r3, lsl #16
    b266:	adds	r3, #1
    b268:	str	r3, [sp, #104]	; 0x68
    b26a:	adc.w	r3, r2, #0
    b26e:	str	r3, [sp, #108]	; 0x6c
    b270:	ldrd	r3, r4, [sp, #104]	; 0x68
    b274:	ldrd	r1, r2, [sp, #56]	; 0x38
    b278:	cmp	r4, r2
    b27a:	itet	eq
    b27c:	cmpeq	r3, r1
    b27e:	movne	r3, #1
    b280:	moveq	r3, #0
    b282:	ldr	r1, [pc, #772]	; (b588 <_start@@Base+0x904>)
    b284:	mov.w	r2, #536	; 0x218
    b288:	ldr	r0, [pc, #768]	; (b58c <_start@@Base+0x908>)
    b28a:	add	r1, pc
    b28c:	str	r1, [sp, #140]	; 0x8c
    b28e:	add	r0, pc
    b290:	bl	b0ee <_start@@Base+0x46a>
    b294:	mov	r2, r6
    b296:	mov	r3, r7
    b298:	mov	r0, sl
    b29a:	str	r5, [sp, #0]
    b29c:	str.w	fp, [sp, #4]
    b2a0:	bl	1a7bc <lookup_cache_extent@@Base>
    b2a4:	ldr	r1, [sp, #140]	; 0x8c
    b2a6:	mov	r4, r0
    b2a8:	cbnz	r0, b2cc <_start@@Base+0x648>
    b2aa:	movs	r0, #0
    b2ac:	ldr	r3, [sp, #88]	; 0x58
    b2ae:	adds	r3, #1
    b2b0:	str	r3, [sp, #88]	; 0x58
    b2b2:	ldr	r3, [sp, #52]	; 0x34
    b2b4:	adds	r3, #16
    b2b6:	str	r3, [sp, #52]	; 0x34
    b2b8:	ldr	r3, [sp, #88]	; 0x58
    b2ba:	cmp	r3, #3
    b2bc:	bne.n	b1d4 <_start@@Base+0x550>
    b2be:	b.n	b50c <_start@@Base+0x888>
    b2c0:	movs	r3, #0
    b2c2:	b.n	b222 <_start@@Base+0x59e>
    b2c4:	movs	r3, #1
    b2c6:	b.n	b222 <_start@@Base+0x59e>
    b2c8:	movs	r3, #1
    b2ca:	b.n	b282 <_start@@Base+0x5fe>
    b2cc:	ldrd	r8, r9, [r0, #24]
    b2d0:	adds	r3, r6, r5
    b2d2:	str	r3, [sp, #8]
    b2d4:	mov	r3, fp
    b2d6:	adc.w	r3, r7, r3
    b2da:	cmp	r9, r7
    b2dc:	it	eq
    b2de:	cmpeq	r8, r6
    b2e0:	str	r3, [sp, #12]
    b2e2:	bcc.n	b36c <_start@@Base+0x6e8>
    b2e4:	ldrd	r2, r3, [sp, #8]
    b2e8:	ldr	r0, [pc, #676]	; (b590 <_start@@Base+0x90c>)
    b2ea:	cmp	r9, r3
    b2ec:	it	eq
    b2ee:	cmpeq	r8, r2
    b2f0:	add	r0, pc
    b2f2:	movw	r2, #550	; 0x226
    b2f6:	ite	cs
    b2f8:	movcs	r3, #1
    b2fa:	movcc	r3, #0
    b2fc:	bl	b0ee <_start@@Base+0x46a>
    b300:	ldrd	r3, r2, [r4, #32]
    b304:	ldr	r1, [sp, #8]
    b306:	adds.w	r3, r8, r3
    b30a:	adc.w	r2, r9, r2
    b30e:	subs	r3, r3, r1
    b310:	str	r3, [sp, #64]	; 0x40
    b312:	ldr	r3, [sp, #12]
    b314:	sbc.w	r3, r2, r3
    b318:	str	r3, [sp, #68]	; 0x44
    b31a:	ldrd	r2, r3, [sp, #64]	; 0x40
    b31e:	strd	r2, r3, [r4, #32]
    b322:	orrs	r3, r2
    b324:	bne.n	b336 <_start@@Base+0x6b2>
    b326:	mov	r0, sl
    b328:	mov	r1, r4
    b32a:	bl	1a954 <remove_cache_extent@@Base>
    b32e:	mov	r0, r4
    b330:	blx	8b84 <free@plt+0x4>
    b334:	b.n	b2aa <_start@@Base+0x626>
    b336:	ldr	r3, [sp, #200]	; 0xc8
    b338:	cbz	r3, b368 <_start@@Base+0x6e4>
    b33a:	ldrd	r2, r3, [sp, #64]	; 0x40
    b33e:	ldrd	r0, r1, [sp, #24]
    b342:	cmp	r3, r1
    b344:	it	eq
    b346:	cmpeq	r2, r0
    b348:	ite	cc
    b34a:	movcc	r3, #1
    b34c:	movcs	r3, #0
    b34e:	ldr	r1, [pc, #580]	; (b594 <_start@@Base+0x910>)
    b350:	mov.w	r2, #564	; 0x234
    b354:	ldr	r0, [pc, #576]	; (b598 <_start@@Base+0x914>)
    b356:	add	r1, pc
    b358:	add	r0, pc
    b35a:	bl	b0ee <_start@@Base+0x46a>
    b35e:	ldrd	r2, r3, [sp, #8]
    b362:	strd	r2, r3, [r4, #24]
    b366:	b.n	b2aa <_start@@Base+0x626>
    b368:	ldr	r3, [sp, #200]	; 0xc8
    b36a:	b.n	b34e <_start@@Base+0x6ca>
    b36c:	ldrd	r3, r2, [r0, #32]
    b370:	adds.w	r3, r8, r3
    b374:	str	r3, [sp, #72]	; 0x48
    b376:	adc.w	r3, r9, r2
    b37a:	str	r3, [sp, #76]	; 0x4c
    b37c:	subs.w	r3, r6, r8
    b380:	ldrd	r5, r6, [sp, #72]	; 0x48
    b384:	str	r3, [sp, #32]
    b386:	sbc.w	r3, r7, r9
    b38a:	str	r3, [sp, #36]	; 0x24
    b38c:	ldrd	r2, r3, [sp, #8]
    b390:	cmp	r3, r6
    b392:	it	eq
    b394:	cmpeq	r2, r5
    b396:	ldrd	r2, r3, [sp, #32]
    b39a:	strd	r2, r3, [r0, #32]
    b39e:	ldr	r3, [sp, #200]	; 0xc8
    b3a0:	bcs.w	b540 <_start@@Base+0x8bc>
    b3a4:	cmp	r3, #0
    b3a6:	beq.n	b420 <_start@@Base+0x79c>
    b3a8:	ldrd	r2, r3, [sp, #32]
    b3ac:	ldrd	r5, r6, [sp, #24]
    b3b0:	cmp	r3, r6
    b3b2:	it	eq
    b3b4:	cmpeq	r2, r5
    b3b6:	bcs.n	b420 <_start@@Base+0x79c>
    b3b8:	bl	1a94c <prev_cache_extent@@Base>
    b3bc:	ldr	r3, [sp, #92]	; 0x5c
    b3be:	ldr	r2, [sp, #32]
    b3c0:	subs	r2, r3, r2
    b3c2:	asrs	r3, r2, #31
    b3c4:	cmp	r0, #0
    b3c6:	beq.w	b4f4 <_start@@Base+0x870>
    b3ca:	ldrd	r6, r5, [r0, #24]
    b3ce:	ldr	r1, [r0, #32]
    b3d0:	ldrd	lr, r7, [r4, #24]
    b3d4:	adds	r1, r6, r1
    b3d6:	str	r1, [sp, #112]	; 0x70
    b3d8:	ldr	r1, [r0, #36]	; 0x24
    b3da:	adc.w	r1, r5, r1
    b3de:	str	r1, [sp, #116]	; 0x74
    b3e0:	subs.w	r1, lr, r2
    b3e4:	str	r1, [sp, #120]	; 0x78
    b3e6:	sbc.w	r1, r7, r3
    b3ea:	str	r1, [sp, #124]	; 0x7c
    b3ec:	ldrd	r8, r9, [sp, #112]	; 0x70
    b3f0:	ldrd	fp, ip, [sp, #120]	; 0x78
    b3f4:	cmp	r9, ip
    b3f6:	it	eq
    b3f8:	cmpeq	r8, fp
    b3fa:	bcc.n	b4f4 <_start@@Base+0x870>
    b3fc:	ldrd	r3, r2, [r4, #32]
    b400:	adds.w	r1, lr, r3
    b404:	adc.w	r7, r2, r7
    b408:	subs	r1, r1, r6
    b40a:	sbc.w	r7, r7, r5
    b40e:	strd	r1, r7, [r0, #32]
    b412:	mov	r0, sl
    b414:	mov	r1, r4
    b416:	bl	1a954 <remove_cache_extent@@Base>
    b41a:	mov	r0, r4
    b41c:	blx	8b84 <free@plt+0x4>
    b420:	ldr	r2, [sp, #8]
    b422:	mov	r0, sl
    b424:	ldr	r3, [sp, #72]	; 0x48
    b426:	subs	r3, r3, r2
    b428:	ldr	r2, [sp, #12]
    b42a:	str	r3, [sp, #40]	; 0x28
    b42c:	ldr	r3, [sp, #76]	; 0x4c
    b42e:	sbc.w	r3, r3, r2
    b432:	str	r3, [sp, #44]	; 0x2c
    b434:	ldrd	r3, r4, [sp, #40]	; 0x28
    b438:	strd	r3, r4, [sp]
    b43c:	ldrd	r2, r3, [sp, #8]
    b440:	bl	1a98c <add_merge_cache_extent@@Base>
    b444:	cmp	r0, #0
    b446:	blt.n	b50c <_start@@Base+0x888>
    b448:	ldr	r3, [sp, #200]	; 0xc8
    b44a:	cmp	r3, #0
    b44c:	beq.w	b2ac <_start@@Base+0x628>
    b450:	ldrd	r3, r4, [sp, #40]	; 0x28
    b454:	ldrd	r1, r2, [sp, #24]
    b458:	cmp	r4, r2
    b45a:	it	eq
    b45c:	cmpeq	r3, r1
    b45e:	bcs.w	b2ac <_start@@Base+0x628>
    b462:	strd	r3, r4, [sp]
    b466:	mov	r0, sl
    b468:	ldrd	r2, r3, [sp, #8]
    b46c:	bl	1a7bc <lookup_cache_extent@@Base>
    b470:	mov	r4, r0
    b472:	cmp	r0, #0
    b474:	beq.n	b56c <_start@@Base+0x8e8>
    b476:	ldrd	r2, r3, [r0, #24]
    b47a:	ldrd	r5, r6, [sp, #8]
    b47e:	cmp	r6, r3
    b480:	it	eq
    b482:	cmpeq	r5, r2
    b484:	bne.n	b56c <_start@@Base+0x8e8>
    b486:	ldrd	r2, r3, [r0, #32]
    b48a:	ldrd	r5, r6, [sp, #40]	; 0x28
    b48e:	cmp	r6, r3
    b490:	it	eq
    b492:	cmpeq	r5, r2
    b494:	bne.n	b56c <_start@@Base+0x8e8>
    b496:	bl	1a950 <next_cache_extent@@Base>
    b49a:	ldr	r3, [sp, #92]	; 0x5c
    b49c:	ldr	r2, [sp, #40]	; 0x28
    b49e:	subs	r2, r3, r2
    b4a0:	asrs	r3, r2, #31
    b4a2:	mov	r8, r0
    b4a4:	cmp	r0, #0
    b4a6:	beq.n	b530 <_start@@Base+0x8ac>
    b4a8:	ldrd	r1, r0, [r4, #24]
    b4ac:	ldr	r5, [r4, #32]
    b4ae:	ldrd	r6, r7, [r8, #24]
    b4b2:	adds.w	lr, r1, r5
    b4b6:	ldr	r5, [r4, #36]	; 0x24
    b4b8:	adc.w	ip, r0, r5
    b4bc:	adds.w	r5, lr, r2
    b4c0:	str	r5, [sp, #128]	; 0x80
    b4c2:	adc.w	r5, ip, r3
    b4c6:	str	r5, [sp, #132]	; 0x84
    b4c8:	ldrd	fp, ip, [sp, #128]	; 0x80
    b4cc:	cmp	ip, r7
    b4ce:	it	eq
    b4d0:	cmpeq	fp, r6
    b4d2:	bcc.n	b530 <_start@@Base+0x8ac>
    b4d4:	ldrd	r3, r2, [r8, #32]
    b4d8:	adds	r3, r6, r3
    b4da:	adc.w	r2, r7, r2
    b4de:	subs	r3, r3, r1
    b4e0:	sbc.w	r2, r2, r0
    b4e4:	mov	r1, r8
    b4e6:	mov	r0, sl
    b4e8:	strd	r3, r2, [r4, #32]
    b4ec:	bl	1a954 <remove_cache_extent@@Base>
    b4f0:	mov	r0, r8
    b4f2:	b.n	b330 <_start@@Base+0x6ac>
    b4f4:	ldrd	r5, r6, [r4, #24]
    b4f8:	cmp	r6, r3
    b4fa:	it	eq
    b4fc:	cmpeq	r5, r2
    b4fe:	bcs.n	b516 <_start@@Base+0x892>
    b500:	ldr	r0, [pc, #152]	; (b59c <_start@@Base+0x918>)
    b502:	add	r0, pc
    b504:	bl	1bd1c <__btrfs_error@@Base>
    b508:	mvn.w	r0, #27
    b50c:	add	sp, #148	; 0x94
    b50e:	vpop	{d8-d9}
    b512:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b516:	subs	r0, r5, r2
    b518:	sbc.w	r1, r6, r3
    b51c:	strd	r0, r1, [r4, #24]
    b520:	ldrd	r1, r0, [r4, #32]
    b524:	adds	r1, r1, r2
    b526:	adc.w	r0, r3, r0
    b52a:	strd	r1, r0, [r4, #32]
    b52e:	b.n	b420 <_start@@Base+0x79c>
    b530:	ldrd	r1, r0, [r4, #32]
    b534:	adds	r1, r1, r2
    b536:	adc.w	r0, r3, r0
    b53a:	strd	r1, r0, [r4, #32]
    b53e:	b.n	b2aa <_start@@Base+0x626>
    b540:	cbz	r3, b568 <_start@@Base+0x8e4>
    b542:	ldrd	r3, r4, [sp, #32]
    b546:	ldrd	r1, r2, [sp, #24]
    b54a:	cmp	r4, r2
    b54c:	it	eq
    b54e:	cmpeq	r3, r1
    b550:	ite	cc
    b552:	movcc	r3, #1
    b554:	movcs	r3, #0
    b556:	ldr	r1, [pc, #72]	; (b5a0 <_start@@Base+0x91c>)
    b558:	movw	r2, #614	; 0x266
    b55c:	ldr	r0, [pc, #68]	; (b5a4 <_start@@Base+0x920>)
    b55e:	add	r1, pc
    b560:	add	r0, pc
    b562:	bl	b0ee <_start@@Base+0x46a>
    b566:	b.n	b2aa <_start@@Base+0x626>
    b568:	ldr	r3, [sp, #200]	; 0xc8
    b56a:	b.n	b556 <_start@@Base+0x8d2>
    b56c:	mvn.w	r0, #1
    b570:	b.n	b50c <_start@@Base+0x888>
    b572:	nop
    b574:	smull	r0, r0, r8, r5
    b578:	lsls	r4, r1, #10
    b57a:	movs	r0, r0
    b57c:	subs	r4, #131	; 0x83
    b57e:	movs	r3, r0
    b580:	adds	r1, #195	; 0xc3
    b582:	movs	r3, r0
    b584:	adds	r1, #131	; 0x83
    b586:	movs	r3, r0
    b588:	subs	r3, #187	; 0xbb
    b58a:	movs	r3, r0
    b58c:	adds	r1, #122	; 0x7a
    b58e:	movs	r3, r0
    b590:	adds	r1, #127	; 0x7f
    b592:	movs	r3, r0
    b594:	subs	r2, #239	; 0xef
    b596:	movs	r3, r0
    b598:	adds	r1, #51	; 0x33
    b59a:	movs	r3, r0
    b59c:	cmp	r7, #182	; 0xb6
    b59e:	movs	r3, r0
    b5a0:	subs	r0, #231	; 0xe7
    b5a2:	movs	r3, r0
    b5a4:	cmp	r7, #43	; 0x2b
    b5a6:	movs	r3, r0
    b5a8:	ldr	r2, [pc, #60]	; (b5e8 <_start@@Base+0x964>)
    b5aa:	movs	r1, #16
    b5ac:	ldr	r3, [pc, #60]	; (b5ec <_start@@Base+0x968>)
    b5ae:	push	{r4, lr}
    b5b0:	add	r2, pc
    b5b2:	sub	sp, #72	; 0x48
    b5b4:	add	r4, sp, #4
    b5b6:	ldr	r3, [r2, r3]
    b5b8:	mov	r0, r4
    b5ba:	ldr	r3, [r3, #0]
    b5bc:	str	r3, [sp, #68]	; 0x44
    b5be:	mov.w	r3, #0
    b5c2:	blx	8e98 <backtrace@plt>
    b5c6:	movs	r2, #2
    b5c8:	mov	r1, r0
    b5ca:	mov	r0, r4
    b5cc:	blx	9214 <backtrace_symbols_fd@plt>
    b5d0:	ldr	r2, [pc, #28]	; (b5f0 <_start@@Base+0x96c>)
    b5d2:	ldr	r3, [pc, #24]	; (b5ec <_start@@Base+0x968>)
    b5d4:	add	r2, pc
    b5d6:	ldr	r3, [r2, r3]
    b5d8:	ldr	r2, [r3, #0]
    b5da:	ldr	r3, [sp, #68]	; 0x44
    b5dc:	eors	r2, r3
    b5de:	beq.n	b5e4 <_start@@Base+0x960>
    b5e0:	blx	8c90 <__stack_chk_fail@plt>
    b5e4:	add	sp, #72	; 0x48
    b5e6:	pop	{r4, pc}
    b5e8:			; <UNDEFINED> instruction: 0xf7680005
    b5ec:	lsls	r0, r1, #10
    b5ee:	movs	r0, r0
    b5f0:			; <UNDEFINED> instruction: 0xf7440005
    b5f4:	movs	r3, #25
    b5f6:	muls	r2, r3
    b5f8:	movs	r3, #17
    b5fa:	adds	r2, #101	; 0x65
    b5fc:	b.w	1bbd0 <write_extent_buffer@@Base>
    b600:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b604:	mov	r9, r2
    b606:	ldr	r2, [pc, #220]	; (b6e4 <_start@@Base+0xa60>)
    b608:	sub	sp, #24
    b60a:	ldr	r3, [pc, #220]	; (b6e8 <_start@@Base+0xa64>)
    b60c:	mov	r4, r1
    b60e:	add	r2, pc
    b610:	ldrd	r6, r5, [sp, #56]	; 0x38
    b614:	ldrd	r8, r7, [sp, #64]	; 0x40
    b618:	mov	sl, r0
    b61a:	ldr	r3, [r2, r3]
    b61c:	movs	r2, #1
    b61e:	ldr	r3, [r3, #0]
    b620:	str	r3, [sp, #20]
    b622:	mov.w	r3, #0
    b626:	ldr	r3, [r1, #0]
    b628:	str.w	r5, [sp, #13]
    b62c:	adds	r3, #1
    b62e:	str.w	r3, [r0, #192]	; 0xc0
    b632:	ldr.w	r3, [r9]
    b636:	str.w	r6, [sp, #9]
    b63a:	subs	r3, #48	; 0x30
    b63c:	str.w	r3, [r9]
    b640:	movs	r3, #204	; 0xcc
    b642:	strb.w	r3, [sp, #8]
    b646:	movs	r3, #0
    b648:	strd	r2, r3, [sp]
    b64c:	ldr	r2, [r1, #0]
    b64e:	mov	r1, sp
    b650:	bl	b5f4 <_start@@Base+0x970>
    b654:	ldr	r3, [r4, #0]
    b656:	add.w	r0, sl, #96	; 0x60
    b65a:	movs	r1, #25
    b65c:	ldr.w	r2, [r9]
    b660:	mov.w	ip, #48	; 0x30
    b664:	mla	r3, r1, r3, r0
    b668:	str.w	r2, [r3, #118]	; 0x76
    b66c:	movs	r2, #0
    b66e:	ldr	r3, [r4, #0]
    b670:	mla	r3, r1, r3, r0
    b674:	strb.w	ip, [r3, #122]	; 0x7a
    b678:	mov.w	ip, #1
    b67c:	strb.w	r2, [r3, #123]	; 0x7b
    b680:	strb.w	r2, [r3, #124]	; 0x7c
    b684:	strb.w	r2, [r3, #125]	; 0x7d
    b688:	ldr	r3, [r4, #0]
    b68a:	mla	r3, r1, r3, r0
    b68e:	ldr.w	r1, [r3, #118]	; 0x76
    b692:	adds	r1, #101	; 0x65
    b694:	adds	r3, r0, r1
    b696:	strb	r2, [r3, #8]
    b698:	strb	r2, [r3, #10]
    b69a:	strb	r2, [r3, #11]
    b69c:	strb	r2, [r3, #12]
    b69e:	strb	r2, [r3, #13]
    b6a0:	strb	r2, [r3, #14]
    b6a2:	strb	r2, [r3, #15]
    b6a4:	str	r5, [r3, #20]
    b6a6:	movs	r5, #3
    b6a8:	strb.w	ip, [r3, #9]
    b6ac:	str.w	r8, [r3, #24]
    b6b0:	str	r7, [r3, #28]
    b6b2:	str	r6, [r3, #16]
    b6b4:	strb	r5, [r0, r1]
    b6b6:	strb	r2, [r3, #1]
    b6b8:	strb	r2, [r3, #2]
    b6ba:	strb	r2, [r3, #3]
    b6bc:	strb	r2, [r3, #4]
    b6be:	strb	r2, [r3, #5]
    b6c0:	strb	r2, [r3, #6]
    b6c2:	strb	r2, [r3, #7]
    b6c4:	ldr	r3, [r4, #0]
    b6c6:	ldr	r2, [pc, #36]	; (b6ec <_start@@Base+0xa68>)
    b6c8:	add	r3, ip
    b6ca:	str	r3, [r4, #0]
    b6cc:	ldr	r3, [pc, #24]	; (b6e8 <_start@@Base+0xa64>)
    b6ce:	add	r2, pc
    b6d0:	ldr	r3, [r2, r3]
    b6d2:	ldr	r2, [r3, #0]
    b6d4:	ldr	r3, [sp, #20]
    b6d6:	eors	r2, r3
    b6d8:	beq.n	b6de <_start@@Base+0xa5a>
    b6da:	blx	8c90 <__stack_chk_fail@plt>
    b6de:	add	sp, #24
    b6e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b6e4:			; <UNDEFINED> instruction: 0xf70a0005
    b6e8:	lsls	r0, r1, #10
    b6ea:	movs	r0, r0
    b6ec:	movw	r0, #43013	; 0xa805
    b6f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b6f4:	mov	r9, r2
    b6f6:	ldr	r2, [pc, #124]	; (b774 <_start@@Base+0xaf0>)
    b6f8:	mov	r8, r3
    b6fa:	ldr	r3, [pc, #124]	; (b778 <_start@@Base+0xaf4>)
    b6fc:	sub	sp, #52	; 0x34
    b6fe:	add	r2, pc
    b700:	add	r4, sp, #12
    b702:	mov	r6, r1
    b704:	mov	r7, r0
    b706:	ldr	r3, [r2, r3]
    b708:	adds	r1, #32
    b70a:	ldrh.w	r0, [r6, #196]	; 0xc4
    b70e:	mov	r2, r4
    b710:	ldr	r3, [r3, #0]
    b712:	str	r3, [sp, #44]	; 0x2c
    b714:	mov.w	r3, #0
    b718:	mov.w	r3, #4064	; 0xfe0
    b71c:	bl	208e6 <btrfs_csum_data@@Base>
    b720:	ldmia	r4!, {r0, r1, r2, r3}
    b722:	mov	r5, r6
    b724:	stmia	r5!, {r0, r1, r2, r3}
    b726:	ldmia.w	r4, {r0, r1, r2, r3}
    b72a:	stmia.w	r5, {r0, r1, r2, r3}
    b72e:	mov.w	r2, #4096	; 0x1000
    b732:	mov	r1, r6
    b734:	mov	r0, r7
    b736:	strd	r9, r8, [sp]
    b73a:	blx	8ffc <pwrite64@plt>
    b73e:	cmp.w	r0, #4096	; 0x1000
    b742:	bge.n	b764 <_start@@Base+0xae0>
    b744:	cmp	r0, #0
    b746:	bge.n	b768 <_start@@Base+0xae4>
    b748:	blx	8f58 <__errno_location@plt>
    b74c:	ldr	r0, [r0, #0]
    b74e:	negs	r0, r0
    b750:	ldr	r2, [pc, #40]	; (b77c <_start@@Base+0xaf8>)
    b752:	ldr	r3, [pc, #36]	; (b778 <_start@@Base+0xaf4>)
    b754:	add	r2, pc
    b756:	ldr	r3, [r2, r3]
    b758:	ldr	r2, [r3, #0]
    b75a:	ldr	r3, [sp, #44]	; 0x2c
    b75c:	eors	r2, r3
    b75e:	beq.n	b76e <_start@@Base+0xaea>
    b760:	blx	8c90 <__stack_chk_fail@plt>
    b764:	movs	r0, #0
    b766:	b.n	b750 <_start@@Base+0xacc>
    b768:	mvn.w	r0, #4
    b76c:	b.n	b750 <_start@@Base+0xacc>
    b76e:	add	sp, #52	; 0x34
    b770:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b774:			; <UNDEFINED> instruction: 0xf61a0005
    b778:	lsls	r0, r1, #10
    b77a:	movs	r0, r0
    b77c:	rsb	r0, r4, #8716288	; 0x850000
    b780:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b784:	mov	r7, r1
    b786:	vpush	{d8}
    b78a:	mov	r5, r2
    b78c:	ldr	r1, [pc, #504]	; (b988 <_start@@Base+0xd04>)
    b78e:	mov	r6, r3
    b790:	ldr	r2, [pc, #504]	; (b98c <_start@@Base+0xd08>)
    b792:	add	r1, pc
    b794:	vmov	s16, r0
    b798:	sub.w	sp, sp, #4160	; 0x1040
    b79c:	sub	sp, #12
    b79e:	ldr	r2, [r1, r2]
    b7a0:	add.w	r3, sp, #4192	; 0x1060
    b7a4:	adds	r3, #24
    b7a6:	ldr.w	r8, [r3]
    b7aa:	add.w	r3, sp, #4160	; 0x1040
    b7ae:	ldr	r2, [r2, #0]
    b7b0:	str	r2, [r3, #4]
    b7b2:	mov.w	r2, #0
    b7b6:	adds	r3, #4
    b7b8:	add	r3, sp, #72	; 0x48
    b7ba:	str	r3, [sp, #8]
    b7bc:	sub.w	fp, r3, #4
    b7c0:	ldrd	r2, r3, [r5, #184]	; 0xb8
    b7c4:	mov	r1, fp
    b7c6:	strd	r2, r3, [sp]
    b7ca:	mov.w	r2, #4096	; 0x1000
    b7ce:	blx	8dcc <pread64@plt>
    b7d2:	cmp.w	r0, #4096	; 0x1000
    b7d6:	bge.n	b802 <_start@@Base+0xb7e>
    b7d8:	cmp	r0, #0
    b7da:	bge.w	b972 <_start@@Base+0xcee>
    b7de:	blx	8f58 <__errno_location@plt>
    b7e2:	ldr	r0, [r0, #0]
    b7e4:	negs	r0, r0
    b7e6:	ldr	r1, [pc, #424]	; (b990 <_start@@Base+0xd0c>)
    b7e8:	add.w	r3, sp, #4160	; 0x1040
    b7ec:	ldr	r2, [pc, #412]	; (b98c <_start@@Base+0xd08>)
    b7ee:	adds	r3, #4
    b7f0:	add	r1, pc
    b7f2:	ldr	r2, [r1, r2]
    b7f4:	ldr	r1, [r2, #0]
    b7f6:	ldr	r2, [r3, #0]
    b7f8:	eors	r1, r2
    b7fa:	beq.w	b978 <_start@@Base+0xcf4>
    b7fe:	blx	8c90 <__stack_chk_fail@plt>
    b802:	ldr	r3, [r6, #0]
    b804:	add	r1, sp, #16
    b806:	movs	r2, #216	; 0xd8
    b808:	mov.w	r0, #1
    b80c:	adds	r3, #1
    b80e:	str.w	r3, [r7, #192]	; 0xc0
    b812:	ldr.w	r3, [r8]
    b816:	movs	r4, #0
    b818:	strb	r2, [r1, #8]
    b81a:	mov.w	r9, #1
    b81e:	subs	r3, #98	; 0x62
    b820:	strb.w	r0, [sp, #25]
    b824:	str.w	r3, [r8]
    b828:	mov	r0, r7
    b82a:	ldr	r2, [r6, #0]
    b82c:	add	r3, sp, #40	; 0x28
    b82e:	mov.w	sl, #0
    b832:	str	r3, [sp, #12]
    b834:	strd	r9, sl, [sp, #16]
    b838:	strb.w	r4, [sp, #26]
    b83c:	strb.w	r4, [sp, #27]
    b840:	strb.w	r4, [sp, #28]
    b844:	strb.w	r4, [sp, #29]
    b848:	strb.w	r4, [sp, #30]
    b84c:	strb.w	r4, [sp, #31]
    b850:	strb.w	r4, [sp, #32]
    b854:	bl	b5f4 <_start@@Base+0x970>
    b858:	ldr	r2, [r6, #0]
    b85a:	movs	r1, #25
    b85c:	ldr.w	r0, [r8]
    b860:	add.w	r8, r7, #96	; 0x60
    b864:	mov.w	r3, #98	; 0x62
    b868:	mla	r2, r1, r2, r8
    b86c:	str.w	r0, [r2, #118]	; 0x76
    b870:	ldr	r2, [r6, #0]
    b872:	mla	r2, r1, r2, r8
    b876:	strb.w	r3, [r2, #122]	; 0x7a
    b87a:	strb.w	r4, [r2, #123]	; 0x7b
    b87e:	strb.w	r4, [r2, #124]	; 0x7c
    b882:	strb.w	r4, [r2, #125]	; 0x7d
    b886:	ldr	r2, [r6, #0]
    b888:	ldr	r3, [sp, #12]
    b88a:	mla	r2, r1, r2, r8
    b88e:	subs	r1, r3, #4
    b890:	str	r1, [sp, #12]
    b892:	mov	r0, r1
    b894:	ldr.w	sl, [r2, #118]	; 0x76
    b898:	blx	9030 <uuid_generate@plt>
    b89c:	ldr	r1, [sp, #12]
    b89e:	movs	r3, #16
    b8a0:	add.w	r2, sl, #167	; 0xa7
    b8a4:	mov	r0, r7
    b8a6:	bl	1bbd0 <write_extent_buffer@@Base>
    b8aa:	ldr	r3, [sp, #8]
    b8ac:	add.w	r0, r5, #104	; 0x68
    b8b0:	add.w	r9, sl, #101	; 0x65
    b8b4:	sub.w	r1, r3, #20
    b8b8:	str	r1, [sp, #8]
    b8ba:	blx	90b8 <uuid_parse@plt>
    b8be:	ldr	r1, [sp, #8]
    b8c0:	add.w	r2, sl, #183	; 0xb7
    b8c4:	movs	r3, #16
    b8c6:	mov	r0, r7
    b8c8:	bl	1bbd0 <write_extent_buffer@@Base>
    b8cc:	add.w	r3, r8, r9
    b8d0:	mov.w	r0, #1
    b8d4:	strb.w	r0, [r8, r9]
    b8d8:	strb	r4, [r3, #1]
    b8da:	mov	r0, r7
    b8dc:	strb	r4, [r3, #2]
    b8de:	strb	r4, [r3, #3]
    b8e0:	strb	r4, [r3, #4]
    b8e2:	strb	r4, [r3, #5]
    b8e4:	strb	r4, [r3, #6]
    b8e6:	strb	r4, [r3, #7]
    b8e8:	strb.w	r4, [r3, #44]	; 0x2c
    b8ec:	strb.w	r4, [r3, #45]	; 0x2d
    b8f0:	strb.w	r4, [r3, #46]	; 0x2e
    b8f4:	strb.w	r4, [r3, #47]	; 0x2f
    b8f8:	strb.w	r4, [r3, #48]	; 0x30
    b8fc:	strb.w	r4, [r3, #49]	; 0x31
    b900:	strb.w	r4, [r3, #50]	; 0x32
    b904:	strb.w	r4, [r3, #51]	; 0x33
    b908:	ldrd	r1, r2, [r5, #24]
    b90c:	strb	r4, [r3, #16]
    b90e:	strb	r4, [r3, #17]
    b910:	str	r1, [r3, #8]
    b912:	addw	r1, sp, #269	; 0x10d
    b916:	str	r2, [r3, #12]
    b918:	movs	r2, #64	; 0x40
    b91a:	strb	r4, [r3, #20]
    b91c:	strb	r2, [r3, #18]
    b91e:	movs	r2, #2
    b920:	strb	r4, [r3, #21]
    b922:	strb	r2, [r3, #19]
    b924:	strb	r4, [r3, #22]
    b926:	strb	r4, [r3, #23]
    b928:	ldr	r2, [r5, #8]
    b92a:	str	r2, [r3, #24]
    b92c:	ldr	r2, [r5, #8]
    b92e:	str	r2, [r3, #28]
    b930:	ldr	r2, [r5, #8]
    b932:	strb.w	r4, [r3, #36]	; 0x24
    b936:	strb.w	r4, [r3, #37]	; 0x25
    b93a:	str	r2, [r3, #32]
    b93c:	mov	r2, r9
    b93e:	strb.w	r4, [r3, #38]	; 0x26
    b942:	strb.w	r4, [r3, #39]	; 0x27
    b946:	strb.w	r4, [r3, #40]	; 0x28
    b94a:	strb.w	r4, [r3, #41]	; 0x29
    b94e:	strb.w	r4, [r3, #42]	; 0x2a
    b952:	strb.w	r4, [r3, #43]	; 0x2b
    b956:	movs	r3, #98	; 0x62
    b958:	bl	1bbba <read_extent_buffer@@Base>
    b95c:	ldrd	r2, r3, [r5, #184]	; 0xb8
    b960:	vmov	r0, s16
    b964:	mov	r1, fp
    b966:	bl	b6f0 <_start@@Base+0xa6c>
    b96a:	ldr	r3, [r6, #0]
    b96c:	adds	r3, #1
    b96e:	str	r3, [r6, #0]
    b970:	b.n	b7e6 <_start@@Base+0xb62>
    b972:	mvn.w	r0, #4
    b976:	b.n	b7e6 <_start@@Base+0xb62>
    b978:	add.w	sp, sp, #4160	; 0x1040
    b97c:	add	sp, #12
    b97e:	vpop	{d8}
    b982:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b986:	nop
    b988:			; <UNDEFINED> instruction: 0xf5860005
    b98c:	lsls	r0, r1, #10
    b98e:	movs	r0, r0
    b990:			; <UNDEFINED> instruction: 0xf5280005
    b994:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b998:	sub.w	sp, sp, #4128	; 0x1020
    b99c:	sub	sp, #4
    b99e:	mov	r8, r3
    b9a0:	add.w	r3, sp, #4160	; 0x1040
    b9a4:	mov	r5, r1
    b9a6:	adds	r3, #8
    b9a8:	ldr	r1, [pc, #380]	; (bb28 <_start@@Base+0xea4>)
    b9aa:	ldr.w	fp, [r3]
    b9ae:	add.w	r3, sp, #4160	; 0x1040
    b9b2:	adds	r3, #12
    b9b4:	mov	r9, r2
    b9b6:	ldr	r2, [pc, #372]	; (bb2c <_start@@Base+0xea8>)
    b9b8:	add	r1, pc
    b9ba:	ldr	r3, [r3, #0]
    b9bc:	add	r6, sp, #32
    b9be:	subs	r4, r6, #4
    b9c0:	mov	r7, r0
    b9c2:	add.w	sl, r5, #104	; 0x68
    b9c6:	str	r3, [sp, #0]
    b9c8:	add.w	r3, sp, #4096	; 0x1000
    b9cc:	ldr	r2, [r1, r2]
    b9ce:	mov	r0, r4
    b9d0:	movs	r1, #0
    b9d2:	adds	r3, #28
    b9d4:	ldr	r2, [r2, #0]
    b9d6:	str	r2, [r3, #0]
    b9d8:	mov.w	r2, #0
    b9dc:	mov.w	r2, #4096	; 0x1000
    b9e0:	blx	8f98 <memset@plt+0x4>
    b9e4:	ldr	r3, [r5, #8]
    b9e6:	negs	r2, r3
    b9e8:	ldr	r3, [r5, #24]
    b9ea:	ands	r3, r2
    b9ec:	ldrb.w	r2, [r5, #104]	; 0x68
    b9f0:	str	r3, [r5, #24]
    b9f2:	cbz	r2, ba3e <_start@@Base+0xdba>
    b9f4:	add	r1, sp, #60	; 0x3c
    b9f6:	mov	r0, sl
    b9f8:	str	r1, [sp, #4]
    b9fa:	blx	90b8 <uuid_parse@plt>
    b9fe:	ldr	r1, [sp, #4]
    ba00:	cbz	r0, ba2a <_start@@Base+0xda6>
    ba02:	ldr	r0, [pc, #300]	; (bb30 <_start@@Base+0xeac>)
    ba04:	mov	r1, sl
    ba06:	add	r0, pc
    ba08:	bl	1bd1c <__btrfs_error@@Base>
    ba0c:	mvn.w	r0, #21
    ba10:	ldr	r1, [pc, #288]	; (bb34 <_start@@Base+0xeb0>)
    ba12:	add.w	r3, sp, #4096	; 0x1000
    ba16:	ldr	r2, [pc, #276]	; (bb2c <_start@@Base+0xea8>)
    ba18:	adds	r3, #28
    ba1a:	add	r1, pc
    ba1c:	ldr	r2, [r1, r2]
    ba1e:	ldr	r1, [r2, #0]
    ba20:	ldr	r2, [r3, #0]
    ba22:	eors	r1, r2
    ba24:	beq.n	bb1a <_start@@Base+0xe96>
    ba26:	blx	8c90 <__stack_chk_fail@plt>
    ba2a:	mov	r0, sl
    ba2c:	str	r1, [sp, #4]
    ba2e:	bl	33860 <test_uuid_unique@@Base>
    ba32:	ldr	r1, [sp, #4]
    ba34:	cbnz	r0, ba52 <_start@@Base+0xdce>
    ba36:	ldr	r0, [pc, #256]	; (bb38 <_start@@Base+0xeb4>)
    ba38:	mov	r1, sl
    ba3a:	add	r0, pc
    ba3c:	b.n	ba08 <_start@@Base+0xd84>
    ba3e:	add	r0, sp, #60	; 0x3c
    ba40:	str	r0, [sp, #4]
    ba42:	blx	9030 <uuid_generate@plt>
    ba46:	ldr	r0, [sp, #4]
    ba48:	mov	r1, sl
    ba4a:	blx	8b1c <uuid_unparse@plt>
    ba4e:	ldr	r0, [sp, #4]
    ba50:	mov	r1, r0
    ba52:	addw	r0, sp, #599	; 0x257
    ba56:	blx	9198 <uuid_copy@plt>
    ba5a:	sub.w	r0, r6, #20
    ba5e:	str	r0, [sp, #4]
    ba60:	blx	9030 <uuid_generate@plt>
    ba64:	add.w	r1, r5, #141	; 0x8d
    ba68:	ldr	r0, [sp, #4]
    ba6a:	blx	8b1c <uuid_unparse@plt>
    ba6e:	ldr.w	r3, [r5, #184]	; 0xb8
    ba72:	ldr	r1, [pc, #176]	; (bb24 <_start@@Base+0xea0>)
    ba74:	movs	r2, #0
    ba76:	strd	r2, r9, [r4, #76]	; 0x4c
    ba7a:	str	r3, [r4, #48]	; 0x30
    ba7c:	ldr.w	r3, [r5, #188]	; 0xbc
    ba80:	str	r1, [r4, #64]	; 0x40
    ba82:	sub.w	r1, r1, #82313216	; 0x4e80000
    ba86:	sub.w	r1, r1, #60928	; 0xee00
    ba8a:	strd	r8, fp, [r4, #84]	; 0x54
    ba8e:	subs	r1, #187	; 0xbb
    ba90:	str	r3, [r4, #52]	; 0x34
    ba92:	movs	r3, #1
    ba94:	strd	r3, r2, [r4, #136]	; 0x88
    ba98:	strd	r1, r3, [r4, #68]	; 0x44
    ba9c:	movs	r1, #6
    ba9e:	ldr	r3, [sp, #0]
    baa0:	str	r3, [r4, #92]	; 0x5c
    baa2:	ldr	r3, [r5, #24]
    baa4:	str	r3, [r4, #112]	; 0x70
    baa6:	ldr	r3, [r5, #28]
    baa8:	str	r3, [r4, #116]	; 0x74
    baaa:	ldr	r3, [r5, #4]
    baac:	muls	r1, r3
    baae:	strd	r3, r3, [r4, #148]	; 0x94
    bab2:	ldr	r3, [r5, #12]
    bab4:	str.w	r3, [r4, #156]	; 0x9c
    bab8:	strd	r1, r2, [r4, #120]	; 0x78
    babc:	ldr	r3, [r5, #32]
    babe:	ldr	r2, [r5, #8]
    bac0:	strh.w	r3, [r4, #196]	; 0xc4
    bac4:	str.w	r2, [r4, #144]	; 0x90
    bac8:	mov.w	r2, #4294967295	; 0xffffffff
    bacc:	strb.w	r2, [r6, #551]	; 0x227
    bad0:	strb.w	r2, [r6, #552]	; 0x228
    bad4:	strb.w	r2, [r6, #553]	; 0x229
    bad8:	ldr	r3, [r5, #16]
    bada:	ldr	r1, [r5, #0]
    badc:	strb.w	r2, [r6, #554]	; 0x22a
    bae0:	str.w	r3, [r4, #188]	; 0xbc
    bae4:	ldr	r3, [r5, #20]
    bae6:	strb.w	r2, [r6, #555]	; 0x22b
    baea:	strb.w	r2, [r6, #556]	; 0x22c
    baee:	strb.w	r2, [r6, #557]	; 0x22d
    baf2:	strb.w	r2, [r6, #558]	; 0x22e
    baf6:	str.w	r3, [r4, #192]	; 0xc0
    bafa:	cbz	r1, bb06 <_start@@Base+0xe82>
    bafc:	addw	r0, r6, #295	; 0x127
    bb00:	movs	r2, #255	; 0xff
    bb02:	bl	34420 <__strncpy_null@@Base>
    bb06:	movs	r3, #0
    bb08:	mov	r1, r4
    bb0a:	str.w	r3, [r4, #160]	; 0xa0
    bb0e:	mov	r0, r7
    bb10:	ldrd	r2, r3, [r5, #184]	; 0xb8
    bb14:	bl	b6f0 <_start@@Base+0xa6c>
    bb18:	b.n	ba10 <_start@@Base+0xd8c>
    bb1a:	add.w	sp, sp, #4128	; 0x1020
    bb1e:	add	sp, #4
    bb20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bb24:	tst	r1, r4
    bb26:	strh	r0, [r1, r1]
    bb28:	bfi	r0, r0, #0, #6
    bb2c:	lsls	r0, r1, #10
    bb2e:	movs	r0, r0
    bb30:	adds	r4, #134	; 0x86
    bb32:	movs	r3, r0
    bb34:			; <UNDEFINED> instruction: 0xf2fe0005
    bb38:	adds	r4, #107	; 0x6b
    bb3a:	movs	r3, r0
    bb3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb40:	sub	sp, #476	; 0x1dc
    bb42:	mov	r9, r3
    bb44:	mov	r6, r2
    bb46:	ldr	r3, [sp, #520]	; 0x208
    bb48:	add	r4, sp, #28
    bb4a:	ldr	r2, [pc, #264]	; (bc54 <_start@@Base+0xfd0>)
    bb4c:	mov	r7, r0
    bb4e:	mov	sl, r1
    bb50:	movs	r1, #0
    bb52:	str	r3, [sp, #4]
    bb54:	add	r2, pc
    bb56:	ldr	r3, [pc, #256]	; (bc58 <_start@@Base+0xfd4>)
    bb58:	movs	r5, #0
    bb5a:	ldr.w	fp, [sp, #524]	; 0x20c
    bb5e:	mov.w	r8, #1
    bb62:	ldr	r3, [r2, r3]
    bb64:	ldr	r2, [r6, #0]
    bb66:	ldr	r3, [r3, #0]
    bb68:	str	r3, [sp, #468]	; 0x1d4
    bb6a:	mov.w	r3, #0
    bb6e:	mvn.w	r3, #438	; 0x1b6
    bb72:	adds	r2, #1
    bb74:	str.w	r2, [r0, #192]	; 0xc0
    bb78:	ldr.w	r2, [r9]
    bb7c:	mov	r0, r4
    bb7e:	add	r2, r3
    bb80:	str.w	r2, [r9]
    bb84:	movw	r2, #439	; 0x1b7
    bb88:	blx	8f98 <memset@plt+0x4>
    bb8c:	ldr	r3, [sp, #4]
    bb8e:	movs	r2, #3
    bb90:	str	r2, [r4, #16]
    bb92:	ldr.w	r2, [sl]
    bb96:	movw	r1, #16877	; 0x41ed
    bb9a:	str	r1, [r4, #52]	; 0x34
    bb9c:	add	r1, sp, #8
    bb9e:	strd	r3, fp, [r4, #176]	; 0xb0
    bba2:	movs	r3, #132	; 0x84
    bba4:	str	r2, [r4, #24]
    bba6:	mov	r0, r7
    bba8:	strb	r3, [r1, #8]
    bbaa:	str.w	r2, [r4, #192]	; 0xc0
    bbae:	ldrd	r2, r3, [sp, #512]	; 0x200
    bbb2:	str.w	r8, [r4]
    bbb6:	str.w	r8, [r4, #40]	; 0x28
    bbba:	strd	r2, r3, [sp, #8]
    bbbe:	ldr	r2, [r6, #0]
    bbc0:	str.w	r8, [r4, #216]	; 0xd8
    bbc4:	str.w	r8, [r4, #160]	; 0xa0
    bbc8:	strb.w	r5, [sp, #17]
    bbcc:	strb.w	r5, [sp, #18]
    bbd0:	strb.w	r5, [sp, #19]
    bbd4:	strb.w	r5, [sp, #20]
    bbd8:	strb.w	r5, [sp, #21]
    bbdc:	strb.w	r5, [sp, #22]
    bbe0:	strb.w	r5, [sp, #23]
    bbe4:	strb.w	r5, [sp, #24]
    bbe8:	bl	b5f4 <_start@@Base+0x970>
    bbec:	ldr	r3, [r6, #0]
    bbee:	add.w	r2, r7, #96	; 0x60
    bbf2:	movs	r1, #25
    bbf4:	ldr.w	r0, [r9]
    bbf8:	mla	r3, r1, r3, r2
    bbfc:	str.w	r0, [r3, #118]	; 0x76
    bc00:	mvn.w	r0, #72	; 0x48
    bc04:	ldr	r3, [r6, #0]
    bc06:	mla	r3, r1, r3, r2
    bc0a:	strb.w	r0, [r3, #122]	; 0x7a
    bc0e:	mov	r0, r7
    bc10:	strb.w	r8, [r3, #123]	; 0x7b
    bc14:	strb.w	r5, [r3, #124]	; 0x7c
    bc18:	strb.w	r5, [r3, #125]	; 0x7d
    bc1c:	ldr	r3, [r6, #0]
    bc1e:	mla	r3, r1, r3, r2
    bc22:	mov	r1, r4
    bc24:	ldr.w	r2, [r3, #118]	; 0x76
    bc28:	movw	r3, #439	; 0x1b7
    bc2c:	adds	r2, #101	; 0x65
    bc2e:	bl	1bbd0 <write_extent_buffer@@Base>
    bc32:	ldr	r3, [r6, #0]
    bc34:	ldr	r2, [pc, #36]	; (bc5c <_start@@Base+0xfd8>)
    bc36:	add	r3, r8
    bc38:	str	r3, [r6, #0]
    bc3a:	ldr	r3, [pc, #28]	; (bc58 <_start@@Base+0xfd4>)
    bc3c:	add	r2, pc
    bc3e:	ldr	r3, [r2, r3]
    bc40:	ldr	r2, [r3, #0]
    bc42:	ldr	r3, [sp, #468]	; 0x1d4
    bc44:	eors	r2, r3
    bc46:	beq.n	bc4c <_start@@Base+0xfc8>
    bc48:	blx	8c90 <__stack_chk_fail@plt>
    bc4c:	add	sp, #476	; 0x1dc
    bc4e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc52:	nop
    bc54:	rsb	r0, r4, #5
    bc58:	lsls	r0, r1, #10
    bc5a:	movs	r0, r0
    bc5c:			; <UNDEFINED> instruction: 0xf0dc0005
    bc60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    bc64:	mov	sl, r2
    bc66:	ldr	r2, [pc, #196]	; (bd2c <_start@@Base+0x10a8>)
    bc68:	sub	sp, #48	; 0x30
    bc6a:	ldr	r3, [pc, #196]	; (bd30 <_start@@Base+0x10ac>)
    bc6c:	mov	r4, r1
    bc6e:	add	r2, pc
    bc70:	mov	r5, r0
    bc72:	ldrd	r7, r6, [sp, #96]	; 0x60
    bc76:	ldr	r3, [r2, r3]
    bc78:	ldrd	r9, r8, [sp, #104]	; 0x68
    bc7c:	ldr	r3, [r3, #0]
    bc7e:	str	r3, [sp, #44]	; 0x2c
    bc80:	mov.w	r3, #0
    bc84:	ldr	r3, [r1, #0]
    bc86:	adds	r3, #1
    bc88:	str.w	r3, [r0, #192]	; 0xc0
    bc8c:	ldr.w	r3, [sl]
    bc90:	subs	r3, #24
    bc92:	str.w	r3, [sl]
    bc96:	movs	r3, #192	; 0xc0
    bc98:	strb.w	r3, [sp, #8]
    bc9c:	ldrd	r2, r3, [sp, #80]	; 0x50
    bca0:	strd	r2, r3, [sp]
    bca4:	ldr	r3, [sp, #88]	; 0x58
    bca6:	ldr	r2, [r1, #0]
    bca8:	mov	r1, sp
    bcaa:	str.w	r3, [sp, #9]
    bcae:	ldr	r3, [sp, #92]	; 0x5c
    bcb0:	str.w	r3, [sp, #13]
    bcb4:	bl	b5f4 <_start@@Base+0x970>
    bcb8:	ldr	r3, [r4, #0]
    bcba:	add.w	r0, r5, #96	; 0x60
    bcbe:	mov.w	ip, #25
    bcc2:	ldr.w	r2, [sl]
    bcc6:	movs	r1, #0
    bcc8:	strd	r9, r8, [sp, #36]	; 0x24
    bccc:	mla	r3, ip, r3, r0
    bcd0:	strd	r7, r6, [sp, #20]
    bcd4:	str.w	r2, [r3, #118]	; 0x76
    bcd8:	movs	r3, #24
    bcda:	ldr	r2, [r4, #0]
    bcdc:	mla	r2, ip, r2, r0
    bce0:	strb.w	r3, [r2, #122]	; 0x7a
    bce4:	strb.w	r1, [r2, #123]	; 0x7b
    bce8:	strb.w	r1, [r2, #124]	; 0x7c
    bcec:	strb.w	r1, [r2, #125]	; 0x7d
    bcf0:	mov.w	r2, #256	; 0x100
    bcf4:	strd	r2, r1, [sp, #28]
    bcf8:	add	r1, sp, #20
    bcfa:	ldr	r2, [r4, #0]
    bcfc:	mla	r2, ip, r2, r0
    bd00:	mov	r0, r5
    bd02:	ldr.w	r2, [r2, #118]	; 0x76
    bd06:	adds	r2, #101	; 0x65
    bd08:	bl	1bbd0 <write_extent_buffer@@Base>
    bd0c:	ldr	r3, [r4, #0]
    bd0e:	ldr	r2, [pc, #36]	; (bd34 <_start@@Base+0x10b0>)
    bd10:	adds	r3, #1
    bd12:	str	r3, [r4, #0]
    bd14:	ldr	r3, [pc, #24]	; (bd30 <_start@@Base+0x10ac>)
    bd16:	add	r2, pc
    bd18:	ldr	r3, [r2, r3]
    bd1a:	ldr	r2, [r3, #0]
    bd1c:	ldr	r3, [sp, #44]	; 0x2c
    bd1e:	eors	r2, r3
    bd20:	beq.n	bd26 <_start@@Base+0x10a2>
    bd22:	blx	8c90 <__stack_chk_fail@plt>
    bd26:	add	sp, #48	; 0x30
    bd28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    bd2c:			; <UNDEFINED> instruction: 0xf0aa0005
    bd30:	lsls	r0, r1, #10
    bd32:	movs	r0, r0
    bd34:	and.w	r0, r2, #5
    bd38:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    bd3c:	mov	r5, r0
    bd3e:	ldr.w	r8, [sp, #32]
    bd42:	mov	r4, r1
    bd44:	mov	r7, r2
    bd46:	mov	r6, r3
    bd48:	ldrh.w	r0, [r8]
    bd4c:	bl	1c6d8 <btrfs_csum_type_size@@Base>
    bd50:	ldrh.w	r3, [r8]
    bd54:	movs	r2, #0
    bd56:	mov	r1, r0
    bd58:	mov	r0, r4
    bd5a:	bl	2097c <csum_tree_block_size@@Base>
    bd5e:	ldr	r2, [r4, #76]	; 0x4c
    bd60:	add.w	r1, r4, #96	; 0x60
    bd64:	mov	r0, r5
    bd66:	strd	r7, r6, [sp]
    bd6a:	blx	8ffc <pwrite64@plt>
    bd6e:	ldr	r3, [r4, #76]	; 0x4c
    bd70:	cmp	r3, r0
    bd72:	bls.n	bd82 <_start@@Base+0x10fe>
    bd74:	cmp	r0, #0
    bd76:	it	ge
    bd78:	mvnge.w	r0, #4
    bd7c:	add	sp, #8
    bd7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bd82:	movs	r0, #0
    bd84:	b.n	bd7c <_start@@Base+0x10f8>
    bd86:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    bd8a:	mov	sl, r2
    bd8c:	ldr	r2, [pc, #168]	; (be38 <_start@@Base+0x11b4>)
    bd8e:	mov	r9, r3
    bd90:	ldr	r3, [pc, #168]	; (be3c <_start@@Base+0x11b8>)
    bd92:	sub	sp, #40	; 0x28
    bd94:	add	r2, pc
    bd96:	add	r7, sp, #4
    bd98:	mov	r6, r1
    bd9a:	mov	r4, r0
    bd9c:	ldr	r3, [r2, r3]
    bd9e:	add.w	r0, r6, #104	; 0x68
    bda2:	mov	r1, r7
    bda4:	ldr	r3, [r3, #0]
    bda6:	str	r3, [sp, #36]	; 0x24
    bda8:	mov.w	r3, #0
    bdac:	blx	90b8 <uuid_parse@plt>
    bdb0:	cbz	r0, bdca <_start@@Base+0x1146>
    bdb2:	mvn.w	r5, #21
    bdb6:	ldr	r2, [pc, #136]	; (be40 <_start@@Base+0x11bc>)
    bdb8:	ldr	r3, [pc, #128]	; (be3c <_start@@Base+0x11b8>)
    bdba:	add	r2, pc
    bdbc:	ldr	r3, [r2, r3]
    bdbe:	ldr	r2, [r3, #0]
    bdc0:	ldr	r3, [sp, #36]	; 0x24
    bdc2:	eors	r2, r3
    bdc4:	beq.n	be30 <_start@@Base+0x11ac>
    bdc6:	blx	8c90 <__stack_chk_fail@plt>
    bdca:	add.w	r8, sp, #20
    bdce:	add.w	r0, r6, #141	; 0x8d
    bdd2:	mov	r1, r8
    bdd4:	blx	90b8 <uuid_parse@plt>
    bdd8:	mov	r5, r0
    bdda:	cmp	r0, #0
    bddc:	bne.n	bdb2 <_start@@Base+0x112e>
    bdde:	ldr	r2, [r6, #4]
    bde0:	mov	r1, r0
    bde2:	add.w	r0, r4, #96	; 0x60
    bde6:	blx	8f98 <memset@plt+0x4>
    bdea:	ldr	r3, [r6, #4]
    bdec:	movs	r2, #1
    bdee:	strd	sl, r9, [r4, #144]	; 0x90
    bdf2:	str	r3, [r4, #76]	; 0x4c
    bdf4:	movs	r3, #0
    bdf6:	strd	r2, r3, [r4, #176]	; 0xb0
    bdfa:	ldrd	r1, r3, [r4, #152]	; 0x98
    bdfe:	bic.w	r0, r3, #4278190080	; 0xff000000
    be02:	ldrd	r2, r3, [sp, #72]	; 0x48
    be06:	orr.w	r1, r1, #1
    be0a:	orr.w	r0, r0, #16777216	; 0x1000000
    be0e:	strd	r1, r0, [r4, #152]	; 0x98
    be12:	mov	r1, r8
    be14:	strd	r2, r3, [r4, #184]	; 0xb8
    be18:	mov	r0, r4
    be1a:	movs	r3, #16
    be1c:	movs	r2, #64	; 0x40
    be1e:	bl	1bbd0 <write_extent_buffer@@Base>
    be22:	movs	r3, #16
    be24:	movs	r2, #32
    be26:	mov	r1, r7
    be28:	mov	r0, r4
    be2a:	bl	1bbd0 <write_extent_buffer@@Base>
    be2e:	b.n	bdb6 <_start@@Base+0x1132>
    be30:	mov	r0, r5
    be32:	add	sp, #40	; 0x28
    be34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    be38:	vaddl.s8	q0, d4, d5
    be3c:	lsls	r0, r1, #10
    be3e:	movs	r0, r0
    be40:	vhadd.s16	d16, d14, d5
    be44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be48:	mov	r4, r3
    be4a:	vpush	{d8}
    be4e:	mov	r6, r2
    be50:	ldr	r2, [pc, #508]	; (c050 <_start@@Base+0x13cc>)
    be52:	mov	r7, r1
    be54:	ldr	r5, [r6, #16]
    be56:	add	r2, pc
    be58:	vmov	s16, r0
    be5c:	sub	sp, #76	; 0x4c
    be5e:	and.w	r5, r5, #256	; 0x100
    be62:	cmp	r5, #0
    be64:	ldr	r3, [sp, #136]	; 0x88
    be66:	ldr.w	fp, [sp, #120]	; 0x78
    be6a:	ldrd	r9, r8, [sp, #128]	; 0x80
    be6e:	str	r3, [sp, #12]
    be70:	ldr	r3, [sp, #140]	; 0x8c
    be72:	str	r3, [sp, #16]
    be74:	ldr	r3, [pc, #476]	; (c054 <_start@@Base+0x13d0>)
    be76:	ldr	r3, [r2, r3]
    be78:	ldr	r2, [r4, #0]
    be7a:	ldr	r3, [r3, #0]
    be7c:	str	r3, [sp, #68]	; 0x44
    be7e:	mov.w	r3, #0
    be82:	it	ne
    be84:	movne	r3, #33	; 0x21
    be86:	add.w	r2, r2, #1
    be8a:	str.w	r2, [r1, #192]	; 0xc0
    be8e:	ldr.w	r2, [fp]
    be92:	it	eq
    be94:	moveq	r3, #51	; 0x33
    be96:	sub.w	r2, r2, r3
    be9a:	str.w	r2, [fp]
    be9e:	add.w	r2, sp, #37	; 0x25
    bea2:	beq.w	bfcc <_start@@Base+0x1348>
    bea6:	movs	r1, #169	; 0xa9
    bea8:	strb.w	r1, [sp, #36]	; 0x24
    beac:	movs	r1, #0
    beae:	strb.w	r1, [sp, #37]	; 0x25
    beb2:	strb	r1, [r2, #1]
    beb4:	strb	r1, [r2, #2]
    beb6:	strb	r1, [r2, #3]
    beb8:	strb	r1, [r2, #4]
    beba:	strb	r1, [r2, #5]
    bebc:	strb	r1, [r2, #6]
    bebe:	strb	r1, [r2, #7]
    bec0:	ldr	r2, [r4, #0]
    bec2:	add	r1, sp, #28
    bec4:	mov	r0, r7
    bec6:	str	r3, [sp, #20]
    bec8:	strd	r9, r8, [sp, #28]
    becc:	bl	b5f4 <_start@@Base+0x970>
    bed0:	ldr	r0, [r4, #0]
    bed2:	add.w	r1, r7, #96	; 0x60
    bed6:	movs	r2, #25
    bed8:	ldr.w	ip, [fp]
    bedc:	ldr	r3, [sp, #20]
    bede:	mla	r0, r2, r0, r1
    bee2:	str.w	ip, [r0, #118]	; 0x76
    bee6:	mov.w	ip, #1
    beea:	ldr	r0, [r4, #0]
    beec:	mla	r0, r2, r0, r1
    bef0:	str.w	r3, [r0, #122]	; 0x7a
    bef4:	ldr	r3, [r4, #0]
    bef6:	mla	r3, r2, r3, r1
    befa:	movs	r2, #0
    befc:	ldr.w	r0, [r3, #118]	; 0x76
    bf00:	add.w	lr, r0, #101	; 0x65
    bf04:	add.w	r3, r1, lr
    bf08:	strb.w	ip, [r1, lr]
    bf0c:	strb.w	ip, [r3, #8]
    bf10:	mov.w	ip, #2
    bf14:	strb	r2, [r3, #1]
    bf16:	strb	r2, [r3, #2]
    bf18:	strb	r2, [r3, #3]
    bf1a:	strb	r2, [r3, #4]
    bf1c:	strb	r2, [r3, #5]
    bf1e:	strb	r2, [r3, #6]
    bf20:	strb	r2, [r3, #7]
    bf22:	strb	r2, [r3, #9]
    bf24:	strb	r2, [r3, #10]
    bf26:	strb	r2, [r3, #11]
    bf28:	strb	r2, [r3, #12]
    bf2a:	strb	r2, [r3, #13]
    bf2c:	strb	r2, [r3, #14]
    bf2e:	strb	r2, [r3, #15]
    bf30:	strb.w	ip, [r3, #16]
    bf34:	strb	r2, [r3, #17]
    bf36:	strb	r2, [r3, #18]
    bf38:	strb	r2, [r3, #19]
    bf3a:	strb	r2, [r3, #20]
    bf3c:	strb	r2, [r3, #21]
    bf3e:	strb	r2, [r3, #22]
    bf40:	strb	r2, [r3, #23]
    bf42:	add.w	r3, r0, #125	; 0x7d
    bf46:	cmp	r5, #0
    bf48:	beq.n	bfdc <_start@@Base+0x1358>
    bf4a:	mov	r0, r3
    bf4c:	movs	r2, #176	; 0xb0
    bf4e:	strb	r2, [r1, r0]
    bf50:	ldr	r2, [sp, #12]
    bf52:	adds	r3, r1, r0
    bf54:	str.w	r2, [r3, #1]
    bf58:	ldr	r2, [sp, #16]
    bf5a:	str.w	r2, [r3, #5]
    bf5e:	ldr	r3, [r4, #0]
    bf60:	adds	r3, #1
    bf62:	str	r3, [r4, #0]
    bf64:	cmp	r5, #0
    bf66:	bne.n	c038 <_start@@Base+0x13b4>
    bf68:	ldr	r0, [r6, #4]
    bf6a:	adds	r0, #96	; 0x60
    bf6c:	blx	8e40 <malloc@plt+0x4>
    bf70:	mov	fp, r0
    bf72:	cmp	r0, #0
    bf74:	beq.n	c03c <_start@@Base+0x13b8>
    bf76:	ldr	r3, [sp, #12]
    bf78:	mov	r2, r9
    bf7a:	mov	r1, r6
    bf7c:	str	r3, [sp, #0]
    bf7e:	ldr	r3, [sp, #16]
    bf80:	str	r3, [sp, #4]
    bf82:	mov	r3, r8
    bf84:	bl	bd86 <_start@@Base+0x1102>
    bf88:	subs	r4, r0, #0
    bf8a:	blt.n	bfb2 <_start@@Base+0x132e>
    bf8c:	vmov	r0, s16
    bf90:	add.w	r1, fp, #96	; 0x60
    bf94:	ldr	r2, [r6, #4]
    bf96:	strd	r9, r8, [sp]
    bf9a:	blx	8dcc <pread64@plt>
    bf9e:	ldr	r3, [r6, #4]
    bfa0:	cmp	r3, r0
    bfa2:	mov	r4, r0
    bfa4:	bls.n	bfe2 <_start@@Base+0x135e>
    bfa6:	cmp	r0, #0
    bfa8:	bge.n	c032 <_start@@Base+0x13ae>
    bfaa:	blx	8f58 <__errno_location@plt>
    bfae:	ldr	r4, [r0, #0]
    bfb0:	negs	r4, r4
    bfb2:	mov	r0, fp
    bfb4:	blx	8b84 <free@plt+0x4>
    bfb8:	ldr	r2, [pc, #156]	; (c058 <_start@@Base+0x13d4>)
    bfba:	ldr	r3, [pc, #152]	; (c054 <_start@@Base+0x13d0>)
    bfbc:	add	r2, pc
    bfbe:	ldr	r3, [r2, r3]
    bfc0:	ldr	r2, [r3, #0]
    bfc2:	ldr	r3, [sp, #68]	; 0x44
    bfc4:	eors	r2, r3
    bfc6:	beq.n	c042 <_start@@Base+0x13be>
    bfc8:	blx	8c90 <__stack_chk_fail@plt>
    bfcc:	movs	r1, #168	; 0xa8
    bfce:	strb.w	r1, [sp, #36]	; 0x24
    bfd2:	ldr	r1, [r6, #4]
    bfd4:	str	r5, [r2, #4]
    bfd6:	str.w	r1, [sp, #37]	; 0x25
    bfda:	b.n	bec0 <_start@@Base+0x123c>
    bfdc:	adds	r0, #143	; 0x8f
    bfde:	mov	sl, r3
    bfe0:	b.n	bf4c <_start@@Base+0x12c8>
    bfe2:	ldr.w	r3, [fp, #192]	; 0xc0
    bfe6:	add	r1, sp, #48	; 0x30
    bfe8:	cbnz	r3, c022 <_start@@Base+0x139e>
    bfea:	movs	r2, #0
    bfec:	movs	r3, #0
    bfee:	strb.w	r5, [sp, #56]	; 0x38
    bff2:	strd	r2, r3, [sp, #48]	; 0x30
    bff6:	strb.w	r5, [sp, #57]	; 0x39
    bffa:	strb.w	r5, [sp, #58]	; 0x3a
    bffe:	strb.w	r5, [sp, #59]	; 0x3b
    c002:	strb.w	r5, [sp, #60]	; 0x3c
    c006:	strb.w	r5, [sp, #61]	; 0x3d
    c00a:	strb.w	r5, [sp, #62]	; 0x3e
    c00e:	strb.w	r5, [sp, #63]	; 0x3f
    c012:	strb.w	r5, [sp, #64]	; 0x40
    c016:	movs	r3, #17
    c018:	mov	r2, sl
    c01a:	mov	r0, r7
    c01c:	bl	1bbd0 <write_extent_buffer@@Base>
    c020:	b.n	bfb2 <_start@@Base+0x132e>
    c022:	movs	r3, #17
    c024:	movs	r2, #101	; 0x65
    c026:	mov	r0, fp
    c028:	str	r1, [sp, #12]
    c02a:	bl	1bbba <read_extent_buffer@@Base>
    c02e:	ldr	r1, [sp, #12]
    c030:	b.n	c016 <_start@@Base+0x1392>
    c032:	mvn.w	r4, #4
    c036:	b.n	bfb2 <_start@@Base+0x132e>
    c038:	movs	r4, #0
    c03a:	b.n	bfb8 <_start@@Base+0x1334>
    c03c:	mvn.w	r4, #11
    c040:	b.n	bfb8 <_start@@Base+0x1334>
    c042:	mov	r0, r4
    c044:	add	sp, #76	; 0x4c
    c046:	vpop	{d8}
    c04a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c04e:	nop
    c050:	cdp	0, 12, cr0, cr2, cr5, {0}
    c054:	lsls	r0, r1, #10
    c056:	movs	r0, r0
    c058:	ldcl	0, cr0, [ip, #-20]	; 0xffffffec
    c05c:	movs	r0, #80	; 0x50
    c05e:	bx	lr
    c060:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c064:	mov	r7, r3
    c066:	vpush	{d8}
    c06a:	mov	r9, r1
    c06c:	ldr	r1, [pc, #524]	; (c27c <_start@@Base+0x15f8>)
    c06e:	mov	r8, r2
    c070:	ldr	r2, [pc, #524]	; (c280 <_start@@Base+0x15fc>)
    c072:	add	r1, pc
    c074:	vmov	s16, r0
    c078:	sub.w	sp, sp, #4160	; 0x1040
    c07c:	sub	sp, #4
    c07e:	add.w	r3, sp, #4192	; 0x1060
    c082:	add.w	fp, sp, #64	; 0x40
    c086:	adds	r3, #16
    c088:	sub.w	sl, fp, #4
    c08c:	ldr	r4, [r3, #0]
    c08e:	add.w	r3, sp, #4192	; 0x1060
    c092:	adds	r3, #24
    c094:	ldr	r3, [r3, #0]
    c096:	str	r3, [sp, #20]
    c098:	add.w	r3, sp, #4192	; 0x1060
    c09c:	adds	r3, #28
    c09e:	ldr	r3, [r3, #0]
    c0a0:	str	r3, [sp, #24]
    c0a2:	add.w	r3, sp, #4224	; 0x1080
    c0a6:	ldr	r5, [r3, #0]
    c0a8:	add.w	r3, sp, #4224	; 0x1080
    c0ac:	adds	r3, #4
    c0ae:	ldr	r3, [r3, #0]
    c0b0:	str	r3, [sp, #32]
    c0b2:	add.w	r3, sp, #4224	; 0x1080
    c0b6:	adds	r3, #8
    c0b8:	ldr	r3, [r3, #0]
    c0ba:	str	r3, [sp, #28]
    c0bc:	add.w	r3, sp, #4224	; 0x1080
    c0c0:	adds	r3, #12
    c0c2:	ldr	r3, [r3, #0]
    c0c4:	str	r3, [sp, #36]	; 0x24
    c0c6:	add.w	r3, sp, #4128	; 0x1020
    c0ca:	ldr	r2, [r1, r2]
    c0cc:	adds	r3, #28
    c0ce:	mov	r1, sl
    c0d0:	ldr	r2, [r2, #0]
    c0d2:	str	r2, [r3, #0]
    c0d4:	mov.w	r2, #0
    c0d8:	ldrd	r2, r3, [r8, #184]	; 0xb8
    c0dc:	strd	r2, r3, [sp]
    c0e0:	mov.w	r2, #4096	; 0x1000
    c0e4:	blx	8dcc <pread64@plt>
    c0e8:	cmp.w	r0, #4096	; 0x1000
    c0ec:	mov	r6, r0
    c0ee:	bge.n	c114 <_start@@Base+0x1490>
    c0f0:	cmp	r0, #0
    c0f2:	it	ge
    c0f4:	mvnge.w	r6, #4
    c0f8:	ldr	r1, [pc, #392]	; (c284 <_start@@Base+0x1600>)
    c0fa:	add.w	r3, sp, #4128	; 0x1020
    c0fe:	ldr	r2, [pc, #384]	; (c280 <_start@@Base+0x15fc>)
    c100:	adds	r3, #28
    c102:	add	r1, pc
    c104:	ldr	r2, [r1, r2]
    c106:	ldr	r1, [r2, #0]
    c108:	ldr	r2, [r3, #0]
    c10a:	eors	r1, r2
    c10c:	beq.w	c26a <_start@@Base+0x15e6>
    c110:	blx	8c90 <__stack_chk_fail@plt>
    c114:	ldr	r3, [r7, #0]
    c116:	adds	r3, #1
    c118:	str.w	r3, [r9, #192]	; 0xc0
    c11c:	bl	c05c <_start@@Base+0x13d8>
    c120:	ldr	r3, [r4, #0]
    c122:	subs	r3, r3, r0
    c124:	str	r3, [r4, #0]
    c126:	sub.w	r3, fp, #24
    c12a:	str	r3, [sp, #16]
    c12c:	ldr	r2, [sp, #16]
    c12e:	movs	r3, #228	; 0xe4
    c130:	ldr	r1, [sp, #16]
    c132:	str	r0, [sp, #8]
    c134:	mov	r0, r9
    c136:	strb	r3, [r2, #8]
    c138:	mov.w	r2, #256	; 0x100
    c13c:	movs	r3, #0
    c13e:	strd	r2, r3, [fp, #-24]
    c142:	ldr	r3, [sp, #20]
    c144:	ldr	r2, [r7, #0]
    c146:	str.w	r3, [fp, #-15]
    c14a:	ldr	r3, [sp, #24]
    c14c:	str.w	r3, [fp, #-11]
    c150:	bl	b5f4 <_start@@Base+0x970>
    c154:	ldr	r2, [r7, #0]
    c156:	add.w	r3, r9, #96	; 0x60
    c15a:	movs	r1, #25
    c15c:	ldr	r0, [r4, #0]
    c15e:	mla	r2, r1, r2, r3
    c162:	str.w	r0, [r2, #118]	; 0x76
    c166:	ldr	r2, [r7, #0]
    c168:	ldr	r0, [sp, #8]
    c16a:	mla	r2, r1, r2, r3
    c16e:	str.w	r0, [r2, #122]	; 0x7a
    c172:	movs	r0, #1
    c174:	ldr	r2, [r7, #0]
    c176:	mla	r2, r1, r2, r3
    c17a:	ldr.w	r2, [r2, #118]	; 0x76
    c17e:	add.w	r1, r2, #101	; 0x65
    c182:	str	r1, [sp, #12]
    c184:	adds	r4, r3, r1
    c186:	str	r5, [r3, r1]
    c188:	movs	r5, #0
    c18a:	ldr	r1, [sp, #32]
    c18c:	strb	r0, [r4, #18]
    c18e:	strb	r5, [r4, #9]
    c190:	str	r1, [r4, #4]
    c192:	movs	r1, #2
    c194:	strb	r1, [r4, #8]
    c196:	ldr	r1, [sp, #28]
    c198:	strb	r5, [r4, #10]
    c19a:	strb	r5, [r4, #11]
    c19c:	str	r1, [r4, #24]
    c19e:	ldr	r1, [sp, #36]	; 0x24
    c1a0:	strb	r5, [r4, #12]
    c1a2:	strb	r5, [r4, #13]
    c1a4:	strb	r5, [r4, #14]
    c1a6:	strb	r5, [r4, #15]
    c1a8:	strb	r5, [r4, #16]
    c1aa:	strb	r5, [r4, #17]
    c1ac:	strb	r5, [r4, #19]
    c1ae:	strb	r5, [r4, #20]
    c1b0:	strb	r5, [r4, #21]
    c1b2:	strb	r5, [r4, #22]
    c1b4:	strb	r5, [r4, #23]
    c1b6:	str	r1, [r4, #28]
    c1b8:	ldr.w	r1, [r8, #8]
    c1bc:	str	r1, [r4, #32]
    c1be:	ldr.w	r1, [r8, #8]
    c1c2:	str	r1, [r4, #36]	; 0x24
    c1c4:	ldr.w	r1, [r8, #8]
    c1c8:	strb.w	r0, [r4, #44]	; 0x2c
    c1cc:	strb.w	r5, [r4, #45]	; 0x2d
    c1d0:	str	r1, [r4, #40]	; 0x28
    c1d2:	add.w	r4, r2, #149	; 0x95
    c1d6:	adds	r1, r3, r4
    c1d8:	adds	r2, #165	; 0xa5
    c1da:	strb	r0, [r3, r4]
    c1dc:	mov	r0, r9
    c1de:	ldr	r3, [sp, #20]
    c1e0:	strb	r5, [r1, #1]
    c1e2:	strb	r5, [r1, #2]
    c1e4:	str	r3, [r1, #8]
    c1e6:	ldr	r3, [sp, #24]
    c1e8:	strb	r5, [r1, #3]
    c1ea:	strb	r5, [r1, #4]
    c1ec:	str	r3, [r1, #12]
    c1ee:	movs	r3, #16
    c1f0:	strb	r5, [r1, #5]
    c1f2:	strb	r5, [r1, #6]
    c1f4:	strb	r5, [r1, #7]
    c1f6:	addw	r1, sp, #327	; 0x147
    c1fa:	bl	1bbd0 <write_extent_buffer@@Base>
    c1fe:	ldr	r1, [sp, #28]
    c200:	ldr	r3, [r7, #0]
    c202:	and.w	r2, r1, #2
    c206:	adds	r3, #1
    c208:	str	r3, [r7, #0]
    c20a:	mov	r3, r5
    c20c:	orrs	r3, r2
    c20e:	beq.w	c0f8 <_start@@Base+0x1474>
    c212:	ldr.w	r3, [sl, #160]	; 0xa0
    c216:	addw	r4, sp, #871	; 0x367
    c21a:	sub.w	r2, fp, #8
    c21e:	add	r4, r3
    c220:	ldr	r3, [sp, #16]
    c222:	mov	r5, r4
    c224:	mov	r6, r3
    c226:	adds	r5, #8
    c228:	ldmia	r6!, {r0, r1}
    c22a:	cmp	r6, r2
    c22c:	str.w	r0, [r5, #-8]
    c230:	mov	r3, r6
    c232:	str.w	r1, [r5, #-4]
    c236:	bne.n	c224 <_start@@Base+0x15a0>
    c238:	ldrb	r3, [r6, #0]
    c23a:	add.w	r1, r4, #17
    c23e:	mov	r0, r9
    c240:	strb	r3, [r5, #0]
    c242:	ldrd	r3, r2, [sp, #8]
    c246:	bl	1bbba <read_extent_buffer@@Base>
    c24a:	ldr.w	r0, [sl, #160]	; 0xa0
    c24e:	ldr	r3, [sp, #8]
    c250:	mov	r1, sl
    c252:	adds	r0, #17
    c254:	add	r0, r3
    c256:	ldrd	r2, r3, [r8, #184]	; 0xb8
    c25a:	str.w	r0, [sl, #160]	; 0xa0
    c25e:	vmov	r0, s16
    c262:	bl	b6f0 <_start@@Base+0xa6c>
    c266:	mov	r6, r0
    c268:	b.n	c0f8 <_start@@Base+0x1474>
    c26a:	mov	r0, r6
    c26c:	add.w	sp, sp, #4160	; 0x1040
    c270:	add	sp, #4
    c272:	vpop	{d8}
    c276:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c27a:	nop
    c27c:	stc	0, cr0, [r6], #20
    c280:	lsls	r0, r1, #10
    c282:	movs	r0, r0
    c284:	ldc	0, cr0, [r6], {5}
    c288:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    c28c:	mov	r5, r0
    c28e:	ldr.w	sl, [sp, #32]
    c292:	mov	r6, r2
    c294:	mov	r7, r3
    c296:	bl	1a944 <first_cache_extent@@Base>
    c29a:	mov	r4, r0
    c29c:	cbnz	r0, c2a4 <_start@@Base+0x1620>
    c29e:	mvn.w	r0, #27
    c2a2:	b.n	c2de <_start@@Base+0x165a>
    c2a4:	ldrd	r2, r3, [r4, #32]
    c2a8:	cmp	r7, r3
    c2aa:	it	eq
    c2ac:	cmpeq	r6, r2
    c2ae:	bcs.n	c2ee <_start@@Base+0x166a>
    c2b0:	ldrd	r1, r0, [r4, #24]
    c2b4:	strd	r1, r0, [sl]
    c2b8:	ldrd	r3, r2, [r4, #32]
    c2bc:	subs.w	r8, r3, r6
    c2c0:	sbc.w	r9, r2, r7
    c2c4:	strd	r8, r9, [r4, #32]
    c2c8:	orrs.w	r3, r8, r9
    c2cc:	bne.n	c2e2 <_start@@Base+0x165e>
    c2ce:	mov	r0, r5
    c2d0:	mov	r1, r4
    c2d2:	bl	1a954 <remove_cache_extent@@Base>
    c2d6:	mov	r0, r4
    c2d8:	blx	8b84 <free@plt+0x4>
    c2dc:	movs	r0, #0
    c2de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    c2e2:	adds	r1, r1, r6
    c2e4:	adc.w	r0, r7, r0
    c2e8:	strd	r1, r0, [r4, #24]
    c2ec:	b.n	c2dc <_start@@Base+0x1658>
    c2ee:	mov	r0, r4
    c2f0:	bl	1a950 <next_cache_extent@@Base>
    c2f4:	b.n	c29a <_start@@Base+0x1616>

0000c2f6 <make_convert_btrfs@@Base>:
    c2f6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2fa:	mov	r5, r0
    c2fc:	ldr.w	r0, [pc, #1708]	; c9ac <make_convert_btrfs@@Base+0x6b6>
    c300:	sub	sp, #172	; 0xac
    c302:	ldr.w	r3, [pc, #1708]	; c9b0 <make_convert_btrfs@@Base+0x6ba>
    c306:	mov	r4, r1
    c308:	add	r0, pc
    c30a:	ldr.w	r1, [pc, #1704]	; c9b4 <make_convert_btrfs@@Base+0x6be>
    c30e:	add.w	r6, r2, #64	; 0x40
    c312:	ldr	r3, [r0, r3]
    c314:	add	r1, pc
    c316:	ldr	r3, [r3, #0]
    c318:	str	r3, [sp, #164]	; 0xa4
    c31a:	mov.w	r3, #0
    c31e:	ldr	r3, [r2, #56]	; 0x38
    c320:	cbnz	r3, c35c <make_convert_btrfs@@Base+0x66>
    c322:	ldr.w	r2, [pc, #1684]	; c9b8 <make_convert_btrfs@@Base+0x6c2>
    c326:	ldr	r0, [r1, r2]
    c328:	movs	r1, #1
    c32a:	str	r3, [sp, #12]
    c32c:	ldr.w	r3, [pc, #1676]	; c9bc <make_convert_btrfs@@Base+0x6c6>
    c330:	ldr.w	r2, [pc, #1676]	; c9c0 <make_convert_btrfs@@Base+0x6ca>
    c334:	add	r3, pc
    c336:	str	r3, [sp, #8]
    c338:	ldr.w	r3, [pc, #1672]	; c9c4 <make_convert_btrfs@@Base+0x6ce>
    c33c:	add	r2, pc
    c33e:	add	r3, pc
    c340:	str	r3, [sp, #4]
    c342:	movw	r3, #806	; 0x326
    c346:	str	r3, [sp, #0]
    c348:	ldr.w	r3, [pc, #1660]	; c9c8 <make_convert_btrfs@@Base+0x6d2>
    c34c:	ldr	r0, [r0, #0]
    c34e:	add	r3, pc
    c350:	blx	9040 <__fprintf_chk@plt+0x4>
    c354:	bl	b5a8 <_start@@Base+0x924>
    c358:	blx	91c0 <abort@plt>
    c35c:	add.w	r3, r4, #184	; 0xb8
    c360:	mov.w	r2, #65536	; 0x10000
    c364:	str	r3, [sp, #0]
    c366:	mov	r0, r6
    c368:	movs	r3, #0
    c36a:	bl	c288 <_start@@Base+0x1604>
    c36e:	subs.w	r8, r0, #0
    c372:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c376:	add	r3, sp, #144	; 0x90
    c378:	mov.w	r2, #4194304	; 0x400000
    c37c:	str	r3, [sp, #0]
    c37e:	mov	r0, r6
    c380:	movs	r3, #0
    c382:	bl	c288 <_start@@Base+0x1604>
    c386:	subs.w	r8, r0, #0
    c38a:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c38e:	add	r3, sp, #152	; 0x98
    c390:	mov.w	r2, #33554432	; 0x2000000
    c394:	str	r3, [sp, #0]
    c396:	mov	r0, r6
    c398:	movs	r3, #0
    c39a:	bl	c288 <_start@@Base+0x1604>
    c39e:	subs.w	r8, r0, #0
    c3a2:	blt.n	c498 <make_convert_btrfs@@Base+0x1a2>
    c3a4:	ldrd	r2, r3, [sp, #144]	; 0x90
    c3a8:	mov	r1, r4
    c3aa:	ldr	r6, [r4, #4]
    c3ac:	mov	r0, r5
    c3ae:	strd	r2, r3, [sp, #104]	; 0x68
    c3b2:	ldrd	r2, r3, [sp, #152]	; 0x98
    c3b6:	strd	r2, r3, [sp, #72]	; 0x48
    c3ba:	ldrd	r2, r3, [sp, #104]	; 0x68
    c3be:	strd	r2, r3, [sp]
    c3c2:	ldrd	r2, r3, [sp, #72]	; 0x48
    c3c6:	bl	b994 <_start@@Base+0xd10>
    c3ca:	subs.w	r8, r0, #0
    c3ce:	blt.n	c498 <make_convert_btrfs@@Base+0x1a2>
    c3d0:	ldrd	r2, r3, [sp, #72]	; 0x48
    c3d4:	ldr	r0, [r4, #4]
    c3d6:	adds	r2, r2, r6
    c3d8:	adc.w	r3, r3, #0
    c3dc:	strd	r2, r3, [sp, #80]	; 0x50
    c3e0:	ldrd	r1, r2, [sp, #72]	; 0x48
    c3e4:	lsls	r3, r6, #1
    c3e6:	adds	r1, r1, r3
    c3e8:	add	r3, r6
    c3ea:	adc.w	r2, r2, #0
    c3ee:	strd	r1, r2, [sp, #88]	; 0x58
    c3f2:	ldrd	r1, r2, [sp, #72]	; 0x48
    c3f6:	lsls	r6, r6, #2
    c3f8:	adds	r1, r1, r3
    c3fa:	adc.w	r2, r2, #0
    c3fe:	strd	r1, r2, [sp, #96]	; 0x60
    c402:	ldrd	r2, r3, [sp, #72]	; 0x48
    c406:	adds	r2, r2, r6
    c408:	ldrd	r6, r7, [sp, #80]	; 0x50
    c40c:	adc.w	r3, r3, #0
    c410:	strd	r2, r3, [sp, #112]	; 0x70
    c414:	sub.w	r3, r0, #101	; 0x65
    c418:	str	r3, [sp, #136]	; 0x88
    c41a:	movs	r3, #0
    c41c:	str	r3, [sp, #140]	; 0x8c
    c41e:	ldrd	r2, r3, [sp, #72]	; 0x48
    c422:	cmp	r3, r7
    c424:	it	eq
    c426:	cmpeq	r2, r6
    c428:	bcs.n	c45a <make_convert_btrfs@@Base+0x164>
    c42a:	mov	r2, r6
    c42c:	mov	r3, r7
    c42e:	ldrd	r6, r7, [sp, #88]	; 0x58
    c432:	cmp	r3, r7
    c434:	it	eq
    c436:	cmpeq	r2, r6
    c438:	bcs.n	c45a <make_convert_btrfs@@Base+0x164>
    c43a:	mov	r2, r6
    c43c:	mov	r3, r7
    c43e:	ldrd	r6, r7, [sp, #96]	; 0x60
    c442:	cmp	r3, r7
    c444:	it	eq
    c446:	cmpeq	r2, r6
    c448:	bcs.n	c45a <make_convert_btrfs@@Base+0x164>
    c44a:	mov	r2, r6
    c44c:	mov	r3, r7
    c44e:	ldrd	r6, r7, [sp, #112]	; 0x70
    c452:	cmp	r3, r7
    c454:	it	eq
    c456:	cmpeq	r2, r6
    c458:	bcc.n	c4b2 <make_convert_btrfs@@Base+0x1bc>
    c45a:	ldrd	r3, r4, [sp, #112]	; 0x70
    c45e:	ldr.w	r0, [pc, #1388]	; c9cc <make_convert_btrfs@@Base+0x6d6>
    c462:	strd	r3, r4, [sp, #48]	; 0x30
    c466:	add	r0, pc
    c468:	ldrd	r3, r4, [sp, #96]	; 0x60
    c46c:	strd	r3, r4, [sp, #40]	; 0x28
    c470:	strd	r3, r4, [sp, #32]
    c474:	ldrd	r3, r4, [sp, #88]	; 0x58
    c478:	strd	r3, r4, [sp, #24]
    c47c:	strd	r3, r4, [sp, #16]
    c480:	ldrd	r3, r4, [sp, #80]	; 0x50
    c484:	strd	r3, r4, [sp, #8]
    c488:	strd	r3, r4, [sp]
    c48c:	ldrd	r2, r3, [sp, #72]	; 0x48
    c490:	bl	1bd1c <__btrfs_error@@Base>
    c494:	mvn.w	r8, #21
    c498:	ldr.w	r2, [pc, #1332]	; c9d0 <make_convert_btrfs@@Base+0x6da>
    c49c:	ldr.w	r3, [pc, #1296]	; c9b0 <make_convert_btrfs@@Base+0x6ba>
    c4a0:	add	r2, pc
    c4a2:	ldr	r3, [r2, r3]
    c4a4:	ldr	r2, [r3, #0]
    c4a6:	ldr	r3, [sp, #164]	; 0xa4
    c4a8:	eors	r2, r3
    c4aa:	beq.w	c9a2 <make_convert_btrfs@@Base+0x6ac>
    c4ae:	blx	8c90 <__stack_chk_fail@plt>
    c4b2:	adds	r0, #96	; 0x60
    c4b4:	blx	8e40 <malloc@plt+0x4>
    c4b8:	mov	r6, r0
    c4ba:	cbnz	r0, c4c2 <make_convert_btrfs@@Base+0x1cc>
    c4bc:	mvn.w	r8, #11
    c4c0:	b.n	c498 <make_convert_btrfs@@Base+0x1a2>
    c4c2:	movs	r2, #1
    c4c4:	movs	r3, #0
    c4c6:	mov	r1, r4
    c4c8:	strd	r2, r3, [sp]
    c4cc:	ldrd	r2, r3, [sp, #72]	; 0x48
    c4d0:	bl	bd86 <_start@@Base+0x1102>
    c4d4:	subs.w	r8, r0, #0
    c4d8:	blt.n	c570 <make_convert_btrfs@@Base+0x27a>
    c4da:	ldrd	r2, r3, [sp, #80]	; 0x50
    c4de:	adds	r1, r4, #4
    c4e0:	mov	r0, r6
    c4e2:	str	r1, [sp, #120]	; 0x78
    c4e4:	mov.w	r8, #4
    c4e8:	mov.w	r9, #0
    c4ec:	strd	r2, r3, [sp, #8]
    c4f0:	movs	r2, #2
    c4f2:	movs	r3, #0
    c4f4:	strd	r2, r3, [sp]
    c4f8:	add	r3, sp, #136	; 0x88
    c4fa:	add	r2, sp, #140	; 0x8c
    c4fc:	str	r3, [sp, #132]	; 0x84
    c4fe:	str	r2, [sp, #128]	; 0x80
    c500:	bl	bb3c <_start@@Base+0xeb8>
    c504:	ldrd	r2, r3, [sp, #88]	; 0x58
    c508:	mov	r0, r6
    c50a:	strd	r8, r9, [sp]
    c50e:	mov.w	r8, #5
    c512:	ldr	r1, [sp, #120]	; 0x78
    c514:	mov.w	r9, #0
    c518:	strd	r2, r3, [sp, #8]
    c51c:	ldrd	r2, r3, [sp, #128]	; 0x80
    c520:	bl	bb3c <_start@@Base+0xeb8>
    c524:	ldrd	r2, r3, [sp, #96]	; 0x60
    c528:	strd	r8, r9, [sp]
    c52c:	mov	r0, r6
    c52e:	ldr	r1, [sp, #120]	; 0x78
    c530:	mov.w	r8, #7
    c534:	strd	r2, r3, [sp, #8]
    c538:	mov.w	r9, #0
    c53c:	ldrd	r2, r3, [sp, #128]	; 0x80
    c540:	bl	bb3c <_start@@Base+0xeb8>
    c544:	ldrd	r2, r3, [sp, #112]	; 0x70
    c548:	ldr	r1, [sp, #120]	; 0x78
    c54a:	mov	r0, r6
    c54c:	strd	r8, r9, [sp]
    c550:	strd	r2, r3, [sp, #8]
    c554:	ldrd	r2, r3, [sp, #128]	; 0x80
    c558:	bl	bb3c <_start@@Base+0xeb8>
    c55c:	add.w	r3, r4, #32
    c560:	mov	r1, r6
    c562:	str	r3, [sp, #0]
    c564:	mov	r0, r5
    c566:	ldrd	r2, r3, [sp, #72]	; 0x48
    c56a:	bl	bd38 <_start@@Base+0x10b4>
    c56e:	mov	r8, r0
    c570:	mov	r0, r6
    c572:	blx	8b84 <free@plt+0x4>
    c576:	cmp.w	r8, #0
    c57a:	blt.n	c498 <make_convert_btrfs@@Base+0x1a2>
    c57c:	ldrd	r2, r3, [sp, #144]	; 0x90
    c580:	ldr	r0, [r4, #4]
    c582:	ldrd	r6, r7, [sp, #152]	; 0x98
    c586:	strd	r2, r3, [sp, #120]	; 0x78
    c58a:	sub.w	r3, r0, #101	; 0x65
    c58e:	str	r3, [sp, #136]	; 0x88
    c590:	movs	r3, #0
    c592:	str	r3, [sp, #140]	; 0x8c
    c594:	ldrd	r2, r3, [sp, #120]	; 0x78
    c598:	cmp	r7, r3
    c59a:	it	eq
    c59c:	cmpeq	r6, r2
    c59e:	bcs.n	c5b8 <make_convert_btrfs@@Base+0x2c2>
    c5a0:	ldr.w	r0, [pc, #1072]	; c9d4 <make_convert_btrfs@@Base+0x6de>
    c5a4:	mov	r4, r3
    c5a6:	mov	r3, r2
    c5a8:	mov	r2, r6
    c5aa:	add	r0, pc
    c5ac:	strd	r3, r4, [sp]
    c5b0:	mov	r3, r7
    c5b2:	bl	1bd1c <__btrfs_error@@Base>
    c5b6:	b.n	c494 <make_convert_btrfs@@Base+0x19e>
    c5b8:	adds	r0, #96	; 0x60
    c5ba:	blx	8e40 <malloc@plt+0x4>
    c5be:	mov	sl, r0
    c5c0:	cmp	r0, #0
    c5c2:	beq.w	c4bc <make_convert_btrfs@@Base+0x1c6>
    c5c6:	movs	r2, #3
    c5c8:	movs	r3, #0
    c5ca:	mov	r1, r4
    c5cc:	strd	r2, r3, [sp]
    c5d0:	ldrd	r2, r3, [sp, #104]	; 0x68
    c5d4:	bl	bd86 <_start@@Base+0x1102>
    c5d8:	subs.w	r8, r0, #0
    c5dc:	blt.n	c66c <make_convert_btrfs@@Base+0x376>
    c5de:	add	r3, sp, #140	; 0x8c
    c5e0:	add.w	fp, sp, #136	; 0x88
    c5e4:	mov	r2, r4
    c5e6:	mov	r1, sl
    c5e8:	mov	r0, r5
    c5ea:	str.w	fp, [sp]
    c5ee:	str	r3, [sp, #128]	; 0x80
    c5f0:	bl	b780 <_start@@Base+0xafc>
    c5f4:	subs.w	r8, r0, #0
    c5f8:	blt.n	c66c <make_convert_btrfs@@Base+0x376>
    c5fa:	ldrd	r2, r3, [sp, #120]	; 0x78
    c5fe:	movs	r0, #2
    c600:	movs	r1, #0
    c602:	str.w	fp, [sp]
    c606:	strd	r0, r1, [sp, #24]
    c60a:	mov.w	r0, #4194304	; 0x400000
    c60e:	strd	r2, r3, [sp, #8]
    c612:	movs	r1, #0
    c614:	ldr	r3, [sp, #128]	; 0x80
    c616:	mov	r2, r4
    c618:	strd	r0, r1, [sp, #16]
    c61c:	mov	r1, sl
    c61e:	mov	r0, r5
    c620:	str	r3, [sp, #120]	; 0x78
    c622:	bl	c060 <_start@@Base+0x13dc>
    c626:	subs.w	r8, r0, #0
    c62a:	blt.n	c66c <make_convert_btrfs@@Base+0x376>
    c62c:	movs	r0, #4
    c62e:	movs	r1, #0
    c630:	ldr	r3, [sp, #120]	; 0x78
    c632:	mov	r2, r4
    c634:	strd	r0, r1, [sp, #24]
    c638:	mov.w	r0, #33554432	; 0x2000000
    c63c:	movs	r1, #0
    c63e:	strd	r6, r7, [sp, #8]
    c642:	strd	r0, r1, [sp, #16]
    c646:	mov	r1, sl
    c648:	mov	r0, r5
    c64a:	str.w	fp, [sp]
    c64e:	bl	c060 <_start@@Base+0x13dc>
    c652:	subs.w	r8, r0, #0
    c656:	blt.n	c66c <make_convert_btrfs@@Base+0x376>
    c658:	add.w	r3, r4, #32
    c65c:	mov	r1, sl
    c65e:	str	r3, [sp, #0]
    c660:	mov	r0, r5
    c662:	ldrd	r2, r3, [sp, #104]	; 0x68
    c666:	bl	bd38 <_start@@Base+0x10b4>
    c66a:	mov	r8, r0
    c66c:	mov	r0, sl
    c66e:	blx	8b84 <free@plt+0x4>
    c672:	cmp.w	r8, #0
    c676:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c67a:	ldrd	r2, r3, [sp, #144]	; 0x90
    c67e:	ldr	r0, [r4, #4]
    c680:	ldrd	r6, r7, [sp, #152]	; 0x98
    c684:	strd	r2, r3, [sp, #120]	; 0x78
    c688:	sub.w	r3, r0, #101	; 0x65
    c68c:	str	r3, [sp, #136]	; 0x88
    c68e:	movs	r3, #0
    c690:	str	r3, [sp, #140]	; 0x8c
    c692:	ldrd	r2, r3, [sp, #120]	; 0x78
    c696:	cmp	r7, r3
    c698:	it	eq
    c69a:	cmpeq	r6, r2
    c69c:	bcs.n	c6b0 <make_convert_btrfs@@Base+0x3ba>
    c69e:	ldr	r0, [pc, #824]	; (c9d8 <make_convert_btrfs@@Base+0x6e2>)
    c6a0:	mov	r4, r3
    c6a2:	mov	r3, r2
    c6a4:	mov	r2, r6
    c6a6:	strd	r3, r4, [sp]
    c6aa:	add	r0, pc
    c6ac:	mov	r3, r7
    c6ae:	b.n	c5b2 <make_convert_btrfs@@Base+0x2bc>
    c6b0:	adds	r0, #96	; 0x60
    c6b2:	blx	8e40 <malloc@plt+0x4>
    c6b6:	mov	sl, r0
    c6b8:	cmp	r0, #0
    c6ba:	beq.w	c4bc <make_convert_btrfs@@Base+0x1c6>
    c6be:	movs	r2, #4
    c6c0:	movs	r3, #0
    c6c2:	mov	r1, r4
    c6c4:	strd	r2, r3, [sp]
    c6c8:	ldrd	r2, r3, [sp, #88]	; 0x58
    c6cc:	bl	bd86 <_start@@Base+0x1102>
    c6d0:	subs.w	r8, r0, #0
    c6d4:	blt.n	c724 <make_convert_btrfs@@Base+0x42e>
    c6d6:	mov.w	r2, #4194304	; 0x400000
    c6da:	movs	r3, #0
    c6dc:	strd	r2, r3, [sp, #8]
    c6e0:	add	r1, sp, #140	; 0x8c
    c6e2:	ldrd	r2, r3, [sp, #120]	; 0x78
    c6e6:	mov	r0, sl
    c6e8:	mov.w	r8, #33554432	; 0x2000000
    c6ec:	str	r1, [sp, #120]	; 0x78
    c6ee:	mov.w	r9, #0
    c6f2:	strd	r2, r3, [sp]
    c6f6:	add	r2, sp, #136	; 0x88
    c6f8:	str	r2, [sp, #128]	; 0x80
    c6fa:	bl	b600 <_start@@Base+0x97c>
    c6fe:	ldr	r2, [sp, #128]	; 0x80
    c700:	mov	r0, sl
    c702:	ldr	r1, [sp, #120]	; 0x78
    c704:	strd	r8, r9, [sp, #8]
    c708:	strd	r6, r7, [sp]
    c70c:	bl	b600 <_start@@Base+0x97c>
    c710:	add.w	r3, r4, #32
    c714:	mov	r1, sl
    c716:	str	r3, [sp, #0]
    c718:	mov	r0, r5
    c71a:	ldrd	r2, r3, [sp, #88]	; 0x58
    c71e:	bl	bd38 <_start@@Base+0x10b4>
    c722:	mov	r8, r0
    c724:	mov	r0, sl
    c726:	blx	8b84 <free@plt+0x4>
    c72a:	cmp.w	r8, #0
    c72e:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c732:	ldr	r0, [r4, #4]
    c734:	adds	r0, #96	; 0x60
    c736:	blx	8e40 <malloc@plt+0x4>
    c73a:	mov	r6, r0
    c73c:	cmp	r0, #0
    c73e:	beq.w	c4bc <make_convert_btrfs@@Base+0x1c6>
    c742:	movs	r2, #5
    c744:	movs	r3, #0
    c746:	mov	r1, r4
    c748:	strd	r2, r3, [sp]
    c74c:	ldrd	r2, r3, [sp, #96]	; 0x60
    c750:	bl	bd86 <_start@@Base+0x1102>
    c754:	subs.w	r8, r0, #0
    c758:	blt.n	c76e <make_convert_btrfs@@Base+0x478>
    c75a:	add.w	r3, r4, #32
    c75e:	mov	r1, r6
    c760:	str	r3, [sp, #0]
    c762:	mov	r0, r5
    c764:	ldrd	r2, r3, [sp, #96]	; 0x60
    c768:	bl	bd38 <_start@@Base+0x10b4>
    c76c:	mov	r8, r0
    c76e:	mov	r0, r6
    c770:	blx	8b84 <free@plt+0x4>
    c774:	cmp.w	r8, #0
    c778:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c77c:	ldr	r0, [r4, #4]
    c77e:	adds	r0, #96	; 0x60
    c780:	blx	8e40 <malloc@plt+0x4>
    c784:	mov	r6, r0
    c786:	cmp	r0, #0
    c788:	beq.w	c4bc <make_convert_btrfs@@Base+0x1c6>
    c78c:	movs	r2, #7
    c78e:	movs	r3, #0
    c790:	mov	r1, r4
    c792:	strd	r2, r3, [sp]
    c796:	ldrd	r2, r3, [sp, #112]	; 0x70
    c79a:	bl	bd86 <_start@@Base+0x1102>
    c79e:	subs.w	r8, r0, #0
    c7a2:	blt.n	c7b8 <make_convert_btrfs@@Base+0x4c2>
    c7a4:	add.w	r3, r4, #32
    c7a8:	mov	r1, r6
    c7aa:	str	r3, [sp, #0]
    c7ac:	mov	r0, r5
    c7ae:	ldrd	r2, r3, [sp, #112]	; 0x70
    c7b2:	bl	bd38 <_start@@Base+0x10b4>
    c7b6:	mov	r8, r0
    c7b8:	mov	r0, r6
    c7ba:	blx	8b84 <free@plt+0x4>
    c7be:	cmp.w	r8, #0
    c7c2:	blt.w	c498 <make_convert_btrfs@@Base+0x1a2>
    c7c6:	ldr	r0, [r4, #4]
    c7c8:	ldrd	r6, r7, [sp, #72]	; 0x48
    c7cc:	sub.w	r3, r0, #101	; 0x65
    c7d0:	str	r3, [sp, #136]	; 0x88
    c7d2:	movs	r3, #0
    c7d4:	str	r3, [sp, #140]	; 0x8c
    c7d6:	ldrd	r2, r3, [sp, #104]	; 0x68
    c7da:	cmp	r3, r7
    c7dc:	it	eq
    c7de:	cmpeq	r2, r6
    c7e0:	bcc.n	c828 <make_convert_btrfs@@Base+0x532>
    c7e2:	ldrd	r3, r4, [sp, #112]	; 0x70
    c7e6:	ldr	r0, [pc, #500]	; (c9dc <make_convert_btrfs@@Base+0x6e6>)
    c7e8:	strd	r3, r4, [sp, #64]	; 0x40
    c7ec:	add	r0, pc
    c7ee:	ldrd	r3, r4, [sp, #96]	; 0x60
    c7f2:	strd	r3, r4, [sp, #56]	; 0x38
    c7f6:	strd	r3, r4, [sp, #48]	; 0x30
    c7fa:	ldrd	r3, r4, [sp, #88]	; 0x58
    c7fe:	strd	r3, r4, [sp, #40]	; 0x28
    c802:	strd	r3, r4, [sp, #32]
    c806:	ldrd	r3, r4, [sp, #80]	; 0x50
    c80a:	strd	r3, r4, [sp, #24]
    c80e:	strd	r3, r4, [sp, #16]
    c812:	mov	r3, r6
    c814:	mov	r4, r7
    c816:	strd	r3, r4, [sp, #8]
    c81a:	strd	r3, r4, [sp]
    c81e:	ldrd	r2, r3, [sp, #104]	; 0x68
    c822:	bl	1bd1c <__btrfs_error@@Base>
    c826:	b.n	c494 <make_convert_btrfs@@Base+0x19e>
    c828:	adds	r0, #96	; 0x60
    c82a:	blx	8e40 <malloc@plt+0x4>
    c82e:	mov	r6, r0
    c830:	cmp	r0, #0
    c832:	beq.w	c4bc <make_convert_btrfs@@Base+0x1c6>
    c836:	ldrd	r2, r3, [sp, #80]	; 0x50
    c83a:	mov.w	r9, #2
    c83e:	mov.w	sl, #0
    c842:	mov	r1, r4
    c844:	strd	r9, sl, [sp]
    c848:	bl	bd86 <_start@@Base+0x1102>
    c84c:	subs.w	r8, r0, #0
    c850:	blt.w	c99a <make_convert_btrfs@@Base+0x6a4>
    c854:	movs	r2, #3
    c856:	movs	r3, #0
    c858:	strd	r2, r3, [sp, #16]
    c85c:	add.w	fp, sp, #140	; 0x8c
    c860:	ldrd	r2, r3, [sp, #104]	; 0x68
    c864:	add	r7, sp, #136	; 0x88
    c866:	mov	r1, r6
    c868:	mov	r0, r5
    c86a:	str	r7, [sp, #0]
    c86c:	strd	r2, r3, [sp, #8]
    c870:	mov	r3, fp
    c872:	mov	r2, r4
    c874:	bl	be44 <_start@@Base+0x11c0>
    c878:	subs.w	r8, r0, #0
    c87c:	blt.w	c99a <make_convert_btrfs@@Base+0x6a4>
    c880:	strd	r9, sl, [sp, #24]
    c884:	mov.w	r2, #4194304	; 0x400000
    c888:	ldr	r3, [r4, #4]
    c88a:	mov	r1, fp
    c88c:	mov	r0, r6
    c88e:	str	r3, [sp, #16]
    c890:	movs	r3, #0
    c892:	str	r3, [sp, #20]
    c894:	movs	r3, #0
    c896:	strd	r2, r3, [sp, #8]
    c89a:	ldrd	r2, r3, [sp, #104]	; 0x68
    c89e:	strd	r2, r3, [sp]
    c8a2:	mov	r2, r7
    c8a4:	bl	bc60 <_start@@Base+0xfdc>
    c8a8:	movs	r2, #1
    c8aa:	movs	r3, #0
    c8ac:	strd	r2, r3, [sp, #16]
    c8b0:	ldrd	r2, r3, [sp, #72]	; 0x48
    c8b4:	mov	r1, r6
    c8b6:	mov	r0, r5
    c8b8:	str	r7, [sp, #0]
    c8ba:	strd	r2, r3, [sp, #8]
    c8be:	mov	r3, fp
    c8c0:	mov	r2, r4
    c8c2:	bl	be44 <_start@@Base+0x11c0>
    c8c6:	subs.w	r8, r0, #0
    c8ca:	blt.n	c99a <make_convert_btrfs@@Base+0x6a4>
    c8cc:	movs	r2, #4
    c8ce:	movs	r3, #0
    c8d0:	strd	r2, r3, [sp, #24]
    c8d4:	mov.w	r2, #33554432	; 0x2000000
    c8d8:	ldr	r3, [r4, #4]
    c8da:	mov	r0, r6
    c8dc:	add.w	r3, r3, r3, lsl #2
    c8e0:	str	r3, [sp, #16]
    c8e2:	movs	r3, #0
    c8e4:	str	r3, [sp, #20]
    c8e6:	movs	r3, #0
    c8e8:	strd	r2, r3, [sp, #8]
    c8ec:	ldrd	r1, r2, [sp, #72]	; 0x48
    c8f0:	strd	r1, r2, [sp]
    c8f4:	mov	r2, r7
    c8f6:	mov	r1, fp
    c8f8:	bl	bc60 <_start@@Base+0xfdc>
    c8fc:	ldrd	r1, r2, [sp, #80]	; 0x50
    c900:	mov	r3, fp
    c902:	mov	r0, r5
    c904:	strd	r9, sl, [sp, #16]
    c908:	strd	r1, r2, [sp, #8]
    c90c:	mov	r2, r4
    c90e:	mov	r1, r6
    c910:	str	r7, [sp, #0]
    c912:	bl	be44 <_start@@Base+0x11c0>
    c916:	subs.w	r8, r0, #0
    c91a:	blt.n	c99a <make_convert_btrfs@@Base+0x6a4>
    c91c:	movs	r2, #4
    c91e:	movs	r3, #0
    c920:	strd	r2, r3, [sp, #16]
    c924:	mov	r1, r6
    c926:	ldrd	r2, r3, [sp, #88]	; 0x58
    c92a:	mov	r0, r5
    c92c:	str	r7, [sp, #0]
    c92e:	strd	r2, r3, [sp, #8]
    c932:	mov	r3, fp
    c934:	mov	r2, r4
    c936:	bl	be44 <_start@@Base+0x11c0>
    c93a:	subs.w	r8, r0, #0
    c93e:	blt.n	c99a <make_convert_btrfs@@Base+0x6a4>
    c940:	movs	r2, #5
    c942:	movs	r3, #0
    c944:	strd	r2, r3, [sp, #16]
    c948:	mov	r1, r6
    c94a:	ldrd	r2, r3, [sp, #96]	; 0x60
    c94e:	mov	r0, r5
    c950:	str	r7, [sp, #0]
    c952:	strd	r2, r3, [sp, #8]
    c956:	mov	r3, fp
    c958:	mov	r2, r4
    c95a:	bl	be44 <_start@@Base+0x11c0>
    c95e:	subs.w	r8, r0, #0
    c962:	blt.n	c99a <make_convert_btrfs@@Base+0x6a4>
    c964:	movs	r2, #7
    c966:	movs	r3, #0
    c968:	strd	r2, r3, [sp, #16]
    c96c:	mov	r1, r6
    c96e:	ldrd	r2, r3, [sp, #112]	; 0x70
    c972:	mov	r0, r5
    c974:	str	r7, [sp, #0]
    c976:	strd	r2, r3, [sp, #8]
    c97a:	mov	r3, fp
    c97c:	mov	r2, r4
    c97e:	bl	be44 <_start@@Base+0x11c0>
    c982:	subs.w	r8, r0, #0
    c986:	blt.n	c99a <make_convert_btrfs@@Base+0x6a4>
    c988:	ldrd	r2, r3, [sp, #80]	; 0x50
    c98c:	adds	r4, #32
    c98e:	mov	r1, r6
    c990:	mov	r0, r5
    c992:	str	r4, [sp, #0]
    c994:	bl	bd38 <_start@@Base+0x10b4>
    c998:	mov	r8, r0
    c99a:	mov	r0, r6
    c99c:	blx	8b84 <free@plt+0x4>
    c9a0:	b.n	c498 <make_convert_btrfs@@Base+0x1a2>
    c9a2:	mov	r0, r8
    c9a4:	add	sp, #172	; 0xac
    c9a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c9aa:	nop
    c9ac:	ands.w	r0, r0, r5
    c9b0:	lsls	r0, r1, #10
    c9b2:	movs	r0, r0
    c9b4:	and.w	r0, r4, r5
    c9b8:	lsls	r4, r3, #10
    c9ba:	movs	r0, r0
    c9bc:	cmp	r3, #195	; 0xc3
    c9be:	movs	r3, r0
    c9c0:	cmp	r3, #142	; 0x8e
    c9c2:	movs	r3, r0
    c9c4:	cmp	r5, #14
    c9c6:	movs	r3, r0
    c9c8:	cmp	r3, #107	; 0x6b
    c9ca:	movs	r3, r0
    c9cc:	cmp	r2, #175	; 0xaf
    c9ce:	movs	r3, r0
    c9d0:	ldrd	r0, r0, [r8], #-20
    c9d4:	cmp	r1, #227	; 0xe3
    c9d6:	movs	r3, r0
    c9d8:	cmp	r0, #227	; 0xe3
    c9da:	movs	r3, r0
    c9dc:	movs	r7, #206	; 0xce
    c9de:	movs	r3, r0
    c9e0:	ldr.w	ip, [pc, #76]	; ca30 <make_convert_btrfs@@Base+0x73a>
    c9e4:	ldr	r5, [pc, #76]	; (ca34 <make_convert_btrfs@@Base+0x73e>)
    c9e6:	add	ip, pc
    c9e8:	ldr	r4, [pc, #76]	; (ca38 <make_convert_btrfs@@Base+0x742>)
    c9ea:	push	{lr}
    c9ec:	sub	sp, #92	; 0x5c
    c9ee:	ldr.w	r5, [ip, r5]
    c9f2:	add	r4, pc
    c9f4:	ldr	r5, [r5, #0]
    c9f6:	str	r5, [sp, #84]	; 0x54
    c9f8:	mov.w	r5, #0
    c9fc:	ldr	r5, [pc, #60]	; (ca3c <make_convert_btrfs@@Base+0x746>)
    c9fe:	ldr	r4, [r4, r5]
    ca00:	strd	r2, r1, [sp]
    ca04:	movs	r1, #1
    ca06:	strd	r0, r3, [sp, #8]
    ca0a:	ldr	r2, [pc, #52]	; (ca40 <make_convert_btrfs@@Base+0x74a>)
    ca0c:	ldr	r3, [pc, #52]	; (ca44 <make_convert_btrfs@@Base+0x74e>)
    ca0e:	ldr	r0, [r4, #0]
    ca10:	add	r4, sp, #20
    ca12:	add	r3, pc
    ca14:	add	r2, pc
    ca16:	blx	9040 <__fprintf_chk@plt+0x4>
    ca1a:	movs	r1, #16
    ca1c:	mov	r0, r4
    ca1e:	blx	8e98 <backtrace@plt>
    ca22:	movs	r2, #2
    ca24:	mov	r1, r0
    ca26:	mov	r0, r4
    ca28:	blx	9214 <backtrace_symbols_fd@plt>
    ca2c:	blx	91c0 <abort@plt>
    ca30:	b.n	d098 <block_iterate_proc@@Base+0x174>
    ca32:	movs	r5, r0
    ca34:	lsls	r0, r1, #10
    ca36:	movs	r0, r0
    ca38:	b.n	d088 <block_iterate_proc@@Base+0x164>
    ca3a:	movs	r5, r0
    ca3c:	lsls	r4, r3, #10
    ca3e:	movs	r0, r0
    ca40:	adds	r2, r1, r5
    ca42:	movs	r3, r0
    ca44:	movs	r6, #77	; 0x4d
    ca46:	movs	r3, r0

0000ca48 <decode_dev@@Base>:
    ca48:	ldr	r3, [pc, #12]	; (ca58 <decode_dev@@Base+0x10>)
    ca4a:	movs	r1, #0
    ca4c:	and.w	r3, r3, r0, lsr #12
    ca50:	ubfx	r0, r0, #0, #20
    ca54:	orrs	r0, r3
    ca56:	bx	lr
    ca58:	vhadd.u8	d0, d0, d15

0000ca5c <ext2_acl_count@@Base>:
    ca5c:	subs.w	r3, r0, #20
    ca60:	bpl.n	ca6e <ext2_acl_count@@Base+0x12>
    ca62:	lsls	r1, r0, #30
    ca64:	sub.w	r3, r0, #4
    ca68:	bne.n	ca78 <ext2_acl_count@@Base+0x1c>
    ca6a:	lsrs	r0, r3, #2
    ca6c:	bx	lr
    ca6e:	lsls	r2, r3, #29
    ca70:	bne.n	ca78 <ext2_acl_count@@Base+0x1c>
    ca72:	lsrs	r0, r3, #3
    ca74:	adds	r0, #4
    ca76:	bx	lr
    ca78:	mov.w	r0, #4294967295	; 0xffffffff
    ca7c:	bx	lr

0000ca7e <init_convert_context@@Base>:
    ca7e:	push	{r4, lr}
    ca80:	movs	r2, #72	; 0x48
    ca82:	movs	r1, #0
    ca84:	mov	r4, r0
    ca86:	blx	8f98 <memset@plt+0x4>
    ca8a:	add.w	r0, r4, #56	; 0x38
    ca8e:	bl	1a734 <cache_tree_init@@Base>
    ca92:	add.w	r0, r4, #60	; 0x3c
    ca96:	bl	1a734 <cache_tree_init@@Base>
    ca9a:	add.w	r0, r4, #64	; 0x40
    ca9e:	ldmia.w	sp!, {r4, lr}
    caa2:	b.w	1a734 <cache_tree_init@@Base>

0000caa6 <clean_convert_context@@Base>:
    caa6:	push	{r4, lr}
    caa8:	mov	r4, r0
    caaa:	adds	r0, #56	; 0x38
    caac:	bl	1a97e <free_extent_cache_tree@@Base>
    cab0:	add.w	r0, r4, #60	; 0x3c
    cab4:	bl	1a97e <free_extent_cache_tree@@Base>
    cab8:	add.w	r0, r4, #64	; 0x40
    cabc:	ldmia.w	sp!, {r4, lr}
    cac0:	b.w	1a97e <free_extent_cache_tree@@Base>

0000cac4 <init_blk_iterate_data@@Base>:
    cac4:	ldr.w	ip, [pc, #196]	; cb8c <init_blk_iterate_data@@Base+0xc8>
    cac8:	push	{r4, lr}
    caca:	mov	r4, r0
    cacc:	ldr	r0, [pc, #192]	; (cb90 <init_blk_iterate_data@@Base+0xcc>)
    cace:	add	ip, pc
    cad0:	sub	sp, #24
    cad2:	ldr.w	r0, [ip, r0]
    cad6:	ldr	r0, [r0, #0]
    cad8:	str	r0, [sp, #20]
    cada:	mov.w	r0, #0
    cade:	strd	r1, r2, [r4]
    cae2:	str	r3, [r4, #12]
    cae4:	ldrd	r0, r1, [sp, #32]
    cae8:	ldr	r3, [sp, #40]	; 0x28
    caea:	strd	r0, r1, [r4, #24]
    caee:	movs	r0, #0
    caf0:	movs	r1, #0
    caf2:	str	r3, [r4, #64]	; 0x40
    caf4:	strd	r0, r1, [r4, #32]
    caf8:	movs	r3, #0
    cafa:	strd	r0, r1, [r4, #40]	; 0x28
    cafe:	strd	r0, r1, [r4, #48]	; 0x30
    cb02:	mov.w	r0, #4294967295	; 0xffffffff
    cb06:	str	r3, [r4, #68]	; 0x44
    cb08:	mov.w	r1, #4294967295	; 0xffffffff
    cb0c:	strd	r0, r1, [r4, #56]	; 0x38
    cb10:	mov.w	r0, #256	; 0x100
    cb14:	movs	r1, #0
    cb16:	strd	r0, r1, [sp]
    cb1a:	mov.w	r1, #4294967295	; 0xffffffff
    cb1e:	ldr.w	r0, [r2, #464]	; 0x1d0
    cb22:	strb.w	r1, [sp, #9]
    cb26:	movs	r3, #132	; 0x84
    cb28:	strb.w	r1, [sp, #10]
    cb2c:	strb.w	r1, [sp, #11]
    cb30:	strb.w	r1, [sp, #12]
    cb34:	strb.w	r1, [sp, #13]
    cb38:	strb.w	r1, [sp, #14]
    cb3c:	strb.w	r1, [sp, #15]
    cb40:	strb.w	r1, [sp, #16]
    cb44:	mov	r1, sp
    cb46:	strb.w	r3, [sp, #8]
    cb4a:	bl	222a6 <btrfs_read_fs_root@@Base>
    cb4e:	str	r0, [r4, #8]
    cb50:	cbz	r0, cb76 <init_blk_iterate_data@@Base+0xb2>
    cb52:	cmn.w	r0, #4096	; 0x1000
    cb56:	bhi.n	cb76 <init_blk_iterate_data@@Base+0xb2>
    cb58:	movw	r2, #257	; 0x101
    cb5c:	movs	r3, #0
    cb5e:	strd	r2, r3, [r4, #16]
    cb62:	ldr	r2, [pc, #48]	; (cb94 <init_blk_iterate_data@@Base+0xd0>)
    cb64:	ldr	r3, [pc, #40]	; (cb90 <init_blk_iterate_data@@Base+0xcc>)
    cb66:	add	r2, pc
    cb68:	ldr	r3, [r2, r3]
    cb6a:	ldr	r2, [r3, #0]
    cb6c:	ldr	r3, [sp, #20]
    cb6e:	eors	r2, r3
    cb70:	beq.n	cb86 <init_blk_iterate_data@@Base+0xc2>
    cb72:	blx	8c90 <__stack_chk_fail@plt>
    cb76:	ldr	r1, [pc, #32]	; (cb98 <init_blk_iterate_data@@Base+0xd4>)
    cb78:	movs	r3, #1
    cb7a:	ldr	r0, [pc, #32]	; (cb9c <init_blk_iterate_data@@Base+0xd8>)
    cb7c:	movs	r2, #159	; 0x9f
    cb7e:	add	r1, pc
    cb80:	add	r0, pc
    cb82:	bl	c9e0 <make_convert_btrfs@@Base+0x6ea>
    cb86:	add	sp, #24
    cb88:	pop	{r4, pc}
    cb8a:	nop
    cb8c:	b.n	d024 <block_iterate_proc@@Base+0x100>
    cb8e:	movs	r5, r0
    cb90:	lsls	r0, r1, #10
    cb92:	movs	r0, r0
    cb94:	b.n	cefc <record_file_blocks@@Base+0x24e>
    cb96:	movs	r5, r0
    cb98:	movs	r5, #182	; 0xb6
    cb9a:	movs	r3, r0
    cb9c:	movs	r4, #243	; 0xf3
    cb9e:	movs	r3, r0

0000cba0 <convert_insert_dirent@@Base>:
    cba0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cba4:	sub	sp, #52	; 0x34
    cba6:	ldr.w	lr, [pc, #200]	; cc70 <convert_insert_dirent@@Base+0xd0>
    cbaa:	mov	r6, r0
    cbac:	ldr.w	ip, [pc, #196]	; cc74 <convert_insert_dirent@@Base+0xd4>
    cbb0:	mov	r7, r1
    cbb2:	add	lr, pc
    cbb4:	ldrd	r8, r9, [sp, #112]	; 0x70
    cbb8:	ldr	r5, [sp, #120]	; 0x78
    cbba:	mov	sl, r2
    cbbc:	ldr.w	ip, [lr, ip]
    cbc0:	mov	r4, r3
    cbc2:	mov.w	lr, #0
    cbc6:	ldr.w	ip, [ip]
    cbca:	str.w	ip, [sp, #44]	; 0x2c
    cbce:	mov.w	ip, #0
    cbd2:	ldrd	fp, ip, [sp, #96]	; 0x60
    cbd6:	strd	r8, r9, [sp, #16]
    cbda:	strb.w	lr, [sp, #33]	; 0x21
    cbde:	strd	fp, ip, [sp, #24]
    cbe2:	mov.w	ip, #1
    cbe6:	strb.w	ip, [sp, #32]
    cbea:	ldrb.w	ip, [sp, #104]	; 0x68
    cbee:	strb.w	lr, [sp, #34]	; 0x22
    cbf2:	strb.w	lr, [sp, #35]	; 0x23
    cbf6:	str.w	ip, [sp, #12]
    cbfa:	add.w	ip, sp, #24
    cbfe:	str.w	ip, [sp, #8]
    cc02:	ldrd	fp, ip, [sp, #88]	; 0x58
    cc06:	strb.w	lr, [sp, #36]	; 0x24
    cc0a:	strb.w	lr, [sp, #37]	; 0x25
    cc0e:	strd	fp, ip, [sp]
    cc12:	strb.w	lr, [sp, #38]	; 0x26
    cc16:	strb.w	lr, [sp, #39]	; 0x27
    cc1a:	strb.w	lr, [sp, #40]	; 0x28
    cc1e:	bl	e4dc <btrfs_insert_dir_item@@Base>
    cc22:	cbnz	r0, cc56 <convert_insert_dirent@@Base+0xb6>
    cc24:	ldrd	r2, r3, [sp, #88]	; 0x58
    cc28:	mov	r1, r7
    cc2a:	mov	r0, r6
    cc2c:	strd	r8, r9, [sp, #16]
    cc30:	strd	r2, r3, [sp, #8]
    cc34:	ldrd	r2, r3, [sp, #96]	; 0x60
    cc38:	strd	r2, r3, [sp]
    cc3c:	mov	r3, r4
    cc3e:	mov	r2, sl
    cc40:	bl	32514 <btrfs_insert_inode_ref@@Base>
    cc44:	cbnz	r0, cc56 <convert_insert_dirent@@Base+0xb6>
    cc46:	ldr	r2, [r5, #16]
    cc48:	lsls	r4, r4, #1
    cc4a:	ldr	r3, [r5, #20]
    cc4c:	adds	r2, r2, r4
    cc4e:	str	r2, [r5, #16]
    cc50:	adc.w	r3, r3, #0
    cc54:	str	r3, [r5, #20]
    cc56:	ldr	r2, [pc, #32]	; (cc78 <convert_insert_dirent@@Base+0xd8>)
    cc58:	ldr	r3, [pc, #24]	; (cc74 <convert_insert_dirent@@Base+0xd4>)
    cc5a:	add	r2, pc
    cc5c:	ldr	r3, [r2, r3]
    cc5e:	ldr	r2, [r3, #0]
    cc60:	ldr	r3, [sp, #44]	; 0x2c
    cc62:	eors	r2, r3
    cc64:	beq.n	cc6a <convert_insert_dirent@@Base+0xca>
    cc66:	blx	8c90 <__stack_chk_fail@plt>
    cc6a:	add	sp, #52	; 0x34
    cc6c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc70:	b.n	cf40 <block_iterate_proc@@Base+0x1c>
    cc72:	movs	r5, r0
    cc74:	lsls	r0, r1, #10
    cc76:	movs	r0, r0
    cc78:	b.n	cdf8 <record_file_blocks@@Base+0x14a>
    cc7a:	movs	r5, r0

0000cc7c <read_disk_extent@@Base>:
    cc7c:	push	{r0, r1, r4, r6, r7, lr}
    cc7e:	mov	r7, r3
    cc80:	ldr.w	r3, [r0, #464]	; 0x1d0
    cc84:	mov	r6, r2
    cc86:	ldr	r4, [sp, #24]
    cc88:	ldr	r1, [sp, #28]
    cc8a:	ldr.w	r3, [r3, #352]	; 0x160
    cc8e:	mov	r2, r4
    cc90:	strd	r6, r7, [sp]
    cc94:	ldr	r0, [r3, #64]	; 0x40
    cc96:	blx	8dcc <pread64@plt>
    cc9a:	cmp	r0, r4
    cc9c:	beq.n	ccaa <read_disk_extent@@Base+0x2e>
    cc9e:	cmp	r0, #0
    cca0:	it	gt
    cca2:	mvngt.w	r0, #4
    cca6:	add	sp, #8
    cca8:	pop	{r4, r6, r7, pc}
    ccaa:	movs	r0, #0
    ccac:	b.n	cca6 <read_disk_extent@@Base+0x2a>

0000ccae <record_file_blocks@@Base>:
    ccae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccb2:	mov	r4, r0
    ccb4:	vpush	{d8}
    ccb8:	ldr	r0, [pc, #588]	; (cf08 <record_file_blocks@@Base+0x25a>)
    ccba:	ldr	r1, [pc, #592]	; (cf0c <record_file_blocks@@Base+0x25e>)
    ccbc:	add	r0, pc
    ccbe:	sub	sp, #188	; 0xbc
    ccc0:	ldr	r1, [r0, r1]
    ccc2:	ldr	r1, [r1, #0]
    ccc4:	str	r1, [sp, #180]	; 0xb4
    ccc6:	mov.w	r1, #0
    ccca:	ldr	r1, [r4, #4]
    cccc:	ldr.w	r0, [r1, #464]	; 0x1d0
    ccd0:	ldr.w	r0, [r0, #388]	; 0x184
    ccd4:	umull	r5, r6, r0, r2
    ccd8:	strd	r5, r6, [sp, #32]
    ccdc:	ldr	r2, [sp, #36]	; 0x24
    ccde:	ldr	r6, [sp, #240]	; 0xf0
    cce0:	mla	r3, r0, r3, r2
    cce4:	umull	r6, r7, r0, r6
    cce8:	str	r3, [sp, #36]	; 0x24
    ccea:	ldr	r3, [sp, #232]	; 0xe8
    ccec:	umull	r8, r9, r0, r3
    ccf0:	ldr	r3, [sp, #236]	; 0xec
    ccf2:	mla	r9, r0, r3, r9
    ccf6:	ldr	r3, [sp, #244]	; 0xf4
    ccf8:	mla	r7, r0, r3, r7
    ccfc:	orrs.w	r3, r8, r9
    cd00:	bne.n	cd38 <record_file_blocks@@Base+0x8a>
    cd02:	ldrd	r2, r3, [sp, #32]
    cd06:	ldr	r0, [r4, #0]
    cd08:	strd	r6, r7, [sp, #24]
    cd0c:	strd	r2, r3, [sp, #8]
    cd10:	ldr	r3, [r4, #12]
    cd12:	strd	r8, r9, [sp, #16]
    cd16:	str	r3, [sp, #0]
    cd18:	ldrd	r2, r3, [r4, #24]
    cd1c:	bl	27edc <btrfs_record_file_extent@@Base>
    cd20:	mov	fp, r0
    cd22:	ldr	r2, [pc, #492]	; (cf10 <record_file_blocks@@Base+0x262>)
    cd24:	ldr	r3, [pc, #484]	; (cf0c <record_file_blocks@@Base+0x25e>)
    cd26:	add	r2, pc
    cd28:	ldr	r3, [r2, r3]
    cd2a:	ldr	r2, [r3, #0]
    cd2c:	ldr	r3, [sp, #180]	; 0xb4
    cd2e:	eors	r2, r3
    cd30:	beq.w	cefa <record_file_blocks@@Base+0x24c>
    cd34:	blx	8c90 <__stack_chk_fail@plt>
    cd38:	ldr	r3, [r4, #8]
    cd3a:	add	r0, sp, #112	; 0x70
    cd3c:	mov.w	fp, #0
    cd40:	vmov	s16, r3
    cd44:	bl	1c6e8 <btrfs_init_path@@Base>
    cd48:	adds.w	r3, r8, r6
    cd4c:	str	r3, [sp, #56]	; 0x38
    cd4e:	adc.w	r3, r9, r7
    cd52:	str	r3, [sp, #60]	; 0x3c
    cd54:	ldrd	r2, r3, [sp, #56]	; 0x38
    cd58:	cmp	r9, r3
    cd5a:	it	eq
    cd5c:	cmpeq	r8, r2
    cd5e:	bcs.n	ce4c <record_file_blocks@@Base+0x19e>
    cd60:	ldrd	r2, r3, [r4, #16]
    cd64:	add	r5, sp, #112	; 0x70
    cd66:	movs	r0, #0
    cd68:	vmov	r1, s16
    cd6c:	strd	r0, r0, [sp]
    cd70:	strd	r2, r3, [sp, #72]	; 0x48
    cd74:	mov.w	r3, #108	; 0x6c
    cd78:	add	r2, sp, #72	; 0x48
    cd7a:	strb.w	r3, [sp, #80]	; 0x50
    cd7e:	mov	r3, r5
    cd80:	str.w	r8, [sp, #81]	; 0x51
    cd84:	str.w	r9, [sp, #85]	; 0x55
    cd88:	bl	1eadc <btrfs_search_slot@@Base>
    cd8c:	subs.w	fp, r0, #0
    cd90:	blt.n	ce4c <record_file_blocks@@Base+0x19e>
    cd92:	bne.n	ce2e <record_file_blocks@@Base+0x180>
    cd94:	ldr	r2, [sp, #144]	; 0x90
    cd96:	movs	r6, #25
    cd98:	ldr	r5, [sp, #112]	; 0x70
    cd9a:	add	r1, sp, #92	; 0x5c
    cd9c:	movs	r3, #17
    cd9e:	muls	r6, r2
    cda0:	mov	r0, r5
    cda2:	adds	r6, #101	; 0x65
    cda4:	mov	r2, r6
    cda6:	bl	1bbba <read_extent_buffer@@Base>
    cdaa:	ldrb.w	r1, [sp, #100]	; 0x64
    cdae:	ldr.w	sl, [sp, #101]	; 0x65
    cdb2:	ldr.w	fp, [sp, #105]	; 0x69
    cdb6:	cmp	r1, #108	; 0x6c
    cdb8:	ldrd	r2, r3, [sp, #92]	; 0x5c
    cdbc:	str.w	sl, [sp, #81]	; 0x51
    cdc0:	str.w	fp, [sp, #85]	; 0x55
    cdc4:	strb.w	r1, [sp, #80]	; 0x50
    cdc8:	strd	r2, r3, [sp, #72]	; 0x48
    cdcc:	bne.n	ce54 <record_file_blocks@@Base+0x1a6>
    cdce:	ldrd	r0, r1, [r4, #16]
    cdd2:	cmp	r1, r3
    cdd4:	it	eq
    cdd6:	cmpeq	r0, r2
    cdd8:	bne.n	ce54 <record_file_blocks@@Base+0x1a6>
    cdda:	cmp	r9, fp
    cddc:	it	eq
    cdde:	cmpeq	r8, sl
    cde0:	bcc.n	ce54 <record_file_blocks@@Base+0x1a6>
    cde2:	adds	r5, #96	; 0x60
    cde4:	add	r6, r5
    cde6:	ldr.w	r0, [r6, #17]
    cdea:	adds	r0, #101	; 0x65
    cdec:	add	r5, r0
    cdee:	mov	r3, r5
    cdf0:	ldr.w	r6, [r3, #21]!
    cdf4:	ldr	r7, [r3, #4]
    cdf6:	ldr.w	r3, [r5, #45]!
    cdfa:	str	r3, [sp, #48]	; 0x30
    cdfc:	ldr	r3, [r5, #4]
    cdfe:	str	r3, [sp, #52]	; 0x34
    ce00:	subs.w	r3, r8, sl
    ce04:	str	r3, [sp, #64]	; 0x40
    ce06:	sbc.w	r3, r9, fp
    ce0a:	str	r3, [sp, #68]	; 0x44
    ce0c:	ldrd	r2, r3, [sp, #64]	; 0x40
    ce10:	ldrd	r0, r1, [sp, #48]	; 0x30
    ce14:	cmp	r3, r1
    ce16:	it	eq
    ce18:	cmpeq	r2, r0
    ce1a:	bcc.n	ce68 <record_file_blocks@@Base+0x1ba>
    ce1c:	ldr	r1, [pc, #244]	; (cf14 <record_file_blocks@@Base+0x266>)
    ce1e:	movs	r3, #1
    ce20:	ldr	r0, [pc, #244]	; (cf18 <record_file_blocks@@Base+0x26a>)
    ce22:	movw	r2, #275	; 0x113
    ce26:	add	r1, pc
    ce28:	adds	r1, #22
    ce2a:	add	r0, pc
    ce2c:	b.n	ce64 <record_file_blocks@@Base+0x1b6>
    ce2e:	movs	r3, #108	; 0x6c
    ce30:	vmov	r0, s16
    ce34:	str	r3, [sp, #0]
    ce36:	mov	r1, r5
    ce38:	ldrd	r2, r3, [r4, #16]
    ce3c:	bl	20194 <btrfs_previous_item@@Base>
    ce40:	subs.w	fp, r0, #0
    ce44:	blt.n	ce4c <record_file_blocks@@Base+0x19e>
    ce46:	beq.n	cd94 <record_file_blocks@@Base+0xe6>
    ce48:	mvn.w	fp, #1
    ce4c:	add	r0, sp, #112	; 0x70
    ce4e:	bl	1c6f8 <btrfs_release_path@@Base>
    ce52:	b.n	cd22 <record_file_blocks@@Base+0x74>
    ce54:	ldr	r1, [pc, #196]	; (cf1c <record_file_blocks@@Base+0x26e>)
    ce56:	movs	r3, #1
    ce58:	ldr	r0, [pc, #196]	; (cf20 <record_file_blocks@@Base+0x272>)
    ce5a:	movw	r2, #269	; 0x10d
    ce5e:	add	r1, pc
    ce60:	adds	r1, #22
    ce62:	add	r0, pc
    ce64:	bl	c9e0 <make_convert_btrfs@@Base+0x6ea>
    ce68:	add	r0, sp, #112	; 0x70
    ce6a:	bl	1c6f8 <btrfs_release_path@@Base>
    ce6e:	orrs.w	r3, r6, r7
    ce72:	beq.n	ce8a <record_file_blocks@@Base+0x1dc>
    ce74:	ldr.w	r3, [sp, #81]	; 0x51
    ce78:	ldr.w	r2, [sp, #85]	; 0x55
    ce7c:	subs	r3, r6, r3
    ce7e:	sbc.w	r2, r7, r2
    ce82:	adds.w	r6, r3, r8
    ce86:	adc.w	r7, r2, r9
    ce8a:	ldr	r1, [sp, #48]	; 0x30
    ce8c:	ldr.w	r3, [sp, #81]	; 0x51
    ce90:	ldr.w	r2, [sp, #85]	; 0x55
    ce94:	adds	r3, r3, r1
    ce96:	str	r3, [sp, #40]	; 0x28
    ce98:	ldr	r3, [sp, #52]	; 0x34
    ce9a:	strd	r6, r7, [sp, #16]
    ce9e:	adc.w	r3, r2, r3
    cea2:	str	r3, [sp, #44]	; 0x2c
    cea4:	ldrd	r0, r1, [sp, #40]	; 0x28
    cea8:	ldrd	r2, r3, [sp, #56]	; 0x38
    ceac:	cmp	r3, r1
    ceae:	it	eq
    ceb0:	cmpeq	r2, r0
    ceb2:	it	cc
    ceb4:	strdcc	r2, r3, [sp, #40]	; 0x28
    ceb8:	ldr	r3, [sp, #40]	; 0x28
    ceba:	ldrd	r0, r1, [r4]
    cebe:	subs.w	r5, r3, r8
    cec2:	ldr	r3, [sp, #44]	; 0x2c
    cec4:	sbc.w	sl, r3, r9
    cec8:	ldrd	r2, r3, [sp, #32]
    cecc:	strd	r5, sl, [sp, #24]
    ced0:	strd	r2, r3, [sp, #8]
    ced4:	ldr	r3, [r4, #12]
    ced6:	str	r3, [sp, #0]
    ced8:	ldrd	r2, r3, [r4, #24]
    cedc:	bl	27edc <btrfs_record_file_extent@@Base>
    cee0:	subs.w	fp, r0, #0
    cee4:	blt.n	ce4c <record_file_blocks@@Base+0x19e>
    cee6:	ldr	r3, [sp, #32]
    cee8:	ldrd	r8, r9, [sp, #40]	; 0x28
    ceec:	adds	r3, r3, r5
    ceee:	str	r3, [sp, #32]
    cef0:	ldr	r3, [sp, #36]	; 0x24
    cef2:	adc.w	r3, r3, sl
    cef6:	str	r3, [sp, #36]	; 0x24
    cef8:	b.n	cd54 <record_file_blocks@@Base+0xa6>
    cefa:	mov	r0, fp
    cefc:	add	sp, #188	; 0xbc
    cefe:	vpop	{d8}
    cf02:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cf06:	nop
    cf08:	b.n	cfc4 <block_iterate_proc@@Base+0xa0>
    cf0a:	movs	r5, r0
    cf0c:	lsls	r0, r1, #10
    cf0e:	movs	r0, r0
    cf10:	svc	242	; 0xf2
    cf12:	movs	r5, r0
    cf14:	movs	r3, #14
    cf16:	movs	r3, r0
    cf18:	movs	r2, #218	; 0xda
    cf1a:	movs	r3, r0
    cf1c:	movs	r2, #214	; 0xd6
    cf1e:	movs	r3, r0
    cf20:	movs	r2, #67	; 0x43
    cf22:	movs	r3, r0

0000cf24 <block_iterate_proc@@Base>:
    cf24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf28:	sub	sp, #68	; 0x44
    cf2a:	mov	sl, r2
    cf2c:	mov	fp, r3
    cf2e:	ldr	r4, [sp, #104]	; 0x68
    cf30:	mov.w	ip, #0
    cf34:	strd	r0, r1, [sp, #16]
    cf38:	ldr	r3, [pc, #412]	; (d0d8 <block_iterate_proc@@Base+0x1b4>)
    cf3a:	ldr	r2, [r4, #4]
    cf3c:	add	r3, pc
    cf3e:	str	r2, [sp, #36]	; 0x24
    cf40:	ldr.w	r2, [r2, #464]	; 0x1d0
    cf44:	ldr.w	r5, [r2, #388]	; 0x184
    cf48:	umull	r1, r2, r5, r0
    cf4c:	strd	r1, r2, [sp, #24]
    cf50:	ldr	r1, [sp, #28]
    cf52:	ldr	r2, [sp, #20]
    cf54:	mla	r2, r5, r2, r1
    cf58:	str	r2, [sp, #28]
    cf5a:	ldrd	r0, r1, [sp, #24]
    cf5e:	ldr	r2, [pc, #380]	; (d0dc <block_iterate_proc@@Base+0x1b8>)
    cf60:	adds	r0, r0, r5
    cf62:	adc.w	r1, r1, #0
    cf66:	ldr	r7, [r3, r2]
    cf68:	strd	r0, r1, [sp, #56]	; 0x38
    cf6c:	ldrd	r2, r3, [r7]
    cf70:	ldr	r1, [r7, #8]
    cf72:	adds.w	r8, r2, r1
    cf76:	ldr	r1, [r7, #12]
    cf78:	adc.w	r9, r3, r1
    cf7c:	ldrd	r0, r1, [sp, #24]
    cf80:	cmp	r1, r9
    cf82:	it	eq
    cf84:	cmpeq	r0, r8
    cf86:	bcs.n	cf94 <block_iterate_proc@@Base+0x70>
    cf88:	ldrd	r0, r1, [sp, #56]	; 0x38
    cf8c:	cmp	r1, r3
    cf8e:	it	eq
    cf90:	cmpeq	r0, r2
    cf92:	bcs.n	cfbe <block_iterate_proc@@Base+0x9a>
    cf94:	add.w	ip, ip, #1
    cf98:	adds	r7, #16
    cf9a:	cmp.w	ip, #3
    cf9e:	bne.n	cf6c <block_iterate_proc@@Base+0x48>
    cfa0:	ldrd	r0, r1, [sp, #16]
    cfa4:	mov.w	r8, #0
    cfa8:	ldrd	r2, r3, [r4, #56]	; 0x38
    cfac:	mov.w	r9, #0
    cfb0:	cmp	r1, r3
    cfb2:	it	eq
    cfb4:	cmpeq	r0, r2
    cfb6:	ite	cs
    cfb8:	movcs	r1, #1
    cfba:	movcc	r1, #0
    cfbc:	b.n	cfc0 <block_iterate_proc@@Base+0x9c>
    cfbe:	movs	r1, #1
    cfc0:	ldrd	r2, r3, [r4, #48]	; 0x30
    cfc4:	orrs.w	r0, r2, r3
    cfc8:	beq.n	cfcc <block_iterate_proc@@Base+0xa8>
    cfca:	cbnz	r1, d00a <block_iterate_proc@@Base+0xe6>
    cfcc:	ldrd	r1, r0, [r4, #32]
    cfd0:	adds	r1, r2, r1
    cfd2:	str	r1, [sp, #40]	; 0x28
    cfd4:	adc.w	r1, r3, r0
    cfd8:	str	r1, [sp, #44]	; 0x2c
    cfda:	ldrd	r0, r1, [sp, #40]	; 0x28
    cfde:	cmp	r1, fp
    cfe0:	it	eq
    cfe2:	cmpeq	r0, sl
    cfe4:	bcc.n	d004 <block_iterate_proc@@Base+0xe0>
    cfe6:	ldrd	r1, r0, [r4, #40]	; 0x28
    cfea:	ldrd	r6, r7, [sp, #16]
    cfee:	adds	r1, r2, r1
    cff0:	str	r1, [sp, #48]	; 0x30
    cff2:	adc.w	r1, r3, r0
    cff6:	str	r1, [sp, #52]	; 0x34
    cff8:	ldrd	r0, r1, [sp, #48]	; 0x30
    cffc:	cmp	r1, r7
    cffe:	it	eq
    d000:	cmpeq	r0, r6
    d002:	beq.n	d0c4 <block_iterate_proc@@Base+0x1a0>
    d004:	orrs.w	r1, r2, r3
    d008:	beq.n	d03c <block_iterate_proc@@Base+0x118>
    d00a:	strd	r2, r3, [sp, #8]
    d00e:	mov	r0, r4
    d010:	ldrd	r2, r3, [r4, #40]	; 0x28
    d014:	strd	r2, r3, [sp]
    d018:	ldrd	r2, r3, [r4, #32]
    d01c:	bl	ccae <record_file_blocks@@Base>
    d020:	cbnz	r0, d08e <block_iterate_proc@@Base+0x16a>
    d022:	ldrd	r3, r2, [r4, #32]
    d026:	ldrd	r1, r0, [r4, #48]	; 0x30
    d02a:	adds	r3, r3, r1
    d02c:	adc.w	r2, r0, r2
    d030:	strd	r3, r2, [r4, #32]
    d034:	movs	r2, #0
    d036:	movs	r3, #0
    d038:	strd	r2, r3, [r4, #48]	; 0x30
    d03c:	ldrd	r2, r3, [r4, #32]
    d040:	cmp	r3, fp
    d042:	it	eq
    d044:	cmpeq	r2, sl
    d046:	bcc.n	d070 <block_iterate_proc@@Base+0x14c>
    d048:	orrs.w	r3, r8, r9
    d04c:	bne.n	d0a8 <block_iterate_proc@@Base+0x184>
    d04e:	ldr	r1, [sp, #36]	; 0x24
    d050:	ldrd	r2, r3, [sp, #24]
    d054:	ldr.w	r0, [r1, #464]	; 0x1d0
    d058:	bl	23754 <btrfs_lookup_block_group@@Base>
    d05c:	cbnz	r0, d094 <block_iterate_proc@@Base+0x170>
    d05e:	ldr	r1, [pc, #128]	; (d0e0 <block_iterate_proc@@Base+0x1bc>)
    d060:	movs	r3, #1
    d062:	ldr	r0, [pc, #128]	; (d0e4 <block_iterate_proc@@Base+0x1c0>)
    d064:	movs	r2, #122	; 0x7a
    d066:	add	r1, pc
    d068:	adds	r1, #41	; 0x29
    d06a:	add	r0, pc
    d06c:	bl	c9e0 <make_convert_btrfs@@Base+0x6ea>
    d070:	subs.w	r0, sl, r2
    d074:	sbc.w	r1, fp, r3
    d078:	strd	r0, r1, [sp, #8]
    d07c:	movs	r0, #0
    d07e:	movs	r1, #0
    d080:	strd	r0, r1, [sp]
    d084:	mov	r0, r4
    d086:	bl	ccae <record_file_blocks@@Base>
    d08a:	cmp	r0, #0
    d08c:	beq.n	d048 <block_iterate_proc@@Base+0x124>
    d08e:	add	sp, #68	; 0x44
    d090:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d094:	ldr.w	r3, [r0, #49]	; 0x31
    d098:	ldr.w	r2, [r0, #53]	; 0x35
    d09c:	ldrd	r1, r0, [r0, #40]	; 0x28
    d0a0:	adds.w	r8, r3, r1
    d0a4:	adc.w	r9, r2, r0
    d0a8:	ldrd	r2, r3, [sp, #16]
    d0ac:	mov	r0, r8
    d0ae:	mov	r1, r9
    d0b0:	strd	sl, fp, [r4, #32]
    d0b4:	strd	r2, r3, [r4, #40]	; 0x28
    d0b8:	mov	r2, r5
    d0ba:	movs	r3, #0
    d0bc:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
    d0c0:	strd	r0, r1, [r4, #56]	; 0x38
    d0c4:	ldrd	r3, r2, [r4, #48]	; 0x30
    d0c8:	movs	r0, #0
    d0ca:	adds	r3, #1
    d0cc:	adc.w	r2, r2, #0
    d0d0:	strd	r3, r2, [r4, #48]	; 0x30
    d0d4:	b.n	d08e <block_iterate_proc@@Base+0x16a>
    d0d6:	nop
    d0d8:	ble.n	d094 <block_iterate_proc@@Base+0x170>
    d0da:	movs	r5, r0
    d0dc:	lsls	r4, r1, #10
    d0de:	movs	r0, r0
    d0e0:	movs	r0, #206	; 0xce
    d0e2:	movs	r3, r0
    d0e4:	movs	r0, #195	; 0xc3
    d0e6:	movs	r3, r0
    d0e8:	ldr	r3, [r0, #68]	; 0x44
    d0ea:	ldr	r3, [r3, #16]
    d0ec:	ldrh	r0, [r3, #58]	; 0x3a
    d0ee:	lsls	r3, r0, #31
    d0f0:	ite	mi
    d0f2:	ubfxmi	r0, r0, #1, #1
    d0f6:	movpl	r0, #1
    d0f8:	bx	lr
    d0fa:	push	{r4, lr}
    d0fc:	mov	r4, r0
    d0fe:	ldr	r0, [r0, #48]	; 0x30
    d100:	cbz	r0, d10a <block_iterate_proc@@Base+0x1e6>
    d102:	blx	8b84 <free@plt+0x4>
    d106:	movs	r3, #0
    d108:	str	r3, [r4, #48]	; 0x30
    d10a:	ldr	r0, [r4, #68]	; 0x44
    d10c:	blx	8e80 <ext2fs_close@plt>
    d110:	ldr	r0, [r4, #68]	; 0x44
    d112:	ldmia.w	sp!, {r4, lr}
    d116:	b.w	8ad0 <ext2fs_free@plt>
    d11a:	push	{r0, r1, r4, lr}
    d11c:	ldr	r4, [sp, #24]
    d11e:	ldr	r0, [r1, #0]
    d120:	movs	r1, #0
    d122:	str	r4, [sp, #0]
    d124:	bl	cf24 <block_iterate_proc@@Base>
    d128:	cbz	r0, d12e <block_iterate_proc@@Base+0x20a>
    d12a:	str	r0, [r4, #68]	; 0x44
    d12c:	movs	r0, #2
    d12e:	add	sp, #8
    d130:	pop	{r4, pc}
    d132:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d136:	mov	r8, r1
    d138:	vpush	{d8}
    d13c:	ldr	r5, [pc, #552]	; (d368 <block_iterate_proc@@Base+0x444>)
    d13e:	vmov	s16, r0
    d142:	add	r5, pc
    d144:	sub	sp, #140	; 0x8c
    d146:	add.w	r9, sp, #56	; 0x38
    d14a:	strd	r2, r3, [sp, #48]	; 0x30
    d14e:	ldr	r2, [pc, #540]	; (d36c <block_iterate_proc@@Base+0x448>)
    d150:	ldr	r3, [pc, #540]	; (d370 <block_iterate_proc@@Base+0x44c>)
    d152:	add	r2, pc
    d154:	ldrd	r7, r4, [sp, #184]	; 0xb8
    d158:	ldr.w	sl, [sp, #196]	; 0xc4
    d15c:	ldr	r3, [r2, r3]
    d15e:	mov	r2, r1
    d160:	ldr	r3, [r3, #0]
    d162:	str	r3, [sp, #132]	; 0x84
    d164:	mov.w	r3, #0
    d168:	ldr.w	r3, [r1, #464]	; 0x1d0
    d16c:	mov	r1, r0
    d16e:	mov	r0, r9
    d170:	ldr.w	r6, [r3, #388]	; 0x184
    d174:	ldr	r3, [r7, #16]
    d176:	str	r3, [sp, #16]
    d178:	ldr	r3, [r7, #20]
    d17a:	str	r3, [sp, #20]
    d17c:	and.w	r3, sl, #1
    d180:	str	r3, [sp, #8]
    d182:	ldr	r3, [sp, #48]	; 0x30
    d184:	str	r3, [sp, #0]
    d186:	ldr	r3, [sp, #52]	; 0x34
    d188:	str	r3, [sp, #4]
    d18a:	mov	r3, r7
    d18c:	bl	cac4 <init_blk_iterate_data@@Base>
    d190:	ldr	r3, [pc, #480]	; (d374 <block_iterate_proc@@Base+0x450>)
    d192:	mov	r0, r4
    d194:	ldr	r1, [sp, #192]	; 0xc0
    d196:	add	r3, pc
    d198:	movs	r2, #4
    d19a:	str	r3, [sp, #0]
    d19c:	movs	r3, #0
    d19e:	str.w	r9, [sp, #4]
    d1a2:	blx	9164 <ext2fs_block_iterate2@plt>
    d1a6:	mov	r4, r0
    d1a8:	cbz	r0, d1dc <block_iterate_proc@@Base+0x2b8>
    d1aa:	ldr	r3, [pc, #460]	; (d378 <block_iterate_proc@@Base+0x454>)
    d1ac:	ldr	r3, [r5, r3]
    d1ae:	mov.w	r5, #4294967295	; 0xffffffff
    d1b2:	ldr	r4, [r3, #0]
    d1b4:	blx	9018 <error_message@plt>
    d1b8:	ldr	r2, [pc, #448]	; (d37c <block_iterate_proc@@Base+0x458>)
    d1ba:	movs	r1, #1
    d1bc:	add	r2, pc
    d1be:	mov	r3, r0
    d1c0:	mov	r0, r4
    d1c2:	blx	9040 <__fprintf_chk@plt+0x4>
    d1c6:	ldr	r2, [pc, #440]	; (d380 <block_iterate_proc@@Base+0x45c>)
    d1c8:	ldr	r3, [pc, #420]	; (d370 <block_iterate_proc@@Base+0x44c>)
    d1ca:	add	r2, pc
    d1cc:	ldr	r3, [r2, r3]
    d1ce:	ldr	r2, [r3, #0]
    d1d0:	ldr	r3, [sp, #132]	; 0x84
    d1d2:	eors	r2, r3
    d1d4:	beq.w	d35a <block_iterate_proc@@Base+0x436>
    d1d8:	blx	8c90 <__stack_chk_fail@plt>
    d1dc:	ldr	r5, [sp, #124]	; 0x7c
    d1de:	cmp	r5, #0
    d1e0:	bne.w	d322 <block_iterate_proc@@Base+0x3fe>
    d1e4:	ldrd	r3, r4, [sp, #88]	; 0x58
    d1e8:	tst.w	sl, #2
    d1ec:	strd	r3, r4, [sp, #32]
    d1f0:	ldrd	r2, r3, [sp, #104]	; 0x68
    d1f4:	beq.w	d32a <block_iterate_proc@@Base+0x406>
    d1f8:	ldrd	r0, r1, [sp, #32]
    d1fc:	orrs	r1, r0
    d1fe:	bne.w	d32a <block_iterate_proc@@Base+0x406>
    d202:	orrs.w	r1, r2, r3
    d206:	beq.w	d330 <block_iterate_proc@@Base+0x40c>
    d20a:	ldrd	sl, fp, [sp, #16]
    d20e:	movs	r1, #0
    d210:	cmp	fp, r1
    d212:	it	eq
    d214:	cmpeq	sl, r6
    d216:	bcs.w	d334 <block_iterate_proc@@Base+0x410>
    d21a:	ldr.w	r1, [r8, #464]	; 0x1d0
    d21e:	ldr.w	r0, [r1, #384]	; 0x180
    d222:	movs	r1, #0
    d224:	cmp	r1, fp
    d226:	sub.w	r0, r0, #147	; 0x93
    d22a:	it	eq
    d22c:	cmpeq	r0, sl
    d22e:	bcc.w	d334 <block_iterate_proc@@Base+0x410>
    d232:	umull	sl, fp, r6, r2
    d236:	ldr	r2, [sp, #96]	; 0x60
    d238:	ldr	r1, [sp, #100]	; 0x64
    d23a:	mla	fp, r6, r3, fp
    d23e:	mov	r0, sl
    d240:	umull	r2, r3, r2, r6
    d244:	mla	r3, r6, r1, r3
    d248:	strd	r2, r3, [sp, #32]
    d24c:	blx	8e40 <malloc@plt+0x4>
    d250:	mov	r4, r0
    d252:	cmp	r0, #0
    d254:	beq.n	d354 <block_iterate_proc@@Base+0x430>
    d256:	strd	sl, r0, [sp]
    d25a:	mov	r0, r8
    d25c:	ldrd	r2, r3, [sp, #32]
    d260:	bl	cc7c <read_disk_extent@@Base>
    d264:	cmp	r0, #0
    d266:	bne.n	d320 <block_iterate_proc@@Base+0x3fc>
    d268:	ldrd	r9, r3, [sp, #16]
    d26c:	mov	r1, r8
    d26e:	vmov	r0, s16
    d272:	str	r3, [sp, #32]
    d274:	ldrd	r2, r3, [sp, #16]
    d278:	cmp	fp, r3
    d27a:	mov.w	r3, #0
    d27e:	it	eq
    d280:	cmpeq	sl, r2
    d282:	mov.w	r2, #0
    d286:	strd	r2, r3, [sp]
    d28a:	it	cc
    d28c:	movcc	r9, sl
    d28e:	ldrd	r2, r3, [sp, #48]	; 0x30
    d292:	strd	r4, r9, [sp, #8]
    d296:	it	cc
    d298:	strcc.w	fp, [sp, #32]
    d29c:	bl	32acc <btrfs_insert_inline_extent@@Base>
    d2a0:	cmp	r0, #0
    d2a2:	bne.n	d320 <block_iterate_proc@@Base+0x3fc>
    d2a4:	ldrd	r3, r2, [r7, #24]
    d2a8:	ldr	r1, [sp, #32]
    d2aa:	adds.w	r3, r3, r9
    d2ae:	adc.w	r1, r2, r1
    d2b2:	strd	r3, r1, [r7, #24]
    d2b6:	ldr	r3, [sp, #88]	; 0x58
    d2b8:	movs	r7, #0
    d2ba:	ldr	r2, [sp, #104]	; 0x68
    d2bc:	adds	r3, r3, r2
    d2be:	ldr	r2, [sp, #92]	; 0x5c
    d2c0:	str	r3, [sp, #24]
    d2c2:	ldr	r3, [sp, #108]	; 0x6c
    d2c4:	adc.w	r3, r2, r3
    d2c8:	str	r3, [sp, #28]
    d2ca:	ldrd	r2, r3, [sp, #24]
    d2ce:	strd	r2, r3, [sp, #88]	; 0x58
    d2d2:	mov	r2, r6
    d2d4:	ldr	r3, [sp, #16]
    d2d6:	adds.w	r3, r3, #4294967295	; 0xffffffff
    d2da:	str	r3, [sp, #40]	; 0x28
    d2dc:	ldr	r3, [sp, #20]
    d2de:	adc.w	r3, r3, #4294967295	; 0xffffffff
    d2e2:	str	r3, [sp, #44]	; 0x2c
    d2e4:	ldrd	r0, r1, [sp, #40]	; 0x28
    d2e8:	movs	r3, #0
    d2ea:	adds	r0, r0, r6
    d2ec:	adc.w	r1, r1, #0
    d2f0:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
    d2f4:	ldrd	r2, r3, [sp, #24]
    d2f8:	cmp	r3, r7
    d2fa:	it	eq
    d2fc:	cmpeq	r2, r0
    d2fe:	bcs.n	d322 <block_iterate_proc@@Base+0x3fe>
    d300:	ldr	r3, [sp, #24]
    d302:	subs	r2, r0, r3
    d304:	ldr	r3, [sp, #28]
    d306:	add	r0, sp, #56	; 0x38
    d308:	sbc.w	r3, r7, r3
    d30c:	strd	r2, r3, [sp, #8]
    d310:	movs	r2, #0
    d312:	movs	r3, #0
    d314:	strd	r2, r3, [sp]
    d318:	ldrd	r2, r3, [sp, #24]
    d31c:	bl	ccae <record_file_blocks@@Base>
    d320:	mov	r5, r0
    d322:	mov	r0, r4
    d324:	blx	8b84 <free@plt+0x4>
    d328:	b.n	d1c6 <block_iterate_proc@@Base+0x2a2>
    d32a:	orrs.w	r1, r2, r3
    d32e:	bne.n	d334 <block_iterate_proc@@Base+0x410>
    d330:	movs	r4, #0
    d332:	b.n	d2b6 <block_iterate_proc@@Base+0x392>
    d334:	strd	r2, r3, [sp, #8]
    d338:	mov	r0, r9
    d33a:	ldrd	r2, r3, [sp, #96]	; 0x60
    d33e:	strd	r2, r3, [sp]
    d342:	ldrd	r2, r3, [sp, #32]
    d346:	bl	ccae <record_file_blocks@@Base>
    d34a:	cmp	r0, #0
    d34c:	beq.n	d330 <block_iterate_proc@@Base+0x40c>
    d34e:	mov	r5, r0
    d350:	movs	r4, #0
    d352:	b.n	d322 <block_iterate_proc@@Base+0x3fe>
    d354:	mvn.w	r5, #11
    d358:	b.n	d1c6 <block_iterate_proc@@Base+0x2a2>
    d35a:	mov	r0, r5
    d35c:	add	sp, #140	; 0x8c
    d35e:	vpop	{d8}
    d362:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d366:	nop
    d368:	blt.n	d318 <block_iterate_proc@@Base+0x3f4>
    d36a:	movs	r5, r0
    d36c:	blt.n	d2fc <block_iterate_proc@@Base+0x3d8>
    d36e:	movs	r5, r0
    d370:	lsls	r0, r1, #10
    d372:	movs	r0, r0
    d374:			; <UNDEFINED> instruction: 0xff81ffff
    d378:	lsls	r4, r3, #10
    d37a:	movs	r0, r0
    d37c:	subs	r0, r5, #7
    d37e:	movs	r3, r0
    d380:	blt.n	d420 <block_iterate_proc@@Base+0x4fc>
    d382:	movs	r5, r0
    d384:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d388:	sub	sp, #28
    d38a:	ldr	r4, [r0, #68]	; 0x44
    d38c:	movs	r6, #0
    d38e:	add.w	sl, r0, #56	; 0x38
    d392:	ldr	r2, [r4, #16]
    d394:	ldr	r1, [r4, #100]	; 0x64
    d396:	ldr	r3, [r2, #20]
    d398:	ldr	r2, [r2, #36]	; 0x24
    d39a:	lsrs	r3, r1
    d39c:	mov	r5, r3
    d39e:	lsrs	r3, r2, #3
    d3a0:	strd	r5, r6, [sp, #8]
    d3a4:	bne.n	d3ba <block_iterate_proc@@Base+0x496>
    d3a6:	ldr	r0, [pc, #232]	; (d490 <block_iterate_proc@@Base+0x56c>)
    d3a8:	mvn.w	r9, #21
    d3ac:	add	r0, pc
    d3ae:	bl	1bd1c <__btrfs_error@@Base>
    d3b2:	mov	r0, r9
    d3b4:	add	sp, #28
    d3b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d3ba:	mov	r0, r3
    d3bc:	str	r3, [sp, #20]
    d3be:	blx	8e40 <malloc@plt+0x4>
    d3c2:	mov	r5, r0
    d3c4:	cmp	r0, #0
    d3c6:	beq.n	d474 <block_iterate_proc@@Base+0x550>
    d3c8:	ldr	r3, [sp, #20]
    d3ca:	mov.w	r9, #0
    d3ce:	mov	r7, r9
    d3d0:	lsls	r3, r3, #3
    d3d2:	str	r3, [sp, #20]
    d3d4:	ldr	r3, [r4, #28]
    d3d6:	cmp	r3, r7
    d3d8:	bls.n	d400 <block_iterate_proc@@Base+0x4dc>
    d3da:	ldr	r3, [sp, #20]
    d3dc:	str	r5, [sp, #4]
    d3de:	str	r3, [sp, #0]
    d3e0:	ldrd	r2, r3, [sp, #8]
    d3e4:	ldr	r0, [r4, #48]	; 0x30
    d3e6:	blx	9134 <ext2fs_get_block_bitmap_range2@plt>
    d3ea:	mov	r9, r0
    d3ec:	cbz	r0, d408 <block_iterate_proc@@Base+0x4e4>
    d3ee:	blx	9018 <error_message@plt>
    d3f2:	mvn.w	r9, #21
    d3f6:	mov	r1, r0
    d3f8:	ldr	r0, [pc, #152]	; (d494 <block_iterate_proc@@Base+0x570>)
    d3fa:	add	r0, pc
    d3fc:	bl	1bd1c <__btrfs_error@@Base>
    d400:	mov	r0, r5
    d402:	blx	8b84 <free@plt+0x4>
    d406:	b.n	d3b2 <block_iterate_proc@@Base+0x48e>
    d408:	ldr	r2, [r4, #16]
    d40a:	mov	r6, r0
    d40c:	ldr	r1, [r4, #100]	; 0x64
    d40e:	ldr	r3, [r2, #20]
    d410:	ldr	r2, [r2, #36]	; 0x24
    d412:	lsrs	r3, r1
    d414:	mla	fp, r2, r7, r3
    d418:	ldr	r0, [r4, #16]
    d41a:	ldr	r3, [r0, #36]	; 0x24
    d41c:	cmp	r6, r3
    d41e:	bcc.n	d436 <block_iterate_proc@@Base+0x512>
    d420:	ldr	r3, [r4, #16]
    d422:	adds	r7, #1
    d424:	ldrd	r1, r2, [sp, #8]
    d428:	ldr	r3, [r3, #36]	; 0x24
    d42a:	adds	r1, r1, r3
    d42c:	adc.w	r2, r2, #0
    d430:	strd	r1, r2, [sp, #8]
    d434:	b.n	d3d4 <block_iterate_proc@@Base+0x4b0>
    d436:	blx	8e08 <ext2fs_blocks_count@plt>
    d43a:	add.w	r8, fp, r6
    d43e:	movs	r3, #0
    d440:	cmp	r3, r1
    d442:	it	eq
    d444:	cmpeq	r8, r0
    d446:	bcs.n	d420 <block_iterate_proc@@Base+0x4fc>
    d448:	mov	r1, r5
    d44a:	mov	r0, r6
    d44c:	blx	90e0 <ext2fs_test_bit@plt>
    d450:	cbz	r0, d470 <block_iterate_proc@@Base+0x54c>
    d452:	ldr	r3, [r4, #100]	; 0x64
    d454:	mov	r0, sl
    d456:	ldr	r2, [r4, #20]
    d458:	lsl.w	r8, r8, r3
    d45c:	movs	r3, #0
    d45e:	str	r3, [sp, #4]
    d460:	str	r2, [sp, #0]
    d462:	umull	r2, r3, r8, r2
    d466:	bl	1a98c <add_merge_cache_extent@@Base>
    d46a:	subs.w	r9, r0, #0
    d46e:	blt.n	d47a <block_iterate_proc@@Base+0x556>
    d470:	adds	r6, #1
    d472:	b.n	d418 <block_iterate_proc@@Base+0x4f4>
    d474:	mvn.w	r9, #11
    d478:	b.n	d3b2 <block_iterate_proc@@Base+0x48e>
    d47a:	blx	8f58 <__errno_location@plt>
    d47e:	rsb	r3, r9, #0
    d482:	str	r3, [r0, #0]
    d484:	ldr	r0, [pc, #16]	; (d498 <block_iterate_proc@@Base+0x574>)
    d486:	add	r0, pc
    d488:	bl	1bd1c <__btrfs_error@@Base>
    d48c:	b.n	d400 <block_iterate_proc@@Base+0x4dc>
    d48e:	nop
    d490:	subs	r3, r2, #0
    d492:	movs	r3, r0
    d494:	adds	r5, r5, #7
    d496:	movs	r3, r0
    d498:	adds	r2, r0, #6
    d49a:	movs	r3, r0
    d49c:	ldr	r2, [pc, #348]	; (d5fc <block_iterate_proc@@Base+0x6d8>)
    d49e:	ldr	r3, [pc, #352]	; (d600 <block_iterate_proc@@Base+0x6dc>)
    d4a0:	add	r2, pc
    d4a2:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d4a6:	sub	sp, #24
    d4a8:	ldr	r3, [r2, r3]
    d4aa:	mov	r4, r0
    d4ac:	ldr	r5, [pc, #340]	; (d604 <block_iterate_proc@@Base+0x6e0>)
    d4ae:	mov	r0, r1
    d4b0:	ldr	r3, [r3, #0]
    d4b2:	str	r3, [sp, #20]
    d4b4:	mov.w	r3, #0
    d4b8:	add	r3, sp, #12
    d4ba:	str	r3, [sp, #4]
    d4bc:	add	r5, pc
    d4be:	ldr	r3, [pc, #328]	; (d608 <block_iterate_proc@@Base+0x6e4>)
    d4c0:	mov.w	r1, #163840	; 0x28000
    d4c4:	ldr	r3, [r5, r3]
    d4c6:	ldr	r3, [r3, #0]
    d4c8:	str	r3, [sp, #0]
    d4ca:	movs	r3, #0
    d4cc:	mov	r2, r3
    d4ce:	blx	8c68 <ext2fs_open@plt>
    d4d2:	cbz	r0, d4f8 <block_iterate_proc@@Base+0x5d4>
    d4d4:	ldr	r2, [pc, #288]	; (d5f8 <block_iterate_proc@@Base+0x6d4>)
    d4d6:	cmp	r0, r2
    d4d8:	beq.n	d4f2 <block_iterate_proc@@Base+0x5ce>
    d4da:	ldr	r3, [pc, #304]	; (d60c <block_iterate_proc@@Base+0x6e8>)
    d4dc:	ldr	r3, [r5, r3]
    d4de:	ldr	r4, [r3, #0]
    d4e0:	blx	9018 <error_message@plt>
    d4e4:	ldr	r2, [pc, #296]	; (d610 <block_iterate_proc@@Base+0x6ec>)
    d4e6:	movs	r1, #1
    d4e8:	add	r2, pc
    d4ea:	mov	r3, r0
    d4ec:	mov	r0, r4
    d4ee:	blx	9040 <__fprintf_chk@plt+0x4>
    d4f2:	mov.w	r6, #4294967295	; 0xffffffff
    d4f6:	b.n	d5dc <block_iterate_proc@@Base+0x6b8>
    d4f8:	ldr	r0, [sp, #12]
    d4fa:	ldr	r3, [r0, #16]
    d4fc:	ldr	r1, [r3, #100]	; 0x64
    d4fe:	bic.w	r3, r1, #63232	; 0xf700
    d502:	bic.w	r3, r3, #123	; 0x7b
    d506:	cbz	r3, d526 <block_iterate_proc@@Base+0x602>
    d508:	ldr	r0, [pc, #264]	; (d614 <block_iterate_proc@@Base+0x6f0>)
    d50a:	bic.w	r1, r1, #572	; 0x23c
    d50e:	bic.w	r1, r1, #3
    d512:	add	r0, pc
    d514:	bl	1bd1c <__btrfs_error@@Base>
    d518:	ldr	r0, [sp, #12]
    d51a:	blx	8e80 <ext2fs_close@plt>
    d51e:	ldr	r0, [sp, #12]
    d520:	blx	8ad4 <ext2fs_free@plt+0x4>
    d524:	b.n	d4f2 <block_iterate_proc@@Base+0x5ce>
    d526:	blx	8b4c <ext2fs_read_inode_bitmap@plt>
    d52a:	cbz	r0, d546 <block_iterate_proc@@Base+0x622>
    d52c:	ldr	r3, [pc, #220]	; (d60c <block_iterate_proc@@Base+0x6e8>)
    d52e:	ldr	r3, [r5, r3]
    d530:	ldr	r4, [r3, #0]
    d532:	blx	9018 <error_message@plt>
    d536:	ldr	r2, [pc, #224]	; (d618 <block_iterate_proc@@Base+0x6f4>)
    d538:	add	r2, pc
    d53a:	mov	r3, r0
    d53c:	movs	r1, #1
    d53e:	mov	r0, r4
    d540:	blx	9040 <__fprintf_chk@plt+0x4>
    d544:	b.n	d518 <block_iterate_proc@@Base+0x5f4>
    d546:	ldr	r0, [sp, #12]
    d548:	blx	9140 <ext2fs_read_block_bitmap@plt>
    d54c:	mov	r6, r0
    d54e:	cbz	r0, d594 <block_iterate_proc@@Base+0x670>
    d550:	ldr	r3, [pc, #184]	; (d60c <block_iterate_proc@@Base+0x6e8>)
    d552:	ldr	r3, [r5, r3]
    d554:	ldr	r4, [r3, #0]
    d556:	blx	9018 <error_message@plt>
    d55a:	ldr	r2, [pc, #192]	; (d61c <block_iterate_proc@@Base+0x6f8>)
    d55c:	add	r2, pc
    d55e:	mov	r3, r0
    d560:	b.n	d53c <block_iterate_proc@@Base+0x618>
    d562:	movs	r3, #0
    d564:	mov	r1, r7
    d566:	mov	r2, r3
    d568:	mov	r0, r5
    d56a:	str.w	r8, [sp]
    d56e:	blx	8d90 <ext2fs_new_inode@plt>
    d572:	ldr	r3, [sp, #12]
    d574:	ldr	r3, [r3, #16]
    d576:	ldr	r3, [r3, #40]	; 0x28
    d578:	add	r7, r3
    d57a:	ldr	r5, [sp, #12]
    d57c:	ldr	r3, [r5, #16]
    d57e:	ldr	r2, [r3, #0]
    d580:	cmp	r2, r7
    d582:	bcs.n	d562 <block_iterate_proc@@Base+0x63e>
    d584:	ldr	r3, [r3, #96]	; 0x60
    d586:	lsls	r3, r3, #30
    d588:	bmi.n	d59c <block_iterate_proc@@Base+0x678>
    d58a:	ldr	r0, [pc, #148]	; (d620 <block_iterate_proc@@Base+0x6fc>)
    d58c:	add	r0, pc
    d58e:	bl	1bd1c <__btrfs_error@@Base>
    d592:	b.n	d518 <block_iterate_proc@@Base+0x5f4>
    d594:	add.w	r8, sp, #16
    d598:	movs	r7, #1
    d59a:	b.n	d57a <block_iterate_proc@@Base+0x656>
    d59c:	str	r5, [r4, #68]	; 0x44
    d59e:	movs	r7, #0
    d5a0:	ldr	r3, [r5, #20]
    d5a2:	movs	r1, #16
    d5a4:	str	r3, [r4, #0]
    d5a6:	ldr	r3, [r5, #16]
    d5a8:	ldr	r3, [r3, #4]
    d5aa:	strd	r3, r7, [r4, #16]
    d5ae:	ldr	r3, [r5, #16]
    d5b0:	ldr	r2, [r3, #4]
    d5b2:	ldr	r3, [r5, #20]
    d5b4:	muls	r3, r2
    d5b6:	strd	r3, r7, [r4, #40]	; 0x28
    d5ba:	ldr	r0, [r5, #16]
    d5bc:	adds	r0, #120	; 0x78
    d5be:	blx	8bc0 <strndup@plt>
    d5c2:	str	r0, [r4, #48]	; 0x30
    d5c4:	ldr	r3, [r5, #16]
    d5c6:	ldr	r3, [r3, #20]
    d5c8:	strd	r3, r7, [r4, #8]
    d5cc:	ldr	r3, [r5, #16]
    d5ce:	ldr	r3, [r3, #0]
    d5d0:	strd	r3, r7, [r4, #24]
    d5d4:	ldr	r3, [r5, #16]
    d5d6:	ldr	r3, [r3, #16]
    d5d8:	strd	r3, r7, [r4, #32]
    d5dc:	ldr	r2, [pc, #68]	; (d624 <block_iterate_proc@@Base+0x700>)
    d5de:	ldr	r3, [pc, #32]	; (d600 <block_iterate_proc@@Base+0x6dc>)
    d5e0:	add	r2, pc
    d5e2:	ldr	r3, [r2, r3]
    d5e4:	ldr	r2, [r3, #0]
    d5e6:	ldr	r3, [sp, #20]
    d5e8:	eors	r2, r3
    d5ea:	beq.n	d5f0 <block_iterate_proc@@Base+0x6cc>
    d5ec:	blx	8c90 <__stack_chk_fail@plt>
    d5f0:	mov	r0, r6
    d5f2:	add	sp, #24
    d5f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d5f8:			; <UNDEFINED> instruction: 0xb713
    d5fa:	ldrb	r3, [r5, #28]
    d5fc:	bhi.n	d6f0 <block_iterate_proc@@Base+0x7cc>
    d5fe:	movs	r5, r0
    d600:	lsls	r0, r1, #10
    d602:	movs	r0, r0
    d604:	bhi.n	d6c0 <block_iterate_proc@@Base+0x79c>
    d606:	movs	r5, r0
    d608:	lsls	r4, r2, #11
    d60a:	movs	r0, r0
    d60c:	lsls	r4, r3, #10
    d60e:	movs	r0, r0
    d610:	adds	r2, r0, #5
    d612:	movs	r3, r0
    d614:	adds	r1, r5, #4
    d616:	movs	r3, r0
    d618:	adds	r4, r2, #5
    d61a:	movs	r3, r0
    d61c:	adds	r6, r1, #5
    d61e:	movs	r3, r0
    d620:	adds	r4, r7, #4
    d622:	movs	r3, r0
    d624:	bvc.n	d698 <block_iterate_proc@@Base+0x774>
    d626:	movs	r5, r0
    d628:	ldr.w	ip, [pc, #104]	; d694 <block_iterate_proc@@Base+0x770>
    d62c:	push	{r4, r5, lr}
    d62e:	add	ip, pc
    d630:	ldr	r5, [pc, #100]	; (d698 <block_iterate_proc@@Base+0x774>)
    d632:	sub	sp, #92	; 0x5c
    d634:	ldr	r4, [pc, #100]	; (d69c <block_iterate_proc@@Base+0x778>)
    d636:	ldr.w	r5, [ip, r5]
    d63a:	add	r4, pc
    d63c:	ldr	r5, [r5, #0]
    d63e:	str	r5, [sp, #84]	; 0x54
    d640:	mov.w	r5, #0
    d644:	cbz	r3, d67a <block_iterate_proc@@Base+0x756>
    d646:	ldr	r5, [pc, #88]	; (d6a0 <block_iterate_proc@@Base+0x77c>)
    d648:	ldr	r4, [r4, r5]
    d64a:	strd	r2, r1, [sp]
    d64e:	movs	r1, #1
    d650:	strd	r0, r3, [sp, #8]
    d654:	ldr	r2, [pc, #76]	; (d6a4 <block_iterate_proc@@Base+0x780>)
    d656:	ldr	r3, [pc, #80]	; (d6a8 <block_iterate_proc@@Base+0x784>)
    d658:	ldr	r0, [r4, #0]
    d65a:	add	r4, sp, #20
    d65c:	add	r3, pc
    d65e:	add	r2, pc
    d660:	blx	9040 <__fprintf_chk@plt+0x4>
    d664:	movs	r1, #16
    d666:	mov	r0, r4
    d668:	blx	8e98 <backtrace@plt>
    d66c:	movs	r2, #2
    d66e:	mov	r1, r0
    d670:	mov	r0, r4
    d672:	blx	9214 <backtrace_symbols_fd@plt>
    d676:	blx	91c0 <abort@plt>
    d67a:	ldr	r2, [pc, #48]	; (d6ac <block_iterate_proc@@Base+0x788>)
    d67c:	ldr	r3, [pc, #24]	; (d698 <block_iterate_proc@@Base+0x774>)
    d67e:	add	r2, pc
    d680:	ldr	r3, [r2, r3]
    d682:	ldr	r2, [r3, #0]
    d684:	ldr	r3, [sp, #84]	; 0x54
    d686:	eors	r2, r3
    d688:	beq.n	d68e <block_iterate_proc@@Base+0x76a>
    d68a:	blx	8c90 <__stack_chk_fail@plt>
    d68e:	add	sp, #92	; 0x5c
    d690:	pop	{r4, r5, pc}
    d692:	nop
    d694:	bvs.n	d66c <block_iterate_proc@@Base+0x748>
    d696:	movs	r5, r0
    d698:	lsls	r0, r1, #10
    d69a:	movs	r0, r0
    d69c:	bvs.n	d65c <block_iterate_proc@@Base+0x738>
    d69e:	movs	r5, r0
    d6a0:	lsls	r4, r3, #10
    d6a2:	movs	r0, r0
    d6a4:	lsrs	r0, r0, #20
    d6a6:	movs	r3, r0
    d6a8:	adds	r0, r1, #2
    d6aa:	movs	r3, r0
    d6ac:	bvs.n	d5e4 <block_iterate_proc@@Base+0x6c0>
    d6ae:	movs	r5, r0
    d6b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6b4:	mov	r9, r1
    d6b6:	vpush	{d8}
    d6ba:	vmov	s16, r0
    d6be:	sub	sp, #300	; 0x12c
    d6c0:	strd	r2, r3, [sp, #24]
    d6c4:	ldr	r3, [sp, #344]	; 0x158
    d6c6:	ldr	r2, [pc, #460]	; (d894 <block_iterate_proc@@Base+0x970>)
    d6c8:	ldrd	r4, r5, [sp, #348]	; 0x15c
    d6cc:	str	r3, [sp, #16]
    d6ce:	add	r2, pc
    d6d0:	ldr	r3, [pc, #452]	; (d898 <block_iterate_proc@@Base+0x974>)
    d6d2:	add	r3, pc
    d6d4:	str	r3, [sp, #20]
    d6d6:	ldr	r3, [pc, #452]	; (d89c <block_iterate_proc@@Base+0x978>)
    d6d8:	ldr	r3, [r2, r3]
    d6da:	ldr	r3, [r3, #0]
    d6dc:	str	r3, [sp, #292]	; 0x124
    d6de:	mov.w	r3, #0
    d6e2:	ldr	r3, [sp, #16]
    d6e4:	ldrb	r6, [r3, #1]
    d6e6:	cmp	r6, #6
    d6e8:	bhi.w	d876 <block_iterate_proc@@Base+0x952>
    d6ec:	ldr	r3, [pc, #432]	; (d8a0 <block_iterate_proc@@Base+0x97c>)
    d6ee:	add	r3, pc
    d6f0:	ldr.w	fp, [r3, r6, lsl #2]
    d6f4:	cmp.w	fp, #0
    d6f8:	beq.w	d876 <block_iterate_proc@@Base+0x952>
    d6fc:	mov	r0, fp
    d6fe:	blx	8f1c <strlen@plt>
    d702:	ldr	r3, [sp, #16]
    d704:	ldrb.w	r8, [r3]
    d708:	add	r8, r0
    d70a:	cmp.w	r8, #255	; 0xff
    d70e:	bhi.w	d87c <block_iterate_proc@@Base+0x958>
    d712:	subs	r6, #2
    d714:	cmp	r6, #1
    d716:	bhi.w	d84a <block_iterate_proc@@Base+0x926>
    d71a:	mov	r0, r5
    d71c:	bl	ca5c <ext2_acl_count@@Base>
    d720:	lsls	r0, r0, #3
    d722:	adds	r7, r0, #4
    d724:	mov	r0, r7
    d726:	blx	8e40 <malloc@plt+0x4>
    d72a:	mov	r6, r0
    d72c:	cmp	r0, #0
    d72e:	beq.w	d882 <block_iterate_proc@@Base+0x95e>
    d732:	cmp	r5, #3
    d734:	add.w	sl, r4, r5
    d738:	bls.w	d870 <block_iterate_proc@@Base+0x94c>
    d73c:	ldr	r3, [r4, #0]
    d73e:	cmp	r3, #1
    d740:	bne.w	d870 <block_iterate_proc@@Base+0x94c>
    d744:	mov	r0, r5
    d746:	adds	r4, #4
    d748:	bl	ca5c <ext2_acl_count@@Base>
    d74c:	subs	r5, r0, #0
    d74e:	ble.w	d870 <block_iterate_proc@@Base+0x94c>
    d752:	lsls	r3, r5, #3
    d754:	ldr	r1, [pc, #332]	; (d8a4 <block_iterate_proc@@Base+0x980>)
    d756:	adds	r3, #4
    d758:	ldr	r0, [pc, #332]	; (d8a8 <block_iterate_proc@@Base+0x984>)
    d75a:	cmp	r7, r3
    d75c:	add	r1, pc
    d75e:	add	r0, pc
    d760:	movw	r2, #449	; 0x1c1
    d764:	ite	cs
    d766:	movcs	r3, #0
    d768:	movcc	r3, #1
    d76a:	bl	d628 <block_iterate_proc@@Base+0x704>
    d76e:	mov	r2, r6
    d770:	movs	r1, #0
    d772:	mov.w	r0, #4294967295	; 0xffffffff
    d776:	movs	r3, #2
    d778:	str.w	r3, [r2], #12
    d77c:	add.w	ip, r4, #4
    d780:	cmp	sl, ip
    d782:	bcc.n	d870 <block_iterate_proc@@Base+0x94c>
    d784:	ldrh	r3, [r4, #0]
    d786:	ldrh.w	lr, [r4, #2]
    d78a:	cmp	r3, #8
    d78c:	strh.w	r3, [r2, #-8]
    d790:	strh.w	lr, [r2, #-6]
    d794:	bhi.n	d7ac <block_iterate_proc@@Base+0x888>
    d796:	cmp	r3, #0
    d798:	beq.n	d870 <block_iterate_proc@@Base+0x94c>
    d79a:	subs	r3, #1
    d79c:	cmp	r3, #7
    d79e:	bhi.n	d870 <block_iterate_proc@@Base+0x94c>
    d7a0:	tbb	[pc, r3]
    d7a4:	ldr	r3, [pc, #32]	; (d7c8 <block_iterate_proc@@Base+0x8a4>)
    d7a6:	lsrs	r6, r4, #1
    d7a8:	str	r6, [r4, #100]	; 0x64
    d7aa:	ldr	r3, [pc, #408]	; (d944 <block_iterate_proc@@Base+0xa20>)
    d7ac:	cmp	r3, #16
    d7ae:	beq.n	d7b4 <block_iterate_proc@@Base+0x890>
    d7b0:	cmp	r3, #32
    d7b2:	bne.n	d870 <block_iterate_proc@@Base+0x94c>
    d7b4:	str.w	r0, [r2, #-4]
    d7b8:	adds	r1, #1
    d7ba:	adds	r2, #8
    d7bc:	cmp	r5, r1
    d7be:	mov	r4, ip
    d7c0:	bne.n	d77c <block_iterate_proc@@Base+0x858>
    d7c2:	cmp	sl, ip
    d7c4:	bne.n	d870 <block_iterate_proc@@Base+0x94c>
    d7c6:	mov	r5, r7
    d7c8:	mov	r4, r6
    d7ca:	add	r7, sp, #36	; 0x24
    d7cc:	movs	r2, #255	; 0xff
    d7ce:	mov	r1, fp
    d7d0:	mov	r0, r7
    d7d2:	blx	8fb4 <strncpy@plt>
    d7d6:	ldr	r1, [sp, #16]
    d7d8:	mov.w	r3, #256	; 0x100
    d7dc:	mov	r0, r7
    d7de:	ldrb.w	r2, [r1], #16
    d7e2:	blx	8ae0 <__strncat_chk@plt>
    d7e6:	ldr.w	r3, [r9, #464]	; 0x1d0
    d7ea:	add.w	r2, r8, r5
    d7ee:	ldr.w	r3, [r3, #384]	; 0x180
    d7f2:	subs	r3, #156	; 0x9c
    d7f4:	cmp	r2, r3
    d7f6:	bls.n	d84e <block_iterate_proc@@Base+0x92a>
    d7f8:	ldr	r2, [sp, #20]
    d7fa:	movs	r1, #1
    d7fc:	ldr	r3, [pc, #172]	; (d8ac <block_iterate_proc@@Base+0x988>)
    d7fe:	movs	r4, #0
    d800:	ldr	r0, [r2, r3]
    d802:	ldr	r3, [sp, #24]
    d804:	strd	r8, r7, [sp, #8]
    d808:	subs.w	r2, r3, #254	; 0xfe
    d80c:	ldr	r3, [sp, #28]
    d80e:	adc.w	r3, r3, #4294967295	; 0xffffffff
    d812:	strd	r2, r3, [sp]
    d816:	ldr	r2, [pc, #152]	; (d8b0 <block_iterate_proc@@Base+0x98c>)
    d818:	ldr	r0, [r0, #0]
    d81a:	add	r2, pc
    d81c:	blx	9040 <__fprintf_chk@plt+0x4>
    d820:	mov	r0, r6
    d822:	blx	8b84 <free@plt+0x4>
    d826:	ldr	r2, [pc, #140]	; (d8b4 <block_iterate_proc@@Base+0x990>)
    d828:	ldr	r3, [pc, #112]	; (d89c <block_iterate_proc@@Base+0x978>)
    d82a:	add	r2, pc
    d82c:	ldr	r3, [r2, r3]
    d82e:	ldr	r2, [r3, #0]
    d830:	ldr	r3, [sp, #292]	; 0x124
    d832:	eors	r2, r3
    d834:	beq.n	d888 <block_iterate_proc@@Base+0x964>
    d836:	blx	8c90 <__stack_chk_fail@plt>
    d83a:	add.w	ip, r4, #8
    d83e:	cmp	sl, ip
    d840:	bcc.n	d870 <block_iterate_proc@@Base+0x94c>
    d842:	ldr	r3, [r4, #4]
    d844:	str.w	r3, [r2, #-4]
    d848:	b.n	d7b8 <block_iterate_proc@@Base+0x894>
    d84a:	movs	r6, #0
    d84c:	b.n	d7ca <block_iterate_proc@@Base+0x8a6>
    d84e:	ldr	r3, [sp, #24]
    d850:	uxth	r5, r5
    d852:	vmov	r0, s16
    d856:	mov	r2, r7
    d858:	strd	r4, r5, [sp]
    d85c:	mov	r1, r9
    d85e:	str	r3, [sp, #8]
    d860:	ldr	r3, [sp, #28]
    d862:	str	r3, [sp, #12]
    d864:	uxth.w	r3, r8
    d868:	bl	e368 <btrfs_insert_xattr_item@@Base>
    d86c:	mov	r4, r0
    d86e:	b.n	d820 <block_iterate_proc@@Base+0x8fc>
    d870:	mvn.w	r4, #21
    d874:	b.n	d820 <block_iterate_proc@@Base+0x8fc>
    d876:	mvn.w	r4, #94	; 0x5e
    d87a:	b.n	d826 <block_iterate_proc@@Base+0x902>
    d87c:	mvn.w	r4, #33	; 0x21
    d880:	b.n	d826 <block_iterate_proc@@Base+0x902>
    d882:	mvn.w	r4, #11
    d886:	b.n	d826 <block_iterate_proc@@Base+0x902>
    d888:	mov	r0, r4
    d88a:	add	sp, #300	; 0x12c
    d88c:	vpop	{d8}
    d890:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d894:	bvs.n	d92c <block_iterate_proc@@Base+0xa08>
    d896:	movs	r5, r0
    d898:	bvs.n	d928 <block_iterate_proc@@Base+0xa04>
    d89a:	movs	r5, r0
    d89c:	lsls	r0, r1, #10
    d89e:	movs	r0, r0
    d8a0:	ldmia	r6!, {r1, r2, r3, r5}
    d8a2:	movs	r5, r0
    d8a4:	adds	r0, r2, #4
    d8a6:	movs	r3, r0
    d8a8:	subs	r4, r3, r6
    d8aa:	movs	r3, r0
    d8ac:	lsls	r4, r3, #10
    d8ae:	movs	r0, r0
    d8b0:	subs	r6, r7, r3
    d8b2:	movs	r3, r0
    d8b4:	bmi.n	d894 <block_iterate_proc@@Base+0x970>
    d8b6:	movs	r5, r0
    d8b8:	ldr	r1, [pc, #260]	; (d9c0 <block_iterate_proc@@Base+0xa9c>)
    d8ba:	ldr	r3, [pc, #264]	; (d9c4 <block_iterate_proc@@Base+0xaa0>)
    d8bc:	add	r1, pc
    d8be:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d8c2:	sub	sp, #52	; 0x34
    d8c4:	ldr	r3, [r1, r3]
    d8c6:	mov	r5, r2
    d8c8:	ldr.w	fp, [r5], #8
    d8cc:	ldr	r3, [r3, #0]
    d8ce:	str	r3, [sp, #44]	; 0x2c
    d8d0:	mov.w	r3, #0
    d8d4:	ldr	r3, [pc, #240]	; (d9c8 <block_iterate_proc@@Base+0xaa4>)
    d8d6:	ldrb.w	r8, [r2, #6]
    d8da:	adds.w	r7, fp, #254	; 0xfe
    d8de:	add	r3, pc
    d8e0:	ldrh.w	sl, [r2, #6]
    d8e4:	mov	r0, r5
    d8e6:	it	cs
    d8e8:	movcs.w	r9, #1
    d8ec:	ldrh	r1, [r3, #0]
    d8ee:	mov	r2, r8
    d8f0:	ldrb	r3, [r3, #2]
    d8f2:	it	cc
    d8f4:	movcc.w	r9, #0
    d8f8:	ldr	r4, [sp, #96]	; 0x60
    d8fa:	strh.w	r1, [sp, #40]	; 0x28
    d8fe:	add	r1, sp, #40	; 0x28
    d900:	strb	r3, [r1, #2]
    d902:	blx	91b4 <strncmp@plt>
    d906:	mov	r6, r0
    d908:	cbnz	r0, d948 <block_iterate_proc@@Base+0xa24>
    d90a:	cmp.w	r8, #2
    d90e:	bne.n	d934 <block_iterate_proc@@Base+0xa10>
    d910:	ldrd	r2, r3, [r4, #32]
    d914:	ldr	r1, [pc, #180]	; (d9cc <block_iterate_proc@@Base+0xaa8>)
    d916:	orrs	r3, r2
    d918:	ldr	r0, [pc, #180]	; (d9d0 <block_iterate_proc@@Base+0xaac>)
    d91a:	add	r1, pc
    d91c:	mov.w	r2, #214	; 0xd6
    d920:	add.w	r1, r1, #18
    d924:	add	r0, pc
    d926:	ite	ne
    d928:	movne	r3, #1
    d92a:	moveq	r3, #0
    d92c:	bl	d628 <block_iterate_proc@@Base+0x704>
    d930:	strd	r7, r9, [r4, #32]
    d934:	ldr	r2, [pc, #156]	; (d9d4 <block_iterate_proc@@Base+0xab0>)
    d936:	ldr	r3, [pc, #140]	; (d9c4 <block_iterate_proc@@Base+0xaa0>)
    d938:	add	r2, pc
    d93a:	ldr	r3, [r2, r3]
    d93c:	ldr	r2, [r3, #0]
    d93e:	ldr	r3, [sp, #44]	; 0x2c
    d940:	eors	r2, r3
    d942:	beq.n	d9b8 <block_iterate_proc@@Base+0xa94>
    d944:	blx	8c90 <__stack_chk_fail@plt>
    d948:	cmp.w	fp, #10
    d94c:	bls.n	d9b4 <block_iterate_proc@@Base+0xa90>
    d94e:	ldr	r6, [pc, #136]	; (d9d8 <block_iterate_proc@@Base+0xab4>)
    d950:	cmp.w	sl, #2048	; 0x800
    d954:	ldr	r0, [pc, #132]	; (d9dc <block_iterate_proc@@Base+0xab8>)
    d956:	mov.w	r2, #223	; 0xdf
    d95a:	add	r6, pc
    d95c:	ite	cc
    d95e:	movcc	r3, #0
    d960:	movcs	r3, #1
    d962:	add.w	r1, r6, #18
    d966:	add	r0, pc
    d968:	mov.w	fp, sl, lsr #8
    d96c:	bl	d628 <block_iterate_proc@@Base+0x704>
    d970:	ldr	r3, [r4, #8]
    d972:	add	r6, fp
    d974:	str	r3, [sp, #32]
    d976:	ldrd	r2, r3, [r4, #24]
    d97a:	strd	r7, r9, [sp, #8]
    d97e:	strd	r2, r3, [sp, #24]
    d982:	ldrb.w	r3, [r6, #40]	; 0x28
    d986:	str	r3, [sp, #16]
    d988:	ldrd	r2, r3, [r4, #16]
    d98c:	strd	r2, r3, [sp]
    d990:	mov	r3, r8
    d992:	ldrd	r0, r1, [r4]
    d996:	mov	r2, r5
    d998:	bl	cba0 <convert_insert_dirent@@Base>
    d99c:	cmp	r0, #0
    d99e:	bge.n	d9a6 <block_iterate_proc@@Base+0xa82>
    d9a0:	movs	r6, #2
    d9a2:	str	r0, [r4, #40]	; 0x28
    d9a4:	b.n	d934 <block_iterate_proc@@Base+0xa10>
    d9a6:	ldrd	r3, r2, [r4, #24]
    d9aa:	adds	r3, #1
    d9ac:	adc.w	r2, r2, #0
    d9b0:	strd	r3, r2, [r4, #24]
    d9b4:	movs	r6, #0
    d9b6:	b.n	d934 <block_iterate_proc@@Base+0xa10>
    d9b8:	mov	r0, r6
    d9ba:	add	sp, #52	; 0x34
    d9bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9c0:	bmi.n	da7c <block_iterate_proc@@Base+0xb58>
    d9c2:	movs	r5, r0
    d9c4:	lsls	r0, r1, #10
    d9c6:	movs	r0, r0
    d9c8:	subs	r2, r2, r2
    d9ca:	movs	r3, r0
    d9cc:	subs	r2, r2, r5
    d9ce:	movs	r3, r0
    d9d0:	subs	r5, r3, r0
    d9d2:	movs	r3, r0
    d9d4:	bcc.n	d998 <block_iterate_proc@@Base+0xa74>
    d9d6:	movs	r5, r0
    d9d8:	subs	r2, r2, r4
    d9da:	movs	r3, r0
    d9dc:	adds	r6, r5, r7
    d9de:	movs	r3, r0
    d9e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9e4:	sub.w	sp, sp, #540	; 0x21c
    d9e8:	mov	r6, r1
    d9ea:	movs	r1, #1
    d9ec:	str	r3, [sp, #36]	; 0x24
    d9ee:	ldr.w	r3, [pc, #1572]	; e014 <block_iterate_proc@@Base+0x10f0>
    d9f2:	str	r2, [sp, #44]	; 0x2c
    d9f4:	ldr.w	r2, [pc, #1568]	; e018 <block_iterate_proc@@Base+0x10f4>
    d9f8:	add	r3, pc
    d9fa:	str	r3, [sp, #40]	; 0x28
    d9fc:	ldr.w	r3, [pc, #1564]	; e01c <block_iterate_proc@@Base+0x10f8>
    da00:	add	r2, pc
    da02:	ldr	r3, [r2, r3]
    da04:	ldr	r3, [r3, #0]
    da06:	str	r3, [sp, #532]	; 0x214
    da08:	mov.w	r3, #0
    da0c:	ldr	r3, [r0, #68]	; 0x44
    da0e:	mov	r0, r6
    da10:	str	r3, [sp, #32]
    da12:	bl	2f81c <btrfs_start_transaction@@Base>
    da16:	cmn.w	r0, #4096	; 0x1000
    da1a:	mov	r5, r0
    da1c:	bls.n	da3a <block_iterate_proc@@Base+0xb16>
    da1e:	mov	fp, r0
    da20:	ldr.w	r2, [pc, #1532]	; e020 <block_iterate_proc@@Base+0x10fc>
    da24:	ldr.w	r3, [pc, #1524]	; e01c <block_iterate_proc@@Base+0x10f8>
    da28:	add	r2, pc
    da2a:	ldr	r3, [r2, r3]
    da2c:	ldr	r2, [r3, #0]
    da2e:	ldr	r3, [sp, #532]	; 0x214
    da30:	eors	r2, r3
    da32:	beq.w	e004 <block_iterate_proc@@Base+0x10e0>
    da36:	blx	8c90 <__stack_chk_fail@plt>
    da3a:	ldr	r0, [sp, #32]
    da3c:	add	r2, sp, #56	; 0x38
    da3e:	movs	r1, #0
    da40:	blx	8d84 <ext2fs_open_inode_scan@plt>
    da44:	cmp	r0, #0
    da46:	beq.w	dc92 <block_iterate_proc@@Base+0xd6e>
    da4a:	ldr	r2, [sp, #40]	; 0x28
    da4c:	ldr.w	r3, [pc, #1492]	; e024 <block_iterate_proc@@Base+0x1100>
    da50:	ldr	r3, [r2, r3]
    da52:	ldr	r4, [r3, #0]
    da54:	blx	9018 <error_message@plt>
    da58:	ldr.w	r2, [pc, #1484]	; e028 <block_iterate_proc@@Base+0x1104>
    da5c:	add	r2, pc
    da5e:	mov	r3, r0
    da60:	movs	r1, #1
    da62:	mov	r0, r4
    da64:	blx	9040 <__fprintf_chk@plt+0x4>
    da68:	mov.w	fp, #4294967295	; 0xffffffff
    da6c:	b.n	da20 <block_iterate_proc@@Base+0xafc>
    da6e:	ldr.w	r7, [r8]
    da72:	cmp	r7, #0
    da74:	beq.w	dfc0 <block_iterate_proc@@Base+0x109c>
    da78:	cmp	r7, #10
    da7a:	bhi.n	da82 <block_iterate_proc@@Base+0xb5e>
    da7c:	cmp	r7, #2
    da7e:	bne.w	dc9c <block_iterate_proc@@Base+0xd78>
    da82:	ldrh.w	r1, [sl, #26]
    da86:	cmp	r1, #0
    da88:	beq.w	dc18 <block_iterate_proc@@Base+0xcf4>
    da8c:	ldr.w	r2, [sl, #4]
    da90:	add	r4, sp, #244	; 0xf4
    da92:	str	r1, [r4, #40]	; 0x28
    da94:	movs	r3, #0
    da96:	ldrh.w	r1, [sl, #120]	; 0x78
    da9a:	movs	r0, #1
    da9c:	strd	r2, r3, [r4, #16]
    daa0:	ldrh.w	r2, [sl, #2]
    daa4:	strd	r0, r3, [r4]
    daa8:	orr.w	r2, r2, r1, lsl #16
    daac:	ldrh.w	r1, [sl, #122]	; 0x7a
    dab0:	str	r2, [r4, #44]	; 0x2c
    dab2:	ldrh.w	r2, [sl, #24]
    dab6:	strd	r3, r3, [r4, #72]	; 0x48
    daba:	orr.w	r2, r2, r1, lsl #16
    dabe:	ldr.w	r1, [sl, #8]
    dac2:	str	r2, [r4, #48]	; 0x30
    dac4:	ldrh.w	r2, [sl]
    dac8:	strd	r1, r3, [r4, #112]	; 0x70
    dacc:	ldr.w	r1, [sl, #12]
    dad0:	strd	r2, r3, [r4, #52]	; 0x34
    dad4:	bic.w	r2, r2, #4080	; 0xff0
    dad8:	bic.w	r2, r2, #15
    dadc:	strd	r0, r3, [r4, #8]
    dae0:	strd	r3, r3, [r4, #24]
    dae4:	cmp.w	r2, #16384	; 0x4000
    dae8:	strd	r3, r3, [r4, #32]
    daec:	strd	r3, r3, [r4, #60]	; 0x3c
    daf0:	str	r3, [r4, #68]	; 0x44
    daf2:	str	r3, [r4, #120]	; 0x78
    daf4:	strd	r1, r3, [r4, #124]	; 0x7c
    daf8:	ldr.w	r1, [sl, #16]
    dafc:	str.w	r3, [r4, #132]	; 0x84
    db00:	strd	r3, r3, [r4, #144]	; 0x90
    db04:	strd	r1, r3, [r4, #136]	; 0x88
    db08:	strd	r3, r3, [r4, #152]	; 0x98
    db0c:	bne.w	dcc2 <block_iterate_proc@@Base+0xd9e>
    db10:	str	r3, [r4, #16]
    db12:	str	r0, [r4, #40]	; 0x28
    db14:	movs	r2, #32
    db16:	movs	r1, #0
    db18:	add	r0, sp, #324	; 0x144
    db1a:	blx	8f98 <memset@plt+0x4>
    db1e:	ldr	r3, [sp, #44]	; 0x2c
    db20:	ldrh.w	r2, [sl]
    db24:	ands.w	r1, r3, #1
    db28:	bic.w	r2, r2, #4080	; 0xff0
    db2c:	bic.w	r2, r2, #15
    db30:	bne.n	db42 <block_iterate_proc@@Base+0xc1e>
    db32:	cmp.w	r2, #32768	; 0x8000
    db36:	ittt	eq
    db38:	ldreq	r3, [r4, #64]	; 0x40
    db3a:	orreq.w	r3, r3, #1
    db3e:	strdeq	r3, r1, [r4, #64]	; 0x40
    db42:	ldr.w	r1, [sl, #32]
    db46:	ldrd	r3, r0, [r4, #64]	; 0x40
    db4a:	tst.w	r1, #32
    db4e:	it	ne
    db50:	orrne.w	r3, r3, #128	; 0x80
    db54:	tst.w	r1, #8
    db58:	it	ne
    db5a:	orrne.w	r3, r3, #32
    db5e:	tst.w	r1, #16
    db62:	it	ne
    db64:	orrne.w	r3, r3, #64	; 0x40
    db68:	tst.w	r1, #64	; 0x40
    db6c:	it	ne
    db6e:	orrne.w	r3, r3, #256	; 0x100
    db72:	tst.w	r1, #128	; 0x80
    db76:	it	ne
    db78:	orrne.w	r3, r3, #512	; 0x200
    db7c:	lsls	r1, r1, #15
    db7e:	it	mi
    db80:	orrmi.w	r3, r3, #1024	; 0x400
    db84:	adds.w	r1, r7, #254	; 0xfe
    db88:	str	r1, [sp, #24]
    db8a:	ite	cs
    db8c:	movcs	r1, #1
    db8e:	movcc	r1, #0
    db90:	cmp.w	r2, #32768	; 0x8000
    db94:	str	r1, [sp, #28]
    db96:	strd	r3, r0, [r4, #64]	; 0x40
    db9a:	beq.w	dce0 <block_iterate_proc@@Base+0xdbc>
    db9e:	cmp.w	r2, #40960	; 0xa000
    dba2:	beq.w	dd56 <block_iterate_proc@@Base+0xe32>
    dba6:	cmp.w	r2, #16384	; 0x4000
    dbaa:	bne.w	dd00 <block_iterate_proc@@Base+0xddc>
    dbae:	str	r4, [sp, #72]	; 0x48
    dbb0:	add.w	sl, sp, #64	; 0x40
    dbb4:	ldrd	r3, r4, [sp, #24]
    dbb8:	movs	r2, #2
    dbba:	strd	r5, r6, [sl]
    dbbe:	mov.w	r8, #0
    dbc2:	mov.w	r9, #0
    dbc6:	ldr	r0, [sp, #32]
    dbc8:	strd	r3, r4, [sl, #16]
    dbcc:	movs	r3, #0
    dbce:	strd	r2, r3, [sl, #24]
    dbd2:	movs	r3, #0
    dbd4:	ldr.w	r2, [pc, #1108]	; e02c <block_iterate_proc@@Base+0x1108>
    dbd8:	mov	r1, r7
    dbda:	strd	r8, r9, [sl, #32]
    dbde:	add	r2, pc
    dbe0:	str.w	r3, [sl, #40]	; 0x28
    dbe4:	str	r2, [sp, #0]
    dbe6:	mov	r2, r3
    dbe8:	str.w	sl, [sp, #4]
    dbec:	blx	91d8 <ext2fs_dir_iterate2@plt>
    dbf0:	cmp	r0, #0
    dbf2:	beq.w	dd1a <block_iterate_proc@@Base+0xdf6>
    dbf6:	ldr	r2, [sp, #40]	; 0x28
    dbf8:	mov.w	fp, #4294967295	; 0xffffffff
    dbfc:	ldr.w	r3, [pc, #1060]	; e024 <block_iterate_proc@@Base+0x1100>
    dc00:	ldr	r3, [r2, r3]
    dc02:	ldr	r4, [r3, #0]
    dc04:	blx	9018 <error_message@plt>
    dc08:	ldr.w	r2, [pc, #1060]	; e030 <block_iterate_proc@@Base+0x110c>
    dc0c:	movs	r1, #1
    dc0e:	add	r2, pc
    dc10:	mov	r3, r0
    dc12:	mov	r0, r4
    dc14:	blx	9040 <__fprintf_chk@plt+0x4>
    dc18:	ldr	r0, [sp, #36]	; 0x24
    dc1a:	blx	8ba8 <pthread_mutex_lock@plt>
    dc1e:	ldr	r3, [sp, #36]	; 0x24
    dc20:	ldrd	r2, r1, [r3, #32]
    dc24:	mov	r0, r3
    dc26:	adds	r2, #1
    dc28:	adc.w	r1, r1, #0
    dc2c:	strd	r2, r1, [r3, #32]
    dc30:	blx	8aa8 <pthread_mutex_unlock@plt>
    dc34:	cmp.w	fp, #0
    dc38:	bne.w	da20 <block_iterate_proc@@Base+0xafc>
    dc3c:	ldr.w	r3, [r6, #464]	; 0x1d0
    dc40:	mov.w	r0, #2097152	; 0x200000
    dc44:	ldr.w	r1, [r3, #384]	; 0x180
    dc48:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
    dc4c:	ldr	r3, [r5, #52]	; 0x34
    dc4e:	cmp	r3, r0
    dc50:	bcc.n	dc92 <block_iterate_proc@@Base+0xd6e>
    dc52:	mov	r1, r6
    dc54:	mov	r0, r5
    dc56:	bl	2fa9c <btrfs_commit_transaction@@Base>
    dc5a:	ldr	r4, [pc, #984]	; (e034 <block_iterate_proc@@Base+0x1110>)
    dc5c:	movw	r2, #845	; 0x34d
    dc60:	add	r4, pc
    dc62:	adds	r4, #68	; 0x44
    dc64:	mov	r1, r4
    dc66:	mov	r3, r0
    dc68:	ldr	r0, [pc, #972]	; (e038 <block_iterate_proc@@Base+0x1114>)
    dc6a:	add	r0, pc
    dc6c:	bl	d628 <block_iterate_proc@@Base+0x704>
    dc70:	movs	r1, #1
    dc72:	mov	r0, r6
    dc74:	bl	2f81c <btrfs_start_transaction@@Base>
    dc78:	movw	r2, #847	; 0x34f
    dc7c:	mov	r1, r4
    dc7e:	cmn.w	r0, #4096	; 0x1000
    dc82:	mov	r5, r0
    dc84:	ldr	r0, [pc, #948]	; (e03c <block_iterate_proc@@Base+0x1118>)
    dc86:	ite	ls
    dc88:	movls	r3, #0
    dc8a:	movhi	r3, #1
    dc8c:	add	r0, pc
    dc8e:	bl	d628 <block_iterate_proc@@Base+0x704>
    dc92:	add.w	sl, sp, #116	; 0x74
    dc96:	add.w	r8, sp, #60	; 0x3c
    dc9a:	add	r4, sp, #56	; 0x38
    dc9c:	ldr	r0, [r4, #0]
    dc9e:	mov	r2, sl
    dca0:	mov	r1, r8
    dca2:	blx	9088 <ext2fs_get_next_inode@plt>
    dca6:	mov	fp, r0
    dca8:	cmp	r0, #0
    dcaa:	beq.w	da6e <block_iterate_proc@@Base+0xb4a>
    dcae:	ldr	r2, [sp, #40]	; 0x28
    dcb0:	ldr	r3, [pc, #880]	; (e024 <block_iterate_proc@@Base+0x1100>)
    dcb2:	ldr	r3, [r2, r3]
    dcb4:	ldr	r4, [r3, #0]
    dcb6:	blx	9018 <error_message@plt>
    dcba:	ldr	r2, [pc, #900]	; (e040 <block_iterate_proc@@Base+0x111c>)
    dcbc:	add	r2, pc
    dcbe:	mov	r3, r0
    dcc0:	b.n	da60 <block_iterate_proc@@Base+0xb3c>
    dcc2:	cmp.w	r2, #32768	; 0x8000
    dcc6:	bne.w	dfe6 <block_iterate_proc@@Base+0x10c2>
    dcca:	ldr.w	r3, [sl, #108]	; 0x6c
    dcce:	str	r3, [r4, #20]
    dcd0:	b.n	db14 <block_iterate_proc@@Base+0xbf0>
    dcd2:	ldr.w	r0, [sl, #44]	; 0x2c
    dcd6:	bl	ca48 <decode_dev@@Base>
    dcda:	strd	r0, r1, [r4, #56]	; 0x38
    dcde:	b.n	db14 <block_iterate_proc@@Base+0xbf0>
    dce0:	ldr	r3, [sp, #44]	; 0x2c
    dce2:	mov	r1, r6
    dce4:	mov	r0, r5
    dce6:	strd	r7, r3, [sp, #8]
    dcea:	ldr	r3, [sp, #32]
    dcec:	strd	r4, r3, [sp]
    dcf0:	ldrd	r2, r3, [sp, #24]
    dcf4:	bl	d132 <block_iterate_proc@@Base+0x20e>
    dcf8:	mov	fp, r0
    dcfa:	cmp.w	fp, #0
    dcfe:	bne.n	dc18 <block_iterate_proc@@Base+0xcf4>
    dd00:	ldr	r3, [sp, #44]	; 0x2c
    dd02:	lsls	r3, r3, #29
    dd04:	bmi.n	dde6 <block_iterate_proc@@Base+0xec2>
    dd06:	add	r3, sp, #244	; 0xf4
    dd08:	mov	r1, r6
    dd0a:	str	r3, [sp, #0]
    dd0c:	mov	r0, r5
    dd0e:	ldrd	r2, r3, [sp, #24]
    dd12:	bl	3210c <btrfs_insert_inode@@Base>
    dd16:	mov	fp, r0
    dd18:	b.n	dc18 <block_iterate_proc@@Base+0xcf4>
    dd1a:	ldr.w	fp, [sl, #40]	; 0x28
    dd1e:	cmp.w	fp, #0
    dd22:	bne.w	dc18 <block_iterate_proc@@Base+0xcf4>
    dd26:	ldrd	r2, r3, [sl, #32]
    dd2a:	ldrd	r0, r1, [sp, #24]
    dd2e:	cmp	r1, r3
    dd30:	it	eq
    dd32:	cmpeq	r0, r2
    dd34:	bne.n	dd00 <block_iterate_proc@@Base+0xddc>
    dd36:	ldr	r2, [pc, #780]	; (e044 <block_iterate_proc@@Base+0x1120>)
    dd38:	mov	r3, r0
    dd3a:	mov	r4, r1
    dd3c:	mov	r0, r5
    dd3e:	strd	r3, r4, [sp, #8]
    dd42:	add	r2, pc
    dd44:	strd	r3, r4, [sp]
    dd48:	mov	r1, r6
    dd4a:	movs	r3, #2
    dd4c:	strd	r8, r9, [sp, #16]
    dd50:	bl	32514 <btrfs_insert_inode_ref@@Base>
    dd54:	b.n	dcf8 <block_iterate_proc@@Base+0xdd4>
    dd56:	mov	r1, sl
    dd58:	ldr	r0, [sp, #32]
    dd5a:	ldrd	r8, r9, [r4, #16]
    dd5e:	blx	8af8 <ext2fs_inode_data_blocks2@plt>
    dd62:	adds.w	r3, r8, #1
    dd66:	str	r3, [sp, #48]	; 0x30
    dd68:	adc.w	r3, r9, #0
    dd6c:	str	r3, [sp, #52]	; 0x34
    dd6e:	mov	sl, r0
    dd70:	mov	fp, r1
    dd72:	orrs.w	r3, sl, fp
    dd76:	beq.n	dda0 <block_iterate_proc@@Base+0xe7c>
    dd78:	ldr	r3, [sp, #48]	; 0x30
    dd7a:	mov	r1, r6
    dd7c:	mov	r0, r5
    dd7e:	str	r3, [r4, #16]
    dd80:	ldr	r3, [sp, #52]	; 0x34
    dd82:	str	r3, [r4, #20]
    dd84:	movs	r3, #3
    dd86:	strd	r7, r3, [sp, #8]
    dd8a:	ldr	r3, [sp, #32]
    dd8c:	strd	r4, r3, [sp]
    dd90:	ldrd	r2, r3, [sp, #24]
    dd94:	bl	d132 <block_iterate_proc@@Base+0x20e>
    dd98:	strd	r8, r9, [r4, #16]
    dd9c:	mov	fp, r0
    dd9e:	b.n	dcfa <block_iterate_proc@@Base+0xdd6>
    dda0:	add.w	r9, sp, #156	; 0x9c
    dda4:	ldr	r1, [pc, #672]	; (e048 <block_iterate_proc@@Base+0x1124>)
    dda6:	add.w	r3, r9, r8
    ddaa:	ldr	r0, [pc, #672]	; (e04c <block_iterate_proc@@Base+0x1128>)
    ddac:	add	r1, pc
    ddae:	movw	r2, #373	; 0x175
    ddb2:	ldrb	r3, [r3, #0]
    ddb4:	adds	r1, #48	; 0x30
    ddb6:	add	r0, pc
    ddb8:	subs	r3, #0
    ddba:	it	ne
    ddbc:	movne	r3, #1
    ddbe:	bl	d628 <block_iterate_proc@@Base+0x704>
    ddc2:	add.w	r3, r8, #1
    ddc6:	strd	sl, fp, [sp]
    ddca:	mov	r1, r6
    ddcc:	strd	r9, r3, [sp, #8]
    ddd0:	mov	r0, r5
    ddd2:	ldrd	r2, r3, [sp, #24]
    ddd6:	bl	32acc <btrfs_insert_inline_extent@@Base>
    ddda:	ldr	r3, [sp, #48]	; 0x30
    dddc:	str	r3, [r4, #24]
    ddde:	ldr	r3, [sp, #52]	; 0x34
    dde0:	str	r3, [r4, #28]
    dde2:	mov	fp, r0
    dde4:	b.n	dcfa <block_iterate_proc@@Base+0xdd6>
    dde6:	ldr	r3, [sp, #32]
    dde8:	ldrd	r3, r8, [r3, #16]
    ddec:	ldr	r2, [r3, #76]	; 0x4c
    ddee:	cbz	r2, de0a <block_iterate_proc@@Base+0xee6>
    ddf0:	ldrh.w	sl, [r3, #88]	; 0x58
    ddf4:	cmp.w	sl, #128	; 0x80
    ddf8:	bls.n	de0e <block_iterate_proc@@Base+0xeea>
    ddfa:	mov	r0, sl
    ddfc:	blx	8e40 <malloc@plt+0x4>
    de00:	mov	r4, r0
    de02:	cbnz	r0, de10 <block_iterate_proc@@Base+0xeec>
    de04:	mvn.w	fp, #11
    de08:	b.n	dc18 <block_iterate_proc@@Base+0xcf4>
    de0a:	mov.w	sl, #128	; 0x80
    de0e:	add	r4, sp, #404	; 0x194
    de10:	ldr	r0, [sp, #32]
    de12:	mov	r3, sl
    de14:	mov	r2, r4
    de16:	mov	r1, r7
    de18:	blx	8dc0 <ext2fs_read_inode_full@plt>
    de1c:	cbz	r0, de5a <block_iterate_proc@@Base+0xf36>
    de1e:	ldr	r2, [sp, #40]	; 0x28
    de20:	ldr	r3, [pc, #512]	; (e024 <block_iterate_proc@@Base+0x1100>)
    de22:	ldr	r3, [r2, r3]
    de24:	ldr	r7, [r3, #0]
    de26:	blx	9018 <error_message@plt>
    de2a:	ldr	r2, [pc, #548]	; (e050 <block_iterate_proc@@Base+0x112c>)
    de2c:	movs	r1, #1
    de2e:	add	r2, pc
    de30:	mov	r3, r0
    de32:	mov	r0, r7
    de34:	blx	9040 <__fprintf_chk@plt+0x4>
    de38:	movs	r7, #0
    de3a:	mov.w	fp, #4294967295	; 0xffffffff
    de3e:	mov	r0, r7
    de40:	blx	8b84 <free@plt+0x4>
    de44:	add	r2, sp, #404	; 0x194
    de46:	cmp	r4, r2
    de48:	beq.n	de50 <block_iterate_proc@@Base+0xf2c>
    de4a:	mov	r0, r4
    de4c:	blx	8b84 <free@plt+0x4>
    de50:	cmp.w	fp, #0
    de54:	beq.w	dd06 <block_iterate_proc@@Base+0xde2>
    de58:	b.n	dc18 <block_iterate_proc@@Base+0xcf4>
    de5a:	ldr	r3, [sp, #32]
    de5c:	ldr	r3, [r3, #16]
    de5e:	ldr	r3, [r3, #84]	; 0x54
    de60:	cmp	r3, r7
    de62:	bcc.n	deac <block_iterate_proc@@Base+0xf88>
    de64:	ldr.w	fp, [r4, #104]	; 0x68
    de68:	cmp.w	fp, #0
    de6c:	beq.w	dfb6 <block_iterate_proc@@Base+0x1092>
    de70:	mov	r0, r8
    de72:	blx	8e40 <malloc@plt+0x4>
    de76:	mov	r7, r0
    de78:	cmp	r0, #0
    de7a:	beq.w	dfba <block_iterate_proc@@Base+0x1096>
    de7e:	str	r0, [sp, #0]
    de80:	mov	r2, fp
    de82:	ldr	r0, [sp, #32]
    de84:	movs	r3, #0
    de86:	blx	9158 <ext2fs_read_ext_attr2@plt>
    de8a:	cmp	r0, #0
    de8c:	beq.n	df44 <block_iterate_proc@@Base+0x1020>
    de8e:	ldr	r2, [sp, #40]	; 0x28
    de90:	ldr	r3, [pc, #400]	; (e024 <block_iterate_proc@@Base+0x1100>)
    de92:	ldr	r3, [r2, r3]
    de94:	ldr.w	r8, [r3]
    de98:	blx	9018 <error_message@plt>
    de9c:	ldr	r2, [pc, #436]	; (e054 <block_iterate_proc@@Base+0x1130>)
    de9e:	movs	r1, #1
    dea0:	add	r2, pc
    dea2:	mov	r3, r0
    dea4:	mov	r0, r8
    dea6:	blx	9040 <__fprintf_chk@plt+0x4>
    deaa:	b.n	de3a <block_iterate_proc@@Base+0xf16>
    deac:	cmp.w	sl, #128	; 0x80
    deb0:	bls.n	de64 <block_iterate_proc@@Base+0xf40>
    deb2:	ldrh.w	r7, [r4, #128]	; 0x80
    deb6:	add.w	r3, r7, #128	; 0x80
    deba:	cmp	sl, r3
    debc:	bcs.n	dec6 <block_iterate_proc@@Base+0xfa2>
    debe:	movs	r7, #0
    dec0:	mvn.w	fp, #4
    dec4:	b.n	de3e <block_iterate_proc@@Base+0xf1a>
    dec6:	cmp	r7, #0
    dec8:	beq.n	de64 <block_iterate_proc@@Base+0xf40>
    deca:	adds	r3, r4, r7
    decc:	ldr	r2, [pc, #320]	; (e010 <block_iterate_proc@@Base+0x10ec>)
    dece:	ldr.w	r3, [r3, #128]	; 0x80
    ded2:	cmp	r3, r2
    ded4:	bne.n	de64 <block_iterate_proc@@Base+0xf40>
    ded6:	adds	r7, #132	; 0x84
    ded8:	add.w	r1, r4, sl
    dedc:	add.w	r9, r4, r7
    dee0:	mov	r3, r9
    dee2:	ldr	r2, [r3, #0]
    dee4:	cbnz	r2, df34 <block_iterate_proc@@Base+0x1010>
    dee6:	sub.w	r7, sl, r7
    deea:	ldr.w	r3, [r9]
    deee:	cmp	r3, #0
    def0:	beq.n	de64 <block_iterate_proc@@Base+0xf40>
    def2:	ldr.w	r2, [r9, #8]
    def6:	cmp	r7, r2
    def8:	bcc.n	debe <block_iterate_proc@@Base+0xf9a>
    defa:	ldrh.w	r1, [r9, #2]
    defe:	adds	r3, r2, r1
    df00:	cmp	r7, r3
    df02:	bcc.n	debe <block_iterate_proc@@Base+0xf9a>
    df04:	str	r2, [sp, #8]
    df06:	mov	r0, r5
    df08:	ldrh.w	r3, [r4, #128]	; 0x80
    df0c:	adds	r3, #132	; 0x84
    df0e:	add	r3, r1
    df10:	mov	r1, r6
    df12:	add	r3, r4
    df14:	strd	r9, r3, [sp]
    df18:	ldrd	r2, r3, [sp, #24]
    df1c:	bl	d6b0 <block_iterate_proc@@Base+0x78c>
    df20:	mov	fp, r0
    df22:	cmp	r0, #0
    df24:	bne.n	dfb6 <block_iterate_proc@@Base+0x1092>
    df26:	ldrb.w	r3, [r9]
    df2a:	adds	r3, #19
    df2c:	bic.w	r3, r3, #3
    df30:	add	r9, r3
    df32:	b.n	deea <block_iterate_proc@@Base+0xfc6>
    df34:	ldrb	r2, [r3, #0]
    df36:	adds	r2, #19
    df38:	bic.w	r2, r2, #3
    df3c:	add	r3, r2
    df3e:	cmp	r1, r3
    df40:	bhi.n	dee2 <block_iterate_proc@@Base+0xfbe>
    df42:	b.n	debe <block_iterate_proc@@Base+0xf9a>
    df44:	ldr	r3, [r7, #0]
    df46:	ldr	r2, [pc, #200]	; (e010 <block_iterate_proc@@Base+0x10ec>)
    df48:	cmp	r3, r2
    df4a:	bne.n	dec0 <block_iterate_proc@@Base+0xf9c>
    df4c:	ldr	r3, [r7, #8]
    df4e:	cmp	r3, #1
    df50:	bne.n	dec0 <block_iterate_proc@@Base+0xf9c>
    df52:	add.w	r9, r7, #32
    df56:	add.w	r1, r7, r8
    df5a:	mov	r3, r9
    df5c:	ldr	r2, [r3, #0]
    df5e:	cbnz	r2, df6a <block_iterate_proc@@Base+0x1046>
    df60:	ldr.w	r0, [r9]
    df64:	cbnz	r0, df7a <block_iterate_proc@@Base+0x1056>
    df66:	mov	fp, r0
    df68:	b.n	de3e <block_iterate_proc@@Base+0xf1a>
    df6a:	ldrb	r2, [r3, #0]
    df6c:	adds	r2, #19
    df6e:	bic.w	r2, r2, #3
    df72:	add	r3, r2
    df74:	cmp	r1, r3
    df76:	bhi.n	df5c <block_iterate_proc@@Base+0x1038>
    df78:	b.n	dec0 <block_iterate_proc@@Base+0xf9c>
    df7a:	ldr.w	r2, [r9, #8]
    df7e:	cmp	r8, r2
    df80:	bcc.n	dec0 <block_iterate_proc@@Base+0xf9c>
    df82:	ldrh.w	r3, [r9, #2]
    df86:	adds	r1, r2, r3
    df88:	cmp	r8, r1
    df8a:	bcc.n	dec0 <block_iterate_proc@@Base+0xf9c>
    df8c:	add	r3, r7
    df8e:	str	r2, [sp, #8]
    df90:	strd	r9, r3, [sp]
    df94:	mov	r1, r6
    df96:	ldrd	r2, r3, [sp, #24]
    df9a:	mov	r0, r5
    df9c:	bl	d6b0 <block_iterate_proc@@Base+0x78c>
    dfa0:	mov	fp, r0
    dfa2:	cmp	r0, #0
    dfa4:	bne.w	de3e <block_iterate_proc@@Base+0xf1a>
    dfa8:	ldrb.w	r3, [r9]
    dfac:	adds	r3, #19
    dfae:	bic.w	r3, r3, #3
    dfb2:	add	r9, r3
    dfb4:	b.n	df60 <block_iterate_proc@@Base+0x103c>
    dfb6:	movs	r7, #0
    dfb8:	b.n	de3e <block_iterate_proc@@Base+0xf1a>
    dfba:	mvn.w	fp, #11
    dfbe:	b.n	de3e <block_iterate_proc@@Base+0xf1a>
    dfc0:	mov	r1, r6
    dfc2:	mov	r0, r5
    dfc4:	bl	2fa9c <btrfs_commit_transaction@@Base>
    dfc8:	ldr	r1, [pc, #140]	; (e058 <block_iterate_proc@@Base+0x1134>)
    dfca:	movw	r2, #855	; 0x357
    dfce:	add	r1, pc
    dfd0:	adds	r1, #68	; 0x44
    dfd2:	mov	r3, r0
    dfd4:	mov	fp, r0
    dfd6:	ldr	r0, [pc, #132]	; (e05c <block_iterate_proc@@Base+0x1138>)
    dfd8:	add	r0, pc
    dfda:	bl	d628 <block_iterate_proc@@Base+0x704>
    dfde:	ldr	r0, [r4, #0]
    dfe0:	blx	8be8 <ext2fs_close_inode_scan@plt>
    dfe4:	b.n	da20 <block_iterate_proc@@Base+0xafc>
    dfe6:	cmp.w	r2, #40960	; 0xa000
    dfea:	beq.w	db14 <block_iterate_proc@@Base+0xbf0>
    dfee:	ldr.w	r3, [sl, #40]	; 0x28
    dff2:	cmp	r3, #0
    dff4:	beq.w	dcd2 <block_iterate_proc@@Base+0xdae>
    dff8:	ldrh.w	r2, [sl, #40]	; 0x28
    dffc:	movs	r3, #0
    dffe:	strd	r2, r3, [r4, #56]	; 0x38
    e002:	b.n	db14 <block_iterate_proc@@Base+0xbf0>
    e004:	mov	r0, fp
    e006:	add.w	sp, sp, #540	; 0x21c
    e00a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e00e:	nop
    e010:	movs	r0, r0
    e012:			; <UNDEFINED> instruction: 0xea02d320
    e016:	movs	r5, r0
    e018:	bcc.n	e04c <block_iterate_proc@@Base+0x1128>
    e01a:	movs	r5, r0
    e01c:	lsls	r0, r1, #10
    e01e:	movs	r0, r0
    e020:	bcs.n	e004 <block_iterate_proc@@Base+0x10e0>
    e022:	movs	r5, r0
    e024:	lsls	r4, r3, #10
    e026:	movs	r0, r0
    e028:	adds	r7, r2, r4
    e02a:	movs	r3, r0
    e02c:	ldc2l	15, cr15, [r7], {255}	; 0xff
    e030:	asrs	r1, r0, #30
    e032:	movs	r3, r0
    e034:	adds	r4, r1, r0
    e036:	movs	r3, r0
    e038:	subs	r0, r3, #3
    e03a:	movs	r3, r0
    e03c:	asrs	r5, r5, #29
    e03e:	movs	r3, r0
    e040:	asrs	r3, r1, #29
    e042:	movs	r3, r0
    e044:	asrs	r6, r5, #24
    e046:	movs	r3, r0
    e048:	asrs	r0, r0, #27
    e04a:	movs	r3, r0
    e04c:	asrs	r2, r6, #23
    e04e:	movs	r3, r0
    e050:	asrs	r4, r2, #22
    e052:	movs	r3, r0
    e054:	asrs	r6, r7, #20
    e056:	movs	r3, r0
    e058:	asrs	r6, r3, #18
    e05a:	movs	r3, r0
    e05c:	subs	r2, r5, r5
    e05e:	movs	r3, r0
    e060:	ldr	r2, [pc, #60]	; (e0a0 <block_iterate_proc@@Base+0x117c>)
    e062:	movs	r1, #16
    e064:	ldr	r3, [pc, #60]	; (e0a4 <block_iterate_proc@@Base+0x1180>)
    e066:	push	{r4, lr}
    e068:	add	r2, pc
    e06a:	sub	sp, #72	; 0x48
    e06c:	add	r4, sp, #4
    e06e:	ldr	r3, [r2, r3]
    e070:	mov	r0, r4
    e072:	ldr	r3, [r3, #0]
    e074:	str	r3, [sp, #68]	; 0x44
    e076:	mov.w	r3, #0
    e07a:	blx	8e98 <backtrace@plt>
    e07e:	movs	r2, #2
    e080:	mov	r1, r0
    e082:	mov	r0, r4
    e084:	blx	9214 <backtrace_symbols_fd@plt>
    e088:	ldr	r2, [pc, #28]	; (e0a8 <block_iterate_proc@@Base+0x1184>)
    e08a:	ldr	r3, [pc, #24]	; (e0a4 <block_iterate_proc@@Base+0x1180>)
    e08c:	add	r2, pc
    e08e:	ldr	r3, [r2, r3]
    e090:	ldr	r2, [r3, #0]
    e092:	ldr	r3, [sp, #68]	; 0x44
    e094:	eors	r2, r3
    e096:	beq.n	e09c <block_iterate_proc@@Base+0x1178>
    e098:	blx	8c90 <__stack_chk_fail@plt>
    e09c:	add	sp, #72	; 0x48
    e09e:	pop	{r4, pc}
    e0a0:	ldmia	r4, {r4, r5, r7}
    e0a2:	movs	r5, r0
    e0a4:	lsls	r0, r1, #10
    e0a6:	movs	r0, r0
    e0a8:	ldmia	r4!, {r2, r3, r7}
    e0aa:	movs	r5, r0

0000e0ac <btrfs_delete_one_dir_name@@Base>:
    e0ac:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    e0b0:	mov	r6, r3
    e0b2:	ldr.w	ip, [r2]
    e0b6:	movs	r7, #25
    e0b8:	mov	r8, r1
    e0ba:	mov	r5, r2
    e0bc:	add.w	lr, ip, #96	; 0x60
    e0c0:	add	r3, lr
    e0c2:	ldrh.w	r4, [r3, #27]
    e0c6:	ldrh.w	r3, [r3, #25]
    e0ca:	add	r4, r3
    e0cc:	ldr	r3, [r2, #32]
    e0ce:	adds	r4, #30
    e0d0:	mla	r7, r7, r3, lr
    e0d4:	add.w	lr, r7, #101	; 0x65
    e0d8:	ldr.w	r7, [r7, #122]	; 0x7a
    e0dc:	cmp	r4, r7
    e0de:	bcc.n	e0ee <btrfs_delete_one_dir_name@@Base+0x42>
    e0e0:	movs	r4, #1
    e0e2:	str	r4, [sp, #0]
    e0e4:	bl	1fc98 <btrfs_del_items@@Base>
    e0e8:	add	sp, #8
    e0ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e0ee:	ldr.w	r3, [lr, #17]
    e0f2:	adds	r2, r4, r6
    e0f4:	mov	r0, ip
    e0f6:	mov	r1, r6
    e0f8:	add	r3, r7
    e0fa:	adds	r3, #101	; 0x65
    e0fc:	subs	r3, r3, r2
    e0fe:	bl	1bc2c <memmove_extent_buffer@@Base>
    e102:	subs	r2, r7, r4
    e104:	movs	r3, #1
    e106:	mov	r1, r5
    e108:	mov	r0, r8
    e10a:	bl	1e71c <btrfs_truncate_item@@Base>
    e10e:	movs	r0, #0
    e110:	b.n	e0e8 <btrfs_delete_one_dir_name@@Base+0x3c>

0000e112 <btrfs_match_dir_item_name@@Base>:
    e112:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e116:	mov	r4, r1
    e118:	ldr.w	fp, [r4]
    e11c:	mov	r7, r3
    e11e:	ldr	r3, [r4, #32]
    e120:	mov	r1, r2
    e122:	add.w	r9, fp, #96	; 0x60
    e126:	movs	r2, #25
    e128:	ldr.w	r8, [pc, #188]	; e1e8 <btrfs_match_dir_item_name@@Base+0xd6>
    e12c:	sub	sp, #20
    e12e:	mla	r3, r2, r3, r9
    e132:	add	r8, pc
    e134:	add.w	r5, r3, #101	; 0x65
    e138:	ldr.w	r4, [r3, #118]	; 0x76
    e13c:	adds	r4, #101	; 0x65
    e13e:	add.w	r2, r9, r4
    e142:	ldrh.w	r3, [r2, #27]
    e146:	ldrh.w	r2, [r2, #25]
    e14a:	cmp	r3, #255	; 0xff
    e14c:	bls.n	e166 <btrfs_match_dir_item_name@@Base+0x54>
    e14e:	ldr	r3, [pc, #156]	; (e1ec <btrfs_match_dir_item_name@@Base+0xda>)
    e150:	movs	r1, #1
    e152:	ldr.w	r0, [r8, r3]
    e156:	mov	r3, r2
    e158:	ldr	r2, [pc, #148]	; (e1f0 <btrfs_match_dir_item_name@@Base+0xde>)
    e15a:	ldr	r0, [r0, #0]
    e15c:	add	r2, pc
    e15e:	blx	9040 <__fprintf_chk@plt+0x4>
    e162:	movs	r4, #0
    e164:	b.n	e1de <btrfs_match_dir_item_name@@Base+0xcc>
    e166:	ldr.w	r0, [r0, #464]	; 0x1d0
    e16a:	adds	r6, r2, r3
    e16c:	ldr.w	r0, [r0, #384]	; 0x180
    e170:	subs	r0, #156	; 0x9c
    e172:	cmp	r6, r0
    e174:	bhi.n	e1aa <btrfs_match_dir_item_name@@Base+0x98>
    e176:	ldr.w	sl, [r5, #21]
    e17a:	movs	r6, #0
    e17c:	cmp	r6, sl
    e17e:	bcs.n	e162 <btrfs_match_dir_item_name@@Base+0x50>
    e180:	add.w	r2, r9, r4
    e184:	ldrh.w	r3, [r2, #27]
    e188:	ldrh.w	r5, [r2, #25]
    e18c:	sub.w	r2, sl, r6
    e190:	add	r5, r3
    e192:	adds	r5, #30
    e194:	cmp	r2, r5
    e196:	bcs.n	e1c0 <btrfs_match_dir_item_name@@Base+0xae>
    e198:	ldr	r3, [pc, #80]	; (e1ec <btrfs_match_dir_item_name@@Base+0xda>)
    e19a:	ldr	r0, [pc, #88]	; (e1f4 <btrfs_match_dir_item_name@@Base+0xe2>)
    e19c:	ldr.w	r3, [r8, r3]
    e1a0:	add	r0, pc
    e1a2:	ldr	r1, [r3, #0]
    e1a4:	blx	91a8 <fputs@plt+0x4>
    e1a8:	b.n	e162 <btrfs_match_dir_item_name@@Base+0x50>
    e1aa:	ldr	r1, [pc, #64]	; (e1ec <btrfs_match_dir_item_name@@Base+0xda>)
    e1ac:	ldr.w	r0, [r8, r1]
    e1b0:	movs	r1, #1
    e1b2:	str	r2, [sp, #0]
    e1b4:	ldr	r2, [pc, #64]	; (e1f8 <btrfs_match_dir_item_name@@Base+0xe6>)
    e1b6:	ldr	r0, [r0, #0]
    e1b8:	add	r2, pc
    e1ba:	blx	9040 <__fprintf_chk@plt+0x4>
    e1be:	b.n	e162 <btrfs_match_dir_item_name@@Base+0x50>
    e1c0:	cmp	r3, r7
    e1c2:	beq.n	e1ca <btrfs_match_dir_item_name@@Base+0xb8>
    e1c4:	add	r6, r5
    e1c6:	add	r4, r5
    e1c8:	b.n	e17c <btrfs_match_dir_item_name@@Base+0x6a>
    e1ca:	add.w	r2, r4, #30
    e1ce:	mov	r3, r7
    e1d0:	mov	r0, fp
    e1d2:	str	r1, [sp, #12]
    e1d4:	bl	1bba8 <memcmp_extent_buffer@@Base>
    e1d8:	ldr	r1, [sp, #12]
    e1da:	cmp	r0, #0
    e1dc:	bne.n	e1c4 <btrfs_match_dir_item_name@@Base+0xb2>
    e1de:	mov	r0, r4
    e1e0:	add	sp, #20
    e1e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1e6:	nop
    e1e8:	ldmia	r3!, {r1, r2, r5, r6, r7}
    e1ea:	movs	r5, r0
    e1ec:	lsls	r4, r3, #10
    e1ee:	movs	r0, r0
    e1f0:	asrs	r5, r4, #13
    e1f2:	movs	r3, r0
    e1f4:	asrs	r3, r5, #13
    e1f6:	movs	r3, r0
    e1f8:	asrs	r0, r5, #12
    e1fa:	movs	r3, r0
    e1fc:	ldr.w	ip, [pc, #292]	; e324 <btrfs_match_dir_item_name@@Base+0x212>
    e200:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e204:	add	ip, pc
    e206:	ldr	r4, [pc, #288]	; (e328 <btrfs_match_dir_item_name@@Base+0x216>)
    e208:	sub	sp, #24
    e20a:	mov.w	r9, #1
    e20e:	mov	r8, r1
    e210:	ldrd	r6, sl, [sp, #56]	; 0x38
    e214:	mov	r5, r2
    e216:	ldr.w	r4, [ip, r4]
    e21a:	ldr	r7, [pc, #272]	; (e32c <btrfs_match_dir_item_name@@Base+0x21a>)
    e21c:	ldr	r4, [r4, #0]
    e21e:	str	r4, [sp, #20]
    e220:	mov.w	r4, #0
    e224:	add	r4, sp, #16
    e226:	str.w	r9, [sp, #4]
    e22a:	add	r7, pc
    e22c:	str	r4, [sp, #0]
    e22e:	str	r6, [sp, #16]
    e230:	bl	1f8ac <btrfs_insert_empty_items@@Base>
    e234:	cmn.w	r0, #17
    e238:	mov	r4, r0
    e23a:	bne.n	e2b2 <btrfs_match_dir_item_name@@Base+0x1a0>
    e23c:	ldr	r3, [sp, #64]	; 0x40
    e23e:	mov	r2, sl
    e240:	mov	r1, r5
    e242:	mov	r0, r8
    e244:	bl	e112 <btrfs_match_dir_item_name@@Base>
    e248:	cmp	r0, #0
    e24a:	bne.n	e2b6 <btrfs_match_dir_item_name@@Base+0x1a4>
    e24c:	mov	r2, r6
    e24e:	mov	r1, r5
    e250:	mov	r0, r8
    e252:	bl	1e8d0 <btrfs_extend_item@@Base>
    e256:	subs	r4, r0, #0
    e258:	ble.n	e2b2 <btrfs_match_dir_item_name@@Base+0x1a0>
    e25a:	ldr	r3, [pc, #212]	; (e330 <btrfs_match_dir_item_name@@Base+0x21e>)
    e25c:	mov	r1, r9
    e25e:	ldr	r2, [pc, #212]	; (e334 <btrfs_match_dir_item_name@@Base+0x222>)
    e260:	ldr	r0, [r7, r3]
    e262:	add	r2, pc
    e264:	ldr	r3, [pc, #208]	; (e338 <btrfs_match_dir_item_name@@Base+0x226>)
    e266:	str.w	r9, [sp, #12]
    e26a:	add	r3, pc
    e26c:	str	r3, [sp, #8]
    e26e:	ldr	r3, [pc, #204]	; (e33c <btrfs_match_dir_item_name@@Base+0x22a>)
    e270:	add	r3, pc
    e272:	str	r3, [sp, #4]
    e274:	movs	r3, #46	; 0x2e
    e276:	str	r3, [sp, #0]
    e278:	ldr	r3, [pc, #196]	; (e340 <btrfs_match_dir_item_name@@Base+0x22e>)
    e27a:	ldr	r0, [r0, #0]
    e27c:	add	r3, pc
    e27e:	blx	9040 <__fprintf_chk@plt+0x4>
    e282:	bl	e060 <block_iterate_proc@@Base+0x113c>
    e286:	ldr	r3, [pc, #168]	; (e330 <btrfs_match_dir_item_name@@Base+0x21e>)
    e288:	movs	r1, #1
    e28a:	ldr	r2, [pc, #184]	; (e344 <btrfs_match_dir_item_name@@Base+0x232>)
    e28c:	ldr	r0, [r7, r3]
    e28e:	add	r2, pc
    e290:	ldr	r3, [pc, #180]	; (e348 <btrfs_match_dir_item_name@@Base+0x236>)
    e292:	str	r1, [sp, #12]
    e294:	add	r3, pc
    e296:	str	r3, [sp, #8]
    e298:	ldr	r3, [pc, #176]	; (e34c <btrfs_match_dir_item_name@@Base+0x23a>)
    e29a:	add	r3, pc
    e29c:	str	r3, [sp, #4]
    e29e:	movs	r3, #50	; 0x32
    e2a0:	str	r3, [sp, #0]
    e2a2:	ldr	r3, [pc, #172]	; (e350 <btrfs_match_dir_item_name@@Base+0x23e>)
    e2a4:	ldr	r0, [r0, #0]
    e2a6:	add	r3, pc
    e2a8:	blx	9040 <__fprintf_chk@plt+0x4>
    e2ac:	bl	e060 <block_iterate_proc@@Base+0x113c>
    e2b0:	b.n	e2bc <btrfs_match_dir_item_name@@Base+0x1aa>
    e2b2:	cmp	r4, #0
    e2b4:	bge.n	e2ba <btrfs_match_dir_item_name@@Base+0x1a8>
    e2b6:	mov	r0, r4
    e2b8:	b.n	e308 <btrfs_match_dir_item_name@@Base+0x1f6>
    e2ba:	bne.n	e286 <btrfs_match_dir_item_name@@Base+0x174>
    e2bc:	ldr	r2, [r5, #0]
    e2be:	movs	r1, #25
    e2c0:	ldr	r3, [r5, #32]
    e2c2:	mla	r3, r1, r3, r2
    e2c6:	ldr.w	r0, [r3, #214]	; 0xd6
    e2ca:	add.w	r4, r0, #101	; 0x65
    e2ce:	ldr.w	r0, [r3, #218]	; 0xda
    e2d2:	cmp	r6, r0
    e2d4:	bls.n	e304 <btrfs_match_dir_item_name@@Base+0x1f2>
    e2d6:	ldr	r3, [pc, #88]	; (e330 <btrfs_match_dir_item_name@@Base+0x21e>)
    e2d8:	movs	r1, #1
    e2da:	ldr	r2, [pc, #120]	; (e354 <btrfs_match_dir_item_name@@Base+0x242>)
    e2dc:	ldr	r0, [r7, r3]
    e2de:	add	r2, pc
    e2e0:	ldr	r3, [pc, #116]	; (e358 <btrfs_match_dir_item_name@@Base+0x246>)
    e2e2:	str	r1, [sp, #12]
    e2e4:	add	r3, pc
    e2e6:	str	r3, [sp, #8]
    e2e8:	ldr	r3, [pc, #112]	; (e35c <btrfs_match_dir_item_name@@Base+0x24a>)
    e2ea:	add	r3, pc
    e2ec:	str	r3, [sp, #4]
    e2ee:	movs	r3, #54	; 0x36
    e2f0:	str	r3, [sp, #0]
    e2f2:	ldr	r3, [pc, #108]	; (e360 <btrfs_match_dir_item_name@@Base+0x24e>)
    e2f4:	ldr	r0, [r0, #0]
    e2f6:	add	r3, pc
    e2f8:	blx	9040 <__fprintf_chk@plt+0x4>
    e2fc:	bl	e060 <block_iterate_proc@@Base+0x113c>
    e300:	blx	91c0 <abort@plt>
    e304:	subs	r0, r0, r6
    e306:	add	r0, r4
    e308:	ldr	r2, [pc, #88]	; (e364 <btrfs_match_dir_item_name@@Base+0x252>)
    e30a:	ldr	r3, [pc, #28]	; (e328 <btrfs_match_dir_item_name@@Base+0x216>)
    e30c:	add	r2, pc
    e30e:	ldr	r3, [r2, r3]
    e310:	ldr	r2, [r3, #0]
    e312:	ldr	r3, [sp, #20]
    e314:	eors	r2, r3
    e316:	beq.n	e31c <btrfs_match_dir_item_name@@Base+0x20a>
    e318:	blx	8c90 <__stack_chk_fail@plt>
    e31c:	add	sp, #24
    e31e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e322:	nop
    e324:	ldmia	r3!, {r2, r4}
    e326:	movs	r5, r0
    e328:	lsls	r0, r1, #10
    e32a:	movs	r0, r0
    e32c:	ldmia	r2, {r1, r2, r3, r5, r6, r7}
    e32e:	movs	r5, r0
    e330:	lsls	r4, r3, #10
    e332:	movs	r0, r0
    e334:	asrs	r3, r1, #11
    e336:	movs	r3, r0
    e338:	subs	r5, #239	; 0xef
    e33a:	movs	r3, r0
    e33c:	asrs	r4, r5, #12
    e33e:	movs	r3, r0
    e340:	asrs	r6, r4, #10
    e342:	movs	r3, r0
    e344:	asrs	r7, r3, #10
    e346:	movs	r3, r0
    e348:	subs	r5, #197	; 0xc5
    e34a:	movs	r3, r0
    e34c:	asrs	r2, r0, #12
    e34e:	movs	r3, r0
    e350:	asrs	r4, r7, #9
    e352:	movs	r3, r0
    e354:	lsls	r0, r0, #2
    e356:	movs	r3, r0
    e358:	asrs	r7, r7, #9
    e35a:	movs	r3, r0
    e35c:	asrs	r2, r6, #10
    e35e:	movs	r3, r0
    e360:	asrs	r4, r5, #8
    e362:	movs	r3, r0
    e364:	ldmia	r2, {r2, r3}
    e366:	movs	r5, r0

0000e368 <btrfs_insert_xattr_item@@Base>:
    e368:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e36c:	mov	r5, r3
    e36e:	vpush	{d8}
    e372:	mov	r7, r2
    e374:	ldr	r2, [pc, #320]	; (e4b8 <btrfs_insert_xattr_item@@Base+0x150>)
    e376:	mov	r9, r0
    e378:	mov	sl, r1
    e37a:	mvn.w	r0, #1
    e37e:	add	r2, pc
    e380:	mov	r1, r7
    e382:	sub	sp, #76	; 0x4c
    e384:	movs	r4, #0
    e386:	ldr.w	fp, [pc, #308]	; e4bc <btrfs_insert_xattr_item@@Base+0x154>
    e38a:	ldr	r3, [sp, #120]	; 0x78
    e38c:	ldrh.w	r8, [sp, #124]	; 0x7c
    e390:	add	fp, pc
    e392:	vmov	s16, r3
    e396:	ldr	r3, [pc, #296]	; (e4c0 <btrfs_insert_xattr_item@@Base+0x158>)
    e398:	ldr	r3, [r2, r3]
    e39a:	mov	r2, r5
    e39c:	ldr	r3, [r3, #0]
    e39e:	str	r3, [sp, #68]	; 0x44
    e3a0:	mov.w	r3, #0
    e3a4:	ldr	r3, [sp, #128]	; 0x80
    e3a6:	str	r3, [sp, #28]
    e3a8:	ldr	r3, [sp, #132]	; 0x84
    e3aa:	str	r3, [sp, #32]
    e3ac:	movs	r3, #24
    e3ae:	strb.w	r3, [sp, #36]	; 0x24
    e3b2:	bl	1bc9a <crc32c_le@@Base>
    e3b6:	str.w	r4, [sp, #41]	; 0x29
    e3ba:	str.w	r0, [sp, #37]	; 0x25
    e3be:	bl	1c6f0 <btrfs_alloc_path@@Base>
    e3c2:	mov	r6, r0
    e3c4:	cmp	r0, #0
    e3c6:	beq.n	e4a8 <btrfs_insert_xattr_item@@Base+0x140>
    e3c8:	add.w	r3, r8, #30
    e3cc:	mov	r2, r0
    e3ce:	add	r3, r5
    e3d0:	mov	r0, r9
    e3d2:	str	r3, [sp, #0]
    e3d4:	mov	r1, sl
    e3d6:	add	r3, sp, #28
    e3d8:	strd	r7, r5, [sp, #4]
    e3dc:	bl	e1fc <btrfs_match_dir_item_name@@Base+0xea>
    e3e0:	cmn.w	r0, #4096	; 0x1000
    e3e4:	mov	r9, r0
    e3e6:	bls.n	e41a <btrfs_insert_xattr_item@@Base+0xb2>
    e3e8:	ldr	r3, [pc, #216]	; (e4c4 <btrfs_insert_xattr_item@@Base+0x15c>)
    e3ea:	movs	r1, #1
    e3ec:	ldr	r2, [pc, #216]	; (e4c8 <btrfs_insert_xattr_item@@Base+0x160>)
    e3ee:	ldr.w	r0, [fp, r3]
    e3f2:	add	r2, pc
    e3f4:	ldr	r3, [pc, #212]	; (e4cc <btrfs_insert_xattr_item@@Base+0x164>)
    e3f6:	str	r1, [sp, #12]
    e3f8:	add	r3, pc
    e3fa:	str	r3, [sp, #8]
    e3fc:	ldr	r3, [pc, #208]	; (e4d0 <btrfs_insert_xattr_item@@Base+0x168>)
    e3fe:	add	r3, pc
    e400:	adds	r3, #21
    e402:	str	r3, [sp, #4]
    e404:	movs	r3, #89	; 0x59
    e406:	str	r3, [sp, #0]
    e408:	ldr	r3, [pc, #200]	; (e4d4 <btrfs_insert_xattr_item@@Base+0x16c>)
    e40a:	ldr	r0, [r0, #0]
    e40c:	add	r3, pc
    e40e:	blx	9040 <__fprintf_chk@plt+0x4>
    e412:	bl	e060 <block_iterate_proc@@Base+0x113c>
    e416:	blx	91c0 <abort@plt>
    e41a:	ldr	r0, [r6, #0]
    e41c:	add	r1, sp, #48	; 0x30
    e41e:	movs	r2, #0
    e420:	movs	r3, #0
    e422:	strd	r2, r3, [sp, #48]	; 0x30
    e426:	movs	r3, #17
    e428:	mov	r2, r9
    e42a:	str	r0, [sp, #20]
    e42c:	strb.w	r4, [sp, #57]	; 0x39
    e430:	strb.w	r4, [sp, #58]	; 0x3a
    e434:	strb.w	r4, [sp, #59]	; 0x3b
    e438:	strb.w	r4, [sp, #60]	; 0x3c
    e43c:	strb.w	r4, [sp, #61]	; 0x3d
    e440:	strb.w	r4, [sp, #62]	; 0x3e
    e444:	strb.w	r4, [sp, #63]	; 0x3f
    e448:	strb.w	r4, [sp, #64]	; 0x40
    e44c:	strb.w	r4, [sp, #56]	; 0x38
    e450:	bl	1bbd0 <write_extent_buffer@@Base>
    e454:	ldr	r0, [sp, #20]
    e456:	movs	r2, #8
    e458:	mov	r1, r7
    e45a:	add.w	r3, r0, #96	; 0x60
    e45e:	add	r3, r9
    e460:	strb	r2, [r3, #29]
    e462:	add.w	r2, r9, #30
    e466:	add.w	sl, r2, r5
    e46a:	strh.w	r5, [r3, #27]
    e46e:	strh.w	r8, [r3, #25]
    e472:	mov	r3, r5
    e474:	bl	1bbd0 <write_extent_buffer@@Base>
    e478:	vmov	r1, s16
    e47c:	mov	r3, r8
    e47e:	mov	r2, sl
    e480:	ldr	r0, [sp, #20]
    e482:	bl	1bbd0 <write_extent_buffer@@Base>
    e486:	ldr	r0, [r6, #0]
    e488:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
    e48c:	mov	r0, r6
    e48e:	bl	1c71e <btrfs_free_path@@Base>
    e492:	mov	r0, r4
    e494:	ldr	r2, [pc, #64]	; (e4d8 <btrfs_insert_xattr_item@@Base+0x170>)
    e496:	ldr	r3, [pc, #40]	; (e4c0 <btrfs_insert_xattr_item@@Base+0x158>)
    e498:	add	r2, pc
    e49a:	ldr	r3, [r2, r3]
    e49c:	ldr	r2, [r3, #0]
    e49e:	ldr	r3, [sp, #68]	; 0x44
    e4a0:	eors	r2, r3
    e4a2:	beq.n	e4ae <btrfs_insert_xattr_item@@Base+0x146>
    e4a4:	blx	8c90 <__stack_chk_fail@plt>
    e4a8:	mvn.w	r0, #11
    e4ac:	b.n	e494 <btrfs_insert_xattr_item@@Base+0x12c>
    e4ae:	add	sp, #76	; 0x4c
    e4b0:	vpop	{d8}
    e4b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e4b8:	ldmia	r1, {r1, r3, r4, r7}
    e4ba:	movs	r5, r0
    e4bc:	ldmia	r1!, {r3, r7}
    e4be:	movs	r5, r0
    e4c0:	lsls	r0, r1, #10
    e4c2:	movs	r0, r0
    e4c4:	lsls	r4, r3, #10
    e4c6:	movs	r0, r0
    e4c8:	vhadd.u32	d16, d12, d2
    e4cc:	asrs	r3, r2, #6
    e4ce:	movs	r3, r0
    e4d0:	asrs	r6, r3, #6
    e4d2:	movs	r3, r0
    e4d4:	asrs	r6, r2, #4
    e4d6:	movs	r3, r0
    e4d8:	ldmia	r0!, {r7}
    e4da:	movs	r5, r0

0000e4dc <btrfs_insert_dir_item@@Base>:
    e4dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e4e0:	sub	sp, #92	; 0x5c
    e4e2:	mov	r5, r3
    e4e4:	mov	r8, r2
    e4e6:	ldr	r3, [sp, #144]	; 0x90
    e4e8:	mov	sl, r0
    e4ea:	ldr	r2, [pc, #404]	; (e680 <btrfs_insert_dir_item@@Base+0x1a4>)
    e4ec:	mov	r9, r1
    e4ee:	mvn.w	r0, #1
    e4f2:	mov	r1, r8
    e4f4:	str	r3, [sp, #24]
    e4f6:	add	r2, pc
    e4f8:	ldr	r3, [sp, #148]	; 0x94
    e4fa:	movs	r4, #0
    e4fc:	ldr	r6, [sp, #136]	; 0x88
    e4fe:	ldrb.w	fp, [sp, #140]	; 0x8c
    e502:	str	r3, [sp, #28]
    e504:	ldr	r3, [pc, #380]	; (e684 <btrfs_insert_dir_item@@Base+0x1a8>)
    e506:	ldr	r3, [r2, r3]
    e508:	mov	r2, r5
    e50a:	ldr	r3, [r3, #0]
    e50c:	str	r3, [sp, #84]	; 0x54
    e50e:	mov.w	r3, #0
    e512:	ldr	r3, [sp, #128]	; 0x80
    e514:	str	r3, [sp, #44]	; 0x2c
    e516:	ldr	r3, [sp, #132]	; 0x84
    e518:	str	r3, [sp, #48]	; 0x30
    e51a:	movs	r3, #84	; 0x54
    e51c:	strb.w	r3, [sp, #52]	; 0x34
    e520:	bl	1bc9a <crc32c_le@@Base>
    e524:	str.w	r4, [sp, #57]	; 0x39
    e528:	str.w	r0, [sp, #53]	; 0x35
    e52c:	bl	1c6f0 <btrfs_alloc_path@@Base>
    e530:	mov	r7, r0
    e532:	cmp	r0, #0
    e534:	beq.w	e672 <btrfs_insert_dir_item@@Base+0x196>
    e538:	add.w	r3, r5, #30
    e53c:	mov	r2, r0
    e53e:	str	r3, [sp, #20]
    e540:	mov	r1, r9
    e542:	str	r3, [sp, #0]
    e544:	mov	r0, sl
    e546:	add	r3, sp, #44	; 0x2c
    e548:	strd	r8, r5, [sp, #4]
    e54c:	bl	e1fc <btrfs_match_dir_item_name@@Base+0xea>
    e550:	cmn.w	r0, #4096	; 0x1000
    e554:	mov	r2, r0
    e556:	bls.n	e580 <btrfs_insert_dir_item@@Base+0xa4>
    e558:	cmn.w	r0, #17
    e55c:	beq.n	e5d2 <btrfs_insert_dir_item@@Base+0xf6>
    e55e:	mov	r5, r0
    e560:	mov	r0, r7
    e562:	cmp	r5, #0
    e564:	it	ne
    e566:	movne	r4, r5
    e568:	bl	1c71e <btrfs_free_path@@Base>
    e56c:	ldr	r2, [pc, #280]	; (e688 <btrfs_insert_dir_item@@Base+0x1ac>)
    e56e:	ldr	r3, [pc, #276]	; (e684 <btrfs_insert_dir_item@@Base+0x1a8>)
    e570:	add	r2, pc
    e572:	ldr	r3, [r2, r3]
    e574:	ldr	r2, [r3, #0]
    e576:	ldr	r3, [sp, #84]	; 0x54
    e578:	eors	r2, r3
    e57a:	beq.n	e678 <btrfs_insert_dir_item@@Base+0x19c>
    e57c:	blx	8c90 <__stack_chk_fail@plt>
    e580:	ldr.w	r3, [r6, #13]
    e584:	ldr.w	r1, [r6, #9]
    e588:	ldr	r0, [r7, #0]
    e58a:	str.w	r3, [sp, #77]	; 0x4d
    e58e:	ldrb	r3, [r6, #8]
    e590:	str.w	r1, [sp, #73]	; 0x49
    e594:	ldr	r1, [r6, #0]
    e596:	strb.w	r3, [sp, #72]	; 0x48
    e59a:	ldr	r3, [r6, #4]
    e59c:	str	r2, [sp, #36]	; 0x24
    e59e:	str	r0, [sp, #32]
    e5a0:	strd	r1, r3, [sp, #64]	; 0x40
    e5a4:	add	r1, sp, #64	; 0x40
    e5a6:	movs	r3, #17
    e5a8:	bl	1bbd0 <write_extent_buffer@@Base>
    e5ac:	ldr	r0, [sp, #32]
    e5ae:	ldr	r2, [sp, #36]	; 0x24
    e5b0:	mov	r1, r8
    e5b2:	add.w	r3, r0, #96	; 0x60
    e5b6:	add	r3, r2
    e5b8:	adds	r2, #30
    e5ba:	strb.w	fp, [r3, #29]
    e5be:	strb	r4, [r3, #25]
    e5c0:	strb	r4, [r3, #26]
    e5c2:	strh.w	r5, [r3, #27]
    e5c6:	mov	r3, r5
    e5c8:	bl	1bbd0 <write_extent_buffer@@Base>
    e5cc:	ldr	r0, [sp, #32]
    e5ce:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
    e5d2:	ldr.w	r3, [r9, #464]	; 0x1d0
    e5d6:	ldr	r3, [r3, #28]
    e5d8:	cmp	r3, r9
    e5da:	beq.n	e66c <btrfs_insert_dir_item@@Base+0x190>
    e5dc:	mov	r0, r7
    e5de:	bl	1c6f8 <btrfs_release_path@@Base>
    e5e2:	movs	r3, #96	; 0x60
    e5e4:	strb.w	r3, [sp, #52]	; 0x34
    e5e8:	mov	r1, r9
    e5ea:	ldr	r3, [sp, #24]
    e5ec:	mov	r2, r7
    e5ee:	mov	r0, sl
    e5f0:	strd	r8, r5, [sp, #4]
    e5f4:	str.w	r3, [sp, #53]	; 0x35
    e5f8:	ldr	r3, [sp, #28]
    e5fa:	str.w	r3, [sp, #57]	; 0x39
    e5fe:	ldr	r3, [sp, #20]
    e600:	str	r3, [sp, #0]
    e602:	add	r3, sp, #44	; 0x2c
    e604:	bl	e1fc <btrfs_match_dir_item_name@@Base+0xea>
    e608:	cmn.w	r0, #4096	; 0x1000
    e60c:	mov	r9, r0
    e60e:	bls.n	e616 <btrfs_insert_dir_item@@Base+0x13a>
    e610:	mov	r4, r0
    e612:	movs	r5, #0
    e614:	b.n	e560 <btrfs_insert_dir_item@@Base+0x84>
    e616:	ldr.w	r3, [r6, #13]
    e61a:	add	r1, sp, #64	; 0x40
    e61c:	ldr	r0, [r7, #0]
    e61e:	movs	r4, #0
    e620:	ldr.w	r2, [r6, #9]
    e624:	str.w	r3, [sp, #77]	; 0x4d
    e628:	ldrb	r3, [r6, #8]
    e62a:	str.w	r2, [sp, #73]	; 0x49
    e62e:	ldr	r2, [r6, #0]
    e630:	strb.w	r3, [sp, #72]	; 0x48
    e634:	ldr	r3, [r6, #4]
    e636:	str	r0, [sp, #20]
    e638:	strd	r2, r3, [sp, #64]	; 0x40
    e63c:	mov	r2, r9
    e63e:	movs	r3, #17
    e640:	bl	1bbd0 <write_extent_buffer@@Base>
    e644:	ldr	r0, [sp, #20]
    e646:	add.w	r2, r9, #30
    e64a:	mov	r1, r8
    e64c:	add.w	r3, r0, #96	; 0x60
    e650:	add	r3, r9
    e652:	strb.w	fp, [r3, #29]
    e656:	strb	r4, [r3, #25]
    e658:	strb	r4, [r3, #26]
    e65a:	strh.w	r5, [r3, #27]
    e65e:	mov	r3, r5
    e660:	bl	1bbd0 <write_extent_buffer@@Base>
    e664:	ldr	r0, [sp, #20]
    e666:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
    e66a:	b.n	e612 <btrfs_insert_dir_item@@Base+0x136>
    e66c:	movs	r4, #0
    e66e:	mov	r5, r4
    e670:	b.n	e560 <btrfs_insert_dir_item@@Base+0x84>
    e672:	mvn.w	r4, #11
    e676:	b.n	e56c <btrfs_insert_dir_item@@Base+0x90>
    e678:	mov	r0, r4
    e67a:	add	sp, #92	; 0x5c
    e67c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e680:	ldmia	r0!, {r1, r5}
    e682:	movs	r5, r0
    e684:	lsls	r0, r1, #10
    e686:	movs	r0, r0
    e688:	stmia	r7!, {r3, r5, r7}
    e68a:	movs	r5, r0

0000e68c <btrfs_lookup_dir_item@@Base>:
    e68c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e690:	mov	r4, r2
    e692:	sub	sp, #60	; 0x3c
    e694:	ldr	r2, [pc, #208]	; (e768 <btrfs_lookup_dir_item@@Base+0xdc>)
    e696:	ldr	r3, [pc, #212]	; (e76c <btrfs_lookup_dir_item@@Base+0xe0>)
    e698:	mov	fp, r0
    e69a:	ldrd	r8, r9, [sp, #104]	; 0x68
    e69e:	add	r2, pc
    e6a0:	ldrd	r6, r7, [sp, #96]	; 0x60
    e6a4:	mov	r5, r1
    e6a6:	ldr	r3, [r2, r3]
    e6a8:	mvn.w	r0, #1
    e6ac:	mov	r1, r8
    e6ae:	mov	r2, r9
    e6b0:	ldr	r3, [r3, #0]
    e6b2:	str	r3, [sp, #52]	; 0x34
    e6b4:	mov.w	r3, #0
    e6b8:	ldr.w	sl, [sp, #112]	; 0x70
    e6bc:	movs	r3, #84	; 0x54
    e6be:	strd	r6, r7, [sp, #12]
    e6c2:	strb.w	r3, [sp, #20]
    e6c6:	bl	1bc9a <crc32c_le@@Base>
    e6ca:	movs	r3, #0
    e6cc:	str.w	r3, [sp, #25]
    e6d0:	subs.w	r3, sl, r3
    e6d4:	add	r2, sp, #12
    e6d6:	mov	r1, r5
    e6d8:	it	ne
    e6da:	movne	r3, #1
    e6dc:	str	r3, [sp, #4]
    e6de:	mov.w	r3, sl, asr #31
    e6e2:	str	r3, [sp, #0]
    e6e4:	mov	r3, r4
    e6e6:	str.w	r0, [sp, #21]
    e6ea:	mov	r0, fp
    e6ec:	bl	1eadc <btrfs_search_slot@@Base>
    e6f0:	cmp	r0, #0
    e6f2:	blt.n	e6fc <btrfs_lookup_dir_item@@Base+0x70>
    e6f4:	beq.n	e714 <btrfs_lookup_dir_item@@Base+0x88>
    e6f6:	ldr	r3, [r4, #32]
    e6f8:	cbnz	r3, e710 <btrfs_lookup_dir_item@@Base+0x84>
    e6fa:	movs	r0, #0
    e6fc:	ldr	r2, [pc, #112]	; (e770 <btrfs_lookup_dir_item@@Base+0xe4>)
    e6fe:	ldr	r3, [pc, #108]	; (e76c <btrfs_lookup_dir_item@@Base+0xe0>)
    e700:	add	r2, pc
    e702:	ldr	r3, [r2, r3]
    e704:	ldr	r2, [r3, #0]
    e706:	ldr	r3, [sp, #52]	; 0x34
    e708:	eors	r2, r3
    e70a:	beq.n	e762 <btrfs_lookup_dir_item@@Base+0xd6>
    e70c:	blx	8c90 <__stack_chk_fail@plt>
    e710:	subs	r3, #1
    e712:	str	r3, [r4, #32]
    e714:	ldr	r3, [r4, #32]
    e716:	movs	r2, #25
    e718:	ldr	r0, [r4, #0]
    e71a:	add	r1, sp, #32
    e71c:	muls	r2, r3
    e71e:	movs	r3, #17
    e720:	adds	r2, #101	; 0x65
    e722:	bl	1bbba <read_extent_buffer@@Base>
    e726:	ldrd	r2, r3, [sp, #32]
    e72a:	ldr.w	r0, [sp, #41]	; 0x29
    e72e:	cmp	r7, r3
    e730:	ldr.w	r1, [sp, #45]	; 0x2d
    e734:	it	eq
    e736:	cmpeq	r6, r2
    e738:	ldrb.w	ip, [sp, #40]	; 0x28
    e73c:	bne.n	e6fa <btrfs_lookup_dir_item@@Base+0x6e>
    e73e:	cmp.w	ip, #84	; 0x54
    e742:	bne.n	e6fa <btrfs_lookup_dir_item@@Base+0x6e>
    e744:	ldr.w	r3, [sp, #25]
    e748:	ldr.w	r2, [sp, #21]
    e74c:	cmp	r3, r1
    e74e:	it	eq
    e750:	cmpeq	r2, r0
    e752:	bne.n	e6fa <btrfs_lookup_dir_item@@Base+0x6e>
    e754:	mov	r3, r9
    e756:	mov	r2, r8
    e758:	mov	r1, r4
    e75a:	mov	r0, r5
    e75c:	bl	e112 <btrfs_match_dir_item_name@@Base>
    e760:	b.n	e6fc <btrfs_lookup_dir_item@@Base+0x70>
    e762:	add	sp, #60	; 0x3c
    e764:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e768:	stmia	r6!, {r1, r3, r4, r5, r6}
    e76a:	movs	r5, r0
    e76c:	lsls	r0, r1, #10
    e76e:	movs	r0, r0
    e770:	stmia	r6!, {r3, r4}
    e772:	movs	r5, r0

0000e774 <btrfs_lookup_dir_index@@Base>:
    e774:	ldr.w	ip, [pc, #128]	; e7f8 <btrfs_lookup_dir_index@@Base+0x84>
    e778:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    e77c:	mov	r4, r2
    e77e:	ldr	r2, [pc, #124]	; (e7fc <btrfs_lookup_dir_index@@Base+0x88>)
    e780:	add	ip, pc
    e782:	sub	sp, #32
    e784:	mov	r5, r1
    e786:	ldr.w	r2, [ip, r2]
    e78a:	ldr	r3, [sp, #80]	; 0x50
    e78c:	ldr	r2, [r2, #0]
    e78e:	str	r2, [sp, #28]
    e790:	mov.w	r2, #0
    e794:	movs	r2, #96	; 0x60
    e796:	strb.w	r2, [sp, #16]
    e79a:	ldr	r2, [sp, #72]	; 0x48
    e79c:	ldrd	r8, r9, [sp, #56]	; 0x38
    e7a0:	ldr	r6, [sp, #64]	; 0x40
    e7a2:	str.w	r2, [sp, #17]
    e7a6:	ldr	r2, [sp, #76]	; 0x4c
    e7a8:	strd	r8, r9, [sp, #8]
    e7ac:	str.w	r2, [sp, #21]
    e7b0:	subs	r2, r3, #0
    e7b2:	mov.w	r3, r3, asr #31
    e7b6:	str	r3, [sp, #0]
    e7b8:	it	ne
    e7ba:	movne	r2, #1
    e7bc:	mov	r3, r4
    e7be:	str	r2, [sp, #4]
    e7c0:	add	r2, sp, #8
    e7c2:	bl	1eadc <btrfs_search_slot@@Base>
    e7c6:	cmp	r0, #0
    e7c8:	blt.n	e7d8 <btrfs_lookup_dir_index@@Base+0x64>
    e7ca:	bne.n	e7ec <btrfs_lookup_dir_index@@Base+0x78>
    e7cc:	ldr	r3, [sp, #68]	; 0x44
    e7ce:	mov	r2, r6
    e7d0:	mov	r1, r4
    e7d2:	mov	r0, r5
    e7d4:	bl	e112 <btrfs_match_dir_item_name@@Base>
    e7d8:	ldr	r2, [pc, #36]	; (e800 <btrfs_lookup_dir_index@@Base+0x8c>)
    e7da:	ldr	r3, [pc, #32]	; (e7fc <btrfs_lookup_dir_index@@Base+0x88>)
    e7dc:	add	r2, pc
    e7de:	ldr	r3, [r2, r3]
    e7e0:	ldr	r2, [r3, #0]
    e7e2:	ldr	r3, [sp, #28]
    e7e4:	eors	r2, r3
    e7e6:	beq.n	e7f2 <btrfs_lookup_dir_index@@Base+0x7e>
    e7e8:	blx	8c90 <__stack_chk_fail@plt>
    e7ec:	mvn.w	r0, #1
    e7f0:	b.n	e7d8 <btrfs_lookup_dir_index@@Base+0x64>
    e7f2:	add	sp, #32
    e7f4:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    e7f8:	stmia	r5!, {r3, r4, r7}
    e7fa:	movs	r5, r0
    e7fc:	lsls	r0, r1, #10
    e7fe:	movs	r0, r0
    e800:	stmia	r5!, {r2, r3, r4, r5}
    e802:	movs	r5, r0

0000e804 <btrfs_find_free_objectid@@Base>:
    e804:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e808:	mov	sl, r0
    e80a:	vpush	{d8}
    e80e:	mov	r5, r1
    e810:	ldr	r3, [pc, #444]	; (e9d0 <btrfs_find_free_objectid@@Base+0x1cc>)
    e812:	ldr	r2, [pc, #448]	; (e9d4 <btrfs_find_free_objectid@@Base+0x1d0>)
    e814:	add	r3, pc
    e816:	sub	sp, #140	; 0x8c
    e818:	add	r2, pc
    e81a:	str	r3, [sp, #20]
    e81c:	ldr	r3, [pc, #440]	; (e9d8 <btrfs_find_free_objectid@@Base+0x1d4>)
    e81e:	ldr.w	r8, [sp, #184]	; 0xb8
    e822:	ldr	r3, [r2, r3]
    e824:	ldr	r3, [r3, #0]
    e826:	str	r3, [sp, #132]	; 0x84
    e828:	mov.w	r3, #0
    e82c:	bl	1c6f0 <btrfs_alloc_path@@Base>
    e830:	mov	r4, r0
    e832:	cmp	r0, #0
    e834:	beq.w	e9ba <btrfs_find_free_objectid@@Base+0x1b6>
    e838:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    e83c:	mov.w	r9, #0
    e840:	strb.w	r9, [sp, #37]	; 0x25
    e844:	cmp	r7, #0
    e846:	strb.w	r9, [sp, #38]	; 0x26
    e84a:	it	eq
    e84c:	cmpeq.w	r6, #256	; 0x100
    e850:	strb.w	r9, [sp, #39]	; 0x27
    e854:	strb.w	r9, [sp, #40]	; 0x28
    e858:	itt	cc
    e85a:	movcc.w	r6, #256	; 0x100
    e85e:	movcc	r7, #0
    e860:	strb.w	r9, [sp, #41]	; 0x29
    e864:	strd	r6, r7, [sp, #28]
    e868:	strb.w	r9, [sp, #42]	; 0x2a
    e86c:	strb.w	r9, [sp, #43]	; 0x2b
    e870:	strb.w	r9, [sp, #44]	; 0x2c
    e874:	strb.w	r9, [sp, #36]	; 0x24
    e878:	bl	1c6e8 <btrfs_init_path@@Base>
    e87c:	mov	r3, r4
    e87e:	add	r2, sp, #28
    e880:	mov	r1, r5
    e882:	mov	r0, sl
    e884:	strd	r9, r9, [sp]
    e888:	bl	1eadc <btrfs_search_slot@@Base>
    e88c:	subs	r3, r0, #0
    e88e:	blt.w	e99c <btrfs_find_free_objectid@@Base+0x198>
    e892:	ldr	r3, [r4, #32]
    e894:	cmp	r3, r9
    e896:	mov.w	r9, #0
    e89a:	itt	gt
    e89c:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    e8a0:	strgt	r3, [r4, #32]
    e8a2:	add	r3, sp, #48	; 0x30
    e8a4:	mov	fp, r9
    e8a6:	mov	sl, r9
    e8a8:	vmov	s16, r3
    e8ac:	ldr	r0, [r4, #0]
    e8ae:	ldr	r2, [r4, #32]
    e8b0:	ldr.w	r3, [r0, #192]	; 0xc0
    e8b4:	cmp	r2, r3
    e8b6:	bcc.n	e948 <btrfs_find_free_objectid@@Base+0x144>
    e8b8:	movs	r3, #0
    e8ba:	mov	r1, r4
    e8bc:	strb.w	r3, [r4, #65]	; 0x41
    e8c0:	ldr.w	r0, [r5, #464]	; 0x1d0
    e8c4:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
    e8c8:	subs	r3, r0, #0
    e8ca:	beq.n	e8ac <btrfs_find_free_objectid@@Base+0xa8>
    e8cc:	blt.n	e99c <btrfs_find_free_objectid@@Base+0x198>
    e8ce:	cmp.w	r9, #0
    e8d2:	bne.n	e932 <btrfs_find_free_objectid@@Base+0x12e>
    e8d4:	strd	r6, r7, [r8]
    e8d8:	ldrd	r2, r3, [r8]
    e8dc:	mov	r0, r4
    e8de:	strd	r2, r3, [r5, #504]	; 0x1f8
    e8e2:	bl	1c71e <btrfs_free_path@@Base>
    e8e6:	ldrd	r2, r3, [r8]
    e8ea:	cmp	r3, r7
    e8ec:	it	eq
    e8ee:	cmpeq	r2, r6
    e8f0:	bcs.n	e9c0 <btrfs_find_free_objectid@@Base+0x1bc>
    e8f2:	ldr	r2, [sp, #20]
    e8f4:	add	r4, sp, #68	; 0x44
    e8f6:	ldr	r3, [pc, #228]	; (e9dc <btrfs_find_free_objectid@@Base+0x1d8>)
    e8f8:	movs	r1, #1
    e8fa:	ldr	r0, [r2, r3]
    e8fc:	ldr	r3, [pc, #224]	; (e9e0 <btrfs_find_free_objectid@@Base+0x1dc>)
    e8fe:	ldr	r2, [pc, #228]	; (e9e4 <btrfs_find_free_objectid@@Base+0x1e0>)
    e900:	add	r3, pc
    e902:	str	r3, [sp, #8]
    e904:	ldr	r3, [pc, #224]	; (e9e8 <btrfs_find_free_objectid@@Base+0x1e4>)
    e906:	add	r2, pc
    e908:	str	r1, [sp, #12]
    e90a:	add	r3, pc
    e90c:	str	r3, [sp, #4]
    e90e:	movs	r3, #98	; 0x62
    e910:	str	r3, [sp, #0]
    e912:	ldr	r3, [pc, #216]	; (e9ec <btrfs_find_free_objectid@@Base+0x1e8>)
    e914:	ldr	r0, [r0, #0]
    e916:	add	r3, pc
    e918:	blx	9040 <__fprintf_chk@plt+0x4>
    e91c:	movs	r1, #16
    e91e:	mov	r0, r4
    e920:	blx	8e98 <backtrace@plt>
    e924:	movs	r2, #2
    e926:	mov	r1, r0
    e928:	mov	r0, r4
    e92a:	blx	9214 <backtrace_symbols_fd@plt>
    e92e:	blx	91c0 <abort@plt>
    e932:	cmp	sl, r7
    e934:	mov	r2, fp
    e936:	it	eq
    e938:	cmpeq	fp, r6
    e93a:	mov	r3, sl
    e93c:	itt	cc
    e93e:	movcc	r2, r6
    e940:	movcc	r3, r7
    e942:	strd	r2, r3, [r8]
    e946:	b.n	e8d8 <btrfs_find_free_objectid@@Base+0xd4>
    e948:	movs	r3, #25
    e94a:	vmov	r1, s16
    e94e:	muls	r2, r3
    e950:	movs	r3, #17
    e952:	adds	r2, #101	; 0x65
    e954:	bl	1bbba <read_extent_buffer@@Base>
    e958:	ldrd	r2, r3, [sp, #48]	; 0x30
    e95c:	cmp	r3, r7
    e95e:	it	eq
    e960:	cmpeq	r2, r6
    e962:	bcc.n	e988 <btrfs_find_free_objectid@@Base+0x184>
    e964:	cmp.w	r9, #0
    e968:	beq.n	e988 <btrfs_find_free_objectid@@Base+0x184>
    e96a:	cmp	sl, r7
    e96c:	mov	r0, fp
    e96e:	it	eq
    e970:	cmpeq	fp, r6
    e972:	mov	r1, sl
    e974:	itt	cc
    e976:	movcc	r0, r6
    e978:	movcc	r1, r7
    e97a:	cmp	r1, r3
    e97c:	it	eq
    e97e:	cmpeq	r0, r2
    e980:	bcs.n	e988 <btrfs_find_free_objectid@@Base+0x184>
    e982:	strd	r0, r1, [r8]
    e986:	b.n	e8d8 <btrfs_find_free_objectid@@Base+0xd4>
    e988:	adds.w	fp, r2, #1
    e98c:	mov.w	r9, #1
    e990:	adc.w	sl, r3, #0
    e994:	ldr	r3, [r4, #32]
    e996:	adds	r3, #1
    e998:	str	r3, [r4, #32]
    e99a:	b.n	e8ac <btrfs_find_free_objectid@@Base+0xa8>
    e99c:	mov	r0, r4
    e99e:	str	r3, [sp, #20]
    e9a0:	bl	1c71e <btrfs_free_path@@Base>
    e9a4:	ldr	r3, [sp, #20]
    e9a6:	ldr	r1, [pc, #72]	; (e9f0 <btrfs_find_free_objectid@@Base+0x1ec>)
    e9a8:	ldr	r2, [pc, #44]	; (e9d8 <btrfs_find_free_objectid@@Base+0x1d4>)
    e9aa:	add	r1, pc
    e9ac:	ldr	r2, [r1, r2]
    e9ae:	ldr	r1, [r2, #0]
    e9b0:	ldr	r2, [sp, #132]	; 0x84
    e9b2:	eors	r1, r2
    e9b4:	beq.n	e9c4 <btrfs_find_free_objectid@@Base+0x1c0>
    e9b6:	blx	8c90 <__stack_chk_fail@plt>
    e9ba:	mvn.w	r3, #11
    e9be:	b.n	e9a6 <btrfs_find_free_objectid@@Base+0x1a2>
    e9c0:	movs	r3, #0
    e9c2:	b.n	e9a6 <btrfs_find_free_objectid@@Base+0x1a2>
    e9c4:	mov	r0, r3
    e9c6:	add	sp, #140	; 0x8c
    e9c8:	vpop	{d8}
    e9cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e9d0:	stmia	r5!, {r2}
    e9d2:	movs	r5, r0
    e9d4:	stmia	r5!, {}
    e9d6:	movs	r5, r0
    e9d8:	lsls	r0, r1, #10
    e9da:	movs	r0, r0
    e9dc:	lsls	r4, r3, #10
    e9de:	movs	r0, r0
    e9e0:	lsrs	r5, r2, #19
    e9e2:	movs	r3, r0
    e9e4:			; <UNDEFINED> instruction: 0xfa580002
    e9e8:	lsrs	r4, r4, #19
    e9ea:	movs	r3, r0
    e9ec:	lsrs	r3, r6, #18
    e9ee:	movs	r3, r0
    e9f0:	stmia	r3!, {r1, r2, r3, r5, r6}
    e9f2:	movs	r5, r0
    e9f4:	push	{r4, r5, lr}
    e9f6:	ldrd	r4, r5, [r0, #40]	; 0x28
    e9fa:	ldrd	r0, r1, [r1, #40]	; 0x28
    e9fe:	cmp	r1, r5
    ea00:	it	eq
    ea02:	cmpeq	r0, r4
    ea04:	bcc.n	ea1a <btrfs_find_free_objectid@@Base+0x216>
    ea06:	cmp	r5, r1
    ea08:	it	eq
    ea0a:	cmpeq	r4, r0
    ea0c:	ite	cc
    ea0e:	movcc.w	r0, #4294967295	; 0xffffffff
    ea12:	movcs	r0, #0
    ea14:	cbz	r2, ea18 <btrfs_find_free_objectid@@Base+0x214>
    ea16:	negs	r0, r0
    ea18:	pop	{r4, r5, pc}
    ea1a:	movs	r0, #1
    ea1c:	b.n	ea14 <btrfs_find_free_objectid@@Base+0x210>
    ea1e:	push	{r4, r5, lr}
    ea20:	ldrd	r4, r5, [r0, #56]	; 0x38
    ea24:	ldrd	r0, r1, [r1, #56]	; 0x38
    ea28:	cmp	r1, r5
    ea2a:	it	eq
    ea2c:	cmpeq	r0, r4
    ea2e:	bcc.n	ea44 <btrfs_find_free_objectid@@Base+0x240>
    ea30:	cmp	r5, r1
    ea32:	it	eq
    ea34:	cmpeq	r4, r0
    ea36:	ite	cc
    ea38:	movcc.w	r0, #4294967295	; 0xffffffff
    ea3c:	movcs	r0, #0
    ea3e:	cbz	r2, ea42 <btrfs_find_free_objectid@@Base+0x23e>
    ea40:	negs	r0, r0
    ea42:	pop	{r4, r5, pc}
    ea44:	movs	r0, #1
    ea46:	b.n	ea3e <btrfs_find_free_objectid@@Base+0x23a>
    ea48:	push	{r4, r5, lr}
    ea4a:	ldrd	r4, r5, [r0, #72]	; 0x48
    ea4e:	ldrd	r0, r1, [r1, #72]	; 0x48
    ea52:	cmp	r1, r5
    ea54:	it	eq
    ea56:	cmpeq	r0, r4
    ea58:	bcc.n	ea6e <btrfs_find_free_objectid@@Base+0x26a>
    ea5a:	cmp	r5, r1
    ea5c:	it	eq
    ea5e:	cmpeq	r4, r0
    ea60:	ite	cc
    ea62:	movcc.w	r0, #4294967295	; 0xffffffff
    ea66:	movcs	r0, #0
    ea68:	cbz	r2, ea6c <btrfs_find_free_objectid@@Base+0x268>
    ea6a:	negs	r0, r0
    ea6c:	pop	{r4, r5, pc}
    ea6e:	movs	r0, #1
    ea70:	b.n	ea68 <btrfs_find_free_objectid@@Base+0x264>
    ea72:	push	{r4, r5, lr}
    ea74:	ldrd	r4, r5, [r0, #96]	; 0x60
    ea78:	ldrd	r0, r1, [r1, #96]	; 0x60
    ea7c:	cmp	r1, r5
    ea7e:	it	eq
    ea80:	cmpeq	r0, r4
    ea82:	bcc.n	ea98 <btrfs_find_free_objectid@@Base+0x294>
    ea84:	cmp	r5, r1
    ea86:	it	eq
    ea88:	cmpeq	r4, r0
    ea8a:	ite	cc
    ea8c:	movcc.w	r0, #4294967295	; 0xffffffff
    ea90:	movcs	r0, #0
    ea92:	cbz	r2, ea96 <btrfs_find_free_objectid@@Base+0x292>
    ea94:	negs	r0, r0
    ea96:	pop	{r4, r5, pc}
    ea98:	movs	r0, #1
    ea9a:	b.n	ea92 <btrfs_find_free_objectid@@Base+0x28e>
    ea9c:	push	{r4, r5, lr}
    ea9e:	ldrd	r4, r5, [r0, #104]	; 0x68
    eaa2:	ldrd	r0, r1, [r1, #104]	; 0x68
    eaa6:	cmp	r1, r5
    eaa8:	it	eq
    eaaa:	cmpeq	r0, r4
    eaac:	bcc.n	eac2 <btrfs_find_free_objectid@@Base+0x2be>
    eaae:	cmp	r5, r1
    eab0:	it	eq
    eab2:	cmpeq	r4, r0
    eab4:	ite	cc
    eab6:	movcc.w	r0, #4294967295	; 0xffffffff
    eaba:	movcs	r0, #0
    eabc:	cbz	r2, eac0 <btrfs_find_free_objectid@@Base+0x2bc>
    eabe:	negs	r0, r0
    eac0:	pop	{r4, r5, pc}
    eac2:	movs	r0, #1
    eac4:	b.n	eabc <btrfs_find_free_objectid@@Base+0x2b8>
    eac6:	push	{r4, r5, lr}
    eac8:	mov	r4, r2
    eaca:	mov	r5, r3
    eacc:	orrs.w	r3, r4, r5
    ead0:	beq.n	eae6 <btrfs_find_free_objectid@@Base+0x2e2>
    ead2:	ldrd	r4, r5, [r2, #40]	; 0x28
    ead6:	ldrd	r2, r3, [r0, #40]	; 0x28
    eada:	cmp	r5, r3
    eadc:	itte	eq
    eade:	cmpeq	r4, r2
    eae0:	moveq	r0, #1
    eae2:	movne	r0, #0
    eae4:	pop	{r4, r5, pc}
    eae6:	movs	r0, #0
    eae8:	b.n	eae4 <btrfs_find_free_objectid@@Base+0x2e0>
    eaea:	push	{r3, r4, r5, lr}
    eaec:	mov	r2, r0
    eaee:	mov	r3, r1
    eaf0:	mov	r5, r0
    eaf2:	movs	r1, #0
    eaf4:	ldr	r4, [r2, #0]
    eaf6:	cbnz	r4, eb0e <btrfs_find_free_objectid@@Base+0x30a>
    eaf8:	add.w	r0, r3, #24
    eafc:	strd	r1, r4, [r3, #24]
    eb00:	str	r4, [r3, #32]
    eb02:	mov	r1, r5
    eb04:	str	r0, [r2, #0]
    eb06:	bl	183ca <rb_insert_color@@Base>
    eb0a:	mov	r0, r4
    eb0c:	pop	{r3, r4, r5, pc}
    eb0e:	sub.w	r1, r4, #24
    eb12:	movs	r2, #0
    eb14:	mov	r0, r3
    eb16:	bl	e9f4 <btrfs_find_free_objectid@@Base+0x1f0>
    eb1a:	cmp	r0, #0
    eb1c:	bge.n	eb26 <btrfs_find_free_objectid@@Base+0x322>
    eb1e:	add.w	r2, r4, #8
    eb22:	mov	r1, r4
    eb24:	b.n	eaf4 <btrfs_find_free_objectid@@Base+0x2f0>
    eb26:	beq.n	eb2c <btrfs_find_free_objectid@@Base+0x328>
    eb28:	adds	r2, r4, #4
    eb2a:	b.n	eb22 <btrfs_find_free_objectid@@Base+0x31e>
    eb2c:	mvn.w	r0, #16
    eb30:	b.n	eb0c <btrfs_find_free_objectid@@Base+0x308>
    eb32:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    eb36:	mov	r5, r0
    eb38:	mov	r0, r2
    eb3a:	ldr	r2, [pc, #144]	; (ebcc <btrfs_find_free_objectid@@Base+0x3c8>)
    eb3c:	mov	r1, r3
    eb3e:	ldr	r3, [pc, #144]	; (ebd0 <btrfs_find_free_objectid@@Base+0x3cc>)
    eb40:	add	r2, pc
    eb42:	ldr	r3, [r2, r3]
    eb44:	ldr	r3, [r3, #0]
    eb46:	str	r3, [sp, #4]
    eb48:	mov.w	r3, #0
    eb4c:	orrs.w	r3, r0, r1
    eb50:	bne.n	eb68 <btrfs_find_free_objectid@@Base+0x364>
    eb52:	movs	r0, #0
    eb54:	ldr	r2, [pc, #124]	; (ebd4 <btrfs_find_free_objectid@@Base+0x3d0>)
    eb56:	ldr	r3, [pc, #120]	; (ebd0 <btrfs_find_free_objectid@@Base+0x3cc>)
    eb58:	add	r2, pc
    eb5a:	ldr	r3, [r2, r3]
    eb5c:	ldr	r2, [r3, #0]
    eb5e:	ldr	r3, [sp, #4]
    eb60:	eors	r2, r3
    eb62:	beq.n	ebc6 <btrfs_find_free_objectid@@Base+0x3c2>
    eb64:	blx	8c90 <__stack_chk_fail@plt>
    eb68:	ldrd	r2, r3, [r5, #40]	; 0x28
    eb6c:	ldrd	r6, r7, [r0, #40]	; 0x28
    eb70:	cmp	r3, r7
    eb72:	it	eq
    eb74:	cmpeq	r2, r6
    eb76:	bne.n	eb7c <btrfs_find_free_objectid@@Base+0x378>
    eb78:	movs	r0, #1
    eb7a:	b.n	eb54 <btrfs_find_free_objectid@@Base+0x350>
    eb7c:	mov	r8, sp
    eb7e:	mov	r1, r0
    eb80:	mov	r0, r8
    eb82:	movs	r3, #0
    eb84:	str	r3, [sp, #0]
    eb86:	bl	eaea <btrfs_find_free_objectid@@Base+0x2e6>
    eb8a:	mov	r0, r8
    eb8c:	bl	186e6 <rb_first@@Base>
    eb90:	mov	r4, r0
    eb92:	cmp	r0, #0
    eb94:	beq.n	eb52 <btrfs_find_free_objectid@@Base+0x34e>
    eb96:	ldr	r6, [r4, #104]	; 0x68
    eb98:	add.w	sl, r4, #104	; 0x68
    eb9c:	cmp	sl, r6
    eb9e:	bne.n	ebaa <btrfs_find_free_objectid@@Base+0x3a6>
    eba0:	mov	r1, r8
    eba2:	mov	r0, r4
    eba4:	bl	18470 <rb_erase@@Base>
    eba8:	b.n	eb8a <btrfs_find_free_objectid@@Base+0x386>
    ebaa:	ldr	r1, [r6, #16]
    ebac:	ldrd	r2, r3, [r5, #40]	; 0x28
    ebb0:	ldrd	fp, ip, [r1, #40]	; 0x28
    ebb4:	cmp	ip, r3
    ebb6:	it	eq
    ebb8:	cmpeq	fp, r2
    ebba:	beq.n	eb78 <btrfs_find_free_objectid@@Base+0x374>
    ebbc:	mov	r0, r8
    ebbe:	bl	eaea <btrfs_find_free_objectid@@Base+0x2e6>
    ebc2:	ldr	r6, [r6, #0]
    ebc4:	b.n	eb9c <btrfs_find_free_objectid@@Base+0x398>
    ebc6:	add	sp, #8
    ebc8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    ebcc:	stmia	r1!, {r3, r4, r6, r7}
    ebce:	movs	r5, r0
    ebd0:	lsls	r0, r1, #10
    ebd2:	movs	r0, r0
    ebd4:	stmia	r1!, {r6, r7}
    ebd6:	movs	r5, r0
    ebd8:	ldr	r3, [pc, #28]	; (ebf8 <btrfs_find_free_objectid@@Base+0x3f4>)
    ebda:	movs	r2, #20
    ebdc:	push	{r4, lr}
    ebde:	add	r3, pc
    ebe0:	mla	r0, r2, r0, r3
    ebe4:	ldr	r4, [r0, #16]
    ebe6:	subs	r4, r4, r1
    ebe8:	subs	r4, #1
    ebea:	bcs.n	ebee <btrfs_find_free_objectid@@Base+0x3ea>
    ebec:	pop	{r4, pc}
    ebee:	movs	r0, #32
    ebf0:	blx	8fa8 <putchar@plt+0x4>
    ebf4:	b.n	ebe8 <btrfs_find_free_objectid@@Base+0x3e4>
    ebf6:	nop
    ebf8:	stmia	r4!, {r1, r2, r5}
    ebfa:	movs	r5, r0
    ebfc:	push	{r4, lr}
    ebfe:	mov	r4, r3
    ec00:	bl	34da0 <pretty_size_mode@@Base>
    ec04:	ldr	r1, [pc, #16]	; (ec18 <btrfs_find_free_objectid@@Base+0x414>)
    ec06:	mov	r2, r4
    ec08:	ldmia.w	sp!, {r4, lr}
    ec0c:	add	r1, pc
    ec0e:	mov	r3, r0
    ec10:	movs	r0, #1
    ec12:	b.w	9008 <__printf_chk@plt>
    ec16:	nop
    ec18:	lsrs	r3, r7, #7
    ec1a:	movs	r3, r0
    ec1c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec20:	mov	r9, r0
    ec22:	ldr	r4, [r0, #0]
    ec24:	mov	r7, r1
    ec26:	mov	r8, r2
    ec28:	cbz	r4, ec54 <btrfs_find_free_objectid@@Base+0x450>
    ec2a:	ldr	r2, [r4, #16]
    ec2c:	ldr	r5, [r4, #8]
    ec2e:	add	r5, r2
    ec30:	ldr	r2, [r4, #24]
    ec32:	add	r5, r2
    ec34:	adds	r0, r5, r7
    ec36:	movs	r1, #1
    ec38:	adds	r0, #9
    ec3a:	lsls	r0, r0, #3
    ec3c:	blx	8ab8 <calloc@plt+0x4>
    ec40:	mov	r6, r0
    ec42:	cbnz	r0, ec58 <btrfs_find_free_objectid@@Base+0x454>
    ec44:	ldr	r0, [pc, #104]	; (ecb0 <btrfs_find_free_objectid@@Base+0x4ac>)
    ec46:	add	r0, pc
    ec48:	bl	1bd1c <__btrfs_error@@Base>
    ec4c:	mvn.w	r0, #11
    ec50:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ec54:	mov	r5, r4
    ec56:	b.n	ec34 <btrfs_find_free_objectid@@Base+0x430>
    ec58:	cbz	r4, eca0 <btrfs_find_free_objectid@@Base+0x49c>
    ec5a:	ldrd	r2, r3, [r4, #8]
    ec5e:	add.w	fp, r4, #72	; 0x48
    ec62:	mov.w	sl, r8, lsl #3
    ec66:	mov	r1, fp
    ec68:	strd	r2, r3, [r0, #8]
    ec6c:	ldrd	r2, r3, [r4, #16]
    ec70:	strd	r2, r3, [r0, #16]
    ec74:	ldrd	r2, r3, [r4, #24]
    ec78:	strd	r2, r3, [r0, #24]
    ec7c:	add.w	r3, r0, #72	; 0x48
    ec80:	mov	r2, sl
    ec82:	mov	r0, r3
    ec84:	blx	8bdc <memcpy@plt+0x4>
    ec88:	sub.w	r2, r5, r8
    ec8c:	add.w	r1, fp, sl
    ec90:	lsls	r2, r2, #3
    ec92:	mov	r3, r0
    ec94:	add.w	r0, r8, r7
    ec98:	add.w	r0, r3, r0, lsl #3
    ec9c:	blx	8bdc <memcpy@plt+0x4>
    eca0:	mov	r0, r4
    eca2:	blx	8b84 <free@plt+0x4>
    eca6:	movs	r0, #0
    eca8:	str.w	r6, [r9]
    ecac:	b.n	ec50 <btrfs_find_free_objectid@@Base+0x44c>
    ecae:	nop
    ecb0:	lsrs	r5, r0, #7
    ecb2:	movs	r3, r0
    ecb4:	push	{r4, lr}
    ecb6:	sub	sp, #152	; 0x98
    ecb8:	ldr	r4, [pc, #72]	; (ed04 <btrfs_find_free_objectid@@Base+0x500>)
    ecba:	ldr	r1, [pc, #76]	; (ed08 <btrfs_find_free_objectid@@Base+0x504>)
    ecbc:	add	r4, pc
    ecbe:	ldr	r1, [r4, r1]
    ecc0:	mov	r4, sp
    ecc2:	ldr	r1, [r1, #0]
    ecc4:	str	r1, [sp, #148]	; 0x94
    ecc6:	mov.w	r1, #0
    ecca:	strd	r2, r3, [sp, #40]	; 0x28
    ecce:	mov	r3, r0
    ecd0:	cbnz	r3, ece6 <btrfs_find_free_objectid@@Base+0x4e2>
    ecd2:	ldr	r1, [pc, #56]	; (ed0c <btrfs_find_free_objectid@@Base+0x508>)
    ecd4:	ldr	r2, [pc, #48]	; (ed08 <btrfs_find_free_objectid@@Base+0x504>)
    ecd6:	add	r1, pc
    ecd8:	ldr	r2, [r1, r2]
    ecda:	ldr	r1, [r2, #0]
    ecdc:	ldr	r2, [sp, #148]	; 0x94
    ecde:	eors	r1, r2
    ece0:	beq.n	ecfe <btrfs_find_free_objectid@@Base+0x4fa>
    ece2:	blx	8c90 <__stack_chk_fail@plt>
    ece6:	movs	r2, #0
    ece8:	mov	r1, r3
    ecea:	mov	r0, r4
    ecec:	bl	e9f4 <btrfs_find_free_objectid@@Base+0x1f0>
    ecf0:	cmp	r0, #0
    ecf2:	bge.n	ecf8 <btrfs_find_free_objectid@@Base+0x4f4>
    ecf4:	ldr	r3, [r3, #8]
    ecf6:	b.n	ecd0 <btrfs_find_free_objectid@@Base+0x4cc>
    ecf8:	beq.n	ecd2 <btrfs_find_free_objectid@@Base+0x4ce>
    ecfa:	ldr	r3, [r3, #4]
    ecfc:	b.n	ecd0 <btrfs_find_free_objectid@@Base+0x4cc>
    ecfe:	mov	r0, r3
    ed00:	add	sp, #152	; 0x98
    ed02:	pop	{r4, pc}
    ed04:	stmia	r0!, {r2, r3, r4, r6}
    ed06:	movs	r5, r0
    ed08:	lsls	r0, r1, #10
    ed0a:	movs	r0, r0
    ed0c:	stmia	r0!, {r1, r6}
    ed0e:	movs	r5, r0
    ed10:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ed14:	movs	r1, #144	; 0x90
    ed16:	mov	r8, r0
    ed18:	movs	r0, #1
    ed1a:	mov	r7, r2
    ed1c:	mov	r6, r3
    ed1e:	blx	8ab8 <calloc@plt+0x4>
    ed22:	mov	r4, r0
    ed24:	cbnz	r0, ed38 <btrfs_find_free_objectid@@Base+0x534>
    ed26:	ldr	r0, [pc, #124]	; (eda4 <btrfs_find_free_objectid@@Base+0x5a0>)
    ed28:	mvn.w	r4, #11
    ed2c:	add	r0, pc
    ed2e:	bl	1bd1c <__btrfs_error@@Base>
    ed32:	mov	r0, r4
    ed34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ed38:	add.w	r3, r0, #128	; 0x80
    ed3c:	movs	r2, #0
    ed3e:	strd	r3, r3, [r0, #128]	; 0x80
    ed42:	add.w	r3, r0, #136	; 0x88
    ed46:	strd	r3, r3, [r0, #136]	; 0x88
    ed4a:	mov	r3, r8
    ed4c:	strd	r7, r6, [r0, #40]	; 0x28
    ed50:	ldr	r5, [r3, #0]
    ed52:	cbnz	r5, ed66 <btrfs_find_free_objectid@@Base+0x562>
    ed54:	strd	r2, r5, [r4]
    ed58:	mov	r1, r8
    ed5a:	str	r5, [r4, #8]
    ed5c:	mov	r0, r4
    ed5e:	str	r4, [r3, #0]
    ed60:	bl	183ca <rb_insert_color@@Base>
    ed64:	b.n	ed32 <btrfs_find_free_objectid@@Base+0x52e>
    ed66:	movs	r2, #0
    ed68:	mov	r1, r5
    ed6a:	mov	r0, r4
    ed6c:	bl	e9f4 <btrfs_find_free_objectid@@Base+0x1f0>
    ed70:	cmp	r0, #0
    ed72:	bge.n	ed7c <btrfs_find_free_objectid@@Base+0x578>
    ed74:	add.w	r3, r5, #8
    ed78:	mov	r2, r5
    ed7a:	b.n	ed50 <btrfs_find_free_objectid@@Base+0x54c>
    ed7c:	beq.n	ed82 <btrfs_find_free_objectid@@Base+0x57e>
    ed7e:	adds	r3, r5, #4
    ed80:	b.n	ed78 <btrfs_find_free_objectid@@Base+0x574>
    ed82:	blx	8f58 <__errno_location@plt>
    ed86:	movs	r3, #17
    ed88:	mov	r2, r7
    ed8a:	str	r3, [r0, #0]
    ed8c:	mov	r3, r6
    ed8e:	ldr	r0, [pc, #24]	; (eda8 <btrfs_find_free_objectid@@Base+0x5a4>)
    ed90:	add	r0, pc
    ed92:	bl	1bd1c <__btrfs_error@@Base>
    ed96:	mov	r0, r4
    ed98:	blx	8b84 <free@plt+0x4>
    ed9c:	mvn.w	r4, #16
    eda0:	b.n	ed32 <btrfs_find_free_objectid@@Base+0x52e>
    eda2:	nop
    eda4:	lsrs	r1, r6, #3
    eda6:	movs	r3, r0
    eda8:	lsrs	r6, r4, #2
    edaa:	movs	r3, r0
    edac:	ldr.w	ip, [pc, #104]	; ee18 <btrfs_find_free_objectid@@Base+0x614>
    edb0:	push	{r4, r5, lr}
    edb2:	add	ip, pc
    edb4:	ldr	r5, [pc, #100]	; (ee1c <btrfs_find_free_objectid@@Base+0x618>)
    edb6:	sub	sp, #92	; 0x5c
    edb8:	ldr	r4, [pc, #100]	; (ee20 <btrfs_find_free_objectid@@Base+0x61c>)
    edba:	ldr.w	r5, [ip, r5]
    edbe:	add	r4, pc
    edc0:	ldr	r5, [r5, #0]
    edc2:	str	r5, [sp, #84]	; 0x54
    edc4:	mov.w	r5, #0
    edc8:	cbnz	r3, edfe <btrfs_find_free_objectid@@Base+0x5fa>
    edca:	ldr	r5, [pc, #88]	; (ee24 <btrfs_find_free_objectid@@Base+0x620>)
    edcc:	ldr	r4, [r4, r5]
    edce:	strd	r2, r1, [sp]
    edd2:	movs	r1, #1
    edd4:	strd	r0, r3, [sp, #8]
    edd8:	ldr	r2, [pc, #76]	; (ee28 <btrfs_find_free_objectid@@Base+0x624>)
    edda:	ldr	r3, [pc, #80]	; (ee2c <btrfs_find_free_objectid@@Base+0x628>)
    eddc:	ldr	r0, [r4, #0]
    edde:	add	r4, sp, #20
    ede0:	add	r3, pc
    ede2:	add	r2, pc
    ede4:	blx	9040 <__fprintf_chk@plt+0x4>
    ede8:	movs	r1, #16
    edea:	mov	r0, r4
    edec:	blx	8e98 <backtrace@plt>
    edf0:	movs	r2, #2
    edf2:	mov	r1, r0
    edf4:	mov	r0, r4
    edf6:	blx	9214 <backtrace_symbols_fd@plt>
    edfa:	blx	91c0 <abort@plt>
    edfe:	ldr	r2, [pc, #48]	; (ee30 <btrfs_find_free_objectid@@Base+0x62c>)
    ee00:	ldr	r3, [pc, #24]	; (ee1c <btrfs_find_free_objectid@@Base+0x618>)
    ee02:	add	r2, pc
    ee04:	ldr	r3, [r2, r3]
    ee06:	ldr	r2, [r3, #0]
    ee08:	ldr	r3, [sp, #84]	; 0x54
    ee0a:	eors	r2, r3
    ee0c:	beq.n	ee12 <btrfs_find_free_objectid@@Base+0x60e>
    ee0e:	blx	8c90 <__stack_chk_fail@plt>
    ee12:	add	sp, #92	; 0x5c
    ee14:	pop	{r4, r5, pc}
    ee16:	nop
    ee18:	itte	vs
    ee1a:	movvs	r5, r0
    ee1c:	lslvs	r0, r1, #10
    ee1e:	movvc	r0, r0
    ee20:	itte	pl
    ee22:	movpl	r5, r0
    ee24:	lslpl	r4, r3, #10
    ee26:	movmi	r0, r0
    ee28:	lsls	r0, r5, #3
    ee2a:	movs	r3, r0
    ee2c:	lsrs	r2, r7, #1
    ee2e:	movs	r3, r0
    ee30:	itet	ne
    ee32:	movne	r5, r0
    ee34:	stmdbeq	sp!, {r4, r5, r6, r7, r8, lr}
    ee38:	movne	r5, r0
    ee3a:	bl	186e6 <rb_first@@Base>
    ee3e:	ldr	r6, [pc, #112]	; (eeb0 <btrfs_find_free_objectid@@Base+0x6ac>)
    ee40:	ldr	r7, [pc, #112]	; (eeb4 <btrfs_find_free_objectid@@Base+0x6b0>)
    ee42:	mov	r4, r0
    ee44:	cbnz	r4, ee4a <btrfs_find_free_objectid@@Base+0x646>
    ee46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ee4a:	mov	r1, r5
    ee4c:	mov	r0, r4
    ee4e:	bl	18470 <rb_erase@@Base>
    ee52:	add.w	r8, r4, #128	; 0x80
    ee56:	ldr.w	r0, [r4, #128]	; 0x80
    ee5a:	cmp	r0, r8
    ee5c:	bne.n	ee7a <btrfs_find_free_objectid@@Base+0x676>
    ee5e:	add.w	r8, r4, #136	; 0x88
    ee62:	ldr.w	r0, [r4, #136]	; 0x88
    ee66:	cmp	r0, r8
    ee68:	bne.n	ee90 <btrfs_find_free_objectid@@Base+0x68c>
    ee6a:	mov	r0, r4
    ee6c:	blx	8b84 <free@plt+0x4>
    ee70:	mov	r0, r5
    ee72:	bl	186e6 <rb_first@@Base>
    ee76:	mov	r4, r0
    ee78:	b.n	ee44 <btrfs_find_free_objectid@@Base+0x640>
    ee7a:	ldrd	r2, r3, [r0]
    ee7e:	str	r3, [r2, #4]
    ee80:	str	r2, [r3, #0]
    ee82:	ldrd	r2, r3, [r0, #8]
    ee86:	str	r3, [r2, #4]
    ee88:	str	r2, [r3, #0]
    ee8a:	blx	8b84 <free@plt+0x4>
    ee8e:	b.n	ee56 <btrfs_find_free_objectid@@Base+0x652>
    ee90:	ldrd	r1, r2, [r0, #-8]
    ee94:	str	r2, [r1, #4]
    ee96:	str	r1, [r2, #0]
    ee98:	ldrd	r1, r2, [r0]
    ee9c:	strd	r6, r7, [r0, #-8]
    eea0:	str	r2, [r1, #4]
    eea2:	str	r1, [r2, #0]
    eea4:	strd	r6, r7, [r0]
    eea8:	subs	r0, #8
    eeaa:	blx	8b84 <free@plt+0x4>
    eeae:	b.n	ee62 <btrfs_find_free_objectid@@Base+0x65e>
    eeb0:	lsls	r0, r0, #4
    eeb2:	movs	r0, r2
    eeb4:	lsls	r0, r0, #8
    eeb6:	movs	r0, r4
    eeb8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eebc:	mov	r7, r2
    eebe:	vpush	{d8-d9}
    eec2:	mov	r4, r1
    eec4:	vmov	s16, r0
    eec8:	ldrd	r2, r3, [r1, #8]
    eecc:	sub	sp, #92	; 0x5c
    eece:	strd	r2, r3, [sp, #56]	; 0x38
    eed2:	ldrd	r2, r3, [r1, #16]
    eed6:	strd	r2, r3, [sp, #48]	; 0x30
    eeda:	ldrd	r2, r3, [r1, #24]
    eede:	strd	r2, r3, [sp, #64]	; 0x40
    eee2:	ldrd	r2, r3, [r1, #32]
    eee6:	strd	r2, r3, [sp, #80]	; 0x50
    eeea:	ldr	r3, [r1, #56]	; 0x38
    eeec:	str	r3, [sp, #76]	; 0x4c
    eeee:	ldr	r3, [r1, #60]	; 0x3c
    eef0:	str	r3, [sp, #72]	; 0x48
    eef2:	movs	r3, #0
    eef4:	str	r3, [r7, #0]
    eef6:	ldr	r3, [pc, #716]	; (f1c4 <btrfs_find_free_objectid@@Base+0x9c0>)
    eef8:	add	r3, pc
    eefa:	vmov	s19, r3
    eefe:	vmov	r0, s16
    ef02:	mov	r2, r4
    ef04:	ldr	r1, [pc, #696]	; (f1c0 <btrfs_find_free_objectid@@Base+0x9bc>)
    ef06:	blx	8d48 <ioctl@plt>
    ef0a:	subs.w	fp, r0, #0
    ef0e:	bge.n	ef2c <btrfs_find_free_objectid@@Base+0x728>
    ef10:	blx	8f58 <__errno_location@plt>
    ef14:	ldr	r0, [r0, #0]
    ef16:	cmp	r0, #2
    ef18:	beq.w	f1b8 <btrfs_find_free_objectid@@Base+0x9b4>
    ef1c:	rsb	fp, r0, #0
    ef20:	mov	r0, fp
    ef22:	add	sp, #92	; 0x5c
    ef24:	vpop	{d8-d9}
    ef28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef2c:	ldr	r3, [r4, #64]	; 0x40
    ef2e:	cmp	r3, #0
    ef30:	beq.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    ef32:	movs	r3, #0
    ef34:	str	r3, [sp, #16]
    ef36:	mov	r5, r3
    ef38:	ldr	r3, [pc, #652]	; (f1c8 <btrfs_find_free_objectid@@Base+0x9c4>)
    ef3a:	add	r3, pc
    ef3c:	vmov	s17, r3
    ef40:	ldr	r3, [pc, #648]	; (f1cc <btrfs_find_free_objectid@@Base+0x9c8>)
    ef42:	add	r3, pc
    ef44:	vmov	s18, r3
    ef48:	ldr	r3, [r4, #64]	; 0x40
    ef4a:	ldr	r2, [sp, #16]
    ef4c:	cmp	r2, r3
    ef4e:	bcc.n	ef70 <btrfs_find_free_objectid@@Base+0x76c>
    ef50:	ldrd	r0, r1, [r4, #24]
    ef54:	mov.w	r3, #4096	; 0x1000
    ef58:	str	r3, [r4, #64]	; 0x40
    ef5a:	adds	r3, r1, #1
    ef5c:	it	eq
    ef5e:	cmpeq.w	r0, #4294967295	; 0xffffffff
    ef62:	beq.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    ef64:	adds	r2, r0, #1
    ef66:	adc.w	r3, r1, #0
    ef6a:	strd	r2, r3, [r4, #24]
    ef6e:	b.n	eefe <btrfs_find_free_objectid@@Base+0x6fa>
    ef70:	add.w	r6, r4, #104	; 0x68
    ef74:	ldrd	r0, r1, [sp, #56]	; 0x38
    ef78:	add.w	r8, r6, r5
    ef7c:	adds	r5, #32
    ef7e:	ldr.w	r3, [r8, #8]
    ef82:	ldr.w	r9, [r8, #16]
    ef86:	ldr.w	sl, [r8, #20]
    ef8a:	str	r3, [sp, #8]
    ef8c:	ldr.w	r3, [r8, #12]
    ef90:	str	r3, [sp, #12]
    ef92:	ldr.w	r3, [r8, #24]
    ef96:	uxtb	r3, r3
    ef98:	str	r3, [sp, #20]
    ef9a:	ldrd	r2, r3, [sp, #8]
    ef9e:	cmp	r3, r1
    efa0:	it	eq
    efa2:	cmpeq	r2, r0
    efa4:	bcc.w	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efa8:	ldrd	r2, r3, [sp, #48]	; 0x30
    efac:	ldrd	r0, r1, [sp, #8]
    efb0:	cmp	r3, r1
    efb2:	it	eq
    efb4:	cmpeq	r2, r0
    efb6:	bcc.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efb8:	ldr	r3, [sp, #20]
    efba:	ldr	r2, [sp, #76]	; 0x4c
    efbc:	cmp	r3, r2
    efbe:	bcc.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efc0:	ldr	r3, [sp, #72]	; 0x48
    efc2:	ldr	r2, [sp, #20]
    efc4:	cmp	r3, r2
    efc6:	bcc.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efc8:	ldrd	r2, r3, [sp, #64]	; 0x40
    efcc:	cmp	sl, r3
    efce:	it	eq
    efd0:	cmpeq	r9, r2
    efd2:	bcc.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efd4:	ldrd	r2, r3, [sp, #80]	; 0x50
    efd8:	cmp	r3, sl
    efda:	it	eq
    efdc:	cmpeq	r2, r9
    efde:	bcc.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    efe0:	ldr	r3, [sp, #20]
    efe2:	subs	r3, #240	; 0xf0
    efe4:	cmp	r3, #6
    efe6:	bhi.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    efe8:	add	r2, pc, #8	; (adr r2, eff4 <btrfs_find_free_objectid@@Base+0x7f0>)
    efea:	ldr.w	r3, [r2, r3, lsl #2]
    efee:	add	r2, r3
    eff0:	bx	r2
    eff2:	nop
    eff4:	movs	r5, r3
    eff6:	movs	r0, r0
    eff8:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    effc:	lsls	r7, r5, #1
    effe:	movs	r0, r0
    f000:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    f004:	lsls	r3, r3, #3
    f006:	movs	r0, r0
    f008:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    f00c:	lsls	r1, r5, #4
    f00e:	movs	r0, r0
    f010:	add	r6, r5
    f012:	movs	r3, #0
    f014:	ldr	r2, [r6, #16]
    f016:	and.w	r1, r2, #1
    f01a:	strd	r1, r3, [sp, #24]
    f01e:	ldrd	r0, r1, [sp, #24]
    f022:	orrs	r1, r0
    f024:	bne.n	f036 <btrfs_find_free_objectid@@Base+0x832>
    f026:	vmov	r0, s18
    f02a:	bl	1bca0 <__btrfs_warning@@Base>
    f02e:	cmp.w	fp, #0
    f032:	beq.n	f0b0 <btrfs_find_free_objectid@@Base+0x8ac>
    f034:	b.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    f036:	and.w	r1, r2, #2
    f03a:	strd	r1, r3, [sp, #32]
    f03e:	ldrd	r0, r1, [sp, #32]
    f042:	orrs	r1, r0
    f044:	beq.n	f04c <btrfs_find_free_objectid@@Base+0x848>
    f046:	vmov	r0, s17
    f04a:	b.n	f02a <btrfs_find_free_objectid@@Base+0x826>
    f04c:	and.w	r2, r2, #4
    f050:	strd	r2, r3, [sp, #40]	; 0x28
    f054:	ldrd	r2, r3, [sp, #40]	; 0x28
    f058:	orrs	r3, r2
    f05a:	beq.n	f02e <btrfs_find_free_objectid@@Base+0x82a>
    f05c:	vmov	r0, s19
    f060:	b.n	f02a <btrfs_find_free_objectid@@Base+0x826>
    f062:	ldr	r0, [r7, #0]
    f064:	mov	r2, r9
    f066:	mov	r3, sl
    f068:	bl	ecb4 <btrfs_find_free_objectid@@Base+0x4b0>
    f06c:	cbnz	r0, f07c <btrfs_find_free_objectid@@Base+0x878>
    f06e:	mov	r2, r9
    f070:	mov	r3, sl
    f072:	mov	r0, r7
    f074:	bl	ed10 <btrfs_find_free_objectid@@Base+0x50c>
    f078:	cmp	r0, #0
    f07a:	beq.n	f118 <btrfs_find_free_objectid@@Base+0x914>
    f07c:	cmn.w	r0, #4096	; 0x1000
    f080:	bhi.n	f118 <btrfs_find_free_objectid@@Base+0x914>
    f082:	adds	r3, r6, r5
    f084:	ldr	r1, [r6, r5]
    f086:	ldr	r2, [r3, #4]
    f088:	strd	r1, r2, [r0, #48]	; 0x30
    f08c:	ldr	r1, [r3, #8]
    f08e:	ldr	r2, [r3, #12]
    f090:	strd	r1, r2, [r0, #56]	; 0x38
    f094:	ldr	r1, [r3, #16]
    f096:	ldr	r2, [r3, #20]
    f098:	strd	r1, r2, [r0, #64]	; 0x40
    f09c:	ldr	r2, [r3, #28]
    f09e:	ldr	r1, [r3, #24]
    f0a0:	strd	r1, r2, [r0, #72]	; 0x48
    f0a4:	ldr	r2, [r3, #32]
    f0a6:	ldr	r3, [r3, #36]	; 0x24
    f0a8:	strd	r2, r3, [r0, #80]	; 0x50
    f0ac:	mov.w	fp, #0
    f0b0:	ldr.w	r3, [r8, #28]
    f0b4:	strd	r9, sl, [r4, #24]
    f0b8:	add	r5, r3
    f0ba:	ldr	r3, [sp, #20]
    f0bc:	str	r3, [r4, #56]	; 0x38
    f0be:	ldrd	r2, r3, [sp, #8]
    f0c2:	strd	r2, r3, [r4, #8]
    f0c6:	ldr	r3, [sp, #16]
    f0c8:	adds	r3, #1
    f0ca:	str	r3, [sp, #16]
    f0cc:	b.n	ef48 <btrfs_find_free_objectid@@Base+0x744>
    f0ce:	ldr	r0, [r7, #0]
    f0d0:	mov	r2, r9
    f0d2:	mov	r3, sl
    f0d4:	bl	ecb4 <btrfs_find_free_objectid@@Base+0x4b0>
    f0d8:	cbnz	r0, f0e6 <btrfs_find_free_objectid@@Base+0x8e2>
    f0da:	mov	r2, r9
    f0dc:	mov	r3, sl
    f0de:	mov	r0, r7
    f0e0:	bl	ed10 <btrfs_find_free_objectid@@Base+0x50c>
    f0e4:	cbz	r0, f118 <btrfs_find_free_objectid@@Base+0x914>
    f0e6:	cmn.w	r0, #4096	; 0x1000
    f0ea:	bhi.n	f118 <btrfs_find_free_objectid@@Base+0x914>
    f0ec:	adds	r3, r6, r5
    f0ee:	ldr	r1, [r6, r5]
    f0f0:	ldr	r2, [r3, #4]
    f0f2:	strd	r1, r2, [r0, #88]	; 0x58
    f0f6:	ldr	r1, [r3, #8]
    f0f8:	ldr	r2, [r3, #12]
    f0fa:	strd	r1, r2, [r0, #96]	; 0x60
    f0fe:	ldr	r1, [r3, #16]
    f100:	ldr	r2, [r3, #20]
    f102:	strd	r1, r2, [r0, #104]	; 0x68
    f106:	ldr	r2, [r3, #28]
    f108:	ldr	r1, [r3, #24]
    f10a:	strd	r1, r2, [r0, #112]	; 0x70
    f10e:	ldr	r2, [r3, #32]
    f110:	ldr	r3, [r3, #36]	; 0x24
    f112:	strd	r2, r3, [r0, #120]	; 0x78
    f116:	b.n	f0ac <btrfs_find_free_objectid@@Base+0x8a8>
    f118:	mov	fp, r0
    f11a:	b.n	f02e <btrfs_find_free_objectid@@Base+0x82a>
    f11c:	ldrd	r2, r3, [sp, #8]
    f120:	cmp	sl, r3
    f122:	it	eq
    f124:	cmpeq	r9, r2
    f126:	bcs.n	f02e <btrfs_find_free_objectid@@Base+0x82a>
    f128:	ldr.w	fp, [r7]
    f12c:	mov	r2, r9
    f12e:	mov	r3, sl
    f130:	mov	r0, fp
    f132:	bl	ecb4 <btrfs_find_free_objectid@@Base+0x4b0>
    f136:	mov	r6, r0
    f138:	cbnz	r0, f156 <btrfs_find_free_objectid@@Base+0x952>
    f13a:	uxth.w	r3, sl
    f13e:	strd	r9, r3, [sp]
    f142:	mov	r3, r0
    f144:	ldr	r0, [pc, #136]	; (f1d0 <btrfs_find_free_objectid@@Base+0x9cc>)
    f146:	mov.w	r2, sl, lsr #16
    f14a:	add	r0, pc
    f14c:	bl	1bd1c <__btrfs_error@@Base>
    f150:	mvn.w	fp, #1
    f154:	b.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    f156:	mov	r0, fp
    f158:	ldrd	r2, r3, [sp, #8]
    f15c:	bl	ecb4 <btrfs_find_free_objectid@@Base+0x4b0>
    f160:	mov	fp, r0
    f162:	cbnz	r0, f17a <btrfs_find_free_objectid@@Base+0x976>
    f164:	ldrh.w	r3, [sp, #12]
    f168:	ldr	r2, [sp, #8]
    f16a:	strd	r2, r3, [sp]
    f16e:	ldr	r3, [sp, #12]
    f170:	lsrs	r2, r3, #16
    f172:	mov	r3, r0
    f174:	ldr	r0, [pc, #92]	; (f1d4 <btrfs_find_free_objectid@@Base+0x9d0>)
    f176:	add	r0, pc
    f178:	b.n	f14c <btrfs_find_free_objectid@@Base+0x948>
    f17a:	movs	r0, #24
    f17c:	blx	8e40 <malloc@plt+0x4>
    f180:	cbnz	r0, f190 <btrfs_find_free_objectid@@Base+0x98c>
    f182:	ldr	r0, [pc, #84]	; (f1d8 <btrfs_find_free_objectid@@Base+0x9d4>)
    f184:	mvn.w	fp, #11
    f188:	add	r0, pc
    f18a:	bl	1bd1c <__btrfs_error@@Base>
    f18e:	b.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    f190:	strd	fp, r6, [r0, #16]
    f194:	adds	r6, #128	; 0x80
    f196:	ldr	r3, [r6, #4]
    f198:	add.w	r1, r0, #8
    f19c:	str	r0, [r6, #4]
    f19e:	strd	r6, r3, [r0]
    f1a2:	str	r0, [r3, #0]
    f1a4:	add.w	r3, fp, #136	; 0x88
    f1a8:	ldr.w	r2, [fp, #140]	; 0x8c
    f1ac:	str.w	r1, [fp, #140]	; 0x8c
    f1b0:	strd	r3, r2, [r0, #8]
    f1b4:	str	r1, [r2, #0]
    f1b6:	b.n	f0ac <btrfs_find_free_objectid@@Base+0x8a8>
    f1b8:	mvn.w	fp, #24
    f1bc:	b.n	ef20 <btrfs_find_free_objectid@@Base+0x71c>
    f1be:	nop
    f1c0:	str	r4, [sp, #68]	; 0x44
    f1c2:	beq.n	f1c6 <btrfs_find_free_objectid@@Base+0x9c2>
    f1c4:	lsls	r2, r1, #31
    f1c6:	movs	r3, r0
    f1c8:	lsls	r0, r3, #29
    f1ca:	movs	r3, r0
    f1cc:	lsls	r1, r4, #28
    f1ce:	movs	r3, r0
    f1d0:	lsls	r5, r4, #22
    f1d2:	movs	r3, r0
    f1d4:	lsls	r1, r7, #21
    f1d6:	movs	r3, r0
    f1d8:	lsls	r5, r2, #18
    f1da:	movs	r3, r0
    f1dc:	push	{r4, r5, r6, r7, lr}
    f1de:	mov	r5, r1
    f1e0:	ldr	r1, [pc, #168]	; (f28c <btrfs_find_free_objectid@@Base+0xa88>)
    f1e2:	sub.w	sp, sp, #4096	; 0x1000
    f1e6:	ldr	r2, [pc, #168]	; (f290 <btrfs_find_free_objectid@@Base+0xa8c>)
    f1e8:	sub	sp, #12
    f1ea:	add	r1, pc
    f1ec:	add.w	r3, sp, #4096	; 0x1000
    f1f0:	adds	r3, #4
    f1f2:	mov.w	r6, #4096	; 0x1000
    f1f6:	ldr	r2, [r1, r2]
    f1f8:	mov	r4, r0
    f1fa:	movs	r1, #0
    f1fc:	add	r7, sp, #8
    f1fe:	ldr	r2, [r2, #0]
    f200:	str	r2, [r3, #0]
    f202:	mov.w	r2, #0
    f206:	mov	r3, sp
    f208:	mov	r2, r6
    f20a:	mov	r0, r3
    f20c:	blx	8f98 <memset@plt+0x4>
    f210:	movs	r1, #0
    f212:	movs	r2, #246	; 0xf6
    f214:	mov	r3, r0
    f216:	movs	r0, #8
    f218:	strd	r0, r1, [r7, #-8]
    f21c:	mov.w	r0, #4294967295	; 0xffffffff
    f220:	mov.w	r1, #4294967295	; 0xffffffff
    f224:	strd	r0, r1, [r3, #16]
    f228:	strd	r0, r1, [r3, #32]
    f22c:	strd	r0, r1, [r3, #48]	; 0x30
    f230:	movs	r1, #240	; 0xf0
    f232:	mov	r0, r4
    f234:	strd	r1, r2, [r3, #56]	; 0x38
    f238:	mov	r2, r5
    f23a:	mov	r1, r3
    f23c:	str	r6, [r3, #64]	; 0x40
    f23e:	bl	eeb8 <btrfs_find_free_objectid@@Base+0x6b4>
    f242:	cmn.w	r0, #25
    f246:	mov	r4, r0
    f248:	bne.n	f26c <btrfs_find_free_objectid@@Base+0xa68>
    f24a:	ldr	r0, [pc, #72]	; (f294 <btrfs_find_free_objectid@@Base+0xa90>)
    f24c:	add	r0, pc
    f24e:	bl	1bd1c <__btrfs_error@@Base>
    f252:	ldr	r1, [pc, #68]	; (f298 <btrfs_find_free_objectid@@Base+0xa94>)
    f254:	add.w	r3, sp, #4096	; 0x1000
    f258:	ldr	r2, [pc, #52]	; (f290 <btrfs_find_free_objectid@@Base+0xa8c>)
    f25a:	adds	r3, #4
    f25c:	add	r1, pc
    f25e:	ldr	r2, [r1, r2]
    f260:	ldr	r1, [r2, #0]
    f262:	ldr	r2, [r3, #0]
    f264:	eors	r1, r2
    f266:	beq.n	f282 <btrfs_find_free_objectid@@Base+0xa7e>
    f268:	blx	8c90 <__stack_chk_fail@plt>
    f26c:	cmp	r0, #0
    f26e:	bge.n	f252 <btrfs_find_free_objectid@@Base+0xa4e>
    f270:	negs	r0, r0
    f272:	blx	8e58 <strerror@plt>
    f276:	mov	r1, r0
    f278:	ldr	r0, [pc, #32]	; (f29c <btrfs_find_free_objectid@@Base+0xa98>)
    f27a:	add	r0, pc
    f27c:	bl	1bd1c <__btrfs_error@@Base>
    f280:	b.n	f252 <btrfs_find_free_objectid@@Base+0xa4e>
    f282:	mov	r0, r4
    f284:	add.w	sp, sp, #4096	; 0x1000
    f288:	add	sp, #12
    f28a:	pop	{r4, r5, r6, r7, pc}
    f28c:	cbnz	r6, f2da <btrfs_qgroup_setup_print_column@@Base+0x3a>
    f28e:	movs	r5, r0
    f290:	lsls	r0, r1, #10
    f292:	movs	r0, r0
    f294:	lsls	r4, r0, #19
    f296:	movs	r3, r0
    f298:	hlt	0x003c
    f29a:	movs	r5, r0
    f29c:	lsls	r5, r7, #18
    f29e:	movs	r3, r0

0000f2a0 <btrfs_qgroup_setup_print_column@@Base>:
    f2a0:	cmp	r0, #7
    f2a2:	ldr	r1, [pc, #68]	; (f2e8 <btrfs_qgroup_setup_print_column@@Base+0x48>)
    f2a4:	push	{r4, lr}
    f2a6:	mov	r4, r0
    f2a8:	ldr	r0, [pc, #64]	; (f2ec <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    f2aa:	ite	hi
    f2ac:	movhi	r3, #0
    f2ae:	movls	r3, #1
    f2b0:	add	r1, pc
    f2b2:	add	r0, pc
    f2b4:	movs	r2, #143	; 0x8f
    f2b6:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f2ba:	cmp	r4, #6
    f2bc:	bls.n	f2d6 <btrfs_qgroup_setup_print_column@@Base+0x36>
    f2be:	ldr	r3, [pc, #48]	; (f2f0 <btrfs_qgroup_setup_print_column@@Base+0x50>)
    f2c0:	movs	r2, #1
    f2c2:	add	r3, pc
    f2c4:	str	r2, [r3, #8]
    f2c6:	str	r2, [r3, #28]
    f2c8:	str	r2, [r3, #48]	; 0x30
    f2ca:	str	r2, [r3, #68]	; 0x44
    f2cc:	str	r2, [r3, #88]	; 0x58
    f2ce:	str	r2, [r3, #108]	; 0x6c
    f2d0:	str.w	r2, [r3, #128]	; 0x80
    f2d4:	pop	{r4, pc}
    f2d6:	ldr	r0, [pc, #28]	; (f2f4 <btrfs_qgroup_setup_print_column@@Base+0x54>)
    f2d8:	movs	r3, #20
    f2da:	add	r0, pc
    f2dc:	mla	r4, r3, r4, r0
    f2e0:	movs	r3, #1
    f2e2:	str	r3, [r4, #8]
    f2e4:	b.n	f2d4 <btrfs_qgroup_setup_print_column@@Base+0x34>
    f2e6:	nop
    f2e8:	lsls	r7, r1, #26
    f2ea:	movs	r3, r0
    f2ec:	lsls	r4, r3, #18
    f2ee:	movs	r3, r0
    f2f0:	pop	{r1, r6, pc}
    f2f2:	movs	r5, r0
    f2f4:	pop	{r1, r3, r5, pc}
    f2f6:	movs	r5, r0

0000f2f8 <btrfs_qgroup_setup_units@@Base>:
    f2f8:	ldr	r3, [pc, #12]	; (f308 <btrfs_qgroup_setup_units@@Base+0x10>)
    f2fa:	add	r3, pc
    f2fc:	str	r0, [r3, #32]
    f2fe:	str	r0, [r3, #52]	; 0x34
    f300:	str	r0, [r3, #72]	; 0x48
    f302:	str	r0, [r3, #92]	; 0x5c
    f304:	bx	lr
    f306:	nop
    f308:	pop	{r1, r3, pc}
    f30a:	movs	r5, r0

0000f30c <btrfs_qgroup_alloc_comparer_set@@Base>:
    f30c:	push	{r3, lr}
    f30e:	movs	r1, #88	; 0x58
    f310:	movs	r0, #1
    f312:	blx	8ab8 <calloc@plt+0x4>
    f316:	cbnz	r0, f326 <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    f318:	ldr	r0, [pc, #16]	; (f32c <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    f31a:	add	r0, pc
    f31c:	bl	1bd1c <__btrfs_error@@Base>
    f320:	movs	r0, #1
    f322:	blx	8f10 <exit@plt>
    f326:	movs	r2, #10
    f328:	str	r2, [r0, #0]
    f32a:	pop	{r3, pc}
    f32c:	lsls	r3, r0, #12
    f32e:	movs	r3, r0

0000f330 <btrfs_qgroup_setup_comparer@@Base>:
    f330:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    f334:	mov	r6, r1
    f336:	ldr	r4, [r0, #0]
    f338:	mov	r7, r0
    f33a:	ldr	r1, [pc, #188]	; (f3f8 <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    f33c:	mov	r8, r2
    f33e:	subs	r3, r4, #0
    f340:	ldr	r0, [pc, #184]	; (f3fc <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    f342:	add	r1, pc
    f344:	movw	r2, #457	; 0x1c9
    f348:	it	ne
    f34a:	movne	r3, #1
    f34c:	adds	r1, #32
    f34e:	add	r0, pc
    f350:	str	r1, [sp, #4]
    f352:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f356:	cmp	r6, #4
    f358:	ldr	r0, [pc, #164]	; (f400 <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    f35a:	mov.w	r2, #458	; 0x1ca
    f35e:	ite	hi
    f360:	movhi	r3, #0
    f362:	movls	r3, #1
    f364:	ldr	r1, [sp, #4]
    f366:	add	r0, pc
    f368:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f36c:	ldrd	r9, r5, [r4]
    f370:	ldr	r0, [pc, #144]	; (f404 <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    f372:	movw	r2, #459	; 0x1cb
    f376:	cmp	r5, r9
    f378:	ldr	r1, [sp, #4]
    f37a:	add	r0, pc
    f37c:	ite	gt
    f37e:	movgt	r3, #0
    f380:	movle	r3, #1
    f382:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f386:	cmp	r5, r9
    f388:	bne.n	f3c2 <btrfs_qgroup_setup_comparer@@Base+0x92>
    f38a:	adds	r5, #11
    f38c:	mov	r0, r4
    f38e:	lsls	r1, r5, #3
    f390:	blx	8cb8 <realloc@plt+0x4>
    f394:	mov	r5, r0
    f396:	cbnz	r0, f3a8 <btrfs_qgroup_setup_comparer@@Base+0x78>
    f398:	mov	r0, r4
    f39a:	blx	8b84 <free@plt+0x4>
    f39e:	mvn.w	r0, #11
    f3a2:	add	sp, #12
    f3a4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f3a8:	ldr	r0, [r0, #0]
    f3aa:	movs	r2, #80	; 0x50
    f3ac:	movs	r1, #0
    f3ae:	mov	r4, r5
    f3b0:	adds	r0, #1
    f3b2:	add.w	r0, r5, r0, lsl #3
    f3b6:	blx	8f98 <memset@plt+0x4>
    f3ba:	ldr	r3, [r5, #0]
    f3bc:	adds	r3, #10
    f3be:	str	r3, [r5, #0]
    f3c0:	str	r5, [r7, #0]
    f3c2:	ldr	r5, [r4, #4]
    f3c4:	movw	r2, #481	; 0x1e1
    f3c8:	ldr	r1, [pc, #60]	; (f408 <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    f3ca:	ldr	r0, [pc, #64]	; (f40c <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    f3cc:	add.w	r7, r4, r5, lsl #3
    f3d0:	add	r1, pc
    f3d2:	add	r0, pc
    f3d4:	adds	r1, #32
    f3d6:	ldr	r3, [r7, #8]
    f3d8:	adds	r5, #1
    f3da:	clz	r3, r3
    f3de:	lsrs	r3, r3, #5
    f3e0:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f3e4:	ldr	r3, [pc, #40]	; (f410 <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    f3e6:	movs	r0, #0
    f3e8:	add	r3, pc
    f3ea:	ldr.w	r3, [r3, r6, lsl #2]
    f3ee:	strd	r3, r8, [r7, #8]
    f3f2:	str	r5, [r4, #4]
    f3f4:	b.n	f3a2 <btrfs_qgroup_setup_comparer@@Base+0x72>
    f3f6:	nop
    f3f8:	lsls	r5, r7, #23
    f3fa:	movs	r3, r0
    f3fc:	lsls	r2, r5, #16
    f3fe:	movs	r3, r0
    f400:	lsls	r6, r3, #16
    f402:	movs	r3, r0
    f404:	lsls	r3, r5, #16
    f406:	movs	r3, r0
    f408:	lsls	r7, r5, #21
    f40a:	movs	r3, r0
    f40c:	lsls	r5, r5, #15
    f40e:	movs	r3, r0
    f410:	cbz	r4, f430 <btrfs_qgroup_alloc_filter_set@@Base+0x1c>
    f412:	movs	r5, r0

0000f414 <btrfs_qgroup_alloc_filter_set@@Base>:
    f414:	push	{r3, lr}
    f416:	movs	r1, #72	; 0x48
    f418:	movs	r0, #1
    f41a:	blx	8ab8 <calloc@plt+0x4>
    f41e:	cbnz	r0, f42e <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    f420:	ldr	r0, [pc, #16]	; (f434 <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    f422:	add	r0, pc
    f424:	bl	1bd1c <__btrfs_error@@Base>
    f428:	movs	r0, #1
    f42a:	blx	8f10 <exit@plt>
    f42e:	movs	r2, #4
    f430:	str	r2, [r0, #0]
    f432:	pop	{r3, pc}
    f434:	lsls	r3, r7, #7
    f436:	movs	r3, r0

0000f438 <btrfs_qgroup_setup_filter@@Base>:
    f438:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    f43c:	mov	r8, r1
    f43e:	ldr	r4, [r0, #0]
    f440:	mov	r9, r0
    f442:	ldr	r1, [pc, #216]	; (f51c <btrfs_qgroup_setup_filter@@Base+0xe4>)
    f444:	mov	r6, r3
    f446:	ldr	r0, [pc, #216]	; (f520 <btrfs_qgroup_setup_filter@@Base+0xe8>)
    f448:	subs	r3, r4, #0
    f44a:	add	r1, pc
    f44c:	mov	r7, r2
    f44e:	it	ne
    f450:	movne	r3, #1
    f452:	adds	r1, #60	; 0x3c
    f454:	add	r0, pc
    f456:	mov.w	r2, #836	; 0x344
    f45a:	str	r1, [sp, #4]
    f45c:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f460:	cmp.w	r8, #1
    f464:	ldr	r0, [pc, #188]	; (f524 <btrfs_qgroup_setup_filter@@Base+0xec>)
    f466:	ldr	r1, [sp, #4]
    f468:	movw	r2, #837	; 0x345
    f46c:	ite	hi
    f46e:	movhi	r3, #0
    f470:	movls	r3, #1
    f472:	add	r0, pc
    f474:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f478:	ldrd	sl, r5, [r4]
    f47c:	ldr	r0, [pc, #168]	; (f528 <btrfs_qgroup_setup_filter@@Base+0xf0>)
    f47e:	movw	r2, #838	; 0x346
    f482:	cmp	r5, sl
    f484:	ldr	r1, [sp, #4]
    f486:	add	r0, pc
    f488:	ite	gt
    f48a:	movgt	r3, #0
    f48c:	movle	r3, #1
    f48e:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f492:	cmp	r5, sl
    f494:	bne.n	f4d6 <btrfs_qgroup_setup_filter@@Base+0x9e>
    f496:	lsls	r5, r5, #4
    f498:	mov	r0, r4
    f49a:	add.w	r1, r5, #72	; 0x48
    f49e:	blx	8cb8 <realloc@plt+0x4>
    f4a2:	mov	r5, r0
    f4a4:	cbnz	r0, f4ba <btrfs_qgroup_setup_filter@@Base+0x82>
    f4a6:	ldr	r0, [pc, #132]	; (f52c <btrfs_qgroup_setup_filter@@Base+0xf4>)
    f4a8:	add	r0, pc
    f4aa:	bl	1bd1c <__btrfs_error@@Base>
    f4ae:	mov	r0, r4
    f4b0:	blx	8b84 <free@plt+0x4>
    f4b4:	movs	r0, #1
    f4b6:	blx	8f10 <exit@plt>
    f4ba:	ldr	r0, [r0, #0]
    f4bc:	movs	r2, #64	; 0x40
    f4be:	movs	r1, #0
    f4c0:	mov	r4, r5
    f4c2:	add.w	r0, r5, r0, lsl #4
    f4c6:	adds	r0, #8
    f4c8:	blx	8f98 <memset@plt+0x4>
    f4cc:	ldr	r3, [r5, #0]
    f4ce:	adds	r3, #4
    f4d0:	str	r3, [r5, #0]
    f4d2:	str.w	r5, [r9]
    f4d6:	ldr	r5, [r4, #4]
    f4d8:	mov.w	r2, #860	; 0x35c
    f4dc:	ldr	r1, [pc, #80]	; (f530 <btrfs_qgroup_setup_filter@@Base+0xf8>)
    f4de:	ldr	r0, [pc, #84]	; (f534 <btrfs_qgroup_setup_filter@@Base+0xfc>)
    f4e0:	add.w	r9, r4, r5, lsl #4
    f4e4:	add	r1, pc
    f4e6:	adds	r1, #60	; 0x3c
    f4e8:	add	r0, pc
    f4ea:	ldr.w	r3, [r9, #8]
    f4ee:	adds	r5, #1
    f4f0:	clz	r3, r3
    f4f4:	lsrs	r3, r3, #5
    f4f6:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f4fa:	ldr	r1, [pc, #60]	; (f538 <btrfs_qgroup_setup_filter@@Base+0x100>)
    f4fc:	movs	r0, #0
    f4fe:	add	r1, pc
    f500:	add.w	r8, r1, r8, lsl #2
    f504:	ldr.w	r3, [r8, #20]
    f508:	str.w	r3, [r9, #8]
    f50c:	add.w	r3, r4, r5, lsl #4
    f510:	strd	r7, r6, [r3]
    f514:	str	r5, [r4, #4]
    f516:	add	sp, #8
    f518:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f51c:	lsls	r5, r6, #19
    f51e:	movs	r3, r0
    f520:	lsls	r4, r4, #12
    f522:	movs	r3, r0
    f524:	lsls	r7, r6, #13
    f526:	movs	r3, r0
    f528:	lsls	r4, r0, #14
    f52a:	movs	r3, r0
    f52c:	lsls	r5, r6, #5
    f52e:	movs	r3, r0
    f530:	lsls	r3, r3, #17
    f532:	movs	r3, r0
    f534:	lsls	r6, r7, #12
    f536:	movs	r3, r0
    f538:	add	sp, #376	; 0x178
    f53a:	movs	r5, r0

0000f53c <btrfs_qgroup_query@@Base>:
    f53c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    f540:	sub.w	sp, sp, #4096	; 0x1000
    f544:	sub	sp, #16
    f546:	ldr	r1, [pc, #224]	; (f628 <btrfs_qgroup_query@@Base+0xec>)
    f548:	mov	r7, r2
    f54a:	mov	r6, r3
    f54c:	ldr	r2, [pc, #220]	; (f62c <btrfs_qgroup_query@@Base+0xf0>)
    f54e:	add.w	r3, sp, #4128	; 0x1020
    f552:	add	r1, pc
    f554:	add	r4, sp, #8
    f556:	ldr	r5, [r3, #16]
    f558:	adds	r3, #16
    f55a:	ldr	r2, [r1, r2]
    f55c:	add.w	r3, sp, #4096	; 0x1000
    f560:	add.w	r8, sp, #16
    f564:	mov.w	sl, #4096	; 0x1000
    f568:	ldr	r2, [r2, #0]
    f56a:	str	r2, [r3, #12]
    f56c:	mov.w	r2, #0
    f570:	mov	r9, r0
    f572:	mov	r2, sl
    f574:	mov	r0, r4
    f576:	movs	r1, #0
    f578:	adds	r3, #12
    f57a:	blx	8f98 <memset@plt+0x4>
    f57e:	movs	r0, #8
    f580:	movs	r1, #0
    f582:	mov.w	r2, #4294967295	; 0xffffffff
    f586:	strd	r0, r1, [r8, #-8]
    f58a:	mov.w	r3, #4294967295	; 0xffffffff
    f58e:	strd	r7, r6, [r8, #16]
    f592:	mov	r1, r4
    f594:	strd	r2, r3, [r8, #40]	; 0x28
    f598:	movs	r2, #242	; 0xf2
    f59a:	movs	r3, #244	; 0xf4
    f59c:	strd	r7, r6, [r8, #24]
    f5a0:	strd	r2, r3, [r8, #48]	; 0x30
    f5a4:	mov	r0, r9
    f5a6:	str.w	sl, [r8, #56]	; 0x38
    f5aa:	sub.w	r8, r8, #12
    f5ae:	mov	r2, r8
    f5b0:	bl	eeb8 <btrfs_find_free_objectid@@Base+0x6b4>
    f5b4:	subs	r4, r0, #0
    f5b6:	blt.n	f5fc <btrfs_qgroup_query@@Base+0xc0>
    f5b8:	mov	r0, r8
    f5ba:	bl	186e6 <rb_first@@Base>
    f5be:	mov	r4, r0
    f5c0:	cbz	r0, f616 <btrfs_qgroup_query@@Base+0xda>
    f5c2:	ldrd	r2, r3, [r0, #40]	; 0x28
    f5c6:	add.w	r7, r0, #48	; 0x30
    f5ca:	mov	r6, r5
    f5cc:	adds	r4, #88	; 0x58
    f5ce:	adds	r5, #48	; 0x30
    f5d0:	strd	r2, r3, [r6], #8
    f5d4:	ldmia	r7!, {r0, r1, r2, r3}
    f5d6:	stmia	r6!, {r0, r1, r2, r3}
    f5d8:	ldmia	r7!, {r0, r1, r2, r3}
    f5da:	stmia	r6!, {r0, r1, r2, r3}
    f5dc:	ldmia.w	r7, {r0, r1}
    f5e0:	stmia.w	r6, {r0, r1}
    f5e4:	ldmia	r4!, {r0, r1, r2, r3}
    f5e6:	stmia	r5!, {r0, r1, r2, r3}
    f5e8:	ldmia	r4!, {r0, r1, r2, r3}
    f5ea:	stmia	r5!, {r0, r1, r2, r3}
    f5ec:	ldmia.w	r4, {r0, r1}
    f5f0:	movs	r4, #0
    f5f2:	stmia.w	r5, {r0, r1}
    f5f6:	mov	r0, r8
    f5f8:	bl	ee34 <btrfs_find_free_objectid@@Base+0x630>
    f5fc:	ldr	r1, [pc, #48]	; (f630 <btrfs_qgroup_query@@Base+0xf4>)
    f5fe:	add.w	r3, sp, #4096	; 0x1000
    f602:	ldr	r2, [pc, #40]	; (f62c <btrfs_qgroup_query@@Base+0xf0>)
    f604:	adds	r3, #12
    f606:	add	r1, pc
    f608:	ldr	r2, [r1, r2]
    f60a:	ldr	r1, [r2, #0]
    f60c:	ldr	r2, [r3, #0]
    f60e:	eors	r1, r2
    f610:	beq.n	f61c <btrfs_qgroup_query@@Base+0xe0>
    f612:	blx	8c90 <__stack_chk_fail@plt>
    f616:	mvn.w	r4, #60	; 0x3c
    f61a:	b.n	f5f6 <btrfs_qgroup_query@@Base+0xba>
    f61c:	mov	r0, r4
    f61e:	add.w	sp, sp, #4096	; 0x1000
    f622:	add	sp, #16
    f624:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f628:			; <UNDEFINED> instruction: 0xb7c6
    f62a:	movs	r5, r0
    f62c:	lsls	r0, r1, #10
    f62e:	movs	r0, r0
    f630:			; <UNDEFINED> instruction: 0xb712
    f632:	movs	r5, r0

0000f634 <btrfs_show_qgroups@@Base>:
    f634:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f638:	mov	fp, r1
    f63a:	vpush	{d8}
    f63e:	ldr.w	r3, [pc, #1460]	; fbf4 <btrfs_show_qgroups@@Base+0x5c0>
    f642:	sub	sp, #164	; 0xa4
    f644:	add	r6, sp, #48	; 0x30
    f646:	str	r2, [sp, #20]
    f648:	ldr.w	r2, [pc, #1452]	; fbf8 <btrfs_show_qgroups@@Base+0x5c4>
    f64c:	mov	r1, r6
    f64e:	add	r2, pc
    f650:	ldr	r3, [r2, r3]
    f652:	ldr	r3, [r3, #0]
    f654:	str	r3, [sp, #156]	; 0x9c
    f656:	mov.w	r3, #0
    f65a:	bl	f1dc <btrfs_find_free_objectid@@Base+0x9d8>
    f65e:	str	r0, [sp, #16]
    f660:	cmp	r0, #0
    f662:	bne.n	f746 <btrfs_show_qgroups@@Base+0x112>
    f664:	ldr.w	r9, [pc, #1428]	; fbfc <btrfs_show_qgroups@@Base+0x5c8>
    f668:	mov	r4, fp
    f66a:	ldr.w	sl, [pc, #1428]	; fc00 <btrfs_show_qgroups@@Base+0x5cc>
    f66e:	mov	r5, r0
    f670:	ldr.w	r7, [fp, #4]
    f674:	add	r9, pc
    f676:	ldr.w	r8, [sp, #48]	; 0x30
    f67a:	add	sl, pc
    f67c:	str	r0, [sp, #52]	; 0x34
    f67e:	cmp	r5, r7
    f680:	blt.n	f760 <btrfs_show_qgroups@@Base+0x12c>
    f682:	mov	r0, r6
    f684:	bl	186f6 <rb_last@@Base>
    f688:	ldr.w	r3, [pc, #1400]	; fc04 <btrfs_show_qgroups@@Base+0x5d0>
    f68c:	add	r3, pc
    f68e:	adds	r3, #86	; 0x56
    f690:	vmov	s17, r3
    f694:	mov	r4, r0
    f696:	cmp	r4, #0
    f698:	bne.n	f780 <btrfs_show_qgroups@@Base+0x14c>
    f69a:	ldr.w	r3, [pc, #1388]	; fc08 <btrfs_show_qgroups@@Base+0x5d4>
    f69e:	ldr.w	r6, [pc, #1388]	; fc0c <btrfs_show_qgroups@@Base+0x5d8>
    f6a2:	ldr.w	r7, [pc, #1388]	; fc10 <btrfs_show_qgroups@@Base+0x5dc>
    f6a6:	add	r3, pc
    f6a8:	add	r6, pc
    f6aa:	str	r3, [sp, #20]
    f6ac:	add	r7, pc
    f6ae:	mov	r5, r3
    f6b0:	ldr	r3, [r5, #8]
    f6b2:	cbz	r3, f6d2 <btrfs_show_qgroups@@Base+0x9e>
    f6b4:	subs	r3, r4, #5
    f6b6:	ldr	r2, [r5, #16]
    f6b8:	cmp	r3, #1
    f6ba:	ldr	r3, [r5, #0]
    f6bc:	bls.n	f6c4 <btrfs_show_qgroups@@Base+0x90>
    f6be:	cmp	r4, #0
    f6c0:	bne.w	f9e0 <btrfs_show_qgroups@@Base+0x3ac>
    f6c4:	mov	r1, r6
    f6c6:	movs	r0, #1
    f6c8:	blx	900c <__printf_chk@plt+0x4>
    f6cc:	movs	r0, #32
    f6ce:	blx	8fa8 <putchar@plt+0x4>
    f6d2:	adds	r4, #1
    f6d4:	adds	r5, #20
    f6d6:	cmp	r4, #7
    f6d8:	bne.n	f6b0 <btrfs_show_qgroups@@Base+0x7c>
    f6da:	movs	r0, #10
    f6dc:	movs	r6, #0
    f6de:	blx	8fa8 <putchar@plt+0x4>
    f6e2:	ldr	r4, [sp, #20]
    f6e4:	ldr	r3, [r4, #8]
    f6e6:	cbz	r3, f718 <btrfs_show_qgroups@@Base+0xe4>
    f6e8:	subs	r3, r6, #5
    f6ea:	ldr	r5, [r4, #16]
    f6ec:	cmp	r3, #1
    f6ee:	ldr	r0, [r4, #0]
    f6f0:	bls.n	f6f8 <btrfs_show_qgroups@@Base+0xc4>
    f6f2:	cmp	r6, #0
    f6f4:	bne.w	f9f4 <btrfs_show_qgroups@@Base+0x3c0>
    f6f8:	blx	8f1c <strlen@plt>
    f6fc:	mov	r7, r0
    f6fe:	subs	r7, #1
    f700:	bcs.w	f9e4 <btrfs_show_qgroups@@Base+0x3b0>
    f704:	ldr	r0, [r4, #0]
    f706:	blx	8f1c <strlen@plt>
    f70a:	subs	r5, r5, r0
    f70c:	subs	r5, #1
    f70e:	bcs.w	f9ec <btrfs_show_qgroups@@Base+0x3b8>
    f712:	movs	r0, #32
    f714:	blx	8fa8 <putchar@plt+0x4>
    f718:	adds	r6, #1
    f71a:	adds	r4, #20
    f71c:	cmp	r6, #7
    f71e:	bne.n	f6e4 <btrfs_show_qgroups@@Base+0xb0>
    f720:	movs	r0, #10
    f722:	blx	8fa8 <putchar@plt+0x4>
    f726:	add	r0, sp, #52	; 0x34
    f728:	bl	186e6 <rb_first@@Base>
    f72c:	ldr.w	r3, [pc, #1252]	; fc14 <btrfs_show_qgroups@@Base+0x5e0>
    f730:	add	r3, pc
    f732:	adds	r3, #111	; 0x6f
    f734:	vmov	s17, r3
    f738:	mov	r4, r0
    f73a:	cmp	r4, #0
    f73c:	bne.w	fa1c <btrfs_show_qgroups@@Base+0x3e8>
    f740:	add	r0, sp, #48	; 0x30
    f742:	bl	ee34 <btrfs_find_free_objectid@@Base+0x630>
    f746:	ldr.w	r2, [pc, #1232]	; fc18 <btrfs_show_qgroups@@Base+0x5e4>
    f74a:	ldr.w	r3, [pc, #1192]	; fbf4 <btrfs_show_qgroups@@Base+0x5c0>
    f74e:	add	r2, pc
    f750:	ldr	r3, [r2, r3]
    f752:	ldr	r2, [r3, #0]
    f754:	ldr	r3, [sp, #156]	; 0x9c
    f756:	eors	r2, r3
    f758:	beq.w	fbe8 <btrfs_show_qgroups@@Base+0x5b4>
    f75c:	blx	8c90 <__stack_chk_fail@plt>
    f760:	ldr	r3, [r4, #8]
    f762:	cmp	r3, r9
    f764:	beq.n	f76a <btrfs_show_qgroups@@Base+0x136>
    f766:	cmp	r3, sl
    f768:	bne.n	f77a <btrfs_show_qgroups@@Base+0x146>
    f76a:	ldrd	r2, r3, [r4, #16]
    f76e:	mov	r0, r8
    f770:	bl	ecb4 <btrfs_find_free_objectid@@Base+0x4b0>
    f774:	movs	r1, #0
    f776:	str	r1, [r4, #20]
    f778:	str	r0, [r4, #16]
    f77a:	adds	r5, #1
    f77c:	adds	r4, #16
    f77e:	b.n	f67e <btrfs_show_qgroups@@Base+0x4a>
    f780:	ldr.w	r3, [fp, #4]
    f784:	cbnz	r3, f7d2 <btrfs_show_qgroups@@Base+0x19e>
    f786:	add	r5, sp, #52	; 0x34
    f788:	ldr.w	r2, [pc, #1168]	; fc1c <btrfs_show_qgroups@@Base+0x5e8>
    f78c:	movs	r3, #0
    f78e:	mov	sl, r5
    f790:	add	r2, pc
    f792:	str	r2, [sp, #40]	; 0x28
    f794:	ldr	r6, [r5, #0]
    f796:	cbnz	r6, f7d8 <btrfs_show_qgroups@@Base+0x1a4>
    f798:	add.w	r0, r4, #12
    f79c:	strd	r3, r6, [r4, #12]
    f7a0:	str	r6, [r4, #20]
    f7a2:	mov	r1, sl
    f7a4:	str	r0, [r5, #0]
    f7a6:	bl	183ca <rb_insert_color@@Base>
    f7aa:	b.n	f814 <btrfs_show_qgroups@@Base+0x1e0>
    f7ac:	adds	r5, #1
    f7ae:	ldr.w	r3, [fp, #4]
    f7b2:	cmp	r5, r3
    f7b4:	bge.n	f786 <btrfs_show_qgroups@@Base+0x152>
    f7b6:	ldr	r1, [r6, #8]
    f7b8:	cmp	r1, #0
    f7ba:	beq.n	f786 <btrfs_show_qgroups@@Base+0x152>
    f7bc:	ldrd	r2, r3, [r6, #16]!
    f7c0:	mov	r0, r4
    f7c2:	blx	r1
    f7c4:	cmp	r0, #0
    f7c6:	bne.n	f7ac <btrfs_show_qgroups@@Base+0x178>
    f7c8:	mov	r0, r4
    f7ca:	bl	18732 <rb_prev@@Base>
    f7ce:	mov	r4, r0
    f7d0:	b.n	f696 <btrfs_show_qgroups@@Base+0x62>
    f7d2:	mov	r6, fp
    f7d4:	movs	r5, #0
    f7d6:	b.n	f7ae <btrfs_show_qgroups@@Base+0x17a>
    f7d8:	ldr	r3, [sp, #20]
    f7da:	sub.w	r1, r6, #12
    f7de:	cbnz	r3, f7f6 <btrfs_show_qgroups@@Base+0x1c2>
    f7e0:	movs	r2, #0
    f7e2:	mov	r0, r4
    f7e4:	bl	e9f4 <btrfs_find_free_objectid@@Base+0x1f0>
    f7e8:	cmp	r0, #0
    f7ea:	blt.w	fbe0 <btrfs_show_qgroups@@Base+0x5ac>
    f7ee:	beq.n	f814 <btrfs_show_qgroups@@Base+0x1e0>
    f7f0:	ldr	r5, [r5, #0]
    f7f2:	adds	r5, #4
    f7f4:	b.n	fbe4 <btrfs_show_qgroups@@Base+0x5b0>
    f7f6:	ldr	r3, [sp, #20]
    f7f8:	ldr	r3, [r3, #4]
    f7fa:	cmp	r3, #0
    f7fc:	beq.n	f7e0 <btrfs_show_qgroups@@Base+0x1ac>
    f7fe:	ldr.w	r8, [sp, #20]
    f802:	movs	r7, #0
    f804:	mov	r9, r7
    f806:	ldr	r3, [sp, #20]
    f808:	ldr	r3, [r3, #4]
    f80a:	cmp	r7, r3
    f80c:	blt.n	f854 <btrfs_show_qgroups@@Base+0x220>
    f80e:	cmp.w	r9, #0
    f812:	beq.n	f7e0 <btrfs_show_qgroups@@Base+0x1ac>
    f814:	ldr.w	r3, [pc, #1032]	; fc20 <btrfs_show_qgroups@@Base+0x5ec>
    f818:	movs	r7, #0
    f81a:	ldr.w	r8, [pc, #1032]	; fc24 <btrfs_show_qgroups@@Base+0x5f0>
    f81e:	add	r3, pc
    f820:	add	r8, pc
    f822:	vmov	s16, r3
    f826:	ldr.w	r3, [r8, #8]
    f82a:	cmp	r3, #0
    f82c:	beq.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f82e:	movs	r3, #1
    f830:	vmov	r1, s17
    f834:	vmov	r0, s16
    f838:	mov.w	r2, #936	; 0x3a8
    f83c:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    f840:	subs	r3, r7, #1
    f842:	ldr.w	r5, [r8, #12]
    f846:	cmp	r3, #5
    f848:	bhi.n	f880 <btrfs_show_qgroups@@Base+0x24c>
    f84a:	tbb	[pc, r3]
    f84e:	bx	r7
    f850:	str	r5, [r2, #52]	; 0x34
    f852:	ldr	r1, [sp, #452]	; 0x1c4
    f854:	ldr.w	r3, [r8, #8]
    f858:	cmp	r3, #0
    f85a:	beq.n	f80e <btrfs_show_qgroups@@Base+0x1da>
    f85c:	ldr.w	r2, [r8, #12]
    f860:	mov	r0, r4
    f862:	str	r1, [sp, #44]	; 0x2c
    f864:	blx	r3
    f866:	cmp	r0, #0
    f868:	bne.w	fbdc <btrfs_show_qgroups@@Base+0x5a8>
    f86c:	ldr.w	r3, [r8, #8]!
    f870:	adds	r7, #1
    f872:	ldr	r2, [sp, #40]	; 0x28
    f874:	ldr	r1, [sp, #44]	; 0x2c
    f876:	cmp	r3, r2
    f878:	it	eq
    f87a:	moveq.w	r9, #1
    f87e:	b.n	f806 <btrfs_show_qgroups@@Base+0x1d2>
    f880:	ldrd	r1, r3, [r4, #40]	; 0x28
    f884:	add	r5, sp, #56	; 0x38
    f886:	mov	r0, r5
    f888:	uxth	r2, r3
    f88a:	lsrs	r3, r3, #16
    f88c:	str	r3, [sp, #0]
    f88e:	movs	r3, #0
    f890:	str	r3, [sp, #4]
    f892:	ldr	r3, [pc, #916]	; (fc28 <btrfs_show_qgroups@@Base+0x5f4>)
    f894:	strd	r1, r2, [sp, #8]
    f898:	movs	r2, #100	; 0x64
    f89a:	add	r3, pc
    f89c:	movs	r1, #1
    f89e:	blx	8f70 <__sprintf_chk@plt>
    f8a2:	mov	r0, r5
    f8a4:	blx	8f1c <strlen@plt>
    f8a8:	ldr	r3, [pc, #896]	; (fc2c <btrfs_show_qgroups@@Base+0x5f8>)
    f8aa:	add	r3, pc
    f8ac:	ldr	r2, [r3, #16]
    f8ae:	cmp	r0, r2
    f8b0:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f8b2:	str	r0, [r3, #16]
    f8b4:	adds	r7, #1
    f8b6:	add.w	r8, r8, #20
    f8ba:	cmp	r7, #7
    f8bc:	bne.n	f826 <btrfs_show_qgroups@@Base+0x1f2>
    f8be:	b.n	f7c8 <btrfs_show_qgroups@@Base+0x194>
    f8c0:	mov	r2, r5
    f8c2:	ldrd	r0, r1, [r4, #56]	; 0x38
    f8c6:	bl	34da0 <pretty_size_mode@@Base>
    f8ca:	blx	8f1c <strlen@plt>
    f8ce:	ldr	r3, [pc, #864]	; (fc30 <btrfs_show_qgroups@@Base+0x5fc>)
    f8d0:	add	r3, pc
    f8d2:	ldr	r2, [r3, #36]	; 0x24
    f8d4:	cmp	r0, r2
    f8d6:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f8d8:	str	r0, [r3, #36]	; 0x24
    f8da:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f8dc:	mov	r2, r5
    f8de:	ldrd	r0, r1, [r4, #72]	; 0x48
    f8e2:	bl	34da0 <pretty_size_mode@@Base>
    f8e6:	blx	8f1c <strlen@plt>
    f8ea:	ldr	r3, [pc, #840]	; (fc34 <btrfs_show_qgroups@@Base+0x600>)
    f8ec:	add	r3, pc
    f8ee:	ldr	r2, [r3, #56]	; 0x38
    f8f0:	cmp	r0, r2
    f8f2:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f8f4:	str	r0, [r3, #56]	; 0x38
    f8f6:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f8f8:	mov	r2, r5
    f8fa:	ldrd	r0, r1, [r4, #96]	; 0x60
    f8fe:	bl	34da0 <pretty_size_mode@@Base>
    f902:	blx	8f1c <strlen@plt>
    f906:	ldr	r3, [pc, #816]	; (fc38 <btrfs_show_qgroups@@Base+0x604>)
    f908:	add	r3, pc
    f90a:	ldr	r2, [r3, #76]	; 0x4c
    f90c:	cmp	r0, r2
    f90e:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f910:	str	r0, [r3, #76]	; 0x4c
    f912:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f914:	mov	r2, r5
    f916:	ldrd	r0, r1, [r4, #104]	; 0x68
    f91a:	bl	34da0 <pretty_size_mode@@Base>
    f91e:	blx	8f1c <strlen@plt>
    f922:	ldr	r3, [pc, #792]	; (fc3c <btrfs_show_qgroups@@Base+0x608>)
    f924:	add	r3, pc
    f926:	ldr	r2, [r3, #96]	; 0x60
    f928:	cmp	r0, r2
    f92a:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f92c:	str	r0, [r3, #96]	; 0x60
    f92e:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f930:	ldr	r3, [pc, #780]	; (fc40 <btrfs_show_qgroups@@Base+0x60c>)
    f932:	mov	r9, r4
    f934:	ldr.w	r6, [r9, #128]!
    f938:	add.w	sl, sp, #56	; 0x38
    f93c:	add	r3, pc
    f93e:	movs	r5, #0
    f940:	cmp	r9, r6
    f942:	bne.n	f952 <btrfs_show_qgroups@@Base+0x31e>
    f944:	ldr	r3, [pc, #764]	; (fc44 <btrfs_show_qgroups@@Base+0x610>)
    f946:	add	r3, pc
    f948:	ldr	r2, [r3, #116]	; 0x74
    f94a:	cmp	r5, r2
    f94c:	ble.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f94e:	str	r5, [r3, #116]	; 0x74
    f950:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f952:	ldr	r2, [r6, #16]
    f954:	str	r3, [sp, #40]	; 0x28
    f956:	ldrd	r0, r2, [r2, #40]	; 0x28
    f95a:	uxth	r1, r2
    f95c:	lsrs	r2, r2, #16
    f95e:	strd	r0, r1, [sp, #8]
    f962:	movs	r1, #1
    f964:	str	r2, [sp, #0]
    f966:	mov	r0, sl
    f968:	movs	r2, #0
    f96a:	str	r2, [sp, #4]
    f96c:	movs	r2, #100	; 0x64
    f96e:	blx	8f70 <__sprintf_chk@plt>
    f972:	ldr	r6, [r6, #0]
    f974:	ldr	r3, [sp, #40]	; 0x28
    f976:	cmp	r6, r9
    f978:	add	r5, r0
    f97a:	it	ne
    f97c:	addne	r5, #1
    f97e:	b.n	f940 <btrfs_show_qgroups@@Base+0x30c>
    f980:	mov	r9, r4
    f982:	ldr	r3, [pc, #708]	; (fc48 <btrfs_show_qgroups@@Base+0x614>)
    f984:	ldr.w	r5, [r9, #136]!
    f988:	add.w	sl, sp, #56	; 0x38
    f98c:	add	r3, pc
    f98e:	movs	r6, #0
    f990:	subs	r5, #8
    f992:	add.w	r2, r5, #8
    f996:	cmp	r9, r2
    f998:	bne.n	f9ac <btrfs_show_qgroups@@Base+0x378>
    f99a:	ldr	r3, [pc, #688]	; (fc4c <btrfs_show_qgroups@@Base+0x618>)
    f99c:	add	r3, pc
    f99e:	ldr.w	r2, [r3, #136]	; 0x88
    f9a2:	cmp	r6, r2
    f9a4:	it	gt
    f9a6:	strgt.w	r6, [r3, #136]	; 0x88
    f9aa:	b.n	f8b4 <btrfs_show_qgroups@@Base+0x280>
    f9ac:	ldr	r2, [r5, #20]
    f9ae:	str	r3, [sp, #40]	; 0x28
    f9b0:	ldrd	r0, r2, [r2, #40]	; 0x28
    f9b4:	uxth	r1, r2
    f9b6:	lsrs	r2, r2, #16
    f9b8:	strd	r0, r1, [sp, #8]
    f9bc:	movs	r1, #1
    f9be:	str	r2, [sp, #0]
    f9c0:	mov	r0, sl
    f9c2:	movs	r2, #0
    f9c4:	str	r2, [sp, #4]
    f9c6:	movs	r2, #100	; 0x64
    f9c8:	blx	8f70 <__sprintf_chk@plt>
    f9cc:	ldr	r2, [r5, #8]
    f9ce:	ldr	r5, [r5, #8]
    f9d0:	cmp	r2, r9
    f9d2:	ldr	r3, [sp, #40]	; 0x28
    f9d4:	sub.w	r5, r5, #8
    f9d8:	add	r6, r0
    f9da:	it	ne
    f9dc:	addne	r6, #1
    f9de:	b.n	f992 <btrfs_show_qgroups@@Base+0x35e>
    f9e0:	mov	r1, r7
    f9e2:	b.n	f6c6 <btrfs_show_qgroups@@Base+0x92>
    f9e4:	movs	r0, #45	; 0x2d
    f9e6:	blx	8fa8 <putchar@plt+0x4>
    f9ea:	b.n	f6fe <btrfs_show_qgroups@@Base+0xca>
    f9ec:	movs	r0, #32
    f9ee:	blx	8fa8 <putchar@plt+0x4>
    f9f2:	b.n	f70c <btrfs_show_qgroups@@Base+0xd8>
    f9f4:	blx	8f1c <strlen@plt>
    f9f8:	subs	r5, r5, r0
    f9fa:	subs	r5, #1
    f9fc:	bcs.n	fa14 <btrfs_show_qgroups@@Base+0x3e0>
    f9fe:	ldr	r0, [r4, #0]
    fa00:	blx	8f1c <strlen@plt>
    fa04:	mov	r5, r0
    fa06:	subs	r5, #1
    fa08:	bcc.w	f712 <btrfs_show_qgroups@@Base+0xde>
    fa0c:	movs	r0, #45	; 0x2d
    fa0e:	blx	8fa8 <putchar@plt+0x4>
    fa12:	b.n	fa06 <btrfs_show_qgroups@@Base+0x3d2>
    fa14:	movs	r0, #32
    fa16:	blx	8fa8 <putchar@plt+0x4>
    fa1a:	b.n	f9fa <btrfs_show_qgroups@@Base+0x3c6>
    fa1c:	ldr	r3, [pc, #560]	; (fc50 <btrfs_show_qgroups@@Base+0x61c>)
    fa1e:	mov.w	r9, #0
    fa22:	ldr	r7, [sp, #20]
    fa24:	add	r3, pc
    fa26:	vmov	s16, r3
    fa2a:	ldr	r3, [r7, #8]
    fa2c:	cmp	r3, #0
    fa2e:	beq.w	fb8e <btrfs_show_qgroups@@Base+0x55a>
    fa32:	movs	r3, #1
    fa34:	vmov	r1, s17
    fa38:	vmov	r0, s16
    fa3c:	movs	r2, #217	; 0xd9
    fa3e:	bl	edac <btrfs_find_free_objectid@@Base+0x5a8>
    fa42:	add.w	r3, r9, #4294967295	; 0xffffffff
    fa46:	ldrd	r6, r5, [r7, #12]
    fa4a:	cmp	r3, #5
    fa4c:	bhi.n	fa58 <btrfs_show_qgroups@@Base+0x424>
    fa4e:	tbb	[pc, r3]
    fa52:	subs	r7, r2, #0
    fa54:	ldr	r5, [r2, #84]	; 0x54
    fa56:	strh	r3, [r4, #16]
    fa58:	ldrd	r1, r2, [r4, #28]
    fa5c:	movs	r0, #1
    fa5e:	uxth	r3, r2
    fa60:	strd	r1, r3, [sp]
    fa64:	ldr	r1, [pc, #492]	; (fc54 <btrfs_show_qgroups@@Base+0x620>)
    fa66:	lsrs	r2, r2, #16
    fa68:	movs	r3, #0
    fa6a:	add	r1, pc
    fa6c:	blx	900c <__printf_chk@plt+0x4>
    fa70:	mov	r1, r0
    fa72:	movs	r0, #0
    fa74:	bl	ebd8 <btrfs_find_free_objectid@@Base+0x3d4>
    fa78:	movs	r0, #32
    fa7a:	blx	8fa8 <putchar@plt+0x4>
    fa7e:	b.n	fb8e <btrfs_show_qgroups@@Base+0x55a>
    fa80:	ldrd	r0, r1, [r4, #44]	; 0x2c
    fa84:	mov	r3, r5
    fa86:	mov	r2, r6
    fa88:	bl	ebfc <btrfs_find_free_objectid@@Base+0x3f8>
    fa8c:	b.n	fa78 <btrfs_show_qgroups@@Base+0x444>
    fa8e:	ldrd	r0, r1, [r4, #60]	; 0x3c
    fa92:	mov	r3, r5
    fa94:	mov	r2, r6
    fa96:	b.n	fa88 <btrfs_show_qgroups@@Base+0x454>
    fa98:	ldr.w	sl, [pc, #444]	; fc58 <btrfs_show_qgroups@@Base+0x624>
    fa9c:	mov	r6, r4
    fa9e:	ldr.w	fp, [pc, #444]	; fc5c <btrfs_show_qgroups@@Base+0x628>
    faa2:	movs	r5, #0
    faa4:	ldr.w	r8, [r6, #116]!
    faa8:	add	sl, pc
    faaa:	add	fp, pc
    faac:	cmp	r6, r8
    faae:	bne.n	fac8 <btrfs_show_qgroups@@Base+0x494>
    fab0:	ldr	r3, [r4, #116]	; 0x74
    fab2:	cmp	r6, r3
    fab4:	bne.n	fac2 <btrfs_show_qgroups@@Base+0x48e>
    fab6:	ldr	r1, [pc, #424]	; (fc60 <btrfs_show_qgroups@@Base+0x62c>)
    fab8:	movs	r0, #1
    faba:	add	r1, pc
    fabc:	blx	900c <__printf_chk@plt+0x4>
    fac0:	add	r5, r0
    fac2:	mov	r1, r5
    fac4:	movs	r0, #5
    fac6:	b.n	fa74 <btrfs_show_qgroups@@Base+0x440>
    fac8:	ldr.w	r3, [r8, #16]
    facc:	movs	r0, #1
    face:	ldrd	r1, r2, [r3, #40]	; 0x28
    fad2:	uxth	r3, r2
    fad4:	lsrs	r2, r2, #16
    fad6:	strd	r1, r3, [sp]
    fada:	movs	r3, #0
    fadc:	mov	r1, sl
    fade:	blx	900c <__printf_chk@plt+0x4>
    fae2:	ldr.w	r3, [r8]
    fae6:	cmp	r3, r6
    fae8:	add	r5, r0
    faea:	beq.n	faf6 <btrfs_show_qgroups@@Base+0x4c2>
    faec:	mov	r1, fp
    faee:	movs	r0, #1
    faf0:	blx	900c <__printf_chk@plt+0x4>
    faf4:	add	r5, r0
    faf6:	ldr.w	r8, [r8]
    fafa:	b.n	faac <btrfs_show_qgroups@@Base+0x478>
    fafc:	ldr	r3, [r4, #76]	; 0x4c
    fafe:	and.w	r3, r3, #1
    fb02:	str	r3, [sp, #24]
    fb04:	movs	r3, #0
    fb06:	str	r3, [sp, #28]
    fb08:	ldrd	r2, r3, [sp, #24]
    fb0c:	orrs	r3, r2
    fb0e:	beq.n	fb1a <btrfs_show_qgroups@@Base+0x4e6>
    fb10:	ldrd	r0, r1, [r4, #84]	; 0x54
    fb14:	mov	r3, r5
    fb16:	mov	r2, r6
    fb18:	b.n	fa88 <btrfs_show_qgroups@@Base+0x454>
    fb1a:	ldr	r3, [pc, #328]	; (fc64 <btrfs_show_qgroups@@Base+0x630>)
    fb1c:	mov	r2, r5
    fb1e:	ldr	r1, [pc, #328]	; (fc68 <btrfs_show_qgroups@@Base+0x634>)
    fb20:	add	r3, pc
    fb22:	add	r1, pc
    fb24:	movs	r0, #1
    fb26:	blx	900c <__printf_chk@plt+0x4>
    fb2a:	b.n	fa78 <btrfs_show_qgroups@@Base+0x444>
    fb2c:	ldr	r3, [r4, #76]	; 0x4c
    fb2e:	and.w	r3, r3, #2
    fb32:	str	r3, [sp, #32]
    fb34:	movs	r3, #0
    fb36:	str	r3, [sp, #36]	; 0x24
    fb38:	ldrd	r2, r3, [sp, #32]
    fb3c:	orrs	r3, r2
    fb3e:	beq.n	fb4a <btrfs_show_qgroups@@Base+0x516>
    fb40:	ldrd	r0, r1, [r4, #92]	; 0x5c
    fb44:	mov	r3, r5
    fb46:	mov	r2, r6
    fb48:	b.n	fa88 <btrfs_show_qgroups@@Base+0x454>
    fb4a:	ldr	r3, [pc, #288]	; (fc6c <btrfs_show_qgroups@@Base+0x638>)
    fb4c:	mov	r2, r5
    fb4e:	ldr	r1, [pc, #288]	; (fc70 <btrfs_show_qgroups@@Base+0x63c>)
    fb50:	add	r3, pc
    fb52:	add	r1, pc
    fb54:	b.n	fb24 <btrfs_show_qgroups@@Base+0x4f0>
    fb56:	mov	r8, r4
    fb58:	ldr.w	sl, [pc, #280]	; fc74 <btrfs_show_qgroups@@Base+0x640>
    fb5c:	ldr.w	r5, [r8, #124]!
    fb60:	movs	r6, #0
    fb62:	ldr.w	fp, [pc, #276]	; fc78 <btrfs_show_qgroups@@Base+0x644>
    fb66:	add	sl, pc
    fb68:	subs	r5, #8
    fb6a:	add	fp, pc
    fb6c:	add.w	r3, r5, #8
    fb70:	cmp	r8, r3
    fb72:	bne.n	fbac <btrfs_show_qgroups@@Base+0x578>
    fb74:	ldr	r3, [r4, #124]	; 0x7c
    fb76:	cmp	r8, r3
    fb78:	bne.n	fb86 <btrfs_show_qgroups@@Base+0x552>
    fb7a:	ldr	r1, [pc, #256]	; (fc7c <btrfs_show_qgroups@@Base+0x648>)
    fb7c:	movs	r0, #1
    fb7e:	add	r1, pc
    fb80:	blx	900c <__printf_chk@plt+0x4>
    fb84:	add	r6, r0
    fb86:	mov	r1, r6
    fb88:	movs	r0, #6
    fb8a:	bl	ebd8 <btrfs_find_free_objectid@@Base+0x3d4>
    fb8e:	add.w	r9, r9, #1
    fb92:	adds	r7, #20
    fb94:	cmp.w	r9, #7
    fb98:	bne.w	fa2a <btrfs_show_qgroups@@Base+0x3f6>
    fb9c:	movs	r0, #10
    fb9e:	blx	8fa8 <putchar@plt+0x4>
    fba2:	mov	r0, r4
    fba4:	bl	18706 <rb_next@@Base>
    fba8:	mov	r4, r0
    fbaa:	b.n	f73a <btrfs_show_qgroups@@Base+0x106>
    fbac:	ldr	r3, [r5, #20]
    fbae:	movs	r0, #1
    fbb0:	ldrd	r1, r2, [r3, #40]	; 0x28
    fbb4:	uxth	r3, r2
    fbb6:	lsrs	r2, r2, #16
    fbb8:	strd	r1, r3, [sp]
    fbbc:	movs	r3, #0
    fbbe:	mov	r1, sl
    fbc0:	blx	900c <__printf_chk@plt+0x4>
    fbc4:	ldr	r3, [r5, #8]
    fbc6:	cmp	r3, r8
    fbc8:	add	r6, r0
    fbca:	beq.n	fbd6 <btrfs_show_qgroups@@Base+0x5a2>
    fbcc:	mov	r1, fp
    fbce:	movs	r0, #1
    fbd0:	blx	900c <__printf_chk@plt+0x4>
    fbd4:	add	r6, r0
    fbd6:	ldr	r5, [r5, #8]
    fbd8:	subs	r5, #8
    fbda:	b.n	fb6c <btrfs_show_qgroups@@Base+0x538>
    fbdc:	bge.w	f7f0 <btrfs_show_qgroups@@Base+0x1bc>
    fbe0:	ldr	r5, [r5, #0]
    fbe2:	adds	r5, #8
    fbe4:	mov	r3, r6
    fbe6:	b.n	f794 <btrfs_show_qgroups@@Base+0x160>
    fbe8:	ldr	r0, [sp, #16]
    fbea:	add	sp, #164	; 0xa4
    fbec:	vpop	{d8}
    fbf0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fbf4:	lsls	r0, r1, #10
    fbf6:	movs	r0, r0
    fbf8:			; <UNDEFINED> instruction: 0xb6ca
    fbfa:	movs	r5, r0
    fbfc:	bl	ffccbbfe <__bss_end__@@Base+0xffc5f976>
    fc00:	bl	ffc59c02 <__bss_end__@@Base+0xffbed97a>
    fc04:	lsls	r3, r6, #10
    fc06:	movs	r3, r0
    fc08:	cbnz	r6, fc22 <btrfs_show_qgroups@@Base+0x5ee>
    fc0a:	movs	r5, r0
    fc0c:	lsls	r7, r2, #7
    fc0e:	movs	r3, r0
    fc10:	vhadd.u16	d16, d11, d2
    fc14:	lsls	r7, r1, #8
    fc16:	movs	r3, r0
    fc18:	push	{r1, r3, r6, r7, lr}
    fc1a:	movs	r5, r0
    fc1c:	bl	271c1e <__bss_end__@@Base+0x205996>
    fc20:	movs	r0, r7
    fc22:	movs	r3, r0
    fc24:			; <UNDEFINED> instruction: 0xb7e4
    fc26:	movs	r5, r0
    fc28:	cdp2	0, 6, cr0, cr12, cr2, {0}
    fc2c:			; <UNDEFINED> instruction: 0xb75a
    fc2e:	movs	r5, r0
    fc30:			; <UNDEFINED> instruction: 0xb734
    fc32:	movs	r5, r0
    fc34:			; <UNDEFINED> instruction: 0xb718
    fc36:	movs	r5, r0
    fc38:			; <UNDEFINED> instruction: 0xb6fc
    fc3a:	movs	r5, r0
    fc3c:			; <UNDEFINED> instruction: 0xb6e0
    fc3e:	movs	r5, r0
    fc40:	stc2l	0, cr0, [sl, #8]
    fc44:			; <UNDEFINED> instruction: 0xb6be
    fc46:	movs	r5, r0
    fc48:	ldc2l	0, cr0, [sl, #-8]!
    fc4c:			; <UNDEFINED> instruction: 0xb668
    fc4e:	movs	r5, r0
    fc50:	cdp2	0, 3, cr0, cr2, cr2, {0}
    fc54:	ldc2	0, cr0, [ip], {2}
    fc58:	mrrc2	0, 0, r0, lr, cr2
    fc5c:	ldc2l	0, cr0, [sl, #8]
    fc60:	stc2l	0, cr0, [ip, #8]
    fc64:	asrs	r5, r2, #8
    fc66:	movs	r3, r0
    fc68:			; <UNDEFINED> instruction: 0xfae50002
    fc6c:	asrs	r5, r4, #7
    fc6e:	movs	r3, r0
    fc70:			; <UNDEFINED> instruction: 0xfab50002
    fc74:	umull	r0, r0, r0, r2
    fc78:	ldc2	0, cr0, [sl, #-8]
    fc7c:	stc2	0, cr0, [r8, #-8]

0000fc80 <btrfs_qgroup_parse_sort_string@@Base>:
    fc80:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fc84:	mov	r7, r1
    fc86:	blx	8c78 <strdup@plt+0x4>
    fc8a:	mov	r5, r0
    fc8c:	cmp	r0, #0
    fc8e:	beq.n	fd14 <btrfs_qgroup_parse_sort_string@@Base+0x94>
    fc90:	ldr	r1, [pc, #160]	; (fd34 <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    fc92:	ldr.w	r8, [pc, #164]	; fd38 <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    fc96:	add	r1, pc
    fc98:	ldr.w	r9, [pc, #160]	; fd3c <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    fc9c:	blx	9070 <strtok@plt>
    fca0:	add	r8, pc
    fca2:	add	r9, pc
    fca4:	mov	r4, r0
    fca6:	cbz	r4, fcd6 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    fca8:	add.w	fp, r8, #160	; 0xa0
    fcac:	add.w	sl, r4, #1
    fcb0:	mov	r6, fp
    fcb2:	b.n	fccc <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    fcb4:	mov	r1, r4
    fcb6:	mov	r0, r3
    fcb8:	str	r3, [sp, #4]
    fcba:	blx	8b04 <strcmp@plt>
    fcbe:	cbz	r0, fce4 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    fcc0:	ldr	r3, [sp, #4]
    fcc2:	mov	r1, sl
    fcc4:	mov	r0, r3
    fcc6:	blx	8b04 <strcmp@plt>
    fcca:	cbz	r0, fce4 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    fccc:	ldr.w	r3, [r6], #4
    fcd0:	cmp	r3, #0
    fcd2:	bne.n	fcb4 <btrfs_qgroup_parse_sort_string@@Base+0x34>
    fcd4:	movs	r4, #1
    fcd6:	mov	r0, r5
    fcd8:	blx	8b84 <free@plt+0x4>
    fcdc:	mov	r0, r4
    fcde:	add	sp, #12
    fce0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fce4:	ldrb	r3, [r4, #0]
    fce6:	cmp	r3, #43	; 0x2b
    fce8:	bne.n	fcf0 <btrfs_qgroup_parse_sort_string@@Base+0x70>
    fcea:	adds	r4, #1
    fcec:	movs	r2, #0
    fcee:	b.n	fcf8 <btrfs_qgroup_parse_sort_string@@Base+0x78>
    fcf0:	cmp	r3, #45	; 0x2d
    fcf2:	bne.n	fcec <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    fcf4:	adds	r4, #1
    fcf6:	movs	r2, #1
    fcf8:	movs	r6, #0
    fcfa:	ldr.w	r1, [fp], #4
    fcfe:	mov	r0, r4
    fd00:	str	r2, [sp, #4]
    fd02:	blx	8b04 <strcmp@plt>
    fd06:	ldr	r2, [sp, #4]
    fd08:	mov	sl, r0
    fd0a:	cbz	r0, fd1a <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    fd0c:	adds	r6, #1
    fd0e:	cmp	r6, #5
    fd10:	bne.n	fcfa <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    fd12:	b.n	fcd4 <btrfs_qgroup_parse_sort_string@@Base+0x54>
    fd14:	mvn.w	r4, #11
    fd18:	b.n	fcdc <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    fd1a:	mov	r1, r6
    fd1c:	mov	r0, r7
    fd1e:	bl	f330 <btrfs_qgroup_setup_comparer@@Base>
    fd22:	subs	r4, r0, #0
    fd24:	blt.n	fcd6 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    fd26:	mov	r1, r9
    fd28:	mov	r0, sl
    fd2a:	blx	9070 <strtok@plt>
    fd2e:	mov	r4, r0
    fd30:	b.n	fca6 <btrfs_qgroup_parse_sort_string@@Base+0x26>
    fd32:	nop
    fd34:	umlal	r0, r0, lr, r2
    fd38:	cbz	r4, fd94 <qgroup_inherit_add_group@@Base+0x42>
    fd3a:	movs	r5, r0
    fd3c:	umlal	r0, r0, r2, r2

0000fd40 <qgroup_inherit_size@@Base>:
    fd40:	ldr	r3, [r0, #24]
    fd42:	ldr	r2, [r0, #16]
    fd44:	adds	r2, r3, r2
    fd46:	ldr	r3, [r0, #8]
    fd48:	adds	r3, #9
    fd4a:	add.w	r0, r3, r2, lsl #1
    fd4e:	lsls	r0, r0, #3
    fd50:	bx	lr

0000fd52 <qgroup_inherit_add_group@@Base>:
    fd52:	push	{r4, r5, r6, lr}
    fd54:	mov	r6, r0
    fd56:	mov	r0, r1
    fd58:	bl	35254 <parse_qgroupid@@Base>
    fd5c:	mov	r4, r0
    fd5e:	mov	r5, r1
    fd60:	orrs.w	r3, r4, r5
    fd64:	bne.n	fd74 <qgroup_inherit_add_group@@Base+0x22>
    fd66:	ldr	r0, [pc, #56]	; (fda0 <qgroup_inherit_add_group@@Base+0x4e>)
    fd68:	add	r0, pc
    fd6a:	bl	1bd1c <__btrfs_error@@Base>
    fd6e:	mvn.w	r0, #21
    fd72:	pop	{r4, r5, r6, pc}
    fd74:	ldr	r2, [r6, #0]
    fd76:	cbz	r2, fd7a <qgroup_inherit_add_group@@Base+0x28>
    fd78:	ldr	r2, [r2, #8]
    fd7a:	movs	r1, #1
    fd7c:	mov	r0, r6
    fd7e:	bl	ec1c <btrfs_find_free_objectid@@Base+0x418>
    fd82:	cmp	r0, #0
    fd84:	bne.n	fd72 <qgroup_inherit_add_group@@Base+0x20>
    fd86:	ldr	r3, [r6, #0]
    fd88:	ldrd	r2, r1, [r3, #8]
    fd8c:	adds	r6, r2, #1
    fd8e:	adc.w	r1, r1, #0
    fd92:	strd	r6, r1, [r3, #8]
    fd96:	add.w	r3, r3, r2, lsl #3
    fd9a:	strd	r4, r5, [r3, #72]	; 0x48
    fd9e:	b.n	fd72 <qgroup_inherit_add_group@@Base+0x20>
    fda0:	smlad	r0, r2, r2, r0

0000fda4 <qgroup_inherit_add_copy@@Base>:
    fda4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    fda8:	mov	r6, r1
    fdaa:	mov	sl, r0
    fdac:	movs	r1, #58	; 0x3a
    fdae:	mov	r0, r6
    fdb0:	mov	r5, r2
    fdb2:	blx	8f28 <strchr@plt>
    fdb6:	mov	r4, r0
    fdb8:	cbnz	r0, fdca <qgroup_inherit_add_copy@@Base+0x26>
    fdba:	ldr	r0, [pc, #152]	; (fe54 <qgroup_inherit_add_copy@@Base+0xb0>)
    fdbc:	add	r0, pc
    fdbe:	bl	1bd1c <__btrfs_error@@Base>
    fdc2:	mvn.w	r0, #21
    fdc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    fdca:	mov	r8, r0
    fdcc:	movs	r3, #0
    fdce:	mov	r0, r6
    fdd0:	strb.w	r3, [r8], #1
    fdd4:	bl	35254 <parse_qgroupid@@Base>
    fdd8:	mov	r6, r0
    fdda:	mov	r0, r8
    fddc:	mov	r7, r1
    fdde:	bl	35254 <parse_qgroupid@@Base>
    fde2:	movs	r3, #58	; 0x3a
    fde4:	strb	r3, [r4, #0]
    fde6:	orrs.w	r3, r6, r7
    fdea:	mov	r8, r0
    fdec:	mov	r9, r1
    fdee:	beq.n	fdba <qgroup_inherit_add_copy@@Base+0x16>
    fdf0:	orrs.w	r3, r8, r9
    fdf4:	beq.n	fdba <qgroup_inherit_add_copy@@Base+0x16>
    fdf6:	ldr.w	r4, [sl]
    fdfa:	cbz	r4, fe06 <qgroup_inherit_add_copy@@Base+0x62>
    fdfc:	ldr	r2, [r4, #16]
    fdfe:	ldr	r4, [r4, #8]
    fe00:	muls	r2, r5
    fe02:	add.w	r4, r4, r2, lsl #1
    fe06:	mov	r2, r4
    fe08:	movs	r1, #2
    fe0a:	mov	r0, sl
    fe0c:	bl	ec1c <btrfs_find_free_objectid@@Base+0x418>
    fe10:	cmp	r0, #0
    fe12:	bne.n	fdc6 <qgroup_inherit_add_copy@@Base+0x22>
    fe14:	ldr.w	r3, [sl]
    fe18:	add.w	r3, r3, r4, lsl #3
    fe1c:	strd	r6, r7, [r3, #72]	; 0x48
    fe20:	ldr.w	r2, [sl]
    fe24:	add.w	r2, r2, r4, lsl #3
    fe28:	strd	r8, r9, [r2, #80]	; 0x50
    fe2c:	ldr.w	r3, [sl]
    fe30:	cbnz	r5, fe42 <qgroup_inherit_add_copy@@Base+0x9e>
    fe32:	ldrd	r2, r1, [r3, #16]
    fe36:	adds	r2, #1
    fe38:	adc.w	r1, r1, #0
    fe3c:	strd	r2, r1, [r3, #16]
    fe40:	b.n	fdc6 <qgroup_inherit_add_copy@@Base+0x22>
    fe42:	ldrd	r2, r1, [r3, #24]
    fe46:	adds	r2, #1
    fe48:	adc.w	r1, r1, #0
    fe4c:	strd	r2, r1, [r3, #24]
    fe50:	b.n	fdc6 <qgroup_inherit_add_copy@@Base+0x22>
    fe52:	nop
    fe54:	mla	r0, r0, r2, r0
    fe58:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    fe5c:	mov	r5, r2
    fe5e:	ldr	r2, [pc, #84]	; (feb4 <qgroup_inherit_add_copy@@Base+0x110>)
    fe60:	mov	r4, r3
    fe62:	ldr	r3, [pc, #84]	; (feb8 <qgroup_inherit_add_copy@@Base+0x114>)
    fe64:	add	r6, sp, #4
    fe66:	add	r2, pc
    fe68:	mov	r7, r0
    fe6a:	mov	r8, r1
    fe6c:	ldr	r3, [r2, r3]
    fe6e:	ldr	r3, [r3, #0]
    fe70:	str	r3, [sp, #12]
    fe72:	mov.w	r3, #0
    fe76:	cbz	r5, fe7c <qgroup_inherit_add_copy@@Base+0xd8>
    fe78:	cbnz	r4, fe94 <qgroup_inherit_add_copy@@Base+0xf0>
    fe7a:	mov	r4, r5
    fe7c:	ldr	r2, [pc, #60]	; (febc <qgroup_inherit_add_copy@@Base+0x118>)
    fe7e:	ldr	r3, [pc, #56]	; (feb8 <qgroup_inherit_add_copy@@Base+0x114>)
    fe80:	add	r2, pc
    fe82:	str	r4, [r6, #0]
    fe84:	ldr	r0, [sp, #4]
    fe86:	ldr	r3, [r2, r3]
    fe88:	ldr	r2, [r3, #0]
    fe8a:	ldr	r3, [sp, #12]
    fe8c:	eors	r2, r3
    fe8e:	beq.n	feac <qgroup_inherit_add_copy@@Base+0x108>
    fe90:	blx	8c90 <__stack_chk_fail@plt>
    fe94:	mov	r2, r4
    fe96:	mov	r1, r5
    fe98:	mov	r0, r7
    fe9a:	blx	r8
    fe9c:	cmp	r0, #0
    fe9e:	itete	le
    fea0:	strle	r5, [r6, #0]
    fea2:	strgt	r4, [r6, #0]
    fea4:	ldrle	r5, [r5, #0]
    fea6:	ldrgt	r4, [r4, #0]
    fea8:	ldr	r6, [r6, #0]
    feaa:	b.n	fe76 <qgroup_inherit_add_copy@@Base+0xd2>
    feac:	add	sp, #16
    feae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    feb2:	nop
    feb4:	add	r6, sp, #712	; 0x2c8
    feb6:	movs	r5, r0
    feb8:	lsls	r0, r1, #10
    feba:	movs	r0, r0
    febc:	add	r6, sp, #608	; 0x260
    febe:	movs	r5, r0

0000fec0 <list_sort@@Base>:
    fec0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fec4:	mov	r7, r2
    fec6:	ldr	r2, [pc, #268]	; (ffd4 <list_sort@@Base+0x114>)
    fec8:	sub	sp, #100	; 0x64
    feca:	ldr	r3, [pc, #268]	; (ffd8 <list_sort@@Base+0x118>)
    fecc:	mov	r8, r0
    fece:	add	r2, pc
    fed0:	mov	r4, r1
    fed2:	ldr	r3, [r2, r3]
    fed4:	ldr	r3, [r3, #0]
    fed6:	str	r3, [sp, #92]	; 0x5c
    fed8:	mov.w	r3, #0
    fedc:	ldr	r3, [r1, #0]
    fede:	cmp	r1, r3
    fee0:	beq.n	ff34 <list_sort@@Base+0x74>
    fee2:	add.w	r9, sp, #8
    fee6:	movs	r2, #84	; 0x54
    fee8:	movs	r1, #0
    feea:	ldr.w	fp, [pc, #240]	; ffdc <list_sort@@Base+0x11c>
    feee:	mov	r0, r9
    fef0:	movs	r5, #0
    fef2:	blx	8f98 <memset@plt+0x4>
    fef6:	ldr	r3, [r4, #4]
    fef8:	add	fp, pc
    fefa:	str	r5, [r3, #0]
    fefc:	ldr	r3, [r4, #0]
    fefe:	cbnz	r3, ff48 <list_sort@@Base+0x88>
    ff00:	mov	r6, r3
    ff02:	cmp	r6, r5
    ff04:	bne.n	ff96 <list_sort@@Base+0xd6>
    ff06:	add	r2, sp, #96	; 0x60
    ff08:	mov	r5, r4
    ff0a:	add.w	r6, r2, r6, lsl #2
    ff0e:	ldr.w	r6, [r6, #-88]
    ff12:	cbz	r6, ff1a <list_sort@@Base+0x5a>
    ff14:	cmp	r3, #0
    ff16:	bne.n	ffaa <list_sort@@Base+0xea>
    ff18:	mov	r3, r6
    ff1a:	str	r3, [r5, #0]
    ff1c:	ldr	r2, [r5, #0]
    ff1e:	mov	r0, r8
    ff20:	mov	r1, r2
    ff22:	blx	r7
    ff24:	ldr	r3, [r5, #0]
    ff26:	str	r5, [r3, #4]
    ff28:	ldr	r5, [r5, #0]
    ff2a:	ldr	r3, [r5, #0]
    ff2c:	cmp	r3, #0
    ff2e:	bne.n	ff1c <list_sort@@Base+0x5c>
    ff30:	str	r4, [r5, #0]
    ff32:	str	r5, [r4, #4]
    ff34:	ldr	r2, [pc, #168]	; (ffe0 <list_sort@@Base+0x120>)
    ff36:	ldr	r3, [pc, #160]	; (ffd8 <list_sort@@Base+0x118>)
    ff38:	add	r2, pc
    ff3a:	ldr	r3, [r2, r3]
    ff3c:	ldr	r2, [r3, #0]
    ff3e:	ldr	r3, [sp, #92]	; 0x5c
    ff40:	eors	r2, r3
    ff42:	beq.n	ffcc <list_sort@@Base+0x10c>
    ff44:	blx	8c90 <__stack_chk_fail@plt>
    ff48:	ldr	r2, [r3, #0]
    ff4a:	mov	sl, r9
    ff4c:	str	r2, [sp, #0]
    ff4e:	movs	r2, #0
    ff50:	mov	r6, r2
    ff52:	str	r2, [r3, #0]
    ff54:	ldr.w	r2, [sl], #4
    ff58:	cbnz	r2, ff7e <list_sort@@Base+0xbe>
    ff5a:	cmp	r6, r5
    ff5c:	ble.n	ff70 <list_sort@@Base+0xb0>
    ff5e:	cmp	r6, #20
    ff60:	bne.n	ff92 <list_sort@@Base+0xd2>
    ff62:	mov	r0, fp
    ff64:	str	r3, [sp, #4]
    ff66:	blx	8e24 <puts@plt+0x4>
    ff6a:	ldr	r3, [sp, #4]
    ff6c:	movs	r5, #19
    ff6e:	mov	r6, r5
    ff70:	add	r2, sp, #96	; 0x60
    ff72:	add.w	r6, r2, r6, lsl #2
    ff76:	str.w	r3, [r6, #-88]
    ff7a:	ldr	r3, [sp, #0]
    ff7c:	b.n	fefe <list_sort@@Base+0x3e>
    ff7e:	mov	r1, r7
    ff80:	mov	r0, r8
    ff82:	bl	fe58 <qgroup_inherit_add_copy@@Base+0xb4>
    ff86:	adds	r6, #1
    ff88:	movs	r2, #0
    ff8a:	str.w	r2, [sl, #-4]
    ff8e:	mov	r3, r0
    ff90:	b.n	ff54 <list_sort@@Base+0x94>
    ff92:	mov	r5, r6
    ff94:	b.n	ff70 <list_sort@@Base+0xb0>
    ff96:	ldr.w	r2, [r9, r6, lsl #2]
    ff9a:	cbz	r2, ffa6 <list_sort@@Base+0xe6>
    ff9c:	mov	r1, r7
    ff9e:	mov	r0, r8
    ffa0:	bl	fe58 <qgroup_inherit_add_copy@@Base+0xb4>
    ffa4:	mov	r3, r0
    ffa6:	adds	r6, #1
    ffa8:	b.n	ff02 <list_sort@@Base+0x42>
    ffaa:	mov	r2, r3
    ffac:	mov	r1, r6
    ffae:	mov	r0, r8
    ffb0:	str	r3, [sp, #0]
    ffb2:	blx	r7
    ffb4:	ldr	r3, [sp, #0]
    ffb6:	cmp	r0, #0
    ffb8:	itete	le
    ffba:	strle	r6, [r5, #0]
    ffbc:	strgt	r3, [r5, #0]
    ffbe:	strle	r5, [r6, #4]
    ffc0:	strgt	r5, [r3, #4]
    ffc2:	ite	le
    ffc4:	ldrle	r6, [r6, #0]
    ffc6:	ldrgt	r3, [r3, #0]
    ffc8:	ldr	r5, [r5, #0]
    ffca:	b.n	ff12 <list_sort@@Base+0x52>
    ffcc:	add	sp, #100	; 0x64
    ffce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ffd2:	nop
    ffd4:	add	r6, sp, #296	; 0x128
    ffd6:	movs	r5, r0
    ffd8:	lsls	r0, r1, #10
    ffda:	movs	r0, r0
    ffdc:			; <UNDEFINED> instruction: 0xfaca0002
    ffe0:	add	r5, sp, #896	; 0x380
    ffe2:	movs	r5, r0
    ffe4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ffe8:	mov	r8, r1
    ffea:	ldr	r1, [pc, #392]	; (10174 <list_sort@@Base+0x2b4>)
    ffec:	mov	r5, r2
    ffee:	ldr	r2, [pc, #392]	; (10178 <list_sort@@Base+0x2b8>)
    fff0:	subs	r4, r3, #0
    fff2:	add	r1, pc
    fff4:	sub	sp, #24
    fff6:	mov.w	r9, #0
    fffa:	mov	r0, r8
    fffc:	ldr	r2, [r1, r2]
    fffe:	add	r1, sp, #16
   10000:	ldr.w	sl, [pc, #376]	; 1017c <list_sort@@Base+0x2bc>
   10004:	ldr	r2, [r2, #0]
   10006:	str	r2, [sp, #20]
   10008:	mov.w	r2, #0
   1000c:	ite	ne
   1000e:	movne	r2, #2
   10010:	moveq	r2, r9
   10012:	str.w	r9, [sp, #16]
   10016:	bl	353cc <open_file_or_dir3@@Base>
   1001a:	add	sl, pc
   1001c:	adds	r3, r0, #1
   1001e:	mov	r7, r0
   10020:	bne.n	10066 <list_sort@@Base+0x1a6>
   10022:	blx	8f58 <__errno_location@plt>
   10026:	mov	r1, r8
   10028:	mov	r6, r9
   1002a:	ldr	r4, [r0, #0]
   1002c:	ldr	r0, [pc, #336]	; (10180 <list_sort@@Base+0x2c0>)
   1002e:	negs	r4, r4
   10030:	add	r0, pc
   10032:	bl	1bd1c <__btrfs_error@@Base>
   10036:	movs	r5, #0
   10038:	mov	r0, r6
   1003a:	blx	8b84 <free@plt+0x4>
   1003e:	mov	r0, r5
   10040:	blx	8b84 <free@plt+0x4>
   10044:	cmp	r7, #0
   10046:	blt.n	10050 <list_sort@@Base+0x190>
   10048:	ldr	r1, [sp, #16]
   1004a:	mov	r0, r7
   1004c:	bl	35600 <close_file_or_dir@@Base>
   10050:	ldr	r2, [pc, #304]	; (10184 <list_sort@@Base+0x2c4>)
   10052:	ldr	r3, [pc, #292]	; (10178 <list_sort@@Base+0x2b8>)
   10054:	add	r2, pc
   10056:	ldr	r3, [r2, r3]
   10058:	ldr	r2, [r3, #0]
   1005a:	ldr	r3, [sp, #20]
   1005c:	eors	r2, r3
   1005e:	beq.w	1016c <list_sort@@Base+0x2ac>
   10062:	blx	8c90 <__stack_chk_fail@plt>
   10066:	mov	r0, r5
   10068:	blx	8f1c <strlen@plt>
   1006c:	adds	r0, #7
   1006e:	blx	8e40 <malloc@plt+0x4>
   10072:	mov	r6, r0
   10074:	cmp	r0, #0
   10076:	beq.n	10160 <list_sort@@Base+0x2a0>
   10078:	ldr	r3, [pc, #268]	; (10188 <list_sort@@Base+0x2c8>)
   1007a:	add	r3, pc
   1007c:	ldr	r0, [r3, #0]
   1007e:	ldrh	r3, [r3, #4]
   10080:	str	r0, [r6, #0]
   10082:	mov	r0, r5
   10084:	strh	r3, [r6, #4]
   10086:	blx	8f1c <strlen@plt>
   1008a:	mov	r1, r5
   1008c:	mov	r2, r0
   1008e:	adds	r0, r6, #6
   10090:	blx	8bdc <memcpy@plt+0x4>
   10094:	mov	r0, r5
   10096:	blx	8f1c <strlen@plt>
   1009a:	add	r0, r6
   1009c:	strb.w	r9, [r0, #6]
   100a0:	cbz	r4, 100e4 <list_sort@@Base+0x224>
   100a2:	ldr	r1, [pc, #232]	; (1018c <list_sort@@Base+0x2cc>)
   100a4:	mov	r0, r4
   100a6:	add	r1, pc
   100a8:	blx	8b04 <strcmp@plt>
   100ac:	cbz	r0, 100d8 <list_sort@@Base+0x218>
   100ae:	ldr	r1, [pc, #224]	; (10190 <list_sort@@Base+0x2d0>)
   100b0:	mov	r0, r4
   100b2:	add	r1, pc
   100b4:	blx	8b04 <strcmp@plt>
   100b8:	cbz	r0, 100de <list_sort@@Base+0x21e>
   100ba:	mov	r0, r4
   100bc:	movs	r5, #0
   100be:	blx	8f1c <strlen@plt>
   100c2:	mov	r2, r4
   100c4:	mov	r1, r6
   100c6:	str	r5, [sp, #0]
   100c8:	mov	r3, r0
   100ca:	mov	r0, r7
   100cc:	blx	8fe4 <fsetxattr@plt>
   100d0:	cmp	r0, r5
   100d2:	blt.n	100f4 <list_sort@@Base+0x234>
   100d4:	mov	r4, r5
   100d6:	b.n	10038 <list_sort@@Base+0x178>
   100d8:	ldr	r4, [pc, #184]	; (10194 <list_sort@@Base+0x2d4>)
   100da:	add	r4, pc
   100dc:	b.n	100ba <list_sort@@Base+0x1fa>
   100de:	ldr	r4, [pc, #184]	; (10198 <list_sort@@Base+0x2d8>)
   100e0:	add	r4, pc
   100e2:	b.n	100ba <list_sort@@Base+0x1fa>
   100e4:	mov	r3, r4
   100e6:	mov	r2, r4
   100e8:	mov	r1, r6
   100ea:	mov	r0, r7
   100ec:	blx	8b9c <fgetxattr@plt>
   100f0:	subs	r3, r0, #0
   100f2:	bge.n	10118 <list_sort@@Base+0x258>
   100f4:	blx	8f58 <__errno_location@plt>
   100f8:	ldr	r3, [r0, #0]
   100fa:	cmp	r3, #61	; 0x3d
   100fc:	beq.n	10168 <list_sort@@Base+0x2a8>
   100fe:	cbnz	r4, 10112 <list_sort@@Base+0x252>
   10100:	ldr	r1, [pc, #152]	; (1019c <list_sort@@Base+0x2dc>)
   10102:	add	r1, pc
   10104:	ldr	r0, [pc, #152]	; (101a0 <list_sort@@Base+0x2e0>)
   10106:	mov	r2, r8
   10108:	negs	r4, r3
   1010a:	add	r0, pc
   1010c:	bl	1bd1c <__btrfs_error@@Base>
   10110:	b.n	10036 <list_sort@@Base+0x176>
   10112:	ldr	r1, [pc, #144]	; (101a4 <list_sort@@Base+0x2e4>)
   10114:	add	r1, pc
   10116:	b.n	10104 <list_sort@@Base+0x244>
   10118:	str	r3, [sp, #12]
   1011a:	blx	8e40 <malloc@plt+0x4>
   1011e:	mov	r5, r0
   10120:	cbz	r0, 10162 <list_sort@@Base+0x2a2>
   10122:	ldr	r3, [sp, #12]
   10124:	mov	r2, r0
   10126:	mov	r1, r6
   10128:	mov	r0, r7
   1012a:	blx	8b9c <fgetxattr@plt>
   1012e:	ldr	r3, [sp, #12]
   10130:	cmp	r0, #0
   10132:	bge.n	10148 <list_sort@@Base+0x288>
   10134:	blx	8f58 <__errno_location@plt>
   10138:	mov	r1, r8
   1013a:	ldr	r4, [r0, #0]
   1013c:	ldr	r0, [pc, #104]	; (101a8 <list_sort@@Base+0x2e8>)
   1013e:	negs	r4, r4
   10140:	add	r0, pc
   10142:	bl	1bd1c <__btrfs_error@@Base>
   10146:	b.n	10038 <list_sort@@Base+0x178>
   10148:	ldr	r2, [pc, #96]	; (101ac <list_sort@@Base+0x2ec>)
   1014a:	movs	r1, #1
   1014c:	ldr.w	r2, [sl, r2]
   10150:	str	r5, [sp, #0]
   10152:	mov	r0, r2
   10154:	ldr	r2, [pc, #88]	; (101b0 <list_sort@@Base+0x2f0>)
   10156:	ldr	r0, [r0, #0]
   10158:	add	r2, pc
   1015a:	blx	9040 <__fprintf_chk@plt+0x4>
   1015e:	b.n	10038 <list_sort@@Base+0x178>
   10160:	mov	r5, r0
   10162:	mvn.w	r4, #11
   10166:	b.n	10038 <list_sort@@Base+0x178>
   10168:	movs	r5, #0
   1016a:	b.n	100d4 <list_sort@@Base+0x214>
   1016c:	mov	r0, r4
   1016e:	add	sp, #24
   10170:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10174:	add	r5, sp, #152	; 0x98
   10176:	movs	r5, r0
   10178:	lsls	r0, r1, #10
   1017a:	movs	r0, r0
   1017c:	add	r4, sp, #1016	; 0x3f8
   1017e:	movs	r5, r0
   10180:	ldr??.w	r0, [r4, #2]
   10184:	add	r4, sp, #784	; 0x310
   10186:	movs	r5, r0
   10188:	vld1.8	{d0[0]}, [r0], r2
   1018c:	b.n	10642 <ulist_next@@Base+0x2e>
   1018e:	movs	r2, r0
   10190:	lsrs	r3, r0, #18
   10192:	movs	r3, r0
   10194:			; <UNDEFINED> instruction: 0xfb910002
   10198:	smull	r0, r0, fp, r2
   1019c:	ldr??.w	r0, [lr, #2]
   101a0:	ldrsb.w	r0, [r7, r2]
   101a4:	ldr	r4, [pc, #900]	; (1052c <ulist_add_merge@@Base+0xee>)
   101a6:	movs	r3, r0
   101a8:	vst4.8	{d0-d3}, [r5], r2
   101ac:	lsls	r4, r0, #11
   101ae:	movs	r0, r0
   101b0:	ldrsb.w	r0, [r2, r2]
   101b4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   101b6:	mov	r5, r1
   101b8:	ldr	r1, [pc, #268]	; (102c8 <list_sort@@Base+0x408>)
   101ba:	mov	r4, r3
   101bc:	ldr	r2, [pc, #268]	; (102cc <list_sort@@Base+0x40c>)
   101be:	add	r1, pc
   101c0:	ldr	r2, [r1, r2]
   101c2:	ldr	r2, [r2, #0]
   101c4:	str	r2, [sp, #12]
   101c6:	mov.w	r2, #0
   101ca:	cmp	r3, #0
   101cc:	beq.n	1025e <list_sort@@Base+0x39e>
   101ce:	ldr	r1, [pc, #256]	; (102d0 <list_sort@@Base+0x410>)
   101d0:	mov	r0, r3
   101d2:	add	r1, pc
   101d4:	blx	8b04 <strcmp@plt>
   101d8:	cbnz	r0, 10220 <list_sort@@Base+0x360>
   101da:	movs	r3, #1
   101dc:	strb.w	r3, [sp, #11]
   101e0:	ldrb.w	r1, [sp, #11]
   101e4:	mov	r0, r5
   101e6:	bl	37408 <btrfs_util_set_subvolume_read_only@@Base>
   101ea:	mov	r4, r0
   101ec:	cbz	r0, 10240 <list_sort@@Base+0x380>
   101ee:	blx	8f58 <__errno_location@plt>
   101f2:	mov	r5, r0
   101f4:	ldr	r0, [r0, #0]
   101f6:	blx	8e58 <strerror@plt>
   101fa:	mov	r6, r0
   101fc:	mov	r0, r4
   101fe:	bl	3d5a8 <btrfs_util_strerror@@Base>
   10202:	mov	r1, r0
   10204:	cbz	r0, 10254 <list_sort@@Base+0x394>
   10206:	str	r0, [sp, #4]
   10208:	mov	r0, r6
   1020a:	blx	8b04 <strcmp@plt>
   1020e:	ldr	r1, [sp, #4]
   10210:	cbz	r0, 10254 <list_sort@@Base+0x394>
   10212:	ldr	r0, [pc, #192]	; (102d4 <list_sort@@Base+0x414>)
   10214:	add	r0, pc
   10216:	bl	1bd1c <__btrfs_error@@Base>
   1021a:	ldr	r0, [r5, #0]
   1021c:	negs	r0, r0
   1021e:	b.n	10240 <list_sort@@Base+0x380>
   10220:	ldr	r1, [pc, #180]	; (102d8 <list_sort@@Base+0x418>)
   10222:	mov	r0, r4
   10224:	add	r1, pc
   10226:	blx	8b04 <strcmp@plt>
   1022a:	cbnz	r0, 10232 <list_sort@@Base+0x372>
   1022c:	strb.w	r0, [sp, #11]
   10230:	b.n	101e0 <list_sort@@Base+0x320>
   10232:	ldr	r0, [pc, #168]	; (102dc <list_sort@@Base+0x41c>)
   10234:	mov	r1, r4
   10236:	add	r0, pc
   10238:	bl	1bd1c <__btrfs_error@@Base>
   1023c:	mvn.w	r0, #21
   10240:	ldr	r2, [pc, #156]	; (102e0 <list_sort@@Base+0x420>)
   10242:	ldr	r3, [pc, #136]	; (102cc <list_sort@@Base+0x40c>)
   10244:	add	r2, pc
   10246:	ldr	r3, [r2, r3]
   10248:	ldr	r2, [r3, #0]
   1024a:	ldr	r3, [sp, #12]
   1024c:	eors	r2, r3
   1024e:	beq.n	102c4 <list_sort@@Base+0x404>
   10250:	blx	8c90 <__stack_chk_fail@plt>
   10254:	ldr	r0, [pc, #140]	; (102e4 <list_sort@@Base+0x424>)
   10256:	add	r0, pc
   10258:	bl	1bd1c <__btrfs_error@@Base>
   1025c:	b.n	1021a <list_sort@@Base+0x35a>
   1025e:	mov	r0, r5
   10260:	add.w	r1, sp, #11
   10264:	bl	3735c <btrfs_util_get_subvolume_read_only@@Base>
   10268:	mov	r5, r0
   1026a:	cbz	r0, 102a6 <list_sort@@Base+0x3e6>
   1026c:	blx	8f58 <__errno_location@plt>
   10270:	mov	r4, r0
   10272:	ldr	r0, [r0, #0]
   10274:	blx	8e58 <strerror@plt>
   10278:	mov	r6, r0
   1027a:	mov	r0, r5
   1027c:	bl	3d5a8 <btrfs_util_strerror@@Base>
   10280:	mov	r1, r0
   10282:	cbz	r0, 1029c <list_sort@@Base+0x3dc>
   10284:	str	r0, [sp, #4]
   10286:	mov	r0, r6
   10288:	blx	8b04 <strcmp@plt>
   1028c:	ldr	r1, [sp, #4]
   1028e:	cbz	r0, 1029c <list_sort@@Base+0x3dc>
   10290:	ldr	r0, [pc, #84]	; (102e8 <list_sort@@Base+0x428>)
   10292:	add	r0, pc
   10294:	bl	1bd1c <__btrfs_error@@Base>
   10298:	ldr	r0, [r4, #0]
   1029a:	b.n	1021c <list_sort@@Base+0x35c>
   1029c:	ldr	r0, [pc, #76]	; (102ec <list_sort@@Base+0x42c>)
   1029e:	add	r0, pc
   102a0:	bl	1bd1c <__btrfs_error@@Base>
   102a4:	b.n	10298 <list_sort@@Base+0x3d8>
   102a6:	ldrb.w	r3, [sp, #11]
   102aa:	cbnz	r3, 102be <list_sort@@Base+0x3fe>
   102ac:	ldr	r2, [pc, #64]	; (102f0 <list_sort@@Base+0x430>)
   102ae:	add	r2, pc
   102b0:	ldr	r1, [pc, #64]	; (102f4 <list_sort@@Base+0x434>)
   102b2:	movs	r0, #1
   102b4:	add	r1, pc
   102b6:	blx	900c <__printf_chk@plt+0x4>
   102ba:	movs	r0, #0
   102bc:	b.n	10240 <list_sort@@Base+0x380>
   102be:	ldr	r2, [pc, #56]	; (102f8 <list_sort@@Base+0x438>)
   102c0:	add	r2, pc
   102c2:	b.n	102b0 <list_sort@@Base+0x3f0>
   102c4:	add	sp, #16
   102c6:	pop	{r4, r5, r6, pc}
   102c8:	add	r3, sp, #360	; 0x168
   102ca:	movs	r5, r0
   102cc:	lsls	r0, r1, #10
   102ce:	movs	r0, r0
   102d0:	strh.w	r0, [sl, #2]
   102d4:	b.n	fbe6 <btrfs_show_qgroups@@Base+0x5b2>
   102d6:	movs	r2, r0
   102d8:	ldr.w	r0, [sp, r2]
   102dc:	ldr.w	r0, [r1, r2]
   102e0:	add	r2, sp, #848	; 0x350
   102e2:	movs	r5, r0
   102e4:	vaddl.s16	q8, d1, d2
   102e8:	b.n	fafe <btrfs_show_qgroups@@Base+0x4ca>
   102ea:	movs	r2, r0
   102ec:	vaddl.s8	q0, d9, d2
   102f0:			; <UNDEFINED> instruction: 0xf7d30002
   102f4:			; <UNDEFINED> instruction: 0xf7f20002
   102f8:			; <UNDEFINED> instruction: 0xf7bc0002
   102fc:	mov	r0, r1
   102fe:	ldr	r1, [pc, #96]	; (10360 <list_sort@@Base+0x4a0>)
   10300:	ldr	r2, [pc, #96]	; (10364 <list_sort@@Base+0x4a4>)
   10302:	add	r1, pc
   10304:	push	{r4, r5, lr}
   10306:	sub	sp, #276	; 0x114
   10308:	ldr	r2, [r1, r2]
   1030a:	mov	r1, r3
   1030c:	ldr	r5, [pc, #88]	; (10368 <list_sort@@Base+0x4a8>)
   1030e:	ldr	r2, [r2, #0]
   10310:	str	r2, [sp, #268]	; 0x10c
   10312:	mov.w	r2, #0
   10316:	add	r5, pc
   10318:	cbz	r3, 10334 <list_sort@@Base+0x474>
   1031a:	bl	34f32 <set_label@@Base>
   1031e:	mov	r4, r0
   10320:	ldr	r2, [pc, #72]	; (1036c <list_sort@@Base+0x4ac>)
   10322:	ldr	r3, [pc, #64]	; (10364 <list_sort@@Base+0x4a4>)
   10324:	add	r2, pc
   10326:	ldr	r3, [r2, r3]
   10328:	ldr	r2, [r3, #0]
   1032a:	ldr	r3, [sp, #268]	; 0x10c
   1032c:	eors	r2, r3
   1032e:	beq.n	10358 <list_sort@@Base+0x498>
   10330:	blx	8c90 <__stack_chk_fail@plt>
   10334:	add	r3, sp, #12
   10336:	str	r3, [sp, #4]
   10338:	mov	r1, r3
   1033a:	bl	34f04 <get_label@@Base>
   1033e:	ldr	r3, [sp, #4]
   10340:	mov	r4, r0
   10342:	cmp	r0, #0
   10344:	bne.n	10320 <list_sort@@Base+0x460>
   10346:	ldr	r2, [pc, #40]	; (10370 <list_sort@@Base+0x4b0>)
   10348:	movs	r1, #1
   1034a:	ldr	r0, [r5, r2]
   1034c:	ldr	r2, [pc, #36]	; (10374 <list_sort@@Base+0x4b4>)
   1034e:	ldr	r0, [r0, #0]
   10350:	add	r2, pc
   10352:	blx	9040 <__fprintf_chk@plt+0x4>
   10356:	b.n	10320 <list_sort@@Base+0x460>
   10358:	mov	r0, r4
   1035a:	add	sp, #276	; 0x114
   1035c:	pop	{r4, r5, pc}
   1035e:	nop
   10360:	add	r2, sp, #88	; 0x58
   10362:	movs	r5, r0
   10364:	lsls	r0, r1, #10
   10366:	movs	r0, r0
   10368:	add	r2, sp, #8
   1036a:	movs	r5, r0
   1036c:	add	r1, sp, #976	; 0x3d0
   1036e:	movs	r5, r0
   10370:	lsls	r4, r0, #11
   10372:	movs	r0, r0
   10374:			; <UNDEFINED> instruction: 0xf75d0002
   10378:	ldr	r2, [pc, #60]	; (103b8 <list_sort@@Base+0x4f8>)
   1037a:	movs	r1, #16
   1037c:	ldr	r3, [pc, #60]	; (103bc <list_sort@@Base+0x4fc>)
   1037e:	push	{r4, lr}
   10380:	add	r2, pc
   10382:	sub	sp, #72	; 0x48
   10384:	add	r4, sp, #4
   10386:	ldr	r3, [r2, r3]
   10388:	mov	r0, r4
   1038a:	ldr	r3, [r3, #0]
   1038c:	str	r3, [sp, #68]	; 0x44
   1038e:	mov.w	r3, #0
   10392:	blx	8e98 <backtrace@plt>
   10396:	movs	r2, #2
   10398:	mov	r1, r0
   1039a:	mov	r0, r4
   1039c:	blx	9214 <backtrace_symbols_fd@plt>
   103a0:	ldr	r2, [pc, #28]	; (103c0 <list_sort@@Base+0x500>)
   103a2:	ldr	r3, [pc, #24]	; (103bc <list_sort@@Base+0x4fc>)
   103a4:	add	r2, pc
   103a6:	ldr	r3, [r2, r3]
   103a8:	ldr	r2, [r3, #0]
   103aa:	ldr	r3, [sp, #68]	; 0x44
   103ac:	eors	r2, r3
   103ae:	beq.n	103b4 <list_sort@@Base+0x4f4>
   103b0:	blx	8c90 <__stack_chk_fail@plt>
   103b4:	add	sp, #72	; 0x48
   103b6:	pop	{r4, pc}
   103b8:	add	r1, sp, #608	; 0x260
   103ba:	movs	r5, r0
   103bc:	lsls	r0, r1, #10
   103be:	movs	r0, r0
   103c0:	add	r1, sp, #464	; 0x1d0
   103c2:	movs	r5, r0

000103c4 <ulist_init@@Base>:
   103c4:	adds	r3, r0, #4
   103c6:	strd	r3, r3, [r0, #4]
   103ca:	movs	r3, #0
   103cc:	str	r3, [r0, #12]
   103ce:	str	r3, [r0, #0]
   103d0:	bx	lr

000103d2 <ulist_release@@Base>:
   103d2:	push	{r4, r5, r6, lr}
   103d4:	mov	r5, r0
   103d6:	mov	r4, r0
   103d8:	ldr.w	r0, [r5, #4]!
   103dc:	ldr.w	r6, [r0], #-16
   103e0:	subs	r6, #16
   103e2:	add.w	r3, r0, #16
   103e6:	cmp	r5, r3
   103e8:	bne.n	103f4 <ulist_release@@Base+0x22>
   103ea:	movs	r3, #0
   103ec:	strd	r5, r5, [r4, #4]
   103f0:	str	r3, [r4, #12]
   103f2:	pop	{r4, r5, r6, pc}
   103f4:	blx	8b84 <free@plt+0x4>
   103f8:	ldr	r3, [r6, #16]
   103fa:	mov	r0, r6
   103fc:	sub.w	r6, r3, #16
   10400:	b.n	103e2 <ulist_release@@Base+0x10>

00010402 <ulist_reinit@@Base>:
   10402:	push	{r4, lr}
   10404:	mov	r4, r0
   10406:	bl	103d2 <ulist_release@@Base>
   1040a:	mov	r0, r4
   1040c:	ldmia.w	sp!, {r4, lr}
   10410:	b.w	103c4 <ulist_init@@Base>

00010414 <ulist_alloc@@Base>:
   10414:	push	{r4, lr}
   10416:	movs	r0, #16
   10418:	blx	8e40 <malloc@plt+0x4>
   1041c:	mov	r4, r0
   1041e:	cbz	r0, 10424 <ulist_alloc@@Base+0x10>
   10420:	bl	103c4 <ulist_init@@Base>
   10424:	mov	r0, r4
   10426:	pop	{r4, pc}

00010428 <ulist_free@@Base>:
   10428:	push	{r4, lr}
   1042a:	mov	r4, r0
   1042c:	cbz	r0, 1043c <ulist_free@@Base+0x14>
   1042e:	bl	103d2 <ulist_release@@Base>
   10432:	mov	r0, r4
   10434:	ldmia.w	sp!, {r4, lr}
   10438:	b.w	8b80 <free@plt>
   1043c:	pop	{r4, pc}

0001043e <ulist_add_merge@@Base>:
   1043e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   10442:	sub	sp, #20
   10444:	mov	r6, r0
   10446:	ldr	r7, [pc, #220]	; (10524 <ulist_add_merge@@Base+0xe6>)
   10448:	ldr	r0, [sp, #56]	; 0x38
   1044a:	mov	r8, r2
   1044c:	ldr	r5, [r6, #12]
   1044e:	mov	r9, r3
   10450:	add	r7, pc
   10452:	cbnz	r5, 10464 <ulist_add_merge@@Base+0x26>
   10454:	movs	r0, #40	; 0x28
   10456:	blx	8e40 <malloc@plt+0x4>
   1045a:	mov	r4, r0
   1045c:	cbnz	r0, 10480 <ulist_add_merge@@Base+0x42>
   1045e:	mvn.w	r0, #11
   10462:	b.n	1051e <ulist_add_merge@@Base+0xe0>
   10464:	ldrd	r2, r3, [r5, #-24]
   10468:	cmp	r3, r9
   1046a:	it	eq
   1046c:	cmpeq	r2, r8
   1046e:	bcs.n	10474 <ulist_add_merge@@Base+0x36>
   10470:	ldr	r5, [r5, #4]
   10472:	b.n	10452 <ulist_add_merge@@Base+0x14>
   10474:	cmp	r9, r3
   10476:	it	eq
   10478:	cmpeq	r8, r2
   1047a:	bcs.n	10512 <ulist_add_merge@@Base+0xd4>
   1047c:	ldr	r5, [r5, #8]
   1047e:	b.n	10452 <ulist_add_merge@@Base+0x14>
   10480:	ldrd	r2, r3, [sp, #48]	; 0x30
   10484:	add.w	ip, r6, #12
   10488:	strd	r8, r9, [r4]
   1048c:	strd	r2, r3, [r4, #8]
   10490:	mov	r2, ip
   10492:	ldr	r3, [r2, #0]
   10494:	cbnz	r3, 104c2 <ulist_add_merge@@Base+0x84>
   10496:	add.w	r0, r4, #24
   1049a:	strd	r5, r3, [r4, #24]
   1049e:	str	r3, [r4, #32]
   104a0:	mov	r1, ip
   104a2:	str	r0, [r2, #0]
   104a4:	bl	183ca <rb_insert_color@@Base>
   104a8:	ldr	r3, [r6, #8]
   104aa:	add.w	r2, r4, #16
   104ae:	adds	r1, r6, #4
   104b0:	str	r2, [r6, #8]
   104b2:	movs	r0, #1
   104b4:	strd	r1, r3, [r4, #16]
   104b8:	str	r2, [r3, #0]
   104ba:	ldr	r3, [r6, #0]
   104bc:	adds	r3, #1
   104be:	str	r3, [r6, #0]
   104c0:	b.n	1051e <ulist_add_merge@@Base+0xe0>
   104c2:	ldrd	r0, r1, [r3, #-24]
   104c6:	cmp	r1, r9
   104c8:	it	eq
   104ca:	cmpeq	r0, r8
   104cc:	bcs.n	104d4 <ulist_add_merge@@Base+0x96>
   104ce:	adds	r2, r3, #4
   104d0:	mov	r5, r3
   104d2:	b.n	10492 <ulist_add_merge@@Base+0x54>
   104d4:	cmp	r9, r1
   104d6:	it	eq
   104d8:	cmpeq	r8, r0
   104da:	bcs.n	104e2 <ulist_add_merge@@Base+0xa4>
   104dc:	add.w	r2, r3, #8
   104e0:	b.n	104d0 <ulist_add_merge@@Base+0x92>
   104e2:	ldr	r3, [pc, #68]	; (10528 <ulist_add_merge@@Base+0xea>)
   104e4:	movs	r1, #1
   104e6:	ldr	r2, [pc, #68]	; (1052c <ulist_add_merge@@Base+0xee>)
   104e8:	ldr	r0, [r7, r3]
   104ea:	movs	r3, #0
   104ec:	str	r3, [sp, #12]
   104ee:	add	r2, pc
   104f0:	ldr	r3, [pc, #60]	; (10530 <ulist_add_merge@@Base+0xf2>)
   104f2:	add	r3, pc
   104f4:	str	r3, [sp, #8]
   104f6:	ldr	r3, [pc, #60]	; (10534 <ulist_add_merge@@Base+0xf6>)
   104f8:	add	r3, pc
   104fa:	str	r3, [sp, #4]
   104fc:	movs	r3, #211	; 0xd3
   104fe:	str	r3, [sp, #0]
   10500:	ldr	r3, [pc, #52]	; (10538 <ulist_add_merge@@Base+0xfa>)
   10502:	ldr	r0, [r0, #0]
   10504:	add	r3, pc
   10506:	blx	9040 <__fprintf_chk@plt+0x4>
   1050a:	bl	10378 <list_sort@@Base+0x4b8>
   1050e:	blx	91c0 <abort@plt>
   10512:	cbz	r0, 1051e <ulist_add_merge@@Base+0xe0>
   10514:	ldrd	r2, r3, [r5, #-16]
   10518:	strd	r2, r3, [r0]
   1051c:	movs	r0, #0
   1051e:	add	sp, #20
   10520:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   10524:	add	r0, sp, #800	; 0x320
   10526:	movs	r5, r0
   10528:	lsls	r4, r3, #10
   1052a:	movs	r0, r0
   1052c:	ldrd	r0, r0, [ip, #8]
   10530:	movw	r0, #63490	; 0xf802
   10534:			; <UNDEFINED> instruction: 0xf6610002
   10538:			; <UNDEFINED> instruction: 0xf6270002

0001053c <ulist_add@@Base>:
   1053c:	push	{r4, r5, lr}
   1053e:	sub	sp, #20
   10540:	ldr	r1, [sp, #40]	; 0x28
   10542:	ldrd	r4, r5, [sp, #32]
   10546:	str	r1, [sp, #12]
   10548:	movs	r1, #0
   1054a:	strd	r4, r5, [sp]
   1054e:	str	r1, [sp, #8]
   10550:	bl	1043e <ulist_add_merge@@Base>
   10554:	add	sp, #20
   10556:	pop	{r4, r5, pc}

00010558 <ulist_del@@Base>:
   10558:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1055c:	mov	r5, r0
   1055e:	ldr	r4, [r5, #12]
   10560:	mov	r0, r2
   10562:	ldr.w	r8, [pc, #152]	; 105fc <ulist_del@@Base+0xa4>
   10566:	mov	r1, r3
   10568:	add	r8, pc
   1056a:	cbnz	r4, 10570 <ulist_del@@Base+0x18>
   1056c:	movs	r0, #1
   1056e:	b.n	10592 <ulist_del@@Base+0x3a>
   10570:	ldrd	r2, r3, [r4, #-24]
   10574:	cmp	r3, r1
   10576:	it	eq
   10578:	cmpeq	r2, r0
   1057a:	bcs.n	10580 <ulist_del@@Base+0x28>
   1057c:	ldr	r4, [r4, #4]
   1057e:	b.n	1056a <ulist_del@@Base+0x12>
   10580:	cmp	r1, r3
   10582:	it	eq
   10584:	cmpeq	r0, r2
   10586:	bcs.n	10598 <ulist_del@@Base+0x40>
   10588:	ldr	r4, [r4, #8]
   1058a:	b.n	1056a <ulist_del@@Base+0x12>
   1058c:	movs	r0, #0
   1058e:	subs	r3, #1
   10590:	str	r3, [r5, #0]
   10592:	add	sp, #16
   10594:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10598:	ldrd	r6, r7, [r4, #-16]
   1059c:	ldrd	r2, r3, [sp, #40]	; 0x28
   105a0:	cmp	r7, r3
   105a2:	it	eq
   105a4:	cmpeq	r6, r2
   105a6:	bne.n	1056c <ulist_del@@Base+0x14>
   105a8:	add.w	r1, r5, #12
   105ac:	mov	r0, r4
   105ae:	bl	18470 <rb_erase@@Base>
   105b2:	ldrd	r2, r3, [r4, #-8]
   105b6:	sub.w	r6, r4, #24
   105ba:	str	r3, [r2, #4]
   105bc:	mov	r0, r6
   105be:	str	r2, [r3, #0]
   105c0:	blx	8b84 <free@plt+0x4>
   105c4:	ldr	r3, [r5, #0]
   105c6:	cmp	r3, #0
   105c8:	bne.n	1058c <ulist_del@@Base+0x34>
   105ca:	ldr	r3, [pc, #52]	; (10600 <ulist_del@@Base+0xa8>)
   105cc:	movs	r1, #1
   105ce:	ldr	r2, [pc, #52]	; (10604 <ulist_del@@Base+0xac>)
   105d0:	ldr.w	r0, [r8, r3]
   105d4:	add	r2, pc
   105d6:	ldr	r3, [pc, #48]	; (10608 <ulist_del@@Base+0xb0>)
   105d8:	str	r1, [sp, #12]
   105da:	add	r3, pc
   105dc:	str	r3, [sp, #8]
   105de:	ldr	r3, [pc, #44]	; (1060c <ulist_del@@Base+0xb4>)
   105e0:	add	r3, pc
   105e2:	adds	r3, #16
   105e4:	str	r3, [sp, #4]
   105e6:	movs	r3, #140	; 0x8c
   105e8:	str	r3, [sp, #0]
   105ea:	ldr	r3, [pc, #36]	; (10610 <ulist_del@@Base+0xb8>)
   105ec:	ldr	r0, [r0, #0]
   105ee:	add	r3, pc
   105f0:	blx	9040 <__fprintf_chk@plt+0x4>
   105f4:	bl	10378 <list_sort@@Base+0x4b8>
   105f8:	blx	91c0 <abort@plt>
   105fc:	add	r7, pc, #704	; (adr r7, 108c0 <ulist_next@@Base+0x2ac>)
   105fe:	movs	r5, r0
   10600:	lsls	r4, r3, #10
   10602:	movs	r0, r0
   10604:	ble.n	1051c <ulist_add_merge@@Base+0xde>
   10606:	movs	r2, r0
   10608:	sbc.w	r0, ip, #8519680	; 0x820000
   1060c:	sbcs.w	r0, r9, #8519680	; 0x820000
   10610:			; <UNDEFINED> instruction: 0xf53d0002

00010614 <ulist_next@@Base>:
   10614:	ldr	r3, [r0, #4]
   10616:	adds	r2, r0, #4
   10618:	cmp	r2, r3
   1061a:	beq.n	1062e <ulist_next@@Base+0x1a>
   1061c:	ldr	r0, [r1, #0]
   1061e:	cbz	r0, 10626 <ulist_next@@Base+0x12>
   10620:	ldr	r3, [r0, #0]
   10622:	cmp	r2, r3
   10624:	beq.n	1062e <ulist_next@@Base+0x1a>
   10626:	str	r3, [r1, #0]
   10628:	ldr	r0, [r1, #0]
   1062a:	subs	r0, #16
   1062c:	bx	lr
   1062e:	movs	r0, #0
   10630:	bx	lr
   10632:	nop
   10634:	ldrd	r2, r3, [r0]
   10638:	str	r3, [r2, #4]
   1063a:	str	r2, [r3, #0]
   1063c:	ldr	r2, [pc, #8]	; (10648 <ulist_next@@Base+0x34>)
   1063e:	ldr	r3, [pc, #12]	; (1064c <ulist_next@@Base+0x38>)
   10640:	strd	r2, r3, [r0]
   10644:	bx	lr
   10646:	nop
   10648:	lsls	r0, r0, #4
   1064a:	movs	r0, r2
   1064c:	lsls	r0, r0, #8
   1064e:	movs	r0, r4
   10650:	mov	r3, r1
   10652:	ldr	r1, [pc, #44]	; (10680 <ulist_next@@Base+0x6c>)
   10654:	mov	r2, r0
   10656:	add	r1, pc
   10658:	push	{r4, r5, lr}
   1065a:	ldr	r0, [r1, #0]
   1065c:	cbz	r0, 10678 <ulist_next@@Base+0x64>
   1065e:	ldrd	r4, r5, [r0, #-96]	; 0x60
   10662:	cmp	r3, r5
   10664:	it	eq
   10666:	cmpeq	r2, r4
   10668:	bcs.n	1066e <ulist_next@@Base+0x5a>
   1066a:	ldr	r0, [r0, #8]
   1066c:	b.n	1065c <ulist_next@@Base+0x48>
   1066e:	cmp	r5, r3
   10670:	it	eq
   10672:	cmpeq	r4, r2
   10674:	bcc.n	1067a <ulist_next@@Base+0x66>
   10676:	subs	r0, #96	; 0x60
   10678:	pop	{r4, r5, pc}
   1067a:	ldr	r0, [r0, #4]
   1067c:	b.n	1065c <ulist_next@@Base+0x48>
   1067e:	nop
   10680:	cbnz	r6, 106fe <ulist_next@@Base+0xea>
   10682:	movs	r5, r0
   10684:	subs	r0, #32
   10686:	b.w	8b80 <free@plt>
   1068a:	ldr	r3, [pc, #92]	; (106e8 <ulist_next@@Base+0xd4>)
   1068c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10690:	add	r3, pc
   10692:	mov	r4, r0
   10694:	mov	r5, r1
   10696:	ldr	r3, [r3, #24]
   10698:	cbz	r3, 106c4 <ulist_next@@Base+0xb0>
   1069a:	ldrd	r0, r1, [r3, #-32]
   1069e:	cmp	r5, r1
   106a0:	it	eq
   106a2:	cmpeq	r4, r0
   106a4:	bcs.n	106aa <ulist_next@@Base+0x96>
   106a6:	ldr	r3, [r3, #8]
   106a8:	b.n	10698 <ulist_next@@Base+0x84>
   106aa:	cmp	r1, r5
   106ac:	it	eq
   106ae:	cmpeq	r0, r4
   106b0:	bcs.n	106b6 <ulist_next@@Base+0xa2>
   106b2:	ldr	r3, [r3, #4]
   106b4:	b.n	10698 <ulist_next@@Base+0x84>
   106b6:	sub.w	r4, r3, #32
   106ba:	mov	r0, r3
   106bc:	bl	18732 <rb_prev@@Base>
   106c0:	mov	r3, r4
   106c2:	cbnz	r0, 106ca <ulist_next@@Base+0xb6>
   106c4:	mov	r0, r3
   106c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   106ca:	ldrd	r6, r7, [r0, #-32]
   106ce:	sub.w	r8, r0, #32
   106d2:	ldrd	r4, r5, [r3]
   106d6:	cmp	r7, r5
   106d8:	it	eq
   106da:	cmpeq	r6, r4
   106dc:	bne.n	106c4 <ulist_next@@Base+0xb0>
   106de:	bl	18732 <rb_prev@@Base>
   106e2:	mov	r3, r8
   106e4:	b.n	106c2 <ulist_next@@Base+0xae>
   106e6:	nop
   106e8:	cbnz	r4, 10758 <ulist_next@@Base+0x144>
   106ea:	movs	r5, r0
   106ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106f0:	mov	r1, r3
   106f2:	sub	sp, #28
   106f4:	mov	r5, r0
   106f6:	mov	r0, r2
   106f8:	mov	r6, r2
   106fa:	mov	r7, r3
   106fc:	bl	1068a <ulist_next@@Base+0x76>
   10700:	cbnz	r0, 10710 <ulist_next@@Base+0xfc>
   10702:	ldr	r0, [pc, #208]	; (107d4 <ulist_next@@Base+0x1c0>)
   10704:	mov	r2, r6
   10706:	mov	r3, r7
   10708:	add	r0, pc
   1070a:	bl	1bd1c <__btrfs_error@@Base>
   1070e:	b.n	1072e <ulist_next@@Base+0x11a>
   10710:	mov	r4, r0
   10712:	ldrd	r8, r9, [r4], #32
   10716:	cmp	r9, r7
   10718:	it	eq
   1071a:	cmpeq	r8, r6
   1071c:	beq.n	10738 <ulist_next@@Base+0x124>
   1071e:	ldr	r0, [pc, #184]	; (107d8 <ulist_next@@Base+0x1c4>)
   10720:	mov	r2, r8
   10722:	mov	r3, r9
   10724:	strd	r6, r7, [sp]
   10728:	add	r0, pc
   1072a:	bl	1bd1c <__btrfs_error@@Base>
   1072e:	mvn.w	r0, #4
   10732:	add	sp, #28
   10734:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10738:	str	r0, [sp, #20]
   1073a:	mov	r0, r4
   1073c:	bl	18732 <rb_prev@@Base>
   10740:	ldr	r1, [sp, #20]
   10742:	cbz	r0, 10756 <ulist_next@@Base+0x142>
   10744:	ldrd	r2, r3, [r0, #-32]
   10748:	cmp	r3, r9
   1074a:	it	eq
   1074c:	cmpeq	r2, r8
   1074e:	bne.n	10756 <ulist_next@@Base+0x142>
   10750:	ldr	r0, [pc, #136]	; (107dc <ulist_next@@Base+0x1c8>)
   10752:	add	r0, pc
   10754:	b.n	1070a <ulist_next@@Base+0xf6>
   10756:	mov.w	sl, #0
   1075a:	mov.w	fp, #0
   1075e:	ldrd	r2, r3, [r1, #24]
   10762:	orrs.w	r0, r2, r3
   10766:	beq.n	1078e <ulist_next@@Base+0x17a>
   10768:	cmp	r3, #0
   1076a:	it	eq
   1076c:	cmpeq	r2, #5
   1076e:	beq.n	1077a <ulist_next@@Base+0x166>
   10770:	cmp.w	r2, #256	; 0x100
   10774:	sbcs.w	r1, r3, #0
   10778:	blt.n	107aa <ulist_next@@Base+0x196>
   1077a:	movs	r1, #0
   1077c:	mov	r0, r5
   1077e:	str	r1, [sp, #8]
   10780:	strd	sl, fp, [sp]
   10784:	bl	1053c <ulist_add@@Base>
   10788:	cmp	r0, #0
   1078a:	bge.n	107aa <ulist_next@@Base+0x196>
   1078c:	b.n	10732 <ulist_next@@Base+0x11e>
   1078e:	ldrd	r2, r3, [r1, #16]
   10792:	ldrd	r8, r9, [r1]
   10796:	cmp	r3, r9
   10798:	it	eq
   1079a:	cmpeq	r2, r8
   1079c:	bne.n	107ca <ulist_next@@Base+0x1b6>
   1079e:	mvn.w	r2, #7
   107a2:	mov.w	r3, #4294967295	; 0xffffffff
   107a6:	strd	r2, r3, [r1, #24]
   107aa:	mov	r0, r4
   107ac:	bl	18706 <rb_next@@Base>
   107b0:	mov	r4, r0
   107b2:	cmp	r0, #0
   107b4:	beq.n	10732 <ulist_next@@Base+0x11e>
   107b6:	ldrd	r2, r3, [r0, #-32]
   107ba:	sub.w	r1, r0, #32
   107be:	cmp	r3, r7
   107c0:	it	eq
   107c2:	cmpeq	r2, r6
   107c4:	beq.n	1075e <ulist_next@@Base+0x14a>
   107c6:	movs	r0, #0
   107c8:	b.n	10732 <ulist_next@@Base+0x11e>
   107ca:	mov	r0, r5
   107cc:	bl	106ec <ulist_next@@Base+0xd8>
   107d0:	b.n	10788 <ulist_next@@Base+0x174>
   107d2:	nop
   107d4:	orns	r0, r4, #8519680	; 0x820000
   107d8:	orns	r0, r9, #8519680	; 0x820000
   107dc:	eor.w	r0, r4, #8519680	; 0x820000
   107e0:	ldr	r2, [pc, #80]	; (10834 <ulist_next@@Base+0x220>)
   107e2:	ldr	r3, [pc, #84]	; (10838 <ulist_next@@Base+0x224>)
   107e4:	push	{r0, r1, r4, r5, r6, lr}
   107e6:	add	r2, pc
   107e8:	ldr	r4, [pc, #80]	; (1083c <ulist_next@@Base+0x228>)
   107ea:	ldr	r3, [r2, r3]
   107ec:	add	r4, pc
   107ee:	ldr	r3, [r3, #0]
   107f0:	str	r3, [sp, #4]
   107f2:	mov.w	r3, #0
   107f6:	ldr	r3, [r4, #28]
   107f8:	cbz	r3, 10814 <ulist_next@@Base+0x200>
   107fa:	mov	r6, sp
   107fc:	movs	r3, #0
   107fe:	str	r3, [sp, #0]
   10800:	ldr	r0, [r4, #28]
   10802:	mov	r1, r6
   10804:	bl	10614 <ulist_next@@Base>
   10808:	mov	r5, r0
   1080a:	cbnz	r0, 10828 <ulist_next@@Base+0x214>
   1080c:	ldr	r0, [r4, #28]
   1080e:	bl	10428 <ulist_free@@Base>
   10812:	str	r5, [r4, #28]
   10814:	ldr	r2, [pc, #40]	; (10840 <ulist_next@@Base+0x22c>)
   10816:	ldr	r3, [pc, #32]	; (10838 <ulist_next@@Base+0x224>)
   10818:	add	r2, pc
   1081a:	ldr	r3, [r2, r3]
   1081c:	ldr	r2, [r3, #0]
   1081e:	ldr	r3, [sp, #4]
   10820:	eors	r2, r3
   10822:	beq.n	10830 <ulist_next@@Base+0x21c>
   10824:	blx	8c90 <__stack_chk_fail@plt>
   10828:	ldr	r0, [r5, #8]
   1082a:	blx	8b84 <free@plt+0x4>
   1082e:	b.n	10800 <ulist_next@@Base+0x1ec>
   10830:	add	sp, #8
   10832:	pop	{r4, r5, r6, pc}
   10834:	add	r5, pc, #200	; (adr r5, 10900 <ulist_next@@Base+0x2ec>)
   10836:	movs	r5, r0
   10838:	lsls	r0, r1, #10
   1083a:	movs	r0, r0
   1083c:	rev16	r0, r3
   1083e:	movs	r5, r0
   10840:	add	r5, pc, #0	; (adr r5, 10844 <ulist_next@@Base+0x230>)
   10842:	movs	r5, r0
   10844:	ldr.w	ip, [pc, #76]	; 10894 <ulist_next@@Base+0x280>
   10848:	ldr	r5, [pc, #76]	; (10898 <ulist_next@@Base+0x284>)
   1084a:	add	ip, pc
   1084c:	ldr	r4, [pc, #76]	; (1089c <ulist_next@@Base+0x288>)
   1084e:	push	{lr}
   10850:	sub	sp, #92	; 0x5c
   10852:	ldr.w	r5, [ip, r5]
   10856:	add	r4, pc
   10858:	ldr	r5, [r5, #0]
   1085a:	str	r5, [sp, #84]	; 0x54
   1085c:	mov.w	r5, #0
   10860:	ldr	r5, [pc, #60]	; (108a0 <ulist_next@@Base+0x28c>)
   10862:	ldr	r4, [r4, r5]
   10864:	ldr	r5, [sp, #96]	; 0x60
   10866:	strd	r3, r2, [sp]
   1086a:	mov	r3, r1
   1086c:	ldr	r2, [pc, #52]	; (108a4 <ulist_next@@Base+0x290>)
   1086e:	movs	r1, #1
   10870:	strd	r0, r5, [sp, #8]
   10874:	ldr	r0, [r4, #0]
   10876:	add	r4, sp, #20
   10878:	add	r2, pc
   1087a:	blx	9040 <__fprintf_chk@plt+0x4>
   1087e:	movs	r1, #16
   10880:	mov	r0, r4
   10882:	blx	8e98 <backtrace@plt>
   10886:	movs	r2, #2
   10888:	mov	r1, r0
   1088a:	mov	r0, r4
   1088c:	blx	9214 <backtrace_symbols_fd@plt>
   10890:	blx	91c0 <abort@plt>
   10894:	add	r4, pc, #824	; (adr r4, 10bd0 <ulist_next@@Base+0x5bc>)
   10896:	movs	r5, r0
   10898:	lsls	r0, r1, #10
   1089a:	movs	r0, r0
   1089c:	add	r4, pc, #776	; (adr r4, 10ba8 <ulist_next@@Base+0x594>)
   1089e:	movs	r5, r0
   108a0:	lsls	r4, r3, #10
   108a2:	movs	r0, r0
   108a4:	bge.n	10874 <ulist_next@@Base+0x260>
   108a6:	movs	r2, r0
   108a8:	push	{r0, r1, r2, lr}
   108aa:	cbz	r3, 108bc <ulist_next@@Base+0x2a8>
   108ac:	movs	r3, #1
   108ae:	str	r3, [sp, #0]
   108b0:	mov	r3, r2
   108b2:	mov	r2, r1
   108b4:	ldr	r1, [pc, #12]	; (108c4 <ulist_next@@Base+0x2b0>)
   108b6:	add	r1, pc
   108b8:	bl	10844 <ulist_next@@Base+0x230>
   108bc:	add	sp, #12
   108be:	ldr.w	pc, [sp], #4
   108c2:	nop
   108c4:	sbfx	r0, sp, #0, #3
   108c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108cc:	vpush	{d8-d9}
   108d0:	sub	sp, #76	; 0x4c
   108d2:	strd	r2, r3, [sp, #24]
   108d6:	ldr.w	r2, [pc, #1040]	; 10ce8 <ulist_next@@Base+0x6d4>
   108da:	ldr.w	r3, [pc, #1040]	; 10cec <ulist_next@@Base+0x6d8>
   108de:	add	r2, pc
   108e0:	str	r0, [sp, #52]	; 0x34
   108e2:	movs	r0, #0
   108e4:	ldr	r3, [r2, r3]
   108e6:	ldr	r3, [r3, #0]
   108e8:	str	r3, [sp, #68]	; 0x44
   108ea:	mov.w	r3, #0
   108ee:	bl	10414 <ulist_alloc@@Base>
   108f2:	mov	r4, r0
   108f4:	ldr	r0, [pc, #1016]	; (10cf0 <ulist_next@@Base+0x6dc>)
   108f6:	add	r0, pc
   108f8:	adds	r0, #24
   108fa:	bl	186e6 <rb_first@@Base>
   108fe:	ldr	r3, [pc, #1012]	; (10cf4 <ulist_next@@Base+0x6e0>)
   10900:	add	r3, pc
   10902:	adds	r3, #17
   10904:	vmov	s18, r3
   10908:	mov	fp, r0
   1090a:	mov	r0, r4
   1090c:	cmp.w	fp, #0
   10910:	bne.n	1092e <ulist_next@@Base+0x31a>
   10912:	bl	10428 <ulist_free@@Base>
   10916:	mov	r0, fp
   10918:	ldr	r2, [pc, #988]	; (10cf8 <ulist_next@@Base+0x6e4>)
   1091a:	ldr	r3, [pc, #976]	; (10cec <ulist_next@@Base+0x6d8>)
   1091c:	add	r2, pc
   1091e:	ldr	r3, [r2, r3]
   10920:	ldr	r2, [r3, #0]
   10922:	ldr	r3, [sp, #68]	; 0x44
   10924:	eors	r2, r3
   10926:	beq.w	10cdc <ulist_next@@Base+0x6c8>
   1092a:	blx	8c90 <__stack_chk_fail@plt>
   1092e:	ldr	r6, [pc, #972]	; (10cfc <ulist_next@@Base+0x6e8>)
   10930:	bl	10402 <ulist_reinit@@Base>
   10934:	ldr	r7, [pc, #968]	; (10d00 <ulist_next@@Base+0x6ec>)
   10936:	sub.w	r5, fp, #32
   1093a:	ldr.w	sl, [pc, #968]	; 10d04 <ulist_next@@Base+0x6f0>
   1093e:	add	r6, pc
   10940:	ldrd	r2, r3, [fp, #-24]
   10944:	add	r7, pc
   10946:	ldrd	r8, r9, [fp, #-32]
   1094a:	add	sl, pc
   1094c:	strd	r2, r3, [sp, #16]
   10950:	ldrd	r2, r3, [r5]
   10954:	mov	r1, r6
   10956:	mov	r0, r7
   10958:	cmp	r3, r9
   1095a:	it	eq
   1095c:	cmpeq	r2, r8
   1095e:	movw	r2, #545	; 0x221
   10962:	ite	ne
   10964:	movne	r3, #1
   10966:	moveq	r3, #0
   10968:	bl	108a8 <ulist_next@@Base+0x294>
   1096c:	ldrd	r2, r3, [r5, #8]
   10970:	ldrd	r0, r1, [sp, #16]
   10974:	cmp	r3, r1
   10976:	mov	r1, r6
   10978:	it	eq
   1097a:	cmpeq	r2, r0
   1097c:	movw	r2, #546	; 0x222
   10980:	mov	r0, sl
   10982:	ite	ne
   10984:	movne	r3, #1
   10986:	moveq	r3, #0
   10988:	bl	108a8 <ulist_next@@Base+0x294>
   1098c:	ldrd	r2, r3, [r5, #24]
   10990:	orrs.w	r1, r2, r3
   10994:	beq.n	10a78 <ulist_next@@Base+0x464>
   10996:	cmp	r3, #0
   10998:	it	eq
   1099a:	cmpeq	r2, #5
   1099c:	beq.n	10a54 <ulist_next@@Base+0x440>
   1099e:	cmp.w	r2, #256	; 0x100
   109a2:	sbcs.w	r1, r3, #0
   109a6:	bge.n	10a54 <ulist_next@@Base+0x440>
   109a8:	mov	r0, fp
   109aa:	bl	18706 <rb_next@@Base>
   109ae:	mov	fp, r0
   109b0:	cmp	r0, #0
   109b2:	bne.n	10a84 <ulist_next@@Base+0x470>
   109b4:	ldrd	r2, r3, [sp, #24]
   109b8:	orrs	r3, r2
   109ba:	beq.n	10a2a <ulist_next@@Base+0x416>
   109bc:	ldr	r5, [pc, #840]	; (10d08 <ulist_next@@Base+0x6f4>)
   109be:	movs	r3, #0
   109c0:	str	r3, [sp, #60]	; 0x3c
   109c2:	add	r5, pc
   109c4:	add	r1, sp, #60	; 0x3c
   109c6:	mov	r0, r4
   109c8:	bl	10614 <ulist_next@@Base>
   109cc:	cbz	r0, 10a2a <ulist_next@@Base+0x416>
   109ce:	ldrd	r6, r7, [r0]
   109d2:	movw	r2, #1465	; 0x5b9
   109d6:	vmov	r1, s18
   109da:	mov	r0, r5
   109dc:	orrs.w	r3, r6, r7
   109e0:	ite	eq
   109e2:	moveq	r3, #1
   109e4:	movne	r3, #0
   109e6:	bl	108a8 <ulist_next@@Base+0x294>
   109ea:	ldrd	r2, r3, [sp, #24]
   109ee:	cmp	r3, r7
   109f0:	it	eq
   109f2:	cmpeq	r2, r6
   109f4:	bne.n	109c4 <ulist_next@@Base+0x3b0>
   109f6:	ldr	r3, [r4, #0]
   109f8:	add	r5, sp, #64	; 0x40
   109fa:	ldr	r6, [pc, #784]	; (10d0c <ulist_next@@Base+0x6f8>)
   109fc:	movs	r0, #1
   109fe:	ldr	r1, [pc, #784]	; (10d10 <ulist_next@@Base+0x6fc>)
   10a00:	str	r3, [sp, #8]
   10a02:	add	r6, pc
   10a04:	ldrd	r2, r3, [sp, #16]
   10a08:	add	r1, pc
   10a0a:	strd	r2, r3, [sp]
   10a0e:	mov	r3, r9
   10a10:	mov	r2, r8
   10a12:	blx	900c <__printf_chk@plt+0x4>
   10a16:	movs	r3, #0
   10a18:	str	r3, [sp, #64]	; 0x40
   10a1a:	mov	r1, r5
   10a1c:	mov	r0, r4
   10a1e:	bl	10614 <ulist_next@@Base>
   10a22:	cbnz	r0, 10a98 <ulist_next@@Base+0x484>
   10a24:	movs	r0, #10
   10a26:	blx	8fa8 <putchar@plt+0x4>
   10a2a:	ldr	r3, [sp, #52]	; 0x34
   10a2c:	cmp	r3, #0
   10a2e:	beq.w	1090a <ulist_next@@Base+0x2f6>
   10a32:	movs	r0, #0
   10a34:	bl	10414 <ulist_alloc@@Base>
   10a38:	mov	r7, r0
   10a3a:	movs	r0, #0
   10a3c:	bl	10414 <ulist_alloc@@Base>
   10a40:	mov	r5, r0
   10a42:	cbz	r7, 10a46 <ulist_next@@Base+0x432>
   10a44:	cbnz	r0, 10aa6 <ulist_next@@Base+0x492>
   10a46:	mov	r0, r7
   10a48:	bl	10428 <ulist_free@@Base>
   10a4c:	mov	r0, r5
   10a4e:	bl	10428 <ulist_free@@Base>
   10a52:	b.n	10a6a <ulist_next@@Base+0x456>
   10a54:	movs	r1, #0
   10a56:	movs	r0, #0
   10a58:	str	r1, [sp, #8]
   10a5a:	movs	r1, #0
   10a5c:	strd	r0, r1, [sp]
   10a60:	mov	r0, r4
   10a62:	bl	1053c <ulist_add@@Base>
   10a66:	cmp	r0, #0
   10a68:	bge.n	109a8 <ulist_next@@Base+0x394>
   10a6a:	ldr	r0, [pc, #680]	; (10d14 <ulist_next@@Base+0x700>)
   10a6c:	add	r0, pc
   10a6e:	bl	1bd1c <__btrfs_error@@Base>
   10a72:	mvn.w	r0, #11
   10a76:	b.n	10918 <ulist_next@@Base+0x304>
   10a78:	ldrd	r2, r3, [r5, #16]
   10a7c:	mov	r0, r4
   10a7e:	bl	106ec <ulist_next@@Base+0xd8>
   10a82:	b.n	10a66 <ulist_next@@Base+0x452>
   10a84:	ldrd	r2, r3, [r0, #-32]
   10a88:	sub.w	r5, r0, #32
   10a8c:	cmp	r3, r9
   10a8e:	it	eq
   10a90:	cmpeq	r2, r8
   10a92:	beq.w	10950 <ulist_next@@Base+0x33c>
   10a96:	b.n	109b4 <ulist_next@@Base+0x3a0>
   10a98:	ldrd	r2, r3, [r0]
   10a9c:	mov	r1, r6
   10a9e:	movs	r0, #1
   10aa0:	blx	900c <__printf_chk@plt+0x4>
   10aa4:	b.n	10a1a <ulist_next@@Base+0x406>
   10aa6:	movs	r3, #0
   10aa8:	str	r3, [sp, #60]	; 0x3c
   10aaa:	ldr	r3, [pc, #620]	; (10d18 <ulist_next@@Base+0x704>)
   10aac:	add	r3, pc
   10aae:	adds	r3, #35	; 0x23
   10ab0:	vmov	s17, r3
   10ab4:	ldr.w	sl, [pc, #612]	; 10d1c <ulist_next@@Base+0x708>
   10ab8:	add	sl, pc
   10aba:	add.w	r8, sp, #60	; 0x3c
   10abe:	mov	r0, r4
   10ac0:	mov	r1, r8
   10ac2:	bl	10614 <ulist_next@@Base>
   10ac6:	cbnz	r0, 10b16 <ulist_next@@Base+0x502>
   10ac8:	ldr	r3, [r4, #0]
   10aca:	mov.w	sl, #0
   10ace:	str	r0, [sp, #60]	; 0x3c
   10ad0:	mov	r9, r3
   10ad2:	ldr	r3, [pc, #588]	; (10d20 <ulist_next@@Base+0x70c>)
   10ad4:	add	r3, pc
   10ad6:	str	r3, [sp, #32]
   10ad8:	mov	r1, r8
   10ada:	mov	r0, r7
   10adc:	bl	10614 <ulist_next@@Base>
   10ae0:	cmp	r0, #0
   10ae2:	bne.w	10c58 <ulist_next@@Base+0x644>
   10ae6:	ldr	r6, [pc, #572]	; (10d24 <ulist_next@@Base+0x710>)
   10ae8:	ldr	r1, [r4, #0]
   10aea:	add	r6, pc
   10aec:	adds	r1, #1
   10aee:	ldrd	r2, r3, [r6]
   10af2:	adds	r2, r2, r1
   10af4:	adc.w	r3, r3, r1, asr #31
   10af8:	strd	r2, r3, [r6]
   10afc:	mov	r3, r0
   10afe:	mov	r0, r7
   10b00:	str	r3, [sp, #16]
   10b02:	bl	10428 <ulist_free@@Base>
   10b06:	mov	r0, r5
   10b08:	bl	10428 <ulist_free@@Base>
   10b0c:	ldr	r3, [sp, #16]
   10b0e:	cmp	r3, #0
   10b10:	beq.w	1090a <ulist_next@@Base+0x2f6>
   10b14:	b.n	10a6a <ulist_next@@Base+0x456>
   10b16:	ldrd	r8, r9, [r0]
   10b1a:	mov.w	r2, #422	; 0x1a6
   10b1e:	vmov	r1, s17
   10b22:	mov	r0, sl
   10b24:	orrs.w	r3, r8, r9
   10b28:	ite	eq
   10b2a:	moveq	r3, #1
   10b2c:	movne	r3, #0
   10b2e:	bl	108a8 <ulist_next@@Base+0x294>
   10b32:	mov	r0, r8
   10b34:	mov	r1, r9
   10b36:	bl	10650 <ulist_next@@Base+0x3c>
   10b3a:	mov	r6, r0
   10b3c:	cmp	r0, #0
   10b3e:	beq.n	10aba <ulist_next@@Base+0x4a6>
   10b40:	cmp.w	r9, #0
   10b44:	it	eq
   10b46:	cmpeq.w	r8, #5
   10b4a:	beq.w	10c54 <ulist_next@@Base+0x640>
   10b4e:	cmp.w	r8, #256	; 0x100
   10b52:	sbcs.w	r3, r9, #0
   10b56:	ite	ge
   10b58:	movge	r3, #1
   10b5a:	movlt	r3, #0
   10b5c:	ldr	r1, [pc, #456]	; (10d28 <ulist_next@@Base+0x714>)
   10b5e:	eor.w	r3, r3, #1
   10b62:	ldr	r0, [pc, #456]	; (10d2c <ulist_next@@Base+0x718>)
   10b64:	mov.w	r2, #432	; 0x1b0
   10b68:	add	r1, pc
   10b6a:	mov.w	r8, #0
   10b6e:	adds	r1, #35	; 0x23
   10b70:	add	r0, pc
   10b72:	bl	108a8 <ulist_next@@Base+0x294>
   10b76:	str.w	r8, [sp, #8]
   10b7a:	strd	r6, r8, [sp]
   10b7e:	mov	r0, r7
   10b80:	ldrd	r2, r3, [r6]
   10b84:	bl	1053c <ulist_add@@Base>
   10b88:	subs	r3, r0, #0
   10b8a:	blt.n	10afe <ulist_next@@Base+0x4ea>
   10b8c:	mov	r0, r5
   10b8e:	bl	10402 <ulist_reinit@@Base>
   10b92:	str.w	r8, [sp, #8]
   10b96:	strd	r6, r8, [sp]
   10b9a:	mov	r0, r5
   10b9c:	ldrd	r2, r3, [r6]
   10ba0:	bl	1053c <ulist_add@@Base>
   10ba4:	subs	r3, r0, #0
   10ba6:	blt.n	10afe <ulist_next@@Base+0x4ea>
   10ba8:	ldr	r3, [pc, #388]	; (10d30 <ulist_next@@Base+0x71c>)
   10baa:	str.w	r8, [sp, #64]	; 0x40
   10bae:	add	r3, pc
   10bb0:	adds	r3, #35	; 0x23
   10bb2:	vmov	s16, r3
   10bb6:	add	r1, sp, #64	; 0x40
   10bb8:	mov	r0, r5
   10bba:	bl	10614 <ulist_next@@Base>
   10bbe:	cmp	r0, #0
   10bc0:	beq.w	10ab4 <ulist_next@@Base+0x4a0>
   10bc4:	ldr	r3, [pc, #364]	; (10d34 <ulist_next@@Base+0x720>)
   10bc6:	ldr	r6, [r0, #8]
   10bc8:	add	r3, pc
   10bca:	ldr.w	sl, [pc, #364]	; 10d38 <ulist_next@@Base+0x724>
   10bce:	ldrd	r0, r1, [r3]
   10bd2:	add	sl, pc
   10bd4:	ldrd	r2, r3, [r6, #128]	; 0x80
   10bd8:	ldr.w	r8, [r6, #108]	; 0x6c
   10bdc:	cmp	r3, r1
   10bde:	it	eq
   10be0:	cmpeq	r2, r0
   10be2:	it	cc
   10be4:	strdcc	r0, r1, [r6, #128]	; 0x80
   10be8:	ldrd	r3, r2, [r6, #128]	; 0x80
   10bec:	adds	r3, #1
   10bee:	adc.w	r2, r2, #0
   10bf2:	strd	r3, r2, [r6, #128]	; 0x80
   10bf6:	add.w	r3, r6, #108	; 0x6c
   10bfa:	cmp	r8, r3
   10bfc:	beq.n	10bb6 <ulist_next@@Base+0x5a2>
   10bfe:	ldr.w	r9, [r8, #16]
   10c02:	mov	r0, sl
   10c04:	vmov	r1, s16
   10c08:	ldrd	r2, r3, [r9]
   10c0c:	strd	r2, r3, [sp, #32]
   10c10:	clz	r3, r6
   10c14:	mov.w	r2, #458	; 0x1ca
   10c18:	lsrs	r3, r3, #5
   10c1a:	bl	108a8 <ulist_next@@Base+0x294>
   10c1e:	movs	r1, #0
   10c20:	ldrd	r2, r3, [sp, #32]
   10c24:	mov	r0, r7
   10c26:	str	r1, [sp, #8]
   10c28:	strd	r9, r1, [sp]
   10c2c:	bl	1053c <ulist_add@@Base>
   10c30:	subs	r3, r0, #0
   10c32:	blt.w	10afe <ulist_next@@Base+0x4ea>
   10c36:	movs	r1, #0
   10c38:	ldrd	r2, r3, [sp, #32]
   10c3c:	mov	r0, r5
   10c3e:	str	r1, [sp, #8]
   10c40:	strd	r9, r1, [sp]
   10c44:	bl	1053c <ulist_add@@Base>
   10c48:	subs	r3, r0, #0
   10c4a:	blt.w	10afe <ulist_next@@Base+0x4ea>
   10c4e:	ldr.w	r8, [r8]
   10c52:	b.n	10bf6 <ulist_next@@Base+0x5e2>
   10c54:	ldr	r3, [sp, #52]	; 0x34
   10c56:	b.n	10b5c <ulist_next@@Base+0x548>
   10c58:	ldr.w	ip, [r0, #8]
   10c5c:	ldr	r3, [sp, #32]
   10c5e:	ldrd	r0, r1, [ip, #128]	; 0x80
   10c62:	ldrd	r2, r3, [r3]
   10c66:	cmp	r1, r3
   10c68:	it	eq
   10c6a:	cmpeq	r0, r2
   10c6c:	bcc.w	10ad8 <ulist_next@@Base+0x4c4>
   10c70:	subs	r6, r0, r2
   10c72:	str	r6, [sp, #40]	; 0x28
   10c74:	sbc.w	r6, r1, r3
   10c78:	cmp	r1, r3
   10c7a:	it	eq
   10c7c:	cmpeq	r0, r2
   10c7e:	str	r6, [sp, #44]	; 0x2c
   10c80:	beq.w	10ad8 <ulist_next@@Base+0x4c4>
   10c84:	ldrd	r3, r2, [ip, #64]	; 0x40
   10c88:	ldr	r1, [sp, #16]
   10c8a:	adds	r3, r3, r1
   10c8c:	ldr	r1, [sp, #20]
   10c8e:	adc.w	r2, r1, r2
   10c92:	ldr	r1, [sp, #16]
   10c94:	strd	r3, r2, [ip, #64]	; 0x40
   10c98:	ldrd	r3, r2, [ip, #72]	; 0x48
   10c9c:	adds	r3, r3, r1
   10c9e:	ldr	r1, [sp, #20]
   10ca0:	adc.w	r2, r1, r2
   10ca4:	strd	r3, r2, [ip, #72]	; 0x48
   10ca8:	ldrd	r2, r3, [sp, #40]	; 0x28
   10cac:	cmp	sl, r3
   10cae:	it	eq
   10cb0:	cmpeq	r9, r2
   10cb2:	bne.w	10ad8 <ulist_next@@Base+0x4c4>
   10cb6:	ldrd	r3, r2, [ip, #80]	; 0x50
   10cba:	ldr	r1, [sp, #16]
   10cbc:	adds	r3, r3, r1
   10cbe:	ldr	r1, [sp, #20]
   10cc0:	adc.w	r2, r1, r2
   10cc4:	ldr	r1, [sp, #16]
   10cc6:	strd	r3, r2, [ip, #80]	; 0x50
   10cca:	ldrd	r3, r2, [ip, #88]	; 0x58
   10cce:	adds	r3, r3, r1
   10cd0:	ldr	r1, [sp, #20]
   10cd2:	adc.w	r2, r1, r2
   10cd6:	strd	r3, r2, [ip, #88]	; 0x58
   10cda:	b.n	10ad8 <ulist_next@@Base+0x4c4>
   10cdc:	add	sp, #76	; 0x4c
   10cde:	vpop	{d8-d9}
   10ce2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ce6:	nop
   10ce8:	add	r4, pc, #232	; (adr r4, 10dd4 <ulist_next@@Base+0x7c0>)
   10cea:	movs	r5, r0
   10cec:	lsls	r0, r1, #10
   10cee:	movs	r0, r0
   10cf0:	cbnz	r6, 10d06 <ulist_next@@Base+0x6f2>
   10cf2:	movs	r5, r0
   10cf4:			; <UNDEFINED> instruction: 0xf71c0002
   10cf8:	add	r3, pc, #1008	; (adr r3, 110ec <ulist_next@@Base+0xad8>)
   10cfa:	movs	r5, r0
   10cfc:			; <UNDEFINED> instruction: 0xf6de0002
   10d00:			; <UNDEFINED> instruction: 0xf2d50002
   10d04:			; <UNDEFINED> instruction: 0xf2e50002
   10d08:			; <UNDEFINED> instruction: 0xf2890002
   10d0c:			; <UNDEFINED> instruction: 0xf26a0002
   10d10:			; <UNDEFINED> instruction: 0xf2560002
   10d14:			; <UNDEFINED> instruction: 0xf2240002
   10d18:	sbcs.w	r0, r0, #8519680	; 0x820000
   10d1c:			; <UNDEFINED> instruction: 0xf1930002
   10d20:	add	r5, pc, #928	; (adr r5, 110c4 <ulist_next@@Base+0xab0>)
   10d22:	movs	r5, r0
   10d24:	add	r5, pc, #840	; (adr r5, 11070 <ulist_next@@Base+0xa5c>)
   10d26:	movs	r5, r0
   10d28:			; <UNDEFINED> instruction: 0xf4b40002
   10d2c:	add.w	r0, r2, #2
   10d30:	orn	r0, lr, #8519680	; 0x820000
   10d34:	add	r4, pc, #976	; (adr r4, 11108 <ulist_next@@Base+0xaf4>)
   10d36:	movs	r5, r0
   10d38:			; <UNDEFINED> instruction: 0xf0b70002
   10d3c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d40:	mov	r5, r3
   10d42:	ldr	r3, [pc, #292]	; (10e68 <ulist_next@@Base+0x854>)
   10d44:	mov	r6, r0
   10d46:	ldrd	r8, r9, [sp, #40]	; 0x28
   10d4a:	mov	r7, r1
   10d4c:	add	r3, pc
   10d4e:	mov	r4, r2
   10d50:	ldr.w	sl, [r3, #24]
   10d54:	cmp.w	sl, #0
   10d58:	beq.n	10d9a <ulist_next@@Base+0x786>
   10d5a:	ldrd	r2, r3, [sl, #-32]
   10d5e:	cmp	r7, r3
   10d60:	it	eq
   10d62:	cmpeq	r6, r2
   10d64:	bcc.n	10e0a <ulist_next@@Base+0x7f6>
   10d66:	cmp	r3, r7
   10d68:	it	eq
   10d6a:	cmpeq	r2, r6
   10d6c:	bcc.n	10e60 <ulist_next@@Base+0x84c>
   10d6e:	ldrd	r2, r3, [sl, #-16]
   10d72:	cmp	r9, r3
   10d74:	it	eq
   10d76:	cmpeq	r8, r2
   10d78:	bcc.n	10e0a <ulist_next@@Base+0x7f6>
   10d7a:	cmp	r3, r9
   10d7c:	it	eq
   10d7e:	cmpeq	r2, r8
   10d80:	bcc.n	10e60 <ulist_next@@Base+0x84c>
   10d82:	ldrd	r2, r3, [sl, #-8]
   10d86:	cmp	r5, r3
   10d88:	it	eq
   10d8a:	cmpeq	r4, r2
   10d8c:	bcc.n	10e0a <ulist_next@@Base+0x7f6>
   10d8e:	cmp	r3, r5
   10d90:	it	eq
   10d92:	cmpeq	r2, r4
   10d94:	bcc.n	10e60 <ulist_next@@Base+0x84c>
   10d96:	sub.w	sl, sl, #32
   10d9a:	orrs.w	r3, r8, r9
   10d9e:	beq.n	10e10 <ulist_next@@Base+0x7fc>
   10da0:	orrs.w	r3, r4, r5
   10da4:	ite	ne
   10da6:	movne	r3, #1
   10da8:	moveq	r3, #0
   10daa:	ldr	r1, [pc, #192]	; (10e6c <ulist_next@@Base+0x858>)
   10dac:	mov.w	r2, #302	; 0x12e
   10db0:	ldr	r0, [pc, #188]	; (10e70 <ulist_next@@Base+0x85c>)
   10db2:	add	r1, pc
   10db4:	adds	r1, #54	; 0x36
   10db6:	add	r0, pc
   10db8:	bl	108a8 <ulist_next@@Base+0x294>
   10dbc:	cmp.w	sl, #0
   10dc0:	bne.n	10e5c <ulist_next@@Base+0x848>
   10dc2:	movs	r1, #48	; 0x30
   10dc4:	movs	r0, #1
   10dc6:	blx	8ab8 <calloc@plt+0x4>
   10dca:	mov	fp, r0
   10dcc:	cbz	r0, 10e04 <ulist_next@@Base+0x7f0>
   10dce:	ldrd	r2, r3, [sp, #48]	; 0x30
   10dd2:	strd	r6, r7, [r0]
   10dd6:	strd	r4, r5, [r0, #24]
   10dda:	strd	r2, r3, [r0, #8]
   10dde:	ldr	r3, [pc, #148]	; (10e74 <ulist_next@@Base+0x860>)
   10de0:	strd	r8, r9, [r0, #16]
   10de4:	add	r3, pc
   10de6:	adds	r3, #24
   10de8:	ldr	r1, [r3, #0]
   10dea:	cbnz	r1, 10e14 <ulist_next@@Base+0x800>
   10dec:	strd	sl, r1, [fp, #32]
   10df0:	add.w	r0, fp, #32
   10df4:	str.w	r1, [fp, #40]	; 0x28
   10df8:	ldr	r1, [pc, #124]	; (10e78 <ulist_next@@Base+0x864>)
   10dfa:	str	r0, [r3, #0]
   10dfc:	add	r1, pc
   10dfe:	adds	r1, #24
   10e00:	bl	183ca <rb_insert_color@@Base>
   10e04:	mov	r0, fp
   10e06:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e0a:	ldr.w	sl, [sl, #8]
   10e0e:	b.n	10d54 <ulist_next@@Base+0x740>
   10e10:	movs	r3, #0
   10e12:	b.n	10daa <ulist_next@@Base+0x796>
   10e14:	ldrd	r2, r3, [r1, #-32]
   10e18:	cmp	r7, r3
   10e1a:	it	eq
   10e1c:	cmpeq	r6, r2
   10e1e:	bcc.n	10e54 <ulist_next@@Base+0x840>
   10e20:	cmp	r3, r7
   10e22:	it	eq
   10e24:	cmpeq	r2, r6
   10e26:	bcc.n	10e50 <ulist_next@@Base+0x83c>
   10e28:	ldrd	r2, r3, [r1, #-16]
   10e2c:	cmp	r9, r3
   10e2e:	it	eq
   10e30:	cmpeq	r8, r2
   10e32:	bcc.n	10e54 <ulist_next@@Base+0x840>
   10e34:	cmp	r3, r9
   10e36:	it	eq
   10e38:	cmpeq	r2, r8
   10e3a:	bcc.n	10e50 <ulist_next@@Base+0x83c>
   10e3c:	ldrd	r2, r3, [r1, #-8]
   10e40:	cmp	r5, r3
   10e42:	it	eq
   10e44:	cmpeq	r4, r2
   10e46:	bcc.n	10e54 <ulist_next@@Base+0x840>
   10e48:	cmp	r3, r5
   10e4a:	it	eq
   10e4c:	cmpeq	r2, r4
   10e4e:	bcs.n	10e04 <ulist_next@@Base+0x7f0>
   10e50:	adds	r3, r1, #4
   10e52:	b.n	10e58 <ulist_next@@Base+0x844>
   10e54:	add.w	r3, r1, #8
   10e58:	mov	sl, r1
   10e5a:	b.n	10de8 <ulist_next@@Base+0x7d4>
   10e5c:	mov	fp, sl
   10e5e:	b.n	10e04 <ulist_next@@Base+0x7f0>
   10e60:	ldr.w	sl, [sl, #4]
   10e64:	b.n	10d54 <ulist_next@@Base+0x740>
   10e66:	nop
   10e68:	push	{r3, r4, r5, r6, r7}
   10e6a:	movs	r5, r0
   10e6c:			; <UNDEFINED> instruction: 0xf26a0002
   10e70:	vhadd.s8	d0, d10, d2
   10e74:	push	{r5, r6}
   10e76:	movs	r5, r0
   10e78:	push	{r3, r6}
   10e7a:	movs	r5, r0
   10e7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e80:	movs	r6, #0
   10e82:	vpush	{d8}
   10e86:	mov	r4, r6
   10e88:	ldr	r3, [pc, #864]	; (111ec <ulist_next@@Base+0xbd8>)
   10e8a:	ldr	r2, [pc, #868]	; (111f0 <ulist_next@@Base+0xbdc>)
   10e8c:	add	r3, pc
   10e8e:	sub	sp, #180	; 0xb4
   10e90:	add	r2, pc
   10e92:	str	r3, [sp, #32]
   10e94:	ldr	r3, [pc, #860]	; (111f4 <ulist_next@@Base+0xbe0>)
   10e96:	str	r0, [sp, #56]	; 0x38
   10e98:	ldr	r3, [r2, r3]
   10e9a:	ldr	r3, [r3, #0]
   10e9c:	str	r3, [sp, #172]	; 0xac
   10e9e:	mov.w	r3, #0
   10ea2:	ldr	r3, [r0, #24]
   10ea4:	str	r3, [sp, #36]	; 0x24
   10ea6:	add	r3, sp, #104	; 0x68
   10ea8:	str	r3, [sp, #16]
   10eaa:	mov	r0, r3
   10eac:	bl	1c6e8 <btrfs_init_path@@Base>
   10eb0:	ldr	r3, [sp, #16]
   10eb2:	ldr	r1, [sp, #36]	; 0x24
   10eb4:	add	r2, sp, #64	; 0x40
   10eb6:	mov	r0, r6
   10eb8:	strd	r6, r6, [sp]
   10ebc:	strd	r6, r6, [sp, #64]	; 0x40
   10ec0:	strb.w	r6, [sp, #72]	; 0x48
   10ec4:	strb.w	r6, [sp, #73]	; 0x49
   10ec8:	strb.w	r6, [sp, #74]	; 0x4a
   10ecc:	strb.w	r6, [sp, #75]	; 0x4b
   10ed0:	strb.w	r6, [sp, #76]	; 0x4c
   10ed4:	strb.w	r6, [sp, #77]	; 0x4d
   10ed8:	strb.w	r6, [sp, #78]	; 0x4e
   10edc:	strb.w	r6, [sp, #79]	; 0x4f
   10ee0:	strb.w	r6, [sp, #80]	; 0x50
   10ee4:	bl	1eadc <btrfs_search_slot@@Base>
   10ee8:	subs	r7, r0, #0
   10eea:	bge.n	10f02 <ulist_next@@Base+0x8ee>
   10eec:	ldr	r3, [pc, #776]	; (111f8 <ulist_next@@Base+0xbe4>)
   10eee:	ldr	r2, [sp, #32]
   10ef0:	ldr	r0, [r2, r3]
   10ef2:	mov	r3, r7
   10ef4:	ldr	r2, [pc, #772]	; (111fc <ulist_next@@Base+0xbe8>)
   10ef6:	add	r2, pc
   10ef8:	movs	r1, #1
   10efa:	ldr	r0, [r0, #0]
   10efc:	blx	9040 <__fprintf_chk@plt+0x4>
   10f00:	b.n	110b8 <ulist_next@@Base+0xaa4>
   10f02:	movs	r3, #1
   10f04:	strb.w	r3, [sp, #168]	; 0xa8
   10f08:	ldr	r3, [pc, #756]	; (11200 <ulist_next@@Base+0xbec>)
   10f0a:	mov	sl, r6
   10f0c:	mov	fp, r6
   10f0e:	str	r6, [sp, #24]
   10f10:	add	r3, pc
   10f12:	adds	r3, #93	; 0x5d
   10f14:	vmov	s16, r3
   10f18:	ldr	r7, [sp, #104]	; 0x68
   10f1a:	mov.w	r8, #197	; 0xc5
   10f1e:	ldr.w	r3, [r7, #192]	; 0xc0
   10f22:	str	r3, [sp, #60]	; 0x3c
   10f24:	movs	r3, #0
   10f26:	str	r3, [sp, #28]
   10f28:	ldr	r3, [pc, #728]	; (11204 <ulist_next@@Base+0xbf0>)
   10f2a:	add	r3, pc
   10f2c:	vmov	s17, r3
   10f30:	ldr	r3, [sp, #60]	; 0x3c
   10f32:	ldr	r2, [sp, #28]
   10f34:	cmp	r3, r2
   10f36:	bgt.n	10f60 <ulist_next@@Base+0x94c>
   10f38:	ldr	r3, [sp, #36]	; 0x24
   10f3a:	add	r1, sp, #104	; 0x68
   10f3c:	movs	r5, #0
   10f3e:	strb.w	r5, [sp, #169]	; 0xa9
   10f42:	ldr.w	r0, [r3, #464]	; 0x1d0
   10f46:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   10f4a:	subs	r7, r0, #0
   10f4c:	beq.n	10f18 <ulist_next@@Base+0x904>
   10f4e:	bge.w	111da <ulist_next@@Base+0xbc6>
   10f52:	ldr	r3, [pc, #676]	; (111f8 <ulist_next@@Base+0xbe4>)
   10f54:	ldr	r2, [sp, #32]
   10f56:	ldr	r0, [r2, r3]
   10f58:	mov	r3, r7
   10f5a:	ldr	r2, [pc, #684]	; (11208 <ulist_next@@Base+0xbf4>)
   10f5c:	add	r2, pc
   10f5e:	b.n	10ef8 <ulist_next@@Base+0x8e4>
   10f60:	sub.w	r2, r8, #96	; 0x60
   10f64:	movs	r3, #17
   10f66:	add	r1, sp, #84	; 0x54
   10f68:	mov	r0, r7
   10f6a:	bl	1bbba <read_extent_buffer@@Base>
   10f6e:	ldr	r3, [sp, #84]	; 0x54
   10f70:	ldrb.w	r5, [sp, #92]	; 0x5c
   10f74:	ldr.w	r6, [sp, #93]	; 0x5d
   10f78:	str	r3, [sp, #16]
   10f7a:	ldr	r3, [sp, #88]	; 0x58
   10f7c:	ldr.w	r9, [sp, #97]	; 0x61
   10f80:	str.w	r6, [sp, #73]	; 0x49
   10f84:	str	r3, [sp, #20]
   10f86:	ldrd	r2, r3, [sp, #16]
   10f8a:	str.w	r9, [sp, #77]	; 0x4d
   10f8e:	strb.w	r5, [sp, #72]	; 0x48
   10f92:	strd	r2, r3, [sp, #64]	; 0x40
   10f96:	add.w	r3, r5, #88	; 0x58
   10f9a:	uxtb	r3, r3
   10f9c:	cmp	r3, #1
   10f9e:	bhi.w	1112c <ulist_next@@Base+0xb18>
   10fa2:	ldr	r2, [pc, #616]	; (1120c <ulist_next@@Base+0xbf8>)
   10fa4:	cmp	r5, #169	; 0xa9
   10fa6:	add.w	sl, r7, r8
   10faa:	it	ne
   10fac:	strne.w	r9, [sp, #24]
   10fb0:	add	r2, pc
   10fb2:	it	ne
   10fb4:	movne	r4, r6
   10fb6:	ldr.w	r5, [sl, #17]
   10fba:	add.w	r6, r7, #96	; 0x60
   10fbe:	ldr	r3, [r2, #32]
   10fc0:	ldr.w	fp, [sl, #21]
   10fc4:	add.w	r3, r3, #1
   10fc8:	str	r3, [r2, #32]
   10fca:	ittet	eq
   10fcc:	ldreq	r3, [sp, #56]	; 0x38
   10fce:	moveq	r2, #1
   10fd0:	movne	r2, #0
   10fd2:	ldreq.w	r4, [r3, #384]	; 0x180
   10fd6:	itt	eq
   10fd8:	moveq	r3, #0
   10fda:	streq	r3, [sp, #24]
   10fdc:	add.w	r3, r5, #101	; 0x65
   10fe0:	adds	r1, r6, r3
   10fe2:	ldr	r1, [r1, #16]
   10fe4:	and.w	r1, r1, #2
   10fe8:	str	r1, [sp, #40]	; 0x28
   10fea:	movs	r1, #0
   10fec:	str	r1, [sp, #44]	; 0x2c
   10fee:	ldrd	r0, r1, [sp, #40]	; 0x28
   10ff2:	orrs	r1, r0
   10ff4:	beq.n	1106c <ulist_next@@Base+0xa58>
   10ff6:	cmp	r2, #0
   10ff8:	bne.n	1106c <ulist_next@@Base+0xa58>
   10ffa:	adds	r5, #143	; 0x8f
   10ffc:	add	fp, r3
   10ffe:	cmp	fp, r5
   11000:	bhi.n	11072 <ulist_next@@Base+0xa5e>
   11002:	ldr.w	r3, [sl, #17]
   11006:	ldrb.w	r2, [sp, #72]	; 0x48
   1100a:	adds	r3, #101	; 0x65
   1100c:	add	r6, r3
   1100e:	ldr	r3, [r6, #16]
   11010:	and.w	r3, r3, #2
   11014:	str	r3, [sp, #48]	; 0x30
   11016:	movs	r3, #0
   11018:	str	r3, [sp, #52]	; 0x34
   1101a:	ldrd	r0, r1, [sp, #48]	; 0x30
   1101e:	orrs.w	r3, r0, r1
   11022:	beq.n	11122 <ulist_next@@Base+0xb0e>
   11024:	cmp	r2, #169	; 0xa9
   11026:	beq.n	11126 <ulist_next@@Base+0xb12>
   11028:	ldrb.w	r6, [r6, #41]	; 0x29
   1102c:	cmp	r6, #0
   1102e:	beq.w	111b2 <ulist_next@@Base+0xb9e>
   11032:	movs	r1, #16
   11034:	movs	r0, #1
   11036:	blx	8ab8 <calloc@plt+0x4>
   1103a:	mov	r5, r0
   1103c:	cbz	r0, 11068 <ulist_next@@Base+0xa54>
   1103e:	ldr	r1, [pc, #464]	; (11210 <ulist_next@@Base+0xbfc>)
   11040:	ldr	r3, [sp, #24]
   11042:	add	r1, pc
   11044:	str	r4, [r0, #8]
   11046:	str	r6, [r0, #0]
   11048:	str	r3, [r0, #12]
   1104a:	movs	r3, #0
   1104c:	str	r3, [sp, #8]
   1104e:	strd	r0, r3, [sp]
   11052:	ldrd	r2, r3, [sp, #16]
   11056:	ldr	r0, [r1, #28]
   11058:	bl	1053c <ulist_add@@Base>
   1105c:	cmp	r0, #0
   1105e:	bge.w	111b2 <ulist_next@@Base+0xb9e>
   11062:	mov	r0, r5
   11064:	blx	8b84 <free@plt+0x4>
   11068:	movs	r7, #12
   1106a:	b.n	110be <ulist_next@@Base+0xaaa>
   1106c:	add.w	r5, r3, #24
   11070:	b.n	10ffc <ulist_next@@Base+0x9e8>
   11072:	adds	r1, r6, r5
   11074:	ldrb.w	r9, [r6, r5]
   11078:	mov	r3, r1
   1107a:	sub.w	r0, r9, #176	; 0xb0
   1107e:	ldr.w	r2, [r3, #1]!
   11082:	ldr	r3, [r3, #4]
   11084:	cmp	r0, #8
   11086:	bhi.n	110b6 <ulist_next@@Base+0xaa2>
   11088:	tbb	[pc, r0]
   1108c:	asrs	r0, r5, #20
   1108e:	asrs	r4, r4, #20
   11090:	asrs	r5, r2, #20
   11092:	asrs	r5, r0, #20
   11094:	movs	r5, r0
   11096:	mov	r1, r2
   11098:	movs	r2, #0
   1109a:	mov	ip, r3
   1109c:	mov	r3, r2
   1109e:	ldr	r0, [sp, #24]
   110a0:	strd	r1, ip, [sp]
   110a4:	str	r4, [sp, #8]
   110a6:	str	r0, [sp, #12]
   110a8:	ldrd	r0, r1, [sp, #16]
   110ac:	bl	10d3c <ulist_next@@Base+0x728>
   110b0:	cbnz	r0, 110e2 <ulist_next@@Base+0xace>
   110b2:	movs	r7, #12
   110b4:	b.n	110b8 <ulist_next@@Base+0xaa4>
   110b6:	movs	r7, #1
   110b8:	add	r0, sp, #104	; 0x68
   110ba:	bl	1c6f8 <btrfs_release_path@@Base>
   110be:	ldr	r2, [pc, #340]	; (11214 <ulist_next@@Base+0xc00>)
   110c0:	ldr	r3, [pc, #304]	; (111f4 <ulist_next@@Base+0xbe0>)
   110c2:	add	r2, pc
   110c4:	ldr	r3, [r2, r3]
   110c6:	ldr	r2, [r3, #0]
   110c8:	ldr	r3, [sp, #172]	; 0xac
   110ca:	eors	r2, r3
   110cc:	beq.w	111de <ulist_next@@Base+0xbca>
   110d0:	blx	8c90 <__stack_chk_fail@plt>
   110d4:	mov	r3, r1
   110d6:	ldr.w	r2, [r3, #1]!
   110da:	ldr	r3, [r3, #4]
   110dc:	movs	r1, #0
   110de:	mov	ip, r1
   110e0:	b.n	1109e <ulist_next@@Base+0xa8a>
   110e2:	cmp.w	r9, #176	; 0xb0
   110e6:	beq.n	11114 <ulist_next@@Base+0xb00>
   110e8:	cmp.w	r9, #182	; 0xb6
   110ec:	beq.n	11114 <ulist_next@@Base+0xb00>
   110ee:	cmp.w	r9, #184	; 0xb8
   110f2:	beq.n	1111a <ulist_next@@Base+0xb06>
   110f4:	cmp.w	r9, #178	; 0xb2
   110f8:	beq.n	1111e <ulist_next@@Base+0xb0a>
   110fa:	ldr	r2, [pc, #284]	; (11218 <ulist_next@@Base+0xc04>)
   110fc:	movs	r3, #1
   110fe:	ldr	r1, [pc, #284]	; (1121c <ulist_next@@Base+0xc08>)
   11100:	ldr	r0, [pc, #284]	; (11220 <ulist_next@@Base+0xc0c>)
   11102:	add	r2, pc
   11104:	str	r3, [sp, #0]
   11106:	adds	r2, #64	; 0x40
   11108:	add	r1, pc
   1110a:	add	r0, pc
   1110c:	movw	r3, #1818	; 0x71a
   11110:	bl	10844 <ulist_next@@Base+0x230>
   11114:	movs	r3, #9
   11116:	add	r5, r3
   11118:	b.n	10ffe <ulist_next@@Base+0x9ea>
   1111a:	movs	r3, #13
   1111c:	b.n	11116 <ulist_next@@Base+0xb02>
   1111e:	movs	r3, #29
   11120:	b.n	11116 <ulist_next@@Base+0xb02>
   11122:	cmp	r2, #169	; 0xa9
   11124:	bne.n	111b2 <ulist_next@@Base+0xb9e>
   11126:	ldr.w	r6, [sp, #73]	; 0x49
   1112a:	b.n	1102c <ulist_next@@Base+0xa18>
   1112c:	add.w	r3, r5, #80	; 0x50
   11130:	uxtb	r3, r3
   11132:	cmp	r3, #8
   11134:	bhi.n	111ae <ulist_next@@Base+0xb9a>
   11136:	ldrd	r2, r3, [sp, #16]
   1113a:	subs	r5, #176	; 0xb0
   1113c:	vmov	r1, s16
   11140:	cmp	fp, r3
   11142:	vmov	r0, s17
   11146:	it	eq
   11148:	cmpeq	sl, r2
   1114a:	movw	r2, #1229	; 0x4cd
   1114e:	ite	ne
   11150:	movne	r3, #1
   11152:	moveq	r3, #0
   11154:	bl	108a8 <ulist_next@@Base+0x294>
   11158:	cmp	r5, #8
   1115a:	bhi.n	110b6 <ulist_next@@Base+0xaa2>
   1115c:	add	r3, pc, #8	; (adr r3, 11168 <ulist_next@@Base+0xb54>)
   1115e:	ldr.w	r2, [r3, r5, lsl #2]
   11162:	add	r3, r2
   11164:	bx	r3
   11166:	nop
   11168:	lsls	r5, r5, #1
   1116a:	movs	r0, r0
   1116c:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
   11170:	lsls	r3, r3, #1
   11172:	movs	r0, r0
   11174:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
   11178:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
   1117c:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
   11180:	movs	r5, r4
   11182:	movs	r0, r0
   11184:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
   11188:	movs	r5, r4
   1118a:	movs	r0, r0
   1118c:	mov	r3, r6
   1118e:	movs	r6, #0
   11190:	mov	r2, r9
   11192:	mov	r9, r6
   11194:	ldr	r1, [sp, #24]
   11196:	mov	r0, sl
   11198:	strd	r3, r2, [sp]
   1119c:	mov	r2, r6
   1119e:	mov	r3, r9
   111a0:	str	r4, [sp, #8]
   111a2:	str	r1, [sp, #12]
   111a4:	mov	r1, fp
   111a6:	bl	10d3c <ulist_next@@Base+0x728>
   111aa:	cmp	r0, #0
   111ac:	beq.n	110b2 <ulist_next@@Base+0xa9e>
   111ae:	strd	sl, fp, [sp, #16]
   111b2:	ldr	r3, [sp, #28]
   111b4:	add.w	r8, r8, #25
   111b8:	ldrd	sl, fp, [sp, #16]
   111bc:	adds	r3, #1
   111be:	str	r3, [sp, #28]
   111c0:	b.n	10f30 <ulist_next@@Base+0x91c>
   111c2:	add.w	r3, r7, r8
   111c6:	ldr.w	r3, [r3, #17]
   111ca:	add	r3, r7
   111cc:	ldr.w	r6, [r3, #197]!
   111d0:	ldr.w	r9, [r3, #4]
   111d4:	movs	r3, #0
   111d6:	mov	r2, r3
   111d8:	b.n	11194 <ulist_next@@Base+0xb80>
   111da:	mov	r7, r5
   111dc:	b.n	110b8 <ulist_next@@Base+0xaa4>
   111de:	mov	r0, r7
   111e0:	add	sp, #180	; 0xb4
   111e2:	vpop	{d8}
   111e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111ea:	nop
   111ec:	ldr	r6, [sp, #560]	; 0x230
   111ee:	movs	r5, r0
   111f0:	ldr	r6, [sp, #544]	; 0x220
   111f2:	movs	r5, r0
   111f4:	lsls	r0, r1, #10
   111f6:	movs	r0, r0
   111f8:	lsls	r4, r3, #10
   111fa:	movs	r0, r0
   111fc:	ldcl	0, cr0, [r9, #8]
   11200:	add.w	r0, ip, #2
   11204:	ldcl	0, cr0, [r0, #8]
   11208:	ldc	0, cr0, [r5, #8]!
   1120c:	uxth	r4, r2
   1120e:	movs	r5, r0
   11210:	sxth	r2, r0
   11212:	movs	r5, r0
   11214:	ldr	r4, [sp, #344]	; 0x158
   11216:	movs	r5, r0
   11218:	vhadd.s16	d0, d10, d2
   1121c:			; <UNDEFINED> instruction: 0xebe80002
   11220:	movs	r0, #168	; 0xa8
   11222:	movs	r3, r0
   11224:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11228:	mov	r7, r1
   1122a:	ldr	r4, [pc, #352]	; (1138c <ulist_next@@Base+0xd78>)
   1122c:	sub	sp, #44	; 0x2c
   1122e:	ldr	r1, [pc, #352]	; (11390 <ulist_next@@Base+0xd7c>)
   11230:	mov.w	sl, #0
   11234:	add	r4, pc
   11236:	mov.w	fp, #0
   1123a:	mov	r6, r0
   1123c:	mov	r8, r2
   1123e:	ldr	r1, [r4, r1]
   11240:	mov	r9, r3
   11242:	ldr	r1, [r1, #0]
   11244:	str	r1, [sp, #36]	; 0x24
   11246:	mov.w	r1, #0
   1124a:	strd	sl, fp, [sp]
   1124e:	bl	21f24 <read_tree_block@@Base>
   11252:	mov	r4, r0
   11254:	cmp	r0, #0
   11256:	beq.w	1137e <ulist_next@@Base+0xd6a>
   1125a:	cmn.w	r0, #4096	; 0x1000
   1125e:	bhi.w	1137e <ulist_next@@Base+0xd6a>
   11262:	ldr	r3, [r0, #84]	; 0x54
   11264:	lsls	r3, r3, #29
   11266:	bpl.w	1137e <ulist_next@@Base+0xd6a>
   1126a:	ldrd	r2, r3, [sp, #88]	; 0x58
   1126e:	cmp	r9, r3
   11270:	it	eq
   11272:	cmpeq	r8, r2
   11274:	bne.n	112ce <ulist_next@@Base+0xcba>
   11276:	ldrb.w	r5, [r4, #196]	; 0xc4
   1127a:	ldr.w	r8, [r4, #192]	; 0xc0
   1127e:	cmp	r5, #0
   11280:	beq.n	11378 <ulist_next@@Base+0xd64>
   11282:	ldr.w	r9, [pc, #272]	; 11394 <ulist_next@@Base+0xd80>
   11286:	movs	r5, #0
   11288:	mov	fp, r5
   1128a:	mov	sl, r5
   1128c:	add	r9, pc
   1128e:	cmp	r5, r8
   11290:	bge.n	11318 <ulist_next@@Base+0xd04>
   11292:	ldr.w	r2, [r9, #36]	; 0x24
   11296:	ldrd	r3, r1, [r2]
   1129a:	adds	r3, #1
   1129c:	adc.w	r1, r1, #0
   112a0:	strd	r3, r1, [r2]
   112a4:	add.w	r3, r5, r5, lsl #5
   112a8:	ldrd	r0, r1, [sp, #88]	; 0x58
   112ac:	add	r3, r4
   112ae:	adds	r5, #1
   112b0:	ldr.w	r2, [r3, #214]!
   112b4:	ldr	r3, [r3, #4]
   112b6:	strd	r0, r1, [sp, #8]
   112ba:	mov	r0, r6
   112bc:	ldr.w	r1, [r6, #384]	; 0x180
   112c0:	strd	r1, sl, [sp]
   112c4:	mov	r1, r7
   112c6:	bl	11224 <ulist_next@@Base+0xc10>
   112ca:	mov	fp, r0
   112cc:	b.n	1128e <ulist_next@@Base+0xc7a>
   112ce:	ldrd	r2, r3, [sp, #80]	; 0x50
   112d2:	mov	r0, r8
   112d4:	mov	r1, r9
   112d6:	strd	r2, r3, [sp, #8]
   112da:	ldrd	r2, r3, [sp, #88]	; 0x58
   112de:	strd	r2, r3, [sp]
   112e2:	mov	r2, sl
   112e4:	mov	r3, fp
   112e6:	bl	10d3c <ulist_next@@Base+0x728>
   112ea:	cmp	r0, #0
   112ec:	bne.n	11276 <ulist_next@@Base+0xc62>
   112ee:	mov.w	fp, #12
   112f2:	b.n	1131e <ulist_next@@Base+0xd0a>
   112f4:	mul.w	r9, r6, r5
   112f8:	movs	r3, #17
   112fa:	mov	r1, r7
   112fc:	mov	r0, r4
   112fe:	add.w	r2, r9, #101	; 0x65
   11302:	bl	1bbba <read_extent_buffer@@Base>
   11306:	ldrb.w	r3, [sp, #24]
   1130a:	cmp	r3, #108	; 0x6c
   1130c:	beq.n	11332 <ulist_next@@Base+0xd1e>
   1130e:	adds	r5, #1
   11310:	cmp	r5, r8
   11312:	blt.n	112f4 <ulist_next@@Base+0xce0>
   11314:	mov.w	fp, #0
   11318:	mov	r0, r4
   1131a:	bl	1b4c0 <free_extent_buffer@@Base>
   1131e:	ldr	r2, [pc, #120]	; (11398 <ulist_next@@Base+0xd84>)
   11320:	ldr	r3, [pc, #108]	; (11390 <ulist_next@@Base+0xd7c>)
   11322:	add	r2, pc
   11324:	ldr	r3, [r2, r3]
   11326:	ldr	r2, [r3, #0]
   11328:	ldr	r3, [sp, #36]	; 0x24
   1132a:	eors	r2, r3
   1132c:	beq.n	11384 <ulist_next@@Base+0xd70>
   1132e:	blx	8c90 <__stack_chk_fail@plt>
   11332:	add	r9, r4
   11334:	ldr.w	r2, [r9, #214]	; 0xd6
   11338:	add	r2, r4
   1133a:	add.w	r3, r2, #197	; 0xc5
   1133e:	ldrb.w	r2, [r2, #217]	; 0xd9
   11342:	cmp	r2, #0
   11344:	beq.n	1130e <ulist_next@@Base+0xcfa>
   11346:	mov	r2, r3
   11348:	ldr.w	r0, [r2, #21]!
   1134c:	ldr	r1, [r2, #4]
   1134e:	orrs.w	r2, r0, r1
   11352:	beq.n	1130e <ulist_next@@Base+0xcfa>
   11354:	ldr.w	r2, [r3, #29]!
   11358:	ldr	r3, [r3, #4]
   1135a:	strd	r2, r3, [sp, #8]
   1135e:	ldrd	r2, r3, [sp, #88]	; 0x58
   11362:	strd	r2, r3, [sp]
   11366:	movs	r2, #0
   11368:	movs	r3, #0
   1136a:	bl	10d3c <ulist_next@@Base+0x728>
   1136e:	cmp	r0, #0
   11370:	bne.n	1130e <ulist_next@@Base+0xcfa>
   11372:	mov.w	fp, #12
   11376:	b.n	11318 <ulist_next@@Base+0xd04>
   11378:	add	r7, sp, #16
   1137a:	movs	r6, #25
   1137c:	b.n	11310 <ulist_next@@Base+0xcfc>
   1137e:	mvn.w	fp, #4
   11382:	b.n	1131e <ulist_next@@Base+0xd0a>
   11384:	mov	r0, fp
   11386:	add	sp, #44	; 0x2c
   11388:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1138c:	ldr	r2, [sp, #912]	; 0x390
   1138e:	movs	r5, r0
   11390:	lsls	r0, r1, #10
   11392:	movs	r0, r0
   11394:	add	r7, sp, #736	; 0x2e0
   11396:	movs	r5, r0
   11398:	ldr	r1, [sp, #984]	; 0x3d8
   1139a:	movs	r5, r0
   1139c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a0:	mov	r4, r0
   113a2:	vpush	{d8}
   113a6:	ldr	r2, [pc, #264]	; (114b0 <ulist_next@@Base+0xe9c>)
   113a8:	ldr	r3, [pc, #264]	; (114b4 <ulist_next@@Base+0xea0>)
   113aa:	add	r2, pc
   113ac:	ldr	r5, [pc, #264]	; (114b8 <ulist_next@@Base+0xea4>)
   113ae:	sub	sp, #60	; 0x3c
   113b0:	ldr	r3, [r2, r3]
   113b2:	add	r5, pc
   113b4:	adds	r5, #106	; 0x6a
   113b6:	ldr	r3, [r3, #0]
   113b8:	str	r3, [sp, #52]	; 0x34
   113ba:	mov.w	r3, #0
   113be:	movs	r3, #0
   113c0:	str	r3, [sp, #28]
   113c2:	ldr	r3, [pc, #248]	; (114bc <ulist_next@@Base+0xea8>)
   113c4:	add	r3, pc
   113c6:	str	r3, [sp, #20]
   113c8:	ldr	r3, [sp, #20]
   113ca:	add	r1, sp, #28
   113cc:	ldr	r0, [r3, #28]
   113ce:	bl	10614 <ulist_next@@Base>
   113d2:	cmp	r0, #0
   113d4:	beq.n	11470 <ulist_next@@Base+0xe5c>
   113d6:	ldr	r3, [pc, #232]	; (114c0 <ulist_next@@Base+0xeac>)
   113d8:	ldrd	r7, r6, [r0]
   113dc:	add	r3, pc
   113de:	ldr.w	r9, [r0, #8]
   113e2:	vmov	s16, r3
   113e6:	mov	sl, r7
   113e8:	mov	fp, r6
   113ea:	mov	r1, fp
   113ec:	mov	r0, sl
   113ee:	bl	1068a <ulist_next@@Base+0x76>
   113f2:	movw	r2, #590	; 0x24e
   113f6:	mov	r1, r5
   113f8:	clz	r3, r0
   113fc:	mov	r8, r0
   113fe:	vmov	r0, s16
   11402:	lsrs	r3, r3, #5
   11404:	bl	108a8 <ulist_next@@Base+0x294>
   11408:	ldrd	r2, r3, [r8, #24]
   1140c:	orrs.w	r1, r2, r3
   11410:	bne.n	11424 <ulist_next@@Base+0xe10>
   11412:	ldrd	r2, r3, [r8, #16]
   11416:	cmp	fp, r3
   11418:	it	eq
   1141a:	cmpeq	sl, r2
   1141c:	beq.n	113c8 <ulist_next@@Base+0xdb4>
   1141e:	mov	sl, r2
   11420:	mov	fp, r3
   11422:	b.n	113ea <ulist_next@@Base+0xdd6>
   11424:	mov.w	r1, #4294967295	; 0xffffffff
   11428:	cmp	r3, r1
   1142a:	mvn.w	r0, #7
   1142e:	it	eq
   11430:	cmpeq	r2, r0
   11432:	beq.n	113c8 <ulist_next@@Base+0xdb4>
   11434:	add	r1, sp, #32
   11436:	mov	r0, r4
   11438:	strd	r2, r3, [sp, #32]
   1143c:	mov.w	r2, #4294967295	; 0xffffffff
   11440:	movs	r3, #132	; 0x84
   11442:	strb.w	r2, [sp, #41]	; 0x29
   11446:	strb.w	r3, [sp, #40]	; 0x28
   1144a:	strb.w	r2, [sp, #42]	; 0x2a
   1144e:	strb.w	r2, [sp, #43]	; 0x2b
   11452:	strb.w	r2, [sp, #44]	; 0x2c
   11456:	strb.w	r2, [sp, #45]	; 0x2d
   1145a:	strb.w	r2, [sp, #46]	; 0x2e
   1145e:	strb.w	r2, [sp, #47]	; 0x2f
   11462:	strb.w	r2, [sp, #48]	; 0x30
   11466:	bl	222a6 <btrfs_read_fs_root@@Base>
   1146a:	mov	r1, r0
   1146c:	cbnz	r0, 11484 <ulist_next@@Base+0xe70>
   1146e:	movs	r0, #2
   11470:	ldr	r2, [pc, #80]	; (114c4 <ulist_next@@Base+0xeb0>)
   11472:	ldr	r3, [pc, #64]	; (114b4 <ulist_next@@Base+0xea0>)
   11474:	add	r2, pc
   11476:	ldr	r3, [r2, r3]
   11478:	ldr	r2, [r3, #0]
   1147a:	ldr	r3, [sp, #52]	; 0x34
   1147c:	eors	r2, r3
   1147e:	beq.n	114a6 <ulist_next@@Base+0xe92>
   11480:	blx	8c90 <__stack_chk_fail@plt>
   11484:	cmn.w	r0, #4096	; 0x1000
   11488:	bhi.n	1146e <ulist_next@@Base+0xe5a>
   1148a:	strd	r7, r6, [sp, #8]
   1148e:	mov	r0, r4
   11490:	ldrd	r2, r3, [r9, #8]
   11494:	strd	r2, r3, [sp]
   11498:	mov	r2, r7
   1149a:	mov	r3, r6
   1149c:	bl	11224 <ulist_next@@Base+0xc10>
   114a0:	cmp	r0, #0
   114a2:	beq.n	113c8 <ulist_next@@Base+0xdb4>
   114a4:	b.n	11470 <ulist_next@@Base+0xe5c>
   114a6:	add	sp, #60	; 0x3c
   114a8:	vpop	{d8}
   114ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114b0:	ldr	r1, [sp, #440]	; 0x1b8
   114b2:	movs	r5, r0
   114b4:	lsls	r0, r1, #10
   114b6:	movs	r0, r0
   114b8:	stcl	0, cr0, [sl], #-8
   114bc:	add	r6, sp, #512	; 0x200
   114be:	movs	r5, r0
   114c0:	ldrd	r0, r0, [r2, #-8]
   114c4:	ldr	r0, [sp, #656]	; 0x290
   114c6:	movs	r5, r0

000114c8 <qgroup_set_item_count_ptr@@Base>:
   114c8:	ldr	r3, [pc, #4]	; (114d0 <qgroup_set_item_count_ptr@@Base+0x8>)
   114ca:	add	r3, pc
   114cc:	str	r0, [r3, #36]	; 0x24
   114ce:	bx	lr
   114d0:	add	r5, sp, #488	; 0x1e8
   114d2:	movs	r5, r0

000114d4 <report_qgroups@@Base>:
   114d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114d8:	mov	r5, r0
   114da:	ldr	r4, [pc, #552]	; (11704 <report_qgroups@@Base+0x230>)
   114dc:	sub	sp, #60	; 0x3c
   114de:	ldr	r3, [pc, #552]	; (11708 <report_qgroups@@Base+0x234>)
   114e0:	add	r4, pc
   114e2:	ldr	r3, [r4, r3]
   114e4:	ldr	r3, [r3, #0]
   114e6:	cbnz	r3, 114fc <report_qgroups@@Base+0x28>
   114e8:	ldr	r3, [pc, #544]	; (1170c <report_qgroups@@Base+0x238>)
   114ea:	add	r3, pc
   114ec:	ldrb	r3, [r3, #8]
   114ee:	lsls	r3, r3, #31
   114f0:	bpl.n	114fc <report_qgroups@@Base+0x28>
   114f2:	cbz	r0, 11530 <report_qgroups@@Base+0x5c>
   114f4:	ldr	r0, [pc, #536]	; (11710 <report_qgroups@@Base+0x23c>)
   114f6:	add	r0, pc
   114f8:	blx	8e24 <puts@plt+0x4>
   114fc:	ldr	r6, [pc, #532]	; (11714 <report_qgroups@@Base+0x240>)
   114fe:	add	r6, pc
   11500:	ldrb	r3, [r6, #8]
   11502:	and.w	r3, r3, #3
   11506:	cmp	r3, #2
   11508:	bne.n	11540 <report_qgroups@@Base+0x6c>
   1150a:	ldr	r0, [pc, #524]	; (11718 <report_qgroups@@Base+0x244>)
   1150c:	add	r0, pc
   1150e:	blx	8e24 <puts@plt+0x4>
   11512:	ldrb	r3, [r6, #8]
   11514:	and.w	r3, r3, #3
   11518:	cmp	r3, #2
   1151a:	bne.n	1152a <report_qgroups@@Base+0x56>
   1151c:	ldr	r3, [pc, #508]	; (1171c <report_qgroups@@Base+0x248>)
   1151e:	ldr	r0, [pc, #512]	; (11720 <report_qgroups@@Base+0x24c>)
   11520:	ldr	r3, [r4, r3]
   11522:	add	r0, pc
   11524:	ldr	r1, [r3, #0]
   11526:	blx	91a8 <fputs@plt+0x4>
   1152a:	mov.w	r8, #1
   1152e:	b.n	11544 <report_qgroups@@Base+0x70>
   11530:	ldr	r0, [pc, #496]	; (11724 <report_qgroups@@Base+0x250>)
   11532:	add	r0, pc
   11534:	blx	8e24 <puts@plt+0x4>
   11538:	mov	r0, r5
   1153a:	add	sp, #60	; 0x3c
   1153c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11540:	mov.w	r8, #0
   11544:	ldr	r0, [pc, #480]	; (11728 <report_qgroups@@Base+0x254>)
   11546:	movs	r7, #0
   11548:	ldr.w	r9, [pc, #480]	; 1172c <report_qgroups@@Base+0x258>
   1154c:	add	r0, pc
   1154e:	ldr.w	sl, [pc, #480]	; 11730 <report_qgroups@@Base+0x25c>
   11552:	bl	186e6 <rb_first@@Base>
   11556:	ldr	r6, [pc, #476]	; (11734 <report_qgroups@@Base+0x260>)
   11558:	add	r9, pc
   1155a:	add	sl, pc
   1155c:	add	r6, pc
   1155e:	mov	r4, r0
   11560:	cbnz	r4, 11576 <report_qgroups@@Base+0xa2>
   11562:	cmp	r7, #0
   11564:	beq.w	11700 <report_qgroups@@Base+0x22c>
   11568:	cmp.w	r8, #0
   1156c:	ite	ne
   1156e:	movne	r5, #0
   11570:	mvneq.w	r5, #116	; 0x74
   11574:	b.n	11538 <report_qgroups@@Base+0x64>
   11576:	ldrd	r2, r0, [r4, #-16]
   1157a:	ldrd	r3, r1, [r4, #-48]	; 0x30
   1157e:	subs	r3, r2, r3
   11580:	str	r3, [sp, #24]
   11582:	sbc.w	r3, r0, r1
   11586:	ldrd	r2, r0, [r4, #-32]
   1158a:	str	r3, [sp, #28]
   1158c:	ldrd	r3, r1, [r4, #-64]	; 0x40
   11590:	subs	r3, r2, r3
   11592:	str	r3, [sp, #32]
   11594:	ldr	r2, [sp, #32]
   11596:	sbc.w	r3, r0, r1
   1159a:	str	r3, [sp, #36]	; 0x24
   1159c:	ldr	r3, [sp, #24]
   1159e:	orrs	r3, r2
   115a0:	ldr	r2, [sp, #36]	; 0x24
   115a2:	str	r3, [sp, #40]	; 0x28
   115a4:	ldr	r3, [sp, #28]
   115a6:	orrs	r3, r2
   115a8:	str	r3, [sp, #44]	; 0x2c
   115aa:	cbnz	r5, 115c8 <report_qgroups@@Base+0xf4>
   115ac:	ldrd	r2, r3, [sp, #40]	; 0x28
   115b0:	orrs	r3, r2
   115b2:	beq.w	116f6 <report_qgroups@@Base+0x222>
   115b6:	ldr.w	r3, [r4, #-88]
   115ba:	cbnz	r3, 115c8 <report_qgroups@@Base+0xf4>
   115bc:	ldrh.w	r2, [r4, #-90]
   115c0:	mov	r3, r5
   115c2:	orrs	r3, r2
   115c4:	beq.w	116d2 <report_qgroups@@Base+0x1fe>
   115c8:	ldrd	fp, ip, [sp, #40]	; 0x28
   115cc:	ldrd	r0, r3, [r4, #-96]	; 0x60
   115d0:	orrs.w	r1, fp, ip
   115d4:	mov.w	r2, r3, lsr #16
   115d8:	uxth	r3, r3
   115da:	bne.w	116e8 <report_qgroups@@Base+0x214>
   115de:	ldr	r1, [pc, #344]	; (11738 <report_qgroups@@Base+0x264>)
   115e0:	add	r1, pc
   115e2:	strd	r0, r3, [sp]
   115e6:	movs	r3, #0
   115e8:	str	r1, [sp, #8]
   115ea:	movs	r0, #1
   115ec:	mov	r1, sl
   115ee:	blx	900c <__printf_chk@plt+0x4>
   115f2:	ldrd	r2, r3, [r4, #-24]
   115f6:	str	r6, [sp, #8]
   115f8:	movs	r0, #1
   115fa:	ldr	r1, [pc, #320]	; (1173c <report_qgroups@@Base+0x268>)
   115fc:	strd	r2, r3, [sp, #16]
   11600:	ldrd	r2, r3, [r4, #-32]
   11604:	add	r1, pc
   11606:	str	r1, [sp, #52]	; 0x34
   11608:	strd	r2, r3, [sp]
   1160c:	mov	r3, r6
   1160e:	ldr	r2, [pc, #304]	; (11740 <report_qgroups@@Base+0x26c>)
   11610:	add	r2, pc
   11612:	blx	900c <__printf_chk@plt+0x4>
   11616:	ldrd	r2, r3, [r4, #-56]	; 0x38
   1161a:	str	r6, [sp, #8]
   1161c:	movs	r0, #1
   1161e:	ldr	r1, [sp, #52]	; 0x34
   11620:	strd	r2, r3, [sp, #16]
   11624:	ldrd	r2, r3, [r4, #-64]	; 0x40
   11628:	strd	r2, r3, [sp]
   1162c:	mov	r3, r6
   1162e:	ldr	r2, [pc, #276]	; (11744 <report_qgroups@@Base+0x270>)
   11630:	add	r2, pc
   11632:	blx	900c <__printf_chk@plt+0x4>
   11636:	ldrd	r2, r3, [sp, #32]
   1163a:	orrs	r3, r2
   1163c:	beq.n	1165c <report_qgroups@@Base+0x188>
   1163e:	ldrd	r2, r3, [sp, #32]
   11642:	movs	r0, #1
   11644:	ldr	r1, [pc, #256]	; (11748 <report_qgroups@@Base+0x274>)
   11646:	str	r6, [sp, #8]
   11648:	strd	r2, r3, [sp, #16]
   1164c:	add	r1, pc
   1164e:	strd	r2, r3, [sp]
   11652:	mov	r3, r6
   11654:	ldr	r2, [pc, #244]	; (1174c <report_qgroups@@Base+0x278>)
   11656:	add	r2, pc
   11658:	blx	900c <__printf_chk@plt+0x4>
   1165c:	ldrd	r2, r3, [r4, #-8]
   11660:	movs	r0, #1
   11662:	ldr.w	fp, [pc, #236]	; 11750 <report_qgroups@@Base+0x27c>
   11666:	ldr	r1, [pc, #236]	; (11754 <report_qgroups@@Base+0x280>)
   11668:	add	fp, pc
   1166a:	strd	r2, r3, [sp, #16]
   1166e:	str.w	fp, [sp, #8]
   11672:	add	r1, pc
   11674:	ldrd	r2, r3, [r4, #-16]
   11678:	str	r1, [sp, #52]	; 0x34
   1167a:	strd	r2, r3, [sp]
   1167e:	mov	r3, fp
   11680:	ldr	r2, [pc, #212]	; (11758 <report_qgroups@@Base+0x284>)
   11682:	add	r2, pc
   11684:	blx	900c <__printf_chk@plt+0x4>
   11688:	ldrd	r2, r3, [r4, #-40]	; 0x28
   1168c:	str.w	fp, [sp, #8]
   11690:	movs	r0, #1
   11692:	ldr	r1, [sp, #52]	; 0x34
   11694:	strd	r2, r3, [sp, #16]
   11698:	ldrd	r2, r3, [r4, #-48]	; 0x30
   1169c:	strd	r2, r3, [sp]
   116a0:	mov	r3, fp
   116a2:	ldr	r2, [pc, #184]	; (1175c <report_qgroups@@Base+0x288>)
   116a4:	add	r2, pc
   116a6:	blx	900c <__printf_chk@plt+0x4>
   116aa:	ldrd	r2, r3, [sp, #24]
   116ae:	orrs	r3, r2
   116b0:	beq.n	116ee <report_qgroups@@Base+0x21a>
   116b2:	ldrd	r2, r3, [sp, #24]
   116b6:	movs	r0, #1
   116b8:	ldr	r1, [pc, #164]	; (11760 <report_qgroups@@Base+0x28c>)
   116ba:	str.w	fp, [sp, #8]
   116be:	strd	r2, r3, [sp, #16]
   116c2:	add	r1, pc
   116c4:	strd	r2, r3, [sp]
   116c8:	mov	r3, fp
   116ca:	ldr	r2, [pc, #152]	; (11764 <report_qgroups@@Base+0x290>)
   116cc:	add	r2, pc
   116ce:	blx	900c <__printf_chk@plt+0x4>
   116d2:	ldr.w	r2, [r9, #4]
   116d6:	add.w	r3, r4, #40	; 0x28
   116da:	movs	r7, #1
   116dc:	str.w	r3, [r9, #4]
   116e0:	strd	r9, r2, [r4, #40]	; 0x28
   116e4:	str	r3, [r2, #0]
   116e6:	b.n	116f6 <report_qgroups@@Base+0x222>
   116e8:	ldr	r1, [pc, #124]	; (11768 <report_qgroups@@Base+0x294>)
   116ea:	add	r1, pc
   116ec:	b.n	115e2 <report_qgroups@@Base+0x10e>
   116ee:	ldrd	r2, r3, [sp, #40]	; 0x28
   116f2:	orrs	r3, r2
   116f4:	bne.n	116d2 <report_qgroups@@Base+0x1fe>
   116f6:	mov	r0, r4
   116f8:	bl	18706 <rb_next@@Base>
   116fc:	mov	r4, r0
   116fe:	b.n	11560 <report_qgroups@@Base+0x8c>
   11700:	mov	r5, r7
   11702:	b.n	11538 <report_qgroups@@Base+0x64>
   11704:	ldr	r0, [sp, #224]	; 0xe0
   11706:	movs	r5, r0
   11708:	lsls	r0, r6, #10
   1170a:	movs	r0, r0
   1170c:	add	r5, sp, #360	; 0x168
   1170e:	movs	r5, r0
   11710:			; <UNDEFINED> instruction: 0xe8520002
   11714:	add	r5, sp, #280	; 0x118
   11716:	movs	r5, r0
   11718:	ldmia.w	r7!, {r1}
   1171c:	lsls	r4, r3, #10
   1171e:	movs	r0, r0
   11720:	strd	r0, r0, [pc], #8	; 1172c <report_qgroups@@Base+0x258>
   11724:			; <UNDEFINED> instruction: 0xe85a0002
   11728:	add	r4, sp, #992	; 0x3e0
   1172a:	movs	r5, r0
   1172c:	ldr	r3, [sp, #432]	; 0x1b0
   1172e:	movs	r5, r0
   11730:			; <UNDEFINED> instruction: 0xe8db0002
   11734:	ldrd	r0, r0, [sp], #8
   11738:	b.n	11452 <ulist_next@@Base+0xe3e>
   1173a:	movs	r2, r0
   1173c:	strd	r0, r0, [r5], #-8
   11740:			; <UNDEFINED> instruction: 0xe8540002
   11744:			; <UNDEFINED> instruction: 0xe8590002
   11748:	strex	r0, r0, [r9, #8]
   1174c:			; <UNDEFINED> instruction: 0xe8390002
   11750:	strex	r0, r0, [sp, #8]
   11754:	b.n	11746 <report_qgroups@@Base+0x272>
   11756:	movs	r2, r0
   11758:	b.n	11720 <report_qgroups@@Base+0x24c>
   1175a:	movs	r2, r0
   1175c:	b.n	1172a <report_qgroups@@Base+0x256>
   1175e:	movs	r2, r0
   11760:	b.n	1170a <report_qgroups@@Base+0x236>
   11762:	movs	r2, r0
   11764:	b.n	116ee <report_qgroups@@Base+0x21a>
   11766:	movs	r2, r0
   11768:	b.n	1140c <ulist_next@@Base+0xdf8>
   1176a:	movs	r2, r0

0001176c <free_qgroup_counts@@Base>:
   1176c:	ldr	r0, [pc, #144]	; (11800 <free_qgroup_counts@@Base+0x94>)
   1176e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11772:	add	r0, pc
   11774:	bl	186e6 <rb_first@@Base>
   11778:	ldr	r6, [pc, #136]	; (11804 <free_qgroup_counts@@Base+0x98>)
   1177a:	add	r6, pc
   1177c:	mov	r4, r0
   1177e:	cbnz	r4, 11784 <free_qgroup_counts@@Base+0x18>
   11780:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11784:	add.w	r0, r4, #40	; 0x28
   11788:	mov	r5, r4
   1178a:	bl	10634 <ulist_next@@Base+0x20>
   1178e:	ldr.w	r1, [r5, #12]!
   11792:	sub.w	r7, r4, #96	; 0x60
   11796:	ldr.w	r8, [r1]
   1179a:	cmp	r1, r5
   1179c:	bne.n	117c6 <free_qgroup_counts@@Base+0x5a>
   1179e:	mov	r5, r4
   117a0:	ldr.w	r1, [r5, #20]!
   117a4:	ldr.w	r8, [r1]
   117a8:	cmp	r1, r5
   117aa:	bne.n	117e2 <free_qgroup_counts@@Base+0x76>
   117ac:	mov	r0, r4
   117ae:	bl	18706 <rb_next@@Base>
   117b2:	mov	r1, r6
   117b4:	mov	r5, r0
   117b6:	mov	r0, r4
   117b8:	bl	18470 <rb_erase@@Base>
   117bc:	mov	r0, r7
   117be:	blx	8b84 <free@plt+0x4>
   117c2:	mov	r4, r5
   117c4:	b.n	1177e <free_qgroup_counts@@Base+0x12>
   117c6:	mov	r0, r1
   117c8:	bl	10634 <ulist_next@@Base+0x20>
   117cc:	add.w	r0, r1, #8
   117d0:	bl	10634 <ulist_next@@Base+0x20>
   117d4:	mov	r0, r1
   117d6:	blx	8b84 <free@plt+0x4>
   117da:	mov	r1, r8
   117dc:	ldr.w	r8, [r8]
   117e0:	b.n	1179a <free_qgroup_counts@@Base+0x2e>
   117e2:	mov	r0, r1
   117e4:	bl	10634 <ulist_next@@Base+0x20>
   117e8:	add.w	r0, r1, #8
   117ec:	bl	10634 <ulist_next@@Base+0x20>
   117f0:	mov	r0, r1
   117f2:	blx	8b84 <free@plt+0x4>
   117f6:	mov	r1, r8
   117f8:	ldr.w	r8, [r8]
   117fc:	b.n	117a8 <free_qgroup_counts@@Base+0x3c>
   117fe:	nop
   11800:	add	r2, sp, #840	; 0x348
   11802:	movs	r5, r0
   11804:	add	r2, sp, #808	; 0x328
   11806:	movs	r5, r0

00011808 <qgroup_verify_all@@Base>:
   11808:	ldr	r2, [pc, #956]	; (11bc8 <qgroup_verify_all@@Base+0x3c0>)
   1180a:	ldr	r3, [pc, #960]	; (11bcc <qgroup_verify_all@@Base+0x3c4>)
   1180c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11810:	add	r2, pc
   11812:	ldrb.w	r4, [r0, #364]	; 0x16c
   11816:	mov	r9, r0
   11818:	ldr.w	r8, [pc, #948]	; 11bd0 <qgroup_verify_all@@Base+0x3c8>
   1181c:	sub	sp, #196	; 0xc4
   1181e:	ldr	r3, [r2, r3]
   11820:	ands.w	r0, r4, #16
   11824:	add	r8, pc
   11826:	ldr	r3, [r3, #0]
   11828:	str	r3, [sp, #188]	; 0xbc
   1182a:	mov.w	r3, #0
   1182e:	beq.w	11bba <qgroup_verify_all@@Base+0x3b2>
   11832:	movs	r0, #0
   11834:	bl	10414 <ulist_alloc@@Base>
   11838:	ldr	r3, [pc, #920]	; (11bd4 <qgroup_verify_all@@Base+0x3cc>)
   1183a:	add	r3, pc
   1183c:	str	r0, [r3, #28]
   1183e:	cbnz	r0, 11868 <qgroup_verify_all@@Base+0x60>
   11840:	ldr	r3, [pc, #916]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   11842:	movs	r4, #12
   11844:	ldr	r0, [pc, #916]	; (11bdc <qgroup_verify_all@@Base+0x3d4>)
   11846:	ldr.w	r3, [r8, r3]
   1184a:	add	r0, pc
   1184c:	ldr	r1, [r3, #0]
   1184e:	blx	91a8 <fputs@plt+0x4>
   11852:	ldr	r2, [pc, #908]	; (11be0 <qgroup_verify_all@@Base+0x3d8>)
   11854:	ldr	r3, [pc, #884]	; (11bcc <qgroup_verify_all@@Base+0x3c4>)
   11856:	add	r2, pc
   11858:	ldr	r3, [r2, r3]
   1185a:	ldr	r2, [r3, #0]
   1185c:	ldr	r3, [sp, #188]	; 0xbc
   1185e:	eors	r2, r3
   11860:	beq.w	11bbe <qgroup_verify_all@@Base+0x3b6>
   11864:	blx	8c90 <__stack_chk_fail@plt>
   11868:	ldr.w	r3, [r9, #44]	; 0x2c
   1186c:	mov.w	fp, #0
   11870:	mov.w	sl, #2
   11874:	mov	r6, fp
   11876:	str	r3, [sp, #40]	; 0x28
   11878:	ldr	r3, [pc, #872]	; (11be4 <qgroup_verify_all@@Base+0x3dc>)
   1187a:	add	r3, pc
   1187c:	str	r3, [sp, #52]	; 0x34
   1187e:	add	r3, sp, #120	; 0x78
   11880:	str	r3, [sp, #8]
   11882:	mov	r0, r3
   11884:	bl	1c6e8 <btrfs_init_path@@Base>
   11888:	ldr	r3, [sp, #8]
   1188a:	strb.w	r6, [sp, #69]	; 0x45
   1188e:	strb.w	r6, [sp, #70]	; 0x46
   11892:	strb.w	r6, [sp, #71]	; 0x47
   11896:	strb.w	r6, [sp, #72]	; 0x48
   1189a:	strb.w	r6, [sp, #73]	; 0x49
   1189e:	strb.w	r6, [sp, #74]	; 0x4a
   118a2:	strb.w	r6, [sp, #75]	; 0x4b
   118a6:	strb.w	r6, [sp, #76]	; 0x4c
   118aa:	cmp.w	fp, #0
   118ae:	bne.n	1193c <qgroup_verify_all@@Base+0x134>
   118b0:	movs	r2, #246	; 0xf6
   118b2:	mov	r1, fp
   118b4:	strd	r2, r1, [sp, #60]	; 0x3c
   118b8:	movs	r0, #0
   118ba:	movs	r2, #0
   118bc:	ldr	r1, [sp, #40]	; 0x28
   118be:	strd	r2, r2, [sp]
   118c2:	add	r2, sp, #60	; 0x3c
   118c4:	strb.w	r6, [sp, #68]	; 0x44
   118c8:	bl	1eadc <btrfs_search_slot@@Base>
   118cc:	subs	r4, r0, #0
   118ce:	blt.n	11942 <qgroup_verify_all@@Base+0x13a>
   118d0:	ldr	r3, [pc, #788]	; (11be8 <qgroup_verify_all@@Base+0x3e0>)
   118d2:	add	r3, pc
   118d4:	str	r3, [sp, #36]	; 0x24
   118d6:	ldr	r3, [sp, #120]	; 0x78
   118d8:	str	r3, [sp, #20]
   118da:	ldr.w	r3, [r3, #192]	; 0xc0
   118de:	str	r3, [sp, #44]	; 0x2c
   118e0:	ldr	r3, [sp, #20]
   118e2:	adds	r3, #197	; 0xc5
   118e4:	str	r3, [sp, #28]
   118e6:	movs	r3, #0
   118e8:	str	r3, [sp, #24]
   118ea:	ldr	r3, [pc, #768]	; (11bec <qgroup_verify_all@@Base+0x3e4>)
   118ec:	add	r3, pc
   118ee:	str	r3, [sp, #32]
   118f0:	ldr	r3, [sp, #44]	; 0x2c
   118f2:	ldr	r2, [sp, #24]
   118f4:	cmp	r3, r2
   118f6:	bgt.n	1197e <qgroup_verify_all@@Base+0x176>
   118f8:	ldr	r3, [sp, #40]	; 0x28
   118fa:	add	r4, sp, #120	; 0x78
   118fc:	strb.w	r6, [sp, #185]	; 0xb9
   11900:	mov	r1, r4
   11902:	ldr.w	r0, [r3, #464]	; 0x1d0
   11906:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   1190a:	cmp	r0, #0
   1190c:	beq.n	118d6 <qgroup_verify_all@@Base+0xce>
   1190e:	mov	r0, r4
   11910:	mov.w	fp, #1
   11914:	bl	1c6f8 <btrfs_release_path@@Base>
   11918:	cmp	sl, fp
   1191a:	bne.n	11938 <qgroup_verify_all@@Base+0x130>
   1191c:	mov	r0, r9
   1191e:	bl	10e7c <ulist_next@@Base+0x868>
   11922:	mov	r4, r0
   11924:	cmp	r0, #0
   11926:	beq.w	11b94 <qgroup_verify_all@@Base+0x38c>
   1192a:	ldr	r3, [pc, #684]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   1192c:	ldr	r2, [pc, #704]	; (11bf0 <qgroup_verify_all@@Base+0x3e8>)
   1192e:	ldr.w	r0, [r8, r3]
   11932:	add	r2, pc
   11934:	mov	r3, r4
   11936:	b.n	11962 <qgroup_verify_all@@Base+0x15a>
   11938:	mov	sl, fp
   1193a:	b.n	1187e <qgroup_verify_all@@Base+0x76>
   1193c:	movs	r2, #0
   1193e:	mov	r1, r2
   11940:	b.n	118b4 <qgroup_verify_all@@Base+0xac>
   11942:	ldr	r3, [pc, #660]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   11944:	movs	r1, #1
   11946:	ldr	r2, [pc, #684]	; (11bf4 <qgroup_verify_all@@Base+0x3ec>)
   11948:	ldr.w	r0, [r8, r3]
   1194c:	add	r2, pc
   1194e:	mov	r3, r4
   11950:	ldr	r0, [r0, #0]
   11952:	blx	9040 <__fprintf_chk@plt+0x4>
   11956:	ldr	r3, [pc, #640]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   11958:	ldr	r2, [pc, #668]	; (11bf8 <qgroup_verify_all@@Base+0x3f0>)
   1195a:	add	r2, pc
   1195c:	ldr.w	r0, [r8, r3]
   11960:	mov	r3, r4
   11962:	ldr	r0, [r0, #0]
   11964:	movs	r1, #1
   11966:	blx	9040 <__fprintf_chk@plt+0x4>
   1196a:	bl	107e0 <ulist_next@@Base+0x1cc>
   1196e:	ldr	r0, [pc, #652]	; (11bfc <qgroup_verify_all@@Base+0x3f4>)
   11970:	ldr	r1, [pc, #652]	; (11c00 <qgroup_verify_all@@Base+0x3f8>)
   11972:	add	r0, pc
   11974:	add	r1, pc
   11976:	adds	r0, #24
   11978:	bl	1c19e <rb_free_nodes@@Base>
   1197c:	b.n	11852 <qgroup_verify_all@@Base+0x4a>
   1197e:	ldr	r3, [sp, #24]
   11980:	movs	r2, #25
   11982:	add	r7, sp, #100	; 0x64
   11984:	ldr	r0, [sp, #20]
   11986:	muls	r2, r3
   11988:	mov	r1, r7
   1198a:	movs	r3, #17
   1198c:	adds	r2, #101	; 0x65
   1198e:	bl	1bbba <read_extent_buffer@@Base>
   11992:	ldr.w	r3, [sp, #109]	; 0x6d
   11996:	ldrd	r0, r1, [sp, #100]	; 0x64
   1199a:	str	r3, [sp, #8]
   1199c:	ldr.w	r3, [sp, #113]	; 0x71
   119a0:	strd	r0, r1, [sp, #60]	; 0x3c
   119a4:	str	r3, [sp, #12]
   119a6:	ldr	r3, [sp, #8]
   119a8:	str.w	r3, [sp, #69]	; 0x45
   119ac:	ldr	r3, [sp, #12]
   119ae:	str.w	r3, [sp, #73]	; 0x49
   119b2:	ldrb.w	r3, [sp, #108]	; 0x6c
   119b6:	strb.w	r3, [sp, #68]	; 0x44
   119ba:	cmp.w	fp, #0
   119be:	beq.n	11a30 <qgroup_verify_all@@Base+0x228>
   119c0:	cmp	r3, #246	; 0xf6
   119c2:	bne.n	11a0e <qgroup_verify_all@@Base+0x206>
   119c4:	ldrd	r3, r4, [sp, #8]
   119c8:	cmp	r4, r1
   119ca:	it	eq
   119cc:	cmpeq	r3, r0
   119ce:	bcc.n	11a0e <qgroup_verify_all@@Base+0x206>
   119d0:	bl	10650 <ulist_next@@Base+0x3c>
   119d4:	mov	r5, r0
   119d6:	ldrd	r0, r1, [sp, #8]
   119da:	bl	10650 <ulist_next@@Base+0x3c>
   119de:	mov	r4, r0
   119e0:	cbz	r5, 11a1c <qgroup_verify_all@@Base+0x214>
   119e2:	cbz	r0, 11a1c <qgroup_verify_all@@Base+0x214>
   119e4:	movs	r1, #24
   119e6:	movs	r0, #1
   119e8:	blx	8ab8 <calloc@plt+0x4>
   119ec:	cbz	r0, 11a2a <qgroup_verify_all@@Base+0x222>
   119ee:	strd	r4, r5, [r0, #16]
   119f2:	adds	r5, #108	; 0x6c
   119f4:	ldr	r3, [r5, #4]
   119f6:	add.w	r1, r0, #8
   119fa:	str	r0, [r5, #4]
   119fc:	adds	r4, #116	; 0x74
   119fe:	strd	r5, r3, [r0]
   11a02:	str	r0, [r3, #0]
   11a04:	ldr	r2, [r4, #4]
   11a06:	str	r1, [r4, #4]
   11a08:	strd	r4, r2, [r0, #8]
   11a0c:	str	r1, [r2, #0]
   11a0e:	ldr	r3, [sp, #24]
   11a10:	adds	r3, #1
   11a12:	str	r3, [sp, #24]
   11a14:	ldr	r3, [sp, #28]
   11a16:	adds	r3, #25
   11a18:	str	r3, [sp, #28]
   11a1a:	b.n	118f0 <qgroup_verify_all@@Base+0xe8>
   11a1c:	mvn.w	r4, #1
   11a20:	ldr	r0, [pc, #480]	; (11c04 <qgroup_verify_all@@Base+0x3fc>)
   11a22:	add	r0, pc
   11a24:	bl	1bd1c <__btrfs_error@@Base>
   11a28:	b.n	11956 <qgroup_verify_all@@Base+0x14e>
   11a2a:	mvn.w	r4, #11
   11a2e:	b.n	11a20 <qgroup_verify_all@@Base+0x218>
   11a30:	cmp	r3, #240	; 0xf0
   11a32:	bne.n	11a62 <qgroup_verify_all@@Base+0x25a>
   11a34:	ldr	r3, [sp, #28]
   11a36:	ldr	r2, [sp, #20]
   11a38:	ldr	r1, [sp, #32]
   11a3a:	ldr.w	r3, [r3, #17]
   11a3e:	add	r3, r2
   11a40:	ldrb	r1, [r1, #8]
   11a42:	ldr.w	r2, [r3, #213]	; 0xd5
   11a46:	bic.w	r1, r1, #3
   11a4a:	ubfx	r2, r2, #1, #2
   11a4e:	orrs	r2, r1
   11a50:	ldr	r1, [sp, #32]
   11a52:	strb	r2, [r1, #8]
   11a54:	ldr.w	r2, [r3, #221]	; 0xdd
   11a58:	ldr.w	r3, [r3, #225]	; 0xe1
   11a5c:	str	r2, [r1, #16]
   11a5e:	str	r3, [r1, #20]
   11a60:	b.n	11a0e <qgroup_verify_all@@Base+0x206>
   11a62:	cmp	r3, #242	; 0xf2
   11a64:	bne.n	11a0e <qgroup_verify_all@@Base+0x206>
   11a66:	ldr	r3, [sp, #20]
   11a68:	movs	r1, #144	; 0x90
   11a6a:	movs	r0, #1
   11a6c:	adds	r3, #96	; 0x60
   11a6e:	str	r3, [sp, #48]	; 0x30
   11a70:	ldr	r3, [sp, #28]
   11a72:	ldr.w	r5, [r3, #17]
   11a76:	blx	8ab8 <calloc@plt+0x4>
   11a7a:	adds	r5, #101	; 0x65
   11a7c:	mov	r4, r0
   11a7e:	cmp	r0, #0
   11a80:	beq.n	11b80 <qgroup_verify_all@@Base+0x378>
   11a82:	ldrd	r2, r3, [sp, #8]
   11a86:	mov	ip, r0
   11a88:	strd	r2, r3, [ip], #12
   11a8c:	ldmia	r7!, {r0, r1, r2, r3}
   11a8e:	stmia.w	ip!, {r0, r1, r2, r3}
   11a92:	ldr	r3, [r7, #0]
   11a94:	strb.w	r3, [ip]
   11a98:	ldr	r3, [sp, #48]	; 0x30
   11a9a:	add	r3, r5
   11a9c:	ldr	r2, [r3, #8]
   11a9e:	mov	r5, r3
   11aa0:	ldr	r3, [r3, #12]
   11aa2:	strd	r2, r3, [r4, #32]
   11aa6:	ldr	r2, [r5, #16]
   11aa8:	ldr	r3, [r5, #20]
   11aaa:	strd	r2, r3, [r4, #40]	; 0x28
   11aae:	ldr	r2, [r5, #24]
   11ab0:	ldr	r3, [r5, #28]
   11ab2:	strd	r2, r3, [r4, #48]	; 0x30
   11ab6:	ldr	r2, [r5, #32]
   11ab8:	ldr	r3, [r5, #36]	; 0x24
   11aba:	mov	r5, fp
   11abc:	strd	r2, r3, [r4, #56]	; 0x38
   11ac0:	add.w	r3, r4, #108	; 0x6c
   11ac4:	strd	r3, r3, [r4, #108]	; 0x6c
   11ac8:	add.w	r3, r4, #116	; 0x74
   11acc:	strd	r3, r3, [r4, #116]	; 0x74
   11ad0:	add.w	r3, r4, #136	; 0x88
   11ad4:	ldr	r2, [sp, #52]	; 0x34
   11ad6:	strd	r3, r3, [r4, #136]	; 0x88
   11ada:	ldr	r7, [r2, #0]
   11adc:	cmp	r7, #0
   11ade:	bne.n	11b52 <qgroup_verify_all@@Base+0x34a>
   11ae0:	ldr	r1, [sp, #36]	; 0x24
   11ae2:	ldr	r0, [sp, #36]	; 0x24
   11ae4:	strd	r5, r7, [r4, #96]	; 0x60
   11ae8:	ldr	r1, [r1, #4]
   11aea:	str	r7, [r4, #104]	; 0x68
   11aec:	adds	r1, #1
   11aee:	str	r1, [r0, #4]
   11af0:	add.w	r0, r4, #96	; 0x60
   11af4:	ldr	r1, [sp, #36]	; 0x24
   11af6:	str	r0, [r2, #0]
   11af8:	bl	183ca <rb_insert_color@@Base>
   11afc:	ldr.w	r2, [sp, #69]	; 0x45
   11b00:	ldr.w	r3, [sp, #73]	; 0x49
   11b04:	add	r1, sp, #80	; 0x50
   11b06:	mov	r0, r9
   11b08:	strd	r2, r3, [sp, #80]	; 0x50
   11b0c:	mov.w	r2, #4294967295	; 0xffffffff
   11b10:	movs	r3, #132	; 0x84
   11b12:	strb.w	r2, [sp, #89]	; 0x59
   11b16:	strb.w	r3, [sp, #88]	; 0x58
   11b1a:	strb.w	r2, [sp, #90]	; 0x5a
   11b1e:	strb.w	r2, [sp, #91]	; 0x5b
   11b22:	strb.w	r2, [sp, #92]	; 0x5c
   11b26:	strb.w	r2, [sp, #93]	; 0x5d
   11b2a:	strb.w	r2, [sp, #94]	; 0x5e
   11b2e:	strb.w	r2, [sp, #95]	; 0x5f
   11b32:	strb.w	r2, [sp, #96]	; 0x60
   11b36:	bl	221a4 <btrfs_read_fs_root_no_cache@@Base>
   11b3a:	cmp	r0, #0
   11b3c:	beq.w	11a0e <qgroup_verify_all@@Base+0x206>
   11b40:	cmn.w	r0, #4096	; 0x1000
   11b44:	bhi.w	11a0e <qgroup_verify_all@@Base+0x206>
   11b48:	movs	r3, #1
   11b4a:	str	r3, [r4, #8]
   11b4c:	bl	20e8a <btrfs_free_fs_root@@Base>
   11b50:	b.n	11a0e <qgroup_verify_all@@Base+0x206>
   11b52:	ldrd	r0, r1, [r7, #-96]	; 0x60
   11b56:	ldrd	r2, r3, [sp, #8]
   11b5a:	cmp	r3, r1
   11b5c:	it	eq
   11b5e:	cmpeq	r2, r0
   11b60:	bcs.n	11b6a <qgroup_verify_all@@Base+0x362>
   11b62:	add.w	r2, r7, #8
   11b66:	mov	r5, r7
   11b68:	b.n	11ada <qgroup_verify_all@@Base+0x2d2>
   11b6a:	ldrd	r2, r3, [sp, #8]
   11b6e:	cmp	r1, r3
   11b70:	it	eq
   11b72:	cmpeq	r0, r2
   11b74:	bcs.n	11b7a <qgroup_verify_all@@Base+0x372>
   11b76:	adds	r2, r7, #4
   11b78:	b.n	11b66 <qgroup_verify_all@@Base+0x35e>
   11b7a:	mov	r0, r4
   11b7c:	blx	8b84 <free@plt+0x4>
   11b80:	ldr	r3, [pc, #84]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   11b82:	movs	r4, #12
   11b84:	ldr	r0, [pc, #128]	; (11c08 <qgroup_verify_all@@Base+0x400>)
   11b86:	ldr.w	r3, [r8, r3]
   11b8a:	add	r0, pc
   11b8c:	ldr	r1, [r3, #0]
   11b8e:	blx	91a8 <fputs@plt+0x4>
   11b92:	b.n	11956 <qgroup_verify_all@@Base+0x14e>
   11b94:	mov	r0, r9
   11b96:	bl	1139c <ulist_next@@Base+0xd88>
   11b9a:	mov	r4, r0
   11b9c:	cbz	r0, 11bac <qgroup_verify_all@@Base+0x3a4>
   11b9e:	ldr	r3, [pc, #56]	; (11bd8 <qgroup_verify_all@@Base+0x3d0>)
   11ba0:	ldr	r2, [pc, #104]	; (11c0c <qgroup_verify_all@@Base+0x404>)
   11ba2:	ldr.w	r0, [r8, r3]
   11ba6:	add	r2, pc
   11ba8:	mov	r3, r4
   11baa:	b.n	11962 <qgroup_verify_all@@Base+0x15a>
   11bac:	movs	r2, #0
   11bae:	movs	r3, #0
   11bb0:	mov	r0, sl
   11bb2:	bl	108c8 <ulist_next@@Base+0x2b4>
   11bb6:	mov	r4, r0
   11bb8:	b.n	1196a <qgroup_verify_all@@Base+0x162>
   11bba:	mov	r4, r0
   11bbc:	b.n	11852 <qgroup_verify_all@@Base+0x4a>
   11bbe:	mov	r0, r4
   11bc0:	add	sp, #196	; 0xc4
   11bc2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bc6:	nop
   11bc8:	str	r5, [sp, #32]
   11bca:	movs	r5, r0
   11bcc:	lsls	r0, r1, #10
   11bce:	movs	r0, r0
   11bd0:	str	r4, [sp, #976]	; 0x3d0
   11bd2:	movs	r5, r0
   11bd4:	add	r2, sp, #40	; 0x28
   11bd6:	movs	r5, r0
   11bd8:	lsls	r4, r3, #10
   11bda:	movs	r0, r0
   11bdc:	b.n	118ca <qgroup_verify_all@@Base+0xc2>
   11bde:	movs	r2, r0
   11be0:	str	r4, [sp, #776]	; 0x308
   11be2:	movs	r5, r0
   11be4:	add	r1, sp, #808	; 0x328
   11be6:	movs	r5, r0
   11be8:	add	r1, sp, #456	; 0x1c8
   11bea:	movs	r5, r0
   11bec:	add	r1, sp, #352	; 0x160
   11bee:	movs	r5, r0
   11bf0:	b.n	117fe <free_qgroup_counts@@Base+0x92>
   11bf2:	movs	r2, r0
   11bf4:	b.n	122fe <repair_qgroups@@Base+0x63a>
   11bf6:	movs	r2, r0
   11bf8:	b.n	1176a <report_qgroups@@Base+0x296>
   11bfa:	movs	r2, r0
   11bfc:	add	r0, sp, #840	; 0x348
   11bfe:	movs	r5, r0
   11c00:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
   11c04:	b.n	1159e <report_qgroups@@Base+0xca>
   11c06:	movs	r2, r0
   11c08:	b.n	122ee <repair_qgroups@@Base+0x62a>
   11c0a:	movs	r2, r0
   11c0c:	b.n	12380 <repair_qgroups@@Base+0x6bc>
   11c0e:	movs	r2, r0

00011c10 <print_extent_state@@Base>:
   11c10:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11c14:	mov	r6, r0
   11c16:	movs	r0, #0
   11c18:	mov	r7, r3
   11c1a:	mov	r8, r2
   11c1c:	bl	10414 <ulist_alloc@@Base>
   11c20:	ldr	r3, [pc, #124]	; (11ca0 <print_extent_state@@Base+0x90>)
   11c22:	ldr	r5, [pc, #128]	; (11ca4 <print_extent_state@@Base+0x94>)
   11c24:	add	r3, pc
   11c26:	add	r5, pc
   11c28:	str	r0, [r3, #28]
   11c2a:	cbnz	r0, 11c42 <print_extent_state@@Base+0x32>
   11c2c:	ldr	r3, [pc, #120]	; (11ca8 <print_extent_state@@Base+0x98>)
   11c2e:	movs	r4, #12
   11c30:	ldr	r0, [pc, #120]	; (11cac <print_extent_state@@Base+0x9c>)
   11c32:	ldr	r3, [r5, r3]
   11c34:	add	r0, pc
   11c36:	ldr	r1, [r3, #0]
   11c38:	blx	91a8 <fputs@plt+0x4>
   11c3c:	mov	r0, r4
   11c3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11c42:	mov	r0, r6
   11c44:	bl	10e7c <ulist_next@@Base+0x868>
   11c48:	mov	r4, r0
   11c4a:	cbz	r0, 11c72 <print_extent_state@@Base+0x62>
   11c4c:	ldr	r3, [pc, #88]	; (11ca8 <print_extent_state@@Base+0x98>)
   11c4e:	ldr	r2, [pc, #96]	; (11cb0 <print_extent_state@@Base+0xa0>)
   11c50:	add	r2, pc
   11c52:	ldr	r0, [r5, r3]
   11c54:	mov	r3, r4
   11c56:	ldr	r0, [r0, #0]
   11c58:	movs	r1, #1
   11c5a:	blx	9040 <__fprintf_chk@plt+0x4>
   11c5e:	bl	107e0 <ulist_next@@Base+0x1cc>
   11c62:	ldr	r0, [pc, #80]	; (11cb4 <print_extent_state@@Base+0xa4>)
   11c64:	ldr	r1, [pc, #80]	; (11cb8 <print_extent_state@@Base+0xa8>)
   11c66:	add	r0, pc
   11c68:	add	r1, pc
   11c6a:	adds	r0, #24
   11c6c:	bl	1c19e <rb_free_nodes@@Base>
   11c70:	b.n	11c3c <print_extent_state@@Base+0x2c>
   11c72:	mov	r0, r6
   11c74:	bl	1139c <ulist_next@@Base+0xd88>
   11c78:	mov	r4, r0
   11c7a:	cbz	r0, 11c88 <print_extent_state@@Base+0x78>
   11c7c:	ldr	r3, [pc, #40]	; (11ca8 <print_extent_state@@Base+0x98>)
   11c7e:	ldr	r2, [pc, #60]	; (11cbc <print_extent_state@@Base+0xac>)
   11c80:	ldr	r0, [r5, r3]
   11c82:	add	r2, pc
   11c84:	mov	r3, r4
   11c86:	b.n	11c56 <print_extent_state@@Base+0x46>
   11c88:	ldr	r0, [pc, #52]	; (11cc0 <print_extent_state@@Base+0xb0>)
   11c8a:	add	r0, pc
   11c8c:	blx	8e24 <puts@plt+0x4>
   11c90:	mov	r0, r4
   11c92:	mov	r2, r8
   11c94:	mov	r3, r7
   11c96:	bl	108c8 <ulist_next@@Base+0x2b4>
   11c9a:	mov	r4, r0
   11c9c:	b.n	11c5e <print_extent_state@@Base+0x4e>
   11c9e:	nop
   11ca0:	add	r6, pc, #128	; (adr r6, 11d24 <repair_qgroups@@Base+0x60>)
   11ca2:	movs	r5, r0
   11ca4:	str	r0, [sp, #968]	; 0x3c8
   11ca6:	movs	r5, r0
   11ca8:	lsls	r4, r3, #10
   11caa:	movs	r0, r0
   11cac:	b.n	121c6 <repair_qgroups@@Base+0x502>
   11cae:	movs	r2, r0
   11cb0:	b.n	12282 <repair_qgroups@@Base+0x5be>
   11cb2:	movs	r2, r0
   11cb4:	add	r5, pc, #888	; (adr r5, 12030 <repair_qgroups@@Base+0x36c>)
   11cb6:	movs	r5, r0
   11cb8:			; <UNDEFINED> instruction: 0xea19ffff
   11cbc:	b.n	12278 <repair_qgroups@@Base+0x5b4>
   11cbe:	movs	r2, r0
   11cc0:	b.n	122aa <repair_qgroups@@Base+0x5e6>
   11cc2:	movs	r2, r0

00011cc4 <repair_qgroups@@Base>:
   11cc4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cc8:	mov	r6, r1
   11cca:	vpush	{d8}
   11cce:	ldr	r1, [pc, #620]	; (11f3c <repair_qgroups@@Base+0x278>)
   11cd0:	ldr	r2, [pc, #620]	; (11f40 <repair_qgroups@@Base+0x27c>)
   11cd2:	add	r1, pc
   11cd4:	ldr	r3, [pc, #620]	; (11f44 <repair_qgroups@@Base+0x280>)
   11cd6:	sub	sp, #124	; 0x7c
   11cd8:	add	r3, pc
   11cda:	str	r0, [sp, #16]
   11cdc:	ldr	r2, [r1, r2]
   11cde:	ldr	r2, [r2, #0]
   11ce0:	str	r2, [sp, #116]	; 0x74
   11ce2:	mov.w	r2, #0
   11ce6:	movs	r2, #0
   11ce8:	str	r2, [r6, #0]
   11cea:	ldr	r2, [pc, #604]	; (11f48 <repair_qgroups@@Base+0x284>)
   11cec:	ldr	r3, [r3, r2]
   11cee:	ldr	r3, [r3, #0]
   11cf0:	cbnz	r3, 11d0a <repair_qgroups@@Base+0x46>
   11cf2:	movs	r4, #0
   11cf4:	ldr	r2, [pc, #596]	; (11f4c <repair_qgroups@@Base+0x288>)
   11cf6:	ldr	r3, [pc, #584]	; (11f40 <repair_qgroups@@Base+0x27c>)
   11cf8:	add	r2, pc
   11cfa:	ldr	r3, [r2, r3]
   11cfc:	ldr	r2, [r3, #0]
   11cfe:	ldr	r3, [sp, #116]	; 0x74
   11d00:	eors	r2, r3
   11d02:	beq.w	11f2e <repair_qgroups@@Base+0x26a>
   11d06:	blx	8c90 <__stack_chk_fail@plt>
   11d0a:	ldr	r3, [pc, #580]	; (11f50 <repair_qgroups@@Base+0x28c>)
   11d0c:	add	r3, pc
   11d0e:	str	r3, [sp, #20]
   11d10:	ldr	r5, [r3, #0]
   11d12:	ldr	r3, [pc, #576]	; (11f54 <repair_qgroups@@Base+0x290>)
   11d14:	add	r3, pc
   11d16:	ldr.w	r2, [r5], #-136
   11d1a:	vmov	s16, r3
   11d1e:	ldr	r3, [pc, #568]	; (11f58 <repair_qgroups@@Base+0x294>)
   11d20:	sub.w	r8, r2, #136	; 0x88
   11d24:	add	r3, pc
   11d26:	vmov	s17, r3
   11d2a:	ldr	r2, [sp, #20]
   11d2c:	add.w	r3, r5, #136	; 0x88
   11d30:	str	r3, [sp, #12]
   11d32:	cmp	r3, r2
   11d34:	bne.n	11d72 <repair_qgroups@@Base+0xae>
   11d36:	ldr	r3, [r6, #0]
   11d38:	cbnz	r3, 11d44 <repair_qgroups@@Base+0x80>
   11d3a:	ldr	r3, [pc, #544]	; (11f5c <repair_qgroups@@Base+0x298>)
   11d3c:	add	r3, pc
   11d3e:	ldrb	r3, [r3, #8]
   11d40:	lsls	r3, r3, #30
   11d42:	beq.n	11cf2 <repair_qgroups@@Base+0x2e>
   11d44:	ldr	r3, [sp, #16]
   11d46:	ldr	r0, [pc, #536]	; (11f60 <repair_qgroups@@Base+0x29c>)
   11d48:	ldr.w	r8, [r3, #44]	; 0x2c
   11d4c:	add	r0, pc
   11d4e:	blx	8e24 <puts@plt+0x4>
   11d52:	movs	r1, #1
   11d54:	mov	r0, r8
   11d56:	bl	2f81c <btrfs_start_transaction@@Base>
   11d5a:	cmn.w	r0, #4096	; 0x1000
   11d5e:	mov	r5, r0
   11d60:	bls.w	11e7c <repair_qgroups@@Base+0x1b8>
   11d64:	mov	r4, r0
   11d66:	cmp	r4, #0
   11d68:	bne.n	11cf4 <repair_qgroups@@Base+0x30>
   11d6a:	ldr	r3, [r6, #0]
   11d6c:	adds	r3, #1
   11d6e:	str	r3, [r6, #0]
   11d70:	b.n	11cf4 <repair_qgroups@@Base+0x30>
   11d72:	ldr	r3, [sp, #16]
   11d74:	mov.w	r9, #0
   11d78:	ldrd	r1, r2, [r5]
   11d7c:	movs	r0, #1
   11d7e:	ldr.w	fp, [r3, #44]	; 0x2c
   11d82:	uxth	r3, r2
   11d84:	lsrs	r2, r2, #16
   11d86:	strd	r1, r3, [sp]
   11d8a:	mov	r3, r9
   11d8c:	vmov	r1, s16
   11d90:	blx	900c <__printf_chk@plt+0x4>
   11d94:	movs	r1, #1
   11d96:	mov	r0, fp
   11d98:	bl	2f81c <btrfs_start_transaction@@Base>
   11d9c:	cmn.w	r0, #4096	; 0x1000
   11da0:	mov	r7, r0
   11da2:	bls.n	11dca <repair_qgroups@@Base+0x106>
   11da4:	mov	r4, r0
   11da6:	cmp	r4, #0
   11da8:	bne.n	11cf4 <repair_qgroups@@Base+0x30>
   11daa:	ldr	r3, [r6, #0]
   11dac:	adds	r3, #1
   11dae:	str	r3, [r6, #0]
   11db0:	ldrd	r2, r3, [r5, #136]	; 0x88
   11db4:	str	r3, [r2, #4]
   11db6:	str	r2, [r3, #0]
   11db8:	ldr	r3, [sp, #12]
   11dba:	strd	r3, r3, [r5, #136]	; 0x88
   11dbe:	mov	r5, r8
   11dc0:	ldr.w	r3, [r8, #136]	; 0x88
   11dc4:	sub.w	r8, r3, #136	; 0x88
   11dc8:	b.n	11d2a <repair_qgroups@@Base+0x66>
   11dca:	add.w	sl, sp, #48	; 0x30
   11dce:	mov	r0, sl
   11dd0:	bl	1c6e8 <btrfs_init_path@@Base>
   11dd4:	movs	r3, #242	; 0xf2
   11dd6:	strd	r9, r9, [sp, #28]
   11dda:	mov	r1, fp
   11ddc:	strb.w	r3, [sp, #36]	; 0x24
   11de0:	mov	r0, r7
   11de2:	ldrd	r2, r3, [r5]
   11de6:	str.w	r2, [sp, #37]	; 0x25
   11dea:	add	r2, sp, #28
   11dec:	str.w	r3, [sp, #41]	; 0x29
   11df0:	movs	r3, #1
   11df2:	strd	r9, r3, [sp]
   11df6:	mov	r3, sl
   11df8:	bl	1eadc <btrfs_search_slot@@Base>
   11dfc:	mov	r4, r0
   11dfe:	cbz	r0, 11e2e <repair_qgroups@@Base+0x16a>
   11e00:	ldrd	r1, r2, [r5]
   11e04:	vmov	r0, s17
   11e08:	uxth	r3, r2
   11e0a:	lsrs	r2, r2, #16
   11e0c:	strd	r1, r3, [sp]
   11e10:	mov	r3, r9
   11e12:	bl	1bd1c <__btrfs_error@@Base>
   11e16:	cmp	r4, #0
   11e18:	it	gt
   11e1a:	mvngt.w	r4, #1
   11e1e:	mov	r1, fp
   11e20:	mov	r0, r7
   11e22:	bl	2fa9c <btrfs_commit_transaction@@Base>
   11e26:	mov	r0, sl
   11e28:	bl	1c6f8 <btrfs_release_path@@Base>
   11e2c:	b.n	11da6 <repair_qgroups@@Base+0xe2>
   11e2e:	ldr	r2, [sp, #48]	; 0x30
   11e30:	movs	r1, #25
   11e32:	ldr	r3, [sp, #80]	; 0x50
   11e34:	adds	r2, #96	; 0x60
   11e36:	ldr	r0, [r7, #12]
   11e38:	mla	r3, r1, r3, r2
   11e3c:	ldr	r1, [r7, #8]
   11e3e:	ldr.w	r3, [r3, #118]	; 0x76
   11e42:	adds	r3, #101	; 0x65
   11e44:	add.w	ip, r2, r3
   11e48:	str	r1, [r2, r3]
   11e4a:	str.w	r0, [ip, #4]
   11e4e:	ldr	r0, [sp, #48]	; 0x30
   11e50:	ldrd	r2, r1, [r5, #64]	; 0x40
   11e54:	add.w	ip, r0, #96	; 0x60
   11e58:	add	r3, ip
   11e5a:	str	r2, [r3, #8]
   11e5c:	str	r1, [r3, #12]
   11e5e:	ldrd	r1, r2, [r5, #72]	; 0x48
   11e62:	str	r1, [r3, #16]
   11e64:	str	r2, [r3, #20]
   11e66:	ldrd	r1, r2, [r5, #80]	; 0x50
   11e6a:	str	r1, [r3, #24]
   11e6c:	str	r2, [r3, #28]
   11e6e:	ldrd	r1, r2, [r5, #88]	; 0x58
   11e72:	str	r1, [r3, #32]
   11e74:	str	r2, [r3, #36]	; 0x24
   11e76:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   11e7a:	b.n	11e1e <repair_qgroups@@Base+0x15a>
   11e7c:	add	r7, sp, #48	; 0x30
   11e7e:	mov.w	r9, #1
   11e82:	mov	r0, r7
   11e84:	bl	1c6e8 <btrfs_init_path@@Base>
   11e88:	movs	r3, #0
   11e8a:	movs	r2, #240	; 0xf0
   11e8c:	strd	r3, r3, [sp, #28]
   11e90:	strb.w	r2, [sp, #36]	; 0x24
   11e94:	mov	r1, r8
   11e96:	strb.w	r3, [sp, #37]	; 0x25
   11e9a:	add	r2, sp, #28
   11e9c:	strb.w	r3, [sp, #38]	; 0x26
   11ea0:	mov	r0, r5
   11ea2:	strb.w	r3, [sp, #39]	; 0x27
   11ea6:	strb.w	r3, [sp, #40]	; 0x28
   11eaa:	strb.w	r3, [sp, #41]	; 0x29
   11eae:	strb.w	r3, [sp, #42]	; 0x2a
   11eb2:	strb.w	r3, [sp, #43]	; 0x2b
   11eb6:	strb.w	r3, [sp, #44]	; 0x2c
   11eba:	strd	r3, r9, [sp]
   11ebe:	mov	r3, r7
   11ec0:	bl	1eadc <btrfs_search_slot@@Base>
   11ec4:	mov	r4, r0
   11ec6:	cbz	r0, 11ee8 <repair_qgroups@@Base+0x224>
   11ec8:	ldr	r0, [pc, #152]	; (11f64 <repair_qgroups@@Base+0x2a0>)
   11eca:	add	r0, pc
   11ecc:	bl	1bd1c <__btrfs_error@@Base>
   11ed0:	cmp	r4, #0
   11ed2:	it	gt
   11ed4:	mvngt.w	r4, #1
   11ed8:	mov	r1, r8
   11eda:	mov	r0, r5
   11edc:	bl	2fa9c <btrfs_commit_transaction@@Base>
   11ee0:	mov	r0, r7
   11ee2:	bl	1c6f8 <btrfs_release_path@@Base>
   11ee6:	b.n	11d66 <repair_qgroups@@Base+0xa2>
   11ee8:	ldr	r0, [sp, #48]	; 0x30
   11eea:	movs	r1, #25
   11eec:	ldr	r2, [sp, #80]	; 0x50
   11eee:	add.w	r3, r0, #96	; 0x60
   11ef2:	mla	r2, r1, r2, r3
   11ef6:	ldr.w	r2, [r2, #118]	; 0x76
   11efa:	adds	r2, #101	; 0x65
   11efc:	add	r3, r2
   11efe:	strb.w	r9, [r3, #16]
   11f02:	strb	r4, [r3, #17]
   11f04:	strb	r4, [r3, #18]
   11f06:	strb	r4, [r3, #19]
   11f08:	strb	r4, [r3, #20]
   11f0a:	strb	r4, [r3, #21]
   11f0c:	strb	r4, [r3, #22]
   11f0e:	strb	r4, [r3, #23]
   11f10:	strb	r4, [r3, #24]
   11f12:	strb	r4, [r3, #25]
   11f14:	strb	r4, [r3, #26]
   11f16:	strb	r4, [r3, #27]
   11f18:	strb	r4, [r3, #28]
   11f1a:	strb	r4, [r3, #29]
   11f1c:	strb	r4, [r3, #30]
   11f1e:	strb	r4, [r3, #31]
   11f20:	ldrd	r1, r2, [r5, #8]
   11f24:	str	r1, [r3, #8]
   11f26:	str	r2, [r3, #12]
   11f28:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   11f2c:	b.n	11ed8 <repair_qgroups@@Base+0x214>
   11f2e:	mov	r0, r4
   11f30:	add	sp, #124	; 0x7c
   11f32:	vpop	{d8}
   11f36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f3a:	nop
   11f3c:	str	r0, [sp, #280]	; 0x118
   11f3e:	movs	r5, r0
   11f40:	lsls	r0, r1, #10
   11f42:	movs	r0, r0
   11f44:	str	r0, [sp, #256]	; 0x100
   11f46:	movs	r5, r0
   11f48:	lsls	r0, r6, #10
   11f4a:	movs	r0, r0
   11f4c:	str	r0, [sp, #128]	; 0x80
   11f4e:	movs	r5, r0
   11f50:	str	r3, [sp, #736]	; 0x2e0
   11f52:	movs	r5, r0
   11f54:	b.n	12462 <repair_qgroups@@Base+0x79e>
   11f56:	movs	r2, r0
   11f58:	b.n	12478 <repair_qgroups@@Base+0x7b4>
   11f5a:	movs	r2, r0
   11f5c:	add	r5, pc, #32	; (adr r5, 11f80 <repair_qgroups@@Base+0x2bc>)
   11f5e:	movs	r5, r0
   11f60:	b.n	1248c <repair_qgroups@@Base+0x7c8>
   11f62:	movs	r2, r0
   11f64:	b.n	121c8 <repair_qgroups@@Base+0x504>
   11f66:	movs	r2, r0
   11f68:	push	{r4, lr}
   11f6a:	cbnz	r0, 11f6e <repair_qgroups@@Base+0x2aa>
   11f6c:	pop	{r4, pc}
   11f6e:	ldr	r4, [r0, #16]
   11f70:	blx	8b84 <free@plt+0x4>
   11f74:	mov	r0, r4
   11f76:	b.n	11f6a <repair_qgroups@@Base+0x2a6>
   11f78:	ldr	r2, [pc, #92]	; (11fd8 <repair_qgroups@@Base+0x314>)
   11f7a:	ldr	r3, [pc, #96]	; (11fdc <repair_qgroups@@Base+0x318>)
   11f7c:	add	r2, pc
   11f7e:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   11f82:	mov	r5, r0
   11f84:	ldr	r3, [r2, r3]
   11f86:	mov	r8, sp
   11f88:	movs	r6, #0
   11f8a:	movs	r7, #0
   11f8c:	ldr	r3, [r3, #0]
   11f8e:	str	r3, [sp, #4]
   11f90:	mov.w	r3, #0
   11f94:	movs	r3, #0
   11f96:	str	r3, [sp, #0]
   11f98:	mov	r1, r8
   11f9a:	mov	r0, r5
   11f9c:	bl	10614 <ulist_next@@Base>
   11fa0:	mov	r4, r0
   11fa2:	cbnz	r0, 11fbe <repair_qgroups@@Base+0x2fa>
   11fa4:	mov	r0, r5
   11fa6:	bl	10428 <ulist_free@@Base>
   11faa:	ldr	r2, [pc, #52]	; (11fe0 <repair_qgroups@@Base+0x31c>)
   11fac:	ldr	r3, [pc, #44]	; (11fdc <repair_qgroups@@Base+0x318>)
   11fae:	add	r2, pc
   11fb0:	ldr	r3, [r2, r3]
   11fb2:	ldr	r2, [r3, #0]
   11fb4:	ldr	r3, [sp, #4]
   11fb6:	eors	r2, r3
   11fb8:	beq.n	11fd2 <repair_qgroups@@Base+0x30e>
   11fba:	blx	8c90 <__stack_chk_fail@plt>
   11fbe:	ldrd	r0, r1, [r4, #8]
   11fc2:	orrs.w	r3, r0, r1
   11fc6:	beq.n	11f98 <repair_qgroups@@Base+0x2d4>
   11fc8:	bl	11f68 <repair_qgroups@@Base+0x2a4>
   11fcc:	strd	r6, r7, [r4, #8]
   11fd0:	b.n	11f98 <repair_qgroups@@Base+0x2d4>
   11fd2:	add	sp, #8
   11fd4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11fd8:	ldrh	r4, [r3, #44]	; 0x2c
   11fda:	movs	r5, r0
   11fdc:	lsls	r0, r1, #10
   11fde:	movs	r0, r0
   11fe0:	ldrh	r2, [r5, #42]	; 0x2a
   11fe2:	movs	r5, r0
   11fe4:	push	{r4, lr}
   11fe6:	mov	r4, r1
   11fe8:	ldr	r1, [pc, #84]	; (12040 <repair_qgroups@@Base+0x37c>)
   11fea:	sub	sp, #24
   11fec:	ldr	r3, [pc, #84]	; (12044 <repair_qgroups@@Base+0x380>)
   11fee:	add	r1, pc
   11ff0:	ldr	r3, [r1, r3]
   11ff2:	mov	r1, sp
   11ff4:	ldr	r3, [r3, #0]
   11ff6:	str	r3, [sp, #20]
   11ff8:	mov.w	r3, #0
   11ffc:	movs	r3, #25
   11ffe:	muls	r2, r3
   12000:	movs	r3, #17
   12002:	adds	r2, #101	; 0x65
   12004:	bl	1bbba <read_extent_buffer@@Base>
   12008:	ldr.w	r3, [sp, #13]
   1200c:	ldr.w	r2, [sp, #9]
   12010:	str.w	r3, [r4, #13]
   12014:	ldrb.w	r3, [sp, #8]
   12018:	str.w	r2, [r4, #9]
   1201c:	ldr	r2, [pc, #40]	; (12048 <repair_qgroups@@Base+0x384>)
   1201e:	strb	r3, [r4, #8]
   12020:	ldr	r3, [sp, #0]
   12022:	add	r2, pc
   12024:	str	r3, [r4, #0]
   12026:	ldr	r3, [sp, #4]
   12028:	str	r3, [r4, #4]
   1202a:	ldr	r3, [pc, #24]	; (12044 <repair_qgroups@@Base+0x380>)
   1202c:	ldr	r3, [r2, r3]
   1202e:	ldr	r2, [r3, #0]
   12030:	ldr	r3, [sp, #20]
   12032:	eors	r2, r3
   12034:	beq.n	1203a <repair_qgroups@@Base+0x376>
   12036:	blx	8c90 <__stack_chk_fail@plt>
   1203a:	add	sp, #24
   1203c:	pop	{r4, pc}
   1203e:	nop
   12040:	ldrh	r2, [r5, #40]	; 0x28
   12042:	movs	r5, r0
   12044:	lsls	r0, r1, #10
   12046:	movs	r0, r0
   12048:	ldrh	r6, [r6, #38]	; 0x26
   1204a:	movs	r5, r0
   1204c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12050:	adds	r1, #96	; 0x60
   12052:	add	r2, r1
   12054:	ldrd	r8, r9, [sp, #48]	; 0x30
   12058:	ldr.w	fp, [sp, #56]	; 0x38
   1205c:	mov	sl, r0
   1205e:	ldrb	r3, [r2, #16]
   12060:	cmp	r3, #0
   12062:	bne.n	120dc <repair_qgroups@@Base+0x418>
   12064:	ldrb	r3, [r2, #17]
   12066:	cmp	r3, #0
   12068:	bne.n	120dc <repair_qgroups@@Base+0x418>
   1206a:	ldrh	r3, [r2, #18]
   1206c:	cbnz	r3, 120dc <repair_qgroups@@Base+0x418>
   1206e:	mov	r3, r2
   12070:	ldr.w	r1, [r3, #37]!
   12074:	ldr	r3, [r3, #4]
   12076:	str	r1, [sp, #0]
   12078:	str	r3, [sp, #4]
   1207a:	ldrd	r4, r5, [sp]
   1207e:	ldr.w	r3, [r2, #45]!
   12082:	cmp	r9, r5
   12084:	it	eq
   12086:	cmpeq	r8, r4
   12088:	ldr	r1, [r2, #4]
   1208a:	bcc.n	120e2 <repair_qgroups@@Base+0x41e>
   1208c:	ldr	r2, [sp, #0]
   1208e:	adds	r6, r3, r2
   12090:	ldr	r3, [sp, #4]
   12092:	adc.w	r7, r1, r3
   12096:	cmp	r9, r7
   12098:	it	eq
   1209a:	cmpeq	r8, r6
   1209c:	bcs.n	120e2 <repair_qgroups@@Base+0x41e>
   1209e:	ldr	r3, [sp, #4]
   120a0:	subs.w	r4, r8, r2
   120a4:	sbc.w	r5, r9, r3
   120a8:	movs	r0, #24
   120aa:	blx	8e40 <malloc@plt+0x4>
   120ae:	cbz	r0, 120e6 <repair_qgroups@@Base+0x422>
   120b0:	ldr.w	r3, [fp]
   120b4:	str	r3, [r0, #16]
   120b6:	ldrd	r2, r3, [sl]
   120ba:	strd	r2, r3, [r0]
   120be:	ldr.w	r3, [sl, #9]
   120c2:	ldr.w	r2, [sl, #13]
   120c6:	adds	r3, r3, r4
   120c8:	str.w	r0, [fp]
   120cc:	adc.w	r2, r5, r2
   120d0:	strd	r3, r2, [r0, #8]
   120d4:	movs	r0, #0
   120d6:	add	sp, #12
   120d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120dc:	movs	r4, #0
   120de:	mov	r5, r4
   120e0:	b.n	120a8 <repair_qgroups@@Base+0x3e4>
   120e2:	movs	r0, #1
   120e4:	b.n	120d6 <repair_qgroups@@Base+0x412>
   120e6:	mvn.w	r0, #11
   120ea:	b.n	120d6 <repair_qgroups@@Base+0x412>
   120ec:	ldr	r2, [pc, #60]	; (1212c <repair_qgroups@@Base+0x468>)
   120ee:	movs	r1, #16
   120f0:	ldr	r3, [pc, #60]	; (12130 <repair_qgroups@@Base+0x46c>)
   120f2:	push	{r4, lr}
   120f4:	add	r2, pc
   120f6:	sub	sp, #72	; 0x48
   120f8:	add	r4, sp, #4
   120fa:	ldr	r3, [r2, r3]
   120fc:	mov	r0, r4
   120fe:	ldr	r3, [r3, #0]
   12100:	str	r3, [sp, #68]	; 0x44
   12102:	mov.w	r3, #0
   12106:	blx	8e98 <backtrace@plt>
   1210a:	movs	r2, #2
   1210c:	mov	r1, r0
   1210e:	mov	r0, r4
   12110:	blx	9214 <backtrace_symbols_fd@plt>
   12114:	ldr	r2, [pc, #28]	; (12134 <repair_qgroups@@Base+0x470>)
   12116:	ldr	r3, [pc, #24]	; (12130 <repair_qgroups@@Base+0x46c>)
   12118:	add	r2, pc
   1211a:	ldr	r3, [r2, r3]
   1211c:	ldr	r2, [r3, #0]
   1211e:	ldr	r3, [sp, #68]	; 0x44
   12120:	eors	r2, r3
   12122:	beq.n	12128 <repair_qgroups@@Base+0x464>
   12124:	blx	8c90 <__stack_chk_fail@plt>
   12128:	add	sp, #72	; 0x48
   1212a:	pop	{r4, pc}
   1212c:	ldrh	r4, [r4, #32]
   1212e:	movs	r5, r0
   12130:	lsls	r0, r1, #10
   12132:	movs	r0, r0
   12134:	ldrh	r0, [r0, #32]
   12136:	movs	r5, r0
   12138:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1213c:	mov	r8, r0
   1213e:	movs	r0, #64	; 0x40
   12140:	ldr	r5, [sp, #32]
   12142:	ldrd	r6, r7, [sp, #40]	; 0x28
   12146:	mov	sl, r2
   12148:	mov	r9, r3
   1214a:	blx	8e40 <malloc@plt+0x4>
   1214e:	mov	r4, r0
   12150:	cbz	r0, 121b0 <repair_qgroups@@Base+0x4ec>
   12152:	strd	sl, r9, [r0, #8]
   12156:	adds	r0, #16
   12158:	cbz	r5, 12194 <repair_qgroups@@Base+0x4d0>
   1215a:	mov	ip, r0
   1215c:	ldmia	r5!, {r0, r1, r2, r3}
   1215e:	stmia.w	ip!, {r0, r1, r2, r3}
   12162:	ldr	r3, [r5, #0]
   12164:	strb.w	r3, [ip]
   12168:	ldr	r3, [sp, #36]	; 0x24
   1216a:	movs	r1, #0
   1216c:	mov	r0, r1
   1216e:	str	r1, [r4, #44]	; 0x2c
   12170:	strd	r6, r7, [r4, #48]	; 0x30
   12174:	str	r3, [r4, #36]	; 0x24
   12176:	ldr	r3, [sp, #56]	; 0x38
   12178:	str	r3, [r4, #40]	; 0x28
   1217a:	ldrd	r2, r3, [sp, #48]	; 0x30
   1217e:	strd	r2, r3, [r4, #56]	; 0x38
   12182:	ldr.w	r3, [r8, #4]
   12186:	str.w	r4, [r8, #4]
   1218a:	strd	r8, r3, [r4]
   1218e:	str	r4, [r3, #0]
   12190:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   12194:	orrs.w	r3, r6, r7
   12198:	mov.w	r2, #17
   1219c:	mov	r1, r5
   1219e:	beq.n	121a6 <repair_qgroups@@Base+0x4e2>
   121a0:	blx	8f98 <memset@plt+0x4>
   121a4:	b.n	12168 <repair_qgroups@@Base+0x4a4>
   121a6:	blx	8f98 <memset@plt+0x4>
   121aa:	add.w	r8, r8, #8
   121ae:	b.n	12168 <repair_qgroups@@Base+0x4a4>
   121b0:	mvn.w	r0, #11
   121b4:	b.n	12190 <repair_qgroups@@Base+0x4cc>
   121b6:	push	{r0, r1, r2, r3, r4, lr}
   121b8:	ldr	r4, [pc, #36]	; (121e0 <repair_qgroups@@Base+0x51c>)
   121ba:	ldr	r5, [pc, #40]	; (121e4 <repair_qgroups@@Base+0x520>)
   121bc:	add	r4, pc
   121be:	ldr	r4, [r4, r5]
   121c0:	ldr	r5, [sp, #24]
   121c2:	strd	r3, r2, [sp]
   121c6:	mov	r3, r1
   121c8:	ldr	r2, [pc, #28]	; (121e8 <repair_qgroups@@Base+0x524>)
   121ca:	movs	r1, #1
   121cc:	strd	r0, r5, [sp, #8]
   121d0:	add	r2, pc
   121d2:	ldr	r0, [r4, #0]
   121d4:	blx	9040 <__fprintf_chk@plt+0x4>
   121d8:	bl	120ec <repair_qgroups@@Base+0x428>
   121dc:	blx	91c0 <abort@plt>
   121e0:	ldrh	r4, [r3, #26]
   121e2:	movs	r5, r0
   121e4:	lsls	r4, r3, #10
   121e6:	movs	r0, r0
   121e8:	stmia	r1!, {r1, r2, r3, r7}
   121ea:	movs	r2, r0
   121ec:	push	{r0, r1, r2, lr}
   121ee:	movs	r3, #1
   121f0:	ldr	r2, [pc, #20]	; (12208 <repair_qgroups@@Base+0x544>)
   121f2:	ldr	r1, [pc, #24]	; (1220c <repair_qgroups@@Base+0x548>)
   121f4:	ldr	r0, [pc, #24]	; (12210 <repair_qgroups@@Base+0x54c>)
   121f6:	add	r2, pc
   121f8:	str	r3, [sp, #0]
   121fa:	add	r1, pc
   121fc:	add	r0, pc
   121fe:	movw	r3, #1818	; 0x71a
   12202:	bl	121b6 <repair_qgroups@@Base+0x4f2>
   12206:	nop
   12208:	svc	225	; 0xe1
   1220a:	movs	r2, r0
   1220c:	bge.n	12200 <repair_qgroups@@Base+0x53c>
   1220e:	movs	r2, r0
   12210:	lsrs	r6, r6, #30
   12212:	movs	r3, r0
   12214:	push	{r0, r1, r2, r3, r4, lr}
   12216:	ldr	r3, [pc, #40]	; (12240 <repair_qgroups@@Base+0x57c>)
   12218:	ldr	r4, [pc, #40]	; (12244 <repair_qgroups@@Base+0x580>)
   1221a:	add	r3, pc
   1221c:	ldr	r4, [r3, r4]
   1221e:	movs	r3, #0
   12220:	strd	r2, r1, [sp]
   12224:	movs	r1, #1
   12226:	strd	r0, r3, [sp, #8]
   1222a:	ldr	r2, [pc, #28]	; (12248 <repair_qgroups@@Base+0x584>)
   1222c:	ldr	r3, [pc, #28]	; (1224c <repair_qgroups@@Base+0x588>)
   1222e:	add	r2, pc
   12230:	ldr	r0, [r4, #0]
   12232:	add	r3, pc
   12234:	blx	9040 <__fprintf_chk@plt+0x4>
   12238:	bl	120ec <repair_qgroups@@Base+0x428>
   1223c:	blx	91c0 <abort@plt>
   12240:	ldrh	r6, [r7, #22]
   12242:	movs	r5, r0
   12244:	lsls	r4, r3, #10
   12246:	movs	r0, r0
   12248:	ldmia	r4, {r2, r3, r4, r7}
   1224a:	movs	r2, r0
   1224c:	udf	#101	; 0x65
   1224e:	movs	r2, r0
   12250:	push	{r0, r1, r2, lr}
   12252:	cbz	r3, 12264 <repair_qgroups@@Base+0x5a0>
   12254:	movs	r3, #1
   12256:	str	r3, [sp, #0]
   12258:	mov	r3, r2
   1225a:	mov	r2, r1
   1225c:	ldr	r1, [pc, #12]	; (1226c <repair_qgroups@@Base+0x5a8>)
   1225e:	add	r1, pc
   12260:	bl	121b6 <repair_qgroups@@Base+0x4f2>
   12264:	add	sp, #12
   12266:	ldr.w	pc, [sp], #4
   1226a:	nop
   1226c:	udf	#57	; 0x39
   1226e:	movs	r2, r0
   12270:	push	{r4, r5, lr}
   12272:	sub	sp, #20
   12274:	ldr	r4, [pc, #36]	; (1229c <repair_qgroups@@Base+0x5d8>)
   12276:	ldr	r5, [pc, #40]	; (122a0 <repair_qgroups@@Base+0x5dc>)
   12278:	add	r4, pc
   1227a:	ldr	r4, [r4, r5]
   1227c:	strd	r2, r1, [sp]
   12280:	movs	r1, #1
   12282:	strd	r0, r3, [sp, #8]
   12286:	ldr	r2, [pc, #28]	; (122a4 <repair_qgroups@@Base+0x5e0>)
   12288:	ldr	r3, [pc, #28]	; (122a8 <repair_qgroups@@Base+0x5e4>)
   1228a:	ldr	r0, [r4, #0]
   1228c:	add	r2, pc
   1228e:	add	r3, pc
   12290:	blx	9040 <__fprintf_chk@plt+0x4>
   12294:	add	sp, #20
   12296:	ldmia.w	sp!, {r4, r5, lr}
   1229a:	b.n	120ec <repair_qgroups@@Base+0x428>
   1229c:	ldrh	r0, [r4, #20]
   1229e:	movs	r5, r0
   122a0:	lsls	r4, r3, #10
   122a2:	movs	r0, r0
   122a4:	bcs.n	121ea <repair_qgroups@@Base+0x526>
   122a6:	movs	r2, r0
   122a8:	udf	#9
   122aa:	movs	r2, r0
   122ac:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   122b0:	mov	r5, r0
   122b2:	ldr	r4, [r0, #0]
   122b4:	mov	r9, r1
   122b6:	cmp	r4, r5
   122b8:	bne.n	122be <repair_qgroups@@Base+0x5fa>
   122ba:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   122be:	ldr	r0, [r4, #0]
   122c0:	ldr.w	r8, [r0]
   122c4:	cmp	r0, r5
   122c6:	bne.n	122cc <repair_qgroups@@Base+0x608>
   122c8:	ldr	r4, [r4, #0]
   122ca:	b.n	122b6 <repair_qgroups@@Base+0x5f2>
   122cc:	cmp.w	r9, #1
   122d0:	bne.n	1234c <repair_qgroups@@Base+0x688>
   122d2:	ldr	r2, [r4, #36]	; 0x24
   122d4:	ldr	r3, [r0, #36]	; 0x24
   122d6:	cmp	r2, r3
   122d8:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   122da:	ldrd	r6, r7, [r4, #8]
   122de:	ldrd	r2, r3, [r0, #8]
   122e2:	cmp	r7, r3
   122e4:	it	eq
   122e6:	cmpeq	r6, r2
   122e8:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   122ea:	ldrb	r2, [r4, #24]
   122ec:	ldrb	r3, [r0, #24]
   122ee:	cmp	r2, r3
   122f0:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   122f2:	ldrd	r6, r7, [r4, #16]
   122f6:	ldrd	r2, r3, [r0, #16]
   122fa:	cmp	r7, r3
   122fc:	it	eq
   122fe:	cmpeq	r6, r2
   12300:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   12302:	ldr.w	r7, [r4, #29]
   12306:	ldr.w	r3, [r0, #29]
   1230a:	ldr.w	r6, [r4, #25]
   1230e:	ldr.w	r2, [r0, #25]
   12312:	cmp	r7, r3
   12314:	it	eq
   12316:	cmpeq	r6, r2
   12318:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   1231a:	ldrd	r6, r7, [r4, #48]	; 0x30
   1231e:	ldrd	r2, r3, [r0, #48]	; 0x30
   12322:	cmp	r7, r3
   12324:	it	eq
   12326:	cmpeq	r6, r2
   12328:	bne.n	12360 <repair_qgroups@@Base+0x69c>
   1232a:	ldr	r3, [r4, #44]	; 0x2c
   1232c:	cbz	r3, 1236c <repair_qgroups@@Base+0x6a8>
   1232e:	ldr	r2, [r3, #16]
   12330:	cbnz	r2, 12368 <repair_qgroups@@Base+0x6a4>
   12332:	ldr	r2, [r0, #44]	; 0x2c
   12334:	str	r2, [r3, #16]
   12336:	ldr	r2, [r0, #40]	; 0x28
   12338:	ldr	r3, [r4, #40]	; 0x28
   1233a:	add	r3, r2
   1233c:	str	r3, [r4, #40]	; 0x28
   1233e:	ldrd	r2, r3, [r0]
   12342:	str	r3, [r2, #4]
   12344:	str	r2, [r3, #0]
   12346:	blx	8b84 <free@plt+0x4>
   1234a:	b.n	12360 <repair_qgroups@@Base+0x69c>
   1234c:	ldrd	r6, r7, [r4, #48]	; 0x30
   12350:	orrs.w	r3, r6, r7
   12354:	beq.n	12360 <repair_qgroups@@Base+0x69c>
   12356:	ldrd	r2, r3, [r0, #48]	; 0x30
   1235a:	orrs.w	r1, r2, r3
   1235e:	bne.n	12322 <repair_qgroups@@Base+0x65e>
   12360:	mov	r0, r8
   12362:	ldr.w	r8, [r8]
   12366:	b.n	122c4 <repair_qgroups@@Base+0x600>
   12368:	mov	r3, r2
   1236a:	b.n	1232c <repair_qgroups@@Base+0x668>
   1236c:	ldr	r3, [r0, #44]	; 0x2c
   1236e:	str	r3, [r4, #44]	; 0x2c
   12370:	b.n	12336 <repair_qgroups@@Base+0x672>
   12372:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12376:	movs	r6, #0
   12378:	vpush	{d8}
   1237c:	mov	r5, r0
   1237e:	sub	sp, #204	; 0xcc
   12380:	strd	r2, r3, [sp, #32]
   12384:	ldr	r3, [sp, #248]	; 0xf8
   12386:	ldr.w	r2, [pc, #2924]	; 12ef4 <repair_qgroups@@Base+0x1230>
   1238a:	str	r1, [sp, #44]	; 0x2c
   1238c:	vmov	s17, r3
   12390:	ldr	r3, [sp, #252]	; 0xfc
   12392:	add	r2, pc
   12394:	str	r3, [sp, #76]	; 0x4c
   12396:	ldr	r3, [sp, #256]	; 0x100
   12398:	str	r3, [sp, #72]	; 0x48
   1239a:	ldr.w	r3, [pc, #2908]	; 12ef8 <repair_qgroups@@Base+0x1234>
   1239e:	ldr	r3, [r2, r3]
   123a0:	mov.w	r2, #4294967295	; 0xffffffff
   123a4:	ldr	r3, [r3, #0]
   123a6:	str	r3, [sp, #196]	; 0xc4
   123a8:	mov.w	r3, #0
   123ac:	add	r3, sp, #172	; 0xac
   123ae:	strd	r3, r3, [sp, #172]	; 0xac
   123b2:	add	r3, sp, #180	; 0xb4
   123b4:	strd	r3, r3, [sp, #180]	; 0xb4
   123b8:	add	r3, sp, #188	; 0xbc
   123ba:	strd	r3, r3, [sp, #188]	; 0xbc
   123be:	ldrd	r3, r4, [sp, #32]
   123c2:	strb.w	r2, [sp, #121]	; 0x79
   123c6:	strb.w	r2, [sp, #122]	; 0x7a
   123ca:	strd	r3, r4, [sp, #112]	; 0x70
   123ce:	ldr.w	r3, [r1, #308]	; 0x134
   123d2:	strb.w	r2, [sp, #123]	; 0x7b
   123d6:	strb.w	r2, [sp, #124]	; 0x7c
   123da:	strb.w	r2, [sp, #125]	; 0x7d
   123de:	strb.w	r2, [sp, #126]	; 0x7e
   123e2:	strb.w	r2, [sp, #127]	; 0x7f
   123e6:	strb.w	r2, [sp, #128]	; 0x80
   123ea:	str	r6, [sp, #92]	; 0x5c
   123ec:	ldr.w	r1, [r3, #188]	; 0xbc
   123f0:	mov	r3, r6
   123f2:	and.w	r2, r1, #256	; 0x100
   123f6:	orrs	r3, r2
   123f8:	ite	ne
   123fa:	movne	r3, #169	; 0xa9
   123fc:	moveq	r3, #168	; 0xa8
   123fe:	strb.w	r3, [sp, #120]	; 0x78
   12402:	bl	1c6f0 <btrfs_alloc_path@@Base>
   12406:	mov	r4, r0
   12408:	cmp	r0, #0
   1240a:	beq.w	12ed8 <repair_qgroups@@Base+0x1214>
   1240e:	ldr	r1, [sp, #44]	; 0x2c
   12410:	add	r7, sp, #112	; 0x70
   12412:	mov	r3, r0
   12414:	strd	r6, r6, [sp]
   12418:	mov	r2, r7
   1241a:	mov	r0, r5
   1241c:	ldr	r1, [r1, #24]
   1241e:	bl	1eadc <btrfs_search_slot@@Base>
   12422:	subs.w	r8, r0, #0
   12426:	blt.w	125bc <repair_qgroups@@Base+0x8f8>
   1242a:	ldr.w	r5, [pc, #2768]	; 12efc <repair_qgroups@@Base+0x1238>
   1242e:	movw	r2, #762	; 0x2fa
   12432:	ldr.w	r0, [pc, #2764]	; 12f00 <repair_qgroups@@Base+0x123c>
   12436:	it	eq
   12438:	moveq	r3, #1
   1243a:	add	r5, pc
   1243c:	it	ne
   1243e:	movne	r3, r6
   12440:	add.w	r1, r5, #29
   12444:	add	r0, pc
   12446:	bl	12250 <repair_qgroups@@Base+0x58c>
   1244a:	ldr	r2, [r4, #32]
   1244c:	cmp	r2, #0
   1244e:	beq.w	128ae <repair_qgroups@@Base+0xbea>
   12452:	subs	r2, #1
   12454:	ldr	r0, [r4, #0]
   12456:	mov	r1, r7
   12458:	str	r2, [r4, #32]
   1245a:	bl	11fe4 <repair_qgroups@@Base+0x320>
   1245e:	ldrd	r2, r3, [sp, #112]	; 0x70
   12462:	ldrd	r0, r1, [sp, #32]
   12466:	cmp	r1, r3
   12468:	it	eq
   1246a:	cmpeq	r0, r2
   1246c:	bne.w	128ae <repair_qgroups@@Base+0xbea>
   12470:	ldrb.w	r3, [sp, #120]	; 0x78
   12474:	adds	r3, #88	; 0x58
   12476:	uxtb	r3, r3
   12478:	cmp	r3, #1
   1247a:	bhi.w	128ae <repair_qgroups@@Base+0xbea>
   1247e:	ldr.w	sl, [r4]
   12482:	movs	r3, #25
   12484:	ldr.w	r9, [r4, #32]
   12488:	adds	r5, #47	; 0x2f
   1248a:	add.w	fp, sl, #96	; 0x60
   1248e:	ldr.w	r0, [pc, #2676]	; 12f04 <repair_qgroups@@Base+0x1240>
   12492:	movw	r2, #559	; 0x22f
   12496:	mov	r1, r5
   12498:	mla	r3, r3, r9, fp
   1249c:	add	r0, pc
   1249e:	add.w	r7, r3, #101	; 0x65
   124a2:	ldr.w	r3, [r3, #122]	; 0x7a
   124a6:	cmp	r3, #23
   124a8:	str	r3, [sp, #48]	; 0x30
   124aa:	ite	hi
   124ac:	movhi	r3, #0
   124ae:	movls	r3, #1
   124b0:	bl	12250 <repair_qgroups@@Base+0x58c>
   124b4:	ldr.w	r8, [r7, #17]
   124b8:	mov	r0, sl
   124ba:	add	r1, sp, #152	; 0x98
   124bc:	add.w	r3, r8, #101	; 0x65
   124c0:	str	r3, [sp, #64]	; 0x40
   124c2:	add.w	r2, fp, r3
   124c6:	add.w	sl, r8, #125	; 0x7d
   124ca:	ldr	r3, [r2, #0]
   124cc:	ldr	r7, [r2, #16]
   124ce:	str	r3, [sp, #56]	; 0x38
   124d0:	ldr	r3, [r2, #4]
   124d2:	mov	r2, r9
   124d4:	str	r3, [sp, #60]	; 0x3c
   124d6:	bl	11fe4 <repair_qgroups@@Base+0x320>
   124da:	ldr	r3, [sp, #48]	; 0x30
   124dc:	mov	r2, r3
   124de:	ldr	r3, [sp, #64]	; 0x40
   124e0:	add.w	r9, r2, r3
   124e4:	ldrb.w	r3, [sp, #160]	; 0xa0
   124e8:	cmp	r3, #168	; 0xa8
   124ea:	bne.n	12540 <repair_qgroups@@Base+0x87c>
   124ec:	and.w	r2, r7, #2
   124f0:	mov	r3, r6
   124f2:	orrs	r3, r2
   124f4:	beq.n	1254a <repair_qgroups@@Base+0x886>
   124f6:	add	sl, fp
   124f8:	ldr.w	r0, [pc, #2572]	; 12f08 <repair_qgroups@@Base+0x1244>
   124fc:	mov.w	r2, #576	; 0x240
   12500:	mov	r1, r5
   12502:	ldrb.w	r6, [sl, #17]
   12506:	add.w	sl, r8, #143	; 0x8f
   1250a:	cmp	r9, sl
   1250c:	add	r0, pc
   1250e:	ite	cs
   12510:	movcs	r3, #0
   12512:	movcc	r3, #1
   12514:	bl	12250 <repair_qgroups@@Base+0x58c>
   12518:	ldr.w	r5, [pc, #2544]	; 12f0c <repair_qgroups@@Base+0x1248>
   1251c:	ldr.w	r7, [pc, #2544]	; 12f10 <repair_qgroups@@Base+0x124c>
   12520:	add	r5, pc
   12522:	adds	r5, #47	; 0x2f
   12524:	add	r7, pc
   12526:	cmp	r9, sl
   12528:	bhi.n	1256a <repair_qgroups@@Base+0x8a6>
   1252a:	ldr	r3, [sp, #44]	; 0x2c
   1252c:	ldr.w	r5, [pc, #2532]	; 12f14 <repair_qgroups@@Base+0x1250>
   12530:	ldr.w	r7, [pc, #2532]	; 12f18 <repair_qgroups@@Base+0x1254>
   12534:	ldr	r3, [r3, #24]
   12536:	add	r5, pc
   12538:	adds	r5, #65	; 0x41
   1253a:	add	r7, pc
   1253c:	str	r3, [sp, #48]	; 0x30
   1253e:	b.n	12756 <repair_qgroups@@Base+0xa92>
   12540:	cmp	r3, #169	; 0xa9
   12542:	bne.n	1254a <repair_qgroups@@Base+0x886>
   12544:	ldr.w	r6, [sp, #161]	; 0xa1
   12548:	b.n	12518 <repair_qgroups@@Base+0x854>
   1254a:	ldr.w	r1, [pc, #2512]	; 12f1c <repair_qgroups@@Base+0x1258>
   1254e:	mvns	r3, r7
   12550:	ldr.w	r0, [pc, #2508]	; 12f20 <repair_qgroups@@Base+0x125c>
   12554:	and.w	r3, r3, #1
   12558:	add	r1, pc
   1255a:	mov.w	r2, #580	; 0x244
   1255e:	adds	r1, #47	; 0x2f
   12560:	add	r0, pc
   12562:	bl	12250 <repair_qgroups@@Base+0x58c>
   12566:	movs	r6, #0
   12568:	b.n	12518 <repair_qgroups@@Base+0x854>
   1256a:	add.w	r0, fp, sl
   1256e:	ldrb.w	r8, [fp, sl]
   12572:	mov	r1, r0
   12574:	ldr.w	r2, [r1, #1]!
   12578:	ldr	r3, [r1, #4]
   1257a:	sub.w	r1, r8, #176	; 0xb0
   1257e:	cmp	r1, #8
   12580:	bhi.w	126b8 <repair_qgroups@@Base+0x9f4>
   12584:	tbb	[pc, r1]
   12588:	ldr	r0, [sp, #300]	; 0x12c
   1258a:	ldr	r0, [sp, #392]	; 0x188
   1258c:	ldr	r0, [sp, #608]	; 0x260
   1258e:	ldr	r0, [sp, #20]
   12590:	movs	r5, r6
   12592:	movs	r1, #1
   12594:	str	r1, [sp, #24]
   12596:	ldrd	r0, r1, [sp, #32]
   1259a:	strd	r2, r3, [sp, #8]
   1259e:	adds	r3, r6, #1
   125a0:	movs	r2, #0
   125a2:	str	r3, [sp, #4]
   125a4:	movs	r3, #0
   125a6:	str	r3, [sp, #0]
   125a8:	movs	r3, #0
   125aa:	strd	r0, r1, [sp, #16]
   125ae:	add	r0, sp, #172	; 0xac
   125b0:	bl	12138 <repair_qgroups@@Base+0x474>
   125b4:	mov	r8, r0
   125b6:	cmp	r0, #0
   125b8:	beq.w	126e2 <repair_qgroups@@Base+0xa1e>
   125bc:	mov	r0, r4
   125be:	add	r4, sp, #172	; 0xac
   125c0:	bl	1c71e <btrfs_free_path@@Base>
   125c4:	ldr	r0, [sp, #172]	; 0xac
   125c6:	cmp	r0, r4
   125c8:	bne.w	12ec8 <repair_qgroups@@Base+0x1204>
   125cc:	cmp.w	r8, #0
   125d0:	bge.n	125d8 <repair_qgroups@@Base+0x914>
   125d2:	ldr	r0, [sp, #92]	; 0x5c
   125d4:	bl	11f68 <repair_qgroups@@Base+0x2a4>
   125d8:	ldr.w	r2, [pc, #2376]	; 12f24 <repair_qgroups@@Base+0x1260>
   125dc:	ldr.w	r3, [pc, #2328]	; 12ef8 <repair_qgroups@@Base+0x1234>
   125e0:	add	r2, pc
   125e2:	ldr	r3, [r2, r3]
   125e4:	ldr	r2, [r3, #0]
   125e6:	ldr	r3, [sp, #196]	; 0xc4
   125e8:	eors	r2, r3
   125ea:	beq.w	12ee6 <repair_qgroups@@Base+0x1222>
   125ee:	blx	8c90 <__stack_chk_fail@plt>
   125f2:	ldr.w	r1, [r0, #9]
   125f6:	strd	r2, r3, [sp, #8]
   125fa:	movs	r3, #0
   125fc:	movs	r2, #0
   125fe:	strd	r3, r3, [sp]
   12602:	str	r1, [sp, #24]
   12604:	movs	r3, #0
   12606:	ldrd	r0, r1, [sp, #32]
   1260a:	strd	r0, r1, [sp, #16]
   1260e:	add	r0, sp, #172	; 0xac
   12610:	bl	12138 <repair_qgroups@@Base+0x474>
   12614:	mov	r8, r0
   12616:	cmp	r0, #0
   12618:	bne.n	125bc <repair_qgroups@@Base+0x8f8>
   1261a:	movs	r3, #13
   1261c:	b.n	12686 <repair_qgroups@@Base+0x9c2>
   1261e:	mov.w	r1, #4294967295	; 0xffffffff
   12622:	cmp	r3, r1
   12624:	mvn.w	r0, #8
   12628:	it	eq
   1262a:	cmpeq	r2, r0
   1262c:	beq.n	126e2 <repair_qgroups@@Base+0xa1e>
   1262e:	movs	r1, #1
   12630:	str	r1, [sp, #24]
   12632:	ldrd	r0, r1, [sp, #32]
   12636:	strd	r0, r1, [sp, #16]
   1263a:	movs	r1, #0
   1263c:	movs	r0, #0
   1263e:	strd	r0, r1, [sp, #8]
   12642:	adds	r1, r6, #1
   12644:	str	r1, [sp, #4]
   12646:	movs	r1, #0
   12648:	str	r1, [sp, #0]
   1264a:	b.n	125ae <repair_qgroups@@Base+0x8ea>
   1264c:	add.w	r3, sl, #1
   12650:	add	r3, fp
   12652:	ldr	r1, [r3, #8]
   12654:	ldr	r2, [r3, #12]
   12656:	ldr.w	ip, [r3, #24]
   1265a:	strd	r1, r2, [sp, #132]	; 0x84
   1265e:	movs	r2, #108	; 0x6c
   12660:	strb.w	r2, [sp, #140]	; 0x8c
   12664:	ldr	r1, [r3, #16]
   12666:	ldr	r2, [r3, #20]
   12668:	str.w	r1, [sp, #141]	; 0x8d
   1266c:	str.w	r2, [sp, #145]	; 0x91
   12670:	mvn.w	r2, #8
   12674:	ldr	r1, [r3, #4]
   12676:	ldr	r0, [r3, #0]
   12678:	mov.w	r3, #4294967295	; 0xffffffff
   1267c:	cmp	r1, r3
   1267e:	it	eq
   12680:	cmpeq	r0, r2
   12682:	bne.n	1268a <repair_qgroups@@Base+0x9c6>
   12684:	movs	r3, #29
   12686:	add	sl, r3
   12688:	b.n	12526 <repair_qgroups@@Base+0x862>
   1268a:	ldrd	r2, r3, [sp, #32]
   1268e:	str.w	ip, [sp, #24]
   12692:	strd	r2, r3, [sp, #16]
   12696:	movs	r2, #0
   12698:	movs	r3, #0
   1269a:	strd	r2, r3, [sp, #8]
   1269e:	movs	r3, #0
   126a0:	mov	r2, r0
   126a2:	str	r3, [sp, #4]
   126a4:	add	r0, sp, #172	; 0xac
   126a6:	add	r3, sp, #132	; 0x84
   126a8:	str	r3, [sp, #0]
   126aa:	mov	r3, r1
   126ac:	bl	12138 <repair_qgroups@@Base+0x474>
   126b0:	mov	r8, r0
   126b2:	cmp	r0, #0
   126b4:	beq.n	12684 <repair_qgroups@@Base+0x9c0>
   126b6:	b.n	125bc <repair_qgroups@@Base+0x8f8>
   126b8:	movs	r3, #1
   126ba:	movw	r2, #630	; 0x276
   126be:	mov	r1, r5
   126c0:	mov	r0, r7
   126c2:	bl	12270 <repair_qgroups@@Base+0x5ac>
   126c6:	cmp.w	r8, #176	; 0xb0
   126ca:	beq.n	126e2 <repair_qgroups@@Base+0xa1e>
   126cc:	cmp.w	r8, #182	; 0xb6
   126d0:	beq.n	126e2 <repair_qgroups@@Base+0xa1e>
   126d2:	cmp.w	r8, #184	; 0xb8
   126d6:	beq.n	1261a <repair_qgroups@@Base+0x956>
   126d8:	cmp.w	r8, #178	; 0xb2
   126dc:	beq.n	12684 <repair_qgroups@@Base+0x9c0>
   126de:	bl	121ec <repair_qgroups@@Base+0x528>
   126e2:	movs	r3, #9
   126e4:	b.n	12686 <repair_qgroups@@Base+0x9c2>
   126e6:	ldr	r3, [sp, #48]	; 0x30
   126e8:	mov	r1, r4
   126ea:	strb.w	r9, [r4, #65]	; 0x41
   126ee:	ldr.w	r0, [r3, #464]	; 0x1d0
   126f2:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   126f6:	subs.w	r8, r0, #0
   126fa:	blt.w	125bc <repair_qgroups@@Base+0x8f8>
   126fe:	beq.n	1276e <repair_qgroups@@Base+0xaaa>
   12700:	b.n	12790 <repair_qgroups@@Base+0xacc>
   12702:	ldrb.w	r3, [sp, #160]	; 0xa0
   12706:	cmp	r3, #175	; 0xaf
   12708:	bls.n	1275e <repair_qgroups@@Base+0xa9a>
   1270a:	cmp	r3, #184	; 0xb8
   1270c:	bhi.n	12790 <repair_qgroups@@Base+0xacc>
   1270e:	subs	r3, #176	; 0xb0
   12710:	cmp	r3, #8
   12712:	bhi.w	1289e <repair_qgroups@@Base+0xbda>
   12716:	tbb	[pc, r3]
   1271a:	stmia	r2!, {r4, r5, r6}
   1271c:	stmia	r2!, {r0, r1, r3, r7}
   1271e:	stmia	r2!, {r1, r6, r7}
   12720:	stmia	r2!, {r0, r2}
   12722:	lsls	r0, r3, #1
   12724:	movs	r3, #1
   12726:	str	r3, [sp, #24]
   12728:	ldrd	r2, r3, [sp, #32]
   1272c:	strd	r2, r3, [sp, #16]
   12730:	ldr.w	r3, [sp, #165]	; 0xa5
   12734:	ldr.w	r2, [sp, #161]	; 0xa1
   12738:	strd	r2, r3, [sp, #8]
   1273c:	adds	r3, r6, #1
   1273e:	str	r3, [sp, #4]
   12740:	movs	r3, #0
   12742:	str	r3, [sp, #0]
   12744:	movs	r2, #0
   12746:	movs	r3, #0
   12748:	add	r0, sp, #172	; 0xac
   1274a:	bl	12138 <repair_qgroups@@Base+0x474>
   1274e:	mov	r8, r0
   12750:	cmp	r0, #0
   12752:	bne.w	125bc <repair_qgroups@@Base+0x8f8>
   12756:	add.w	sl, sp, #152	; 0x98
   1275a:	mov.w	r9, #0
   1275e:	ldr	r2, [r4, #0]
   12760:	ldr	r3, [r4, #32]
   12762:	adds	r3, #1
   12764:	str	r3, [r4, #32]
   12766:	ldr.w	r2, [r2, #192]	; 0xc0
   1276a:	cmp	r3, r2
   1276c:	bcs.n	126e6 <repair_qgroups@@Base+0xa22>
   1276e:	ldr.w	fp, [r4, #32]
   12772:	mov	r1, sl
   12774:	ldr.w	r8, [r4]
   12778:	mov	r2, fp
   1277a:	mov	r0, r8
   1277c:	bl	11fe4 <repair_qgroups@@Base+0x320>
   12780:	ldrd	r2, r3, [sp, #32]
   12784:	ldrd	r0, r1, [sp, #152]	; 0x98
   12788:	cmp	r3, r1
   1278a:	it	eq
   1278c:	cmpeq	r2, r0
   1278e:	beq.n	12702 <repair_qgroups@@Base+0xa3e>
   12790:	mov	r0, r4
   12792:	ldr.w	r6, [pc, #1940]	; 12f28 <repair_qgroups@@Base+0x1264>
   12796:	bl	1c6f8 <btrfs_release_path@@Base>
   1279a:	ldr.w	fp, [pc, #1936]	; 12f2c <repair_qgroups@@Base+0x1268>
   1279e:	add	r6, pc
   127a0:	adds	r6, #82	; 0x52
   127a2:	add	fp, pc
   127a4:	ldr	r5, [sp, #180]	; 0xb4
   127a6:	add	r3, sp, #180	; 0xb4
   127a8:	cmp	r5, r3
   127aa:	bne.w	128b8 <repair_qgroups@@Base+0xbf4>
   127ae:	add	r0, sp, #172	; 0xac
   127b0:	movs	r1, #1
   127b2:	bl	122ac <repair_qgroups@@Base+0x5e8>
   127b6:	movs	r0, #0
   127b8:	bl	10414 <ulist_alloc@@Base>
   127bc:	mov	r7, r0
   127be:	cmp	r0, #0
   127c0:	bne.w	12a8c <repair_qgroups@@Base+0xdc8>
   127c4:	mvn.w	r8, #11
   127c8:	b.n	125bc <repair_qgroups@@Base+0x8f8>
   127ca:	add.w	r8, r8, #96	; 0x60
   127ce:	movs	r2, #25
   127d0:	mla	r2, r2, fp, r8
   127d4:	ldr.w	r0, [r2, #118]	; 0x76
   127d8:	add	r8, r0
   127da:	ldr.w	r3, [r8, #101]	; 0x65
   127de:	str	r3, [sp, #24]
   127e0:	ldrd	r2, r3, [sp, #32]
   127e4:	strd	r2, r3, [sp, #16]
   127e8:	ldr.w	r3, [sp, #165]	; 0xa5
   127ec:	ldr.w	r2, [sp, #161]	; 0xa1
   127f0:	strd	r2, r3, [sp, #8]
   127f4:	movs	r3, #0
   127f6:	str	r3, [sp, #4]
   127f8:	b.n	12742 <repair_qgroups@@Base+0xa7e>
   127fa:	ldr.w	r3, [sp, #165]	; 0xa5
   127fe:	mov.w	r1, #4294967295	; 0xffffffff
   12802:	ldr.w	r2, [sp, #161]	; 0xa1
   12806:	mvn.w	r0, #8
   1280a:	cmp	r3, r1
   1280c:	it	eq
   1280e:	cmpeq	r2, r0
   12810:	beq.n	12756 <repair_qgroups@@Base+0xa92>
   12812:	movs	r1, #1
   12814:	str	r1, [sp, #24]
   12816:	ldrd	r0, r1, [sp, #32]
   1281a:	strd	r0, r1, [sp, #16]
   1281e:	movs	r1, #0
   12820:	movs	r0, #0
   12822:	strd	r0, r1, [sp, #8]
   12826:	adds	r1, r6, #1
   12828:	str	r1, [sp, #4]
   1282a:	movs	r1, #0
   1282c:	str	r1, [sp, #0]
   1282e:	b.n	12748 <repair_qgroups@@Base+0xa84>
   12830:	add.w	r8, r8, #96	; 0x60
   12834:	movs	r2, #25
   12836:	mov.w	r1, #4294967295	; 0xffffffff
   1283a:	mla	fp, r2, fp, r8
   1283e:	ldr.w	r0, [fp, #118]	; 0x76
   12842:	adds	r0, #101	; 0x65
   12844:	add	r8, r0
   12846:	mvn.w	r0, #8
   1284a:	ldr.w	r2, [r8, #8]
   1284e:	ldr.w	r3, [r8, #12]
   12852:	ldr.w	ip, [r8, #24]
   12856:	strd	r2, r3, [sp, #152]	; 0x98
   1285a:	movs	r3, #108	; 0x6c
   1285c:	strb.w	r3, [sp, #160]	; 0xa0
   12860:	ldr.w	r2, [r8, #16]
   12864:	ldr.w	r3, [r8, #20]
   12868:	str.w	r2, [sp, #161]	; 0xa1
   1286c:	str.w	r3, [sp, #165]	; 0xa5
   12870:	ldr.w	r3, [r8, #4]
   12874:	ldr.w	r2, [r8]
   12878:	cmp	r3, r1
   1287a:	it	eq
   1287c:	cmpeq	r2, r0
   1287e:	beq.w	12756 <repair_qgroups@@Base+0xa92>
   12882:	ldrd	r0, r1, [sp, #32]
   12886:	str.w	ip, [sp, #24]
   1288a:	strd	r0, r1, [sp, #16]
   1288e:	movs	r1, #0
   12890:	movs	r0, #0
   12892:	strd	r0, r1, [sp, #8]
   12896:	movs	r1, #0
   12898:	str	r1, [sp, #4]
   1289a:	add	r1, sp, #152	; 0x98
   1289c:	b.n	1282c <repair_qgroups@@Base+0xb68>
   1289e:	movs	r3, #1
   128a0:	movw	r2, #714	; 0x2ca
   128a4:	mov	r1, r5
   128a6:	mov	r0, r7
   128a8:	bl	12270 <repair_qgroups@@Base+0x5ac>
   128ac:	b.n	12756 <repair_qgroups@@Base+0xa92>
   128ae:	movs	r2, #0
   128b0:	movs	r3, #0
   128b2:	strd	r2, r3, [sp, #56]	; 0x38
   128b6:	b.n	12790 <repair_qgroups@@Base+0xacc>
   128b8:	ldr	r3, [r5, #8]
   128ba:	cbnz	r3, 128d2 <repair_qgroups@@Base+0xc0e>
   128bc:	ldr.w	r1, [pc, #1648]	; 12f30 <repair_qgroups@@Base+0x126c>
   128c0:	mov.w	r2, #456	; 0x1c8
   128c4:	ldr.w	r0, [pc, #1644]	; 12f34 <repair_qgroups@@Base+0x1270>
   128c8:	add	r1, pc
   128ca:	adds	r1, #82	; 0x52
   128cc:	add	r0, pc
   128ce:	bl	12214 <repair_qgroups@@Base+0x550>
   128d2:	ldrd	r8, r9, [r5, #48]	; 0x30
   128d6:	orrs.w	r3, r8, r9
   128da:	beq.n	128f0 <repair_qgroups@@Base+0xc2c>
   128dc:	ldr.w	r1, [pc, #1624]	; 12f38 <repair_qgroups@@Base+0x1274>
   128e0:	movw	r2, #457	; 0x1c9
   128e4:	ldr.w	r0, [pc, #1620]	; 12f3c <repair_qgroups@@Base+0x1278>
   128e8:	add	r1, pc
   128ea:	adds	r1, #82	; 0x52
   128ec:	add	r0, pc
   128ee:	b.n	128ce <repair_qgroups@@Base+0xc0a>
   128f0:	ldrb	r3, [r5, #24]
   128f2:	cbz	r3, 12908 <repair_qgroups@@Base+0xc44>
   128f4:	ldr.w	r1, [pc, #1608]	; 12f40 <repair_qgroups@@Base+0x127c>
   128f8:	mov.w	r2, #458	; 0x1ca
   128fc:	ldr.w	r0, [pc, #1604]	; 12f44 <repair_qgroups@@Base+0x1280>
   12900:	add	r1, pc
   12902:	adds	r1, #82	; 0x52
   12904:	add	r0, pc
   12906:	b.n	128ce <repair_qgroups@@Base+0xc0a>
   12908:	ldrd	sl, r7, [r5, #56]	; 0x38
   1290c:	movw	r2, #459	; 0x1cb
   12910:	mov	r1, r6
   12912:	mov	r0, fp
   12914:	orrs.w	r3, sl, r7
   12918:	ite	eq
   1291a:	moveq	r3, #1
   1291c:	movne	r3, #0
   1291e:	bl	12250 <repair_qgroups@@Base+0x58c>
   12922:	mov	r3, r7
   12924:	ldr	r0, [sp, #44]	; 0x2c
   12926:	mov	r2, sl
   12928:	strd	r8, r9, [sp]
   1292c:	bl	21f24 <read_tree_block@@Base>
   12930:	mov	r7, r0
   12932:	cbz	r0, 12970 <repair_qgroups@@Base+0xcac>
   12934:	cmn.w	r0, #4096	; 0x1000
   12938:	bhi.n	12970 <repair_qgroups@@Base+0xcac>
   1293a:	ldr	r3, [r0, #84]	; 0x54
   1293c:	lsls	r2, r3, #29
   1293e:	bpl.n	12970 <repair_qgroups@@Base+0xcac>
   12940:	ldrb.w	r2, [r0, #196]	; 0xc4
   12944:	cbz	r2, 1297c <repair_qgroups@@Base+0xcb8>
   12946:	movs	r3, #17
   12948:	movs	r2, #101	; 0x65
   1294a:	add	r1, sp, #152	; 0x98
   1294c:	bl	1bbba <read_extent_buffer@@Base>
   12950:	ldr.w	r3, [sp, #165]	; 0xa5
   12954:	ldr.w	r2, [sp, #161]	; 0xa1
   12958:	str.w	r3, [r5, #29]
   1295c:	str.w	r2, [r5, #25]
   12960:	ldrb.w	r3, [sp, #160]	; 0xa0
   12964:	strb	r3, [r5, #24]
   12966:	ldr	r3, [sp, #152]	; 0x98
   12968:	str	r3, [r5, #16]
   1296a:	ldr	r3, [sp, #156]	; 0x9c
   1296c:	str	r3, [r5, #20]
   1296e:	b.n	12984 <repair_qgroups@@Base+0xcc0>
   12970:	mov	r0, r7
   12972:	bl	1b4c0 <free_extent_buffer@@Base>
   12976:	mvn.w	r8, #4
   1297a:	b.n	125bc <repair_qgroups@@Base+0x8f8>
   1297c:	add.w	r1, r5, #16
   12980:	bl	11fe4 <repair_qgroups@@Base+0x320>
   12984:	mov	r0, r7
   12986:	bl	1b4c0 <free_extent_buffer@@Base>
   1298a:	ldrd	r2, r3, [r5]
   1298e:	str	r3, [r2, #4]
   12990:	str	r2, [r3, #0]
   12992:	ldr	r3, [sp, #172]	; 0xac
   12994:	str	r5, [r3, #4]
   12996:	str	r3, [r5, #0]
   12998:	add	r3, sp, #172	; 0xac
   1299a:	str	r5, [sp, #172]	; 0xac
   1299c:	str	r3, [r5, #4]
   1299e:	b.n	127a4 <repair_qgroups@@Base+0xae0>
   129a0:	ldrd	r2, r3, [r5]
   129a4:	str	r3, [r2, #4]
   129a6:	str	r2, [r3, #0]
   129a8:	ldr	r3, [sp, #172]	; 0xac
   129aa:	str	r5, [r3, #4]
   129ac:	str	r3, [r5, #0]
   129ae:	add	r3, sp, #172	; 0xac
   129b0:	str	r3, [r5, #4]
   129b2:	ldrd	r2, r3, [r5, #48]	; 0x30
   129b6:	str	r5, [sp, #172]	; 0xac
   129b8:	strd	r2, r3, [sp, #64]	; 0x40
   129bc:	orrs	r3, r2
   129be:	beq.n	129d4 <repair_qgroups@@Base+0xd10>
   129c0:	ldr.w	r1, [pc, #1412]	; 12f48 <repair_qgroups@@Base+0x1284>
   129c4:	movw	r2, #381	; 0x17d
   129c8:	ldr.w	r0, [pc, #1408]	; 12f4c <repair_qgroups@@Base+0x1288>
   129cc:	add	r1, pc
   129ce:	adds	r1, #101	; 0x65
   129d0:	add	r0, pc
   129d2:	b.n	128ce <repair_qgroups@@Base+0xc0a>
   129d4:	ldr	r3, [r5, #40]	; 0x28
   129d6:	cbnz	r3, 129ec <repair_qgroups@@Base+0xd28>
   129d8:	ldr.w	r1, [pc, #1396]	; 12f50 <repair_qgroups@@Base+0x128c>
   129dc:	mov.w	r2, #382	; 0x17e
   129e0:	ldr.w	r0, [pc, #1392]	; 12f54 <repair_qgroups@@Base+0x1290>
   129e4:	add	r1, pc
   129e6:	adds	r1, #101	; 0x65
   129e8:	add	r0, pc
   129ea:	b.n	128ce <repair_qgroups@@Base+0xc0a>
   129ec:	ldr	r3, [r5, #8]
   129ee:	add	r1, sp, #132	; 0x84
   129f0:	ldr	r6, [r5, #36]	; 0x24
   129f2:	mov.w	r2, #4294967295	; 0xffffffff
   129f6:	ldr	r0, [sp, #44]	; 0x2c
   129f8:	str	r3, [sp, #132]	; 0x84
   129fa:	ldr	r3, [r5, #12]
   129fc:	strb.w	r2, [sp, #141]	; 0x8d
   12a00:	strb.w	r2, [sp, #142]	; 0x8e
   12a04:	str	r3, [sp, #136]	; 0x88
   12a06:	movs	r3, #132	; 0x84
   12a08:	strb.w	r2, [sp, #143]	; 0x8f
   12a0c:	strb.w	r3, [sp, #140]	; 0x8c
   12a10:	strb.w	r2, [sp, #144]	; 0x90
   12a14:	strb.w	r2, [sp, #145]	; 0x91
   12a18:	strb.w	r2, [sp, #146]	; 0x92
   12a1c:	strb.w	r2, [sp, #147]	; 0x93
   12a20:	strb.w	r2, [sp, #148]	; 0x94
   12a24:	bl	222a6 <btrfs_read_fs_root@@Base>
   12a28:	cmn.w	r0, #4096	; 0x1000
   12a2c:	mov	r9, r0
   12a2e:	bls.w	12bd2 <repair_qgroups@@Base+0xf0e>
   12a32:	mov	r8, r0
   12a34:	movs	r3, #0
   12a36:	mov	r0, r4
   12a38:	strb.w	r3, [r4, #65]	; 0x41
   12a3c:	bl	1c6f8 <btrfs_release_path@@Base>
   12a40:	cmn.w	r8, #2
   12a44:	beq.n	12a8c <repair_qgroups@@Base+0xdc8>
   12a46:	cmp.w	r8, #0
   12a4a:	bne.n	12a98 <repair_qgroups@@Base+0xdd4>
   12a4c:	add	r1, sp, #96	; 0x60
   12a4e:	mov	r0, r7
   12a50:	str.w	r8, [sp, #96]	; 0x60
   12a54:	bl	10614 <ulist_next@@Base>
   12a58:	cbz	r0, 12a62 <repair_qgroups@@Base+0xd9e>
   12a5a:	ldrd	r2, r3, [r0]
   12a5e:	strd	r2, r3, [sp, #64]	; 0x40
   12a62:	ldrd	r2, r3, [sp, #64]	; 0x40
   12a66:	strd	r2, r3, [r5, #48]	; 0x30
   12a6a:	cbz	r0, 12a6e <repair_qgroups@@Base+0xdaa>
   12a6c:	ldr	r0, [r0, #8]
   12a6e:	add	r6, sp, #96	; 0x60
   12a70:	add.w	r8, r5, #64	; 0x40
   12a74:	str	r0, [r5, #44]	; 0x2c
   12a76:	mov	r1, r6
   12a78:	mov	r0, r7
   12a7a:	bl	10614 <ulist_next@@Base>
   12a7e:	mov	r9, r0
   12a80:	cmp	r0, #0
   12a82:	bne.w	12d96 <repair_qgroups@@Base+0x10d2>
   12a86:	mov	r0, r7
   12a88:	bl	10402 <ulist_reinit@@Base>
   12a8c:	ldr	r5, [sp, #188]	; 0xbc
   12a8e:	add	r3, sp, #188	; 0xbc
   12a90:	cmp	r5, r3
   12a92:	bne.n	129a0 <repair_qgroups@@Base+0xcdc>
   12a94:	mov.w	r8, #0
   12a98:	mov	r0, r7
   12a9a:	bl	10428 <ulist_free@@Base>
   12a9e:	cmp.w	r8, #0
   12aa2:	bne.w	125bc <repair_qgroups@@Base+0x8f8>
   12aa6:	add	r0, sp, #172	; 0xac
   12aa8:	movs	r1, #2
   12aaa:	bl	122ac <repair_qgroups@@Base+0x5e8>
   12aae:	ldr	r2, [sp, #180]	; 0xb4
   12ab0:	ldr.w	r1, [pc, #1188]	; 12f58 <repair_qgroups@@Base+0x1294>
   12ab4:	add	r3, sp, #180	; 0xb4
   12ab6:	subs	r3, r2, r3
   12ab8:	ldr.w	r0, [pc, #1184]	; 12f5c <repair_qgroups@@Base+0x1298>
   12abc:	add	r1, pc
   12abe:	movw	r2, #801	; 0x321
   12ac2:	add.w	r1, r1, #29
   12ac6:	it	ne
   12ac8:	movne	r3, #1
   12aca:	add	r0, pc
   12acc:	str	r1, [sp, #48]	; 0x30
   12ace:	bl	12250 <repair_qgroups@@Base+0x58c>
   12ad2:	ldr	r2, [sp, #188]	; 0xbc
   12ad4:	add	r3, sp, #188	; 0xbc
   12ad6:	ldr.w	r0, [pc, #1160]	; 12f60 <repair_qgroups@@Base+0x129c>
   12ada:	subs	r3, r2, r3
   12adc:	ldr	r1, [sp, #48]	; 0x30
   12ade:	add	r0, pc
   12ae0:	movw	r2, #802	; 0x322
   12ae4:	it	ne
   12ae6:	movne	r3, #1
   12ae8:	ldr.w	r6, [pc, #1144]	; 12f64 <repair_qgroups@@Base+0x12a0>
   12aec:	bl	12250 <repair_qgroups@@Base+0x58c>
   12af0:	ldr.w	r3, [pc, #1140]	; 12f68 <repair_qgroups@@Base+0x12a4>
   12af4:	add	r6, pc
   12af6:	add	r3, pc
   12af8:	adds	r6, #29
   12afa:	vmov	s16, r3
   12afe:	ldr	r5, [sp, #172]	; 0xac
   12b00:	add	r3, sp, #172	; 0xac
   12b02:	cmp	r5, r3
   12b04:	beq.w	125bc <repair_qgroups@@Base+0x8f8>
   12b08:	ldr	r3, [r5, #40]	; 0x28
   12b0a:	cmp	r3, #0
   12b0c:	bge.n	12b1e <repair_qgroups@@Base+0xe5a>
   12b0e:	vmov	r0, s16
   12b12:	movs	r3, #1
   12b14:	movw	r2, #806	; 0x326
   12b18:	mov	r1, r6
   12b1a:	bl	12270 <repair_qgroups@@Base+0x5ac>
   12b1e:	ldr	r3, [sp, #76]	; 0x4c
   12b20:	cbz	r3, 12b54 <repair_qgroups@@Base+0xe90>
   12b22:	ldr	r3, [r5, #40]	; 0x28
   12b24:	cbz	r3, 12b54 <repair_qgroups@@Base+0xe90>
   12b26:	ldrd	r2, r3, [r5, #8]
   12b2a:	orrs.w	r1, r2, r3
   12b2e:	beq.n	12b54 <repair_qgroups@@Base+0xe90>
   12b30:	ldrd	r0, r1, [r5, #48]	; 0x30
   12b34:	orrs.w	r7, r0, r1
   12b38:	bne.n	12b54 <repair_qgroups@@Base+0xe90>
   12b3a:	mov.w	ip, #0
   12b3e:	strd	r0, r1, [sp]
   12b42:	str.w	ip, [sp, #8]
   12b46:	ldr	r0, [sp, #76]	; 0x4c
   12b48:	bl	1053c <ulist_add@@Base>
   12b4c:	subs.w	r8, r0, #0
   12b50:	blt.w	125bc <repair_qgroups@@Base+0x8f8>
   12b54:	ldr	r3, [r5, #40]	; 0x28
   12b56:	cmp	r3, #0
   12b58:	beq.w	12eb8 <repair_qgroups@@Base+0x11f4>
   12b5c:	ldrd	r2, r3, [r5, #48]	; 0x30
   12b60:	orrs.w	r1, r2, r3
   12b64:	beq.w	12eb8 <repair_qgroups@@Base+0x11f4>
   12b68:	ldr	r0, [sp, #72]	; 0x48
   12b6a:	ldr	r1, [r5, #44]	; 0x2c
   12b6c:	cmp	r0, #0
   12b6e:	beq.w	12e50 <repair_qgroups@@Base+0x118c>
   12b72:	cmp	r1, #0
   12b74:	bne.w	12e50 <repair_qgroups@@Base+0x118c>
   12b78:	ldr.w	sl, [r5, #36]	; 0x24
   12b7c:	cmp.w	sl, #0
   12b80:	bne.w	12e50 <repair_qgroups@@Base+0x118c>
   12b84:	movs	r0, #0
   12b86:	movs	r1, #0
   12b88:	strd	r0, r1, [sp]
   12b8c:	ldr	r0, [sp, #44]	; 0x2c
   12b8e:	bl	21f24 <read_tree_block@@Base>
   12b92:	mov	r9, r0
   12b94:	cmp	r0, #0
   12b96:	beq.w	12dda <repair_qgroups@@Base+0x1116>
   12b9a:	cmn.w	r0, #4096	; 0x1000
   12b9e:	bhi.w	12dda <repair_qgroups@@Base+0x1116>
   12ba2:	ldr	r3, [r0, #84]	; 0x54
   12ba4:	lsls	r3, r3, #29
   12ba6:	bpl.w	12dda <repair_qgroups@@Base+0x1116>
   12baa:	ldr	r3, [sp, #72]	; 0x48
   12bac:	add.w	fp, sp, #152	; 0x98
   12bb0:	ldrd	r2, r3, [r3]
   12bb4:	strd	r2, r3, [sp, #48]	; 0x30
   12bb8:	ldr.w	r3, [r0, #192]	; 0xc0
   12bbc:	str	r3, [sp, #56]	; 0x38
   12bbe:	add.w	r3, r0, #197	; 0xc5
   12bc2:	str	r3, [sp, #64]	; 0x40
   12bc4:	ldr	r3, [sp, #56]	; 0x38
   12bc6:	cmp	r3, sl
   12bc8:	bgt.w	12dde <repair_qgroups@@Base+0x111a>
   12bcc:	mov.w	r8, #0
   12bd0:	b.n	12e3e <repair_qgroups@@Base+0x117a>
   12bd2:	ldrb.w	r3, [r0, #246]	; 0xf6
   12bd6:	movs	r0, #0
   12bd8:	adds	r3, #1
   12bda:	cmp	r6, r3
   12bdc:	beq.w	12d92 <repair_qgroups@@Base+0x10ce>
   12be0:	strb.w	r6, [r4, #65]	; 0x41
   12be4:	add.w	r2, r5, #16
   12be8:	mov	r3, r4
   12bea:	mov	r1, r9
   12bec:	strd	r0, r0, [sp]
   12bf0:	bl	1eadc <btrfs_search_slot@@Base>
   12bf4:	subs.w	r8, r0, #0
   12bf8:	blt.w	12a34 <repair_qgroups@@Base+0xd70>
   12bfc:	ldr.w	r3, [r4, r6, lsl #2]
   12c00:	cbz	r3, 12c28 <repair_qgroups@@Base+0xf64>
   12c02:	movs	r3, #0
   12c04:	str	r3, [sp, #100]	; 0x64
   12c06:	cbz	r6, 12c48 <repair_qgroups@@Base+0xf84>
   12c08:	ldr.w	r2, [r4, r6, lsl #2]
   12c0c:	movs	r0, #0
   12c0e:	movs	r1, #0
   12c10:	str	r3, [sp, #8]
   12c12:	strd	r0, r1, [sp]
   12c16:	mov	r0, r7
   12c18:	ldrd	r2, r3, [r2, #40]	; 0x28
   12c1c:	bl	1053c <ulist_add@@Base>
   12c20:	and.w	r6, r0, r0, asr #31
   12c24:	mov	r8, r6
   12c26:	b.n	12a34 <repair_qgroups@@Base+0xd70>
   12c28:	cbnz	r6, 12c44 <repair_qgroups@@Base+0xf80>
   12c2a:	ldr	r1, [pc, #832]	; (12f6c <repair_qgroups@@Base+0x12a8>)
   12c2c:	movs	r3, #1
   12c2e:	ldr	r0, [pc, #832]	; (12f70 <repair_qgroups@@Base+0x12ac>)
   12c30:	mov.w	r2, #342	; 0x156
   12c34:	add	r1, pc
   12c36:	mov.w	r8, #1
   12c3a:	adds	r1, #125	; 0x7d
   12c3c:	add	r0, pc
   12c3e:	bl	12270 <repair_qgroups@@Base+0x5ac>
   12c42:	b.n	12a34 <repair_qgroups@@Base+0xd70>
   12c44:	subs	r6, #1
   12c46:	b.n	12bfc <repair_qgroups@@Base+0xf38>
   12c48:	ldrd	r2, r3, [r5, #56]	; 0x38
   12c4c:	strd	r2, r3, [sp, #80]	; 0x50
   12c50:	ldr	r3, [r4, #0]
   12c52:	ldr	r2, [r4, #32]
   12c54:	ldr.w	r3, [r3, #192]	; 0xc0
   12c58:	cmp	r2, r3
   12c5a:	bcc.w	12d8e <repair_qgroups@@Base+0x10ca>
   12c5e:	strb.w	r6, [r4, #65]	; 0x41
   12c62:	mov	r1, r4
   12c64:	ldr.w	r0, [r9, #464]	; 0x1d0
   12c68:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   12c6c:	mov	r8, r0
   12c6e:	movs	r3, #0
   12c70:	movs	r2, #0
   12c72:	strd	r2, r3, [sp, #48]	; 0x30
   12c76:	add	r3, sp, #152	; 0x98
   12c78:	vmov	s16, r3
   12c7c:	b.n	12cc0 <repair_qgroups@@Base+0xffc>
   12c7e:	add	r3, sp, #100	; 0x64
   12c80:	str	r3, [sp, #8]
   12c82:	ldr	r3, [sp, #72]	; 0x48
   12c84:	ldrd	r0, r1, [r3]
   12c88:	strd	r0, r1, [sp]
   12c8c:	mov	r1, sl
   12c8e:	vmov	r0, s16
   12c92:	bl	1204c <repair_qgroups@@Base+0x388>
   12c96:	subs.w	r8, r0, #0
   12c9a:	blt.n	12d6c <repair_qgroups@@Base+0x10a8>
   12c9c:	beq.n	12d40 <repair_qgroups@@Base+0x107c>
   12c9e:	ldr	r2, [r4, #0]
   12ca0:	ldr	r3, [r4, #32]
   12ca2:	adds	r3, #1
   12ca4:	str	r3, [r4, #32]
   12ca6:	ldr.w	r2, [r2, #192]	; 0xc0
   12caa:	cmp	r3, r2
   12cac:	bcc.n	12cc8 <repair_qgroups@@Base+0x1004>
   12cae:	movs	r3, #0
   12cb0:	mov	r1, r4
   12cb2:	strb.w	r3, [r4, #65]	; 0x41
   12cb6:	ldr.w	r0, [r9, #464]	; 0x1d0
   12cba:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   12cbe:	mov	r8, r0
   12cc0:	cmp.w	r8, #0
   12cc4:	bne.w	12ee0 <repair_qgroups@@Base+0x121c>
   12cc8:	ldrd	r2, r3, [sp, #48]	; 0x30
   12ccc:	ldrd	r0, r1, [sp, #56]	; 0x38
   12cd0:	cmp	r3, r1
   12cd2:	it	eq
   12cd4:	cmpeq	r2, r0
   12cd6:	bcs.n	12c24 <repair_qgroups@@Base+0xf60>
   12cd8:	ldr.w	sl, [r4]
   12cdc:	ldr.w	fp, [r4, #32]
   12ce0:	vmov	r1, s16
   12ce4:	mov	r0, sl
   12ce6:	mov	r2, fp
   12ce8:	bl	11fe4 <repair_qgroups@@Base+0x320>
   12cec:	ldrd	r0, r1, [sp, #152]	; 0x98
   12cf0:	ldr	r3, [r5, #20]
   12cf2:	ldr	r2, [r5, #16]
   12cf4:	cmp	r1, r3
   12cf6:	it	eq
   12cf8:	cmpeq	r0, r2
   12cfa:	bne.n	12c24 <repair_qgroups@@Base+0xf60>
   12cfc:	ldrb.w	r3, [sp, #160]	; 0xa0
   12d00:	cmp	r3, #108	; 0x6c
   12d02:	bne.n	12c24 <repair_qgroups@@Base+0xf60>
   12d04:	add.w	r3, sl, #96	; 0x60
   12d08:	movs	r2, #25
   12d0a:	mla	fp, r2, fp, r3
   12d0e:	ldr.w	r2, [fp, #118]	; 0x76
   12d12:	ldrd	fp, ip, [sp, #80]	; 0x50
   12d16:	adds	r2, #101	; 0x65
   12d18:	add	r3, r2
   12d1a:	ldr.w	r0, [r3, #21]!
   12d1e:	ldr	r1, [r3, #4]
   12d20:	cmp	ip, r1
   12d22:	it	eq
   12d24:	cmpeq	fp, r0
   12d26:	bne.n	12c9e <repair_qgroups@@Base+0xfda>
   12d28:	movs	r3, #0
   12d2a:	str	r3, [sp, #100]	; 0x64
   12d2c:	ldr	r3, [sp, #48]	; 0x30
   12d2e:	adds	r3, #1
   12d30:	str	r3, [sp, #48]	; 0x30
   12d32:	ldr	r3, [sp, #52]	; 0x34
   12d34:	adc.w	r3, r3, #0
   12d38:	str	r3, [sp, #52]	; 0x34
   12d3a:	ldr	r3, [sp, #72]	; 0x48
   12d3c:	cmp	r3, #0
   12d3e:	bne.n	12c7e <repair_qgroups@@Base+0xfba>
   12d40:	ldrd	r0, r1, [sl, #40]	; 0x28
   12d44:	movs	r2, #0
   12d46:	movs	r3, #0
   12d48:	strd	r2, r3, [sp, #104]	; 0x68
   12d4c:	add	r2, sp, #104	; 0x68
   12d4e:	str	r2, [sp, #8]
   12d50:	ldr	r2, [sp, #100]	; 0x64
   12d52:	movs	r3, #0
   12d54:	str	r3, [sp, #12]
   12d56:	strd	r2, r3, [sp]
   12d5a:	mov	r2, r0
   12d5c:	mov	r3, r1
   12d5e:	mov	r0, r7
   12d60:	bl	1043e <ulist_add_merge@@Base>
   12d64:	ldr	r3, [sp, #104]	; 0x68
   12d66:	subs.w	r8, r0, #0
   12d6a:	bge.n	12d76 <repair_qgroups@@Base+0x10b2>
   12d6c:	ldr	r0, [sp, #100]	; 0x64
   12d6e:	mov	r6, r8
   12d70:	bl	11f68 <repair_qgroups@@Base+0x2a4>
   12d74:	b.n	12c24 <repair_qgroups@@Base+0xf60>
   12d76:	bne.n	12d88 <repair_qgroups@@Base+0x10c4>
   12d78:	ldr	r2, [sp, #72]	; 0x48
   12d7a:	cbz	r2, 12d88 <repair_qgroups@@Base+0x10c4>
   12d7c:	mov	r2, r3
   12d7e:	ldr	r3, [r3, #16]
   12d80:	cmp	r3, #0
   12d82:	bne.n	12d7c <repair_qgroups@@Base+0x10b8>
   12d84:	ldr	r3, [sp, #100]	; 0x64
   12d86:	str	r3, [r2, #16]
   12d88:	movs	r3, #0
   12d8a:	str	r3, [sp, #100]	; 0x64
   12d8c:	b.n	12c9e <repair_qgroups@@Base+0xfda>
   12d8e:	mov	r8, r6
   12d90:	b.n	12c6e <repair_qgroups@@Base+0xfaa>
   12d92:	mov	r8, r0
   12d94:	b.n	12a34 <repair_qgroups@@Base+0xd70>
   12d96:	movs	r0, #64	; 0x40
   12d98:	blx	8e40 <malloc@plt+0x4>
   12d9c:	mov	r3, r0
   12d9e:	cbz	r0, 12dd4 <repair_qgroups@@Base+0x1110>
   12da0:	mov	r2, r5
   12da2:	mov	lr, r0
   12da4:	ldr	r0, [r2, #0]
   12da6:	adds	r2, #8
   12da8:	ldr.w	r1, [r2, #-4]
   12dac:	cmp	r2, r8
   12dae:	mov	ip, lr
   12db0:	stmia.w	ip!, {r0, r1}
   12db4:	mov	lr, ip
   12db6:	bne.n	12da4 <repair_qgroups@@Base+0x10e0>
   12db8:	ldrd	r0, r1, [r9]
   12dbc:	strd	r0, r1, [r3, #48]	; 0x30
   12dc0:	add	r1, sp, #172	; 0xac
   12dc2:	ldr.w	r2, [r9, #8]
   12dc6:	str	r2, [r3, #44]	; 0x2c
   12dc8:	ldr	r2, [sp, #176]	; 0xb0
   12dca:	str	r3, [sp, #176]	; 0xb0
   12dcc:	strd	r1, r2, [r3]
   12dd0:	str	r3, [r2, #0]
   12dd2:	b.n	12a76 <repair_qgroups@@Base+0xdb2>
   12dd4:	mvn.w	r8, #11
   12dd8:	b.n	12a98 <repair_qgroups@@Base+0xdd4>
   12dda:	mov	r0, r9
   12ddc:	b.n	12972 <repair_qgroups@@Base+0xcae>
   12dde:	mov	r2, sl
   12de0:	mov	r1, fp
   12de2:	mov	r0, r9
   12de4:	bl	11fe4 <repair_qgroups@@Base+0x320>
   12de8:	ldrb.w	r2, [sp, #160]	; 0xa0
   12dec:	cmp	r2, #108	; 0x6c
   12dee:	beq.n	12df6 <repair_qgroups@@Base+0x1132>
   12df0:	add.w	sl, sl, #1
   12df4:	b.n	12bc4 <repair_qgroups@@Base+0xf00>
   12df6:	ldr	r3, [sp, #64]	; 0x40
   12df8:	movs	r2, #25
   12dfa:	add.w	r1, r9, #96	; 0x60
   12dfe:	mla	r2, r2, sl, r3
   12e02:	ldr.w	r2, [r2, #17]
   12e06:	adds	r2, #101	; 0x65
   12e08:	add	r1, r2
   12e0a:	ldrb	r0, [r1, #20]
   12e0c:	cmp	r0, #0
   12e0e:	beq.n	12df0 <repair_qgroups@@Base+0x112c>
   12e10:	ldr.w	r3, [r1, #21]!
   12e14:	mov	r7, r3
   12e16:	ldr	r3, [r1, #4]
   12e18:	ldrd	r0, r1, [sp, #32]
   12e1c:	cmp	r1, r3
   12e1e:	it	eq
   12e20:	cmpeq	r0, r7
   12e22:	bne.n	12df0 <repair_qgroups@@Base+0x112c>
   12e24:	add	r1, sp, #92	; 0x5c
   12e26:	str	r1, [sp, #8]
   12e28:	ldrd	r0, r1, [sp, #48]	; 0x30
   12e2c:	strd	r0, r1, [sp]
   12e30:	mov	r1, r9
   12e32:	mov	r0, fp
   12e34:	bl	1204c <repair_qgroups@@Base+0x388>
   12e38:	subs.w	r8, r0, #0
   12e3c:	bge.n	12df0 <repair_qgroups@@Base+0x112c>
   12e3e:	mov	r0, r9
   12e40:	bl	1b4c0 <free_extent_buffer@@Base>
   12e44:	cmp.w	r8, #0
   12e48:	bne.w	125bc <repair_qgroups@@Base+0x8f8>
   12e4c:	ldr	r3, [sp, #92]	; 0x5c
   12e4e:	str	r3, [r5, #44]	; 0x2c
   12e50:	ldrd	r0, r1, [r5, #48]	; 0x30
   12e54:	movs	r3, #0
   12e56:	ldr.w	ip, [r5, #44]	; 0x2c
   12e5a:	ldr	r2, [sp, #92]	; 0x5c
   12e5c:	str	r3, [sp, #12]
   12e5e:	strd	ip, r3, [sp]
   12e62:	strd	r2, r3, [sp, #152]	; 0x98
   12e66:	add	r2, sp, #152	; 0x98
   12e68:	mov	r3, r1
   12e6a:	str	r2, [sp, #8]
   12e6c:	mov	r2, r0
   12e6e:	vmov	r0, s17
   12e72:	bl	1043e <ulist_add_merge@@Base>
   12e76:	ldr.w	r9, [sp, #152]	; 0x98
   12e7a:	str.w	r9, [sp, #92]	; 0x5c
   12e7e:	subs.w	r8, r0, #0
   12e82:	blt.w	125bc <repair_qgroups@@Base+0x8f8>
   12e86:	bne.n	12eb4 <repair_qgroups@@Base+0x11f0>
   12e88:	ldr	r3, [sp, #72]	; 0x48
   12e8a:	cbz	r3, 12eb4 <repair_qgroups@@Base+0x11f0>
   12e8c:	ldr	r1, [pc, #228]	; (12f74 <repair_qgroups@@Base+0x12b0>)
   12e8e:	clz	r3, r9
   12e92:	ldr	r0, [pc, #228]	; (12f78 <repair_qgroups@@Base+0x12b4>)
   12e94:	movw	r2, #841	; 0x349
   12e98:	add	r1, pc
   12e9a:	lsrs	r3, r3, #5
   12e9c:	adds	r1, #29
   12e9e:	add	r0, pc
   12ea0:	bl	12250 <repair_qgroups@@Base+0x58c>
   12ea4:	mov	r3, r9
   12ea6:	ldr.w	r9, [r9, #16]
   12eaa:	cmp.w	r9, #0
   12eae:	bne.n	12ea4 <repair_qgroups@@Base+0x11e0>
   12eb0:	ldr	r2, [r5, #44]	; 0x2c
   12eb2:	str	r2, [r3, #16]
   12eb4:	movs	r3, #0
   12eb6:	str	r3, [sp, #92]	; 0x5c
   12eb8:	ldrd	r2, r3, [r5]
   12ebc:	mov	r0, r5
   12ebe:	str	r3, [r2, #4]
   12ec0:	str	r2, [r3, #0]
   12ec2:	blx	8b84 <free@plt+0x4>
   12ec6:	b.n	12afe <repair_qgroups@@Base+0xe3a>
   12ec8:	ldrd	r2, r3, [r0]
   12ecc:	str	r3, [r2, #4]
   12ece:	str	r2, [r3, #0]
   12ed0:	blx	8b84 <free@plt+0x4>
   12ed4:	b.w	125c4 <repair_qgroups@@Base+0x900>
   12ed8:	mvn.w	r8, #11
   12edc:	b.w	125d8 <repair_qgroups@@Base+0x914>
   12ee0:	bgt.w	12c24 <repair_qgroups@@Base+0xf60>
   12ee4:	b.n	12d6c <repair_qgroups@@Base+0x10a8>
   12ee6:	mov	r0, r8
   12ee8:	add	sp, #204	; 0xcc
   12eea:	vpop	{d8}
   12eee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ef2:	nop
   12ef4:	ldrh	r6, [r0, #12]
   12ef6:	movs	r5, r0
   12ef8:	lsls	r0, r1, #10
   12efa:	movs	r0, r0
   12efc:	ble.n	12e3a <repair_qgroups@@Base+0x1176>
   12efe:	movs	r2, r0
   12f00:	bgt.n	12fbe <repair_qgroups@@Base+0x12fa>
   12f02:	movs	r2, r0
   12f04:	bgt.n	12f24 <repair_qgroups@@Base+0x1260>
   12f06:	movs	r2, r0
   12f08:	bgt.n	12e8e <repair_qgroups@@Base+0x11ca>
   12f0a:	movs	r2, r0
   12f0c:	bgt.n	12e7e <repair_qgroups@@Base+0x11ba>
   12f0e:	movs	r2, r0
   12f10:	lsrs	r6, r1, #18
   12f12:	movs	r3, r0
   12f14:	bgt.n	12e5a <repair_qgroups@@Base+0x1196>
   12f16:	movs	r2, r0
   12f18:	lsrs	r0, r7, #17
   12f1a:	movs	r3, r0
   12f1c:	bgt.n	1301e <repair_qgroups@@Base+0x135a>
   12f1e:	movs	r2, r0
   12f20:	blt.n	12fe8 <repair_qgroups@@Base+0x1324>
   12f22:	movs	r2, r0
   12f24:	strh	r0, [r7, #56]	; 0x38
   12f26:	movs	r5, r0
   12f28:	bge.n	12f9e <repair_qgroups@@Base+0x12da>
   12f2a:	movs	r2, r0
   12f2c:	bls.n	1301c <repair_qgroups@@Base+0x1358>
   12f2e:	movs	r2, r0
   12f30:	bls.n	12f52 <repair_qgroups@@Base+0x128e>
   12f32:	movs	r2, r0
   12f34:	bhi.n	12f68 <repair_qgroups@@Base+0x12a4>
   12f36:	movs	r2, r0
   12f38:	bhi.n	12f1a <repair_qgroups@@Base+0x1256>
   12f3a:	movs	r2, r0
   12f3c:	bhi.n	12f4a <repair_qgroups@@Base+0x1286>
   12f3e:	movs	r2, r0
   12f40:	bhi.n	12ef2 <repair_qgroups@@Base+0x122e>
   12f42:	movs	r2, r0
   12f44:	bvc.n	12f3c <repair_qgroups@@Base+0x1278>
   12f46:	movs	r2, r0
   12f48:	bhi.n	12f62 <repair_qgroups@@Base+0x129e>
   12f4a:	movs	r2, r0
   12f4c:	bvc.n	12f92 <repair_qgroups@@Base+0x12ce>
   12f4e:	movs	r2, r0
   12f50:	bvc.n	12f3a <repair_qgroups@@Base+0x1276>
   12f52:	movs	r2, r0
   12f54:	bvc.n	12fe6 <repair_qgroups@@Base+0x1322>
   12f56:	movs	r2, r0
   12f58:	bvc.n	12f92 <repair_qgroups@@Base+0x12ce>
   12f5a:	movs	r2, r0
   12f5c:	bvs.n	13040 <inode_item_info@@Base>
   12f5e:	movs	r2, r0
   12f60:	bvs.n	12e76 <repair_qgroups@@Base+0x11b2>
   12f62:	movs	r2, r0
   12f64:	bvs.n	12f2e <repair_qgroups@@Base+0x126a>
   12f66:	movs	r2, r0
   12f68:	bvs.n	12eaa <repair_qgroups@@Base+0x11e6>
   12f6a:	movs	r2, r0
   12f6c:	bpl.n	12eb6 <repair_qgroups@@Base+0x11f2>
   12f6e:	movs	r2, r0
   12f70:	lsls	r6, r6, #21
   12f72:	movs	r3, r0
   12f74:	bcc.n	12ff6 <repair_qgroups@@Base+0x1332>
   12f76:	movs	r2, r0
   12f78:	bcc.n	12f88 <repair_qgroups@@Base+0x12c4>
   12f7a:	movs	r2, r0
   12f7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f80:	mov	fp, r2
   12f82:	ldr	r2, [pc, #164]	; (13028 <repair_qgroups@@Base+0x1364>)
   12f84:	mov	r4, r3
   12f86:	ldr	r3, [pc, #164]	; (1302c <repair_qgroups@@Base+0x1368>)
   12f88:	sub	sp, #28
   12f8a:	add	r2, pc
   12f8c:	mov	r7, r0
   12f8e:	movs	r0, #0
   12f90:	ldr.w	r9, [sp, #64]	; 0x40
   12f94:	ldr	r3, [r2, r3]
   12f96:	mov	r8, r1
   12f98:	ldr	r3, [r3, #0]
   12f9a:	str	r3, [sp, #20]
   12f9c:	mov.w	r3, #0
   12fa0:	bl	10414 <ulist_alloc@@Base>
   12fa4:	mov	r5, r0
   12fa6:	cbz	r0, 12fba <repair_qgroups@@Base+0x12f6>
   12fa8:	movs	r0, #0
   12faa:	bl	10414 <ulist_alloc@@Base>
   12fae:	str.w	r0, [r9]
   12fb2:	cbnz	r0, 12fc0 <repair_qgroups@@Base+0x12fc>
   12fb4:	mov	r0, r5
   12fb6:	bl	10428 <ulist_free@@Base>
   12fba:	mvn.w	r4, #11
   12fbe:	b.n	12ff4 <repair_qgroups@@Base+0x1330>
   12fc0:	add.w	sl, sp, #16
   12fc4:	movs	r6, #0
   12fc6:	str	r6, [sp, #16]
   12fc8:	str	r6, [sp, #8]
   12fca:	mov	r2, fp
   12fcc:	ldr.w	r3, [r9]
   12fd0:	mov	r1, r8
   12fd2:	mov	r0, r7
   12fd4:	strd	r5, r3, [sp]
   12fd8:	mov	r3, r4
   12fda:	bl	12372 <repair_qgroups@@Base+0x6ae>
   12fde:	subs	r4, r0, #0
   12fe0:	bge.n	13008 <repair_qgroups@@Base+0x1344>
   12fe2:	adds	r3, r4, #2
   12fe4:	beq.n	13008 <repair_qgroups@@Base+0x1344>
   12fe6:	mov	r0, r5
   12fe8:	bl	10428 <ulist_free@@Base>
   12fec:	ldr.w	r0, [r9]
   12ff0:	bl	10428 <ulist_free@@Base>
   12ff4:	ldr	r2, [pc, #56]	; (13030 <repair_qgroups@@Base+0x136c>)
   12ff6:	ldr	r3, [pc, #52]	; (1302c <repair_qgroups@@Base+0x1368>)
   12ff8:	add	r2, pc
   12ffa:	ldr	r3, [r2, r3]
   12ffc:	ldr	r2, [r3, #0]
   12ffe:	ldr	r3, [sp, #20]
   13000:	eors	r2, r3
   13002:	beq.n	1301e <repair_qgroups@@Base+0x135a>
   13004:	blx	8c90 <__stack_chk_fail@plt>
   13008:	mov	r1, sl
   1300a:	mov	r0, r5
   1300c:	bl	10614 <ulist_next@@Base>
   13010:	mov	r4, r0
   13012:	cbz	r0, 1301a <repair_qgroups@@Base+0x1356>
   13014:	ldrd	fp, r4, [r0]
   13018:	b.n	12fc8 <repair_qgroups@@Base+0x1304>
   1301a:	mov	r0, r5
   1301c:	b.n	12ff0 <repair_qgroups@@Base+0x132c>
   1301e:	mov	r0, r4
   13020:	add	sp, #28
   13022:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13026:	nop
   13028:	ldrb	r6, [r1, #22]
   1302a:	movs	r5, r0
   1302c:	lsls	r0, r1, #10
   1302e:	movs	r0, r0
   13030:	ldrb	r0, [r4, #20]
   13032:	movs	r5, r0

00013034 <btrfs_find_all_roots@@Base>:
   13034:	push	{r4}
   13036:	ldr	r4, [sp, #12]
   13038:	str	r4, [sp, #4]
   1303a:	ldr.w	r4, [sp], #4
   1303e:	b.n	12f7c <repair_qgroups@@Base+0x12b8>

00013040 <inode_item_info@@Base>:
   13040:	ldr.w	ip, [pc, #68]	; 13088 <inode_item_info@@Base+0x48>
   13044:	push	{r4, lr}
   13046:	add	ip, pc
   13048:	ldr	r4, [pc, #64]	; (1308c <inode_item_info@@Base+0x4c>)
   1304a:	sub	sp, #40	; 0x28
   1304c:	ldr.w	r4, [ip, r4]
   13050:	ldr	r4, [r4, #0]
   13052:	str	r4, [sp, #36]	; 0x24
   13054:	mov.w	r4, #0
   13058:	strd	r2, r3, [sp]
   1305c:	add	r4, sp, #16
   1305e:	mov	r2, r0
   13060:	mov	r3, r1
   13062:	str	r4, [sp, #12]
   13064:	ldrd	r0, r1, [sp, #48]	; 0x30
   13068:	movs	r4, #1
   1306a:	str	r4, [sp, #8]
   1306c:	bl	20010 <btrfs_find_item@@Base>
   13070:	ldr	r2, [pc, #28]	; (13090 <inode_item_info@@Base+0x50>)
   13072:	ldr	r3, [pc, #24]	; (1308c <inode_item_info@@Base+0x4c>)
   13074:	add	r2, pc
   13076:	ldr	r3, [r2, r3]
   13078:	ldr	r2, [r3, #0]
   1307a:	ldr	r3, [sp, #36]	; 0x24
   1307c:	eors	r2, r3
   1307e:	beq.n	13084 <inode_item_info@@Base+0x44>
   13080:	blx	8c90 <__stack_chk_fail@plt>
   13084:	add	sp, #40	; 0x28
   13086:	pop	{r4, pc}
   13088:	ldrb	r2, [r2, #19]
   1308a:	movs	r5, r0
   1308c:	lsls	r0, r1, #10
   1308e:	movs	r0, r0
   13090:	ldrb	r4, [r4, #18]
   13092:	movs	r5, r0

00013094 <btrfs_find_one_extref@@Base>:
   13094:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13098:	mov	r6, r2
   1309a:	ldr	r2, [pc, #204]	; (13168 <btrfs_find_one_extref@@Base+0xd4>)
   1309c:	mov	r7, r3
   1309e:	ldr	r3, [pc, #204]	; (1316c <btrfs_find_one_extref@@Base+0xd8>)
   130a0:	sub	sp, #60	; 0x3c
   130a2:	add	r2, pc
   130a4:	mov.w	sl, #0
   130a8:	ldrd	r4, r9, [sp, #104]	; 0x68
   130ac:	mov	r1, r0
   130ae:	ldr	r3, [r2, r3]
   130b0:	mov	r8, r0
   130b2:	mov	r0, sl
   130b4:	add	r2, sp, #12
   130b6:	ldr	r3, [r3, #0]
   130b8:	str	r3, [sp, #52]	; 0x34
   130ba:	mov.w	r3, #0
   130be:	movs	r3, #13
   130c0:	strb.w	r3, [sp, #20]
   130c4:	ldr	r3, [sp, #96]	; 0x60
   130c6:	strd	sl, sl, [sp]
   130ca:	ldr	r5, [sp, #112]	; 0x70
   130cc:	str.w	r3, [sp, #21]
   130d0:	ldr	r3, [sp, #100]	; 0x64
   130d2:	strd	r6, r7, [sp, #12]
   130d6:	str.w	r3, [sp, #25]
   130da:	mov	r3, r4
   130dc:	bl	1eadc <btrfs_search_slot@@Base>
   130e0:	cmp	r0, #0
   130e2:	blt.n	1310a <btrfs_find_one_extref@@Base+0x76>
   130e4:	ldr.w	fp, [r4]
   130e8:	ldr	r2, [r4, #32]
   130ea:	ldr.w	r3, [fp, #192]	; 0xc0
   130ee:	cmp	r3, r2
   130f0:	bhi.n	1311e <btrfs_find_one_extref@@Base+0x8a>
   130f2:	strb.w	sl, [r4, #65]	; 0x41
   130f6:	mov	r1, r4
   130f8:	ldr.w	r0, [r8, #464]	; 0x1d0
   130fc:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   13100:	cmp	r0, #0
   13102:	beq.n	130e4 <btrfs_find_one_extref@@Base+0x50>
   13104:	ble.n	1310a <btrfs_find_one_extref@@Base+0x76>
   13106:	mvn.w	r0, #1
   1310a:	ldr	r2, [pc, #100]	; (13170 <btrfs_find_one_extref@@Base+0xdc>)
   1310c:	ldr	r3, [pc, #92]	; (1316c <btrfs_find_one_extref@@Base+0xd8>)
   1310e:	add	r2, pc
   13110:	ldr	r3, [r2, r3]
   13112:	ldr	r2, [r3, #0]
   13114:	ldr	r3, [sp, #52]	; 0x34
   13116:	eors	r2, r3
   13118:	beq.n	13162 <btrfs_find_one_extref@@Base+0xce>
   1311a:	blx	8c90 <__stack_chk_fail@plt>
   1311e:	add	r1, sp, #32
   13120:	mov	r0, fp
   13122:	bl	11fe4 <repair_qgroups@@Base+0x320>
   13126:	ldrd	r2, r3, [sp, #32]
   1312a:	cmp	r7, r3
   1312c:	it	eq
   1312e:	cmpeq	r6, r2
   13130:	bne.n	13106 <btrfs_find_one_extref@@Base+0x72>
   13132:	ldrb.w	r3, [sp, #40]	; 0x28
   13136:	cmp	r3, #13
   13138:	bne.n	13106 <btrfs_find_one_extref@@Base+0x72>
   1313a:	ldr	r3, [r4, #32]
   1313c:	movs	r0, #25
   1313e:	mla	r3, r0, r3, fp
   13142:	ldr.w	r3, [r3, #214]	; 0xd6
   13146:	adds	r3, #101	; 0x65
   13148:	str.w	r3, [r9]
   1314c:	cbz	r5, 1315e <btrfs_find_one_extref@@Base+0xca>
   1314e:	ldr.w	r2, [sp, #41]	; 0x29
   13152:	movs	r0, #0
   13154:	ldr.w	r3, [sp, #45]	; 0x2d
   13158:	strd	r2, r3, [r5]
   1315c:	b.n	1310a <btrfs_find_one_extref@@Base+0x76>
   1315e:	mov	r0, r5
   13160:	b.n	1310a <btrfs_find_one_extref@@Base+0x76>
   13162:	add	sp, #60	; 0x3c
   13164:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13168:	ldrb	r6, [r6, #17]
   1316a:	movs	r5, r0
   1316c:	lsls	r0, r1, #10
   1316e:	movs	r0, r0
   13170:	ldrb	r2, [r1, #16]
   13172:	movs	r5, r0

00013174 <btrfs_ref_to_path@@Base>:
   13174:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13178:	mov	r7, r0
   1317a:	ldr	r0, [pc, #304]	; (132ac <btrfs_ref_to_path@@Base+0x138>)
   1317c:	sub	sp, #68	; 0x44
   1317e:	mov	r5, r1
   13180:	ldr	r1, [pc, #300]	; (132b0 <btrfs_ref_to_path@@Base+0x13c>)
   13182:	add	r0, pc
   13184:	mov	ip, r2
   13186:	mov	r2, r3
   13188:	ldrd	r6, r3, [sp, #120]	; 0x78
   1318c:	ldr	r1, [r0, r1]
   1318e:	adds.w	r9, r3, #4294967295	; 0xffffffff
   13192:	ldr.w	r8, [sp, #104]	; 0x68
   13196:	ldr	r1, [r1, #0]
   13198:	str	r1, [sp, #60]	; 0x3c
   1319a:	mov.w	r1, #0
   1319e:	mov	r0, r3
   131a0:	mov.w	r1, #0
   131a4:	adc.w	sl, r1, #4294967295	; 0xffffffff
   131a8:	orrs	r1, r0
   131aa:	mov	r4, r8
   131ac:	ittt	ne
   131ae:	addne	r3, r3, r6
   131b0:	movne	r1, #0
   131b2:	strbne.w	r1, [r3, #-1]
   131b6:	add	r3, sp, #40	; 0x28
   131b8:	str	r3, [sp, #36]	; 0x24
   131ba:	subs.w	r0, r9, ip
   131be:	sbc.w	r1, sl, #0
   131c2:	cmp	r0, #0
   131c4:	sbcs.w	r3, r1, #0
   131c8:	strd	r0, r1, [sp, #16]
   131cc:	blt.n	131da <btrfs_ref_to_path@@Base+0x66>
   131ce:	ldr	r1, [sp, #16]
   131d0:	mov	r3, ip
   131d2:	mov	r0, r4
   131d4:	adds	r1, r6, r1
   131d6:	bl	1bbba <read_extent_buffer@@Base>
   131da:	cmp	r4, r8
   131dc:	beq.n	131e4 <btrfs_ref_to_path@@Base+0x70>
   131de:	mov	r0, r4
   131e0:	bl	1b4c0 <free_extent_buffer@@Base>
   131e4:	ldr	r3, [sp, #36]	; 0x24
   131e6:	movs	r4, #0
   131e8:	mov	r1, r5
   131ea:	mov	r0, r7
   131ec:	str	r3, [sp, #12]
   131ee:	movs	r3, #12
   131f0:	str	r3, [sp, #8]
   131f2:	movs	r3, #0
   131f4:	strd	r3, r4, [sp]
   131f8:	ldrd	r2, r3, [sp, #112]	; 0x70
   131fc:	bl	20010 <btrfs_find_item@@Base>
   13200:	subs	r4, r0, #0
   13202:	bgt.n	1327a <btrfs_ref_to_path@@Base+0x106>
   13204:	bne.n	1327e <btrfs_ref_to_path@@Base+0x10a>
   13206:	ldr.w	r3, [sp, #49]	; 0x31
   1320a:	str	r3, [sp, #24]
   1320c:	ldr.w	r3, [sp, #53]	; 0x35
   13210:	str	r3, [sp, #28]
   13212:	ldrd	r0, r1, [sp, #24]
   13216:	ldrd	r2, r3, [sp, #112]	; 0x70
   1321a:	cmp	r3, r1
   1321c:	it	eq
   1321e:	cmpeq	r2, r0
   13220:	beq.n	1327e <btrfs_ref_to_path@@Base+0x10a>
   13222:	ldr	r4, [r5, #0]
   13224:	mov	r0, r5
   13226:	ldr.w	fp, [r5, #32]
   1322a:	cmp	r8, r4
   1322c:	ittt	ne
   1322e:	ldrne	r3, [r4, #80]	; 0x50
   13230:	addne	r3, #1
   13232:	strne	r3, [r4, #80]	; 0x50
   13234:	bl	1c6f8 <btrfs_release_path@@Base>
   13238:	add.w	r1, r4, #96	; 0x60
   1323c:	movs	r3, #25
   1323e:	mla	fp, r3, fp, r1
   13242:	ldr.w	r2, [fp, #118]	; 0x76
   13246:	add.w	r3, r2, #101	; 0x65
   1324a:	adds	r2, #111	; 0x6f
   1324c:	add	r1, r3
   1324e:	ldr	r3, [sp, #16]
   13250:	adds.w	r9, r3, #4294967295	; 0xffffffff
   13254:	ldr	r3, [sp, #20]
   13256:	ldrh.w	ip, [r1, #8]
   1325a:	adc.w	sl, r3, #4294967295	; 0xffffffff
   1325e:	cmp.w	r9, #0
   13262:	sbcs.w	r3, sl, #0
   13266:	blt.n	13270 <btrfs_ref_to_path@@Base+0xfc>
   13268:	add.w	r3, r6, r9
   1326c:	movs	r1, #47	; 0x2f
   1326e:	strb	r1, [r3, #0]
   13270:	ldrd	r0, r1, [sp, #24]
   13274:	strd	r0, r1, [sp, #112]	; 0x70
   13278:	b.n	131ba <btrfs_ref_to_path@@Base+0x46>
   1327a:	mvn.w	r4, #1
   1327e:	mov	r0, r5
   13280:	bl	1c6f8 <btrfs_release_path@@Base>
   13284:	cbz	r4, 1329c <btrfs_ref_to_path@@Base+0x128>
   13286:	mov	r0, r4
   13288:	ldr	r2, [pc, #40]	; (132b4 <btrfs_ref_to_path@@Base+0x140>)
   1328a:	ldr	r3, [pc, #36]	; (132b0 <btrfs_ref_to_path@@Base+0x13c>)
   1328c:	add	r2, pc
   1328e:	ldr	r3, [r2, r3]
   13290:	ldr	r2, [r3, #0]
   13292:	ldr	r3, [sp, #60]	; 0x3c
   13294:	eors	r2, r3
   13296:	beq.n	132a4 <btrfs_ref_to_path@@Base+0x130>
   13298:	blx	8c90 <__stack_chk_fail@plt>
   1329c:	ldr	r3, [sp, #16]
   1329e:	add	r3, r6
   132a0:	mov	r0, r3
   132a2:	b.n	13288 <btrfs_ref_to_path@@Base+0x114>
   132a4:	add	sp, #68	; 0x44
   132a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132aa:	nop
   132ac:	ldrb	r6, [r2, #14]
   132ae:	movs	r5, r0
   132b0:	lsls	r0, r1, #10
   132b2:	movs	r0, r0
   132b4:	ldrb	r4, [r1, #10]
   132b6:	movs	r5, r0
   132b8:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   132bc:	sub	sp, #24
   132be:	mov	r9, r1
   132c0:	mov	r8, r0
   132c2:	ldr	r4, [sp, #52]	; 0x34
   132c4:	ldr	r1, [r4, #8]
   132c6:	ldr	r6, [r1, #8]
   132c8:	add.w	r5, r1, r6, lsl #2
   132cc:	ldr	r1, [r1, #0]
   132ce:	adds	r5, #20
   132d0:	strd	r8, r9, [sp, #8]
   132d4:	cmp	r1, #4
   132d6:	it	cc
   132d8:	movcc	r1, #4
   132da:	subs	r1, #4
   132dc:	strd	r5, r1, [sp, #16]
   132e0:	ldr	r1, [sp, #48]	; 0x30
   132e2:	str	r1, [sp, #0]
   132e4:	ldrd	r1, r0, [r4]
   132e8:	bl	13174 <btrfs_ref_to_path@@Base>
   132ec:	cmn.w	r0, #4096	; 0x1000
   132f0:	bhi.n	13316 <btrfs_ref_to_path@@Base+0x1a2>
   132f2:	cmp	r5, r0
   132f4:	ldr	r2, [r4, #8]
   132f6:	bcs.n	1331c <btrfs_ref_to_path@@Base+0x1a8>
   132f8:	adds	r6, #2
   132fa:	movs	r3, #0
   132fc:	add.w	r1, r2, r6, lsl #3
   13300:	str.w	r0, [r2, r6, lsl #3]
   13304:	subs	r0, r0, r5
   13306:	str	r3, [r1, #4]
   13308:	ldr	r1, [r4, #8]
   1330a:	ldr	r2, [r1, #8]
   1330c:	adds	r2, #1
   1330e:	str	r2, [r1, #8]
   13310:	ldr	r2, [r4, #8]
   13312:	str	r0, [r2, #0]
   13314:	mov	r0, r3
   13316:	add	sp, #24
   13318:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   1331c:	ldr	r3, [r2, #12]
   1331e:	subs	r0, r5, r0
   13320:	adds	r3, #1
   13322:	str	r3, [r2, #12]
   13324:	ldr	r3, [r4, #8]
   13326:	ldr	r5, [r3, #4]
   13328:	add	r0, r5
   1332a:	str	r0, [r3, #4]
   1332c:	ldr	r3, [r4, #8]
   1332e:	movs	r0, #0
   13330:	str	r0, [r3, #0]
   13332:	b.n	13316 <btrfs_ref_to_path@@Base+0x1a2>

00013334 <extent_from_logical@@Base>:
   13334:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13338:	mov	r8, r2
   1333a:	ldr	r2, [pc, #380]	; (134b8 <extent_from_logical@@Base+0x184>)
   1333c:	mov	r9, r3
   1333e:	ldr	r3, [pc, #380]	; (134bc <extent_from_logical@@Base+0x188>)
   13340:	sub	sp, #40	; 0x28
   13342:	add	r2, pc
   13344:	mov	r7, r0
   13346:	ldrd	r5, r6, [sp, #72]	; 0x48
   1334a:	ldr	r3, [r2, r3]
   1334c:	ldr.w	sl, [sp, #80]	; 0x50
   13350:	ldr	r3, [r3, #0]
   13352:	str	r3, [sp, #36]	; 0x24
   13354:	mov.w	r3, #0
   13358:	ldr.w	r3, [r0, #308]	; 0x134
   1335c:	movs	r0, #0
   1335e:	ldr.w	r1, [r3, #188]	; 0xbc
   13362:	mov	r3, r0
   13364:	strd	r0, r0, [sp]
   13368:	and.w	r2, r1, #256	; 0x100
   1336c:	ldr	r1, [r7, #24]
   1336e:	orrs	r3, r2
   13370:	mov.w	r2, #4294967295	; 0xffffffff
   13374:	strb.w	r2, [sp, #25]
   13378:	ite	ne
   1337a:	movne	r3, #169	; 0xa9
   1337c:	moveq	r3, #168	; 0xa8
   1337e:	strb.w	r2, [sp, #26]
   13382:	strb.w	r3, [sp, #24]
   13386:	mov	r3, r5
   13388:	strb.w	r2, [sp, #27]
   1338c:	strb.w	r2, [sp, #28]
   13390:	strb.w	r2, [sp, #29]
   13394:	strb.w	r2, [sp, #30]
   13398:	strb.w	r2, [sp, #31]
   1339c:	strb.w	r2, [sp, #32]
   133a0:	add	r2, sp, #16
   133a2:	strd	r8, r9, [sp, #16]
   133a6:	bl	1eadc <btrfs_search_slot@@Base>
   133aa:	subs	r4, r0, #0
   133ac:	blt.n	133c4 <extent_from_logical@@Base+0x90>
   133ae:	ldr	r0, [r7, #24]
   133b0:	movs	r2, #0
   133b2:	movs	r3, #0
   133b4:	mov	r1, r5
   133b6:	bl	20238 <btrfs_previous_extent_item@@Base>
   133ba:	subs	r4, r0, #0
   133bc:	beq.n	133d8 <extent_from_logical@@Base+0xa4>
   133be:	ble.n	133c4 <extent_from_logical@@Base+0x90>
   133c0:	mvn.w	r4, #1
   133c4:	ldr	r2, [pc, #248]	; (134c0 <extent_from_logical@@Base+0x18c>)
   133c6:	ldr	r3, [pc, #244]	; (134bc <extent_from_logical@@Base+0x188>)
   133c8:	add	r2, pc
   133ca:	ldr	r3, [r2, r3]
   133cc:	ldr	r2, [r3, #0]
   133ce:	ldr	r3, [sp, #36]	; 0x24
   133d0:	eors	r2, r3
   133d2:	beq.n	134b0 <extent_from_logical@@Base+0x17c>
   133d4:	blx	8c90 <__stack_chk_fail@plt>
   133d8:	ldr	r2, [r5, #32]
   133da:	mov	r1, r6
   133dc:	ldr	r0, [r5, #0]
   133de:	bl	11fe4 <repair_qgroups@@Base+0x320>
   133e2:	ldrb	r3, [r6, #8]
   133e4:	cmp	r3, #169	; 0xa9
   133e6:	bne.n	13466 <extent_from_logical@@Base+0x132>
   133e8:	ldr.w	r1, [r7, #384]	; 0x180
   133ec:	movs	r0, #0
   133ee:	ldr	r3, [r6, #4]
   133f0:	ldr	r2, [r6, #0]
   133f2:	cmp	r9, r3
   133f4:	it	eq
   133f6:	cmpeq	r8, r2
   133f8:	bcc.n	133c0 <extent_from_logical@@Base+0x8c>
   133fa:	adds	r1, r2, r1
   133fc:	str	r1, [sp, #8]
   133fe:	adcs	r3, r0
   13400:	str	r3, [sp, #12]
   13402:	ldrd	r2, r3, [sp, #8]
   13406:	cmp	r9, r3
   13408:	it	eq
   1340a:	cmpeq	r8, r2
   1340c:	bcs.n	133c0 <extent_from_logical@@Base+0x8c>
   1340e:	ldr	r6, [r5, #0]
   13410:	movs	r2, #25
   13412:	ldr	r3, [r5, #32]
   13414:	adds	r6, #96	; 0x60
   13416:	ldr	r1, [pc, #172]	; (134c4 <extent_from_logical@@Base+0x190>)
   13418:	ldr	r0, [pc, #172]	; (134c8 <extent_from_logical@@Base+0x194>)
   1341a:	mla	r3, r2, r3, r6
   1341e:	add	r1, pc
   13420:	adds	r1, #148	; 0x94
   13422:	add	r0, pc
   13424:	movw	r2, #1178	; 0x49a
   13428:	str	r1, [sp, #8]
   1342a:	add.w	r5, r3, #101	; 0x65
   1342e:	ldr.w	r3, [r3, #122]	; 0x7a
   13432:	cmp	r3, #23
   13434:	ite	hi
   13436:	movhi	r3, #0
   13438:	movls	r3, #1
   1343a:	bl	12250 <repair_qgroups@@Base+0x58c>
   1343e:	ldr.w	r3, [r5, #17]
   13442:	ldr	r1, [sp, #8]
   13444:	add	r6, r3
   13446:	ldr.w	r5, [r6, #117]	; 0x75
   1344a:	cmp.w	sl, #0
   1344e:	beq.n	1349c <extent_from_logical@@Base+0x168>
   13450:	and.w	r2, r5, #2
   13454:	movs	r0, #0
   13456:	mov	r3, r0
   13458:	orrs	r3, r2
   1345a:	beq.n	13478 <extent_from_logical@@Base+0x144>
   1345c:	movs	r2, #2
   1345e:	movs	r3, #0
   13460:	strd	r2, r3, [sl]
   13464:	b.n	133c4 <extent_from_logical@@Base+0x90>
   13466:	cmp	r3, #168	; 0xa8
   13468:	iteet	ne
   1346a:	movne	r1, #0
   1346c:	ldreq.w	r1, [r6, #9]
   13470:	ldreq.w	r0, [r6, #13]
   13474:	movne	r0, r1
   13476:	b.n	133ee <extent_from_logical@@Base+0xba>
   13478:	and.w	r2, r5, #1
   1347c:	mov	r3, r0
   1347e:	orrs	r3, r2
   13480:	beq.n	13486 <extent_from_logical@@Base+0x152>
   13482:	movs	r2, #1
   13484:	b.n	1345e <extent_from_logical@@Base+0x12a>
   13486:	ldr	r0, [pc, #68]	; (134cc <extent_from_logical@@Base+0x198>)
   13488:	mov	r2, r1
   1348a:	ldr	r1, [pc, #68]	; (134d0 <extent_from_logical@@Base+0x19c>)
   1348c:	movs	r3, #1
   1348e:	add	r0, pc
   13490:	str	r3, [sp, #0]
   13492:	add	r1, pc
   13494:	movw	r3, #1194	; 0x4aa
   13498:	bl	121b6 <repair_qgroups@@Base+0x4f2>
   1349c:	ldr	r0, [pc, #52]	; (134d4 <extent_from_logical@@Base+0x1a0>)
   1349e:	movs	r3, #1
   134a0:	movw	r2, #1197	; 0x4ad
   134a4:	mvn.w	r4, #4
   134a8:	add	r0, pc
   134aa:	bl	12270 <repair_qgroups@@Base+0x5ac>
   134ae:	b.n	133c4 <extent_from_logical@@Base+0x90>
   134b0:	mov	r0, r4
   134b2:	add	sp, #40	; 0x28
   134b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   134b8:	ldrb	r6, [r2, #7]
   134ba:	movs	r5, r0
   134bc:	lsls	r0, r1, #10
   134be:	movs	r0, r0
   134c0:	ldrb	r0, [r2, #5]
   134c2:	movs	r5, r0
   134c4:	ldmia	r5, {r0, r3, r4, r5, r7}
   134c6:	movs	r2, r0
   134c8:	ldmia	r4!, {r3, r7}
   134ca:	movs	r2, r0
   134cc:	stc2	0, cr0, [r4, #-8]!
   134d0:	ldmia	r4!, {r0, r2}
   134d2:	movs	r2, r0
   134d4:	stc2	0, cr0, [sl, #-8]

000134d8 <tree_backref_for_extent@@Base>:
   134d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134dc:	mov	r5, r3
   134de:	ldr	r3, [r0, #0]
   134e0:	sub	sp, #20
   134e2:	mov	r4, r0
   134e4:	adds	r3, #1
   134e6:	strd	r1, r2, [sp, #8]
   134ea:	beq.n	13544 <tree_backref_for_extent@@Base+0x6c>
   134ec:	ldr.w	sl, [pc, #228]	; 135d4 <tree_backref_for_extent@@Base+0xfc>
   134f0:	ldr.w	fp, [pc, #228]	; 135d8 <tree_backref_for_extent@@Base+0x100>
   134f4:	add	sl, pc
   134f6:	add.w	sl, sl, #168	; 0xa8
   134fa:	add	fp, pc
   134fc:	ldr	r3, [sp, #8]
   134fe:	add.w	r6, r3, #96	; 0x60
   13502:	ldr	r3, [r4, #0]
   13504:	cbz	r3, 1354c <tree_backref_for_extent@@Base+0x74>
   13506:	ldr	r3, [sp, #56]	; 0x38
   13508:	add.w	r9, r5, r3
   1350c:	ldr	r3, [r4, #0]
   1350e:	add.w	r8, r6, r3
   13512:	ldrb	r7, [r6, r3]
   13514:	cmp	r7, #176	; 0xb0
   13516:	bne.n	13594 <tree_backref_for_extent@@Base+0xbc>
   13518:	movs	r2, #9
   1351a:	add	r3, r2
   1351c:	str	r3, [r4, #0]
   1351e:	cmp	r9, r3
   13520:	bcs.n	13536 <tree_backref_for_extent@@Base+0x5e>
   13522:	ldr	r1, [pc, #184]	; (135dc <tree_backref_for_extent@@Base+0x104>)
   13524:	movs	r3, #1
   13526:	ldr	r0, [pc, #184]	; (135e0 <tree_backref_for_extent@@Base+0x108>)
   13528:	movw	r2, #1247	; 0x4df
   1352c:	add	r1, pc
   1352e:	adds	r1, #168	; 0xa8
   13530:	add	r0, pc
   13532:	bl	12270 <repair_qgroups@@Base+0x5ac>
   13536:	cmp	r7, #176	; 0xb0
   13538:	ldr	r3, [r4, #0]
   1353a:	beq.n	135ac <tree_backref_for_extent@@Base+0xd4>
   1353c:	cmp	r7, #182	; 0xb6
   1353e:	beq.n	135ac <tree_backref_for_extent@@Base+0xd4>
   13540:	cmp	r9, r3
   13542:	bne.n	134fc <tree_backref_for_extent@@Base+0x24>
   13544:	movs	r0, #1
   13546:	add	sp, #20
   13548:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1354c:	adds	r2, r6, r5
   1354e:	ldr	r2, [r2, #16]
   13550:	and.w	r2, r2, #2
   13554:	strd	r2, r3, [sp]
   13558:	ldrd	r2, r3, [sp]
   1355c:	orrs	r3, r2
   1355e:	beq.n	13568 <tree_backref_for_extent@@Base+0x90>
   13560:	ldr	r3, [sp, #12]
   13562:	ldrb	r3, [r3, #8]
   13564:	cmp	r3, #169	; 0xa9
   13566:	bne.n	1357c <tree_backref_for_extent@@Base+0xa4>
   13568:	add.w	r3, r5, #24
   1356c:	ldr	r2, [sp, #56]	; 0x38
   1356e:	str	r3, [r4, #0]
   13570:	adds	r2, r5, r2
   13572:	cmp	r3, r2
   13574:	bcc.n	13506 <tree_backref_for_extent@@Base+0x2e>
   13576:	mvn.w	r0, #1
   1357a:	b.n	13546 <tree_backref_for_extent@@Base+0x6e>
   1357c:	cmp	r3, #168	; 0xa8
   1357e:	beq.n	1358e <tree_backref_for_extent@@Base+0xb6>
   13580:	movs	r3, #1
   13582:	movw	r2, #1229	; 0x4cd
   13586:	mov	r1, sl
   13588:	mov	r0, fp
   1358a:	bl	12270 <repair_qgroups@@Base+0x5ac>
   1358e:	add.w	r3, r5, #42	; 0x2a
   13592:	b.n	1356c <tree_backref_for_extent@@Base+0x94>
   13594:	cmp	r7, #182	; 0xb6
   13596:	beq.n	13518 <tree_backref_for_extent@@Base+0x40>
   13598:	cmp	r7, #184	; 0xb8
   1359a:	beq.n	135a4 <tree_backref_for_extent@@Base+0xcc>
   1359c:	cmp	r7, #178	; 0xb2
   1359e:	beq.n	135a8 <tree_backref_for_extent@@Base+0xd0>
   135a0:	bl	121ec <repair_qgroups@@Base+0x528>
   135a4:	movs	r2, #13
   135a6:	b.n	1351a <tree_backref_for_extent@@Base+0x42>
   135a8:	movs	r2, #29
   135aa:	b.n	1351a <tree_backref_for_extent@@Base+0x42>
   135ac:	ldr.w	r1, [r8, #1]!
   135b0:	add	r5, r6
   135b2:	ldr	r0, [sp, #60]	; 0x3c
   135b4:	cmp	r9, r3
   135b6:	ldr.w	r2, [r8, #4]
   135ba:	str	r1, [r0, #0]
   135bc:	str	r2, [r0, #4]
   135be:	ldr	r2, [sp, #64]	; 0x40
   135c0:	ldrb.w	r1, [r5, #41]	; 0x29
   135c4:	strb	r1, [r2, #0]
   135c6:	bne.n	135ce <tree_backref_for_extent@@Base+0xf6>
   135c8:	mov.w	r3, #4294967295	; 0xffffffff
   135cc:	str	r3, [r4, #0]
   135ce:	movs	r0, #0
   135d0:	b.n	13546 <tree_backref_for_extent@@Base+0x6e>
   135d2:	nop
   135d4:	ldmia	r4!, {r0, r1, r5, r6, r7}
   135d6:	movs	r2, r0
   135d8:	ldmia	r4!, {r0, r1, r2, r3, r5, r7}
   135da:	movs	r2, r0
   135dc:	ldmia	r4!, {r0, r1, r3, r5, r7}
   135de:	movs	r2, r0
   135e0:	ldmia	r4, {r2, r3, r4, r7}
   135e2:	movs	r2, r0

000135e4 <iterate_extent_inodes@@Base>:
   135e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135e8:	movs	r5, #0
   135ea:	vpush	{d8}
   135ee:	vmov	s16, r0
   135f2:	mov	r0, r5
   135f4:	sub	sp, #60	; 0x3c
   135f6:	str	r3, [sp, #16]
   135f8:	ldr	r3, [sp, #116]	; 0x74
   135fa:	str	r2, [sp, #36]	; 0x24
   135fc:	ldr	r2, [pc, #240]	; (136f0 <iterate_extent_inodes@@Base+0x10c>)
   135fe:	str	r3, [sp, #28]
   13600:	ldr	r3, [sp, #120]	; 0x78
   13602:	add	r2, pc
   13604:	str	r3, [sp, #32]
   13606:	ldr	r3, [pc, #236]	; (136f4 <iterate_extent_inodes@@Base+0x110>)
   13608:	ldr	r3, [r2, r3]
   1360a:	ldr	r3, [r3, #0]
   1360c:	str	r3, [sp, #52]	; 0x34
   1360e:	mov.w	r3, #0
   13612:	str	r5, [sp, #40]	; 0x28
   13614:	bl	10414 <ulist_alloc@@Base>
   13618:	mov	r4, r0
   1361a:	cmp	r0, #0
   1361c:	beq.n	136de <iterate_extent_inodes@@Base+0xfa>
   1361e:	add	r3, sp, #104	; 0x68
   13620:	str	r0, [sp, #0]
   13622:	strd	r5, r3, [sp, #4]
   13626:	mov	r0, r5
   13628:	vmov	r1, s16
   1362c:	ldr	r2, [sp, #36]	; 0x24
   1362e:	ldr	r3, [sp, #16]
   13630:	bl	12372 <repair_qgroups@@Base+0x6ae>
   13634:	subs.w	r9, r0, #0
   13638:	bge.n	1365a <iterate_extent_inodes@@Base+0x76>
   1363a:	cmn.w	r9, #2
   1363e:	beq.n	1365a <iterate_extent_inodes@@Base+0x76>
   13640:	mov	r0, r4
   13642:	bl	11f78 <repair_qgroups@@Base+0x2b4>
   13646:	ldr	r2, [pc, #176]	; (136f8 <iterate_extent_inodes@@Base+0x114>)
   13648:	ldr	r3, [pc, #168]	; (136f4 <iterate_extent_inodes@@Base+0x110>)
   1364a:	add	r2, pc
   1364c:	ldr	r3, [r2, r3]
   1364e:	ldr	r2, [r3, #0]
   13650:	ldr	r3, [sp, #52]	; 0x34
   13652:	eors	r2, r3
   13654:	beq.n	136e4 <iterate_extent_inodes@@Base+0x100>
   13656:	blx	8c90 <__stack_chk_fail@plt>
   1365a:	add.w	r8, sp, #44	; 0x2c
   1365e:	add.w	sl, sp, #40	; 0x28
   13662:	movs	r3, #0
   13664:	str	r3, [sp, #44]	; 0x2c
   13666:	mov	r1, r8
   13668:	mov	r0, r4
   1366a:	bl	10614 <ulist_next@@Base>
   1366e:	mov	r5, r0
   13670:	cbnz	r0, 13676 <iterate_extent_inodes@@Base+0x92>
   13672:	mov	r9, r0
   13674:	b.n	13640 <iterate_extent_inodes@@Base+0x5c>
   13676:	str.w	sl, [sp]
   1367a:	movs	r0, #0
   1367c:	vmov	r1, s16
   13680:	ldrd	r2, r3, [r5]
   13684:	bl	12f7c <repair_qgroups@@Base+0x12b8>
   13688:	cbnz	r0, 136da <iterate_extent_inodes@@Base+0xf6>
   1368a:	add.w	fp, sp, #48	; 0x30
   1368e:	str	r0, [sp, #48]	; 0x30
   13690:	ldr	r0, [sp, #40]	; 0x28
   13692:	mov	r1, fp
   13694:	bl	10614 <ulist_next@@Base>
   13698:	cbnz	r0, 136aa <iterate_extent_inodes@@Base+0xc6>
   1369a:	mov	r9, r0
   1369c:	ldr	r0, [sp, #40]	; 0x28
   1369e:	bl	10428 <ulist_free@@Base>
   136a2:	cmp.w	r9, #0
   136a6:	beq.n	13666 <iterate_extent_inodes@@Base+0x82>
   136a8:	b.n	13640 <iterate_extent_inodes@@Base+0x5c>
   136aa:	ldrd	r2, r3, [r0]
   136ae:	ldr	r6, [r5, #8]
   136b0:	strd	r2, r3, [sp, #16]
   136b4:	cmp	r6, #0
   136b6:	beq.n	13690 <iterate_extent_inodes@@Base+0xac>
   136b8:	ldr	r3, [sp, #32]
   136ba:	ldr	r7, [sp, #28]
   136bc:	str	r3, [sp, #8]
   136be:	ldrd	r2, r3, [sp, #16]
   136c2:	strd	r2, r3, [sp]
   136c6:	ldrd	r2, r3, [r6, #8]
   136ca:	ldrd	r0, r1, [r6]
   136ce:	blx	r7
   136d0:	mov	r9, r0
   136d2:	cmp	r0, #0
   136d4:	bne.n	1369c <iterate_extent_inodes@@Base+0xb8>
   136d6:	ldr	r6, [r6, #16]
   136d8:	b.n	136b4 <iterate_extent_inodes@@Base+0xd0>
   136da:	mov	r9, r0
   136dc:	b.n	13640 <iterate_extent_inodes@@Base+0x5c>
   136de:	mvn.w	r9, #11
   136e2:	b.n	13646 <iterate_extent_inodes@@Base+0x62>
   136e4:	mov	r0, r9
   136e6:	add	sp, #60	; 0x3c
   136e8:	vpop	{d8}
   136ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136f0:	strb	r6, [r2, #28]
   136f2:	movs	r5, r0
   136f4:	lsls	r0, r1, #10
   136f6:	movs	r0, r0
   136f8:	strb	r6, [r1, #27]
   136fa:	movs	r5, r0

000136fc <iterate_inodes_from_logical@@Base>:
   136fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13700:	mov	r7, r2
   13702:	ldr	r2, [pc, #144]	; (13794 <iterate_inodes_from_logical@@Base+0x98>)
   13704:	mov	r8, r3
   13706:	ldr	r3, [pc, #144]	; (13798 <iterate_inodes_from_logical@@Base+0x9c>)
   13708:	sub	sp, #56	; 0x38
   1370a:	add	r2, pc
   1370c:	mov	r5, r0
   1370e:	mov	r6, r1
   13710:	ldrd	r9, sl, [sp, #88]	; 0x58
   13714:	ldr	r3, [r2, r3]
   13716:	movs	r2, #0
   13718:	ldr	r3, [r3, #0]
   1371a:	str	r3, [sp, #52]	; 0x34
   1371c:	mov.w	r3, #0
   13720:	movs	r3, #0
   13722:	strd	r2, r3, [sp, #24]
   13726:	mov	r2, r0
   13728:	add	r3, sp, #24
   1372a:	mov	r0, r7
   1372c:	str	r3, [sp, #8]
   1372e:	add	r3, sp, #32
   13730:	strd	r8, r3, [sp]
   13734:	mov	r3, r1
   13736:	bl	13334 <extent_from_logical@@Base>
   1373a:	mov	r4, r0
   1373c:	mov	r0, r8
   1373e:	bl	1c6f8 <btrfs_release_path@@Base>
   13742:	cmp	r4, #0
   13744:	blt.n	13770 <iterate_inodes_from_logical@@Base+0x74>
   13746:	ldr	r1, [sp, #24]
   13748:	movs	r0, #0
   1374a:	mov	r3, r0
   1374c:	and.w	r2, r1, #2
   13750:	orrs	r3, r2
   13752:	bne.n	13784 <iterate_inodes_from_logical@@Base+0x88>
   13754:	ldrd	r2, r3, [sp, #32]
   13758:	str	r0, [sp, #8]
   1375a:	mov	r0, r7
   1375c:	subs	r5, r5, r2
   1375e:	strd	r9, sl, [sp, #12]
   13762:	sbc.w	r6, r6, r3
   13766:	strd	r5, r6, [sp]
   1376a:	bl	135e4 <iterate_extent_inodes@@Base>
   1376e:	mov	r4, r0
   13770:	ldr	r2, [pc, #40]	; (1379c <iterate_inodes_from_logical@@Base+0xa0>)
   13772:	ldr	r3, [pc, #36]	; (13798 <iterate_inodes_from_logical@@Base+0x9c>)
   13774:	add	r2, pc
   13776:	ldr	r3, [r2, r3]
   13778:	ldr	r2, [r3, #0]
   1377a:	ldr	r3, [sp, #52]	; 0x34
   1377c:	eors	r2, r3
   1377e:	beq.n	1378a <iterate_inodes_from_logical@@Base+0x8e>
   13780:	blx	8c90 <__stack_chk_fail@plt>
   13784:	mvn.w	r4, #21
   13788:	b.n	13770 <iterate_inodes_from_logical@@Base+0x74>
   1378a:	mov	r0, r4
   1378c:	add	sp, #56	; 0x38
   1378e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13792:	nop
   13794:	strb	r6, [r1, #24]
   13796:	movs	r5, r0
   13798:	lsls	r0, r1, #10
   1379a:	movs	r0, r0
   1379c:	strb	r4, [r4, #22]
   1379e:	movs	r5, r0

000137a0 <paths_from_inode@@Base>:
   137a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a4:	mov.w	r8, #0
   137a8:	vpush	{d8-d9}
   137ac:	mov.w	r9, #0
   137b0:	ldr	r3, [pc, #552]	; (139dc <paths_from_inode@@Base+0x23c>)
   137b2:	vmov	s17, r0
   137b6:	sub	sp, #84	; 0x54
   137b8:	vmov	s18, r1
   137bc:	str	r2, [sp, #24]
   137be:	ldr	r2, [pc, #544]	; (139e0 <paths_from_inode@@Base+0x240>)
   137c0:	add	r2, pc
   137c2:	ldr	r3, [r2, r3]
   137c4:	ldr	r3, [r3, #0]
   137c6:	str	r3, [sp, #76]	; 0x4c
   137c8:	mov.w	r3, #0
   137cc:	ldr	r3, [sp, #24]
   137ce:	ldr	r3, [r3, #4]
   137d0:	vmov	s16, r3
   137d4:	ldr	r3, [sp, #24]
   137d6:	ldr	r4, [r3, #0]
   137d8:	movs	r3, #0
   137da:	str	r3, [sp, #28]
   137dc:	add	r3, sp, #56	; 0x38
   137de:	str	r3, [sp, #40]	; 0x28
   137e0:	ldr	r3, [sp, #40]	; 0x28
   137e2:	mov	r1, r4
   137e4:	vmov	r2, s17
   137e8:	vmov	r0, s16
   137ec:	str	r3, [sp, #12]
   137ee:	movs	r3, #12
   137f0:	strd	r8, r9, [sp]
   137f4:	str	r3, [sp, #8]
   137f6:	vmov	r3, s18
   137fa:	bl	20010 <btrfs_find_item@@Base>
   137fe:	subs	r6, r0, #0
   13800:	blt.w	13938 <paths_from_inode@@Base+0x198>
   13804:	ldr	r3, [sp, #28]
   13806:	beq.n	138a4 <paths_from_inode@@Base+0x104>
   13808:	cmp	r3, #0
   1380a:	ite	ne
   1380c:	movne.w	fp, #0
   13810:	mvneq.w	fp, #1
   13814:	mov	r0, r4
   13816:	bl	1c6f8 <btrfs_release_path@@Base>
   1381a:	cmp.w	fp, #0
   1381e:	beq.w	13942 <paths_from_inode@@Base+0x1a2>
   13822:	cmn.w	fp, #2
   13826:	bne.n	1388e <paths_from_inode@@Base+0xee>
   13828:	mov.w	r9, #0
   1382c:	mov.w	r8, #0
   13830:	movs	r3, #0
   13832:	movs	r2, #0
   13834:	strd	r2, r3, [sp, #56]	; 0x38
   13838:	add	r3, sp, #56	; 0x38
   1383a:	str	r3, [sp, #32]
   1383c:	add	r3, sp, #52	; 0x34
   1383e:	str	r3, [sp, #36]	; 0x24
   13840:	ldr	r3, [sp, #32]
   13842:	vmov	r0, s16
   13846:	str	r3, [sp, #16]
   13848:	ldr	r3, [sp, #36]	; 0x24
   1384a:	strd	r4, r3, [sp, #8]
   1384e:	ldrd	r2, r3, [sp, #56]	; 0x38
   13852:	strd	r2, r3, [sp]
   13856:	vmov	r2, s17
   1385a:	vmov	r3, s18
   1385e:	bl	13094 <btrfs_find_one_extref@@Base>
   13862:	subs.w	fp, r0, #0
   13866:	blt.n	13878 <paths_from_inode@@Base+0xd8>
   13868:	beq.n	13948 <paths_from_inode@@Base+0x1a8>
   1386a:	cmp.w	r8, #0
   1386e:	ite	ne
   13870:	movne.w	fp, #0
   13874:	mvneq.w	fp, #1
   13878:	mov	r0, r4
   1387a:	bl	1c6f8 <btrfs_release_path@@Base>
   1387e:	cmn.w	fp, #2
   13882:	bne.n	1388e <paths_from_inode@@Base+0xee>
   13884:	cmp.w	r9, #0
   13888:	it	ne
   1388a:	movne.w	fp, #0
   1388e:	ldr	r2, [pc, #340]	; (139e4 <paths_from_inode@@Base+0x244>)
   13890:	ldr	r3, [pc, #328]	; (139dc <paths_from_inode@@Base+0x23c>)
   13892:	add	r2, pc
   13894:	ldr	r3, [r2, r3]
   13896:	ldr	r2, [r3, #0]
   13898:	ldr	r3, [sp, #76]	; 0x4c
   1389a:	eors	r2, r3
   1389c:	beq.w	139ce <paths_from_inode@@Base+0x22e>
   138a0:	blx	8c90 <__stack_chk_fail@plt>
   138a4:	ldr	r0, [r4, #0]
   138a6:	adds	r3, #1
   138a8:	ldr.w	r8, [sp, #65]	; 0x41
   138ac:	ldr.w	r9, [sp, #69]	; 0x45
   138b0:	ldr	r7, [r4, #32]
   138b2:	str	r3, [sp, #28]
   138b4:	bl	1bbf8 <btrfs_clone_extent_buffer@@Base>
   138b8:	mov	r5, r0
   138ba:	cmp	r0, #0
   138bc:	beq.n	1393c <paths_from_inode@@Base+0x19c>
   138be:	ldr	r3, [r0, #80]	; 0x50
   138c0:	mov	sl, r6
   138c2:	adds	r3, #1
   138c4:	str	r3, [r0, #80]	; 0x50
   138c6:	mov	r0, r4
   138c8:	bl	1c6f8 <btrfs_release_path@@Base>
   138cc:	add.w	r3, r5, #96	; 0x60
   138d0:	movs	r2, #25
   138d2:	str	r3, [sp, #32]
   138d4:	mla	r7, r2, r7, r3
   138d8:	add.w	r3, r7, #101	; 0x65
   138dc:	str	r3, [sp, #36]	; 0x24
   138de:	ldr.w	r7, [r7, #118]	; 0x76
   138e2:	adds	r7, #101	; 0x65
   138e4:	ldr	r3, [sp, #36]	; 0x24
   138e6:	ldr.w	r3, [r3, #21]
   138ea:	cmp	sl, r3
   138ec:	bcc.n	1390e <paths_from_inode@@Base+0x16e>
   138ee:	mov	fp, r6
   138f0:	mov	r0, r5
   138f2:	bl	1b4c0 <free_extent_buffer@@Base>
   138f6:	cmp.w	fp, #0
   138fa:	bne.n	13814 <paths_from_inode@@Base+0x74>
   138fc:	orrs.w	r3, r8, r9
   13900:	beq.w	137e0 <paths_from_inode@@Base+0x40>
   13904:	adds.w	r8, r8, #1
   13908:	adc.w	r9, r9, #0
   1390c:	b.n	137e0 <paths_from_inode@@Base+0x40>
   1390e:	ldr	r3, [sp, #32]
   13910:	mov	r0, r8
   13912:	mov	r1, r9
   13914:	add	r3, r7
   13916:	ldrh	r2, [r3, #8]
   13918:	ldr	r3, [sp, #24]
   1391a:	str	r2, [sp, #44]	; 0x2c
   1391c:	strd	r5, r3, [sp]
   13920:	add.w	r3, r7, #10
   13924:	bl	132b8 <btrfs_ref_to_path@@Base+0x144>
   13928:	mov	fp, r0
   1392a:	cmp	r0, #0
   1392c:	bne.n	138f0 <paths_from_inode@@Base+0x150>
   1392e:	ldr	r2, [sp, #44]	; 0x2c
   13930:	adds	r2, #10
   13932:	add	r7, r2
   13934:	add	sl, r2
   13936:	b.n	138e4 <paths_from_inode@@Base+0x144>
   13938:	mov	fp, r6
   1393a:	b.n	13814 <paths_from_inode@@Base+0x74>
   1393c:	mvn.w	fp, #11
   13940:	b.n	13814 <paths_from_inode@@Base+0x74>
   13942:	mov.w	r9, #1
   13946:	b.n	1382c <paths_from_inode@@Base+0x8c>
   13948:	ldr	r0, [r4, #0]
   1394a:	add.w	r8, r8, #1
   1394e:	ldr	r5, [r4, #32]
   13950:	bl	1bbf8 <btrfs_clone_extent_buffer@@Base>
   13954:	mov	r6, r0
   13956:	cmp	r0, #0
   13958:	beq.n	139c8 <paths_from_inode@@Base+0x228>
   1395a:	ldr	r2, [r0, #80]	; 0x50
   1395c:	adds	r2, #1
   1395e:	str	r2, [r0, #80]	; 0x50
   13960:	mov	r0, r4
   13962:	bl	1c6f8 <btrfs_release_path@@Base>
   13966:	ldr	r7, [r4, #0]
   13968:	movs	r3, #25
   1396a:	adds	r7, #96	; 0x60
   1396c:	mla	sl, r3, r5, r7
   13970:	ldr.w	r3, [sl, #118]	; 0x76
   13974:	ldr.w	r5, [sl, #122]	; 0x7a
   13978:	add.w	sl, r6, #96	; 0x60
   1397c:	adds	r3, #101	; 0x65
   1397e:	str	r3, [sp, #28]
   13980:	cmp	r5, fp
   13982:	bls.n	139a6 <paths_from_inode@@Base+0x206>
   13984:	ldr	r3, [sp, #28]
   13986:	ldr	r2, [sp, #24]
   13988:	add	r3, fp
   1398a:	str	r3, [sp, #52]	; 0x34
   1398c:	add.w	r1, sl, r3
   13990:	adds	r3, #18
   13992:	ldrh.w	ip, [r1, #16]
   13996:	ldr	r0, [r1, #0]
   13998:	ldr	r1, [r1, #4]
   1399a:	strd	r6, r2, [sp]
   1399e:	mov	r2, ip
   139a0:	bl	132b8 <btrfs_ref_to_path@@Base+0x144>
   139a4:	cbz	r0, 139bc <paths_from_inode@@Base+0x21c>
   139a6:	mov	r0, r6
   139a8:	bl	1b4c0 <free_extent_buffer@@Base>
   139ac:	ldr	r3, [sp, #56]	; 0x38
   139ae:	ldr	r2, [sp, #60]	; 0x3c
   139b0:	adds	r3, #1
   139b2:	adc.w	r2, r2, #0
   139b6:	strd	r3, r2, [sp, #56]	; 0x38
   139ba:	b.n	13840 <paths_from_inode@@Base+0xa0>
   139bc:	ldr	r3, [sp, #52]	; 0x34
   139be:	add	r3, r7
   139c0:	ldrh	r3, [r3, #16]
   139c2:	adds	r3, #18
   139c4:	add	fp, r3
   139c6:	b.n	13980 <paths_from_inode@@Base+0x1e0>
   139c8:	mvn.w	fp, #11
   139cc:	b.n	13878 <paths_from_inode@@Base+0xd8>
   139ce:	mov	r0, fp
   139d0:	add	sp, #84	; 0x54
   139d2:	vpop	{d8-d9}
   139d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139da:	nop
   139dc:	lsls	r0, r1, #10
   139de:	movs	r0, r0
   139e0:	strb	r0, [r3, #21]
   139e2:	movs	r5, r0
   139e4:	strb	r6, [r0, #18]
   139e6:	movs	r5, r0

000139e8 <init_data_container@@Base>:
   139e8:	cmp	r0, #16
   139ea:	push	{r4, lr}
   139ec:	mov	r4, r0
   139ee:	it	cc
   139f0:	movcc	r0, #16
   139f2:	blx	8e40 <malloc@plt+0x4>
   139f6:	cbz	r0, 13a16 <init_data_container@@Base+0x2e>
   139f8:	cmp	r4, #15
   139fa:	mov.w	r3, #0
   139fe:	itete	hi
   13a00:	subhi	r4, #16
   13a02:	rsbls	r4, r4, #16
   13a06:	strdhi	r4, r3, [r0]
   13a0a:	strdls	r3, r4, [r0]
   13a0e:	movs	r3, #0
   13a10:	strd	r3, r3, [r0, #8]
   13a14:	pop	{r4, pc}
   13a16:	mvn.w	r0, #11
   13a1a:	b.n	13a14 <init_data_container@@Base+0x2c>

00013a1c <init_ipath@@Base>:
   13a1c:	push	{r4, r5, r6, lr}
   13a1e:	mov	r5, r1
   13a20:	mov	r6, r2
   13a22:	bl	139e8 <init_data_container@@Base>
   13a26:	cmn.w	r0, #4096	; 0x1000
   13a2a:	mov	r4, r0
   13a2c:	bhi.n	13a40 <init_ipath@@Base+0x24>
   13a2e:	movs	r0, #12
   13a30:	blx	8e40 <malloc@plt+0x4>
   13a34:	cbnz	r0, 13a44 <init_ipath@@Base+0x28>
   13a36:	mov	r0, r4
   13a38:	mvn.w	r4, #11
   13a3c:	blx	8b84 <free@plt+0x4>
   13a40:	mov	r0, r4
   13a42:	pop	{r4, r5, r6, pc}
   13a44:	strd	r5, r4, [r0, #4]
   13a48:	mov	r4, r0
   13a4a:	str	r6, [r0, #0]
   13a4c:	b.n	13a40 <init_ipath@@Base+0x24>

00013a4e <free_ipath@@Base>:
   13a4e:	push	{r4, lr}
   13a50:	mov	r4, r0
   13a52:	cbz	r0, 13a64 <free_ipath@@Base+0x16>
   13a54:	ldr	r0, [r0, #8]
   13a56:	blx	8b84 <free@plt+0x4>
   13a5a:	mov	r0, r4
   13a5c:	ldmia.w	sp!, {r4, lr}
   13a60:	b.w	8b80 <free@plt>
   13a64:	pop	{r4, pc}
   13a66:	nop

00013a68 <table_create@@Base>:
   13a68:	push	{r3, r4, r5, lr}
   13a6a:	mov	r4, r1
   13a6c:	muls	r1, r0
   13a6e:	mov	r5, r0
   13a70:	movs	r0, #1
   13a72:	adds	r1, #2
   13a74:	lsls	r1, r1, #2
   13a76:	blx	8ab8 <calloc@plt+0x4>
   13a7a:	cbz	r0, 13a80 <table_create@@Base+0x18>
   13a7c:	strd	r5, r4, [r0]
   13a80:	pop	{r3, r4, r5, pc}

00013a82 <table_vprintf@@Base>:
   13a82:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13a84:	mov	r4, r0
   13a86:	ldr	r7, [r0, #0]
   13a88:	movs	r0, #100	; 0x64
   13a8a:	mov	r6, r3
   13a8c:	mla	r7, r7, r2, r1
   13a90:	movs	r1, #1
   13a92:	blx	8ab8 <calloc@plt+0x4>
   13a96:	mov	r5, r0
   13a98:	cbz	r0, 13aba <table_vprintf@@Base+0x38>
   13a9a:	add.w	r4, r4, r7, lsl #2
   13a9e:	ldr	r0, [r4, #8]
   13aa0:	cbz	r0, 13aa6 <table_vprintf@@Base+0x24>
   13aa2:	blx	8b84 <free@plt+0x4>
   13aa6:	ldr	r3, [sp, #32]
   13aa8:	movs	r2, #1
   13aaa:	str	r5, [r4, #8]
   13aac:	movs	r1, #99	; 0x63
   13aae:	mov	r0, r5
   13ab0:	strd	r6, r3, [sp]
   13ab4:	movs	r3, #100	; 0x64
   13ab6:	blx	8bcc <__vsnprintf_chk@plt>
   13aba:	mov	r0, r5
   13abc:	add	sp, #12
   13abe:	pop	{r4, r5, r6, r7, pc}

00013ac0 <table_printf@@Base>:
   13ac0:	push	{r3}
   13ac2:	push	{r4, lr}
   13ac4:	sub	sp, #20
   13ac6:	ldr.w	lr, [pc, #68]	; 13b0c <table_printf@@Base+0x4c>
   13aca:	add	r4, sp, #28
   13acc:	ldr.w	ip, [pc, #64]	; 13b10 <table_printf@@Base+0x50>
   13ad0:	add	lr, pc
   13ad2:	ldr.w	r3, [r4], #4
   13ad6:	ldr.w	ip, [lr, ip]
   13ada:	ldr.w	ip, [ip]
   13ade:	str.w	ip, [sp, #12]
   13ae2:	mov.w	ip, #0
   13ae6:	str	r4, [sp, #0]
   13ae8:	str	r4, [sp, #8]
   13aea:	bl	13a82 <table_vprintf@@Base>
   13aee:	ldr	r2, [pc, #36]	; (13b14 <table_printf@@Base+0x54>)
   13af0:	ldr	r3, [pc, #28]	; (13b10 <table_printf@@Base+0x50>)
   13af2:	add	r2, pc
   13af4:	ldr	r3, [r2, r3]
   13af6:	ldr	r2, [r3, #0]
   13af8:	ldr	r3, [sp, #12]
   13afa:	eors	r2, r3
   13afc:	beq.n	13b02 <table_printf@@Base+0x42>
   13afe:	blx	8c90 <__stack_chk_fail@plt>
   13b02:	add	sp, #20
   13b04:	ldmia.w	sp!, {r4, lr}
   13b08:	add	sp, #4
   13b0a:	bx	lr
   13b0c:	strb	r0, [r1, #9]
   13b0e:	movs	r5, r0
   13b10:	lsls	r0, r1, #10
   13b12:	movs	r0, r0
   13b14:	strb	r6, [r4, #8]
   13b16:	movs	r5, r0

00013b18 <table_dump@@Base>:
   13b18:	ldr	r2, [pc, #296]	; (13c44 <table_dump@@Base+0x12c>)
   13b1a:	ldr	r3, [pc, #300]	; (13c48 <table_dump@@Base+0x130>)
   13b1c:	add	r2, pc
   13b1e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b22:	sub	sp, #28
   13b24:	ldr	r3, [r2, r3]
   13b26:	add	r7, sp, #0
   13b28:	movs	r5, #0
   13b2a:	mov	r4, r0
   13b2c:	ldr	r3, [r3, #0]
   13b2e:	str	r3, [r7, #20]
   13b30:	mov.w	r3, #0
   13b34:	ldr	r3, [r0, #0]
   13b36:	mov	lr, r5
   13b38:	lsls	r2, r3, #2
   13b3a:	adds	r1, r2, #7
   13b3c:	bic.w	r1, r1, #7
   13b40:	sub.w	sp, sp, r1
   13b44:	ldr	r1, [r0, #4]
   13b46:	mov	fp, sp
   13b48:	sub.w	r6, fp, #4
   13b4c:	str	r1, [r7, #12]
   13b4e:	cmp	r5, r3
   13b50:	blt.n	13b7a <table_dump@@Base+0x62>
   13b52:	ldr.w	r8, [pc, #248]	; 13c4c <table_dump@@Base+0x134>
   13b56:	movs	r6, #0
   13b58:	ldr.w	r9, [pc, #244]	; 13c50 <table_dump@@Base+0x138>
   13b5c:	add	r8, pc
   13b5e:	add	r9, pc
   13b60:	ldr	r3, [r4, #4]
   13b62:	cmp	r6, r3
   13b64:	blt.n	13c32 <table_dump@@Base+0x11a>
   13b66:	ldr	r2, [pc, #236]	; (13c54 <table_dump@@Base+0x13c>)
   13b68:	ldr	r3, [pc, #220]	; (13c48 <table_dump@@Base+0x130>)
   13b6a:	add	r2, pc
   13b6c:	ldr	r3, [r2, r3]
   13b6e:	ldr	r2, [r3, #0]
   13b70:	ldr	r3, [r7, #20]
   13b72:	eors	r2, r3
   13b74:	beq.n	13c3c <table_dump@@Base+0x124>
   13b76:	blx	8c90 <__stack_chk_fail@plt>
   13b7a:	add.w	r9, r4, r5, lsl #2
   13b7e:	mov.w	r8, #0
   13b82:	str.w	lr, [r6, #4]!
   13b86:	ldr	r1, [r7, #12]
   13b88:	cmp	r8, r1
   13b8a:	blt.n	13b90 <table_dump@@Base+0x78>
   13b8c:	adds	r5, #1
   13b8e:	b.n	13b4e <table_dump@@Base+0x36>
   13b90:	ldr.w	sl, [r9, #8]
   13b94:	cmp.w	sl, #0
   13b98:	beq.n	13bc2 <table_dump@@Base+0xaa>
   13b9a:	mov	r0, sl
   13b9c:	strd	r2, r3, [r7, #4]
   13ba0:	blx	8f1c <strlen@plt>
   13ba4:	ldrd	r2, r3, [r7, #4]
   13ba8:	mov.w	lr, #0
   13bac:	subs	r0, #1
   13bae:	beq.n	13bc2 <table_dump@@Base+0xaa>
   13bb0:	ldrb.w	ip, [sl]
   13bb4:	cmp.w	ip, #42	; 0x2a
   13bb8:	beq.n	13bc2 <table_dump@@Base+0xaa>
   13bba:	ldr	r1, [r6, #0]
   13bbc:	cmp	r1, r0
   13bbe:	it	lt
   13bc0:	strlt	r0, [r6, #0]
   13bc2:	add.w	r8, r8, #1
   13bc6:	add	r9, r2
   13bc8:	b.n	13b86 <table_dump@@Base+0x6e>
   13bca:	mla	r3, r3, r6, r5
   13bce:	ldr.w	r2, [fp, r5, lsl #2]
   13bd2:	adds	r3, #2
   13bd4:	ldr.w	r3, [r4, r3, lsl #2]
   13bd8:	cbz	r3, 13bde <table_dump@@Base+0xc6>
   13bda:	ldrb	r1, [r3, #0]
   13bdc:	cbnz	r1, 13bea <table_dump@@Base+0xd2>
   13bde:	mov	r3, r8
   13be0:	mov	r1, r9
   13be2:	movs	r0, #1
   13be4:	blx	900c <__printf_chk@plt+0x4>
   13be8:	b.n	13bf6 <table_dump@@Base+0xde>
   13bea:	cmp	r1, #42	; 0x2a
   13bec:	bne.n	13c26 <table_dump@@Base+0x10e>
   13bee:	ldrb	r1, [r3, #1]
   13bf0:	cbz	r1, 13c2c <table_dump@@Base+0x114>
   13bf2:	subs	r2, #1
   13bf4:	bcs.n	13c16 <table_dump@@Base+0xfe>
   13bf6:	ldr	r3, [r4, #0]
   13bf8:	subs	r3, #1
   13bfa:	cmp	r5, r3
   13bfc:	beq.n	13c04 <table_dump@@Base+0xec>
   13bfe:	movs	r0, #32
   13c00:	blx	8fa8 <putchar@plt+0x4>
   13c04:	adds	r5, #1
   13c06:	ldr	r3, [r4, #0]
   13c08:	cmp	r5, r3
   13c0a:	blt.n	13bca <table_dump@@Base+0xb2>
   13c0c:	movs	r0, #10
   13c0e:	adds	r6, #1
   13c10:	blx	8fa8 <putchar@plt+0x4>
   13c14:	b.n	13b60 <table_dump@@Base+0x48>
   13c16:	ldrb	r0, [r3, #1]
   13c18:	str	r2, [r7, #8]
   13c1a:	str	r3, [r7, #12]
   13c1c:	blx	8fa8 <putchar@plt+0x4>
   13c20:	ldrd	r2, r3, [r7, #8]
   13c24:	b.n	13bf2 <table_dump@@Base+0xda>
   13c26:	cmp	r1, #60	; 0x3c
   13c28:	it	eq
   13c2a:	negeq	r2, r2
   13c2c:	adds	r3, #1
   13c2e:	mov	r1, sl
   13c30:	b.n	13be2 <table_dump@@Base+0xca>
   13c32:	ldr.w	sl, [pc, #36]	; 13c58 <table_dump@@Base+0x140>
   13c36:	movs	r5, #0
   13c38:	add	sl, pc
   13c3a:	b.n	13c06 <table_dump@@Base+0xee>
   13c3c:	adds	r7, #28
   13c3e:	mov	sp, r7
   13c40:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c44:	strb	r4, [r7, #7]
   13c46:	movs	r5, r0
   13c48:	lsls	r0, r1, #10
   13c4a:	movs	r0, r0
   13c4c:	stmia	r1!, {r0, r1, r2, r3}
   13c4e:	movs	r2, r0
   13c50:	hlt	0x0029
   13c52:	movs	r2, r0
   13c54:	strb	r6, [r5, #6]
   13c56:	movs	r5, r0
   13c58:	cbnz	r7, 13c8e <task_init@@Base+0x6>
   13c5a:	movs	r2, r0

00013c5c <table_free@@Base>:
   13c5c:	push	{r3, r4, r5, r6, r7, lr}
   13c5e:	add.w	r7, r0, #8
   13c62:	ldrd	r5, r3, [r0]
   13c66:	mov	r4, r0
   13c68:	movs	r6, #0
   13c6a:	muls	r5, r3
   13c6c:	cmp	r6, r5
   13c6e:	blt.n	13c7a <table_free@@Base+0x1e>
   13c70:	mov	r0, r4
   13c72:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   13c76:	b.w	8b80 <free@plt>
   13c7a:	ldr.w	r0, [r7], #4
   13c7e:	cbz	r0, 13c84 <table_free@@Base+0x28>
   13c80:	blx	8b84 <free@plt+0x4>
   13c84:	adds	r6, #1
   13c86:	b.n	13c6c <table_free@@Base+0x10>

00013c88 <task_init@@Base>:
   13c88:	push	{r4, r5, r6, lr}
   13c8a:	mov	r5, r0
   13c8c:	mov	r4, r1
   13c8e:	movs	r0, #1
   13c90:	movs	r1, #32
   13c92:	mov	r6, r2
   13c94:	blx	8ab8 <calloc@plt+0x4>
   13c98:	cbz	r0, 13ca0 <task_init@@Base+0x18>
   13c9a:	strd	r6, r5, [r0, #20]
   13c9e:	str	r4, [r0, #28]
   13ca0:	pop	{r4, r5, r6, pc}

00013ca2 <task_start@@Base>:
   13ca2:	push	{r4, r5, r6, lr}
   13ca4:	mov	r6, r1
   13ca6:	mov	r5, r2
   13ca8:	mov	r4, r0
   13caa:	cbz	r0, 13cda <task_start@@Base+0x38>
   13cac:	ldr	r3, [r0, #24]
   13cae:	cbz	r3, 13cda <task_start@@Base+0x38>
   13cb0:	cbz	r1, 13cba <task_start@@Base+0x18>
   13cb2:	movs	r0, #0
   13cb4:	blx	8c0c <time@plt>
   13cb8:	str	r0, [r6, #0]
   13cba:	cbz	r5, 13cc4 <task_start@@Base+0x22>
   13cbc:	movs	r2, #0
   13cbe:	movs	r3, #0
   13cc0:	strd	r2, r3, [r5]
   13cc4:	ldrd	r3, r2, [r4, #20]
   13cc8:	add.w	r0, r4, #16
   13ccc:	movs	r1, #0
   13cce:	blx	8dd8 <pthread_create@plt>
   13cd2:	cbz	r0, 13cd8 <task_start@@Base+0x36>
   13cd4:	movs	r3, #0
   13cd6:	str	r3, [r4, #16]
   13cd8:	pop	{r4, r5, r6, pc}
   13cda:	mov.w	r0, #4294967295	; 0xffffffff
   13cde:	b.n	13cd8 <task_start@@Base+0x36>

00013ce0 <task_stop@@Base>:
   13ce0:	push	{r4, lr}
   13ce2:	mov	r4, r0
   13ce4:	cbz	r0, 13d12 <task_stop@@Base+0x32>
   13ce6:	ldr	r0, [r0, #16]
   13ce8:	cbz	r0, 13cfa <task_stop@@Base+0x1a>
   13cea:	blx	8fc0 <pthread_cancel@plt>
   13cee:	ldr	r0, [r4, #16]
   13cf0:	movs	r1, #0
   13cf2:	blx	90a0 <pthread_join@plt>
   13cf6:	movs	r3, #0
   13cf8:	str	r3, [r4, #16]
   13cfa:	ldr	r0, [r4, #0]
   13cfc:	cbz	r0, 13d06 <task_stop@@Base+0x26>
   13cfe:	blx	91e4 <close@plt>
   13d02:	movs	r3, #0
   13d04:	str	r3, [r4, #0]
   13d06:	ldr	r3, [r4, #28]
   13d08:	cbz	r3, 13d12 <task_stop@@Base+0x32>
   13d0a:	ldr	r0, [r4, #20]
   13d0c:	ldmia.w	sp!, {r4, lr}
   13d10:	bx	r3
   13d12:	pop	{r4, pc}

00013d14 <task_deinit@@Base>:
   13d14:	cbz	r0, 13d1a <task_deinit@@Base+0x6>
   13d16:	b.w	8b80 <free@plt>
   13d1a:	bx	lr

00013d1c <task_period_start@@Base>:
   13d1c:	ldr	r2, [pc, #128]	; (13da0 <task_period_start@@Base+0x84>)
   13d1e:	ldr	r3, [pc, #132]	; (13da4 <task_period_start@@Base+0x88>)
   13d20:	add	r2, pc
   13d22:	push	{r4, r5, lr}
   13d24:	sub	sp, #28
   13d26:	ldr	r3, [r2, r3]
   13d28:	mov	r5, r1
   13d2a:	mov	r4, r0
   13d2c:	ldr	r3, [r3, #0]
   13d2e:	str	r3, [sp, #20]
   13d30:	mov.w	r3, #0
   13d34:	cbz	r0, 13d8e <task_period_start@@Base+0x72>
   13d36:	movs	r1, #0
   13d38:	movs	r0, #1
   13d3a:	blx	8ee0 <timerfd_create@plt>
   13d3e:	mov	r3, r0
   13d40:	adds	r3, #1
   13d42:	str	r0, [r4, #0]
   13d44:	bne.n	13d5e <task_period_start@@Base+0x42>
   13d46:	movs	r0, #0
   13d48:	str	r0, [r4, #0]
   13d4a:	ldr	r2, [pc, #92]	; (13da8 <task_period_start@@Base+0x8c>)
   13d4c:	ldr	r3, [pc, #84]	; (13da4 <task_period_start@@Base+0x88>)
   13d4e:	add	r2, pc
   13d50:	ldr	r3, [r2, r3]
   13d52:	ldr	r2, [r3, #0]
   13d54:	ldr	r3, [sp, #20]
   13d56:	eors	r2, r3
   13d58:	beq.n	13d94 <task_period_start@@Base+0x78>
   13d5a:	blx	8c90 <__stack_chk_fail@plt>
   13d5e:	movs	r2, #0
   13d60:	movs	r3, #0
   13d62:	strd	r2, r3, [r4, #8]
   13d66:	mov.w	r1, #1000	; 0x3e8
   13d6a:	ldr	r2, [pc, #44]	; (13d98 <task_period_start@@Base+0x7c>)
   13d6c:	umull	r2, r3, r5, r2
   13d70:	lsrs	r2, r3, #6
   13d72:	ldr	r3, [pc, #40]	; (13d9c <task_period_start@@Base+0x80>)
   13d74:	str	r2, [sp, #4]
   13d76:	mls	r1, r1, r2, r5
   13d7a:	muls	r1, r3
   13d7c:	movs	r3, #0
   13d7e:	strd	r1, r2, [sp, #8]
   13d82:	add	r2, sp, #4
   13d84:	str	r1, [sp, #16]
   13d86:	mov	r1, r3
   13d88:	blx	90d4 <timerfd_settime@plt>
   13d8c:	b.n	13d4a <task_period_start@@Base+0x2e>
   13d8e:	mov.w	r0, #4294967295	; 0xffffffff
   13d92:	b.n	13d4a <task_period_start@@Base+0x2e>
   13d94:	add	sp, #28
   13d96:	pop	{r4, r5, pc}
   13d98:	ldr	r5, [pc, #844]	; (140e8 <btrfs_add_link@@Base+0x118>)
   13d9a:	asrs	r2, r4, #1
   13d9c:	negs	r0, r0
   13d9e:	movs	r7, r1
   13da0:	ldr	r0, [r7, #124]	; 0x7c
   13da2:	movs	r5, r0
   13da4:	lsls	r0, r1, #10
   13da6:	movs	r0, r0
   13da8:	ldr	r2, [r1, #124]	; 0x7c
   13daa:	movs	r5, r0

00013dac <task_period_wait@@Base>:
   13dac:	push	{r0, r1, r2, r3, r4, lr}
   13dae:	mov	r4, r0
   13db0:	ldr	r2, [pc, #88]	; (13e0c <task_period_wait@@Base+0x60>)
   13db2:	ldr	r3, [pc, #92]	; (13e10 <task_period_wait@@Base+0x64>)
   13db4:	add	r2, pc
   13db6:	ldr	r3, [r2, r3]
   13db8:	ldr	r3, [r3, #0]
   13dba:	str	r3, [sp, #12]
   13dbc:	mov.w	r3, #0
   13dc0:	cbz	r0, 13df2 <task_period_wait@@Base+0x46>
   13dc2:	ldr	r0, [r0, #0]
   13dc4:	cbz	r0, 13df2 <task_period_wait@@Base+0x46>
   13dc6:	movs	r2, #8
   13dc8:	mov	r1, sp
   13dca:	blx	8b40 <read@plt>
   13dce:	adds	r0, #1
   13dd0:	beq.n	13df2 <task_period_wait@@Base+0x46>
   13dd2:	ldrd	r2, r3, [sp]
   13dd6:	orrs.w	r1, r2, r3
   13dda:	beq.n	13df2 <task_period_wait@@Base+0x46>
   13ddc:	adds.w	r1, r2, #4294967295	; 0xffffffff
   13de0:	adc.w	r0, r3, #4294967295	; 0xffffffff
   13de4:	ldrd	r3, r2, [r4, #8]
   13de8:	adds	r3, r3, r1
   13dea:	adc.w	r2, r0, r2
   13dee:	strd	r3, r2, [r4, #8]
   13df2:	ldr	r2, [pc, #32]	; (13e14 <task_period_wait@@Base+0x68>)
   13df4:	ldr	r3, [pc, #24]	; (13e10 <task_period_wait@@Base+0x64>)
   13df6:	add	r2, pc
   13df8:	ldr	r3, [r2, r3]
   13dfa:	ldr	r2, [r3, #0]
   13dfc:	ldr	r3, [sp, #12]
   13dfe:	eors	r2, r3
   13e00:	beq.n	13e06 <task_period_wait@@Base+0x5a>
   13e02:	blx	8c90 <__stack_chk_fail@plt>
   13e06:	add	sp, #16
   13e08:	pop	{r4, pc}
   13e0a:	nop
   13e0c:	ldr	r4, [r4, #116]	; 0x74
   13e0e:	movs	r5, r0
   13e10:	lsls	r0, r1, #10
   13e12:	movs	r0, r0
   13e14:	ldr	r2, [r4, #112]	; 0x70
   13e16:	movs	r5, r0

00013e18 <task_period_stop@@Base>:
   13e18:	push	{r4, lr}
   13e1a:	mov	r4, r0
   13e1c:	cbz	r0, 13e38 <task_period_stop@@Base+0x20>
   13e1e:	ldr	r0, [r0, #0]
   13e20:	cbz	r0, 13e38 <task_period_stop@@Base+0x20>
   13e22:	movs	r3, #0
   13e24:	mov	r2, r3
   13e26:	mov	r1, r3
   13e28:	blx	90d4 <timerfd_settime@plt>
   13e2c:	ldr	r0, [r4, #0]
   13e2e:	blx	91e4 <close@plt>
   13e32:	mov.w	r3, #4294967295	; 0xffffffff
   13e36:	str	r3, [r4, #0]
   13e38:	pop	{r4, pc}
   13e3a:	nop
   13e3c:	push	{r4, lr}
   13e3e:	mov	r4, r1
   13e40:	ldr	r1, [pc, #84]	; (13e98 <task_period_stop@@Base+0x80>)
   13e42:	sub	sp, #24
   13e44:	ldr	r3, [pc, #84]	; (13e9c <task_period_stop@@Base+0x84>)
   13e46:	add	r1, pc
   13e48:	ldr	r3, [r1, r3]
   13e4a:	mov	r1, sp
   13e4c:	ldr	r3, [r3, #0]
   13e4e:	str	r3, [sp, #20]
   13e50:	mov.w	r3, #0
   13e54:	movs	r3, #25
   13e56:	muls	r2, r3
   13e58:	movs	r3, #17
   13e5a:	adds	r2, #101	; 0x65
   13e5c:	bl	1bbba <read_extent_buffer@@Base>
   13e60:	ldr.w	r3, [sp, #13]
   13e64:	ldr.w	r2, [sp, #9]
   13e68:	str.w	r3, [r4, #13]
   13e6c:	ldrb.w	r3, [sp, #8]
   13e70:	str.w	r2, [r4, #9]
   13e74:	ldr	r2, [pc, #40]	; (13ea0 <task_period_stop@@Base+0x88>)
   13e76:	strb	r3, [r4, #8]
   13e78:	ldr	r3, [sp, #0]
   13e7a:	add	r2, pc
   13e7c:	str	r3, [r4, #0]
   13e7e:	ldr	r3, [sp, #4]
   13e80:	str	r3, [r4, #4]
   13e82:	ldr	r3, [pc, #24]	; (13e9c <task_period_stop@@Base+0x84>)
   13e84:	ldr	r3, [r2, r3]
   13e86:	ldr	r2, [r3, #0]
   13e88:	ldr	r3, [sp, #20]
   13e8a:	eors	r2, r3
   13e8c:	beq.n	13e92 <task_period_stop@@Base+0x7a>
   13e8e:	blx	8c90 <__stack_chk_fail@plt>
   13e92:	add	sp, #24
   13e94:	pop	{r4, pc}
   13e96:	nop
   13e98:	ldr	r2, [r2, #108]	; 0x6c
   13e9a:	movs	r5, r0
   13e9c:	lsls	r0, r1, #10
   13e9e:	movs	r0, r0
   13ea0:	ldr	r6, [r3, #104]	; 0x68
   13ea2:	movs	r5, r0

00013ea4 <check_dir_conflict@@Base>:
   13ea4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13ea8:	mov	sl, r2
   13eaa:	ldr	r2, [pc, #280]	; (13fc4 <check_dir_conflict@@Base+0x120>)
   13eac:	sub	sp, #56	; 0x38
   13eae:	ldr	r3, [pc, #280]	; (13fc8 <check_dir_conflict@@Base+0x124>)
   13eb0:	mov	r8, r0
   13eb2:	add	r2, pc
   13eb4:	ldrd	r6, r7, [sp, #88]	; 0x58
   13eb8:	mov	r9, r1
   13eba:	ldr	r3, [r2, r3]
   13ebc:	ldr	r3, [r3, #0]
   13ebe:	str	r3, [sp, #52]	; 0x34
   13ec0:	mov.w	r3, #0
   13ec4:	bl	1c6f0 <btrfs_alloc_path@@Base>
   13ec8:	mov	r5, r0
   13eca:	cmp	r0, #0
   13ecc:	beq.n	13fb4 <check_dir_conflict@@Base+0x110>
   13ece:	movs	r0, #0
   13ed0:	movs	r3, #1
   13ed2:	add	r2, sp, #32
   13ed4:	strb.w	r3, [sp, #40]	; 0x28
   13ed8:	mov	r1, r8
   13eda:	mov	r3, r5
   13edc:	strd	r0, r0, [sp]
   13ee0:	strd	r6, r7, [sp, #32]
   13ee4:	strb.w	r0, [sp, #41]	; 0x29
   13ee8:	strb.w	r0, [sp, #42]	; 0x2a
   13eec:	strb.w	r0, [sp, #43]	; 0x2b
   13ef0:	strb.w	r0, [sp, #44]	; 0x2c
   13ef4:	strb.w	r0, [sp, #45]	; 0x2d
   13ef8:	strb.w	r0, [sp, #46]	; 0x2e
   13efc:	strb.w	r0, [sp, #47]	; 0x2f
   13f00:	strb.w	r0, [sp, #48]	; 0x30
   13f04:	bl	1eadc <btrfs_search_slot@@Base>
   13f08:	subs	r4, r0, #0
   13f0a:	blt.n	13f4c <check_dir_conflict@@Base+0xa8>
   13f0c:	bne.n	13fa8 <check_dir_conflict@@Base+0x104>
   13f0e:	ldr	r3, [r5, #0]
   13f10:	movs	r1, #25
   13f12:	ldr	r2, [r5, #32]
   13f14:	adds	r3, #96	; 0x60
   13f16:	mla	r2, r1, r2, r3
   13f1a:	ldr.w	r2, [r2, #118]	; 0x76
   13f1e:	add	r3, r2
   13f20:	ldr.w	r3, [r3, #153]	; 0x99
   13f24:	lsls	r3, r3, #17
   13f26:	bpl.n	13fae <check_dir_conflict@@Base+0x10a>
   13f28:	mov	r0, r5
   13f2a:	bl	1c6f8 <btrfs_release_path@@Base>
   13f2e:	mov	r2, r5
   13f30:	mov	r1, r8
   13f32:	mov	r0, r4
   13f34:	strd	sl, r4, [sp, #12]
   13f38:	str.w	r9, [sp, #8]
   13f3c:	strd	r6, r7, [sp]
   13f40:	bl	e68c <btrfs_lookup_dir_item@@Base>
   13f44:	cmn.w	r0, #4096	; 0x1000
   13f48:	bls.n	13f66 <check_dir_conflict@@Base+0xc2>
   13f4a:	mov	r4, r0
   13f4c:	mov	r0, r5
   13f4e:	bl	1c71e <btrfs_free_path@@Base>
   13f52:	ldr	r2, [pc, #120]	; (13fcc <check_dir_conflict@@Base+0x128>)
   13f54:	ldr	r3, [pc, #112]	; (13fc8 <check_dir_conflict@@Base+0x124>)
   13f56:	add	r2, pc
   13f58:	ldr	r3, [r2, r3]
   13f5a:	ldr	r2, [r3, #0]
   13f5c:	ldr	r3, [sp, #52]	; 0x34
   13f5e:	eors	r2, r3
   13f60:	beq.n	13fba <check_dir_conflict@@Base+0x116>
   13f62:	blx	8c90 <__stack_chk_fail@plt>
   13f66:	cbnz	r0, 13fa2 <check_dir_conflict@@Base+0xfe>
   13f68:	mov	r0, r5
   13f6a:	bl	1c6f8 <btrfs_release_path@@Base>
   13f6e:	ldrd	r2, r3, [sp, #96]	; 0x60
   13f72:	mov	r1, r8
   13f74:	mov	r0, r4
   13f76:	str	r4, [sp, #24]
   13f78:	strd	r2, r3, [sp, #16]
   13f7c:	mov	r2, r5
   13f7e:	strd	r9, sl, [sp, #8]
   13f82:	strd	r6, r7, [sp]
   13f86:	bl	e774 <btrfs_lookup_dir_index@@Base>
   13f8a:	cmn.w	r0, #4096	; 0x1000
   13f8e:	bls.n	13f9e <check_dir_conflict@@Base+0xfa>
   13f90:	cmn.w	r0, #2
   13f94:	it	eq
   13f96:	moveq	r0, r4
   13f98:	cmn.w	r0, #4096	; 0x1000
   13f9c:	bhi.n	13f4a <check_dir_conflict@@Base+0xa6>
   13f9e:	cmp	r0, #0
   13fa0:	beq.n	13f4c <check_dir_conflict@@Base+0xa8>
   13fa2:	mvn.w	r4, #16
   13fa6:	b.n	13f4c <check_dir_conflict@@Base+0xa8>
   13fa8:	mvn.w	r4, #1
   13fac:	b.n	13f4c <check_dir_conflict@@Base+0xa8>
   13fae:	mvn.w	r4, #19
   13fb2:	b.n	13f4c <check_dir_conflict@@Base+0xa8>
   13fb4:	mvn.w	r4, #11
   13fb8:	b.n	13f52 <check_dir_conflict@@Base+0xae>
   13fba:	mov	r0, r4
   13fbc:	add	sp, #56	; 0x38
   13fbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13fc2:	nop
   13fc4:	ldr	r6, [r4, #100]	; 0x64
   13fc6:	movs	r5, r0
   13fc8:	lsls	r0, r1, #10
   13fca:	movs	r0, r0
   13fcc:	ldr	r2, [r0, #92]	; 0x5c
   13fce:	movs	r5, r0

00013fd0 <btrfs_add_link@@Base>:
   13fd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd4:	sub	sp, #92	; 0x5c
   13fd6:	mov	r4, r3
   13fd8:	mov	r6, r2
   13fda:	ldr	r3, [sp, #148]	; 0x94
   13fdc:	mov	r8, r0
   13fde:	ldr	r2, [pc, #772]	; (142e4 <btrfs_add_link@@Base+0x314>)
   13fe0:	mov	r7, r1
   13fe2:	ldr.w	sl, [sp, #136]	; 0x88
   13fe6:	str	r3, [sp, #32]
   13fe8:	add	r2, pc
   13fea:	ldr	r3, [pc, #764]	; (142e8 <btrfs_add_link@@Base+0x318>)
   13fec:	ldr	r3, [r2, r3]
   13fee:	ldr	r3, [r3, #0]
   13ff0:	str	r3, [sp, #84]	; 0x54
   13ff2:	mov.w	r3, #0
   13ff6:	bl	1c6f0 <btrfs_alloc_path@@Base>
   13ffa:	mov	r5, r0
   13ffc:	cmp	r0, #0
   13ffe:	beq.w	142ca <btrfs_add_link@@Base+0x2fa>
   14002:	ldr	r3, [sp, #32]
   14004:	cbz	r3, 14014 <btrfs_add_link@@Base+0x44>
   14006:	ldrd	r2, r3, [r3]
   1400a:	strd	r2, r3, [sp, #24]
   1400e:	orrs	r3, r2
   14010:	bne.w	14118 <btrfs_add_link@@Base+0x148>
   14014:	bl	1c6f0 <btrfs_alloc_path@@Base>
   14018:	mov	r9, r0
   1401a:	cbnz	r0, 14058 <btrfs_add_link@@Base+0x88>
   1401c:	mvn.w	fp, #11
   14020:	movs	r3, #0
   14022:	movs	r4, #0
   14024:	strd	r3, r4, [sp, #24]
   14028:	mov	r0, r5
   1402a:	bl	1c71e <btrfs_free_path@@Base>
   1402e:	cmp.w	fp, #0
   14032:	bne.n	14042 <btrfs_add_link@@Base+0x72>
   14034:	ldr	r3, [sp, #32]
   14036:	cbz	r3, 14042 <btrfs_add_link@@Base+0x72>
   14038:	mov	r1, r3
   1403a:	ldrd	r2, r3, [sp, #24]
   1403e:	strd	r2, r3, [r1]
   14042:	ldr	r2, [pc, #680]	; (142ec <btrfs_add_link@@Base+0x31c>)
   14044:	ldr	r3, [pc, #672]	; (142e8 <btrfs_add_link@@Base+0x318>)
   14046:	add	r2, pc
   14048:	ldr	r3, [r2, r3]
   1404a:	ldr	r2, [r3, #0]
   1404c:	ldr	r3, [sp, #84]	; 0x54
   1404e:	eors	r2, r3
   14050:	beq.w	142da <btrfs_add_link@@Base+0x30a>
   14054:	blx	8c90 <__stack_chk_fail@plt>
   14058:	ldr	r3, [sp, #128]	; 0x80
   1405a:	mov.w	r1, #4294967295	; 0xffffffff
   1405e:	movs	r2, #96	; 0x60
   14060:	movs	r0, #0
   14062:	strb.w	r2, [sp, #52]	; 0x34
   14066:	add	r2, sp, #44	; 0x2c
   14068:	str	r3, [sp, #44]	; 0x2c
   1406a:	ldr	r3, [sp, #132]	; 0x84
   1406c:	strb.w	r1, [sp, #53]	; 0x35
   14070:	strb.w	r1, [sp, #54]	; 0x36
   14074:	str	r3, [sp, #48]	; 0x30
   14076:	mov	r3, r9
   14078:	strb.w	r1, [sp, #55]	; 0x37
   1407c:	strb.w	r1, [sp, #56]	; 0x38
   14080:	strb.w	r1, [sp, #57]	; 0x39
   14084:	strb.w	r1, [sp, #58]	; 0x3a
   14088:	strb.w	r1, [sp, #59]	; 0x3b
   1408c:	strb.w	r1, [sp, #60]	; 0x3c
   14090:	mov	r1, r7
   14092:	strd	r0, r0, [sp]
   14096:	bl	1eadc <btrfs_search_slot@@Base>
   1409a:	subs.w	fp, r0, #0
   1409e:	blt.n	140ba <btrfs_add_link@@Base+0xea>
   140a0:	ldr.w	r2, [r9, #32]
   140a4:	cbnz	r2, 140c4 <btrfs_add_link@@Base+0xf4>
   140a6:	mov	r1, r9
   140a8:	mov	r0, r7
   140aa:	bl	1fe88 <btrfs_prev_leaf@@Base>
   140ae:	subs.w	fp, r0, #0
   140b2:	blt.n	140ba <btrfs_add_link@@Base+0xea>
   140b4:	beq.n	140ca <btrfs_add_link@@Base+0xfa>
   140b6:	mvn.w	fp, #4
   140ba:	movs	r2, #2
   140bc:	movs	r3, #0
   140be:	strd	r2, r3, [sp, #24]
   140c2:	b.n	1410a <btrfs_add_link@@Base+0x13a>
   140c4:	subs	r2, #1
   140c6:	str.w	r2, [r9, #32]
   140ca:	ldr.w	r2, [r9, #32]
   140ce:	add	r1, sp, #64	; 0x40
   140d0:	ldr.w	r0, [r9]
   140d4:	bl	13e3c <task_period_stop@@Base+0x24>
   140d8:	ldrd	r0, r1, [sp, #64]	; 0x40
   140dc:	ldrd	r2, r3, [sp, #128]	; 0x80
   140e0:	cmp	r3, r1
   140e2:	it	eq
   140e4:	cmpeq	r2, r0
   140e6:	bne.w	14250 <btrfs_add_link@@Base+0x280>
   140ea:	ldrb.w	r2, [sp, #72]	; 0x48
   140ee:	cmp	r2, #96	; 0x60
   140f0:	bne.w	14250 <btrfs_add_link@@Base+0x280>
   140f4:	ldr.w	r2, [sp, #73]	; 0x49
   140f8:	mov.w	fp, #0
   140fc:	ldr.w	r1, [sp, #77]	; 0x4d
   14100:	adds	r3, r2, #1
   14102:	str	r3, [sp, #24]
   14104:	adc.w	r3, r1, #0
   14108:	str	r3, [sp, #28]
   1410a:	mov	r0, r9
   1410c:	bl	1c71e <btrfs_free_path@@Base>
   14110:	cmp.w	fp, #0
   14114:	bne.w	142d0 <btrfs_add_link@@Base+0x300>
   14118:	ldrd	r2, r3, [sp, #24]
   1411c:	mov	r1, sl
   1411e:	mov	r0, r7
   14120:	strd	r2, r3, [sp, #8]
   14124:	ldrd	r2, r3, [sp, #128]	; 0x80
   14128:	strd	r2, r3, [sp]
   1412c:	ldr	r2, [sp, #140]	; 0x8c
   1412e:	bl	13ea4 <check_dir_conflict@@Base>
   14132:	subs.w	fp, r0, #0
   14136:	bge.n	14148 <btrfs_add_link@@Base+0x178>
   14138:	ldr	r3, [sp, #156]	; 0x9c
   1413a:	cmp	r3, #0
   1413c:	beq.w	14028 <btrfs_add_link@@Base+0x58>
   14140:	cmn.w	fp, #17
   14144:	bne.w	14028 <btrfs_add_link@@Base+0x58>
   14148:	ldr	r3, [sp, #152]	; 0x98
   1414a:	cbz	r3, 14182 <btrfs_add_link@@Base+0x1b2>
   1414c:	ldrd	r2, r3, [sp, #24]
   14150:	mov	r1, r7
   14152:	mov	r0, r8
   14154:	strd	r6, r4, [sp]
   14158:	strd	r2, r3, [sp, #16]
   1415c:	ldrd	r2, r3, [sp, #128]	; 0x80
   14160:	strd	r2, r3, [sp, #8]
   14164:	mov	r2, sl
   14166:	ldr	r3, [sp, #140]	; 0x8c
   14168:	bl	32514 <btrfs_insert_inode_ref@@Base>
   1416c:	subs.w	fp, r0, #0
   14170:	bge.n	14256 <btrfs_add_link@@Base+0x286>
   14172:	ldr	r3, [sp, #156]	; 0x9c
   14174:	cmp	r3, #0
   14176:	beq.w	14028 <btrfs_add_link@@Base+0x58>
   1417a:	cmn.w	fp, #17
   1417e:	bne.w	14028 <btrfs_add_link@@Base+0x58>
   14182:	ldrd	r2, r3, [sp, #24]
   14186:	mov	r1, r7
   14188:	mov	r0, r8
   1418a:	strd	r6, r4, [sp, #64]	; 0x40
   1418e:	mov.w	r9, #1
   14192:	movs	r4, #0
   14194:	strd	r2, r3, [sp, #16]
   14198:	add.w	r6, sp, #73	; 0x49
   1419c:	ldrb.w	r3, [sp, #144]	; 0x90
   141a0:	strb.w	r9, [sp, #72]	; 0x48
   141a4:	strb.w	r4, [sp, #73]	; 0x49
   141a8:	str	r3, [sp, #12]
   141aa:	add	r3, sp, #64	; 0x40
   141ac:	str	r3, [sp, #36]	; 0x24
   141ae:	str	r3, [sp, #8]
   141b0:	ldrd	r2, r3, [sp, #128]	; 0x80
   141b4:	strb.w	r4, [sp, #74]	; 0x4a
   141b8:	strb.w	r4, [sp, #75]	; 0x4b
   141bc:	strd	r2, r3, [sp]
   141c0:	mov	r2, sl
   141c2:	ldr	r3, [sp, #140]	; 0x8c
   141c4:	strb.w	r4, [sp, #76]	; 0x4c
   141c8:	strb.w	r4, [sp, #77]	; 0x4d
   141cc:	strb.w	r4, [sp, #78]	; 0x4e
   141d0:	strb.w	r4, [sp, #79]	; 0x4f
   141d4:	strb.w	r4, [sp, #80]	; 0x50
   141d8:	bl	e4dc <btrfs_insert_dir_item@@Base>
   141dc:	subs.w	fp, r0, #0
   141e0:	blt.w	14028 <btrfs_add_link@@Base+0x58>
   141e4:	ldrd	r2, r3, [sp, #128]	; 0x80
   141e8:	mov	r1, r7
   141ea:	strb	r4, [r6, #1]
   141ec:	mov	r0, r8
   141ee:	strb	r4, [r6, #2]
   141f0:	strd	r2, r3, [sp, #64]	; 0x40
   141f4:	mov	r3, r5
   141f6:	strb	r4, [r6, #3]
   141f8:	strb	r4, [r6, #4]
   141fa:	strb	r4, [r6, #5]
   141fc:	strb	r4, [r6, #6]
   141fe:	strb	r4, [r6, #7]
   14200:	ldr	r2, [sp, #36]	; 0x24
   14202:	strd	r9, r9, [sp]
   14206:	strb.w	r9, [sp, #72]	; 0x48
   1420a:	strb.w	r4, [sp, #73]	; 0x49
   1420e:	bl	1eadc <btrfs_search_slot@@Base>
   14212:	mov	fp, r0
   14214:	cmp	r0, #0
   14216:	bne.w	14028 <btrfs_add_link@@Base+0x58>
   1421a:	ldr	r3, [r5, #0]
   1421c:	movs	r0, #25
   1421e:	ldr	r1, [r5, #32]
   14220:	adds	r3, #96	; 0x60
   14222:	ldr	r2, [sp, #140]	; 0x8c
   14224:	mla	r1, r0, r1, r3
   14228:	lsl.w	r4, r2, r9
   1422c:	ldr.w	r1, [r1, #118]	; 0x76
   14230:	adds	r1, #101	; 0x65
   14232:	add	r3, r1
   14234:	ldr	r0, [r3, #16]
   14236:	ldr	r1, [r3, #20]
   14238:	adds	r0, r0, r4
   1423a:	str	r0, [r3, #16]
   1423c:	adc.w	r1, r1, r4, asr #31
   14240:	str	r1, [r3, #20]
   14242:	ldr	r0, [r5, #0]
   14244:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   14248:	mov	r0, r5
   1424a:	bl	1c6f8 <btrfs_release_path@@Base>
   1424e:	b.n	14028 <btrfs_add_link@@Base+0x58>
   14250:	mov.w	fp, #0
   14254:	b.n	140ba <btrfs_add_link@@Base+0xea>
   14256:	bne.n	14182 <btrfs_add_link@@Base+0x1b2>
   14258:	movs	r1, #1
   1425a:	add	r2, sp, #64	; 0x40
   1425c:	strb.w	r1, [sp, #72]	; 0x48
   14260:	mov	r3, r5
   14262:	strd	r1, r1, [sp]
   14266:	mov	r0, r8
   14268:	mov	r1, r7
   1426a:	strb.w	fp, [sp, #73]	; 0x49
   1426e:	strb.w	fp, [sp, #74]	; 0x4a
   14272:	strb.w	fp, [sp, #75]	; 0x4b
   14276:	strb.w	fp, [sp, #76]	; 0x4c
   1427a:	strb.w	fp, [sp, #77]	; 0x4d
   1427e:	strb.w	fp, [sp, #78]	; 0x4e
   14282:	strb.w	fp, [sp, #79]	; 0x4f
   14286:	strb.w	fp, [sp, #80]	; 0x50
   1428a:	strd	r6, r4, [sp, #64]	; 0x40
   1428e:	bl	1eadc <btrfs_search_slot@@Base>
   14292:	subs.w	fp, r0, #0
   14296:	beq.n	142a2 <btrfs_add_link@@Base+0x2d2>
   14298:	ble.w	14028 <btrfs_add_link@@Base+0x58>
   1429c:	mvn.w	fp, #1
   142a0:	b.n	14028 <btrfs_add_link@@Base+0x58>
   142a2:	ldr	r3, [r5, #0]
   142a4:	movs	r1, #25
   142a6:	ldr	r2, [r5, #32]
   142a8:	adds	r3, #96	; 0x60
   142aa:	mla	r2, r1, r2, r3
   142ae:	ldr.w	r2, [r2, #118]	; 0x76
   142b2:	adds	r2, #101	; 0x65
   142b4:	add	r3, r2
   142b6:	ldr	r2, [r3, #40]	; 0x28
   142b8:	adds	r2, #1
   142ba:	str	r2, [r3, #40]	; 0x28
   142bc:	ldr	r0, [r5, #0]
   142be:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   142c2:	mov	r0, r5
   142c4:	bl	1c6f8 <btrfs_release_path@@Base>
   142c8:	b.n	14182 <btrfs_add_link@@Base+0x1b2>
   142ca:	mvn.w	fp, #11
   142ce:	b.n	14042 <btrfs_add_link@@Base+0x72>
   142d0:	movs	r3, #0
   142d2:	movs	r4, #0
   142d4:	strd	r3, r4, [sp, #24]
   142d8:	b.n	14028 <btrfs_add_link@@Base+0x58>
   142da:	mov	r0, fp
   142dc:	add	sp, #92	; 0x5c
   142de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142e2:	nop
   142e4:	ldr	r0, [r6, #80]	; 0x50
   142e6:	movs	r5, r0
   142e8:	lsls	r0, r1, #10
   142ea:	movs	r0, r0
   142ec:	ldr	r2, [r2, #76]	; 0x4c
   142ee:	movs	r5, r0

000142f0 <btrfs_add_orphan_item@@Base>:
   142f0:	push	{r4, r5, lr}
   142f2:	sub	sp, #44	; 0x2c
   142f4:	ldr	r4, [pc, #84]	; (1434c <btrfs_add_orphan_item@@Base+0x5c>)
   142f6:	mov.w	r5, #4294967295	; 0xffffffff
   142fa:	ldr	r3, [pc, #84]	; (14350 <btrfs_add_orphan_item@@Base+0x60>)
   142fc:	add	r4, pc
   142fe:	ldr	r3, [r4, r3]
   14300:	mvn.w	r4, #4
   14304:	ldr	r3, [r3, #0]
   14306:	str	r3, [sp, #36]	; 0x24
   14308:	mov.w	r3, #0
   1430c:	movs	r3, #48	; 0x30
   1430e:	strb.w	r3, [sp, #24]
   14312:	ldr	r3, [sp, #56]	; 0x38
   14314:	strd	r4, r5, [sp, #16]
   14318:	str.w	r3, [sp, #25]
   1431c:	ldr	r3, [sp, #60]	; 0x3c
   1431e:	str.w	r3, [sp, #29]
   14322:	movs	r3, #0
   14324:	str	r3, [sp, #12]
   14326:	movs	r3, #1
   14328:	str	r3, [sp, #4]
   1432a:	add	r3, sp, #12
   1432c:	str	r3, [sp, #0]
   1432e:	add	r3, sp, #16
   14330:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   14334:	ldr	r2, [pc, #28]	; (14354 <btrfs_add_orphan_item@@Base+0x64>)
   14336:	ldr	r3, [pc, #24]	; (14350 <btrfs_add_orphan_item@@Base+0x60>)
   14338:	add	r2, pc
   1433a:	ldr	r3, [r2, r3]
   1433c:	ldr	r2, [r3, #0]
   1433e:	ldr	r3, [sp, #36]	; 0x24
   14340:	eors	r2, r3
   14342:	beq.n	14348 <btrfs_add_orphan_item@@Base+0x58>
   14344:	blx	8c90 <__stack_chk_fail@plt>
   14348:	add	sp, #44	; 0x2c
   1434a:	pop	{r4, r5, pc}
   1434c:	ldr	r4, [r3, #32]
   1434e:	movs	r5, r0
   14350:	lsls	r0, r1, #10
   14352:	movs	r0, r0
   14354:	ldr	r0, [r4, #28]
   14356:	movs	r5, r0

00014358 <btrfs_unlink@@Base>:
   14358:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1435c:	sub	sp, #76	; 0x4c
   1435e:	mov	r6, r0
   14360:	mov	sl, r1
   14362:	strd	r2, r3, [sp, #40]	; 0x28
   14366:	ldr	r2, [pc, #896]	; (146e8 <btrfs_unlink@@Base+0x390>)
   14368:	ldr	r3, [pc, #896]	; (146ec <btrfs_unlink@@Base+0x394>)
   1436a:	add	r2, pc
   1436c:	ldrd	r7, r5, [sp, #128]	; 0x80
   14370:	ldr	r3, [r2, r3]
   14372:	ldr	r3, [r3, #0]
   14374:	str	r3, [sp, #68]	; 0x44
   14376:	mov.w	r3, #0
   1437a:	bl	1c6f0 <btrfs_alloc_path@@Base>
   1437e:	mov	r4, r0
   14380:	cmp	r0, #0
   14382:	beq.w	146ce <btrfs_unlink@@Base+0x376>
   14386:	ldrd	r2, r3, [sp, #112]	; 0x70
   1438a:	mov.w	r9, #0
   1438e:	mov	r1, sl
   14390:	str.w	r9, [sp, #24]
   14394:	str	r5, [sp, #0]
   14396:	strd	r2, r3, [sp, #16]
   1439a:	mov	r2, r0
   1439c:	ldr	r3, [sp, #40]	; 0x28
   1439e:	mov	r0, r6
   143a0:	str	r3, [sp, #8]
   143a2:	ldr	r3, [sp, #44]	; 0x2c
   143a4:	str	r3, [sp, #12]
   143a6:	mov	r3, r7
   143a8:	bl	32188 <btrfs_lookup_inode_ref@@Base>
   143ac:	cmn.w	r0, #4096	; 0x1000
   143b0:	mov	fp, r0
   143b2:	bhi.n	14490 <btrfs_unlink@@Base+0x138>
   143b4:	mov	r0, r4
   143b6:	bl	1c6f8 <btrfs_release_path@@Base>
   143ba:	ldrd	r2, r3, [sp, #112]	; 0x70
   143be:	mov	r1, sl
   143c0:	mov	r0, r9
   143c2:	strd	r5, r9, [sp, #12]
   143c6:	strd	r2, r3, [sp]
   143ca:	mov	r2, r4
   143cc:	str	r7, [sp, #8]
   143ce:	bl	e68c <btrfs_lookup_dir_item@@Base>
   143d2:	cmn.w	r0, #4096	; 0x1000
   143d6:	mov	r3, r0
   143d8:	str	r0, [sp, #36]	; 0x24
   143da:	bls.n	143e0 <btrfs_unlink@@Base+0x88>
   143dc:	mov	fp, r3
   143de:	b.n	14490 <btrfs_unlink@@Base+0x138>
   143e0:	mov	r0, r4
   143e2:	bl	1c6f8 <btrfs_release_path@@Base>
   143e6:	ldrd	r2, r3, [sp, #120]	; 0x78
   143ea:	mov	r1, sl
   143ec:	mov	r0, r9
   143ee:	str.w	r9, [sp, #24]
   143f2:	strd	r2, r3, [sp, #16]
   143f6:	ldrd	r2, r3, [sp, #112]	; 0x70
   143fa:	strd	r7, r5, [sp, #8]
   143fe:	strd	r2, r3, [sp]
   14402:	mov	r2, r4
   14404:	bl	e774 <btrfs_lookup_dir_index@@Base>
   14408:	cmn.w	r0, #4096	; 0x1000
   1440c:	mov	r8, r0
   1440e:	bls.n	14418 <btrfs_unlink@@Base+0xc0>
   14410:	cmn.w	r0, #2
   14414:	bne.n	14488 <btrfs_unlink@@Base+0x130>
   14416:	mov	r8, r9
   14418:	ldr	r3, [sp, #36]	; 0x24
   1441a:	mov	r0, r4
   1441c:	orr.w	r9, fp, r3
   14420:	orr.w	r9, r8, r9
   14424:	bl	1c6f8 <btrfs_release_path@@Base>
   14428:	cmp.w	r9, #0
   1442c:	beq.n	14482 <btrfs_unlink@@Base+0x12a>
   1442e:	cmp.w	fp, #0
   14432:	beq.w	146d4 <btrfs_unlink@@Base+0x37c>
   14436:	ldr	r3, [sp, #40]	; 0x28
   14438:	movs	r2, #0
   1443a:	movs	r1, #1
   1443c:	strb.w	r2, [sp, #57]	; 0x39
   14440:	strb.w	r1, [sp, #56]	; 0x38
   14444:	mov	r0, r6
   14446:	str	r3, [sp, #48]	; 0x30
   14448:	ldr	r3, [sp, #44]	; 0x2c
   1444a:	strb.w	r2, [sp, #58]	; 0x3a
   1444e:	strb.w	r2, [sp, #59]	; 0x3b
   14452:	str	r3, [sp, #52]	; 0x34
   14454:	mov.w	r3, #4294967295	; 0xffffffff
   14458:	strb.w	r2, [sp, #60]	; 0x3c
   1445c:	strb.w	r2, [sp, #61]	; 0x3d
   14460:	strb.w	r2, [sp, #62]	; 0x3e
   14464:	strb.w	r2, [sp, #63]	; 0x3f
   14468:	strb.w	r2, [sp, #64]	; 0x40
   1446c:	add	r2, sp, #48	; 0x30
   1446e:	str	r1, [sp, #4]
   14470:	mov	r1, sl
   14472:	str	r3, [sp, #0]
   14474:	mov	r3, r4
   14476:	bl	1eadc <btrfs_search_slot@@Base>
   1447a:	subs.w	fp, r0, #0
   1447e:	beq.n	144ac <btrfs_unlink@@Base+0x154>
   14480:	ble.n	14490 <btrfs_unlink@@Base+0x138>
   14482:	mvn.w	fp, #1
   14486:	b.n	14490 <btrfs_unlink@@Base+0x138>
   14488:	cmn.w	r0, #4096	; 0x1000
   1448c:	bls.n	14418 <btrfs_unlink@@Base+0xc0>
   1448e:	mov	fp, r0
   14490:	mov	r0, r4
   14492:	bl	1c71e <btrfs_free_path@@Base>
   14496:	ldr	r2, [pc, #600]	; (146f0 <btrfs_unlink@@Base+0x398>)
   14498:	ldr	r3, [pc, #592]	; (146ec <btrfs_unlink@@Base+0x394>)
   1449a:	add	r2, pc
   1449c:	ldr	r3, [r2, r3]
   1449e:	ldr	r2, [r3, #0]
   144a0:	ldr	r3, [sp, #68]	; 0x44
   144a2:	eors	r2, r3
   144a4:	beq.w	146de <btrfs_unlink@@Base+0x386>
   144a8:	blx	8c90 <__stack_chk_fail@plt>
   144ac:	ldr	r3, [r4, #0]
   144ae:	movs	r1, #25
   144b0:	ldr	r2, [r4, #32]
   144b2:	adds	r3, #96	; 0x60
   144b4:	mla	r2, r1, r2, r3
   144b8:	ldr.w	r2, [r2, #118]	; 0x76
   144bc:	adds	r2, #101	; 0x65
   144be:	add	r3, r2
   144c0:	ldr.w	r9, [r3, #40]	; 0x28
   144c4:	cmp.w	r9, #0
   144c8:	beq.n	144ce <btrfs_unlink@@Base+0x176>
   144ca:	add.w	r9, r9, #4294967295	; 0xffffffff
   144ce:	str.w	r9, [r3, #40]	; 0x28
   144d2:	ldr	r0, [r4, #0]
   144d4:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   144d8:	mov	r0, r4
   144da:	bl	1c6f8 <btrfs_release_path@@Base>
   144de:	cmp.w	r9, #0
   144e2:	bne.n	1450c <btrfs_unlink@@Base+0x1b4>
   144e4:	ldr	r3, [sp, #136]	; 0x88
   144e6:	cbz	r3, 1450c <btrfs_unlink@@Base+0x1b4>
   144e8:	ldr	r3, [sp, #40]	; 0x28
   144ea:	mov	r2, r4
   144ec:	mov	r1, sl
   144ee:	mov	r0, r6
   144f0:	str	r3, [sp, #0]
   144f2:	ldr	r3, [sp, #44]	; 0x2c
   144f4:	str	r3, [sp, #4]
   144f6:	bl	142f0 <btrfs_add_orphan_item@@Base>
   144fa:	subs.w	fp, r0, #0
   144fe:	blt.n	14490 <btrfs_unlink@@Base+0x138>
   14500:	ldr	r0, [r4, #0]
   14502:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   14506:	mov	r0, r4
   14508:	bl	1c6f8 <btrfs_release_path@@Base>
   1450c:	add	r3, sp, #120	; 0x78
   1450e:	str	r3, [sp, #16]
   14510:	ldrd	r2, r3, [sp, #112]	; 0x70
   14514:	mov	r1, sl
   14516:	mov	r0, r6
   14518:	strd	r2, r3, [sp, #8]
   1451c:	mov	r2, r7
   1451e:	ldr	r3, [sp, #40]	; 0x28
   14520:	str	r3, [sp, #0]
   14522:	ldr	r3, [sp, #44]	; 0x2c
   14524:	str	r3, [sp, #4]
   14526:	mov	r3, r5
   14528:	bl	326f0 <btrfs_del_inode_ref@@Base>
   1452c:	subs.w	fp, r0, #0
   14530:	blt.n	14490 <btrfs_unlink@@Base+0x138>
   14532:	cmp.w	r8, #0
   14536:	beq.n	14600 <btrfs_unlink@@Base+0x2a8>
   14538:	mov.w	r3, #4294967295	; 0xffffffff
   1453c:	str	r3, [sp, #24]
   1453e:	ldrd	r2, r3, [sp, #120]	; 0x78
   14542:	mov	r1, sl
   14544:	mov	r0, r6
   14546:	strd	r7, r5, [sp, #8]
   1454a:	strd	r2, r3, [sp, #16]
   1454e:	ldrd	r2, r3, [sp, #112]	; 0x70
   14552:	strd	r2, r3, [sp]
   14556:	mov	r2, r4
   14558:	bl	e774 <btrfs_lookup_dir_index@@Base>
   1455c:	cmn.w	r0, #4096	; 0x1000
   14560:	mov	r3, r0
   14562:	bhi.w	143dc <btrfs_unlink@@Base+0x84>
   14566:	cmp	r0, #0
   14568:	beq.n	14482 <btrfs_unlink@@Base+0x12a>
   1456a:	mov	r2, r4
   1456c:	mov	r1, sl
   1456e:	mov	r0, r6
   14570:	bl	e0ac <btrfs_delete_one_dir_name@@Base>
   14574:	mov	fp, r0
   14576:	cmp	r0, #0
   14578:	bne.n	14490 <btrfs_unlink@@Base+0x138>
   1457a:	mov	r0, r4
   1457c:	bl	1c6f8 <btrfs_release_path@@Base>
   14580:	ldrd	r2, r3, [sp, #112]	; 0x70
   14584:	mov	r1, sl
   14586:	mov	r0, r6
   14588:	strb.w	fp, [sp, #57]	; 0x39
   1458c:	strd	r2, r3, [sp, #48]	; 0x30
   14590:	movs	r2, #1
   14592:	mov	r3, r4
   14594:	strb.w	r2, [sp, #56]	; 0x38
   14598:	strd	r2, r2, [sp]
   1459c:	add	r2, sp, #48	; 0x30
   1459e:	strb.w	fp, [sp, #58]	; 0x3a
   145a2:	strb.w	fp, [sp, #59]	; 0x3b
   145a6:	strb.w	fp, [sp, #60]	; 0x3c
   145aa:	strb.w	fp, [sp, #61]	; 0x3d
   145ae:	strb.w	fp, [sp, #62]	; 0x3e
   145b2:	strb.w	fp, [sp, #63]	; 0x3f
   145b6:	strb.w	fp, [sp, #64]	; 0x40
   145ba:	bl	1eadc <btrfs_search_slot@@Base>
   145be:	mov	fp, r0
   145c0:	cmp	r0, #0
   145c2:	bne.w	14490 <btrfs_unlink@@Base+0x138>
   145c6:	ldr	r1, [r4, #0]
   145c8:	movs	r2, #25
   145ca:	ldr	r3, [r4, #32]
   145cc:	mov.w	r9, r5, asr #31
   145d0:	adds	r1, #96	; 0x60
   145d2:	mla	r3, r2, r3, r1
   145d6:	ldr.w	r3, [r3, #118]	; 0x76
   145da:	adds	r3, #101	; 0x65
   145dc:	add	r1, r3
   145de:	ldr	r3, [r1, #20]
   145e0:	ldr	r2, [r1, #16]
   145e2:	cmp	r3, r9
   145e4:	it	eq
   145e6:	cmpeq	r2, r5
   145e8:	bcc.n	145f0 <btrfs_unlink@@Base+0x298>
   145ea:	subs	r2, r2, r5
   145ec:	sbc.w	r3, r3, r9
   145f0:	str	r2, [r1, #16]
   145f2:	str	r3, [r1, #20]
   145f4:	ldr	r0, [r4, #0]
   145f6:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   145fa:	mov	r0, r4
   145fc:	bl	1c6f8 <btrfs_release_path@@Base>
   14600:	ldr	r3, [sp, #36]	; 0x24
   14602:	cmp	r3, #0
   14604:	beq.w	14490 <btrfs_unlink@@Base+0x138>
   14608:	mov.w	r3, #4294967295	; 0xffffffff
   1460c:	strd	r5, r3, [sp, #12]
   14610:	ldrd	r2, r3, [sp, #112]	; 0x70
   14614:	mov	r1, sl
   14616:	mov	r0, r6
   14618:	str	r7, [sp, #8]
   1461a:	strd	r2, r3, [sp]
   1461e:	mov	r2, r4
   14620:	bl	e68c <btrfs_lookup_dir_item@@Base>
   14624:	cmn.w	r0, #4096	; 0x1000
   14628:	mov	r3, r0
   1462a:	bhi.w	143dc <btrfs_unlink@@Base+0x84>
   1462e:	cmp	r0, #0
   14630:	beq.w	14482 <btrfs_unlink@@Base+0x12a>
   14634:	mov	r2, r4
   14636:	mov	r1, sl
   14638:	mov	r0, r6
   1463a:	bl	e0ac <btrfs_delete_one_dir_name@@Base>
   1463e:	subs.w	fp, r0, #0
   14642:	blt.w	14490 <btrfs_unlink@@Base+0x138>
   14646:	mov	r0, r4
   14648:	bl	1c6f8 <btrfs_release_path@@Base>
   1464c:	ldrd	r2, r3, [sp, #112]	; 0x70
   14650:	movs	r1, #1
   14652:	mov	r0, r6
   14654:	strb.w	r1, [sp, #56]	; 0x38
   14658:	strd	r2, r3, [sp, #48]	; 0x30
   1465c:	movs	r2, #0
   1465e:	strd	r1, r1, [sp]
   14662:	mov	r3, r4
   14664:	strb.w	r2, [sp, #57]	; 0x39
   14668:	mov	r1, sl
   1466a:	strb.w	r2, [sp, #58]	; 0x3a
   1466e:	strb.w	r2, [sp, #59]	; 0x3b
   14672:	strb.w	r2, [sp, #60]	; 0x3c
   14676:	strb.w	r2, [sp, #61]	; 0x3d
   1467a:	strb.w	r2, [sp, #62]	; 0x3e
   1467e:	strb.w	r2, [sp, #63]	; 0x3f
   14682:	strb.w	r2, [sp, #64]	; 0x40
   14686:	add	r2, sp, #48	; 0x30
   14688:	bl	1eadc <btrfs_search_slot@@Base>
   1468c:	mov	fp, r0
   1468e:	cmp	r0, #0
   14690:	bne.w	14490 <btrfs_unlink@@Base+0x138>
   14694:	ldr	r1, [r4, #0]
   14696:	movs	r2, #25
   14698:	ldr	r3, [r4, #32]
   1469a:	asrs	r7, r5, #31
   1469c:	adds	r1, #96	; 0x60
   1469e:	mla	r3, r2, r3, r1
   146a2:	ldr.w	r3, [r3, #118]	; 0x76
   146a6:	adds	r3, #101	; 0x65
   146a8:	add	r1, r3
   146aa:	ldr	r3, [r1, #20]
   146ac:	ldr	r2, [r1, #16]
   146ae:	cmp	r3, r7
   146b0:	it	eq
   146b2:	cmpeq	r2, r5
   146b4:	bcc.n	146bc <btrfs_unlink@@Base+0x364>
   146b6:	subs	r2, r2, r5
   146b8:	sbc.w	r3, r3, r7
   146bc:	str	r2, [r1, #16]
   146be:	str	r3, [r1, #20]
   146c0:	ldr	r0, [r4, #0]
   146c2:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   146c6:	mov	r0, r4
   146c8:	bl	1c6f8 <btrfs_release_path@@Base>
   146cc:	b.n	14490 <btrfs_unlink@@Base+0x138>
   146ce:	mvn.w	fp, #11
   146d2:	b.n	14496 <btrfs_unlink@@Base+0x13e>
   146d4:	cmp.w	r8, #0
   146d8:	bne.w	14538 <btrfs_unlink@@Base+0x1e0>
   146dc:	b.n	14608 <btrfs_unlink@@Base+0x2b0>
   146de:	mov	r0, fp
   146e0:	add	sp, #76	; 0x4c
   146e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e6:	nop
   146e8:	ldr	r6, [r5, #24]
   146ea:	movs	r5, r0
   146ec:	lsls	r0, r1, #10
   146ee:	movs	r0, r0
   146f0:	ldr	r6, [r7, #4]
   146f2:	movs	r5, r0

000146f4 <btrfs_new_inode@@Base>:
   146f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   146f8:	mov	r9, r2
   146fa:	ldr	r2, [pc, #124]	; (14778 <btrfs_new_inode@@Base+0x84>)
   146fc:	mov	r8, r3
   146fe:	ldr	r3, [pc, #124]	; (1477c <btrfs_new_inode@@Base+0x88>)
   14700:	sub	sp, #180	; 0xb4
   14702:	add	r2, pc
   14704:	add	r6, sp, #12
   14706:	mov	r5, r0
   14708:	mov	r7, r1
   1470a:	ldr	r3, [r2, r3]
   1470c:	movs	r1, #0
   1470e:	mov	r0, r6
   14710:	movs	r2, #160	; 0xa0
   14712:	ldr	r3, [r3, #0]
   14714:	str	r3, [sp, #172]	; 0xac
   14716:	mov.w	r3, #0
   1471a:	blx	8f98 <memset@plt+0x4>
   1471e:	movs	r0, #0
   14720:	movs	r4, #0
   14722:	blx	8c0c <time@plt>
   14726:	ldr	r3, [r5, #8]
   14728:	mov	r2, r9
   1472a:	mov	r1, r7
   1472c:	str	r6, [sp, #0]
   1472e:	str	r3, [sp, #12]
   14730:	ldr	r3, [r5, #12]
   14732:	strd	r4, r4, [sp, #56]	; 0x38
   14736:	strd	r4, r4, [sp, #28]
   1473a:	str	r3, [sp, #16]
   1473c:	ldr	r3, [sp, #208]	; 0xd0
   1473e:	str	r4, [sp, #52]	; 0x34
   14740:	str	r4, [sp, #132]	; 0x84
   14742:	str	r3, [sp, #64]	; 0x40
   14744:	str	r4, [sp, #156]	; 0x9c
   14746:	str	r4, [sp, #144]	; 0x90
   14748:	asrs	r3, r0, #31
   1474a:	strd	r0, r3, [sp, #124]	; 0x7c
   1474e:	strd	r0, r3, [sp, #148]	; 0x94
   14752:	strd	r0, r3, [sp, #136]	; 0x88
   14756:	mov	r3, r8
   14758:	mov	r0, r5
   1475a:	bl	3210c <btrfs_insert_inode@@Base>
   1475e:	ldr	r2, [pc, #32]	; (14780 <btrfs_new_inode@@Base+0x8c>)
   14760:	ldr	r3, [pc, #24]	; (1477c <btrfs_new_inode@@Base+0x88>)
   14762:	add	r2, pc
   14764:	ldr	r3, [r2, r3]
   14766:	ldr	r2, [r3, #0]
   14768:	ldr	r3, [sp, #172]	; 0xac
   1476a:	eors	r2, r3
   1476c:	beq.n	14772 <btrfs_new_inode@@Base+0x7e>
   1476e:	blx	8c90 <__stack_chk_fail@plt>
   14772:	add	sp, #180	; 0xb4
   14774:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14778:	str	r6, [r2, #96]	; 0x60
   1477a:	movs	r5, r0
   1477c:	lsls	r0, r1, #10
   1477e:	movs	r0, r0
   14780:	str	r6, [r6, #88]	; 0x58
   14782:	movs	r5, r0

00014784 <btrfs_change_inode_flags@@Base>:
   14784:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14788:	mov	r9, r2
   1478a:	ldr	r2, [pc, #180]	; (14840 <btrfs_change_inode_flags@@Base+0xbc>)
   1478c:	mov	r4, r3
   1478e:	ldr	r3, [pc, #180]	; (14844 <btrfs_change_inode_flags@@Base+0xc0>)
   14790:	sub	sp, #44	; 0x2c
   14792:	add	r2, pc
   14794:	mov	r8, r0
   14796:	str	r1, [sp, #12]
   14798:	ldr	r3, [r2, r3]
   1479a:	ldrd	r7, r6, [sp, #72]	; 0x48
   1479e:	ldr	r3, [r3, #0]
   147a0:	str	r3, [sp, #36]	; 0x24
   147a2:	mov.w	r3, #0
   147a6:	bl	1c6f0 <btrfs_alloc_path@@Base>
   147aa:	mov	r5, r0
   147ac:	cmp	r0, #0
   147ae:	beq.n	14832 <btrfs_change_inode_flags@@Base+0xae>
   147b0:	movs	r2, #0
   147b2:	movs	r3, #1
   147b4:	strb.w	r2, [sp, #25]
   147b8:	strd	r2, r3, [sp]
   147bc:	strb.w	r3, [sp, #24]
   147c0:	mov	r3, r0
   147c2:	strb.w	r2, [sp, #26]
   147c6:	mov	r0, r8
   147c8:	strb.w	r2, [sp, #27]
   147cc:	strb.w	r2, [sp, #28]
   147d0:	strb.w	r2, [sp, #29]
   147d4:	strb.w	r2, [sp, #30]
   147d8:	strb.w	r2, [sp, #31]
   147dc:	strb.w	r2, [sp, #32]
   147e0:	add	r2, sp, #16
   147e2:	ldr	r1, [sp, #12]
   147e4:	strd	r9, r4, [sp, #16]
   147e8:	bl	1eadc <btrfs_search_slot@@Base>
   147ec:	subs	r4, r0, #0
   147ee:	bgt.n	1482c <btrfs_change_inode_flags@@Base+0xa8>
   147f0:	bne.n	14812 <btrfs_change_inode_flags@@Base+0x8e>
   147f2:	ldr	r3, [r5, #0]
   147f4:	movs	r1, #25
   147f6:	ldr	r2, [r5, #32]
   147f8:	adds	r3, #96	; 0x60
   147fa:	mla	r2, r1, r2, r3
   147fe:	ldr.w	r2, [r2, #118]	; 0x76
   14802:	add	r3, r2
   14804:	str.w	r7, [r3, #165]	; 0xa5
   14808:	str.w	r6, [r3, #169]	; 0xa9
   1480c:	ldr	r0, [r5, #0]
   1480e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   14812:	mov	r0, r5
   14814:	bl	1c71e <btrfs_free_path@@Base>
   14818:	ldr	r2, [pc, #44]	; (14848 <btrfs_change_inode_flags@@Base+0xc4>)
   1481a:	ldr	r3, [pc, #40]	; (14844 <btrfs_change_inode_flags@@Base+0xc0>)
   1481c:	add	r2, pc
   1481e:	ldr	r3, [r2, r3]
   14820:	ldr	r2, [r3, #0]
   14822:	ldr	r3, [sp, #36]	; 0x24
   14824:	eors	r2, r3
   14826:	beq.n	14838 <btrfs_change_inode_flags@@Base+0xb4>
   14828:	blx	8c90 <__stack_chk_fail@plt>
   1482c:	mvn.w	r4, #1
   14830:	b.n	14812 <btrfs_change_inode_flags@@Base+0x8e>
   14832:	mvn.w	r4, #11
   14836:	b.n	14818 <btrfs_change_inode_flags@@Base+0x94>
   14838:	mov	r0, r4
   1483a:	add	sp, #44	; 0x2c
   1483c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14840:	str	r6, [r0, #88]	; 0x58
   14842:	movs	r5, r0
   14844:	lsls	r0, r1, #10
   14846:	movs	r0, r0
   14848:	str	r4, [r7, #76]	; 0x4c
   1484a:	movs	r5, r0

0001484c <btrfs_mkdir@@Base>:
   1484c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14850:	mov	sl, r2
   14852:	ldr	r2, [pc, #284]	; (14970 <btrfs_mkdir@@Base+0x124>)
   14854:	mov	fp, r3
   14856:	ldr	r3, [pc, #284]	; (14974 <btrfs_mkdir@@Base+0x128>)
   14858:	sub	sp, #76	; 0x4c
   1485a:	add	r2, pc
   1485c:	mov	r7, r0
   1485e:	str	r1, [sp, #36]	; 0x24
   14860:	ldr	r3, [r2, r3]
   14862:	movs	r2, #0
   14864:	ldrd	r8, r9, [sp, #112]	; 0x70
   14868:	ldr	r3, [r3, #0]
   1486a:	str	r3, [sp, #68]	; 0x44
   1486c:	mov.w	r3, #0
   14870:	ldr	r6, [sp, #120]	; 0x78
   14872:	movs	r3, #0
   14874:	strd	r2, r3, [sp, #40]	; 0x28
   14878:	bl	1c6f0 <btrfs_alloc_path@@Base>
   1487c:	mov	r5, r0
   1487e:	cmp	r0, #0
   14880:	beq.n	14962 <btrfs_mkdir@@Base+0x116>
   14882:	ldr	r1, [sp, #36]	; 0x24
   14884:	cbz	r6, 14894 <btrfs_mkdir@@Base+0x48>
   14886:	ldrd	r2, r3, [r6]
   1488a:	orrs.w	r0, r2, r3
   1488e:	it	ne
   14890:	strdne	r2, r3, [sp, #40]	; 0x28
   14894:	movs	r0, #0
   14896:	mov	r2, r5
   14898:	strd	fp, r0, [sp, #12]
   1489c:	str.w	sl, [sp, #8]
   148a0:	strd	r8, r9, [sp]
   148a4:	str	r1, [sp, #36]	; 0x24
   148a6:	bl	e68c <btrfs_lookup_dir_item@@Base>
   148aa:	ldr	r1, [sp, #36]	; 0x24
   148ac:	cmn.w	r0, #4096	; 0x1000
   148b0:	mov	r4, r0
   148b2:	bhi.n	148dc <btrfs_mkdir@@Base+0x90>
   148b4:	cbz	r0, 14902 <btrfs_mkdir@@Base+0xb6>
   148b6:	mov	r2, r0
   148b8:	movs	r3, #17
   148ba:	ldr	r0, [r5, #0]
   148bc:	add	r1, sp, #48	; 0x30
   148be:	bl	1bbba <read_extent_buffer@@Base>
   148c2:	ldrd	r2, r3, [sp, #48]	; 0x30
   148c6:	strd	r2, r3, [sp, #40]	; 0x28
   148ca:	ldr	r2, [r5, #0]
   148cc:	add	r4, r2
   148ce:	ldrb.w	r3, [r4, #125]	; 0x7d
   148d2:	cmp	r3, #2
   148d4:	ite	eq
   148d6:	moveq	r4, #0
   148d8:	mvnne.w	r4, #16
   148dc:	mov	r0, r5
   148de:	bl	1c71e <btrfs_free_path@@Base>
   148e2:	cbnz	r4, 148ee <btrfs_mkdir@@Base+0xa2>
   148e4:	cbz	r6, 148ee <btrfs_mkdir@@Base+0xa2>
   148e6:	ldrd	r2, r3, [sp, #40]	; 0x28
   148ea:	strd	r2, r3, [r6]
   148ee:	ldr	r2, [pc, #136]	; (14978 <btrfs_mkdir@@Base+0x12c>)
   148f0:	ldr	r3, [pc, #128]	; (14974 <btrfs_mkdir@@Base+0x128>)
   148f2:	add	r2, pc
   148f4:	ldr	r3, [r2, r3]
   148f6:	ldr	r2, [r3, #0]
   148f8:	ldr	r3, [sp, #68]	; 0x44
   148fa:	eors	r2, r3
   148fc:	beq.n	14968 <btrfs_mkdir@@Base+0x11c>
   148fe:	blx	8c90 <__stack_chk_fail@plt>
   14902:	ldrd	r2, r3, [sp, #40]	; 0x28
   14906:	orrs	r3, r2
   14908:	beq.n	1494a <btrfs_mkdir@@Base+0xfe>
   1490a:	ldr	r3, [sp, #124]	; 0x7c
   1490c:	mov	r0, r7
   1490e:	str	r1, [sp, #36]	; 0x24
   14910:	orr.w	r3, r3, #16384	; 0x4000
   14914:	str	r3, [sp, #0]
   14916:	ldrd	r2, r3, [sp, #40]	; 0x28
   1491a:	bl	146f4 <btrfs_new_inode@@Base>
   1491e:	mov	r4, r0
   14920:	cmp	r0, #0
   14922:	bne.n	148dc <btrfs_mkdir@@Base+0x90>
   14924:	movs	r3, #1
   14926:	str	r0, [sp, #28]
   14928:	strd	r0, r3, [sp, #20]
   1492c:	movs	r3, #2
   1492e:	ldr	r1, [sp, #36]	; 0x24
   14930:	mov	r0, r7
   14932:	strd	fp, r3, [sp, #12]
   14936:	str.w	sl, [sp, #8]
   1493a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1493e:	strd	r8, r9, [sp]
   14942:	bl	13fd0 <btrfs_add_link@@Base>
   14946:	mov	r4, r0
   14948:	b.n	148dc <btrfs_mkdir@@Base+0x90>
   1494a:	add	r3, sp, #40	; 0x28
   1494c:	mov	r2, r8
   1494e:	str	r3, [sp, #0]
   14950:	mov	r3, r9
   14952:	str	r1, [sp, #36]	; 0x24
   14954:	bl	e804 <btrfs_find_free_objectid@@Base>
   14958:	ldr	r1, [sp, #36]	; 0x24
   1495a:	mov	r4, r0
   1495c:	cmp	r0, #0
   1495e:	beq.n	1490a <btrfs_mkdir@@Base+0xbe>
   14960:	b.n	148dc <btrfs_mkdir@@Base+0x90>
   14962:	mvn.w	r4, #11
   14966:	b.n	148ee <btrfs_mkdir@@Base+0xa2>
   14968:	mov	r0, r4
   1496a:	add	sp, #76	; 0x4c
   1496c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14970:	str	r6, [r7, #72]	; 0x48
   14972:	movs	r5, r0
   14974:	lsls	r0, r1, #10
   14976:	movs	r0, r0
   14978:	str	r6, [r4, #64]	; 0x40
   1497a:	movs	r5, r0

0001497c <btrfs_mksubvol@@Base>:
   1497c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14980:	mov	r5, r0
   14982:	vpush	{d8}
   14986:	mov	r0, r1
   14988:	vmov	s16, r1
   1498c:	sub	sp, #436	; 0x1b4
   1498e:	strd	r2, r3, [sp, #56]	; 0x38
   14992:	ldrb.w	r3, [sp, #480]	; 0x1e0
   14996:	ldr	r2, [pc, #808]	; (14cc0 <btrfs_mksubvol@@Base+0x344>)
   14998:	str	r3, [sp, #76]	; 0x4c
   1499a:	add	r2, pc
   1499c:	ldr	r3, [pc, #804]	; (14cc4 <btrfs_mksubvol@@Base+0x348>)
   1499e:	ldr	r3, [r2, r3]
   149a0:	ldr	r3, [r3, #0]
   149a2:	str	r3, [sp, #428]	; 0x1ac
   149a4:	mov.w	r3, #0
   149a8:	blx	8f1c <strlen@plt>
   149ac:	mov	r4, r0
   149ae:	str	r0, [sp, #40]	; 0x28
   149b0:	cmp	r0, #0
   149b2:	beq.w	14cae <btrfs_mksubvol@@Base+0x332>
   149b6:	cmp	r0, #255	; 0xff
   149b8:	bgt.w	14cae <btrfs_mksubvol@@Base+0x332>
   149bc:	ldr.w	r3, [r5, #464]	; 0x1d0
   149c0:	add.w	r8, sp, #104	; 0x68
   149c4:	ldr.w	r9, [r5, #176]	; 0xb0
   149c8:	add	r6, sp, #84	; 0x54
   149ca:	ldr.w	sl, [r5, #180]	; 0xb4
   149ce:	mov	r0, r8
   149d0:	str	r3, [sp, #64]	; 0x40
   149d2:	movs	r7, #0
   149d4:	ldr	r3, [r3, #28]
   149d6:	vmov	s17, r3
   149da:	bl	1c6e8 <btrfs_init_path@@Base>
   149de:	mov.w	r2, #4294967295	; 0xffffffff
   149e2:	movs	r3, #96	; 0x60
   149e4:	strd	r9, sl, [r6]
   149e8:	mov	r1, r5
   149ea:	strb	r3, [r6, #8]
   149ec:	mov	r0, r7
   149ee:	strb.w	r2, [sp, #93]	; 0x5d
   149f2:	mov	r3, r8
   149f4:	strb.w	r2, [sp, #94]	; 0x5e
   149f8:	strb.w	r2, [sp, #95]	; 0x5f
   149fc:	strb.w	r2, [sp, #96]	; 0x60
   14a00:	strb.w	r2, [sp, #97]	; 0x61
   14a04:	strb.w	r2, [sp, #98]	; 0x62
   14a08:	strb.w	r2, [sp, #99]	; 0x63
   14a0c:	strb.w	r2, [sp, #100]	; 0x64
   14a10:	mov	r2, r6
   14a12:	strd	r7, r7, [sp]
   14a16:	bl	1eadc <btrfs_search_slot@@Base>
   14a1a:	cmp	r0, #0
   14a1c:	bgt.n	14a48 <btrfs_mksubvol@@Base+0xcc>
   14a1e:	str	r0, [sp, #0]
   14a20:	mov	r2, r9
   14a22:	ldr	r0, [pc, #676]	; (14cc8 <btrfs_mksubvol@@Base+0x34c>)
   14a24:	mov	r3, sl
   14a26:	add	r0, pc
   14a28:	bl	1bd1c <__btrfs_error@@Base>
   14a2c:	add	r0, sp, #104	; 0x68
   14a2e:	bl	1c6e8 <btrfs_init_path@@Base>
   14a32:	ldr	r2, [pc, #664]	; (14ccc <btrfs_mksubvol@@Base+0x350>)
   14a34:	ldr	r3, [pc, #652]	; (14cc4 <btrfs_mksubvol@@Base+0x348>)
   14a36:	add	r2, pc
   14a38:	ldr	r3, [r2, r3]
   14a3a:	ldr	r2, [r3, #0]
   14a3c:	ldr	r3, [sp, #428]	; 0x1ac
   14a3e:	eors	r2, r3
   14a40:	beq.w	14cb2 <btrfs_mksubvol@@Base+0x336>
   14a44:	blx	8c90 <__stack_chk_fail@plt>
   14a48:	ldr.w	r2, [r8, #32]
   14a4c:	cmp	r2, #0
   14a4e:	bgt.n	14a80 <btrfs_mksubvol@@Base+0x104>
   14a50:	movs	r3, #2
   14a52:	str	r3, [sp, #48]	; 0x30
   14a54:	movs	r3, #0
   14a56:	add	r2, sp, #104	; 0x68
   14a58:	str	r3, [sp, #52]	; 0x34
   14a5a:	str	r2, [sp, #44]	; 0x2c
   14a5c:	mov	r0, r2
   14a5e:	bl	1c6f8 <btrfs_release_path@@Base>
   14a62:	movs	r1, #1
   14a64:	mov	r0, r5
   14a66:	bl	2f81c <btrfs_start_transaction@@Base>
   14a6a:	ldr	r2, [sp, #44]	; 0x2c
   14a6c:	cmn.w	r0, #4096	; 0x1000
   14a70:	mov	r8, r0
   14a72:	bls.n	14ab4 <btrfs_mksubvol@@Base+0x138>
   14a74:	ldr	r0, [pc, #600]	; (14cd0 <btrfs_mksubvol@@Base+0x354>)
   14a76:	add	r0, pc
   14a78:	bl	1bd1c <__btrfs_error@@Base>
   14a7c:	movs	r7, #0
   14a7e:	b.n	14a2c <btrfs_mksubvol@@Base+0xb0>
   14a80:	subs	r2, #1
   14a82:	ldr.w	r0, [r8]
   14a86:	mov	r1, r6
   14a88:	str.w	r2, [r8, #32]
   14a8c:	bl	13e3c <task_period_stop@@Base+0x24>
   14a90:	ldrd	r2, r3, [r6]
   14a94:	cmp	r3, sl
   14a96:	it	eq
   14a98:	cmpeq	r2, r9
   14a9a:	bne.n	14a50 <btrfs_mksubvol@@Base+0xd4>
   14a9c:	ldrb	r3, [r6, #8]
   14a9e:	cmp	r3, #96	; 0x60
   14aa0:	bne.n	14a50 <btrfs_mksubvol@@Base+0xd4>
   14aa2:	ldr.w	r3, [r6, #9]
   14aa6:	ldr.w	r2, [r6, #13]
   14aaa:	adds	r3, #1
   14aac:	str	r3, [sp, #48]	; 0x30
   14aae:	adc.w	r3, r2, #0
   14ab2:	b.n	14a56 <btrfs_mksubvol@@Base+0xda>
   14ab4:	add.w	r6, sp, #93	; 0x5d
   14ab8:	add.w	fp, sp, #84	; 0x54
   14abc:	movs	r7, #0
   14abe:	movs	r3, #1
   14ac0:	strd	r9, sl, [fp]
   14ac4:	mov	r1, r5
   14ac6:	strb.w	r3, [fp, #8]
   14aca:	strb	r7, [r6, #0]
   14acc:	strb	r7, [r6, #1]
   14ace:	strb	r7, [r6, #2]
   14ad0:	strb	r7, [r6, #3]
   14ad2:	strb	r7, [r6, #4]
   14ad4:	strb	r7, [r6, #5]
   14ad6:	strb	r7, [r6, #6]
   14ad8:	strb	r7, [r6, #7]
   14ada:	str	r3, [sp, #0]
   14adc:	mov	r3, fp
   14ade:	str	r2, [sp, #68]	; 0x44
   14ae0:	bl	32060 <btrfs_lookup_inode@@Base>
   14ae4:	ldr	r2, [sp, #68]	; 0x44
   14ae6:	str	r0, [sp, #44]	; 0x2c
   14ae8:	cbz	r0, 14af6 <btrfs_mksubvol@@Base+0x17a>
   14aea:	str	r0, [sp, #0]
   14aec:	mov	r2, r9
   14aee:	ldr	r0, [pc, #484]	; (14cd4 <btrfs_mksubvol@@Base+0x358>)
   14af0:	mov	r3, sl
   14af2:	add	r0, pc
   14af4:	b.n	14a28 <btrfs_mksubvol@@Base+0xac>
   14af6:	ldr	r7, [r2, #0]
   14af8:	add.w	r3, r7, #96	; 0x60
   14afc:	str	r3, [sp, #68]	; 0x44
   14afe:	ldr	r1, [sp, #68]	; 0x44
   14b00:	ldr	r3, [r2, #32]
   14b02:	movs	r2, #25
   14b04:	mla	r3, r2, r3, r1
   14b08:	vmov	r1, s16
   14b0c:	mov	r2, r4
   14b0e:	ldr.w	r3, [r3, #118]	; 0x76
   14b12:	str	r3, [sp, #72]	; 0x48
   14b14:	ldr	r3, [sp, #56]	; 0x38
   14b16:	str.w	r3, [fp]
   14b1a:	ldr	r3, [sp, #60]	; 0x3c
   14b1c:	str.w	r3, [fp, #4]
   14b20:	mov.w	r3, #4294967295	; 0xffffffff
   14b24:	strb	r3, [r6, #0]
   14b26:	strb	r3, [r6, #1]
   14b28:	strb	r3, [r6, #2]
   14b2a:	strb	r3, [r6, #3]
   14b2c:	strb	r3, [r6, #4]
   14b2e:	strb	r3, [r6, #5]
   14b30:	strb	r3, [r6, #6]
   14b32:	strb	r3, [r6, #7]
   14b34:	add	r6, sp, #172	; 0xac
   14b36:	movs	r3, #132	; 0x84
   14b38:	strb.w	r3, [fp, #8]
   14b3c:	mov	r0, r6
   14b3e:	mov.w	r3, #256	; 0x100
   14b42:	blx	8d2c <__memcpy_chk@plt>
   14b46:	ldr	r3, [sp, #76]	; 0x4c
   14b48:	cbz	r3, 14bac <btrfs_mksubvol@@Base+0x230>
   14b4a:	ldr.w	fp, [pc, #396]	; 14cd8 <btrfs_mksubvol@@Base+0x35c>
   14b4e:	mov	r4, r6
   14b50:	add	fp, pc
   14b52:	ldr	r3, [sp, #48]	; 0x30
   14b54:	mov	r2, r4
   14b56:	mov	r1, r5
   14b58:	mov	r0, r8
   14b5a:	strd	r9, sl, [sp]
   14b5e:	str	r3, [sp, #16]
   14b60:	ldr	r3, [sp, #52]	; 0x34
   14b62:	str	r3, [sp, #20]
   14b64:	movs	r3, #2
   14b66:	str	r3, [sp, #12]
   14b68:	add	r3, sp, #84	; 0x54
   14b6a:	str	r3, [sp, #8]
   14b6c:	ldr	r3, [sp, #40]	; 0x28
   14b6e:	bl	e4dc <btrfs_insert_dir_item@@Base>
   14b72:	cmn.w	r0, #17
   14b76:	mov	r6, r0
   14b78:	bne.n	14bcc <btrfs_mksubvol@@Base+0x250>
   14b7a:	ldr	r3, [sp, #44]	; 0x2c
   14b7c:	movs	r2, #1
   14b7e:	mov	r0, r4
   14b80:	str	r3, [sp, #8]
   14b82:	vmov	r3, s16
   14b86:	strd	fp, r3, [sp]
   14b8a:	mov.w	r3, #256	; 0x100
   14b8e:	mov	r1, r3
   14b90:	blx	9208 <__snprintf_chk@plt>
   14b94:	subs	r3, r0, #1
   14b96:	str	r0, [sp, #40]	; 0x28
   14b98:	cmp	r3, #254	; 0xfe
   14b9a:	bhi.w	14a7c <btrfs_mksubvol@@Base+0x100>
   14b9e:	ldr	r3, [sp, #44]	; 0x2c
   14ba0:	adds	r3, #1
   14ba2:	str	r3, [sp, #44]	; 0x2c
   14ba4:	cmp.w	r3, #1024	; 0x400
   14ba8:	bne.n	14b52 <btrfs_mksubvol@@Base+0x1d6>
   14baa:	b.n	14a7c <btrfs_mksubvol@@Base+0x100>
   14bac:	ldr	r3, [sp, #48]	; 0x30
   14bae:	mov	r2, r6
   14bb0:	mov	r1, r5
   14bb2:	mov	r0, r8
   14bb4:	strd	r9, sl, [sp]
   14bb8:	str	r3, [sp, #16]
   14bba:	ldr	r3, [sp, #52]	; 0x34
   14bbc:	str	r3, [sp, #20]
   14bbe:	movs	r3, #2
   14bc0:	strd	fp, r3, [sp, #8]
   14bc4:	mov	r3, r4
   14bc6:	bl	e4dc <btrfs_insert_dir_item@@Base>
   14bca:	mov	r6, r0
   14bcc:	cmp	r6, #0
   14bce:	bne.w	14a7c <btrfs_mksubvol@@Base+0x100>
   14bd2:	ldr	r3, [sp, #72]	; 0x48
   14bd4:	add	r4, sp, #172	; 0xac
   14bd6:	ldr	r2, [sp, #68]	; 0x44
   14bd8:	adds	r3, #101	; 0x65
   14bda:	add	r2, r3
   14bdc:	mov	r3, r2
   14bde:	ldr	r0, [r2, #16]
   14be0:	ldr	r1, [r2, #20]
   14be2:	ldr	r2, [sp, #40]	; 0x28
   14be4:	lsls	r2, r2, #1
   14be6:	adds	r0, r0, r2
   14be8:	str	r0, [r3, #16]
   14bea:	adc.w	r1, r1, r2, asr #31
   14bee:	mov	r0, r7
   14bf0:	str	r1, [r3, #20]
   14bf2:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   14bf6:	add	r0, sp, #104	; 0x68
   14bf8:	bl	1c6f8 <btrfs_release_path@@Base>
   14bfc:	ldr	r3, [sp, #40]	; 0x28
   14bfe:	ldr.w	r2, [r5, #447]	; 0x1bf
   14c02:	mov	r0, r8
   14c04:	vmov	r1, s17
   14c08:	str	r3, [sp, #36]	; 0x24
   14c0a:	ldr	r3, [sp, #48]	; 0x30
   14c0c:	str	r4, [sp, #32]
   14c0e:	strd	r9, sl, [sp, #16]
   14c12:	str	r3, [sp, #24]
   14c14:	ldr	r3, [sp, #52]	; 0x34
   14c16:	str	r3, [sp, #28]
   14c18:	ldr.w	r3, [r5, #451]	; 0x1c3
   14c1c:	strd	r2, r3, [sp, #8]
   14c20:	movs	r3, #144	; 0x90
   14c22:	str	r3, [sp, #0]
   14c24:	ldrd	r2, r3, [sp, #56]	; 0x38
   14c28:	bl	2c4c8 <btrfs_add_root_ref@@Base>
   14c2c:	ldr.w	r2, [r5, #447]	; 0x1bf
   14c30:	ldr.w	r3, [r5, #451]	; 0x1c3
   14c34:	cbz	r0, 14c44 <btrfs_mksubvol@@Base+0x2c8>
   14c36:	str	r0, [sp, #0]
   14c38:	ldr	r0, [pc, #160]	; (14cdc <btrfs_mksubvol@@Base+0x360>)
   14c3a:	add	r0, pc
   14c3c:	bl	1bd1c <__btrfs_error@@Base>
   14c40:	mov	r7, r6
   14c42:	b.n	14a2c <btrfs_mksubvol@@Base+0xb0>
   14c44:	ldr	r1, [sp, #40]	; 0x28
   14c46:	mov	r0, r8
   14c48:	strd	r9, sl, [sp, #16]
   14c4c:	strd	r4, r1, [sp, #32]
   14c50:	ldr	r1, [sp, #48]	; 0x30
   14c52:	str	r1, [sp, #24]
   14c54:	ldr	r1, [sp, #52]	; 0x34
   14c56:	str	r1, [sp, #28]
   14c58:	ldr	r1, [sp, #56]	; 0x38
   14c5a:	str	r1, [sp, #8]
   14c5c:	ldr	r1, [sp, #60]	; 0x3c
   14c5e:	str	r1, [sp, #12]
   14c60:	movs	r1, #156	; 0x9c
   14c62:	str	r1, [sp, #0]
   14c64:	vmov	r1, s17
   14c68:	bl	2c4c8 <btrfs_add_root_ref@@Base>
   14c6c:	cbz	r0, 14c7e <btrfs_mksubvol@@Base+0x302>
   14c6e:	str	r0, [sp, #0]
   14c70:	ldr	r0, [pc, #108]	; (14ce0 <btrfs_mksubvol@@Base+0x364>)
   14c72:	ldr.w	r2, [r5, #447]	; 0x1bf
   14c76:	ldr.w	r3, [r5, #451]	; 0x1c3
   14c7a:	add	r0, pc
   14c7c:	b.n	14c3c <btrfs_mksubvol@@Base+0x2c0>
   14c7e:	mov	r1, r5
   14c80:	mov	r0, r8
   14c82:	bl	2fa9c <btrfs_commit_transaction@@Base>
   14c86:	mov	r1, r0
   14c88:	cbz	r0, 14c94 <btrfs_mksubvol@@Base+0x318>
   14c8a:	ldr	r0, [pc, #88]	; (14ce4 <btrfs_mksubvol@@Base+0x368>)
   14c8c:	add	r0, pc
   14c8e:	bl	1bd1c <__btrfs_error@@Base>
   14c92:	b.n	14c40 <btrfs_mksubvol@@Base+0x2c4>
   14c94:	ldr	r0, [sp, #64]	; 0x40
   14c96:	add	r1, sp, #84	; 0x54
   14c98:	bl	222a6 <btrfs_read_fs_root@@Base>
   14c9c:	cmn.w	r0, #4096	; 0x1000
   14ca0:	mov	r7, r0
   14ca2:	bls.w	14a2c <btrfs_mksubvol@@Base+0xb0>
   14ca6:	mov	r1, r0
   14ca8:	ldr	r0, [pc, #60]	; (14ce8 <btrfs_mksubvol@@Base+0x36c>)
   14caa:	add	r0, pc
   14cac:	b.n	14c8e <btrfs_mksubvol@@Base+0x312>
   14cae:	movs	r7, #0
   14cb0:	b.n	14a32 <btrfs_mksubvol@@Base+0xb6>
   14cb2:	mov	r0, r7
   14cb4:	add	sp, #436	; 0x1b4
   14cb6:	vpop	{d8}
   14cba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cbe:	nop
   14cc0:	str	r6, [r7, #52]	; 0x34
   14cc2:	movs	r5, r0
   14cc4:	lsls	r0, r1, #10
   14cc6:	movs	r0, r0
   14cc8:			; <UNDEFINED> instruction: 0xb871
   14cca:	movs	r2, r0
   14ccc:	str	r2, [r4, #44]	; 0x2c
   14cce:	movs	r5, r0
   14cd0:	ldr	r6, [sp, #812]	; 0x32c
   14cd2:	movs	r2, r0
   14cd4:			; <UNDEFINED> instruction: 0xb7d0
   14cd6:	movs	r2, r0
   14cd8:			; <UNDEFINED> instruction: 0xb798
   14cda:	movs	r2, r0
   14cdc:			; <UNDEFINED> instruction: 0xb6b3
   14cde:	movs	r2, r0
   14ce0:			; <UNDEFINED> instruction: 0xb69b
   14ce2:	movs	r2, r0
   14ce4:			; <UNDEFINED> instruction: 0xb6ad
   14ce6:	movs	r2, r0
   14ce8:	str	r6, [sp, #548]	; 0x224
   14cea:	movs	r2, r0
   14cec:	push	{r4, lr}
   14cee:	mov	r4, r1
   14cf0:	ldr	r1, [pc, #84]	; (14d48 <btrfs_mksubvol@@Base+0x3cc>)
   14cf2:	sub	sp, #24
   14cf4:	ldr	r3, [pc, #84]	; (14d4c <btrfs_mksubvol@@Base+0x3d0>)
   14cf6:	add	r1, pc
   14cf8:	ldr	r3, [r1, r3]
   14cfa:	mov	r1, sp
   14cfc:	ldr	r3, [r3, #0]
   14cfe:	str	r3, [sp, #20]
   14d00:	mov.w	r3, #0
   14d04:	movs	r3, #25
   14d06:	muls	r2, r3
   14d08:	movs	r3, #17
   14d0a:	adds	r2, #101	; 0x65
   14d0c:	bl	1bbba <read_extent_buffer@@Base>
   14d10:	ldr.w	r3, [sp, #13]
   14d14:	ldr.w	r2, [sp, #9]
   14d18:	str.w	r3, [r4, #13]
   14d1c:	ldrb.w	r3, [sp, #8]
   14d20:	str.w	r2, [r4, #9]
   14d24:	ldr	r2, [pc, #40]	; (14d50 <btrfs_mksubvol@@Base+0x3d4>)
   14d26:	strb	r3, [r4, #8]
   14d28:	ldr	r3, [sp, #0]
   14d2a:	add	r2, pc
   14d2c:	str	r3, [r4, #0]
   14d2e:	ldr	r3, [sp, #4]
   14d30:	str	r3, [r4, #4]
   14d32:	ldr	r3, [pc, #24]	; (14d4c <btrfs_mksubvol@@Base+0x3d0>)
   14d34:	ldr	r3, [r2, r3]
   14d36:	ldr	r2, [r3, #0]
   14d38:	ldr	r3, [sp, #20]
   14d3a:	eors	r2, r3
   14d3c:	beq.n	14d42 <btrfs_mksubvol@@Base+0x3c6>
   14d3e:	blx	8c90 <__stack_chk_fail@plt>
   14d42:	add	sp, #24
   14d44:	pop	{r4, pc}
   14d46:	nop
   14d48:	str	r2, [r4, #0]
   14d4a:	movs	r5, r0
   14d4c:	lsls	r0, r1, #10
   14d4e:	movs	r0, r0
   14d50:	ldrsh	r6, [r5, r7]
   14d52:	movs	r5, r0

00014d54 <btrfs_get_extent@@Base>:
   14d54:	ldr.w	ip, [pc, #380]	; 14ed4 <btrfs_get_extent@@Base+0x180>
   14d58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d5c:	mov	r4, r2
   14d5e:	ldr	r2, [pc, #376]	; (14ed8 <btrfs_get_extent@@Base+0x184>)
   14d60:	add	ip, pc
   14d62:	sub	sp, #76	; 0x4c
   14d64:	mov	r5, r1
   14d66:	mov.w	r9, #108	; 0x6c
   14d6a:	ldr.w	r2, [ip, r2]
   14d6e:	ldr	r3, [sp, #136]	; 0x88
   14d70:	ldr	r2, [r2, #0]
   14d72:	str	r2, [sp, #68]	; 0x44
   14d74:	mov.w	r2, #0
   14d78:	ldr	r2, [sp, #120]	; 0x78
   14d7a:	ldrd	r6, r7, [sp, #112]	; 0x70
   14d7e:	ldrd	r8, sl, [sp, #128]	; 0x80
   14d82:	str.w	r2, [sp, #37]	; 0x25
   14d86:	ldr	r2, [sp, #124]	; 0x7c
   14d88:	strd	r6, r7, [sp, #28]
   14d8c:	strb.w	r9, [sp, #36]	; 0x24
   14d90:	str.w	r2, [sp, #41]	; 0x29
   14d94:	subs	r2, r3, #0
   14d96:	it	ne
   14d98:	movne	r2, #1
   14d9a:	strd	r3, r2, [sp]
   14d9e:	add	r2, sp, #28
   14da0:	mov	r3, r4
   14da2:	bl	1eadc <btrfs_search_slot@@Base>
   14da6:	subs.w	fp, r0, #0
   14daa:	ble.w	14ebe <btrfs_get_extent@@Base+0x16a>
   14dae:	mov	r2, r6
   14db0:	mov	r3, r7
   14db2:	mov	r1, r4
   14db4:	mov	r0, r5
   14db6:	str.w	r9, [sp]
   14dba:	bl	20194 <btrfs_previous_item@@Base>
   14dbe:	subs.w	fp, r0, #0
   14dc2:	blt.n	14eaa <btrfs_get_extent@@Base+0x156>
   14dc4:	beq.n	14e52 <btrfs_get_extent@@Base+0xfe>
   14dc6:	ldr	r2, [r4, #0]
   14dc8:	ldr	r3, [r4, #32]
   14dca:	adds	r3, #1
   14dcc:	str	r3, [r4, #32]
   14dce:	ldr.w	r2, [r2, #192]	; 0xc0
   14dd2:	cmp	r3, r2
   14dd4:	bcc.n	14dec <btrfs_get_extent@@Base+0x98>
   14dd6:	movs	r3, #0
   14dd8:	mov	r1, r4
   14dda:	strb.w	r3, [r4, #65]	; 0x41
   14dde:	ldr.w	r0, [r5, #464]	; 0x1d0
   14de2:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   14de6:	mov	fp, r0
   14de8:	cmp	r0, #0
   14dea:	bne.n	14eaa <btrfs_get_extent@@Base+0x156>
   14dec:	ldr	r2, [r4, #32]
   14dee:	add	r1, sp, #48	; 0x30
   14df0:	ldr	r0, [r4, #0]
   14df2:	bl	14cec <btrfs_mksubvol@@Base+0x370>
   14df6:	ldrd	r2, r3, [sp, #48]	; 0x30
   14dfa:	cmp	r3, r7
   14dfc:	it	eq
   14dfe:	cmpeq	r2, r6
   14e00:	bne.n	14ec0 <btrfs_get_extent@@Base+0x16c>
   14e02:	ldrb.w	r3, [sp, #56]	; 0x38
   14e06:	cmp	r3, #108	; 0x6c
   14e08:	bne.n	14ec0 <btrfs_get_extent@@Base+0x16c>
   14e0a:	ldr	r1, [sp, #120]	; 0x78
   14e0c:	ldr.w	r3, [sp, #61]	; 0x3d
   14e10:	adds.w	r1, r1, r8
   14e14:	str	r1, [sp, #16]
   14e16:	ldr	r1, [sp, #124]	; 0x7c
   14e18:	ldr.w	r2, [sp, #57]	; 0x39
   14e1c:	adc.w	r1, r1, sl
   14e20:	str	r1, [sp, #20]
   14e22:	ldrd	r0, r1, [sp, #16]
   14e26:	cmp	r3, r1
   14e28:	ldr	r3, [r4, #32]
   14e2a:	it	eq
   14e2c:	cmpeq	r2, r0
   14e2e:	ite	cs
   14e30:	movcs.w	fp, #1
   14e34:	movcc.w	fp, #0
   14e38:	cmp	r3, #0
   14e3a:	bne.n	14eaa <btrfs_get_extent@@Base+0x156>
   14e3c:	mov	r1, r4
   14e3e:	mov	r0, r5
   14e40:	bl	1fe88 <btrfs_prev_leaf@@Base>
   14e44:	cmp	r0, #0
   14e46:	bne.n	14ec6 <btrfs_get_extent@@Base+0x172>
   14e48:	ldr	r3, [r4, #0]
   14e4a:	ldr.w	r3, [r3, #192]	; 0xc0
   14e4e:	str	r3, [r4, #32]
   14e50:	b.n	14eaa <btrfs_get_extent@@Base+0x156>
   14e52:	ldr	r2, [r4, #32]
   14e54:	add	r1, sp, #48	; 0x30
   14e56:	ldr	r0, [r4, #0]
   14e58:	bl	14cec <btrfs_mksubvol@@Base+0x370>
   14e5c:	ldrd	r2, r3, [sp, #48]	; 0x30
   14e60:	cmp	r3, r7
   14e62:	it	eq
   14e64:	cmpeq	r2, r6
   14e66:	bne.n	14dc6 <btrfs_get_extent@@Base+0x72>
   14e68:	ldrb.w	r3, [sp, #56]	; 0x38
   14e6c:	cmp	r3, #108	; 0x6c
   14e6e:	bne.n	14dc6 <btrfs_get_extent@@Base+0x72>
   14e70:	ldr	r3, [r4, #0]
   14e72:	movs	r1, #25
   14e74:	ldr	r2, [r4, #32]
   14e76:	adds	r3, #96	; 0x60
   14e78:	mla	r2, r1, r2, r3
   14e7c:	ldr.w	r1, [sp, #61]	; 0x3d
   14e80:	ldr.w	r2, [r2, #118]	; 0x76
   14e84:	add	r3, r2
   14e86:	ldr.w	r2, [r3, #109]!
   14e8a:	ldr	r0, [r3, #4]
   14e8c:	ldr.w	r3, [sp, #57]	; 0x39
   14e90:	adds	r3, r2, r3
   14e92:	str	r3, [sp, #8]
   14e94:	adc.w	r3, r0, r1
   14e98:	str	r3, [sp, #12]
   14e9a:	ldrd	r0, r1, [sp, #8]
   14e9e:	ldrd	r2, r3, [sp, #120]	; 0x78
   14ea2:	cmp	r3, r1
   14ea4:	it	eq
   14ea6:	cmpeq	r2, r0
   14ea8:	bcs.n	14dc6 <btrfs_get_extent@@Base+0x72>
   14eaa:	ldr	r2, [pc, #48]	; (14edc <btrfs_get_extent@@Base+0x188>)
   14eac:	ldr	r3, [pc, #40]	; (14ed8 <btrfs_get_extent@@Base+0x184>)
   14eae:	add	r2, pc
   14eb0:	ldr	r3, [r2, r3]
   14eb2:	ldr	r2, [r3, #0]
   14eb4:	ldr	r3, [sp, #68]	; 0x44
   14eb6:	eors	r2, r3
   14eb8:	beq.n	14eca <btrfs_get_extent@@Base+0x176>
   14eba:	blx	8c90 <__stack_chk_fail@plt>
   14ebe:	bne.n	14eaa <btrfs_get_extent@@Base+0x156>
   14ec0:	mov.w	fp, #1
   14ec4:	b.n	14eaa <btrfs_get_extent@@Base+0x156>
   14ec6:	mov	fp, r0
   14ec8:	b.n	14eaa <btrfs_get_extent@@Base+0x156>
   14eca:	mov	r0, fp
   14ecc:	add	sp, #76	; 0x4c
   14ece:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ed2:	nop
   14ed4:	ldrsh	r0, [r7, r6]
   14ed6:	movs	r5, r0
   14ed8:	lsls	r0, r1, #10
   14eda:	movs	r0, r0
   14edc:	ldrsh	r2, [r5, r1]
   14ede:	movs	r5, r0

00014ee0 <btrfs_punch_hole@@Base>:
   14ee0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14ee4:	sub	sp, #40	; 0x28
   14ee6:	mov	sl, r0
   14ee8:	mov	r5, r2
   14eea:	ldrd	r8, r9, [sp, #80]	; 0x50
   14eee:	mov	r7, r3
   14ef0:	str	r1, [sp, #36]	; 0x24
   14ef2:	bl	1c6f0 <btrfs_alloc_path@@Base>
   14ef6:	mov	r4, r0
   14ef8:	cbz	r0, 14f56 <btrfs_punch_hole@@Base+0x76>
   14efa:	ldrd	r2, r3, [sp, #72]	; 0x48
   14efe:	movs	r0, #0
   14f00:	ldr	r1, [sp, #36]	; 0x24
   14f02:	str	r0, [sp, #24]
   14f04:	strd	r2, r3, [sp, #8]
   14f08:	mov	r2, r4
   14f0a:	strd	r8, r9, [sp, #16]
   14f0e:	strd	r5, r7, [sp]
   14f12:	bl	14d54 <btrfs_get_extent@@Base>
   14f16:	subs	r6, r0, #0
   14f18:	blt.n	14f42 <btrfs_punch_hole@@Base+0x62>
   14f1a:	beq.n	14f50 <btrfs_punch_hole@@Base+0x70>
   14f1c:	movs	r2, #0
   14f1e:	movs	r3, #0
   14f20:	strd	r2, r3, [sp, #16]
   14f24:	mov	r0, sl
   14f26:	strd	r2, r3, [sp, #8]
   14f2a:	ldrd	r2, r3, [sp, #72]	; 0x48
   14f2e:	ldr	r1, [sp, #36]	; 0x24
   14f30:	strd	r8, r9, [sp, #24]
   14f34:	strd	r2, r3, [sp]
   14f38:	mov	r2, r5
   14f3a:	mov	r3, r7
   14f3c:	bl	3296a <btrfs_insert_file_extent@@Base>
   14f40:	mov	r6, r0
   14f42:	mov	r0, r4
   14f44:	bl	1c71e <btrfs_free_path@@Base>
   14f48:	mov	r0, r6
   14f4a:	add	sp, #40	; 0x28
   14f4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   14f50:	mvn.w	r6, #16
   14f54:	b.n	14f42 <btrfs_punch_hole@@Base+0x62>
   14f56:	mvn.w	r6, #11
   14f5a:	b.n	14f48 <btrfs_punch_hole@@Base+0x68>

00014f5c <btrfs_read_file@@Base>:
   14f5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f60:	mov	r6, r0
   14f62:	vpush	{d8}
   14f66:	sub	sp, #180	; 0xb4
   14f68:	ldr.w	r8, [r0, #464]	; 0x1d0
   14f6c:	strd	r2, r3, [sp, #8]
   14f70:	ldr	r3, [sp, #236]	; 0xec
   14f72:	ldr	r2, [pc, #856]	; (152cc <btrfs_read_file@@Base+0x370>)
   14f74:	ldr.w	r4, [r8, #388]	; 0x184
   14f78:	vmov	s16, r3
   14f7c:	ldr	r3, [pc, #848]	; (152d0 <btrfs_read_file@@Base+0x374>)
   14f7e:	add	r2, pc
   14f80:	ldrd	sl, fp, [sp, #224]	; 0xe0
   14f84:	ldr	r3, [r2, r3]
   14f86:	movs	r2, #0
   14f88:	ldr	r3, [r3, #0]
   14f8a:	str	r3, [sp, #172]	; 0xac
   14f8c:	mov.w	r3, #0
   14f90:	ldr.w	r3, [r8, #308]	; 0x134
   14f94:	ldr.w	r3, [r3, #188]	; 0xbc
   14f98:	str	r3, [sp, #68]	; 0x44
   14f9a:	adds.w	r3, r4, #4294967295	; 0xffffffff
   14f9e:	adc.w	r2, r2, #4294967295	; 0xffffffff
   14fa2:	and.w	r0, r3, sl
   14fa6:	and.w	r1, r2, fp
   14faa:	orrs.w	r3, r0, r1
   14fae:	bne.n	14fb8 <btrfs_read_file@@Base+0x5c>
   14fb0:	ldr	r3, [sp, #232]	; 0xe8
   14fb2:	subs	r5, r4, #1
   14fb4:	ands	r5, r3
   14fb6:	beq.n	14fe0 <btrfs_read_file@@Base+0x84>
   14fb8:	ldr	r2, [pc, #792]	; (152d4 <btrfs_read_file@@Base+0x378>)
   14fba:	mov	r1, r4
   14fbc:	ldr	r0, [pc, #792]	; (152d8 <btrfs_read_file@@Base+0x37c>)
   14fbe:	mvn.w	r4, #21
   14fc2:	add	r2, pc
   14fc4:	add	r0, pc
   14fc6:	bl	1bca0 <__btrfs_warning@@Base>
   14fca:	ldr	r2, [pc, #784]	; (152dc <btrfs_read_file@@Base+0x380>)
   14fcc:	ldr	r3, [pc, #768]	; (152d0 <btrfs_read_file@@Base+0x374>)
   14fce:	add	r2, pc
   14fd0:	ldr	r3, [r2, r3]
   14fd2:	ldr	r2, [r3, #0]
   14fd4:	ldr	r3, [sp, #172]	; 0xac
   14fd6:	eors	r2, r3
   14fd8:	beq.w	152be <btrfs_read_file@@Base+0x362>
   14fdc:	blx	8c90 <__stack_chk_fail@plt>
   14fe0:	add.w	r9, sp, #104	; 0x68
   14fe4:	movs	r7, #108	; 0x6c
   14fe6:	mov	r0, r9
   14fe8:	bl	1c6e8 <btrfs_init_path@@Base>
   14fec:	ldr	r3, [sp, #8]
   14fee:	add	r2, sp, #84	; 0x54
   14ff0:	mov	r1, r6
   14ff2:	mov	r0, r5
   14ff4:	strd	r5, r5, [sp]
   14ff8:	str	r3, [sp, #84]	; 0x54
   14ffa:	ldr	r3, [sp, #12]
   14ffc:	str.w	sl, [sp, #93]	; 0x5d
   15000:	str.w	fp, [sp, #97]	; 0x61
   15004:	str	r3, [sp, #88]	; 0x58
   15006:	mov	r3, r9
   15008:	strb.w	r7, [sp, #92]	; 0x5c
   1500c:	bl	1eadc <btrfs_search_slot@@Base>
   15010:	subs	r4, r0, #0
   15012:	blt.w	151a8 <btrfs_read_file@@Base+0x24c>
   15016:	beq.n	1502c <btrfs_read_file@@Base+0xd0>
   15018:	ldrd	r2, r3, [sp, #8]
   1501c:	mov	r1, r9
   1501e:	mov	r0, r6
   15020:	str	r7, [sp, #0]
   15022:	bl	20194 <btrfs_previous_item@@Base>
   15026:	subs	r4, r0, #0
   15028:	bgt.w	152b8 <btrfs_read_file@@Base+0x35c>
   1502c:	ldr	r2, [sp, #232]	; 0xe8
   1502e:	movs	r1, #0
   15030:	vmov	r0, s16
   15034:	movs	r5, #0
   15036:	blx	8f98 <memset@plt+0x4>
   1503a:	ldr	r3, [sp, #232]	; 0xe8
   1503c:	adds.w	r2, sl, r3
   15040:	adc.w	r3, fp, r3, asr #31
   15044:	strd	r2, r3, [sp, #40]	; 0x28
   15048:	ldr	r7, [sp, #136]	; 0x88
   1504a:	add	r1, sp, #84	; 0x54
   1504c:	ldr	r0, [sp, #104]	; 0x68
   1504e:	mov	r2, r7
   15050:	str	r0, [sp, #52]	; 0x34
   15052:	bl	14cec <btrfs_mksubvol@@Base+0x370>
   15056:	ldrd	r2, r3, [sp, #84]	; 0x54
   1505a:	ldrd	r0, r1, [sp, #8]
   1505e:	cmp	r1, r3
   15060:	it	eq
   15062:	cmpeq	r0, r2
   15064:	bcc.n	150f8 <btrfs_read_file@@Base+0x19c>
   15066:	ldrb.w	r1, [sp, #92]	; 0x5c
   1506a:	cmp	r1, #108	; 0x6c
   1506c:	bne.w	1522a <btrfs_read_file@@Base+0x2ce>
   15070:	ldrd	r0, r1, [sp, #8]
   15074:	cmp	r3, r1
   15076:	it	eq
   15078:	cmpeq	r2, r0
   1507a:	bne.w	1522a <btrfs_read_file@@Base+0x2ce>
   1507e:	ldrd	r0, r1, [sp, #40]	; 0x28
   15082:	ldr.w	r3, [sp, #97]	; 0x61
   15086:	ldr.w	r2, [sp, #93]	; 0x5d
   1508a:	cmp	r3, r1
   1508c:	it	eq
   1508e:	cmpeq	r2, r0
   15090:	bcs.n	150f8 <btrfs_read_file@@Base+0x19c>
   15092:	ldr	r0, [sp, #52]	; 0x34
   15094:	movs	r1, #25
   15096:	add.w	ip, r0, #96	; 0x60
   1509a:	mla	r7, r1, r7, ip
   1509e:	ldr.w	r1, [r7, #118]	; 0x76
   150a2:	add.w	r7, r1, #101	; 0x65
   150a6:	add	ip, r7
   150a8:	str	r1, [sp, #52]	; 0x34
   150aa:	ldrb.w	r7, [ip, #16]
   150ae:	cmp	r7, #0
   150b0:	bne.w	152b2 <btrfs_read_file@@Base+0x356>
   150b4:	ldrb.w	r7, [ip, #20]
   150b8:	cmp	r7, #0
   150ba:	bne.n	151b6 <btrfs_read_file@@Base+0x25a>
   150bc:	ldr.w	r7, [ip, #8]
   150c0:	ldr.w	lr, [ip, #12]
   150c4:	adds	r1, r2, r7
   150c6:	str	r1, [sp, #56]	; 0x38
   150c8:	adc.w	r3, r3, lr
   150cc:	str	r3, [sp, #60]	; 0x3c
   150ce:	ldrd	r2, r3, [sp, #56]	; 0x38
   150d2:	cmp	fp, r3
   150d4:	it	eq
   150d6:	cmpeq	sl, r2
   150d8:	bcs.w	1522a <btrfs_read_file@@Base+0x2ce>
   150dc:	ldr	r2, [sp, #52]	; 0x34
   150de:	mov	r3, r7
   150e0:	vmov	r1, s16
   150e4:	subs	r7, #1
   150e6:	adds	r2, #122	; 0x7a
   150e8:	adds	r5, #1
   150ea:	bl	1bbba <read_extent_buffer@@Base>
   150ee:	ldr.w	r3, [r8, #388]	; 0x184
   150f2:	subs	r3, #1
   150f4:	orrs	r3, r7
   150f6:	add	r5, r3
   150f8:	ldr	r1, [sp, #68]	; 0x44
   150fa:	movs	r7, #0
   150fc:	mov	r3, r7
   150fe:	and.w	r2, r1, #512	; 0x200
   15102:	orrs	r3, r2
   15104:	beq.n	151a8 <btrfs_read_file@@Base+0x24c>
   15106:	mov	r0, r9
   15108:	bl	1c6f8 <btrfs_release_path@@Base>
   1510c:	ldr	r3, [sp, #8]
   1510e:	mov	r2, r9
   15110:	mov	r1, r6
   15112:	mov	r0, r7
   15114:	str	r7, [sp, #0]
   15116:	str	r3, [sp, #84]	; 0x54
   15118:	ldr	r3, [sp, #12]
   1511a:	strb.w	r7, [sp, #93]	; 0x5d
   1511e:	strb.w	r7, [sp, #94]	; 0x5e
   15122:	str	r3, [sp, #88]	; 0x58
   15124:	movs	r3, #1
   15126:	strb.w	r3, [sp, #92]	; 0x5c
   1512a:	add	r3, sp, #84	; 0x54
   1512c:	strb.w	r7, [sp, #95]	; 0x5f
   15130:	strb.w	r7, [sp, #96]	; 0x60
   15134:	strb.w	r7, [sp, #97]	; 0x61
   15138:	strb.w	r7, [sp, #98]	; 0x62
   1513c:	strb.w	r7, [sp, #99]	; 0x63
   15140:	strb.w	r7, [sp, #100]	; 0x64
   15144:	bl	32060 <btrfs_lookup_inode@@Base>
   15148:	subs	r4, r0, #0
   1514a:	blt.n	151a8 <btrfs_read_file@@Base+0x24c>
   1514c:	bne.w	152b8 <btrfs_read_file@@Base+0x35c>
   15150:	ldr	r3, [sp, #104]	; 0x68
   15152:	movs	r1, #25
   15154:	ldr	r2, [sp, #136]	; 0x88
   15156:	adds	r3, #96	; 0x60
   15158:	ldr.w	r5, [r8, #388]	; 0x184
   1515c:	mla	r2, r1, r2, r3
   15160:	subs	r5, #1
   15162:	ldr.w	r2, [r2, #118]	; 0x76
   15166:	add	r3, r2
   15168:	ldr.w	r2, [r3, #117]!
   1516c:	adds.w	r2, r2, #4294967295	; 0xffffffff
   15170:	ldr	r1, [r3, #4]
   15172:	ldr	r3, [sp, #232]	; 0xe8
   15174:	adc.w	r0, r1, #4294967295	; 0xffffffff
   15178:	orr.w	r1, r2, r5
   1517c:	subs.w	r1, r1, sl
   15180:	sbc.w	r0, r0, fp
   15184:	adds	r1, #1
   15186:	str	r1, [sp, #32]
   15188:	adc.w	r1, r0, r7
   1518c:	str	r1, [sp, #36]	; 0x24
   1518e:	asrs	r6, r3, #31
   15190:	ldrd	r0, r1, [sp, #32]
   15194:	mov	r5, r3
   15196:	mov	r2, r3
   15198:	mov	r3, r6
   1519a:	cmp	r6, r1
   1519c:	it	eq
   1519e:	cmpeq	r5, r0
   151a0:	it	cc
   151a2:	strdcc	r2, r3, [sp, #32]
   151a6:	ldr	r5, [sp, #32]
   151a8:	add	r0, sp, #104	; 0x68
   151aa:	cmp	r4, #0
   151ac:	it	eq
   151ae:	moveq	r4, r5
   151b0:	bl	1c6f8 <btrfs_release_path@@Base>
   151b4:	b.n	14fca <btrfs_read_file@@Base+0x6e>
   151b6:	mov	r0, ip
   151b8:	ldr.w	r1, [r0, #45]!
   151bc:	adds	r1, r1, r2
   151be:	str	r1, [sp, #16]
   151c0:	ldr	r4, [r0, #4]
   151c2:	adc.w	r1, r4, r3
   151c6:	str	r1, [sp, #20]
   151c8:	ldrd	r0, r1, [sp, #16]
   151cc:	cmp	fp, r1
   151ce:	it	eq
   151d0:	cmpeq	sl, r0
   151d2:	bcs.n	1522a <btrfs_read_file@@Base+0x2ce>
   151d4:	cmp	fp, r3
   151d6:	mov	r0, fp
   151d8:	it	eq
   151da:	cmpeq	sl, r2
   151dc:	mov	lr, sl
   151de:	it	cc
   151e0:	movcc	r0, r3
   151e2:	ldr	r3, [sp, #40]	; 0x28
   151e4:	it	cc
   151e6:	movcc	lr, r2
   151e8:	ldrd	r1, r2, [sp, #40]	; 0x28
   151ec:	str	r3, [sp, #52]	; 0x34
   151ee:	ldr	r3, [sp, #44]	; 0x2c
   151f0:	str	r3, [sp, #64]	; 0x40
   151f2:	ldrd	r3, r4, [sp, #16]
   151f6:	cmp	r4, r2
   151f8:	it	eq
   151fa:	cmpeq	r3, r1
   151fc:	itttt	cc
   151fe:	ldrcc	r3, [sp, #16]
   15200:	strcc	r3, [sp, #52]	; 0x34
   15202:	ldrcc	r3, [sp, #20]
   15204:	strcc	r3, [sp, #64]	; 0x40
   15206:	ldr	r3, [sp, #52]	; 0x34
   15208:	subs.w	r3, r3, lr
   1520c:	str	r3, [sp, #24]
   1520e:	ldr	r3, [sp, #64]	; 0x40
   15210:	sbc.w	r3, r3, r0
   15214:	cmp	r7, #2
   15216:	str	r3, [sp, #28]
   15218:	beq.n	15226 <btrfs_read_file@@Base+0x2ca>
   1521a:	mov	r0, ip
   1521c:	ldr.w	r2, [r0, #29]!
   15220:	ldr	r3, [r0, #4]
   15222:	orrs	r3, r2
   15224:	bne.n	15254 <btrfs_read_file@@Base+0x2f8>
   15226:	ldr	r3, [sp, #24]
   15228:	add	r5, r3
   1522a:	ldr	r2, [sp, #104]	; 0x68
   1522c:	movs	r7, #0
   1522e:	ldr	r3, [sp, #136]	; 0x88
   15230:	adds	r3, #1
   15232:	str	r3, [sp, #136]	; 0x88
   15234:	ldr.w	r2, [r2, #192]	; 0xc0
   15238:	cmp	r3, r2
   1523a:	bcc.n	152ae <btrfs_read_file@@Base+0x352>
   1523c:	ldr.w	r0, [r6, #464]	; 0x1d0
   15240:	add	r1, sp, #104	; 0x68
   15242:	strb.w	r7, [sp, #169]	; 0xa9
   15246:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   1524a:	subs	r4, r0, #0
   1524c:	ble.w	15048 <btrfs_read_file@@Base+0xec>
   15250:	mov	r4, r7
   15252:	b.n	150f8 <btrfs_read_file@@Base+0x19c>
   15254:	mov	r3, ip
   15256:	ldr.w	r4, [ip, #21]!
   1525a:	ldr.w	r2, [r3, #37]!
   1525e:	movs	r7, #0
   15260:	str	r2, [sp, #52]	; 0x34
   15262:	ldrd	r1, r2, [sp, #24]
   15266:	ldr	r0, [r3, #4]
   15268:	ldr.w	r3, [ip, #4]
   1526c:	strd	r1, r2, [sp, #72]	; 0x48
   15270:	sub.w	r1, lr, sl
   15274:	ldr	r2, [sp, #52]	; 0x34
   15276:	str	r7, [sp, #4]
   15278:	add	r7, sp, #72	; 0x48
   1527a:	adds	r2, r2, r4
   1527c:	str	r7, [sp, #0]
   1527e:	adc.w	r3, r0, r3
   15282:	vmov	r0, s16
   15286:	add	r1, r0
   15288:	mov	r0, r8
   1528a:	bl	20c48 <read_extent_data@@Base>
   1528e:	subs	r4, r0, #0
   15290:	blt.w	150f8 <btrfs_read_file@@Base+0x19c>
   15294:	ldrd	r2, r3, [sp, #72]	; 0x48
   15298:	ldrd	r0, r1, [sp, #24]
   1529c:	cmp	r3, r1
   1529e:	it	eq
   152a0:	cmpeq	r2, r0
   152a2:	beq.n	152aa <btrfs_read_file@@Base+0x34e>
   152a4:	mvn.w	r4, #4
   152a8:	b.n	14fca <btrfs_read_file@@Base+0x6e>
   152aa:	add	r5, r2
   152ac:	b.n	1522a <btrfs_read_file@@Base+0x2ce>
   152ae:	mov	r4, r7
   152b0:	b.n	15048 <btrfs_read_file@@Base+0xec>
   152b2:	mvn.w	r4, #24
   152b6:	b.n	150f8 <btrfs_read_file@@Base+0x19c>
   152b8:	mvn.w	r4, #1
   152bc:	b.n	151a8 <btrfs_read_file@@Base+0x24c>
   152be:	mov	r0, r4
   152c0:	add	sp, #180	; 0xb4
   152c2:	vpop	{d8}
   152c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152ca:	nop
   152cc:	ldrb	r2, [r3, r6]
   152ce:	movs	r5, r0
   152d0:	lsls	r0, r1, #10
   152d2:	movs	r0, r0
   152d4:	cbz	r3, 1534a <btrfs_find_root_search@@Base+0x6a>
   152d6:	movs	r2, r0
   152d8:	cbz	r3, 15340 <btrfs_find_root_search@@Base+0x60>
   152da:	movs	r2, r0
   152dc:	ldrb	r2, [r1, r5]
   152de:	movs	r5, r0

000152e0 <btrfs_find_root_search@@Base>:
   152e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e4:	sub	sp, #180	; 0xb4
   152e6:	mov	sl, r2
   152e8:	ldr	r2, [pc, #644]	; (15570 <btrfs_find_root_search@@Base+0x290>)
   152ea:	str	r3, [sp, #56]	; 0x38
   152ec:	mov	r7, r1
   152ee:	ldr	r3, [pc, #644]	; (15574 <btrfs_find_root_search@@Base+0x294>)
   152f0:	add	r2, pc
   152f2:	movs	r1, #0
   152f4:	mov	r6, r0
   152f6:	add	r3, pc
   152f8:	str	r3, [sp, #60]	; 0x3c
   152fa:	ldr	r3, [pc, #636]	; (15578 <btrfs_find_root_search@@Base+0x298>)
   152fc:	ldr	r3, [r2, r3]
   152fe:	ldr	r3, [r3, #0]
   15300:	str	r3, [sp, #172]	; 0xac
   15302:	mov.w	r3, #0
   15306:	ldr.w	r3, [r0, #308]	; 0x134
   1530a:	strd	r1, r1, [sp, #88]	; 0x58
   1530e:	strd	r1, r1, [sp, #96]	; 0x60
   15312:	ldr.w	r3, [r3, #148]	; 0x94
   15316:	strd	r1, r1, [sp, #36]	; 0x24
   1531a:	strd	r1, r1, [sp, #80]	; 0x50
   1531e:	str	r3, [sp, #44]	; 0x2c
   15320:	ldrb.w	r3, [r0, #364]	; 0x16c
   15324:	ubfx	r0, r3, #5, #1
   15328:	orr.w	r3, r3, #32
   1532c:	str	r0, [sp, #72]	; 0x48
   1532e:	strb.w	r3, [r6, #364]	; 0x16c
   15332:	ldrd	r2, r3, [r7]
   15336:	add	r1, sp, #88	; 0x58
   15338:	mov	r0, r6
   1533a:	cmp	r3, #0
   1533c:	it	eq
   1533e:	cmpeq	r2, #3
   15340:	add	r2, sp, #96	; 0x60
   15342:	ittee	ne
   15344:	movne	r4, #4
   15346:	movne	r5, #0
   15348:	moveq	r3, #2
   1534a:	moveq	r4, #0
   1534c:	ite	ne
   1534e:	strdne	r4, r5, [sp]
   15352:	strdeq	r3, r4, [sp]
   15356:	bl	2df3c <btrfs_next_bg@@Base>
   1535a:	cbz	r0, 15388 <btrfs_find_root_search@@Base+0xa8>
   1535c:	adds	r3, r0, #2
   1535e:	ite	ne
   15360:	movne	r4, r0
   15362:	moveq	r4, #0
   15364:	ldrb.w	r3, [r6, #364]	; 0x16c
   15368:	ldr	r2, [sp, #72]	; 0x48
   1536a:	bfi	r3, r2, #5, #1
   1536e:	ldr	r2, [pc, #524]	; (1557c <btrfs_find_root_search@@Base+0x29c>)
   15370:	strb.w	r3, [r6, #364]	; 0x16c
   15374:	ldr	r3, [pc, #512]	; (15578 <btrfs_find_root_search@@Base+0x298>)
   15376:	add	r2, pc
   15378:	ldr	r3, [r2, r3]
   1537a:	ldr	r2, [r3, #0]
   1537c:	ldr	r3, [sp, #172]	; 0xac
   1537e:	eors	r2, r3
   15380:	beq.w	15568 <btrfs_find_root_search@@Base+0x288>
   15384:	blx	8c90 <__stack_chk_fail@plt>
   15388:	ldrd	r3, r4, [sp, #88]	; 0x58
   1538c:	strd	r3, r4, [sp, #24]
   15390:	ldr	r3, [sp, #44]	; 0x2c
   15392:	str	r3, [sp, #76]	; 0x4c
   15394:	ldr	r2, [sp, #96]	; 0x60
   15396:	ldr	r3, [sp, #88]	; 0x58
   15398:	adds	r3, r3, r2
   1539a:	ldr	r2, [sp, #92]	; 0x5c
   1539c:	str	r3, [sp, #64]	; 0x40
   1539e:	ldr	r3, [sp, #100]	; 0x64
   153a0:	adc.w	r3, r2, r3
   153a4:	str	r3, [sp, #68]	; 0x44
   153a6:	ldrd	r1, r2, [sp, #64]	; 0x40
   153aa:	ldrd	r3, r4, [sp, #24]
   153ae:	cmp	r4, r2
   153b0:	it	eq
   153b2:	cmpeq	r3, r1
   153b4:	bcs.n	15332 <btrfs_find_root_search@@Base+0x52>
   153b6:	ldr	r3, [sp, #80]	; 0x50
   153b8:	mov	r0, r6
   153ba:	str	r3, [sp, #0]
   153bc:	ldr	r3, [sp, #84]	; 0x54
   153be:	str	r3, [sp, #4]
   153c0:	ldrd	r2, r3, [sp, #24]
   153c4:	bl	21f24 <read_tree_block@@Base>
   153c8:	mov	r5, r0
   153ca:	cbnz	r0, 153de <btrfs_find_root_search@@Base+0xfe>
   153cc:	ldr	r3, [sp, #24]
   153ce:	ldr	r2, [sp, #76]	; 0x4c
   153d0:	adds	r3, r3, r2
   153d2:	str	r3, [sp, #24]
   153d4:	ldr	r3, [sp, #28]
   153d6:	adc.w	r3, r3, #0
   153da:	str	r3, [sp, #28]
   153dc:	b.n	15394 <btrfs_find_root_search@@Base+0xb4>
   153de:	cmn.w	r0, #4096	; 0x1000
   153e2:	bhi.n	153cc <btrfs_find_root_search@@Base+0xec>
   153e4:	ldrd	r2, r3, [r7]
   153e8:	ldr.w	r1, [r5, #188]	; 0xbc
   153ec:	ldr.w	r0, [r0, #184]	; 0xb8
   153f0:	cmp	r1, r3
   153f2:	it	eq
   153f4:	cmpeq	r0, r2
   153f6:	bne.w	15564 <btrfs_find_root_search@@Base+0x284>
   153fa:	ldrb.w	r3, [r5, #196]	; 0xc4
   153fe:	str	r3, [sp, #32]
   15400:	ldr	r2, [sp, #32]
   15402:	ldrb	r3, [r7, #16]
   15404:	cmp	r3, r2
   15406:	bhi.w	15564 <btrfs_find_root_search@@Base+0x284>
   1540a:	ldr.w	r3, [r5, #176]	; 0xb0
   1540e:	str	r3, [sp, #16]
   15410:	ldr.w	r3, [r5, #180]	; 0xb4
   15414:	str	r3, [sp, #20]
   15416:	ldrd	r0, r1, [sp, #16]
   1541a:	ldrd	r2, r3, [r7, #8]
   1541e:	cmp	r1, r3
   15420:	it	eq
   15422:	cmpeq	r0, r2
   15424:	bcc.w	15564 <btrfs_find_root_search@@Base+0x284>
   15428:	ldrd	r3, r4, [r5, #40]	; 0x28
   1542c:	mov	r2, r0
   1542e:	mov	r0, sl
   15430:	strd	r3, r4, [sp, #48]	; 0x30
   15434:	mov	r3, r1
   15436:	bl	1a87c <search_cache_extent@@Base>
   1543a:	mov	fp, r0
   1543c:	cbz	r0, 1544e <btrfs_find_root_search@@Base+0x16e>
   1543e:	ldrd	r2, r3, [r0, #24]
   15442:	ldrd	r0, r1, [sp, #16]
   15446:	cmp	r1, r3
   15448:	it	eq
   1544a:	cmpeq	r0, r2
   1544c:	beq.n	154e0 <btrfs_find_root_search@@Base+0x200>
   1544e:	movs	r0, #56	; 0x38
   15450:	blx	8e40 <malloc@plt+0x4>
   15454:	cbnz	r0, 15496 <btrfs_find_root_search@@Base+0x1b6>
   15456:	ldr	r2, [sp, #60]	; 0x3c
   15458:	add	r4, sp, #108	; 0x6c
   1545a:	ldr	r3, [pc, #292]	; (15580 <btrfs_find_root_search@@Base+0x2a0>)
   1545c:	movs	r1, #1
   1545e:	ldr	r0, [r2, r3]
   15460:	ldr	r3, [pc, #288]	; (15584 <btrfs_find_root_search@@Base+0x2a4>)
   15462:	ldr	r2, [pc, #292]	; (15588 <btrfs_find_root_search@@Base+0x2a8>)
   15464:	add	r3, pc
   15466:	str	r3, [sp, #8]
   15468:	ldr	r3, [pc, #288]	; (1558c <btrfs_find_root_search@@Base+0x2ac>)
   1546a:	add	r2, pc
   1546c:	str	r1, [sp, #12]
   1546e:	add	r3, pc
   15470:	str	r3, [sp, #4]
   15472:	movs	r3, #58	; 0x3a
   15474:	str	r3, [sp, #0]
   15476:	ldr	r3, [pc, #280]	; (15590 <btrfs_find_root_search@@Base+0x2b0>)
   15478:	ldr	r0, [r0, #0]
   1547a:	add	r3, pc
   1547c:	blx	9040 <__fprintf_chk@plt+0x4>
   15480:	movs	r1, #16
   15482:	mov	r0, r4
   15484:	blx	8e98 <backtrace@plt>
   15488:	movs	r2, #2
   1548a:	mov	r1, r0
   1548c:	mov	r0, r4
   1548e:	blx	9214 <backtrace_symbols_fd@plt>
   15492:	blx	91c0 <abort@plt>
   15496:	ldrd	r3, r4, [sp, #16]
   1549a:	mov	fp, r0
   1549c:	adds	r0, #48	; 0x30
   1549e:	strd	r3, r4, [r0, #-24]
   154a2:	movs	r3, #1
   154a4:	movs	r4, #0
   154a6:	strd	r3, r4, [r0, #-16]
   154aa:	ldr	r3, [sp, #36]	; 0x24
   154ac:	str.w	r3, [r0, #-32]
   154b0:	ldr	r3, [sp, #40]	; 0x28
   154b2:	str.w	r3, [r0, #-28]
   154b6:	ldr	r3, [sp, #36]	; 0x24
   154b8:	str.w	r3, [r0, #-8]
   154bc:	ldr	r3, [sp, #40]	; 0x28
   154be:	str.w	r3, [r0, #-4]
   154c2:	bl	1a734 <cache_tree_init@@Base>
   154c6:	mov	r1, fp
   154c8:	mov	r0, sl
   154ca:	bl	1a73a <insert_cache_extent@@Base>
   154ce:	subs	r4, r0, #0
   154d0:	bge.n	154e2 <btrfs_find_root_search@@Base+0x202>
   154d2:	mov	r0, r5
   154d4:	bl	1b4c0 <free_extent_buffer@@Base>
   154d8:	cmp	r4, #0
   154da:	beq.w	153cc <btrfs_find_root_search@@Base+0xec>
   154de:	b.n	15364 <btrfs_find_root_search@@Base+0x84>
   154e0:	movs	r4, #0
   154e2:	ldrd	r2, r3, [fp, #40]	; 0x28
   154e6:	mov.w	r9, #0
   154ea:	ldrb.w	r8, [sp, #32]
   154ee:	cmp	r3, r9
   154f0:	it	eq
   154f2:	cmpeq	r2, r8
   154f4:	bcs.n	15526 <btrfs_find_root_search@@Base+0x246>
   154f6:	add.w	r0, fp, #48	; 0x30
   154fa:	bl	1a97e <free_extent_cache_tree@@Base>
   154fe:	strd	r8, r9, [fp, #40]	; 0x28
   15502:	ldr	r3, [sp, #44]	; 0x2c
   15504:	add.w	r0, fp, #48	; 0x30
   15508:	mov.w	r8, #0
   1550c:	strd	r3, r8, [sp]
   15510:	ldrd	r2, r3, [sp, #48]	; 0x30
   15514:	bl	1a748 <add_cache_extent@@Base>
   15518:	subs	r4, r0, #0
   1551a:	bge.n	15522 <btrfs_find_root_search@@Base+0x242>
   1551c:	cmn.w	r4, #17
   15520:	bne.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   15522:	mov	r4, r8
   15524:	b.n	1552e <btrfs_find_root_search@@Base+0x24e>
   15526:	cmp	r9, r3
   15528:	it	eq
   1552a:	cmpeq	r8, r2
   1552c:	beq.n	15502 <btrfs_find_root_search@@Base+0x222>
   1552e:	ldrd	r2, r3, [r7, #24]
   15532:	ldrd	r0, r1, [sp, #16]
   15536:	cmp	r1, r3
   15538:	it	eq
   1553a:	cmpeq	r0, r2
   1553c:	bne.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   1553e:	ldrb	r3, [r7, #17]
   15540:	ldr	r2, [sp, #32]
   15542:	cmp	r3, r2
   15544:	bne.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   15546:	ldr	r3, [r7, #32]
   15548:	cmp	r3, #0
   1554a:	bne.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   1554c:	ldr	r3, [sp, #56]	; 0x38
   1554e:	cbz	r3, 15560 <btrfs_find_root_search@@Base+0x280>
   15550:	ldrd	r2, r3, [sp, #48]	; 0x30
   15554:	add.w	r0, fp, #48	; 0x30
   15558:	bl	1a87c <search_cache_extent@@Base>
   1555c:	ldr	r3, [sp, #56]	; 0x38
   1555e:	str	r0, [r3, #0]
   15560:	movs	r4, #1
   15562:	b.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   15564:	movs	r4, #0
   15566:	b.n	154d2 <btrfs_find_root_search@@Base+0x1f2>
   15568:	mov	r0, r4
   1556a:	add	sp, #180	; 0xb4
   1556c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15570:	ldrh	r0, [r5, r0]
   15572:	movs	r5, r0
   15574:	ldrh	r2, [r4, r0]
   15576:	movs	r5, r0
   15578:	lsls	r0, r1, #10
   1557a:	movs	r0, r0
   1557c:	ldr	r2, [r4, r6]
   1557e:	movs	r5, r0
   15580:	lsls	r4, r3, #10
   15582:	movs	r0, r0
   15584:	add	r7, sp, #276	; 0x114
   15586:	movs	r2, r0
   15588:	ldrh	r4, [r6, #54]	; 0x36
   1558a:	movs	r2, r0
   1558c:	add	r7, sp, #280	; 0x118
   1558e:	movs	r2, r0
   15590:	add	r7, sp, #140	; 0x8c
   15592:	movs	r2, r0
   15594:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15598:	sub	sp, #20
   1559a:	ldr	r7, [pc, #500]	; (15790 <btrfs_find_root_search@@Base+0x4b0>)
   1559c:	mov	r5, r0
   1559e:	ldrb.w	r8, [sp, #60]	; 0x3c
   155a2:	mov	r6, r1
   155a4:	add	r7, pc
   155a6:	str	r2, [sp, #8]
   155a8:	ldr	r4, [sp, #64]	; 0x40
   155aa:	eor.w	r8, r8, #1
   155ae:	ldrb.w	r2, [sp, #56]	; 0x38
   155b2:	cbz	r3, 155b8 <btrfs_find_root_search@@Base+0x2d8>
   155b4:	orr.w	r8, r8, #22
   155b8:	cbz	r2, 155be <btrfs_find_root_search@@Base+0x2de>
   155ba:	orr.w	r8, r8, #8
   155be:	cmp	r5, #0
   155c0:	beq.w	1577c <btrfs_find_root_search@@Base+0x49c>
   155c4:	ldr	r3, [r5, #0]
   155c6:	cmp	r3, #0
   155c8:	beq.w	1577c <btrfs_find_root_search@@Base+0x49c>
   155cc:	ands.w	r9, r8, #8
   155d0:	beq.n	15600 <btrfs_find_root_search@@Base+0x320>
   155d2:	ldr	r0, [pc, #448]	; (15794 <btrfs_find_root_search@@Base+0x4b4>)
   155d4:	add	r0, pc
   155d6:	mov	r1, r4
   155d8:	blx	91a8 <fputs@plt+0x4>
   155dc:	ldr.w	fp, [r5]
   155e0:	movs	r1, #10
   155e2:	mov	r0, fp
   155e4:	blx	8f28 <strchr@plt>
   155e8:	cbnz	r0, 15606 <btrfs_find_root_search@@Base+0x326>
   155ea:	mov	r1, r4
   155ec:	mov	r0, fp
   155ee:	blx	91a8 <fputs@plt+0x4>
   155f2:	tst.w	r8, #1
   155f6:	bne.n	1563e <btrfs_find_root_search@@Base+0x35e>
   155f8:	movs	r0, #0
   155fa:	add	sp, #20
   155fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15600:	ldr	r0, [pc, #404]	; (15798 <btrfs_find_root_search@@Base+0x4b8>)
   15602:	add	r0, pc
   15604:	b.n	155d6 <btrfs_find_root_search@@Base+0x2f6>
   15606:	cmp.w	r9, #0
   1560a:	beq.n	15636 <btrfs_find_root_search@@Base+0x356>
   1560c:	ldr.w	sl, [pc, #396]	; 1579c <btrfs_find_root_search@@Base+0x4bc>
   15610:	add	sl, pc
   15612:	add.w	fp, fp, #4294967295	; 0xffffffff
   15616:	ldrb.w	r0, [fp, #1]!
   1561a:	cmp	r0, #0
   1561c:	beq.n	155f2 <btrfs_find_root_search@@Base+0x312>
   1561e:	mov	r1, r4
   15620:	blx	90c8 <fputc@plt+0x4>
   15624:	ldrb.w	r3, [fp]
   15628:	cmp	r3, #10
   1562a:	bne.n	15616 <btrfs_find_root_search@@Base+0x336>
   1562c:	mov	r1, r4
   1562e:	mov	r0, sl
   15630:	blx	91a8 <fputs@plt+0x4>
   15634:	b.n	15616 <btrfs_find_root_search@@Base+0x336>
   15636:	ldr.w	sl, [pc, #360]	; 157a0 <btrfs_find_root_search@@Base+0x4c0>
   1563a:	add	sl, pc
   1563c:	b.n	15612 <btrfs_find_root_search@@Base+0x332>
   1563e:	ldr	r3, [r5, #4]
   15640:	cbnz	r3, 15656 <btrfs_find_root_search@@Base+0x376>
   15642:	ldr	r2, [pc, #352]	; (157a4 <btrfs_find_root_search@@Base+0x4c4>)
   15644:	mov	r3, r6
   15646:	movs	r1, #1
   15648:	mov	r0, r4
   1564a:	add	r2, pc
   1564c:	blx	9040 <__fprintf_chk@plt+0x4>
   15650:	mvn.w	r0, #1
   15654:	b.n	155fa <btrfs_find_root_search@@Base+0x31a>
   15656:	mov	r1, r4
   15658:	movs	r0, #10
   1565a:	blx	90c8 <fputc@plt+0x4>
   1565e:	cmp.w	r9, #0
   15662:	bne.n	156ae <btrfs_find_root_search@@Base+0x3ce>
   15664:	mov	r1, r4
   15666:	movs	r0, #10
   15668:	blx	90c8 <fputc@plt+0x4>
   1566c:	movs	r6, #4
   1566e:	ldr	r3, [r5, #4]
   15670:	movs	r1, #1
   15672:	ldr	r2, [pc, #308]	; (157a8 <btrfs_find_root_search@@Base+0x4c8>)
   15674:	mov	r0, r4
   15676:	str	r3, [sp, #4]
   15678:	add	r2, pc
   1567a:	ldr	r3, [pc, #304]	; (157ac <btrfs_find_root_search@@Base+0x4cc>)
   1567c:	add	r3, pc
   1567e:	str	r3, [sp, #0]
   15680:	mov	r3, r6
   15682:	blx	9040 <__fprintf_chk@plt+0x4>
   15686:	ldr	r3, [r5, #8]
   15688:	cmp	r3, #0
   1568a:	beq.n	155f8 <btrfs_find_root_search@@Base+0x318>
   1568c:	tst.w	r8, #2
   15690:	beq.n	155f8 <btrfs_find_root_search@@Base+0x318>
   15692:	ldrb	r3, [r3, #0]
   15694:	cbz	r3, 1569e <btrfs_find_root_search@@Base+0x3be>
   15696:	mov	r1, r4
   15698:	movs	r0, #10
   1569a:	blx	90c8 <fputc@plt+0x4>
   1569e:	ldr.w	fp, [pc, #272]	; 157b0 <btrfs_find_root_search@@Base+0x4d0>
   156a2:	adds	r5, #8
   156a4:	ldr.w	sl, [pc, #268]	; 157b4 <btrfs_find_root_search@@Base+0x4d4>
   156a8:	add	fp, pc
   156aa:	add	sl, pc
   156ac:	b.n	156c4 <btrfs_find_root_search@@Base+0x3e4>
   156ae:	movs	r6, #8
   156b0:	b.n	1566e <btrfs_find_root_search@@Base+0x38e>
   156b2:	strd	sl, r3, [sp]
   156b6:	mov	r2, fp
   156b8:	mov	r3, r6
   156ba:	movs	r1, #1
   156bc:	mov	r0, r4
   156be:	mov	r5, r9
   156c0:	blx	9040 <__fprintf_chk@plt+0x4>
   156c4:	mov	r9, r5
   156c6:	ldr.w	r3, [r9], #4
   156ca:	cmp	r3, #0
   156cc:	beq.n	155f8 <btrfs_find_root_search@@Base+0x318>
   156ce:	ldrb	r2, [r3, #0]
   156d0:	cmp	r2, #0
   156d2:	bne.n	156b2 <btrfs_find_root_search@@Base+0x3d2>
   156d4:	tst.w	r8, #4
   156d8:	beq.n	155f8 <btrfs_find_root_search@@Base+0x318>
   156da:	ldr.w	sl, [pc, #220]	; 157b8 <btrfs_find_root_search@@Base+0x4d8>
   156de:	mov	r1, r4
   156e0:	ldr.w	fp, [pc, #216]	; 157bc <btrfs_find_root_search@@Base+0x4dc>
   156e4:	movs	r0, #10
   156e6:	blx	90c8 <fputc@plt+0x4>
   156ea:	add	sl, pc
   156ec:	ldr	r3, [pc, #208]	; (157c0 <btrfs_find_root_search@@Base+0x4e0>)
   156ee:	add	fp, pc
   156f0:	add	r3, pc
   156f2:	str	r3, [sp, #12]
   156f4:	ldr.w	r8, [r5, #4]!
   156f8:	cmp.w	r8, #0
   156fc:	beq.w	155f8 <btrfs_find_root_search@@Base+0x318>
   15700:	mov	r1, sl
   15702:	mov	r0, r8
   15704:	blx	8b04 <strcmp@plt>
   15708:	cbnz	r0, 15766 <btrfs_find_root_search@@Base+0x486>
   1570a:	mov	r1, r4
   1570c:	movs	r0, #10
   1570e:	blx	90c8 <fputc@plt+0x4>
   15712:	ldr.w	r9, [pc, #176]	; 157c4 <btrfs_find_root_search@@Base+0x4e4>
   15716:	ldr	r2, [pc, #176]	; (157c8 <btrfs_find_root_search@@Base+0x4e8>)
   15718:	mov	r3, r6
   1571a:	add	r9, pc
   1571c:	movs	r1, #1
   1571e:	add	r2, pc
   15720:	mov	r0, r4
   15722:	str.w	r9, [sp]
   15726:	blx	9040 <__fprintf_chk@plt+0x4>
   1572a:	ldr	r3, [pc, #160]	; (157cc <btrfs_find_root_search@@Base+0x4ec>)
   1572c:	ldr	r2, [pc, #160]	; (157d0 <btrfs_find_root_search@@Base+0x4f0>)
   1572e:	movs	r1, #1
   15730:	mov	r0, r4
   15732:	ldr.w	r8, [r7, r3]
   15736:	add	r2, pc
   15738:	add.w	r3, r8, #4
   1573c:	strd	r9, r3, [sp]
   15740:	mov	r3, r6
   15742:	blx	9040 <__fprintf_chk@plt+0x4>
   15746:	ldr	r3, [sp, #8]
   15748:	lsls	r3, r3, #28
   1574a:	bpl.n	1575c <btrfs_find_root_search@@Base+0x47c>
   1574c:	ldr	r2, [pc, #132]	; (157d4 <btrfs_find_root_search@@Base+0x4f4>)
   1574e:	add.w	r3, r8, #16
   15752:	movs	r1, #1
   15754:	mov	r0, r4
   15756:	add	r2, pc
   15758:	blx	9040 <__fprintf_chk@plt+0x4>
   1575c:	mov	r1, r4
   1575e:	movs	r0, #10
   15760:	blx	90c8 <fputc@plt+0x4>
   15764:	b.n	156f4 <btrfs_find_root_search@@Base+0x414>
   15766:	ldr	r3, [sp, #12]
   15768:	mov	r2, fp
   1576a:	movs	r1, #1
   1576c:	mov	r0, r4
   1576e:	str.w	r8, [sp, #4]
   15772:	str	r3, [sp, #0]
   15774:	mov	r3, r6
   15776:	blx	9040 <__fprintf_chk@plt+0x4>
   1577a:	b.n	156f4 <btrfs_find_root_search@@Base+0x414>
   1577c:	ldr	r2, [pc, #88]	; (157d8 <btrfs_find_root_search@@Base+0x4f8>)
   1577e:	mov	r3, r6
   15780:	movs	r1, #1
   15782:	mov	r0, r4
   15784:	add	r2, pc
   15786:	blx	9040 <__fprintf_chk@plt+0x4>
   1578a:	mov.w	r0, #4294967295	; 0xffffffff
   1578e:	b.n	155fa <btrfs_find_root_search@@Base+0x31a>
   15790:	ldrsb	r4, [r6, r5]
   15792:	movs	r5, r0
   15794:	add	r5, sp, #1008	; 0x3f0
   15796:	movs	r2, r0
   15798:	add	r5, sp, #780	; 0x30c
   1579a:	movs	r2, r0
   1579c:	add	r5, sp, #768	; 0x300
   1579e:	movs	r2, r0
   157a0:	add	r5, sp, #588	; 0x24c
   157a2:	movs	r2, r0
   157a4:	add	r5, sp, #556	; 0x22c
   157a6:	movs	r2, r0
   157a8:	add	r5, sp, #496	; 0x1f0
   157aa:	movs	r2, r0
   157ac:	add	r5, pc, #956	; (adr r5, 15b6c <usage_command_group_short@@Base>)
   157ae:	movs	r2, r0
   157b0:	add	r5, sp, #304	; 0x130
   157b2:	movs	r2, r0
   157b4:	add	r5, pc, #772	; (adr r5, 15abc <usage_unknown_option@@Base+0x78>)
   157b6:	movs	r2, r0
   157b8:	add	r5, sp, #68	; 0x44
   157ba:	movs	r2, r0
   157bc:	add	r5, sp, #24
   157be:	movs	r2, r0
   157c0:	add	r5, pc, #492	; (adr r5, 159b0 <clean_args_no_options_relaxed@@Base+0x18>)
   157c2:	movs	r2, r0
   157c4:	add	r5, pc, #324	; (adr r5, 1590c <check_argc_exact@@Base+0x48>)
   157c6:	movs	r2, r0
   157c8:	add	r4, sp, #944	; 0x3b0
   157ca:	movs	r2, r0
   157cc:	lsls	r0, r0, #11
   157ce:	movs	r0, r0
   157d0:	add	r4, sp, #928	; 0x3a0
   157d2:	movs	r2, r0
   157d4:	ldr	r2, [sp, #692]	; 0x2b4
   157d6:	movs	r2, r0
   157d8:	add	r4, sp, #776	; 0x308
   157da:	movs	r2, r0
   157dc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   157e0:	movs	r4, #0
   157e2:	add.w	r8, r0, #8
   157e6:	mov	r6, r1
   157e8:	mov	r7, r2
   157ea:	mov	r9, r4
   157ec:	mov.w	sl, #1
   157f0:	ldr.w	r5, [r8], #4
   157f4:	cbnz	r5, 157fc <btrfs_find_root_search@@Base+0x51c>
   157f6:	add	sp, #16
   157f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   157fc:	ldr	r3, [r5, #16]
   157fe:	lsls	r3, r3, #31
   15800:	bmi.n	15846 <btrfs_find_root_search@@Base+0x566>
   15802:	cbz	r6, 15812 <btrfs_find_root_search@@Base+0x532>
   15804:	cmp.w	r9, #0
   15808:	beq.n	15812 <btrfs_find_root_search@@Base+0x532>
   1580a:	mov	r1, r7
   1580c:	movs	r0, #10
   1580e:	blx	90c8 <fputc@plt+0x4>
   15812:	ldr	r3, [r5, #12]
   15814:	cbnz	r3, 1584c <btrfs_find_root_search@@Base+0x56c>
   15816:	cbz	r4, 15820 <btrfs_find_root_search@@Base+0x540>
   15818:	mov	r1, r7
   1581a:	movs	r0, #10
   1581c:	blx	90c8 <fputc@plt+0x4>
   15820:	ldr	r2, [r5, #16]
   15822:	str	r7, [sp, #8]
   15824:	ubfx	r3, r2, #1, #1
   15828:	strd	sl, r3, [sp]
   1582c:	mov	r3, r6
   1582e:	ldr	r1, [r5, #0]
   15830:	ldr	r0, [r5, #8]
   15832:	bl	15594 <btrfs_find_root_search@@Base+0x2b4>
   15836:	ldr	r4, [r5, #16]
   15838:	ands.w	r4, r4, #2
   1583c:	beq.n	15846 <btrfs_find_root_search@@Base+0x566>
   1583e:	movs	r0, #10
   15840:	movs	r4, #0
   15842:	blx	8fa8 <putchar@plt+0x4>
   15846:	add.w	r9, r9, #1
   1584a:	b.n	157f0 <btrfs_find_root_search@@Base+0x510>
   1584c:	cbnz	r6, 1585c <btrfs_find_root_search@@Base+0x57c>
   1584e:	cmp.w	r9, #0
   15852:	beq.n	1585c <btrfs_find_root_search@@Base+0x57c>
   15854:	mov	r1, r7
   15856:	movs	r0, #10
   15858:	blx	90c8 <fputc@plt+0x4>
   1585c:	ldr	r0, [r5, #12]
   1585e:	mov	r2, r7
   15860:	mov	r1, r6
   15862:	bl	157dc <btrfs_find_root_search@@Base+0x4fc>
   15866:	cmp	r6, #0
   15868:	it	eq
   1586a:	moveq	r4, #1
   1586c:	b.n	15846 <btrfs_find_root_search@@Base+0x566>

0001586e <fixup_argv0@@Base>:
   1586e:	push	{r0, r1, r4, r5, r6, lr}
   15870:	mov	r4, r0
   15872:	ldr	r5, [pc, #40]	; (1589c <fixup_argv0@@Base+0x2e>)
   15874:	mov	r6, r1
   15876:	add	r5, pc
   15878:	mov	r0, r5
   1587a:	blx	8f1c <strlen@plt>
   1587e:	ldr	r3, [pc, #32]	; (158a0 <fixup_argv0@@Base+0x32>)
   15880:	movs	r2, #1
   15882:	str	r6, [sp, #4]
   15884:	add	r3, pc
   15886:	str	r3, [sp, #0]
   15888:	mov.w	r3, #4294967295	; 0xffffffff
   1588c:	rsb	r1, r0, #4096	; 0x1000
   15890:	add	r0, r5
   15892:	blx	9208 <__snprintf_chk@plt>
   15896:	str	r5, [r4, #0]
   15898:	add	sp, #8
   1589a:	pop	{r4, r5, r6, pc}
   1589c:	ldr	r6, [r2, r1]
   1589e:	movs	r5, r0
   158a0:	ldr	r1, [sp, #512]	; 0x200
   158a2:	movs	r2, r0

000158a4 <set_argv0@@Base>:
   158a4:	push	{r3, lr}
   158a6:	mov.w	r2, #4096	; 0x1000
   158aa:	ldr	r3, [pc, #20]	; (158c0 <set_argv0@@Base+0x1c>)
   158ac:	ldr	r1, [r0, #0]
   158ae:	add	r3, pc
   158b0:	mov	r0, r3
   158b2:	blx	8fb4 <strncpy@plt>
   158b6:	movs	r2, #0
   158b8:	strb.w	r2, [r0, #4095]	; 0xfff
   158bc:	pop	{r3, pc}
   158be:	nop
   158c0:	ldr	r6, [r3, r0]
   158c2:	movs	r5, r0

000158c4 <check_argc_exact@@Base>:
   158c4:	ldr	r3, [pc, #64]	; (15908 <check_argc_exact@@Base+0x44>)
   158c6:	cmp	r0, r1
   158c8:	push	{r4, r5, lr}
   158ca:	add	r3, pc
   158cc:	sub	sp, #20
   158ce:	mov	r5, r0
   158d0:	mov	r4, r1
   158d2:	beq.n	158f6 <check_argc_exact@@Base+0x32>
   158d4:	ldr	r2, [pc, #52]	; (1590c <check_argc_exact@@Base+0x48>)
   158d6:	cmp	r1, #1
   158d8:	ldr	r3, [r3, r2]
   158da:	ldr	r0, [r3, #0]
   158dc:	bgt.n	15900 <check_argc_exact@@Base+0x3c>
   158de:	ldr	r3, [pc, #48]	; (15910 <check_argc_exact@@Base+0x4c>)
   158e0:	add	r3, pc
   158e2:	ldr	r2, [pc, #48]	; (15914 <check_argc_exact@@Base+0x50>)
   158e4:	movs	r1, #1
   158e6:	strd	r3, r5, [sp, #4]
   158ea:	ldr	r3, [pc, #44]	; (15918 <check_argc_exact@@Base+0x54>)
   158ec:	add	r2, pc
   158ee:	str	r4, [sp, #0]
   158f0:	add	r3, pc
   158f2:	blx	9040 <__fprintf_chk@plt+0x4>
   158f6:	subs	r0, r5, r4
   158f8:	it	ne
   158fa:	movne	r0, #1
   158fc:	add	sp, #20
   158fe:	pop	{r4, r5, pc}
   15900:	ldr	r3, [pc, #24]	; (1591c <check_argc_exact@@Base+0x58>)
   15902:	add	r3, pc
   15904:	b.n	158e2 <check_argc_exact@@Base+0x1e>
   15906:	nop
   15908:	strb	r6, [r1, r1]
   1590a:	movs	r5, r0
   1590c:	lsls	r4, r3, #10
   1590e:	movs	r0, r0
   15910:	add	r3, pc, #556	; (adr r3, 15b40 <clean_args_no_options@@Base+0x1c>)
   15912:	movs	r2, r0
   15914:	add	r3, sp, #436	; 0x1b4
   15916:	movs	r2, r0
   15918:	ldrsb	r4, [r3, r7]
   1591a:	movs	r5, r0
   1591c:	ldr	r1, [sp, #16]
   1591e:	movs	r2, r0

00015920 <check_argc_min@@Base>:
   15920:	ldr	r3, [pc, #40]	; (1594c <check_argc_min@@Base+0x2c>)
   15922:	cmp	r0, r1
   15924:	push	{r0, r1, r4, lr}
   15926:	add	r3, pc
   15928:	bge.n	15948 <check_argc_min@@Base+0x28>
   1592a:	ldr	r2, [pc, #36]	; (15950 <check_argc_min@@Base+0x30>)
   1592c:	ldr	r4, [r3, r2]
   1592e:	ldr	r3, [pc, #36]	; (15954 <check_argc_min@@Base+0x34>)
   15930:	ldr	r2, [pc, #36]	; (15958 <check_argc_min@@Base+0x38>)
   15932:	strd	r0, r1, [sp]
   15936:	add	r3, pc
   15938:	ldr	r0, [r4, #0]
   1593a:	add	r2, pc
   1593c:	movs	r1, #1
   1593e:	blx	9040 <__fprintf_chk@plt+0x4>
   15942:	movs	r0, #1
   15944:	add	sp, #8
   15946:	pop	{r4, pc}
   15948:	movs	r0, #0
   1594a:	b.n	15944 <check_argc_min@@Base+0x24>
   1594c:	strh	r2, [r6, r7]
   1594e:	movs	r5, r0
   15950:	lsls	r4, r3, #10
   15952:	movs	r0, r0
   15954:	ldrsb	r6, [r2, r6]
   15956:	movs	r5, r0
   15958:	add	r3, sp, #308	; 0x134
   1595a:	movs	r2, r0

0001595c <check_argc_max@@Base>:
   1595c:	ldr	r3, [pc, #40]	; (15988 <check_argc_max@@Base+0x2c>)
   1595e:	cmp	r0, r1
   15960:	push	{r0, r1, r4, lr}
   15962:	add	r3, pc
   15964:	ble.n	15984 <check_argc_max@@Base+0x28>
   15966:	ldr	r2, [pc, #36]	; (1598c <check_argc_max@@Base+0x30>)
   15968:	ldr	r4, [r3, r2]
   1596a:	ldr	r3, [pc, #36]	; (15990 <check_argc_max@@Base+0x34>)
   1596c:	ldr	r2, [pc, #36]	; (15994 <check_argc_max@@Base+0x38>)
   1596e:	strd	r0, r1, [sp]
   15972:	add	r3, pc
   15974:	ldr	r0, [r4, #0]
   15976:	add	r2, pc
   15978:	movs	r1, #1
   1597a:	blx	9040 <__fprintf_chk@plt+0x4>
   1597e:	movs	r0, #1
   15980:	add	sp, #8
   15982:	pop	{r4, pc}
   15984:	movs	r0, #0
   15986:	b.n	15980 <check_argc_max@@Base+0x24>
   15988:	strh	r6, [r6, r6]
   1598a:	movs	r5, r0
   1598c:	lsls	r4, r3, #10
   1598e:	movs	r0, r0
   15990:	ldrsb	r2, [r3, r5]
   15992:	movs	r5, r0
   15994:	add	r3, sp, #288	; 0x120
   15996:	movs	r2, r0

00015998 <clean_args_no_options_relaxed@@Base>:
   15998:	push	{r4, lr}
   1599a:	cmp	r1, #1
   1599c:	ldr	r4, [pc, #24]	; (159b8 <clean_args_no_options_relaxed@@Base+0x20>)
   1599e:	add	r4, pc
   159a0:	ble.n	159b6 <clean_args_no_options_relaxed@@Base+0x1e>
   159a2:	ldr	r1, [pc, #24]	; (159bc <clean_args_no_options_relaxed@@Base+0x24>)
   159a4:	ldr	r0, [r2, #4]
   159a6:	add	r1, pc
   159a8:	blx	8b04 <strcmp@plt>
   159ac:	cbnz	r0, 159b6 <clean_args_no_options_relaxed@@Base+0x1e>
   159ae:	ldr	r3, [pc, #16]	; (159c0 <clean_args_no_options_relaxed@@Base+0x28>)
   159b0:	movs	r2, #2
   159b2:	ldr	r3, [r4, r3]
   159b4:	str	r2, [r3, #0]
   159b6:	pop	{r4, pc}
   159b8:	strh	r2, [r7, r5]
   159ba:	movs	r5, r0
   159bc:	ldr	r6, [sp, #900]	; 0x384
   159be:	movs	r2, r0
   159c0:	lsls	r0, r2, #10
	...

000159c4 <output_format_name@@Base>:
   159c4:	ldr	r3, [pc, #36]	; (159ec <output_format_name@@Base+0x28>)
   159c6:	cmp	r0, #4
   159c8:	add	r3, pc
   159ca:	beq.n	159e0 <output_format_name@@Base+0x1c>
   159cc:	cmp	r0, #8
   159ce:	bne.n	159e4 <output_format_name@@Base+0x20>
   159d0:	movs	r2, #1
   159d2:	movs	r0, #12
   159d4:	muls	r0, r2
   159d6:	ldr	r2, [pc, #24]	; (159f0 <output_format_name@@Base+0x2c>)
   159d8:	ldr	r3, [r3, r2]
   159da:	adds	r0, #4
   159dc:	add	r0, r3
   159de:	bx	lr
   159e0:	movs	r2, #0
   159e2:	b.n	159d2 <output_format_name@@Base+0xe>
   159e4:	ldr	r0, [pc, #12]	; (159f4 <output_format_name@@Base+0x30>)
   159e6:	add	r0, pc
   159e8:	bx	lr
   159ea:	nop
   159ec:	strh	r0, [r2, r5]
   159ee:	movs	r5, r0
   159f0:	lsls	r0, r0, #11
   159f2:	movs	r0, r0
   159f4:	add	r3, sp, #48	; 0x30
   159f6:	movs	r2, r0

000159f8 <usage_command@@Base>:
   159f8:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   159fa:	mov	r4, r0
   159fc:	ldr	r5, [pc, #56]	; (15a38 <usage_command@@Base+0x40>)
   159fe:	mov	r6, r2
   15a00:	mov	r3, r1
   15a02:	ldr	r0, [r0, #8]
   15a04:	add	r5, pc
   15a06:	ldr	r1, [r4, #0]
   15a08:	ldr	r2, [r4, #16]
   15a0a:	cbz	r6, 15a2e <usage_command@@Base+0x36>
   15a0c:	ldr	r4, [pc, #44]	; (15a3c <usage_command@@Base+0x44>)
   15a0e:	ldr	r4, [r5, r4]
   15a10:	movs	r5, #0
   15a12:	ldr	r4, [r4, #0]
   15a14:	strd	r5, r5, [sp]
   15a18:	str	r4, [sp, #8]
   15a1a:	bl	15594 <btrfs_find_root_search@@Base+0x2b4>
   15a1e:	cbnz	r0, 15a32 <usage_command@@Base+0x3a>
   15a20:	mov	r1, r4
   15a22:	movs	r0, #10
   15a24:	add	sp, #16
   15a26:	ldmia.w	sp!, {r4, r5, r6, lr}
   15a2a:	b.w	90c4 <fputc@plt>
   15a2e:	ldr	r4, [pc, #16]	; (15a40 <usage_command@@Base+0x48>)
   15a30:	b.n	15a0e <usage_command@@Base+0x16>
   15a32:	add	sp, #16
   15a34:	pop	{r4, r5, r6, pc}
   15a36:	nop
   15a38:	strh	r4, [r2, r4]
   15a3a:	movs	r5, r0
   15a3c:	lsls	r4, r3, #10
   15a3e:	movs	r0, r0
   15a40:	lsls	r4, r0, #11
	...

00015a44 <usage_unknown_option@@Base>:
   15a44:	push	{r0, r1, r7, lr}
   15a46:	mov	r6, r0
   15a48:	ldr	r3, [r0, #8]
   15a4a:	mov	r8, r1
   15a4c:	ldr	r7, [pc, #124]	; (15acc <usage_unknown_option@@Base+0x88>)
   15a4e:	ldr	r2, [r3, #0]
   15a50:	movs	r3, #0
   15a52:	mov	r4, r3
   15a54:	add	r7, pc
   15a56:	mov	r1, r3
   15a58:	ldrb	r3, [r2, r4]
   15a5a:	cmp	r3, #60	; 0x3c
   15a5c:	bne.n	15ab2 <usage_unknown_option@@Base+0x6e>
   15a5e:	subs	r4, #1
   15a60:	ldr	r3, [pc, #108]	; (15ad0 <usage_unknown_option@@Base+0x8c>)
   15a62:	movs	r1, #1
   15a64:	ldr	r5, [r7, r3]
   15a66:	mov	r3, r4
   15a68:	str	r2, [sp, #0]
   15a6a:	ldr	r2, [pc, #104]	; (15ad4 <usage_unknown_option@@Base+0x90>)
   15a6c:	ldr	r0, [r5, #0]
   15a6e:	add	r2, pc
   15a70:	blx	9040 <__fprintf_chk@plt+0x4>
   15a74:	ldr	r3, [pc, #96]	; (15ad8 <usage_unknown_option@@Base+0x94>)
   15a76:	ldr	r3, [r7, r3]
   15a78:	ldr	r3, [r3, #0]
   15a7a:	cbnz	r3, 15ac6 <usage_unknown_option@@Base+0x82>
   15a7c:	ldr	r3, [pc, #92]	; (15adc <usage_unknown_option@@Base+0x98>)
   15a7e:	ldr	r2, [pc, #96]	; (15ae0 <usage_unknown_option@@Base+0x9c>)
   15a80:	ldr	r3, [r7, r3]
   15a82:	add	r2, pc
   15a84:	ldr	r3, [r3, #0]
   15a86:	add.w	r3, r3, #1073741824	; 0x40000000
   15a8a:	subs	r3, #1
   15a8c:	ldr.w	r3, [r8, r3, lsl #2]
   15a90:	movs	r1, #1
   15a92:	ldr	r0, [r5, #0]
   15a94:	blx	9040 <__fprintf_chk@plt+0x4>
   15a98:	ldr	r3, [r6, #8]
   15a9a:	ldr	r2, [pc, #72]	; (15ae4 <usage_unknown_option@@Base+0xa0>)
   15a9c:	movs	r1, #1
   15a9e:	ldr	r3, [r3, #0]
   15aa0:	add	r2, pc
   15aa2:	str	r3, [sp, #0]
   15aa4:	mov	r3, r4
   15aa6:	ldr	r0, [r5, #0]
   15aa8:	blx	9040 <__fprintf_chk@plt+0x4>
   15aac:	movs	r0, #1
   15aae:	blx	8f10 <exit@plt>
   15ab2:	cmp	r3, #91	; 0x5b
   15ab4:	beq.n	15a5e <usage_unknown_option@@Base+0x1a>
   15ab6:	cmp	r1, #32
   15ab8:	bne.n	15abe <usage_unknown_option@@Base+0x7a>
   15aba:	cmp	r3, #45	; 0x2d
   15abc:	beq.n	15a5e <usage_unknown_option@@Base+0x1a>
   15abe:	adds	r4, #1
   15ac0:	cmp	r3, #0
   15ac2:	bne.n	15a56 <usage_unknown_option@@Base+0x12>
   15ac4:	b.n	15a60 <usage_unknown_option@@Base+0x1c>
   15ac6:	ldr	r2, [pc, #32]	; (15ae8 <usage_unknown_option@@Base+0xa4>)
   15ac8:	add	r2, pc
   15aca:	b.n	15a90 <usage_unknown_option@@Base+0x4c>
   15acc:	strh	r4, [r0, r3]
   15ace:	movs	r5, r0
   15ad0:	lsls	r4, r3, #10
   15ad2:	movs	r0, r0
   15ad4:	add	r2, sp, #560	; 0x230
   15ad6:	movs	r2, r0
   15ad8:	lsls	r0, r3, #10
   15ada:	movs	r0, r0
   15adc:	lsls	r0, r2, #10
   15ade:	movs	r0, r0
   15ae0:	add	r2, sp, #508	; 0x1fc
   15ae2:	movs	r2, r0
   15ae4:	add	r2, sp, #576	; 0x240
   15ae6:	movs	r2, r0
   15ae8:	add	r2, sp, #332	; 0x14c
   15aea:	movs	r2, r0

00015aec <usage@@Base>:
   15aec:	push	{r0, r1, r2, r3, r4, lr}
   15aee:	ldr	r3, [pc, #44]	; (15b1c <usage@@Base+0x30>)
   15af0:	ldr	r2, [pc, #44]	; (15b20 <usage@@Base+0x34>)
   15af2:	add	r3, pc
   15af4:	ldr	r3, [r3, r2]
   15af6:	movs	r2, #0
   15af8:	mov	r1, r2
   15afa:	ldr	r4, [r3, #0]
   15afc:	movs	r3, #1
   15afe:	strd	r2, r2, [sp]
   15b02:	str	r4, [sp, #8]
   15b04:	ldr	r0, [r0, #8]
   15b06:	bl	15594 <btrfs_find_root_search@@Base+0x2b4>
   15b0a:	cbnz	r0, 15b14 <usage@@Base+0x28>
   15b0c:	mov	r1, r4
   15b0e:	movs	r0, #10
   15b10:	blx	90c8 <fputc@plt+0x4>
   15b14:	movs	r0, #1
   15b16:	blx	8f10 <exit@plt>
   15b1a:	nop
   15b1c:	strh	r6, [r4, r0]
   15b1e:	movs	r5, r0
   15b20:	lsls	r4, r3, #10
	...

00015b24 <clean_args_no_options@@Base>:
   15b24:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15b28:	mov	r4, r0
   15b2a:	ldr	r7, [pc, #56]	; (15b64 <clean_args_no_options@@Base+0x40>)
   15b2c:	mov	r5, r1
   15b2e:	ldr.w	r8, [pc, #56]	; 15b68 <clean_args_no_options@@Base+0x44>
   15b32:	mov	r6, r2
   15b34:	add	r7, pc
   15b36:	mov.w	r9, #0
   15b3a:	add	r8, pc
   15b3c:	mov	r3, r7
   15b3e:	mov	r2, r8
   15b40:	mov	r1, r6
   15b42:	mov	r0, r5
   15b44:	str.w	r9, [sp]
   15b48:	blx	8eec <getopt_long@plt>
   15b4c:	cmp	r0, #0
   15b4e:	blt.n	15b5c <clean_args_no_options@@Base+0x38>
   15b50:	ldr	r1, [r4, #8]
   15b52:	cmp	r1, #0
   15b54:	beq.n	15b3c <clean_args_no_options@@Base+0x18>
   15b56:	mov	r0, r4
   15b58:	bl	15aec <usage@@Base>
   15b5c:	add	sp, #12
   15b5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15b62:	nop
   15b64:	add	r4, sp, #48	; 0x30
   15b66:	movs	r2, r0
   15b68:	add	r1, pc, #196	; (adr r1, 15c30 <usage_command_group_short@@Base+0xc4>)
   15b6a:	movs	r2, r0

00015b6c <usage_command_group_short@@Base>:
   15b6c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   15b70:	mov	r5, r0
   15b72:	ldr	r7, [pc, #248]	; (15c6c <usage_command_group_short@@Base+0x100>)
   15b74:	ldr	r3, [pc, #248]	; (15c70 <usage_command_group_short@@Base+0x104>)
   15b76:	add	r7, pc
   15b78:	ldr	r6, [r0, #0]
   15b7a:	ldr	r3, [r7, r3]
   15b7c:	ldr	r4, [r3, #0]
   15b7e:	cmp	r6, #0
   15b80:	bne.n	15c00 <usage_command_group_short@@Base+0x94>
   15b82:	mov	r1, r4
   15b84:	movs	r0, #10
   15b86:	blx	90c8 <fputc@plt+0x4>
   15b8a:	ldr	r0, [pc, #232]	; (15c74 <usage_command_group_short@@Base+0x108>)
   15b8c:	mov	r1, r4
   15b8e:	ldr.w	r8, [pc, #232]	; 15c78 <usage_command_group_short@@Base+0x10c>
   15b92:	add	r0, pc
   15b94:	adds	r5, #8
   15b96:	blx	91a8 <fputs@plt+0x4>
   15b9a:	add	r8, pc
   15b9c:	mov	r6, r5
   15b9e:	ldr.w	r3, [r6], #4
   15ba2:	cmp	r3, #0
   15ba4:	bne.n	15c2c <usage_command_group_short@@Base+0xc0>
   15ba6:	ldr	r0, [pc, #212]	; (15c7c <usage_command_group_short@@Base+0x110>)
   15ba8:	mov	r1, r4
   15baa:	ldr	r6, [pc, #212]	; (15c80 <usage_command_group_short@@Base+0x114>)
   15bac:	add	r0, pc
   15bae:	blx	91a8 <fputs@plt+0x4>
   15bb2:	add	r6, pc
   15bb4:	ldr.w	r3, [r5], #4
   15bb8:	cmp	r3, #0
   15bba:	bne.n	15c4a <usage_command_group_short@@Base+0xde>
   15bbc:	mov	r1, r4
   15bbe:	movs	r0, #10
   15bc0:	blx	90c8 <fputc@plt+0x4>
   15bc4:	ldr	r3, [pc, #188]	; (15c84 <usage_command_group_short@@Base+0x118>)
   15bc6:	ldr	r0, [pc, #192]	; (15c88 <usage_command_group_short@@Base+0x11c>)
   15bc8:	ldr	r4, [r7, r3]
   15bca:	add	r0, pc
   15bcc:	ldr	r1, [r4, #0]
   15bce:	blx	91a8 <fputs@plt+0x4>
   15bd2:	ldr	r0, [pc, #184]	; (15c8c <usage_command_group_short@@Base+0x120>)
   15bd4:	ldr	r1, [r4, #0]
   15bd6:	add	r0, pc
   15bd8:	blx	91a8 <fputs@plt+0x4>
   15bdc:	ldr	r0, [pc, #176]	; (15c90 <usage_command_group_short@@Base+0x124>)
   15bde:	ldr	r1, [r4, #0]
   15be0:	add	r0, pc
   15be2:	blx	91a8 <fputs@plt+0x4>
   15be6:	ldr	r0, [pc, #172]	; (15c94 <usage_command_group_short@@Base+0x128>)
   15be8:	ldr	r1, [r4, #0]
   15bea:	add	r0, pc
   15bec:	blx	91a8 <fputs@plt+0x4>
   15bf0:	ldr	r0, [pc, #164]	; (15c98 <usage_command_group_short@@Base+0x12c>)
   15bf2:	ldr	r1, [r4, #0]
   15bf4:	add	r0, pc
   15bf6:	add	sp, #8
   15bf8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   15bfc:	b.w	91a4 <fputs@plt>
   15c00:	ldr	r3, [r6, #0]
   15c02:	cmp	r3, #0
   15c04:	beq.n	15b82 <usage_command_group_short@@Base+0x16>
   15c06:	ldr	r2, [pc, #148]	; (15c9c <usage_command_group_short@@Base+0x130>)
   15c08:	movs	r1, #1
   15c0a:	mov	r0, r4
   15c0c:	ldr.w	r8, [pc, #144]	; 15ca0 <usage_command_group_short@@Base+0x134>
   15c10:	add	r2, pc
   15c12:	blx	9040 <__fprintf_chk@plt+0x4>
   15c16:	add	r8, pc
   15c18:	ldr.w	r3, [r6, #4]!
   15c1c:	cmp	r3, #0
   15c1e:	beq.n	15b82 <usage_command_group_short@@Base+0x16>
   15c20:	mov	r2, r8
   15c22:	movs	r1, #1
   15c24:	mov	r0, r4
   15c26:	blx	9040 <__fprintf_chk@plt+0x4>
   15c2a:	b.n	15c18 <usage_command_group_short@@Base+0xac>
   15c2c:	ldr	r2, [r3, #16]
   15c2e:	lsls	r1, r2, #31
   15c30:	bmi.n	15b9e <usage_command_group_short@@Base+0x32>
   15c32:	ldr	r1, [r3, #12]
   15c34:	cmp	r1, #0
   15c36:	beq.n	15b9e <usage_command_group_short@@Base+0x32>
   15c38:	ldr	r2, [r1, #4]
   15c3a:	mov	r0, r4
   15c3c:	movs	r1, #1
   15c3e:	str	r2, [sp, #0]
   15c40:	mov	r2, r8
   15c42:	ldr	r3, [r3, #0]
   15c44:	blx	9040 <__fprintf_chk@plt+0x4>
   15c48:	b.n	15b9e <usage_command_group_short@@Base+0x32>
   15c4a:	ldr	r2, [r3, #16]
   15c4c:	lsls	r2, r2, #31
   15c4e:	bmi.n	15bb4 <usage_command_group_short@@Base+0x48>
   15c50:	ldr	r2, [r3, #12]
   15c52:	cmp	r2, #0
   15c54:	bne.n	15bb4 <usage_command_group_short@@Base+0x48>
   15c56:	ldr	r2, [r3, #8]
   15c58:	movs	r1, #1
   15c5a:	mov	r0, r4
   15c5c:	ldr	r2, [r2, #4]
   15c5e:	str	r2, [sp, #0]
   15c60:	mov	r2, r6
   15c62:	ldr	r3, [r3, #0]
   15c64:	blx	9040 <__fprintf_chk@plt+0x4>
   15c68:	b.n	15bb4 <usage_command_group_short@@Base+0x48>
   15c6a:	nop
   15c6c:	str	r2, [r4, r6]
   15c6e:	movs	r5, r0
   15c70:	lsls	r4, r0, #11
   15c72:	movs	r0, r0
   15c74:	add	r1, sp, #792	; 0x318
   15c76:	movs	r2, r0
   15c78:	add	r1, sp, #916	; 0x394
   15c7a:	movs	r2, r0
   15c7c:	add	r1, sp, #896	; 0x380
   15c7e:	movs	r2, r0
   15c80:	add	r1, sp, #820	; 0x334
   15c82:	movs	r2, r0
   15c84:	lsls	r4, r3, #10
   15c86:	movs	r0, r0
   15c88:	add	r1, sp, #824	; 0x338
   15c8a:	movs	r2, r0
   15c8c:	add	r2, sp, #4
   15c8e:	movs	r2, r0
   15c90:	add	r2, sp, #248	; 0xf8
   15c92:	movs	r2, r0
   15c94:	add	r2, sp, #476	; 0x1dc
   15c96:	movs	r2, r0
   15c98:	add	r2, sp, #696	; 0x2b8
   15c9a:	movs	r2, r0
   15c9c:	add	r1, sp, #356	; 0x164
   15c9e:	movs	r2, r0
   15ca0:	add	r1, sp, #376	; 0x178
   15ca2:	movs	r2, r0

00015ca4 <usage_command_group@@Base>:
   15ca4:	ldr	r3, [pc, #120]	; (15d20 <usage_command_group@@Base+0x7c>)
   15ca6:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15caa:	add	r3, pc
   15cac:	ldr	r5, [r0, #0]
   15cae:	mov	r6, r0
   15cb0:	mov	r7, r1
   15cb2:	cbz	r2, 15cde <usage_command_group@@Base+0x3a>
   15cb4:	ldr	r2, [pc, #108]	; (15d24 <usage_command_group@@Base+0x80>)
   15cb6:	ldr	r3, [r3, r2]
   15cb8:	ldr	r4, [r3, #0]
   15cba:	cbnz	r5, 15ce2 <usage_command_group@@Base+0x3e>
   15cbc:	mov	r1, r4
   15cbe:	movs	r0, #10
   15cc0:	blx	90c8 <fputc@plt+0x4>
   15cc4:	mov	r2, r4
   15cc6:	mov	r1, r7
   15cc8:	mov	r0, r6
   15cca:	bl	157dc <btrfs_find_root_search@@Base+0x4fc>
   15cce:	mov	r1, r4
   15cd0:	movs	r0, #10
   15cd2:	blx	90c8 <fputc@plt+0x4>
   15cd6:	ldr	r3, [r6, #4]
   15cd8:	cbnz	r3, 15d0e <usage_command_group@@Base+0x6a>
   15cda:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15cde:	ldr	r2, [pc, #72]	; (15d28 <usage_command_group@@Base+0x84>)
   15ce0:	b.n	15cb6 <usage_command_group@@Base+0x12>
   15ce2:	ldr	r3, [r5, #0]
   15ce4:	cmp	r3, #0
   15ce6:	beq.n	15cbc <usage_command_group@@Base+0x18>
   15ce8:	ldr	r2, [pc, #64]	; (15d2c <usage_command_group@@Base+0x88>)
   15cea:	movs	r1, #1
   15cec:	mov	r0, r4
   15cee:	ldr.w	r8, [pc, #64]	; 15d30 <usage_command_group@@Base+0x8c>
   15cf2:	add	r2, pc
   15cf4:	blx	9040 <__fprintf_chk@plt+0x4>
   15cf8:	add	r8, pc
   15cfa:	ldr.w	r3, [r5, #4]!
   15cfe:	cmp	r3, #0
   15d00:	beq.n	15cbc <usage_command_group@@Base+0x18>
   15d02:	mov	r2, r8
   15d04:	movs	r1, #1
   15d06:	mov	r0, r4
   15d08:	blx	9040 <__fprintf_chk@plt+0x4>
   15d0c:	b.n	15cfa <usage_command_group@@Base+0x56>
   15d0e:	ldr	r2, [pc, #36]	; (15d34 <usage_command_group@@Base+0x90>)
   15d10:	mov	r0, r4
   15d12:	movs	r1, #1
   15d14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   15d18:	add	r2, pc
   15d1a:	b.w	903c <__fprintf_chk@plt>
   15d1e:	nop
   15d20:	str	r6, [r5, r1]
   15d22:	movs	r5, r0
   15d24:	lsls	r4, r3, #10
   15d26:	movs	r0, r0
   15d28:	lsls	r4, r0, #11
   15d2a:	movs	r0, r0
   15d2c:	add	r0, sp, #476	; 0x1dc
   15d2e:	movs	r2, r0
   15d30:	add	r0, sp, #496	; 0x1f0
   15d32:	movs	r2, r0
   15d34:	add	r2, sp, #116	; 0x74
   15d36:	movs	r2, r0

00015d38 <help_unknown_token@@Base>:
   15d38:	ldr	r3, [pc, #44]	; (15d68 <help_unknown_token@@Base+0x30>)
   15d3a:	mov	r4, r1
   15d3c:	push	{r0, r1, r2, lr}
   15d3e:	add	r3, pc
   15d40:	ldr	r2, [pc, #40]	; (15d6c <help_unknown_token@@Base+0x34>)
   15d42:	movs	r1, #1
   15d44:	ldr	r5, [r3, r2]
   15d46:	ldr	r3, [pc, #40]	; (15d70 <help_unknown_token@@Base+0x38>)
   15d48:	ldr	r2, [pc, #40]	; (15d74 <help_unknown_token@@Base+0x3c>)
   15d4a:	add	r3, pc
   15d4c:	str	r0, [sp, #0]
   15d4e:	add	r2, pc
   15d50:	ldr	r0, [r5, #0]
   15d52:	blx	9040 <__fprintf_chk@plt+0x4>
   15d56:	mov	r0, r4
   15d58:	movs	r2, #1
   15d5a:	movs	r1, #0
   15d5c:	bl	15ca4 <usage_command_group@@Base>
   15d60:	movs	r0, #1
   15d62:	blx	8f10 <exit@plt>
   15d66:	nop
   15d68:	ldr	r7, [pc, #872]	; (160d4 <help_command_group@@Base+0x2ec>)
   15d6a:	movs	r5, r0
   15d6c:	lsls	r4, r3, #10
   15d6e:	movs	r0, r0
   15d70:	strh	r2, [r0, r6]
   15d72:	movs	r5, r0
   15d74:	add	r1, sp, #600	; 0x258
   15d76:	movs	r2, r0

00015d78 <help_ambiguous_token@@Base>:
   15d78:	ldr	r3, [pc, #84]	; (15dd0 <help_ambiguous_token@@Base+0x58>)
   15d7a:	mov	r4, r1
   15d7c:	ldr	r2, [pc, #84]	; (15dd4 <help_ambiguous_token@@Base+0x5c>)
   15d7e:	mov	r5, r0
   15d80:	add	r3, pc
   15d82:	ldr.w	r8, [pc, #84]	; 15dd8 <help_ambiguous_token@@Base+0x60>
   15d86:	push	{r0, r1, r7, lr}
   15d88:	movs	r1, #1
   15d8a:	ldr	r7, [r3, r2]
   15d8c:	adds	r4, #8
   15d8e:	ldr	r3, [pc, #76]	; (15ddc <help_ambiguous_token@@Base+0x64>)
   15d90:	add	r8, pc
   15d92:	ldr	r2, [pc, #76]	; (15de0 <help_ambiguous_token@@Base+0x68>)
   15d94:	str	r0, [sp, #0]
   15d96:	add	r3, pc
   15d98:	add	r2, pc
   15d9a:	ldr	r0, [r7, #0]
   15d9c:	blx	9040 <__fprintf_chk@plt+0x4>
   15da0:	ldr	r0, [pc, #64]	; (15de4 <help_ambiguous_token@@Base+0x6c>)
   15da2:	ldr	r1, [r7, #0]
   15da4:	add	r0, pc
   15da6:	blx	91a8 <fputs@plt+0x4>
   15daa:	ldr.w	r6, [r4], #4
   15dae:	cbnz	r6, 15db6 <help_ambiguous_token@@Base+0x3e>
   15db0:	movs	r0, #1
   15db2:	blx	8f10 <exit@plt>
   15db6:	ldr	r0, [r6, #0]
   15db8:	mov	r1, r5
   15dba:	bl	363dc <prefixcmp@@Base>
   15dbe:	cmp	r0, #0
   15dc0:	bne.n	15daa <help_ambiguous_token@@Base+0x32>
   15dc2:	ldr	r3, [r6, #0]
   15dc4:	mov	r2, r8
   15dc6:	ldr	r0, [r7, #0]
   15dc8:	movs	r1, #1
   15dca:	blx	9040 <__fprintf_chk@plt+0x4>
   15dce:	b.n	15daa <help_ambiguous_token@@Base+0x32>
   15dd0:	ldr	r7, [pc, #608]	; (16034 <help_command_group@@Base+0x24c>)
   15dd2:	movs	r5, r0
   15dd4:	lsls	r4, r3, #10
   15dd6:	movs	r0, r0
   15dd8:	add	r1, sp, #656	; 0x290
   15dda:	movs	r2, r0
   15ddc:	strh	r6, [r6, r4]
   15dde:	movs	r5, r0
   15de0:	add	r1, sp, #400	; 0x190
   15de2:	movs	r2, r0
   15de4:	add	r1, sp, #456	; 0x1c8
   15de6:	movs	r2, r0

00015de8 <help_command_group@@Base>:
   15de8:	cmp	r1, #1
   15dea:	push	{r4, lr}
   15dec:	mov	r4, r0
   15dee:	ble.n	15e0c <help_command_group@@Base+0x24>
   15df0:	ldr	r1, [pc, #28]	; (15e10 <help_command_group@@Base+0x28>)
   15df2:	ldr	r0, [r2, #4]
   15df4:	add	r1, pc
   15df6:	blx	8b04 <strcmp@plt>
   15dfa:	clz	r1, r0
   15dfe:	lsrs	r1, r1, #5
   15e00:	mov	r0, r4
   15e02:	movs	r2, #0
   15e04:	ldmia.w	sp!, {r4, lr}
   15e08:	b.w	15ca4 <usage_command_group@@Base>
   15e0c:	movs	r1, #0
   15e0e:	b.n	15e00 <help_command_group@@Base+0x18>
   15e10:	add	r1, sp, #276	; 0x114
   15e12:	movs	r2, r0
   15e14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e18:	sub.w	sp, sp, #4096	; 0x1000
   15e1c:	sub	sp, #20
   15e1e:	mov	r4, r1
   15e20:	ldr	r1, [pc, #448]	; (15fe4 <help_command_group@@Base+0x1fc>)
   15e22:	mov	r5, r2
   15e24:	mov	r9, r3
   15e26:	ldr	r2, [pc, #448]	; (15fe8 <help_command_group@@Base+0x200>)
   15e28:	add.w	r3, sp, #4128	; 0x1020
   15e2c:	add	r1, pc
   15e2e:	add	r6, sp, #16
   15e30:	adds	r3, #24
   15e32:	ldr	r2, [r1, r2]
   15e34:	mov	fp, r0
   15e36:	ldr	r7, [r3, #0]
   15e38:	add.w	r3, sp, #4096	; 0x1000
   15e3c:	ldr	r2, [r2, #0]
   15e3e:	str	r2, [r3, #12]
   15e40:	mov.w	r2, #0
   15e44:	mov	r0, r6
   15e46:	movw	r2, #4092	; 0xffc
   15e4a:	movs	r1, #0
   15e4c:	adds	r3, #12
   15e4e:	str.w	r1, [r6, #-4]
   15e52:	sub.w	sl, r6, #4
   15e56:	blx	8f98 <memset@plt+0x4>
   15e5a:	mov	r8, r4
   15e5c:	mov	r2, r5
   15e5e:	cmp.w	fp, #0
   15e62:	beq.n	15e9a <help_command_group@@Base+0xb2>
   15e64:	add.w	r1, r4, #4096	; 0x1000
   15e68:	mov	r0, r4
   15e6a:	bl	18170 <path_cat_out@@Base>
   15e6e:	subs	r4, r0, #0
   15e70:	bge.n	15eb2 <help_command_group@@Base+0xca>
   15e72:	ldr	r0, [pc, #376]	; (15fec <help_command_group@@Base+0x204>)
   15e74:	mov	r2, r5
   15e76:	mov	r1, r9
   15e78:	add	r0, pc
   15e7a:	bl	1bd1c <__btrfs_error@@Base>
   15e7e:	ldr	r1, [pc, #368]	; (15ff0 <help_command_group@@Base+0x208>)
   15e80:	add.w	r3, sp, #4096	; 0x1000
   15e84:	ldr	r2, [pc, #352]	; (15fe8 <help_command_group@@Base+0x200>)
   15e86:	adds	r3, #12
   15e88:	add	r1, pc
   15e8a:	ldr	r2, [r1, r2]
   15e8c:	ldr	r1, [r2, #0]
   15e8e:	ldr	r2, [r3, #0]
   15e90:	eors	r1, r2
   15e92:	beq.w	15fd6 <help_command_group@@Base+0x1ee>
   15e96:	blx	8c90 <__stack_chk_fail@plt>
   15e9a:	mov	r1, r4
   15e9c:	mov	r0, sl
   15e9e:	bl	18170 <path_cat_out@@Base>
   15ea2:	subs	r4, r0, #0
   15ea4:	bge.n	15eb0 <help_command_group@@Base+0xc8>
   15ea6:	ldr	r0, [pc, #332]	; (15ff4 <help_command_group@@Base+0x20c>)
   15ea8:	mov	r2, r5
   15eaa:	mov	r1, r9
   15eac:	add	r0, pc
   15eae:	b.n	15e7a <help_command_group@@Base+0x92>
   15eb0:	mov	r8, sl
   15eb2:	ldr	r1, [pc, #324]	; (15ff8 <help_command_group@@Base+0x210>)
   15eb4:	mov	r2, r9
   15eb6:	movs	r0, #1
   15eb8:	ldr.w	sl, [pc, #320]	; 15ffc <help_command_group@@Base+0x214>
   15ebc:	add	r1, pc
   15ebe:	movs	r4, #0
   15ec0:	blx	900c <__printf_chk@plt+0x4>
   15ec4:	mov	r0, r8
   15ec6:	blx	8f1c <strlen@plt>
   15eca:	add	sl, pc
   15ecc:	add.w	r9, r8, r0
   15ed0:	cmp	r8, r9
   15ed2:	bne.n	15ee2 <help_command_group@@Base+0xfa>
   15ed4:	cmp	r7, #0
   15ed6:	bne.n	15fb6 <help_command_group@@Base+0x1ce>
   15ed8:	movs	r0, #10
   15eda:	movs	r4, #0
   15edc:	blx	8fa8 <putchar@plt+0x4>
   15ee0:	b.n	15e7e <help_command_group@@Base+0x96>
   15ee2:	ldrb.w	r5, [r8], #1
   15ee6:	cmp	r5, #32
   15ee8:	bhi.n	15f12 <help_command_group@@Base+0x12a>
   15eea:	cmp	r5, #6
   15eec:	bls.n	15f16 <help_command_group@@Base+0x12e>
   15eee:	subs	r3, r5, #7
   15ef0:	cmp	r3, #25
   15ef2:	bhi.n	15f16 <help_command_group@@Base+0x12e>
   15ef4:	tbb	[pc, r3]
   15ef8:	cmp	r5, #37	; 0x25
   15efa:	subs	r4, #70	; 0x46
   15efc:	adds	r7, #75	; 0x4b
   15efe:	lsrs	r1, r0, #29
   15f00:	lsrs	r7, r1, #28
   15f02:	lsrs	r7, r1, #28
   15f04:	lsrs	r7, r1, #28
   15f06:	lsrs	r7, r1, #28
   15f08:	lsrs	r7, r1, #28
   15f0a:	lsrs	r7, r1, #28
   15f0c:	lsrs	r2, r6, #28
   15f0e:	lsrs	r7, r1, #28
   15f10:	str	r7, [r1, r0]
   15f12:	cmp	r5, #92	; 0x5c
   15f14:	beq.n	15fa2 <help_command_group@@Base+0x1ba>
   15f16:	blx	8ef8 <__ctype_b_loc@plt>
   15f1a:	ldr	r3, [r0, #0]
   15f1c:	ldrh.w	r3, [r3, r5, lsl #1]
   15f20:	lsls	r3, r3, #17
   15f22:	bmi.n	15fac <help_command_group@@Base+0x1c4>
   15f24:	ubfx	r3, r5, #3, #3
   15f28:	lsrs	r2, r5, #6
   15f2a:	and.w	r5, r5, #7
   15f2e:	adds	r3, #48	; 0x30
   15f30:	adds	r5, #48	; 0x30
   15f32:	adds	r2, #48	; 0x30
   15f34:	mov	r1, sl
   15f36:	movs	r0, #1
   15f38:	str	r5, [sp, #0]
   15f3a:	adds	r4, #4
   15f3c:	blx	900c <__printf_chk@plt+0x4>
   15f40:	b.n	15ed0 <help_command_group@@Base+0xe8>
   15f42:	movs	r0, #92	; 0x5c
   15f44:	blx	8fa8 <putchar@plt+0x4>
   15f48:	movs	r0, #97	; 0x61
   15f4a:	blx	8fa8 <putchar@plt+0x4>
   15f4e:	adds	r4, #2
   15f50:	b.n	15ed0 <help_command_group@@Base+0xe8>
   15f52:	movs	r0, #92	; 0x5c
   15f54:	blx	8fa8 <putchar@plt+0x4>
   15f58:	movs	r0, #98	; 0x62
   15f5a:	b.n	15f4a <help_command_group@@Base+0x162>
   15f5c:	movs	r0, #92	; 0x5c
   15f5e:	blx	8fa8 <putchar@plt+0x4>
   15f62:	movs	r0, #101	; 0x65
   15f64:	b.n	15f4a <help_command_group@@Base+0x162>
   15f66:	movs	r0, #92	; 0x5c
   15f68:	blx	8fa8 <putchar@plt+0x4>
   15f6c:	movs	r0, #102	; 0x66
   15f6e:	b.n	15f4a <help_command_group@@Base+0x162>
   15f70:	movs	r0, #92	; 0x5c
   15f72:	blx	8fa8 <putchar@plt+0x4>
   15f76:	movs	r0, #110	; 0x6e
   15f78:	b.n	15f4a <help_command_group@@Base+0x162>
   15f7a:	movs	r0, #92	; 0x5c
   15f7c:	blx	8fa8 <putchar@plt+0x4>
   15f80:	movs	r0, #114	; 0x72
   15f82:	b.n	15f4a <help_command_group@@Base+0x162>
   15f84:	movs	r0, #92	; 0x5c
   15f86:	blx	8fa8 <putchar@plt+0x4>
   15f8a:	movs	r0, #116	; 0x74
   15f8c:	b.n	15f4a <help_command_group@@Base+0x162>
   15f8e:	movs	r0, #92	; 0x5c
   15f90:	blx	8fa8 <putchar@plt+0x4>
   15f94:	movs	r0, #118	; 0x76
   15f96:	b.n	15f4a <help_command_group@@Base+0x162>
   15f98:	movs	r0, #92	; 0x5c
   15f9a:	blx	8fa8 <putchar@plt+0x4>
   15f9e:	movs	r0, #32
   15fa0:	b.n	15f4a <help_command_group@@Base+0x162>
   15fa2:	mov	r0, r5
   15fa4:	blx	8fa8 <putchar@plt+0x4>
   15fa8:	mov	r0, r5
   15faa:	b.n	15f4a <help_command_group@@Base+0x162>
   15fac:	mov	r0, r5
   15fae:	adds	r4, #1
   15fb0:	blx	8fa8 <putchar@plt+0x4>
   15fb4:	b.n	15ed0 <help_command_group@@Base+0xe8>
   15fb6:	adds	r4, #1
   15fb8:	movs	r0, #32
   15fba:	blx	8fa8 <putchar@plt+0x4>
   15fbe:	cmp	r4, #31
   15fc0:	ble.n	15fb6 <help_command_group@@Base+0x1ce>
   15fc2:	add.w	r2, sp, #4128	; 0x1020
   15fc6:	mov	r1, r7
   15fc8:	adds	r2, #28
   15fca:	movs	r0, #1
   15fcc:	str.w	r2, [r6, #-8]
   15fd0:	blx	8c28 <__vprintf_chk@plt>
   15fd4:	b.n	15ed8 <help_command_group@@Base+0xf0>
   15fd6:	mov	r0, r4
   15fd8:	add.w	sp, sp, #4096	; 0x1000
   15fdc:	add	sp, #20
   15fde:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe2:	nop
   15fe4:	ldr	r6, [pc, #944]	; (16398 <help_command_group@@Base+0x5b0>)
   15fe6:	movs	r5, r0
   15fe8:	lsls	r0, r1, #10
   15fea:	movs	r0, r0
   15fec:	add	r0, sp, #960	; 0x3c0
   15fee:	movs	r2, r0
   15ff0:	ldr	r6, [pc, #576]	; (16234 <help_command_group@@Base+0x44c>)
   15ff2:	movs	r5, r0
   15ff4:	add	r0, sp, #752	; 0x2f0
   15ff6:	movs	r2, r0
   15ff8:	add	r0, sp, #776	; 0x308
   15ffa:	movs	r2, r0
   15ffc:	add	r0, sp, #744	; 0x2e8
   15ffe:	movs	r2, r0
   16000:	push	{r4, r5, lr}
   16002:	sub	sp, #28
   16004:	strd	r2, r3, [sp, #8]
   16008:	mov	r2, r0
   1600a:	ldr	r3, [pc, #28]	; (16028 <help_command_group@@Base+0x240>)
   1600c:	movs	r0, #0
   1600e:	ldrd	r4, r5, [sp, #40]	; 0x28
   16012:	add	r3, pc
   16014:	str	r3, [sp, #0]
   16016:	ldr	r3, [pc, #20]	; (1602c <help_command_group@@Base+0x244>)
   16018:	ldr	r1, [sp, #48]	; 0x30
   1601a:	add	r3, pc
   1601c:	strd	r4, r5, [sp, #16]
   16020:	bl	15e14 <help_command_group@@Base+0x2c>
   16024:	add	sp, #28
   16026:	pop	{r4, r5, pc}
   16028:	add	r7, pc, #544	; (adr r7, 1624c <help_command_group@@Base+0x464>)
   1602a:	movs	r2, r0
   1602c:	add	r7, pc, #456	; (adr r7, 161f8 <help_command_group@@Base+0x410>)
   1602e:	movs	r2, r0
   16030:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   16032:	strd	r2, r3, [sp, #16]
   16036:	ldrd	r2, r3, [sp, #32]
   1603a:	ldr	r1, [sp, #40]	; 0x28
   1603c:	strd	r2, r3, [sp, #8]
   16040:	mov	r2, r0
   16042:	ldr	r3, [pc, #20]	; (16058 <help_command_group@@Base+0x270>)
   16044:	movs	r0, #0
   16046:	add	r3, pc
   16048:	str	r3, [sp, #0]
   1604a:	ldr	r3, [pc, #16]	; (1605c <help_command_group@@Base+0x274>)
   1604c:	add	r3, pc
   1604e:	bl	15e14 <help_command_group@@Base+0x2c>
   16052:	add	sp, #28
   16054:	ldr.w	pc, [sp], #4
   16058:	add	r7, pc, #444	; (adr r7, 16218 <help_command_group@@Base+0x430>)
   1605a:	movs	r2, r0
   1605c:	add	r7, pc, #396	; (adr r7, 161ec <help_command_group@@Base+0x404>)
   1605e:	movs	r2, r0
   16060:	push	{r0, r1, r2, r3, r4, lr}
   16062:	strd	r2, r3, [sp, #8]
   16066:	mov	r2, r0
   16068:	ldr	r3, [pc, #20]	; (16080 <help_command_group@@Base+0x298>)
   1606a:	movs	r0, #0
   1606c:	ldr	r1, [sp, #24]
   1606e:	add	r3, pc
   16070:	str	r3, [sp, #0]
   16072:	ldr	r3, [pc, #16]	; (16084 <help_command_group@@Base+0x29c>)
   16074:	add	r3, pc
   16076:	bl	15e14 <help_command_group@@Base+0x2c>
   1607a:	add	sp, #20
   1607c:	ldr.w	pc, [sp], #4
   16080:	add	r7, pc, #380	; (adr r7, 16200 <help_command_group@@Base+0x418>)
   16082:	movs	r2, r0
   16084:	add	r7, pc, #332	; (adr r7, 161d4 <help_command_group@@Base+0x3ec>)
   16086:	movs	r2, r0
   16088:	push	{r0, r1, r2, r3, r4, lr}
   1608a:	strd	r2, r3, [sp, #8]
   1608e:	mov	r2, r0
   16090:	ldr	r3, [pc, #20]	; (160a8 <help_command_group@@Base+0x2c0>)
   16092:	movs	r0, #0
   16094:	ldr	r1, [sp, #24]
   16096:	add	r3, pc
   16098:	str	r3, [sp, #0]
   1609a:	ldr	r3, [pc, #16]	; (160ac <help_command_group@@Base+0x2c4>)
   1609c:	add	r3, pc
   1609e:	bl	15e14 <help_command_group@@Base+0x2c>
   160a2:	add	sp, #20
   160a4:	ldr.w	pc, [sp], #4
   160a8:	add	r7, pc, #296	; (adr r7, 161d4 <help_command_group@@Base+0x3ec>)
   160aa:	movs	r2, r0
   160ac:	add	r7, pc, #236	; (adr r7, 1619c <help_command_group@@Base+0x3b4>)
   160ae:	movs	r2, r0
   160b0:	push	{r0, r1, r2, lr}
   160b2:	mov	r3, r1
   160b4:	str	r3, [sp, #4]
   160b6:	mov	r1, r2
   160b8:	ldr	r3, [pc, #20]	; (160d0 <help_command_group@@Base+0x2e8>)
   160ba:	mov	r2, r0
   160bc:	movs	r0, #0
   160be:	add	r3, pc
   160c0:	str	r3, [sp, #0]
   160c2:	ldr	r3, [pc, #16]	; (160d4 <help_command_group@@Base+0x2ec>)
   160c4:	add	r3, pc
   160c6:	bl	15e14 <help_command_group@@Base+0x2c>
   160ca:	add	sp, #12
   160cc:	ldr.w	pc, [sp], #4
   160d0:	add	r7, pc, #228	; (adr r7, 161b8 <help_command_group@@Base+0x3d0>)
   160d2:	movs	r2, r0
   160d4:	add	r7, pc, #152	; (adr r7, 16170 <help_command_group@@Base+0x388>)
   160d6:	movs	r2, r0
   160d8:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   160da:	strd	r2, r3, [sp, #12]
   160de:	mov	r2, r0
   160e0:	strd	r1, r3, [sp, #4]
   160e4:	movs	r0, #0
   160e6:	ldr	r3, [pc, #20]	; (160fc <help_command_group@@Base+0x314>)
   160e8:	ldr	r1, [sp, #32]
   160ea:	add	r3, pc
   160ec:	str	r3, [sp, #0]
   160ee:	ldr	r3, [pc, #16]	; (16100 <help_command_group@@Base+0x318>)
   160f0:	add	r3, pc
   160f2:	bl	15e14 <help_command_group@@Base+0x2c>
   160f6:	add	sp, #28
   160f8:	ldr.w	pc, [sp], #4
   160fc:	add	r7, pc, #124	; (adr r7, 1617c <help_command_group@@Base+0x394>)
   160fe:	movs	r2, r0
   16100:	add	r7, pc, #60	; (adr r7, 16140 <help_command_group@@Base+0x358>)
   16102:	movs	r2, r0
   16104:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16108:	sub.w	sp, sp, #4128	; 0x1020
   1610c:	sub	sp, #24
   1610e:	mov	r6, r3
   16110:	add.w	r3, sp, #4192	; 0x1060
   16114:	ldr	r4, [pc, #164]	; (161bc <help_command_group@@Base+0x3d4>)
   16116:	adds	r3, #8
   16118:	mov	r5, r0
   1611a:	mov	r7, r2
   1611c:	ldr	r0, [pc, #160]	; (161c0 <help_command_group@@Base+0x3d8>)
   1611e:	ldr	r2, [r3, #0]
   16120:	add.w	r3, sp, #4192	; 0x1060
   16124:	add	r4, pc
   16126:	adds	r3, #24
   16128:	add.w	r8, sp, #52	; 0x34
   1612c:	ldr	r1, [r3, #0]
   1612e:	ldr	r0, [r4, r0]
   16130:	add.w	r3, sp, #4128	; 0x1020
   16134:	adds	r3, #20
   16136:	ldr	r0, [r0, #0]
   16138:	str	r0, [r3, #0]
   1613a:	mov.w	r0, #0
   1613e:	mov	r0, r8
   16140:	strd	r1, r2, [sp, #40]	; 0x28
   16144:	bl	18170 <path_cat_out@@Base>
   16148:	ldrd	r1, r2, [sp, #40]	; 0x28
   1614c:	subs	r4, r0, #0
   1614e:	bge.n	16176 <help_command_group@@Base+0x38e>
   16150:	ldr	r1, [pc, #112]	; (161c4 <help_command_group@@Base+0x3dc>)
   16152:	ldr	r0, [pc, #116]	; (161c8 <help_command_group@@Base+0x3e0>)
   16154:	add	r1, pc
   16156:	add	r0, pc
   16158:	bl	1bd1c <__btrfs_error@@Base>
   1615c:	ldr	r1, [pc, #108]	; (161cc <help_command_group@@Base+0x3e4>)
   1615e:	add.w	r3, sp, #4128	; 0x1020
   16162:	ldr	r2, [pc, #92]	; (161c0 <help_command_group@@Base+0x3d8>)
   16164:	adds	r3, #20
   16166:	add	r1, pc
   16168:	ldr	r2, [r1, r2]
   1616a:	ldr	r1, [r2, #0]
   1616c:	ldr	r2, [r3, #0]
   1616e:	eors	r1, r2
   16170:	beq.n	161b0 <help_command_group@@Base+0x3c8>
   16172:	blx	8c90 <__stack_chk_fail@plt>
   16176:	add.w	r3, sp, #4192	; 0x1060
   1617a:	movs	r0, #0
   1617c:	adds	r3, #16
   1617e:	ldrd	r2, r3, [r3]
   16182:	str.w	r8, [sp, #24]
   16186:	strd	r2, r3, [sp, #32]
   1618a:	add.w	r3, sp, #4160	; 0x1040
   1618e:	adds	r3, #16
   16190:	ldrd	r2, r3, [r3]
   16194:	strd	r7, r6, [sp, #8]
   16198:	strd	r2, r3, [sp, #16]
   1619c:	mov	r2, r5
   1619e:	ldr	r3, [pc, #48]	; (161d0 <help_command_group@@Base+0x3e8>)
   161a0:	add	r3, pc
   161a2:	str	r3, [sp, #0]
   161a4:	ldr	r3, [pc, #44]	; (161d4 <help_command_group@@Base+0x3ec>)
   161a6:	add	r3, pc
   161a8:	bl	15e14 <help_command_group@@Base+0x2c>
   161ac:	mov	r4, r0
   161ae:	b.n	1615c <help_command_group@@Base+0x374>
   161b0:	mov	r0, r4
   161b2:	add.w	sp, sp, #4128	; 0x1020
   161b6:	add	sp, #24
   161b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   161bc:	ldr	r3, [pc, #976]	; (16590 <help_command_group@@Base+0x7a8>)
   161be:	movs	r5, r0
   161c0:	lsls	r0, r1, #10
   161c2:	movs	r0, r0
   161c4:	add	r6, pc, #824	; (adr r6, 16500 <help_command_group@@Base+0x718>)
   161c6:	movs	r2, r0
   161c8:	add	r6, pc, #72	; (adr r6, 16214 <help_command_group@@Base+0x42c>)
   161ca:	movs	r2, r0
   161cc:	ldr	r3, [pc, #712]	; (16498 <help_command_group@@Base+0x6b0>)
   161ce:	movs	r5, r0
   161d0:	add	r6, pc, #544	; (adr r6, 163f4 <help_command_group@@Base+0x60c>)
   161d2:	movs	r2, r0
   161d4:	add	r6, pc, #496	; (adr r6, 163c8 <help_command_group@@Base+0x5e0>)
   161d6:	movs	r2, r0
   161d8:	push	{r4, r5, lr}
   161da:	sub	sp, #28
   161dc:	strd	r2, r3, [sp, #8]
   161e0:	mov	r2, r0
   161e2:	ldr	r3, [pc, #28]	; (16200 <help_command_group@@Base+0x418>)
   161e4:	movs	r0, #0
   161e6:	ldrd	r4, r5, [sp, #40]	; 0x28
   161ea:	add	r3, pc
   161ec:	str	r3, [sp, #0]
   161ee:	ldr	r3, [pc, #20]	; (16204 <help_command_group@@Base+0x41c>)
   161f0:	ldr	r1, [sp, #48]	; 0x30
   161f2:	add	r3, pc
   161f4:	strd	r4, r5, [sp, #16]
   161f8:	bl	15e14 <help_command_group@@Base+0x2c>
   161fc:	add	sp, #28
   161fe:	pop	{r4, r5, pc}
   16200:	add	r5, pc, #704	; (adr r5, 164c4 <help_command_group@@Base+0x6dc>)
   16202:	movs	r2, r0
   16204:	add	r6, pc, #404	; (adr r6, 1639c <help_command_group@@Base+0x5b4>)
   16206:	movs	r2, r0
   16208:	ldr	r3, [pc, #20]	; (16220 <help_command_group@@Base+0x438>)
   1620a:	push	{r0, r1, r2, lr}
   1620c:	add	r3, pc
   1620e:	mov	r2, r0
   16210:	movs	r0, #0
   16212:	str	r0, [sp, #0]
   16214:	bl	15e14 <help_command_group@@Base+0x2c>
   16218:	add	sp, #12
   1621a:	ldr.w	pc, [sp], #4
   1621e:	nop
   16220:	adds	r1, #137	; 0x89
   16222:	movs	r4, r0
   16224:	ldr	r3, [pc, #20]	; (1623c <help_command_group@@Base+0x454>)
   16226:	push	{r0, r1, r2, lr}
   16228:	add	r3, pc
   1622a:	mov	r2, r0
   1622c:	movs	r0, #0
   1622e:	str	r0, [sp, #0]
   16230:	bl	15e14 <help_command_group@@Base+0x2c>
   16234:	add	sp, #12
   16236:	ldr.w	pc, [sp], #4
   1623a:	nop
   1623c:	adds	r1, #125	; 0x7d
   1623e:	movs	r4, r0
   16240:	push	{r0, r1, r2, lr}
   16242:	mov	r3, r1
   16244:	str	r3, [sp, #4]
   16246:	mov	r1, r2
   16248:	ldr	r3, [pc, #20]	; (16260 <help_command_group@@Base+0x478>)
   1624a:	mov	r2, r0
   1624c:	movs	r0, #0
   1624e:	add	r3, pc
   16250:	str	r3, [sp, #0]
   16252:	ldr	r3, [pc, #16]	; (16264 <help_command_group@@Base+0x47c>)
   16254:	add	r3, pc
   16256:	bl	15e14 <help_command_group@@Base+0x2c>
   1625a:	add	sp, #12
   1625c:	ldr.w	pc, [sp], #4
   16260:	add	r6, pc, #60	; (adr r6, 162a0 <help_command_group@@Base+0x4b8>)
   16262:	movs	r2, r0
   16264:	add	r6, pc, #108	; (adr r6, 162d4 <help_command_group@@Base+0x4ec>)
   16266:	movs	r2, r0
   16268:	push	{r4, r5, r6, r7, lr}
   1626a:	mov	r6, r0
   1626c:	ldr	r0, [pc, #120]	; (162e8 <help_command_group@@Base+0x500>)
   1626e:	mov	r5, r1
   16270:	mov	r1, r2
   16272:	ldr	r2, [pc, #120]	; (162ec <help_command_group@@Base+0x504>)
   16274:	add	r0, pc
   16276:	sub.w	sp, sp, #4096	; 0x1000
   1627a:	sub	sp, #28
   1627c:	ldr	r2, [r0, r2]
   1627e:	add.w	r3, sp, #4096	; 0x1000
   16282:	add	r7, sp, #20
   16284:	adds	r3, #20
   16286:	ldr	r2, [r2, #0]
   16288:	str	r2, [r3, #0]
   1628a:	mov.w	r2, #0
   1628e:	mov	r2, r5
   16290:	mov	r0, r7
   16292:	str	r1, [sp, #12]
   16294:	bl	18170 <path_cat_out@@Base>
   16298:	ldr	r1, [sp, #12]
   1629a:	subs	r4, r0, #0
   1629c:	bge.n	162c6 <help_command_group@@Base+0x4de>
   1629e:	ldr	r1, [pc, #80]	; (162f0 <help_command_group@@Base+0x508>)
   162a0:	mov	r2, r5
   162a2:	ldr	r0, [pc, #80]	; (162f4 <help_command_group@@Base+0x50c>)
   162a4:	add	r1, pc
   162a6:	add	r0, pc
   162a8:	bl	1bd1c <__btrfs_error@@Base>
   162ac:	ldr	r1, [pc, #72]	; (162f8 <help_command_group@@Base+0x510>)
   162ae:	add.w	r3, sp, #4096	; 0x1000
   162b2:	ldr	r2, [pc, #56]	; (162ec <help_command_group@@Base+0x504>)
   162b4:	adds	r3, #20
   162b6:	add	r1, pc
   162b8:	ldr	r2, [r1, r2]
   162ba:	ldr	r1, [r2, #0]
   162bc:	ldr	r2, [r3, #0]
   162be:	eors	r1, r2
   162c0:	beq.n	162de <help_command_group@@Base+0x4f6>
   162c2:	blx	8c90 <__stack_chk_fail@plt>
   162c6:	ldr	r3, [pc, #52]	; (162fc <help_command_group@@Base+0x514>)
   162c8:	mov	r2, r6
   162ca:	movs	r0, #0
   162cc:	str	r7, [sp, #4]
   162ce:	add	r3, pc
   162d0:	str	r3, [sp, #0]
   162d2:	ldr	r3, [pc, #44]	; (16300 <help_command_group@@Base+0x518>)
   162d4:	add	r3, pc
   162d6:	bl	15e14 <help_command_group@@Base+0x2c>
   162da:	mov	r4, r0
   162dc:	b.n	162ac <help_command_group@@Base+0x4c4>
   162de:	mov	r0, r4
   162e0:	add.w	sp, sp, #4096	; 0x1000
   162e4:	add	sp, #28
   162e6:	pop	{r4, r5, r6, r7, pc}
   162e8:	ldr	r2, [pc, #656]	; (1657c <help_command_group@@Base+0x794>)
   162ea:	movs	r5, r0
   162ec:	lsls	r0, r1, #10
   162ee:	movs	r0, r0
   162f0:	add	r5, pc, #772	; (adr r5, 165f8 <btrfs_parse_features_to_string@@Base>)
   162f2:	movs	r2, r0
   162f4:	add	r4, pc, #776	; (adr r4, 16600 <btrfs_parse_features_to_string@@Base+0x8>)
   162f6:	movs	r2, r0
   162f8:	ldr	r2, [pc, #392]	; (16484 <help_command_group@@Base+0x69c>)
   162fa:	movs	r5, r0
   162fc:	add	r5, pc, #572	; (adr r5, 1653c <help_command_group@@Base+0x754>)
   162fe:	movs	r2, r0
   16300:	add	r5, pc, #580	; (adr r5, 16548 <help_command_group@@Base+0x760>)
   16302:	movs	r2, r0
   16304:	push	{r0, r1, r2, lr}
   16306:	mov	r3, r1
   16308:	str	r3, [sp, #4]
   1630a:	mov	r1, r2
   1630c:	ldr	r3, [pc, #20]	; (16324 <help_command_group@@Base+0x53c>)
   1630e:	mov	r2, r0
   16310:	movs	r0, #0
   16312:	add	r3, pc
   16314:	str	r3, [sp, #0]
   16316:	ldr	r3, [pc, #16]	; (16328 <help_command_group@@Base+0x540>)
   16318:	add	r3, pc
   1631a:	bl	15e14 <help_command_group@@Base+0x2c>
   1631e:	add	sp, #12
   16320:	ldr.w	pc, [sp], #4
   16324:	add	r5, pc, #300	; (adr r5, 16454 <help_command_group@@Base+0x66c>)
   16326:	movs	r2, r0
   16328:	add	r5, pc, #336	; (adr r5, 1647c <help_command_group@@Base+0x694>)
   1632a:	movs	r2, r0
   1632c:	ldr	r3, [pc, #20]	; (16344 <help_command_group@@Base+0x55c>)
   1632e:	push	{r0, r1, r2, lr}
   16330:	add	r3, pc
   16332:	mov	r2, r0
   16334:	movs	r0, #0
   16336:	str	r0, [sp, #0]
   16338:	bl	15e14 <help_command_group@@Base+0x2c>
   1633c:	add	sp, #12
   1633e:	ldr.w	pc, [sp], #4
   16342:	nop
   16344:	add	r5, pc, #272	; (adr r5, 16458 <help_command_group@@Base+0x670>)
   16346:	movs	r2, r0
   16348:	ldr	r3, [pc, #20]	; (16360 <help_command_group@@Base+0x578>)
   1634a:	push	{r0, r1, r2, lr}
   1634c:	add	r3, pc
   1634e:	mov	r2, r0
   16350:	movs	r0, #0
   16352:	str	r0, [sp, #0]
   16354:	bl	15e14 <help_command_group@@Base+0x2c>
   16358:	add	sp, #12
   1635a:	ldr.w	pc, [sp], #4
   1635e:	nop
   16360:	add	r5, pc, #188	; (adr r5, 16420 <help_command_group@@Base+0x638>)
   16362:	movs	r2, r0
   16364:	push	{r4, r5, lr}
   16366:	sub	sp, #28
   16368:	strd	r2, r3, [sp, #8]
   1636c:	mov	r2, r0
   1636e:	ldr	r3, [pc, #28]	; (1638c <help_command_group@@Base+0x5a4>)
   16370:	movs	r0, #0
   16372:	ldrd	r4, r5, [sp, #40]	; 0x28
   16376:	add	r3, pc
   16378:	str	r3, [sp, #0]
   1637a:	ldr	r3, [pc, #20]	; (16390 <help_command_group@@Base+0x5a8>)
   1637c:	ldr	r1, [sp, #48]	; 0x30
   1637e:	add	r3, pc
   16380:	strd	r4, r5, [sp, #16]
   16384:	bl	15e14 <help_command_group@@Base+0x2c>
   16388:	add	sp, #28
   1638a:	pop	{r4, r5, pc}
   1638c:	add	r5, pc, #72	; (adr r5, 163d8 <help_command_group@@Base+0x5f0>)
   1638e:	movs	r2, r0
   16390:	add	r5, pc, #16	; (adr r5, 163a4 <help_command_group@@Base+0x5bc>)
   16392:	movs	r2, r0
   16394:	ldr	r3, [pc, #20]	; (163ac <help_command_group@@Base+0x5c4>)
   16396:	push	{r0, r1, r2, lr}
   16398:	add	r3, pc
   1639a:	mov	r2, r0
   1639c:	movs	r0, #0
   1639e:	str	r0, [sp, #0]
   163a0:	bl	15e14 <help_command_group@@Base+0x2c>
   163a4:	add	sp, #12
   163a6:	ldr.w	pc, [sp], #4
   163aa:	nop
   163ac:	add	r5, pc, #20	; (adr r5, 163c4 <help_command_group@@Base+0x5dc>)
   163ae:	movs	r2, r0
   163b0:	ldr	r3, [pc, #20]	; (163c8 <help_command_group@@Base+0x5e0>)
   163b2:	push	{r0, r1, r2, lr}
   163b4:	add	r3, pc
   163b6:	mov	r2, r0
   163b8:	movs	r0, #0
   163ba:	str	r0, [sp, #0]
   163bc:	bl	15e14 <help_command_group@@Base+0x2c>
   163c0:	add	sp, #12
   163c2:	ldr.w	pc, [sp], #4
   163c6:	nop
   163c8:	add	r4, pc, #956	; (adr r4, 16788 <btrfs_parse_fs_features@@Base+0x20>)
   163ca:	movs	r2, r0
   163cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   163d0:	mov	r6, r2
   163d2:	ldr	r2, [pc, #116]	; (16448 <help_command_group@@Base+0x660>)
   163d4:	sub	sp, #120	; 0x78
   163d6:	mov	r5, r3
   163d8:	ldr	r3, [pc, #112]	; (1644c <help_command_group@@Base+0x664>)
   163da:	add	r2, pc
   163dc:	ldr.w	sl, [sp, #152]	; 0x98
   163e0:	add	r7, sp, #36	; 0x24
   163e2:	add.w	r8, sp, #76	; 0x4c
   163e6:	ldr	r3, [r2, r3]
   163e8:	mov	r4, r0
   163ea:	mov	r0, r1
   163ec:	mov	r1, r7
   163ee:	ldr	r3, [r3, #0]
   163f0:	str	r3, [sp, #116]	; 0x74
   163f2:	mov.w	r3, #0
   163f6:	ldr.w	r9, [sp, #168]	; 0xa8
   163fa:	blx	8b1c <uuid_unparse@plt>
   163fe:	mov	r1, r8
   16400:	mov	r0, sl
   16402:	blx	8b1c <uuid_unparse@plt>
   16406:	ldrd	r2, r3, [sp, #160]	; 0xa0
   1640a:	mov	r1, r9
   1640c:	movs	r0, #1
   1640e:	str.w	r8, [sp, #16]
   16412:	strd	r2, r3, [sp, #24]
   16416:	mov	r2, r4
   16418:	ldr	r3, [pc, #52]	; (16450 <help_command_group@@Base+0x668>)
   1641a:	strd	r6, r5, [sp, #8]
   1641e:	add	r3, pc
   16420:	str	r3, [sp, #0]
   16422:	ldr	r3, [pc, #48]	; (16454 <help_command_group@@Base+0x66c>)
   16424:	str	r7, [sp, #4]
   16426:	add	r3, pc
   16428:	bl	15e14 <help_command_group@@Base+0x2c>
   1642c:	ldr	r2, [pc, #40]	; (16458 <help_command_group@@Base+0x670>)
   1642e:	ldr	r3, [pc, #28]	; (1644c <help_command_group@@Base+0x664>)
   16430:	add	r2, pc
   16432:	ldr	r3, [r2, r3]
   16434:	ldr	r2, [r3, #0]
   16436:	ldr	r3, [sp, #116]	; 0x74
   16438:	eors	r2, r3
   1643a:	beq.n	16440 <help_command_group@@Base+0x658>
   1643c:	blx	8c90 <__stack_chk_fail@plt>
   16440:	add	sp, #120	; 0x78
   16442:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16446:	nop
   16448:	ldr	r1, [pc, #248]	; (16544 <help_command_group@@Base+0x75c>)
   1644a:	movs	r5, r0
   1644c:	lsls	r0, r1, #10
   1644e:	movs	r0, r0
   16450:	add	r4, pc, #560	; (adr r4, 16684 <btrfs_process_fs_features@@Base+0x34>)
   16452:	movs	r2, r0
   16454:	adds	r0, #61	; 0x3d
   16456:	movs	r4, r0
   16458:	ldr	r0, [pc, #928]	; (167fc <btrfs_parse_fs_features@@Base+0x94>)
   1645a:	movs	r5, r0
   1645c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16460:	mov	r6, r2
   16462:	ldr	r2, [pc, #88]	; (164bc <help_command_group@@Base+0x6d4>)
   16464:	mov	r5, r3
   16466:	ldr	r3, [pc, #88]	; (164c0 <help_command_group@@Base+0x6d8>)
   16468:	sub	sp, #64	; 0x40
   1646a:	add	r2, pc
   1646c:	add	r7, sp, #20
   1646e:	mov	r4, r0
   16470:	mov	r0, r1
   16472:	ldr	r3, [r2, r3]
   16474:	mov	r1, r7
   16476:	ldr.w	r8, [sp, #88]	; 0x58
   1647a:	ldr	r3, [r3, #0]
   1647c:	str	r3, [sp, #60]	; 0x3c
   1647e:	mov.w	r3, #0
   16482:	blx	8b1c <uuid_unparse@plt>
   16486:	ldr	r3, [pc, #60]	; (164c4 <help_command_group@@Base+0x6dc>)
   16488:	mov	r2, r4
   1648a:	mov	r1, r8
   1648c:	movs	r0, #1
   1648e:	add	r3, pc
   16490:	str	r3, [sp, #0]
   16492:	ldr	r3, [pc, #52]	; (164c8 <help_command_group@@Base+0x6e0>)
   16494:	strd	r6, r5, [sp, #8]
   16498:	add	r3, pc
   1649a:	str	r7, [sp, #4]
   1649c:	bl	15e14 <help_command_group@@Base+0x2c>
   164a0:	ldr	r2, [pc, #40]	; (164cc <help_command_group@@Base+0x6e4>)
   164a2:	ldr	r3, [pc, #28]	; (164c0 <help_command_group@@Base+0x6d8>)
   164a4:	add	r2, pc
   164a6:	ldr	r3, [r2, r3]
   164a8:	ldr	r2, [r3, #0]
   164aa:	ldr	r3, [sp, #60]	; 0x3c
   164ac:	eors	r2, r3
   164ae:	beq.n	164b4 <help_command_group@@Base+0x6cc>
   164b0:	blx	8c90 <__stack_chk_fail@plt>
   164b4:	add	sp, #64	; 0x40
   164b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   164ba:	nop
   164bc:	ldr	r0, [pc, #696]	; (16778 <btrfs_parse_fs_features@@Base+0x10>)
   164be:	movs	r5, r0
   164c0:	lsls	r0, r1, #10
   164c2:	movs	r0, r0
   164c4:	add	r4, pc, #364	; (adr r4, 16634 <btrfs_parse_features_to_string@@Base+0x3c>)
   164c6:	movs	r2, r0
   164c8:	add	r4, pc, #296	; (adr r4, 165f4 <help_command_group@@Base+0x80c>)
   164ca:	movs	r2, r0
   164cc:	ldr	r0, [pc, #464]	; (166a0 <btrfs_list_all_fs_features@@Base+0x8>)
   164ce:	movs	r5, r0
   164d0:	ldr	r2, [pc, #112]	; (16544 <help_command_group@@Base+0x75c>)
   164d2:	ldr	r3, [pc, #116]	; (16548 <help_command_group@@Base+0x760>)
   164d4:	add	r2, pc
   164d6:	push	{r4, r5, lr}
   164d8:	sub	sp, #68	; 0x44
   164da:	ldr	r3, [r2, r3]
   164dc:	mov	r5, r1
   164de:	mov	r4, r0
   164e0:	ldr	r3, [r3, #0]
   164e2:	str	r3, [sp, #60]	; 0x3c
   164e4:	mov.w	r3, #0
   164e8:	add	r3, sp, #16
   164ea:	str	r3, [sp, #12]
   164ec:	mov	r1, r3
   164ee:	blx	8cc4 <localtime_r@plt>
   164f2:	ldr	r3, [sp, #12]
   164f4:	cbnz	r0, 1651e <help_command_group@@Base+0x736>
   164f6:	ldrd	r2, r3, [r4]
   164fa:	ldr	r0, [pc, #80]	; (1654c <help_command_group@@Base+0x764>)
   164fc:	str	r3, [sp, #0]
   164fe:	add	r0, pc
   16500:	asrs	r3, r2, #31
   16502:	bl	1bd1c <__btrfs_error@@Base>
   16506:	mvn.w	r0, #21
   1650a:	ldr	r2, [pc, #68]	; (16550 <help_command_group@@Base+0x768>)
   1650c:	ldr	r3, [pc, #56]	; (16548 <help_command_group@@Base+0x760>)
   1650e:	add	r2, pc
   16510:	ldr	r3, [r2, r3]
   16512:	ldr	r2, [r3, #0]
   16514:	ldr	r3, [sp, #60]	; 0x3c
   16516:	eors	r2, r3
   16518:	beq.n	1653e <help_command_group@@Base+0x756>
   1651a:	blx	8c90 <__stack_chk_fail@plt>
   1651e:	ldr	r2, [pc, #52]	; (16554 <help_command_group@@Base+0x76c>)
   16520:	movs	r1, #63	; 0x3f
   16522:	mov	r0, r5
   16524:	add	r2, pc
   16526:	blx	8e74 <strftime@plt>
   1652a:	cbnz	r0, 1653a <help_command_group@@Base+0x752>
   1652c:	ldrd	r2, r3, [r4]
   16530:	ldr	r0, [pc, #36]	; (16558 <help_command_group@@Base+0x770>)
   16532:	str	r3, [sp, #0]
   16534:	add	r0, pc
   16536:	asrs	r3, r2, #31
   16538:	b.n	16502 <help_command_group@@Base+0x71a>
   1653a:	movs	r0, #0
   1653c:	b.n	1650a <help_command_group@@Base+0x722>
   1653e:	add	sp, #68	; 0x44
   16540:	pop	{r4, r5, pc}
   16542:	nop
   16544:	ldr	r0, [pc, #272]	; (16658 <btrfs_process_fs_features@@Base+0x8>)
   16546:	movs	r5, r0
   16548:	lsls	r0, r1, #10
   1654a:	movs	r0, r0
   1654c:	add	r4, pc, #0	; (adr r4, 16550 <help_command_group@@Base+0x768>)
   1654e:	movs	r2, r0
   16550:	ldr	r0, [pc, #40]	; (1657c <help_command_group@@Base+0x794>)
   16552:	movs	r5, r0
   16554:	add	r4, pc, #40	; (adr r4, 16580 <help_command_group@@Base+0x798>)
   16556:	movs	r2, r0
   16558:	add	r4, pc, #8	; (adr r4, 16564 <help_command_group@@Base+0x77c>)
   1655a:	movs	r2, r0
   1655c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16560:	mov	r6, r2
   16562:	ldr	r2, [pc, #128]	; (165e4 <help_command_group@@Base+0x7fc>)
   16564:	mov	r5, r3
   16566:	ldr	r3, [pc, #128]	; (165e8 <help_command_group@@Base+0x800>)
   16568:	sub	sp, #220	; 0xdc
   1656a:	add	r2, pc
   1656c:	add	r7, sp, #20
   1656e:	mov	r4, r0
   16570:	mov	r0, r1
   16572:	ldr	r3, [r2, r3]
   16574:	mov	r1, r7
   16576:	ldr.w	r9, [sp, #248]	; 0xf8
   1657a:	ldr	r3, [r3, #0]
   1657c:	str	r3, [sp, #212]	; 0xd4
   1657e:	mov.w	r3, #0
   16582:	bl	164d0 <help_command_group@@Base+0x6e8>
   16586:	cmp	r0, #0
   16588:	bge.n	165a2 <help_command_group@@Base+0x7ba>
   1658a:	mvn.w	r0, #21
   1658e:	ldr	r2, [pc, #92]	; (165ec <help_command_group@@Base+0x804>)
   16590:	ldr	r3, [pc, #84]	; (165e8 <help_command_group@@Base+0x800>)
   16592:	add	r2, pc
   16594:	ldr	r3, [r2, r3]
   16596:	ldr	r2, [r3, #0]
   16598:	ldr	r3, [sp, #212]	; 0xd4
   1659a:	eors	r2, r3
   1659c:	beq.n	165dc <help_command_group@@Base+0x7f4>
   1659e:	blx	8c90 <__stack_chk_fail@plt>
   165a2:	add.w	r8, sp, #84	; 0x54
   165a6:	mov	r0, r6
   165a8:	mov	r1, r8
   165aa:	bl	164d0 <help_command_group@@Base+0x6e8>
   165ae:	cmp	r0, #0
   165b0:	blt.n	1658a <help_command_group@@Base+0x7a2>
   165b2:	add	r6, sp, #148	; 0x94
   165b4:	mov	r0, r5
   165b6:	mov	r1, r6
   165b8:	bl	164d0 <help_command_group@@Base+0x6e8>
   165bc:	cmp	r0, #0
   165be:	blt.n	1658a <help_command_group@@Base+0x7a2>
   165c0:	ldr	r3, [pc, #44]	; (165f0 <help_command_group@@Base+0x808>)
   165c2:	mov	r2, r4
   165c4:	mov	r1, r9
   165c6:	strd	r8, r6, [sp, #8]
   165ca:	add	r3, pc
   165cc:	str	r3, [sp, #0]
   165ce:	ldr	r3, [pc, #36]	; (165f4 <help_command_group@@Base+0x80c>)
   165d0:	movs	r0, #0
   165d2:	str	r7, [sp, #4]
   165d4:	add	r3, pc
   165d6:	bl	15e14 <help_command_group@@Base+0x2c>
   165da:	b.n	1658e <help_command_group@@Base+0x7a6>
   165dc:	add	sp, #220	; 0xdc
   165de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   165e2:	nop
   165e4:			; <UNDEFINED> instruction: 0x47ae
   165e6:	movs	r5, r0
   165e8:	lsls	r0, r1, #10
   165ea:	movs	r0, r0
   165ec:			; <UNDEFINED> instruction: 0x4786
   165ee:	movs	r5, r0
   165f0:	add	r3, pc, #692	; (adr r3, 168a8 <get_running_kernel_version@@Base+0x2c>)
   165f2:	movs	r2, r0
   165f4:	add	r3, pc, #624	; (adr r3, 16868 <print_kernel_version@@Base+0x28>)
   165f6:	movs	r2, r0

000165f8 <btrfs_parse_features_to_string@@Base>:
   165f8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165fc:	mov	r5, r0
   165fe:	ldr.w	r8, [pc, #72]	; 16648 <btrfs_parse_features_to_string@@Base+0x50>
   16602:	mov	r9, r2
   16604:	ldr.w	fp, [pc, #68]	; 1664c <btrfs_parse_features_to_string@@Base+0x54>
   16608:	mov	sl, r3
   1660a:	add	r8, pc
   1660c:	movs	r4, #0
   1660e:	add	fp, pc
   16610:	strb	r4, [r0, #0]
   16612:	ldrd	r2, r3, [r8, #8]
   16616:	and.w	r6, r9, r2
   1661a:	and.w	r7, sl, r3
   1661e:	orrs.w	r3, r6, r7
   16622:	beq.n	1663a <btrfs_parse_features_to_string@@Base+0x42>
   16624:	ldrb	r3, [r5, #0]
   16626:	cbz	r3, 16630 <btrfs_parse_features_to_string@@Base+0x38>
   16628:	mov	r1, fp
   1662a:	mov	r0, r5
   1662c:	blx	8d3c <strcat@plt+0x4>
   16630:	ldr.w	r1, [r8]
   16634:	mov	r0, r5
   16636:	blx	8d3c <strcat@plt+0x4>
   1663a:	adds	r4, #1
   1663c:	add.w	r8, r8, #48	; 0x30
   16640:	cmp	r4, #7
   16642:	bne.n	16612 <btrfs_parse_features_to_string@@Base+0x1a>
   16644:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16648:	subs	r7, #194	; 0xc2
   1664a:	movs	r5, r0
   1664c:	bkpt	0x007a
   1664e:	movs	r2, r0

00016650 <btrfs_process_fs_features@@Base>:
   16650:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16654:	mov	r6, r0
   16656:	ldr	r4, [pc, #56]	; (16690 <btrfs_process_fs_features@@Base+0x40>)
   16658:	mov	r7, r1
   1665a:	ldr.w	sl, [pc, #56]	; 16694 <btrfs_process_fs_features@@Base+0x44>
   1665e:	movs	r5, #0
   16660:	add	r4, pc
   16662:	add	sl, pc
   16664:	ldrd	r2, r3, [r4, #8]
   16668:	and.w	r8, r6, r2
   1666c:	and.w	r9, r7, r3
   16670:	orrs.w	r3, r8, r9
   16674:	beq.n	16682 <btrfs_process_fs_features@@Base+0x32>
   16676:	ldr	r3, [r4, #44]	; 0x2c
   16678:	mov	r1, sl
   1667a:	ldr	r2, [r4, #0]
   1667c:	movs	r0, #1
   1667e:	blx	900c <__printf_chk@plt+0x4>
   16682:	adds	r5, #1
   16684:	adds	r4, #48	; 0x30
   16686:	cmp	r5, #7
   16688:	bne.n	16664 <btrfs_process_fs_features@@Base+0x14>
   1668a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1668e:	nop
   16690:	subs	r7, #108	; 0x6c
   16692:	movs	r5, r0
   16694:	add	r3, pc, #192	; (adr r3, 16758 <btrfs_list_all_fs_features@@Base+0xc0>)
   16696:	movs	r2, r0

00016698 <btrfs_list_all_fs_features@@Base>:
   16698:	ldr	r3, [pc, #168]	; (16744 <btrfs_list_all_fs_features@@Base+0xac>)
   1669a:	ldr	r2, [pc, #172]	; (16748 <btrfs_list_all_fs_features@@Base+0xb0>)
   1669c:	add	r3, pc
   1669e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166a2:	mov	r7, r0
   166a4:	ldr	r5, [r3, r2]
   166a6:	sub	sp, #28
   166a8:	ldr	r0, [pc, #160]	; (1674c <btrfs_list_all_fs_features@@Base+0xb4>)
   166aa:	mov	r8, r1
   166ac:	ldr	r4, [pc, #160]	; (16750 <btrfs_list_all_fs_features@@Base+0xb8>)
   166ae:	movs	r6, #0
   166b0:	ldr	r1, [r5, #0]
   166b2:	add	r0, pc
   166b4:	blx	91a8 <fputs@plt+0x4>
   166b8:	ldr.w	r9, [pc, #152]	; 16754 <btrfs_list_all_fs_features@@Base+0xbc>
   166bc:	ldr.w	sl, [pc, #152]	; 16758 <btrfs_list_all_fs_features@@Base+0xc0>
   166c0:	add	r4, pc
   166c2:	ldr.w	fp, [pc, #152]	; 1675c <btrfs_list_all_fs_features@@Base+0xc4>
   166c6:	add	r9, pc
   166c8:	add	sl, pc
   166ca:	add	fp, pc
   166cc:	ldrd	r2, r3, [r4, #8]
   166d0:	and.w	r1, r2, r7
   166d4:	str	r1, [sp, #16]
   166d6:	and.w	r1, r3, r8
   166da:	str	r1, [sp, #20]
   166dc:	ldrd	r0, r1, [sp, #16]
   166e0:	orrs	r1, r0
   166e2:	bne.n	16734 <btrfs_list_all_fs_features@@Base+0x9c>
   166e4:	strd	r2, r3, [sp, #8]
   166e8:	movs	r1, #1
   166ea:	ldr	r3, [r4, #44]	; 0x2c
   166ec:	mov	r2, r9
   166ee:	str	r3, [sp, #0]
   166f0:	ldr	r3, [r4, #0]
   166f2:	ldr	r0, [r5, #0]
   166f4:	blx	9040 <__fprintf_chk@plt+0x4>
   166f8:	ldr	r3, [r4, #24]
   166fa:	cbz	r3, 1670a <btrfs_list_all_fs_features@@Base+0x72>
   166fc:	ldr	r2, [pc, #96]	; (16760 <btrfs_list_all_fs_features@@Base+0xc8>)
   166fe:	movs	r1, #1
   16700:	ldr	r3, [r4, #20]
   16702:	ldr	r0, [r5, #0]
   16704:	add	r2, pc
   16706:	blx	9040 <__fprintf_chk@plt+0x4>
   1670a:	ldr	r3, [r4, #32]
   1670c:	cbz	r3, 1671c <btrfs_list_all_fs_features@@Base+0x84>
   1670e:	ldr	r2, [pc, #84]	; (16764 <btrfs_list_all_fs_features@@Base+0xcc>)
   16710:	movs	r1, #1
   16712:	ldr	r3, [r4, #28]
   16714:	ldr	r0, [r5, #0]
   16716:	add	r2, pc
   16718:	blx	9040 <__fprintf_chk@plt+0x4>
   1671c:	ldr	r3, [r4, #40]	; 0x28
   1671e:	cbz	r3, 1672c <btrfs_list_all_fs_features@@Base+0x94>
   16720:	ldr	r3, [r4, #36]	; 0x24
   16722:	mov	r2, fp
   16724:	ldr	r0, [r5, #0]
   16726:	movs	r1, #1
   16728:	blx	9040 <__fprintf_chk@plt+0x4>
   1672c:	ldr	r1, [r5, #0]
   1672e:	mov	r0, sl
   16730:	blx	91a8 <fputs@plt+0x4>
   16734:	adds	r6, #1
   16736:	adds	r4, #48	; 0x30
   16738:	cmp	r6, #6
   1673a:	bne.n	166cc <btrfs_list_all_fs_features@@Base+0x34>
   1673c:	add	sp, #28
   1673e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16742:	nop
   16744:	mov	r4, pc
   16746:	movs	r5, r0
   16748:	lsls	r4, r3, #10
   1674a:	movs	r0, r0
   1674c:	add	r3, pc, #24	; (adr r3, 16768 <btrfs_parse_fs_features@@Base>)
   1674e:	movs	r2, r0
   16750:	subs	r7, #12
   16752:	movs	r5, r0
   16754:	add	r3, pc, #72	; (adr r3, 167a0 <btrfs_parse_fs_features@@Base+0x38>)
   16756:	movs	r2, r0
   16758:	cmp	r1, #12
   1675a:	movs	r4, r0
   1675c:	add	r3, pc, #216	; (adr r3, 16838 <btrfs_parse_fs_features@@Base+0xd0>)
   1675e:	movs	r2, r0
   16760:	add	r2, pc, #920	; (adr r2, 16afc <fmt_end@@Base+0x68>)
   16762:	movs	r2, r0
   16764:	add	r2, pc, #896	; (adr r2, 16ae8 <fmt_end@@Base+0x54>)
   16766:	movs	r2, r0

00016768 <btrfs_parse_fs_features@@Base>:
   16768:	ldr	r2, [pc, #188]	; (16828 <btrfs_parse_fs_features@@Base+0xc0>)
   1676a:	ldr	r3, [pc, #192]	; (1682c <btrfs_parse_fs_features@@Base+0xc4>)
   1676c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16770:	add	r2, pc
   16772:	sub	sp, #20
   16774:	mov	r5, r1
   16776:	add	r7, sp, #8
   16778:	ldr	r1, [pc, #180]	; (16830 <btrfs_parse_fs_features@@Base+0xc8>)
   1677a:	ldr	r3, [r2, r3]
   1677c:	add	r1, pc
   1677e:	mov	r2, r7
   16780:	ldr	r3, [r3, #0]
   16782:	str	r3, [sp, #12]
   16784:	mov.w	r3, #0
   16788:	movs	r3, #0
   1678a:	str	r3, [sp, #8]
   1678c:	blx	8de4 <strtok_r@plt>
   16790:	ldr.w	r9, [pc, #160]	; 16834 <btrfs_parse_fs_features@@Base+0xcc>
   16794:	add	r9, pc
   16796:	mov	r4, r0
   16798:	cbnz	r4, 167ae <btrfs_parse_fs_features@@Base+0x46>
   1679a:	ldr	r2, [pc, #156]	; (16838 <btrfs_parse_fs_features@@Base+0xd0>)
   1679c:	ldr	r3, [pc, #140]	; (1682c <btrfs_parse_fs_features@@Base+0xc4>)
   1679e:	add	r2, pc
   167a0:	ldr	r3, [r2, r3]
   167a2:	ldr	r2, [r3, #0]
   167a4:	ldr	r3, [sp, #12]
   167a6:	eors	r2, r3
   167a8:	beq.n	16820 <btrfs_parse_fs_features@@Base+0xb8>
   167aa:	blx	8c90 <__stack_chk_fail@plt>
   167ae:	ldr	r6, [pc, #140]	; (1683c <btrfs_parse_fs_features@@Base+0xd4>)
   167b0:	add.w	r8, r4, #1
   167b4:	mov.w	fp, #0
   167b8:	add	r6, pc
   167ba:	add.w	sl, r6, #336	; 0x150
   167be:	ldrb	r2, [r4, #0]
   167c0:	ldr	r3, [r6, #0]
   167c2:	cmp	r2, #94	; 0x5e
   167c4:	bne.n	16806 <btrfs_parse_fs_features@@Base+0x9e>
   167c6:	mov	r0, r3
   167c8:	mov	r1, r8
   167ca:	str	r3, [sp, #4]
   167cc:	blx	8b04 <strcmp@plt>
   167d0:	ldr	r3, [sp, #4]
   167d2:	cbnz	r0, 16806 <btrfs_parse_fs_features@@Base+0x9e>
   167d4:	ldrd	r0, r1, [r6, #8]
   167d8:	ldrd	r2, r3, [r5]
   167dc:	bic.w	r2, r2, r0
   167e0:	bic.w	r3, r3, r1
   167e4:	mov.w	fp, #1
   167e8:	strd	r2, r3, [r5]
   167ec:	adds	r6, #48	; 0x30
   167ee:	cmp	sl, r6
   167f0:	bne.n	167be <btrfs_parse_fs_features@@Base+0x56>
   167f2:	cmp.w	fp, #0
   167f6:	beq.n	1679a <btrfs_parse_fs_features@@Base+0x32>
   167f8:	mov	r2, r7
   167fa:	mov	r1, r9
   167fc:	movs	r0, #0
   167fe:	blx	8de4 <strtok_r@plt>
   16802:	mov	r4, r0
   16804:	b.n	16798 <btrfs_parse_fs_features@@Base+0x30>
   16806:	mov	r1, r4
   16808:	mov	r0, r3
   1680a:	blx	8b04 <strcmp@plt>
   1680e:	cmp	r0, #0
   16810:	bne.n	167ec <btrfs_parse_fs_features@@Base+0x84>
   16812:	ldrd	r2, r3, [r5]
   16816:	ldrd	r0, r1, [r6, #8]
   1681a:	orrs	r2, r0
   1681c:	orrs	r3, r1
   1681e:	b.n	167e4 <btrfs_parse_fs_features@@Base+0x7c>
   16820:	mov	r0, r4
   16822:	add	sp, #20
   16824:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16828:	cmp	r8, r5
   1682a:	movs	r5, r0
   1682c:	lsls	r0, r1, #10
   1682e:	movs	r0, r0
   16830:	str	r1, [sp, #32]
   16832:	movs	r2, r0
   16834:	str	r0, [sp, #960]	; 0x3c0
   16836:	movs	r2, r0
   16838:	cmp	r2, pc
   1683a:	movs	r5, r0
   1683c:	subs	r6, #20
   1683e:	movs	r5, r0

00016840 <print_kernel_version@@Base>:
   16840:	push	{r0, r1, r2, r4, r5, lr}
   16842:	uxtb	r5, r1
   16844:	ldr	r2, [pc, #44]	; (16874 <print_kernel_version@@Base+0x34>)
   16846:	ubfx	r3, r1, #8, #8
   1684a:	str	r3, [sp, #0]
   1684c:	lsrs	r3, r1, #16
   1684e:	add	r2, pc
   16850:	movs	r1, #1
   16852:	mov	r4, r0
   16854:	blx	9040 <__fprintf_chk@plt+0x4>
   16858:	cbz	r5, 1686e <print_kernel_version@@Base+0x2e>
   1685a:	ldr	r2, [pc, #28]	; (16878 <print_kernel_version@@Base+0x38>)
   1685c:	mov	r3, r5
   1685e:	movs	r1, #1
   16860:	mov	r0, r4
   16862:	add	r2, pc
   16864:	add	sp, #12
   16866:	ldmia.w	sp!, {r4, r5, lr}
   1686a:	b.w	903c <__fprintf_chk@plt>
   1686e:	add	sp, #12
   16870:	pop	{r4, r5, pc}
   16872:	nop
   16874:	add	r1, pc, #764	; (adr r1, 16b74 <fmt_start_value@@Base+0x4>)
   16876:	movs	r2, r0
   16878:	bls.n	1686c <print_kernel_version@@Base+0x2c>
   1687a:	movs	r2, r0

0001687c <get_running_kernel_version@@Base>:
   1687c:	ldr	r2, [pc, #204]	; (1694c <get_running_kernel_version@@Base+0xd0>)
   1687e:	ldr	r3, [pc, #208]	; (16950 <get_running_kernel_version@@Base+0xd4>)
   16880:	push	{r4, r5, r6, r7, lr}
   16882:	add	r2, pc
   16884:	sub	sp, #404	; 0x194
   16886:	add	r6, sp, #4
   16888:	ldr	r3, [r2, r3]
   1688a:	mov	r5, sp
   1688c:	mov	r0, r6
   1688e:	ldr	r3, [r3, #0]
   16890:	str	r3, [sp, #396]	; 0x18c
   16892:	mov.w	r3, #0
   16896:	movs	r3, #0
   16898:	str	r3, [r5, #0]
   1689a:	blx	8c50 <uname@plt>
   1689e:	ldr	r1, [pc, #180]	; (16954 <get_running_kernel_version@@Base+0xd8>)
   168a0:	mov	r0, r6
   168a2:	add	r1, pc
   168a4:	blx	8b04 <strcmp@plt>
   168a8:	mov	r4, r0
   168aa:	cbz	r0, 168bc <get_running_kernel_version@@Base+0x40>
   168ac:	ldr	r0, [pc, #168]	; (16958 <get_running_kernel_version@@Base+0xdc>)
   168ae:	mov	r1, r6
   168b0:	add	r0, pc
   168b2:	bl	1bd1c <__btrfs_error@@Base>
   168b6:	movs	r0, #1
   168b8:	blx	8f10 <exit@plt>
   168bc:	add.w	r7, sp, #134	; 0x86
   168c0:	movs	r1, #45	; 0x2d
   168c2:	mov	r0, r7
   168c4:	blx	8f28 <strchr@plt>
   168c8:	cbz	r0, 168cc <get_running_kernel_version@@Base+0x50>
   168ca:	strb	r4, [r0, #0]
   168cc:	ldr	r6, [pc, #140]	; (1695c <get_running_kernel_version@@Base+0xe0>)
   168ce:	mov	r2, r5
   168d0:	mov	r0, r7
   168d2:	add	r6, pc
   168d4:	mov	r1, r6
   168d6:	blx	8de4 <strtok_r@plt>
   168da:	mov	r4, r0
   168dc:	bl	363b8 <string_is_numerical@@Base>
   168e0:	cbnz	r0, 168fa <get_running_kernel_version@@Base+0x7e>
   168e2:	mov.w	r4, #4294967295	; 0xffffffff
   168e6:	ldr	r2, [pc, #120]	; (16960 <get_running_kernel_version@@Base+0xe4>)
   168e8:	ldr	r3, [pc, #100]	; (16950 <get_running_kernel_version@@Base+0xd4>)
   168ea:	add	r2, pc
   168ec:	ldr	r3, [r2, r3]
   168ee:	ldr	r2, [r3, #0]
   168f0:	ldr	r3, [sp, #396]	; 0x18c
   168f2:	eors	r2, r3
   168f4:	beq.n	16944 <get_running_kernel_version@@Base+0xc8>
   168f6:	blx	8c90 <__stack_chk_fail@plt>
   168fa:	mov	r0, r4
   168fc:	blx	9104 <atoi@plt>
   16900:	mov	r2, r5
   16902:	mov	r1, r6
   16904:	mov	r4, r0
   16906:	movs	r0, #0
   16908:	blx	8de4 <strtok_r@plt>
   1690c:	mov	r7, r0
   1690e:	bl	363b8 <string_is_numerical@@Base>
   16912:	cmp	r0, #0
   16914:	beq.n	168e2 <get_running_kernel_version@@Base+0x66>
   16916:	mov	r0, r7
   16918:	blx	9104 <atoi@plt>
   1691c:	mov	r2, r5
   1691e:	mov	r1, r6
   16920:	lsls	r3, r0, #8
   16922:	movs	r0, #0
   16924:	orr.w	r4, r3, r4, lsl #16
   16928:	blx	8de4 <strtok_r@plt>
   1692c:	mov	r5, r0
   1692e:	cmp	r0, #0
   16930:	beq.n	168e6 <get_running_kernel_version@@Base+0x6a>
   16932:	bl	363b8 <string_is_numerical@@Base>
   16936:	cmp	r0, #0
   16938:	beq.n	168e6 <get_running_kernel_version@@Base+0x6a>
   1693a:	mov	r0, r5
   1693c:	blx	9104 <atoi@plt>
   16940:	orrs	r4, r0
   16942:	b.n	168e6 <get_running_kernel_version@@Base+0x6a>
   16944:	mov	r0, r4
   16946:	add	sp, #404	; 0x194
   16948:	pop	{r4, r5, r6, r7, pc}
   1694a:	nop
   1694c:	add	lr, r2
   1694e:	movs	r5, r0
   16950:	lsls	r0, r1, #10
   16952:	movs	r0, r0
   16954:	add	r1, pc, #452	; (adr r1, 16b1c <fmt_start_list_value@@Base+0x10>)
   16956:	movs	r2, r0
   16958:	add	r1, pc, #420	; (adr r1, 16b00 <fmt_end@@Base+0x6c>)
   1695a:	movs	r2, r0
   1695c:	ldrh	r7, [r3, #20]
   1695e:	movs	r2, r0
   16960:	add	r6, r5
   16962:	movs	r5, r0

00016964 <btrfs_check_nodesize@@Base>:
   16964:	cmp	r0, r1
   16966:	push	{r4, r6, r7, lr}
   16968:	mov	r4, r0
   1696a:	bcs.n	1697e <btrfs_check_nodesize@@Base+0x1a>
   1696c:	mov	r2, r1
   1696e:	mov	r1, r0
   16970:	ldr	r0, [pc, #72]	; (169bc <btrfs_check_nodesize@@Base+0x58>)
   16972:	add	r0, pc
   16974:	bl	1bd1c <__btrfs_error@@Base>
   16978:	mov.w	r0, #4294967295	; 0xffffffff
   1697c:	pop	{r4, r6, r7, pc}
   1697e:	cmp.w	r0, #65536	; 0x10000
   16982:	bls.n	16990 <btrfs_check_nodesize@@Base+0x2c>
   16984:	mov	r1, r0
   16986:	ldr	r0, [pc, #56]	; (169c0 <btrfs_check_nodesize@@Base+0x5c>)
   16988:	mov.w	r2, #65536	; 0x10000
   1698c:	add	r0, pc
   1698e:	b.n	16974 <btrfs_check_nodesize@@Base+0x10>
   16990:	subs	r3, r1, #1
   16992:	ands	r0, r3
   16994:	beq.n	169a0 <btrfs_check_nodesize@@Base+0x3c>
   16996:	ldr	r0, [pc, #44]	; (169c4 <btrfs_check_nodesize@@Base+0x60>)
   16998:	mov	r2, r1
   1699a:	mov	r1, r4
   1699c:	add	r0, pc
   1699e:	b.n	16974 <btrfs_check_nodesize@@Base+0x10>
   169a0:	and.w	r6, r2, #4
   169a4:	mov	r7, r0
   169a6:	orrs.w	r3, r6, r7
   169aa:	beq.n	1697c <btrfs_check_nodesize@@Base+0x18>
   169ac:	cmp	r4, r1
   169ae:	beq.n	1697c <btrfs_check_nodesize@@Base+0x18>
   169b0:	ldr	r0, [pc, #20]	; (169c8 <btrfs_check_nodesize@@Base+0x64>)
   169b2:	mov	r2, r1
   169b4:	mov	r1, r4
   169b6:	add	r0, pc
   169b8:	b.n	16974 <btrfs_check_nodesize@@Base+0x10>
   169ba:	nop
   169bc:	add	r0, pc, #760	; (adr r0, 16cb8 <fmt_print_end_group@@Base+0x50>)
   169be:	movs	r2, r0
   169c0:	add	r0, pc, #808	; (adr r0, 16cec <fmt_start@@Base+0x14>)
   169c2:	movs	r2, r0
   169c4:	add	r0, pc, #892	; (adr r0, 16d44 <fmt_start@@Base+0x6c>)
   169c6:	movs	r2, r0
   169c8:	add	r0, pc, #948	; (adr r0, 16d80 <fmt_print@@Base+0x34>)
   169ca:	movs	r2, r0
   169cc:	push	{r4, lr}
   169ce:	mov	r4, r0
   169d0:	subs	r4, #1
   169d2:	bcs.n	169d6 <btrfs_check_nodesize@@Base+0x72>
   169d4:	pop	{r4, pc}
   169d6:	movs	r0, #32
   169d8:	blx	8fa8 <putchar@plt+0x4>
   169dc:	movs	r0, #32
   169de:	blx	8fa8 <putchar@plt+0x4>
   169e2:	b.n	169d0 <btrfs_check_nodesize@@Base+0x6c>
   169e4:	push	{r4, lr}
   169e6:	mov	r4, r0
   169e8:	subs	r4, #1
   169ea:	bcs.n	169ee <btrfs_check_nodesize@@Base+0x8a>
   169ec:	pop	{r4, pc}
   169ee:	movs	r0, #32
   169f0:	blx	8fa8 <putchar@plt+0x4>
   169f4:	b.n	169e8 <btrfs_check_nodesize@@Base+0x84>
   169f6:	ldr	r3, [pc, #92]	; (16a54 <btrfs_check_nodesize@@Base+0xf0>)
   169f8:	ldr	r2, [pc, #92]	; (16a58 <btrfs_check_nodesize@@Base+0xf4>)
   169fa:	add	r3, pc
   169fc:	push	{r4, lr}
   169fe:	mov	r4, r0
   16a00:	ldr	r3, [r3, r2]
   16a02:	ldr	r3, [r3, #0]
   16a04:	cmp	r3, #8
   16a06:	bne.n	16a28 <btrfs_check_nodesize@@Base+0xc4>
   16a08:	ldr	r3, [r0, #8]
   16a0a:	adds	r3, #8
   16a0c:	ldr.w	r3, [r0, r3, lsl #2]
   16a10:	cbnz	r3, 16a2a <btrfs_check_nodesize@@Base+0xc6>
   16a12:	movs	r0, #10
   16a14:	blx	8fa8 <putchar@plt+0x4>
   16a18:	ldr	r0, [r4, #8]
   16a1a:	bl	169cc <btrfs_check_nodesize@@Base+0x68>
   16a1e:	ldr	r3, [r4, #8]
   16a20:	movs	r2, #1
   16a22:	adds	r3, #8
   16a24:	str.w	r2, [r4, r3, lsl #2]
   16a28:	pop	{r4, pc}
   16a2a:	cmp	r3, #1
   16a2c:	bne.n	16a44 <btrfs_check_nodesize@@Base+0xe0>
   16a2e:	ldr	r0, [pc, #44]	; (16a5c <btrfs_check_nodesize@@Base+0xf8>)
   16a30:	add	r0, pc
   16a32:	blx	8e24 <puts@plt+0x4>
   16a36:	ldr	r0, [r4, #8]
   16a38:	bl	169cc <btrfs_check_nodesize@@Base+0x68>
   16a3c:	ldr	r3, [r4, #8]
   16a3e:	movs	r2, #2
   16a40:	adds	r3, #8
   16a42:	b.n	16a24 <btrfs_check_nodesize@@Base+0xc0>
   16a44:	ldr	r0, [pc, #24]	; (16a60 <btrfs_check_nodesize@@Base+0xfc>)
   16a46:	add	r0, pc
   16a48:	blx	8e24 <puts@plt+0x4>
   16a4c:	ldr	r0, [r4, #8]
   16a4e:	ldmia.w	sp!, {r4, lr}
   16a52:	b.n	169cc <btrfs_check_nodesize@@Base+0x68>
   16a54:	orrs	r6, r3
   16a56:	movs	r5, r0
   16a58:	lsls	r4, r0, #10
   16a5a:	movs	r0, r0
   16a5c:	ldrh	r4, [r2, #50]	; 0x32
   16a5e:	movs	r2, r0
   16a60:	ldrh	r6, [r7, #48]	; 0x30
   16a62:	movs	r2, r0
   16a64:	push	{r4, lr}
   16a66:	ldr	r4, [r0, #4]
   16a68:	ldr	r1, [pc, #32]	; (16a8c <btrfs_check_nodesize@@Base+0x128>)
   16a6a:	mov	r0, r4
   16a6c:	add	r1, pc
   16a6e:	blx	8b04 <strcmp@plt>
   16a72:	cbz	r0, 16a8a <btrfs_check_nodesize@@Base+0x126>
   16a74:	ldr	r1, [pc, #24]	; (16a90 <btrfs_check_nodesize@@Base+0x12c>)
   16a76:	mov	r0, r4
   16a78:	add	r1, pc
   16a7a:	blx	8b04 <strcmp@plt>
   16a7e:	cbz	r0, 16a8a <btrfs_check_nodesize@@Base+0x126>
   16a80:	ldmia.w	sp!, {r4, lr}
   16a84:	movs	r0, #34	; 0x22
   16a86:	b.w	8fa4 <putchar@plt>
   16a8a:	pop	{r4, pc}
   16a8c:	add	r1, pc, #868	; (adr r1, 16df4 <fmt_print@@Base+0xa8>)
   16a8e:	movs	r2, r0
   16a90:	blt.n	169c0 <btrfs_check_nodesize@@Base+0x5c>
   16a92:	movs	r2, r0

00016a94 <fmt_end@@Base>:
   16a94:	push	{r3, r4, r5, lr}
   16a96:	mov	r4, r0
   16a98:	ldr	r3, [r0, #8]
   16a9a:	ldr	r5, [pc, #88]	; (16af4 <fmt_end@@Base+0x60>)
   16a9c:	cmp	r3, #1
   16a9e:	add	r5, pc
   16aa0:	beq.n	16ab0 <fmt_end@@Base+0x1c>
   16aa2:	ldr	r3, [pc, #84]	; (16af8 <fmt_end@@Base+0x64>)
   16aa4:	ldr	r0, [pc, #84]	; (16afc <fmt_end@@Base+0x68>)
   16aa6:	ldr	r3, [r5, r3]
   16aa8:	add	r0, pc
   16aaa:	ldr	r1, [r3, #0]
   16aac:	blx	91a8 <fputs@plt+0x4>
   16ab0:	ldr	r3, [pc, #76]	; (16b00 <fmt_end@@Base+0x6c>)
   16ab2:	ldr	r3, [r5, r3]
   16ab4:	ldr	r3, [r3, #0]
   16ab6:	lsls	r2, r3, #29
   16ab8:	bpl.n	16ac4 <fmt_end@@Base+0x30>
   16aba:	ldmia.w	sp!, {r3, r4, r5, lr}
   16abe:	movs	r0, #10
   16ac0:	b.w	8fa4 <putchar@plt>
   16ac4:	lsls	r3, r3, #28
   16ac6:	bpl.n	16af2 <fmt_end@@Base+0x5e>
   16ac8:	ldr	r3, [r4, #8]
   16aca:	cmp	r3, #0
   16acc:	bgt.n	16adc <fmt_end@@Base+0x48>
   16ace:	ldr	r0, [pc, #52]	; (16b04 <fmt_end@@Base+0x70>)
   16ad0:	add	r0, pc
   16ad2:	blx	8e24 <puts@plt+0x4>
   16ad6:	movs	r0, #1
   16ad8:	blx	8f10 <exit@plt>
   16adc:	subs	r3, #1
   16ade:	mov	r0, r4
   16ae0:	str	r3, [r4, #8]
   16ae2:	bl	169f6 <btrfs_check_nodesize@@Base+0x92>
   16ae6:	ldr	r0, [pc, #32]	; (16b08 <fmt_end@@Base+0x74>)
   16ae8:	ldmia.w	sp!, {r3, r4, r5, lr}
   16aec:	add	r0, pc
   16aee:	b.w	8e20 <puts@plt>
   16af2:	pop	{r3, r4, r5, pc}
   16af4:	negs	r2, r7
   16af6:	movs	r5, r0
   16af8:	lsls	r4, r3, #10
   16afa:	movs	r0, r0
   16afc:	add	r1, pc, #648	; (adr r1, 16d88 <fmt_print@@Base+0x3c>)
   16afe:	movs	r2, r0
   16b00:	lsls	r4, r0, #10
   16b02:	movs	r0, r0
   16b04:	add	r1, pc, #584	; (adr r1, 16d50 <fmt_print@@Base+0x4>)
   16b06:	movs	r2, r0
   16b08:	add	r1, pc, #640	; (adr r1, 16d8c <fmt_print@@Base+0x40>)
   16b0a:	movs	r2, r0

00016b0c <fmt_start_list_value@@Base>:
   16b0c:	ldr	r3, [pc, #48]	; (16b40 <fmt_start_list_value@@Base+0x34>)
   16b0e:	ldr	r2, [pc, #52]	; (16b44 <fmt_start_list_value@@Base+0x38>)
   16b10:	add	r3, pc
   16b12:	push	{r4, lr}
   16b14:	mov	r4, r0
   16b16:	ldr	r3, [r3, r2]
   16b18:	ldr	r3, [r3, #0]
   16b1a:	cmp	r3, #4
   16b1c:	bne.n	16b26 <fmt_start_list_value@@Base+0x1a>
   16b1e:	ldmia.w	sp!, {r4, lr}
   16b22:	ldr	r0, [r0, #4]
   16b24:	b.n	169e4 <btrfs_check_nodesize@@Base+0x80>
   16b26:	cmp	r3, #8
   16b28:	bne.n	16b3e <fmt_start_list_value@@Base+0x32>
   16b2a:	bl	169f6 <btrfs_check_nodesize@@Base+0x92>
   16b2e:	ldr	r0, [r4, #8]
   16b30:	bl	169cc <btrfs_check_nodesize@@Base+0x68>
   16b34:	ldmia.w	sp!, {r4, lr}
   16b38:	movs	r0, #34	; 0x22
   16b3a:	b.w	8fa4 <putchar@plt>
   16b3e:	pop	{r4, pc}
   16b40:	tst	r0, r1
   16b42:	movs	r5, r0
   16b44:	lsls	r4, r0, #10
	...

00016b48 <fmt_end_list_value@@Base>:
   16b48:	ldr	r3, [pc, #28]	; (16b68 <fmt_end_list_value@@Base+0x20>)
   16b4a:	ldr	r2, [pc, #32]	; (16b6c <fmt_end_list_value@@Base+0x24>)
   16b4c:	add	r3, pc
   16b4e:	ldr	r3, [r3, r2]
   16b50:	ldr	r3, [r3, #0]
   16b52:	cmp	r3, #4
   16b54:	bne.n	16b5c <fmt_end_list_value@@Base+0x14>
   16b56:	movs	r0, #10
   16b58:	b.w	8fa4 <putchar@plt>
   16b5c:	cmp	r3, #8
   16b5e:	bne.n	16b64 <fmt_end_list_value@@Base+0x1c>
   16b60:	movs	r0, #34	; 0x22
   16b62:	b.n	16b58 <fmt_end_list_value@@Base+0x10>
   16b64:	bx	lr
   16b66:	nop
   16b68:	rors	r4, r1
   16b6a:	movs	r5, r0
   16b6c:	lsls	r4, r0, #10
	...

00016b70 <fmt_start_value@@Base>:
   16b70:	ldr	r3, [pc, #64]	; (16bb4 <fmt_start_value@@Base+0x44>)
   16b72:	mov	r0, r1
   16b74:	ldr	r2, [pc, #64]	; (16bb8 <fmt_start_value@@Base+0x48>)
   16b76:	add	r3, pc
   16b78:	push	{r4, lr}
   16b7a:	ldr	r3, [r3, r2]
   16b7c:	ldr	r3, [r3, #0]
   16b7e:	cmp	r3, #4
   16b80:	bne.n	16baa <fmt_start_value@@Base+0x3a>
   16b82:	ldr	r4, [r1, #4]
   16b84:	ldr	r1, [pc, #52]	; (16bbc <fmt_start_value@@Base+0x4c>)
   16b86:	mov	r0, r4
   16b88:	add	r1, pc
   16b8a:	blx	8b04 <strcmp@plt>
   16b8e:	cbnz	r0, 16b9a <fmt_start_value@@Base+0x2a>
   16b90:	ldmia.w	sp!, {r4, lr}
   16b94:	movs	r0, #10
   16b96:	b.w	8fa4 <putchar@plt>
   16b9a:	ldr	r1, [pc, #36]	; (16bc0 <fmt_start_value@@Base+0x50>)
   16b9c:	mov	r0, r4
   16b9e:	add	r1, pc
   16ba0:	blx	8b04 <strcmp@plt>
   16ba4:	cmp	r0, #0
   16ba6:	beq.n	16b90 <fmt_start_value@@Base+0x20>
   16ba8:	pop	{r4, pc}
   16baa:	cmp	r3, #8
   16bac:	bne.n	16ba8 <fmt_start_value@@Base+0x38>
   16bae:	ldmia.w	sp!, {r4, lr}
   16bb2:	b.n	16a64 <btrfs_check_nodesize@@Base+0x100>
   16bb4:	sbcs	r2, r4
   16bb6:	movs	r5, r0
   16bb8:	lsls	r4, r0, #10
   16bba:	movs	r0, r0
   16bbc:	add	r0, pc, #756	; (adr r0, 16eb4 <fmt_print@@Base+0x168>)
   16bbe:	movs	r2, r0
   16bc0:	bge.n	16ca4 <fmt_print_end_group@@Base+0x3c>
   16bc2:	movs	r2, r0

00016bc4 <fmt_end_value@@Base>:
   16bc4:	ldr	r3, [pc, #16]	; (16bd8 <fmt_end_value@@Base+0x14>)
   16bc6:	mov	r0, r1
   16bc8:	ldr	r2, [pc, #16]	; (16bdc <fmt_end_value@@Base+0x18>)
   16bca:	add	r3, pc
   16bcc:	ldr	r3, [r3, r2]
   16bce:	ldr	r3, [r3, #0]
   16bd0:	cmp	r3, #8
   16bd2:	bne.n	16bd6 <fmt_end_value@@Base+0x12>
   16bd4:	b.n	16a64 <btrfs_check_nodesize@@Base+0x100>
   16bd6:	bx	lr
   16bd8:	adcs	r6, r1
   16bda:	movs	r5, r0
   16bdc:	lsls	r4, r0, #10
	...

00016be0 <fmt_print_start_group@@Base>:
   16be0:	ldr	r3, [pc, #108]	; (16c50 <fmt_print_start_group@@Base+0x70>)
   16be2:	push	{r4, r5, r6, lr}
   16be4:	mov	r4, r2
   16be6:	ldr	r2, [pc, #108]	; (16c54 <fmt_print_start_group@@Base+0x74>)
   16be8:	add	r3, pc
   16bea:	mov	r5, r0
   16bec:	mov	r6, r1
   16bee:	ldr	r3, [r3, r2]
   16bf0:	ldr	r3, [r3, #0]
   16bf2:	cmp	r3, #8
   16bf4:	bne.n	16c4e <fmt_print_start_group@@Base+0x6e>
   16bf6:	bl	169f6 <btrfs_check_nodesize@@Base+0x92>
   16bfa:	ldr	r3, [r5, #8]
   16bfc:	cmp	r3, #14
   16bfe:	ble.n	16c12 <fmt_print_start_group@@Base+0x32>
   16c00:	ldr	r1, [pc, #84]	; (16c58 <fmt_print_start_group@@Base+0x78>)
   16c02:	movs	r2, #16
   16c04:	add	r1, pc
   16c06:	movs	r0, #1
   16c08:	blx	900c <__printf_chk@plt+0x4>
   16c0c:	movs	r0, #1
   16c0e:	blx	8f10 <exit@plt>
   16c12:	adds	r2, r3, #1
   16c14:	cmp	r4, #1
   16c16:	add.w	r1, r5, r2
   16c1a:	add.w	r3, r3, #9
   16c1e:	str	r2, [r5, #8]
   16c20:	strb	r4, [r1, #16]
   16c22:	mov.w	r1, #0
   16c26:	str.w	r1, [r5, r3, lsl #2]
   16c2a:	bne.n	16c3c <fmt_print_start_group@@Base+0x5c>
   16c2c:	ldr	r1, [pc, #44]	; (16c5c <fmt_print_start_group@@Base+0x7c>)
   16c2e:	mov	r2, r6
   16c30:	add	r1, pc
   16c32:	ldmia.w	sp!, {r4, r5, r6, lr}
   16c36:	movs	r0, #1
   16c38:	b.w	9008 <__printf_chk@plt>
   16c3c:	cmp	r4, #2
   16c3e:	bne.n	16c48 <fmt_print_start_group@@Base+0x68>
   16c40:	ldr	r1, [pc, #28]	; (16c60 <fmt_print_start_group@@Base+0x80>)
   16c42:	mov	r2, r6
   16c44:	add	r1, pc
   16c46:	b.n	16c32 <fmt_print_start_group@@Base+0x52>
   16c48:	ldr	r1, [pc, #24]	; (16c64 <fmt_print_start_group@@Base+0x84>)
   16c4a:	add	r1, pc
   16c4c:	b.n	16c06 <fmt_print_start_group@@Base+0x26>
   16c4e:	pop	{r4, r5, r6, pc}
   16c50:	asrs	r0, r6
   16c52:	movs	r5, r0
   16c54:	lsls	r4, r0, #10
   16c56:	movs	r0, r0
   16c58:	add	r0, pc, #552	; (adr r0, 16e84 <fmt_print@@Base+0x138>)
   16c5a:	movs	r2, r0
   16c5c:	add	r0, pc, #552	; (adr r0, 16e88 <fmt_print@@Base+0x13c>)
   16c5e:	movs	r2, r0
   16c60:	add	r0, pc, #504	; (adr r0, 16e5c <fmt_print@@Base+0x110>)
   16c62:	movs	r2, r0
   16c64:	add	r0, pc, #512	; (adr r0, 16e68 <fmt_print@@Base+0x11c>)
   16c66:	movs	r2, r0

00016c68 <fmt_print_end_group@@Base>:
   16c68:	push	{r3, r4, r5, lr}
   16c6a:	mov	r4, r0
   16c6c:	ldr	r3, [pc, #88]	; (16cc8 <fmt_print_end_group@@Base+0x60>)
   16c6e:	ldr	r2, [pc, #92]	; (16ccc <fmt_print_end_group@@Base+0x64>)
   16c70:	add	r3, pc
   16c72:	ldr	r3, [r3, r2]
   16c74:	ldr	r3, [r3, #0]
   16c76:	cmp	r3, #8
   16c78:	bne.n	16cc6 <fmt_print_end_group@@Base+0x5e>
   16c7a:	ldr	r3, [r0, #8]
   16c7c:	adds	r2, r0, r3
   16c7e:	cmp	r3, #0
   16c80:	ldrb	r5, [r2, #16]
   16c82:	bgt.n	16c92 <fmt_print_end_group@@Base+0x2a>
   16c84:	ldr	r0, [pc, #72]	; (16cd0 <fmt_print_end_group@@Base+0x68>)
   16c86:	add	r0, pc
   16c88:	blx	8e24 <puts@plt+0x4>
   16c8c:	movs	r0, #1
   16c8e:	blx	8f10 <exit@plt>
   16c92:	subs	r3, #1
   16c94:	str	r3, [r0, #8]
   16c96:	movs	r0, #10
   16c98:	blx	8fa8 <putchar@plt+0x4>
   16c9c:	ldr	r0, [r4, #8]
   16c9e:	bl	169cc <btrfs_check_nodesize@@Base+0x68>
   16ca2:	cmp	r5, #1
   16ca4:	bne.n	16cb0 <fmt_print_end_group@@Base+0x48>
   16ca6:	movs	r0, #125	; 0x7d
   16ca8:	ldmia.w	sp!, {r3, r4, r5, lr}
   16cac:	b.w	8fa4 <putchar@plt>
   16cb0:	cmp	r5, #2
   16cb2:	bne.n	16cb8 <fmt_print_end_group@@Base+0x50>
   16cb4:	movs	r0, #93	; 0x5d
   16cb6:	b.n	16ca8 <fmt_print_end_group@@Base+0x40>
   16cb8:	ldr	r1, [pc, #24]	; (16cd4 <fmt_print_end_group@@Base+0x6c>)
   16cba:	movs	r0, #1
   16cbc:	ldr	r2, [r4, #8]
   16cbe:	add	r1, pc
   16cc0:	blx	900c <__printf_chk@plt+0x4>
   16cc4:	b.n	16c8c <fmt_print_end_group@@Base+0x24>
   16cc6:	pop	{r3, r4, r5, pc}
   16cc8:	lsls	r0, r5
   16cca:	movs	r5, r0
   16ccc:	lsls	r4, r0, #10
   16cce:	movs	r0, r0
   16cd0:	ldr	r7, [sp, #880]	; 0x370
   16cd2:	movs	r2, r0
   16cd4:	add	r0, pc, #48	; (adr r0, 16d08 <fmt_start@@Base+0x30>)
   16cd6:	movs	r2, r0

00016cd8 <fmt_start@@Base>:
   16cd8:	push	{r4, r5, r6, lr}
   16cda:	mov	r4, r0
   16cdc:	ldr	r0, [pc, #92]	; (16d3c <fmt_start@@Base+0x64>)
   16cde:	movs	r5, #1
   16ce0:	strd	r2, r3, [r4]
   16ce4:	ldr	r3, [pc, #88]	; (16d40 <fmt_start@@Base+0x68>)
   16ce6:	add	r0, pc
   16ce8:	str	r1, [r4, #12]
   16cea:	str	r5, [r4, #8]
   16cec:	ldr	r3, [r0, r3]
   16cee:	ldr	r3, [r3, #0]
   16cf0:	lsls	r3, r3, #28
   16cf2:	bpl.n	16d3a <fmt_start@@Base+0x62>
   16cf4:	movs	r0, #123	; 0x7b
   16cf6:	ldr	r6, [pc, #76]	; (16d44 <fmt_start@@Base+0x6c>)
   16cf8:	blx	8fa8 <putchar@plt+0x4>
   16cfc:	ldr	r3, [r4, #8]
   16cfe:	add	r6, pc
   16d00:	mov	r0, r4
   16d02:	adds	r2, r4, r3
   16d04:	adds	r3, #8
   16d06:	mov	r1, r6
   16d08:	strb	r5, [r2, #16]
   16d0a:	movs	r2, #0
   16d0c:	str.w	r2, [r4, r3, lsl #2]
   16d10:	mov	r2, r5
   16d12:	bl	16be0 <fmt_print_start_group@@Base>
   16d16:	mov	r0, r4
   16d18:	bl	169f6 <btrfs_check_nodesize@@Base+0x92>
   16d1c:	ldr	r1, [pc, #40]	; (16d48 <fmt_start@@Base+0x70>)
   16d1e:	mov	r0, r5
   16d20:	add	r1, pc
   16d22:	blx	900c <__printf_chk@plt+0x4>
   16d26:	ldr	r3, [r4, #8]
   16d28:	mov	r1, r6
   16d2a:	mov	r0, r4
   16d2c:	adds	r3, #8
   16d2e:	str.w	r5, [r4, r3, lsl #2]
   16d32:	ldmia.w	sp!, {r4, r5, r6, lr}
   16d36:	b.w	16c68 <fmt_print_end_group@@Base>
   16d3a:	pop	{r4, r5, r6, pc}
   16d3c:	ands	r2, r6
   16d3e:	movs	r5, r0
   16d40:	lsls	r4, r0, #10
   16d42:	movs	r0, r0
   16d44:	ldr	r7, [sp, #988]	; 0x3dc
   16d46:	movs	r2, r0
   16d48:	ldr	r7, [sp, #888]	; 0x378
   16d4a:	movs	r2, r0

00016d4c <fmt_print@@Base>:
   16d4c:	push	{r1, r2, r3}
   16d4e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16d52:	mov	r5, r0
   16d54:	sub	sp, #332	; 0x14c
   16d56:	ldr	r0, [pc, #572]	; (16f94 <fmt_print@@Base+0x248>)
   16d58:	add	r3, sp, #356	; 0x164
   16d5a:	ldr	r1, [pc, #572]	; (16f98 <fmt_print@@Base+0x24c>)
   16d5c:	add	r0, pc
   16d5e:	ldr	r4, [r5, #12]
   16d60:	ldr.w	r2, [r3], #4
   16d64:	add	r6, sp, #16
   16d66:	ldr	r1, [r0, r1]
   16d68:	ldr	r7, [pc, #560]	; (16f9c <fmt_print@@Base+0x250>)
   16d6a:	ldr	r1, [r1, #0]
   16d6c:	str	r1, [sp, #324]	; 0x144
   16d6e:	mov.w	r1, #0
   16d72:	str	r3, [r6, #0]
   16d74:	add	r7, pc
   16d76:	ldr	r1, [r4, #0]
   16d78:	cbnz	r1, 16d8a <fmt_print@@Base+0x3e>
   16d7a:	ldr	r1, [pc, #548]	; (16fa0 <fmt_print@@Base+0x254>)
   16d7c:	movs	r0, #1
   16d7e:	add	r1, pc
   16d80:	blx	900c <__printf_chk@plt+0x4>
   16d84:	movs	r0, #1
   16d86:	blx	8f10 <exit@plt>
   16d8a:	mov	r0, r2
   16d8c:	str	r2, [sp, #12]
   16d8e:	blx	8b04 <strcmp@plt>
   16d92:	cmp	r0, #0
   16d94:	beq.w	16f06 <fmt_print@@Base+0x1ba>
   16d98:	ldr	r2, [sp, #12]
   16d9a:	adds	r4, #16
   16d9c:	b.n	16d76 <fmt_print@@Base+0x2a>
   16d9e:	cmp	r3, #8
   16da0:	bne.w	16f52 <fmt_print@@Base+0x206>
   16da4:	ldr	r7, [r4, #4]
   16da6:	ldr	r1, [pc, #508]	; (16fa4 <fmt_print@@Base+0x258>)
   16da8:	mov	r0, r7
   16daa:	add	r1, pc
   16dac:	blx	8b04 <strcmp@plt>
   16db0:	cbnz	r0, 16dbe <fmt_print@@Base+0x72>
   16db2:	movs	r2, #2
   16db4:	ldr	r1, [r4, #12]
   16db6:	mov	r0, r5
   16db8:	bl	16be0 <fmt_print_start_group@@Base>
   16dbc:	b.n	16f52 <fmt_print@@Base+0x206>
   16dbe:	ldr	r1, [pc, #488]	; (16fa8 <fmt_print@@Base+0x25c>)
   16dc0:	mov	r0, r7
   16dc2:	add	r1, pc
   16dc4:	blx	8b04 <strcmp@plt>
   16dc8:	cbnz	r0, 16dce <fmt_print@@Base+0x82>
   16dca:	movs	r2, #1
   16dcc:	b.n	16db4 <fmt_print@@Base+0x68>
   16dce:	mov	r0, r5
   16dd0:	bl	169f6 <btrfs_check_nodesize@@Base+0x92>
   16dd4:	ldr	r1, [pc, #468]	; (16fac <fmt_print@@Base+0x260>)
   16dd6:	ldr	r2, [r4, #12]
   16dd8:	movs	r0, #1
   16dda:	add	r1, pc
   16ddc:	blx	900c <__printf_chk@plt+0x4>
   16de0:	b.n	16f52 <fmt_print@@Base+0x206>
   16de2:	ldr	r1, [pc, #460]	; (16fb0 <fmt_print@@Base+0x264>)
   16de4:	mov	r0, r7
   16de6:	add	r1, pc
   16de8:	blx	8b04 <strcmp@plt>
   16dec:	cbnz	r0, 16e20 <fmt_print@@Base+0xd4>
   16dee:	ldr	r3, [r6, #0]
   16df0:	adds	r2, r3, #4
   16df2:	str	r2, [r6, #0]
   16df4:	ldr	r6, [r3, #0]
   16df6:	mov	r0, r6
   16df8:	blx	8f88 <uuid_is_null@plt>
   16dfc:	cbz	r0, 16e06 <fmt_print@@Base+0xba>
   16dfe:	movs	r0, #45	; 0x2d
   16e00:	blx	8fa8 <putchar@plt+0x4>
   16e04:	b.n	16f6e <fmt_print@@Base+0x222>
   16e06:	add	r2, sp, #68	; 0x44
   16e08:	mov	r0, r6
   16e0a:	str	r2, [sp, #12]
   16e0c:	mov	r1, r2
   16e0e:	blx	8b1c <uuid_unparse@plt>
   16e12:	ldr	r1, [pc, #416]	; (16fb4 <fmt_print@@Base+0x268>)
   16e14:	ldr	r2, [sp, #12]
   16e16:	add	r1, pc
   16e18:	movs	r0, #1
   16e1a:	blx	900c <__printf_chk@plt+0x4>
   16e1e:	b.n	16f6e <fmt_print@@Base+0x222>
   16e20:	ldr	r1, [pc, #404]	; (16fb8 <fmt_print@@Base+0x26c>)
   16e22:	mov	r0, r7
   16e24:	add	r1, pc
   16e26:	blx	8b04 <strcmp@plt>
   16e2a:	cbnz	r0, 16e60 <fmt_print@@Base+0x114>
   16e2c:	ldr	r3, [r6, #0]
   16e2e:	add	r0, sp, #20
   16e30:	adds	r2, r3, #4
   16e32:	str	r2, [r6, #0]
   16e34:	ldr	r3, [r3, #0]
   16e36:	str	r3, [r0, #0]
   16e38:	cmp	r3, #0
   16e3a:	beq.n	16dfe <fmt_print@@Base+0xb2>
   16e3c:	add	r3, sp, #24
   16e3e:	add	r6, sp, #68	; 0x44
   16e40:	str	r3, [sp, #12]
   16e42:	mov	r1, r3
   16e44:	blx	8cc4 <localtime_r@plt>
   16e48:	ldr	r2, [pc, #368]	; (16fbc <fmt_print@@Base+0x270>)
   16e4a:	mov.w	r1, #256	; 0x100
   16e4e:	ldr	r3, [sp, #12]
   16e50:	add	r2, pc
   16e52:	mov	r0, r6
   16e54:	blx	8e74 <strftime@plt>
   16e58:	ldr	r1, [pc, #356]	; (16fc0 <fmt_print@@Base+0x274>)
   16e5a:	mov	r2, r6
   16e5c:	add	r1, pc
   16e5e:	b.n	16e18 <fmt_print@@Base+0xcc>
   16e60:	ldr	r1, [pc, #352]	; (16fc4 <fmt_print@@Base+0x278>)
   16e62:	mov	r0, r7
   16e64:	add	r1, pc
   16e66:	blx	8b04 <strcmp@plt>
   16e6a:	cmp	r0, #0
   16e6c:	beq.n	16f6e <fmt_print@@Base+0x222>
   16e6e:	ldr	r1, [pc, #344]	; (16fc8 <fmt_print@@Base+0x27c>)
   16e70:	mov	r0, r7
   16e72:	add	r1, pc
   16e74:	blx	8b04 <strcmp@plt>
   16e78:	cmp	r0, #0
   16e7a:	beq.n	16f6e <fmt_print@@Base+0x222>
   16e7c:	ldr	r1, [pc, #332]	; (16fcc <fmt_print@@Base+0x280>)
   16e7e:	mov	r0, r7
   16e80:	add	r1, pc
   16e82:	blx	8b04 <strcmp@plt>
   16e86:	cbnz	r0, 16ea8 <fmt_print@@Base+0x15c>
   16e88:	ldr	r1, [r6, #0]
   16e8a:	movs	r0, #1
   16e8c:	adds	r1, #7
   16e8e:	bic.w	r1, r1, #7
   16e92:	ldrd	r2, r3, [r1, #8]
   16e96:	strd	r2, r3, [sp]
   16e9a:	ldrd	r2, r3, [r1]
   16e9e:	ldr	r1, [pc, #304]	; (16fd0 <fmt_print@@Base+0x284>)
   16ea0:	add	r1, pc
   16ea2:	blx	900c <__printf_chk@plt+0x4>
   16ea6:	b.n	16f6e <fmt_print@@Base+0x222>
   16ea8:	ldr	r1, [pc, #296]	; (16fd4 <fmt_print@@Base+0x288>)
   16eaa:	mov	r0, r7
   16eac:	add	r1, pc
   16eae:	blx	8b04 <strcmp@plt>
   16eb2:	cbnz	r0, 16ed8 <fmt_print@@Base+0x18c>
   16eb4:	ldr	r3, [r6, #0]
   16eb6:	adds	r3, #7
   16eb8:	bic.w	r3, r3, #7
   16ebc:	mov	r2, r3
   16ebe:	ldrd	r0, r1, [r2], #12
   16ec2:	str	r2, [r6, #0]
   16ec4:	orrs.w	r2, r0, r1
   16ec8:	beq.n	16dfe <fmt_print@@Base+0xb2>
   16eca:	ldr	r2, [r3, #8]
   16ecc:	bl	34da0 <pretty_size_mode@@Base>
   16ed0:	ldr	r1, [pc, #260]	; (16fd8 <fmt_print@@Base+0x28c>)
   16ed2:	add	r1, pc
   16ed4:	mov	r2, r0
   16ed6:	b.n	16e18 <fmt_print@@Base+0xcc>
   16ed8:	ldr	r1, [pc, #256]	; (16fdc <fmt_print@@Base+0x290>)
   16eda:	mov	r0, r7
   16edc:	add	r1, pc
   16ede:	blx	8b04 <strcmp@plt>
   16ee2:	cbnz	r0, 16efe <fmt_print@@Base+0x1b2>
   16ee4:	ldr	r3, [r6, #0]
   16ee6:	adds	r3, #7
   16ee8:	bic.w	r3, r3, #7
   16eec:	ldr	r2, [r3, #8]
   16eee:	ldrd	r0, r1, [r3]
   16ef2:	bl	34da0 <pretty_size_mode@@Base>
   16ef6:	ldr	r1, [pc, #232]	; (16fe0 <fmt_print@@Base+0x294>)
   16ef8:	add	r1, pc
   16efa:	mov	r2, r0
   16efc:	b.n	16e18 <fmt_print@@Base+0xcc>
   16efe:	ldr	r1, [pc, #228]	; (16fe4 <fmt_print@@Base+0x298>)
   16f00:	mov	r2, r7
   16f02:	add	r1, pc
   16f04:	b.n	16e18 <fmt_print@@Base+0xcc>
   16f06:	ldr	r3, [pc, #224]	; (16fe8 <fmt_print@@Base+0x29c>)
   16f08:	ldr	r3, [r7, r3]
   16f0a:	ldr	r3, [r3, #0]
   16f0c:	cmp	r3, #4
   16f0e:	bne.w	16d9e <fmt_print@@Base+0x52>
   16f12:	ldr	r3, [r4, #8]
   16f14:	movs	r0, #10
   16f16:	ldrb.w	r8, [r3]
   16f1a:	blx	8fa8 <putchar@plt+0x4>
   16f1e:	ldr	r0, [r5, #4]
   16f20:	bl	169e4 <btrfs_check_nodesize@@Base+0x80>
   16f24:	ldr	r2, [r4, #8]
   16f26:	mov	r0, r2
   16f28:	str	r2, [sp, #12]
   16f2a:	blx	8f1c <strlen@plt>
   16f2e:	ldr	r1, [pc, #188]	; (16fec <fmt_print@@Base+0x2a0>)
   16f30:	ldr	r2, [sp, #12]
   16f32:	add	r1, pc
   16f34:	mov	r7, r0
   16f36:	movs	r0, #1
   16f38:	blx	900c <__printf_chk@plt+0x4>
   16f3c:	cmp.w	r8, #0
   16f40:	beq.n	16f4a <fmt_print@@Base+0x1fe>
   16f42:	movs	r0, #58	; 0x3a
   16f44:	adds	r7, #1
   16f46:	blx	8fa8 <putchar@plt+0x4>
   16f4a:	ldr	r0, [r5, #0]
   16f4c:	subs	r0, r0, r7
   16f4e:	bl	169e4 <btrfs_check_nodesize@@Base+0x80>
   16f52:	mov	r1, r4
   16f54:	mov	r0, r5
   16f56:	bl	16b70 <fmt_start_value@@Base>
   16f5a:	ldr	r7, [r4, #4]
   16f5c:	ldrb	r3, [r7, #0]
   16f5e:	cmp	r3, #37	; 0x25
   16f60:	bne.w	16de2 <fmt_print@@Base+0x96>
   16f64:	ldr	r2, [r6, #0]
   16f66:	mov	r1, r7
   16f68:	movs	r0, #1
   16f6a:	blx	8c28 <__vprintf_chk@plt>
   16f6e:	mov	r1, r4
   16f70:	mov	r0, r5
   16f72:	bl	16bc4 <fmt_end_value@@Base>
   16f76:	ldr	r2, [pc, #120]	; (16ff0 <fmt_print@@Base+0x2a4>)
   16f78:	ldr	r3, [pc, #28]	; (16f98 <fmt_print@@Base+0x24c>)
   16f7a:	add	r2, pc
   16f7c:	ldr	r3, [r2, r3]
   16f7e:	ldr	r2, [r3, #0]
   16f80:	ldr	r3, [sp, #324]	; 0x144
   16f82:	eors	r2, r3
   16f84:	beq.n	16f8a <fmt_print@@Base+0x23e>
   16f86:	blx	8c90 <__stack_chk_fail@plt>
   16f8a:	add	sp, #332	; 0x14c
   16f8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   16f90:	add	sp, #12
   16f92:	bx	lr
   16f94:	subs	r7, #188	; 0xbc
   16f96:	movs	r5, r0
   16f98:	lsls	r0, r1, #10
   16f9a:	movs	r0, r0
   16f9c:	subs	r7, #164	; 0xa4
   16f9e:	movs	r5, r0
   16fa0:	ldr	r7, [sp, #892]	; 0x37c
   16fa2:	movs	r2, r0
   16fa4:	ldr	r6, [sp, #620]	; 0x26c
   16fa6:	movs	r2, r0
   16fa8:	bhi.n	17044 <fmt_print@@Base+0x2f8>
   16faa:	movs	r2, r0
   16fac:	ldr	r7, [sp, #204]	; 0xcc
   16fae:	movs	r2, r0
   16fb0:	add	r5, pc, #52	; (adr r5, 16fe8 <fmt_print@@Base+0x29c>)
   16fb2:	movs	r2, r0
   16fb4:	strh	r7, [r5, #30]
   16fb6:	movs	r2, r0
   16fb8:	ldr	r6, [sp, #960]	; 0x3c0
   16fba:	movs	r2, r0
   16fbc:	ldr	r6, [sp, #824]	; 0x338
   16fbe:	movs	r2, r0
   16fc0:	strh	r1, [r5, #28]
   16fc2:	movs	r2, r0
   16fc4:	ldr	r5, [sp, #900]	; 0x384
   16fc6:	movs	r2, r0
   16fc8:	bvc.n	16f04 <fmt_print@@Base+0x1b8>
   16fca:	movs	r2, r0
   16fcc:	ldrh	r4, [r5, #18]
   16fce:	movs	r2, r0
   16fd0:	ldrh	r6, [r4, #2]
   16fd2:	movs	r2, r0
   16fd4:	ldr	r6, [sp, #516]	; 0x204
   16fd6:	movs	r2, r0
   16fd8:	strh	r3, [r6, #24]
   16fda:	movs	r2, r0
   16fdc:	subs	r5, r7, r1
   16fde:	movs	r4, r0
   16fe0:	strh	r5, [r1, #24]
   16fe2:	movs	r2, r0
   16fe4:	ldr	r6, [sp, #224]	; 0xe0
   16fe6:	movs	r2, r0
   16fe8:	lsls	r4, r0, #10
   16fea:	movs	r0, r0
   16fec:	strh	r3, [r2, #22]
   16fee:	movs	r2, r0
   16ff0:	subs	r5, #158	; 0x9e
   16ff2:	movs	r5, r0
   16ff4:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   16ff8:	mov	r6, r0
   16ffa:	ldr	r5, [sp, #32]
   16ffc:	mov	r8, r2
   16ffe:	mov	r7, r3
   17000:	mov	r0, r5
   17002:	blx	8e40 <malloc@plt+0x4>
   17006:	mov	r4, r0
   17008:	cbz	r0, 17038 <fmt_print@@Base+0x2ec>
   1700a:	mov	r2, r5
   1700c:	movs	r1, #0
   1700e:	blx	8f98 <memset@plt+0x4>
   17012:	mov	r2, r5
   17014:	mov	r1, r4
   17016:	mov	r0, r6
   17018:	strd	r8, r7, [sp]
   1701c:	blx	8ffc <pwrite64@plt>
   17020:	cmp	r0, r5
   17022:	mov	r0, r4
   17024:	ite	eq
   17026:	moveq	r5, #0
   17028:	mvnne.w	r5, #4
   1702c:	blx	8b84 <free@plt+0x4>
   17030:	mov	r0, r5
   17032:	add	sp, #8
   17034:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17038:	mvn.w	r5, #11
   1703c:	b.n	17030 <fmt_print@@Base+0x2e4>
   1703e:	ldr	r1, [pc, #292]	; (17164 <fmt_print@@Base+0x418>)
   17040:	ldr	r2, [pc, #292]	; (17168 <fmt_print@@Base+0x41c>)
   17042:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17046:	add	r1, pc
   17048:	sub.w	sp, sp, #8192	; 0x2000
   1704c:	mov	r7, r0
   1704e:	sub	sp, #36	; 0x24
   17050:	ldr	r2, [r1, r2]
   17052:	add	r5, sp, #32
   17054:	add.w	r3, sp, #8192	; 0x2000
   17058:	ldr	r2, [r2, #0]
   1705a:	str	r2, [r3, #28]
   1705c:	mov.w	r2, #0
   17060:	adds	r3, #28
   17062:	movs	r3, #0
   17064:	str.w	r3, [r5, #-12]
   17068:	str.w	r3, [r5, #-8]
   1706c:	blx	8f7c <blkid_new_probe@plt>
   17070:	sub.w	r8, r5, #12
   17074:	sub.w	r4, r5, #8
   17078:	mov	r6, r0
   1707a:	cmp	r0, #0
   1707c:	beq.n	17150 <fmt_print@@Base+0x404>
   1707e:	movs	r3, #0
   17080:	movs	r2, #0
   17082:	mov	r1, r7
   17084:	strd	r2, r3, [sp]
   17088:	blx	8c5c <blkid_probe_set_device@plt>
   1708c:	mov	r3, r0
   1708e:	cmp	r0, #0
   17090:	bne.n	1714a <fmt_print@@Base+0x3fe>
   17092:	ldr	r1, [pc, #216]	; (1716c <fmt_print@@Base+0x420>)
   17094:	mov	r2, r8
   17096:	mov	r0, r6
   17098:	add	r1, pc
   1709a:	blx	8b34 <blkid_probe_lookup_value@plt>
   1709e:	mov	r2, r0
   170a0:	cbz	r0, 170c4 <fmt_print@@Base+0x378>
   170a2:	movs	r4, #1
   170a4:	mov	r0, r6
   170a6:	blx	907c <blkid_free_probe@plt>
   170aa:	ldr	r1, [pc, #196]	; (17170 <fmt_print@@Base+0x424>)
   170ac:	add.w	r3, sp, #8192	; 0x2000
   170b0:	ldr	r2, [pc, #180]	; (17168 <fmt_print@@Base+0x41c>)
   170b2:	adds	r3, #28
   170b4:	add	r1, pc
   170b6:	ldr	r2, [r1, r2]
   170b8:	ldr	r1, [r2, #0]
   170ba:	ldr	r2, [r3, #0]
   170bc:	eors	r1, r2
   170be:	beq.n	17156 <fmt_print@@Base+0x40a>
   170c0:	blx	8c90 <__stack_chk_fail@plt>
   170c4:	ldr	r1, [pc, #172]	; (17174 <fmt_print@@Base+0x428>)
   170c6:	mov	r3, r4
   170c8:	mov	r0, r6
   170ca:	add	r1, pc
   170cc:	blx	8b34 <blkid_probe_lookup_value@plt>
   170d0:	mov	r1, r0
   170d2:	cmp	r0, #0
   170d4:	bne.n	170a2 <fmt_print@@Base+0x356>
   170d6:	ldr	r3, [r4, #0]
   170d8:	cmp	r3, #0
   170da:	beq.n	170a2 <fmt_print@@Base+0x356>
   170dc:	ldr.w	r0, [r8]
   170e0:	cmp	r0, #0
   170e2:	beq.n	170a2 <fmt_print@@Base+0x356>
   170e4:	movs	r2, #10
   170e6:	blx	8d60 <strtoll@plt>
   170ea:	ldr	r3, [r4, #0]
   170ec:	cmp.w	r3, #8192	; 0x2000
   170f0:	itt	hi
   170f2:	movhi.w	r3, #8192	; 0x2000
   170f6:	strhi	r3, [r4, #0]
   170f8:	subs	r4, r5, #4
   170fa:	ldr.w	r2, [r5, #-8]
   170fe:	mov.w	r3, #8192	; 0x2000
   17102:	str	r2, [sp, #12]
   17104:	mov	r9, r0
   17106:	mov	r8, r1
   17108:	mov	r0, r4
   1710a:	movs	r1, #0
   1710c:	blx	8bf4 <__memset_chk@plt>
   17110:	mov	r1, r4
   17112:	ldr	r2, [sp, #12]
   17114:	mov	r0, r7
   17116:	strd	r9, r8, [sp]
   1711a:	blx	8ffc <pwrite64@plt>
   1711e:	subs	r4, r0, #0
   17120:	bge.n	17136 <fmt_print@@Base+0x3ea>
   17122:	ldr	r0, [pc, #84]	; (17178 <fmt_print@@Base+0x42c>)
   17124:	add	r0, pc
   17126:	bl	1bd1c <__btrfs_error@@Base>
   1712a:	mov.w	r4, #4294967295	; 0xffffffff
   1712e:	mov	r0, r7
   17130:	blx	8aec <fsync@plt>
   17134:	b.n	170a4 <fmt_print@@Base+0x358>
   17136:	ldr.w	r2, [r5, #-8]
   1713a:	cmp	r4, r2
   1713c:	beq.n	1712e <fmt_print@@Base+0x3e2>
   1713e:	ldr	r0, [pc, #60]	; (1717c <fmt_print@@Base+0x430>)
   17140:	mov	r1, r4
   17142:	add	r0, pc
   17144:	bl	1bd1c <__btrfs_error@@Base>
   17148:	b.n	1712a <fmt_print@@Base+0x3de>
   1714a:	mov.w	r4, #4294967295	; 0xffffffff
   1714e:	b.n	170a4 <fmt_print@@Base+0x358>
   17150:	mov.w	r4, #4294967295	; 0xffffffff
   17154:	b.n	170aa <fmt_print@@Base+0x35e>
   17156:	mov	r0, r4
   17158:	add.w	sp, sp, #8192	; 0x2000
   1715c:	add	sp, #36	; 0x24
   1715e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   17162:	nop
   17164:	subs	r4, #210	; 0xd2
   17166:	movs	r5, r0
   17168:	lsls	r0, r1, #10
   1716a:	movs	r0, r0
   1716c:	ldr	r4, [sp, #920]	; 0x398
   1716e:	movs	r2, r0
   17170:	subs	r4, #100	; 0x64
   17172:	movs	r5, r0
   17174:	ldr	r4, [sp, #780]	; 0x30c
   17176:	movs	r2, r0
   17178:	ldr	r4, [sp, #452]	; 0x1c4
   1717a:	movs	r2, r0
   1717c:	ldr	r4, [sp, #476]	; 0x1dc
   1717e:	movs	r2, r0

00017180 <btrfs_device_size@@Base>:
   17180:	push	{r0, r1, r2, r3, r4, lr}
   17182:	ldr	r2, [pc, #92]	; (171e0 <btrfs_device_size@@Base+0x60>)
   17184:	ldr	r3, [pc, #92]	; (171e4 <btrfs_device_size@@Base+0x64>)
   17186:	add	r2, pc
   17188:	ldr	r3, [r2, r3]
   1718a:	ldr	r3, [r3, #0]
   1718c:	str	r3, [sp, #12]
   1718e:	mov.w	r3, #0
   17192:	ldr	r3, [r1, #16]
   17194:	and.w	r3, r3, #61440	; 0xf000
   17198:	cmp.w	r3, #32768	; 0x8000
   1719c:	bne.n	171b6 <btrfs_device_size@@Base+0x36>
   1719e:	ldrd	r0, r1, [r1, #48]	; 0x30
   171a2:	ldr	r2, [pc, #68]	; (171e8 <btrfs_device_size@@Base+0x68>)
   171a4:	ldr	r3, [pc, #60]	; (171e4 <btrfs_device_size@@Base+0x64>)
   171a6:	add	r2, pc
   171a8:	ldr	r3, [r2, r3]
   171aa:	ldr	r2, [r3, #0]
   171ac:	ldr	r3, [sp, #12]
   171ae:	eors	r2, r3
   171b0:	beq.n	171d4 <btrfs_device_size@@Base+0x54>
   171b2:	blx	8c90 <__stack_chk_fail@plt>
   171b6:	cmp.w	r3, #24576	; 0x6000
   171ba:	bne.n	171ce <btrfs_device_size@@Base+0x4e>
   171bc:	ldr	r1, [pc, #28]	; (171dc <btrfs_device_size@@Base+0x5c>)
   171be:	mov	r2, sp
   171c0:	blx	8d48 <ioctl@plt>
   171c4:	cmp	r0, #0
   171c6:	blt.n	171ce <btrfs_device_size@@Base+0x4e>
   171c8:	ldrd	r0, r1, [sp]
   171cc:	b.n	171a2 <btrfs_device_size@@Base+0x22>
   171ce:	movs	r0, #0
   171d0:	movs	r1, #0
   171d2:	b.n	171a2 <btrfs_device_size@@Base+0x22>
   171d4:	add	sp, #20
   171d6:	ldr.w	pc, [sp], #4
   171da:	nop
   171dc:	asrs	r2, r6, #9
   171de:	strh	r4, [r0, #0]
   171e0:	subs	r3, #146	; 0x92
   171e2:	movs	r5, r0
   171e4:	lsls	r0, r1, #10
   171e6:	movs	r0, r0
   171e8:	subs	r3, #114	; 0x72
   171ea:	movs	r5, r0

000171ec <btrfs_prepare_device@@Base>:
   171ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171f0:	sub	sp, #180	; 0xb4
   171f2:	ldr	r3, [pc, #588]	; (17440 <btrfs_prepare_device@@Base+0x254>)
   171f4:	mov	r7, r1
   171f6:	str	r2, [sp, #40]	; 0x28
   171f8:	add	r1, sp, #48	; 0x30
   171fa:	ldr	r2, [pc, #584]	; (17444 <btrfs_prepare_device@@Base+0x258>)
   171fc:	mov	r6, r0
   171fe:	ldrd	r8, r9, [sp, #216]	; 0xd8
   17202:	add	r2, pc
   17204:	ldr	r3, [r2, r3]
   17206:	ldr	r3, [r3, #0]
   17208:	str	r3, [sp, #172]	; 0xac
   1720a:	mov.w	r3, #0
   1720e:	str	r1, [sp, #32]
   17210:	bl	3df64 <__libc_csu_fini@@Base+0x28>
   17214:	ldr	r1, [sp, #32]
   17216:	cmp	r0, #0
   17218:	bge.n	1723c <btrfs_prepare_device@@Base+0x50>
   1721a:	ldr	r0, [pc, #556]	; (17448 <btrfs_prepare_device@@Base+0x25c>)
   1721c:	mov	r1, r7
   1721e:	add	r0, pc
   17220:	bl	1bd1c <__btrfs_error@@Base>
   17224:	movs	r0, #1
   17226:	ldr	r2, [pc, #548]	; (1744c <btrfs_prepare_device@@Base+0x260>)
   17228:	ldr	r3, [pc, #532]	; (17440 <btrfs_prepare_device@@Base+0x254>)
   1722a:	add	r2, pc
   1722c:	ldr	r3, [r2, r3]
   1722e:	ldr	r2, [r3, #0]
   17230:	ldr	r3, [sp, #172]	; 0xac
   17232:	eors	r2, r3
   17234:	beq.w	1743a <btrfs_prepare_device@@Base+0x24e>
   17238:	blx	8c90 <__stack_chk_fail@plt>
   1723c:	mov	r0, r6
   1723e:	bl	17180 <btrfs_device_size@@Base>
   17242:	mov	r4, r0
   17244:	mov	r5, r1
   17246:	orrs.w	r3, r4, r5
   1724a:	bne.n	17254 <btrfs_prepare_device@@Base+0x68>
   1724c:	ldr	r0, [pc, #512]	; (17450 <btrfs_prepare_device@@Base+0x264>)
   1724e:	mov	r1, r7
   17250:	add	r0, pc
   17252:	b.n	17220 <btrfs_prepare_device@@Base+0x34>
   17254:	orrs.w	r3, r8, r9
   17258:	beq.n	17266 <btrfs_prepare_device@@Base+0x7a>
   1725a:	cmp	r9, r1
   1725c:	it	eq
   1725e:	cmpeq	r8, r0
   17260:	itt	cc
   17262:	movcc	r4, r8
   17264:	movcc	r5, r9
   17266:	ldr	r3, [sp, #224]	; 0xe0
   17268:	lsls	r1, r3, #30
   1726a:	bpl.n	17320 <btrfs_prepare_device@@Base+0x134>
   1726c:	movs	r2, #0
   1726e:	movs	r3, #0
   17270:	movw	r1, #4727	; 0x1277
   17274:	strd	r2, r3, [sp, #152]	; 0x98
   17278:	strd	r2, r3, [sp, #160]	; 0xa0
   1727c:	mov	r0, r6
   1727e:	add	r2, sp, #152	; 0x98
   17280:	blx	8d48 <ioctl@plt>
   17284:	cmp	r0, #0
   17286:	bge.n	17292 <btrfs_prepare_device@@Base+0xa6>
   17288:	blx	8f58 <__errno_location@plt>
   1728c:	ldr	r3, [r0, #0]
   1728e:	cmp	r3, #0
   17290:	bne.n	17320 <btrfs_prepare_device@@Base+0x134>
   17292:	ldr	r3, [sp, #224]	; 0xe0
   17294:	lsls	r2, r3, #29
   17296:	bpl.n	172b2 <btrfs_prepare_device@@Base+0xc6>
   17298:	mov.w	r2, #512	; 0x200
   1729c:	mov	r1, r5
   1729e:	mov	r0, r4
   172a0:	bl	34da0 <pretty_size_mode@@Base>
   172a4:	ldr	r1, [pc, #428]	; (17454 <btrfs_prepare_device@@Base+0x268>)
   172a6:	mov	r2, r7
   172a8:	add	r1, pc
   172aa:	mov	r3, r0
   172ac:	movs	r0, #1
   172ae:	blx	900c <__printf_chk@plt+0x4>
   172b2:	add	r2, sp, #152	; 0x98
   172b4:	mov	r8, r4
   172b6:	mov	r9, r5
   172b8:	movs	r3, #0
   172ba:	strd	r3, r3, [sp, #32]
   172be:	ldr	r3, [sp, #32]
   172c0:	movs	r1, #0
   172c2:	cmp	r1, r9
   172c4:	mov.w	r0, #1073741824	; 0x40000000
   172c8:	it	eq
   172ca:	cmpeq	r0, r8
   172cc:	movw	r1, #4727	; 0x1277
   172d0:	str	r3, [sp, #152]	; 0x98
   172d2:	mov	r0, r6
   172d4:	ldr	r3, [sp, #36]	; 0x24
   172d6:	mov	fp, r8
   172d8:	mov	sl, r9
   172da:	itt	cc
   172dc:	movcc.w	fp, #1073741824	; 0x40000000
   172e0:	movcc.w	sl, #0
   172e4:	str	r2, [sp, #44]	; 0x2c
   172e6:	strd	r3, fp, [sp, #156]	; 0x9c
   172ea:	str.w	sl, [sp, #164]	; 0xa4
   172ee:	blx	8d48 <ioctl@plt>
   172f2:	ldr	r2, [sp, #44]	; 0x2c
   172f4:	cmp	r0, #0
   172f6:	bge.n	17302 <btrfs_prepare_device@@Base+0x116>
   172f8:	blx	8f58 <__errno_location@plt>
   172fc:	ldr	r2, [sp, #44]	; 0x2c
   172fe:	ldr	r3, [r0, #0]
   17300:	cbnz	r3, 17320 <btrfs_prepare_device@@Base+0x134>
   17302:	ldr	r3, [sp, #32]
   17304:	subs.w	r8, r8, fp
   17308:	sbc.w	r9, r9, sl
   1730c:	adds.w	r3, r3, fp
   17310:	str	r3, [sp, #32]
   17312:	ldr	r3, [sp, #36]	; 0x24
   17314:	adc.w	r3, r3, sl
   17318:	str	r3, [sp, #36]	; 0x24
   1731a:	orrs.w	r3, r8, r9
   1731e:	bne.n	172be <btrfs_prepare_device@@Base+0xd2>
   17320:	movs	r1, #0
   17322:	cmp	r1, r5
   17324:	mov.w	r0, #2097152	; 0x200000
   17328:	it	eq
   1732a:	cmpeq	r0, r4
   1732c:	mov	r3, r4
   1732e:	mov.w	r2, #0
   17332:	it	cc
   17334:	movcc	r3, r0
   17336:	mov	r0, r6
   17338:	str	r3, [sp, #0]
   1733a:	movs	r3, #0
   1733c:	bl	16ff4 <fmt_print@@Base+0x2a8>
   17340:	mov.w	r8, #0
   17344:	mov.w	sl, #12
   17348:	mov.w	r9, #16384	; 0x4000
   1734c:	mov	fp, r0
   1734e:	cmp.w	fp, #0
   17352:	bne.n	1738e <btrfs_prepare_device@@Base+0x1a2>
   17354:	cmp.w	r8, #3
   17358:	bne.n	173a6 <btrfs_prepare_device@@Base+0x1ba>
   1735a:	ldr	r3, [sp, #224]	; 0xe0
   1735c:	lsls	r3, r3, #31
   1735e:	bpl.n	1741e <btrfs_prepare_device@@Base+0x232>
   17360:	subs.w	r3, r4, #2097152	; 0x200000
   17364:	str	r3, [sp, #16]
   17366:	adc.w	r3, r5, #4294967295	; 0xffffffff
   1736a:	str	r3, [sp, #20]
   1736c:	ldrd	r2, r3, [sp, #16]
   17370:	mov	r0, r6
   17372:	cmp	r5, r3
   17374:	it	eq
   17376:	cmpeq	r4, r2
   17378:	it	cc
   1737a:	strdcc	r4, r5, [sp, #16]
   1737e:	ldr	r3, [sp, #16]
   17380:	subs	r3, r4, r3
   17382:	str	r3, [sp, #0]
   17384:	ldrd	r2, r3, [sp, #16]
   17388:	bl	16ff4 <fmt_print@@Base+0x2a8>
   1738c:	mov	fp, r0
   1738e:	cmp.w	fp, #0
   17392:	bge.n	1741e <btrfs_prepare_device@@Base+0x232>
   17394:	blx	8f58 <__errno_location@plt>
   17398:	rsb	r3, fp, #0
   1739c:	mov	r1, r7
   1739e:	str	r3, [r0, #0]
   173a0:	ldr	r0, [pc, #180]	; (17458 <btrfs_prepare_device@@Base+0x26c>)
   173a2:	add	r0, pc
   173a4:	b.n	17220 <btrfs_prepare_device@@Base+0x34>
   173a6:	cmp.w	r8, #0
   173aa:	beq.n	17412 <btrfs_prepare_device@@Base+0x226>
   173ac:	mul.w	r3, sl, r8
   173b0:	sub.w	r1, r3, #32
   173b4:	rsb	r2, r3, #32
   173b8:	lsl.w	r1, r9, r1
   173bc:	lsr.w	r2, r9, r2
   173c0:	orrs	r1, r2
   173c2:	lsl.w	r3, r9, r3
   173c6:	str	r1, [sp, #12]
   173c8:	str	r3, [sp, #8]
   173ca:	ldrd	r0, r1, [sp, #8]
   173ce:	mov	r2, r4
   173d0:	mov	r3, r5
   173d2:	add.w	r8, r8, #1
   173d6:	cmp	r1, r5
   173d8:	ldr	r1, [sp, #8]
   173da:	it	eq
   173dc:	cmpeq	r0, r4
   173de:	it	cc
   173e0:	ldrdcc	r2, r3, [sp, #8]
   173e4:	adds.w	r1, r1, #4096	; 0x1000
   173e8:	str	r1, [sp, #24]
   173ea:	ldr	r1, [sp, #12]
   173ec:	adc.w	r1, r1, #0
   173f0:	str	r1, [sp, #28]
   173f2:	ldrd	r0, r1, [sp, #24]
   173f6:	cmp	r5, r1
   173f8:	it	eq
   173fa:	cmpeq	r4, r0
   173fc:	it	cc
   173fe:	strdcc	r4, r5, [sp, #24]
   17402:	ldr	r1, [sp, #24]
   17404:	mov	r0, r6
   17406:	subs	r1, r1, r2
   17408:	str	r1, [sp, #0]
   1740a:	bl	16ff4 <fmt_print@@Base+0x2a8>
   1740e:	mov	fp, r0
   17410:	b.n	1734e <btrfs_prepare_device@@Base+0x162>
   17412:	mov.w	r2, #65536	; 0x10000
   17416:	movs	r3, #0
   17418:	strd	r2, r3, [sp, #8]
   1741c:	b.n	173ca <btrfs_prepare_device@@Base+0x1de>
   1741e:	mov	r0, r6
   17420:	bl	1703e <fmt_print@@Base+0x2f2>
   17424:	cmp	r0, #0
   17426:	bge.n	17430 <btrfs_prepare_device@@Base+0x244>
   17428:	ldr	r0, [pc, #48]	; (1745c <btrfs_prepare_device@@Base+0x270>)
   1742a:	mov	r1, r7
   1742c:	add	r0, pc
   1742e:	b.n	17220 <btrfs_prepare_device@@Base+0x34>
   17430:	ldr	r3, [sp, #40]	; 0x28
   17432:	movs	r0, #0
   17434:	strd	r4, r5, [r3]
   17438:	b.n	17226 <btrfs_prepare_device@@Base+0x3a>
   1743a:	add	sp, #180	; 0xb4
   1743c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17440:	lsls	r0, r1, #10
   17442:	movs	r0, r0
   17444:	subs	r3, #22
   17446:	movs	r5, r0
   17448:	ldr	r3, [sp, #816]	; 0x330
   1744a:	movs	r2, r0
   1744c:	subs	r2, #238	; 0xee
   1744e:	movs	r5, r0
   17450:	ldr	r3, [sp, #704]	; 0x2c0
   17452:	movs	r2, r0
   17454:	ldr	r3, [sp, #476]	; 0x1dc
   17456:	movs	r2, r0
   17458:	ldr	r2, [sp, #664]	; 0x298
   1745a:	movs	r2, r0
   1745c:	ldr	r2, [sp, #236]	; 0xec
   1745e:	movs	r2, r0

00017460 <disk_size@@Base>:
   17460:	ldr	r2, [pc, #76]	; (174b0 <disk_size@@Base+0x50>)
   17462:	ldr	r3, [pc, #80]	; (174b4 <disk_size@@Base+0x54>)
   17464:	add	r2, pc
   17466:	push	{r4, lr}
   17468:	sub	sp, #96	; 0x60
   1746a:	ldr	r3, [r2, r3]
   1746c:	mov	r1, sp
   1746e:	ldr	r3, [r3, #0]
   17470:	str	r3, [sp, #92]	; 0x5c
   17472:	mov.w	r3, #0
   17476:	blx	90ac <statfs64@plt>
   1747a:	cmp	r0, #0
   1747c:	blt.n	174a6 <disk_size@@Base+0x46>
   1747e:	ldr	r2, [sp, #4]
   17480:	ldrd	r4, r3, [sp, #8]
   17484:	asrs	r1, r2, #31
   17486:	muls	r3, r2
   17488:	mla	r3, r4, r1, r3
   1748c:	umull	r0, r1, r4, r2
   17490:	add	r1, r3
   17492:	ldr	r2, [pc, #36]	; (174b8 <disk_size@@Base+0x58>)
   17494:	ldr	r3, [pc, #28]	; (174b4 <disk_size@@Base+0x54>)
   17496:	add	r2, pc
   17498:	ldr	r3, [r2, r3]
   1749a:	ldr	r2, [r3, #0]
   1749c:	ldr	r3, [sp, #92]	; 0x5c
   1749e:	eors	r2, r3
   174a0:	beq.n	174ac <disk_size@@Base+0x4c>
   174a2:	blx	8c90 <__stack_chk_fail@plt>
   174a6:	movs	r0, #0
   174a8:	movs	r1, #0
   174aa:	b.n	17492 <disk_size@@Base+0x32>
   174ac:	add	sp, #96	; 0x60
   174ae:	pop	{r4, pc}
   174b0:	subs	r0, #180	; 0xb4
   174b2:	movs	r5, r0
   174b4:	lsls	r0, r1, #10
   174b6:	movs	r0, r0
   174b8:	subs	r0, #130	; 0x82
   174ba:	movs	r5, r0

000174bc <get_partition_size@@Base>:
   174bc:	push	{r0, r1, r2, r3, r4, lr}
   174be:	movs	r1, #0
   174c0:	ldr	r2, [pc, #80]	; (17514 <get_partition_size@@Base+0x58>)
   174c2:	ldr	r3, [pc, #84]	; (17518 <get_partition_size@@Base+0x5c>)
   174c4:	add	r2, pc
   174c6:	ldr	r3, [r2, r3]
   174c8:	ldr	r3, [r3, #0]
   174ca:	str	r3, [sp, #12]
   174cc:	mov.w	r3, #0
   174d0:	blx	8e14 <open64@plt>
   174d4:	subs	r4, r0, #0
   174d6:	blt.n	174ea <get_partition_size@@Base+0x2e>
   174d8:	ldr	r1, [pc, #52]	; (17510 <get_partition_size@@Base+0x54>)
   174da:	mov	r2, sp
   174dc:	blx	8d48 <ioctl@plt>
   174e0:	cmp	r0, #0
   174e2:	mov	r0, r4
   174e4:	bge.n	174f0 <get_partition_size@@Base+0x34>
   174e6:	blx	91e4 <close@plt>
   174ea:	movs	r0, #0
   174ec:	movs	r1, #0
   174ee:	b.n	174f8 <get_partition_size@@Base+0x3c>
   174f0:	blx	91e4 <close@plt>
   174f4:	ldrd	r0, r1, [sp]
   174f8:	ldr	r2, [pc, #32]	; (1751c <get_partition_size@@Base+0x60>)
   174fa:	ldr	r3, [pc, #28]	; (17518 <get_partition_size@@Base+0x5c>)
   174fc:	add	r2, pc
   174fe:	ldr	r3, [r2, r3]
   17500:	ldr	r2, [r3, #0]
   17502:	ldr	r3, [sp, #12]
   17504:	eors	r2, r3
   17506:	beq.n	1750c <get_partition_size@@Base+0x50>
   17508:	blx	8c90 <__stack_chk_fail@plt>
   1750c:	add	sp, #16
   1750e:	pop	{r4, pc}
   17510:	asrs	r2, r6, #9
   17512:	strh	r4, [r0, #0]
   17514:	subs	r0, #84	; 0x54
   17516:	movs	r5, r0
   17518:	lsls	r0, r1, #10
   1751a:	movs	r0, r0
   1751c:	subs	r0, #28
   1751e:	movs	r5, r0
   17520:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17524:	sub.w	sp, sp, #8192	; 0x2000
   17528:	sub	sp, #36	; 0x24
   1752a:	mov	r5, r1
   1752c:	add.w	r3, sp, #8256	; 0x2040
   17530:	ldr	r1, [pc, #476]	; (17710 <get_partition_size@@Base+0x254>)
   17532:	mov	r4, r2
   17534:	ldr	r2, [pc, #476]	; (17714 <get_partition_size@@Base+0x258>)
   17536:	ldrd	r8, r9, [r3, #8]
   1753a:	add	r1, pc
   1753c:	adds	r3, #8
   1753e:	ldr	r7, [pc, #472]	; (17718 <get_partition_size@@Base+0x25c>)
   17540:	cmp.w	r9, #0
   17544:	add.w	r3, sp, #8192	; 0x2000
   17548:	ldr	r2, [r1, r2]
   1754a:	it	eq
   1754c:	cmpeq.w	r8, #5
   17550:	add	r7, pc
   17552:	add.w	r3, r3, #28
   17556:	mov	r6, r0
   17558:	ldr	r2, [r2, #0]
   1755a:	str	r2, [r3, #0]
   1755c:	mov.w	r2, #0
   17560:	bne.n	17596 <get_partition_size@@Base+0xda>
   17562:	ldr	r3, [r4, #0]
   17564:	cbnz	r3, 17586 <get_partition_size@@Base+0xca>
   17566:	mvn.w	fp, #74	; 0x4a
   1756a:	ldr	r1, [pc, #432]	; (1771c <get_partition_size@@Base+0x260>)
   1756c:	add.w	r3, sp, #8192	; 0x2000
   17570:	ldr	r2, [pc, #416]	; (17714 <get_partition_size@@Base+0x258>)
   17572:	adds	r3, #28
   17574:	add	r1, pc
   17576:	ldr	r2, [r1, r2]
   17578:	ldr	r1, [r2, #0]
   1757a:	ldr	r2, [r3, #0]
   1757c:	eors	r1, r2
   1757e:	beq.w	176fa <get_partition_size@@Base+0x23e>
   17582:	blx	8c90 <__stack_chk_fail@plt>
   17586:	mov.w	fp, #0
   1758a:	strb.w	fp, [r5]
   1758e:	ldr	r2, [r4, #0]
   17590:	subs	r2, #1
   17592:	str	r2, [r4, #0]
   17594:	b.n	1756a <get_partition_size@@Base+0xae>
   17596:	add	r3, sp, #32
   17598:	mov.w	r2, #4096	; 0x1000
   1759c:	sub.w	sl, r3, #8
   175a0:	movs	r1, #0
   175a2:	str	r3, [sp, #16]
   175a4:	mov	r0, sl
   175a6:	blx	8f98 <memset@plt+0x4>
   175aa:	ldr	r1, [sp, #16]
   175ac:	movs	r2, #1
   175ae:	movs	r3, #0
   175b0:	mov	r0, r6
   175b2:	strd	r8, r9, [sl, #8]
   175b6:	strd	r2, r3, [r1, #-8]
   175ba:	mov.w	r2, #4294967295	; 0xffffffff
   175be:	movs	r3, #144	; 0x90
   175c0:	ldr	r1, [pc, #324]	; (17708 <get_partition_size@@Base+0x24c>)
   175c2:	strd	r3, r3, [sl, #56]	; 0x38
   175c6:	mov.w	r3, #4294967295	; 0xffffffff
   175ca:	strd	r2, r3, [sl, #32]
   175ce:	strd	r2, r3, [sl, #48]	; 0x30
   175d2:	mov	r2, sl
   175d4:	movs	r3, #1
   175d6:	strd	r8, r9, [sl, #16]
   175da:	str.w	r3, [sl, #64]	; 0x40
   175de:	blx	8d48 <ioctl@plt>
   175e2:	movs	r3, #1
   175e4:	subs.w	fp, r0, #0
   175e8:	bge.n	17604 <get_partition_size@@Base+0x148>
   175ea:	ldr	r2, [pc, #308]	; (17720 <get_partition_size@@Base+0x264>)
   175ec:	mov	r1, r3
   175ee:	ldr	r0, [r7, r2]
   175f0:	ldr	r2, [pc, #304]	; (17724 <get_partition_size@@Base+0x268>)
   175f2:	str.w	fp, [sp, #8]
   175f6:	strd	r8, r9, [sp]
   175fa:	add	r2, pc
   175fc:	ldr	r0, [r0, #0]
   175fe:	blx	9040 <__fprintf_chk@plt+0x4>
   17602:	b.n	1756a <get_partition_size@@Base+0xae>
   17604:	ldr.w	r2, [sl, #64]	; 0x40
   17608:	cbnz	r2, 17624 <get_partition_size@@Base+0x168>
   1760a:	ldr	r2, [pc, #276]	; (17720 <get_partition_size@@Base+0x264>)
   1760c:	mov	r1, r3
   1760e:	mvn.w	fp, #1
   17612:	ldr	r0, [r7, r2]
   17614:	ldr	r2, [pc, #272]	; (17728 <get_partition_size@@Base+0x26c>)
   17616:	strd	r8, r9, [sp]
   1761a:	add	r2, pc
   1761c:	ldr	r0, [r0, #0]
   1761e:	blx	9040 <__fprintf_chk@plt+0x4>
   17622:	b.n	1756a <get_partition_size@@Base+0xae>
   17624:	ldrd	r2, r3, [sl, #120]	; 0x78
   17628:	cmp	r3, #0
   1762a:	it	eq
   1762c:	cmpeq	r2, #5
   1762e:	beq.n	1765a <get_partition_size@@Base+0x19e>
   17630:	strd	r2, r3, [sp]
   17634:	mov	r1, r5
   17636:	mov	r2, r4
   17638:	mov	r0, r6
   1763a:	bl	17520 <get_partition_size@@Base+0x64>
   1763e:	mov	fp, r0
   17640:	cmp	r0, #0
   17642:	bne.n	1756a <get_partition_size@@Base+0xae>
   17644:	ldr	r3, [r4, #0]
   17646:	cmp	r3, #0
   17648:	beq.n	17566 <get_partition_size@@Base+0xaa>
   1764a:	ldr	r1, [pc, #224]	; (1772c <get_partition_size@@Base+0x270>)
   1764c:	mov	r0, r5
   1764e:	add	r1, pc
   17650:	blx	8d3c <strcat@plt+0x4>
   17654:	ldr	r3, [r4, #0]
   17656:	subs	r3, #1
   17658:	str	r3, [r4, #0]
   1765a:	ldrd	r8, r9, [sl, #136]	; 0x88
   1765e:	cmp.w	r9, #0
   17662:	it	eq
   17664:	cmpeq.w	r8, #256	; 0x100
   17668:	beq.n	176d6 <get_partition_size@@Base+0x21a>
   1766a:	add.w	fp, sp, #4128	; 0x1020
   1766e:	mov.w	r2, #4096	; 0x1000
   17672:	sub.w	r3, fp, #8
   17676:	movs	r1, #0
   17678:	mov	r0, r3
   1767a:	blx	8f98 <memset@plt+0x4>
   1767e:	mov	r3, r0
   17680:	ldrd	r0, r1, [sl, #120]	; 0x78
   17684:	mov	r2, r3
   17686:	strd	r8, r9, [r3, #8]
   1768a:	strd	r0, r1, [fp, #-8]
   1768e:	mov	r0, r6
   17690:	ldr	r1, [pc, #120]	; (1770c <get_partition_size@@Base+0x250>)
   17692:	blx	8d48 <ioctl@plt>
   17696:	subs.w	fp, r0, #0
   1769a:	bge.n	176b0 <get_partition_size@@Base+0x1f4>
   1769c:	ldr	r3, [pc, #128]	; (17720 <get_partition_size@@Base+0x264>)
   1769e:	movs	r1, #1
   176a0:	ldr	r2, [pc, #140]	; (17730 <get_partition_size@@Base+0x274>)
   176a2:	ldr	r0, [r7, r3]
   176a4:	add	r2, pc
   176a6:	mov	r3, fp
   176a8:	ldr	r0, [r0, #0]
   176aa:	blx	9040 <__fprintf_chk@plt+0x4>
   176ae:	b.n	1756a <get_partition_size@@Base+0xae>
   176b0:	add.w	r1, sp, #4128	; 0x1020
   176b4:	adds	r1, #8
   176b6:	str	r1, [sp, #20]
   176b8:	mov	r0, r1
   176ba:	blx	8f1c <strlen@plt>
   176be:	ldr	r3, [r4, #0]
   176c0:	cmp	r0, r3
   176c2:	mov	r6, r0
   176c4:	bhi.w	17566 <get_partition_size@@Base+0xaa>
   176c8:	ldr	r1, [sp, #20]
   176ca:	mov	r0, r5
   176cc:	blx	8d3c <strcat@plt+0x4>
   176d0:	ldr	r0, [r4, #0]
   176d2:	subs	r0, r0, r6
   176d4:	str	r0, [r4, #0]
   176d6:	ldrh.w	r6, [sl, #152]	; 0x98
   176da:	ldr	r3, [r4, #0]
   176dc:	cmp	r3, r6
   176de:	bcc.w	17566 <get_partition_size@@Base+0xaa>
   176e2:	ldr	r1, [sp, #16]
   176e4:	mov	r2, r6
   176e6:	mov	r0, r5
   176e8:	mov.w	fp, #0
   176ec:	adds	r1, #146	; 0x92
   176ee:	blx	9170 <strncat@plt>
   176f2:	ldr	r3, [r4, #0]
   176f4:	subs	r3, r3, r6
   176f6:	str	r3, [r4, #0]
   176f8:	b.n	1756a <get_partition_size@@Base+0xae>
   176fa:	mov	r0, fp
   176fc:	add.w	sp, sp, #8192	; 0x2000
   17700:	add	sp, #36	; 0x24
   17702:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17706:	nop
   17708:	str	r4, [sp, #68]	; 0x44
   1770a:	beq.n	1770e <get_partition_size@@Base+0x252>
   1770c:	str	r4, [sp, #72]	; 0x48
   1770e:	beq.n	17712 <get_partition_size@@Base+0x256>
   17710:	adds	r7, #222	; 0xde
   17712:	movs	r5, r0
   17714:	lsls	r0, r1, #10
   17716:	movs	r0, r0
   17718:	adds	r7, #200	; 0xc8
   1771a:	movs	r5, r0
   1771c:	adds	r7, #164	; 0xa4
   1771e:	movs	r5, r0
   17720:	lsls	r4, r3, #10
   17722:	movs	r0, r0
   17724:	ldr	r0, [sp, #556]	; 0x22c
   17726:	movs	r2, r0
   17728:	ldr	r0, [sp, #684]	; 0x2ac
   1772a:	movs	r2, r0
   1772c:	ldr	r0, [sp, #612]	; 0x264
   1772e:	movs	r2, r0
   17730:	ldr	r0, [sp, #276]	; 0x114
   17732:	movs	r2, r0

00017734 <btrfs_subvolid_resolve@@Base>:
   17734:	push	{r0, r1, r2, r3, r4, lr}
   17736:	cbz	r2, 17754 <btrfs_subvolid_resolve@@Base+0x20>
   17738:	subs	r2, #1
   1773a:	movs	r4, #0
   1773c:	str	r2, [sp, #12]
   1773e:	strb	r4, [r1, #0]
   17740:	strb	r4, [r1, r2]
   17742:	ldrd	r2, r3, [sp, #24]
   17746:	strd	r2, r3, [sp]
   1774a:	add	r2, sp, #12
   1774c:	bl	17520 <get_partition_size@@Base+0x64>
   17750:	add	sp, #16
   17752:	pop	{r4, pc}
   17754:	mvn.w	r0, #74	; 0x4a
   17758:	b.n	17750 <btrfs_subvolid_resolve@@Base+0x1c>

0001775a <subvol_uuid_search_add@@Base>:
   1775a:	add.w	ip, r0, #8
   1775e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17762:	mov	r5, r0
   17764:	mov	r4, r1
   17766:	mov	r0, ip
   17768:	movs	r6, #0
   1776a:	ldr	r1, [r0, #0]
   1776c:	cmp	r1, #0
   1776e:	bne.n	1781e <subvol_uuid_search_add@@Base+0xc4>
   17770:	strd	r6, r1, [r4]
   17774:	str	r1, [r4, #8]
   17776:	mov	r1, ip
   17778:	str	r4, [r0, #0]
   1777a:	mov	r0, r4
   1777c:	bl	183ca <rb_insert_color@@Base>
   17780:	add.w	r7, r5, #20
   17784:	movs	r2, #0
   17786:	mov	r3, r7
   17788:	ldr	r6, [r3, #0]
   1778a:	cmp	r6, #0
   1778c:	bne.n	17846 <subvol_uuid_search_add@@Base+0xec>
   1778e:	add.w	r0, r4, #36	; 0x24
   17792:	strd	r2, r6, [r4, #36]	; 0x24
   17796:	str	r6, [r4, #44]	; 0x2c
   17798:	mov	r1, r7
   1779a:	str	r0, [r3, #0]
   1779c:	bl	183ca <rb_insert_color@@Base>
   177a0:	add.w	r8, r4, #56	; 0x38
   177a4:	add.w	r2, r4, #55	; 0x37
   177a8:	add.w	r1, r4, #71	; 0x47
   177ac:	movs	r3, #0
   177ae:	ldrb.w	r0, [r2, #1]!
   177b2:	cbnz	r0, 177b6 <subvol_uuid_search_add@@Base+0x5c>
   177b4:	adds	r3, #1
   177b6:	cmp	r2, r1
   177b8:	bne.n	177ae <subvol_uuid_search_add@@Base+0x54>
   177ba:	cmp	r3, #16
   177bc:	beq.n	177de <subvol_uuid_search_add@@Base+0x84>
   177be:	add.w	r7, r5, #12
   177c2:	movs	r2, #0
   177c4:	mov	r3, r7
   177c6:	ldr	r6, [r3, #0]
   177c8:	cmp	r6, #0
   177ca:	bne.n	1786a <subvol_uuid_search_add@@Base+0x110>
   177cc:	add.w	r0, r4, #12
   177d0:	strd	r2, r6, [r4, #12]
   177d4:	str	r6, [r4, #20]
   177d6:	mov	r1, r7
   177d8:	str	r0, [r3, #0]
   177da:	bl	183ca <rb_insert_color@@Base>
   177de:	add.w	r7, r4, #88	; 0x58
   177e2:	add.w	r2, r4, #87	; 0x57
   177e6:	add.w	r1, r4, #103	; 0x67
   177ea:	movs	r3, #0
   177ec:	ldrb.w	r0, [r2, #1]!
   177f0:	cbnz	r0, 177f4 <subvol_uuid_search_add@@Base+0x9a>
   177f2:	adds	r3, #1
   177f4:	cmp	r2, r1
   177f6:	bne.n	177ec <subvol_uuid_search_add@@Base+0x92>
   177f8:	cmp	r3, #16
   177fa:	beq.n	178b8 <subvol_uuid_search_add@@Base+0x15e>
   177fc:	adds	r5, #16
   177fe:	movs	r2, #0
   17800:	mov	r3, r5
   17802:	ldr	r6, [r3, #0]
   17804:	cmp	r6, #0
   17806:	bne.n	17890 <subvol_uuid_search_add@@Base+0x136>
   17808:	add.w	r0, r4, #24
   1780c:	strd	r2, r6, [r4, #24]
   17810:	str	r6, [r4, #32]
   17812:	mov	r1, r5
   17814:	str	r0, [r3, #0]
   17816:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1781a:	b.w	183ca <rb_insert_color@@Base>
   1781e:	ldrd	r0, r7, [r4, #48]	; 0x30
   17822:	ldr	r6, [r1, #48]	; 0x30
   17824:	subs	r2, r6, r0
   17826:	ldr	r0, [r1, #52]	; 0x34
   17828:	sbc.w	r3, r0, r7
   1782c:	cmp	r2, #0
   1782e:	sbcs.w	r0, r3, #0
   17832:	bge.n	1783c <subvol_uuid_search_add@@Base+0xe2>
   17834:	add.w	r0, r1, #8
   17838:	mov	r6, r1
   1783a:	b.n	1776a <subvol_uuid_search_add@@Base+0x10>
   1783c:	orrs.w	r0, r2, r3
   17840:	beq.n	17780 <subvol_uuid_search_add@@Base+0x26>
   17842:	adds	r0, r1, #4
   17844:	b.n	17838 <subvol_uuid_search_add@@Base+0xde>
   17846:	ldr.w	r1, [r4, #136]	; 0x88
   1784a:	ldr	r0, [r6, #100]	; 0x64
   1784c:	blx	8b04 <strcmp@plt>
   17850:	cmp	r0, #0
   17852:	mov.w	r3, r0, asr #31
   17856:	mov	r2, r0
   17858:	bge.n	17862 <subvol_uuid_search_add@@Base+0x108>
   1785a:	add.w	r3, r6, #8
   1785e:	mov	r2, r6
   17860:	b.n	17788 <subvol_uuid_search_add@@Base+0x2e>
   17862:	orrs	r3, r2
   17864:	beq.n	177a0 <subvol_uuid_search_add@@Base+0x46>
   17866:	adds	r3, r6, #4
   17868:	b.n	1785e <subvol_uuid_search_add@@Base+0x104>
   1786a:	movs	r2, #16
   1786c:	add.w	r0, r6, #44	; 0x2c
   17870:	mov	r1, r8
   17872:	blx	8c1c <memcmp@plt+0x4>
   17876:	cmp	r0, #0
   17878:	mov.w	r3, r0, asr #31
   1787c:	mov	r2, r0
   1787e:	bge.n	17888 <subvol_uuid_search_add@@Base+0x12e>
   17880:	add.w	r3, r6, #8
   17884:	mov	r2, r6
   17886:	b.n	177c6 <subvol_uuid_search_add@@Base+0x6c>
   17888:	orrs	r3, r2
   1788a:	beq.n	177de <subvol_uuid_search_add@@Base+0x84>
   1788c:	adds	r3, r6, #4
   1788e:	b.n	17884 <subvol_uuid_search_add@@Base+0x12a>
   17890:	add.w	r0, r6, #64	; 0x40
   17894:	movs	r2, #16
   17896:	mov	r1, r7
   17898:	blx	8c1c <memcmp@plt+0x4>
   1789c:	asrs	r3, r0, #31
   1789e:	cbnz	r0, 178bc <subvol_uuid_search_add@@Base+0x162>
   178a0:	ldrd	r2, r3, [r6, #96]	; 0x60
   178a4:	ldrd	r0, r1, [r4, #120]	; 0x78
   178a8:	cmp	r3, r1
   178aa:	it	eq
   178ac:	cmpeq	r2, r0
   178ae:	bcc.n	178c4 <subvol_uuid_search_add@@Base+0x16a>
   178b0:	cmp	r1, r3
   178b2:	it	eq
   178b4:	cmpeq	r0, r2
   178b6:	bcc.n	178cc <subvol_uuid_search_add@@Base+0x172>
   178b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   178bc:	cmp	r0, #0
   178be:	sbcs.w	r3, r3, #0
   178c2:	bge.n	178cc <subvol_uuid_search_add@@Base+0x172>
   178c4:	add.w	r3, r6, #8
   178c8:	mov	r2, r6
   178ca:	b.n	17802 <subvol_uuid_search_add@@Base+0xa8>
   178cc:	adds	r3, r6, #4
   178ce:	b.n	178c8 <subvol_uuid_search_add@@Base+0x16e>

000178d0 <subvol_uuid_search2@@Base>:
   178d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178d4:	mov	r4, r0
   178d6:	vpush	{d8-d9}
   178da:	ldr.w	ip, [pc, #1180]	; 17d78 <subvol_uuid_search2@@Base+0x4a8>
   178de:	ldr.w	r0, [pc, #1180]	; 17d7c <subvol_uuid_search2@@Base+0x4ac>
   178e2:	add	ip, pc
   178e4:	ldr.w	r5, [pc, #1176]	; 17d80 <subvol_uuid_search2@@Base+0x4b0>
   178e8:	sub.w	sp, sp, #4576	; 0x11e0
   178ec:	sub	sp, #20
   178ee:	add	r5, pc
   178f0:	add.w	r1, sp, #4640	; 0x1220
   178f4:	add.w	sl, sp, #48	; 0x30
   178f8:	adds	r1, #8
   178fa:	strd	r2, r3, [sl, #-8]
   178fe:	ldr.w	r8, [r1]
   17902:	add.w	r1, sp, #4640	; 0x1220
   17906:	adds	r1, #24
   17908:	ldr.w	r0, [ip, r0]
   1790c:	vldr	s16, [r1]
   17910:	add.w	r1, sp, #4640	; 0x1220
   17914:	adds	r1, #28
   17916:	ldr.w	fp, [r1]
   1791a:	add.w	r1, sp, #4576	; 0x11e0
   1791e:	ldr	r0, [r0, #0]
   17920:	str	r0, [r1, #12]
   17922:	mov.w	r0, #0
   17926:	ldr	r0, [r4, #4]
   17928:	adds	r1, #12
   1792a:	cmp	r0, #0
   1792c:	bne.w	17a5e <subvol_uuid_search2@@Base+0x18e>
   17930:	cmp.w	fp, #2
   17934:	mov	r9, r2
   17936:	str	r3, [sp, #16]
   17938:	bne.n	17942 <subvol_uuid_search2@@Base+0x72>
   1793a:	ldr	r4, [r4, #16]
   1793c:	cbnz	r4, 17962 <subvol_uuid_search2@@Base+0x92>
   1793e:	mov	sl, r4
   17940:	b.n	179a8 <subvol_uuid_search2@@Base+0xd8>
   17942:	cmp.w	fp, #1
   17946:	bne.n	1794c <subvol_uuid_search2@@Base+0x7c>
   17948:	ldr	r4, [r4, #12]
   1794a:	b.n	1793c <subvol_uuid_search2@@Base+0x6c>
   1794c:	cmp.w	fp, #0
   17950:	bne.n	17956 <subvol_uuid_search2@@Base+0x86>
   17952:	ldr	r4, [r4, #8]
   17954:	b.n	1793c <subvol_uuid_search2@@Base+0x6c>
   17956:	cmp.w	fp, #3
   1795a:	bne.w	17d54 <subvol_uuid_search2@@Base+0x484>
   1795e:	ldr	r4, [r4, #20]
   17960:	b.n	1793c <subvol_uuid_search2@@Base+0x6c>
   17962:	cmp.w	fp, #2
   17966:	bne.n	179c4 <subvol_uuid_search2@@Base+0xf4>
   17968:	add.w	r0, r4, #64	; 0x40
   1796c:	movs	r2, #16
   1796e:	mov	r1, r8
   17970:	sub.w	sl, r4, #24
   17974:	blx	8c1c <memcmp@plt+0x4>
   17978:	asrs	r3, r0, #31
   1797a:	cmp	r0, #0
   1797c:	bne.w	17d58 <subvol_uuid_search2@@Base+0x488>
   17980:	add.w	r3, sp, #4640	; 0x1220
   17984:	ldrd	r0, r1, [r4, #96]	; 0x60
   17988:	adds	r3, #16
   1798a:	ldrd	r2, r3, [r3]
   1798e:	cmp	r1, r3
   17990:	it	eq
   17992:	cmpeq	r0, r2
   17994:	bcc.n	17952 <subvol_uuid_search2@@Base+0x82>
   17996:	add.w	r3, sp, #4640	; 0x1220
   1799a:	adds	r3, #16
   1799c:	ldrd	r2, r3, [r3]
   179a0:	cmp	r3, r1
   179a2:	it	eq
   179a4:	cmpeq	r2, r0
   179a6:	bcc.n	17a04 <subvol_uuid_search2@@Base+0x134>
   179a8:	ldr	r1, [pc, #984]	; (17d84 <subvol_uuid_search2@@Base+0x4b4>)
   179aa:	add.w	r3, sp, #4576	; 0x11e0
   179ae:	ldr	r2, [pc, #972]	; (17d7c <subvol_uuid_search2@@Base+0x4ac>)
   179b0:	adds	r3, #12
   179b2:	add	r1, pc
   179b4:	ldr	r2, [r1, r2]
   179b6:	ldr	r1, [r2, #0]
   179b8:	ldr	r2, [r3, #0]
   179ba:	eors	r1, r2
   179bc:	beq.w	17d64 <subvol_uuid_search2@@Base+0x494>
   179c0:	blx	8c90 <__stack_chk_fail@plt>
   179c4:	cmp.w	fp, #1
   179c8:	bne.n	179e0 <subvol_uuid_search2@@Base+0x110>
   179ca:	add.w	r0, r4, #44	; 0x2c
   179ce:	movs	r2, #16
   179d0:	mov	r1, r8
   179d2:	sub.w	sl, r4, #12
   179d6:	blx	8c1c <memcmp@plt+0x4>
   179da:	asrs	r7, r0, #31
   179dc:	mov	r6, r0
   179de:	b.n	179f6 <subvol_uuid_search2@@Base+0x126>
   179e0:	cmp.w	fp, #0
   179e4:	bne.n	17a08 <subvol_uuid_search2@@Base+0x138>
   179e6:	ldrd	r3, r2, [r4, #48]	; 0x30
   179ea:	mov	sl, r4
   179ec:	subs.w	r6, r3, r9
   179f0:	ldr	r3, [sp, #16]
   179f2:	sbc.w	r7, r2, r3
   179f6:	cmp	r6, #0
   179f8:	sbcs.w	r3, r7, #0
   179fc:	blt.n	17952 <subvol_uuid_search2@@Base+0x82>
   179fe:	orrs.w	r3, r6, r7
   17a02:	beq.n	179a8 <subvol_uuid_search2@@Base+0xd8>
   17a04:	ldr	r4, [r4, #4]
   17a06:	b.n	1793c <subvol_uuid_search2@@Base+0x6c>
   17a08:	cmp.w	fp, #3
   17a0c:	bne.n	17a1e <subvol_uuid_search2@@Base+0x14e>
   17a0e:	vmov	r1, s16
   17a12:	sub.w	sl, r4, #36	; 0x24
   17a16:	ldr	r0, [r4, #100]	; 0x64
   17a18:	blx	8b04 <strcmp@plt>
   17a1c:	b.n	179da <subvol_uuid_search2@@Base+0x10a>
   17a1e:	ldr	r3, [pc, #872]	; (17d88 <subvol_uuid_search2@@Base+0x4b8>)
   17a20:	add	r4, sp, #488	; 0x1e8
   17a22:	ldr	r2, [pc, #872]	; (17d8c <subvol_uuid_search2@@Base+0x4bc>)
   17a24:	movs	r1, #1
   17a26:	ldr	r0, [r5, r3]
   17a28:	add	r2, pc
   17a2a:	ldr	r3, [pc, #868]	; (17d90 <subvol_uuid_search2@@Base+0x4c0>)
   17a2c:	str	r1, [sp, #12]
   17a2e:	add	r3, pc
   17a30:	str	r3, [sp, #8]
   17a32:	ldr	r3, [pc, #864]	; (17d94 <subvol_uuid_search2@@Base+0x4c4>)
   17a34:	add	r3, pc
   17a36:	str	r3, [sp, #4]
   17a38:	mov.w	r3, #402	; 0x192
   17a3c:	str	r3, [sp, #0]
   17a3e:	ldr	r3, [pc, #856]	; (17d98 <subvol_uuid_search2@@Base+0x4c8>)
   17a40:	ldr	r0, [r0, #0]
   17a42:	add	r3, pc
   17a44:	blx	9040 <__fprintf_chk@plt+0x4>
   17a48:	movs	r1, #16
   17a4a:	mov	r0, r4
   17a4c:	blx	8e98 <backtrace@plt>
   17a50:	movs	r2, #2
   17a52:	mov	r1, r0
   17a54:	mov	r0, r4
   17a56:	blx	9214 <backtrace_symbols_fd@plt>
   17a5a:	blx	91c0 <abort@plt>
   17a5e:	cmp.w	fp, #3
   17a62:	bhi.w	17d48 <subvol_uuid_search2@@Base+0x478>
   17a66:	tbb	[pc, fp]
   17a6a:	ldmia	r3, {r2, r3}
   17a6c:	bcs.n	17a74 <subvol_uuid_search2@@Base+0x1a4>
   17a6e:	ldr	r0, [r4, #0]
   17a70:	sub.w	r2, sl, #8
   17a74:	mov	r1, r8
   17a76:	bl	1bfd6 <btrfs_lookup_uuid_received_subvol_item@@Base>
   17a7a:	mov	r6, r0
   17a7c:	cmp	r6, #0
   17a7e:	bne.w	17cd4 <subvol_uuid_search2@@Base+0x404>
   17a82:	ldr	r3, [r4, #0]
   17a84:	add	r6, sp, #488	; 0x1e8
   17a86:	add	r7, sp, #496	; 0x1f0
   17a88:	mov.w	r8, #4096	; 0x1000
   17a8c:	movs	r1, #0
   17a8e:	mov	r0, r6
   17a90:	vmov	s17, r3
   17a94:	ldrd	r2, r3, [sl, #-8]
   17a98:	strd	r2, r3, [sp, #16]
   17a9c:	mov	r2, r8
   17a9e:	blx	8f98 <memset@plt+0x4>
   17aa2:	movs	r2, #1
   17aa4:	movs	r3, #0
   17aa6:	strd	r2, r3, [r7, #-8]
   17aaa:	ldrd	r2, r3, [sp, #16]
   17aae:	movs	r7, #0
   17ab0:	str.w	r8, [r6, #64]	; 0x40
   17ab4:	strd	r2, r3, [r6, #8]
   17ab8:	strd	r2, r3, [r6, #16]
   17abc:	mov.w	r2, #4294967295	; 0xffffffff
   17ac0:	movs	r3, #132	; 0x84
   17ac2:	strd	r3, r3, [r6, #56]	; 0x38
   17ac6:	mov.w	r3, #4294967295	; 0xffffffff
   17aca:	strd	r2, r3, [r6, #32]
   17ace:	strd	r2, r3, [r6, #48]	; 0x30
   17ad2:	add	r2, sp, #48	; 0x30
   17ad4:	mov	r3, r7
   17ad6:	vmov	s18, r2
   17ada:	vmov	r0, s17
   17ade:	mov	r2, r6
   17ae0:	ldr	r1, [pc, #656]	; (17d74 <subvol_uuid_search2@@Base+0x4a4>)
   17ae2:	str	r3, [sp, #28]
   17ae4:	blx	8d48 <ioctl@plt>
   17ae8:	ldr	r3, [sp, #28]
   17aea:	cmp	r0, #0
   17aec:	bge.w	17c4e <subvol_uuid_search2@@Base+0x37e>
   17af0:	ldr	r3, [pc, #660]	; (17d88 <subvol_uuid_search2@@Base+0x4b8>)
   17af2:	movs	r1, #1
   17af4:	ldr	r2, [pc, #676]	; (17d9c <subvol_uuid_search2@@Base+0x4cc>)
   17af6:	ldr	r3, [r5, r3]
   17af8:	add	r2, pc
   17afa:	ldr	r0, [r3, #0]
   17afc:	blx	9040 <__fprintf_chk@plt+0x4>
   17b00:	movw	r3, #439	; 0x1b7
   17b04:	cmp	r7, r3
   17b06:	add	r5, sp, #48	; 0x30
   17b08:	bne.n	17b1e <subvol_uuid_search2@@Base+0x24e>
   17b0a:	ldrd	r2, r3, [r5, #160]	; 0xa0
   17b0e:	ldr.w	r1, [r5, #243]	; 0xf3
   17b12:	ldr.w	r0, [r5, #239]	; 0xef
   17b16:	cmp	r3, r1
   17b18:	it	eq
   17b1a:	cmpeq	r2, r0
   17b1c:	beq.n	17b2a <subvol_uuid_search2@@Base+0x25a>
   17b1e:	add.w	r0, r5, #239	; 0xef
   17b22:	movs	r2, #200	; 0xc8
   17b24:	movs	r1, #0
   17b26:	blx	8f98 <memset@plt+0x4>
   17b2a:	movs	r1, #144	; 0x90
   17b2c:	movs	r0, #1
   17b2e:	blx	8ab8 <calloc@plt+0x4>
   17b32:	mov	sl, r0
   17b34:	cmp	r0, #0
   17b36:	beq.w	17d4e <subvol_uuid_search2@@Base+0x47e>
   17b3a:	ldrd	r6, r7, [r5, #-8]
   17b3e:	add.w	r2, r5, #247	; 0xf7
   17b42:	add.w	lr, r0, #56	; 0x38
   17b46:	addw	r8, r5, #263	; 0x107
   17b4a:	strd	r6, r7, [r0, #48]	; 0x30
   17b4e:	ldr	r0, [r2, #0]
   17b50:	adds	r2, #8
   17b52:	ldr.w	r1, [r2, #-4]
   17b56:	cmp	r2, r8
   17b58:	mov	ip, lr
   17b5a:	stmia.w	ip!, {r0, r1}
   17b5e:	mov	lr, ip
   17b60:	bne.n	17b4e <subvol_uuid_search2@@Base+0x27e>
   17b62:	addw	r2, r5, #279	; 0x117
   17b66:	add.w	lr, sl, #88	; 0x58
   17b6a:	addw	r8, r5, #295	; 0x127
   17b6e:	ldr	r0, [r2, #0]
   17b70:	adds	r2, #8
   17b72:	ldr.w	r1, [r2, #-4]
   17b76:	cmp	r2, r8
   17b78:	mov	ip, lr
   17b7a:	stmia.w	ip!, {r0, r1}
   17b7e:	mov	lr, ip
   17b80:	bne.n	17b6e <subvol_uuid_search2@@Base+0x29e>
   17b82:	addw	r2, r5, #263	; 0x107
   17b86:	add.w	lr, sl, #72	; 0x48
   17b8a:	addw	r8, r5, #279	; 0x117
   17b8e:	ldr	r0, [r2, #0]
   17b90:	adds	r2, #8
   17b92:	ldr.w	r1, [r2, #-4]
   17b96:	cmp	r2, r8
   17b98:	mov	ip, lr
   17b9a:	stmia.w	ip!, {r0, r1}
   17b9e:	mov	lr, ip
   17ba0:	bne.n	17b8e <subvol_uuid_search2@@Base+0x2be>
   17ba2:	ldr.w	r1, [r5, #295]	; 0x127
   17ba6:	cmp.w	fp, #3
   17baa:	ldr.w	r2, [r5, #299]	; 0x12b
   17bae:	strd	r1, r2, [sl, #104]	; 0x68
   17bb2:	ldr.w	r1, [r5, #303]	; 0x12f
   17bb6:	ldr.w	r2, [r5, #307]	; 0x133
   17bba:	strd	r1, r2, [sl, #112]	; 0x70
   17bbe:	ldr.w	r1, [r5, #311]	; 0x137
   17bc2:	ldr.w	r2, [r5, #315]	; 0x13b
   17bc6:	strd	r1, r2, [sl, #120]	; 0x78
   17bca:	ldr.w	r1, [r5, #319]	; 0x13f
   17bce:	ldr.w	r2, [r5, #323]	; 0x143
   17bd2:	strd	r1, r2, [sl, #128]	; 0x80
   17bd6:	bne.w	17d1c <subvol_uuid_search2@@Base+0x44c>
   17bda:	vmov	r0, s16
   17bde:	blx	8c78 <strdup@plt+0x4>
   17be2:	str.w	r0, [sl, #136]	; 0x88
   17be6:	cmp	r0, #0
   17be8:	bne.w	179a8 <subvol_uuid_search2@@Base+0xd8>
   17bec:	mvn.w	r6, #11
   17bf0:	ldr.w	r0, [sl, #136]	; 0x88
   17bf4:	blx	8b84 <free@plt+0x4>
   17bf8:	mov	r0, sl
   17bfa:	blx	8b84 <free@plt+0x4>
   17bfe:	b.n	17cd4 <subvol_uuid_search2@@Base+0x404>
   17c00:	ldr	r0, [r4, #0]
   17c02:	sub.w	r2, sl, #8
   17c06:	mov	r1, r8
   17c08:	bl	1bfd0 <btrfs_lookup_uuid_subvol_item@@Base>
   17c0c:	b.n	17a7a <subvol_uuid_search2@@Base+0x1aa>
   17c0e:	vmov	r1, s16
   17c12:	movs	r2, #0
   17c14:	ldr	r0, [r4, #0]
   17c16:	blx	8f34 <openat64@plt>
   17c1a:	subs	r7, r0, #0
   17c1c:	bge.n	17c3c <subvol_uuid_search2@@Base+0x36c>
   17c1e:	blx	8f58 <__errno_location@plt>
   17c22:	ldr	r3, [pc, #356]	; (17d88 <subvol_uuid_search2@@Base+0x4b8>)
   17c24:	ldr	r2, [pc, #376]	; (17da0 <subvol_uuid_search2@@Base+0x4d0>)
   17c26:	movs	r1, #1
   17c28:	add	r2, pc
   17c2a:	ldr	r6, [r0, #0]
   17c2c:	ldr	r0, [r5, r3]
   17c2e:	vmov	r3, s16
   17c32:	negs	r6, r6
   17c34:	ldr	r0, [r0, #0]
   17c36:	blx	9040 <__fprintf_chk@plt+0x4>
   17c3a:	b.n	17a7c <subvol_uuid_search2@@Base+0x1ac>
   17c3c:	sub.w	r1, sl, #8
   17c40:	bl	19f60 <btrfs_list_get_path_rootid@@Base>
   17c44:	mov	r6, r0
   17c46:	mov	r0, r7
   17c48:	blx	91e4 <close@plt>
   17c4c:	b.n	17a7c <subvol_uuid_search2@@Base+0x1ac>
   17c4e:	ldr	r2, [r6, #64]	; 0x40
   17c50:	str	r2, [sp, #32]
   17c52:	cbz	r2, 17ca6 <subvol_uuid_search2@@Base+0x3d6>
   17c54:	add	r2, sp, #592	; 0x250
   17c56:	mov.w	sl, #0
   17c5a:	str	r2, [sp, #36]	; 0x24
   17c5c:	str.w	sl, [sp, #28]
   17c60:	ldr	r1, [sp, #28]
   17c62:	ldr	r2, [sp, #36]	; 0x24
   17c64:	add.w	ip, r1, #32
   17c68:	add	r2, r1
   17c6a:	ldr.w	r8, [r2, #28]
   17c6e:	ldr	r0, [r2, #8]
   17c70:	add.w	r1, r8, ip
   17c74:	str	r1, [sp, #28]
   17c76:	ldr	r1, [r2, #12]
   17c78:	ldrd	r8, r9, [sp, #16]
   17c7c:	strd	r0, r1, [r6, #8]
   17c80:	ldr	r1, [r2, #24]
   17c82:	str	r1, [r6, #56]	; 0x38
   17c84:	ldr	r0, [r2, #16]
   17c86:	ldr	r1, [r2, #20]
   17c88:	strd	r0, r1, [r6, #24]
   17c8c:	ldr	r1, [r2, #12]
   17c8e:	ldr	r0, [r2, #8]
   17c90:	cmp	r9, r1
   17c92:	it	eq
   17c94:	cmpeq	r8, r0
   17c96:	bcs.n	17cb2 <subvol_uuid_search2@@Base+0x3e2>
   17c98:	ldrd	r1, r2, [r6, #24]
   17c9c:	adds	r0, r2, #1
   17c9e:	it	eq
   17ca0:	cmpeq.w	r1, #4294967295	; 0xffffffff
   17ca4:	bne.n	17cf8 <subvol_uuid_search2@@Base+0x428>
   17ca6:	cmp	r3, #0
   17ca8:	bne.w	17b00 <subvol_uuid_search2@@Base+0x230>
   17cac:	mvn.w	r6, #1
   17cb0:	b.n	17cd4 <subvol_uuid_search2@@Base+0x404>
   17cb2:	bne.n	17cec <subvol_uuid_search2@@Base+0x41c>
   17cb4:	ldr	r1, [r2, #24]
   17cb6:	cmp	r1, #132	; 0x84
   17cb8:	bne.n	17cec <subvol_uuid_search2@@Base+0x41c>
   17cba:	ldr	r7, [r2, #28]
   17cbc:	cmp.w	r7, #440	; 0x1b8
   17cc0:	bcc.n	17cd8 <subvol_uuid_search2@@Base+0x408>
   17cc2:	ldr	r3, [pc, #196]	; (17d88 <subvol_uuid_search2@@Base+0x4b8>)
   17cc4:	mvn.w	r6, #74	; 0x4a
   17cc8:	ldr	r0, [pc, #216]	; (17da4 <subvol_uuid_search2@@Base+0x4d4>)
   17cca:	ldr	r3, [r5, r3]
   17ccc:	add	r0, pc
   17cce:	ldr	r1, [r3, #0]
   17cd0:	blx	91a8 <fputs@plt+0x4>
   17cd4:	mov	sl, r6
   17cd6:	b.n	179a8 <subvol_uuid_search2@@Base+0xd8>
   17cd8:	ldr	r1, [sp, #36]	; 0x24
   17cda:	movw	r3, #439	; 0x1b7
   17cde:	vmov	r0, s18
   17ce2:	mov	r2, r7
   17ce4:	add	r1, ip
   17ce6:	blx	8d2c <__memcpy_chk@plt>
   17cea:	movs	r3, #1
   17cec:	ldr	r2, [sp, #32]
   17cee:	add.w	sl, sl, #1
   17cf2:	cmp	r2, sl
   17cf4:	bne.n	17c60 <subvol_uuid_search2@@Base+0x390>
   17cf6:	b.n	17c98 <subvol_uuid_search2@@Base+0x3c8>
   17cf8:	adds	r0, r1, #1
   17cfa:	adc.w	r2, r2, #0
   17cfe:	strd	r0, r2, [r6, #24]
   17d02:	ldr	r2, [r6, #56]	; 0x38
   17d04:	cmp	r2, #132	; 0x84
   17d06:	bne.n	17ca6 <subvol_uuid_search2@@Base+0x3d6>
   17d08:	ldrd	r0, r1, [r6, #8]
   17d0c:	ldrd	r8, r9, [sp, #16]
   17d10:	cmp	r9, r1
   17d12:	it	eq
   17d14:	cmpeq	r8, r0
   17d16:	beq.w	17ada <subvol_uuid_search2@@Base+0x20a>
   17d1a:	b.n	17ca6 <subvol_uuid_search2@@Base+0x3d6>
   17d1c:	mov.w	r0, #4096	; 0x1000
   17d20:	blx	8e40 <malloc@plt+0x4>
   17d24:	mov	r1, r0
   17d26:	str.w	r0, [sl, #136]	; 0x88
   17d2a:	cmp	r0, #0
   17d2c:	beq.w	17bec <subvol_uuid_search2@@Base+0x31c>
   17d30:	strd	r6, r7, [sp]
   17d34:	mov.w	r2, #4096	; 0x1000
   17d38:	ldr	r0, [r4, #0]
   17d3a:	bl	17734 <btrfs_subvolid_resolve@@Base>
   17d3e:	mov	r6, r0
   17d40:	cmp	r0, #0
   17d42:	beq.w	179a8 <subvol_uuid_search2@@Base+0xd8>
   17d46:	b.n	17bf0 <subvol_uuid_search2@@Base+0x320>
   17d48:	mvn.w	r6, #21
   17d4c:	b.n	17cd4 <subvol_uuid_search2@@Base+0x404>
   17d4e:	mvn.w	r6, #11
   17d52:	b.n	17cd4 <subvol_uuid_search2@@Base+0x404>
   17d54:	mov	sl, r0
   17d56:	b.n	179a8 <subvol_uuid_search2@@Base+0xd8>
   17d58:	cmp	r0, #0
   17d5a:	sbcs.w	r3, r3, #0
   17d5e:	bge.w	17a04 <subvol_uuid_search2@@Base+0x134>
   17d62:	b.n	17952 <subvol_uuid_search2@@Base+0x82>
   17d64:	mov	r0, sl
   17d66:	add.w	sp, sp, #4576	; 0x11e0
   17d6a:	add	sp, #20
   17d6c:	vpop	{d8-d9}
   17d70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d74:	str	r4, [sp, #68]	; 0x44
   17d76:	beq.n	17d7a <subvol_uuid_search2@@Base+0x4aa>
   17d78:	adds	r4, #54	; 0x36
   17d7a:	movs	r5, r0
   17d7c:	lsls	r0, r1, #10
   17d7e:	movs	r0, r0
   17d80:	adds	r4, #42	; 0x2a
   17d82:	movs	r5, r0
   17d84:	adds	r3, #102	; 0x66
   17d86:	movs	r5, r0
   17d88:	lsls	r4, r3, #10
   17d8a:	movs	r0, r0
   17d8c:	ldr	r6, [r6, #16]
   17d8e:	movs	r2, r0
   17d90:			; <UNDEFINED> instruction: 0xb784
   17d92:	movs	r2, r0
   17d94:	str	r5, [sp, #932]	; 0x3a4
   17d96:	movs	r2, r0
   17d98:	str	r4, [sp, #856]	; 0x358
   17d9a:	movs	r2, r0
   17d9c:	str	r4, [sp, #288]	; 0x120
   17d9e:	movs	r2, r0
   17da0:	str	r2, [sp, #1012]	; 0x3f4
   17da2:	movs	r2, r0
   17da4:	str	r2, [sp, #616]	; 0x268
   17da6:	movs	r2, r0

00017da8 <subvol_uuid_search@@Base>:
   17da8:	push	{r4, r5, lr}
   17daa:	sub	sp, #28
   17dac:	ldr	r1, [sp, #60]	; 0x3c
   17dae:	ldrd	r4, r5, [sp, #48]	; 0x30
   17db2:	str	r1, [sp, #20]
   17db4:	ldr	r1, [sp, #56]	; 0x38
   17db6:	strd	r4, r5, [sp, #8]
   17dba:	str	r1, [sp, #16]
   17dbc:	ldr	r1, [sp, #40]	; 0x28
   17dbe:	str	r1, [sp, #0]
   17dc0:	bl	178d0 <subvol_uuid_search2@@Base>
   17dc4:	cmn.w	r0, #4096	; 0x1000
   17dc8:	it	hi
   17dca:	movhi	r0, #0
   17dcc:	add	sp, #28
   17dce:	pop	{r4, r5, pc}

00017dd0 <subvol_uuid_search_init@@Base>:
   17dd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dd4:	mov	r9, r1
   17dd6:	vpush	{d8}
   17dda:	movs	r6, #0
   17ddc:	ldr	r1, [pc, #820]	; (18114 <subvol_uuid_search_init@@Base+0x344>)
   17dde:	mov.w	r5, #4096	; 0x1000
   17de2:	ldr	r2, [pc, #820]	; (18118 <subvol_uuid_search_init@@Base+0x348>)
   17de4:	mov.w	sl, #4294967295	; 0xffffffff
   17de8:	add	r1, pc
   17dea:	ldr	r3, [pc, #816]	; (1811c <subvol_uuid_search_init@@Base+0x34c>)
   17dec:	sub.w	sp, sp, #4608	; 0x1200
   17df0:	vmov	s16, r0
   17df4:	sub	sp, #4
   17df6:	add	r3, pc
   17df8:	add	r4, sp, #504	; 0x1f8
   17dfa:	add	r7, sp, #512	; 0x200
   17dfc:	str	r3, [sp, #12]
   17dfe:	add.w	r3, sp, #4576	; 0x11e0
   17e02:	ldr	r2, [r1, r2]
   17e04:	add	r0, sp, #64	; 0x40
   17e06:	movs	r1, #0
   17e08:	adds	r3, #28
   17e0a:	ldr	r2, [r2, #0]
   17e0c:	str	r2, [r3, #0]
   17e0e:	mov.w	r2, #0
   17e12:	movw	r2, #439	; 0x1b7
   17e16:	blx	8f98 <memset@plt+0x4>
   17e1a:	mov	r2, r5
   17e1c:	mov	r1, r6
   17e1e:	vstr	s16, [r9]
   17e22:	mov	r0, r4
   17e24:	strd	r6, r6, [r9, #8]
   17e28:	strd	r6, r6, [r9, #16]
   17e2c:	mov.w	fp, #4294967295	; 0xffffffff
   17e30:	blx	8f98 <memset@plt+0x4>
   17e34:	movs	r2, #1
   17e36:	movs	r3, #0
   17e38:	vmov	r0, s16
   17e3c:	strd	r2, r3, [r7, #-8]
   17e40:	movs	r2, #9
   17e42:	movs	r3, #0
   17e44:	ldr	r1, [pc, #712]	; (18110 <subvol_uuid_search_init@@Base+0x340>)
   17e46:	strd	r2, r3, [r4, #8]
   17e4a:	movs	r7, #1
   17e4c:	strd	r2, r3, [r4, #16]
   17e50:	mov	r2, r4
   17e52:	movs	r3, #132	; 0x84
   17e54:	strd	sl, fp, [r4, #32]
   17e58:	strd	r3, r3, [r4, #56]	; 0x38
   17e5c:	strd	sl, fp, [r4, #48]	; 0x30
   17e60:	str	r7, [r4, #64]	; 0x40
   17e62:	blx	8d48 <ioctl@plt>
   17e66:	subs	r3, r0, #0
   17e68:	str	r3, [sp, #8]
   17e6a:	blt.n	17ef4 <subvol_uuid_search_init@@Base+0x124>
   17e6c:	ldr.w	r8, [r4, #64]	; 0x40
   17e70:	cmp.w	r8, #0
   17e74:	beq.n	17e98 <subvol_uuid_search_init@@Base+0xc8>
   17e76:	str.w	r7, [r9, #4]
   17e7a:	str	r6, [sp, #8]
   17e7c:	ldr	r1, [pc, #672]	; (18120 <subvol_uuid_search_init@@Base+0x350>)
   17e7e:	add.w	r3, sp, #4576	; 0x11e0
   17e82:	ldr	r2, [pc, #660]	; (18118 <subvol_uuid_search_init@@Base+0x348>)
   17e84:	adds	r3, #28
   17e86:	add	r1, pc
   17e88:	ldr	r2, [r1, r2]
   17e8a:	ldr	r1, [r2, #0]
   17e8c:	ldr	r2, [r3, #0]
   17e8e:	eors	r1, r2
   17e90:	beq.w	180fe <subvol_uuid_search_init@@Base+0x32e>
   17e94:	blx	8c90 <__stack_chk_fail@plt>
   17e98:	mov	r2, r5
   17e9a:	mov	r1, r8
   17e9c:	mov	r0, r4
   17e9e:	blx	8f98 <memset@plt+0x4>
   17ea2:	str	r5, [r4, #64]	; 0x40
   17ea4:	mov	r5, r8
   17ea6:	movs	r3, #0
   17ea8:	movs	r2, #1
   17eaa:	movs	r1, #132	; 0x84
   17eac:	strd	r2, r3, [r4]
   17eb0:	movs	r3, #144	; 0x90
   17eb2:	strd	sl, fp, [r4, #16]
   17eb6:	strd	r1, r3, [r4, #56]	; 0x38
   17eba:	add	r3, sp, #608	; 0x260
   17ebc:	strd	sl, fp, [r4, #32]
   17ec0:	strd	sl, fp, [r4, #48]	; 0x30
   17ec4:	str.w	r8, [sp, #52]	; 0x34
   17ec8:	strd	r8, r8, [sp, #28]
   17ecc:	strd	r8, r8, [sp, #44]	; 0x2c
   17ed0:	strd	r8, r8, [sp, #36]	; 0x24
   17ed4:	str	r3, [sp, #60]	; 0x3c
   17ed6:	vmov	r0, s16
   17eda:	mov	r2, r4
   17edc:	ldr	r1, [pc, #560]	; (18110 <subvol_uuid_search_init@@Base+0x340>)
   17ede:	blx	8d48 <ioctl@plt>
   17ee2:	subs	r3, r0, #0
   17ee4:	str	r3, [sp, #8]
   17ee6:	bge.n	17f08 <subvol_uuid_search_init@@Base+0x138>
   17ee8:	ldr	r2, [sp, #12]
   17eea:	ldr	r3, [pc, #568]	; (18124 <subvol_uuid_search_init@@Base+0x354>)
   17eec:	ldr	r3, [r2, r3]
   17eee:	ldr	r2, [pc, #568]	; (18128 <subvol_uuid_search_init@@Base+0x358>)
   17ef0:	add	r2, pc
   17ef2:	b.n	17efe <subvol_uuid_search_init@@Base+0x12e>
   17ef4:	ldr	r2, [sp, #12]
   17ef6:	ldr	r3, [pc, #556]	; (18124 <subvol_uuid_search_init@@Base+0x354>)
   17ef8:	ldr	r3, [r2, r3]
   17efa:	ldr	r2, [pc, #560]	; (1812c <subvol_uuid_search_init@@Base+0x35c>)
   17efc:	add	r2, pc
   17efe:	ldr	r0, [r3, #0]
   17f00:	movs	r1, #1
   17f02:	blx	9040 <__fprintf_chk@plt+0x4>
   17f06:	b.n	17e7c <subvol_uuid_search_init@@Base+0xac>
   17f08:	ldr	r3, [r4, #64]	; 0x40
   17f0a:	cmp	r3, #0
   17f0c:	beq.n	17e7c <subvol_uuid_search_init@@Base+0xac>
   17f0e:	mov.w	fp, #0
   17f12:	add	r7, sp, #64	; 0x40
   17f14:	mov	sl, fp
   17f16:	addw	r3, r7, #263	; 0x107
   17f1a:	str	r3, [sp, #56]	; 0x38
   17f1c:	ldr	r3, [r4, #64]	; 0x40
   17f1e:	cmp	r3, sl
   17f20:	bhi.n	17f44 <subvol_uuid_search_init@@Base+0x174>
   17f22:	ldrd	r0, r1, [r4, #24]
   17f26:	mov.w	r3, #4096	; 0x1000
   17f2a:	str	r3, [r4, #64]	; 0x40
   17f2c:	adds	r2, r1, #1
   17f2e:	it	eq
   17f30:	cmpeq.w	r0, #4294967295	; 0xffffffff
   17f34:	beq.w	180d6 <subvol_uuid_search_init@@Base+0x306>
   17f38:	adds	r2, r0, #1
   17f3a:	adc.w	r3, r1, #0
   17f3e:	strd	r2, r3, [r4, #24]
   17f42:	b.n	17ed6 <subvol_uuid_search_init@@Base+0x106>
   17f44:	ldr	r3, [sp, #60]	; 0x3c
   17f46:	add.w	r6, r3, fp
   17f4a:	add.w	r3, fp, #32
   17f4e:	str	r3, [sp, #24]
   17f50:	ldr	r3, [r6, #12]
   17f52:	ldr	r2, [r6, #8]
   17f54:	cmp	r3, #0
   17f56:	it	eq
   17f58:	cmpeq	r2, #5
   17f5a:	beq.n	17f7c <subvol_uuid_search_init@@Base+0x1ac>
   17f5c:	subs.w	r1, r2, #256	; 0x100
   17f60:	str	r1, [sp, #16]
   17f62:	adc.w	r1, r3, #4294967295	; 0xffffffff
   17f66:	str	r1, [sp, #20]
   17f68:	ldrd	fp, ip, [sp, #16]
   17f6c:	mov.w	r1, #4294967295	; 0xffffffff
   17f70:	mvn.w	r0, #510	; 0x1fe
   17f74:	cmp	ip, r1
   17f76:	it	eq
   17f78:	cmpeq	fp, r0
   17f7a:	bcs.n	17fd2 <subvol_uuid_search_init@@Base+0x202>
   17f7c:	ldr	r1, [r6, #24]
   17f7e:	cmp	r1, #132	; 0x84
   17f80:	bne.n	17ff4 <subvol_uuid_search_init@@Base+0x224>
   17f82:	ldr	r3, [r6, #28]
   17f84:	cmp.w	r3, #438	; 0x1b6
   17f88:	bls.w	180d0 <subvol_uuid_search_init@@Base+0x300>
   17f8c:	ldr	r3, [sp, #24]
   17f8e:	add.w	r8, sp, #608	; 0x260
   17f92:	movw	r2, #439	; 0x1b7
   17f96:	mov	r0, r7
   17f98:	add	r8, r3
   17f9a:	mov	r1, r8
   17f9c:	blx	8bdc <memcpy@plt+0x4>
   17fa0:	ldr.w	r3, [r8, #295]	; 0x127
   17fa4:	ldr.w	r5, [r8, #319]	; 0x13f
   17fa8:	str	r3, [sp, #36]	; 0x24
   17faa:	ldr.w	r3, [r8, #299]	; 0x12b
   17fae:	str	r3, [sp, #40]	; 0x28
   17fb0:	ldr.w	r3, [r8, #303]	; 0x12f
   17fb4:	str	r3, [sp, #44]	; 0x2c
   17fb6:	ldr.w	r3, [r8, #307]	; 0x133
   17fba:	str	r3, [sp, #48]	; 0x30
   17fbc:	ldr.w	r3, [r8, #311]	; 0x137
   17fc0:	str	r3, [sp, #28]
   17fc2:	ldr.w	r3, [r8, #315]	; 0x13b
   17fc6:	str	r3, [sp, #32]
   17fc8:	ldr.w	r3, [r8, #323]	; 0x143
   17fcc:	mov.w	r8, #1
   17fd0:	str	r3, [sp, #52]	; 0x34
   17fd2:	ldr	r3, [r6, #28]
   17fd4:	add.w	sl, sl, #1
   17fd8:	ldr	r2, [sp, #24]
   17fda:	add	r2, r3
   17fdc:	ldr	r3, [r6, #12]
   17fde:	mov	fp, r2
   17fe0:	ldr	r2, [r6, #8]
   17fe2:	strd	r2, r3, [r4, #8]
   17fe6:	ldr	r3, [r6, #20]
   17fe8:	ldr	r2, [r6, #16]
   17fea:	strd	r2, r3, [r4, #24]
   17fee:	ldr	r3, [r6, #24]
   17ff0:	str	r3, [r4, #56]	; 0x38
   17ff2:	b.n	17f1c <subvol_uuid_search_init@@Base+0x14c>
   17ff4:	cmp.w	r8, #0
   17ff8:	beq.n	17fd2 <subvol_uuid_search_init@@Base+0x202>
   17ffa:	vmov	r0, s16
   17ffe:	bl	1a4b8 <btrfs_list_path_for_root@@Base>
   18002:	mov	r8, r0
   18004:	cbnz	r0, 18010 <subvol_uuid_search_init@@Base+0x240>
   18006:	ldr	r0, [pc, #296]	; (18130 <subvol_uuid_search_init@@Base+0x360>)
   18008:	add	r0, pc
   1800a:	blx	8c78 <strdup@plt+0x4>
   1800e:	mov	r8, r0
   18010:	cmn.w	r8, #4096	; 0x1000
   18014:	bls.n	18036 <subvol_uuid_search_init@@Base+0x266>
   18016:	ldr	r2, [sp, #12]
   18018:	ldr	r3, [pc, #264]	; (18124 <subvol_uuid_search_init@@Base+0x354>)
   1801a:	ldr	r1, [r6, #8]
   1801c:	str.w	r8, [sp, #8]
   18020:	ldr	r3, [r2, r3]
   18022:	ldr	r2, [r6, #12]
   18024:	strd	r1, r2, [sp]
   18028:	movs	r1, #1
   1802a:	ldr	r2, [pc, #264]	; (18134 <subvol_uuid_search_init@@Base+0x364>)
   1802c:	ldr	r0, [r3, #0]
   1802e:	add	r2, pc
   18030:	blx	9040 <__fprintf_chk@plt+0x4>
   18034:	b.n	17e7c <subvol_uuid_search_init@@Base+0xac>
   18036:	movs	r1, #144	; 0x90
   18038:	movs	r0, #1
   1803a:	blx	8ab8 <calloc@plt+0x4>
   1803e:	ldr	r2, [r6, #12]
   18040:	ldr	r1, [r6, #8]
   18042:	add.w	lr, r0, #56	; 0x38
   18046:	strd	r1, r2, [r0, #48]	; 0x30
   1804a:	add.w	r2, r7, #247	; 0xf7
   1804e:	mov	r3, r0
   18050:	ldr	r1, [r2, #4]
   18052:	mov	ip, lr
   18054:	ldr	r0, [r2, #0]
   18056:	adds	r2, #8
   18058:	stmia.w	ip!, {r0, r1}
   1805c:	mov	lr, ip
   1805e:	ldr	r1, [sp, #56]	; 0x38
   18060:	cmp	r2, r1
   18062:	bne.n	18050 <subvol_uuid_search_init@@Base+0x280>
   18064:	addw	r1, r7, #279	; 0x117
   18068:	addw	r2, r7, #263	; 0x107
   1806c:	add.w	lr, r3, #72	; 0x48
   18070:	mov	fp, r1
   18072:	ldr	r0, [r2, #0]
   18074:	adds	r2, #8
   18076:	ldr.w	r1, [r2, #-4]
   1807a:	cmp	r2, fp
   1807c:	mov	ip, lr
   1807e:	stmia.w	ip!, {r0, r1}
   18082:	mov	lr, ip
   18084:	bne.n	18072 <subvol_uuid_search_init@@Base+0x2a2>
   18086:	addw	r1, r7, #295	; 0x127
   1808a:	addw	r2, r7, #279	; 0x117
   1808e:	add.w	lr, r3, #88	; 0x58
   18092:	mov	fp, r1
   18094:	ldr	r0, [r2, #0]
   18096:	adds	r2, #8
   18098:	ldr.w	r1, [r2, #-4]
   1809c:	cmp	r2, fp
   1809e:	mov	ip, lr
   180a0:	stmia.w	ip!, {r0, r1}
   180a4:	mov	lr, ip
   180a6:	bne.n	18094 <subvol_uuid_search_init@@Base+0x2c4>
   180a8:	ldr	r2, [sp, #36]	; 0x24
   180aa:	mov	r1, r3
   180ac:	mov	r0, r9
   180ae:	str	r2, [r3, #104]	; 0x68
   180b0:	ldr	r2, [sp, #40]	; 0x28
   180b2:	str	r2, [r3, #108]	; 0x6c
   180b4:	ldr	r2, [sp, #44]	; 0x2c
   180b6:	str	r2, [r3, #112]	; 0x70
   180b8:	ldr	r2, [sp, #48]	; 0x30
   180ba:	str	r2, [r3, #116]	; 0x74
   180bc:	ldr	r2, [sp, #28]
   180be:	str	r2, [r3, #120]	; 0x78
   180c0:	ldr	r2, [sp, #32]
   180c2:	strd	r2, r5, [r3, #124]	; 0x7c
   180c6:	ldr	r2, [sp, #52]	; 0x34
   180c8:	strd	r2, r8, [r3, #132]	; 0x84
   180cc:	bl	1775a <subvol_uuid_search_add@@Base>
   180d0:	mov.w	r8, #0
   180d4:	b.n	17fd2 <subvol_uuid_search_init@@Base+0x202>
   180d6:	ldrd	r0, r1, [r4, #8]
   180da:	adds	r3, r1, #1
   180dc:	it	eq
   180de:	cmpeq.w	r0, #4294967295	; 0xffffffff
   180e2:	beq.w	17e7c <subvol_uuid_search_init@@Base+0xac>
   180e6:	adds	r2, r0, #1
   180e8:	adc.w	r3, r1, #0
   180ec:	strd	r2, r3, [r4, #8]
   180f0:	movs	r3, #0
   180f2:	movs	r2, #0
   180f4:	strd	r2, r3, [r4, #24]
   180f8:	movs	r3, #0
   180fa:	str	r3, [r4, #56]	; 0x38
   180fc:	b.n	17ed6 <subvol_uuid_search_init@@Base+0x106>
   180fe:	ldr	r0, [sp, #8]
   18100:	add.w	sp, sp, #4608	; 0x1200
   18104:	add	sp, #4
   18106:	vpop	{d8}
   1810a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1810e:	nop
   18110:	str	r4, [sp, #68]	; 0x44
   18112:	beq.n	18116 <subvol_uuid_search_init@@Base+0x346>
   18114:	cmp	r7, #48	; 0x30
   18116:	movs	r5, r0
   18118:	lsls	r0, r1, #10
   1811a:	movs	r0, r0
   1811c:	cmp	r7, #34	; 0x22
   1811e:	movs	r5, r0
   18120:	cmp	r6, #146	; 0x92
   18122:	movs	r5, r0
   18124:	lsls	r4, r3, #10
   18126:	movs	r0, r0
   18128:	str	r0, [sp, #320]	; 0x140
   1812a:	movs	r2, r0
   1812c:	str	r0, [sp, #720]	; 0x2d0
   1812e:	movs	r2, r0
   18130:	ldrb	r3, [r4, #17]
   18132:	movs	r2, r0
   18134:	ldrh	r3, [r6, #60]	; 0x3c
   18136:	movs	r2, r0

00018138 <subvol_uuid_search_finit@@Base>:
   18138:	push	{r4, r5, r6, lr}
   1813a:	mov	r5, r0
   1813c:	ldr	r3, [r0, #4]
   1813e:	cbz	r3, 18156 <subvol_uuid_search_finit@@Base+0x1e>
   18140:	add.w	r6, r0, #8
   18144:	mov	r0, r6
   18146:	bl	186e6 <rb_first@@Base>
   1814a:	mov	r4, r0
   1814c:	cbnz	r0, 18158 <subvol_uuid_search_finit@@Base+0x20>
   1814e:	strd	r0, r0, [r5, #8]
   18152:	strd	r0, r0, [r5, #16]
   18156:	pop	{r4, r5, r6, pc}
   18158:	ldr.w	r0, [r4, #136]	; 0x88
   1815c:	blx	8b84 <free@plt+0x4>
   18160:	mov	r0, r4
   18162:	mov	r1, r6
   18164:	bl	18470 <rb_erase@@Base>
   18168:	mov	r0, r4
   1816a:	blx	8b84 <free@plt+0x4>
   1816e:	b.n	18144 <subvol_uuid_search_finit@@Base+0xc>

00018170 <path_cat_out@@Base>:
   18170:	push	{r4, r5, r6, r7, lr}
   18172:	mov	r7, r0
   18174:	sub	sp, #20
   18176:	mov	r0, r1
   18178:	mov	r6, r2
   1817a:	mov	r5, r1
   1817c:	blx	8f1c <strlen@plt>
   18180:	mov	r4, r0
   18182:	mov	r0, r6
   18184:	blx	8f1c <strlen@plt>
   18188:	movw	r2, #4093	; 0xffd
   1818c:	adds	r1, r4, r0
   1818e:	mov	r3, r0
   18190:	cmp	r1, r2
   18192:	bgt.n	181d4 <path_cat_out@@Base+0x64>
   18194:	cbz	r4, 181a4 <path_cat_out@@Base+0x34>
   18196:	adds	r2, r5, r4
   18198:	ldrb.w	r2, [r2, #-1]
   1819c:	cmp	r2, #47	; 0x2f
   1819e:	it	eq
   181a0:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   181a4:	cbz	r0, 181d0 <path_cat_out@@Base+0x60>
   181a6:	adds	r2, r6, r0
   181a8:	ldrb.w	r2, [r2, #-1]
   181ac:	cmp	r2, #47	; 0x2f
   181ae:	bne.n	181b2 <path_cat_out@@Base+0x42>
   181b0:	subs	r3, r0, #1
   181b2:	strd	r3, r6, [sp, #8]
   181b6:	mov.w	r2, #4294967295	; 0xffffffff
   181ba:	ldr	r3, [pc, #32]	; (181dc <path_cat_out@@Base+0x6c>)
   181bc:	movs	r1, #1
   181be:	mov	r0, r7
   181c0:	strd	r4, r5, [sp]
   181c4:	add	r3, pc
   181c6:	blx	8f70 <__sprintf_chk@plt>
   181ca:	movs	r0, #0
   181cc:	add	sp, #20
   181ce:	pop	{r4, r5, r6, r7, pc}
   181d0:	mov	r3, r0
   181d2:	b.n	181b2 <path_cat_out@@Base+0x42>
   181d4:	mvn.w	r0, #35	; 0x23
   181d8:	b.n	181cc <path_cat_out@@Base+0x5c>
   181da:	nop
   181dc:	ldrh	r7, [r1, #50]	; 0x32
   181de:	movs	r2, r0

000181e0 <path_cat3_out@@Base>:
   181e0:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   181e4:	mov	sl, r0
   181e6:	sub	sp, #24
   181e8:	mov	r0, r1
   181ea:	mov	r8, r2
   181ec:	mov	r9, r3
   181ee:	mov	r7, r1
   181f0:	blx	8f1c <strlen@plt>
   181f4:	mov	r4, r0
   181f6:	mov	r0, r8
   181f8:	blx	8f1c <strlen@plt>
   181fc:	mov	r6, r0
   181fe:	mov	fp, r0
   18200:	mov	r0, r9
   18202:	blx	8f1c <strlen@plt>
   18206:	adds	r2, r4, r6
   18208:	movw	r1, #4092	; 0xffc
   1820c:	add	r2, r0
   1820e:	mov	r3, r0
   18210:	cmp	r2, r1
   18212:	bgt.n	18272 <path_cat3_out@@Base+0x92>
   18214:	cbz	r4, 18224 <path_cat3_out@@Base+0x44>
   18216:	adds	r2, r7, r4
   18218:	ldrb.w	r2, [r2, #-1]
   1821c:	cmp	r2, #47	; 0x2f
   1821e:	it	eq
   18220:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   18224:	cbz	r6, 1826a <path_cat3_out@@Base+0x8a>
   18226:	add.w	r2, r8, r6
   1822a:	ldrb.w	r2, [r2, #-1]
   1822e:	cmp	r2, #47	; 0x2f
   18230:	bne.n	18236 <path_cat3_out@@Base+0x56>
   18232:	add.w	fp, r6, #4294967295	; 0xffffffff
   18236:	cbz	r0, 1826e <path_cat3_out@@Base+0x8e>
   18238:	add.w	r2, r9, r0
   1823c:	ldrb.w	r2, [r2, #-1]
   18240:	cmp	r2, #47	; 0x2f
   18242:	bne.n	18246 <path_cat3_out@@Base+0x66>
   18244:	subs	r3, r0, #1
   18246:	strd	r3, r9, [sp, #16]
   1824a:	mov.w	r2, #4294967295	; 0xffffffff
   1824e:	ldr	r3, [pc, #40]	; (18278 <path_cat3_out@@Base+0x98>)
   18250:	movs	r1, #1
   18252:	mov	r0, sl
   18254:	strd	fp, r8, [sp, #8]
   18258:	add	r3, pc
   1825a:	strd	r4, r7, [sp]
   1825e:	blx	8f70 <__sprintf_chk@plt>
   18262:	movs	r0, #0
   18264:	add	sp, #24
   18266:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   1826a:	mov	fp, r6
   1826c:	b.n	18236 <path_cat3_out@@Base+0x56>
   1826e:	mov	r3, r0
   18270:	b.n	18246 <path_cat3_out@@Base+0x66>
   18272:	mvn.w	r0, #35	; 0x23
   18276:	b.n	18264 <path_cat3_out@@Base+0x84>
   18278:	ldrh	r6, [r6, #44]	; 0x2c
   1827a:	movs	r2, r0
   1827c:	push	{r4, lr}
   1827e:	orrs	r3, r1
   18280:	ldr	r4, [r0, #0]
   18282:	str	r4, [r1, #0]
   18284:	bics.w	r4, r4, #3
   18288:	str	r3, [r0, #0]
   1828a:	beq.n	18298 <path_cat3_out@@Base+0xb8>
   1828c:	ldr	r3, [r4, #8]
   1828e:	cmp	r0, r3
   18290:	ite	eq
   18292:	streq	r1, [r4, #8]
   18294:	strne	r1, [r4, #4]
   18296:	pop	{r4, pc}
   18298:	str	r1, [r2, #0]
   1829a:	b.n	18296 <path_cat3_out@@Base+0xb6>

0001829c <__rb_erase_color@@Base>:
   1829c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   182a0:	mov	r6, r2
   182a2:	mov	r4, r0
   182a4:	mov	r7, r1
   182a6:	movs	r2, #0
   182a8:	ldr	r5, [r4, #4]
   182aa:	cmp	r5, r2
   182ac:	beq.n	18350 <__rb_erase_color@@Base+0xb4>
   182ae:	ldr	r3, [r5, #0]
   182b0:	ands.w	r3, r3, #1
   182b4:	bne.n	182d6 <__rb_erase_color@@Base+0x3a>
   182b6:	ldr.w	r8, [r5, #8]
   182ba:	mov	r1, r5
   182bc:	orr.w	r2, r4, #1
   182c0:	mov	r0, r4
   182c2:	str.w	r8, [r4, #4]
   182c6:	str	r4, [r5, #8]
   182c8:	mov	r5, r8
   182ca:	str.w	r2, [r8]
   182ce:	mov	r2, r7
   182d0:	bl	1827c <path_cat3_out@@Base+0x9c>
   182d4:	blx	r6
   182d6:	ldr	r3, [r5, #4]
   182d8:	cbz	r3, 182e0 <__rb_erase_color@@Base+0x44>
   182da:	ldr	r2, [r3, #0]
   182dc:	lsls	r2, r2, #31
   182de:	bpl.n	18324 <__rb_erase_color@@Base+0x88>
   182e0:	ldr.w	r8, [r5, #8]
   182e4:	cmp.w	r8, #0
   182e8:	beq.n	182f2 <__rb_erase_color@@Base+0x56>
   182ea:	ldr.w	r3, [r8]
   182ee:	lsls	r3, r3, #31
   182f0:	bpl.n	18304 <__rb_erase_color@@Base+0x68>
   182f2:	str	r4, [r5, #0]
   182f4:	ldr	r3, [r4, #0]
   182f6:	lsls	r2, r3, #31
   182f8:	bmi.n	183be <__rb_erase_color@@Base+0x122>
   182fa:	orr.w	r3, r3, #1
   182fe:	str	r3, [r4, #0]
   18300:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18304:	ldr.w	r3, [r8, #4]
   18308:	str	r3, [r5, #8]
   1830a:	str.w	r5, [r8, #4]
   1830e:	str.w	r8, [r4, #4]
   18312:	cbz	r3, 1831a <__rb_erase_color@@Base+0x7e>
   18314:	orr.w	r2, r5, #1
   18318:	str	r2, [r3, #0]
   1831a:	mov	r0, r5
   1831c:	mov	r1, r8
   1831e:	blx	r6
   18320:	mov	r3, r5
   18322:	mov	r5, r8
   18324:	ldr	r2, [r5, #8]
   18326:	str	r2, [r4, #4]
   18328:	str	r4, [r5, #8]
   1832a:	orr.w	r1, r5, #1
   1832e:	str	r1, [r3, #0]
   18330:	cbz	r2, 1833c <__rb_erase_color@@Base+0xa0>
   18332:	ldr	r3, [r2, #0]
   18334:	and.w	r3, r3, #1
   18338:	orrs	r3, r4
   1833a:	str	r3, [r2, #0]
   1833c:	movs	r3, #1
   1833e:	mov	r2, r7
   18340:	mov	r1, r5
   18342:	mov	r0, r4
   18344:	bl	1827c <path_cat3_out@@Base+0x9c>
   18348:	mov	r3, r6
   1834a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1834e:	bx	r3
   18350:	ldr	r5, [r4, #8]
   18352:	ldr	r3, [r5, #0]
   18354:	ands.w	r3, r3, #1
   18358:	bne.n	1837a <__rb_erase_color@@Base+0xde>
   1835a:	ldr.w	r8, [r5, #4]
   1835e:	mov	r1, r5
   18360:	orr.w	r2, r4, #1
   18364:	mov	r0, r4
   18366:	str.w	r8, [r4, #8]
   1836a:	str	r4, [r5, #4]
   1836c:	mov	r5, r8
   1836e:	str.w	r2, [r8]
   18372:	mov	r2, r7
   18374:	bl	1827c <path_cat3_out@@Base+0x9c>
   18378:	blx	r6
   1837a:	ldr	r3, [r5, #8]
   1837c:	cbz	r3, 18384 <__rb_erase_color@@Base+0xe8>
   1837e:	ldr	r2, [r3, #0]
   18380:	lsls	r0, r2, #31
   18382:	bpl.n	183b6 <__rb_erase_color@@Base+0x11a>
   18384:	ldr.w	r8, [r5, #4]
   18388:	cmp.w	r8, #0
   1838c:	beq.n	182f2 <__rb_erase_color@@Base+0x56>
   1838e:	ldr.w	r3, [r8]
   18392:	lsls	r1, r3, #31
   18394:	bmi.n	182f2 <__rb_erase_color@@Base+0x56>
   18396:	ldr.w	r3, [r8, #8]
   1839a:	str	r3, [r5, #4]
   1839c:	str.w	r5, [r8, #8]
   183a0:	str.w	r8, [r4, #8]
   183a4:	cbz	r3, 183ac <__rb_erase_color@@Base+0x110>
   183a6:	orr.w	r2, r5, #1
   183aa:	str	r2, [r3, #0]
   183ac:	mov	r0, r5
   183ae:	mov	r1, r8
   183b0:	blx	r6
   183b2:	mov	r3, r5
   183b4:	mov	r5, r8
   183b6:	ldr	r2, [r5, #4]
   183b8:	str	r2, [r4, #8]
   183ba:	str	r4, [r5, #4]
   183bc:	b.n	1832a <__rb_erase_color@@Base+0x8e>
   183be:	bics.w	r3, r3, #3
   183c2:	beq.n	18300 <__rb_erase_color@@Base+0x64>
   183c4:	mov	r2, r4
   183c6:	mov	r4, r3
   183c8:	b.n	182a8 <__rb_erase_color@@Base+0xc>

000183ca <rb_insert_color@@Base>:
   183ca:	push	{r4, r5, r6}
   183cc:	mov	r3, r0
   183ce:	ldr	r4, [r0, #0]
   183d0:	mov	r2, r1
   183d2:	cbnz	r4, 183dc <rb_insert_color@@Base+0x12>
   183d4:	movs	r2, #1
   183d6:	str	r2, [r3, #0]
   183d8:	pop	{r4, r5, r6}
   183da:	bx	lr
   183dc:	ldr	r0, [r4, #0]
   183de:	lsls	r5, r0, #31
   183e0:	bmi.n	183d8 <rb_insert_color@@Base+0xe>
   183e2:	ldr	r5, [r0, #4]
   183e4:	cmp	r4, r5
   183e6:	beq.n	18432 <rb_insert_color@@Base+0x68>
   183e8:	cbz	r5, 18404 <rb_insert_color@@Base+0x3a>
   183ea:	ldr	r1, [r5, #0]
   183ec:	lsls	r1, r1, #31
   183ee:	bmi.n	18404 <rb_insert_color@@Base+0x3a>
   183f0:	orr.w	r3, r0, #1
   183f4:	str	r3, [r5, #0]
   183f6:	str	r3, [r4, #0]
   183f8:	mov	r3, r0
   183fa:	ldr	r4, [r0, #0]
   183fc:	bic.w	r4, r4, #3
   18400:	str	r4, [r0, #0]
   18402:	b.n	183d2 <rb_insert_color@@Base+0x8>
   18404:	ldr	r5, [r4, #4]
   18406:	cmp	r5, r3
   18408:	bne.n	1841e <rb_insert_color@@Base+0x54>
   1840a:	ldr	r1, [r3, #8]
   1840c:	str	r1, [r4, #4]
   1840e:	str	r4, [r3, #8]
   18410:	cbz	r1, 18418 <rb_insert_color@@Base+0x4e>
   18412:	orr.w	r5, r4, #1
   18416:	str	r5, [r1, #0]
   18418:	str	r3, [r4, #0]
   1841a:	mov	r4, r3
   1841c:	ldr	r5, [r3, #4]
   1841e:	str	r5, [r0, #8]
   18420:	str	r0, [r4, #4]
   18422:	cbz	r5, 1842a <rb_insert_color@@Base+0x60>
   18424:	orr.w	r3, r0, #1
   18428:	str	r3, [r5, #0]
   1842a:	movs	r3, #0
   1842c:	mov	r1, r4
   1842e:	pop	{r4, r5, r6}
   18430:	b.n	1827c <path_cat3_out@@Base+0x9c>
   18432:	ldr	r1, [r0, #8]
   18434:	cbz	r1, 18444 <rb_insert_color@@Base+0x7a>
   18436:	ldr	r6, [r1, #0]
   18438:	lsls	r6, r6, #31
   1843a:	bmi.n	18444 <rb_insert_color@@Base+0x7a>
   1843c:	orr.w	r3, r0, #1
   18440:	str	r3, [r1, #0]
   18442:	b.n	183f6 <rb_insert_color@@Base+0x2c>
   18444:	ldr	r4, [r5, #8]
   18446:	cmp	r4, r3
   18448:	bne.n	1845e <rb_insert_color@@Base+0x94>
   1844a:	ldr	r1, [r3, #4]
   1844c:	str	r1, [r5, #8]
   1844e:	str	r5, [r3, #4]
   18450:	cbz	r1, 18458 <rb_insert_color@@Base+0x8e>
   18452:	orr.w	r4, r5, #1
   18456:	str	r4, [r1, #0]
   18458:	str	r3, [r5, #0]
   1845a:	mov	r5, r3
   1845c:	ldr	r4, [r3, #8]
   1845e:	str	r4, [r0, #4]
   18460:	str	r0, [r5, #8]
   18462:	cbz	r4, 1846a <rb_insert_color@@Base+0xa0>
   18464:	orr.w	r3, r0, #1
   18468:	str	r3, [r4, #0]
   1846a:	movs	r3, #0
   1846c:	mov	r1, r5
   1846e:	b.n	1842e <rb_insert_color@@Base+0x64>

00018470 <rb_erase@@Base>:
   18470:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18474:	mov	r2, r1
   18476:	mov	r4, r0
   18478:	ldrd	r1, r0, [r0, #4]
   1847c:	cbnz	r0, 184a8 <rb_erase@@Base+0x38>
   1847e:	ldr	r5, [r4, #0]
   18480:	bic.w	r3, r5, #3
   18484:	mov	r0, r3
   18486:	cbz	r3, 1849a <rb_erase@@Base+0x2a>
   18488:	ldr	r6, [r3, #8]
   1848a:	cmp	r4, r6
   1848c:	ite	eq
   1848e:	streq	r1, [r3, #8]
   18490:	strne	r1, [r3, #4]
   18492:	cbz	r1, 1849e <rb_erase@@Base+0x2e>
   18494:	str	r5, [r1, #0]
   18496:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1849a:	str	r1, [r2, #0]
   1849c:	b.n	18492 <rb_erase@@Base+0x22>
   1849e:	lsls	r5, r5, #31
   184a0:	bpl.n	18496 <rb_erase@@Base+0x26>
   184a2:	cmp	r3, #0
   184a4:	bne.n	18524 <rb_erase@@Base+0xb4>
   184a6:	b.n	18496 <rb_erase@@Base+0x26>
   184a8:	cbnz	r1, 184c4 <rb_erase@@Base+0x54>
   184aa:	ldr	r3, [r4, #0]
   184ac:	str	r3, [r0, #0]
   184ae:	bics.w	r3, r3, #3
   184b2:	beq.n	184c0 <rb_erase@@Base+0x50>
   184b4:	ldr	r2, [r3, #8]
   184b6:	cmp	r4, r2
   184b8:	ite	eq
   184ba:	streq	r0, [r3, #8]
   184bc:	strne	r0, [r3, #4]
   184be:	b.n	18496 <rb_erase@@Base+0x26>
   184c0:	str	r0, [r2, #0]
   184c2:	b.n	18496 <rb_erase@@Base+0x26>
   184c4:	ldr	r3, [r1, #8]
   184c6:	cbnz	r3, 184fa <rb_erase@@Base+0x8a>
   184c8:	ldr	r6, [r1, #4]
   184ca:	mov	r3, r1
   184cc:	mov	r0, r1
   184ce:	ldr	r5, [r4, #8]
   184d0:	str	r5, [r3, #8]
   184d2:	ldr	r1, [r5, #0]
   184d4:	and.w	r1, r1, #1
   184d8:	orrs	r1, r3
   184da:	str	r1, [r5, #0]
   184dc:	ldr	r1, [r4, #0]
   184de:	bics.w	r5, r1, #3
   184e2:	beq.n	18518 <rb_erase@@Base+0xa8>
   184e4:	ldr	r7, [r5, #8]
   184e6:	cmp	r4, r7
   184e8:	ite	eq
   184ea:	streq	r3, [r5, #8]
   184ec:	strne	r3, [r5, #4]
   184ee:	cbz	r6, 1851c <rb_erase@@Base+0xac>
   184f0:	orr.w	r0, r0, #1
   184f4:	str	r1, [r3, #0]
   184f6:	str	r0, [r6, #0]
   184f8:	b.n	18496 <rb_erase@@Base+0x26>
   184fa:	mov	r0, r1
   184fc:	ldr	r5, [r3, #8]
   184fe:	cbnz	r5, 18512 <rb_erase@@Base+0xa2>
   18500:	ldr	r6, [r3, #4]
   18502:	str	r6, [r0, #8]
   18504:	str	r1, [r3, #4]
   18506:	ldr	r5, [r1, #0]
   18508:	and.w	r5, r5, #1
   1850c:	orrs	r5, r3
   1850e:	str	r5, [r1, #0]
   18510:	b.n	184ce <rb_erase@@Base+0x5e>
   18512:	mov	r0, r3
   18514:	mov	r3, r5
   18516:	b.n	184fc <rb_erase@@Base+0x8c>
   18518:	str	r3, [r2, #0]
   1851a:	b.n	184ee <rb_erase@@Base+0x7e>
   1851c:	ldr	r4, [r3, #0]
   1851e:	str	r1, [r3, #0]
   18520:	lsls	r4, r4, #31
   18522:	bpl.n	18496 <rb_erase@@Base+0x26>
   18524:	movs	r1, #0
   18526:	ldr	r4, [r0, #4]
   18528:	cmp	r4, r1
   1852a:	beq.n	185a2 <rb_erase@@Base+0x132>
   1852c:	ldr	r3, [r4, #0]
   1852e:	ands.w	r3, r3, #1
   18532:	bne.n	18548 <rb_erase@@Base+0xd8>
   18534:	ldr	r5, [r4, #8]
   18536:	orr.w	r1, r0, #1
   1853a:	str	r5, [r0, #4]
   1853c:	str	r0, [r4, #8]
   1853e:	str	r1, [r5, #0]
   18540:	mov	r1, r4
   18542:	bl	1827c <path_cat3_out@@Base+0x9c>
   18546:	mov	r4, r5
   18548:	ldr	r3, [r4, #4]
   1854a:	cbz	r3, 18552 <rb_erase@@Base+0xe2>
   1854c:	ldr	r1, [r3, #0]
   1854e:	lsls	r1, r1, #31
   18550:	bpl.n	1859c <rb_erase@@Base+0x12c>
   18552:	ldr	r1, [r4, #8]
   18554:	cbz	r1, 1855c <rb_erase@@Base+0xec>
   18556:	ldr	r3, [r1, #0]
   18558:	lsls	r7, r3, #31
   1855a:	bpl.n	1856c <rb_erase@@Base+0xfc>
   1855c:	str	r0, [r4, #0]
   1855e:	ldr	r3, [r0, #0]
   18560:	lsls	r1, r3, #31
   18562:	bmi.n	185d6 <rb_erase@@Base+0x166>
   18564:	orr.w	r3, r3, #1
   18568:	str	r3, [r0, #0]
   1856a:	b.n	18496 <rb_erase@@Base+0x26>
   1856c:	ldr	r3, [r1, #4]
   1856e:	str	r3, [r4, #8]
   18570:	str	r4, [r1, #4]
   18572:	str	r1, [r0, #4]
   18574:	cbz	r3, 1857c <rb_erase@@Base+0x10c>
   18576:	orr.w	r5, r4, #1
   1857a:	str	r5, [r3, #0]
   1857c:	ldr	r5, [r1, #8]
   1857e:	orr.w	r3, r1, #1
   18582:	str	r5, [r0, #4]
   18584:	str	r0, [r1, #8]
   18586:	str	r3, [r4, #0]
   18588:	cbz	r5, 18594 <rb_erase@@Base+0x124>
   1858a:	ldr	r3, [r5, #0]
   1858c:	and.w	r3, r3, #1
   18590:	orrs	r3, r0
   18592:	str	r3, [r5, #0]
   18594:	movs	r3, #1
   18596:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1859a:	b.n	1827c <path_cat3_out@@Base+0x9c>
   1859c:	mov	r1, r4
   1859e:	mov	r4, r3
   185a0:	b.n	1857c <rb_erase@@Base+0x10c>
   185a2:	ldr	r1, [r0, #8]
   185a4:	ldr	r3, [r1, #0]
   185a6:	ands.w	r3, r3, #1
   185aa:	bne.n	185be <rb_erase@@Base+0x14e>
   185ac:	ldr	r4, [r1, #4]
   185ae:	orr.w	r5, r0, #1
   185b2:	str	r4, [r0, #8]
   185b4:	str	r0, [r1, #4]
   185b6:	str	r5, [r4, #0]
   185b8:	bl	1827c <path_cat3_out@@Base+0x9c>
   185bc:	mov	r1, r4
   185be:	ldr	r3, [r1, #8]
   185c0:	cbz	r3, 185c8 <rb_erase@@Base+0x158>
   185c2:	ldr	r4, [r3, #0]
   185c4:	lsls	r6, r4, #31
   185c6:	bpl.n	18612 <rb_erase@@Base+0x1a2>
   185c8:	ldr	r4, [r1, #4]
   185ca:	cbz	r4, 185d2 <rb_erase@@Base+0x162>
   185cc:	ldr	r3, [r4, #0]
   185ce:	lsls	r5, r3, #31
   185d0:	bpl.n	185e4 <rb_erase@@Base+0x174>
   185d2:	str	r0, [r1, #0]
   185d4:	b.n	1855e <rb_erase@@Base+0xee>
   185d6:	bics.w	r3, r3, #3
   185da:	beq.w	18496 <rb_erase@@Base+0x26>
   185de:	mov	r1, r0
   185e0:	mov	r0, r3
   185e2:	b.n	18526 <rb_erase@@Base+0xb6>
   185e4:	ldr	r3, [r4, #8]
   185e6:	str	r3, [r1, #4]
   185e8:	str	r1, [r4, #8]
   185ea:	str	r4, [r0, #8]
   185ec:	cbz	r3, 185f4 <rb_erase@@Base+0x184>
   185ee:	orr.w	r5, r1, #1
   185f2:	str	r5, [r3, #0]
   185f4:	ldr	r5, [r4, #4]
   185f6:	orr.w	r3, r4, #1
   185fa:	str	r5, [r0, #8]
   185fc:	str	r0, [r4, #4]
   185fe:	str	r3, [r1, #0]
   18600:	cbz	r5, 1860c <rb_erase@@Base+0x19c>
   18602:	ldr	r3, [r5, #0]
   18604:	and.w	r3, r3, #1
   18608:	orrs	r3, r0
   1860a:	str	r3, [r5, #0]
   1860c:	movs	r3, #1
   1860e:	mov	r1, r4
   18610:	b.n	18596 <rb_erase@@Base+0x126>
   18612:	mov	r4, r1
   18614:	mov	r1, r3
   18616:	b.n	185f4 <rb_erase@@Base+0x184>

00018618 <__rb_insert_augmented@@Base>:
   18618:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1861c:	mov	r6, r0
   1861e:	ldr	r4, [r0, #0]
   18620:	mov	r9, r1
   18622:	mov	r8, r2
   18624:	cbnz	r4, 1862e <__rb_insert_augmented@@Base+0x16>
   18626:	movs	r3, #1
   18628:	str	r3, [r6, #0]
   1862a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1862e:	ldr	r5, [r4, #0]
   18630:	lsls	r0, r5, #31
   18632:	bmi.n	1862a <__rb_insert_augmented@@Base+0x12>
   18634:	ldr	r7, [r5, #4]
   18636:	cmp	r4, r7
   18638:	beq.n	18698 <__rb_insert_augmented@@Base+0x80>
   1863a:	cbz	r7, 18656 <__rb_insert_augmented@@Base+0x3e>
   1863c:	ldr	r3, [r7, #0]
   1863e:	lsls	r1, r3, #31
   18640:	bmi.n	18656 <__rb_insert_augmented@@Base+0x3e>
   18642:	orr.w	r3, r5, #1
   18646:	str	r3, [r7, #0]
   18648:	str	r3, [r4, #0]
   1864a:	ldr	r4, [r5, #0]
   1864c:	mov	r6, r5
   1864e:	bic.w	r4, r4, #3
   18652:	str	r4, [r5, #0]
   18654:	b.n	18624 <__rb_insert_augmented@@Base+0xc>
   18656:	ldr	r3, [r4, #4]
   18658:	cmp	r3, r6
   1865a:	bne.n	18676 <__rb_insert_augmented@@Base+0x5e>
   1865c:	ldr	r3, [r6, #8]
   1865e:	str	r3, [r4, #4]
   18660:	str	r4, [r6, #8]
   18662:	cbz	r3, 1866a <__rb_insert_augmented@@Base+0x52>
   18664:	orr.w	r2, r4, #1
   18668:	str	r2, [r3, #0]
   1866a:	mov	r0, r4
   1866c:	str	r6, [r4, #0]
   1866e:	mov	r1, r6
   18670:	mov	r4, r6
   18672:	blx	r8
   18674:	ldr	r3, [r6, #4]
   18676:	str	r3, [r5, #8]
   18678:	str	r5, [r4, #4]
   1867a:	cbz	r3, 18682 <__rb_insert_augmented@@Base+0x6a>
   1867c:	orr.w	r2, r5, #1
   18680:	str	r2, [r3, #0]
   18682:	movs	r3, #0
   18684:	mov	r2, r9
   18686:	mov	r1, r4
   18688:	mov	r0, r5
   1868a:	bl	1827c <path_cat3_out@@Base+0x9c>
   1868e:	mov	r0, r5
   18690:	mov	r3, r8
   18692:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18696:	bx	r3
   18698:	ldr	r3, [r5, #8]
   1869a:	cbz	r3, 186ac <__rb_insert_augmented@@Base+0x94>
   1869c:	ldr	r2, [r3, #0]
   1869e:	lsls	r2, r2, #31
   186a0:	bmi.n	186ac <__rb_insert_augmented@@Base+0x94>
   186a2:	orr.w	r2, r5, #1
   186a6:	str	r2, [r3, #0]
   186a8:	str	r2, [r4, #0]
   186aa:	b.n	1864a <__rb_insert_augmented@@Base+0x32>
   186ac:	ldr	r3, [r7, #8]
   186ae:	cmp	r3, r6
   186b0:	bne.n	186cc <__rb_insert_augmented@@Base+0xb4>
   186b2:	ldr	r3, [r6, #4]
   186b4:	str	r3, [r7, #8]
   186b6:	str	r7, [r6, #4]
   186b8:	cbz	r3, 186c0 <__rb_insert_augmented@@Base+0xa8>
   186ba:	orr.w	r2, r7, #1
   186be:	str	r2, [r3, #0]
   186c0:	mov	r0, r7
   186c2:	str	r6, [r7, #0]
   186c4:	mov	r1, r6
   186c6:	mov	r7, r6
   186c8:	blx	r8
   186ca:	ldr	r3, [r6, #8]
   186cc:	str	r3, [r5, #4]
   186ce:	str	r5, [r7, #8]
   186d0:	cbz	r3, 186d8 <__rb_insert_augmented@@Base+0xc0>
   186d2:	orr.w	r2, r5, #1
   186d6:	str	r2, [r3, #0]
   186d8:	movs	r3, #0
   186da:	mov	r2, r9
   186dc:	mov	r1, r7
   186de:	mov	r0, r5
   186e0:	bl	1827c <path_cat3_out@@Base+0x9c>
   186e4:	b.n	1868e <__rb_insert_augmented@@Base+0x76>

000186e6 <rb_first@@Base>:
   186e6:	ldr	r0, [r0, #0]
   186e8:	cbz	r0, 186f4 <rb_first@@Base+0xe>
   186ea:	mov	r3, r0
   186ec:	ldr	r0, [r0, #8]
   186ee:	cmp	r0, #0
   186f0:	bne.n	186ea <rb_first@@Base+0x4>
   186f2:	mov	r0, r3
   186f4:	bx	lr

000186f6 <rb_last@@Base>:
   186f6:	ldr	r0, [r0, #0]
   186f8:	cbz	r0, 18704 <rb_last@@Base+0xe>
   186fa:	mov	r3, r0
   186fc:	ldr	r0, [r0, #4]
   186fe:	cmp	r0, #0
   18700:	bne.n	186fa <rb_last@@Base+0x4>
   18702:	mov	r0, r3
   18704:	bx	lr

00018706 <rb_next@@Base>:
   18706:	ldr	r3, [r0, #0]
   18708:	cmp	r0, r3
   1870a:	beq.n	1872e <rb_next@@Base+0x28>
   1870c:	ldr	r3, [r0, #4]
   1870e:	cbz	r3, 1871a <rb_next@@Base+0x14>
   18710:	mov	r0, r3
   18712:	ldr	r3, [r3, #8]
   18714:	cmp	r3, #0
   18716:	bne.n	18710 <rb_next@@Base+0xa>
   18718:	bx	lr
   1871a:	ldr	r3, [r0, #0]
   1871c:	mov	r2, r0
   1871e:	bic.w	r3, r3, #3
   18722:	mov	r0, r3
   18724:	cbz	r3, 18730 <rb_next@@Base+0x2a>
   18726:	ldr	r3, [r3, #4]
   18728:	cmp	r3, r2
   1872a:	beq.n	1871a <rb_next@@Base+0x14>
   1872c:	bx	lr
   1872e:	movs	r0, #0
   18730:	bx	lr

00018732 <rb_prev@@Base>:
   18732:	ldr	r3, [r0, #0]
   18734:	cmp	r0, r3
   18736:	beq.n	1875a <rb_prev@@Base+0x28>
   18738:	ldr	r3, [r0, #8]
   1873a:	cbz	r3, 18746 <rb_prev@@Base+0x14>
   1873c:	mov	r0, r3
   1873e:	ldr	r3, [r3, #4]
   18740:	cmp	r3, #0
   18742:	bne.n	1873c <rb_prev@@Base+0xa>
   18744:	bx	lr
   18746:	ldr	r3, [r0, #0]
   18748:	mov	r2, r0
   1874a:	bic.w	r3, r3, #3
   1874e:	mov	r0, r3
   18750:	cbz	r3, 1875c <rb_prev@@Base+0x2a>
   18752:	ldr	r3, [r3, #8]
   18754:	cmp	r3, r2
   18756:	beq.n	18746 <rb_prev@@Base+0x14>
   18758:	bx	lr
   1875a:	movs	r0, #0
   1875c:	bx	lr

0001875e <rb_replace_node@@Base>:
   1875e:	mov	r3, r1
   18760:	ldr	r1, [r0, #0]
   18762:	bics.w	r1, r1, #3
   18766:	beq.n	18796 <rb_replace_node@@Base+0x38>
   18768:	ldr	r2, [r1, #8]
   1876a:	cmp	r0, r2
   1876c:	ite	eq
   1876e:	streq	r3, [r1, #8]
   18770:	strne	r3, [r1, #4]
   18772:	ldr	r1, [r0, #8]
   18774:	cbz	r1, 18780 <rb_replace_node@@Base+0x22>
   18776:	ldr	r2, [r1, #0]
   18778:	and.w	r2, r2, #1
   1877c:	orrs	r2, r3
   1877e:	str	r2, [r1, #0]
   18780:	ldr	r1, [r0, #4]
   18782:	cbz	r1, 1878e <rb_replace_node@@Base+0x30>
   18784:	ldr	r2, [r1, #0]
   18786:	and.w	r2, r2, #1
   1878a:	orrs	r2, r3
   1878c:	str	r2, [r1, #0]
   1878e:	ldmia	r0, {r0, r1, r2}
   18790:	stmia.w	r3, {r0, r1, r2}
   18794:	bx	lr
   18796:	str	r3, [r2, #0]
   18798:	b.n	18772 <rb_replace_node@@Base+0x14>

0001879a <rb_next_postorder@@Base>:
   1879a:	mov	r2, r0
   1879c:	cbz	r0, 187c0 <rb_next_postorder@@Base+0x26>
   1879e:	ldr	r3, [r0, #0]
   187a0:	bics.w	r0, r3, #3
   187a4:	beq.n	187c0 <rb_next_postorder@@Base+0x26>
   187a6:	ldr	r3, [r0, #8]
   187a8:	cmp	r3, r2
   187aa:	bne.n	187c0 <rb_next_postorder@@Base+0x26>
   187ac:	ldr	r3, [r0, #4]
   187ae:	cbz	r3, 187c0 <rb_next_postorder@@Base+0x26>
   187b0:	mov	r0, r3
   187b2:	ldr	r3, [r3, #8]
   187b4:	cmp	r3, #0
   187b6:	bne.n	187b0 <rb_next_postorder@@Base+0x16>
   187b8:	ldr	r3, [r0, #4]
   187ba:	cmp	r3, #0
   187bc:	bne.n	187b0 <rb_next_postorder@@Base+0x16>
   187be:	bx	lr
   187c0:	bx	lr

000187c2 <rb_first_postorder@@Base>:
   187c2:	ldr	r0, [r0, #0]
   187c4:	cbz	r0, 187d6 <rb_first_postorder@@Base+0x14>
   187c6:	mov	r3, r0
   187c8:	ldr	r0, [r0, #8]
   187ca:	cmp	r0, #0
   187cc:	bne.n	187c6 <rb_first_postorder@@Base+0x4>
   187ce:	ldr	r0, [r3, #4]
   187d0:	cmp	r0, #0
   187d2:	bne.n	187c6 <rb_first_postorder@@Base+0x4>
   187d4:	mov	r0, r3
   187d6:	bx	lr
   187d8:	push	{r4, r5, lr}
   187da:	ldrd	r4, r5, [r0, #24]
   187de:	ldrd	r0, r1, [r1, #24]
   187e2:	cmp	r1, r5
   187e4:	it	eq
   187e6:	cmpeq	r0, r4
   187e8:	bcc.n	187fe <rb_first_postorder@@Base+0x3c>
   187ea:	cmp	r5, r1
   187ec:	it	eq
   187ee:	cmpeq	r4, r0
   187f0:	ite	cc
   187f2:	movcc.w	r0, #4294967295	; 0xffffffff
   187f6:	movcs	r0, #0
   187f8:	cbz	r2, 187fc <rb_first_postorder@@Base+0x3a>
   187fa:	negs	r0, r0
   187fc:	pop	{r4, r5, pc}
   187fe:	movs	r0, #1
   18800:	b.n	187f8 <rb_first_postorder@@Base+0x36>
   18802:	push	{r4, r5, lr}
   18804:	ldrd	r4, r5, [r0, #72]	; 0x48
   18808:	ldrd	r0, r1, [r1, #72]	; 0x48
   1880c:	cmp	r1, r5
   1880e:	it	eq
   18810:	cmpeq	r0, r4
   18812:	bcc.n	18828 <rb_first_postorder@@Base+0x66>
   18814:	cmp	r5, r1
   18816:	it	eq
   18818:	cmpeq	r4, r0
   1881a:	ite	cc
   1881c:	movcc.w	r0, #4294967295	; 0xffffffff
   18820:	movcs	r0, #0
   18822:	cbz	r2, 18826 <rb_first_postorder@@Base+0x64>
   18824:	negs	r0, r0
   18826:	pop	{r4, r5, pc}
   18828:	movs	r0, #1
   1882a:	b.n	18822 <rb_first_postorder@@Base+0x60>
   1882c:	push	{r4, r5, lr}
   1882e:	ldrd	r4, r5, [r0, #80]	; 0x50
   18832:	ldrd	r0, r1, [r1, #80]	; 0x50
   18836:	cmp	r1, r5
   18838:	it	eq
   1883a:	cmpeq	r0, r4
   1883c:	bcc.n	18852 <rb_first_postorder@@Base+0x90>
   1883e:	cmp	r5, r1
   18840:	it	eq
   18842:	cmpeq	r4, r0
   18844:	ite	cc
   18846:	movcc.w	r0, #4294967295	; 0xffffffff
   1884a:	movcs	r0, #0
   1884c:	cbz	r2, 18850 <rb_first_postorder@@Base+0x8e>
   1884e:	negs	r0, r0
   18850:	pop	{r4, r5, pc}
   18852:	movs	r0, #1
   18854:	b.n	1884c <rb_first_postorder@@Base+0x8a>
   18856:	ldrd	r0, r1, [r0, #24]
   1885a:	cmp	r1, r3
   1885c:	itte	eq
   1885e:	cmpeq	r0, r2
   18860:	moveq	r0, #1
   18862:	movne	r0, #0
   18864:	bx	lr
   18866:	ldrd	r2, r3, [r0, #32]
   1886a:	orrs	r3, r2
   1886c:	ite	ne
   1886e:	movne	r0, #1
   18870:	moveq	r0, #0
   18872:	bx	lr
   18874:	ldr	r0, [r0, #40]	; 0x28
   18876:	ands	r0, r2
   18878:	bx	lr
   1887a:	ldrd	r0, r1, [r0, #72]	; 0x48
   1887e:	cmp	r1, r3
   18880:	it	eq
   18882:	cmpeq	r0, r2
   18884:	ite	cs
   18886:	movcs	r0, #1
   18888:	movcc	r0, #0
   1888a:	bx	lr
   1888c:	ldrd	r0, r1, [r0, #72]	; 0x48
   18890:	cmp	r3, r1
   18892:	it	eq
   18894:	cmpeq	r2, r0
   18896:	ite	cs
   18898:	movcs	r0, #1
   1889a:	movcc	r0, #0
   1889c:	bx	lr
   1889e:	ldrd	r0, r1, [r0, #72]	; 0x48
   188a2:	cmp	r1, r3
   188a4:	itte	eq
   188a6:	cmpeq	r0, r2
   188a8:	moveq	r0, #1
   188aa:	movne	r0, #0
   188ac:	bx	lr
   188ae:	ldrd	r0, r1, [r0, #80]	; 0x50
   188b2:	cmp	r1, r3
   188b4:	it	eq
   188b6:	cmpeq	r0, r2
   188b8:	ite	cs
   188ba:	movcs	r0, #1
   188bc:	movcc	r0, #0
   188be:	bx	lr
   188c0:	ldrd	r0, r1, [r0, #80]	; 0x50
   188c4:	cmp	r3, r1
   188c6:	it	eq
   188c8:	cmpeq	r2, r0
   188ca:	ite	cs
   188cc:	movcs	r0, #1
   188ce:	movcc	r0, #0
   188d0:	bx	lr
   188d2:	ldrd	r0, r1, [r0, #80]	; 0x50
   188d6:	cmp	r1, r3
   188d8:	itte	eq
   188da:	cmpeq	r0, r2
   188dc:	moveq	r0, #1
   188de:	movne	r0, #0
   188e0:	bx	lr
   188e2:	ldrd	r0, r1, [r0, #64]	; 0x40
   188e6:	cmp	r1, r3
   188e8:	itte	eq
   188ea:	cmpeq	r0, r2
   188ec:	moveq	r0, #1
   188ee:	movne	r0, #0
   188f0:	bx	lr
   188f2:	ldr.w	r0, [r0, #152]	; 0x98
   188f6:	bx	lr
   188f8:	ldr	r2, [pc, #60]	; (18938 <rb_first_postorder@@Base+0x176>)
   188fa:	movs	r1, #16
   188fc:	ldr	r3, [pc, #60]	; (1893c <rb_first_postorder@@Base+0x17a>)
   188fe:	push	{r4, lr}
   18900:	add	r2, pc
   18902:	sub	sp, #72	; 0x48
   18904:	add	r4, sp, #4
   18906:	ldr	r3, [r2, r3]
   18908:	mov	r0, r4
   1890a:	ldr	r3, [r3, #0]
   1890c:	str	r3, [sp, #68]	; 0x44
   1890e:	mov.w	r3, #0
   18912:	blx	8e98 <backtrace@plt>
   18916:	movs	r2, #2
   18918:	mov	r1, r0
   1891a:	mov	r0, r4
   1891c:	blx	9214 <backtrace_symbols_fd@plt>
   18920:	ldr	r2, [pc, #28]	; (18940 <rb_first_postorder@@Base+0x17e>)
   18922:	ldr	r3, [pc, #24]	; (1893c <rb_first_postorder@@Base+0x17a>)
   18924:	add	r2, pc
   18926:	ldr	r3, [r2, r3]
   18928:	ldr	r2, [r3, #0]
   1892a:	ldr	r3, [sp, #68]	; 0x44
   1892c:	eors	r2, r3
   1892e:	beq.n	18934 <rb_first_postorder@@Base+0x172>
   18930:	blx	8c90 <__stack_chk_fail@plt>
   18934:	add	sp, #72	; 0x48
   18936:	pop	{r4, pc}
   18938:	movs	r4, #24
   1893a:	movs	r5, r0
   1893c:	lsls	r0, r1, #10
   1893e:	movs	r0, r0
   18940:	movs	r3, #244	; 0xf4
   18942:	movs	r5, r0
   18944:	push	{r4, lr}
   18946:	mov	r4, r0
   18948:	ldr.w	r0, [r0, #144]	; 0x90
   1894c:	blx	8b84 <free@plt+0x4>
   18950:	ldr.w	r0, [r4, #140]	; 0x8c
   18954:	blx	8b84 <free@plt+0x4>
   18958:	ldr.w	r0, [r4, #148]	; 0x94
   1895c:	blx	8b84 <free@plt+0x4>
   18960:	mov	r0, r4
   18962:	ldmia.w	sp!, {r4, lr}
   18966:	b.w	8b80 <free@plt>
   1896a:	mov	r1, r2
   1896c:	adds	r0, #108	; 0x6c
   1896e:	push	{r3, lr}
   18970:	blx	8cd0 <uuid_compare@plt>
   18974:	clz	r0, r0
   18978:	lsrs	r0, r0, #5
   1897a:	pop	{r3, pc}
   1897c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18980:	mov	r6, r0
   18982:	mov	r0, r2
   18984:	ldr	r2, [pc, #188]	; (18a44 <rb_first_postorder@@Base+0x282>)
   18986:	mov	r1, r3
   18988:	ldr	r3, [pc, #188]	; (18a48 <rb_first_postorder@@Base+0x286>)
   1898a:	add	r2, pc
   1898c:	ldr.w	r7, [r6, #148]	; 0x94
   18990:	ldr.w	r8, [pc, #184]	; 18a4c <rb_first_postorder@@Base+0x28a>
   18994:	sub	sp, #20
   18996:	ldr	r3, [r2, r3]
   18998:	add	r8, pc
   1899a:	ldr	r3, [r3, #0]
   1899c:	str	r3, [sp, #12]
   1899e:	mov.w	r3, #0
   189a2:	cmp	r7, #0
   189a4:	beq.n	18a26 <rb_first_postorder@@Base+0x264>
   189a6:	ldrd	r2, r3, [r6, #64]	; 0x40
   189aa:	cmp	r3, r1
   189ac:	it	eq
   189ae:	cmpeq	r2, r0
   189b0:	beq.n	18a26 <rb_first_postorder@@Base+0x264>
   189b2:	ldr	r2, [pc, #156]	; (18a50 <rb_first_postorder@@Base+0x28e>)
   189b4:	mov	r3, sp
   189b6:	mov	fp, sp
   189b8:	add	r2, pc
   189ba:	ldr	r1, [r2, #4]
   189bc:	ldr	r0, [r2, #0]
   189be:	ldrh	r2, [r2, #8]
   189c0:	stmia	r3!, {r0, r1}
   189c2:	mov	r0, fp
   189c4:	strh	r2, [r3, #0]
   189c6:	blx	8f1c <strlen@plt>
   189ca:	mov	r5, r0
   189cc:	mov	r0, r7
   189ce:	blx	8f1c <strlen@plt>
   189d2:	add.w	r9, r5, r0
   189d6:	mov	sl, r0
   189d8:	add.w	r0, r9, #2
   189dc:	blx	8e40 <malloc@plt+0x4>
   189e0:	mov	r4, r0
   189e2:	cbnz	r0, 189fa <rb_first_postorder@@Base+0x238>
   189e4:	ldr	r3, [pc, #108]	; (18a54 <rb_first_postorder@@Base+0x292>)
   189e6:	ldr	r0, [pc, #112]	; (18a58 <rb_first_postorder@@Base+0x296>)
   189e8:	ldr.w	r3, [r8, r3]
   189ec:	add	r0, pc
   189ee:	ldr	r1, [r3, #0]
   189f0:	blx	91a8 <fputs@plt+0x4>
   189f4:	movs	r0, #1
   189f6:	blx	8f10 <exit@plt>
   189fa:	adds	r0, r5, #1
   189fc:	add	r9, r4
   189fe:	mov	r2, sl
   18a00:	mov	r1, r7
   18a02:	add	r0, r4
   18a04:	blx	8bdc <memcpy@plt+0x4>
   18a08:	movs	r3, #0
   18a0a:	mov	r2, r5
   18a0c:	strb.w	r3, [r9, #1]
   18a10:	mov	r1, fp
   18a12:	movs	r3, #47	; 0x2f
   18a14:	mov	r0, r4
   18a16:	strb	r3, [r4, r5]
   18a18:	blx	8bdc <memcpy@plt+0x4>
   18a1c:	mov	r0, r7
   18a1e:	blx	8b84 <free@plt+0x4>
   18a22:	str.w	r4, [r6, #148]	; 0x94
   18a26:	ldr	r2, [pc, #52]	; (18a5c <rb_first_postorder@@Base+0x29a>)
   18a28:	ldr	r3, [pc, #28]	; (18a48 <rb_first_postorder@@Base+0x286>)
   18a2a:	add	r2, pc
   18a2c:	ldr	r3, [r2, r3]
   18a2e:	ldr	r2, [r3, #0]
   18a30:	ldr	r3, [sp, #12]
   18a32:	eors	r2, r3
   18a34:	beq.n	18a3a <rb_first_postorder@@Base+0x278>
   18a36:	blx	8c90 <__stack_chk_fail@plt>
   18a3a:	movs	r0, #1
   18a3c:	add	sp, #20
   18a3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a42:	nop
   18a44:	movs	r3, #142	; 0x8e
   18a46:	movs	r5, r0
   18a48:	lsls	r0, r1, #10
   18a4a:	movs	r0, r0
   18a4c:	movs	r3, #128	; 0x80
   18a4e:	movs	r5, r0
   18a50:	strh	r3, [r1, #52]	; 0x34
   18a52:	movs	r2, r0
   18a54:	lsls	r4, r3, #10
   18a56:	movs	r0, r0
   18a58:	strh	r5, [r7, #48]	; 0x30
   18a5a:	movs	r2, r0
   18a5c:	movs	r2, #238	; 0xee
   18a5e:	movs	r5, r0
   18a60:	push	{r4, lr}
   18a62:	mov	r4, r2
   18a64:	ldr.w	r1, [r1, #148]	; 0x94
   18a68:	ldr.w	r0, [r0, #148]	; 0x94
   18a6c:	blx	8b04 <strcmp@plt>
   18a70:	cmp	r0, #0
   18a72:	bgt.n	18a82 <rb_first_postorder@@Base+0x2c0>
   18a74:	ite	ne
   18a76:	movne.w	r0, #4294967295	; 0xffffffff
   18a7a:	moveq	r0, #0
   18a7c:	cbz	r4, 18a80 <rb_first_postorder@@Base+0x2be>
   18a7e:	negs	r0, r0
   18a80:	pop	{r4, pc}
   18a82:	movs	r0, #1
   18a84:	b.n	18a7c <rb_first_postorder@@Base+0x2ba>
   18a86:	push	{r4, lr}
   18a88:	sub	sp, #168	; 0xa8
   18a8a:	ldr	r4, [pc, #76]	; (18ad8 <rb_first_postorder@@Base+0x316>)
   18a8c:	ldr	r1, [pc, #76]	; (18adc <rb_first_postorder@@Base+0x31a>)
   18a8e:	add	r4, pc
   18a90:	ldr	r1, [r4, r1]
   18a92:	mov	r4, sp
   18a94:	ldr	r1, [r1, #0]
   18a96:	str	r1, [sp, #164]	; 0xa4
   18a98:	mov.w	r1, #0
   18a9c:	strd	r2, r3, [sp, #24]
   18aa0:	mov	r3, r0
   18aa2:	cbnz	r3, 18ab8 <rb_first_postorder@@Base+0x2f6>
   18aa4:	ldr	r1, [pc, #56]	; (18ae0 <rb_first_postorder@@Base+0x31e>)
   18aa6:	ldr	r2, [pc, #52]	; (18adc <rb_first_postorder@@Base+0x31a>)
   18aa8:	add	r1, pc
   18aaa:	ldr	r2, [r1, r2]
   18aac:	ldr	r1, [r2, #0]
   18aae:	ldr	r2, [sp, #164]	; 0xa4
   18ab0:	eors	r1, r2
   18ab2:	beq.n	18ad0 <rb_first_postorder@@Base+0x30e>
   18ab4:	blx	8c90 <__stack_chk_fail@plt>
   18ab8:	movs	r2, #0
   18aba:	mov	r1, r3
   18abc:	mov	r0, r4
   18abe:	bl	187d8 <rb_first_postorder@@Base+0x16>
   18ac2:	cmp	r0, #0
   18ac4:	bge.n	18aca <rb_first_postorder@@Base+0x308>
   18ac6:	ldr	r3, [r3, #8]
   18ac8:	b.n	18aa2 <rb_first_postorder@@Base+0x2e0>
   18aca:	beq.n	18aa4 <rb_first_postorder@@Base+0x2e2>
   18acc:	ldr	r3, [r3, #4]
   18ace:	b.n	18aa2 <rb_first_postorder@@Base+0x2e0>
   18ad0:	mov	r0, r3
   18ad2:	add	sp, #168	; 0xa8
   18ad4:	pop	{r4, pc}
   18ad6:	nop
   18ad8:	movs	r2, #138	; 0x8a
   18ada:	movs	r5, r0
   18adc:	lsls	r0, r1, #10
   18ade:	movs	r0, r0
   18ae0:	movs	r2, #112	; 0x70
   18ae2:	movs	r5, r0
   18ae4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ae8:	sub	sp, #20
   18aea:	mov	r9, r0
   18aec:	ldr	r0, [r0, #0]
   18aee:	strd	r2, r3, [sp]
   18af2:	bl	18a86 <rb_first_postorder@@Base+0x2c4>
   18af6:	ldr.w	fp, [pc, #656]	; 18d88 <rb_first_postorder@@Base+0x5c6>
   18afa:	ldrd	r6, r7, [sp, #64]	; 0x40
   18afe:	add	fp, pc
   18b00:	ldrd	sl, r8, [sp, #88]	; 0x58
   18b04:	ldr	r5, [sp, #124]	; 0x7c
   18b06:	mov	r4, r0
   18b08:	cmp	r0, #0
   18b0a:	beq.w	18c42 <rb_first_postorder@@Base+0x480>
   18b0e:	ldrd	r2, r3, [r0, #24]
   18b12:	ldrd	r0, r1, [sp]
   18b16:	cmp	r1, r3
   18b18:	it	eq
   18b1a:	cmpeq	r0, r2
   18b1c:	bne.w	18c42 <rb_first_postorder@@Base+0x480>
   18b20:	cmp.w	sl, #0
   18b24:	beq.n	18b66 <rb_first_postorder@@Base+0x3a4>
   18b26:	cmp.w	r8, #0
   18b2a:	beq.n	18b66 <rb_first_postorder@@Base+0x3a4>
   18b2c:	ldr.w	r0, [r4, #144]	; 0x90
   18b30:	blx	8b84 <free@plt+0x4>
   18b34:	add.w	r0, r8, #1
   18b38:	blx	8e40 <malloc@plt+0x4>
   18b3c:	str.w	r0, [r4, #144]	; 0x90
   18b40:	cbnz	r0, 18b54 <rb_first_postorder@@Base+0x392>
   18b42:	ldr	r3, [pc, #584]	; (18d8c <rb_first_postorder@@Base+0x5ca>)
   18b44:	ldr	r0, [pc, #584]	; (18d90 <rb_first_postorder@@Base+0x5ce>)
   18b46:	ldr.w	r3, [fp, r3]
   18b4a:	add	r0, pc
   18b4c:	ldr	r1, [r3, #0]
   18b4e:	blx	91a8 <fputs@plt+0x4>
   18b52:	b.n	18c56 <rb_first_postorder@@Base+0x494>
   18b54:	mov	r2, r8
   18b56:	mov	r1, sl
   18b58:	blx	8fb4 <strncpy@plt>
   18b5c:	ldr.w	r3, [r4, #144]	; 0x90
   18b60:	movs	r2, #0
   18b62:	strb.w	r2, [r3, r8]
   18b66:	ldrd	r2, r3, [sp, #56]	; 0x38
   18b6a:	orrs	r3, r2
   18b6c:	itt	ne
   18b6e:	ldrdne	r2, r3, [sp, #56]	; 0x38
   18b72:	strdne	r2, r3, [r4, #48]	; 0x30
   18b76:	orrs.w	r3, r6, r7
   18b7a:	ldrd	r2, r3, [sp, #72]	; 0x48
   18b7e:	it	ne
   18b80:	strdne	r6, r7, [r4, #32]
   18b84:	orrs	r3, r2
   18b86:	itt	ne
   18b88:	ldrdne	r2, r3, [sp, #72]	; 0x48
   18b8c:	strdne	r2, r3, [r4, #40]	; 0x28
   18b90:	ldrd	r2, r3, [sp, #80]	; 0x50
   18b94:	orrs	r3, r2
   18b96:	itt	ne
   18b98:	ldrdne	r2, r3, [sp, #80]	; 0x50
   18b9c:	strdne	r2, r3, [r4, #56]	; 0x38
   18ba0:	ldrd	r2, r3, [sp, #104]	; 0x68
   18ba4:	orrs	r3, r2
   18ba6:	itt	ne
   18ba8:	ldrdne	r2, r3, [sp, #104]	; 0x68
   18bac:	strdne	r2, r3, [r4, #72]	; 0x48
   18bb0:	ldrd	r2, r3, [sp, #96]	; 0x60
   18bb4:	orrs	r3, r2
   18bb6:	beq.n	18c2e <rb_first_postorder@@Base+0x46c>
   18bb8:	ldrd	r2, r3, [sp, #96]	; 0x60
   18bbc:	strd	r2, r3, [r4, #80]	; 0x50
   18bc0:	ldr	r3, [sp, #112]	; 0x70
   18bc2:	cbz	r3, 18bc6 <rb_first_postorder@@Base+0x404>
   18bc4:	str	r3, [r4, #88]	; 0x58
   18bc6:	ldr	r3, [sp, #116]	; 0x74
   18bc8:	cbz	r3, 18be8 <rb_first_postorder@@Base+0x426>
   18bca:	add.w	r2, r4, #92	; 0x5c
   18bce:	add.w	ip, r3, #16
   18bd2:	mov	r7, r3
   18bd4:	mov	r3, r7
   18bd6:	adds	r2, #8
   18bd8:	ldmia	r3!, {r0, r1}
   18bda:	cmp	r3, ip
   18bdc:	str.w	r0, [r2, #-8]
   18be0:	mov	r7, r3
   18be2:	str.w	r1, [r2, #-4]
   18be6:	bne.n	18bd4 <rb_first_postorder@@Base+0x412>
   18be8:	ldr	r3, [sp, #120]	; 0x78
   18bea:	cbz	r3, 18c0a <rb_first_postorder@@Base+0x448>
   18bec:	add.w	r2, r4, #108	; 0x6c
   18bf0:	add.w	r7, r3, #16
   18bf4:	mov	r6, r3
   18bf6:	mov	r3, r6
   18bf8:	adds	r2, #8
   18bfa:	ldmia	r3!, {r0, r1}
   18bfc:	cmp	r3, r7
   18bfe:	str.w	r0, [r2, #-8]
   18c02:	mov	r6, r3
   18c04:	str.w	r1, [r2, #-4]
   18c08:	bne.n	18bf6 <rb_first_postorder@@Base+0x434>
   18c0a:	cbz	r5, 18c26 <rb_first_postorder@@Base+0x464>
   18c0c:	adds	r4, #124	; 0x7c
   18c0e:	add.w	r2, r5, #16
   18c12:	mov	r3, r5
   18c14:	adds	r4, #8
   18c16:	ldmia	r3!, {r0, r1}
   18c18:	cmp	r3, r2
   18c1a:	str.w	r0, [r4, #-8]
   18c1e:	mov	r5, r3
   18c20:	str.w	r1, [r4, #-4]
   18c24:	bne.n	18c12 <rb_first_postorder@@Base+0x450>
   18c26:	movs	r0, #0
   18c28:	add	sp, #20
   18c2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c2e:	ldrd	r2, r3, [r4, #80]	; 0x50
   18c32:	orrs	r3, r2
   18c34:	bne.n	18bc0 <rb_first_postorder@@Base+0x3fe>
   18c36:	orrs.w	r3, r6, r7
   18c3a:	it	ne
   18c3c:	strdne	r6, r7, [r4, #80]	; 0x50
   18c40:	b.n	18bc0 <rb_first_postorder@@Base+0x3fe>
   18c42:	movs	r1, #160	; 0xa0
   18c44:	movs	r0, #1
   18c46:	blx	8ab8 <calloc@plt+0x4>
   18c4a:	mov	r4, r0
   18c4c:	cbnz	r0, 18c5c <rb_first_postorder@@Base+0x49a>
   18c4e:	ldr	r0, [pc, #324]	; (18d94 <rb_first_postorder@@Base+0x5d2>)
   18c50:	add	r0, pc
   18c52:	blx	8e24 <puts@plt+0x4>
   18c56:	movs	r0, #1
   18c58:	blx	8f10 <exit@plt>
   18c5c:	ldrd	r2, r3, [sp]
   18c60:	strd	r2, r3, [r0, #24]
   18c64:	cmp.w	sl, #0
   18c68:	beq.n	18c9e <rb_first_postorder@@Base+0x4dc>
   18c6a:	cmp.w	r8, #0
   18c6e:	beq.n	18c9e <rb_first_postorder@@Base+0x4dc>
   18c70:	add.w	r0, r8, #1
   18c74:	blx	8e40 <malloc@plt+0x4>
   18c78:	str.w	r0, [r4, #144]	; 0x90
   18c7c:	cbnz	r0, 18c8c <rb_first_postorder@@Base+0x4ca>
   18c7e:	ldr	r3, [pc, #268]	; (18d8c <rb_first_postorder@@Base+0x5ca>)
   18c80:	ldr	r0, [pc, #276]	; (18d98 <rb_first_postorder@@Base+0x5d6>)
   18c82:	ldr.w	r3, [fp, r3]
   18c86:	add	r0, pc
   18c88:	ldr	r1, [r3, #0]
   18c8a:	b.n	18b4e <rb_first_postorder@@Base+0x38c>
   18c8c:	mov	r2, r8
   18c8e:	mov	r1, sl
   18c90:	str	r0, [sp, #12]
   18c92:	blx	8fb4 <strncpy@plt>
   18c96:	ldr	r3, [sp, #12]
   18c98:	movs	r2, #0
   18c9a:	strb.w	r2, [r3, r8]
   18c9e:	ldrd	r2, r3, [sp, #56]	; 0x38
   18ca2:	orrs	r3, r2
   18ca4:	itt	ne
   18ca6:	ldrdne	r2, r3, [sp, #56]	; 0x38
   18caa:	strdne	r2, r3, [r4, #48]	; 0x30
   18cae:	ldrd	r2, r3, [sp, #80]	; 0x50
   18cb2:	orrs	r3, r2
   18cb4:	itt	ne
   18cb6:	ldrdne	r2, r3, [sp, #80]	; 0x50
   18cba:	strdne	r2, r3, [r4, #56]	; 0x38
   18cbe:	orrs.w	r3, r6, r7
   18cc2:	ldrd	r2, r3, [sp, #72]	; 0x48
   18cc6:	it	ne
   18cc8:	strdne	r6, r7, [r4, #32]
   18ccc:	orrs	r3, r2
   18cce:	itt	ne
   18cd0:	ldrdne	r2, r3, [sp, #72]	; 0x48
   18cd4:	strdne	r2, r3, [r4, #40]	; 0x28
   18cd8:	ldrd	r2, r3, [sp, #104]	; 0x68
   18cdc:	orrs	r3, r2
   18cde:	itt	ne
   18ce0:	ldrdne	r2, r3, [sp, #104]	; 0x68
   18ce4:	strdne	r2, r3, [r4, #72]	; 0x48
   18ce8:	ldrd	r2, r3, [sp, #96]	; 0x60
   18cec:	orrs	r3, r2
   18cee:	beq.n	18d42 <rb_first_postorder@@Base+0x580>
   18cf0:	ldrd	r2, r3, [sp, #96]	; 0x60
   18cf4:	strd	r2, r3, [r4, #80]	; 0x50
   18cf8:	ldr	r3, [sp, #112]	; 0x70
   18cfa:	cbz	r3, 18cfe <rb_first_postorder@@Base+0x53c>
   18cfc:	str	r3, [r4, #88]	; 0x58
   18cfe:	ldr	r3, [sp, #116]	; 0x74
   18d00:	cbz	r3, 18d0c <rb_first_postorder@@Base+0x54a>
   18d02:	ldmia	r3, {r0, r1, r2, r3}
   18d04:	add.w	ip, r4, #92	; 0x5c
   18d08:	stmia.w	ip, {r0, r1, r2, r3}
   18d0c:	ldr	r3, [sp, #120]	; 0x78
   18d0e:	cbz	r3, 18d1a <rb_first_postorder@@Base+0x558>
   18d10:	ldmia	r3, {r0, r1, r2, r3}
   18d12:	add.w	r7, r4, #108	; 0x6c
   18d16:	stmia.w	r7, {r0, r1, r2, r3}
   18d1a:	cbz	r5, 18d28 <rb_first_postorder@@Base+0x566>
   18d1c:	ldmia.w	r5, {r0, r1, r2, r3}
   18d20:	add.w	r6, r4, #124	; 0x7c
   18d24:	stmia.w	r6, {r0, r1, r2, r3}
   18d28:	mov	r2, r9
   18d2a:	movs	r1, #0
   18d2c:	ldr	r3, [r2, #0]
   18d2e:	cbnz	r3, 18d56 <rb_first_postorder@@Base+0x594>
   18d30:	strd	r1, r3, [r4]
   18d34:	mov	r0, r4
   18d36:	str	r3, [r4, #8]
   18d38:	mov	r1, r9
   18d3a:	str	r4, [r2, #0]
   18d3c:	bl	183ca <rb_insert_color@@Base>
   18d40:	b.n	18c26 <rb_first_postorder@@Base+0x464>
   18d42:	ldrd	r2, r3, [r4, #80]	; 0x50
   18d46:	orrs	r3, r2
   18d48:	bne.n	18cf8 <rb_first_postorder@@Base+0x536>
   18d4a:	orrs.w	r3, r6, r7
   18d4e:	it	ne
   18d50:	strdne	r6, r7, [r4, #80]	; 0x50
   18d54:	b.n	18cf8 <rb_first_postorder@@Base+0x536>
   18d56:	movs	r2, #0
   18d58:	mov	r1, r3
   18d5a:	mov	r0, r4
   18d5c:	bl	187d8 <rb_first_postorder@@Base+0x16>
   18d60:	cmp	r0, #0
   18d62:	bge.n	18d6c <rb_first_postorder@@Base+0x5aa>
   18d64:	add.w	r2, r3, #8
   18d68:	mov	r1, r3
   18d6a:	b.n	18d2c <rb_first_postorder@@Base+0x56a>
   18d6c:	beq.n	18d72 <rb_first_postorder@@Base+0x5b0>
   18d6e:	adds	r2, r3, #4
   18d70:	b.n	18d68 <rb_first_postorder@@Base+0x5a6>
   18d72:	blx	8f58 <__errno_location@plt>
   18d76:	movs	r3, #17
   18d78:	str	r3, [r0, #0]
   18d7a:	ldr	r0, [pc, #32]	; (18d9c <rb_first_postorder@@Base+0x5da>)
   18d7c:	ldrd	r2, r3, [sp]
   18d80:	add	r0, pc
   18d82:	bl	1bd1c <__btrfs_error@@Base>
   18d86:	b.n	18c56 <rb_first_postorder@@Base+0x494>
   18d88:	movs	r2, #26
   18d8a:	movs	r5, r0
   18d8c:	lsls	r4, r3, #10
   18d8e:	movs	r0, r0
   18d90:	strh	r7, [r3, #38]	; 0x26
   18d92:	movs	r2, r0
   18d94:	ldr	r5, [r1, #28]
   18d96:	movs	r2, r0
   18d98:	strh	r3, [r4, #28]
   18d9a:	movs	r2, r0
   18d9c:	strh	r5, [r1, #22]
   18d9e:	movs	r2, r0
   18da0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18da4:	sub	sp, #20
   18da6:	movs	r6, #0
   18da8:	mov	r9, r1
   18daa:	mov	r5, r1
   18dac:	mov	r4, r6
   18dae:	mov.w	sl, #47	; 0x2f
   18db2:	mov	fp, r6
   18db4:	str	r0, [sp, #8]
   18db6:	strd	r2, r3, [sp]
   18dba:	ldrd	r2, r3, [r5, #48]	; 0x30
   18dbe:	orrs	r3, r2
   18dc0:	bne.n	18dd2 <rb_first_postorder@@Base+0x610>
   18dc2:	mov	r0, r4
   18dc4:	blx	8b84 <free@plt+0x4>
   18dc8:	mvn.w	r0, #1
   18dcc:	add	sp, #20
   18dce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dd2:	ldr.w	r8, [r5, #140]	; 0x8c
   18dd6:	mov	r0, r8
   18dd8:	blx	8f1c <strlen@plt>
   18ddc:	mov	r7, r0
   18dde:	cmp	r4, #0
   18de0:	beq.n	18e68 <rb_first_postorder@@Base+0x6a6>
   18de2:	adds	r0, #2
   18de4:	add	r0, r6
   18de6:	blx	8e40 <malloc@plt+0x4>
   18dea:	mov	r8, r0
   18dec:	cbnz	r0, 18dfc <rb_first_postorder@@Base+0x63a>
   18dee:	ldr	r0, [pc, #140]	; (18e7c <rb_first_postorder@@Base+0x6ba>)
   18df0:	add	r0, pc
   18df2:	blx	8cf4 <perror@plt>
   18df6:	movs	r0, #1
   18df8:	blx	8f10 <exit@plt>
   18dfc:	adds	r3, r7, #1
   18dfe:	mov	r2, r6
   18e00:	add	r0, r3
   18e02:	mov	r1, r4
   18e04:	str	r3, [sp, #12]
   18e06:	blx	8bdc <memcpy@plt+0x4>
   18e0a:	mov	r2, r7
   18e0c:	strb.w	sl, [r8, r7]
   18e10:	mov	r0, r8
   18e12:	ldr.w	r1, [r5, #140]	; 0x8c
   18e16:	blx	8bdc <memcpy@plt+0x4>
   18e1a:	add.w	r0, r8, r6
   18e1e:	add	r7, r0
   18e20:	mov	r0, r4
   18e22:	mov	r4, r8
   18e24:	strb.w	fp, [r7, #1]
   18e28:	blx	8b84 <free@plt+0x4>
   18e2c:	ldr	r3, [sp, #12]
   18e2e:	add	r6, r3
   18e30:	ldrd	r2, r3, [r9, #64]	; 0x40
   18e34:	ldrd	r0, r1, [sp]
   18e38:	orrs	r3, r2
   18e3a:	itt	eq
   18e3c:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   18e40:	strdeq	r2, r3, [r9, #64]	; 0x40
   18e44:	ldrd	r2, r3, [r5, #48]	; 0x30
   18e48:	cmp	r3, r1
   18e4a:	it	eq
   18e4c:	cmpeq	r2, r0
   18e4e:	beq.n	18e74 <rb_first_postorder@@Base+0x6b2>
   18e50:	cmp	r3, #0
   18e52:	it	eq
   18e54:	cmpeq	r2, #5
   18e56:	beq.n	18e74 <rb_first_postorder@@Base+0x6b2>
   18e58:	ldr	r1, [sp, #8]
   18e5a:	ldr	r0, [r1, #0]
   18e5c:	bl	18a86 <rb_first_postorder@@Base+0x2c4>
   18e60:	mov	r5, r0
   18e62:	cmp	r0, #0
   18e64:	bne.n	18dba <rb_first_postorder@@Base+0x5f8>
   18e66:	b.n	18dc2 <rb_first_postorder@@Base+0x600>
   18e68:	mov	r0, r8
   18e6a:	mov	r6, r7
   18e6c:	blx	8c78 <strdup@plt+0x4>
   18e70:	mov	r4, r0
   18e72:	b.n	18e30 <rb_first_postorder@@Base+0x66e>
   18e74:	movs	r0, #0
   18e76:	str.w	r4, [r9, #148]	; 0x94
   18e7a:	b.n	18dcc <rb_first_postorder@@Base+0x60a>
   18e7c:	strh	r1, [r1, #20]
   18e7e:	movs	r2, r0
   18e80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18e84:	mov	r4, r1
   18e86:	ldr	r1, [pc, #260]	; (18f8c <rb_first_postorder@@Base+0x7ca>)
   18e88:	sub.w	sp, sp, #4096	; 0x1000
   18e8c:	ldr	r2, [pc, #256]	; (18f90 <rb_first_postorder@@Base+0x7ce>)
   18e8e:	sub	sp, #16
   18e90:	add	r1, pc
   18e92:	ldr.w	r6, [r4, #140]	; 0x8c
   18e96:	add.w	r3, sp, #4096	; 0x1000
   18e9a:	mov	r5, r0
   18e9c:	ldr	r2, [r1, r2]
   18e9e:	adds	r3, #12
   18ea0:	ldr	r2, [r2, #0]
   18ea2:	str	r2, [r3, #0]
   18ea4:	mov.w	r2, #0
   18ea8:	cmp	r6, #0
   18eaa:	bne.n	18f66 <rb_first_postorder@@Base+0x7a4>
   18eac:	ldrd	r8, r9, [r4, #48]	; 0x30
   18eb0:	orrs.w	r3, r8, r9
   18eb4:	beq.n	18ef4 <rb_first_postorder@@Base+0x732>
   18eb6:	add	r7, sp, #8
   18eb8:	mov.w	r2, #4096	; 0x1000
   18ebc:	mov	r1, r6
   18ebe:	add.w	sl, sp, #16
   18ec2:	mov	r0, r7
   18ec4:	blx	8f98 <memset@plt+0x4>
   18ec8:	ldrd	r2, r3, [r4, #56]	; 0x38
   18ecc:	mov	r0, r5
   18ece:	ldr	r1, [pc, #184]	; (18f88 <rb_first_postorder@@Base+0x7c6>)
   18ed0:	strd	r8, r9, [sl, #-8]
   18ed4:	strd	r2, r3, [r7, #8]
   18ed8:	mov	r2, r7
   18eda:	blx	8d48 <ioctl@plt>
   18ede:	subs	r5, r0, #0
   18ee0:	bge.n	18f20 <rb_first_postorder@@Base+0x75e>
   18ee2:	blx	8f58 <__errno_location@plt>
   18ee6:	ldr	r3, [r0, #0]
   18ee8:	cmp	r3, #2
   18eea:	bne.n	18efa <rb_first_postorder@@Base+0x738>
   18eec:	movs	r2, #0
   18eee:	movs	r3, #0
   18ef0:	strd	r2, r3, [r4, #48]	; 0x30
   18ef4:	mvn.w	r5, #1
   18ef8:	b.n	18f06 <rb_first_postorder@@Base+0x744>
   18efa:	ldr	r0, [pc, #152]	; (18f94 <rb_first_postorder@@Base+0x7d2>)
   18efc:	ldrd	r2, r3, [r4, #48]	; 0x30
   18f00:	add	r0, pc
   18f02:	bl	1bd1c <__btrfs_error@@Base>
   18f06:	ldr	r1, [pc, #144]	; (18f98 <rb_first_postorder@@Base+0x7d6>)
   18f08:	add.w	r3, sp, #4096	; 0x1000
   18f0c:	ldr	r2, [pc, #128]	; (18f90 <rb_first_postorder@@Base+0x7ce>)
   18f0e:	adds	r3, #12
   18f10:	add	r1, pc
   18f12:	ldr	r2, [r1, r2]
   18f14:	ldr	r1, [r2, #0]
   18f16:	ldr	r2, [r3, #0]
   18f18:	eors	r1, r2
   18f1a:	beq.n	18f7c <rb_first_postorder@@Base+0x7ba>
   18f1c:	blx	8c90 <__stack_chk_fail@plt>
   18f20:	ldr.w	r8, [r4, #144]	; 0x90
   18f24:	ldrb	r3, [r7, #16]
   18f26:	mov	r0, r8
   18f28:	cbz	r3, 18f6a <rb_first_postorder@@Base+0x7a8>
   18f2a:	blx	8f1c <strlen@plt>
   18f2e:	add	r1, sp, #24
   18f30:	str	r1, [sp, #4]
   18f32:	mov	r5, r0
   18f34:	mov	r0, r1
   18f36:	blx	8f1c <strlen@plt>
   18f3a:	add	r0, r5
   18f3c:	adds	r0, #1
   18f3e:	blx	8e40 <malloc@plt+0x4>
   18f42:	ldr	r1, [sp, #4]
   18f44:	mov	r5, r0
   18f46:	str.w	r0, [r4, #140]	; 0x8c
   18f4a:	cbnz	r0, 18f5a <rb_first_postorder@@Base+0x798>
   18f4c:	ldr	r0, [pc, #76]	; (18f9c <rb_first_postorder@@Base+0x7da>)
   18f4e:	add	r0, pc
   18f50:	blx	8cf4 <perror@plt>
   18f54:	movs	r0, #1
   18f56:	blx	8f10 <exit@plt>
   18f5a:	blx	8d9c <strcpy@plt>
   18f5e:	mov	r1, r8
   18f60:	mov	r0, r5
   18f62:	blx	8d3c <strcat@plt+0x4>
   18f66:	movs	r5, #0
   18f68:	b.n	18f06 <rb_first_postorder@@Base+0x744>
   18f6a:	blx	8c78 <strdup@plt+0x4>
   18f6e:	str.w	r0, [r4, #140]	; 0x8c
   18f72:	cmp	r0, #0
   18f74:	bne.n	18f66 <rb_first_postorder@@Base+0x7a4>
   18f76:	ldr	r0, [pc, #40]	; (18fa0 <rb_first_postorder@@Base+0x7de>)
   18f78:	add	r0, pc
   18f7a:	b.n	18f50 <rb_first_postorder@@Base+0x78e>
   18f7c:	mov	r0, r5
   18f7e:	add.w	sp, sp, #4096	; 0x1000
   18f82:	add	sp, #16
   18f84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18f88:	str	r4, [sp, #72]	; 0x48
   18f8a:	beq.n	18f8e <rb_first_postorder@@Base+0x7cc>
   18f8c:	subs	r0, r1, #2
   18f8e:	movs	r5, r0
   18f90:	lsls	r0, r1, #10
   18f92:	movs	r0, r0
   18f94:	strh	r7, [r0, #12]
   18f96:	movs	r2, r0
   18f98:	subs	r0, r1, #0
   18f9a:	movs	r5, r0
   18f9c:	strh	r3, [r5, #8]
   18f9e:	movs	r2, r0
   18fa0:	strh	r7, [r6, #8]
   18fa2:	movs	r2, r0
   18fa4:	push	{r3, r4, r5, lr}
   18fa6:	mov	r5, r0
   18fa8:	mov	r0, r1
   18faa:	bl	186e6 <rb_first@@Base>
   18fae:	mov	r4, r0
   18fb0:	cbnz	r0, 18fb4 <rb_first_postorder@@Base+0x7f2>
   18fb2:	pop	{r3, r4, r5, pc}
   18fb4:	mov	r1, r4
   18fb6:	mov	r0, r5
   18fb8:	bl	18e80 <rb_first_postorder@@Base+0x6be>
   18fbc:	cbz	r0, 18fc2 <rb_first_postorder@@Base+0x800>
   18fbe:	adds	r3, r0, #2
   18fc0:	bne.n	18fb2 <rb_first_postorder@@Base+0x7f0>
   18fc2:	mov	r0, r4
   18fc4:	bl	18706 <rb_next@@Base>
   18fc8:	b.n	18fae <rb_first_postorder@@Base+0x7ec>
   18fca:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fce:	mov	r6, r1
   18fd0:	vpush	{d8}
   18fd4:	ldr	r1, [pc, #748]	; (192c4 <rb_first_postorder@@Base+0xb02>)
   18fd6:	ldr	r2, [pc, #752]	; (192c8 <rb_first_postorder@@Base+0xb06>)
   18fd8:	add	r1, pc
   18fda:	vmov	s16, r0
   18fde:	sub.w	sp, sp, #4288	; 0x10c0
   18fe2:	sub	sp, #28
   18fe4:	ldr	r2, [r1, r2]
   18fe6:	add	r4, sp, #160	; 0xa0
   18fe8:	add.w	r3, sp, #4288	; 0x10c0
   18fec:	add	r5, sp, #184	; 0xb8
   18fee:	ldr	r2, [r2, #0]
   18ff0:	str	r2, [r3, #20]
   18ff2:	mov.w	r2, #0
   18ff6:	movs	r1, #0
   18ff8:	mov.w	r2, #4096	; 0x1000
   18ffc:	mov	r0, r4
   18ffe:	str	r1, [r6, #0]
   19000:	adds	r3, #20
   19002:	blx	8f98 <memset@plt+0x4>
   19006:	movs	r2, #1
   19008:	movs	r3, #0
   1900a:	strd	r2, r3, [r5, #-24]
   1900e:	movs	r2, #132	; 0x84
   19010:	movs	r3, #144	; 0x90
   19012:	strd	r2, r3, [r4, #56]	; 0x38
   19016:	movs	r2, #5
   19018:	movs	r3, #0
   1901a:	strd	r2, r3, [r4, #8]
   1901e:	mvn.w	r2, #255	; 0xff
   19022:	mov.w	r3, #4294967295	; 0xffffffff
   19026:	strd	r2, r3, [r4, #16]
   1902a:	mov.w	r2, #4294967295	; 0xffffffff
   1902e:	mov.w	r3, #4294967295	; 0xffffffff
   19032:	strd	r2, r3, [r4, #32]
   19036:	strd	r2, r3, [r4, #48]	; 0x30
   1903a:	vmov	r0, s16
   1903e:	mov	r2, r4
   19040:	ldr	r1, [pc, #636]	; (192c0 <rb_first_postorder@@Base+0xafe>)
   19042:	mov.w	r3, #4096	; 0x1000
   19046:	str	r3, [r4, #64]	; 0x40
   19048:	blx	8d48 <ioctl@plt>
   1904c:	cmp	r0, #0
   1904e:	blt.n	1905a <rb_first_postorder@@Base+0x898>
   19050:	ldr	r3, [r4, #64]	; 0x40
   19052:	cmp	r3, #0
   19054:	bne.w	192a2 <rb_first_postorder@@Base+0xae0>
   19058:	movs	r0, #0
   1905a:	ldr	r1, [pc, #624]	; (192cc <rb_first_postorder@@Base+0xb0a>)
   1905c:	add.w	r3, sp, #4288	; 0x10c0
   19060:	ldr	r2, [pc, #612]	; (192c8 <rb_first_postorder@@Base+0xb06>)
   19062:	adds	r3, #20
   19064:	add	r1, pc
   19066:	ldr	r2, [r1, r2]
   19068:	ldr	r1, [r2, #0]
   1906a:	ldr	r2, [r3, #0]
   1906c:	eors	r1, r2
   1906e:	beq.w	192b0 <rb_first_postorder@@Base+0xaee>
   19072:	blx	8c90 <__stack_chk_fail@plt>
   19076:	ldr	r3, [sp, #104]	; 0x68
   19078:	add	r5, sp, #128	; 0x80
   1907a:	adds	r3, #80	; 0x50
   1907c:	mov	lr, r5
   1907e:	add	r3, r2
   19080:	add.w	r8, r3, #32
   19084:	ldr	r0, [r3, #0]
   19086:	adds	r3, #8
   19088:	ldr.w	r1, [r3, #-4]
   1908c:	cmp	r3, r8
   1908e:	mov	ip, lr
   19090:	stmia.w	ip!, {r0, r1}
   19094:	mov	lr, ip
   19096:	bne.n	19084 <rb_first_postorder@@Base+0x8c2>
   19098:	ldr.w	r8, [r5, #24]
   1909c:	add.w	r9, r2, #32
   190a0:	cmp.w	r8, #144	; 0x90
   190a4:	bne.n	1915e <rb_first_postorder@@Base+0x99c>
   190a6:	ldr	r3, [sp, #124]	; 0x7c
   190a8:	movs	r0, #0
   190aa:	movs	r1, #0
   190ac:	movs	r2, #0
   190ae:	add	r3, r9
   190b0:	strd	r2, r2, [sp, #64]	; 0x40
   190b4:	strd	r2, r2, [sp, #56]	; 0x38
   190b8:	strd	r0, r1, [sp, #48]	; 0x30
   190bc:	strd	r0, r1, [sp, #40]	; 0x28
   190c0:	ldrh	r2, [r3, #16]
   190c2:	str	r2, [sp, #36]	; 0x24
   190c4:	add.w	r2, r3, #18
   190c8:	str	r2, [sp, #32]
   190ca:	ldr	r2, [r3, #0]
   190cc:	ldr	r3, [r3, #4]
   190ce:	strd	r0, r1, [sp, #16]
   190d2:	strd	r0, r1, [sp, #8]
   190d6:	strd	r2, r3, [sp, #24]
   190da:	ldrd	r2, r3, [r5, #16]
   190de:	strd	r2, r3, [sp]
   190e2:	ldrd	r2, r3, [r5, #8]
   190e6:	mov	r0, r6
   190e8:	bl	18ae4 <rb_first_postorder@@Base+0x322>
   190ec:	ldrd	r0, r1, [r5, #8]
   190f0:	adds	r7, #1
   190f2:	ldr	r2, [r5, #28]
   190f4:	str.w	r8, [r4, #56]	; 0x38
   190f8:	strd	r0, r1, [r4, #8]
   190fc:	add	r2, r9
   190fe:	ldrd	r0, r1, [r5, #16]
   19102:	strd	r0, r1, [r4, #24]
   19106:	ldr	r3, [r4, #64]	; 0x40
   19108:	cmp	r7, r3
   1910a:	bcc.n	19076 <rb_first_postorder@@Base+0x8b4>
   1910c:	ldrd	r3, r2, [r4, #24]
   19110:	adds	r3, #1
   19112:	str	r3, [sp, #72]	; 0x48
   19114:	adc.w	r3, r2, #0
   19118:	str	r3, [sp, #76]	; 0x4c
   1911a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1911e:	strd	r2, r3, [r4, #24]
   19122:	orrs	r3, r2
   19124:	bne.n	1903a <rb_first_postorder@@Base+0x878>
   19126:	ldr	r3, [r4, #56]	; 0x38
   19128:	adds	r3, #1
   1912a:	str	r3, [r4, #56]	; 0x38
   1912c:	cmp	r3, #144	; 0x90
   1912e:	bls.n	1903a <rb_first_postorder@@Base+0x878>
   19130:	movs	r3, #132	; 0x84
   19132:	str	r3, [r4, #56]	; 0x38
   19134:	ldrd	r3, r2, [r4, #8]
   19138:	adds	r3, #1
   1913a:	str	r3, [sp, #80]	; 0x50
   1913c:	adc.w	r3, r2, #0
   19140:	str	r3, [sp, #84]	; 0x54
   19142:	ldrd	r2, r3, [sp, #80]	; 0x50
   19146:	ldrd	r0, r1, [sp, #80]	; 0x50
   1914a:	strd	r2, r3, [r4, #8]
   1914e:	ldrd	r2, r3, [r4, #16]
   19152:	cmp	r3, r1
   19154:	it	eq
   19156:	cmpeq	r2, r0
   19158:	bcs.w	1903a <rb_first_postorder@@Base+0x878>
   1915c:	b.n	19058 <rb_first_postorder@@Base+0x896>
   1915e:	cmp.w	r8, #132	; 0x84
   19162:	bne.n	190ec <rb_first_postorder@@Base+0x92a>
   19164:	ldrd	r2, r3, [r5, #8]
   19168:	cmp	r3, #0
   1916a:	it	eq
   1916c:	cmpeq.w	r2, #256	; 0x100
   19170:	strd	r2, r3, [sp, #88]	; 0x58
   19174:	bcs.n	1917e <rb_first_postorder@@Base+0x9bc>
   19176:	cmp	r3, #0
   19178:	it	eq
   1917a:	cmpeq	r2, #5
   1917c:	bne.n	190ec <rb_first_postorder@@Base+0x92a>
   1917e:	add	r3, sp, #264	; 0x108
   19180:	add	r3, r9
   19182:	ldr.w	r2, [r3, #160]	; 0xa0
   19186:	str	r2, [sp, #116]	; 0x74
   19188:	ldr.w	r2, [r3, #164]	; 0xa4
   1918c:	str	r2, [sp, #120]	; 0x78
   1918e:	ldr.w	r2, [r3, #208]	; 0xd0
   19192:	str	r2, [sp, #108]	; 0x6c
   19194:	ldr.w	r2, [r3, #212]	; 0xd4
   19198:	str	r2, [sp, #112]	; 0x70
   1919a:	ldr	r2, [r5, #28]
   1919c:	cmp	r2, #239	; 0xef
   1919e:	bls.n	1926e <rb_first_postorder@@Base+0xaac>
   191a0:	ldr.w	r2, [r3, #303]	; 0x12f
   191a4:	add.w	sl, sp, #4256	; 0x10a0
   191a8:	ldr.w	ip, [r3, #339]	; 0x153
   191ac:	add.w	sl, sl, #4
   191b0:	addw	fp, r3, #263	; 0x107
   191b4:	str	r2, [sp, #96]	; 0x60
   191b6:	ldr.w	r2, [r3, #307]	; 0x133
   191ba:	str	r2, [sp, #100]	; 0x64
   191bc:	add.w	r2, r3, #247	; 0xf7
   191c0:	ldr	r0, [r2, #0]
   191c2:	adds	r2, #8
   191c4:	ldr.w	r1, [r2, #-4]
   191c8:	cmp	r2, fp
   191ca:	mov	lr, sl
   191cc:	stmia.w	lr!, {r0, r1}
   191d0:	mov	sl, lr
   191d2:	bne.n	191c0 <rb_first_postorder@@Base+0x9fe>
   191d4:	add.w	sl, sp, #4256	; 0x10a0
   191d8:	addw	r2, r3, #263	; 0x107
   191dc:	add.w	sl, sl, #20
   191e0:	addw	fp, r3, #279	; 0x117
   191e4:	ldr	r0, [r2, #0]
   191e6:	adds	r2, #8
   191e8:	ldr.w	r1, [r2, #-4]
   191ec:	cmp	r2, fp
   191ee:	mov	lr, sl
   191f0:	stmia.w	lr!, {r0, r1}
   191f4:	mov	sl, lr
   191f6:	bne.n	191e4 <rb_first_postorder@@Base+0xa22>
   191f8:	add.w	lr, sp, #4288	; 0x10c0
   191fc:	addw	r2, r3, #279	; 0x117
   19200:	add.w	lr, lr, #4
   19204:	addw	r3, r3, #295	; 0x127
   19208:	ldr	r0, [r2, #0]
   1920a:	adds	r2, #8
   1920c:	ldr.w	r1, [r2, #-4]
   19210:	cmp	r2, r3
   19212:	mov	sl, lr
   19214:	stmia.w	sl!, {r0, r1}
   19218:	mov	lr, sl
   1921a:	bne.n	19208 <rb_first_postorder@@Base+0xa46>
   1921c:	add.w	r3, sp, #4288	; 0x10c0
   19220:	movs	r0, #0
   19222:	adds	r3, #4
   19224:	str	r3, [sp, #68]	; 0x44
   19226:	add.w	r3, sp, #4256	; 0x10a0
   1922a:	movs	r1, #0
   1922c:	adds	r3, #20
   1922e:	str	r3, [sp, #64]	; 0x40
   19230:	add.w	r3, sp, #4256	; 0x10a0
   19234:	strd	r0, r1, [sp, #24]
   19238:	adds	r3, #4
   1923a:	strd	ip, r3, [sp, #56]	; 0x38
   1923e:	ldr	r3, [sp, #116]	; 0x74
   19240:	str	r3, [sp, #48]	; 0x30
   19242:	ldr	r3, [sp, #120]	; 0x78
   19244:	str	r3, [sp, #52]	; 0x34
   19246:	ldr	r3, [sp, #96]	; 0x60
   19248:	str	r3, [sp, #40]	; 0x28
   1924a:	ldr	r3, [sp, #100]	; 0x64
   1924c:	str	r3, [sp, #44]	; 0x2c
   1924e:	movs	r3, #0
   19250:	strd	r3, r3, [sp, #32]
   19254:	ldr	r3, [sp, #108]	; 0x6c
   19256:	str	r3, [sp, #16]
   19258:	ldr	r3, [sp, #112]	; 0x70
   1925a:	str	r3, [sp, #20]
   1925c:	ldrd	r2, r3, [r5, #16]
   19260:	strd	r0, r1, [sp]
   19264:	strd	r2, r3, [sp, #8]
   19268:	ldrd	r2, r3, [sp, #88]	; 0x58
   1926c:	b.n	190e6 <rb_first_postorder@@Base+0x924>
   1926e:	add.w	r0, sp, #4256	; 0x10a0
   19272:	movs	r2, #16
   19274:	movs	r1, #0
   19276:	adds	r0, #4
   19278:	blx	8f98 <memset@plt+0x4>
   1927c:	add.w	r0, sp, #4256	; 0x10a0
   19280:	movs	r2, #16
   19282:	movs	r1, #0
   19284:	adds	r0, #20
   19286:	blx	8f98 <memset@plt+0x4>
   1928a:	add.w	r0, sp, #4288	; 0x10c0
   1928e:	adds	r0, #4
   19290:	movs	r2, #16
   19292:	movs	r1, #0
   19294:	blx	8f98 <memset@plt+0x4>
   19298:	mov.w	ip, #0
   1929c:	strd	ip, ip, [sp, #96]	; 0x60
   192a0:	b.n	1921c <rb_first_postorder@@Base+0xa5a>
   192a2:	movs	r7, #0
   192a4:	add	r3, sp, #184	; 0xb8
   192a6:	mov	r2, r7
   192a8:	str	r3, [sp, #104]	; 0x68
   192aa:	add	r3, sp, #264	; 0x108
   192ac:	str	r3, [sp, #124]	; 0x7c
   192ae:	b.n	19106 <rb_first_postorder@@Base+0x944>
   192b0:	add.w	sp, sp, #4288	; 0x10c0
   192b4:	add	sp, #28
   192b6:	vpop	{d8}
   192ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192be:	nop
   192c0:	str	r4, [sp, #68]	; 0x44
   192c2:	beq.n	192c6 <rb_first_postorder@@Base+0xb04>
   192c4:	adds	r0, r0, #5
   192c6:	movs	r5, r0
   192c8:	lsls	r0, r1, #10
   192ca:	movs	r0, r0
   192cc:	adds	r4, r6, #2
   192ce:	movs	r5, r0
   192d0:	push	{r4, r5, r6, lr}
   192d2:	mov	r5, r0
   192d4:	mov	r6, r1
   192d6:	bl	18fca <rb_first_postorder@@Base+0x808>
   192da:	mov	r4, r0
   192dc:	cbnz	r0, 192e8 <rb_first_postorder@@Base+0xb26>
   192de:	mov	r1, r6
   192e0:	mov	r0, r5
   192e2:	ldmia.w	sp!, {r4, r5, r6, lr}
   192e6:	b.n	18fa4 <rb_first_postorder@@Base+0x7e2>
   192e8:	ldr	r0, [pc, #8]	; (192f4 <rb_first_postorder@@Base+0xb32>)
   192ea:	add	r0, pc
   192ec:	bl	1bd1c <__btrfs_error@@Base>
   192f0:	mov	r0, r4
   192f2:	pop	{r4, r5, r6, pc}
   192f4:	ldrb	r3, [r2, #23]
   192f6:	movs	r2, r0
   192f8:	push	{r0, r1, r2, r3, r4, lr}
   192fa:	ldr	r3, [pc, #40]	; (19324 <rb_first_postorder@@Base+0xb62>)
   192fc:	ldr	r4, [pc, #40]	; (19328 <rb_first_postorder@@Base+0xb66>)
   192fe:	add	r3, pc
   19300:	ldr	r4, [r3, r4]
   19302:	movs	r3, #0
   19304:	strd	r2, r1, [sp]
   19308:	movs	r1, #1
   1930a:	strd	r0, r3, [sp, #8]
   1930e:	ldr	r2, [pc, #28]	; (1932c <rb_first_postorder@@Base+0xb6a>)
   19310:	ldr	r3, [pc, #28]	; (19330 <rb_first_postorder@@Base+0xb6e>)
   19312:	add	r2, pc
   19314:	ldr	r0, [r4, #0]
   19316:	add	r3, pc
   19318:	blx	9040 <__fprintf_chk@plt+0x4>
   1931c:	bl	188f8 <rb_first_postorder@@Base+0x136>
   19320:	blx	91c0 <abort@plt>
   19324:	subs	r2, r3, r0
   19326:	movs	r5, r0
   19328:	lsls	r4, r3, #10
   1932a:	movs	r0, r0
   1932c:	ldrh	r0, [r7, r6]
   1932e:	movs	r2, r0
   19330:	ldrb	r4, [r0, #23]
   19332:	movs	r2, r0
   19334:	push	{r4, lr}
   19336:	subs	r1, #1
   19338:	ldr	r4, [pc, #288]	; (1945c <rb_first_postorder@@Base+0xc9a>)
   1933a:	sub	sp, #328	; 0x148
   1933c:	ldr	r2, [pc, #288]	; (19460 <rb_first_postorder@@Base+0xc9e>)
   1933e:	add	r4, pc
   19340:	ldr	r3, [pc, #288]	; (19464 <rb_first_postorder@@Base+0xca2>)
   19342:	ldr	r2, [r4, r2]
   19344:	add	r3, pc
   19346:	ldr	r2, [r2, #0]
   19348:	str	r2, [sp, #324]	; 0x144
   1934a:	mov.w	r2, #0
   1934e:	cmp	r1, #8
   19350:	bhi.n	19360 <rb_first_postorder@@Base+0xb9e>
   19352:	tbb	[pc, r1]
   19356:	subs	r6, r2, r4
   19358:	movs	r5, #32
   1935a:	ldrb	r2, [r5, r0]
   1935c:	ldr	r0, [pc, #380]	; (194dc <btrfs_list_setup_print_column@@Base+0x30>)
   1935e:	lsls	r2, r4, #1
   19360:	ldr	r1, [pc, #260]	; (19468 <rb_first_postorder@@Base+0xca6>)
   19362:	ldrd	r2, r3, [r0, #24]
   19366:	add	r1, pc
   19368:	movs	r0, #1
   1936a:	blx	900c <__printf_chk@plt+0x4>
   1936e:	ldr	r2, [pc, #252]	; (1946c <rb_first_postorder@@Base+0xcaa>)
   19370:	ldr	r3, [pc, #236]	; (19460 <rb_first_postorder@@Base+0xc9e>)
   19372:	add	r2, pc
   19374:	ldr	r3, [r2, r3]
   19376:	ldr	r2, [r3, #0]
   19378:	ldr	r3, [sp, #324]	; 0x144
   1937a:	eors	r2, r3
   1937c:	beq.n	19456 <rb_first_postorder@@Base+0xc94>
   1937e:	blx	8c90 <__stack_chk_fail@plt>
   19382:	ldr	r1, [pc, #236]	; (19470 <rb_first_postorder@@Base+0xcae>)
   19384:	ldrd	r2, r3, [r0, #72]	; 0x48
   19388:	add	r1, pc
   1938a:	b.n	19368 <rb_first_postorder@@Base+0xba6>
   1938c:	ldr	r1, [pc, #228]	; (19474 <rb_first_postorder@@Base+0xcb2>)
   1938e:	ldrd	r2, r3, [r0, #80]	; 0x50
   19392:	add	r1, pc
   19394:	b.n	19368 <rb_first_postorder@@Base+0xba6>
   19396:	ldr	r1, [pc, #224]	; (19478 <rb_first_postorder@@Base+0xcb6>)
   19398:	ldrd	r2, r3, [r0, #48]	; 0x30
   1939c:	add	r1, pc
   1939e:	b.n	19368 <rb_first_postorder@@Base+0xba6>
   193a0:	ldr	r1, [pc, #216]	; (1947c <rb_first_postorder@@Base+0xcba>)
   193a2:	ldrd	r2, r3, [r0, #64]	; 0x40
   193a6:	add	r1, pc
   193a8:	b.n	19368 <rb_first_postorder@@Base+0xba6>
   193aa:	ldr	r3, [r0, #88]	; 0x58
   193ac:	add	r4, sp, #68	; 0x44
   193ae:	cbz	r3, 193da <rb_first_postorder@@Base+0xc18>
   193b0:	add	r3, sp, #24
   193b2:	adds	r0, #88	; 0x58
   193b4:	str	r3, [sp, #20]
   193b6:	mov	r1, r3
   193b8:	blx	8cc4 <localtime_r@plt>
   193bc:	ldr	r2, [pc, #192]	; (19480 <rb_first_postorder@@Base+0xcbe>)
   193be:	ldr	r3, [sp, #20]
   193c0:	mov.w	r1, #256	; 0x100
   193c4:	add	r2, pc
   193c6:	mov	r0, r4
   193c8:	blx	8e74 <strftime@plt>
   193cc:	ldr	r1, [pc, #180]	; (19484 <rb_first_postorder@@Base+0xcc2>)
   193ce:	mov	r2, r4
   193d0:	add	r1, pc
   193d2:	movs	r0, #1
   193d4:	blx	900c <__printf_chk@plt+0x4>
   193d8:	b.n	1936e <rb_first_postorder@@Base+0xbac>
   193da:	ldr	r1, [pc, #172]	; (19488 <rb_first_postorder@@Base+0xcc6>)
   193dc:	mov	r0, r4
   193de:	add	r1, pc
   193e0:	blx	8d9c <strcpy@plt>
   193e4:	b.n	193cc <rb_first_postorder@@Base+0xc0a>
   193e6:	add.w	r4, r0, #92	; 0x5c
   193ea:	mov	r0, r4
   193ec:	blx	8f88 <uuid_is_null@plt>
   193f0:	cbz	r0, 19404 <rb_first_postorder@@Base+0xc42>
   193f2:	ldr	r1, [pc, #152]	; (1948c <rb_first_postorder@@Base+0xcca>)
   193f4:	add	r0, sp, #68	; 0x44
   193f6:	add	r1, pc
   193f8:	blx	8d9c <strcpy@plt>
   193fc:	ldr	r1, [pc, #144]	; (19490 <rb_first_postorder@@Base+0xcce>)
   193fe:	add	r2, sp, #68	; 0x44
   19400:	add	r1, pc
   19402:	b.n	193d2 <rb_first_postorder@@Base+0xc10>
   19404:	add	r1, sp, #68	; 0x44
   19406:	mov	r0, r4
   19408:	blx	8b1c <uuid_unparse@plt>
   1940c:	b.n	193fc <rb_first_postorder@@Base+0xc3a>
   1940e:	add.w	r4, r0, #108	; 0x6c
   19412:	b.n	193ea <rb_first_postorder@@Base+0xc28>
   19414:	add.w	r4, r0, #124	; 0x7c
   19418:	b.n	193ea <rb_first_postorder@@Base+0xc28>
   1941a:	ldr.w	r2, [r0, #148]	; 0x94
   1941e:	cbnz	r2, 19450 <rb_first_postorder@@Base+0xc8e>
   19420:	ldr	r2, [pc, #112]	; (19494 <rb_first_postorder@@Base+0xcd2>)
   19422:	movs	r1, #1
   19424:	ldr	r0, [r3, r2]
   19426:	ldr	r3, [pc, #112]	; (19498 <rb_first_postorder@@Base+0xcd6>)
   19428:	ldr	r2, [pc, #112]	; (1949c <rb_first_postorder@@Base+0xcda>)
   1942a:	add	r3, pc
   1942c:	str	r3, [sp, #8]
   1942e:	ldr	r3, [pc, #112]	; (194a0 <rb_first_postorder@@Base+0xcde>)
   19430:	add	r2, pc
   19432:	str	r1, [sp, #12]
   19434:	add	r3, pc
   19436:	str	r3, [sp, #4]
   19438:	movw	r3, #1380	; 0x564
   1943c:	str	r3, [sp, #0]
   1943e:	ldr	r3, [pc, #100]	; (194a4 <rb_first_postorder@@Base+0xce2>)
   19440:	ldr	r0, [r0, #0]
   19442:	add	r3, pc
   19444:	blx	9040 <__fprintf_chk@plt+0x4>
   19448:	bl	188f8 <rb_first_postorder@@Base+0x136>
   1944c:	blx	91c0 <abort@plt>
   19450:	ldr	r1, [pc, #84]	; (194a8 <rb_first_postorder@@Base+0xce6>)
   19452:	add	r1, pc
   19454:	b.n	193d2 <rb_first_postorder@@Base+0xc10>
   19456:	add	sp, #328	; 0x148
   19458:	pop	{r4, pc}
   1945a:	nop
   1945c:	adds	r2, r3, r7
   1945e:	movs	r5, r0
   19460:	lsls	r0, r1, #10
   19462:	movs	r0, r0
   19464:	adds	r4, r2, r7
   19466:	movs	r5, r0
   19468:	ldr	r5, [r4, r0]
   1946a:	movs	r2, r0
   1946c:	adds	r6, r4, r6
   1946e:	movs	r5, r0
   19470:	ldr	r3, [r0, r0]
   19472:	movs	r2, r0
   19474:	ldrsb	r1, [r7, r7]
   19476:	movs	r2, r0
   19478:	ldrsb	r7, [r5, r7]
   1947a:	movs	r2, r0
   1947c:	ldrsb	r5, [r4, r7]
   1947e:	movs	r2, r0
   19480:	ldrb	r3, [r4, #20]
   19482:	movs	r2, r0
   19484:	ldrsh	r5, [r6, r0]
   19486:	movs	r2, r0
   19488:	str	r2, [r5, #72]	; 0x48
   1948a:	movs	r2, r0
   1948c:	str	r2, [r2, #72]	; 0x48
   1948e:	movs	r2, r0
   19490:	ldrb	r3, [r6, #19]
   19492:	movs	r2, r0
   19494:	lsls	r4, r3, #10
   19496:	movs	r0, r0
   19498:	ldrb	r7, [r1, #19]
   1949a:	movs	r2, r0
   1949c:	ldr	r7, [pc, #184]	; (19558 <btrfs_list_get_default_subvolume@@Base+0x24>)
   1949e:	movs	r2, r0
   194a0:	ldrb	r7, [r2, #27]
   194a2:	movs	r2, r0
   194a4:	ldrb	r0, [r3, #18]
   194a6:	movs	r2, r0
   194a8:	ldrb	r3, [r6, r6]
   194aa:	movs	r2, r0

000194ac <btrfs_list_setup_print_column@@Base>:
   194ac:	cmp	r0, #10
   194ae:	push	{r3, lr}
   194b0:	bls.n	194c2 <btrfs_list_setup_print_column@@Base+0x16>
   194b2:	ldr	r1, [pc, #56]	; (194ec <btrfs_list_setup_print_column@@Base+0x40>)
   194b4:	movs	r2, #126	; 0x7e
   194b6:	ldr	r0, [pc, #56]	; (194f0 <btrfs_list_setup_print_column@@Base+0x44>)
   194b8:	add	r1, pc
   194ba:	adds	r1, #23
   194bc:	add	r0, pc
   194be:	bl	192f8 <rb_first_postorder@@Base+0xb36>
   194c2:	beq.n	194d4 <btrfs_list_setup_print_column@@Base+0x28>
   194c4:	ldr	r3, [pc, #44]	; (194f4 <btrfs_list_setup_print_column@@Base+0x48>)
   194c6:	movs	r2, #12
   194c8:	add	r3, pc
   194ca:	mla	r0, r2, r0, r3
   194ce:	movs	r3, #1
   194d0:	str	r3, [r0, #8]
   194d2:	pop	{r3, pc}
   194d4:	ldr	r2, [pc, #32]	; (194f8 <btrfs_list_setup_print_column@@Base+0x4c>)
   194d6:	movs	r3, #0
   194d8:	movs	r1, #1
   194da:	add	r2, pc
   194dc:	adds	r3, #1
   194de:	str	r1, [r2, #8]
   194e0:	cmp	r3, #10
   194e2:	add.w	r2, r2, #12
   194e6:	bne.n	194dc <btrfs_list_setup_print_column@@Base+0x30>
   194e8:	b.n	194d2 <btrfs_list_setup_print_column@@Base+0x26>
   194ea:	nop
   194ec:	ldrb	r3, [r2, #25]
   194ee:	movs	r2, r0
   194f0:	ldrb	r6, [r1, #17]
   194f2:	movs	r2, r0
   194f4:	cmp	r4, #88	; 0x58
   194f6:	movs	r5, r0
   194f8:	cmp	r4, #70	; 0x46
   194fa:	movs	r5, r0

000194fc <btrfs_list_alloc_comparer_set@@Base>:
   194fc:	push	{r4, lr}
   194fe:	movs	r1, #72	; 0x48
   19500:	ldr	r4, [pc, #36]	; (19528 <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   19502:	movs	r0, #1
   19504:	add	r4, pc
   19506:	blx	8ab8 <calloc@plt+0x4>
   1950a:	cbnz	r0, 19520 <btrfs_list_alloc_comparer_set@@Base+0x24>
   1950c:	ldr	r3, [pc, #28]	; (1952c <btrfs_list_alloc_comparer_set@@Base+0x30>)
   1950e:	ldr	r0, [pc, #32]	; (19530 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   19510:	ldr	r3, [r4, r3]
   19512:	add	r0, pc
   19514:	ldr	r1, [r3, #0]
   19516:	blx	91a8 <fputs@plt+0x4>
   1951a:	movs	r0, #1
   1951c:	blx	8f10 <exit@plt>
   19520:	movs	r2, #8
   19522:	str	r2, [r0, #0]
   19524:	pop	{r4, pc}
   19526:	nop
   19528:	adds	r4, r2, r0
   1952a:	movs	r5, r0
   1952c:	lsls	r4, r3, #10
   1952e:	movs	r0, r0
   19530:	ldrb	r7, [r2, #12]
   19532:	movs	r2, r0

00019534 <btrfs_list_get_default_subvolume@@Base>:
   19534:	push	{r4, r5, r6, r7, lr}
   19536:	mov	r5, r1
   19538:	ldr	r1, [pc, #184]	; (195f4 <btrfs_list_get_default_subvolume@@Base+0xc0>)
   1953a:	sub.w	sp, sp, #4096	; 0x1000
   1953e:	ldr	r2, [pc, #184]	; (195f8 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   19540:	sub	sp, #12
   19542:	add	r1, pc
   19544:	add.w	r3, sp, #4096	; 0x1000
   19548:	add	r7, sp, #8
   1954a:	adds	r3, #4
   1954c:	ldr	r2, [r1, r2]
   1954e:	mov	r4, sp
   19550:	mov	r6, r0
   19552:	mov	r0, r4
   19554:	ldr	r2, [r2, #0]
   19556:	str	r2, [r3, #0]
   19558:	mov.w	r2, #0
   1955c:	movs	r1, #0
   1955e:	mov.w	r2, #4096	; 0x1000
   19562:	blx	8f98 <memset@plt+0x4>
   19566:	movs	r2, #1
   19568:	movs	r3, #0
   1956a:	ldr	r1, [pc, #132]	; (195f0 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   1956c:	strd	r2, r3, [r7, #-8]
   19570:	mov	r0, r6
   19572:	movs	r2, #6
   19574:	movs	r3, #1
   19576:	str	r3, [r7, #56]	; 0x38
   19578:	movs	r3, #0
   1957a:	strd	r2, r3, [r7, #8]
   1957e:	strd	r2, r3, [r4, #8]
   19582:	mov.w	r2, #4294967295	; 0xffffffff
   19586:	movs	r3, #84	; 0x54
   19588:	strd	r3, r3, [r7, #48]	; 0x30
   1958c:	mov.w	r3, #4294967295	; 0xffffffff
   19590:	strd	r2, r3, [r7, #24]
   19594:	strd	r2, r3, [r7, #40]	; 0x28
   19598:	mov	r2, r4
   1959a:	blx	8d48 <ioctl@plt>
   1959e:	cmp	r0, #0
   195a0:	blt.n	195c8 <btrfs_list_get_default_subvolume@@Base+0x94>
   195a2:	ldr	r3, [r7, #56]	; 0x38
   195a4:	cbz	r3, 195e2 <btrfs_list_get_default_subvolume@@Base+0xae>
   195a6:	ldr	r3, [r7, #120]	; 0x78
   195a8:	cmp	r3, #84	; 0x54
   195aa:	bne.n	195e2 <btrfs_list_get_default_subvolume@@Base+0xae>
   195ac:	ldr	r0, [pc, #76]	; (195fc <btrfs_list_get_default_subvolume@@Base+0xc8>)
   195ae:	add.w	r1, sp, #166	; 0xa6
   195b2:	ldrh.w	r2, [r7, #155]	; 0x9b
   195b6:	add	r0, pc
   195b8:	blx	91b4 <strncmp@plt>
   195bc:	cbnz	r0, 195e2 <btrfs_list_get_default_subvolume@@Base+0xae>
   195be:	ldrd	r2, r3, [r7, #128]	; 0x80
   195c2:	movs	r0, #0
   195c4:	strd	r2, r3, [r5]
   195c8:	ldr	r1, [pc, #52]	; (19600 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   195ca:	add.w	r3, sp, #4096	; 0x1000
   195ce:	ldr	r2, [pc, #40]	; (195f8 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   195d0:	adds	r3, #4
   195d2:	add	r1, pc
   195d4:	ldr	r2, [r1, r2]
   195d6:	ldr	r1, [r2, #0]
   195d8:	ldr	r2, [r3, #0]
   195da:	eors	r1, r2
   195dc:	beq.n	195e8 <btrfs_list_get_default_subvolume@@Base+0xb4>
   195de:	blx	8c90 <__stack_chk_fail@plt>
   195e2:	movs	r2, #0
   195e4:	movs	r3, #0
   195e6:	b.n	195c2 <btrfs_list_get_default_subvolume@@Base+0x8e>
   195e8:	add.w	sp, sp, #4096	; 0x1000
   195ec:	add	sp, #12
   195ee:	pop	{r4, r5, r6, r7, pc}
   195f0:	str	r4, [sp, #68]	; 0x44
   195f2:	beq.n	195f6 <btrfs_list_get_default_subvolume@@Base+0xc2>
   195f4:	asrs	r6, r2, #31
   195f6:	movs	r5, r0
   195f8:	lsls	r0, r1, #10
   195fa:	movs	r0, r0
   195fc:	ldrsh	r3, [r3, r2]
   195fe:	movs	r2, r0
   19600:	asrs	r6, r0, #29
   19602:	movs	r5, r0

00019604 <btrfs_list_alloc_filter_set@@Base>:
   19604:	push	{r4, lr}
   19606:	mov.w	r1, #432	; 0x1b0
   1960a:	ldr	r4, [pc, #36]	; (19630 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   1960c:	movs	r0, #1
   1960e:	add	r4, pc
   19610:	blx	8ab8 <calloc@plt+0x4>
   19614:	cbnz	r0, 1962a <btrfs_list_alloc_filter_set@@Base+0x26>
   19616:	ldr	r3, [pc, #28]	; (19634 <btrfs_list_alloc_filter_set@@Base+0x30>)
   19618:	ldr	r0, [pc, #28]	; (19638 <btrfs_list_alloc_filter_set@@Base+0x34>)
   1961a:	ldr	r3, [r4, r3]
   1961c:	add	r0, pc
   1961e:	ldr	r1, [r3, #0]
   19620:	blx	91a8 <fputs@plt+0x4>
   19624:	movs	r0, #1
   19626:	blx	8f10 <exit@plt>
   1962a:	movs	r2, #26
   1962c:	str	r2, [r0, #0]
   1962e:	pop	{r4, pc}
   19630:	asrs	r2, r1, #28
   19632:	movs	r5, r0
   19634:	lsls	r4, r3, #10
   19636:	movs	r0, r0
   19638:	ldrb	r5, [r1, #8]
   1963a:	movs	r2, r0

0001963c <btrfs_list_setup_filter@@Base>:
   1963c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   19640:	mov	r9, r0
   19642:	ldr	r4, [r0, #0]
   19644:	mov	r6, r1
   19646:	ldr.w	sl, [pc, #208]	; 19718 <btrfs_list_setup_filter@@Base+0xdc>
   1964a:	mov	r8, r2
   1964c:	mov	r7, r3
   1964e:	add	sl, pc
   19650:	cbnz	r4, 19664 <btrfs_list_setup_filter@@Base+0x28>
   19652:	ldr	r1, [pc, #200]	; (1971c <btrfs_list_setup_filter@@Base+0xe0>)
   19654:	movw	r2, #1210	; 0x4ba
   19658:	ldr	r0, [pc, #196]	; (19720 <btrfs_list_setup_filter@@Base+0xe4>)
   1965a:	add	r1, pc
   1965c:	adds	r1, #53	; 0x35
   1965e:	add	r0, pc
   19660:	bl	192f8 <rb_first_postorder@@Base+0xb36>
   19664:	cmp	r1, #12
   19666:	bls.n	19678 <btrfs_list_setup_filter@@Base+0x3c>
   19668:	ldr	r1, [pc, #184]	; (19724 <btrfs_list_setup_filter@@Base+0xe8>)
   1966a:	movw	r2, #1211	; 0x4bb
   1966e:	ldr	r0, [pc, #184]	; (19728 <btrfs_list_setup_filter@@Base+0xec>)
   19670:	add	r1, pc
   19672:	adds	r1, #53	; 0x35
   19674:	add	r0, pc
   19676:	b.n	19660 <btrfs_list_setup_filter@@Base+0x24>
   19678:	ldrd	r3, r1, [r4]
   1967c:	cmp	r1, r3
   1967e:	ble.n	19690 <btrfs_list_setup_filter@@Base+0x54>
   19680:	ldr	r1, [pc, #168]	; (1972c <btrfs_list_setup_filter@@Base+0xf0>)
   19682:	movw	r2, #1212	; 0x4bc
   19686:	ldr	r0, [pc, #168]	; (19730 <btrfs_list_setup_filter@@Base+0xf4>)
   19688:	add	r1, pc
   1968a:	adds	r1, #53	; 0x35
   1968c:	add	r0, pc
   1968e:	b.n	19660 <btrfs_list_setup_filter@@Base+0x24>
   19690:	bne.n	196da <btrfs_list_setup_filter@@Base+0x9e>
   19692:	adds	r1, #27
   19694:	mov	r0, r4
   19696:	lsls	r1, r1, #4
   19698:	blx	8cb8 <realloc@plt+0x4>
   1969c:	mov	r5, r0
   1969e:	cbnz	r0, 196bc <btrfs_list_setup_filter@@Base+0x80>
   196a0:	ldr	r3, [pc, #144]	; (19734 <btrfs_list_setup_filter@@Base+0xf8>)
   196a2:	ldr	r0, [pc, #148]	; (19738 <btrfs_list_setup_filter@@Base+0xfc>)
   196a4:	ldr.w	r3, [sl, r3]
   196a8:	add	r0, pc
   196aa:	ldr	r1, [r3, #0]
   196ac:	blx	91a8 <fputs@plt+0x4>
   196b0:	mov	r0, r4
   196b2:	blx	8b84 <free@plt+0x4>
   196b6:	movs	r0, #1
   196b8:	blx	8f10 <exit@plt>
   196bc:	ldr	r0, [r0, #0]
   196be:	mov.w	r2, #416	; 0x1a0
   196c2:	movs	r1, #0
   196c4:	mov	r4, r5
   196c6:	adds	r0, #1
   196c8:	add.w	r0, r5, r0, lsl #4
   196cc:	blx	8f98 <memset@plt+0x4>
   196d0:	ldr	r3, [r5, #0]
   196d2:	adds	r3, #26
   196d4:	str	r3, [r5, #0]
   196d6:	str.w	r5, [r9]
   196da:	ldr	r0, [r4, #4]
   196dc:	add.w	r3, r4, r0, lsl #4
   196e0:	lsls	r1, r0, #4
   196e2:	ldr	r2, [r3, #16]
   196e4:	cbz	r2, 196f6 <btrfs_list_setup_filter@@Base+0xba>
   196e6:	ldr	r1, [pc, #84]	; (1973c <btrfs_list_setup_filter@@Base+0x100>)
   196e8:	movw	r2, #1234	; 0x4d2
   196ec:	ldr	r0, [pc, #80]	; (19740 <btrfs_list_setup_filter@@Base+0x104>)
   196ee:	add	r1, pc
   196f0:	adds	r1, #53	; 0x35
   196f2:	add	r0, pc
   196f4:	b.n	19660 <btrfs_list_setup_filter@@Base+0x24>
   196f6:	cmp	r6, #12
   196f8:	add	r1, r4
   196fa:	add.w	r0, r0, #1
   196fe:	itt	eq
   19700:	moveq	r2, #1
   19702:	streq	r2, [r4, #8]
   19704:	ldr	r2, [pc, #60]	; (19744 <btrfs_list_setup_filter@@Base+0x108>)
   19706:	add	r2, pc
   19708:	ldr.w	r2, [r2, r6, lsl #2]
   1970c:	str	r2, [r3, #16]
   1970e:	strd	r8, r7, [r1, #24]
   19712:	str	r0, [r4, #4]
   19714:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19718:	asrs	r2, r1, #27
   1971a:	movs	r5, r0
   1971c:	ldrb	r1, [r6, #18]
   1971e:	movs	r2, r0
   19720:	str	r2, [r3, #16]
   19722:	movs	r2, r0
   19724:	ldrb	r3, [r3, #18]
   19726:	movs	r2, r0
   19728:	ldrb	r6, [r7, #10]
   1972a:	movs	r2, r0
   1972c:	ldrb	r3, [r0, #18]
   1972e:	movs	r2, r0
   19730:	str	r6, [r7, #20]
   19732:	movs	r2, r0
   19734:	lsls	r4, r3, #10
   19736:	movs	r0, r0
   19738:	ldrb	r1, [r0, #6]
   1973a:	movs	r2, r0
   1973c:	ldrb	r5, [r3, #16]
   1973e:	movs	r2, r0
   19740:	str	r4, [r6, #16]
   19742:	movs	r2, r0
   19744:	asrs	r6, r2, #32
   19746:	movs	r5, r0

00019748 <btrfs_list_find_updated_files@@Base>:
   19748:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1974c:	mov	r7, r2
   1974e:	vpush	{d8-d9}
   19752:	mov	r6, r3
   19754:	ldr	r1, [pc, #904]	; (19ae0 <btrfs_list_find_updated_files@@Base+0x398>)
   19756:	mov.w	r9, #4096	; 0x1000
   1975a:	ldr	r2, [pc, #904]	; (19ae4 <btrfs_list_find_updated_files@@Base+0x39c>)
   1975c:	add	r1, pc
   1975e:	vmov	s16, r0
   19762:	sub.w	sp, sp, #12480	; 0x30c0
   19766:	sub	sp, #20
   19768:	ldr	r2, [r1, r2]
   1976a:	add.w	r3, sp, #12480	; 0x30c0
   1976e:	add.w	r8, sp, #200	; 0xc8
   19772:	ldr	r2, [r2, #0]
   19774:	str	r2, [r3, #12]
   19776:	mov.w	r2, #0
   1977a:	adds	r3, #12
   1977c:	add	r3, sp, #144	; 0x90
   1977e:	movs	r2, #53	; 0x35
   19780:	movs	r1, #0
   19782:	str	r3, [sp, #40]	; 0x28
   19784:	mov	r0, r3
   19786:	add	r4, sp, #208	; 0xd0
   19788:	blx	8f98 <memset@plt+0x4>
   1978c:	mov	r2, r9
   1978e:	movs	r1, #0
   19790:	mov	r0, r8
   19792:	blx	8f98 <memset@plt+0x4>
   19796:	movs	r3, #108	; 0x6c
   19798:	str.w	r3, [r8, #60]	; 0x3c
   1979c:	add.w	r3, sp, #12544	; 0x3100
   197a0:	adds	r3, #8
   197a2:	add.w	r5, sp, #4288	; 0x10c0
   197a6:	adds	r5, #16
   197a8:	strd	r7, r6, [r4, #-8]
   197ac:	sub.w	fp, r5, #8
   197b0:	ldrd	r3, r4, [r3]
   197b4:	mov	r2, r9
   197b6:	movs	r1, #0
   197b8:	mov	r0, fp
   197ba:	mov.w	r6, #4294967295	; 0xffffffff
   197be:	mov.w	r7, #4294967295	; 0xffffffff
   197c2:	strd	r3, r4, [r8, #40]	; 0x28
   197c6:	strd	r6, r7, [r8, #16]
   197ca:	movs	r4, #0
   197cc:	strd	r6, r7, [r8, #32]
   197d0:	strd	r6, r7, [r8, #48]	; 0x30
   197d4:	str.w	r9, [r8, #64]	; 0x40
   197d8:	blx	8f98 <memset@plt+0x4>
   197dc:	vmov	r0, s16
   197e0:	mov	r2, fp
   197e2:	ldr	r1, [pc, #756]	; (19ad8 <btrfs_list_find_updated_files@@Base+0x390>)
   197e4:	mov.w	r3, #256	; 0x100
   197e8:	strd	r3, r4, [fp, #8]
   197ec:	blx	8d48 <ioctl@plt>
   197f0:	movs	r4, #0
   197f2:	mov.w	r3, #256	; 0x100
   197f6:	cmp	r0, #0
   197f8:	bge.n	1987a <btrfs_list_find_updated_files@@Base+0x132>
   197fa:	ldr	r0, [pc, #748]	; (19ae8 <btrfs_list_find_updated_files@@Base+0x3a0>)
   197fc:	mov	r2, r3
   197fe:	mov	r3, r4
   19800:	add	r0, pc
   19802:	bl	1bd1c <__btrfs_error@@Base>
   19806:	movs	r3, #0
   19808:	movs	r4, #0
   1980a:	strd	r3, r4, [sp, #56]	; 0x38
   1980e:	movs	r3, #0
   19810:	movs	r2, #0
   19812:	strd	r2, r3, [sp, #72]	; 0x48
   19816:	movs	r4, #0
   19818:	strd	r2, r3, [sp, #88]	; 0x58
   1981c:	mov	r7, r4
   1981e:	ldr	r3, [pc, #716]	; (19aec <btrfs_list_find_updated_files@@Base+0x3a4>)
   19820:	add	r3, pc
   19822:	vmov	s18, r3
   19826:	vmov	r0, s16
   1982a:	mov	r2, r8
   1982c:	ldr	r1, [pc, #684]	; (19adc <btrfs_list_find_updated_files@@Base+0x394>)
   1982e:	blx	8d48 <ioctl@plt>
   19832:	subs	r3, r0, #0
   19834:	vmov	s17, r3
   19838:	bge.w	199a8 <btrfs_list_find_updated_files@@Base+0x260>
   1983c:	ldr	r0, [pc, #688]	; (19af0 <btrfs_list_find_updated_files@@Base+0x3a8>)
   1983e:	add	r0, pc
   19840:	bl	1bd1c <__btrfs_error@@Base>
   19844:	mov	r0, r7
   19846:	blx	8b84 <free@plt+0x4>
   1984a:	mov	r0, r4
   1984c:	blx	8b84 <free@plt+0x4>
   19850:	ldr	r1, [pc, #672]	; (19af4 <btrfs_list_find_updated_files@@Base+0x3ac>)
   19852:	ldrd	r2, r3, [sp, #56]	; 0x38
   19856:	movs	r0, #1
   19858:	add	r1, pc
   1985a:	blx	900c <__printf_chk@plt+0x4>
   1985e:	ldr	r1, [pc, #664]	; (19af8 <btrfs_list_find_updated_files@@Base+0x3b0>)
   19860:	ldr	r2, [pc, #640]	; (19ae4 <btrfs_list_find_updated_files@@Base+0x39c>)
   19862:	add.w	r3, sp, #12480	; 0x30c0
   19866:	add	r1, pc
   19868:	adds	r3, #12
   1986a:	ldr	r2, [r1, r2]
   1986c:	ldr	r1, [r2, #0]
   1986e:	ldr	r2, [r3, #0]
   19870:	eors	r1, r2
   19872:	beq.w	19d52 <btrfs_list_find_updated_files@@Base+0x60a>
   19876:	blx	8c90 <__stack_chk_fail@plt>
   1987a:	add.w	sl, sp, #8384	; 0x20c0
   1987e:	mov	r2, r9
   19880:	add.w	sl, sl, #16
   19884:	movs	r1, #0
   19886:	sub.w	r4, sl, #8
   1988a:	mov	r0, r4
   1988c:	blx	8f98 <memset@plt+0x4>
   19890:	ldrd	r2, r3, [r5, #-8]
   19894:	movs	r0, #1
   19896:	movs	r1, #0
   19898:	strd	r0, r1, [sl, #-8]
   1989c:	strd	r2, r3, [r4, #8]
   198a0:	strd	r2, r3, [r4, #16]
   198a4:	movs	r3, #132	; 0x84
   198a6:	movs	r2, #0
   198a8:	strd	r3, r3, [r4, #56]	; 0x38
   198ac:	movs	r3, #0
   198ae:	strd	r2, r3, [sp, #56]	; 0x38
   198b2:	ldr	r3, [sp, #40]	; 0x28
   198b4:	strd	r6, r7, [r4, #32]
   198b8:	sub.w	r5, r3, #32
   198bc:	strd	r6, r7, [r4, #48]	; 0x30
   198c0:	str.w	r9, [r4, #64]	; 0x40
   198c4:	vmov	r0, s16
   198c8:	mov	r2, r4
   198ca:	ldr	r1, [pc, #528]	; (19adc <btrfs_list_find_updated_files@@Base+0x394>)
   198cc:	blx	8d48 <ioctl@plt>
   198d0:	cmp	r0, #0
   198d2:	bge.n	198de <btrfs_list_find_updated_files@@Base+0x196>
   198d4:	ldr	r0, [pc, #548]	; (19afc <btrfs_list_find_updated_files@@Base+0x3b4>)
   198d6:	add	r0, pc
   198d8:	bl	1bd1c <__btrfs_error@@Base>
   198dc:	b.n	19806 <btrfs_list_find_updated_files@@Base+0xbe>
   198de:	ldr.w	ip, [r4, #64]	; 0x40
   198e2:	cmp.w	ip, #0
   198e6:	beq.n	1980e <btrfs_list_find_updated_files@@Base+0xc6>
   198e8:	movs	r7, #0
   198ea:	add.w	r3, sl, #96	; 0x60
   198ee:	mov	r6, r7
   198f0:	str	r3, [sp, #40]	; 0x28
   198f2:	add.w	r3, sp, #8448	; 0x2100
   198f6:	adds	r3, #48	; 0x30
   198f8:	str	r3, [sp, #48]	; 0x30
   198fa:	ldr	r3, [sp, #40]	; 0x28
   198fc:	mov	lr, r5
   198fe:	add	r3, r6
   19900:	add.w	r9, r3, #32
   19904:	ldr	r0, [r3, #0]
   19906:	adds	r3, #8
   19908:	ldr.w	r1, [r3, #-4]
   1990c:	cmp	r3, r9
   1990e:	mov	r2, lr
   19910:	stmia	r2!, {r0, r1}
   19912:	mov	lr, r2
   19914:	bne.n	19904 <btrfs_list_find_updated_files@@Base+0x1bc>
   19916:	ldrd	r0, r1, [r5, #16]
   1991a:	add.w	lr, r6, #32
   1991e:	ldrd	r2, r3, [r5, #8]
   19922:	ldr.w	r9, [r5, #24]
   19926:	strd	r0, r1, [r4, #24]
   1992a:	ldrd	r0, r1, [fp]
   1992e:	ldr	r6, [r5, #28]
   19930:	cmp	r1, r3
   19932:	strd	r2, r3, [r4, #8]
   19936:	it	eq
   19938:	cmpeq	r0, r2
   1993a:	add	r6, lr
   1993c:	str.w	r9, [r4, #56]	; 0x38
   19940:	bcs.n	19976 <btrfs_list_find_updated_files@@Base+0x22e>
   19942:	ldrd	r0, r1, [r4, #24]
   19946:	adds	r6, r1, #1
   19948:	it	eq
   1994a:	cmpeq.w	r0, #4294967295	; 0xffffffff
   1994e:	beq.w	1980e <btrfs_list_find_updated_files@@Base+0xc6>
   19952:	adds	r2, r0, #1
   19954:	adc.w	r3, r1, #0
   19958:	strd	r2, r3, [r4, #24]
   1995c:	ldr	r3, [r4, #56]	; 0x38
   1995e:	cmp	r3, #132	; 0x84
   19960:	bne.w	1980e <btrfs_list_find_updated_files@@Base+0xc6>
   19964:	ldrd	r0, r1, [r4, #8]
   19968:	ldrd	r2, r3, [fp]
   1996c:	cmp	r1, r3
   1996e:	it	eq
   19970:	cmpeq	r0, r2
   19972:	beq.n	198c4 <btrfs_list_find_updated_files@@Base+0x17c>
   19974:	b.n	1980e <btrfs_list_find_updated_files@@Base+0xc6>
   19976:	cmp	r3, r1
   19978:	it	eq
   1997a:	cmpeq	r2, r0
   1997c:	bne.n	199a0 <btrfs_list_find_updated_files@@Base+0x258>
   1997e:	cmp.w	r9, #132	; 0x84
   19982:	bne.n	199a0 <btrfs_list_find_updated_files@@Base+0x258>
   19984:	ldr	r3, [sp, #48]	; 0x30
   19986:	ldrd	r0, r1, [sp, #56]	; 0x38
   1998a:	add	lr, r3
   1998c:	ldr.w	r2, [lr, #160]	; 0xa0
   19990:	ldr.w	r3, [lr, #164]	; 0xa4
   19994:	cmp	r1, r3
   19996:	it	eq
   19998:	cmpeq	r0, r2
   1999a:	it	cc
   1999c:	strdcc	r2, r3, [sp, #56]	; 0x38
   199a0:	adds	r7, #1
   199a2:	cmp	r7, ip
   199a4:	bne.n	198fa <btrfs_list_find_updated_files@@Base+0x1b2>
   199a6:	b.n	19942 <btrfs_list_find_updated_files@@Base+0x1fa>
   199a8:	ldr.w	r3, [r8, #64]	; 0x40
   199ac:	cmp	r3, #0
   199ae:	beq.w	19844 <btrfs_list_find_updated_files@@Base+0xfc>
   199b2:	movs	r3, #0
   199b4:	str	r3, [sp, #84]	; 0x54
   199b6:	mov	r5, r3
   199b8:	add	r3, sp, #304	; 0x130
   199ba:	str	r3, [sp, #108]	; 0x6c
   199bc:	ldr.w	r3, [r8, #64]	; 0x40
   199c0:	ldr	r2, [sp, #84]	; 0x54
   199c2:	cmp	r3, r2
   199c4:	bhi.n	199ea <btrfs_list_find_updated_files@@Base+0x2a2>
   199c6:	ldrd	r0, r1, [r8, #24]
   199ca:	mov.w	r3, #4096	; 0x1000
   199ce:	str.w	r3, [r8, #64]	; 0x40
   199d2:	adds	r2, r1, #1
   199d4:	it	eq
   199d6:	cmpeq.w	r0, #4294967295	; 0xffffffff
   199da:	beq.w	19d00 <btrfs_list_find_updated_files@@Base+0x5b8>
   199de:	adds	r2, r0, #1
   199e0:	adc.w	r3, r1, #0
   199e4:	strd	r2, r3, [r8, #24]
   199e8:	b.n	19826 <btrfs_list_find_updated_files@@Base+0xde>
   199ea:	ldr	r3, [sp, #108]	; 0x6c
   199ec:	add.w	sl, sp, #112	; 0x70
   199f0:	add	r3, r5
   199f2:	mov	r6, sl
   199f4:	add.w	ip, r3, #32
   199f8:	ldr	r0, [r3, #0]
   199fa:	adds	r3, #8
   199fc:	ldr.w	r1, [r3, #-4]
   19a00:	cmp	r3, ip
   19a02:	mov	r2, r6
   19a04:	stmia	r2!, {r0, r1}
   19a06:	mov	r6, r2
   19a08:	bne.n	199f8 <btrfs_list_find_updated_files@@Base+0x2b0>
   19a0a:	add.w	r3, r5, #32
   19a0e:	str	r3, [sp, #104]	; 0x68
   19a10:	ldr.w	r3, [sl, #28]
   19a14:	str	r3, [sp, #96]	; 0x60
   19a16:	cmp	r3, #0
   19a18:	beq.n	19ac8 <btrfs_list_find_updated_files@@Base+0x380>
   19a1a:	ldrd	r2, r3, [sp, #104]	; 0x68
   19a1e:	adds	r5, r3, r2
   19a20:	ldr.w	r3, [sl, #24]
   19a24:	str	r3, [sp, #100]	; 0x64
   19a26:	ldrd	r2, r3, [sl, #8]
   19a2a:	strd	r2, r3, [sp, #40]	; 0x28
   19a2e:	ldr	r3, [sp, #100]	; 0x64
   19a30:	cmp	r3, #108	; 0x6c
   19a32:	bne.w	19cc2 <btrfs_list_find_updated_files@@Base+0x57a>
   19a36:	ldr	r3, [r5, #0]
   19a38:	add.w	r1, sp, #12544	; 0x3100
   19a3c:	adds	r1, #8
   19a3e:	str	r3, [sp, #48]	; 0x30
   19a40:	ldr	r3, [r5, #4]
   19a42:	ldrd	r0, r1, [r1]
   19a46:	str	r3, [sp, #52]	; 0x34
   19a48:	ldrd	r2, r3, [sp, #48]	; 0x30
   19a4c:	cmp	r3, r1
   19a4e:	it	eq
   19a50:	cmpeq	r2, r0
   19a52:	bcc.w	19cc2 <btrfs_list_find_updated_files@@Base+0x57a>
   19a56:	ldrd	r2, r3, [sp, #72]	; 0x48
   19a5a:	ldrd	r0, r1, [sp, #40]	; 0x28
   19a5e:	cmp	r3, r1
   19a60:	it	eq
   19a62:	cmpeq	r2, r0
   19a64:	bne.n	19acc <btrfs_list_find_updated_files@@Base+0x384>
   19a66:	cmp	r4, #0
   19a68:	bne.w	19bde <btrfs_list_find_updated_files@@Base+0x496>
   19a6c:	mov.w	r2, #4096	; 0x1000
   19a70:	movs	r1, #0
   19a72:	mov	r0, fp
   19a74:	blx	8f98 <memset@plt+0x4>
   19a78:	ldrd	r3, r4, [sp, #40]	; 0x28
   19a7c:	movs	r1, #12
   19a7e:	mov.w	r2, #4294967295	; 0xffffffff
   19a82:	str.w	r1, [fp, #60]	; 0x3c
   19a86:	strd	r3, r4, [fp, #8]
   19a8a:	strd	r3, r4, [fp, #16]
   19a8e:	mov.w	r3, #4294967295	; 0xffffffff
   19a92:	str.w	r1, [fp, #56]	; 0x38
   19a96:	strd	r2, r3, [fp, #32]
   19a9a:	strd	r2, r3, [fp, #48]	; 0x30
   19a9e:	movs	r3, #1
   19aa0:	vmov	r0, s16
   19aa4:	mov	r2, fp
   19aa6:	ldr	r1, [pc, #52]	; (19adc <btrfs_list_find_updated_files@@Base+0x394>)
   19aa8:	str.w	r3, [fp, #64]	; 0x40
   19aac:	blx	8d48 <ioctl@plt>
   19ab0:	cmp	r0, #0
   19ab2:	bge.n	19b04 <btrfs_list_find_updated_files@@Base+0x3bc>
   19ab4:	ldr	r0, [pc, #72]	; (19b00 <btrfs_list_find_updated_files@@Base+0x3b8>)
   19ab6:	add	r0, pc
   19ab8:	bl	1bd1c <__btrfs_error@@Base>
   19abc:	ldrd	r3, r4, [sp, #40]	; 0x28
   19ac0:	strd	r3, r4, [sp, #72]	; 0x48
   19ac4:	movs	r4, #0
   19ac6:	b.n	19cc2 <btrfs_list_find_updated_files@@Base+0x57a>
   19ac8:	add	r5, sp, #144	; 0x90
   19aca:	b.n	19a20 <btrfs_list_find_updated_files@@Base+0x2d8>
   19acc:	cmp	r4, #0
   19ace:	beq.n	19a6c <btrfs_list_find_updated_files@@Base+0x324>
   19ad0:	mov	r0, r4
   19ad2:	blx	8b84 <free@plt+0x4>
   19ad6:	b.n	19a6c <btrfs_list_find_updated_files@@Base+0x324>
   19ad8:	str	r4, [sp, #72]	; 0x48
   19ada:	beq.n	19ade <btrfs_list_find_updated_files@@Base+0x396>
   19adc:	str	r4, [sp, #68]	; 0x44
   19ade:	beq.n	19ae2 <btrfs_list_find_updated_files@@Base+0x39a>
   19ae0:	asrs	r4, r7, #22
   19ae2:	movs	r5, r0
   19ae4:	lsls	r0, r1, #10
   19ae6:	movs	r0, r0
   19ae8:	ldrb	r3, [r2, #5]
   19aea:	movs	r2, r0
   19aec:	ldrb	r6, [r3, #6]
   19aee:	movs	r2, r0
   19af0:	ldrb	r7, [r7, #1]
   19af2:	movs	r2, r0
   19af4:	ldrb	r0, [r2, #7]
   19af6:	movs	r2, r0
   19af8:	asrs	r2, r6, #18
   19afa:	movs	r5, r0
   19afc:	strb	r7, [r4, #31]
   19afe:	movs	r2, r0
   19b00:	strb	r7, [r0, #24]
   19b02:	movs	r2, r0
   19b04:	ldr.w	r3, [fp, #64]	; 0x40
   19b08:	cmp	r3, #0
   19b0a:	beq.n	19abc <btrfs_list_find_updated_files@@Base+0x374>
   19b0c:	ldr.w	r3, [fp, #128]	; 0x80
   19b10:	cmp	r3, #12
   19b12:	bne.n	19abc <btrfs_list_find_updated_files@@Base+0x374>
   19b14:	ldrd	r3, r4, [fp, #120]	; 0x78
   19b18:	add.w	r0, sp, #4288	; 0x10c0
   19b1c:	adds	r0, #16
   19b1e:	ldrh.w	r1, [fp, #144]	; 0x90
   19b22:	adds	r0, #138	; 0x8a
   19b24:	strd	r3, r4, [sp, #64]	; 0x40
   19b28:	blx	8bc0 <strndup@plt>
   19b2c:	ldrd	r3, r4, [sp, #64]	; 0x40
   19b30:	ldrd	r1, r2, [sp, #88]	; 0x58
   19b34:	cmp	r4, r2
   19b36:	it	eq
   19b38:	cmpeq	r3, r1
   19b3a:	mov	r6, r0
   19b3c:	bne.n	19b44 <btrfs_list_find_updated_files@@Base+0x3fc>
   19b3e:	cmp	r7, #0
   19b40:	bne.w	19c86 <btrfs_list_find_updated_files@@Base+0x53e>
   19b44:	add.w	r4, sp, #8384	; 0x20c0
   19b48:	mov.w	r2, #4096	; 0x1000
   19b4c:	adds	r4, #8
   19b4e:	movs	r1, #0
   19b50:	mov	r0, r4
   19b52:	blx	8f98 <memset@plt+0x4>
   19b56:	ldrd	r2, r3, [sp, #64]	; 0x40
   19b5a:	vmov	r0, s16
   19b5e:	ldr	r1, [pc, #516]	; (19d64 <btrfs_list_find_updated_files@@Base+0x61c>)
   19b60:	strd	r2, r3, [r4, #8]
   19b64:	mov	r2, r4
   19b66:	blx	8d48 <ioctl@plt>
   19b6a:	subs.w	r9, r0, #0
   19b6e:	bge.n	19bb4 <btrfs_list_find_updated_files@@Base+0x46c>
   19b70:	ldr	r0, [pc, #500]	; (19d68 <btrfs_list_find_updated_files@@Base+0x620>)
   19b72:	ldrd	r2, r3, [sp, #64]	; 0x40
   19b76:	add	r0, pc
   19b78:	bl	1bd1c <__btrfs_error@@Base>
   19b7c:	mov	r0, r9
   19b7e:	blx	8f1c <strlen@plt>
   19b82:	mov	r4, r0
   19b84:	mov	r0, r6
   19b86:	blx	8f1c <strlen@plt>
   19b8a:	add	r0, r4
   19b8c:	adds	r0, #1
   19b8e:	blx	8e40 <malloc@plt+0x4>
   19b92:	mov	r4, r0
   19b94:	cbz	r0, 19ba4 <btrfs_list_find_updated_files@@Base+0x45c>
   19b96:	mov	r1, r9
   19b98:	blx	8d9c <strcpy@plt>
   19b9c:	mov	r1, r6
   19b9e:	mov	r0, r4
   19ba0:	blx	8d3c <strcat@plt+0x4>
   19ba4:	cbz	r7, 19bb0 <btrfs_list_find_updated_files@@Base+0x468>
   19ba6:	cmp	r9, r7
   19ba8:	beq.n	19bca <btrfs_list_find_updated_files@@Base+0x482>
   19baa:	mov	r0, r7
   19bac:	blx	8b84 <free@plt+0x4>
   19bb0:	mov	r7, r9
   19bb2:	b.n	19bca <btrfs_list_find_updated_files@@Base+0x482>
   19bb4:	ldrb.w	r9, [r4, #16]
   19bb8:	cmp.w	r9, #0
   19bbc:	bne.n	19c68 <btrfs_list_find_updated_files@@Base+0x520>
   19bbe:	mov	r0, r6
   19bc0:	blx	8c78 <strdup@plt+0x4>
   19bc4:	mov	r4, r0
   19bc6:	cmp	r7, #0
   19bc8:	bne.n	19baa <btrfs_list_find_updated_files@@Base+0x462>
   19bca:	mov	r0, r6
   19bcc:	blx	8b84 <free@plt+0x4>
   19bd0:	cmp	r4, #0
   19bd2:	beq.w	19cee <btrfs_list_find_updated_files@@Base+0x5a6>
   19bd6:	ldrd	r2, r3, [sp, #64]	; 0x40
   19bda:	strd	r2, r3, [sp, #88]	; 0x58
   19bde:	ldrd	r2, r3, [sl, #16]
   19be2:	ldrb	r6, [r5, #20]
   19be4:	ldrb.w	r9, [r5, #16]
   19be8:	strd	r2, r3, [sp, #64]	; 0x40
   19bec:	subs	r3, r6, #1
   19bee:	cmp	r3, #1
   19bf0:	bhi.n	19c8a <btrfs_list_find_updated_files@@Base+0x542>
   19bf2:	ldr.w	r3, [r5, #45]	; 0x2d
   19bf6:	ldr.w	r0, [r5, #21]
   19bfa:	ldr.w	r1, [r5, #25]
   19bfe:	ldr.w	lr, [r5, #37]	; 0x25
   19c02:	ldr.w	ip, [r5, #41]	; 0x29
   19c06:	str	r3, [sp, #72]	; 0x48
   19c08:	ldr.w	r5, [r5, #49]	; 0x31
   19c0c:	ldrd	r2, r3, [sp, #48]	; 0x30
   19c10:	strd	r0, r1, [sp, #16]
   19c14:	movs	r0, #1
   19c16:	vmov	r1, s18
   19c1a:	strd	r2, r3, [sp, #32]
   19c1e:	ldr	r3, [sp, #72]	; 0x48
   19c20:	strd	lr, ip, [sp, #24]
   19c24:	strd	r3, r5, [sp, #8]
   19c28:	ldrd	r2, r3, [sp, #64]	; 0x40
   19c2c:	strd	r2, r3, [sp]
   19c30:	ldrd	r2, r3, [sp, #40]	; 0x28
   19c34:	blx	900c <__printf_chk@plt+0x4>
   19c38:	cmp.w	r9, #0
   19c3c:	beq.n	19d2a <btrfs_list_find_updated_files@@Base+0x5e2>
   19c3e:	ldr	r1, [pc, #300]	; (19d6c <btrfs_list_find_updated_files@@Base+0x624>)
   19c40:	movs	r0, #1
   19c42:	add	r1, pc
   19c44:	blx	900c <__printf_chk@plt+0x4>
   19c48:	cmp	r6, #2
   19c4a:	bne.n	19d34 <btrfs_list_find_updated_files@@Base+0x5ec>
   19c4c:	ldr	r2, [pc, #288]	; (19d70 <btrfs_list_find_updated_files@@Base+0x628>)
   19c4e:	add	r2, pc
   19c50:	ldr	r1, [pc, #288]	; (19d74 <btrfs_list_find_updated_files@@Base+0x62c>)
   19c52:	add	r1, pc
   19c54:	movs	r0, #1
   19c56:	blx	900c <__printf_chk@plt+0x4>
   19c5a:	ldr	r1, [pc, #284]	; (19d78 <btrfs_list_find_updated_files@@Base+0x630>)
   19c5c:	mov	r2, r4
   19c5e:	movs	r0, #1
   19c60:	add	r1, pc
   19c62:	blx	900c <__printf_chk@plt+0x4>
   19c66:	b.n	19cba <btrfs_list_find_updated_files@@Base+0x572>
   19c68:	add.w	r0, sp, #8384	; 0x20c0
   19c6c:	adds	r0, #24
   19c6e:	blx	8c78 <strdup@plt+0x4>
   19c72:	mov	r9, r0
   19c74:	cmp	r0, #0
   19c76:	bne.n	19b7c <btrfs_list_find_updated_files@@Base+0x434>
   19c78:	ldr	r0, [pc, #256]	; (19d7c <btrfs_list_find_updated_files@@Base+0x634>)
   19c7a:	mvn.w	r9, #11
   19c7e:	add	r0, pc
   19c80:	blx	8cf4 <perror@plt>
   19c84:	b.n	19b7c <btrfs_list_find_updated_files@@Base+0x434>
   19c86:	mov	r9, r7
   19c88:	b.n	19b7c <btrfs_list_find_updated_files@@Base+0x434>
   19c8a:	cbnz	r6, 19c9c <btrfs_list_find_updated_files@@Base+0x554>
   19c8c:	ldr	r3, [r5, #8]
   19c8e:	mov	lr, r6
   19c90:	mov	ip, r6
   19c92:	mov	r0, r6
   19c94:	mov	r1, r6
   19c96:	str	r3, [sp, #72]	; 0x48
   19c98:	ldr	r5, [r5, #12]
   19c9a:	b.n	19c0c <btrfs_list_find_updated_files@@Base+0x4c4>
   19c9c:	ldrd	r2, r3, [sp, #48]	; 0x30
   19ca0:	mov	r1, r6
   19ca2:	ldr	r0, [pc, #220]	; (19d80 <btrfs_list_find_updated_files@@Base+0x638>)
   19ca4:	strd	r2, r3, [sp, #8]
   19ca8:	add	r0, pc
   19caa:	ldrd	r2, r3, [sp, #64]	; 0x40
   19cae:	strd	r2, r3, [sp]
   19cb2:	ldrd	r2, r3, [sp, #40]	; 0x28
   19cb6:	bl	1bd1c <__btrfs_error@@Base>
   19cba:	ldrd	r2, r3, [sp, #40]	; 0x28
   19cbe:	strd	r2, r3, [sp, #72]	; 0x48
   19cc2:	ldr	r2, [sp, #104]	; 0x68
   19cc4:	ldr	r3, [sp, #96]	; 0x60
   19cc6:	add	r3, r2
   19cc8:	mov	r5, r3
   19cca:	ldrd	r2, r3, [sp, #40]	; 0x28
   19cce:	strd	r2, r3, [r8, #8]
   19cd2:	ldrd	r2, r3, [sl, #16]
   19cd6:	strd	r2, r3, [r8, #24]
   19cda:	ldr	r3, [sp, #100]	; 0x64
   19cdc:	str.w	r3, [r8, #56]	; 0x38
   19ce0:	ldr	r3, [sp, #84]	; 0x54
   19ce2:	adds	r3, #1
   19ce4:	str	r3, [sp, #84]	; 0x54
   19ce6:	b.n	199bc <btrfs_list_find_updated_files@@Base+0x274>
   19ce8:	ldr	r2, [pc, #152]	; (19d84 <btrfs_list_find_updated_files@@Base+0x63c>)
   19cea:	add	r2, pc
   19cec:	b.n	19d3c <btrfs_list_find_updated_files@@Base+0x5f4>
   19cee:	ldrd	r2, r3, [sp, #40]	; 0x28
   19cf2:	strd	r2, r3, [sp, #72]	; 0x48
   19cf6:	ldrd	r2, r3, [sp, #64]	; 0x40
   19cfa:	strd	r2, r3, [sp, #88]	; 0x58
   19cfe:	b.n	19cc2 <btrfs_list_find_updated_files@@Base+0x57a>
   19d00:	ldrd	r0, r1, [r8, #8]
   19d04:	adds	r3, r1, #1
   19d06:	it	eq
   19d08:	cmpeq.w	r0, #4294967295	; 0xffffffff
   19d0c:	beq.w	19844 <btrfs_list_find_updated_files@@Base+0xfc>
   19d10:	adds	r2, r0, #1
   19d12:	adc.w	r3, r1, #0
   19d16:	strd	r2, r3, [r8, #8]
   19d1a:	movs	r3, #0
   19d1c:	movs	r2, #0
   19d1e:	strd	r2, r3, [r8, #24]
   19d22:	movs	r3, #0
   19d24:	str.w	r3, [r8, #56]	; 0x38
   19d28:	b.n	19826 <btrfs_list_find_updated_files@@Base+0xde>
   19d2a:	cmp	r6, #2
   19d2c:	bne.n	19d42 <btrfs_list_find_updated_files@@Base+0x5fa>
   19d2e:	ldr	r2, [pc, #88]	; (19d88 <btrfs_list_find_updated_files@@Base+0x640>)
   19d30:	add	r2, pc
   19d32:	b.n	19c50 <btrfs_list_find_updated_files@@Base+0x508>
   19d34:	cmp	r6, #0
   19d36:	bne.n	19c5a <btrfs_list_find_updated_files@@Base+0x512>
   19d38:	ldr	r2, [pc, #80]	; (19d8c <btrfs_list_find_updated_files@@Base+0x644>)
   19d3a:	add	r2, pc
   19d3c:	ldr	r1, [pc, #80]	; (19d90 <btrfs_list_find_updated_files@@Base+0x648>)
   19d3e:	add	r1, pc
   19d40:	b.n	19c54 <btrfs_list_find_updated_files@@Base+0x50c>
   19d42:	cmp	r6, #0
   19d44:	beq.n	19ce8 <btrfs_list_find_updated_files@@Base+0x5a0>
   19d46:	ldr	r1, [pc, #76]	; (19d94 <btrfs_list_find_updated_files@@Base+0x64c>)
   19d48:	movs	r0, #1
   19d4a:	add	r1, pc
   19d4c:	blx	900c <__printf_chk@plt+0x4>
   19d50:	b.n	19c5a <btrfs_list_find_updated_files@@Base+0x512>
   19d52:	vmov	r0, s17
   19d56:	add.w	sp, sp, #12480	; 0x30c0
   19d5a:	add	sp, #20
   19d5c:	vpop	{d8-d9}
   19d60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d64:	str	r4, [sp, #72]	; 0x48
   19d66:	beq.n	19d6a <btrfs_list_find_updated_files@@Base+0x622>
   19d68:	strb	r5, [r3, #23]
   19d6a:	movs	r2, r0
   19d6c:	add	r4, pc, #820	; (adr r4, 1a0a4 <btrfs_list_subvols_print@@Base+0x128>)
   19d6e:	movs	r2, r0
   19d70:	strb	r3, [r0, #20]
   19d72:	movs	r2, r0
   19d74:	strb	r5, [r7, #22]
   19d76:	movs	r2, r0
   19d78:	ldr	r4, [pc, #740]	; (1a060 <btrfs_list_subvols_print@@Base+0xe4>)
   19d7a:	movs	r2, r0
   19d7c:	strb	r3, [r7, #15]
   19d7e:	movs	r2, r0
   19d80:	strb	r4, [r2, #19]
   19d82:	movs	r2, r0
   19d84:	ldrsh	r1, [r0, r6]
   19d86:	movs	r2, r0
   19d88:	ldrsh	r3, [r7, r4]
   19d8a:	movs	r2, r0
   19d8c:	strb	r7, [r2, #16]
   19d8e:	movs	r2, r0
   19d90:	strb	r4, [r3, #19]
   19d92:	movs	r2, r0
   19d94:	strb	r1, [r3, #19]
   19d96:	movs	r2, r0

00019d98 <btrfs_list_parse_sort_string@@Base>:
   19d98:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d9c:	mov	r4, r1
   19d9e:	ldr.w	sl, [pc, #324]	; 19ee4 <btrfs_list_parse_sort_string@@Base+0x14c>
   19da2:	ldr.w	fp, [pc, #324]	; 19ee8 <btrfs_list_parse_sort_string@@Base+0x150>
   19da6:	ldr	r7, [pc, #324]	; (19eec <btrfs_list_parse_sort_string@@Base+0x154>)
   19da8:	add	sl, pc
   19daa:	ldr	r3, [pc, #324]	; (19ef0 <btrfs_list_parse_sort_string@@Base+0x158>)
   19dac:	add	fp, pc
   19dae:	add	r7, pc
   19db0:	add	r3, pc
   19db2:	str	r3, [sp, #0]
   19db4:	mov	r1, sl
   19db6:	blx	9070 <strtok@plt>
   19dba:	mov	r9, r0
   19dbc:	cbz	r0, 19df0 <btrfs_list_parse_sort_string@@Base+0x58>
   19dbe:	ldr	r3, [sp, #0]
   19dc0:	add.w	r8, r0, #1
   19dc4:	add.w	r5, r3, #132	; 0x84
   19dc8:	mov	r6, r5
   19dca:	b.n	19de4 <btrfs_list_parse_sort_string@@Base+0x4c>
   19dcc:	mov	r1, r9
   19dce:	mov	r0, r2
   19dd0:	str	r2, [sp, #4]
   19dd2:	blx	8b04 <strcmp@plt>
   19dd6:	cbz	r0, 19df6 <btrfs_list_parse_sort_string@@Base+0x5e>
   19dd8:	ldr	r2, [sp, #4]
   19dda:	mov	r1, r8
   19ddc:	mov	r0, r2
   19dde:	blx	8b04 <strcmp@plt>
   19de2:	cbz	r0, 19df6 <btrfs_list_parse_sort_string@@Base+0x5e>
   19de4:	ldr.w	r2, [r6], #4
   19de8:	cmp	r2, #0
   19dea:	bne.n	19dcc <btrfs_list_parse_sort_string@@Base+0x34>
   19dec:	mov.w	r0, #4294967295	; 0xffffffff
   19df0:	add	sp, #12
   19df2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19df6:	ldrb.w	r2, [r9]
   19dfa:	cmp	r2, #43	; 0x2b
   19dfc:	bne.n	19e06 <btrfs_list_parse_sort_string@@Base+0x6e>
   19dfe:	add.w	r9, r9, #1
   19e02:	movs	r6, #0
   19e04:	b.n	19e10 <btrfs_list_parse_sort_string@@Base+0x78>
   19e06:	cmp	r2, #45	; 0x2d
   19e08:	bne.n	19e02 <btrfs_list_parse_sort_string@@Base+0x6a>
   19e0a:	add.w	r9, r9, #1
   19e0e:	movs	r6, #1
   19e10:	mov.w	r8, #0
   19e14:	ldr.w	r1, [r5], #4
   19e18:	mov	r0, r9
   19e1a:	blx	8b04 <strcmp@plt>
   19e1e:	cbz	r0, 19e2e <btrfs_list_parse_sort_string@@Base+0x96>
   19e20:	add.w	r8, r8, #1
   19e24:	cmp.w	r8, #4
   19e28:	bne.n	19e14 <btrfs_list_parse_sort_string@@Base+0x7c>
   19e2a:	mov.w	r8, #4294967295	; 0xffffffff
   19e2e:	ldr	r5, [r4, #0]
   19e30:	cbnz	r5, 19e42 <btrfs_list_parse_sort_string@@Base+0xaa>
   19e32:	ldr	r1, [pc, #192]	; (19ef4 <btrfs_list_parse_sort_string@@Base+0x15c>)
   19e34:	movs	r2, #251	; 0xfb
   19e36:	ldr	r0, [pc, #192]	; (19ef8 <btrfs_list_parse_sort_string@@Base+0x160>)
   19e38:	add	r1, pc
   19e3a:	adds	r1, #77	; 0x4d
   19e3c:	add	r0, pc
   19e3e:	bl	192f8 <rb_first_postorder@@Base+0xb36>
   19e42:	cmp.w	r8, #3
   19e46:	bls.n	19e56 <btrfs_list_parse_sort_string@@Base+0xbe>
   19e48:	ldr	r1, [pc, #176]	; (19efc <btrfs_list_parse_sort_string@@Base+0x164>)
   19e4a:	movs	r2, #252	; 0xfc
   19e4c:	ldr	r0, [pc, #176]	; (19f00 <btrfs_list_parse_sort_string@@Base+0x168>)
   19e4e:	add	r1, pc
   19e50:	adds	r1, #77	; 0x4d
   19e52:	add	r0, pc
   19e54:	b.n	19e3e <btrfs_list_parse_sort_string@@Base+0xa6>
   19e56:	ldrd	r3, r1, [r5]
   19e5a:	cmp	r1, r3
   19e5c:	ble.n	19e6c <btrfs_list_parse_sort_string@@Base+0xd4>
   19e5e:	ldr	r1, [pc, #164]	; (19f04 <btrfs_list_parse_sort_string@@Base+0x16c>)
   19e60:	movs	r2, #253	; 0xfd
   19e62:	ldr	r0, [pc, #164]	; (19f08 <btrfs_list_parse_sort_string@@Base+0x170>)
   19e64:	add	r1, pc
   19e66:	adds	r1, #77	; 0x4d
   19e68:	add	r0, pc
   19e6a:	b.n	19e3e <btrfs_list_parse_sort_string@@Base+0xa6>
   19e6c:	bne.n	19eb6 <btrfs_list_parse_sort_string@@Base+0x11e>
   19e6e:	adds	r1, #9
   19e70:	mov	r0, r5
   19e72:	lsls	r1, r1, #3
   19e74:	blx	8cb8 <realloc@plt+0x4>
   19e78:	mov	r9, r0
   19e7a:	cbnz	r0, 19e96 <btrfs_list_parse_sort_string@@Base+0xfe>
   19e7c:	ldr	r3, [pc, #140]	; (19f0c <btrfs_list_parse_sort_string@@Base+0x174>)
   19e7e:	ldr	r0, [pc, #144]	; (19f10 <btrfs_list_parse_sort_string@@Base+0x178>)
   19e80:	ldr	r3, [r7, r3]
   19e82:	add	r0, pc
   19e84:	ldr	r1, [r3, #0]
   19e86:	blx	91a8 <fputs@plt+0x4>
   19e8a:	mov	r0, r5
   19e8c:	blx	8b84 <free@plt+0x4>
   19e90:	movs	r0, #1
   19e92:	blx	8f10 <exit@plt>
   19e96:	ldr	r0, [r0, #0]
   19e98:	movs	r2, #64	; 0x40
   19e9a:	movs	r1, #0
   19e9c:	mov	r5, r9
   19e9e:	adds	r0, #1
   19ea0:	add.w	r0, r9, r0, lsl #3
   19ea4:	blx	8f98 <memset@plt+0x4>
   19ea8:	ldr.w	r2, [r9]
   19eac:	adds	r2, #8
   19eae:	str.w	r2, [r9]
   19eb2:	str.w	r9, [r4]
   19eb6:	ldr	r3, [r5, #4]
   19eb8:	add.w	r1, r5, r3, lsl #3
   19ebc:	ldr	r0, [r1, #8]
   19ebe:	cbz	r0, 19ed0 <btrfs_list_parse_sort_string@@Base+0x138>
   19ec0:	ldr	r1, [pc, #80]	; (19f14 <btrfs_list_parse_sort_string@@Base+0x17c>)
   19ec2:	movw	r2, #275	; 0x113
   19ec6:	ldr	r0, [pc, #80]	; (19f18 <btrfs_list_parse_sort_string@@Base+0x180>)
   19ec8:	add	r1, pc
   19eca:	adds	r1, #77	; 0x4d
   19ecc:	add	r0, pc
   19ece:	b.n	19e3e <btrfs_list_parse_sort_string@@Base+0xa6>
   19ed0:	add.w	r8, fp, r8, lsl #2
   19ed4:	adds	r3, #1
   19ed6:	ldr.w	r2, [r8, #52]	; 0x34
   19eda:	strd	r2, r6, [r1, #8]
   19ede:	str	r3, [r5, #4]
   19ee0:	b.n	19db4 <btrfs_list_parse_sort_string@@Base+0x1c>
   19ee2:	nop
   19ee4:	ldrh	r4, [r3, r3]
   19ee6:	movs	r2, r0
   19ee8:	lsrs	r0, r6, #5
   19eea:	movs	r5, r0
   19eec:	lsrs	r2, r5, #29
   19eee:	movs	r5, r0
   19ef0:	movs	r3, #112	; 0x70
   19ef2:	movs	r5, r0
   19ef4:	strb	r3, [r2, #19]
   19ef6:	movs	r2, r0
   19ef8:	ldr	r4, [r7, r4]
   19efa:	movs	r2, r0
   19efc:	strb	r5, [r7, #18]
   19efe:	movs	r2, r0
   19f00:	strb	r7, [r5, #15]
   19f02:	movs	r2, r0
   19f04:	strb	r7, [r4, #18]
   19f06:	movs	r2, r0
   19f08:	ldr	r5, [r7, r4]
   19f0a:	movs	r2, r0
   19f0c:	lsls	r4, r3, #10
   19f0e:	movs	r0, r0
   19f10:	strb	r7, [r4, #6]
   19f12:	movs	r2, r0
   19f14:	strb	r3, [r0, #17]
   19f16:	movs	r2, r0
   19f18:	ldr	r3, [r6, r3]
   19f1a:	movs	r2, r0

00019f1c <btrfs_list_parse_filter_string@@Base>:
   19f1c:	push	{r3, r4, r5, lr}
   19f1e:	mov	r3, r0
   19f20:	mov	r5, r2
   19f22:	ldrb.w	r2, [r3], #1
   19f26:	mov	r4, r1
   19f28:	cmp	r2, #43	; 0x2b
   19f2a:	beq.n	19f3c <btrfs_list_parse_filter_string@@Base+0x20>
   19f2c:	cmp	r2, #45	; 0x2d
   19f2e:	beq.n	19f52 <btrfs_list_parse_filter_string@@Base+0x36>
   19f30:	bl	1bfdc <arg_strtou64@@Base>
   19f34:	mov	r3, r1
   19f36:	mov	r2, r0
   19f38:	mov	r1, r5
   19f3a:	b.n	19f48 <btrfs_list_parse_filter_string@@Base+0x2c>
   19f3c:	mov	r0, r3
   19f3e:	bl	1bfdc <arg_strtou64@@Base>
   19f42:	mov	r3, r1
   19f44:	adds	r1, r5, #2
   19f46:	mov	r2, r0
   19f48:	mov	r0, r4
   19f4a:	bl	1963c <btrfs_list_setup_filter@@Base>
   19f4e:	movs	r0, #0
   19f50:	pop	{r3, r4, r5, pc}
   19f52:	mov	r0, r3
   19f54:	bl	1bfdc <arg_strtou64@@Base>
   19f58:	mov	r3, r1
   19f5a:	mov	r2, r0
   19f5c:	adds	r1, r5, #1
   19f5e:	b.n	19f48 <btrfs_list_parse_filter_string@@Base+0x2c>

00019f60 <btrfs_list_get_path_rootid@@Base>:
   19f60:	push	{r4, lr}
   19f62:	bl	1c084 <lookup_path_rootid@@Base>
   19f66:	subs	r4, r0, #0
   19f68:	bge.n	19f72 <btrfs_list_get_path_rootid@@Base+0x12>
   19f6a:	ldr	r0, [pc, #12]	; (19f78 <btrfs_list_get_path_rootid@@Base+0x18>)
   19f6c:	add	r0, pc
   19f6e:	bl	1bd1c <__btrfs_error@@Base>
   19f72:	mov	r0, r4
   19f74:	pop	{r4, pc}
   19f76:	nop
   19f78:	strb	r4, [r6, #11]
   19f7a:	movs	r2, r0

00019f7c <btrfs_list_subvols_print@@Base>:
   19f7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f80:	sub	sp, #76	; 0x4c
   19f82:	mov	r9, r2
   19f84:	mov	r7, r3
   19f86:	ldrd	r3, r2, [sp, #112]	; 0x70
   19f8a:	mov	r8, r1
   19f8c:	ldr	r1, [pc, #828]	; (1a2cc <btrfs_list_subvols_print@@Base+0x350>)
   19f8e:	mov.w	sl, #0
   19f92:	mov.w	fp, #0
   19f96:	mov	r4, r0
   19f98:	str	r2, [sp, #12]
   19f9a:	add	r1, pc
   19f9c:	ldr	r2, [pc, #816]	; (1a2d0 <btrfs_list_subvols_print@@Base+0x354>)
   19f9e:	ldr	r2, [r1, r2]
   19fa0:	ldr	r2, [r2, #0]
   19fa2:	str	r2, [sp, #68]	; 0x44
   19fa4:	mov.w	r2, #0
   19fa8:	strd	sl, fp, [sp, #40]	; 0x28
   19fac:	cmp	r3, #0
   19fae:	bne.n	1a08a <btrfs_list_subvols_print@@Base+0x10e>
   19fb0:	add	r5, sp, #32
   19fb2:	mov	r0, r4
   19fb4:	mov	r1, r5
   19fb6:	bl	192d0 <rb_first_postorder@@Base+0xb0e>
   19fba:	mov	r6, r0
   19fbc:	cmp	r0, #0
   19fbe:	bne.n	1a096 <btrfs_list_subvols_print@@Base+0x11a>
   19fc0:	ldrd	r3, r4, [sp, #40]	; 0x28
   19fc4:	str	r0, [sp, #36]	; 0x24
   19fc6:	mov	r0, r5
   19fc8:	strd	r3, r4, [sp, #16]
   19fcc:	bl	186f6 <rb_last@@Base>
   19fd0:	ldr	r3, [pc, #768]	; (1a2d4 <btrfs_list_subvols_print@@Base+0x358>)
   19fd2:	add	r3, pc
   19fd4:	str	r3, [sp, #24]
   19fd6:	mov	r4, r0
   19fd8:	cmp	r4, #0
   19fda:	bne.n	1a0ac <btrfs_list_subvols_print@@Base+0x130>
   19fdc:	cmp	r7, #1
   19fde:	bne.n	1a064 <btrfs_list_subvols_print@@Base+0xe8>
   19fe0:	ldr	r5, [pc, #756]	; (1a2d8 <btrfs_list_subvols_print@@Base+0x35c>)
   19fe2:	ldr.w	r9, [pc, #760]	; 1a2dc <btrfs_list_subvols_print@@Base+0x360>
   19fe6:	add	r5, pc
   19fe8:	add	r9, pc
   19fea:	mov	r8, r5
   19fec:	ldr.w	r3, [r8, #8]
   19ff0:	cbz	r3, 19ffe <btrfs_list_subvols_print@@Base+0x82>
   19ff2:	ldr.w	r2, [r8]
   19ff6:	mov	r1, r9
   19ff8:	movs	r0, #1
   19ffa:	blx	900c <__printf_chk@plt+0x4>
   19ffe:	cmp	r4, #9
   1a000:	bne.n	1a008 <btrfs_list_subvols_print@@Base+0x8c>
   1a002:	movs	r0, #10
   1a004:	blx	8fa8 <putchar@plt+0x4>
   1a008:	adds	r4, #1
   1a00a:	add.w	r8, r8, #12
   1a00e:	cmp	r4, #10
   1a010:	bne.n	19fec <btrfs_list_subvols_print@@Base+0x70>
   1a012:	ldr.w	r9, [pc, #716]	; 1a2e0 <btrfs_list_subvols_print@@Base+0x364>
   1a016:	mov.w	r8, #0
   1a01a:	ldr.w	sl, [pc, #712]	; 1a2e4 <btrfs_list_subvols_print@@Base+0x368>
   1a01e:	add	r9, pc
   1a020:	add	sl, pc
   1a022:	add.w	fp, sp, #48	; 0x30
   1a026:	movs	r2, #20
   1a028:	movs	r1, #0
   1a02a:	mov	r0, fp
   1a02c:	blx	8f98 <memset@plt+0x4>
   1a030:	ldr	r3, [r5, #8]
   1a032:	cbz	r3, 1a04c <btrfs_list_subvols_print@@Base+0xd0>
   1a034:	ldr	r0, [r5, #0]
   1a036:	blx	8f1c <strlen@plt>
   1a03a:	mov	r4, r0
   1a03c:	subs	r4, #1
   1a03e:	bcs.w	1a1d4 <btrfs_list_subvols_print@@Base+0x258>
   1a042:	mov	r2, fp
   1a044:	mov	r1, sl
   1a046:	movs	r0, #1
   1a048:	blx	900c <__printf_chk@plt+0x4>
   1a04c:	cmp.w	r8, #9
   1a050:	bne.n	1a058 <btrfs_list_subvols_print@@Base+0xdc>
   1a052:	movs	r0, #10
   1a054:	blx	8fa8 <putchar@plt+0x4>
   1a058:	add.w	r8, r8, #1
   1a05c:	adds	r5, #12
   1a05e:	cmp.w	r8, #10
   1a062:	bne.n	1a022 <btrfs_list_subvols_print@@Base+0xa6>
   1a064:	add	r0, sp, #36	; 0x24
   1a066:	ldr.w	r9, [pc, #640]	; 1a2e8 <btrfs_list_subvols_print@@Base+0x36c>
   1a06a:	bl	186e6 <rb_first@@Base>
   1a06e:	ldr.w	sl, [pc, #636]	; 1a2ec <btrfs_list_subvols_print@@Base+0x370>
   1a072:	add	r9, pc
   1a074:	add	sl, pc
   1a076:	mov	r4, r0
   1a078:	cmp	r4, #0
   1a07a:	bne.w	1a1e0 <btrfs_list_subvols_print@@Base+0x264>
   1a07e:	ldr	r1, [pc, #624]	; (1a2f0 <btrfs_list_subvols_print@@Base+0x374>)
   1a080:	add	r0, sp, #32
   1a082:	add	r1, pc
   1a084:	bl	1c19e <rb_free_nodes@@Base>
   1a088:	b.n	1a096 <btrfs_list_subvols_print@@Base+0x11a>
   1a08a:	add	r1, sp, #40	; 0x28
   1a08c:	bl	19f60 <btrfs_list_get_path_rootid@@Base>
   1a090:	mov	r6, r0
   1a092:	cmp	r0, #0
   1a094:	beq.n	19fb0 <btrfs_list_subvols_print@@Base+0x34>
   1a096:	ldr	r2, [pc, #604]	; (1a2f4 <btrfs_list_subvols_print@@Base+0x378>)
   1a098:	ldr	r3, [pc, #564]	; (1a2d0 <btrfs_list_subvols_print@@Base+0x354>)
   1a09a:	add	r2, pc
   1a09c:	ldr	r3, [r2, r3]
   1a09e:	ldr	r2, [r3, #0]
   1a0a0:	ldr	r3, [sp, #68]	; 0x44
   1a0a2:	eors	r2, r3
   1a0a4:	beq.w	1a2c2 <btrfs_list_subvols_print@@Base+0x346>
   1a0a8:	blx	8c90 <__stack_chk_fail@plt>
   1a0ac:	ldrd	r2, r3, [sp, #16]
   1a0b0:	add	r0, sp, #32
   1a0b2:	mov	r1, r4
   1a0b4:	bl	18da0 <rb_first_postorder@@Base+0x5de>
   1a0b8:	adds	r0, #2
   1a0ba:	bne.n	1a0da <btrfs_list_subvols_print@@Base+0x15e>
   1a0bc:	ldrd	r2, r3, [r4, #24]
   1a0c0:	cmp	r3, #0
   1a0c2:	it	eq
   1a0c4:	cmpeq	r2, #5
   1a0c6:	beq.n	1a104 <btrfs_list_subvols_print@@Base+0x188>
   1a0c8:	ldr	r0, [pc, #556]	; (1a2f8 <btrfs_list_subvols_print@@Base+0x37c>)
   1a0ca:	add	r0, pc
   1a0cc:	blx	8c78 <strdup@plt+0x4>
   1a0d0:	movs	r3, #1
   1a0d2:	str.w	r0, [r4, #148]	; 0x94
   1a0d6:	str.w	r3, [r4, #152]	; 0x98
   1a0da:	cmp.w	r8, #0
   1a0de:	bne.n	1a114 <btrfs_list_subvols_print@@Base+0x198>
   1a0e0:	add	r5, sp, #36	; 0x24
   1a0e2:	movs	r3, #0
   1a0e4:	ldr.w	sl, [r5]
   1a0e8:	cmp.w	sl, #0
   1a0ec:	bne.n	1a156 <btrfs_list_subvols_print@@Base+0x1da>
   1a0ee:	add.w	r0, r4, #12
   1a0f2:	strd	r3, sl, [r4, #12]
   1a0f6:	str.w	sl, [r4, #20]
   1a0fa:	add	r1, sp, #36	; 0x24
   1a0fc:	str	r0, [r5, #0]
   1a0fe:	bl	183ca <rb_insert_color@@Base>
   1a102:	b.n	1a120 <btrfs_list_subvols_print@@Base+0x1a4>
   1a104:	ldr	r0, [pc, #500]	; (1a2fc <btrfs_list_subvols_print@@Base+0x380>)
   1a106:	add	r0, pc
   1a108:	blx	8c78 <strdup@plt+0x4>
   1a10c:	movs	r3, #0
   1a10e:	str.w	r0, [r4, #148]	; 0x94
   1a112:	b.n	1a0d6 <btrfs_list_subvols_print@@Base+0x15a>
   1a114:	ldr.w	r2, [r8, #8]
   1a118:	ldr.w	r3, [r4, #152]	; 0x98
   1a11c:	cbz	r2, 1a12a <btrfs_list_subvols_print@@Base+0x1ae>
   1a11e:	cbnz	r3, 1a12e <btrfs_list_subvols_print@@Base+0x1b2>
   1a120:	mov	r0, r4
   1a122:	bl	18732 <rb_prev@@Base>
   1a126:	mov	r4, r0
   1a128:	b.n	19fd8 <btrfs_list_subvols_print@@Base+0x5c>
   1a12a:	cmp	r3, #0
   1a12c:	bne.n	1a120 <btrfs_list_subvols_print@@Base+0x1a4>
   1a12e:	mov	r5, r8
   1a130:	mov.w	sl, #0
   1a134:	ldr.w	r3, [r8, #4]
   1a138:	cmp	sl, r3
   1a13a:	bge.n	1a0e0 <btrfs_list_subvols_print@@Base+0x164>
   1a13c:	ldr	r1, [r5, #16]
   1a13e:	cmp	r1, #0
   1a140:	beq.n	1a0e0 <btrfs_list_subvols_print@@Base+0x164>
   1a142:	ldrd	r2, r3, [r5, #24]
   1a146:	mov	r0, r4
   1a148:	blx	r1
   1a14a:	adds	r5, #16
   1a14c:	cmp	r0, #0
   1a14e:	beq.n	1a120 <btrfs_list_subvols_print@@Base+0x1a4>
   1a150:	add.w	sl, sl, #1
   1a154:	b.n	1a134 <btrfs_list_subvols_print@@Base+0x1b8>
   1a156:	sub.w	r1, sl, #12
   1a15a:	cmp.w	r9, #0
   1a15e:	beq.n	1a184 <btrfs_list_subvols_print@@Base+0x208>
   1a160:	ldr.w	r3, [r9, #4]
   1a164:	cbz	r3, 1a184 <btrfs_list_subvols_print@@Base+0x208>
   1a166:	movs	r3, #0
   1a168:	str.w	r9, [sp, #8]
   1a16c:	mov	fp, r3
   1a16e:	str	r3, [sp, #4]
   1a170:	ldr.w	r3, [r9, #4]
   1a174:	ldr	r2, [sp, #4]
   1a176:	cmp	r2, r3
   1a178:	blt.n	1a198 <btrfs_list_subvols_print@@Base+0x21c>
   1a17a:	cmp.w	fp, #0
   1a17e:	bne.n	1a120 <btrfs_list_subvols_print@@Base+0x1a4>
   1a180:	mov	r2, fp
   1a182:	b.n	1a186 <btrfs_list_subvols_print@@Base+0x20a>
   1a184:	movs	r2, #0
   1a186:	mov	r0, r4
   1a188:	bl	187d8 <rb_first_postorder@@Base+0x16>
   1a18c:	cmp	r0, #0
   1a18e:	bge.n	1a1cc <btrfs_list_subvols_print@@Base+0x250>
   1a190:	ldr	r5, [r5, #0]
   1a192:	adds	r5, #8
   1a194:	mov	r3, sl
   1a196:	b.n	1a0e4 <btrfs_list_subvols_print@@Base+0x168>
   1a198:	ldr	r3, [sp, #8]
   1a19a:	ldr	r3, [r3, #8]
   1a19c:	cmp	r3, #0
   1a19e:	beq.n	1a17a <btrfs_list_subvols_print@@Base+0x1fe>
   1a1a0:	ldr	r2, [sp, #8]
   1a1a2:	mov	r0, r4
   1a1a4:	str	r1, [sp, #28]
   1a1a6:	ldr	r2, [r2, #12]
   1a1a8:	blx	r3
   1a1aa:	cmp	r0, #0
   1a1ac:	bne.w	1a2bc <btrfs_list_subvols_print@@Base+0x340>
   1a1b0:	ldr	r2, [sp, #8]
   1a1b2:	ldr	r1, [sp, #28]
   1a1b4:	ldr.w	r3, [r2, #8]!
   1a1b8:	str	r2, [sp, #8]
   1a1ba:	ldr	r2, [sp, #24]
   1a1bc:	cmp	r3, r2
   1a1be:	it	eq
   1a1c0:	moveq.w	fp, #1
   1a1c4:	ldr	r3, [sp, #4]
   1a1c6:	adds	r3, #1
   1a1c8:	str	r3, [sp, #4]
   1a1ca:	b.n	1a170 <btrfs_list_subvols_print@@Base+0x1f4>
   1a1cc:	beq.n	1a120 <btrfs_list_subvols_print@@Base+0x1a4>
   1a1ce:	ldr	r5, [r5, #0]
   1a1d0:	adds	r5, #4
   1a1d2:	b.n	1a194 <btrfs_list_subvols_print@@Base+0x218>
   1a1d4:	movs	r2, #20
   1a1d6:	mov	r1, r9
   1a1d8:	mov	r0, fp
   1a1da:	blx	8f64 <__strcat_chk@plt>
   1a1de:	b.n	1a03c <btrfs_list_subvols_print@@Base+0xc0>
   1a1e0:	ldrd	r2, r3, [r4, #12]
   1a1e4:	sub.w	r5, r4, #12
   1a1e8:	cmp	r3, #0
   1a1ea:	it	eq
   1a1ec:	cmpeq	r2, #5
   1a1ee:	beq.n	1a23c <btrfs_list_subvols_print@@Base+0x2c0>
   1a1f0:	cmp	r7, #1
   1a1f2:	beq.n	1a246 <btrfs_list_subvols_print@@Base+0x2ca>
   1a1f4:	cmp	r7, #2
   1a1f6:	beq.n	1a286 <btrfs_list_subvols_print@@Base+0x30a>
   1a1f8:	cbnz	r7, 1a23c <btrfs_list_subvols_print@@Base+0x2c0>
   1a1fa:	ldr.w	fp, [pc, #260]	; 1a300 <btrfs_list_subvols_print@@Base+0x384>
   1a1fe:	mov	r8, r7
   1a200:	add	fp, pc
   1a202:	ldr.w	r3, [fp, #8]
   1a206:	cbz	r3, 1a228 <btrfs_list_subvols_print@@Base+0x2ac>
   1a208:	ldr.w	r2, [fp]
   1a20c:	mov	r1, sl
   1a20e:	movs	r0, #1
   1a210:	blx	900c <__printf_chk@plt+0x4>
   1a214:	mov	r1, r8
   1a216:	mov	r0, r5
   1a218:	bl	19334 <rb_first_postorder@@Base+0xb72>
   1a21c:	cmp.w	r8, #9
   1a220:	beq.n	1a228 <btrfs_list_subvols_print@@Base+0x2ac>
   1a222:	movs	r0, #32
   1a224:	blx	8fa8 <putchar@plt+0x4>
   1a228:	add.w	r8, r8, #1
   1a22c:	add.w	fp, fp, #12
   1a230:	cmp.w	r8, #10
   1a234:	bne.n	1a202 <btrfs_list_subvols_print@@Base+0x286>
   1a236:	movs	r0, #10
   1a238:	blx	8fa8 <putchar@plt+0x4>
   1a23c:	mov	r0, r4
   1a23e:	bl	18706 <rb_next@@Base>
   1a242:	mov	r4, r0
   1a244:	b.n	1a078 <btrfs_list_subvols_print@@Base+0xfc>
   1a246:	ldr.w	r8, [pc, #188]	; 1a304 <btrfs_list_subvols_print@@Base+0x388>
   1a24a:	mov.w	fp, #0
   1a24e:	add	r8, pc
   1a250:	ldr.w	r3, [r8, #8]
   1a254:	cbz	r3, 1a276 <btrfs_list_subvols_print@@Base+0x2fa>
   1a256:	mov	r1, fp
   1a258:	mov	r0, r5
   1a25a:	bl	19334 <rb_first_postorder@@Base+0xb72>
   1a25e:	cmp.w	fp, #9
   1a262:	beq.n	1a276 <btrfs_list_subvols_print@@Base+0x2fa>
   1a264:	movs	r0, #9
   1a266:	blx	8fa8 <putchar@plt+0x4>
   1a26a:	cmp.w	fp, #4
   1a26e:	bne.n	1a276 <btrfs_list_subvols_print@@Base+0x2fa>
   1a270:	movs	r0, #9
   1a272:	blx	8fa8 <putchar@plt+0x4>
   1a276:	add.w	fp, fp, #1
   1a27a:	add.w	r8, r8, #12
   1a27e:	cmp.w	fp, #10
   1a282:	bne.n	1a250 <btrfs_list_subvols_print@@Base+0x2d4>
   1a284:	b.n	1a236 <btrfs_list_subvols_print@@Base+0x2ba>
   1a286:	ldr.w	fp, [pc, #128]	; 1a308 <btrfs_list_subvols_print@@Base+0x38c>
   1a28a:	mov.w	r8, #0
   1a28e:	add	fp, pc
   1a290:	ldr.w	r3, [fp, #8]
   1a294:	cbz	r3, 1a2ac <btrfs_list_subvols_print@@Base+0x330>
   1a296:	ldr	r3, [sp, #12]
   1a298:	cbz	r3, 1a2a4 <btrfs_list_subvols_print@@Base+0x328>
   1a29a:	mov	r2, r3
   1a29c:	mov	r1, r9
   1a29e:	movs	r0, #1
   1a2a0:	blx	900c <__printf_chk@plt+0x4>
   1a2a4:	mov	r1, r8
   1a2a6:	mov	r0, r5
   1a2a8:	bl	19334 <rb_first_postorder@@Base+0xb72>
   1a2ac:	add.w	r8, r8, #1
   1a2b0:	add.w	fp, fp, #12
   1a2b4:	cmp.w	r8, #10
   1a2b8:	bne.n	1a290 <btrfs_list_subvols_print@@Base+0x314>
   1a2ba:	b.n	1a236 <btrfs_list_subvols_print@@Base+0x2ba>
   1a2bc:	blt.w	1a190 <btrfs_list_subvols_print@@Base+0x214>
   1a2c0:	b.n	1a1ce <btrfs_list_subvols_print@@Base+0x252>
   1a2c2:	mov	r0, r6
   1a2c4:	add	sp, #76	; 0x4c
   1a2c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2ca:	nop
   1a2cc:	lsrs	r6, r7, #21
   1a2ce:	movs	r5, r0
   1a2d0:	lsls	r0, r1, #10
   1a2d2:	movs	r0, r0
   1a2d4:			; <UNDEFINED> instruction: 0xe803ffff
   1a2d8:	movs	r1, #58	; 0x3a
   1a2da:	movs	r5, r0
   1a2dc:	strb	r4, [r5, #10]
   1a2de:	movs	r2, r0
   1a2e0:	ldr	r2, [r5, r1]
   1a2e2:	movs	r2, r0
   1a2e4:	strb	r4, [r6, #9]
   1a2e6:	movs	r2, r0
   1a2e8:	str	r3, [r2, r6]
   1a2ea:	movs	r2, r0
   1a2ec:	strb	r4, [r4, #8]
   1a2ee:	movs	r2, r0
   1a2f0:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   1a2f4:	lsrs	r6, r7, #17
   1a2f6:	movs	r5, r0
   1a2f8:	strb	r1, [r7, #6]
   1a2fa:	movs	r2, r0
   1a2fc:	strb	r5, [r0, #6]
   1a2fe:	movs	r2, r0
   1a300:	subs	r0, r4, #4
   1a302:	movs	r5, r0
   1a304:	subs	r2, r2, #3
   1a306:	movs	r5, r0
   1a308:	subs	r2, r2, #2
   1a30a:	movs	r5, r0

0001a30c <btrfs_get_toplevel_subvol@@Base>:
   1a30c:	ldr	r2, [pc, #152]	; (1a3a8 <btrfs_get_toplevel_subvol@@Base+0x9c>)
   1a30e:	ldr	r3, [pc, #156]	; (1a3ac <btrfs_get_toplevel_subvol@@Base+0xa0>)
   1a310:	add	r2, pc
   1a312:	push	{r4, r5, r6, r7, lr}
   1a314:	sub	sp, #28
   1a316:	ldr	r3, [r2, r3]
   1a318:	mov	r5, r1
   1a31a:	add	r1, sp, #8
   1a31c:	mov	r7, r0
   1a31e:	ldr	r3, [r3, #0]
   1a320:	str	r3, [sp, #20]
   1a322:	mov.w	r3, #0
   1a326:	bl	19f60 <btrfs_list_get_path_rootid@@Base>
   1a32a:	mov	r4, r0
   1a32c:	cbnz	r0, 1a386 <btrfs_get_toplevel_subvol@@Base+0x7a>
   1a32e:	add	r6, sp, #4
   1a330:	mov	r0, r7
   1a332:	mov	r1, r6
   1a334:	bl	192d0 <rb_first_postorder@@Base+0xb0e>
   1a338:	mov	r4, r0
   1a33a:	cbnz	r0, 1a386 <btrfs_get_toplevel_subvol@@Base+0x7a>
   1a33c:	mov	r0, r6
   1a33e:	bl	186e6 <rb_first@@Base>
   1a342:	ldrd	r2, r3, [r0, #24]
   1a346:	mov	r1, r0
   1a348:	cmp	r3, #0
   1a34a:	it	eq
   1a34c:	cmpeq	r2, #5
   1a34e:	bne.n	1a39a <btrfs_get_toplevel_subvol@@Base+0x8e>
   1a350:	ldr	r7, [pc, #92]	; (1a3b0 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   1a352:	movs	r2, #140	; 0x8c
   1a354:	mov	r0, r5
   1a356:	add	r7, pc
   1a358:	blx	8bdc <memcpy@plt+0x4>
   1a35c:	mov	r0, r7
   1a35e:	blx	8c78 <strdup@plt+0x4>
   1a362:	str.w	r0, [r5, #140]	; 0x8c
   1a366:	ldr	r0, [pc, #76]	; (1a3b4 <btrfs_get_toplevel_subvol@@Base+0xa8>)
   1a368:	add	r0, pc
   1a36a:	blx	8c78 <strdup@plt+0x4>
   1a36e:	str.w	r0, [r5, #144]	; 0x90
   1a372:	mov	r0, r7
   1a374:	blx	8c78 <strdup@plt+0x4>
   1a378:	ldr	r1, [pc, #60]	; (1a3b8 <btrfs_get_toplevel_subvol@@Base+0xac>)
   1a37a:	add	r1, pc
   1a37c:	str.w	r0, [r5, #148]	; 0x94
   1a380:	mov	r0, r6
   1a382:	bl	1c19e <rb_free_nodes@@Base>
   1a386:	ldr	r2, [pc, #52]	; (1a3bc <btrfs_get_toplevel_subvol@@Base+0xb0>)
   1a388:	ldr	r3, [pc, #32]	; (1a3ac <btrfs_get_toplevel_subvol@@Base+0xa0>)
   1a38a:	add	r2, pc
   1a38c:	ldr	r3, [r2, r3]
   1a38e:	ldr	r2, [r3, #0]
   1a390:	ldr	r3, [sp, #20]
   1a392:	eors	r2, r3
   1a394:	beq.n	1a3a0 <btrfs_get_toplevel_subvol@@Base+0x94>
   1a396:	blx	8c90 <__stack_chk_fail@plt>
   1a39a:	mvn.w	r4, #1
   1a39e:	b.n	1a386 <btrfs_get_toplevel_subvol@@Base+0x7a>
   1a3a0:	mov	r0, r4
   1a3a2:	add	sp, #28
   1a3a4:	pop	{r4, r5, r6, r7, pc}
   1a3a6:	nop
   1a3a8:	lsrs	r0, r1, #8
   1a3aa:	movs	r5, r0
   1a3ac:	lsls	r0, r1, #10
   1a3ae:	movs	r0, r0
   1a3b0:	ldr	r1, [r2, #56]	; 0x38
   1a3b2:	movs	r2, r0
   1a3b4:	ldr	r3, [r3, #76]	; 0x4c
   1a3b6:	movs	r2, r0
   1a3b8:	b.n	19f4a <btrfs_list_parse_filter_string@@Base+0x2e>
   1a3ba:	vtbl.8	d16, {d31-<overflow reg d32}, d14
   1a3be:	movs	r5, r0

0001a3c0 <btrfs_get_subvol@@Base>:
   1a3c0:	ldr	r2, [pc, #228]	; (1a4a8 <btrfs_get_subvol@@Base+0xe8>)
   1a3c2:	ldr	r3, [pc, #232]	; (1a4ac <btrfs_get_subvol@@Base+0xec>)
   1a3c4:	add	r2, pc
   1a3c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a3ca:	sub	sp, #28
   1a3cc:	ldr	r3, [r2, r3]
   1a3ce:	mov	r6, r1
   1a3d0:	add	r1, sp, #8
   1a3d2:	mov	r4, r0
   1a3d4:	ldr	r3, [r3, #0]
   1a3d6:	str	r3, [sp, #20]
   1a3d8:	mov.w	r3, #0
   1a3dc:	bl	19f60 <btrfs_list_get_path_rootid@@Base>
   1a3e0:	mov	r5, r0
   1a3e2:	cmp	r0, #0
   1a3e4:	bne.n	1a46a <btrfs_get_subvol@@Base+0xaa>
   1a3e6:	add	r7, sp, #4
   1a3e8:	mov	r0, r4
   1a3ea:	mov	r1, r7
   1a3ec:	bl	192d0 <rb_first_postorder@@Base+0xb0e>
   1a3f0:	mov	r5, r0
   1a3f2:	cbnz	r0, 1a46a <btrfs_get_subvol@@Base+0xaa>
   1a3f4:	mov	r0, r7
   1a3f6:	add.w	r9, r6, #92	; 0x5c
   1a3fa:	bl	186e6 <rb_first@@Base>
   1a3fe:	mov	r4, r0
   1a400:	cbz	r4, 1a460 <btrfs_get_subvol@@Base+0xa0>
   1a402:	ldrd	r2, r3, [sp, #8]
   1a406:	mov	r1, r4
   1a408:	mov	r0, r7
   1a40a:	bl	18da0 <rb_first_postorder@@Base+0x5de>
   1a40e:	cmn.w	r0, #2
   1a412:	mov	r8, r0
   1a414:	bne.n	1a422 <btrfs_get_subvol@@Base+0x62>
   1a416:	mov	r0, r4
   1a418:	bl	18706 <rb_next@@Base>
   1a41c:	mov	r4, r0
   1a41e:	mov	r5, r8
   1a420:	b.n	1a400 <btrfs_get_subvol@@Base+0x40>
   1a422:	movs	r2, #0
   1a424:	mov	r1, r4
   1a426:	mov	r0, r6
   1a428:	bl	187d8 <rb_first_postorder@@Base+0x16>
   1a42c:	cbnz	r0, 1a47e <btrfs_get_subvol@@Base+0xbe>
   1a42e:	movs	r2, #140	; 0x8c
   1a430:	mov	r1, r4
   1a432:	mov	r0, r6
   1a434:	blx	8bdc <memcpy@plt+0x4>
   1a438:	ldr.w	r0, [r4, #140]	; 0x8c
   1a43c:	cbnz	r0, 1a498 <btrfs_get_subvol@@Base+0xd8>
   1a43e:	str.w	r0, [r6, #140]	; 0x8c
   1a442:	ldr.w	r0, [r4, #144]	; 0x90
   1a446:	cbz	r0, 1a44c <btrfs_get_subvol@@Base+0x8c>
   1a448:	blx	8c78 <strdup@plt+0x4>
   1a44c:	str.w	r0, [r6, #144]	; 0x90
   1a450:	ldr.w	r0, [r4, #148]	; 0x94
   1a454:	cbz	r0, 1a45a <btrfs_get_subvol@@Base+0x9a>
   1a456:	blx	8c78 <strdup@plt+0x4>
   1a45a:	movs	r5, #0
   1a45c:	str.w	r0, [r6, #148]	; 0x94
   1a460:	ldr	r1, [pc, #76]	; (1a4b0 <btrfs_get_subvol@@Base+0xf0>)
   1a462:	mov	r0, r7
   1a464:	add	r1, pc
   1a466:	bl	1c19e <rb_free_nodes@@Base>
   1a46a:	ldr	r2, [pc, #72]	; (1a4b4 <btrfs_get_subvol@@Base+0xf4>)
   1a46c:	ldr	r3, [pc, #60]	; (1a4ac <btrfs_get_subvol@@Base+0xec>)
   1a46e:	add	r2, pc
   1a470:	ldr	r3, [r2, r3]
   1a472:	ldr	r2, [r3, #0]
   1a474:	ldr	r3, [sp, #20]
   1a476:	eors	r2, r3
   1a478:	beq.n	1a49e <btrfs_get_subvol@@Base+0xde>
   1a47a:	blx	8c90 <__stack_chk_fail@plt>
   1a47e:	add.w	r1, r4, #92	; 0x5c
   1a482:	mov	r0, r9
   1a484:	blx	8cd0 <uuid_compare@plt>
   1a488:	cmp	r0, #0
   1a48a:	beq.n	1a42e <btrfs_get_subvol@@Base+0x6e>
   1a48c:	mov	r0, r4
   1a48e:	mov	r8, r5
   1a490:	bl	18706 <rb_next@@Base>
   1a494:	mov	r4, r0
   1a496:	b.n	1a41e <btrfs_get_subvol@@Base+0x5e>
   1a498:	blx	8c78 <strdup@plt+0x4>
   1a49c:	b.n	1a43e <btrfs_get_subvol@@Base+0x7e>
   1a49e:	mov	r0, r5
   1a4a0:	add	sp, #28
   1a4a2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a4a6:	nop
   1a4a8:	lsrs	r4, r2, #5
   1a4aa:	movs	r5, r0
   1a4ac:	lsls	r0, r1, #10
   1a4ae:	movs	r0, r0
   1a4b0:	b.n	19e6e <btrfs_list_parse_sort_string@@Base+0xd6>
   1a4b2:	vtbl.8	d16, {d31}, d26
   1a4b6:	movs	r5, r0

0001a4b8 <btrfs_list_path_for_root@@Base>:
   1a4b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a4bc:	mov	r6, r2
   1a4be:	ldr	r2, [pc, #168]	; (1a568 <btrfs_list_path_for_root@@Base+0xb0>)
   1a4c0:	mov	r7, r3
   1a4c2:	ldr	r3, [pc, #168]	; (1a56c <btrfs_list_path_for_root@@Base+0xb4>)
   1a4c4:	sub	sp, #28
   1a4c6:	add	r2, pc
   1a4c8:	add	r1, sp, #8
   1a4ca:	mov	r5, r0
   1a4cc:	ldr	r3, [r2, r3]
   1a4ce:	ldr	r3, [r3, #0]
   1a4d0:	str	r3, [sp, #20]
   1a4d2:	mov.w	r3, #0
   1a4d6:	bl	19f60 <btrfs_list_get_path_rootid@@Base>
   1a4da:	mov	r9, r0
   1a4dc:	cbz	r0, 1a4f4 <btrfs_list_path_for_root@@Base+0x3c>
   1a4de:	mov	r4, r0
   1a4e0:	ldr	r2, [pc, #140]	; (1a570 <btrfs_list_path_for_root@@Base+0xb8>)
   1a4e2:	ldr	r3, [pc, #136]	; (1a56c <btrfs_list_path_for_root@@Base+0xb4>)
   1a4e4:	add	r2, pc
   1a4e6:	ldr	r3, [r2, r3]
   1a4e8:	ldr	r2, [r3, #0]
   1a4ea:	ldr	r3, [sp, #20]
   1a4ec:	eors	r2, r3
   1a4ee:	beq.n	1a560 <btrfs_list_path_for_root@@Base+0xa8>
   1a4f0:	blx	8c90 <__stack_chk_fail@plt>
   1a4f4:	add.w	r8, sp, #4
   1a4f8:	mov	r0, r5
   1a4fa:	mov	r1, r8
   1a4fc:	bl	18fca <rb_first_postorder@@Base+0x808>
   1a500:	subs	r4, r0, #0
   1a502:	blt.n	1a4e0 <btrfs_list_path_for_root@@Base+0x28>
   1a504:	mov	r1, r8
   1a506:	mov	r0, r5
   1a508:	bl	18fa4 <rb_first_postorder@@Base+0x7e2>
   1a50c:	subs	r4, r0, #0
   1a50e:	blt.n	1a4e0 <btrfs_list_path_for_root@@Base+0x28>
   1a510:	mov	r0, r8
   1a512:	mov	r4, r9
   1a514:	bl	186f6 <rb_last@@Base>
   1a518:	mov	r5, r0
   1a51a:	cbnz	r5, 1a528 <btrfs_list_path_for_root@@Base+0x70>
   1a51c:	ldr	r1, [pc, #84]	; (1a574 <btrfs_list_path_for_root@@Base+0xbc>)
   1a51e:	mov	r0, r8
   1a520:	add	r1, pc
   1a522:	bl	1c19e <rb_free_nodes@@Base>
   1a526:	b.n	1a4e0 <btrfs_list_path_for_root@@Base+0x28>
   1a528:	ldrd	r2, r3, [sp, #8]
   1a52c:	mov	r1, r5
   1a52e:	mov	r0, r8
   1a530:	bl	18da0 <rb_first_postorder@@Base+0x5de>
   1a534:	ldrd	r2, r3, [r5, #24]
   1a538:	adds	r0, #2
   1a53a:	bne.n	1a548 <btrfs_list_path_for_root@@Base+0x90>
   1a53c:	cmp	r3, r7
   1a53e:	it	eq
   1a540:	cmpeq	r2, r6
   1a542:	bne.n	1a556 <btrfs_list_path_for_root@@Base+0x9e>
   1a544:	movs	r4, #0
   1a546:	b.n	1a51c <btrfs_list_path_for_root@@Base+0x64>
   1a548:	cmp	r3, r7
   1a54a:	ittt	eq
   1a54c:	cmpeq	r2, r6
   1a54e:	ldreq.w	r4, [r5, #148]	; 0x94
   1a552:	streq.w	r9, [r5, #148]	; 0x94
   1a556:	mov	r0, r5
   1a558:	bl	18732 <rb_prev@@Base>
   1a55c:	mov	r5, r0
   1a55e:	b.n	1a51a <btrfs_list_path_for_root@@Base+0x62>
   1a560:	mov	r0, r4
   1a562:	add	sp, #28
   1a564:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a568:	lsrs	r2, r2, #1
   1a56a:	movs	r5, r0
   1a56c:	lsls	r0, r1, #10
   1a56e:	movs	r0, r0
   1a570:	lsrs	r4, r6, #32
   1a572:	movs	r5, r0
   1a574:	b.n	19dba <btrfs_list_parse_sort_string@@Base+0x22>
   1a576:	vtbl.8	d30, {d15-d16}, d29
   1a57a:	mvns	r0, r6
   1a57c:	ldrd	r2, r3, [r0, #24]
   1a580:	ldrd	ip, r0, [r0, #32]
   1a584:	ldrd	r4, r5, [r1, #8]
   1a588:	adds.w	r8, r2, ip
   1a58c:	adc.w	r9, r3, r0
   1a590:	cmp	r5, r9
   1a592:	it	eq
   1a594:	cmpeq	r4, r8
   1a596:	bcs.n	1a5b4 <btrfs_list_path_for_root@@Base+0xfc>
   1a598:	ldrd	r0, r1, [r1, #16]
   1a59c:	adds	r6, r4, r0
   1a59e:	adc.w	r7, r5, r1
   1a5a2:	cmp	r3, r7
   1a5a4:	it	eq
   1a5a6:	cmpeq	r2, r6
   1a5a8:	ite	cs
   1a5aa:	movcs.w	r0, #4294967295	; 0xffffffff
   1a5ae:	movcc	r0, #0
   1a5b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a5b4:	movs	r0, #1
   1a5b6:	b.n	1a5b0 <btrfs_list_path_for_root@@Base+0xf8>
   1a5b8:	ldr	r2, [pc, #64]	; (1a5fc <btrfs_list_path_for_root@@Base+0x144>)
   1a5ba:	ldr	r3, [pc, #68]	; (1a600 <btrfs_list_path_for_root@@Base+0x148>)
   1a5bc:	add	r2, pc
   1a5be:	push	{lr}
   1a5c0:	sub	sp, #36	; 0x24
   1a5c2:	ldr	r3, [r2, r3]
   1a5c4:	ldr	r3, [r3, #0]
   1a5c6:	str	r3, [sp, #28]
   1a5c8:	mov.w	r3, #0
   1a5cc:	ldrd	r2, r3, [r1, #24]
   1a5d0:	strd	r2, r3, [sp, #8]
   1a5d4:	ldrd	r2, r3, [r1, #32]
   1a5d8:	mov	r1, sp
   1a5da:	strd	r2, r3, [sp, #16]
   1a5de:	bl	1a578 <btrfs_list_path_for_root@@Base+0xc0>
   1a5e2:	ldr	r2, [pc, #32]	; (1a604 <btrfs_list_path_for_root@@Base+0x14c>)
   1a5e4:	ldr	r3, [pc, #24]	; (1a600 <btrfs_list_path_for_root@@Base+0x148>)
   1a5e6:	add	r2, pc
   1a5e8:	ldr	r3, [r2, r3]
   1a5ea:	ldr	r2, [r3, #0]
   1a5ec:	ldr	r3, [sp, #28]
   1a5ee:	eors	r2, r3
   1a5f0:	beq.n	1a5f6 <btrfs_list_path_for_root@@Base+0x13e>
   1a5f2:	blx	8c90 <__stack_chk_fail@plt>
   1a5f6:	add	sp, #36	; 0x24
   1a5f8:	ldr.w	pc, [sp], #4
   1a5fc:	lsls	r4, r3, #29
   1a5fe:	movs	r5, r0
   1a600:	lsls	r0, r1, #10
   1a602:	movs	r0, r0
   1a604:	lsls	r2, r6, #28
   1a606:	movs	r5, r0
   1a608:	b.w	8b80 <free@plt>
   1a60c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a610:	ldrd	r2, r3, [r0, #16]
   1a614:	ldrd	r8, r9, [r1]
   1a618:	cmp	r3, r9
   1a61a:	it	eq
   1a61c:	cmpeq	r2, r8
   1a61e:	bcc.n	1a668 <btrfs_list_path_for_root@@Base+0x1b0>
   1a620:	cmp	r9, r3
   1a622:	it	eq
   1a624:	cmpeq	r8, r2
   1a626:	bcc.n	1a662 <btrfs_list_path_for_root@@Base+0x1aa>
   1a628:	ldrd	r2, r3, [r0, #24]
   1a62c:	ldrd	ip, r0, [r0, #32]
   1a630:	ldrd	r8, r9, [r1, #8]
   1a634:	adds.w	r6, r2, ip
   1a638:	adc.w	r7, r3, r0
   1a63c:	cmp	r9, r7
   1a63e:	it	eq
   1a640:	cmpeq	r8, r6
   1a642:	bcs.n	1a668 <btrfs_list_path_for_root@@Base+0x1b0>
   1a644:	ldrd	r0, r1, [r1, #16]
   1a648:	adds.w	r4, r8, r0
   1a64c:	adc.w	r5, r9, r1
   1a650:	cmp	r3, r5
   1a652:	it	eq
   1a654:	cmpeq	r2, r4
   1a656:	ite	cs
   1a658:	movcs.w	r0, #4294967295	; 0xffffffff
   1a65c:	movcc	r0, #0
   1a65e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a662:	mov.w	r0, #4294967295	; 0xffffffff
   1a666:	b.n	1a65e <btrfs_list_path_for_root@@Base+0x1a6>
   1a668:	movs	r0, #1
   1a66a:	b.n	1a65e <btrfs_list_path_for_root@@Base+0x1a6>
   1a66c:	ldr	r2, [pc, #72]	; (1a6b8 <btrfs_list_path_for_root@@Base+0x200>)
   1a66e:	ldr	r3, [pc, #76]	; (1a6bc <btrfs_list_path_for_root@@Base+0x204>)
   1a670:	add	r2, pc
   1a672:	push	{lr}
   1a674:	sub	sp, #36	; 0x24
   1a676:	ldr	r3, [r2, r3]
   1a678:	ldr	r3, [r3, #0]
   1a67a:	str	r3, [sp, #28]
   1a67c:	mov.w	r3, #0
   1a680:	ldrd	r2, r3, [r1, #16]
   1a684:	strd	r2, r3, [sp]
   1a688:	ldrd	r2, r3, [r1, #24]
   1a68c:	strd	r2, r3, [sp, #8]
   1a690:	ldrd	r2, r3, [r1, #32]
   1a694:	mov	r1, sp
   1a696:	strd	r2, r3, [sp, #16]
   1a69a:	bl	1a60c <btrfs_list_path_for_root@@Base+0x154>
   1a69e:	ldr	r2, [pc, #32]	; (1a6c0 <btrfs_list_path_for_root@@Base+0x208>)
   1a6a0:	ldr	r3, [pc, #24]	; (1a6bc <btrfs_list_path_for_root@@Base+0x204>)
   1a6a2:	add	r2, pc
   1a6a4:	ldr	r3, [r2, r3]
   1a6a6:	ldr	r2, [r3, #0]
   1a6a8:	ldr	r3, [sp, #28]
   1a6aa:	eors	r2, r3
   1a6ac:	beq.n	1a6b2 <btrfs_list_path_for_root@@Base+0x1fa>
   1a6ae:	blx	8c90 <__stack_chk_fail@plt>
   1a6b2:	add	sp, #36	; 0x24
   1a6b4:	ldr.w	pc, [sp], #4
   1a6b8:	lsls	r0, r5, #26
   1a6ba:	movs	r5, r0
   1a6bc:	lsls	r0, r1, #10
   1a6be:	movs	r0, r0
   1a6c0:	lsls	r6, r6, #25
   1a6c2:	movs	r5, r0
   1a6c4:	ldr.w	ip, [pc, #80]	; 1a718 <btrfs_list_path_for_root@@Base+0x260>
   1a6c8:	ldr	r4, [pc, #80]	; (1a71c <btrfs_list_path_for_root@@Base+0x264>)
   1a6ca:	add	ip, pc
   1a6cc:	ldr	r3, [pc, #80]	; (1a720 <btrfs_list_path_for_root@@Base+0x268>)
   1a6ce:	push	{lr}
   1a6d0:	sub	sp, #92	; 0x5c
   1a6d2:	ldr.w	r4, [ip, r4]
   1a6d6:	add	r3, pc
   1a6d8:	ldr	r4, [r4, #0]
   1a6da:	str	r4, [sp, #84]	; 0x54
   1a6dc:	mov.w	r4, #0
   1a6e0:	ldr	r4, [pc, #64]	; (1a724 <btrfs_list_path_for_root@@Base+0x26c>)
   1a6e2:	ldr	r4, [r3, r4]
   1a6e4:	ldr	r3, [pc, #64]	; (1a728 <btrfs_list_path_for_root@@Base+0x270>)
   1a6e6:	strd	r0, r2, [sp, #8]
   1a6ea:	add	r3, pc
   1a6ec:	ldr	r2, [pc, #60]	; (1a72c <btrfs_list_path_for_root@@Base+0x274>)
   1a6ee:	strd	r1, r3, [sp]
   1a6f2:	movs	r1, #1
   1a6f4:	ldr	r3, [pc, #56]	; (1a730 <btrfs_list_path_for_root@@Base+0x278>)
   1a6f6:	add	r2, pc
   1a6f8:	ldr	r0, [r4, #0]
   1a6fa:	add	r4, sp, #20
   1a6fc:	add	r3, pc
   1a6fe:	blx	9040 <__fprintf_chk@plt+0x4>
   1a702:	movs	r1, #16
   1a704:	mov	r0, r4
   1a706:	blx	8e98 <backtrace@plt>
   1a70a:	movs	r2, #2
   1a70c:	mov	r1, r0
   1a70e:	mov	r0, r4
   1a710:	blx	9214 <backtrace_symbols_fd@plt>
   1a714:	blx	91c0 <abort@plt>
   1a718:	lsls	r6, r1, #25
   1a71a:	movs	r5, r0
   1a71c:	lsls	r0, r1, #10
   1a71e:	movs	r0, r0
   1a720:	lsls	r2, r0, #25
   1a722:	movs	r5, r0
   1a724:	lsls	r4, r3, #10
   1a726:	movs	r0, r0
   1a728:	ldr	r3, [r4, #76]	; 0x4c
   1a72a:	movs	r2, r0
   1a72c:	subs	r4, #104	; 0x68
   1a72e:	movs	r2, r0
   1a730:	ldr	r6, [r6, #68]	; 0x44
   1a732:	movs	r2, r0

0001a734 <cache_tree_init@@Base>:
   1a734:	movs	r3, #0
   1a736:	str	r3, [r0, #0]
   1a738:	bx	lr

0001a73a <insert_cache_extent@@Base>:
   1a73a:	ldr	r2, [pc, #8]	; (1a744 <insert_cache_extent@@Base+0xa>)
   1a73c:	add	r2, pc
   1a73e:	b.w	1c118 <rb_insert@@Base>
   1a742:	nop
   1a744:	mrc2	15, 3, pc, cr9, cr15, {7}

0001a748 <add_cache_extent@@Base>:
   1a748:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a74c:	mov	r5, r0
   1a74e:	movs	r0, #40	; 0x28
   1a750:	mov	r7, r2
   1a752:	mov	r6, r3
   1a754:	blx	8e40 <malloc@plt+0x4>
   1a758:	ldr.w	r8, [pc, #72]	; 1a7a4 <add_cache_extent@@Base+0x5c>
   1a75c:	add	r8, pc
   1a75e:	mov	r4, r0
   1a760:	cbz	r0, 1a78e <add_cache_extent@@Base+0x46>
   1a762:	movs	r2, #0
   1a764:	movs	r3, #0
   1a766:	strd	r2, r3, [r0, #16]
   1a76a:	mov	r1, r0
   1a76c:	ldrd	r2, r3, [sp, #24]
   1a770:	strd	r7, r6, [r0, #24]
   1a774:	strd	r2, r3, [r0, #32]
   1a778:	mov	r0, r5
   1a77a:	bl	1a73a <insert_cache_extent@@Base>
   1a77e:	mov	r5, r0
   1a780:	cbz	r0, 1a788 <add_cache_extent@@Base+0x40>
   1a782:	mov	r0, r4
   1a784:	blx	8b84 <free@plt+0x4>
   1a788:	mov	r0, r5
   1a78a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1a78e:	ldr	r3, [pc, #24]	; (1a7a8 <add_cache_extent@@Base+0x60>)
   1a790:	ldr	r0, [pc, #24]	; (1a7ac <add_cache_extent@@Base+0x64>)
   1a792:	ldr.w	r3, [r8, r3]
   1a796:	add	r0, pc
   1a798:	ldr	r1, [r3, #0]
   1a79a:	blx	91a8 <fputs@plt+0x4>
   1a79e:	movs	r0, #1
   1a7a0:	blx	8f10 <exit@plt>
   1a7a4:	lsls	r4, r7, #22
   1a7a6:	movs	r5, r0
   1a7a8:	lsls	r4, r3, #10
   1a7aa:	movs	r0, r0
   1a7ac:	ldr	r3, [r2, #8]
   1a7ae:	movs	r2, r0

0001a7b0 <insert_cache_extent2@@Base>:
   1a7b0:	ldr	r2, [pc, #4]	; (1a7b8 <insert_cache_extent2@@Base+0x8>)
   1a7b2:	add	r2, pc
   1a7b4:	b.w	1c118 <rb_insert@@Base>
   1a7b8:	mrc2	15, 5, pc, cr7, cr15, {7}

0001a7bc <lookup_cache_extent@@Base>:
   1a7bc:	ldr.w	ip, [pc, #72]	; 1a808 <lookup_cache_extent@@Base+0x4c>
   1a7c0:	ldr	r1, [pc, #72]	; (1a80c <lookup_cache_extent@@Base+0x50>)
   1a7c2:	add	ip, pc
   1a7c4:	push	{lr}
   1a7c6:	sub	sp, #36	; 0x24
   1a7c8:	ldr.w	r1, [ip, r1]
   1a7cc:	ldr	r1, [r1, #0]
   1a7ce:	str	r1, [sp, #28]
   1a7d0:	mov.w	r1, #0
   1a7d4:	strd	r2, r3, [sp, #8]
   1a7d8:	ldrd	r2, r3, [sp, #40]	; 0x28
   1a7dc:	mov	r1, sp
   1a7de:	strd	r2, r3, [sp, #16]
   1a7e2:	movs	r3, #0
   1a7e4:	ldr	r2, [pc, #40]	; (1a810 <lookup_cache_extent@@Base+0x54>)
   1a7e6:	add	r2, pc
   1a7e8:	bl	1c160 <rb_search@@Base>
   1a7ec:	ldr	r2, [pc, #36]	; (1a814 <lookup_cache_extent@@Base+0x58>)
   1a7ee:	ldr	r3, [pc, #28]	; (1a80c <lookup_cache_extent@@Base+0x50>)
   1a7f0:	add	r2, pc
   1a7f2:	ldr	r3, [r2, r3]
   1a7f4:	ldr	r2, [r3, #0]
   1a7f6:	ldr	r3, [sp, #28]
   1a7f8:	eors	r2, r3
   1a7fa:	beq.n	1a800 <lookup_cache_extent@@Base+0x44>
   1a7fc:	blx	8c90 <__stack_chk_fail@plt>
   1a800:	add	sp, #36	; 0x24
   1a802:	ldr.w	pc, [sp], #4
   1a806:	nop
   1a808:	lsls	r6, r2, #21
   1a80a:	movs	r5, r0
   1a80c:	lsls	r0, r1, #10
   1a80e:	movs	r0, r0
   1a810:	stc2	15, cr15, [pc, #1020]	; 1ac10 <add_merge_cache_extent@@Base+0x284>
   1a814:	lsls	r0, r5, #20
   1a816:	movs	r5, r0

0001a818 <lookup_cache_extent2@@Base>:
   1a818:	ldr.w	ip, [pc, #80]	; 1a86c <lookup_cache_extent2@@Base+0x54>
   1a81c:	ldr	r1, [pc, #80]	; (1a870 <lookup_cache_extent2@@Base+0x58>)
   1a81e:	add	ip, pc
   1a820:	push	{lr}
   1a822:	sub	sp, #36	; 0x24
   1a824:	ldr.w	r1, [ip, r1]
   1a828:	ldr	r1, [r1, #0]
   1a82a:	str	r1, [sp, #28]
   1a82c:	mov.w	r1, #0
   1a830:	strd	r2, r3, [sp]
   1a834:	ldrd	r2, r3, [sp, #40]	; 0x28
   1a838:	mov	r1, sp
   1a83a:	strd	r2, r3, [sp, #8]
   1a83e:	ldrd	r2, r3, [sp, #48]	; 0x30
   1a842:	strd	r2, r3, [sp, #16]
   1a846:	movs	r3, #0
   1a848:	ldr	r2, [pc, #40]	; (1a874 <lookup_cache_extent2@@Base+0x5c>)
   1a84a:	add	r2, pc
   1a84c:	bl	1c160 <rb_search@@Base>
   1a850:	ldr	r2, [pc, #36]	; (1a878 <lookup_cache_extent2@@Base+0x60>)
   1a852:	ldr	r3, [pc, #28]	; (1a870 <lookup_cache_extent2@@Base+0x58>)
   1a854:	add	r2, pc
   1a856:	ldr	r3, [r2, r3]
   1a858:	ldr	r2, [r3, #0]
   1a85a:	ldr	r3, [sp, #28]
   1a85c:	eors	r2, r3
   1a85e:	beq.n	1a864 <lookup_cache_extent2@@Base+0x4c>
   1a860:	blx	8c90 <__stack_chk_fail@plt>
   1a864:	add	sp, #36	; 0x24
   1a866:	ldr.w	pc, [sp], #4
   1a86a:	nop
   1a86c:	lsls	r2, r7, #19
   1a86e:	movs	r5, r0
   1a870:	lsls	r0, r1, #10
   1a872:	movs	r0, r0
   1a874:	ldc2	15, cr15, [pc, #1020]!	; 1ac74 <add_merge_cache_extent@@Base+0x2e8>
   1a878:	lsls	r4, r0, #19
   1a87a:	movs	r5, r0

0001a87c <search_cache_extent@@Base>:
   1a87c:	ldr.w	ip, [pc, #76]	; 1a8cc <search_cache_extent@@Base+0x50>
   1a880:	ldr	r1, [pc, #76]	; (1a8d0 <search_cache_extent@@Base+0x54>)
   1a882:	add	ip, pc
   1a884:	push	{lr}
   1a886:	sub	sp, #44	; 0x2c
   1a888:	ldr.w	r1, [ip, r1]
   1a88c:	ldr	r1, [r1, #0]
   1a88e:	str	r1, [sp, #36]	; 0x24
   1a890:	mov.w	r1, #0
   1a894:	strd	r2, r3, [sp, #16]
   1a898:	movs	r2, #1
   1a89a:	movs	r3, #0
   1a89c:	strd	r2, r3, [sp, #24]
   1a8a0:	add	r1, sp, #8
   1a8a2:	ldr	r2, [pc, #48]	; (1a8d4 <search_cache_extent@@Base+0x58>)
   1a8a4:	add	r3, sp, #4
   1a8a6:	add	r2, pc
   1a8a8:	bl	1c160 <rb_search@@Base>
   1a8ac:	cbnz	r0, 1a8b0 <search_cache_extent@@Base+0x34>
   1a8ae:	ldr	r0, [sp, #4]
   1a8b0:	ldr	r2, [pc, #36]	; (1a8d8 <search_cache_extent@@Base+0x5c>)
   1a8b2:	ldr	r3, [pc, #28]	; (1a8d0 <search_cache_extent@@Base+0x54>)
   1a8b4:	add	r2, pc
   1a8b6:	ldr	r3, [r2, r3]
   1a8b8:	ldr	r2, [r3, #0]
   1a8ba:	ldr	r3, [sp, #36]	; 0x24
   1a8bc:	eors	r2, r3
   1a8be:	beq.n	1a8c4 <search_cache_extent@@Base+0x48>
   1a8c0:	blx	8c90 <__stack_chk_fail@plt>
   1a8c4:	add	sp, #44	; 0x2c
   1a8c6:	ldr.w	pc, [sp], #4
   1a8ca:	nop
   1a8cc:	lsls	r6, r2, #18
   1a8ce:	movs	r5, r0
   1a8d0:	lsls	r0, r1, #10
   1a8d2:	movs	r0, r0
   1a8d4:	stc2l	15, cr15, [pc], {255}	; 0xff
   1a8d8:	lsls	r4, r4, #17
   1a8da:	movs	r5, r0

0001a8dc <search_cache_extent2@@Base>:
   1a8dc:	ldr.w	ip, [pc, #84]	; 1a934 <search_cache_extent2@@Base+0x58>
   1a8e0:	ldr	r1, [pc, #84]	; (1a938 <search_cache_extent2@@Base+0x5c>)
   1a8e2:	add	ip, pc
   1a8e4:	push	{lr}
   1a8e6:	sub	sp, #44	; 0x2c
   1a8e8:	ldr.w	r1, [ip, r1]
   1a8ec:	ldr	r1, [r1, #0]
   1a8ee:	str	r1, [sp, #36]	; 0x24
   1a8f0:	mov.w	r1, #0
   1a8f4:	strd	r2, r3, [sp, #8]
   1a8f8:	ldrd	r2, r3, [sp, #48]	; 0x30
   1a8fc:	add	r1, sp, #8
   1a8fe:	strd	r2, r3, [sp, #16]
   1a902:	movs	r2, #1
   1a904:	movs	r3, #0
   1a906:	strd	r2, r3, [sp, #24]
   1a90a:	ldr	r2, [pc, #48]	; (1a93c <search_cache_extent2@@Base+0x60>)
   1a90c:	add	r3, sp, #4
   1a90e:	add	r2, pc
   1a910:	bl	1c160 <rb_search@@Base>
   1a914:	cbnz	r0, 1a918 <search_cache_extent2@@Base+0x3c>
   1a916:	ldr	r0, [sp, #4]
   1a918:	ldr	r2, [pc, #36]	; (1a940 <search_cache_extent2@@Base+0x64>)
   1a91a:	ldr	r3, [pc, #28]	; (1a938 <search_cache_extent2@@Base+0x5c>)
   1a91c:	add	r2, pc
   1a91e:	ldr	r3, [r2, r3]
   1a920:	ldr	r2, [r3, #0]
   1a922:	ldr	r3, [sp, #36]	; 0x24
   1a924:	eors	r2, r3
   1a926:	beq.n	1a92c <search_cache_extent2@@Base+0x50>
   1a928:	blx	8c90 <__stack_chk_fail@plt>
   1a92c:	add	sp, #44	; 0x2c
   1a92e:	ldr.w	pc, [sp], #4
   1a932:	nop
   1a934:	lsls	r6, r6, #16
   1a936:	movs	r5, r0
   1a938:	lsls	r0, r1, #10
   1a93a:	movs	r0, r0
   1a93c:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   1a940:	lsls	r4, r7, #15
   1a942:	movs	r5, r0

0001a944 <first_cache_extent@@Base>:
   1a944:	b.w	186e6 <rb_first@@Base>

0001a948 <last_cache_extent@@Base>:
   1a948:	b.w	186f6 <rb_last@@Base>

0001a94c <prev_cache_extent@@Base>:
   1a94c:	b.w	18732 <rb_prev@@Base>

0001a950 <next_cache_extent@@Base>:
   1a950:	b.w	18706 <rb_next@@Base>

0001a954 <remove_cache_extent@@Base>:
   1a954:	mov	r3, r1
   1a956:	mov	r1, r0
   1a958:	mov	r0, r3
   1a95a:	b.w	18470 <rb_erase@@Base>

0001a95e <cache_tree_free_extents@@Base>:
   1a95e:	push	{r4, r5, r6, lr}
   1a960:	mov	r5, r0
   1a962:	mov	r6, r1
   1a964:	mov	r0, r5
   1a966:	bl	1a944 <first_cache_extent@@Base>
   1a96a:	mov	r4, r0
   1a96c:	cbnz	r0, 1a970 <cache_tree_free_extents@@Base+0x12>
   1a96e:	pop	{r4, r5, r6, pc}
   1a970:	mov	r0, r5
   1a972:	mov	r1, r4
   1a974:	bl	1a954 <remove_cache_extent@@Base>
   1a978:	mov	r0, r4
   1a97a:	blx	r6
   1a97c:	b.n	1a964 <cache_tree_free_extents@@Base+0x6>

0001a97e <free_extent_cache_tree@@Base>:
   1a97e:	ldr	r1, [pc, #8]	; (1a988 <free_extent_cache_tree@@Base+0xa>)
   1a980:	add	r1, pc
   1a982:	b.w	1a95e <cache_tree_free_extents@@Base>
   1a986:	nop
   1a988:	stc2	15, cr15, [r5], {255}	; 0xff

0001a98c <add_merge_cache_extent@@Base>:
   1a98c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a990:	sub	sp, #36	; 0x24
   1a992:	ldr	r4, [r0, #0]
   1a994:	mov	r5, r0
   1a996:	ldr	r1, [sp, #72]	; 0x48
   1a998:	mov	sl, r2
   1a99a:	mov	fp, r3
   1a99c:	str	r1, [sp, #0]
   1a99e:	ldr	r1, [sp, #76]	; 0x4c
   1a9a0:	str	r1, [sp, #4]
   1a9a2:	cmp	r4, #0
   1a9a4:	beq.w	1aafe <add_merge_cache_extent@@Base+0x172>
   1a9a8:	bl	1a87c <search_cache_extent@@Base>
   1a9ac:	mov	r7, r0
   1a9ae:	cbnz	r0, 1a9c0 <add_merge_cache_extent@@Base+0x34>
   1a9b0:	mov	r0, r5
   1a9b2:	bl	1a948 <last_cache_extent@@Base>
   1a9b6:	mov	r4, r0
   1a9b8:	cmp	r0, #0
   1a9ba:	bne.n	1aa30 <add_merge_cache_extent@@Base+0xa4>
   1a9bc:	movs	r7, #0
   1a9be:	b.n	1aa6e <add_merge_cache_extent@@Base+0xe2>
   1a9c0:	ldrd	r2, r3, [r0, #24]
   1a9c4:	cmp	r3, fp
   1a9c6:	it	eq
   1a9c8:	cmpeq	r2, sl
   1a9ca:	bcc.n	1a9fa <add_merge_cache_extent@@Base+0x6e>
   1a9cc:	bl	1a94c <prev_cache_extent@@Base>
   1a9d0:	mov	r4, r0
   1a9d2:	mov	r0, r7
   1a9d4:	ldr	r3, [sp, #0]
   1a9d6:	adds.w	r3, sl, r3
   1a9da:	str	r3, [sp, #8]
   1a9dc:	ldr	r3, [sp, #4]
   1a9de:	adc.w	r3, fp, r3
   1a9e2:	str	r3, [sp, #12]
   1a9e4:	ldrd	r6, r7, [sp, #8]
   1a9e8:	ldrd	r2, r3, [r0, #24]
   1a9ec:	cmp	r3, r7
   1a9ee:	it	eq
   1a9f0:	cmpeq	r2, r6
   1a9f2:	bcc.w	1ab06 <add_merge_cache_extent@@Base+0x17a>
   1a9f6:	cbz	r4, 1aa38 <add_merge_cache_extent@@Base+0xac>
   1a9f8:	b.n	1aa04 <add_merge_cache_extent@@Base+0x78>
   1a9fa:	bl	1a950 <next_cache_extent@@Base>
   1a9fe:	mov	r4, r7
   1aa00:	cmp	r0, #0
   1aa02:	bne.n	1a9d4 <add_merge_cache_extent@@Base+0x48>
   1aa04:	ldrd	r2, r1, [r4, #32]
   1aa08:	ldrd	r3, r7, [r4, #24]
   1aa0c:	adds	r3, r3, r2
   1aa0e:	str	r3, [sp, #16]
   1aa10:	adc.w	r3, r7, r1
   1aa14:	str	r3, [sp, #20]
   1aa16:	ldrd	r2, r3, [sp, #16]
   1aa1a:	cmp	fp, r3
   1aa1c:	it	eq
   1aa1e:	cmpeq	sl, r2
   1aa20:	bcs.n	1aa34 <add_merge_cache_extent@@Base+0xa8>
   1aa22:	ldr	r0, [pc, #248]	; (1ab1c <add_merge_cache_extent@@Base+0x190>)
   1aa24:	movs	r2, #1
   1aa26:	mov.w	r1, #306	; 0x132
   1aa2a:	add	r0, pc
   1aa2c:	bl	1a6c4 <btrfs_list_path_for_root@@Base+0x20c>
   1aa30:	mov	r0, r7
   1aa32:	b.n	1aa04 <add_merge_cache_extent@@Base+0x78>
   1aa34:	cmp	r0, #0
   1aa36:	beq.n	1a9bc <add_merge_cache_extent@@Base+0x30>
   1aa38:	ldr	r1, [sp, #0]
   1aa3a:	ldrd	r2, r3, [r0, #24]
   1aa3e:	adds.w	r8, sl, r1
   1aa42:	ldr	r1, [sp, #4]
   1aa44:	adc.w	r9, fp, r1
   1aa48:	cmp	r9, r3
   1aa4a:	it	eq
   1aa4c:	cmpeq	r8, r2
   1aa4e:	bne.n	1a9bc <add_merge_cache_extent@@Base+0x30>
   1aa50:	ldrd	r3, r2, [r0, #32]
   1aa54:	movs	r7, #1
   1aa56:	strd	sl, fp, [r0, #24]
   1aa5a:	adds.w	r3, r8, r3
   1aa5e:	adc.w	r2, r9, r2
   1aa62:	subs.w	r3, r3, sl
   1aa66:	sbc.w	r2, r2, fp
   1aa6a:	strd	r3, r2, [r0, #32]
   1aa6e:	cbz	r4, 1aac4 <add_merge_cache_extent@@Base+0x138>
   1aa70:	ldrd	ip, lr, [r4, #24]
   1aa74:	ldr	r3, [r4, #32]
   1aa76:	adds.w	r3, ip, r3
   1aa7a:	str	r3, [sp, #24]
   1aa7c:	ldr	r3, [r4, #36]	; 0x24
   1aa7e:	adc.w	r3, lr, r3
   1aa82:	str	r3, [sp, #28]
   1aa84:	ldrd	r2, r3, [sp, #24]
   1aa88:	cmp	r3, fp
   1aa8a:	it	eq
   1aa8c:	cmpeq	r2, sl
   1aa8e:	bne.n	1ab02 <add_merge_cache_extent@@Base+0x176>
   1aa90:	cbz	r7, 1aae2 <add_merge_cache_extent@@Base+0x156>
   1aa92:	ldrd	r3, r2, [r0, #24]
   1aa96:	ldr	r1, [r0, #32]
   1aa98:	adds	r3, r3, r1
   1aa9a:	ldr	r1, [r0, #36]	; 0x24
   1aa9c:	adc.w	r2, r1, r2
   1aaa0:	subs.w	r3, r3, ip
   1aaa4:	sbc.w	r2, r2, lr
   1aaa8:	strd	r3, r2, [r0, #32]
   1aaac:	ldrd	r2, r3, [r4, #24]
   1aab0:	mov	r1, r4
   1aab2:	strd	r2, r3, [r0, #24]
   1aab6:	mov	r0, r5
   1aab8:	bl	1a954 <remove_cache_extent@@Base>
   1aabc:	mov	r0, r4
   1aabe:	blx	8b84 <free@plt+0x4>
   1aac2:	mov	r4, r7
   1aac4:	orrs.w	r3, r7, r4
   1aac8:	bne.n	1ab12 <add_merge_cache_extent@@Base+0x186>
   1aaca:	ldr	r3, [sp, #0]
   1aacc:	mov	r2, sl
   1aace:	mov	r0, r5
   1aad0:	str	r3, [sp, #72]	; 0x48
   1aad2:	ldr	r3, [sp, #4]
   1aad4:	str	r3, [sp, #76]	; 0x4c
   1aad6:	mov	r3, fp
   1aad8:	add	sp, #36	; 0x24
   1aada:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aade:	b.w	1a748 <add_cache_extent@@Base>
   1aae2:	ldr	r3, [sp, #0]
   1aae4:	adds.w	r1, sl, r3
   1aae8:	ldr	r3, [sp, #4]
   1aaea:	adc.w	r2, fp, r3
   1aaee:	subs.w	r1, r1, ip
   1aaf2:	sbc.w	r2, r2, lr
   1aaf6:	strd	r1, r2, [r4, #32]
   1aafa:	movs	r4, #1
   1aafc:	b.n	1aac4 <add_merge_cache_extent@@Base+0x138>
   1aafe:	mov	r7, r4
   1ab00:	b.n	1aac4 <add_merge_cache_extent@@Base+0x138>
   1ab02:	movs	r4, #0
   1ab04:	b.n	1aac4 <add_merge_cache_extent@@Base+0x138>
   1ab06:	ldr	r0, [pc, #24]	; (1ab20 <add_merge_cache_extent@@Base+0x194>)
   1ab08:	movs	r2, #1
   1ab0a:	movw	r1, #305	; 0x131
   1ab0e:	add	r0, pc
   1ab10:	b.n	1aa2c <add_merge_cache_extent@@Base+0xa0>
   1ab12:	movs	r0, #0
   1ab14:	add	sp, #36	; 0x24
   1ab16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab1a:	nop
   1ab1c:	ldr	r7, [r2, #20]
   1ab1e:	movs	r2, r0
   1ab20:	ldr	r4, [r3, #8]
   1ab22:	movs	r2, r0
   1ab24:	ldrd	r3, r2, [r0, #48]	; 0x30
   1ab28:	push	{r4, lr}
   1ab2a:	adds	r3, #1
   1ab2c:	ldrd	r1, r4, [r0, #40]	; 0x28
   1ab30:	adc.w	r2, r2, #0
   1ab34:	subs	r3, r3, r1
   1ab36:	sbc.w	r2, r2, r4
   1ab3a:	strd	r1, r4, [r0, #24]
   1ab3e:	strd	r3, r2, [r0, #32]
   1ab42:	pop	{r4, pc}
   1ab44:	push	{r3, lr}
   1ab46:	movs	r0, #72	; 0x48
   1ab48:	blx	8e40 <malloc@plt+0x4>
   1ab4c:	cbz	r0, 1ab64 <add_merge_cache_extent@@Base+0x1d8>
   1ab4e:	movs	r2, #0
   1ab50:	movs	r3, #0
   1ab52:	mov.w	ip, #1
   1ab56:	movs	r1, #0
   1ab58:	strd	r2, r3, [r0, #16]
   1ab5c:	strd	ip, r1, [r0, #56]	; 0x38
   1ab60:	strd	r2, r3, [r0, #64]	; 0x40
   1ab64:	pop	{r3, pc}
   1ab66:	push	{r3, r4, r5, r6, r7, lr}
   1ab68:	mov	r4, r0
   1ab6a:	ldr	r7, [sp, #24]
   1ab6c:	movs	r0, #1
   1ab6e:	mov	r6, r2
   1ab70:	mov	r5, r3
   1ab72:	add.w	r1, r7, #96	; 0x60
   1ab76:	blx	8ab8 <calloc@plt+0x4>
   1ab7a:	cbz	r0, 1abba <add_merge_cache_extent@@Base+0x22e>
   1ab7c:	movs	r3, #1
   1ab7e:	movs	r1, #0
   1ab80:	mov.w	r2, #4294967295	; 0xffffffff
   1ab84:	strd	r3, r1, [r0, #80]	; 0x50
   1ab88:	str	r4, [r0, #92]	; 0x5c
   1ab8a:	mov.w	r3, #4294967295	; 0xffffffff
   1ab8e:	adds	r4, #64	; 0x40
   1ab90:	str	r3, [r0, #88]	; 0x58
   1ab92:	strd	r6, r5, [r0, #40]	; 0x28
   1ab96:	mov.w	r3, #4294967295	; 0xffffffff
   1ab9a:	str	r7, [r0, #76]	; 0x4c
   1ab9c:	strd	r2, r3, [r0, #48]	; 0x30
   1aba0:	add.w	r3, r0, #68	; 0x44
   1aba4:	strd	r6, r5, [r0, #24]
   1aba8:	strd	r3, r3, [r0, #68]	; 0x44
   1abac:	add.w	r3, r0, #60	; 0x3c
   1abb0:	strd	r7, r1, [r0, #32]
   1abb4:	str	r4, [r0, #56]	; 0x38
   1abb6:	strd	r3, r3, [r0, #60]	; 0x3c
   1abba:	pop	{r3, r4, r5, r6, r7, pc}
   1abbc:	ldr.w	ip, [pc, #104]	; 1ac28 <add_merge_cache_extent@@Base+0x29c>
   1abc0:	push	{r4, r5, lr}
   1abc2:	add	ip, pc
   1abc4:	ldr	r5, [pc, #100]	; (1ac2c <add_merge_cache_extent@@Base+0x2a0>)
   1abc6:	sub	sp, #92	; 0x5c
   1abc8:	ldr	r4, [pc, #100]	; (1ac30 <add_merge_cache_extent@@Base+0x2a4>)
   1abca:	ldr.w	r5, [ip, r5]
   1abce:	add	r4, pc
   1abd0:	ldr	r5, [r5, #0]
   1abd2:	str	r5, [sp, #84]	; 0x54
   1abd4:	mov.w	r5, #0
   1abd8:	cbz	r3, 1ac0e <add_merge_cache_extent@@Base+0x282>
   1abda:	ldr	r5, [pc, #88]	; (1ac34 <add_merge_cache_extent@@Base+0x2a8>)
   1abdc:	ldr	r4, [r4, r5]
   1abde:	strd	r2, r1, [sp]
   1abe2:	movs	r1, #1
   1abe4:	strd	r0, r3, [sp, #8]
   1abe8:	ldr	r2, [pc, #76]	; (1ac38 <add_merge_cache_extent@@Base+0x2ac>)
   1abea:	ldr	r3, [pc, #80]	; (1ac3c <add_merge_cache_extent@@Base+0x2b0>)
   1abec:	ldr	r0, [r4, #0]
   1abee:	add	r4, sp, #20
   1abf0:	add	r3, pc
   1abf2:	add	r2, pc
   1abf4:	blx	9040 <__fprintf_chk@plt+0x4>
   1abf8:	movs	r1, #16
   1abfa:	mov	r0, r4
   1abfc:	blx	8e98 <backtrace@plt>
   1ac00:	movs	r2, #2
   1ac02:	mov	r1, r0
   1ac04:	mov	r0, r4
   1ac06:	blx	9214 <backtrace_symbols_fd@plt>
   1ac0a:	blx	91c0 <abort@plt>
   1ac0e:	ldr	r2, [pc, #48]	; (1ac40 <add_merge_cache_extent@@Base+0x2b4>)
   1ac10:	ldr	r3, [pc, #24]	; (1ac2c <add_merge_cache_extent@@Base+0x2a0>)
   1ac12:	add	r2, pc
   1ac14:	ldr	r3, [r2, r3]
   1ac16:	ldr	r2, [r3, #0]
   1ac18:	ldr	r3, [sp, #84]	; 0x54
   1ac1a:	eors	r2, r3
   1ac1c:	beq.n	1ac22 <add_merge_cache_extent@@Base+0x296>
   1ac1e:	blx	8c90 <__stack_chk_fail@plt>
   1ac22:	add	sp, #92	; 0x5c
   1ac24:	pop	{r4, r5, pc}
   1ac26:	nop
   1ac28:	lsls	r6, r2, #5
   1ac2a:	movs	r5, r0
   1ac2c:	lsls	r0, r1, #10
   1ac2e:	movs	r0, r0
   1ac30:	lsls	r2, r1, #5
   1ac32:	movs	r5, r0
   1ac34:	lsls	r4, r3, #10
   1ac36:	movs	r0, r0
   1ac38:	adds	r7, #108	; 0x6c
   1ac3a:	movs	r2, r0
   1ac3c:	str	r4, [r6, #124]	; 0x7c
   1ac3e:	movs	r2, r0
   1ac40:	lsls	r6, r0, #4
   1ac42:	movs	r5, r0
   1ac44:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ac48:	mov	r4, r2
   1ac4a:	ldrd	r2, r3, [r1, #40]	; 0x28
   1ac4e:	mov	r5, r1
   1ac50:	ldrd	r6, r8, [sp, #24]
   1ac54:	mov	r7, r0
   1ac56:	mov	r0, r4
   1ac58:	strd	r2, r3, [r4, #40]	; 0x28
   1ac5c:	adds.w	r2, r6, #4294967295	; 0xffffffff
   1ac60:	adc.w	r3, r8, #4294967295	; 0xffffffff
   1ac64:	strd	r2, r3, [r4, #48]	; 0x30
   1ac68:	ldr	r3, [r1, #60]	; 0x3c
   1ac6a:	str	r3, [r4, #60]	; 0x3c
   1ac6c:	bl	1ab24 <add_merge_cache_extent@@Base+0x198>
   1ac70:	mov	r0, r5
   1ac72:	strd	r6, r8, [r5, #40]	; 0x28
   1ac76:	bl	1ab24 <add_merge_cache_extent@@Base+0x198>
   1ac7a:	mov	r1, r4
   1ac7c:	mov	r0, r7
   1ac7e:	bl	1a73a <insert_cache_extent@@Base>
   1ac82:	ldr	r1, [pc, #20]	; (1ac98 <add_merge_cache_extent@@Base+0x30c>)
   1ac84:	movs	r2, #185	; 0xb9
   1ac86:	add	r1, pc
   1ac88:	mov	r3, r0
   1ac8a:	ldr	r0, [pc, #16]	; (1ac9c <add_merge_cache_extent@@Base+0x310>)
   1ac8c:	add	r0, pc
   1ac8e:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ac92:	movs	r0, #0
   1ac94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ac98:	ldr	r2, [r4, #12]
   1ac9a:	movs	r2, r0
   1ac9c:	ldr	r6, [pc, #728]	; (1af78 <extent_buffer_bitmap_set@@Base+0x26>)
   1ac9e:	movs	r2, r0
   1aca0:	ldr	r1, [pc, #124]	; (1ad20 <add_merge_cache_extent@@Base+0x394>)
   1aca2:	movw	r2, #649	; 0x289
   1aca6:	push	{r3, r4, r5, lr}
   1aca8:	mov	r4, r0
   1acaa:	ldr	r5, [r0, #56]	; 0x38
   1acac:	add	r1, pc
   1acae:	ldr	r3, [r0, #80]	; 0x50
   1acb0:	adds	r1, #12
   1acb2:	ldr	r0, [pc, #112]	; (1ad24 <add_merge_cache_extent@@Base+0x398>)
   1acb4:	add	r0, pc
   1acb6:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1acba:	cbz	r5, 1ad1a <add_merge_cache_extent@@Base+0x38e>
   1acbc:	ldrd	r2, r3, [r5, #16]
   1acc0:	movs	r1, #0
   1acc2:	ldr	r0, [r4, #76]	; 0x4c
   1acc4:	cmp	r3, r1
   1acc6:	it	eq
   1acc8:	cmpeq	r2, r0
   1acca:	ite	cc
   1accc:	movcc	r3, #1
   1acce:	movcs	r3, #0
   1acd0:	ldr	r1, [pc, #84]	; (1ad28 <add_merge_cache_extent@@Base+0x39c>)
   1acd2:	movw	r2, #650	; 0x28a
   1acd6:	ldr	r0, [pc, #84]	; (1ad2c <add_merge_cache_extent@@Base+0x3a0>)
   1acd8:	add	r1, pc
   1acda:	adds	r1, #12
   1acdc:	add	r0, pc
   1acde:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ace2:	ldrd	r1, r2, [r4, #60]	; 0x3c
   1ace6:	add.w	r3, r4, #60	; 0x3c
   1acea:	str	r2, [r1, #4]
   1acec:	str	r1, [r2, #0]
   1acee:	strd	r3, r3, [r4, #60]	; 0x3c
   1acf2:	ldr	r3, [r4, #84]	; 0x54
   1acf4:	lsls	r3, r3, #20
   1acf6:	bmi.n	1ad10 <add_merge_cache_extent@@Base+0x384>
   1acf8:	mov	r1, r4
   1acfa:	adds	r0, r5, #4
   1acfc:	bl	1a954 <remove_cache_extent@@Base>
   1ad00:	ldrd	r2, r3, [r5, #16]
   1ad04:	ldr	r1, [r4, #76]	; 0x4c
   1ad06:	subs	r2, r2, r1
   1ad08:	sbc.w	r3, r3, #0
   1ad0c:	strd	r2, r3, [r5, #16]
   1ad10:	mov	r0, r4
   1ad12:	ldmia.w	sp!, {r3, r4, r5, lr}
   1ad16:	b.w	8b80 <free@plt>
   1ad1a:	mov	r3, r5
   1ad1c:	b.n	1acd0 <add_merge_cache_extent@@Base+0x344>
   1ad1e:	nop
   1ad20:	ldr	r4, [r7, #8]
   1ad22:	movs	r2, r0
   1ad24:	str	r4, [r7, #112]	; 0x70
   1ad26:	movs	r2, r0
   1ad28:	ldr	r0, [r2, #8]
   1ad2a:	movs	r2, r0
   1ad2c:	str	r5, [r3, #112]	; 0x70
   1ad2e:	movs	r2, r0
   1ad30:	push	{r3, r4, r5, lr}
   1ad32:	mov	r4, r0
   1ad34:	ldr	r5, [r0, #56]	; 0x38
   1ad36:	movs	r2, #67	; 0x43
   1ad38:	ldr	r1, [pc, #32]	; (1ad5c <add_merge_cache_extent@@Base+0x3d0>)
   1ad3a:	subs	r5, #1
   1ad3c:	str	r5, [r0, #56]	; 0x38
   1ad3e:	ldr	r0, [pc, #32]	; (1ad60 <add_merge_cache_extent@@Base+0x3d4>)
   1ad40:	add	r1, pc
   1ad42:	lsrs	r3, r5, #31
   1ad44:	adds	r1, #37	; 0x25
   1ad46:	add	r0, pc
   1ad48:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ad4c:	cbnz	r5, 1ad58 <add_merge_cache_extent@@Base+0x3cc>
   1ad4e:	mov	r0, r4
   1ad50:	ldmia.w	sp!, {r3, r4, r5, lr}
   1ad54:	b.w	8b80 <free@plt>
   1ad58:	pop	{r3, r4, r5, pc}
   1ad5a:	nop
   1ad5c:	ldr	r0, [r5, #0]
   1ad5e:	movs	r2, r0
   1ad60:	str	r6, [r2, #108]	; 0x6c
   1ad62:	movs	r2, r0
   1ad64:	b.n	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1ad66:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ad6a:	mov	r5, r0
   1ad6c:	ldr	r3, [r1, #60]	; 0x3c
   1ad6e:	mov	r4, r1
   1ad70:	tst.w	r3, #10
   1ad74:	bne.n	1adfc <add_merge_cache_extent@@Base+0x470>
   1ad76:	mov	r0, r1
   1ad78:	bl	1a94c <prev_cache_extent@@Base>
   1ad7c:	mov	sl, r0
   1ad7e:	cbz	r0, 1adbc <add_merge_cache_extent@@Base+0x430>
   1ad80:	ldrd	r3, r2, [r4, #40]	; 0x28
   1ad84:	adds.w	r8, r3, #4294967295	; 0xffffffff
   1ad88:	adc.w	r9, r2, #4294967295	; 0xffffffff
   1ad8c:	ldrd	r2, r3, [r0, #48]	; 0x30
   1ad90:	cmp	r3, r9
   1ad92:	it	eq
   1ad94:	cmpeq	r2, r8
   1ad96:	bne.n	1adbc <add_merge_cache_extent@@Base+0x430>
   1ad98:	ldr	r2, [r0, #60]	; 0x3c
   1ad9a:	ldr	r3, [r4, #60]	; 0x3c
   1ad9c:	cmp	r2, r3
   1ad9e:	bne.n	1adbc <add_merge_cache_extent@@Base+0x430>
   1ada0:	ldrd	r2, r3, [r0, #40]	; 0x28
   1ada4:	mov	r0, r4
   1ada6:	strd	r2, r3, [r4, #40]	; 0x28
   1adaa:	bl	1ab24 <add_merge_cache_extent@@Base+0x198>
   1adae:	mov	r0, r5
   1adb0:	mov	r1, sl
   1adb2:	bl	1a954 <remove_cache_extent@@Base>
   1adb6:	mov	r0, sl
   1adb8:	bl	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1adbc:	mov	r0, r4
   1adbe:	bl	1a950 <next_cache_extent@@Base>
   1adc2:	cbz	r0, 1adfc <add_merge_cache_extent@@Base+0x470>
   1adc4:	ldrd	r3, r2, [r4, #48]	; 0x30
   1adc8:	adds	r6, r3, #1
   1adca:	adc.w	r7, r2, #0
   1adce:	ldrd	r2, r3, [r0, #40]	; 0x28
   1add2:	cmp	r3, r7
   1add4:	it	eq
   1add6:	cmpeq	r2, r6
   1add8:	bne.n	1adfc <add_merge_cache_extent@@Base+0x470>
   1adda:	ldr	r2, [r0, #60]	; 0x3c
   1addc:	ldr	r3, [r4, #60]	; 0x3c
   1adde:	cmp	r2, r3
   1ade0:	bne.n	1adfc <add_merge_cache_extent@@Base+0x470>
   1ade2:	ldrd	r2, r3, [r4, #40]	; 0x28
   1ade6:	strd	r2, r3, [r0, #40]	; 0x28
   1adea:	bl	1ab24 <add_merge_cache_extent@@Base+0x198>
   1adee:	mov	r0, r5
   1adf0:	mov	r1, r4
   1adf2:	bl	1a954 <remove_cache_extent@@Base>
   1adf6:	mov	r0, r4
   1adf8:	bl	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1adfc:	movs	r0, #0
   1adfe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ae02:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1ae06:	mov	r5, r0
   1ae08:	ldrd	r8, r9, [sp, #32]
   1ae0c:	mov	r4, r1
   1ae0e:	ldr.w	sl, [pc, #96]	; 1ae70 <add_merge_cache_extent@@Base+0x4e4>
   1ae12:	mov	r7, r3
   1ae14:	cmp	r9, r3
   1ae16:	ldr	r0, [pc, #92]	; (1ae74 <add_merge_cache_extent@@Base+0x4e8>)
   1ae18:	add	sl, pc
   1ae1a:	it	eq
   1ae1c:	cmpeq	r8, r2
   1ae1e:	add.w	sl, sl, #61	; 0x3d
   1ae22:	mov	r6, r2
   1ae24:	ite	cc
   1ae26:	movcc	r3, #1
   1ae28:	movcs	r3, #0
   1ae2a:	mov	r1, sl
   1ae2c:	add	r0, pc
   1ae2e:	movs	r2, #158	; 0x9e
   1ae30:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ae34:	ldr	r2, [sp, #40]	; 0x28
   1ae36:	ldr	r3, [r4, #60]	; 0x3c
   1ae38:	mov	r0, r4
   1ae3a:	strd	r6, r7, [r4, #40]	; 0x28
   1ae3e:	orrs	r3, r2
   1ae40:	strd	r8, r9, [r4, #48]	; 0x30
   1ae44:	str	r3, [r4, #60]	; 0x3c
   1ae46:	bl	1ab24 <add_merge_cache_extent@@Base+0x198>
   1ae4a:	mov	r1, r4
   1ae4c:	mov	r0, r5
   1ae4e:	bl	1a73a <insert_cache_extent@@Base>
   1ae52:	movs	r2, #164	; 0xa4
   1ae54:	mov	r1, sl
   1ae56:	mov	r3, r0
   1ae58:	ldr	r0, [pc, #28]	; (1ae78 <add_merge_cache_extent@@Base+0x4ec>)
   1ae5a:	add	r0, pc
   1ae5c:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ae60:	mov	r1, r4
   1ae62:	mov	r0, r5
   1ae64:	bl	1ad66 <add_merge_cache_extent@@Base+0x3da>
   1ae68:	movs	r0, #0
   1ae6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ae6e:	nop
   1ae70:	str	r0, [r2, #116]	; 0x74
   1ae72:	movs	r2, r0
   1ae74:	str	r0, [r0, #96]	; 0x60
   1ae76:	movs	r2, r0
   1ae78:	ldr	r4, [pc, #928]	; (1b21c <set_extent_bits@@Base+0xc0>)
   1ae7a:	movs	r2, r0
   1ae7c:	push	{r3, r4, r5, lr}
   1ae7e:	mov	r4, r1
   1ae80:	ldr	r3, [r1, #60]	; 0x3c
   1ae82:	and.w	r5, r2, r3
   1ae86:	bic.w	r2, r3, r2
   1ae8a:	str	r2, [r1, #60]	; 0x3c
   1ae8c:	cbnz	r2, 1ae9c <add_merge_cache_extent@@Base+0x510>
   1ae8e:	bl	1a954 <remove_cache_extent@@Base>
   1ae92:	mov	r0, r4
   1ae94:	bl	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1ae98:	mov	r0, r5
   1ae9a:	pop	{r3, r4, r5, pc}
   1ae9c:	bl	1ad66 <add_merge_cache_extent@@Base+0x3da>
   1aea0:	b.n	1ae98 <add_merge_cache_extent@@Base+0x50c>
   1aea2:	push	{r0, r1, r4, r5, r6, lr}
   1aea4:	mov	r6, r1
   1aea6:	mov	r4, r0
   1aea8:	cbz	r0, 1af04 <add_merge_cache_extent@@Base+0x578>
   1aeaa:	cmn.w	r0, #4096	; 0x1000
   1aeae:	bhi.n	1af04 <add_merge_cache_extent@@Base+0x578>
   1aeb0:	ldr	r5, [r0, #80]	; 0x50
   1aeb2:	movw	r2, #665	; 0x299
   1aeb6:	ldr	r1, [pc, #80]	; (1af08 <add_merge_cache_extent@@Base+0x57c>)
   1aeb8:	subs	r5, #1
   1aeba:	str	r5, [r0, #80]	; 0x50
   1aebc:	ldr	r0, [pc, #76]	; (1af0c <add_merge_cache_extent@@Base+0x580>)
   1aebe:	add	r1, pc
   1aec0:	lsrs	r3, r5, #31
   1aec2:	adds	r1, #74	; 0x4a
   1aec4:	add	r0, pc
   1aec6:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1aeca:	cbnz	r5, 1af04 <add_merge_cache_extent@@Base+0x578>
   1aecc:	ldr	r3, [r4, #84]	; 0x54
   1aece:	lsls	r2, r3, #31
   1aed0:	bpl.n	1aee2 <add_merge_cache_extent@@Base+0x556>
   1aed2:	ldr	r3, [r4, #76]	; 0x4c
   1aed4:	ldr	r0, [pc, #56]	; (1af10 <add_merge_cache_extent@@Base+0x584>)
   1aed6:	str	r3, [sp, #0]
   1aed8:	add	r0, pc
   1aeda:	ldrd	r2, r3, [r4, #40]	; 0x28
   1aede:	bl	1bca0 <__btrfs_warning@@Base>
   1aee2:	ldrd	r1, r2, [r4, #68]	; 0x44
   1aee6:	add.w	r3, r4, #68	; 0x44
   1aeea:	str	r2, [r1, #4]
   1aeec:	str	r1, [r2, #0]
   1aeee:	strd	r3, r3, [r4, #68]	; 0x44
   1aef2:	ldr	r3, [r4, #84]	; 0x54
   1aef4:	lsls	r3, r3, #20
   1aef6:	bmi.n	1aefa <add_merge_cache_extent@@Base+0x56e>
   1aef8:	cbz	r6, 1af04 <add_merge_cache_extent@@Base+0x578>
   1aefa:	mov	r0, r4
   1aefc:	add	sp, #8
   1aefe:	ldmia.w	sp!, {r4, r5, r6, lr}
   1af02:	b.n	1aca0 <add_merge_cache_extent@@Base+0x314>
   1af04:	add	sp, #8
   1af06:	pop	{r4, r5, r6, pc}
   1af08:	str	r2, [r5, #104]	; 0x68
   1af0a:	movs	r2, r0
   1af0c:	str	r4, [r6, #84]	; 0x54
   1af0e:	movs	r2, r0
   1af10:	str	r5, [r5, #84]	; 0x54
   1af12:	movs	r2, r0

0001af14 <extent_io_tree_init@@Base>:
   1af14:	push	{r4, lr}
   1af16:	mov	r4, r0
   1af18:	bl	1a734 <cache_tree_init@@Base>
   1af1c:	adds	r0, r4, #4
   1af1e:	bl	1a734 <cache_tree_init@@Base>
   1af22:	add.w	r3, r4, #8
   1af26:	movs	r2, #0
   1af28:	strd	r3, r3, [r4, #8]
   1af2c:	movs	r3, #0
   1af2e:	strd	r2, r3, [r4, #16]
   1af32:	bl	364f4 <total_memory@@Base>
   1af36:	movs	r3, #0
   1af38:	str	r3, [r4, #28]
   1af3a:	lsrs	r0, r0, #2
   1af3c:	str	r0, [r4, #24]
   1af3e:	pop	{r4, pc}

0001af40 <extent_io_tree_init_cache_max@@Base>:
   1af40:	push	{r4, r5, r6, lr}
   1af42:	mov	r4, r0
   1af44:	mov	r6, r2
   1af46:	mov	r5, r3
   1af48:	bl	1af14 <extent_io_tree_init@@Base>
   1af4c:	strd	r6, r5, [r4, #24]
   1af50:	pop	{r4, r5, r6, pc}

0001af52 <extent_buffer_bitmap_set@@Base>:
   1af52:	adds	r0, #96	; 0x60
   1af54:	add.w	r1, r1, r2, lsr #3
   1af58:	push	{r4, r5, r6, lr}
   1af5a:	add	r1, r0
   1af5c:	movs	r4, #255	; 0xff
   1af5e:	and.w	r0, r2, #7
   1af62:	lsls	r4, r0
   1af64:	rsb	r5, r0, #8
   1af68:	mov	r0, r3
   1af6a:	uxtb	r4, r4
   1af6c:	cmp	r5, r0
   1af6e:	bls.n	1af8a <extent_buffer_bitmap_set@@Base+0x38>
   1af70:	cbz	r0, 1af88 <extent_buffer_bitmap_set@@Base+0x36>
   1af72:	add	r2, r3
   1af74:	movs	r3, #255	; 0xff
   1af76:	negs	r2, r2
   1af78:	and.w	r2, r2, #7
   1af7c:	asr.w	r2, r3, r2
   1af80:	ands	r4, r2
   1af82:	ldrb	r2, [r1, #0]
   1af84:	orrs	r4, r2
   1af86:	strb	r4, [r1, #0]
   1af88:	pop	{r4, r5, r6, pc}
   1af8a:	ldrb	r6, [r1, #0]
   1af8c:	subs	r0, r0, r5
   1af8e:	movs	r5, #8
   1af90:	orrs	r4, r6
   1af92:	strb.w	r4, [r1], #1
   1af96:	movs	r4, #255	; 0xff
   1af98:	b.n	1af6c <extent_buffer_bitmap_set@@Base+0x1a>

0001af9a <extent_buffer_bitmap_clear@@Base>:
   1af9a:	adds	r0, #96	; 0x60
   1af9c:	add.w	r1, r1, r2, lsr #3
   1afa0:	push	{r4, r5, r6, lr}
   1afa2:	add	r1, r0
   1afa4:	and.w	r4, r2, #7
   1afa8:	movs	r0, #255	; 0xff
   1afaa:	lsls	r0, r4
   1afac:	rsb	r5, r4, #8
   1afb0:	mov	r4, r3
   1afb2:	uxtb	r0, r0
   1afb4:	cmp	r5, r4
   1afb6:	bls.n	1afd4 <extent_buffer_bitmap_clear@@Base+0x3a>
   1afb8:	cbz	r4, 1afd2 <extent_buffer_bitmap_clear@@Base+0x38>
   1afba:	add	r2, r3
   1afbc:	movs	r3, #255	; 0xff
   1afbe:	negs	r2, r2
   1afc0:	and.w	r2, r2, #7
   1afc4:	asr.w	r2, r3, r2
   1afc8:	ands	r0, r2
   1afca:	ldrb	r2, [r1, #0]
   1afcc:	bic.w	r0, r2, r0
   1afd0:	strb	r0, [r1, #0]
   1afd2:	pop	{r4, r5, r6, pc}
   1afd4:	ldrb	r6, [r1, #0]
   1afd6:	subs	r4, r4, r5
   1afd8:	movs	r5, #8
   1afda:	bic.w	r0, r6, r0
   1afde:	strb.w	r0, [r1], #1
   1afe2:	movs	r0, #255	; 0xff
   1afe4:	b.n	1afb4 <extent_buffer_bitmap_clear@@Base+0x1a>

0001afe6 <clear_extent_bits@@Base>:
   1afe6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afea:	mov	r7, r3
   1afec:	ldr	r3, [pc, #348]	; (1b14c <clear_extent_bits@@Base+0x166>)
   1afee:	mov.w	r8, #0
   1aff2:	vpush	{d8}
   1aff6:	mov	r9, r0
   1aff8:	add	r3, pc
   1affa:	mov	r6, r2
   1affc:	adds	r3, #102	; 0x66
   1affe:	mov	r4, r8
   1b000:	vmov	s16, r3
   1b004:	ldr	r3, [pc, #328]	; (1b150 <clear_extent_bits@@Base+0x16a>)
   1b006:	sub	sp, #12
   1b008:	add	r3, pc
   1b00a:	vmov	s17, r3
   1b00e:	cbnz	r4, 1b01c <clear_extent_bits@@Base+0x36>
   1b010:	bl	1ab44 <add_merge_cache_extent@@Base+0x1b8>
   1b014:	mov	r4, r0
   1b016:	cmp	r0, #0
   1b018:	beq.w	1b144 <clear_extent_bits@@Base+0x15e>
   1b01c:	mov	r2, r6
   1b01e:	mov	r3, r7
   1b020:	mov	r0, r9
   1b022:	bl	1a87c <search_cache_extent@@Base>
   1b026:	mov	r5, r0
   1b028:	cmp	r0, #0
   1b02a:	beq.w	1b13c <clear_extent_bits@@Base+0x156>
   1b02e:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b032:	ldrd	r0, r1, [sp, #56]	; 0x38
   1b036:	cmp	r1, r3
   1b038:	it	eq
   1b03a:	cmpeq	r0, r2
   1b03c:	bcc.n	1b13c <clear_extent_bits@@Base+0x156>
   1b03e:	cmp	r3, r7
   1b040:	ldrd	sl, fp, [r5, #48]	; 0x30
   1b044:	it	eq
   1b046:	cmpeq	r2, r6
   1b048:	bcs.n	1b0c0 <clear_extent_bits@@Base+0xda>
   1b04a:	mov	r2, r4
   1b04c:	mov	r1, r5
   1b04e:	mov	r0, r9
   1b050:	strd	r6, r7, [sp]
   1b054:	bl	1ac44 <add_merge_cache_extent@@Base+0x2b8>
   1b058:	vmov	r1, s16
   1b05c:	movw	r2, #311	; 0x137
   1b060:	cmn.w	r0, #17
   1b064:	mov	r4, r0
   1b066:	vmov	r0, s17
   1b06a:	ite	ne
   1b06c:	movne	r3, #0
   1b06e:	moveq	r3, #1
   1b070:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b074:	cmp	r4, #0
   1b076:	bne.n	1b10e <clear_extent_bits@@Base+0x128>
   1b078:	ldrd	r2, r3, [r5, #48]	; 0x30
   1b07c:	ldrd	r0, r1, [sp, #56]	; 0x38
   1b080:	cmp	r1, r3
   1b082:	it	eq
   1b084:	cmpeq	r0, r2
   1b086:	bcc.n	1b0ba <clear_extent_bits@@Base+0xd4>
   1b088:	ldr	r2, [sp, #64]	; 0x40
   1b08a:	mov	r1, r5
   1b08c:	mov	r0, r9
   1b08e:	bl	1ae7c <add_merge_cache_extent@@Base+0x4f0>
   1b092:	cmp.w	fp, #4294967295	; 0xffffffff
   1b096:	it	eq
   1b098:	cmpeq.w	sl, #4294967295	; 0xffffffff
   1b09c:	orr.w	r8, r8, r0
   1b0a0:	beq.n	1b10e <clear_extent_bits@@Base+0x128>
   1b0a2:	adds.w	r6, sl, #1
   1b0a6:	adc.w	r7, fp, #0
   1b0aa:	ldrd	r2, r3, [sp, #56]	; 0x38
   1b0ae:	cmp	r3, r7
   1b0b0:	it	eq
   1b0b2:	cmpeq	r2, r6
   1b0b4:	bcs.n	1b00e <clear_extent_bits@@Base+0x28>
   1b0b6:	cbz	r4, 1b10e <clear_extent_bits@@Base+0x128>
   1b0b8:	b.n	1b13c <clear_extent_bits@@Base+0x156>
   1b0ba:	ldrd	r6, r7, [r5, #40]	; 0x28
   1b0be:	b.n	1b0aa <clear_extent_bits@@Base+0xc4>
   1b0c0:	ldrd	r2, r3, [sp, #56]	; 0x38
   1b0c4:	cmp	r3, fp
   1b0c6:	it	eq
   1b0c8:	cmpeq	r2, sl
   1b0ca:	bcs.n	1b11a <clear_extent_bits@@Base+0x134>
   1b0cc:	ldr	r3, [sp, #56]	; 0x38
   1b0ce:	mov	r1, r5
   1b0d0:	mov	r0, r9
   1b0d2:	adds	r2, r3, #1
   1b0d4:	ldr	r3, [sp, #60]	; 0x3c
   1b0d6:	adc.w	r3, r3, #0
   1b0da:	strd	r2, r3, [sp]
   1b0de:	mov	r2, r4
   1b0e0:	bl	1ac44 <add_merge_cache_extent@@Base+0x2b8>
   1b0e4:	ldr	r1, [pc, #108]	; (1b154 <clear_extent_bits@@Base+0x16e>)
   1b0e6:	movw	r2, #333	; 0x14d
   1b0ea:	add	r1, pc
   1b0ec:	adds	r1, #102	; 0x66
   1b0ee:	adds	r0, #17
   1b0f0:	ldr	r0, [pc, #100]	; (1b158 <clear_extent_bits@@Base+0x172>)
   1b0f2:	it	ne
   1b0f4:	movne	r3, #0
   1b0f6:	add	r0, pc
   1b0f8:	it	eq
   1b0fa:	moveq	r3, #1
   1b0fc:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b100:	ldr	r2, [sp, #64]	; 0x40
   1b102:	mov	r1, r4
   1b104:	mov	r0, r9
   1b106:	bl	1ae7c <add_merge_cache_extent@@Base+0x4f0>
   1b10a:	orr.w	r8, r8, r0
   1b10e:	mov	r0, r8
   1b110:	add	sp, #12
   1b112:	vpop	{d8}
   1b116:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b11a:	adds.w	r6, sl, #1
   1b11e:	ldr	r2, [sp, #64]	; 0x40
   1b120:	mov	r1, r5
   1b122:	mov	r0, r9
   1b124:	adc.w	r7, fp, #0
   1b128:	bl	1ae7c <add_merge_cache_extent@@Base+0x4f0>
   1b12c:	cmp.w	fp, #4294967295	; 0xffffffff
   1b130:	it	eq
   1b132:	cmpeq.w	sl, #4294967295	; 0xffffffff
   1b136:	orr.w	r8, r8, r0
   1b13a:	bne.n	1b0aa <clear_extent_bits@@Base+0xc4>
   1b13c:	mov	r0, r4
   1b13e:	bl	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1b142:	b.n	1b10e <clear_extent_bits@@Base+0x128>
   1b144:	mvn.w	r8, #11
   1b148:	b.n	1b10e <clear_extent_bits@@Base+0x128>
   1b14a:	nop
   1b14c:	str	r0, [r6, #84]	; 0x54
   1b14e:	movs	r2, r0
   1b150:	str	r6, [r5, #68]	; 0x44
   1b152:	movs	r2, r0
   1b154:	str	r6, [r7, #68]	; 0x44
   1b156:	movs	r2, r0
   1b158:	str	r0, [r0, #56]	; 0x38
   1b15a:	movs	r2, r0

0001b15c <set_extent_bits@@Base>:
   1b15c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b160:	mov	r7, r3
   1b162:	ldr	r3, [pc, #516]	; (1b368 <set_extent_bits@@Base+0x20c>)
   1b164:	mov	r9, r0
   1b166:	vpush	{d8}
   1b16a:	mov	r6, r2
   1b16c:	add	r3, pc
   1b16e:	mov.w	r8, #0
   1b172:	adds	r3, #120	; 0x78
   1b174:	vmov	s16, r3
   1b178:	ldr	r3, [pc, #496]	; (1b36c <set_extent_bits@@Base+0x210>)
   1b17a:	sub	sp, #28
   1b17c:	add	r3, pc
   1b17e:	ldrd	sl, fp, [sp, #72]	; 0x48
   1b182:	vmov	s17, r3
   1b186:	cmp.w	r8, #0
   1b18a:	bne.n	1b198 <set_extent_bits@@Base+0x3c>
   1b18c:	bl	1ab44 <add_merge_cache_extent@@Base+0x1b8>
   1b190:	mov	r8, r0
   1b192:	cmp	r0, #0
   1b194:	beq.w	1b360 <set_extent_bits@@Base+0x204>
   1b198:	mov	r2, r6
   1b19a:	mov	r3, r7
   1b19c:	mov	r0, r9
   1b19e:	bl	1a87c <search_cache_extent@@Base>
   1b1a2:	mov	r5, r0
   1b1a4:	cbnz	r0, 1b1e4 <set_extent_bits@@Base+0x88>
   1b1a6:	ldr	r3, [sp, #80]	; 0x50
   1b1a8:	mov	r2, r6
   1b1aa:	mov	r1, r8
   1b1ac:	mov	r0, r9
   1b1ae:	strd	sl, fp, [sp]
   1b1b2:	str	r3, [sp, #8]
   1b1b4:	mov	r3, r7
   1b1b6:	bl	1ae02 <add_merge_cache_extent@@Base+0x476>
   1b1ba:	ldr	r1, [pc, #436]	; (1b370 <set_extent_bits@@Base+0x214>)
   1b1bc:	mov.w	r2, #382	; 0x17e
   1b1c0:	add	r1, pc
   1b1c2:	adds	r1, #120	; 0x78
   1b1c4:	cmn.w	r0, #17
   1b1c8:	mov	r4, r0
   1b1ca:	ldr	r0, [pc, #424]	; (1b374 <set_extent_bits@@Base+0x218>)
   1b1cc:	ite	ne
   1b1ce:	movne	r3, #0
   1b1d0:	moveq	r3, #1
   1b1d2:	add	r0, pc
   1b1d4:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b1d8:	mov	r0, r4
   1b1da:	add	sp, #28
   1b1dc:	vpop	{d8}
   1b1e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1e4:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b1e8:	ldrd	r0, r1, [r0, #48]	; 0x30
   1b1ec:	cmp	r7, r3
   1b1ee:	it	eq
   1b1f0:	cmpeq	r6, r2
   1b1f2:	strd	r0, r1, [sp, #16]
   1b1f6:	bne.n	1b240 <set_extent_bits@@Base+0xe4>
   1b1f8:	cmp	fp, r1
   1b1fa:	it	eq
   1b1fc:	cmpeq	sl, r0
   1b1fe:	bcc.w	1b31a <set_extent_bits@@Base+0x1be>
   1b202:	ldr	r3, [r5, #60]	; 0x3c
   1b204:	mov	r1, r5
   1b206:	ldr	r2, [sp, #80]	; 0x50
   1b208:	mov	r0, r9
   1b20a:	orrs	r3, r2
   1b20c:	str	r3, [r5, #60]	; 0x3c
   1b20e:	bl	1ad66 <add_merge_cache_extent@@Base+0x3da>
   1b212:	ldrd	r3, r4, [sp, #16]
   1b216:	adds	r4, #1
   1b218:	it	eq
   1b21a:	cmpeq.w	r3, #4294967295	; 0xffffffff
   1b21e:	beq.n	1b238 <set_extent_bits@@Base+0xdc>
   1b220:	ldr	r3, [sp, #16]
   1b222:	adds	r6, r3, #1
   1b224:	ldr	r3, [sp, #20]
   1b226:	adc.w	r7, r3, #0
   1b22a:	cmp	fp, r7
   1b22c:	it	eq
   1b22e:	cmpeq	sl, r6
   1b230:	bcs.n	1b186 <set_extent_bits@@Base+0x2a>
   1b232:	cmp.w	r8, #0
   1b236:	beq.n	1b2a2 <set_extent_bits@@Base+0x146>
   1b238:	mov	r0, r8
   1b23a:	bl	1ad30 <add_merge_cache_extent@@Base+0x3a4>
   1b23e:	b.n	1b2a2 <set_extent_bits@@Base+0x146>
   1b240:	cmp	r3, r7
   1b242:	it	eq
   1b244:	cmpeq	r2, r6
   1b246:	bcs.n	1b2ba <set_extent_bits@@Base+0x15e>
   1b248:	mov	r2, r8
   1b24a:	mov	r1, r5
   1b24c:	mov	r0, r9
   1b24e:	strd	r6, r7, [sp]
   1b252:	bl	1ac44 <add_merge_cache_extent@@Base+0x2b8>
   1b256:	ldr	r1, [pc, #288]	; (1b378 <set_extent_bits@@Base+0x21c>)
   1b258:	movw	r2, #423	; 0x1a7
   1b25c:	add	r1, pc
   1b25e:	adds	r1, #120	; 0x78
   1b260:	cmn.w	r0, #17
   1b264:	mov	r4, r0
   1b266:	ldr	r0, [pc, #276]	; (1b37c <set_extent_bits@@Base+0x220>)
   1b268:	ite	ne
   1b26a:	movne	r3, #0
   1b26c:	moveq	r3, #1
   1b26e:	add	r0, pc
   1b270:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b274:	cmp	r4, #0
   1b276:	bne.n	1b1d8 <set_extent_bits@@Base+0x7c>
   1b278:	ldrd	r2, r3, [r5, #48]	; 0x30
   1b27c:	cmp	fp, r3
   1b27e:	it	eq
   1b280:	cmpeq	sl, r2
   1b282:	bcc.n	1b2b2 <set_extent_bits@@Base+0x156>
   1b284:	ldr	r3, [r5, #60]	; 0x3c
   1b286:	mov	r1, r5
   1b288:	ldr	r2, [sp, #80]	; 0x50
   1b28a:	mov	r0, r9
   1b28c:	orrs	r3, r2
   1b28e:	str	r3, [r5, #60]	; 0x3c
   1b290:	bl	1ad66 <add_merge_cache_extent@@Base+0x3da>
   1b294:	ldrd	r2, r3, [sp, #16]
   1b298:	adds	r3, #1
   1b29a:	it	eq
   1b29c:	cmpeq.w	r2, #4294967295	; 0xffffffff
   1b2a0:	bne.n	1b2a6 <set_extent_bits@@Base+0x14a>
   1b2a2:	movs	r4, #0
   1b2a4:	b.n	1b1d8 <set_extent_bits@@Base+0x7c>
   1b2a6:	ldr	r3, [sp, #16]
   1b2a8:	adds	r6, r3, #1
   1b2aa:	ldr	r3, [sp, #20]
   1b2ac:	adc.w	r7, r3, #0
   1b2b0:	b.n	1b2b6 <set_extent_bits@@Base+0x15a>
   1b2b2:	ldrd	r6, r7, [r5, #40]	; 0x28
   1b2b6:	mov	r8, r4
   1b2b8:	b.n	1b22a <set_extent_bits@@Base+0xce>
   1b2ba:	cmp	r7, r3
   1b2bc:	it	eq
   1b2be:	cmpeq	r6, r2
   1b2c0:	bcs.n	1b31a <set_extent_bits@@Base+0x1be>
   1b2c2:	cmp	fp, r3
   1b2c4:	it	eq
   1b2c6:	cmpeq	sl, r2
   1b2c8:	bcc.n	1b312 <set_extent_bits@@Base+0x1b6>
   1b2ca:	adds.w	r5, r2, #4294967295	; 0xffffffff
   1b2ce:	adc.w	r3, r3, #4294967295	; 0xffffffff
   1b2d2:	str	r3, [sp, #16]
   1b2d4:	ldr	r3, [sp, #80]	; 0x50
   1b2d6:	mov	r2, r6
   1b2d8:	mov	r1, r8
   1b2da:	mov	r0, r9
   1b2dc:	str	r5, [sp, #0]
   1b2de:	str	r3, [sp, #8]
   1b2e0:	ldr	r3, [sp, #16]
   1b2e2:	str	r3, [sp, #4]
   1b2e4:	mov	r3, r7
   1b2e6:	bl	1ae02 <add_merge_cache_extent@@Base+0x476>
   1b2ea:	vmov	r1, s16
   1b2ee:	mov.w	r2, #454	; 0x1c6
   1b2f2:	cmn.w	r0, #17
   1b2f6:	mov	r4, r0
   1b2f8:	vmov	r0, s17
   1b2fc:	ite	ne
   1b2fe:	movne	r3, #0
   1b300:	moveq	r3, #1
   1b302:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b306:	cmp	r4, #0
   1b308:	bne.w	1b1d8 <set_extent_bits@@Base+0x7c>
   1b30c:	ldr	r3, [sp, #16]
   1b30e:	adds	r6, r5, #1
   1b310:	b.n	1b2ac <set_extent_bits@@Base+0x150>
   1b312:	mov	r5, sl
   1b314:	str.w	fp, [sp, #16]
   1b318:	b.n	1b2d4 <set_extent_bits@@Base+0x178>
   1b31a:	adds.w	r2, sl, #1
   1b31e:	mov	r1, r5
   1b320:	adc.w	r3, fp, #0
   1b324:	mov	r0, r9
   1b326:	strd	r2, r3, [sp]
   1b32a:	mov	r2, r8
   1b32c:	bl	1ac44 <add_merge_cache_extent@@Base+0x2b8>
   1b330:	ldr	r1, [pc, #76]	; (1b380 <set_extent_bits@@Base+0x224>)
   1b332:	mov.w	r2, #468	; 0x1d4
   1b336:	add	r1, pc
   1b338:	adds	r1, #120	; 0x78
   1b33a:	cmn.w	r0, #17
   1b33e:	mov	r4, r0
   1b340:	ldr	r0, [pc, #64]	; (1b384 <set_extent_bits@@Base+0x228>)
   1b342:	ite	ne
   1b344:	movne	r3, #0
   1b346:	moveq	r3, #1
   1b348:	add	r0, pc
   1b34a:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1b34e:	ldr	r3, [r5, #60]	; 0x3c
   1b350:	ldr	r2, [sp, #80]	; 0x50
   1b352:	mov	r1, r8
   1b354:	mov	r0, r9
   1b356:	orrs	r3, r2
   1b358:	str	r3, [r5, #60]	; 0x3c
   1b35a:	bl	1ad66 <add_merge_cache_extent@@Base+0x3da>
   1b35e:	b.n	1b1d8 <set_extent_bits@@Base+0x7c>
   1b360:	mvn.w	r4, #11
   1b364:	b.n	1b1d8 <set_extent_bits@@Base+0x7c>
   1b366:	nop
   1b368:	str	r4, [r7, #60]	; 0x3c
   1b36a:	movs	r2, r0
   1b36c:	str	r2, [r7, #44]	; 0x2c
   1b36e:	movs	r2, r0
   1b370:	str	r0, [r5, #56]	; 0x38
   1b372:	movs	r2, r0
   1b374:	str	r4, [r4, #40]	; 0x28
   1b376:	movs	r2, r0
   1b378:	str	r4, [r1, #48]	; 0x30
   1b37a:	movs	r2, r0
   1b37c:	str	r0, [r1, #32]
   1b37e:	movs	r2, r0
   1b380:	str	r2, [r6, #32]
   1b382:	movs	r2, r0
   1b384:	str	r6, [r5, #16]
   1b386:	movs	r2, r0

0001b388 <set_extent_dirty@@Base>:
   1b388:	push	{r4, r5, lr}
   1b38a:	sub	sp, #20
   1b38c:	movs	r1, #1
   1b38e:	ldrd	r4, r5, [sp, #32]
   1b392:	str	r1, [sp, #8]
   1b394:	strd	r4, r5, [sp]
   1b398:	bl	1b15c <set_extent_bits@@Base>
   1b39c:	add	sp, #20
   1b39e:	pop	{r4, r5, pc}

0001b3a0 <clear_extent_dirty@@Base>:
   1b3a0:	push	{r4, r5, lr}
   1b3a2:	sub	sp, #20
   1b3a4:	movs	r1, #1
   1b3a6:	ldrd	r4, r5, [sp, #32]
   1b3aa:	str	r1, [sp, #8]
   1b3ac:	strd	r4, r5, [sp]
   1b3b0:	bl	1afe6 <clear_extent_bits@@Base>
   1b3b4:	add	sp, #20
   1b3b6:	pop	{r4, r5, pc}

0001b3b8 <find_first_extent_bit@@Base>:
   1b3b8:	push	{r3, r4, r5, r6, r7, lr}
   1b3ba:	mov	r6, r2
   1b3bc:	ldr	r4, [sp, #32]
   1b3be:	mov	r7, r3
   1b3c0:	bl	1a87c <search_cache_extent@@Base>
   1b3c4:	cbz	r0, 1b3f6 <find_first_extent_bit@@Base+0x3e>
   1b3c6:	ldrd	r2, r3, [r0, #48]	; 0x30
   1b3ca:	cmp	r3, r7
   1b3cc:	it	eq
   1b3ce:	cmpeq	r2, r6
   1b3d0:	bcc.n	1b3f0 <find_first_extent_bit@@Base+0x38>
   1b3d2:	ldr	r3, [r0, #60]	; 0x3c
   1b3d4:	tst	r4, r3
   1b3d6:	beq.n	1b3f0 <find_first_extent_bit@@Base+0x38>
   1b3d8:	ldrd	r4, r5, [r0, #40]	; 0x28
   1b3dc:	ldr	r3, [sp, #24]
   1b3de:	strd	r4, r5, [r3]
   1b3e2:	ldr	r3, [sp, #28]
   1b3e4:	ldrd	r0, r1, [r0, #48]	; 0x30
   1b3e8:	strd	r0, r1, [r3]
   1b3ec:	movs	r0, #0
   1b3ee:	pop	{r3, r4, r5, r6, r7, pc}
   1b3f0:	bl	1a950 <next_cache_extent@@Base>
   1b3f4:	b.n	1b3c4 <find_first_extent_bit@@Base+0xc>
   1b3f6:	movs	r0, #1
   1b3f8:	b.n	1b3ee <find_first_extent_bit@@Base+0x36>

0001b3fa <test_range_bit@@Base>:
   1b3fa:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1b3fe:	mov	r4, r2
   1b400:	ldrd	r8, r9, [sp, #32]
   1b404:	mov	r5, r3
   1b406:	ldr	r7, [sp, #44]	; 0x2c
   1b408:	bl	1a87c <search_cache_extent@@Base>
   1b40c:	movs	r6, #0
   1b40e:	cbnz	r0, 1b44e <test_range_bit@@Base+0x54>
   1b410:	mov	r0, r6
   1b412:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1b416:	cmp	r9, r3
   1b418:	it	eq
   1b41a:	cmpeq	r8, r2
   1b41c:	bcc.n	1b410 <test_range_bit@@Base+0x16>
   1b41e:	ldr	r3, [r0, #60]	; 0x3c
   1b420:	ldr	r2, [sp, #40]	; 0x28
   1b422:	tst	r2, r3
   1b424:	beq.n	1b448 <test_range_bit@@Base+0x4e>
   1b426:	movs	r6, #1
   1b428:	cmp	r7, #0
   1b42a:	beq.n	1b410 <test_range_bit@@Base+0x16>
   1b42c:	ldrd	r3, r2, [r0, #48]	; 0x30
   1b430:	adds	r4, r3, #1
   1b432:	adc.w	r5, r2, #0
   1b436:	cmp	r9, r5
   1b438:	it	eq
   1b43a:	cmpeq	r8, r4
   1b43c:	bcc.n	1b410 <test_range_bit@@Base+0x16>
   1b43e:	bl	1a950 <next_cache_extent@@Base>
   1b442:	cbnz	r0, 1b44e <test_range_bit@@Base+0x54>
   1b444:	cbnz	r7, 1b466 <test_range_bit@@Base+0x6c>
   1b446:	b.n	1b410 <test_range_bit@@Base+0x16>
   1b448:	cmp	r7, #0
   1b44a:	beq.n	1b42c <test_range_bit@@Base+0x32>
   1b44c:	b.n	1b466 <test_range_bit@@Base+0x6c>
   1b44e:	cmp	r9, r5
   1b450:	it	eq
   1b452:	cmpeq	r8, r4
   1b454:	bcc.n	1b410 <test_range_bit@@Base+0x16>
   1b456:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b45a:	cmp	r7, #0
   1b45c:	beq.n	1b416 <test_range_bit@@Base+0x1c>
   1b45e:	cmp	r5, r3
   1b460:	it	eq
   1b462:	cmpeq	r4, r2
   1b464:	bcs.n	1b41e <test_range_bit@@Base+0x24>
   1b466:	movs	r6, #0
   1b468:	b.n	1b410 <test_range_bit@@Base+0x16>

0001b46a <set_state_private@@Base>:
   1b46a:	push	{r3, r4, r5, lr}
   1b46c:	mov	r4, r2
   1b46e:	mov	r5, r3
   1b470:	bl	1a87c <search_cache_extent@@Base>
   1b474:	cbz	r0, 1b48e <set_state_private@@Base+0x24>
   1b476:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b47a:	cmp	r3, r5
   1b47c:	it	eq
   1b47e:	cmpeq	r2, r4
   1b480:	bne.n	1b48e <set_state_private@@Base+0x24>
   1b482:	ldrd	r2, r3, [sp, #16]
   1b486:	strd	r2, r3, [r0, #64]	; 0x40
   1b48a:	movs	r0, #0
   1b48c:	pop	{r3, r4, r5, pc}
   1b48e:	mvn.w	r0, #1
   1b492:	b.n	1b48c <set_state_private@@Base+0x22>

0001b494 <get_state_private@@Base>:
   1b494:	push	{r3, r4, r5, lr}
   1b496:	mov	r4, r2
   1b498:	mov	r5, r3
   1b49a:	bl	1a87c <search_cache_extent@@Base>
   1b49e:	cbz	r0, 1b4ba <get_state_private@@Base+0x26>
   1b4a0:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b4a4:	cmp	r3, r5
   1b4a6:	it	eq
   1b4a8:	cmpeq	r2, r4
   1b4aa:	bne.n	1b4ba <get_state_private@@Base+0x26>
   1b4ac:	ldrd	r0, r1, [r0, #64]	; 0x40
   1b4b0:	ldr	r3, [sp, #16]
   1b4b2:	strd	r0, r1, [r3]
   1b4b6:	movs	r0, #0
   1b4b8:	pop	{r3, r4, r5, pc}
   1b4ba:	mvn.w	r0, #1
   1b4be:	b.n	1b4b8 <get_state_private@@Base+0x24>

0001b4c0 <free_extent_buffer@@Base>:
   1b4c0:	movs	r1, #0
   1b4c2:	b.n	1aea2 <add_merge_cache_extent@@Base+0x516>

0001b4c4 <free_extent_buffer_nocache@@Base>:
   1b4c4:	movs	r1, #1
   1b4c6:	b.n	1aea2 <add_merge_cache_extent@@Base+0x516>

0001b4c8 <extent_io_tree_cleanup@@Base>:
   1b4c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b4cc:	add.w	r8, r0, #8
   1b4d0:	ldr.w	r9, [pc, #84]	; 1b528 <extent_io_tree_cleanup@@Base+0x60>
   1b4d4:	sub	sp, #20
   1b4d6:	ldr	r5, [pc, #84]	; (1b52c <extent_io_tree_cleanup@@Base+0x64>)
   1b4d8:	mov	r4, r0
   1b4da:	add	r9, pc
   1b4dc:	add	r5, pc
   1b4de:	ldr	r3, [r4, #8]
   1b4e0:	cmp	r3, r8
   1b4e2:	bne.n	1b4f4 <extent_io_tree_cleanup@@Base+0x2c>
   1b4e4:	ldr	r1, [pc, #72]	; (1b530 <extent_io_tree_cleanup@@Base+0x68>)
   1b4e6:	mov	r0, r4
   1b4e8:	add	r1, pc
   1b4ea:	add	sp, #20
   1b4ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b4f0:	b.w	1a95e <cache_tree_free_extents@@Base>
   1b4f4:	ldr	r2, [r3, #20]
   1b4f6:	sub.w	r7, r3, #60	; 0x3c
   1b4fa:	cbz	r2, 1b51e <extent_io_tree_cleanup@@Base+0x56>
   1b4fc:	ldr	r2, [pc, #52]	; (1b534 <extent_io_tree_cleanup@@Base+0x6c>)
   1b4fe:	ldr	r6, [r5, r2]
   1b500:	ldr	r2, [r3, #16]
   1b502:	str	r2, [sp, #8]
   1b504:	mov	r2, r9
   1b506:	ldrd	r0, r1, [r3, #-20]
   1b50a:	strd	r0, r1, [sp]
   1b50e:	movs	r1, #1
   1b510:	ldr	r0, [r6, #0]
   1b512:	blx	9040 <__fprintf_chk@plt+0x4>
   1b516:	mov	r0, r7
   1b518:	bl	1b4c4 <free_extent_buffer_nocache@@Base>
   1b51c:	b.n	1b4de <extent_io_tree_cleanup@@Base+0x16>
   1b51e:	mov	r0, r7
   1b520:	bl	1aca0 <add_merge_cache_extent@@Base+0x314>
   1b524:	b.n	1b4de <extent_io_tree_cleanup@@Base+0x16>
   1b526:	nop
   1b528:	ldrsh	r3, [r5, r6]
   1b52a:	movs	r2, r0
   1b52c:	ldrh.w	r0, [ip, r4]
   1b530:	ldr??.w	pc, [r9, #255]!
   1b534:	lsls	r4, r3, #10
	...

0001b538 <find_extent_buffer@@Base>:
   1b538:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   1b53c:	mov	r4, r0
   1b53e:	ldr	r6, [sp, #32]
   1b540:	movs	r7, #0
   1b542:	adds	r0, #4
   1b544:	mov	r8, r2
   1b546:	mov	r9, r3
   1b548:	strd	r6, r7, [sp]
   1b54c:	bl	1a7bc <lookup_cache_extent@@Base>
   1b550:	cbz	r0, 1b588 <find_extent_buffer@@Base+0x50>
   1b552:	ldrd	r2, r3, [r0, #24]
   1b556:	cmp	r3, r9
   1b558:	it	eq
   1b55a:	cmpeq	r2, r8
   1b55c:	bne.n	1b58e <find_extent_buffer@@Base+0x56>
   1b55e:	ldrd	r2, r3, [r0, #32]
   1b562:	cmp	r7, r3
   1b564:	it	eq
   1b566:	cmpeq	r6, r2
   1b568:	bne.n	1b58e <find_extent_buffer@@Base+0x56>
   1b56a:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1b56e:	add.w	r3, r0, #60	; 0x3c
   1b572:	adds	r4, #8
   1b574:	str	r2, [r1, #4]
   1b576:	str	r1, [r2, #0]
   1b578:	ldr	r2, [r4, #4]
   1b57a:	str	r3, [r4, #4]
   1b57c:	strd	r4, r2, [r0, #60]	; 0x3c
   1b580:	str	r3, [r2, #0]
   1b582:	ldr	r3, [r0, #80]	; 0x50
   1b584:	adds	r3, #1
   1b586:	str	r3, [r0, #80]	; 0x50
   1b588:	add	sp, #8
   1b58a:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   1b58e:	movs	r0, #0
   1b590:	b.n	1b588 <find_extent_buffer@@Base+0x50>

0001b592 <find_first_extent_buffer@@Base>:
   1b592:	push	{r4, lr}
   1b594:	mov	r4, r0
   1b596:	adds	r0, #4
   1b598:	bl	1a87c <search_cache_extent@@Base>
   1b59c:	cbz	r0, 1b5bc <find_first_extent_buffer@@Base+0x2a>
   1b59e:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1b5a2:	add.w	r3, r0, #60	; 0x3c
   1b5a6:	adds	r4, #8
   1b5a8:	str	r2, [r1, #4]
   1b5aa:	str	r1, [r2, #0]
   1b5ac:	ldr	r2, [r4, #4]
   1b5ae:	str	r3, [r4, #4]
   1b5b0:	strd	r4, r2, [r0, #60]	; 0x3c
   1b5b4:	str	r3, [r2, #0]
   1b5b6:	ldr	r3, [r0, #80]	; 0x50
   1b5b8:	adds	r3, #1
   1b5ba:	str	r3, [r0, #80]	; 0x50
   1b5bc:	pop	{r4, pc}

0001b5be <alloc_extent_buffer@@Base>:
   1b5be:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5c2:	sub	sp, #20
   1b5c4:	add.w	sl, r0, #68	; 0x44
   1b5c8:	mov	r5, r0
   1b5ca:	ldr.w	fp, [sp, #56]	; 0x38
   1b5ce:	movs	r7, #0
   1b5d0:	mov	r0, sl
   1b5d2:	mov	r8, r2
   1b5d4:	mov	r9, r3
   1b5d6:	mov	r6, fp
   1b5d8:	strd	r6, r7, [sp]
   1b5dc:	bl	1a7bc <lookup_cache_extent@@Base>
   1b5e0:	mov	r4, r0
   1b5e2:	cbz	r0, 1b628 <alloc_extent_buffer@@Base+0x6a>
   1b5e4:	ldrd	r2, r3, [r0, #24]
   1b5e8:	cmp	r3, r9
   1b5ea:	it	eq
   1b5ec:	cmpeq	r2, r8
   1b5ee:	bne.n	1b622 <alloc_extent_buffer@@Base+0x64>
   1b5f0:	ldrd	r2, r3, [r0, #32]
   1b5f4:	cmp	r7, r3
   1b5f6:	it	eq
   1b5f8:	cmpeq	fp, r2
   1b5fa:	bne.n	1b622 <alloc_extent_buffer@@Base+0x64>
   1b5fc:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1b600:	add.w	r3, r0, #60	; 0x3c
   1b604:	adds	r5, #72	; 0x48
   1b606:	str	r2, [r1, #4]
   1b608:	str	r1, [r2, #0]
   1b60a:	ldr	r2, [r5, #4]
   1b60c:	str	r3, [r5, #4]
   1b60e:	strd	r5, r2, [r0, #60]	; 0x3c
   1b612:	str	r3, [r2, #0]
   1b614:	ldr	r3, [r0, #80]	; 0x50
   1b616:	adds	r3, #1
   1b618:	str	r3, [r0, #80]	; 0x50
   1b61a:	mov	r0, r4
   1b61c:	add	sp, #20
   1b61e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b622:	mov	r0, r4
   1b624:	bl	1b4c0 <free_extent_buffer@@Base>
   1b628:	mov	r2, r8
   1b62a:	mov	r3, r9
   1b62c:	mov	r0, r5
   1b62e:	str.w	fp, [sp]
   1b632:	bl	1ab66 <add_merge_cache_extent@@Base+0x1da>
   1b636:	mov	r4, r0
   1b638:	cmp	r0, #0
   1b63a:	beq.n	1b61a <alloc_extent_buffer@@Base+0x5c>
   1b63c:	mov	r1, r0
   1b63e:	mov	r0, sl
   1b640:	bl	1a73a <insert_cache_extent@@Base>
   1b644:	cbz	r0, 1b650 <alloc_extent_buffer@@Base+0x92>
   1b646:	mov	r0, r4
   1b648:	movs	r4, #0
   1b64a:	blx	8b84 <free@plt+0x4>
   1b64e:	b.n	1b61a <alloc_extent_buffer@@Base+0x5c>
   1b650:	ldr	r2, [r5, #76]	; 0x4c
   1b652:	add.w	r3, r4, #60	; 0x3c
   1b656:	add.w	r8, r5, #72	; 0x48
   1b65a:	str	r3, [r5, #76]	; 0x4c
   1b65c:	strd	r8, r2, [r4, #60]	; 0x3c
   1b660:	str	r3, [r2, #0]
   1b662:	ldrd	r3, r2, [r5, #80]	; 0x50
   1b666:	adds	r3, r6, r3
   1b668:	str	r3, [sp, #8]
   1b66a:	adc.w	r3, r7, r2
   1b66e:	str	r3, [sp, #12]
   1b670:	ldrd	r2, r3, [sp, #8]
   1b674:	ldrd	r0, r1, [sp, #8]
   1b678:	strd	r2, r3, [r5, #80]	; 0x50
   1b67c:	ldrd	r2, r3, [r5, #88]	; 0x58
   1b680:	cmp	r1, r3
   1b682:	it	eq
   1b684:	cmpeq	r0, r2
   1b686:	bcc.n	1b61a <alloc_extent_buffer@@Base+0x5c>
   1b688:	ldr	r0, [r5, #72]	; 0x48
   1b68a:	movs	r7, #9
   1b68c:	ldr.w	r6, [r0], #-60
   1b690:	subs	r6, #60	; 0x3c
   1b692:	add.w	r3, r0, #60	; 0x3c
   1b696:	cmp	r8, r3
   1b698:	beq.n	1b61a <alloc_extent_buffer@@Base+0x5c>
   1b69a:	ldr	r3, [r0, #80]	; 0x50
   1b69c:	cbnz	r3, 1b6a2 <alloc_extent_buffer@@Base+0xe4>
   1b69e:	bl	1aca0 <add_merge_cache_extent@@Base+0x314>
   1b6a2:	ldrd	r0, r3, [r5, #88]	; 0x58
   1b6a6:	movs	r2, #10
   1b6a8:	umull	r0, r1, r0, r7
   1b6ac:	mla	r1, r7, r3, r1
   1b6b0:	movs	r3, #0
   1b6b2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   1b6b6:	ldrd	r2, r3, [r5, #80]	; 0x50
   1b6ba:	cmp	r1, r3
   1b6bc:	it	eq
   1b6be:	cmpeq	r0, r2
   1b6c0:	bcs.n	1b61a <alloc_extent_buffer@@Base+0x5c>
   1b6c2:	ldr	r3, [r6, #60]	; 0x3c
   1b6c4:	mov	r0, r6
   1b6c6:	sub.w	r6, r3, #60	; 0x3c
   1b6ca:	b.n	1b692 <alloc_extent_buffer@@Base+0xd4>

0001b6cc <alloc_dummy_extent_buffer@@Base>:
   1b6cc:	push	{r0, r1, r2, lr}
   1b6ce:	ldr	r1, [sp, #16]
   1b6d0:	str	r1, [sp, #0]
   1b6d2:	bl	1ab66 <add_merge_cache_extent@@Base+0x1da>
   1b6d6:	cbz	r0, 1b6e4 <alloc_dummy_extent_buffer@@Base+0x18>
   1b6d8:	movs	r3, #0
   1b6da:	str	r3, [r0, #56]	; 0x38
   1b6dc:	ldr	r3, [r0, #84]	; 0x54
   1b6de:	orr.w	r3, r3, #2048	; 0x800
   1b6e2:	str	r3, [r0, #84]	; 0x54
   1b6e4:	add	sp, #12
   1b6e6:	ldr.w	pc, [sp], #4

0001b6ea <read_extent_from_disk@@Base>:
   1b6ea:	push	{r0, r1, r4, r6, r7, lr}
   1b6ec:	add.w	r3, r0, #96	; 0x60
   1b6f0:	ldrd	r6, r7, [r0, #48]	; 0x30
   1b6f4:	add	r1, r3
   1b6f6:	mov	r4, r2
   1b6f8:	strd	r6, r7, [sp]
   1b6fc:	ldr	r0, [r0, #88]	; 0x58
   1b6fe:	blx	8dcc <pread64@plt>
   1b702:	cmp	r0, #0
   1b704:	bge.n	1b712 <read_extent_from_disk@@Base+0x28>
   1b706:	blx	8f58 <__errno_location@plt>
   1b70a:	ldr	r0, [r0, #0]
   1b70c:	negs	r0, r0
   1b70e:	add	sp, #8
   1b710:	pop	{r4, r6, r7, pc}
   1b712:	cmp	r0, r4
   1b714:	ite	eq
   1b716:	moveq	r0, #0
   1b718:	mvnne.w	r0, #4
   1b71c:	b.n	1b70e <read_extent_from_disk@@Base+0x24>

0001b71e <write_extent_to_disk@@Base>:
   1b71e:	push	{r0, r1, r4, lr}
   1b720:	add.w	r1, r0, #96	; 0x60
   1b724:	ldrd	r2, r3, [r0, #48]	; 0x30
   1b728:	mov	r4, r0
   1b72a:	strd	r2, r3, [sp]
   1b72e:	ldr	r2, [r0, #76]	; 0x4c
   1b730:	ldr	r0, [r0, #88]	; 0x58
   1b732:	blx	8ffc <pwrite64@plt>
   1b736:	cmp	r0, #0
   1b738:	blt.n	1b746 <write_extent_to_disk@@Base+0x28>
   1b73a:	ldr	r3, [r4, #76]	; 0x4c
   1b73c:	cmp	r3, r0
   1b73e:	ite	eq
   1b740:	moveq	r0, #0
   1b742:	mvnne.w	r0, #4
   1b746:	add	sp, #8
   1b748:	pop	{r4, pc}

0001b74a <read_data_from_disk@@Base>:
   1b74a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b74e:	mov	r5, r2
   1b750:	ldr	r2, [pc, #292]	; (1b878 <read_data_from_disk@@Base+0x12e>)
   1b752:	mov	r8, r3
   1b754:	ldr	r3, [pc, #292]	; (1b87c <read_data_from_disk@@Base+0x132>)
   1b756:	sub	sp, #68	; 0x44
   1b758:	add	r2, pc
   1b75a:	ldr	r7, [pc, #292]	; (1b880 <read_data_from_disk@@Base+0x136>)
   1b75c:	str	r1, [sp, #24]
   1b75e:	mov	r9, r0
   1b760:	ldr	r3, [r2, r3]
   1b762:	add	r7, pc
   1b764:	ldrd	sl, fp, [sp, #104]	; 0x68
   1b768:	ldr	r3, [r3, #0]
   1b76a:	str	r3, [sp, #60]	; 0x3c
   1b76c:	mov.w	r3, #0
   1b770:	movs	r3, #0
   1b772:	mov	r6, r3
   1b774:	str	r3, [sp, #44]	; 0x2c
   1b776:	str	r3, [sp, #28]
   1b778:	add	r3, sp, #44	; 0x2c
   1b77a:	str	r3, [sp, #32]
   1b77c:	add	r3, sp, #48	; 0x30
   1b77e:	str	r3, [sp, #36]	; 0x24
   1b780:	orrs.w	r3, sl, fp
   1b784:	bne.n	1b78a <read_data_from_disk@@Base+0x40>
   1b786:	movs	r4, #0
   1b788:	b.n	1b7c4 <read_data_from_disk@@Base+0x7a>
   1b78a:	ldr	r3, [sp, #28]
   1b78c:	mov	r2, r5
   1b78e:	movs	r1, #0
   1b790:	mov	r0, r9
   1b792:	strd	sl, fp, [sp, #48]	; 0x30
   1b796:	str	r3, [sp, #12]
   1b798:	ldr	r3, [sp, #112]	; 0x70
   1b79a:	str	r3, [sp, #8]
   1b79c:	ldr	r3, [sp, #32]
   1b79e:	str	r3, [sp, #4]
   1b7a0:	ldr	r3, [sp, #36]	; 0x24
   1b7a2:	str	r3, [sp, #0]
   1b7a4:	mov	r3, r8
   1b7a6:	bl	2e6c8 <btrfs_map_block@@Base>
   1b7aa:	cbz	r0, 1b7d8 <read_data_from_disk@@Base+0x8e>
   1b7ac:	ldr	r3, [pc, #212]	; (1b884 <read_data_from_disk@@Base+0x13a>)
   1b7ae:	movs	r1, #1
   1b7b0:	ldr	r2, [pc, #212]	; (1b888 <read_data_from_disk@@Base+0x13e>)
   1b7b2:	ldr	r3, [r7, r3]
   1b7b4:	add	r2, pc
   1b7b6:	strd	r5, r8, [sp]
   1b7ba:	ldr	r0, [r3, #0]
   1b7bc:	blx	9040 <__fprintf_chk@plt+0x4>
   1b7c0:	mvn.w	r4, #4
   1b7c4:	ldr	r2, [pc, #196]	; (1b88c <read_data_from_disk@@Base+0x142>)
   1b7c6:	ldr	r3, [pc, #180]	; (1b87c <read_data_from_disk@@Base+0x132>)
   1b7c8:	add	r2, pc
   1b7ca:	ldr	r3, [r2, r3]
   1b7cc:	ldr	r2, [r3, #0]
   1b7ce:	ldr	r3, [sp, #60]	; 0x3c
   1b7d0:	eors	r2, r3
   1b7d2:	beq.n	1b870 <read_data_from_disk@@Base+0x126>
   1b7d4:	blx	8c90 <__stack_chk_fail@plt>
   1b7d8:	ldr	r1, [sp, #44]	; 0x2c
   1b7da:	ldrd	r2, r3, [sp, #48]	; 0x30
   1b7de:	ldr	r0, [r1, #8]
   1b7e0:	cmp	fp, r3
   1b7e2:	it	eq
   1b7e4:	cmpeq	sl, r2
   1b7e6:	ldr	r4, [r0, #24]
   1b7e8:	itt	cc
   1b7ea:	movcc	r2, sl
   1b7ec:	movcc	r3, fp
   1b7ee:	strd	r2, r3, [sp, #48]	; 0x30
   1b7f2:	cmp	r4, #0
   1b7f4:	bgt.n	1b7fe <read_data_from_disk@@Base+0xb4>
   1b7f6:	mov	r0, r1
   1b7f8:	blx	8b84 <free@plt+0x4>
   1b7fc:	b.n	1b7c0 <read_data_from_disk@@Base+0x76>
   1b7fe:	ldrd	r0, r1, [r1, #16]
   1b802:	ldr	r3, [sp, #24]
   1b804:	strd	r0, r1, [sp]
   1b808:	adds	r1, r3, r6
   1b80a:	mov	r0, r4
   1b80c:	blx	8dcc <pread64@plt>
   1b810:	mov	r4, r0
   1b812:	ldr	r0, [sp, #44]	; 0x2c
   1b814:	blx	8b84 <free@plt+0x4>
   1b818:	cmp	r4, #0
   1b81a:	bge.n	1b834 <read_data_from_disk@@Base+0xea>
   1b81c:	ldr	r3, [pc, #100]	; (1b884 <read_data_from_disk@@Base+0x13a>)
   1b81e:	movs	r1, #1
   1b820:	ldr	r2, [pc, #108]	; (1b890 <read_data_from_disk@@Base+0x146>)
   1b822:	ldr	r3, [r7, r3]
   1b824:	add	r2, pc
   1b826:	str	r4, [sp, #8]
   1b828:	strd	r5, r8, [sp]
   1b82c:	ldr	r0, [r3, #0]
   1b82e:	blx	9040 <__fprintf_chk@plt+0x4>
   1b832:	b.n	1b7c4 <read_data_from_disk@@Base+0x7a>
   1b834:	ldrd	r0, r1, [sp, #48]	; 0x30
   1b838:	asrs	r3, r4, #31
   1b83a:	cmp	r3, r1
   1b83c:	it	eq
   1b83e:	cmpeq	r4, r0
   1b840:	beq.n	1b85e <read_data_from_disk@@Base+0x114>
   1b842:	ldr	r3, [pc, #64]	; (1b884 <read_data_from_disk@@Base+0x13a>)
   1b844:	ldr	r2, [pc, #76]	; (1b894 <read_data_from_disk@@Base+0x14a>)
   1b846:	ldr	r3, [r7, r3]
   1b848:	add	r2, pc
   1b84a:	strd	r0, r1, [sp, #16]
   1b84e:	movs	r1, #1
   1b850:	str	r4, [sp, #8]
   1b852:	strd	r5, r8, [sp]
   1b856:	ldr	r0, [r3, #0]
   1b858:	blx	9040 <__fprintf_chk@plt+0x4>
   1b85c:	b.n	1b7c0 <read_data_from_disk@@Base+0x76>
   1b85e:	subs.w	sl, sl, r4
   1b862:	sbc.w	fp, fp, r3
   1b866:	adds	r5, r5, r4
   1b868:	adc.w	r8, r8, r3
   1b86c:	adds	r6, r6, r4
   1b86e:	b.n	1b780 <read_data_from_disk@@Base+0x36>
   1b870:	mov	r0, r4
   1b872:	add	sp, #68	; 0x44
   1b874:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b878:	rsb	r0, r0, #8650752	; 0x840000
   1b87c:	lsls	r0, r1, #10
   1b87e:	movs	r0, r0
   1b880:	subs.w	r0, r6, #8650752	; 0x840000
   1b884:	lsls	r4, r3, #10
   1b886:	movs	r0, r0
   1b888:	ldrb	r0, [r7, r3]
   1b88a:	movs	r2, r0
   1b88c:	adcs.w	r0, r0, #8650752	; 0x840000
   1b890:	ldrb	r4, [r4, r2]
   1b892:	movs	r2, r0
   1b894:	ldrb	r7, [r2, r2]
   1b896:	movs	r2, r0

0001b898 <write_data_to_disk@@Base>:
   1b898:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b89c:	mov	r6, r2
   1b89e:	vpush	{d8}
   1b8a2:	mov	r7, r3
   1b8a4:	ldr	r2, [pc, #600]	; (1bb00 <write_data_to_disk@@Base+0x268>)
   1b8a6:	mov	r8, r0
   1b8a8:	ldr	r3, [pc, #600]	; (1bb04 <write_data_to_disk@@Base+0x26c>)
   1b8aa:	add	r2, pc
   1b8ac:	ldr.w	r9, [pc, #600]	; 1bb08 <write_data_to_disk@@Base+0x270>
   1b8b0:	sub	sp, #68	; 0x44
   1b8b2:	add	r9, pc
   1b8b4:	str	r1, [sp, #32]
   1b8b6:	ldr	r3, [r2, r3]
   1b8b8:	ldr	r3, [r3, #0]
   1b8ba:	str	r3, [sp, #60]	; 0x3c
   1b8bc:	mov.w	r3, #0
   1b8c0:	movs	r3, #0
   1b8c2:	strd	r3, r3, [sp, #40]	; 0x28
   1b8c6:	str	r3, [sp, #20]
   1b8c8:	ldr	r3, [pc, #576]	; (1bb0c <write_data_to_disk@@Base+0x274>)
   1b8ca:	add	r3, pc
   1b8cc:	adds	r3, #136	; 0x88
   1b8ce:	vmov	s16, r3
   1b8d2:	ldr	r3, [pc, #572]	; (1bb10 <write_data_to_disk@@Base+0x278>)
   1b8d4:	add	r3, pc
   1b8d6:	vmov	s17, r3
   1b8da:	ldrd	r3, r4, [sp, #112]	; 0x70
   1b8de:	orrs	r3, r4
   1b8e0:	bne.n	1b8e6 <write_data_to_disk@@Base+0x4e>
   1b8e2:	movs	r4, #0
   1b8e4:	b.n	1b9ba <write_data_to_disk@@Base+0x122>
   1b8e6:	ldrd	r3, r4, [sp, #112]	; 0x70
   1b8ea:	mov	r2, r6
   1b8ec:	movs	r1, #1
   1b8ee:	mov	r0, r8
   1b8f0:	strd	r3, r4, [sp, #48]	; 0x30
   1b8f4:	add	r3, sp, #44	; 0x2c
   1b8f6:	str	r3, [sp, #12]
   1b8f8:	ldr	r3, [sp, #120]	; 0x78
   1b8fa:	str	r3, [sp, #8]
   1b8fc:	add	r3, sp, #40	; 0x28
   1b8fe:	str	r3, [sp, #4]
   1b900:	add	r3, sp, #48	; 0x30
   1b902:	str	r3, [sp, #0]
   1b904:	mov	r3, r7
   1b906:	bl	2e6c8 <btrfs_map_block@@Base>
   1b90a:	mov	sl, r0
   1b90c:	cbz	r0, 1b92a <write_data_to_disk@@Base+0x92>
   1b90e:	ldr	r3, [pc, #516]	; (1bb14 <write_data_to_disk@@Base+0x27c>)
   1b910:	movs	r1, #1
   1b912:	ldr	r2, [pc, #516]	; (1bb18 <write_data_to_disk@@Base+0x280>)
   1b914:	ldr.w	r3, [r9, r3]
   1b918:	add	r2, pc
   1b91a:	strd	r6, r7, [sp]
   1b91e:	ldr	r0, [r3, #0]
   1b920:	blx	9040 <__fprintf_chk@plt+0x4>
   1b924:	mvn.w	r4, #4
   1b928:	b.n	1b9ba <write_data_to_disk@@Base+0x122>
   1b92a:	ldr.w	fp, [sp, #44]	; 0x2c
   1b92e:	cmp.w	fp, #0
   1b932:	bne.n	1b95a <write_data_to_disk@@Base+0xc2>
   1b934:	ldr	r3, [sp, #32]
   1b936:	ldr	r2, [sp, #20]
   1b938:	add.w	fp, r3, r2
   1b93c:	ldr	r3, [sp, #40]	; 0x28
   1b93e:	ldr	r2, [r3, #4]
   1b940:	cmp	r2, sl
   1b942:	ble.n	1ba26 <write_data_to_disk@@Base+0x18e>
   1b944:	add.w	r2, r3, sl, lsl #4
   1b948:	ldr	r2, [r2, #8]
   1b94a:	ldr	r0, [r2, #24]
   1b94c:	cmp	r0, #0
   1b94e:	bgt.w	1ba74 <write_data_to_disk@@Base+0x1dc>
   1b952:	mov	r0, r3
   1b954:	blx	8b84 <free@plt+0x4>
   1b958:	b.n	1b924 <write_data_to_disk@@Base+0x8c>
   1b95a:	ldrd	r3, r4, [sp, #48]	; 0x30
   1b95e:	mov	r5, r0
   1b960:	strd	r3, r4, [sp, #24]
   1b964:	ldrd	r2, r3, [sp, #24]
   1b968:	ldr.w	r4, [r8, #384]	; 0x180
   1b96c:	cmp	r3, r0
   1b96e:	it	eq
   1b970:	cmpeq	r2, r4
   1b972:	itt	cc
   1b974:	movcc	r4, r2
   1b976:	movcc	r5, r3
   1b978:	ldrd	r2, r3, [sp, #112]	; 0x70
   1b97c:	cmp	r3, r5
   1b97e:	it	eq
   1b980:	cmpeq	r2, r4
   1b982:	it	cc
   1b984:	movcc	r4, r2
   1b986:	add.w	r2, r4, #96	; 0x60
   1b98a:	it	cc
   1b98c:	movcc	r5, r3
   1b98e:	str	r2, [sp, #36]	; 0x24
   1b990:	mov	r0, r2
   1b992:	strd	r4, r5, [sp, #48]	; 0x30
   1b996:	blx	8e40 <malloc@plt+0x4>
   1b99a:	ldr	r2, [sp, #36]	; 0x24
   1b99c:	mov	sl, r0
   1b99e:	cbnz	r0, 1b9d0 <write_data_to_disk@@Base+0x138>
   1b9a0:	ldr	r3, [pc, #368]	; (1bb14 <write_data_to_disk@@Base+0x27c>)
   1b9a2:	mvn.w	r4, #11
   1b9a6:	ldr	r0, [pc, #372]	; (1bb1c <write_data_to_disk@@Base+0x284>)
   1b9a8:	ldr.w	r3, [r9, r3]
   1b9ac:	add	r0, pc
   1b9ae:	ldr	r1, [r3, #0]
   1b9b0:	blx	91a8 <fputs@plt+0x4>
   1b9b4:	ldr	r0, [sp, #44]	; 0x2c
   1b9b6:	blx	8b84 <free@plt+0x4>
   1b9ba:	ldr	r2, [pc, #356]	; (1bb20 <write_data_to_disk@@Base+0x288>)
   1b9bc:	ldr	r3, [pc, #324]	; (1bb04 <write_data_to_disk@@Base+0x26c>)
   1b9be:	add	r2, pc
   1b9c0:	ldr	r3, [r2, r3]
   1b9c2:	ldr	r2, [r3, #0]
   1b9c4:	ldr	r3, [sp, #60]	; 0x3c
   1b9c6:	eors	r2, r3
   1b9c8:	beq.w	1baf2 <write_data_to_disk@@Base+0x25a>
   1b9cc:	blx	8c90 <__stack_chk_fail@plt>
   1b9d0:	movs	r1, #0
   1b9d2:	blx	8f98 <memset@plt+0x4>
   1b9d6:	ldr	r3, [sp, #32]
   1b9d8:	ldr	r1, [sp, #20]
   1b9da:	mov	r2, r4
   1b9dc:	str.w	r4, [sl, #76]	; 0x4c
   1b9e0:	add.w	r0, sl, #96	; 0x60
   1b9e4:	adds	r1, r3, r1
   1b9e6:	strd	r6, r7, [sl, #40]	; 0x28
   1b9ea:	blx	8bdc <memcpy@plt+0x4>
   1b9ee:	ldrd	r3, r4, [sp, #24]
   1b9f2:	ldr	r2, [sp, #40]	; 0x28
   1b9f4:	mov	r1, sl
   1b9f6:	mov	r0, r8
   1b9f8:	str.w	fp, [sp, #8]
   1b9fc:	strd	r3, r4, [sp]
   1ba00:	bl	2f030 <write_raid56_with_parity@@Base>
   1ba04:	vmov	r1, s16
   1ba08:	movw	r2, #922	; 0x39a
   1ba0c:	mov	r3, r0
   1ba0e:	vmov	r0, s17
   1ba12:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ba16:	mov	r0, sl
   1ba18:	blx	8b84 <free@plt+0x4>
   1ba1c:	ldr	r0, [sp, #44]	; 0x2c
   1ba1e:	blx	8b84 <free@plt+0x4>
   1ba22:	movs	r3, #0
   1ba24:	str	r3, [sp, #44]	; 0x2c
   1ba26:	ldrd	r2, r3, [sp, #112]	; 0x70
   1ba2a:	ldrd	r4, r5, [sp, #48]	; 0x30
   1ba2e:	ldr	r1, [pc, #244]	; (1bb24 <write_data_to_disk@@Base+0x28c>)
   1ba30:	cmp	r3, r5
   1ba32:	ldr	r0, [pc, #244]	; (1bb28 <write_data_to_disk@@Base+0x290>)
   1ba34:	it	eq
   1ba36:	cmpeq	r2, r4
   1ba38:	add	r1, pc
   1ba3a:	add.w	r1, r1, #136	; 0x88
   1ba3e:	add	r0, pc
   1ba40:	ite	cc
   1ba42:	movcc	r3, #1
   1ba44:	movcs	r3, #0
   1ba46:	movw	r2, #954	; 0x3ba
   1ba4a:	bl	1abbc <add_merge_cache_extent@@Base+0x230>
   1ba4e:	ldr	r3, [sp, #112]	; 0x70
   1ba50:	ldr	r0, [sp, #40]	; 0x28
   1ba52:	subs	r3, r3, r4
   1ba54:	str	r3, [sp, #112]	; 0x70
   1ba56:	ldr	r3, [sp, #116]	; 0x74
   1ba58:	sbc.w	r3, r3, r5
   1ba5c:	str	r3, [sp, #116]	; 0x74
   1ba5e:	ldr	r3, [sp, #20]
   1ba60:	adds	r6, r6, r4
   1ba62:	adc.w	r7, r5, r7
   1ba66:	adds	r3, r3, r4
   1ba68:	str	r3, [sp, #20]
   1ba6a:	blx	8b84 <free@plt+0x4>
   1ba6e:	movs	r3, #0
   1ba70:	str	r3, [sp, #40]	; 0x28
   1ba72:	b.n	1b8da <write_data_to_disk@@Base+0x42>
   1ba74:	add.w	sl, sl, #1
   1ba78:	mov	r1, fp
   1ba7a:	add.w	r3, r3, sl, lsl #4
   1ba7e:	ldrd	r3, r4, [r3]
   1ba82:	strd	r3, r4, [sp, #24]
   1ba86:	ldrd	r2, r3, [sp, #48]	; 0x30
   1ba8a:	ldrd	r4, r5, [sp, #112]	; 0x70
   1ba8e:	cmp	r5, r3
   1ba90:	it	eq
   1ba92:	cmpeq	r4, r2
   1ba94:	itt	cc
   1ba96:	movcc	r2, r4
   1ba98:	movcc	r3, r5
   1ba9a:	ldrd	r4, r5, [sp, #24]
   1ba9e:	strd	r2, r3, [sp, #48]	; 0x30
   1baa2:	strd	r4, r5, [sp]
   1baa6:	blx	8ffc <pwrite64@plt>
   1baaa:	ldrd	r2, r3, [sp, #48]	; 0x30
   1baae:	asrs	r5, r0, #31
   1bab0:	cmp	r5, r3
   1bab2:	it	eq
   1bab4:	cmpeq	r0, r2
   1bab6:	beq.w	1b93c <write_data_to_disk@@Base+0xa4>
   1baba:	ldr	r3, [pc, #88]	; (1bb14 <write_data_to_disk@@Base+0x27c>)
   1babc:	cmp	r0, #0
   1babe:	ldr.w	r3, [r9, r3]
   1bac2:	ldr	r5, [r3, #0]
   1bac4:	bge.n	1bae4 <write_data_to_disk@@Base+0x24c>
   1bac6:	blx	8f58 <__errno_location@plt>
   1baca:	ldr	r2, [pc, #96]	; (1bb2c <write_data_to_disk@@Base+0x294>)
   1bacc:	movs	r1, #1
   1bace:	add	r2, pc
   1bad0:	ldr	r3, [r0, #0]
   1bad2:	mov	r4, r0
   1bad4:	mov	r0, r5
   1bad6:	blx	9040 <__fprintf_chk@plt+0x4>
   1bada:	ldr	r0, [sp, #40]	; 0x28
   1badc:	ldr	r4, [r4, #0]
   1bade:	blx	8b84 <free@plt+0x4>
   1bae2:	b.n	1b9ba <write_data_to_disk@@Base+0x122>
   1bae4:	ldr	r0, [pc, #72]	; (1bb30 <write_data_to_disk@@Base+0x298>)
   1bae6:	mov	r1, r5
   1bae8:	add	r0, pc
   1baea:	blx	91a8 <fputs@plt+0x4>
   1baee:	ldr	r0, [sp, #40]	; 0x28
   1baf0:	b.n	1b954 <write_data_to_disk@@Base+0xbc>
   1baf2:	mov	r0, r4
   1baf4:	add	sp, #68	; 0x44
   1baf6:	vpop	{d8}
   1bafa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bafe:	nop
   1bb00:	orn	r0, lr, #8650752	; 0x840000
   1bb04:	lsls	r0, r1, #10
   1bb06:	movs	r0, r0
   1bb08:	orn	r0, r6, #8650752	; 0x840000
   1bb0c:	ldrb	r6, [r3, r2]
   1bb0e:	movs	r2, r0
   1bb10:	negs	r6, r5
   1bb12:	movs	r2, r0
   1bb14:	lsls	r4, r3, #10
   1bb16:	movs	r0, r0
   1bb18:	ldrh	r4, [r2, r6]
   1bb1a:	movs	r2, r0
   1bb1c:	ldrh	r6, [r3, r5]
   1bb1e:	movs	r2, r0
   1bb20:			; <UNDEFINED> instruction: 0xf35a0004
   1bb24:	ldrh	r0, [r6, r4]
   1bb26:	movs	r2, r0
   1bb28:	ldrh	r4, [r2, r4]
   1bb2a:	movs	r2, r0
   1bb2c:	ldrh	r3, [r3, r1]
   1bb2e:	movs	r2, r0
   1bb30:	ldrh	r5, [r3, r1]
   1bb32:	movs	r2, r0

0001bb34 <set_extent_buffer_dirty@@Base>:
   1bb34:	push	{r0, r1, r4, r6, r7, lr}
   1bb36:	mov	r4, r0
   1bb38:	ldr	r3, [r0, #84]	; 0x54
   1bb3a:	lsls	r2, r3, #31
   1bb3c:	bmi.n	1bb68 <set_extent_buffer_dirty@@Base+0x34>
   1bb3e:	orr.w	r3, r3, #1
   1bb42:	str	r3, [r0, #84]	; 0x54
   1bb44:	ldrd	r2, r3, [r0, #40]	; 0x28
   1bb48:	ldr	r1, [r0, #76]	; 0x4c
   1bb4a:	adds.w	r6, r2, #4294967295	; 0xffffffff
   1bb4e:	adc.w	r7, r3, #4294967295	; 0xffffffff
   1bb52:	adds	r6, r6, r1
   1bb54:	adc.w	r7, r7, #0
   1bb58:	strd	r6, r7, [sp]
   1bb5c:	ldr	r0, [r0, #56]	; 0x38
   1bb5e:	bl	1b388 <set_extent_dirty@@Base>
   1bb62:	ldr	r3, [r4, #80]	; 0x50
   1bb64:	adds	r3, #1
   1bb66:	str	r3, [r4, #80]	; 0x50
   1bb68:	movs	r0, #0
   1bb6a:	add	sp, #8
   1bb6c:	pop	{r4, r6, r7, pc}

0001bb6e <clear_extent_buffer_dirty@@Base>:
   1bb6e:	push	{r0, r1, r4, r6, r7, lr}
   1bb70:	mov	r4, r0
   1bb72:	ldr	r3, [r0, #84]	; 0x54
   1bb74:	lsls	r2, r3, #31
   1bb76:	bpl.n	1bba2 <clear_extent_buffer_dirty@@Base+0x34>
   1bb78:	bic.w	r3, r3, #1
   1bb7c:	str	r3, [r0, #84]	; 0x54
   1bb7e:	ldrd	r2, r3, [r0, #40]	; 0x28
   1bb82:	ldr	r1, [r0, #76]	; 0x4c
   1bb84:	adds.w	r6, r2, #4294967295	; 0xffffffff
   1bb88:	adc.w	r7, r3, #4294967295	; 0xffffffff
   1bb8c:	adds	r6, r6, r1
   1bb8e:	adc.w	r7, r7, #0
   1bb92:	strd	r6, r7, [sp]
   1bb96:	ldr	r0, [r0, #56]	; 0x38
   1bb98:	bl	1b3a0 <clear_extent_dirty@@Base>
   1bb9c:	mov	r0, r4
   1bb9e:	bl	1b4c0 <free_extent_buffer@@Base>
   1bba2:	movs	r0, #0
   1bba4:	add	sp, #8
   1bba6:	pop	{r4, r6, r7, pc}

0001bba8 <memcmp_extent_buffer@@Base>:
   1bba8:	push	{r5}
   1bbaa:	adds	r0, #96	; 0x60
   1bbac:	mov	r5, r2
   1bbae:	mov	r2, r3
   1bbb0:	add	r0, r5
   1bbb2:	ldr.w	r5, [sp], #4
   1bbb6:	b.w	8c18 <memcmp@plt>

0001bbba <read_extent_buffer@@Base>:
   1bbba:	adds	r0, #96	; 0x60
   1bbbc:	push	{r5}
   1bbbe:	mov	r5, r1
   1bbc0:	mov	r1, r2
   1bbc2:	mov	r2, r3
   1bbc4:	add	r1, r0
   1bbc6:	mov	r0, r5
   1bbc8:	ldr.w	r5, [sp], #4
   1bbcc:	b.w	8bd8 <memcpy@plt>

0001bbd0 <write_extent_buffer@@Base>:
   1bbd0:	push	{r5}
   1bbd2:	adds	r0, #96	; 0x60
   1bbd4:	mov	r5, r2
   1bbd6:	mov	r2, r3
   1bbd8:	add	r0, r5
   1bbda:	ldr.w	r5, [sp], #4
   1bbde:	b.w	8bd8 <memcpy@plt>

0001bbe2 <copy_extent_buffer@@Base>:
   1bbe2:	push	{r6}
   1bbe4:	adds	r0, #96	; 0x60
   1bbe6:	adds	r1, #96	; 0x60
   1bbe8:	mov	r6, r2
   1bbea:	add	r1, r3
   1bbec:	ldr	r2, [sp, #4]
   1bbee:	add	r0, r6
   1bbf0:	ldr.w	r6, [sp], #4
   1bbf4:	b.w	8bd8 <memcpy@plt>

0001bbf8 <btrfs_clone_extent_buffer@@Base>:
   1bbf8:	push	{r0, r1, r2, r4, r5, lr}
   1bbfa:	mov	r5, r0
   1bbfc:	ldr	r3, [r0, #76]	; 0x4c
   1bbfe:	str	r3, [sp, #0]
   1bc00:	ldrd	r2, r3, [r0, #40]	; 0x28
   1bc04:	ldr	r0, [r0, #92]	; 0x5c
   1bc06:	bl	1ab66 <add_merge_cache_extent@@Base+0x1da>
   1bc0a:	mov	r4, r0
   1bc0c:	cbz	r0, 1bc26 <btrfs_clone_extent_buffer@@Base+0x2e>
   1bc0e:	movs	r3, #0
   1bc10:	str	r3, [r0, #56]	; 0x38
   1bc12:	ldr	r2, [r5, #76]	; 0x4c
   1bc14:	mov	r1, r5
   1bc16:	str	r2, [sp, #0]
   1bc18:	mov	r2, r3
   1bc1a:	bl	1bbe2 <copy_extent_buffer@@Base>
   1bc1e:	ldr	r3, [r4, #84]	; 0x54
   1bc20:	orr.w	r3, r3, #2048	; 0x800
   1bc24:	str	r3, [r4, #84]	; 0x54
   1bc26:	mov	r0, r4
   1bc28:	add	sp, #12
   1bc2a:	pop	{r4, r5, pc}

0001bc2c <memmove_extent_buffer@@Base>:
   1bc2c:	adds	r0, #96	; 0x60
   1bc2e:	push	{r5}
   1bc30:	mov	r5, r1
   1bc32:	mov	r1, r2
   1bc34:	mov	r2, r3
   1bc36:	add	r1, r0
   1bc38:	add	r0, r5
   1bc3a:	ldr.w	r5, [sp], #4
   1bc3e:	b.w	8b70 <memmove@plt>

0001bc42 <memset_extent_buffer@@Base>:
   1bc42:	push	{r5}
   1bc44:	adds	r0, #96	; 0x60
   1bc46:	mov	r5, r2
   1bc48:	mov	r2, r3
   1bc4a:	add	r0, r5
   1bc4c:	ldr.w	r5, [sp], #4
   1bc50:	b.w	8f94 <memset@plt>

0001bc54 <extent_buffer_test_bit@@Base>:
   1bc54:	cmp	r2, #0
   1bc56:	mov	r3, r2
   1bc58:	it	lt
   1bc5a:	addlt	r3, r2, #7
   1bc5c:	add	r1, r0
   1bc5e:	and.w	r2, r2, #7
   1bc62:	add.w	r0, r1, r3, asr #3
   1bc66:	ldrb.w	r0, [r0, #96]	; 0x60
   1bc6a:	asrs	r0, r2
   1bc6c:	and.w	r0, r0, #1
   1bc70:	bx	lr
   1bc72:	nop

0001bc74 <__crc32c_le@@Base>:
   1bc74:	push	{r4, lr}
   1bc76:	add	r2, r1
   1bc78:	ldr	r4, [pc, #24]	; (1bc94 <__crc32c_le@@Base+0x20>)
   1bc7a:	add	r4, pc
   1bc7c:	cmp	r1, r2
   1bc7e:	bne.n	1bc82 <__crc32c_le@@Base+0xe>
   1bc80:	pop	{r4, pc}
   1bc82:	ldrb.w	r3, [r1], #1
   1bc86:	eors	r3, r0
   1bc88:	uxtb	r3, r3
   1bc8a:	ldr.w	r3, [r4, r3, lsl #2]
   1bc8e:	eor.w	r0, r3, r0, lsr #8
   1bc92:	b.n	1bc7c <__crc32c_le@@Base+0x8>
   1bc94:	ldr	r2, [r1, r6]
   1bc96:	movs	r2, r0

0001bc98 <crc32c_optimization_init@@Base>:
   1bc98:	bx	lr

0001bc9a <crc32c_le@@Base>:
   1bc9a:	b.w	1bc74 <__crc32c_le@@Base>
   1bc9e:	nop

0001bca0 <__btrfs_warning@@Base>:
   1bca0:	push	{r0, r1, r2, r3}
   1bca2:	push	{r4, r5, lr}
   1bca4:	sub	sp, #20
   1bca6:	add	r4, sp, #32
   1bca8:	ldr	r1, [pc, #88]	; (1bd04 <__btrfs_warning@@Base+0x64>)
   1bcaa:	ldr	r3, [pc, #92]	; (1bd08 <__btrfs_warning@@Base+0x68>)
   1bcac:	ldr.w	r2, [r4], #4
   1bcb0:	add	r1, pc
   1bcb2:	add	r3, pc
   1bcb4:	ldr	r0, [pc, #84]	; (1bd0c <__btrfs_warning@@Base+0x6c>)
   1bcb6:	str	r2, [sp, #4]
   1bcb8:	add	r0, pc
   1bcba:	ldr	r2, [pc, #84]	; (1bd10 <__btrfs_warning@@Base+0x70>)
   1bcbc:	ldr	r2, [r1, r2]
   1bcbe:	ldr	r1, [pc, #84]	; (1bd14 <__btrfs_warning@@Base+0x74>)
   1bcc0:	ldr	r2, [r2, #0]
   1bcc2:	str	r2, [sp, #12]
   1bcc4:	mov.w	r2, #0
   1bcc8:	ldr	r5, [r3, r1]
   1bcca:	ldr	r1, [r5, #0]
   1bccc:	blx	91a8 <fputs@plt+0x4>
   1bcd0:	ldr	r2, [sp, #4]
   1bcd2:	mov	r3, r4
   1bcd4:	movs	r1, #1
   1bcd6:	ldr	r0, [r5, #0]
   1bcd8:	str	r4, [sp, #8]
   1bcda:	blx	8e8c <__vfprintf_chk@plt>
   1bcde:	ldr	r1, [r5, #0]
   1bce0:	movs	r0, #10
   1bce2:	blx	90c8 <fputc@plt+0x4>
   1bce6:	ldr	r2, [pc, #48]	; (1bd18 <__btrfs_warning@@Base+0x78>)
   1bce8:	ldr	r3, [pc, #36]	; (1bd10 <__btrfs_warning@@Base+0x70>)
   1bcea:	add	r2, pc
   1bcec:	ldr	r3, [r2, r3]
   1bcee:	ldr	r2, [r3, #0]
   1bcf0:	ldr	r3, [sp, #12]
   1bcf2:	eors	r2, r3
   1bcf4:	beq.n	1bcfa <__btrfs_warning@@Base+0x5a>
   1bcf6:	blx	8c90 <__stack_chk_fail@plt>
   1bcfa:	add	sp, #20
   1bcfc:	ldmia.w	sp!, {r4, r5, lr}
   1bd00:	add	sp, #16
   1bd02:	bx	lr
   1bd04:	orn	r0, r8, #4
   1bd08:	orn	r0, r6, #4
   1bd0c:	ldrb	r4, [r1, r5]
   1bd0e:	movs	r2, r0
   1bd10:	lsls	r0, r1, #10
   1bd12:	movs	r0, r0
   1bd14:	lsls	r4, r3, #10
   1bd16:	movs	r0, r0
   1bd18:	bic.w	r0, lr, #4

0001bd1c <__btrfs_error@@Base>:
   1bd1c:	push	{r0, r1, r2, r3}
   1bd1e:	push	{r4, r5, lr}
   1bd20:	sub	sp, #20
   1bd22:	add	r4, sp, #32
   1bd24:	ldr	r1, [pc, #88]	; (1bd80 <__btrfs_error@@Base+0x64>)
   1bd26:	ldr	r3, [pc, #92]	; (1bd84 <__btrfs_error@@Base+0x68>)
   1bd28:	ldr.w	r2, [r4], #4
   1bd2c:	add	r1, pc
   1bd2e:	add	r3, pc
   1bd30:	ldr	r0, [pc, #84]	; (1bd88 <__btrfs_error@@Base+0x6c>)
   1bd32:	str	r2, [sp, #4]
   1bd34:	add	r0, pc
   1bd36:	ldr	r2, [pc, #84]	; (1bd8c <__btrfs_error@@Base+0x70>)
   1bd38:	ldr	r2, [r1, r2]
   1bd3a:	ldr	r1, [pc, #84]	; (1bd90 <__btrfs_error@@Base+0x74>)
   1bd3c:	ldr	r2, [r2, #0]
   1bd3e:	str	r2, [sp, #12]
   1bd40:	mov.w	r2, #0
   1bd44:	ldr	r5, [r3, r1]
   1bd46:	ldr	r1, [r5, #0]
   1bd48:	blx	91a8 <fputs@plt+0x4>
   1bd4c:	ldr	r2, [sp, #4]
   1bd4e:	mov	r3, r4
   1bd50:	movs	r1, #1
   1bd52:	ldr	r0, [r5, #0]
   1bd54:	str	r4, [sp, #8]
   1bd56:	blx	8e8c <__vfprintf_chk@plt>
   1bd5a:	ldr	r1, [r5, #0]
   1bd5c:	movs	r0, #10
   1bd5e:	blx	90c8 <fputc@plt+0x4>
   1bd62:	ldr	r2, [pc, #48]	; (1bd94 <__btrfs_error@@Base+0x78>)
   1bd64:	ldr	r3, [pc, #36]	; (1bd8c <__btrfs_error@@Base+0x70>)
   1bd66:	add	r2, pc
   1bd68:	ldr	r3, [r2, r3]
   1bd6a:	ldr	r2, [r3, #0]
   1bd6c:	ldr	r3, [sp, #12]
   1bd6e:	eors	r2, r3
   1bd70:	beq.n	1bd76 <__btrfs_error@@Base+0x5a>
   1bd72:	blx	8c90 <__stack_chk_fail@plt>
   1bd76:	add	sp, #20
   1bd78:	ldmia.w	sp!, {r4, r5, lr}
   1bd7c:	add	sp, #16
   1bd7e:	bx	lr
   1bd80:	vaddl.s32	q8, d12, d4
   1bd84:	vaddl.s32	q8, d10, d4
   1bd88:	ldrb	r2, [r3, r3]
   1bd8a:	movs	r2, r0
   1bd8c:	lsls	r0, r1, #10
   1bd8e:	movs	r0, r0
   1bd90:	lsls	r4, r3, #10
   1bd92:	movs	r0, r0
   1bd94:	vext.8	d0, d2, d4, #0

0001bd98 <__btrfs_warning_on@@Base>:
   1bd98:	push	{r1, r2, r3}
   1bd9a:	push	{r4, lr}
   1bd9c:	sub	sp, #20
   1bd9e:	ldr	r1, [pc, #92]	; (1bdfc <__btrfs_warning_on@@Base+0x64>)
   1bda0:	ldr	r2, [sp, #28]
   1bda2:	add	r1, pc
   1bda4:	ldr	r3, [pc, #88]	; (1be00 <__btrfs_warning_on@@Base+0x68>)
   1bda6:	str	r2, [sp, #4]
   1bda8:	add	r3, pc
   1bdaa:	ldr	r2, [pc, #88]	; (1be04 <__btrfs_warning_on@@Base+0x6c>)
   1bdac:	ldr	r2, [r1, r2]
   1bdae:	ldr	r2, [r2, #0]
   1bdb0:	str	r2, [sp, #12]
   1bdb2:	mov.w	r2, #0
   1bdb6:	cbz	r0, 1bdde <__btrfs_warning_on@@Base+0x46>
   1bdb8:	ldr	r1, [pc, #76]	; (1be08 <__btrfs_warning_on@@Base+0x70>)
   1bdba:	ldr	r0, [pc, #80]	; (1be0c <__btrfs_warning_on@@Base+0x74>)
   1bdbc:	ldr	r4, [r3, r1]
   1bdbe:	add	r0, pc
   1bdc0:	ldr	r1, [r4, #0]
   1bdc2:	blx	91a8 <fputs@plt+0x4>
   1bdc6:	add	r3, sp, #32
   1bdc8:	ldr	r2, [sp, #4]
   1bdca:	movs	r1, #1
   1bdcc:	ldr	r0, [r4, #0]
   1bdce:	str	r3, [sp, #8]
   1bdd0:	blx	8e8c <__vfprintf_chk@plt>
   1bdd4:	ldr	r1, [r4, #0]
   1bdd6:	movs	r0, #10
   1bdd8:	blx	90c8 <fputc@plt+0x4>
   1bddc:	movs	r0, #1
   1bdde:	ldr	r2, [pc, #48]	; (1be10 <__btrfs_warning_on@@Base+0x78>)
   1bde0:	ldr	r3, [pc, #32]	; (1be04 <__btrfs_warning_on@@Base+0x6c>)
   1bde2:	add	r2, pc
   1bde4:	ldr	r3, [r2, r3]
   1bde6:	ldr	r2, [r3, #0]
   1bde8:	ldr	r3, [sp, #12]
   1bdea:	eors	r2, r3
   1bdec:	beq.n	1bdf2 <__btrfs_warning_on@@Base+0x5a>
   1bdee:	blx	8c90 <__stack_chk_fail@plt>
   1bdf2:	add	sp, #20
   1bdf4:	ldmia.w	sp!, {r4, lr}
   1bdf8:	add	sp, #12
   1bdfa:	bx	lr
   1bdfc:	vhadd.s<illegal width 64>	d16, d6, d4
   1be00:	vhadd.s<illegal width 64>	d16, d0, d4
   1be04:	lsls	r0, r1, #10
   1be06:	movs	r0, r0
   1be08:	lsls	r4, r3, #10
   1be0a:	movs	r0, r0
   1be0c:	ldrb	r6, [r0, r1]
   1be0e:	movs	r2, r0
   1be10:	vhadd.s<illegal width 64>	d0, d6, d4

0001be14 <__btrfs_error_on@@Base>:
   1be14:	push	{r1, r2, r3}
   1be16:	push	{r4, lr}
   1be18:	sub	sp, #20
   1be1a:	ldr	r1, [pc, #92]	; (1be78 <__btrfs_error_on@@Base+0x64>)
   1be1c:	ldr	r2, [sp, #28]
   1be1e:	add	r1, pc
   1be20:	ldr	r3, [pc, #88]	; (1be7c <__btrfs_error_on@@Base+0x68>)
   1be22:	str	r2, [sp, #4]
   1be24:	add	r3, pc
   1be26:	ldr	r2, [pc, #88]	; (1be80 <__btrfs_error_on@@Base+0x6c>)
   1be28:	ldr	r2, [r1, r2]
   1be2a:	ldr	r2, [r2, #0]
   1be2c:	str	r2, [sp, #12]
   1be2e:	mov.w	r2, #0
   1be32:	cbz	r0, 1be5a <__btrfs_error_on@@Base+0x46>
   1be34:	ldr	r1, [pc, #76]	; (1be84 <__btrfs_error_on@@Base+0x70>)
   1be36:	ldr	r0, [pc, #80]	; (1be88 <__btrfs_error_on@@Base+0x74>)
   1be38:	ldr	r4, [r3, r1]
   1be3a:	add	r0, pc
   1be3c:	ldr	r1, [r4, #0]
   1be3e:	blx	91a8 <fputs@plt+0x4>
   1be42:	add	r3, sp, #32
   1be44:	ldr	r2, [sp, #4]
   1be46:	movs	r1, #1
   1be48:	ldr	r0, [r4, #0]
   1be4a:	str	r3, [sp, #8]
   1be4c:	blx	8e8c <__vfprintf_chk@plt>
   1be50:	ldr	r1, [r4, #0]
   1be52:	movs	r0, #10
   1be54:	blx	90c8 <fputc@plt+0x4>
   1be58:	movs	r0, #1
   1be5a:	ldr	r2, [pc, #48]	; (1be8c <__btrfs_error_on@@Base+0x78>)
   1be5c:	ldr	r3, [pc, #32]	; (1be80 <__btrfs_error_on@@Base+0x6c>)
   1be5e:	add	r2, pc
   1be60:	ldr	r3, [r2, r3]
   1be62:	ldr	r2, [r3, #0]
   1be64:	ldr	r3, [sp, #12]
   1be66:	eors	r2, r3
   1be68:	beq.n	1be6e <__btrfs_error_on@@Base+0x5a>
   1be6a:	blx	8c90 <__stack_chk_fail@plt>
   1be6e:	add	sp, #20
   1be70:	ldmia.w	sp!, {r4, lr}
   1be74:	add	sp, #12
   1be76:	bx	lr
   1be78:	cdp	0, 15, cr0, cr10, cr4, {0}
   1be7c:	cdp	0, 15, cr0, cr4, cr4, {0}
   1be80:	lsls	r0, r1, #10
   1be82:	movs	r0, r0
   1be84:	lsls	r4, r3, #10
   1be86:	movs	r0, r0
   1be88:	ldrh	r4, [r2, r7]
   1be8a:	movs	r2, r0
   1be8c:	cdp	0, 11, cr0, cr10, cr4, {0}

0001be90 <btrfs_uuid_to_key@@Base>:
   1be90:	ldr	r2, [r0, #0]
   1be92:	ldr	r3, [r0, #4]
   1be94:	str	r2, [r1, #0]
   1be96:	str	r3, [r1, #4]
   1be98:	ldr	r2, [r0, #8]
   1be9a:	ldr	r3, [r0, #12]
   1be9c:	str.w	r2, [r1, #9]
   1bea0:	str.w	r3, [r1, #13]
   1bea4:	bx	lr
   1bea6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1beaa:	mov	r9, r0
   1beac:	mov	r0, r1
   1beae:	ldr	r1, [pc, #260]	; (1bfb4 <btrfs_uuid_to_key@@Base+0x124>)
   1beb0:	mov	r7, r2
   1beb2:	sub.w	sp, sp, #4128	; 0x1020
   1beb6:	ldr	r2, [pc, #256]	; (1bfb8 <btrfs_uuid_to_key@@Base+0x128>)
   1beb8:	sub	sp, #24
   1beba:	add	r1, pc
   1bebc:	add	r6, sp, #56	; 0x38
   1bebe:	add	r5, sp, #28
   1bec0:	sub.w	r4, r6, #8
   1bec4:	ldr	r2, [r1, r2]
   1bec6:	mov	r8, r3
   1bec8:	add.w	r3, sp, #4128	; 0x1020
   1becc:	mov	r1, r5
   1bece:	ldr	r2, [r2, #0]
   1bed0:	str	r2, [r3, #20]
   1bed2:	mov.w	r2, #0
   1bed6:	adds	r3, #20
   1bed8:	strb.w	r7, [sp, #36]	; 0x24
   1bedc:	bl	1be90 <btrfs_uuid_to_key@@Base>
   1bee0:	mov.w	r2, #4096	; 0x1000
   1bee4:	movs	r1, #0
   1bee6:	mov	r0, r4
   1bee8:	ldr.w	sl, [pc, #208]	; 1bfbc <btrfs_uuid_to_key@@Base+0x12c>
   1beec:	blx	8f98 <memset@plt+0x4>
   1bef0:	movs	r2, #9
   1bef2:	movs	r3, #0
   1bef4:	strd	r2, r3, [r6, #-8]
   1bef8:	ldrd	r2, r3, [r6, #-28]
   1befc:	mov	r0, r9
   1befe:	strd	r7, r7, [r4, #56]	; 0x38
   1bf02:	movs	r7, #1
   1bf04:	ldr	r1, [pc, #168]	; (1bfb0 <btrfs_uuid_to_key@@Base+0x120>)
   1bf06:	add	sl, pc
   1bf08:	strd	r2, r3, [r4, #8]
   1bf0c:	strd	r2, r3, [r4, #16]
   1bf10:	ldr.w	r2, [r6, #-19]
   1bf14:	ldr.w	r3, [r6, #-15]
   1bf18:	str	r7, [r4, #64]	; 0x40
   1bf1a:	strd	r2, r3, [r4, #24]
   1bf1e:	strd	r2, r3, [r4, #32]
   1bf22:	mov.w	r2, #4294967295	; 0xffffffff
   1bf26:	mov.w	r3, #4294967295	; 0xffffffff
   1bf2a:	strd	r2, r3, [r4, #48]	; 0x30
   1bf2e:	mov	r2, r4
   1bf30:	blx	8d48 <ioctl@plt>
   1bf34:	cmp	r0, #0
   1bf36:	bge.n	1bf66 <btrfs_uuid_to_key@@Base+0xd6>
   1bf38:	ldr	r3, [pc, #132]	; (1bfc0 <btrfs_uuid_to_key@@Base+0x130>)
   1bf3a:	ldr.w	r3, [sl, r3]
   1bf3e:	str	r0, [sp, #16]
   1bf40:	ldr.w	r1, [r6, #-19]
   1bf44:	ldr.w	r2, [r6, #-15]
   1bf48:	strd	r1, r2, [sp, #8]
   1bf4c:	ldrd	r1, r2, [r6, #-28]
   1bf50:	strd	r1, r2, [sp]
   1bf54:	mov	r1, r7
   1bf56:	ldr	r2, [pc, #108]	; (1bfc4 <btrfs_uuid_to_key@@Base+0x134>)
   1bf58:	ldr	r0, [r3, #0]
   1bf5a:	add	r2, pc
   1bf5c:	blx	9040 <__fprintf_chk@plt+0x4>
   1bf60:	mvn.w	r0, #1
   1bf64:	b.n	1bf8c <btrfs_uuid_to_key@@Base+0xfc>
   1bf66:	ldr	r3, [r4, #64]	; 0x40
   1bf68:	cmp	r3, #0
   1bf6a:	beq.n	1bf60 <btrfs_uuid_to_key@@Base+0xd0>
   1bf6c:	ldr.w	r2, [r4, #132]	; 0x84
   1bf70:	ands.w	r0, r2, #7
   1bf74:	bne.n	1bf78 <btrfs_uuid_to_key@@Base+0xe8>
   1bf76:	cbnz	r2, 1bf84 <btrfs_uuid_to_key@@Base+0xf4>
   1bf78:	ldr	r1, [pc, #76]	; (1bfc8 <btrfs_uuid_to_key@@Base+0x138>)
   1bf7a:	movs	r0, #1
   1bf7c:	add	r1, pc
   1bf7e:	blx	900c <__printf_chk@plt+0x4>
   1bf82:	b.n	1bf60 <btrfs_uuid_to_key@@Base+0xd0>
   1bf84:	ldrd	r2, r3, [r4, #136]	; 0x88
   1bf88:	strd	r2, r3, [r8]
   1bf8c:	ldr	r1, [pc, #60]	; (1bfcc <btrfs_uuid_to_key@@Base+0x13c>)
   1bf8e:	add.w	r3, sp, #4128	; 0x1020
   1bf92:	ldr	r2, [pc, #36]	; (1bfb8 <btrfs_uuid_to_key@@Base+0x128>)
   1bf94:	adds	r3, #20
   1bf96:	add	r1, pc
   1bf98:	ldr	r2, [r1, r2]
   1bf9a:	ldr	r1, [r2, #0]
   1bf9c:	ldr	r2, [r3, #0]
   1bf9e:	eors	r1, r2
   1bfa0:	beq.n	1bfa6 <btrfs_uuid_to_key@@Base+0x116>
   1bfa2:	blx	8c90 <__stack_chk_fail@plt>
   1bfa6:	add.w	sp, sp, #4128	; 0x1020
   1bfaa:	add	sp, #24
   1bfac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bfb0:	str	r4, [sp, #68]	; 0x44
   1bfb2:	beq.n	1bfb6 <btrfs_uuid_to_key@@Base+0x126>
   1bfb4:	cdp	0, 5, cr0, cr14, cr4, {0}
   1bfb8:	lsls	r0, r1, #10
   1bfba:	movs	r0, r0
   1bfbc:	cdp	0, 1, cr0, cr2, cr4, {0}
   1bfc0:	lsls	r4, r3, #10
   1bfc2:	movs	r0, r0
   1bfc4:	ldrh	r4, [r7, r2]
   1bfc6:	movs	r2, r0
   1bfc8:	ldrh	r0, [r6, r3]
   1bfca:	movs	r2, r0
   1bfcc:	stc	0, cr0, [r2, #16]

0001bfd0 <btrfs_lookup_uuid_subvol_item@@Base>:
   1bfd0:	mov	r3, r2
   1bfd2:	movs	r2, #251	; 0xfb
   1bfd4:	b.n	1bea6 <btrfs_uuid_to_key@@Base+0x16>

0001bfd6 <btrfs_lookup_uuid_received_subvol_item@@Base>:
   1bfd6:	mov	r3, r2
   1bfd8:	movs	r2, #252	; 0xfc
   1bfda:	b.n	1bea6 <btrfs_uuid_to_key@@Base+0x16>

0001bfdc <arg_strtou64@@Base>:
   1bfdc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1bfde:	add	r1, sp, #8
   1bfe0:	ldr	r2, [pc, #128]	; (1c064 <arg_strtou64@@Base+0x88>)
   1bfe2:	ldr	r3, [pc, #132]	; (1c068 <arg_strtou64@@Base+0x8c>)
   1bfe4:	add	r2, pc
   1bfe6:	str	r0, [sp, #4]
   1bfe8:	ldr	r6, [pc, #128]	; (1c06c <arg_strtou64@@Base+0x90>)
   1bfea:	ldr	r3, [r2, r3]
   1bfec:	movs	r2, #0
   1bfee:	add	r6, pc
   1bff0:	ldr	r3, [r3, #0]
   1bff2:	str	r3, [sp, #12]
   1bff4:	mov.w	r3, #0
   1bff8:	str	r2, [sp, #8]
   1bffa:	blx	8fd8 <strtoull@plt>
   1bffe:	ldrd	r3, r2, [sp, #4]
   1c002:	mov	r4, r0
   1c004:	mov	r5, r1
   1c006:	cbz	r2, 1c022 <arg_strtou64@@Base+0x46>
   1c008:	ldrb	r2, [r2, #0]
   1c00a:	cbz	r2, 1c022 <arg_strtou64@@Base+0x46>
   1c00c:	ldr	r2, [pc, #96]	; (1c070 <arg_strtou64@@Base+0x94>)
   1c00e:	ldr	r0, [r6, r2]
   1c010:	ldr	r2, [pc, #96]	; (1c074 <arg_strtou64@@Base+0x98>)
   1c012:	add	r2, pc
   1c014:	ldr	r0, [r0, #0]
   1c016:	movs	r1, #1
   1c018:	blx	9040 <__fprintf_chk@plt+0x4>
   1c01c:	movs	r0, #1
   1c01e:	blx	8f10 <exit@plt>
   1c022:	ldrb	r2, [r3, #0]
   1c024:	cmp	r2, #45	; 0x2d
   1c026:	bne.n	1c032 <arg_strtou64@@Base+0x56>
   1c028:	ldr	r2, [pc, #68]	; (1c070 <arg_strtou64@@Base+0x94>)
   1c02a:	ldr	r0, [r6, r2]
   1c02c:	ldr	r2, [pc, #72]	; (1c078 <arg_strtou64@@Base+0x9c>)
   1c02e:	add	r2, pc
   1c030:	b.n	1c014 <arg_strtou64@@Base+0x38>
   1c032:	adds	r2, r5, #1
   1c034:	it	eq
   1c036:	cmpeq.w	r4, #4294967295	; 0xffffffff
   1c03a:	bne.n	1c046 <arg_strtou64@@Base+0x6a>
   1c03c:	ldr	r2, [pc, #48]	; (1c070 <arg_strtou64@@Base+0x94>)
   1c03e:	ldr	r0, [r6, r2]
   1c040:	ldr	r2, [pc, #56]	; (1c07c <arg_strtou64@@Base+0xa0>)
   1c042:	add	r2, pc
   1c044:	b.n	1c014 <arg_strtou64@@Base+0x38>
   1c046:	ldr	r2, [pc, #56]	; (1c080 <arg_strtou64@@Base+0xa4>)
   1c048:	ldr	r3, [pc, #28]	; (1c068 <arg_strtou64@@Base+0x8c>)
   1c04a:	add	r2, pc
   1c04c:	ldr	r3, [r2, r3]
   1c04e:	ldr	r2, [r3, #0]
   1c050:	ldr	r3, [sp, #12]
   1c052:	eors	r2, r3
   1c054:	beq.n	1c05a <arg_strtou64@@Base+0x7e>
   1c056:	blx	8c90 <__stack_chk_fail@plt>
   1c05a:	mov	r0, r4
   1c05c:	mov	r1, r5
   1c05e:	add	sp, #16
   1c060:	pop	{r4, r5, r6, pc}
   1c062:	nop
   1c064:	ldc	0, cr0, [r4, #-16]!
   1c068:	lsls	r0, r1, #10
   1c06a:	movs	r0, r0
   1c06c:	stc	0, cr0, [sl, #-16]!
   1c070:	lsls	r4, r3, #10
   1c072:	movs	r0, r0
   1c074:	ldrh	r3, [r0, r2]
   1c076:	movs	r2, r0
   1c078:	ldrh	r0, [r2, r2]
   1c07a:	movs	r2, r0
   1c07c:	ldrh	r3, [r4, r2]
   1c07e:	movs	r2, r0
   1c080:	stcl	0, cr0, [lr], {4}

0001c084 <lookup_path_rootid@@Base>:
   1c084:	push	{r4, r5, r6, lr}
   1c086:	mov	r4, r1
   1c088:	ldr	r1, [pc, #128]	; (1c10c <lookup_path_rootid@@Base+0x88>)
   1c08a:	sub.w	sp, sp, #4096	; 0x1000
   1c08e:	ldr	r2, [pc, #128]	; (1c110 <lookup_path_rootid@@Base+0x8c>)
   1c090:	sub	sp, #8
   1c092:	add	r1, pc
   1c094:	add.w	r3, sp, #4096	; 0x1000
   1c098:	adds	r3, #4
   1c09a:	add	r6, sp, #8
   1c09c:	ldr	r2, [r1, r2]
   1c09e:	mov	r5, r0
   1c0a0:	movs	r1, #0
   1c0a2:	ldr	r2, [r2, #0]
   1c0a4:	str	r2, [r3, #0]
   1c0a6:	mov.w	r2, #0
   1c0aa:	sub.w	r3, r6, #8
   1c0ae:	mov.w	r2, #4096	; 0x1000
   1c0b2:	mov	r0, r3
   1c0b4:	blx	8f98 <memset@plt+0x4>
   1c0b8:	movs	r1, #0
   1c0ba:	mov	r3, r0
   1c0bc:	mov.w	r0, #256	; 0x100
   1c0c0:	mov	r2, r3
   1c0c2:	strd	r0, r1, [r3, #8]
   1c0c6:	ldr	r1, [pc, #64]	; (1c108 <lookup_path_rootid@@Base+0x84>)
   1c0c8:	mov	r0, r5
   1c0ca:	blx	8d48 <ioctl@plt>
   1c0ce:	cmp	r0, #0
   1c0d0:	bge.n	1c0f4 <lookup_path_rootid@@Base+0x70>
   1c0d2:	blx	8f58 <__errno_location@plt>
   1c0d6:	ldr	r0, [r0, #0]
   1c0d8:	negs	r0, r0
   1c0da:	ldr	r1, [pc, #56]	; (1c114 <lookup_path_rootid@@Base+0x90>)
   1c0dc:	add.w	r3, sp, #4096	; 0x1000
   1c0e0:	ldr	r2, [pc, #44]	; (1c110 <lookup_path_rootid@@Base+0x8c>)
   1c0e2:	adds	r3, #4
   1c0e4:	add	r1, pc
   1c0e6:	ldr	r2, [r1, r2]
   1c0e8:	ldr	r1, [r2, #0]
   1c0ea:	ldr	r2, [r3, #0]
   1c0ec:	eors	r1, r2
   1c0ee:	beq.n	1c100 <lookup_path_rootid@@Base+0x7c>
   1c0f0:	blx	8c90 <__stack_chk_fail@plt>
   1c0f4:	ldrd	r2, r3, [r6, #-8]
   1c0f8:	movs	r0, #0
   1c0fa:	strd	r2, r3, [r4]
   1c0fe:	b.n	1c0da <lookup_path_rootid@@Base+0x56>
   1c100:	add.w	sp, sp, #4096	; 0x1000
   1c104:	add	sp, #8
   1c106:	pop	{r4, r5, r6, pc}
   1c108:	str	r4, [sp, #72]	; 0x48
   1c10a:	beq.n	1c10e <lookup_path_rootid@@Base+0x8a>
   1c10c:	stc	0, cr0, [r6], {4}
   1c110:	lsls	r0, r1, #10
   1c112:	movs	r0, r0
   1c114:	ldc	0, cr0, [r4], #-16

0001c118 <rb_insert@@Base>:
   1c118:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c11c:	movs	r3, #0
   1c11e:	mov	r7, r0
   1c120:	mov	r6, r1
   1c122:	mov	r8, r2
   1c124:	mov	r4, r0
   1c126:	ldr	r5, [r4, #0]
   1c128:	cbnz	r5, 1c140 <rb_insert@@Base+0x28>
   1c12a:	mov	r0, r6
   1c12c:	strd	r3, r5, [r6]
   1c130:	str	r5, [r6, #8]
   1c132:	mov	r1, r7
   1c134:	str	r6, [r4, #0]
   1c136:	bl	183ca <rb_insert_color@@Base>
   1c13a:	mov	r0, r5
   1c13c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c140:	mov	r1, r6
   1c142:	mov	r0, r5
   1c144:	blx	r8
   1c146:	cmp	r0, #0
   1c148:	bge.n	1c152 <rb_insert@@Base+0x3a>
   1c14a:	ldr	r4, [r4, #0]
   1c14c:	adds	r4, #8
   1c14e:	mov	r3, r5
   1c150:	b.n	1c126 <rb_insert@@Base+0xe>
   1c152:	beq.n	1c15a <rb_insert@@Base+0x42>
   1c154:	ldr	r4, [r4, #0]
   1c156:	adds	r4, #4
   1c158:	b.n	1c14e <rb_insert@@Base+0x36>
   1c15a:	mvn.w	r0, #16
   1c15e:	b.n	1c13c <rb_insert@@Base+0x24>

0001c160 <rb_search@@Base>:
   1c160:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c164:	movs	r5, #0
   1c166:	ldr	r4, [r0, #0]
   1c168:	mov	r8, r1
   1c16a:	mov	r7, r2
   1c16c:	mov	r6, r3
   1c16e:	mov	r0, r5
   1c170:	cbnz	r4, 1c186 <rb_search@@Base+0x26>
   1c172:	cbz	r6, 1c180 <rb_search@@Base+0x20>
   1c174:	cbz	r0, 1c17e <rb_search@@Base+0x1e>
   1c176:	cmp	r5, #0
   1c178:	ble.n	1c17e <rb_search@@Base+0x1e>
   1c17a:	bl	18706 <rb_next@@Base>
   1c17e:	str	r0, [r6, #0]
   1c180:	mov	r0, r4
   1c182:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c186:	mov	r1, r8
   1c188:	mov	r0, r4
   1c18a:	blx	r7
   1c18c:	subs	r5, r0, #0
   1c18e:	bge.n	1c198 <rb_search@@Base+0x38>
   1c190:	ldr	r3, [r4, #8]
   1c192:	mov	r0, r4
   1c194:	mov	r4, r3
   1c196:	b.n	1c170 <rb_search@@Base+0x10>
   1c198:	beq.n	1c180 <rb_search@@Base+0x20>
   1c19a:	ldr	r3, [r4, #4]
   1c19c:	b.n	1c192 <rb_search@@Base+0x32>

0001c19e <rb_free_nodes@@Base>:
   1c19e:	push	{r4, r5, r6, lr}
   1c1a0:	mov	r5, r0
   1c1a2:	mov	r6, r1
   1c1a4:	mov	r0, r5
   1c1a6:	bl	186e6 <rb_first@@Base>
   1c1aa:	mov	r4, r0
   1c1ac:	cbnz	r0, 1c1b0 <rb_free_nodes@@Base+0x12>
   1c1ae:	pop	{r4, r5, r6, pc}
   1c1b0:	mov	r1, r5
   1c1b2:	bl	18470 <rb_erase@@Base>
   1c1b6:	mov	r0, r4
   1c1b8:	blx	r6
   1c1ba:	b.n	1c1a4 <rb_free_nodes@@Base+0x6>
   1c1bc:	movs	r3, #25
   1c1be:	mla	r1, r3, r1, r0
   1c1c2:	ldr.w	r0, [r1, #214]	; 0xd6
   1c1c6:	ldr.w	r3, [r1, #218]	; 0xda
   1c1ca:	add	r0, r3
   1c1cc:	bx	lr
   1c1ce:	add.w	r2, r2, r2, lsl #5
   1c1d2:	movs	r3, #17
   1c1d4:	adds	r2, #101	; 0x65
   1c1d6:	b.w	1bbd0 <write_extent_buffer@@Base>
   1c1da:	movs	r3, #25
   1c1dc:	muls	r2, r3
   1c1de:	movs	r3, #17
   1c1e0:	adds	r2, #101	; 0x65
   1c1e2:	b.w	1bbd0 <write_extent_buffer@@Base>
   1c1e6:	movs	r3, #25
   1c1e8:	muls	r2, r3
   1c1ea:	movs	r3, #17
   1c1ec:	adds	r2, #101	; 0x65
   1c1ee:	b.w	1bbba <read_extent_buffer@@Base>
   1c1f2:	add.w	r2, r2, r2, lsl #5
   1c1f6:	movs	r3, #17
   1c1f8:	adds	r2, #101	; 0x65
   1c1fa:	b.w	1bbba <read_extent_buffer@@Base>
   1c1fe:	ldr	r2, [pc, #64]	; (1c240 <rb_free_nodes@@Base+0xa2>)
   1c200:	movs	r1, #16
   1c202:	ldr	r3, [pc, #64]	; (1c244 <rb_free_nodes@@Base+0xa6>)
   1c204:	push	{r4, lr}
   1c206:	add	r2, pc
   1c208:	sub	sp, #72	; 0x48
   1c20a:	add	r4, sp, #4
   1c20c:	ldr	r3, [r2, r3]
   1c20e:	mov	r0, r4
   1c210:	ldr	r3, [r3, #0]
   1c212:	str	r3, [sp, #68]	; 0x44
   1c214:	mov.w	r3, #0
   1c218:	blx	8e98 <backtrace@plt>
   1c21c:	movs	r2, #2
   1c21e:	mov	r1, r0
   1c220:	mov	r0, r4
   1c222:	blx	9214 <backtrace_symbols_fd@plt>
   1c226:	ldr	r2, [pc, #32]	; (1c248 <rb_free_nodes@@Base+0xaa>)
   1c228:	ldr	r3, [pc, #24]	; (1c244 <rb_free_nodes@@Base+0xa6>)
   1c22a:	add	r2, pc
   1c22c:	ldr	r3, [r2, r3]
   1c22e:	ldr	r2, [r3, #0]
   1c230:	ldr	r3, [sp, #68]	; 0x44
   1c232:	eors	r2, r3
   1c234:	beq.n	1c23a <rb_free_nodes@@Base+0x9c>
   1c236:	blx	8c90 <__stack_chk_fail@plt>
   1c23a:	add	sp, #72	; 0x48
   1c23c:	pop	{r4, pc}
   1c23e:	nop
   1c240:	adds.w	r0, r2, r4
   1c244:	lsls	r0, r1, #10
   1c246:	movs	r0, r0
   1c248:			; <UNDEFINED> instruction: 0xeaee0004
   1c24c:	cbz	r0, 1c25e <rb_free_nodes@@Base+0xc0>
   1c24e:	cmn.w	r0, #4096	; 0x1000
   1c252:	bhi.n	1c25c <rb_free_nodes@@Base+0xbe>
   1c254:	ldr	r0, [r0, #84]	; 0x54
   1c256:	ubfx	r0, r0, #2, #1
   1c25a:	bx	lr
   1c25c:	movs	r0, #0
   1c25e:	bx	lr
   1c260:	ldr.w	r3, [r1, #192]	; 0xc0
   1c264:	cbnz	r3, 1c26c <rb_free_nodes@@Base+0xce>
   1c266:	ldr	r0, [r0, #0]
   1c268:	subs	r0, #101	; 0x65
   1c26a:	bx	lr
   1c26c:	subs	r3, #1
   1c26e:	movs	r2, #25
   1c270:	mla	r1, r2, r3, r1
   1c274:	ldr.w	r0, [r1, #214]	; 0xd6
   1c278:	bx	lr
   1c27a:	push	{r0, r1, r2, r3, r4, lr}
   1c27c:	ldr	r4, [pc, #36]	; (1c2a4 <rb_free_nodes@@Base+0x106>)
   1c27e:	ldr	r5, [pc, #40]	; (1c2a8 <rb_free_nodes@@Base+0x10a>)
   1c280:	add	r4, pc
   1c282:	ldr	r4, [r4, r5]
   1c284:	strd	r2, r1, [sp]
   1c288:	movs	r1, #1
   1c28a:	strd	r0, r3, [sp, #8]
   1c28e:	ldr	r2, [pc, #28]	; (1c2ac <rb_free_nodes@@Base+0x10e>)
   1c290:	ldr	r3, [pc, #28]	; (1c2b0 <rb_free_nodes@@Base+0x112>)
   1c292:	add	r2, pc
   1c294:	ldr	r0, [r4, #0]
   1c296:	add	r3, pc
   1c298:	blx	9040 <__fprintf_chk@plt+0x4>
   1c29c:	bl	1c1fe <rb_free_nodes@@Base+0x60>
   1c2a0:	blx	91c0 <abort@plt>
   1c2a4:	eors.w	r0, r8, r4
   1c2a8:	lsls	r4, r3, #10
   1c2aa:	movs	r0, r0
   1c2ac:	movs	r0, #204	; 0xcc
   1c2ae:	movs	r2, r0
   1c2b0:	ldr	r0, [r5, r1]
   1c2b2:	movs	r2, r0
   1c2b4:	push	{r3, lr}
   1c2b6:	cbz	r3, 1c2bc <rb_free_nodes@@Base+0x11e>
   1c2b8:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1c2bc:	pop	{r3, pc}
   1c2be:	push	{r4, r5, lr}
   1c2c0:	sub	sp, #20
   1c2c2:	ldr	r4, [pc, #40]	; (1c2ec <rb_free_nodes@@Base+0x14e>)
   1c2c4:	ldr	r5, [pc, #40]	; (1c2f0 <rb_free_nodes@@Base+0x152>)
   1c2c6:	add	r4, pc
   1c2c8:	ldr	r4, [r4, r5]
   1c2ca:	strd	r2, r1, [sp]
   1c2ce:	movs	r1, #1
   1c2d0:	strd	r0, r3, [sp, #8]
   1c2d4:	ldr	r2, [pc, #28]	; (1c2f4 <rb_free_nodes@@Base+0x156>)
   1c2d6:	ldr	r3, [pc, #32]	; (1c2f8 <rb_free_nodes@@Base+0x15a>)
   1c2d8:	ldr	r0, [r4, #0]
   1c2da:	add	r2, pc
   1c2dc:	add	r3, pc
   1c2de:	blx	9040 <__fprintf_chk@plt+0x4>
   1c2e2:	add	sp, #20
   1c2e4:	ldmia.w	sp!, {r4, r5, lr}
   1c2e8:	b.n	1c1fe <rb_free_nodes@@Base+0x60>
   1c2ea:	nop
   1c2ec:	orrs.w	r0, r2, r4
   1c2f0:	lsls	r4, r3, #10
   1c2f2:	movs	r0, r0
   1c2f4:	adds	r2, #83	; 0x53
   1c2f6:	movs	r2, r0
   1c2f8:	ldr	r2, [r4, r0]
   1c2fa:	movs	r2, r0
   1c2fc:	cbz	r3, 1c302 <rb_free_nodes@@Base+0x164>
   1c2fe:	movs	r3, #1
   1c300:	b.n	1c2be <rb_free_nodes@@Base+0x120>
   1c302:	bx	lr
   1c304:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c308:	mov	r8, r3
   1c30a:	ldrd	r6, r3, [sp, #56]	; 0x38
   1c30e:	mov	r7, r0
   1c310:	mov	fp, r1
   1c312:	ldr	r0, [pc, #204]	; (1c3e0 <rb_free_nodes@@Base+0x242>)
   1c314:	ldr	r1, [pc, #204]	; (1c3e4 <rb_free_nodes@@Base+0x246>)
   1c316:	ldr.w	r4, [r2, r3, lsl #2]
   1c31a:	add	r0, pc
   1c31c:	add	r1, pc
   1c31e:	mov.w	r2, #1624	; 0x658
   1c322:	clz	r3, r4
   1c326:	str	r1, [sp, #4]
   1c328:	ldrd	sl, r9, [sp, #48]	; 0x30
   1c32c:	lsrs	r3, r3, #5
   1c32e:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1c332:	ldr.w	r5, [r4, #192]	; 0xc0
   1c336:	ldr	r1, [sp, #4]
   1c338:	cmp	r5, r6
   1c33a:	bge.n	1c34a <rb_free_nodes@@Base+0x1ac>
   1c33c:	ldr	r0, [pc, #168]	; (1c3e8 <rb_free_nodes@@Base+0x24a>)
   1c33e:	movs	r3, #1
   1c340:	movw	r2, #1628	; 0x65c
   1c344:	add	r0, pc
   1c346:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1c34a:	ldr.w	r3, [fp]
   1c34e:	ldr.w	r2, [r3, #384]	; 0x180
   1c352:	ldr	r3, [pc, #136]	; (1c3dc <rb_free_nodes@@Base+0x23e>)
   1c354:	subs	r2, #101	; 0x65
   1c356:	umull	r2, r3, r2, r3
   1c35a:	cmp.w	r5, r3, lsr #3
   1c35e:	bne.n	1c36c <rb_free_nodes@@Base+0x1ce>
   1c360:	ldr	r0, [pc, #136]	; (1c3ec <rb_free_nodes@@Base+0x24e>)
   1c362:	movs	r3, #1
   1c364:	movw	r2, #1630	; 0x65e
   1c368:	add	r0, pc
   1c36a:	b.n	1c346 <rb_free_nodes@@Base+0x1a8>
   1c36c:	cmp	r5, r6
   1c36e:	add.w	r1, r6, r6, lsl #5
   1c372:	add.w	fp, r1, #101	; 0x65
   1c376:	ble.n	1c388 <rb_free_nodes@@Base+0x1ea>
   1c378:	subs	r3, r5, r6
   1c37a:	adds	r1, #134	; 0x86
   1c37c:	mov	r2, fp
   1c37e:	mov	r0, r4
   1c380:	add.w	r3, r3, r3, lsl #5
   1c384:	bl	1bc2c <memmove_extent_buffer@@Base>
   1c388:	mov	r2, r6
   1c38a:	add.w	r6, r4, #96	; 0x60
   1c38e:	add	r6, fp
   1c390:	mov	r1, r8
   1c392:	mov	r0, r4
   1c394:	adds	r5, #1
   1c396:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1c39a:	str.w	sl, [r6, #17]
   1c39e:	str.w	r9, [r6, #21]
   1c3a2:	ldrd	r2, r3, [r7]
   1c3a6:	ldr	r1, [pc, #72]	; (1c3f0 <rb_free_nodes@@Base+0x252>)
   1c3a8:	orrs	r3, r2
   1c3aa:	ldr	r0, [pc, #72]	; (1c3f4 <rb_free_nodes@@Base+0x256>)
   1c3ac:	add	r1, pc
   1c3ae:	mov.w	r2, #1640	; 0x668
   1c3b2:	ite	eq
   1c3b4:	moveq	r3, #1
   1c3b6:	movne	r3, #0
   1c3b8:	add	r0, pc
   1c3ba:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c3be:	ldrd	r2, r3, [r7]
   1c3c2:	mov	r0, r4
   1c3c4:	str.w	r2, [r6, #25]
   1c3c8:	str.w	r3, [r6, #29]
   1c3cc:	str.w	r5, [r4, #192]	; 0xc0
   1c3d0:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c3d4:	movs	r0, #0
   1c3d6:	add	sp, #12
   1c3d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3dc:	strh	r1, [r4, #30]
   1c3de:	subs	r6, #15
   1c3e0:	ldrsb	r4, [r5, r7]
   1c3e2:	movs	r2, r0
   1c3e4:	ldrsh	r0, [r6, r3]
   1c3e6:	movs	r2, r0
   1c3e8:	ldr	r6, [r5, #100]	; 0x64
   1c3ea:	movs	r2, r0
   1c3ec:	ldr	r2, [r1, #100]	; 0x64
   1c3ee:	movs	r2, r0
   1c3f0:	ldrsh	r0, [r4, r1]
   1c3f2:	movs	r2, r0
   1c3f4:	ldrsb	r2, [r4, r5]
   1c3f6:	movs	r2, r0
   1c3f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c3fc:	mov	r6, r0
   1c3fe:	mov	r4, r2
   1c400:	ldr.w	r0, [r3, #176]	; 0xb0
   1c404:	mov	r7, r1
   1c406:	mov	r5, r3
   1c408:	ldr.w	r1, [r3, #180]	; 0xb4
   1c40c:	sub	sp, #20
   1c40e:	ldrd	r2, r3, [r6]
   1c412:	cmp	r1, r3
   1c414:	ldr	r3, [pc, #196]	; (1c4dc <rb_free_nodes@@Base+0x33e>)
   1c416:	it	eq
   1c418:	cmpeq	r0, r2
   1c41a:	ldr	r0, [pc, #196]	; (1c4e0 <rb_free_nodes@@Base+0x342>)
   1c41c:	add	r3, pc
   1c41e:	movw	r2, #1494	; 0x5d6
   1c422:	add.w	r1, r3, #11
   1c426:	add	r0, pc
   1c428:	ite	ne
   1c42a:	movne	r3, #1
   1c42c:	moveq	r3, #0
   1c42e:	str	r1, [sp, #12]
   1c430:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c434:	ldr.w	r3, [r4, #180]	; 0xb4
   1c438:	ldrd	r8, r9, [r6]
   1c43c:	ldr.w	r2, [r4, #176]	; 0xb0
   1c440:	cmp	r3, r9
   1c442:	ldr	r0, [pc, #160]	; (1c4e4 <rb_free_nodes@@Base+0x346>)
   1c444:	it	eq
   1c446:	cmpeq	r2, r8
   1c448:	ldr	r1, [sp, #12]
   1c44a:	movw	r2, #1495	; 0x5d7
   1c44e:	add	r0, pc
   1c450:	ite	ne
   1c452:	movne	r3, #1
   1c454:	moveq	r3, #0
   1c456:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c45a:	ldr	r3, [r7, #0]
   1c45c:	ldr.w	r8, [r4, #192]	; 0xc0
   1c460:	ldr.w	r2, [r3, #384]	; 0x180
   1c464:	ldr	r3, [pc, #112]	; (1c4d8 <rb_free_nodes@@Base+0x33a>)
   1c466:	subs	r2, #101	; 0x65
   1c468:	umull	r2, r3, r2, r3
   1c46c:	rsb	r7, r8, r3, lsr #3
   1c470:	cmp	r7, #0
   1c472:	ble.n	1c4d4 <rb_free_nodes@@Base+0x336>
   1c474:	ldr.w	r6, [r5, #192]	; 0xc0
   1c478:	cmp	r6, #3
   1c47a:	ble.n	1c4d4 <rb_free_nodes@@Base+0x336>
   1c47c:	asrs	r3, r6, #1
   1c47e:	adds	r3, #1
   1c480:	cmp	r6, r3
   1c482:	ble.n	1c4d4 <rb_free_nodes@@Base+0x336>
   1c484:	cmp	r7, r3
   1c486:	mov.w	r2, #101	; 0x65
   1c48a:	mov	r0, r4
   1c48c:	it	ge
   1c48e:	movge	r7, r3
   1c490:	subs	r6, r6, r7
   1c492:	add.w	r9, r7, r7, lsl #5
   1c496:	add.w	r3, r8, r8, lsl #5
   1c49a:	add.w	r1, r9, r2
   1c49e:	add	r7, r8
   1c4a0:	bl	1bc2c <memmove_extent_buffer@@Base>
   1c4a4:	add.w	r3, r6, r6, lsl #5
   1c4a8:	adds	r3, #101	; 0x65
   1c4aa:	movs	r2, #101	; 0x65
   1c4ac:	mov	r1, r5
   1c4ae:	mov	r0, r4
   1c4b0:	str.w	r9, [sp]
   1c4b4:	bl	1bbe2 <copy_extent_buffer@@Base>
   1c4b8:	mov	r0, r5
   1c4ba:	str.w	r6, [r5, #192]	; 0xc0
   1c4be:	str.w	r7, [r4, #192]	; 0xc0
   1c4c2:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c4c6:	mov	r0, r4
   1c4c8:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c4cc:	movs	r0, #0
   1c4ce:	add	sp, #20
   1c4d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c4d4:	movs	r0, #1
   1c4d6:	b.n	1c4ce <rb_free_nodes@@Base+0x330>
   1c4d8:	strh	r1, [r4, #30]
   1c4da:	subs	r6, #15
   1c4dc:	ldrb	r0, [r6, r7]
   1c4de:	movs	r2, r0
   1c4e0:	ldrsb	r0, [r1, r4]
   1c4e2:	movs	r2, r0
   1c4e4:	ldrsb	r7, [r1, r4]
   1c4e6:	movs	r2, r0
   1c4e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4ec:	mov	r5, r2
   1c4ee:	ldr.w	r9, [r2, #192]	; 0xc0
   1c4f2:	mov	r4, r3
   1c4f4:	ldr.w	r2, [r1, #384]	; 0x180
   1c4f8:	mov	sl, r0
   1c4fa:	ldr.w	r6, [r3, #192]	; 0xc0
   1c4fe:	sub	sp, #20
   1c500:	ldr	r3, [pc, #236]	; (1c5f0 <rb_free_nodes@@Base+0x452>)
   1c502:	subs	r2, #101	; 0x65
   1c504:	ldr.w	r1, [r4, #180]	; 0xb4
   1c508:	ldr.w	r0, [r4, #176]	; 0xb0
   1c50c:	umull	r2, r3, r2, r3
   1c510:	ldr	r7, [sp, #56]	; 0x38
   1c512:	rsb	r8, r9, r3, lsr #3
   1c516:	ldrd	r2, r3, [sl]
   1c51a:	cmp	r1, r3
   1c51c:	ldr	r1, [pc, #212]	; (1c5f4 <rb_free_nodes@@Base+0x456>)
   1c51e:	it	eq
   1c520:	cmpeq	r0, r2
   1c522:	ldr	r0, [pc, #212]	; (1c5f8 <rb_free_nodes@@Base+0x45a>)
   1c524:	add	r1, pc
   1c526:	movw	r2, #1430	; 0x596
   1c52a:	ite	ne
   1c52c:	movne	r3, #1
   1c52e:	moveq	r3, #0
   1c530:	adds	r1, #30
   1c532:	add	r0, pc
   1c534:	str	r1, [sp, #12]
   1c536:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c53a:	ldrd	r2, r3, [sl]
   1c53e:	ldr.w	ip, [r5, #180]	; 0xb4
   1c542:	ldr.w	fp, [r5, #176]	; 0xb0
   1c546:	cmp	ip, r3
   1c548:	ldr	r0, [pc, #176]	; (1c5fc <rb_free_nodes@@Base+0x45e>)
   1c54a:	it	eq
   1c54c:	cmpeq	fp, r2
   1c54e:	ldr	r1, [sp, #12]
   1c550:	add	r0, pc
   1c552:	movw	r2, #1431	; 0x597
   1c556:	ite	ne
   1c558:	movne	r3, #1
   1c55a:	moveq	r3, #0
   1c55c:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c560:	cbnz	r7, 1c57c <rb_free_nodes@@Base+0x3de>
   1c562:	cmp	r6, #8
   1c564:	bgt.n	1c56a <rb_free_nodes@@Base+0x3cc>
   1c566:	movs	r7, #1
   1c568:	b.n	1c5e6 <rb_free_nodes@@Base+0x448>
   1c56a:	cmp.w	r8, #0
   1c56e:	ble.n	1c566 <rb_free_nodes@@Base+0x3c8>
   1c570:	sub.w	r3, r6, #8
   1c574:	cmp	r8, r3
   1c576:	it	ge
   1c578:	movge	r8, r3
   1c57a:	b.n	1c59e <rb_free_nodes@@Base+0x400>
   1c57c:	cmp.w	r8, #0
   1c580:	ble.n	1c5e6 <rb_free_nodes@@Base+0x448>
   1c582:	cmp	r8, r6
   1c584:	it	ge
   1c586:	movge	r8, r6
   1c588:	cmp	r6, r8
   1c58a:	ble.n	1c59e <rb_free_nodes@@Base+0x400>
   1c58c:	sub.w	r3, r6, r8
   1c590:	cmp	r3, #7
   1c592:	bgt.n	1c59e <rb_free_nodes@@Base+0x400>
   1c594:	cmp.w	r8, #8
   1c598:	ble.n	1c5e6 <rb_free_nodes@@Base+0x448>
   1c59a:	sub.w	r8, r8, #8
   1c59e:	add.w	r2, r9, r9, lsl #5
   1c5a2:	movs	r3, #101	; 0x65
   1c5a4:	add.w	sl, r8, r8, lsl #5
   1c5a8:	add	r2, r3
   1c5aa:	mov	r1, r4
   1c5ac:	mov	r0, r5
   1c5ae:	str.w	sl, [sp]
   1c5b2:	sub.w	r7, r6, r8
   1c5b6:	bl	1bbe2 <copy_extent_buffer@@Base>
   1c5ba:	cmp	r6, r8
   1c5bc:	ble.n	1c5ce <rb_free_nodes@@Base+0x430>
   1c5be:	add.w	r3, r7, r7, lsl #5
   1c5c2:	add.w	r2, sl, #101	; 0x65
   1c5c6:	movs	r1, #101	; 0x65
   1c5c8:	mov	r0, r4
   1c5ca:	bl	1bc2c <memmove_extent_buffer@@Base>
   1c5ce:	str.w	r7, [r4, #192]	; 0xc0
   1c5d2:	mov	r0, r4
   1c5d4:	add	r8, r9
   1c5d6:	str.w	r8, [r5, #192]	; 0xc0
   1c5da:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c5de:	mov	r0, r5
   1c5e0:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c5e4:	movs	r7, #0
   1c5e6:	mov	r0, r7
   1c5e8:	add	sp, #20
   1c5ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5ee:	nop
   1c5f0:	strh	r1, [r4, #30]
   1c5f2:	subs	r6, #15
   1c5f4:	ldrb	r0, [r5, r3]
   1c5f6:	movs	r2, r0
   1c5f8:	strb	r4, [r7, r7]
   1c5fa:	movs	r2, r0
   1c5fc:	ldrsb	r5, [r1, r0]
   1c5fe:	movs	r2, r0
   1c600:	push	{r3, r4, r5, r6, r7, lr}
   1c602:	mov	r6, r0
   1c604:	mov	r4, r1
   1c606:	mov	r5, r2
   1c608:	cbz	r2, 1c644 <rb_free_nodes@@Base+0x4a6>
   1c60a:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1c60e:	ldr.w	r3, [r6, #192]	; 0xc0
   1c612:	mov.w	ip, #25
   1c616:	ldr	r1, [pc, #48]	; (1c648 <rb_free_nodes@@Base+0x4aa>)
   1c618:	add	r1, pc
   1c61a:	adds	r1, #45	; 0x2d
   1c61c:	mul.w	r7, ip, r2
   1c620:	adds	r2, r4, r2
   1c622:	cmp	r2, r3
   1c624:	it	ge
   1c626:	movge	r2, r3
   1c628:	subs	r2, #1
   1c62a:	mla	r3, ip, r2, r6
   1c62e:	ldr.w	r2, [r3, #214]	; 0xd6
   1c632:	subs	r2, r7, r2
   1c634:	adds	r5, r2, r0
   1c636:	ldr	r0, [pc, #20]	; (1c64c <rb_free_nodes@@Base+0x4ae>)
   1c638:	mov.w	r2, #1752	; 0x6d8
   1c63c:	lsrs	r3, r5, #31
   1c63e:	add	r0, pc
   1c640:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c644:	mov	r0, r5
   1c646:	pop	{r3, r4, r5, r6, r7, pc}
   1c648:	ldrh	r4, [r6, r7]
   1c64a:	movs	r2, r0
   1c64c:	strb	r6, [r1, r5]
   1c64e:	movs	r2, r0
   1c650:	push	{r4, lr}
   1c652:	mov	r4, r1
   1c654:	ldr	r1, [pc, #76]	; (1c6a4 <rb_free_nodes@@Base+0x506>)
   1c656:	sub	sp, #24
   1c658:	ldr	r3, [pc, #76]	; (1c6a8 <rb_free_nodes@@Base+0x50a>)
   1c65a:	add	r1, pc
   1c65c:	ldr	r3, [r1, r3]
   1c65e:	mov	r1, sp
   1c660:	ldr	r3, [r3, #0]
   1c662:	str	r3, [sp, #20]
   1c664:	mov.w	r3, #0
   1c668:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1c66c:	ldr.w	r3, [sp, #13]
   1c670:	ldr.w	r2, [sp, #9]
   1c674:	str.w	r3, [r4, #13]
   1c678:	ldrb.w	r3, [sp, #8]
   1c67c:	str.w	r2, [r4, #9]
   1c680:	ldr	r2, [pc, #40]	; (1c6ac <rb_free_nodes@@Base+0x50e>)
   1c682:	strb	r3, [r4, #8]
   1c684:	ldr	r3, [sp, #0]
   1c686:	add	r2, pc
   1c688:	str	r3, [r4, #0]
   1c68a:	ldr	r3, [sp, #4]
   1c68c:	str	r3, [r4, #4]
   1c68e:	ldr	r3, [pc, #24]	; (1c6a8 <rb_free_nodes@@Base+0x50a>)
   1c690:	ldr	r3, [r2, r3]
   1c692:	ldr	r2, [r3, #0]
   1c694:	ldr	r3, [sp, #20]
   1c696:	eors	r2, r3
   1c698:	beq.n	1c69e <rb_free_nodes@@Base+0x500>
   1c69a:	blx	8c90 <__stack_chk_fail@plt>
   1c69e:	add	sp, #24
   1c6a0:	pop	{r4, pc}
   1c6a2:	nop
   1c6a4:	b.n	1c424 <rb_free_nodes@@Base+0x286>
   1c6a6:	movs	r4, r0
   1c6a8:	lsls	r0, r1, #10
   1c6aa:	movs	r0, r0
   1c6ac:	b.n	1c3d4 <rb_free_nodes@@Base+0x236>
   1c6ae:	movs	r4, r0

0001c6b0 <btrfs_super_csum_size@@Base>:
   1c6b0:	ldrh.w	r2, [r0, #196]	; 0xc4
   1c6b4:	ldr	r3, [pc, #8]	; (1c6c0 <btrfs_super_csum_size@@Base+0x10>)
   1c6b6:	add	r3, pc
   1c6b8:	add.w	r3, r3, r2, lsl #4
   1c6bc:	ldrh	r0, [r3, #62]	; 0x3e
   1c6be:	bx	lr
   1c6c0:	ldrh	r6, [r2, r5]
   1c6c2:	movs	r2, r0

0001c6c4 <btrfs_super_csum_name@@Base>:
   1c6c4:	ldr	r3, [pc, #8]	; (1c6d0 <btrfs_super_csum_name@@Base+0xc>)
   1c6c6:	add	r3, pc
   1c6c8:	add.w	r0, r3, r0, lsl #4
   1c6cc:	adds	r0, #64	; 0x40
   1c6ce:	bx	lr
   1c6d0:	ldrh	r6, [r0, r5]
   1c6d2:	movs	r2, r0

0001c6d4 <btrfs_super_num_csums@@Base>:
   1c6d4:	movs	r0, #4
   1c6d6:	bx	lr

0001c6d8 <btrfs_csum_type_size@@Base>:
   1c6d8:	ldr	r3, [pc, #8]	; (1c6e4 <btrfs_csum_type_size@@Base+0xc>)
   1c6da:	add	r3, pc
   1c6dc:	add.w	r0, r3, r0, lsl #4
   1c6e0:	ldrh	r0, [r0, #62]	; 0x3e
   1c6e2:	bx	lr
   1c6e4:	ldrh	r2, [r6, r4]
   1c6e6:	movs	r2, r0

0001c6e8 <btrfs_init_path@@Base>:
   1c6e8:	movs	r2, #68	; 0x44
   1c6ea:	movs	r1, #0
   1c6ec:	b.w	8f94 <memset@plt>

0001c6f0 <btrfs_alloc_path@@Base>:
   1c6f0:	movs	r1, #68	; 0x44
   1c6f2:	movs	r0, #1
   1c6f4:	b.w	8ab4 <calloc@plt>

0001c6f8 <btrfs_release_path@@Base>:
   1c6f8:	push	{r4, r5, r6, lr}
   1c6fa:	subs	r5, r0, #4
   1c6fc:	add.w	r6, r0, #28
   1c700:	mov	r4, r0
   1c702:	ldr.w	r0, [r5, #4]!
   1c706:	cbz	r0, 1c70c <btrfs_release_path@@Base+0x14>
   1c708:	bl	1b4c0 <free_extent_buffer@@Base>
   1c70c:	cmp	r5, r6
   1c70e:	bne.n	1c702 <btrfs_release_path@@Base+0xa>
   1c710:	mov	r0, r4
   1c712:	movs	r2, #68	; 0x44
   1c714:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c718:	movs	r1, #0
   1c71a:	b.w	8f94 <memset@plt>

0001c71e <btrfs_free_path@@Base>:
   1c71e:	push	{r4, lr}
   1c720:	mov	r4, r0
   1c722:	cbz	r0, 1c732 <btrfs_free_path@@Base+0x14>
   1c724:	bl	1c6f8 <btrfs_release_path@@Base>
   1c728:	mov	r0, r4
   1c72a:	ldmia.w	sp!, {r4, lr}
   1c72e:	b.w	8b80 <free@plt>
   1c732:	pop	{r4, pc}

0001c734 <add_root_to_dirty_list@@Base>:
   1c734:	ldr.w	r3, [r0, #492]	; 0x1ec
   1c738:	cbz	r3, 1c760 <add_root_to_dirty_list@@Base+0x2c>
   1c73a:	ldr.w	r3, [r0, #520]	; 0x208
   1c73e:	add.w	r2, r0, #520	; 0x208
   1c742:	cmp	r2, r3
   1c744:	bne.n	1c760 <add_root_to_dirty_list@@Base+0x2c>
   1c746:	ldr.w	r3, [r0, #464]	; 0x1d0
   1c74a:	ldr.w	r1, [r3, #336]	; 0x150
   1c74e:	str	r2, [r1, #4]
   1c750:	str.w	r1, [r0, #520]	; 0x208
   1c754:	add.w	r1, r3, #336	; 0x150
   1c758:	str.w	r1, [r0, #524]	; 0x20c
   1c75c:	str.w	r2, [r3, #336]	; 0x150
   1c760:	bx	lr
   1c762:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c766:	sub	sp, #76	; 0x4c
   1c768:	mov	r7, r3
   1c76a:	ldr	r3, [pc, #468]	; (1c940 <add_root_to_dirty_list@@Base+0x20c>)
   1c76c:	str	r2, [sp, #36]	; 0x24
   1c76e:	mov	r5, r1
   1c770:	ldr	r2, [pc, #464]	; (1c944 <add_root_to_dirty_list@@Base+0x210>)
   1c772:	mov	fp, r0
   1c774:	ldr	r1, [pc, #464]	; (1c948 <add_root_to_dirty_list@@Base+0x214>)
   1c776:	add.w	r8, sp, #48	; 0x30
   1c77a:	add	r2, pc
   1c77c:	ldr	r0, [pc, #460]	; (1c94c <add_root_to_dirty_list@@Base+0x218>)
   1c77e:	add	r1, pc
   1c780:	ldr	r3, [r2, r3]
   1c782:	adds	r1, #126	; 0x7e
   1c784:	add	r0, pc
   1c786:	movw	r2, #1553	; 0x611
   1c78a:	ldr	r3, [r3, #0]
   1c78c:	str	r3, [sp, #68]	; 0x44
   1c78e:	mov.w	r3, #0
   1c792:	ldr	r3, [sp, #36]	; 0x24
   1c794:	str	r1, [sp, #44]	; 0x2c
   1c796:	add.w	r3, r3, r7, lsl #2
   1c79a:	str	r3, [sp, #40]	; 0x28
   1c79c:	ldr	r3, [sp, #36]	; 0x24
   1c79e:	ldr.w	r3, [r3, r7, lsl #2]
   1c7a2:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1c7a6:	ldr	r3, [sp, #40]	; 0x28
   1c7a8:	ldr	r0, [pc, #420]	; (1c950 <add_root_to_dirty_list@@Base+0x21c>)
   1c7aa:	movw	r2, #1554	; 0x612
   1c7ae:	ldr	r1, [sp, #44]	; 0x2c
   1c7b0:	ldr.w	sl, [r3, #-4]
   1c7b4:	add	r0, pc
   1c7b6:	ldr	r3, [r5, #0]
   1c7b8:	subs.w	r3, r3, sl
   1c7bc:	it	ne
   1c7be:	movne	r3, #1
   1c7c0:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1c7c4:	cmp	r7, #1
   1c7c6:	mov.w	r2, #0
   1c7ca:	mov	r1, r8
   1c7cc:	mov	r0, sl
   1c7ce:	bne.n	1c824 <add_root_to_dirty_list@@Base+0xf0>
   1c7d0:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1c7d4:	movs	r2, #0
   1c7d6:	movs	r3, #0
   1c7d8:	strd	r2, r3, [sp, #24]
   1c7dc:	mov	r0, fp
   1c7de:	ldr	r3, [r5, #0]
   1c7e0:	ldr.w	r1, [r5, #464]	; 0x1d0
   1c7e4:	ldrd	r2, r3, [r3, #40]	; 0x28
   1c7e8:	strd	r8, r7, [sp, #8]
   1c7ec:	strd	r2, r3, [sp, #16]
   1c7f0:	ldr.w	r2, [r5, #447]	; 0x1bf
   1c7f4:	ldr.w	r3, [r5, #451]	; 0x1c3
   1c7f8:	strd	r2, r3, [sp]
   1c7fc:	ldr.w	r2, [r1, #384]	; 0x180
   1c800:	mov	r1, r5
   1c802:	bl	27304 <btrfs_alloc_free_block@@Base>
   1c806:	cmn.w	r0, #4096	; 0x1000
   1c80a:	mov	r4, r0
   1c80c:	bls.n	1c82a <add_root_to_dirty_list@@Base+0xf6>
   1c80e:	ldr	r2, [pc, #324]	; (1c954 <add_root_to_dirty_list@@Base+0x220>)
   1c810:	ldr	r3, [pc, #300]	; (1c940 <add_root_to_dirty_list@@Base+0x20c>)
   1c812:	add	r2, pc
   1c814:	ldr	r3, [r2, r3]
   1c816:	ldr	r2, [r3, #0]
   1c818:	ldr	r3, [sp, #68]	; 0x44
   1c81a:	eors	r2, r3
   1c81c:	beq.w	1c938 <add_root_to_dirty_list@@Base+0x204>
   1c820:	blx	8c90 <__stack_chk_fail@plt>
   1c824:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1c828:	b.n	1c7d4 <add_root_to_dirty_list@@Base+0xa0>
   1c82a:	movs	r2, #0
   1c82c:	movs	r3, #101	; 0x65
   1c82e:	mov	r1, r2
   1c830:	movs	r6, #0
   1c832:	bl	1bc42 <memset_extent_buffer@@Base>
   1c836:	movs	r3, #1
   1c838:	strb.w	r3, [r4, #192]	; 0xc0
   1c83c:	ldr	r3, [r4, #40]	; 0x28
   1c83e:	strb.w	r6, [r4, #193]	; 0xc1
   1c842:	strb.w	r6, [r4, #194]	; 0xc2
   1c846:	str.w	r3, [r4, #144]	; 0x90
   1c84a:	ldr	r3, [r4, #44]	; 0x2c
   1c84c:	strb.w	r6, [r4, #195]	; 0xc3
   1c850:	strb.w	r7, [r4, #196]	; 0xc4
   1c854:	str.w	r3, [r4, #148]	; 0x94
   1c858:	ldrd	r2, r3, [fp, #8]
   1c85c:	str.w	r2, [r4, #176]	; 0xb0
   1c860:	str.w	r3, [r4, #180]	; 0xb4
   1c864:	ldr.w	r2, [r4, #152]	; 0x98
   1c868:	ldr.w	r3, [r4, #156]	; 0x9c
   1c86c:	bic.w	r3, r3, #4278190080	; 0xff000000
   1c870:	str.w	r2, [r4, #152]	; 0x98
   1c874:	orr.w	r3, r3, #16777216	; 0x1000000
   1c878:	str.w	r3, [r4, #156]	; 0x9c
   1c87c:	ldr.w	r2, [r5, #447]	; 0x1bf
   1c880:	ldr.w	r3, [r5, #451]	; 0x1c3
   1c884:	str.w	r2, [r4, #184]	; 0xb8
   1c888:	str.w	r3, [r4, #188]	; 0xbc
   1c88c:	ldr.w	r0, [r5, #464]	; 0x1d0
   1c890:	ldr.w	r2, [r5, #200]	; 0xc8
   1c894:	ldr.w	r3, [r5, #204]	; 0xcc
   1c898:	ldr.w	r1, [r0, #384]	; 0x180
   1c89c:	adds	r2, r2, r1
   1c89e:	str.w	r2, [r5, #200]	; 0xc8
   1c8a2:	adc.w	r3, r3, #0
   1c8a6:	str.w	r3, [r5, #204]	; 0xcc
   1c8aa:	ldr.w	r1, [r0, #352]	; 0x160
   1c8ae:	movs	r3, #16
   1c8b0:	movs	r2, #32
   1c8b2:	mov	r0, r4
   1c8b4:	add	r1, r3
   1c8b6:	bl	1bbd0 <write_extent_buffer@@Base>
   1c8ba:	movs	r3, #16
   1c8bc:	ldr.w	r1, [r5, #464]	; 0x1d0
   1c8c0:	movs	r2, #64	; 0x40
   1c8c2:	mov	r0, r4
   1c8c4:	bl	1bbd0 <write_extent_buffer@@Base>
   1c8c8:	mov	r1, r8
   1c8ca:	mov	r2, r6
   1c8cc:	mov	r0, r4
   1c8ce:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1c8d2:	ldrd	r2, r3, [sl, #40]	; 0x28
   1c8d6:	ldr	r1, [pc, #128]	; (1c958 <add_root_to_dirty_list@@Base+0x224>)
   1c8d8:	ldr	r0, [pc, #128]	; (1c95c <add_root_to_dirty_list@@Base+0x228>)
   1c8da:	str.w	r2, [r4, #214]	; 0xd6
   1c8de:	add	r1, pc
   1c8e0:	str.w	r3, [r4, #218]	; 0xda
   1c8e4:	adds	r1, #126	; 0x7e
   1c8e6:	ldrd	r2, r3, [fp, #8]
   1c8ea:	add	r0, pc
   1c8ec:	ldr.w	r9, [sl, #180]	; 0xb4
   1c8f0:	ldr.w	r8, [sl, #176]	; 0xb0
   1c8f4:	cmp	r3, r9
   1c8f6:	it	eq
   1c8f8:	cmpeq	r2, r8
   1c8fa:	movw	r2, #1589	; 0x635
   1c8fe:	ite	ne
   1c900:	movne	r3, #1
   1c902:	moveq	r3, r6
   1c904:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c908:	mov	r0, r4
   1c90a:	str.w	r8, [r4, #222]	; 0xde
   1c90e:	str.w	r9, [r4, #226]	; 0xe2
   1c912:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1c916:	ldr	r0, [r5, #0]
   1c918:	str	r4, [r5, #0]
   1c91a:	bl	1b4c0 <free_extent_buffer@@Base>
   1c91e:	mov	r0, r5
   1c920:	bl	1c734 <add_root_to_dirty_list@@Base>
   1c924:	ldr	r3, [r4, #80]	; 0x50
   1c926:	mov	r0, r6
   1c928:	adds	r3, #1
   1c92a:	str	r3, [r4, #80]	; 0x50
   1c92c:	ldr	r3, [sp, #36]	; 0x24
   1c92e:	str.w	r4, [r3, r7, lsl #2]
   1c932:	ldr	r3, [sp, #40]	; 0x28
   1c934:	str	r6, [r3, #32]
   1c936:	b.n	1c80e <add_root_to_dirty_list@@Base+0xda>
   1c938:	add	sp, #76	; 0x4c
   1c93a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c93e:	nop
   1c940:	lsls	r0, r1, #10
   1c942:	movs	r0, r0
   1c944:	b.n	1c484 <rb_free_nodes@@Base+0x2e6>
   1c946:	movs	r4, r0
   1c948:	ldrh	r6, [r1, r2]
   1c94a:	movs	r2, r0
   1c94c:	strh	r3, [r0, r6]
   1c94e:	movs	r2, r0
   1c950:	strh	r5, [r4, r7]
   1c952:	movs	r2, r0
   1c954:	b.n	1c364 <rb_free_nodes@@Base+0x1c6>
   1c956:	movs	r4, r0
   1c958:	ldr	r6, [r5, r4]
   1c95a:	movs	r2, r0
   1c95c:	strh	r2, [r2, r3]
   1c95e:	movs	r2, r0

0001c960 <btrfs_copy_root@@Base>:
   1c960:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c964:	sub	sp, #68	; 0x44
   1c966:	mov	r4, r2
   1c968:	ldr	r2, [pc, #460]	; (1cb38 <btrfs_copy_root@@Base+0x1d8>)
   1c96a:	str	r3, [sp, #36]	; 0x24
   1c96c:	mov	r8, r0
   1c96e:	ldr	r3, [pc, #460]	; (1cb3c <btrfs_copy_root@@Base+0x1dc>)
   1c970:	add	r2, pc
   1c972:	mov.w	r0, #544	; 0x220
   1c976:	ldrd	sl, fp, [sp, #104]	; 0x68
   1c97a:	mov	r9, r1
   1c97c:	ldr	r3, [r2, r3]
   1c97e:	ldr	r3, [r3, #0]
   1c980:	str	r3, [sp, #60]	; 0x3c
   1c982:	mov.w	r3, #0
   1c986:	blx	8e40 <malloc@plt+0x4>
   1c98a:	mov	r5, r0
   1c98c:	cmp	r0, #0
   1c98e:	beq.w	1cb2a <btrfs_copy_root@@Base+0x1ca>
   1c992:	mov.w	r2, #544	; 0x220
   1c996:	mov	r1, r9
   1c998:	blx	8bdc <memcpy@plt+0x4>
   1c99c:	ldr.w	r3, [r9, #488]	; 0x1e8
   1c9a0:	str.w	sl, [r5, #447]	; 0x1bf
   1c9a4:	str.w	fp, [r5, #451]	; 0x1c3
   1c9a8:	cbz	r3, 1c9c4 <btrfs_copy_root@@Base+0x64>
   1c9aa:	ldr.w	r3, [r9, #464]	; 0x1d0
   1c9ae:	ldr.w	r3, [r3, #304]	; 0x130
   1c9b2:	ldrd	r0, r1, [r3, #8]
   1c9b6:	ldrd	r2, r3, [r8, #8]
   1c9ba:	cmp	r1, r3
   1c9bc:	itet	eq
   1c9be:	cmpeq	r0, r2
   1c9c0:	movne	r3, #1
   1c9c2:	moveq	r3, #0
   1c9c4:	ldr	r1, [pc, #376]	; (1cb40 <btrfs_copy_root@@Base+0x1e0>)
   1c9c6:	movs	r2, #142	; 0x8e
   1c9c8:	ldr	r0, [pc, #376]	; (1cb44 <btrfs_copy_root@@Base+0x1e4>)
   1c9ca:	add	r1, pc
   1c9cc:	add	r1, r2
   1c9ce:	add	r0, pc
   1c9d0:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c9d4:	ldr.w	r3, [r9, #488]	; 0x1e8
   1c9d8:	cbz	r3, 1c9ec <btrfs_copy_root@@Base+0x8c>
   1c9da:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   1c9de:	ldrd	r6, r7, [r8, #8]
   1c9e2:	cmp	r7, r3
   1c9e4:	itet	eq
   1c9e6:	cmpeq	r6, r2
   1c9e8:	movne	r3, #1
   1c9ea:	moveq	r3, #0
   1c9ec:	ldr	r1, [pc, #344]	; (1cb48 <btrfs_copy_root@@Base+0x1e8>)
   1c9ee:	movs	r2, #144	; 0x90
   1c9f0:	ldr	r0, [pc, #344]	; (1cb4c <btrfs_copy_root@@Base+0x1ec>)
   1c9f2:	add	r7, sp, #40	; 0x28
   1c9f4:	add	r1, pc
   1c9f6:	adds	r1, #142	; 0x8e
   1c9f8:	add	r0, pc
   1c9fa:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1c9fe:	ldrb.w	r6, [r4, #196]	; 0xc4
   1ca02:	cbnz	r6, 1ca54 <btrfs_copy_root@@Base+0xf4>
   1ca04:	mov	r2, r6
   1ca06:	mov	r1, r7
   1ca08:	mov	r0, r4
   1ca0a:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1ca0e:	movs	r2, #0
   1ca10:	movs	r3, #0
   1ca12:	strd	r2, r3, [sp, #24]
   1ca16:	mov	r1, r5
   1ca18:	ldrd	r2, r3, [r4, #40]	; 0x28
   1ca1c:	mov	r0, r8
   1ca1e:	strd	r7, r6, [sp, #8]
   1ca22:	strd	sl, fp, [sp]
   1ca26:	strd	r2, r3, [sp, #16]
   1ca2a:	ldr	r2, [r4, #76]	; 0x4c
   1ca2c:	bl	27304 <btrfs_alloc_free_block@@Base>
   1ca30:	cmn.w	r0, #4096	; 0x1000
   1ca34:	mov	r6, r0
   1ca36:	bls.n	1ca60 <btrfs_copy_root@@Base+0x100>
   1ca38:	mov	r0, r5
   1ca3a:	mov	r4, r6
   1ca3c:	blx	8b84 <free@plt+0x4>
   1ca40:	ldr	r2, [pc, #268]	; (1cb50 <btrfs_copy_root@@Base+0x1f0>)
   1ca42:	ldr	r3, [pc, #248]	; (1cb3c <btrfs_copy_root@@Base+0x1dc>)
   1ca44:	add	r2, pc
   1ca46:	ldr	r3, [r2, r3]
   1ca48:	ldr	r2, [r3, #0]
   1ca4a:	ldr	r3, [sp, #60]	; 0x3c
   1ca4c:	eors	r2, r3
   1ca4e:	beq.n	1cb30 <btrfs_copy_root@@Base+0x1d0>
   1ca50:	blx	8c90 <__stack_chk_fail@plt>
   1ca54:	movs	r2, #0
   1ca56:	mov	r1, r7
   1ca58:	mov	r0, r4
   1ca5a:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1ca5e:	b.n	1ca0e <btrfs_copy_root@@Base+0xae>
   1ca60:	ldr	r3, [r0, #76]	; 0x4c
   1ca62:	mov	r1, r4
   1ca64:	str	r3, [sp, #0]
   1ca66:	movs	r3, #0
   1ca68:	mov	r2, r3
   1ca6a:	bl	1bbe2 <copy_extent_buffer@@Base>
   1ca6e:	ldr	r3, [r6, #40]	; 0x28
   1ca70:	mov.w	r1, #4294967295	; 0xffffffff
   1ca74:	cmp	fp, r1
   1ca76:	mvn.w	r0, #7
   1ca7a:	it	eq
   1ca7c:	cmpeq	sl, r0
   1ca7e:	str.w	r3, [r6, #144]	; 0x90
   1ca82:	mov	r0, r6
   1ca84:	ldr	r3, [r6, #44]	; 0x2c
   1ca86:	str.w	r3, [r6, #148]	; 0x94
   1ca8a:	ldrd	r2, r3, [r8, #8]
   1ca8e:	itt	ne
   1ca90:	strne.w	sl, [r6, #184]	; 0xb8
   1ca94:	strne.w	fp, [r6, #188]	; 0xbc
   1ca98:	str.w	r2, [r6, #176]	; 0xb0
   1ca9c:	str.w	r3, [r6, #180]	; 0xb4
   1caa0:	ldr.w	r2, [r6, #156]	; 0x9c
   1caa4:	ldr.w	r3, [r6, #152]	; 0x98
   1caa8:	bic.w	r2, r2, #4278190080	; 0xff000000
   1caac:	bic.w	r3, r3, #3
   1cab0:	orr.w	r2, r2, #16777216	; 0x1000000
   1cab4:	str.w	r3, [r6, #152]	; 0x98
   1cab8:	it	eq
   1caba:	orreq.w	r3, r3, #2
   1cabe:	str.w	r2, [r6, #156]	; 0x9c
   1cac2:	mov.w	r2, #32
   1cac6:	it	eq
   1cac8:	streq.w	r3, [r6, #152]	; 0x98
   1cacc:	ldr.w	r3, [r9, #464]	; 0x1d0
   1cad0:	ldr.w	r1, [r3, #352]	; 0x160
   1cad4:	movs	r3, #16
   1cad6:	add	r1, r3
   1cad8:	bl	1bbd0 <write_extent_buffer@@Base>
   1cadc:	ldrd	r2, r3, [r8, #8]
   1cae0:	ldr.w	r1, [r4, #180]	; 0xb4
   1cae4:	ldr.w	r0, [r4, #176]	; 0xb0
   1cae8:	cmp	r3, r1
   1caea:	ldr	r1, [pc, #104]	; (1cb54 <btrfs_copy_root@@Base+0x1f4>)
   1caec:	it	eq
   1caee:	cmpeq	r2, r0
   1caf0:	ldr	r0, [pc, #100]	; (1cb58 <btrfs_copy_root@@Base+0x1f8>)
   1caf2:	add	r1, pc
   1caf4:	mov.w	r2, #173	; 0xad
   1caf8:	ite	cc
   1cafa:	movcc	r3, #1
   1cafc:	movcs	r3, #0
   1cafe:	adds	r1, #142	; 0x8e
   1cb00:	add	r0, pc
   1cb02:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1cb06:	movs	r3, #0
   1cb08:	mov	r2, r6
   1cb0a:	mov	r1, r5
   1cb0c:	mov	r0, r8
   1cb0e:	bl	251c0 <btrfs_inc_ref@@Base>
   1cb12:	mov	r4, r0
   1cb14:	mov	r0, r5
   1cb16:	blx	8b84 <free@plt+0x4>
   1cb1a:	cmp	r4, #0
   1cb1c:	bne.n	1ca40 <btrfs_copy_root@@Base+0xe0>
   1cb1e:	mov	r0, r6
   1cb20:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1cb24:	ldr	r3, [sp, #36]	; 0x24
   1cb26:	str	r6, [r3, #0]
   1cb28:	b.n	1ca40 <btrfs_copy_root@@Base+0xe0>
   1cb2a:	mvn.w	r4, #11
   1cb2e:	b.n	1ca40 <btrfs_copy_root@@Base+0xe0>
   1cb30:	mov	r0, r4
   1cb32:	add	sp, #68	; 0x44
   1cb34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb38:	b.n	1d28c <btrfs_comp_cpu_keys@@Base+0x80>
   1cb3a:	movs	r4, r0
   1cb3c:	lsls	r0, r1, #10
   1cb3e:	movs	r0, r0
   1cb40:	ldr	r2, [r0, r1]
   1cb42:	movs	r2, r0
   1cb44:	strh	r2, [r1, r0]
   1cb46:	movs	r2, r0
   1cb48:	ldr	r0, [r3, r0]
   1cb4a:	movs	r2, r0
   1cb4c:	strh	r0, [r6, r0]
   1cb4e:	movs	r2, r0
   1cb50:	b.n	1d0fc <__btrfs_cow_block@@Base+0x5a0>
   1cb52:	movs	r4, r0
   1cb54:	ldrsb	r2, [r3, r4]
   1cb56:	movs	r2, r0
   1cb58:	str	r3, [r0, r6]
   1cb5a:	movs	r2, r0

0001cb5c <__btrfs_cow_block@@Base>:
   1cb5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb60:	sub	sp, #100	; 0x64
   1cb62:	mov	r5, r2
   1cb64:	ldr.w	r2, [pc, #1368]	; 1d0c0 <__btrfs_cow_block@@Base+0x564>
   1cb68:	str	r3, [sp, #48]	; 0x30
   1cb6a:	mov	sl, r0
   1cb6c:	ldrd	fp, r3, [sp, #136]	; 0x88
   1cb70:	add	r2, pc
   1cb72:	mov	r4, r1
   1cb74:	str	r3, [sp, #52]	; 0x34
   1cb76:	ldr.w	r3, [pc, #1356]	; 1d0c4 <__btrfs_cow_block@@Base+0x568>
   1cb7a:	ldr	r3, [r2, r3]
   1cb7c:	ldr	r3, [r3, #0]
   1cb7e:	str	r3, [sp, #92]	; 0x5c
   1cb80:	mov.w	r3, #0
   1cb84:	ldr.w	r3, [r1, #488]	; 0x1e8
   1cb88:	cbz	r3, 1cba4 <__btrfs_cow_block@@Base+0x48>
   1cb8a:	ldr.w	r3, [r1, #464]	; 0x1d0
   1cb8e:	ldr.w	r3, [r3, #304]	; 0x130
   1cb92:	ldrd	r0, r1, [r3, #8]
   1cb96:	ldrd	r2, r3, [sl, #8]
   1cb9a:	cmp	r1, r3
   1cb9c:	itet	eq
   1cb9e:	cmpeq	r0, r2
   1cba0:	movne	r3, #1
   1cba2:	moveq	r3, #0
   1cba4:	ldr.w	r1, [pc, #1312]	; 1d0c8 <__btrfs_cow_block@@Base+0x56c>
   1cba8:	movw	r2, #311	; 0x137
   1cbac:	ldr.w	r0, [pc, #1308]	; 1d0cc <__btrfs_cow_block@@Base+0x570>
   1cbb0:	add	r1, pc
   1cbb2:	adds	r1, #158	; 0x9e
   1cbb4:	add	r0, pc
   1cbb6:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1cbba:	ldr.w	r3, [r4, #488]	; 0x1e8
   1cbbe:	cbz	r3, 1cbd2 <__btrfs_cow_block@@Base+0x76>
   1cbc0:	ldrd	r8, r9, [sl, #8]
   1cbc4:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   1cbc8:	cmp	r9, r7
   1cbca:	itet	eq
   1cbcc:	cmpeq	r8, r6
   1cbce:	movne	r3, #1
   1cbd0:	moveq	r3, #0
   1cbd2:	ldr.w	r1, [pc, #1276]	; 1d0d0 <__btrfs_cow_block@@Base+0x574>
   1cbd6:	movw	r2, #313	; 0x139
   1cbda:	ldr.w	r0, [pc, #1272]	; 1d0d4 <__btrfs_cow_block@@Base+0x578>
   1cbde:	add	r6, sp, #72	; 0x48
   1cbe0:	add	r1, pc
   1cbe2:	adds	r1, #158	; 0x9e
   1cbe4:	add	r0, pc
   1cbe6:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1cbea:	ldrb.w	r7, [r5, #196]	; 0xc4
   1cbee:	cbnz	r7, 1cc46 <__btrfs_cow_block@@Base+0xea>
   1cbf0:	mov	r2, r7
   1cbf2:	mov	r1, r6
   1cbf4:	mov	r0, r5
   1cbf6:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1cbfa:	ldrd	r2, r3, [sp, #152]	; 0x98
   1cbfe:	mov	r1, r4
   1cc00:	strd	r6, r7, [sp, #8]
   1cc04:	mov	r0, sl
   1cc06:	strd	r2, r3, [sp, #24]
   1cc0a:	ldrd	r2, r3, [sp, #144]	; 0x90
   1cc0e:	strd	r2, r3, [sp, #16]
   1cc12:	ldr.w	r2, [r4, #447]	; 0x1bf
   1cc16:	ldr.w	r3, [r4, #451]	; 0x1c3
   1cc1a:	strd	r2, r3, [sp]
   1cc1e:	ldr	r2, [r5, #76]	; 0x4c
   1cc20:	bl	27304 <btrfs_alloc_free_block@@Base>
   1cc24:	cmn.w	r0, #4096	; 0x1000
   1cc28:	mov	r6, r0
   1cc2a:	bls.n	1cc52 <__btrfs_cow_block@@Base+0xf6>
   1cc2c:	ldr.w	r2, [pc, #1192]	; 1d0d8 <__btrfs_cow_block@@Base+0x57c>
   1cc30:	ldr.w	r3, [pc, #1168]	; 1d0c4 <__btrfs_cow_block@@Base+0x568>
   1cc34:	add	r2, pc
   1cc36:	ldr	r3, [r2, r3]
   1cc38:	ldr	r2, [r3, #0]
   1cc3a:	ldr	r3, [sp, #92]	; 0x5c
   1cc3c:	eors	r2, r3
   1cc3e:	beq.w	1d0ba <__btrfs_cow_block@@Base+0x55e>
   1cc42:	blx	8c90 <__stack_chk_fail@plt>
   1cc46:	movs	r2, #0
   1cc48:	mov	r1, r6
   1cc4a:	mov	r0, r5
   1cc4c:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1cc50:	b.n	1cbfa <__btrfs_cow_block@@Base+0x9e>
   1cc52:	ldr	r3, [r0, #76]	; 0x4c
   1cc54:	mov	r1, r5
   1cc56:	str	r3, [sp, #0]
   1cc58:	movs	r3, #0
   1cc5a:	mov	r2, r3
   1cc5c:	bl	1bbe2 <copy_extent_buffer@@Base>
   1cc60:	ldr	r3, [r6, #40]	; 0x28
   1cc62:	ldr.w	ip, [r6, #152]	; 0x98
   1cc66:	mov.w	r1, #4294967295	; 0xffffffff
   1cc6a:	mvn.w	r0, #7
   1cc6e:	str.w	r3, [r6, #144]	; 0x90
   1cc72:	bic.w	ip, ip, #3
   1cc76:	ldr	r3, [r6, #44]	; 0x2c
   1cc78:	str.w	r3, [r6, #148]	; 0x94
   1cc7c:	ldrd	r2, r3, [sl, #8]
   1cc80:	str.w	ip, [r6, #152]	; 0x98
   1cc84:	str.w	r3, [r6, #180]	; 0xb4
   1cc88:	ldr.w	r3, [r6, #156]	; 0x9c
   1cc8c:	str.w	r2, [r6, #176]	; 0xb0
   1cc90:	bic.w	r3, r3, #4278190080	; 0xff000000
   1cc94:	orr.w	r3, r3, #16777216	; 0x1000000
   1cc98:	str.w	r3, [r6, #156]	; 0x9c
   1cc9c:	ldr.w	r3, [r4, #451]	; 0x1c3
   1cca0:	ldr.w	r2, [r4, #447]	; 0x1bf
   1cca4:	cmp	r3, r1
   1cca6:	iteet	eq
   1cca8:	cmpeq	r2, r0
   1ccaa:	strne.w	r3, [r6, #188]	; 0xbc
   1ccae:	strne.w	r2, [r6, #184]	; 0xb8
   1ccb2:	orreq.w	ip, ip, #2
   1ccb6:	it	eq
   1ccb8:	streq.w	ip, [r6, #152]	; 0x98
   1ccbc:	movs	r2, #32
   1ccbe:	ldr.w	r3, [r4, #464]	; 0x1d0
   1ccc2:	mov	r0, r6
   1ccc4:	ldr.w	r1, [r3, #352]	; 0x160
   1ccc8:	movs	r3, #16
   1ccca:	add	r1, r3
   1cccc:	bl	1bbd0 <write_extent_buffer@@Base>
   1ccd0:	ldr	r3, [r5, #84]	; 0x54
   1ccd2:	lsls	r3, r3, #21
   1ccd4:	bmi.w	1ce12 <__btrfs_cow_block@@Base+0x2b6>
   1ccd8:	ldrd	r2, r3, [sl, #8]
   1ccdc:	ldr.w	r1, [r5, #180]	; 0xb4
   1cce0:	ldr.w	r0, [r5, #176]	; 0xb0
   1cce4:	cmp	r3, r1
   1cce6:	it	eq
   1cce8:	cmpeq	r2, r0
   1ccea:	ite	cc
   1ccec:	movcc	r3, #1
   1ccee:	movcs	r3, #0
   1ccf0:	ldr	r1, [pc, #1000]	; (1d0dc <__btrfs_cow_block@@Base+0x580>)
   1ccf2:	mov.w	r2, #342	; 0x156
   1ccf6:	ldr	r0, [pc, #1000]	; (1d0e0 <__btrfs_cow_block@@Base+0x584>)
   1ccf8:	add	r1, pc
   1ccfa:	adds	r1, #158	; 0x9e
   1ccfc:	add	r0, pc
   1ccfe:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1cd02:	ldr.w	r3, [r4, #488]	; 0x1e8
   1cd06:	cmp	r3, #0
   1cd08:	beq.w	1ce16 <__btrfs_cow_block@@Base+0x2ba>
   1cd0c:	ldr	r3, [r4, #0]
   1cd0e:	cmp	r5, r3
   1cd10:	beq.w	1ce16 <__btrfs_cow_block@@Base+0x2ba>
   1cd14:	ldr	r3, [r4, #4]
   1cd16:	cmp	r5, r3
   1cd18:	beq.n	1ce16 <__btrfs_cow_block@@Base+0x2ba>
   1cd1a:	ldr.w	r3, [r5, #180]	; 0xb4
   1cd1e:	ldr.w	r1, [r4, #212]	; 0xd4
   1cd22:	ldr.w	r2, [r5, #176]	; 0xb0
   1cd26:	ldr.w	r0, [r4, #208]	; 0xd0
   1cd2a:	cmp	r1, r3
   1cd2c:	it	eq
   1cd2e:	cmpeq	r0, r2
   1cd30:	bcs.n	1cd40 <__btrfs_cow_block@@Base+0x1e4>
   1cd32:	ldr.w	r1, [r5, #152]	; 0x98
   1cd36:	movs	r3, #0
   1cd38:	and.w	r2, r1, #2
   1cd3c:	orrs	r3, r2
   1cd3e:	beq.n	1ce16 <__btrfs_cow_block@@Base+0x2ba>
   1cd40:	ldrb.w	r2, [r5, #196]	; 0xc4
   1cd44:	add	r3, sp, #64	; 0x40
   1cd46:	ldr.w	r1, [sl]
   1cd4a:	mov	r0, sl
   1cd4c:	str	r3, [sp, #16]
   1cd4e:	add	r3, sp, #56	; 0x38
   1cd50:	str	r3, [sp, #12]
   1cd52:	movs	r3, #1
   1cd54:	str	r3, [sp, #8]
   1cd56:	movs	r3, #0
   1cd58:	strd	r2, r3, [sp]
   1cd5c:	ldrd	r2, r3, [r5, #40]	; 0x28
   1cd60:	bl	24e2c <btrfs_lookup_extent_info@@Base>
   1cd64:	ldr	r1, [pc, #892]	; (1d0e4 <__btrfs_cow_block@@Base+0x588>)
   1cd66:	movs	r2, #239	; 0xef
   1cd68:	add	r1, pc
   1cd6a:	adds	r1, #176	; 0xb0
   1cd6c:	str	r1, [sp, #40]	; 0x28
   1cd6e:	mov	r3, r0
   1cd70:	ldr	r0, [pc, #884]	; (1d0e8 <__btrfs_cow_block@@Base+0x58c>)
   1cd72:	add	r0, pc
   1cd74:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cd78:	ldrd	r2, r3, [sp, #56]	; 0x38
   1cd7c:	ldr	r0, [pc, #876]	; (1d0ec <__btrfs_cow_block@@Base+0x590>)
   1cd7e:	orrs	r3, r2
   1cd80:	ldr	r1, [sp, #40]	; 0x28
   1cd82:	add	r0, pc
   1cd84:	mov.w	r2, #240	; 0xf0
   1cd88:	ite	eq
   1cd8a:	moveq	r3, #1
   1cd8c:	movne	r3, #0
   1cd8e:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cd92:	ldr.w	r3, [r5, #184]	; 0xb8
   1cd96:	ldr	r2, [sp, #64]	; 0x40
   1cd98:	str	r3, [sp, #40]	; 0x28
   1cd9a:	and.w	r8, r2, #256	; 0x100
   1cd9e:	ldr.w	r3, [r5, #188]	; 0xbc
   1cda2:	str	r3, [sp, #44]	; 0x2c
   1cda4:	movs	r3, #0
   1cda6:	mov	r9, r3
   1cda8:	orrs.w	r2, r8, r9
   1cdac:	bne.n	1cdc4 <__btrfs_cow_block@@Base+0x268>
   1cdae:	ldrd	r0, r1, [sp, #40]	; 0x28
   1cdb2:	mov.w	r3, #4294967295	; 0xffffffff
   1cdb6:	mvn.w	r2, #7
   1cdba:	cmp	r1, r3
   1cdbc:	itte	eq
   1cdbe:	cmpeq	r0, r2
   1cdc0:	moveq	r3, #1
   1cdc2:	movne	r3, r9
   1cdc4:	ldr	r1, [pc, #808]	; (1d0f0 <__btrfs_cow_block@@Base+0x594>)
   1cdc6:	movs	r2, #251	; 0xfb
   1cdc8:	ldr	r0, [pc, #808]	; (1d0f4 <__btrfs_cow_block@@Base+0x598>)
   1cdca:	add	r1, pc
   1cdcc:	adds	r1, #176	; 0xb0
   1cdce:	add	r0, pc
   1cdd0:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cdd4:	ldrd	r2, r3, [sp, #56]	; 0x38
   1cdd8:	cmp	r3, #0
   1cdda:	it	eq
   1cddc:	cmpeq	r2, #2
   1cdde:	bcc.w	1cfaa <__btrfs_cow_block@@Base+0x44e>
   1cde2:	ldrd	r0, r1, [sp, #40]	; 0x28
   1cde6:	ldr.w	r3, [r4, #451]	; 0x1c3
   1cdea:	ldr.w	r2, [r4, #447]	; 0x1bf
   1cdee:	cmp	r1, r3
   1cdf0:	mov.w	r1, #4294967295	; 0xffffffff
   1cdf4:	it	eq
   1cdf6:	cmpeq	r0, r2
   1cdf8:	mvn.w	r0, #7
   1cdfc:	beq.n	1ce4e <__btrfs_cow_block@@Base+0x2f2>
   1cdfe:	cmp	r3, r1
   1ce00:	it	eq
   1ce02:	cmpeq	r2, r0
   1ce04:	bne.w	1cfa6 <__btrfs_cow_block@@Base+0x44a>
   1ce08:	orrs.w	r3, r8, r9
   1ce0c:	bne.w	1cf88 <__btrfs_cow_block@@Base+0x42c>
   1ce10:	b.n	1ce56 <__btrfs_cow_block@@Base+0x2fa>
   1ce12:	movs	r3, #0
   1ce14:	b.n	1ccf0 <__btrfs_cow_block@@Base+0x194>
   1ce16:	movs	r2, #1
   1ce18:	movs	r3, #0
   1ce1a:	strd	r2, r3, [sp, #56]	; 0x38
   1ce1e:	mov.w	r1, #4294967295	; 0xffffffff
   1ce22:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ce26:	mvn.w	r0, #7
   1ce2a:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ce2e:	cmp	r3, r1
   1ce30:	it	eq
   1ce32:	cmpeq	r2, r0
   1ce34:	beq.n	1ce3e <__btrfs_cow_block@@Base+0x2e2>
   1ce36:	ldr.w	r3, [r5, #156]	; 0x9c
   1ce3a:	lsrs	r3, r3, #24
   1ce3c:	bne.n	1ce4a <__btrfs_cow_block@@Base+0x2ee>
   1ce3e:	mov.w	r2, #256	; 0x100
   1ce42:	movs	r3, #0
   1ce44:	strd	r2, r3, [sp, #64]	; 0x40
   1ce48:	b.n	1cd92 <__btrfs_cow_block@@Base+0x236>
   1ce4a:	movs	r2, #0
   1ce4c:	b.n	1ce42 <__btrfs_cow_block@@Base+0x2e6>
   1ce4e:	orrs.w	r3, r8, r9
   1ce52:	bne.w	1cf7c <__btrfs_cow_block@@Base+0x420>
   1ce56:	movs	r3, #1
   1ce58:	mov	r2, r5
   1ce5a:	mov	r1, r4
   1ce5c:	mov	r0, sl
   1ce5e:	bl	251c0 <btrfs_inc_ref@@Base>
   1ce62:	ldr.w	r8, [pc, #660]	; 1d0f8 <__btrfs_cow_block@@Base+0x59c>
   1ce66:	ldr.w	r9, [pc, #660]	; 1d0fc <__btrfs_cow_block@@Base+0x5a0>
   1ce6a:	movw	r2, #259	; 0x103
   1ce6e:	add	r8, pc
   1ce70:	add.w	r8, r8, #176	; 0xb0
   1ce74:	add	r9, pc
   1ce76:	mov	r1, r8
   1ce78:	mov	r3, r0
   1ce7a:	mov	r0, r9
   1ce7c:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ce80:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ce84:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ce88:	mov.w	r1, #4294967295	; 0xffffffff
   1ce8c:	cmp	r3, r1
   1ce8e:	mvn.w	r0, #7
   1ce92:	it	eq
   1ce94:	cmpeq	r2, r0
   1ce96:	bne.n	1cecc <__btrfs_cow_block@@Base+0x370>
   1ce98:	movs	r3, #0
   1ce9a:	mov	r2, r5
   1ce9c:	mov	r1, r4
   1ce9e:	mov	r0, sl
   1cea0:	bl	251ce <btrfs_dec_ref@@Base>
   1cea4:	mov.w	r2, #264	; 0x108
   1cea8:	mov	r1, r8
   1ceaa:	mov	r3, r0
   1ceac:	mov	r0, r9
   1ceae:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ceb2:	movs	r3, #1
   1ceb4:	mov	r2, r6
   1ceb6:	mov	r1, r4
   1ceb8:	mov	r0, sl
   1ceba:	bl	251c0 <btrfs_inc_ref@@Base>
   1cebe:	mov.w	r2, #266	; 0x10a
   1cec2:	mov	r1, r8
   1cec4:	mov	r3, r0
   1cec6:	mov	r0, r9
   1cec8:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cecc:	mov.w	r2, #256	; 0x100
   1ced0:	movs	r3, #0
   1ced2:	strd	r2, r3, [sp, #8]
   1ced6:	mov	r0, sl
   1ced8:	ldrb.w	r3, [r5, #196]	; 0xc4
   1cedc:	str	r3, [sp, #0]
   1cede:	ldrd	r2, r3, [r5, #40]	; 0x28
   1cee2:	bl	24fdc <btrfs_set_block_flags@@Base>
   1cee6:	ldr	r1, [pc, #536]	; (1d100 <__btrfs_cow_block@@Base+0x5a4>)
   1cee8:	mov.w	r2, #282	; 0x11a
   1ceec:	add	r1, pc
   1ceee:	adds	r1, #176	; 0xb0
   1cef0:	mov	r3, r0
   1cef2:	ldr	r0, [pc, #528]	; (1d104 <__btrfs_cow_block@@Base+0x5a8>)
   1cef4:	add	r0, pc
   1cef6:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cefa:	ldr	r3, [r4, #0]
   1cefc:	uxtb.w	r8, r7
   1cf00:	mov.w	r9, #0
   1cf04:	cmp	r3, r5
   1cf06:	bne.w	1d016 <__btrfs_cow_block@@Base+0x4ba>
   1cf0a:	str	r6, [r4, #0]
   1cf0c:	movs	r2, #0
   1cf0e:	ldr	r3, [r6, #80]	; 0x50
   1cf10:	adds	r3, #1
   1cf12:	str	r3, [r6, #80]	; 0x50
   1cf14:	movs	r3, #0
   1cf16:	ldr.w	r0, [r4, #447]	; 0x1bf
   1cf1a:	ldr.w	r1, [r4, #451]	; 0x1c3
   1cf1e:	strd	r2, r3, [sp, #32]
   1cf22:	strd	r2, r3, [sp, #8]
   1cf26:	ldr	r3, [r5, #76]	; 0x4c
   1cf28:	strd	r0, r1, [sp, #16]
   1cf2c:	mov	r1, r4
   1cf2e:	mov	r0, sl
   1cf30:	strd	r8, r9, [sp, #24]
   1cf34:	str	r3, [sp, #0]
   1cf36:	movs	r3, #0
   1cf38:	str	r3, [sp, #4]
   1cf3a:	ldrd	r2, r3, [r5, #40]	; 0x28
   1cf3e:	bl	254ec <btrfs_free_extent@@Base>
   1cf42:	mov	r0, r5
   1cf44:	bl	1b4c0 <free_extent_buffer@@Base>
   1cf48:	mov	r0, r4
   1cf4a:	bl	1c734 <add_root_to_dirty_list@@Base>
   1cf4e:	ldr	r2, [r5, #68]	; 0x44
   1cf50:	add.w	r3, r5, #68	; 0x44
   1cf54:	cmp	r3, r2
   1cf56:	beq.n	1cf68 <__btrfs_cow_block@@Base+0x40c>
   1cf58:	ldr	r1, [r5, #72]	; 0x48
   1cf5a:	mov	r0, r5
   1cf5c:	str	r1, [r2, #4]
   1cf5e:	str	r2, [r1, #0]
   1cf60:	strd	r3, r3, [r5, #68]	; 0x44
   1cf64:	bl	1b4c0 <free_extent_buffer@@Base>
   1cf68:	mov	r0, r5
   1cf6a:	bl	1b4c0 <free_extent_buffer@@Base>
   1cf6e:	mov	r0, r6
   1cf70:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1cf74:	ldr	r3, [sp, #52]	; 0x34
   1cf76:	movs	r0, #0
   1cf78:	str	r6, [r3, #0]
   1cf7a:	b.n	1cc2c <__btrfs_cow_block@@Base+0xd0>
   1cf7c:	ldrd	r2, r3, [sp, #40]	; 0x28
   1cf80:	cmp	r3, r1
   1cf82:	it	eq
   1cf84:	cmpeq	r2, r0
   1cf86:	bne.n	1cfa6 <__btrfs_cow_block@@Base+0x44a>
   1cf88:	movs	r3, #1
   1cf8a:	mov	r2, r6
   1cf8c:	mov	r1, r4
   1cf8e:	mov	r0, sl
   1cf90:	bl	251c0 <btrfs_inc_ref@@Base>
   1cf94:	ldr	r1, [pc, #368]	; (1d108 <__btrfs_cow_block@@Base+0x5ac>)
   1cf96:	mov.w	r2, #276	; 0x114
   1cf9a:	add	r1, pc
   1cf9c:	adds	r1, #176	; 0xb0
   1cf9e:	mov	r3, r0
   1cfa0:	ldr	r0, [pc, #360]	; (1d10c <__btrfs_cow_block@@Base+0x5b0>)
   1cfa2:	add	r0, pc
   1cfa4:	b.n	1cef6 <__btrfs_cow_block@@Base+0x39a>
   1cfa6:	movs	r3, #0
   1cfa8:	b.n	1cf8a <__btrfs_cow_block@@Base+0x42e>
   1cfaa:	orrs.w	r3, r8, r9
   1cfae:	beq.n	1d00e <__btrfs_cow_block@@Base+0x4b2>
   1cfb0:	ldr.w	r3, [r4, #451]	; 0x1c3
   1cfb4:	mov.w	r1, #4294967295	; 0xffffffff
   1cfb8:	ldr.w	r2, [r4, #447]	; 0x1bf
   1cfbc:	mvn.w	r0, #7
   1cfc0:	cmp	r3, r1
   1cfc2:	mov	r1, r4
   1cfc4:	it	eq
   1cfc6:	cmpeq	r2, r0
   1cfc8:	mov	r2, r6
   1cfca:	mov	r0, sl
   1cfcc:	ldr.w	r9, [pc, #320]	; 1d110 <__btrfs_cow_block@@Base+0x5b4>
   1cfd0:	ite	eq
   1cfd2:	moveq	r3, #1
   1cfd4:	movne	r3, #0
   1cfd6:	bl	251c0 <btrfs_inc_ref@@Base>
   1cfda:	ldr.w	r8, [pc, #312]	; 1d114 <__btrfs_cow_block@@Base+0x5b8>
   1cfde:	add	r9, pc
   1cfe0:	movw	r2, #291	; 0x123
   1cfe4:	add.w	r9, r9, #176	; 0xb0
   1cfe8:	add	r8, pc
   1cfea:	mov	r1, r9
   1cfec:	mov	r3, r0
   1cfee:	mov	r0, r8
   1cff0:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1cff4:	movs	r3, #1
   1cff6:	mov	r2, r5
   1cff8:	mov	r1, r4
   1cffa:	mov	r0, sl
   1cffc:	bl	251ce <btrfs_dec_ref@@Base>
   1d000:	movw	r2, #293	; 0x125
   1d004:	mov	r1, r9
   1d006:	mov	r3, r0
   1d008:	mov	r0, r8
   1d00a:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1d00e:	mov	r0, r5
   1d010:	bl	21dac <clean_tree_block@@Base>
   1d014:	b.n	1cefa <__btrfs_cow_block@@Base+0x39e>
   1d016:	ldr	r3, [sp, #48]	; 0x30
   1d018:	add.w	fp, fp, fp, lsl #5
   1d01c:	ldrd	r1, r2, [r6, #40]	; 0x28
   1d020:	add	r3, fp
   1d022:	ldr	r7, [pc, #244]	; (1d118 <__btrfs_cow_block@@Base+0x5bc>)
   1d024:	add.w	fp, r3, #197	; 0xc5
   1d028:	ldr	r0, [pc, #240]	; (1d11c <__btrfs_cow_block@@Base+0x5c0>)
   1d02a:	str.w	r1, [r3, #214]	; 0xd6
   1d02e:	add	r7, pc
   1d030:	str.w	r2, [r3, #218]	; 0xda
   1d034:	adds	r7, #158	; 0x9e
   1d036:	ldrd	r2, r3, [sl, #8]
   1d03a:	add	r0, pc
   1d03c:	mov	r1, r7
   1d03e:	orrs	r3, r2
   1d040:	mov.w	r2, #358	; 0x166
   1d044:	ite	eq
   1d046:	moveq	r3, #1
   1d048:	movne	r3, #0
   1d04a:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1d04e:	ldrd	r2, r3, [sl, #8]
   1d052:	ldr	r0, [sp, #48]	; 0x30
   1d054:	str.w	r2, [fp, #25]
   1d058:	str.w	r3, [fp, #29]
   1d05c:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1d060:	ldr	r3, [sp, #48]	; 0x30
   1d062:	ldr.w	r0, [r3, #176]	; 0xb0
   1d066:	ldr.w	r1, [r3, #180]	; 0xb4
   1d06a:	ldrd	r2, r3, [sl, #8]
   1d06e:	cmp	r3, r1
   1d070:	mov	r1, r7
   1d072:	it	eq
   1d074:	cmpeq	r2, r0
   1d076:	ldr	r0, [pc, #168]	; (1d120 <__btrfs_cow_block@@Base+0x5c4>)
   1d078:	mov.w	r2, #362	; 0x16a
   1d07c:	ite	ne
   1d07e:	movne	r3, #1
   1d080:	moveq	r3, #0
   1d082:	add	r0, pc
   1d084:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1d088:	ldr.w	r0, [r4, #447]	; 0x1bf
   1d08c:	ldr.w	r1, [r4, #451]	; 0x1c3
   1d090:	movs	r2, #0
   1d092:	movs	r3, #0
   1d094:	strd	r2, r3, [sp, #32]
   1d098:	strd	r2, r3, [sp, #8]
   1d09c:	ldr	r3, [r5, #76]	; 0x4c
   1d09e:	strd	r0, r1, [sp, #16]
   1d0a2:	mov	r1, r4
   1d0a4:	mov	r0, sl
   1d0a6:	strd	r8, r9, [sp, #24]
   1d0aa:	str	r3, [sp, #0]
   1d0ac:	movs	r3, #0
   1d0ae:	str	r3, [sp, #4]
   1d0b0:	ldrd	r2, r3, [r5, #40]	; 0x28
   1d0b4:	bl	254ec <btrfs_free_extent@@Base>
   1d0b8:	b.n	1cf4e <__btrfs_cow_block@@Base+0x3f2>
   1d0ba:	add	sp, #100	; 0x64
   1d0bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0c0:	b.n	1d414 <btrfs_check_node@@Base+0x154>
   1d0c2:	movs	r4, r0
   1d0c4:	lsls	r0, r1, #10
   1d0c6:	movs	r0, r0
   1d0c8:	ldrsb	r4, [r3, r1]
   1d0ca:	movs	r2, r0
   1d0cc:	str	r4, [r4, r0]
   1d0ce:	movs	r2, r0
   1d0d0:	ldrsb	r4, [r5, r0]
   1d0d2:	movs	r2, r0
   1d0d4:	str	r4, [r0, r1]
   1d0d6:	movs	r2, r0
   1d0d8:	b.n	1d2a4 <btrfs_comp_cpu_keys@@Base+0x98>
   1d0da:	movs	r4, r0
   1d0dc:	strb	r4, [r2, r4]
   1d0de:	movs	r2, r0
   1d0e0:	ldr	r7, [pc, #388]	; (1d268 <btrfs_comp_cpu_keys@@Base+0x5c>)
   1d0e2:	movs	r2, r0
   1d0e4:	strb	r4, [r4, r2]
   1d0e6:	movs	r2, r0
   1d0e8:	cmp	r5, #208	; 0xd0
   1d0ea:	movs	r2, r0
   1d0ec:	str	r1, [r4, #24]
   1d0ee:	movs	r2, r0
   1d0f0:	strb	r2, [r0, r1]
   1d0f2:	movs	r2, r0
   1d0f4:	ldr	r6, [pc, #908]	; (1d484 <btrfs_bin_search@@Base+0x5c>)
   1d0f6:	movs	r2, r0
   1d0f8:	strh	r6, [r3, r6]
   1d0fa:	movs	r2, r0
   1d0fc:	cmp	r4, #206	; 0xce
   1d0fe:	movs	r2, r0
   1d100:	strh	r0, [r4, r4]
   1d102:	movs	r2, r0
   1d104:	cmp	r4, #78	; 0x4e
   1d106:	movs	r2, r0
   1d108:	strh	r2, [r6, r1]
   1d10a:	movs	r2, r0
   1d10c:	cmp	r3, #160	; 0xa0
   1d10e:	movs	r2, r0
   1d110:	strh	r6, [r5, r0]
   1d112:	movs	r2, r0
   1d114:	cmp	r3, #90	; 0x5a
   1d116:	movs	r2, r0
   1d118:	str	r6, [r3, r7]
   1d11a:	movs	r2, r0
   1d11c:	ldr	r2, [pc, #896]	; (1d4a0 <btrfs_bin_search@@Base+0x78>)
   1d11e:	movs	r2, r0
   1d120:	ldr	r4, [pc, #504]	; (1d31c <btrfs_check_node@@Base+0x5c>)
   1d122:	movs	r2, r0

0001d124 <btrfs_cow_block@@Base>:
   1d124:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d128:	mov	r4, r2
   1d12a:	ldr.w	r2, [r1, #464]	; 0x1d0
   1d12e:	mov	r6, r0
   1d130:	ldrd	r8, r9, [r0, #8]
   1d134:	mov	r5, r1
   1d136:	sub	sp, #24
   1d138:	mov	r7, r3
   1d13a:	ldrd	r0, r1, [r2, #232]	; 0xe8
   1d13e:	ldr	r3, [pc, #184]	; (1d1f8 <btrfs_cow_block@@Base+0xd4>)
   1d140:	cmp	r9, r1
   1d142:	ldr.w	sl, [sp, #60]	; 0x3c
   1d146:	it	eq
   1d148:	cmpeq	r8, r0
   1d14a:	add	r3, pc
   1d14c:	beq.n	1d17a <btrfs_cow_block@@Base+0x56>
   1d14e:	ldr	r2, [pc, #172]	; (1d1fc <btrfs_cow_block@@Base+0xd8>)
   1d150:	ldr	r3, [r3, r2]
   1d152:	ldr	r2, [pc, #172]	; (1d200 <btrfs_cow_block@@Base+0xdc>)
   1d154:	strd	r0, r1, [sp, #8]
   1d158:	movs	r1, #1
   1d15a:	add	r2, pc
   1d15c:	strd	r8, r9, [sp]
   1d160:	ldr	r0, [r3, #0]
   1d162:	blx	9040 <__fprintf_chk@plt+0x4>
   1d166:	ldr	r1, [pc, #156]	; (1d204 <btrfs_cow_block@@Base+0xe0>)
   1d168:	ldr	r0, [pc, #156]	; (1d208 <btrfs_cow_block@@Base+0xe4>)
   1d16a:	movs	r3, #1
   1d16c:	add	r1, pc
   1d16e:	movw	r2, #407	; 0x197
   1d172:	adds	r1, #195	; 0xc3
   1d174:	add	r0, pc
   1d176:	bl	1c2be <rb_free_nodes@@Base+0x120>
   1d17a:	ldrd	r2, r3, [r6, #8]
   1d17e:	ldr.w	r1, [r4, #180]	; 0xb4
   1d182:	ldr.w	r0, [r4, #176]	; 0xb0
   1d186:	cmp	r1, r3
   1d188:	it	eq
   1d18a:	cmpeq	r0, r2
   1d18c:	bne.n	1d1ce <btrfs_cow_block@@Base+0xaa>
   1d18e:	ldr.w	lr, [r4, #152]	; 0x98
   1d192:	mov.w	ip, #0
   1d196:	mov	r3, ip
   1d198:	and.w	r2, lr, #1
   1d19c:	orrs	r3, r2
   1d19e:	bne.n	1d1ce <btrfs_cow_block@@Base+0xaa>
   1d1a0:	ldr.w	r3, [r5, #451]	; 0x1c3
   1d1a4:	mov.w	r1, #4294967295	; 0xffffffff
   1d1a8:	ldr.w	r2, [r5, #447]	; 0x1bf
   1d1ac:	mvn.w	r0, #7
   1d1b0:	cmp	r3, r1
   1d1b2:	it	eq
   1d1b4:	cmpeq	r2, r0
   1d1b6:	beq.n	1d1c2 <btrfs_cow_block@@Base+0x9e>
   1d1b8:	and.w	r2, lr, #2
   1d1bc:	mov	r3, ip
   1d1be:	orrs	r3, r2
   1d1c0:	bne.n	1d1ce <btrfs_cow_block@@Base+0xaa>
   1d1c2:	movs	r0, #0
   1d1c4:	str.w	r4, [sl]
   1d1c8:	add	sp, #24
   1d1ca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d1ce:	movs	r2, #0
   1d1d0:	movs	r3, #0
   1d1d2:	strd	r2, r3, [sp, #16]
   1d1d6:	mov	r1, r5
   1d1d8:	ldrd	r3, r2, [r4, #40]	; 0x28
   1d1dc:	mov	r0, r6
   1d1de:	str.w	sl, [sp, #4]
   1d1e2:	and.w	r3, r3, #3221225472	; 0xc0000000
   1d1e6:	strd	r3, r2, [sp, #8]
   1d1ea:	mov	r2, r4
   1d1ec:	ldr	r3, [sp, #56]	; 0x38
   1d1ee:	str	r3, [sp, #0]
   1d1f0:	mov	r3, r7
   1d1f2:	bl	1cb5c <__btrfs_cow_block@@Base>
   1d1f6:	b.n	1d1c8 <btrfs_cow_block@@Base+0xa4>
   1d1f8:	blt.n	1d198 <btrfs_cow_block@@Base+0x74>
   1d1fa:	movs	r4, r0
   1d1fc:	lsls	r4, r3, #10
   1d1fe:	movs	r0, r0
   1d200:	ldr	r3, [pc, #864]	; (1d564 <reada_for_search@@Base+0x3c>)
   1d202:	movs	r2, r0
   1d204:	str	r0, [r4, r2]
   1d206:	movs	r2, r0
   1d208:	str	r6, [r7, #0]
   1d20a:	movs	r2, r0

0001d20c <btrfs_comp_cpu_keys@@Base>:
   1d20c:	push	{r4, r5, lr}
   1d20e:	ldr	r3, [r1, #4]
   1d210:	ldr	r5, [r0, #4]
   1d212:	ldr	r4, [r0, #0]
   1d214:	ldr	r2, [r1, #0]
   1d216:	cmp	r3, r5
   1d218:	it	eq
   1d21a:	cmpeq	r2, r4
   1d21c:	bcc.n	1d25e <btrfs_comp_cpu_keys@@Base+0x52>
   1d21e:	cmp	r5, r3
   1d220:	it	eq
   1d222:	cmpeq	r4, r2
   1d224:	bcc.n	1d258 <btrfs_comp_cpu_keys@@Base+0x4c>
   1d226:	ldrb	r2, [r0, #8]
   1d228:	ldrb	r3, [r1, #8]
   1d22a:	cmp	r2, r3
   1d22c:	bhi.n	1d25e <btrfs_comp_cpu_keys@@Base+0x52>
   1d22e:	bcc.n	1d258 <btrfs_comp_cpu_keys@@Base+0x4c>
   1d230:	ldr.w	r5, [r0, #13]
   1d234:	ldr.w	r3, [r1, #13]
   1d238:	ldr.w	r4, [r0, #9]
   1d23c:	ldr.w	r2, [r1, #9]
   1d240:	cmp	r3, r5
   1d242:	it	eq
   1d244:	cmpeq	r2, r4
   1d246:	bcc.n	1d25e <btrfs_comp_cpu_keys@@Base+0x52>
   1d248:	cmp	r5, r3
   1d24a:	it	eq
   1d24c:	cmpeq	r4, r2
   1d24e:	ite	cc
   1d250:	movcc.w	r0, #4294967295	; 0xffffffff
   1d254:	movcs	r0, #0
   1d256:	pop	{r4, r5, pc}
   1d258:	mov.w	r0, #4294967295	; 0xffffffff
   1d25c:	b.n	1d256 <btrfs_comp_cpu_keys@@Base+0x4a>
   1d25e:	movs	r0, #1
   1d260:	b.n	1d256 <btrfs_comp_cpu_keys@@Base+0x4a>
   1d262:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1d264:	ldr	r2, [pc, #76]	; (1d2b4 <btrfs_comp_cpu_keys@@Base+0xa8>)
   1d266:	ldr	r3, [pc, #80]	; (1d2b8 <btrfs_comp_cpu_keys@@Base+0xac>)
   1d268:	add	r2, pc
   1d26a:	ldr	r3, [r2, r3]
   1d26c:	ldr	r3, [r3, #0]
   1d26e:	str	r3, [sp, #20]
   1d270:	mov.w	r3, #0
   1d274:	ldr.w	r3, [r0, #13]
   1d278:	ldr.w	r2, [r0, #9]
   1d27c:	str.w	r3, [sp, #13]
   1d280:	ldrb	r3, [r0, #8]
   1d282:	str.w	r2, [sp, #9]
   1d286:	ldr	r2, [r0, #0]
   1d288:	strb.w	r3, [sp, #8]
   1d28c:	ldr	r3, [r0, #4]
   1d28e:	mov	r0, sp
   1d290:	strd	r2, r3, [sp]
   1d294:	bl	1d20c <btrfs_comp_cpu_keys@@Base>
   1d298:	ldr	r2, [pc, #32]	; (1d2bc <btrfs_comp_cpu_keys@@Base+0xb0>)
   1d29a:	ldr	r3, [pc, #28]	; (1d2b8 <btrfs_comp_cpu_keys@@Base+0xac>)
   1d29c:	add	r2, pc
   1d29e:	ldr	r3, [r2, r3]
   1d2a0:	ldr	r2, [r3, #0]
   1d2a2:	ldr	r3, [sp, #20]
   1d2a4:	eors	r2, r3
   1d2a6:	beq.n	1d2ac <btrfs_comp_cpu_keys@@Base+0xa0>
   1d2a8:	blx	8c90 <__stack_chk_fail@plt>
   1d2ac:	add	sp, #28
   1d2ae:	ldr.w	pc, [sp], #4
   1d2b2:	nop
   1d2b4:	bge.n	1d218 <btrfs_comp_cpu_keys@@Base+0xc>
   1d2b6:	movs	r4, r0
   1d2b8:	lsls	r0, r1, #10
   1d2ba:	movs	r0, r0
   1d2bc:	bge.n	1d3b8 <btrfs_check_node@@Base+0xf8>
   1d2be:	movs	r4, r0

0001d2c0 <btrfs_check_node@@Base>:
   1d2c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2c4:	mov	r4, r2
   1d2c6:	ldr	r2, [pc, #340]	; (1d41c <btrfs_check_node@@Base+0x15c>)
   1d2c8:	sub	sp, #92	; 0x5c
   1d2ca:	ldr	r3, [pc, #340]	; (1d420 <btrfs_check_node@@Base+0x160>)
   1d2cc:	mov	r7, r0
   1d2ce:	add	r2, pc
   1d2d0:	ldr.w	r8, [r4, #192]	; 0xc0
   1d2d4:	mov	r5, r1
   1d2d6:	ldr	r3, [r2, r3]
   1d2d8:	ldr	r3, [r3, #0]
   1d2da:	str	r3, [sp, #84]	; 0x54
   1d2dc:	mov.w	r3, #0
   1d2e0:	cmp.w	r8, #0
   1d2e4:	beq.n	1d380 <btrfs_check_node@@Base+0xc0>
   1d2e6:	ldr.w	r2, [r0, #384]	; 0x180
   1d2ea:	ldr	r3, [pc, #300]	; (1d418 <btrfs_check_node@@Base+0x158>)
   1d2ec:	subs	r2, #101	; 0x65
   1d2ee:	umull	r2, r3, r2, r3
   1d2f2:	cmp.w	r8, r3, lsr #3
   1d2f6:	bhi.n	1d380 <btrfs_check_node@@Base+0xc0>
   1d2f8:	cbnz	r1, 1d316 <btrfs_check_node@@Base+0x56>
   1d2fa:	sub.w	sl, r8, #2
   1d2fe:	add.w	r9, sp, #44	; 0x2c
   1d302:	add.w	fp, sp, #64	; 0x40
   1d306:	movs	r6, #0
   1d308:	cmp.w	r8, #1
   1d30c:	beq.n	1d312 <btrfs_check_node@@Base+0x52>
   1d30e:	cmp	sl, r6
   1d310:	bhi.n	1d33a <btrfs_check_node@@Base+0x7a>
   1d312:	movs	r6, #0
   1d314:	b.n	1d3d0 <btrfs_check_node@@Base+0x110>
   1d316:	ldrb	r3, [r1, #8]
   1d318:	cmp	r3, #0
   1d31a:	beq.n	1d2fa <btrfs_check_node@@Base+0x3a>
   1d31c:	add	r1, sp, #44	; 0x2c
   1d31e:	movs	r2, #0
   1d320:	mov	r0, r4
   1d322:	str	r1, [sp, #20]
   1d324:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1d328:	ldr	r1, [sp, #20]
   1d32a:	movs	r2, #17
   1d32c:	mov	r0, r5
   1d32e:	blx	8c1c <memcmp@plt+0x4>
   1d332:	cmp	r0, #0
   1d334:	beq.n	1d2fa <btrfs_check_node@@Base+0x3a>
   1d336:	movs	r6, #2
   1d338:	b.n	1d382 <btrfs_check_node@@Base+0xc2>
   1d33a:	mov	r2, r6
   1d33c:	adds	r6, #1
   1d33e:	mov	r1, r9
   1d340:	mov	r0, r4
   1d342:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1d346:	mov	r2, r6
   1d348:	mov	r1, fp
   1d34a:	mov	r0, r4
   1d34c:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1d350:	ldr.w	r3, [sp, #77]	; 0x4d
   1d354:	ldr.w	r2, [sp, #73]	; 0x49
   1d358:	add	r1, sp, #24
   1d35a:	mov	r0, r9
   1d35c:	str.w	r3, [sp, #37]	; 0x25
   1d360:	ldrb.w	r3, [sp, #72]	; 0x48
   1d364:	str.w	r2, [sp, #33]	; 0x21
   1d368:	strb.w	r3, [sp, #32]
   1d36c:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d370:	strd	r2, r3, [sp, #24]
   1d374:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1d378:	cmp	r0, #0
   1d37a:	blt.n	1d308 <btrfs_check_node@@Base+0x48>
   1d37c:	movs	r6, #3
   1d37e:	b.n	1d382 <btrfs_check_node@@Base+0xc2>
   1d380:	movs	r6, #1
   1d382:	ldr.w	r3, [r4, #188]	; 0xbc
   1d386:	ldr.w	r2, [r4, #184]	; 0xb8
   1d38a:	cmp	r3, #0
   1d38c:	it	eq
   1d38e:	cmpeq	r2, #2
   1d390:	bne.n	1d3d0 <btrfs_check_node@@Base+0x110>
   1d392:	add.w	r8, sp, #33	; 0x21
   1d396:	cbz	r5, 1d3e4 <btrfs_check_node@@Base+0x124>
   1d398:	ldr.w	r3, [r5, #13]
   1d39c:	ldr.w	r2, [r5, #9]
   1d3a0:	str.w	r3, [r8, #4]
   1d3a4:	ldrb	r3, [r5, #8]
   1d3a6:	str.w	r2, [sp, #33]	; 0x21
   1d3aa:	ldr	r2, [r5, #0]
   1d3ac:	strb.w	r3, [sp, #32]
   1d3b0:	ldr	r3, [r5, #4]
   1d3b2:	strd	r2, r3, [sp, #24]
   1d3b6:	ldrb.w	r3, [r4, #196]	; 0xc4
   1d3ba:	add	r1, sp, #24
   1d3bc:	mov	r0, r7
   1d3be:	str	r3, [sp, #8]
   1d3c0:	ldr	r3, [r4, #76]	; 0x4c
   1d3c2:	str	r3, [sp, #0]
   1d3c4:	movs	r3, #0
   1d3c6:	str	r3, [sp, #4]
   1d3c8:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d3cc:	bl	31e88 <btrfs_add_corrupt_extent_record@@Base>
   1d3d0:	ldr	r2, [pc, #80]	; (1d424 <btrfs_check_node@@Base+0x164>)
   1d3d2:	ldr	r3, [pc, #76]	; (1d420 <btrfs_check_node@@Base+0x160>)
   1d3d4:	add	r2, pc
   1d3d6:	ldr	r3, [r2, r3]
   1d3d8:	ldr	r2, [r3, #0]
   1d3da:	ldr	r3, [sp, #84]	; 0x54
   1d3dc:	eors	r2, r3
   1d3de:	beq.n	1d410 <btrfs_check_node@@Base+0x150>
   1d3e0:	blx	8c90 <__stack_chk_fail@plt>
   1d3e4:	mov	r2, r5
   1d3e6:	add	r1, sp, #64	; 0x40
   1d3e8:	mov	r0, r4
   1d3ea:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1d3ee:	ldr.w	r3, [sp, #77]	; 0x4d
   1d3f2:	ldr.w	r2, [sp, #73]	; 0x49
   1d3f6:	str.w	r3, [r8, #4]
   1d3fa:	ldrb.w	r3, [sp, #72]	; 0x48
   1d3fe:	str.w	r2, [sp, #33]	; 0x21
   1d402:	strb.w	r3, [sp, #32]
   1d406:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d40a:	strd	r2, r3, [sp, #24]
   1d40e:	b.n	1d3b6 <btrfs_check_node@@Base+0xf6>
   1d410:	mov	r0, r6
   1d412:	add	sp, #92	; 0x5c
   1d414:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d418:	strh	r1, [r4, #30]
   1d41a:	subs	r6, #15
   1d41c:	bge.n	1d4b4 <read_node_slot@@Base+0x6>
   1d41e:	movs	r4, r0
   1d420:	lsls	r0, r1, #10
   1d422:	movs	r0, r0
   1d424:	bls.n	1d4b0 <read_node_slot@@Base+0x2>
   1d426:	movs	r4, r0

0001d428 <btrfs_bin_search@@Base>:
   1d428:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1d42c:	mov	r6, r1
   1d42e:	ldr.w	r5, [r0, #192]	; 0xc0
   1d432:	mov	r7, r3
   1d434:	mov	r9, r2
   1d436:	cbnz	r2, 1d44c <btrfs_bin_search@@Base+0x24>
   1d438:	add.w	r8, r0, #96	; 0x60
   1d43c:	mov.w	sl, #25
   1d440:	cmp	r9, r5
   1d442:	blt.n	1d47e <btrfs_bin_search@@Base+0x56>
   1d444:	movs	r0, #1
   1d446:	str.w	r9, [r7]
   1d44a:	b.n	1d4a6 <btrfs_bin_search@@Base+0x7e>
   1d44c:	add.w	r8, r0, #96	; 0x60
   1d450:	mov.w	r9, #0
   1d454:	cmp	r9, r5
   1d456:	bge.n	1d444 <btrfs_bin_search@@Base+0x1c>
   1d458:	add.w	r4, r9, r5
   1d45c:	mov	r1, r6
   1d45e:	add.w	r4, r4, r4, lsr #31
   1d462:	asrs	r4, r4, #1
   1d464:	add.w	r0, r4, r4, lsl #5
   1d468:	adds	r0, #101	; 0x65
   1d46a:	add	r0, r8
   1d46c:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1d470:	cmp	r0, #0
   1d472:	bge.n	1d4aa <btrfs_bin_search@@Base+0x82>
   1d474:	add.w	r9, r4, #1
   1d478:	mov	r4, r5
   1d47a:	mov	r5, r4
   1d47c:	b.n	1d454 <btrfs_bin_search@@Base+0x2c>
   1d47e:	add.w	r4, r9, r5
   1d482:	mov	r1, r6
   1d484:	add.w	r4, r4, r4, lsr #31
   1d488:	asrs	r4, r4, #1
   1d48a:	mla	r0, sl, r4, r8
   1d48e:	adds	r0, #101	; 0x65
   1d490:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1d494:	cmp	r0, #0
   1d496:	bge.n	1d4a2 <btrfs_bin_search@@Base+0x7a>
   1d498:	add.w	r9, r4, #1
   1d49c:	mov	r4, r5
   1d49e:	mov	r5, r4
   1d4a0:	b.n	1d440 <btrfs_bin_search@@Base+0x18>
   1d4a2:	bne.n	1d49e <btrfs_bin_search@@Base+0x76>
   1d4a4:	str	r4, [r7, #0]
   1d4a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d4aa:	bne.n	1d47a <btrfs_bin_search@@Base+0x52>
   1d4ac:	b.n	1d4a4 <btrfs_bin_search@@Base+0x7c>

0001d4ae <read_node_slot@@Base>:
   1d4ae:	push	{r4, r5, r6, r7, lr}
   1d4b0:	subs	r6, r2, #0
   1d4b2:	sub	sp, #20
   1d4b4:	mov	r5, r1
   1d4b6:	blt.n	1d51c <read_node_slot@@Base+0x6e>
   1d4b8:	ldr.w	r3, [r1, #192]	; 0xc0
   1d4bc:	cmp	r6, r3
   1d4be:	bcs.n	1d51c <read_node_slot@@Base+0x6e>
   1d4c0:	ldrb.w	r7, [r1, #196]	; 0xc4
   1d4c4:	cbz	r7, 1d51c <read_node_slot@@Base+0x6e>
   1d4c6:	add.w	r3, r6, r6, lsl #5
   1d4ca:	add	r3, r1
   1d4cc:	adds	r3, #197	; 0xc5
   1d4ce:	mov	r1, r3
   1d4d0:	ldr.w	r4, [r3, #25]!
   1d4d4:	ldr.w	r2, [r1, #17]!
   1d4d8:	ldr	r3, [r3, #4]
   1d4da:	strd	r4, r3, [sp]
   1d4de:	ldr	r3, [r1, #4]
   1d4e0:	bl	21f24 <read_tree_block@@Base>
   1d4e4:	mov	r4, r0
   1d4e6:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1d4ea:	cbz	r0, 1d516 <read_node_slot@@Base+0x68>
   1d4ec:	ldrb.w	r3, [r4, #196]	; 0xc4
   1d4f0:	subs	r7, #1
   1d4f2:	cmp	r3, r7
   1d4f4:	beq.n	1d51e <read_node_slot@@Base+0x70>
   1d4f6:	str	r3, [sp, #8]
   1d4f8:	ldrb.w	r3, [r5, #196]	; 0xc4
   1d4fc:	ldr	r0, [pc, #36]	; (1d524 <read_node_slot@@Base+0x76>)
   1d4fe:	ldr.w	r2, [r5, #144]	; 0x90
   1d502:	add	r0, pc
   1d504:	strd	r6, r3, [sp]
   1d508:	ldr.w	r3, [r5, #148]	; 0x94
   1d50c:	bl	1bd1c <__btrfs_error@@Base>
   1d510:	mov	r0, r4
   1d512:	bl	1b4c0 <free_extent_buffer@@Base>
   1d516:	mvn.w	r4, #4
   1d51a:	b.n	1d51e <read_node_slot@@Base+0x70>
   1d51c:	movs	r4, #0
   1d51e:	mov	r0, r4
   1d520:	add	sp, #20
   1d522:	pop	{r4, r5, r6, r7, pc}
   1d524:	ldr	r0, [pc, #292]	; (1d64c <reada_for_search@@Base+0x124>)
   1d526:	movs	r2, r0

0001d528 <reada_for_search@@Base>:
   1d528:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d52c:	sub	sp, #92	; 0x5c
   1d52e:	ldr	r4, [pc, #452]	; (1d6f4 <reada_for_search@@Base+0x1cc>)
   1d530:	cmp	r2, #1
   1d532:	str	r1, [sp, #32]
   1d534:	mov	r9, r0
   1d536:	ldr	r1, [pc, #448]	; (1d6f8 <reada_for_search@@Base+0x1d0>)
   1d538:	add	r4, pc
   1d53a:	ldr	r1, [r4, r1]
   1d53c:	ldr	r1, [r1, #0]
   1d53e:	str	r1, [sp, #84]	; 0x54
   1d540:	mov.w	r1, #0
   1d544:	bne.n	1d582 <reada_for_search@@Base+0x5a>
   1d546:	ldr	r2, [sp, #32]
   1d548:	ldr	r2, [r2, #4]
   1d54a:	str	r2, [sp, #24]
   1d54c:	cbz	r2, 1d582 <reada_for_search@@Base+0x5a>
   1d54e:	ldr	r2, [sp, #32]
   1d550:	mov	r6, r3
   1d552:	ldr	r3, [sp, #24]
   1d554:	ldrsb.w	r2, [r2, #64]	; 0x40
   1d558:	adds	r3, #96	; 0x60
   1d55a:	str	r3, [sp, #36]	; 0x24
   1d55c:	add.w	r3, r6, r6, lsl #5
   1d560:	str	r2, [sp, #56]	; 0x38
   1d562:	ldr	r2, [sp, #36]	; 0x24
   1d564:	add	r3, r2
   1d566:	ldr.w	sl, [r3, #118]!
   1d56a:	ldr.w	fp, [r3, #4]
   1d56e:	mov	r2, sl
   1d570:	ldr.w	r3, [r0, #384]	; 0x180
   1d574:	str	r3, [sp, #0]
   1d576:	mov	r3, fp
   1d578:	bl	20ac8 <btrfs_find_tree_block@@Base>
   1d57c:	cbz	r0, 1d598 <reada_for_search@@Base+0x70>
   1d57e:	bl	1b4c0 <free_extent_buffer@@Base>
   1d582:	ldr	r2, [pc, #376]	; (1d6fc <reada_for_search@@Base+0x1d4>)
   1d584:	ldr	r3, [pc, #368]	; (1d6f8 <reada_for_search@@Base+0x1d0>)
   1d586:	add	r2, pc
   1d588:	ldr	r3, [r2, r3]
   1d58a:	ldr	r2, [r3, #0]
   1d58c:	ldr	r3, [sp, #84]	; 0x54
   1d58e:	eors	r2, r3
   1d590:	beq.w	1d6ee <reada_for_search@@Base+0x1c6>
   1d594:	blx	8c90 <__stack_chk_fail@plt>
   1d598:	ldr	r3, [sp, #24]
   1d59a:	movs	r4, #0
   1d59c:	ldr.w	r3, [r3, #192]	; 0xc0
   1d5a0:	strd	sl, fp, [sp, #8]
   1d5a4:	str	r0, [sp, #28]
   1d5a6:	str	r3, [sp, #60]	; 0x3c
   1d5a8:	movs	r3, #0
   1d5aa:	strd	r3, r4, [sp, #16]
   1d5ae:	ldr	r3, [sp, #56]	; 0x38
   1d5b0:	cmp	r3, #0
   1d5b2:	bge.n	1d64e <reada_for_search@@Base+0x126>
   1d5b4:	cmp	r6, #0
   1d5b6:	beq.n	1d582 <reada_for_search@@Base+0x5a>
   1d5b8:	subs	r6, #1
   1d5ba:	ldr	r3, [sp, #32]
   1d5bc:	ldrsb.w	r3, [r3, #64]	; 0x40
   1d5c0:	cmp	r3, #0
   1d5c2:	blt.n	1d65a <reada_for_search@@Base+0x132>
   1d5c4:	ldr	r2, [sp, #36]	; 0x24
   1d5c6:	add.w	r3, r6, r6, lsl #5
   1d5ca:	adds	r3, #101	; 0x65
   1d5cc:	add	r3, r2
   1d5ce:	mov	r2, r3
   1d5d0:	ldr.w	r4, [r2, #17]!
   1d5d4:	ldr	r5, [r2, #4]
   1d5d6:	cmp	r5, fp
   1d5d8:	it	eq
   1d5da:	cmpeq	r4, sl
   1d5dc:	bcs.n	1d67e <reada_for_search@@Base+0x156>
   1d5de:	subs.w	r2, sl, r4
   1d5e2:	str	r2, [sp, #40]	; 0x28
   1d5e4:	sbc.w	r2, fp, r5
   1d5e8:	str	r2, [sp, #44]	; 0x2c
   1d5ea:	ldrd	r7, r8, [sp, #40]	; 0x28
   1d5ee:	movs	r2, #0
   1d5f0:	mov.w	r1, #32768	; 0x8000
   1d5f4:	cmp	r2, r8
   1d5f6:	it	eq
   1d5f8:	cmpeq	r1, r7
   1d5fa:	bcs.n	1d6aa <reada_for_search@@Base+0x182>
   1d5fc:	ldrd	r1, r2, [sp, #8]
   1d600:	cmp	r2, r5
   1d602:	it	eq
   1d604:	cmpeq	r1, r4
   1d606:	bcc.n	1d68a <reada_for_search@@Base+0x162>
   1d608:	ldr	r3, [sp, #28]
   1d60a:	adds	r3, #1
   1d60c:	str	r3, [sp, #28]
   1d60e:	ldr	r3, [sp, #32]
   1d610:	ldrsb.w	r3, [r3, #64]	; 0x40
   1d614:	cmp	r3, #1
   1d616:	bgt.n	1d6d2 <reada_for_search@@Base+0x1aa>
   1d618:	ldrd	r0, r1, [sp, #16]
   1d61c:	movs	r3, #0
   1d61e:	mov.w	r2, #262144	; 0x40000
   1d622:	cmp	r3, r1
   1d624:	it	eq
   1d626:	cmpeq	r2, r0
   1d628:	bcc.n	1d582 <reada_for_search@@Base+0x5a>
   1d62a:	ldr	r3, [sp, #28]
   1d62c:	cmp	r3, #32
   1d62e:	bhi.n	1d582 <reada_for_search@@Base+0x5a>
   1d630:	cmp	r5, fp
   1d632:	ldrd	r2, r3, [sp, #8]
   1d636:	it	eq
   1d638:	cmpeq	r4, sl
   1d63a:	itt	cc
   1d63c:	movcc	sl, r4
   1d63e:	movcc	fp, r5
   1d640:	cmp	r3, r5
   1d642:	it	eq
   1d644:	cmpeq	r2, r4
   1d646:	bcs.n	1d5ae <reada_for_search@@Base+0x86>
   1d648:	strd	r4, r5, [sp, #8]
   1d64c:	b.n	1d5ae <reada_for_search@@Base+0x86>
   1d64e:	beq.n	1d5ba <reada_for_search@@Base+0x92>
   1d650:	ldr	r3, [sp, #60]	; 0x3c
   1d652:	adds	r6, #1
   1d654:	cmp	r6, r3
   1d656:	bcc.n	1d5ba <reada_for_search@@Base+0x92>
   1d658:	b.n	1d582 <reada_for_search@@Base+0x5a>
   1d65a:	ldrd	r3, r4, [sp, #128]	; 0x80
   1d65e:	orrs	r3, r4
   1d660:	beq.n	1d5c4 <reada_for_search@@Base+0x9c>
   1d662:	ldr	r0, [sp, #24]
   1d664:	add	r1, sp, #64	; 0x40
   1d666:	mov	r2, r6
   1d668:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1d66c:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d670:	ldrd	r0, r1, [sp, #128]	; 0x80
   1d674:	cmp	r1, r3
   1d676:	it	eq
   1d678:	cmpeq	r0, r2
   1d67a:	beq.n	1d5c4 <reada_for_search@@Base+0x9c>
   1d67c:	b.n	1d582 <reada_for_search@@Base+0x5a>
   1d67e:	ldrd	r1, r2, [sp, #8]
   1d682:	cmp	r2, r5
   1d684:	it	eq
   1d686:	cmpeq	r1, r4
   1d688:	bcs.n	1d6aa <reada_for_search@@Base+0x182>
   1d68a:	ldr	r2, [sp, #8]
   1d68c:	mov.w	r1, #32768	; 0x8000
   1d690:	subs	r2, r4, r2
   1d692:	str	r2, [sp, #48]	; 0x30
   1d694:	ldr	r2, [sp, #12]
   1d696:	sbc.w	r2, r5, r2
   1d69a:	str	r2, [sp, #52]	; 0x34
   1d69c:	ldrd	r7, r8, [sp, #48]	; 0x30
   1d6a0:	movs	r2, #0
   1d6a2:	cmp	r2, r8
   1d6a4:	it	eq
   1d6a6:	cmpeq	r1, r7
   1d6a8:	bcc.n	1d608 <reada_for_search@@Base+0xe0>
   1d6aa:	ldr.w	r2, [r3, #25]!
   1d6ae:	mov	r0, r9
   1d6b0:	ldr	r3, [r3, #4]
   1d6b2:	strd	r2, r3, [sp]
   1d6b6:	mov	r2, r4
   1d6b8:	mov	r3, r5
   1d6ba:	bl	21dd4 <readahead_tree_block@@Base>
   1d6be:	ldrd	r1, r2, [sp, #16]
   1d6c2:	ldr.w	r3, [r9, #384]	; 0x180
   1d6c6:	adds	r1, r1, r3
   1d6c8:	adc.w	r2, r2, #0
   1d6cc:	strd	r1, r2, [sp, #16]
   1d6d0:	b.n	1d608 <reada_for_search@@Base+0xe0>
   1d6d2:	ldrd	r0, r1, [sp, #16]
   1d6d6:	movs	r3, #0
   1d6d8:	mov.w	r2, #1048576	; 0x100000
   1d6dc:	cmp	r3, r1
   1d6de:	it	eq
   1d6e0:	cmpeq	r2, r0
   1d6e2:	bcc.w	1d582 <reada_for_search@@Base+0x5a>
   1d6e6:	ldr	r3, [sp, #28]
   1d6e8:	cmp	r3, #129	; 0x81
   1d6ea:	bne.n	1d630 <reada_for_search@@Base+0x108>
   1d6ec:	b.n	1d582 <reada_for_search@@Base+0x5a>
   1d6ee:	add	sp, #92	; 0x5c
   1d6f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6f4:	bvc.n	1d6b8 <reada_for_search@@Base+0x190>
   1d6f6:	movs	r4, r0
   1d6f8:	lsls	r0, r1, #10
   1d6fa:	movs	r0, r0
   1d6fc:	bvc.n	1d624 <reada_for_search@@Base+0xfc>
   1d6fe:	movs	r4, r0

0001d700 <btrfs_fixup_low_keys@@Base>:
   1d700:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1d704:	add.w	r4, r1, r3, lsl #2
   1d708:	mov	r6, r2
   1d70a:	mov	r5, r3
   1d70c:	cmp	r5, #7
   1d70e:	ble.n	1d714 <btrfs_fixup_low_keys@@Base+0x14>
   1d710:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d714:	ldr	r0, [r4, #0]
   1d716:	mov	r8, r4
   1d718:	ldr	r7, [r4, #32]
   1d71a:	cmp	r0, #0
   1d71c:	beq.n	1d710 <btrfs_fixup_low_keys@@Base+0x10>
   1d71e:	mov	r2, r7
   1d720:	mov	r1, r6
   1d722:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1d726:	ldr.w	r0, [r8]
   1d72a:	adds	r4, #4
   1d72c:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1d730:	cmp	r7, #0
   1d732:	bne.n	1d710 <btrfs_fixup_low_keys@@Base+0x10>
   1d734:	adds	r5, #1
   1d736:	b.n	1d70c <btrfs_fixup_low_keys@@Base+0xc>

0001d738 <btrfs_set_item_key_safe@@Base>:
   1d738:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d73c:	mov	r5, r2
   1d73e:	ldr	r2, [pc, #188]	; (1d7fc <btrfs_set_item_key_safe@@Base+0xc4>)
   1d740:	sub	sp, #28
   1d742:	ldr	r3, [pc, #188]	; (1d800 <btrfs_set_item_key_safe@@Base+0xc8>)
   1d744:	mov	r9, r0
   1d746:	add	r2, pc
   1d748:	ldr	r4, [r1, #32]
   1d74a:	ldr.w	r8, [r1]
   1d74e:	mov	r7, r1
   1d750:	ldr	r3, [r2, r3]
   1d752:	cmp	r4, #0
   1d754:	mov	r6, sp
   1d756:	ldr	r3, [r3, #0]
   1d758:	str	r3, [sp, #20]
   1d75a:	mov.w	r3, #0
   1d75e:	bgt.n	1d79e <btrfs_set_item_key_safe@@Base+0x66>
   1d760:	ldr.w	r3, [r8, #192]	; 0xc0
   1d764:	subs	r3, #1
   1d766:	cmp	r3, r4
   1d768:	bhi.n	1d7cc <btrfs_set_item_key_safe@@Base+0x94>
   1d76a:	ldr.w	r3, [r5, #13]
   1d76e:	mov	r0, r8
   1d770:	ldr.w	r2, [r5, #9]
   1d774:	mov	r1, r6
   1d776:	str.w	r3, [sp, #13]
   1d77a:	ldrb	r3, [r5, #8]
   1d77c:	str.w	r2, [sp, #9]
   1d780:	ldr	r2, [r5, #0]
   1d782:	strb.w	r3, [sp, #8]
   1d786:	ldr	r3, [r5, #4]
   1d788:	strd	r2, r3, [sp]
   1d78c:	mov	r2, r4
   1d78e:	bl	1c1da <rb_free_nodes@@Base+0x3c>
   1d792:	mov	r0, r8
   1d794:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1d798:	cbz	r4, 1d7e4 <btrfs_set_item_key_safe@@Base+0xac>
   1d79a:	movs	r4, #0
   1d79c:	b.n	1d7b8 <btrfs_set_item_key_safe@@Base+0x80>
   1d79e:	subs	r2, r4, #1
   1d7a0:	mov	r1, r6
   1d7a2:	mov	r0, r8
   1d7a4:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1d7a8:	mov	r1, r5
   1d7aa:	mov	r0, r6
   1d7ac:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1d7b0:	cmp	r0, #0
   1d7b2:	blt.n	1d760 <btrfs_set_item_key_safe@@Base+0x28>
   1d7b4:	mov.w	r4, #4294967295	; 0xffffffff
   1d7b8:	ldr	r2, [pc, #72]	; (1d804 <btrfs_set_item_key_safe@@Base+0xcc>)
   1d7ba:	ldr	r3, [pc, #68]	; (1d800 <btrfs_set_item_key_safe@@Base+0xc8>)
   1d7bc:	add	r2, pc
   1d7be:	ldr	r3, [r2, r3]
   1d7c0:	ldr	r2, [r3, #0]
   1d7c2:	ldr	r3, [sp, #20]
   1d7c4:	eors	r2, r3
   1d7c6:	beq.n	1d7f2 <btrfs_set_item_key_safe@@Base+0xba>
   1d7c8:	blx	8c90 <__stack_chk_fail@plt>
   1d7cc:	adds	r2, r4, #1
   1d7ce:	mov	r1, r6
   1d7d0:	mov	r0, r8
   1d7d2:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1d7d6:	mov	r1, r5
   1d7d8:	mov	r0, r6
   1d7da:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1d7de:	cmp	r0, #0
   1d7e0:	bgt.n	1d76a <btrfs_set_item_key_safe@@Base+0x32>
   1d7e2:	b.n	1d7b4 <btrfs_set_item_key_safe@@Base+0x7c>
   1d7e4:	movs	r3, #1
   1d7e6:	mov	r2, r6
   1d7e8:	mov	r1, r7
   1d7ea:	mov	r0, r9
   1d7ec:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1d7f0:	b.n	1d7b8 <btrfs_set_item_key_safe@@Base+0x80>
   1d7f2:	mov	r0, r4
   1d7f4:	add	sp, #28
   1d7f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1d7fa:	nop
   1d7fc:	bpl.n	1d7a4 <btrfs_set_item_key_safe@@Base+0x6c>
   1d7fe:	movs	r4, r0
   1d800:	lsls	r0, r1, #10
   1d802:	movs	r0, r0
   1d804:	bpl.n	1d8c0 <btrfs_leaf_free_space@@Base+0x38>
   1d806:	movs	r4, r0

0001d808 <btrfs_set_item_key_unsafe@@Base>:
   1d808:	push	{r4, r5, r6, r7, lr}
   1d80a:	mov	r4, r1
   1d80c:	ldr	r1, [pc, #108]	; (1d87c <btrfs_set_item_key_unsafe@@Base+0x74>)
   1d80e:	sub	sp, #36	; 0x24
   1d810:	ldr	r3, [pc, #108]	; (1d880 <btrfs_set_item_key_unsafe@@Base+0x78>)
   1d812:	add	r6, sp, #8
   1d814:	add	r1, pc
   1d816:	ldr	r7, [r4, #32]
   1d818:	mov	r5, r0
   1d81a:	ldr	r0, [r4, #0]
   1d81c:	ldr	r3, [r1, r3]
   1d81e:	ldr	r3, [r3, #0]
   1d820:	str	r3, [sp, #28]
   1d822:	mov.w	r3, #0
   1d826:	ldr.w	r3, [r2, #13]
   1d82a:	ldr.w	r1, [r2, #9]
   1d82e:	str	r0, [sp, #4]
   1d830:	str.w	r3, [sp, #21]
   1d834:	ldrb	r3, [r2, #8]
   1d836:	str.w	r1, [sp, #17]
   1d83a:	ldr	r1, [r2, #0]
   1d83c:	strb.w	r3, [sp, #16]
   1d840:	ldr	r3, [r2, #4]
   1d842:	mov	r2, r7
   1d844:	strd	r1, r3, [sp, #8]
   1d848:	mov	r1, r6
   1d84a:	bl	1c1da <rb_free_nodes@@Base+0x3c>
   1d84e:	ldr	r0, [sp, #4]
   1d850:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1d854:	cbnz	r7, 1d862 <btrfs_set_item_key_unsafe@@Base+0x5a>
   1d856:	movs	r3, #1
   1d858:	mov	r2, r6
   1d85a:	mov	r1, r4
   1d85c:	mov	r0, r5
   1d85e:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1d862:	ldr	r2, [pc, #32]	; (1d884 <btrfs_set_item_key_unsafe@@Base+0x7c>)
   1d864:	ldr	r3, [pc, #24]	; (1d880 <btrfs_set_item_key_unsafe@@Base+0x78>)
   1d866:	add	r2, pc
   1d868:	ldr	r3, [r2, r3]
   1d86a:	ldr	r2, [r3, #0]
   1d86c:	ldr	r3, [sp, #28]
   1d86e:	eors	r2, r3
   1d870:	beq.n	1d876 <btrfs_set_item_key_unsafe@@Base+0x6e>
   1d872:	blx	8c90 <__stack_chk_fail@plt>
   1d876:	add	sp, #36	; 0x24
   1d878:	pop	{r4, r5, r6, r7, pc}
   1d87a:	nop
   1d87c:	bpl.n	1d888 <btrfs_leaf_free_space@@Base>
   1d87e:	movs	r4, r0
   1d880:	lsls	r0, r1, #10
   1d882:	movs	r0, r0
   1d884:	bmi.n	1d7ec <btrfs_set_item_key_safe@@Base+0xb4>
   1d886:	movs	r4, r0

0001d888 <btrfs_leaf_free_space@@Base>:
   1d888:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1d88c:	mov	r4, r0
   1d88e:	ldr	r3, [r0, #92]	; 0x5c
   1d890:	ldr	r7, [pc, #104]	; (1d8fc <btrfs_leaf_free_space@@Base+0x74>)
   1d892:	ldr.w	r6, [r0, #192]	; 0xc0
   1d896:	add	r7, pc
   1d898:	cbz	r3, 1d8a6 <btrfs_leaf_free_space@@Base+0x1e>
   1d89a:	ldr.w	r3, [r3, #384]	; 0x180
   1d89e:	ldr	r2, [r0, #76]	; 0x4c
   1d8a0:	subs	r3, r3, r2
   1d8a2:	it	ne
   1d8a4:	movne	r3, #1
   1d8a6:	ldr	r1, [pc, #88]	; (1d900 <btrfs_leaf_free_space@@Base+0x78>)
   1d8a8:	movw	r2, #1767	; 0x6e7
   1d8ac:	ldr	r0, [pc, #84]	; (1d904 <btrfs_leaf_free_space@@Base+0x7c>)
   1d8ae:	add	r1, pc
   1d8b0:	adds	r1, #211	; 0xd3
   1d8b2:	add	r0, pc
   1d8b4:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1d8b8:	ldr	r3, [r4, #76]	; 0x4c
   1d8ba:	mov	r2, r6
   1d8bc:	movs	r1, #0
   1d8be:	mov	r0, r4
   1d8c0:	sub.w	r8, r3, #101	; 0x65
   1d8c4:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1d8c8:	subs.w	r5, r8, r0
   1d8cc:	bpl.n	1d8f4 <btrfs_leaf_free_space@@Base+0x6c>
   1d8ce:	ldr	r3, [pc, #56]	; (1d908 <btrfs_leaf_free_space@@Base+0x80>)
   1d8d0:	mov	r2, r6
   1d8d2:	movs	r1, #0
   1d8d4:	mov	r0, r4
   1d8d6:	ldr	r3, [r7, r3]
   1d8d8:	ldr	r7, [r3, #0]
   1d8da:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1d8de:	ldr	r2, [pc, #44]	; (1d90c <btrfs_leaf_free_space@@Base+0x84>)
   1d8e0:	mov	r3, r5
   1d8e2:	movs	r1, #1
   1d8e4:	str.w	r8, [sp]
   1d8e8:	add	r2, pc
   1d8ea:	strd	r0, r6, [sp, #4]
   1d8ee:	mov	r0, r7
   1d8f0:	blx	9040 <__fprintf_chk@plt+0x4>
   1d8f4:	mov	r0, r5
   1d8f6:	add	sp, #16
   1d8f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d8fc:	bmi.n	1d804 <btrfs_set_item_key_safe@@Base+0xcc>
   1d8fe:	movs	r4, r0
   1d900:	ldr	r1, [pc, #376]	; (1da7c <btrfs_check_leaf@@Base+0x16c>)
   1d902:	movs	r2, r0
   1d904:	add	pc, ip
   1d906:	movs	r2, r0
   1d908:	lsls	r4, r3, #10
   1d90a:	movs	r0, r0
   1d90c:	add	pc, ip
   1d90e:	movs	r2, r0

0001d910 <btrfs_check_leaf@@Base>:
   1d910:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d914:	mov	r4, r2
   1d916:	ldr	r2, [pc, #640]	; (1db98 <btrfs_check_leaf@@Base+0x288>)
   1d918:	sub	sp, #84	; 0x54
   1d91a:	ldr	r3, [pc, #640]	; (1db9c <btrfs_check_leaf@@Base+0x28c>)
   1d91c:	mov	r8, r0
   1d91e:	add	r2, pc
   1d920:	ldr.w	sl, [r4, #192]	; 0xc0
   1d924:	ldr	r7, [pc, #632]	; (1dba0 <btrfs_check_leaf@@Base+0x290>)
   1d926:	mov	r6, r1
   1d928:	ldr	r3, [r2, r3]
   1d92a:	ldr	r2, [r4, #76]	; 0x4c
   1d92c:	add	r7, pc
   1d92e:	ldr	r3, [r3, #0]
   1d930:	str	r3, [sp, #76]	; 0x4c
   1d932:	mov.w	r3, #0
   1d936:	movs	r3, #25
   1d938:	mul.w	r3, r3, sl
   1d93c:	cmp	r3, r2
   1d93e:	bls.n	1d9a6 <btrfs_check_leaf@@Base+0x96>
   1d940:	ldr	r3, [pc, #608]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1d942:	movs	r1, #1
   1d944:	movs	r5, #1
   1d946:	ldr	r0, [r7, r3]
   1d948:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d94c:	strd	r2, r3, [sp]
   1d950:	ldr	r2, [pc, #596]	; (1dba8 <btrfs_check_leaf@@Base+0x298>)
   1d952:	ldr	r0, [r0, #0]
   1d954:	add	r2, pc
   1d956:	blx	9040 <__fprintf_chk@plt+0x4>
   1d95a:	ldr.w	r3, [r4, #188]	; 0xbc
   1d95e:	ldr.w	r2, [r4, #184]	; 0xb8
   1d962:	cmp	r3, #0
   1d964:	it	eq
   1d966:	cmpeq	r2, #2
   1d968:	bne.n	1da08 <btrfs_check_leaf@@Base+0xf8>
   1d96a:	add	r1, sp, #36	; 0x24
   1d96c:	cmp	r6, #0
   1d96e:	beq.w	1db82 <btrfs_check_leaf@@Base+0x272>
   1d972:	ldr.w	r3, [r6, #13]
   1d976:	ldr.w	r2, [r6, #9]
   1d97a:	str.w	r3, [sp, #49]	; 0x31
   1d97e:	ldrb	r3, [r6, #8]
   1d980:	str.w	r2, [sp, #45]	; 0x2d
   1d984:	ldr	r2, [r6, #0]
   1d986:	strb.w	r3, [sp, #44]	; 0x2c
   1d98a:	ldr	r3, [r6, #4]
   1d98c:	strd	r2, r3, [sp, #36]	; 0x24
   1d990:	ldr	r2, [r4, #76]	; 0x4c
   1d992:	movs	r3, #0
   1d994:	mov	r0, r8
   1d996:	str	r3, [sp, #8]
   1d998:	strd	r2, r3, [sp]
   1d99c:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d9a0:	bl	31e88 <btrfs_add_corrupt_extent_record@@Base>
   1d9a4:	b.n	1da08 <btrfs_check_leaf@@Base+0xf8>
   1d9a6:	ldrb.w	r5, [r4, #196]	; 0xc4
   1d9aa:	cbz	r5, 1d9cc <btrfs_check_leaf@@Base+0xbc>
   1d9ac:	ldr	r3, [pc, #500]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1d9ae:	movs	r5, #4
   1d9b0:	ldr.w	r1, [r4, #144]	; 0x90
   1d9b4:	ldr.w	r2, [r4, #148]	; 0x94
   1d9b8:	ldr	r3, [r7, r3]
   1d9ba:	strd	r1, r2, [sp]
   1d9be:	movs	r1, #1
   1d9c0:	ldr	r2, [pc, #488]	; (1dbac <btrfs_check_leaf@@Base+0x29c>)
   1d9c2:	ldr	r0, [r3, #0]
   1d9c4:	add	r2, pc
   1d9c6:	blx	9040 <__fprintf_chk@plt+0x4>
   1d9ca:	b.n	1d95a <btrfs_check_leaf@@Base+0x4a>
   1d9cc:	mov	r0, r4
   1d9ce:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1d9d2:	cmp	r0, #0
   1d9d4:	bge.n	1da00 <btrfs_check_leaf@@Base+0xf0>
   1d9d6:	ldr	r3, [pc, #460]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1d9d8:	mov	r0, r4
   1d9da:	ldr.w	r9, [r4, #144]	; 0x90
   1d9de:	ldr	r3, [r7, r3]
   1d9e0:	ldr.w	r7, [r4, #148]	; 0x94
   1d9e4:	ldr	r5, [r3, #0]
   1d9e6:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1d9ea:	ldr	r2, [pc, #452]	; (1dbb0 <btrfs_check_leaf@@Base+0x2a0>)
   1d9ec:	movs	r1, #1
   1d9ee:	strd	r9, r7, [sp]
   1d9f2:	add	r2, pc
   1d9f4:	str	r0, [sp, #8]
   1d9f6:	mov	r0, r5
   1d9f8:	blx	9040 <__fprintf_chk@plt+0x4>
   1d9fc:	movs	r5, #5
   1d9fe:	b.n	1d95a <btrfs_check_leaf@@Base+0x4a>
   1da00:	cmp.w	sl, #0
   1da04:	bne.n	1da1e <btrfs_check_leaf@@Base+0x10e>
   1da06:	movs	r5, #0
   1da08:	ldr	r2, [pc, #424]	; (1dbb4 <btrfs_check_leaf@@Base+0x2a4>)
   1da0a:	ldr	r3, [pc, #400]	; (1db9c <btrfs_check_leaf@@Base+0x28c>)
   1da0c:	add	r2, pc
   1da0e:	ldr	r3, [r2, r3]
   1da10:	ldr	r2, [r3, #0]
   1da12:	ldr	r3, [sp, #76]	; 0x4c
   1da14:	eors	r2, r3
   1da16:	beq.w	1db90 <btrfs_check_leaf@@Base+0x280>
   1da1a:	blx	8c90 <__stack_chk_fail@plt>
   1da1e:	add.w	r9, sp, #56	; 0x38
   1da22:	mov	r2, r5
   1da24:	mov	r0, r4
   1da26:	mov	r1, r9
   1da28:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1da2c:	cmp	r6, #0
   1da2e:	beq.w	1db6c <btrfs_check_leaf@@Base+0x25c>
   1da32:	ldrb	r5, [r6, #8]
   1da34:	cmp	r5, #0
   1da36:	beq.w	1db6e <btrfs_check_leaf@@Base+0x25e>
   1da3a:	movs	r2, #17
   1da3c:	mov	r1, r9
   1da3e:	mov	r0, r6
   1da40:	blx	8c1c <memcmp@plt+0x4>
   1da44:	mov	r5, r0
   1da46:	cmp	r0, #0
   1da48:	beq.w	1db6e <btrfs_check_leaf@@Base+0x25e>
   1da4c:	ldr	r3, [pc, #340]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1da4e:	movs	r5, #2
   1da50:	ldr.w	r1, [r4, #144]	; 0x90
   1da54:	ldr.w	r2, [r4, #148]	; 0x94
   1da58:	ldr	r3, [r7, r3]
   1da5a:	strd	r1, r2, [sp]
   1da5e:	movs	r1, #1
   1da60:	ldr	r2, [pc, #340]	; (1dbb8 <btrfs_check_leaf@@Base+0x2a8>)
   1da62:	ldr	r0, [r3, #0]
   1da64:	add	r2, pc
   1da66:	blx	9040 <__fprintf_chk@plt+0x4>
   1da6a:	b.n	1d95a <btrfs_check_leaf@@Base+0x4a>
   1da6c:	mov	r2, r5
   1da6e:	mov	r1, r9
   1da70:	mov	r0, r4
   1da72:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1da76:	adds	r2, r5, #1
   1da78:	mov	r1, fp
   1da7a:	mov	r0, r4
   1da7c:	str	r2, [sp, #24]
   1da7e:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   1da82:	mov	r1, fp
   1da84:	mov	r0, r9
   1da86:	bl	1d262 <btrfs_comp_cpu_keys@@Base+0x56>
   1da8a:	ldr	r2, [sp, #24]
   1da8c:	cmp	r0, #0
   1da8e:	blt.n	1daa8 <btrfs_check_leaf@@Base+0x198>
   1da90:	ldr	r3, [pc, #272]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1da92:	movs	r1, #1
   1da94:	ldr	r0, [r7, r3]
   1da96:	mov	r3, r5
   1da98:	str	r2, [sp, #0]
   1da9a:	movs	r5, #3
   1da9c:	ldr	r2, [pc, #284]	; (1dbbc <btrfs_check_leaf@@Base+0x2ac>)
   1da9e:	ldr	r0, [r0, #0]
   1daa0:	add	r2, pc
   1daa2:	blx	9040 <__fprintf_chk@plt+0x4>
   1daa6:	b.n	1d95a <btrfs_check_leaf@@Base+0x4a>
   1daa8:	movs	r3, #25
   1daaa:	mov	r1, r2
   1daac:	mla	r3, r3, r5, r4
   1dab0:	mov	r0, r4
   1dab2:	str	r2, [sp, #24]
   1dab4:	ldr.w	r3, [r3, #214]	; 0xd6
   1dab8:	str	r3, [sp, #28]
   1daba:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1dabe:	ldr	r3, [sp, #28]
   1dac0:	ldr	r2, [sp, #24]
   1dac2:	cmp	r0, r3
   1dac4:	beq.n	1dadc <btrfs_check_leaf@@Base+0x1cc>
   1dac6:	ldr	r2, [pc, #220]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1dac8:	movs	r1, #1
   1daca:	ldr	r5, [r7, r2]
   1dacc:	ldr	r2, [pc, #240]	; (1dbc0 <btrfs_check_leaf@@Base+0x2b0>)
   1dace:	str	r0, [sp, #0]
   1dad0:	ldr	r0, [r5, #0]
   1dad2:	add	r2, pc
   1dad4:	blx	9040 <__fprintf_chk@plt+0x4>
   1dad8:	movs	r5, #6
   1dada:	b.n	1d95a <btrfs_check_leaf@@Base+0x4a>
   1dadc:	cbnz	r5, 1db04 <btrfs_check_leaf@@Base+0x1f4>
   1dade:	ldr.w	r2, [r4, #218]	; 0xda
   1dae2:	ldr.w	r3, [r4, #214]	; 0xd6
   1dae6:	add	r3, r2
   1dae8:	ldr.w	r2, [r8, #384]	; 0x180
   1daec:	subs	r2, #101	; 0x65
   1daee:	cmp	r2, r3
   1daf0:	beq.n	1db02 <btrfs_check_leaf@@Base+0x1f2>
   1daf2:	ldr	r1, [pc, #176]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1daf4:	ldr	r0, [r7, r1]
   1daf6:	movs	r1, #1
   1daf8:	str	r2, [sp, #0]
   1dafa:	ldr	r2, [pc, #200]	; (1dbc4 <btrfs_check_leaf@@Base+0x2b4>)
   1dafc:	ldr	r0, [r0, #0]
   1dafe:	add	r2, pc
   1db00:	b.n	1dad4 <btrfs_check_leaf@@Base+0x1c4>
   1db02:	movs	r2, #1
   1db04:	mov	r5, r2
   1db06:	cmp.w	sl, #1
   1db0a:	bls.n	1db12 <btrfs_check_leaf@@Base+0x202>
   1db0c:	ldr	r3, [sp, #20]
   1db0e:	cmp	r3, r5
   1db10:	bhi.n	1da6c <btrfs_check_leaf@@Base+0x15c>
   1db12:	movs	r5, #0
   1db14:	mov	r1, r5
   1db16:	mov	r0, r4
   1db18:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1db1c:	ldr.w	r3, [r8, #384]	; 0x180
   1db20:	subs	r3, #101	; 0x65
   1db22:	cmp	r0, r3
   1db24:	bls.n	1db7a <btrfs_check_leaf@@Base+0x26a>
   1db26:	movs	r2, #0
   1db28:	mov	r1, r9
   1db2a:	mov	r0, r4
   1db2c:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1db30:	mov	r0, r9
   1db32:	bl	294c4 <btrfs_print_key@@Base>
   1db36:	ldr	r3, [pc, #144]	; (1dbc8 <btrfs_check_leaf@@Base+0x2b8>)
   1db38:	ldr	r3, [r7, r3]
   1db3a:	ldr	r0, [r3, #0]
   1db3c:	blx	8b58 <fflush@plt>
   1db40:	ldr	r3, [pc, #96]	; (1dba4 <btrfs_check_leaf@@Base+0x294>)
   1db42:	mov	r1, r5
   1db44:	mov	r0, r4
   1db46:	ldr	r3, [r7, r3]
   1db48:	ldr	r7, [r3, #0]
   1db4a:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1db4e:	ldr.w	r3, [r8, #384]	; 0x180
   1db52:	movs	r2, #0
   1db54:	movs	r1, #1
   1db56:	subs	r3, #101	; 0x65
   1db58:	strd	r3, r2, [sp, #8]
   1db5c:	strd	r0, r2, [sp]
   1db60:	mov	r0, r7
   1db62:	ldr	r2, [pc, #104]	; (1dbcc <btrfs_check_leaf@@Base+0x2bc>)
   1db64:	add	r2, pc
   1db66:	blx	9040 <__fprintf_chk@plt+0x4>
   1db6a:	b.n	1dad8 <btrfs_check_leaf@@Base+0x1c8>
   1db6c:	mov	r5, r6
   1db6e:	add.w	r3, sl, #4294967295	; 0xffffffff
   1db72:	add.w	fp, sp, #36	; 0x24
   1db76:	str	r3, [sp, #20]
   1db78:	b.n	1db06 <btrfs_check_leaf@@Base+0x1f6>
   1db7a:	adds	r5, #1
   1db7c:	cmp	r5, sl
   1db7e:	bne.n	1db14 <btrfs_check_leaf@@Base+0x204>
   1db80:	b.n	1da06 <btrfs_check_leaf@@Base+0xf6>
   1db82:	mov	r2, r6
   1db84:	mov	r0, r4
   1db86:	str	r1, [sp, #20]
   1db88:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   1db8c:	ldr	r1, [sp, #20]
   1db8e:	b.n	1d990 <btrfs_check_leaf@@Base+0x80>
   1db90:	mov	r0, r5
   1db92:	add	sp, #84	; 0x54
   1db94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db98:	bcc.n	1db90 <btrfs_check_leaf@@Base+0x280>
   1db9a:	movs	r4, r0
   1db9c:	lsls	r0, r1, #10
   1db9e:	movs	r0, r0
   1dba0:	bcc.n	1db7c <btrfs_check_leaf@@Base+0x26c>
   1dba2:	movs	r4, r0
   1dba4:	lsls	r4, r3, #10
   1dba6:	movs	r0, r0
   1dba8:	add	sl, r7
   1dbaa:	movs	r2, r0
   1dbac:	add	r0, sp
   1dbae:	movs	r2, r0
   1dbb0:	add	r3, sl
   1dbb2:	movs	r2, r0
   1dbb4:	bcc.n	1dbd0 <btrfs_check_leaf@@Base+0x2c0>
   1dbb6:	movs	r4, r0
   1dbb8:	add	r4, r0
   1dbba:	movs	r2, r0
   1dbbc:	mvns	r0, r5
   1dbbe:	movs	r2, r0
   1dbc0:	mvns	r6, r1
   1dbc2:	movs	r2, r0
   1dbc4:	bics	r3, r7
   1dbc6:	movs	r2, r0
   1dbc8:	lsls	r4, r0, #11
   1dbca:	movs	r0, r0
   1dbcc:	muls	r0, r6
   1dbce:	movs	r2, r0
   1dbd0:	push	{r4, r5, r6, r7, lr}
   1dbd2:	mov	r5, r2
   1dbd4:	ldr	r2, [pc, #100]	; (1dc3c <btrfs_check_leaf@@Base+0x32c>)
   1dbd6:	sub	sp, #28
   1dbd8:	ldr	r3, [pc, #100]	; (1dc40 <btrfs_check_leaf@@Base+0x330>)
   1dbda:	mov	r6, r0
   1dbdc:	add	r2, pc
   1dbde:	mov	r4, r1
   1dbe0:	ldr	r3, [r2, r3]
   1dbe2:	ldr	r3, [r3, #0]
   1dbe4:	str	r3, [sp, #20]
   1dbe6:	mov.w	r3, #0
   1dbea:	add.w	r3, r1, r5, lsl #2
   1dbee:	ldr	r0, [r3, #4]
   1dbf0:	cbz	r0, 1dbfe <btrfs_check_leaf@@Base+0x2ee>
   1dbf2:	mov	r7, sp
   1dbf4:	ldr	r2, [r3, #36]	; 0x24
   1dbf6:	mov	r1, r7
   1dbf8:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1dbfc:	mov	r0, r7
   1dbfe:	cbnz	r5, 1dc28 <btrfs_check_leaf@@Base+0x318>
   1dc00:	mov	r1, r0
   1dc02:	ldr	r2, [r4, #0]
   1dc04:	mov	r0, r6
   1dc06:	bl	1d910 <btrfs_check_leaf@@Base>
   1dc0a:	ldr	r2, [pc, #56]	; (1dc44 <btrfs_check_leaf@@Base+0x334>)
   1dc0c:	cmp	r0, #0
   1dc0e:	ldr	r3, [pc, #48]	; (1dc40 <btrfs_check_leaf@@Base+0x330>)
   1dc10:	add	r2, pc
   1dc12:	ite	ne
   1dc14:	mvnne.w	r0, #4
   1dc18:	moveq	r0, #0
   1dc1a:	ldr	r3, [r2, r3]
   1dc1c:	ldr	r2, [r3, #0]
   1dc1e:	ldr	r3, [sp, #20]
   1dc20:	eors	r2, r3
   1dc22:	beq.n	1dc36 <btrfs_check_leaf@@Base+0x326>
   1dc24:	blx	8c90 <__stack_chk_fail@plt>
   1dc28:	mov	r1, r0
   1dc2a:	ldr.w	r2, [r4, r5, lsl #2]
   1dc2e:	mov	r0, r6
   1dc30:	bl	1d2c0 <btrfs_check_node@@Base>
   1dc34:	b.n	1dc0a <btrfs_check_leaf@@Base+0x2fa>
   1dc36:	add	sp, #28
   1dc38:	pop	{r4, r5, r6, r7, pc}
   1dc3a:	nop
   1dc3c:	bne.n	1dcb8 <btrfs_check_leaf@@Base+0x3a8>
   1dc3e:	movs	r4, r0
   1dc40:	lsls	r0, r1, #10
   1dc42:	movs	r0, r0
   1dc44:	bne.n	1dc58 <btrfs_check_leaf@@Base+0x348>
   1dc46:	movs	r4, r0
   1dc48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc4c:	mov	r5, r2
   1dc4e:	vpush	{d8}
   1dc52:	mov	r7, r3
   1dc54:	ldr	r2, [pc, #596]	; (1deac <btrfs_check_leaf@@Base+0x59c>)
   1dc56:	mov	r9, r0
   1dc58:	ldr	r3, [pc, #596]	; (1deb0 <btrfs_check_leaf@@Base+0x5a0>)
   1dc5a:	add	r2, pc
   1dc5c:	ldr.w	r8, [r5, #4]
   1dc60:	sub	sp, #68	; 0x44
   1dc62:	str	r1, [sp, #16]
   1dc64:	ldr	r3, [r2, r3]
   1dc66:	ldr	r3, [r3, #0]
   1dc68:	str	r3, [sp, #60]	; 0x3c
   1dc6a:	mov.w	r3, #0
   1dc6e:	cmp.w	r8, #0
   1dc72:	beq.n	1dcec <btrfs_check_leaf@@Base+0x3dc>
   1dc74:	ldr.w	r3, [r8, #192]	; 0xc0
   1dc78:	ldr	r2, [r5, #36]	; 0x24
   1dc7a:	subs	r3, #1
   1dc7c:	cmp	r3, r2
   1dc7e:	bls.n	1dcec <btrfs_check_leaf@@Base+0x3dc>
   1dc80:	ldr.w	sl, [r1, #464]	; 0x1d0
   1dc84:	adds	r3, r2, #1
   1dc86:	mov	r1, r8
   1dc88:	ldr	r6, [r5, #0]
   1dc8a:	mov	r2, r3
   1dc8c:	vmov	s16, r3
   1dc90:	mov	r0, sl
   1dc92:	bl	1d4ae <read_node_slot@@Base>
   1dc96:	mov	r4, r0
   1dc98:	str	r0, [sp, #36]	; 0x24
   1dc9a:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1dc9e:	cbnz	r0, 1dcc0 <btrfs_check_leaf@@Base+0x3b0>
   1dca0:	cmn.w	r4, #4096	; 0x1000
   1dca4:	it	ls
   1dca6:	mvnls.w	r4, #4
   1dcaa:	ldr	r2, [pc, #520]	; (1deb4 <btrfs_check_leaf@@Base+0x5a4>)
   1dcac:	ldr	r3, [pc, #512]	; (1deb0 <btrfs_check_leaf@@Base+0x5a0>)
   1dcae:	add	r2, pc
   1dcb0:	ldr	r3, [r2, r3]
   1dcb2:	ldr	r2, [r3, #0]
   1dcb4:	ldr	r3, [sp, #60]	; 0x3c
   1dcb6:	eors	r2, r3
   1dcb8:	beq.w	1dea0 <btrfs_check_leaf@@Base+0x590>
   1dcbc:	blx	8c90 <__stack_chk_fail@plt>
   1dcc0:	mov	r0, r4
   1dcc2:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1dcc6:	cmp	r0, r7
   1dcc8:	bge.n	1dcce <btrfs_check_leaf@@Base+0x3be>
   1dcca:	ldr	r0, [sp, #36]	; 0x24
   1dccc:	b.n	1dce8 <btrfs_check_leaf@@Base+0x3d8>
   1dcce:	add	r3, sp, #36	; 0x24
   1dcd0:	vstr	s16, [sp]
   1dcd4:	str	r3, [sp, #4]
   1dcd6:	mov	r0, r9
   1dcd8:	ldr	r2, [sp, #36]	; 0x24
   1dcda:	mov	r3, r8
   1dcdc:	ldr	r1, [sp, #16]
   1dcde:	bl	1d124 <btrfs_cow_block@@Base>
   1dce2:	mov	r4, r0
   1dce4:	ldr	r0, [sp, #36]	; 0x24
   1dce6:	cbz	r4, 1dcf0 <btrfs_check_leaf@@Base+0x3e0>
   1dce8:	bl	1b4c0 <free_extent_buffer@@Base>
   1dcec:	movs	r4, #1
   1dcee:	b.n	1dcaa <btrfs_check_leaf@@Base+0x39a>
   1dcf0:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1dcf4:	cmp	r7, r0
   1dcf6:	bgt.n	1dcca <btrfs_check_leaf@@Base+0x3ba>
   1dcf8:	ldr.w	r3, [r6, #192]	; 0xc0
   1dcfc:	str	r3, [sp, #12]
   1dcfe:	cmp	r3, #0
   1dd00:	beq.n	1dcca <btrfs_check_leaf@@Base+0x3ba>
   1dd02:	ldr	r3, [sp, #112]	; 0x70
   1dd04:	adds	r7, #25
   1dd06:	mov	fp, r4
   1dd08:	mov	r1, r4
   1dd0a:	rsb	lr, r3, #1
   1dd0e:	ldr	r3, [sp, #12]
   1dd10:	mov.w	r9, #25
   1dd14:	subs	r2, r3, #1
   1dd16:	cmp	r2, lr
   1dd18:	bcs.w	1de5e <btrfs_check_leaf@@Base+0x54e>
   1dd1c:	cmp.w	fp, #0
   1dd20:	beq.n	1dcca <btrfs_check_leaf@@Base+0x3ba>
   1dd22:	ldr	r3, [sp, #112]	; 0x70
   1dd24:	cbnz	r3, 1dd40 <btrfs_check_leaf@@Base+0x430>
   1dd26:	ldr	r3, [sp, #12]
   1dd28:	cmp	r3, fp
   1dd2a:	bne.n	1dd40 <btrfs_check_leaf@@Base+0x430>
   1dd2c:	ldr	r1, [pc, #392]	; (1deb8 <btrfs_check_leaf@@Base+0x5a8>)
   1dd2e:	movs	r3, #1
   1dd30:	ldr	r0, [pc, #392]	; (1debc <btrfs_check_leaf@@Base+0x5ac>)
   1dd32:	movw	r2, #1874	; 0x752
   1dd36:	add	r1, pc
   1dd38:	adds	r1, #233	; 0xe9
   1dd3a:	add	r0, pc
   1dd3c:	bl	1c2be <rb_free_nodes@@Base+0x120>
   1dd40:	ldr	r3, [sp, #36]	; 0x24
   1dd42:	mov	r0, r6
   1dd44:	add.w	sl, sl, #384	; 0x180
   1dd48:	vmov	s15, r3
   1dd4c:	ldr.w	r3, [r3, #192]	; 0xc0
   1dd50:	str	r3, [sp, #20]
   1dd52:	ldr	r3, [sp, #12]
   1dd54:	sub.w	r9, r3, fp
   1dd58:	mov	r1, r9
   1dd5a:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1dd5e:	mov	r1, r6
   1dd60:	mov	r7, r0
   1dd62:	mov	r0, sl
   1dd64:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1dd68:	vmov	r1, s15
   1dd6c:	subs	r2, r7, r0
   1dd6e:	strd	r2, r0, [sp, #24]
   1dd72:	mov	r0, sl
   1dd74:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1dd78:	ldr	r3, [sp, #28]
   1dd7a:	subs	r7, r3, r7
   1dd7c:	ldr	r3, [sp, #16]
   1dd7e:	ldr.w	r3, [r3, #464]	; 0x1d0
   1dd82:	ldr.w	r3, [r3, #384]	; 0x180
   1dd86:	subs	r3, #101	; 0x65
   1dd88:	add.w	r2, r0, #101	; 0x65
   1dd8c:	subs	r3, r3, r0
   1dd8e:	adds	r1, r2, r7
   1dd90:	vmov	r0, s15
   1dd94:	bl	1bc2c <memmove_extent_buffer@@Base>
   1dd98:	ldr	r3, [sp, #16]
   1dd9a:	mov	r1, r6
   1dd9c:	mov	r0, sl
   1dd9e:	ldr.w	r3, [r3, #464]	; 0x1d0
   1dda2:	ldr.w	r2, [r3, #384]	; 0x180
   1dda6:	add	r2, r7
   1dda8:	str	r2, [sp, #28]
   1ddaa:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1ddae:	ldr	r3, [sp, #24]
   1ddb0:	movs	r7, #25
   1ddb2:	ldr	r2, [sp, #28]
   1ddb4:	mul.w	sl, r7, fp
   1ddb8:	mov	r1, r6
   1ddba:	str	r3, [sp, #0]
   1ddbc:	add.w	r3, r0, #101	; 0x65
   1ddc0:	ldr	r0, [sp, #36]	; 0x24
   1ddc2:	bl	1bbe2 <copy_extent_buffer@@Base>
   1ddc6:	ldr	r3, [sp, #20]
   1ddc8:	movs	r2, #101	; 0x65
   1ddca:	ldr	r0, [sp, #36]	; 0x24
   1ddcc:	add.w	r1, sl, r2
   1ddd0:	muls	r3, r7
   1ddd2:	bl	1bc2c <memmove_extent_buffer@@Base>
   1ddd6:	ldr	r0, [sp, #36]	; 0x24
   1ddd8:	mul.w	r3, r7, r9
   1dddc:	movs	r2, #101	; 0x65
   1ddde:	mov	r1, r6
   1dde0:	str.w	sl, [sp]
   1dde4:	adds	r3, #101	; 0x65
   1dde6:	bl	1bbe2 <copy_extent_buffer@@Base>
   1ddea:	ldr	r3, [sp, #20]
   1ddec:	ldr	r2, [sp, #16]
   1ddee:	movs	r1, #0
   1ddf0:	add.w	r0, r3, fp
   1ddf4:	ldr	r3, [sp, #36]	; 0x24
   1ddf6:	adds	r3, #197	; 0xc5
   1ddf8:	str.w	r0, [r3, #-5]
   1ddfc:	ldr.w	r2, [r2, #464]	; 0x1d0
   1de00:	ldr.w	r2, [r2, #384]	; 0x180
   1de04:	subs	r2, #101	; 0x65
   1de06:	cmp	r1, r0
   1de08:	bne.n	1de88 <btrfs_check_leaf@@Base+0x578>
   1de0a:	str.w	r9, [r6, #192]	; 0xc0
   1de0e:	cmp.w	r9, #0
   1de12:	beq.n	1de1a <btrfs_check_leaf@@Base+0x50a>
   1de14:	mov	r0, r6
   1de16:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1de1a:	ldr	r0, [sp, #36]	; 0x24
   1de1c:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1de20:	add	r1, sp, #40	; 0x28
   1de22:	ldr	r0, [sp, #36]	; 0x24
   1de24:	movs	r2, #0
   1de26:	str	r1, [sp, #16]
   1de28:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1de2c:	vmov	r2, s16
   1de30:	mov	r0, r8
   1de32:	ldr	r1, [sp, #16]
   1de34:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1de38:	mov	r0, r8
   1de3a:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1de3e:	ldr	r3, [r5, #32]
   1de40:	cmp	r9, r3
   1de42:	bhi.n	1de98 <btrfs_check_leaf@@Base+0x588>
   1de44:	ldr	r2, [sp, #12]
   1de46:	ldr	r0, [r5, #0]
   1de48:	subs	r3, r3, r2
   1de4a:	add	r3, fp
   1de4c:	str	r3, [r5, #32]
   1de4e:	bl	1b4c0 <free_extent_buffer@@Base>
   1de52:	ldr	r3, [sp, #36]	; 0x24
   1de54:	str	r3, [r5, #0]
   1de56:	ldr	r3, [r5, #36]	; 0x24
   1de58:	adds	r3, #1
   1de5a:	str	r3, [r5, #36]	; 0x24
   1de5c:	b.n	1dcaa <btrfs_check_leaf@@Base+0x39a>
   1de5e:	mla	ip, r9, r2, r6
   1de62:	ldr	r3, [r5, #32]
   1de64:	cmp	r3, r2
   1de66:	it	eq
   1de68:	addeq	r1, r1, r7
   1de6a:	ldr.w	ip, [ip, #218]	; 0xda
   1de6e:	add.w	ip, ip, #25
   1de72:	add	r1, ip
   1de74:	cmp	r1, r0
   1de76:	bhi.w	1dd1c <btrfs_check_leaf@@Base+0x40c>
   1de7a:	add.w	fp, fp, #1
   1de7e:	cmp	r2, #0
   1de80:	beq.w	1dd22 <btrfs_check_leaf@@Base+0x412>
   1de84:	subs	r2, #1
   1de86:	b.n	1dd16 <btrfs_check_leaf@@Base+0x406>
   1de88:	ldr.w	r7, [r3, #21]
   1de8c:	adds	r1, #1
   1de8e:	adds	r3, #25
   1de90:	subs	r2, r2, r7
   1de92:	str.w	r2, [r3, #-8]
   1de96:	b.n	1de06 <btrfs_check_leaf@@Base+0x4f6>
   1de98:	ldr	r0, [sp, #36]	; 0x24
   1de9a:	bl	1b4c0 <free_extent_buffer@@Base>
   1de9e:	b.n	1dcaa <btrfs_check_leaf@@Base+0x39a>
   1dea0:	mov	r0, r4
   1dea2:	add	sp, #68	; 0x44
   1dea4:	vpop	{d8}
   1dea8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1deac:	beq.n	1de2c <btrfs_check_leaf@@Base+0x51c>
   1deae:	movs	r4, r0
   1deb0:	lsls	r0, r1, #10
   1deb2:	movs	r0, r0
   1deb4:	beq.n	1df8c <btrfs_check_leaf@@Base+0x67c>
   1deb6:	movs	r4, r0
   1deb8:	add	lr, sl
   1deba:	movs	r2, r0
   1debc:	strb	r0, [r7, r1]
   1debe:	movs	r2, r0
   1dec0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dec4:	mov	sl, r3
   1dec6:	vpush	{d8}
   1deca:	mov	r4, r2
   1decc:	ldr	r3, [pc, #744]	; (1e1b8 <btrfs_check_leaf@@Base+0x8a8>)
   1dece:	mov	r5, r0
   1ded0:	ldr	r2, [pc, #744]	; (1e1bc <btrfs_check_leaf@@Base+0x8ac>)
   1ded2:	mov	r8, r1
   1ded4:	add	r3, pc
   1ded6:	ldr	r7, [r4, #36]	; 0x24
   1ded8:	sub	sp, #76	; 0x4c
   1deda:	add	r2, pc
   1dedc:	str	r3, [sp, #20]
   1dede:	ldr	r3, [pc, #736]	; (1e1c0 <btrfs_check_leaf@@Base+0x8b0>)
   1dee0:	ldr.w	fp, [sp, #120]	; 0x78
   1dee4:	ldr	r3, [r2, r3]
   1dee6:	ldr	r3, [r3, #0]
   1dee8:	str	r3, [sp, #68]	; 0x44
   1deea:	mov.w	r3, #0
   1deee:	cbz	r7, 1df36 <btrfs_check_leaf@@Base+0x626>
   1def0:	ldr	r1, [r4, #4]
   1def2:	cbz	r1, 1df36 <btrfs_check_leaf@@Base+0x626>
   1def4:	ldr	r6, [r4, #0]
   1def6:	ldr.w	r3, [r6, #192]	; 0xc0
   1defa:	str	r3, [sp, #12]
   1defc:	cbz	r3, 1df36 <btrfs_check_leaf@@Base+0x626>
   1defe:	ldr.w	r9, [r8, #464]	; 0x1d0
   1df02:	subs	r7, #1
   1df04:	mov	r2, r7
   1df06:	mov	r0, r9
   1df08:	bl	1d4ae <read_node_slot@@Base>
   1df0c:	str	r0, [sp, #44]	; 0x2c
   1df0e:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1df12:	cmp	r0, sl
   1df14:	bge.n	1df1a <btrfs_check_leaf@@Base+0x60a>
   1df16:	ldr	r0, [sp, #44]	; 0x2c
   1df18:	b.n	1df32 <btrfs_check_leaf@@Base+0x622>
   1df1a:	add	r3, sp, #44	; 0x2c
   1df1c:	ldr	r2, [sp, #44]	; 0x2c
   1df1e:	strd	r7, r3, [sp]
   1df22:	mov	r1, r8
   1df24:	ldr	r3, [r4, #4]
   1df26:	mov	r0, r5
   1df28:	bl	1d124 <btrfs_cow_block@@Base>
   1df2c:	mov	r7, r0
   1df2e:	ldr	r0, [sp, #44]	; 0x2c
   1df30:	cbz	r7, 1df3a <btrfs_check_leaf@@Base+0x62a>
   1df32:	bl	1b4c0 <free_extent_buffer@@Base>
   1df36:	movs	r7, #1
   1df38:	b.n	1e134 <btrfs_check_leaf@@Base+0x824>
   1df3a:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1df3e:	cmp	sl, r0
   1df40:	bgt.n	1df16 <btrfs_check_leaf@@Base+0x606>
   1df42:	cmp.w	fp, #0
   1df46:	bne.w	1e148 <btrfs_check_leaf@@Base+0x838>
   1df4a:	ldr	r3, [sp, #12]
   1df4c:	add.w	ip, r3, #4294967295	; 0xffffffff
   1df50:	movs	r2, #0
   1df52:	add.w	r1, r6, #197	; 0xc5
   1df56:	add.w	sl, sl, #25
   1df5a:	mov	r5, r2
   1df5c:	cmp	r5, ip
   1df5e:	bne.w	1e14e <btrfs_check_leaf@@Base+0x83e>
   1df62:	cmp	r5, #0
   1df64:	beq.n	1df16 <btrfs_check_leaf@@Base+0x606>
   1df66:	cmp.w	fp, #0
   1df6a:	bne.n	1df88 <btrfs_check_leaf@@Base+0x678>
   1df6c:	ldr.w	r3, [r6, #192]	; 0xc0
   1df70:	cmp	r3, r5
   1df72:	bne.n	1df88 <btrfs_check_leaf@@Base+0x678>
   1df74:	ldr	r1, [pc, #588]	; (1e1c4 <btrfs_check_leaf@@Base+0x8b4>)
   1df76:	movs	r3, #1
   1df78:	ldr	r0, [pc, #588]	; (1e1c8 <btrfs_check_leaf@@Base+0x8b8>)
   1df7a:	movw	r2, #2018	; 0x7e2
   1df7e:	add	r1, pc
   1df80:	adds	r1, #249	; 0xf9
   1df82:	add	r0, pc
   1df84:	bl	1c2be <rb_free_nodes@@Base+0x120>
   1df88:	mov.w	sl, #25
   1df8c:	ldr	r0, [sp, #44]	; 0x2c
   1df8e:	mul.w	r3, sl, r5
   1df92:	mov	r1, r6
   1df94:	str	r3, [sp, #16]
   1df96:	ldr.w	r2, [r0, #192]	; 0xc0
   1df9a:	str	r3, [sp, #0]
   1df9c:	movs	r3, #101	; 0x65
   1df9e:	mul.w	r2, sl, r2
   1dfa2:	add	r2, r3
   1dfa4:	bl	1bbe2 <copy_extent_buffer@@Base>
   1dfa8:	subs	r3, r5, #1
   1dfaa:	ldr.w	fp, [sp, #44]	; 0x2c
   1dfae:	mla	r3, sl, r3, r6
   1dfb2:	add.w	r2, r3, #197	; 0xc5
   1dfb6:	str	r2, [sp, #28]
   1dfb8:	ldr.w	r2, [r3, #214]	; 0xd6
   1dfbc:	ldr.w	r3, [r8, #464]	; 0x1d0
   1dfc0:	ldr.w	r3, [r3, #384]	; 0x180
   1dfc4:	subs	r3, #101	; 0x65
   1dfc6:	strd	r3, r2, [sp, #32]
   1dfca:	subs	r1, r3, r2
   1dfcc:	add.w	r3, r9, #384	; 0x180
   1dfd0:	str	r1, [sp, #24]
   1dfd2:	mov	r1, fp
   1dfd4:	mov	r0, r3
   1dfd6:	vmov	s16, r3
   1dfda:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1dfde:	ldr	r3, [sp, #32]
   1dfe0:	ldr	r2, [sp, #36]	; 0x24
   1dfe2:	rsb	r3, r3, #101	; 0x65
   1dfe6:	adds	r1, r3, r2
   1dfe8:	ldr	r3, [sp, #24]
   1dfea:	str	r3, [sp, #0]
   1dfec:	add.w	r3, r2, #101	; 0x65
   1dff0:	adds	r2, r1, r0
   1dff2:	mov	r0, fp
   1dff4:	mov	r1, r6
   1dff6:	bl	1bbe2 <copy_extent_buffer@@Base>
   1dffa:	ldr.w	r9, [sp, #44]	; 0x2c
   1dffe:	ldr	r1, [pc, #460]	; (1e1cc <btrfs_check_leaf@@Base+0x8bc>)
   1e000:	movw	r2, #2035	; 0x7f3
   1e004:	ldr	r0, [pc, #456]	; (1e1d0 <btrfs_check_leaf@@Base+0x8c0>)
   1e006:	ldr.w	fp, [r9, #192]	; 0xc0
   1e00a:	add	r1, pc
   1e00c:	adds	r1, #249	; 0xf9
   1e00e:	add	r0, pc
   1e010:	clz	r3, fp
   1e014:	lsrs	r3, r3, #5
   1e016:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e01a:	add.w	r3, fp, #4294967295	; 0xffffffff
   1e01e:	add.w	r0, fp, r5
   1e022:	mov	r2, fp
   1e024:	mla	r3, sl, r3, r9
   1e028:	ldr.w	r1, [r3, #214]	; 0xd6
   1e02c:	add.w	r3, r9, #197	; 0xc5
   1e030:	str	r3, [sp, #24]
   1e032:	adds	r1, #101	; 0x65
   1e034:	cmp	r0, r2
   1e036:	bhi.w	1e16a <btrfs_check_leaf@@Base+0x85a>
   1e03a:	ldr	r3, [sp, #12]
   1e03c:	str.w	r0, [r9, #192]	; 0xc0
   1e040:	cmp	r3, r5
   1e042:	bcs.n	1e070 <btrfs_check_leaf@@Base+0x760>
   1e044:	ldr	r2, [sp, #20]
   1e046:	movs	r1, #1
   1e048:	ldr	r3, [pc, #392]	; (1e1d4 <btrfs_check_leaf@@Base+0x8c4>)
   1e04a:	ldr	r0, [r2, r3]
   1e04c:	ldr	r3, [sp, #12]
   1e04e:	ldr	r2, [pc, #392]	; (1e1d8 <btrfs_check_leaf@@Base+0x8c8>)
   1e050:	str	r3, [sp, #0]
   1e052:	add	r2, pc
   1e054:	mov	r3, r5
   1e056:	ldr	r0, [r0, #0]
   1e058:	blx	9040 <__fprintf_chk@plt+0x4>
   1e05c:	ldr	r1, [pc, #380]	; (1e1dc <btrfs_check_leaf@@Base+0x8cc>)
   1e05e:	ldr	r0, [pc, #384]	; (1e1e0 <btrfs_check_leaf@@Base+0x8d0>)
   1e060:	movs	r3, #1
   1e062:	add	r1, pc
   1e064:	movw	r2, #2052	; 0x804
   1e068:	adds	r1, #249	; 0xf9
   1e06a:	add	r0, pc
   1e06c:	bl	1c2be <rb_free_nodes@@Base+0x120>
   1e070:	ldr	r3, [sp, #12]
   1e072:	cmp	r3, r5
   1e074:	bls.n	1e0b8 <btrfs_check_leaf@@Base+0x7a8>
   1e076:	ldr	r3, [sp, #28]
   1e078:	mov	r1, r6
   1e07a:	vmov	r0, s16
   1e07e:	ldr.w	sl, [r3, #17]
   1e082:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1e086:	ldr.w	r3, [r8, #464]	; 0x1d0
   1e08a:	ldr.w	r1, [r3, #384]	; 0x180
   1e08e:	sub.w	r1, r1, sl
   1e092:	sub.w	r3, sl, r0
   1e096:	add.w	r2, r0, #101	; 0x65
   1e09a:	add	r1, r0
   1e09c:	mov	r0, r6
   1e09e:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e0a2:	ldr.w	r3, [r6, #192]	; 0xc0
   1e0a6:	movs	r2, #25
   1e0a8:	movs	r1, #101	; 0x65
   1e0aa:	subs	r3, r3, r5
   1e0ac:	mov	r0, r6
   1e0ae:	muls	r3, r2
   1e0b0:	ldr	r2, [sp, #16]
   1e0b2:	adds	r2, #101	; 0x65
   1e0b4:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e0b8:	ldr	r3, [sp, #12]
   1e0ba:	add.w	ip, r6, #197	; 0xc5
   1e0be:	movs	r2, #0
   1e0c0:	movs	r0, #25
   1e0c2:	sub.w	r9, r3, r5
   1e0c6:	str.w	r9, [r6, #192]	; 0xc0
   1e0ca:	ldr.w	r3, [r8, #464]	; 0x1d0
   1e0ce:	ldr.w	r3, [r3, #384]	; 0x180
   1e0d2:	subs	r3, #101	; 0x65
   1e0d4:	cmp	r9, r2
   1e0d6:	bne.n	1e188 <btrfs_check_leaf@@Base+0x878>
   1e0d8:	ldr	r0, [sp, #44]	; 0x2c
   1e0da:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e0de:	cmp.w	r9, #0
   1e0e2:	beq.n	1e0ea <btrfs_check_leaf@@Base+0x7da>
   1e0e4:	mov	r0, r6
   1e0e6:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e0ea:	add.w	r9, sp, #48	; 0x30
   1e0ee:	movs	r2, #0
   1e0f0:	mov	r0, r6
   1e0f2:	mov	r1, r9
   1e0f4:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1e0f8:	movs	r3, #1
   1e0fa:	mov	r2, r9
   1e0fc:	mov	r1, r4
   1e0fe:	mov	r0, r8
   1e100:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1e104:	ldr	r3, [r4, #32]
   1e106:	cmp	r5, r3
   1e108:	ble.n	1e19c <btrfs_check_leaf@@Base+0x88c>
   1e10a:	add	r3, fp
   1e10c:	ldr	r0, [r4, #0]
   1e10e:	str	r3, [r4, #32]
   1e110:	bl	1b4c0 <free_extent_buffer@@Base>
   1e114:	ldr	r3, [sp, #44]	; 0x2c
   1e116:	str	r3, [r4, #0]
   1e118:	ldr	r3, [r4, #36]	; 0x24
   1e11a:	subs	r3, #1
   1e11c:	str	r3, [r4, #36]	; 0x24
   1e11e:	ldr	r3, [r4, #32]
   1e120:	mov.w	r2, #2096	; 0x830
   1e124:	ldr	r1, [pc, #188]	; (1e1e4 <btrfs_check_leaf@@Base+0x8d4>)
   1e126:	ldr	r0, [pc, #192]	; (1e1e8 <btrfs_check_leaf@@Base+0x8d8>)
   1e128:	add	r1, pc
   1e12a:	lsrs	r3, r3, #31
   1e12c:	adds	r1, #249	; 0xf9
   1e12e:	add	r0, pc
   1e130:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e134:	ldr	r2, [pc, #180]	; (1e1ec <btrfs_check_leaf@@Base+0x8dc>)
   1e136:	ldr	r3, [pc, #136]	; (1e1c0 <btrfs_check_leaf@@Base+0x8b0>)
   1e138:	add	r2, pc
   1e13a:	ldr	r3, [r2, r3]
   1e13c:	ldr	r2, [r3, #0]
   1e13e:	ldr	r3, [sp, #68]	; 0x44
   1e140:	eors	r2, r3
   1e142:	beq.n	1e1aa <btrfs_check_leaf@@Base+0x89a>
   1e144:	blx	8c90 <__stack_chk_fail@plt>
   1e148:	ldr.w	ip, [sp, #12]
   1e14c:	b.n	1df50 <btrfs_check_leaf@@Base+0x640>
   1e14e:	ldr	r3, [r4, #32]
   1e150:	adds	r1, #25
   1e152:	cmp	r3, r5
   1e154:	ldr.w	r3, [r1, #-4]
   1e158:	it	eq
   1e15a:	addeq	r2, sl
   1e15c:	adds	r3, #25
   1e15e:	add	r2, r3
   1e160:	cmp	r2, r0
   1e162:	bhi.w	1df62 <btrfs_check_leaf@@Base+0x652>
   1e166:	adds	r5, #1
   1e168:	b.n	1df5c <btrfs_check_leaf@@Base+0x64c>
   1e16a:	ldr	r3, [sp, #24]
   1e16c:	mla	ip, sl, r2, r3
   1e170:	ldr.w	r3, [r8, #464]	; 0x1d0
   1e174:	adds	r2, #1
   1e176:	ldr.w	r3, [r3, #384]	; 0x180
   1e17a:	ldr.w	lr, [ip, #17]
   1e17e:	subs	r3, r1, r3
   1e180:	add	r3, lr
   1e182:	str.w	r3, [ip, #17]
   1e186:	b.n	1e034 <btrfs_check_leaf@@Base+0x724>
   1e188:	mla	r1, r0, r2, ip
   1e18c:	adds	r2, #1
   1e18e:	ldr.w	lr, [r1, #21]
   1e192:	sub.w	r3, r3, lr
   1e196:	str.w	r3, [r1, #17]
   1e19a:	b.n	1e0d4 <btrfs_check_leaf@@Base+0x7c4>
   1e19c:	ldr	r0, [sp, #44]	; 0x2c
   1e19e:	bl	1b4c0 <free_extent_buffer@@Base>
   1e1a2:	ldr	r3, [r4, #32]
   1e1a4:	subs	r5, r3, r5
   1e1a6:	str	r5, [r4, #32]
   1e1a8:	b.n	1e11e <btrfs_check_leaf@@Base+0x80e>
   1e1aa:	mov	r0, r7
   1e1ac:	add	sp, #76	; 0x4c
   1e1ae:	vpop	{d8}
   1e1b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1b6:	nop
   1e1b8:	ldmia	r6, {r2, r6}
   1e1ba:	movs	r4, r0
   1e1bc:	ldmia	r6!, {r1, r2, r3, r4, r5}
   1e1be:	movs	r4, r0
   1e1c0:	lsls	r0, r1, #10
   1e1c2:	movs	r0, r0
   1e1c4:	cmp	r6, r1
   1e1c6:	movs	r2, r0
   1e1c8:	strh	r0, [r6, r0]
   1e1ca:	movs	r2, r0
   1e1cc:	tst	r2, r0
   1e1ce:	movs	r2, r0
   1e1d0:	subs	r6, #236	; 0xec
   1e1d2:	movs	r2, r0
   1e1d4:	lsls	r4, r3, #10
   1e1d6:	movs	r0, r0
   1e1d8:	subs	r6, #190	; 0xbe
   1e1da:	movs	r2, r0
   1e1dc:	sbcs	r2, r5
   1e1de:	movs	r2, r0
   1e1e0:	str	r0, [r1, r5]
   1e1e2:	movs	r2, r0
   1e1e4:	lsrs	r4, r4
   1e1e6:	movs	r2, r0
   1e1e8:	subs	r5, #247	; 0xf7
   1e1ea:	movs	r2, r0
   1e1ec:	ldmia	r3!, {r5, r6, r7}
   1e1ee:	movs	r4, r0
   1e1f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1f4:	mov	r5, r3
   1e1f6:	vpush	{d8}
   1e1fa:	mov	r6, r1
   1e1fc:	ldr.w	r3, [pc, #1264]	; 1e6f0 <btrfs_check_leaf@@Base+0xde0>
   1e200:	sub	sp, #116	; 0x74
   1e202:	str	r2, [sp, #48]	; 0x30
   1e204:	ldr.w	r2, [pc, #1260]	; 1e6f4 <btrfs_check_leaf@@Base+0xde4>
   1e208:	str	r0, [sp, #44]	; 0x2c
   1e20a:	add	r2, pc
   1e20c:	ldr	r3, [r2, r3]
   1e20e:	ldr	r3, [r3, #0]
   1e210:	str	r3, [sp, #108]	; 0x6c
   1e212:	mov.w	r3, #0
   1e216:	ldr	r3, [sp, #164]	; 0xa4
   1e218:	cbz	r3, 1e23e <btrfs_check_leaf@@Base+0x92e>
   1e21a:	ldr	r2, [r5, #0]
   1e21c:	movs	r1, #25
   1e21e:	ldr	r3, [r5, #32]
   1e220:	mla	r3, r1, r3, r2
   1e224:	ldr.w	r2, [r3, #218]	; 0xda
   1e228:	ldr	r3, [sp, #160]	; 0xa0
   1e22a:	add	r3, r1
   1e22c:	add	r2, r3
   1e22e:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e232:	ldr.w	r3, [r3, #384]	; 0x180
   1e236:	subs	r3, #101	; 0x65
   1e238:	cmp	r2, r3
   1e23a:	bhi.w	1e6dc <btrfs_check_leaf@@Base+0xdcc>
   1e23e:	ldr	r3, [sp, #160]	; 0xa0
   1e240:	cmp	r3, #0
   1e242:	bne.n	1e318 <btrfs_check_leaf@@Base+0xa08>
   1e244:	ldr	r3, [r5, #4]
   1e246:	cbnz	r3, 1e25c <btrfs_check_leaf@@Base+0x94c>
   1e248:	ldr	r0, [sp, #44]	; 0x2c
   1e24a:	movs	r3, #1
   1e24c:	mov	r2, r5
   1e24e:	mov	r1, r6
   1e250:	bl	1c762 <add_root_to_dirty_list@@Base+0x2e>
   1e254:	mov	r9, r0
   1e256:	cmp	r0, #0
   1e258:	bne.w	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e25c:	movs	r3, #0
   1e25e:	str	r3, [sp, #52]	; 0x34
   1e260:	mov	r9, r3
   1e262:	add	r3, sp, #68	; 0x44
   1e264:	vmov	s16, r3
   1e268:	ldr.w	r3, [pc, #1164]	; 1e6f8 <btrfs_check_leaf@@Base+0xde8>
   1e26c:	add	r3, pc
   1e26e:	addw	r3, r3, #275	; 0x113
   1e272:	vmov	s17, r3
   1e276:	ldr.w	r8, [r5]
   1e27a:	ldr.w	fp, [r5, #32]
   1e27e:	ldr.w	r3, [r8, #192]	; 0xc0
   1e282:	str	r3, [sp, #32]
   1e284:	adds	r3, #1
   1e286:	cmp.w	fp, r3, lsr #1
   1e28a:	mov.w	sl, r3, lsr #1
   1e28e:	blt.w	1e3ce <btrfs_check_leaf@@Base+0xabe>
   1e292:	ldr	r3, [sp, #32]
   1e294:	cmp	r3, #1
   1e296:	bne.n	1e376 <btrfs_check_leaf@@Base+0xa66>
   1e298:	ldr	r3, [sp, #32]
   1e29a:	cmp	fp, r3
   1e29c:	bcc.n	1e39a <btrfs_check_leaf@@Base+0xa8a>
   1e29e:	ldr	r3, [sp, #48]	; 0x30
   1e2a0:	movs	r7, #0
   1e2a2:	ldr.w	r2, [r3, #9]
   1e2a6:	ldr.w	r3, [r3, #13]
   1e2aa:	str.w	r2, [sp, #77]	; 0x4d
   1e2ae:	str.w	r3, [sp, #81]	; 0x51
   1e2b2:	ldr	r3, [sp, #48]	; 0x30
   1e2b4:	ldrb	r3, [r3, #8]
   1e2b6:	strb.w	r3, [sp, #76]	; 0x4c
   1e2ba:	ldr	r3, [sp, #48]	; 0x30
   1e2bc:	ldr	r2, [r3, #0]
   1e2be:	ldr	r3, [r3, #4]
   1e2c0:	strd	r2, r3, [sp, #68]	; 0x44
   1e2c4:	movs	r2, #0
   1e2c6:	movs	r3, #0
   1e2c8:	strd	r2, r3, [sp, #24]
   1e2cc:	ldrd	r2, r3, [r8, #40]	; 0x28
   1e2d0:	vstr	s16, [sp, #8]
   1e2d4:	ldr.w	r1, [r6, #464]	; 0x1d0
   1e2d8:	strd	r2, r3, [sp, #16]
   1e2dc:	movs	r3, #0
   1e2de:	ldr.w	r2, [r6, #447]	; 0x1bf
   1e2e2:	str	r3, [sp, #12]
   1e2e4:	ldr.w	r3, [r6, #451]	; 0x1c3
   1e2e8:	ldr	r0, [sp, #44]	; 0x2c
   1e2ea:	strd	r2, r3, [sp]
   1e2ee:	ldr.w	r2, [r1, #384]	; 0x180
   1e2f2:	mov	r1, r6
   1e2f4:	bl	27304 <btrfs_alloc_free_block@@Base>
   1e2f8:	cmn.w	r0, #4096	; 0x1000
   1e2fc:	mov	r4, r0
   1e2fe:	bls.w	1e436 <btrfs_check_leaf@@Base+0xb26>
   1e302:	ldr	r1, [pc, #1016]	; (1e6fc <btrfs_check_leaf@@Base+0xdec>)
   1e304:	movs	r3, #1
   1e306:	ldr	r0, [pc, #1016]	; (1e700 <btrfs_check_leaf@@Base+0xdf0>)
   1e308:	mov.w	r2, #2272	; 0x8e0
   1e30c:	add	r1, pc
   1e30e:	add.w	r1, r1, #264	; 0x108
   1e312:	add	r0, pc
   1e314:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1e318:	ldr	r3, [sp, #48]	; 0x30
   1e31a:	ldrb	r3, [r3, #8]
   1e31c:	cmp	r3, #84	; 0x54
   1e31e:	beq.n	1e244 <btrfs_check_leaf@@Base+0x934>
   1e320:	ldr	r3, [sp, #160]	; 0xa0
   1e322:	movs	r4, #0
   1e324:	ldr	r0, [sp, #44]	; 0x2c
   1e326:	mov	r2, r5
   1e328:	mov	r1, r6
   1e32a:	str	r4, [sp, #0]
   1e32c:	bl	1dc48 <btrfs_check_leaf@@Base+0x338>
   1e330:	subs.w	r9, r0, #0
   1e334:	blt.n	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e336:	bne.n	1e34c <btrfs_check_leaf@@Base+0xa3c>
   1e338:	ldr	r0, [r5, #0]
   1e33a:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1e33e:	ldr	r3, [sp, #160]	; 0xa0
   1e340:	cmp	r0, r3
   1e342:	blt.w	1e244 <btrfs_check_leaf@@Base+0x934>
   1e346:	mov.w	r9, #0
   1e34a:	b.n	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e34c:	ldr	r3, [sp, #160]	; 0xa0
   1e34e:	mov	r2, r5
   1e350:	ldr	r0, [sp, #44]	; 0x2c
   1e352:	mov	r1, r6
   1e354:	str	r4, [sp, #0]
   1e356:	bl	1dec0 <btrfs_check_leaf@@Base+0x5b0>
   1e35a:	subs.w	r9, r0, #0
   1e35e:	bge.n	1e338 <btrfs_check_leaf@@Base+0xa28>
   1e360:	ldr	r2, [pc, #928]	; (1e704 <btrfs_check_leaf@@Base+0xdf4>)
   1e362:	ldr	r3, [pc, #908]	; (1e6f0 <btrfs_check_leaf@@Base+0xde0>)
   1e364:	add	r2, pc
   1e366:	ldr	r3, [r2, r3]
   1e368:	ldr	r2, [r3, #0]
   1e36a:	ldr	r3, [sp, #108]	; 0x6c
   1e36c:	eors	r2, r3
   1e36e:	beq.w	1e6e2 <btrfs_check_leaf@@Base+0xdd2>
   1e372:	blx	8c90 <__stack_chk_fail@plt>
   1e376:	ldr	r3, [sp, #32]
   1e378:	mov	r1, sl
   1e37a:	mov	r0, r8
   1e37c:	sub.w	r2, r3, sl
   1e380:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1e384:	ldr	r3, [sp, #160]	; 0xa0
   1e386:	add	r0, r3
   1e388:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e38c:	ldr.w	r3, [r3, #384]	; 0x180
   1e390:	subs	r3, #101	; 0x65
   1e392:	cmp	r0, r3
   1e394:	bhi.n	1e298 <btrfs_check_leaf@@Base+0x988>
   1e396:	movs	r7, #1
   1e398:	b.n	1e3c0 <btrfs_check_leaf@@Base+0xab0>
   1e39a:	ldr	r3, [sp, #32]
   1e39c:	mov	r1, fp
   1e39e:	mov	r0, r8
   1e3a0:	mov	sl, fp
   1e3a2:	sub.w	r2, r3, fp
   1e3a6:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1e3aa:	ldr	r3, [sp, #160]	; 0xa0
   1e3ac:	add	r0, r3
   1e3ae:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e3b2:	ldr.w	r3, [r3, #384]	; 0x180
   1e3b6:	subs	r3, #101	; 0x65
   1e3b8:	cmp	r0, r3
   1e3ba:	ite	hi
   1e3bc:	movhi	r7, #2
   1e3be:	movls	r7, #1
   1e3c0:	vmov	r1, s16
   1e3c4:	mov	r2, sl
   1e3c6:	mov	r0, r8
   1e3c8:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1e3cc:	b.n	1e2c4 <btrfs_check_leaf@@Base+0x9b4>
   1e3ce:	mov	r2, sl
   1e3d0:	movs	r1, #0
   1e3d2:	mov	r0, r8
   1e3d4:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1e3d8:	ldr	r3, [sp, #160]	; 0xa0
   1e3da:	add	r0, r3
   1e3dc:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e3e0:	ldr.w	r3, [r3, #384]	; 0x180
   1e3e4:	subs	r3, #101	; 0x65
   1e3e6:	cmp	r0, r3
   1e3e8:	bls.n	1e396 <btrfs_check_leaf@@Base+0xa86>
   1e3ea:	ldr	r3, [sp, #164]	; 0xa4
   1e3ec:	cbnz	r3, 1e426 <btrfs_check_leaf@@Base+0xb16>
   1e3ee:	ldr	r3, [sp, #160]	; 0xa0
   1e3f0:	cbz	r3, 1e426 <btrfs_check_leaf@@Base+0xb16>
   1e3f2:	cmp.w	fp, #0
   1e3f6:	beq.w	1e29e <btrfs_check_leaf@@Base+0x98e>
   1e3fa:	ldr	r3, [sp, #32]
   1e3fc:	cmp	fp, r3
   1e3fe:	beq.n	1e432 <btrfs_check_leaf@@Base+0xb22>
   1e400:	sub.w	r2, r3, fp
   1e404:	mov	r1, fp
   1e406:	mov	r0, r8
   1e408:	mov	sl, fp
   1e40a:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1e40e:	ldr	r3, [sp, #160]	; 0xa0
   1e410:	add	r0, r3
   1e412:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e416:	ldr.w	r3, [r3, #384]	; 0x180
   1e41a:	subs	r3, #101	; 0x65
   1e41c:	cmp	r0, r3
   1e41e:	ite	ls
   1e420:	movls	r7, #1
   1e422:	movhi	r7, #2
   1e424:	b.n	1e3c0 <btrfs_check_leaf@@Base+0xab0>
   1e426:	cmp.w	fp, #0
   1e42a:	bne.n	1e3fa <btrfs_check_leaf@@Base+0xaea>
   1e42c:	movs	r7, #1
   1e42e:	mov	sl, r7
   1e430:	b.n	1e3c0 <btrfs_check_leaf@@Base+0xab0>
   1e432:	mov	sl, fp
   1e434:	b.n	1e396 <btrfs_check_leaf@@Base+0xa86>
   1e436:	movs	r2, #0
   1e438:	movs	r3, #101	; 0x65
   1e43a:	mov	r1, r2
   1e43c:	bl	1bc42 <memset_extent_buffer@@Base>
   1e440:	ldr	r3, [r4, #40]	; 0x28
   1e442:	mov	r0, r4
   1e444:	str.w	r3, [r4, #144]	; 0x90
   1e448:	ldr	r3, [r4, #44]	; 0x2c
   1e44a:	str.w	r3, [r4, #148]	; 0x94
   1e44e:	ldr	r3, [sp, #44]	; 0x2c
   1e450:	ldrd	r2, r3, [r3, #8]
   1e454:	str.w	r2, [r4, #176]	; 0xb0
   1e458:	str.w	r3, [r4, #180]	; 0xb4
   1e45c:	ldr.w	r2, [r4, #152]	; 0x98
   1e460:	ldr.w	r3, [r4, #156]	; 0x9c
   1e464:	bic.w	r3, r3, #4278190080	; 0xff000000
   1e468:	str.w	r2, [r4, #152]	; 0x98
   1e46c:	orr.w	r3, r3, #16777216	; 0x1000000
   1e470:	str.w	r3, [r4, #156]	; 0x9c
   1e474:	ldr.w	r2, [r6, #447]	; 0x1bf
   1e478:	ldr.w	r3, [r6, #451]	; 0x1c3
   1e47c:	str.w	r2, [r4, #184]	; 0xb8
   1e480:	movs	r2, #32
   1e482:	str.w	r3, [r4, #188]	; 0xbc
   1e486:	mov.w	r3, #0
   1e48a:	strb.w	r3, [r4, #196]	; 0xc4
   1e48e:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e492:	ldr.w	r1, [r3, #352]	; 0x160
   1e496:	movs	r3, #16
   1e498:	add	r1, r3
   1e49a:	bl	1bbd0 <write_extent_buffer@@Base>
   1e49e:	ldr.w	r1, [r6, #464]	; 0x1d0
   1e4a2:	movs	r3, #16
   1e4a4:	movs	r2, #64	; 0x40
   1e4a6:	mov	r0, r4
   1e4a8:	bl	1bbd0 <write_extent_buffer@@Base>
   1e4ac:	ldr.w	r1, [r6, #464]	; 0x1d0
   1e4b0:	ldr.w	r2, [r6, #200]	; 0xc8
   1e4b4:	ldr.w	r3, [r6, #204]	; 0xcc
   1e4b8:	ldr.w	r1, [r1, #384]	; 0x180
   1e4bc:	adds	r2, r2, r1
   1e4be:	str.w	r2, [r6, #200]	; 0xc8
   1e4c2:	adc.w	r3, r3, #0
   1e4c6:	str.w	r3, [r6, #204]	; 0xcc
   1e4ca:	cmp	r7, #0
   1e4cc:	bne.n	1e572 <btrfs_check_leaf@@Base+0xc62>
   1e4ce:	ldrd	r2, r3, [r4, #40]	; 0x28
   1e4d2:	cmp	fp, sl
   1e4d4:	ldr	r0, [sp, #44]	; 0x2c
   1e4d6:	add.w	r1, r6, #464	; 0x1d0
   1e4da:	strb.w	r7, [r4, #192]	; 0xc0
   1e4de:	add.w	r0, r0, #8
   1e4e2:	strd	r2, r3, [sp, #32]
   1e4e6:	strb.w	r7, [r4, #193]	; 0xc1
   1e4ea:	strb.w	r7, [r4, #194]	; 0xc2
   1e4ee:	strb.w	r7, [r4, #195]	; 0xc3
   1e4f2:	blt.n	1e52e <btrfs_check_leaf@@Base+0xc1e>
   1e4f4:	movs	r3, #1
   1e4f6:	str	r3, [sp, #12]
   1e4f8:	ldr	r3, [r5, #36]	; 0x24
   1e4fa:	adds	r3, #1
   1e4fc:	str	r3, [sp, #8]
   1e4fe:	ldrd	r2, r3, [sp, #32]
   1e502:	strd	r2, r3, [sp]
   1e506:	mov	r2, r5
   1e508:	vmov	r3, s16
   1e50c:	bl	1c304 <rb_free_nodes@@Base+0x166>
   1e510:	cmp	r0, #0
   1e512:	it	ne
   1e514:	movne	r9, r0
   1e516:	ldr	r0, [r5, #0]
   1e518:	bl	1b4c0 <free_extent_buffer@@Base>
   1e51c:	ldr	r3, [r5, #36]	; 0x24
   1e51e:	str	r4, [r5, #0]
   1e520:	adds	r3, #1
   1e522:	str	r7, [r5, #32]
   1e524:	str	r3, [r5, #36]	; 0x24
   1e526:	mov	r0, r4
   1e528:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e52c:	b.n	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e52e:	ldr	r3, [r5, #36]	; 0x24
   1e530:	mov.w	r8, #1
   1e534:	str.w	r8, [sp, #12]
   1e538:	str	r3, [sp, #8]
   1e53a:	ldrd	r2, r3, [sp, #32]
   1e53e:	strd	r2, r3, [sp]
   1e542:	mov	r2, r5
   1e544:	vmov	r3, s16
   1e548:	bl	1c304 <rb_free_nodes@@Base+0x166>
   1e54c:	cmp	r0, #0
   1e54e:	it	ne
   1e550:	movne	r9, r0
   1e552:	ldr	r0, [r5, #0]
   1e554:	bl	1b4c0 <free_extent_buffer@@Base>
   1e558:	ldr	r3, [r5, #36]	; 0x24
   1e55a:	str	r4, [r5, #0]
   1e55c:	str	r7, [r5, #32]
   1e55e:	cmp	r3, #0
   1e560:	bne.n	1e526 <btrfs_check_leaf@@Base+0xc16>
   1e562:	vmov	r2, s16
   1e566:	mov	r3, r8
   1e568:	mov	r1, r5
   1e56a:	mov	r0, r6
   1e56c:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1e570:	b.n	1e526 <btrfs_check_leaf@@Base+0xc16>
   1e572:	ldr	r3, [sp, #32]
   1e574:	mov	r1, sl
   1e576:	mov	r0, r8
   1e578:	sub.w	r9, r3, sl
   1e57c:	str.w	r9, [r4, #192]	; 0xc0
   1e580:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1e584:	mov	r1, r8
   1e586:	str	r0, [sp, #32]
   1e588:	ldr.w	r0, [r6, #464]	; 0x1d0
   1e58c:	add.w	r0, r0, #384	; 0x180
   1e590:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1e594:	ldr	r3, [sp, #32]
   1e596:	movs	r2, #25
   1e598:	mov	r1, r8
   1e59a:	subs	r3, r3, r0
   1e59c:	str	r3, [sp, #60]	; 0x3c
   1e59e:	mul.w	r3, r2, sl
   1e5a2:	str	r0, [sp, #56]	; 0x38
   1e5a4:	mul.w	r2, r2, r9
   1e5a8:	mov	r0, r4
   1e5aa:	adds	r3, #101	; 0x65
   1e5ac:	str	r2, [sp, #0]
   1e5ae:	movs	r2, #101	; 0x65
   1e5b0:	bl	1bbe2 <copy_extent_buffer@@Base>
   1e5b4:	ldr.w	r0, [r6, #464]	; 0x1d0
   1e5b8:	ldr	r3, [sp, #56]	; 0x38
   1e5ba:	mov	r1, r8
   1e5bc:	add.w	r0, r0, #384	; 0x180
   1e5c0:	ldr	r2, [r0, #0]
   1e5c2:	add	r2, r3
   1e5c4:	ldr	r3, [sp, #32]
   1e5c6:	subs	r2, r2, r3
   1e5c8:	str	r2, [sp, #32]
   1e5ca:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1e5ce:	ldr	r3, [sp, #60]	; 0x3c
   1e5d0:	ldr	r2, [sp, #32]
   1e5d2:	mov	r1, r8
   1e5d4:	str	r3, [sp, #0]
   1e5d6:	add.w	r3, r0, #101	; 0x65
   1e5da:	mov	r0, r4
   1e5dc:	bl	1bbe2 <copy_extent_buffer@@Base>
   1e5e0:	mov	r1, sl
   1e5e2:	mov	r0, r8
   1e5e4:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1e5e8:	ldr.w	r3, [r6, #464]	; 0x1d0
   1e5ec:	add.w	r2, r4, #197	; 0xc5
   1e5f0:	ldr.w	r3, [r3, #384]	; 0x180
   1e5f4:	subs	r3, #101	; 0x65
   1e5f6:	subs	r0, r3, r0
   1e5f8:	movs	r3, #0
   1e5fa:	cmp	r9, r3
   1e5fc:	bgt.n	1e6c4 <btrfs_check_leaf@@Base+0xdb4>
   1e5fe:	add	r3, sp, #88	; 0x58
   1e600:	movs	r2, #0
   1e602:	mov	r0, r4
   1e604:	str.w	sl, [r8, #192]	; 0xc0
   1e608:	mov	r1, r3
   1e60a:	str	r3, [sp, #32]
   1e60c:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1e610:	movs	r2, #1
   1e612:	str	r2, [sp, #12]
   1e614:	ldr	r2, [r5, #36]	; 0x24
   1e616:	ldr	r3, [sp, #32]
   1e618:	adds	r2, #1
   1e61a:	str	r2, [sp, #8]
   1e61c:	ldrd	r0, r1, [r4, #40]	; 0x28
   1e620:	mov	r2, r5
   1e622:	strd	r0, r1, [sp]
   1e626:	add.w	r1, r6, #464	; 0x1d0
   1e62a:	ldr	r0, [sp, #44]	; 0x2c
   1e62c:	adds	r0, #8
   1e62e:	bl	1c304 <rb_free_nodes@@Base+0x166>
   1e632:	mov	r9, r0
   1e634:	mov	r0, r4
   1e636:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e63a:	mov	r0, r8
   1e63c:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e640:	ldr	r3, [r5, #32]
   1e642:	ldr	r0, [pc, #196]	; (1e708 <btrfs_check_leaf@@Base+0xdf8>)
   1e644:	movw	r2, #2154	; 0x86a
   1e648:	subs.w	r3, r3, fp
   1e64c:	vmov	r1, s17
   1e650:	add	r0, pc
   1e652:	it	ne
   1e654:	movne	r3, #1
   1e656:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e65a:	cmp	fp, sl
   1e65c:	blt.n	1e6d4 <btrfs_check_leaf@@Base+0xdc4>
   1e65e:	ldr	r0, [r5, #0]
   1e660:	bl	1b4c0 <free_extent_buffer@@Base>
   1e664:	ldr	r3, [r5, #32]
   1e666:	str	r4, [r5, #0]
   1e668:	sub.w	r3, r3, sl
   1e66c:	str	r3, [r5, #32]
   1e66e:	ldr	r3, [r5, #36]	; 0x24
   1e670:	adds	r3, #1
   1e672:	str	r3, [r5, #36]	; 0x24
   1e674:	ldr	r3, [r5, #32]
   1e676:	movw	r2, #2165	; 0x875
   1e67a:	ldr	r4, [pc, #144]	; (1e70c <btrfs_check_leaf@@Base+0xdfc>)
   1e67c:	ldr	r0, [pc, #144]	; (1e710 <btrfs_check_leaf@@Base+0xe00>)
   1e67e:	add	r4, pc
   1e680:	lsrs	r3, r3, #31
   1e682:	addw	r1, r4, #275	; 0x113
   1e686:	add	r0, pc
   1e688:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e68c:	ldr	r0, [pc, #132]	; (1e714 <btrfs_check_leaf@@Base+0xe04>)
   1e68e:	add.w	r1, r4, #264	; 0x108
   1e692:	mov	r3, r9
   1e694:	add	r0, pc
   1e696:	movw	r2, #2325	; 0x915
   1e69a:	str	r1, [sp, #32]
   1e69c:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e6a0:	cmp	r7, #2
   1e6a2:	bne.w	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e6a6:	ldr	r3, [sp, #52]	; 0x34
   1e6a8:	movw	r2, #2328	; 0x918
   1e6ac:	ldr	r0, [pc, #104]	; (1e718 <btrfs_check_leaf@@Base+0xe08>)
   1e6ae:	subs	r3, #0
   1e6b0:	ldr	r1, [sp, #32]
   1e6b2:	add	r0, pc
   1e6b4:	it	ne
   1e6b6:	movne	r3, #1
   1e6b8:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e6bc:	ldr	r3, [sp, #52]	; 0x34
   1e6be:	adds	r3, #1
   1e6c0:	str	r3, [sp, #52]	; 0x34
   1e6c2:	b.n	1e276 <btrfs_check_leaf@@Base+0x966>
   1e6c4:	ldr.w	r1, [r2, #17]
   1e6c8:	adds	r3, #1
   1e6ca:	adds	r2, #25
   1e6cc:	add	r1, r0
   1e6ce:	str.w	r1, [r2, #-8]
   1e6d2:	b.n	1e5fa <btrfs_check_leaf@@Base+0xcea>
   1e6d4:	mov	r0, r4
   1e6d6:	bl	1b4c0 <free_extent_buffer@@Base>
   1e6da:	b.n	1e674 <btrfs_check_leaf@@Base+0xd64>
   1e6dc:	mvn.w	r9, #74	; 0x4a
   1e6e0:	b.n	1e360 <btrfs_check_leaf@@Base+0xa50>
   1e6e2:	mov	r0, r9
   1e6e4:	add	sp, #116	; 0x74
   1e6e6:	vpop	{d8}
   1e6ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6ee:	nop
   1e6f0:	lsls	r0, r1, #10
   1e6f2:	movs	r0, r0
   1e6f4:	ldmia	r3, {r1, r2, r3}
   1e6f6:	movs	r4, r0
   1e6f8:	subs	r7, #160	; 0xa0
   1e6fa:	movs	r2, r0
   1e6fc:	subs	r7, #0
   1e6fe:	movs	r2, r0
   1e700:	ldr	r6, [pc, #640]	; (1e984 <btrfs_extend_item@@Base+0xb4>)
   1e702:	movs	r2, r0
   1e704:	ldmia	r1!, {r2, r4, r5, r7}
   1e706:	movs	r4, r0
   1e708:	subs	r0, #232	; 0xe8
   1e70a:	movs	r2, r0
   1e70c:	subs	r3, #142	; 0x8e
   1e70e:	movs	r2, r0
   1e710:	subs	r0, #159	; 0x9f
   1e712:	movs	r2, r0
   1e714:	asrs	r6, r5, #18
   1e716:	movs	r2, r0
   1e718:	subs	r0, #157	; 0x9d
   1e71a:	movs	r2, r0

0001e71c <btrfs_truncate_item@@Base>:
   1e71c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e720:	sub	sp, #60	; 0x3c
   1e722:	mov	r6, r2
   1e724:	ldr	r2, [pc, #392]	; (1e8b0 <btrfs_truncate_item@@Base+0x194>)
   1e726:	str	r3, [sp, #24]
   1e728:	mov.w	sl, #25
   1e72c:	ldr	r3, [pc, #388]	; (1e8b4 <btrfs_truncate_item@@Base+0x198>)
   1e72e:	add	r2, pc
   1e730:	ldr	r4, [r1, #0]
   1e732:	mov	r9, r0
   1e734:	ldr	r7, [r1, #32]
   1e736:	mov	r8, r1
   1e738:	ldr	r3, [r2, r3]
   1e73a:	ldr	r3, [r3, #0]
   1e73c:	str	r3, [sp, #52]	; 0x34
   1e73e:	mov.w	r3, #0
   1e742:	add.w	r3, r4, #96	; 0x60
   1e746:	str	r3, [sp, #16]
   1e748:	mla	r3, sl, r7, r3
   1e74c:	add.w	r2, r3, #101	; 0x65
   1e750:	str	r2, [sp, #12]
   1e752:	ldr.w	r5, [r3, #122]	; 0x7a
   1e756:	cmp	r6, r5
   1e758:	beq.w	1e894 <btrfs_truncate_item@@Base+0x178>
   1e75c:	ldr.w	r0, [r0, #464]	; 0x1d0
   1e760:	mov	r1, r4
   1e762:	ldr.w	fp, [r4, #192]	; 0xc0
   1e766:	add.w	r0, r0, #384	; 0x180
   1e76a:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1e76e:	ldr	r3, [sp, #12]
   1e770:	ldr	r1, [pc, #324]	; (1e8b8 <btrfs_truncate_item@@Base+0x19c>)
   1e772:	mov.w	r2, #2480	; 0x9b0
   1e776:	ldr.w	r3, [r3, #17]
   1e77a:	add	r1, pc
   1e77c:	add.w	r1, r1, #290	; 0x122
   1e780:	str	r1, [sp, #28]
   1e782:	str	r3, [sp, #20]
   1e784:	subs	r3, r5, r6
   1e786:	str	r3, [sp, #8]
   1e788:	lsrs	r3, r7, #31
   1e78a:	str	r0, [sp, #4]
   1e78c:	ldr	r0, [pc, #300]	; (1e8bc <btrfs_truncate_item@@Base+0x1a0>)
   1e78e:	add	r0, pc
   1e790:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e794:	cmp	r7, fp
   1e796:	ldr	r0, [pc, #296]	; (1e8c0 <btrfs_truncate_item@@Base+0x1a4>)
   1e798:	movw	r2, #2481	; 0x9b1
   1e79c:	ite	cc
   1e79e:	movcc	r3, #0
   1e7a0:	movcs	r3, #1
   1e7a2:	add	r0, pc
   1e7a4:	ldr	r1, [sp, #28]
   1e7a6:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e7aa:	add.w	r0, r4, #197	; 0xc5
   1e7ae:	mov	r3, r7
   1e7b0:	cmp	r3, fp
   1e7b2:	bcc.n	1e808 <btrfs_truncate_item@@Base+0xec>
   1e7b4:	ldr	r3, [sp, #4]
   1e7b6:	add.w	sl, r3, #101	; 0x65
   1e7ba:	ldr	r3, [sp, #8]
   1e7bc:	add.w	fp, r3, sl
   1e7c0:	ldr	r3, [sp, #24]
   1e7c2:	cbz	r3, 1e81c <btrfs_truncate_item@@Base+0x100>
   1e7c4:	ldr	r3, [sp, #20]
   1e7c6:	mov	r1, fp
   1e7c8:	ldr	r2, [sp, #4]
   1e7ca:	mov	r0, r4
   1e7cc:	add	r3, r6
   1e7ce:	subs	r3, r3, r2
   1e7d0:	mov	r2, sl
   1e7d2:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e7d6:	ldr	r3, [sp, #12]
   1e7d8:	mov	r0, r4
   1e7da:	str.w	r6, [r3, #21]
   1e7de:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e7e2:	mov	r0, r4
   1e7e4:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1e7e8:	cmp	r0, #0
   1e7ea:	bge.n	1e894 <btrfs_truncate_item@@Base+0x178>
   1e7ec:	mov	r0, r4
   1e7ee:	bl	298c0 <btrfs_print_leaf@@Base>
   1e7f2:	ldr	r1, [pc, #208]	; (1e8c4 <btrfs_truncate_item@@Base+0x1a8>)
   1e7f4:	ldr	r0, [pc, #208]	; (1e8c8 <btrfs_truncate_item@@Base+0x1ac>)
   1e7f6:	movs	r3, #1
   1e7f8:	add	r1, pc
   1e7fa:	movw	r2, #2542	; 0x9ee
   1e7fe:	add.w	r1, r1, #290	; 0x122
   1e802:	add	r0, pc
   1e804:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1e808:	mla	r1, sl, r3, r0
   1e80c:	ldr	r2, [sp, #8]
   1e80e:	adds	r3, #1
   1e810:	ldr.w	ip, [r1, #17]
   1e814:	add	r2, ip
   1e816:	str.w	r2, [r1, #17]
   1e81a:	b.n	1e7b0 <btrfs_truncate_item@@Base+0x94>
   1e81c:	add	r1, sp, #32
   1e81e:	mov	r2, r7
   1e820:	mov	r0, r4
   1e822:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1e826:	ldrb.w	r3, [sp, #40]	; 0x28
   1e82a:	cmp	r3, #108	; 0x6c
   1e82c:	bne.n	1e84a <btrfs_truncate_item@@Base+0x12e>
   1e82e:	ldr	r3, [sp, #12]
   1e830:	ldr.w	r1, [r3, #17]
   1e834:	ldr	r3, [sp, #16]
   1e836:	adds	r1, #101	; 0x65
   1e838:	subs	r2, r1, r5
   1e83a:	add	r2, r6
   1e83c:	add	r3, r2
   1e83e:	ldrb	r3, [r3, #20]
   1e840:	cbnz	r3, 1e84a <btrfs_truncate_item@@Base+0x12e>
   1e842:	movs	r3, #21
   1e844:	mov	r0, r4
   1e846:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e84a:	ldr	r2, [sp, #4]
   1e84c:	mov	r1, fp
   1e84e:	ldr	r3, [sp, #20]
   1e850:	mov	r0, r4
   1e852:	add	r5, sp, #32
   1e854:	subs	r3, r3, r2
   1e856:	mov	r2, sl
   1e858:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e85c:	ldr.w	r2, [sp, #41]	; 0x29
   1e860:	ldr.w	r3, [sp, #45]	; 0x2d
   1e864:	mov	r0, r4
   1e866:	mov	r1, r2
   1e868:	mov	r2, r3
   1e86a:	ldr	r3, [sp, #8]
   1e86c:	adds	r1, r1, r3
   1e86e:	str.w	r1, [sp, #41]	; 0x29
   1e872:	adc.w	r2, r2, #0
   1e876:	mov	r1, r5
   1e878:	str.w	r2, [sp, #45]	; 0x2d
   1e87c:	mov	r2, r7
   1e87e:	bl	1c1da <rb_free_nodes@@Base+0x3c>
   1e882:	cmp	r7, #0
   1e884:	bne.n	1e7d6 <btrfs_truncate_item@@Base+0xba>
   1e886:	movs	r3, #1
   1e888:	mov	r2, r5
   1e88a:	mov	r1, r8
   1e88c:	mov	r0, r9
   1e88e:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1e892:	b.n	1e7d6 <btrfs_truncate_item@@Base+0xba>
   1e894:	ldr	r2, [pc, #52]	; (1e8cc <btrfs_truncate_item@@Base+0x1b0>)
   1e896:	ldr	r3, [pc, #28]	; (1e8b4 <btrfs_truncate_item@@Base+0x198>)
   1e898:	add	r2, pc
   1e89a:	ldr	r3, [r2, r3]
   1e89c:	ldr	r2, [r3, #0]
   1e89e:	ldr	r3, [sp, #52]	; 0x34
   1e8a0:	eors	r2, r3
   1e8a2:	beq.n	1e8a8 <btrfs_truncate_item@@Base+0x18c>
   1e8a4:	blx	8c90 <__stack_chk_fail@plt>
   1e8a8:	movs	r0, #0
   1e8aa:	add	sp, #60	; 0x3c
   1e8ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8b0:	stmia	r5!, {r1, r3, r5, r6, r7}
   1e8b2:	movs	r4, r0
   1e8b4:	lsls	r0, r1, #10
   1e8b6:	movs	r0, r0
   1e8b8:	subs	r2, #146	; 0x92
   1e8ba:	movs	r2, r0
   1e8bc:	adds	r7, #210	; 0xd2
   1e8be:	movs	r2, r0
   1e8c0:	adds	r7, #199	; 0xc7
   1e8c2:	movs	r2, r0
   1e8c4:	subs	r2, #20
   1e8c6:	movs	r2, r0
   1e8c8:	ldr	r1, [pc, #704]	; (1eb8c <btrfs_search_slot@@Base+0xb0>)
   1e8ca:	movs	r2, r0
   1e8cc:	stmia	r4!, {r7}
   1e8ce:	movs	r4, r0

0001e8d0 <btrfs_extend_item@@Base>:
   1e8d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8d4:	mov	r5, r1
   1e8d6:	ldr	r4, [r1, #0]
   1e8d8:	sub	sp, #20
   1e8da:	ldr.w	r0, [r0, #464]	; 0x1d0
   1e8de:	mov	r6, r2
   1e8e0:	ldr.w	fp, [pc, #256]	; 1e9e4 <btrfs_extend_item@@Base+0x114>
   1e8e4:	mov	r1, r4
   1e8e6:	add.w	r0, r0, #384	; 0x180
   1e8ea:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1e8ee:	ldr.w	sl, [r4, #192]	; 0xc0
   1e8f2:	add	fp, pc
   1e8f4:	mov	r7, r0
   1e8f6:	mov	r0, r4
   1e8f8:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1e8fc:	cmp	r0, r6
   1e8fe:	bcs.n	1e91c <btrfs_extend_item@@Base+0x4c>
   1e900:	mov	r0, r4
   1e902:	bl	298c0 <btrfs_print_leaf@@Base>
   1e906:	ldr	r1, [pc, #224]	; (1e9e8 <btrfs_extend_item@@Base+0x118>)
   1e908:	ldr	r0, [pc, #224]	; (1e9ec <btrfs_extend_item@@Base+0x11c>)
   1e90a:	movs	r3, #1
   1e90c:	add	r1, pc
   1e90e:	movw	r2, #2567	; 0xa07
   1e912:	add.w	r1, r1, #310	; 0x136
   1e916:	add	r0, pc
   1e918:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1e91c:	ldr	r5, [r5, #32]
   1e91e:	mov	r0, r4
   1e920:	ldr.w	r8, [pc, #204]	; 1e9f0 <btrfs_extend_item@@Base+0x120>
   1e924:	mov	r1, r5
   1e926:	add	r8, pc
   1e928:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1e92c:	add.w	r8, r8, #310	; 0x136
   1e930:	lsrs	r3, r5, #31
   1e932:	movw	r2, #2572	; 0xa0c
   1e936:	mov	r1, r8
   1e938:	mov	r9, r0
   1e93a:	ldr	r0, [pc, #184]	; (1e9f4 <btrfs_extend_item@@Base+0x124>)
   1e93c:	add	r0, pc
   1e93e:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1e942:	cmp	r5, sl
   1e944:	str	r5, [sp, #12]
   1e946:	bcs.n	1e99e <btrfs_extend_item@@Base+0xce>
   1e948:	add.w	r1, r4, #197	; 0xc5
   1e94c:	movs	r0, #25
   1e94e:	cmp	r5, sl
   1e950:	bne.n	1e9ca <btrfs_extend_item@@Base+0xfa>
   1e952:	add.w	r2, r7, #101	; 0x65
   1e956:	sub.w	r3, r9, r7
   1e95a:	subs	r1, r2, r6
   1e95c:	mov	r0, r4
   1e95e:	bl	1bc2c <memmove_extent_buffer@@Base>
   1e962:	ldr	r2, [sp, #12]
   1e964:	movs	r3, #25
   1e966:	mov	r0, r4
   1e968:	mla	r3, r3, r2, r4
   1e96c:	ldr.w	r2, [r3, #218]	; 0xda
   1e970:	add	r6, r2
   1e972:	str.w	r6, [r3, #218]	; 0xda
   1e976:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1e97a:	mov	r0, r4
   1e97c:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1e980:	cmp	r0, #0
   1e982:	bge.n	1e9dc <btrfs_extend_item@@Base+0x10c>
   1e984:	mov	r0, r4
   1e986:	bl	298c0 <btrfs_print_leaf@@Base>
   1e98a:	ldr	r1, [pc, #108]	; (1e9f8 <btrfs_extend_item@@Base+0x128>)
   1e98c:	ldr	r0, [pc, #108]	; (1e9fc <btrfs_extend_item@@Base+0x12c>)
   1e98e:	movs	r3, #1
   1e990:	add	r1, pc
   1e992:	movw	r2, #2604	; 0xa2c
   1e996:	add.w	r1, r1, #310	; 0x136
   1e99a:	add	r0, pc
   1e99c:	b.n	1e918 <btrfs_extend_item@@Base+0x48>
   1e99e:	mov	r0, r4
   1e9a0:	bl	298c0 <btrfs_print_leaf@@Base>
   1e9a4:	ldr	r3, [pc, #88]	; (1ea00 <btrfs_extend_item@@Base+0x130>)
   1e9a6:	ldr	r2, [pc, #92]	; (1ea04 <btrfs_extend_item@@Base+0x134>)
   1e9a8:	movs	r1, #1
   1e9aa:	ldr.w	r0, [fp, r3]
   1e9ae:	add	r2, pc
   1e9b0:	mov	r3, r5
   1e9b2:	str.w	sl, [sp]
   1e9b6:	ldr	r0, [r0, #0]
   1e9b8:	blx	9040 <__fprintf_chk@plt+0x4>
   1e9bc:	ldr	r0, [pc, #72]	; (1ea08 <btrfs_extend_item@@Base+0x138>)
   1e9be:	movs	r3, #1
   1e9c0:	mov.w	r2, #2576	; 0xa10
   1e9c4:	add	r0, pc
   1e9c6:	mov	r1, r8
   1e9c8:	b.n	1e918 <btrfs_extend_item@@Base+0x48>
   1e9ca:	mla	r2, r0, r5, r1
   1e9ce:	adds	r5, #1
   1e9d0:	ldr.w	r3, [r2, #17]
   1e9d4:	subs	r3, r3, r6
   1e9d6:	str.w	r3, [r2, #17]
   1e9da:	b.n	1e94e <btrfs_extend_item@@Base+0x7e>
   1e9dc:	movs	r0, #0
   1e9de:	add	sp, #20
   1e9e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9e4:	stmia	r4!, {r1, r2, r5}
   1e9e6:	movs	r4, r0
   1e9e8:	subs	r1, #0
   1e9ea:	movs	r2, r0
   1e9ec:	ldr	r0, [pc, #624]	; (1ec60 <btrfs_search_slot@@Base+0x184>)
   1e9ee:	movs	r2, r0
   1e9f0:	subs	r0, #230	; 0xe6
   1e9f2:	movs	r2, r0
   1e9f4:	adds	r6, #36	; 0x24
   1e9f6:	movs	r2, r0
   1e9f8:	subs	r0, #124	; 0x7c
   1e9fa:	movs	r2, r0
   1e9fc:	ldr	r0, [pc, #96]	; (1ea60 <btrfs_del_ptr@@Base+0x54>)
   1e9fe:	movs	r2, r0
   1ea00:	lsls	r4, r3, #10
   1ea02:	movs	r0, r0
   1ea04:	adds	r5, #203	; 0xcb
   1ea06:	movs	r2, r0
   1ea08:			; <UNDEFINED> instruction: 0x47ee
   1ea0a:	movs	r2, r0

0001ea0c <btrfs_del_ptr@@Base>:
   1ea0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ea10:	mov	r8, r2
   1ea12:	ldr	r2, [pc, #180]	; (1eac8 <btrfs_del_ptr@@Base+0xbc>)
   1ea14:	mov	r5, r3
   1ea16:	ldr	r3, [pc, #180]	; (1eacc <btrfs_del_ptr@@Base+0xc0>)
   1ea18:	sub	sp, #28
   1ea1a:	add	r2, pc
   1ea1c:	ldr.w	r4, [r1, r8, lsl #2]
   1ea20:	mov	r6, r0
   1ea22:	mov	r7, r1
   1ea24:	ldr	r3, [r2, r3]
   1ea26:	ldr	r3, [r3, #0]
   1ea28:	str	r3, [sp, #20]
   1ea2a:	mov.w	r3, #0
   1ea2e:	ldr.w	r3, [r4, #192]	; 0xc0
   1ea32:	add.w	r9, r3, #4294967295	; 0xffffffff
   1ea36:	cmp	r9, r5
   1ea38:	bls.n	1ea52 <btrfs_del_ptr@@Base+0x46>
   1ea3a:	subs	r3, r3, r5
   1ea3c:	add.w	r1, r5, r5, lsl #5
   1ea40:	add.w	r2, r1, #134	; 0x86
   1ea44:	mov	r0, r4
   1ea46:	add.w	r3, r3, r3, lsl #5
   1ea4a:	adds	r1, #101	; 0x65
   1ea4c:	subs	r3, #33	; 0x21
   1ea4e:	bl	1bc2c <memmove_extent_buffer@@Base>
   1ea52:	str.w	r9, [r4, #192]	; 0xc0
   1ea56:	cmp.w	r9, #0
   1ea5a:	bne.n	1ea9e <btrfs_del_ptr@@Base+0x92>
   1ea5c:	ldr	r3, [r6, #0]
   1ea5e:	cmp	r3, r4
   1ea60:	bne.n	1ea9e <btrfs_del_ptr@@Base+0x92>
   1ea62:	ldrb.w	r3, [r4, #196]	; 0xc4
   1ea66:	movw	r2, #2775	; 0xad7
   1ea6a:	ldr	r1, [pc, #100]	; (1ead0 <btrfs_del_ptr@@Base+0xc4>)
   1ea6c:	subs	r3, #1
   1ea6e:	ldr	r0, [pc, #100]	; (1ead4 <btrfs_del_ptr@@Base+0xc8>)
   1ea70:	add	r1, pc
   1ea72:	add.w	r1, r1, #328	; 0x148
   1ea76:	add	r0, pc
   1ea78:	it	ne
   1ea7a:	movne	r3, #1
   1ea7c:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ea80:	strb.w	r9, [r4, #196]	; 0xc4
   1ea84:	mov	r0, r4
   1ea86:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1ea8a:	ldr	r2, [pc, #76]	; (1ead8 <btrfs_del_ptr@@Base+0xcc>)
   1ea8c:	ldr	r3, [pc, #60]	; (1eacc <btrfs_del_ptr@@Base+0xc0>)
   1ea8e:	add	r2, pc
   1ea90:	ldr	r3, [r2, r3]
   1ea92:	ldr	r2, [r3, #0]
   1ea94:	ldr	r3, [sp, #20]
   1ea96:	eors	r2, r3
   1ea98:	beq.n	1eabe <btrfs_del_ptr@@Base+0xb2>
   1ea9a:	blx	8c90 <__stack_chk_fail@plt>
   1ea9e:	cmp	r5, #0
   1eaa0:	bne.n	1ea84 <btrfs_del_ptr@@Base+0x78>
   1eaa2:	mov	r2, r5
   1eaa4:	mov	r5, sp
   1eaa6:	mov	r1, r5
   1eaa8:	mov	r0, r4
   1eaaa:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1eaae:	add.w	r3, r8, #1
   1eab2:	mov	r2, r5
   1eab4:	mov	r1, r7
   1eab6:	mov	r0, r6
   1eab8:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1eabc:	b.n	1ea84 <btrfs_del_ptr@@Base+0x78>
   1eabe:	movs	r0, #0
   1eac0:	add	sp, #28
   1eac2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1eac6:	nop
   1eac8:	stmia	r2!, {r1, r2, r3, r4, r5, r6, r7}
   1eaca:	movs	r4, r0
   1eacc:	lsls	r0, r1, #10
   1eace:	movs	r0, r0
   1ead0:	adds	r7, #156	; 0x9c
   1ead2:	movs	r2, r0
   1ead4:	adds	r5, #34	; 0x22
   1ead6:	movs	r2, r0
   1ead8:	stmia	r2!, {r1, r3, r7}
   1eada:	movs	r4, r0

0001eadc <btrfs_search_slot@@Base>:
   1eadc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eae0:	mov	fp, r3
   1eae2:	vpush	{d8-d9}
   1eae6:	mov	sl, r0
   1eae8:	ldr.w	r3, [pc, #1208]	; 1efa4 <btrfs_search_slot@@Base+0x4c8>
   1eaec:	mov	r4, r1
   1eaee:	sub	sp, #140	; 0x8c
   1eaf0:	str	r2, [sp, #56]	; 0x38
   1eaf2:	ldr.w	r2, [pc, #1204]	; 1efa8 <btrfs_search_slot@@Base+0x4cc>
   1eaf6:	add	r2, pc
   1eaf8:	ldr	r3, [r2, r3]
   1eafa:	ldr	r3, [r3, #0]
   1eafc:	str	r3, [sp, #132]	; 0x84
   1eafe:	mov.w	r3, #0
   1eb02:	ldrsb.w	r3, [fp, #64]	; 0x40
   1eb06:	str	r3, [sp, #88]	; 0x58
   1eb08:	ldr.w	r3, [r1, #464]	; 0x1d0
   1eb0c:	vmov	s16, r3
   1eb10:	ldrb.w	r3, [fp, #65]	; 0x41
   1eb14:	str	r3, [sp, #60]	; 0x3c
   1eb16:	cmp	r3, #0
   1eb18:	beq.n	1ebc6 <btrfs_search_slot@@Base+0xea>
   1eb1a:	ldr	r3, [sp, #192]	; 0xc0
   1eb1c:	cmp	r3, #0
   1eb1e:	ite	le
   1eb20:	movle	r3, #0
   1eb22:	movgt	r3, #1
   1eb24:	ldr.w	r1, [pc, #1156]	; 1efac <btrfs_search_slot@@Base+0x4d0>
   1eb28:	movw	r2, #1173	; 0x495
   1eb2c:	ldr.w	r0, [pc, #1152]	; 1efb0 <btrfs_search_slot@@Base+0x4d4>
   1eb30:	add	r1, pc
   1eb32:	add.w	r1, r1, #342	; 0x156
   1eb36:	add	r0, pc
   1eb38:	str	r1, [sp, #40]	; 0x28
   1eb3a:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1eb3e:	ldr.w	r3, [fp]
   1eb42:	movw	r2, #1174	; 0x496
   1eb46:	ldr.w	r0, [pc, #1132]	; 1efb4 <btrfs_search_slot@@Base+0x4d8>
   1eb4a:	subs	r3, #0
   1eb4c:	ldr	r1, [sp, #40]	; 0x28
   1eb4e:	add	r0, pc
   1eb50:	it	ne
   1eb52:	movne	r3, #1
   1eb54:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1eb58:	ldr	r3, [sp, #192]	; 0xc0
   1eb5a:	ldr	r2, [sp, #196]	; 0xc4
   1eb5c:	subs	r3, #0
   1eb5e:	it	ne
   1eb60:	movne	r3, #1
   1eb62:	cmp	r2, #0
   1eb64:	it	ne
   1eb66:	movne	r3, #0
   1eb68:	vmov	s19, r3
   1eb6c:	ldr	r3, [r4, #0]
   1eb6e:	ldr	r2, [r3, #80]	; 0x50
   1eb70:	str	r3, [sp, #96]	; 0x60
   1eb72:	adds	r2, #1
   1eb74:	str	r2, [r3, #80]	; 0x50
   1eb76:	ldr.w	r3, [pc, #1088]	; 1efb8 <btrfs_search_slot@@Base+0x4dc>
   1eb7a:	add	r3, pc
   1eb7c:	str	r3, [sp, #92]	; 0x5c
   1eb7e:	ldr	r2, [sp, #96]	; 0x60
   1eb80:	cmp	r2, #0
   1eb82:	beq.w	1ed64 <btrfs_search_slot@@Base+0x288>
   1eb86:	ldr	r3, [sp, #196]	; 0xc4
   1eb88:	ldrb.w	r5, [r2, #196]	; 0xc4
   1eb8c:	cbz	r3, 1ebca <btrfs_search_slot@@Base+0xee>
   1eb8e:	add.w	r3, fp, r5, lsl #2
   1eb92:	add	r1, sp, #96	; 0x60
   1eb94:	str	r1, [sp, #4]
   1eb96:	mov	r0, sl
   1eb98:	ldr	r1, [r3, #36]	; 0x24
   1eb9a:	str	r1, [sp, #0]
   1eb9c:	mov	r1, r4
   1eb9e:	ldr	r3, [r3, #4]
   1eba0:	bl	1d124 <btrfs_cow_block@@Base>
   1eba4:	mov	r9, r0
   1eba6:	cbz	r0, 1ebca <btrfs_search_slot@@Base+0xee>
   1eba8:	ldr	r0, [sp, #96]	; 0x60
   1ebaa:	bl	1b4c0 <free_extent_buffer@@Base>
   1ebae:	ldr.w	r2, [pc, #1036]	; 1efbc <btrfs_search_slot@@Base+0x4e0>
   1ebb2:	ldr	r3, [pc, #1008]	; (1efa4 <btrfs_search_slot@@Base+0x4c8>)
   1ebb4:	add	r2, pc
   1ebb6:	ldr	r3, [r2, r3]
   1ebb8:	ldr	r2, [r3, #0]
   1ebba:	ldr	r3, [sp, #132]	; 0x84
   1ebbc:	eors	r2, r3
   1ebbe:	beq.w	1f64a <btrfs_search_slot@@Base+0xb6e>
   1ebc2:	blx	8c90 <__stack_chk_fail@plt>
   1ebc6:	ldr	r3, [sp, #60]	; 0x3c
   1ebc8:	b.n	1eb24 <btrfs_search_slot@@Base+0x48>
   1ebca:	ldr	r3, [sp, #92]	; 0x5c
   1ebcc:	movw	r2, #1194	; 0x4aa
   1ebd0:	ldr	r0, [pc, #1004]	; (1efc0 <btrfs_search_slot@@Base+0x4e4>)
   1ebd2:	add.w	r1, r3, #342	; 0x156
   1ebd6:	vmov	r3, s19
   1ebda:	add	r0, pc
   1ebdc:	str	r1, [sp, #40]	; 0x28
   1ebde:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ebe2:	ldr	r3, [sp, #96]	; 0x60
   1ebe4:	ldrb.w	r3, [r3, #196]	; 0xc4
   1ebe8:	cmp	r3, r5
   1ebea:	beq.n	1ebfc <btrfs_search_slot@@Base+0x120>
   1ebec:	ldr	r0, [pc, #980]	; (1efc4 <btrfs_search_slot@@Base+0x4e8>)
   1ebee:	movs	r3, #1
   1ebf0:	ldr	r1, [sp, #40]	; 0x28
   1ebf2:	movw	r2, #1196	; 0x4ac
   1ebf6:	add	r0, pc
   1ebf8:	bl	1c2be <rb_free_nodes@@Base+0x120>
   1ebfc:	ldr	r3, [sp, #96]	; 0x60
   1ebfe:	ldrb.w	r2, [r3, #196]	; 0xc4
   1ec02:	str.w	r3, [fp, r2, lsl #2]
   1ec06:	add.w	r8, fp, r2, lsl #2
   1ec0a:	ldrb.w	r3, [fp, #67]	; 0x43
   1ec0e:	strd	r2, r2, [sp, #40]	; 0x28
   1ec12:	cmp	r3, #0
   1ec14:	beq.n	1ec80 <btrfs_search_slot@@Base+0x1a4>
   1ec16:	ldr	r2, [sp, #44]	; 0x2c
   1ec18:	add	r3, sp, #100	; 0x64
   1ec1a:	ldr	r1, [sp, #56]	; 0x38
   1ec1c:	ldr	r0, [sp, #96]	; 0x60
   1ec1e:	bl	1d428 <btrfs_bin_search@@Base>
   1ec22:	ldr	r2, [sp, #44]	; 0x2c
   1ec24:	ldr	r3, [sp, #100]	; 0x64
   1ec26:	mov	r9, r0
   1ec28:	cmp	r2, #0
   1ec2a:	bne.n	1ec96 <btrfs_search_slot@@Base+0x1ba>
   1ec2c:	str.w	r3, [fp, #32]
   1ec30:	ldr	r3, [sp, #192]	; 0xc0
   1ec32:	cmp	r3, #0
   1ec34:	ble.n	1ebae <btrfs_search_slot@@Base+0xd2>
   1ec36:	ldr	r0, [sp, #96]	; 0x60
   1ec38:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1ec3c:	ldr	r3, [sp, #192]	; 0xc0
   1ec3e:	cmp	r0, r3
   1ec40:	bge.n	1ebae <btrfs_search_slot@@Base+0xd2>
   1ec42:	clz	r3, r9
   1ec46:	mov	r1, r4
   1ec48:	ldr	r2, [sp, #56]	; 0x38
   1ec4a:	mov	r0, sl
   1ec4c:	lsrs	r3, r3, #5
   1ec4e:	str	r3, [sp, #4]
   1ec50:	ldr	r3, [sp, #192]	; 0xc0
   1ec52:	str	r3, [sp, #0]
   1ec54:	mov	r3, fp
   1ec56:	bl	1e1f0 <btrfs_check_leaf@@Base+0x8e0>
   1ec5a:	ldr	r1, [pc, #876]	; (1efc8 <btrfs_search_slot@@Base+0x4ec>)
   1ec5c:	movw	r2, #1246	; 0x4de
   1ec60:	add	r1, pc
   1ec62:	add.w	r1, r1, #342	; 0x156
   1ec66:	cmp	r0, #0
   1ec68:	mov	r4, r0
   1ec6a:	ldr	r0, [pc, #864]	; (1efcc <btrfs_search_slot@@Base+0x4f0>)
   1ec6c:	ite	le
   1ec6e:	movle	r3, #0
   1ec70:	movgt	r3, #1
   1ec72:	add	r0, pc
   1ec74:	cmp	r4, #0
   1ec76:	it	ne
   1ec78:	movne	r9, r4
   1ec7a:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ec7e:	b.n	1ebae <btrfs_search_slot@@Base+0xd2>
   1ec80:	vmov	r0, s16
   1ec84:	mov	r1, fp
   1ec86:	ldr	r2, [sp, #44]	; 0x2c
   1ec88:	bl	1dbd0 <btrfs_check_leaf@@Base+0x2c0>
   1ec8c:	cmp	r0, #0
   1ec8e:	beq.n	1ec16 <btrfs_search_slot@@Base+0x13a>
   1ec90:	mov.w	r9, #4294967295	; 0xffffffff
   1ec94:	b.n	1ebae <btrfs_search_slot@@Base+0xd2>
   1ec96:	cbz	r0, 1eca2 <btrfs_search_slot@@Base+0x1c6>
   1ec98:	cmp	r3, #0
   1ec9a:	itt	gt
   1ec9c:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   1eca0:	strgt	r3, [sp, #100]	; 0x64
   1eca2:	ldr	r3, [sp, #100]	; 0x64
   1eca4:	str	r3, [sp, #48]	; 0x30
   1eca6:	str.w	r3, [r8, #32]
   1ecaa:	ldrb.w	r3, [fp, #66]	; 0x42
   1ecae:	cbnz	r3, 1ecb8 <btrfs_search_slot@@Base+0x1dc>
   1ecb0:	ldr	r3, [sp, #192]	; 0xc0
   1ecb2:	cmp	r3, #0
   1ecb4:	ble.w	1f106 <btrfs_search_slot@@Base+0x62a>
   1ecb8:	vmov	r3, s16
   1ecbc:	ldr.w	r2, [r3, #384]	; 0x180
   1ecc0:	ldr	r3, [pc, #732]	; (1efa0 <btrfs_search_slot@@Base+0x4c4>)
   1ecc2:	subs	r2, #101	; 0x65
   1ecc4:	umull	r2, r3, r2, r3
   1ecc8:	ldr	r2, [sp, #96]	; 0x60
   1ecca:	ldr.w	r2, [r2, #192]	; 0xc0
   1ecce:	lsrs	r3, r3, #3
   1ecd0:	subs	r3, #3
   1ecd2:	cmp	r3, r2
   1ecd4:	bhi.w	1f106 <btrfs_search_slot@@Base+0x62a>
   1ecd8:	ldr	r3, [sp, #40]	; 0x28
   1ecda:	ldr	r7, [pc, #756]	; (1efd0 <btrfs_search_slot@@Base+0x4f4>)
   1ecdc:	ldr.w	r6, [fp, r3, lsl #2]
   1ece0:	add	r7, pc
   1ece2:	ldrd	r2, r3, [sl, #8]
   1ece6:	ldr.w	r1, [r6, #180]	; 0xb4
   1ecea:	ldr.w	r0, [r6, #176]	; 0xb0
   1ecee:	cmp	r1, r3
   1ecf0:	add.w	r1, r7, #360	; 0x168
   1ecf4:	it	eq
   1ecf6:	cmpeq	r0, r2
   1ecf8:	ldr	r0, [pc, #728]	; (1efd4 <btrfs_search_slot@@Base+0x4f8>)
   1ecfa:	movw	r2, #1668	; 0x684
   1ecfe:	ite	ne
   1ed00:	movne	r3, #1
   1ed02:	moveq	r3, #0
   1ed04:	add	r0, pc
   1ed06:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1ed0a:	ldr	r3, [r4, #0]
   1ed0c:	cmp	r6, r3
   1ed0e:	bne.n	1ed6a <btrfs_search_slot@@Base+0x28e>
   1ed10:	ldr	r3, [sp, #44]	; 0x2c
   1ed12:	mov	r2, fp
   1ed14:	mov	r1, r4
   1ed16:	mov	r0, sl
   1ed18:	adds	r3, #1
   1ed1a:	bl	1c762 <add_root_to_dirty_list@@Base+0x2e>
   1ed1e:	mov	r9, r0
   1ed20:	cmp	r0, #0
   1ed22:	beq.w	1ee98 <btrfs_search_slot@@Base+0x3bc>
   1ed26:	ldr	r1, [pc, #688]	; (1efd8 <btrfs_search_slot@@Base+0x4fc>)
   1ed28:	cmp.w	r9, #0
   1ed2c:	ldr	r0, [pc, #684]	; (1efdc <btrfs_search_slot@@Base+0x500>)
   1ed2e:	movw	r2, #1211	; 0x4bb
   1ed32:	add	r1, pc
   1ed34:	ite	le
   1ed36:	movle	r3, #0
   1ed38:	movgt	r3, #1
   1ed3a:	add.w	r1, r1, #342	; 0x156
   1ed3e:	add	r0, pc
   1ed40:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ed44:	cmp.w	r9, #0
   1ed48:	bne.w	1ebae <btrfs_search_slot@@Base+0xd2>
   1ed4c:	ldr	r3, [sp, #40]	; 0x28
   1ed4e:	ldr.w	r3, [fp, r3, lsl #2]
   1ed52:	str	r3, [sp, #96]	; 0x60
   1ed54:	ldr.w	r3, [r8, #32]
   1ed58:	str	r3, [sp, #100]	; 0x64
   1ed5a:	ldr	r3, [sp, #60]	; 0x3c
   1ed5c:	ldr	r2, [sp, #44]	; 0x2c
   1ed5e:	cmp	r3, r2
   1ed60:	bne.w	1f60e <btrfs_search_slot@@Base+0xb32>
   1ed64:	mov.w	r9, #1
   1ed68:	b.n	1ebae <btrfs_search_slot@@Base+0xd2>
   1ed6a:	movs	r3, #0
   1ed6c:	strd	r3, r3, [sp, #104]	; 0x68
   1ed70:	ldr.w	r3, [r8, #32]
   1ed74:	ldr.w	r9, [r4, #464]	; 0x1d0
   1ed78:	str	r3, [sp, #48]	; 0x30
   1ed7a:	ldr	r3, [sp, #40]	; 0x28
   1ed7c:	ldr.w	r5, [fp, r3, lsl #2]
   1ed80:	ldrd	r2, r3, [sl, #8]
   1ed84:	ldr.w	r1, [r5, #180]	; 0xb4
   1ed88:	ldr.w	r0, [r5, #176]	; 0xb0
   1ed8c:	cmp	r1, r3
   1ed8e:	addw	r1, r7, #371	; 0x173
   1ed92:	it	eq
   1ed94:	cmpeq	r0, r2
   1ed96:	ldr	r0, [pc, #584]	; (1efe0 <btrfs_search_slot@@Base+0x504>)
   1ed98:	mov.w	r2, #932	; 0x3a4
   1ed9c:	ite	ne
   1ed9e:	movne	r3, #1
   1eda0:	moveq	r3, #0
   1eda2:	add	r0, pc
   1eda4:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1eda8:	ldr	r3, [sp, #44]	; 0x2c
   1edaa:	cmp	r3, #6
   1edac:	ble.n	1edb6 <btrfs_search_slot@@Base+0x2da>
   1edae:	ldr	r3, [sp, #40]	; 0x28
   1edb0:	ldr.w	r6, [fp, r3, lsl #2]
   1edb4:	b.n	1ee98 <btrfs_search_slot@@Base+0x3bc>
   1edb6:	ldr.w	r6, [r8, #4]
   1edba:	cmp	r6, #0
   1edbc:	beq.n	1edae <btrfs_search_slot@@Base+0x2d2>
   1edbe:	ldr.w	r3, [r8, #36]	; 0x24
   1edc2:	mov	r1, r6
   1edc4:	mov	r0, r9
   1edc6:	subs	r7, r3, #1
   1edc8:	str	r3, [sp, #52]	; 0x34
   1edca:	mov	r2, r7
   1edcc:	bl	1d4ae <read_node_slot@@Base>
   1edd0:	mov	r2, r0
   1edd2:	str	r0, [sp, #108]	; 0x6c
   1edd4:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1edd8:	cmp	r0, #0
   1edda:	beq.w	1eef4 <btrfs_search_slot@@Base+0x418>
   1edde:	ldr.w	r3, [r2, #192]	; 0xc0
   1ede2:	ldr.w	r0, [r9, #384]	; 0x180
   1ede6:	str	r3, [sp, #64]	; 0x40
   1ede8:	subs	r0, #101	; 0x65
   1edea:	ldr	r3, [pc, #436]	; (1efa0 <btrfs_search_slot@@Base+0x4c4>)
   1edec:	umull	r0, r1, r0, r3
   1edf0:	lsrs	r3, r1, #3
   1edf2:	ldr	r1, [sp, #64]	; 0x40
   1edf4:	subs	r3, #1
   1edf6:	cmp	r1, r3
   1edf8:	bcs.n	1eeee <btrfs_search_slot@@Base+0x412>
   1edfa:	add	r3, sp, #108	; 0x6c
   1edfc:	mov	r1, r4
   1edfe:	strd	r7, r3, [sp]
   1ee02:	mov	r0, sl
   1ee04:	mov	r3, r6
   1ee06:	bl	1d124 <btrfs_cow_block@@Base>
   1ee0a:	cmp	r0, #0
   1ee0c:	bne.n	1eeee <btrfs_search_slot@@Base+0x412>
   1ee0e:	str	r0, [sp, #0]
   1ee10:	mov	r3, r5
   1ee12:	ldr	r2, [sp, #108]	; 0x6c
   1ee14:	add.w	r0, sl, #8
   1ee18:	ldr.w	r1, [r4, #464]	; 0x1d0
   1ee1c:	bl	1c4e8 <rb_free_nodes@@Base+0x34a>
   1ee20:	mov	r2, r0
   1ee22:	cmp	r0, #0
   1ee24:	bne.n	1eeee <btrfs_search_slot@@Base+0x412>
   1ee26:	ldr	r3, [sp, #48]	; 0x30
   1ee28:	mov	r0, r5
   1ee2a:	ldr	r1, [sp, #64]	; 0x40
   1ee2c:	add	r3, r1
   1ee2e:	add	r1, sp, #112	; 0x70
   1ee30:	str	r1, [sp, #48]	; 0x30
   1ee32:	mov	r7, r3
   1ee34:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1ee38:	ldrd	r1, r2, [sp, #48]	; 0x30
   1ee3c:	mov	r0, r6
   1ee3e:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1ee42:	mov	r0, r6
   1ee44:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1ee48:	ldr	r0, [sp, #108]	; 0x6c
   1ee4a:	ldr.w	r3, [r0, #192]	; 0xc0
   1ee4e:	cmp	r7, r3
   1ee50:	bcs.n	1ee6a <btrfs_search_slot@@Base+0x38e>
   1ee52:	ldr	r3, [sp, #40]	; 0x28
   1ee54:	str.w	r0, [fp, r3, lsl #2]
   1ee58:	ldr.w	r3, [r8, #36]	; 0x24
   1ee5c:	subs	r3, #1
   1ee5e:	str.w	r3, [r8, #36]	; 0x24
   1ee62:	mov	r0, r5
   1ee64:	str.w	r7, [r8, #32]
   1ee68:	b.n	1ee70 <btrfs_search_slot@@Base+0x394>
   1ee6a:	subs	r7, r7, r3
   1ee6c:	str.w	r7, [r8, #32]
   1ee70:	bl	1b4c0 <free_extent_buffer@@Base>
   1ee74:	ldr	r3, [sp, #40]	; 0x28
   1ee76:	ldr.w	r6, [fp, r3, lsl #2]
   1ee7a:	ldr.w	r3, [r4, #464]	; 0x1d0
   1ee7e:	ldr.w	r1, [r6, #192]	; 0xc0
   1ee82:	ldr.w	r2, [r3, #384]	; 0x180
   1ee86:	ldr	r3, [pc, #280]	; (1efa0 <btrfs_search_slot@@Base+0x4c4>)
   1ee88:	subs	r2, #101	; 0x65
   1ee8a:	umull	r2, r3, r2, r3
   1ee8e:	lsrs	r3, r3, #3
   1ee90:	subs	r3, #3
   1ee92:	cmp	r1, r3
   1ee94:	bcc.w	1f100 <btrfs_search_slot@@Base+0x624>
   1ee98:	ldr.w	r3, [r6, #192]	; 0xc0
   1ee9c:	add.w	r9, sp, #112	; 0x70
   1eea0:	mov	r0, r6
   1eea2:	adds	r7, r3, #1
   1eea4:	mov	r1, r9
   1eea6:	str	r3, [sp, #48]	; 0x30
   1eea8:	lsrs	r7, r7, #1
   1eeaa:	mov	r2, r7
   1eeac:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1eeb0:	ldr.w	r1, [r4, #464]	; 0x1d0
   1eeb4:	movs	r2, #0
   1eeb6:	movs	r3, #0
   1eeb8:	strd	r2, r3, [sp, #24]
   1eebc:	mov	r0, sl
   1eebe:	ldrd	r2, r3, [r6, #40]	; 0x28
   1eec2:	strd	r2, r3, [sp, #16]
   1eec6:	ldr	r3, [sp, #44]	; 0x2c
   1eec8:	strd	r9, r3, [sp, #8]
   1eecc:	ldr.w	r2, [r4, #447]	; 0x1bf
   1eed0:	ldr.w	r3, [r4, #451]	; 0x1c3
   1eed4:	strd	r2, r3, [sp]
   1eed8:	ldr.w	r2, [r1, #384]	; 0x180
   1eedc:	mov	r1, r4
   1eede:	bl	27304 <btrfs_alloc_free_block@@Base>
   1eee2:	cmn.w	r0, #4096	; 0x1000
   1eee6:	mov	r5, r0
   1eee8:	bls.n	1efe4 <btrfs_search_slot@@Base+0x508>
   1eeea:	mov	r9, r0
   1eeec:	b.n	1ed26 <btrfs_search_slot@@Base+0x24a>
   1eeee:	ldr	r0, [sp, #108]	; 0x6c
   1eef0:	bl	1b4c0 <free_extent_buffer@@Base>
   1eef4:	ldr	r7, [sp, #52]	; 0x34
   1eef6:	mov	r1, r6
   1eef8:	mov	r0, r9
   1eefa:	adds	r7, #1
   1eefc:	mov	r2, r7
   1eefe:	bl	1d4ae <read_node_slot@@Base>
   1ef02:	mov	r2, r0
   1ef04:	str	r0, [sp, #104]	; 0x68
   1ef06:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1ef0a:	cmp	r0, #0
   1ef0c:	beq.w	1edae <btrfs_search_slot@@Base+0x2d2>
   1ef10:	ldr.w	r3, [r4, #464]	; 0x1d0
   1ef14:	ldr.w	ip, [r2, #192]	; 0xc0
   1ef18:	ldr.w	r0, [r3, #384]	; 0x180
   1ef1c:	ldr	r3, [pc, #128]	; (1efa0 <btrfs_search_slot@@Base+0x4c4>)
   1ef1e:	subs	r0, #101	; 0x65
   1ef20:	umull	r0, r1, r0, r3
   1ef24:	lsrs	r3, r1, #3
   1ef26:	subs	r3, #1
   1ef28:	cmp	ip, r3
   1ef2a:	bcs.n	1ef96 <btrfs_search_slot@@Base+0x4ba>
   1ef2c:	add	r3, sp, #104	; 0x68
   1ef2e:	mov	r1, r4
   1ef30:	strd	r7, r3, [sp]
   1ef34:	mov	r0, sl
   1ef36:	mov	r3, r6
   1ef38:	bl	1d124 <btrfs_cow_block@@Base>
   1ef3c:	cbnz	r0, 1ef96 <btrfs_search_slot@@Base+0x4ba>
   1ef3e:	ldr	r2, [sp, #104]	; 0x68
   1ef40:	add.w	r1, r4, #464	; 0x1d0
   1ef44:	add.w	r0, sl, #8
   1ef48:	mov	r3, r5
   1ef4a:	bl	1c3f8 <rb_free_nodes@@Base+0x25a>
   1ef4e:	mov	r2, r0
   1ef50:	cbnz	r0, 1ef96 <btrfs_search_slot@@Base+0x4ba>
   1ef52:	add	r1, sp, #112	; 0x70
   1ef54:	ldr	r0, [sp, #104]	; 0x68
   1ef56:	str	r1, [sp, #52]	; 0x34
   1ef58:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1ef5c:	mov	r2, r7
   1ef5e:	ldr	r1, [sp, #52]	; 0x34
   1ef60:	mov	r0, r6
   1ef62:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1ef66:	mov	r0, r6
   1ef68:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1ef6c:	ldr.w	r3, [r5, #192]	; 0xc0
   1ef70:	ldr	r2, [sp, #48]	; 0x30
   1ef72:	cmp	r3, r2
   1ef74:	bhi.n	1ef92 <btrfs_search_slot@@Base+0x4b6>
   1ef76:	ldr	r3, [sp, #104]	; 0x68
   1ef78:	ldr	r2, [sp, #40]	; 0x28
   1ef7a:	str.w	r3, [fp, r2, lsl #2]
   1ef7e:	ldr.w	r3, [r8, #36]	; 0x24
   1ef82:	adds	r3, #1
   1ef84:	str.w	r3, [r8, #36]	; 0x24
   1ef88:	ldr	r3, [sp, #48]	; 0x30
   1ef8a:	ldr.w	r7, [r5, #192]	; 0xc0
   1ef8e:	subs	r7, r3, r7
   1ef90:	b.n	1ee62 <btrfs_search_slot@@Base+0x386>
   1ef92:	ldr	r0, [sp, #104]	; 0x68
   1ef94:	b.n	1ee70 <btrfs_search_slot@@Base+0x394>
   1ef96:	ldr	r0, [sp, #104]	; 0x68
   1ef98:	bl	1b4c0 <free_extent_buffer@@Base>
   1ef9c:	b.n	1edae <btrfs_search_slot@@Base+0x2d2>
   1ef9e:	nop
   1efa0:	strh	r1, [r4, #30]
   1efa2:	subs	r6, #15
   1efa4:	lsls	r0, r1, #10
   1efa6:	movs	r0, r0
   1efa8:	stmia	r2!, {r1, r5}
   1efaa:	movs	r4, r0
   1efac:	adds	r6, #220	; 0xdc
   1efae:	movs	r2, r0
   1efb0:	adds	r4, #134	; 0x86
   1efb2:	movs	r2, r0
   1efb4:	adds	r4, #138	; 0x8a
   1efb6:	movs	r2, r0
   1efb8:	adds	r6, #146	; 0x92
   1efba:	movs	r2, r0
   1efbc:	stmia	r1!, {r2, r5, r6}
   1efbe:	movs	r4, r0
   1efc0:	adds	r4, #18
   1efc2:	movs	r2, r0
   1efc4:	cmp	ip, r7
   1efc6:	movs	r2, r0
   1efc8:	adds	r5, #172	; 0xac
   1efca:	movs	r2, r0
   1efcc:	adds	r3, #230	; 0xe6
   1efce:	movs	r2, r0
   1efd0:	adds	r5, #44	; 0x2c
   1efd2:	movs	r2, r0
   1efd4:	adds	r2, #248	; 0xf8
   1efd6:	movs	r2, r0
   1efd8:	adds	r4, #218	; 0xda
   1efda:	movs	r2, r0
   1efdc:	adds	r3, #26
   1efde:	movs	r2, r0
   1efe0:	adds	r2, #135	; 0x87
   1efe2:	movs	r2, r0
   1efe4:	movs	r2, #0
   1efe6:	movs	r3, #101	; 0x65
   1efe8:	mov	r1, r2
   1efea:	bl	1bc42 <memset_extent_buffer@@Base>
   1efee:	ldrb.w	r3, [r6, #196]	; 0xc4
   1eff2:	mov	r0, r5
   1eff4:	strb.w	r3, [r5, #196]	; 0xc4
   1eff8:	ldr	r3, [r5, #40]	; 0x28
   1effa:	str.w	r3, [r5, #144]	; 0x90
   1effe:	ldr	r3, [r5, #44]	; 0x2c
   1f000:	str.w	r3, [r5, #148]	; 0x94
   1f004:	ldrd	r2, r3, [sl, #8]
   1f008:	str.w	r2, [r5, #176]	; 0xb0
   1f00c:	str.w	r3, [r5, #180]	; 0xb4
   1f010:	ldr.w	r2, [r5, #152]	; 0x98
   1f014:	ldr.w	r3, [r5, #156]	; 0x9c
   1f018:	bic.w	r3, r3, #4278190080	; 0xff000000
   1f01c:	str.w	r2, [r5, #152]	; 0x98
   1f020:	orr.w	r3, r3, #16777216	; 0x1000000
   1f024:	str.w	r3, [r5, #156]	; 0x9c
   1f028:	ldr.w	r2, [r4, #447]	; 0x1bf
   1f02c:	ldr.w	r3, [r4, #451]	; 0x1c3
   1f030:	str.w	r2, [r5, #184]	; 0xb8
   1f034:	movs	r2, #32
   1f036:	str.w	r3, [r5, #188]	; 0xbc
   1f03a:	ldr.w	r3, [r4, #464]	; 0x1d0
   1f03e:	ldr.w	r1, [r3, #352]	; 0x160
   1f042:	movs	r3, #16
   1f044:	add	r1, r3
   1f046:	bl	1bbd0 <write_extent_buffer@@Base>
   1f04a:	ldr.w	r1, [r4, #464]	; 0x1d0
   1f04e:	movs	r3, #16
   1f050:	movs	r2, #64	; 0x40
   1f052:	mov	r0, r5
   1f054:	bl	1bbd0 <write_extent_buffer@@Base>
   1f058:	ldr.w	r1, [r4, #464]	; 0x1d0
   1f05c:	ldr.w	r2, [r4, #200]	; 0xc8
   1f060:	mov	r0, r5
   1f062:	ldr.w	r3, [r4, #204]	; 0xcc
   1f066:	ldr.w	r1, [r1, #384]	; 0x180
   1f06a:	adds	r2, r2, r1
   1f06c:	str.w	r2, [r4, #200]	; 0xc8
   1f070:	adc.w	r3, r3, #0
   1f074:	str.w	r3, [r4, #204]	; 0xcc
   1f078:	ldr	r3, [sp, #48]	; 0x30
   1f07a:	mov	r1, r6
   1f07c:	subs	r3, r3, r7
   1f07e:	str	r3, [sp, #48]	; 0x30
   1f080:	ldr	r2, [sp, #48]	; 0x30
   1f082:	add.w	r3, r7, r7, lsl #5
   1f086:	adds	r3, #101	; 0x65
   1f088:	add.w	r2, r2, r2, lsl #5
   1f08c:	str	r2, [sp, #0]
   1f08e:	movs	r2, #101	; 0x65
   1f090:	bl	1bbe2 <copy_extent_buffer@@Base>
   1f094:	ldr	r3, [sp, #48]	; 0x30
   1f096:	mov	r0, r6
   1f098:	str.w	r3, [r5, #192]	; 0xc0
   1f09c:	str.w	r7, [r6, #192]	; 0xc0
   1f0a0:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1f0a4:	mov	r0, r5
   1f0a6:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1f0aa:	ldr	r3, [sp, #44]	; 0x2c
   1f0ac:	add.w	r1, r4, #464	; 0x1d0
   1f0b0:	add.w	r0, sl, #8
   1f0b4:	adds	r3, #1
   1f0b6:	str	r3, [sp, #12]
   1f0b8:	ldr.w	r3, [r8, #36]	; 0x24
   1f0bc:	adds	r3, #1
   1f0be:	str	r3, [sp, #8]
   1f0c0:	ldrd	r2, r3, [r5, #40]	; 0x28
   1f0c4:	strd	r2, r3, [sp]
   1f0c8:	mov	r3, r9
   1f0ca:	mov	r2, fp
   1f0cc:	bl	1c304 <rb_free_nodes@@Base+0x166>
   1f0d0:	ldr.w	r3, [r8, #32]
   1f0d4:	cmp	r7, r3
   1f0d6:	mov	r9, r0
   1f0d8:	bgt.n	1f0f8 <btrfs_search_slot@@Base+0x61c>
   1f0da:	subs	r7, r3, r7
   1f0dc:	mov	r0, r6
   1f0de:	str.w	r7, [r8, #32]
   1f0e2:	bl	1b4c0 <free_extent_buffer@@Base>
   1f0e6:	ldr	r3, [sp, #40]	; 0x28
   1f0e8:	str.w	r5, [fp, r3, lsl #2]
   1f0ec:	ldr.w	r3, [r8, #36]	; 0x24
   1f0f0:	adds	r3, #1
   1f0f2:	str.w	r3, [r8, #36]	; 0x24
   1f0f6:	b.n	1ed26 <btrfs_search_slot@@Base+0x24a>
   1f0f8:	mov	r0, r5
   1f0fa:	bl	1b4c0 <free_extent_buffer@@Base>
   1f0fe:	b.n	1ed26 <btrfs_search_slot@@Base+0x24a>
   1f100:	mov.w	r9, #0
   1f104:	b.n	1ed26 <btrfs_search_slot@@Base+0x24a>
   1f106:	ldr	r3, [sp, #192]	; 0xc0
   1f108:	cmp	r3, #0
   1f10a:	bge.w	1ed5a <btrfs_search_slot@@Base+0x27e>
   1f10e:	movs	r3, #0
   1f110:	strd	r3, r3, [sp, #104]	; 0x68
   1f114:	ldr	r3, [sp, #40]	; 0x28
   1f116:	ldr.w	r6, [r4, #464]	; 0x1d0
   1f11a:	ldr.w	r5, [fp, r3, lsl #2]
   1f11e:	ldrd	r2, r3, [sl, #8]
   1f122:	ldr.w	r1, [r5, #180]	; 0xb4
   1f126:	ldr.w	r0, [r5, #176]	; 0xb0
   1f12a:	cmp	r1, r3
   1f12c:	ldr.w	r1, [pc, #1092]	; 1f574 <btrfs_search_slot@@Base+0xa98>
   1f130:	it	eq
   1f132:	cmpeq	r0, r2
   1f134:	ldr.w	r0, [pc, #1088]	; 1f578 <btrfs_search_slot@@Base+0xa9c>
   1f138:	add	r1, pc
   1f13a:	movw	r2, #734	; 0x2de
   1f13e:	ite	ne
   1f140:	movne	r3, #1
   1f142:	moveq	r3, #0
   1f144:	addw	r1, r1, #393	; 0x189
   1f148:	add	r0, pc
   1f14a:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1f14e:	ldr	r3, [sp, #44]	; 0x2c
   1f150:	cmp	r3, #6
   1f152:	bgt.n	1f162 <btrfs_search_slot@@Base+0x686>
   1f154:	ldr.w	r7, [r8, #4]
   1f158:	adds	r3, #1
   1f15a:	vmov	s18, r3
   1f15e:	cmp	r7, #0
   1f160:	bne.n	1f238 <btrfs_search_slot@@Base+0x75c>
   1f162:	ldr.w	r3, [r5, #192]	; 0xc0
   1f166:	cmp	r3, #1
   1f168:	bne.w	1f538 <btrfs_search_slot@@Base+0xa5c>
   1f16c:	movs	r2, #0
   1f16e:	mov	r1, r5
   1f170:	mov	r0, r6
   1f172:	ldr.w	r6, [pc, #1032]	; 1f57c <btrfs_search_slot@@Base+0xaa0>
   1f176:	bl	1d4ae <read_node_slot@@Base>
   1f17a:	mov.w	r9, #0
   1f17e:	add	r6, pc
   1f180:	addw	r6, r6, #393	; 0x189
   1f184:	mov	r7, r0
   1f186:	str	r0, [sp, #112]	; 0x70
   1f188:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1f18c:	movw	r2, #755	; 0x2f3
   1f190:	mov	r1, r6
   1f192:	clz	r3, r0
   1f196:	ldr	r0, [pc, #1000]	; (1f580 <btrfs_search_slot@@Base+0xaa4>)
   1f198:	lsrs	r3, r3, #5
   1f19a:	add	r0, pc
   1f19c:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f1a0:	add	r3, sp, #112	; 0x70
   1f1a2:	mov	r2, r7
   1f1a4:	mov	r1, r4
   1f1a6:	str	r3, [sp, #4]
   1f1a8:	mov	r0, sl
   1f1aa:	mov	r3, r5
   1f1ac:	str.w	r9, [sp]
   1f1b0:	bl	1d124 <btrfs_cow_block@@Base>
   1f1b4:	movw	r2, #757	; 0x2f5
   1f1b8:	mov	r1, r6
   1f1ba:	mov	r3, r0
   1f1bc:	ldr	r0, [pc, #964]	; (1f584 <btrfs_search_slot@@Base+0xaa8>)
   1f1be:	add	r0, pc
   1f1c0:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f1c4:	ldr	r3, [sp, #112]	; 0x70
   1f1c6:	mov	r0, r4
   1f1c8:	str	r3, [r4, #0]
   1f1ca:	bl	1c734 <add_root_to_dirty_list@@Base>
   1f1ce:	ldr	r3, [sp, #40]	; 0x28
   1f1d0:	mov	r0, r5
   1f1d2:	str.w	r9, [fp, r3, lsl #2]
   1f1d6:	bl	21dac <clean_tree_block@@Base>
   1f1da:	mov	r0, r5
   1f1dc:	bl	1b4c0 <free_extent_buffer@@Base>
   1f1e0:	ldr	r1, [r5, #76]	; 0x4c
   1f1e2:	ldr.w	r2, [r4, #200]	; 0xc8
   1f1e6:	ldrb.w	r0, [sp, #44]	; 0x2c
   1f1ea:	ldr.w	r3, [r4, #204]	; 0xcc
   1f1ee:	subs	r2, r2, r1
   1f1f0:	mov.w	r1, #0
   1f1f4:	str.w	r2, [r4, #200]	; 0xc8
   1f1f8:	sbc.w	r3, r3, #0
   1f1fc:	movs	r2, #0
   1f1fe:	str.w	r3, [r4, #204]	; 0xcc
   1f202:	movs	r3, #0
   1f204:	strd	r0, r1, [sp, #24]
   1f208:	strd	r2, r3, [sp, #32]
   1f20c:	ldr.w	r0, [r4, #447]	; 0x1bf
   1f210:	ldr.w	r1, [r4, #451]	; 0x1c3
   1f214:	strd	r2, r3, [sp, #8]
   1f218:	strd	r0, r1, [sp, #16]
   1f21c:	mov	r1, r4
   1f21e:	ldr	r3, [r5, #76]	; 0x4c
   1f220:	mov	r0, sl
   1f222:	strd	r3, r9, [sp]
   1f226:	ldrd	r2, r3, [r5, #40]	; 0x28
   1f22a:	bl	254ec <btrfs_free_extent@@Base>
   1f22e:	mov	r9, r0
   1f230:	mov	r0, r5
   1f232:	bl	1b4c0 <free_extent_buffer@@Base>
   1f236:	b.n	1f530 <btrfs_search_slot@@Base+0xa54>
   1f238:	ldr.w	r2, [r6, #384]	; 0x180
   1f23c:	ldr	r3, [pc, #816]	; (1f570 <btrfs_search_slot@@Base+0xa94>)
   1f23e:	subs	r2, #101	; 0x65
   1f240:	umull	r0, r1, r2, r3
   1f244:	ldr.w	r2, [r5, #192]	; 0xc0
   1f248:	cmp.w	r2, r1, lsr #5
   1f24c:	bhi.w	1f538 <btrfs_search_slot@@Base+0xa5c>
   1f250:	ldr	r3, [sp, #48]	; 0x30
   1f252:	mov	r1, r7
   1f254:	mov	r0, r6
   1f256:	add.w	r3, r3, r3, lsl #5
   1f25a:	add	r3, r5
   1f25c:	ldr.w	r2, [r3, #214]!
   1f260:	ldr	r3, [r3, #4]
   1f262:	str	r2, [sp, #64]	; 0x40
   1f264:	str	r3, [sp, #68]	; 0x44
   1f266:	ldr.w	r3, [r8, #36]	; 0x24
   1f26a:	add.w	r9, r3, #4294967295	; 0xffffffff
   1f26e:	str	r3, [sp, #52]	; 0x34
   1f270:	mov	r2, r9
   1f272:	bl	1d4ae <read_node_slot@@Base>
   1f276:	mov	r2, r0
   1f278:	str	r0, [sp, #108]	; 0x6c
   1f27a:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1f27e:	cmp	r0, #0
   1f280:	bne.w	1f508 <btrfs_search_slot@@Base+0xa2c>
   1f284:	ldr	r3, [sp, #52]	; 0x34
   1f286:	mov	r1, r7
   1f288:	mov	r0, r6
   1f28a:	adds	r3, #1
   1f28c:	mov	r2, r3
   1f28e:	vmov	s17, r3
   1f292:	bl	1d4ae <read_node_slot@@Base>
   1f296:	mov	r2, r0
   1f298:	str	r0, [sp, #104]	; 0x68
   1f29a:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1f29e:	cbz	r0, 1f2ba <btrfs_search_slot@@Base+0x7de>
   1f2a0:	add	r3, sp, #104	; 0x68
   1f2a2:	vstr	s17, [sp]
   1f2a6:	str	r3, [sp, #4]
   1f2a8:	mov	r1, r4
   1f2aa:	mov	r3, r7
   1f2ac:	mov	r0, sl
   1f2ae:	bl	1d124 <btrfs_cow_block@@Base>
   1f2b2:	mov	r9, r0
   1f2b4:	cmp	r0, #0
   1f2b6:	bne.w	1f520 <btrfs_search_slot@@Base+0xa44>
   1f2ba:	ldr	r2, [sp, #108]	; 0x6c
   1f2bc:	cmp	r2, #0
   1f2be:	bne.w	1f54e <btrfs_search_slot@@Base+0xa72>
   1f2c2:	mov	r6, r2
   1f2c4:	ldr	r3, [sp, #104]	; 0x68
   1f2c6:	cmp	r3, #0
   1f2c8:	beq.n	1f37c <btrfs_search_slot@@Base+0x8a0>
   1f2ca:	movs	r2, #1
   1f2cc:	add.w	r0, sl, #8
   1f2d0:	str	r2, [sp, #0]
   1f2d2:	mov	r2, r5
   1f2d4:	ldr.w	r1, [r4, #464]	; 0x1d0
   1f2d8:	bl	1c4e8 <rb_free_nodes@@Base+0x34a>
   1f2dc:	cmp	r0, #0
   1f2de:	bge.n	1f2e8 <btrfs_search_slot@@Base+0x80c>
   1f2e0:	cmn.w	r0, #28
   1f2e4:	it	ne
   1f2e6:	movne	r6, r0
   1f2e8:	ldr	r0, [sp, #104]	; 0x68
   1f2ea:	ldr.w	r9, [r0, #192]	; 0xc0
   1f2ee:	cmp.w	r9, #0
   1f2f2:	bne.w	1f5a0 <btrfs_search_slot@@Base+0xac4>
   1f2f6:	ldrd	r2, r3, [r0, #40]	; 0x28
   1f2fa:	strd	r2, r3, [sp, #72]	; 0x48
   1f2fe:	ldr	r3, [r0, #76]	; 0x4c
   1f300:	str	r3, [sp, #80]	; 0x50
   1f302:	bl	21dac <clean_tree_block@@Base>
   1f306:	ldr	r0, [sp, #104]	; 0x68
   1f308:	bl	1b4c0 <free_extent_buffer@@Base>
   1f30c:	vmov	r3, s17
   1f310:	vmov	r2, s18
   1f314:	mov	r1, fp
   1f316:	mov	r0, r4
   1f318:	str.w	r9, [sp, #104]	; 0x68
   1f31c:	bl	1ea0c <btrfs_del_ptr@@Base>
   1f320:	ldr	r1, [sp, #104]	; 0x68
   1f322:	ldr.w	r2, [r4, #200]	; 0xc8
   1f326:	ldr.w	r3, [r4, #204]	; 0xcc
   1f32a:	ldr	r1, [r1, #76]	; 0x4c
   1f32c:	cmp	r0, #0
   1f32e:	it	ne
   1f330:	movne	r6, r0
   1f332:	ldrb.w	r0, [sp, #44]	; 0x2c
   1f336:	subs	r2, r2, r1
   1f338:	mov.w	r1, #0
   1f33c:	str.w	r2, [r4, #200]	; 0xc8
   1f340:	sbc.w	r3, r3, #0
   1f344:	movs	r2, #0
   1f346:	str.w	r3, [r4, #204]	; 0xcc
   1f34a:	movs	r3, #0
   1f34c:	strd	r0, r1, [sp, #24]
   1f350:	strd	r2, r3, [sp, #32]
   1f354:	ldr.w	r0, [r4, #447]	; 0x1bf
   1f358:	ldr.w	r1, [r4, #451]	; 0x1c3
   1f35c:	strd	r2, r3, [sp, #8]
   1f360:	ldr	r3, [sp, #80]	; 0x50
   1f362:	strd	r0, r1, [sp, #16]
   1f366:	mov	r1, r4
   1f368:	mov	r0, sl
   1f36a:	strd	r3, r9, [sp]
   1f36e:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f372:	bl	254ec <btrfs_free_extent@@Base>
   1f376:	cmp	r0, #0
   1f378:	it	ne
   1f37a:	movne	r6, r0
   1f37c:	ldr.w	r3, [r5, #192]	; 0xc0
   1f380:	cmp	r3, #1
   1f382:	bne.n	1f400 <btrfs_search_slot@@Base+0x924>
   1f384:	ldr.w	r9, [sp, #108]	; 0x6c
   1f388:	mov.w	r2, #848	; 0x350
   1f38c:	ldr	r1, [pc, #504]	; (1f588 <btrfs_search_slot@@Base+0xaac>)
   1f38e:	clz	r3, r9
   1f392:	ldr	r0, [pc, #504]	; (1f58c <btrfs_search_slot@@Base+0xab0>)
   1f394:	add	r1, pc
   1f396:	lsrs	r3, r3, #5
   1f398:	addw	r1, r1, #393	; 0x189
   1f39c:	add	r0, pc
   1f39e:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f3a2:	add.w	r3, sl, #8
   1f3a6:	add.w	r1, r4, #464	; 0x1d0
   1f3aa:	mov	r2, r5
   1f3ac:	vmov	s17, r3
   1f3b0:	mov	r3, r9
   1f3b2:	vmov	r0, s17
   1f3b6:	bl	1c3f8 <rb_free_nodes@@Base+0x25a>
   1f3ba:	subs.w	r9, r0, #0
   1f3be:	blt.w	1f520 <btrfs_search_slot@@Base+0xa44>
   1f3c2:	cmp.w	r9, #1
   1f3c6:	bne.n	1f3e4 <btrfs_search_slot@@Base+0x908>
   1f3c8:	str.w	r9, [sp]
   1f3cc:	mov	r3, r5
   1f3ce:	vmov	r0, s17
   1f3d2:	ldr	r2, [sp, #108]	; 0x6c
   1f3d4:	ldr.w	r1, [r4, #464]	; 0x1d0
   1f3d8:	bl	1c4e8 <rb_free_nodes@@Base+0x34a>
   1f3dc:	subs.w	r9, r0, #0
   1f3e0:	it	lt
   1f3e2:	movlt	r6, r9
   1f3e4:	add.w	r1, r9, #4294967295	; 0xffffffff
   1f3e8:	ldr	r0, [pc, #420]	; (1f590 <btrfs_search_slot@@Base+0xab4>)
   1f3ea:	negs	r3, r1
   1f3ec:	movw	r2, #859	; 0x35b
   1f3f0:	adcs	r3, r1
   1f3f2:	ldr	r1, [pc, #416]	; (1f594 <btrfs_search_slot@@Base+0xab8>)
   1f3f4:	add	r0, pc
   1f3f6:	add	r1, pc
   1f3f8:	addw	r1, r1, #393	; 0x189
   1f3fc:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f400:	ldr.w	r3, [r5, #192]	; 0xc0
   1f404:	mov	r9, r6
   1f406:	str	r3, [sp, #72]	; 0x48
   1f408:	cmp	r3, #0
   1f40a:	bne.w	1f5be <btrfs_search_slot@@Base+0xae2>
   1f40e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1f412:	mov	r0, r5
   1f414:	ldr	r7, [r5, #76]	; 0x4c
   1f416:	strd	r2, r3, [sp, #80]	; 0x50
   1f41a:	bl	21dac <clean_tree_block@@Base>
   1f41e:	mov	r0, r5
   1f420:	bl	1b4c0 <free_extent_buffer@@Base>
   1f424:	vmov	r2, s18
   1f428:	ldr	r3, [sp, #52]	; 0x34
   1f42a:	mov	r1, fp
   1f42c:	mov	r0, r4
   1f42e:	bl	1ea0c <btrfs_del_ptr@@Base>
   1f432:	ldr.w	r2, [r4, #200]	; 0xc8
   1f436:	ldr.w	r3, [r4, #204]	; 0xcc
   1f43a:	movs	r1, #0
   1f43c:	cmp	r0, #0
   1f43e:	ite	ne
   1f440:	movne	r9, r0
   1f442:	moveq	r9, r6
   1f444:	ldrb.w	r0, [sp, #44]	; 0x2c
   1f448:	subs	r2, r2, r7
   1f44a:	str.w	r2, [r4, #200]	; 0xc8
   1f44e:	sbc.w	r3, r3, #0
   1f452:	movs	r2, #0
   1f454:	str.w	r3, [r4, #204]	; 0xcc
   1f458:	movs	r3, #0
   1f45a:	strd	r0, r1, [sp, #24]
   1f45e:	strd	r2, r3, [sp, #32]
   1f462:	ldr.w	r0, [r4, #447]	; 0x1bf
   1f466:	ldr.w	r1, [r4, #451]	; 0x1c3
   1f46a:	strd	r2, r3, [sp, #8]
   1f46e:	movs	r3, #0
   1f470:	str	r7, [sp, #0]
   1f472:	strd	r0, r1, [sp, #16]
   1f476:	mov	r1, r4
   1f478:	str	r3, [sp, #4]
   1f47a:	mov	r0, sl
   1f47c:	ldrd	r2, r3, [sp, #80]	; 0x50
   1f480:	bl	254ec <btrfs_free_extent@@Base>
   1f484:	ldr	r5, [sp, #72]	; 0x48
   1f486:	cmp	r0, #0
   1f488:	it	ne
   1f48a:	movne	r9, r0
   1f48c:	ldr	r2, [sp, #108]	; 0x6c
   1f48e:	cbz	r2, 1f4be <btrfs_search_slot@@Base+0x9e2>
   1f490:	ldr.w	r3, [r2, #192]	; 0xc0
   1f494:	ldr	r1, [sp, #48]	; 0x30
   1f496:	cmp	r3, r1
   1f498:	bls.w	1f5dc <btrfs_search_slot@@Base+0xb00>
   1f49c:	ldr	r3, [r2, #80]	; 0x50
   1f49e:	adds	r3, #1
   1f4a0:	str	r3, [r2, #80]	; 0x50
   1f4a2:	ldr	r3, [sp, #40]	; 0x28
   1f4a4:	str.w	r2, [fp, r3, lsl #2]
   1f4a8:	ldr.w	r3, [r8, #36]	; 0x24
   1f4ac:	str.w	r1, [r8, #32]
   1f4b0:	subs	r3, #1
   1f4b2:	str.w	r3, [r8, #36]	; 0x24
   1f4b6:	cbz	r5, 1f4be <btrfs_search_slot@@Base+0x9e2>
   1f4b8:	mov	r0, r5
   1f4ba:	bl	1b4c0 <free_extent_buffer@@Base>
   1f4be:	ldrb.w	r3, [fp, #67]	; 0x43
   1f4c2:	cbnz	r3, 1f4d0 <btrfs_search_slot@@Base+0x9f4>
   1f4c4:	ldr	r2, [sp, #44]	; 0x2c
   1f4c6:	mov	r1, fp
   1f4c8:	ldr.w	r0, [r4, #464]	; 0x1d0
   1f4cc:	bl	1dbd0 <btrfs_check_leaf@@Base+0x2c0>
   1f4d0:	ldr	r3, [sp, #40]	; 0x28
   1f4d2:	ldr.w	r2, [r8, #32]
   1f4d6:	ldr.w	r3, [fp, r3, lsl #2]
   1f4da:	add.w	r2, r2, r2, lsl #5
   1f4de:	add	r3, r2
   1f4e0:	ldr.w	r0, [r3, #214]!
   1f4e4:	ldr	r1, [r3, #4]
   1f4e6:	ldrd	r2, r3, [sp, #64]	; 0x40
   1f4ea:	cmp	r3, r1
   1f4ec:	it	eq
   1f4ee:	cmpeq	r2, r0
   1f4f0:	beq.n	1f520 <btrfs_search_slot@@Base+0xa44>
   1f4f2:	ldr	r1, [pc, #164]	; (1f598 <btrfs_search_slot@@Base+0xabc>)
   1f4f4:	movs	r3, #1
   1f4f6:	ldr	r0, [pc, #164]	; (1f59c <btrfs_search_slot@@Base+0xac0>)
   1f4f8:	mov.w	r2, #904	; 0x388
   1f4fc:	add	r1, pc
   1f4fe:	addw	r1, r1, #393	; 0x189
   1f502:	add	r0, pc
   1f504:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1f508:	add	r3, sp, #108	; 0x6c
   1f50a:	mov	r1, r4
   1f50c:	strd	r9, r3, [sp]
   1f510:	mov	r0, sl
   1f512:	mov	r3, r7
   1f514:	bl	1d124 <btrfs_cow_block@@Base>
   1f518:	mov	r9, r0
   1f51a:	cmp	r0, #0
   1f51c:	beq.w	1f284 <btrfs_search_slot@@Base+0x7a8>
   1f520:	ldr	r0, [sp, #104]	; 0x68
   1f522:	cbz	r0, 1f528 <btrfs_search_slot@@Base+0xa4c>
   1f524:	bl	1b4c0 <free_extent_buffer@@Base>
   1f528:	ldr	r0, [sp, #108]	; 0x6c
   1f52a:	cmp	r0, #0
   1f52c:	bne.w	1f232 <btrfs_search_slot@@Base+0x756>
   1f530:	cmp.w	r9, #0
   1f534:	bne.w	1ebae <btrfs_search_slot@@Base+0xd2>
   1f538:	ldr	r3, [sp, #40]	; 0x28
   1f53a:	ldr.w	r3, [fp, r3, lsl #2]
   1f53e:	str	r3, [sp, #96]	; 0x60
   1f540:	cmp	r3, #0
   1f542:	bne.n	1f5e6 <btrfs_search_slot@@Base+0xb0a>
   1f544:	mov	r0, fp
   1f546:	bl	1c6f8 <btrfs_release_path@@Base>
   1f54a:	b.w	1eb6c <btrfs_search_slot@@Base+0x90>
   1f54e:	ldr.w	r3, [r2, #192]	; 0xc0
   1f552:	add.w	r0, sl, #8
   1f556:	ldr	r1, [sp, #48]	; 0x30
   1f558:	add	r1, r3
   1f55a:	movs	r3, #1
   1f55c:	str	r1, [sp, #48]	; 0x30
   1f55e:	str	r3, [sp, #0]
   1f560:	mov	r3, r5
   1f562:	ldr.w	r1, [r4, #464]	; 0x1d0
   1f566:	bl	1c4e8 <rb_free_nodes@@Base+0x34a>
   1f56a:	and.w	r6, r0, r0, asr #31
   1f56e:	b.n	1f2c4 <btrfs_search_slot@@Base+0x7e8>
   1f570:	strh	r1, [r4, #30]
   1f572:	subs	r6, #15
   1f574:	adds	r0, #212	; 0xd4
   1f576:	movs	r2, r0
   1f578:	cmp	r6, #225	; 0xe1
   1f57a:	movs	r2, r0
   1f57c:	adds	r0, #142	; 0x8e
   1f57e:	movs	r2, r0
   1f580:	cmp	r6, #199	; 0xc7
   1f582:	movs	r2, r0
   1f584:	lsrs	r4, r0, #6
   1f586:	movs	r2, r0
   1f588:	cmp	r6, #120	; 0x78
   1f58a:	movs	r2, r0
   1f58c:	cmp	r4, #228	; 0xe4
   1f58e:	movs	r2, r0
   1f590:	cmp	r4, #146	; 0x92
   1f592:	movs	r2, r0
   1f594:	cmp	r6, #22
   1f596:	movs	r2, r0
   1f598:	cmp	r5, #16
   1f59a:	movs	r2, r0
   1f59c:	subs	r4, #176	; 0xb0
   1f59e:	movs	r2, r0
   1f5a0:	add	r1, sp, #112	; 0x70
   1f5a2:	movs	r2, #0
   1f5a4:	str	r1, [sp, #72]	; 0x48
   1f5a6:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1f5aa:	mov	r0, r7
   1f5ac:	vmov	r2, s17
   1f5b0:	ldr	r1, [sp, #72]	; 0x48
   1f5b2:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1f5b6:	mov	r0, r7
   1f5b8:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1f5bc:	b.n	1f37c <btrfs_search_slot@@Base+0x8a0>
   1f5be:	add	r1, sp, #112	; 0x70
   1f5c0:	mov	r0, r5
   1f5c2:	movs	r2, #0
   1f5c4:	str	r1, [sp, #72]	; 0x48
   1f5c6:	bl	1c1f2 <rb_free_nodes@@Base+0x54>
   1f5ca:	mov	r0, r7
   1f5cc:	ldr	r2, [sp, #52]	; 0x34
   1f5ce:	ldr	r1, [sp, #72]	; 0x48
   1f5d0:	bl	1c1ce <rb_free_nodes@@Base+0x30>
   1f5d4:	mov	r0, r7
   1f5d6:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1f5da:	b.n	1f48c <btrfs_search_slot@@Base+0x9b0>
   1f5dc:	ldr	r2, [sp, #48]	; 0x30
   1f5de:	subs	r3, r2, r3
   1f5e0:	str.w	r3, [r8, #32]
   1f5e4:	b.n	1f4be <btrfs_search_slot@@Base+0x9e2>
   1f5e6:	ldr.w	r2, [r8, #32]
   1f5ea:	ldr	r1, [pc, #108]	; (1f658 <btrfs_search_slot@@Base+0xb7c>)
   1f5ec:	ldr	r0, [pc, #108]	; (1f65c <btrfs_search_slot@@Base+0xb80>)
   1f5ee:	str	r2, [sp, #100]	; 0x64
   1f5f0:	add	r1, pc
   1f5f2:	ldr.w	r3, [r3, #192]	; 0xc0
   1f5f6:	add.w	r1, r1, #342	; 0x156
   1f5fa:	add	r0, pc
   1f5fc:	subs	r2, r3, #1
   1f5fe:	negs	r3, r2
   1f600:	adcs	r3, r2
   1f602:	movw	r2, #1227	; 0x4cb
   1f606:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f60a:	b.w	1ed5a <btrfs_search_slot@@Base+0x27e>
   1f60e:	ldr	r3, [sp, #88]	; 0x58
   1f610:	cbz	r3, 1f62a <btrfs_search_slot@@Base+0xb4e>
   1f612:	ldr	r3, [sp, #56]	; 0x38
   1f614:	mov	r1, fp
   1f616:	vmov	r0, s16
   1f61a:	ldr	r2, [r3, #0]
   1f61c:	ldr	r3, [r3, #4]
   1f61e:	strd	r2, r3, [sp]
   1f622:	ldr	r3, [sp, #100]	; 0x64
   1f624:	ldr	r2, [sp, #44]	; 0x2c
   1f626:	bl	1d528 <reada_for_search@@Base>
   1f62a:	vmov	r0, s16
   1f62e:	ldrd	r1, r2, [sp, #96]	; 0x60
   1f632:	bl	1d4ae <read_node_slot@@Base>
   1f636:	str	r0, [sp, #96]	; 0x60
   1f638:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1f63c:	cmp	r0, #0
   1f63e:	bne.w	1eb7e <btrfs_search_slot@@Base+0xa2>
   1f642:	mvn.w	r9, #4
   1f646:	b.w	1ebae <btrfs_search_slot@@Base+0xd2>
   1f64a:	mov	r0, r9
   1f64c:	add	sp, #140	; 0x8c
   1f64e:	vpop	{d8-d9}
   1f652:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f656:	nop
   1f658:	cmp	r4, #28
   1f65a:	movs	r2, r0
   1f65c:	cmp	r2, #150	; 0x96
   1f65e:	movs	r2, r0

0001f660 <btrfs_split_item@@Base>:
   1f660:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f664:	sub	sp, #76	; 0x4c
   1f666:	mov	r4, r2
   1f668:	ldr	r2, [pc, #536]	; (1f884 <btrfs_split_item@@Base+0x224>)
   1f66a:	str	r3, [sp, #12]
   1f66c:	add.w	r8, sp, #28
   1f670:	ldr	r3, [pc, #532]	; (1f888 <btrfs_split_item@@Base+0x228>)
   1f672:	add	r2, pc
   1f674:	ldr	r5, [r4, #0]
   1f676:	mov	r6, r0
   1f678:	mov	r7, r1
   1f67a:	mov	r1, r8
   1f67c:	ldr	r3, [r2, r3]
   1f67e:	mov	r0, r5
   1f680:	ldr	r2, [r4, #32]
   1f682:	ldr	r3, [r3, #0]
   1f684:	str	r3, [sp, #68]	; 0x44
   1f686:	mov.w	r3, #0
   1f68a:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   1f68e:	mov	r0, r5
   1f690:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1f694:	cmp	r0, #24
   1f696:	bhi.n	1f72c <btrfs_split_item@@Base+0xcc>
   1f698:	ldr	r3, [r4, #32]
   1f69a:	mov.w	r9, #25
   1f69e:	mov	r0, r4
   1f6a0:	mov.w	sl, #0
   1f6a4:	mla	r3, r9, r3, r5
   1f6a8:	ldr.w	fp, [r3, #218]	; 0xda
   1f6ac:	bl	1c6f8 <btrfs_release_path@@Base>
   1f6b0:	movs	r3, #1
   1f6b2:	mov	r2, r8
   1f6b4:	strb.w	r3, [r4, #66]	; 0x42
   1f6b8:	mov	r1, r7
   1f6ba:	str	r3, [sp, #4]
   1f6bc:	mov	r0, r6
   1f6be:	mov	r3, r4
   1f6c0:	str.w	sl, [sp]
   1f6c4:	bl	1eadc <btrfs_search_slot@@Base>
   1f6c8:	strb.w	sl, [r4, #66]	; 0x42
   1f6cc:	cmp	r0, #0
   1f6ce:	bne.w	1f878 <btrfs_split_item@@Base+0x218>
   1f6d2:	ldr	r3, [r4, #32]
   1f6d4:	ldr	r2, [r4, #0]
   1f6d6:	mla	r3, r9, r3, r2
   1f6da:	ldr.w	r3, [r3, #218]	; 0xda
   1f6de:	cmp	r3, fp
   1f6e0:	bne.w	1f878 <btrfs_split_item@@Base+0x218>
   1f6e4:	mov	r3, r4
   1f6e6:	mov	r2, r8
   1f6e8:	mov	r1, r7
   1f6ea:	strd	r0, r0, [sp]
   1f6ee:	mov	r0, r6
   1f6f0:	bl	1e1f0 <btrfs_check_leaf@@Base+0x8e0>
   1f6f4:	ldr	r1, [pc, #404]	; (1f88c <btrfs_split_item@@Base+0x22c>)
   1f6f6:	movw	r2, #2390	; 0x956
   1f6fa:	add	r1, pc
   1f6fc:	addw	r1, r1, #407	; 0x197
   1f700:	str	r1, [sp, #16]
   1f702:	mov	r3, r0
   1f704:	ldr	r0, [pc, #392]	; (1f890 <btrfs_split_item@@Base+0x230>)
   1f706:	add	r0, pc
   1f708:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f70c:	mov	r0, r5
   1f70e:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1f712:	ldr	r1, [sp, #16]
   1f714:	movw	r2, #2392	; 0x958
   1f718:	cmp	r0, #24
   1f71a:	ldr	r0, [pc, #376]	; (1f894 <btrfs_split_item@@Base+0x234>)
   1f71c:	it	hi
   1f71e:	movhi	r3, #0
   1f720:	add	r0, pc
   1f722:	it	ls
   1f724:	movls	r3, #1
   1f726:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f72a:	ldr	r5, [r4, #0]
   1f72c:	ldr	r3, [r4, #32]
   1f72e:	mov.w	sl, #25
   1f732:	mul.w	r3, sl, r3
   1f736:	adds	r3, #101	; 0x65
   1f738:	str	r3, [sp, #20]
   1f73a:	ldr	r2, [sp, #20]
   1f73c:	add.w	r3, r5, #96	; 0x60
   1f740:	add	r3, r2
   1f742:	ldr.w	r6, [r3, #21]
   1f746:	ldr.w	r2, [r3, #17]
   1f74a:	mov	r0, r6
   1f74c:	str	r2, [sp, #16]
   1f74e:	blx	8e40 <malloc@plt+0x4>
   1f752:	ldr	r1, [pc, #324]	; (1f898 <btrfs_split_item@@Base+0x238>)
   1f754:	movw	r2, #2402	; 0x962
   1f758:	add	r1, pc
   1f75a:	addw	r1, r1, #407	; 0x197
   1f75e:	clz	r3, r0
   1f762:	mov	r9, r0
   1f764:	ldr	r0, [pc, #308]	; (1f89c <btrfs_split_item@@Base+0x23c>)
   1f766:	lsrs	r3, r3, #5
   1f768:	add	r0, pc
   1f76a:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f76e:	ldr	r2, [sp, #16]
   1f770:	mov	r1, r9
   1f772:	mov	r0, r5
   1f774:	adds	r2, #101	; 0x65
   1f776:	mov	r3, r6
   1f778:	bl	1bbba <read_extent_buffer@@Base>
   1f77c:	ldr	r1, [r4, #32]
   1f77e:	ldr	r5, [r4, #0]
   1f780:	add.w	fp, r1, #1
   1f784:	mla	r1, r1, sl, sl
   1f788:	ldr.w	r8, [r5, #192]	; 0xc0
   1f78c:	cmp	fp, r8
   1f78e:	add.w	r7, r1, #101	; 0x65
   1f792:	bcs.n	1f7a6 <btrfs_split_item@@Base+0x146>
   1f794:	sub.w	r3, r8, fp
   1f798:	adds	r1, #126	; 0x7e
   1f79a:	mov	r2, r7
   1f79c:	mov	r0, r5
   1f79e:	mul.w	r3, sl, r3
   1f7a2:	bl	1bc2c <memmove_extent_buffer@@Base>
   1f7a6:	ldr	r3, [sp, #12]
   1f7a8:	add	r1, sp, #48	; 0x30
   1f7aa:	mov	r0, r5
   1f7ac:	add.w	r8, r8, #1
   1f7b0:	ldr.w	r2, [r3, #9]
   1f7b4:	ldr.w	r3, [r3, #13]
   1f7b8:	str.w	r2, [sp, #57]	; 0x39
   1f7bc:	str.w	r3, [sp, #61]	; 0x3d
   1f7c0:	ldr	r3, [sp, #12]
   1f7c2:	ldrb	r3, [r3, #8]
   1f7c4:	strb.w	r3, [sp, #56]	; 0x38
   1f7c8:	ldr	r3, [sp, #12]
   1f7ca:	ldr	r2, [r3, #0]
   1f7cc:	ldr	r3, [r3, #4]
   1f7ce:	strd	r2, r3, [sp, #48]	; 0x30
   1f7d2:	mov	r2, fp
   1f7d4:	bl	1c1da <rb_free_nodes@@Base+0x3c>
   1f7d8:	add.w	r2, r5, #96	; 0x60
   1f7dc:	ldr	r3, [sp, #16]
   1f7de:	add	r7, r2
   1f7e0:	ldr	r1, [sp, #16]
   1f7e2:	mov	r0, r5
   1f7e4:	str.w	r3, [r7, #17]
   1f7e8:	ldr	r3, [sp, #112]	; 0x70
   1f7ea:	sub.w	sl, r6, r3
   1f7ee:	ldr	r3, [sp, #20]
   1f7f0:	add	r6, r1
   1f7f2:	ldr	r1, [sp, #112]	; 0x70
   1f7f4:	add	r3, r2
   1f7f6:	str.w	sl, [r7, #21]
   1f7fa:	subs	r6, r6, r1
   1f7fc:	str.w	r1, [r3, #21]
   1f800:	movs	r1, #25
   1f802:	str.w	r6, [r3, #17]
   1f806:	str.w	r8, [r5, #192]	; 0xc0
   1f80a:	ldr	r3, [r4, #32]
   1f80c:	mla	r3, r1, r3, r2
   1f810:	mov	r1, r9
   1f812:	ldr.w	r2, [r3, #118]	; 0x76
   1f816:	ldr	r3, [sp, #112]	; 0x70
   1f818:	adds	r2, #101	; 0x65
   1f81a:	bl	1bbd0 <write_extent_buffer@@Base>
   1f81e:	ldr.w	r2, [r7, #17]
   1f822:	ldr	r1, [sp, #112]	; 0x70
   1f824:	mov	r3, sl
   1f826:	adds	r2, #101	; 0x65
   1f828:	mov	r0, r5
   1f82a:	add	r1, r9
   1f82c:	bl	1bbd0 <write_extent_buffer@@Base>
   1f830:	mov	r0, r5
   1f832:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1f836:	mov	r0, r5
   1f838:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1f83c:	cmp	r0, #0
   1f83e:	bge.n	1f85c <btrfs_split_item@@Base+0x1fc>
   1f840:	mov	r0, r5
   1f842:	bl	298c0 <btrfs_print_leaf@@Base>
   1f846:	ldr	r1, [pc, #88]	; (1f8a0 <btrfs_split_item@@Base+0x240>)
   1f848:	ldr	r0, [pc, #88]	; (1f8a4 <btrfs_split_item@@Base+0x244>)
   1f84a:	movs	r3, #1
   1f84c:	add	r1, pc
   1f84e:	movw	r2, #2446	; 0x98e
   1f852:	addw	r1, r1, #407	; 0x197
   1f856:	add	r0, pc
   1f858:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1f85c:	mov	r0, r9
   1f85e:	blx	8b84 <free@plt+0x4>
   1f862:	movs	r0, #0
   1f864:	ldr	r2, [pc, #64]	; (1f8a8 <btrfs_split_item@@Base+0x248>)
   1f866:	ldr	r3, [pc, #32]	; (1f888 <btrfs_split_item@@Base+0x228>)
   1f868:	add	r2, pc
   1f86a:	ldr	r3, [r2, r3]
   1f86c:	ldr	r2, [r3, #0]
   1f86e:	ldr	r3, [sp, #68]	; 0x44
   1f870:	eors	r2, r3
   1f872:	beq.n	1f87e <btrfs_split_item@@Base+0x21e>
   1f874:	blx	8c90 <__stack_chk_fail@plt>
   1f878:	mvn.w	r0, #10
   1f87c:	b.n	1f864 <btrfs_split_item@@Base+0x204>
   1f87e:	add	sp, #76	; 0x4c
   1f880:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f884:			; <UNDEFINED> instruction: 0xb6a6
   1f886:	movs	r4, r0
   1f888:	lsls	r0, r1, #10
   1f88a:	movs	r0, r0
   1f88c:	cmp	r3, #18
   1f88e:	movs	r2, r0
   1f890:	lsls	r4, r7, #16
   1f892:	movs	r2, r0
   1f894:	cmp	r1, #141	; 0x8d
   1f896:	movs	r2, r0
   1f898:	cmp	r2, #180	; 0xb4
   1f89a:	movs	r2, r0
   1f89c:	cmp	r1, #125	; 0x7d
   1f89e:	movs	r2, r0
   1f8a0:	cmp	r1, #192	; 0xc0
   1f8a2:	movs	r2, r0
   1f8a4:	subs	r1, #92	; 0x5c
   1f8a6:	movs	r2, r0
   1f8a8:	push	{r4, r5, r7}
   1f8aa:	movs	r4, r0

0001f8ac <btrfs_insert_empty_items@@Base>:
   1f8ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8b0:	sub	sp, #60	; 0x3c
   1f8b2:	mov	fp, r3
   1f8b4:	mov.w	r8, #0
   1f8b8:	ldr	r3, [sp, #96]	; 0x60
   1f8ba:	strd	r1, r2, [sp, #16]
   1f8be:	ldr	r2, [pc, #616]	; (1fb28 <btrfs_insert_empty_items@@Base+0x27c>)
   1f8c0:	str	r3, [sp, #24]
   1f8c2:	ldr	r3, [pc, #616]	; (1fb2c <btrfs_insert_empty_items@@Base+0x280>)
   1f8c4:	add	r2, pc
   1f8c6:	add	r3, pc
   1f8c8:	str	r3, [sp, #28]
   1f8ca:	ldr	r3, [pc, #612]	; (1fb30 <btrfs_insert_empty_items@@Base+0x284>)
   1f8cc:	ldr	r3, [r2, r3]
   1f8ce:	ldr	r3, [r3, #0]
   1f8d0:	str	r3, [sp, #52]	; 0x34
   1f8d2:	mov.w	r3, #0
   1f8d6:	mov	r3, r8
   1f8d8:	ldr	r2, [sp, #100]	; 0x64
   1f8da:	cmp	r3, r2
   1f8dc:	blt.n	1f8fa <btrfs_insert_empty_items@@Base+0x4e>
   1f8de:	ldr	r3, [sp, #16]
   1f8e0:	ldr	r3, [r3, #0]
   1f8e2:	cbnz	r3, 1f906 <btrfs_insert_empty_items@@Base+0x5a>
   1f8e4:	ldr	r1, [pc, #588]	; (1fb34 <btrfs_insert_empty_items@@Base+0x288>)
   1f8e6:	movs	r3, #1
   1f8e8:	ldr	r0, [pc, #588]	; (1fb38 <btrfs_insert_empty_items@@Base+0x28c>)
   1f8ea:	movw	r2, #2636	; 0xa4c
   1f8ee:	add	r1, pc
   1f8f0:	add.w	r1, r1, #424	; 0x1a8
   1f8f4:	add	r0, pc
   1f8f6:	bl	1c27a <rb_free_nodes@@Base+0xdc>
   1f8fa:	ldr	r2, [sp, #24]
   1f8fc:	ldr.w	r2, [r2, r3, lsl #2]
   1f900:	adds	r3, #1
   1f902:	add	r8, r2
   1f904:	b.n	1f8d8 <btrfs_insert_empty_items@@Base+0x2c>
   1f906:	ldr	r3, [sp, #100]	; 0x64
   1f908:	movs	r2, #25
   1f90a:	ldr	r1, [sp, #16]
   1f90c:	mov.w	r9, #1
   1f910:	mla	r5, r2, r3, r8
   1f914:	ldr	r3, [sp, #20]
   1f916:	mov	r2, fp
   1f918:	strd	r5, r9, [sp]
   1f91c:	bl	1eadc <btrfs_search_slot@@Base>
   1f920:	cmp	r0, #0
   1f922:	beq.w	1fb06 <btrfs_insert_empty_items@@Base+0x25a>
   1f926:	blt.w	1fb0a <btrfs_insert_empty_items@@Base+0x25e>
   1f92a:	ldr	r3, [sp, #20]
   1f92c:	ldr	r4, [r3, #0]
   1f92e:	ldr.w	r3, [r4, #192]	; 0xc0
   1f932:	mov	r1, r4
   1f934:	str	r3, [sp, #12]
   1f936:	ldr	r3, [sp, #16]
   1f938:	ldr.w	r0, [r3, #464]	; 0x1d0
   1f93c:	add.w	r0, r0, #384	; 0x180
   1f940:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1f944:	mov	r6, r0
   1f946:	mov	r0, r4
   1f948:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1f94c:	cmp	r0, r5
   1f94e:	bcs.n	1f988 <btrfs_insert_empty_items@@Base+0xdc>
   1f950:	mov	r0, r4
   1f952:	bl	298c0 <btrfs_print_leaf@@Base>
   1f956:	ldr	r2, [sp, #28]
   1f958:	ldr	r3, [pc, #480]	; (1fb3c <btrfs_insert_empty_items@@Base+0x290>)
   1f95a:	mov	r0, r4
   1f95c:	ldr	r3, [r2, r3]
   1f95e:	ldr	r6, [r3, #0]
   1f960:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1f964:	ldr	r2, [pc, #472]	; (1fb40 <btrfs_insert_empty_items@@Base+0x294>)
   1f966:	mov	r3, r5
   1f968:	mov	r1, r9
   1f96a:	add	r2, pc
   1f96c:	str	r0, [sp, #0]
   1f96e:	mov	r0, r6
   1f970:	blx	9040 <__fprintf_chk@plt+0x4>
   1f974:	ldr	r1, [pc, #460]	; (1fb44 <btrfs_insert_empty_items@@Base+0x298>)
   1f976:	ldr	r0, [pc, #464]	; (1fb48 <btrfs_insert_empty_items@@Base+0x29c>)
   1f978:	mov	r3, r9
   1f97a:	add	r1, pc
   1f97c:	movw	r2, #2655	; 0xa5f
   1f980:	add.w	r1, r1, #424	; 0x1a8
   1f984:	add	r0, pc
   1f986:	b.n	1f8f6 <btrfs_insert_empty_items@@Base+0x4a>
   1f988:	ldr	r3, [sp, #20]
   1f98a:	movw	r2, #2659	; 0xa63
   1f98e:	ldr.w	sl, [pc, #444]	; 1fb4c <btrfs_insert_empty_items@@Base+0x2a0>
   1f992:	ldr	r0, [pc, #444]	; (1fb50 <btrfs_insert_empty_items@@Base+0x2a4>)
   1f994:	ldr	r5, [r3, #32]
   1f996:	add	sl, pc
   1f998:	add.w	sl, sl, #424	; 0x1a8
   1f99c:	add	r0, pc
   1f99e:	lsrs	r3, r5, #31
   1f9a0:	mov	r1, sl
   1f9a2:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1f9a6:	ldr	r3, [sp, #12]
   1f9a8:	cmp	r5, r3
   1f9aa:	bcs.n	1f9f2 <btrfs_insert_empty_items@@Base+0x146>
   1f9ac:	mov	r1, r5
   1f9ae:	mov	r0, r4
   1f9b0:	bl	1c1bc <rb_free_nodes@@Base+0x1e>
   1f9b4:	cmp	r6, r0
   1f9b6:	mov	r7, r0
   1f9b8:	bhi.n	1fa72 <btrfs_insert_empty_items@@Base+0x1c6>
   1f9ba:	add.w	ip, r4, #197	; 0xc5
   1f9be:	mov	r2, r5
   1f9c0:	movs	r3, #25
   1f9c2:	ldr	r1, [sp, #12]
   1f9c4:	cmp	r2, r1
   1f9c6:	bne.n	1fa9e <btrfs_insert_empty_items@@Base+0x1f2>
   1f9c8:	subs	r0, r1, r5
   1f9ca:	ldr	r1, [sp, #100]	; 0x64
   1f9cc:	mul.w	r2, r3, r5
   1f9d0:	add	r1, r5
   1f9d2:	muls	r1, r3
   1f9d4:	adds	r2, #101	; 0x65
   1f9d6:	muls	r3, r0
   1f9d8:	mov	r0, r4
   1f9da:	adds	r1, #101	; 0x65
   1f9dc:	bl	1bc2c <memmove_extent_buffer@@Base>
   1f9e0:	add.w	r2, r6, #101	; 0x65
   1f9e4:	subs	r3, r7, r6
   1f9e6:	sub.w	r1, r2, r8
   1f9ea:	mov	r0, r4
   1f9ec:	mov	r6, r7
   1f9ee:	bl	1bc2c <memmove_extent_buffer@@Base>
   1f9f2:	mov.w	r9, #25
   1f9f6:	add	r1, sp, #32
   1f9f8:	mla	r9, r9, r5, r4
   1f9fc:	mov	r7, fp
   1f9fe:	mov.w	r8, #0
   1fa02:	ldr	r3, [sp, #100]	; 0x64
   1fa04:	add.w	sl, r9, #25
   1fa08:	cmp	r8, r3
   1fa0a:	blt.n	1fab2 <btrfs_insert_empty_items@@Base+0x206>
   1fa0c:	ldr	r3, [sp, #12]
   1fa0e:	mov	r0, r4
   1fa10:	ldr	r2, [sp, #100]	; 0x64
   1fa12:	add	r3, r2
   1fa14:	str.w	r3, [r4, #192]	; 0xc0
   1fa18:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1fa1c:	cbnz	r5, 1fa4e <btrfs_insert_empty_items@@Base+0x1a2>
   1fa1e:	ldr.w	r3, [fp, #13]
   1fa22:	ldr.w	r2, [fp, #9]
   1fa26:	ldrd	r0, r1, [sp, #16]
   1fa2a:	str.w	r3, [sp, #45]	; 0x2d
   1fa2e:	ldrb.w	r3, [fp, #8]
   1fa32:	str.w	r2, [sp, #41]	; 0x29
   1fa36:	ldr.w	r2, [fp]
   1fa3a:	strb.w	r3, [sp, #40]	; 0x28
   1fa3e:	ldr.w	r3, [fp, #4]
   1fa42:	strd	r2, r3, [sp, #32]
   1fa46:	add	r2, sp, #32
   1fa48:	movs	r3, #1
   1fa4a:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1fa4e:	mov	r0, r4
   1fa50:	bl	1d888 <btrfs_leaf_free_space@@Base>
   1fa54:	cmp	r0, #0
   1fa56:	bge.n	1fb1e <btrfs_insert_empty_items@@Base+0x272>
   1fa58:	mov	r0, r4
   1fa5a:	bl	298c0 <btrfs_print_leaf@@Base>
   1fa5e:	ldr	r1, [pc, #244]	; (1fb54 <btrfs_insert_empty_items@@Base+0x2a8>)
   1fa60:	ldr	r0, [pc, #244]	; (1fb58 <btrfs_insert_empty_items@@Base+0x2ac>)
   1fa62:	movs	r3, #1
   1fa64:	add	r1, pc
   1fa66:	movw	r2, #2714	; 0xa9a
   1fa6a:	add.w	r1, r1, #424	; 0x1a8
   1fa6e:	add	r0, pc
   1fa70:	b.n	1f8f6 <btrfs_insert_empty_items@@Base+0x4a>
   1fa72:	mov	r0, r4
   1fa74:	bl	298c0 <btrfs_print_leaf@@Base>
   1fa78:	ldr	r2, [sp, #28]
   1fa7a:	ldr	r3, [pc, #192]	; (1fb3c <btrfs_insert_empty_items@@Base+0x290>)
   1fa7c:	mov	r1, r9
   1fa7e:	ldr	r0, [r2, r3]
   1fa80:	mov	r3, r5
   1fa82:	ldr	r2, [pc, #216]	; (1fb5c <btrfs_insert_empty_items@@Base+0x2b0>)
   1fa84:	strd	r7, r6, [sp]
   1fa88:	add	r2, pc
   1fa8a:	ldr	r0, [r0, #0]
   1fa8c:	blx	9040 <__fprintf_chk@plt+0x4>
   1fa90:	ldr	r0, [pc, #204]	; (1fb60 <btrfs_insert_empty_items@@Base+0x2b4>)
   1fa92:	mov	r3, r9
   1fa94:	movw	r2, #2668	; 0xa6c
   1fa98:	add	r0, pc
   1fa9a:	mov	r1, sl
   1fa9c:	b.n	1f8f6 <btrfs_insert_empty_items@@Base+0x4a>
   1fa9e:	mla	r0, r3, r2, ip
   1faa2:	adds	r2, #1
   1faa4:	ldr.w	r1, [r0, #17]
   1faa8:	sub.w	r1, r1, r8
   1faac:	str.w	r1, [r0, #17]
   1fab0:	b.n	1f9c2 <btrfs_insert_empty_items@@Base+0x116>
   1fab2:	ldr.w	r3, [r7, #13]
   1fab6:	mov	r0, r4
   1fab8:	ldr.w	r2, [r7, #9]
   1fabc:	adds	r7, #17
   1fabe:	str	r1, [sp, #28]
   1fac0:	str.w	r3, [sp, #45]	; 0x2d
   1fac4:	ldrb.w	r3, [r7, #-9]
   1fac8:	str.w	r2, [sp, #41]	; 0x29
   1facc:	ldr.w	r2, [r7, #-17]
   1fad0:	strb.w	r3, [sp, #40]	; 0x28
   1fad4:	ldr.w	r3, [r7, #-13]
   1fad8:	strd	r2, r3, [sp, #32]
   1fadc:	add.w	r2, r5, r8
   1fae0:	bl	1c1da <rb_free_nodes@@Base+0x3c>
   1fae4:	ldr	r3, [sp, #24]
   1fae6:	ldr	r1, [sp, #28]
   1fae8:	ldr.w	r3, [r3, r8, lsl #2]
   1faec:	subs	r3, r6, r3
   1faee:	str.w	r3, [r9, #214]	; 0xd6
   1faf2:	ldr	r3, [sp, #24]
   1faf4:	ldr.w	r3, [r3, r8, lsl #2]
   1faf8:	add.w	r8, r8, #1
   1fafc:	subs	r6, r6, r3
   1fafe:	str.w	r3, [r9, #218]	; 0xda
   1fb02:	mov	r9, sl
   1fb04:	b.n	1fa02 <btrfs_insert_empty_items@@Base+0x156>
   1fb06:	mvn.w	r0, #16
   1fb0a:	ldr	r2, [pc, #88]	; (1fb64 <btrfs_insert_empty_items@@Base+0x2b8>)
   1fb0c:	ldr	r3, [pc, #32]	; (1fb30 <btrfs_insert_empty_items@@Base+0x284>)
   1fb0e:	add	r2, pc
   1fb10:	ldr	r3, [r2, r3]
   1fb12:	ldr	r2, [r3, #0]
   1fb14:	ldr	r3, [sp, #52]	; 0x34
   1fb16:	eors	r2, r3
   1fb18:	beq.n	1fb22 <btrfs_insert_empty_items@@Base+0x276>
   1fb1a:	blx	8c90 <__stack_chk_fail@plt>
   1fb1e:	movs	r0, #0
   1fb20:	b.n	1fb0a <btrfs_insert_empty_items@@Base+0x25e>
   1fb22:	add	sp, #60	; 0x3c
   1fb24:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb28:	push	{r2, r4, r6}
   1fb2a:	movs	r4, r0
   1fb2c:	push	{r1, r4, r6}
   1fb2e:	movs	r4, r0
   1fb30:	lsls	r0, r1, #10
   1fb32:	movs	r0, r0
   1fb34:	cmp	r1, #30
   1fb36:	movs	r2, r0
   1fb38:	subs	r0, #190	; 0xbe
   1fb3a:	movs	r2, r0
   1fb3c:	lsls	r4, r3, #10
   1fb3e:	movs	r0, r0
   1fb40:	movs	r7, #128	; 0x80
   1fb42:	movs	r2, r0
   1fb44:	cmp	r0, #146	; 0x92
   1fb46:	movs	r2, r0
   1fb48:	subs	r0, #46	; 0x2e
   1fb4a:	movs	r2, r0
   1fb4c:	cmp	r0, #118	; 0x76
   1fb4e:	movs	r2, r0
   1fb50:	movs	r5, #196	; 0xc4
   1fb52:	movs	r2, r0
   1fb54:	movs	r7, #168	; 0xa8
   1fb56:	movs	r2, r0
   1fb58:	adds	r7, #68	; 0x44
   1fb5a:	movs	r2, r0
   1fb5c:	movs	r6, #136	; 0x88
   1fb5e:	movs	r2, r0
   1fb60:	adds	r7, #26
   1fb62:	movs	r2, r0
   1fb64:	sxth	r2, r1
   1fb66:	movs	r4, r0

0001fb68 <btrfs_insert_item@@Base>:
   1fb68:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1fb6c:	mov	r8, r2
   1fb6e:	ldr	r2, [pc, #132]	; (1fbf4 <btrfs_insert_item@@Base+0x8c>)
   1fb70:	mov	r6, r3
   1fb72:	ldr	r3, [pc, #132]	; (1fbf8 <btrfs_insert_item@@Base+0x90>)
   1fb74:	sub	sp, #24
   1fb76:	add	r2, pc
   1fb78:	mov	r5, r0
   1fb7a:	str	r1, [sp, #12]
   1fb7c:	ldr	r3, [r2, r3]
   1fb7e:	ldr	r7, [sp, #48]	; 0x30
   1fb80:	ldr	r3, [r3, #0]
   1fb82:	str	r3, [sp, #20]
   1fb84:	mov.w	r3, #0
   1fb88:	bl	1c6f0 <btrfs_alloc_path@@Base>
   1fb8c:	mov	r4, r0
   1fb8e:	cbz	r0, 1fbe4 <btrfs_insert_item@@Base+0x7c>
   1fb90:	movs	r3, #1
   1fb92:	mov	r2, r0
   1fb94:	str	r3, [sp, #4]
   1fb96:	mov	r0, r5
   1fb98:	add	r3, sp, #16
   1fb9a:	ldr	r1, [sp, #12]
   1fb9c:	str	r3, [sp, #0]
   1fb9e:	mov	r3, r8
   1fba0:	str	r7, [sp, #16]
   1fba2:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   1fba6:	mov	r5, r0
   1fba8:	cbnz	r0, 1fbca <btrfs_insert_item@@Base+0x62>
   1fbaa:	ldr	r0, [r4, #0]
   1fbac:	movs	r2, #25
   1fbae:	ldr	r3, [r4, #32]
   1fbb0:	mov	r1, r6
   1fbb2:	str	r0, [sp, #12]
   1fbb4:	mla	r3, r2, r3, r0
   1fbb8:	ldr.w	r2, [r3, #214]	; 0xd6
   1fbbc:	mov	r3, r7
   1fbbe:	adds	r2, #101	; 0x65
   1fbc0:	bl	1bbd0 <write_extent_buffer@@Base>
   1fbc4:	ldr	r0, [sp, #12]
   1fbc6:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1fbca:	mov	r0, r4
   1fbcc:	bl	1c71e <btrfs_free_path@@Base>
   1fbd0:	ldr	r2, [pc, #40]	; (1fbfc <btrfs_insert_item@@Base+0x94>)
   1fbd2:	ldr	r3, [pc, #36]	; (1fbf8 <btrfs_insert_item@@Base+0x90>)
   1fbd4:	add	r2, pc
   1fbd6:	ldr	r3, [r2, r3]
   1fbd8:	ldr	r2, [r3, #0]
   1fbda:	ldr	r3, [sp, #20]
   1fbdc:	eors	r2, r3
   1fbde:	beq.n	1fbea <btrfs_insert_item@@Base+0x82>
   1fbe0:	blx	8c90 <__stack_chk_fail@plt>
   1fbe4:	mvn.w	r5, #11
   1fbe8:	b.n	1fbd0 <btrfs_insert_item@@Base+0x68>
   1fbea:	mov	r0, r5
   1fbec:	add	sp, #24
   1fbee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1fbf2:	nop
   1fbf4:	cbz	r2, 1fc20 <btrfs_insert_item@@Base+0xb8>
   1fbf6:	movs	r4, r0
   1fbf8:	lsls	r0, r1, #10
   1fbfa:	movs	r0, r0
   1fbfc:	cbz	r4, 1fc10 <btrfs_insert_item@@Base+0xa8>
   1fbfe:	movs	r4, r0
   1fc00:	push	{r4, r5, r6, r7, lr}
   1fc02:	mov	r6, r0
   1fc04:	mov	r7, r2
   1fc06:	ldr.w	r0, [r3, #176]	; 0xb0
   1fc0a:	mov	r4, r1
   1fc0c:	mov	r5, r3
   1fc0e:	ldr.w	r1, [r3, #180]	; 0xb4
   1fc12:	sub	sp, #44	; 0x2c
   1fc14:	ldrd	r2, r3, [r6, #8]
   1fc18:	cmp	r3, r1
   1fc1a:	ldr	r1, [pc, #116]	; (1fc90 <btrfs_insert_item@@Base+0x128>)
   1fc1c:	it	eq
   1fc1e:	cmpeq	r2, r0
   1fc20:	ldr	r0, [pc, #112]	; (1fc94 <btrfs_insert_item@@Base+0x12c>)
   1fc22:	add	r1, pc
   1fc24:	movw	r2, #2805	; 0xaf5
   1fc28:	ite	ne
   1fc2a:	movne	r3, #1
   1fc2c:	moveq	r3, #0
   1fc2e:	addw	r1, r1, #449	; 0x1c1
   1fc32:	add	r0, pc
   1fc34:	bl	1c2fc <rb_free_nodes@@Base+0x15e>
   1fc38:	ldr	r3, [r7, #36]	; 0x24
   1fc3a:	movs	r2, #1
   1fc3c:	mov	r1, r7
   1fc3e:	mov	r0, r4
   1fc40:	bl	1ea0c <btrfs_del_ptr@@Base>
   1fc44:	cbnz	r0, 1fc8c <btrfs_insert_item@@Base+0x124>
   1fc46:	ldr	r1, [r5, #76]	; 0x4c
   1fc48:	ldr.w	r2, [r4, #200]	; 0xc8
   1fc4c:	ldr.w	r3, [r4, #204]	; 0xcc
   1fc50:	subs	r2, r2, r1
   1fc52:	ldr.w	r7, [r4, #447]	; 0x1bf
   1fc56:	str.w	r2, [r4, #200]	; 0xc8
   1fc5a:	sbc.w	r3, r3, #0
   1fc5e:	movs	r2, #0
   1fc60:	str.w	r3, [r4, #204]	; 0xcc
   1fc64:	ldr.w	r1, [r4, #451]	; 0x1c3
   1fc68:	movs	r3, #0
   1fc6a:	strd	r2, r3, [sp, #32]
   1fc6e:	strd	r2, r3, [sp, #24]
   1fc72:	strd	r2, r3, [sp, #8]
   1fc76:	ldr	r3, [r5, #76]	; 0x4c
   1fc78:	strd	r7, r1, [sp, #16]
   1fc7c:	mov	r1, r4
   1fc7e:	strd	r3, r0, [sp]
   1fc82:	mov	r0, r6
   1fc84:	ldrd	r2, r3, [r5, #40]	; 0x28
   1fc88:	bl	254ec <btrfs_free_extent@@Base>
   1fc8c:	add	sp, #44	; 0x2c
   1fc8e:	pop	{r4, r5, r6, r7, pc}
   1fc90:	movs	r5, #234	; 0xea
   1fc92:	movs	r2, r0
   1fc94:	movs	r4, #255	; 0xff
   1fc96:	movs	r2, r0

0001fc98 <btrfs_del_items@@Base>:
   1fc98:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc9c:	mov	r6, r2
   1fc9e:	ldr	r2, [pc, #468]	; (1fe74 <btrfs_del_items@@Base+0x1dc>)
   1fca0:	mov	r8, r3
   1fca2:	ldr	r3, [pc, #468]	; (1fe78 <btrfs_del_items@@Base+0x1e0>)
   1fca4:	sub	sp, #52	; 0x34
   1fca6:	add	r2, pc
   1fca8:	ldr	r5, [r6, #0]
   1fcaa:	mov	sl, r0
   1fcac:	mov	r7, r1
   1fcae:	ldr	r3, [r2, r3]
   1fcb0:	ldr	r3, [r3, #0]
   1fcb2:	str	r3, [sp, #44]	; 0x2c
   1fcb4:	mov.w	r3, #0
   1fcb8:	ldr	r3, [sp, #88]	; 0x58
   1fcba:	add.w	r9, r8, r3
   1fcbe:	add.w	r3, r5, #96	; 0x60
   1fcc2:	str	r3, [sp, #20]
   1fcc4:	movs	r3, #25
   1fcc6:	mul.w	r3, r3, r8
   1fcca:	adds	r2, r5, r3
   1fccc:	str	r3, [sp, #12]
   1fcce:	movs	r3, #0
   1fcd0:	mov	fp, r3
   1fcd2:	ldr	r0, [sp, #88]	; 0x58
   1fcd4:	add.w	r1, r2, #25
   1fcd8:	cmp	r3, r0
   1fcda:	blt.n	1fd54 <btrfs_del_items@@Base+0xbc>
   1fcdc:	ldr.w	r4, [r5, #192]	; 0xc0
   1fce0:	str.w	r9, [sp, #16]
   1fce4:	cmp	r9, r4
   1fce6:	beq.n	1fd3c <btrfs_del_items@@Base+0xa4>
   1fce8:	ldr.w	r0, [r7, #464]	; 0x1d0
   1fcec:	mov	r1, r5
   1fcee:	add.w	r0, r0, #384	; 0x180
   1fcf2:	bl	1c260 <rb_free_nodes@@Base+0xc2>
   1fcf6:	ldr	r3, [sp, #20]
   1fcf8:	add.w	r1, r9, #4294967295	; 0xffffffff
   1fcfc:	mov.w	ip, #25
   1fd00:	mla	r1, ip, r1, r3
   1fd04:	ldr.w	r3, [r1, #118]	; 0x76
   1fd08:	add.w	r2, r0, #101	; 0x65
   1fd0c:	subs	r3, r3, r0
   1fd0e:	add.w	r1, r2, fp
   1fd12:	mov	r0, r5
   1fd14:	bl	1bc2c <memmove_extent_buffer@@Base>
   1fd18:	add.w	r0, r5, #197	; 0xc5
   1fd1c:	movs	r3, #25
   1fd1e:	cmp	r4, r9
   1fd20:	bhi.n	1fd60 <btrfs_del_items@@Base+0xc8>
   1fd22:	ldr	r2, [sp, #88]	; 0x58
   1fd24:	mov	r0, r5
   1fd26:	add.w	r1, r2, r8
   1fd2a:	ldr	r2, [sp, #16]
   1fd2c:	subs	r1, r4, r1
   1fd2e:	muls	r2, r3
   1fd30:	muls	r3, r1
   1fd32:	ldr	r1, [sp, #12]
   1fd34:	adds	r2, #101	; 0x65
   1fd36:	adds	r1, #101	; 0x65
   1fd38:	bl	1bc2c <memmove_extent_buffer@@Base>
   1fd3c:	ldr	r3, [sp, #88]	; 0x58
   1fd3e:	subs	r2, r4, r3
   1fd40:	str.w	r2, [r5, #192]	; 0xc0
   1fd44:	cbnz	r2, 1fd9c <btrfs_del_items@@Base+0x104>
   1fd46:	ldr	r3, [r7, #0]
   1fd48:	cmp	r3, r5
   1fd4a:	bne.n	1fd74 <btrfs_del_items@@Base+0xdc>
   1fd4c:	strb.w	r2, [r5, #196]	; 0xc4
   1fd50:	movs	r4, #0
   1fd52:	b.n	1fd88 <btrfs_del_items@@Base+0xf0>
   1fd54:	ldr.w	r2, [r2, #218]	; 0xda
   1fd58:	adds	r3, #1
   1fd5a:	add	fp, r2
   1fd5c:	mov	r2, r1
   1fd5e:	b.n	1fcd2 <btrfs_del_items@@Base+0x3a>
   1fd60:	mla	r1, r3, r9, r0
   1fd64:	add.w	r9, r9, #1
   1fd68:	ldr.w	r2, [r1, #17]
   1fd6c:	add	r2, fp
   1fd6e:	str.w	r2, [r1, #17]
   1fd72:	b.n	1fd1e <btrfs_del_items@@Base+0x86>
   1fd74:	mov	r0, r5
   1fd76:	bl	21dac <clean_tree_block@@Base>
   1fd7a:	mov	r3, r5
   1fd7c:	mov	r2, r6
   1fd7e:	mov	r1, r7
   1fd80:	mov	r0, sl
   1fd82:	bl	1fc00 <btrfs_insert_item@@Base+0x98>
   1fd86:	mov	r4, r0
   1fd88:	ldr	r2, [pc, #240]	; (1fe7c <btrfs_del_items@@Base+0x1e4>)
   1fd8a:	ldr	r3, [pc, #236]	; (1fe78 <btrfs_del_items@@Base+0x1e0>)
   1fd8c:	add	r2, pc
   1fd8e:	ldr	r3, [r2, r3]
   1fd90:	ldr	r2, [r3, #0]
   1fd92:	ldr	r3, [sp, #44]	; 0x2c
   1fd94:	eors	r2, r3
   1fd96:	beq.n	1fe6c <btrfs_del_items@@Base+0x1d4>
   1fd98:	blx	8c90 <__stack_chk_fail@plt>
   1fd9c:	movs	r1, #0
   1fd9e:	mov	r0, r5
   1fda0:	bl	1c600 <rb_free_nodes@@Base+0x462>
   1fda4:	mov	r9, r0
   1fda6:	cmp.w	r8, #0
   1fdaa:	bne.n	1fdc4 <btrfs_del_items@@Base+0x12c>
   1fdac:	add	r4, sp, #24
   1fdae:	mov	r2, r8
   1fdb0:	mov	r0, r5
   1fdb2:	mov	r1, r4
   1fdb4:	bl	1c1e6 <rb_free_nodes@@Base+0x48>
   1fdb8:	movs	r3, #1
   1fdba:	mov	r2, r4
   1fdbc:	mov	r1, r6
   1fdbe:	mov	r0, r7
   1fdc0:	bl	1d700 <btrfs_fixup_low_keys@@Base>
   1fdc4:	ldr.w	r3, [r7, #464]	; 0x1d0
   1fdc8:	ldr.w	r3, [r3, #384]	; 0x180
   1fdcc:	subs	r3, #101	; 0x65
   1fdce:	cmp.w	r9, r3, lsr #2
   1fdd2:	bcs.n	1fe64 <btrfs_del_items@@Base+0x1cc>
   1fdd4:	ldr	r3, [r5, #80]	; 0x50
   1fdd6:	mov	r2, r6
   1fdd8:	ldr.w	r8, [r6, #36]	; 0x24
   1fddc:	mov	r1, r7
   1fdde:	adds	r3, #1
   1fde0:	mov	r0, sl
   1fde2:	str	r3, [r5, #80]	; 0x50
   1fde4:	movs	r3, #1
   1fde6:	str	r3, [sp, #0]
   1fde8:	bl	1dec0 <btrfs_check_leaf@@Base+0x5b0>
   1fdec:	subs	r4, r0, #0
   1fdee:	bge.n	1fe5a <btrfs_del_items@@Base+0x1c2>
   1fdf0:	cmn.w	r4, #28
   1fdf4:	it	eq
   1fdf6:	moveq	r4, #0
   1fdf8:	ldr	r3, [r6, #0]
   1fdfa:	cmp	r3, r5
   1fdfc:	bne.n	1fe1e <btrfs_del_items@@Base+0x186>
   1fdfe:	ldr.w	r3, [r5, #192]	; 0xc0
   1fe02:	cbz	r3, 1fe1e <btrfs_del_items@@Base+0x186>
   1fe04:	movs	r3, #1
   1fe06:	mov	r2, r6
   1fe08:	mov	r1, r7
   1fe0a:	mov	r0, sl
   1fe0c:	str	r3, [sp, #0]
   1fe0e:	bl	1dc48 <btrfs_check_leaf@@Base+0x338>
   1fe12:	cmp	r0, #0
   1fe14:	bge.n	1fe1e <btrfs_del_items@@Base+0x186>
   1fe16:	cmn.w	r0, #28
   1fe1a:	it	ne
   1fe1c:	movne	r4, r0
   1fe1e:	ldr.w	r3, [r5, #192]	; 0xc0
   1fe22:	mov	r0, r5
   1fe24:	cbnz	r3, 1fe5e <btrfs_del_items@@Base+0x1c6>
   1fe26:	bl	21dac <clean_tree_block@@Base>
   1fe2a:	mov	r3, r5
   1fe2c:	mov	r2, r6
   1fe2e:	mov	r1, r7
   1fe30:	mov	r0, sl
   1fe32:	str.w	r8, [r6, #36]	; 0x24
   1fe36:	bl	1fc00 <btrfs_insert_item@@Base+0x98>
   1fe3a:	ldr	r1, [pc, #68]	; (1fe80 <btrfs_del_items@@Base+0x1e8>)
   1fe3c:	movw	r2, #2909	; 0xb5d
   1fe40:	add	r1, pc
   1fe42:	add.w	r1, r1, #464	; 0x1d0
   1fe46:	mov	r4, r0
   1fe48:	mov	r3, r0
   1fe4a:	ldr	r0, [pc, #56]	; (1fe84 <btrfs_del_items@@Base+0x1ec>)
   1fe4c:	add	r0, pc
   1fe4e:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1fe52:	mov	r0, r5
   1fe54:	bl	1b4c0 <free_extent_buffer@@Base>
   1fe58:	b.n	1fd88 <btrfs_del_items@@Base+0xf0>
   1fe5a:	movs	r4, #0
   1fe5c:	b.n	1fdf8 <btrfs_del_items@@Base+0x160>
   1fe5e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1fe62:	b.n	1fe52 <btrfs_del_items@@Base+0x1ba>
   1fe64:	mov	r0, r5
   1fe66:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   1fe6a:	b.n	1fd50 <btrfs_del_items@@Base+0xb8>
   1fe6c:	mov	r0, r4
   1fe6e:	add	sp, #52	; 0x34
   1fe70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe74:	add	sp, #456	; 0x1c8
   1fe76:	movs	r4, r0
   1fe78:	lsls	r0, r1, #10
   1fe7a:	movs	r0, r0
   1fe7c:	add	r7, sp, #560	; 0x230
   1fe7e:	movs	r4, r0
   1fe80:	movs	r3, #204	; 0xcc
   1fe82:	movs	r2, r0
   1fe84:	ldc2l	0, cr0, [r6], #4

0001fe88 <btrfs_prev_leaf@@Base>:
   1fe88:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1fe8c:	adds	r3, r1, #4
   1fe8e:	mov	r5, r1
   1fe90:	movs	r6, #1
   1fe92:	mov	r9, r3
   1fe94:	ldr.w	r1, [r3], #4
   1fe98:	cbz	r1, 1fea4 <btrfs_prev_leaf@@Base+0x1c>
   1fe9a:	ldr	r7, [r3, #28]
   1fe9c:	cbnz	r7, 1fea8 <btrfs_prev_leaf@@Base+0x20>
   1fe9e:	adds	r6, #1
   1fea0:	cmp	r6, #8
   1fea2:	bne.n	1fe94 <btrfs_prev_leaf@@Base+0xc>
   1fea4:	movs	r0, #1
   1fea6:	b.n	1fec8 <btrfs_prev_leaf@@Base+0x40>
   1fea8:	ldr.w	r8, [r0, #464]	; 0x1d0
   1feac:	subs	r7, #1
   1feae:	mov	r2, r7
   1feb0:	mov	r0, r8
   1feb2:	bl	1d4ae <read_node_slot@@Base>
   1feb6:	mov	r4, r0
   1feb8:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1febc:	cbnz	r0, 1fecc <btrfs_prev_leaf@@Base+0x44>
   1febe:	cmn.w	r4, #4096	; 0x1000
   1fec2:	bhi.n	1ff08 <btrfs_prev_leaf@@Base+0x80>
   1fec4:	mvn.w	r0, #4
   1fec8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1fecc:	add.w	r3, r6, #8
   1fed0:	str.w	r7, [r5, r3, lsl #2]
   1fed4:	add.w	r5, r5, r6, lsl #2
   1fed8:	ldr.w	r0, [r5, #-4]
   1fedc:	bl	1b4c0 <free_extent_buffer@@Base>
   1fee0:	ldr.w	r2, [r4, #192]	; 0xc0
   1fee4:	cbz	r2, 1fee8 <btrfs_prev_leaf@@Base+0x60>
   1fee6:	subs	r2, #1
   1fee8:	cmp	r5, r9
   1feea:	str.w	r4, [r5, #-4]
   1feee:	str	r2, [r5, #28]
   1fef0:	beq.n	1ff0c <btrfs_prev_leaf@@Base+0x84>
   1fef2:	mov	r1, r4
   1fef4:	mov	r0, r8
   1fef6:	bl	1d4ae <read_node_slot@@Base>
   1fefa:	subs	r5, #4
   1fefc:	mov	r4, r0
   1fefe:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1ff02:	cmp	r0, #0
   1ff04:	bne.n	1fed8 <btrfs_prev_leaf@@Base+0x50>
   1ff06:	b.n	1febe <btrfs_prev_leaf@@Base+0x36>
   1ff08:	mov	r0, r4
   1ff0a:	b.n	1fec8 <btrfs_prev_leaf@@Base+0x40>
   1ff0c:	movs	r0, #0
   1ff0e:	b.n	1fec8 <btrfs_prev_leaf@@Base+0x40>

0001ff10 <btrfs_next_sibling_tree_block@@Base>:
   1ff10:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff14:	mov	r5, r1
   1ff16:	ldrb.w	r3, [r1, #65]	; 0x41
   1ff1a:	mov	r7, r0
   1ff1c:	ldr	r1, [pc, #232]	; (20008 <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1ff1e:	movw	r2, #2996	; 0xbb4
   1ff22:	cmp	r3, #6
   1ff24:	ldr	r0, [pc, #228]	; (2000c <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1ff26:	add	r1, pc
   1ff28:	add.w	r4, r3, #1
   1ff2c:	add.w	r1, r1, #480	; 0x1e0
   1ff30:	add	r0, pc
   1ff32:	ite	ls
   1ff34:	movls	r3, #0
   1ff36:	movhi	r3, #1
   1ff38:	bl	1c2b4 <rb_free_nodes@@Base+0x116>
   1ff3c:	add.w	r2, r5, #32
   1ff40:	ldr.w	r6, [r5, r4, lsl #2]
   1ff44:	cmp	r6, #0
   1ff46:	beq.n	1fffe <btrfs_next_sibling_tree_block@@Base+0xee>
   1ff48:	ldr.w	r3, [r2, r4, lsl #2]
   1ff4c:	add.w	r8, r3, #1
   1ff50:	ldr.w	r3, [r6, #192]	; 0xc0
   1ff54:	cmp	r8, r3
   1ff56:	bcc.n	1ffc6 <btrfs_next_sibling_tree_block@@Base+0xb6>
   1ff58:	adds	r4, #1
   1ff5a:	cmp	r4, #8
   1ff5c:	beq.n	1fffe <btrfs_next_sibling_tree_block@@Base+0xee>
   1ff5e:	cmp	r4, #7
   1ff60:	ble.n	1ff40 <btrfs_next_sibling_tree_block@@Base+0x30>
   1ff62:	movs	r6, #0
   1ff64:	add.w	r3, r4, #8
   1ff68:	add.w	sl, r5, r4, lsl #2
   1ff6c:	mov.w	fp, #0
   1ff70:	mov.w	r9, #0
   1ff74:	str.w	r8, [r5, r3, lsl #2]
   1ff78:	mov.w	r8, #0
   1ff7c:	ldr.w	r0, [sl, #-4]
   1ff80:	subs	r4, #1
   1ff82:	bl	1b4c0 <free_extent_buffer@@Base>
   1ff86:	str.w	r6, [sl, #-4]
   1ff8a:	str.w	fp, [sl, #28]
   1ff8e:	ldrb.w	r3, [r5, #65]	; 0x41
   1ff92:	cmp	r3, r4
   1ff94:	beq.n	20002 <btrfs_next_sibling_tree_block@@Base+0xf2>
   1ff96:	ldrsb.w	r3, [r5, #64]	; 0x40
   1ff9a:	cbz	r3, 1ffac <btrfs_next_sibling_tree_block@@Base+0x9c>
   1ff9c:	movs	r3, #0
   1ff9e:	mov	r2, r4
   1ffa0:	mov	r1, r5
   1ffa2:	mov	r0, r7
   1ffa4:	strd	r8, r9, [sp]
   1ffa8:	bl	1d528 <reada_for_search@@Base>
   1ffac:	mov	r1, r6
   1ffae:	movs	r2, #0
   1ffb0:	mov	r0, r7
   1ffb2:	sub.w	sl, sl, #4
   1ffb6:	bl	1d4ae <read_node_slot@@Base>
   1ffba:	mov	r6, r0
   1ffbc:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1ffc0:	cmp	r0, #0
   1ffc2:	bne.n	1ff7c <btrfs_next_sibling_tree_block@@Base+0x6c>
   1ffc4:	b.n	1fff4 <btrfs_next_sibling_tree_block@@Base+0xe4>
   1ffc6:	ldrsb.w	r3, [r5, #64]	; 0x40
   1ffca:	cbz	r3, 1ffe0 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1ffcc:	movs	r2, #0
   1ffce:	movs	r3, #0
   1ffd0:	mov	r1, r5
   1ffd2:	strd	r2, r3, [sp]
   1ffd6:	mov	r0, r7
   1ffd8:	mov	r3, r8
   1ffda:	mov	r2, r4
   1ffdc:	bl	1d528 <reada_for_search@@Base>
   1ffe0:	mov	r1, r6
   1ffe2:	mov	r2, r8
   1ffe4:	mov	r0, r7
   1ffe6:	bl	1d4ae <read_node_slot@@Base>
   1ffea:	mov	r6, r0
   1ffec:	bl	1c24c <rb_free_nodes@@Base+0xae>
   1fff0:	cmp	r0, #0
   1fff2:	bne.n	1ff64 <btrfs_next_sibling_tree_block@@Base+0x54>
   1fff4:	mvn.w	r0, #4
   1fff8:	add	sp, #12
   1fffa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fffe:	movs	r0, #1
   20000:	b.n	1fff8 <btrfs_next_sibling_tree_block@@Base+0xe8>
   20002:	movs	r0, #0
   20004:	b.n	1fff8 <btrfs_next_sibling_tree_block@@Base+0xe8>
   20006:	nop
   20008:	movs	r2, #230	; 0xe6
   2000a:	movs	r2, r0
   2000c:	movs	r2, #49	; 0x31
   2000e:	movs	r2, r0

00020010 <btrfs_find_item@@Base>:
   20010:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20014:	mov	r8, r0
   20016:	ldr	r4, [pc, #200]	; (200e0 <btrfs_find_item@@Base+0xd0>)
   20018:	sub	sp, #36	; 0x24
   2001a:	ldr	r0, [pc, #200]	; (200e4 <btrfs_find_item@@Base+0xd4>)
   2001c:	mov	r6, r1
   2001e:	add	r4, pc
   20020:	ldr	r7, [sp, #76]	; 0x4c
   20022:	ldr	r0, [r4, r0]
   20024:	ldr	r0, [r0, #0]
   20026:	str	r0, [sp, #28]
   20028:	mov.w	r0, #0
   2002c:	strd	r2, r3, [sp, #8]
   20030:	ldr	r3, [sp, #64]	; 0x40
   20032:	ldrb.w	r0, [sp, #72]	; 0x48
   20036:	str.w	r3, [sp, #17]
   2003a:	ldr	r3, [sp, #68]	; 0x44
   2003c:	strb.w	r0, [sp, #16]
   20040:	str.w	r3, [sp, #21]
   20044:	cbnz	r1, 20054 <btrfs_find_item@@Base+0x44>
   20046:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2004a:	mov	r5, r0
   2004c:	cbnz	r0, 20056 <btrfs_find_item@@Base+0x46>
   2004e:	mvn.w	r4, #11
   20052:	b.n	200be <btrfs_find_item@@Base+0xae>
   20054:	mov	r5, r1
   20056:	mov.w	r9, #0
   2005a:	add	r2, sp, #8
   2005c:	mov	r3, r5
   2005e:	mov	r1, r8
   20060:	mov	r0, r9
   20062:	strd	r9, r9, [sp]
   20066:	bl	1eadc <btrfs_search_slot@@Base>
   2006a:	subs	r4, r0, #0
   2006c:	blt.n	200b4 <btrfs_find_item@@Base+0xa4>
   2006e:	cbz	r7, 200b4 <btrfs_find_item@@Base+0xa4>
   20070:	ldr	r0, [r5, #0]
   20072:	cbz	r4, 20092 <btrfs_find_item@@Base+0x82>
   20074:	ldr.w	r3, [r0, #192]	; 0xc0
   20078:	ldr	r2, [r5, #32]
   2007a:	cmp	r2, r3
   2007c:	bcc.n	20092 <btrfs_find_item@@Base+0x82>
   2007e:	strb.w	r9, [r5, #65]	; 0x41
   20082:	mov	r1, r5
   20084:	ldr.w	r0, [r8, #464]	; 0x1d0
   20088:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2008c:	mov	r4, r0
   2008e:	cbnz	r0, 200b4 <btrfs_find_item@@Base+0xa4>
   20090:	ldr	r0, [r5, #0]
   20092:	ldr	r2, [r5, #32]
   20094:	mov	r1, r7
   20096:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   2009a:	ldrb	r2, [r7, #8]
   2009c:	ldrb.w	r3, [sp, #16]
   200a0:	cmp	r2, r3
   200a2:	bne.n	200d2 <btrfs_find_item@@Base+0xc2>
   200a4:	ldrd	r2, r3, [sp, #8]
   200a8:	ldr	r1, [r7, #4]
   200aa:	ldr	r0, [r7, #0]
   200ac:	cmp	r1, r3
   200ae:	ite	eq
   200b0:	cmpeq	r0, r2
   200b2:	movne	r4, #1
   200b4:	cmp	r5, r6
   200b6:	beq.n	200be <btrfs_find_item@@Base+0xae>
   200b8:	mov	r0, r5
   200ba:	bl	1c71e <btrfs_free_path@@Base>
   200be:	ldr	r2, [pc, #40]	; (200e8 <btrfs_find_item@@Base+0xd8>)
   200c0:	ldr	r3, [pc, #32]	; (200e4 <btrfs_find_item@@Base+0xd4>)
   200c2:	add	r2, pc
   200c4:	ldr	r3, [r2, r3]
   200c6:	ldr	r2, [r3, #0]
   200c8:	ldr	r3, [sp, #28]
   200ca:	eors	r2, r3
   200cc:	beq.n	200d6 <btrfs_find_item@@Base+0xc6>
   200ce:	blx	8c90 <__stack_chk_fail@plt>
   200d2:	movs	r4, #1
   200d4:	b.n	200b4 <btrfs_find_item@@Base+0xa4>
   200d6:	mov	r0, r4
   200d8:	add	sp, #36	; 0x24
   200da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   200de:	nop
   200e0:	add	r4, sp, #1000	; 0x3e8
   200e2:	movs	r4, r0
   200e4:	lsls	r0, r1, #10
   200e6:	movs	r0, r0
   200e8:	add	r4, sp, #344	; 0x158
   200ea:	movs	r4, r0

000200ec <btrfs_search_slot_for_read@@Base>:
   200ec:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   200f0:	mov	r5, r0
   200f2:	ldr.w	r8, [sp, #40]	; 0x28
   200f6:	mov	r6, r1
   200f8:	mov	r4, r2
   200fa:	mov	r9, r3
   200fc:	movs	r7, #0
   200fe:	mov	r3, r4
   20100:	mov	r2, r6
   20102:	mov	r1, r5
   20104:	movs	r0, #0
   20106:	strd	r7, r7, [sp]
   2010a:	bl	1eadc <btrfs_search_slot@@Base>
   2010e:	cmp	r0, #0
   20110:	ble.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>
   20112:	ldr	r3, [r4, #32]
   20114:	cmp.w	r9, #0
   20118:	beq.n	20158 <btrfs_search_slot_for_read@@Base+0x6c>
   2011a:	ldr	r2, [r4, #0]
   2011c:	ldr.w	r2, [r2, #192]	; 0xc0
   20120:	cmp	r3, r2
   20122:	bcs.n	2012c <btrfs_search_slot_for_read@@Base+0x40>
   20124:	movs	r0, #0
   20126:	add	sp, #12
   20128:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2012c:	strb.w	r7, [r4, #65]	; 0x41
   20130:	mov	r1, r4
   20132:	ldr.w	r0, [r5, #464]	; 0x1d0
   20136:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2013a:	cmp	r0, #0
   2013c:	ble.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>
   2013e:	cmp.w	r8, #0
   20142:	bne.n	20148 <btrfs_search_slot_for_read@@Base+0x5c>
   20144:	movs	r0, #1
   20146:	b.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>
   20148:	mov	r0, r4
   2014a:	mov.w	r9, #0
   2014e:	bl	1c6f8 <btrfs_release_path@@Base>
   20152:	mov.w	r8, #0
   20156:	b.n	200fe <btrfs_search_slot_for_read@@Base+0x12>
   20158:	cbnz	r3, 2018c <btrfs_search_slot_for_read@@Base+0xa0>
   2015a:	mov	r1, r4
   2015c:	mov	r0, r5
   2015e:	bl	1fe88 <btrfs_prev_leaf@@Base>
   20162:	cmp	r0, #0
   20164:	blt.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>
   20166:	bne.n	2017a <btrfs_search_slot_for_read@@Base+0x8e>
   20168:	ldr	r2, [r4, #0]
   2016a:	ldr	r3, [r4, #32]
   2016c:	ldr.w	r2, [r2, #192]	; 0xc0
   20170:	cmp	r3, r2
   20172:	bne.n	20124 <btrfs_search_slot_for_read@@Base+0x38>
   20174:	subs	r3, #1
   20176:	str	r3, [r4, #32]
   20178:	b.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>
   2017a:	cmp.w	r8, #0
   2017e:	beq.n	20144 <btrfs_search_slot_for_read@@Base+0x58>
   20180:	mov	r0, r4
   20182:	mov.w	r9, #1
   20186:	bl	1c6f8 <btrfs_release_path@@Base>
   2018a:	b.n	20152 <btrfs_search_slot_for_read@@Base+0x66>
   2018c:	subs	r3, #1
   2018e:	mov	r0, r9
   20190:	str	r3, [r4, #32]
   20192:	b.n	20126 <btrfs_search_slot_for_read@@Base+0x3a>

00020194 <btrfs_previous_item@@Base>:
   20194:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20198:	mov	r6, r2
   2019a:	ldr	r2, [pc, #144]	; (2022c <btrfs_previous_item@@Base+0x98>)
   2019c:	mov	r7, r3
   2019e:	ldr	r3, [pc, #144]	; (20230 <btrfs_previous_item@@Base+0x9c>)
   201a0:	sub	sp, #28
   201a2:	add	r2, pc
   201a4:	mov	r5, r0
   201a6:	ldr.w	r8, [sp, #56]	; 0x38
   201aa:	mov	r4, r1
   201ac:	ldr	r3, [r2, r3]
   201ae:	mov	r9, sp
   201b0:	ldr	r3, [r3, #0]
   201b2:	str	r3, [sp, #20]
   201b4:	mov.w	r3, #0
   201b8:	ldr	r3, [r4, #32]
   201ba:	cbnz	r3, 201da <btrfs_previous_item@@Base+0x46>
   201bc:	mov	r1, r4
   201be:	mov	r0, r5
   201c0:	bl	1fe88 <btrfs_prev_leaf@@Base>
   201c4:	cbz	r0, 201de <btrfs_previous_item@@Base+0x4a>
   201c6:	ldr	r2, [pc, #108]	; (20234 <btrfs_previous_item@@Base+0xa0>)
   201c8:	ldr	r3, [pc, #100]	; (20230 <btrfs_previous_item@@Base+0x9c>)
   201ca:	add	r2, pc
   201cc:	ldr	r3, [r2, r3]
   201ce:	ldr	r2, [r3, #0]
   201d0:	ldr	r3, [sp, #20]
   201d2:	eors	r2, r3
   201d4:	beq.n	20224 <btrfs_previous_item@@Base+0x90>
   201d6:	blx	8c90 <__stack_chk_fail@plt>
   201da:	subs	r3, #1
   201dc:	str	r3, [r4, #32]
   201de:	ldr	r0, [r4, #0]
   201e0:	ldr.w	r2, [r0, #192]	; 0xc0
   201e4:	cbnz	r2, 201ea <btrfs_previous_item@@Base+0x56>
   201e6:	movs	r0, #1
   201e8:	b.n	201c6 <btrfs_previous_item@@Base+0x32>
   201ea:	ldr	r3, [r4, #32]
   201ec:	mov	r1, r9
   201ee:	cmp	r3, r2
   201f0:	itt	eq
   201f2:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   201f6:	streq	r3, [r4, #32]
   201f8:	ldr	r2, [r4, #32]
   201fa:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   201fe:	ldrd	r0, r1, [sp]
   20202:	cmp	r1, r7
   20204:	it	eq
   20206:	cmpeq	r0, r6
   20208:	bcc.n	201e6 <btrfs_previous_item@@Base+0x52>
   2020a:	ldrb.w	r3, [sp, #8]
   2020e:	cmp	r3, r8
   20210:	beq.n	20220 <btrfs_previous_item@@Base+0x8c>
   20212:	cmp	r1, r7
   20214:	it	eq
   20216:	cmpeq	r0, r6
   20218:	bne.n	201b8 <btrfs_previous_item@@Base+0x24>
   2021a:	cmp	r3, r8
   2021c:	bge.n	201b8 <btrfs_previous_item@@Base+0x24>
   2021e:	b.n	201e6 <btrfs_previous_item@@Base+0x52>
   20220:	movs	r0, #0
   20222:	b.n	201c6 <btrfs_previous_item@@Base+0x32>
   20224:	add	sp, #28
   20226:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2022a:	nop
   2022c:	add	r3, sp, #472	; 0x1d8
   2022e:	movs	r4, r0
   20230:	lsls	r0, r1, #10
   20232:	movs	r0, r0
   20234:	add	r3, sp, #312	; 0x138
   20236:	movs	r4, r0

00020238 <btrfs_previous_extent_item@@Base>:
   20238:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2023c:	mov	r6, r2
   2023e:	ldr	r2, [pc, #144]	; (202d0 <btrfs_previous_extent_item@@Base+0x98>)
   20240:	mov	r7, r3
   20242:	ldr	r3, [pc, #144]	; (202d4 <btrfs_previous_extent_item@@Base+0x9c>)
   20244:	sub	sp, #24
   20246:	add	r2, pc
   20248:	mov	r5, r0
   2024a:	mov	r4, r1
   2024c:	mov	r8, sp
   2024e:	ldr	r3, [r2, r3]
   20250:	ldr	r3, [r3, #0]
   20252:	str	r3, [sp, #20]
   20254:	mov.w	r3, #0
   20258:	ldr	r3, [r4, #32]
   2025a:	cbnz	r3, 2027a <btrfs_previous_extent_item@@Base+0x42>
   2025c:	mov	r1, r4
   2025e:	mov	r0, r5
   20260:	bl	1fe88 <btrfs_prev_leaf@@Base>
   20264:	cbz	r0, 2027e <btrfs_previous_extent_item@@Base+0x46>
   20266:	ldr	r2, [pc, #112]	; (202d8 <btrfs_previous_extent_item@@Base+0xa0>)
   20268:	ldr	r3, [pc, #104]	; (202d4 <btrfs_previous_extent_item@@Base+0x9c>)
   2026a:	add	r2, pc
   2026c:	ldr	r3, [r2, r3]
   2026e:	ldr	r2, [r3, #0]
   20270:	ldr	r3, [sp, #20]
   20272:	eors	r2, r3
   20274:	beq.n	202ca <btrfs_previous_extent_item@@Base+0x92>
   20276:	blx	8c90 <__stack_chk_fail@plt>
   2027a:	subs	r3, #1
   2027c:	str	r3, [r4, #32]
   2027e:	ldr	r0, [r4, #0]
   20280:	ldr.w	r2, [r0, #192]	; 0xc0
   20284:	cbnz	r2, 2028a <btrfs_previous_extent_item@@Base+0x52>
   20286:	movs	r0, #1
   20288:	b.n	20266 <btrfs_previous_extent_item@@Base+0x2e>
   2028a:	ldr	r3, [r4, #32]
   2028c:	mov	r1, r8
   2028e:	cmp	r3, r2
   20290:	itt	eq
   20292:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   20296:	streq	r3, [r4, #32]
   20298:	ldr	r2, [r4, #32]
   2029a:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   2029e:	ldrd	r0, r1, [sp]
   202a2:	cmp	r1, r7
   202a4:	it	eq
   202a6:	cmpeq	r0, r6
   202a8:	bcc.n	20286 <btrfs_previous_extent_item@@Base+0x4e>
   202aa:	ldrb.w	r2, [sp, #8]
   202ae:	add.w	r3, r2, #88	; 0x58
   202b2:	uxtb	r3, r3
   202b4:	cmp	r3, #1
   202b6:	bls.n	202c6 <btrfs_previous_extent_item@@Base+0x8e>
   202b8:	cmp	r1, r7
   202ba:	it	eq
   202bc:	cmpeq	r0, r6
   202be:	bne.n	20258 <btrfs_previous_extent_item@@Base+0x20>
   202c0:	cmp	r2, #167	; 0xa7
   202c2:	bhi.n	20258 <btrfs_previous_extent_item@@Base+0x20>
   202c4:	b.n	20286 <btrfs_previous_extent_item@@Base+0x4e>
   202c6:	movs	r0, #0
   202c8:	b.n	20266 <btrfs_previous_extent_item@@Base+0x2e>
   202ca:	add	sp, #24
   202cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   202d0:	add	r2, sp, #840	; 0x348
   202d2:	movs	r4, r0
   202d4:	lsls	r0, r1, #10
   202d6:	movs	r0, r0
   202d8:	add	r2, sp, #696	; 0x2b8
   202da:	movs	r4, r0

000202dc <btrfs_next_extent_item@@Base>:
   202dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   202e0:	mov	r6, r2
   202e2:	ldr	r2, [pc, #132]	; (20368 <btrfs_next_extent_item@@Base+0x8c>)
   202e4:	mov	r7, r3
   202e6:	ldr	r3, [pc, #132]	; (2036c <btrfs_next_extent_item@@Base+0x90>)
   202e8:	sub	sp, #28
   202ea:	add	r2, pc
   202ec:	mov	r5, r0
   202ee:	mov	r4, r1
   202f0:	mov.w	r8, #0
   202f4:	ldr	r3, [r2, r3]
   202f6:	mov	r9, sp
   202f8:	ldr	r3, [r3, #0]
   202fa:	str	r3, [sp, #20]
   202fc:	mov.w	r3, #0
   20300:	ldr	r2, [r4, #0]
   20302:	ldr	r3, [r4, #32]
   20304:	adds	r3, #1
   20306:	str	r3, [r4, #32]
   20308:	ldr.w	r2, [r2, #192]	; 0xc0
   2030c:	cmp	r3, r2
   2030e:	bcs.n	2032a <btrfs_next_extent_item@@Base+0x4e>
   20310:	ldr	r2, [r4, #32]
   20312:	mov	r1, r9
   20314:	ldr	r0, [r4, #0]
   20316:	bl	1c650 <rb_free_nodes@@Base+0x4b2>
   2031a:	ldrd	r2, r3, [sp]
   2031e:	cmp	r7, r3
   20320:	it	eq
   20322:	cmpeq	r6, r2
   20324:	bcs.n	20350 <btrfs_next_extent_item@@Base+0x74>
   20326:	movs	r0, #1
   20328:	b.n	2033c <btrfs_next_extent_item@@Base+0x60>
   2032a:	strb.w	r8, [r4, #65]	; 0x41
   2032e:	mov	r1, r4
   20330:	ldr.w	r0, [r5, #464]	; 0x1d0
   20334:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   20338:	cmp	r0, #0
   2033a:	beq.n	20310 <btrfs_next_extent_item@@Base+0x34>
   2033c:	ldr	r2, [pc, #48]	; (20370 <btrfs_next_extent_item@@Base+0x94>)
   2033e:	ldr	r3, [pc, #44]	; (2036c <btrfs_next_extent_item@@Base+0x90>)
   20340:	add	r2, pc
   20342:	ldr	r3, [r2, r3]
   20344:	ldr	r2, [r3, #0]
   20346:	ldr	r3, [sp, #20]
   20348:	eors	r2, r3
   2034a:	beq.n	20360 <btrfs_next_extent_item@@Base+0x84>
   2034c:	blx	8c90 <__stack_chk_fail@plt>
   20350:	ldrb.w	r3, [sp, #8]
   20354:	adds	r3, #88	; 0x58
   20356:	uxtb	r3, r3
   20358:	cmp	r3, #1
   2035a:	bhi.n	20300 <btrfs_next_extent_item@@Base+0x24>
   2035c:	movs	r0, #0
   2035e:	b.n	2033c <btrfs_next_extent_item@@Base+0x60>
   20360:	add	sp, #28
   20362:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20366:	nop
   20368:	add	r2, sp, #184	; 0xb8
   2036a:	movs	r4, r0
   2036c:	lsls	r0, r1, #10
   2036e:	movs	r0, r0
   20370:	add	r1, sp, #864	; 0x360
   20372:	movs	r4, r0

00020374 <btrfs_uuid_tree_add@@Base>:
   20374:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20378:	mov	sl, r2
   2037a:	ldr	r2, [pc, #408]	; (20514 <btrfs_uuid_tree_add@@Base+0x1a0>)
   2037c:	sub	sp, #60	; 0x3c
   2037e:	ldr	r3, [pc, #408]	; (20518 <btrfs_uuid_tree_add@@Base+0x1a4>)
   20380:	mov	r8, r0
   20382:	add	r2, pc
   20384:	mov	r9, r1
   20386:	ldr	r3, [r2, r3]
   20388:	ldr	r3, [r3, #0]
   2038a:	str	r3, [sp, #52]	; 0x34
   2038c:	mov.w	r3, #0
   20390:	ldr	r3, [r0, #0]
   20392:	ldr	r7, [r3, #52]	; 0x34
   20394:	cbnz	r7, 203c0 <btrfs_uuid_tree_add@@Base+0x4c>
   20396:	ldr	r1, [pc, #388]	; (2051c <btrfs_uuid_tree_add@@Base+0x1a8>)
   20398:	mvn.w	r4, #21
   2039c:	ldr	r0, [pc, #384]	; (20520 <btrfs_uuid_tree_add@@Base+0x1ac>)
   2039e:	add	r1, pc
   203a0:	add.w	r1, r1, #510	; 0x1fe
   203a4:	add	r0, pc
   203a6:	bl	1bca0 <__btrfs_warning@@Base>
   203aa:	ldr	r2, [pc, #376]	; (20524 <btrfs_uuid_tree_add@@Base+0x1b0>)
   203ac:	ldr	r3, [pc, #360]	; (20518 <btrfs_uuid_tree_add@@Base+0x1a4>)
   203ae:	add	r2, pc
   203b0:	ldr	r3, [r2, r3]
   203b2:	ldr	r2, [r3, #0]
   203b4:	ldr	r3, [sp, #52]	; 0x34
   203b6:	eors	r2, r3
   203b8:	beq.w	2050c <btrfs_uuid_tree_add@@Base+0x198>
   203bc:	blx	8c90 <__stack_chk_fail@plt>
   203c0:	bl	1c6f0 <btrfs_alloc_path@@Base>
   203c4:	mov	r5, r0
   203c6:	cmp	r0, #0
   203c8:	beq.n	20446 <btrfs_uuid_tree_add@@Base+0xd2>
   203ca:	add	r2, sp, #32
   203cc:	mov	r0, r9
   203ce:	str	r2, [sp, #16]
   203d0:	mov	r1, r2
   203d2:	bl	1be90 <btrfs_uuid_to_key@@Base>
   203d6:	movs	r0, #0
   203d8:	ldr	r2, [sp, #16]
   203da:	mov	r3, r5
   203dc:	mov	r1, r7
   203de:	strd	r0, r0, [sp]
   203e2:	strb.w	sl, [sp, #40]	; 0x28
   203e6:	bl	1eadc <btrfs_search_slot@@Base>
   203ea:	subs	r4, r0, #0
   203ec:	blt.n	2044a <btrfs_uuid_tree_add@@Base+0xd6>
   203ee:	bne.n	20440 <btrfs_uuid_tree_add@@Base+0xcc>
   203f0:	ldr	r0, [r5, #0]
   203f2:	movs	r2, #25
   203f4:	ldr	r3, [r5, #32]
   203f6:	mla	r3, r2, r3, r0
   203fa:	ldr.w	r6, [r3, #218]	; 0xda
   203fe:	ldr.w	fp, [r3, #214]	; 0xd6
   20402:	lsls	r2, r6, #29
   20404:	add.w	fp, fp, #101	; 0x65
   20408:	bne.n	20436 <btrfs_uuid_tree_add@@Base+0xc2>
   2040a:	add	r1, sp, #24
   2040c:	cbz	r6, 20440 <btrfs_uuid_tree_add@@Base+0xcc>
   2040e:	movs	r3, #8
   20410:	mov	r2, fp
   20412:	strd	r0, r1, [sp, #16]
   20416:	bl	1bbba <read_extent_buffer@@Base>
   2041a:	ldrd	r2, r3, [sp, #24]
   2041e:	ldrd	r0, r1, [sp, #96]	; 0x60
   20422:	cmp	r1, r3
   20424:	it	eq
   20426:	cmpeq	r0, r2
   20428:	beq.n	2044a <btrfs_uuid_tree_add@@Base+0xd6>
   2042a:	ldrd	r0, r1, [sp, #16]
   2042e:	add.w	fp, fp, #8
   20432:	subs	r6, #8
   20434:	b.n	2040c <btrfs_uuid_tree_add@@Base+0x98>
   20436:	ldr	r0, [pc, #240]	; (20528 <btrfs_uuid_tree_add@@Base+0x1b4>)
   20438:	mov	r1, r6
   2043a:	add	r0, pc
   2043c:	bl	1bca0 <__btrfs_warning@@Base>
   20440:	mvn.w	r4, #1
   20444:	b.n	2044a <btrfs_uuid_tree_add@@Base+0xd6>
   20446:	mvn.w	r4, #11
   2044a:	mov	r0, r5
   2044c:	bl	1c71e <btrfs_free_path@@Base>
   20450:	adds	r3, r4, #2
   20452:	bne.n	203aa <btrfs_uuid_tree_add@@Base+0x36>
   20454:	add	r3, sp, #32
   20456:	mov	r0, r9
   20458:	str	r3, [sp, #16]
   2045a:	mov	r1, r3
   2045c:	strb.w	sl, [sp, #40]	; 0x28
   20460:	bl	1be90 <btrfs_uuid_to_key@@Base>
   20464:	bl	1c6f0 <btrfs_alloc_path@@Base>
   20468:	mov	r5, r0
   2046a:	cmp	r0, #0
   2046c:	beq.n	20506 <btrfs_uuid_tree_add@@Base+0x192>
   2046e:	movs	r2, #1
   20470:	ldr	r3, [sp, #16]
   20472:	str	r2, [sp, #4]
   20474:	add	r6, sp, #24
   20476:	mov	r2, r0
   20478:	mov	r1, r7
   2047a:	mov	r0, r8
   2047c:	str	r6, [sp, #0]
   2047e:	mov.w	r9, #8
   20482:	str.w	r9, [sp, #24]
   20486:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2048a:	subs	r4, r0, #0
   2048c:	blt.n	204ba <btrfs_uuid_tree_add@@Base+0x146>
   2048e:	ldr	r4, [r5, #0]
   20490:	movs	r2, #25
   20492:	ldr	r3, [r5, #32]
   20494:	mla	r3, r2, r3, r4
   20498:	ldr.w	r2, [r3, #214]	; 0xd6
   2049c:	adds	r2, #101	; 0x65
   2049e:	ldrd	r0, r1, [sp, #96]	; 0x60
   204a2:	movs	r3, #8
   204a4:	strd	r0, r1, [sp, #24]
   204a8:	mov	r0, r4
   204aa:	mov	r1, r6
   204ac:	bl	1bbd0 <write_extent_buffer@@Base>
   204b0:	mov	r0, r4
   204b2:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   204b6:	movs	r4, #0
   204b8:	b.n	204fe <btrfs_uuid_tree_add@@Base+0x18a>
   204ba:	cmn.w	r4, #17
   204be:	bne.n	204e2 <btrfs_uuid_tree_add@@Base+0x16e>
   204c0:	mov	r2, r9
   204c2:	mov	r1, r5
   204c4:	mov	r0, r7
   204c6:	bl	1e8d0 <btrfs_extend_item@@Base>
   204ca:	ldr	r4, [r5, #0]
   204cc:	ldr	r3, [r5, #32]
   204ce:	movs	r2, #25
   204d0:	mla	r3, r2, r3, r4
   204d4:	ldr.w	r2, [r3, #218]	; 0xda
   204d8:	ldr.w	r3, [r3, #214]	; 0xd6
   204dc:	add	r2, r3
   204de:	adds	r2, #93	; 0x5d
   204e0:	b.n	2049e <btrfs_uuid_tree_add@@Base+0x12a>
   204e2:	ldr.w	r2, [sp, #41]	; 0x29
   204e6:	ldr.w	r3, [sp, #45]	; 0x2d
   204ea:	ldr	r0, [pc, #64]	; (2052c <btrfs_uuid_tree_add@@Base+0x1b8>)
   204ec:	strd	sl, r4, [sp, #8]
   204f0:	strd	r2, r3, [sp]
   204f4:	add	r0, pc
   204f6:	ldrd	r2, r3, [sp, #32]
   204fa:	bl	1bca0 <__btrfs_warning@@Base>
   204fe:	mov	r0, r5
   20500:	bl	1c71e <btrfs_free_path@@Base>
   20504:	b.n	203aa <btrfs_uuid_tree_add@@Base+0x36>
   20506:	mvn.w	r4, #11
   2050a:	b.n	204fe <btrfs_uuid_tree_add@@Base+0x18a>
   2050c:	mov	r0, r4
   2050e:	add	sp, #60	; 0x3c
   20510:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20514:	add	r1, sp, #600	; 0x258
   20516:	movs	r4, r0
   20518:	lsls	r0, r1, #10
   2051a:	movs	r0, r0
   2051c:	subs	r6, r5, #1
   2051e:	movs	r2, r0
   20520:	adds	r7, r4, #7
   20522:	movs	r2, r0
   20524:	add	r1, sp, #424	; 0x1a8
   20526:	movs	r4, r0
   20528:	adds	r2, r6, #5
   2052a:	movs	r2, r0
   2052c:	adds	r1, r3, #3
   2052e:	movs	r2, r0
   20530:	push	{r4, r5, lr}
   20532:	ldrd	r4, r5, [r1]
   20536:	ldrd	r2, r3, [r0, #-56]	; 0x38
   2053a:	cmp	r3, r5
   2053c:	it	eq
   2053e:	cmpeq	r2, r4
   20540:	bcc.n	20552 <btrfs_uuid_tree_add@@Base+0x1de>
   20542:	cmp	r5, r3
   20544:	it	eq
   20546:	cmpeq	r4, r2
   20548:	ite	cc
   2054a:	movcc.w	r0, #4294967295	; 0xffffffff
   2054e:	movcs	r0, #0
   20550:	pop	{r4, r5, pc}
   20552:	movs	r0, #1
   20554:	b.n	20550 <btrfs_uuid_tree_add@@Base+0x1dc>

00020556 <btrfs_fs_roots_compare_roots@@Base>:
   20556:	subs	r1, #56	; 0x38
   20558:	b.n	20530 <btrfs_uuid_tree_add@@Base+0x1bc>
   2055a:	movs	r2, #0
   2055c:	addw	r3, r0, #2859	; 0xb2b
   20560:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20564:	mov.w	r8, #0
   20568:	ldr	r6, [r0, #72]	; 0x48
   2056a:	mov.w	r9, #0
   2056e:	ldr	r7, [r0, #76]	; 0x4c
   20570:	mov	r0, r2
   20572:	ldr	r5, [r3, #12]
   20574:	ldr	r4, [r3, #8]
   20576:	cmp	r5, r7
   20578:	it	eq
   2057a:	cmpeq	r4, r6
   2057c:	beq.n	2058c <btrfs_fs_roots_compare_roots@@Base+0x36>
   2057e:	cmp	r9, r5
   20580:	it	eq
   20582:	cmpeq	r8, r4
   20584:	ittt	cc
   20586:	movcc	r0, r2
   20588:	movcc	r8, r4
   2058a:	movcc	r9, r5
   2058c:	adds	r2, #1
   2058e:	adds	r3, #168	; 0xa8
   20590:	cmp	r2, #4
   20592:	bne.n	20572 <btrfs_fs_roots_compare_roots@@Base+0x1c>
   20594:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20598:	ldr	r2, [pc, #60]	; (205d8 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   2059a:	movs	r1, #16
   2059c:	ldr	r3, [pc, #60]	; (205dc <btrfs_fs_roots_compare_roots@@Base+0x86>)
   2059e:	push	{r4, lr}
   205a0:	add	r2, pc
   205a2:	sub	sp, #72	; 0x48
   205a4:	add	r4, sp, #4
   205a6:	ldr	r3, [r2, r3]
   205a8:	mov	r0, r4
   205aa:	ldr	r3, [r3, #0]
   205ac:	str	r3, [sp, #68]	; 0x44
   205ae:	mov.w	r3, #0
   205b2:	blx	8e98 <backtrace@plt>
   205b6:	movs	r2, #2
   205b8:	mov	r1, r0
   205ba:	mov	r0, r4
   205bc:	blx	9214 <backtrace_symbols_fd@plt>
   205c0:	ldr	r2, [pc, #28]	; (205e0 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   205c2:	ldr	r3, [pc, #24]	; (205dc <btrfs_fs_roots_compare_roots@@Base+0x86>)
   205c4:	add	r2, pc
   205c6:	ldr	r3, [r2, r3]
   205c8:	ldr	r2, [r3, #0]
   205ca:	ldr	r3, [sp, #68]	; 0x44
   205cc:	eors	r2, r3
   205ce:	beq.n	205d4 <btrfs_fs_roots_compare_roots@@Base+0x7e>
   205d0:	blx	8c90 <__stack_chk_fail@plt>
   205d4:	add	sp, #72	; 0x48
   205d6:	pop	{r4, pc}
   205d8:	add	r7, pc, #480	; (adr r7, 207bc <btrfs_fs_roots_compare_roots@@Base+0x266>)
   205da:	movs	r4, r0
   205dc:	lsls	r0, r1, #10
   205de:	movs	r0, r0
   205e0:	add	r7, pc, #336	; (adr r7, 20734 <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   205e2:	movs	r4, r0
   205e4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   205e8:	mov	r5, r0
   205ea:	ldr.w	sl, [r1, #144]	; 0x90
   205ee:	mov	r4, r1
   205f0:	ldr.w	fp, [r1, #148]	; 0x94
   205f4:	ldr.w	r8, [r0, #352]	; 0x160
   205f8:	ldr.w	r2, [r0, #384]	; 0x180
   205fc:	ldrd	r0, r1, [r1, #40]	; 0x28
   20600:	cmp	r1, fp
   20602:	it	eq
   20604:	cmpeq	r0, sl
   20606:	bne.n	20690 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   20608:	ldrb.w	r1, [r4, #196]	; 0xc4
   2060c:	cmp	r1, #7
   2060e:	bhi.n	20696 <btrfs_fs_roots_compare_roots@@Base+0x140>
   20610:	ldr.w	r0, [r4, #192]	; 0xc0
   20614:	subs	r2, #101	; 0x65
   20616:	cbnz	r1, 2062e <btrfs_fs_roots_compare_roots@@Base+0xd8>
   20618:	ldr	r3, [pc, #136]	; (206a4 <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   2061a:	umull	r2, r3, r2, r3
   2061e:	lsrs	r3, r3, #3
   20620:	cmp	r0, r3
   20622:	bhi.n	20628 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   20624:	cbnz	r0, 2068a <btrfs_fs_roots_compare_roots@@Base+0x134>
   20626:	cbz	r1, 2068a <btrfs_fs_roots_compare_roots@@Base+0x134>
   20628:	mvn.w	r0, #3
   2062c:	b.n	2067e <btrfs_fs_roots_compare_roots@@Base+0x128>
   2062e:	ldr	r3, [pc, #120]	; (206a8 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   20630:	b.n	2061a <btrfs_fs_roots_compare_roots@@Base+0xc4>
   20632:	ldr.w	r3, [r5, #352]	; 0x160
   20636:	cmp	r3, r8
   20638:	bne.n	20682 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   2063a:	ldr.w	r3, [r5, #308]	; 0x134
   2063e:	mov	r7, r9
   20640:	ldr.w	r3, [r3, #188]	; 0xbc
   20644:	and.w	r6, r3, #1024	; 0x400
   20648:	orrs.w	r3, r6, r7
   2064c:	beq.n	20682 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   2064e:	movs	r3, #16
   20650:	add.w	r1, r8, r3
   20654:	movs	r2, #32
   20656:	mov	r0, r4
   20658:	bl	1bba8 <memcmp_extent_buffer@@Base>
   2065c:	ldrb.w	r3, [r5, #364]	; 0x16c
   20660:	ands.w	r3, r3, #64	; 0x40
   20664:	clz	r0, r0
   20668:	mov.w	r0, r0, lsr #5
   2066c:	bne.n	2069c <btrfs_fs_roots_compare_roots@@Base+0x146>
   2066e:	cbnz	r0, 206a0 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   20670:	ldr.w	r8, [r8, #92]	; 0x5c
   20674:	cmp.w	r8, #0
   20678:	bne.n	20632 <btrfs_fs_roots_compare_roots@@Base+0xdc>
   2067a:	mvn.w	r0, #1
   2067e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20682:	movs	r3, #16
   20684:	movs	r2, #32
   20686:	mov	r1, r8
   20688:	b.n	20656 <btrfs_fs_roots_compare_roots@@Base+0x100>
   2068a:	mov.w	r9, #0
   2068e:	b.n	20674 <btrfs_fs_roots_compare_roots@@Base+0x11e>
   20690:	mov.w	r0, #4294967295	; 0xffffffff
   20694:	b.n	2067e <btrfs_fs_roots_compare_roots@@Base+0x128>
   20696:	mvn.w	r0, #2
   2069a:	b.n	2067e <btrfs_fs_roots_compare_roots@@Base+0x128>
   2069c:	movs	r0, #0
   2069e:	b.n	2067e <btrfs_fs_roots_compare_roots@@Base+0x128>
   206a0:	mov	r0, r3
   206a2:	b.n	2067e <btrfs_fs_roots_compare_roots@@Base+0x128>
   206a4:	strh	r7, [r3, #40]	; 0x28
   206a6:	str	r3, [r5, r7]
   206a8:	strh	r1, [r4, #30]
   206aa:	subs	r6, #15
   206ac:	b.w	8b80 <free@plt>
   206b0:	cbz	r0, 206c2 <btrfs_fs_roots_compare_roots@@Base+0x16c>
   206b2:	cmn.w	r0, #4096	; 0x1000
   206b6:	bhi.n	206c0 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   206b8:	ldr	r0, [r0, #84]	; 0x54
   206ba:	ubfx	r0, r0, #2, #1
   206be:	bx	lr
   206c0:	movs	r0, #0
   206c2:	bx	lr
   206c4:	push	{r4, r5, r6, r7, lr}
   206c6:	mov	r1, r3
   206c8:	ldr	r6, [pc, #100]	; (20730 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   206ca:	sub	sp, #28
   206cc:	mov	r4, r0
   206ce:	mov	r0, r2
   206d0:	orrs.w	r3, r0, r1
   206d4:	add	r6, pc
   206d6:	ldr	r5, [sp, #48]	; 0x30
   206d8:	beq.n	2071e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   206da:	ldr.w	r3, [r4, #180]	; 0xb4
   206de:	ldr.w	r2, [r4, #176]	; 0xb0
   206e2:	cmp	r1, r3
   206e4:	it	eq
   206e6:	cmpeq	r0, r2
   206e8:	beq.n	2071e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   206ea:	ldr	r7, [pc, #72]	; (20734 <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   206ec:	ldr	r6, [r6, r7]
   206ee:	strd	r2, r3, [sp, #16]
   206f2:	ldrd	r2, r3, [r4, #40]	; 0x28
   206f6:	strd	r0, r1, [sp, #8]
   206fa:	movs	r1, #1
   206fc:	strd	r2, r3, [sp]
   20700:	ldr	r2, [pc, #52]	; (20738 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   20702:	ldr	r0, [r6, #0]
   20704:	add	r2, pc
   20706:	blx	9040 <__fprintf_chk@plt+0x4>
   2070a:	ldr	r3, [r4, #84]	; 0x54
   2070c:	cbz	r5, 20722 <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   2070e:	ldr	r0, [pc, #44]	; (2073c <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   20710:	orr.w	r3, r3, #1024	; 0x400
   20714:	ldr	r1, [r6, #0]
   20716:	add	r0, pc
   20718:	str	r3, [r4, #84]	; 0x54
   2071a:	blx	91a8 <fputs@plt+0x4>
   2071e:	movs	r0, #0
   20720:	b.n	2072a <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   20722:	movs	r0, #1
   20724:	bic.w	r3, r3, #4
   20728:	str	r3, [r4, #84]	; 0x54
   2072a:	add	sp, #28
   2072c:	pop	{r4, r5, r6, r7, pc}
   2072e:	nop
   20730:	add	r6, pc, #272	; (adr r6, 20844 <btrfs_fs_roots_compare_roots@@Base+0x2ee>)
   20732:	movs	r4, r0
   20734:	lsls	r4, r3, #10
   20736:	movs	r0, r0
   20738:	adds	r2, r3, #4
   2073a:	movs	r2, r0
   2073c:	adds	r5, r0, #5
   2073e:	movs	r2, r0
   20740:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20744:	mov	r5, r2
   20746:	ldr	r2, [pc, #244]	; (2083c <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   20748:	sub	sp, #128	; 0x80
   2074a:	ldr	r3, [pc, #244]	; (20840 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   2074c:	movs	r6, #0
   2074e:	add	r2, pc
   20750:	ldr.w	r8, [pc, #240]	; 20844 <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   20754:	mov	r7, r0
   20756:	mov	r4, r1
   20758:	ldr	r3, [r2, r3]
   2075a:	mov	r1, r6
   2075c:	add	r0, sp, #48	; 0x30
   2075e:	movs	r2, #33	; 0x21
   20760:	ldr	r3, [r3, #0]
   20762:	str	r3, [sp, #124]	; 0x7c
   20764:	mov.w	r3, #0
   20768:	str	r6, [sp, #44]	; 0x2c
   2076a:	blx	8f98 <memset@plt+0x4>
   2076e:	add	r0, sp, #88	; 0x58
   20770:	movs	r2, #33	; 0x21
   20772:	mov	r1, r6
   20774:	add	r8, pc
   20776:	str	r6, [sp, #84]	; 0x54
   20778:	blx	8f98 <memset@plt+0x4>
   2077c:	cmp	r5, #0
   2077e:	beq.n	20800 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   20780:	ldr	r3, [pc, #196]	; (20848 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   20782:	movs	r1, #1
   20784:	adds	r5, #4
   20786:	ldr.w	r6, [r8, r3]
   2078a:	ldrd	r2, r3, [r4, #40]	; 0x28
   2078e:	strd	r2, r3, [sp]
   20792:	ldr	r2, [pc, #184]	; (2084c <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   20794:	ldr	r0, [r6, #0]
   20796:	add	r2, pc
   20798:	blx	9040 <__fprintf_chk@plt+0x4>
   2079c:	cmp	r5, #3
   2079e:	bhi.n	20800 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   207a0:	tbb	[pc, r5]
   207a4:	subs	r0, #63	; 0x3f
   207a6:	subs	r2, r0, #0
   207a8:	add	r5, sp, #28
   207aa:	mov	r0, r4
   207ac:	add	r4, sp, #84	; 0x54
   207ae:	movs	r2, #32
   207b0:	movs	r3, #16
   207b2:	mov	r1, r5
   207b4:	bl	1bbba <read_extent_buffer@@Base>
   207b8:	mov	r1, r4
   207ba:	mov	r0, r5
   207bc:	blx	8b1c <uuid_unparse@plt>
   207c0:	add	r3, sp, #44	; 0x2c
   207c2:	ldr	r0, [r7, #0]
   207c4:	mov	r1, r3
   207c6:	str	r3, [sp, #20]
   207c8:	adds	r0, #16
   207ca:	blx	8b1c <uuid_unparse@plt>
   207ce:	ldr	r2, [pc, #128]	; (20850 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   207d0:	ldr	r3, [sp, #20]
   207d2:	add	r2, pc
   207d4:	str	r4, [sp, #0]
   207d6:	ldr	r0, [r6, #0]
   207d8:	movs	r1, #1
   207da:	blx	9040 <__fprintf_chk@plt+0x4>
   207de:	b.n	20800 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   207e0:	ldr.w	r2, [r4, #144]	; 0x90
   207e4:	movs	r1, #1
   207e6:	ldr.w	r3, [r4, #148]	; 0x94
   207ea:	strd	r2, r3, [sp, #8]
   207ee:	ldrd	r2, r3, [r4, #40]	; 0x28
   207f2:	strd	r2, r3, [sp]
   207f6:	ldr	r2, [pc, #92]	; (20854 <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   207f8:	ldr	r0, [r6, #0]
   207fa:	add	r2, pc
   207fc:	blx	9040 <__fprintf_chk@plt+0x4>
   20800:	ldr	r2, [pc, #84]	; (20858 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   20802:	ldr	r3, [pc, #60]	; (20840 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   20804:	add	r2, pc
   20806:	ldr	r3, [r2, r3]
   20808:	ldr	r2, [r3, #0]
   2080a:	ldr	r3, [sp, #124]	; 0x7c
   2080c:	eors	r2, r3
   2080e:	beq.n	20834 <btrfs_fs_roots_compare_roots@@Base+0x2de>
   20810:	blx	8c90 <__stack_chk_fail@plt>
   20814:	ldr	r2, [pc, #68]	; (2085c <btrfs_fs_roots_compare_roots@@Base+0x306>)
   20816:	movs	r3, #8
   20818:	str	r3, [sp, #0]
   2081a:	add	r2, pc
   2081c:	ldrb.w	r3, [r4, #196]	; 0xc4
   20820:	b.n	207d6 <btrfs_fs_roots_compare_roots@@Base+0x280>
   20822:	ldr	r2, [pc, #60]	; (20860 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   20824:	movs	r1, #1
   20826:	ldr.w	r3, [r4, #192]	; 0xc0
   2082a:	ldr	r0, [r6, #0]
   2082c:	add	r2, pc
   2082e:	blx	9040 <__fprintf_chk@plt+0x4>
   20832:	b.n	20800 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   20834:	add	sp, #128	; 0x80
   20836:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2083a:	nop
   2083c:	add	r5, pc, #808	; (adr r5, 20b68 <read_whole_eb@@Base+0x88>)
   2083e:	movs	r4, r0
   20840:	lsls	r0, r1, #10
   20842:	movs	r0, r0
   20844:	add	r5, pc, #656	; (adr r5, 20ad8 <btrfs_find_create_tree_block@@Base+0xa>)
   20846:	movs	r4, r0
   20848:	lsls	r4, r3, #10
   2084a:	movs	r0, r0
   2084c:	adds	r7, r3, #3
   2084e:	movs	r2, r0
   20850:	adds	r1, r7, #2
   20852:	movs	r2, r0
   20854:	adds	r2, r6, #2
   20856:	movs	r2, r0
   20858:	add	r5, pc, #80	; (adr r5, 208ac <btrfs_fs_roots_compare_roots@@Base+0x356>)
   2085a:	movs	r4, r0
   2085c:	adds	r1, r7, #2
   2085e:	movs	r2, r0
   20860:	adds	r3, r7, #2
   20862:	movs	r2, r0
   20864:	push	{r0, r1, r2, r3, r4, lr}
   20866:	ldr	r3, [pc, #40]	; (20890 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   20868:	ldr	r4, [pc, #40]	; (20894 <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   2086a:	add	r3, pc
   2086c:	ldr	r4, [r3, r4]
   2086e:	movs	r3, #0
   20870:	strd	r2, r1, [sp]
   20874:	movs	r1, #1
   20876:	strd	r0, r3, [sp, #8]
   2087a:	ldr	r2, [pc, #28]	; (20898 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   2087c:	ldr	r3, [pc, #28]	; (2089c <btrfs_fs_roots_compare_roots@@Base+0x346>)
   2087e:	add	r2, pc
   20880:	ldr	r0, [r4, #0]
   20882:	add	r3, pc
   20884:	blx	9040 <__fprintf_chk@plt+0x4>
   20888:	bl	20598 <btrfs_fs_roots_compare_roots@@Base+0x42>
   2088c:	blx	91c0 <abort@plt>
   20890:	add	r4, pc, #696	; (adr r4, 20b4c <read_whole_eb@@Base+0x6c>)
   20892:	movs	r4, r0
   20894:	lsls	r4, r3, #10
   20896:	movs	r0, r0
   20898:	b.n	20534 <btrfs_uuid_tree_add@@Base+0x1c0>
   2089a:	movs	r1, r0
   2089c:	adds	r3, r7, #1
   2089e:	movs	r2, r0
   208a0:	push	{r0, r1, r2, r3, r4, lr}
   208a2:	ldr	r4, [pc, #40]	; (208cc <btrfs_fs_roots_compare_roots@@Base+0x376>)
   208a4:	ldr	r5, [pc, #40]	; (208d0 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   208a6:	add	r4, pc
   208a8:	ldr	r4, [r4, r5]
   208aa:	strd	r2, r1, [sp]
   208ae:	movs	r1, #1
   208b0:	strd	r0, r3, [sp, #8]
   208b4:	ldr	r2, [pc, #28]	; (208d4 <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   208b6:	ldr	r3, [pc, #32]	; (208d8 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   208b8:	add	r2, pc
   208ba:	ldr	r0, [r4, #0]
   208bc:	add	r3, pc
   208be:	blx	9040 <__fprintf_chk@plt+0x4>
   208c2:	bl	20598 <btrfs_fs_roots_compare_roots@@Base+0x42>
   208c6:	blx	91c0 <abort@plt>
   208ca:	nop
   208cc:	add	r4, pc, #456	; (adr r4, 20a98 <csum_tree_block@@Base+0xc>)
   208ce:	movs	r4, r0
   208d0:	lsls	r4, r3, #10
   208d2:	movs	r0, r0
   208d4:	bge.n	20824 <btrfs_fs_roots_compare_roots@@Base+0x2ce>
   208d6:	movs	r1, r0
   208d8:	adds	r1, r0, #1
   208da:	movs	r2, r0
   208dc:	push	{r3, lr}
   208de:	cbz	r3, 208e4 <btrfs_fs_roots_compare_roots@@Base+0x38e>
   208e0:	bl	208a0 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   208e4:	pop	{r3, pc}

000208e6 <btrfs_csum_data@@Base>:
   208e6:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   208ea:	mov	r4, r2
   208ec:	ldr.w	r8, [pc, #120]	; 20968 <btrfs_csum_data@@Base+0x82>
   208f0:	mov	r7, r0
   208f2:	mov	r5, r1
   208f4:	movs	r2, #32
   208f6:	movs	r1, #0
   208f8:	mov	r0, r4
   208fa:	add	r8, pc
   208fc:	mov	r6, r3
   208fe:	blx	8f98 <memset@plt+0x4>
   20902:	cmp	r7, #3
   20904:	bhi.n	20946 <btrfs_csum_data@@Base+0x60>
   20906:	tbb	[pc, r7]
   2090a:	lsrs	r2, r0, #4
   2090c:	asrs	r0, r2, #28
   2090e:	mov	r2, r4
   20910:	mov	r1, r6
   20912:	mov	r0, r5
   20914:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   20918:	b.w	3832c <hash_crc32c@@Base>
   2091c:	mov	r2, r4
   2091e:	mov	r1, r6
   20920:	mov	r0, r5
   20922:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   20926:	b.w	38344 <hash_xxhash@@Base>
   2092a:	mov	r2, r4
   2092c:	mov	r1, r6
   2092e:	mov	r0, r5
   20930:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   20934:	b.w	38394 <hash_sha256@@Base>
   20938:	mov	r2, r4
   2093a:	mov	r1, r6
   2093c:	mov	r0, r5
   2093e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   20942:	b.w	383f0 <hash_blake2b@@Base>
   20946:	ldr	r3, [pc, #36]	; (2096c <btrfs_csum_data@@Base+0x86>)
   20948:	movs	r1, #1
   2094a:	ldr	r2, [pc, #36]	; (20970 <btrfs_csum_data@@Base+0x8a>)
   2094c:	ldr.w	r0, [r8, r3]
   20950:	add	r2, pc
   20952:	mov	r3, r7
   20954:	ldr	r0, [r0, #0]
   20956:	blx	9040 <__fprintf_chk@plt+0x4>
   2095a:	ldr	r1, [pc, #24]	; (20974 <btrfs_csum_data@@Base+0x8e>)
   2095c:	ldr	r0, [pc, #24]	; (20978 <btrfs_csum_data@@Base+0x92>)
   2095e:	movs	r2, #157	; 0x9d
   20960:	add	r1, pc
   20962:	add	r0, pc
   20964:	bl	20864 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   20968:	add	r4, pc, #120	; (adr r4, 209e4 <csum_tree_block_size@@Base+0x68>)
   2096a:	movs	r4, r0
   2096c:	lsls	r4, r3, #10
   2096e:	movs	r0, r0
   20970:	subs	r7, r6, r6
   20972:	movs	r2, r0
   20974:	movs	r4, #126	; 0x7e
   20976:	movs	r2, r0
   20978:	asrs	r4, r2, #23
   2097a:	movs	r2, r0

0002097c <csum_tree_block_size@@Base>:
   2097c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20980:	mov	r4, r2
   20982:	ldr	r2, [pc, #144]	; (20a14 <csum_tree_block_size@@Base+0x98>)
   20984:	mov	r5, r0
   20986:	mov	r0, r3
   20988:	ldr	r3, [pc, #140]	; (20a18 <csum_tree_block_size@@Base+0x9c>)
   2098a:	add	r2, pc
   2098c:	sub	sp, #56	; 0x38
   2098e:	add	r7, sp, #20
   20990:	ldr.w	r8, [pc, #136]	; 20a1c <csum_tree_block_size@@Base+0xa0>
   20994:	ldr	r3, [r2, r3]
   20996:	mov	r6, r1
   20998:	add.w	r1, r5, #128	; 0x80
   2099c:	mov	r2, r7
   2099e:	ldr	r3, [r3, #0]
   209a0:	str	r3, [sp, #52]	; 0x34
   209a2:	mov.w	r3, #0
   209a6:	ldr	r3, [r5, #76]	; 0x4c
   209a8:	add	r8, pc
   209aa:	subs	r3, #32
   209ac:	bl	208e6 <btrfs_csum_data@@Base>
   209b0:	mov	r3, r6
   209b2:	cbz	r4, 209fe <csum_tree_block_size@@Base+0x82>
   209b4:	movs	r2, #0
   209b6:	mov	r1, r7
   209b8:	mov	r0, r5
   209ba:	bl	1bba8 <memcmp_extent_buffer@@Base>
   209be:	mov	r4, r0
   209c0:	cbz	r0, 209ea <csum_tree_block_size@@Base+0x6e>
   209c2:	ldrb.w	r2, [r5, #96]	; 0x60
   209c6:	movs	r4, #1
   209c8:	ldr	r3, [pc, #84]	; (20a20 <csum_tree_block_size@@Base+0xa4>)
   209ca:	ldrd	r0, r1, [r5, #40]	; 0x28
   209ce:	ldr.w	r3, [r8, r3]
   209d2:	str	r2, [sp, #12]
   209d4:	ldrb.w	r2, [sp, #20]
   209d8:	strd	r0, r1, [sp]
   209dc:	movs	r1, #1
   209de:	str	r2, [sp, #8]
   209e0:	ldr	r2, [pc, #64]	; (20a24 <csum_tree_block_size@@Base+0xa8>)
   209e2:	ldr	r0, [r3, #0]
   209e4:	add	r2, pc
   209e6:	blx	9040 <__fprintf_chk@plt+0x4>
   209ea:	ldr	r2, [pc, #60]	; (20a28 <csum_tree_block_size@@Base+0xac>)
   209ec:	ldr	r3, [pc, #40]	; (20a18 <csum_tree_block_size@@Base+0x9c>)
   209ee:	add	r2, pc
   209f0:	ldr	r3, [r2, r3]
   209f2:	ldr	r2, [r3, #0]
   209f4:	ldr	r3, [sp, #52]	; 0x34
   209f6:	eors	r2, r3
   209f8:	beq.n	20a0a <csum_tree_block_size@@Base+0x8e>
   209fa:	blx	8c90 <__stack_chk_fail@plt>
   209fe:	mov	r2, r4
   20a00:	mov	r1, r7
   20a02:	mov	r0, r5
   20a04:	bl	1bbd0 <write_extent_buffer@@Base>
   20a08:	b.n	209ea <csum_tree_block_size@@Base+0x6e>
   20a0a:	mov	r0, r4
   20a0c:	add	sp, #56	; 0x38
   20a0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20a12:	nop
   20a14:	add	r3, pc, #568	; (adr r3, 20c50 <read_extent_data@@Base+0x8>)
   20a16:	movs	r4, r0
   20a18:	lsls	r0, r1, #10
   20a1a:	movs	r0, r0
   20a1c:	add	r3, pc, #448	; (adr r3, 20be0 <read_whole_eb@@Base+0x100>)
   20a1e:	movs	r4, r0
   20a20:	lsls	r4, r3, #10
   20a22:	movs	r0, r0
   20a24:	subs	r1, r0, r5
   20a26:	movs	r2, r0
   20a28:	add	r3, pc, #168	; (adr r3, 20ad4 <btrfs_find_create_tree_block@@Base+0x6>)
   20a2a:	movs	r4, r0

00020a2c <verify_tree_block_csum_silent@@Base>:
   20a2c:	push	{r4, r5, r6, lr}
   20a2e:	mov	r4, r0
   20a30:	mov	r0, r2
   20a32:	ldr	r2, [pc, #76]	; (20a80 <verify_tree_block_csum_silent@@Base+0x54>)
   20a34:	ldr	r3, [pc, #76]	; (20a84 <verify_tree_block_csum_silent@@Base+0x58>)
   20a36:	sub	sp, #40	; 0x28
   20a38:	add	r2, pc
   20a3a:	add	r5, sp, #4
   20a3c:	mov	r6, r1
   20a3e:	add.w	r1, r4, #128	; 0x80
   20a42:	ldr	r3, [r2, r3]
   20a44:	mov	r2, r5
   20a46:	ldr	r3, [r3, #0]
   20a48:	str	r3, [sp, #36]	; 0x24
   20a4a:	mov.w	r3, #0
   20a4e:	ldr	r3, [r4, #76]	; 0x4c
   20a50:	subs	r3, #32
   20a52:	bl	208e6 <btrfs_csum_data@@Base>
   20a56:	mov	r3, r6
   20a58:	movs	r2, #0
   20a5a:	mov	r1, r5
   20a5c:	mov	r0, r4
   20a5e:	bl	1bba8 <memcmp_extent_buffer@@Base>
   20a62:	ldr	r2, [pc, #36]	; (20a88 <verify_tree_block_csum_silent@@Base+0x5c>)
   20a64:	ldr	r3, [pc, #28]	; (20a84 <verify_tree_block_csum_silent@@Base+0x58>)
   20a66:	add	r2, pc
   20a68:	ldr	r3, [r2, r3]
   20a6a:	subs	r0, #0
   20a6c:	it	ne
   20a6e:	movne	r0, #1
   20a70:	ldr	r2, [r3, #0]
   20a72:	ldr	r3, [sp, #36]	; 0x24
   20a74:	eors	r2, r3
   20a76:	beq.n	20a7c <verify_tree_block_csum_silent@@Base+0x50>
   20a78:	blx	8c90 <__stack_chk_fail@plt>
   20a7c:	add	sp, #40	; 0x28
   20a7e:	pop	{r4, r5, r6, pc}
   20a80:	add	r2, pc, #896	; (adr r2, 20e04 <write_and_map_eb@@Base+0xec>)
   20a82:	movs	r4, r0
   20a84:	lsls	r0, r1, #10
   20a86:	movs	r0, r0
   20a88:	add	r2, pc, #712	; (adr r2, 20d54 <write_and_map_eb@@Base+0x3c>)
   20a8a:	movs	r4, r0

00020a8c <csum_tree_block@@Base>:
   20a8c:	push	{r4, r5, r6, lr}
   20a8e:	mov	r4, r0
   20a90:	ldr.w	r0, [r0, #308]	; 0x134
   20a94:	mov	r5, r1
   20a96:	mov	r6, r2
   20a98:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   20a9c:	ldr.w	r3, [r4, #308]	; 0x134
   20aa0:	ldrh.w	r3, [r3, #196]	; 0xc4
   20aa4:	mov	r1, r0
   20aa6:	cbz	r6, 20abc <csum_tree_block@@Base+0x30>
   20aa8:	ldrb.w	r2, [r4, #364]	; 0x16c
   20aac:	lsls	r2, r2, #26
   20aae:	bpl.n	20abc <csum_tree_block@@Base+0x30>
   20ab0:	mov	r0, r5
   20ab2:	mov	r2, r3
   20ab4:	ldmia.w	sp!, {r4, r5, r6, lr}
   20ab8:	b.w	20a2c <verify_tree_block_csum_silent@@Base>
   20abc:	mov	r2, r6
   20abe:	mov	r0, r5
   20ac0:	ldmia.w	sp!, {r4, r5, r6, lr}
   20ac4:	b.w	2097c <csum_tree_block_size@@Base>

00020ac8 <btrfs_find_tree_block@@Base>:
   20ac8:	adds	r0, #64	; 0x40
   20aca:	b.w	1b538 <find_extent_buffer@@Base>

00020ace <btrfs_find_create_tree_block@@Base>:
   20ace:	push	{r0, r1, r2, lr}
   20ad0:	ldr.w	r1, [r0, #384]	; 0x180
   20ad4:	str	r1, [sp, #0]
   20ad6:	bl	1b5be <alloc_extent_buffer@@Base>
   20ada:	add	sp, #12
   20adc:	ldr.w	pc, [sp], #4

00020ae0 <read_whole_eb@@Base>:
   20ae0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ae4:	sub	sp, #60	; 0x3c
   20ae6:	ldr	r3, [pc, #328]	; (20c30 <read_whole_eb@@Base+0x150>)
   20ae8:	mov	r7, r0
   20aea:	str	r2, [sp, #16]
   20aec:	mov	r4, r1
   20aee:	ldr	r2, [pc, #324]	; (20c34 <read_whole_eb@@Base+0x154>)
   20af0:	movs	r6, #0
   20af2:	ldr	r5, [r1, #76]	; 0x4c
   20af4:	add	r2, pc
   20af6:	ldr.w	r9, [pc, #320]	; 20c38 <read_whole_eb@@Base+0x158>
   20afa:	ldr	r3, [r2, r3]
   20afc:	add	r9, pc
   20afe:	ldr	r3, [r3, #0]
   20b00:	str	r3, [sp, #52]	; 0x34
   20b02:	mov.w	r3, #0
   20b06:	add	r3, sp, #36	; 0x24
   20b08:	str	r6, [sp, #36]	; 0x24
   20b0a:	str	r3, [sp, #20]
   20b0c:	add	r3, sp, #40	; 0x28
   20b0e:	str	r3, [sp, #24]
   20b10:	cbnz	r5, 20b2a <read_whole_eb@@Base+0x4a>
   20b12:	mov	r0, r5
   20b14:	ldr	r2, [pc, #292]	; (20c3c <read_whole_eb@@Base+0x15c>)
   20b16:	ldr	r3, [pc, #280]	; (20c30 <read_whole_eb@@Base+0x150>)
   20b18:	add	r2, pc
   20b1a:	ldr	r3, [r2, r3]
   20b1c:	ldr	r2, [r3, #0]
   20b1e:	ldr	r3, [sp, #52]	; 0x34
   20b20:	eors	r2, r3
   20b22:	beq.w	20c28 <read_whole_eb@@Base+0x148>
   20b26:	blx	8c90 <__stack_chk_fail@plt>
   20b2a:	ldrb.w	r1, [r7, #364]	; 0x16c
   20b2e:	mov	sl, r5
   20b30:	mov.w	fp, #0
   20b34:	ldrd	r2, r3, [r4, #40]	; 0x28
   20b38:	ands.w	r1, r1, #4
   20b3c:	strd	sl, fp, [sp, #40]	; 0x28
   20b40:	bne.n	20bea <read_whole_eb@@Base+0x10a>
   20b42:	cmp	r3, #0
   20b44:	it	eq
   20b46:	cmpeq.w	r2, #65536	; 0x10000
   20b4a:	beq.n	20bea <read_whole_eb@@Base+0x10a>
   20b4c:	ldr	r0, [sp, #16]
   20b4e:	adds	r2, r2, r6
   20b50:	str	r1, [sp, #12]
   20b52:	adc.w	r3, r3, #0
   20b56:	str	r0, [sp, #8]
   20b58:	ldr	r0, [sp, #20]
   20b5a:	str	r0, [sp, #4]
   20b5c:	ldr	r0, [sp, #24]
   20b5e:	str	r0, [sp, #0]
   20b60:	mov	r0, r7
   20b62:	bl	2e6c8 <btrfs_map_block@@Base>
   20b66:	mov	r1, r0
   20b68:	cbz	r0, 20b98 <read_whole_eb@@Base+0xb8>
   20b6a:	ldr	r3, [pc, #212]	; (20c40 <read_whole_eb@@Base+0x160>)
   20b6c:	movs	r2, #0
   20b6e:	ldr.w	r0, [r9, r3]
   20b72:	ldrd	r3, r1, [r4, #40]	; 0x28
   20b76:	adds	r3, r6, r3
   20b78:	adc.w	r2, r1, r2
   20b7c:	strd	r3, r2, [sp]
   20b80:	ldr	r2, [pc, #192]	; (20c44 <read_whole_eb@@Base+0x164>)
   20b82:	movs	r1, #1
   20b84:	ldr	r0, [r0, #0]
   20b86:	add	r2, pc
   20b88:	blx	9040 <__fprintf_chk@plt+0x4>
   20b8c:	ldr	r0, [sp, #36]	; 0x24
   20b8e:	blx	8b84 <free@plt+0x4>
   20b92:	mvn.w	r0, #4
   20b96:	b.n	20b14 <read_whole_eb@@Base+0x34>
   20b98:	ldr	r0, [sp, #36]	; 0x24
   20b9a:	ldr.w	ip, [r0, #8]
   20b9e:	ldr.w	r3, [ip, #24]
   20ba2:	cmp	r3, #0
   20ba4:	ble.n	20b8e <read_whole_eb@@Base+0xae>
   20ba6:	str	r3, [r4, #88]	; 0x58
   20ba8:	ldrd	r3, r2, [ip, #16]
   20bac:	str	r1, [sp, #28]
   20bae:	adds	r3, #1
   20bb0:	adc.w	r2, r2, #0
   20bb4:	strd	r3, r2, [ip, #16]
   20bb8:	ldrd	r2, r3, [r0, #16]
   20bbc:	strd	r2, r3, [r4, #48]	; 0x30
   20bc0:	blx	8b84 <free@plt+0x4>
   20bc4:	ldrd	r2, r3, [sp, #40]	; 0x28
   20bc8:	ldr	r1, [sp, #28]
   20bca:	cmp	fp, r3
   20bcc:	it	eq
   20bce:	cmpeq	r5, r2
   20bd0:	str	r1, [sp, #36]	; 0x24
   20bd2:	bcc.n	20c22 <read_whole_eb@@Base+0x142>
   20bd4:	ldr	r2, [sp, #40]	; 0x28
   20bd6:	mov	r1, r6
   20bd8:	mov	r0, r4
   20bda:	bl	1b6ea <read_extent_from_disk@@Base>
   20bde:	cmp	r0, #0
   20be0:	bne.n	20b92 <read_whole_eb@@Base+0xb2>
   20be2:	ldr	r3, [sp, #40]	; 0x28
   20be4:	add	r6, r3
   20be6:	subs	r5, r5, r3
   20be8:	b.n	20b10 <read_whole_eb@@Base+0x30>
   20bea:	ldr.w	r0, [r7, #352]	; 0x160
   20bee:	ldr.w	r1, [r0, #72]!
   20bf2:	cmp	r1, r0
   20bf4:	bne.n	20c0e <read_whole_eb@@Base+0x12e>
   20bf6:	ldr	r0, [r1, #24]
   20bf8:	strd	r2, r3, [r4, #48]	; 0x30
   20bfc:	str	r0, [r4, #88]	; 0x58
   20bfe:	ldrd	r3, r2, [r1, #16]
   20c02:	adds	r3, #1
   20c04:	adc.w	r2, r2, #0
   20c08:	strd	r3, r2, [r1, #16]
   20c0c:	b.n	20bd4 <read_whole_eb@@Base+0xf4>
   20c0e:	ldrd	sl, fp, [r1, #64]	; 0x40
   20c12:	cmp.w	fp, #0
   20c16:	it	eq
   20c18:	cmpeq.w	sl, #1
   20c1c:	beq.n	20bf6 <read_whole_eb@@Base+0x116>
   20c1e:	ldr	r1, [r1, #0]
   20c20:	b.n	20bf2 <read_whole_eb@@Base+0x112>
   20c22:	strd	sl, fp, [sp, #40]	; 0x28
   20c26:	b.n	20bd4 <read_whole_eb@@Base+0xf4>
   20c28:	add	sp, #60	; 0x3c
   20c2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c2e:	nop
   20c30:	lsls	r0, r1, #10
   20c32:	movs	r0, r0
   20c34:	add	r2, pc, #144	; (adr r2, 20cc8 <read_extent_data@@Base+0x80>)
   20c36:	movs	r4, r0
   20c38:	add	r2, pc, #112	; (adr r2, 20cac <read_extent_data@@Base+0x64>)
   20c3a:	movs	r4, r0
   20c3c:	add	r2, pc, #0	; (adr r2, 20c40 <read_whole_eb@@Base+0x160>)
   20c3e:	movs	r4, r0
   20c40:	lsls	r4, r3, #10
   20c42:	movs	r0, r0
   20c44:	lsrs	r6, r4, #4
   20c46:	movs	r2, r0

00020c48 <read_extent_data@@Base>:
   20c48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c4c:	mov	r6, r1
   20c4e:	ldr	r5, [pc, #176]	; (20d00 <read_extent_data@@Base+0xb8>)
   20c50:	sub	sp, #28
   20c52:	ldr	r1, [pc, #176]	; (20d04 <read_extent_data@@Base+0xbc>)
   20c54:	mov	sl, r2
   20c56:	add	r5, pc
   20c58:	ldr	r4, [sp, #64]	; 0x40
   20c5a:	mov	r7, r3
   20c5c:	ldr.w	fp, [pc, #168]	; 20d08 <read_extent_data@@Base+0xc0>
   20c60:	ldr	r1, [r5, r1]
   20c62:	ldr	r5, [sp, #68]	; 0x44
   20c64:	add	fp, pc
   20c66:	ldr	r1, [r1, #0]
   20c68:	str	r1, [sp, #20]
   20c6a:	mov.w	r1, #0
   20c6e:	ldrd	r8, r9, [r4]
   20c72:	movs	r1, #0
   20c74:	str	r1, [sp, #12]
   20c76:	str	r5, [sp, #8]
   20c78:	add	r5, sp, #16
   20c7a:	strd	r4, r5, [sp]
   20c7e:	str	r1, [sp, #16]
   20c80:	bl	2e6c8 <btrfs_map_block@@Base>
   20c84:	mov	r5, r0
   20c86:	cbz	r0, 20cb8 <read_extent_data@@Base+0x70>
   20c88:	ldr	r3, [pc, #128]	; (20d0c <read_extent_data@@Base+0xc4>)
   20c8a:	movs	r1, #1
   20c8c:	ldr	r2, [pc, #128]	; (20d10 <read_extent_data@@Base+0xc8>)
   20c8e:	ldr.w	r3, [fp, r3]
   20c92:	add	r2, pc
   20c94:	strd	sl, r7, [sp]
   20c98:	ldr	r0, [r3, #0]
   20c9a:	blx	9040 <__fprintf_chk@plt+0x4>
   20c9e:	ldr	r0, [sp, #16]
   20ca0:	blx	8b84 <free@plt+0x4>
   20ca4:	ldr	r2, [pc, #108]	; (20d14 <read_extent_data@@Base+0xcc>)
   20ca6:	ldr	r3, [pc, #92]	; (20d04 <read_extent_data@@Base+0xbc>)
   20ca8:	add	r2, pc
   20caa:	ldr	r3, [r2, r3]
   20cac:	ldr	r2, [r3, #0]
   20cae:	ldr	r3, [sp, #20]
   20cb0:	eors	r2, r3
   20cb2:	beq.n	20cf8 <read_extent_data@@Base+0xb0>
   20cb4:	blx	8c90 <__stack_chk_fail@plt>
   20cb8:	ldr	r1, [sp, #16]
   20cba:	ldrd	r2, r3, [r4]
   20cbe:	ldr	r0, [r1, #8]
   20cc0:	cmp	r9, r3
   20cc2:	it	eq
   20cc4:	cmpeq	r8, r2
   20cc6:	it	cc
   20cc8:	strdcc	r8, r9, [r4]
   20ccc:	ldr	r0, [r0, #24]
   20cce:	cmp	r0, #0
   20cd0:	bge.n	20cd8 <read_extent_data@@Base+0x90>
   20cd2:	mvn.w	r5, #4
   20cd6:	b.n	20c9e <read_extent_data@@Base+0x56>
   20cd8:	ldrd	r2, r3, [r1, #16]
   20cdc:	mov	r1, r6
   20cde:	strd	r2, r3, [sp]
   20ce2:	ldr	r2, [r4, #0]
   20ce4:	blx	8dcc <pread64@plt>
   20ce8:	ldrd	r2, r3, [r4]
   20cec:	asrs	r1, r0, #31
   20cee:	cmp	r1, r3
   20cf0:	it	eq
   20cf2:	cmpeq	r0, r2
   20cf4:	beq.n	20c9e <read_extent_data@@Base+0x56>
   20cf6:	b.n	20cd2 <read_extent_data@@Base+0x8a>
   20cf8:	mov	r0, r5
   20cfa:	add	sp, #28
   20cfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d00:	add	r0, pc, #776	; (adr r0, 2100c <btrfs_new_fs_info@@Base+0x10e>)
   20d02:	movs	r4, r0
   20d04:	lsls	r0, r1, #10
   20d06:	movs	r0, r0
   20d08:	add	r0, pc, #720	; (adr r0, 20fdc <btrfs_new_fs_info@@Base+0xde>)
   20d0a:	movs	r4, r0
   20d0c:	lsls	r4, r3, #10
   20d0e:	movs	r0, r0
   20d10:	adds	r2, r1, r3
   20d12:	movs	r2, r0
   20d14:	add	r0, pc, #448	; (adr r0, 20ed8 <btrfs_free_fs_info@@Base+0x28>)
   20d16:	movs	r4, r0

00020d18 <write_and_map_eb@@Base>:
   20d18:	ldr	r2, [pc, #248]	; (20e14 <write_and_map_eb@@Base+0xfc>)
   20d1a:	ldr	r3, [pc, #252]	; (20e18 <write_and_map_eb@@Base+0x100>)
   20d1c:	add	r2, pc
   20d1e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   20d22:	sub	sp, #48	; 0x30
   20d24:	ldr	r3, [r2, r3]
   20d26:	mov	r5, r1
   20d28:	ldr	r2, [r1, #76]	; 0x4c
   20d2a:	mov	r6, r0
   20d2c:	ldr	r3, [r3, #0]
   20d2e:	str	r3, [sp, #44]	; 0x2c
   20d30:	mov.w	r3, #0
   20d34:	movs	r3, #0
   20d36:	strd	r3, r3, [sp, #24]
   20d3a:	strd	r2, r3, [sp, #32]
   20d3e:	add	r2, sp, #24
   20d40:	strd	r3, r2, [sp, #8]
   20d44:	add	r3, sp, #28
   20d46:	str	r3, [sp, #4]
   20d48:	add	r3, sp, #32
   20d4a:	str	r3, [sp, #0]
   20d4c:	ldrd	r2, r3, [r1, #40]	; 0x28
   20d50:	movs	r1, #1
   20d52:	bl	2e6c8 <btrfs_map_block@@Base>
   20d56:	ldr	r4, [sp, #24]
   20d58:	mov	r3, r0
   20d5a:	cmp	r4, #0
   20d5c:	beq.n	20e00 <write_and_map_eb@@Base+0xe8>
   20d5e:	ldrd	r2, r3, [sp, #32]
   20d62:	mov	r1, r5
   20d64:	mov	r0, r6
   20d66:	str	r4, [sp, #8]
   20d68:	strd	r2, r3, [sp]
   20d6c:	ldr	r2, [sp, #28]
   20d6e:	bl	2f030 <write_raid56_with_parity@@Base>
   20d72:	ldr	r1, [pc, #168]	; (20e1c <write_and_map_eb@@Base+0x104>)
   20d74:	mov.w	r2, #494	; 0x1ee
   20d78:	add	r1, pc
   20d7a:	adds	r1, #16
   20d7c:	mov	r3, r0
   20d7e:	ldr	r0, [pc, #160]	; (20e20 <write_and_map_eb@@Base+0x108>)
   20d80:	add	r0, pc
   20d82:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   20d86:	ldr	r0, [sp, #24]
   20d88:	blx	8b84 <free@plt+0x4>
   20d8c:	ldr	r0, [sp, #28]
   20d8e:	blx	8b84 <free@plt+0x4>
   20d92:	ldr	r2, [pc, #144]	; (20e24 <write_and_map_eb@@Base+0x10c>)
   20d94:	ldr	r3, [pc, #128]	; (20e18 <write_and_map_eb@@Base+0x100>)
   20d96:	add	r2, pc
   20d98:	ldr	r3, [r2, r3]
   20d9a:	ldr	r2, [r3, #0]
   20d9c:	ldr	r3, [sp, #44]	; 0x2c
   20d9e:	eors	r2, r3
   20da0:	beq.n	20e0c <write_and_map_eb@@Base+0xf4>
   20da2:	blx	8c90 <__stack_chk_fail@plt>
   20da6:	mov.w	r2, #496	; 0x1f0
   20daa:	mov	r1, r7
   20dac:	mov	r0, r6
   20dae:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   20db2:	add.w	r1, r8, r4, lsl #4
   20db6:	adds	r4, #1
   20db8:	mov	r0, r5
   20dba:	ldr	r3, [r1, #8]
   20dbc:	add.w	r8, r8, r4, lsl #4
   20dc0:	ldr	r3, [r3, #24]
   20dc2:	str	r3, [r5, #88]	; 0x58
   20dc4:	ldrd	r2, r3, [r8]
   20dc8:	strd	r2, r3, [r5, #48]	; 0x30
   20dcc:	ldr	r2, [r1, #8]
   20dce:	ldrd	r3, r1, [r2, #16]
   20dd2:	adds	r3, #1
   20dd4:	adc.w	r1, r1, #0
   20dd8:	strd	r3, r1, [r2, #16]
   20ddc:	bl	1b71e <write_extent_to_disk@@Base>
   20de0:	mov.w	r2, #502	; 0x1f6
   20de4:	mov	r1, r7
   20de6:	mov	r3, r0
   20de8:	str	r0, [sp, #20]
   20dea:	mov	r0, r6
   20dec:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   20df0:	ldr	r3, [sp, #20]
   20df2:	ldr.w	r8, [sp, #28]
   20df6:	ldr.w	r2, [r8, #4]
   20dfa:	cmp	r2, r4
   20dfc:	bgt.n	20da6 <write_and_map_eb@@Base+0x8e>
   20dfe:	b.n	20d86 <write_and_map_eb@@Base+0x6e>
   20e00:	ldr	r7, [pc, #36]	; (20e28 <write_and_map_eb@@Base+0x110>)
   20e02:	ldr	r6, [pc, #40]	; (20e2c <write_and_map_eb@@Base+0x114>)
   20e04:	add	r7, pc
   20e06:	adds	r7, #16
   20e08:	add	r6, pc
   20e0a:	b.n	20df2 <write_and_map_eb@@Base+0xda>
   20e0c:	movs	r0, #0
   20e0e:	add	sp, #48	; 0x30
   20e10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20e14:	ldr	r7, [sp, #1008]	; 0x3f0
   20e16:	movs	r4, r0
   20e18:	lsls	r0, r1, #10
   20e1a:	movs	r0, r0
   20e1c:	movs	r0, #102	; 0x66
   20e1e:	movs	r2, r0
   20e20:	stcl	0, cr0, [r2, #4]
   20e24:	ldr	r7, [sp, #520]	; 0x208
   20e26:	movs	r4, r0
   20e28:	subs	r2, r3, #7
   20e2a:	movs	r2, r0
   20e2c:	ldc	0, cr0, [sl, #-4]!

00020e30 <btrfs_setup_root@@Base>:
   20e30:	push	{r4, r5, r6, lr}
   20e32:	mov	r4, r0
   20e34:	movs	r0, #0
   20e36:	strd	r2, r3, [r4, #472]	; 0x1d8
   20e3a:	mov	r6, r2
   20e3c:	mov	r5, r3
   20e3e:	movs	r2, #0
   20e40:	movs	r3, #0
   20e42:	strd	r0, r0, [r4]
   20e46:	strd	r2, r3, [r4, #480]	; 0x1e0
   20e4a:	strd	r2, r3, [r4, #504]	; 0x1f8
   20e4e:	add.w	r3, r4, #520	; 0x208
   20e52:	strd	r0, r0, [r4, #488]	; 0x1e8
   20e56:	movw	r2, #439	; 0x1b7
   20e5a:	str.w	r1, [r4, #464]	; 0x1d0
   20e5e:	mov	r1, r0
   20e60:	strd	r3, r3, [r4, #520]	; 0x208
   20e64:	add.w	r3, r4, #512	; 0x200
   20e68:	str.w	r0, [r4, #455]	; 0x1c7
   20e6c:	str.w	r0, [r4, #459]	; 0x1cb
   20e70:	strb.w	r0, [r4, #463]	; 0x1cf
   20e74:	add.w	r0, r4, #8
   20e78:	strd	r3, r3, [r4, #512]	; 0x200
   20e7c:	blx	8f98 <memset@plt+0x4>
   20e80:	str.w	r6, [r4, #447]	; 0x1bf
   20e84:	str.w	r5, [r4, #451]	; 0x1c3
   20e88:	pop	{r4, r5, r6, pc}

00020e8a <btrfs_free_fs_root@@Base>:
   20e8a:	push	{r4, lr}
   20e8c:	mov	r4, r0
   20e8e:	ldr	r0, [r0, #0]
   20e90:	cbz	r0, 20e96 <btrfs_free_fs_root@@Base+0xc>
   20e92:	bl	1b4c0 <free_extent_buffer@@Base>
   20e96:	ldr	r0, [r4, #4]
   20e98:	cbz	r0, 20e9e <btrfs_free_fs_root@@Base+0x14>
   20e9a:	bl	1b4c0 <free_extent_buffer@@Base>
   20e9e:	mov	r0, r4
   20ea0:	blx	8b84 <free@plt+0x4>
   20ea4:	movs	r0, #0
   20ea6:	pop	{r4, pc}
   20ea8:	sub.w	r0, r0, #528	; 0x210
   20eac:	b.w	20e8a <btrfs_free_fs_root@@Base>

00020eb0 <btrfs_free_fs_info@@Base>:
   20eb0:	push	{r4, lr}
   20eb2:	mov	r4, r0
   20eb4:	ldr	r0, [r0, #44]	; 0x2c
   20eb6:	cbz	r0, 20ebc <btrfs_free_fs_info@@Base+0xc>
   20eb8:	blx	8b84 <free@plt+0x4>
   20ebc:	ldr	r0, [r4, #28]
   20ebe:	blx	8b84 <free@plt+0x4>
   20ec2:	ldr	r0, [r4, #24]
   20ec4:	blx	8b84 <free@plt+0x4>
   20ec8:	ldr	r0, [r4, #32]
   20eca:	blx	8b84 <free@plt+0x4>
   20ece:	ldr	r0, [r4, #36]	; 0x24
   20ed0:	blx	8b84 <free@plt+0x4>
   20ed4:	ldr	r0, [r4, #40]	; 0x28
   20ed6:	blx	8b84 <free@plt+0x4>
   20eda:	ldr	r0, [r4, #48]	; 0x30
   20edc:	blx	8b84 <free@plt+0x4>
   20ee0:	ldr	r0, [r4, #52]	; 0x34
   20ee2:	blx	8b84 <free@plt+0x4>
   20ee6:	ldr.w	r0, [r4, #308]	; 0x134
   20eea:	blx	8b84 <free@plt+0x4>
   20eee:	ldr	r0, [r4, #60]	; 0x3c
   20ef0:	blx	8b84 <free@plt+0x4>
   20ef4:	mov	r0, r4
   20ef6:	ldmia.w	sp!, {r4, lr}
   20efa:	b.w	8b80 <free@plt>

00020efe <btrfs_new_fs_info@@Base>:
   20efe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f02:	sub	sp, #20
   20f04:	mov	fp, r0
   20f06:	mov.w	r1, #400	; 0x190
   20f0a:	movs	r0, #1
   20f0c:	strd	r2, r3, [sp]
   20f10:	blx	8ab8 <calloc@plt+0x4>
   20f14:	mov	r4, r0
   20f16:	cmp	r0, #0
   20f18:	beq.n	20fc2 <btrfs_new_fs_info@@Base+0xc4>
   20f1a:	mov.w	r1, #544	; 0x220
   20f1e:	movs	r0, #1
   20f20:	blx	8ab8 <calloc@plt+0x4>
   20f24:	mov.w	r1, #544	; 0x220
   20f28:	str	r0, [r4, #28]
   20f2a:	str	r0, [sp, #12]
   20f2c:	movs	r0, #1
   20f2e:	blx	8ab8 <calloc@plt+0x4>
   20f32:	mov.w	r1, #544	; 0x220
   20f36:	str	r0, [r4, #24]
   20f38:	str	r0, [sp, #8]
   20f3a:	movs	r0, #1
   20f3c:	blx	8ab8 <calloc@plt+0x4>
   20f40:	mov.w	r1, #544	; 0x220
   20f44:	str	r0, [r4, #32]
   20f46:	mov	sl, r0
   20f48:	movs	r0, #1
   20f4a:	blx	8ab8 <calloc@plt+0x4>
   20f4e:	mov.w	r1, #544	; 0x220
   20f52:	str	r0, [r4, #36]	; 0x24
   20f54:	mov	r9, r0
   20f56:	movs	r0, #1
   20f58:	blx	8ab8 <calloc@plt+0x4>
   20f5c:	mov.w	r1, #544	; 0x220
   20f60:	str	r0, [r4, #40]	; 0x28
   20f62:	mov	r8, r0
   20f64:	movs	r0, #1
   20f66:	blx	8ab8 <calloc@plt+0x4>
   20f6a:	mov.w	r1, #544	; 0x220
   20f6e:	str	r0, [r4, #44]	; 0x2c
   20f70:	mov	r7, r0
   20f72:	movs	r0, #1
   20f74:	blx	8ab8 <calloc@plt+0x4>
   20f78:	mov.w	r1, #544	; 0x220
   20f7c:	str	r0, [r4, #48]	; 0x30
   20f7e:	mov	r6, r0
   20f80:	movs	r0, #1
   20f82:	blx	8ab8 <calloc@plt+0x4>
   20f86:	mov.w	r1, #4096	; 0x1000
   20f8a:	str	r0, [r4, #52]	; 0x34
   20f8c:	mov	r5, r0
   20f8e:	movs	r0, #1
   20f90:	blx	8ab8 <calloc@plt+0x4>
   20f94:	ldr	r2, [sp, #12]
   20f96:	str.w	r0, [r4, #308]	; 0x134
   20f9a:	cbz	r2, 20fba <btrfs_new_fs_info@@Base+0xbc>
   20f9c:	ldr	r3, [sp, #8]
   20f9e:	cbz	r3, 20fba <btrfs_new_fs_info@@Base+0xbc>
   20fa0:	cmp.w	sl, #0
   20fa4:	beq.n	20fba <btrfs_new_fs_info@@Base+0xbc>
   20fa6:	cmp.w	r9, #0
   20faa:	beq.n	20fba <btrfs_new_fs_info@@Base+0xbc>
   20fac:	cmp.w	r8, #0
   20fb0:	beq.n	20fba <btrfs_new_fs_info@@Base+0xbc>
   20fb2:	cbz	r7, 20fba <btrfs_new_fs_info@@Base+0xbc>
   20fb4:	cbz	r6, 20fba <btrfs_new_fs_info@@Base+0xbc>
   20fb6:	cbz	r5, 20fba <btrfs_new_fs_info@@Base+0xbc>
   20fb8:	cbnz	r0, 20fca <btrfs_new_fs_info@@Base+0xcc>
   20fba:	mov	r0, r4
   20fbc:	movs	r4, #0
   20fbe:	bl	20eb0 <btrfs_free_fs_info@@Base>
   20fc2:	mov	r0, r4
   20fc4:	add	sp, #20
   20fc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20fca:	add.w	r0, r4, #64	; 0x40
   20fce:	bl	1af14 <extent_io_tree_init@@Base>
   20fd2:	add.w	r0, r4, #96	; 0x60
   20fd6:	bl	1af14 <extent_io_tree_init@@Base>
   20fda:	add.w	r0, r4, #128	; 0x80
   20fde:	bl	1af14 <extent_io_tree_init@@Base>
   20fe2:	add.w	r0, r4, #160	; 0xa0
   20fe6:	bl	1af14 <extent_io_tree_init@@Base>
   20fea:	add.w	r0, r4, #192	; 0xc0
   20fee:	bl	1af14 <extent_io_tree_init@@Base>
   20ff2:	movs	r3, #0
   20ff4:	add.w	r0, r4, #228	; 0xe4
   20ff8:	str.w	r3, [r4, #224]	; 0xe0
   20ffc:	str	r3, [r4, #56]	; 0x38
   20ffe:	bl	1a734 <cache_tree_init@@Base>
   21002:	movs	r3, #1
   21004:	str.w	r3, [r4, #312]	; 0x138
   21008:	add.w	r3, r4, #336	; 0x150
   2100c:	strd	r3, r3, [r4, #336]	; 0x150
   21010:	add.w	r3, r4, #356	; 0x164
   21014:	strd	r3, r3, [r4, #356]	; 0x164
   21018:	add.w	r3, r4, #344	; 0x158
   2101c:	strd	r3, r3, [r4, #344]	; 0x158
   21020:	cmp.w	fp, #0
   21024:	bne.n	21032 <btrfs_new_fs_info@@Base+0x134>
   21026:	ldrb.w	r3, [r4, #364]	; 0x16c
   2102a:	orr.w	r3, r3, #2
   2102e:	strb.w	r3, [r4, #364]	; 0x16c
   21032:	ldr	r3, [sp, #0]
   21034:	mov.w	r2, #4294967295	; 0xffffffff
   21038:	str.w	r3, [r4, #320]	; 0x140
   2103c:	ldr	r3, [sp, #4]
   2103e:	str.w	r3, [r4, #324]	; 0x144
   21042:	mov.w	r3, #4294967295	; 0xffffffff
   21046:	strd	r2, r3, [r4, #272]	; 0x110
   2104a:	strd	r2, r3, [r4, #280]	; 0x118
   2104e:	strd	r2, r3, [r4, #288]	; 0x120
   21052:	b.n	20fc2 <btrfs_new_fs_info@@Base+0xc4>

00021054 <btrfs_check_fs_compatibility@@Base>:
   21054:	push	{r0, r1, r4, r5, r6, lr}
   21056:	ldr.w	r4, [r0, #188]	; 0xbc
   2105a:	ldr.w	r5, [r0, #192]	; 0xc0
   2105e:	bic.w	r2, r4, #4080	; 0xff0
   21062:	ldr	r6, [pc, #128]	; (210e4 <btrfs_check_fs_compatibility@@Base+0x90>)
   21064:	bic.w	r2, r2, #15
   21068:	mov	r3, r5
   2106a:	orrs.w	ip, r2, r3
   2106e:	add	r6, pc
   21070:	beq.n	2108c <btrfs_check_fs_compatibility@@Base+0x38>
   21072:	ldr	r1, [pc, #116]	; (210e8 <btrfs_check_fs_compatibility@@Base+0x94>)
   21074:	ldr	r0, [r6, r1]
   21076:	strd	r2, r3, [sp]
   2107a:	ldr	r2, [pc, #112]	; (210ec <btrfs_check_fs_compatibility@@Base+0x98>)
   2107c:	add	r2, pc
   2107e:	ldr	r0, [r0, #0]
   21080:	movs	r1, #1
   21082:	blx	9040 <__fprintf_chk@plt+0x4>
   21086:	mvn.w	r0, #94	; 0x5e
   2108a:	b.n	210a8 <btrfs_check_fs_compatibility@@Base+0x54>
   2108c:	and.w	r2, r4, #1
   21090:	movs	r3, #0
   21092:	orrs	r3, r2
   21094:	ittt	eq
   21096:	streq.w	r5, [r0, #192]	; 0xc0
   2109a:	orreq.w	r4, r4, #1
   2109e:	streq.w	r4, [r0, #188]	; 0xbc
   210a2:	lsls	r4, r1, #31
   210a4:	bmi.n	210ac <btrfs_check_fs_compatibility@@Base+0x58>
   210a6:	movs	r0, #0
   210a8:	add	sp, #8
   210aa:	pop	{r4, r5, r6, pc}
   210ac:	ldr.w	r3, [r0, #180]	; 0xb4
   210b0:	lsls	r1, r1, #18
   210b2:	ldr.w	r2, [r0, #184]	; 0xb8
   210b6:	bic.w	r4, r3, #3
   210ba:	itt	mi
   210bc:	bicmi.w	r3, r3, #2
   210c0:	strmi.w	r3, [r0, #180]	; 0xb4
   210c4:	mov	r5, r2
   210c6:	itt	mi
   210c8:	movmi	r3, r4
   210ca:	strmi.w	r2, [r0, #184]	; 0xb8
   210ce:	orrs.w	r1, r4, r5
   210d2:	beq.n	210a6 <btrfs_check_fs_compatibility@@Base+0x52>
   210d4:	ldr	r1, [pc, #16]	; (210e8 <btrfs_check_fs_compatibility@@Base+0x94>)
   210d6:	ldr	r0, [r6, r1]
   210d8:	strd	r3, r2, [sp]
   210dc:	ldr	r2, [pc, #16]	; (210f0 <btrfs_check_fs_compatibility@@Base+0x9c>)
   210de:	add	r2, pc
   210e0:	b.n	2107e <btrfs_check_fs_compatibility@@Base+0x2a>
   210e2:	nop
   210e4:	ldr	r4, [sp, #680]	; 0x2a8
   210e6:	movs	r4, r0
   210e8:	lsls	r4, r3, #10
   210ea:	movs	r0, r0
   210ec:	asrs	r5, r7, #19
   210ee:	movs	r2, r0
   210f0:	asrs	r1, r3, #19
   210f2:	movs	r2, r0

000210f4 <btrfs_release_all_roots@@Base>:
   210f4:	push	{r4, lr}
   210f6:	mov	r4, r0
   210f8:	ldr	r3, [r0, #48]	; 0x30
   210fa:	cbz	r3, 21102 <btrfs_release_all_roots@@Base+0xe>
   210fc:	ldr	r0, [r3, #0]
   210fe:	bl	1b4c0 <free_extent_buffer@@Base>
   21102:	ldr	r3, [r4, #44]	; 0x2c
   21104:	cbz	r3, 2110c <btrfs_release_all_roots@@Base+0x18>
   21106:	ldr	r0, [r3, #0]
   21108:	bl	1b4c0 <free_extent_buffer@@Base>
   2110c:	ldr	r3, [r4, #40]	; 0x28
   2110e:	cbz	r3, 21116 <btrfs_release_all_roots@@Base+0x22>
   21110:	ldr	r0, [r3, #0]
   21112:	bl	1b4c0 <free_extent_buffer@@Base>
   21116:	ldr	r3, [r4, #36]	; 0x24
   21118:	cbz	r3, 21120 <btrfs_release_all_roots@@Base+0x2c>
   2111a:	ldr	r0, [r3, #0]
   2111c:	bl	1b4c0 <free_extent_buffer@@Base>
   21120:	ldr	r3, [r4, #24]
   21122:	cbz	r3, 2112a <btrfs_release_all_roots@@Base+0x36>
   21124:	ldr	r0, [r3, #0]
   21126:	bl	1b4c0 <free_extent_buffer@@Base>
   2112a:	ldr	r3, [r4, #28]
   2112c:	cbz	r3, 21134 <btrfs_release_all_roots@@Base+0x40>
   2112e:	ldr	r0, [r3, #0]
   21130:	bl	1b4c0 <free_extent_buffer@@Base>
   21134:	ldr	r3, [r4, #60]	; 0x3c
   21136:	cbz	r3, 2113e <btrfs_release_all_roots@@Base+0x4a>
   21138:	ldr	r0, [r3, #0]
   2113a:	bl	1b4c0 <free_extent_buffer@@Base>
   2113e:	ldr	r3, [r4, #32]
   21140:	cbz	r3, 21148 <btrfs_release_all_roots@@Base+0x54>
   21142:	ldr	r0, [r3, #0]
   21144:	bl	1b4c0 <free_extent_buffer@@Base>
   21148:	ldr	r3, [r4, #52]	; 0x34
   2114a:	cbz	r3, 21156 <btrfs_release_all_roots@@Base+0x62>
   2114c:	ldmia.w	sp!, {r4, lr}
   21150:	ldr	r0, [r3, #0]
   21152:	b.w	1b4c0 <free_extent_buffer@@Base>
   21156:	pop	{r4, pc}

00021158 <btrfs_cleanup_all_caches@@Base>:
   21158:	push	{r3, r4, r5, lr}
   2115a:	add.w	r5, r0, #344	; 0x158
   2115e:	mov	r4, r0
   21160:	ldr.w	r0, [r4, #344]	; 0x158
   21164:	cmp	r0, r5
   21166:	bne.n	211a0 <btrfs_cleanup_all_caches@@Base+0x48>
   21168:	ldr	r1, [pc, #72]	; (211b4 <btrfs_cleanup_all_caches@@Base+0x5c>)
   2116a:	add.w	r0, r4, #228	; 0xe4
   2116e:	add	r1, pc
   21170:	bl	1a95e <cache_tree_free_extents@@Base>
   21174:	add.w	r0, r4, #64	; 0x40
   21178:	bl	1b4c8 <extent_io_tree_cleanup@@Base>
   2117c:	add.w	r0, r4, #96	; 0x60
   21180:	bl	1b4c8 <extent_io_tree_cleanup@@Base>
   21184:	add.w	r0, r4, #128	; 0x80
   21188:	bl	1b4c8 <extent_io_tree_cleanup@@Base>
   2118c:	add.w	r0, r4, #160	; 0xa0
   21190:	bl	1b4c8 <extent_io_tree_cleanup@@Base>
   21194:	add.w	r0, r4, #192	; 0xc0
   21198:	ldmia.w	sp!, {r3, r4, r5, lr}
   2119c:	b.w	1b4c8 <extent_io_tree_cleanup@@Base>
   211a0:	ldrd	r2, r3, [r0]
   211a4:	str	r3, [r2, #4]
   211a6:	str	r2, [r3, #0]
   211a8:	strd	r0, r0, [r0]
   211ac:	subs	r0, #68	; 0x44
   211ae:	bl	1b4c0 <free_extent_buffer@@Base>
   211b2:	b.n	21160 <btrfs_cleanup_all_caches@@Base+0x8>
   211b4:	bl	ffd5d1b6 <__bss_end__@@Base+0xffcf0f2e>

000211b8 <btrfs_scan_fs_devices@@Base>:
   211b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211bc:	mov	fp, r2
   211be:	ldr	r2, [pc, #220]	; (2129c <btrfs_scan_fs_devices@@Base+0xe4>)
   211c0:	sub	sp, #36	; 0x24
   211c2:	ldr	r3, [pc, #220]	; (212a0 <btrfs_scan_fs_devices@@Base+0xe8>)
   211c4:	mov	r7, r0
   211c6:	add	r2, pc
   211c8:	ldrd	r4, r5, [sp, #72]	; 0x48
   211cc:	mov	sl, r1
   211ce:	ldr	r6, [pc, #212]	; (212a4 <btrfs_scan_fs_devices@@Base+0xec>)
   211d0:	ldr	r3, [r2, r3]
   211d2:	movs	r2, #0
   211d4:	add	r6, pc
   211d6:	ldr	r3, [r3, #0]
   211d8:	str	r3, [sp, #28]
   211da:	mov.w	r3, #0
   211de:	orrs.w	r3, r4, r5
   211e2:	mov.w	r3, #2
   211e6:	str	r3, [sp, #0]
   211e8:	mov.w	r3, #0
   211ec:	itt	eq
   211ee:	moveq.w	r4, #65536	; 0x10000
   211f2:	moveq	r5, #0
   211f4:	blx	8d54 <lseek64@plt>
   211f8:	cmp	r0, #0
   211fa:	mov	r8, r0
   211fc:	sbcs.w	r3, r1, #0
   21200:	mov	r9, r1
   21202:	bge.n	21220 <btrfs_scan_fs_devices@@Base+0x68>
   21204:	blx	8f58 <__errno_location@plt>
   21208:	ldr	r4, [r0, #0]
   2120a:	negs	r4, r4
   2120c:	ldr	r2, [pc, #152]	; (212a8 <btrfs_scan_fs_devices@@Base+0xf0>)
   2120e:	ldr	r3, [pc, #144]	; (212a0 <btrfs_scan_fs_devices@@Base+0xe8>)
   21210:	add	r2, pc
   21212:	ldr	r3, [r2, r3]
   21214:	ldr	r2, [r3, #0]
   21216:	ldr	r3, [sp, #28]
   21218:	eors	r2, r3
   2121a:	beq.n	21292 <btrfs_scan_fs_devices@@Base+0xda>
   2121c:	blx	8c90 <__stack_chk_fail@plt>
   21220:	movs	r3, #0
   21222:	movs	r2, #0
   21224:	str	r3, [sp, #0]
   21226:	mov	r0, r7
   21228:	movs	r3, #0
   2122a:	blx	8d54 <lseek64@plt>
   2122e:	cmp	r9, r5
   21230:	it	eq
   21232:	cmpeq	r8, r4
   21234:	bcs.n	2124c <btrfs_scan_fs_devices@@Base+0x94>
   21236:	ldr	r0, [pc, #116]	; (212ac <btrfs_scan_fs_devices@@Base+0xf4>)
   21238:	mov	r2, r4
   2123a:	mov	r3, r5
   2123c:	strd	r8, r9, [sp]
   21240:	add	r0, pc
   21242:	mvn.w	r4, #21
   21246:	bl	1bd1c <__btrfs_error@@Base>
   2124a:	b.n	2120c <btrfs_scan_fs_devices@@Base+0x54>
   2124c:	ldr	r3, [sp, #80]	; 0x50
   2124e:	mov	r2, fp
   21250:	strd	r4, r5, [sp]
   21254:	mov	r1, sl
   21256:	mov	r0, r7
   21258:	str	r3, [sp, #8]
   2125a:	add	r3, sp, #16
   2125c:	bl	2c98c <btrfs_scan_one_device@@Base>
   21260:	mov	r4, r0
   21262:	cbz	r0, 21278 <btrfs_scan_fs_devices@@Base+0xc0>
   21264:	ldr	r3, [pc, #72]	; (212b0 <btrfs_scan_fs_devices@@Base+0xf8>)
   21266:	movs	r1, #1
   21268:	ldr	r2, [pc, #72]	; (212b4 <btrfs_scan_fs_devices@@Base+0xfc>)
   2126a:	ldr	r0, [r6, r3]
   2126c:	add	r2, pc
   2126e:	mov	r3, sl
   21270:	ldr	r0, [r0, #0]
   21272:	blx	9040 <__fprintf_chk@plt+0x4>
   21276:	b.n	2120c <btrfs_scan_fs_devices@@Base+0x54>
   21278:	ldr	r3, [sp, #84]	; 0x54
   2127a:	cmp	r3, #0
   2127c:	bne.n	2120c <btrfs_scan_fs_devices@@Base+0x54>
   2127e:	ldrd	r2, r3, [sp, #16]
   21282:	cmp	r3, #0
   21284:	it	eq
   21286:	cmpeq	r2, #1
   21288:	beq.n	2120c <btrfs_scan_fs_devices@@Base+0x54>
   2128a:	bl	33de8 <btrfs_scan_devices@@Base>
   2128e:	mov	r4, r0
   21290:	b.n	2120c <btrfs_scan_fs_devices@@Base+0x54>
   21292:	mov	r0, r4
   21294:	add	sp, #36	; 0x24
   21296:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2129a:	nop
   2129c:	ldr	r3, [sp, #328]	; 0x148
   2129e:	movs	r4, r0
   212a0:	lsls	r0, r1, #10
   212a2:	movs	r0, r0
   212a4:	ldr	r3, [sp, #272]	; 0x110
   212a6:	movs	r4, r0
   212a8:	ldr	r3, [sp, #32]
   212aa:	movs	r4, r0
   212ac:	asrs	r3, r7, #14
   212ae:	movs	r2, r0
   212b0:	lsls	r4, r3, #10
   212b2:	movs	r0, r0
   212b4:	asrs	r6, r0, #15
   212b6:	movs	r2, r0

000212b8 <btrfs_check_super@@Base>:
   212b8:	ldr	r2, [pc, #580]	; (21500 <btrfs_check_super@@Base+0x248>)
   212ba:	ldr	r3, [pc, #584]	; (21504 <btrfs_check_super@@Base+0x24c>)
   212bc:	add	r2, pc
   212be:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   212c2:	sub	sp, #132	; 0x84
   212c4:	ldr	r3, [r2, r3]
   212c6:	mov	r4, r0
   212c8:	mov	r7, r1
   212ca:	ldr	r3, [r3, #0]
   212cc:	str	r3, [sp, #124]	; 0x7c
   212ce:	mov.w	r3, #0
   212d2:	ldr	r2, [r0, #64]	; 0x40
   212d4:	ldr	r3, [r0, #68]	; 0x44
   212d6:	add	r1, pc, #544	; (adr r1, 214f8 <btrfs_check_super@@Base+0x240>)
   212d8:	ldrd	r0, r1, [r1]
   212dc:	cmp	r3, r1
   212de:	it	eq
   212e0:	cmpeq	r2, r0
   212e2:	bne.n	212f2 <btrfs_check_super@@Base+0x3a>
   212e4:	lsls	r3, r7, #30
   212e6:	bmi.n	212f2 <btrfs_check_super@@Base+0x3a>
   212e8:	ldr	r0, [pc, #540]	; (21508 <btrfs_check_super@@Base+0x250>)
   212ea:	add	r0, pc
   212ec:	bl	1bd1c <__btrfs_error@@Base>
   212f0:	b.n	21308 <btrfs_check_super@@Base+0x50>
   212f2:	ldrh.w	r9, [r4, #196]	; 0xc4
   212f6:	bl	1c6d4 <btrfs_super_num_csums@@Base>
   212fa:	cmp	r9, r0
   212fc:	bcc.n	21322 <btrfs_check_super@@Base+0x6a>
   212fe:	ldr	r0, [pc, #524]	; (2150c <btrfs_check_super@@Base+0x254>)
   21300:	mov	r1, r9
   21302:	add	r0, pc
   21304:	bl	1bd1c <__btrfs_error@@Base>
   21308:	mvn.w	r5, #4
   2130c:	ldr	r2, [pc, #512]	; (21510 <btrfs_check_super@@Base+0x258>)
   2130e:	ldr	r3, [pc, #500]	; (21504 <btrfs_check_super@@Base+0x24c>)
   21310:	add	r2, pc
   21312:	ldr	r3, [r2, r3]
   21314:	ldr	r2, [r3, #0]
   21316:	ldr	r3, [sp, #124]	; 0x7c
   21318:	eors	r2, r3
   2131a:	beq.w	214ee <btrfs_check_super@@Base+0x236>
   2131e:	blx	8c90 <__stack_chk_fail@plt>
   21322:	mov	r0, r4
   21324:	add	r5, sp, #12
   21326:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   2132a:	add.w	r6, r4, #32
   2132e:	mov	r2, r5
   21330:	mov.w	r3, #4064	; 0xfe0
   21334:	mov	r1, r6
   21336:	mov	r8, r0
   21338:	mov	r0, r9
   2133a:	bl	208e6 <btrfs_csum_data@@Base>
   2133e:	mov	r0, r5
   21340:	mov	r2, r8
   21342:	mov	r1, r4
   21344:	blx	8c1c <memcmp@plt+0x4>
   21348:	mov	r5, r0
   2134a:	cbz	r0, 21352 <btrfs_check_super@@Base+0x9a>
   2134c:	ldr	r0, [pc, #452]	; (21514 <btrfs_check_super@@Base+0x25c>)
   2134e:	add	r0, pc
   21350:	b.n	212ec <btrfs_check_super@@Base+0x34>
   21352:	ldrb.w	r1, [r4, #198]	; 0xc6
   21356:	cmp	r1, #7
   21358:	bls.n	21366 <btrfs_check_super@@Base+0xae>
   2135a:	ldr	r0, [pc, #444]	; (21518 <btrfs_check_super@@Base+0x260>)
   2135c:	movs	r2, #8
   2135e:	add	r0, pc
   21360:	bl	1bd1c <__btrfs_error@@Base>
   21364:	b.n	2139c <btrfs_check_super@@Base+0xe4>
   21366:	ldrb.w	r1, [r4, #199]	; 0xc7
   2136a:	cmp	r1, #7
   2136c:	bls.n	21376 <btrfs_check_super@@Base+0xbe>
   2136e:	ldr	r0, [pc, #428]	; (2151c <btrfs_check_super@@Base+0x264>)
   21370:	movs	r2, #8
   21372:	add	r0, pc
   21374:	b.n	21360 <btrfs_check_super@@Base+0xa8>
   21376:	ldrb.w	r1, [r4, #200]	; 0xc8
   2137a:	cmp	r1, #7
   2137c:	bls.n	21386 <btrfs_check_super@@Base+0xce>
   2137e:	ldr	r0, [pc, #416]	; (21520 <btrfs_check_super@@Base+0x268>)
   21380:	movs	r2, #8
   21382:	add	r0, pc
   21384:	b.n	21360 <btrfs_check_super@@Base+0xa8>
   21386:	ldr	r2, [r4, #80]	; 0x50
   21388:	mov	r1, r5
   2138a:	ldr	r3, [r4, #84]	; 0x54
   2138c:	ubfx	r0, r2, #0, #12
   21390:	orrs	r1, r0
   21392:	beq.n	213a2 <btrfs_check_super@@Base+0xea>
   21394:	ldr	r0, [pc, #396]	; (21524 <btrfs_check_super@@Base+0x26c>)
   21396:	add	r0, pc
   21398:	bl	1bd1c <__btrfs_error@@Base>
   2139c:	ldr	r0, [pc, #392]	; (21528 <btrfs_check_super@@Base+0x270>)
   2139e:	add	r0, pc
   213a0:	b.n	212ec <btrfs_check_super@@Base+0x34>
   213a2:	ldr	r2, [r4, #88]	; 0x58
   213a4:	mov	r1, r5
   213a6:	ldr	r3, [r4, #92]	; 0x5c
   213a8:	ubfx	r0, r2, #0, #12
   213ac:	orrs	r1, r0
   213ae:	beq.n	213b6 <btrfs_check_super@@Base+0xfe>
   213b0:	ldr	r0, [pc, #376]	; (2152c <btrfs_check_super@@Base+0x274>)
   213b2:	add	r0, pc
   213b4:	b.n	21398 <btrfs_check_super@@Base+0xe0>
   213b6:	ldr	r2, [r4, #96]	; 0x60
   213b8:	mov	r1, r5
   213ba:	ldr	r3, [r4, #100]	; 0x64
   213bc:	ubfx	r0, r2, #0, #12
   213c0:	orrs	r1, r0
   213c2:	beq.n	213ca <btrfs_check_super@@Base+0x112>
   213c4:	ldr	r0, [pc, #360]	; (21530 <btrfs_check_super@@Base+0x278>)
   213c6:	add	r0, pc
   213c8:	b.n	21398 <btrfs_check_super@@Base+0xe0>
   213ca:	ldr.w	r1, [r4, #148]	; 0x94
   213ce:	cmp.w	r1, #4096	; 0x1000
   213d2:	bcs.n	213de <btrfs_check_super@@Base+0x126>
   213d4:	ldr	r0, [pc, #348]	; (21534 <btrfs_check_super@@Base+0x27c>)
   213d6:	add	r0, pc
   213d8:	bl	1bd1c <__btrfs_error@@Base>
   213dc:	b.n	2139c <btrfs_check_super@@Base+0xe4>
   213de:	ubfx	r3, r1, #0, #12
   213e2:	cbz	r3, 213ea <btrfs_check_super@@Base+0x132>
   213e4:	ldr	r0, [pc, #336]	; (21538 <btrfs_check_super@@Base+0x280>)
   213e6:	add	r0, pc
   213e8:	b.n	213d8 <btrfs_check_super@@Base+0x120>
   213ea:	ldr.w	ip, [r4, #144]	; 0x90
   213ee:	cmp.w	ip, #4096	; 0x1000
   213f2:	bcs.n	213fc <btrfs_check_super@@Base+0x144>
   213f4:	ldr	r0, [pc, #324]	; (2153c <btrfs_check_super@@Base+0x284>)
   213f6:	mov	r1, ip
   213f8:	add	r0, pc
   213fa:	b.n	213d8 <btrfs_check_super@@Base+0x120>
   213fc:	ubfx	r3, ip, #0, #12
   21400:	cbz	r3, 2140a <btrfs_check_super@@Base+0x152>
   21402:	ldr	r0, [pc, #316]	; (21540 <btrfs_check_super@@Base+0x288>)
   21404:	mov	r1, ip
   21406:	add	r0, pc
   21408:	b.n	213d8 <btrfs_check_super@@Base+0x120>
   2140a:	ldr	r2, [r4, #112]	; 0x70
   2140c:	ldr	r3, [r4, #116]	; 0x74
   2140e:	orrs	r3, r2
   21410:	bne.n	2141c <btrfs_check_super@@Base+0x164>
   21412:	ldr	r0, [pc, #304]	; (21544 <btrfs_check_super@@Base+0x28c>)
   21414:	add	r0, pc
   21416:	bl	1bd1c <__btrfs_error@@Base>
   2141a:	b.n	2139c <btrfs_check_super@@Base+0xe4>
   2141c:	movs	r0, #6
   2141e:	ldr	r3, [r4, #124]	; 0x7c
   21420:	muls	r0, r1
   21422:	ldr	r2, [r4, #120]	; 0x78
   21424:	movs	r1, #0
   21426:	cmp	r3, r1
   21428:	it	eq
   2142a:	cmpeq	r2, r0
   2142c:	bcs.n	21434 <btrfs_check_super@@Base+0x17c>
   2142e:	ldr	r0, [pc, #280]	; (21548 <btrfs_check_super@@Base+0x290>)
   21430:	add	r0, pc
   21432:	b.n	21398 <btrfs_check_super@@Base+0xe0>
   21434:	ldr.w	r1, [r4, #156]	; 0x9c
   21438:	cmp.w	r1, #4096	; 0x1000
   2143c:	beq.n	21448 <btrfs_check_super@@Base+0x190>
   2143e:	cmp	r1, ip
   21440:	beq.n	21448 <btrfs_check_super@@Base+0x190>
   21442:	ldr	r0, [pc, #264]	; (2154c <btrfs_check_super@@Base+0x294>)
   21444:	add	r0, pc
   21446:	b.n	213d8 <btrfs_check_super@@Base+0x120>
   21448:	ldr.w	r1, [r4, #188]	; 0xbc
   2144c:	movs	r3, #0
   2144e:	and.w	r2, r1, #1024	; 0x400
   21452:	orrs	r3, r2
   21454:	mov.w	r2, #16
   21458:	ite	ne
   2145a:	addwne	r0, r4, #571	; 0x23b
   2145e:	moveq	r0, r6
   21460:	addw	r6, r4, #283	; 0x11b
   21464:	mov	r1, r6
   21466:	blx	8c1c <memcmp@plt+0x4>
   2146a:	cbz	r0, 21496 <btrfs_check_super@@Base+0x1de>
   2146c:	add	r2, sp, #44	; 0x2c
   2146e:	addw	r0, r4, #571	; 0x23b
   21472:	str	r2, [sp, #4]
   21474:	mov	r1, r2
   21476:	blx	8b1c <uuid_unparse@plt>
   2147a:	add	r1, sp, #84	; 0x54
   2147c:	mov	r0, r6
   2147e:	str	r1, [sp, #0]
   21480:	blx	8b1c <uuid_unparse@plt>
   21484:	tst.w	r7, #4
   21488:	ldrd	r1, r2, [sp]
   2148c:	beq.n	214c6 <btrfs_check_super@@Base+0x20e>
   2148e:	ldr	r0, [pc, #192]	; (21550 <btrfs_check_super@@Base+0x298>)
   21490:	add	r0, pc
   21492:	bl	1bca0 <__btrfs_warning@@Base>
   21496:	ldr.w	r3, [r4, #140]	; 0x8c
   2149a:	movs	r1, #0
   2149c:	ldr.w	r2, [r4, #136]	; 0x88
   214a0:	mov.w	r0, #2147483648	; 0x80000000
   214a4:	cmp	r1, r3
   214a6:	it	eq
   214a8:	cmpeq	r0, r2
   214aa:	bcs.n	214b4 <btrfs_check_super@@Base+0x1fc>
   214ac:	ldr	r0, [pc, #164]	; (21554 <btrfs_check_super@@Base+0x29c>)
   214ae:	add	r0, pc
   214b0:	bl	1bca0 <__btrfs_warning@@Base>
   214b4:	ldr.w	r2, [r4, #136]	; 0x88
   214b8:	ldr.w	r3, [r4, #140]	; 0x8c
   214bc:	orrs	r3, r2
   214be:	bne.n	214cc <btrfs_check_super@@Base+0x214>
   214c0:	ldr	r0, [pc, #148]	; (21558 <btrfs_check_super@@Base+0x2a0>)
   214c2:	add	r0, pc
   214c4:	b.n	21416 <btrfs_check_super@@Base+0x15e>
   214c6:	ldr	r0, [pc, #148]	; (2155c <btrfs_check_super@@Base+0x2a4>)
   214c8:	add	r0, pc
   214ca:	b.n	21360 <btrfs_check_super@@Base+0xa8>
   214cc:	ldr.w	r1, [r4, #160]	; 0xa0
   214d0:	cmp.w	r1, #2048	; 0x800
   214d4:	bls.n	214e0 <btrfs_check_super@@Base+0x228>
   214d6:	ldr	r0, [pc, #136]	; (21560 <btrfs_check_super@@Base+0x2a8>)
   214d8:	mov.w	r2, #2048	; 0x800
   214dc:	add	r0, pc
   214de:	b.n	21360 <btrfs_check_super@@Base+0xa8>
   214e0:	cmp	r1, #96	; 0x60
   214e2:	bhi.w	2130c <btrfs_check_super@@Base+0x54>
   214e6:	ldr	r0, [pc, #124]	; (21564 <btrfs_check_super@@Base+0x2ac>)
   214e8:	movs	r2, #97	; 0x61
   214ea:	add	r0, pc
   214ec:	b.n	21360 <btrfs_check_super@@Base+0xa8>
   214ee:	mov	r0, r5
   214f0:	add	sp, #132	; 0x84
   214f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   214f6:	nop
   214f8:	tst	r1, r4
   214fa:	strh	r0, [r1, r1]
   214fc:	strh	r6, [r4, r5]
   214fe:	ldr	r5, [pc, #380]	; (2167c <btrfs_read_dev_super@@Base+0x114>)
   21500:	ldr	r2, [sp, #368]	; 0x170
   21502:	movs	r4, r0
   21504:	lsls	r0, r1, #10
   21506:	movs	r0, r0
   21508:	asrs	r4, r4, #13
   2150a:	movs	r2, r0
   2150c:	asrs	r3, r5, #13
   2150e:	movs	r2, r0
   21510:	ldr	r2, [sp, #32]
   21512:	movs	r4, r0
   21514:	asrs	r1, r0, #13
   21516:	movs	r2, r0
   21518:	asrs	r6, r1, #13
   2151a:	movs	r2, r0
   2151c:	asrs	r4, r3, #13
   2151e:	movs	r2, r0
   21520:	asrs	r7, r5, #13
   21522:	movs	r2, r0
   21524:	asrs	r4, r7, #13
   21526:	movs	r2, r0
   21528:	asrs	r7, r3, #21
   2152a:	movs	r2, r0
   2152c:	asrs	r0, r0, #14
   2152e:	movs	r2, r0
   21530:	asrs	r5, r1, #14
   21532:	movs	r2, r0
   21534:	asrs	r4, r3, #14
   21536:	movs	r2, r0
   21538:	asrs	r2, r5, #14
   2153a:	movs	r2, r0
   2153c:	asrs	r7, r5, #14
   2153e:	movs	r2, r0
   21540:	asrs	r1, r0, #15
   21542:	movs	r2, r0
   21544:	asrs	r4, r1, #15
   21546:	movs	r2, r0
   21548:	asrs	r6, r0, #15
   2154a:	movs	r2, r0
   2154c:	asrs	r2, r1, #15
   2154e:	movs	r2, r0
   21550:	asrs	r4, r2, #14
   21552:	movs	r2, r0
   21554:	asrs	r4, r1, #15
   21556:	movs	r2, r0
   21558:	asrs	r3, r3, #15
   2155a:	movs	r2, r0
   2155c:	asrs	r6, r0, #14
   2155e:	movs	r2, r0
   21560:	asrs	r0, r3, #15
   21562:	movs	r2, r0
   21564:	asrs	r5, r5, #15
   21566:	movs	r2, r0

00021568 <btrfs_read_dev_super@@Base>:
   21568:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2156c:	mov	sl, r2
   2156e:	vpush	{d8-d9}
   21572:	mov	fp, r3
   21574:	ldr	r2, [pc, #496]	; (21768 <btrfs_read_dev_super@@Base+0x200>)
   21576:	vmov	s16, r1
   2157a:	ldr	r1, [pc, #496]	; (2176c <btrfs_read_dev_super@@Base+0x204>)
   2157c:	sub.w	sp, sp, #4160	; 0x1040
   21580:	vmov	s17, r0
   21584:	add	r1, pc
   21586:	sub	sp, #12
   21588:	add.w	r3, sp, #4160	; 0x1040
   2158c:	add	r4, sp, #68	; 0x44
   2158e:	ldr	r2, [r1, r2]
   21590:	adds	r3, #4
   21592:	ldr	r2, [r2, #0]
   21594:	str	r2, [r3, #0]
   21596:	mov.w	r2, #0
   2159a:	add.w	r3, sp, #4224	; 0x1080
   2159e:	ldr	r3, [r3, #0]
   215a0:	tst.w	r3, #1
   215a4:	ite	ne
   215a6:	movne	r3, #3
   215a8:	moveq	r3, #1
   215aa:	cmp.w	fp, #0
   215ae:	str	r3, [sp, #28]
   215b0:	it	eq
   215b2:	cmpeq.w	sl, #65536	; 0x10000
   215b6:	beq.w	216f6 <btrfs_read_dev_super@@Base+0x18e>
   215ba:	mov.w	r2, #4096	; 0x1000
   215be:	mov	r1, r4
   215c0:	strd	sl, fp, [sp]
   215c4:	blx	8dcc <pread64@plt>
   215c8:	cmp	r0, #0
   215ca:	bge.n	215f0 <btrfs_read_dev_super@@Base+0x88>
   215cc:	blx	8f58 <__errno_location@plt>
   215d0:	ldr	r0, [r0, #0]
   215d2:	negs	r0, r0
   215d4:	ldr	r1, [pc, #408]	; (21770 <btrfs_read_dev_super@@Base+0x208>)
   215d6:	add.w	r3, sp, #4160	; 0x1040
   215da:	ldr	r2, [pc, #396]	; (21768 <btrfs_read_dev_super@@Base+0x200>)
   215dc:	adds	r3, #4
   215de:	add	r1, pc
   215e0:	ldr	r2, [r1, r2]
   215e2:	ldr	r1, [r2, #0]
   215e4:	ldr	r2, [r3, #0]
   215e6:	eors	r1, r2
   215e8:	beq.w	21758 <btrfs_read_dev_super@@Base+0x1f0>
   215ec:	blx	8c90 <__stack_chk_fail@plt>
   215f0:	cmp.w	r0, #4096	; 0x1000
   215f4:	blt.w	2174c <btrfs_read_dev_super@@Base+0x1e4>
   215f8:	ldrd	r2, r3, [r4, #48]	; 0x30
   215fc:	cmp	fp, r3
   215fe:	it	eq
   21600:	cmpeq	sl, r2
   21602:	bne.w	21752 <btrfs_read_dev_super@@Base+0x1ea>
   21606:	add.w	r3, sp, #4224	; 0x1080
   2160a:	mov	r0, r4
   2160c:	ldr	r1, [r3, #0]
   2160e:	bl	212b8 <btrfs_check_super@@Base>
   21612:	cmp	r0, #0
   21614:	blt.n	215d4 <btrfs_read_dev_super@@Base+0x6c>
   21616:	vmov	r0, s16
   2161a:	mov.w	r2, #4096	; 0x1000
   2161e:	mov	r1, r4
   21620:	blx	8bdc <memcpy@plt+0x4>
   21624:	movs	r0, #0
   21626:	b.n	215d4 <btrfs_read_dev_super@@Base+0x6c>
   21628:	movs	r3, #12
   2162a:	mov.w	r2, #16384	; 0x4000
   2162e:	muls	r3, r5
   21630:	sub.w	r0, r3, #32
   21634:	rsb	r1, r3, #32
   21638:	lsl.w	fp, r2, r0
   2163c:	lsr.w	r1, r2, r1
   21640:	orr.w	fp, fp, r1
   21644:	lsl.w	sl, r2, r3
   21648:	vmov	r0, s17
   2164c:	mov.w	r2, #4096	; 0x1000
   21650:	mov	r1, r4
   21652:	strd	sl, fp, [sp]
   21656:	blx	8dcc <pread64@plt>
   2165a:	cmp.w	r0, #4096	; 0x1000
   2165e:	blt.n	2173c <btrfs_read_dev_super@@Base+0x1d4>
   21660:	ldrd	r2, r3, [r4, #48]	; 0x30
   21664:	cmp	fp, r3
   21666:	it	eq
   21668:	cmpeq	sl, r2
   2166a:	bne.n	21732 <btrfs_read_dev_super@@Base+0x1ca>
   2166c:	ldrd	r2, r3, [r4, #64]	; 0x40
   21670:	orrs	r3, r2
   21672:	bne.n	21678 <btrfs_read_dev_super@@Base+0x110>
   21674:	cmp	r5, #0
   21676:	beq.n	2173c <btrfs_read_dev_super@@Base+0x1d4>
   21678:	add.w	r3, sp, #4224	; 0x1080
   2167c:	mov	r0, r4
   2167e:	ldr	r1, [r3, #0]
   21680:	bl	212b8 <btrfs_check_super@@Base>
   21684:	cmp	r0, #0
   21686:	bne.n	21732 <btrfs_read_dev_super@@Base+0x1ca>
   21688:	cmp.w	r8, #0
   2168c:	bne.n	2170e <btrfs_read_dev_super@@Base+0x1a6>
   2168e:	ldr.w	r3, [r4, #188]	; 0xbc
   21692:	and.w	r3, r3, #1024	; 0x400
   21696:	strd	r3, r8, [sp, #16]
   2169a:	ldrd	r2, r3, [sp, #16]
   2169e:	orrs	r3, r2
   216a0:	beq.n	216c2 <btrfs_read_dev_super@@Base+0x15a>
   216a2:	addw	r3, r6, #567	; 0x237
   216a6:	sub.w	r7, r6, #20
   216aa:	addw	ip, r6, #583	; 0x247
   216ae:	ldr	r0, [r3, #0]
   216b0:	adds	r3, #8
   216b2:	ldr.w	r1, [r3, #-4]
   216b6:	cmp	r3, ip
   216b8:	mov	r2, r7
   216ba:	stmia	r2!, {r0, r1}
   216bc:	mov	r7, r2
   216be:	bne.n	216ae <btrfs_read_dev_super@@Base+0x146>
   216c0:	movs	r7, #1
   216c2:	add	r3, sp, #100	; 0x64
   216c4:	add.w	ip, sp, #36	; 0x24
   216c8:	ldmia	r3, {r0, r1, r2, r3}
   216ca:	stmia.w	ip, {r0, r1, r2, r3}
   216ce:	ldrd	r8, r9, [r4, #72]	; 0x48
   216d2:	ldrd	r2, r3, [sp, #8]
   216d6:	cmp	r3, r9
   216d8:	it	eq
   216da:	cmpeq	r2, r8
   216dc:	bcs.n	216f0 <btrfs_read_dev_super@@Base+0x188>
   216de:	vmov	r0, s16
   216e2:	mov.w	r2, #4096	; 0x1000
   216e6:	mov	r1, r4
   216e8:	blx	8bdc <memcpy@plt+0x4>
   216ec:	strd	r8, r9, [sp, #8]
   216f0:	mov.w	r8, #1
   216f4:	b.n	21732 <btrfs_read_dev_super@@Base+0x1ca>
   216f6:	movs	r3, #0
   216f8:	movs	r2, #0
   216fa:	strd	r2, r3, [sp, #8]
   216fe:	add	r3, sp, #100	; 0x64
   21700:	movs	r7, #0
   21702:	add	r6, sp, #72	; 0x48
   21704:	vmov	s18, r3
   21708:	mov	r5, r7
   2170a:	mov	r8, r7
   2170c:	b.n	21648 <btrfs_read_dev_super@@Base+0xe0>
   2170e:	vmov	r1, s18
   21712:	add	r0, sp, #36	; 0x24
   21714:	movs	r2, #16
   21716:	blx	8c1c <memcmp@plt+0x4>
   2171a:	cbnz	r0, 21732 <btrfs_read_dev_super@@Base+0x1ca>
   2171c:	cmp	r7, #0
   2171e:	beq.n	216ce <btrfs_read_dev_super@@Base+0x166>
   21720:	addw	r1, r6, #567	; 0x237
   21724:	sub.w	r0, r6, #20
   21728:	movs	r2, #16
   2172a:	blx	8c1c <memcmp@plt+0x4>
   2172e:	cmp	r0, #0
   21730:	beq.n	216ce <btrfs_read_dev_super@@Base+0x166>
   21732:	ldr	r3, [sp, #28]
   21734:	adds	r5, #1
   21736:	cmp	r3, r5
   21738:	bne.w	21628 <btrfs_read_dev_super@@Base+0xc0>
   2173c:	ldrd	r3, r2, [sp, #8]
   21740:	orrs	r3, r2
   21742:	ite	eq
   21744:	moveq.w	r0, #4294967295	; 0xffffffff
   21748:	movne	r0, #0
   2174a:	b.n	215d4 <btrfs_read_dev_super@@Base+0x6c>
   2174c:	mvn.w	r0, #1
   21750:	b.n	215d4 <btrfs_read_dev_super@@Base+0x6c>
   21752:	mvn.w	r0, #4
   21756:	b.n	215d4 <btrfs_read_dev_super@@Base+0x6c>
   21758:	add.w	sp, sp, #4160	; 0x1040
   2175c:	add	sp, #12
   2175e:	vpop	{d8-d9}
   21762:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21766:	nop
   21768:	lsls	r0, r1, #10
   2176a:	movs	r0, r0
   2176c:	str	r7, [sp, #592]	; 0x250
   2176e:	movs	r4, r0
   21770:	str	r7, [sp, #232]	; 0xe8
   21772:	movs	r4, r0

00021774 <write_all_supers@@Base>:
   21774:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21778:	mov	r4, r0
   2177a:	vpush	{d8}
   2177e:	ldr	r2, [pc, #1004]	; (21b6c <write_all_supers@@Base+0x3f8>)
   21780:	ldr	r3, [pc, #1004]	; (21b70 <write_all_supers@@Base+0x3fc>)
   21782:	add	r2, pc
   21784:	ldr.w	r5, [r0, #308]	; 0x134
   21788:	sub	sp, #68	; 0x44
   2178a:	ldr	r3, [r2, r3]
   2178c:	ldr.w	r7, [r0, #352]	; 0x160
   21790:	mov	r0, r5
   21792:	ldr	r3, [r3, #0]
   21794:	str	r3, [sp, #60]	; 0x3c
   21796:	mov.w	r3, #0
   2179a:	add.w	r3, r7, #72	; 0x48
   2179e:	str	r3, [sp, #20]
   217a0:	bl	2055a <btrfs_fs_roots_compare_roots@@Base+0x4>
   217a4:	addw	r5, r5, #2859	; 0xb2b
   217a8:	movs	r3, #168	; 0xa8
   217aa:	mla	r3, r3, r0, r5
   217ae:	ldr.w	r8, [r3, #8]
   217b2:	ldr.w	r9, [r3, #12]
   217b6:	ldr	r3, [r4, #28]
   217b8:	ldr	r1, [r3, #0]
   217ba:	ldr.w	r3, [r1, #180]	; 0xb4
   217be:	ldr.w	r2, [r1, #176]	; 0xb0
   217c2:	cmp	r9, r3
   217c4:	it	eq
   217c6:	cmpeq	r8, r2
   217c8:	beq.n	217da <write_all_supers@@Base+0x66>
   217ca:	adds	r0, #1
   217cc:	negs	r3, r0
   217ce:	and.w	r0, r0, #3
   217d2:	and.w	r3, r3, #3
   217d6:	it	pl
   217d8:	negpl	r0, r3
   217da:	movs	r2, #168	; 0xa8
   217dc:	movs	r1, #0
   217de:	mul.w	r6, r2, r0
   217e2:	adds	r3, r5, r6
   217e4:	mov	r0, r3
   217e6:	blx	8f98 <memset@plt+0x4>
   217ea:	ldr	r2, [r4, #28]
   217ec:	ldr	r2, [r2, #0]
   217ee:	ldrd	r1, r2, [r2, #40]	; 0x28
   217f2:	str	r1, [r5, r6]
   217f4:	str	r2, [r0, #4]
   217f6:	mov	r3, r0
   217f8:	ldr	r2, [r4, #28]
   217fa:	ldr	r2, [r2, #0]
   217fc:	ldr.w	r1, [r2, #176]	; 0xb0
   21800:	ldr.w	r2, [r2, #180]	; 0xb4
   21804:	str	r1, [r0, #8]
   21806:	str	r2, [r0, #12]
   21808:	ldr	r2, [r4, #28]
   2180a:	ldr	r2, [r2, #0]
   2180c:	ldrb.w	r2, [r2, #196]	; 0xc4
   21810:	strb.w	r2, [r0, #152]	; 0x98
   21814:	ldr	r2, [r4, #32]
   21816:	ldr	r2, [r2, #0]
   21818:	ldrd	r1, r2, [r2, #40]	; 0x28
   2181c:	str	r1, [r0, #16]
   2181e:	str	r2, [r0, #20]
   21820:	ldr	r2, [r4, #32]
   21822:	ldr	r2, [r2, #0]
   21824:	ldr.w	r1, [r2, #176]	; 0xb0
   21828:	ldr.w	r2, [r2, #180]	; 0xb4
   2182c:	str	r1, [r0, #24]
   2182e:	str	r2, [r0, #28]
   21830:	ldr	r2, [r4, #32]
   21832:	ldr	r2, [r2, #0]
   21834:	ldrb.w	r2, [r2, #196]	; 0xc4
   21838:	strb.w	r2, [r0, #153]	; 0x99
   2183c:	ldr	r2, [r4, #24]
   2183e:	ldr	r2, [r2, #0]
   21840:	ldrd	r1, r2, [r2, #40]	; 0x28
   21844:	str	r1, [r0, #32]
   21846:	str	r2, [r0, #36]	; 0x24
   21848:	ldr	r2, [r4, #24]
   2184a:	ldr	r2, [r2, #0]
   2184c:	ldr.w	r1, [r2, #176]	; 0xb0
   21850:	ldr.w	r2, [r2, #180]	; 0xb4
   21854:	str	r1, [r0, #40]	; 0x28
   21856:	str	r2, [r0, #44]	; 0x2c
   21858:	ldr	r2, [r4, #24]
   2185a:	ldr	r2, [r2, #0]
   2185c:	ldrb.w	r2, [r2, #196]	; 0xc4
   21860:	strb.w	r2, [r0, #154]	; 0x9a
   21864:	ldr	r2, [r4, #20]
   21866:	cbz	r2, 21890 <write_all_supers@@Base+0x11c>
   21868:	ldr	r2, [r2, #0]
   2186a:	cbz	r2, 21890 <write_all_supers@@Base+0x11c>
   2186c:	ldrd	r1, r2, [r2, #40]	; 0x28
   21870:	str	r1, [r0, #48]	; 0x30
   21872:	str	r2, [r0, #52]	; 0x34
   21874:	ldr	r2, [r4, #20]
   21876:	ldr	r2, [r2, #0]
   21878:	ldr.w	r1, [r2, #176]	; 0xb0
   2187c:	ldr.w	r2, [r2, #180]	; 0xb4
   21880:	str	r1, [r0, #56]	; 0x38
   21882:	str	r2, [r0, #60]	; 0x3c
   21884:	ldr	r2, [r4, #20]
   21886:	ldr	r2, [r2, #0]
   21888:	ldrb.w	r2, [r2, #196]	; 0xc4
   2188c:	strb.w	r2, [r0, #155]	; 0x9b
   21890:	ldr	r2, [r4, #36]	; 0x24
   21892:	add.w	sl, sp, #28
   21896:	ldr	r2, [r2, #0]
   21898:	ldrd	r1, r2, [r2, #40]	; 0x28
   2189c:	str	r1, [r3, #64]	; 0x40
   2189e:	str	r2, [r3, #68]	; 0x44
   218a0:	ldr	r2, [r4, #36]	; 0x24
   218a2:	ldr	r2, [r2, #0]
   218a4:	ldr.w	r1, [r2, #176]	; 0xb0
   218a8:	ldr.w	r2, [r2, #180]	; 0xb4
   218ac:	str	r1, [r3, #72]	; 0x48
   218ae:	str	r2, [r3, #76]	; 0x4c
   218b0:	ldr	r2, [r4, #36]	; 0x24
   218b2:	ldr	r2, [r2, #0]
   218b4:	ldrb.w	r2, [r2, #196]	; 0xc4
   218b8:	strb.w	r2, [r3, #156]	; 0x9c
   218bc:	ldr	r2, [r4, #40]	; 0x28
   218be:	ldr	r2, [r2, #0]
   218c0:	ldrd	r1, r2, [r2, #40]	; 0x28
   218c4:	str	r1, [r3, #80]	; 0x50
   218c6:	str	r2, [r3, #84]	; 0x54
   218c8:	ldr	r2, [r4, #40]	; 0x28
   218ca:	ldr	r2, [r2, #0]
   218cc:	ldr.w	r1, [r2, #176]	; 0xb0
   218d0:	ldr.w	r2, [r2, #180]	; 0xb4
   218d4:	str	r1, [r3, #88]	; 0x58
   218d6:	str	r2, [r3, #92]	; 0x5c
   218d8:	ldr	r2, [r4, #40]	; 0x28
   218da:	ldr	r2, [r2, #0]
   218dc:	ldrb.w	r2, [r2, #196]	; 0xc4
   218e0:	strb.w	r2, [r3, #157]	; 0x9d
   218e4:	ldr.w	r2, [r4, #308]	; 0x134
   218e8:	ldr	r1, [r2, #112]	; 0x70
   218ea:	ldr	r2, [r2, #116]	; 0x74
   218ec:	str	r1, [r3, #96]	; 0x60
   218ee:	str	r2, [r3, #100]	; 0x64
   218f0:	ldr.w	r2, [r4, #308]	; 0x134
   218f4:	ldr	r1, [r2, #120]	; 0x78
   218f6:	ldr	r2, [r2, #124]	; 0x7c
   218f8:	str	r1, [r3, #104]	; 0x68
   218fa:	str	r2, [r3, #108]	; 0x6c
   218fc:	ldr.w	r2, [r4, #308]	; 0x134
   21900:	ldr.w	r1, [r2, #136]	; 0x88
   21904:	ldr.w	r2, [r2, #140]	; 0x8c
   21908:	str	r1, [r3, #112]	; 0x70
   2190a:	str	r2, [r3, #116]	; 0x74
   2190c:	ldr	r3, [pc, #612]	; (21b74 <write_all_supers@@Base+0x400>)
   2190e:	ldr.w	r6, [r4, #308]	; 0x134
   21912:	add	r3, pc
   21914:	ldr	r5, [r7, #72]	; 0x48
   21916:	vmov	s17, r3
   2191a:	ldr	r3, [sp, #20]
   2191c:	cmp	r5, r3
   2191e:	bne.n	21924 <write_all_supers@@Base+0x1b0>
   21920:	movs	r0, #0
   21922:	b.n	21a6e <write_all_supers@@Base+0x2fa>
   21924:	ldr	r3, [r5, #28]
   21926:	cmp	r3, #0
   21928:	beq.n	219f2 <write_all_supers@@Base+0x27e>
   2192a:	movs	r2, #0
   2192c:	strb.w	r2, [r6, #245]	; 0xf5
   21930:	strb.w	r2, [r6, #246]	; 0xf6
   21934:	strb.w	r2, [r6, #247]	; 0xf7
   21938:	strb.w	r2, [r6, #248]	; 0xf8
   2193c:	strb.w	r2, [r6, #249]	; 0xf9
   21940:	strb.w	r2, [r6, #250]	; 0xfa
   21944:	strb.w	r2, [r6, #251]	; 0xfb
   21948:	strb.w	r2, [r6, #252]	; 0xfc
   2194c:	ldrd	r1, r2, [r5, #104]	; 0x68
   21950:	str.w	r1, [r6, #237]	; 0xed
   21954:	str.w	r2, [r6, #241]	; 0xf1
   21958:	ldrd	r1, r2, [r5, #64]	; 0x40
   2195c:	str.w	r1, [r6, #201]	; 0xc9
   21960:	str.w	r2, [r6, #205]	; 0xcd
   21964:	ldrd	r1, r2, [r5, #72]	; 0x48
   21968:	str.w	r1, [r6, #209]	; 0xd1
   2196c:	str.w	r2, [r6, #213]	; 0xd5
   21970:	ldrd	r1, r2, [r5, #80]	; 0x50
   21974:	str.w	r1, [r6, #217]	; 0xd9
   21978:	add.w	r1, r5, #128	; 0x80
   2197c:	str.w	r2, [r6, #221]	; 0xdd
   21980:	addw	r2, r6, #267	; 0x10b
   21984:	ldr	r3, [r5, #88]	; 0x58
   21986:	str.w	r3, [r6, #225]	; 0xe1
   2198a:	ldr	r3, [r5, #92]	; 0x5c
   2198c:	str.w	r3, [r6, #229]	; 0xe5
   21990:	ldr	r3, [r5, #96]	; 0x60
   21992:	str.w	r3, [r6, #233]	; 0xe9
   21996:	add.w	r3, r5, #112	; 0x70
   2199a:	ldr.w	r0, [r3], #4
   2199e:	cmp	r3, r1
   219a0:	str.w	r0, [r2], #4
   219a4:	bne.n	2199a <write_all_supers@@Base+0x226>
   219a6:	ldr.w	r3, [r4, #352]	; 0x160
   219aa:	addw	r1, r6, #283	; 0x11b
   219ae:	add.w	r2, r3, #16
   219b2:	adds	r3, #32
   219b4:	ldr.w	r0, [r2], #4
   219b8:	cmp	r2, r3
   219ba:	str.w	r0, [r1], #4
   219be:	bne.n	219b4 <write_all_supers@@Base+0x240>
   219c0:	ldr	r2, [r6, #60]	; 0x3c
   219c2:	ldr	r3, [r6, #56]	; 0x38
   219c4:	ldrh.w	fp, [r6, #196]	; 0xc4
   219c8:	orr.w	r3, r3, #1
   219cc:	str	r2, [r6, #60]	; 0x3c
   219ce:	str	r3, [r6, #56]	; 0x38
   219d0:	ldr	r0, [r5, #24]
   219d2:	blx	8aec <fsync@plt>
   219d6:	cmp	r0, #0
   219d8:	bge.n	219f6 <write_all_supers@@Base+0x282>
   219da:	ldr	r0, [pc, #412]	; (21b78 <write_all_supers@@Base+0x404>)
   219dc:	ldrd	r2, r3, [r5, #64]	; 0x40
   219e0:	add	r0, pc
   219e2:	bl	1bd1c <__btrfs_error@@Base>
   219e6:	blx	8f58 <__errno_location@plt>
   219ea:	ldr	r0, [r0, #0]
   219ec:	negs	r0, r0
   219ee:	cmp	r0, #0
   219f0:	blt.n	21a6e <write_all_supers@@Base+0x2fa>
   219f2:	ldr	r5, [r5, #0]
   219f4:	b.n	2191a <write_all_supers@@Base+0x1a6>
   219f6:	ldrd	r8, r9, [r4, #320]	; 0x140
   219fa:	cmp.w	r9, #0
   219fe:	it	eq
   21a00:	cmpeq.w	r8, #65536	; 0x10000
   21a04:	beq.n	21a96 <write_all_supers@@Base+0x322>
   21a06:	mov	r2, sl
   21a08:	add.w	r1, r6, #32
   21a0c:	mov.w	r3, #4064	; 0xfe0
   21a10:	mov	r0, fp
   21a12:	str.w	r8, [r6, #48]	; 0x30
   21a16:	mov	r7, sl
   21a18:	str.w	r9, [r6, #52]	; 0x34
   21a1c:	bl	208e6 <btrfs_csum_data@@Base>
   21a20:	add.w	ip, sp, #60	; 0x3c
   21a24:	mov	r2, r6
   21a26:	mov	r3, r7
   21a28:	adds	r2, #8
   21a2a:	ldmia	r3!, {r0, r1}
   21a2c:	cmp	r3, ip
   21a2e:	str.w	r0, [r2, #-8]
   21a32:	mov	r7, r3
   21a34:	str.w	r1, [r2, #-4]
   21a38:	bne.n	21a26 <write_all_supers@@Base+0x2b2>
   21a3a:	ldrd	r2, r3, [r4, #320]	; 0x140
   21a3e:	ldr.w	r1, [r4, #308]	; 0x134
   21a42:	strd	r2, r3, [sp]
   21a46:	mov.w	r2, #4096	; 0x1000
   21a4a:	ldr	r0, [r5, #24]
   21a4c:	blx	8ffc <pwrite64@plt>
   21a50:	cmp.w	r0, #4096	; 0x1000
   21a54:	beq.n	21a82 <write_all_supers@@Base+0x30e>
   21a56:	blx	8f58 <__errno_location@plt>
   21a5a:	movs	r3, #5
   21a5c:	str	r3, [r0, #0]
   21a5e:	ldr	r0, [pc, #284]	; (21b7c <write_all_supers@@Base+0x408>)
   21a60:	ldrd	r2, r3, [r5, #64]	; 0x40
   21a64:	add	r0, pc
   21a66:	bl	1bd1c <__btrfs_error@@Base>
   21a6a:	mvn.w	r0, #4
   21a6e:	ldr	r2, [pc, #272]	; (21b80 <write_all_supers@@Base+0x40c>)
   21a70:	ldr	r3, [pc, #252]	; (21b70 <write_all_supers@@Base+0x3fc>)
   21a72:	add	r2, pc
   21a74:	ldr	r3, [r2, r3]
   21a76:	ldr	r2, [r3, #0]
   21a78:	ldr	r3, [sp, #60]	; 0x3c
   21a7a:	eors	r2, r3
   21a7c:	beq.n	21b62 <write_all_supers@@Base+0x3ee>
   21a7e:	blx	8c90 <__stack_chk_fail@plt>
   21a82:	ldr	r0, [r5, #24]
   21a84:	blx	8aec <fsync@plt>
   21a88:	cmp	r0, #0
   21a8a:	bge.n	219f2 <write_all_supers@@Base+0x27e>
   21a8c:	ldr	r0, [pc, #244]	; (21b84 <write_all_supers@@Base+0x410>)
   21a8e:	ldrd	r2, r3, [r5, #64]	; 0x40
   21a92:	add	r0, pc
   21a94:	b.n	219e2 <write_all_supers@@Base+0x26e>
   21a96:	add.w	r3, r6, #32
   21a9a:	movs	r7, #0
   21a9c:	vmov	s16, r3
   21aa0:	b.n	21ade <write_all_supers@@Base+0x36a>
   21aa2:	cbnz	r7, 21ab8 <write_all_supers@@Base+0x344>
   21aa4:	ldr	r0, [r5, #24]
   21aa6:	blx	8aec <fsync@plt>
   21aaa:	cmp	r0, #0
   21aac:	bge.n	21ab8 <write_all_supers@@Base+0x344>
   21aae:	vmov	r0, s17
   21ab2:	ldrd	r2, r3, [r5, #64]	; 0x40
   21ab6:	b.n	219e2 <write_all_supers@@Base+0x26e>
   21ab8:	adds	r7, #1
   21aba:	cmp	r7, #3
   21abc:	beq.n	219f2 <write_all_supers@@Base+0x27e>
   21abe:	movs	r3, #12
   21ac0:	mov.w	r2, #16384	; 0x4000
   21ac4:	muls	r3, r7
   21ac6:	sub.w	r0, r3, #32
   21aca:	rsb	r1, r3, #32
   21ace:	lsl.w	r9, r2, r0
   21ad2:	lsr.w	r1, r2, r1
   21ad6:	orr.w	r9, r9, r1
   21ada:	lsl.w	r8, r2, r3
   21ade:	adds.w	r3, r8, #4096	; 0x1000
   21ae2:	str	r3, [sp, #8]
   21ae4:	adc.w	r3, r9, #0
   21ae8:	str	r3, [sp, #12]
   21aea:	ldrd	r0, r1, [sp, #8]
   21aee:	ldrd	r2, r3, [r5, #72]	; 0x48
   21af2:	cmp	r3, r1
   21af4:	it	eq
   21af6:	cmpeq	r2, r0
   21af8:	bcc.w	219f2 <write_all_supers@@Base+0x27e>
   21afc:	mov	r2, sl
   21afe:	vmov	r1, s16
   21b02:	mov.w	r3, #4064	; 0xfe0
   21b06:	mov	r0, fp
   21b08:	str.w	r8, [r6, #48]	; 0x30
   21b0c:	str.w	r9, [r6, #52]	; 0x34
   21b10:	bl	208e6 <btrfs_csum_data@@Base>
   21b14:	add.w	lr, sp, #60	; 0x3c
   21b18:	mov	ip, sl
   21b1a:	mov	r2, r6
   21b1c:	mov	r3, ip
   21b1e:	adds	r2, #8
   21b20:	ldmia	r3!, {r0, r1}
   21b22:	cmp	r3, lr
   21b24:	str.w	r0, [r2, #-8]
   21b28:	mov	ip, r3
   21b2a:	str.w	r1, [r2, #-4]
   21b2e:	bne.n	21b1c <write_all_supers@@Base+0x3a8>
   21b30:	strd	r8, r9, [sp]
   21b34:	mov.w	r2, #4096	; 0x1000
   21b38:	ldr.w	r1, [r4, #308]	; 0x134
   21b3c:	ldr	r0, [r5, #24]
   21b3e:	blx	8ffc <pwrite64@plt>
   21b42:	cmp.w	r0, #4096	; 0x1000
   21b46:	beq.n	21aa2 <write_all_supers@@Base+0x32e>
   21b48:	blx	8f58 <__errno_location@plt>
   21b4c:	movs	r3, #5
   21b4e:	mov	r7, r0
   21b50:	str	r3, [r0, #0]
   21b52:	ldr	r0, [pc, #52]	; (21b88 <write_all_supers@@Base+0x414>)
   21b54:	ldrd	r2, r3, [r5, #64]	; 0x40
   21b58:	add	r0, pc
   21b5a:	bl	1bd1c <__btrfs_error@@Base>
   21b5e:	ldr	r0, [r7, #0]
   21b60:	b.n	219ec <write_all_supers@@Base+0x278>
   21b62:	add	sp, #68	; 0x44
   21b64:	vpop	{d8}
   21b68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b6c:	str	r5, [sp, #600]	; 0x258
   21b6e:	movs	r4, r0
   21b70:	lsls	r0, r1, #10
   21b72:	movs	r0, r0
   21b74:	asrs	r2, r4, #32
   21b76:	movs	r2, r0
   21b78:	lsrs	r4, r2, #29
   21b7a:	movs	r2, r0
   21b7c:	lsrs	r4, r1, #28
   21b7e:	movs	r2, r0
   21b80:	str	r2, [sp, #664]	; 0x298
   21b82:	movs	r4, r0
   21b84:	lsrs	r2, r4, #26
   21b86:	movs	r2, r0
   21b88:	lsrs	r0, r3, #24
   21b8a:	movs	r2, r0

00021b8c <write_ctree_super@@Base>:
   21b8c:	push	{r4, r5, r6, lr}
   21b8e:	mov	r3, r0
   21b90:	ldr	r0, [r0, #0]
   21b92:	ldr	r5, [pc, #140]	; (21c20 <write_ctree_super@@Base+0x94>)
   21b94:	ldrb.w	r2, [r0, #364]	; 0x16c
   21b98:	add	r5, pc
   21b9a:	lsls	r2, r2, #30
   21b9c:	bmi.n	21c1a <write_ctree_super@@Base+0x8e>
   21b9e:	ldrd	r1, r2, [r0, #28]
   21ba2:	ldr.w	r4, [r0, #308]	; 0x134
   21ba6:	ldrd	r6, r3, [r3, #8]
   21baa:	str	r6, [r4, #72]	; 0x48
   21bac:	str	r3, [r4, #76]	; 0x4c
   21bae:	ldr	r4, [r1, #0]
   21bb0:	ldr.w	r3, [r0, #308]	; 0x134
   21bb4:	ldrd	r6, r4, [r4, #40]	; 0x28
   21bb8:	str	r6, [r3, #80]	; 0x50
   21bba:	str	r4, [r3, #84]	; 0x54
   21bbc:	ldr	r1, [r1, #0]
   21bbe:	ldr.w	r3, [r0, #308]	; 0x134
   21bc2:	ldrb.w	r1, [r1, #196]	; 0xc4
   21bc6:	strb.w	r1, [r3, #198]	; 0xc6
   21bca:	ldr	r1, [r2, #0]
   21bcc:	ldr.w	r3, [r0, #308]	; 0x134
   21bd0:	ldrd	r4, r1, [r1, #40]	; 0x28
   21bd4:	str	r4, [r3, #88]	; 0x58
   21bd6:	str	r1, [r3, #92]	; 0x5c
   21bd8:	ldr	r1, [r2, #0]
   21bda:	ldr.w	r3, [r0, #308]	; 0x134
   21bde:	ldrb.w	r1, [r1, #196]	; 0xc4
   21be2:	strb.w	r1, [r3, #199]	; 0xc7
   21be6:	ldr	r2, [r2, #0]
   21be8:	ldr.w	r3, [r0, #308]	; 0x134
   21bec:	ldr.w	r1, [r2, #176]	; 0xb0
   21bf0:	ldr.w	r2, [r2, #180]	; 0xb4
   21bf4:	str.w	r1, [r3, #164]	; 0xa4
   21bf8:	str.w	r2, [r3, #168]	; 0xa8
   21bfc:	bl	21774 <write_all_supers@@Base>
   21c00:	mov	r4, r0
   21c02:	cbz	r0, 21c16 <write_ctree_super@@Base+0x8a>
   21c04:	ldr	r3, [pc, #28]	; (21c24 <write_ctree_super@@Base+0x98>)
   21c06:	movs	r1, #1
   21c08:	ldr	r2, [pc, #28]	; (21c28 <write_ctree_super@@Base+0x9c>)
   21c0a:	ldr	r0, [r5, r3]
   21c0c:	add	r2, pc
   21c0e:	mov	r3, r4
   21c10:	ldr	r0, [r0, #0]
   21c12:	blx	9040 <__fprintf_chk@plt+0x4>
   21c16:	mov	r0, r4
   21c18:	pop	{r4, r5, r6, pc}
   21c1a:	movs	r4, #0
   21c1c:	b.n	21c16 <write_ctree_super@@Base+0x8a>
   21c1e:	nop
   21c20:	str	r1, [sp, #512]	; 0x200
   21c22:	movs	r4, r0
   21c24:	lsls	r4, r3, #10
   21c26:	movs	r0, r0
   21c28:	lsrs	r0, r4, #22
   21c2a:	movs	r2, r0

00021c2c <close_ctree_fs_info@@Base>:
   21c2c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   21c30:	mov	r5, r0
   21c32:	ldrd	r2, r3, [r5, #232]	; 0xe8
   21c36:	ldr	r6, [r0, #28]
   21c38:	ldrd	r0, r1, [r0, #240]	; 0xf0
   21c3c:	ldr	r7, [pc, #332]	; (21d8c <close_ctree_fs_info@@Base+0x160>)
   21c3e:	cmp	r1, r3
   21c40:	it	eq
   21c42:	cmpeq	r0, r2
   21c44:	add	r7, pc
   21c46:	bne.n	21cb4 <close_ctree_fs_info@@Base+0x88>
   21c48:	ldrb.w	r3, [r5, #365]	; 0x16d
   21c4c:	lsls	r3, r3, #29
   21c4e:	bpl.w	21d88 <close_ctree_fs_info@@Base+0x15c>
   21c52:	ldr.w	r3, [r5, #308]	; 0x134
   21c56:	movs	r2, #95	; 0x5f
   21c58:	movs	r1, #66	; 0x42
   21c5a:	movs	r4, #0
   21c5c:	mov	r0, r5
   21c5e:	strb.w	r2, [r3, #64]	; 0x40
   21c62:	strb.w	r1, [r3, #65]	; 0x41
   21c66:	movs	r1, #72	; 0x48
   21c68:	strb.w	r2, [r3, #70]	; 0x46
   21c6c:	movs	r2, #77	; 0x4d
   21c6e:	strb.w	r1, [r3, #66]	; 0x42
   21c72:	movs	r1, #82	; 0x52
   21c74:	strb.w	r2, [r3, #71]	; 0x47
   21c78:	strb.w	r1, [r3, #67]	; 0x43
   21c7c:	movs	r1, #102	; 0x66
   21c7e:	strb.w	r1, [r3, #68]	; 0x44
   21c82:	movs	r1, #83	; 0x53
   21c84:	strb.w	r1, [r3, #69]	; 0x45
   21c88:	ldr.w	r3, [r6, #464]	; 0x1d0
   21c8c:	ldrb.w	r2, [r3, #365]	; 0x16d
   21c90:	bfi	r2, r4, #2, #1
   21c94:	strb.w	r2, [r3, #365]	; 0x16d
   21c98:	bl	21774 <write_all_supers@@Base>
   21c9c:	cmp	r0, #0
   21c9e:	beq.n	21d88 <close_ctree_fs_info@@Base+0x15c>
   21ca0:	ldr	r3, [pc, #236]	; (21d90 <close_ctree_fs_info@@Base+0x164>)
   21ca2:	movs	r1, #1
   21ca4:	ldr	r2, [pc, #236]	; (21d94 <close_ctree_fs_info@@Base+0x168>)
   21ca6:	ldr	r6, [r7, r3]
   21ca8:	add	r2, pc
   21caa:	mov	r3, r0
   21cac:	ldr	r0, [r6, #0]
   21cae:	blx	9040 <__fprintf_chk@plt+0x4>
   21cb2:	b.n	21d4e <close_ctree_fs_info@@Base+0x122>
   21cb4:	ldr.w	r9, [pc, #224]	; 21d98 <close_ctree_fs_info@@Base+0x16c>
   21cb8:	clz	r3, r6
   21cbc:	ldr	r0, [pc, #220]	; (21d9c <close_ctree_fs_info@@Base+0x170>)
   21cbe:	movw	r2, #1870	; 0x74e
   21cc2:	add	r9, pc
   21cc4:	lsrs	r3, r3, #5
   21cc6:	add.w	r9, r9, #33	; 0x21
   21cca:	add	r0, pc
   21ccc:	mov	r1, r9
   21cce:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   21cd2:	movs	r1, #1
   21cd4:	mov	r0, r6
   21cd6:	bl	2f81c <btrfs_start_transaction@@Base>
   21cda:	cmn.w	r0, #4096	; 0x1000
   21cde:	mov	r4, r0
   21ce0:	bhi.n	21d4e <close_ctree_fs_info@@Base+0x122>
   21ce2:	mov	r1, r6
   21ce4:	ldr	r4, [pc, #184]	; (21da0 <close_ctree_fs_info@@Base+0x174>)
   21ce6:	bl	2fa9c <btrfs_commit_transaction@@Base>
   21cea:	movs	r1, #1
   21cec:	mov	r0, r6
   21cee:	add	r4, pc
   21cf0:	bl	2f81c <btrfs_start_transaction@@Base>
   21cf4:	movw	r2, #1878	; 0x756
   21cf8:	mov	r1, r9
   21cfa:	cmn.w	r0, #4096	; 0x1000
   21cfe:	mov	r8, r0
   21d00:	ldr	r0, [pc, #160]	; (21da4 <close_ctree_fs_info@@Base+0x178>)
   21d02:	ite	ls
   21d04:	movls	r3, #0
   21d06:	movhi	r3, #1
   21d08:	add	r0, pc
   21d0a:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   21d0e:	mov	r1, r5
   21d10:	mov	r0, r8
   21d12:	bl	2f8a8 <commit_tree_roots@@Base>
   21d16:	mov.w	r2, #1880	; 0x758
   21d1a:	mov	r1, r9
   21d1c:	mov	r3, r0
   21d1e:	mov	r0, r4
   21d20:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   21d24:	mov	r1, r6
   21d26:	mov	r0, r8
   21d28:	bl	2f9c0 <__commit_transaction@@Base>
   21d2c:	movw	r2, #1882	; 0x75a
   21d30:	mov	r1, r9
   21d32:	mov	r3, r0
   21d34:	mov	r0, r4
   21d36:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   21d3a:	mov	r0, r8
   21d3c:	bl	21b8c <write_ctree_super@@Base>
   21d40:	mov	r4, r0
   21d42:	mov	r0, r8
   21d44:	blx	8b84 <free@plt+0x4>
   21d48:	cmp	r4, #0
   21d4a:	beq.w	21c48 <close_ctree_fs_info@@Base+0x1c>
   21d4e:	mov	r0, r5
   21d50:	bl	2569e <btrfs_free_block_groups@@Base>
   21d54:	ldr	r1, [pc, #80]	; (21da8 <close_ctree_fs_info@@Base+0x17c>)
   21d56:	add.w	r0, r5, #56	; 0x38
   21d5a:	add	r1, pc
   21d5c:	bl	1c19e <rb_free_nodes@@Base>
   21d60:	mov	r0, r5
   21d62:	bl	210f4 <btrfs_release_all_roots@@Base>
   21d66:	ldr.w	r0, [r5, #352]	; 0x160
   21d6a:	bl	2c7cc <btrfs_close_devices@@Base>
   21d6e:	mov	r6, r0
   21d70:	mov	r0, r5
   21d72:	bl	21158 <btrfs_cleanup_all_caches@@Base>
   21d76:	mov	r0, r5
   21d78:	bl	20eb0 <btrfs_free_fs_info@@Base>
   21d7c:	cmp	r4, #0
   21d7e:	ite	ne
   21d80:	movne	r0, r4
   21d82:	moveq	r0, r6
   21d84:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   21d88:	movs	r4, #0
   21d8a:	b.n	21d4e <close_ctree_fs_info@@Base+0x122>
   21d8c:	str	r0, [sp, #848]	; 0x350
   21d8e:	movs	r4, r0
   21d90:	lsls	r4, r3, #10
   21d92:	movs	r0, r0
   21d94:	lsrs	r4, r0, #20
   21d96:	movs	r2, r0
   21d98:	asrs	r4, r3, #4
   21d9a:	movs	r2, r0
   21d9c:	lsrs	r2, r1, #20
   21d9e:	movs	r2, r0
   21da0:	udf	#84	; 0x54
   21da2:	movs	r1, r0
   21da4:	bvs.n	21d8a <close_ctree_fs_info@@Base+0x15e>
   21da6:	movs	r1, r0
   21da8:	bl	16ddaa <__bss_end__@@Base+0x101b22>

00021dac <clean_tree_block@@Base>:
   21dac:	b.w	1bb6e <clear_extent_buffer_dirty@@Base>

00021db0 <btrfs_mark_buffer_dirty@@Base>:
   21db0:	b.w	1bb34 <set_extent_buffer_dirty@@Base>

00021db4 <btrfs_buffer_uptodate@@Base>:
   21db4:	push	{r0, r1, r2, lr}
   21db6:	mov	r1, r0
   21db8:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   21dbc:	cbz	r0, 21dce <btrfs_buffer_uptodate@@Base+0x1a>
   21dbe:	movs	r0, #1
   21dc0:	str	r0, [sp, #0]
   21dc2:	mov	r0, r1
   21dc4:	bl	206c4 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   21dc8:	clz	r0, r0
   21dcc:	lsrs	r0, r0, #5
   21dce:	add	sp, #12
   21dd0:	ldr.w	pc, [sp], #4

00021dd4 <readahead_tree_block@@Base>:
   21dd4:	push	{r4, r5, r6, r7, lr}
   21dd6:	sub	sp, #44	; 0x2c
   21dd8:	ldr	r5, [pc, #148]	; (21e70 <readahead_tree_block@@Base+0x9c>)
   21dda:	mov	r4, r0
   21ddc:	ldr	r1, [pc, #148]	; (21e74 <readahead_tree_block@@Base+0xa0>)
   21dde:	mov	r6, r2
   21de0:	add	r5, pc
   21de2:	mov	r7, r3
   21de4:	ldr	r1, [r5, r1]
   21de6:	ldr	r1, [r1, #0]
   21de8:	str	r1, [sp, #36]	; 0x24
   21dea:	mov.w	r1, #0
   21dee:	movs	r1, #0
   21df0:	str	r1, [sp, #20]
   21df2:	ldr.w	r1, [r0, #384]	; 0x180
   21df6:	str	r1, [sp, #0]
   21df8:	bl	20ac8 <btrfs_find_tree_block@@Base>
   21dfc:	mov	r5, r0
   21dfe:	cbnz	r0, 21e3e <readahead_tree_block@@Base+0x6a>
   21e00:	add	r3, sp, #20
   21e02:	movs	r1, #0
   21e04:	str	r3, [sp, #4]
   21e06:	mov	r2, r6
   21e08:	add	r3, sp, #24
   21e0a:	mov	r0, r4
   21e0c:	str	r3, [sp, #0]
   21e0e:	mov	r3, r7
   21e10:	strd	r1, r1, [sp, #8]
   21e14:	bl	2e6c8 <btrfs_map_block@@Base>
   21e18:	cbnz	r0, 21e4a <readahead_tree_block@@Base+0x76>
   21e1a:	ldr	r0, [sp, #20]
   21e1c:	ldr	r1, [r0, #8]
   21e1e:	ldrd	r3, r2, [r1, #16]
   21e22:	adds	r3, #1
   21e24:	adc.w	r2, r2, #0
   21e28:	strd	r3, r2, [r1, #16]
   21e2c:	ldr.w	r3, [r4, #384]	; 0x180
   21e30:	str	r3, [sp, #0]
   21e32:	ldrd	r2, r3, [r0, #16]
   21e36:	ldr	r0, [r1, #24]
   21e38:	blx	8d78 <readahead@plt>
   21e3c:	b.n	21e4a <readahead_tree_block@@Base+0x76>
   21e3e:	ldrd	r2, r3, [sp, #64]	; 0x40
   21e42:	bl	21db4 <btrfs_buffer_uptodate@@Base>
   21e46:	cmp	r0, #0
   21e48:	beq.n	21e00 <readahead_tree_block@@Base+0x2c>
   21e4a:	mov	r0, r5
   21e4c:	bl	1b4c0 <free_extent_buffer@@Base>
   21e50:	ldr	r0, [sp, #20]
   21e52:	blx	8b84 <free@plt+0x4>
   21e56:	ldr	r2, [pc, #32]	; (21e78 <readahead_tree_block@@Base+0xa4>)
   21e58:	ldr	r3, [pc, #24]	; (21e74 <readahead_tree_block@@Base+0xa0>)
   21e5a:	add	r2, pc
   21e5c:	ldr	r3, [r2, r3]
   21e5e:	ldr	r2, [r3, #0]
   21e60:	ldr	r3, [sp, #36]	; 0x24
   21e62:	eors	r2, r3
   21e64:	beq.n	21e6a <readahead_tree_block@@Base+0x96>
   21e66:	blx	8c90 <__stack_chk_fail@plt>
   21e6a:	add	sp, #44	; 0x2c
   21e6c:	pop	{r4, r5, r6, r7, pc}
   21e6e:	nop
   21e70:	ldrh	r0, [r7, #56]	; 0x38
   21e72:	movs	r4, r0
   21e74:	lsls	r0, r1, #10
   21e76:	movs	r0, r0
   21e78:	ldrh	r6, [r7, #52]	; 0x34
   21e7a:	movs	r4, r0

00021e7c <write_tree_block@@Base>:
   21e7c:	push	{r0, r1, r2, r4, r5, lr}
   21e7e:	mov	r4, r1
   21e80:	mov	r5, r0
   21e82:	mov	r1, r2
   21e84:	mov	r0, r4
   21e86:	str	r2, [sp, #4]
   21e88:	bl	205e4 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   21e8c:	ldr	r1, [sp, #4]
   21e8e:	cbz	r0, 21eb6 <write_tree_block@@Base+0x3a>
   21e90:	mov	r0, r4
   21e92:	bl	205e4 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   21e96:	ldr	r1, [sp, #4]
   21e98:	mov	r2, r0
   21e9a:	add.w	r0, r4, #352	; 0x160
   21e9e:	bl	20740 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   21ea2:	ldr	r1, [pc, #100]	; (21f08 <write_tree_block@@Base+0x8c>)
   21ea4:	ldr	r0, [pc, #100]	; (21f0c <write_tree_block@@Base+0x90>)
   21ea6:	movs	r3, #1
   21ea8:	add	r1, pc
   21eaa:	mov.w	r2, #516	; 0x204
   21eae:	adds	r1, #53	; 0x35
   21eb0:	add	r0, pc
   21eb2:	bl	208a0 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   21eb6:	cbz	r5, 21eda <write_tree_block@@Base+0x5e>
   21eb8:	mov	r0, r1
   21eba:	ldrd	r2, r3, [r5, #8]
   21ebe:	str	r1, [sp, #4]
   21ec0:	bl	21db4 <btrfs_buffer_uptodate@@Base>
   21ec4:	ldr	r1, [sp, #4]
   21ec6:	cbnz	r0, 21eda <write_tree_block@@Base+0x5e>
   21ec8:	ldr	r1, [pc, #68]	; (21f10 <write_tree_block@@Base+0x94>)
   21eca:	movs	r3, #1
   21ecc:	ldr	r0, [pc, #68]	; (21f14 <write_tree_block@@Base+0x98>)
   21ece:	mov.w	r2, #520	; 0x208
   21ed2:	add	r1, pc
   21ed4:	adds	r1, #53	; 0x35
   21ed6:	add	r0, pc
   21ed8:	b.n	21eb2 <write_tree_block@@Base+0x36>
   21eda:	ldr.w	r2, [r1, #156]	; 0x9c
   21ede:	mov	r0, r4
   21ee0:	ldr.w	r3, [r1, #152]	; 0x98
   21ee4:	str	r1, [sp, #4]
   21ee6:	orr.w	r3, r3, #1
   21eea:	str.w	r2, [r1, #156]	; 0x9c
   21eee:	str.w	r3, [r1, #152]	; 0x98
   21ef2:	movs	r2, #0
   21ef4:	bl	20a8c <csum_tree_block@@Base>
   21ef8:	ldr	r1, [sp, #4]
   21efa:	mov	r0, r4
   21efc:	add	sp, #12
   21efe:	ldmia.w	sp!, {r4, r5, lr}
   21f02:	b.w	20d18 <write_and_map_eb@@Base>
   21f06:	nop
   21f08:	lsrs	r6, r6, #28
   21f0a:	movs	r2, r0
   21f0c:	asrs	r2, r0, #12
   21f0e:	movs	r2, r0
   21f10:	lsrs	r4, r1, #28
   21f12:	movs	r2, r0
   21f14:	asrs	r4, r3, #11
   21f16:	movs	r2, r0

00021f18 <btrfs_set_buffer_uptodate@@Base>:
   21f18:	ldr	r3, [r0, #84]	; 0x54
   21f1a:	orr.w	r3, r3, #4
   21f1e:	str	r3, [r0, #84]	; 0x54
   21f20:	movs	r0, #0
   21f22:	bx	lr

00021f24 <read_tree_block@@Base>:
   21f24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f28:	mov.w	r9, #0
   21f2c:	ldr.w	r1, [r0, #388]	; 0x184
   21f30:	cmp	r3, r9
   21f32:	ldr.w	fp, [pc, #416]	; 220d4 <read_tree_block@@Base+0x1b0>
   21f36:	sub	sp, #28
   21f38:	it	eq
   21f3a:	cmpeq	r2, r1
   21f3c:	mov	r5, r0
   21f3e:	add	fp, pc
   21f40:	mov	r6, r2
   21f42:	mov	r7, r3
   21f44:	bcc.n	21f62 <read_tree_block@@Base+0x3e>
   21f46:	adds.w	r4, r1, #4294967295	; 0xffffffff
   21f4a:	adc.w	ip, r9, #4294967295	; 0xffffffff
   21f4e:	ands	r4, r2
   21f50:	str	r4, [sp, #8]
   21f52:	and.w	r4, ip, r3
   21f56:	str	r4, [sp, #12]
   21f58:	ldrd	r8, r9, [sp, #8]
   21f5c:	orrs.w	r4, r8, r9
   21f60:	beq.n	21f76 <read_tree_block@@Base+0x52>
   21f62:	ldr	r0, [pc, #372]	; (220d8 <read_tree_block@@Base+0x1b4>)
   21f64:	mov	r2, r6
   21f66:	mov	r3, r7
   21f68:	str	r1, [sp, #0]
   21f6a:	add	r0, pc
   21f6c:	bl	1bd1c <__btrfs_error@@Base>
   21f70:	mvn.w	r4, #4
   21f74:	b.n	22022 <read_tree_block@@Base+0xfe>
   21f76:	bl	20ace <btrfs_find_create_tree_block@@Base>
   21f7a:	mov	r4, r0
   21f7c:	cmp	r0, #0
   21f7e:	beq.w	220c4 <read_tree_block@@Base+0x1a0>
   21f82:	ldrd	r2, r3, [sp, #64]	; 0x40
   21f86:	bl	21db4 <btrfs_buffer_uptodate@@Base>
   21f8a:	mov	r6, r0
   21f8c:	cmp	r0, #0
   21f8e:	bne.n	22022 <read_tree_block@@Base+0xfe>
   21f90:	ldr	r3, [r4, #76]	; 0x4c
   21f92:	add.w	sl, r4, #68	; 0x44
   21f96:	mov	r8, r6
   21f98:	movs	r7, #1
   21f9a:	strd	r3, r0, [sp]
   21f9e:	mov	r0, r5
   21fa0:	ldrd	r2, r3, [r4, #40]	; 0x28
   21fa4:	bl	2de54 <btrfs_num_copies@@Base>
   21fa8:	str	r6, [sp, #20]
   21faa:	mov	r9, r0
   21fac:	mov	r2, r7
   21fae:	mov	r1, r4
   21fb0:	mov	r0, r5
   21fb2:	bl	20ae0 <read_whole_eb@@Base>
   21fb6:	cmp	r0, #0
   21fb8:	bne.n	22044 <read_tree_block@@Base+0x120>
   21fba:	movs	r2, #1
   21fbc:	mov	r1, r4
   21fbe:	mov	r0, r5
   21fc0:	bl	20a8c <csum_tree_block@@Base>
   21fc4:	cmp	r0, #0
   21fc6:	bne.n	22044 <read_tree_block@@Base+0x120>
   21fc8:	mov	r1, r4
   21fca:	mov	r0, r5
   21fcc:	bl	205e4 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   21fd0:	cbnz	r0, 22044 <read_tree_block@@Base+0x120>
   21fd2:	ldrd	r2, r3, [sp, #64]	; 0x40
   21fd6:	mov	r0, r4
   21fd8:	str	r6, [sp, #0]
   21fda:	bl	206c4 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   21fde:	cbnz	r0, 22044 <read_tree_block@@Base+0x120>
   21fe0:	ldr	r3, [r4, #84]	; 0x54
   21fe2:	lsls	r1, r3, #21
   21fe4:	bpl.n	22006 <read_tree_block@@Base+0xe2>
   21fe6:	ldr	r3, [r4, #68]	; 0x44
   21fe8:	cmp	sl, r3
   21fea:	bne.n	22006 <read_tree_block@@Base+0xe2>
   21fec:	ldr.w	r3, [r5, #348]	; 0x15c
   21ff0:	add.w	r2, r5, #344	; 0x158
   21ff4:	str.w	sl, [r5, #348]	; 0x15c
   21ff8:	strd	r2, r3, [r4, #68]	; 0x44
   21ffc:	str.w	sl, [r3]
   22000:	ldr	r3, [r4, #80]	; 0x50
   22002:	adds	r3, #1
   22004:	str	r3, [r4, #80]	; 0x50
   22006:	ldrb.w	r1, [r4, #196]	; 0xc4
   2200a:	mov	r2, r4
   2200c:	cbz	r1, 22034 <read_tree_block@@Base+0x110>
   2200e:	movs	r1, #0
   22010:	mov	r0, r5
   22012:	bl	1d2c0 <btrfs_check_node@@Base>
   22016:	cbz	r0, 2201c <read_tree_block@@Base+0xf8>
   22018:	cmp	r7, r8
   2201a:	bne.n	2203c <read_tree_block@@Base+0x118>
   2201c:	mov	r0, r4
   2201e:	bl	21f18 <btrfs_set_buffer_uptodate@@Base>
   22022:	mov	r0, r4
   22024:	add	sp, #28
   22026:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2202a:	movs	r6, #0
   2202c:	b.n	21fac <read_tree_block@@Base+0x88>
   2202e:	mov	r7, r8
   22030:	movs	r6, #1
   22032:	b.n	21fac <read_tree_block@@Base+0x88>
   22034:	mov	r0, r5
   22036:	bl	1d910 <btrfs_check_leaf@@Base>
   2203a:	b.n	22016 <read_tree_block@@Base+0xf2>
   2203c:	cmp.w	r8, #0
   22040:	bgt.n	220ca <read_tree_block@@Base+0x1a6>
   22042:	mov	r8, r7
   22044:	cbz	r6, 22090 <read_tree_block@@Base+0x16c>
   22046:	cmp.w	r8, #0
   2204a:	bgt.n	220ce <read_tree_block@@Base+0x1aa>
   2204c:	mov	r1, r4
   2204e:	mov	r0, r5
   22050:	bl	205e4 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   22054:	ldrb.w	r3, [r5, #364]	; 0x16c
   22058:	cbz	r0, 2207a <read_tree_block@@Base+0x156>
   2205a:	lsls	r2, r3, #26
   2205c:	bmi.n	22072 <read_tree_block@@Base+0x14e>
   2205e:	mov	r1, r4
   22060:	mov	r0, r5
   22062:	bl	205e4 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   22066:	mov	r1, r4
   22068:	mov	r2, r0
   2206a:	add.w	r0, r5, #352	; 0x160
   2206e:	bl	20740 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   22072:	mov	r0, r4
   22074:	bl	1b4c4 <free_extent_buffer_nocache@@Base>
   22078:	b.n	21f70 <read_tree_block@@Base+0x4c>
   2207a:	lsls	r3, r3, #26
   2207c:	bmi.n	22072 <read_tree_block@@Base+0x14e>
   2207e:	ldr	r3, [pc, #92]	; (220dc <read_tree_block@@Base+0x1b8>)
   22080:	ldr	r0, [pc, #92]	; (220e0 <read_tree_block@@Base+0x1bc>)
   22082:	ldr.w	r3, [fp, r3]
   22086:	add	r0, pc
   22088:	ldr	r1, [r3, #0]
   2208a:	blx	91a8 <fputs@plt+0x4>
   2208e:	b.n	22072 <read_tree_block@@Base+0x14e>
   22090:	cmp.w	r9, #1
   22094:	beq.n	22030 <read_tree_block@@Base+0x10c>
   22096:	ldr.w	r3, [r4, #180]	; 0xb4
   2209a:	ldrd	r0, r1, [sp, #8]
   2209e:	ldr.w	r2, [r4, #176]	; 0xb0
   220a2:	cmp	r1, r3
   220a4:	it	eq
   220a6:	cmpeq	r0, r2
   220a8:	it	cc
   220aa:	strcc	r7, [sp, #20]
   220ac:	add.w	r7, r7, #1
   220b0:	it	cc
   220b2:	strdcc	r2, r3, [sp, #8]
   220b6:	cmp	r9, r7
   220b8:	bge.n	2202a <read_tree_block@@Base+0x106>
   220ba:	cmp.w	r8, #0
   220be:	bgt.n	2202e <read_tree_block@@Base+0x10a>
   220c0:	ldr	r7, [sp, #20]
   220c2:	b.n	22030 <read_tree_block@@Base+0x10c>
   220c4:	mvn.w	r4, #11
   220c8:	b.n	22022 <read_tree_block@@Base+0xfe>
   220ca:	cmp	r6, #0
   220cc:	beq.n	22090 <read_tree_block@@Base+0x16c>
   220ce:	mov	r7, r8
   220d0:	b.n	21fac <read_tree_block@@Base+0x88>
   220d2:	nop
   220d4:	ldrh	r2, [r3, #46]	; 0x2e
   220d6:	movs	r4, r0
   220d8:	lsrs	r0, r6, #9
   220da:	movs	r2, r0
   220dc:	lsls	r4, r3, #10
   220de:	movs	r0, r0
   220e0:	lsrs	r3, r1, #6
   220e2:	movs	r2, r0
   220e4:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   220e8:	mov	r5, r0
   220ea:	ldr	r4, [sp, #32]
   220ec:	mov	r7, r3
   220ee:	mov	r8, r2
   220f0:	mov	r6, r1
   220f2:	mov	r0, r4
   220f4:	bl	20e30 <btrfs_setup_root@@Base>
   220f8:	addw	r3, r4, #447	; 0x1bf
   220fc:	mov	r0, r5
   220fe:	str	r3, [sp, #4]
   22100:	mov	r2, r8
   22102:	add.w	r3, r4, #8
   22106:	str	r3, [sp, #0]
   22108:	mov	r3, r7
   2210a:	bl	2c1e8 <btrfs_find_last_root@@Base>
   2210e:	mov	r5, r0
   22110:	cbnz	r0, 2213a <read_tree_block@@Base+0x216>
   22112:	ldr.w	r2, [r4, #168]	; 0xa8
   22116:	mov	r0, r6
   22118:	ldr.w	r3, [r4, #172]	; 0xac
   2211c:	strd	r2, r3, [sp]
   22120:	ldr.w	r2, [r4, #184]	; 0xb8
   22124:	ldr.w	r3, [r4, #188]	; 0xbc
   22128:	bl	21f24 <read_tree_block@@Base>
   2212c:	str	r0, [r4, #0]
   2212e:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   22132:	cmp	r0, #0
   22134:	it	eq
   22136:	mvneq.w	r5, #4
   2213a:	mov	r0, r5
   2213c:	add	sp, #8
   2213e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   22142:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   22144:	mov	r4, r0
   22146:	str	r2, [sp, #0]
   22148:	mov	r6, r1
   2214a:	mov	r5, r2
   2214c:	mov	r1, r0
   2214e:	ldrd	r2, r3, [sp, #32]
   22152:	ldr	r0, [r0, #28]
   22154:	ldr	r7, [sp, #40]	; 0x28
   22156:	bl	220e4 <read_tree_block@@Base+0x1c0>
   2215a:	cbz	r0, 2216e <read_tree_block@@Base+0x24a>
   2215c:	lsls	r3, r6, #30
   2215e:	mov	r1, r7
   22160:	bmi.n	22172 <read_tree_block@@Base+0x24e>
   22162:	ldr	r0, [pc, #56]	; (2219c <read_tree_block@@Base+0x278>)
   22164:	add	r0, pc
   22166:	bl	1bd1c <__btrfs_error@@Base>
   2216a:	mvn.w	r0, #4
   2216e:	add	sp, #12
   22170:	pop	{r4, r5, r6, r7, pc}
   22172:	ldr	r0, [pc, #44]	; (221a0 <read_tree_block@@Base+0x27c>)
   22174:	add	r0, pc
   22176:	bl	1bca0 <__btrfs_warning@@Base>
   2217a:	movs	r2, #0
   2217c:	movs	r3, #0
   2217e:	mov	r0, r4
   22180:	bl	20ace <btrfs_find_create_tree_block@@Base>
   22184:	str	r0, [r5, #0]
   22186:	cbz	r0, 22194 <read_tree_block@@Base+0x270>
   22188:	ldr	r3, [r0, #84]	; 0x54
   2218a:	bic.w	r3, r3, #4
   2218e:	str	r3, [r0, #84]	; 0x54
   22190:	movs	r0, #0
   22192:	b.n	2216e <read_tree_block@@Base+0x24a>
   22194:	mvn.w	r0, #11
   22198:	b.n	2216e <read_tree_block@@Base+0x24a>
   2219a:	nop
   2219c:	lsrs	r0, r0, #3
   2219e:	movs	r2, r0
   221a0:	lsrs	r0, r1, #3
   221a2:	movs	r2, r0

000221a4 <btrfs_read_fs_root_no_cache@@Base>:
   221a4:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   221a8:	mov	r7, r0
   221aa:	ldr.w	sl, [r0, #28]
   221ae:	mov	r5, r1
   221b0:	movs	r0, #1
   221b2:	mov.w	r1, #544	; 0x220
   221b6:	blx	8ab8 <calloc@plt+0x4>
   221ba:	mov	r4, r0
   221bc:	cbz	r0, 2220a <btrfs_read_fs_root_no_cache@@Base+0x66>
   221be:	ldr.w	r9, [r5, #13]
   221c2:	ldr.w	r8, [r5, #9]
   221c6:	cmp.w	r9, #4294967295	; 0xffffffff
   221ca:	ldr	r2, [r5, #0]
   221cc:	it	eq
   221ce:	cmpeq.w	r8, #4294967295	; 0xffffffff
   221d2:	ldr	r3, [r5, #4]
   221d4:	bne.n	221f6 <btrfs_read_fs_root_no_cache@@Base+0x52>
   221d6:	str	r0, [sp, #0]
   221d8:	mov	r1, r7
   221da:	mov	r0, sl
   221dc:	bl	220e4 <read_tree_block@@Base+0x1c0>
   221e0:	mov	r5, r0
   221e2:	cmp	r0, #0
   221e4:	beq.n	2229e <btrfs_read_fs_root_no_cache@@Base+0xfa>
   221e6:	mov	r0, r4
   221e8:	mov	r4, r5
   221ea:	blx	8b84 <free@plt+0x4>
   221ee:	mov	r0, r4
   221f0:	add	sp, #8
   221f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   221f6:	mov	r1, r7
   221f8:	bl	20e30 <btrfs_setup_root@@Base>
   221fc:	bl	1c6f0 <btrfs_alloc_path@@Base>
   22200:	mov	r6, r0
   22202:	cbnz	r0, 22210 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   22204:	mov	r0, r4
   22206:	blx	8b84 <free@plt+0x4>
   2220a:	mvn.w	r4, #11
   2220e:	b.n	221ee <btrfs_read_fs_root_no_cache@@Base+0x4a>
   22210:	movs	r0, #0
   22212:	mov	r3, r6
   22214:	mov	r2, r5
   22216:	mov	r1, sl
   22218:	strd	r0, r0, [sp]
   2221c:	bl	1eadc <btrfs_search_slot@@Base>
   22220:	subs.w	r8, r0, #0
   22224:	beq.n	22242 <btrfs_read_fs_root_no_cache@@Base+0x9e>
   22226:	ble.n	2222c <btrfs_read_fs_root_no_cache@@Base+0x88>
   22228:	mvn.w	r8, #1
   2222c:	mov	r0, r6
   2222e:	bl	1c71e <btrfs_free_path@@Base>
   22232:	cmp.w	r8, #0
   22236:	beq.n	22278 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   22238:	mov	r0, r4
   2223a:	mov	r4, r8
   2223c:	blx	8b84 <free@plt+0x4>
   22240:	b.n	221ee <btrfs_read_fs_root_no_cache@@Base+0x4a>
   22242:	ldr	r0, [r6, #0]
   22244:	movs	r2, #25
   22246:	ldr	r3, [r6, #32]
   22248:	add.w	r1, r4, #8
   2224c:	mla	r3, r2, r3, r0
   22250:	ldr.w	r2, [r3, #214]	; 0xd6
   22254:	movw	r3, #439	; 0x1b7
   22258:	adds	r2, #101	; 0x65
   2225a:	bl	1bbba <read_extent_buffer@@Base>
   2225e:	addw	r3, r4, #447	; 0x1bf
   22262:	add.w	r2, r5, #16
   22266:	ldr.w	r1, [r5], #4
   2226a:	cmp	r5, r2
   2226c:	str.w	r1, [r3], #4
   22270:	bne.n	22266 <btrfs_read_fs_root_no_cache@@Base+0xc2>
   22272:	ldrb	r2, [r5, #0]
   22274:	strb	r2, [r3, #0]
   22276:	b.n	2222c <btrfs_read_fs_root_no_cache@@Base+0x88>
   22278:	ldrd	r2, r3, [r4, #168]	; 0xa8
   2227c:	mov	r0, r7
   2227e:	strd	r2, r3, [sp]
   22282:	ldrd	r2, r3, [r4, #184]	; 0xb8
   22286:	bl	21f24 <read_tree_block@@Base>
   2228a:	str	r0, [r4, #0]
   2228c:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   22290:	cbnz	r0, 2229e <btrfs_read_fs_root_no_cache@@Base+0xfa>
   22292:	mov	r0, r4
   22294:	mvn.w	r4, #4
   22298:	blx	8b84 <free@plt+0x4>
   2229c:	b.n	221ee <btrfs_read_fs_root_no_cache@@Base+0x4a>
   2229e:	movs	r3, #1
   222a0:	str.w	r3, [r4, #488]	; 0x1e8
   222a4:	b.n	221ee <btrfs_read_fs_root_no_cache@@Base+0x4a>

000222a6 <btrfs_read_fs_root@@Base>:
   222a6:	ldr	r2, [pc, #320]	; (223e8 <btrfs_read_fs_root@@Base+0x142>)
   222a8:	ldr	r3, [pc, #320]	; (223ec <btrfs_read_fs_root@@Base+0x146>)
   222aa:	add	r2, pc
   222ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   222b0:	sub	sp, #28
   222b2:	ldr	r3, [r2, r3]
   222b4:	mov	r5, r0
   222b6:	ldr	r2, [r1, #0]
   222b8:	mov	r9, r1
   222ba:	ldr	r3, [r3, #0]
   222bc:	str	r3, [sp, #20]
   222be:	mov.w	r3, #0
   222c2:	ldr	r3, [r1, #4]
   222c4:	ldr.w	r8, [pc, #296]	; 223f0 <btrfs_read_fs_root@@Base+0x14a>
   222c8:	cmp	r3, #0
   222ca:	it	eq
   222cc:	cmpeq	r2, #1
   222ce:	add	r8, pc
   222d0:	strd	r2, r3, [sp, #8]
   222d4:	bne.n	222ec <btrfs_read_fs_root@@Base+0x46>
   222d6:	ldr	r4, [r0, #28]
   222d8:	ldr	r2, [pc, #280]	; (223f4 <btrfs_read_fs_root@@Base+0x14e>)
   222da:	ldr	r3, [pc, #272]	; (223ec <btrfs_read_fs_root@@Base+0x146>)
   222dc:	add	r2, pc
   222de:	ldr	r3, [r2, r3]
   222e0:	ldr	r2, [r3, #0]
   222e2:	ldr	r3, [sp, #20]
   222e4:	eors	r2, r3
   222e6:	beq.n	223de <btrfs_read_fs_root@@Base+0x138>
   222e8:	blx	8c90 <__stack_chk_fail@plt>
   222ec:	cmp	r3, #0
   222ee:	it	eq
   222f0:	cmpeq	r2, #2
   222f2:	bne.n	222f8 <btrfs_read_fs_root@@Base+0x52>
   222f4:	ldr	r4, [r0, #24]
   222f6:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   222f8:	cmp	r3, #0
   222fa:	it	eq
   222fc:	cmpeq	r2, #3
   222fe:	bne.n	22304 <btrfs_read_fs_root@@Base+0x5e>
   22300:	ldr	r4, [r0, #32]
   22302:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   22304:	cmp	r3, #0
   22306:	it	eq
   22308:	cmpeq	r2, #4
   2230a:	bne.n	22310 <btrfs_read_fs_root@@Base+0x6a>
   2230c:	ldr	r4, [r0, #36]	; 0x24
   2230e:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   22310:	cmp	r3, #0
   22312:	it	eq
   22314:	cmpeq	r2, #7
   22316:	bne.n	2231c <btrfs_read_fs_root@@Base+0x76>
   22318:	ldr	r4, [r0, #40]	; 0x28
   2231a:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   2231c:	cmp	r3, #0
   2231e:	it	eq
   22320:	cmpeq	r2, #9
   22322:	bne.n	22330 <btrfs_read_fs_root@@Base+0x8a>
   22324:	ldr	r4, [r0, #52]	; 0x34
   22326:	cmp	r4, #0
   22328:	it	eq
   2232a:	mvneq.w	r4, #1
   2232e:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   22330:	cmp	r3, #0
   22332:	it	eq
   22334:	cmpeq	r2, #8
   22336:	bne.n	22344 <btrfs_read_fs_root@@Base+0x9e>
   22338:	ldrb.w	r3, [r0, #364]	; 0x16c
   2233c:	lsls	r3, r3, #27
   2233e:	bpl.n	223d8 <btrfs_read_fs_root@@Base+0x132>
   22340:	ldr	r4, [r0, #44]	; 0x2c
   22342:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   22344:	cmp	r3, #0
   22346:	it	eq
   22348:	cmpeq	r2, #10
   2234a:	bne.n	22350 <btrfs_read_fs_root@@Base+0xaa>
   2234c:	ldr	r4, [r0, #48]	; 0x30
   2234e:	b.n	22326 <btrfs_read_fs_root@@Base+0x80>
   22350:	mov.w	r1, #4294967295	; 0xffffffff
   22354:	cmp	r3, r1
   22356:	mvn.w	r0, #7
   2235a:	it	eq
   2235c:	cmpeq	r2, r0
   2235e:	beq.n	2239e <btrfs_read_fs_root@@Base+0xf8>
   22360:	ldr.w	r3, [r9, #9]
   22364:	ldr.w	r2, [r9, #13]
   22368:	ands	r3, r2
   2236a:	adds	r3, #1
   2236c:	it	ne
   2236e:	movne	r3, #1
   22370:	ldr	r6, [pc, #132]	; (223f8 <btrfs_read_fs_root@@Base+0x152>)
   22372:	movw	r2, #735	; 0x2df
   22376:	ldr	r0, [pc, #132]	; (223fc <btrfs_read_fs_root@@Base+0x156>)
   22378:	add.w	r7, r5, #56	; 0x38
   2237c:	add	r6, pc
   2237e:	adds	r6, #70	; 0x46
   22380:	add	r0, pc
   22382:	mov	r1, r6
   22384:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   22388:	ldr	r2, [pc, #116]	; (22400 <btrfs_read_fs_root@@Base+0x15a>)
   2238a:	add	r1, sp, #8
   2238c:	movs	r3, #0
   2238e:	add	r2, pc
   22390:	mov	r0, r7
   22392:	bl	1c160 <rb_search@@Base>
   22396:	cbz	r0, 223a2 <btrfs_read_fs_root@@Base+0xfc>
   22398:	sub.w	r4, r0, #528	; 0x210
   2239c:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   2239e:	movs	r3, #1
   223a0:	b.n	22370 <btrfs_read_fs_root@@Base+0xca>
   223a2:	mov	r1, r9
   223a4:	mov	r0, r5
   223a6:	bl	221a4 <btrfs_read_fs_root_no_cache@@Base>
   223aa:	cmn.w	r0, #4096	; 0x1000
   223ae:	mov	r4, r0
   223b0:	bhi.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   223b2:	ldr	r3, [pc, #80]	; (22404 <btrfs_read_fs_root@@Base+0x15e>)
   223b4:	add.w	r1, r0, #528	; 0x210
   223b8:	mov	r0, r7
   223ba:	ldr.w	r3, [r8, r3]
   223be:	mov	r2, r3
   223c0:	str	r3, [sp, #4]
   223c2:	bl	1c118 <rb_insert@@Base>
   223c6:	movw	r2, #749	; 0x2ed
   223ca:	mov	r1, r6
   223cc:	mov	r3, r0
   223ce:	ldr	r0, [pc, #56]	; (22408 <btrfs_read_fs_root@@Base+0x162>)
   223d0:	add	r0, pc
   223d2:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   223d6:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   223d8:	mvn.w	r4, #1
   223dc:	b.n	222d8 <btrfs_read_fs_root@@Base+0x32>
   223de:	mov	r0, r4
   223e0:	add	sp, #28
   223e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   223e6:	nop
   223e8:	ldrh	r6, [r5, #18]
   223ea:	movs	r4, r0
   223ec:	lsls	r0, r1, #10
   223ee:	movs	r0, r0
   223f0:	ldrh	r2, [r1, #18]
   223f2:	movs	r4, r0
   223f4:	ldrh	r4, [r7, #16]
   223f6:	movs	r4, r0
   223f8:	lsrs	r2, r4, #9
   223fa:	movs	r2, r0
   223fc:	lsls	r1, r4, #27
   223fe:	movs	r2, r0
   22400:	b.n	22742 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   22402:	vrshr.u64	q8, q6, #1
   22406:	movs	r0, r0
   22408:	bvc.n	224f0 <btrfs_setup_all_roots@@Base+0xe4>
   2240a:	movs	r1, r0

0002240c <btrfs_setup_all_roots@@Base>:
   2240c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22410:	mov	r6, r2
   22412:	ldr	r2, [pc, #716]	; (226e0 <btrfs_setup_all_roots@@Base+0x2d4>)
   22414:	mov	r7, r3
   22416:	ldr	r3, [pc, #716]	; (226e4 <btrfs_setup_all_roots@@Base+0x2d8>)
   22418:	sub	sp, #60	; 0x3c
   2241a:	add	r2, pc
   2241c:	ldr.w	r9, [r0, #28]
   22420:	ldr.w	r5, [r0, #308]	; 0x134
   22424:	mov	r1, r0
   22426:	ldr	r3, [r2, r3]
   22428:	mov	r4, r0
   2242a:	mov	r0, r9
   2242c:	movs	r2, #1
   2242e:	ldr	r3, [r3, #0]
   22430:	str	r3, [sp, #52]	; 0x34
   22432:	mov.w	r3, #0
   22436:	movs	r3, #0
   22438:	ldr.w	sl, [sp, #96]	; 0x60
   2243c:	bl	20e30 <btrfs_setup_root@@Base>
   22440:	ldr	r3, [r5, #76]	; 0x4c
   22442:	orrs.w	r2, r6, r7
   22446:	ldr.w	r8, [pc, #672]	; 226e8 <btrfs_setup_all_roots@@Base+0x2dc>
   2244a:	ldr.w	fp, [r5, #72]	; 0x48
   2244e:	add	r8, pc
   22450:	str	r3, [sp, #28]
   22452:	and.w	r3, sl, #4
   22456:	bne.n	22488 <btrfs_setup_all_roots@@Base+0x7c>
   22458:	cbnz	r3, 2248c <btrfs_setup_all_roots@@Base+0x80>
   2245a:	ldr	r6, [r5, #80]	; 0x50
   2245c:	ldr	r7, [r5, #84]	; 0x54
   2245e:	ldr	r3, [sp, #28]
   22460:	mov	r2, r6
   22462:	mov	r0, r4
   22464:	str.w	fp, [sp]
   22468:	str	r3, [sp, #4]
   2246a:	mov	r3, r7
   2246c:	bl	21f24 <read_tree_block@@Base>
   22470:	str.w	r0, [r9]
   22474:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   22478:	cbnz	r0, 224dc <btrfs_setup_all_roots@@Base+0xd0>
   2247a:	ldr	r3, [pc, #624]	; (226ec <btrfs_setup_all_roots@@Base+0x2e0>)
   2247c:	ldr	r0, [pc, #624]	; (226f0 <btrfs_setup_all_roots@@Base+0x2e4>)
   2247e:	ldr.w	r3, [r8, r3]
   22482:	add	r0, pc
   22484:	ldr	r1, [r3, #0]
   22486:	b.n	224a2 <btrfs_setup_all_roots@@Base+0x96>
   22488:	cmp	r3, #0
   2248a:	beq.n	2245e <btrfs_setup_all_roots@@Base+0x52>
   2248c:	mov	r0, r5
   2248e:	bl	2055a <btrfs_fs_roots_compare_roots@@Base+0x4>
   22492:	cmp	r0, #3
   22494:	ble.n	224c0 <btrfs_setup_all_roots@@Base+0xb4>
   22496:	ldr	r3, [pc, #596]	; (226ec <btrfs_setup_all_roots@@Base+0x2e0>)
   22498:	ldr	r0, [pc, #600]	; (226f4 <btrfs_setup_all_roots@@Base+0x2e8>)
   2249a:	ldr.w	r3, [r8, r3]
   2249e:	add	r0, pc
   224a0:	ldr	r1, [r3, #0]
   224a2:	blx	91a8 <fputs@plt+0x4>
   224a6:	mvn.w	r6, #4
   224aa:	ldr	r2, [pc, #588]	; (226f8 <btrfs_setup_all_roots@@Base+0x2ec>)
   224ac:	ldr	r3, [pc, #564]	; (226e4 <btrfs_setup_all_roots@@Base+0x2d8>)
   224ae:	add	r2, pc
   224b0:	ldr	r3, [r2, r3]
   224b2:	ldr	r2, [r3, #0]
   224b4:	ldr	r3, [sp, #52]	; 0x34
   224b6:	eors	r2, r3
   224b8:	beq.w	226d8 <btrfs_setup_all_roots@@Base+0x2cc>
   224bc:	blx	8c90 <__stack_chk_fail@plt>
   224c0:	ldr.w	r3, [r4, #308]	; 0x134
   224c4:	movs	r2, #168	; 0xa8
   224c6:	addw	r3, r3, #2859	; 0xb2b
   224ca:	mla	r0, r2, r0, r3
   224ce:	ldr	r3, [r0, #12]
   224d0:	ldr.w	fp, [r0, #8]
   224d4:	ldr	r6, [r0, #0]
   224d6:	ldr	r7, [r0, #4]
   224d8:	str	r3, [sp, #28]
   224da:	b.n	2245e <btrfs_setup_all_roots@@Base+0x52>
   224dc:	ldr	r3, [pc, #540]	; (226fc <btrfs_setup_all_roots@@Base+0x2f0>)
   224de:	movs	r2, #2
   224e0:	mov	r1, sl
   224e2:	mov	r0, r4
   224e4:	add	r3, pc
   224e6:	str	r3, [sp, #8]
   224e8:	movs	r3, #0
   224ea:	strd	r2, r3, [sp]
   224ee:	ldr	r2, [r4, #24]
   224f0:	bl	22142 <read_tree_block@@Base+0x21e>
   224f4:	mov	r6, r0
   224f6:	cmp	r0, #0
   224f8:	bne.n	224aa <btrfs_setup_all_roots@@Base+0x9e>
   224fa:	ldr	r3, [r4, #24]
   224fc:	movs	r7, #1
   224fe:	movs	r2, #4
   22500:	mov	r1, r4
   22502:	mov	r0, r9
   22504:	str.w	r7, [r3, #492]	; 0x1ec
   22508:	ldr	r3, [r4, #36]	; 0x24
   2250a:	str	r3, [sp, #0]
   2250c:	movs	r3, #0
   2250e:	bl	220e4 <read_tree_block@@Base+0x1c0>
   22512:	cbz	r0, 22522 <btrfs_setup_all_roots@@Base+0x116>
   22514:	ldr	r3, [pc, #468]	; (226ec <btrfs_setup_all_roots@@Base+0x2e0>)
   22516:	ldr	r0, [pc, #488]	; (22700 <btrfs_setup_all_roots@@Base+0x2f4>)
   22518:	ldr.w	r3, [r8, r3]
   2251c:	add	r0, pc
   2251e:	ldr	r1, [r3, #0]
   22520:	b.n	224a2 <btrfs_setup_all_roots@@Base+0x96>
   22522:	ldr	r3, [r4, #36]	; 0x24
   22524:	movs	r2, #7
   22526:	mov	r1, sl
   22528:	mov	r0, r4
   2252a:	str.w	r7, [r3, #492]	; 0x1ec
   2252e:	ldr	r3, [pc, #468]	; (22704 <btrfs_setup_all_roots@@Base+0x2f8>)
   22530:	add	r3, pc
   22532:	str	r3, [sp, #8]
   22534:	movs	r3, #0
   22536:	strd	r2, r3, [sp]
   2253a:	ldr	r2, [r4, #40]	; 0x28
   2253c:	bl	22142 <read_tree_block@@Base+0x21e>
   22540:	mov	r6, r0
   22542:	cmp	r0, #0
   22544:	bne.n	224aa <btrfs_setup_all_roots@@Base+0x9e>
   22546:	ldr	r3, [r4, #40]	; 0x28
   22548:	movs	r2, #9
   2254a:	mov	r1, r4
   2254c:	mov	r0, r9
   2254e:	str.w	r7, [r3, #492]	; 0x1ec
   22552:	ldr	r3, [r4, #52]	; 0x34
   22554:	str	r3, [sp, #0]
   22556:	movs	r3, #0
   22558:	bl	220e4 <read_tree_block@@Base+0x1c0>
   2255c:	cbz	r0, 225b4 <btrfs_setup_all_roots@@Base+0x1a8>
   2255e:	ldr	r0, [r4, #52]	; 0x34
   22560:	blx	8b84 <free@plt+0x4>
   22564:	str	r6, [r4, #52]	; 0x34
   22566:	ldr	r3, [r4, #44]	; 0x2c
   22568:	movs	r2, #8
   2256a:	mov	r1, r4
   2256c:	mov	r0, r9
   2256e:	str	r3, [sp, #0]
   22570:	movs	r3, #0
   22572:	bl	220e4 <read_tree_block@@Base+0x1c0>
   22576:	cbz	r0, 225bc <btrfs_setup_all_roots@@Base+0x1b0>
   22578:	ldr	r0, [r4, #44]	; 0x2c
   2257a:	blx	8b84 <free@plt+0x4>
   2257e:	movs	r3, #0
   22580:	str	r3, [r4, #44]	; 0x2c
   22582:	ldr.w	r3, [r4, #308]	; 0x134
   22586:	ldr.w	r1, [r3, #180]	; 0xb4
   2258a:	movs	r3, #0
   2258c:	and.w	r2, r1, #1
   22590:	orrs	r3, r2
   22592:	beq.n	225d2 <btrfs_setup_all_roots@@Base+0x1c6>
   22594:	ldr	r3, [r4, #48]	; 0x30
   22596:	movs	r2, #10
   22598:	mov	r1, r4
   2259a:	mov	r0, r9
   2259c:	str	r3, [sp, #0]
   2259e:	movs	r3, #0
   225a0:	bl	220e4 <read_tree_block@@Base+0x1c0>
   225a4:	cbz	r0, 225ca <btrfs_setup_all_roots@@Base+0x1be>
   225a6:	ldr	r3, [pc, #324]	; (226ec <btrfs_setup_all_roots@@Base+0x2e0>)
   225a8:	ldr	r0, [pc, #348]	; (22708 <btrfs_setup_all_roots@@Base+0x2fc>)
   225aa:	ldr.w	r3, [r8, r3]
   225ae:	add	r0, pc
   225b0:	ldr	r1, [r3, #0]
   225b2:	b.n	224a2 <btrfs_setup_all_roots@@Base+0x96>
   225b4:	ldr	r3, [r4, #52]	; 0x34
   225b6:	str.w	r7, [r3, #492]	; 0x1ec
   225ba:	b.n	22566 <btrfs_setup_all_roots@@Base+0x15a>
   225bc:	ldrb.w	r3, [r4, #364]	; 0x16c
   225c0:	orr.w	r3, r3, #16
   225c4:	strb.w	r3, [r4, #364]	; 0x16c
   225c8:	b.n	22582 <btrfs_setup_all_roots@@Base+0x176>
   225ca:	ldr	r3, [r4, #48]	; 0x30
   225cc:	movs	r2, #1
   225ce:	str.w	r2, [r3, #492]	; 0x1ec
   225d2:	ldr	r3, [r5, #96]	; 0x60
   225d4:	mov.w	r0, #544	; 0x220
   225d8:	str	r3, [sp, #16]
   225da:	ldr	r3, [r5, #100]	; 0x64
   225dc:	str	r3, [sp, #20]
   225de:	blx	8e40 <malloc@plt+0x4>
   225e2:	mov	r7, r0
   225e4:	cmp	r0, #0
   225e6:	beq.n	2267a <btrfs_setup_all_roots@@Base+0x26e>
   225e8:	ldrd	r2, r3, [sp, #16]
   225ec:	orrs	r3, r2
   225ee:	bne.n	22636 <btrfs_setup_all_roots@@Base+0x22a>
   225f0:	blx	8b84 <free@plt+0x4>
   225f4:	ldr	r3, [sp, #28]
   225f6:	str.w	fp, [r4, #232]	; 0xe8
   225fa:	strd	r3, fp, [r4, #236]	; 0xec
   225fe:	str.w	r3, [r4, #244]	; 0xf4
   22602:	ldr	r3, [r4, #24]
   22604:	ldr	r0, [r3, #0]
   22606:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   2260a:	cmp	r0, #0
   2260c:	beq.n	22692 <btrfs_setup_all_roots@@Base+0x286>
   2260e:	tst.w	sl, #32
   22612:	bne.n	22692 <btrfs_setup_all_roots@@Base+0x286>
   22614:	mov	r0, r4
   22616:	bl	26330 <btrfs_read_block_groups@@Base>
   2261a:	subs	r5, r0, #0
   2261c:	bge.n	22692 <btrfs_setup_all_roots@@Base+0x286>
   2261e:	adds	r3, r5, #2
   22620:	beq.n	22692 <btrfs_setup_all_roots@@Base+0x286>
   22622:	blx	8f58 <__errno_location@plt>
   22626:	negs	r3, r5
   22628:	mov	r6, r5
   2262a:	str	r3, [r0, #0]
   2262c:	ldr	r0, [pc, #220]	; (2270c <btrfs_setup_all_roots@@Base+0x300>)
   2262e:	add	r0, pc
   22630:	bl	1bd1c <__btrfs_error@@Base>
   22634:	b.n	224aa <btrfs_setup_all_roots@@Base+0x9e>
   22636:	mov	r1, r4
   22638:	mvn.w	r2, #5
   2263c:	mov.w	r3, #4294967295	; 0xffffffff
   22640:	bl	20e30 <btrfs_setup_root@@Base>
   22644:	ldr	r3, [r5, #72]	; 0x48
   22646:	ldr	r2, [r5, #76]	; 0x4c
   22648:	mov	r0, r4
   2264a:	adds	r3, #1
   2264c:	adc.w	r2, r2, #0
   22650:	strd	r3, r2, [sp]
   22654:	ldrd	r2, r3, [sp, #16]
   22658:	bl	21f24 <read_tree_block@@Base>
   2265c:	str	r7, [r4, #60]	; 0x3c
   2265e:	str	r0, [r7, #0]
   22660:	mov	r3, r0
   22662:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   22666:	mov	r5, r0
   22668:	cmp	r0, #0
   2266a:	bne.n	225f4 <btrfs_setup_all_roots@@Base+0x1e8>
   2266c:	mov	r0, r3
   2266e:	bl	1b4c0 <free_extent_buffer@@Base>
   22672:	mov	r0, r7
   22674:	blx	8b84 <free@plt+0x4>
   22678:	str	r5, [r4, #60]	; 0x3c
   2267a:	ldr	r3, [pc, #112]	; (226ec <btrfs_setup_all_roots@@Base+0x2e0>)
   2267c:	ldr	r0, [pc, #144]	; (22710 <btrfs_setup_all_roots@@Base+0x304>)
   2267e:	ldr.w	r3, [r8, r3]
   22682:	add	r0, pc
   22684:	ldr	r1, [r3, #0]
   22686:	blx	91a8 <fputs@plt+0x4>
   2268a:	tst.w	sl, #2
   2268e:	bne.n	225f4 <btrfs_setup_all_roots@@Base+0x1e8>
   22690:	b.n	224a6 <btrfs_setup_all_roots@@Base+0x9a>
   22692:	add	r1, sp, #32
   22694:	mov	r0, r4
   22696:	movs	r2, #5
   22698:	movs	r3, #0
   2269a:	strd	r2, r3, [sp, #32]
   2269e:	mov.w	r2, #4294967295	; 0xffffffff
   226a2:	movs	r3, #132	; 0x84
   226a4:	strb.w	r2, [sp, #41]	; 0x29
   226a8:	strb.w	r3, [sp, #40]	; 0x28
   226ac:	strb.w	r2, [sp, #42]	; 0x2a
   226b0:	strb.w	r2, [sp, #43]	; 0x2b
   226b4:	strb.w	r2, [sp, #44]	; 0x2c
   226b8:	strb.w	r2, [sp, #45]	; 0x2d
   226bc:	strb.w	r2, [sp, #46]	; 0x2e
   226c0:	strb.w	r2, [sp, #47]	; 0x2f
   226c4:	strb.w	r2, [sp, #48]	; 0x30
   226c8:	bl	222a6 <btrfs_read_fs_root@@Base>
   226cc:	cmn.w	r0, #4096	; 0x1000
   226d0:	str	r0, [r4, #20]
   226d2:	bls.w	224aa <btrfs_setup_all_roots@@Base+0x9e>
   226d6:	b.n	224a6 <btrfs_setup_all_roots@@Base+0x9a>
   226d8:	mov	r0, r6
   226da:	add	sp, #60	; 0x3c
   226dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   226e0:	ldrh	r6, [r7, #6]
   226e2:	movs	r4, r0
   226e4:	lsls	r0, r1, #10
   226e6:	movs	r0, r0
   226e8:	ldrh	r2, [r1, #6]
   226ea:	movs	r4, r0
   226ec:	lsls	r4, r3, #10
   226ee:	movs	r0, r0
   226f0:	lsls	r2, r1, #25
   226f2:	movs	r2, r0
   226f4:	lsls	r2, r2, #24
   226f6:	movs	r2, r0
   226f8:	ldrh	r2, [r5, #2]
   226fa:	movs	r4, r0
   226fc:	movs	r1, #19
   226fe:	movs	r2, r0
   22700:	lsls	r1, r1, #23
   22702:	movs	r2, r0
   22704:	ldmia	r0, {r0, r1, r2, r4, r5, r6, r7}
   22706:	movs	r1, r0
   22708:	lsls	r3, r2, #21
   2270a:	movs	r2, r0
   2270c:	lsls	r0, r2, #20
   2270e:	movs	r2, r0
   22710:	lsls	r6, r3, #18
   22712:	movs	r2, r0

00022714 <btrfs_setup_chunk_tree_and_device_map@@Base>:
   22714:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22718:	mov	r1, r0
   2271a:	ldr.w	r8, [r0, #308]	; 0x134
   2271e:	mov	r4, r0
   22720:	mov	r6, r2
   22722:	ldr	r0, [r0, #32]
   22724:	movs	r2, #3
   22726:	mov	r7, r3
   22728:	movs	r3, #0
   2272a:	ldr.w	r9, [pc, #212]	; 22800 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   2272e:	bl	20e30 <btrfs_setup_root@@Base>
   22732:	mov	r0, r4
   22734:	bl	2ec08 <btrfs_read_sys_array@@Base>
   22738:	add	r9, pc
   2273a:	mov	r5, r0
   2273c:	cmp	r0, #0
   2273e:	bne.n	227bc <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   22740:	orrs.w	r3, r6, r7
   22744:	ldr.w	fp, [r8, #164]	; 0xa4
   22748:	ldr.w	sl, [r8, #168]	; 0xa8
   2274c:	beq.n	2277a <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   2274e:	ldr.w	ip, [r4, #388]	; 0x184
   22752:	movs	r0, #0
   22754:	adds.w	r1, ip, #4294967295	; 0xffffffff
   22758:	adc.w	r0, r0, #4294967295	; 0xffffffff
   2275c:	and.w	r2, r1, r6
   22760:	and.w	r3, r0, r7
   22764:	orrs.w	r1, r2, r3
   22768:	beq.n	22786 <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   2276a:	ldr	r0, [pc, #152]	; (22804 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   2276c:	mov	r2, r6
   2276e:	mov	r3, r7
   22770:	str.w	ip, [sp]
   22774:	add	r0, pc
   22776:	bl	1bca0 <__btrfs_warning@@Base>
   2277a:	ldr.w	r6, [r8, #88]	; 0x58
   2277e:	mov	r2, fp
   22780:	ldr.w	r7, [r8, #92]	; 0x5c
   22784:	mov	r3, sl
   22786:	strd	r2, r3, [sp]
   2278a:	mov	r0, r4
   2278c:	mov	r2, r6
   2278e:	mov	r3, r7
   22790:	ldr.w	sl, [r4, #32]
   22794:	bl	21f24 <read_tree_block@@Base>
   22798:	str.w	r0, [sl]
   2279c:	ldr	r3, [r4, #32]
   2279e:	ldr	r0, [r3, #0]
   227a0:	bl	206b0 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   227a4:	mov	r6, r0
   227a6:	cbnz	r0, 227d2 <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   227a8:	ldrsb.w	r3, [r4, #364]	; 0x16c
   227ac:	cmp	r3, #0
   227ae:	bge.n	227c4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   227b0:	ldr	r0, [pc, #84]	; (22808 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   227b2:	mov	r5, r6
   227b4:	add	r0, pc
   227b6:	bl	1bca0 <__btrfs_warning@@Base>
   227ba:	str	r6, [r4, #32]
   227bc:	mov	r0, r5
   227be:	add	sp, #12
   227c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227c4:	ldr	r0, [pc, #68]	; (2280c <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   227c6:	mvn.w	r5, #4
   227ca:	add	r0, pc
   227cc:	bl	1bd1c <__btrfs_error@@Base>
   227d0:	b.n	227bc <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   227d2:	ldr.w	r1, [r8, #60]	; 0x3c
   227d6:	movs	r2, #0
   227d8:	and.w	r3, r1, #2
   227dc:	orrs	r3, r2
   227de:	bne.n	227bc <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   227e0:	mov	r0, r4
   227e2:	bl	2edb0 <btrfs_read_chunk_tree@@Base>
   227e6:	mov	r5, r0
   227e8:	cmp	r0, #0
   227ea:	beq.n	227bc <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   227ec:	ldr	r3, [pc, #32]	; (22810 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   227ee:	ldr	r0, [pc, #36]	; (22814 <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   227f0:	ldr.w	r3, [r9, r3]
   227f4:	add	r0, pc
   227f6:	ldr	r1, [r3, #0]
   227f8:	blx	91a8 <fputs@plt+0x4>
   227fc:	b.n	227bc <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   227fe:	nop
   22800:	strh	r0, [r4, #46]	; 0x2e
   22802:	movs	r4, r0
   22804:	lsls	r2, r5, #15
   22806:	movs	r2, r0
   22808:	lsls	r7, r3, #15
   2280a:	movs	r2, r0
   2280c:	lsls	r1, r6, #15
   2280e:	movs	r2, r0
   22810:	lsls	r4, r3, #10
   22812:	movs	r0, r0
   22814:	lsls	r6, r3, #15
   22816:	movs	r2, r0
   22818:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2281c:	mov	r8, r2
   2281e:	ldr	r2, [pc, #624]	; (22a90 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   22820:	mov	r9, r3
   22822:	ldr	r3, [pc, #624]	; (22a94 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   22824:	sub	sp, #36	; 0x24
   22826:	add	r2, pc
   22828:	ldr	r7, [pc, #620]	; (22a98 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   2282a:	ldr	r5, [sp, #88]	; 0x58
   2282c:	mov	sl, r0
   2282e:	ldr	r3, [r2, r3]
   22830:	movs	r2, #0
   22832:	add	r7, pc
   22834:	mov	r6, r1
   22836:	ldr	r3, [r3, #0]
   22838:	str	r3, [sp, #28]
   2283a:	mov.w	r3, #0
   2283e:	movs	r3, #0
   22840:	str	r3, [sp, #24]
   22842:	orrs.w	r3, r8, r9
   22846:	mov.w	r3, #4
   2284a:	str	r3, [sp, #8]
   2284c:	mov.w	r3, #0
   22850:	strd	r2, r3, [sp]
   22854:	itt	eq
   22856:	moveq.w	r8, #65536	; 0x10000
   2285a:	moveq.w	r9, #0
   2285e:	blx	8b28 <posix_fadvise64@plt>
   22862:	cbz	r0, 22872 <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   22864:	ldr	r3, [pc, #564]	; (22a9c <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   22866:	ldr	r0, [pc, #568]	; (22aa0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   22868:	ldr	r3, [r7, r3]
   2286a:	add	r0, pc
   2286c:	ldr	r1, [r3, #0]
   2286e:	blx	91a8 <fputs@plt+0x4>
   22872:	and.w	fp, r5, #1
   22876:	mov	r2, r8
   22878:	mov	r3, r9
   2287a:	mov	r0, fp
   2287c:	bl	20efe <btrfs_new_fs_info@@Base>
   22880:	mov	r4, r0
   22882:	cbnz	r0, 228a8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   22884:	ldr	r3, [pc, #532]	; (22a9c <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   22886:	ldr	r0, [pc, #540]	; (22aa4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   22888:	ldr	r3, [r7, r3]
   2288a:	add	r0, pc
   2288c:	ldr	r1, [r3, #0]
   2288e:	blx	91a8 <fputs@plt+0x4>
   22892:	ldr	r2, [pc, #532]	; (22aa8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   22894:	ldr	r3, [pc, #508]	; (22a94 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   22896:	add	r2, pc
   22898:	ldr	r3, [r2, r3]
   2289a:	ldr	r2, [r3, #0]
   2289c:	ldr	r3, [sp, #28]
   2289e:	eors	r2, r3
   228a0:	beq.w	22a88 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   228a4:	blx	8c90 <__stack_chk_fail@plt>
   228a8:	lsls	r3, r5, #27
   228aa:	ittt	mi
   228ac:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   228b0:	orrmi.w	r3, r3, #4
   228b4:	strbmi.w	r3, [r0, #364]	; 0x16c
   228b8:	lsls	r0, r5, #23
   228ba:	ittt	mi
   228bc:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   228c0:	orrmi.w	r3, r3, #32
   228c4:	strbmi.w	r3, [r4, #364]	; 0x16c
   228c8:	ands.w	r2, r5, #1024	; 0x400
   228cc:	ittt	ne
   228ce:	ldrbne.w	r3, [r4, #364]	; 0x16c
   228d2:	orrne.w	r3, r3, #64	; 0x40
   228d6:	strbne.w	r3, [r4, #364]	; 0x16c
   228da:	lsls	r1, r5, #20
   228dc:	ittt	mi
   228de:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   228e2:	orrmi.w	r3, r3, #128	; 0x80
   228e6:	strbmi.w	r3, [r4, #364]	; 0x16c
   228ea:	movw	r3, #4104	; 0x1008
   228ee:	bics	r3, r5
   228f0:	bne.n	2290a <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   228f2:	ldr	r3, [pc, #424]	; (22a9c <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   228f4:	ldr	r0, [pc, #436]	; (22aac <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   228f6:	ldr	r3, [r7, r3]
   228f8:	add	r0, pc
   228fa:	ldr	r1, [r3, #0]
   228fc:	blx	91a8 <fputs@plt+0x4>
   22900:	mov	r0, r4
   22902:	movs	r4, #0
   22904:	bl	20eb0 <btrfs_free_fs_info@@Base>
   22908:	b.n	22892 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   2290a:	ands.w	r3, r5, #4096	; 0x1000
   2290e:	it	ne
   22910:	movne	r3, #2
   22912:	cbz	r2, 22918 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   22914:	orr.w	r3, r3, #4
   22918:	and.w	r2, r5, #128	; 0x80
   2291c:	mov	r1, r6
   2291e:	strd	r3, r2, [sp, #8]
   22922:	mov	r0, sl
   22924:	add	r2, sp, #24
   22926:	strd	r8, r9, [sp]
   2292a:	str	r3, [sp, #20]
   2292c:	bl	211b8 <btrfs_scan_fs_devices@@Base>
   22930:	mov	r1, r0
   22932:	cmp	r0, #0
   22934:	bne.n	22900 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   22936:	cmp.w	fp, #0
   2293a:	ldr	r0, [sp, #24]
   2293c:	ldr	r3, [sp, #20]
   2293e:	it	ne
   22940:	movne	r1, #2
   22942:	tst.w	r5, #64	; 0x40
   22946:	it	ne
   22948:	orrne.w	r1, r1, #128	; 0x80
   2294c:	str.w	r0, [r4, #352]	; 0x160
   22950:	str	r3, [sp, #20]
   22952:	bl	2c8bc <btrfs_open_devices@@Base>
   22956:	cmp	r0, #0
   22958:	bne.n	22900 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   2295a:	tst.w	r5, #8
   2295e:	ldr.w	r6, [r4, #308]	; 0x134
   22962:	ldr	r3, [sp, #20]
   22964:	beq.n	22990 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   22966:	ldr	r0, [sp, #24]
   22968:	movs	r3, #1
   2296a:	str	r3, [sp, #0]
   2296c:	mov	r2, r8
   2296e:	mov	r3, r9
   22970:	mov	r1, r6
   22972:	ldr	r0, [r0, #64]	; 0x40
   22974:	bl	21568 <btrfs_read_dev_super@@Base>
   22978:	cbz	r0, 2299c <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   2297a:	ldr	r3, [pc, #288]	; (22a9c <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   2297c:	ldr	r0, [pc, #304]	; (22ab0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   2297e:	ldr	r3, [r7, r3]
   22980:	add	r0, pc
   22982:	ldr	r1, [r3, #0]
   22984:	blx	91a8 <fputs@plt+0x4>
   22988:	ldr	r0, [sp, #24]
   2298a:	bl	2c7cc <btrfs_close_devices@@Base>
   2298e:	b.n	22900 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   22990:	str	r3, [sp, #0]
   22992:	mov	r2, r8
   22994:	mov	r3, r9
   22996:	mov	r1, r6
   22998:	mov	r0, sl
   2299a:	b.n	22974 <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   2299c:	ldr	r1, [r6, #60]	; 0x3c
   2299e:	mov	r2, r0
   229a0:	and.w	r3, r1, #8
   229a4:	orrs	r3, r2
   229a6:	beq.n	229bc <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   229a8:	ldrb.w	r3, [r4, #364]	; 0x16c
   229ac:	lsls	r2, r3, #25
   229ae:	bmi.n	229bc <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   229b0:	ldr	r3, [pc, #232]	; (22a9c <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   229b2:	ldr	r0, [pc, #256]	; (22ab4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   229b4:	ldr	r3, [r7, r3]
   229b6:	add	r0, pc
   229b8:	ldr	r1, [r3, #0]
   229ba:	b.n	22984 <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   229bc:	ldr.w	r8, [sp, #24]
   229c0:	add.w	r0, r6, #32
   229c4:	movs	r2, #16
   229c6:	mov	r1, r8
   229c8:	blx	8c1c <memcmp@plt+0x4>
   229cc:	cbz	r0, 229e0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   229ce:	ldr	r1, [pc, #232]	; (22ab8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   229d0:	movw	r2, #1251	; 0x4e3
   229d4:	ldr	r0, [pc, #228]	; (22abc <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   229d6:	add	r1, pc
   229d8:	adds	r1, #89	; 0x59
   229da:	add	r0, pc
   229dc:	bl	20864 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   229e0:	ldr.w	r7, [r4, #308]	; 0x134
   229e4:	mov	r3, r0
   229e6:	ldr.w	r1, [r7, #188]	; 0xbc
   229ea:	and.w	r2, r1, #1024	; 0x400
   229ee:	orrs	r3, r2
   229f0:	beq.n	22a12 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   229f2:	movs	r2, #16
   229f4:	addw	r0, r6, #571	; 0x23b
   229f8:	add.w	r1, r8, r2
   229fc:	blx	8c1c <memcmp@plt+0x4>
   22a00:	cbz	r0, 22a12 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   22a02:	ldr	r1, [pc, #188]	; (22ac0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   22a04:	movw	r2, #1253	; 0x4e5
   22a08:	ldr	r0, [pc, #184]	; (22ac4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   22a0a:	add	r1, pc
   22a0c:	adds	r1, #89	; 0x59
   22a0e:	add	r0, pc
   22a10:	b.n	229dc <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   22a12:	ldr.w	r3, [r6, #144]	; 0x90
   22a16:	mov	r1, r5
   22a18:	mov	r0, r7
   22a1a:	str.w	r3, [r4, #388]	; 0x184
   22a1e:	ldr.w	r3, [r6, #148]	; 0x94
   22a22:	str.w	r3, [r4, #384]	; 0x180
   22a26:	ldr.w	r3, [r6, #156]	; 0x9c
   22a2a:	str.w	r3, [r4, #392]	; 0x188
   22a2e:	bl	21054 <btrfs_check_fs_compatibility@@Base>
   22a32:	cmp	r0, #0
   22a34:	bne.n	22988 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   22a36:	ldrd	r2, r3, [sp, #80]	; 0x50
   22a3a:	mov	r0, r4
   22a3c:	bl	22714 <btrfs_setup_chunk_tree_and_device_map@@Base>
   22a40:	cbz	r0, 22a50 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   22a42:	mov	r0, r4
   22a44:	bl	210f4 <btrfs_release_all_roots@@Base>
   22a48:	mov	r0, r4
   22a4a:	bl	21158 <btrfs_cleanup_all_caches@@Base>
   22a4e:	b.n	22988 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   22a50:	ldr	r0, [r4, #32]
   22a52:	cmp	r0, #0
   22a54:	beq.w	22892 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   22a58:	ldr	r0, [r0, #0]
   22a5a:	movs	r3, #16
   22a5c:	movs	r2, #64	; 0x40
   22a5e:	mov	r1, r4
   22a60:	bl	1bbba <read_extent_buffer@@Base>
   22a64:	ldrd	r2, r3, [sp, #72]	; 0x48
   22a68:	mov	r0, r4
   22a6a:	str	r5, [sp, #0]
   22a6c:	bl	2240c <btrfs_setup_all_roots@@Base>
   22a70:	cmp	r0, #0
   22a72:	beq.w	22892 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   22a76:	lsls	r3, r5, #22
   22a78:	bmi.w	22892 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   22a7c:	ldrsb.w	r3, [r4, #364]	; 0x16c
   22a80:	cmp	r3, #0
   22a82:	blt.w	22892 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   22a86:	b.n	22a42 <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   22a88:	mov	r0, r4
   22a8a:	add	sp, #36	; 0x24
   22a8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a90:	strh	r2, [r6, #38]	; 0x26
   22a92:	movs	r4, r0
   22a94:	lsls	r0, r1, #10
   22a96:	movs	r0, r0
   22a98:	strh	r6, [r4, #38]	; 0x26
   22a9a:	movs	r4, r0
   22a9c:	lsls	r4, r3, #10
   22a9e:	movs	r0, r0
   22aa0:	lsls	r2, r0, #14
   22aa2:	movs	r2, r0
   22aa4:	lsls	r2, r0, #14
   22aa6:	movs	r2, r0
   22aa8:	strh	r2, [r0, #36]	; 0x24
   22aaa:	movs	r4, r0
   22aac:	lsls	r3, r7, #12
   22aae:	movs	r2, r0
   22ab0:	lsls	r4, r6, #11
   22ab2:	movs	r2, r0
   22ab4:	lsls	r4, r2, #11
   22ab6:	movs	r2, r0
   22ab8:	lsls	r0, r1, #16
   22aba:	movs	r2, r0
   22abc:	lsls	r3, r3, #11
   22abe:	movs	r2, r0
   22ac0:	lsls	r4, r2, #15
   22ac2:	movs	r2, r0
   22ac4:	lsls	r4, r4, #11
   22ac6:	movs	r2, r0

00022ac8 <open_ctree_fs_info@@Base>:
   22ac8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   22acc:	mov	r9, r2
   22ace:	ldr	r2, [pc, #164]	; (22b74 <open_ctree_fs_info@@Base+0xac>)
   22ad0:	mov	r8, r3
   22ad2:	ldr	r3, [pc, #164]	; (22b78 <open_ctree_fs_info@@Base+0xb0>)
   22ad4:	sub	sp, #140	; 0x8c
   22ad6:	add	r2, pc
   22ad8:	add	r1, sp, #24
   22ada:	ldr	r6, [sp, #184]	; 0xb8
   22adc:	mov	r4, r0
   22ade:	ldr	r3, [r2, r3]
   22ae0:	ldr	r3, [r3, #0]
   22ae2:	str	r3, [sp, #132]	; 0x84
   22ae4:	mov.w	r3, #0
   22ae8:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   22aec:	cmp	r0, #0
   22aee:	bge.n	22b10 <open_ctree_fs_info@@Base+0x48>
   22af0:	ldr	r0, [pc, #136]	; (22b7c <open_ctree_fs_info@@Base+0xb4>)
   22af2:	mov	r1, r4
   22af4:	add	r0, pc
   22af6:	bl	1bd1c <__btrfs_error@@Base>
   22afa:	movs	r4, #0
   22afc:	ldr	r2, [pc, #128]	; (22b80 <open_ctree_fs_info@@Base+0xb8>)
   22afe:	ldr	r3, [pc, #120]	; (22b78 <open_ctree_fs_info@@Base+0xb0>)
   22b00:	add	r2, pc
   22b02:	ldr	r3, [r2, r3]
   22b04:	ldr	r2, [r3, #0]
   22b06:	ldr	r3, [sp, #132]	; 0x84
   22b08:	eors	r2, r3
   22b0a:	beq.n	22b6c <open_ctree_fs_info@@Base+0xa4>
   22b0c:	blx	8c90 <__stack_chk_fail@plt>
   22b10:	ldr	r1, [sp, #40]	; 0x28
   22b12:	and.w	r1, r1, #61440	; 0xf000
   22b16:	cmp.w	r1, #32768	; 0x8000
   22b1a:	beq.n	22b2a <open_ctree_fs_info@@Base+0x62>
   22b1c:	cmp.w	r1, #24576	; 0x6000
   22b20:	beq.n	22b2a <open_ctree_fs_info@@Base+0x62>
   22b22:	ldr	r0, [pc, #96]	; (22b84 <open_ctree_fs_info@@Base+0xbc>)
   22b24:	mov	r1, r4
   22b26:	add	r0, pc
   22b28:	b.n	22af6 <open_ctree_fs_info@@Base+0x2e>
   22b2a:	tst.w	r6, #1
   22b2e:	mov	r0, r4
   22b30:	ite	ne
   22b32:	movne	r1, #2
   22b34:	moveq	r1, #0
   22b36:	blx	8f4c <__open64_2@plt>
   22b3a:	subs	r5, r0, #0
   22b3c:	bge.n	22b46 <open_ctree_fs_info@@Base+0x7e>
   22b3e:	ldr	r0, [pc, #72]	; (22b88 <open_ctree_fs_info@@Base+0xc0>)
   22b40:	mov	r1, r4
   22b42:	add	r0, pc
   22b44:	b.n	22af6 <open_ctree_fs_info@@Base+0x2e>
   22b46:	str	r6, [sp, #16]
   22b48:	mov	r1, r4
   22b4a:	ldrd	r6, r7, [sp, #176]	; 0xb0
   22b4e:	mov	r2, r9
   22b50:	mov	r3, r8
   22b52:	strd	r6, r7, [sp, #8]
   22b56:	ldrd	r6, r7, [sp, #168]	; 0xa8
   22b5a:	strd	r6, r7, [sp]
   22b5e:	bl	22818 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   22b62:	mov	r4, r0
   22b64:	mov	r0, r5
   22b66:	blx	91e4 <close@plt>
   22b6a:	b.n	22afc <open_ctree_fs_info@@Base+0x34>
   22b6c:	mov	r0, r4
   22b6e:	add	sp, #140	; 0x8c
   22b70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   22b74:	strh	r2, [r0, #18]
   22b76:	movs	r4, r0
   22b78:	lsls	r0, r1, #10
   22b7a:	movs	r0, r0
   22b7c:	lsls	r5, r1, #9
   22b7e:	movs	r2, r0
   22b80:	strh	r0, [r3, #16]
   22b82:	movs	r4, r0
   22b84:	lsls	r0, r6, #8
   22b86:	movs	r2, r0
   22b88:	lsls	r3, r7, #8
   22b8a:	movs	r2, r0

00022b8c <open_ctree@@Base>:
   22b8c:	push	{r4, r5, r6, r7, lr}
   22b8e:	sub	sp, #28
   22b90:	ldr	r1, [pc, #64]	; (22bd4 <open_ctree@@Base+0x48>)
   22b92:	mov	r5, r0
   22b94:	ldr	r4, [sp, #48]	; 0x30
   22b96:	mov	r7, r2
   22b98:	ldr	r0, [pc, #60]	; (22bd8 <open_ctree@@Base+0x4c>)
   22b9a:	add	r1, pc
   22b9c:	mov	r6, r3
   22b9e:	movw	r2, #1335	; 0x537
   22ba2:	and.w	r3, r4, #2048	; 0x800
   22ba6:	add	r0, pc
   22ba8:	adds	r1, #105	; 0x69
   22baa:	bl	208dc <btrfs_fs_roots_compare_roots@@Base+0x386>
   22bae:	movs	r2, #0
   22bb0:	movs	r3, #0
   22bb2:	mov	r0, r5
   22bb4:	strd	r2, r3, [sp, #8]
   22bb8:	strd	r2, r3, [sp]
   22bbc:	mov	r2, r7
   22bbe:	mov	r3, r6
   22bc0:	str	r4, [sp, #16]
   22bc2:	bl	22ac8 <open_ctree_fs_info@@Base>
   22bc6:	cbz	r0, 22bd0 <open_ctree@@Base+0x44>
   22bc8:	lsls	r3, r4, #22
   22bca:	ite	mi
   22bcc:	ldrmi	r0, [r0, #32]
   22bce:	ldrpl	r0, [r0, #20]
   22bd0:	add	sp, #28
   22bd2:	pop	{r4, r5, r6, r7, pc}
   22bd4:	lsls	r4, r0, #9
   22bd6:	movs	r2, r0
   22bd8:	lsls	r4, r5, #7
   22bda:	movs	r2, r0

00022bdc <open_ctree_fd@@Base>:
   22bdc:	push	{r4, r6, r7, lr}
   22bde:	sub	sp, #24
   22be0:	ldr	r4, [sp, #40]	; 0x28
   22be2:	lsls	r6, r4, #20
   22be4:	bpl.n	22bf8 <open_ctree_fd@@Base+0x1c>
   22be6:	ldr	r0, [pc, #48]	; (22c18 <open_ctree_fd@@Base+0x3c>)
   22be8:	mov	r2, r4
   22bea:	movs	r3, #0
   22bec:	add	r0, pc
   22bee:	bl	1bd1c <__btrfs_error@@Base>
   22bf2:	movs	r0, #0
   22bf4:	add	sp, #24
   22bf6:	pop	{r4, r6, r7, pc}
   22bf8:	movs	r6, #0
   22bfa:	movs	r7, #0
   22bfc:	str	r4, [sp, #16]
   22bfe:	strd	r6, r7, [sp, #8]
   22c02:	strd	r6, r7, [sp]
   22c06:	bl	22818 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   22c0a:	cmp	r0, #0
   22c0c:	beq.n	22bf4 <open_ctree_fd@@Base+0x18>
   22c0e:	lsls	r3, r4, #22
   22c10:	ite	mi
   22c12:	ldrmi	r0, [r0, #32]
   22c14:	ldrpl	r0, [r0, #20]
   22c16:	b.n	22bf4 <open_ctree_fd@@Base+0x18>
   22c18:	lsls	r1, r2, #7
   22c1a:	movs	r2, r0

00022c1c <btrfs_create_tree@@Base>:
   22c1c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c20:	mov	r9, r2
   22c22:	vpush	{d8}
   22c26:	mov	r8, r3
   22c28:	ldr	r2, [pc, #428]	; (22dd8 <btrfs_create_tree@@Base+0x1bc>)
   22c2a:	mov	r7, r0
   22c2c:	ldr	r3, [pc, #428]	; (22ddc <btrfs_create_tree@@Base+0x1c0>)
   22c2e:	mov	sl, r1
   22c30:	add	r2, pc
   22c32:	movs	r0, #1
   22c34:	sub	sp, #60	; 0x3c
   22c36:	ldr	r3, [r2, r3]
   22c38:	ldr	r3, [r3, #0]
   22c3a:	str	r3, [sp, #52]	; 0x34
   22c3c:	mov.w	r3, #0
   22c40:	ldr	r3, [r1, #28]
   22c42:	mov.w	r1, #544	; 0x220
   22c46:	vmov	s16, r3
   22c4a:	blx	8ab8 <calloc@plt+0x4>
   22c4e:	mov	r4, r0
   22c50:	cmp	r0, #0
   22c52:	beq.w	22dc4 <btrfs_create_tree@@Base+0x1a8>
   22c56:	mov	r2, r9
   22c58:	mov	r3, r8
   22c5a:	mov	r1, sl
   22c5c:	mov.w	fp, #132	; 0x84
   22c60:	bl	20e30 <btrfs_setup_root@@Base>
   22c64:	movs	r6, #0
   22c66:	str.w	r9, [r4, #447]	; 0x1bf
   22c6a:	movs	r2, #0
   22c6c:	str.w	r8, [r4, #451]	; 0x1c3
   22c70:	movs	r3, #0
   22c72:	strb.w	fp, [r4, #455]	; 0x1c7
   22c76:	mov	r1, r4
   22c78:	strd	r2, r3, [r4, #456]	; 0x1c8
   22c7c:	mov	r0, r7
   22c7e:	strd	r2, r3, [sp, #24]
   22c82:	strd	r2, r3, [sp, #16]
   22c86:	strd	r6, r6, [sp, #8]
   22c8a:	ldr.w	r2, [sl, #384]	; 0x180
   22c8e:	strd	r9, r8, [sp]
   22c92:	bl	27304 <btrfs_alloc_free_block@@Base>
   22c96:	cmn.w	r0, #4096	; 0x1000
   22c9a:	mov	r5, r0
   22c9c:	bls.n	22cbe <btrfs_create_tree@@Base+0xa2>
   22c9e:	mov	r6, r0
   22ca0:	mov	r0, r4
   22ca2:	mov	r4, r6
   22ca4:	blx	8b84 <free@plt+0x4>
   22ca8:	ldr	r2, [pc, #308]	; (22de0 <btrfs_create_tree@@Base+0x1c4>)
   22caa:	ldr	r3, [pc, #304]	; (22ddc <btrfs_create_tree@@Base+0x1c0>)
   22cac:	add	r2, pc
   22cae:	ldr	r3, [r2, r3]
   22cb0:	ldr	r2, [r3, #0]
   22cb2:	ldr	r3, [sp, #52]	; 0x34
   22cb4:	eors	r2, r3
   22cb6:	beq.w	22dca <btrfs_create_tree@@Base+0x1ae>
   22cba:	blx	8c90 <__stack_chk_fail@plt>
   22cbe:	mov	r2, r6
   22cc0:	mov	r1, r6
   22cc2:	movs	r3, #101	; 0x65
   22cc4:	bl	1bc42 <memset_extent_buffer@@Base>
   22cc8:	ldr	r3, [r5, #40]	; 0x28
   22cca:	mov	r0, r5
   22ccc:	str.w	r3, [r5, #144]	; 0x90
   22cd0:	ldr	r3, [r5, #44]	; 0x2c
   22cd2:	str.w	r3, [r5, #148]	; 0x94
   22cd6:	ldrd	r2, r3, [r7, #8]
   22cda:	str.w	r9, [r5, #184]	; 0xb8
   22cde:	str.w	r8, [r5, #188]	; 0xbc
   22ce2:	str.w	r2, [r5, #176]	; 0xb0
   22ce6:	str.w	r3, [r5, #180]	; 0xb4
   22cea:	ldr.w	r2, [r5, #152]	; 0x98
   22cee:	ldr.w	r3, [r5, #156]	; 0x9c
   22cf2:	bic.w	r3, r3, #4278190080	; 0xff000000
   22cf6:	str.w	r2, [r5, #152]	; 0x98
   22cfa:	orr.w	r3, r3, #16777216	; 0x1000000
   22cfe:	str.w	r3, [r5, #156]	; 0x9c
   22d02:	ldr.w	r1, [sl, #352]	; 0x160
   22d06:	movs	r3, #16
   22d08:	movs	r2, #32
   22d0a:	str	r5, [r4, #0]
   22d0c:	add	r1, r3
   22d0e:	bl	1bbd0 <write_extent_buffer@@Base>
   22d12:	movs	r3, #16
   22d14:	movs	r2, #64	; 0x40
   22d16:	mov	r1, sl
   22d18:	mov	r0, r5
   22d1a:	bl	1bbd0 <write_extent_buffer@@Base>
   22d1e:	mov	r0, r5
   22d20:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   22d24:	ldr	r2, [r4, #0]
   22d26:	movs	r1, #1
   22d28:	add.w	r0, r4, #255	; 0xff
   22d2c:	ldr	r3, [r2, #80]	; 0x50
   22d2e:	adds	r3, #1
   22d30:	str	r3, [r2, #80]	; 0x50
   22d32:	ldr	r3, [r4, #0]
   22d34:	movs	r2, #0
   22d36:	str.w	r1, [r4, #492]	; 0x1ec
   22d3a:	str	r3, [r4, #4]
   22d3c:	movs	r3, #0
   22d3e:	strd	r2, r3, [r4, #216]	; 0xd8
   22d42:	strd	r2, r3, [r4, #192]	; 0xc0
   22d46:	ldrd	r2, r3, [r5, #40]	; 0x28
   22d4a:	strb.w	r6, [r4, #246]	; 0xf6
   22d4e:	str.w	r1, [r4, #224]	; 0xe0
   22d52:	mov	r1, r6
   22d54:	strd	r2, r3, [r4, #184]	; 0xb8
   22d58:	ldrd	r2, r3, [r7, #8]
   22d5c:	strd	r2, r3, [r4, #168]	; 0xa8
   22d60:	movs	r2, #0
   22d62:	ldr	r3, [r5, #76]	; 0x4c
   22d64:	strd	r3, r6, [r4, #200]	; 0xc8
   22d68:	movs	r3, #0
   22d6a:	strd	r2, r3, [r4, #208]	; 0xd0
   22d6e:	strd	r2, r3, [r4, #176]	; 0xb0
   22d72:	movs	r2, #16
   22d74:	blx	8f98 <memset@plt+0x4>
   22d78:	strb.w	r6, [r4, #245]	; 0xf5
   22d7c:	vmov	r1, s16
   22d80:	add.w	r3, r4, #8
   22d84:	add	r2, sp, #32
   22d86:	mov	r0, r7
   22d88:	strb.w	r6, [sp, #41]	; 0x29
   22d8c:	strb.w	r6, [sp, #42]	; 0x2a
   22d90:	strb.w	r6, [sp, #43]	; 0x2b
   22d94:	strb.w	r6, [sp, #44]	; 0x2c
   22d98:	strb.w	r6, [sp, #45]	; 0x2d
   22d9c:	strb.w	r6, [sp, #46]	; 0x2e
   22da0:	strb.w	r6, [sp, #47]	; 0x2f
   22da4:	strb.w	r6, [sp, #48]	; 0x30
   22da8:	strd	r9, r8, [sp, #32]
   22dac:	strb.w	fp, [sp, #40]	; 0x28
   22db0:	bl	2c450 <btrfs_insert_root@@Base>
   22db4:	mov	r6, r0
   22db6:	cmp	r0, #0
   22db8:	beq.w	22ca8 <btrfs_create_tree@@Base+0x8c>
   22dbc:	mov	r0, r5
   22dbe:	bl	1b4c0 <free_extent_buffer@@Base>
   22dc2:	b.n	22ca0 <btrfs_create_tree@@Base+0x84>
   22dc4:	mvn.w	r4, #11
   22dc8:	b.n	22ca8 <btrfs_create_tree@@Base+0x8c>
   22dca:	mov	r0, r4
   22dcc:	add	sp, #60	; 0x3c
   22dce:	vpop	{d8}
   22dd2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22dd6:	nop
   22dd8:	strh	r0, [r5, #6]
   22dda:	movs	r4, r0
   22ddc:	lsls	r0, r1, #10
   22dde:	movs	r0, r0
   22de0:	strh	r4, [r5, #2]
   22de2:	movs	r4, r0
   22de4:	push	{r4, r5, lr}
   22de6:	mov	r1, r0
   22de8:	ldr.w	r3, [r0, #356]	; 0x164
   22dec:	and.w	r2, r2, #7
   22df0:	add.w	r1, r1, #356	; 0x164
   22df4:	sub.w	r0, r3, #44	; 0x2c
   22df8:	add.w	r3, r0, #44	; 0x2c
   22dfc:	cmp	r3, r1
   22dfe:	bne.n	22e04 <btrfs_create_tree@@Base+0x1e8>
   22e00:	movs	r0, #0
   22e02:	pop	{r4, r5, pc}
   22e04:	ldr	r3, [r0, #0]
   22e06:	movs	r5, #0
   22e08:	and.w	r4, r2, r3
   22e0c:	orrs.w	r3, r4, r5
   22e10:	bne.n	22e02 <btrfs_create_tree@@Base+0x1e6>
   22e12:	ldr	r0, [r0, #44]	; 0x2c
   22e14:	subs	r0, #44	; 0x2c
   22e16:	b.n	22df8 <btrfs_create_tree@@Base+0x1dc>
   22e18:	push	{r4, r5, r6, r7, lr}
   22e1a:	movs	r3, #0
   22e1c:	and.w	r4, r2, #2040	; 0x7f8
   22e20:	mov	r5, r3
   22e22:	orrs.w	r1, r4, r5
   22e26:	beq.n	22e72 <btrfs_create_tree@@Base+0x256>
   22e28:	and.w	r6, r2, #1
   22e2c:	mov	r7, r3
   22e2e:	orrs.w	r3, r6, r7
   22e32:	and.w	r6, r2, #4
   22e36:	mov.w	r7, #0
   22e3a:	ittt	ne
   22e3c:	ldrne.w	r3, [r0, #248]	; 0xf8
   22e40:	orrne	r3, r4
   22e42:	strne.w	r3, [r0, #248]	; 0xf8
   22e46:	orrs.w	r3, r6, r7
   22e4a:	and.w	r6, r2, #2
   22e4e:	mov.w	r7, #0
   22e52:	itttt	ne
   22e54:	ldrdne	r1, r3, [r0, #256]	; 0x100
   22e58:	orrne	r3, r5
   22e5a:	orrne	r1, r4
   22e5c:	strdne	r1, r3, [r0, #256]	; 0x100
   22e60:	orrs.w	r3, r6, r7
   22e64:	itttt	ne
   22e66:	ldrdne	r2, r3, [r0, #264]	; 0x108
   22e6a:	orrne	r2, r4
   22e6c:	orrne	r3, r5
   22e6e:	strdne	r2, r3, [r0, #264]	; 0x108
   22e72:	pop	{r4, r5, r6, r7, pc}
   22e74:	push	{r4, lr}
   22e76:	mov	r4, r1
   22e78:	ldr	r1, [pc, #84]	; (22ed0 <btrfs_create_tree@@Base+0x2b4>)
   22e7a:	sub	sp, #24
   22e7c:	ldr	r3, [pc, #84]	; (22ed4 <btrfs_create_tree@@Base+0x2b8>)
   22e7e:	add	r1, pc
   22e80:	ldr	r3, [r1, r3]
   22e82:	mov	r1, sp
   22e84:	ldr	r3, [r3, #0]
   22e86:	str	r3, [sp, #20]
   22e88:	mov.w	r3, #0
   22e8c:	movs	r3, #25
   22e8e:	muls	r2, r3
   22e90:	movs	r3, #17
   22e92:	adds	r2, #101	; 0x65
   22e94:	bl	1bbba <read_extent_buffer@@Base>
   22e98:	ldr.w	r3, [sp, #13]
   22e9c:	ldr.w	r2, [sp, #9]
   22ea0:	str.w	r3, [r4, #13]
   22ea4:	ldrb.w	r3, [sp, #8]
   22ea8:	str.w	r2, [r4, #9]
   22eac:	ldr	r2, [pc, #40]	; (22ed8 <btrfs_create_tree@@Base+0x2bc>)
   22eae:	strb	r3, [r4, #8]
   22eb0:	ldr	r3, [sp, #0]
   22eb2:	add	r2, pc
   22eb4:	str	r3, [r4, #0]
   22eb6:	ldr	r3, [sp, #4]
   22eb8:	str	r3, [r4, #4]
   22eba:	ldr	r3, [pc, #24]	; (22ed4 <btrfs_create_tree@@Base+0x2b8>)
   22ebc:	ldr	r3, [r2, r3]
   22ebe:	ldr	r2, [r3, #0]
   22ec0:	ldr	r3, [sp, #20]
   22ec2:	eors	r2, r3
   22ec4:	beq.n	22eca <btrfs_create_tree@@Base+0x2ae>
   22ec6:	blx	8c90 <__stack_chk_fail@plt>
   22eca:	add	sp, #24
   22ecc:	pop	{r4, pc}
   22ece:	nop
   22ed0:	ldrb	r2, [r3, #26]
   22ed2:	movs	r4, r0
   22ed4:	lsls	r0, r1, #10
   22ed6:	movs	r0, r0
   22ed8:	ldrb	r6, [r4, #25]
   22eda:	movs	r4, r0
   22edc:	ldr	r2, [pc, #60]	; (22f1c <btrfs_create_tree@@Base+0x300>)
   22ede:	movs	r1, #16
   22ee0:	ldr	r3, [pc, #60]	; (22f20 <btrfs_create_tree@@Base+0x304>)
   22ee2:	push	{r4, lr}
   22ee4:	add	r2, pc
   22ee6:	sub	sp, #72	; 0x48
   22ee8:	add	r4, sp, #4
   22eea:	ldr	r3, [r2, r3]
   22eec:	mov	r0, r4
   22eee:	ldr	r3, [r3, #0]
   22ef0:	str	r3, [sp, #68]	; 0x44
   22ef2:	mov.w	r3, #0
   22ef6:	blx	8e98 <backtrace@plt>
   22efa:	movs	r2, #2
   22efc:	mov	r1, r0
   22efe:	mov	r0, r4
   22f00:	blx	9214 <backtrace_symbols_fd@plt>
   22f04:	ldr	r2, [pc, #28]	; (22f24 <btrfs_create_tree@@Base+0x308>)
   22f06:	ldr	r3, [pc, #24]	; (22f20 <btrfs_create_tree@@Base+0x304>)
   22f08:	add	r2, pc
   22f0a:	ldr	r3, [r2, r3]
   22f0c:	ldr	r2, [r3, #0]
   22f0e:	ldr	r3, [sp, #68]	; 0x44
   22f10:	eors	r2, r3
   22f12:	beq.n	22f18 <btrfs_create_tree@@Base+0x2fc>
   22f14:	blx	8c90 <__stack_chk_fail@plt>
   22f18:	add	sp, #72	; 0x48
   22f1a:	pop	{r4, pc}
   22f1c:	ldrb	r4, [r6, #24]
   22f1e:	movs	r4, r0
   22f20:	lsls	r0, r1, #10
   22f22:	movs	r0, r0
   22f24:	ldrb	r0, [r2, #24]
   22f26:	movs	r4, r0
   22f28:	push	{r0, r1, r2, lr}
   22f2a:	movs	r3, #1
   22f2c:	str	r3, [sp, #0]
   22f2e:	ldr	r3, [r2, #32]
   22f30:	bl	1fc98 <btrfs_del_items@@Base>
   22f34:	add	sp, #12
   22f36:	ldr.w	pc, [sp], #4
   22f3a:	push	{r4, r5, lr}
   22f3c:	sub	sp, #20
   22f3e:	ldr	r4, [pc, #40]	; (22f68 <btrfs_create_tree@@Base+0x34c>)
   22f40:	ldr	r5, [pc, #40]	; (22f6c <btrfs_create_tree@@Base+0x350>)
   22f42:	add	r4, pc
   22f44:	ldr	r4, [r4, r5]
   22f46:	ldr	r5, [sp, #32]
   22f48:	strd	r3, r2, [sp]
   22f4c:	mov	r3, r1
   22f4e:	ldr	r2, [pc, #32]	; (22f70 <btrfs_create_tree@@Base+0x354>)
   22f50:	movs	r1, #1
   22f52:	strd	r0, r5, [sp, #8]
   22f56:	add	r2, pc
   22f58:	ldr	r0, [r4, #0]
   22f5a:	blx	9040 <__fprintf_chk@plt+0x4>
   22f5e:	add	sp, #20
   22f60:	ldmia.w	sp!, {r4, r5, lr}
   22f64:	b.n	22edc <btrfs_create_tree@@Base+0x2c0>
   22f66:	nop
   22f68:	ldrb	r6, [r2, #23]
   22f6a:	movs	r4, r0
   22f6c:	lsls	r4, r3, #10
   22f6e:	movs	r0, r0
   22f70:	stmia	r5!, {r0, r1, r2, r4, r6, r7}
   22f72:	movs	r1, r0
   22f74:	push	{r4}
   22f76:	ldr	r4, [sp, #4]
   22f78:	cbz	r4, 22f84 <btrfs_create_tree@@Base+0x368>
   22f7a:	movs	r4, #1
   22f7c:	str	r4, [sp, #4]
   22f7e:	ldr.w	r4, [sp], #4
   22f82:	b.n	22f3a <btrfs_create_tree@@Base+0x31e>
   22f84:	ldr.w	r4, [sp], #4
   22f88:	bx	lr
   22f8a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f8e:	mov	r7, r0
   22f90:	ldr	r5, [pc, #452]	; (23158 <btrfs_create_tree@@Base+0x53c>)
   22f92:	sub	sp, #100	; 0x64
   22f94:	ldr	r0, [pc, #452]	; (2315c <btrfs_create_tree@@Base+0x540>)
   22f96:	mov	r6, r1
   22f98:	add	r5, pc
   22f9a:	mov	r4, r2
   22f9c:	ldrb.w	r9, [r4, #196]	; 0xc4
   22fa0:	ldr	r0, [r5, r0]
   22fa2:	ldr	r2, [pc, #444]	; (23160 <btrfs_create_tree@@Base+0x544>)
   22fa4:	ldr	r0, [r0, #0]
   22fa6:	str	r0, [sp, #92]	; 0x5c
   22fa8:	mov.w	r0, #0
   22fac:	ldr.w	r0, [r6, #488]	; 0x1e8
   22fb0:	add	r2, pc
   22fb2:	ldr	r1, [sp, #136]	; 0x88
   22fb4:	orrs.w	r0, r9, r0
   22fb8:	bne.n	22fd4 <btrfs_create_tree@@Base+0x3b8>
   22fba:	mov.w	sl, #0
   22fbe:	ldr	r2, [pc, #420]	; (23164 <btrfs_create_tree@@Base+0x548>)
   22fc0:	ldr	r3, [pc, #408]	; (2315c <btrfs_create_tree@@Base+0x540>)
   22fc2:	add	r2, pc
   22fc4:	ldr	r3, [r2, r3]
   22fc6:	ldr	r2, [r3, #0]
   22fc8:	ldr	r3, [sp, #92]	; 0x5c
   22fca:	eors	r2, r3
   22fcc:	beq.w	2314e <btrfs_create_tree@@Base+0x532>
   22fd0:	blx	8c90 <__stack_chk_fail@plt>
   22fd4:	cmp	r1, #0
   22fd6:	bne.w	230e6 <btrfs_create_tree@@Base+0x4ca>
   22fda:	ldr	r1, [pc, #396]	; (23168 <btrfs_create_tree@@Base+0x54c>)
   22fdc:	ldr.w	r8, [r2, r1]
   22fe0:	cmp	r3, #0
   22fe2:	beq.w	230ea <btrfs_create_tree@@Base+0x4ce>
   22fe6:	ldrd	r2, r3, [r4, #40]	; 0x28
   22fea:	strd	r2, r3, [sp, #40]	; 0x28
   22fee:	movs	r5, #0
   22ff0:	ldr.w	r3, [r4, #184]	; 0xb8
   22ff4:	str	r3, [sp, #48]	; 0x30
   22ff6:	ldr.w	r3, [r4, #188]	; 0xbc
   22ffa:	str	r3, [sp, #52]	; 0x34
   22ffc:	ldr.w	r3, [r4, #192]	; 0xc0
   23000:	str	r3, [sp, #56]	; 0x38
   23002:	add.w	r3, r9, #4294967295	; 0xffffffff
   23006:	asrs	r2, r3, #31
   23008:	mov	r1, r3
   2300a:	strd	r1, r2, [sp, #64]	; 0x40
   2300e:	ldr	r3, [sp, #56]	; 0x38
   23010:	cmp	r5, r3
   23012:	beq.n	22fba <btrfs_create_tree@@Base+0x39e>
   23014:	cmp.w	r9, #0
   23018:	bne.n	230f0 <btrfs_create_tree@@Base+0x4d4>
   2301a:	add	r1, sp, #72	; 0x48
   2301c:	mov	r2, r5
   2301e:	mov	r0, r4
   23020:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   23024:	ldrb.w	r3, [sp, #80]	; 0x50
   23028:	cmp	r3, #108	; 0x6c
   2302a:	bne.w	2314a <btrfs_create_tree@@Base+0x52e>
   2302e:	movs	r3, #25
   23030:	mla	r3, r3, r5, r4
   23034:	ldr.w	r2, [r3, #214]	; 0xd6
   23038:	add	r2, r4
   2303a:	add.w	r3, r2, #197	; 0xc5
   2303e:	ldrb.w	r2, [r2, #217]	; 0xd9
   23042:	cmp	r2, #0
   23044:	beq.w	2314a <btrfs_create_tree@@Base+0x52e>
   23048:	mov	r2, r3
   2304a:	ldr.w	sl, [r2, #21]!
   2304e:	ldr.w	fp, [r2, #4]
   23052:	orrs.w	r2, sl, fp
   23056:	beq.n	2314a <btrfs_create_tree@@Base+0x52e>
   23058:	mov	r2, r3
   2305a:	ldr.w	r0, [r3, #37]!
   2305e:	ldr.w	r1, [r2, #29]!
   23062:	ldr.w	ip, [r3, #4]
   23066:	ldr.w	lr, [r2, #4]
   2306a:	ldr.w	r2, [sp, #81]	; 0x51
   2306e:	str	r1, [sp, #60]	; 0x3c
   23070:	ldr.w	r1, [sp, #85]	; 0x55
   23074:	subs	r2, r2, r0
   23076:	str.w	r2, [sp, #81]	; 0x51
   2307a:	mov	r0, r7
   2307c:	sbc.w	r1, r1, ip
   23080:	strd	r2, r1, [sp, #32]
   23084:	ldrd	r2, r3, [sp, #72]	; 0x48
   23088:	str.w	r1, [sp, #85]	; 0x55
   2308c:	mov	r1, r6
   2308e:	strd	r2, r3, [sp, #24]
   23092:	ldr	r3, [sp, #48]	; 0x30
   23094:	str	r3, [sp, #16]
   23096:	ldr	r3, [sp, #52]	; 0x34
   23098:	str	r3, [sp, #20]
   2309a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2309e:	strd	r2, r3, [sp, #8]
   230a2:	mov	r2, sl
   230a4:	ldr	r3, [sp, #60]	; 0x3c
   230a6:	strd	r3, lr, [sp]
   230aa:	mov	r3, fp
   230ac:	blx	r8
   230ae:	mov	sl, r0
   230b0:	cmp	r0, #0
   230b2:	beq.n	2314a <btrfs_create_tree@@Base+0x52e>
   230b4:	ldr	r2, [pc, #180]	; (2316c <btrfs_create_tree@@Base+0x550>)
   230b6:	movs	r3, #1
   230b8:	ldr	r1, [pc, #180]	; (23170 <btrfs_create_tree@@Base+0x554>)
   230ba:	ldr	r0, [pc, #184]	; (23174 <btrfs_create_tree@@Base+0x558>)
   230bc:	add	r2, pc
   230be:	add	r1, pc
   230c0:	str	r3, [sp, #0]
   230c2:	add	r0, pc
   230c4:	movw	r3, #1502	; 0x5de
   230c8:	bl	22f3a <btrfs_create_tree@@Base+0x31e>
   230cc:	ldr	r2, [pc, #168]	; (23178 <btrfs_create_tree@@Base+0x55c>)
   230ce:	ldr	r1, [pc, #172]	; (2317c <btrfs_create_tree@@Base+0x560>)
   230d0:	movs	r3, #1
   230d2:	ldr	r0, [pc, #172]	; (23180 <btrfs_create_tree@@Base+0x564>)
   230d4:	add	r2, pc
   230d6:	str	r3, [sp, #0]
   230d8:	add	r1, pc
   230da:	add	r0, pc
   230dc:	movw	r3, #1518	; 0x5ee
   230e0:	bl	22f3a <btrfs_create_tree@@Base+0x31e>
   230e4:	b.n	22fbe <btrfs_create_tree@@Base+0x3a2>
   230e6:	ldr	r1, [pc, #156]	; (23184 <btrfs_create_tree@@Base+0x568>)
   230e8:	b.n	22fdc <btrfs_create_tree@@Base+0x3c0>
   230ea:	movs	r2, #0
   230ec:	movs	r3, #0
   230ee:	b.n	22fea <btrfs_create_tree@@Base+0x3ce>
   230f0:	add.w	r3, r5, r5, lsl #5
   230f4:	movs	r0, #0
   230f6:	add	r3, r4
   230f8:	movs	r1, #0
   230fa:	ldr.w	r2, [r3, #214]!
   230fe:	ldr	r3, [r3, #4]
   23100:	strd	r0, r1, [sp, #32]
   23104:	ldrd	r0, r1, [sp, #64]	; 0x40
   23108:	strd	r0, r1, [sp, #24]
   2310c:	ldr	r1, [sp, #48]	; 0x30
   2310e:	str	r1, [sp, #16]
   23110:	ldr	r1, [sp, #52]	; 0x34
   23112:	str	r1, [sp, #20]
   23114:	ldrd	r0, r1, [sp, #40]	; 0x28
   23118:	strd	r0, r1, [sp, #8]
   2311c:	mov	r0, r7
   2311e:	ldr.w	r1, [r6, #464]	; 0x1d0
   23122:	ldr.w	r1, [r1, #384]	; 0x180
   23126:	str	r1, [sp, #0]
   23128:	movs	r1, #0
   2312a:	str	r1, [sp, #4]
   2312c:	mov	r1, r6
   2312e:	blx	r8
   23130:	mov	sl, r0
   23132:	cbz	r0, 2314a <btrfs_create_tree@@Base+0x52e>
   23134:	ldr	r2, [pc, #80]	; (23188 <btrfs_create_tree@@Base+0x56c>)
   23136:	movs	r3, #1
   23138:	ldr	r1, [pc, #80]	; (2318c <btrfs_create_tree@@Base+0x570>)
   2313a:	ldr	r0, [pc, #84]	; (23190 <btrfs_create_tree@@Base+0x574>)
   2313c:	add	r2, pc
   2313e:	str	r3, [sp, #0]
   23140:	add	r1, pc
   23142:	add	r0, pc
   23144:	movw	r3, #1511	; 0x5e7
   23148:	b.n	230c8 <btrfs_create_tree@@Base+0x4ac>
   2314a:	adds	r5, #1
   2314c:	b.n	2300e <btrfs_create_tree@@Base+0x3f2>
   2314e:	mov	r0, sl
   23150:	add	sp, #100	; 0x64
   23152:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23156:	nop
   23158:	ldrb	r0, [r0, #22]
   2315a:	movs	r4, r0
   2315c:	lsls	r0, r1, #10
   2315e:	movs	r0, r0
   23160:	ldrb	r0, [r5, #21]
   23162:	movs	r4, r0
   23164:	ldrb	r6, [r2, #21]
   23166:	movs	r4, r0
   23168:	lsls	r4, r6, #10
   2316a:	movs	r0, r0
   2316c:	lsls	r0, r0, #19
   2316e:	movs	r2, r0
   23170:	ldc2	0, cr0, [r4, #4]
   23174:	lsls	r0, r6, #3
   23176:	movs	r2, r0
   23178:	lsls	r0, r5, #18
   2317a:	movs	r2, r0
   2317c:	ldc2l	0, cr0, [sl, #-4]!
   23180:	lsls	r0, r3, #3
   23182:	movs	r2, r0
   23184:	lsls	r0, r1, #11
   23186:	movs	r0, r0
   23188:	lsls	r0, r0, #17
   2318a:	movs	r2, r0
   2318c:	ldc2	0, cr0, [r2, #-4]
   23190:	lsls	r0, r6, #1
   23192:	movs	r2, r0
   23194:	push	{r0, r1, r2, r3, r4, lr}
   23196:	ldr	r4, [pc, #40]	; (231c0 <btrfs_create_tree@@Base+0x5a4>)
   23198:	ldr	r5, [pc, #40]	; (231c4 <btrfs_create_tree@@Base+0x5a8>)
   2319a:	add	r4, pc
   2319c:	ldr	r4, [r4, r5]
   2319e:	ldr	r5, [sp, #24]
   231a0:	strd	r3, r2, [sp]
   231a4:	mov	r3, r1
   231a6:	ldr	r2, [pc, #32]	; (231c8 <btrfs_create_tree@@Base+0x5ac>)
   231a8:	movs	r1, #1
   231aa:	strd	r0, r5, [sp, #8]
   231ae:	add	r2, pc
   231b0:	ldr	r0, [r4, #0]
   231b2:	blx	9040 <__fprintf_chk@plt+0x4>
   231b6:	bl	22edc <btrfs_create_tree@@Base+0x2c0>
   231ba:	blx	91c0 <abort@plt>
   231be:	nop
   231c0:	ldrb	r6, [r7, #13]
   231c2:	movs	r4, r0
   231c4:	lsls	r4, r3, #10
   231c6:	movs	r0, r0
   231c8:	cbz	r0, 231f8 <btrfs_create_tree@@Base+0x5dc>
   231ca:	movs	r1, r0
   231cc:	push	{r0, r1, r4, lr}
   231ce:	ldr	r4, [sp, #16]
   231d0:	cbz	r4, 231d8 <btrfs_create_tree@@Base+0x5bc>
   231d2:	str	r4, [sp, #0]
   231d4:	bl	23194 <btrfs_create_tree@@Base+0x578>
   231d8:	add	sp, #8
   231da:	pop	{r4, pc}
   231dc:	cmp	r0, #176	; 0xb0
   231de:	push	{r0, r1, r2, lr}
   231e0:	beq.n	23208 <btrfs_create_tree@@Base+0x5ec>
   231e2:	cmp	r0, #182	; 0xb6
   231e4:	beq.n	23208 <btrfs_create_tree@@Base+0x5ec>
   231e6:	cmp	r0, #184	; 0xb8
   231e8:	beq.n	23210 <btrfs_create_tree@@Base+0x5f4>
   231ea:	cmp	r0, #178	; 0xb2
   231ec:	beq.n	23214 <btrfs_create_tree@@Base+0x5f8>
   231ee:	ldr	r2, [pc, #40]	; (23218 <btrfs_create_tree@@Base+0x5fc>)
   231f0:	movs	r3, #1
   231f2:	ldr	r1, [pc, #40]	; (2321c <btrfs_create_tree@@Base+0x600>)
   231f4:	ldr	r0, [pc, #40]	; (23220 <btrfs_create_tree@@Base+0x604>)
   231f6:	add	r2, pc
   231f8:	str	r3, [sp, #0]
   231fa:	adds	r2, #16
   231fc:	add	r1, pc
   231fe:	add	r0, pc
   23200:	movw	r3, #1818	; 0x71a
   23204:	bl	23194 <btrfs_create_tree@@Base+0x578>
   23208:	movs	r0, #9
   2320a:	add	sp, #12
   2320c:	ldr.w	pc, [sp], #4
   23210:	movs	r0, #13
   23212:	b.n	2320a <btrfs_create_tree@@Base+0x5ee>
   23214:	movs	r0, #29
   23216:	b.n	2320a <btrfs_create_tree@@Base+0x5ee>
   23218:	lsls	r6, r0, #14
   2321a:	movs	r2, r0
   2321c:	ldmia	r2, {r1, r2, r4, r5, r6, r7}
   2321e:	movs	r1, r0
   23220:	vrev64.16	d0, d1
   23224:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23228:	mov	r5, r3
   2322a:	vpush	{d8}
   2322e:	mov	r6, r2
   23230:	movs	r2, #25
   23232:	mov	r7, r1
   23234:	vmov	s16, r0
   23238:	ldr.w	fp, [r1]
   2323c:	sub	sp, #44	; 0x2c
   2323e:	ldr	r3, [r1, #32]
   23240:	add.w	r4, fp, #96	; 0x60
   23244:	mla	r3, r2, r3, r4
   23248:	adds	r2, r5, #1
   2324a:	ldr.w	r3, [r3, #118]	; 0x76
   2324e:	add.w	r3, r3, #101	; 0x65
   23252:	str	r3, [sp, #12]
   23254:	add.w	r8, r4, r3
   23258:	ldr.w	r9, [r4, r3]
   2325c:	ldr.w	sl, [r8, #4]
   23260:	bne.n	232d8 <btrfs_create_tree@@Base+0x6bc>
   23262:	cmp.w	sl, #0
   23266:	itte	eq
   23268:	cmpeq.w	r9, #1
   2326c:	moveq	r3, #1
   2326e:	movne	r3, #0
   23270:	ldr	r2, [pc, #336]	; (233c4 <btrfs_create_tree@@Base+0x7a8>)
   23272:	ldr	r1, [pc, #340]	; (233c8 <btrfs_create_tree@@Base+0x7ac>)
   23274:	ldr	r0, [pc, #340]	; (233cc <btrfs_create_tree@@Base+0x7b0>)
   23276:	add	r2, pc
   23278:	adds	r2, #45	; 0x2d
   2327a:	add	r1, pc
   2327c:	str	r3, [sp, #0]
   2327e:	add	r0, pc
   23280:	movw	r3, #1129	; 0x469
   23284:	strd	r1, r2, [sp, #16]
   23288:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   2328c:	asrs	r3, r5, #31
   2328e:	mov	r2, r5
   23290:	strd	r2, r3, [sp, #32]
   23294:	ldr	r3, [sp, #12]
   23296:	adds.w	r9, r9, r5
   2329a:	adc.w	sl, sl, r5, asr #31
   2329e:	ldrd	r1, r2, [sp, #16]
   232a2:	str.w	r9, [r4, r3]
   232a6:	str.w	sl, [r8, #4]
   232aa:	ldrb.w	sl, [r4, r6]
   232ae:	cmp.w	sl, #178	; 0xb2
   232b2:	bne.n	232dc <btrfs_create_tree@@Base+0x6c0>
   232b4:	add.w	r9, r6, #1
   232b8:	add.w	r3, r4, r9
   232bc:	ldr	r3, [r3, #24]
   232be:	str	r3, [sp, #16]
   232c0:	movs	r3, #0
   232c2:	mov	r8, r3
   232c4:	str	r3, [sp, #20]
   232c6:	adds	r5, #1
   232c8:	bne.n	2336c <btrfs_create_tree@@Base+0x750>
   232ca:	ldrd	r3, r2, [sp, #16]
   232ce:	orrs	r3, r2
   232d0:	ite	eq
   232d2:	moveq	r3, #1
   232d4:	movne	r3, #0
   232d6:	b.n	23318 <btrfs_create_tree@@Base+0x6fc>
   232d8:	movs	r3, #0
   232da:	b.n	23270 <btrfs_create_tree@@Base+0x654>
   232dc:	cmp.w	sl, #184	; 0xb8
   232e0:	bne.n	232f4 <btrfs_create_tree@@Base+0x6d8>
   232e2:	add.w	r8, r6, #9
   232e6:	ldr.w	r3, [r4, r8]
   232ea:	str	r3, [sp, #16]
   232ec:	movs	r3, #0
   232ee:	mov	r9, r3
   232f0:	str	r3, [sp, #20]
   232f2:	b.n	232c6 <btrfs_create_tree@@Base+0x6aa>
   232f4:	adds	r5, #1
   232f6:	ldr	r0, [pc, #216]	; (233d0 <btrfs_create_tree@@Base+0x7b4>)
   232f8:	mov.w	r8, #0
   232fc:	movw	r3, #1143	; 0x477
   23300:	it	ne
   23302:	movne	r5, #1
   23304:	add	r0, pc
   23306:	str	r5, [sp, #0]
   23308:	mov	r9, r8
   2330a:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2330e:	movs	r3, #1
   23310:	str	r3, [sp, #16]
   23312:	mov	r3, r8
   23314:	str.w	r8, [sp, #20]
   23318:	ldr	r2, [pc, #184]	; (233d4 <btrfs_create_tree@@Base+0x7b8>)
   2331a:	ldr	r1, [pc, #188]	; (233d8 <btrfs_create_tree@@Base+0x7bc>)
   2331c:	ldr	r0, [pc, #188]	; (233dc <btrfs_create_tree@@Base+0x7c0>)
   2331e:	add	r2, pc
   23320:	adds	r2, #45	; 0x2d
   23322:	str	r3, [sp, #0]
   23324:	add	r1, pc
   23326:	movw	r3, #1146	; 0x47a
   2332a:	add	r0, pc
   2332c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   23330:	ldr	r2, [sp, #16]
   23332:	ldr	r3, [sp, #32]
   23334:	adds	r3, r3, r2
   23336:	ldr	r2, [sp, #36]	; 0x24
   23338:	str	r3, [sp, #24]
   2333a:	ldr	r3, [sp, #20]
   2333c:	adc.w	r3, r2, r3
   23340:	str	r3, [sp, #28]
   23342:	ldrd	r2, r3, [sp, #24]
   23346:	orrs	r3, r2
   23348:	beq.n	23370 <btrfs_create_tree@@Base+0x754>
   2334a:	cmp.w	sl, #178	; 0xb2
   2334e:	ldr	r3, [sp, #24]
   23350:	itet	eq
   23352:	addeq	r4, r9
   23354:	strne.w	r3, [r4, r8]
   23358:	streq	r3, [r4, #24]
   2335a:	mov	r0, fp
   2335c:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   23360:	movs	r0, #0
   23362:	add	sp, #44	; 0x2c
   23364:	vpop	{d8}
   23368:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2336c:	movs	r3, #0
   2336e:	b.n	23318 <btrfs_create_tree@@Base+0x6fc>
   23370:	mov	r0, sl
   23372:	bl	231dc <btrfs_create_tree@@Base+0x5c0>
   23376:	ldr	r3, [r7, #32]
   23378:	movs	r2, #25
   2337a:	mla	r4, r2, r3, r4
   2337e:	ldr	r3, [sp, #12]
   23380:	ldr.w	r4, [r4, #122]	; 0x7a
   23384:	add	r3, r4
   23386:	adds	r2, r6, r0
   23388:	mov	r5, r0
   2338a:	cmp	r3, r2
   2338c:	bls.n	2339a <btrfs_create_tree@@Base+0x77e>
   2338e:	subs	r3, r3, r6
   23390:	mov	r1, r6
   23392:	subs	r3, r3, r0
   23394:	mov	r0, fp
   23396:	bl	1bc2c <memmove_extent_buffer@@Base>
   2339a:	subs	r2, r4, r5
   2339c:	mov	r1, r7
   2339e:	vmov	r0, s16
   233a2:	movs	r3, #1
   233a4:	bl	1e71c <btrfs_truncate_item@@Base>
   233a8:	ldr	r2, [pc, #52]	; (233e0 <btrfs_create_tree@@Base+0x7c4>)
   233aa:	ldr	r1, [pc, #56]	; (233e4 <btrfs_create_tree@@Base+0x7c8>)
   233ac:	movw	r3, #1164	; 0x48c
   233b0:	add	r2, pc
   233b2:	adds	r2, #45	; 0x2d
   233b4:	add	r1, pc
   233b6:	str	r0, [sp, #0]
   233b8:	ldr	r0, [pc, #44]	; (233e8 <btrfs_create_tree@@Base+0x7cc>)
   233ba:	add	r0, pc
   233bc:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   233c0:	b.n	2335a <btrfs_create_tree@@Base+0x73e>
   233c2:	nop
   233c4:	lsls	r6, r0, #12
   233c6:	movs	r2, r0
   233c8:			; <UNDEFINED> instruction: 0xfbd80001
   233cc:	umlal	r0, r0, r2, r1
   233d0:	smull	r0, r0, r7, r1
   233d4:	lsls	r6, r3, #9
   233d6:	movs	r2, r0
   233d8:	smlad	r0, lr, r1, r0
   233dc:	usada8	r0, r3, r1, r0
   233e0:	lsls	r4, r1, #7
   233e2:	movs	r2, r0
   233e4:			; <UNDEFINED> instruction: 0xfa9e0001
   233e8:	stmia	r7!, {r3, r7}
   233ea:	movs	r1, r0
   233ec:	push	{r4, r5, r6, r7, lr}
   233ee:	mov	r7, r2
   233f0:	ldr	r2, [pc, #132]	; (23478 <btrfs_create_tree@@Base+0x85c>)
   233f2:	mov	r4, r3
   233f4:	ldr	r3, [pc, #132]	; (2347c <btrfs_create_tree@@Base+0x860>)
   233f6:	sub	sp, #36	; 0x24
   233f8:	add	r2, pc
   233fa:	mov	r5, r1
   233fc:	mov	r6, r0
   233fe:	ldr	r0, [r5, #0]
   23400:	ldr	r3, [r2, r3]
   23402:	ldr	r2, [r1, #32]
   23404:	add	r1, sp, #8
   23406:	ldr	r3, [r3, #0]
   23408:	str	r3, [sp, #28]
   2340a:	mov.w	r3, #0
   2340e:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   23412:	ldrb.w	r5, [sp, #16]
   23416:	movw	r3, #3377	; 0xd31
   2341a:	ldr	r2, [pc, #100]	; (23480 <btrfs_create_tree@@Base+0x864>)
   2341c:	add.w	r1, r5, #88	; 0x58
   23420:	ldr	r0, [pc, #96]	; (23484 <btrfs_create_tree@@Base+0x868>)
   23422:	add	r2, pc
   23424:	uxtb	r1, r1
   23426:	adds	r2, #74	; 0x4a
   23428:	cmp	r1, #1
   2342a:	add	r0, pc
   2342c:	ite	ls
   2342e:	movls	r1, #0
   23430:	movhi	r1, #1
   23432:	str	r1, [sp, #0]
   23434:	ldr	r1, [pc, #80]	; (23488 <btrfs_create_tree@@Base+0x86c>)
   23436:	add	r1, pc
   23438:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2343c:	ldrd	r2, r3, [sp, #8]
   23440:	cmp	r5, #168	; 0xa8
   23442:	strd	r2, r3, [r7]
   23446:	iteet	ne
   23448:	ldrne	r3, [r6, #0]
   2344a:	ldreq.w	r2, [sp, #17]
   2344e:	ldreq.w	r3, [sp, #21]
   23452:	ldrne.w	r2, [r3, #384]	; 0x180
   23456:	it	ne
   23458:	movne	r3, #0
   2345a:	strd	r2, r3, [r4]
   2345e:	ldr	r2, [pc, #44]	; (2348c <btrfs_create_tree@@Base+0x870>)
   23460:	ldr	r3, [pc, #24]	; (2347c <btrfs_create_tree@@Base+0x860>)
   23462:	add	r2, pc
   23464:	ldr	r3, [r2, r3]
   23466:	ldr	r2, [r3, #0]
   23468:	ldr	r3, [sp, #28]
   2346a:	eors	r2, r3
   2346c:	beq.n	23472 <btrfs_create_tree@@Base+0x856>
   2346e:	blx	8c90 <__stack_chk_fail@plt>
   23472:	add	sp, #36	; 0x24
   23474:	pop	{r4, r5, r6, r7, pc}
   23476:	nop
   23478:	ldrb	r0, [r4, #4]
   2347a:	movs	r4, r0
   2347c:	lsls	r0, r1, #10
   2347e:	movs	r0, r0
   23480:	lsls	r2, r3, #5
   23482:	movs	r2, r0
   23484:			; <UNDEFINED> instruction: 0xfa9a0001
   23488:			; <UNDEFINED> instruction: 0xfa1c0001
   2348c:	ldrb	r6, [r6, #2]
   2348e:	movs	r4, r0
   23490:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   23492:	mov	r4, r0
   23494:	ldrd	r0, r3, [r0, #48]	; 0x30
   23498:	ldr	r2, [pc, #140]	; (23528 <btrfs_create_tree@@Base+0x90c>)
   2349a:	orrs	r3, r0
   2349c:	ldr	r1, [pc, #140]	; (2352c <btrfs_create_tree@@Base+0x910>)
   2349e:	ldr	r0, [pc, #144]	; (23530 <btrfs_create_tree@@Base+0x914>)
   234a0:	add	r2, pc
   234a2:	ite	eq
   234a4:	moveq	r3, #1
   234a6:	movne	r3, #0
   234a8:	adds	r2, #92	; 0x5c
   234aa:	add	r1, pc
   234ac:	add	r0, pc
   234ae:	str	r3, [sp, #0]
   234b0:	movs	r3, #163	; 0xa3
   234b2:	strd	r1, r2, [sp, #8]
   234b6:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   234ba:	ldrd	r3, r0, [r4, #48]	; 0x30
   234be:	ldrd	r1, r2, [sp, #8]
   234c2:	adds.w	r6, r3, #4294967295	; 0xffffffff
   234c6:	adc.w	r7, r0, #4294967295	; 0xffffffff
   234ca:	strd	r6, r7, [r4, #48]	; 0x30
   234ce:	orrs.w	r3, r6, r7
   234d2:	bne.n	23524 <btrfs_create_tree@@Base+0x908>
   234d4:	ldrb.w	r3, [r4, #62]	; 0x3e
   234d8:	ldr	r0, [pc, #88]	; (23534 <btrfs_create_tree@@Base+0x918>)
   234da:	ubfx	r3, r3, #1, #1
   234de:	str	r3, [sp, #0]
   234e0:	add	r0, pc
   234e2:	movs	r3, #165	; 0xa5
   234e4:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   234e8:	ldrb.w	r3, [r4, #61]	; 0x3d
   234ec:	subs	r3, #176	; 0xb0
   234ee:	cmp	r3, #8
   234f0:	bhi.n	2350c <btrfs_create_tree@@Base+0x8f0>
   234f2:	tbb	[pc, r3]
   234f6:	lsrs	r5, r0, #12
   234f8:	lsrs	r5, r0, #12
   234fa:	lsrs	r3, r1, #12
   234fc:	lsrs	r5, r0, #12
   234fe:	movs	r5, r0
   23500:	mov	r0, r4
   23502:	add	sp, #16
   23504:	ldmia.w	sp!, {r4, r6, r7, lr}
   23508:	b.w	8b80 <free@plt>
   2350c:	ldr	r2, [pc, #40]	; (23538 <btrfs_create_tree@@Base+0x91c>)
   2350e:	movs	r3, #1
   23510:	ldr	r1, [pc, #40]	; (2353c <btrfs_create_tree@@Base+0x920>)
   23512:	ldr	r0, [pc, #44]	; (23540 <btrfs_create_tree@@Base+0x924>)
   23514:	add	r2, pc
   23516:	str	r3, [sp, #0]
   23518:	adds	r2, #92	; 0x5c
   2351a:	add	r1, pc
   2351c:	add	r0, pc
   2351e:	movs	r3, #176	; 0xb0
   23520:	bl	23194 <btrfs_create_tree@@Base+0x578>
   23524:	add	sp, #16
   23526:	pop	{r4, r6, r7, pc}
   23528:	lsls	r4, r3, #3
   2352a:	movs	r2, r0
   2352c:			; <UNDEFINED> instruction: 0xfa660001
   23530:			; <UNDEFINED> instruction: 0xfa720001
   23534:			; <UNDEFINED> instruction: 0xfa4d0001
   23538:	lsls	r0, r5, #1
   2353a:	movs	r2, r0
   2353c:	ldr??.w	r0, [r6, #1]
   23540:	ldc2	0, cr0, [r6], {1}
   23544:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23548:	mov	r4, r2
   2354a:	ldr	r2, [pc, #288]	; (2366c <btrfs_create_tree@@Base+0xa50>)
   2354c:	mov	r5, r3
   2354e:	ldr	r3, [pc, #288]	; (23670 <btrfs_create_tree@@Base+0xa54>)
   23550:	sub	sp, #36	; 0x24
   23552:	add	r2, pc
   23554:	ldr.w	r9, [pc, #284]	; 23674 <btrfs_create_tree@@Base+0xa58>
   23558:	ldr.w	sl, [pc, #284]	; 23678 <btrfs_create_tree@@Base+0xa5c>
   2355c:	mov	r8, r0
   2355e:	ldr	r3, [r2, r3]
   23560:	add	r9, pc
   23562:	ldr	r0, [pc, #280]	; (2367c <btrfs_create_tree@@Base+0xa60>)
   23564:	add	sl, pc
   23566:	ldr	r3, [r3, #0]
   23568:	str	r3, [sp, #28]
   2356a:	mov.w	r3, #0
   2356e:	mov	r6, r1
   23570:	movs	r3, #0
   23572:	str	r3, [sp, #0]
   23574:	add.w	r2, sl, #114	; 0x72
   23578:	add	r0, pc
   2357a:	movw	r3, #1223	; 0x4c7
   2357e:	mov	r1, r9
   23580:	ldr	r7, [sp, #72]	; 0x48
   23582:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   23586:	cbz	r5, 235aa <btrfs_create_tree@@Base+0x98e>
   23588:	mov.w	r3, #4294967295	; 0xffffffff
   2358c:	mov	r2, r5
   2358e:	mov	r1, r4
   23590:	mov	r0, r6
   23592:	bl	23224 <btrfs_create_tree@@Base+0x608>
   23596:	ldr	r2, [pc, #232]	; (23680 <btrfs_create_tree@@Base+0xa64>)
   23598:	ldr	r3, [pc, #212]	; (23670 <btrfs_create_tree@@Base+0xa54>)
   2359a:	add	r2, pc
   2359c:	ldr	r3, [r2, r3]
   2359e:	ldr	r2, [r3, #0]
   235a0:	ldr	r3, [sp, #28]
   235a2:	eors	r2, r3
   235a4:	beq.n	23664 <btrfs_create_tree@@Base+0xa48>
   235a6:	blx	8c90 <__stack_chk_fail@plt>
   235aa:	cbz	r7, 23602 <btrfs_create_tree@@Base+0x9e6>
   235ac:	ldr	r7, [r4, #0]
   235ae:	add	r1, sp, #8
   235b0:	ldr	r2, [r4, #32]
   235b2:	mov	r0, r7
   235b4:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   235b8:	ldrb.w	fp, [sp, #16]
   235bc:	add.w	r3, r7, #96	; 0x60
   235c0:	cmp.w	fp, #178	; 0xb2
   235c4:	bne.n	2360e <btrfs_create_tree@@Base+0x9f2>
   235c6:	ldr	r2, [r4, #32]
   235c8:	movs	r1, #25
   235ca:	mov	r9, r5
   235cc:	mla	r2, r1, r2, r3
   235d0:	ldr.w	r2, [r2, #118]	; 0x76
   235d4:	adds	r2, #101	; 0x65
   235d6:	add	r3, r2
   235d8:	mov	r5, r2
   235da:	ldr.w	sl, [r3, #24]
   235de:	ldr	r2, [pc, #164]	; (23684 <btrfs_create_tree@@Base+0xa68>)
   235e0:	clz	r3, sl
   235e4:	ldr	r1, [pc, #160]	; (23688 <btrfs_create_tree@@Base+0xa6c>)
   235e6:	ldr	r0, [pc, #164]	; (2368c <btrfs_create_tree@@Base+0xa70>)
   235e8:	add	r2, pc
   235ea:	lsrs	r3, r3, #5
   235ec:	adds	r2, #136	; 0x88
   235ee:	str	r3, [sp, #0]
   235f0:	add	r1, pc
   235f2:	add	r0, pc
   235f4:	movw	r3, #733	; 0x2dd
   235f8:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   235fc:	subs.w	sl, sl, #1
   23600:	bne.n	23640 <btrfs_create_tree@@Base+0xa24>
   23602:	mov	r2, r4
   23604:	mov	r1, r6
   23606:	mov	r0, r8
   23608:	bl	22f28 <btrfs_create_tree@@Base+0x30c>
   2360c:	b.n	23596 <btrfs_create_tree@@Base+0x97a>
   2360e:	cmp.w	fp, #184	; 0xb8
   23612:	bne.n	2362a <btrfs_create_tree@@Base+0xa0e>
   23614:	ldr	r2, [r4, #32]
   23616:	movs	r1, #25
   23618:	mla	r2, r1, r2, r3
   2361c:	ldr.w	r9, [r2, #118]	; 0x76
   23620:	add.w	r9, r9, #101	; 0x65
   23624:	ldr.w	sl, [r3, r9]
   23628:	b.n	235de <btrfs_create_tree@@Base+0x9c2>
   2362a:	ldr	r0, [pc, #100]	; (23690 <btrfs_create_tree@@Base+0xa74>)
   2362c:	movs	r3, #1
   2362e:	add.w	r2, sl, #136	; 0x88
   23632:	str	r3, [sp, #0]
   23634:	add	r0, pc
   23636:	movw	r3, #730	; 0x2da
   2363a:	mov	r1, r9
   2363c:	bl	23194 <btrfs_create_tree@@Base+0x578>
   23640:	cmp.w	fp, #178	; 0xb2
   23644:	bne.n	23656 <btrfs_create_tree@@Base+0xa3a>
   23646:	add	r5, r7
   23648:	str.w	sl, [r5, #120]	; 0x78
   2364c:	mov	r0, r7
   2364e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   23652:	movs	r0, #0
   23654:	b.n	23596 <btrfs_create_tree@@Base+0x97a>
   23656:	cmp.w	fp, #184	; 0xb8
   2365a:	itt	eq
   2365c:	addeq	r9, r7
   2365e:	streq.w	sl, [r9, #96]	; 0x60
   23662:	b.n	2364c <btrfs_create_tree@@Base+0xa30>
   23664:	add	sp, #36	; 0x24
   23666:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2366a:	nop
   2366c:	strb	r6, [r0, #31]
   2366e:	movs	r4, r0
   23670:	lsls	r0, r1, #10
   23672:	movs	r0, r0
   23674:	ldr??.w	r0, [r2, #1]
   23678:	movs	r0, r3
   2367a:	movs	r2, r0
   2367c:	vst1.8	{d16[0]}, [r2], r1
   23680:	strb	r6, [r7, #29]
   23682:	movs	r4, r0
   23684:	vaddl.u16	q0, d4, d1
   23688:	str??.w	r0, [r2, r1]
   2368c:	vld4.8	{d16-d19}, [r6], r1
   23690:	usada8	r0, lr, r1, r0
   23694:	push	{r0, r1, r2, r3, r4, lr}
   23696:	ldr	r3, [pc, #40]	; (236c0 <btrfs_create_tree@@Base+0xaa4>)
   23698:	ldr	r4, [pc, #40]	; (236c4 <btrfs_create_tree@@Base+0xaa8>)
   2369a:	add	r3, pc
   2369c:	ldr	r4, [r3, r4]
   2369e:	movs	r3, #0
   236a0:	strd	r2, r1, [sp]
   236a4:	movs	r1, #1
   236a6:	strd	r0, r3, [sp, #8]
   236aa:	ldr	r2, [pc, #28]	; (236c8 <btrfs_create_tree@@Base+0xaac>)
   236ac:	ldr	r3, [pc, #28]	; (236cc <btrfs_create_tree@@Base+0xab0>)
   236ae:	add	r2, pc
   236b0:	ldr	r0, [r4, #0]
   236b2:	add	r3, pc
   236b4:	blx	9040 <__fprintf_chk@plt+0x4>
   236b8:	bl	22edc <btrfs_create_tree@@Base+0x2c0>
   236bc:	blx	91c0 <abort@plt>
   236c0:	strb	r6, [r7, #25]
   236c2:	movs	r4, r0
   236c4:	lsls	r4, r3, #10
   236c6:	movs	r0, r0
   236c8:			; <UNDEFINED> instruction: 0xb81c
   236ca:	movs	r1, r0
   236cc:			; <UNDEFINED> instruction: 0xf7a00001

000236d0 <btrfs_lookup_first_block_group@@Base>:
   236d0:	push	{r4, r5, r6, lr}
   236d2:	cmp	r3, #0
   236d4:	ldr	r4, [pc, #112]	; (23748 <btrfs_lookup_first_block_group@@Base+0x78>)
   236d6:	it	eq
   236d8:	cmpeq.w	r2, #69632	; 0x11000
   236dc:	ldr	r1, [pc, #108]	; (2374c <btrfs_lookup_first_block_group@@Base+0x7c>)
   236de:	sub	sp, #48	; 0x30
   236e0:	add	r4, pc
   236e2:	add.w	r6, r0, #128	; 0x80
   236e6:	mov	r5, r3
   236e8:	it	cc
   236ea:	movcc	r5, #0
   236ec:	ldr	r1, [r4, r1]
   236ee:	mov	r4, r2
   236f0:	it	cc
   236f2:	movcc.w	r4, #69632	; 0x11000
   236f6:	movs	r3, #22
   236f8:	ldr	r1, [r1, #0]
   236fa:	str	r1, [sp, #44]	; 0x2c
   236fc:	mov.w	r1, #0
   23700:	mov	r2, r4
   23702:	str	r3, [sp, #8]
   23704:	mov	r0, r6
   23706:	add	r3, sp, #32
   23708:	str	r3, [sp, #4]
   2370a:	add	r3, sp, #24
   2370c:	str	r3, [sp, #0]
   2370e:	mov	r3, r5
   23710:	bl	1b3b8 <find_first_extent_bit@@Base>
   23714:	cbz	r0, 2372c <btrfs_lookup_first_block_group@@Base+0x5c>
   23716:	movs	r0, #0
   23718:	ldr	r2, [pc, #52]	; (23750 <btrfs_lookup_first_block_group@@Base+0x80>)
   2371a:	ldr	r3, [pc, #48]	; (2374c <btrfs_lookup_first_block_group@@Base+0x7c>)
   2371c:	add	r2, pc
   2371e:	ldr	r3, [r2, r3]
   23720:	ldr	r2, [r3, #0]
   23722:	ldr	r3, [sp, #44]	; 0x2c
   23724:	eors	r2, r3
   23726:	beq.n	23742 <btrfs_lookup_first_block_group@@Base+0x72>
   23728:	blx	8c90 <__stack_chk_fail@plt>
   2372c:	add	r3, sp, #16
   2372e:	mov	r0, r6
   23730:	str	r3, [sp, #0]
   23732:	ldrd	r2, r3, [sp, #24]
   23736:	bl	1b494 <get_state_private@@Base>
   2373a:	cmp	r0, #0
   2373c:	bne.n	23716 <btrfs_lookup_first_block_group@@Base+0x46>
   2373e:	ldr	r0, [sp, #16]
   23740:	b.n	23718 <btrfs_lookup_first_block_group@@Base+0x48>
   23742:	add	sp, #48	; 0x30
   23744:	pop	{r4, r5, r6, pc}
   23746:	nop
   23748:	strb	r0, [r7, #24]
   2374a:	movs	r4, r0
   2374c:	lsls	r0, r1, #10
   2374e:	movs	r0, r0
   23750:	strb	r4, [r7, #23]
   23752:	movs	r4, r0

00023754 <btrfs_lookup_block_group@@Base>:
   23754:	ldr.w	ip, [pc, #136]	; 237e0 <btrfs_lookup_block_group@@Base+0x8c>
   23758:	ldr	r1, [pc, #136]	; (237e4 <btrfs_lookup_block_group@@Base+0x90>)
   2375a:	add	ip, pc
   2375c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   23760:	add.w	r8, r0, #128	; 0x80
   23764:	sub	sp, #48	; 0x30
   23766:	ldr.w	r1, [ip, r1]
   2376a:	mov	r0, r8
   2376c:	mov	r4, r2
   2376e:	ldr	r1, [r1, #0]
   23770:	str	r1, [sp, #44]	; 0x2c
   23772:	mov.w	r1, #0
   23776:	movs	r1, #22
   23778:	str	r1, [sp, #8]
   2377a:	add	r1, sp, #32
   2377c:	str	r1, [sp, #4]
   2377e:	add	r1, sp, #24
   23780:	str	r1, [sp, #0]
   23782:	mov	r5, r3
   23784:	bl	1b3b8 <find_first_extent_bit@@Base>
   23788:	cbz	r0, 237a0 <btrfs_lookup_block_group@@Base+0x4c>
   2378a:	movs	r0, #0
   2378c:	ldr	r2, [pc, #88]	; (237e8 <btrfs_lookup_block_group@@Base+0x94>)
   2378e:	ldr	r3, [pc, #84]	; (237e4 <btrfs_lookup_block_group@@Base+0x90>)
   23790:	add	r2, pc
   23792:	ldr	r3, [r2, r3]
   23794:	ldr	r2, [r3, #0]
   23796:	ldr	r3, [sp, #44]	; 0x2c
   23798:	eors	r2, r3
   2379a:	beq.n	237d8 <btrfs_lookup_block_group@@Base+0x84>
   2379c:	blx	8c90 <__stack_chk_fail@plt>
   237a0:	add	r3, sp, #16
   237a2:	mov	r0, r8
   237a4:	str	r3, [sp, #0]
   237a6:	ldrd	r2, r3, [sp, #24]
   237aa:	bl	1b494 <get_state_private@@Base>
   237ae:	cmp	r0, #0
   237b0:	bne.n	2378a <btrfs_lookup_block_group@@Base+0x36>
   237b2:	ldr	r0, [sp, #16]
   237b4:	ldrd	r2, r3, [r0, #40]	; 0x28
   237b8:	cmp	r5, r3
   237ba:	it	eq
   237bc:	cmpeq	r4, r2
   237be:	bcc.n	2378a <btrfs_lookup_block_group@@Base+0x36>
   237c0:	ldr.w	r1, [r0, #49]	; 0x31
   237c4:	ldr.w	ip, [r0, #53]	; 0x35
   237c8:	adds	r6, r1, r2
   237ca:	adc.w	r7, ip, r3
   237ce:	cmp	r5, r7
   237d0:	it	eq
   237d2:	cmpeq	r4, r6
   237d4:	bcc.n	2378c <btrfs_lookup_block_group@@Base+0x38>
   237d6:	b.n	2378a <btrfs_lookup_block_group@@Base+0x36>
   237d8:	add	sp, #48	; 0x30
   237da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   237de:	nop
   237e0:	strb	r6, [r7, #22]
   237e2:	movs	r4, r0
   237e4:	lsls	r0, r1, #10
   237e6:	movs	r0, r0
   237e8:	strb	r0, [r1, #22]
   237ea:	movs	r4, r0
   237ec:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237f0:	mov	r8, r0
   237f2:	ldrd	r6, r7, [sp, #48]	; 0x30
   237f6:	adds	r0, #160	; 0xa0
   237f8:	ldr.w	sl, [sp, #56]	; 0x38
   237fc:	mov	r9, r2
   237fe:	adds.w	r1, r6, #4294967295	; 0xffffffff
   23802:	mov	fp, r3
   23804:	adc.w	ip, r7, #4294967295	; 0xffffffff
   23808:	adds	r1, r1, r2
   2380a:	adc.w	ip, ip, r3
   2380e:	strd	r1, ip, [sp]
   23812:	cmp.w	sl, #0
   23816:	beq.n	2382a <btrfs_lookup_block_group@@Base+0xd6>
   23818:	bl	1b388 <set_extent_dirty@@Base>
   2381c:	orrs.w	r3, r6, r7
   23820:	bne.n	23830 <btrfs_lookup_block_group@@Base+0xdc>
   23822:	movs	r0, #0
   23824:	add	sp, #12
   23826:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2382a:	bl	1b3a0 <clear_extent_dirty@@Base>
   2382e:	b.n	2381c <btrfs_lookup_block_group@@Base+0xc8>
   23830:	mov	r2, r9
   23832:	mov	r3, fp
   23834:	mov	r0, r8
   23836:	bl	23754 <btrfs_lookup_block_group@@Base>
   2383a:	cbnz	r0, 2385e <btrfs_lookup_block_group@@Base+0x10a>
   2383c:	ldr.w	r4, [r8, #388]	; 0x184
   23840:	cmp	r7, r0
   23842:	mov	r5, r0
   23844:	it	eq
   23846:	cmpeq	r6, r4
   23848:	bcs.n	2384e <btrfs_lookup_block_group@@Base+0xfa>
   2384a:	mov	r4, r6
   2384c:	mov	r5, r7
   2384e:	adds.w	r9, r9, r4
   23852:	adc.w	fp, fp, r5
   23856:	subs	r6, r6, r4
   23858:	sbc.w	r7, r7, r5
   2385c:	b.n	2381c <btrfs_lookup_block_group@@Base+0xc8>
   2385e:	ldr.w	r1, [r0, #49]	; 0x31
   23862:	ldrd	r3, r2, [r0, #40]	; 0x28
   23866:	ldr.w	ip, [r0, #53]	; 0x35
   2386a:	adds	r3, r1, r3
   2386c:	adc.w	r2, ip, r2
   23870:	subs.w	r4, r3, r9
   23874:	sbc.w	r5, r2, fp
   23878:	ldrd	r3, r1, [r0, #88]	; 0x58
   2387c:	cmp	r7, r5
   2387e:	ldr	r2, [r0, #60]	; 0x3c
   23880:	it	eq
   23882:	cmpeq	r6, r4
   23884:	itt	cc
   23886:	movcc	r4, r6
   23888:	movcc	r5, r7
   2388a:	cmp.w	sl, #0
   2388e:	beq.n	238b8 <btrfs_lookup_block_group@@Base+0x164>
   23890:	adds	r3, r3, r4
   23892:	adc.w	r1, r5, r1
   23896:	strd	r3, r1, [r0, #88]	; 0x58
   2389a:	ldrd	r3, r1, [r2, #24]
   2389e:	adds	r3, r3, r4
   238a0:	adc.w	r1, r5, r1
   238a4:	strd	r3, r1, [r2, #24]
   238a8:	ldrd	r3, r2, [r8, #328]	; 0x148
   238ac:	adds	r3, r3, r4
   238ae:	adc.w	r2, r5, r2
   238b2:	strd	r3, r2, [r8, #328]	; 0x148
   238b6:	b.n	2384e <btrfs_lookup_block_group@@Base+0xfa>
   238b8:	subs	r3, r3, r4
   238ba:	sbc.w	r1, r1, r5
   238be:	strd	r3, r1, [r0, #88]	; 0x58
   238c2:	ldrd	r3, r1, [r2, #24]
   238c6:	subs	r3, r3, r4
   238c8:	sbc.w	r1, r1, r5
   238cc:	strd	r3, r1, [r2, #24]
   238d0:	ldrd	r3, r2, [r8, #328]	; 0x148
   238d4:	subs	r3, r3, r4
   238d6:	sbc.w	r2, r2, r5
   238da:	b.n	238b2 <btrfs_lookup_block_group@@Base+0x15e>
   238dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238e0:	mov	r9, r0
   238e2:	vpush	{d8}
   238e6:	mov	r7, r2
   238e8:	mov	r8, r3
   238ea:	sub	sp, #28
   238ec:	ldr.w	r1, [r0, #308]	; 0x134
   238f0:	ldr	r0, [sp, #80]	; 0x50
   238f2:	ldr	r3, [r1, #120]	; 0x78
   238f4:	ldr	r2, [r1, #124]	; 0x7c
   238f6:	cbz	r0, 2392c <btrfs_lookup_block_group@@Base+0x1d8>
   238f8:	ldr	r0, [sp, #72]	; 0x48
   238fa:	adds	r3, r0, r3
   238fc:	ldr	r0, [sp, #76]	; 0x4c
   238fe:	adc.w	r2, r0, r2
   23902:	str	r3, [r1, #120]	; 0x78
   23904:	ldr	r3, [pc, #332]	; (23a54 <btrfs_lookup_block_group@@Base+0x300>)
   23906:	str	r2, [r1, #124]	; 0x7c
   23908:	add	r3, pc
   2390a:	adds	r3, #159	; 0x9f
   2390c:	vmov	s16, r3
   23910:	ldr	r3, [pc, #324]	; (23a58 <btrfs_lookup_block_group@@Base+0x304>)
   23912:	add	r3, pc
   23914:	vmov	s17, r3
   23918:	ldrd	r2, r3, [sp, #72]	; 0x48
   2391c:	orrs	r3, r2
   2391e:	bne.n	23938 <btrfs_lookup_block_group@@Base+0x1e4>
   23920:	movs	r0, #0
   23922:	add	sp, #28
   23924:	vpop	{d8}
   23928:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2392c:	ldr	r0, [sp, #72]	; 0x48
   2392e:	subs	r3, r3, r0
   23930:	ldr	r0, [sp, #76]	; 0x4c
   23932:	sbc.w	r2, r2, r0
   23936:	b.n	23902 <btrfs_lookup_block_group@@Base+0x1ae>
   23938:	mov	r2, r7
   2393a:	mov	r3, r8
   2393c:	mov	r0, r9
   2393e:	bl	23754 <btrfs_lookup_block_group@@Base>
   23942:	mov	r6, r0
   23944:	cmp	r0, #0
   23946:	beq.w	23a4e <btrfs_lookup_block_group@@Base+0x2fa>
   2394a:	ldrd	sl, fp, [r0, #40]	; 0x28
   2394e:	ldr.w	r3, [r0, #53]	; 0x35
   23952:	subs.w	r1, r7, sl
   23956:	ldr.w	r2, [r0, #49]	; 0x31
   2395a:	str	r1, [sp, #16]
   2395c:	sbc.w	r1, r8, fp
   23960:	str	r1, [sp, #20]
   23962:	ldrd	r0, r1, [sp, #16]
   23966:	cmp	r3, r1
   23968:	vmov	r1, s17
   2396c:	it	eq
   2396e:	cmpeq	r2, r0
   23970:	ldr	r0, [pc, #232]	; (23a5c <btrfs_lookup_block_group@@Base+0x308>)
   23972:	vmov	r2, s16
   23976:	ite	cc
   23978:	movcc	r3, #1
   2397a:	movcs	r3, #0
   2397c:	add	r0, pc
   2397e:	str	r3, [sp, #0]
   23980:	mov.w	r3, #1784	; 0x6f8
   23984:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   23988:	ldrd	r2, r3, [r6, #40]	; 0x28
   2398c:	movs	r1, #1
   2398e:	str	r1, [sp, #8]
   23990:	ldr.w	r1, [r6, #49]	; 0x31
   23994:	ldr.w	r0, [r6, #53]	; 0x35
   23998:	adds	r1, r1, r2
   2399a:	adc.w	r0, r3, r0
   2399e:	adds.w	r1, r1, #4294967295	; 0xffffffff
   239a2:	adc.w	r0, r0, #4294967295	; 0xffffffff
   239a6:	strd	r1, r0, [sp]
   239aa:	add.w	r0, r9, #128	; 0x80
   239ae:	bl	1b15c <set_extent_bits@@Base>
   239b2:	ldr.w	r3, [r6, #49]	; 0x31
   239b6:	ldr.w	r0, [r6, #53]	; 0x35
   239ba:	adds.w	r3, r3, sl
   239be:	ldrd	r2, r1, [r6, #72]	; 0x48
   239c2:	adc.w	fp, r0, fp
   239c6:	subs	r4, r3, r7
   239c8:	sbc.w	r5, fp, r8
   239cc:	ldrd	sl, fp, [sp, #72]	; 0x48
   239d0:	ldr	r0, [sp, #80]	; 0x50
   239d2:	cmp	fp, r5
   239d4:	ldr	r3, [r6, #60]	; 0x3c
   239d6:	it	eq
   239d8:	cmpeq	sl, r4
   239da:	itt	cc
   239dc:	movcc	r4, sl
   239de:	movcc	r5, fp
   239e0:	cbz	r0, 23a12 <btrfs_lookup_block_group@@Base+0x2be>
   239e2:	adds.w	sl, r2, r4
   239e6:	adc.w	fp, r1, r5
   239ea:	ldrd	r2, r1, [r3, #16]
   239ee:	adds	r2, r2, r4
   239f0:	adc.w	r1, r5, r1
   239f4:	strd	r2, r1, [r3, #16]
   239f8:	ldr	r3, [sp, #72]	; 0x48
   239fa:	strd	sl, fp, [r6, #72]	; 0x48
   239fe:	subs	r3, r3, r4
   23a00:	str	r3, [sp, #72]	; 0x48
   23a02:	ldr	r3, [sp, #76]	; 0x4c
   23a04:	sbc.w	r3, r3, r5
   23a08:	adds	r7, r7, r4
   23a0a:	adc.w	r8, r8, r5
   23a0e:	str	r3, [sp, #76]	; 0x4c
   23a10:	b.n	23918 <btrfs_lookup_block_group@@Base+0x1c4>
   23a12:	subs.w	sl, r2, r4
   23a16:	sbc.w	fp, r1, r5
   23a1a:	ldrd	r2, r1, [r3, #16]
   23a1e:	subs	r2, r2, r4
   23a20:	sbc.w	r1, r1, r5
   23a24:	strd	r2, r1, [r3, #16]
   23a28:	ldr	r3, [sp, #84]	; 0x54
   23a2a:	cmp	r3, #0
   23a2c:	beq.n	239f8 <btrfs_lookup_block_group@@Base+0x2a4>
   23a2e:	adds.w	r3, r7, #4294967295	; 0xffffffff
   23a32:	add.w	r0, r9, #96	; 0x60
   23a36:	adc.w	r2, r8, #4294967295	; 0xffffffff
   23a3a:	adds	r3, r3, r4
   23a3c:	adc.w	r2, r5, r2
   23a40:	strd	r3, r2, [sp]
   23a44:	mov	r2, r7
   23a46:	mov	r3, r8
   23a48:	bl	1b388 <set_extent_dirty@@Base>
   23a4c:	b.n	239f8 <btrfs_lookup_block_group@@Base+0x2a4>
   23a4e:	mov.w	r0, #4294967295	; 0xffffffff
   23a52:	b.n	23922 <btrfs_lookup_block_group@@Base+0x1ce>
   23a54:	ldc2l	0, cr0, [r4], #-4
   23a58:	adc.w	r0, r0, #8454144	; 0x810000
   23a5c:			; <UNDEFINED> instruction: 0xf5f40001
   23a60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a64:	sub	sp, #108	; 0x6c
   23a66:	add.w	fp, r0, #128	; 0x80
   23a6a:	mov	r5, r1
   23a6c:	strd	r2, r3, [sp, #16]
   23a70:	ldr	r2, [pc, #504]	; (23c6c <btrfs_lookup_block_group@@Base+0x518>)
   23a72:	ldr	r6, [sp, #144]	; 0x90
   23a74:	ldr	r3, [pc, #504]	; (23c70 <btrfs_lookup_block_group@@Base+0x51c>)
   23a76:	add	r2, pc
   23a78:	ands.w	r8, r6, #1
   23a7c:	mov.w	r4, r6, asr #31
   23a80:	ldr	r3, [r2, r3]
   23a82:	it	ne
   23a84:	movne.w	r8, #2
   23a88:	lsls	r2, r6, #29
   23a8a:	ldr	r3, [r3, #0]
   23a8c:	str	r3, [sp, #100]	; 0x64
   23a8e:	mov.w	r3, #0
   23a92:	it	mi
   23a94:	orrmi.w	r8, r8, #4
   23a98:	mov	r3, r6
   23a9a:	strd	r3, r4, [sp, #24]
   23a9e:	lsls	r3, r6, #30
   23aa0:	ldrd	r3, r4, [sp, #16]
   23aa4:	it	mi
   23aa6:	orrmi.w	r8, r8, #16
   23aaa:	orrs	r3, r4
   23aac:	bne.n	23b66 <btrfs_lookup_block_group@@Base+0x412>
   23aae:	cmp	r5, #0
   23ab0:	bne.w	23bd6 <btrfs_lookup_block_group@@Base+0x482>
   23ab4:	ldrd	r9, sl, [sp, #16]
   23ab8:	movs	r5, #0
   23aba:	add	r3, sp, #80	; 0x50
   23abc:	str	r3, [sp, #32]
   23abe:	add	r3, sp, #72	; 0x48
   23ac0:	str	r3, [sp, #40]	; 0x28
   23ac2:	ldr	r3, [sp, #32]
   23ac4:	mov	r2, r9
   23ac6:	mov	r0, fp
   23ac8:	str.w	r8, [sp, #8]
   23acc:	str	r3, [sp, #4]
   23ace:	ldr	r3, [sp, #40]	; 0x28
   23ad0:	str	r3, [sp, #0]
   23ad2:	mov	r3, sl
   23ad4:	bl	1b3b8 <find_first_extent_bit@@Base>
   23ad8:	cmp	r0, #0
   23ada:	bne.w	23c58 <btrfs_lookup_block_group@@Base+0x504>
   23ade:	add	r3, sp, #88	; 0x58
   23ae0:	mov	r0, fp
   23ae2:	str	r3, [sp, #0]
   23ae4:	ldrd	r2, r3, [sp, #72]	; 0x48
   23ae8:	bl	1b494 <get_state_private@@Base>
   23aec:	cmp	r0, #0
   23aee:	bne.w	23c58 <btrfs_lookup_block_group@@Base+0x504>
   23af2:	ldr	r4, [sp, #88]	; 0x58
   23af4:	ldrd	r3, r2, [r4, #40]	; 0x28
   23af8:	ldr.w	r6, [r4, #49]	; 0x31
   23afc:	ldr.w	r7, [r4, #53]	; 0x35
   23b00:	adds.w	r9, r6, r3
   23b04:	ldr	r3, [r4, #108]	; 0x6c
   23b06:	adc.w	sl, r7, r2
   23b0a:	cmp	r3, #0
   23b0c:	bne.n	23ac2 <btrfs_lookup_block_group@@Base+0x36e>
   23b0e:	ldrd	r2, r3, [r4, #96]	; 0x60
   23b12:	ldr	r1, [sp, #24]
   23b14:	ands	r2, r1
   23b16:	str	r2, [sp, #48]	; 0x30
   23b18:	ldr	r2, [sp, #28]
   23b1a:	ands	r3, r2
   23b1c:	str	r3, [sp, #52]	; 0x34
   23b1e:	ldrd	r0, r1, [sp, #48]	; 0x30
   23b22:	ldrd	r2, r3, [sp, #24]
   23b26:	cmp	r3, r1
   23b28:	it	eq
   23b2a:	cmpeq	r2, r0
   23b2c:	bne.n	23ac2 <btrfs_lookup_block_group@@Base+0x36e>
   23b2e:	ldr	r3, [r4, #72]	; 0x48
   23b30:	str	r3, [sp, #64]	; 0x40
   23b32:	ldr	r3, [r4, #76]	; 0x4c
   23b34:	str	r3, [sp, #68]	; 0x44
   23b36:	cbnz	r5, 23b46 <btrfs_lookup_block_group@@Base+0x3f2>
   23b38:	mov	r0, r6
   23b3a:	mov	r1, r7
   23b3c:	movs	r2, #10
   23b3e:	bl	36360 <div_factor@@Base>
   23b42:	mov	r6, r0
   23b44:	mov	r7, r1
   23b46:	ldrd	r3, r2, [r4, #88]	; 0x58
   23b4a:	ldr	r1, [sp, #64]	; 0x40
   23b4c:	adds	r3, r1, r3
   23b4e:	str	r3, [sp, #56]	; 0x38
   23b50:	ldr	r3, [sp, #68]	; 0x44
   23b52:	adc.w	r3, r2, r3
   23b56:	str	r3, [sp, #60]	; 0x3c
   23b58:	ldrd	r2, r3, [sp, #56]	; 0x38
   23b5c:	cmp	r3, r7
   23b5e:	it	eq
   23b60:	cmpeq	r2, r6
   23b62:	bcs.n	23ac2 <btrfs_lookup_block_group@@Base+0x36e>
   23b64:	b.n	23bc2 <btrfs_lookup_block_group@@Base+0x46e>
   23b66:	ldrd	r2, r3, [sp, #16]
   23b6a:	bl	23754 <btrfs_lookup_block_group@@Base>
   23b6e:	mov	r4, r0
   23b70:	cmp	r0, #0
   23b72:	beq.n	23aae <btrfs_lookup_block_group@@Base+0x35a>
   23b74:	ldr	r3, [r0, #108]	; 0x6c
   23b76:	cmp	r3, #0
   23b78:	bne.n	23aae <btrfs_lookup_block_group@@Base+0x35a>
   23b7a:	ldrd	r0, r1, [r0, #96]	; 0x60
   23b7e:	and.w	r2, r6, r0
   23b82:	ldr	r0, [sp, #28]
   23b84:	and.w	r3, r0, r1
   23b88:	asrs	r1, r6, #31
   23b8a:	cmp	r1, r3
   23b8c:	it	eq
   23b8e:	cmpeq	r6, r2
   23b90:	bne.n	23aae <btrfs_lookup_block_group@@Base+0x35a>
   23b92:	ldrd	r2, r1, [r4, #88]	; 0x58
   23b96:	ldrd	r3, r0, [r4, #72]	; 0x48
   23b9a:	adds	r3, r3, r2
   23b9c:	mov.w	r2, #10
   23ba0:	str	r3, [sp, #32]
   23ba2:	adc.w	r3, r0, r1
   23ba6:	str	r3, [sp, #36]	; 0x24
   23ba8:	ldr.w	r0, [r4, #49]	; 0x31
   23bac:	ldr.w	r1, [r4, #53]	; 0x35
   23bb0:	bl	36360 <div_factor@@Base>
   23bb4:	ldrd	r2, r3, [sp, #32]
   23bb8:	cmp	r3, r1
   23bba:	it	eq
   23bbc:	cmpeq	r2, r0
   23bbe:	bcs.w	23aae <btrfs_lookup_block_group@@Base+0x35a>
   23bc2:	ldr	r2, [pc, #176]	; (23c74 <btrfs_lookup_block_group@@Base+0x520>)
   23bc4:	ldr	r3, [pc, #168]	; (23c70 <btrfs_lookup_block_group@@Base+0x51c>)
   23bc6:	add	r2, pc
   23bc8:	ldr	r3, [r2, r3]
   23bca:	ldr	r2, [r3, #0]
   23bcc:	ldr	r3, [sp, #100]	; 0x64
   23bce:	eors	r2, r3
   23bd0:	beq.n	23c64 <btrfs_lookup_block_group@@Base+0x510>
   23bd2:	blx	8c90 <__stack_chk_fail@plt>
   23bd6:	ldr	r3, [r5, #108]	; 0x6c
   23bd8:	cbnz	r3, 23c38 <btrfs_lookup_block_group@@Base+0x4e4>
   23bda:	ldrd	r0, r1, [r5, #96]	; 0x60
   23bde:	and.w	r2, r6, r0
   23be2:	ldr	r0, [sp, #28]
   23be4:	and.w	r3, r0, r1
   23be8:	ldrd	r0, r1, [sp, #24]
   23bec:	cmp	r1, r3
   23bee:	it	eq
   23bf0:	cmpeq	r0, r2
   23bf2:	bne.n	23c38 <btrfs_lookup_block_group@@Base+0x4e4>
   23bf4:	ldrd	r2, r1, [r5, #88]	; 0x58
   23bf8:	ldrd	r3, r0, [r5, #72]	; 0x48
   23bfc:	adds	r3, r3, r2
   23bfe:	mov.w	r2, #10
   23c02:	str	r3, [sp, #40]	; 0x28
   23c04:	adc.w	r3, r0, r1
   23c08:	str	r3, [sp, #44]	; 0x2c
   23c0a:	ldr.w	r0, [r5, #49]	; 0x31
   23c0e:	ldr.w	r1, [r5, #53]	; 0x35
   23c12:	bl	36360 <div_factor@@Base>
   23c16:	ldrd	r3, r4, [sp, #40]	; 0x28
   23c1a:	cmp	r4, r1
   23c1c:	it	eq
   23c1e:	cmpeq	r3, r0
   23c20:	bcc.n	23c60 <btrfs_lookup_block_group@@Base+0x50c>
   23c22:	ldrd	r1, r0, [r5, #40]	; 0x28
   23c26:	ldr.w	r3, [r5, #49]	; 0x31
   23c2a:	ldr.w	r2, [r5, #53]	; 0x35
   23c2e:	adds.w	r9, r3, r1
   23c32:	adc.w	sl, r2, r0
   23c36:	b.n	23ab8 <btrfs_lookup_block_group@@Base+0x364>
   23c38:	ldrd	r9, sl, [r5, #40]	; 0x28
   23c3c:	ldrd	r3, r4, [sp, #16]
   23c40:	cmp	sl, r4
   23c42:	it	eq
   23c44:	cmpeq	r9, r3
   23c46:	bcs.w	23ab8 <btrfs_lookup_block_group@@Base+0x364>
   23c4a:	mov	r9, r3
   23c4c:	mov	sl, r4
   23c4e:	b.n	23ab8 <btrfs_lookup_block_group@@Base+0x364>
   23c50:	ldrd	r9, sl, [sp, #16]
   23c54:	movs	r5, #1
   23c56:	b.n	23ac2 <btrfs_lookup_block_group@@Base+0x36e>
   23c58:	cmp	r5, #0
   23c5a:	beq.n	23c50 <btrfs_lookup_block_group@@Base+0x4fc>
   23c5c:	movs	r4, #0
   23c5e:	b.n	23bc2 <btrfs_lookup_block_group@@Base+0x46e>
   23c60:	mov	r4, r5
   23c62:	b.n	23bc2 <btrfs_lookup_block_group@@Base+0x46e>
   23c64:	mov	r0, r4
   23c66:	add	sp, #108	; 0x6c
   23c68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c6c:	strb	r2, [r4, #10]
   23c6e:	movs	r4, r0
   23c70:	lsls	r0, r1, #10
   23c72:	movs	r0, r0
   23c74:	strb	r2, [r2, #5]
   23c76:	movs	r4, r0

00023c78 <hash_extent_data_ref@@Base>:
   23c78:	push	{r4, r5, r6, lr}
   23c7a:	mov	r6, r2
   23c7c:	ldr	r2, [pc, #100]	; (23ce4 <hash_extent_data_ref@@Base+0x6c>)
   23c7e:	mov	r5, r3
   23c80:	ldr	r3, [pc, #100]	; (23ce8 <hash_extent_data_ref@@Base+0x70>)
   23c82:	sub	sp, #24
   23c84:	add	r2, pc
   23c86:	ldr	r3, [r2, r3]
   23c88:	movs	r2, #8
   23c8a:	ldr	r3, [r3, #0]
   23c8c:	str	r3, [sp, #20]
   23c8e:	mov.w	r3, #0
   23c92:	strd	r0, r1, [sp, #8]
   23c96:	add.w	r1, sp, r2
   23c9a:	mov.w	r0, #4294967295	; 0xffffffff
   23c9e:	str	r1, [sp, #4]
   23ca0:	bl	1bc9a <crc32c_le@@Base>
   23ca4:	ldr	r1, [sp, #4]
   23ca6:	movs	r2, #8
   23ca8:	strd	r6, r5, [sp, #8]
   23cac:	mov	r4, r0
   23cae:	mov.w	r0, #4294967295	; 0xffffffff
   23cb2:	bl	1bc9a <crc32c_le@@Base>
   23cb6:	ldrd	r2, r3, [sp, #40]	; 0x28
   23cba:	ldr	r1, [sp, #4]
   23cbc:	strd	r2, r3, [sp, #8]
   23cc0:	movs	r2, #8
   23cc2:	bl	1bc9a <crc32c_le@@Base>
   23cc6:	ldr	r2, [pc, #36]	; (23cec <hash_extent_data_ref@@Base+0x74>)
   23cc8:	ldr	r3, [pc, #28]	; (23ce8 <hash_extent_data_ref@@Base+0x70>)
   23cca:	lsrs	r1, r4, #1
   23ccc:	add	r2, pc
   23cce:	ldr	r3, [r2, r3]
   23cd0:	ldr	r2, [r3, #0]
   23cd2:	ldr	r3, [sp, #20]
   23cd4:	eors	r2, r3
   23cd6:	eor.w	r0, r0, r4, lsl #31
   23cda:	beq.n	23ce0 <hash_extent_data_ref@@Base+0x68>
   23cdc:	blx	8c90 <__stack_chk_fail@plt>
   23ce0:	add	sp, #24
   23ce2:	pop	{r4, r5, r6, pc}
   23ce4:	strb	r4, [r2, #2]
   23ce6:	movs	r4, r0
   23ce8:	lsls	r0, r1, #10
   23cea:	movs	r0, r0
   23cec:	strb	r4, [r1, #1]
   23cee:	movs	r4, r0
   23cf0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23cf4:	sub	sp, #68	; 0x44
   23cf6:	mov	r5, r2
   23cf8:	ldr	r2, [pc, #836]	; (24040 <hash_extent_data_ref@@Base+0x3c8>)
   23cfa:	str	r3, [sp, #36]	; 0x24
   23cfc:	mov	r4, r0
   23cfe:	ldr	r3, [pc, #836]	; (24044 <hash_extent_data_ref@@Base+0x3cc>)
   23d00:	add	r2, pc
   23d02:	str	r1, [sp, #28]
   23d04:	mov.w	r9, #0
   23d08:	ldrd	sl, fp, [sp, #112]	; 0x70
   23d0c:	ldr	r3, [r2, r3]
   23d0e:	ldr	r3, [r3, #0]
   23d10:	str	r3, [sp, #60]	; 0x3c
   23d12:	mov.w	r3, #0
   23d16:	ldr.w	r3, [r1, #464]	; 0x1d0
   23d1a:	ldr.w	r3, [r3, #308]	; 0x134
   23d1e:	ldr.w	r3, [r3, #188]	; 0xbc
   23d22:	str.w	sl, [sp, #49]	; 0x31
   23d26:	and.w	r8, r3, #256	; 0x100
   23d2a:	ldrd	r2, r3, [sp, #104]	; 0x68
   23d2e:	str.w	fp, [sp, #53]	; 0x35
   23d32:	strd	r2, r3, [sp, #40]	; 0x28
   23d36:	movs	r3, #168	; 0xa8
   23d38:	strb.w	r3, [sp, #48]	; 0x30
   23d3c:	ldrd	r2, r3, [sp, #136]	; 0x88
   23d40:	cmp	r3, #0
   23d42:	it	eq
   23d44:	cmpeq.w	r2, #256	; 0x100
   23d48:	ldrd	r2, r3, [sp, #120]	; 0x78
   23d4c:	bcs.n	23dd4 <hash_extent_data_ref@@Base+0x15c>
   23d4e:	orrs	r3, r2
   23d50:	ite	ne
   23d52:	movne	r3, #182	; 0xb6
   23d54:	moveq	r3, #176	; 0xb0
   23d56:	str	r3, [sp, #24]
   23d58:	ldr	r3, [sp, #152]	; 0x98
   23d5a:	cmp	r3, #0
   23d5c:	beq.w	24030 <hash_extent_data_ref@@Base+0x3b8>
   23d60:	ldr	r0, [sp, #24]
   23d62:	bl	231dc <btrfs_create_tree@@Base+0x5c0>
   23d66:	ldrd	r2, r3, [sp, #136]	; 0x88
   23d6a:	cmp	r3, #0
   23d6c:	it	eq
   23d6e:	cmpeq.w	r2, #256	; 0x100
   23d72:	str	r0, [sp, #20]
   23d74:	bcs.n	23dea <hash_extent_data_ref@@Base+0x172>
   23d76:	orrs.w	r3, r8, r9
   23d7a:	beq.n	23dea <hash_extent_data_ref@@Base+0x172>
   23d7c:	movs	r3, #169	; 0xa9
   23d7e:	strb.w	r3, [sp, #48]	; 0x30
   23d82:	ldr	r3, [sp, #136]	; 0x88
   23d84:	mov.w	r8, #1
   23d88:	str.w	r3, [sp, #49]	; 0x31
   23d8c:	ldr	r3, [sp, #140]	; 0x8c
   23d8e:	str.w	r3, [sp, #53]	; 0x35
   23d92:	add	r6, sp, #40	; 0x28
   23d94:	movs	r7, #1
   23d96:	mov.w	r9, #168	; 0xa8
   23d9a:	ldr	r3, [sp, #20]
   23d9c:	mov	r2, r6
   23d9e:	ldr	r1, [sp, #28]
   23da0:	mov	r0, r4
   23da2:	str	r7, [sp, #4]
   23da4:	str	r3, [sp, #0]
   23da6:	mov	r3, r5
   23da8:	bl	1eadc <btrfs_search_slot@@Base>
   23dac:	cmp	r0, #0
   23dae:	blt.n	23e82 <hash_extent_data_ref@@Base+0x20a>
   23db0:	beq.n	23e28 <hash_extent_data_ref@@Base+0x1b0>
   23db2:	cmp.w	r8, #0
   23db6:	beq.n	23e5e <hash_extent_data_ref@@Base+0x1e6>
   23db8:	ldr	r2, [r5, #32]
   23dba:	cbnz	r2, 23df0 <hash_extent_data_ref@@Base+0x178>
   23dbc:	mov	r0, r5
   23dbe:	strb.w	r9, [sp, #48]	; 0x30
   23dc2:	str.w	sl, [sp, #49]	; 0x31
   23dc6:	mov.w	r8, #0
   23dca:	str.w	fp, [sp, #53]	; 0x35
   23dce:	bl	1c6f8 <btrfs_release_path@@Base>
   23dd2:	b.n	23d9a <hash_extent_data_ref@@Base+0x122>
   23dd4:	orrs	r3, r2
   23dd6:	ite	ne
   23dd8:	movne	r3, #184	; 0xb8
   23dda:	moveq	r3, #178	; 0xb2
   23ddc:	str	r3, [sp, #24]
   23dde:	ldr	r3, [sp, #152]	; 0x98
   23de0:	cmp	r3, #0
   23de2:	bne.n	23d60 <hash_extent_data_ref@@Base+0xe8>
   23de4:	mov.w	r3, #4294967295	; 0xffffffff
   23de8:	str	r3, [sp, #20]
   23dea:	mov.w	r8, #0
   23dee:	b.n	23d92 <hash_extent_data_ref@@Base+0x11a>
   23df0:	subs	r2, #1
   23df2:	ldr	r0, [r5, #0]
   23df4:	mov	r1, r6
   23df6:	str	r2, [r5, #32]
   23df8:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   23dfc:	ldrd	r2, r3, [sp, #40]	; 0x28
   23e00:	ldrd	r0, r1, [sp, #104]	; 0x68
   23e04:	cmp	r3, r1
   23e06:	it	eq
   23e08:	cmpeq	r2, r0
   23e0a:	bne.n	23dbc <hash_extent_data_ref@@Base+0x144>
   23e0c:	ldrb.w	r3, [sp, #48]	; 0x30
   23e10:	cmp	r3, #168	; 0xa8
   23e12:	bne.n	23dbc <hash_extent_data_ref@@Base+0x144>
   23e14:	ldr.w	r3, [sp, #53]	; 0x35
   23e18:	ldr.w	r2, [sp, #49]	; 0x31
   23e1c:	cmp	r3, fp
   23e1e:	it	eq
   23e20:	cmpeq	r2, sl
   23e22:	bne.n	23dbc <hash_extent_data_ref@@Base+0x144>
   23e24:	mov.w	r8, #0
   23e28:	ldr	r4, [r5, #0]
   23e2a:	movs	r3, #25
   23e2c:	ldr	r2, [r5, #32]
   23e2e:	add.w	r7, r4, #96	; 0x60
   23e32:	mla	r3, r3, r2, r7
   23e36:	add.w	r1, r3, #101	; 0x65
   23e3a:	ldr.w	r6, [r3, #122]	; 0x7a
   23e3e:	cmp	r6, #23
   23e40:	bhi.n	23e98 <hash_extent_data_ref@@Base+0x220>
   23e42:	ldr	r1, [pc, #516]	; (24048 <hash_extent_data_ref@@Base+0x3d0>)
   23e44:	movs	r3, #24
   23e46:	str	r2, [sp, #0]
   23e48:	movs	r0, #1
   23e4a:	add	r1, pc
   23e4c:	mov	r2, r6
   23e4e:	blx	900c <__printf_chk@plt+0x4>
   23e52:	mov	r0, r4
   23e54:	bl	298c0 <btrfs_print_leaf@@Base>
   23e58:	mvn.w	r0, #21
   23e5c:	b.n	23e82 <hash_extent_data_ref@@Base+0x20a>
   23e5e:	ldr.w	r2, [sp, #49]	; 0x31
   23e62:	movs	r0, #1
   23e64:	ldr.w	r3, [sp, #53]	; 0x35
   23e68:	ldr	r1, [pc, #480]	; (2404c <hash_extent_data_ref@@Base+0x3d4>)
   23e6a:	strd	r2, r3, [sp, #8]
   23e6e:	add	r1, pc
   23e70:	ldrb.w	r3, [sp, #48]	; 0x30
   23e74:	str	r3, [sp, #0]
   23e76:	ldrd	r2, r3, [sp, #40]	; 0x28
   23e7a:	blx	900c <__printf_chk@plt+0x4>
   23e7e:	mvn.w	r0, #1
   23e82:	ldr	r2, [pc, #460]	; (24050 <hash_extent_data_ref@@Base+0x3d8>)
   23e84:	ldr	r3, [pc, #444]	; (24044 <hash_extent_data_ref@@Base+0x3cc>)
   23e86:	add	r2, pc
   23e88:	ldr	r3, [r2, r3]
   23e8a:	ldr	r2, [r3, #0]
   23e8c:	ldr	r3, [sp, #60]	; 0x3c
   23e8e:	eors	r2, r3
   23e90:	beq.w	24038 <hash_extent_data_ref@@Base+0x3c0>
   23e94:	blx	8c90 <__stack_chk_fail@plt>
   23e98:	ldr.w	ip, [r1, #17]
   23e9c:	movs	r1, #0
   23e9e:	add.w	fp, ip, #101	; 0x65
   23ea2:	add.w	r4, ip, #125	; 0x7d
   23ea6:	add.w	r3, r7, fp
   23eaa:	ldr	r0, [r3, #16]
   23eac:	add.w	r3, fp, r6
   23eb0:	str	r3, [sp, #32]
   23eb2:	mov	r3, r1
   23eb4:	and.w	r2, r0, #2
   23eb8:	orrs	r3, r2
   23eba:	beq.n	23f1e <hash_extent_data_ref@@Base+0x2a6>
   23ebc:	cmp.w	r8, #0
   23ec0:	bne.n	23ee8 <hash_extent_data_ref@@Base+0x270>
   23ec2:	ldr	r3, [sp, #32]
   23ec4:	add.w	r4, ip, #143	; 0x8f
   23ec8:	ldr	r2, [pc, #392]	; (24054 <hash_extent_data_ref@@Base+0x3dc>)
   23eca:	cmp	r3, r4
   23ecc:	ldr	r1, [pc, #392]	; (24058 <hash_extent_data_ref@@Base+0x3e0>)
   23ece:	ldr	r0, [pc, #396]	; (2405c <hash_extent_data_ref@@Base+0x3e4>)
   23ed0:	add	r2, pc
   23ed2:	ite	cs
   23ed4:	movcs	r3, #0
   23ed6:	movcc	r3, #1
   23ed8:	adds	r2, #178	; 0xb2
   23eda:	str	r3, [sp, #0]
   23edc:	add	r1, pc
   23ede:	add	r0, pc
   23ee0:	movw	r3, #943	; 0x3af
   23ee4:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   23ee8:	ldr	r3, [sp, #32]
   23eea:	cmp	r4, r3
   23eec:	bcc.n	23f2e <hash_extent_data_ref@@Base+0x2b6>
   23eee:	ldr	r2, [pc, #368]	; (24060 <hash_extent_data_ref@@Base+0x3e8>)
   23ef0:	it	hi
   23ef2:	movhi	r3, #1
   23ef4:	ldr	r1, [pc, #364]	; (24064 <hash_extent_data_ref@@Base+0x3ec>)
   23ef6:	it	ls
   23ef8:	movls	r3, #0
   23efa:	ldr	r0, [pc, #364]	; (24068 <hash_extent_data_ref@@Base+0x3f0>)
   23efc:	add	r2, pc
   23efe:	str	r3, [sp, #0]
   23f00:	adds	r2, #178	; 0xb2
   23f02:	add	r1, pc
   23f04:	add	r0, pc
   23f06:	movw	r3, #953	; 0x3b9
   23f0a:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   23f0e:	ldr	r3, [sp, #152]	; 0x98
   23f10:	cmp	r3, #0
   23f12:	bne.n	23fe2 <hash_extent_data_ref@@Base+0x36a>
   23f14:	mvn.w	r0, #1
   23f18:	ldr	r3, [sp, #36]	; 0x24
   23f1a:	str	r4, [r3, #0]
   23f1c:	b.n	23e82 <hash_extent_data_ref@@Base+0x20a>
   23f1e:	and.w	r2, r0, #1
   23f22:	mov	r3, r1
   23f24:	orrs	r3, r2
   23f26:	bne.n	23ee8 <hash_extent_data_ref@@Base+0x270>
   23f28:	mvn.w	r0, #4
   23f2c:	b.n	23e82 <hash_extent_data_ref@@Base+0x20a>
   23f2e:	ldrb.w	sl, [r7, r4]
   23f32:	adds	r1, r7, r4
   23f34:	ldr	r3, [sp, #24]
   23f36:	cmp	sl, r3
   23f38:	bgt.n	23f0e <hash_extent_data_ref@@Base+0x296>
   23f3a:	bge.n	23f46 <hash_extent_data_ref@@Base+0x2ce>
   23f3c:	mov	r0, sl
   23f3e:	bl	231dc <btrfs_create_tree@@Base+0x5c0>
   23f42:	add	r4, r0
   23f44:	b.n	23ee8 <hash_extent_data_ref@@Base+0x270>
   23f46:	cmp.w	sl, #178	; 0xb2
   23f4a:	bne.n	23fbc <hash_extent_data_ref@@Base+0x344>
   23f4c:	adds	r3, r4, #1
   23f4e:	add.w	ip, r7, r3
   23f52:	ldr.w	r8, [r7, r3]
   23f56:	ldr.w	r9, [ip, #4]
   23f5a:	ldr.w	r2, [ip, #8]
   23f5e:	ldr.w	r3, [ip, #12]
   23f62:	ldr.w	r0, [ip, #16]
   23f66:	ldr.w	r1, [ip, #20]
   23f6a:	ldrd	fp, ip, [sp, #128]	; 0x80
   23f6e:	cmp	ip, r9
   23f70:	it	eq
   23f72:	cmpeq	fp, r8
   23f74:	bne.n	23f8e <hash_extent_data_ref@@Base+0x316>
   23f76:	ldrd	fp, ip, [sp, #136]	; 0x88
   23f7a:	cmp	ip, r3
   23f7c:	it	eq
   23f7e:	cmpeq	fp, r2
   23f80:	bne.n	23f8e <hash_extent_data_ref@@Base+0x316>
   23f82:	ldrd	fp, ip, [sp, #144]	; 0x90
   23f86:	cmp	ip, r1
   23f88:	it	eq
   23f8a:	cmpeq	fp, r0
   23f8c:	beq.n	2402c <hash_extent_data_ref@@Base+0x3b4>
   23f8e:	strd	r0, r1, [sp]
   23f92:	mov	r0, r8
   23f94:	mov	r1, r9
   23f96:	bl	23c78 <hash_extent_data_ref@@Base>
   23f9a:	ldrd	r2, r3, [sp, #144]	; 0x90
   23f9e:	strd	r2, r3, [sp]
   23fa2:	ldrd	r2, r3, [sp, #136]	; 0x88
   23fa6:	mov	r8, r0
   23fa8:	mov	r9, r1
   23faa:	ldrd	r0, r1, [sp, #128]	; 0x80
   23fae:	bl	23c78 <hash_extent_data_ref@@Base>
   23fb2:	cmp	r9, r1
   23fb4:	it	eq
   23fb6:	cmpeq	r8, r0
   23fb8:	bcs.n	23f3c <hash_extent_data_ref@@Base+0x2c4>
   23fba:	b.n	23f0e <hash_extent_data_ref@@Base+0x296>
   23fbc:	ldr.w	r2, [r1, #1]!
   23fc0:	ldr	r3, [r1, #4]
   23fc2:	ldrd	r0, r1, [sp, #120]	; 0x78
   23fc6:	orrs	r1, r0
   23fc8:	ite	ne
   23fca:	ldrdne	r0, r1, [sp, #120]	; 0x78
   23fce:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   23fd2:	cmp	r1, r3
   23fd4:	it	eq
   23fd6:	cmpeq	r0, r2
   23fd8:	beq.n	2402c <hash_extent_data_ref@@Base+0x3b4>
   23fda:	cmp	r3, r1
   23fdc:	it	eq
   23fde:	cmpeq	r2, r0
   23fe0:	b.n	23fb8 <hash_extent_data_ref@@Base+0x340>
   23fe2:	ldr	r3, [sp, #20]
   23fe4:	add	r3, r6
   23fe6:	mov	r6, r3
   23fe8:	ldr	r3, [sp, #28]
   23fea:	ldr.w	r3, [r3, #464]	; 0x1d0
   23fee:	ldr.w	r3, [r3, #384]	; 0x180
   23ff2:	subs	r3, #101	; 0x65
   23ff4:	lsrs	r3, r3, #4
   23ff6:	subs	r3, #25
   23ff8:	cmp	r6, r3
   23ffa:	bcc.n	24002 <hash_extent_data_ref@@Base+0x38a>
   23ffc:	mvn.w	r0, #10
   24000:	b.n	23e82 <hash_extent_data_ref@@Base+0x20a>
   24002:	add	r1, sp, #40	; 0x28
   24004:	mov	r0, r5
   24006:	bl	35d08 <find_next_key@@Base>
   2400a:	cmp	r0, #0
   2400c:	bne.n	23f14 <hash_extent_data_ref@@Base+0x29c>
   2400e:	ldrd	r2, r3, [sp, #40]	; 0x28
   24012:	ldrd	r0, r1, [sp, #104]	; 0x68
   24016:	cmp	r3, r1
   24018:	it	eq
   2401a:	cmpeq	r2, r0
   2401c:	bne.w	23f14 <hash_extent_data_ref@@Base+0x29c>
   24020:	ldrb.w	r3, [sp, #48]	; 0x30
   24024:	cmp	r3, #191	; 0xbf
   24026:	bhi.w	23f14 <hash_extent_data_ref@@Base+0x29c>
   2402a:	b.n	23ffc <hash_extent_data_ref@@Base+0x384>
   2402c:	movs	r0, #0
   2402e:	b.n	23f18 <hash_extent_data_ref@@Base+0x2a0>
   24030:	mov.w	r3, #4294967295	; 0xffffffff
   24034:	str	r3, [sp, #20]
   24036:	b.n	23d76 <hash_extent_data_ref@@Base+0xfe>
   24038:	add	sp, #68	; 0x44
   2403a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2403e:	nop
   24040:	strb	r0, [r3, #0]
   24042:	movs	r4, r0
   24044:	lsls	r0, r1, #10
   24046:	movs	r0, r0
   24048:	sbc.w	r0, r9, #1
   2404c:			; <UNDEFINED> instruction: 0xf1240001
   24050:	ldr	r2, [r2, #104]	; 0x68
   24052:	movs	r4, r0
   24054:	subw	r0, ip, #2049	; 0x801
   24058:	vhadd.s<illegal width 64>	d16, d6, d1
   2405c:	stmia	r2!, {r0, r1, r2, r3, r5, r6, r7}
   2405e:	movs	r1, r0
   24060:			; <UNDEFINED> instruction: 0xf6800001
   24064:	vhadd.s16	d16, d0, d1
   24068:	stmia	r2!, {r0, r3, r6, r7}
   2406a:	movs	r1, r0
   2406c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24070:	mov	r6, r0
   24072:	vpush	{d8}
   24076:	ldr.w	r1, [pc, #2168]	; 248f0 <hash_extent_data_ref@@Base+0xc78>
   2407a:	ldr.w	r0, [pc, #2168]	; 248f4 <hash_extent_data_ref@@Base+0xc7c>
   2407e:	add	r1, pc
   24080:	sub	sp, #148	; 0x94
   24082:	add	r0, pc
   24084:	str	r1, [sp, #72]	; 0x48
   24086:	ldr.w	r1, [pc, #2160]	; 248f8 <hash_extent_data_ref@@Base+0xc80>
   2408a:	strd	r2, r3, [sp, #56]	; 0x38
   2408e:	ldrd	r8, r9, [sp, #200]	; 0xc8
   24092:	ldr	r1, [r0, r1]
   24094:	ldr	r0, [r6, #0]
   24096:	ldr	r1, [r1, #0]
   24098:	str	r1, [sp, #140]	; 0x8c
   2409a:	mov.w	r1, #0
   2409e:	ldr.w	sl, [r0, #24]
   240a2:	ldr.w	r1, [sl, #464]	; 0x1d0
   240a6:	ldr.w	r1, [r1, #308]	; 0x134
   240aa:	ldr.w	r5, [r1, #188]	; 0xbc
   240ae:	ldr.w	r1, [r0, #372]	; 0x174
   240b2:	cbz	r1, 240de <hash_extent_data_ref@@Base+0x466>
   240b4:	ldrd	fp, ip, [sp, #224]	; 0xe0
   240b8:	movs	r4, #1
   240ba:	strd	r8, r9, [sp, #8]
   240be:	str	r4, [sp, #40]	; 0x28
   240c0:	strd	fp, ip, [sp, #32]
   240c4:	ldrd	fp, ip, [sp, #216]	; 0xd8
   240c8:	strd	fp, ip, [sp, #24]
   240cc:	ldrd	fp, ip, [sp, #208]	; 0xd0
   240d0:	strd	fp, ip, [sp, #16]
   240d4:	ldrd	fp, ip, [sp, #192]	; 0xc0
   240d8:	strd	fp, ip, [sp]
   240dc:	blx	r1
   240de:	bl	1c6f0 <btrfs_alloc_path@@Base>
   240e2:	mov	r4, r0
   240e4:	cmp	r0, #0
   240e6:	beq.w	24882 <hash_extent_data_ref@@Base+0xc0a>
   240ea:	movs	r3, #1
   240ec:	strb.w	r3, [r0, #64]	; 0x40
   240f0:	ldrd	r2, r3, [sp, #216]	; 0xd8
   240f4:	movs	r7, #0
   240f6:	ldr.w	r1, [pc, #2052]	; 248fc <hash_extent_data_ref@@Base+0xc84>
   240fa:	cmp	r3, #0
   240fc:	ldr.w	r0, [pc, #2048]	; 24900 <hash_extent_data_ref@@Base+0xc88>
   24100:	it	eq
   24102:	cmpeq.w	r2, #256	; 0x100
   24106:	ldr.w	r2, [pc, #2044]	; 24904 <hash_extent_data_ref@@Base+0xc8c>
   2410a:	add	r1, pc
   2410c:	add	r0, pc
   2410e:	add	r2, pc
   24110:	ite	cs
   24112:	movcs	r3, #1
   24114:	movcc	r3, #0
   24116:	add.w	r2, r2, #207	; 0xcf
   2411a:	str	r3, [sp, #76]	; 0x4c
   2411c:	ite	cc
   2411e:	ubfxcc	r3, r5, #8, #1
   24122:	movcs	r3, #0
   24124:	str	r7, [sp, #0]
   24126:	str	r3, [sp, #64]	; 0x40
   24128:	movw	r3, #1959	; 0x7a7
   2412c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24130:	ldrd	r2, r3, [sp, #224]	; 0xe0
   24134:	mov	r1, sl
   24136:	mov	r0, r6
   24138:	str	r7, [sp, #48]	; 0x30
   2413a:	strd	r2, r3, [sp, #40]	; 0x28
   2413e:	ldrd	r2, r3, [sp, #216]	; 0xd8
   24142:	strd	r8, r9, [sp, #16]
   24146:	strd	r2, r3, [sp, #32]
   2414a:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2414e:	strd	r2, r3, [sp, #24]
   24152:	ldrd	r2, r3, [sp, #192]	; 0xc0
   24156:	strd	r2, r3, [sp, #8]
   2415a:	ldrd	r2, r3, [sp, #56]	; 0x38
   2415e:	strd	r2, r3, [sp]
   24162:	add	r3, sp, #96	; 0x60
   24164:	mov	r2, r4
   24166:	bl	23cf0 <hash_extent_data_ref@@Base+0x78>
   2416a:	adds	r3, r0, #2
   2416c:	mov	r5, r0
   2416e:	bne.w	24282 <hash_extent_data_ref@@Base+0x60a>
   24172:	mov	r0, r4
   24174:	bl	1c6f8 <btrfs_release_path@@Base>
   24178:	ldrd	r2, r3, [sp, #216]	; 0xd8
   2417c:	str	r7, [sp, #96]	; 0x60
   2417e:	cmp	r3, #0
   24180:	it	eq
   24182:	cmpeq.w	r2, #256	; 0x100
   24186:	ldrd	r2, r3, [sp, #56]	; 0x38
   2418a:	strd	r2, r3, [sp, #120]	; 0x78
   2418e:	bcs.n	24246 <hash_extent_data_ref@@Base+0x5ce>
   24190:	orrs.w	r3, r8, r9
   24194:	add.w	r3, sp, #129	; 0x81
   24198:	beq.n	24234 <hash_extent_data_ref@@Base+0x5bc>
   2419a:	movs	r2, #182	; 0xb6
   2419c:	str.w	r8, [sp, #129]	; 0x81
   241a0:	strb.w	r2, [sp, #128]	; 0x80
   241a4:	str.w	r9, [r3, #4]
   241a8:	mov.w	r3, #4294967295	; 0xffffffff
   241ac:	movs	r5, #1
   241ae:	add	r2, sp, #120	; 0x78
   241b0:	strd	r3, r5, [sp]
   241b4:	mov	r1, sl
   241b6:	mov	r3, r4
   241b8:	mov	r0, r6
   241ba:	bl	1eadc <btrfs_search_slot@@Base>
   241be:	subs	r5, r0, #0
   241c0:	ble.n	24282 <hash_extent_data_ref@@Base+0x60a>
   241c2:	ldr	r2, [sp, #72]	; 0x48
   241c4:	mvn.w	r5, #4
   241c8:	ldr.w	r3, [pc, #1852]	; 24908 <hash_extent_data_ref@@Base+0xc90>
   241cc:	ldr	r3, [r2, r3]
   241ce:	ldrd	r1, r2, [sp, #224]	; 0xe0
   241d2:	strd	r8, r9, [sp, #8]
   241d6:	strd	r1, r2, [sp, #32]
   241da:	ldrd	r1, r2, [sp, #216]	; 0xd8
   241de:	strd	r1, r2, [sp, #24]
   241e2:	ldrd	r1, r2, [sp, #208]	; 0xd0
   241e6:	strd	r1, r2, [sp, #16]
   241ea:	ldrd	r1, r2, [sp, #56]	; 0x38
   241ee:	strd	r1, r2, [sp]
   241f2:	movs	r1, #1
   241f4:	ldr.w	r2, [pc, #1812]	; 2490c <hash_extent_data_ref@@Base+0xc94>
   241f8:	ldr	r0, [r3, #0]
   241fa:	add	r2, pc
   241fc:	blx	9040 <__fprintf_chk@plt+0x4>
   24200:	ldr.w	r1, [pc, #1804]	; 24910 <hash_extent_data_ref@@Base+0xc98>
   24204:	ldr	r2, [r4, #32]
   24206:	movs	r0, #1
   24208:	add	r1, pc
   2420a:	blx	900c <__printf_chk@plt+0x4>
   2420e:	ldr	r0, [r4, #0]
   24210:	bl	298c0 <btrfs_print_leaf@@Base>
   24214:	mov	r0, r4
   24216:	bl	1c71e <btrfs_free_path@@Base>
   2421a:	ldr.w	r2, [pc, #1784]	; 24914 <hash_extent_data_ref@@Base+0xc9c>
   2421e:	ldr.w	r3, [pc, #1752]	; 248f8 <hash_extent_data_ref@@Base+0xc80>
   24222:	add	r2, pc
   24224:	ldr	r3, [r2, r3]
   24226:	ldr	r2, [r3, #0]
   24228:	ldr	r3, [sp, #140]	; 0x8c
   2422a:	eors	r2, r3
   2422c:	beq.w	248e2 <hash_extent_data_ref@@Base+0xc6a>
   24230:	blx	8c90 <__stack_chk_fail@plt>
   24234:	movs	r2, #176	; 0xb0
   24236:	strb.w	r2, [sp, #128]	; 0x80
   2423a:	ldr	r2, [sp, #208]	; 0xd0
   2423c:	str.w	r2, [sp, #129]	; 0x81
   24240:	ldr	r2, [sp, #212]	; 0xd4
   24242:	str	r2, [r3, #4]
   24244:	b.n	241a8 <hash_extent_data_ref@@Base+0x530>
   24246:	orrs.w	r3, r8, r9
   2424a:	beq.n	24288 <hash_extent_data_ref@@Base+0x610>
   2424c:	movs	r3, #184	; 0xb8
   2424e:	str.w	r8, [sp, #129]	; 0x81
   24252:	strb.w	r3, [sp, #128]	; 0x80
   24256:	str.w	r9, [sp, #133]	; 0x85
   2425a:	add	r3, sp, #120	; 0x78
   2425c:	vmov	s16, r3
   24260:	mov.w	r3, #4294967295	; 0xffffffff
   24264:	movs	r0, #1
   24266:	vmov	r2, s16
   2426a:	mov	r1, sl
   2426c:	strd	r3, r0, [sp]
   24270:	mov	r3, r4
   24272:	mov	r0, r6
   24274:	bl	1eadc <btrfs_search_slot@@Base>
   24278:	subs	r5, r0, #0
   2427a:	blt.n	241c2 <hash_extent_data_ref@@Base+0x54a>
   2427c:	orrs.w	r3, r8, r9
   24280:	beq.n	242ac <hash_extent_data_ref@@Base+0x634>
   24282:	cmp	r5, #0
   24284:	beq.n	2435a <hash_extent_data_ref@@Base+0x6e2>
   24286:	b.n	241c2 <hash_extent_data_ref@@Base+0x54a>
   24288:	movs	r3, #178	; 0xb2
   2428a:	strb.w	r3, [sp, #128]	; 0x80
   2428e:	ldrd	r2, r3, [sp, #224]	; 0xe0
   24292:	ldrd	r0, r1, [sp, #208]	; 0xd0
   24296:	strd	r2, r3, [sp]
   2429a:	ldrd	r2, r3, [sp, #216]	; 0xd8
   2429e:	bl	23c78 <hash_extent_data_ref@@Base>
   242a2:	str.w	r0, [sp, #129]	; 0x81
   242a6:	str.w	r1, [sp, #133]	; 0x85
   242aa:	b.n	2425a <hash_extent_data_ref@@Base+0x5e2>
   242ac:	ldr	r7, [r4, #0]
   242ae:	movs	r5, #0
   242b0:	ldr.w	r3, [r7, #192]	; 0xc0
   242b4:	str	r3, [sp, #80]	; 0x50
   242b6:	ldr	r3, [r4, #32]
   242b8:	ldr	r2, [sp, #80]	; 0x50
   242ba:	cmp	r3, r2
   242bc:	bcc.n	242e4 <hash_extent_data_ref@@Base+0x66c>
   242be:	mov.w	r3, #0
   242c2:	mov	r1, r4
   242c4:	strb.w	r3, [r4, #65]	; 0x41
   242c8:	ldr.w	r0, [sl, #464]	; 0x1d0
   242cc:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   242d0:	cmp	r0, #0
   242d2:	blt.w	241c2 <hash_extent_data_ref@@Base+0x54a>
   242d6:	bne.w	241c2 <hash_extent_data_ref@@Base+0x54a>
   242da:	ldr	r7, [r4, #0]
   242dc:	movs	r5, #1
   242de:	ldr.w	r3, [r7, #192]	; 0xc0
   242e2:	str	r3, [sp, #80]	; 0x50
   242e4:	vmov	r1, s16
   242e8:	mov	r0, r7
   242ea:	ldr	r2, [r4, #32]
   242ec:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   242f0:	ldrd	r2, r3, [sp, #120]	; 0x78
   242f4:	ldrd	r0, r1, [sp, #56]	; 0x38
   242f8:	cmp	r1, r3
   242fa:	it	eq
   242fc:	cmpeq	r0, r2
   242fe:	bne.w	241c2 <hash_extent_data_ref@@Base+0x54a>
   24302:	ldrb.w	r3, [sp, #128]	; 0x80
   24306:	cmp	r3, #178	; 0xb2
   24308:	bne.w	241c2 <hash_extent_data_ref@@Base+0x54a>
   2430c:	ldr	r0, [r4, #32]
   2430e:	add.w	ip, r7, #96	; 0x60
   24312:	movs	r3, #25
   24314:	mla	r3, r3, r0, ip
   24318:	ldr.w	lr, [r3, #118]	; 0x76
   2431c:	add.w	lr, lr, #101	; 0x65
   24320:	add.w	r1, ip, lr
   24324:	ldr.w	r2, [ip, lr]
   24328:	ldr	r3, [r1, #4]
   2432a:	ldrd	fp, ip, [sp, #208]	; 0xd0
   2432e:	cmp	ip, r3
   24330:	it	eq
   24332:	cmpeq	fp, r2
   24334:	bne.n	243d0 <hash_extent_data_ref@@Base+0x758>
   24336:	ldrd	fp, ip, [sp, #216]	; 0xd8
   2433a:	ldr	r3, [r1, #12]
   2433c:	ldr	r2, [r1, #8]
   2433e:	cmp	ip, r3
   24340:	it	eq
   24342:	cmpeq	fp, r2
   24344:	bne.n	243d0 <hash_extent_data_ref@@Base+0x758>
   24346:	ldrd	fp, ip, [sp, #224]	; 0xe0
   2434a:	ldr	r3, [r1, #20]
   2434c:	ldr	r2, [r1, #16]
   2434e:	cmp	ip, r3
   24350:	it	eq
   24352:	cmpeq	fp, r2
   24354:	bne.n	243d0 <hash_extent_data_ref@@Base+0x758>
   24356:	cmp	r5, #0
   24358:	bne.n	243d6 <hash_extent_data_ref@@Base+0x75e>
   2435a:	ldr	r7, [r4, #32]
   2435c:	add	r5, sp, #100	; 0x64
   2435e:	cmp	r7, #0
   24360:	bge.n	243de <hash_extent_data_ref@@Base+0x766>
   24362:	ldr.w	r7, [pc, #1460]	; 24918 <hash_extent_data_ref@@Base+0xca0>
   24366:	ldr.w	r5, [pc, #1460]	; 2491c <hash_extent_data_ref@@Base+0xca4>
   2436a:	ldr	r3, [sp, #96]	; 0x60
   2436c:	add	r7, pc
   2436e:	adds	r7, #207	; 0xcf
   24370:	add	r5, pc
   24372:	ldr.w	r0, [pc, #1452]	; 24920 <hash_extent_data_ref@@Base+0xca8>
   24376:	mov	r2, r7
   24378:	mov	r1, r5
   2437a:	add	r0, pc
   2437c:	str	r3, [sp, #0]
   2437e:	movw	r3, #1987	; 0x7c3
   24382:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24386:	ldr	r3, [sp, #76]	; 0x4c
   24388:	mov	r2, r4
   2438a:	mov	r1, sl
   2438c:	mov	r0, r6
   2438e:	str	r3, [sp, #0]
   24390:	movs	r3, #0
   24392:	bl	23544 <btrfs_create_tree@@Base+0x928>
   24396:	movw	r3, #1991	; 0x7c7
   2439a:	mov	r2, r7
   2439c:	mov	r1, r5
   2439e:	str	r0, [sp, #0]
   243a0:	ldr.w	r0, [pc, #1408]	; 24924 <hash_extent_data_ref@@Base+0xcac>
   243a4:	add	r0, pc
   243a6:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   243aa:	mov	r0, r4
   243ac:	bl	1c6f8 <btrfs_release_path@@Base>
   243b0:	ldr	r3, [sp, #56]	; 0x38
   243b2:	ldr	r2, [sp, #64]	; 0x40
   243b4:	str	r3, [sp, #100]	; 0x64
   243b6:	ldr	r3, [sp, #60]	; 0x3c
   243b8:	str	r3, [sp, #104]	; 0x68
   243ba:	add.w	r3, sp, #109	; 0x6d
   243be:	cbnz	r2, 24432 <hash_extent_data_ref@@Base+0x7ba>
   243c0:	movs	r2, #168	; 0xa8
   243c2:	strb.w	r2, [sp, #108]	; 0x6c
   243c6:	ldr	r2, [sp, #192]	; 0xc0
   243c8:	str.w	r2, [sp, #109]	; 0x6d
   243cc:	ldr	r2, [sp, #196]	; 0xc4
   243ce:	b.n	24440 <hash_extent_data_ref@@Base+0x7c8>
   243d0:	adds	r0, #1
   243d2:	str	r0, [r4, #32]
   243d4:	b.n	242b6 <hash_extent_data_ref@@Base+0x63e>
   243d6:	mov	r0, r4
   243d8:	bl	1c6f8 <btrfs_release_path@@Base>
   243dc:	b.n	24260 <hash_extent_data_ref@@Base+0x5e8>
   243de:	ldr	r0, [r4, #0]
   243e0:	mov	r2, r7
   243e2:	mov	r1, r5
   243e4:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   243e8:	ldrd	r2, r3, [sp, #100]	; 0x64
   243ec:	ldrd	r0, r1, [sp, #56]	; 0x38
   243f0:	cmp	r1, r3
   243f2:	it	eq
   243f4:	cmpeq	r0, r2
   243f6:	bne.n	24362 <hash_extent_data_ref@@Base+0x6ea>
   243f8:	ldrb.w	r3, [sp, #108]	; 0x6c
   243fc:	cmp	r3, #168	; 0xa8
   243fe:	bne.n	24420 <hash_extent_data_ref@@Base+0x7a8>
   24400:	ldr.w	r2, [sp, #109]	; 0x6d
   24404:	ldr.w	r3, [sp, #113]	; 0x71
   24408:	ldrd	r0, r1, [sp, #192]	; 0xc0
   2440c:	cmp	r1, r3
   2440e:	it	eq
   24410:	cmpeq	r0, r2
   24412:	beq.n	24500 <hash_extent_data_ref@@Base+0x888>
   24414:	ldr	r3, [r4, #32]
   24416:	subs	r3, r3, r7
   24418:	cmp	r3, #5
   2441a:	bgt.n	24362 <hash_extent_data_ref@@Base+0x6ea>
   2441c:	subs	r7, #1
   2441e:	b.n	2435e <hash_extent_data_ref@@Base+0x6e6>
   24420:	cmp	r3, #169	; 0xa9
   24422:	bne.n	24414 <hash_extent_data_ref@@Base+0x79c>
   24424:	ldr.w	r2, [sp, #109]	; 0x6d
   24428:	ldr.w	r3, [sp, #113]	; 0x71
   2442c:	ldrd	r0, r1, [sp, #216]	; 0xd8
   24430:	b.n	2440c <hash_extent_data_ref@@Base+0x794>
   24432:	movs	r2, #169	; 0xa9
   24434:	strb.w	r2, [sp, #108]	; 0x6c
   24438:	ldr	r2, [sp, #216]	; 0xd8
   2443a:	str.w	r2, [sp, #109]	; 0x6d
   2443e:	ldr	r2, [sp, #220]	; 0xdc
   24440:	add	r7, sp, #100	; 0x64
   24442:	str	r2, [r3, #4]
   24444:	movs	r1, #1
   24446:	mov.w	r3, #4294967295	; 0xffffffff
   2444a:	mov	r2, r7
   2444c:	strd	r3, r1, [sp]
   24450:	mov	r0, r6
   24452:	mov	r3, r4
   24454:	mov	r1, sl
   24456:	bl	1eadc <btrfs_search_slot@@Base>
   2445a:	subs	r5, r0, #0
   2445c:	ble.w	248b8 <hash_extent_data_ref@@Base+0xc40>
   24460:	ldr	r3, [sp, #64]	; 0x40
   24462:	cmp	r3, #0
   24464:	beq.w	248be <hash_extent_data_ref@@Base+0xc46>
   24468:	ldr	r2, [r4, #32]
   2446a:	cmp	r2, #0
   2446c:	beq.w	24888 <hash_extent_data_ref@@Base+0xc10>
   24470:	subs	r2, #1
   24472:	ldr	r0, [r4, #0]
   24474:	mov	r1, r7
   24476:	str	r2, [r4, #32]
   24478:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   2447c:	ldrd	r2, r3, [sp, #100]	; 0x64
   24480:	ldrd	r0, r1, [sp, #56]	; 0x38
   24484:	cmp	r1, r3
   24486:	it	eq
   24488:	cmpeq	r0, r2
   2448a:	bne.w	24888 <hash_extent_data_ref@@Base+0xc10>
   2448e:	ldrb.w	r3, [sp, #108]	; 0x6c
   24492:	cmp	r3, #168	; 0xa8
   24494:	bne.w	24888 <hash_extent_data_ref@@Base+0xc10>
   24498:	ldrd	r0, r1, [sp, #192]	; 0xc0
   2449c:	ldr.w	r3, [sp, #113]	; 0x71
   244a0:	ldr.w	r2, [sp, #109]	; 0x6d
   244a4:	cmp	r1, r3
   244a6:	it	eq
   244a8:	cmpeq	r0, r2
   244aa:	bne.w	24888 <hash_extent_data_ref@@Base+0xc10>
   244ae:	movs	r5, #0
   244b0:	ldr.w	r2, [pc, #1140]	; 24928 <hash_extent_data_ref@@Base+0xcb0>
   244b4:	mov.w	r3, #2032	; 0x7f0
   244b8:	ldr.w	r1, [pc, #1136]	; 2492c <hash_extent_data_ref@@Base+0xcb4>
   244bc:	mov.w	r8, #0
   244c0:	ldr.w	r0, [pc, #1132]	; 24930 <hash_extent_data_ref@@Base+0xcb8>
   244c4:	add	r2, pc
   244c6:	adds	r2, #207	; 0xcf
   244c8:	add	r1, pc
   244ca:	add	r0, pc
   244cc:	str	r5, [sp, #0]
   244ce:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   244d2:	ldr	r7, [r4, #32]
   244d4:	ldr	r3, [r4, #0]
   244d6:	add.w	fp, r3, #96	; 0x60
   244da:	str	r3, [sp, #80]	; 0x50
   244dc:	movs	r3, #25
   244de:	mla	r3, r3, r7, fp
   244e2:	add.w	r2, r3, #101	; 0x65
   244e6:	ldr.w	r1, [r3, #122]	; 0x7a
   244ea:	cmp	r1, #23
   244ec:	bhi.n	24508 <hash_extent_data_ref@@Base+0x890>
   244ee:	ldr.w	r0, [pc, #1092]	; 24934 <hash_extent_data_ref@@Base+0xcbc>
   244f2:	movs	r2, #24
   244f4:	mvn.w	r5, #116	; 0x74
   244f8:	add	r0, pc
   244fa:	bl	1bd1c <__btrfs_error@@Base>
   244fe:	b.n	24214 <hash_extent_data_ref@@Base+0x59c>
   24500:	mov.w	r8, #1
   24504:	movs	r5, #0
   24506:	b.n	244d4 <hash_extent_data_ref@@Base+0x85c>
   24508:	ldr.w	r3, [r2, #17]
   2450c:	adds	r3, #101	; 0x65
   2450e:	str	r3, [sp, #72]	; 0x48
   24510:	ldrd	r2, r3, [sp, #216]	; 0xd8
   24514:	cmp	r3, #0
   24516:	it	eq
   24518:	cmpeq.w	r2, #256	; 0x100
   2451c:	bcs.n	2457c <hash_extent_data_ref@@Base+0x904>
   2451e:	ldrb.w	r3, [sp, #108]	; 0x6c
   24522:	cmp	r3, #168	; 0xa8
   24524:	bne.n	2457c <hash_extent_data_ref@@Base+0x904>
   24526:	ldr.w	r0, [pc, #1040]	; 24938 <hash_extent_data_ref@@Base+0xcc0>
   2452a:	cmp	r1, #41	; 0x29
   2452c:	ldr.w	r2, [pc, #1036]	; 2493c <hash_extent_data_ref@@Base+0xcc4>
   24530:	movw	r3, #2063	; 0x80f
   24534:	add	r0, pc
   24536:	ite	hi
   24538:	movhi	r1, #0
   2453a:	movls	r1, #1
   2453c:	str	r0, [sp, #64]	; 0x40
   2453e:	str	r1, [sp, #0]
   24540:	mov	r1, r0
   24542:	ldr	r0, [pc, #1020]	; (24940 <hash_extent_data_ref@@Base+0xcc8>)
   24544:	add	r2, pc
   24546:	adds	r2, #207	; 0xcf
   24548:	str	r2, [sp, #84]	; 0x54
   2454a:	add	r0, pc
   2454c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24550:	ldr	r3, [sp, #72]	; 0x48
   24552:	ldrd	r0, r1, [sp, #216]	; 0xd8
   24556:	add	r3, fp
   24558:	ldrb.w	r2, [r3, #41]	; 0x29
   2455c:	movs	r3, #0
   2455e:	cmp	r3, r1
   24560:	ldr	r1, [sp, #64]	; 0x40
   24562:	it	eq
   24564:	cmpeq	r2, r0
   24566:	ldr	r0, [pc, #988]	; (24944 <hash_extent_data_ref@@Base+0xccc>)
   24568:	ldr	r2, [sp, #84]	; 0x54
   2456a:	ite	ne
   2456c:	movne	r3, #1
   2456e:	moveq	r3, #0
   24570:	add	r0, pc
   24572:	str	r3, [sp, #0]
   24574:	movw	r3, #2065	; 0x811
   24578:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   2457c:	ldr	r3, [sp, #72]	; 0x48
   2457e:	ldr.w	r9, [pc, #968]	; 24948 <hash_extent_data_ref@@Base+0xcd0>
   24582:	add	r3, fp
   24584:	str	r3, [sp, #84]	; 0x54
   24586:	ldr	r3, [sp, #72]	; 0x48
   24588:	add	r9, pc
   2458a:	ldr	r0, [pc, #960]	; (2494c <hash_extent_data_ref@@Base+0xcd4>)
   2458c:	ldr.w	r3, [fp, r3]
   24590:	add	r0, pc
   24592:	str	r3, [sp, #64]	; 0x40
   24594:	ldr	r3, [sp, #84]	; 0x54
   24596:	ldr	r3, [r3, #4]
   24598:	str	r3, [sp, #68]	; 0x44
   2459a:	ldr	r3, [pc, #948]	; (24950 <hash_extent_data_ref@@Base+0xcd8>)
   2459c:	add	r3, pc
   2459e:	str	r3, [sp, #88]	; 0x58
   245a0:	add.w	r2, r3, #207	; 0xcf
   245a4:	ldrd	r3, r1, [sp, #64]	; 0x40
   245a8:	str	r2, [sp, #92]	; 0x5c
   245aa:	orrs	r3, r1
   245ac:	mov	r1, r9
   245ae:	ite	eq
   245b0:	moveq	r3, #1
   245b2:	movne	r3, #0
   245b4:	str	r3, [sp, #0]
   245b6:	movw	r3, #2069	; 0x815
   245ba:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   245be:	ldr	r3, [sp, #64]	; 0x40
   245c0:	adds.w	r1, r3, #4294967295	; 0xffffffff
   245c4:	ldr	r3, [sp, #68]	; 0x44
   245c6:	adc.w	ip, r3, #4294967295	; 0xffffffff
   245ca:	ldrd	r2, r3, [sp, #64]	; 0x40
   245ce:	cmp	r3, #0
   245d0:	it	eq
   245d2:	cmpeq	r2, #1
   245d4:	beq.n	24638 <hash_extent_data_ref@@Base+0x9c0>
   245d6:	ldr	r0, [sp, #96]	; 0x60
   245d8:	cbz	r0, 24624 <hash_extent_data_ref@@Base+0x9ac>
   245da:	ldr	r0, [pc, #888]	; (24954 <hash_extent_data_ref@@Base+0xcdc>)
   245dc:	eor.w	r3, r8, #1
   245e0:	ldr	r2, [sp, #92]	; 0x5c
   245e2:	mov	r1, r9
   245e4:	str	r3, [sp, #0]
   245e6:	add	r0, pc
   245e8:	movw	r3, #2078	; 0x81e
   245ec:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   245f0:	cmp.w	r8, #0
   245f4:	beq.w	24214 <hash_extent_data_ref@@Base+0x59c>
   245f8:	ldr	r3, [sp, #76]	; 0x4c
   245fa:	mov	r2, r4
   245fc:	mov	r1, sl
   245fe:	mov	r0, r6
   24600:	str	r3, [sp, #0]
   24602:	ldr	r3, [sp, #96]	; 0x60
   24604:	bl	23544 <btrfs_create_tree@@Base+0x928>
   24608:	ldr	r2, [pc, #844]	; (24958 <hash_extent_data_ref@@Base+0xce0>)
   2460a:	ldr	r1, [pc, #848]	; (2495c <hash_extent_data_ref@@Base+0xce4>)
   2460c:	movw	r3, #2087	; 0x827
   24610:	add	r2, pc
   24612:	adds	r2, #207	; 0xcf
   24614:	add	r1, pc
   24616:	mov	r5, r0
   24618:	str	r0, [sp, #0]
   2461a:	ldr	r0, [pc, #836]	; (24960 <hash_extent_data_ref@@Base+0xce8>)
   2461c:	add	r0, pc
   2461e:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24622:	b.n	24214 <hash_extent_data_ref@@Base+0x59c>
   24624:	ldr	r3, [sp, #72]	; 0x48
   24626:	ldr	r0, [sp, #80]	; 0x50
   24628:	str.w	r1, [fp, r3]
   2462c:	ldr	r3, [sp, #84]	; 0x54
   2462e:	str.w	ip, [r3, #4]
   24632:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   24636:	b.n	245f0 <hash_extent_data_ref@@Base+0x978>
   24638:	cmp.w	r8, #0
   2463c:	beq.w	2485a <hash_extent_data_ref@@Base+0xbe2>
   24640:	ldrd	r2, r3, [sp, #216]	; 0xd8
   24644:	cmp	r3, #0
   24646:	it	eq
   24648:	cmpeq.w	r2, #256	; 0x100
   2464c:	bcc.w	24838 <hash_extent_data_ref@@Base+0xbc0>
   24650:	ldr.w	fp, [r4]
   24654:	add	r1, sp, #120	; 0x78
   24656:	ldr	r5, [sp, #96]	; 0x60
   24658:	ldr	r2, [r4, #32]
   2465a:	mov	r0, fp
   2465c:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   24660:	add.w	r0, fp, #96	; 0x60
   24664:	cmp	r5, #0
   24666:	beq.w	247ee <hash_extent_data_ref@@Base+0xb76>
   2466a:	ldrb	r3, [r0, r5]
   2466c:	add	r0, r5
   2466e:	cmp	r3, #178	; 0xb2
   24670:	ite	eq
   24672:	ldreq.w	r3, [r0, #25]
   24676:	ldrne.w	r3, [r0, #9]
   2467a:	subs	r3, #1
   2467c:	it	ne
   2467e:	movne	r3, #1
   24680:	ldr	r2, [pc, #736]	; (24964 <hash_extent_data_ref@@Base+0xcec>)
   24682:	ldr	r1, [pc, #740]	; (24968 <hash_extent_data_ref@@Base+0xcf0>)
   24684:	ldr	r0, [pc, #740]	; (2496c <hash_extent_data_ref@@Base+0xcf4>)
   24686:	add	r2, pc
   24688:	adds	r2, #207	; 0xcf
   2468a:	add	r1, pc
   2468c:	add	r0, pc
   2468e:	str	r3, [sp, #0]
   24690:	movw	r3, #2093	; 0x82d
   24694:	str	r2, [sp, #72]	; 0x48
   24696:	str	r1, [sp, #64]	; 0x40
   24698:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2469c:	ldr	r0, [sp, #96]	; 0x60
   2469e:	ldr	r3, [r4, #32]
   246a0:	ldr	r1, [sp, #64]	; 0x40
   246a2:	ldr	r2, [sp, #72]	; 0x48
   246a4:	cmp	r0, #0
   246a6:	beq.w	2483c <hash_extent_data_ref@@Base+0xbc4>
   246aa:	subs	r7, r7, r3
   246ac:	ldr	r0, [pc, #704]	; (24970 <hash_extent_data_ref@@Base+0xcf8>)
   246ae:	mov.w	r3, #2096	; 0x830
   246b2:	it	ne
   246b4:	movne	r7, #1
   246b6:	add	r0, pc
   246b8:	str	r7, [sp, #0]
   246ba:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   246be:	ldrd	r2, r3, [sp, #216]	; 0xd8
   246c2:	cmp	r3, #0
   246c4:	it	eq
   246c6:	cmpeq.w	r2, #256	; 0x100
   246ca:	bcs.w	24866 <hash_extent_data_ref@@Base+0xbee>
   246ce:	ldr	r3, [sp, #192]	; 0xc0
   246d0:	ldr	r0, [r6, #0]
   246d2:	str	r3, [sp, #0]
   246d4:	ldrd	r2, r3, [sp, #56]	; 0x38
   246d8:	bl	20ac8 <btrfs_find_tree_block@@Base>
   246dc:	mov	r5, r0
   246de:	cmp	r0, #0
   246e0:	beq.w	24866 <hash_extent_data_ref@@Base+0xbee>
   246e4:	movs	r2, #0
   246e6:	movs	r3, #0
   246e8:	bl	21db4 <btrfs_buffer_uptodate@@Base>
   246ec:	cmp	r0, #0
   246ee:	beq.w	24860 <hash_extent_data_ref@@Base+0xbe8>
   246f2:	ldr.w	r3, [r5, #188]	; 0xbc
   246f6:	mov.w	r1, #4294967295	; 0xffffffff
   246fa:	ldr.w	r2, [r5, #184]	; 0xb8
   246fe:	mvn.w	r0, #5
   24702:	cmp	r3, r1
   24704:	it	eq
   24706:	cmpeq	r2, r0
   24708:	beq.w	24860 <hash_extent_data_ref@@Base+0xbe8>
   2470c:	ldrd	r2, r3, [r6, #8]
   24710:	ldr.w	r1, [r5, #180]	; 0xb4
   24714:	ldr.w	r0, [r5, #176]	; 0xb0
   24718:	cmp	r1, r3
   2471a:	it	eq
   2471c:	cmpeq	r0, r2
   2471e:	bne.w	24860 <hash_extent_data_ref@@Base+0xbe8>
   24722:	ldr.w	r1, [r5, #152]	; 0x98
   24726:	movs	r3, #0
   24728:	and.w	r2, r1, #1
   2472c:	orrs	r3, r2
   2472e:	bne.w	24860 <hash_extent_data_ref@@Base+0xbe8>
   24732:	mov	r0, r5
   24734:	mov.w	r9, #1
   24738:	bl	21dac <clean_tree_block@@Base>
   2473c:	mov	r0, r5
   2473e:	bl	1b4c0 <free_extent_buffer@@Base>
   24742:	ldr	r5, [pc, #560]	; (24974 <hash_extent_data_ref@@Base+0xcfc>)
   24744:	movs	r3, #0
   24746:	ldr	r7, [pc, #560]	; (24978 <hash_extent_data_ref@@Base+0xd00>)
   24748:	add	r5, pc
   2474a:	ldr	r0, [pc, #560]	; (2497c <hash_extent_data_ref@@Base+0xd04>)
   2474c:	adds	r5, #207	; 0xcf
   2474e:	add	r7, pc
   24750:	add	r0, pc
   24752:	str	r3, [sp, #0]
   24754:	mov	r2, r5
   24756:	movw	r3, #2108	; 0x83c
   2475a:	mov	r1, r7
   2475c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24760:	str.w	r8, [sp]
   24764:	mov	r2, r4
   24766:	ldr	r3, [r4, #32]
   24768:	mov	r1, sl
   2476a:	mov	r0, r6
   2476c:	bl	1fc98 <btrfs_del_items@@Base>
   24770:	ldr.w	r8, [pc, #524]	; 24980 <hash_extent_data_ref@@Base+0xd08>
   24774:	mov.w	r3, #2112	; 0x840
   24778:	mov	r2, r5
   2477a:	add	r8, pc
   2477c:	mov	r1, r7
   2477e:	str	r0, [sp, #0]
   24780:	mov	r0, r8
   24782:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24786:	mov	r0, r4
   24788:	bl	1c6f8 <btrfs_release_path@@Base>
   2478c:	ldrd	r2, r3, [sp, #216]	; 0xd8
   24790:	cmp	r3, #0
   24792:	it	eq
   24794:	cmpeq.w	r2, #256	; 0x100
   24798:	bcc.n	247bc <hash_extent_data_ref@@Base+0xb44>
   2479a:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2479e:	mov	r0, r6
   247a0:	strd	r2, r3, [sp]
   247a4:	ldrd	r2, r3, [sp, #56]	; 0x38
   247a8:	bl	33010 <btrfs_del_csums@@Base>
   247ac:	movw	r3, #2117	; 0x845
   247b0:	mov	r2, r5
   247b2:	mov	r1, r7
   247b4:	str	r0, [sp, #0]
   247b6:	mov	r0, r8
   247b8:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   247bc:	ldrd	r2, r3, [sp, #192]	; 0xc0
   247c0:	mov	r0, r6
   247c2:	strd	r2, r3, [sp]
   247c6:	ldrd	r2, r3, [sp, #56]	; 0x38
   247ca:	bl	31320 <add_to_free_space_tree@@Base>
   247ce:	mov	r5, r0
   247d0:	cmp	r0, #0
   247d2:	bne.w	24214 <hash_extent_data_ref@@Base+0x59c>
   247d6:	ldrd	r2, r3, [sp, #192]	; 0xc0
   247da:	strd	r0, r9, [sp, #8]
   247de:	ldr	r0, [r6, #0]
   247e0:	strd	r2, r3, [sp]
   247e4:	ldrd	r2, r3, [sp, #56]	; 0x38
   247e8:	bl	238dc <btrfs_lookup_block_group@@Base+0x188>
   247ec:	b.n	24214 <hash_extent_data_ref@@Base+0x59c>
   247ee:	ldrb.w	r3, [sp, #128]	; 0x80
   247f2:	cmp	r3, #178	; 0xb2
   247f4:	bne.n	2480a <hash_extent_data_ref@@Base+0xb92>
   247f6:	ldr	r3, [r4, #32]
   247f8:	movs	r2, #25
   247fa:	mla	r3, r2, r3, r0
   247fe:	ldr.w	r5, [r3, #118]	; 0x76
   24802:	add	r0, r5
   24804:	ldr.w	r3, [r0, #125]	; 0x7d
   24808:	b.n	2467a <hash_extent_data_ref@@Base+0xa02>
   2480a:	cmp	r3, #184	; 0xb8
   2480c:	bne.n	24822 <hash_extent_data_ref@@Base+0xbaa>
   2480e:	ldr	r3, [r4, #32]
   24810:	movs	r2, #25
   24812:	mla	r3, r2, r3, r0
   24816:	ldr.w	r5, [r3, #118]	; 0x76
   2481a:	add	r0, r5
   2481c:	ldr.w	r3, [r0, #101]	; 0x65
   24820:	b.n	2467a <hash_extent_data_ref@@Base+0xa02>
   24822:	ldr	r2, [sp, #88]	; 0x58
   24824:	movs	r3, #1
   24826:	ldr	r0, [pc, #348]	; (24984 <hash_extent_data_ref@@Base+0xd0c>)
   24828:	mov	r1, r9
   2482a:	str	r3, [sp, #0]
   2482c:	adds	r2, #221	; 0xdd
   2482e:	add	r0, pc
   24830:	movw	r3, #777	; 0x309
   24834:	bl	23194 <btrfs_create_tree@@Base+0x578>
   24838:	movs	r3, #0
   2483a:	b.n	24680 <hash_extent_data_ref@@Base+0xa08>
   2483c:	adds	r0, r7, #1
   2483e:	mov.w	r8, #2
   24842:	subs	r3, r0, r3
   24844:	ldr	r0, [pc, #320]	; (24988 <hash_extent_data_ref@@Base+0xd10>)
   24846:	it	ne
   24848:	movne	r3, #1
   2484a:	add	r0, pc
   2484c:	str	r3, [sp, #0]
   2484e:	movw	r3, #2098	; 0x832
   24852:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24856:	str	r7, [r4, #32]
   24858:	b.n	246be <hash_extent_data_ref@@Base+0xa46>
   2485a:	mov.w	r8, #1
   2485e:	b.n	246be <hash_extent_data_ref@@Base+0xa46>
   24860:	mov	r0, r5
   24862:	bl	1b4c0 <free_extent_buffer@@Base>
   24866:	movs	r3, #1
   24868:	str	r3, [sp, #8]
   2486a:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2486e:	mov.w	r9, #0
   24872:	ldr	r0, [r6, #0]
   24874:	strd	r2, r3, [sp]
   24878:	ldrd	r2, r3, [sp, #56]	; 0x38
   2487c:	bl	237ec <btrfs_lookup_block_group@@Base+0x98>
   24880:	b.n	24742 <hash_extent_data_ref@@Base+0xaca>
   24882:	mvn.w	r5, #11
   24886:	b.n	2421a <hash_extent_data_ref@@Base+0x5a2>
   24888:	mov	r0, r4
   2488a:	bl	1c6f8 <btrfs_release_path@@Base>
   2488e:	movs	r3, #168	; 0xa8
   24890:	strb.w	r3, [sp, #108]	; 0x6c
   24894:	movs	r2, #1
   24896:	ldr	r3, [sp, #192]	; 0xc0
   24898:	mov	r1, sl
   2489a:	mov	r0, r6
   2489c:	str.w	r3, [sp, #109]	; 0x6d
   248a0:	ldr	r3, [sp, #196]	; 0xc4
   248a2:	str.w	r3, [sp, #113]	; 0x71
   248a6:	mov.w	r3, #4294967295	; 0xffffffff
   248aa:	strd	r3, r2, [sp]
   248ae:	add	r2, sp, #100	; 0x64
   248b0:	mov	r3, r4
   248b2:	bl	1eadc <btrfs_search_slot@@Base>
   248b6:	mov	r5, r0
   248b8:	cmp	r5, #0
   248ba:	beq.w	244ae <hash_extent_data_ref@@Base+0x836>
   248be:	ldr	r2, [sp, #72]	; 0x48
   248c0:	movs	r1, #1
   248c2:	ldr	r3, [pc, #68]	; (24908 <hash_extent_data_ref@@Base+0xc90>)
   248c4:	ldr	r0, [r2, r3]
   248c6:	ldrd	r2, r3, [sp, #56]	; 0x38
   248ca:	strd	r2, r3, [sp]
   248ce:	mov	r3, r5
   248d0:	ldr	r2, [pc, #184]	; (2498c <hash_extent_data_ref@@Base+0xd14>)
   248d2:	ldr	r0, [r0, #0]
   248d4:	add	r2, pc
   248d6:	blx	9040 <__fprintf_chk@plt+0x4>
   248da:	ldr	r0, [r4, #0]
   248dc:	bl	298c0 <btrfs_print_leaf@@Base>
   248e0:	b.n	244b0 <hash_extent_data_ref@@Base+0x838>
   248e2:	mov	r0, r5
   248e4:	add	sp, #148	; 0x94
   248e6:	vpop	{d8}
   248ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248ee:	nop
   248f0:	ldr	r2, [r3, #72]	; 0x48
   248f2:	movs	r4, r0
   248f4:	ldr	r6, [r2, #72]	; 0x48
   248f6:	movs	r4, r0
   248f8:	lsls	r0, r1, #10
   248fa:	movs	r0, r0
   248fc:	stcl	0, cr0, [r8, #-4]
   24900:	cdp	0, 2, cr0, cr14, cr1, {0}
   24904:	orn	r0, lr, #8454144	; 0x810000
   24908:	lsls	r4, r3, #10
   2490a:	movs	r0, r0
   2490c:	cdp	0, 1, cr0, cr2, cr1, {0}
   24910:	cdp	0, 5, cr0, cr9, cr1, {0}
   24914:	ldr	r6, [r6, #44]	; 0x2c
   24916:	movs	r4, r0
   24918:			; <UNDEFINED> instruction: 0xf2100001
   2491c:			; <UNDEFINED> instruction: 0xeae20001
   24920:	stmia	r7!, {r0, r1, r2, r4, r5, r7}
   24922:	movs	r1, r0
   24924:			; <UNDEFINED> instruction: 0xb79e
   24926:	movs	r1, r0
   24928:			; <UNDEFINED> instruction: 0xf0b80001
   2492c:			; <UNDEFINED> instruction: 0xe98a0001
   24930:			; <UNDEFINED> instruction: 0xb678
   24932:	movs	r1, r0
   24934:			; <UNDEFINED> instruction: 0xeb8d0001
   24938:	ldmdb	lr, {r0}
   2493c:	bics.w	r0, r8, #1
   24940:			; <UNDEFINED> instruction: 0xeb860001
   24944:			; <UNDEFINED> instruction: 0xeb860001
   24948:			; <UNDEFINED> instruction: 0xe8ca0001
   2494c:	strd	r0, r0, [ip, #4]
   24950:	vaddl.s32	q8, d0, d1
   24954:	adc.w	r0, r3, r1
   24958:	vhadd.s32	d16, d12, d1
   2495c:			; <UNDEFINED> instruction: 0xe83e0001
   24960:	push	{r1, r2, r5, lr}
   24962:	movs	r1, r0
   24964:	cdp	0, 15, cr0, cr6, cr1, {0}
   24968:	b.n	248fc <hash_extent_data_ref@@Base+0xc84>
   2496a:	movs	r1, r0
   2496c:			; <UNDEFINED> instruction: 0xeaab0001
   24970:			; <UNDEFINED> instruction: 0xeabe0001
   24974:	cdp	0, 3, cr0, cr4, cr1, {0}
   24978:	b.n	24784 <hash_extent_data_ref@@Base+0xb0c>
   2497a:	movs	r1, r0
   2497c:	orn	r0, r4, r1
   24980:	cbz	r0, 249f6 <btrfs_inc_extent_ref@@Base+0x66>
   24982:	movs	r1, r0
   24984:			; <UNDEFINED> instruction: 0xe9840001
   24988:	strd	r0, r0, [r8, #-4]
   2498c:	b.n	24798 <hash_extent_data_ref@@Base+0xb20>
   2498e:	movs	r1, r0

00024990 <btrfs_inc_extent_ref@@Base>:
   24990:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24994:	sub	sp, #100	; 0x64
   24996:	mov	r6, r0
   24998:	mov	r7, r1
   2499a:	strd	r2, r3, [sp, #56]	; 0x38
   2499e:	ldr.w	r2, [pc, #1104]	; 24df0 <btrfs_inc_extent_ref@@Base+0x460>
   249a2:	ldr.w	r3, [pc, #1104]	; 24df4 <btrfs_inc_extent_ref@@Base+0x464>
   249a6:	add	r2, pc
   249a8:	ldrd	sl, fp, [sp, #144]	; 0x90
   249ac:	ldr	r3, [r2, r3]
   249ae:	ldr	r3, [r3, #0]
   249b0:	str	r3, [sp, #92]	; 0x5c
   249b2:	mov.w	r3, #0
   249b6:	bl	1c6f0 <btrfs_alloc_path@@Base>
   249ba:	mov	r5, r0
   249bc:	cmp	r0, #0
   249be:	beq.w	24de2 <btrfs_inc_extent_ref@@Base+0x452>
   249c2:	mov.w	r8, #1
   249c6:	strb.w	r8, [r0, #64]	; 0x40
   249ca:	ldr.w	r3, [r7, #464]	; 0x1d0
   249ce:	ldr.w	r9, [r3, #24]
   249d2:	ldrd	r3, r4, [sp, #168]	; 0xa8
   249d6:	str.w	r8, [sp, #48]	; 0x30
   249da:	mov	r1, r9
   249dc:	strd	sl, fp, [sp, #16]
   249e0:	strd	r3, r4, [sp, #40]	; 0x28
   249e4:	ldrd	r3, r4, [sp, #160]	; 0xa0
   249e8:	strd	r3, r4, [sp, #32]
   249ec:	ldrd	r3, r4, [sp, #152]	; 0x98
   249f0:	strd	r3, r4, [sp, #24]
   249f4:	ldrd	r2, r3, [sp, #136]	; 0x88
   249f8:	strd	r2, r3, [sp, #8]
   249fc:	mov	r2, r0
   249fe:	ldr	r3, [sp, #56]	; 0x38
   24a00:	mov	r0, r6
   24a02:	str	r3, [sp, #0]
   24a04:	ldr	r3, [sp, #60]	; 0x3c
   24a06:	str	r3, [sp, #4]
   24a08:	add	r3, sp, #72	; 0x48
   24a0a:	bl	23cf0 <hash_extent_data_ref@@Base+0x78>
   24a0e:	mov	r4, r0
   24a10:	cmp	r0, #0
   24a12:	bne.w	24b50 <btrfs_inc_extent_ref@@Base+0x1c0>
   24a16:	ldrd	r3, r4, [sp, #160]	; 0xa0
   24a1a:	ldr	r2, [pc, #988]	; (24df8 <btrfs_inc_extent_ref@@Base+0x468>)
   24a1c:	cmp	r4, #0
   24a1e:	ldr	r1, [pc, #988]	; (24dfc <btrfs_inc_extent_ref@@Base+0x46c>)
   24a20:	it	eq
   24a22:	cmpeq.w	r3, #256	; 0x100
   24a26:	ldr	r0, [pc, #984]	; (24e00 <btrfs_inc_extent_ref@@Base+0x470>)
   24a28:	add	r2, pc
   24a2a:	add	r1, pc
   24a2c:	ite	cc
   24a2e:	movcc	r3, r8
   24a30:	movcs	r3, #0
   24a32:	adds	r2, #243	; 0xf3
   24a34:	add	r0, pc
   24a36:	str	r3, [sp, #0]
   24a38:	mov.w	r3, #1184	; 0x4a0
   24a3c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24a40:	ldr	r2, [sp, #72]	; 0x48
   24a42:	mov	r3, r8
   24a44:	mov	r1, r5
   24a46:	mov	r0, r9
   24a48:	bl	23224 <btrfs_create_tree@@Base+0x608>
   24a4c:	mov	r4, r0
   24a4e:	cmp	r0, #0
   24a50:	beq.w	24c36 <btrfs_inc_extent_ref@@Base+0x2a6>
   24a54:	cmn.w	r4, #11
   24a58:	bne.w	24c36 <btrfs_inc_extent_ref@@Base+0x2a6>
   24a5c:	ldr	r0, [r5, #0]
   24a5e:	movs	r2, #25
   24a60:	ldr	r3, [r5, #32]
   24a62:	add.w	r4, r0, #96	; 0x60
   24a66:	mla	r3, r2, r3, r4
   24a6a:	ldr.w	r2, [r3, #118]	; 0x76
   24a6e:	adds	r2, #101	; 0x65
   24a70:	add.w	ip, r4, r2
   24a74:	ldr	r3, [r4, r2]
   24a76:	ldr.w	r1, [ip, #4]
   24a7a:	adds	r3, #1
   24a7c:	str	r3, [r4, r2]
   24a7e:	adc.w	r1, r1, #0
   24a82:	str.w	r1, [ip, #4]
   24a86:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   24a8a:	mov	r0, r5
   24a8c:	bl	1c6f8 <btrfs_release_path@@Base>
   24a90:	movs	r3, #1
   24a92:	strb.w	r3, [r5, #64]	; 0x40
   24a96:	ldr.w	r3, [r7, #464]	; 0x1d0
   24a9a:	ldr	r7, [r3, #24]
   24a9c:	ldrd	r3, r4, [sp, #160]	; 0xa0
   24aa0:	cmp	r4, #0
   24aa2:	add.w	r4, sp, #81	; 0x51
   24aa6:	it	eq
   24aa8:	cmpeq.w	r3, #256	; 0x100
   24aac:	bcc.w	24d7c <btrfs_inc_extent_ref@@Base+0x3ec>
   24ab0:	ldr	r3, [sp, #56]	; 0x38
   24ab2:	str	r3, [sp, #72]	; 0x48
   24ab4:	ldr	r3, [sp, #60]	; 0x3c
   24ab6:	str	r3, [sp, #76]	; 0x4c
   24ab8:	orrs.w	r3, sl, fp
   24abc:	beq.w	24ca6 <btrfs_inc_extent_ref@@Base+0x316>
   24ac0:	mov.w	r8, #4
   24ac4:	movs	r3, #184	; 0xb8
   24ac6:	str.w	sl, [sp, #81]	; 0x51
   24aca:	strb.w	r3, [sp, #80]	; 0x50
   24ace:	str.w	fp, [r4, #4]
   24ad2:	movs	r3, #1
   24ad4:	mov	r2, r5
   24ad6:	str	r3, [sp, #4]
   24ad8:	mov	r1, r7
   24ada:	add	r3, sp, #68	; 0x44
   24adc:	mov	r0, r6
   24ade:	str	r3, [sp, #0]
   24ae0:	add	r3, sp, #72	; 0x48
   24ae2:	str.w	r8, [sp, #68]	; 0x44
   24ae6:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   24aea:	mov	r4, r0
   24aec:	cbz	r0, 24af6 <btrfs_inc_extent_ref@@Base+0x166>
   24aee:	cmn.w	r0, #17
   24af2:	bne.w	24cf2 <btrfs_inc_extent_ref@@Base+0x362>
   24af6:	orrs.w	r3, sl, fp
   24afa:	ldr	r0, [r5, #0]
   24afc:	bne.w	24ccc <btrfs_inc_extent_ref@@Base+0x33c>
   24b00:	add.w	r9, sp, #72	; 0x48
   24b04:	mov.w	sl, #1
   24b08:	ldr	r3, [r5, #32]
   24b0a:	add.w	r1, r0, #96	; 0x60
   24b0e:	movs	r2, #25
   24b10:	cmn.w	r4, #17
   24b14:	mla	r3, r2, r3, r1
   24b18:	ldr.w	r3, [r3, #118]	; 0x76
   24b1c:	add.w	r3, r3, #101	; 0x65
   24b20:	add	r1, r3
   24b22:	beq.w	24d02 <btrfs_inc_extent_ref@@Base+0x372>
   24b26:	cmp	r4, #0
   24b28:	bne.w	24d74 <btrfs_inc_extent_ref@@Base+0x3e4>
   24b2c:	ldr	r3, [sp, #152]	; 0x98
   24b2e:	strb	r4, [r1, #25]
   24b30:	strb	r4, [r1, #26]
   24b32:	str	r3, [r1, #0]
   24b34:	ldr	r3, [sp, #156]	; 0x9c
   24b36:	strb	r4, [r1, #27]
   24b38:	str	r3, [r1, #4]
   24b3a:	ldr	r3, [sp, #160]	; 0xa0
   24b3c:	str	r3, [r1, #8]
   24b3e:	ldr	r3, [sp, #164]	; 0xa4
   24b40:	str	r3, [r1, #12]
   24b42:	ldr	r3, [sp, #168]	; 0xa8
   24b44:	str	r3, [r1, #16]
   24b46:	ldr	r3, [sp, #172]	; 0xac
   24b48:	str	r3, [r1, #20]
   24b4a:	movs	r3, #1
   24b4c:	strb	r3, [r1, #24]
   24b4e:	b.n	24cec <btrfs_inc_extent_ref@@Base+0x35c>
   24b50:	adds	r1, r0, #2
   24b52:	bne.w	24a54 <btrfs_inc_extent_ref@@Base+0xc4>
   24b56:	ldr.w	r8, [r5]
   24b5a:	movs	r2, #25
   24b5c:	ldr	r3, [r5, #32]
   24b5e:	add.w	r6, r8, #96	; 0x60
   24b62:	ldr	r4, [sp, #72]	; 0x48
   24b64:	mla	r3, r2, r3, r6
   24b68:	subs	r4, #101	; 0x65
   24b6a:	ldr.w	r2, [r3, #118]	; 0x76
   24b6e:	subs	r4, r4, r2
   24b70:	ldrd	r2, r3, [sp, #160]	; 0xa0
   24b74:	cmp	r3, #0
   24b76:	it	eq
   24b78:	cmpeq.w	r2, #256	; 0x100
   24b7c:	bcs.n	24c6c <btrfs_inc_extent_ref@@Base+0x2dc>
   24b7e:	orrs.w	r3, sl, fp
   24b82:	ite	ne
   24b84:	movne	r7, #182	; 0xb6
   24b86:	moveq	r7, #176	; 0xb0
   24b88:	mov	r0, r7
   24b8a:	bl	231dc <btrfs_create_tree@@Base+0x5c0>
   24b8e:	mov	r1, r5
   24b90:	mov	r2, r0
   24b92:	str	r0, [sp, #56]	; 0x38
   24b94:	mov	r0, r9
   24b96:	bl	1e8d0 <btrfs_extend_item@@Base>
   24b9a:	ldr	r2, [pc, #616]	; (24e04 <btrfs_inc_extent_ref@@Base+0x474>)
   24b9c:	ldr	r1, [pc, #616]	; (24e08 <btrfs_inc_extent_ref@@Base+0x478>)
   24b9e:	movw	r3, #1044	; 0x414
   24ba2:	add	r2, pc
   24ba4:	add.w	r2, r2, #272	; 0x110
   24ba8:	add	r1, pc
   24baa:	str	r0, [sp, #0]
   24bac:	ldr	r0, [pc, #604]	; (24e0c <btrfs_inc_extent_ref@@Base+0x47c>)
   24bae:	add	r0, pc
   24bb0:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24bb4:	ldr	r3, [r5, #32]
   24bb6:	movs	r0, #25
   24bb8:	mla	r3, r0, r3, r6
   24bbc:	ldr.w	r3, [r3, #118]	; 0x76
   24bc0:	adds	r3, #101	; 0x65
   24bc2:	add.w	ip, r6, r3
   24bc6:	add	r4, r3
   24bc8:	ldr	r2, [r6, r3]
   24bca:	ldr.w	r1, [ip, #4]
   24bce:	adds	r2, #1
   24bd0:	str	r2, [r6, r3]
   24bd2:	adc.w	r1, r1, #0
   24bd6:	str.w	r1, [ip, #4]
   24bda:	ldr	r2, [r5, #32]
   24bdc:	mla	r0, r0, r2, r6
   24be0:	ldr.w	r2, [r0, #122]	; 0x7a
   24be4:	add	r3, r2
   24be6:	ldr	r2, [sp, #56]	; 0x38
   24be8:	subs	r3, r3, r2
   24bea:	cmp	r4, r3
   24bec:	bcs.n	24bfc <btrfs_inc_extent_ref@@Base+0x26c>
   24bee:	ldr	r1, [sp, #56]	; 0x38
   24bf0:	subs	r3, r3, r4
   24bf2:	mov	r2, r4
   24bf4:	mov	r0, r8
   24bf6:	add	r1, r4
   24bf8:	bl	1bc2c <memmove_extent_buffer@@Base>
   24bfc:	cmp	r7, #178	; 0xb2
   24bfe:	add.w	r3, r6, r4
   24c02:	strb	r7, [r6, r4]
   24c04:	bne.n	24c78 <btrfs_inc_extent_ref@@Base+0x2e8>
   24c06:	ldr	r2, [sp, #152]	; 0x98
   24c08:	adds	r4, #1
   24c0a:	adds	r3, r6, r4
   24c0c:	movs	r1, #1
   24c0e:	str	r2, [r6, r4]
   24c10:	ldr	r2, [sp, #156]	; 0x9c
   24c12:	strb	r1, [r3, #24]
   24c14:	str	r2, [r3, #4]
   24c16:	ldr	r2, [sp, #160]	; 0xa0
   24c18:	str	r2, [r3, #8]
   24c1a:	ldr	r2, [sp, #164]	; 0xa4
   24c1c:	str	r2, [r3, #12]
   24c1e:	ldr	r2, [sp, #168]	; 0xa8
   24c20:	str	r2, [r3, #16]
   24c22:	ldr	r2, [sp, #172]	; 0xac
   24c24:	str	r2, [r3, #20]
   24c26:	movs	r2, #0
   24c28:	strb	r2, [r3, #25]
   24c2a:	strb	r2, [r3, #26]
   24c2c:	strb	r2, [r3, #27]
   24c2e:	mov	r0, r8
   24c30:	movs	r4, #0
   24c32:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   24c36:	mov	r0, r5
   24c38:	bl	1c71e <btrfs_free_path@@Base>
   24c3c:	ldr	r2, [pc, #464]	; (24e10 <btrfs_inc_extent_ref@@Base+0x480>)
   24c3e:	ldr	r1, [pc, #468]	; (24e14 <btrfs_inc_extent_ref@@Base+0x484>)
   24c40:	movw	r3, #1282	; 0x502
   24c44:	ldr	r0, [pc, #464]	; (24e18 <btrfs_inc_extent_ref@@Base+0x488>)
   24c46:	add	r2, pc
   24c48:	add.w	r2, r2, #322	; 0x142
   24c4c:	add	r1, pc
   24c4e:	add	r0, pc
   24c50:	str	r4, [sp, #0]
   24c52:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24c56:	ldr	r2, [pc, #452]	; (24e1c <btrfs_inc_extent_ref@@Base+0x48c>)
   24c58:	ldr	r3, [pc, #408]	; (24df4 <btrfs_inc_extent_ref@@Base+0x464>)
   24c5a:	add	r2, pc
   24c5c:	ldr	r3, [r2, r3]
   24c5e:	ldr	r2, [r3, #0]
   24c60:	ldr	r3, [sp, #92]	; 0x5c
   24c62:	eors	r2, r3
   24c64:	beq.w	24de8 <btrfs_inc_extent_ref@@Base+0x458>
   24c68:	blx	8c90 <__stack_chk_fail@plt>
   24c6c:	orrs.w	r3, sl, fp
   24c70:	ite	ne
   24c72:	movne	r7, #184	; 0xb8
   24c74:	moveq	r7, #178	; 0xb2
   24c76:	b.n	24b88 <btrfs_inc_extent_ref@@Base+0x1f8>
   24c78:	cmp	r7, #184	; 0xb8
   24c7a:	add.w	r2, r3, #1
   24c7e:	bne.n	24c96 <btrfs_inc_extent_ref@@Base+0x306>
   24c80:	movs	r1, #0
   24c82:	movs	r0, #1
   24c84:	strb	r1, [r3, #10]
   24c86:	strb	r0, [r3, #9]
   24c88:	strb	r1, [r3, #11]
   24c8a:	strb	r1, [r3, #12]
   24c8c:	str.w	sl, [r3, #1]
   24c90:	str.w	fp, [r2, #4]
   24c94:	b.n	24c2e <btrfs_inc_extent_ref@@Base+0x29e>
   24c96:	cmp	r7, #182	; 0xb6
   24c98:	beq.n	24c8c <btrfs_inc_extent_ref@@Base+0x2fc>
   24c9a:	ldr	r1, [sp, #152]	; 0x98
   24c9c:	str.w	r1, [r3, #1]
   24ca0:	ldr	r3, [sp, #156]	; 0x9c
   24ca2:	str	r3, [r2, #4]
   24ca4:	b.n	24c2e <btrfs_inc_extent_ref@@Base+0x29e>
   24ca6:	movs	r3, #178	; 0xb2
   24ca8:	strb.w	r3, [sp, #80]	; 0x50
   24cac:	ldrd	r2, r3, [sp, #168]	; 0xa8
   24cb0:	mov.w	r8, #28
   24cb4:	ldrd	r0, r1, [sp, #152]	; 0x98
   24cb8:	strd	r2, r3, [sp]
   24cbc:	ldrd	r2, r3, [sp, #160]	; 0xa0
   24cc0:	bl	23c78 <hash_extent_data_ref@@Base>
   24cc4:	str.w	r0, [sp, #81]	; 0x51
   24cc8:	str	r1, [r4, #4]
   24cca:	b.n	24ad2 <btrfs_inc_extent_ref@@Base+0x142>
   24ccc:	ldr	r3, [r5, #32]
   24cce:	add.w	r2, r0, #96	; 0x60
   24cd2:	movs	r1, #25
   24cd4:	mla	r3, r1, r3, r2
   24cd8:	ldr.w	r3, [r3, #118]	; 0x76
   24cdc:	adds	r3, #101	; 0x65
   24cde:	adds	r1, r2, r3
   24ce0:	cbnz	r4, 24cfa <btrfs_inc_extent_ref@@Base+0x36a>
   24ce2:	movs	r6, #1
   24ce4:	strb	r6, [r2, r3]
   24ce6:	strb	r4, [r1, #1]
   24ce8:	strb	r4, [r1, #2]
   24cea:	strb	r4, [r1, #3]
   24cec:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   24cf0:	movs	r4, #0
   24cf2:	mov	r0, r5
   24cf4:	bl	1c6f8 <btrfs_release_path@@Base>
   24cf8:	b.n	24c36 <btrfs_inc_extent_ref@@Base+0x2a6>
   24cfa:	ldr	r1, [r1, #0]
   24cfc:	adds	r1, #1
   24cfe:	str	r1, [r2, r3]
   24d00:	b.n	24cec <btrfs_inc_extent_ref@@Base+0x35c>
   24d02:	ldrd	fp, ip, [sp, #152]	; 0x98
   24d06:	ldr	r3, [r1, #4]
   24d08:	ldr	r2, [r1, #0]
   24d0a:	cmp	ip, r3
   24d0c:	it	eq
   24d0e:	cmpeq	fp, r2
   24d10:	bne.n	24d32 <btrfs_inc_extent_ref@@Base+0x3a2>
   24d12:	ldrd	fp, ip, [sp, #160]	; 0xa0
   24d16:	ldr	r3, [r1, #12]
   24d18:	ldr	r2, [r1, #8]
   24d1a:	cmp	ip, r3
   24d1c:	it	eq
   24d1e:	cmpeq	fp, r2
   24d20:	bne.n	24d32 <btrfs_inc_extent_ref@@Base+0x3a2>
   24d22:	ldrd	fp, ip, [sp, #168]	; 0xa8
   24d26:	ldr	r3, [r1, #20]
   24d28:	ldr	r2, [r1, #16]
   24d2a:	cmp	ip, r3
   24d2c:	it	eq
   24d2e:	cmpeq	fp, r2
   24d30:	beq.n	24d74 <btrfs_inc_extent_ref@@Base+0x3e4>
   24d32:	mov	r0, r5
   24d34:	bl	1c6f8 <btrfs_release_path@@Base>
   24d38:	ldr.w	r3, [sp, #81]	; 0x51
   24d3c:	ldr.w	r2, [sp, #85]	; 0x55
   24d40:	mov	r1, r7
   24d42:	adds	r3, #1
   24d44:	mov	r0, r6
   24d46:	adc.w	r2, r2, #0
   24d4a:	str.w	r3, [sp, #81]	; 0x51
   24d4e:	str.w	r2, [sp, #85]	; 0x55
   24d52:	add	r3, sp, #68	; 0x44
   24d54:	mov	r2, r5
   24d56:	str	r3, [sp, #0]
   24d58:	str.w	sl, [sp, #4]
   24d5c:	mov	r3, r9
   24d5e:	str.w	r8, [sp, #68]	; 0x44
   24d62:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   24d66:	mov	r4, r0
   24d68:	cbz	r0, 24d70 <btrfs_inc_extent_ref@@Base+0x3e0>
   24d6a:	cmn.w	r0, #17
   24d6e:	bne.n	24cf2 <btrfs_inc_extent_ref@@Base+0x362>
   24d70:	ldr	r0, [r5, #0]
   24d72:	b.n	24b08 <btrfs_inc_extent_ref@@Base+0x178>
   24d74:	ldr	r3, [r1, #24]
   24d76:	adds	r3, #1
   24d78:	str	r3, [r1, #24]
   24d7a:	b.n	24cec <btrfs_inc_extent_ref@@Base+0x35c>
   24d7c:	ldr	r2, [pc, #160]	; (24e20 <btrfs_inc_extent_ref@@Base+0x490>)
   24d7e:	movs	r3, #0
   24d80:	ldr	r1, [pc, #160]	; (24e24 <btrfs_inc_extent_ref@@Base+0x494>)
   24d82:	ldr	r0, [pc, #164]	; (24e28 <btrfs_inc_extent_ref@@Base+0x498>)
   24d84:	add	r2, pc
   24d86:	str	r3, [sp, #0]
   24d88:	add.w	r2, r2, #300	; 0x12c
   24d8c:	mov.w	r3, #1208	; 0x4b8
   24d90:	add	r1, pc
   24d92:	add	r0, pc
   24d94:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   24d98:	ldr	r3, [sp, #56]	; 0x38
   24d9a:	str	r3, [sp, #72]	; 0x48
   24d9c:	ldr	r3, [sp, #60]	; 0x3c
   24d9e:	str	r3, [sp, #76]	; 0x4c
   24da0:	orrs.w	r3, sl, fp
   24da4:	beq.n	24dd0 <btrfs_inc_extent_ref@@Base+0x440>
   24da6:	movs	r3, #182	; 0xb6
   24da8:	str.w	sl, [sp, #81]	; 0x51
   24dac:	strb.w	r3, [sp, #80]	; 0x50
   24db0:	str.w	fp, [r4, #4]
   24db4:	movs	r3, #0
   24db6:	mov	r2, r5
   24db8:	str	r3, [sp, #68]	; 0x44
   24dba:	mov	r1, r7
   24dbc:	movs	r3, #1
   24dbe:	mov	r0, r6
   24dc0:	str	r3, [sp, #4]
   24dc2:	add	r3, sp, #68	; 0x44
   24dc4:	str	r3, [sp, #0]
   24dc6:	add	r3, sp, #72	; 0x48
   24dc8:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   24dcc:	mov	r4, r0
   24dce:	b.n	24cf2 <btrfs_inc_extent_ref@@Base+0x362>
   24dd0:	movs	r3, #176	; 0xb0
   24dd2:	strb.w	r3, [sp, #80]	; 0x50
   24dd6:	ldr	r3, [sp, #152]	; 0x98
   24dd8:	str.w	r3, [sp, #81]	; 0x51
   24ddc:	ldr	r3, [sp, #156]	; 0x9c
   24dde:	str	r3, [r4, #4]
   24de0:	b.n	24db4 <btrfs_inc_extent_ref@@Base+0x424>
   24de2:	mvn.w	r4, #11
   24de6:	b.n	24c56 <btrfs_inc_extent_ref@@Base+0x2c6>
   24de8:	mov	r0, r4
   24dea:	add	sp, #100	; 0x64
   24dec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24df0:	str	r2, [r6, #52]	; 0x34
   24df2:	movs	r4, r0
   24df4:	lsls	r0, r1, #10
   24df6:	movs	r0, r0
   24df8:	adcs.w	r0, r4, r1
   24dfc:	b.n	24650 <hash_extent_data_ref@@Base+0x9d8>
   24dfe:	movs	r1, r0
   24e00:	b.n	24d14 <btrfs_inc_extent_ref@@Base+0x384>
   24e02:	movs	r1, r0
   24e04:	ldrd	r0, r0, [sl, #4]
   24e08:	b.n	25360 <update_space_info@@Base+0xc>
   24e0a:	movs	r1, r0
   24e0c:	add	r7, sp, #592	; 0x250
   24e0e:	movs	r1, r0
   24e10:	ldmdb	r6!, {r0}
   24e14:	b.n	25224 <btrfs_write_dirty_block_groups@@Base+0x48>
   24e16:	movs	r1, r0
   24e18:	b.n	2495e <hash_extent_data_ref@@Base+0xce6>
   24e1a:	movs	r1, r0
   24e1c:	str	r6, [r7, #8]
   24e1e:	movs	r4, r0
   24e20:	b.n	24e14 <btrfs_inc_extent_ref@@Base+0x484>
   24e22:	movs	r1, r0
   24e24:	b.n	24fac <btrfs_lookup_extent_info@@Base+0x180>
   24e26:	movs	r1, r0
   24e28:	b.n	246c4 <hash_extent_data_ref@@Base+0xa4c>
   24e2a:	movs	r1, r0

00024e2c <btrfs_lookup_extent_info@@Base>:
   24e2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e30:	mov	r5, r1
   24e32:	vpush	{d8}
   24e36:	vmov	s16, r0
   24e3a:	sub	sp, #44	; 0x2c
   24e3c:	strd	r2, r3, [sp, #8]
   24e40:	ldr	r2, [pc, #384]	; (24fc4 <btrfs_lookup_extent_info@@Base+0x198>)
   24e42:	ldr	r3, [pc, #388]	; (24fc8 <btrfs_lookup_extent_info@@Base+0x19c>)
   24e44:	add	r2, pc
   24e46:	ldrd	fp, r7, [sp, #96]	; 0x60
   24e4a:	ldrd	sl, r8, [sp, #88]	; 0x58
   24e4e:	ldr	r3, [r2, r3]
   24e50:	ldr	r6, [sp, #104]	; 0x68
   24e52:	ldr	r3, [r3, #0]
   24e54:	str	r3, [sp, #36]	; 0x24
   24e56:	mov.w	r3, #0
   24e5a:	cmp.w	fp, #0
   24e5e:	beq.n	24e7c <btrfs_lookup_extent_info@@Base+0x50>
   24e60:	ldr.w	r3, [r1, #308]	; 0x134
   24e64:	movs	r1, #0
   24e66:	ldr.w	r0, [r3, #188]	; 0xbc
   24e6a:	mov	r3, r1
   24e6c:	and.w	r2, r0, #256	; 0x100
   24e70:	orrs	r3, r2
   24e72:	ittt	eq
   24e74:	ldreq.w	sl, [r5, #384]	; 0x180
   24e78:	moveq	r8, r1
   24e7a:	moveq	fp, r8
   24e7c:	bl	1c6f0 <btrfs_alloc_path@@Base>
   24e80:	mov	r4, r0
   24e82:	cmp	r0, #0
   24e84:	beq.w	24fb0 <btrfs_lookup_extent_info@@Base+0x184>
   24e88:	movs	r3, #1
   24e8a:	strb.w	r3, [r0, #64]	; 0x40
   24e8e:	ldrd	r2, r3, [sp, #8]
   24e92:	cmp.w	fp, #0
   24e96:	str.w	sl, [sp, #25]
   24e9a:	add.w	r9, sp, #25
   24e9e:	add.w	sl, sp, #16
   24ea2:	str.w	r8, [sp, #29]
   24ea6:	mov.w	r8, #0
   24eaa:	strd	r2, r3, [sp, #16]
   24eae:	ite	eq
   24eb0:	moveq	r3, #168	; 0xa8
   24eb2:	movne	r3, #169	; 0xa9
   24eb4:	strb.w	r3, [sp, #24]
   24eb8:	mov	r3, r4
   24eba:	vmov	r0, s16
   24ebe:	ldr	r1, [r5, #24]
   24ec0:	mov	r2, sl
   24ec2:	strd	r8, r8, [sp]
   24ec6:	bl	1eadc <btrfs_search_slot@@Base>
   24eca:	subs	r3, r0, #0
   24ecc:	blt.n	24f62 <btrfs_lookup_extent_info@@Base+0x136>
   24ece:	beq.n	24f34 <btrfs_lookup_extent_info@@Base+0x108>
   24ed0:	cmp.w	fp, #0
   24ed4:	beq.n	24fa6 <btrfs_lookup_extent_info@@Base+0x17a>
   24ed6:	ldr	r2, [r4, #32]
   24ed8:	cbnz	r2, 24efa <btrfs_lookup_extent_info@@Base+0xce>
   24eda:	mov	r0, r4
   24edc:	mov.w	fp, #0
   24ee0:	bl	1c6f8 <btrfs_release_path@@Base>
   24ee4:	mvn.w	r3, #87	; 0x57
   24ee8:	strb.w	r3, [sp, #24]
   24eec:	ldr.w	r3, [r5, #384]	; 0x180
   24ef0:	str.w	r8, [r9, #4]
   24ef4:	str.w	r3, [r9]
   24ef8:	b.n	24eb8 <btrfs_lookup_extent_info@@Base+0x8c>
   24efa:	subs	r2, #1
   24efc:	ldr	r0, [r4, #0]
   24efe:	mov	r1, sl
   24f00:	str	r2, [r4, #32]
   24f02:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   24f06:	ldrd	r2, r3, [sp, #16]
   24f0a:	ldrd	r0, r1, [sp, #8]
   24f0e:	cmp	r3, r1
   24f10:	it	eq
   24f12:	cmpeq	r2, r0
   24f14:	bne.n	24eda <btrfs_lookup_extent_info@@Base+0xae>
   24f16:	ldrb.w	r3, [sp, #24]
   24f1a:	cmp	r3, #168	; 0xa8
   24f1c:	bne.n	24eda <btrfs_lookup_extent_info@@Base+0xae>
   24f1e:	ldr.w	r1, [sp, #29]
   24f22:	movs	r3, #0
   24f24:	ldr.w	r0, [sp, #25]
   24f28:	ldr.w	r2, [r5, #384]	; 0x180
   24f2c:	cmp	r1, r3
   24f2e:	it	eq
   24f30:	cmpeq	r0, r2
   24f32:	bne.n	24eda <btrfs_lookup_extent_info@@Base+0xae>
   24f34:	ldr	r3, [r4, #0]
   24f36:	movs	r1, #25
   24f38:	ldr	r2, [r4, #32]
   24f3a:	adds	r3, #96	; 0x60
   24f3c:	mla	r2, r1, r2, r3
   24f40:	add.w	r1, r2, #101	; 0x65
   24f44:	ldr.w	r2, [r2, #122]	; 0x7a
   24f48:	cmp	r2, #23
   24f4a:	bls.n	24f80 <btrfs_lookup_extent_info@@Base+0x154>
   24f4c:	ldr.w	r2, [r1, #17]
   24f50:	adds	r2, #101	; 0x65
   24f52:	add	r3, r2
   24f54:	ldr	r1, [r3, #16]
   24f56:	ldr	r2, [r3, #20]
   24f58:	cbnz	r7, 24f9c <btrfs_lookup_extent_info@@Base+0x170>
   24f5a:	cbz	r6, 24fac <btrfs_lookup_extent_info@@Base+0x180>
   24f5c:	movs	r3, #0
   24f5e:	strd	r1, r2, [r6]
   24f62:	mov	r0, r4
   24f64:	str	r3, [sp, #8]
   24f66:	bl	1c71e <btrfs_free_path@@Base>
   24f6a:	ldr	r3, [sp, #8]
   24f6c:	ldr	r1, [pc, #92]	; (24fcc <btrfs_lookup_extent_info@@Base+0x1a0>)
   24f6e:	ldr	r2, [pc, #88]	; (24fc8 <btrfs_lookup_extent_info@@Base+0x19c>)
   24f70:	add	r1, pc
   24f72:	ldr	r2, [r1, r2]
   24f74:	ldr	r1, [r2, #0]
   24f76:	ldr	r2, [sp, #36]	; 0x24
   24f78:	eors	r1, r2
   24f7a:	beq.n	24fb6 <btrfs_lookup_extent_info@@Base+0x18a>
   24f7c:	blx	8c90 <__stack_chk_fail@plt>
   24f80:	ldr	r2, [pc, #76]	; (24fd0 <btrfs_lookup_extent_info@@Base+0x1a4>)
   24f82:	movs	r3, #1
   24f84:	ldr	r1, [pc, #76]	; (24fd4 <btrfs_lookup_extent_info@@Base+0x1a8>)
   24f86:	ldr	r0, [pc, #80]	; (24fd8 <btrfs_lookup_extent_info@@Base+0x1ac>)
   24f88:	add	r2, pc
   24f8a:	str	r3, [sp, #0]
   24f8c:	addw	r2, r2, #343	; 0x157
   24f90:	add	r1, pc
   24f92:	add	r0, pc
   24f94:	mov.w	r3, #1360	; 0x550
   24f98:	bl	23194 <btrfs_create_tree@@Base+0x578>
   24f9c:	ldr	r0, [r3, #0]
   24f9e:	ldr	r3, [r3, #4]
   24fa0:	strd	r0, r3, [r7]
   24fa4:	b.n	24f5a <btrfs_lookup_extent_info@@Base+0x12e>
   24fa6:	mvn.w	r3, #4
   24faa:	b.n	24f62 <btrfs_lookup_extent_info@@Base+0x136>
   24fac:	mov	r3, r6
   24fae:	b.n	24f62 <btrfs_lookup_extent_info@@Base+0x136>
   24fb0:	mvn.w	r3, #11
   24fb4:	b.n	24f6c <btrfs_lookup_extent_info@@Base+0x140>
   24fb6:	mov	r0, r3
   24fb8:	add	sp, #44	; 0x2c
   24fba:	vpop	{d8}
   24fbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fc2:	nop
   24fc4:	ldrsh	r4, [r2, r3]
   24fc6:	movs	r4, r0
   24fc8:	lsls	r0, r1, #10
   24fca:	movs	r0, r0
   24fcc:	ldrb	r0, [r5, r6]
   24fce:	movs	r4, r0
   24fd0:	b.n	24bbc <btrfs_inc_extent_ref@@Base+0x22c>
   24fd2:	movs	r1, r0
   24fd4:	udf	#194	; 0xc2
   24fd6:	movs	r1, r0
   24fd8:	b.n	2541c <update_space_info@@Base+0xc8>
   24fda:	movs	r1, r0

00024fdc <btrfs_set_block_flags@@Base>:
   24fdc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fe0:	sub	sp, #52	; 0x34
   24fe2:	ldr	r4, [r0, #0]
   24fe4:	mov	r5, r0
   24fe6:	strd	r2, r3, [sp, #8]
   24fea:	movs	r7, #0
   24fec:	ldr	r3, [sp, #96]	; 0x60
   24fee:	mov	r9, r7
   24ff0:	ldr	r2, [pc, #420]	; (25198 <btrfs_set_block_flags@@Base+0x1bc>)
   24ff2:	ldr	r6, [sp, #88]	; 0x58
   24ff4:	str	r3, [sp, #16]
   24ff6:	add	r2, pc
   24ff8:	ldr	r3, [sp, #100]	; 0x64
   24ffa:	ldr.w	fp, [pc, #416]	; 2519c <btrfs_set_block_flags@@Base+0x1c0>
   24ffe:	str	r3, [sp, #20]
   25000:	add	fp, pc
   25002:	ldr	r3, [pc, #412]	; (251a0 <btrfs_set_block_flags@@Base+0x1c4>)
   25004:	ldr	r3, [r2, r3]
   25006:	ldr	r3, [r3, #0]
   25008:	str	r3, [sp, #44]	; 0x2c
   2500a:	mov.w	r3, #0
   2500e:	ldr.w	r3, [r4, #308]	; 0x134
   25012:	ldr.w	r3, [r3, #188]	; 0xbc
   25016:	and.w	r8, r3, #256	; 0x100
   2501a:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2501e:	mov	sl, r0
   25020:	cmp	r0, #0
   25022:	beq.w	25188 <btrfs_set_block_flags@@Base+0x1ac>
   25026:	ldrd	r1, r2, [sp, #8]
   2502a:	movs	r3, #1
   2502c:	strb.w	r3, [r0, #64]	; 0x40
   25030:	strd	r1, r2, [sp, #24]
   25034:	orrs.w	r2, r8, r9
   25038:	add.w	r2, sp, #33	; 0x21
   2503c:	beq.n	25096 <btrfs_set_block_flags@@Base+0xba>
   2503e:	mov	r8, r3
   25040:	asrs	r1, r6, #31
   25042:	str.w	r6, [sp, #33]	; 0x21
   25046:	str	r1, [r2, #4]
   25048:	movs	r2, #169	; 0xa9
   2504a:	strb.w	r2, [sp, #32]
   2504e:	add	r7, sp, #24
   25050:	movs	r6, #0
   25052:	strd	r6, r6, [sp]
   25056:	mov	r3, sl
   25058:	ldr	r1, [r4, #24]
   2505a:	mov	r2, r7
   2505c:	mov	r0, r5
   2505e:	bl	1eadc <btrfs_search_slot@@Base>
   25062:	subs.w	r9, r0, #0
   25066:	blt.n	25112 <btrfs_set_block_flags@@Base+0x136>
   25068:	beq.n	250e8 <btrfs_set_block_flags@@Base+0x10c>
   2506a:	cmp.w	r8, #0
   2506e:	beq.n	2512c <btrfs_set_block_flags@@Base+0x150>
   25070:	ldr.w	r2, [sl, #32]
   25074:	cbnz	r2, 250aa <btrfs_set_block_flags@@Base+0xce>
   25076:	mov	r0, sl
   25078:	mov.w	r8, #0
   2507c:	bl	1c6f8 <btrfs_release_path@@Base>
   25080:	ldr.w	r3, [r4, #384]	; 0x180
   25084:	str.w	r6, [sp, #37]	; 0x25
   25088:	str.w	r3, [sp, #33]	; 0x21
   2508c:	mvn.w	r3, #87	; 0x57
   25090:	strb.w	r3, [sp, #32]
   25094:	b.n	25052 <btrfs_set_block_flags@@Base+0x76>
   25096:	ldr.w	r3, [r4, #384]	; 0x180
   2509a:	mov	r8, r7
   2509c:	str	r7, [r2, #4]
   2509e:	str.w	r3, [sp, #33]	; 0x21
   250a2:	movs	r3, #168	; 0xa8
   250a4:	strb.w	r3, [sp, #32]
   250a8:	b.n	2504e <btrfs_set_block_flags@@Base+0x72>
   250aa:	subs	r2, #1
   250ac:	ldr.w	r0, [sl]
   250b0:	mov	r1, r7
   250b2:	str.w	r2, [sl, #32]
   250b6:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   250ba:	ldrd	r2, r3, [sp, #24]
   250be:	ldrd	r0, r1, [sp, #8]
   250c2:	cmp	r3, r1
   250c4:	it	eq
   250c6:	cmpeq	r2, r0
   250c8:	bne.n	25076 <btrfs_set_block_flags@@Base+0x9a>
   250ca:	ldr.w	r9, [sp, #37]	; 0x25
   250ce:	movs	r3, #0
   250d0:	ldr.w	r8, [sp, #33]	; 0x21
   250d4:	ldr.w	r2, [r4, #384]	; 0x180
   250d8:	cmp	r9, r3
   250da:	it	eq
   250dc:	cmpeq	r8, r2
   250de:	bne.n	25076 <btrfs_set_block_flags@@Base+0x9a>
   250e0:	ldrb.w	r3, [sp, #32]
   250e4:	cmp	r3, #168	; 0xa8
   250e6:	bne.n	25076 <btrfs_set_block_flags@@Base+0x9a>
   250e8:	ldr.w	r3, [sl]
   250ec:	movs	r1, #25
   250ee:	ldr.w	r2, [sl, #32]
   250f2:	adds	r3, #96	; 0x60
   250f4:	mla	r2, r1, r2, r3
   250f8:	add.w	r0, r2, #101	; 0x65
   250fc:	ldr.w	r1, [r2, #122]	; 0x7a
   25100:	cmp	r1, #23
   25102:	bhi.n	2516a <btrfs_set_block_flags@@Base+0x18e>
   25104:	ldr	r0, [pc, #156]	; (251a4 <btrfs_set_block_flags@@Base+0x1c8>)
   25106:	movs	r2, #24
   25108:	mvn.w	r9, #116	; 0x74
   2510c:	add	r0, pc
   2510e:	bl	1bd1c <__btrfs_error@@Base>
   25112:	mov	r0, sl
   25114:	bl	1c71e <btrfs_free_path@@Base>
   25118:	ldr	r2, [pc, #140]	; (251a8 <btrfs_set_block_flags@@Base+0x1cc>)
   2511a:	ldr	r3, [pc, #132]	; (251a0 <btrfs_set_block_flags@@Base+0x1c4>)
   2511c:	add	r2, pc
   2511e:	ldr	r3, [r2, r3]
   25120:	ldr	r2, [r3, #0]
   25122:	ldr	r3, [sp, #44]	; 0x2c
   25124:	eors	r2, r3
   25126:	beq.n	2518e <btrfs_set_block_flags@@Base+0x1b2>
   25128:	blx	8c90 <__stack_chk_fail@plt>
   2512c:	ldr.w	r0, [sl]
   25130:	bl	298c0 <btrfs_print_leaf@@Base>
   25134:	ldr	r3, [pc, #116]	; (251ac <btrfs_set_block_flags@@Base+0x1d0>)
   25136:	ldrd	r1, r2, [sp, #8]
   2513a:	ldr.w	r3, [fp, r3]
   2513e:	strd	r1, r2, [sp]
   25142:	movs	r1, #1
   25144:	ldr	r2, [pc, #104]	; (251b0 <btrfs_set_block_flags@@Base+0x1d4>)
   25146:	ldr	r0, [r3, #0]
   25148:	add	r2, pc
   2514a:	blx	9040 <__fprintf_chk@plt+0x4>
   2514e:	ldr	r2, [pc, #100]	; (251b4 <btrfs_set_block_flags@@Base+0x1d8>)
   25150:	ldr	r1, [pc, #100]	; (251b8 <btrfs_set_block_flags@@Base+0x1dc>)
   25152:	movs	r3, #1
   25154:	ldr	r0, [pc, #100]	; (251bc <btrfs_set_block_flags@@Base+0x1e0>)
   25156:	add	r2, pc
   25158:	str	r3, [sp, #0]
   2515a:	add.w	r2, r2, #368	; 0x170
   2515e:	add	r1, pc
   25160:	add	r0, pc
   25162:	movw	r3, #1426	; 0x592
   25166:	bl	23194 <btrfs_create_tree@@Base+0x578>
   2516a:	ldr.w	r2, [r0, #17]
   2516e:	mov.w	r9, #0
   25172:	ldr	r0, [sp, #16]
   25174:	adds	r2, #101	; 0x65
   25176:	add	r3, r2
   25178:	ldr	r1, [r3, #16]
   2517a:	ldr	r2, [r3, #20]
   2517c:	orrs	r1, r0
   2517e:	ldr	r0, [sp, #20]
   25180:	str	r1, [r3, #16]
   25182:	orrs	r2, r0
   25184:	str	r2, [r3, #20]
   25186:	b.n	25112 <btrfs_set_block_flags@@Base+0x136>
   25188:	mvn.w	r9, #11
   2518c:	b.n	25118 <btrfs_set_block_flags@@Base+0x13c>
   2518e:	mov	r0, r9
   25190:	add	sp, #52	; 0x34
   25192:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25196:	nop
   25198:	ldrb	r2, [r4, r4]
   2519a:	movs	r4, r0
   2519c:	ldrb	r0, [r3, r4]
   2519e:	movs	r4, r0
   251a0:	lsls	r0, r1, #10
   251a2:	movs	r0, r0
   251a4:	svc	121	; 0x79
   251a6:	movs	r1, r0
   251a8:	ldrh	r4, [r7, r7]
   251aa:	movs	r4, r0
   251ac:	lsls	r4, r3, #10
   251ae:	movs	r0, r0
   251b0:	b.n	2530a <btrfs_write_dirty_block_groups@@Base+0x12e>
   251b2:	movs	r1, r0
   251b4:	b.n	24a04 <btrfs_inc_extent_ref@@Base+0x74>
   251b6:	movs	r1, r0
   251b8:	bgt.n	251a4 <btrfs_set_block_flags@@Base+0x1c8>
   251ba:	movs	r1, r0
   251bc:	b.n	25264 <btrfs_write_dirty_block_groups@@Base+0x88>
   251be:	movs	r1, r0

000251c0 <btrfs_inc_ref@@Base>:
   251c0:	push	{r0, r1, r4, lr}
   251c2:	movs	r4, #1
   251c4:	str	r4, [sp, #0]
   251c6:	bl	22f8a <btrfs_create_tree@@Base+0x36e>
   251ca:	add	sp, #8
   251cc:	pop	{r4, pc}

000251ce <btrfs_dec_ref@@Base>:
   251ce:	push	{r0, r1, r4, lr}
   251d0:	movs	r4, #0
   251d2:	str	r4, [sp, #0]
   251d4:	bl	22f8a <btrfs_create_tree@@Base+0x36e>
   251d8:	add	sp, #8
   251da:	pop	{r4, pc}

000251dc <btrfs_write_dirty_block_groups@@Base>:
   251dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251e0:	mov	r8, r0
   251e2:	vpush	{d8}
   251e6:	ldr	r2, [pc, #340]	; (2533c <btrfs_write_dirty_block_groups@@Base+0x160>)
   251e8:	ldr	r3, [pc, #340]	; (25340 <btrfs_write_dirty_block_groups@@Base+0x164>)
   251ea:	add	r2, pc
   251ec:	sub	sp, #92	; 0x5c
   251ee:	ldr	r7, [r0, #0]
   251f0:	ldr	r3, [r2, r3]
   251f2:	ldr	r3, [r3, #0]
   251f4:	str	r3, [sp, #84]	; 0x54
   251f6:	mov.w	r3, #0
   251fa:	bl	1c6f0 <btrfs_alloc_path@@Base>
   251fe:	mov	r4, r0
   25200:	cmp	r0, #0
   25202:	beq.w	2532a <btrfs_write_dirty_block_groups@@Base+0x14e>
   25206:	movs	r3, #0
   25208:	movs	r2, #0
   2520a:	strd	r2, r3, [sp, #16]
   2520e:	adds	r7, #128	; 0x80
   25210:	ldr	r3, [pc, #304]	; (25344 <btrfs_write_dirty_block_groups@@Base+0x168>)
   25212:	ldr.w	fp, [pc, #308]	; 25348 <btrfs_write_dirty_block_groups@@Base+0x16c>
   25216:	add	r3, pc
   25218:	str	r3, [sp, #24]
   2521a:	add.w	r3, r3, #390	; 0x186
   2521e:	add	fp, pc
   25220:	vmov	s16, r3
   25224:	add	r3, sp, #40	; 0x28
   25226:	mov.w	r9, #1
   2522a:	str	r3, [sp, #4]
   2522c:	mov	r0, r7
   2522e:	add	r3, sp, #32
   25230:	str.w	r9, [sp, #8]
   25234:	str	r3, [sp, #0]
   25236:	ldrd	r2, r3, [sp, #16]
   2523a:	bl	1b3b8 <find_first_extent_bit@@Base>
   2523e:	mov	r5, r0
   25240:	cbz	r0, 25254 <btrfs_write_dirty_block_groups@@Base+0x78>
   25242:	ldrd	r2, r3, [sp, #16]
   25246:	orrs	r3, r2
   25248:	beq.n	2530e <btrfs_write_dirty_block_groups@@Base+0x132>
   2524a:	movs	r2, #0
   2524c:	movs	r3, #0
   2524e:	strd	r2, r3, [sp, #16]
   25252:	b.n	25224 <btrfs_write_dirty_block_groups@@Base+0x48>
   25254:	ldr	r3, [sp, #40]	; 0x28
   25256:	mov	r0, r7
   25258:	ldr.w	sl, [pc, #240]	; 2534c <btrfs_write_dirty_block_groups@@Base+0x170>
   2525c:	adds	r3, #1
   2525e:	str	r3, [sp, #16]
   25260:	ldr	r3, [sp, #44]	; 0x2c
   25262:	add	sl, pc
   25264:	adc.w	r3, r3, #0
   25268:	str	r3, [sp, #20]
   2526a:	add	r3, sp, #48	; 0x30
   2526c:	str	r3, [sp, #0]
   2526e:	ldrd	r2, r3, [sp, #32]
   25272:	bl	1b494 <get_state_private@@Base>
   25276:	mov	r1, fp
   25278:	vmov	r2, s16
   2527c:	mov.w	r3, #1592	; 0x638
   25280:	str	r0, [sp, #0]
   25282:	mov	r0, sl
   25284:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25288:	ldrd	r2, r3, [sp, #40]	; 0x28
   2528c:	mov	r0, r7
   2528e:	str.w	r9, [sp, #8]
   25292:	strd	r2, r3, [sp]
   25296:	ldrd	r2, r3, [sp, #32]
   2529a:	bl	1afe6 <clear_extent_bits@@Base>
   2529e:	ldr.w	r1, [r8]
   252a2:	ldr	r6, [sp, #48]	; 0x30
   252a4:	mov	r3, r4
   252a6:	strd	r5, r9, [sp]
   252aa:	mov	r0, r8
   252ac:	ldr	r1, [r1, #24]
   252ae:	add.w	r2, r6, #40	; 0x28
   252b2:	bl	1eadc <btrfs_search_slot@@Base>
   252b6:	cmp	r0, #0
   252b8:	blt.n	25224 <btrfs_write_dirty_block_groups@@Base+0x48>
   252ba:	ldr	r2, [sp, #24]
   252bc:	mov	r1, fp
   252be:	str	r0, [sp, #0]
   252c0:	movw	r3, #1547	; 0x60b
   252c4:	mov	r0, sl
   252c6:	addw	r2, r2, #421	; 0x1a5
   252ca:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   252ce:	ldr	r0, [r4, #0]
   252d0:	ldr	r3, [r4, #32]
   252d2:	movs	r2, #25
   252d4:	add	r1, sp, #60	; 0x3c
   252d6:	str	r0, [sp, #28]
   252d8:	mla	r3, r2, r3, r0
   252dc:	ldr.w	r2, [r3, #214]	; 0xd6
   252e0:	ldr	r3, [r6, #72]	; 0x48
   252e2:	adds	r2, #101	; 0x65
   252e4:	str	r3, [sp, #60]	; 0x3c
   252e6:	ldr	r3, [r6, #76]	; 0x4c
   252e8:	str	r3, [sp, #64]	; 0x40
   252ea:	ldr	r3, [r6, #96]	; 0x60
   252ec:	str	r3, [sp, #76]	; 0x4c
   252ee:	ldr	r3, [r6, #100]	; 0x64
   252f0:	str	r3, [sp, #80]	; 0x50
   252f2:	mov.w	r3, #256	; 0x100
   252f6:	strd	r3, r5, [sp, #68]	; 0x44
   252fa:	movs	r3, #24
   252fc:	bl	1bbd0 <write_extent_buffer@@Base>
   25300:	ldr	r0, [sp, #28]
   25302:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   25306:	mov	r0, r4
   25308:	bl	1c6f8 <btrfs_release_path@@Base>
   2530c:	b.n	25224 <btrfs_write_dirty_block_groups@@Base+0x48>
   2530e:	mov	r0, r4
   25310:	bl	1c71e <btrfs_free_path@@Base>
   25314:	movs	r0, #0
   25316:	ldr	r2, [pc, #56]	; (25350 <btrfs_write_dirty_block_groups@@Base+0x174>)
   25318:	ldr	r3, [pc, #36]	; (25340 <btrfs_write_dirty_block_groups@@Base+0x164>)
   2531a:	add	r2, pc
   2531c:	ldr	r3, [r2, r3]
   2531e:	ldr	r2, [r3, #0]
   25320:	ldr	r3, [sp, #84]	; 0x54
   25322:	eors	r2, r3
   25324:	beq.n	25330 <btrfs_write_dirty_block_groups@@Base+0x154>
   25326:	blx	8c90 <__stack_chk_fail@plt>
   2532a:	mvn.w	r0, #11
   2532e:	b.n	25316 <btrfs_write_dirty_block_groups@@Base+0x13a>
   25330:	add	sp, #92	; 0x5c
   25332:	vpop	{d8}
   25336:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2533a:	nop
   2533c:	ldrh	r6, [r5, r4]
   2533e:	movs	r4, r0
   25340:	lsls	r0, r1, #10
   25342:	movs	r0, r0
   25344:	b.n	25a14 <btrfs_make_block_groups@@Base+0x260>
   25346:	movs	r1, r0
   25348:	bgt.n	253b4 <update_space_info@@Base+0x60>
   2534a:	movs	r1, r0
   2534c:	add	r0, sp, #896	; 0x380
   2534e:	movs	r1, r0
   25350:	ldr	r6, [r7, r7]
   25352:	movs	r4, r0

00025354 <update_space_info@@Base>:
   25354:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25358:	sub	sp, #36	; 0x24
   2535a:	mov	r5, r0
   2535c:	mov	r4, r2
   2535e:	ldr	r1, [sp, #80]	; 0x50
   25360:	ldrd	r7, fp, [sp, #72]	; 0x48
   25364:	ldr.w	sl, [sp, #84]	; 0x54
   25368:	str	r1, [sp, #24]
   2536a:	ldr	r1, [pc, #176]	; (2541c <update_space_info@@Base+0xc8>)
   2536c:	add	r1, pc
   2536e:	str	r1, [sp, #28]
   25370:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   25374:	mov	r6, r0
   25376:	cbz	r0, 253d2 <update_space_info@@Base+0x7e>
   25378:	ldrd	r2, r0, [r0, #8]
   2537c:	ldr	r1, [sp, #28]
   2537e:	adds	r3, r7, r2
   25380:	str	r3, [sp, #16]
   25382:	adc.w	r3, fp, r0
   25386:	str	r3, [sp, #20]
   25388:	ldrd	r3, r4, [sp, #16]
   2538c:	ldrd	r2, r0, [r6, #16]
   25390:	strd	r3, r4, [r6, #8]
   25394:	ldr	r3, [sp, #24]
   25396:	adds.w	r8, r3, r2
   2539a:	ldrd	r3, r4, [sp, #16]
   2539e:	adc.w	r9, sl, r0
   253a2:	strd	r8, r9, [r6, #16]
   253a6:	cmp	r4, r9
   253a8:	it	eq
   253aa:	cmpeq	r3, r8
   253ac:	bcs.n	253c6 <update_space_info@@Base+0x72>
   253ae:	ldr	r2, [pc, #112]	; (25420 <update_space_info@@Base+0xcc>)
   253b0:	ldr	r0, [r1, r2]
   253b2:	movs	r1, #1
   253b4:	ldr	r2, [pc, #108]	; (25424 <update_space_info@@Base+0xd0>)
   253b6:	strd	r8, r9, [sp, #8]
   253ba:	strd	r3, r4, [sp]
   253be:	add	r2, pc
   253c0:	ldr	r0, [r0, #0]
   253c2:	blx	9040 <__fprintf_chk@plt+0x4>
   253c6:	ldr	r3, [sp, #88]	; 0x58
   253c8:	str	r6, [r3, #0]
   253ca:	movs	r0, #0
   253cc:	add	sp, #36	; 0x24
   253ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   253d2:	movs	r0, #56	; 0x38
   253d4:	blx	8e40 <malloc@plt+0x4>
   253d8:	cbz	r0, 25416 <update_space_info@@Base+0xc2>
   253da:	ldr.w	r1, [r5, #356]	; 0x164
   253de:	add.w	r2, r0, #44	; 0x2c
   253e2:	ldr	r3, [sp, #24]
   253e4:	and.w	r4, r4, #7
   253e8:	str	r2, [r1, #4]
   253ea:	strd	r3, sl, [r0, #16]
   253ee:	ldr	r3, [sp, #88]	; 0x58
   253f0:	str.w	r2, [r5, #356]	; 0x164
   253f4:	str	r1, [r0, #44]	; 0x2c
   253f6:	add.w	r1, r5, #356	; 0x164
   253fa:	strd	r4, r6, [r0]
   253fe:	movs	r5, #0
   25400:	movs	r4, #0
   25402:	str	r1, [r0, #48]	; 0x30
   25404:	strd	r7, fp, [r0, #8]
   25408:	strd	r4, r5, [r0, #24]
   2540c:	strd	r4, r5, [r0, #32]
   25410:	str	r6, [r0, #40]	; 0x28
   25412:	str	r0, [r3, #0]
   25414:	b.n	253ca <update_space_info@@Base+0x76>
   25416:	mvn.w	r0, #11
   2541a:	b.n	253cc <update_space_info@@Base+0x78>
   2541c:	ldr	r4, [r5, r6]
   2541e:	movs	r4, r0
   25420:	lsls	r4, r3, #10
   25422:	movs	r0, r0
   25424:	udf	#86	; 0x56
   25426:	movs	r1, r0

00025428 <btrfs_finish_extent_commit@@Base>:
   25428:	ldr	r2, [pc, #156]	; (254c8 <btrfs_finish_extent_commit@@Base+0xa0>)
   2542a:	ldr	r3, [pc, #160]	; (254cc <btrfs_finish_extent_commit@@Base+0xa4>)
   2542c:	add	r2, pc
   2542e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   25432:	sub	sp, #44	; 0x2c
   25434:	ldr	r4, [r0, #0]
   25436:	add	r7, sp, #24
   25438:	ldr	r3, [r2, r3]
   2543a:	add.w	r8, sp, #16
   2543e:	add.w	r5, r4, #96	; 0x60
   25442:	adds	r4, #160	; 0xa0
   25444:	ldr	r3, [r3, #0]
   25446:	str	r3, [sp, #36]	; 0x24
   25448:	mov.w	r3, #0
   2544c:	mov	r9, r0
   2544e:	movs	r6, #1
   25450:	movs	r2, #0
   25452:	movs	r3, #0
   25454:	mov	r0, r4
   25456:	strd	r7, r6, [sp, #4]
   2545a:	str.w	r8, [sp]
   2545e:	bl	1b3b8 <find_first_extent_bit@@Base>
   25462:	cbnz	r0, 254ac <btrfs_finish_extent_commit@@Base+0x84>
   25464:	ldr	r1, [sp, #24]
   25466:	ldrd	r2, r3, [sp, #16]
   2546a:	str	r0, [sp, #8]
   2546c:	adds	r1, #1
   2546e:	ldr	r0, [sp, #28]
   25470:	adc.w	r0, r0, #0
   25474:	subs	r1, r1, r2
   25476:	sbc.w	r0, r0, r3
   2547a:	strd	r1, r0, [sp]
   2547e:	ldr.w	r0, [r9]
   25482:	bl	237ec <btrfs_lookup_block_group@@Base+0x98>
   25486:	ldrd	r2, r3, [sp, #24]
   2548a:	mov	r0, r4
   2548c:	strd	r2, r3, [sp]
   25490:	ldrd	r2, r3, [sp, #16]
   25494:	bl	1b3a0 <clear_extent_dirty@@Base>
   25498:	ldrd	r2, r3, [sp, #24]
   2549c:	mov	r0, r5
   2549e:	strd	r2, r3, [sp]
   254a2:	ldrd	r2, r3, [sp, #16]
   254a6:	bl	1b388 <set_extent_dirty@@Base>
   254aa:	b.n	25450 <btrfs_finish_extent_commit@@Base+0x28>
   254ac:	ldr	r2, [pc, #32]	; (254d0 <btrfs_finish_extent_commit@@Base+0xa8>)
   254ae:	ldr	r3, [pc, #28]	; (254cc <btrfs_finish_extent_commit@@Base+0xa4>)
   254b0:	add	r2, pc
   254b2:	ldr	r3, [r2, r3]
   254b4:	ldr	r2, [r3, #0]
   254b6:	ldr	r3, [sp, #36]	; 0x24
   254b8:	eors	r2, r3
   254ba:	beq.n	254c0 <btrfs_finish_extent_commit@@Base+0x98>
   254bc:	blx	8c90 <__stack_chk_fail@plt>
   254c0:	add	sp, #44	; 0x2c
   254c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   254c6:	nop
   254c8:	ldr	r4, [r5, r3]
   254ca:	movs	r4, r0
   254cc:	lsls	r0, r1, #10
   254ce:	movs	r0, r0
   254d0:	ldr	r0, [r5, r1]
   254d2:	movs	r4, r0

000254d4 <btrfs_pin_extent@@Base>:
   254d4:	push	{r4, r5, lr}
   254d6:	sub	sp, #20
   254d8:	movs	r1, #1
   254da:	ldrd	r4, r5, [sp, #32]
   254de:	str	r1, [sp, #8]
   254e0:	strd	r4, r5, [sp]
   254e4:	bl	237ec <btrfs_lookup_block_group@@Base+0x98>
   254e8:	add	sp, #20
   254ea:	pop	{r4, r5, pc}

000254ec <btrfs_free_extent@@Base>:
   254ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   254f0:	sub	sp, #84	; 0x54
   254f2:	mov	r6, r2
   254f4:	mov	r5, r3
   254f6:	ldrd	r2, r3, [sp, #128]	; 0x80
   254fa:	mov	r4, r0
   254fc:	mov	r0, r1
   254fe:	ldrd	r8, r9, [sp, #120]	; 0x78
   25502:	mov.w	ip, #0
   25506:	ldr	r1, [pc, #296]	; (25630 <btrfs_free_extent@@Base+0x144>)
   25508:	strd	r2, r3, [sp, #64]	; 0x40
   2550c:	cmp	r9, ip
   2550e:	ldrd	r2, r3, [sp, #136]	; 0x88
   25512:	add	r1, pc
   25514:	ldrd	r7, sl, [sp, #152]	; 0x98
   25518:	mvn.w	fp, #5
   2551c:	strd	r2, r3, [sp, #56]	; 0x38
   25520:	ldrd	r2, r3, [sp, #144]	; 0x90
   25524:	strd	r2, r3, [sp, #48]	; 0x30
   25528:	ldr.w	r3, [r0, #464]	; 0x1d0
   2552c:	ldr	r2, [pc, #260]	; (25634 <btrfs_free_extent@@Base+0x148>)
   2552e:	ldr	r0, [pc, #264]	; (25638 <btrfs_free_extent@@Base+0x14c>)
   25530:	ldr.w	r3, [r3, #388]	; 0x184
   25534:	add	r2, pc
   25536:	addw	r2, r2, #443	; 0x1bb
   2553a:	add	r0, pc
   2553c:	it	eq
   2553e:	cmpeq	r8, r3
   25540:	strd	r1, r2, [sp, #72]	; 0x48
   25544:	ite	cc
   25546:	movcc	r3, #1
   25548:	movcs	r3, #0
   2554a:	str	r3, [sp, #0]
   2554c:	movw	r3, #2154	; 0x86a
   25550:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   25554:	ldrd	r2, r3, [sp, #56]	; 0x38
   25558:	mov.w	ip, #4294967295	; 0xffffffff
   2555c:	cmp	r3, ip
   2555e:	it	eq
   25560:	cmpeq	r2, fp
   25562:	ldrd	r1, r2, [sp, #72]	; 0x48
   25566:	bne.n	255ae <btrfs_free_extent@@Base+0xc2>
   25568:	ldr	r0, [pc, #208]	; (2563c <btrfs_free_extent@@Base+0x150>)
   2556a:	str	r1, [sp, #64]	; 0x40
   2556c:	add	r0, pc
   2556e:	str	r2, [sp, #56]	; 0x38
   25570:	blx	8e24 <puts@plt+0x4>
   25574:	ldrd	r2, r3, [sp, #48]	; 0x30
   25578:	ldr	r0, [pc, #196]	; (25640 <btrfs_free_extent@@Base+0x154>)
   2557a:	cmp	r3, #0
   2557c:	ldr	r1, [sp, #64]	; 0x40
   2557e:	it	eq
   25580:	cmpeq.w	r2, #256	; 0x100
   25584:	add	r0, pc
   25586:	ldr	r2, [sp, #56]	; 0x38
   25588:	ite	cs
   2558a:	movcs	r3, #1
   2558c:	movcc	r3, #0
   2558e:	str	r3, [sp, #0]
   25590:	movw	r3, #2161	; 0x871
   25594:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   25598:	ldr	r0, [r4, #0]
   2559a:	mov	r2, r6
   2559c:	mov	r3, r5
   2559e:	strd	r8, r9, [sp]
   255a2:	bl	254d4 <btrfs_pin_extent@@Base>
   255a6:	movs	r0, #0
   255a8:	add	sp, #84	; 0x54
   255aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   255ae:	ldrd	fp, ip, [sp, #48]	; 0x30
   255b2:	cmp.w	ip, #0
   255b6:	it	eq
   255b8:	cmpeq.w	fp, #256	; 0x100
   255bc:	bcs.n	255fe <btrfs_free_extent@@Base+0x112>
   255be:	ldr	r0, [pc, #132]	; (25644 <btrfs_free_extent@@Base+0x158>)
   255c0:	movw	r3, #2165	; 0x875
   255c4:	str	r7, [sp, #0]
   255c6:	add	r0, pc
   255c8:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   255cc:	movs	r3, #0
   255ce:	strd	r3, r3, [sp, #36]	; 0x24
   255d2:	mov	r1, r4
   255d4:	str	r3, [sp, #32]
   255d6:	movs	r3, #2
   255d8:	str	r3, [sp, #28]
   255da:	ldr	r3, [sp, #48]	; 0x30
   255dc:	ldr	r0, [r4, #0]
   255de:	strd	r8, r9, [sp]
   255e2:	str	r3, [sp, #24]
   255e4:	ldrd	r2, r3, [sp, #56]	; 0x38
   255e8:	strd	r2, r3, [sp, #16]
   255ec:	ldrd	r2, r3, [sp, #64]	; 0x40
   255f0:	strd	r2, r3, [sp, #8]
   255f4:	mov	r2, r6
   255f6:	mov	r3, r5
   255f8:	bl	28794 <btrfs_add_delayed_tree_ref@@Base>
   255fc:	b.n	255a8 <btrfs_free_extent@@Base+0xbc>
   255fe:	ldrd	r2, r3, [sp, #48]	; 0x30
   25602:	mov	r0, r4
   25604:	strd	r7, sl, [sp, #152]	; 0x98
   25608:	strd	r8, r9, [sp, #120]	; 0x78
   2560c:	strd	r2, r3, [sp, #144]	; 0x90
   25610:	ldrd	r2, r3, [sp, #56]	; 0x38
   25614:	strd	r2, r3, [sp, #136]	; 0x88
   25618:	ldrd	r2, r3, [sp, #64]	; 0x40
   2561c:	strd	r2, r3, [sp, #128]	; 0x80
   25620:	mov	r2, r6
   25622:	mov	r3, r5
   25624:	add	sp, #84	; 0x54
   25626:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2562a:	b.w	2406c <hash_extent_data_ref@@Base+0x3f4>
   2562e:	nop
   25630:	bls.n	256b4 <btrfs_free_block_groups@@Base+0x16>
   25632:	movs	r1, r0
   25634:	b.n	256c8 <btrfs_free_block_groups@@Base+0x2a>
   25636:	movs	r1, r0
   25638:	ble.n	25658 <btrfs_unpin_extent@@Base+0x10>
   2563a:	movs	r1, r0
   2563c:	ble.n	25644 <btrfs_free_extent@@Base+0x158>
   2563e:	movs	r1, r0
   25640:	ble.n	25650 <btrfs_unpin_extent@@Base+0x8>
   25642:	movs	r1, r0
   25644:	strh.w	r0, [ip, r1]

00025648 <btrfs_unpin_extent@@Base>:
   25648:	push	{r4, r5, lr}
   2564a:	sub	sp, #20
   2564c:	movs	r1, #0
   2564e:	ldrd	r4, r5, [sp, #32]
   25652:	str	r1, [sp, #8]
   25654:	strd	r4, r5, [sp]
   25658:	bl	237ec <btrfs_lookup_block_group@@Base+0x98>
   2565c:	add	sp, #20
   2565e:	pop	{r4, r5, pc}

00025660 <btrfs_free_tree_block@@Base>:
   25660:	push	{r4, r5, lr}
   25662:	sub	sp, #44	; 0x2c
   25664:	movs	r4, #0
   25666:	movs	r5, #0
   25668:	strd	r4, r5, [sp, #32]
   2566c:	movs	r5, #0
   2566e:	ldrb.w	r4, [r2, #196]	; 0xc4
   25672:	ldr.w	r3, [r1, #451]	; 0x1c3
   25676:	strd	r4, r5, [sp, #24]
   2567a:	ldr.w	r4, [r1, #447]	; 0x1bf
   2567e:	strd	r4, r3, [sp, #16]
   25682:	ldrd	r4, r5, [sp, #56]	; 0x38
   25686:	strd	r4, r5, [sp, #8]
   2568a:	ldr	r3, [r2, #76]	; 0x4c
   2568c:	str	r3, [sp, #0]
   2568e:	movs	r3, #0
   25690:	str	r3, [sp, #4]
   25692:	ldrd	r2, r3, [r2, #40]	; 0x28
   25696:	bl	254ec <btrfs_free_extent@@Base>
   2569a:	add	sp, #44	; 0x2c
   2569c:	pop	{r4, r5, pc}

0002569e <btrfs_free_block_groups@@Base>:
   2569e:	ldr	r2, [pc, #260]	; (257a4 <btrfs_free_block_groups@@Base+0x106>)
   256a0:	ldr	r3, [pc, #260]	; (257a8 <btrfs_free_block_groups@@Base+0x10a>)
   256a2:	add	r2, pc
   256a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   256a8:	sub	sp, #52	; 0x34
   256aa:	ldr	r3, [r2, r3]
   256ac:	add.w	r6, r0, #128	; 0x80
   256b0:	add	r7, sp, #24
   256b2:	mov	r4, r0
   256b4:	ldr	r3, [r3, #0]
   256b6:	str	r3, [sp, #44]	; 0x2c
   256b8:	mov.w	r3, #0
   256bc:	mov.w	r9, #4294967295	; 0xffffffff
   256c0:	add.w	r8, sp, #16
   256c4:	movs	r2, #0
   256c6:	movs	r3, #0
   256c8:	mov	r0, r6
   256ca:	strd	r7, r9, [sp, #4]
   256ce:	str.w	r8, [sp]
   256d2:	bl	1b3b8 <find_first_extent_bit@@Base>
   256d6:	cbz	r0, 25716 <btrfs_free_block_groups@@Base+0x78>
   256d8:	add.w	r5, r4, #96	; 0x60
   256dc:	movs	r6, #1
   256de:	movs	r2, #0
   256e0:	movs	r3, #0
   256e2:	mov	r0, r5
   256e4:	strd	r7, r6, [sp, #4]
   256e8:	str.w	r8, [sp]
   256ec:	bl	1b3b8 <find_first_extent_bit@@Base>
   256f0:	cbz	r0, 25756 <btrfs_free_block_groups@@Base+0xb8>
   256f2:	ldr	r6, [pc, #184]	; (257ac <btrfs_free_block_groups@@Base+0x10e>)
   256f4:	add.w	r5, r4, #356	; 0x164
   256f8:	add	r6, pc
   256fa:	ldr.w	r3, [r4, #356]	; 0x164
   256fe:	cmp	r3, r5
   25700:	bne.n	2576a <btrfs_free_block_groups@@Base+0xcc>
   25702:	ldr	r2, [pc, #172]	; (257b0 <btrfs_free_block_groups@@Base+0x112>)
   25704:	ldr	r3, [pc, #160]	; (257a8 <btrfs_free_block_groups@@Base+0x10a>)
   25706:	add	r2, pc
   25708:	ldr	r3, [r2, r3]
   2570a:	ldr	r2, [r3, #0]
   2570c:	ldr	r3, [sp, #44]	; 0x2c
   2570e:	eors	r2, r3
   25710:	beq.n	2579a <btrfs_free_block_groups@@Base+0xfc>
   25712:	blx	8c90 <__stack_chk_fail@plt>
   25716:	add	r3, sp, #32
   25718:	mov	r0, r6
   2571a:	str	r3, [sp, #0]
   2571c:	ldrd	r2, r3, [sp, #16]
   25720:	bl	1b494 <get_state_private@@Base>
   25724:	cbnz	r0, 2573e <btrfs_free_block_groups@@Base+0xa0>
   25726:	ldr	r5, [sp, #32]
   25728:	ldr	r3, [r5, #64]	; 0x40
   2572a:	cbz	r3, 25738 <btrfs_free_block_groups@@Base+0x9a>
   2572c:	mov	r0, r5
   2572e:	bl	2b4b4 <btrfs_remove_free_space_cache@@Base>
   25732:	ldr	r0, [r5, #64]	; 0x40
   25734:	blx	8b84 <free@plt+0x4>
   25738:	mov	r0, r5
   2573a:	blx	8b84 <free@plt+0x4>
   2573e:	ldrd	r2, r3, [sp, #24]
   25742:	mov	r0, r6
   25744:	str.w	r9, [sp, #8]
   25748:	strd	r2, r3, [sp]
   2574c:	ldrd	r2, r3, [sp, #16]
   25750:	bl	1afe6 <clear_extent_bits@@Base>
   25754:	b.n	256c0 <btrfs_free_block_groups@@Base+0x22>
   25756:	ldrd	r2, r3, [sp, #24]
   2575a:	mov	r0, r5
   2575c:	strd	r2, r3, [sp]
   25760:	ldrd	r2, r3, [sp, #16]
   25764:	bl	1b3a0 <clear_extent_dirty@@Base>
   25768:	b.n	256de <btrfs_free_block_groups@@Base+0x40>
   2576a:	ldrd	r1, r2, [r3]
   2576e:	sub.w	r7, r3, #44	; 0x2c
   25772:	str	r2, [r1, #4]
   25774:	str	r1, [r2, #0]
   25776:	ldrd	r0, r1, [r3, #-12]
   2577a:	strd	r3, r3, [r3]
   2577e:	orrs.w	r2, r0, r1
   25782:	beq.n	25792 <btrfs_free_block_groups@@Base+0xf4>
   25784:	strd	r0, r1, [sp]
   25788:	mov	r0, r6
   2578a:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   2578e:	bl	1bca0 <__btrfs_warning@@Base>
   25792:	mov	r0, r7
   25794:	blx	8b84 <free@plt+0x4>
   25798:	b.n	256fa <btrfs_free_block_groups@@Base+0x5c>
   2579a:	movs	r0, #0
   2579c:	add	sp, #52	; 0x34
   2579e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   257a2:	nop
   257a4:	ldrsb	r6, [r6, r1]
   257a6:	movs	r4, r0
   257a8:	lsls	r0, r1, #10
   257aa:	movs	r0, r0
   257ac:	blt.n	2571a <btrfs_free_block_groups@@Base+0x7c>
   257ae:	movs	r1, r0
   257b0:	ldrsb	r2, [r2, r0]
   257b2:	movs	r4, r0

000257b4 <btrfs_make_block_groups@@Base>:
   257b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257b8:	mov	r7, r1
   257ba:	vpush	{d8-d9}
   257be:	movs	r6, #0
   257c0:	ldr	r2, [pc, #768]	; (25ac4 <btrfs_make_block_groups@@Base+0x310>)
   257c2:	mov	r8, r6
   257c4:	ldr	r3, [pc, #768]	; (25ac8 <btrfs_make_block_groups@@Base+0x314>)
   257c6:	mov	r9, r6
   257c8:	add	r2, pc
   257ca:	vmov	s19, r0
   257ce:	sub	sp, #124	; 0x7c
   257d0:	ldr	r3, [r2, r3]
   257d2:	ldr	r3, [r3, #0]
   257d4:	str	r3, [sp, #116]	; 0x74
   257d6:	mov.w	r3, #0
   257da:	ldr	r3, [r1, #24]
   257dc:	vmov	s18, r3
   257e0:	add.w	r3, r1, #128	; 0x80
   257e4:	vmov	s16, r3
   257e8:	ldr.w	r3, [r1, #308]	; 0x134
   257ec:	ldr	r2, [r3, #112]	; 0x70
   257ee:	str	r2, [sp, #40]	; 0x28
   257f0:	movs	r2, #0
   257f2:	ldr	r3, [r3, #116]	; 0x74
   257f4:	str	r3, [sp, #44]	; 0x2c
   257f6:	ldr.w	r3, [r1, #388]	; 0x184
   257fa:	lsls	r3, r3, #6
   257fc:	mov	r1, r3
   257fe:	movs	r3, #0
   25800:	strd	r1, r2, [sp, #64]	; 0x40
   25804:	movs	r2, #12
   25806:	ldrd	r0, r1, [sp, #40]	; 0x28
   2580a:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2580e:	ldr	r3, [pc, #700]	; (25acc <btrfs_make_block_groups@@Base+0x318>)
   25810:	str	r6, [sp, #80]	; 0x50
   25812:	add	r3, pc
   25814:	strd	r6, r6, [sp, #32]
   25818:	addw	r3, r3, #461	; 0x1cd
   2581c:	vmov	s17, r3
   25820:	strd	r0, r1, [sp, #56]	; 0x38
   25824:	ldrd	r2, r3, [sp, #40]	; 0x28
   25828:	cmp	r9, r3
   2582a:	it	eq
   2582c:	cmpeq	r8, r2
   2582e:	bcc.n	25868 <btrfs_make_block_groups@@Base+0xb4>
   25830:	ldr.w	r8, [pc, #668]	; 25ad0 <btrfs_make_block_groups@@Base+0x31c>
   25834:	movs	r4, #0
   25836:	ldr.w	r9, [pc, #668]	; 25ad4 <btrfs_make_block_groups@@Base+0x320>
   2583a:	movs	r5, #0
   2583c:	add	r8, pc
   2583e:	addw	r8, r8, #461	; 0x1cd
   25842:	add	r9, pc
   25844:	ldrd	r2, r3, [sp, #40]	; 0x28
   25848:	cmp	r5, r3
   2584a:	it	eq
   2584c:	cmpeq	r4, r2
   2584e:	bcc.w	25a3e <btrfs_make_block_groups@@Base+0x28a>
   25852:	ldr	r2, [pc, #644]	; (25ad8 <btrfs_make_block_groups@@Base+0x324>)
   25854:	ldr	r3, [pc, #624]	; (25ac8 <btrfs_make_block_groups@@Base+0x314>)
   25856:	add	r2, pc
   25858:	ldr	r3, [r2, r3]
   2585a:	ldr	r2, [r3, #0]
   2585c:	ldr	r3, [sp, #116]	; 0x74
   2585e:	eors	r2, r3
   25860:	beq.w	25ab8 <btrfs_make_block_groups@@Base+0x304>
   25864:	blx	8c90 <__stack_chk_fail@plt>
   25868:	ldr	r3, [sp, #40]	; 0x28
   2586a:	ldrd	sl, fp, [sp, #56]	; 0x38
   2586e:	subs.w	r3, r3, r8
   25872:	str	r3, [sp, #24]
   25874:	ldr	r3, [sp, #44]	; 0x2c
   25876:	sbc.w	r3, r3, r9
   2587a:	str	r3, [sp, #28]
   2587c:	ldrd	r0, r1, [sp, #24]
   25880:	ldrd	r3, r2, [sp, #56]	; 0x38
   25884:	cmp	r1, fp
   25886:	it	eq
   25888:	cmpeq	r0, sl
   2588a:	it	cc
   2588c:	ldrdcc	r3, r2, [sp, #24]
   25890:	orrs.w	r1, r8, r9
   25894:	bne.w	259a2 <btrfs_make_block_groups@@Base+0x1ee>
   25898:	ldrd	r0, r1, [sp, #64]	; 0x40
   2589c:	lsrs	r3, r3, #2
   2589e:	orr.w	r3, r3, r2, lsl #30
   258a2:	negs	r0, r0
   258a4:	and.w	r4, r0, r3
   258a8:	mov.w	r3, #0
   258ac:	sbc.w	r1, r1, r1, lsl #1
   258b0:	and.w	r5, r1, r2, lsr #2
   258b4:	mov.w	r2, #33554432	; 0x2000000
   258b8:	cmp	r5, #0
   258ba:	it	eq
   258bc:	cmpeq.w	r4, #8388608	; 0x800000
   258c0:	itt	cc
   258c2:	movcc.w	r4, #8388608	; 0x800000
   258c6:	movcc	r5, #0
   258c8:	cmp	r3, r5
   258ca:	it	eq
   258cc:	cmpeq	r2, r4
   258ce:	itt	cc
   258d0:	movcc	r4, r2
   258d2:	movcc	r5, r3
   258d4:	movs	r2, #2
   258d6:	movs	r3, #0
   258d8:	strd	r2, r3, [sp, #48]	; 0x30
   258dc:	movs	r1, #120	; 0x78
   258de:	movs	r0, #1
   258e0:	blx	8ab8 <calloc@plt+0x4>
   258e4:	ldr	r1, [pc, #500]	; (25adc <btrfs_make_block_groups@@Base+0x328>)
   258e6:	vmov	r2, s17
   258ea:	movw	r3, #2893	; 0xb4d
   258ee:	add	r1, pc
   258f0:	str	r1, [sp, #84]	; 0x54
   258f2:	mov	sl, r0
   258f4:	clz	r0, r0
   258f8:	lsrs	r0, r0, #5
   258fa:	str	r0, [sp, #0]
   258fc:	ldr	r0, [pc, #480]	; (25ae0 <btrfs_make_block_groups@@Base+0x32c>)
   258fe:	add	r0, pc
   25900:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25904:	ldrd	r0, r1, [sp, #48]	; 0x30
   25908:	strd	r8, r9, [sl, #40]	; 0x28
   2590c:	movs	r2, #0
   2590e:	str.w	r4, [sl, #49]	; 0x31
   25912:	movs	r3, #192	; 0xc0
   25914:	strd	r0, r1, [sl, #96]	; 0x60
   25918:	add.w	r0, sl, #60	; 0x3c
   2591c:	strb.w	r3, [sl, #48]	; 0x30
   25920:	movs	r3, #0
   25922:	str.w	r5, [sl, #53]	; 0x35
   25926:	strd	r2, r3, [sl, #72]	; 0x48
   2592a:	str	r0, [sp, #16]
   2592c:	mov	r0, r7
   2592e:	strd	r2, r3, [sp, #8]
   25932:	strd	r4, r5, [sp]
   25936:	ldrd	r2, r3, [sp, #48]	; 0x30
   2593a:	bl	25354 <update_space_info@@Base>
   2593e:	ldr	r1, [sp, #84]	; 0x54
   25940:	vmov	r2, s17
   25944:	movw	r3, #2903	; 0xb57
   25948:	str	r0, [sp, #0]
   2594a:	ldr	r0, [pc, #408]	; (25ae4 <btrfs_make_block_groups@@Base+0x330>)
   2594c:	add	r0, pc
   2594e:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25952:	ldrd	r2, r3, [sp, #48]	; 0x30
   25956:	mov	r0, r7
   25958:	bl	22e18 <btrfs_create_tree@@Base+0x1fc>
   2595c:	adds.w	r3, r8, r4
   25960:	adc.w	r1, r9, r5
   25964:	vmov	r0, s16
   25968:	mov	fp, r3
   2596a:	adds.w	r2, fp, #4294967295	; 0xffffffff
   2596e:	mov.w	r3, #24
   25972:	str	r3, [sp, #8]
   25974:	adc.w	r3, r1, #4294967295	; 0xffffffff
   25978:	strd	r2, r3, [sp]
   2597c:	mov	r2, r8
   2597e:	mov	r3, r9
   25980:	str	r1, [sp, #48]	; 0x30
   25982:	bl	1b15c <set_extent_bits@@Base>
   25986:	movs	r3, #0
   25988:	mov	r2, r8
   2598a:	str	r3, [sp, #4]
   2598c:	mov	r3, r9
   2598e:	vmov	r0, s16
   25992:	mov	r8, fp
   25994:	str.w	sl, [sp]
   25998:	bl	1b46a <set_state_private@@Base>
   2599c:	ldr	r1, [sp, #48]	; 0x30
   2599e:	mov	r9, r1
   259a0:	b.n	25824 <btrfs_make_block_groups@@Base+0x70>
   259a2:	ldrd	r0, r1, [sp, #64]	; 0x40
   259a6:	negs	r0, r0
   259a8:	and.w	r3, r3, r0
   259ac:	sbc.w	r1, r1, r1, lsl #1
   259b0:	ands	r2, r1
   259b2:	adds	r1, r6, r6
   259b4:	str	r1, [sp, #72]	; 0x48
   259b6:	ldr	r1, [sp, #80]	; 0x50
   259b8:	adcs	r1, r1
   259ba:	str	r1, [sp, #76]	; 0x4c
   259bc:	ldrd	r4, r5, [sp, #72]	; 0x48
   259c0:	ldrd	r0, r1, [sp, #32]
   259c4:	cmp	r1, r5
   259c6:	mov	r5, r2
   259c8:	it	eq
   259ca:	cmpeq	r0, r4
   259cc:	mov.w	r2, #1073741824	; 0x40000000
   259d0:	mov	r4, r3
   259d2:	bcc.n	25a1c <btrfs_make_block_groups@@Base+0x268>
   259d4:	movs	r3, #0
   259d6:	cmp	r3, r5
   259d8:	it	eq
   259da:	cmpeq	r2, r4
   259dc:	it	cc
   259de:	movcc	r5, r3
   259e0:	ldr	r3, [sp, #80]	; 0x50
   259e2:	it	cc
   259e4:	movcc	r4, r2
   259e6:	movs	r2, #4
   259e8:	adds	r6, r6, r4
   259ea:	adc.w	r3, r5, r3
   259ee:	str	r3, [sp, #80]	; 0x50
   259f0:	ldr	r1, [sp, #28]
   259f2:	movs	r3, #0
   259f4:	strd	r2, r3, [sp, #48]	; 0x30
   259f8:	mov.w	ip, #5
   259fc:	lsls	r3, r1, #2
   259fe:	ldr	r1, [sp, #24]
   25a00:	orr.w	r3, r3, r1, lsr #30
   25a04:	lsls	r2, r1, #2
   25a06:	umull	r0, r1, r4, ip
   25a0a:	mla	r1, ip, r5, r1
   25a0e:	cmp	r3, r1
   25a10:	it	eq
   25a12:	cmpeq	r2, r0
   25a14:	it	cc
   25a16:	ldrdcc	r4, r5, [sp, #24]
   25a1a:	b.n	258dc <btrfs_make_block_groups@@Base+0x128>
   25a1c:	movs	r3, #1
   25a1e:	cmp	r3, r5
   25a20:	it	eq
   25a22:	cmpeq	r2, r4
   25a24:	it	cc
   25a26:	movcc	r5, r3
   25a28:	ldr	r3, [sp, #32]
   25a2a:	it	cc
   25a2c:	movcc	r4, r2
   25a2e:	movs	r2, #1
   25a30:	adds	r3, r3, r4
   25a32:	str	r3, [sp, #32]
   25a34:	ldr	r3, [sp, #36]	; 0x24
   25a36:	adc.w	r3, r5, r3
   25a3a:	str	r3, [sp, #36]	; 0x24
   25a3c:	b.n	259f0 <btrfs_make_block_groups@@Base+0x23c>
   25a3e:	mov	r2, r4
   25a40:	mov	r3, r5
   25a42:	mov	r0, r7
   25a44:	bl	23754 <btrfs_lookup_block_group@@Base>
   25a48:	movw	r3, #2919	; 0xb67
   25a4c:	mov	r2, r8
   25a4e:	mov	r1, r9
   25a50:	mov	r6, r0
   25a52:	clz	r0, r0
   25a56:	lsrs	r0, r0, #5
   25a58:	str	r0, [sp, #0]
   25a5a:	ldr	r0, [pc, #140]	; (25ae8 <btrfs_make_block_groups@@Base+0x334>)
   25a5c:	add	r0, pc
   25a5e:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25a62:	ldr	r3, [r6, #72]	; 0x48
   25a64:	vmov	r1, s18
   25a68:	mov.w	r2, #256	; 0x100
   25a6c:	vmov	r0, s19
   25a70:	str	r3, [sp, #92]	; 0x5c
   25a72:	ldr	r3, [r6, #76]	; 0x4c
   25a74:	str	r3, [sp, #96]	; 0x60
   25a76:	ldr	r3, [r6, #96]	; 0x60
   25a78:	str	r3, [sp, #108]	; 0x6c
   25a7a:	ldr	r3, [r6, #100]	; 0x64
   25a7c:	str	r3, [sp, #112]	; 0x70
   25a7e:	movs	r3, #0
   25a80:	strd	r2, r3, [sp, #100]	; 0x64
   25a84:	add.w	r2, r6, #40	; 0x28
   25a88:	movs	r3, #24
   25a8a:	str	r3, [sp, #0]
   25a8c:	add	r3, sp, #92	; 0x5c
   25a8e:	bl	1fb68 <btrfs_insert_item@@Base>
   25a92:	movw	r3, #2927	; 0xb6f
   25a96:	mov	r2, r8
   25a98:	mov	r1, r9
   25a9a:	str	r0, [sp, #0]
   25a9c:	ldr	r0, [pc, #76]	; (25aec <btrfs_make_block_groups@@Base+0x338>)
   25a9e:	add	r0, pc
   25aa0:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25aa4:	ldrd	r1, r0, [r6, #40]	; 0x28
   25aa8:	ldr.w	r3, [r6, #49]	; 0x31
   25aac:	ldr.w	r2, [r6, #53]	; 0x35
   25ab0:	adds	r4, r3, r1
   25ab2:	adc.w	r5, r2, r0
   25ab6:	b.n	25844 <btrfs_make_block_groups@@Base+0x90>
   25ab8:	movs	r0, #0
   25aba:	add	sp, #124	; 0x7c
   25abc:	vpop	{d8-d9}
   25ac0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ac4:	strb	r0, [r2, r5]
   25ac6:	movs	r4, r0
   25ac8:	lsls	r0, r1, #10
   25aca:	movs	r0, r0
   25acc:	ble.n	25ba4 <btrfs_free_block_group@@Base+0xac>
   25ace:	movs	r1, r0
   25ad0:	ble.n	25b54 <btrfs_free_block_group@@Base+0x5c>
   25ad2:	movs	r1, r0
   25ad4:	bvs.n	25af8 <btrfs_free_block_group@@Base>
   25ad6:	movs	r1, r0
   25ad8:	strb	r2, [r0, r3]
   25ada:	movs	r4, r0
   25adc:	bpl.n	25ba8 <btrfs_free_block_group@@Base+0xb0>
   25ade:	movs	r1, r0
   25ae0:	ldr	r0, [sp, #188]	; 0xbc
   25ae2:	movs	r1, r0
   25ae4:	add	r1, pc, #984	; (adr r1, 25ec0 <btrfs_free_block_group@@Base+0x3c8>)
   25ae6:	movs	r1, r0
   25ae8:	str	r6, [sp, #836]	; 0x344
   25aea:	movs	r1, r0
   25aec:	add	r0, pc, #656	; (adr r0, 25d80 <btrfs_free_block_group@@Base+0x288>)
   25aee:	movs	r1, r0

00025af0 <btrfs_update_block_group@@Base>:
   25af0:	ldr.w	r0, [r0, #464]	; 0x1d0
   25af4:	b.w	238dc <btrfs_lookup_block_group@@Base+0x188>

00025af8 <btrfs_free_block_group@@Base>:
   25af8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25afc:	mov	fp, r3
   25afe:	vpush	{d8}
   25b02:	mov	sl, r2
   25b04:	ldr.w	r3, [pc, #1568]	; 26128 <btrfs_free_block_group@@Base+0x630>
   25b08:	mov	r9, r1
   25b0a:	ldr.w	r2, [pc, #1568]	; 2612c <btrfs_free_block_group@@Base+0x634>
   25b0e:	mov	r8, r0
   25b10:	add	r3, pc
   25b12:	sub	sp, #164	; 0xa4
   25b14:	add	r2, pc
   25b16:	ldr	r1, [r1, #24]
   25b18:	str	r3, [sp, #36]	; 0x24
   25b1a:	ldr.w	r3, [pc, #1556]	; 26130 <btrfs_free_block_group@@Base+0x638>
   25b1e:	ldr	r3, [r2, r3]
   25b20:	ldr	r3, [r3, #0]
   25b22:	str	r3, [sp, #156]	; 0x9c
   25b24:	mov.w	r3, #0
   25b28:	str	r1, [sp, #24]
   25b2a:	bl	1c6f0 <btrfs_alloc_path@@Base>
   25b2e:	str	r0, [sp, #28]
   25b30:	cmp	r0, #0
   25b32:	beq.w	26114 <btrfs_free_block_group@@Base+0x61c>
   25b36:	ldr	r3, [sp, #208]	; 0xd0
   25b38:	add	r2, sp, #96	; 0x60
   25b3a:	ldr	r1, [sp, #24]
   25b3c:	movs	r4, #192	; 0xc0
   25b3e:	strd	sl, fp, [sp, #96]	; 0x60
   25b42:	str.w	r3, [sp, #105]	; 0x69
   25b46:	ldr	r3, [sp, #212]	; 0xd4
   25b48:	strb.w	r4, [sp, #104]	; 0x68
   25b4c:	str.w	r3, [sp, #109]	; 0x6d
   25b50:	movs	r3, #0
   25b52:	strd	r3, r3, [sp]
   25b56:	mov	r3, r0
   25b58:	mov	r0, r8
   25b5a:	bl	1eadc <btrfs_search_slot@@Base>
   25b5e:	subs	r3, r0, #0
   25b60:	str	r3, [sp, #24]
   25b62:	bgt.w	2610e <btrfs_free_block_group@@Base+0x616>
   25b66:	bne.n	25c3a <btrfs_free_block_group@@Base+0x142>
   25b68:	ldr	r3, [sp, #28]
   25b6a:	movs	r1, #25
   25b6c:	ldr	r2, [sp, #28]
   25b6e:	ldr	r3, [r3, #0]
   25b70:	ldr	r2, [r2, #32]
   25b72:	adds	r3, #96	; 0x60
   25b74:	mla	r2, r1, r2, r3
   25b78:	ldr.w	r2, [r2, #118]	; 0x76
   25b7c:	add	r3, r2
   25b7e:	ldr.w	r0, [r3, #101]!
   25b82:	ldr	r1, [r3, #4]
   25b84:	orrs.w	r3, r0, r1
   25b88:	beq.n	25bbc <btrfs_free_block_group@@Base+0xc4>
   25b8a:	ldr	r2, [sp, #36]	; 0x24
   25b8c:	ldr.w	r3, [pc, #1444]	; 26134 <btrfs_free_block_group@@Base+0x63c>
   25b90:	ldr	r3, [r2, r3]
   25b92:	ldr	r2, [sp, #208]	; 0xd0
   25b94:	strd	sl, fp, [sp]
   25b98:	adds.w	r1, sl, r2
   25b9c:	ldr	r2, [sp, #212]	; 0xd4
   25b9e:	adc.w	r2, fp, r2
   25ba2:	strd	r1, r2, [sp, #8]
   25ba6:	ldr.w	r2, [pc, #1424]	; 26138 <btrfs_free_block_group@@Base+0x640>
   25baa:	movs	r1, #1
   25bac:	ldr	r0, [r3, #0]
   25bae:	add	r2, pc
   25bb0:	blx	9040 <__fprintf_chk@plt+0x4>
   25bb4:	mvn.w	r3, #21
   25bb8:	str	r3, [sp, #24]
   25bba:	b.n	25c3a <btrfs_free_block_group@@Base+0x142>
   25bbc:	ldr	r0, [sp, #28]
   25bbe:	bl	1c6f8 <btrfs_release_path@@Base>
   25bc2:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25bc6:	mov	r0, r9
   25bc8:	strd	r2, r3, [sp]
   25bcc:	mov	r2, sl
   25bce:	mov	r3, fp
   25bd0:	bl	254d4 <btrfs_pin_extent@@Base>
   25bd4:	ldr	r3, [sp, #208]	; 0xd0
   25bd6:	ldr.w	r1, [r9, #24]
   25bda:	strd	sl, fp, [sp, #136]	; 0x88
   25bde:	str.w	r3, [sp, #145]	; 0x91
   25be2:	ldr	r3, [sp, #212]	; 0xd4
   25be4:	str	r1, [sp, #32]
   25be6:	strb.w	r4, [sp, #144]	; 0x90
   25bea:	str.w	r3, [sp, #149]	; 0x95
   25bee:	bl	1c6f0 <btrfs_alloc_path@@Base>
   25bf2:	ldr	r1, [sp, #32]
   25bf4:	mov	r5, r0
   25bf6:	cbnz	r0, 25c5a <btrfs_free_block_group@@Base+0x162>
   25bf8:	mvn.w	r4, #11
   25bfc:	ldr	r2, [sp, #36]	; 0x24
   25bfe:	ldr.w	r3, [pc, #1332]	; 26134 <btrfs_free_block_group@@Base+0x63c>
   25c02:	ldr	r3, [r2, r3]
   25c04:	ldr	r2, [sp, #208]	; 0xd0
   25c06:	strd	sl, fp, [sp]
   25c0a:	adds.w	r1, sl, r2
   25c0e:	ldr	r2, [sp, #212]	; 0xd4
   25c10:	adc.w	r2, fp, r2
   25c14:	strd	r1, r2, [sp, #8]
   25c18:	ldr.w	r2, [pc, #1312]	; 2613c <btrfs_free_block_group@@Base+0x644>
   25c1c:	add	r2, pc
   25c1e:	ldr	r0, [r3, #0]
   25c20:	movs	r1, #1
   25c22:	blx	9040 <__fprintf_chk@plt+0x4>
   25c26:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25c2a:	mov	r0, r9
   25c2c:	strd	r2, r3, [sp]
   25c30:	mov	r2, sl
   25c32:	mov	r3, fp
   25c34:	bl	25648 <btrfs_unpin_extent@@Base>
   25c38:	str	r4, [sp, #24]
   25c3a:	ldr	r0, [sp, #28]
   25c3c:	bl	1c71e <btrfs_free_path@@Base>
   25c40:	ldr.w	r2, [pc, #1276]	; 26140 <btrfs_free_block_group@@Base+0x648>
   25c44:	ldr.w	r3, [pc, #1256]	; 26130 <btrfs_free_block_group@@Base+0x638>
   25c48:	add	r2, pc
   25c4a:	ldr	r3, [r2, r3]
   25c4c:	ldr	r2, [r3, #0]
   25c4e:	ldr	r3, [sp, #156]	; 0x9c
   25c50:	eors	r2, r3
   25c52:	beq.w	2611c <btrfs_free_block_group@@Base+0x624>
   25c56:	blx	8c90 <__stack_chk_fail@plt>
   25c5a:	mov.w	r3, #4294967295	; 0xffffffff
   25c5e:	add	r2, sp, #136	; 0x88
   25c60:	movs	r6, #1
   25c62:	strd	r3, r6, [sp]
   25c66:	mov	r3, r0
   25c68:	mov	r0, r8
   25c6a:	str	r1, [sp, #32]
   25c6c:	bl	1eadc <btrfs_search_slot@@Base>
   25c70:	subs	r4, r0, #0
   25c72:	bgt.n	25cc4 <btrfs_free_block_group@@Base+0x1cc>
   25c74:	bne.n	25c82 <btrfs_free_block_group@@Base+0x18a>
   25c76:	ldr	r1, [sp, #32]
   25c78:	mov	r2, r5
   25c7a:	mov	r0, r8
   25c7c:	bl	22f28 <btrfs_create_tree@@Base+0x30c>
   25c80:	mov	r4, r0
   25c82:	mov	r0, r5
   25c84:	bl	1c71e <btrfs_free_path@@Base>
   25c88:	cmp	r4, #0
   25c8a:	blt.n	25bfc <btrfs_free_block_group@@Base+0x104>
   25c8c:	ldr.w	r1, [r9, #32]
   25c90:	str	r1, [sp, #32]
   25c92:	bl	1c6f0 <btrfs_alloc_path@@Base>
   25c96:	ldr	r1, [sp, #32]
   25c98:	mov	r5, r0
   25c9a:	cbnz	r0, 25cca <btrfs_free_block_group@@Base+0x1d2>
   25c9c:	mvn.w	r4, #11
   25ca0:	ldr	r2, [sp, #36]	; 0x24
   25ca2:	ldr.w	r3, [pc, #1168]	; 26134 <btrfs_free_block_group@@Base+0x63c>
   25ca6:	ldr	r3, [r2, r3]
   25ca8:	ldr	r2, [sp, #208]	; 0xd0
   25caa:	strd	sl, fp, [sp]
   25cae:	adds.w	r1, sl, r2
   25cb2:	ldr	r2, [sp, #212]	; 0xd4
   25cb4:	adc.w	r2, fp, r2
   25cb8:	strd	r1, r2, [sp, #8]
   25cbc:	ldr.w	r2, [pc, #1156]	; 26144 <btrfs_free_block_group@@Base+0x64c>
   25cc0:	add	r2, pc
   25cc2:	b.n	25c1e <btrfs_free_block_group@@Base+0x126>
   25cc4:	mvn.w	r4, #1
   25cc8:	b.n	25c82 <btrfs_free_block_group@@Base+0x18a>
   25cca:	movs	r3, #0
   25ccc:	mov.w	r4, #256	; 0x100
   25cd0:	movs	r2, #228	; 0xe4
   25cd2:	strd	r4, r3, [sp, #116]	; 0x74
   25cd6:	strb.w	r2, [sp, #124]	; 0x7c
   25cda:	add	r2, sp, #116	; 0x74
   25cdc:	strd	r3, r3, [sp]
   25ce0:	mov	r3, r0
   25ce2:	mov	r0, r8
   25ce4:	str.w	sl, [sp, #125]	; 0x7d
   25ce8:	str.w	fp, [sp, #129]	; 0x81
   25cec:	bl	1eadc <btrfs_search_slot@@Base>
   25cf0:	subs	r4, r0, #0
   25cf2:	blt.n	25d4e <btrfs_free_block_group@@Base+0x256>
   25cf4:	bne.w	25e00 <btrfs_free_block_group@@Base+0x308>
   25cf8:	ldr	r3, [r5, #0]
   25cfa:	movs	r1, #25
   25cfc:	ldr	r2, [r5, #32]
   25cfe:	adds	r3, #96	; 0x60
   25d00:	str	r4, [sp, #32]
   25d02:	mla	r2, r1, r2, r3
   25d06:	ldr.w	r6, [r2, #118]	; 0x76
   25d0a:	add	r3, r6
   25d0c:	adds	r6, #149	; 0x95
   25d0e:	ldrh.w	r3, [r3, #145]	; 0x91
   25d12:	str	r3, [sp, #40]	; 0x28
   25d14:	add	r3, sp, #136	; 0x88
   25d16:	vmov	s16, r3
   25d1a:	ldr	r3, [sp, #32]
   25d1c:	ldr	r2, [sp, #40]	; 0x28
   25d1e:	cmp	r3, r2
   25d20:	bge.n	25d4e <btrfs_free_block_group@@Base+0x256>
   25d22:	ldr	r3, [r5, #0]
   25d24:	adds	r3, #96	; 0x60
   25d26:	adds	r1, r3, r6
   25d28:	ldr	r2, [r3, r6]
   25d2a:	ldr	r3, [r1, #4]
   25d2c:	ldr	r4, [r1, #12]
   25d2e:	str	r2, [sp, #56]	; 0x38
   25d30:	str	r3, [sp, #44]	; 0x2c
   25d32:	ldr	r3, [r1, #8]
   25d34:	ldr.w	r1, [r9, #36]	; 0x24
   25d38:	str	r3, [sp, #52]	; 0x34
   25d3a:	str	r1, [sp, #48]	; 0x30
   25d3c:	bl	1c6f0 <btrfs_alloc_path@@Base>
   25d40:	ldrd	r1, r3, [sp, #48]	; 0x30
   25d44:	ldr	r2, [sp, #56]	; 0x38
   25d46:	mov	r7, r0
   25d48:	cbnz	r0, 25da6 <btrfs_free_block_group@@Base+0x2ae>
   25d4a:	mvn.w	r4, #11
   25d4e:	mov	r0, r5
   25d50:	bl	1c71e <btrfs_free_path@@Base>
   25d54:	cmp	r4, #0
   25d56:	blt.n	25ca0 <btrfs_free_block_group@@Base+0x1a8>
   25d58:	ldr.w	r1, [r9, #32]
   25d5c:	mov.w	r2, #256	; 0x100
   25d60:	movs	r3, #0
   25d62:	str.w	sl, [sp, #145]	; 0x91
   25d66:	strd	r2, r3, [sp, #136]	; 0x88
   25d6a:	movs	r3, #228	; 0xe4
   25d6c:	str	r1, [sp, #32]
   25d6e:	str.w	fp, [sp, #149]	; 0x95
   25d72:	strb.w	r3, [sp, #144]	; 0x90
   25d76:	bl	1c6f0 <btrfs_alloc_path@@Base>
   25d7a:	ldr	r1, [sp, #32]
   25d7c:	mov	r6, r0
   25d7e:	cmp	r0, #0
   25d80:	bne.n	25e06 <btrfs_free_block_group@@Base+0x30e>
   25d82:	mvn.w	r4, #11
   25d86:	ldr	r2, [sp, #36]	; 0x24
   25d88:	ldr	r3, [pc, #936]	; (26134 <btrfs_free_block_group@@Base+0x63c>)
   25d8a:	ldr	r3, [r2, r3]
   25d8c:	ldr	r2, [sp, #208]	; 0xd0
   25d8e:	strd	sl, fp, [sp]
   25d92:	adds.w	r1, sl, r2
   25d96:	ldr	r2, [sp, #212]	; 0xd4
   25d98:	adc.w	r2, fp, r2
   25d9c:	strd	r1, r2, [sp, #8]
   25da0:	ldr	r2, [pc, #932]	; (26148 <btrfs_free_block_group@@Base+0x650>)
   25da2:	add	r2, pc
   25da4:	b.n	25c1e <btrfs_free_block_group@@Base+0x126>
   25da6:	str	r2, [sp, #136]	; 0x88
   25da8:	movs	r0, #1
   25daa:	ldr	r2, [sp, #44]	; 0x2c
   25dac:	str.w	r3, [sp, #145]	; 0x91
   25db0:	mov.w	r3, #4294967295	; 0xffffffff
   25db4:	strd	r3, r0, [sp]
   25db8:	mov	r3, r7
   25dba:	str	r2, [sp, #140]	; 0x8c
   25dbc:	mov	r0, r8
   25dbe:	mvn.w	r2, #51	; 0x33
   25dc2:	strb.w	r2, [sp, #144]	; 0x90
   25dc6:	vmov	r2, s16
   25dca:	str.w	r4, [sp, #149]	; 0x95
   25dce:	str	r1, [sp, #44]	; 0x2c
   25dd0:	bl	1eadc <btrfs_search_slot@@Base>
   25dd4:	subs	r4, r0, #0
   25dd6:	blt.n	25de6 <btrfs_free_block_group@@Base+0x2ee>
   25dd8:	bne.n	25dfa <btrfs_free_block_group@@Base+0x302>
   25dda:	ldr	r1, [sp, #44]	; 0x2c
   25ddc:	mov	r2, r7
   25dde:	mov	r0, r8
   25de0:	bl	22f28 <btrfs_create_tree@@Base+0x30c>
   25de4:	mov	r4, r0
   25de6:	mov	r0, r7
   25de8:	adds	r6, #32
   25dea:	bl	1c71e <btrfs_free_path@@Base>
   25dee:	cmp	r4, #0
   25df0:	blt.n	25d4e <btrfs_free_block_group@@Base+0x256>
   25df2:	ldr	r3, [sp, #32]
   25df4:	adds	r3, #1
   25df6:	str	r3, [sp, #32]
   25df8:	b.n	25d1a <btrfs_free_block_group@@Base+0x222>
   25dfa:	mvn.w	r4, #1
   25dfe:	b.n	25de6 <btrfs_free_block_group@@Base+0x2ee>
   25e00:	mvn.w	r4, #1
   25e04:	b.n	25d4e <btrfs_free_block_group@@Base+0x256>
   25e06:	mov.w	r3, #4294967295	; 0xffffffff
   25e0a:	movs	r2, #1
   25e0c:	strd	r3, r2, [sp]
   25e10:	mov	r3, r0
   25e12:	add	r2, sp, #136	; 0x88
   25e14:	mov	r0, r8
   25e16:	str	r1, [sp, #40]	; 0x28
   25e18:	bl	1eadc <btrfs_search_slot@@Base>
   25e1c:	subs	r3, r0, #0
   25e1e:	str	r3, [sp, #32]
   25e20:	bgt.w	25f36 <btrfs_free_block_group@@Base+0x43e>
   25e24:	bne.n	25f26 <btrfs_free_block_group@@Base+0x42e>
   25e26:	ldr	r3, [r6, #0]
   25e28:	movs	r0, #25
   25e2a:	ldr	r2, [r6, #32]
   25e2c:	adds	r3, #96	; 0x60
   25e2e:	ldr	r1, [sp, #40]	; 0x28
   25e30:	mla	r2, r0, r2, r3
   25e34:	mov	r0, r8
   25e36:	ldr.w	r2, [r2, #118]	; 0x76
   25e3a:	add	r3, r2
   25e3c:	mov	r2, r6
   25e3e:	ldr.w	r5, [r3, #125]	; 0x7d
   25e42:	bl	22f28 <btrfs_create_tree@@Base+0x30c>
   25e46:	subs	r4, r0, #0
   25e48:	blt.n	25f3a <btrfs_free_block_group@@Base+0x442>
   25e4a:	ldr	r3, [sp, #32]
   25e4c:	and.w	r2, r5, #2
   25e50:	orrs	r3, r2
   25e52:	beq.n	25f3a <btrfs_free_block_group@@Base+0x442>
   25e54:	ldr.w	r3, [r9, #308]	; 0x134
   25e58:	ldr	r5, [sp, #32]
   25e5a:	str	r3, [sp, #40]	; 0x28
   25e5c:	ldr.w	r3, [r3, #160]	; 0xa0
   25e60:	str	r3, [sp, #44]	; 0x2c
   25e62:	ldr	r3, [sp, #40]	; 0x28
   25e64:	addw	r3, r3, #811	; 0x32b
   25e68:	str	r3, [sp, #48]	; 0x30
   25e6a:	ldrd	r3, r4, [sp, #136]	; 0x88
   25e6e:	strd	r3, r4, [sp, #80]	; 0x50
   25e72:	ldr.w	r3, [sp, #145]	; 0x91
   25e76:	str	r3, [sp, #56]	; 0x38
   25e78:	ldr.w	r3, [sp, #149]	; 0x95
   25e7c:	str	r3, [sp, #60]	; 0x3c
   25e7e:	ldrb.w	r3, [sp, #144]	; 0x90
   25e82:	str	r3, [sp, #88]	; 0x58
   25e84:	ldr	r3, [pc, #708]	; (2614c <btrfs_free_block_group@@Base+0x654>)
   25e86:	add	r3, pc
   25e88:	addw	r2, r3, #485	; 0x1e5
   25e8c:	ldr	r3, [pc, #704]	; (26150 <btrfs_free_block_group@@Base+0x658>)
   25e8e:	add	r3, pc
   25e90:	vmov	s16, r3
   25e94:	ldr	r3, [sp, #44]	; 0x2c
   25e96:	cmp	r3, r5
   25e98:	bhi.n	25ea2 <btrfs_free_block_group@@Base+0x3aa>
   25e9a:	mvn.w	r3, #1
   25e9e:	str	r3, [sp, #32]
   25ea0:	b.n	25f26 <btrfs_free_block_group@@Base+0x42e>
   25ea2:	ldr	r3, [sp, #48]	; 0x30
   25ea4:	adds	r7, r3, r5
   25ea6:	ldr	r3, [r3, r5]
   25ea8:	str	r3, [sp, #64]	; 0x40
   25eaa:	ldr	r3, [r7, #4]
   25eac:	str	r3, [sp, #68]	; 0x44
   25eae:	ldrb	r3, [r7, #8]
   25eb0:	cmp	r3, #228	; 0xe4
   25eb2:	bne.n	25f30 <btrfs_free_block_group@@Base+0x438>
   25eb4:	ldrh.w	r4, [r7, #61]	; 0x3d
   25eb8:	ldr	r0, [pc, #664]	; (26154 <btrfs_free_block_group@@Base+0x65c>)
   25eba:	clz	r3, r4
   25ebe:	vmov	r1, s16
   25ec2:	add	r0, pc
   25ec4:	lsls	r4, r4, #5
   25ec6:	lsrs	r3, r3, #5
   25ec8:	str	r3, [sp, #0]
   25eca:	mov.w	r3, #322	; 0x142
   25ece:	str	r2, [sp, #92]	; 0x5c
   25ed0:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   25ed4:	ldrd	r0, r1, [sp, #64]	; 0x40
   25ed8:	add.w	r3, r4, #65	; 0x41
   25edc:	str	r3, [sp, #52]	; 0x34
   25ede:	ldrd	r2, r3, [sp, #80]	; 0x50
   25ee2:	cmp	r3, r1
   25ee4:	it	eq
   25ee6:	cmpeq	r2, r0
   25ee8:	ldr	r2, [sp, #92]	; 0x5c
   25eea:	bne.n	25f2a <btrfs_free_block_group@@Base+0x432>
   25eec:	ldrd	r3, r4, [sp, #56]	; 0x38
   25ef0:	ldr.w	r1, [r7, #13]
   25ef4:	ldr.w	r0, [r7, #9]
   25ef8:	cmp	r4, r1
   25efa:	it	eq
   25efc:	cmpeq	r3, r0
   25efe:	bne.n	25f2a <btrfs_free_block_group@@Base+0x432>
   25f00:	ldr	r3, [sp, #88]	; 0x58
   25f02:	cmp	r3, #228	; 0xe4
   25f04:	bne.n	25f2a <btrfs_free_block_group@@Base+0x432>
   25f06:	ldr	r3, [sp, #52]	; 0x34
   25f08:	mov	r0, r7
   25f0a:	adds	r1, r5, r3
   25f0c:	ldr	r3, [sp, #44]	; 0x2c
   25f0e:	subs	r2, r3, r1
   25f10:	ldr	r3, [sp, #48]	; 0x30
   25f12:	add	r3, r1
   25f14:	mov	r1, r3
   25f16:	blx	8b74 <memmove@plt+0x4>
   25f1a:	ldr	r3, [sp, #44]	; 0x2c
   25f1c:	ldr	r2, [sp, #52]	; 0x34
   25f1e:	subs	r4, r3, r2
   25f20:	ldr	r3, [sp, #40]	; 0x28
   25f22:	str.w	r4, [r3, #160]	; 0xa0
   25f26:	ldr	r4, [sp, #32]
   25f28:	b.n	25f3a <btrfs_free_block_group@@Base+0x442>
   25f2a:	ldr	r3, [sp, #52]	; 0x34
   25f2c:	add	r5, r3
   25f2e:	b.n	25e94 <btrfs_free_block_group@@Base+0x39c>
   25f30:	mvn.w	r3, #4
   25f34:	b.n	25e9e <btrfs_free_block_group@@Base+0x3a6>
   25f36:	mvn.w	r4, #1
   25f3a:	mov	r0, r6
   25f3c:	bl	1c71e <btrfs_free_path@@Base>
   25f40:	cmp	r4, #0
   25f42:	blt.w	25d86 <btrfs_free_block_group@@Base+0x28e>
   25f46:	mov	r2, sl
   25f48:	mov	r3, fp
   25f4a:	mov	r0, r9
   25f4c:	bl	23754 <btrfs_lookup_block_group@@Base>
   25f50:	mov	r6, r0
   25f52:	cbnz	r0, 25f6e <btrfs_free_block_group@@Base+0x476>
   25f54:	mvn.w	r3, #1
   25f58:	str	r3, [sp, #24]
   25f5a:	ldrd	r3, r4, [sp, #208]	; 0xd0
   25f5e:	mov	r2, sl
   25f60:	mov	r0, r9
   25f62:	strd	r3, r4, [sp]
   25f66:	mov	r3, fp
   25f68:	bl	25648 <btrfs_unpin_extent@@Base>
   25f6c:	b.n	25c3a <btrfs_free_block_group@@Base+0x142>
   25f6e:	ldr	r3, [r0, #64]	; 0x40
   25f70:	ldrd	r4, r5, [r0, #96]	; 0x60
   25f74:	cbz	r3, 25f80 <btrfs_free_block_group@@Base+0x488>
   25f76:	bl	2b4b4 <btrfs_remove_free_space_cache@@Base>
   25f7a:	ldr	r0, [r6, #64]	; 0x40
   25f7c:	blx	8b84 <free@plt+0x4>
   25f80:	mov.w	r3, #4294967295	; 0xffffffff
   25f84:	str	r3, [sp, #8]
   25f86:	ldr	r3, [sp, #208]	; 0xd0
   25f88:	add.w	r0, r9, #128	; 0x80
   25f8c:	ldr	r2, [sp, #212]	; 0xd4
   25f8e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   25f92:	adc.w	r2, r2, #4294967295	; 0xffffffff
   25f96:	adds.w	r3, r3, sl
   25f9a:	adc.w	r2, r2, fp
   25f9e:	strd	r3, r2, [sp]
   25fa2:	mov	r2, sl
   25fa4:	mov	r3, fp
   25fa6:	bl	1afe6 <clear_extent_bits@@Base>
   25faa:	mov	r2, r4
   25fac:	mov	r3, r5
   25fae:	mov	r0, r9
   25fb0:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   25fb4:	cmp	r0, #0
   25fb6:	beq.n	25f54 <btrfs_free_block_group@@Base+0x45c>
   25fb8:	ldrd	r4, r5, [r0, #8]
   25fbc:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25fc0:	cmp	r5, r3
   25fc2:	it	eq
   25fc4:	cmpeq	r4, r2
   25fc6:	bcs.n	25fec <btrfs_free_block_group@@Base+0x4f4>
   25fc8:	ldr	r2, [sp, #36]	; 0x24
   25fca:	ldr	r3, [pc, #360]	; (26134 <btrfs_free_block_group@@Base+0x63c>)
   25fcc:	ldr	r3, [r2, r3]
   25fce:	ldrd	r1, r2, [sp, #208]	; 0xd0
   25fd2:	strd	r4, r5, [sp, #8]
   25fd6:	strd	r1, r2, [sp]
   25fda:	movs	r1, #1
   25fdc:	ldr	r2, [pc, #376]	; (26158 <btrfs_free_block_group@@Base+0x660>)
   25fde:	ldr	r0, [r3, #0]
   25fe0:	add	r2, pc
   25fe2:	blx	9040 <__fprintf_chk@plt+0x4>
   25fe6:	mvn.w	r3, #21
   25fea:	b.n	25f58 <btrfs_free_block_group@@Base+0x460>
   25fec:	ldr	r3, [sp, #208]	; 0xd0
   25fee:	subs	r2, r4, r3
   25ff0:	ldr	r3, [sp, #212]	; 0xd4
   25ff2:	sbc.w	r3, r5, r3
   25ff6:	strd	r2, r3, [r0, #8]
   25ffa:	mov	r0, r6
   25ffc:	add.w	r6, r9, #228	; 0xe4
   26000:	blx	8b84 <free@plt+0x4>
   26004:	mov	r2, sl
   26006:	mov	r3, fp
   26008:	mov	r0, r6
   2600a:	bl	1a87c <search_cache_extent@@Base>
   2600e:	mov	r4, r0
   26010:	cmp	r0, #0
   26012:	beq.n	25f54 <btrfs_free_block_group@@Base+0x45c>
   26014:	ldrd	r2, r3, [r0, #24]
   26018:	cmp	fp, r3
   2601a:	it	eq
   2601c:	cmpeq	sl, r2
   2601e:	bne.n	25f54 <btrfs_free_block_group@@Base+0x45c>
   26020:	ldr	r5, [sp, #24]
   26022:	add.w	r3, r0, #72	; 0x48
   26026:	str	r3, [sp, #32]
   26028:	ldr	r0, [r4, #64]	; 0x40
   2602a:	cmp	r5, r0
   2602c:	blt.n	2603e <btrfs_free_block_group@@Base+0x546>
   2602e:	mov	r0, r6
   26030:	mov	r1, r4
   26032:	bl	1a954 <remove_cache_extent@@Base>
   26036:	mov	r0, r4
   26038:	blx	8b84 <free@plt+0x4>
   2603c:	b.n	25f5a <btrfs_free_block_group@@Base+0x462>
   2603e:	ldr	r2, [sp, #32]
   26040:	lsls	r3, r5, #4
   26042:	ldr	r7, [r2, r3]
   26044:	ldr	r3, [r4, #40]	; 0x28
   26046:	and.w	r2, r3, #2040	; 0x7f8
   2604a:	str	r2, [sp, #16]
   2604c:	movs	r2, #0
   2604e:	str	r2, [sp, #20]
   26050:	ldrd	r1, r2, [sp, #16]
   26054:	cmp	r2, #0
   26056:	it	eq
   26058:	cmpeq	r1, #128	; 0x80
   2605a:	beq.n	260d2 <btrfs_free_block_group@@Base+0x5da>
   2605c:	cmp	r2, #0
   2605e:	it	eq
   26060:	cmpeq	r1, #129	; 0x81
   26062:	bcs.n	260aa <btrfs_free_block_group@@Base+0x5b2>
   26064:	cmp	r2, #0
   26066:	it	eq
   26068:	cmpeq	r1, #64	; 0x40
   2606a:	beq.n	26106 <btrfs_free_block_group@@Base+0x60e>
   2606c:	cmp	r2, #0
   2606e:	it	eq
   26070:	cmpeq	r1, #65	; 0x41
   26072:	bcs.n	2608e <btrfs_free_block_group@@Base+0x596>
   26074:	cmp	r2, #0
   26076:	it	eq
   26078:	cmpeq	r1, #32
   2607a:	beq.n	260ce <btrfs_free_block_group@@Base+0x5d6>
   2607c:	and.w	r3, r3, #2024	; 0x7e8
   26080:	str	r3, [sp, #72]	; 0x48
   26082:	movs	r3, #0
   26084:	str	r3, [sp, #76]	; 0x4c
   26086:	ldrd	r2, r3, [sp, #72]	; 0x48
   2608a:	orrs	r3, r2
   2608c:	beq.n	260ce <btrfs_free_block_group@@Base+0x5d6>
   2608e:	ldr	r2, [pc, #204]	; (2615c <btrfs_free_block_group@@Base+0x664>)
   26090:	movs	r3, #1
   26092:	ldr	r1, [pc, #204]	; (26160 <btrfs_free_block_group@@Base+0x668>)
   26094:	ldr	r0, [pc, #204]	; (26164 <btrfs_free_block_group@@Base+0x66c>)
   26096:	add	r2, pc
   26098:	str	r3, [sp, #0]
   2609a:	addw	r2, r2, #507	; 0x1fb
   2609e:	add	r1, pc
   260a0:	add	r0, pc
   260a2:	movw	r3, #3160	; 0xc58
   260a6:	bl	23194 <btrfs_create_tree@@Base+0x578>
   260aa:	ldrd	r2, r3, [sp, #16]
   260ae:	cmp	r3, #0
   260b0:	it	eq
   260b2:	cmpeq.w	r2, #256	; 0x100
   260b6:	beq.n	26102 <btrfs_free_block_group@@Base+0x60a>
   260b8:	bcc.n	2608e <btrfs_free_block_group@@Base+0x596>
   260ba:	cmp	r3, #0
   260bc:	it	eq
   260be:	cmpeq.w	r2, #512	; 0x200
   260c2:	beq.n	260ce <btrfs_free_block_group@@Base+0x5d6>
   260c4:	cmp	r3, #0
   260c6:	it	eq
   260c8:	cmpeq.w	r2, #1024	; 0x400
   260cc:	bne.n	2608e <btrfs_free_block_group@@Base+0x596>
   260ce:	movs	r0, #1
   260d0:	b.n	260d4 <btrfs_free_block_group@@Base+0x5dc>
   260d2:	subs	r0, #1
   260d4:	asrs	r3, r0, #31
   260d6:	mov	r2, r0
   260d8:	ldrd	r0, r1, [r4, #32]
   260dc:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   260e0:	ldrd	r3, r2, [r7, #80]	; 0x50
   260e4:	subs	r0, r3, r0
   260e6:	sbc.w	r1, r2, r1
   260ea:	strd	r0, r1, [r7, #80]	; 0x50
   260ee:	mov	r1, r7
   260f0:	mov	r0, r8
   260f2:	bl	2cf78 <btrfs_update_device@@Base>
   260f6:	subs	r3, r0, #0
   260f8:	str	r3, [sp, #24]
   260fa:	blt.w	25f5a <btrfs_free_block_group@@Base+0x462>
   260fe:	adds	r5, #1
   26100:	b.n	26028 <btrfs_free_block_group@@Base+0x530>
   26102:	subs	r0, #2
   26104:	b.n	260d4 <btrfs_free_block_group@@Base+0x5dc>
   26106:	ldr	r1, [r4, #68]	; 0x44
   26108:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   2610c:	b.n	260d4 <btrfs_free_block_group@@Base+0x5dc>
   2610e:	mvn.w	r3, #63	; 0x3f
   26112:	b.n	25bb8 <btrfs_free_block_group@@Base+0xc0>
   26114:	mvn.w	r3, #11
   26118:	str	r3, [sp, #24]
   2611a:	b.n	25c40 <btrfs_free_block_group@@Base+0x148>
   2611c:	ldr	r0, [sp, #24]
   2611e:	add	sp, #164	; 0xa4
   26120:	vpop	{d8}
   26124:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26128:	strh	r0, [r1, r0]
   2612a:	movs	r4, r0
   2612c:	strh	r4, [r0, r0]
   2612e:	movs	r4, r0
   26130:	lsls	r0, r1, #10
   26132:	movs	r0, r0
   26134:	lsls	r4, r3, #10
   26136:	movs	r0, r0
   26138:	bvc.n	261a8 <exclude_super_stripes@@Base+0x10>
   2613a:	movs	r1, r0
   2613c:	bvs.n	2612e <btrfs_free_block_group@@Base+0x636>
   2613e:	movs	r1, r0
   26140:	str	r0, [r2, r3]
   26142:	movs	r4, r0
   26144:	bvs.n	26050 <btrfs_free_block_group@@Base+0x558>
   26146:	movs	r1, r0
   26148:	bpl.n	2610e <btrfs_free_block_group@@Base+0x616>
   2614a:	movs	r1, r0
   2614c:	bvs.n	2613c <btrfs_free_block_group@@Base+0x644>
   2614e:	movs	r1, r0
   26150:	ldr	r6, [sp, #400]	; 0x190
   26152:	movs	r1, r0
   26154:	bmi.n	260b8 <btrfs_free_block_group@@Base+0x5c0>
   26156:	movs	r1, r0
   26158:	bcc.n	260ee <btrfs_free_block_group@@Base+0x5f6>
   2615a:	movs	r1, r0
   2615c:	bmi.n	2612c <btrfs_free_block_group@@Base+0x634>
   2615e:	movs	r1, r0
   26160:	ldmia	r5, {r2, r4, r5, r7}
   26162:	movs	r1, r0
   26164:	bne.n	2618c <free_excluded_extents@@Base+0x24>
   26166:	movs	r1, r0

00026168 <free_excluded_extents@@Base>:
   26168:	push	{r4, r5, lr}
   2616a:	sub	sp, #20
   2616c:	ldrd	r2, r3, [r1, #40]	; 0x28
   26170:	movs	r4, #4
   26172:	str	r4, [sp, #8]
   26174:	adds	r0, #160	; 0xa0
   26176:	ldr.w	r4, [r1, #49]	; 0x31
   2617a:	ldr.w	r5, [r1, #53]	; 0x35
   2617e:	adds	r4, r4, r2
   26180:	adc.w	r5, r3, r5
   26184:	adds.w	r4, r4, #4294967295	; 0xffffffff
   26188:	adc.w	r5, r5, #4294967295	; 0xffffffff
   2618c:	strd	r4, r5, [sp]
   26190:	bl	1afe6 <clear_extent_bits@@Base>
   26194:	add	sp, #20
   26196:	pop	{r4, r5, pc}

00026198 <exclude_super_stripes@@Base>:
   26198:	ldr	r2, [pc, #392]	; (26324 <exclude_super_stripes@@Base+0x18c>)
   2619a:	ldr	r3, [pc, #396]	; (26328 <exclude_super_stripes@@Base+0x190>)
   2619c:	add	r2, pc
   2619e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   261a2:	sub	sp, #68	; 0x44
   261a4:	ldr	r3, [r2, r3]
   261a6:	mov	r5, r0
   261a8:	mov	r4, r1
   261aa:	ldr	r3, [r3, #0]
   261ac:	str	r3, [sp, #60]	; 0x3c
   261ae:	mov.w	r3, #0
   261b2:	ldrd	r2, r3, [r1, #40]	; 0x28
   261b6:	cmp	r3, #0
   261b8:	it	eq
   261ba:	cmpeq.w	r2, #65536	; 0x10000
   261be:	bcs.n	261f8 <exclude_super_stripes@@Base+0x60>
   261c0:	ldrd	r0, r1, [r1, #80]	; 0x50
   261c4:	rsb	ip, r2, #65536	; 0x10000
   261c8:	str.w	ip, [sp, #52]	; 0x34
   261cc:	adds.w	r0, r0, ip
   261d0:	adc.w	r1, r1, #0
   261d4:	adds.w	r6, r2, #4294967295	; 0xffffffff
   261d8:	adc.w	r7, r3, #4294967295	; 0xffffffff
   261dc:	adds.w	r6, r6, ip
   261e0:	strd	r0, r1, [r4, #80]	; 0x50
   261e4:	adc.w	r7, r7, #0
   261e8:	movs	r1, #4
   261ea:	add.w	r0, r5, #160	; 0xa0
   261ee:	str	r1, [sp, #8]
   261f0:	strd	r6, r7, [sp]
   261f4:	bl	1b15c <set_extent_bits@@Base>
   261f8:	movs	r6, #0
   261fa:	add.w	r7, r5, #160	; 0xa0
   261fe:	mov.w	r2, #65536	; 0x10000
   26202:	mov	r3, r6
   26204:	add	r1, sp, #52	; 0x34
   26206:	str	r1, [sp, #44]	; 0x2c
   26208:	ldr	r1, [sp, #44]	; 0x2c
   2620a:	mov	r0, r5
   2620c:	strd	r2, r3, [sp]
   26210:	ldrd	r2, r3, [r4, #40]	; 0x28
   26214:	str	r1, [sp, #16]
   26216:	add	r1, sp, #56	; 0x38
   26218:	str	r1, [sp, #12]
   2621a:	add	r1, sp, #48	; 0x30
   2621c:	str	r1, [sp, #8]
   2621e:	bl	2df9e <btrfs_rmap_block@@Base>
   26222:	mov	r3, r0
   26224:	cbnz	r0, 2623e <exclude_super_stripes@@Base+0xa6>
   26226:	ldr	r3, [sp, #56]	; 0x38
   26228:	ldr	r0, [sp, #48]	; 0x30
   2622a:	subs	r2, r3, #1
   2622c:	str	r2, [sp, #56]	; 0x38
   2622e:	cbnz	r3, 26272 <exclude_super_stripes@@Base+0xda>
   26230:	adds	r6, #1
   26232:	str	r3, [sp, #32]
   26234:	blx	8b84 <free@plt+0x4>
   26238:	cmp	r6, #3
   2623a:	ldr	r3, [sp, #32]
   2623c:	bne.n	26252 <exclude_super_stripes@@Base+0xba>
   2623e:	ldr	r1, [pc, #236]	; (2632c <exclude_super_stripes@@Base+0x194>)
   26240:	ldr	r2, [pc, #228]	; (26328 <exclude_super_stripes@@Base+0x190>)
   26242:	add	r1, pc
   26244:	ldr	r2, [r1, r2]
   26246:	ldr	r1, [r2, #0]
   26248:	ldr	r2, [sp, #60]	; 0x3c
   2624a:	eors	r1, r2
   2624c:	beq.n	2631a <exclude_super_stripes@@Base+0x182>
   2624e:	blx	8c90 <__stack_chk_fail@plt>
   26252:	movs	r2, #12
   26254:	mul.w	r1, r2, r6
   26258:	mov.w	r2, #16384	; 0x4000
   2625c:	sub.w	r3, r1, #32
   26260:	rsb	r0, r1, #32
   26264:	lsl.w	r3, r2, r3
   26268:	lsr.w	r0, r2, r0
   2626c:	orrs	r3, r0
   2626e:	lsls	r2, r1
   26270:	b.n	26208 <exclude_super_stripes@@Base+0x70>
   26272:	add.w	r0, r0, r2, lsl #3
   26276:	ldr.w	r1, [r4, #49]	; 0x31
   2627a:	ldrd	r2, r3, [r4, #40]	; 0x28
   2627e:	ldrd	sl, fp, [r0]
   26282:	ldr.w	r0, [r4, #53]	; 0x35
   26286:	adds	r1, r1, r2
   26288:	str	r1, [sp, #24]
   2628a:	adc.w	r1, r0, r3
   2628e:	str	r1, [sp, #28]
   26290:	ldrd	r0, r1, [sp, #24]
   26294:	cmp	fp, r1
   26296:	it	eq
   26298:	cmpeq	sl, r0
   2629a:	bcs.n	26226 <exclude_super_stripes@@Base+0x8e>
   2629c:	ldr.w	ip, [sp, #52]	; 0x34
   262a0:	mov	r0, ip
   262a2:	asrs	r1, r0, #31
   262a4:	strd	r0, r1, [sp, #32]
   262a8:	adds.w	r0, sl, ip
   262ac:	adc.w	r1, fp, ip, asr #31
   262b0:	cmp	r3, r1
   262b2:	it	eq
   262b4:	cmpeq	r2, r0
   262b6:	bcs.n	26226 <exclude_super_stripes@@Base+0x8e>
   262b8:	cmp	fp, r3
   262ba:	it	eq
   262bc:	cmpeq	sl, r2
   262be:	bcs.n	262f8 <exclude_super_stripes@@Base+0x160>
   262c0:	subs.w	r8, r0, r2
   262c4:	sbc.w	r9, r1, r3
   262c8:	ldrd	r1, r0, [r4, #80]	; 0x50
   262cc:	adds.w	r1, r1, r8
   262d0:	adc.w	r0, r0, r9
   262d4:	strd	r1, r0, [r4, #80]	; 0x50
   262d8:	movs	r1, #4
   262da:	str	r1, [sp, #8]
   262dc:	adds.w	r1, r2, r8
   262e0:	adc.w	r0, r3, r9
   262e4:	adds.w	r1, r1, #4294967295	; 0xffffffff
   262e8:	adc.w	r0, r0, #4294967295	; 0xffffffff
   262ec:	strd	r1, r0, [sp]
   262f0:	mov	r0, r7
   262f2:	bl	1b15c <set_extent_bits@@Base>
   262f6:	b.n	26226 <exclude_super_stripes@@Base+0x8e>
   262f8:	ldr	r3, [sp, #24]
   262fa:	subs.w	r8, r3, sl
   262fe:	ldr	r3, [sp, #28]
   26300:	sbc.w	r9, r3, fp
   26304:	ldrd	r2, r3, [sp, #32]
   26308:	cmp	r3, r9
   2630a:	it	eq
   2630c:	cmpeq	r2, r8
   2630e:	itt	cc
   26310:	movcc	r8, r2
   26312:	movcc	r9, r3
   26314:	mov	r2, sl
   26316:	mov	r3, fp
   26318:	b.n	262c8 <exclude_super_stripes@@Base+0x130>
   2631a:	mov	r0, r3
   2631c:	add	sp, #68	; 0x44
   2631e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26322:	nop
   26324:	ldr	r3, [pc, #496]	; (26518 <btrfs_read_block_groups@@Base+0x1e8>)
   26326:	movs	r4, r0
   26328:	lsls	r0, r1, #10
   2632a:	movs	r0, r0
   2632c:	ldr	r2, [pc, #856]	; (26688 <btrfs_add_block_group@@Base+0xac>)
   2632e:	movs	r4, r0

00026330 <btrfs_read_block_groups@@Base>:
   26330:	ldr	r2, [pc, #660]	; (265c8 <btrfs_read_block_groups@@Base+0x298>)
   26332:	ldr	r3, [pc, #664]	; (265cc <btrfs_read_block_groups@@Base+0x29c>)
   26334:	add	r2, pc
   26336:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2633a:	sub	sp, #204	; 0xcc
   2633c:	ldr	r3, [r2, r3]
   2633e:	movs	r6, #0
   26340:	add.w	r9, sp, #104	; 0x68
   26344:	ldr.w	r8, [r0, #24]
   26348:	mov	r4, r0
   2634a:	mov	fp, r6
   2634c:	add	r0, sp, #128	; 0x80
   2634e:	ldr	r3, [r3, #0]
   26350:	str	r3, [sp, #196]	; 0xc4
   26352:	mov.w	r3, #0
   26356:	movs	r3, #192	; 0xc0
   26358:	strd	r6, r6, [sp, #64]	; 0x40
   2635c:	strb.w	r6, [sp, #73]	; 0x49
   26360:	strb.w	r6, [sp, #74]	; 0x4a
   26364:	strb.w	r6, [sp, #75]	; 0x4b
   26368:	strb.w	r6, [sp, #76]	; 0x4c
   2636c:	strb.w	r6, [sp, #77]	; 0x4d
   26370:	strb.w	r6, [sp, #78]	; 0x4e
   26374:	strb.w	r6, [sp, #79]	; 0x4f
   26378:	strb.w	r6, [sp, #80]	; 0x50
   2637c:	strb.w	r3, [sp, #72]	; 0x48
   26380:	bl	1c6e8 <btrfs_init_path@@Base>
   26384:	str	r6, [sp, #52]	; 0x34
   26386:	add.w	sl, sp, #128	; 0x80
   2638a:	movs	r5, #0
   2638c:	add	r2, sp, #64	; 0x40
   2638e:	mov	r1, r8
   26390:	mov	r3, sl
   26392:	mov	r0, r5
   26394:	strd	r5, r5, [sp]
   26398:	bl	1eadc <btrfs_search_slot@@Base>
   2639c:	subs	r7, r0, #0
   2639e:	blt.n	263c0 <btrfs_read_block_groups@@Base+0x90>
   263a0:	ldr	r0, [sp, #128]	; 0x80
   263a2:	ldr	r2, [sp, #160]	; 0xa0
   263a4:	ldr.w	r3, [r0, #192]	; 0xc0
   263a8:	cmp	r3, r2
   263aa:	bhi.n	263dc <btrfs_read_block_groups@@Base+0xac>
   263ac:	ldr.w	r0, [r8, #464]	; 0x1d0
   263b0:	mov	r1, sl
   263b2:	strb.w	r5, [sp, #193]	; 0xc1
   263b6:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   263ba:	subs	r7, r0, #0
   263bc:	beq.n	263a0 <btrfs_read_block_groups@@Base+0x70>
   263be:	bge.n	26404 <btrfs_read_block_groups@@Base+0xd4>
   263c0:	add	r0, sp, #128	; 0x80
   263c2:	bl	1c6f8 <btrfs_release_path@@Base>
   263c6:	ldr	r2, [pc, #520]	; (265d0 <btrfs_read_block_groups@@Base+0x2a0>)
   263c8:	ldr	r3, [pc, #512]	; (265cc <btrfs_read_block_groups@@Base+0x29c>)
   263ca:	add	r2, pc
   263cc:	ldr	r3, [r2, r3]
   263ce:	ldr	r2, [r3, #0]
   263d0:	ldr	r3, [sp, #196]	; 0xc4
   263d2:	eors	r2, r3
   263d4:	beq.w	265be <btrfs_read_block_groups@@Base+0x28e>
   263d8:	blx	8c90 <__stack_chk_fail@plt>
   263dc:	mov	r1, r9
   263de:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   263e2:	ldrd	r6, r7, [sp, #104]	; 0x68
   263e6:	ldrd	r2, r3, [sp, #64]	; 0x40
   263ea:	cmp	r7, r3
   263ec:	it	eq
   263ee:	cmpeq	r6, r2
   263f0:	bcc.n	263fc <btrfs_read_block_groups@@Base+0xcc>
   263f2:	ldrb.w	r3, [sp, #112]	; 0x70
   263f6:	cmp	r3, #192	; 0xc0
   263f8:	beq.w	26584 <btrfs_read_block_groups@@Base+0x254>
   263fc:	ldr	r3, [sp, #160]	; 0xa0
   263fe:	adds	r3, #1
   26400:	str	r3, [sp, #160]	; 0xa0
   26402:	b.n	263a0 <btrfs_read_block_groups@@Base+0x70>
   26404:	movs	r7, #0
   26406:	b.n	263c0 <btrfs_read_block_groups@@Base+0x90>
   26408:	ldr.w	r2, [sp, #93]	; 0x5d
   2640c:	ldr.w	r3, [sp, #97]	; 0x61
   26410:	orrs	r3, r2
   26412:	beq.n	264ae <btrfs_read_block_groups@@Base+0x17e>
   26414:	movs	r1, #120	; 0x78
   26416:	movs	r0, #1
   26418:	blx	8ab8 <calloc@plt+0x4>
   2641c:	mov	r5, r0
   2641e:	cmp	r0, #0
   26420:	beq.w	26576 <btrfs_read_block_groups@@Base+0x246>
   26424:	movs	r2, #25
   26426:	mov	r0, r7
   26428:	mla	r2, r2, sl, r7
   2642c:	movs	r3, #24
   2642e:	mov	r1, r9
   26430:	add.w	r7, r5, #40	; 0x28
   26434:	ldr.w	r2, [r2, #214]	; 0xd6
   26438:	adds	r2, #101	; 0x65
   2643a:	bl	1bbba <read_extent_buffer@@Base>
   2643e:	ldmia	r6!, {r0, r1, r2, r3}
   26440:	stmia	r7!, {r0, r1, r2, r3}
   26442:	ldr	r3, [r6, #0]
   26444:	movs	r6, #0
   26446:	ldrd	r0, r1, [sp, #104]	; 0x68
   2644a:	strb	r3, [r7, #0]
   2644c:	ldr	r3, [sp, #52]	; 0x34
   2644e:	strd	r0, r1, [r5, #72]	; 0x48
   26452:	str	r6, [r5, #104]	; 0x68
   26454:	strd	r3, fp, [r5, #88]	; 0x58
   26458:	ldrd	r2, r3, [sp, #120]	; 0x78
   2645c:	and.w	r1, r2, #1
   26460:	strd	r1, r6, [sp, #24]
   26464:	ldrd	r0, r1, [sp, #24]
   26468:	strd	r2, r3, [r5, #96]	; 0x60
   2646c:	orrs	r1, r0
   2646e:	bne.n	264f4 <btrfs_read_block_groups@@Base+0x1c4>
   26470:	and.w	r1, r2, #2
   26474:	strd	r1, r6, [sp, #32]
   26478:	ldrd	r0, r1, [sp, #32]
   2647c:	orrs	r1, r0
   2647e:	bne.n	264f8 <btrfs_read_block_groups@@Base+0x1c8>
   26480:	and.w	r1, r2, #4
   26484:	strd	r1, r6, [sp, #40]	; 0x28
   26488:	ldrd	r0, r1, [sp, #40]	; 0x28
   2648c:	orrs	r1, r0
   2648e:	it	ne
   26490:	movne	r6, #4
   26492:	mov	r0, r4
   26494:	bl	22e18 <btrfs_create_tree@@Base+0x1fc>
   26498:	ldrd	r2, r3, [r5, #40]	; 0x28
   2649c:	bl	2e760 <btrfs_chunk_readonly@@Base>
   264a0:	subs	r7, r0, #0
   264a2:	bge.n	264fc <btrfs_read_block_groups@@Base+0x1cc>
   264a4:	mov	r0, r5
   264a6:	blx	8b84 <free@plt+0x4>
   264aa:	adds	r3, r7, #2
   264ac:	bne.n	263c0 <btrfs_read_block_groups@@Base+0x90>
   264ae:	ldr.w	r0, [sp, #73]	; 0x49
   264b2:	ldr.w	r1, [sp, #77]	; 0x4d
   264b6:	ldrd	r3, r2, [sp, #64]	; 0x40
   264ba:	orrs.w	r5, r0, r1
   264be:	bne.n	2657c <btrfs_read_block_groups@@Base+0x24c>
   264c0:	adds	r3, #1
   264c2:	adc.w	r2, r2, #0
   264c6:	add	r0, sp, #128	; 0x80
   264c8:	strd	r3, r2, [sp, #64]	; 0x40
   264cc:	movs	r2, #0
   264ce:	strb.w	r2, [sp, #73]	; 0x49
   264d2:	strb.w	r2, [sp, #74]	; 0x4a
   264d6:	strb.w	r2, [sp, #75]	; 0x4b
   264da:	strb.w	r2, [sp, #76]	; 0x4c
   264de:	strb.w	r2, [sp, #77]	; 0x4d
   264e2:	strb.w	r2, [sp, #78]	; 0x4e
   264e6:	strb.w	r2, [sp, #79]	; 0x4f
   264ea:	strb.w	r2, [sp, #80]	; 0x50
   264ee:	bl	1c6f8 <btrfs_release_path@@Base>
   264f2:	b.n	26386 <btrfs_read_block_groups@@Base+0x56>
   264f4:	movs	r6, #2
   264f6:	b.n	26492 <btrfs_read_block_groups@@Base+0x162>
   264f8:	movs	r6, #16
   264fa:	b.n	26492 <btrfs_read_block_groups@@Base+0x162>
   264fc:	it	ne
   264fe:	movne	r3, #1
   26500:	mov	r1, r5
   26502:	it	ne
   26504:	strne	r3, [r5, #108]	; 0x6c
   26506:	mov	r0, r4
   26508:	bl	26198 <exclude_super_stripes@@Base>
   2650c:	add	r3, sp, #60	; 0x3c
   2650e:	str	r3, [sp, #16]
   26510:	mov	r0, r4
   26512:	ldrd	r2, r3, [r5, #72]	; 0x48
   26516:	strd	r2, r3, [sp, #8]
   2651a:	ldr.w	r2, [r5, #49]	; 0x31
   2651e:	ldr.w	r3, [r5, #53]	; 0x35
   26522:	strd	r2, r3, [sp]
   26526:	ldrd	r2, r3, [r5, #96]	; 0x60
   2652a:	bl	25354 <update_space_info@@Base>
   2652e:	subs	r7, r0, #0
   26530:	blt.n	264a4 <btrfs_read_block_groups@@Base+0x174>
   26532:	ldr	r3, [sp, #60]	; 0x3c
   26534:	orr.w	r6, r6, #8
   26538:	add.w	r0, r4, #128	; 0x80
   2653c:	str	r3, [r5, #60]	; 0x3c
   2653e:	ldrd	r2, r3, [r5, #40]	; 0x28
   26542:	str	r6, [sp, #8]
   26544:	ldr.w	r1, [r5, #49]	; 0x31
   26548:	ldr.w	r6, [r5, #53]	; 0x35
   2654c:	adds	r1, r1, r2
   2654e:	adc.w	r6, r3, r6
   26552:	adds.w	r1, r1, #4294967295	; 0xffffffff
   26556:	adc.w	r6, r6, #4294967295	; 0xffffffff
   2655a:	strd	r1, r6, [sp]
   2655e:	mov	r6, r0
   26560:	bl	1b15c <set_extent_bits@@Base>
   26564:	movs	r3, #0
   26566:	str	r5, [sp, #0]
   26568:	str	r3, [sp, #4]
   2656a:	mov	r0, r6
   2656c:	ldrd	r2, r3, [r5, #40]	; 0x28
   26570:	bl	1b46a <set_state_private@@Base>
   26574:	b.n	264ae <btrfs_read_block_groups@@Base+0x17e>
   26576:	mvn.w	r7, #11
   2657a:	b.n	263c0 <btrfs_read_block_groups@@Base+0x90>
   2657c:	adds	r3, r0, r3
   2657e:	adc.w	r2, r1, r2
   26582:	b.n	264c6 <btrfs_read_block_groups@@Base+0x196>
   26584:	ldr	r2, [sp, #160]	; 0xa0
   26586:	add	r1, sp, #64	; 0x40
   26588:	ldr	r0, [sp, #128]	; 0x80
   2658a:	add	r6, sp, #84	; 0x54
   2658c:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   26590:	ldr	r7, [sp, #128]	; 0x80
   26592:	ldr.w	sl, [sp, #160]	; 0xa0
   26596:	mov	r1, r6
   26598:	mov	r0, r7
   2659a:	mov	r2, sl
   2659c:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   265a0:	ldrb.w	r3, [sp, #92]	; 0x5c
   265a4:	cmp	r3, #192	; 0xc0
   265a6:	beq.w	26408 <btrfs_read_block_groups@@Base+0xd8>
   265aa:	ldr	r1, [pc, #40]	; (265d4 <btrfs_read_block_groups@@Base+0x2a4>)
   265ac:	movw	r2, #2684	; 0xa7c
   265b0:	ldr	r0, [pc, #36]	; (265d8 <btrfs_read_block_groups@@Base+0x2a8>)
   265b2:	add	r1, pc
   265b4:	addw	r1, r1, #526	; 0x20e
   265b8:	add	r0, pc
   265ba:	bl	23694 <btrfs_create_tree@@Base+0xa78>
   265be:	mov	r0, r7
   265c0:	add	sp, #204	; 0xcc
   265c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   265c6:	nop
   265c8:	ldr	r1, [pc, #912]	; (2695c <btrfs_make_block_group@@Base+0x204>)
   265ca:	movs	r4, r0
   265cc:	lsls	r0, r1, #10
   265ce:	movs	r0, r0
   265d0:	ldr	r1, [pc, #312]	; (2670c <btrfs_add_block_group@@Base+0x130>)
   265d2:	movs	r4, r0
   265d4:	ldmia	r7, {r1, r3, r6, r7}
   265d6:	movs	r1, r0
   265d8:	ldmia	r6!, {r1, r2, r5}
   265da:	movs	r1, r0

000265dc <btrfs_add_block_group@@Base>:
   265dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265e0:	sub	sp, #52	; 0x34
   265e2:	mov	r5, r0
   265e4:	add.w	fp, r0, #128	; 0x80
   265e8:	strd	r2, r3, [sp, #40]	; 0x28
   265ec:	movs	r1, #120	; 0x78
   265ee:	ldrd	r6, r3, [sp, #88]	; 0x58
   265f2:	movs	r0, #1
   265f4:	ldrd	r7, r8, [sp, #96]	; 0x60
   265f8:	ldr.w	sl, [pc, #320]	; 2673c <btrfs_add_block_group@@Base+0x160>
   265fc:	str	r3, [sp, #36]	; 0x24
   265fe:	ldr	r3, [sp, #104]	; 0x68
   26600:	add	sl, pc
   26602:	ldr.w	r9, [pc, #316]	; 26740 <btrfs_add_block_group@@Base+0x164>
   26606:	addw	sl, sl, #547	; 0x223
   2660a:	str	r3, [sp, #28]
   2660c:	add	r9, pc
   2660e:	ldr	r3, [sp, #108]	; 0x6c
   26610:	str	r3, [sp, #32]
   26612:	blx	8ab8 <calloc@plt+0x4>
   26616:	mov	r2, sl
   26618:	mov	r1, r9
   2661a:	movw	r3, #2789	; 0xae5
   2661e:	mov	r4, r0
   26620:	clz	r0, r0
   26624:	lsrs	r0, r0, #5
   26626:	str	r0, [sp, #0]
   26628:	ldr	r0, [pc, #280]	; (26744 <btrfs_add_block_group@@Base+0x168>)
   2662a:	add	r0, pc
   2662c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   26630:	ldr	r3, [sp, #28]
   26632:	mov	r1, r4
   26634:	mov	r0, r5
   26636:	strd	r7, r8, [r4, #40]	; 0x28
   2663a:	str.w	r3, [r4, #49]	; 0x31
   2663e:	ldr	r3, [sp, #32]
   26640:	str	r6, [r4, #96]	; 0x60
   26642:	str.w	r3, [r4, #53]	; 0x35
   26646:	movs	r3, #192	; 0xc0
   26648:	strb.w	r3, [r4, #48]	; 0x30
   2664c:	ldr	r3, [sp, #40]	; 0x28
   2664e:	str	r3, [r4, #72]	; 0x48
   26650:	ldr	r3, [sp, #44]	; 0x2c
   26652:	str	r3, [r4, #76]	; 0x4c
   26654:	ldr	r3, [sp, #36]	; 0x24
   26656:	str	r3, [r4, #100]	; 0x64
   26658:	bl	26198 <exclude_super_stripes@@Base>
   2665c:	add.w	r3, r4, #60	; 0x3c
   26660:	str	r3, [sp, #16]
   26662:	mov	r0, r5
   26664:	ldr	r3, [sp, #40]	; 0x28
   26666:	str	r3, [sp, #8]
   26668:	ldr	r3, [sp, #44]	; 0x2c
   2666a:	str	r3, [sp, #12]
   2666c:	ldr	r3, [sp, #28]
   2666e:	str	r3, [sp, #0]
   26670:	ldr	r3, [sp, #32]
   26672:	str	r3, [sp, #4]
   26674:	ldrd	r2, r3, [r4, #96]	; 0x60
   26678:	bl	25354 <update_space_info@@Base>
   2667c:	mov	r2, sl
   2667e:	mov	r1, r9
   26680:	mov.w	r3, #2800	; 0xaf0
   26684:	ldr.w	sl, [pc, #192]	; 26748 <btrfs_add_block_group@@Base+0x16c>
   26688:	ldr.w	r9, [pc, #192]	; 2674c <btrfs_add_block_group@@Base+0x170>
   2668c:	add	sl, pc
   2668e:	addw	sl, sl, #547	; 0x223
   26692:	add	r9, pc
   26694:	str	r0, [sp, #0]
   26696:	ldr	r0, [pc, #184]	; (26750 <btrfs_add_block_group@@Base+0x174>)
   26698:	add	r0, pc
   2669a:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2669e:	mov.w	ip, #0
   266a2:	and.w	r2, r6, #1
   266a6:	mov	r3, ip
   266a8:	orrs	r3, r2
   266aa:	and.w	r0, r6, #4
   266ae:	mov	r1, ip
   266b0:	ite	eq
   266b2:	moveq	r3, ip
   266b4:	movne	r3, #2
   266b6:	orrs.w	r2, r0, r1
   266ba:	and.w	r0, r6, #2
   266be:	it	ne
   266c0:	orrne.w	r3, r3, #4
   266c4:	movs	r1, #0
   266c6:	orrs.w	r2, r0, r1
   266ca:	ldr	r2, [sp, #32]
   266cc:	it	ne
   266ce:	orrne.w	r3, r3, #16
   266d2:	mov	r0, fp
   266d4:	orr.w	r3, r3, #8
   266d8:	str	r3, [sp, #8]
   266da:	ldr	r3, [sp, #28]
   266dc:	adds.w	r3, r3, #4294967295	; 0xffffffff
   266e0:	adc.w	r2, r2, #4294967295	; 0xffffffff
   266e4:	adds	r3, r3, r7
   266e6:	adc.w	r2, r2, r8
   266ea:	strd	r3, r2, [sp]
   266ee:	mov	r2, r7
   266f0:	mov	r3, r8
   266f2:	bl	1b15c <set_extent_bits@@Base>
   266f6:	ldr	r1, [pc, #92]	; (26754 <btrfs_add_block_group@@Base+0x178>)
   266f8:	mov	r2, sl
   266fa:	movw	r3, #2806	; 0xaf6
   266fe:	add	r1, pc
   26700:	str	r1, [sp, #28]
   26702:	str	r0, [sp, #0]
   26704:	mov	r0, r9
   26706:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2670a:	mov	r2, r7
   2670c:	movs	r3, #0
   2670e:	mov	r0, fp
   26710:	str	r3, [sp, #4]
   26712:	mov	r3, r8
   26714:	str	r4, [sp, #0]
   26716:	bl	1b46a <set_state_private@@Base>
   2671a:	ldr	r1, [sp, #28]
   2671c:	mov	r2, sl
   2671e:	movw	r3, #2810	; 0xafa
   26722:	str	r0, [sp, #0]
   26724:	mov	r0, r9
   26726:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2672a:	mov	r0, r5
   2672c:	ldr	r3, [sp, #36]	; 0x24
   2672e:	mov	r2, r6
   26730:	bl	22e18 <btrfs_create_tree@@Base+0x1fc>
   26734:	mov	r0, r4
   26736:	add	sp, #52	; 0x34
   26738:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2673c:	ldmia	r7!, {r2, r3, r4, r5, r6}
   2673e:	movs	r1, r0
   26740:	ldmia	r0!, {r1, r2, r6}
   26742:	movs	r1, r0
   26744:	ldrh	r3, [r0, #24]
   26746:	movs	r1, r0
   26748:	ldmia	r6, {r4, r5, r6, r7}
   2674a:	movs	r1, r0
   2674c:	str	r4, [sp, #704]	; 0x2c0
   2674e:	movs	r1, r0
   26750:	str	r4, [sp, #680]	; 0x2a8
   26752:	movs	r1, r0
   26754:	stmia	r7!, {r2, r4, r6}
   26756:	movs	r1, r0

00026758 <btrfs_make_block_group@@Base>:
   26758:	push	{r4, r5, r6, r7, lr}
   2675a:	mov	r4, r0
   2675c:	ldr	r5, [pc, #144]	; (267f0 <btrfs_make_block_group@@Base+0x98>)
   2675e:	sub	sp, #68	; 0x44
   26760:	mov	r0, r1
   26762:	ldr	r1, [pc, #144]	; (267f4 <btrfs_make_block_group@@Base+0x9c>)
   26764:	add	r5, pc
   26766:	ldrd	r6, r7, [sp, #104]	; 0x68
   2676a:	ldr	r1, [r5, r1]
   2676c:	movs	r5, #0
   2676e:	ldr	r1, [r1, #0]
   26770:	str	r1, [sp, #60]	; 0x3c
   26772:	mov.w	r1, #0
   26776:	ldr	r1, [r0, #24]
   26778:	strd	r6, r7, [sp, #16]
   2677c:	ldrd	r6, r7, [sp, #96]	; 0x60
   26780:	str	r1, [sp, #28]
   26782:	strd	r6, r7, [sp, #8]
   26786:	ldrd	r6, r7, [sp, #88]	; 0x58
   2678a:	strd	r6, r7, [sp]
   2678e:	bl	265dc <btrfs_add_block_group@@Base>
   26792:	ldr	r1, [sp, #28]
   26794:	ldr	r3, [r0, #72]	; 0x48
   26796:	add.w	r2, r0, #40	; 0x28
   2679a:	str	r3, [sp, #36]	; 0x24
   2679c:	ldr	r3, [r0, #76]	; 0x4c
   2679e:	str	r3, [sp, #40]	; 0x28
   267a0:	ldr	r3, [r0, #96]	; 0x60
   267a2:	str	r3, [sp, #52]	; 0x34
   267a4:	ldr	r3, [r0, #100]	; 0x64
   267a6:	mov	r0, r4
   267a8:	str	r3, [sp, #56]	; 0x38
   267aa:	mov.w	r3, #256	; 0x100
   267ae:	strd	r3, r5, [sp, #44]	; 0x2c
   267b2:	movs	r3, #24
   267b4:	str	r3, [sp, #0]
   267b6:	add	r3, sp, #36	; 0x24
   267b8:	bl	1fb68 <btrfs_insert_item@@Base>
   267bc:	ldr	r2, [pc, #56]	; (267f8 <btrfs_make_block_group@@Base+0xa0>)
   267be:	ldr	r1, [pc, #60]	; (267fc <btrfs_make_block_group@@Base+0xa4>)
   267c0:	movw	r3, #2833	; 0xb11
   267c4:	add	r2, pc
   267c6:	addw	r2, r2, #569	; 0x239
   267ca:	add	r1, pc
   267cc:	str	r0, [sp, #0]
   267ce:	ldr	r0, [pc, #48]	; (26800 <btrfs_make_block_group@@Base+0xa8>)
   267d0:	add	r0, pc
   267d2:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   267d6:	ldr	r2, [pc, #44]	; (26804 <btrfs_make_block_group@@Base+0xac>)
   267d8:	ldr	r3, [pc, #24]	; (267f4 <btrfs_make_block_group@@Base+0x9c>)
   267da:	add	r2, pc
   267dc:	ldr	r3, [r2, r3]
   267de:	ldr	r2, [r3, #0]
   267e0:	ldr	r3, [sp, #60]	; 0x3c
   267e2:	eors	r2, r3
   267e4:	beq.n	267ea <btrfs_make_block_group@@Base+0x92>
   267e6:	blx	8c90 <__stack_chk_fail@plt>
   267ea:	mov	r0, r5
   267ec:	add	sp, #68	; 0x44
   267ee:	pop	{r4, r5, r6, r7, pc}
   267f0:	cmp	ip, r6
   267f2:	movs	r4, r0
   267f4:	lsls	r0, r1, #10
   267f6:	movs	r0, r0
   267f8:	ldmia	r5, {r3, r4, r5, r7}
   267fa:	movs	r1, r0
   267fc:	stmia	r6!, {r3, r7}
   267fe:	movs	r1, r0
   26800:	str	r3, [sp, #456]	; 0x1c8
   26802:	movs	r1, r0
   26804:	cmp	r6, r7
   26806:	movs	r4, r0
   26808:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2680c:	mov	r5, r1
   2680e:	ldr	r1, [pc, #412]	; (269ac <btrfs_make_block_group@@Base+0x254>)
   26810:	sub	sp, #76	; 0x4c
   26812:	mov	r7, r2
   26814:	ldr	r2, [pc, #408]	; (269b0 <btrfs_make_block_group@@Base+0x258>)
   26816:	add	r1, pc
   26818:	mov	r9, r3
   2681a:	ldrd	r6, r3, [sp, #112]	; 0x70
   2681e:	mov	r4, r0
   26820:	ldr	r2, [r1, r2]
   26822:	mov	r0, r5
   26824:	ldr	r2, [r2, #0]
   26826:	str	r2, [sp, #68]	; 0x44
   26828:	mov.w	r2, #0
   2682c:	mov	r2, r6
   2682e:	str	r3, [sp, #36]	; 0x24
   26830:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   26834:	ldr	r3, [sp, #36]	; 0x24
   26836:	str	r0, [sp, #44]	; 0x2c
   26838:	cbnz	r0, 2686c <btrfs_make_block_group@@Base+0x114>
   2683a:	movs	r1, #0
   2683c:	movs	r0, #0
   2683e:	add	r2, sp, #44	; 0x2c
   26840:	strd	r0, r1, [sp, #8]
   26844:	strd	r0, r1, [sp]
   26848:	mov	r0, r5
   2684a:	str	r2, [sp, #16]
   2684c:	mov	r2, r6
   2684e:	bl	25354 <update_space_info@@Base>
   26852:	ldr	r2, [pc, #352]	; (269b4 <btrfs_make_block_group@@Base+0x25c>)
   26854:	ldr	r1, [pc, #352]	; (269b8 <btrfs_make_block_group@@Base+0x260>)
   26856:	mov.w	r3, #1712	; 0x6b0
   2685a:	add	r2, pc
   2685c:	add.w	r2, r2, #592	; 0x250
   26860:	add	r1, pc
   26862:	str	r0, [sp, #0]
   26864:	ldr	r0, [pc, #340]	; (269bc <btrfs_make_block_group@@Base+0x264>)
   26866:	add	r0, pc
   26868:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2686c:	ldr.w	sl, [sp, #44]	; 0x2c
   26870:	ldr	r2, [pc, #332]	; (269c0 <btrfs_make_block_group@@Base+0x268>)
   26872:	ldr	r1, [pc, #336]	; (269c4 <btrfs_make_block_group@@Base+0x26c>)
   26874:	clz	r3, sl
   26878:	ldr	r0, [pc, #332]	; (269c8 <btrfs_make_block_group@@Base+0x270>)
   2687a:	add	r2, pc
   2687c:	lsrs	r3, r3, #5
   2687e:	add.w	r2, r2, #592	; 0x250
   26882:	str	r3, [sp, #0]
   26884:	add	r1, pc
   26886:	add	r0, pc
   26888:	movw	r3, #1714	; 0x6b2
   2688c:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   26890:	ldr.w	r8, [sl, #40]	; 0x28
   26894:	cmp.w	r8, #0
   26898:	bne.n	26936 <btrfs_make_block_group@@Base+0x1de>
   2689a:	ldrd	r0, r1, [sl, #8]
   2689e:	movs	r2, #7
   268a0:	bl	36360 <div_factor@@Base>
   268a4:	mov	sl, r0
   268a6:	ldr	r0, [sp, #44]	; 0x2c
   268a8:	mov	fp, r1
   268aa:	ldr	r2, [r0, #24]
   268ac:	ldrd	r3, r1, [r0, #16]
   268b0:	adds	r3, r3, r2
   268b2:	ldr	r2, [r0, #28]
   268b4:	adc.w	r1, r2, r1
   268b8:	ldr	r2, [r0, #32]
   268ba:	adds	r3, r3, r2
   268bc:	ldr	r2, [r0, #36]	; 0x24
   268be:	adc.w	r1, r2, r1
   268c2:	adds	r3, r3, r7
   268c4:	str	r3, [sp, #24]
   268c6:	adc.w	r3, r1, r9
   268ca:	str	r3, [sp, #28]
   268cc:	ldrd	r2, r3, [sp, #24]
   268d0:	cmp	r3, fp
   268d2:	it	eq
   268d4:	cmpeq	r2, sl
   268d6:	bcc.n	26936 <btrfs_make_block_group@@Base+0x1de>
   268d8:	ldrb.w	r1, [r5, #365]	; 0x16d
   268dc:	lsls	r2, r1, #31
   268de:	bpl.n	268ea <btrfs_make_block_group@@Base+0x192>
   268e0:	and.w	r2, r6, #4
   268e4:	mov	r3, r8
   268e6:	orrs	r3, r2
   268e8:	bne.n	26936 <btrfs_make_block_group@@Base+0x1de>
   268ea:	lsls	r3, r1, #30
   268ec:	bpl.n	268f8 <btrfs_make_block_group@@Base+0x1a0>
   268ee:	and.w	r2, r6, #2
   268f2:	movs	r3, #0
   268f4:	orrs	r3, r2
   268f6:	bne.n	26936 <btrfs_make_block_group@@Base+0x1de>
   268f8:	ldrb.w	r3, [r4, #33]	; 0x21
   268fc:	ands.w	r8, r3, #1
   26900:	bne.n	26936 <btrfs_make_block_group@@Base+0x1de>
   26902:	orr.w	r3, r3, #1
   26906:	strb.w	r3, [r4, #33]	; 0x21
   2690a:	ldrd	r2, r3, [r0]
   2690e:	mov	r1, r5
   26910:	mov	r0, r4
   26912:	strd	r2, r3, [sp]
   26916:	add	r3, sp, #56	; 0x38
   26918:	add	r2, sp, #48	; 0x30
   2691a:	bl	2d0bc <btrfs_alloc_chunk@@Base>
   2691e:	cmn.w	r0, #28
   26922:	bne.n	2694a <btrfs_make_block_group@@Base+0x1f2>
   26924:	ldr	r3, [sp, #44]	; 0x2c
   26926:	movs	r2, #1
   26928:	str	r2, [r3, #40]	; 0x28
   2692a:	ldrb.w	r3, [r4, #33]	; 0x21
   2692e:	bfi	r3, r8, #0, #1
   26932:	strb.w	r3, [r4, #33]	; 0x21
   26936:	ldr	r2, [pc, #148]	; (269cc <btrfs_make_block_group@@Base+0x274>)
   26938:	ldr	r3, [pc, #116]	; (269b0 <btrfs_make_block_group@@Base+0x258>)
   2693a:	add	r2, pc
   2693c:	ldr	r3, [r2, r3]
   2693e:	ldr	r2, [r3, #0]
   26940:	ldr	r3, [sp, #68]	; 0x44
   26942:	eors	r2, r3
   26944:	beq.n	269a4 <btrfs_make_block_group@@Base+0x24c>
   26946:	blx	8c90 <__stack_chk_fail@plt>
   2694a:	ldr.w	r9, [pc, #132]	; 269d0 <btrfs_make_block_group@@Base+0x278>
   2694e:	movw	r3, #1751	; 0x6d7
   26952:	ldr	r7, [pc, #128]	; (269d4 <btrfs_make_block_group@@Base+0x27c>)
   26954:	ldr	r6, [pc, #128]	; (269d8 <btrfs_make_block_group@@Base+0x280>)
   26956:	add	r9, pc
   26958:	add.w	r9, r9, #592	; 0x250
   2695c:	add	r7, pc
   2695e:	add	r6, pc
   26960:	str	r0, [sp, #0]
   26962:	mov	r2, r9
   26964:	mov	r1, r7
   26966:	mov	r0, r6
   26968:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2696c:	ldrd	r2, r3, [sp, #56]	; 0x38
   26970:	mov	r1, r5
   26972:	mov	r0, r4
   26974:	strd	r2, r3, [sp, #16]
   26978:	ldrd	r2, r3, [sp, #48]	; 0x30
   2697c:	strd	r2, r3, [sp, #8]
   26980:	ldr	r3, [sp, #44]	; 0x2c
   26982:	ldrd	r2, r3, [r3]
   26986:	strd	r2, r3, [sp]
   2698a:	movs	r2, #0
   2698c:	movs	r3, #0
   2698e:	bl	26758 <btrfs_make_block_group@@Base>
   26992:	movw	r3, #1755	; 0x6db
   26996:	mov	r2, r9
   26998:	mov	r1, r7
   2699a:	str	r0, [sp, #0]
   2699c:	mov	r0, r6
   2699e:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   269a2:	b.n	2692a <btrfs_make_block_group@@Base+0x1d2>
   269a4:	movs	r0, #0
   269a6:	add	sp, #76	; 0x4c
   269a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   269ac:	cmp	r2, r0
   269ae:	movs	r4, r0
   269b0:	lsls	r0, r1, #10
   269b2:	movs	r0, r0
   269b4:	ldmia	r5, {r1, r5}
   269b6:	movs	r1, r0
   269b8:	stmia	r5!, {r1, r4, r5, r6, r7}
   269ba:	movs	r1, r0
   269bc:	str	r2, [sp, #880]	; 0x370
   269be:	movs	r1, r0
   269c0:	ldmia	r5!, {r1}
   269c2:	movs	r1, r0
   269c4:	stmia	r5!, {r1, r2, r3, r6, r7}
   269c6:	movs	r1, r0
   269c8:	ldmia	r3, {r0, r1, r2, r3, r4, r5, r6}
   269ca:	movs	r1, r0
   269cc:	mvns	r6, r3
   269ce:	movs	r4, r0
   269d0:	ldmia	r4!, {r1, r2, r5}
   269d2:	movs	r1, r0
   269d4:	stmia	r4!, {r1, r2, r4, r5, r6, r7}
   269d6:	movs	r1, r0
   269d8:	str	r1, [sp, #912]	; 0x390
   269da:	movs	r1, r0

000269dc <btrfs_reserve_extent@@Base>:
   269dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   269e0:	mov	sl, r2
   269e2:	vpush	{d8-d10}
   269e6:	mov	r6, r1
   269e8:	ldr.w	r2, [pc, #2256]	; 272bc <btrfs_reserve_extent@@Base+0x8e0>
   269ec:	mov	fp, r3
   269ee:	ldr.w	r1, [pc, #2256]	; 272c0 <btrfs_reserve_extent@@Base+0x8e4>
   269f2:	add	r2, pc
   269f4:	sub	sp, #252	; 0xfc
   269f6:	add	r1, pc
   269f8:	ldr.w	r5, [r6, #464]	; 0x1d0
   269fc:	ldr	r3, [sp, #312]	; 0x138
   269fe:	str	r2, [sp, #168]	; 0xa8
   26a00:	ldr.w	r2, [pc, #2240]	; 272c4 <btrfs_reserve_extent@@Base+0x8e8>
   26a04:	str	r3, [sp, #172]	; 0xac
   26a06:	ldrb.w	r3, [sp, #340]	; 0x154
   26a0a:	str	r0, [sp, #60]	; 0x3c
   26a0c:	ldr	r2, [r1, r2]
   26a0e:	ldrd	r8, r9, [sp, #320]	; 0x140
   26a12:	ldr	r7, [sp, #336]	; 0x150
   26a14:	ldr	r2, [r2, #0]
   26a16:	str	r2, [sp, #244]	; 0xf4
   26a18:	mov.w	r2, #0
   26a1c:	cmp	r3, #0
   26a1e:	beq.w	26f0c <btrfs_reserve_extent@@Base+0x530>
   26a22:	ldrd	r3, r4, [r5, #248]	; 0xf8
   26a26:	ldrd	r1, r2, [r5, #272]	; 0x110
   26a2a:	ands	r3, r1
   26a2c:	orr.w	r3, r3, #1
   26a30:	str	r3, [sp, #40]	; 0x28
   26a32:	ands	r4, r2
   26a34:	ldr.w	r3, [r6, #488]	; 0x1e8
   26a38:	cbnz	r3, 26a4a <btrfs_reserve_extent@@Base+0x6e>
   26a3a:	ldr.w	r3, [r6, #451]	; 0x1c3
   26a3e:	ldr.w	r2, [r6, #447]	; 0x1bf
   26a42:	cmp	r3, #0
   26a44:	it	eq
   26a46:	cmpeq	r2, #7
   26a48:	bne.n	26ac0 <btrfs_reserve_extent@@Base+0xe4>
   26a4a:	ldr	r1, [sp, #40]	; 0x28
   26a4c:	movs	r3, #0
   26a4e:	and.w	r2, r1, #4
   26a52:	orrs	r3, r2
   26a54:	bne.n	26a8a <btrfs_reserve_extent@@Base+0xae>
   26a56:	movs	r2, #4
   26a58:	movs	r3, #0
   26a5a:	mov	r1, r5
   26a5c:	strd	r2, r3, [sp]
   26a60:	ldr	r0, [sp, #60]	; 0x3c
   26a62:	mov	r2, sl
   26a64:	mov	r3, fp
   26a66:	bl	26808 <btrfs_make_block_group@@Base+0xb0>
   26a6a:	ldr.w	r2, [pc, #2140]	; 272c8 <btrfs_reserve_extent@@Base+0x8ec>
   26a6e:	ldr.w	r1, [pc, #2140]	; 272cc <btrfs_reserve_extent@@Base+0x8f0>
   26a72:	movw	r3, #2360	; 0x938
   26a76:	add	r2, pc
   26a78:	addw	r2, r2, #607	; 0x25f
   26a7c:	add	r1, pc
   26a7e:	str	r0, [sp, #0]
   26a80:	ldr.w	r0, [pc, #2124]	; 272d0 <btrfs_reserve_extent@@Base+0x8f4>
   26a84:	add	r0, pc
   26a86:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   26a8a:	ldr	r3, [sp, #40]	; 0x28
   26a8c:	adds.w	r2, sl, #2097152	; 0x200000
   26a90:	mov	r1, r5
   26a92:	ldr	r0, [sp, #60]	; 0x3c
   26a94:	strd	r3, r4, [sp]
   26a98:	adc.w	r3, fp, #0
   26a9c:	bl	26808 <btrfs_make_block_group@@Base+0xb0>
   26aa0:	ldr.w	r2, [pc, #2096]	; 272d4 <btrfs_reserve_extent@@Base+0x8f8>
   26aa4:	ldr.w	r1, [pc, #2096]	; 272d8 <btrfs_reserve_extent@@Base+0x8fc>
   26aa8:	movw	r3, #2364	; 0x93c
   26aac:	add	r2, pc
   26aae:	addw	r2, r2, #607	; 0x25f
   26ab2:	add	r1, pc
   26ab4:	str	r0, [sp, #0]
   26ab6:	ldr.w	r0, [pc, #2084]	; 272dc <btrfs_reserve_extent@@Base+0x900>
   26aba:	add	r0, pc
   26abc:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   26ac0:	ldr.w	r2, [r5, #388]	; 0x184
   26ac4:	movs	r3, #0
   26ac6:	ldr.w	r4, [pc, #2072]	; 272e0 <btrfs_reserve_extent@@Base+0x904>
   26aca:	cmp	fp, r3
   26acc:	it	eq
   26ace:	cmpeq	sl, r2
   26ad0:	ldr.w	r1, [pc, #2064]	; 272e4 <btrfs_reserve_extent@@Base+0x908>
   26ad4:	ldr.w	r0, [pc, #2064]	; 272e8 <btrfs_reserve_extent@@Base+0x90c>
   26ad8:	add	r4, pc
   26ada:	ite	cc
   26adc:	movcc	r3, #1
   26ade:	movcs	r3, #0
   26ae0:	add	r1, pc
   26ae2:	add	r0, pc
   26ae4:	addw	r2, r4, #607	; 0x25f
   26ae8:	str	r3, [sp, #0]
   26aea:	movw	r3, #2367	; 0x93f
   26aee:	str	r1, [sp, #32]
   26af0:	str	r0, [sp, #24]
   26af2:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   26af6:	ldr	r3, [sp, #60]	; 0x3c
   26af8:	ldr	r1, [sp, #32]
   26afa:	ldr	r0, [sp, #24]
   26afc:	ldrd	r2, r3, [r3, #16]
   26b00:	strd	r2, r3, [sp, #80]	; 0x50
   26b04:	ldr	r3, [sp, #60]	; 0x3c
   26b06:	ldrd	r2, r3, [r3, #24]
   26b0a:	strd	r2, r3, [sp, #88]	; 0x58
   26b0e:	ldr.w	r3, [r6, #464]	; 0x1d0
   26b12:	ldr	r3, [r3, #24]
   26b14:	str	r3, [sp, #44]	; 0x2c
   26b16:	ldr.w	r3, [r3, #464]	; 0x1d0
   26b1a:	ldr.w	r2, [r3, #388]	; 0x184
   26b1e:	vmov	s16, r3
   26b22:	movs	r3, #0
   26b24:	cmp	fp, r3
   26b26:	it	eq
   26b28:	cmpeq	sl, r2
   26b2a:	add.w	r2, r4, #628	; 0x274
   26b2e:	ite	cc
   26b30:	movcc	r3, #1
   26b32:	movcs	r3, #0
   26b34:	str	r3, [sp, #0]
   26b36:	mov.w	r3, #2208	; 0x8a0
   26b3a:	bl	22f74 <btrfs_create_tree@@Base+0x358>
   26b3e:	movs	r3, #168	; 0xa8
   26b40:	strb	r3, [r7, #8]
   26b42:	orrs.w	r3, r8, r9
   26b46:	beq.w	26f3a <btrfs_reserve_extent@@Base+0x55e>
   26b4a:	vmov	r0, s16
   26b4e:	mov	r2, r8
   26b50:	mov	r3, r9
   26b52:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   26b56:	mov	r1, r0
   26b58:	cbnz	r0, 26b62 <btrfs_reserve_extent@@Base+0x186>
   26b5a:	mov.w	r8, #0
   26b5e:	mov.w	r9, #0
   26b62:	ldr	r3, [sp, #40]	; 0x28
   26b64:	mov	r2, r8
   26b66:	str	r3, [sp, #0]
   26b68:	mov	r3, r9
   26b6a:	ldr	r0, [sp, #44]	; 0x2c
   26b6c:	ldr.w	r0, [r0, #464]	; 0x1d0
   26b70:	bl	23a60 <btrfs_lookup_block_group@@Base+0x30c>
   26b74:	ldr	r3, [sp, #172]	; 0xac
   26b76:	movs	r2, #0
   26b78:	adds.w	r3, sl, r3
   26b7c:	str	r3, [sp, #112]	; 0x70
   26b7e:	movs	r3, #0
   26b80:	strd	r2, r3, [sp, #24]
   26b84:	movs	r3, #0
   26b86:	str	r3, [sp, #56]	; 0x38
   26b88:	str	r3, [sp, #100]	; 0x64
   26b8a:	ldr.w	r3, [pc, #1888]	; 272ec <btrfs_reserve_extent@@Base+0x910>
   26b8e:	add	r3, pc
   26b90:	str	r3, [sp, #180]	; 0xb4
   26b92:	adds.w	r3, sl, #4294967295	; 0xffffffff
   26b96:	str	r3, [sp, #184]	; 0xb8
   26b98:	adc.w	r3, fp, #4294967295	; 0xffffffff
   26b9c:	str	r3, [sp, #188]	; 0xbc
   26b9e:	mov	r4, r0
   26ba0:	ldr	r3, [sp, #44]	; 0x2c
   26ba2:	movs	r2, #0
   26ba4:	ldr	r1, [sp, #24]
   26ba6:	ldr.w	r3, [r3, #464]	; 0x1d0
   26baa:	ldr.w	r3, [r3, #392]	; 0x188
   26bae:	adds.w	r3, r3, #4294967295	; 0xffffffff
   26bb2:	adc.w	r2, r2, #4294967295	; 0xffffffff
   26bb6:	adds.w	r0, r1, #4294967295	; 0xffffffff
   26bba:	ldr	r1, [sp, #28]
   26bbc:	orr.w	r3, r3, r0
   26bc0:	adc.w	r1, r1, #4294967295	; 0xffffffff
   26bc4:	adds	r3, #1
   26bc6:	orr.w	r2, r2, r1
   26bca:	str	r3, [sp, #48]	; 0x30
   26bcc:	adc.w	r3, r2, #0
   26bd0:	str	r3, [sp, #52]	; 0x34
   26bd2:	cbnz	r4, 26bf2 <btrfs_reserve_extent@@Base+0x216>
   26bd4:	vmov	r0, s16
   26bd8:	ldrd	r2, r3, [sp, #48]	; 0x30
   26bdc:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   26be0:	mov	r4, r0
   26be2:	cbnz	r0, 26bf2 <btrfs_reserve_extent@@Base+0x216>
   26be4:	vmov	r0, s16
   26be8:	movs	r2, #0
   26bea:	movs	r3, #0
   26bec:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   26bf0:	mov	r4, r0
   26bf2:	movs	r2, #0
   26bf4:	movs	r3, #0
   26bf6:	ldr	r1, [sp, #112]	; 0x70
   26bf8:	strd	r2, r3, [sp, #208]	; 0xd0
   26bfc:	strd	r2, r3, [sp, #216]	; 0xd8
   26c00:	cmp	r4, #0
   26c02:	beq.w	27046 <btrfs_reserve_extent@@Base+0x66a>
   26c06:	ldrd	r2, r3, [sp, #48]	; 0x30
   26c0a:	strd	r2, r3, [sp, #24]
   26c0e:	movs	r3, #0
   26c10:	mov	r2, r1
   26c12:	str	r3, [sp, #116]	; 0x74
   26c14:	asrs	r3, r1, #31
   26c16:	strd	r2, r3, [sp, #104]	; 0x68
   26c1a:	ldr	r3, [r4, #104]	; 0x68
   26c1c:	cmp	r3, #0
   26c1e:	bne.w	26da8 <btrfs_reserve_extent@@Base+0x3cc>
   26c22:	ldr	r3, [sp, #44]	; 0x2c
   26c24:	ldr.w	r3, [r3, #464]	; 0x1d0
   26c28:	ldr	r3, [r3, #24]
   26c2a:	str	r3, [sp, #96]	; 0x60
   26c2c:	ldr.w	r3, [r3, #464]	; 0x1d0
   26c30:	mov	r9, r3
   26c32:	bl	1c6f0 <btrfs_alloc_path@@Base>
   26c36:	mov	r6, r0
   26c38:	cmp	r0, #0
   26c3a:	beq.w	2704e <btrfs_reserve_extent@@Base+0x672>
   26c3e:	movs	r3, #2
   26c40:	strb.w	r3, [r0, #64]	; 0x40
   26c44:	ldrd	r2, r3, [r4, #40]	; 0x28
   26c48:	mov.w	r8, #0
   26c4c:	ldr	r1, [sp, #96]	; 0x60
   26c4e:	cmp	r3, #0
   26c50:	strd	r8, r8, [sp]
   26c54:	it	eq
   26c56:	cmpeq.w	r2, #65536	; 0x10000
   26c5a:	strd	r2, r3, [sp, #32]
   26c5e:	strb.w	r8, [sp, #233]	; 0xe9
   26c62:	ittt	cc
   26c64:	movcc.w	r2, #65536	; 0x10000
   26c68:	movcc	r3, #0
   26c6a:	strdcc	r2, r3, [sp, #32]
   26c6e:	ldrd	r2, r3, [sp, #32]
   26c72:	strb.w	r8, [sp, #234]	; 0xea
   26c76:	strb.w	r8, [sp, #235]	; 0xeb
   26c7a:	strd	r2, r3, [sp, #224]	; 0xe0
   26c7e:	add	r2, sp, #224	; 0xe0
   26c80:	mov	r3, r0
   26c82:	mov	r0, r8
   26c84:	strb.w	r8, [sp, #236]	; 0xec
   26c88:	strb.w	r8, [sp, #237]	; 0xed
   26c8c:	strb.w	r8, [sp, #238]	; 0xee
   26c90:	strb.w	r8, [sp, #239]	; 0xef
   26c94:	strb.w	r8, [sp, #240]	; 0xf0
   26c98:	strb.w	r8, [sp, #232]	; 0xe8
   26c9c:	str	r2, [sp, #176]	; 0xb0
   26c9e:	bl	1eadc <btrfs_search_slot@@Base>
   26ca2:	cmp	r0, r8
   26ca4:	blt.n	26da2 <btrfs_reserve_extent@@Base+0x3c6>
   26ca6:	ldr	r2, [sp, #176]	; 0xb0
   26ca8:	mov	r3, r9
   26caa:	adds	r3, #96	; 0x60
   26cac:	str.w	r8, [sp, #176]	; 0xb0
   26cb0:	vmov	s17, r3
   26cb4:	vmov	s18, r2
   26cb8:	ldr	r0, [r6, #0]
   26cba:	ldr	r2, [r6, #32]
   26cbc:	ldr.w	r3, [r0, #192]	; 0xc0
   26cc0:	cmp	r3, r2
   26cc2:	bhi.w	26f48 <btrfs_reserve_extent@@Base+0x56c>
   26cc6:	ldr	r3, [sp, #176]	; 0xb0
   26cc8:	mov	r1, r6
   26cca:	strb.w	r3, [r6, #65]	; 0x41
   26cce:	ldr	r3, [sp, #96]	; 0x60
   26cd0:	ldr.w	r0, [r3, #464]	; 0x1d0
   26cd4:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   26cd8:	cmp	r0, #0
   26cda:	blt.n	26da2 <btrfs_reserve_extent@@Base+0x3c6>
   26cdc:	beq.n	26cb8 <btrfs_reserve_extent@@Base+0x2dc>
   26cde:	ldr.w	r3, [r4, #49]	; 0x31
   26ce2:	ldrd	r1, r0, [r4, #40]	; 0x28
   26ce6:	ldr.w	r2, [r4, #53]	; 0x35
   26cea:	adds	r3, r3, r1
   26cec:	str	r3, [sp, #72]	; 0x48
   26cee:	adc.w	r3, r2, r0
   26cf2:	str	r3, [sp, #76]	; 0x4c
   26cf4:	ldrd	r0, r1, [sp, #72]	; 0x48
   26cf8:	ldrd	r2, r3, [sp, #32]
   26cfc:	cmp	r3, r1
   26cfe:	it	eq
   26d00:	cmpeq	r2, r0
   26d02:	bcs.n	26d20 <btrfs_reserve_extent@@Base+0x344>
   26d04:	ldr	r3, [sp, #72]	; 0x48
   26d06:	vmov	r0, s17
   26d0a:	adds.w	r2, r3, #4294967295	; 0xffffffff
   26d0e:	ldr	r3, [sp, #76]	; 0x4c
   26d10:	adc.w	r3, r3, #4294967295	; 0xffffffff
   26d14:	strd	r2, r3, [sp]
   26d18:	ldrd	r2, r3, [sp, #32]
   26d1c:	bl	1b388 <set_extent_dirty@@Base>
   26d20:	ldr	r1, [sp, #180]	; 0xb4
   26d22:	mov.w	r8, #12
   26d26:	ldr	r3, [sp, #96]	; 0x60
   26d28:	mov.w	r2, #65536	; 0x10000
   26d2c:	addw	r1, r1, #645	; 0x285
   26d30:	vmov	s18, r1
   26d34:	ldr.w	r1, [pc, #1464]	; 272f0 <btrfs_reserve_extent@@Base+0x914>
   26d38:	ldr.w	r9, [r3, #464]	; 0x1d0
   26d3c:	add	r1, pc
   26d3e:	add.w	r3, r9, #96	; 0x60
   26d42:	vmov	s19, r1
   26d46:	ldr.w	r1, [pc, #1452]	; 272f4 <btrfs_reserve_extent@@Base+0x918>
   26d4a:	vmov	s17, r3
   26d4e:	movs	r3, #0
   26d50:	add	r1, pc
   26d52:	vmov	s20, r1
   26d56:	add	r1, sp, #200	; 0xc8
   26d58:	strd	r2, r3, [sp]
   26d5c:	str	r1, [sp, #16]
   26d5e:	mov	r0, r9
   26d60:	add	r1, sp, #204	; 0xcc
   26d62:	str	r1, [sp, #12]
   26d64:	add	r1, sp, #196	; 0xc4
   26d66:	str	r1, [sp, #8]
   26d68:	ldrd	r2, r3, [r4, #40]	; 0x28
   26d6c:	bl	2df9e <btrfs_rmap_block@@Base>
   26d70:	vmov	r2, s18
   26d74:	vmov	r1, s19
   26d78:	movs	r3, #71	; 0x47
   26d7a:	str	r0, [sp, #0]
   26d7c:	vmov	r0, s20
   26d80:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   26d84:	ldr	r3, [sp, #204]	; 0xcc
   26d86:	ldr	r0, [sp, #196]	; 0xc4
   26d88:	subs	r2, r3, #1
   26d8a:	str	r2, [sp, #204]	; 0xcc
   26d8c:	cmp	r3, #0
   26d8e:	bne.w	27010 <btrfs_reserve_extent@@Base+0x634>
   26d92:	blx	8b84 <free@plt+0x4>
   26d96:	cmp.w	r8, #36	; 0x24
   26d9a:	bne.w	26ff0 <btrfs_reserve_extent@@Base+0x614>
   26d9e:	movs	r3, #1
   26da0:	str	r3, [r4, #104]	; 0x68
   26da2:	mov	r0, r6
   26da4:	bl	1c71e <btrfs_free_path@@Base>
   26da8:	ldr	r3, [r4, #108]	; 0x6c
   26daa:	cmp	r3, #0
   26dac:	bne.w	270ca <btrfs_reserve_extent@@Base+0x6ee>
   26db0:	ldr	r2, [sp, #40]	; 0x28
   26db2:	ldrd	r3, r1, [r4, #96]	; 0x60
   26db6:	mov.w	r9, r2, asr #31
   26dba:	ands	r3, r2
   26dbc:	and.w	r1, r9, r1
   26dc0:	str	r3, [sp, #128]	; 0x80
   26dc2:	str	r1, [sp, #132]	; 0x84
   26dc4:	ldrd	r0, r1, [sp, #128]	; 0x80
   26dc8:	cmp	r9, r1
   26dca:	it	eq
   26dcc:	cmpeq	r2, r0
   26dce:	bne.w	270ca <btrfs_reserve_extent@@Base+0x6ee>
   26dd2:	ldrd	r2, r3, [r4, #40]	; 0x28
   26dd6:	movs	r6, #1
   26dd8:	strd	r2, r3, [sp, #32]
   26ddc:	ldrd	r0, r1, [sp, #32]
   26de0:	ldrd	r2, r3, [sp, #48]	; 0x30
   26de4:	cmp	r1, r3
   26de6:	it	eq
   26de8:	cmpeq	r0, r2
   26dea:	it	cc
   26dec:	strdcc	r2, r3, [sp, #32]
   26df0:	add	r3, sp, #216	; 0xd8
   26df2:	str	r3, [sp, #96]	; 0x60
   26df4:	ldr	r3, [sp, #44]	; 0x2c
   26df6:	ldr.w	r0, [r3, #464]	; 0x1d0
   26dfa:	ldr	r3, [sp, #96]	; 0x60
   26dfc:	adds	r0, #96	; 0x60
   26dfe:	str	r6, [sp, #8]
   26e00:	str	r3, [sp, #4]
   26e02:	add	r3, sp, #208	; 0xd0
   26e04:	str	r3, [sp, #0]
   26e06:	ldrd	r2, r3, [sp, #32]
   26e0a:	bl	1b3b8 <find_first_extent_bit@@Base>
   26e0e:	cmp	r0, #0
   26e10:	bne.w	270ca <btrfs_reserve_extent@@Base+0x6ee>
   26e14:	ldrd	r0, r1, [sp, #32]
   26e18:	ldrd	r2, r3, [sp, #208]	; 0xd0
   26e1c:	ldrd	r8, r9, [sp, #104]	; 0x68
   26e20:	cmp	r3, r1
   26e22:	it	eq
   26e24:	cmpeq	r2, r0
   26e26:	it	cc
   26e28:	movcc	r3, r1
   26e2a:	ldr	r1, [sp, #216]	; 0xd8
   26e2c:	it	cc
   26e2e:	movcc	r2, r0
   26e30:	strd	r2, r3, [sp, #208]	; 0xd0
   26e34:	adds	r1, #1
   26e36:	str	r1, [sp, #32]
   26e38:	ldr	r1, [sp, #220]	; 0xdc
   26e3a:	adc.w	r1, r1, #0
   26e3e:	str	r1, [sp, #36]	; 0x24
   26e40:	ldr	r1, [sp, #32]
   26e42:	subs	r1, r1, r2
   26e44:	str	r1, [sp, #136]	; 0x88
   26e46:	ldr	r1, [sp, #36]	; 0x24
   26e48:	sbc.w	r1, r1, r3
   26e4c:	str	r1, [sp, #140]	; 0x8c
   26e4e:	ldrd	r0, r1, [sp, #136]	; 0x88
   26e52:	cmp	r1, r9
   26e54:	it	eq
   26e56:	cmpeq	r0, r8
   26e58:	bcc.n	26df4 <btrfs_reserve_extent@@Base+0x418>
   26e5a:	ldr	r1, [sp, #104]	; 0x68
   26e5c:	adds	r1, r2, r1
   26e5e:	str	r1, [sp, #144]	; 0x90
   26e60:	ldr	r1, [sp, #108]	; 0x6c
   26e62:	adc.w	r1, r3, r1
   26e66:	str	r1, [sp, #148]	; 0x94
   26e68:	ldrd	r1, r0, [r4, #40]	; 0x28
   26e6c:	ldr.w	r6, [r4, #49]	; 0x31
   26e70:	ldr.w	ip, [r4, #53]	; 0x35
   26e74:	adds	r1, r6, r1
   26e76:	str	r1, [sp, #152]	; 0x98
   26e78:	adc.w	r1, ip, r0
   26e7c:	str	r1, [sp, #156]	; 0x9c
   26e7e:	ldrd	r0, r1, [sp, #152]	; 0x98
   26e82:	ldrd	r8, r9, [sp, #144]	; 0x90
   26e86:	cmp	r1, r9
   26e88:	it	eq
   26e8a:	cmpeq	r0, r8
   26e8c:	bcc.w	270ca <btrfs_reserve_extent@@Base+0x6ee>
   26e90:	adds.w	r1, sl, r2
   26e94:	str	r2, [r7, #0]
   26e96:	str	r1, [sp, #64]	; 0x40
   26e98:	adc.w	r1, fp, r3
   26e9c:	str	r3, [r7, #4]
   26e9e:	str.w	sl, [r7, #9]
   26ea2:	str.w	fp, [r7, #13]
   26ea6:	str	r1, [sp, #68]	; 0x44
   26ea8:	ldr.w	r0, [r4, #53]	; 0x35
   26eac:	ldr.w	r1, [r4, #49]	; 0x31
   26eb0:	ldrd	r6, r4, [r4, #40]	; 0x28
   26eb4:	ldrd	r8, r9, [sp, #64]	; 0x40
   26eb8:	adds	r1, r1, r6
   26eba:	str	r1, [sp, #24]
   26ebc:	adc.w	r1, r0, r4
   26ec0:	str	r1, [sp, #28]
   26ec2:	ldrd	r0, r1, [sp, #24]
   26ec6:	cmp	r1, r9
   26ec8:	it	eq
   26eca:	cmpeq	r0, r8
   26ecc:	bcc.w	27078 <btrfs_reserve_extent@@Base+0x69c>
   26ed0:	movs	r1, #8
   26ed2:	movs	r0, #0
   26ed4:	strd	r1, r0, [sp, #8]
   26ed8:	ldr	r1, [sp, #64]	; 0x40
   26eda:	adds.w	r0, r1, #4294967295	; 0xffffffff
   26ede:	ldr	r1, [sp, #68]	; 0x44
   26ee0:	adc.w	r1, r1, #4294967295	; 0xffffffff
   26ee4:	strd	r0, r1, [sp]
   26ee8:	vmov	r1, s16
   26eec:	add.w	r0, r1, #192	; 0xc0
   26ef0:	bl	1b3fa <test_range_bit@@Base>
   26ef4:	cmp	r0, #0
   26ef6:	beq.w	2710a <btrfs_reserve_extent@@Base+0x72e>
   26efa:	ldr	r3, [r7, #0]
   26efc:	ldr	r2, [r7, #4]
   26efe:	adds.w	r3, r3, sl
   26f02:	str	r3, [sp, #24]
   26f04:	adc.w	r3, r2, fp
   26f08:	str	r3, [sp, #28]
   26f0a:	b.n	27078 <btrfs_reserve_extent@@Base+0x69c>
   26f0c:	ldrb.w	r3, [r5, #364]	; 0x16c
   26f10:	lsls	r4, r3, #31
   26f12:	bmi.n	26f1a <btrfs_reserve_extent@@Base+0x53e>
   26f14:	ldr	r3, [r5, #32]
   26f16:	cmp	r3, r6
   26f18:	bne.n	26f2a <btrfs_reserve_extent@@Base+0x54e>
   26f1a:	ldrd	r3, r4, [r5, #264]	; 0x108
   26f1e:	ldrd	r1, r2, [r5, #288]	; 0x120
   26f22:	ands	r3, r1
   26f24:	orr.w	r3, r3, #2
   26f28:	b.n	26a30 <btrfs_reserve_extent@@Base+0x54>
   26f2a:	ldrd	r3, r4, [r5, #256]	; 0x100
   26f2e:	ldrd	r1, r2, [r5, #280]	; 0x118
   26f32:	ands	r3, r1
   26f34:	orr.w	r3, r3, #4
   26f38:	b.n	26a30 <btrfs_reserve_extent@@Base+0x54>
   26f3a:	ldr	r3, [sp, #40]	; 0x28
   26f3c:	mov	r2, r8
   26f3e:	ldr	r1, [sp, #60]	; 0x3c
   26f40:	str	r3, [sp, #0]
   26f42:	mov	r3, r9
   26f44:	ldr	r1, [r1, #56]	; 0x38
   26f46:	b.n	26b6a <btrfs_reserve_extent@@Base+0x18e>
   26f48:	vmov	r1, s18
   26f4c:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   26f50:	ldrd	r8, r9, [sp, #224]	; 0xe0
   26f54:	ldrd	r0, r1, [r4, #40]	; 0x28
   26f58:	cmp	r9, r1
   26f5a:	it	eq
   26f5c:	cmpeq	r8, r0
   26f5e:	bcc.n	26fd4 <btrfs_reserve_extent@@Base+0x5f8>
   26f60:	ldr.w	ip, [r4, #49]	; 0x31
   26f64:	ldr.w	lr, [r4, #53]	; 0x35
   26f68:	adds.w	r3, ip, r0
   26f6c:	str	r3, [sp, #120]	; 0x78
   26f6e:	adc.w	r3, lr, r1
   26f72:	str	r3, [sp, #124]	; 0x7c
   26f74:	ldrd	r2, r3, [sp, #120]	; 0x78
   26f78:	cmp	r9, r3
   26f7a:	it	eq
   26f7c:	cmpeq	r8, r2
   26f7e:	bcs.w	26cde <btrfs_reserve_extent@@Base+0x302>
   26f82:	ldrb.w	r1, [sp, #232]	; 0xe8
   26f86:	adds	r1, #88	; 0x58
   26f88:	uxtb	r1, r1
   26f8a:	cmp	r1, #1
   26f8c:	bhi.n	26fd4 <btrfs_reserve_extent@@Base+0x5f8>
   26f8e:	ldrd	r2, r3, [sp, #32]
   26f92:	cmp	r3, r9
   26f94:	it	eq
   26f96:	cmpeq	r2, r8
   26f98:	bcs.n	26fb2 <btrfs_reserve_extent@@Base+0x5d6>
   26f9a:	adds.w	r2, r8, #4294967295	; 0xffffffff
   26f9e:	vmov	r0, s17
   26fa2:	adc.w	r3, r9, #4294967295	; 0xffffffff
   26fa6:	strd	r2, r3, [sp]
   26faa:	ldrd	r2, r3, [sp, #32]
   26fae:	bl	1b388 <set_extent_dirty@@Base>
   26fb2:	ldrb.w	r1, [sp, #232]	; 0xe8
   26fb6:	ldrd	r2, r3, [sp, #224]	; 0xe0
   26fba:	cmp	r1, #169	; 0xa9
   26fbc:	bne.n	26fdc <btrfs_reserve_extent@@Base+0x600>
   26fbe:	ldr	r1, [sp, #96]	; 0x60
   26fc0:	ldr.w	r1, [r1, #464]	; 0x1d0
   26fc4:	ldr.w	r1, [r1, #384]	; 0x180
   26fc8:	adds.w	r8, r2, r1
   26fcc:	adc.w	r9, r3, #0
   26fd0:	strd	r8, r9, [sp, #32]
   26fd4:	ldr	r3, [r6, #32]
   26fd6:	adds	r3, #1
   26fd8:	str	r3, [r6, #32]
   26fda:	b.n	26cb8 <btrfs_reserve_extent@@Base+0x2dc>
   26fdc:	ldr.w	r1, [sp, #233]	; 0xe9
   26fe0:	ldr.w	r0, [sp, #237]	; 0xed
   26fe4:	adds	r1, r1, r2
   26fe6:	str	r1, [sp, #32]
   26fe8:	adc.w	r3, r0, r3
   26fec:	str	r3, [sp, #36]	; 0x24
   26fee:	b.n	26fd4 <btrfs_reserve_extent@@Base+0x5f8>
   26ff0:	mov.w	r2, #16384	; 0x4000
   26ff4:	sub.w	r3, r8, #32
   26ff8:	rsb	r1, r8, #32
   26ffc:	lsl.w	r3, r2, r3
   27000:	lsr.w	r1, r2, r1
   27004:	lsl.w	r2, r2, r8
   27008:	orrs	r3, r1
   2700a:	add.w	r8, r8, #12
   2700e:	b.n	26d56 <btrfs_reserve_extent@@Base+0x37a>
   27010:	add.w	r0, r0, r2, lsl #3
   27014:	ldrd	ip, r3, [r0]
   27018:	ldr	r0, [sp, #200]	; 0xc8
   2701a:	asrs	r2, r0, #31
   2701c:	mov	r1, r0
   2701e:	strd	r1, r2, [sp, #32]
   27022:	mov	r2, ip
   27024:	ldr	r1, [sp, #32]
   27026:	adds.w	r0, r1, #4294967295	; 0xffffffff
   2702a:	ldr	r1, [sp, #36]	; 0x24
   2702c:	adc.w	r1, r1, #4294967295	; 0xffffffff
   27030:	adds.w	r0, r0, ip
   27034:	adc.w	r1, r3, r1
   27038:	strd	r0, r1, [sp]
   2703c:	vmov	r0, s17
   27040:	bl	1b3a0 <clear_extent_dirty@@Base>
   27044:	b.n	26d84 <btrfs_reserve_extent@@Base+0x3a8>
   27046:	ldrd	r3, r4, [sp, #48]	; 0x30
   2704a:	strd	r3, r4, [sp, #24]
   2704e:	ldr	r1, [sp, #44]	; 0x2c
   27050:	ldrd	r2, r3, [sp, #48]	; 0x30
   27054:	ldr.w	r0, [r1, #464]	; 0x1d0
   27058:	bl	23754 <btrfs_lookup_block_group@@Base>
   2705c:	cbnz	r0, 27078 <btrfs_reserve_extent@@Base+0x69c>
   2705e:	ldr	r2, [sp, #168]	; 0xa8
   27060:	ldr	r3, [pc, #660]	; (272f8 <btrfs_reserve_extent@@Base+0x91c>)
   27062:	ldr	r3, [r2, r3]
   27064:	ldrd	r1, r2, [sp, #48]	; 0x30
   27068:	strd	r1, r2, [sp]
   2706c:	movs	r1, #1
   2706e:	ldr	r2, [pc, #652]	; (272fc <btrfs_reserve_extent@@Base+0x920>)
   27070:	ldr	r0, [r3, #0]
   27072:	add	r2, pc
   27074:	blx	9040 <__fprintf_chk@plt+0x4>
   27078:	vmov	r0, s16
   2707c:	ldrd	r2, r3, [sp, #24]
   27080:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   27084:	mov	r1, r0
   27086:	cmp	r0, #0
   27088:	bne.w	27294 <btrfs_reserve_extent@@Base+0x8b8>
   2708c:	ldr	r3, [sp, #100]	; 0x64
   2708e:	cmp	r3, #0
   27090:	bne.w	272a8 <btrfs_reserve_extent@@Base+0x8cc>
   27094:	ldr	r3, [sp, #56]	; 0x38
   27096:	cmp	r3, #0
   27098:	beq.w	2729c <btrfs_reserve_extent@@Base+0x8c0>
   2709c:	ldr	r6, [sp, #56]	; 0x38
   2709e:	movs	r4, #0
   270a0:	ldr	r3, [sp, #112]	; 0x70
   270a2:	ldr	r2, [sp, #172]	; 0xac
   270a4:	subs	r3, r3, r2
   270a6:	str	r3, [sp, #112]	; 0x70
   270a8:	movs	r3, #0
   270aa:	strd	r3, r4, [sp, #24]
   270ae:	ldr	r3, [sp, #40]	; 0x28
   270b0:	ldr	r0, [sp, #44]	; 0x2c
   270b2:	str	r3, [sp, #0]
   270b4:	ldrd	r2, r3, [sp, #24]
   270b8:	ldr.w	r0, [r0, #464]	; 0x1d0
   270bc:	bl	23a60 <btrfs_lookup_block_group@@Base+0x30c>
   270c0:	ldr	r3, [sp, #56]	; 0x38
   270c2:	str	r6, [sp, #56]	; 0x38
   270c4:	str	r3, [sp, #100]	; 0x64
   270c6:	mov	r4, r0
   270c8:	b.n	26ba0 <btrfs_reserve_extent@@Base+0x1c4>
   270ca:	ldr.w	r3, [r4, #49]	; 0x31
   270ce:	ldrd	r1, r0, [r4, #40]	; 0x28
   270d2:	ldr.w	r2, [r4, #53]	; 0x35
   270d6:	adds	r3, r3, r1
   270d8:	str	r3, [sp, #24]
   270da:	adc.w	r3, r2, r0
   270de:	str	r3, [sp, #28]
   270e0:	ldr	r1, [sp, #44]	; 0x2c
   270e2:	ldrd	r2, r3, [sp, #24]
   270e6:	ldr.w	r0, [r1, #464]	; 0x1d0
   270ea:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   270ee:	mov	r4, r0
   270f0:	cmp	r0, #0
   270f2:	bne.w	26c1a <btrfs_reserve_extent@@Base+0x23e>
   270f6:	ldr	r3, [sp, #116]	; 0x74
   270f8:	cmp	r3, #0
   270fa:	bne.n	2704e <btrfs_reserve_extent@@Base+0x672>
   270fc:	movs	r3, #1
   270fe:	str	r3, [sp, #116]	; 0x74
   27100:	ldrd	r3, r4, [sp, #48]	; 0x30
   27104:	strd	r3, r4, [sp, #24]
   27108:	b.n	270e0 <btrfs_reserve_extent@@Base+0x704>
   2710a:	ldr	r2, [r7, #0]
   2710c:	movs	r6, #1
   2710e:	ldr	r3, [r7, #4]
   27110:	adds.w	r1, r2, #4294967295	; 0xffffffff
   27114:	str	r0, [sp, #12]
   27116:	adc.w	r0, r3, #4294967295	; 0xffffffff
   2711a:	adds.w	r1, r1, sl
   2711e:	adc.w	r0, r0, fp
   27122:	strd	r1, r0, [sp]
   27126:	vmov	r1, s16
   2712a:	str	r6, [sp, #8]
   2712c:	add.w	r0, r1, #160	; 0xa0
   27130:	bl	1b3fa <test_range_bit@@Base>
   27134:	mov	r4, r0
   27136:	cmp	r0, #0
   27138:	bne.w	26efa <btrfs_reserve_extent@@Base+0x51e>
   2713c:	vmov	r3, s16
   27140:	ldr.w	r0, [r3, #224]	; 0xe0
   27144:	cbz	r0, 2716c <btrfs_reserve_extent@@Base+0x790>
   27146:	ldr	r2, [r7, #0]
   27148:	ldr	r3, [r7, #4]
   2714a:	adds.w	r1, r2, #4294967295	; 0xffffffff
   2714e:	strd	r6, r4, [sp, #8]
   27152:	adc.w	r6, r3, #4294967295	; 0xffffffff
   27156:	adds.w	r1, r1, sl
   2715a:	adc.w	r6, r6, fp
   2715e:	strd	r1, r6, [sp]
   27162:	bl	1b3fa <test_range_bit@@Base>
   27166:	cmp	r0, #0
   27168:	bne.w	26efa <btrfs_reserve_extent@@Base+0x51e>
   2716c:	ldrd	r2, r3, [sp, #88]	; 0x58
   27170:	ldr.w	r8, [r7]
   27174:	orrs	r3, r2
   27176:	ldr.w	r9, [r7, #4]
   2717a:	beq.n	271b6 <btrfs_reserve_extent@@Base+0x7da>
   2717c:	adds.w	r3, sl, r8
   27180:	str	r3, [sp, #160]	; 0xa0
   27182:	adc.w	r3, fp, r9
   27186:	str	r3, [sp, #164]	; 0xa4
   27188:	ldrd	r0, r1, [sp, #160]	; 0xa0
   2718c:	ldrd	r2, r3, [sp, #80]	; 0x50
   27190:	cmp	r3, r1
   27192:	it	eq
   27194:	cmpeq	r2, r0
   27196:	bcs.n	271b6 <btrfs_reserve_extent@@Base+0x7da>
   27198:	ldr	r2, [sp, #88]	; 0x58
   2719a:	ldr	r3, [sp, #80]	; 0x50
   2719c:	adds	r3, r3, r2
   2719e:	ldr	r2, [sp, #92]	; 0x5c
   271a0:	str	r3, [sp, #24]
   271a2:	ldr	r3, [sp, #84]	; 0x54
   271a4:	adcs	r3, r2
   271a6:	str	r3, [sp, #28]
   271a8:	ldrd	r2, r3, [sp, #24]
   271ac:	cmp	r9, r3
   271ae:	it	eq
   271b0:	cmpeq	r8, r2
   271b2:	bcc.w	27078 <btrfs_reserve_extent@@Base+0x69c>
   271b6:	ldr	r3, [sp, #40]	; 0x28
   271b8:	lsls	r3, r3, #31
   271ba:	bmi.n	27258 <btrfs_reserve_extent@@Base+0x87c>
   271bc:	vmov	r0, s16
   271c0:	mov	r2, r8
   271c2:	mov	r3, r9
   271c4:	bl	23754 <btrfs_lookup_block_group@@Base>
   271c8:	cmp	r0, #0
   271ca:	beq.n	27246 <btrfs_reserve_extent@@Base+0x86a>
   271cc:	ldrd	r3, r6, [r0, #40]	; 0x28
   271d0:	ldr	r1, [sp, #184]	; 0xb8
   271d2:	subs.w	ip, r8, r3
   271d6:	ldr	r2, [r7, #0]
   271d8:	sbc.w	r6, r9, r6
   271dc:	ldr	r3, [r7, #4]
   271de:	mov.w	r8, ip, lsr #16
   271e2:	adds.w	ip, r1, ip
   271e6:	ldr	r1, [sp, #188]	; 0xbc
   271e8:	orr.w	r8, r8, r6, lsl #16
   271ec:	mov.w	r9, r6, lsr #16
   271f0:	mov.w	r0, ip, lsr #16
   271f4:	adc.w	r6, r1, r6
   271f8:	lsrs	r1, r6, #16
   271fa:	orr.w	r0, r0, r6, lsl #16
   271fe:	cmp	r9, r1
   27200:	it	eq
   27202:	cmpeq	r8, r0
   27204:	beq.n	27246 <btrfs_reserve_extent@@Base+0x86a>
   27206:	vmov	r0, s16
   2720a:	bl	23754 <btrfs_lookup_block_group@@Base>
   2720e:	cbz	r0, 27246 <btrfs_reserve_extent@@Base+0x86a>
   27210:	ldr	r3, [r7, #0]
   27212:	ldrd	r2, r1, [r0, #40]	; 0x28
   27216:	ldr	r0, [r7, #4]
   27218:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2721c:	adc.w	r0, r0, #4294967295	; 0xffffffff
   27220:	adds.w	r3, r3, sl
   27224:	adc.w	r0, r0, fp
   27228:	subs	r3, r3, r2
   2722a:	sbc.w	r0, r0, r1
   2722e:	adds	r2, #1
   27230:	mvn.w	r3, r3, lsr #16
   27234:	adc.w	r1, r1, #0
   27238:	mvn.w	r3, r3, lsl #16
   2723c:	adds	r3, r3, r2
   2723e:	str	r3, [sp, #24]
   27240:	adc.w	r3, r0, r1
   27244:	b.n	26f08 <btrfs_reserve_extent@@Base+0x52c>
   27246:	vmov	r0, s16
   2724a:	ldr	r2, [r7, #0]
   2724c:	ldr	r3, [r7, #4]
   2724e:	bl	23754 <btrfs_lookup_block_group@@Base>
   27252:	cbz	r0, 27258 <btrfs_reserve_extent@@Base+0x87c>
   27254:	ldr	r3, [sp, #60]	; 0x3c
   27256:	str	r0, [r3, #56]	; 0x38
   27258:	ldr	r2, [r7, #0]
   2725a:	ldr	r3, [r7, #4]
   2725c:	adds.w	r1, r2, #4294967295	; 0xffffffff
   27260:	str.w	sl, [r7, #9]
   27264:	adc.w	r0, r3, #4294967295	; 0xffffffff
   27268:	adds.w	r1, r1, sl
   2726c:	adc.w	r0, r0, fp
   27270:	str.w	fp, [r7, #13]
   27274:	strd	r1, r0, [sp]
   27278:	add.w	r0, r5, #96	; 0x60
   2727c:	bl	1b3a0 <clear_extent_dirty@@Base>
   27280:	ldr	r2, [pc, #124]	; (27300 <btrfs_reserve_extent@@Base+0x924>)
   27282:	ldr	r3, [pc, #64]	; (272c4 <btrfs_reserve_extent@@Base+0x8e8>)
   27284:	add	r2, pc
   27286:	ldr	r3, [r2, r3]
   27288:	ldr	r2, [r3, #0]
   2728a:	ldr	r3, [sp, #244]	; 0xf4
   2728c:	eors	r2, r3
   2728e:	beq.n	272ae <btrfs_reserve_extent@@Base+0x8d2>
   27290:	blx	8c90 <__stack_chk_fail@plt>
   27294:	ldr	r3, [sp, #100]	; 0x64
   27296:	ldr	r6, [sp, #56]	; 0x38
   27298:	str	r3, [sp, #56]	; 0x38
   2729a:	b.n	270ae <btrfs_reserve_extent@@Base+0x6d2>
   2729c:	movs	r3, #0
   2729e:	movs	r4, #0
   272a0:	movs	r6, #1
   272a2:	strd	r3, r4, [sp, #24]
   272a6:	b.n	270ae <btrfs_reserve_extent@@Base+0x6d2>
   272a8:	mvn.w	r4, #27
   272ac:	b.n	27280 <btrfs_reserve_extent@@Base+0x8a4>
   272ae:	mov	r0, r4
   272b0:	add	sp, #252	; 0xfc
   272b2:	vpop	{d8-d10}
   272b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272ba:	nop
   272bc:	orrs	r6, r4
   272be:	movs	r4, r0
   272c0:	orrs	r2, r4
   272c2:	movs	r4, r0
   272c4:	lsls	r0, r1, #10
   272c6:	movs	r0, r0
   272c8:	ldmia	r3!, {r1, r2}
   272ca:	movs	r1, r0
   272cc:	stmia	r3!, {r1, r2, r4, r6, r7}
   272ce:	movs	r1, r0
   272d0:	str	r0, [sp, #760]	; 0x2f8
   272d2:	movs	r1, r0
   272d4:	ldmia	r2!, {r4, r6, r7}
   272d6:	movs	r1, r0
   272d8:	stmia	r3!, {r5, r7}
   272da:	movs	r1, r0
   272dc:	str	r0, [sp, #544]	; 0x220
   272de:	movs	r1, r0
   272e0:	ldmia	r2, {r2, r5, r7}
   272e2:	movs	r1, r0
   272e4:	stmia	r3!, {r1, r4, r5, r6}
   272e6:	movs	r1, r0
   272e8:	ldmia	r1, {r0, r1, r2, r3, r5}
   272ea:	movs	r1, r0
   272ec:	ldmia	r1, {r1, r2, r3, r5, r6, r7}
   272ee:	movs	r1, r0
   272f0:	stmia	r1!, {r1, r2, r4}
   272f2:	movs	r1, r0
   272f4:	ldrh	r2, [r6, #46]	; 0x2e
   272f6:	movs	r1, r0
   272f8:	lsls	r4, r3, #10
   272fa:	movs	r0, r0
   272fc:	stmia	r3!, {r2, r3, r4, r5, r7}
   272fe:	movs	r1, r0
   27300:	subs	r2, #148	; 0x94
   27302:	movs	r4, r0

00027304 <btrfs_alloc_free_block@@Base>:
   27304:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27308:	mov	r4, r2
   2730a:	ldr	r2, [pc, #600]	; (27564 <btrfs_alloc_free_block@@Base+0x260>)
   2730c:	sub	sp, #84	; 0x54
   2730e:	ldr	r3, [pc, #600]	; (27568 <btrfs_alloc_free_block@@Base+0x264>)
   27310:	mov	r7, r0
   27312:	add	r2, pc
   27314:	ldr.w	r8, [r1, #464]	; 0x1d0
   27318:	movs	r0, #32
   2731a:	ldrd	r9, sl, [sp, #128]	; 0x80
   2731e:	ldr	r3, [r2, r3]
   27320:	mov	r6, r1
   27322:	mov.w	fp, #0
   27326:	ldr	r3, [r3, #0]
   27328:	str	r3, [sp, #76]	; 0x4c
   2732a:	mov.w	r3, #0
   2732e:	ldr.w	r3, [r8, #308]	; 0x134
   27332:	ldr.w	r2, [r3, #188]	; 0xbc
   27336:	str	r2, [sp, #48]	; 0x30
   27338:	ldr.w	r3, [r3, #192]	; 0xc0
   2733c:	str	r3, [sp, #52]	; 0x34
   2733e:	blx	8e40 <malloc@plt+0x4>
   27342:	mov	r5, r0
   27344:	cmp	r0, #0
   27346:	beq.w	27548 <btrfs_alloc_free_block@@Base+0x244>
   2734a:	mov	r0, r8
   2734c:	movs	r2, #4
   2734e:	movs	r3, #0
   27350:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   27354:	mov	r8, r0
   27356:	cbnz	r0, 2739c <btrfs_alloc_free_block@@Base+0x98>
   27358:	ldr	r0, [pc, #528]	; (2756c <btrfs_alloc_free_block@@Base+0x268>)
   2735a:	mvn.w	r4, #116	; 0x74
   2735e:	add	r0, pc
   27360:	bl	1bd1c <__btrfs_error@@Base>
   27364:	ldr	r2, [pc, #520]	; (27570 <btrfs_alloc_free_block@@Base+0x26c>)
   27366:	cmp	r4, #0
   27368:	ldr	r1, [pc, #520]	; (27574 <btrfs_alloc_free_block@@Base+0x270>)
   2736a:	ldr	r0, [pc, #524]	; (27578 <btrfs_alloc_free_block@@Base+0x274>)
   2736c:	add	r2, pc
   2736e:	ite	le
   27370:	movle	r3, #0
   27372:	movgt	r3, #1
   27374:	addw	r2, r2, #683	; 0x2ab
   27378:	str	r3, [sp, #0]
   2737a:	add	r1, pc
   2737c:	add	r0, pc
   2737e:	movw	r3, #2559	; 0x9ff
   27382:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   27386:	ldr	r2, [pc, #500]	; (2757c <btrfs_alloc_free_block@@Base+0x278>)
   27388:	ldr	r3, [pc, #476]	; (27568 <btrfs_alloc_free_block@@Base+0x264>)
   2738a:	add	r2, pc
   2738c:	ldr	r3, [r2, r3]
   2738e:	ldr	r2, [r3, #0]
   27390:	ldr	r3, [sp, #76]	; 0x4c
   27392:	eors	r2, r3
   27394:	beq.w	2755a <btrfs_alloc_free_block@@Base+0x256>
   27398:	blx	8c90 <__stack_chk_fail@plt>
   2739c:	add	r3, sp, #56	; 0x38
   2739e:	mov.w	r2, #4294967295	; 0xffffffff
   273a2:	str	r3, [sp, #24]
   273a4:	mov.w	r3, #4294967295	; 0xffffffff
   273a8:	strd	r2, r3, [sp, #16]
   273ac:	mov	r1, r6
   273ae:	ldrd	r2, r3, [sp, #136]	; 0x88
   273b2:	mov	r0, r7
   273b4:	str.w	fp, [sp, #28]
   273b8:	strd	r2, r3, [sp, #8]
   273bc:	ldrd	r2, r3, [sp, #144]	; 0x90
   273c0:	strd	r2, r3, [sp]
   273c4:	mov	r2, r4
   273c6:	mov	r3, fp
   273c8:	bl	269dc <btrfs_reserve_extent@@Base>
   273cc:	subs	r4, r0, #0
   273ce:	blt.n	27364 <btrfs_alloc_free_block@@Base+0x60>
   273d0:	cmp.w	r9, #0
   273d4:	beq.w	2753c <btrfs_alloc_free_block@@Base+0x238>
   273d8:	add.w	r2, r9, #16
   273dc:	mov	r3, r5
   273de:	ldr.w	r1, [r9], #4
   273e2:	cmp	r9, r2
   273e4:	str.w	r1, [r3], #4
   273e8:	bne.n	273de <btrfs_alloc_free_block@@Base+0xda>
   273ea:	ldrb.w	r2, [r9]
   273ee:	strb	r2, [r3, #0]
   273f0:	movs	r2, #0
   273f2:	movs	r3, #0
   273f4:	strd	r2, r3, [r5, #24]
   273f8:	movs	r1, #0
   273fa:	ldr	r3, [sp, #48]	; 0x30
   273fc:	ldr	r2, [sp, #52]	; 0x34
   273fe:	strb	r1, [r5, #20]
   27400:	lsrs	r3, r3, #8
   27402:	strb.w	sl, [r5, #17]
   27406:	orr.w	r3, r3, r2, lsl #24
   2740a:	eor.w	r3, r3, #1
   2740e:	and.w	r3, r3, #1
   27412:	strb	r3, [r5, #18]
   27414:	movs	r3, #1
   27416:	strb	r3, [r5, #19]
   27418:	ldr.w	r3, [r6, #464]	; 0x1d0
   2741c:	ldr.w	r4, [sp, #65]	; 0x41
   27420:	ldr.w	fp, [sp, #69]	; 0x45
   27424:	ldr.w	r3, [r3, #308]	; 0x134
   27428:	ldr.w	r0, [r3, #188]	; 0xbc
   2742c:	mov	r3, r1
   2742e:	and.w	r2, r0, #256	; 0x100
   27432:	orrs	r3, r2
   27434:	beq.n	27448 <btrfs_alloc_free_block@@Base+0x144>
   27436:	mov	r2, sl
   27438:	str.w	sl, [sp, #65]	; 0x41
   2743c:	asrs	r3, r2, #31
   2743e:	str.w	r3, [sp, #69]	; 0x45
   27442:	movs	r3, #169	; 0xa9
   27444:	strb.w	r3, [sp, #64]	; 0x40
   27448:	ldrd	r2, r3, [sp, #120]	; 0x78
   2744c:	cmp	r3, #0
   2744e:	it	eq
   27450:	cmpeq	r2, #2
   27452:	bne.n	27492 <btrfs_alloc_free_block@@Base+0x18e>
   27454:	ldrd	r2, r3, [sp, #56]	; 0x38
   27458:	movs	r1, #8
   2745a:	str	r1, [sp, #8]
   2745c:	adds	r1, r2, r4
   2745e:	adc.w	ip, r3, fp
   27462:	adds.w	r1, r1, #4294967295	; 0xffffffff
   27466:	adc.w	r0, ip, #4294967295	; 0xffffffff
   2746a:	strd	r1, r0, [sp]
   2746e:	ldr	r1, [r7, #0]
   27470:	add.w	r0, r1, #192	; 0xc0
   27474:	bl	1b15c <set_extent_bits@@Base>
   27478:	ldr	r2, [pc, #260]	; (27580 <btrfs_alloc_free_block@@Base+0x27c>)
   2747a:	ldr	r1, [pc, #264]	; (27584 <btrfs_alloc_free_block@@Base+0x280>)
   2747c:	movw	r3, #2530	; 0x9e2
   27480:	add	r2, pc
   27482:	addw	r2, r2, #666	; 0x29a
   27486:	add	r1, pc
   27488:	str	r0, [sp, #0]
   2748a:	ldr	r0, [pc, #252]	; (27588 <btrfs_alloc_free_block@@Base+0x284>)
   2748c:	add	r0, pc
   2748e:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   27492:	ldrd	r3, r2, [r8, #32]
   27496:	mov.w	r9, #0
   2749a:	mov	r1, r7
   2749c:	adds	r3, r3, r4
   2749e:	adc.w	r2, r2, fp
   274a2:	strd	r3, r2, [r8, #32]
   274a6:	movs	r3, #0
   274a8:	strd	r3, r3, [sp, #36]	; 0x24
   274ac:	movs	r3, #3
   274ae:	strd	sl, r3, [sp, #24]
   274b2:	ldrd	r2, r3, [sp, #120]	; 0x78
   274b6:	mov.w	r8, #0
   274ba:	strd	r4, fp, [sp]
   274be:	ldr.w	r0, [r6, #464]	; 0x1d0
   274c2:	strd	r2, r3, [sp, #16]
   274c6:	str	r5, [sp, #32]
   274c8:	ldrd	r2, r3, [sp, #56]	; 0x38
   274cc:	strd	r8, r9, [sp, #8]
   274d0:	bl	28794 <btrfs_add_delayed_tree_ref@@Base>
   274d4:	mov	r4, r0
   274d6:	cmp	r0, #0
   274d8:	bne.w	27364 <btrfs_alloc_free_block@@Base+0x60>
   274dc:	ldrd	r2, r3, [sp, #56]	; 0x38
   274e0:	ldr.w	r0, [r6, #464]	; 0x1d0
   274e4:	bl	20ace <btrfs_find_create_tree_block@@Base>
   274e8:	mov	r4, r0
   274ea:	cbnz	r0, 2754e <btrfs_alloc_free_block@@Base+0x24a>
   274ec:	ldr.w	r2, [r6, #447]	; 0x1bf
   274f0:	mov	r1, r6
   274f2:	ldr.w	r3, [r6, #451]	; 0x1c3
   274f6:	mov.w	fp, sl, asr #31
   274fa:	mov	r0, r7
   274fc:	strd	r8, r9, [sp, #32]
   27500:	strd	sl, fp, [sp, #24]
   27504:	strd	r2, r3, [sp, #16]
   27508:	ldr.w	r2, [sp, #65]	; 0x41
   2750c:	ldr.w	r3, [sp, #69]	; 0x45
   27510:	strd	r8, r9, [sp, #8]
   27514:	strd	r2, r3, [sp]
   27518:	ldrd	r2, r3, [sp, #56]	; 0x38
   2751c:	bl	254ec <btrfs_free_extent@@Base>
   27520:	ldr	r2, [pc, #104]	; (2758c <btrfs_alloc_free_block@@Base+0x288>)
   27522:	ldr	r1, [pc, #108]	; (27590 <btrfs_alloc_free_block@@Base+0x28c>)
   27524:	movs	r3, #1
   27526:	ldr	r0, [pc, #108]	; (27594 <btrfs_alloc_free_block@@Base+0x290>)
   27528:	add	r2, pc
   2752a:	str	r3, [sp, #0]
   2752c:	addw	r2, r2, #683	; 0x2ab
   27530:	add	r1, pc
   27532:	add	r0, pc
   27534:	movw	r3, #2567	; 0xa07
   27538:	bl	23194 <btrfs_create_tree@@Base+0x578>
   2753c:	movs	r2, #17
   2753e:	mov	r1, r9
   27540:	mov	r0, r5
   27542:	blx	8f98 <memset@plt+0x4>
   27546:	b.n	273f0 <btrfs_alloc_free_block@@Base+0xec>
   27548:	mvn.w	r4, #11
   2754c:	b.n	27364 <btrfs_alloc_free_block@@Base+0x60>
   2754e:	bl	21f18 <btrfs_set_buffer_uptodate@@Base>
   27552:	ldr	r3, [r7, #52]	; 0x34
   27554:	adds	r3, #1
   27556:	str	r3, [r7, #52]	; 0x34
   27558:	b.n	27386 <btrfs_alloc_free_block@@Base+0x82>
   2755a:	mov	r0, r4
   2755c:	add	sp, #84	; 0x54
   2755e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27562:	nop
   27564:	subs	r2, #6
   27566:	movs	r4, r0
   27568:	lsls	r0, r1, #10
   2756a:	movs	r0, r0
   2756c:	stmia	r0!, {r0, r2, r4, r5, r6, r7}
   2756e:	movs	r1, r0
   27570:	stmia	r2!, {r4}
   27572:	movs	r1, r0
   27574:	revsh	r0, r3
   27576:	movs	r1, r0
   27578:	add	r4, sp, #884	; 0x374
   2757a:	movs	r1, r0
   2757c:	subs	r1, #142	; 0x8e
   2757e:	movs	r4, r0
   27580:	stmia	r0!, {r2, r3, r4, r5, r6, r7}
   27582:	movs	r1, r0
   27584:	cbnz	r4, 275ba <add_new_free_space@@Base+0x22>
   27586:	movs	r1, r0
   27588:	strh	r6, [r6, #52]	; 0x34
   2758a:	movs	r1, r0
   2758c:	stmia	r0!, {r2, r4, r6}
   2758e:	movs	r1, r0
   27590:	cbnz	r2, 2759c <add_new_free_space@@Base+0x4>
   27592:	movs	r1, r0
   27594:	pop	{r7}
   27596:	movs	r1, r0

00027598 <add_new_free_space@@Base>:
   27598:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2759c:	mov	r4, r2
   2759e:	ldr	r2, [pc, #260]	; (276a4 <add_new_free_space@@Base+0x10c>)
   275a0:	mov	r5, r3
   275a2:	ldr	r3, [pc, #260]	; (276a8 <add_new_free_space@@Base+0x110>)
   275a4:	sub	sp, #44	; 0x2c
   275a6:	add	r2, pc
   275a8:	ldr.w	sl, [pc, #256]	; 276ac <add_new_free_space@@Base+0x114>
   275ac:	ldr.w	fp, [pc, #256]	; 276b0 <add_new_free_space@@Base+0x118>
   275b0:	movs	r6, #0
   275b2:	ldr	r3, [r2, r3]
   275b4:	add	sl, pc
   275b6:	addw	sl, sl, #706	; 0x2c2
   275ba:	add	fp, pc
   275bc:	ldr	r3, [r3, #0]
   275be:	str	r3, [sp, #36]	; 0x24
   275c0:	mov.w	r3, #0
   275c4:	mov	r8, r0
   275c6:	mov	r9, r1
   275c8:	mov	r7, r6
   275ca:	ldrd	r2, r3, [sp, #80]	; 0x50
   275ce:	cmp	r5, r3
   275d0:	it	eq
   275d2:	cmpeq	r4, r2
   275d4:	bcc.n	275ea <add_new_free_space@@Base+0x52>
   275d6:	ldr	r2, [pc, #220]	; (276b4 <add_new_free_space@@Base+0x11c>)
   275d8:	ldr	r3, [pc, #204]	; (276a8 <add_new_free_space@@Base+0x110>)
   275da:	add	r2, pc
   275dc:	ldr	r3, [r2, r3]
   275de:	ldr	r2, [r3, #0]
   275e0:	ldr	r3, [sp, #36]	; 0x24
   275e2:	eors	r2, r3
   275e4:	beq.n	2769a <add_new_free_space@@Base+0x102>
   275e6:	blx	8c90 <__stack_chk_fail@plt>
   275ea:	movs	r3, #5
   275ec:	add.w	r0, r9, #160	; 0xa0
   275f0:	str	r3, [sp, #8]
   275f2:	mov	r2, r4
   275f4:	add	r3, sp, #24
   275f6:	str	r3, [sp, #4]
   275f8:	add	r3, sp, #16
   275fa:	str	r3, [sp, #0]
   275fc:	mov	r3, r5
   275fe:	bl	1b3b8 <find_first_extent_bit@@Base>
   27602:	cbnz	r0, 2765e <add_new_free_space@@Base+0xc6>
   27604:	ldrd	r2, r3, [sp, #16]
   27608:	cmp	r5, r3
   2760a:	it	eq
   2760c:	cmpeq	r4, r2
   2760e:	mov	r0, r2
   27610:	mov	r1, r3
   27612:	bcc.n	27620 <add_new_free_space@@Base+0x88>
   27614:	ldr	r3, [sp, #24]
   27616:	adds	r4, r3, #1
   27618:	ldr	r3, [sp, #28]
   2761a:	adc.w	r5, r3, #0
   2761e:	b.n	275ca <add_new_free_space@@Base+0x32>
   27620:	ldrd	r2, r3, [sp, #80]	; 0x50
   27624:	ldr.w	ip, [r8, #64]	; 0x40
   27628:	cmp	r1, r3
   2762a:	it	eq
   2762c:	cmpeq	r0, r2
   2762e:	bcs.n	2765e <add_new_free_space@@Base+0xc6>
   27630:	subs	r2, r0, r4
   27632:	mov	r0, ip
   27634:	sbc.w	r3, r1, r5
   27638:	adds	r6, r6, r2
   2763a:	strd	r2, r3, [sp]
   2763e:	adc.w	r7, r3, r7
   27642:	mov	r2, r4
   27644:	mov	r3, r5
   27646:	bl	2b4ba <btrfs_add_free_space@@Base>
   2764a:	movw	r3, #3693	; 0xe6d
   2764e:	mov	r2, sl
   27650:	mov	r1, fp
   27652:	str	r0, [sp, #0]
   27654:	ldr	r0, [pc, #96]	; (276b8 <add_new_free_space@@Base+0x120>)
   27656:	add	r0, pc
   27658:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2765c:	b.n	27614 <add_new_free_space@@Base+0x7c>
   2765e:	ldr	r3, [sp, #80]	; 0x50
   27660:	ldr	r2, [sp, #84]	; 0x54
   27662:	subs	r3, r3, r4
   27664:	ldr.w	r0, [r8, #64]	; 0x40
   27668:	sbc.w	r2, r2, r5
   2766c:	adds	r6, r6, r3
   2766e:	strd	r3, r2, [sp]
   27672:	adc.w	r7, r2, r7
   27676:	mov	r3, r5
   27678:	mov	r2, r4
   2767a:	bl	2b4ba <btrfs_add_free_space@@Base>
   2767e:	ldr	r2, [pc, #60]	; (276bc <add_new_free_space@@Base+0x124>)
   27680:	ldr	r1, [pc, #60]	; (276c0 <add_new_free_space@@Base+0x128>)
   27682:	movw	r3, #3705	; 0xe79
   27686:	add	r2, pc
   27688:	addw	r2, r2, #706	; 0x2c2
   2768c:	add	r1, pc
   2768e:	str	r0, [sp, #0]
   27690:	ldr	r0, [pc, #48]	; (276c4 <add_new_free_space@@Base+0x12c>)
   27692:	add	r0, pc
   27694:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   27698:	b.n	275d6 <add_new_free_space@@Base+0x3e>
   2769a:	mov	r0, r6
   2769c:	mov	r1, r7
   2769e:	add	sp, #44	; 0x2c
   276a0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276a4:	adds	r7, #114	; 0x72
   276a6:	movs	r4, r0
   276a8:	lsls	r0, r1, #10
   276aa:	movs	r0, r0
   276ac:	it	gt
   276ae:	movgt	r1, r0
   276b0:			; <UNDEFINED> instruction: 0xb898
   276b2:	movs	r1, r0
   276b4:	adds	r7, #62	; 0x3e
   276b6:	movs	r4, r0
   276b8:	strh	r4, [r5, #38]	; 0x26
   276ba:	movs	r1, r0
   276bc:	bkpt	0x00f6
   276be:	movs	r1, r0
   276c0:			; <UNDEFINED> instruction: 0xb7c6
   276c2:	movs	r1, r0
   276c4:	strh	r0, [r6, #36]	; 0x24
   276c6:	movs	r1, r0

000276c8 <cleanup_ref_head@@Base>:
   276c8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   276ca:	mov	r5, r0
   276cc:	ldr	r0, [r2, #48]	; 0x30
   276ce:	mov	r7, r1
   276d0:	mov	r4, r2
   276d2:	cbz	r0, 276dc <cleanup_ref_head@@Base+0x14>
   276d4:	movs	r3, #0
   276d6:	str	r3, [r2, #48]	; 0x30
   276d8:	blx	8b84 <free@plt+0x4>
   276dc:	ldr	r3, [r4, #24]
   276de:	cmp	r3, #0
   276e0:	bne.n	27778 <cleanup_ref_head@@Base+0xb0>
   276e2:	ldr	r3, [r4, #48]	; 0x30
   276e4:	cmp	r3, #0
   276e6:	bne.n	27778 <cleanup_ref_head@@Base+0xb0>
   276e8:	ldr	r3, [r5, #72]	; 0x48
   276ea:	add.w	r6, r4, #36	; 0x24
   276ee:	add.w	r1, r5, #64	; 0x40
   276f2:	subs	r3, #1
   276f4:	mov	r0, r6
   276f6:	str	r3, [r5, #72]	; 0x48
   276f8:	bl	18470 <rb_erase@@Base>
   276fc:	ldrb.w	r3, [r4, #60]	; 0x3c
   27700:	str	r6, [r4, #36]	; 0x24
   27702:	lsls	r2, r3, #31
   27704:	bpl.n	27752 <cleanup_ref_head@@Base+0x8a>
   27706:	ldrd	r2, r3, [r4, #8]
   2770a:	mov	r0, r7
   2770c:	strd	r2, r3, [sp]
   27710:	ldrd	r2, r3, [r4]
   27714:	bl	254d4 <btrfs_pin_extent@@Base>
   27718:	ldrb.w	r3, [r4, #60]	; 0x3c
   2771c:	lsls	r3, r3, #30
   2771e:	bmi.n	27752 <cleanup_ref_head@@Base+0x8a>
   27720:	ldr	r0, [r5, #0]
   27722:	movs	r2, #4
   27724:	movs	r3, #0
   27726:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   2772a:	cbnz	r0, 27740 <cleanup_ref_head@@Base+0x78>
   2772c:	ldr	r1, [pc, #76]	; (2777c <cleanup_ref_head@@Base+0xb4>)
   2772e:	movw	r2, #3758	; 0xeae
   27732:	ldr	r0, [pc, #76]	; (27780 <cleanup_ref_head@@Base+0xb8>)
   27734:	add	r1, pc
   27736:	addw	r1, r1, #725	; 0x2d5
   2773a:	add	r0, pc
   2773c:	bl	23694 <btrfs_create_tree@@Base+0xa78>
   27740:	ldrd	r3, r2, [r0, #32]
   27744:	ldrd	r1, r5, [r4, #8]
   27748:	subs	r3, r3, r1
   2774a:	sbc.w	r2, r2, r5
   2774e:	strd	r3, r2, [r0, #32]
   27752:	ldrd	r2, r3, [r4, #16]
   27756:	adds.w	r0, r2, #4294967295	; 0xffffffff
   2775a:	adc.w	r1, r3, #4294967295	; 0xffffffff
   2775e:	cmp	r3, #0
   27760:	it	eq
   27762:	cmpeq	r2, #1
   27764:	beq.n	27770 <cleanup_ref_head@@Base+0xa8>
   27766:	strd	r0, r1, [r4, #16]
   2776a:	movs	r0, #0
   2776c:	add	sp, #12
   2776e:	pop	{r4, r5, r6, r7, pc}
   27770:	mov	r0, r4
   27772:	blx	8b84 <free@plt+0x4>
   27776:	b.n	2776a <cleanup_ref_head@@Base+0xa2>
   27778:	movs	r0, #1
   2777a:	b.n	2776c <cleanup_ref_head@@Base+0xa4>
   2777c:	bkpt	0x0048
   2777e:	movs	r1, r0
   27780:	pop	{r0, r1, r3, r6, pc}
   27782:	movs	r1, r0

00027784 <btrfs_run_delayed_refs@@Base>:
   27784:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27788:	mov	sl, r0
   2778a:	vpush	{d8}
   2778e:	movs	r6, #0
   27790:	ldr	r2, [pc, #736]	; (27a74 <btrfs_run_delayed_refs@@Base+0x2f0>)
   27792:	ldr	r3, [pc, #740]	; (27a78 <btrfs_run_delayed_refs@@Base+0x2f4>)
   27794:	add	r2, pc
   27796:	sub	sp, #132	; 0x84
   27798:	ldr	r3, [r2, r3]
   2779a:	mov	r2, r0
   2779c:	ldr	r3, [r3, #0]
   2779e:	str	r3, [sp, #124]	; 0x7c
   277a0:	mov.w	r3, #0
   277a4:	ldr.w	r3, [r2], #64
   277a8:	vmov	s16, r3
   277ac:	ldr	r3, [pc, #716]	; (27a7c <btrfs_run_delayed_refs@@Base+0x2f8>)
   277ae:	str	r2, [sp, #72]	; 0x48
   277b0:	add	r3, pc
   277b2:	str	r3, [sp, #68]	; 0x44
   277b4:	add.w	r3, r3, #784	; 0x310
   277b8:	vmov	s17, r3
   277bc:	cbnz	r6, 277cc <btrfs_run_delayed_refs@@Base+0x48>
   277be:	mov	r0, sl
   277c0:	bl	286dc <btrfs_select_ref_head@@Base>
   277c4:	mov	r6, r0
   277c6:	cmp	r0, #0
   277c8:	beq.w	27cbe <btrfs_run_delayed_refs@@Base+0x53a>
   277cc:	ldr	r1, [sp, #72]	; 0x48
   277ce:	mov	r2, r6
   277d0:	mov	r0, sl
   277d2:	bl	285c8 <btrfs_merge_delayed_refs@@Base>
   277d6:	ldr	r3, [r6, #24]
   277d8:	cmp	r3, #0
   277da:	beq.w	278fc <btrfs_run_delayed_refs@@Base+0x178>
   277de:	ldr	r4, [r6, #28]
   277e0:	add.w	r3, r6, #28
   277e4:	add.w	r1, r6, #24
   277e8:	cmp	r4, r3
   277ea:	beq.n	278d2 <btrfs_run_delayed_refs@@Base+0x14e>
   277ec:	subs	r4, #12
   277ee:	ldrb.w	r3, [r4, #62]	; 0x3e
   277f2:	mov	r0, r4
   277f4:	bfc	r3, #1, #1
   277f8:	strb.w	r3, [r4, #62]	; 0x3e
   277fc:	bl	18470 <rb_erase@@Base>
   27800:	mov	r3, r4
   27802:	str	r4, [r4, #0]
   27804:	ldr.w	r2, [r3, #12]!
   27808:	cmp	r2, r3
   2780a:	beq.n	2781a <btrfs_run_delayed_refs@@Base+0x96>
   2780c:	ldr	r3, [r4, #16]
   2780e:	str	r3, [r2, #4]
   27810:	str	r2, [r3, #0]
   27812:	ldr	r2, [pc, #600]	; (27a6c <btrfs_run_delayed_refs@@Base+0x2e8>)
   27814:	ldr	r3, [pc, #600]	; (27a70 <btrfs_run_delayed_refs@@Base+0x2ec>)
   27816:	strd	r2, r3, [r4, #12]
   2781a:	ldrb.w	r3, [r4, #60]	; 0x3c
   2781e:	cmp	r3, #2
   27820:	beq.n	27910 <btrfs_run_delayed_refs@@Base+0x18c>
   27822:	and.w	r3, r3, #253	; 0xfd
   27826:	cmp	r3, #1
   27828:	bne.n	27918 <btrfs_run_delayed_refs@@Base+0x194>
   2782a:	ldr	r3, [r6, #56]	; 0x38
   2782c:	ldr	r2, [r4, #56]	; 0x38
   2782e:	subs	r3, r3, r2
   27830:	str	r3, [r6, #56]	; 0x38
   27832:	ldrb.w	r3, [r6, #60]	; 0x3c
   27836:	ldr.w	fp, [r6, #48]	; 0x30
   2783a:	and.w	r2, r3, #1
   2783e:	bfc	r3, #0, #1
   27842:	strb.w	r3, [r6, #60]	; 0x3c
   27846:	movs	r3, #0
   27848:	str	r3, [r6, #48]	; 0x30
   2784a:	ldrb.w	r3, [r4, #61]	; 0x3d
   2784e:	cmp	r3, #176	; 0xb0
   27850:	beq.n	27936 <btrfs_run_delayed_refs@@Base+0x1b2>
   27852:	cmp	r3, #182	; 0xb6
   27854:	bne.w	27c9c <btrfs_run_delayed_refs@@Base+0x518>
   27858:	ldrd	r0, r1, [r4, #72]	; 0x48
   2785c:	ldr	r3, [r4, #56]	; 0x38
   2785e:	ldrd	r8, r9, [r4, #64]	; 0x40
   27862:	cmp	r3, #1
   27864:	ldrb.w	r5, [r4, #60]	; 0x3c
   27868:	beq.n	2793c <btrfs_run_delayed_refs@@Base+0x1b8>
   2786a:	strd	r0, r1, [sp, #16]
   2786e:	movs	r0, #1
   27870:	ldr	r1, [pc, #524]	; (27a80 <btrfs_run_delayed_refs@@Base+0x2fc>)
   27872:	strd	r3, r5, [sp]
   27876:	mvn.w	r5, #4
   2787a:	strd	r8, r9, [sp, #8]
   2787e:	add	r1, pc
   27880:	ldrd	r2, r3, [r4, #24]
   27884:	blx	900c <__printf_chk@plt+0x4>
   27888:	cmp.w	fp, #0
   2788c:	bne.w	27cb6 <btrfs_run_delayed_refs@@Base+0x532>
   27890:	ldrb.w	r3, [sl, #32]
   27894:	cbz	r3, 278a0 <btrfs_run_delayed_refs@@Base+0x11c>
   27896:	ldrb.w	r3, [r4, #60]	; 0x3c
   2789a:	cmp	r3, #2
   2789c:	beq.w	27c2a <btrfs_run_delayed_refs@@Base+0x4a6>
   278a0:	ldrb.w	r3, [r6, #60]	; 0x3c
   278a4:	mov	r0, r4
   278a6:	bfc	r3, #3, #1
   278aa:	strb.w	r3, [r6, #60]	; 0x3c
   278ae:	ldr.w	r3, [sl, #76]	; 0x4c
   278b2:	adds	r3, #1
   278b4:	str.w	r3, [sl, #76]	; 0x4c
   278b8:	bl	23490 <btrfs_create_tree@@Base+0x874>
   278bc:	ldr	r2, [pc, #452]	; (27a84 <btrfs_run_delayed_refs@@Base+0x300>)
   278be:	ldr	r3, [pc, #440]	; (27a78 <btrfs_run_delayed_refs@@Base+0x2f4>)
   278c0:	add	r2, pc
   278c2:	ldr	r3, [r2, r3]
   278c4:	ldr	r2, [r3, #0]
   278c6:	ldr	r3, [sp, #124]	; 0x7c
   278c8:	eors	r2, r3
   278ca:	beq.w	27cc2 <btrfs_run_delayed_refs@@Base+0x53e>
   278ce:	blx	8c90 <__stack_chk_fail@plt>
   278d2:	mov	r0, r1
   278d4:	str	r1, [sp, #64]	; 0x40
   278d6:	bl	186e6 <rb_first@@Base>
   278da:	ldr	r1, [sp, #64]	; 0x40
   278dc:	ldr	r2, [r0, #12]
   278de:	add.w	r3, r0, #12
   278e2:	mov	r4, r0
   278e4:	cmp	r2, r3
   278e6:	beq.n	277ee <btrfs_run_delayed_refs@@Base+0x6a>
   278e8:	ldr	r1, [pc, #412]	; (27a88 <btrfs_run_delayed_refs@@Base+0x304>)
   278ea:	movw	r2, #3786	; 0xeca
   278ee:	ldr	r0, [pc, #412]	; (27a8c <btrfs_run_delayed_refs@@Base+0x308>)
   278f0:	add	r1, pc
   278f2:	addw	r1, r1, #742	; 0x2e6
   278f6:	add	r0, pc
   278f8:	bl	23694 <btrfs_create_tree@@Base+0xa78>
   278fc:	vmov	r1, s16
   27900:	mov	r2, r6
   27902:	mov	r0, sl
   27904:	bl	276c8 <cleanup_ref_head@@Base>
   27908:	cmp	r0, #0
   2790a:	bgt.w	277bc <btrfs_run_delayed_refs@@Base+0x38>
   2790e:	b.n	277be <btrfs_run_delayed_refs@@Base+0x3a>
   27910:	ldr	r3, [r6, #56]	; 0x38
   27912:	ldr	r2, [r4, #56]	; 0x38
   27914:	add	r3, r2
   27916:	b.n	27830 <btrfs_run_delayed_refs@@Base+0xac>
   27918:	ldr	r2, [pc, #372]	; (27a90 <btrfs_run_delayed_refs@@Base+0x30c>)
   2791a:	movs	r3, #1
   2791c:	ldr	r1, [pc, #372]	; (27a94 <btrfs_run_delayed_refs@@Base+0x310>)
   2791e:	ldr	r0, [pc, #376]	; (27a98 <btrfs_run_delayed_refs@@Base+0x314>)
   27920:	add	r2, pc
   27922:	str	r3, [sp, #0]
   27924:	addw	r2, r2, #761	; 0x2f9
   27928:	add	r1, pc
   2792a:	add	r0, pc
   2792c:	movw	r3, #3910	; 0xf46
   27930:	bl	22f3a <btrfs_create_tree@@Base+0x31e>
   27934:	b.n	27832 <btrfs_run_delayed_refs@@Base+0xae>
   27936:	movs	r0, #0
   27938:	movs	r1, #0
   2793a:	b.n	2785c <btrfs_run_delayed_refs@@Base+0xd8>
   2793c:	cmp	r5, #1
   2793e:	bne.w	27c4a <btrfs_run_delayed_refs@@Base+0x4c6>
   27942:	cmp	r2, #0
   27944:	beq.w	27c80 <btrfs_run_delayed_refs@@Base+0x4fc>
   27948:	cmp.w	fp, #0
   2794c:	beq.n	27956 <btrfs_run_delayed_refs@@Base+0x1d2>
   2794e:	ldrb.w	r3, [fp, #19]
   27952:	eor.w	r3, r3, #1
   27956:	ldr	r1, [pc, #324]	; (27a9c <btrfs_run_delayed_refs@@Base+0x318>)
   27958:	ldr	r0, [pc, #324]	; (27aa0 <btrfs_run_delayed_refs@@Base+0x31c>)
   2795a:	vmov	r2, s17
   2795e:	add	r1, pc
   27960:	add	r0, pc
   27962:	str	r3, [sp, #0]
   27964:	movw	r3, #3815	; 0xee7
   27968:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   2796c:	ldr.w	r7, [sl]
   27970:	movs	r2, #4
   27972:	ldr.w	r3, [r7, #308]	; 0x134
   27976:	mov	r0, r7
   27978:	ldr.w	r3, [r3, #188]	; 0xbc
   2797c:	and.w	r3, r3, #256	; 0x100
   27980:	str	r3, [sp, #40]	; 0x28
   27982:	movs	r3, #0
   27984:	str	r3, [sp, #44]	; 0x2c
   27986:	movs	r3, #0
   27988:	bl	22de4 <btrfs_create_tree@@Base+0x1c8>
   2798c:	str	r0, [sp, #64]	; 0x40
   2798e:	cbnz	r0, 279a0 <btrfs_run_delayed_refs@@Base+0x21c>
   27990:	ldr	r3, [sp, #68]	; 0x44
   27992:	movw	r2, #2398	; 0x95e
   27996:	ldr	r0, [pc, #268]	; (27aa4 <btrfs_run_delayed_refs@@Base+0x320>)
   27998:	addw	r1, r3, #805	; 0x325
   2799c:	add	r0, pc
   2799e:	b.n	278f8 <btrfs_run_delayed_refs@@Base+0x174>
   279a0:	ldrd	r0, r1, [sp, #40]	; 0x28
   279a4:	add.w	r5, sp, #113	; 0x71
   279a8:	ldrd	r2, r3, [r4, #24]
   279ac:	orrs	r1, r0
   279ae:	strd	r2, r3, [sp, #104]	; 0x68
   279b2:	beq.n	279fe <btrfs_run_delayed_refs@@Base+0x27a>
   279b4:	ldr.w	ip, [r4, #80]	; 0x50
   279b8:	mov	r0, ip
   279ba:	str.w	ip, [sp, #113]	; 0x71
   279be:	asrs	r1, r0, #31
   279c0:	str	r1, [r5, #4]
   279c2:	movs	r5, #33	; 0x21
   279c4:	movs	r1, #169	; 0xa9
   279c6:	strb.w	r1, [sp, #112]	; 0x70
   279ca:	cmp.w	r9, #0
   279ce:	it	eq
   279d0:	cmpeq.w	r8, #2
   279d4:	bne.n	27ac0 <btrfs_run_delayed_refs@@Base+0x33c>
   279d6:	movs	r1, #8
   279d8:	add.w	r0, r7, #192	; 0xc0
   279dc:	str	r1, [sp, #8]
   279de:	add	r1, sp, #96	; 0x60
   279e0:	str	r1, [sp, #4]
   279e2:	add	r1, sp, #88	; 0x58
   279e4:	str	r1, [sp, #0]
   279e6:	bl	1b3b8 <find_first_extent_bit@@Base>
   279ea:	cbz	r0, 27a12 <btrfs_run_delayed_refs@@Base+0x28e>
   279ec:	ldr	r1, [pc, #184]	; (27aa8 <btrfs_run_delayed_refs@@Base+0x324>)
   279ee:	movw	r2, #2415	; 0x96f
   279f2:	ldr	r0, [pc, #184]	; (27aac <btrfs_run_delayed_refs@@Base+0x328>)
   279f4:	add	r1, pc
   279f6:	addw	r1, r1, #805	; 0x325
   279fa:	add	r0, pc
   279fc:	b.n	278f8 <btrfs_run_delayed_refs@@Base+0x174>
   279fe:	ldr	r1, [r4, #32]
   27a00:	str.w	r1, [sp, #113]	; 0x71
   27a04:	ldr	r1, [r4, #36]	; 0x24
   27a06:	str	r1, [r5, #4]
   27a08:	movs	r1, #168	; 0xa8
   27a0a:	movs	r5, #51	; 0x33
   27a0c:	strb.w	r1, [sp, #112]	; 0x70
   27a10:	b.n	279ca <btrfs_run_delayed_refs@@Base+0x246>
   27a12:	ldrd	r0, r1, [r4, #24]
   27a16:	ldrd	r2, r3, [sp, #88]	; 0x58
   27a1a:	cmp	r1, r3
   27a1c:	it	eq
   27a1e:	cmpeq	r0, r2
   27a20:	beq.n	27a34 <btrfs_run_delayed_refs@@Base+0x2b0>
   27a22:	ldr	r1, [pc, #140]	; (27ab0 <btrfs_run_delayed_refs@@Base+0x32c>)
   27a24:	mov.w	r2, #2416	; 0x970
   27a28:	ldr	r0, [pc, #136]	; (27ab4 <btrfs_run_delayed_refs@@Base+0x330>)
   27a2a:	add	r1, pc
   27a2c:	addw	r1, r1, #805	; 0x325
   27a30:	add	r0, pc
   27a32:	b.n	278f8 <btrfs_run_delayed_refs@@Base+0x174>
   27a34:	ldrd	r3, r2, [r4, #32]
   27a38:	adds	r3, r0, r3
   27a3a:	adc.w	r2, r1, r2
   27a3e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   27a42:	str	r3, [sp, #56]	; 0x38
   27a44:	adc.w	r3, r2, #4294967295	; 0xffffffff
   27a48:	str	r3, [sp, #60]	; 0x3c
   27a4a:	ldrd	r0, r1, [sp, #56]	; 0x38
   27a4e:	ldrd	r2, r3, [sp, #96]	; 0x60
   27a52:	cmp	r1, r3
   27a54:	it	eq
   27a56:	cmpeq	r0, r2
   27a58:	beq.n	27ac0 <btrfs_run_delayed_refs@@Base+0x33c>
   27a5a:	ldr	r1, [pc, #92]	; (27ab8 <btrfs_run_delayed_refs@@Base+0x334>)
   27a5c:	movw	r2, #2417	; 0x971
   27a60:	ldr	r0, [pc, #88]	; (27abc <btrfs_run_delayed_refs@@Base+0x338>)
   27a62:	add	r1, pc
   27a64:	addw	r1, r1, #805	; 0x325
   27a68:	add	r0, pc
   27a6a:	b.n	278f8 <btrfs_run_delayed_refs@@Base+0x174>
   27a6c:	lsls	r0, r0, #4
   27a6e:	movs	r0, r2
   27a70:	lsls	r0, r0, #8
   27a72:	movs	r0, r4
   27a74:	adds	r5, #132	; 0x84
   27a76:	movs	r4, r0
   27a78:	lsls	r0, r1, #10
   27a7a:	movs	r0, r0
   27a7c:	pop	{r2, r3, r6, r7, pc}
   27a7e:	movs	r1, r0
   27a80:	pop	{r3, r5}
   27a82:	movs	r1, r0
   27a84:	adds	r4, #88	; 0x58
   27a86:	movs	r4, r0
   27a88:	pop	{r2, r3, r7}
   27a8a:	movs	r1, r0
   27a8c:	cbnz	r5, 27af4 <btrfs_run_delayed_refs@@Base+0x370>
   27a8e:	movs	r1, r0
   27a90:	pop	{r2, r3, r4, r6}
   27a92:	movs	r1, r0
   27a94:	push	{r1, r3, r5, lr}
   27a96:	movs	r1, r0
   27a98:			; <UNDEFINED> instruction: 0xb888
   27a9a:	movs	r1, r0
   27a9c:	push	{r2, r4, r5, r6, r7}
   27a9e:	movs	r1, r0
   27aa0:	cbnz	r5, 27b0a <btrfs_run_delayed_refs@@Base+0x386>
   27aa2:	movs	r1, r0
   27aa4:	revsh	r1, r5
   27aa6:	movs	r1, r0
   27aa8:	cbnz	r0, 27b0e <btrfs_run_delayed_refs@@Base+0x38a>
   27aaa:	movs	r1, r0
   27aac:	strh	r7, [r0, #10]
   27aae:	movs	r1, r0
   27ab0:	cbnz	r2, 27b08 <btrfs_run_delayed_refs@@Base+0x384>
   27ab2:	movs	r1, r0
   27ab4:	revsh	r4, r6
   27ab6:	movs	r1, r0
   27ab8:	cbnz	r2, 27b02 <btrfs_run_delayed_refs@@Base+0x37e>
   27aba:	movs	r1, r0
   27abc:	revsh	r2, r2
   27abe:	movs	r1, r0
   27ac0:	bl	1c6f0 <btrfs_alloc_path@@Base>
   27ac4:	mov	r8, r0
   27ac6:	cmp	r0, #0
   27ac8:	beq.w	27c44 <btrfs_run_delayed_refs@@Base+0x4c0>
   27acc:	ldr	r1, [r7, #24]
   27ace:	movs	r3, #1
   27ad0:	mov	r2, r0
   27ad2:	str	r3, [sp, #4]
   27ad4:	mov	r0, sl
   27ad6:	add	r3, sp, #84	; 0x54
   27ad8:	str	r3, [sp, #0]
   27ada:	add	r3, sp, #104	; 0x68
   27adc:	str	r5, [sp, #84]	; 0x54
   27ade:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   27ae2:	mov	r5, r0
   27ae4:	cmp	r0, #0
   27ae6:	bne.w	27c1e <btrfs_run_delayed_refs@@Base+0x49a>
   27aea:	ldr.w	r0, [r8]
   27aee:	movs	r2, #25
   27af0:	ldr.w	r3, [r8, #32]
   27af4:	mov.w	r1, #1
   27af8:	add.w	r9, r0, #96	; 0x60
   27afc:	mla	r3, r2, r3, r9
   27b00:	ldr.w	r3, [r3, #118]	; 0x76
   27b04:	add.w	r2, r3, #101	; 0x65
   27b08:	str	r3, [sp, #48]	; 0x30
   27b0a:	add.w	r3, r9, r2
   27b0e:	strb.w	r1, [r9, r2]
   27b12:	strb	r5, [r3, #1]
   27b14:	strb	r5, [r3, #2]
   27b16:	strb	r5, [r3, #3]
   27b18:	strb	r5, [r3, #4]
   27b1a:	strb	r5, [r3, #5]
   27b1c:	strb	r5, [r3, #6]
   27b1e:	strb	r5, [r3, #7]
   27b20:	ldrd	r1, r2, [sl, #8]
   27b24:	str	r1, [r3, #8]
   27b26:	str	r2, [r3, #12]
   27b28:	ldrd	r2, r1, [fp, #24]
   27b2c:	orr.w	r2, r2, #2
   27b30:	str	r2, [r3, #16]
   27b32:	str	r1, [r3, #20]
   27b34:	ldr	r3, [sp, #48]	; 0x30
   27b36:	add.w	r5, r3, #125	; 0x7d
   27b3a:	ldrd	r2, r3, [sp, #40]	; 0x28
   27b3e:	orrs	r3, r2
   27b40:	bne.n	27b5a <btrfs_run_delayed_refs@@Base+0x3d6>
   27b42:	movs	r3, #17
   27b44:	mov	r2, r5
   27b46:	mov	r1, fp
   27b48:	str	r0, [sp, #76]	; 0x4c
   27b4a:	bl	1bbd0 <write_extent_buffer@@Base>
   27b4e:	ldr	r3, [r4, #80]	; 0x50
   27b50:	add	r5, r9
   27b52:	ldr	r0, [sp, #76]	; 0x4c
   27b54:	strb	r3, [r5, #17]
   27b56:	ldr	r5, [sp, #48]	; 0x30
   27b58:	adds	r5, #143	; 0x8f
   27b5a:	movs	r2, #176	; 0xb0
   27b5c:	strb.w	r2, [r9, r5]
   27b60:	ldrd	r1, r2, [r4, #64]	; 0x40
   27b64:	add.w	r3, r9, r5
   27b68:	str.w	r1, [r3, #1]
   27b6c:	str.w	r2, [r3, #5]
   27b70:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   27b74:	mov	r0, r8
   27b76:	bl	1c71e <btrfs_free_path@@Base>
   27b7a:	ldr.w	r3, [r7, #384]	; 0x180
   27b7e:	mov	r0, sl
   27b80:	str	r3, [sp, #0]
   27b82:	movs	r3, #0
   27b84:	str	r3, [sp, #4]
   27b86:	ldrd	r2, r3, [sp, #104]	; 0x68
   27b8a:	bl	31080 <remove_from_free_space_tree@@Base>
   27b8e:	mov	r5, r0
   27b90:	cmp	r0, #0
   27b92:	bne.n	27c1e <btrfs_run_delayed_refs@@Base+0x49a>
   27b94:	str	r0, [sp, #12]
   27b96:	mov.w	r8, #1
   27b9a:	str.w	r8, [sp, #8]
   27b9e:	ldr.w	r3, [r7, #384]	; 0x180
   27ba2:	strd	r3, r0, [sp]
   27ba6:	mov	r0, r7
   27ba8:	ldrd	r2, r3, [sp, #104]	; 0x68
   27bac:	bl	238dc <btrfs_lookup_block_group@@Base+0x188>
   27bb0:	ldr.w	r2, [r7, #384]	; 0x180
   27bb4:	ldr	r3, [sp, #64]	; 0x40
   27bb6:	movs	r1, #0
   27bb8:	mov	r5, r0
   27bba:	mov	r0, r2
   27bbc:	strd	r0, r1, [sp, #48]	; 0x30
   27bc0:	ldrd	r0, r1, [r3, #32]
   27bc4:	ldrd	r2, r3, [sp, #48]	; 0x30
   27bc8:	cmp	r1, r3
   27bca:	it	eq
   27bcc:	cmpeq	r0, r2
   27bce:	bcs.n	27c32 <btrfs_run_delayed_refs@@Base+0x4ae>
   27bd0:	ldr	r2, [pc, #252]	; (27cd0 <btrfs_run_delayed_refs@@Base+0x54c>)
   27bd2:	movw	r3, #2462	; 0x99e
   27bd6:	ldr	r1, [pc, #252]	; (27cd4 <btrfs_run_delayed_refs@@Base+0x550>)
   27bd8:	ldr	r0, [pc, #252]	; (27cd8 <btrfs_run_delayed_refs@@Base+0x554>)
   27bda:	add	r2, pc
   27bdc:	addw	r2, r2, #805	; 0x325
   27be0:	add	r1, pc
   27be2:	add	r0, pc
   27be4:	str.w	r8, [sp]
   27be8:	bl	22f3a <btrfs_create_tree@@Base+0x31e>
   27bec:	ldr	r3, [sp, #64]	; 0x40
   27bee:	movs	r2, #0
   27bf0:	mov	r1, r3
   27bf2:	movs	r3, #0
   27bf4:	strd	r2, r3, [r1, #32]
   27bf8:	ldrd	r2, r3, [r4, #64]	; 0x40
   27bfc:	cmp	r3, #0
   27bfe:	it	eq
   27c00:	cmpeq	r2, #2
   27c02:	bne.n	27c1e <btrfs_run_delayed_refs@@Base+0x49a>
   27c04:	movs	r3, #8
   27c06:	str	r3, [sp, #8]
   27c08:	ldrd	r2, r3, [sp, #96]	; 0x60
   27c0c:	ldr.w	r0, [sl]
   27c10:	strd	r2, r3, [sp]
   27c14:	adds	r0, #192	; 0xc0
   27c16:	ldrd	r2, r3, [sp, #88]	; 0x58
   27c1a:	bl	1afe6 <clear_extent_bits@@Base>
   27c1e:	cmp.w	fp, #0
   27c22:	bne.n	27cb6 <btrfs_run_delayed_refs@@Base+0x532>
   27c24:	cmp	r5, #0
   27c26:	bne.w	27890 <btrfs_run_delayed_refs@@Base+0x10c>
   27c2a:	mov	r0, r4
   27c2c:	bl	23490 <btrfs_create_tree@@Base+0x874>
   27c30:	b.n	277bc <btrfs_run_delayed_refs@@Base+0x38>
   27c32:	ldr	r3, [sp, #48]	; 0x30
   27c34:	subs	r2, r0, r3
   27c36:	ldr	r3, [sp, #52]	; 0x34
   27c38:	sbc.w	r3, r1, r3
   27c3c:	ldr	r1, [sp, #64]	; 0x40
   27c3e:	str	r2, [r1, #32]
   27c40:	str	r3, [r1, #36]	; 0x24
   27c42:	b.n	27bf8 <btrfs_run_delayed_refs@@Base+0x474>
   27c44:	mvn.w	r5, #11
   27c48:	b.n	27c1e <btrfs_run_delayed_refs@@Base+0x49a>
   27c4a:	cmp	r5, #2
   27c4c:	bne.n	27c80 <btrfs_run_delayed_refs@@Base+0x4fc>
   27c4e:	movs	r2, #0
   27c50:	movs	r3, #0
   27c52:	strd	r2, r3, [sp, #32]
   27c56:	mov	r0, sl
   27c58:	ldr	r2, [r4, #80]	; 0x50
   27c5a:	strd	r8, r9, [sp, #16]
   27c5e:	asrs	r3, r2, #31
   27c60:	strd	r2, r3, [sp, #24]
   27c64:	ldrd	r2, r3, [r4, #72]	; 0x48
   27c68:	strd	r2, r3, [sp, #8]
   27c6c:	ldrd	r2, r3, [r4, #32]
   27c70:	strd	r2, r3, [sp]
   27c74:	ldrd	r2, r3, [r4, #24]
   27c78:	bl	2406c <hash_extent_data_ref@@Base+0x3f4>
   27c7c:	mov	r5, r0
   27c7e:	b.n	27c1e <btrfs_run_delayed_refs@@Base+0x49a>
   27c80:	ldr	r2, [pc, #88]	; (27cdc <btrfs_run_delayed_refs@@Base+0x558>)
   27c82:	movs	r3, #1
   27c84:	ldr	r1, [pc, #88]	; (27ce0 <btrfs_run_delayed_refs@@Base+0x55c>)
   27c86:	ldr	r0, [pc, #92]	; (27ce4 <btrfs_run_delayed_refs@@Base+0x560>)
   27c88:	add	r2, pc
   27c8a:	add.w	r2, r2, #784	; 0x310
   27c8e:	add	r1, pc
   27c90:	add	r0, pc
   27c92:	str	r3, [sp, #0]
   27c94:	movw	r3, #3822	; 0xeee
   27c98:	bl	23194 <btrfs_create_tree@@Base+0x578>
   27c9c:	ldr	r2, [pc, #72]	; (27ce8 <btrfs_run_delayed_refs@@Base+0x564>)
   27c9e:	movs	r3, #1
   27ca0:	ldr	r1, [pc, #72]	; (27cec <btrfs_run_delayed_refs@@Base+0x568>)
   27ca2:	ldr	r0, [pc, #76]	; (27cf0 <btrfs_run_delayed_refs@@Base+0x56c>)
   27ca4:	add	r2, pc
   27ca6:	str	r3, [sp, #0]
   27ca8:	addw	r2, r2, #831	; 0x33f
   27cac:	add	r1, pc
   27cae:	add	r0, pc
   27cb0:	movw	r3, #3842	; 0xf02
   27cb4:	b.n	27c98 <btrfs_run_delayed_refs@@Base+0x514>
   27cb6:	mov	r0, fp
   27cb8:	blx	8b84 <free@plt+0x4>
   27cbc:	b.n	27c24 <btrfs_run_delayed_refs@@Base+0x4a0>
   27cbe:	mov	r5, r0
   27cc0:	b.n	278bc <btrfs_run_delayed_refs@@Base+0x138>
   27cc2:	mov	r0, r5
   27cc4:	add	sp, #132	; 0x84
   27cc6:	vpop	{d8}
   27cca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cce:	nop
   27cd0:	cbnz	r2, 27cfc <btrfs_fix_block_accounting@@Base+0x8>
   27cd2:	movs	r1, r0
   27cd4:	sxtb	r2, r6
   27cd6:	movs	r1, r0
   27cd8:	push	{r4, r6, r7, lr}
   27cda:	movs	r1, r0
   27cdc:			; <UNDEFINED> instruction: 0xb8f4
   27cde:	movs	r1, r0
   27ce0:	cbz	r4, 27d14 <btrfs_fix_block_accounting@@Base+0x20>
   27ce2:	movs	r1, r0
   27ce4:	push	{r1, r5, lr}
   27ce6:	movs	r1, r0
   27ce8:			; <UNDEFINED> instruction: 0xb8d8
   27cea:	movs	r1, r0
   27cec:	cbz	r6, 27d18 <btrfs_fix_block_accounting@@Base+0x24>
   27cee:	movs	r1, r0
   27cf0:	push	{r2, lr}
   27cf2:	movs	r1, r0

00027cf4 <btrfs_fix_block_accounting@@Base>:
   27cf4:	ldr	r2, [pc, #460]	; (27ec4 <btrfs_fix_block_accounting@@Base+0x1d0>)
   27cf6:	mov.w	r1, #4294967295	; 0xffffffff
   27cfa:	ldr	r3, [pc, #460]	; (27ec8 <btrfs_fix_block_accounting@@Base+0x1d4>)
   27cfc:	add	r2, pc
   27cfe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27d02:	sub	sp, #124	; 0x7c
   27d04:	ldr.w	r8, [r0]
   27d08:	mov	r5, r0
   27d0a:	ldr	r3, [r2, r3]
   27d0c:	ldr.w	r6, [r8, #24]
   27d10:	ldr	r3, [r3, #0]
   27d12:	str	r3, [sp, #116]	; 0x74
   27d14:	mov.w	r3, #0
   27d18:	bl	27784 <btrfs_run_delayed_refs@@Base>
   27d1c:	cmp	r0, #0
   27d1e:	bne.w	27eb8 <btrfs_fix_block_accounting@@Base+0x1c4>
   27d22:	movs	r7, #0
   27d24:	mov	fp, r7
   27d26:	mov	sl, r7
   27d28:	mov	r9, r7
   27d2a:	mov	r2, r7
   27d2c:	mov	r3, fp
   27d2e:	mov	r0, r8
   27d30:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   27d34:	mov	r4, r0
   27d36:	cbz	r0, 27d84 <btrfs_fix_block_accounting@@Base+0x90>
   27d38:	ldrd	r2, r3, [r0, #40]	; 0x28
   27d3c:	ldr.w	r7, [r0, #49]	; 0x31
   27d40:	ldr.w	r1, [r0, #53]	; 0x35
   27d44:	adds	r7, r7, r2
   27d46:	strd	sl, r9, [r0, #72]	; 0x48
   27d4a:	adc.w	fp, r1, r3
   27d4e:	ldr	r3, [r0, #60]	; 0x3c
   27d50:	movs	r1, #1
   27d52:	strd	sl, r9, [r3, #16]
   27d56:	ldrd	r2, r3, [r0, #40]	; 0x28
   27d5a:	ldr.w	r0, [r6, #464]	; 0x1d0
   27d5e:	str	r1, [sp, #8]
   27d60:	ldr.w	ip, [r4, #49]	; 0x31
   27d64:	adds	r0, #128	; 0x80
   27d66:	ldr.w	lr, [r4, #53]	; 0x35
   27d6a:	adds.w	ip, ip, r2
   27d6e:	adc.w	lr, lr, r3
   27d72:	adds.w	r4, ip, #4294967295	; 0xffffffff
   27d76:	adc.w	lr, lr, #4294967295	; 0xffffffff
   27d7a:	strd	r4, lr, [sp]
   27d7e:	bl	1b15c <set_extent_bits@@Base>
   27d82:	b.n	27d2a <btrfs_fix_block_accounting@@Base+0x36>
   27d84:	add	r7, sp, #48	; 0x30
   27d86:	add.w	sl, sp, #28
   27d8a:	mov	r0, r7
   27d8c:	bl	1c6e8 <btrfs_init_path@@Base>
   27d90:	ldr.w	r1, [r6, #464]	; 0x1d0
   27d94:	movs	r3, #168	; 0xa8
   27d96:	strd	r4, r4, [sp]
   27d9a:	strb.w	r3, [sp, #36]	; 0x24
   27d9e:	mov	r2, sl
   27da0:	mov	r3, r7
   27da2:	ldr	r1, [r1, #24]
   27da4:	mov	r0, r5
   27da6:	strb.w	r4, [sp, #37]	; 0x25
   27daa:	strb.w	r4, [sp, #38]	; 0x26
   27dae:	strb.w	r4, [sp, #39]	; 0x27
   27db2:	strb.w	r4, [sp, #40]	; 0x28
   27db6:	strb.w	r4, [sp, #41]	; 0x29
   27dba:	strb.w	r4, [sp, #42]	; 0x2a
   27dbe:	strb.w	r4, [sp, #43]	; 0x2b
   27dc2:	strb.w	r4, [sp, #44]	; 0x2c
   27dc6:	strd	r4, r4, [sp, #28]
   27dca:	bl	1eadc <btrfs_search_slot@@Base>
   27dce:	subs	r3, r0, #0
   27dd0:	blt.n	27e94 <btrfs_fix_block_accounting@@Base+0x1a0>
   27dd2:	ldr.w	r9, [pc, #248]	; 27ecc <btrfs_fix_block_accounting@@Base+0x1d8>
   27dd6:	movs	r4, #0
   27dd8:	ldr.w	fp, [pc, #244]	; 27ed0 <btrfs_fix_block_accounting@@Base+0x1dc>
   27ddc:	movs	r5, #0
   27dde:	add	r9, pc
   27de0:	addw	r9, r9, #851	; 0x353
   27de4:	add	fp, pc
   27de6:	ldr	r0, [sp, #48]	; 0x30
   27de8:	ldr	r2, [sp, #80]	; 0x50
   27dea:	ldr.w	r3, [r0, #192]	; 0xc0
   27dee:	cmp	r2, r3
   27df0:	bcc.n	27e10 <btrfs_fix_block_accounting@@Base+0x11c>
   27df2:	ldr.w	r0, [r6, #464]	; 0x1d0
   27df6:	mov	r1, r7
   27df8:	movs	r2, #0
   27dfa:	strb.w	r2, [sp, #113]	; 0x71
   27dfe:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   27e02:	subs	r3, r0, #0
   27e04:	blt.n	27e94 <btrfs_fix_block_accounting@@Base+0x1a0>
   27e06:	mov.w	r2, #0
   27e0a:	bne.n	27ea8 <btrfs_fix_block_accounting@@Base+0x1b4>
   27e0c:	ldr	r0, [sp, #48]	; 0x30
   27e0e:	ldr	r2, [sp, #80]	; 0x50
   27e10:	mov	r1, sl
   27e12:	bl	22e74 <btrfs_create_tree@@Base+0x258>
   27e16:	ldrb.w	r3, [sp, #36]	; 0x24
   27e1a:	cmp	r3, #168	; 0xa8
   27e1c:	bne.n	27e5c <btrfs_fix_block_accounting@@Base+0x168>
   27e1e:	ldr.w	r3, [sp, #37]	; 0x25
   27e22:	movs	r1, #1
   27e24:	ldr.w	r2, [sp, #41]	; 0x29
   27e28:	movs	r0, #0
   27e2a:	adds	r4, r4, r3
   27e2c:	strd	r1, r0, [sp, #8]
   27e30:	adc.w	r5, r2, r5
   27e34:	mov	r0, r6
   27e36:	strd	r3, r2, [sp]
   27e3a:	ldrd	r2, r3, [sp, #28]
   27e3e:	bl	25af0 <btrfs_update_block_group@@Base>
   27e42:	movw	r3, #3354	; 0xd1a
   27e46:	mov	r2, r9
   27e48:	mov	r1, fp
   27e4a:	str	r0, [sp, #0]
   27e4c:	ldr	r0, [pc, #132]	; (27ed4 <btrfs_fix_block_accounting@@Base+0x1e0>)
   27e4e:	add	r0, pc
   27e50:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   27e54:	ldr	r3, [sp, #80]	; 0x50
   27e56:	adds	r3, #1
   27e58:	str	r3, [sp, #80]	; 0x50
   27e5a:	b.n	27de6 <btrfs_fix_block_accounting@@Base+0xf2>
   27e5c:	cmp	r3, #169	; 0xa9
   27e5e:	bne.n	27e54 <btrfs_fix_block_accounting@@Base+0x160>
   27e60:	ldr.w	r3, [r8, #384]	; 0x180
   27e64:	movs	r2, #1
   27e66:	movs	r1, #0
   27e68:	mov	r0, r6
   27e6a:	adds	r4, r4, r3
   27e6c:	strd	r2, r1, [sp, #8]
   27e70:	str	r3, [sp, #0]
   27e72:	mov.w	r3, #0
   27e76:	str	r3, [sp, #4]
   27e78:	adc.w	r5, r5, #0
   27e7c:	ldrd	r2, r3, [sp, #28]
   27e80:	bl	25af0 <btrfs_update_block_group@@Base>
   27e84:	mov	r3, r0
   27e86:	cmp	r0, #0
   27e88:	beq.n	27e54 <btrfs_fix_block_accounting@@Base+0x160>
   27e8a:	mov	r0, r7
   27e8c:	str	r3, [sp, #20]
   27e8e:	bl	1c6f8 <btrfs_release_path@@Base>
   27e92:	ldr	r3, [sp, #20]
   27e94:	ldr	r1, [pc, #64]	; (27ed8 <btrfs_fix_block_accounting@@Base+0x1e4>)
   27e96:	ldr	r2, [pc, #48]	; (27ec8 <btrfs_fix_block_accounting@@Base+0x1d4>)
   27e98:	add	r1, pc
   27e9a:	ldr	r2, [r1, r2]
   27e9c:	ldr	r1, [r2, #0]
   27e9e:	ldr	r2, [sp, #116]	; 0x74
   27ea0:	eors	r1, r2
   27ea2:	beq.n	27ebc <btrfs_fix_block_accounting@@Base+0x1c8>
   27ea4:	blx	8c90 <__stack_chk_fail@plt>
   27ea8:	ldr.w	r3, [r6, #464]	; 0x1d0
   27eac:	ldr.w	r3, [r3, #308]	; 0x134
   27eb0:	str	r4, [r3, #120]	; 0x78
   27eb2:	str	r5, [r3, #124]	; 0x7c
   27eb4:	mov	r3, r2
   27eb6:	b.n	27e8a <btrfs_fix_block_accounting@@Base+0x196>
   27eb8:	mov	r3, r0
   27eba:	b.n	27e94 <btrfs_fix_block_accounting@@Base+0x1a0>
   27ebc:	mov	r0, r3
   27ebe:	add	sp, #124	; 0x7c
   27ec0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ec4:	adds	r0, #28
   27ec6:	movs	r4, r0
   27ec8:	lsls	r0, r1, #10
   27eca:	movs	r0, r0
   27ecc:			; <UNDEFINED> instruction: 0xb79e
   27ece:	movs	r1, r0
   27ed0:	add	sp, #440	; 0x1b8
   27ed2:	movs	r1, r0
   27ed4:	ldrb	r4, [r6, #19]
   27ed6:	movs	r1, r0
   27ed8:	cmp	r6, #128	; 0x80
   27eda:	movs	r4, r0

00027edc <btrfs_record_file_extent@@Base>:
   27edc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ee0:	mov	r6, r0
   27ee2:	vpush	{d8}
   27ee6:	mov	fp, r1
   27ee8:	sub	sp, #156	; 0x9c
   27eea:	strd	r2, r3, [sp, #96]	; 0x60
   27eee:	ldr	r3, [sp, #200]	; 0xc8
   27ef0:	ldr.w	r2, [pc, #1080]	; 2832c <btrfs_record_file_extent@@Base+0x450>
   27ef4:	ldrd	r9, sl, [sp, #216]	; 0xd8
   27ef8:	str	r3, [sp, #76]	; 0x4c
   27efa:	add	r2, pc
   27efc:	ldr	r3, [sp, #208]	; 0xd0
   27efe:	str	r3, [sp, #68]	; 0x44
   27f00:	ldr	r3, [sp, #212]	; 0xd4
   27f02:	str	r3, [sp, #72]	; 0x48
   27f04:	ldr.w	r3, [pc, #1064]	; 28330 <btrfs_record_file_extent@@Base+0x454>
   27f08:	ldr	r3, [r2, r3]
   27f0a:	ldr	r3, [r3, #0]
   27f0c:	str	r3, [sp, #148]	; 0x94
   27f0e:	mov.w	r3, #0
   27f12:	ldrd	r3, r4, [sp, #224]	; 0xe0
   27f16:	strd	r3, r4, [sp, #56]	; 0x38
   27f1a:	movs	r4, #0
   27f1c:	ldr.w	r3, [pc, #1044]	; 28334 <btrfs_record_file_extent@@Base+0x458>
   27f20:	add	r3, pc
   27f22:	addw	r3, r3, #878	; 0x36e
   27f26:	vmov	s16, r3
   27f2a:	ldr.w	r3, [pc, #1036]	; 28338 <btrfs_record_file_extent@@Base+0x45c>
   27f2e:	add	r3, pc
   27f30:	vmov	s17, r3
   27f34:	ldrd	r2, r3, [sp, #56]	; 0x38
   27f38:	orrs	r3, r2
   27f3a:	beq.n	27fb0 <btrfs_record_file_extent@@Base+0xd4>
   27f3c:	orrs.w	r3, r9, sl
   27f40:	bne.n	27f9e <btrfs_record_file_extent@@Base+0xc2>
   27f42:	ldrd	r3, r4, [sp, #224]	; 0xe0
   27f46:	mov	r1, fp
   27f48:	mov	r0, r6
   27f4a:	strd	r9, sl, [sp, #8]
   27f4e:	strd	r3, r4, [sp, #24]
   27f52:	strd	r3, r4, [sp, #16]
   27f56:	ldr	r3, [sp, #68]	; 0x44
   27f58:	str	r3, [sp, #0]
   27f5a:	ldr	r3, [sp, #72]	; 0x48
   27f5c:	str	r3, [sp, #4]
   27f5e:	ldrd	r2, r3, [sp, #96]	; 0x60
   27f62:	bl	3296a <btrfs_insert_file_extent@@Base>
   27f66:	mov	r4, r0
   27f68:	cmp	r4, #0
   27f6a:	blt.n	27fb0 <btrfs_record_file_extent@@Base+0xd4>
   27f6c:	ldr	r3, [sp, #224]	; 0xe0
   27f6e:	ldr	r2, [sp, #224]	; 0xe0
   27f70:	adds.w	r9, r9, r3
   27f74:	ldr	r3, [sp, #228]	; 0xe4
   27f76:	adc.w	sl, sl, r3
   27f7a:	ldr	r3, [sp, #68]	; 0x44
   27f7c:	adds	r3, r3, r2
   27f7e:	ldr	r2, [sp, #228]	; 0xe4
   27f80:	str	r3, [sp, #68]	; 0x44
   27f82:	ldr	r3, [sp, #72]	; 0x48
   27f84:	adc.w	r3, r2, r3
   27f88:	ldr	r2, [sp, #224]	; 0xe0
   27f8a:	str	r3, [sp, #72]	; 0x48
   27f8c:	ldr	r3, [sp, #56]	; 0x38
   27f8e:	subs	r3, r3, r2
   27f90:	ldr	r2, [sp, #228]	; 0xe4
   27f92:	str	r3, [sp, #56]	; 0x38
   27f94:	ldr	r3, [sp, #60]	; 0x3c
   27f96:	sbc.w	r3, r3, r2
   27f9a:	str	r3, [sp, #60]	; 0x3c
   27f9c:	b.n	27f34 <btrfs_record_file_extent@@Base+0x58>
   27f9e:	ldr.w	r3, [fp, #464]	; 0x1d0
   27fa2:	ldr	r7, [r3, #24]
   27fa4:	bl	1c6f0 <btrfs_alloc_path@@Base>
   27fa8:	mov	r5, r0
   27faa:	cbnz	r0, 27fc6 <btrfs_record_file_extent@@Base+0xea>
   27fac:	mvn.w	r4, #11
   27fb0:	ldr	r2, [pc, #904]	; (2833c <btrfs_record_file_extent@@Base+0x460>)
   27fb2:	ldr	r3, [pc, #892]	; (28330 <btrfs_record_file_extent@@Base+0x454>)
   27fb4:	add	r2, pc
   27fb6:	ldr	r3, [r2, r3]
   27fb8:	ldr	r2, [r3, #0]
   27fba:	ldr	r3, [sp, #148]	; 0x94
   27fbc:	eors	r2, r3
   27fbe:	beq.w	2831e <btrfs_record_file_extent@@Base+0x442>
   27fc2:	blx	8c90 <__stack_chk_fail@plt>
   27fc6:	mov.w	r2, #4294967295	; 0xffffffff
   27fca:	movs	r3, #108	; 0x6c
   27fcc:	movs	r0, #0
   27fce:	strb.w	r3, [sp, #136]	; 0x88
   27fd2:	strb.w	r2, [sp, #137]	; 0x89
   27fd6:	mov	r3, r5
   27fd8:	strb.w	r2, [sp, #138]	; 0x8a
   27fdc:	mov	r1, r7
   27fde:	strb.w	r2, [sp, #139]	; 0x8b
   27fe2:	strb.w	r2, [sp, #140]	; 0x8c
   27fe6:	strb.w	r2, [sp, #141]	; 0x8d
   27fea:	strb.w	r2, [sp, #142]	; 0x8e
   27fee:	strb.w	r2, [sp, #143]	; 0x8f
   27ff2:	strb.w	r2, [sp, #144]	; 0x90
   27ff6:	add	r2, sp, #128	; 0x80
   27ff8:	strd	r0, r0, [sp]
   27ffc:	strd	r9, sl, [sp, #128]	; 0x80
   28000:	bl	1eadc <btrfs_search_slot@@Base>
   28004:	subs	r4, r0, #0
   28006:	blt.w	28316 <btrfs_record_file_extent@@Base+0x43a>
   2800a:	ldr	r0, [pc, #820]	; (28340 <btrfs_record_file_extent@@Base+0x464>)
   2800c:	ite	eq
   2800e:	moveq	r3, #1
   28010:	movne	r3, #0
   28012:	vmov	r2, s16
   28016:	vmov	r1, s17
   2801a:	add	r0, pc
   2801c:	str	r3, [sp, #0]
   2801e:	movw	r3, #3407	; 0xd4f
   28022:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   28026:	movs	r2, #0
   28028:	movs	r3, #0
   2802a:	mov	r1, r5
   2802c:	mov	r0, r7
   2802e:	bl	20238 <btrfs_previous_extent_item@@Base>
   28032:	subs	r4, r0, #0
   28034:	blt.w	28316 <btrfs_record_file_extent@@Base+0x43a>
   28038:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2803c:	ldrd	r0, r1, [sp, #224]	; 0xe0
   28040:	strd	r2, r3, [sp, #40]	; 0x28
   28044:	movs	r3, #0
   28046:	cmp	r3, r1
   28048:	mov.w	r2, #134217728	; 0x8000000
   2804c:	it	eq
   2804e:	cmpeq	r2, r0
   28050:	it	cc
   28052:	strdcc	r2, r3, [sp, #40]	; 0x28
   28056:	cmp	r4, #0
   28058:	bne.w	28212 <btrfs_record_file_extent@@Base+0x336>
   2805c:	add	r3, sp, #120	; 0x78
   2805e:	add	r2, sp, #112	; 0x70
   28060:	add.w	r0, r7, #464	; 0x1d0
   28064:	mov	r1, r5
   28066:	bl	233ec <btrfs_create_tree@@Base+0x7d0>
   2806a:	ldr	r2, [sp, #120]	; 0x78
   2806c:	ldr	r3, [sp, #112]	; 0x70
   2806e:	adds	r3, r3, r2
   28070:	ldr	r2, [sp, #116]	; 0x74
   28072:	str	r3, [sp, #104]	; 0x68
   28074:	ldr	r3, [sp, #124]	; 0x7c
   28076:	adc.w	r3, r2, r3
   2807a:	str	r3, [sp, #108]	; 0x6c
   2807c:	ldrd	r3, r4, [sp, #104]	; 0x68
   28080:	cmp	sl, r4
   28082:	it	eq
   28084:	cmpeq	r9, r3
   28086:	bcs.w	28212 <btrfs_record_file_extent@@Base+0x336>
   2808a:	add.w	r0, r7, #464	; 0x1d0
   2808e:	add	r3, sp, #128	; 0x80
   28090:	add	r2, sp, #120	; 0x78
   28092:	mov	r1, r5
   28094:	bl	233ec <btrfs_create_tree@@Base+0x7d0>
   28098:	ldrd	r3, r4, [sp, #120]	; 0x78
   2809c:	ldr	r2, [pc, #676]	; (28344 <btrfs_record_file_extent@@Base+0x468>)
   2809e:	cmp	sl, r4
   280a0:	ldr	r1, [pc, #676]	; (28348 <btrfs_record_file_extent@@Base+0x46c>)
   280a2:	it	eq
   280a4:	cmpeq	r9, r3
   280a6:	ldr	r0, [pc, #676]	; (2834c <btrfs_record_file_extent@@Base+0x470>)
   280a8:	add	r2, pc
   280aa:	strd	r3, r4, [sp, #48]	; 0x30
   280ae:	addw	r2, r2, #906	; 0x38a
   280b2:	ite	cc
   280b4:	movcc	r3, #1
   280b6:	movcs	r3, #0
   280b8:	add	r1, pc
   280ba:	str	r3, [sp, #0]
   280bc:	add	r0, pc
   280be:	movw	r3, #3487	; 0xd9f
   280c2:	bl	231cc <btrfs_create_tree@@Base+0x5b0>
   280c6:	ldr	r3, [sp, #48]	; 0x30
   280c8:	ldrd	r8, r7, [sp, #128]	; 0x80
   280cc:	subs.w	r3, r9, r3
   280d0:	str	r3, [sp, #80]	; 0x50
   280d2:	ldr	r3, [sp, #52]	; 0x34
   280d4:	sbc.w	r3, sl, r3
   280d8:	mov	r0, r5
   280da:	str	r3, [sp, #84]	; 0x54
   280dc:	bl	1c6f8 <btrfs_release_path@@Base>
   280e0:	ldr	r3, [sp, #96]	; 0x60
   280e2:	mov	r2, r5
   280e4:	mov	r1, fp
   280e6:	mov	r0, r6
   280e8:	str	r3, [sp, #128]	; 0x80
   280ea:	ldr	r3, [sp, #100]	; 0x64
   280ec:	str	r3, [sp, #132]	; 0x84
   280ee:	ldr	r3, [sp, #68]	; 0x44
   280f0:	str.w	r3, [sp, #137]	; 0x89
   280f4:	ldr	r3, [sp, #72]	; 0x48
   280f6:	str.w	r3, [sp, #141]	; 0x8d
   280fa:	movs	r3, #108	; 0x6c
   280fc:	strb.w	r3, [sp, #136]	; 0x88
   28100:	movs	r3, #53	; 0x35
   28102:	str	r3, [sp, #120]	; 0x78
   28104:	movs	r3, #1
   28106:	str	r3, [sp, #4]
   28108:	add	r3, sp, #120	; 0x78
   2810a:	str	r3, [sp, #0]
   2810c:	add	r3, sp, #128	; 0x80
   2810e:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   28112:	mov	r4, r0
   28114:	cmp	r0, #0
   28116:	bne.w	28316 <btrfs_record_file_extent@@Base+0x43a>
   2811a:	ldr	r0, [r5, #0]
   2811c:	mov.w	lr, #25
   28120:	ldr	r3, [r5, #32]
   28122:	add.w	r2, r0, #96	; 0x60
   28126:	ldr	r1, [r6, #8]
   28128:	ldr.w	ip, [r6, #12]
   2812c:	mla	r3, lr, r3, r2
   28130:	ldr.w	lr, [r3, #118]	; 0x76
   28134:	add.w	lr, lr, #101	; 0x65
   28138:	add.w	r3, r2, lr
   2813c:	str.w	r1, [r2, lr]
   28140:	mov.w	r2, #1
   28144:	strb	r2, [r3, #20]
   28146:	ldr	r2, [sp, #48]	; 0x30
   28148:	str.w	ip, [r3, #4]
   2814c:	strb	r4, [r3, #16]
   2814e:	str.w	r2, [r3, #21]
   28152:	ldr	r2, [sp, #52]	; 0x34
   28154:	strb	r4, [r3, #17]
   28156:	strb	r4, [r3, #18]
   28158:	str.w	r2, [r3, #25]
   2815c:	ldr	r2, [sp, #80]	; 0x50
   2815e:	strb	r4, [r3, #19]
   28160:	str.w	r8, [r3, #29]
   28164:	str.w	r2, [r3, #37]	; 0x25
   28168:	ldr	r2, [sp, #84]	; 0x54
   2816a:	str.w	r7, [r3, #33]	; 0x21
   2816e:	str.w	r8, [r3, #8]
   28172:	str.w	r2, [r3, #41]	; 0x29
   28176:	ldr	r2, [sp, #40]	; 0x28
   28178:	str	r7, [r3, #12]
   2817a:	str.w	r2, [r3, #45]	; 0x2d
   2817e:	ldr	r2, [sp, #44]	; 0x2c
   28180:	str.w	r2, [r3, #49]	; 0x31
   28184:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   28188:	ldr	r3, [sp, #76]	; 0x4c
   2818a:	ldr	r2, [sp, #76]	; 0x4c
   2818c:	mov	r0, r5
   2818e:	ldr	r1, [sp, #40]	; 0x28
   28190:	ldr	r3, [r3, #24]
   28192:	ldr	r2, [r2, #28]
   28194:	adds	r3, r3, r1
   28196:	ldr	r1, [sp, #44]	; 0x2c
   28198:	adc.w	r2, r1, r2
   2819c:	ldr	r1, [sp, #76]	; 0x4c
   2819e:	str	r3, [r1, #24]
   281a0:	str	r2, [r1, #28]
   281a2:	bl	1c6f8 <btrfs_release_path@@Base>
   281a6:	ldr	r3, [sp, #68]	; 0x44
   281a8:	ldr	r2, [sp, #80]	; 0x50
   281aa:	mov	r0, r6
   281ac:	ldr	r1, [sp, #84]	; 0x54
   281ae:	subs	r2, r3, r2
   281b0:	ldr	r3, [sp, #72]	; 0x48
   281b2:	strd	r8, r7, [sp]
   281b6:	sbc.w	r3, r3, r1
   281ba:	strd	r2, r3, [sp, #32]
   281be:	ldr	r3, [sp, #96]	; 0x60
   281c0:	mov	r1, fp
   281c2:	ldr.w	r2, [fp, #447]	; 0x1bf
   281c6:	str	r3, [sp, #24]
   281c8:	ldr	r3, [sp, #100]	; 0x64
   281ca:	str	r3, [sp, #28]
   281cc:	ldr.w	r3, [fp, #451]	; 0x1c3
   281d0:	strd	r2, r3, [sp, #16]
   281d4:	movs	r2, #0
   281d6:	movs	r3, #0
   281d8:	strd	r2, r3, [sp, #8]
   281dc:	ldrd	r2, r3, [sp, #48]	; 0x30
   281e0:	bl	24990 <btrfs_inc_extent_ref@@Base>
   281e4:	mov	r4, r0
   281e6:	cmp	r0, #0
   281e8:	bne.w	28316 <btrfs_record_file_extent@@Base+0x43a>
   281ec:	ldr	r3, [sp, #80]	; 0x50
   281ee:	subs.w	r3, r8, r3
   281f2:	str	r3, [sp, #224]	; 0xe0
   281f4:	ldr	r3, [sp, #84]	; 0x54
   281f6:	sbc.w	r3, r7, r3
   281fa:	str	r3, [sp, #228]	; 0xe4
   281fc:	ldrd	r0, r1, [sp, #224]	; 0xe0
   28200:	ldrd	r2, r3, [sp, #40]	; 0x28
   28204:	cmp	r3, r1
   28206:	it	eq
   28208:	cmpeq	r2, r0
   2820a:	it	cc
   2820c:	strdcc	r2, r3, [sp, #224]	; 0xe0
   28210:	b.n	28316 <btrfs_record_file_extent@@Base+0x43a>
   28212:	ldr	r3, [sp, #40]	; 0x28
   28214:	mov	r1, r5
   28216:	mov	r0, r7
   28218:	adds.w	r3, r9, r3
   2821c:	str	r3, [sp, #88]	; 0x58
   2821e:	ldr	r3, [sp, #44]	; 0x2c
   28220:	adc.w	r3, sl, r3
   28224:	str	r3, [sp, #92]	; 0x5c
   28226:	ldrd	r2, r3, [sp, #88]	; 0x58
   2822a:	bl	202dc <btrfs_next_extent_item@@Base>
   2822e:	subs	r4, r0, #0
   28230:	blt.n	28316 <btrfs_record_file_extent@@Base+0x43a>
   28232:	bne.n	28254 <btrfs_record_file_extent@@Base+0x378>
   28234:	add	r3, sp, #120	; 0x78
   28236:	add	r2, sp, #112	; 0x70
   28238:	add.w	r0, r7, #464	; 0x1d0
   2823c:	mov	r1, r5
   2823e:	bl	233ec <btrfs_create_tree@@Base+0x7d0>
   28242:	ldrd	r2, r3, [sp, #112]	; 0x70
   28246:	ldrd	r0, r1, [sp, #88]	; 0x58
   2824a:	cmp	r3, r1
   2824c:	it	eq
   2824e:	cmpeq	r2, r0
   28250:	bcc.w	2808a <btrfs_record_file_extent@@Base+0x1ae>
   28254:	mov	r0, r5
   28256:	mov.w	r8, #1
   2825a:	bl	1c6f8 <btrfs_release_path@@Base>
   2825e:	ldr	r3, [sp, #40]	; 0x28
   28260:	mov	r2, r5
   28262:	mov	r1, r7
   28264:	mov	r0, r6
   28266:	str.w	r8, [sp, #4]
   2826a:	str.w	r3, [sp, #137]	; 0x89
   2826e:	ldr	r3, [sp, #44]	; 0x2c
   28270:	strd	r9, sl, [sp, #128]	; 0x80
   28274:	str.w	r3, [sp, #141]	; 0x8d
   28278:	movs	r3, #168	; 0xa8
   2827a:	strb.w	r3, [sp, #136]	; 0x88
   2827e:	movs	r3, #24
   28280:	str	r3, [sp, #120]	; 0x78
   28282:	add	r3, sp, #120	; 0x78
   28284:	str	r3, [sp, #0]
   28286:	add	r3, sp, #128	; 0x80
   28288:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2828c:	mov	r4, r0
   2828e:	cmp	r0, #0
   28290:	bne.n	28310 <btrfs_record_file_extent@@Base+0x434>
   28292:	ldr	r0, [r5, #0]
   28294:	movs	r2, #25
   28296:	ldr	r3, [r5, #32]
   28298:	add.w	r1, r0, #96	; 0x60
   2829c:	mla	r3, r2, r3, r1
   282a0:	ldr.w	r2, [r3, #118]	; 0x76
   282a4:	adds	r2, #101	; 0x65
   282a6:	adds	r3, r1, r2
   282a8:	strb	r4, [r1, r2]
   282aa:	strb	r4, [r3, #1]
   282ac:	strb	r4, [r3, #2]
   282ae:	strb	r4, [r3, #3]
   282b0:	strb	r4, [r3, #4]
   282b2:	strb	r4, [r3, #5]
   282b4:	strb	r4, [r3, #6]
   282b6:	strb	r4, [r3, #7]
   282b8:	strb	r4, [r3, #8]
   282ba:	strb	r4, [r3, #9]
   282bc:	strb	r4, [r3, #10]
   282be:	strb	r4, [r3, #11]
   282c0:	strb	r4, [r3, #12]
   282c2:	strb	r4, [r3, #13]
   282c4:	strb	r4, [r3, #14]
   282c6:	strb	r4, [r3, #15]
   282c8:	strb.w	r8, [r3, #16]
   282cc:	strb	r4, [r3, #17]
   282ce:	strb	r4, [r3, #18]
   282d0:	strb	r4, [r3, #19]
   282d2:	strb	r4, [r3, #20]
   282d4:	strb	r4, [r3, #21]
   282d6:	strb	r4, [r3, #22]
   282d8:	strb	r4, [r3, #23]
   282da:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   282de:	strd	r8, r4, [sp, #8]
   282e2:	ldrd	r3, r4, [sp, #40]	; 0x28
   282e6:	mov	r2, r9
   282e8:	mov	r0, fp
   282ea:	strd	r3, r4, [sp]
   282ee:	mov	r3, sl
   282f0:	bl	25af0 <btrfs_update_block_group@@Base>
   282f4:	mov	r4, r0
   282f6:	cbnz	r0, 28316 <btrfs_record_file_extent@@Base+0x43a>
   282f8:	mov.w	r1, #4294967295	; 0xffffffff
   282fc:	mov	r0, r6
   282fe:	bl	27784 <btrfs_run_delayed_refs@@Base>
   28302:	movs	r3, #0
   28304:	ldrd	r8, r7, [sp, #40]	; 0x28
   28308:	strd	r9, sl, [sp, #48]	; 0x30
   2830c:	str	r3, [sp, #80]	; 0x50
   2830e:	b.n	280d8 <btrfs_record_file_extent@@Base+0x1fc>
   28310:	cmn.w	r0, #17
   28314:	beq.n	282f8 <btrfs_record_file_extent@@Base+0x41c>
   28316:	mov	r0, r5
   28318:	bl	1c71e <btrfs_free_path@@Base>
   2831c:	b.n	27f68 <btrfs_record_file_extent@@Base+0x8c>
   2831e:	mov	r0, r4
   28320:	add	sp, #156	; 0x9c
   28322:	vpop	{d8}
   28326:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2832a:	nop
   2832c:	cmp	r6, #30
   2832e:	movs	r4, r0
   28330:	lsls	r0, r1, #10
   28332:	movs	r0, r0
   28334:			; <UNDEFINED> instruction: 0xb65c
   28336:	movs	r1, r0
   28338:	add	r7, sp, #144	; 0x90
   2833a:	movs	r1, r0
   2833c:	cmp	r5, #100	; 0x64
   2833e:	movs	r4, r0
   28340:	strh	r7, [r0, #4]
   28342:	movs	r1, r0
   28344:	push	{r2, r4, r6, r7}
   28346:	movs	r1, r0
   28348:	add	r5, sp, #616	; 0x268
   2834a:	movs	r1, r0
   2834c:	push	{r3, r5, r7}
   2834e:	movs	r1, r0
   28350:	ldr	r2, [pc, #60]	; (28390 <btrfs_record_file_extent@@Base+0x4b4>)
   28352:	movs	r1, #16
   28354:	ldr	r3, [pc, #60]	; (28394 <btrfs_record_file_extent@@Base+0x4b8>)
   28356:	push	{r4, lr}
   28358:	add	r2, pc
   2835a:	sub	sp, #72	; 0x48
   2835c:	add	r4, sp, #4
   2835e:	ldr	r3, [r2, r3]
   28360:	mov	r0, r4
   28362:	ldr	r3, [r3, #0]
   28364:	str	r3, [sp, #68]	; 0x44
   28366:	mov.w	r3, #0
   2836a:	blx	8e98 <backtrace@plt>
   2836e:	movs	r2, #2
   28370:	mov	r1, r0
   28372:	mov	r0, r4
   28374:	blx	9214 <backtrace_symbols_fd@plt>
   28378:	ldr	r2, [pc, #28]	; (28398 <btrfs_record_file_extent@@Base+0x4bc>)
   2837a:	ldr	r3, [pc, #24]	; (28394 <btrfs_record_file_extent@@Base+0x4b8>)
   2837c:	add	r2, pc
   2837e:	ldr	r3, [r2, r3]
   28380:	ldr	r2, [r3, #0]
   28382:	ldr	r3, [sp, #68]	; 0x44
   28384:	eors	r2, r3
   28386:	beq.n	2838c <btrfs_record_file_extent@@Base+0x4b0>
   28388:	blx	8c90 <__stack_chk_fail@plt>
   2838c:	add	sp, #72	; 0x48
   2838e:	pop	{r4, pc}
   28390:	cmp	r1, #192	; 0xc0
   28392:	movs	r4, r0
   28394:	lsls	r0, r1, #10
   28396:	movs	r0, r0
   28398:	cmp	r1, #156	; 0x9c
   2839a:	movs	r4, r0
   2839c:	push	{r0, r1, r2, r3, r4, lr}
   2839e:	ldr	r4, [pc, #40]	; (283c8 <btrfs_record_file_extent@@Base+0x4ec>)
   283a0:	ldr	r5, [pc, #40]	; (283cc <btrfs_record_file_extent@@Base+0x4f0>)
   283a2:	add	r4, pc
   283a4:	ldr	r4, [r4, r5]
   283a6:	ldr	r5, [sp, #24]
   283a8:	strd	r3, r2, [sp]
   283ac:	mov	r3, r1
   283ae:	ldr	r2, [pc, #32]	; (283d0 <btrfs_record_file_extent@@Base+0x4f4>)
   283b0:	movs	r1, #1
   283b2:	strd	r0, r5, [sp, #8]
   283b6:	add	r2, pc
   283b8:	ldr	r0, [r4, #0]
   283ba:	blx	9040 <__fprintf_chk@plt+0x4>
   283be:	bl	28350 <btrfs_record_file_extent@@Base+0x474>
   283c2:	blx	91c0 <abort@plt>
   283c6:	nop
   283c8:	cmp	r1, #118	; 0x76
   283ca:	movs	r4, r0
   283cc:	lsls	r4, r3, #10
   283ce:	movs	r0, r0
   283d0:	ldrsh	r0, [r5, r6]
   283d2:	movs	r1, r0
   283d4:	push	{r0, r1, r2, lr}
   283d6:	movs	r3, #1
   283d8:	ldr	r2, [pc, #16]	; (283ec <btrfs_record_file_extent@@Base+0x510>)
   283da:	ldr	r1, [pc, #20]	; (283f0 <btrfs_record_file_extent@@Base+0x514>)
   283dc:	ldr	r0, [pc, #20]	; (283f4 <btrfs_record_file_extent@@Base+0x518>)
   283de:	add	r2, pc
   283e0:	str	r3, [sp, #0]
   283e2:	add	r1, pc
   283e4:	add	r0, pc
   283e6:	movs	r3, #55	; 0x37
   283e8:	bl	2839c <btrfs_record_file_extent@@Base+0x4c0>
   283ec:			; <UNDEFINED> instruction: 0xb654
   283ee:	movs	r1, r0
   283f0:	push	{r0, r1, r2, r3, r4, r5, lr}
   283f2:	movs	r1, r0
   283f4:	add	r5, sp, #824	; 0x338
   283f6:	movs	r1, r0
   283f8:	push	{r4, r5, lr}
   283fa:	sub	sp, #20
   283fc:	ldr	r4, [pc, #36]	; (28424 <btrfs_record_file_extent@@Base+0x548>)
   283fe:	ldr	r5, [pc, #40]	; (28428 <btrfs_record_file_extent@@Base+0x54c>)
   28400:	add	r4, pc
   28402:	ldr	r4, [r4, r5]
   28404:	ldr	r5, [sp, #32]
   28406:	strd	r3, r2, [sp]
   2840a:	mov	r3, r1
   2840c:	ldr	r2, [pc, #28]	; (2842c <btrfs_record_file_extent@@Base+0x550>)
   2840e:	movs	r1, #1
   28410:	strd	r0, r5, [sp, #8]
   28414:	add	r2, pc
   28416:	ldr	r0, [r4, #0]
   28418:	blx	9040 <__fprintf_chk@plt+0x4>
   2841c:	add	sp, #20
   2841e:	ldmia.w	sp!, {r4, r5, lr}
   28422:	b.n	28350 <btrfs_record_file_extent@@Base+0x474>
   28424:	cmp	r1, #24
   28426:	movs	r4, r0
   28428:	lsls	r4, r3, #10
   2842a:	movs	r0, r0
   2842c:	strb	r1, [r3, #4]
   2842e:	movs	r1, r0
   28430:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   28434:	mov	r6, r0
   28436:	mov	r5, r3
   28438:	mov	r4, r2
   2843a:	ldr	r3, [r0, #0]
   2843c:	movs	r0, #0
   2843e:	cbnz	r3, 28462 <btrfs_record_file_extent@@Base+0x586>
   28440:	cbz	r0, 2845e <btrfs_record_file_extent@@Base+0x582>
   28442:	ldrd	r2, r3, [r0]
   28446:	cmp	r3, r5
   28448:	it	eq
   2844a:	cmpeq	r2, r4
   2844c:	bcs.n	2845e <btrfs_record_file_extent@@Base+0x582>
   2844e:	adds	r0, #36	; 0x24
   28450:	bl	18706 <rb_next@@Base>
   28454:	cbnz	r0, 2845c <btrfs_record_file_extent@@Base+0x580>
   28456:	mov	r0, r6
   28458:	bl	186e6 <rb_first@@Base>
   2845c:	subs	r0, #36	; 0x24
   2845e:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   28462:	ldrd	r8, r9, [r3, #-36]	; 0x24
   28466:	sub.w	r0, r3, #36	; 0x24
   2846a:	cmp	r5, r9
   2846c:	it	eq
   2846e:	cmpeq	r4, r8
   28470:	bcs.n	28476 <btrfs_record_file_extent@@Base+0x59a>
   28472:	ldr	r3, [r3, #8]
   28474:	b.n	2843e <btrfs_record_file_extent@@Base+0x562>
   28476:	cmp	r9, r5
   28478:	it	eq
   2847a:	cmpeq	r8, r4
   2847c:	bcs.n	2845e <btrfs_record_file_extent@@Base+0x582>
   2847e:	ldr	r3, [r3, #4]
   28480:	b.n	2843e <btrfs_record_file_extent@@Base+0x562>
   28482:	push	{r0, r1, r2, r3, r4, lr}
   28484:	ldr	r3, [pc, #40]	; (284b0 <btrfs_record_file_extent@@Base+0x5d4>)
   28486:	ldr	r4, [pc, #44]	; (284b4 <btrfs_record_file_extent@@Base+0x5d8>)
   28488:	add	r3, pc
   2848a:	ldr	r4, [r3, r4]
   2848c:	movs	r3, #0
   2848e:	strd	r2, r1, [sp]
   28492:	movs	r1, #1
   28494:	strd	r0, r3, [sp, #8]
   28498:	ldr	r2, [pc, #28]	; (284b8 <btrfs_record_file_extent@@Base+0x5dc>)
   2849a:	ldr	r3, [pc, #32]	; (284bc <btrfs_record_file_extent@@Base+0x5e0>)
   2849c:	add	r2, pc
   2849e:	ldr	r0, [r4, #0]
   284a0:	add	r3, pc
   284a2:	blx	9040 <__fprintf_chk@plt+0x4>
   284a6:	bl	28350 <btrfs_record_file_extent@@Base+0x474>
   284aa:	blx	91c0 <abort@plt>
   284ae:	nop
   284b0:	cmp	r0, #144	; 0x90
   284b2:	movs	r4, r0
   284b4:	lsls	r4, r3, #10
   284b6:	movs	r0, r0
   284b8:	ldr	r6, [r5, #32]
   284ba:	movs	r1, r0
   284bc:	push	{r0, r7}
   284be:	movs	r1, r0
   284c0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   284c2:	mov	r4, r2
   284c4:	adds	r1, #24
   284c6:	mov	r5, r0
   284c8:	mov	r0, r2
   284ca:	bl	18470 <rb_erase@@Base>
   284ce:	mov	r2, r4
   284d0:	str	r4, [r4, #0]
   284d2:	ldr.w	r3, [r2, #12]!
   284d6:	cmp	r3, r2
   284d8:	beq.n	284e8 <btrfs_record_file_extent@@Base+0x60c>
   284da:	ldr	r2, [r4, #16]
   284dc:	str	r2, [r3, #4]
   284de:	str	r3, [r2, #0]
   284e0:	ldr	r2, [pc, #184]	; (2859c <btrfs_record_file_extent@@Base+0x6c0>)
   284e2:	ldr	r3, [pc, #188]	; (285a0 <btrfs_record_file_extent@@Base+0x6c4>)
   284e4:	strd	r2, r3, [r4, #12]
   284e8:	ldrb.w	r3, [r4, #62]	; 0x3e
   284ec:	bfc	r3, #1, #1
   284f0:	strb.w	r3, [r4, #62]	; 0x3e
   284f4:	ldrd	r2, r3, [r4, #48]	; 0x30
   284f8:	orrs	r3, r2
   284fa:	bne.n	28514 <btrfs_record_file_extent@@Base+0x638>
   284fc:	ldr	r2, [pc, #164]	; (285a4 <btrfs_record_file_extent@@Base+0x6c8>)
   284fe:	movs	r3, #1
   28500:	ldr	r1, [pc, #164]	; (285a8 <btrfs_record_file_extent@@Base+0x6cc>)
   28502:	ldr	r0, [pc, #168]	; (285ac <btrfs_record_file_extent@@Base+0x6d0>)
   28504:	add	r2, pc
   28506:	str	r3, [sp, #0]
   28508:	adds	r2, #10
   2850a:	add	r1, pc
   2850c:	add	r0, pc
   2850e:	movs	r3, #163	; 0xa3
   28510:	bl	283f8 <btrfs_record_file_extent@@Base+0x51c>
   28514:	ldrd	r3, r2, [r4, #48]	; 0x30
   28518:	adds.w	r6, r3, #4294967295	; 0xffffffff
   2851c:	adc.w	r7, r2, #4294967295	; 0xffffffff
   28520:	strd	r6, r7, [r4, #48]	; 0x30
   28524:	orrs.w	r3, r6, r7
   28528:	bne.n	28568 <btrfs_record_file_extent@@Base+0x68c>
   2852a:	ldrb.w	r3, [r4, #62]	; 0x3e
   2852e:	lsls	r3, r3, #30
   28530:	bpl.n	2854a <btrfs_record_file_extent@@Base+0x66e>
   28532:	ldr	r2, [pc, #124]	; (285b0 <btrfs_record_file_extent@@Base+0x6d4>)
   28534:	movs	r3, #1
   28536:	ldr	r1, [pc, #124]	; (285b4 <btrfs_record_file_extent@@Base+0x6d8>)
   28538:	ldr	r0, [pc, #124]	; (285b8 <btrfs_record_file_extent@@Base+0x6dc>)
   2853a:	add	r2, pc
   2853c:	str	r3, [sp, #0]
   2853e:	adds	r2, #10
   28540:	add	r1, pc
   28542:	add	r0, pc
   28544:	movs	r3, #165	; 0xa5
   28546:	bl	283f8 <btrfs_record_file_extent@@Base+0x51c>
   2854a:	ldrb.w	r3, [r4, #61]	; 0x3d
   2854e:	subs	r3, #176	; 0xb0
   28550:	cmp	r3, #8
   28552:	bhi.n	28582 <btrfs_record_file_extent@@Base+0x6a6>
   28554:	tbb	[pc, r3]
   28558:	asrs	r5, r0, #20
   2855a:	asrs	r5, r0, #20
   2855c:	asrs	r5, r2, #20
   2855e:	asrs	r5, r0, #20
   28560:	movs	r5, r0
   28562:	mov	r0, r4
   28564:	blx	8b84 <free@plt+0x4>
   28568:	ldrd	r0, r1, [r5]
   2856c:	orrs.w	r3, r0, r1
   28570:	beq.n	2857e <btrfs_record_file_extent@@Base+0x6a2>
   28572:	adds.w	r2, r0, #4294967295	; 0xffffffff
   28576:	adc.w	r3, r1, #4294967295	; 0xffffffff
   2857a:	strd	r2, r3, [r5]
   2857e:	add	sp, #12
   28580:	pop	{r4, r5, r6, r7, pc}
   28582:	ldr	r2, [pc, #56]	; (285bc <btrfs_record_file_extent@@Base+0x6e0>)
   28584:	movs	r3, #1
   28586:	ldr	r1, [pc, #56]	; (285c0 <btrfs_record_file_extent@@Base+0x6e4>)
   28588:	ldr	r0, [pc, #56]	; (285c4 <btrfs_record_file_extent@@Base+0x6e8>)
   2858a:	add	r2, pc
   2858c:	str	r3, [sp, #0]
   2858e:	adds	r2, #10
   28590:	add	r1, pc
   28592:	add	r0, pc
   28594:	movs	r3, #176	; 0xb0
   28596:	bl	2839c <btrfs_record_file_extent@@Base+0x4c0>
   2859a:	nop
   2859c:	lsls	r0, r0, #4
   2859e:	movs	r0, r2
   285a0:	lsls	r0, r0, #8
   285a2:	movs	r0, r4
   285a4:	push	{r1, r2, r3, r5, lr}
   285a6:	movs	r1, r0
   285a8:	add	r2, sp, #24
   285aa:	movs	r1, r0
   285ac:	add	r2, sp, #72	; 0x48
   285ae:	movs	r1, r0
   285b0:	push	{r3, r4, r5, r6, r7}
   285b2:	movs	r1, r0
   285b4:	add	r1, sp, #832	; 0x340
   285b6:	movs	r1, r0
   285b8:	add	r1, sp, #940	; 0x3ac
   285ba:	movs	r1, r0
   285bc:	push	{r3, r5, r7}
   285be:	movs	r1, r0
   285c0:	add	r1, sp, #512	; 0x200
   285c2:	movs	r1, r0
   285c4:	add	r4, sp, #128	; 0x80
   285c6:	movs	r1, r0

000285c8 <btrfs_merge_delayed_refs@@Base>:
   285c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   285cc:	sub	sp, #28
   285ce:	ldr	r3, [r2, #24]
   285d0:	mov	r5, r2
   285d2:	str	r0, [sp, #16]
   285d4:	cbz	r3, 285f6 <btrfs_merge_delayed_refs@@Base+0x2e>
   285d6:	ldrb.w	r3, [r2, #60]	; 0x3c
   285da:	lsls	r3, r3, #30
   285dc:	bmi.n	285f6 <btrfs_merge_delayed_refs@@Base+0x2e>
   285de:	ldr	r3, [pc, #240]	; (286d0 <btrfs_merge_delayed_refs@@Base+0x108>)
   285e0:	add	r3, pc
   285e2:	add.w	r9, r3, #32
   285e6:	add.w	r0, r5, #24
   285ea:	bl	186e6 <rb_first@@Base>
   285ee:	mov	fp, r0
   285f0:	cmp.w	fp, #0
   285f4:	bne.n	285fc <btrfs_merge_delayed_refs@@Base+0x34>
   285f6:	add	sp, #28
   285f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   285fc:	mov	r0, fp
   285fe:	ldr.w	r8, [pc, #212]	; 286d4 <btrfs_merge_delayed_refs@@Base+0x10c>
   28602:	bl	18706 <rb_next@@Base>
   28606:	mov	r4, fp
   28608:	add	r8, pc
   2860a:	mov	sl, r0
   2860c:	cmp.w	sl, #0
   28610:	bne.n	2861a <btrfs_merge_delayed_refs@@Base+0x52>
   28612:	mov	r0, fp
   28614:	bl	18706 <rb_next@@Base>
   28618:	b.n	285ee <btrfs_merge_delayed_refs@@Base+0x26>
   2861a:	mov	r0, sl
   2861c:	bl	18706 <rb_next@@Base>
   28620:	ldrb.w	r2, [r4, #61]	; 0x3d
   28624:	ldrb.w	r3, [sl, #61]	; 0x3d
   28628:	cmp	r3, r2
   2862a:	str	r0, [sp, #12]
   2862c:	bne.n	28612 <btrfs_merge_delayed_refs@@Base+0x4a>
   2862e:	cmp	r3, #176	; 0xb0
   28630:	beq.n	2863a <btrfs_merge_delayed_refs@@Base+0x72>
   28632:	cmp	r3, #182	; 0xb6
   28634:	beq.n	2869a <btrfs_merge_delayed_refs@@Base+0xd2>
   28636:	bl	283d4 <btrfs_record_file_extent@@Base+0x4f8>
   2863a:	ldrd	r2, r3, [r4, #64]	; 0x40
   2863e:	ldrd	r6, r7, [sl, #64]	; 0x40
   28642:	cmp	r3, r7
   28644:	it	eq
   28646:	cmpeq	r2, r6
   28648:	bne.n	28612 <btrfs_merge_delayed_refs@@Base+0x4a>
   2864a:	ldrb.w	r2, [r4, #60]	; 0x3c
   2864e:	ldrb.w	r3, [sl, #60]	; 0x3c
   28652:	ldr.w	r7, [sl, #56]	; 0x38
   28656:	cmp	r2, r3
   28658:	beq.n	286a4 <btrfs_merge_delayed_refs@@Base+0xdc>
   2865a:	ldr	r3, [r4, #56]	; 0x38
   2865c:	cmp	r3, r7
   2865e:	itttt	ge
   28660:	movge	r3, sl
   28662:	movge	sl, r4
   28664:	movge	r4, r3
   28666:	movge	r6, #0
   28668:	ldr	r7, [r4, #56]	; 0x38
   2866a:	mov	r3, r4
   2866c:	it	lt
   2866e:	movlt	r6, #1
   28670:	mov	r4, sl
   28672:	negs	r7, r7
   28674:	mov	sl, r3
   28676:	ldr	r3, [sp, #16]
   28678:	mov	r2, sl
   2867a:	mov	r1, r5
   2867c:	add.w	r0, r3, #40	; 0x28
   28680:	str	r0, [sp, #20]
   28682:	bl	284c0 <btrfs_record_file_extent@@Base+0x5e4>
   28686:	ldr	r3, [r4, #56]	; 0x38
   28688:	ldr	r0, [sp, #20]
   2868a:	add	r7, r3
   2868c:	str	r7, [r4, #56]	; 0x38
   2868e:	cbnz	r7, 286a8 <btrfs_merge_delayed_refs@@Base+0xe0>
   28690:	mov	r2, r4
   28692:	mov	r1, r5
   28694:	bl	284c0 <btrfs_record_file_extent@@Base+0x5e4>
   28698:	b.n	285e6 <btrfs_merge_delayed_refs@@Base+0x1e>
   2869a:	ldrd	r2, r3, [r4, #72]	; 0x48
   2869e:	ldrd	r6, r7, [sl, #72]	; 0x48
   286a2:	b.n	28642 <btrfs_merge_delayed_refs@@Base+0x7a>
   286a4:	movs	r6, #0
   286a6:	b.n	28676 <btrfs_merge_delayed_refs@@Base+0xae>
   286a8:	ldrb.w	r3, [r4, #61]	; 0x3d
   286ac:	cmp	r3, #176	; 0xb0
   286ae:	beq.n	286b4 <btrfs_merge_delayed_refs@@Base+0xec>
   286b0:	cmp	r3, #182	; 0xb6
   286b2:	bne.n	286c6 <btrfs_merge_delayed_refs@@Base+0xfe>
   286b4:	ldr	r0, [pc, #32]	; (286d8 <btrfs_merge_delayed_refs@@Base+0x110>)
   286b6:	movs	r3, #1
   286b8:	mov	r2, r9
   286ba:	str	r3, [sp, #0]
   286bc:	add	r0, pc
   286be:	movs	r3, #219	; 0xdb
   286c0:	mov	r1, r8
   286c2:	bl	283f8 <btrfs_record_file_extent@@Base+0x51c>
   286c6:	cmp	r6, #0
   286c8:	bne.n	285e6 <btrfs_merge_delayed_refs@@Base+0x1e>
   286ca:	ldr.w	sl, [sp, #12]
   286ce:	b.n	2860c <btrfs_merge_delayed_refs@@Base+0x44>
   286d0:	push	{r1, r4, r6}
   286d2:	movs	r1, r0
   286d4:	cbz	r1, 2871e <btrfs_select_ref_head@@Base+0x42>
   286d6:	movs	r1, r0
   286d8:	sxtb	r3, r6
   286da:	movs	r1, r0

000286dc <btrfs_select_ref_head@@Base>:
   286dc:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   286e0:	add.w	r9, r0, #64	; 0x40
   286e4:	mov	r8, r0
   286e6:	movs	r5, #0
   286e8:	movs	r6, #0
   286ea:	movs	r7, #0
   286ec:	ldrd	r2, r3, [r8, #88]	; 0x58
   286f0:	mov	r0, r9
   286f2:	bl	28430 <btrfs_record_file_extent@@Base+0x554>
   286f6:	mov	r4, r0
   286f8:	cbnz	r0, 2871c <btrfs_select_ref_head@@Base+0x40>
   286fa:	cbz	r5, 28706 <btrfs_select_ref_head@@Base+0x2a>
   286fc:	movs	r4, #0
   286fe:	mov	r0, r4
   28700:	add	sp, #12
   28702:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   28706:	movs	r2, #0
   28708:	movs	r3, #0
   2870a:	mov	r0, r9
   2870c:	strd	r6, r7, [r8, #88]	; 0x58
   28710:	bl	28430 <btrfs_record_file_extent@@Base+0x554>
   28714:	mov	r4, r0
   28716:	cmp	r0, #0
   28718:	beq.n	286fc <btrfs_select_ref_head@@Base+0x20>
   2871a:	movs	r5, #1
   2871c:	ldrb.w	r2, [r4, #60]	; 0x3c
   28720:	mov	r3, r2
   28722:	lsls	r2, r2, #28
   28724:	bmi.n	2876c <btrfs_select_ref_head@@Base+0x90>
   28726:	orr.w	r3, r3, #8
   2872a:	strb.w	r3, [r4, #60]	; 0x3c
   2872e:	ldr.w	r3, [r8, #76]	; 0x4c
   28732:	cbnz	r3, 2874e <btrfs_select_ref_head@@Base+0x72>
   28734:	ldr	r2, [pc, #80]	; (28788 <btrfs_select_ref_head@@Base+0xac>)
   28736:	movs	r3, #1
   28738:	ldr	r1, [pc, #80]	; (2878c <btrfs_select_ref_head@@Base+0xb0>)
   2873a:	ldr	r0, [pc, #84]	; (28790 <btrfs_select_ref_head@@Base+0xb4>)
   2873c:	add	r2, pc
   2873e:	str	r3, [sp, #0]
   28740:	adds	r2, #42	; 0x2a
   28742:	add	r1, pc
   28744:	add	r0, pc
   28746:	mov.w	r3, #290	; 0x122
   2874a:	bl	283f8 <btrfs_record_file_extent@@Base+0x51c>
   2874e:	ldr.w	r3, [r8, #76]	; 0x4c
   28752:	subs	r3, #1
   28754:	str.w	r3, [r8, #76]	; 0x4c
   28758:	ldrd	r3, r2, [r4]
   2875c:	ldrd	r1, r0, [r4, #8]
   28760:	adds	r3, r3, r1
   28762:	adc.w	r2, r0, r2
   28766:	strd	r3, r2, [r8, #88]	; 0x58
   2876a:	b.n	286fe <btrfs_select_ref_head@@Base+0x22>
   2876c:	add.w	r0, r4, #36	; 0x24
   28770:	bl	18706 <rb_next@@Base>
   28774:	cbnz	r0, 28782 <btrfs_select_ref_head@@Base+0xa6>
   28776:	cmp	r5, #0
   28778:	bne.n	286fc <btrfs_select_ref_head@@Base+0x20>
   2877a:	movs	r5, #1
   2877c:	strd	r6, r7, [r8, #88]	; 0x58
   28780:	b.n	286ec <btrfs_select_ref_head@@Base+0x10>
   28782:	sub.w	r4, r0, #36	; 0x24
   28786:	b.n	2871c <btrfs_select_ref_head@@Base+0x40>
   28788:	uxtb	r6, r6
   2878a:	movs	r1, r0
   2878c:	cbz	r7, 287c6 <btrfs_add_delayed_tree_ref@@Base+0x32>
   2878e:	movs	r1, r0
   28790:	sxth	r4, r7
   28792:	movs	r1, r0

00028794 <btrfs_add_delayed_tree_ref@@Base>:
   28794:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28798:	sub	sp, #20
   2879a:	mov	fp, r1
   2879c:	strd	r2, r3, [sp, #8]
   287a0:	ldrd	r3, r4, [sp, #72]	; 0x48
   287a4:	ldrd	r9, r8, [sp, #84]	; 0x54
   287a8:	cmp	r4, #0
   287aa:	ldr	r7, [sp, #92]	; 0x5c
   287ac:	itte	eq
   287ae:	cmpeq	r3, #3
   287b0:	moveq	r6, #1
   287b2:	movne	r6, #0
   287b4:	cmp.w	r8, #0
   287b8:	beq.n	287da <btrfs_add_delayed_tree_ref@@Base+0x46>
   287ba:	ldrb.w	r3, [r8, #20]
   287be:	cbz	r3, 287da <btrfs_add_delayed_tree_ref@@Base+0x46>
   287c0:	ldr	r2, [pc, #920]	; (28b5c <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   287c2:	movs	r3, #1
   287c4:	ldr	r1, [pc, #920]	; (28b60 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   287c6:	ldr	r0, [pc, #924]	; (28b64 <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   287c8:	add	r2, pc
   287ca:	adds	r2, #64	; 0x40
   287cc:	add	r1, pc
   287ce:	add	r0, pc
   287d0:	str	r3, [sp, #0]
   287d2:	mov.w	r3, #568	; 0x238
   287d6:	bl	2839c <btrfs_record_file_extent@@Base+0x4c0>
   287da:	movs	r0, #88	; 0x58
   287dc:	blx	8e40 <malloc@plt+0x4>
   287e0:	mov	r5, r0
   287e2:	cmp	r0, #0
   287e4:	beq.n	28870 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   287e6:	ldrd	r3, r4, [sp, #64]	; 0x40
   287ea:	movs	r2, #1
   287ec:	add.w	sl, r5, #12
   287f0:	str	r5, [r5, #0]
   287f2:	orrs	r3, r4
   287f4:	mov.w	r3, #0
   287f8:	strd	r2, r3, [r5, #48]	; 0x30
   287fc:	mov.w	r2, #0
   28800:	ldrd	r3, r4, [sp, #8]
   28804:	ite	ne
   28806:	movne	r0, #182	; 0xb6
   28808:	moveq	r0, #176	; 0xb0
   2880a:	cmp.w	r9, #3
   2880e:	strb.w	r0, [r5, #61]	; 0x3d
   28812:	mov.w	r0, #64	; 0x40
   28816:	strd	r3, r4, [r5, #24]
   2881a:	it	ne
   2881c:	movne	ip, r9
   2881e:	ldrd	r3, r4, [sp, #56]	; 0x38
   28822:	it	eq
   28824:	moveq.w	ip, #1
   28828:	strd	sl, sl, [r5, #12]
   2882c:	strb.w	ip, [r5, #60]	; 0x3c
   28830:	strd	r3, r4, [r5, #32]
   28834:	movs	r3, #1
   28836:	str	r3, [r5, #56]	; 0x38
   28838:	ldrb.w	r3, [r5, #62]	; 0x3e
   2883c:	bic.w	r3, r3, #3
   28840:	orr.w	r3, r3, #2
   28844:	strb.w	r3, [r5, #62]	; 0x3e
   28848:	movs	r3, #0
   2884a:	strd	r2, r3, [r5, #40]	; 0x28
   2884e:	ldrd	r3, r4, [sp, #72]	; 0x48
   28852:	strd	r3, r4, [r5, #64]	; 0x40
   28856:	ldrd	r3, r4, [sp, #64]	; 0x40
   2885a:	strd	r3, r4, [r5, #72]	; 0x48
   2885e:	ldr	r3, [sp, #80]	; 0x50
   28860:	str	r3, [r5, #80]	; 0x50
   28862:	blx	8e40 <malloc@plt+0x4>
   28866:	mov	r4, r0
   28868:	cbnz	r0, 28876 <btrfs_add_delayed_tree_ref@@Base+0xe2>
   2886a:	mov	r0, r5
   2886c:	blx	8b84 <free@plt+0x4>
   28870:	mvn.w	r0, #11
   28874:	b.n	28a0c <btrfs_add_delayed_tree_ref@@Base+0x278>
   28876:	cmp.w	r9, #4
   2887a:	beq.n	28926 <btrfs_add_delayed_tree_ref@@Base+0x192>
   2887c:	cmp.w	r9, #2
   28880:	sub.w	lr, r9, #3
   28884:	ite	ne
   28886:	movne.w	ip, #1
   2888a:	moveq.w	ip, #4294967295	; 0xffffffff
   2888e:	rsbs	r3, lr, #0
   28892:	adc.w	r3, r3, lr
   28896:	movs	r0, #1
   28898:	movs	r1, #0
   2889a:	strd	r0, r1, [r4, #16]
   2889e:	orr.w	r6, r3, r6, lsl #2
   288a2:	ldrd	r1, r2, [sp, #8]
   288a6:	add.w	r0, r4, #28
   288aa:	ldrb.w	r9, [r4, #60]	; 0x3c
   288ae:	mov.w	lr, #0
   288b2:	strd	r8, ip, [r4, #48]	; 0x30
   288b6:	strd	r1, r2, [r4]
   288ba:	bic.w	r9, r9, #15
   288be:	ldrd	r1, r2, [sp, #56]	; 0x38
   288c2:	orr.w	r6, r6, r9
   288c6:	str.w	ip, [r4, #56]	; 0x38
   288ca:	add.w	ip, fp, #64	; 0x40
   288ce:	strd	r0, r0, [r4, #28]
   288d2:	add.w	r0, r4, #36	; 0x24
   288d6:	mov	r8, ip
   288d8:	strd	r1, r2, [r4, #8]
   288dc:	str.w	lr, [r4, #24]
   288e0:	str	r0, [r4, #36]	; 0x24
   288e2:	strb.w	r6, [r4, #60]	; 0x3c
   288e6:	ldr.w	r6, [r8]
   288ea:	cbnz	r6, 2892e <btrfs_add_delayed_tree_ref@@Base+0x19a>
   288ec:	strd	lr, r6, [r4, #36]	; 0x24
   288f0:	mov	r1, ip
   288f2:	str	r6, [r4, #44]	; 0x2c
   288f4:	str.w	r0, [r8]
   288f8:	bl	183ca <rb_insert_color@@Base>
   288fc:	cmp	r7, #0
   288fe:	bne.w	28a5e <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   28902:	ldr.w	r3, [fp, #72]	; 0x48
   28906:	adds	r3, #1
   28908:	str.w	r3, [fp, #72]	; 0x48
   2890c:	ldr.w	r3, [fp, #76]	; 0x4c
   28910:	adds	r3, #1
   28912:	str.w	r3, [fp, #76]	; 0x4c
   28916:	ldrd	r3, r2, [fp, #40]	; 0x28
   2891a:	adds	r3, #1
   2891c:	adc.w	r2, r2, #0
   28920:	strd	r3, r2, [fp, #40]	; 0x28
   28924:	b.n	289be <btrfs_add_delayed_tree_ref@@Base+0x22a>
   28926:	mov.w	ip, #0
   2892a:	mov	r3, ip
   2892c:	b.n	28896 <btrfs_add_delayed_tree_ref@@Base+0x102>
   2892e:	ldrd	r8, r9, [r6, #-36]	; 0x24
   28932:	ldrd	r1, r2, [sp, #8]
   28936:	cmp	r2, r9
   28938:	it	eq
   2893a:	cmpeq	r1, r8
   2893c:	bcs.n	28946 <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   2893e:	add.w	r8, r6, #8
   28942:	mov	lr, r6
   28944:	b.n	288e6 <btrfs_add_delayed_tree_ref@@Base+0x152>
   28946:	ldrd	r1, r2, [sp, #8]
   2894a:	cmp	r9, r2
   2894c:	it	eq
   2894e:	cmpeq	r8, r1
   28950:	bcs.n	28958 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   28952:	add.w	r8, r6, #4
   28956:	b.n	28942 <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   28958:	ldrb.w	r1, [r4, #60]	; 0x3c
   2895c:	ldrb	r2, [r6, #24]
   2895e:	eor.w	r0, r1, r2
   28962:	lsls	r0, r0, #30
   28964:	bpl.n	2897e <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   28966:	ldr	r2, [pc, #512]	; (28b68 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   28968:	movs	r3, #1
   2896a:	ldr	r1, [pc, #512]	; (28b6c <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   2896c:	ldr	r0, [pc, #512]	; (28b70 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   2896e:	add	r2, pc
   28970:	str	r3, [sp, #0]
   28972:	adds	r2, #91	; 0x5b
   28974:	add	r1, pc
   28976:	add	r0, pc
   28978:	movw	r3, #363	; 0x16b
   2897c:	b.n	287d6 <btrfs_add_delayed_tree_ref@@Base+0x42>
   2897e:	lsls	r1, r1, #31
   28980:	itttt	mi
   28982:	bfimi	r2, r3, #0, #1
   28986:	strbmi	r2, [r6, #24]
   28988:	ldrdmi	r2, r3, [r4, #8]
   2898c:	strdmi	r2, r3, [r6, #-28]
   28990:	ldr	r3, [r4, #48]	; 0x30
   28992:	cbz	r3, 2899c <btrfs_add_delayed_tree_ref@@Base+0x208>
   28994:	ldr	r2, [r6, #12]
   28996:	cmp	r2, #0
   28998:	bne.n	28a12 <btrfs_add_delayed_tree_ref@@Base+0x27e>
   2899a:	str	r3, [r6, #12]
   2899c:	cbz	r7, 289a2 <btrfs_add_delayed_tree_ref@@Base+0x20e>
   2899e:	ldr	r3, [r6, #16]
   289a0:	str	r3, [r7, #0]
   289a2:	ldr	r2, [r4, #56]	; 0x38
   289a4:	mov	r0, r4
   289a6:	ldr	r3, [r6, #20]
   289a8:	sub.w	r7, r6, #36	; 0x24
   289ac:	add	r3, r2
   289ae:	str	r3, [r6, #20]
   289b0:	ldr	r3, [r6, #16]
   289b2:	ldr	r2, [r4, #56]	; 0x38
   289b4:	mov	r4, r7
   289b6:	add	r3, r2
   289b8:	str	r3, [r6, #16]
   289ba:	blx	8b84 <free@plt+0x4>
   289be:	ldr	r3, [sp, #96]	; 0x60
   289c0:	cbz	r3, 289c8 <btrfs_add_delayed_tree_ref@@Base+0x234>
   289c2:	ldr	r3, [r4, #52]	; 0x34
   289c4:	ldr	r2, [sp, #96]	; 0x60
   289c6:	str	r3, [r2, #0]
   289c8:	add.w	r1, r4, #24
   289cc:	movs	r0, #0
   289ce:	mov	r3, r1
   289d0:	ldr	r2, [r3, #0]
   289d2:	cmp	r2, #0
   289d4:	bne.n	28a62 <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   289d6:	strd	r0, r2, [r5]
   289da:	mov	r0, r5
   289dc:	str	r2, [r5, #8]
   289de:	str	r5, [r3, #0]
   289e0:	bl	183ca <rb_insert_color@@Base>
   289e4:	ldrb.w	r3, [r5, #60]	; 0x3c
   289e8:	cmp	r3, #1
   289ea:	bne.n	289fc <btrfs_add_delayed_tree_ref@@Base+0x268>
   289ec:	ldr	r3, [r4, #32]
   289ee:	adds	r4, #28
   289f0:	str.w	sl, [r4, #4]
   289f4:	strd	r4, r3, [r5, #12]
   289f8:	str.w	sl, [r3]
   289fc:	ldrd	r3, r2, [fp, #40]	; 0x28
   28a00:	adds	r3, #1
   28a02:	adc.w	r2, r2, #0
   28a06:	strd	r3, r2, [fp, #40]	; 0x28
   28a0a:	movs	r0, #0
   28a0c:	add	sp, #20
   28a0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a12:	ldrb	r1, [r3, #18]
   28a14:	cbz	r1, 28a30 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   28a16:	add.w	r1, r3, #16
   28a1a:	ldr.w	r0, [r3], #4
   28a1e:	cmp	r3, r1
   28a20:	str.w	r0, [r2], #4
   28a24:	bne.n	28a1a <btrfs_add_delayed_tree_ref@@Base+0x286>
   28a26:	ldrb	r3, [r3, #0]
   28a28:	strb	r3, [r2, #0]
   28a2a:	movs	r2, #1
   28a2c:	ldr	r3, [r6, #12]
   28a2e:	strb	r2, [r3, #18]
   28a30:	ldr	r0, [r4, #48]	; 0x30
   28a32:	ldrb	r3, [r0, #19]
   28a34:	cbz	r3, 28a52 <btrfs_add_delayed_tree_ref@@Base+0x2be>
   28a36:	ldr	r1, [r6, #12]
   28a38:	ldrd	r2, r0, [r0, #24]
   28a3c:	ldr	r3, [r1, #28]
   28a3e:	str	r3, [sp, #8]
   28a40:	ldr	r3, [r1, #24]
   28a42:	orrs	r2, r3
   28a44:	ldr	r3, [sp, #8]
   28a46:	orrs	r3, r0
   28a48:	strd	r2, r3, [r1, #24]
   28a4c:	ldr	r3, [r6, #12]
   28a4e:	movs	r2, #1
   28a50:	strb	r2, [r3, #19]
   28a52:	ldr	r0, [r4, #48]	; 0x30
   28a54:	cmp	r0, #0
   28a56:	beq.n	2899c <btrfs_add_delayed_tree_ref@@Base+0x208>
   28a58:	blx	8b84 <free@plt+0x4>
   28a5c:	b.n	2899c <btrfs_add_delayed_tree_ref@@Base+0x208>
   28a5e:	str	r6, [r7, #0]
   28a60:	b.n	28902 <btrfs_add_delayed_tree_ref@@Base+0x16e>
   28a62:	ldrb.w	r3, [r5, #61]	; 0x3d
   28a66:	ldrb.w	r0, [r2, #61]	; 0x3d
   28a6a:	cmp	r3, r0
   28a6c:	bcc.n	28b0c <btrfs_add_delayed_tree_ref@@Base+0x378>
   28a6e:	bhi.n	28a94 <btrfs_add_delayed_tree_ref@@Base+0x300>
   28a70:	cmp	r3, #176	; 0xb0
   28a72:	beq.n	28a7c <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   28a74:	cmp	r3, #182	; 0xb6
   28a76:	beq.n	28a98 <btrfs_add_delayed_tree_ref@@Base+0x304>
   28a78:	bl	283d4 <btrfs_record_file_extent@@Base+0x4f8>
   28a7c:	ldrd	r6, r7, [r5, #64]	; 0x40
   28a80:	ldrd	r8, r9, [r2, #64]	; 0x40
   28a84:	cmp	r7, r9
   28a86:	it	eq
   28a88:	cmpeq	r6, r8
   28a8a:	bcc.n	28b0c <btrfs_add_delayed_tree_ref@@Base+0x378>
   28a8c:	cmp	r9, r7
   28a8e:	it	eq
   28a90:	cmpeq	r8, r6
   28a92:	bcs.n	28aa2 <btrfs_add_delayed_tree_ref@@Base+0x30e>
   28a94:	adds	r3, r2, #4
   28a96:	b.n	28b10 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   28a98:	ldrd	r6, r7, [r5, #72]	; 0x48
   28a9c:	ldrd	r8, r9, [r2, #72]	; 0x48
   28aa0:	b.n	28a84 <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   28aa2:	ldrd	r6, r7, [r5, #40]	; 0x28
   28aa6:	ldrd	r8, r9, [r2, #40]	; 0x28
   28aaa:	cmp	r7, r9
   28aac:	it	eq
   28aae:	cmpeq	r6, r8
   28ab0:	bcc.n	28b0c <btrfs_add_delayed_tree_ref@@Base+0x378>
   28ab2:	cmp	r9, r7
   28ab4:	it	eq
   28ab6:	cmpeq	r8, r6
   28ab8:	bcc.n	28a94 <btrfs_add_delayed_tree_ref@@Base+0x300>
   28aba:	ldrb.w	r0, [r5, #60]	; 0x3c
   28abe:	ldrb.w	r1, [r2, #60]	; 0x3c
   28ac2:	ldr	r3, [r5, #56]	; 0x38
   28ac4:	cmp	r1, r0
   28ac6:	beq.n	28af2 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   28ac8:	ldr	r1, [r2, #56]	; 0x38
   28aca:	cmp	r3, r1
   28acc:	ble.n	28b50 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   28ace:	strb.w	r0, [r2, #60]	; 0x3c
   28ad2:	negs	r3, r1
   28ad4:	ldr	r1, [r5, #56]	; 0x38
   28ad6:	add.w	r0, r2, #12
   28ada:	str	r1, [r2, #56]	; 0x38
   28adc:	ldrb.w	r1, [r5, #60]	; 0x3c
   28ae0:	cmp	r1, #1
   28ae2:	bne.n	28b14 <btrfs_add_delayed_tree_ref@@Base+0x380>
   28ae4:	ldr	r1, [r4, #32]
   28ae6:	add.w	r6, r4, #28
   28aea:	str	r0, [r4, #32]
   28aec:	strd	r6, r1, [r2, #12]
   28af0:	str	r0, [r1, #0]
   28af2:	ldr	r1, [r2, #56]	; 0x38
   28af4:	add	r3, r1
   28af6:	str	r3, [r2, #56]	; 0x38
   28af8:	cbnz	r3, 28b04 <btrfs_add_delayed_tree_ref@@Base+0x370>
   28afa:	add.w	r0, fp, #40	; 0x28
   28afe:	mov	r1, r4
   28b00:	bl	284c0 <btrfs_record_file_extent@@Base+0x5e4>
   28b04:	mov	r0, r5
   28b06:	blx	8b84 <free@plt+0x4>
   28b0a:	b.n	28a0a <btrfs_add_delayed_tree_ref@@Base+0x276>
   28b0c:	add.w	r3, r2, #8
   28b10:	mov	r0, r2
   28b12:	b.n	289d0 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   28b14:	cmp	r1, #2
   28b16:	bne.n	28b40 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   28b18:	ldr	r1, [r2, #12]
   28b1a:	cmp	r1, r0
   28b1c:	bne.n	28b30 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   28b1e:	ldr	r1, [pc, #84]	; (28b74 <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   28b20:	mov.w	r2, #330	; 0x14a
   28b24:	ldr	r0, [pc, #80]	; (28b78 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   28b26:	add	r1, pc
   28b28:	adds	r1, #116	; 0x74
   28b2a:	add	r0, pc
   28b2c:	bl	28482 <btrfs_record_file_extent@@Base+0x5a6>
   28b30:	ldr	r0, [r2, #16]
   28b32:	str	r0, [r1, #4]
   28b34:	str	r1, [r0, #0]
   28b36:	ldr	r0, [pc, #28]	; (28b54 <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   28b38:	ldr	r1, [pc, #28]	; (28b58 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   28b3a:	strd	r0, r1, [r2, #12]
   28b3e:	b.n	28af2 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   28b40:	ldr	r1, [pc, #56]	; (28b7c <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   28b42:	movw	r2, #333	; 0x14d
   28b46:	ldr	r0, [pc, #56]	; (28b80 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   28b48:	add	r1, pc
   28b4a:	adds	r1, #116	; 0x74
   28b4c:	add	r0, pc
   28b4e:	b.n	28b2c <btrfs_add_delayed_tree_ref@@Base+0x398>
   28b50:	negs	r3, r3
   28b52:	b.n	28af2 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   28b54:	lsls	r0, r0, #4
   28b56:	movs	r0, r2
   28b58:	lsls	r0, r0, #8
   28b5a:	movs	r0, r4
   28b5c:	sxtb	r2, r5
   28b5e:	movs	r1, r0
   28b60:	cbz	r5, 28b78 <btrfs_add_delayed_tree_ref@@Base+0x3e4>
   28b62:	movs	r1, r0
   28b64:	cbz	r5, 28b9c <btrfs_destroy_delayed_refs@@Base+0x18>
   28b66:	movs	r1, r0
   28b68:	sub	sp, #272	; 0x110
   28b6a:	movs	r1, r0
   28b6c:	add	r7, sp, #692	; 0x2b4
   28b6e:	movs	r1, r0
   28b70:	add	sp, #308	; 0x134
   28b72:	movs	r1, r0
   28b74:	add	r7, sp, #48	; 0x30
   28b76:	movs	r1, r0
   28b78:	add	r6, sp, #760	; 0x2f8
   28b7a:	movs	r1, r0
   28b7c:	add	r6, sp, #936	; 0x3a8
   28b7e:	movs	r1, r0
   28b80:	str	r3, [sp, #936]	; 0x3a8
   28b82:	movs	r1, r0

00028b84 <btrfs_destroy_delayed_refs@@Base>:
   28b84:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   28b88:	mov	r5, r0
   28b8a:	ldr	r3, [r0, #64]	; 0x40
   28b8c:	cbnz	r3, 28b9c <btrfs_destroy_delayed_refs@@Base+0x18>
   28b8e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   28b92:	mov	r1, r9
   28b94:	mov	r0, r8
   28b96:	bl	284c0 <btrfs_record_file_extent@@Base+0x5e4>
   28b9a:	b.n	28bb8 <btrfs_destroy_delayed_refs@@Base+0x34>
   28b9c:	mov	r6, r0
   28b9e:	add.w	r8, r0, #40	; 0x28
   28ba2:	ldr.w	r7, [r6], #64
   28ba6:	mov	r0, r6
   28ba8:	bl	186e6 <rb_first@@Base>
   28bac:	cmp	r0, #0
   28bae:	beq.n	28b8e <btrfs_destroy_delayed_refs@@Base+0xa>
   28bb0:	sub.w	r9, r0, #36	; 0x24
   28bb4:	sub.w	r4, r0, #12
   28bb8:	mov	r0, r4
   28bba:	bl	186e6 <rb_first@@Base>
   28bbe:	mov	r2, r0
   28bc0:	cmp	r0, #0
   28bc2:	bne.n	28b92 <btrfs_destroy_delayed_refs@@Base+0xe>
   28bc4:	mov	r2, r9
   28bc6:	mov	r1, r7
   28bc8:	mov	r0, r5
   28bca:	bl	276c8 <cleanup_ref_head@@Base>
   28bce:	cmp	r0, #0
   28bd0:	beq.n	28ba6 <btrfs_destroy_delayed_refs@@Base+0x22>
   28bd2:	ldr	r1, [pc, #16]	; (28be4 <btrfs_destroy_delayed_refs@@Base+0x60>)
   28bd4:	movw	r2, #629	; 0x275
   28bd8:	ldr	r0, [pc, #12]	; (28be8 <btrfs_destroy_delayed_refs@@Base+0x64>)
   28bda:	add	r1, pc
   28bdc:	adds	r1, #135	; 0x87
   28bde:	add	r0, pc
   28be0:	bl	28482 <btrfs_record_file_extent@@Base+0x5a6>
   28be4:	add	r6, sp, #352	; 0x160
   28be6:	movs	r1, r0
   28be8:	add	r6, sp, #160	; 0xa0
   28bea:	movs	r1, r0
   28bec:	ldr.w	ip, [pc, #60]	; 28c2c <btrfs_destroy_delayed_refs@@Base+0xa8>
   28bf0:	push	{r0, r1, r2, r3, r4, lr}
   28bf2:	add	ip, pc
   28bf4:	ldr	r3, [pc, #56]	; (28c30 <btrfs_destroy_delayed_refs@@Base+0xac>)
   28bf6:	add.w	r2, r1, r2, lsl #3
   28bfa:	mov	r1, sp
   28bfc:	ldr.w	r3, [ip, r3]
   28c00:	ldr	r3, [r3, #0]
   28c02:	str	r3, [sp, #12]
   28c04:	mov.w	r3, #0
   28c08:	movs	r3, #8
   28c0a:	bl	1bbba <read_extent_buffer@@Base>
   28c0e:	ldr	r2, [pc, #36]	; (28c34 <btrfs_destroy_delayed_refs@@Base+0xb0>)
   28c10:	ldr	r3, [pc, #28]	; (28c30 <btrfs_destroy_delayed_refs@@Base+0xac>)
   28c12:	add	r2, pc
   28c14:	ldrd	r0, r1, [sp]
   28c18:	ldr	r3, [r2, r3]
   28c1a:	ldr	r2, [r3, #0]
   28c1c:	ldr	r3, [sp, #12]
   28c1e:	eors	r2, r3
   28c20:	beq.n	28c26 <btrfs_destroy_delayed_refs@@Base+0xa2>
   28c22:	blx	8c90 <__stack_chk_fail@plt>
   28c26:	add	sp, #20
   28c28:	ldr.w	pc, [sp], #4
   28c2c:	movs	r1, #38	; 0x26
   28c2e:	movs	r4, r0
   28c30:	lsls	r0, r1, #10
   28c32:	movs	r0, r0
   28c34:	movs	r1, #6
   28c36:	movs	r4, r0
   28c38:	ldr	r2, [pc, #60]	; (28c78 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   28c3a:	movs	r1, #16
   28c3c:	ldr	r3, [pc, #60]	; (28c7c <btrfs_destroy_delayed_refs@@Base+0xf8>)
   28c3e:	push	{r4, lr}
   28c40:	add	r2, pc
   28c42:	sub	sp, #72	; 0x48
   28c44:	add	r4, sp, #4
   28c46:	ldr	r3, [r2, r3]
   28c48:	mov	r0, r4
   28c4a:	ldr	r3, [r3, #0]
   28c4c:	str	r3, [sp, #68]	; 0x44
   28c4e:	mov.w	r3, #0
   28c52:	blx	8e98 <backtrace@plt>
   28c56:	movs	r2, #2
   28c58:	mov	r1, r0
   28c5a:	mov	r0, r4
   28c5c:	blx	9214 <backtrace_symbols_fd@plt>
   28c60:	ldr	r2, [pc, #28]	; (28c80 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   28c62:	ldr	r3, [pc, #24]	; (28c7c <btrfs_destroy_delayed_refs@@Base+0xf8>)
   28c64:	add	r2, pc
   28c66:	ldr	r3, [r2, r3]
   28c68:	ldr	r2, [r3, #0]
   28c6a:	ldr	r3, [sp, #68]	; 0x44
   28c6c:	eors	r2, r3
   28c6e:	beq.n	28c74 <btrfs_destroy_delayed_refs@@Base+0xf0>
   28c70:	blx	8c90 <__stack_chk_fail@plt>
   28c74:	add	sp, #72	; 0x48
   28c76:	pop	{r4, pc}
   28c78:	movs	r0, #216	; 0xd8
   28c7a:	movs	r4, r0
   28c7c:	lsls	r0, r1, #10
   28c7e:	movs	r0, r0
   28c80:	movs	r0, #180	; 0xb4
   28c82:	movs	r4, r0
   28c84:	push	{r4, r5, r6, lr}
   28c86:	mov	r6, r0
   28c88:	movs	r4, #0
   28c8a:	and.w	r0, r0, #1
   28c8e:	mov	r1, r4
   28c90:	orrs.w	r3, r0, r1
   28c94:	beq.n	28d26 <btrfs_destroy_delayed_refs@@Base+0x1a2>
   28c96:	ldr	r1, [pc, #240]	; (28d88 <btrfs_destroy_delayed_refs@@Base+0x204>)
   28c98:	mov	r0, r2
   28c9a:	add	r1, pc
   28c9c:	blx	8d9c <strcpy@plt>
   28ca0:	mov	r2, r0
   28ca2:	and.w	r0, r6, #4
   28ca6:	movs	r1, #0
   28ca8:	orrs.w	r3, r0, r1
   28cac:	beq.n	28cc8 <btrfs_destroy_delayed_refs@@Base+0x144>
   28cae:	cbnz	r4, 28cbc <btrfs_destroy_delayed_refs@@Base+0x138>
   28cb0:	ldr	r1, [pc, #216]	; (28d8c <btrfs_destroy_delayed_refs@@Base+0x208>)
   28cb2:	mov	r0, r2
   28cb4:	add	r1, pc
   28cb6:	blx	8d3c <strcat@plt+0x4>
   28cba:	mov	r2, r0
   28cbc:	ldr	r1, [pc, #208]	; (28d90 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   28cbe:	mov	r0, r2
   28cc0:	add	r1, pc
   28cc2:	blx	8d3c <strcat@plt+0x4>
   28cc6:	mov	r2, r0
   28cc8:	and.w	r0, r6, #2
   28ccc:	movs	r1, #0
   28cce:	orrs.w	r3, r0, r1
   28cd2:	beq.n	28cee <btrfs_destroy_delayed_refs@@Base+0x16a>
   28cd4:	cbnz	r4, 28ce2 <btrfs_destroy_delayed_refs@@Base+0x15e>
   28cd6:	ldr	r1, [pc, #188]	; (28d94 <btrfs_destroy_delayed_refs@@Base+0x210>)
   28cd8:	mov	r0, r2
   28cda:	add	r1, pc
   28cdc:	blx	8d3c <strcat@plt+0x4>
   28ce0:	mov	r2, r0
   28ce2:	ldr	r1, [pc, #180]	; (28d98 <btrfs_destroy_delayed_refs@@Base+0x214>)
   28ce4:	mov	r0, r2
   28ce6:	add	r1, pc
   28ce8:	blx	8d3c <strcat@plt+0x4>
   28cec:	mov	r2, r0
   28cee:	and.w	r4, r6, #2040	; 0x7f8
   28cf2:	movs	r5, #0
   28cf4:	cmp	r5, #0
   28cf6:	it	eq
   28cf8:	cmpeq	r4, #128	; 0x80
   28cfa:	beq.n	28d82 <btrfs_destroy_delayed_refs@@Base+0x1fe>
   28cfc:	cmp	r5, #0
   28cfe:	it	eq
   28d00:	cmpeq	r4, #129	; 0x81
   28d02:	bcs.n	28d38 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   28d04:	cmp	r5, #0
   28d06:	it	eq
   28d08:	cmpeq	r4, #32
   28d0a:	beq.n	28d7c <btrfs_destroy_delayed_refs@@Base+0x1f8>
   28d0c:	cmp	r5, #0
   28d0e:	it	eq
   28d10:	cmpeq	r4, #33	; 0x21
   28d12:	bcs.n	28d2a <btrfs_destroy_delayed_refs@@Base+0x1a6>
   28d14:	cmp	r5, #0
   28d16:	it	eq
   28d18:	cmpeq	r4, #8
   28d1a:	beq.n	28d5c <btrfs_destroy_delayed_refs@@Base+0x1d8>
   28d1c:	cmp	r5, #0
   28d1e:	it	eq
   28d20:	cmpeq	r4, #16
   28d22:	beq.n	28d6a <btrfs_destroy_delayed_refs@@Base+0x1e6>
   28d24:	pop	{r4, r5, r6, pc}
   28d26:	movs	r4, #1
   28d28:	b.n	28ca2 <btrfs_destroy_delayed_refs@@Base+0x11e>
   28d2a:	cmp	r5, #0
   28d2c:	it	eq
   28d2e:	cmpeq	r4, #64	; 0x40
   28d30:	bne.n	28d24 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   28d32:	ldr	r1, [pc, #104]	; (28d9c <btrfs_destroy_delayed_refs@@Base+0x218>)
   28d34:	add	r1, pc
   28d36:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d38:	cmp	r5, #0
   28d3a:	it	eq
   28d3c:	cmpeq.w	r4, #512	; 0x200
   28d40:	beq.n	28d70 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   28d42:	cmp	r5, #0
   28d44:	it	eq
   28d46:	cmpeq.w	r4, #1024	; 0x400
   28d4a:	beq.n	28d76 <btrfs_destroy_delayed_refs@@Base+0x1f2>
   28d4c:	cmp	r5, #0
   28d4e:	it	eq
   28d50:	cmpeq.w	r4, #256	; 0x100
   28d54:	bne.n	28d24 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   28d56:	ldr	r1, [pc, #72]	; (28da0 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   28d58:	add	r1, pc
   28d5a:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d5c:	ldr	r1, [pc, #68]	; (28da4 <btrfs_destroy_delayed_refs@@Base+0x220>)
   28d5e:	add	r1, pc
   28d60:	ldmia.w	sp!, {r4, r5, r6, lr}
   28d64:	mov	r0, r2
   28d66:	b.w	8d38 <strcat@plt>
   28d6a:	ldr	r1, [pc, #60]	; (28da8 <btrfs_destroy_delayed_refs@@Base+0x224>)
   28d6c:	add	r1, pc
   28d6e:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d70:	ldr	r1, [pc, #56]	; (28dac <btrfs_destroy_delayed_refs@@Base+0x228>)
   28d72:	add	r1, pc
   28d74:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d76:	ldr	r1, [pc, #56]	; (28db0 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   28d78:	add	r1, pc
   28d7a:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d7c:	ldr	r1, [pc, #52]	; (28db4 <btrfs_destroy_delayed_refs@@Base+0x230>)
   28d7e:	add	r1, pc
   28d80:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d82:	ldr	r1, [pc, #52]	; (28db8 <btrfs_destroy_delayed_refs@@Base+0x234>)
   28d84:	add	r1, pc
   28d86:	b.n	28d60 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   28d88:	pop	{r4, pc}
   28d8a:	movs	r1, r0
   28d8c:	strh	r5, [r3, #36]	; 0x24
   28d8e:	movs	r1, r0
   28d90:	pop	{r0, r4, r5, r6, r7}
   28d92:	movs	r1, r0
   28d94:	strh	r7, [r6, #34]	; 0x22
   28d96:	movs	r1, r0
   28d98:	pop	{r1, r2, r4, r6, r7}
   28d9a:	movs	r1, r0
   28d9c:	add	r5, sp, #788	; 0x314
   28d9e:	movs	r1, r0
   28da0:	add	r5, sp, #704	; 0x2c0
   28da2:	movs	r1, r0
   28da4:	add	r5, sp, #472	; 0x1d8
   28da6:	movs	r1, r0
   28da8:	add	r5, sp, #444	; 0x1bc
   28daa:	movs	r1, r0
   28dac:	add	r5, sp, #448	; 0x1c0
   28dae:	movs	r1, r0
   28db0:	add	r5, sp, #460	; 0x1cc
   28db2:	movs	r1, r0
   28db4:	add	r5, sp, #472	; 0x1d8
   28db6:	movs	r1, r0
   28db8:	add	r5, sp, #500	; 0x1f4
   28dba:	movs	r1, r0
   28dbc:	push	{r4, lr}
   28dbe:	sub	sp, #24
   28dc0:	ldr	r2, [r0, #64]	; 0x40
   28dc2:	mov	r4, r0
   28dc4:	ldr	r3, [r0, #68]	; 0x44
   28dc6:	ldr	r1, [pc, #112]	; (28e38 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   28dc8:	strd	r2, r3, [sp, #16]
   28dcc:	add	r1, pc
   28dce:	ldr	r2, [r0, #56]	; 0x38
   28dd0:	ldr	r3, [r0, #60]	; 0x3c
   28dd2:	strd	r2, r3, [sp, #8]
   28dd6:	ldr	r2, [r0, #16]
   28dd8:	ldr	r3, [r0, #20]
   28dda:	strd	r2, r3, [sp]
   28dde:	ldr	r2, [r0, #0]
   28de0:	ldr	r3, [r0, #4]
   28de2:	movs	r0, #1
   28de4:	blx	900c <__printf_chk@plt+0x4>
   28de8:	ldr	r2, [r4, #32]
   28dea:	ldr	r3, [r4, #36]	; 0x24
   28dec:	movs	r0, #1
   28dee:	ldr	r1, [pc, #76]	; (28e3c <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   28df0:	strd	r2, r3, [sp, #8]
   28df4:	add	r1, pc
   28df6:	ldr	r2, [r4, #24]
   28df8:	ldr	r3, [r4, #28]
   28dfa:	strd	r2, r3, [sp]
   28dfe:	ldr	r3, [r4, #12]
   28e00:	ldr	r2, [r4, #8]
   28e02:	blx	900c <__printf_chk@plt+0x4>
   28e06:	ldr	r3, [r4, #76]	; 0x4c
   28e08:	ldr	r2, [r4, #48]	; 0x30
   28e0a:	movs	r0, #1
   28e0c:	ldr	r1, [pc, #48]	; (28e40 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   28e0e:	str	r3, [sp, #12]
   28e10:	ldr	r3, [r4, #72]	; 0x48
   28e12:	add	r1, pc
   28e14:	str	r3, [sp, #8]
   28e16:	ldr	r3, [r4, #52]	; 0x34
   28e18:	strd	r2, r3, [sp]
   28e1c:	ldr	r2, [r4, #40]	; 0x28
   28e1e:	ldr	r3, [r4, #44]	; 0x2c
   28e20:	blx	900c <__printf_chk@plt+0x4>
   28e24:	ldr	r1, [pc, #28]	; (28e44 <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   28e26:	ldr	r3, [r4, #84]	; 0x54
   28e28:	movs	r0, #1
   28e2a:	ldr	r2, [r4, #80]	; 0x50
   28e2c:	add	r1, pc
   28e2e:	add	sp, #24
   28e30:	ldmia.w	sp!, {r4, lr}
   28e34:	b.w	9008 <__printf_chk@plt>
   28e38:	add	r5, sp, #268	; 0x10c
   28e3a:	movs	r1, r0
   28e3c:	add	r5, sp, #312	; 0x138
   28e3e:	movs	r1, r0
   28e40:	add	r5, sp, #396	; 0x18c
   28e42:	movs	r1, r0
   28e44:	add	r5, sp, #496	; 0x1f0
   28e46:	movs	r1, r0
   28e48:	push	{r4, r5, r6, r7, lr}
   28e4a:	mov	r6, r2
   28e4c:	ldr	r2, [pc, #104]	; (28eb8 <btrfs_destroy_delayed_refs@@Base+0x334>)
   28e4e:	sub	sp, #292	; 0x124
   28e50:	ldr	r3, [pc, #104]	; (28ebc <btrfs_destroy_delayed_refs@@Base+0x338>)
   28e52:	add.w	r4, r0, #96	; 0x60
   28e56:	add	r2, pc
   28e58:	add	r5, sp, #28
   28e5a:	ldr	r3, [r2, r3]
   28e5c:	ldr	r3, [r3, #0]
   28e5e:	str	r3, [sp, #284]	; 0x11c
   28e60:	mov.w	r3, #0
   28e64:	movs	r3, #25
   28e66:	mla	r1, r3, r1, r4
   28e6a:	ldr.w	r2, [r1, #118]	; 0x76
   28e6e:	mov	r1, r5
   28e70:	add.w	r3, r2, #101	; 0x65
   28e74:	adds	r2, #119	; 0x77
   28e76:	add	r4, r3
   28e78:	ldrh	r7, [r4, #16]
   28e7a:	mov	r3, r7
   28e7c:	bl	1bbba <read_extent_buffer@@Base>
   28e80:	strd	r7, r5, [sp, #16]
   28e84:	ldr	r2, [r4, #8]
   28e86:	movs	r0, #1
   28e88:	ldr	r3, [r4, #12]
   28e8a:	ldr	r1, [pc, #52]	; (28ec0 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   28e8c:	strd	r2, r3, [sp, #8]
   28e90:	add	r1, pc
   28e92:	ldr	r2, [r4, #0]
   28e94:	ldr	r3, [r4, #4]
   28e96:	strd	r2, r3, [sp]
   28e9a:	mov	r2, r6
   28e9c:	blx	900c <__printf_chk@plt+0x4>
   28ea0:	ldr	r2, [pc, #32]	; (28ec4 <btrfs_destroy_delayed_refs@@Base+0x340>)
   28ea2:	ldr	r3, [pc, #24]	; (28ebc <btrfs_destroy_delayed_refs@@Base+0x338>)
   28ea4:	add	r2, pc
   28ea6:	ldr	r3, [r2, r3]
   28ea8:	ldr	r2, [r3, #0]
   28eaa:	ldr	r3, [sp, #284]	; 0x11c
   28eac:	eors	r2, r3
   28eae:	beq.n	28eb4 <btrfs_destroy_delayed_refs@@Base+0x330>
   28eb0:	blx	8c90 <__stack_chk_fail@plt>
   28eb4:	add	sp, #292	; 0x124
   28eb6:	pop	{r4, r5, r6, r7, pc}
   28eb8:	subs	r2, r0, #3
   28eba:	movs	r4, r0
   28ebc:	lsls	r0, r1, #10
   28ebe:	movs	r0, r0
   28ec0:	add	r5, sp, #228	; 0xe4
   28ec2:	movs	r1, r0
   28ec4:	subs	r4, r6, #1
   28ec6:	movs	r4, r0
   28ec8:	ldr	r2, [pc, #112]	; (28f3c <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   28eca:	ldr	r3, [pc, #116]	; (28f40 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   28ecc:	add	r2, pc
   28ece:	push	{r4, r5, r6, r7, lr}
   28ed0:	sub	sp, #116	; 0x74
   28ed2:	ldr	r3, [r2, r3]
   28ed4:	add	r4, sp, #12
   28ed6:	add	r6, sp, #28
   28ed8:	movs	r2, #32
   28eda:	ldr	r3, [r3, #0]
   28edc:	str	r3, [sp, #108]	; 0x6c
   28ede:	mov.w	r3, #0
   28ee2:	mov	r1, r4
   28ee4:	movs	r3, #16
   28ee6:	mov	r5, r0
   28ee8:	bl	1bbba <read_extent_buffer@@Base>
   28eec:	mov	r1, r6
   28eee:	mov	r0, r4
   28ef0:	movs	r7, #0
   28ef2:	strb.w	r7, [sp, #64]	; 0x40
   28ef6:	blx	8b1c <uuid_unparse@plt>
   28efa:	movs	r2, #64	; 0x40
   28efc:	movs	r3, #16
   28efe:	mov	r1, r4
   28f00:	mov	r0, r5
   28f02:	bl	1bbba <read_extent_buffer@@Base>
   28f06:	add	r3, sp, #68	; 0x44
   28f08:	mov	r0, r4
   28f0a:	str	r3, [sp, #4]
   28f0c:	mov	r1, r3
   28f0e:	strb.w	r7, [sp, #104]	; 0x68
   28f12:	blx	8b1c <uuid_unparse@plt>
   28f16:	ldr	r1, [pc, #44]	; (28f44 <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   28f18:	ldr	r3, [sp, #4]
   28f1a:	mov	r2, r6
   28f1c:	add	r1, pc
   28f1e:	movs	r0, #1
   28f20:	blx	900c <__printf_chk@plt+0x4>
   28f24:	ldr	r2, [pc, #32]	; (28f48 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   28f26:	ldr	r3, [pc, #24]	; (28f40 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   28f28:	add	r2, pc
   28f2a:	ldr	r3, [r2, r3]
   28f2c:	ldr	r2, [r3, #0]
   28f2e:	ldr	r3, [sp, #108]	; 0x6c
   28f30:	eors	r2, r3
   28f32:	beq.n	28f38 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   28f34:	blx	8c90 <__stack_chk_fail@plt>
   28f38:	add	sp, #116	; 0x74
   28f3a:	pop	{r4, r5, r6, r7, pc}
   28f3c:	subs	r4, r1, #1
   28f3e:	movs	r4, r0
   28f40:	lsls	r0, r1, #10
   28f42:	movs	r0, r0
   28f44:	add	r4, sp, #892	; 0x37c
   28f46:	movs	r1, r0
   28f48:	adds	r0, r6, #7
   28f4a:	movs	r4, r0
   28f4c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   28f50:	mov	r5, r2
   28f52:	ldr	r2, [pc, #112]	; (28fc4 <btrfs_destroy_delayed_refs@@Base+0x440>)
   28f54:	sub	sp, #344	; 0x158
   28f56:	ldr	r3, [pc, #112]	; (28fc8 <btrfs_destroy_delayed_refs@@Base+0x444>)
   28f58:	adds	r0, #96	; 0x60
   28f5a:	add	r2, pc
   28f5c:	add	r4, sp, #84	; 0x54
   28f5e:	ldr	r6, [r0, r1]
   28f60:	ldr	r3, [r2, r3]
   28f62:	ldr	r3, [r3, #0]
   28f64:	str	r3, [sp, #340]	; 0x154
   28f66:	mov.w	r3, #0
   28f6a:	adds	r3, r0, r1
   28f6c:	add	r0, sp, #36	; 0x24
   28f6e:	str	r6, [r0, #0]
   28f70:	ldr	r7, [r3, #4]
   28f72:	ldr.w	r8, [r3, #8]
   28f76:	add	r3, sp, #40	; 0x28
   28f78:	str	r3, [sp, #28]
   28f7a:	mov	r1, r3
   28f7c:	blx	8cc4 <localtime_r@plt>
   28f80:	ldr	r2, [pc, #72]	; (28fcc <btrfs_destroy_delayed_refs@@Base+0x448>)
   28f82:	ldr	r3, [sp, #28]
   28f84:	mov.w	r1, #256	; 0x100
   28f88:	add	r2, pc
   28f8a:	mov	r0, r4
   28f8c:	blx	8e74 <strftime@plt>
   28f90:	ldr	r3, [pc, #60]	; (28fd0 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   28f92:	ldr	r1, [pc, #64]	; (28fd4 <btrfs_destroy_delayed_refs@@Base+0x450>)
   28f94:	mov	r2, r5
   28f96:	add	r3, pc
   28f98:	movs	r0, #1
   28f9a:	strd	r4, r3, [sp, #12]
   28f9e:	add	r1, pc
   28fa0:	stmia.w	sp, {r6, r7, r8}
   28fa4:	blx	900c <__printf_chk@plt+0x4>
   28fa8:	ldr	r2, [pc, #44]	; (28fd8 <btrfs_destroy_delayed_refs@@Base+0x454>)
   28faa:	ldr	r3, [pc, #28]	; (28fc8 <btrfs_destroy_delayed_refs@@Base+0x444>)
   28fac:	add	r2, pc
   28fae:	ldr	r3, [r2, r3]
   28fb0:	ldr	r2, [r3, #0]
   28fb2:	ldr	r3, [sp, #340]	; 0x154
   28fb4:	eors	r2, r3
   28fb6:	beq.n	28fbc <btrfs_destroy_delayed_refs@@Base+0x438>
   28fb8:	blx	8c90 <__stack_chk_fail@plt>
   28fbc:	add	sp, #344	; 0x158
   28fbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   28fc2:	nop
   28fc4:	adds	r6, r7, #6
   28fc6:	movs	r4, r0
   28fc8:	lsls	r0, r1, #10
   28fca:	movs	r0, r0
   28fcc:	add	r4, sp, #564	; 0x234
   28fce:	movs	r1, r0
   28fd0:	bkpt	0x00de
   28fd2:	movs	r1, r0
   28fd4:	add	r4, sp, #548	; 0x224
   28fd6:	movs	r1, r0
   28fd8:	adds	r4, r5, #5
   28fda:	movs	r4, r0
   28fdc:	push	{r0, r1, r2, r3, r4, lr}
   28fde:	ldr	r4, [pc, #40]	; (29008 <btrfs_destroy_delayed_refs@@Base+0x484>)
   28fe0:	ldr	r5, [pc, #40]	; (2900c <btrfs_destroy_delayed_refs@@Base+0x488>)
   28fe2:	add	r4, pc
   28fe4:	ldr	r4, [r4, r5]
   28fe6:	strd	r2, r1, [sp]
   28fea:	movs	r1, #1
   28fec:	strd	r0, r3, [sp, #8]
   28ff0:	ldr	r2, [pc, #28]	; (29010 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   28ff2:	ldr	r3, [pc, #32]	; (29014 <btrfs_destroy_delayed_refs@@Base+0x490>)
   28ff4:	add	r2, pc
   28ff6:	ldr	r0, [r4, #0]
   28ff8:	add	r3, pc
   28ffa:	blx	9040 <__fprintf_chk@plt+0x4>
   28ffe:	bl	28c38 <btrfs_destroy_delayed_refs@@Base+0xb4>
   29002:	blx	91c0 <abort@plt>
   29006:	nop
   29008:	adds	r6, r6, #4
   2900a:	movs	r4, r0
   2900c:	lsls	r4, r3, #10
   2900e:	movs	r0, r0
   29010:	strh	r2, [r5, r5]
   29012:	movs	r1, r0
   29014:	ldr	r2, [r7, #76]	; 0x4c
   29016:	movs	r1, r0
   29018:	push	{r3, lr}
   2901a:	ldr	r3, [r0, #92]	; 0x5c
   2901c:	ldr	r2, [r0, #76]	; 0x4c
   2901e:	cbz	r3, 2903a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   29020:	ldr.w	r3, [r3, #384]	; 0x180
   29024:	cmp	r3, r2
   29026:	beq.n	2903a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   29028:	ldr	r1, [pc, #32]	; (2904c <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   2902a:	movs	r3, #1
   2902c:	ldr	r0, [pc, #32]	; (29050 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   2902e:	movw	r2, #1246	; 0x4de
   29032:	add	r1, pc
   29034:	add	r0, pc
   29036:	bl	28fdc <btrfs_destroy_delayed_refs@@Base+0x458>
   2903a:	ldr	r3, [pc, #12]	; (29048 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   2903c:	subs	r2, #101	; 0x65
   2903e:	umull	r2, r3, r2, r3
   29042:	lsrs	r0, r3, #3
   29044:	pop	{r3, pc}
   29046:	nop
   29048:	strh	r1, [r4, #30]
   2904a:	subs	r6, #15
   2904c:	pop	{r0, r2, r3, r4, pc}
   2904e:	movs	r1, r0
   29050:	add	r4, sp, #16
   29052:	movs	r1, r0

00029054 <print_chunk_item@@Base>:
   29054:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29058:	add.w	r8, r0, #96	; 0x60
   2905c:	ldr	r2, [pc, #376]	; (291d8 <print_chunk_item@@Base+0x184>)
   2905e:	add.w	r9, r8, r1
   29062:	ldr	r3, [pc, #376]	; (291dc <print_chunk_item@@Base+0x188>)
   29064:	sub	sp, #148	; 0x94
   29066:	add	r2, pc
   29068:	ldrh.w	r6, [r9, #44]	; 0x2c
   2906c:	movs	r5, #0
   2906e:	mov	r7, r0
   29070:	ldr	r3, [r2, r3]
   29072:	mov	r4, r1
   29074:	add	r0, sp, #72	; 0x48
   29076:	movs	r2, #28
   29078:	mov	r1, r5
   2907a:	ldr	r3, [r3, #0]
   2907c:	str	r3, [sp, #140]	; 0x8c
   2907e:	mov.w	r3, #0
   29082:	str	r5, [sp, #68]	; 0x44
   29084:	blx	8f98 <memset@plt+0x4>
   29088:	cbnz	r6, 29098 <print_chunk_item@@Base+0x44>
   2908a:	ldr	r1, [pc, #340]	; (291e0 <print_chunk_item@@Base+0x18c>)
   2908c:	mov	r2, r6
   2908e:	add	r1, pc
   29090:	movs	r0, #1
   29092:	blx	900c <__printf_chk@plt+0x4>
   29096:	b.n	290ac <print_chunk_item@@Base+0x58>
   29098:	ldr	r2, [r7, #76]	; 0x4c
   2909a:	add.w	r3, r4, r6, lsl #5
   2909e:	adds	r3, #48	; 0x30
   290a0:	cmp	r3, r2
   290a2:	bls.n	290c2 <print_chunk_item@@Base+0x6e>
   290a4:	ldr	r0, [pc, #316]	; (291e4 <print_chunk_item@@Base+0x190>)
   290a6:	add	r0, pc
   290a8:	blx	8e24 <puts@plt+0x4>
   290ac:	ldr	r2, [pc, #312]	; (291e8 <print_chunk_item@@Base+0x194>)
   290ae:	ldr	r3, [pc, #300]	; (291dc <print_chunk_item@@Base+0x188>)
   290b0:	add	r2, pc
   290b2:	ldr	r3, [r2, r3]
   290b4:	ldr	r2, [r3, #0]
   290b6:	ldr	r3, [sp, #140]	; 0x8c
   290b8:	eors	r2, r3
   290ba:	beq.w	291d0 <print_chunk_item@@Base+0x17c>
   290be:	blx	8c90 <__stack_chk_fail@plt>
   290c2:	add.w	sl, sp, #68	; 0x44
   290c6:	ldr.w	r0, [r9, #24]
   290ca:	ldr.w	r1, [r9, #28]
   290ce:	adds	r4, #48	; 0x30
   290d0:	mov	r2, sl
   290d2:	ldr.w	fp, [pc, #280]	; 291ec <print_chunk_item@@Base+0x198>
   290d6:	bl	28c84 <btrfs_destroy_delayed_refs@@Base+0x100>
   290da:	str.w	sl, [sp, #16]
   290de:	ldr.w	r2, [r9, #16]
   290e2:	movs	r0, #1
   290e4:	ldr.w	r3, [r9, #20]
   290e8:	add	fp, pc
   290ea:	ldr	r1, [pc, #260]	; (291f0 <print_chunk_item@@Base+0x19c>)
   290ec:	ldr.w	sl, [pc, #260]	; 291f4 <print_chunk_item@@Base+0x1a0>
   290f0:	strd	r2, r3, [sp, #8]
   290f4:	add	r1, pc
   290f6:	ldr.w	r2, [r9, #8]
   290fa:	add	sl, pc
   290fc:	ldr.w	r3, [r9, #12]
   29100:	strd	r2, r3, [sp]
   29104:	ldr.w	r2, [r9]
   29108:	ldr.w	r3, [r9, #4]
   2910c:	blx	900c <__printf_chk@plt+0x4>
   29110:	ldr.w	r3, [r9, #40]	; 0x28
   29114:	ldr	r1, [pc, #224]	; (291f8 <print_chunk_item@@Base+0x1a4>)
   29116:	movs	r0, #1
   29118:	str	r3, [sp, #0]
   2911a:	add	r1, pc
   2911c:	ldr.w	r3, [r9, #36]	; 0x24
   29120:	ldr.w	r2, [r9, #32]
   29124:	blx	900c <__printf_chk@plt+0x4>
   29128:	ldr	r1, [pc, #208]	; (291fc <print_chunk_item@@Base+0x1a8>)
   2912a:	ldrh.w	r3, [r9, #46]	; 0x2e
   2912e:	mov	r2, r6
   29130:	add	r1, pc
   29132:	movs	r0, #1
   29134:	blx	900c <__printf_chk@plt+0x4>
   29138:	add.w	r9, sp, #52	; 0x34
   2913c:	add.w	ip, r4, #16
   29140:	movs	r3, #0
   29142:	movs	r1, #0
   29144:	cmp	r3, r1
   29146:	it	eq
   29148:	cmpeq	ip, r4
   2914a:	mov	r2, ip
   2914c:	strd	r2, r3, [sp, #24]
   29150:	bcc.n	2917c <print_chunk_item@@Base+0x128>
   29152:	ldr	r3, [sp, #24]
   29154:	adds	r3, #16
   29156:	str	r3, [sp, #32]
   29158:	ldr	r3, [sp, #28]
   2915a:	adc.w	r3, r3, #0
   2915e:	str	r3, [sp, #36]	; 0x24
   29160:	adds.w	r3, r4, #32
   29164:	str	r3, [sp, #40]	; 0x28
   29166:	adc.w	r3, r1, #0
   2916a:	str	r3, [sp, #44]	; 0x2c
   2916c:	ldrd	r2, r3, [sp, #40]	; 0x28
   29170:	ldrd	r0, r1, [sp, #32]
   29174:	cmp	r3, r1
   29176:	it	eq
   29178:	cmpeq	r2, r0
   2917a:	bcs.n	29184 <print_chunk_item@@Base+0x130>
   2917c:	ldr	r1, [pc, #128]	; (29200 <print_chunk_item@@Base+0x1ac>)
   2917e:	mov	r2, r5
   29180:	add	r1, pc
   29182:	b.n	29090 <print_chunk_item@@Base+0x3c>
   29184:	mov	r2, ip
   29186:	movs	r3, #16
   29188:	mov	r1, r9
   2918a:	mov	r0, r7
   2918c:	bl	1bbba <read_extent_buffer@@Base>
   29190:	add	r3, sp, #100	; 0x64
   29192:	mov	r0, r9
   29194:	str	r3, [sp, #24]
   29196:	mov	r1, r3
   29198:	blx	8b1c <uuid_unparse@plt>
   2919c:	add.w	r2, r8, r4
   291a0:	adds	r4, #32
   291a2:	ldr	r0, [r2, #8]
   291a4:	ldr	r1, [r2, #12]
   291a6:	strd	r0, r1, [sp, #8]
   291aa:	movs	r0, #1
   291ac:	ldr	r1, [r2, #0]
   291ae:	ldr	r2, [r2, #4]
   291b0:	strd	r1, r2, [sp]
   291b4:	mov	r2, r5
   291b6:	mov	r1, fp
   291b8:	adds	r5, #1
   291ba:	blx	900c <__printf_chk@plt+0x4>
   291be:	ldr	r3, [sp, #24]
   291c0:	mov	r1, sl
   291c2:	movs	r0, #1
   291c4:	mov	r2, r3
   291c6:	blx	900c <__printf_chk@plt+0x4>
   291ca:	cmp	r6, r5
   291cc:	bgt.n	2913c <print_chunk_item@@Base+0xe8>
   291ce:	b.n	290ac <print_chunk_item@@Base+0x58>
   291d0:	add	sp, #148	; 0x94
   291d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   291d6:	nop
   291d8:	adds	r2, r6, #2
   291da:	movs	r4, r0
   291dc:	lsls	r0, r1, #10
   291de:	movs	r0, r0
   291e0:	add	r3, sp, #872	; 0x368
   291e2:	movs	r1, r0
   291e4:	add	r3, sp, #876	; 0x36c
   291e6:	movs	r1, r0
   291e8:	adds	r0, r5, #1
   291ea:	movs	r4, r0
   291ec:	add	r4, sp, #268	; 0x10c
   291ee:	movs	r1, r0
   291f0:	add	r3, sp, #648	; 0x288
   291f2:	movs	r1, r0
   291f4:	add	r4, sp, #344	; 0x158
   291f6:	movs	r1, r0
   291f8:	add	r3, sp, #696	; 0x2b8
   291fa:	movs	r1, r0
   291fc:	add	r3, sp, #776	; 0x308
   291fe:	movs	r1, r0
   29200:	add	r3, sp, #596	; 0x254
   29202:	movs	r1, r0

00029204 <print_key_type@@Base>:
   29204:	push	{r4, r5, r6, r7}
   29206:	mov	r5, r3
   29208:	ldrb.w	r3, [sp, #16]
   2920c:	cbnz	r3, 2922a <print_key_type@@Base+0x26>
   2920e:	mov.w	r7, #4294967295	; 0xffffffff
   29212:	cmp	r5, r7
   29214:	mvn.w	r6, #10
   29218:	it	eq
   2921a:	cmpeq	r2, r6
   2921c:	bne.n	2922a <print_key_type@@Base+0x26>
   2921e:	mov	r1, r0
   29220:	ldr	r0, [pc, #36]	; (29248 <print_key_type@@Base+0x44>)
   29222:	add	r0, pc
   29224:	pop	{r4, r5, r6, r7}
   29226:	b.w	91a4 <fputs@plt>
   2922a:	ldr	r2, [pc, #32]	; (2924c <print_key_type@@Base+0x48>)
   2922c:	add	r2, pc
   2922e:	ldr.w	r2, [r2, r3, lsl #2]
   29232:	cbz	r2, 2923a <print_key_type@@Base+0x36>
   29234:	mov	r1, r0
   29236:	mov	r0, r2
   29238:	b.n	29224 <print_key_type@@Base+0x20>
   2923a:	ldr	r2, [pc, #20]	; (29250 <print_key_type@@Base+0x4c>)
   2923c:	movs	r1, #1
   2923e:	pop	{r4, r5, r6, r7}
   29240:	add	r2, pc
   29242:	b.w	903c <__fprintf_chk@plt>
   29246:	nop
   29248:	add	r3, sp, #248	; 0xf8
   2924a:	movs	r1, r0
   2924c:	asrs	r4, r6, #20
   2924e:	movs	r4, r0
   29250:	add	r3, sp, #160	; 0xa0
   29252:	movs	r1, r0

00029254 <print_objectid@@Base>:
   29254:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   29258:	mov	r4, r0
   2925a:	ldrb.w	r1, [sp, #48]	; 0x30
   2925e:	mov	r6, r2
   29260:	mov	r7, r3
   29262:	cmp	r1, #249	; 0xf9
   29264:	beq.n	292bc <print_objectid@@Base+0x68>
   29266:	bhi.n	292aa <print_objectid@@Base+0x56>
   29268:	cmp	r1, #204	; 0xcc
   2926a:	beq.n	29298 <print_objectid@@Base+0x44>
   2926c:	cmp	r1, #246	; 0xf6
   2926e:	beq.n	292de <print_objectid@@Base+0x8a>
   29270:	mov.w	r3, #4294967295	; 0xffffffff
   29274:	cmp	r7, r3
   29276:	mvn.w	r2, #254	; 0xfe
   2927a:	it	eq
   2927c:	cmpeq	r6, r2
   2927e:	beq.w	29442 <print_objectid@@Base+0x1ee>
   29282:	cmp	r3, r7
   29284:	it	eq
   29286:	cmpeq	r2, r6
   29288:	bcc.n	2933a <print_objectid@@Base+0xe6>
   2928a:	cmp	r7, #0
   2928c:	it	eq
   2928e:	cmpeq	r6, #11
   29290:	bcs.n	29324 <print_objectid@@Base+0xd0>
   29292:	orrs.w	r3, r6, r7
   29296:	bne.n	292fc <print_objectid@@Base+0xa8>
   29298:	ldr	r2, [pc, #440]	; (29454 <print_objectid@@Base+0x200>)
   2929a:	movs	r1, #1
   2929c:	mov	r0, r4
   2929e:	strd	r6, r7, [sp]
   292a2:	add	r2, pc
   292a4:	blx	9040 <__fprintf_chk@plt+0x4>
   292a8:	b.n	292f6 <print_objectid@@Base+0xa2>
   292aa:	adds	r3, r1, #5
   292ac:	uxtb	r3, r3
   292ae:	cmp	r3, #1
   292b0:	bhi.n	29270 <print_objectid@@Base+0x1c>
   292b2:	ldr	r2, [pc, #420]	; (29458 <print_objectid@@Base+0x204>)
   292b4:	strd	r6, r7, [sp]
   292b8:	add	r2, pc
   292ba:	b.n	292da <print_objectid@@Base+0x86>
   292bc:	orrs.w	r3, r6, r7
   292c0:	bne.n	292d2 <print_objectid@@Base+0x7e>
   292c2:	mov	r1, r0
   292c4:	ldr	r0, [pc, #404]	; (2945c <print_objectid@@Base+0x208>)
   292c6:	add	r0, pc
   292c8:	add	sp, #16
   292ca:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   292ce:	b.w	91a4 <fputs@plt>
   292d2:	ldr	r2, [pc, #396]	; (29460 <print_objectid@@Base+0x20c>)
   292d4:	strd	r6, r7, [sp]
   292d8:	add	r2, pc
   292da:	movs	r1, #1
   292dc:	b.n	292a4 <print_objectid@@Base+0x50>
   292de:	uxth	r3, r3
   292e0:	strd	r2, r3, [sp, #8]
   292e4:	ldr	r2, [pc, #380]	; (29464 <print_objectid@@Base+0x210>)
   292e6:	lsrs	r3, r7, #16
   292e8:	movs	r1, #1
   292ea:	str	r3, [sp, #0]
   292ec:	add	r2, pc
   292ee:	movs	r3, #0
   292f0:	str	r3, [sp, #4]
   292f2:	blx	9040 <__fprintf_chk@plt+0x4>
   292f6:	add	sp, #16
   292f8:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   292fc:	subs.w	sl, r6, #2
   29300:	adc.w	fp, r7, #4294967295	; 0xffffffff
   29304:	cmp.w	fp, #0
   29308:	it	eq
   2930a:	cmpeq.w	sl, #9
   2930e:	bcs.n	293a0 <print_objectid@@Base+0x14c>
   29310:	cmp.w	sl, #8
   29314:	bhi.n	293a0 <print_objectid@@Base+0x14c>
   29316:	tbb	[pc, sl]
   2931a:	str	r4, [r1, r1]
   2931c:	ldr	r4, [r2, r1]
   2931e:	str	r4, [r3, #4]
   29320:	ldrh	r0, [r1, #36]	; 0x24
   29322:	lsls	r0, r2, #2
   29324:	cmp	r7, #0
   29326:	it	eq
   29328:	cmpeq.w	r6, #256	; 0x100
   2932c:	bne.n	29298 <print_objectid@@Base+0x44>
   2932e:	cmp	r1, #228	; 0xe4
   29330:	bne.n	29298 <print_objectid@@Base+0x44>
   29332:	ldr	r0, [pc, #308]	; (29468 <print_objectid@@Base+0x214>)
   29334:	mov	r1, r4
   29336:	add	r0, pc
   29338:	b.n	292c8 <print_objectid@@Base+0x74>
   2933a:	mov.w	r3, #4294967295	; 0xffffffff
   2933e:	cmp	r3, r7
   29340:	mvn.w	r2, #12
   29344:	it	eq
   29346:	cmpeq	r2, r6
   29348:	bcs.n	29298 <print_objectid@@Base+0x44>
   2934a:	adds.w	r8, r6, #12
   2934e:	adc.w	r9, r7, #0
   29352:	cmp.w	r9, #0
   29356:	it	eq
   29358:	cmpeq.w	r8, #12
   2935c:	bcs.n	29298 <print_objectid@@Base+0x44>
   2935e:	cmp.w	r8, #11
   29362:	bhi.n	29298 <print_objectid@@Base+0x44>
   29364:	add	r3, pc, #8	; (adr r3, 29370 <print_objectid@@Base+0x11c>)
   29366:	ldr.w	r2, [r3, r8, lsl #2]
   2936a:	add	r3, r2
   2936c:	bx	r3
   2936e:	nop
   29370:	lsls	r3, r6, #2
   29372:	movs	r0, r0
   29374:	lsls	r3, r5, #2
   29376:	movs	r0, r0
   29378:	lsls	r3, r4, #2
   2937a:	movs	r0, r0
   2937c:	lsls	r3, r3, #2
   2937e:	movs	r0, r0
   29380:	lsls	r3, r2, #2
   29382:	movs	r0, r0
   29384:	lsls	r3, r1, #2
   29386:	movs	r0, r0
   29388:	lsls	r3, r0, #2
   2938a:	movs	r0, r0
   2938c:	lsls	r3, r7, #1
   2938e:	movs	r0, r0
   29390:	lsls	r3, r6, #1
   29392:	movs	r0, r0
   29394:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   29398:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   2939c:	lsls	r3, r3, #3
   2939e:	movs	r0, r0
   293a0:	cmp	r1, #216	; 0xd8
   293a2:	mov	r1, r4
   293a4:	bne.n	293ac <print_objectid@@Base+0x158>
   293a6:	ldr	r0, [pc, #196]	; (2946c <print_objectid@@Base+0x218>)
   293a8:	add	r0, pc
   293aa:	b.n	292c8 <print_objectid@@Base+0x74>
   293ac:	ldr	r0, [pc, #192]	; (29470 <print_objectid@@Base+0x21c>)
   293ae:	add	r0, pc
   293b0:	b.n	292c8 <print_objectid@@Base+0x74>
   293b2:	ldr	r0, [pc, #192]	; (29474 <print_objectid@@Base+0x220>)
   293b4:	mov	r1, r4
   293b6:	add	r0, pc
   293b8:	b.n	292c8 <print_objectid@@Base+0x74>
   293ba:	ldr	r0, [pc, #188]	; (29478 <print_objectid@@Base+0x224>)
   293bc:	mov	r1, r4
   293be:	add	r0, pc
   293c0:	b.n	292c8 <print_objectid@@Base+0x74>
   293c2:	ldr	r0, [pc, #184]	; (2947c <print_objectid@@Base+0x228>)
   293c4:	mov	r1, r4
   293c6:	add	r0, pc
   293c8:	b.n	292c8 <print_objectid@@Base+0x74>
   293ca:	ldr	r0, [pc, #180]	; (29480 <print_objectid@@Base+0x22c>)
   293cc:	mov	r1, r4
   293ce:	add	r0, pc
   293d0:	b.n	292c8 <print_objectid@@Base+0x74>
   293d2:	ldr	r0, [pc, #176]	; (29484 <print_objectid@@Base+0x230>)
   293d4:	mov	r1, r4
   293d6:	add	r0, pc
   293d8:	b.n	292c8 <print_objectid@@Base+0x74>
   293da:	ldr	r0, [pc, #172]	; (29488 <print_objectid@@Base+0x234>)
   293dc:	mov	r1, r4
   293de:	add	r0, pc
   293e0:	b.n	292c8 <print_objectid@@Base+0x74>
   293e2:	ldr	r0, [pc, #168]	; (2948c <print_objectid@@Base+0x238>)
   293e4:	mov	r1, r4
   293e6:	add	r0, pc
   293e8:	b.n	292c8 <print_objectid@@Base+0x74>
   293ea:	ldr	r0, [pc, #164]	; (29490 <print_objectid@@Base+0x23c>)
   293ec:	mov	r1, r4
   293ee:	add	r0, pc
   293f0:	b.n	292c8 <print_objectid@@Base+0x74>
   293f2:	ldr	r0, [pc, #160]	; (29494 <print_objectid@@Base+0x240>)
   293f4:	mov	r1, r4
   293f6:	add	r0, pc
   293f8:	b.n	292c8 <print_objectid@@Base+0x74>
   293fa:	ldr	r0, [pc, #156]	; (29498 <print_objectid@@Base+0x244>)
   293fc:	mov	r1, r4
   293fe:	add	r0, pc
   29400:	b.n	292c8 <print_objectid@@Base+0x74>
   29402:	ldr	r0, [pc, #152]	; (2949c <print_objectid@@Base+0x248>)
   29404:	mov	r1, r4
   29406:	add	r0, pc
   29408:	b.n	292c8 <print_objectid@@Base+0x74>
   2940a:	ldr	r0, [pc, #148]	; (294a0 <print_objectid@@Base+0x24c>)
   2940c:	mov	r1, r4
   2940e:	add	r0, pc
   29410:	b.n	292c8 <print_objectid@@Base+0x74>
   29412:	ldr	r0, [pc, #144]	; (294a4 <print_objectid@@Base+0x250>)
   29414:	mov	r1, r4
   29416:	add	r0, pc
   29418:	b.n	292c8 <print_objectid@@Base+0x74>
   2941a:	ldr	r0, [pc, #140]	; (294a8 <print_objectid@@Base+0x254>)
   2941c:	mov	r1, r4
   2941e:	add	r0, pc
   29420:	b.n	292c8 <print_objectid@@Base+0x74>
   29422:	ldr	r0, [pc, #136]	; (294ac <print_objectid@@Base+0x258>)
   29424:	mov	r1, r4
   29426:	add	r0, pc
   29428:	b.n	292c8 <print_objectid@@Base+0x74>
   2942a:	ldr	r0, [pc, #132]	; (294b0 <print_objectid@@Base+0x25c>)
   2942c:	mov	r1, r4
   2942e:	add	r0, pc
   29430:	b.n	292c8 <print_objectid@@Base+0x74>
   29432:	ldr	r0, [pc, #128]	; (294b4 <print_objectid@@Base+0x260>)
   29434:	mov	r1, r4
   29436:	add	r0, pc
   29438:	b.n	292c8 <print_objectid@@Base+0x74>
   2943a:	ldr	r0, [pc, #124]	; (294b8 <print_objectid@@Base+0x264>)
   2943c:	mov	r1, r4
   2943e:	add	r0, pc
   29440:	b.n	292c8 <print_objectid@@Base+0x74>
   29442:	ldr	r0, [pc, #120]	; (294bc <print_objectid@@Base+0x268>)
   29444:	mov	r1, r4
   29446:	add	r0, pc
   29448:	b.n	292c8 <print_objectid@@Base+0x74>
   2944a:	ldr	r0, [pc, #116]	; (294c0 <print_objectid@@Base+0x26c>)
   2944c:	mov	r1, r4
   2944e:	add	r0, pc
   29450:	b.n	292c8 <print_objectid@@Base+0x74>
   29452:	nop
   29454:	ldr	r1, [r5, r3]
   29456:	movs	r1, r0
   29458:	add	r2, sp, #788	; 0x314
   2945a:	movs	r1, r0
   2945c:	add	r2, sp, #692	; 0x2b4
   2945e:	movs	r1, r0
   29460:	ldr	r3, [r6, r2]
   29462:	movs	r1, r0
   29464:	str	r2, [r3, #64]	; 0x40
   29466:	movs	r1, r0
   29468:	add	r3, sp, #148	; 0x94
   2946a:	movs	r1, r0
   2946c:	add	r1, sp, #892	; 0x37c
   2946e:	movs	r1, r0
   29470:	add	r1, sp, #908	; 0x38c
   29472:	movs	r1, r0
   29474:	add	r1, sp, #916	; 0x394
   29476:	movs	r1, r0
   29478:	add	r2, sp, #652	; 0x28c
   2947a:	movs	r1, r0
   2947c:	add	r1, sp, #900	; 0x384
   2947e:	movs	r1, r0
   29480:	add	r1, sp, #904	; 0x388
   29482:	movs	r1, r0
   29484:	add	r1, sp, #904	; 0x388
   29486:	movs	r1, r0
   29488:	add	r1, sp, #928	; 0x3a0
   2948a:	movs	r1, r0
   2948c:	add	r1, sp, #936	; 0x3a8
   2948e:	movs	r1, r0
   29490:	add	r1, sp, #936	; 0x3a8
   29492:	movs	r1, r0
   29494:	add	r1, sp, #932	; 0x3a4
   29496:	movs	r1, r0
   29498:	add	r1, sp, #936	; 0x3a8
   2949a:	movs	r1, r0
   2949c:	add	r1, sp, #944	; 0x3b0
   2949e:	movs	r1, r0
   294a0:	add	r1, sp, #956	; 0x3bc
   294a2:	movs	r1, r0
   294a4:	add	r1, sp, #988	; 0x3dc
   294a6:	movs	r1, r0
   294a8:	add	r1, sp, #1004	; 0x3ec
   294aa:	movs	r1, r0
   294ac:	add	r1, sp, #1016	; 0x3f8
   294ae:	movs	r1, r0
   294b0:	add	r1, sp, #1020	; 0x3fc
   294b2:	movs	r1, r0
   294b4:	add	r2, sp, #8
   294b6:	movs	r1, r0
   294b8:	add	r2, sp, #16
   294ba:	movs	r1, r0
   294bc:	add	r2, sp, #48	; 0x30
   294be:	movs	r1, r0
   294c0:	ldr	r2, [sp, #304]	; 0x130
   294c2:	movs	r1, r0

000294c4 <btrfs_print_key@@Base>:
   294c4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   294c8:	ldr	r1, [pc, #244]	; (295c0 <btrfs_print_key@@Base+0xfc>)
   294ca:	ldrb	r6, [r0, #8]
   294cc:	ldr.w	r8, [r0]
   294d0:	add	r1, pc
   294d2:	ldr.w	r9, [r0, #4]
   294d6:	ldr.w	r4, [r0, #9]
   294da:	ldr.w	r5, [r0, #13]
   294de:	movs	r0, #1
   294e0:	ldr	r7, [pc, #224]	; (295c4 <btrfs_print_key@@Base+0x100>)
   294e2:	blx	900c <__printf_chk@plt+0x4>
   294e6:	ldr	r3, [pc, #224]	; (295c8 <btrfs_print_key@@Base+0x104>)
   294e8:	mov	r2, r8
   294ea:	add	r7, pc
   294ec:	ldr	r7, [r7, r3]
   294ee:	mov	r3, r9
   294f0:	str	r6, [sp, #0]
   294f2:	ldr	r0, [r7, #0]
   294f4:	bl	29254 <print_objectid@@Base>
   294f8:	movs	r0, #32
   294fa:	blx	8fa8 <putchar@plt+0x4>
   294fe:	str	r6, [sp, #0]
   29500:	ldr	r0, [r7, #0]
   29502:	mov	r2, r8
   29504:	mov	r3, r9
   29506:	bl	29204 <print_key_type@@Base>
   2950a:	cmp	r6, #132	; 0x84
   2950c:	beq.n	2955c <btrfs_print_key@@Base+0x98>
   2950e:	add.w	r3, r6, #14
   29512:	uxtb	r3, r3
   29514:	cmp	r3, #10
   29516:	bhi.n	2959a <btrfs_print_key@@Base+0xd6>
   29518:	subs	r6, #242	; 0xf2
   2951a:	cmp	r6, #10
   2951c:	bhi.n	2959a <btrfs_print_key@@Base+0xd6>
   2951e:	tbb	[pc, r6]
   29522:	subs	r4, #6
   29524:	subs	r4, #6
   29526:	subs	r4, #6
   29528:	subs	r4, #60	; 0x3c
   2952a:	asrs	r4, r7, #12
   2952c:	movs	r3, r2
   2952e:	ldr	r1, [pc, #156]	; (295cc <btrfs_print_key@@Base+0x108>)
   29530:	uxth	r3, r5
   29532:	lsrs	r2, r5, #16
   29534:	strd	r4, r3, [sp]
   29538:	add	r1, pc
   2953a:	movs	r3, #0
   2953c:	movs	r0, #1
   2953e:	blx	900c <__printf_chk@plt+0x4>
   29542:	add	sp, #12
   29544:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   29548:	ldr	r1, [pc, #132]	; (295d0 <btrfs_print_key@@Base+0x10c>)
   2954a:	mov	r2, r4
   2954c:	mov	r3, r5
   2954e:	add	r1, pc
   29550:	movs	r0, #1
   29552:	add	sp, #12
   29554:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   29558:	b.w	9008 <__printf_chk@plt>
   2955c:	movs	r0, #32
   2955e:	blx	8fa8 <putchar@plt+0x4>
   29562:	mov.w	r3, #4294967295	; 0xffffffff
   29566:	cmp	r9, r3
   29568:	mvn.w	r2, #7
   2956c:	it	eq
   2956e:	cmpeq	r8, r2
   29570:	bne.n	2958a <btrfs_print_key@@Base+0xc6>
   29572:	str	r6, [sp, #0]
   29574:	mov	r2, r4
   29576:	ldr	r0, [r7, #0]
   29578:	mov	r3, r5
   2957a:	bl	29254 <print_objectid@@Base>
   2957e:	movs	r0, #41	; 0x29
   29580:	add	sp, #12
   29582:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   29586:	b.w	8fa4 <putchar@plt>
   2958a:	ldr	r1, [pc, #72]	; (295d4 <btrfs_print_key@@Base+0x110>)
   2958c:	mov	r2, r4
   2958e:	mov	r3, r5
   29590:	movs	r0, #1
   29592:	add	r1, pc
   29594:	blx	900c <__printf_chk@plt+0x4>
   29598:	b.n	2957e <btrfs_print_key@@Base+0xba>
   2959a:	adds	r3, r5, #1
   2959c:	it	eq
   2959e:	cmpeq.w	r4, #4294967295	; 0xffffffff
   295a2:	bne.n	295b4 <btrfs_print_key@@Base+0xf0>
   295a4:	ldr	r1, [pc, #48]	; (295d8 <btrfs_print_key@@Base+0x114>)
   295a6:	movs	r0, #1
   295a8:	add	r1, pc
   295aa:	add	sp, #12
   295ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   295b0:	b.w	9008 <__printf_chk@plt>
   295b4:	ldr	r1, [pc, #36]	; (295dc <btrfs_print_key@@Base+0x118>)
   295b6:	mov	r2, r4
   295b8:	mov	r3, r5
   295ba:	add	r1, pc
   295bc:	b.n	29550 <btrfs_print_key@@Base+0x8c>
   295be:	nop
   295c0:	add	r1, sp, #624	; 0x270
   295c2:	movs	r1, r0
   295c4:	adds	r6, r5, r0
   295c6:	movs	r4, r0
   295c8:	lsls	r4, r0, #11
   295ca:	movs	r0, r0
   295cc:	add	r1, sp, #232	; 0xe8
   295ce:	movs	r1, r0
   295d0:	add	r1, sp, #192	; 0xc0
   295d2:	movs	r1, r0
   295d4:	strb	r1, [r7, r7]
   295d6:	movs	r1, r0
   295d8:	add	r0, sp, #904	; 0x388
   295da:	movs	r1, r0
   295dc:	add	r0, sp, #852	; 0x354
   295de:	movs	r1, r0

000295e0 <print_extent_item@@Base>:
   295e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295e4:	sub	sp, #92	; 0x5c
   295e6:	ldr	r3, [pc, #632]	; (29860 <print_extent_item@@Base+0x280>)
   295e8:	add.w	r5, r0, #96	; 0x60
   295ec:	str	r2, [sp, #28]
   295ee:	movs	r6, #0
   295f0:	ldr	r2, [pc, #624]	; (29864 <print_extent_item@@Base+0x284>)
   295f2:	mov	r8, r0
   295f4:	add	r0, sp, #56	; 0x38
   295f6:	ldr.w	sl, [pc, #624]	; 29868 <print_extent_item@@Base+0x288>
   295fa:	add	r2, pc
   295fc:	add	sl, pc
   295fe:	ldr	r3, [r2, r3]
   29600:	movs	r2, #28
   29602:	ldr	r3, [r3, #0]
   29604:	str	r3, [sp, #84]	; 0x54
   29606:	mov.w	r3, #0
   2960a:	movs	r3, #25
   2960c:	muls	r1, r3
   2960e:	str	r6, [sp, #52]	; 0x34
   29610:	add.w	r7, r1, #101	; 0x65
   29614:	mov	r1, r6
   29616:	adds	r4, r5, r7
   29618:	ldr.w	r3, [r4, #21]
   2961c:	str	r3, [sp, #24]
   2961e:	blx	8f98 <memset@plt+0x4>
   29622:	ldr	r3, [sp, #24]
   29624:	cmp	r3, #23
   29626:	bls.w	29758 <print_extent_item@@Base+0x178>
   2962a:	ldr.w	r4, [r4, #17]
   2962e:	mov	r3, r6
   29630:	adds	r4, #101	; 0x65
   29632:	add.w	r9, r5, r4
   29636:	ldr.w	fp, [r9, #16]
   2963a:	and.w	r2, fp, #1
   2963e:	orrs	r3, r2
   29640:	add	r3, sp, #52	; 0x34
   29642:	beq.w	2976c <print_extent_item@@Base+0x18c>
   29646:	ldr	r1, [pc, #548]	; (2986c <print_extent_item@@Base+0x28c>)
   29648:	mov	r0, r3
   2964a:	add	r1, pc
   2964c:	blx	8d9c <strcpy@plt>
   29650:	mov	r3, r0
   29652:	and.w	r2, fp, #2
   29656:	str	r2, [sp, #16]
   29658:	movs	r2, #0
   2965a:	str	r2, [sp, #20]
   2965c:	ldrd	r1, r2, [sp, #16]
   29660:	orrs	r2, r1
   29662:	beq.n	2967e <print_extent_item@@Base+0x9e>
   29664:	cbnz	r6, 29672 <print_extent_item@@Base+0x92>
   29666:	ldr	r1, [pc, #520]	; (29870 <print_extent_item@@Base+0x290>)
   29668:	movs	r2, #32
   2966a:	mov	r0, r3
   2966c:	add	r1, pc
   2966e:	blx	8f64 <__strcat_chk@plt>
   29672:	ldr	r1, [pc, #512]	; (29874 <print_extent_item@@Base+0x294>)
   29674:	add	r0, sp, #52	; 0x34
   29676:	movs	r2, #32
   29678:	add	r1, pc
   2967a:	blx	8f64 <__strcat_chk@plt>
   2967e:	and.w	r2, fp, #256	; 0x100
   29682:	movs	r3, #0
   29684:	orrs	r3, r2
   29686:	beq.n	296a0 <print_extent_item@@Base+0xc0>
   29688:	add	r3, sp, #52	; 0x34
   2968a:	ldr	r1, [pc, #492]	; (29878 <print_extent_item@@Base+0x298>)
   2968c:	movs	r2, #32
   2968e:	add	r1, pc
   29690:	mov	r0, r3
   29692:	blx	8f64 <__strcat_chk@plt>
   29696:	ldr	r1, [pc, #484]	; (2987c <print_extent_item@@Base+0x29c>)
   29698:	movs	r2, #32
   2969a:	add	r1, pc
   2969c:	blx	8f64 <__strcat_chk@plt>
   296a0:	add	r3, sp, #52	; 0x34
   296a2:	str	r3, [sp, #8]
   296a4:	ldr.w	r2, [r9, #8]
   296a8:	movs	r0, #1
   296aa:	ldr.w	r3, [r9, #12]
   296ae:	add.w	r6, r4, #24
   296b2:	ldr	r1, [pc, #460]	; (29880 <print_extent_item@@Base+0x2a0>)
   296b4:	strd	r2, r3, [sp]
   296b8:	add	r1, pc
   296ba:	ldr.w	r2, [r9]
   296be:	ldr.w	r3, [r9, #4]
   296c2:	blx	900c <__printf_chk@plt+0x4>
   296c6:	ldrd	r2, r3, [sp, #16]
   296ca:	orrs	r3, r2
   296cc:	ldr	r3, [sp, #28]
   296ce:	beq.n	29770 <print_extent_item@@Base+0x190>
   296d0:	cmp	r3, #0
   296d2:	bne.n	29774 <print_extent_item@@Base+0x194>
   296d4:	add	r7, sp, #32
   296d6:	mov	r2, r6
   296d8:	movs	r3, #17
   296da:	mov	r0, r8
   296dc:	mov	r1, r7
   296de:	add	r6, r5
   296e0:	bl	1bbba <read_extent_buffer@@Base>
   296e4:	ldr	r1, [pc, #412]	; (29884 <print_extent_item@@Base+0x2a4>)
   296e6:	movs	r0, #1
   296e8:	add	r1, pc
   296ea:	blx	900c <__printf_chk@plt+0x4>
   296ee:	mov	r0, r7
   296f0:	bl	294c4 <btrfs_print_key@@Base>
   296f4:	ldr	r1, [pc, #400]	; (29888 <print_extent_item@@Base+0x2a8>)
   296f6:	ldrb	r2, [r6, #17]
   296f8:	movs	r0, #1
   296fa:	add	r1, pc
   296fc:	add.w	r6, r4, #42	; 0x2a
   29700:	blx	900c <__printf_chk@plt+0x4>
   29704:	ldr	r3, [sp, #24]
   29706:	ldr.w	r8, [pc, #388]	; 2988c <print_extent_item@@Base+0x2ac>
   2970a:	ldr.w	r9, [pc, #388]	; 29890 <print_extent_item@@Base+0x2b0>
   2970e:	add	r4, r3
   29710:	ldr.w	fp, [pc, #384]	; 29894 <print_extent_item@@Base+0x2b4>
   29714:	add	r8, pc
   29716:	add	r9, pc
   29718:	add	fp, pc
   2971a:	cmp	r6, r4
   2971c:	bcc.n	29790 <print_extent_item@@Base+0x1b0>
   2971e:	beq.n	29758 <print_extent_item@@Base+0x178>
   29720:	ldr	r3, [pc, #372]	; (29898 <print_extent_item@@Base+0x2b8>)
   29722:	mov.w	r1, #1
   29726:	ldr	r2, [pc, #372]	; (2989c <print_extent_item@@Base+0x2bc>)
   29728:	ldr.w	r0, [sl, r3]
   2972c:	ite	hi
   2972e:	movhi	r3, #1
   29730:	movls	r3, #0
   29732:	str	r3, [sp, #12]
   29734:	ldr	r3, [pc, #360]	; (298a0 <print_extent_item@@Base+0x2c0>)
   29736:	add	r2, pc
   29738:	add	r3, pc
   2973a:	str	r3, [sp, #8]
   2973c:	ldr	r3, [pc, #356]	; (298a4 <print_extent_item@@Base+0x2c4>)
   2973e:	add	r3, pc
   29740:	adds	r3, #33	; 0x21
   29742:	str	r3, [sp, #4]
   29744:	movw	r3, #497	; 0x1f1
   29748:	str	r3, [sp, #0]
   2974a:	ldr	r3, [pc, #348]	; (298a8 <print_extent_item@@Base+0x2c8>)
   2974c:	ldr	r0, [r0, #0]
   2974e:	add	r3, pc
   29750:	blx	9040 <__fprintf_chk@plt+0x4>
   29754:	bl	28c38 <btrfs_destroy_delayed_refs@@Base+0xb4>
   29758:	ldr	r2, [pc, #336]	; (298ac <print_extent_item@@Base+0x2cc>)
   2975a:	ldr	r3, [pc, #260]	; (29860 <print_extent_item@@Base+0x280>)
   2975c:	add	r2, pc
   2975e:	ldr	r3, [r2, r3]
   29760:	ldr	r2, [r3, #0]
   29762:	ldr	r3, [sp, #84]	; 0x54
   29764:	eors	r2, r3
   29766:	beq.n	29858 <print_extent_item@@Base+0x278>
   29768:	blx	8c90 <__stack_chk_fail@plt>
   2976c:	movs	r6, #1
   2976e:	b.n	29652 <print_extent_item@@Base+0x72>
   29770:	cmp	r3, #0
   29772:	beq.n	29704 <print_extent_item@@Base+0x124>
   29774:	add	r1, sp, #32
   29776:	mov	r2, r7
   29778:	mov	r0, r8
   2977a:	movs	r3, #17
   2977c:	bl	1bbba <read_extent_buffer@@Base>
   29780:	ldr	r1, [pc, #300]	; (298b0 <print_extent_item@@Base+0x2d0>)
   29782:	ldr.w	r2, [sp, #41]	; 0x29
   29786:	movs	r0, #1
   29788:	add	r1, pc
   2978a:	blx	900c <__printf_chk@plt+0x4>
   2978e:	b.n	29704 <print_extent_item@@Base+0x124>
   29790:	adds	r0, r5, r6
   29792:	ldrb	r1, [r5, r6]
   29794:	mov	r3, r0
   29796:	subs	r1, #176	; 0xb0
   29798:	ldr.w	r2, [r3, #1]!
   2979c:	ldr	r3, [r3, #4]
   2979e:	cmp	r1, #8
   297a0:	bhi.n	29758 <print_extent_item@@Base+0x178>
   297a2:	add	r7, pc, #8	; (adr r7, 297ac <print_extent_item@@Base+0x1cc>)
   297a4:	ldr.w	r1, [r7, r1, lsl #2]
   297a8:	add	r7, r1
   297aa:	bx	r7
   297ac:	movs	r5, r4
   297ae:	movs	r0, r0
   297b0:			; <UNDEFINED> instruction: 0xffadffff
   297b4:	lsls	r7, r3, #1
   297b6:	movs	r0, r0
   297b8:			; <UNDEFINED> instruction: 0xffadffff
   297bc:			; <UNDEFINED> instruction: 0xffadffff
   297c0:			; <UNDEFINED> instruction: 0xffadffff
   297c4:	lsls	r3, r2, #1
   297c6:	movs	r0, r0
   297c8:			; <UNDEFINED> instruction: 0xffadffff
   297cc:	lsls	r3, r3, #2
   297ce:	movs	r0, r0
   297d0:	ldr	r1, [pc, #224]	; (298b4 <print_extent_item@@Base+0x2d4>)
   297d2:	movs	r0, #1
   297d4:	str	r3, [sp, #24]
   297d6:	add	r1, pc
   297d8:	str	r2, [sp, #16]
   297da:	blx	900c <__printf_chk@plt+0x4>
   297de:	ldr	r1, [pc, #216]	; (298b8 <print_extent_item@@Base+0x2d8>)
   297e0:	movs	r0, #0
   297e2:	ldr	r2, [sp, #16]
   297e4:	ldr	r3, [sp, #24]
   297e6:	ldr.w	r1, [sl, r1]
   297ea:	str	r0, [sp, #0]
   297ec:	ldr	r0, [r1, #0]
   297ee:	bl	29254 <print_objectid@@Base>
   297f2:	movs	r0, #10
   297f4:	blx	8fa8 <putchar@plt+0x4>
   297f8:	movs	r3, #9
   297fa:	add	r6, r3
   297fc:	b.n	2971a <print_extent_item@@Base+0x13a>
   297fe:	ldr	r1, [pc, #188]	; (298bc <print_extent_item@@Base+0x2dc>)
   29800:	movs	r0, #1
   29802:	add	r1, pc
   29804:	blx	900c <__printf_chk@plt+0x4>
   29808:	b.n	297f8 <print_extent_item@@Base+0x218>
   2980a:	mov	r1, r9
   2980c:	movs	r0, #1
   2980e:	blx	900c <__printf_chk@plt+0x4>
   29812:	ldr	r2, [pc, #164]	; (298b8 <print_extent_item@@Base+0x2d8>)
   29814:	adds	r3, r6, #1
   29816:	adds	r7, r5, r3
   29818:	ldr.w	r1, [sl, r2]
   2981c:	movs	r2, #0
   2981e:	str	r2, [sp, #0]
   29820:	ldr	r2, [r5, r3]
   29822:	ldr	r0, [r1, #0]
   29824:	ldr	r3, [r7, #4]
   29826:	bl	29254 <print_objectid@@Base>
   2982a:	ldr	r3, [r7, #24]
   2982c:	mov	r1, fp
   2982e:	movs	r0, #1
   29830:	str	r3, [sp, #8]
   29832:	ldr	r2, [r7, #16]
   29834:	ldr	r3, [r7, #20]
   29836:	strd	r2, r3, [sp]
   2983a:	ldr	r3, [r7, #12]
   2983c:	ldr	r2, [r7, #8]
   2983e:	blx	900c <__printf_chk@plt+0x4>
   29842:	movs	r3, #29
   29844:	b.n	297fa <print_extent_item@@Base+0x21a>
   29846:	ldr.w	r1, [r0, #9]
   2984a:	movs	r0, #1
   2984c:	str	r1, [sp, #0]
   2984e:	mov	r1, r8
   29850:	blx	900c <__printf_chk@plt+0x4>
   29854:	movs	r3, #13
   29856:	b.n	297fa <print_extent_item@@Base+0x21a>
   29858:	add	sp, #92	; 0x5c
   2985a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2985e:	nop
   29860:	lsls	r0, r1, #10
   29862:	movs	r0, r0
   29864:	asrs	r6, r3, #28
   29866:	movs	r4, r0
   29868:	asrs	r4, r3, #28
   2986a:	movs	r4, r0
   2986c:	cbz	r0, 298c8 <btrfs_print_leaf@@Base+0x8>
   2986e:	movs	r1, r0
   29870:	ldrb	r5, [r4, #11]
   29872:	movs	r1, r0
   29874:	add	r0, sp, #120	; 0x78
   29876:	movs	r1, r0
   29878:	ldrb	r3, [r0, #11]
   2987a:	movs	r1, r0
   2987c:	add	r0, sp, #28
   2987e:	movs	r1, r0
   29880:	add	r7, pc, #984	; (adr r7, 29c5c <btrfs_print_leaf@@Base+0x39c>)
   29882:	movs	r1, r0
   29884:	add	r7, pc, #916	; (adr r7, 29c1c <btrfs_print_leaf@@Base+0x35c>)
   29886:	movs	r1, r0
   29888:	add	r7, pc, #976	; (adr r7, 29c5c <btrfs_print_leaf@@Base+0x39c>)
   2988a:	movs	r1, r0
   2988c:	add	r0, sp, #404	; 0x194
   2988e:	movs	r1, r0
   29890:	add	r0, sp, #136	; 0x88
   29892:	movs	r1, r0
   29894:	add	r0, sp, #240	; 0xf0
   29896:	movs	r1, r0
   29898:	lsls	r4, r3, #10
   2989a:	movs	r0, r0
   2989c:	ldrb	r7, [r6, r7]
   2989e:	movs	r1, r0
   298a0:	ldr	r5, [r2, #40]	; 0x28
   298a2:	movs	r1, r0
   298a4:			; <UNDEFINED> instruction: 0xb611
   298a6:	movs	r1, r0
   298a8:	add	r0, sp, #348	; 0x15c
   298aa:	movs	r1, r0
   298ac:	asrs	r4, r7, #22
   298ae:	movs	r4, r0
   298b0:	add	r7, pc, #332	; (adr r7, 29a00 <btrfs_print_leaf@@Base+0x140>)
   298b2:	movs	r1, r0
   298b4:	add	r7, pc, #140	; (adr r7, 29944 <btrfs_print_leaf@@Base+0x84>)
   298b6:	movs	r1, r0
   298b8:	lsls	r4, r0, #11
   298ba:	movs	r0, r0
   298bc:	add	r7, pc, #72	; (adr r7, 29908 <btrfs_print_leaf@@Base+0x48>)
   298be:	movs	r1, r0

000298c0 <btrfs_print_leaf@@Base>:
   298c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   298c4:	mov.w	r8, #0
   298c8:	vpush	{d8-d10}
   298cc:	mov	r9, r0
   298ce:	ldr.w	r2, [pc, #3380]	; 2a604 <btrfs_print_leaf@@Base+0xd44>
   298d2:	ldr.w	r3, [pc, #3380]	; 2a608 <btrfs_print_leaf@@Base+0xd48>
   298d6:	add	r2, pc
   298d8:	ldr.w	r6, [pc, #3376]	; 2a60c <btrfs_print_leaf@@Base+0xd4c>
   298dc:	subw	sp, sp, #1204	; 0x4b4
   298e0:	ldr	r3, [r2, r3]
   298e2:	add	r6, pc
   298e4:	ldr	r3, [r3, #0]
   298e6:	str.w	r3, [sp, #1196]	; 0x4ac
   298ea:	mov.w	r3, #0
   298ee:	ldr	r3, [r0, #92]	; 0x5c
   298f0:	str	r3, [sp, #104]	; 0x68
   298f2:	ldr.w	r3, [r3, #384]	; 0x180
   298f6:	subs	r3, #101	; 0x65
   298f8:	str	r3, [sp, #108]	; 0x6c
   298fa:	ldr.w	r5, [r0, #152]	; 0x98
   298fe:	mov	r3, r8
   29900:	ldr.w	r4, [r0, #156]	; 0x9c
   29904:	and.w	r2, r5, #1
   29908:	orrs	r3, r2
   2990a:	bic.w	r7, r4, #4278190080	; 0xff000000
   2990e:	add	r3, sp, #812	; 0x32c
   29910:	mov.w	r4, r4, lsr #24
   29914:	beq.w	29a68 <btrfs_print_leaf@@Base+0x1a8>
   29918:	ldr.w	r1, [pc, #3316]	; 2a610 <btrfs_print_leaf@@Base+0xd50>
   2991c:	mov	r0, r3
   2991e:	add	r1, pc
   29920:	blx	8d9c <strcpy@plt>
   29924:	mov	r2, r8
   29926:	mov	r3, r0
   29928:	and.w	r0, r5, #2
   2992c:	movs	r1, #0
   2992e:	orrs	r1, r0
   29930:	beq.n	29952 <btrfs_print_leaf@@Base+0x92>
   29932:	cbnz	r2, 29944 <btrfs_print_leaf@@Base+0x84>
   29934:	ldr.w	r1, [pc, #3292]	; 2a614 <btrfs_print_leaf@@Base+0xd54>
   29938:	mov	r0, r3
   2993a:	movs	r2, #128	; 0x80
   2993c:	add	r1, pc
   2993e:	blx	8f64 <__strcat_chk@plt>
   29942:	mov	r3, r0
   29944:	ldr.w	r1, [pc, #3280]	; 2a618 <btrfs_print_leaf@@Base+0xd58>
   29948:	movs	r2, #128	; 0x80
   2994a:	mov	r0, r3
   2994c:	add	r1, pc
   2994e:	blx	8f64 <__strcat_chk@plt>
   29952:	ldr.w	r3, [r9, #192]	; 0xc0
   29956:	mov	r0, r9
   29958:	ldr.w	r2, [r9, #144]	; 0x90
   2995c:	add.w	sl, r9, #197	; 0xc5
   29960:	str	r3, [sp, #240]	; 0xf0
   29962:	ldr.w	r3, [r9, #148]	; 0x94
   29966:	str	r2, [sp, #84]	; 0x54
   29968:	str	r3, [sp, #80]	; 0x50
   2996a:	bl	1d888 <btrfs_leaf_free_space@@Base>
   2996e:	ldr.w	ip, [r9, #176]	; 0xb0
   29972:	ldr.w	r1, [r9, #180]	; 0xb4
   29976:	ldr	r3, [sp, #240]	; 0xf0
   29978:	strd	ip, r1, [sp, #8]
   2997c:	ldr.w	r1, [pc, #3228]	; 2a61c <btrfs_print_leaf@@Base+0xd5c>
   29980:	str	r3, [sp, #0]
   29982:	add	r1, pc
   29984:	ldrd	r3, r2, [sp, #80]	; 0x50
   29988:	str	r0, [sp, #4]
   2998a:	movs	r0, #1
   2998c:	blx	900c <__printf_chk@plt+0x4>
   29990:	ldr.w	r3, [pc, #3212]	; 2a620 <btrfs_print_leaf@@Base+0xd60>
   29994:	ldr.w	r2, [r9, #184]	; 0xb8
   29998:	ldr	r3, [r6, r3]
   2999a:	movs	r6, #0
   2999c:	str	r6, [sp, #0]
   2999e:	str	r3, [sp, #100]	; 0x64
   299a0:	ldr	r1, [sp, #100]	; 0x64
   299a2:	ldr.w	r3, [r9, #188]	; 0xbc
   299a6:	ldr	r0, [r1, #0]
   299a8:	bl	29254 <print_objectid@@Base>
   299ac:	movs	r0, #10
   299ae:	blx	8fa8 <putchar@plt+0x4>
   299b2:	ldr.w	r1, [pc, #3184]	; 2a624 <btrfs_print_leaf@@Base+0xd64>
   299b6:	ldr.w	r2, [r9, #144]	; 0x90
   299ba:	add	r3, sp, #812	; 0x32c
   299bc:	add	r1, pc
   299be:	str	r3, [sp, #8]
   299c0:	movs	r0, #1
   299c2:	ldr.w	r3, [r9, #148]	; 0x94
   299c6:	str	r4, [sp, #12]
   299c8:	strd	r5, r7, [sp]
   299cc:	blx	900c <__printf_chk@plt+0x4>
   299d0:	mov	r0, r9
   299d2:	bl	28ec8 <btrfs_destroy_delayed_refs@@Base+0x344>
   299d6:	ldr	r3, [sp, #100]	; 0x64
   299d8:	ldr	r0, [r3, #0]
   299da:	blx	8b58 <fflush@plt>
   299de:	ldr.w	r3, [pc, #3144]	; 2a628 <btrfs_print_leaf@@Base+0xd68>
   299e2:	str	r6, [sp, #80]	; 0x50
   299e4:	add	r3, pc
   299e6:	vmov	s20, r3
   299ea:	ldr.w	r3, [pc, #3136]	; 2a62c <btrfs_print_leaf@@Base+0xd6c>
   299ee:	add	r3, pc
   299f0:	vmov	s21, r3
   299f4:	ldr	r3, [sp, #80]	; 0x50
   299f6:	ldr	r2, [sp, #240]	; 0xf0
   299f8:	cmp	r3, r2
   299fa:	beq.n	29a4c <btrfs_print_leaf@@Base+0x18c>
   299fc:	ldr	r3, [sp, #80]	; 0x50
   299fe:	movs	r2, #25
   29a00:	ldr.w	r8, [sl, #17]
   29a04:	add.w	fp, r9, #96	; 0x60
   29a08:	muls	r2, r3
   29a0a:	ldr.w	r3, [sl, #21]
   29a0e:	str	r3, [sp, #84]	; 0x54
   29a10:	adds	r2, #101	; 0x65
   29a12:	ldr	r3, [sp, #108]	; 0x6c
   29a14:	cmp	r3, r8
   29a16:	bcc.n	29a22 <btrfs_print_leaf@@Base+0x162>
   29a18:	ldr	r3, [sp, #84]	; 0x54
   29a1a:	ldr	r1, [sp, #108]	; 0x6c
   29a1c:	add	r3, r8
   29a1e:	cmp	r3, r1
   29a20:	bls.n	29a6c <btrfs_print_leaf@@Base+0x1ac>
   29a22:	ldr	r3, [sp, #108]	; 0x6c
   29a24:	ldr.w	r0, [pc, #3080]	; 2a630 <btrfs_print_leaf@@Base+0xd70>
   29a28:	ldr.w	r2, [r9, #144]	; 0x90
   29a2c:	str	r3, [sp, #12]
   29a2e:	add	r0, pc
   29a30:	ldr	r3, [sp, #84]	; 0x54
   29a32:	strd	r8, r3, [sp, #4]
   29a36:	ldr	r3, [sp, #80]	; 0x50
   29a38:	str	r3, [sp, #0]
   29a3a:	ldr.w	r3, [r9, #148]	; 0x94
   29a3e:	bl	1bd1c <__btrfs_error@@Base>
   29a42:	ldr.w	r0, [pc, #3056]	; 2a634 <btrfs_print_leaf@@Base+0xd74>
   29a46:	add	r0, pc
   29a48:	bl	1bd1c <__btrfs_error@@Base>
   29a4c:	ldr.w	r2, [pc, #3048]	; 2a638 <btrfs_print_leaf@@Base+0xd78>
   29a50:	ldr.w	r3, [pc, #2996]	; 2a608 <btrfs_print_leaf@@Base+0xd48>
   29a54:	add	r2, pc
   29a56:	ldr	r3, [r2, r3]
   29a58:	ldr	r2, [r3, #0]
   29a5a:	ldr.w	r3, [sp, #1196]	; 0x4ac
   29a5e:	eors	r2, r3
   29a60:	beq.w	2abf4 <btrfs_print_leaf@@Base+0x1334>
   29a64:	blx	8c90 <__stack_chk_fail@plt>
   29a68:	movs	r2, #1
   29a6a:	b.n	29928 <btrfs_print_leaf@@Base+0x68>
   29a6c:	add	r1, sp, #252	; 0xfc
   29a6e:	movs	r3, #17
   29a70:	mov	r0, r9
   29a72:	str	r1, [sp, #96]	; 0x60
   29a74:	bl	1bbba <read_extent_buffer@@Base>
   29a78:	ldr	r3, [sp, #96]	; 0x60
   29a7a:	vmov	r1, s20
   29a7e:	movs	r0, #1
   29a80:	ldr	r2, [sp, #80]	; 0x50
   29a82:	add.w	r7, r8, #101	; 0x65
   29a86:	ldrb	r6, [r3, #8]
   29a88:	ldrd	r4, r5, [r3]
   29a8c:	ldr.w	r3, [r3, #9]
   29a90:	str	r3, [sp, #88]	; 0x58
   29a92:	ldr	r3, [sp, #96]	; 0x60
   29a94:	ldr.w	r3, [r3, #13]
   29a98:	str	r3, [sp, #92]	; 0x5c
   29a9a:	blx	900c <__printf_chk@plt+0x4>
   29a9e:	ldr	r0, [sp, #96]	; 0x60
   29aa0:	bl	294c4 <btrfs_print_key@@Base>
   29aa4:	ldr.w	r1, [pc, #2964]	; 2a63c <btrfs_print_leaf@@Base+0xd7c>
   29aa8:	ldr.w	r3, [sl, #21]
   29aac:	movs	r0, #1
   29aae:	ldr.w	r2, [sl, #17]
   29ab2:	add	r1, pc
   29ab4:	blx	900c <__printf_chk@plt+0x4>
   29ab8:	cmp	r6, #0
   29aba:	bne.n	29b3c <btrfs_print_leaf@@Base+0x27c>
   29abc:	mov.w	r3, #4294967295	; 0xffffffff
   29ac0:	cmp	r5, r3
   29ac2:	mvn.w	r2, #10
   29ac6:	it	eq
   29ac8:	cmpeq	r4, r2
   29aca:	bne.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29acc:	ldr.w	r3, [sl, #17]
   29ad0:	add	r4, sp, #272	; 0x110
   29ad2:	mov	r0, r9
   29ad4:	add.w	r5, r3, #101	; 0x65
   29ad8:	mov	r1, r4
   29ada:	movs	r3, #17
   29adc:	mov	r2, r5
   29ade:	bl	1bbba <read_extent_buffer@@Base>
   29ae2:	ldr.w	r1, [pc, #2908]	; 2a640 <btrfs_print_leaf@@Base+0xd80>
   29ae6:	movs	r0, #1
   29ae8:	add	r1, pc
   29aea:	blx	900c <__printf_chk@plt+0x4>
   29aee:	mov	r0, r4
   29af0:	bl	294c4 <btrfs_print_key@@Base>
   29af4:	movs	r0, #10
   29af6:	blx	8fa8 <putchar@plt+0x4>
   29afa:	add.w	r3, fp, r5
   29afe:	mov	r0, r3
   29b00:	mov	r1, r3
   29b02:	ldr.w	r4, [r0, #33]!
   29b06:	ldr.w	r2, [r1, #17]!
   29b0a:	ldr	r0, [r0, #4]
   29b0c:	strd	r4, r0, [sp, #8]
   29b10:	ldr.w	r0, [r3, #25]!
   29b14:	ldr	r3, [r3, #4]
   29b16:	strd	r0, r3, [sp]
   29b1a:	movs	r0, #1
   29b1c:	ldr	r3, [r1, #4]
   29b1e:	ldr.w	r1, [pc, #2852]	; 2a644 <btrfs_print_leaf@@Base+0xd84>
   29b22:	add	r1, pc
   29b24:	blx	900c <__printf_chk@plt+0x4>
   29b28:	ldr	r3, [sp, #100]	; 0x64
   29b2a:	add.w	sl, sl, #25
   29b2e:	ldr	r0, [r3, #0]
   29b30:	blx	8b58 <fflush@plt>
   29b34:	ldr	r3, [sp, #80]	; 0x50
   29b36:	adds	r3, #1
   29b38:	str	r3, [sp, #80]	; 0x50
   29b3a:	b.n	299f4 <btrfs_print_leaf@@Base+0x134>
   29b3c:	cmp	r6, #184	; 0xb8
   29b3e:	bhi.w	29cde <btrfs_print_leaf@@Base+0x41e>
   29b42:	cmp	r6, #167	; 0xa7
   29b44:	bhi.n	29bec <btrfs_print_leaf@@Base+0x32c>
   29b46:	cmp	r6, #96	; 0x60
   29b48:	beq.w	29c6a <btrfs_print_leaf@@Base+0x3aa>
   29b4c:	bhi.w	29c8c <btrfs_print_leaf@@Base+0x3cc>
   29b50:	cmp	r6, #13
   29b52:	beq.w	2a1d6 <btrfs_print_leaf@@Base+0x916>
   29b56:	bhi.n	29c40 <btrfs_print_leaf@@Base+0x380>
   29b58:	cmp	r6, #1
   29b5a:	beq.w	29dd6 <btrfs_print_leaf@@Base+0x516>
   29b5e:	cmp	r6, #12
   29b60:	bne.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29b62:	ldr.w	r3, [pc, #2788]	; 2a648 <btrfs_print_leaf@@Base+0xd88>
   29b66:	add	r6, sp, #940	; 0x3ac
   29b68:	movs	r5, #0
   29b6a:	add	r3, pc
   29b6c:	vmov	s17, r3
   29b70:	b.n	2a172 <btrfs_print_leaf@@Base+0x8b2>
   29b72:	subs	r6, #228	; 0xe4
   29b74:	cmp	r6, #25
   29b76:	bhi.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29b78:	add	r3, pc, #8	; (adr r3, 29b84 <btrfs_print_leaf@@Base+0x2c4>)
   29b7a:	ldr.w	r2, [r3, r6, lsl #2]
   29b7e:	add	r3, r2
   29b80:	bx	r3
   29b82:	nop
   29b84:	lsrs	r1, r7, #19
   29b86:	movs	r0, r0
   29b88:			; <UNDEFINED> instruction: 0xffa5ffff
   29b8c:			; <UNDEFINED> instruction: 0xffa5ffff
   29b90:			; <UNDEFINED> instruction: 0xffa5ffff
   29b94:			; <UNDEFINED> instruction: 0xffa5ffff
   29b98:			; <UNDEFINED> instruction: 0xffa5ffff
   29b9c:			; <UNDEFINED> instruction: 0xffa5ffff
   29ba0:			; <UNDEFINED> instruction: 0xffa5ffff
   29ba4:			; <UNDEFINED> instruction: 0xffa5ffff
   29ba8:			; <UNDEFINED> instruction: 0xffa5ffff
   29bac:			; <UNDEFINED> instruction: 0xffa5ffff
   29bb0:			; <UNDEFINED> instruction: 0xffa5ffff
   29bb4:	lsrs	r7, r2, #21
   29bb6:	movs	r0, r0
   29bb8:			; <UNDEFINED> instruction: 0xffa5ffff
   29bbc:	lsrs	r1, r7, #23
   29bbe:	movs	r0, r0
   29bc0:			; <UNDEFINED> instruction: 0xffa5ffff
   29bc4:	lsrs	r7, r6, #24
   29bc6:	movs	r0, r0
   29bc8:			; <UNDEFINED> instruction: 0xffa5ffff
   29bcc:			; <UNDEFINED> instruction: 0xffa5ffff
   29bd0:			; <UNDEFINED> instruction: 0xffa5ffff
   29bd4:	lsrs	r3, r5, #30
   29bd6:	movs	r0, r0
   29bd8:	lsrs	r7, r7, #26
   29bda:	movs	r0, r0
   29bdc:			; <UNDEFINED> instruction: 0xffa5ffff
   29be0:	lsrs	r5, r5, #25
   29be2:	movs	r0, r0
   29be4:	lsrs	r5, r5, #25
   29be6:	movs	r0, r0
   29be8:	lsrs	r7, r5, #26
   29bea:	movs	r0, r0
   29bec:	subs	r6, #168	; 0xa8
   29bee:	cmp	r6, #16
   29bf0:	bhi.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29bf2:	add	r3, pc, #8	; (adr r3, 29bfc <btrfs_print_leaf@@Base+0x33c>)
   29bf4:	ldr.w	r2, [r3, r6, lsl #2]
   29bf8:	add	r3, r2
   29bfa:	bx	r3
   29bfc:	lsrs	r1, r4, #3
   29bfe:	movs	r0, r0
   29c00:	lsrs	r7, r5, #3
   29c02:	movs	r0, r0
   29c04:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c08:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c0c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c10:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c14:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c18:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c1c:	lsrs	r3, r6, #3
   29c1e:	movs	r0, r0
   29c20:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c24:	lsrs	r3, r0, #4
   29c26:	movs	r0, r0
   29c28:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c2c:	lsrs	r7, r2, #5
   29c2e:	movs	r0, r0
   29c30:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c34:	lsrs	r3, r7, #3
   29c36:	movs	r0, r0
   29c38:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   29c3c:	lsrs	r7, r0, #5
   29c3e:	movs	r0, r0
   29c40:	cmp	r6, #60	; 0x3c
   29c42:	beq.w	2a2d8 <btrfs_print_leaf@@Base+0xa18>
   29c46:	bhi.n	29c5e <btrfs_print_leaf@@Base+0x39e>
   29c48:	cmp	r6, #24
   29c4a:	beq.n	29c6a <btrfs_print_leaf@@Base+0x3aa>
   29c4c:	cmp	r6, #48	; 0x30
   29c4e:	bne.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29c52:	ldr.w	r0, [pc, #2552]	; 2a64c <btrfs_print_leaf@@Base+0xd8c>
   29c56:	add	r0, pc
   29c58:	blx	8e24 <puts@plt+0x4>
   29c5c:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29c5e:	cmp	r6, #72	; 0x48
   29c60:	beq.w	2a2d8 <btrfs_print_leaf@@Base+0xa18>
   29c64:	cmp	r6, #84	; 0x54
   29c66:	bne.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29c6a:	ldr.w	r3, [pc, #2532]	; 2a650 <btrfs_print_leaf@@Base+0xd90>
   29c6e:	movs	r6, #0
   29c70:	add	r3, pc
   29c72:	vmov	s17, r3
   29c76:	ldr.w	r3, [pc, #2524]	; 2a654 <btrfs_print_leaf@@Base+0xd94>
   29c7a:	add	r3, pc
   29c7c:	vmov	s18, r3
   29c80:	ldr.w	r3, [pc, #2516]	; 2a658 <btrfs_print_leaf@@Base+0xd98>
   29c84:	add	r3, pc
   29c86:	vmov	s19, r3
   29c8a:	b.n	2a2c8 <btrfs_print_leaf@@Base+0xa08>
   29c8c:	cmp	r6, #132	; 0x84
   29c8e:	beq.w	2a2f2 <btrfs_print_leaf@@Base+0xa32>
   29c92:	bhi.n	29cc2 <btrfs_print_leaf@@Base+0x402>
   29c94:	cmp	r6, #120	; 0x78
   29c96:	beq.w	2a55a <btrfs_print_leaf@@Base+0xc9a>
   29c9a:	cmp	r6, #128	; 0x80
   29c9c:	beq.w	2a562 <btrfs_print_leaf@@Base+0xca2>
   29ca0:	cmp	r6, #108	; 0x6c
   29ca2:	bne.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29ca6:	add.w	r4, fp, r7
   29caa:	add	r0, sp, #940	; 0x3ac
   29cac:	ldrb	r3, [r4, #16]
   29cae:	ldrb	r5, [r4, #20]
   29cb0:	cmp	r3, #3
   29cb2:	bhi.w	2a764 <btrfs_print_leaf@@Base+0xea4>
   29cb6:	tbh	[pc, r3, lsl #1]
   29cba:	lsls	r6, r5, #17
   29cbc:	lsls	r3, r3, #18
   29cbe:	lsls	r6, r3, #18
   29cc0:	lsls	r1, r4, #18
   29cc2:	cmp	r6, #144	; 0x90
   29cc4:	beq.w	2a4d4 <btrfs_print_leaf@@Base+0xc14>
   29cc8:	cmp	r6, #156	; 0x9c
   29cca:	bne.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29cce:	ldr.w	r2, [pc, #2444]	; 2a65c <btrfs_print_leaf@@Base+0xd9c>
   29cd2:	add	r2, pc
   29cd4:	ldr	r1, [sp, #80]	; 0x50
   29cd6:	mov	r0, r9
   29cd8:	bl	28e48 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   29cdc:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29cde:	cmp	r6, #253	; 0xfd
   29ce0:	bhi.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29ce4:	cmp	r6, #227	; 0xe3
   29ce6:	bhi.w	29b72 <btrfs_print_leaf@@Base+0x2b2>
   29cea:	cmp	r6, #204	; 0xcc
   29cec:	bhi.n	29d3c <btrfs_print_leaf@@Base+0x47c>
   29cee:	cmp	r6, #191	; 0xbf
   29cf0:	bls.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29cf4:	subs	r6, #192	; 0xc0
   29cf6:	cmp	r6, #12
   29cf8:	bhi.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29cfc:	add	r3, pc, #8	; (adr r3, 29d08 <btrfs_print_leaf@@Base+0x448>)
   29cfe:	ldr.w	r2, [r3, r6, lsl #2]
   29d02:	add	r3, r2
   29d04:	bx	r3
   29d06:	nop
   29d08:	lsrs	r5, r2, #12
   29d0a:	movs	r0, r0
   29d0c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d10:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d14:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d18:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d1c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d20:	lsrs	r7, r1, #13
   29d22:	movs	r0, r0
   29d24:	lsrs	r5, r4, #13
   29d26:	movs	r0, r0
   29d28:	lsrs	r5, r5, #13
   29d2a:	movs	r0, r0
   29d2c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d30:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d34:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   29d38:	lsrs	r1, r0, #14
   29d3a:	movs	r0, r0
   29d3c:	cmp	r6, #216	; 0xd8
   29d3e:	bne.w	29b28 <btrfs_print_leaf@@Base+0x268>
   29d42:	add	r4, sp, #740	; 0x2e4
   29d44:	add.w	r2, r8, #167	; 0xa7
   29d48:	add	r5, sp, #772	; 0x304
   29d4a:	movs	r3, #16
   29d4c:	mov	r1, r4
   29d4e:	mov	r0, r9
   29d50:	bl	1bbba <read_extent_buffer@@Base>
   29d54:	mov	r0, r4
   29d56:	add	r4, sp, #756	; 0x2f4
   29d58:	add	r6, sp, #940	; 0x3ac
   29d5a:	mov	r1, r5
   29d5c:	blx	8b1c <uuid_unparse@plt>
   29d60:	add.w	r2, r8, #183	; 0xb7
   29d64:	movs	r3, #16
   29d66:	mov	r1, r4
   29d68:	mov	r0, r9
   29d6a:	bl	1bbba <read_extent_buffer@@Base>
   29d6e:	mov	r1, r6
   29d70:	mov	r0, r4
   29d72:	blx	8b1c <uuid_unparse@plt>
   29d76:	add.w	r3, fp, r7
   29d7a:	strd	r5, r6, [sp, #68]	; 0x44
   29d7e:	movs	r0, #1
   29d80:	ldrb.w	r2, [r3, #65]	; 0x41
   29d84:	str	r2, [sp, #64]	; 0x40
   29d86:	ldrb.w	r2, [r3, #64]	; 0x40
   29d8a:	str	r2, [sp, #60]	; 0x3c
   29d8c:	ldr	r2, [r3, #60]	; 0x3c
   29d8e:	str	r2, [sp, #56]	; 0x38
   29d90:	ldr	r1, [r3, #52]	; 0x34
   29d92:	ldr	r2, [r3, #56]	; 0x38
   29d94:	strd	r1, r2, [sp, #48]	; 0x30
   29d98:	ldr	r1, [r3, #44]	; 0x2c
   29d9a:	ldr	r2, [r3, #48]	; 0x30
   29d9c:	strd	r1, r2, [sp, #40]	; 0x28
   29da0:	ldr	r1, [r3, #36]	; 0x24
   29da2:	ldr	r2, [r3, #40]	; 0x28
   29da4:	strd	r1, r2, [sp, #32]
   29da8:	ldr	r2, [r3, #32]
   29daa:	str	r2, [sp, #24]
   29dac:	ldr	r2, [r3, #28]
   29dae:	str	r2, [sp, #20]
   29db0:	ldr	r2, [r3, #24]
   29db2:	str	r2, [sp, #16]
   29db4:	ldr	r1, [r3, #16]
   29db6:	ldr	r2, [r3, #20]
   29db8:	strd	r1, r2, [sp, #8]
   29dbc:	ldr	r1, [r3, #8]
   29dbe:	ldr	r2, [r3, #12]
   29dc0:	strd	r1, r2, [sp]
   29dc4:	ldr.w	r1, [pc, #2200]	; 2a660 <btrfs_print_leaf@@Base+0xda0>
   29dc8:	ldr.w	r2, [fp, r7]
   29dcc:	ldr	r3, [r3, #4]
   29dce:	add	r1, pc
   29dd0:	blx	900c <__printf_chk@plt+0x4>
   29dd4:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   29dd6:	add	r3, sp, #940	; 0x3ac
   29dd8:	add	fp, r7
   29dda:	mov.w	r2, #256	; 0x100
   29dde:	movs	r1, #0
   29de0:	mov	r0, r3
   29de2:	movs	r7, #0
   29de4:	blx	8f98 <memset@plt+0x4>
   29de8:	ldr.w	r5, [fp, #64]	; 0x40
   29dec:	ldr.w	r4, [fp, #68]	; 0x44
   29df0:	and.w	r2, r5, #1
   29df4:	strd	r2, r7, [sp, #112]	; 0x70
   29df8:	ldrd	r1, r2, [sp, #112]	; 0x70
   29dfc:	orrs	r2, r1
   29dfe:	beq.n	29e10 <btrfs_print_leaf@@Base+0x550>
   29e00:	ldr.w	r1, [pc, #2144]	; 2a664 <btrfs_print_leaf@@Base+0xda4>
   29e04:	mov.w	r2, #256	; 0x100
   29e08:	mov	r6, r7
   29e0a:	add	r1, pc
   29e0c:	blx	8f64 <__strcat_chk@plt>
   29e10:	and.w	r3, r5, #2
   29e14:	str	r3, [sp, #120]	; 0x78
   29e16:	movs	r3, #0
   29e18:	str	r3, [sp, #124]	; 0x7c
   29e1a:	ldrd	r2, r3, [sp, #120]	; 0x78
   29e1e:	orrs	r3, r2
   29e20:	beq.n	29e46 <btrfs_print_leaf@@Base+0x586>
   29e22:	cbnz	r6, 29e34 <btrfs_print_leaf@@Base+0x574>
   29e24:	ldr.w	r1, [pc, #2112]	; 2a668 <btrfs_print_leaf@@Base+0xda8>
   29e28:	add	r0, sp, #940	; 0x3ac
   29e2a:	mov.w	r2, #256	; 0x100
   29e2e:	add	r1, pc
   29e30:	blx	8f64 <__strcat_chk@plt>
   29e34:	ldr.w	r1, [pc, #2100]	; 2a66c <btrfs_print_leaf@@Base+0xdac>
   29e38:	add	r0, sp, #940	; 0x3ac
   29e3a:	mov.w	r2, #256	; 0x100
   29e3e:	movs	r6, #0
   29e40:	add	r1, pc
   29e42:	blx	8f64 <__strcat_chk@plt>
   29e46:	and.w	r3, r5, #4
   29e4a:	str	r3, [sp, #128]	; 0x80
   29e4c:	movs	r3, #0
   29e4e:	str	r3, [sp, #132]	; 0x84
   29e50:	ldrd	r2, r3, [sp, #128]	; 0x80
   29e54:	orrs	r3, r2
   29e56:	beq.n	29e7c <btrfs_print_leaf@@Base+0x5bc>
   29e58:	cbnz	r6, 29e6a <btrfs_print_leaf@@Base+0x5aa>
   29e5a:	ldr.w	r1, [pc, #2068]	; 2a670 <btrfs_print_leaf@@Base+0xdb0>
   29e5e:	add	r0, sp, #940	; 0x3ac
   29e60:	mov.w	r2, #256	; 0x100
   29e64:	add	r1, pc
   29e66:	blx	8f64 <__strcat_chk@plt>
   29e6a:	ldr.w	r1, [pc, #2056]	; 2a674 <btrfs_print_leaf@@Base+0xdb4>
   29e6e:	add	r0, sp, #940	; 0x3ac
   29e70:	mov.w	r2, #256	; 0x100
   29e74:	movs	r6, #0
   29e76:	add	r1, pc
   29e78:	blx	8f64 <__strcat_chk@plt>
   29e7c:	and.w	r3, r5, #8
   29e80:	str	r3, [sp, #136]	; 0x88
   29e82:	movs	r3, #0
   29e84:	str	r3, [sp, #140]	; 0x8c
   29e86:	ldrd	r2, r3, [sp, #136]	; 0x88
   29e8a:	orrs	r3, r2
   29e8c:	beq.n	29eb2 <btrfs_print_leaf@@Base+0x5f2>
   29e8e:	cbnz	r6, 29ea0 <btrfs_print_leaf@@Base+0x5e0>
   29e90:	ldr.w	r1, [pc, #2020]	; 2a678 <btrfs_print_leaf@@Base+0xdb8>
   29e94:	add	r0, sp, #940	; 0x3ac
   29e96:	mov.w	r2, #256	; 0x100
   29e9a:	add	r1, pc
   29e9c:	blx	8f64 <__strcat_chk@plt>
   29ea0:	ldr.w	r1, [pc, #2008]	; 2a67c <btrfs_print_leaf@@Base+0xdbc>
   29ea4:	add	r0, sp, #940	; 0x3ac
   29ea6:	mov.w	r2, #256	; 0x100
   29eaa:	movs	r6, #0
   29eac:	add	r1, pc
   29eae:	blx	8f64 <__strcat_chk@plt>
   29eb2:	and.w	r3, r5, #16
   29eb6:	str	r3, [sp, #144]	; 0x90
   29eb8:	movs	r3, #0
   29eba:	str	r3, [sp, #148]	; 0x94
   29ebc:	ldrd	r2, r3, [sp, #144]	; 0x90
   29ec0:	orrs	r3, r2
   29ec2:	beq.n	29ee8 <btrfs_print_leaf@@Base+0x628>
   29ec4:	cbnz	r6, 29ed6 <btrfs_print_leaf@@Base+0x616>
   29ec6:	ldr.w	r1, [pc, #1976]	; 2a680 <btrfs_print_leaf@@Base+0xdc0>
   29eca:	add	r0, sp, #940	; 0x3ac
   29ecc:	mov.w	r2, #256	; 0x100
   29ed0:	add	r1, pc
   29ed2:	blx	8f64 <__strcat_chk@plt>
   29ed6:	ldr.w	r1, [pc, #1964]	; 2a684 <btrfs_print_leaf@@Base+0xdc4>
   29eda:	add	r0, sp, #940	; 0x3ac
   29edc:	mov.w	r2, #256	; 0x100
   29ee0:	movs	r6, #0
   29ee2:	add	r1, pc
   29ee4:	blx	8f64 <__strcat_chk@plt>
   29ee8:	and.w	r3, r5, #32
   29eec:	str	r3, [sp, #152]	; 0x98
   29eee:	movs	r3, #0
   29ef0:	str	r3, [sp, #156]	; 0x9c
   29ef2:	ldrd	r2, r3, [sp, #152]	; 0x98
   29ef6:	orrs	r3, r2
   29ef8:	beq.n	29f1e <btrfs_print_leaf@@Base+0x65e>
   29efa:	cbnz	r6, 29f0c <btrfs_print_leaf@@Base+0x64c>
   29efc:	ldr.w	r1, [pc, #1928]	; 2a688 <btrfs_print_leaf@@Base+0xdc8>
   29f00:	add	r0, sp, #940	; 0x3ac
   29f02:	mov.w	r2, #256	; 0x100
   29f06:	add	r1, pc
   29f08:	blx	8f64 <__strcat_chk@plt>
   29f0c:	ldr.w	r1, [pc, #1916]	; 2a68c <btrfs_print_leaf@@Base+0xdcc>
   29f10:	add	r0, sp, #940	; 0x3ac
   29f12:	mov.w	r2, #256	; 0x100
   29f16:	movs	r6, #0
   29f18:	add	r1, pc
   29f1a:	blx	8f64 <__strcat_chk@plt>
   29f1e:	and.w	r3, r5, #64	; 0x40
   29f22:	str	r3, [sp, #160]	; 0xa0
   29f24:	movs	r3, #0
   29f26:	str	r3, [sp, #164]	; 0xa4
   29f28:	ldrd	r2, r3, [sp, #160]	; 0xa0
   29f2c:	orrs	r3, r2
   29f2e:	beq.n	29f54 <btrfs_print_leaf@@Base+0x694>
   29f30:	cbnz	r6, 29f42 <btrfs_print_leaf@@Base+0x682>
   29f32:	ldr.w	r1, [pc, #1884]	; 2a690 <btrfs_print_leaf@@Base+0xdd0>
   29f36:	add	r0, sp, #940	; 0x3ac
   29f38:	mov.w	r2, #256	; 0x100
   29f3c:	add	r1, pc
   29f3e:	blx	8f64 <__strcat_chk@plt>
   29f42:	ldr.w	r1, [pc, #1872]	; 2a694 <btrfs_print_leaf@@Base+0xdd4>
   29f46:	add	r0, sp, #940	; 0x3ac
   29f48:	mov.w	r2, #256	; 0x100
   29f4c:	movs	r6, #0
   29f4e:	add	r1, pc
   29f50:	blx	8f64 <__strcat_chk@plt>
   29f54:	and.w	r3, r5, #128	; 0x80
   29f58:	str	r3, [sp, #168]	; 0xa8
   29f5a:	movs	r3, #0
   29f5c:	str	r3, [sp, #172]	; 0xac
   29f5e:	ldrd	r2, r3, [sp, #168]	; 0xa8
   29f62:	orrs	r3, r2
   29f64:	beq.n	29f8a <btrfs_print_leaf@@Base+0x6ca>
   29f66:	cbnz	r6, 29f78 <btrfs_print_leaf@@Base+0x6b8>
   29f68:	ldr.w	r1, [pc, #1836]	; 2a698 <btrfs_print_leaf@@Base+0xdd8>
   29f6c:	add	r0, sp, #940	; 0x3ac
   29f6e:	mov.w	r2, #256	; 0x100
   29f72:	add	r1, pc
   29f74:	blx	8f64 <__strcat_chk@plt>
   29f78:	ldr.w	r1, [pc, #1824]	; 2a69c <btrfs_print_leaf@@Base+0xddc>
   29f7c:	add	r0, sp, #940	; 0x3ac
   29f7e:	mov.w	r2, #256	; 0x100
   29f82:	movs	r6, #0
   29f84:	add	r1, pc
   29f86:	blx	8f64 <__strcat_chk@plt>
   29f8a:	and.w	r3, r5, #256	; 0x100
   29f8e:	str	r3, [sp, #176]	; 0xb0
   29f90:	movs	r3, #0
   29f92:	str	r3, [sp, #180]	; 0xb4
   29f94:	ldrd	r2, r3, [sp, #176]	; 0xb0
   29f98:	orrs	r3, r2
   29f9a:	beq.n	29fc0 <btrfs_print_leaf@@Base+0x700>
   29f9c:	cbnz	r6, 29fae <btrfs_print_leaf@@Base+0x6ee>
   29f9e:	ldr.w	r1, [pc, #1792]	; 2a6a0 <btrfs_print_leaf@@Base+0xde0>
   29fa2:	add	r0, sp, #940	; 0x3ac
   29fa4:	mov.w	r2, #256	; 0x100
   29fa8:	add	r1, pc
   29faa:	blx	8f64 <__strcat_chk@plt>
   29fae:	ldr.w	r1, [pc, #1780]	; 2a6a4 <btrfs_print_leaf@@Base+0xde4>
   29fb2:	add	r0, sp, #940	; 0x3ac
   29fb4:	mov.w	r2, #256	; 0x100
   29fb8:	movs	r6, #0
   29fba:	add	r1, pc
   29fbc:	blx	8f64 <__strcat_chk@plt>
   29fc0:	and.w	r3, r5, #512	; 0x200
   29fc4:	str	r3, [sp, #184]	; 0xb8
   29fc6:	movs	r3, #0
   29fc8:	str	r3, [sp, #188]	; 0xbc
   29fca:	ldrd	r2, r3, [sp, #184]	; 0xb8
   29fce:	orrs	r3, r2
   29fd0:	beq.n	29ff6 <btrfs_print_leaf@@Base+0x736>
   29fd2:	cbnz	r6, 29fe4 <btrfs_print_leaf@@Base+0x724>
   29fd4:	ldr.w	r1, [pc, #1744]	; 2a6a8 <btrfs_print_leaf@@Base+0xde8>
   29fd8:	add	r0, sp, #940	; 0x3ac
   29fda:	mov.w	r2, #256	; 0x100
   29fde:	add	r1, pc
   29fe0:	blx	8f64 <__strcat_chk@plt>
   29fe4:	ldr.w	r1, [pc, #1732]	; 2a6ac <btrfs_print_leaf@@Base+0xdec>
   29fe8:	add	r0, sp, #940	; 0x3ac
   29fea:	mov.w	r2, #256	; 0x100
   29fee:	movs	r6, #0
   29ff0:	add	r1, pc
   29ff2:	blx	8f64 <__strcat_chk@plt>
   29ff6:	and.w	r3, r5, #1024	; 0x400
   29ffa:	str	r3, [sp, #192]	; 0xc0
   29ffc:	movs	r3, #0
   29ffe:	str	r3, [sp, #196]	; 0xc4
   2a000:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2a004:	orrs	r3, r2
   2a006:	beq.n	2a02c <btrfs_print_leaf@@Base+0x76c>
   2a008:	cbnz	r6, 2a01a <btrfs_print_leaf@@Base+0x75a>
   2a00a:	ldr.w	r1, [pc, #1700]	; 2a6b0 <btrfs_print_leaf@@Base+0xdf0>
   2a00e:	add	r0, sp, #940	; 0x3ac
   2a010:	mov.w	r2, #256	; 0x100
   2a014:	add	r1, pc
   2a016:	blx	8f64 <__strcat_chk@plt>
   2a01a:	ldr.w	r1, [pc, #1688]	; 2a6b4 <btrfs_print_leaf@@Base+0xdf4>
   2a01e:	add	r0, sp, #940	; 0x3ac
   2a020:	mov.w	r2, #256	; 0x100
   2a024:	movs	r6, #0
   2a026:	add	r1, pc
   2a028:	blx	8f64 <__strcat_chk@plt>
   2a02c:	and.w	r3, r5, #2048	; 0x800
   2a030:	str	r3, [sp, #200]	; 0xc8
   2a032:	movs	r3, #0
   2a034:	str	r3, [sp, #204]	; 0xcc
   2a036:	ldrd	r2, r3, [sp, #200]	; 0xc8
   2a03a:	add	r0, sp, #940	; 0x3ac
   2a03c:	orrs	r3, r2
   2a03e:	beq.n	2a11e <btrfs_print_leaf@@Base+0x85e>
   2a040:	cbnz	r6, 2a050 <btrfs_print_leaf@@Base+0x790>
   2a042:	ldr.w	r1, [pc, #1652]	; 2a6b8 <btrfs_print_leaf@@Base+0xdf8>
   2a046:	mov.w	r2, #256	; 0x100
   2a04a:	add	r1, pc
   2a04c:	blx	8f64 <__strcat_chk@plt>
   2a050:	ldr.w	r1, [pc, #1640]	; 2a6bc <btrfs_print_leaf@@Base+0xdfc>
   2a054:	add	r0, sp, #940	; 0x3ac
   2a056:	mov.w	r2, #256	; 0x100
   2a05a:	add	r1, pc
   2a05c:	blx	8f64 <__strcat_chk@plt>
   2a060:	strd	r5, r4, [sp, #64]	; 0x40
   2a064:	add	r3, sp, #940	; 0x3ac
   2a066:	str	r3, [sp, #72]	; 0x48
   2a068:	movs	r0, #1
   2a06a:	ldr.w	r2, [fp, #72]	; 0x48
   2a06e:	ldr.w	r3, [fp, #76]	; 0x4c
   2a072:	ldr.w	r1, [pc, #1612]	; 2a6c0 <btrfs_print_leaf@@Base+0xe00>
   2a076:	strd	r2, r3, [sp, #56]	; 0x38
   2a07a:	add	r1, pc
   2a07c:	ldr.w	r2, [fp, #56]	; 0x38
   2a080:	ldr.w	r3, [fp, #60]	; 0x3c
   2a084:	strd	r2, r3, [sp, #48]	; 0x30
   2a088:	ldr.w	r3, [fp, #48]	; 0x30
   2a08c:	str	r3, [sp, #44]	; 0x2c
   2a08e:	ldr.w	r3, [fp, #44]	; 0x2c
   2a092:	str	r3, [sp, #40]	; 0x28
   2a094:	ldr.w	r3, [fp, #40]	; 0x28
   2a098:	str	r3, [sp, #36]	; 0x24
   2a09a:	ldr.w	r3, [fp, #52]	; 0x34
   2a09e:	str	r3, [sp, #32]
   2a0a0:	ldr.w	r2, [fp, #32]
   2a0a4:	ldr.w	r3, [fp, #36]	; 0x24
   2a0a8:	strd	r2, r3, [sp, #24]
   2a0ac:	ldr.w	r2, [fp, #24]
   2a0b0:	ldr.w	r3, [fp, #28]
   2a0b4:	strd	r2, r3, [sp, #16]
   2a0b8:	ldr.w	r2, [fp, #16]
   2a0bc:	ldr.w	r3, [fp, #20]
   2a0c0:	strd	r2, r3, [sp, #8]
   2a0c4:	ldr.w	r2, [fp, #8]
   2a0c8:	ldr.w	r3, [fp, #12]
   2a0cc:	strd	r2, r3, [sp]
   2a0d0:	ldr.w	r3, [fp, #4]
   2a0d4:	ldr.w	r2, [fp]
   2a0d8:	blx	900c <__printf_chk@plt+0x4>
   2a0dc:	ldr.w	r2, [pc, #1508]	; 2a6c4 <btrfs_print_leaf@@Base+0xe04>
   2a0e0:	add.w	r1, r8, #213	; 0xd5
   2a0e4:	mov	r0, r9
   2a0e6:	add	r2, pc
   2a0e8:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a0ec:	ldr.w	r2, [pc, #1496]	; 2a6c8 <btrfs_print_leaf@@Base+0xe08>
   2a0f0:	add.w	r1, r8, #225	; 0xe1
   2a0f4:	mov	r0, r9
   2a0f6:	add	r2, pc
   2a0f8:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a0fc:	ldr.w	r2, [pc, #1484]	; 2a6cc <btrfs_print_leaf@@Base+0xe0c>
   2a100:	add.w	r1, r8, #237	; 0xed
   2a104:	mov	r0, r9
   2a106:	add	r2, pc
   2a108:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a10c:	ldr.w	r2, [pc, #1472]	; 2a6d0 <btrfs_print_leaf@@Base+0xe10>
   2a110:	add.w	r1, r8, #249	; 0xf9
   2a114:	mov	r0, r9
   2a116:	add	r2, pc
   2a118:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a11c:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   2a11e:	cmp	r6, #0
   2a120:	beq.n	2a060 <btrfs_print_leaf@@Base+0x7a0>
   2a122:	ldr.w	r1, [pc, #1456]	; 2a6d4 <btrfs_print_leaf@@Base+0xe14>
   2a126:	mov.w	r2, #256	; 0x100
   2a12a:	add	r1, pc
   2a12c:	b.n	2a05c <btrfs_print_leaf@@Base+0x79c>
   2a12e:	add.w	r3, fp, r7
   2a132:	mov	r1, r6
   2a134:	mov	r0, r9
   2a136:	ldrh	r4, [r3, #8]
   2a138:	ldr	r2, [r3, #0]
   2a13a:	cmp	r4, #255	; 0xff
   2a13c:	ldr.w	r8, [r3, #4]
   2a140:	mov	r3, r4
   2a142:	vmov	s16, r2
   2a146:	it	cs
   2a148:	movcs	r3, #255	; 0xff
   2a14a:	add.w	r2, r7, #10
   2a14e:	str	r3, [sp, #96]	; 0x60
   2a150:	bl	1bbba <read_extent_buffer@@Base>
   2a154:	ldr	r3, [sp, #96]	; 0x60
   2a156:	vmov	r2, s16
   2a15a:	movs	r0, #1
   2a15c:	vmov	r1, s17
   2a160:	strd	r4, r3, [sp]
   2a164:	mov	r3, r8
   2a166:	str	r6, [sp, #8]
   2a168:	adds	r4, #10
   2a16a:	blx	900c <__printf_chk@plt+0x4>
   2a16e:	add	r7, r4
   2a170:	add	r5, r4
   2a172:	ldr	r3, [sp, #84]	; 0x54
   2a174:	cmp	r3, r5
   2a176:	bhi.n	2a12e <btrfs_print_leaf@@Base+0x86e>
   2a178:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   2a17a:	add.w	r3, fp, r7
   2a17e:	mov	r1, r6
   2a180:	mov	r0, r9
   2a182:	ldr	r2, [r3, #8]
   2a184:	ldrh	r4, [r3, #16]
   2a186:	ldr.w	r8, [r3, #12]
   2a18a:	vmov	s16, r2
   2a18e:	ldr	r2, [r3, #0]
   2a190:	ldr	r3, [r3, #4]
   2a192:	cmp	r4, #255	; 0xff
   2a194:	str	r2, [sp, #96]	; 0x60
   2a196:	add.w	r2, r7, #18
   2a19a:	str	r3, [sp, #88]	; 0x58
   2a19c:	mov	r3, r4
   2a19e:	it	cs
   2a1a0:	movcs	r3, #255	; 0xff
   2a1a2:	str	r3, [sp, #244]	; 0xf4
   2a1a4:	bl	1bbba <read_extent_buffer@@Base>
   2a1a8:	ldr	r3, [sp, #244]	; 0xf4
   2a1aa:	vmov	r2, s16
   2a1ae:	movs	r0, #1
   2a1b0:	vmov	r1, s17
   2a1b4:	strd	r4, r3, [sp, #8]
   2a1b8:	adds	r4, #18
   2a1ba:	ldr	r3, [sp, #96]	; 0x60
   2a1bc:	add	r7, r4
   2a1be:	str	r6, [sp, #16]
   2a1c0:	add	r5, r4
   2a1c2:	str	r3, [sp, #0]
   2a1c4:	ldr	r3, [sp, #88]	; 0x58
   2a1c6:	str	r3, [sp, #4]
   2a1c8:	mov	r3, r8
   2a1ca:	blx	900c <__printf_chk@plt+0x4>
   2a1ce:	ldr	r3, [sp, #84]	; 0x54
   2a1d0:	cmp	r3, r5
   2a1d2:	bhi.n	2a17a <btrfs_print_leaf@@Base+0x8ba>
   2a1d4:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   2a1d6:	ldr.w	r3, [pc, #1280]	; 2a6d8 <btrfs_print_leaf@@Base+0xe18>
   2a1da:	add	r6, sp, #940	; 0x3ac
   2a1dc:	movs	r5, #0
   2a1de:	add	r3, pc
   2a1e0:	vmov	s17, r3
   2a1e4:	b.n	2a1ce <btrfs_print_leaf@@Base+0x90e>
   2a1e6:	add	r4, sp, #272	; 0x110
   2a1e8:	movs	r3, #17
   2a1ea:	mov	r2, r7
   2a1ec:	mov	r0, r9
   2a1ee:	mov	r1, r4
   2a1f0:	add.w	r5, fp, r7
   2a1f4:	bl	1bbba <read_extent_buffer@@Base>
   2a1f8:	vmov	r1, s17
   2a1fc:	movs	r0, #1
   2a1fe:	blx	900c <__printf_chk@plt+0x4>
   2a202:	mov	r0, r4
   2a204:	bl	294c4 <btrfs_print_key@@Base>
   2a208:	vmov	r1, s18
   2a20c:	movs	r0, #1
   2a20e:	blx	900c <__printf_chk@plt+0x4>
   2a212:	ldrb	r3, [r5, #29]
   2a214:	cmp	r3, #8
   2a216:	bhi.n	2a2d0 <btrfs_print_leaf@@Base+0xa10>
   2a218:	ldr.w	r2, [pc, #1216]	; 2a6dc <btrfs_print_leaf@@Base+0xe1c>
   2a21c:	add	r2, pc
   2a21e:	add.w	r2, r2, r3, lsl #2
   2a222:	ldr.w	r2, [r2, #1024]	; 0x400
   2a226:	cmp	r2, #0
   2a228:	beq.n	2a2d0 <btrfs_print_leaf@@Base+0xa10>
   2a22a:	ldr.w	r1, [pc, #1204]	; 2a6e0 <btrfs_print_leaf@@Base+0xe20>
   2a22e:	add	r1, pc
   2a230:	movs	r0, #1
   2a232:	add.w	r8, sp, #940	; 0x3ac
   2a236:	blx	900c <__printf_chk@plt+0x4>
   2a23a:	movs	r0, #10
   2a23c:	blx	8fa8 <putchar@plt+0x4>
   2a240:	ldrh.w	r4, [r5, #27]
   2a244:	ldrh.w	r3, [r5, #25]
   2a248:	mov	r1, r8
   2a24a:	cmp	r4, #255	; 0xff
   2a24c:	mov	r0, r9
   2a24e:	str	r3, [sp, #96]	; 0x60
   2a250:	mov	r3, r4
   2a252:	it	cs
   2a254:	movcs	r3, #255	; 0xff
   2a256:	vmov	s16, r3
   2a25a:	add.w	r3, r7, #30
   2a25e:	str	r3, [sp, #88]	; 0x58
   2a260:	ldr	r2, [sp, #88]	; 0x58
   2a262:	vmov	r3, s16
   2a266:	bl	1bbba <read_extent_buffer@@Base>
   2a26a:	ldr.w	r2, [r5, #17]!
   2a26e:	ldr	r3, [sp, #96]	; 0x60
   2a270:	movs	r0, #1
   2a272:	ldr.w	r1, [pc, #1136]	; 2a6e4 <btrfs_print_leaf@@Base+0xe24>
   2a276:	str	r4, [sp, #4]
   2a278:	add	r1, pc
   2a27a:	str	r3, [sp, #0]
   2a27c:	ldr	r3, [r5, #4]
   2a27e:	blx	900c <__printf_chk@plt+0x4>
   2a282:	ldr.w	r1, [pc, #1124]	; 2a6e8 <btrfs_print_leaf@@Base+0xe28>
   2a286:	mov	r3, r8
   2a288:	vmov	r2, s16
   2a28c:	add	r1, pc
   2a28e:	movs	r0, #1
   2a290:	blx	900c <__printf_chk@plt+0x4>
   2a294:	ldr	r3, [sp, #96]	; 0x60
   2a296:	cbz	r3, 2a2be <btrfs_print_leaf@@Base+0x9fe>
   2a298:	cmp	r3, #255	; 0xff
   2a29a:	ldr	r2, [sp, #88]	; 0x58
   2a29c:	mov	r5, r3
   2a29e:	mov	r1, r8
   2a2a0:	it	cs
   2a2a2:	movcs	r5, #255	; 0xff
   2a2a4:	add	r2, r4
   2a2a6:	mov	r3, r5
   2a2a8:	mov	r0, r9
   2a2aa:	bl	1bbba <read_extent_buffer@@Base>
   2a2ae:	ldr.w	r1, [pc, #1084]	; 2a6ec <btrfs_print_leaf@@Base+0xe2c>
   2a2b2:	mov	r3, r8
   2a2b4:	mov	r2, r5
   2a2b6:	add	r1, pc
   2a2b8:	movs	r0, #1
   2a2ba:	blx	900c <__printf_chk@plt+0x4>
   2a2be:	ldr	r3, [sp, #96]	; 0x60
   2a2c0:	add	r4, r3
   2a2c2:	adds	r4, #30
   2a2c4:	add	r7, r4
   2a2c6:	add	r6, r4
   2a2c8:	ldr	r3, [sp, #84]	; 0x54
   2a2ca:	cmp	r3, r6
   2a2cc:	bhi.n	2a1e6 <btrfs_print_leaf@@Base+0x926>
   2a2ce:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   2a2d0:	vmov	r1, s19
   2a2d4:	mov	r2, r3
   2a2d6:	b.n	2a230 <btrfs_print_leaf@@Base+0x970>
   2a2d8:	ldr.w	r3, [sl, #17]
   2a2dc:	ldr.w	r1, [pc, #1040]	; 2a6f0 <btrfs_print_leaf@@Base+0xe30>
   2a2e0:	add	r3, fp
   2a2e2:	add	r1, pc
   2a2e4:	ldr.w	r2, [r3, #101]!
   2a2e8:	ldr	r3, [r3, #4]
   2a2ea:	movs	r0, #1
   2a2ec:	blx	900c <__printf_chk@plt+0x4>
   2a2f0:	b.n	29b28 <btrfs_print_leaf@@Base+0x268>
   2a2f2:	movs	r6, #0
   2a2f4:	movs	r2, #28
   2a2f6:	mov	r1, r6
   2a2f8:	add	r0, sp, #776	; 0x308
   2a2fa:	add	r5, sp, #300	; 0x12c
   2a2fc:	str	r6, [sp, #772]	; 0x304
   2a2fe:	blx	8f98 <memset@plt+0x4>
   2a302:	ldr.w	r3, [sl, #21]
   2a306:	ldr.w	r4, [sl, #17]
   2a30a:	movw	r2, #439	; 0x1b7
   2a30e:	mov	r1, r6
   2a310:	mov	r0, r5
   2a312:	str	r3, [sp, #84]	; 0x54
   2a314:	blx	8f98 <memset@plt+0x4>
   2a318:	ldr	r3, [sp, #84]	; 0x54
   2a31a:	add.w	r2, r4, #101	; 0x65
   2a31e:	mov	r1, r5
   2a320:	mov	r0, r9
   2a322:	bl	1bbba <read_extent_buffer@@Base>
   2a326:	ldr.w	r3, [r5, #208]	; 0xd0
   2a32a:	add	r7, sp, #772	; 0x304
   2a32c:	and.w	r3, r3, #1
   2a330:	strd	r3, r6, [sp, #208]	; 0xd0
   2a334:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2a338:	orrs	r3, r2
   2a33a:	mov.w	r2, #32
   2a33e:	beq.w	2a4ce <btrfs_print_leaf@@Base+0xc0e>
   2a342:	ldr	r1, [pc, #944]	; (2a6f4 <btrfs_print_leaf@@Base+0xe34>)
   2a344:	add	r1, pc
   2a346:	add	r5, sp, #300	; 0x12c
   2a348:	mov	r0, r7
   2a34a:	blx	8f64 <__strcat_chk@plt>
   2a34e:	ldr	r1, [pc, #936]	; (2a6f8 <btrfs_print_leaf@@Base+0xe38>)
   2a350:	ldr.w	r3, [r5, #216]	; 0xd8
   2a354:	movs	r0, #1
   2a356:	add	r1, pc
   2a358:	str	r3, [sp, #20]
   2a35a:	ldrb.w	r3, [r5, #238]	; 0xee
   2a35e:	str	r3, [sp, #16]
   2a360:	ldrd	r2, r3, [r5, #176]	; 0xb0
   2a364:	strd	r2, r3, [sp, #8]
   2a368:	ldrd	r2, r3, [r5, #168]	; 0xa8
   2a36c:	strd	r2, r3, [sp]
   2a370:	ldrd	r2, r3, [r5, #160]	; 0xa0
   2a374:	blx	900c <__printf_chk@plt+0x4>
   2a378:	add	r3, sp, #772	; 0x304
   2a37a:	str	r3, [sp, #24]
   2a37c:	movs	r0, #1
   2a37e:	ldrd	r2, r3, [r5, #208]	; 0xd0
   2a382:	ldr	r1, [pc, #888]	; (2a6fc <btrfs_print_leaf@@Base+0xe3c>)
   2a384:	strd	r2, r3, [sp, #16]
   2a388:	add	r1, pc
   2a38a:	ldrd	r2, r3, [r5, #192]	; 0xc0
   2a38e:	strd	r2, r3, [sp, #8]
   2a392:	ldrd	r2, r3, [r5, #184]	; 0xb8
   2a396:	strd	r2, r3, [sp]
   2a39a:	ldrd	r2, r3, [r5, #200]	; 0xc8
   2a39e:	blx	900c <__printf_chk@plt+0x4>
   2a3a2:	ldrd	r0, r1, [r5, #160]	; 0xa0
   2a3a6:	ldr.w	r3, [r5, #243]	; 0xf3
   2a3aa:	ldr.w	r2, [r5, #239]	; 0xef
   2a3ae:	cmp	r1, r3
   2a3b0:	it	eq
   2a3b2:	cmpeq	r0, r2
   2a3b4:	bne.n	2a4ac <btrfs_print_leaf@@Base+0xbec>
   2a3b6:	add	r2, sp, #940	; 0x3ac
   2a3b8:	addw	r0, sp, #547	; 0x223
   2a3bc:	str	r2, [sp, #84]	; 0x54
   2a3be:	mov	r1, r2
   2a3c0:	blx	8b1c <uuid_unparse@plt>
   2a3c4:	ldr	r1, [pc, #824]	; (2a700 <btrfs_print_leaf@@Base+0xe40>)
   2a3c6:	ldr	r2, [sp, #84]	; 0x54
   2a3c8:	movs	r0, #1
   2a3ca:	add	r1, pc
   2a3cc:	blx	900c <__printf_chk@plt+0x4>
   2a3d0:	addw	r2, sp, #563	; 0x233
   2a3d4:	movs	r3, #0
   2a3d6:	ldrb.w	r1, [r2], #1
   2a3da:	cmp	r1, #0
   2a3dc:	bne.w	2abd6 <btrfs_print_leaf@@Base+0x1316>
   2a3e0:	adds	r3, #1
   2a3e2:	cmp	r3, #16
   2a3e4:	bne.n	2a3d6 <btrfs_print_leaf@@Base+0xb16>
   2a3e6:	addw	r2, sp, #579	; 0x243
   2a3ea:	movs	r3, #0
   2a3ec:	ldrb.w	r1, [r2], #1
   2a3f0:	cmp	r1, #0
   2a3f2:	bne.w	2abba <btrfs_print_leaf@@Base+0x12fa>
   2a3f6:	adds	r3, #1
   2a3f8:	cmp	r3, #16
   2a3fa:	bne.n	2a3ec <btrfs_print_leaf@@Base+0xb2c>
   2a3fc:	ldr.w	r0, [sp, #595]	; 0x253
   2a400:	ldr.w	r1, [sp, #599]	; 0x257
   2a404:	orrs.w	r2, r0, r1
   2a408:	beq.n	2a43c <btrfs_print_leaf@@Base+0xb7c>
   2a40a:	ldr.w	r5, [sp, #619]	; 0x26b
   2a40e:	ldr.w	r2, [sp, #623]	; 0x26f
   2a412:	ldr.w	r3, [sp, #607]	; 0x25f
   2a416:	strd	r5, r2, [sp, #16]
   2a41a:	ldr.w	r2, [sp, #615]	; 0x267
   2a41e:	ldr.w	r5, [sp, #611]	; 0x263
   2a422:	strd	r5, r2, [sp, #8]
   2a426:	ldr.w	r2, [sp, #603]	; 0x25b
   2a42a:	strd	r2, r3, [sp]
   2a42e:	mov	r3, r1
   2a430:	ldr	r1, [pc, #720]	; (2a704 <btrfs_print_leaf@@Base+0xe44>)
   2a432:	mov	r2, r0
   2a434:	movs	r0, #1
   2a436:	add	r1, pc
   2a438:	blx	900c <__printf_chk@plt+0x4>
   2a43c:	add.w	r1, r4, #428	; 0x1ac
   2a440:	add.w	r0, fp, r1
   2a444:	ldr.w	r2, [fp, r1]
   2a448:	ldr	r3, [r0, #4]
   2a44a:	orrs	r3, r2
   2a44c:	beq.n	2a458 <btrfs_print_leaf@@Base+0xb98>
   2a44e:	ldr	r2, [pc, #696]	; (2a708 <btrfs_print_leaf@@Base+0xe48>)
   2a450:	mov	r0, r9
   2a452:	add	r2, pc
   2a454:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a458:	add.w	r1, r4, #440	; 0x1b8
   2a45c:	add.w	r0, fp, r1
   2a460:	ldr.w	r2, [fp, r1]
   2a464:	ldr	r3, [r0, #4]
   2a466:	orrs	r3, r2
   2a468:	beq.n	2a474 <btrfs_print_leaf@@Base+0xbb4>
   2a46a:	ldr	r2, [pc, #672]	; (2a70c <btrfs_print_leaf@@Base+0xe4c>)
   2a46c:	mov	r0, r9
   2a46e:	add	r2, pc
   2a470:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a474:	add.w	r1, r4, #452	; 0x1c4
   2a478:	add.w	r0, fp, r1
   2a47c:	ldr.w	r2, [fp, r1]
   2a480:	ldr	r3, [r0, #4]
   2a482:	orrs	r3, r2
   2a484:	beq.n	2a490 <btrfs_print_leaf@@Base+0xbd0>
   2a486:	ldr	r2, [pc, #648]	; (2a710 <btrfs_print_leaf@@Base+0xe50>)
   2a488:	mov	r0, r9
   2a48a:	add	r2, pc
   2a48c:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a490:	add.w	r1, r4, #464	; 0x1d0
   2a494:	add.w	r0, fp, r1
   2a498:	ldr.w	r2, [fp, r1]
   2a49c:	ldr	r3, [r0, #4]
   2a49e:	orrs	r3, r2
   2a4a0:	beq.n	2a4ac <btrfs_print_leaf@@Base+0xbec>
   2a4a2:	ldr	r2, [pc, #624]	; (2a714 <btrfs_print_leaf@@Base+0xe54>)
   2a4a4:	mov	r0, r9
   2a4a6:	add	r2, pc
   2a4a8:	bl	28f4c <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2a4ac:	ldr	r1, [pc, #616]	; (2a718 <btrfs_print_leaf@@Base+0xe58>)
   2a4ae:	movs	r0, #1
   2a4b0:	add	r1, pc
   2a4b2:	blx	900c <__printf_chk@plt+0x4>
   2a4b6:	add	r0, sp, #520	; 0x208
   2a4b8:	bl	294c4 <btrfs_print_key@@Base>
   2a4bc:	ldr	r1, [pc, #604]	; (2a71c <btrfs_print_leaf@@Base+0xe5c>)
   2a4be:	ldrb.w	r2, [sp, #537]	; 0x219
   2a4c2:	add	r1, pc
   2a4c4:	movs	r0, #1
   2a4c6:	blx	900c <__printf_chk@plt+0x4>
   2a4ca:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a4ce:	ldr	r1, [pc, #592]	; (2a720 <btrfs_print_leaf@@Base+0xe60>)
   2a4d0:	add	r1, pc
   2a4d2:	b.n	2a346 <btrfs_print_leaf@@Base+0xa86>
   2a4d4:	ldr	r2, [pc, #588]	; (2a724 <btrfs_print_leaf@@Base+0xe64>)
   2a4d6:	add	r2, pc
   2a4d8:	b.w	29cd4 <btrfs_print_leaf@@Base+0x414>
   2a4dc:	movs	r2, #0
   2a4de:	ldr	r1, [sp, #80]	; 0x50
   2a4e0:	mov	r0, r9
   2a4e2:	bl	295e0 <print_extent_item@@Base>
   2a4e6:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a4ea:	movs	r2, #1
   2a4ec:	b.n	2a4de <btrfs_print_leaf@@Base+0xc1e>
   2a4ee:	ldr	r0, [pc, #568]	; (2a728 <btrfs_print_leaf@@Base+0xe68>)
   2a4f0:	add	r0, pc
   2a4f2:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a4f6:	ldr	r0, [pc, #564]	; (2a72c <btrfs_print_leaf@@Base+0xe6c>)
   2a4f8:	add	r0, pc
   2a4fa:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a4fe:	ldr	r1, [pc, #560]	; (2a730 <btrfs_print_leaf@@Base+0xe70>)
   2a500:	movs	r0, #1
   2a502:	ldr.w	r5, [sl, #17]
   2a506:	add	r1, pc
   2a508:	blx	900c <__printf_chk@plt+0x4>
   2a50c:	adds	r5, #101	; 0x65
   2a50e:	ldr	r1, [sp, #100]	; 0x64
   2a510:	add.w	r4, fp, r5
   2a514:	movs	r3, #0
   2a516:	str	r3, [sp, #0]
   2a518:	ldr.w	r2, [fp, r5]
   2a51c:	ldr	r3, [r4, #4]
   2a51e:	ldr	r0, [r1, #0]
   2a520:	bl	29254 <print_objectid@@Base>
   2a524:	ldr	r3, [r4, #24]
   2a526:	ldr	r1, [pc, #524]	; (2a734 <btrfs_print_leaf@@Base+0xe74>)
   2a528:	str	r3, [sp, #8]
   2a52a:	add	r1, pc
   2a52c:	ldr	r2, [r4, #16]
   2a52e:	ldr	r3, [r4, #20]
   2a530:	strd	r2, r3, [sp]
   2a534:	ldr	r2, [r4, #8]
   2a536:	ldr	r3, [r4, #12]
   2a538:	movs	r0, #1
   2a53a:	blx	900c <__printf_chk@plt+0x4>
   2a53e:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a542:	ldr.w	r2, [sl, #17]
   2a546:	ldr	r1, [pc, #496]	; (2a738 <btrfs_print_leaf@@Base+0xe78>)
   2a548:	add	r2, fp
   2a54a:	add	r1, pc
   2a54c:	ldr.w	r2, [r2, #101]	; 0x65
   2a550:	b.n	2a4c4 <btrfs_print_leaf@@Base+0xc04>
   2a552:	ldr	r0, [pc, #488]	; (2a73c <btrfs_print_leaf@@Base+0xe7c>)
   2a554:	add	r0, pc
   2a556:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a55a:	ldr	r0, [pc, #484]	; (2a740 <btrfs_print_leaf@@Base+0xe80>)
   2a55c:	add	r0, pc
   2a55e:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a562:	ldr	r3, [sp, #104]	; 0x68
   2a564:	ldr.w	r0, [r3, #308]	; 0x134
   2a568:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   2a56c:	mov	r1, r0
   2a56e:	ldr	r0, [sp, #84]	; 0x54
   2a570:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   2a574:	ldr	r3, [sp, #104]	; 0x68
   2a576:	ldr	r1, [pc, #460]	; (2a744 <btrfs_print_leaf@@Base+0xe84>)
   2a578:	ldr.w	r3, [r3, #388]	; 0x184
   2a57c:	add	r1, pc
   2a57e:	muls	r0, r3
   2a580:	ldrd	r2, r3, [sp, #88]	; 0x58
   2a584:	adds	r2, r2, r0
   2a586:	adc.w	r3, r3, #0
   2a58a:	strd	r2, r3, [sp]
   2a58e:	str	r0, [sp, #8]
   2a590:	ldrd	r2, r3, [sp, #88]	; 0x58
   2a594:	b.n	2a538 <btrfs_print_leaf@@Base+0xc78>
   2a596:	ldr	r1, [pc, #432]	; (2a748 <btrfs_print_leaf@@Base+0xe88>)
   2a598:	add	r1, pc
   2a59a:	blx	8d9c <strcpy@plt>
   2a59e:	cmp	r5, #1
   2a5a0:	ldr	r2, [r4, #0]
   2a5a2:	ldr	r3, [r4, #4]
   2a5a4:	beq.w	2a776 <btrfs_print_leaf@@Base+0xeb6>
   2a5a8:	cmp	r5, #2
   2a5aa:	beq.w	2a77e <btrfs_print_leaf@@Base+0xebe>
   2a5ae:	cmp	r5, #0
   2a5b0:	beq.w	2a786 <btrfs_print_leaf@@Base+0xec6>
   2a5b4:	ldr	r1, [pc, #404]	; (2a74c <btrfs_print_leaf@@Base+0xe8c>)
   2a5b6:	add	r1, pc
   2a5b8:	strd	r5, r1, [sp]
   2a5bc:	movs	r0, #1
   2a5be:	ldr	r1, [pc, #400]	; (2a750 <btrfs_print_leaf@@Base+0xe90>)
   2a5c0:	add	r1, pc
   2a5c2:	blx	900c <__printf_chk@plt+0x4>
   2a5c6:	cmp	r5, #0
   2a5c8:	bne.w	2a78e <btrfs_print_leaf@@Base+0xece>
   2a5cc:	ldr.w	r2, [sl, #21]
   2a5d0:	add	r3, sp, #940	; 0x3ac
   2a5d2:	str	r3, [sp, #12]
   2a5d4:	movs	r0, #1
   2a5d6:	ldrb	r3, [r4, #16]
   2a5d8:	subs	r2, #21
   2a5da:	str	r3, [sp, #8]
   2a5dc:	ldr	r1, [r4, #8]
   2a5de:	ldr	r3, [r4, #12]
   2a5e0:	strd	r1, r3, [sp]
   2a5e4:	ldr	r1, [pc, #364]	; (2a754 <btrfs_print_leaf@@Base+0xe94>)
   2a5e6:	add	r1, pc
   2a5e8:	blx	900c <__printf_chk@plt+0x4>
   2a5ec:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a5f0:	ldr	r1, [pc, #356]	; (2a758 <btrfs_print_leaf@@Base+0xe98>)
   2a5f2:	add	r1, pc
   2a5f4:	b.n	2a59a <btrfs_print_leaf@@Base+0xcda>
   2a5f6:	ldr	r1, [pc, #356]	; (2a75c <btrfs_print_leaf@@Base+0xe9c>)
   2a5f8:	add	r1, pc
   2a5fa:	b.n	2a59a <btrfs_print_leaf@@Base+0xcda>
   2a5fc:	ldr	r1, [pc, #352]	; (2a760 <btrfs_print_leaf@@Base+0xea0>)
   2a5fe:	add	r1, pc
   2a600:	b.n	2a59a <btrfs_print_leaf@@Base+0xcda>
   2a602:	nop
   2a604:	asrs	r2, r0, #17
   2a606:	movs	r4, r0
   2a608:	lsls	r0, r1, #10
   2a60a:	movs	r0, r0
   2a60c:	asrs	r6, r6, #16
   2a60e:	movs	r4, r0
   2a610:	add	r6, pc, #692	; (adr r6, 2a8c8 <btrfs_print_leaf@@Base+0x1008>)
   2a612:	movs	r1, r0
   2a614:	ldrb	r5, [r2, #0]
   2a616:	movs	r1, r0
   2a618:	add	r4, pc, #684	; (adr r4, 2a8c8 <btrfs_print_leaf@@Base+0x1008>)
   2a61a:	movs	r1, r0
   2a61c:	add	r6, pc, #324	; (adr r6, 2a764 <btrfs_print_leaf@@Base+0xea4>)
   2a61e:	movs	r1, r0
   2a620:	lsls	r4, r0, #11
   2a622:	movs	r0, r0
   2a624:	add	r6, pc, #316	; (adr r6, 2a764 <btrfs_print_leaf@@Base+0xea4>)
   2a626:	movs	r1, r0
   2a628:	add	r6, pc, #720	; (adr r6, 2a8fc <btrfs_print_leaf@@Base+0x103c>)
   2a62a:	movs	r1, r0
   2a62c:	add	r7, sp, #192	; 0xc0
   2a62e:	movs	r1, r0
   2a630:	add	r6, pc, #52	; (adr r6, 2a668 <btrfs_print_leaf@@Base+0xda8>)
   2a632:	movs	r1, r0
   2a634:	add	r6, pc, #244	; (adr r6, 2a72c <btrfs_print_leaf@@Base+0xe6c>)
   2a636:	movs	r1, r0
   2a638:	asrs	r4, r0, #11
   2a63a:	movs	r4, r0
   2a63c:	add	r5, pc, #960	; (adr r5, 2aa00 <btrfs_print_leaf@@Base+0x1140>)
   2a63e:	movs	r1, r0
   2a640:	add	r5, pc, #844	; (adr r5, 2a990 <btrfs_print_leaf@@Base+0x10d0>)
   2a642:	movs	r1, r0
   2a644:	add	r5, pc, #660	; (adr r5, 2a8dc <btrfs_print_leaf@@Base+0x101c>)
   2a646:	movs	r1, r0
   2a648:	add	r6, pc, #564	; (adr r6, 2a880 <btrfs_print_leaf@@Base+0xfc0>)
   2a64a:	movs	r1, r0
   2a64c:	add	r6, pc, #376	; (adr r6, 2a7c8 <btrfs_print_leaf@@Base+0xf08>)
   2a64e:	movs	r1, r0
   2a650:	add	r4, pc, #300	; (adr r4, 2a780 <btrfs_print_leaf@@Base+0xec0>)
   2a652:	movs	r1, r0
   2a654:	add	r5, pc, #836	; (adr r5, 2a99c <btrfs_print_leaf@@Base+0x10dc>)
   2a656:	movs	r1, r0
   2a658:	add	r5, pc, #824	; (adr r5, 2a994 <btrfs_print_leaf@@Base+0x10d4>)
   2a65a:	movs	r1, r0
   2a65c:	ldr	r0, [r4, #100]	; 0x64
   2a65e:	movs	r1, r0
   2a660:	add	r0, sp, #272	; 0x110
   2a662:	movs	r1, r0
   2a664:	negs	r1, r3
   2a666:	movs	r1, r0
   2a668:	strb	r3, [r4, #12]
   2a66a:	movs	r1, r0
   2a66c:	add	r2, pc, #744	; (adr r2, 2a958 <btrfs_print_leaf@@Base+0x1098>)
   2a66e:	movs	r1, r0
   2a670:	strb	r5, [r5, #11]
   2a672:	movs	r1, r0
   2a674:	add	r2, pc, #568	; (adr r2, 2a8b0 <btrfs_print_leaf@@Base+0xff0>)
   2a676:	movs	r1, r0
   2a678:	strb	r7, [r6, #10]
   2a67a:	movs	r1, r0
   2a67c:	add	r2, pc, #388	; (adr r2, 2a804 <btrfs_print_leaf@@Base+0xf44>)
   2a67e:	movs	r1, r0
   2a680:	strb	r1, [r0, #10]
   2a682:	movs	r1, r0
   2a684:	strb	r7, [r5, #12]
   2a686:	movs	r1, r0
   2a688:	strb	r3, [r1, #9]
   2a68a:	movs	r1, r0
   2a68c:	add	r2, pc, #140	; (adr r2, 2a71c <btrfs_print_leaf@@Base+0xe5c>)
   2a68e:	movs	r1, r0
   2a690:	strb	r5, [r2, #8]
   2a692:	movs	r1, r0
   2a694:	add	r1, pc, #808	; (adr r1, 2a9c0 <btrfs_print_leaf@@Base+0x1100>)
   2a696:	movs	r1, r0
   2a698:	strb	r7, [r3, #7]
   2a69a:	movs	r1, r0
   2a69c:	add	r1, pc, #632	; (adr r1, 2a918 <btrfs_print_leaf@@Base+0x1058>)
   2a69e:	movs	r1, r0
   2a6a0:	strb	r1, [r5, #6]
   2a6a2:	movs	r1, r0
   2a6a4:	add	r1, pc, #444	; (adr r1, 2a864 <btrfs_print_leaf@@Base+0xfa4>)
   2a6a6:	movs	r1, r0
   2a6a8:	strb	r3, [r6, #5]
   2a6aa:	movs	r1, r0
   2a6ac:	add	r1, pc, #256	; (adr r1, 2a7b0 <btrfs_print_leaf@@Base+0xef0>)
   2a6ae:	movs	r1, r0
   2a6b0:	strb	r5, [r7, #4]
   2a6b2:	movs	r1, r0
   2a6b4:	add	r1, pc, #72	; (adr r1, 2a700 <btrfs_print_leaf@@Base+0xe40>)
   2a6b6:	movs	r1, r0
   2a6b8:	strb	r7, [r0, #4]
   2a6ba:	movs	r1, r0
   2a6bc:	add	r0, pc, #724	; (adr r0, 2a994 <btrfs_print_leaf@@Base+0x10d4>)
   2a6be:	movs	r1, r0
   2a6c0:	add	r0, pc, #792	; (adr r0, 2a9dc <btrfs_print_leaf@@Base+0x111c>)
   2a6c2:	movs	r1, r0
   2a6c4:	add	r0, pc, #948	; (adr r0, 2aa7c <btrfs_print_leaf@@Base+0x11bc>)
   2a6c6:	movs	r1, r0
   2a6c8:	add	r0, pc, #920	; (adr r0, 2aa64 <btrfs_print_leaf@@Base+0x11a4>)
   2a6ca:	movs	r1, r0
   2a6cc:	add	r0, pc, #892	; (adr r0, 2aa4c <btrfs_print_leaf@@Base+0x118c>)
   2a6ce:	movs	r1, r0
   2a6d0:	add	r0, pc, #864	; (adr r0, 2aa34 <btrfs_print_leaf@@Base+0x1174>)
   2a6d2:	movs	r1, r0
   2a6d4:	ldr	r3, [r1, #64]	; 0x40
   2a6d6:	movs	r1, r0
   2a6d8:	add	r0, pc, #244	; (adr r0, 2a7d0 <btrfs_print_leaf@@Base+0xf10>)
   2a6da:	movs	r1, r0
   2a6dc:	lsls	r4, r0, #21
   2a6de:	movs	r4, r0
   2a6e0:	ldr	r7, [pc, #860]	; (2aa40 <btrfs_print_leaf@@Base+0x1180>)
   2a6e2:	movs	r1, r0
   2a6e4:	ldr	r7, [sp, #920]	; 0x398
   2a6e6:	movs	r1, r0
   2a6e8:	ldr	r7, [sp, #1000]	; 0x3e8
   2a6ea:	movs	r1, r0
   2a6ec:	ldr	r7, [sp, #888]	; 0x378
   2a6ee:	movs	r1, r0
   2a6f0:	ldr	r7, [sp, #764]	; 0x2fc
   2a6f2:	movs	r1, r0
   2a6f4:	ldr	r7, [sp, #504]	; 0x1f8
   2a6f6:	movs	r1, r0
   2a6f8:	ldr	r7, [sp, #460]	; 0x1cc
   2a6fa:	movs	r1, r0
   2a6fc:	ldr	r7, [sp, #524]	; 0x20c
   2a6fe:	movs	r1, r0
   2a700:	ldr	r7, [sp, #524]	; 0x20c
   2a702:	movs	r1, r0
   2a704:	ldr	r7, [sp, #136]	; 0x88
   2a706:	movs	r1, r0
   2a708:	ldr	r5, [sp, #552]	; 0x228
   2a70a:	movs	r1, r0
   2a70c:	ldr	r5, [sp, #512]	; 0x200
   2a70e:	movs	r1, r0
   2a710:	ldr	r7, [sp, #36]	; 0x24
   2a712:	movs	r1, r0
   2a714:	ldr	r6, [sp, #984]	; 0x3d8
   2a716:	movs	r1, r0
   2a718:	ldr	r6, [sp, #980]	; 0x3d4
   2a71a:	movs	r1, r0
   2a71c:	ldr	r6, [sp, #940]	; 0x3ac
   2a71e:	movs	r1, r0
   2a720:	ldr	r5, [r4, #4]
   2a722:	movs	r1, r0
   2a724:	ldr	r7, [sp, #32]
   2a726:	movs	r1, r0
   2a728:	ldr	r6, [sp, #808]	; 0x328
   2a72a:	movs	r1, r0
   2a72c:	ldr	r6, [sp, #860]	; 0x35c
   2a72e:	movs	r1, r0
   2a730:	ldr	r2, [sp, #200]	; 0xc8
   2a732:	movs	r1, r0
   2a734:	ldr	r2, [sp, #168]	; 0xa8
   2a736:	movs	r1, r0
   2a738:	ldr	r6, [sp, #624]	; 0x270
   2a73a:	movs	r1, r0
   2a73c:	ldr	r6, [sp, #712]	; 0x2c8
   2a73e:	movs	r1, r0
   2a740:	ldr	r6, [sp, #796]	; 0x31c
   2a742:	movs	r1, r0
   2a744:	ldr	r6, [sp, #716]	; 0x2cc
   2a746:	movs	r1, r0
   2a748:	str	r5, [r3, #120]	; 0x78
   2a74a:	movs	r1, r0
   2a74c:	ldr	r2, [sp, #52]	; 0x34
   2a74e:	movs	r1, r0
   2a750:	ldr	r6, [sp, #656]	; 0x290
   2a752:	movs	r1, r0
   2a754:	ldr	r6, [sp, #640]	; 0x280
   2a756:	movs	r1, r0
   2a758:	ldr	r6, [sp, #400]	; 0x190
   2a75a:	movs	r1, r0
   2a75c:	ldr	r6, [sp, #396]	; 0x18c
   2a75e:	movs	r1, r0
   2a760:	ldr	r6, [sp, #388]	; 0x184
   2a762:	movs	r1, r0
   2a764:	str	r3, [sp, #0]
   2a766:	movs	r2, #16
   2a768:	ldr.w	r3, [pc, #1172]	; 2ac00 <btrfs_print_leaf@@Base+0x1340>
   2a76c:	movs	r1, #1
   2a76e:	add	r3, pc
   2a770:	blx	8f70 <__sprintf_chk@plt>
   2a774:	b.n	2a59e <btrfs_print_leaf@@Base+0xcde>
   2a776:	ldr.w	r1, [pc, #1164]	; 2ac04 <btrfs_print_leaf@@Base+0x1344>
   2a77a:	add	r1, pc
   2a77c:	b.n	2a5b8 <btrfs_print_leaf@@Base+0xcf8>
   2a77e:	ldr.w	r1, [pc, #1160]	; 2ac08 <btrfs_print_leaf@@Base+0x1348>
   2a782:	add	r1, pc
   2a784:	b.n	2a5b8 <btrfs_print_leaf@@Base+0xcf8>
   2a786:	ldr.w	r1, [pc, #1156]	; 2ac0c <btrfs_print_leaf@@Base+0x134c>
   2a78a:	add	r1, pc
   2a78c:	b.n	2a5b8 <btrfs_print_leaf@@Base+0xcf8>
   2a78e:	mov	r1, r4
   2a790:	mov	r3, r4
   2a792:	ldr.w	r0, [r1, #29]!
   2a796:	cmp	r5, #2
   2a798:	ldr.w	r2, [r3, #21]!
   2a79c:	ldr	r1, [r1, #4]
   2a79e:	ldr	r3, [r3, #4]
   2a7a0:	strd	r0, r1, [sp]
   2a7a4:	bne.n	2a7d4 <btrfs_print_leaf@@Base+0xf14>
   2a7a6:	ldr.w	r1, [pc, #1128]	; 2ac10 <btrfs_print_leaf@@Base+0x1350>
   2a7aa:	movs	r0, #1
   2a7ac:	add	r1, pc
   2a7ae:	blx	900c <__printf_chk@plt+0x4>
   2a7b2:	mov	r3, r4
   2a7b4:	ldr.w	r0, [r4, #45]!
   2a7b8:	ldr.w	r2, [r3, #37]!
   2a7bc:	ldr	r1, [r4, #4]
   2a7be:	strd	r0, r1, [sp]
   2a7c2:	movs	r0, #1
   2a7c4:	ldr.w	r1, [pc, #1100]	; 2ac14 <btrfs_print_leaf@@Base+0x1354>
   2a7c8:	ldr	r3, [r3, #4]
   2a7ca:	add	r1, pc
   2a7cc:	blx	900c <__printf_chk@plt+0x4>
   2a7d0:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a7d4:	ldr.w	r1, [pc, #1088]	; 2ac18 <btrfs_print_leaf@@Base+0x1358>
   2a7d8:	movs	r0, #1
   2a7da:	add	r1, pc
   2a7dc:	blx	900c <__printf_chk@plt+0x4>
   2a7e0:	ldr	r0, [r4, #8]
   2a7e2:	ldr	r1, [r4, #12]
   2a7e4:	mov	r3, r4
   2a7e6:	ldr.w	r2, [r3, #37]!
   2a7ea:	strd	r0, r1, [sp, #8]
   2a7ee:	mov	r1, r4
   2a7f0:	ldr.w	r0, [r1, #45]!
   2a7f4:	ldr	r1, [r1, #4]
   2a7f6:	strd	r0, r1, [sp]
   2a7fa:	movs	r0, #1
   2a7fc:	ldr.w	r1, [pc, #1052]	; 2ac1c <btrfs_print_leaf@@Base+0x135c>
   2a800:	ldr	r3, [r3, #4]
   2a802:	add	r1, pc
   2a804:	blx	900c <__printf_chk@plt+0x4>
   2a808:	ldr.w	r1, [pc, #1044]	; 2ac20 <btrfs_print_leaf@@Base+0x1360>
   2a80c:	ldrb	r2, [r4, #16]
   2a80e:	add	r3, sp, #940	; 0x3ac
   2a810:	add	r1, pc
   2a812:	movs	r0, #1
   2a814:	blx	900c <__printf_chk@plt+0x4>
   2a818:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a81c:	add	r4, sp, #272	; 0x110
   2a81e:	add	r5, sp, #940	; 0x3ac
   2a820:	movs	r3, #24
   2a822:	mov	r2, r7
   2a824:	mov	r1, r4
   2a826:	mov	r0, r9
   2a828:	bl	1bbba <read_extent_buffer@@Base>
   2a82c:	mov.w	r2, #256	; 0x100
   2a830:	movs	r1, #0
   2a832:	mov	r0, r5
   2a834:	blx	8f98 <memset@plt+0x4>
   2a838:	ldrd	r0, r1, [r4, #16]
   2a83c:	mov	r2, r5
   2a83e:	bl	28c84 <btrfs_destroy_delayed_refs@@Base+0x100>
   2a842:	str	r5, [sp, #8]
   2a844:	ldrd	r2, r3, [r4, #8]
   2a848:	ldr	r1, [pc, #984]	; (2ac24 <btrfs_print_leaf@@Base+0x1364>)
   2a84a:	strd	r2, r3, [sp]
   2a84e:	add	r1, pc
   2a850:	ldrd	r2, r3, [sp, #272]	; 0x110
   2a854:	b.n	2a538 <btrfs_print_leaf@@Base+0xc78>
   2a856:	ldr.w	r2, [sl, #17]
   2a85a:	ldr	r1, [pc, #972]	; (2ac28 <btrfs_print_leaf@@Base+0x1368>)
   2a85c:	adds	r2, #101	; 0x65
   2a85e:	add.w	r3, fp, r2
   2a862:	add	r1, pc
   2a864:	ldr.w	r2, [fp, r2]
   2a868:	ldr	r3, [r3, #4]
   2a86a:	b.n	2a812 <btrfs_print_leaf@@Base+0xf52>
   2a86c:	ldr	r0, [pc, #956]	; (2ac2c <btrfs_print_leaf@@Base+0x136c>)
   2a86e:	add	r0, pc
   2a870:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a874:	ldr	r0, [pc, #952]	; (2ac30 <btrfs_print_leaf@@Base+0x1370>)
   2a876:	add	r0, pc
   2a878:	b.w	29c58 <btrfs_print_leaf@@Base+0x398>
   2a87c:	mov	r1, r7
   2a87e:	mov	r0, r9
   2a880:	bl	29054 <print_chunk_item@@Base>
   2a884:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a888:	ldr.w	r4, [sl, #17]
   2a88c:	add	r5, sp, #772	; 0x304
   2a88e:	add	r6, sp, #940	; 0x3ac
   2a890:	movs	r3, #16
   2a892:	add.w	r2, r4, #133	; 0x85
   2a896:	mov	r1, r5
   2a898:	mov	r0, r9
   2a89a:	adds	r4, #101	; 0x65
   2a89c:	bl	1bbba <read_extent_buffer@@Base>
   2a8a0:	mov	r1, r6
   2a8a2:	mov	r0, r5
   2a8a4:	blx	8b1c <uuid_unparse@plt>
   2a8a8:	add.w	r3, fp, r4
   2a8ac:	str	r6, [sp, #24]
   2a8ae:	movs	r0, #1
   2a8b0:	ldr	r1, [r3, #24]
   2a8b2:	ldr	r2, [r3, #28]
   2a8b4:	strd	r1, r2, [sp, #16]
   2a8b8:	ldr	r1, [r3, #16]
   2a8ba:	ldr	r2, [r3, #20]
   2a8bc:	strd	r1, r2, [sp, #8]
   2a8c0:	ldr	r1, [r3, #8]
   2a8c2:	ldr	r2, [r3, #12]
   2a8c4:	strd	r1, r2, [sp]
   2a8c8:	ldr	r1, [pc, #872]	; (2ac34 <btrfs_print_leaf@@Base+0x1374>)
   2a8ca:	ldr.w	r2, [fp, r4]
   2a8ce:	ldr	r3, [r3, #4]
   2a8d0:	add	r1, pc
   2a8d2:	blx	900c <__printf_chk@plt+0x4>
   2a8d6:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a8da:	add	r3, sp, #940	; 0x3ac
   2a8dc:	mov.w	r2, #256	; 0x100
   2a8e0:	movs	r1, #0
   2a8e2:	ldr.w	r5, [sl, #17]
   2a8e6:	mov	r0, r3
   2a8e8:	blx	8f98 <memset@plt+0x4>
   2a8ec:	adds	r5, #101	; 0x65
   2a8ee:	add	r5, fp
   2a8f0:	ldr	r4, [r5, #16]
   2a8f2:	and.w	r2, r4, #1
   2a8f6:	str	r2, [sp, #216]	; 0xd8
   2a8f8:	movs	r2, #0
   2a8fa:	str	r2, [sp, #220]	; 0xdc
   2a8fc:	ldrd	r1, r2, [sp, #216]	; 0xd8
   2a900:	orrs	r2, r1
   2a902:	mov	r3, r0
   2a904:	beq.n	2a976 <btrfs_print_leaf@@Base+0x10b6>
   2a906:	ldr	r1, [pc, #816]	; (2ac38 <btrfs_print_leaf@@Base+0x1378>)
   2a908:	add	r1, pc
   2a90a:	mov	r0, r3
   2a90c:	blx	8d9c <strcpy@plt>
   2a910:	and.w	r3, r4, #2
   2a914:	str	r3, [sp, #224]	; 0xe0
   2a916:	movs	r3, #0
   2a918:	str	r3, [sp, #228]	; 0xe4
   2a91a:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2a91e:	orrs	r3, r2
   2a920:	beq.n	2a930 <btrfs_print_leaf@@Base+0x1070>
   2a922:	ldr	r1, [pc, #792]	; (2ac3c <btrfs_print_leaf@@Base+0x137c>)
   2a924:	add	r0, sp, #940	; 0x3ac
   2a926:	mov.w	r2, #256	; 0x100
   2a92a:	add	r1, pc
   2a92c:	blx	8f64 <__strcat_chk@plt>
   2a930:	and.w	r3, r4, #4
   2a934:	str	r3, [sp, #232]	; 0xe8
   2a936:	movs	r3, #0
   2a938:	str	r3, [sp, #236]	; 0xec
   2a93a:	ldrd	r3, r4, [sp, #232]	; 0xe8
   2a93e:	orrs	r3, r4
   2a940:	beq.n	2a950 <btrfs_print_leaf@@Base+0x1090>
   2a942:	ldr	r1, [pc, #764]	; (2ac40 <btrfs_print_leaf@@Base+0x1380>)
   2a944:	add	r0, sp, #940	; 0x3ac
   2a946:	mov.w	r2, #256	; 0x100
   2a94a:	add	r1, pc
   2a94c:	blx	8f64 <__strcat_chk@plt>
   2a950:	ldr	r2, [r5, #24]
   2a952:	movs	r0, #1
   2a954:	ldr	r3, [r5, #28]
   2a956:	ldr	r1, [pc, #748]	; (2ac44 <btrfs_print_leaf@@Base+0x1384>)
   2a958:	strd	r2, r3, [sp, #16]
   2a95c:	add	r3, sp, #940	; 0x3ac
   2a95e:	str	r3, [sp, #8]
   2a960:	add	r1, pc
   2a962:	ldr	r2, [r5, #8]
   2a964:	ldr	r3, [r5, #12]
   2a966:	strd	r2, r3, [sp]
   2a96a:	ldr	r2, [r5, #0]
   2a96c:	ldr	r3, [r5, #4]
   2a96e:	blx	900c <__printf_chk@plt+0x4>
   2a972:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a976:	ldr	r1, [pc, #720]	; (2ac48 <btrfs_print_leaf@@Base+0x1388>)
   2a978:	add	r1, pc
   2a97a:	b.n	2a90a <btrfs_print_leaf@@Base+0x104a>
   2a97c:	ldr.w	r2, [sl, #17]
   2a980:	adds	r2, #101	; 0x65
   2a982:	add.w	r3, fp, r2
   2a986:	ldr	r0, [r3, #32]
   2a988:	ldr	r1, [r3, #36]	; 0x24
   2a98a:	strd	r0, r1, [sp, #24]
   2a98e:	ldr	r0, [r3, #24]
   2a990:	ldr	r1, [r3, #28]
   2a992:	strd	r0, r1, [sp, #16]
   2a996:	ldr	r0, [r3, #16]
   2a998:	ldr	r1, [r3, #20]
   2a99a:	strd	r0, r1, [sp, #8]
   2a99e:	ldr	r1, [r3, #12]
   2a9a0:	ldr	r0, [r3, #8]
   2a9a2:	strd	r0, r1, [sp]
   2a9a6:	ldr	r1, [pc, #676]	; (2ac4c <btrfs_print_leaf@@Base+0x138c>)
   2a9a8:	ldr.w	r2, [fp, r2]
   2a9ac:	ldr	r3, [r3, #4]
   2a9ae:	add	r1, pc
   2a9b0:	movs	r0, #1
   2a9b2:	blx	900c <__printf_chk@plt+0x4>
   2a9b6:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2a9ba:	ldr.w	r2, [sl, #17]
   2a9be:	adds	r2, #101	; 0x65
   2a9c0:	add.w	r3, fp, r2
   2a9c4:	ldr	r0, [r3, #32]
   2a9c6:	ldr	r1, [r3, #36]	; 0x24
   2a9c8:	strd	r0, r1, [sp, #24]
   2a9cc:	ldr	r0, [r3, #24]
   2a9ce:	ldr	r1, [r3, #28]
   2a9d0:	strd	r0, r1, [sp, #16]
   2a9d4:	ldr	r0, [r3, #16]
   2a9d6:	ldr	r1, [r3, #20]
   2a9d8:	strd	r0, r1, [sp, #8]
   2a9dc:	ldr	r1, [r3, #12]
   2a9de:	ldr	r0, [r3, #8]
   2a9e0:	strd	r0, r1, [sp]
   2a9e4:	ldr	r1, [pc, #616]	; (2ac50 <btrfs_print_leaf@@Base+0x1390>)
   2a9e6:	ldr.w	r2, [fp, r2]
   2a9ea:	ldr	r3, [r3, #4]
   2a9ec:	add	r1, pc
   2a9ee:	b.n	2a9b0 <btrfs_print_leaf@@Base+0x10f0>
   2a9f0:	ldr.w	r4, [sl, #21]
   2a9f4:	ldr.w	r5, [sl, #17]
   2a9f8:	lsls	r3, r4, #29
   2a9fa:	add.w	r5, r5, #101	; 0x65
   2a9fe:	bne.n	2aa2a <btrfs_print_leaf@@Base+0x116a>
   2aa00:	ldr	r7, [pc, #592]	; (2ac54 <btrfs_print_leaf@@Base+0x1394>)
   2aa02:	add	r6, sp, #272	; 0x110
   2aa04:	add	r7, pc
   2aa06:	cmp	r4, #0
   2aa08:	beq.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2aa0c:	mov	r2, r5
   2aa0e:	movs	r3, #8
   2aa10:	mov	r1, r6
   2aa12:	mov	r0, r9
   2aa14:	bl	1bbba <read_extent_buffer@@Base>
   2aa18:	ldrd	r2, r3, [sp, #272]	; 0x110
   2aa1c:	mov	r1, r7
   2aa1e:	movs	r0, #1
   2aa20:	blx	900c <__printf_chk@plt+0x4>
   2aa24:	subs	r4, #8
   2aa26:	adds	r5, #8
   2aa28:	b.n	2aa06 <btrfs_print_leaf@@Base+0x1146>
   2aa2a:	ldr	r1, [pc, #556]	; (2ac58 <btrfs_print_leaf@@Base+0x1398>)
   2aa2c:	mov	r2, r4
   2aa2e:	add	r1, pc
   2aa30:	b.n	2a4c4 <btrfs_print_leaf@@Base+0xc04>
   2aa32:	ldr.w	r3, [sl, #17]
   2aa36:	ldr	r1, [pc, #548]	; (2ac5c <btrfs_print_leaf@@Base+0x139c>)
   2aa38:	adds	r3, #101	; 0x65
   2aa3a:	ldr	r2, [sp, #84]	; 0x54
   2aa3c:	add	r3, fp
   2aa3e:	add	r1, pc
   2aa40:	b.n	2a812 <btrfs_print_leaf@@Base+0xf52>
   2aa42:	ldr	r1, [pc, #540]	; (2ac60 <btrfs_print_leaf@@Base+0x13a0>)
   2aa44:	movs	r0, #1
   2aa46:	add	r1, pc
   2aa48:	blx	900c <__printf_chk@plt+0x4>
   2aa4c:	ldr	r1, [sp, #100]	; 0x64
   2aa4e:	movs	r3, #249	; 0xf9
   2aa50:	mov	r2, r4
   2aa52:	str	r3, [sp, #0]
   2aa54:	mov	r3, r5
   2aa56:	ldr	r0, [r1, #0]
   2aa58:	bl	29254 <print_objectid@@Base>
   2aa5c:	ldr	r1, [pc, #516]	; (2ac64 <btrfs_print_leaf@@Base+0x13a4>)
   2aa5e:	ldrd	r2, r3, [sp, #88]	; 0x58
   2aa62:	movs	r0, #1
   2aa64:	add	r1, pc
   2aa66:	blx	900c <__printf_chk@plt+0x4>
   2aa6a:	orrs.w	r3, r4, r5
   2aa6e:	bne.n	2ab22 <btrfs_print_leaf@@Base+0x1262>
   2aa70:	ldr	r0, [pc, #500]	; (2ac68 <btrfs_print_leaf@@Base+0x13a8>)
   2aa72:	add	r0, pc
   2aa74:	blx	8e24 <puts@plt+0x4>
   2aa78:	movs	r2, #0
   2aa7a:	mov	r1, r7
   2aa7c:	mov	r0, r9
   2aa7e:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2aa82:	movs	r2, #1
   2aa84:	mov	r4, r0
   2aa86:	str	r1, [sp, #244]	; 0xf4
   2aa88:	mov	r0, r9
   2aa8a:	mov	r1, r7
   2aa8c:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2aa90:	movs	r2, #2
   2aa92:	mov	r6, r0
   2aa94:	mov	r5, r1
   2aa96:	mov	r0, r9
   2aa98:	mov	r1, r7
   2aa9a:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2aa9e:	movs	r2, #3
   2aaa0:	mov	r8, r0
   2aaa2:	mov	fp, r1
   2aaa4:	mov	r0, r9
   2aaa6:	mov	r1, r7
   2aaa8:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2aaac:	movs	r2, #4
   2aaae:	str	r0, [sp, #96]	; 0x60
   2aab0:	mov	r0, r9
   2aab2:	str	r1, [sp, #88]	; 0x58
   2aab4:	mov	r1, r7
   2aab6:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2aaba:	ldr	r3, [sp, #96]	; 0x60
   2aabc:	mov	r2, r4
   2aabe:	strd	r8, fp, [sp, #8]
   2aac2:	strd	r6, r5, [sp]
   2aac6:	str	r3, [sp, #16]
   2aac8:	ldr	r3, [sp, #88]	; 0x58
   2aaca:	str	r3, [sp, #20]
   2aacc:	ldr	r3, [sp, #244]	; 0xf4
   2aace:	strd	r0, r1, [sp, #24]
   2aad2:	movs	r0, #1
   2aad4:	ldr	r1, [pc, #404]	; (2ac6c <btrfs_print_leaf@@Base+0x13ac>)
   2aad6:	add	r1, pc
   2aad8:	blx	900c <__printf_chk@plt+0x4>
   2aadc:	ldr	r3, [sp, #84]	; 0x54
   2aade:	cmp	r3, #40	; 0x28
   2aae0:	bls.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2aae4:	ldr	r1, [pc, #392]	; (2ac70 <btrfs_print_leaf@@Base+0x13b0>)
   2aae6:	sub.w	r2, r3, #40	; 0x28
   2aaea:	movs	r0, #1
   2aaec:	movs	r4, #5
   2aaee:	add	r1, pc
   2aaf0:	blx	900c <__printf_chk@plt+0x4>
   2aaf4:	ldr	r2, [sp, #84]	; 0x54
   2aaf6:	lsls	r3, r4, #3
   2aaf8:	cmp.w	r2, r4, lsl #3
   2aafc:	bls.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2ab00:	mov	r2, r4
   2ab02:	mov	r1, r7
   2ab04:	mov	r0, r9
   2ab06:	str	r3, [sp, #96]	; 0x60
   2ab08:	bl	28bec <btrfs_destroy_delayed_refs@@Base+0x68>
   2ab0c:	mov	r2, r4
   2ab0e:	ldr	r3, [sp, #96]	; 0x60
   2ab10:	adds	r4, #1
   2ab12:	strd	r0, r1, [sp]
   2ab16:	movs	r0, #1
   2ab18:	vmov	r1, s21
   2ab1c:	blx	900c <__printf_chk@plt+0x4>
   2ab20:	b.n	2aaf4 <btrfs_print_leaf@@Base+0x1234>
   2ab22:	ldr	r1, [pc, #336]	; (2ac74 <btrfs_print_leaf@@Base+0x13b4>)
   2ab24:	mov	r2, r4
   2ab26:	mov	r3, r5
   2ab28:	add	r1, pc
   2ab2a:	b.w	2a2ea <btrfs_print_leaf@@Base+0xa2a>
   2ab2e:	ldr	r1, [pc, #328]	; (2ac78 <btrfs_print_leaf@@Base+0x13b8>)
   2ab30:	movs	r0, #1
   2ab32:	add	r1, pc
   2ab34:	blx	900c <__printf_chk@plt+0x4>
   2ab38:	ldr	r1, [sp, #100]	; 0x64
   2ab3a:	movs	r3, #248	; 0xf8
   2ab3c:	mov	r2, r4
   2ab3e:	str	r3, [sp, #0]
   2ab40:	mov	r3, r5
   2ab42:	ldr	r0, [r1, #0]
   2ab44:	bl	29254 <print_objectid@@Base>
   2ab48:	ldr	r1, [pc, #304]	; (2ac7c <btrfs_print_leaf@@Base+0x13bc>)
   2ab4a:	ldrd	r2, r3, [sp, #88]	; 0x58
   2ab4e:	movs	r0, #1
   2ab50:	add	r1, pc
   2ab52:	blx	900c <__printf_chk@plt+0x4>
   2ab56:	mov.w	r3, #4294967295	; 0xffffffff
   2ab5a:	cmp	r5, r3
   2ab5c:	mvn.w	r2, #3
   2ab60:	it	eq
   2ab62:	cmpeq	r4, r2
   2ab64:	bne.n	2abae <btrfs_print_leaf@@Base+0x12ee>
   2ab66:	add.w	r4, fp, r7
   2ab6a:	ldr	r1, [pc, #276]	; (2ac80 <btrfs_print_leaf@@Base+0x13c0>)
   2ab6c:	ldr.w	r2, [fp, r7]
   2ab70:	movs	r0, #1
   2ab72:	ldr	r3, [r4, #4]
   2ab74:	add	r1, pc
   2ab76:	blx	900c <__printf_chk@plt+0x4>
   2ab7a:	ldr	r0, [pc, #264]	; (2ac84 <btrfs_print_leaf@@Base+0x13c4>)
   2ab7c:	add	r0, pc
   2ab7e:	blx	8e24 <puts@plt+0x4>
   2ab82:	add.w	r0, r4, #8
   2ab86:	bl	28dbc <btrfs_destroy_delayed_refs@@Base+0x238>
   2ab8a:	ldr	r0, [pc, #252]	; (2ac88 <btrfs_print_leaf@@Base+0x13c8>)
   2ab8c:	add	r0, pc
   2ab8e:	blx	8e24 <puts@plt+0x4>
   2ab92:	add.w	r0, r4, #144	; 0x90
   2ab96:	bl	28dbc <btrfs_destroy_delayed_refs@@Base+0x238>
   2ab9a:	ldr	r0, [pc, #240]	; (2ac8c <btrfs_print_leaf@@Base+0x13cc>)
   2ab9c:	add	r0, pc
   2ab9e:	blx	8e24 <puts@plt+0x4>
   2aba2:	add.w	r0, r4, #280	; 0x118
   2aba6:	bl	28dbc <btrfs_destroy_delayed_refs@@Base+0x238>
   2abaa:	b.w	29b28 <btrfs_print_leaf@@Base+0x268>
   2abae:	ldr	r1, [pc, #224]	; (2ac90 <btrfs_print_leaf@@Base+0x13d0>)
   2abb0:	mov	r2, r4
   2abb2:	mov	r3, r5
   2abb4:	add	r1, pc
   2abb6:	b.w	2a2ea <btrfs_print_leaf@@Base+0xa2a>
   2abba:	add	r2, sp, #940	; 0x3ac
   2abbc:	addw	r0, sp, #579	; 0x243
   2abc0:	str	r2, [sp, #84]	; 0x54
   2abc2:	mov	r1, r2
   2abc4:	blx	8b1c <uuid_unparse@plt>
   2abc8:	ldr	r1, [pc, #200]	; (2ac94 <btrfs_print_leaf@@Base+0x13d4>)
   2abca:	ldr	r2, [sp, #84]	; 0x54
   2abcc:	movs	r0, #1
   2abce:	add	r1, pc
   2abd0:	blx	900c <__printf_chk@plt+0x4>
   2abd4:	b.n	2a3fc <btrfs_print_leaf@@Base+0xb3c>
   2abd6:	add	r2, sp, #940	; 0x3ac
   2abd8:	addw	r0, sp, #563	; 0x233
   2abdc:	str	r2, [sp, #84]	; 0x54
   2abde:	mov	r1, r2
   2abe0:	blx	8b1c <uuid_unparse@plt>
   2abe4:	ldr	r1, [pc, #176]	; (2ac98 <btrfs_print_leaf@@Base+0x13d8>)
   2abe6:	ldr	r2, [sp, #84]	; 0x54
   2abe8:	movs	r0, #1
   2abea:	add	r1, pc
   2abec:	blx	900c <__printf_chk@plt+0x4>
   2abf0:	b.w	2a3e6 <btrfs_print_leaf@@Base+0xb26>
   2abf4:	addw	sp, sp, #1204	; 0x4b4
   2abf8:	vpop	{d8-d10}
   2abfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ac00:	str	r5, [sp, #1000]	; 0x3e8
   2ac02:	movs	r1, r0
   2ac04:	ldr	r0, [sp, #260]	; 0x104
   2ac06:	movs	r1, r0
   2ac08:	ldr	r0, [sp, #192]	; 0xc0
   2ac0a:	movs	r1, r0
   2ac0c:	mov	ip, r0
   2ac0e:	movs	r1, r0
   2ac10:	ldr	r5, [sp, #116]	; 0x74
   2ac12:	movs	r1, r0
   2ac14:	ldr	r5, [sp, #156]	; 0x9c
   2ac16:	movs	r1, r0
   2ac18:	ldr	r5, [sp, #240]	; 0xf0
   2ac1a:	movs	r1, r0
   2ac1c:	ldr	r5, [sp, #232]	; 0xe8
   2ac1e:	movs	r1, r0
   2ac20:	ldr	r5, [sp, #352]	; 0x160
   2ac22:	movs	r1, r0
   2ac24:	ldr	r5, [sp, #232]	; 0xe8
   2ac26:	movs	r1, r0
   2ac28:	ldr	r5, [sp, #368]	; 0x170
   2ac2a:	movs	r1, r0
   2ac2c:	ldr	r5, [sp, #496]	; 0x1f0
   2ac2e:	movs	r1, r0
   2ac30:	ldr	r5, [sp, #544]	; 0x220
   2ac32:	movs	r1, r0
   2ac34:	ldr	r6, [sp, #36]	; 0x24
   2ac36:	movs	r1, r0
   2ac38:	add	r3, pc, #912	; (adr r3, 2afcc <btrfs_print_tree@@Base+0x330>)
   2ac3a:	movs	r1, r0
   2ac3c:	ldr	r6, [sp, #104]	; 0x68
   2ac3e:	movs	r1, r0
   2ac40:	ldr	r6, [sp, #16]
   2ac42:	movs	r1, r0
   2ac44:	ldr	r5, [sp, #1008]	; 0x3f0
   2ac46:	movs	r1, r0
   2ac48:	ldr	r5, [sp, #800]	; 0x320
   2ac4a:	movs	r1, r0
   2ac4c:	ldr	r5, [sp, #900]	; 0x384
   2ac4e:	movs	r1, r0
   2ac50:	ldr	r6, [sp, #56]	; 0x38
   2ac52:	movs	r1, r0
   2ac54:	ldr	r6, [sp, #344]	; 0x158
   2ac56:	movs	r1, r0
   2ac58:	strb	r6, [r7, #0]
   2ac5a:	movs	r1, r0
   2ac5c:	ldr	r6, [sp, #184]	; 0xb8
   2ac5e:	movs	r1, r0
   2ac60:	ldr	r6, [sp, #224]	; 0xe0
   2ac62:	movs	r1, r0
   2ac64:	str	r2, [sp, #888]	; 0x378
   2ac66:	movs	r1, r0
   2ac68:	ldr	r6, [sp, #160]	; 0xa0
   2ac6a:	movs	r1, r0
   2ac6c:	ldr	r5, [sp, #844]	; 0x34c
   2ac6e:	movs	r1, r0
   2ac70:	ldr	r6, [sp, #72]	; 0x48
   2ac72:	movs	r1, r0
   2ac74:	ldr	r6, [sp, #124]	; 0x7c
   2ac76:	movs	r1, r0
   2ac78:	ldr	r6, [sp, #248]	; 0xf8
   2ac7a:	movs	r1, r0
   2ac7c:	str	r1, [sp, #968]	; 0x3c8
   2ac7e:	movs	r1, r0
   2ac80:	ldr	r6, [sp, #92]	; 0x5c
   2ac82:	movs	r1, r0
   2ac84:	ldr	r6, [sp, #176]	; 0xb0
   2ac86:	movs	r1, r0
   2ac88:	ldr	r6, [sp, #140]	; 0x8c
   2ac8a:	movs	r1, r0
   2ac8c:	ldr	r6, [sp, #120]	; 0x78
   2ac8e:	movs	r1, r0
   2ac90:	ldr	r6, [sp, #60]	; 0x3c
   2ac92:	movs	r1, r0
   2ac94:	ldr	r6, [sp, #116]	; 0x74
   2ac96:	movs	r1, r0
   2ac98:	ldr	r6, [sp, #84]	; 0x54
   2ac9a:	movs	r1, r0

0002ac9c <btrfs_print_tree@@Base>:
   2ac9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aca0:	cmp	r2, #1
   2aca2:	vpush	{d8}
   2aca6:	mov	r4, r0
   2aca8:	ldr	r3, [pc, #688]	; (2af5c <btrfs_print_tree@@Base+0x2c0>)
   2acaa:	it	cs
   2acac:	movcs	r2, #1
   2acae:	mov	r9, r2
   2acb0:	add	r3, pc
   2acb2:	sub	sp, #148	; 0x94
   2acb4:	str	r1, [sp, #44]	; 0x2c
   2acb6:	ldr	r1, [pc, #680]	; (2af60 <btrfs_print_tree@@Base+0x2c4>)
   2acb8:	str	r3, [sp, #32]
   2acba:	ldr	r3, [pc, #680]	; (2af64 <btrfs_print_tree@@Base+0x2c8>)
   2acbc:	add	r1, pc
   2acbe:	ldr	r3, [r1, r3]
   2acc0:	ldr	r3, [r3, #0]
   2acc2:	str	r3, [sp, #140]	; 0x8c
   2acc4:	mov.w	r3, #0
   2acc8:	ldrb.w	r3, [r0, #196]	; 0xc4
   2accc:	cbnz	r3, 2ace8 <btrfs_print_tree@@Base+0x4c>
   2acce:	bl	298c0 <btrfs_print_leaf@@Base>
   2acd2:	ldr	r2, [pc, #660]	; (2af68 <btrfs_print_tree@@Base+0x2cc>)
   2acd4:	ldr	r3, [pc, #652]	; (2af64 <btrfs_print_tree@@Base+0x2c8>)
   2acd6:	add	r2, pc
   2acd8:	ldr	r3, [r2, r3]
   2acda:	ldr	r2, [r3, #0]
   2acdc:	ldr	r3, [sp, #140]	; 0x8c
   2acde:	eors	r2, r3
   2ace0:	beq.w	2af52 <btrfs_print_tree@@Base+0x2b6>
   2ace4:	blx	8c90 <__stack_chk_fail@plt>
   2ace8:	ldr	r3, [r0, #92]	; 0x5c
   2acea:	str	r3, [sp, #36]	; 0x24
   2acec:	ldr.w	r6, [r0, #192]	; 0xc0
   2acf0:	bl	29018 <btrfs_destroy_delayed_refs@@Base+0x494>
   2acf4:	cmp	r0, r6
   2acf6:	mov	r2, r0
   2acf8:	bcs.n	2ad04 <btrfs_print_tree@@Base+0x68>
   2acfa:	ldr	r0, [pc, #624]	; (2af6c <btrfs_print_tree@@Base+0x2d0>)
   2acfc:	mov	r1, r6
   2acfe:	add	r0, pc
   2ad00:	bl	1bca0 <__btrfs_warning@@Base>
   2ad04:	mov	r0, r4
   2ad06:	movs	r5, #0
   2ad08:	bl	29018 <btrfs_destroy_delayed_refs@@Base+0x494>
   2ad0c:	ldr.w	r2, [r4, #176]	; 0xb0
   2ad10:	ldr.w	r3, [r4, #180]	; 0xb4
   2ad14:	add.w	r7, r4, #197	; 0xc5
   2ad18:	ldr	r1, [pc, #596]	; (2af70 <btrfs_print_tree@@Base+0x2d4>)
   2ad1a:	add.w	fp, sp, #52	; 0x34
   2ad1e:	mov	r8, r7
   2ad20:	strd	r2, r3, [sp, #16]
   2ad24:	add	r1, pc
   2ad26:	subs	r0, r0, r6
   2ad28:	strd	r6, r0, [sp, #4]
   2ad2c:	ldrb.w	r3, [r4, #196]	; 0xc4
   2ad30:	movs	r0, #1
   2ad32:	str	r3, [sp, #0]
   2ad34:	ldrd	r2, r3, [r4, #40]	; 0x28
   2ad38:	blx	900c <__printf_chk@plt+0x4>
   2ad3c:	ldr	r2, [sp, #32]
   2ad3e:	ldr	r3, [pc, #564]	; (2af74 <btrfs_print_tree@@Base+0x2d8>)
   2ad40:	ldr	r3, [r2, r3]
   2ad42:	str	r5, [sp, #0]
   2ad44:	str	r3, [sp, #28]
   2ad46:	ldr	r1, [sp, #28]
   2ad48:	ldr.w	r2, [r4, #184]	; 0xb8
   2ad4c:	ldr.w	r3, [r4, #188]	; 0xbc
   2ad50:	ldr	r0, [r1, #0]
   2ad52:	bl	29254 <print_objectid@@Base>
   2ad56:	movs	r0, #10
   2ad58:	blx	8fa8 <putchar@plt+0x4>
   2ad5c:	mov	r0, r4
   2ad5e:	bl	28ec8 <btrfs_destroy_delayed_refs@@Base+0x344>
   2ad62:	ldr	r3, [sp, #28]
   2ad64:	ldr	r0, [r3, #0]
   2ad66:	blx	8b58 <fflush@plt>
   2ad6a:	mov	r0, r4
   2ad6c:	bl	29018 <btrfs_destroy_delayed_refs@@Base+0x494>
   2ad70:	ldr	r3, [pc, #516]	; (2af78 <btrfs_print_tree@@Base+0x2dc>)
   2ad72:	add	r3, pc
   2ad74:	vmov	s17, r3
   2ad78:	str	r0, [sp, #40]	; 0x28
   2ad7a:	cmp	r5, r6
   2ad7c:	beq.n	2ad84 <btrfs_print_tree@@Base+0xe8>
   2ad7e:	ldr	r3, [sp, #40]	; 0x28
   2ad80:	cmp	r5, r3
   2ad82:	bne.n	2ae1c <btrfs_print_tree@@Base+0x180>
   2ad84:	ldr	r3, [sp, #44]	; 0x2c
   2ad86:	cmp	r3, #0
   2ad88:	beq.n	2acd2 <btrfs_print_tree@@Base+0x36>
   2ad8a:	ldr	r3, [sp, #36]	; 0x24
   2ad8c:	cmp	r3, #0
   2ad8e:	beq.n	2acd2 <btrfs_print_tree@@Base+0x36>
   2ad90:	ldr.w	r8, [r4, #92]	; 0x5c
   2ad94:	ldrb.w	r6, [r4, #196]	; 0xc4
   2ad98:	cmp.w	r9, #0
   2ad9c:	bne.w	2aea6 <btrfs_print_tree@@Base+0x20a>
   2ada0:	ldr.w	sl, [pc, #472]	; 2af7c <btrfs_print_tree@@Base+0x2e0>
   2ada4:	ldr.w	fp, [pc, #472]	; 2af80 <btrfs_print_tree@@Base+0x2e4>
   2ada8:	ldr.w	r3, [r4, #192]	; 0xc0
   2adac:	add	sl, pc
   2adae:	add	fp, pc
   2adb0:	str	r3, [sp, #28]
   2adb2:	ldr	r3, [sp, #28]
   2adb4:	cmp	r3, r9
   2adb6:	ble.n	2acd2 <btrfs_print_tree@@Base+0x36>
   2adb8:	mov	r0, r7
   2adba:	mov	r1, r7
   2adbc:	ldr.w	r5, [r0, #25]!
   2adc0:	ldr.w	r2, [r1, #17]!
   2adc4:	ldr	r0, [r0, #4]
   2adc6:	ldr	r3, [r1, #4]
   2adc8:	str	r1, [sp, #36]	; 0x24
   2adca:	strd	r5, r0, [sp]
   2adce:	mov	r0, r8
   2add0:	bl	21f24 <read_tree_block@@Base>
   2add4:	ldr	r1, [sp, #36]	; 0x24
   2add6:	mov	r5, r0
   2add8:	cmp	r0, #0
   2adda:	beq.n	2ae70 <btrfs_print_tree@@Base+0x1d4>
   2addc:	cmn.w	r0, #4096	; 0x1000
   2ade0:	bhi.n	2ae70 <btrfs_print_tree@@Base+0x1d4>
   2ade2:	ldr	r3, [r0, #84]	; 0x54
   2ade4:	lsls	r3, r3, #29
   2ade6:	bpl.n	2ae70 <btrfs_print_tree@@Base+0x1d4>
   2ade8:	ldrb.w	r3, [r0, #196]	; 0xc4
   2adec:	subs	r2, r6, #1
   2adee:	cmp	r3, r2
   2adf0:	beq.n	2ae9c <btrfs_print_tree@@Base+0x200>
   2adf2:	strd	r3, r2, [sp, #16]
   2adf6:	ldr.w	r2, [r0, #144]	; 0x90
   2adfa:	ldr.w	r3, [r0, #148]	; 0x94
   2adfe:	mov	r0, fp
   2ae00:	strd	r9, r6, [sp]
   2ae04:	strd	r2, r3, [sp, #8]
   2ae08:	ldr.w	r2, [r4, #144]	; 0x90
   2ae0c:	ldr.w	r3, [r4, #148]	; 0x94
   2ae10:	bl	1bca0 <__btrfs_warning@@Base>
   2ae14:	mov	r0, r5
   2ae16:	bl	1b4c0 <free_extent_buffer@@Base>
   2ae1a:	b.n	2ae94 <btrfs_print_tree@@Base+0x1f8>
   2ae1c:	mov	r3, r8
   2ae1e:	add.w	r2, r5, r5, lsl #5
   2ae22:	ldr.w	sl, [r3, #17]!
   2ae26:	adds	r2, #101	; 0x65
   2ae28:	mov	r1, fp
   2ae2a:	mov	r0, r4
   2ae2c:	adds	r5, #1
   2ae2e:	ldr	r3, [r3, #4]
   2ae30:	vmov	s16, r3
   2ae34:	movs	r3, #17
   2ae36:	bl	1bbba <read_extent_buffer@@Base>
   2ae3a:	movs	r0, #9
   2ae3c:	blx	8fa8 <putchar@plt+0x4>
   2ae40:	mov	r0, fp
   2ae42:	bl	294c4 <btrfs_print_key@@Base>
   2ae46:	mov	r3, r8
   2ae48:	ldr.w	r2, [r3, #25]!
   2ae4c:	movs	r0, #1
   2ae4e:	vmov	r1, s17
   2ae52:	add.w	r8, r8, #33	; 0x21
   2ae56:	ldr	r3, [r3, #4]
   2ae58:	strd	r2, r3, [sp]
   2ae5c:	mov	r2, sl
   2ae5e:	vmov	r3, s16
   2ae62:	blx	900c <__printf_chk@plt+0x4>
   2ae66:	ldr	r3, [sp, #28]
   2ae68:	ldr	r0, [r3, #0]
   2ae6a:	blx	8b58 <fflush@plt>
   2ae6e:	b.n	2ad7a <btrfs_print_tree@@Base+0xde>
   2ae70:	ldr	r2, [sp, #32]
   2ae72:	ldr	r3, [pc, #272]	; (2af84 <btrfs_print_tree@@Base+0x2e8>)
   2ae74:	ldr.w	r0, [r4, #184]	; 0xb8
   2ae78:	ldr	r3, [r2, r3]
   2ae7a:	ldr.w	r2, [r4, #188]	; 0xbc
   2ae7e:	strd	r0, r2, [sp, #8]
   2ae82:	ldr	r0, [r1, #0]
   2ae84:	ldr	r2, [r1, #4]
   2ae86:	movs	r1, #1
   2ae88:	strd	r0, r2, [sp]
   2ae8c:	mov	r2, sl
   2ae8e:	ldr	r0, [r3, #0]
   2ae90:	blx	9040 <__fprintf_chk@plt+0x4>
   2ae94:	add.w	r9, r9, #1
   2ae98:	adds	r7, #33	; 0x21
   2ae9a:	b.n	2adb2 <btrfs_print_tree@@Base+0x116>
   2ae9c:	movs	r2, #0
   2ae9e:	movs	r1, #1
   2aea0:	bl	2ac9c <btrfs_print_tree@@Base>
   2aea4:	b.n	2ae14 <btrfs_print_tree@@Base+0x178>
   2aea6:	cmp	r6, #0
   2aea8:	beq.w	2acd2 <btrfs_print_tree@@Base+0x36>
   2aeac:	add	r5, sp, #72	; 0x48
   2aeae:	subs	r7, r6, #1
   2aeb0:	add.w	sl, r5, r6, lsl #2
   2aeb4:	mov.w	fp, #0
   2aeb8:	mov	r0, r5
   2aeba:	bl	1c6e8 <btrfs_init_path@@Base>
   2aebe:	ldr	r3, [r4, #80]	; 0x50
   2aec0:	mov	r9, sl
   2aec2:	adds	r3, #1
   2aec4:	str	r3, [r4, #80]	; 0x50
   2aec6:	add	r3, sp, #144	; 0x90
   2aec8:	add.w	r3, r3, r6, lsl #2
   2aecc:	str.w	r4, [r3, #-72]
   2aed0:	mov	r3, r5
   2aed2:	movs	r4, #0
   2aed4:	strb.w	r7, [sp, #137]	; 0x89
   2aed8:	str.w	fp, [r3, #32]
   2aedc:	ldr.w	r0, [r3], #4
   2aee0:	cbz	r0, 2aeea <btrfs_print_tree@@Base+0x24e>
   2aee2:	str	r3, [sp, #28]
   2aee4:	bl	1b4c0 <free_extent_buffer@@Base>
   2aee8:	ldr	r3, [sp, #28]
   2aeea:	adds	r4, #1
   2aeec:	cmp	r4, r6
   2aeee:	blt.n	2aed8 <btrfs_print_tree@@Base+0x23c>
   2aef0:	mov	r4, sl
   2aef2:	mov	r3, r6
   2aef4:	ldrb.w	r2, [sp, #137]	; 0x89
   2aef8:	cmp	r3, r2
   2aefa:	bgt.n	2af22 <btrfs_print_tree@@Base+0x286>
   2aefc:	ldr.w	r0, [r9, #-4]
   2af00:	movs	r2, #1
   2af02:	movs	r1, #0
   2af04:	bl	2ac9c <btrfs_print_tree@@Base>
   2af08:	mov	r1, r5
   2af0a:	mov	r0, r8
   2af0c:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2af10:	cmp	r0, #0
   2af12:	blt.n	2af38 <btrfs_print_tree@@Base+0x29c>
   2af14:	beq.n	2aefc <btrfs_print_tree@@Base+0x260>
   2af16:	subs	r7, #1
   2af18:	sub.w	r9, r9, #4
   2af1c:	adds	r3, r7, #1
   2af1e:	bne.n	2aed0 <btrfs_print_tree@@Base+0x234>
   2af20:	b.n	2af38 <btrfs_print_tree@@Base+0x29c>
   2af22:	ldr	r1, [r4, #0]
   2af24:	movs	r2, #0
   2af26:	str.w	fp, [r4, #32]
   2af2a:	mov	r0, r8
   2af2c:	str	r3, [sp, #28]
   2af2e:	bl	1d4ae <read_node_slot@@Base>
   2af32:	subs	r4, #4
   2af34:	ldr	r3, [sp, #28]
   2af36:	cbnz	r0, 2af40 <btrfs_print_tree@@Base+0x2a4>
   2af38:	mov	r0, r5
   2af3a:	bl	1c6f8 <btrfs_release_path@@Base>
   2af3e:	b.n	2acd2 <btrfs_print_tree@@Base+0x36>
   2af40:	cmn.w	r0, #4096	; 0x1000
   2af44:	bhi.n	2af38 <btrfs_print_tree@@Base+0x29c>
   2af46:	ldr	r2, [r0, #84]	; 0x54
   2af48:	lsls	r2, r2, #29
   2af4a:	bpl.n	2af38 <btrfs_print_tree@@Base+0x29c>
   2af4c:	subs	r3, #1
   2af4e:	str	r0, [r4, #0]
   2af50:	b.n	2aef4 <btrfs_print_tree@@Base+0x258>
   2af52:	add	sp, #148	; 0x94
   2af54:	vpop	{d8}
   2af58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2af5c:	lsls	r0, r5, #1
   2af5e:	movs	r4, r0
   2af60:	lsls	r4, r3, #1
   2af62:	movs	r4, r0
   2af64:	lsls	r0, r1, #10
   2af66:	movs	r0, r0
   2af68:	lsls	r2, r0, #1
   2af6a:	movs	r4, r0
   2af6c:	ldr	r5, [sp, #76]	; 0x4c
   2af6e:	movs	r1, r0
   2af70:	ldr	r5, [sp, #156]	; 0x9c
   2af72:	movs	r1, r0
   2af74:	lsls	r4, r0, #11
   2af76:	movs	r0, r0
   2af78:	ldr	r5, [sp, #80]	; 0x50
   2af7a:	movs	r1, r0
   2af7c:	ldr	r4, [sp, #960]	; 0x3c0
   2af7e:	movs	r1, r0
   2af80:	ldr	r5, [sp, #64]	; 0x40
   2af82:	movs	r1, r0
   2af84:	lsls	r4, r3, #10
   2af86:	movs	r0, r0
   2af88:	ldr	r3, [r0, #0]
   2af8a:	cbz	r3, 2af92 <btrfs_print_tree@@Base+0x2f6>
   2af8c:	movs	r3, #0
   2af8e:	strd	r3, r3, [r0]
   2af92:	bx	lr
   2af94:	push	{r4, r5, r6, lr}
   2af96:	lsrs	r4, r2, #5
   2af98:	and.w	r6, r2, #31
   2af9c:	bic.w	r2, r2, #31
   2afa0:	ldr.w	r5, [r0, r4, lsl #2]
   2afa4:	mov.w	r4, #4294967295	; 0xffffffff
   2afa8:	lsls	r4, r6
   2afaa:	eors	r5, r3
   2afac:	ands	r4, r5
   2afae:	cbz	r4, 2afe4 <btrfs_print_tree@@Base+0x348>
   2afb0:	uxth	r3, r4
   2afb2:	cbnz	r3, 2aff4 <btrfs_print_tree@@Base+0x358>
   2afb4:	lsrs	r4, r4, #16
   2afb6:	movs	r3, #16
   2afb8:	tst.w	r4, #255	; 0xff
   2afbc:	itt	eq
   2afbe:	lsreq	r4, r4, #8
   2afc0:	addeq	r3, #8
   2afc2:	lsls	r6, r4, #28
   2afc4:	itt	eq
   2afc6:	lsreq	r4, r4, #4
   2afc8:	addeq	r3, #4
   2afca:	lsls	r5, r4, #30
   2afcc:	itt	eq
   2afce:	lsreq	r4, r4, #2
   2afd0:	addeq	r3, #2
   2afd2:	lsls	r0, r4, #31
   2afd4:	it	pl
   2afd6:	addpl	r3, #1
   2afd8:	add	r3, r2
   2afda:	cmp	r1, r3
   2afdc:	it	cs
   2afde:	movcs	r1, r3
   2afe0:	mov	r0, r1
   2afe2:	pop	{r4, r5, r6, pc}
   2afe4:	adds	r2, #32
   2afe6:	cmp	r2, r1
   2afe8:	bcs.n	2afe0 <btrfs_print_tree@@Base+0x344>
   2afea:	lsrs	r4, r2, #5
   2afec:	ldr.w	r4, [r0, r4, lsl #2]
   2aff0:	eors	r4, r3
   2aff2:	b.n	2afae <btrfs_print_tree@@Base+0x312>
   2aff4:	movs	r3, #0
   2aff6:	b.n	2afb8 <btrfs_print_tree@@Base+0x31c>
   2aff8:	ldr.w	ip, [pc, #104]	; 2b064 <btrfs_print_tree@@Base+0x3c8>
   2affc:	push	{r4, r5, lr}
   2affe:	add	ip, pc
   2b000:	ldr	r5, [pc, #100]	; (2b068 <btrfs_print_tree@@Base+0x3cc>)
   2b002:	sub	sp, #92	; 0x5c
   2b004:	ldr	r4, [pc, #100]	; (2b06c <btrfs_print_tree@@Base+0x3d0>)
   2b006:	ldr.w	r5, [ip, r5]
   2b00a:	add	r4, pc
   2b00c:	ldr	r5, [r5, #0]
   2b00e:	str	r5, [sp, #84]	; 0x54
   2b010:	mov.w	r5, #0
   2b014:	cbz	r3, 2b04a <btrfs_print_tree@@Base+0x3ae>
   2b016:	ldr	r5, [pc, #88]	; (2b070 <btrfs_print_tree@@Base+0x3d4>)
   2b018:	ldr	r4, [r4, r5]
   2b01a:	strd	r2, r1, [sp]
   2b01e:	movs	r1, #1
   2b020:	strd	r0, r3, [sp, #8]
   2b024:	ldr	r2, [pc, #76]	; (2b074 <btrfs_print_tree@@Base+0x3d8>)
   2b026:	ldr	r3, [pc, #80]	; (2b078 <btrfs_print_tree@@Base+0x3dc>)
   2b028:	ldr	r0, [r4, #0]
   2b02a:	add	r4, sp, #20
   2b02c:	add	r3, pc
   2b02e:	add	r2, pc
   2b030:	blx	9040 <__fprintf_chk@plt+0x4>
   2b034:	movs	r1, #16
   2b036:	mov	r0, r4
   2b038:	blx	8e98 <backtrace@plt>
   2b03c:	movs	r2, #2
   2b03e:	mov	r1, r0
   2b040:	mov	r0, r4
   2b042:	blx	9214 <backtrace_symbols_fd@plt>
   2b046:	blx	91c0 <abort@plt>
   2b04a:	ldr	r2, [pc, #48]	; (2b07c <btrfs_print_tree@@Base+0x3e0>)
   2b04c:	ldr	r3, [pc, #24]	; (2b068 <btrfs_print_tree@@Base+0x3cc>)
   2b04e:	add	r2, pc
   2b050:	ldr	r3, [r2, r3]
   2b052:	ldr	r2, [r3, #0]
   2b054:	ldr	r3, [sp, #84]	; 0x54
   2b056:	eors	r2, r3
   2b058:	beq.n	2b05e <btrfs_print_tree@@Base+0x3c2>
   2b05a:	blx	8c90 <__stack_chk_fail@plt>
   2b05e:	add	sp, #92	; 0x5c
   2b060:	pop	{r4, r5, pc}
   2b062:	nop
   2b064:	ldc2	0, cr0, [sl, #-12]
   2b068:	lsls	r0, r1, #10
   2b06a:	movs	r0, r0
   2b06c:	stc2	0, cr0, [lr, #-12]
   2b070:	lsls	r4, r3, #10
   2b072:	movs	r0, r0
   2b074:	adds	r3, #48	; 0x30
   2b076:	movs	r1, r0
   2b078:	ldr	r5, [sp, #344]	; 0x158
   2b07a:	movs	r1, r0
   2b07c:	stc2l	0, cr0, [sl], {3}
   2b080:	push	{r3, r4, r5, lr}
   2b082:	mov	r4, r0
   2b084:	ldrd	r5, r3, [r0, #32]
   2b088:	movs	r2, #83	; 0x53
   2b08a:	ldr	r1, [pc, #56]	; (2b0c4 <btrfs_print_tree@@Base+0x428>)
   2b08c:	cmp	r5, r3
   2b08e:	ldr	r0, [pc, #56]	; (2b0c8 <btrfs_print_tree@@Base+0x42c>)
   2b090:	add	r1, pc
   2b092:	ite	lt
   2b094:	movlt	r3, #0
   2b096:	movge	r3, #1
   2b098:	add	r0, pc
   2b09a:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2b09e:	adds	r3, r5, #1
   2b0a0:	str	r3, [r4, #32]
   2b0a2:	ldr	r3, [r4, #12]
   2b0a4:	ldr	r2, [r4, #8]
   2b0a6:	ldr.w	r1, [r3, #464]	; 0x1d0
   2b0aa:	ldr.w	r1, [r1, #388]	; 0x184
   2b0ae:	mla	r5, r1, r5, r2
   2b0b2:	strd	r5, r5, [r4]
   2b0b6:	ldr.w	r3, [r3, #464]	; 0x1d0
   2b0ba:	ldr.w	r3, [r3, #388]	; 0x184
   2b0be:	str	r3, [r4, #16]
   2b0c0:	pop	{r3, r4, r5, pc}
   2b0c2:	nop
   2b0c4:	add	r2, pc, #184	; (adr r2, 2b180 <btrfs_print_tree@@Base+0x4e4>)
   2b0c6:	movs	r1, r0
   2b0c8:	ldr	r4, [sp, #1012]	; 0x3f4
   2b0ca:	movs	r1, r0
   2b0cc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2b0ce:	mov	r4, r0
   2b0d0:	ldr	r2, [pc, #144]	; (2b164 <btrfs_print_tree@@Base+0x4c8>)
   2b0d2:	ldr	r3, [pc, #148]	; (2b168 <btrfs_print_tree@@Base+0x4cc>)
   2b0d4:	add	r2, pc
   2b0d6:	ldr	r6, [pc, #148]	; (2b16c <btrfs_print_tree@@Base+0x4d0>)
   2b0d8:	ldr	r3, [r2, r3]
   2b0da:	add	r6, pc
   2b0dc:	ldr	r3, [r3, #0]
   2b0de:	str	r3, [sp, #4]
   2b0e0:	mov.w	r3, #0
   2b0e4:	mov.w	r3, #4294967295	; 0xffffffff
   2b0e8:	str	r3, [sp, #0]
   2b0ea:	ldrb.w	r3, [r0, #40]	; 0x28
   2b0ee:	ands.w	r5, r3, #1
   2b0f2:	bne.n	2b0fc <btrfs_print_tree@@Base+0x460>
   2b0f4:	bl	2b080 <btrfs_print_tree@@Base+0x3e4>
   2b0f8:	movs	r0, #0
   2b0fa:	b.n	2b146 <btrfs_print_tree@@Base+0x4aa>
   2b0fc:	cbnz	r1, 2b15a <btrfs_print_tree@@Base+0x4be>
   2b0fe:	ldr	r5, [r0, #36]	; 0x24
   2b100:	lsls	r5, r5, #2
   2b102:	ldr	r3, [r4, #8]
   2b104:	mov	r0, r4
   2b106:	ldr.w	r7, [r3, r1, lsl #2]
   2b10a:	bl	2b080 <btrfs_print_tree@@Base+0x3e4>
   2b10e:	ldr	r3, [r4, #12]
   2b110:	mov.w	r0, #4294967295	; 0xffffffff
   2b114:	ldr	r1, [r4, #4]
   2b116:	ldr.w	r3, [r3, #464]	; 0x1d0
   2b11a:	add	r1, r5
   2b11c:	ldr.w	r2, [r3, #388]	; 0x184
   2b120:	subs	r2, r2, r5
   2b122:	bl	1bc9a <crc32c_le@@Base>
   2b126:	mvns	r0, r0
   2b128:	cmp	r0, r7
   2b12a:	str	r0, [sp, #0]
   2b12c:	beq.n	2b0f8 <btrfs_print_tree@@Base+0x45c>
   2b12e:	ldr	r3, [pc, #64]	; (2b170 <btrfs_print_tree@@Base+0x4d4>)
   2b130:	ldr	r0, [pc, #64]	; (2b174 <btrfs_print_tree@@Base+0x4d8>)
   2b132:	ldr	r3, [r6, r3]
   2b134:	add	r0, pc
   2b136:	ldr	r1, [r3, #0]
   2b138:	blx	91a8 <fputs@plt+0x4>
   2b13c:	mov	r0, r4
   2b13e:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2b142:	mvn.w	r0, #4
   2b146:	ldr	r2, [pc, #48]	; (2b178 <btrfs_print_tree@@Base+0x4dc>)
   2b148:	ldr	r3, [pc, #28]	; (2b168 <btrfs_print_tree@@Base+0x4cc>)
   2b14a:	add	r2, pc
   2b14c:	ldr	r3, [r2, r3]
   2b14e:	ldr	r2, [r3, #0]
   2b150:	ldr	r3, [sp, #4]
   2b152:	eors	r2, r3
   2b154:	beq.n	2b15e <btrfs_print_tree@@Base+0x4c2>
   2b156:	blx	8c90 <__stack_chk_fail@plt>
   2b15a:	movs	r5, #0
   2b15c:	b.n	2b102 <btrfs_print_tree@@Base+0x466>
   2b15e:	add	sp, #12
   2b160:	pop	{r4, r5, r6, r7, pc}
   2b162:	nop
   2b164:	mcrr2	0, 0, r0, r4, cr3
   2b168:	lsls	r0, r1, #10
   2b16a:	movs	r0, r0
   2b16c:	ldc2	0, cr0, [lr], #-12
   2b170:	lsls	r4, r3, #10
   2b172:	movs	r0, r0
   2b174:	ldr	r4, [sp, #528]	; 0x210
   2b176:	movs	r1, r0
   2b178:	smlal	r0, r0, lr, r3
   2b17c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2b180:	mov	sl, r0
   2b182:	ldr	r4, [r0, #0]
   2b184:	mov	r8, r2
   2b186:	mov	r9, r3
   2b188:	movs	r5, #0
   2b18a:	cbz	r4, 2b1c8 <btrfs_print_tree@@Base+0x52c>
   2b18c:	ldrd	r2, r3, [r4, #16]
   2b190:	cmp	r9, r3
   2b192:	it	eq
   2b194:	cmpeq	r8, r2
   2b196:	bcs.n	2b1a0 <btrfs_print_tree@@Base+0x504>
   2b198:	ldr	r3, [r4, #8]
   2b19a:	mov	r5, r4
   2b19c:	mov	r4, r3
   2b19e:	b.n	2b18a <btrfs_print_tree@@Base+0x4ee>
   2b1a0:	cmp	r3, r9
   2b1a2:	it	eq
   2b1a4:	cmpeq	r2, r8
   2b1a6:	bcs.n	2b25a <btrfs_print_tree@@Base+0x5be>
   2b1a8:	ldr	r3, [r4, #4]
   2b1aa:	b.n	2b19a <btrfs_print_tree@@Base+0x4fe>
   2b1ac:	ldrd	r2, r1, [r5, #24]
   2b1b0:	ldrd	r3, r0, [r5, #16]
   2b1b4:	adds	r3, r3, r2
   2b1b6:	str	r3, [sp, #8]
   2b1b8:	adc.w	r3, r0, r1
   2b1bc:	str	r3, [sp, #12]
   2b1be:	ldrd	r2, r3, [sp, #8]
   2b1c2:	b.n	2b24e <btrfs_print_tree@@Base+0x5b2>
   2b1c4:	mov	r4, r0
   2b1c6:	b.n	2b282 <btrfs_print_tree@@Base+0x5e6>
   2b1c8:	cmp	r5, #0
   2b1ca:	beq.n	2b282 <btrfs_print_tree@@Base+0x5e6>
   2b1cc:	ldrd	r2, r3, [r5, #16]
   2b1d0:	ldr.w	r6, [sl, #44]	; 0x2c
   2b1d4:	cmp	r9, r3
   2b1d6:	it	eq
   2b1d8:	cmpeq	r8, r2
   2b1da:	bcs.n	2b20c <btrfs_print_tree@@Base+0x570>
   2b1dc:	mov	r0, r5
   2b1de:	bl	18732 <rb_prev@@Base>
   2b1e2:	mov	r5, r0
   2b1e4:	cmp	r0, #0
   2b1e6:	beq.n	2b282 <btrfs_print_tree@@Base+0x5e6>
   2b1e8:	ldrd	r2, r3, [r0, #16]
   2b1ec:	ldr	r1, [pc, #156]	; (2b28c <btrfs_print_tree@@Base+0x5f0>)
   2b1ee:	cmp	r9, r3
   2b1f0:	ldr	r0, [pc, #156]	; (2b290 <btrfs_print_tree@@Base+0x5f4>)
   2b1f2:	it	eq
   2b1f4:	cmpeq	r8, r2
   2b1f6:	add	r1, pc
   2b1f8:	add.w	r1, r1, #16
   2b1fc:	add	r0, pc
   2b1fe:	ite	cc
   2b200:	movcc	r3, #1
   2b202:	movcs	r3, #0
   2b204:	mov.w	r2, #628	; 0x274
   2b208:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2b20c:	ldr	r3, [r5, #32]
   2b20e:	cmp	r3, #0
   2b210:	beq.n	2b1ac <btrfs_print_tree@@Base+0x510>
   2b212:	mov	r0, r5
   2b214:	bl	18732 <rb_prev@@Base>
   2b218:	cbz	r0, 2b23c <btrfs_print_tree@@Base+0x5a0>
   2b21a:	ldr	r3, [r0, #32]
   2b21c:	cbnz	r3, 2b23c <btrfs_print_tree@@Base+0x5a0>
   2b21e:	ldrd	r2, r1, [r0, #24]
   2b222:	ldrd	r3, r7, [r0, #16]
   2b226:	adds	r3, r3, r2
   2b228:	str	r3, [sp, #0]
   2b22a:	adc.w	r3, r7, r1
   2b22e:	str	r3, [sp, #4]
   2b230:	ldrd	r2, r3, [sp]
   2b234:	cmp	r9, r3
   2b236:	it	eq
   2b238:	cmpeq	r8, r2
   2b23a:	bcc.n	2b1c4 <btrfs_print_tree@@Base+0x528>
   2b23c:	ldr.w	r3, [sl, #28]
   2b240:	muls	r6, r3
   2b242:	ldrd	r2, r3, [r5, #16]
   2b246:	lsls	r6, r6, #3
   2b248:	adds	r2, r2, r6
   2b24a:	adc.w	r3, r3, #0
   2b24e:	cmp	r9, r3
   2b250:	it	eq
   2b252:	cmpeq	r8, r2
   2b254:	it	cc
   2b256:	movcc	r4, r5
   2b258:	b.n	2b282 <btrfs_print_tree@@Base+0x5e6>
   2b25a:	ldr	r3, [r4, #32]
   2b25c:	cbz	r3, 2b282 <btrfs_print_tree@@Base+0x5e6>
   2b25e:	mov	r0, r4
   2b260:	bl	18732 <rb_prev@@Base>
   2b264:	cbz	r0, 2b282 <btrfs_print_tree@@Base+0x5e6>
   2b266:	ldr	r3, [r0, #32]
   2b268:	cbnz	r3, 2b282 <btrfs_print_tree@@Base+0x5e6>
   2b26a:	ldrd	r3, r5, [r0, #16]
   2b26e:	ldrd	r2, r1, [r0, #24]
   2b272:	adds	r6, r3, r2
   2b274:	adc.w	r7, r5, r1
   2b278:	cmp	r9, r7
   2b27a:	it	eq
   2b27c:	cmpeq	r8, r6
   2b27e:	it	cc
   2b280:	movcc	r4, r0
   2b282:	mov	r0, r4
   2b284:	add	sp, #16
   2b286:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2b28a:	nop
   2b28c:	add	r0, pc, #800	; (adr r0, 2b5b0 <btrfs_add_free_space@@Base+0xf6>)
   2b28e:	movs	r1, r0
   2b290:	ldr	r3, [sp, #920]	; 0x398
   2b292:	movs	r1, r0
   2b294:	push	{r3, r4, r5, r6, r7, lr}
   2b296:	mov	r6, r0
   2b298:	ldr	r7, [r1, #32]
   2b29a:	mov	r5, r1
   2b29c:	cbnz	r7, 2b2f4 <btrfs_print_tree@@Base+0x658>
   2b29e:	ldrd	r2, r3, [r1, #24]
   2b2a2:	orrs	r3, r2
   2b2a4:	ite	eq
   2b2a6:	moveq	r3, #1
   2b2a8:	movne	r3, #0
   2b2aa:	ldr	r1, [pc, #128]	; (2b32c <btrfs_print_tree@@Base+0x690>)
   2b2ac:	movw	r2, #685	; 0x2ad
   2b2b0:	ldr	r0, [pc, #124]	; (2b330 <btrfs_print_tree@@Base+0x694>)
   2b2b2:	add	r1, pc
   2b2b4:	adds	r1, #35	; 0x23
   2b2b6:	add	r0, pc
   2b2b8:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2b2bc:	ldrd	r0, r1, [r5, #16]
   2b2c0:	mov	r3, r6
   2b2c2:	movs	r2, #0
   2b2c4:	ldr	r4, [r3, #0]
   2b2c6:	cbnz	r4, 2b2f8 <btrfs_print_tree@@Base+0x65c>
   2b2c8:	strd	r2, r4, [r5]
   2b2cc:	mov	r1, r6
   2b2ce:	mov	r0, r5
   2b2d0:	str	r4, [r5, #8]
   2b2d2:	str	r5, [r3, #0]
   2b2d4:	bl	183ca <rb_insert_color@@Base>
   2b2d8:	ldrd	r1, r0, [r5, #24]
   2b2dc:	ldrd	r3, r2, [r6, #8]
   2b2e0:	adds	r3, r3, r1
   2b2e2:	adc.w	r2, r0, r2
   2b2e6:	strd	r3, r2, [r6, #8]
   2b2ea:	ldr	r3, [r6, #20]
   2b2ec:	mov	r0, r4
   2b2ee:	adds	r3, #1
   2b2f0:	str	r3, [r6, #20]
   2b2f2:	pop	{r3, r4, r5, r6, r7, pc}
   2b2f4:	movs	r3, #0
   2b2f6:	b.n	2b2aa <btrfs_print_tree@@Base+0x60e>
   2b2f8:	ldrd	r2, r3, [r4, #16]
   2b2fc:	cmp	r1, r3
   2b2fe:	it	eq
   2b300:	cmpeq	r0, r2
   2b302:	bcs.n	2b30a <btrfs_print_tree@@Base+0x66e>
   2b304:	add.w	r3, r4, #8
   2b308:	b.n	2b314 <btrfs_print_tree@@Base+0x678>
   2b30a:	cmp	r3, r1
   2b30c:	it	eq
   2b30e:	cmpeq	r2, r0
   2b310:	bcs.n	2b318 <btrfs_print_tree@@Base+0x67c>
   2b312:	adds	r3, r4, #4
   2b314:	mov	r2, r4
   2b316:	b.n	2b2c4 <btrfs_print_tree@@Base+0x628>
   2b318:	ldr	r3, [r4, #32]
   2b31a:	cbz	r7, 2b326 <btrfs_print_tree@@Base+0x68a>
   2b31c:	cmp	r3, #0
   2b31e:	beq.n	2b312 <btrfs_print_tree@@Base+0x676>
   2b320:	mvn.w	r0, #16
   2b324:	b.n	2b2f2 <btrfs_print_tree@@Base+0x656>
   2b326:	cmp	r3, #0
   2b328:	bne.n	2b304 <btrfs_print_tree@@Base+0x668>
   2b32a:	b.n	2b320 <btrfs_print_tree@@Base+0x684>
   2b32c:	add	r0, pc, #48	; (adr r0, 2b360 <btrfs_print_tree@@Base+0x6c4>)
   2b32e:	movs	r1, r0
   2b330:	ldr	r3, [sp, #268]	; 0x10c
   2b332:	movs	r1, r0
   2b334:	push	{r4, lr}
   2b336:	mov	r4, r1
   2b338:	ldr	r1, [pc, #84]	; (2b390 <btrfs_print_tree@@Base+0x6f4>)
   2b33a:	sub	sp, #24
   2b33c:	ldr	r3, [pc, #84]	; (2b394 <btrfs_print_tree@@Base+0x6f8>)
   2b33e:	add	r1, pc
   2b340:	ldr	r3, [r1, r3]
   2b342:	mov	r1, sp
   2b344:	ldr	r3, [r3, #0]
   2b346:	str	r3, [sp, #20]
   2b348:	mov.w	r3, #0
   2b34c:	movs	r3, #25
   2b34e:	muls	r2, r3
   2b350:	movs	r3, #17
   2b352:	adds	r2, #101	; 0x65
   2b354:	bl	1bbba <read_extent_buffer@@Base>
   2b358:	ldr.w	r3, [sp, #13]
   2b35c:	ldr.w	r2, [sp, #9]
   2b360:	str.w	r3, [r4, #13]
   2b364:	ldrb.w	r3, [sp, #8]
   2b368:	str.w	r2, [r4, #9]
   2b36c:	ldr	r2, [pc, #40]	; (2b398 <btrfs_print_tree@@Base+0x6fc>)
   2b36e:	strb	r3, [r4, #8]
   2b370:	ldr	r3, [sp, #0]
   2b372:	add	r2, pc
   2b374:	str	r3, [r4, #0]
   2b376:	ldr	r3, [sp, #4]
   2b378:	str	r3, [r4, #4]
   2b37a:	ldr	r3, [pc, #24]	; (2b394 <btrfs_print_tree@@Base+0x6f8>)
   2b37c:	ldr	r3, [r2, r3]
   2b37e:	ldr	r2, [r3, #0]
   2b380:	ldr	r3, [sp, #20]
   2b382:	eors	r2, r3
   2b384:	beq.n	2b38a <btrfs_print_tree@@Base+0x6ee>
   2b386:	blx	8c90 <__stack_chk_fail@plt>
   2b38a:	add	sp, #24
   2b38c:	pop	{r4, pc}
   2b38e:	nop
   2b390:	ldr??.w	r0, [sl, #3]
   2b394:	lsls	r0, r1, #10
   2b396:	movs	r0, r0
   2b398:	vld1.8	{d0[0]}, [r6], r3

0002b39c <unlink_free_space@@Base>:
   2b39c:	push	{r3, r4, r5, lr}
   2b39e:	mov	r5, r1
   2b3a0:	mov	r4, r0
   2b3a2:	mov	r1, r0
   2b3a4:	mov	r0, r5
   2b3a6:	bl	18470 <rb_erase@@Base>
   2b3aa:	ldr	r3, [r4, #20]
   2b3ac:	subs	r3, #1
   2b3ae:	str	r3, [r4, #20]
   2b3b0:	ldrd	r3, r2, [r4, #8]
   2b3b4:	ldrd	r1, r0, [r5, #24]
   2b3b8:	subs	r3, r3, r1
   2b3ba:	sbc.w	r2, r2, r0
   2b3be:	strd	r3, r2, [r4, #8]
   2b3c2:	pop	{r3, r4, r5, pc}

0002b3c4 <btrfs_find_free_space@@Base>:
   2b3c4:	b.n	2b17c <btrfs_print_tree@@Base+0x4e0>

0002b3c6 <btrfs_dump_free_space@@Base>:
   2b3c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b3ca:	mov	r5, r0
   2b3cc:	sub	sp, #36	; 0x24
   2b3ce:	ldr	r0, [r0, #64]	; 0x40
   2b3d0:	mov	r9, r3
   2b3d2:	mov	r8, r2
   2b3d4:	bl	186e6 <rb_first@@Base>
   2b3d8:	ldr	r7, [pc, #112]	; (2b44c <btrfs_dump_free_space@@Base+0x86>)
   2b3da:	ldr	r3, [pc, #116]	; (2b450 <btrfs_dump_free_space@@Base+0x8a>)
   2b3dc:	movs	r6, #0
   2b3de:	add	r7, pc
   2b3e0:	ldr	r7, [r7, r3]
   2b3e2:	ldr	r3, [pc, #112]	; (2b454 <btrfs_dump_free_space@@Base+0x8e>)
   2b3e4:	add	r3, pc
   2b3e6:	str	r3, [sp, #24]
   2b3e8:	ldr	r3, [pc, #108]	; (2b458 <btrfs_dump_free_space@@Base+0x92>)
   2b3ea:	add	r3, pc
   2b3ec:	str	r3, [sp, #28]
   2b3ee:	mov	r4, r0
   2b3f0:	cbnz	r4, 2b406 <btrfs_dump_free_space@@Base+0x40>
   2b3f2:	ldr	r2, [pc, #104]	; (2b45c <btrfs_dump_free_space@@Base+0x96>)
   2b3f4:	mov	r3, r6
   2b3f6:	ldr	r0, [r7, #0]
   2b3f8:	movs	r1, #1
   2b3fa:	add	r2, pc
   2b3fc:	add	sp, #36	; 0x24
   2b3fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b402:	b.w	903c <__fprintf_chk@plt>
   2b406:	ldrd	r2, r3, [r4, #24]
   2b40a:	cmp	r3, r9
   2b40c:	it	eq
   2b40e:	cmpeq	r2, r8
   2b410:	bcc.n	2b418 <btrfs_dump_free_space@@Base+0x52>
   2b412:	ldr	r1, [r5, #108]	; 0x6c
   2b414:	cbnz	r1, 2b418 <btrfs_dump_free_space@@Base+0x52>
   2b416:	adds	r6, #1
   2b418:	ldr	r1, [r4, #32]
   2b41a:	ldrd	sl, fp, [r4, #16]
   2b41e:	cmp	r1, #0
   2b420:	ldr	r1, [sp, #24]
   2b422:	ldr	r0, [r7, #0]
   2b424:	strd	r2, r3, [sp, #8]
   2b428:	mov	ip, r1
   2b42a:	ldr	r1, [sp, #28]
   2b42c:	ldr	r2, [pc, #48]	; (2b460 <btrfs_dump_free_space@@Base+0x9a>)
   2b42e:	it	ne
   2b430:	movne	r1, ip
   2b432:	strd	sl, fp, [sp]
   2b436:	add	r2, pc
   2b438:	str	r1, [sp, #16]
   2b43a:	movs	r1, #1
   2b43c:	blx	9040 <__fprintf_chk@plt+0x4>
   2b440:	mov	r0, r4
   2b442:	bl	18706 <rb_next@@Base>
   2b446:	mov	r4, r0
   2b448:	b.n	2b3f0 <btrfs_dump_free_space@@Base+0x2a>
   2b44a:	nop
   2b44c:	ldrsh.w	r0, [sl, r3]
   2b450:	lsls	r4, r3, #10
   2b452:	movs	r0, r0
   2b454:	cmp	r7, #8
   2b456:	movs	r1, r0
   2b458:	cmp	r7, #21
   2b45a:	movs	r1, r0
   2b45c:	ldr	r2, [sp, #284]	; 0x11c
   2b45e:	movs	r1, r0
   2b460:	ldr	r1, [sp, #900]	; 0x384
   2b462:	movs	r1, r0

0002b464 <btrfs_init_free_space_ctl@@Base>:
   2b464:	push	{r3, r4, r5, lr}
   2b466:	mov	r4, r0
   2b468:	mov	r5, r1
   2b46a:	movs	r0, #1
   2b46c:	movs	r1, #48	; 0x30
   2b46e:	blx	8ab8 <calloc@plt+0x4>
   2b472:	cbz	r0, 2b488 <btrfs_init_free_space_ctl@@Base+0x24>
   2b474:	ldrd	r2, r3, [r4, #40]	; 0x28
   2b478:	str	r5, [r0, #44]	; 0x2c
   2b47a:	str	r5, [r0, #28]
   2b47c:	strd	r2, r3, [r0, #32]
   2b480:	str	r4, [r0, #40]	; 0x28
   2b482:	str	r0, [r4, #64]	; 0x40
   2b484:	movs	r0, #0
   2b486:	pop	{r3, r4, r5, pc}
   2b488:	mvn.w	r0, #11
   2b48c:	b.n	2b486 <btrfs_init_free_space_ctl@@Base+0x22>

0002b48e <__btrfs_remove_free_space_cache@@Base>:
   2b48e:	push	{r3, r4, r5, lr}
   2b490:	mov	r5, r0
   2b492:	mov	r0, r5
   2b494:	bl	186f6 <rb_last@@Base>
   2b498:	mov	r4, r0
   2b49a:	cbnz	r0, 2b49e <__btrfs_remove_free_space_cache@@Base+0x10>
   2b49c:	pop	{r3, r4, r5, pc}
   2b49e:	mov	r1, r4
   2b4a0:	mov	r0, r5
   2b4a2:	bl	2b39c <unlink_free_space@@Base>
   2b4a6:	ldr	r0, [r4, #32]
   2b4a8:	blx	8b84 <free@plt+0x4>
   2b4ac:	mov	r0, r4
   2b4ae:	blx	8b84 <free@plt+0x4>
   2b4b2:	b.n	2b492 <__btrfs_remove_free_space_cache@@Base+0x4>

0002b4b4 <btrfs_remove_free_space_cache@@Base>:
   2b4b4:	ldr	r0, [r0, #64]	; 0x40
   2b4b6:	b.w	2b48e <__btrfs_remove_free_space_cache@@Base>

0002b4ba <btrfs_add_free_space@@Base>:
   2b4ba:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b4be:	mov	r9, r3
   2b4c0:	ldr	r3, [pc, #240]	; (2b5b4 <btrfs_add_free_space@@Base+0xfa>)
   2b4c2:	mov	r7, r0
   2b4c4:	movs	r1, #48	; 0x30
   2b4c6:	movs	r0, #1
   2b4c8:	add	r3, pc
   2b4ca:	ldrd	r5, r6, [sp, #48]	; 0x30
   2b4ce:	mov	r8, r2
   2b4d0:	str	r3, [sp, #4]
   2b4d2:	blx	8ab8 <calloc@plt+0x4>
   2b4d6:	mov	r4, r0
   2b4d8:	cmp	r0, #0
   2b4da:	beq.n	2b5ac <btrfs_add_free_space@@Base+0xf2>
   2b4dc:	adds.w	r2, r8, r5
   2b4e0:	strd	r5, r6, [r0, #24]
   2b4e4:	adc.w	r3, r9, r6
   2b4e8:	strd	r8, r9, [r0, #16]
   2b4ec:	mov	r0, r7
   2b4ee:	bl	2b17c <btrfs_print_tree@@Base+0x4e0>
   2b4f2:	mov	r6, r0
   2b4f4:	cbz	r0, 2b52a <btrfs_add_free_space@@Base+0x70>
   2b4f6:	bl	18732 <rb_prev@@Base>
   2b4fa:	cbz	r0, 2b52a <btrfs_add_free_space@@Base+0x70>
   2b4fc:	mov	r0, r6
   2b4fe:	bl	18732 <rb_prev@@Base>
   2b502:	mov	r5, r0
   2b504:	ldr	r3, [r6, #32]
   2b506:	cbnz	r3, 2b53e <btrfs_add_free_space@@Base+0x84>
   2b508:	mov	r1, r6
   2b50a:	mov	r0, r7
   2b50c:	bl	2b39c <unlink_free_space@@Base>
   2b510:	ldrd	r1, r0, [r6, #24]
   2b514:	ldrd	r3, r2, [r4, #24]
   2b518:	adds	r3, r3, r1
   2b51a:	adc.w	r2, r0, r2
   2b51e:	mov	r0, r6
   2b520:	strd	r3, r2, [r4, #24]
   2b524:	blx	8b84 <free@plt+0x4>
   2b528:	b.n	2b53e <btrfs_add_free_space@@Base+0x84>
   2b52a:	adds.w	r2, r8, #4294967295	; 0xffffffff
   2b52e:	mov	r0, r7
   2b530:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2b534:	bl	2b17c <btrfs_print_tree@@Base+0x4e0>
   2b538:	mov	r5, r0
   2b53a:	cmp	r6, #0
   2b53c:	bne.n	2b504 <btrfs_add_free_space@@Base+0x4a>
   2b53e:	cbz	r5, 2b584 <btrfs_add_free_space@@Base+0xca>
   2b540:	ldr	r3, [r5, #32]
   2b542:	cbnz	r3, 2b584 <btrfs_add_free_space@@Base+0xca>
   2b544:	ldrd	r3, r0, [r5, #16]
   2b548:	ldrd	r2, r1, [r5, #24]
   2b54c:	adds.w	sl, r3, r2
   2b550:	adc.w	fp, r0, r1
   2b554:	cmp	r9, fp
   2b556:	it	eq
   2b558:	cmpeq	r8, sl
   2b55a:	bne.n	2b584 <btrfs_add_free_space@@Base+0xca>
   2b55c:	mov	r1, r5
   2b55e:	mov	r0, r7
   2b560:	bl	2b39c <unlink_free_space@@Base>
   2b564:	ldrd	r2, r3, [r5, #16]
   2b568:	strd	r2, r3, [r4, #16]
   2b56c:	ldrd	r3, r2, [r4, #24]
   2b570:	ldrd	r0, r1, [r5, #24]
   2b574:	adds	r3, r3, r0
   2b576:	mov	r0, r5
   2b578:	adc.w	r2, r1, r2
   2b57c:	strd	r3, r2, [r4, #24]
   2b580:	blx	8b84 <free@plt+0x4>
   2b584:	mov	r1, r4
   2b586:	mov	r0, r7
   2b588:	bl	2b294 <btrfs_print_tree@@Base+0x5f8>
   2b58c:	mov	r4, r0
   2b58e:	cbz	r0, 2b5a4 <btrfs_add_free_space@@Base+0xea>
   2b590:	ldr	r3, [pc, #36]	; (2b5b8 <btrfs_add_free_space@@Base+0xfe>)
   2b592:	movs	r1, #1
   2b594:	ldr	r2, [sp, #4]
   2b596:	ldr	r0, [r2, r3]
   2b598:	mov	r3, r4
   2b59a:	ldr	r2, [pc, #32]	; (2b5bc <btrfs_add_free_space@@Base+0x102>)
   2b59c:	ldr	r0, [r0, #0]
   2b59e:	add	r2, pc
   2b5a0:	blx	9040 <__fprintf_chk@plt+0x4>
   2b5a4:	mov	r0, r4
   2b5a6:	add	sp, #12
   2b5a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5ac:	mvn.w	r4, #11
   2b5b0:	b.n	2b5a4 <btrfs_add_free_space@@Base+0xea>
   2b5b2:	nop
   2b5b4:	ldr.w	r0, [r0, r3]
   2b5b8:	lsls	r4, r3, #10
   2b5ba:	movs	r0, r0
   2b5bc:	ldr	r0, [sp, #864]	; 0x360
   2b5be:	movs	r1, r0

0002b5c0 <load_free_space_cache@@Base>:
   2b5c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b5c4:	mov	r6, r0
   2b5c6:	vpush	{d8}
   2b5ca:	ldr.w	r2, [pc, #2148]	; 2be30 <load_free_space_cache@@Base+0x870>
   2b5ce:	ldr.w	r3, [pc, #2148]	; 2be34 <load_free_space_cache@@Base+0x874>
   2b5d2:	add	r2, pc
   2b5d4:	ldr.w	fp, [pc, #2144]	; 2be38 <load_free_space_cache@@Base+0x878>
   2b5d8:	sub	sp, #244	; 0xf4
   2b5da:	ldr	r5, [r1, #64]	; 0x40
   2b5dc:	add	fp, pc
   2b5de:	str	r1, [sp, #72]	; 0x48
   2b5e0:	ldr	r3, [r2, r3]
   2b5e2:	ldr	r3, [r3, #0]
   2b5e4:	str	r3, [sp, #236]	; 0xec
   2b5e6:	mov.w	r3, #0
   2b5ea:	ldr	r3, [r1, #72]	; 0x48
   2b5ec:	str	r3, [sp, #88]	; 0x58
   2b5ee:	ldr	r3, [r1, #76]	; 0x4c
   2b5f0:	str	r3, [sp, #92]	; 0x5c
   2b5f2:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2b5f6:	mov	r4, r0
   2b5f8:	cmp	r0, #0
   2b5fa:	beq.w	2be1e <load_free_space_cache@@Base+0x85e>
   2b5fe:	ldr	r3, [sp, #72]	; 0x48
   2b600:	movs	r7, #0
   2b602:	ldr.w	r9, [r6, #28]
   2b606:	add	r1, sp, #96	; 0x60
   2b608:	mvn.w	r0, #10
   2b60c:	strd	r1, r1, [sp, #96]	; 0x60
   2b610:	ldrd	r2, r3, [r3, #40]	; 0x28
   2b614:	mov.w	r1, #4294967295	; 0xffffffff
   2b618:	strd	r7, r7, [sp]
   2b61c:	strd	r0, r1, [sp, #104]	; 0x68
   2b620:	mov	r1, r9
   2b622:	str.w	r2, [sp, #113]	; 0x71
   2b626:	mov	r0, r7
   2b628:	str.w	r3, [sp, #117]	; 0x75
   2b62c:	add	r2, sp, #104	; 0x68
   2b62e:	mov	r3, r4
   2b630:	strb.w	r7, [sp, #112]	; 0x70
   2b634:	bl	1eadc <btrfs_search_slot@@Base>
   2b638:	subs	r6, r0, #0
   2b63a:	blt.n	2b644 <load_free_space_cache@@Base+0x84>
   2b63c:	beq.n	2b64a <load_free_space_cache@@Base+0x8a>
   2b63e:	mov	r0, r4
   2b640:	bl	1c6f8 <btrfs_release_path@@Base>
   2b644:	mov.w	r8, #0
   2b648:	b.n	2b70e <load_free_space_cache@@Base+0x14e>
   2b64a:	ldr.w	ip, [r4]
   2b64e:	movs	r7, #25
   2b650:	ldr	r2, [r4, #32]
   2b652:	add.w	r3, ip, #96	; 0x60
   2b656:	mla	r2, r7, r2, r3
   2b65a:	ldr.w	r2, [r2, #118]	; 0x76
   2b65e:	adds	r2, #101	; 0x65
   2b660:	add	r3, r2
   2b662:	mov	r1, r3
   2b664:	ldr.w	r0, [r1, #25]!
   2b668:	ldr	r1, [r1, #4]
   2b66a:	str	r0, [sp, #24]
   2b66c:	str	r1, [sp, #28]
   2b66e:	mov	r1, r3
   2b670:	ldr.w	r0, [r1, #33]!
   2b674:	ldr	r1, [r1, #4]
   2b676:	str	r0, [sp, #64]	; 0x40
   2b678:	mov	r0, ip
   2b67a:	str	r1, [sp, #76]	; 0x4c
   2b67c:	ldr.w	r1, [r3, #17]!
   2b680:	ldr	r3, [r3, #4]
   2b682:	str	r1, [sp, #40]	; 0x28
   2b684:	add	r1, sp, #144	; 0x90
   2b686:	str	r3, [sp, #44]	; 0x2c
   2b688:	movs	r3, #17
   2b68a:	bl	1bbba <read_extent_buffer@@Base>
   2b68e:	ldr.w	r3, [sp, #157]	; 0x9d
   2b692:	ldr.w	r2, [sp, #153]	; 0x99
   2b696:	mov	r0, r4
   2b698:	str.w	r3, [sp, #137]	; 0x89
   2b69c:	ldrb.w	r3, [sp, #152]	; 0x98
   2b6a0:	str.w	r2, [sp, #133]	; 0x85
   2b6a4:	strb.w	r3, [sp, #132]	; 0x84
   2b6a8:	ldr	r3, [sp, #144]	; 0x90
   2b6aa:	str	r3, [sp, #124]	; 0x7c
   2b6ac:	ldr	r3, [sp, #148]	; 0x94
   2b6ae:	str	r3, [sp, #128]	; 0x80
   2b6b0:	bl	1c6f8 <btrfs_release_path@@Base>
   2b6b4:	add	r2, sp, #124	; 0x7c
   2b6b6:	mov	r3, r4
   2b6b8:	mov	r1, r9
   2b6ba:	mov	r0, r6
   2b6bc:	strd	r6, r6, [sp]
   2b6c0:	bl	1eadc <btrfs_search_slot@@Base>
   2b6c4:	mov	r8, r0
   2b6c6:	cbz	r0, 2b6e2 <load_free_space_cache@@Base+0x122>
   2b6c8:	ldr.w	r3, [pc, #1904]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b6cc:	movs	r1, #1
   2b6ce:	ldr.w	r2, [pc, #1904]	; 2be40 <load_free_space_cache@@Base+0x880>
   2b6d2:	ldr.w	r0, [fp, r3]
   2b6d6:	add	r2, pc
   2b6d8:	mov	r3, r8
   2b6da:	ldr	r0, [r0, #0]
   2b6dc:	blx	9040 <__fprintf_chk@plt+0x4>
   2b6e0:	b.n	2b644 <load_free_space_cache@@Base+0x84>
   2b6e2:	ldr	r3, [r4, #0]
   2b6e4:	ldr	r2, [r4, #32]
   2b6e6:	adds	r3, #96	; 0x60
   2b6e8:	mla	r7, r7, r2, r3
   2b6ec:	ldr.w	r2, [r7, #118]	; 0x76
   2b6f0:	adds	r2, #101	; 0x65
   2b6f2:	add	r3, r2
   2b6f4:	ldr	r6, [r3, #16]
   2b6f6:	ldr	r7, [r3, #20]
   2b6f8:	orrs.w	r2, r6, r7
   2b6fc:	beq.n	2b708 <load_free_space_cache@@Base+0x148>
   2b6fe:	ldr	r0, [r3, #0]
   2b700:	ldr	r1, [r3, #4]
   2b702:	orrs.w	r3, r0, r1
   2b706:	bne.n	2b7d2 <load_free_space_cache@@Base+0x212>
   2b708:	mov	r0, r4
   2b70a:	bl	1c6f8 <btrfs_release_path@@Base>
   2b70e:	mov	r0, r4
   2b710:	bl	1c71e <btrfs_free_path@@Base>
   2b714:	ldr	r3, [sp, #72]	; 0x48
   2b716:	ldrd	r4, r6, [r5, #8]
   2b71a:	ldr.w	r2, [r3, #49]	; 0x31
   2b71e:	ldr.w	r0, [r3, #53]	; 0x35
   2b722:	ldrd	r1, r7, [r3, #80]	; 0x50
   2b726:	ldr	r3, [sp, #88]	; 0x58
   2b728:	adds	r1, r3, r1
   2b72a:	ldr	r3, [sp, #92]	; 0x5c
   2b72c:	adc.w	r7, r3, r7
   2b730:	adds	r3, r4, r1
   2b732:	adc.w	ip, r6, r7
   2b736:	subs	r3, r3, r2
   2b738:	str	r3, [sp, #56]	; 0x38
   2b73a:	sbc.w	r3, ip, r0
   2b73e:	cmp.w	r8, #1
   2b742:	str	r3, [sp, #60]	; 0x3c
   2b744:	bne.w	2be06 <load_free_space_cache@@Base+0x846>
   2b748:	ldrd	r9, sl, [sp, #56]	; 0x38
   2b74c:	orrs.w	r3, r9, sl
   2b750:	beq.n	2b7b8 <load_free_space_cache@@Base+0x1f8>
   2b752:	ldr.w	r3, [pc, #1768]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b756:	subs	r2, r2, r1
   2b758:	sbc.w	r0, r0, r7
   2b75c:	ldr.w	r3, [fp, r3]
   2b760:	strd	r2, r0, [sp, #16]
   2b764:	ldr	r2, [sp, #72]	; 0x48
   2b766:	strd	r4, r6, [sp, #8]
   2b76a:	ldrd	r0, r1, [r2, #40]	; 0x28
   2b76e:	ldr.w	r2, [pc, #1748]	; 2be44 <load_free_space_cache@@Base+0x884>
   2b772:	strd	r0, r1, [sp]
   2b776:	add	r2, pc
   2b778:	ldr	r0, [r3, #0]
   2b77a:	mov	r1, r8
   2b77c:	blx	9040 <__fprintf_chk@plt+0x4>
   2b780:	mov	r0, r5
   2b782:	bl	2b48e <__btrfs_remove_free_space_cache@@Base>
   2b786:	ldrd	r3, r4, [sp, #56]	; 0x38
   2b78a:	cmp	r3, #1
   2b78c:	sbcs.w	r3, r4, #0
   2b790:	bge.w	2bdf8 <load_free_space_cache@@Base+0x838>
   2b794:	mov.w	r8, #0
   2b798:	ldr	r2, [sp, #72]	; 0x48
   2b79a:	ldr.w	r3, [pc, #1696]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b79e:	ldrd	r0, r1, [r2, #40]	; 0x28
   2b7a2:	ldr.w	r3, [fp, r3]
   2b7a6:	ldr.w	r2, [pc, #1696]	; 2be48 <load_free_space_cache@@Base+0x888>
   2b7aa:	strd	r0, r1, [sp]
   2b7ae:	movs	r1, #1
   2b7b0:	ldr	r0, [r3, #0]
   2b7b2:	add	r2, pc
   2b7b4:	blx	9040 <__fprintf_chk@plt+0x4>
   2b7b8:	ldr.w	r2, [pc, #1680]	; 2be4c <load_free_space_cache@@Base+0x88c>
   2b7bc:	ldr.w	r3, [pc, #1652]	; 2be34 <load_free_space_cache@@Base+0x874>
   2b7c0:	add	r2, pc
   2b7c2:	ldr	r3, [r2, r3]
   2b7c4:	ldr	r2, [r3, #0]
   2b7c6:	ldr	r3, [sp, #236]	; 0xec
   2b7c8:	eors	r2, r3
   2b7ca:	beq.w	2be22 <load_free_space_cache@@Base+0x862>
   2b7ce:	blx	8c90 <__stack_chk_fail@plt>
   2b7d2:	ldrd	r2, r3, [sp, #40]	; 0x28
   2b7d6:	cmp	r3, r1
   2b7d8:	it	eq
   2b7da:	cmpeq	r2, r0
   2b7dc:	beq.n	2b802 <load_free_space_cache@@Base+0x242>
   2b7de:	ldr.w	r3, [pc, #1628]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b7e2:	ldrd	r6, r7, [sp, #40]	; 0x28
   2b7e6:	ldr.w	r2, [pc, #1640]	; 2be50 <load_free_space_cache@@Base+0x890>
   2b7ea:	ldr.w	r3, [fp, r3]
   2b7ee:	add	r2, pc
   2b7f0:	strd	r0, r1, [sp]
   2b7f4:	strd	r6, r7, [sp, #8]
   2b7f8:	movs	r1, #1
   2b7fa:	ldr	r0, [r3, #0]
   2b7fc:	blx	9040 <__fprintf_chk@plt+0x4>
   2b800:	b.n	2b708 <load_free_space_cache@@Base+0x148>
   2b802:	mov	r0, r4
   2b804:	bl	1c6f8 <btrfs_release_path@@Base>
   2b808:	ldrd	r2, r3, [sp, #24]
   2b80c:	orrs	r3, r2
   2b80e:	beq.w	2b644 <load_free_space_cache@@Base+0x84>
   2b812:	ldr	r3, [sp, #124]	; 0x7c
   2b814:	movs	r2, #48	; 0x30
   2b816:	mov	r1, r8
   2b818:	add	r0, sp, #184	; 0xb8
   2b81a:	str	r3, [sp, #32]
   2b81c:	ldr	r3, [sp, #128]	; 0x80
   2b81e:	str	r3, [sp, #36]	; 0x24
   2b820:	blx	8f98 <memset@plt+0x4>
   2b824:	ldr.w	r3, [r9, #464]	; 0x1d0
   2b828:	ldr.w	r2, [r3, #388]	; 0x184
   2b82c:	movs	r3, #0
   2b82e:	adds.w	r0, r2, #4294967295	; 0xffffffff
   2b832:	adc.w	r1, r3, #4294967295	; 0xffffffff
   2b836:	adds	r0, r0, r6
   2b838:	adc.w	r1, r7, r1
   2b83c:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2b840:	mov	r1, r6
   2b842:	str	r0, [sp, #220]	; 0xdc
   2b844:	movs	r0, #1
   2b846:	blx	8ab8 <calloc@plt+0x4>
   2b84a:	str	r0, [sp, #192]	; 0xc0
   2b84c:	cmp	r0, #0
   2b84e:	beq.w	2bdf2 <load_free_space_cache@@Base+0x832>
   2b852:	ldrd	r0, r1, [sp, #32]
   2b856:	mov.w	r3, #4294967295	; 0xffffffff
   2b85a:	mvn.w	r2, #11
   2b85e:	strd	r6, r7, [sp, #208]	; 0xd0
   2b862:	cmp	r1, r3
   2b864:	add	r7, sp, #164	; 0xa4
   2b866:	it	eq
   2b868:	cmpeq	r0, r2
   2b86a:	mov	r1, r9
   2b86c:	mov.w	r0, #0
   2b870:	mov	r2, r7
   2b872:	it	ne
   2b874:	ldrbne.w	r3, [sp, #224]	; 0xe0
   2b878:	strd	r0, r0, [sp]
   2b87c:	it	ne
   2b87e:	orrne.w	r3, r3, #1
   2b882:	str.w	r9, [sp, #196]	; 0xc4
   2b886:	it	ne
   2b888:	strbne.w	r3, [sp, #224]	; 0xe0
   2b88c:	ldr	r3, [sp, #32]
   2b88e:	strb.w	r0, [sp, #173]	; 0xad
   2b892:	strb.w	r0, [sp, #174]	; 0xae
   2b896:	str	r3, [sp, #164]	; 0xa4
   2b898:	ldr	r3, [sp, #36]	; 0x24
   2b89a:	strb.w	r0, [sp, #175]	; 0xaf
   2b89e:	strb.w	r0, [sp, #176]	; 0xb0
   2b8a2:	str	r3, [sp, #168]	; 0xa8
   2b8a4:	movs	r3, #108	; 0x6c
   2b8a6:	strb.w	r3, [sp, #172]	; 0xac
   2b8aa:	mov	r3, r4
   2b8ac:	strb.w	r0, [sp, #177]	; 0xb1
   2b8b0:	strb.w	r0, [sp, #178]	; 0xb2
   2b8b4:	strb.w	r0, [sp, #179]	; 0xb3
   2b8b8:	strb.w	r0, [sp, #180]	; 0xb4
   2b8bc:	bl	1eadc <btrfs_search_slot@@Base>
   2b8c0:	cmp	r0, #0
   2b8c2:	beq.w	2ba66 <load_free_space_cache@@Base+0x4a6>
   2b8c6:	ldr.w	r3, [pc, #1396]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b8ca:	mvn.w	r8, #21
   2b8ce:	ldrd	r1, r2, [sp, #32]
   2b8d2:	ldr.w	r3, [fp, r3]
   2b8d6:	strd	r1, r2, [sp]
   2b8da:	movs	r1, #1
   2b8dc:	ldr.w	r2, [pc, #1396]	; 2be54 <load_free_space_cache@@Base+0x894>
   2b8e0:	ldr	r0, [r3, #0]
   2b8e2:	add	r2, pc
   2b8e4:	blx	9040 <__fprintf_chk@plt+0x4>
   2b8e8:	mov	r0, r4
   2b8ea:	bl	1c6f8 <btrfs_release_path@@Base>
   2b8ee:	ldr	r0, [sp, #192]	; 0xc0
   2b8f0:	blx	8b84 <free@plt+0x4>
   2b8f4:	b.n	2b70e <load_free_space_cache@@Base+0x14e>
   2b8f6:	ldr	r3, [r4, #0]
   2b8f8:	ldr	r2, [r4, #32]
   2b8fa:	ldr.w	r3, [r3, #192]	; 0xc0
   2b8fe:	cmp	r2, r3
   2b900:	bcs.n	2b9a6 <load_free_space_cache@@Base+0x3e6>
   2b902:	ldr	r7, [r4, #0]
   2b904:	vmov	r1, s16
   2b908:	ldr	r2, [r4, #32]
   2b90a:	mov	r0, r7
   2b90c:	bl	2b334 <btrfs_print_tree@@Base+0x698>
   2b910:	ldrd	r2, r3, [sp, #164]	; 0xa4
   2b914:	ldrd	r0, r1, [sp, #32]
   2b918:	cmp	r1, r3
   2b91a:	it	eq
   2b91c:	cmpeq	r0, r2
   2b91e:	beq.n	2b9ba <load_free_space_cache@@Base+0x3fa>
   2b920:	mvn.w	r8, #21
   2b924:	mov	r0, r4
   2b926:	bl	1c6f8 <btrfs_release_path@@Base>
   2b92a:	cmp.w	r8, #0
   2b92e:	bne.n	2b8ee <load_free_space_cache@@Base+0x32e>
   2b930:	mov	r1, r8
   2b932:	add	r0, sp, #184	; 0xb8
   2b934:	bl	2b0cc <btrfs_print_tree@@Base+0x430>
   2b938:	mov	r8, r0
   2b93a:	cbnz	r0, 2b998 <load_free_space_cache@@Base+0x3d8>
   2b93c:	ldrb.w	r2, [sp, #224]	; 0xe0
   2b940:	ldr	r3, [sp, #184]	; 0xb8
   2b942:	lsls	r2, r2, #31
   2b944:	ldr	r1, [sp, #200]	; 0xc8
   2b946:	bpl.w	2ba76 <load_free_space_cache@@Base+0x4b6>
   2b94a:	ldr	r0, [sp, #220]	; 0xdc
   2b94c:	lsls	r2, r0, #2
   2b94e:	add.w	r3, r3, r0, lsl #2
   2b952:	str	r3, [sp, #184]	; 0xb8
   2b954:	add.w	r3, r2, #8
   2b958:	subs	r3, r1, r3
   2b95a:	str	r3, [sp, #200]	; 0xc8
   2b95c:	ldr	r3, [sp, #184]	; 0xb8
   2b95e:	ldrd	r6, r7, [sp, #40]	; 0x28
   2b962:	ldrd	r0, r1, [r3]
   2b966:	cmp	r7, r1
   2b968:	it	eq
   2b96a:	cmpeq	r6, r0
   2b96c:	beq.w	2ba80 <load_free_space_cache@@Base+0x4c0>
   2b970:	ldr.w	r3, [pc, #1224]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b974:	mvn.w	r8, #4
   2b978:	ldr.w	r2, [pc, #1244]	; 2be58 <load_free_space_cache@@Base+0x898>
   2b97c:	ldr.w	r3, [fp, r3]
   2b980:	add	r2, pc
   2b982:	strd	r0, r1, [sp]
   2b986:	movs	r1, #1
   2b988:	strd	r6, r7, [sp, #8]
   2b98c:	ldr	r0, [r3, #0]
   2b98e:	blx	9040 <__fprintf_chk@plt+0x4>
   2b992:	add	r0, sp, #184	; 0xb8
   2b994:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2b998:	add	r0, sp, #184	; 0xb8
   2b99a:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2b99e:	mov	r0, r5
   2b9a0:	bl	2b48e <__btrfs_remove_free_space_cache@@Base>
   2b9a4:	b.n	2b8ee <load_free_space_cache@@Base+0x32e>
   2b9a6:	strb.w	r6, [r4, #65]	; 0x41
   2b9aa:	mov	r1, r4
   2b9ac:	ldr.w	r0, [r9, #464]	; 0x1d0
   2b9b0:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2b9b4:	cmp	r0, #0
   2b9b6:	beq.n	2b902 <load_free_space_cache@@Base+0x342>
   2b9b8:	b.n	2b920 <load_free_space_cache@@Base+0x360>
   2b9ba:	ldrb.w	r3, [sp, #172]	; 0xac
   2b9be:	cmp	r3, #108	; 0x6c
   2b9c0:	bne.n	2b920 <load_free_space_cache@@Base+0x360>
   2b9c2:	ldr	r3, [r4, #0]
   2b9c4:	movs	r1, #25
   2b9c6:	ldr	r2, [r4, #32]
   2b9c8:	adds	r3, #96	; 0x60
   2b9ca:	mla	r2, r1, r2, r3
   2b9ce:	ldr.w	r0, [r2, #118]	; 0x76
   2b9d2:	add.w	r2, r0, #101	; 0x65
   2b9d6:	add	r3, r2
   2b9d8:	ldrb	r3, [r3, #20]
   2b9da:	cmp	r3, #1
   2b9dc:	beq.n	2b9f4 <load_free_space_cache@@Base+0x434>
   2b9de:	ldr.w	r3, [pc, #1116]	; 2be3c <load_free_space_cache@@Base+0x87c>
   2b9e2:	ldr.w	r0, [pc, #1144]	; 2be5c <load_free_space_cache@@Base+0x89c>
   2b9e6:	ldr.w	r3, [fp, r3]
   2b9ea:	add	r0, pc
   2b9ec:	ldr	r1, [r3, #0]
   2b9ee:	blx	91a8 <fputs@plt+0x4>
   2b9f2:	b.n	2b920 <load_free_space_cache@@Base+0x360>
   2b9f4:	add.w	r0, r7, #96	; 0x60
   2b9f8:	ldr.w	r1, [sp, #173]	; 0xad
   2b9fc:	add	r0, r2
   2b9fe:	mov	r3, r0
   2ba00:	ldr.w	r7, [r3, #45]!
   2ba04:	ldr.w	sl, [r3, #4]
   2ba08:	mov	r3, r0
   2ba0a:	ldr.w	r2, [r3, #21]!
   2ba0e:	ldr.w	lr, [r0, #37]!
   2ba12:	ldr.w	ip, [r3, #4]
   2ba16:	adds.w	r2, r2, lr
   2ba1a:	ldr	r3, [r0, #4]
   2ba1c:	ldr	r0, [sp, #192]	; 0xc0
   2ba1e:	str	r6, [sp, #8]
   2ba20:	adc.w	r3, ip, r3
   2ba24:	add	r1, r0
   2ba26:	strd	r7, sl, [sp]
   2ba2a:	ldr.w	r0, [r9, #464]	; 0x1d0
   2ba2e:	bl	1b74a <read_data_from_disk@@Base>
   2ba32:	mov	r8, r0
   2ba34:	cmp	r0, #0
   2ba36:	bne.w	2b924 <load_free_space_cache@@Base+0x364>
   2ba3a:	ldr	r3, [sp, #48]	; 0x30
   2ba3c:	adds	r3, r3, r7
   2ba3e:	str	r3, [sp, #48]	; 0x30
   2ba40:	ldr	r3, [sp, #52]	; 0x34
   2ba42:	adc.w	r3, r3, sl
   2ba46:	str	r3, [sp, #52]	; 0x34
   2ba48:	ldr	r3, [r4, #32]
   2ba4a:	adds	r3, #1
   2ba4c:	str	r3, [r4, #32]
   2ba4e:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2ba52:	ldrd	r0, r1, [sp, #48]	; 0x30
   2ba56:	cmp	r1, r3
   2ba58:	it	eq
   2ba5a:	cmpeq	r0, r2
   2ba5c:	bcc.w	2b8f6 <load_free_space_cache@@Base+0x336>
   2ba60:	mov.w	r8, #0
   2ba64:	b.n	2b924 <load_free_space_cache@@Base+0x364>
   2ba66:	movs	r2, #0
   2ba68:	movs	r3, #0
   2ba6a:	vmov	s16, r7
   2ba6e:	mov	r6, r0
   2ba70:	strd	r2, r3, [sp, #48]	; 0x30
   2ba74:	b.n	2ba4e <load_free_space_cache@@Base+0x48e>
   2ba76:	adds	r3, #8
   2ba78:	subs	r1, #16
   2ba7a:	str	r3, [sp, #184]	; 0xb8
   2ba7c:	str	r1, [sp, #200]	; 0xc8
   2ba7e:	b.n	2b95c <load_free_space_cache@@Base+0x39c>
   2ba80:	ldr	r7, [pc, #988]	; (2be60 <load_free_space_cache@@Base+0x8a0>)
   2ba82:	adds	r3, #8
   2ba84:	ldr.w	r9, [pc, #988]	; 2be64 <load_free_space_cache@@Base+0x8a4>
   2ba88:	add	r7, pc
   2ba8a:	str	r3, [sp, #184]	; 0xb8
   2ba8c:	adds	r7, #51	; 0x33
   2ba8e:	add	r9, pc
   2ba90:	movs	r1, #48	; 0x30
   2ba92:	movs	r0, #1
   2ba94:	blx	8ab8 <calloc@plt+0x4>
   2ba98:	mov	r6, r0
   2ba9a:	cmp	r0, #0
   2ba9c:	beq.w	2b998 <load_free_space_cache@@Base+0x3d8>
   2baa0:	ldr	r3, [sp, #184]	; 0xb8
   2baa2:	cbz	r3, 2bae6 <load_free_space_cache@@Base+0x526>
   2baa4:	ldr	r3, [sp, #184]	; 0xb8
   2baa6:	adds	r3, #17
   2baa8:	ldr.w	r1, [r3, #-17]
   2baac:	ldr.w	r2, [r3, #-13]
   2bab0:	strd	r1, r2, [r6, #16]
   2bab4:	ldr.w	r1, [r3, #-9]
   2bab8:	ldr.w	r2, [r3, #-5]
   2babc:	strd	r1, r2, [r6, #24]
   2bac0:	ldrb.w	r1, [r3, #-1]
   2bac4:	str	r3, [sp, #184]	; 0xb8
   2bac6:	ldr	r3, [sp, #200]	; 0xc8
   2bac8:	subs	r3, #17
   2baca:	str	r3, [sp, #200]	; 0xc8
   2bacc:	cmp	r3, #16
   2bace:	bhi.n	2bad6 <load_free_space_cache@@Base+0x516>
   2bad0:	add	r0, sp, #184	; 0xb8
   2bad2:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2bad6:	ldrd	r2, r3, [r6, #24]
   2bada:	orrs	r3, r2
   2badc:	bne.n	2bafe <load_free_space_cache@@Base+0x53e>
   2bade:	mov	r0, r6
   2bae0:	blx	8b84 <free@plt+0x4>
   2bae4:	b.n	2b998 <load_free_space_cache@@Base+0x3d8>
   2bae6:	ldr	r1, [sp, #216]	; 0xd8
   2bae8:	add	r0, sp, #184	; 0xb8
   2baea:	bl	2b0cc <btrfs_print_tree@@Base+0x430>
   2baee:	mov	sl, r0
   2baf0:	cmp	r0, #0
   2baf2:	beq.n	2baa4 <load_free_space_cache@@Base+0x4e4>
   2baf4:	mov	r0, r6
   2baf6:	mov	r8, sl
   2baf8:	blx	8b84 <free@plt+0x4>
   2bafc:	b.n	2b998 <load_free_space_cache@@Base+0x3d8>
   2bafe:	cmp	r1, #1
   2bb00:	bne.n	2bb22 <load_free_space_cache@@Base+0x562>
   2bb02:	mov	r1, r6
   2bb04:	mov	r0, r5
   2bb06:	bl	2b294 <btrfs_print_tree@@Base+0x5f8>
   2bb0a:	mov	sl, r0
   2bb0c:	cmp	r0, #0
   2bb0e:	beq.n	2bb92 <load_free_space_cache@@Base+0x5d2>
   2bb10:	ldr	r3, [pc, #808]	; (2be3c <load_free_space_cache@@Base+0x87c>)
   2bb12:	ldr	r0, [pc, #852]	; (2be68 <load_free_space_cache@@Base+0x8a8>)
   2bb14:	ldr.w	r3, [fp, r3]
   2bb18:	add	r0, pc
   2bb1a:	ldr	r1, [r3, #0]
   2bb1c:	blx	91a8 <fputs@plt+0x4>
   2bb20:	b.n	2baf4 <load_free_space_cache@@Base+0x534>
   2bb22:	ldr	r3, [sp, #64]	; 0x40
   2bb24:	mov	r1, r7
   2bb26:	ldr	r2, [sp, #76]	; 0x4c
   2bb28:	mov	r0, r9
   2bb2a:	orrs	r3, r2
   2bb2c:	movw	r2, #387	; 0x183
   2bb30:	ite	eq
   2bb32:	moveq	r3, #1
   2bb34:	movne	r3, #0
   2bb36:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2bb3a:	ldr	r3, [sp, #64]	; 0x40
   2bb3c:	ldr	r1, [r5, #44]	; 0x2c
   2bb3e:	movs	r0, #1
   2bb40:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2bb44:	str	r3, [sp, #64]	; 0x40
   2bb46:	ldr	r3, [sp, #76]	; 0x4c
   2bb48:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bb4c:	str	r3, [sp, #76]	; 0x4c
   2bb4e:	blx	8ab8 <calloc@plt+0x4>
   2bb52:	str	r0, [r6, #32]
   2bb54:	cmp	r0, #0
   2bb56:	beq.n	2bade <load_free_space_cache@@Base+0x51e>
   2bb58:	mov	r1, r6
   2bb5a:	mov	r0, r5
   2bb5c:	bl	2b294 <btrfs_print_tree@@Base+0x5f8>
   2bb60:	ldr	r3, [r5, #24]
   2bb62:	adds	r3, #1
   2bb64:	str	r3, [r5, #24]
   2bb66:	mov	sl, r0
   2bb68:	cbz	r0, 2bb82 <load_free_space_cache@@Base+0x5c2>
   2bb6a:	ldr	r3, [pc, #720]	; (2be3c <load_free_space_cache@@Base+0x87c>)
   2bb6c:	ldr	r0, [pc, #764]	; (2be6c <load_free_space_cache@@Base+0x8ac>)
   2bb6e:	ldr.w	r3, [fp, r3]
   2bb72:	add	r0, pc
   2bb74:	ldr	r1, [r3, #0]
   2bb76:	blx	91a8 <fputs@plt+0x4>
   2bb7a:	ldr	r0, [r6, #32]
   2bb7c:	blx	8b84 <free@plt+0x4>
   2bb80:	b.n	2baf4 <load_free_space_cache@@Base+0x534>
   2bb82:	ldr	r3, [sp, #100]	; 0x64
   2bb84:	add.w	r2, r6, #36	; 0x24
   2bb88:	add	r1, sp, #96	; 0x60
   2bb8a:	str	r2, [sp, #100]	; 0x64
   2bb8c:	strd	r1, r3, [r6, #36]	; 0x24
   2bb90:	str	r2, [r3, #0]
   2bb92:	ldr	r3, [sp, #24]
   2bb94:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2bb98:	str	r3, [sp, #24]
   2bb9a:	ldr	r3, [sp, #28]
   2bb9c:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bba0:	str	r3, [sp, #28]
   2bba2:	ldrd	r2, r3, [sp, #24]
   2bba6:	orrs	r3, r2
   2bba8:	bne.w	2ba90 <load_free_space_cache@@Base+0x4d0>
   2bbac:	add.w	sl, sp, #184	; 0xb8
   2bbb0:	add.w	r9, sp, #96	; 0x60
   2bbb4:	mov	r0, sl
   2bbb6:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2bbba:	ldr	r6, [sp, #96]	; 0x60
   2bbbc:	ldr.w	r7, [r6], #-36
   2bbc0:	subs	r7, #36	; 0x24
   2bbc2:	add.w	r3, r6, #36	; 0x24
   2bbc6:	cmp	r3, r9
   2bbc8:	bne.n	2bbfc <load_free_space_cache@@Base+0x63c>
   2bbca:	mov	r0, sl
   2bbcc:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2bbd0:	ldr	r3, [r5, #44]	; 0x2c
   2bbd2:	str	r3, [sp, #48]	; 0x30
   2bbd4:	ldr	r3, [pc, #664]	; (2be70 <load_free_space_cache@@Base+0x8b0>)
   2bbd6:	add	r3, pc
   2bbd8:	adds	r3, #75	; 0x4b
   2bbda:	vmov	s16, r3
   2bbde:	ldr	r3, [pc, #660]	; (2be74 <load_free_space_cache@@Base+0x8b4>)
   2bbe0:	add	r3, pc
   2bbe2:	vmov	s17, r3
   2bbe6:	mov	r0, r5
   2bbe8:	movs	r6, #0
   2bbea:	bl	186e6 <rb_first@@Base>
   2bbee:	mov	sl, r0
   2bbf0:	cmp.w	sl, #0
   2bbf4:	bne.n	2bc3a <load_free_space_cache@@Base+0x67a>
   2bbf6:	mov.w	r8, #1
   2bbfa:	b.n	2b8ee <load_free_space_cache@@Base+0x32e>
   2bbfc:	ldrd	r1, r2, [r6, #36]	; 0x24
   2bc00:	mov	r0, sl
   2bc02:	str	r2, [r1, #4]
   2bc04:	str	r1, [r2, #0]
   2bc06:	ldr	r1, [sp, #216]	; 0xd8
   2bc08:	strd	r3, r3, [r6, #36]	; 0x24
   2bc0c:	bl	2b0cc <btrfs_print_tree@@Base+0x430>
   2bc10:	mov	r8, r0
   2bc12:	cmp	r0, #0
   2bc14:	bne.w	2b998 <load_free_space_cache@@Base+0x3d8>
   2bc18:	ldr	r3, [sp, #196]	; 0xc4
   2bc1a:	ldr	r1, [sp, #184]	; 0xb8
   2bc1c:	ldr	r0, [r6, #32]
   2bc1e:	mov	r6, r7
   2bc20:	ldr.w	r3, [r3, #464]	; 0x1d0
   2bc24:	ldr.w	r2, [r3, #388]	; 0x184
   2bc28:	blx	8bdc <memcpy@plt+0x4>
   2bc2c:	mov	r0, sl
   2bc2e:	bl	2af88 <btrfs_print_tree@@Base+0x2ec>
   2bc32:	ldr	r3, [r7, #36]	; 0x24
   2bc34:	sub.w	r7, r3, #36	; 0x24
   2bc38:	b.n	2bbc2 <load_free_space_cache@@Base+0x602>
   2bc3a:	ldr.w	r3, [sl, #32]
   2bc3e:	cmp	r3, #0
   2bc40:	beq.w	2bd90 <load_free_space_cache@@Base+0x7d0>
   2bc44:	ldrd	r2, r3, [sl, #16]
   2bc48:	mov	r0, r5
   2bc4a:	strd	r2, r3, [sp, #24]
   2bc4e:	ldr	r3, [r5, #28]
   2bc50:	asrs	r2, r3, #31
   2bc52:	mov	r1, r3
   2bc54:	strd	r1, r2, [sp, #40]	; 0x28
   2bc58:	ldr	r2, [sp, #48]	; 0x30
   2bc5a:	muls	r3, r2
   2bc5c:	ldrd	r1, r2, [sp, #24]
   2bc60:	lsls	r3, r3, #3
   2bc62:	adds	r1, r1, r3
   2bc64:	adc.w	r2, r2, #0
   2bc68:	strd	r1, r2, [sp, #64]	; 0x40
   2bc6c:	mov	r1, sl
   2bc6e:	bl	2b39c <unlink_free_space@@Base>
   2bc72:	ldrd	r2, r3, [sl, #16]
   2bc76:	ldrd	r0, r1, [sp, #24]
   2bc7a:	ldr	r6, [r5, #28]
   2bc7c:	cmp	r3, r1
   2bc7e:	strd	r2, r3, [sp, #32]
   2bc82:	it	eq
   2bc84:	cmpeq	r2, r0
   2bc86:	mov	r8, r2
   2bc88:	mov	r9, r3
   2bc8a:	ldrd	r2, r3, [sp, #32]
   2bc8e:	itt	cc
   2bc90:	movcc	r8, r0
   2bc92:	movcc	r9, r1
   2bc94:	cmp	r9, r3
   2bc96:	vmov	r1, s16
   2bc9a:	it	eq
   2bc9c:	cmpeq	r8, r2
   2bc9e:	vmov	r0, s17
   2bca2:	movw	r2, #491	; 0x1eb
   2bca6:	ite	cc
   2bca8:	movcc	r3, #1
   2bcaa:	movcs	r3, #0
   2bcac:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2bcb0:	ldr	r1, [sp, #32]
   2bcb2:	mov	r2, r6
   2bcb4:	movs	r3, #0
   2bcb6:	subs.w	r0, r8, r1
   2bcba:	ldr	r1, [sp, #36]	; 0x24
   2bcbc:	sbc.w	r1, r9, r1
   2bcc0:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2bcc4:	movs	r3, #0
   2bcc6:	mov	r2, r6
   2bcc8:	mov	r7, r0
   2bcca:	ldrd	r0, r1, [sp, #40]	; 0x28
   2bcce:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2bcd2:	ldr	r3, [r5, #44]	; 0x2c
   2bcd4:	ldr.w	r9, [sl, #32]
   2bcd8:	cmp.w	r7, r3, lsl #3
   2bcdc:	mov.w	r8, r3, lsl #3
   2bce0:	str	r0, [sp, #40]	; 0x28
   2bce2:	bcs.n	2bd26 <load_free_space_cache@@Base+0x766>
   2bce4:	movs	r3, #0
   2bce6:	mov	r2, r7
   2bce8:	mov	r1, r8
   2bcea:	mov	r0, r9
   2bcec:	bl	2af94 <btrfs_print_tree@@Base+0x2f8>
   2bcf0:	mov	r7, r0
   2bcf2:	cmp	r8, r7
   2bcf4:	bhi.n	2bd06 <load_free_space_cache@@Base+0x746>
   2bcf6:	ldr.w	r0, [sl, #32]
   2bcfa:	blx	8b84 <free@plt+0x4>
   2bcfe:	mov	r0, sl
   2bd00:	blx	8b84 <free@plt+0x4>
   2bd04:	b.n	2bbe6 <load_free_space_cache@@Base+0x626>
   2bd06:	mov.w	r3, #4294967295	; 0xffffffff
   2bd0a:	mov	r2, r7
   2bd0c:	mov	r1, r8
   2bd0e:	mov	r0, r9
   2bd10:	bl	2af94 <btrfs_print_tree@@Base+0x2f8>
   2bd14:	ldr	r2, [sp, #40]	; 0x28
   2bd16:	subs	r3, r0, r7
   2bd18:	cmp	r2, r3
   2bd1a:	bls.n	2bd2a <load_free_space_cache@@Base+0x76a>
   2bd1c:	adds	r2, r0, #1
   2bd1e:	cmp	r8, r2
   2bd20:	bls.n	2bd26 <load_free_space_cache@@Base+0x766>
   2bd22:	movs	r3, #0
   2bd24:	b.n	2bce8 <load_free_space_cache@@Base+0x728>
   2bd26:	mov	r7, r8
   2bd28:	b.n	2bcf2 <load_free_space_cache@@Base+0x732>
   2bd2a:	cmp	r3, #0
   2bd2c:	beq.n	2bcf6 <load_free_space_cache@@Base+0x736>
   2bd2e:	muls	r7, r6
   2bd30:	ldrd	r8, r9, [sp, #32]
   2bd34:	asrs	r1, r6, #31
   2bd36:	mov	r0, r5
   2bd38:	adds.w	r8, r8, r7
   2bd3c:	umull	r6, r7, r3, r6
   2bd40:	adc.w	r9, r9, #0
   2bd44:	mov	r2, r8
   2bd46:	mla	r7, r3, r1, r7
   2bd4a:	mov	r3, r9
   2bd4c:	strd	r6, r7, [sp]
   2bd50:	bl	2b4ba <btrfs_add_free_space@@Base>
   2bd54:	ldr	r1, [pc, #288]	; (2be78 <load_free_space_cache@@Base+0x8b8>)
   2bd56:	movw	r2, #873	; 0x369
   2bd5a:	add	r1, pc
   2bd5c:	adds	r1, #89	; 0x59
   2bd5e:	mov	r3, r0
   2bd60:	ldr	r0, [pc, #280]	; (2be7c <load_free_space_cache@@Base+0x8bc>)
   2bd62:	add	r0, pc
   2bd64:	bl	2aff8 <btrfs_print_tree@@Base+0x35c>
   2bd68:	adds.w	r3, r8, r6
   2bd6c:	str	r3, [sp, #24]
   2bd6e:	adc.w	r3, r9, r7
   2bd72:	str	r3, [sp, #28]
   2bd74:	ldrd	r2, r3, [sp, #24]
   2bd78:	ldrd	r0, r1, [sp, #64]	; 0x40
   2bd7c:	cmp	r3, r1
   2bd7e:	it	eq
   2bd80:	cmpeq	r2, r0
   2bd82:	bcs.n	2bcf6 <load_free_space_cache@@Base+0x736>
   2bd84:	ldr	r3, [r5, #28]
   2bd86:	asrs	r2, r3, #31
   2bd88:	mov	r1, r3
   2bd8a:	strd	r1, r2, [sp, #40]	; 0x28
   2bd8e:	b.n	2bc72 <load_free_space_cache@@Base+0x6b2>
   2bd90:	cbz	r6, 2bde6 <load_free_space_cache@@Base+0x826>
   2bd92:	ldrd	r2, r1, [r6, #24]
   2bd96:	ldrd	r3, r0, [r6, #16]
   2bd9a:	adds	r3, r3, r2
   2bd9c:	str	r3, [sp, #80]	; 0x50
   2bd9e:	adc.w	r3, r0, r1
   2bda2:	str	r3, [sp, #84]	; 0x54
   2bda4:	ldrd	r0, r1, [sp, #80]	; 0x50
   2bda8:	ldrd	r2, r3, [sl, #16]
   2bdac:	cmp	r1, r3
   2bdae:	it	eq
   2bdb0:	cmpeq	r0, r2
   2bdb2:	bne.n	2bde6 <load_free_space_cache@@Base+0x826>
   2bdb4:	mov	r1, r6
   2bdb6:	mov	r0, r5
   2bdb8:	bl	2b39c <unlink_free_space@@Base>
   2bdbc:	mov	r1, sl
   2bdbe:	mov	r0, r5
   2bdc0:	bl	2b39c <unlink_free_space@@Base>
   2bdc4:	ldrd	r1, r0, [sl, #24]
   2bdc8:	ldrd	r3, r2, [r6, #24]
   2bdcc:	adds	r3, r3, r1
   2bdce:	adc.w	r2, r0, r2
   2bdd2:	mov	r0, sl
   2bdd4:	strd	r3, r2, [r6, #24]
   2bdd8:	blx	8b84 <free@plt+0x4>
   2bddc:	mov	r1, r6
   2bdde:	mov	r0, r5
   2bde0:	bl	2b294 <btrfs_print_tree@@Base+0x5f8>
   2bde4:	b.n	2bbe6 <load_free_space_cache@@Base+0x626>
   2bde6:	mov	r0, sl
   2bde8:	mov	r6, sl
   2bdea:	bl	18706 <rb_next@@Base>
   2bdee:	mov	sl, r0
   2bdf0:	b.n	2bbf0 <load_free_space_cache@@Base+0x630>
   2bdf2:	mvn.w	r8, #11
   2bdf6:	b.n	2b70e <load_free_space_cache@@Base+0x14e>
   2bdf8:	ldr	r0, [pc, #132]	; (2be80 <load_free_space_cache@@Base+0x8c0>)
   2bdfa:	mov.w	r8, #4294967295	; 0xffffffff
   2bdfe:	add	r0, pc
   2be00:	bl	1bd1c <__btrfs_error@@Base>
   2be04:	b.n	2b798 <load_free_space_cache@@Base+0x1d8>
   2be06:	cmp.w	r8, #0
   2be0a:	bge.w	2b7b8 <load_free_space_cache@@Base+0x1f8>
   2be0e:	ldrd	r3, r4, [sp, #56]	; 0x38
   2be12:	cmp	r3, #1
   2be14:	sbcs.w	r3, r4, #0
   2be18:	bge.w	2b798 <load_free_space_cache@@Base+0x1d8>
   2be1c:	b.n	2b794 <load_free_space_cache@@Base+0x1d4>
   2be1e:	mov	r8, r0
   2be20:	b.n	2b7b8 <load_free_space_cache@@Base+0x1f8>
   2be22:	mov	r0, r8
   2be24:	add	sp, #244	; 0xf4
   2be26:	vpop	{d8}
   2be2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be2e:	nop
   2be30:			; <UNDEFINED> instruction: 0xf7460003
   2be34:	lsls	r0, r1, #10
   2be36:	movs	r0, r0
   2be38:			; <UNDEFINED> instruction: 0xf73c0003
   2be3c:	lsls	r4, r3, #10
   2be3e:	movs	r0, r0
   2be40:	str	r7, [sp, #788]	; 0x314
   2be42:	movs	r1, r0
   2be44:	ldr	r0, [sp, #528]	; 0x210
   2be46:	movs	r1, r0
   2be48:	ldr	r1, [sp, #180]	; 0xb4
   2be4a:	movs	r1, r0
   2be4c:	adcs.w	r0, r8, #8585216	; 0x830000
   2be50:	str	r6, [sp, #832]	; 0x340
   2be52:	movs	r1, r0
   2be54:	str	r6, [sp, #196]	; 0xc4
   2be56:	movs	r1, r0
   2be58:	str	r5, [sp, #960]	; 0x3c0
   2be5a:	movs	r1, r0
   2be5c:	str	r5, [sp, #392]	; 0x188
   2be5e:	movs	r1, r0
   2be60:	ldr	r0, [sp, #216]	; 0xd8
   2be62:	movs	r1, r0
   2be64:	str	r5, [sp, #292]	; 0x124
   2be66:	movs	r1, r0
   2be68:	str	r4, [sp, #608]	; 0x260
   2be6a:	movs	r1, r0
   2be6c:	str	r4, [sp, #248]	; 0xf8
   2be6e:	movs	r1, r0
   2be70:	str	r6, [sp, #928]	; 0x3a0
   2be72:	movs	r1, r0
   2be74:	str	r4, [sp, #16]
   2be76:	movs	r1, r0
   2be78:	str	r5, [sp, #400]	; 0x190
   2be7a:	movs	r1, r0
   2be7c:	subs	r5, #224	; 0xe0
   2be7e:	movs	r1, r0
   2be80:	str	r2, [sp, #372]	; 0x174
   2be82:	movs	r1, r0

0002be84 <btrfs_clear_free_space_cache@@Base>:
   2be84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2be88:	mov	fp, r1
   2be8a:	vpush	{d8}
   2be8e:	movs	r1, #1
   2be90:	ldr	r2, [pc, #704]	; (2c154 <btrfs_clear_free_space_cache@@Base+0x2d0>)
   2be92:	ldr	r3, [pc, #708]	; (2c158 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   2be94:	add	r2, pc
   2be96:	ldr	r7, [r0, #28]
   2be98:	sub	sp, #172	; 0xac
   2be9a:	ldr	r3, [r2, r3]
   2be9c:	mov	r0, r7
   2be9e:	ldr	r3, [r3, #0]
   2bea0:	str	r3, [sp, #164]	; 0xa4
   2bea2:	mov.w	r3, #0
   2bea6:	bl	2f81c <btrfs_start_transaction@@Base>
   2beaa:	cmn.w	r0, #4096	; 0x1000
   2beae:	mov	r5, r0
   2beb0:	bls.n	2beca <btrfs_clear_free_space_cache@@Base+0x46>
   2beb2:	mov	r4, r0
   2beb4:	ldr	r2, [pc, #676]	; (2c15c <btrfs_clear_free_space_cache@@Base+0x2d8>)
   2beb6:	ldr	r3, [pc, #672]	; (2c158 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   2beb8:	add	r2, pc
   2beba:	ldr	r3, [r2, r3]
   2bebc:	ldr	r2, [r3, #0]
   2bebe:	ldr	r3, [sp, #164]	; 0xa4
   2bec0:	eors	r2, r3
   2bec2:	beq.w	2c148 <btrfs_clear_free_space_cache@@Base+0x2c4>
   2bec6:	blx	8c90 <__stack_chk_fail@plt>
   2beca:	add	r6, sp, #96	; 0x60
   2becc:	mov.w	r8, #4294967295	; 0xffffffff
   2bed0:	mov.w	r9, #0
   2bed4:	add.w	sl, sp, #65	; 0x41
   2bed8:	mov	r0, r6
   2beda:	bl	1c6e8 <btrfs_init_path@@Base>
   2bede:	mvn.w	r2, #10
   2bee2:	mov.w	r3, #4294967295	; 0xffffffff
   2bee6:	strd	r2, r3, [sp, #56]	; 0x38
   2beea:	ldr.w	r3, [fp, #40]	; 0x28
   2beee:	mov	r1, r7
   2bef0:	mov	r0, r5
   2bef2:	strb.w	r9, [sp, #64]	; 0x40
   2bef6:	str.w	r3, [sp, #65]	; 0x41
   2befa:	ldr.w	r3, [fp, #44]	; 0x2c
   2befe:	str.w	r3, [sp, #69]	; 0x45
   2bf02:	add	r3, sp, #56	; 0x38
   2bf04:	vmov	s17, r3
   2bf08:	movs	r3, #1
   2bf0a:	strd	r8, r3, [sp]
   2bf0e:	mov	r3, r6
   2bf10:	vmov	r2, s17
   2bf14:	bl	1eadc <btrfs_search_slot@@Base>
   2bf18:	subs	r4, r0, #0
   2bf1a:	bgt.w	2c144 <btrfs_clear_free_space_cache@@Base+0x2c0>
   2bf1e:	bne.n	2bf62 <btrfs_clear_free_space_cache@@Base+0xde>
   2bf20:	ldr	r0, [sp, #96]	; 0x60
   2bf22:	movs	r2, #25
   2bf24:	ldr	r3, [sp, #128]	; 0x80
   2bf26:	add	r1, sp, #76	; 0x4c
   2bf28:	mla	r3, r2, r3, r0
   2bf2c:	ldr.w	r2, [r3, #214]	; 0xd6
   2bf30:	movs	r3, #17
   2bf32:	adds	r2, #101	; 0x65
   2bf34:	bl	1bbba <read_extent_buffer@@Base>
   2bf38:	ldrd	r9, r3, [sp, #76]	; 0x4c
   2bf3c:	mov	r2, r6
   2bf3e:	mov	r1, r7
   2bf40:	mov	r0, r5
   2bf42:	vmov	s16, r3
   2bf46:	movs	r3, #1
   2bf48:	str	r3, [sp, #0]
   2bf4a:	ldr	r3, [sp, #128]	; 0x80
   2bf4c:	bl	1fc98 <btrfs_del_items@@Base>
   2bf50:	subs	r4, r0, #0
   2bf52:	bge.n	2bf76 <btrfs_clear_free_space_cache@@Base+0xf2>
   2bf54:	ldr	r0, [pc, #520]	; (2c160 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   2bf56:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bf5a:	add	r0, pc
   2bf5c:	str	r4, [sp, #0]
   2bf5e:	bl	1bd1c <__btrfs_error@@Base>
   2bf62:	add	r0, sp, #96	; 0x60
   2bf64:	bl	1c6f8 <btrfs_release_path@@Base>
   2bf68:	cmp	r4, #0
   2bf6a:	bne.n	2beb4 <btrfs_clear_free_space_cache@@Base+0x30>
   2bf6c:	mov	r1, r7
   2bf6e:	mov	r0, r5
   2bf70:	bl	2fa9c <btrfs_commit_transaction@@Base>
   2bf74:	b.n	2beb4 <btrfs_clear_free_space_cache@@Base+0x30>
   2bf76:	mov	r0, r6
   2bf78:	bl	1c6f8 <btrfs_release_path@@Base>
   2bf7c:	mov.w	r3, #108	; 0x6c
   2bf80:	strb.w	r8, [sl]
   2bf84:	mov	r1, r7
   2bf86:	strb.w	r3, [sp, #64]	; 0x40
   2bf8a:	mov	r0, r5
   2bf8c:	movs	r3, #1
   2bf8e:	strb.w	r8, [sl, #1]
   2bf92:	strb.w	r8, [sl, #2]
   2bf96:	strb.w	r8, [sl, #3]
   2bf9a:	strb.w	r8, [sl, #4]
   2bf9e:	strb.w	r8, [sl, #5]
   2bfa2:	strb.w	r8, [sl, #6]
   2bfa6:	strb.w	r8, [sl, #7]
   2bfaa:	vmov	r2, s17
   2bfae:	strd	r8, r3, [sp]
   2bfb2:	mov	r3, r6
   2bfb4:	vstr	s16, [sp, #60]	; 0x3c
   2bfb8:	str.w	r9, [sp, #56]	; 0x38
   2bfbc:	bl	1eadc <btrfs_search_slot@@Base>
   2bfc0:	subs	r4, r0, #0
   2bfc2:	blt.n	2c064 <btrfs_clear_free_space_cache@@Base+0x1e0>
   2bfc4:	movs	r3, #108	; 0x6c
   2bfc6:	str	r3, [sp, #44]	; 0x2c
   2bfc8:	ldr	r3, [sp, #44]	; 0x2c
   2bfca:	mov	r2, r9
   2bfcc:	mov	r1, r6
   2bfce:	mov	r0, r7
   2bfd0:	str	r3, [sp, #0]
   2bfd2:	vmov	r3, s16
   2bfd6:	bl	20194 <btrfs_previous_item@@Base>
   2bfda:	subs	r4, r0, #0
   2bfdc:	ble.n	2c070 <btrfs_clear_free_space_cache@@Base+0x1ec>
   2bfde:	mov	r0, r6
   2bfe0:	bl	1c6f8 <btrfs_release_path@@Base>
   2bfe4:	movs	r3, #0
   2bfe6:	movs	r2, #1
   2bfe8:	strb.w	r3, [sl, #1]
   2bfec:	strb.w	r3, [sl, #2]
   2bff0:	mov	r1, r7
   2bff2:	strb.w	r3, [sl, #3]
   2bff6:	mov	r0, r5
   2bff8:	strb.w	r3, [sl, #4]
   2bffc:	strb.w	r3, [sl, #5]
   2c000:	strb.w	r3, [sl, #6]
   2c004:	strb.w	r3, [sl, #7]
   2c008:	strb.w	r2, [sp, #64]	; 0x40
   2c00c:	strb.w	r3, [sp, #65]	; 0x41
   2c010:	mov.w	r3, #4294967295	; 0xffffffff
   2c014:	str	r2, [sp, #4]
   2c016:	add	r2, sp, #56	; 0x38
   2c018:	str	r3, [sp, #0]
   2c01a:	mov	r3, r6
   2c01c:	vstr	s16, [sp, #60]	; 0x3c
   2c020:	str.w	r9, [sp, #56]	; 0x38
   2c024:	bl	1eadc <btrfs_search_slot@@Base>
   2c028:	subs	r4, r0, #0
   2c02a:	ble.n	2c12c <btrfs_clear_free_space_cache@@Base+0x2a8>
   2c02c:	ldr	r0, [pc, #308]	; (2c164 <btrfs_clear_free_space_cache@@Base+0x2e0>)
   2c02e:	mov	r2, r9
   2c030:	vmov	r3, s16
   2c034:	add	r0, pc
   2c036:	bl	1bca0 <__btrfs_warning@@Base>
   2c03a:	movs	r3, #1
   2c03c:	mov	r2, r6
   2c03e:	str	r3, [sp, #0]
   2c040:	mov	r1, r7
   2c042:	ldr	r3, [sp, #128]	; 0x80
   2c044:	mov	r0, r5
   2c046:	bl	1fc98 <btrfs_del_items@@Base>
   2c04a:	subs	r4, r0, #0
   2c04c:	bge.n	2bf62 <btrfs_clear_free_space_cache@@Base+0xde>
   2c04e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c052:	ldr	r0, [pc, #276]	; (2c168 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   2c054:	str	r4, [sp, #8]
   2c056:	strd	r2, r3, [sp]
   2c05a:	add	r0, pc
   2c05c:	vmov	r3, s16
   2c060:	mov	r2, r9
   2c062:	b.n	2c126 <btrfs_clear_free_space_cache@@Base+0x2a2>
   2c064:	ldr	r0, [pc, #260]	; (2c16c <btrfs_clear_free_space_cache@@Base+0x2e8>)
   2c066:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c06a:	add	r0, pc
   2c06c:	str	r4, [sp, #0]
   2c06e:	b.n	2bf5e <btrfs_clear_free_space_cache@@Base+0xda>
   2c070:	beq.n	2c07e <btrfs_clear_free_space_cache@@Base+0x1fa>
   2c072:	ldr	r0, [pc, #252]	; (2c170 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   2c074:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c078:	add	r0, pc
   2c07a:	str	r4, [sp, #0]
   2c07c:	b.n	2bf5e <btrfs_clear_free_space_cache@@Base+0xda>
   2c07e:	ldr	r4, [sp, #96]	; 0x60
   2c080:	ldr.w	r8, [sp, #128]	; 0x80
   2c084:	vmov	r1, s17
   2c088:	mov	r0, r4
   2c08a:	mov	r2, r8
   2c08c:	bl	2b334 <btrfs_print_tree@@Base+0x698>
   2c090:	add.w	r0, r4, #96	; 0x60
   2c094:	movs	r2, #25
   2c096:	ldr.w	r1, [sp, #69]	; 0x45
   2c09a:	mla	r8, r2, r8, r0
   2c09e:	ldr.w	r4, [r8, #118]	; 0x76
   2c0a2:	adds	r4, #101	; 0x65
   2c0a4:	add.w	ip, r0, r4
   2c0a8:	ldr.w	r4, [sp, #65]	; 0x41
   2c0ac:	mov	r3, ip
   2c0ae:	ldr.w	r2, [r3, #21]!
   2c0b2:	ldr	r3, [r3, #4]
   2c0b4:	vstr	s16, [sp, #28]
   2c0b8:	str.w	r9, [sp, #24]
   2c0bc:	strd	r4, r1, [sp, #32]
   2c0c0:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   2c0c4:	strd	r3, r2, [sp, #48]	; 0x30
   2c0c8:	strd	r0, r1, [sp, #16]
   2c0cc:	movs	r0, #0
   2c0ce:	movs	r1, #0
   2c0d0:	strd	r0, r1, [sp, #8]
   2c0d4:	mov	r0, ip
   2c0d6:	ldr.w	r4, [r0, #29]!
   2c0da:	ldr	r1, [r0, #4]
   2c0dc:	mov	r0, r5
   2c0de:	strd	r4, r1, [sp]
   2c0e2:	mov	r1, r7
   2c0e4:	bl	254ec <btrfs_free_extent@@Base>
   2c0e8:	ldrd	r3, r2, [sp, #48]	; 0x30
   2c0ec:	subs	r4, r0, #0
   2c0ee:	bge.n	2c0f8 <btrfs_clear_free_space_cache@@Base+0x274>
   2c0f0:	ldr	r0, [pc, #128]	; (2c174 <btrfs_clear_free_space_cache@@Base+0x2f0>)
   2c0f2:	str	r4, [sp, #0]
   2c0f4:	add	r0, pc
   2c0f6:	b.n	2bf5e <btrfs_clear_free_space_cache@@Base+0xda>
   2c0f8:	movs	r3, #1
   2c0fa:	mov	r2, r6
   2c0fc:	str	r3, [sp, #0]
   2c0fe:	mov	r1, r7
   2c100:	ldr	r3, [sp, #128]	; 0x80
   2c102:	mov	r0, r5
   2c104:	bl	1fc98 <btrfs_del_items@@Base>
   2c108:	subs	r4, r0, #0
   2c10a:	bge.w	2bfc8 <btrfs_clear_free_space_cache@@Base+0x144>
   2c10e:	ldr.w	r2, [sp, #65]	; 0x41
   2c112:	ldr.w	r3, [sp, #69]	; 0x45
   2c116:	ldr	r0, [pc, #96]	; (2c178 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   2c118:	str	r4, [sp, #8]
   2c11a:	strd	r2, r3, [sp]
   2c11e:	add	r0, pc
   2c120:	vmov	r3, s16
   2c124:	mov	r2, r9
   2c126:	bl	1bd1c <__btrfs_error@@Base>
   2c12a:	b.n	2bf62 <btrfs_clear_free_space_cache@@Base+0xde>
   2c12c:	beq.n	2c03a <btrfs_clear_free_space_cache@@Base+0x1b6>
   2c12e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c132:	ldr	r0, [pc, #72]	; (2c17c <btrfs_clear_free_space_cache@@Base+0x2f8>)
   2c134:	str	r4, [sp, #8]
   2c136:	strd	r2, r3, [sp]
   2c13a:	add	r0, pc
   2c13c:	vmov	r3, s16
   2c140:	mov	r2, r9
   2c142:	b.n	2c126 <btrfs_clear_free_space_cache@@Base+0x2a2>
   2c144:	mov	r4, r9
   2c146:	b.n	2bf62 <btrfs_clear_free_space_cache@@Base+0xde>
   2c148:	mov	r0, r4
   2c14a:	add	sp, #172	; 0xac
   2c14c:	vpop	{d8}
   2c150:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c154:	cdp	0, 8, cr0, cr4, cr3, {0}
   2c158:	lsls	r0, r1, #10
   2c15a:	movs	r0, r0
   2c15c:	cdp	0, 6, cr0, cr0, cr3, {0}
   2c160:	str	r1, [sp, #748]	; 0x2ec
   2c162:	movs	r1, r0
   2c164:	str	r1, [sp, #856]	; 0x358
   2c166:	movs	r1, r0
   2c168:	str	r2, [sp, #120]	; 0x78
   2c16a:	movs	r1, r0
   2c16c:	str	r0, [sp, #924]	; 0x39c
   2c16e:	movs	r1, r0
   2c170:	str	r0, [sp, #868]	; 0x364
   2c172:	movs	r1, r0
   2c174:	str	r0, [sp, #636]	; 0x27c
   2c176:	movs	r1, r0
   2c178:	str	r0, [sp, #668]	; 0x29c
   2c17a:	movs	r1, r0
   2c17c:	str	r0, [sp, #992]	; 0x3e0
   2c17e:	movs	r1, r0
   2c180:	ldr.w	ip, [pc, #76]	; 2c1d0 <btrfs_clear_free_space_cache@@Base+0x34c>
   2c184:	ldr	r5, [pc, #76]	; (2c1d4 <btrfs_clear_free_space_cache@@Base+0x350>)
   2c186:	add	ip, pc
   2c188:	ldr	r4, [pc, #76]	; (2c1d8 <btrfs_clear_free_space_cache@@Base+0x354>)
   2c18a:	push	{lr}
   2c18c:	sub	sp, #92	; 0x5c
   2c18e:	ldr.w	r5, [ip, r5]
   2c192:	add	r4, pc
   2c194:	ldr	r5, [r5, #0]
   2c196:	str	r5, [sp, #84]	; 0x54
   2c198:	mov.w	r5, #0
   2c19c:	ldr	r5, [pc, #60]	; (2c1dc <btrfs_clear_free_space_cache@@Base+0x358>)
   2c19e:	ldr	r4, [r4, r5]
   2c1a0:	strd	r2, r1, [sp]
   2c1a4:	movs	r1, #1
   2c1a6:	strd	r0, r3, [sp, #8]
   2c1aa:	ldr	r2, [pc, #52]	; (2c1e0 <btrfs_clear_free_space_cache@@Base+0x35c>)
   2c1ac:	ldr	r3, [pc, #52]	; (2c1e4 <btrfs_clear_free_space_cache@@Base+0x360>)
   2c1ae:	ldr	r0, [r4, #0]
   2c1b0:	add	r4, sp, #20
   2c1b2:	add	r3, pc
   2c1b4:	add	r2, pc
   2c1b6:	blx	9040 <__fprintf_chk@plt+0x4>
   2c1ba:	movs	r1, #16
   2c1bc:	mov	r0, r4
   2c1be:	blx	8e98 <backtrace@plt>
   2c1c2:	movs	r2, #2
   2c1c4:	mov	r1, r0
   2c1c6:	mov	r0, r4
   2c1c8:	blx	9214 <backtrace_symbols_fd@plt>
   2c1cc:	blx	91c0 <abort@plt>
   2c1d0:			; <UNDEFINED> instruction: 0xeb920003
   2c1d4:	lsls	r0, r1, #10
   2c1d6:	movs	r0, r0
   2c1d8:			; <UNDEFINED> instruction: 0xeb860003
   2c1dc:	lsls	r4, r3, #10
   2c1de:	movs	r0, r0
   2c1e0:	movs	r1, #170	; 0xaa
   2c1e2:	movs	r1, r0
   2c1e4:	str	r1, [sp, #472]	; 0x1d8
   2c1e6:	movs	r1, r0

0002c1e8 <btrfs_find_last_root@@Base>:
   2c1e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c1ec:	mov	r6, r2
   2c1ee:	ldr	r2, [pc, #276]	; (2c304 <btrfs_find_last_root@@Base+0x11c>)
   2c1f0:	mov	r7, r3
   2c1f2:	ldr	r3, [pc, #276]	; (2c308 <btrfs_find_last_root@@Base+0x120>)
   2c1f4:	sub	sp, #76	; 0x4c
   2c1f6:	add	r2, pc
   2c1f8:	str	r0, [sp, #12]
   2c1fa:	ldr	r3, [r2, r3]
   2c1fc:	ldrd	fp, r5, [sp, #112]	; 0x70
   2c200:	ldr	r3, [r3, #0]
   2c202:	str	r3, [sp, #68]	; 0x44
   2c204:	mov.w	r3, #0
   2c208:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2c20c:	mov	r4, r0
   2c20e:	cmp	r0, #0
   2c210:	beq.n	2c2f4 <btrfs_find_last_root@@Base+0x10c>
   2c212:	mov.w	r8, #0
   2c216:	mov.w	r2, #4294967295	; 0xffffffff
   2c21a:	movs	r3, #132	; 0x84
   2c21c:	strb.w	r2, [sp, #37]	; 0x25
   2c220:	strb.w	r3, [sp, #36]	; 0x24
   2c224:	mov	r3, r0
   2c226:	strb.w	r2, [sp, #38]	; 0x26
   2c22a:	mov	r0, r8
   2c22c:	strb.w	r2, [sp, #39]	; 0x27
   2c230:	strb.w	r2, [sp, #40]	; 0x28
   2c234:	strb.w	r2, [sp, #41]	; 0x29
   2c238:	strb.w	r2, [sp, #42]	; 0x2a
   2c23c:	strb.w	r2, [sp, #43]	; 0x2b
   2c240:	strb.w	r2, [sp, #44]	; 0x2c
   2c244:	add	r2, sp, #28
   2c246:	ldr	r1, [sp, #12]
   2c248:	strd	r8, r8, [sp]
   2c24c:	strd	r6, r7, [sp, #28]
   2c250:	bl	1eadc <btrfs_search_slot@@Base>
   2c254:	subs.w	r9, r0, #0
   2c258:	blt.n	2c262 <btrfs_find_last_root@@Base+0x7a>
   2c25a:	ldr	r2, [r4, #32]
   2c25c:	cbnz	r2, 2c27c <btrfs_find_last_root@@Base+0x94>
   2c25e:	mvn.w	r9, #1
   2c262:	mov	r0, r4
   2c264:	bl	1c71e <btrfs_free_path@@Base>
   2c268:	ldr	r2, [pc, #160]	; (2c30c <btrfs_find_last_root@@Base+0x124>)
   2c26a:	ldr	r3, [pc, #156]	; (2c308 <btrfs_find_last_root@@Base+0x120>)
   2c26c:	add	r2, pc
   2c26e:	ldr	r3, [r2, r3]
   2c270:	ldr	r2, [r3, #0]
   2c272:	ldr	r3, [sp, #68]	; 0x44
   2c274:	eors	r2, r3
   2c276:	beq.n	2c2fa <btrfs_find_last_root@@Base+0x112>
   2c278:	blx	8c90 <__stack_chk_fail@plt>
   2c27c:	cmp.w	r9, #0
   2c280:	bne.n	2c292 <btrfs_find_last_root@@Base+0xaa>
   2c282:	ldr	r1, [pc, #140]	; (2c310 <btrfs_find_last_root@@Base+0x128>)
   2c284:	movs	r3, #1
   2c286:	ldr	r0, [pc, #140]	; (2c314 <btrfs_find_last_root@@Base+0x12c>)
   2c288:	movs	r2, #50	; 0x32
   2c28a:	add	r1, pc
   2c28c:	add	r0, pc
   2c28e:	bl	2c180 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2c292:	subs	r2, #1
   2c294:	movs	r3, #25
   2c296:	ldr	r0, [r4, #0]
   2c298:	add	r1, sp, #48	; 0x30
   2c29a:	muls	r2, r3
   2c29c:	movs	r3, #17
   2c29e:	str	r0, [sp, #16]
   2c2a0:	adds	r2, #101	; 0x65
   2c2a2:	str	r2, [sp, #20]
   2c2a4:	bl	1bbba <read_extent_buffer@@Base>
   2c2a8:	ldrb.w	r9, [sp, #56]	; 0x38
   2c2ac:	ldr.w	r3, [sp, #61]	; 0x3d
   2c2b0:	cmp.w	r9, #132	; 0x84
   2c2b4:	ldr.w	sl, [sp, #57]	; 0x39
   2c2b8:	str	r3, [sp, #12]
   2c2ba:	ldrd	r2, r3, [sp, #48]	; 0x30
   2c2be:	bne.n	2c25e <btrfs_find_last_root@@Base+0x76>
   2c2c0:	cmp	r7, r3
   2c2c2:	it	eq
   2c2c4:	cmpeq	r6, r2
   2c2c6:	ldrd	r0, r2, [sp, #16]
   2c2ca:	bne.n	2c25e <btrfs_find_last_root@@Base+0x76>
   2c2cc:	add	r2, r0
   2c2ce:	movw	r3, #439	; 0x1b7
   2c2d2:	mov	r1, fp
   2c2d4:	ldr.w	r2, [r2, #113]	; 0x71
   2c2d8:	adds	r2, #101	; 0x65
   2c2da:	bl	1bbba <read_extent_buffer@@Base>
   2c2de:	ldr	r3, [sp, #12]
   2c2e0:	strb.w	r9, [r5, #8]
   2c2e4:	mov	r9, r8
   2c2e6:	str	r6, [r5, #0]
   2c2e8:	str	r7, [r5, #4]
   2c2ea:	str.w	sl, [r5, #9]
   2c2ee:	str.w	r3, [r5, #13]
   2c2f2:	b.n	2c262 <btrfs_find_last_root@@Base+0x7a>
   2c2f4:	mvn.w	r9, #11
   2c2f8:	b.n	2c268 <btrfs_find_last_root@@Base+0x80>
   2c2fa:	mov	r0, r9
   2c2fc:	add	sp, #76	; 0x4c
   2c2fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c302:	nop
   2c304:			; <UNDEFINED> instruction: 0xeb220003
   2c308:	lsls	r0, r1, #10
   2c30a:	movs	r0, r0
   2c30c:			; <UNDEFINED> instruction: 0xeaac0003
   2c310:	str	r0, [sp, #716]	; 0x2cc
   2c312:	movs	r1, r0
   2c314:	subs	r6, #21
   2c316:	movs	r1, r0

0002c318 <btrfs_update_root@@Base>:
   2c318:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c31c:	mov	r8, r2
   2c31e:	ldr	r2, [pc, #284]	; (2c43c <btrfs_update_root@@Base+0x124>)
   2c320:	mov	r6, r3
   2c322:	ldr	r3, [pc, #284]	; (2c440 <btrfs_update_root@@Base+0x128>)
   2c324:	sub	sp, #20
   2c326:	add	r2, pc
   2c328:	mov	r7, r0
   2c32a:	mov	fp, r1
   2c32c:	ldr	r3, [r2, r3]
   2c32e:	ldr	r3, [r3, #0]
   2c330:	str	r3, [sp, #12]
   2c332:	mov.w	r3, #0
   2c336:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2c33a:	mov	r5, r0
   2c33c:	cmp	r0, #0
   2c33e:	beq.n	2c42c <btrfs_update_root@@Base+0x114>
   2c340:	movs	r3, #0
   2c342:	mov.w	r9, #1
   2c346:	mov	r2, r8
   2c348:	strd	r3, r9, [sp]
   2c34c:	mov	r1, fp
   2c34e:	mov	r3, r0
   2c350:	mov	r0, r7
   2c352:	bl	1eadc <btrfs_search_slot@@Base>
   2c356:	subs	r4, r0, #0
   2c358:	blt.n	2c3ae <btrfs_update_root@@Base+0x96>
   2c35a:	beq.n	2c36e <btrfs_update_root@@Base+0x56>
   2c35c:	ldr	r1, [pc, #228]	; (2c444 <btrfs_update_root@@Base+0x12c>)
   2c35e:	mov	r3, r9
   2c360:	ldr	r0, [pc, #228]	; (2c448 <btrfs_update_root@@Base+0x130>)
   2c362:	movs	r2, #86	; 0x56
   2c364:	add	r1, pc
   2c366:	adds	r1, #21
   2c368:	add	r0, pc
   2c36a:	bl	2c180 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2c36e:	ldr	r0, [r5, #0]
   2c370:	mov.w	sl, #25
   2c374:	ldr	r3, [r5, #32]
   2c376:	mla	r3, sl, r3, r0
   2c37a:	add.w	r2, r3, #197	; 0xc5
   2c37e:	ldr.w	r3, [r3, #218]	; 0xda
   2c382:	cmp.w	r3, #438	; 0x1b6
   2c386:	bls.n	2c3c8 <btrfs_update_root@@Base+0xb0>
   2c388:	ldr.w	r2, [r2, #17]
   2c38c:	ldr.w	r1, [r6, #160]	; 0xa0
   2c390:	adds	r2, #101	; 0x65
   2c392:	ldr.w	r3, [r6, #164]	; 0xa4
   2c396:	str.w	r1, [r6, #239]	; 0xef
   2c39a:	mov	r1, r6
   2c39c:	str.w	r3, [r6, #243]	; 0xf3
   2c3a0:	movw	r3, #439	; 0x1b7
   2c3a4:	bl	1bbd0 <write_extent_buffer@@Base>
   2c3a8:	ldr	r0, [r5, #0]
   2c3aa:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2c3ae:	mov	r0, r5
   2c3b0:	bl	1c71e <btrfs_free_path@@Base>
   2c3b4:	ldr	r2, [pc, #148]	; (2c44c <btrfs_update_root@@Base+0x134>)
   2c3b6:	ldr	r3, [pc, #136]	; (2c440 <btrfs_update_root@@Base+0x128>)
   2c3b8:	add	r2, pc
   2c3ba:	ldr	r3, [r2, r3]
   2c3bc:	ldr	r2, [r3, #0]
   2c3be:	ldr	r3, [sp, #12]
   2c3c0:	eors	r2, r3
   2c3c2:	beq.n	2c432 <btrfs_update_root@@Base+0x11a>
   2c3c4:	blx	8c90 <__stack_chk_fail@plt>
   2c3c8:	mov	r0, r5
   2c3ca:	bl	1c6f8 <btrfs_release_path@@Base>
   2c3ce:	mov.w	r3, #4294967295	; 0xffffffff
   2c3d2:	mov	r2, r8
   2c3d4:	str	r3, [sp, #0]
   2c3d6:	mov	r1, fp
   2c3d8:	mov	r3, r5
   2c3da:	mov	r0, r7
   2c3dc:	str.w	r9, [sp, #4]
   2c3e0:	bl	1eadc <btrfs_search_slot@@Base>
   2c3e4:	subs	r4, r0, #0
   2c3e6:	blt.n	2c3ae <btrfs_update_root@@Base+0x96>
   2c3e8:	str.w	r9, [sp]
   2c3ec:	mov	r2, r5
   2c3ee:	ldr	r3, [r5, #32]
   2c3f0:	mov	r1, fp
   2c3f2:	mov	r0, r7
   2c3f4:	bl	1fc98 <btrfs_del_items@@Base>
   2c3f8:	subs	r4, r0, #0
   2c3fa:	blt.n	2c3ae <btrfs_update_root@@Base+0x96>
   2c3fc:	mov	r0, r5
   2c3fe:	bl	1c6f8 <btrfs_release_path@@Base>
   2c402:	movw	r3, #439	; 0x1b7
   2c406:	mov	r2, r5
   2c408:	strd	r9, r3, [sp, #4]
   2c40c:	mov	r1, fp
   2c40e:	add	r3, sp, #8
   2c410:	mov	r0, r7
   2c412:	str	r3, [sp, #0]
   2c414:	mov	r3, r8
   2c416:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2c41a:	subs	r4, r0, #0
   2c41c:	blt.n	2c3ae <btrfs_update_root@@Base+0x96>
   2c41e:	ldr	r0, [r5, #0]
   2c420:	ldr	r3, [r5, #32]
   2c422:	mla	r3, sl, r3, r0
   2c426:	ldr.w	r2, [r3, #214]	; 0xd6
   2c42a:	b.n	2c38c <btrfs_update_root@@Base+0x74>
   2c42c:	mvn.w	r4, #11
   2c430:	b.n	2c3b4 <btrfs_update_root@@Base+0x9c>
   2c432:	mov	r0, r4
   2c434:	add	sp, #20
   2c436:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c43a:	nop
   2c43c:	ldrd	r0, r0, [r2, #12]!
   2c440:	lsls	r0, r1, #10
   2c442:	movs	r0, r0
   2c444:	ldrh	r1, [r3, #62]	; 0x3e
   2c446:	movs	r1, r0
   2c448:	ldrh	r4, [r1, #62]	; 0x3e
   2c44a:	movs	r1, r0
   2c44c:	strd	r0, r0, [r0, #-12]!

0002c450 <btrfs_insert_root@@Base>:
   2c450:	push	{r0, r1, r4, r5, r6, lr}
   2c452:	movw	r4, #439	; 0x1b7
   2c456:	ldr.w	r6, [r3, #160]	; 0xa0
   2c45a:	ldr.w	r5, [r3, #164]	; 0xa4
   2c45e:	str	r4, [sp, #0]
   2c460:	str.w	r6, [r3, #239]	; 0xef
   2c464:	str.w	r5, [r3, #243]	; 0xf3
   2c468:	bl	1fb68 <btrfs_insert_item@@Base>
   2c46c:	add	sp, #8
   2c46e:	pop	{r4, r5, r6, pc}

0002c470 <btrfs_del_root@@Base>:
   2c470:	push	{r4, r5, r6, r7, lr}
   2c472:	sub	sp, #20
   2c474:	mov	r6, r0
   2c476:	strd	r2, r1, [sp, #8]
   2c47a:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2c47e:	mov	r5, r0
   2c480:	cbz	r0, 2c4c2 <btrfs_del_root@@Base+0x52>
   2c482:	ldrd	r2, r1, [sp, #8]
   2c486:	mov.w	r3, #4294967295	; 0xffffffff
   2c48a:	movs	r7, #1
   2c48c:	strd	r3, r7, [sp]
   2c490:	mov	r3, r0
   2c492:	mov	r0, r6
   2c494:	str	r1, [sp, #8]
   2c496:	bl	1eadc <btrfs_search_slot@@Base>
   2c49a:	subs	r4, r0, #0
   2c49c:	blt.n	2c4b0 <btrfs_del_root@@Base+0x40>
   2c49e:	bne.n	2c4bc <btrfs_del_root@@Base+0x4c>
   2c4a0:	str	r7, [sp, #0]
   2c4a2:	mov	r2, r5
   2c4a4:	ldr	r3, [r5, #32]
   2c4a6:	mov	r0, r6
   2c4a8:	ldr	r1, [sp, #8]
   2c4aa:	bl	1fc98 <btrfs_del_items@@Base>
   2c4ae:	mov	r4, r0
   2c4b0:	mov	r0, r5
   2c4b2:	bl	1c71e <btrfs_free_path@@Base>
   2c4b6:	mov	r0, r4
   2c4b8:	add	sp, #20
   2c4ba:	pop	{r4, r5, r6, r7, pc}
   2c4bc:	mvn.w	r4, #1
   2c4c0:	b.n	2c4b0 <btrfs_del_root@@Base+0x40>
   2c4c2:	mvn.w	r4, #11
   2c4c6:	b.n	2c4b6 <btrfs_del_root@@Base+0x46>

0002c4c8 <btrfs_add_root_ref@@Base>:
   2c4c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4cc:	sub	sp, #68	; 0x44
   2c4ce:	mov	r7, r3
   2c4d0:	mov	fp, r2
   2c4d2:	ldr	r3, [sp, #116]	; 0x74
   2c4d4:	mov	r6, r0
   2c4d6:	ldr	r2, [sp, #112]	; 0x70
   2c4d8:	str	r1, [sp, #28]
   2c4da:	str	r3, [sp, #20]
   2c4dc:	ldr	r3, [sp, #128]	; 0x80
   2c4de:	str	r2, [sp, #24]
   2c4e0:	ldr	r2, [pc, #208]	; (2c5b4 <btrfs_add_root_ref@@Base+0xec>)
   2c4e2:	str	r3, [sp, #12]
   2c4e4:	ldr	r3, [sp, #132]	; 0x84
   2c4e6:	add	r2, pc
   2c4e8:	ldrd	sl, r9, [sp, #120]	; 0x78
   2c4ec:	ldrd	r8, r5, [sp, #136]	; 0x88
   2c4f0:	str	r3, [sp, #16]
   2c4f2:	ldr	r3, [pc, #196]	; (2c5b8 <btrfs_add_root_ref@@Base+0xf0>)
   2c4f4:	ldr	r3, [r2, r3]
   2c4f6:	ldr	r3, [r3, #0]
   2c4f8:	str	r3, [sp, #60]	; 0x3c
   2c4fa:	mov.w	r3, #0
   2c4fe:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2c502:	mov	r4, r0
   2c504:	cmp	r0, #0
   2c506:	beq.n	2c5a6 <btrfs_add_root_ref@@Base+0xde>
   2c508:	ldrb.w	r0, [sp, #104]	; 0x68
   2c50c:	ldr	r2, [sp, #24]
   2c50e:	ldr	r3, [sp, #20]
   2c510:	strb.w	r0, [sp, #48]	; 0x30
   2c514:	mov	r0, r6
   2c516:	str.w	r2, [sp, #49]	; 0x31
   2c51a:	mov	r2, r4
   2c51c:	str.w	r3, [sp, #53]	; 0x35
   2c520:	add.w	r3, r5, #18
   2c524:	ldr	r1, [sp, #28]
   2c526:	str	r3, [sp, #36]	; 0x24
   2c528:	movs	r3, #1
   2c52a:	str	r3, [sp, #4]
   2c52c:	add	r3, sp, #36	; 0x24
   2c52e:	str	r3, [sp, #0]
   2c530:	add	r3, sp, #40	; 0x28
   2c532:	strd	fp, r7, [sp, #40]	; 0x28
   2c536:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2c53a:	mov	r6, r0
   2c53c:	cbz	r0, 2c550 <btrfs_add_root_ref@@Base+0x88>
   2c53e:	ldr	r1, [pc, #124]	; (2c5bc <btrfs_add_root_ref@@Base+0xf4>)
   2c540:	mov	r3, r0
   2c542:	ldr	r0, [pc, #124]	; (2c5c0 <btrfs_add_root_ref@@Base+0xf8>)
   2c544:	movs	r2, #209	; 0xd1
   2c546:	add	r1, pc
   2c548:	adds	r1, #39	; 0x27
   2c54a:	add	r0, pc
   2c54c:	bl	2c180 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2c550:	ldr	r0, [r4, #0]
   2c552:	movs	r2, #25
   2c554:	ldr	r3, [r4, #32]
   2c556:	add.w	r1, r0, #96	; 0x60
   2c55a:	mla	r3, r2, r3, r1
   2c55e:	ldr.w	r2, [r3, #118]	; 0x76
   2c562:	add.w	r7, r2, #101	; 0x65
   2c566:	adds	r2, #119	; 0x77
   2c568:	adds	r3, r1, r7
   2c56a:	str.w	sl, [r1, r7]
   2c56e:	ldr	r1, [sp, #12]
   2c570:	str.w	r9, [r3, #4]
   2c574:	strh	r5, [r3, #16]
   2c576:	str	r1, [r3, #8]
   2c578:	ldr	r1, [sp, #16]
   2c57a:	str	r0, [sp, #12]
   2c57c:	str	r1, [r3, #12]
   2c57e:	mov	r3, r5
   2c580:	mov	r1, r8
   2c582:	bl	1bbd0 <write_extent_buffer@@Base>
   2c586:	ldr	r0, [sp, #12]
   2c588:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2c58c:	mov	r0, r4
   2c58e:	bl	1c71e <btrfs_free_path@@Base>
   2c592:	ldr	r2, [pc, #48]	; (2c5c4 <btrfs_add_root_ref@@Base+0xfc>)
   2c594:	ldr	r3, [pc, #32]	; (2c5b8 <btrfs_add_root_ref@@Base+0xf0>)
   2c596:	add	r2, pc
   2c598:	ldr	r3, [r2, r3]
   2c59a:	ldr	r2, [r3, #0]
   2c59c:	ldr	r3, [sp, #60]	; 0x3c
   2c59e:	eors	r2, r3
   2c5a0:	beq.n	2c5ac <btrfs_add_root_ref@@Base+0xe4>
   2c5a2:	blx	8c90 <__stack_chk_fail@plt>
   2c5a6:	mvn.w	r6, #11
   2c5aa:	b.n	2c592 <btrfs_add_root_ref@@Base+0xca>
   2c5ac:	mov	r0, r6
   2c5ae:	add	sp, #68	; 0x44
   2c5b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5b4:			; <UNDEFINED> instruction: 0xe8320003
   2c5b8:	lsls	r0, r1, #10
   2c5ba:	movs	r0, r0
   2c5bc:	ldrh	r7, [r6, #46]	; 0x2e
   2c5be:	movs	r1, r0
   2c5c0:	adds	r5, #248	; 0xf8
   2c5c2:	movs	r1, r0
   2c5c4:	b.n	2c4cc <btrfs_add_root_ref@@Base+0x4>
   2c5c6:	movs	r3, r0
   2c5c8:	push	{r4, r5, lr}
   2c5ca:	movs	r1, #0
   2c5cc:	ldr	r4, [r0, #40]	; 0x28
   2c5ce:	mov	r3, r1
   2c5d0:	ldr	r5, [r0, #64]	; 0x40
   2c5d2:	and.w	r2, r4, #128	; 0x80
   2c5d6:	orrs	r3, r2
   2c5d8:	bne.n	2c5ec <btrfs_add_root_ref@@Base+0x124>
   2c5da:	and.w	r2, r4, #256	; 0x100
   2c5de:	mov	r3, r1
   2c5e0:	orrs	r3, r2
   2c5e2:	ite	ne
   2c5e4:	movne	r0, #2
   2c5e6:	moveq	r0, r1
   2c5e8:	subs	r0, r5, r0
   2c5ea:	pop	{r4, r5, pc}
   2c5ec:	movs	r0, #1
   2c5ee:	b.n	2c5e8 <btrfs_add_root_ref@@Base+0x120>
   2c5f0:	push	{r3, r4, r5, r6, r7, lr}
   2c5f2:	mov	r6, r0
   2c5f4:	ldr	r3, [pc, #40]	; (2c620 <btrfs_add_root_ref@@Base+0x158>)
   2c5f6:	add	r3, pc
   2c5f8:	ldr	r4, [r3, #0]
   2c5fa:	mov	r5, r3
   2c5fc:	subs	r4, #80	; 0x50
   2c5fe:	add.w	r3, r4, #80	; 0x50
   2c602:	cmp	r5, r3
   2c604:	bne.n	2c60c <btrfs_add_root_ref@@Base+0x144>
   2c606:	movs	r4, #0
   2c608:	mov	r0, r4
   2c60a:	pop	{r3, r4, r5, r6, r7, pc}
   2c60c:	movs	r2, #16
   2c60e:	mov	r1, r4
   2c610:	mov	r0, r6
   2c612:	blx	8c1c <memcmp@plt+0x4>
   2c616:	cmp	r0, #0
   2c618:	beq.n	2c608 <btrfs_add_root_ref@@Base+0x140>
   2c61a:	ldr	r4, [r4, #80]	; 0x50
   2c61c:	subs	r4, #80	; 0x50
   2c61e:	b.n	2c5fe <btrfs_add_root_ref@@Base+0x136>
   2c620:	smlal	r0, r0, r2, r3
   2c624:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2c628:	add.w	r8, r0, #72	; 0x48
   2c62c:	ldr	r5, [sp, #24]
   2c62e:	mov	r6, r2
   2c630:	ldr	r4, [r0, #72]	; 0x48
   2c632:	mov	r7, r3
   2c634:	cmp	r4, r8
   2c636:	bne.n	2c640 <btrfs_add_root_ref@@Base+0x178>
   2c638:	movs	r4, #0
   2c63a:	mov	r0, r4
   2c63c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2c640:	ldrd	r2, r3, [r4, #64]	; 0x40
   2c644:	cmp	r3, r7
   2c646:	it	eq
   2c648:	cmpeq	r2, r6
   2c64a:	bne.n	2c660 <btrfs_add_root_ref@@Base+0x198>
   2c64c:	cmp	r5, #0
   2c64e:	beq.n	2c63a <btrfs_add_root_ref@@Base+0x172>
   2c650:	add.w	r0, r4, #112	; 0x70
   2c654:	movs	r2, #16
   2c656:	mov	r1, r5
   2c658:	blx	8c1c <memcmp@plt+0x4>
   2c65c:	cmp	r0, #0
   2c65e:	beq.n	2c63a <btrfs_add_root_ref@@Base+0x172>
   2c660:	ldr	r4, [r4, #0]
   2c662:	b.n	2c634 <btrfs_add_root_ref@@Base+0x16c>
   2c664:	push	{r3, r4, r5, r6, r7, lr}
   2c666:	mov	r1, r0
   2c668:	mov	r5, r3
   2c66a:	and.w	r6, r1, #1584	; 0x630
   2c66e:	movs	r3, #0
   2c670:	mov	r4, r2
   2c672:	mov	r7, r3
   2c674:	orrs.w	r2, r6, r7
   2c678:	ldr	r0, [sp, #24]
   2c67a:	bne.n	2c69a <btrfs_add_root_ref@@Base+0x1d2>
   2c67c:	and.w	r6, r1, #64	; 0x40
   2c680:	orrs.w	r2, r6, r7
   2c684:	beq.n	2c6a0 <btrfs_add_root_ref@@Base+0x1d8>
   2c686:	ldr	r1, [sp, #28]
   2c688:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   2c68c:	asrs	r3, r0, #31
   2c68e:	muls	r3, r4
   2c690:	mla	r3, r0, r5, r3
   2c694:	umull	r4, r5, r4, r0
   2c698:	add	r5, r3
   2c69a:	mov	r0, r4
   2c69c:	mov	r1, r5
   2c69e:	pop	{r3, r4, r5, r6, r7, pc}
   2c6a0:	and.w	r6, r1, #128	; 0x80
   2c6a4:	orrs.w	r2, r6, r7
   2c6a8:	beq.n	2c6ae <btrfs_add_root_ref@@Base+0x1e6>
   2c6aa:	subs	r0, #1
   2c6ac:	b.n	2c68c <btrfs_add_root_ref@@Base+0x1c4>
   2c6ae:	and.w	r6, r1, #256	; 0x100
   2c6b2:	orrs.w	r3, r6, r7
   2c6b6:	it	ne
   2c6b8:	subne	r0, #2
   2c6ba:	b.n	2c68c <btrfs_add_root_ref@@Base+0x1c4>
   2c6bc:	ldr.w	ip, [pc, #76]	; 2c70c <btrfs_add_root_ref@@Base+0x244>
   2c6c0:	ldr	r5, [pc, #76]	; (2c710 <btrfs_add_root_ref@@Base+0x248>)
   2c6c2:	add	ip, pc
   2c6c4:	ldr	r4, [pc, #76]	; (2c714 <btrfs_add_root_ref@@Base+0x24c>)
   2c6c6:	push	{lr}
   2c6c8:	sub	sp, #92	; 0x5c
   2c6ca:	ldr.w	r5, [ip, r5]
   2c6ce:	add	r4, pc
   2c6d0:	ldr	r5, [r5, #0]
   2c6d2:	str	r5, [sp, #84]	; 0x54
   2c6d4:	mov.w	r5, #0
   2c6d8:	ldr	r5, [pc, #60]	; (2c718 <btrfs_add_root_ref@@Base+0x250>)
   2c6da:	ldr	r4, [r4, r5]
   2c6dc:	ldr	r5, [sp, #96]	; 0x60
   2c6de:	strd	r3, r2, [sp]
   2c6e2:	mov	r3, r1
   2c6e4:	ldr	r2, [pc, #52]	; (2c71c <btrfs_add_root_ref@@Base+0x254>)
   2c6e6:	movs	r1, #1
   2c6e8:	strd	r0, r5, [sp, #8]
   2c6ec:	ldr	r0, [r4, #0]
   2c6ee:	add	r4, sp, #20
   2c6f0:	add	r2, pc
   2c6f2:	blx	9040 <__fprintf_chk@plt+0x4>
   2c6f6:	movs	r1, #16
   2c6f8:	mov	r0, r4
   2c6fa:	blx	8e98 <backtrace@plt>
   2c6fe:	movs	r2, #2
   2c700:	mov	r1, r0
   2c702:	mov	r0, r4
   2c704:	blx	9214 <backtrace_symbols_fd@plt>
   2c708:	blx	91c0 <abort@plt>
   2c70c:	b.n	2c3bc <btrfs_update_root@@Base+0xa4>
   2c70e:	movs	r3, r0
   2c710:	lsls	r0, r1, #10
   2c712:	movs	r0, r0
   2c714:	b.n	2c3ac <btrfs_update_root@@Base+0x94>
   2c716:	movs	r3, r0
   2c718:	lsls	r4, r3, #10
   2c71a:	movs	r0, r0
   2c71c:	adds	r6, r5, #1
   2c71e:	movs	r1, r0
   2c720:	push	{r0, r1, r4, lr}
   2c722:	ldr	r4, [sp, #16]
   2c724:	cbz	r4, 2c72c <btrfs_add_root_ref@@Base+0x264>
   2c726:	str	r4, [sp, #0]
   2c728:	bl	2c6bc <btrfs_add_root_ref@@Base+0x1f4>
   2c72c:	add	sp, #8
   2c72e:	pop	{r4, pc}
   2c730:	push	{r0, r1, r4, lr}
   2c732:	mov	r4, r0
   2c734:	clz	r0, r0
   2c738:	ldr	r2, [pc, #28]	; (2c758 <btrfs_add_root_ref@@Base+0x290>)
   2c73a:	ldr	r1, [pc, #32]	; (2c75c <btrfs_add_root_ref@@Base+0x294>)
   2c73c:	mov.w	r3, #322	; 0x142
   2c740:	lsrs	r0, r0, #5
   2c742:	str	r0, [sp, #0]
   2c744:	ldr	r0, [pc, #24]	; (2c760 <btrfs_add_root_ref@@Base+0x298>)
   2c746:	add	r2, pc
   2c748:	add	r1, pc
   2c74a:	add	r0, pc
   2c74c:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2c750:	lsls	r0, r4, #5
   2c752:	adds	r0, #48	; 0x30
   2c754:	add	sp, #8
   2c756:	pop	{r4, pc}
   2c758:	str	r3, [sp, #696]	; 0x2b8
   2c75a:	movs	r1, r0
   2c75c:	adds	r5, #170	; 0xaa
   2c75e:	movs	r1, r0
   2c760:	ldr	r0, [r5, #64]	; 0x40
   2c762:	movs	r1, r0
   2c764:	push	{r4, lr}
   2c766:	mov	r4, r1
   2c768:	ldr	r1, [pc, #84]	; (2c7c0 <btrfs_add_root_ref@@Base+0x2f8>)
   2c76a:	sub	sp, #24
   2c76c:	ldr	r3, [pc, #84]	; (2c7c4 <btrfs_add_root_ref@@Base+0x2fc>)
   2c76e:	add	r1, pc
   2c770:	ldr	r3, [r1, r3]
   2c772:	mov	r1, sp
   2c774:	ldr	r3, [r3, #0]
   2c776:	str	r3, [sp, #20]
   2c778:	mov.w	r3, #0
   2c77c:	movs	r3, #25
   2c77e:	muls	r2, r3
   2c780:	movs	r3, #17
   2c782:	adds	r2, #101	; 0x65
   2c784:	bl	1bbba <read_extent_buffer@@Base>
   2c788:	ldr.w	r3, [sp, #13]
   2c78c:	ldr.w	r2, [sp, #9]
   2c790:	str.w	r3, [r4, #13]
   2c794:	ldrb.w	r3, [sp, #8]
   2c798:	str.w	r2, [r4, #9]
   2c79c:	ldr	r2, [pc, #40]	; (2c7c8 <btrfs_add_root_ref@@Base+0x300>)
   2c79e:	strb	r3, [r4, #8]
   2c7a0:	ldr	r3, [sp, #0]
   2c7a2:	add	r2, pc
   2c7a4:	str	r3, [r4, #0]
   2c7a6:	ldr	r3, [sp, #4]
   2c7a8:	str	r3, [r4, #4]
   2c7aa:	ldr	r3, [pc, #24]	; (2c7c4 <btrfs_add_root_ref@@Base+0x2fc>)
   2c7ac:	ldr	r3, [r2, r3]
   2c7ae:	ldr	r2, [r3, #0]
   2c7b0:	ldr	r3, [sp, #20]
   2c7b2:	eors	r2, r3
   2c7b4:	beq.n	2c7ba <btrfs_add_root_ref@@Base+0x2f2>
   2c7b6:	blx	8c90 <__stack_chk_fail@plt>
   2c7ba:	add	sp, #24
   2c7bc:	pop	{r4, pc}
   2c7be:	nop
   2c7c0:	b.n	2c318 <btrfs_update_root@@Base>
   2c7c2:	movs	r3, r0
   2c7c4:	lsls	r0, r1, #10
   2c7c6:	movs	r0, r0
   2c7c8:	b.n	2c2b8 <btrfs_find_last_root@@Base+0xd0>
   2c7ca:	movs	r3, r0

0002c7cc <btrfs_close_devices@@Base>:
   2c7cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c7d0:	sub	sp, #20
   2c7d2:	ldr.w	sl, [pc, #188]	; 2c890 <btrfs_close_devices@@Base+0xc4>
   2c7d6:	mov	r4, r0
   2c7d8:	ldr	r7, [pc, #184]	; (2c894 <btrfs_close_devices@@Base+0xc8>)
   2c7da:	movs	r6, #0
   2c7dc:	add	sl, pc
   2c7de:	mov.w	r8, #0
   2c7e2:	mov.w	r9, #0
   2c7e6:	add	r7, pc
   2c7e8:	cmp	r4, #0
   2c7ea:	beq.n	2c88a <btrfs_close_devices@@Base+0xbe>
   2c7ec:	ldr.w	fp, [pc, #168]	; 2c898 <btrfs_close_devices@@Base+0xcc>
   2c7f0:	add	fp, pc
   2c7f2:	mov	r3, r4
   2c7f4:	ldr.w	r5, [r3, #72]!
   2c7f8:	cmp	r5, r3
   2c7fa:	bne.n	2c818 <btrfs_close_devices@@Base+0x4c>
   2c7fc:	ldr	r5, [r4, #92]	; 0x5c
   2c7fe:	movs	r3, #0
   2c800:	str	r3, [r4, #92]	; 0x5c
   2c802:	mov	r0, r4
   2c804:	ldrd	r2, r3, [r4, #80]	; 0x50
   2c808:	str	r3, [r2, #4]
   2c80a:	str	r2, [r3, #0]
   2c80c:	cmp	r5, #0
   2c80e:	beq.n	2c87e <btrfs_close_devices@@Base+0xb2>
   2c810:	blx	8b84 <free@plt+0x4>
   2c814:	mov	r4, r5
   2c816:	b.n	2c7e8 <btrfs_close_devices@@Base+0x1c>
   2c818:	ldr	r0, [r5, #24]
   2c81a:	adds	r3, r0, #1
   2c81c:	beq.n	2c862 <btrfs_close_devices@@Base+0x96>
   2c81e:	ldr	r3, [r5, #28]
   2c820:	cbz	r3, 2c83c <btrfs_close_devices@@Base+0x70>
   2c822:	blx	8aec <fsync@plt>
   2c826:	adds	r0, #1
   2c828:	bne.n	2c83c <btrfs_close_devices@@Base+0x70>
   2c82a:	ldrd	r2, r3, [r5, #64]	; 0x40
   2c82e:	mov	r0, fp
   2c830:	bl	1bca0 <__btrfs_warning@@Base>
   2c834:	blx	8f58 <__errno_location@plt>
   2c838:	ldr	r6, [r0, #0]
   2c83a:	negs	r6, r6
   2c83c:	movs	r3, #4
   2c83e:	strd	r8, r9, [sp]
   2c842:	str	r3, [sp, #8]
   2c844:	movs	r2, #0
   2c846:	ldr	r0, [r5, #24]
   2c848:	movs	r3, #0
   2c84a:	blx	8b28 <posix_fadvise64@plt>
   2c84e:	cbz	r0, 2c85c <btrfs_close_devices@@Base+0x90>
   2c850:	ldr	r3, [pc, #72]	; (2c89c <btrfs_close_devices@@Base+0xd0>)
   2c852:	mov	r0, sl
   2c854:	ldr	r3, [r7, r3]
   2c856:	ldr	r1, [r3, #0]
   2c858:	blx	91a8 <fputs@plt+0x4>
   2c85c:	ldr	r0, [r5, #24]
   2c85e:	blx	91e4 <close@plt>
   2c862:	ldrd	r2, r3, [r5]
   2c866:	str	r3, [r2, #4]
   2c868:	str	r2, [r3, #0]
   2c86a:	ldr	r0, [r5, #32]
   2c86c:	blx	8b84 <free@plt+0x4>
   2c870:	ldr	r0, [r5, #36]	; 0x24
   2c872:	blx	8b84 <free@plt+0x4>
   2c876:	mov	r0, r5
   2c878:	blx	8b84 <free@plt+0x4>
   2c87c:	b.n	2c7f2 <btrfs_close_devices@@Base+0x26>
   2c87e:	blx	8b84 <free@plt+0x4>
   2c882:	mov	r0, r6
   2c884:	add	sp, #20
   2c886:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c88a:	mov	r6, r4
   2c88c:	b.n	2c882 <btrfs_close_devices@@Base+0xb6>
   2c88e:	nop
   2c890:	str	r0, [r2, #64]	; 0x40
   2c892:	movs	r1, r0
   2c894:	b.n	2c2fc <btrfs_find_last_root@@Base+0x114>
   2c896:	movs	r3, r0
   2c898:	ldrh	r7, [r0, #28]
   2c89a:	movs	r1, r0
   2c89c:	lsls	r4, r3, #10
	...

0002c8a0 <btrfs_close_all_devices@@Base>:
   2c8a0:	push	{r4, lr}
   2c8a2:	ldr	r4, [pc, #20]	; (2c8b8 <btrfs_close_all_devices@@Base+0x18>)
   2c8a4:	add	r4, pc
   2c8a6:	ldr	r0, [r4, #0]
   2c8a8:	cmp	r0, r4
   2c8aa:	bne.n	2c8ae <btrfs_close_all_devices@@Base+0xe>
   2c8ac:	pop	{r4, pc}
   2c8ae:	subs	r0, #80	; 0x50
   2c8b0:	bl	2c7cc <btrfs_close_devices@@Base>
   2c8b4:	b.n	2c8a6 <btrfs_close_all_devices@@Base+0x6>
   2c8b6:	nop
   2c8b8:	ldrsb.w	r0, [r4, r3]

0002c8bc <btrfs_open_devices@@Base>:
   2c8bc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2c8c0:	mov	r5, r0
   2c8c2:	ldr.w	sl, [pc, #180]	; 2c978 <btrfs_open_devices@@Base+0xbc>
   2c8c6:	mov	r8, r1
   2c8c8:	ldr.w	r9, [pc, #176]	; 2c97c <btrfs_open_devices@@Base+0xc0>
   2c8cc:	ldr	r4, [r0, #72]	; 0x48
   2c8ce:	add	sl, pc
   2c8d0:	ldr	r6, [pc, #172]	; (2c980 <btrfs_open_devices@@Base+0xc4>)
   2c8d2:	add	r9, pc
   2c8d4:	add	r6, pc
   2c8d6:	add.w	r3, r5, #72	; 0x48
   2c8da:	cmp	r4, r3
   2c8dc:	bne.n	2c8e2 <btrfs_open_devices@@Base+0x26>
   2c8de:	movs	r6, #0
   2c8e0:	b.n	2c922 <btrfs_open_devices@@Base+0x66>
   2c8e2:	ldr	r0, [r4, #32]
   2c8e4:	cbnz	r0, 2c900 <btrfs_open_devices@@Base+0x44>
   2c8e6:	ldr	r3, [pc, #156]	; (2c984 <btrfs_open_devices@@Base+0xc8>)
   2c8e8:	mov	r2, r9
   2c8ea:	ldrd	r0, r1, [r4, #64]	; 0x40
   2c8ee:	ldr	r3, [r6, r3]
   2c8f0:	strd	r0, r1, [sp]
   2c8f4:	movs	r1, #1
   2c8f6:	ldr	r0, [r3, #0]
   2c8f8:	blx	9040 <__fprintf_chk@plt+0x4>
   2c8fc:	ldr	r4, [r4, #0]
   2c8fe:	b.n	2c8d6 <btrfs_open_devices@@Base+0x1a>
   2c900:	mov	r1, r8
   2c902:	blx	8f4c <__open64_2@plt>
   2c906:	subs	r7, r0, #0
   2c908:	bge.n	2c92a <btrfs_open_devices@@Base+0x6e>
   2c90a:	blx	8f58 <__errno_location@plt>
   2c90e:	ldr	r1, [r4, #32]
   2c910:	ldr	r6, [r0, #0]
   2c912:	ldr	r0, [pc, #116]	; (2c988 <btrfs_open_devices@@Base+0xcc>)
   2c914:	negs	r6, r6
   2c916:	add	r0, pc
   2c918:	bl	1bd1c <__btrfs_error@@Base>
   2c91c:	mov	r0, r5
   2c91e:	bl	2c7cc <btrfs_close_devices@@Base>
   2c922:	mov	r0, r6
   2c924:	add	sp, #16
   2c926:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2c92a:	movs	r3, #4
   2c92c:	movs	r2, #0
   2c92e:	str	r3, [sp, #8]
   2c930:	movs	r3, #0
   2c932:	strd	r2, r3, [sp]
   2c936:	blx	8b28 <posix_fadvise64@plt>
   2c93a:	cbz	r0, 2c948 <btrfs_open_devices@@Base+0x8c>
   2c93c:	ldr	r3, [pc, #68]	; (2c984 <btrfs_open_devices@@Base+0xc8>)
   2c93e:	mov	r0, sl
   2c940:	ldr	r3, [r6, r3]
   2c942:	ldr	r1, [r3, #0]
   2c944:	blx	91a8 <fputs@plt+0x4>
   2c948:	ldrd	r0, r1, [r4, #64]	; 0x40
   2c94c:	ldrd	r2, r3, [r5, #32]
   2c950:	cmp	r1, r3
   2c952:	it	eq
   2c954:	cmpeq	r0, r2
   2c956:	ldrd	r2, r3, [r5, #48]	; 0x30
   2c95a:	it	eq
   2c95c:	streq	r7, [r5, #64]	; 0x40
   2c95e:	ldrd	r0, r1, [r4, #64]	; 0x40
   2c962:	cmp	r1, r3
   2c964:	itt	eq
   2c966:	cmpeq	r0, r2
   2c968:	streq	r7, [r5, #68]	; 0x44
   2c96a:	tst.w	r8, #2
   2c96e:	str	r7, [r4, #24]
   2c970:	itt	ne
   2c972:	movne	r3, #1
   2c974:	strne	r3, [r4, #28]
   2c976:	b.n	2c8fc <btrfs_open_devices@@Base+0x40>
   2c978:	str	r6, [r3, #48]	; 0x30
   2c97a:	movs	r1, r0
   2c97c:	ldrh	r5, [r0, #22]
   2c97e:	movs	r1, r0
   2c980:	b.n	2c20c <btrfs_find_last_root@@Base+0x24>
   2c982:	movs	r3, r0
   2c984:	lsls	r4, r3, #10
   2c986:	movs	r0, r0
   2c988:	ldrh	r7, [r4, #20]
   2c98a:	movs	r1, r0

0002c98c <btrfs_scan_one_device@@Base>:
   2c98c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c990:	sub.w	sp, sp, #4128	; 0x1020
   2c994:	sub	sp, #12
   2c996:	mov	sl, r1
   2c998:	ldr	r1, [pc, #636]	; (2cc18 <btrfs_scan_one_device@@Base+0x28c>)
   2c99a:	mov	r4, r3
   2c99c:	str	r2, [sp, #28]
   2c99e:	add.w	r3, sp, #4128	; 0x1020
   2c9a2:	ldr	r2, [pc, #632]	; (2cc1c <btrfs_scan_one_device@@Base+0x290>)
   2c9a4:	add	r1, pc
   2c9a6:	adds	r3, #4
   2c9a8:	add.w	fp, sp, #40	; 0x28
   2c9ac:	sub.w	r5, fp, #4
   2c9b0:	ldr	r2, [r1, r2]
   2c9b2:	mov	r1, r5
   2c9b4:	ldr	r2, [r2, #0]
   2c9b6:	str	r2, [r3, #0]
   2c9b8:	mov.w	r2, #0
   2c9bc:	add.w	r3, sp, #4160	; 0x1040
   2c9c0:	adds	r3, #24
   2c9c2:	ldr	r3, [r3, #0]
   2c9c4:	str	r3, [sp, #0]
   2c9c6:	add.w	r3, sp, #4160	; 0x1040
   2c9ca:	adds	r3, #16
   2c9cc:	ldrd	r2, r3, [r3]
   2c9d0:	bl	21568 <btrfs_read_dev_super@@Base>
   2c9d4:	cmp	r0, #0
   2c9d6:	blt.w	2cc08 <btrfs_scan_one_device@@Base+0x27c>
   2c9da:	ldr.w	r3, [r5, #201]	; 0xc9
   2c9de:	movs	r2, #0
   2c9e0:	mov	r0, r2
   2c9e2:	str	r3, [sp, #16]
   2c9e4:	ldr.w	r3, [r5, #205]	; 0xcd
   2c9e8:	str	r3, [sp, #20]
   2c9ea:	ldr	r3, [r5, #60]	; 0x3c
   2c9ec:	and.w	r1, r3, #2
   2c9f0:	orrs.w	r3, r0, r1
   2c9f4:	mov.w	r1, #0
   2c9f8:	mov	r9, r1
   2c9fa:	add.w	r0, fp, #28
   2c9fe:	ite	eq
   2ca00:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   2ca04:	movne	r3, #1
   2ca06:	strd	r3, r2, [r4]
   2ca0a:	ldr.w	r3, [r5, #188]	; 0xbc
   2ca0e:	ldrd	r6, r7, [r5, #72]	; 0x48
   2ca12:	and.w	r8, r3, #1024	; 0x400
   2ca16:	orrs.w	r3, r8, r9
   2ca1a:	it	ne
   2ca1c:	addwne	r1, fp, #567	; 0x237
   2ca20:	bl	2c5f0 <btrfs_add_root_ref@@Base+0x128>
   2ca24:	mov	r4, r0
   2ca26:	cmp	r0, #0
   2ca28:	bne.n	2cb12 <btrfs_scan_one_device@@Base+0x186>
   2ca2a:	movs	r1, #96	; 0x60
   2ca2c:	movs	r0, #1
   2ca2e:	blx	8ab8 <calloc@plt+0x4>
   2ca32:	mov	r4, r0
   2ca34:	cbnz	r0, 2ca56 <btrfs_scan_one_device@@Base+0xca>
   2ca36:	mvn.w	r0, #11
   2ca3a:	ldr	r1, [pc, #484]	; (2cc20 <btrfs_scan_one_device@@Base+0x294>)
   2ca3c:	add.w	r3, sp, #4128	; 0x1020
   2ca40:	ldr	r2, [pc, #472]	; (2cc1c <btrfs_scan_one_device@@Base+0x290>)
   2ca42:	adds	r3, #4
   2ca44:	add	r1, pc
   2ca46:	ldr	r2, [r1, r2]
   2ca48:	ldr	r1, [r2, #0]
   2ca4a:	ldr	r2, [r3, #0]
   2ca4c:	eors	r1, r2
   2ca4e:	beq.w	2cc0e <btrfs_scan_one_device@@Base+0x282>
   2ca52:	blx	8c90 <__stack_chk_fail@plt>
   2ca56:	ldr	r2, [pc, #460]	; (2cc24 <btrfs_scan_one_device@@Base+0x298>)
   2ca58:	add.w	r3, r0, #72	; 0x48
   2ca5c:	strd	r3, r3, [r0, #72]	; 0x48
   2ca60:	add.w	r3, r0, #80	; 0x50
   2ca64:	add	r2, pc
   2ca66:	add.w	ip, r4, #16
   2ca6a:	ldr	r1, [r2, #0]
   2ca6c:	str	r3, [r2, #0]
   2ca6e:	str	r3, [r1, #4]
   2ca70:	add	r3, sp, #68	; 0x44
   2ca72:	strd	r1, r2, [r0, #80]	; 0x50
   2ca76:	ldmia	r3, {r0, r1, r2, r3}
   2ca78:	stmia.w	r4, {r0, r1, r2, r3}
   2ca7c:	orrs.w	r3, r8, r9
   2ca80:	beq.n	2cb08 <btrfs_scan_one_device@@Base+0x17c>
   2ca82:	addw	r3, sp, #607	; 0x25f
   2ca86:	addw	lr, sp, #623	; 0x26f
   2ca8a:	ldr	r0, [r3, #0]
   2ca8c:	adds	r3, #8
   2ca8e:	ldr.w	r1, [r3, #-4]
   2ca92:	cmp	r3, lr
   2ca94:	mov	r2, ip
   2ca96:	stmia	r2!, {r0, r1}
   2ca98:	mov	ip, r2
   2ca9a:	bne.n	2ca8a <btrfs_scan_one_device@@Base+0xfe>
   2ca9c:	ldrd	r2, r3, [sp, #16]
   2caa0:	strd	r6, r7, [r4, #40]	; 0x28
   2caa4:	strd	r2, r3, [r4, #32]
   2caa8:	mov.w	r2, #4294967295	; 0xffffffff
   2caac:	mov.w	r3, #4294967295	; 0xffffffff
   2cab0:	strd	r2, r3, [r4, #48]	; 0x30
   2cab4:	movs	r1, #128	; 0x80
   2cab6:	movs	r0, #1
   2cab8:	blx	8ab8 <calloc@plt+0x4>
   2cabc:	mov	r8, r0
   2cabe:	cmp	r0, #0
   2cac0:	beq.n	2ca36 <btrfs_scan_one_device@@Base+0xaa>
   2cac2:	mov.w	r3, #4294967295	; 0xffffffff
   2cac6:	str	r3, [r0, #24]
   2cac8:	ldrd	r2, r3, [sp, #16]
   2cacc:	add.w	ip, r0, #112	; 0x70
   2cad0:	addw	lr, sp, #319	; 0x13f
   2cad4:	strd	r6, r7, [r0, #56]	; 0x38
   2cad8:	strd	r2, r3, [r0, #64]	; 0x40
   2cadc:	addw	r3, sp, #303	; 0x12f
   2cae0:	ldr	r0, [r3, #0]
   2cae2:	adds	r3, #8
   2cae4:	ldr.w	r1, [r3, #-4]
   2cae8:	cmp	r3, lr
   2caea:	mov	r2, ip
   2caec:	stmia	r2!, {r0, r1}
   2caee:	mov	ip, r2
   2caf0:	bne.n	2cae0 <btrfs_scan_one_device@@Base+0x154>
   2caf2:	mov	r0, sl
   2caf4:	blx	8c78 <strdup@plt+0x4>
   2caf8:	mov	r9, r0
   2cafa:	str.w	r0, [r8, #32]
   2cafe:	cbnz	r0, 2cb62 <btrfs_scan_one_device@@Base+0x1d6>
   2cb00:	mov	r0, r8
   2cb02:	blx	8b84 <free@plt+0x4>
   2cb06:	b.n	2ca36 <btrfs_scan_one_device@@Base+0xaa>
   2cb08:	ldmia.w	r4, {r0, r1, r2, r3}
   2cb0c:	stmia.w	ip, {r0, r1, r2, r3}
   2cb10:	b.n	2ca9c <btrfs_scan_one_device@@Base+0x110>
   2cb12:	addw	r3, fp, #263	; 0x107
   2cb16:	str	r3, [sp, #0]
   2cb18:	ldrd	r2, r3, [sp, #16]
   2cb1c:	bl	2c624 <btrfs_add_root_ref@@Base+0x15c>
   2cb20:	mov	r8, r0
   2cb22:	cmp	r0, #0
   2cb24:	beq.n	2cab4 <btrfs_scan_one_device@@Base+0x128>
   2cb26:	ldr.w	r9, [r0, #32]
   2cb2a:	cmp.w	r9, #0
   2cb2e:	beq.n	2cb3a <btrfs_scan_one_device@@Base+0x1ae>
   2cb30:	mov	r1, sl
   2cb32:	mov	r0, r9
   2cb34:	blx	8b04 <strcmp@plt>
   2cb38:	cbz	r0, 2cbb6 <btrfs_scan_one_device@@Base+0x22a>
   2cb3a:	ldrd	r2, r3, [r8, #56]	; 0x38
   2cb3e:	cmp	r7, r3
   2cb40:	it	eq
   2cb42:	cmpeq	r6, r2
   2cb44:	bcs.n	2cbee <btrfs_scan_one_device@@Base+0x262>
   2cb46:	ldr	r0, [pc, #224]	; (2cc28 <btrfs_scan_one_device@@Base+0x29c>)
   2cb48:	mov	r1, sl
   2cb4a:	strd	r2, r3, [sp, #8]
   2cb4e:	mov	r2, r6
   2cb50:	add	r0, pc
   2cb52:	mov	r3, r7
   2cb54:	str.w	r9, [sp]
   2cb58:	bl	1bca0 <__btrfs_warning@@Base>
   2cb5c:	mvn.w	r0, #16
   2cb60:	b.n	2ca3a <btrfs_scan_one_device@@Base+0xae>
   2cb62:	addw	r0, sp, #335	; 0x14f
   2cb66:	blx	8c78 <strdup@plt+0x4>
   2cb6a:	str.w	r0, [r8, #36]	; 0x24
   2cb6e:	cbnz	r0, 2cb78 <btrfs_scan_one_device@@Base+0x1ec>
   2cb70:	mov	r0, r9
   2cb72:	blx	8b84 <free@plt+0x4>
   2cb76:	b.n	2cb00 <btrfs_scan_one_device@@Base+0x174>
   2cb78:	ldrd	r2, r3, [r5, #136]	; 0x88
   2cb7c:	strd	r2, r3, [r8, #40]	; 0x28
   2cb80:	ldrd	r2, r3, [r5, #120]	; 0x78
   2cb84:	strd	r2, r3, [r8, #48]	; 0x30
   2cb88:	ldr.w	r2, [r5, #209]	; 0xd1
   2cb8c:	ldr.w	r3, [r5, #213]	; 0xd5
   2cb90:	strd	r2, r3, [r8, #72]	; 0x48
   2cb94:	ldr.w	r2, [r5, #217]	; 0xd9
   2cb98:	ldr.w	r3, [r5, #221]	; 0xdd
   2cb9c:	strd	r2, r3, [r8, #80]	; 0x50
   2cba0:	mov	r3, r4
   2cba2:	ldr.w	r2, [r3, #72]!
   2cba6:	str.w	r8, [r2, #4]
   2cbaa:	strd	r2, r3, [r8]
   2cbae:	str.w	r8, [r4, #72]	; 0x48
   2cbb2:	str.w	r4, [r8, #12]
   2cbb6:	ldrd	r2, r3, [r4, #40]	; 0x28
   2cbba:	ldrd	r0, r1, [sp, #16]
   2cbbe:	cmp	r3, r7
   2cbc0:	it	eq
   2cbc2:	cmpeq	r2, r6
   2cbc4:	ittt	cc
   2cbc6:	strdcc	r6, r7, [r4, #40]	; 0x28
   2cbca:	ldrdcc	r2, r3, [sp, #16]
   2cbce:	strdcc	r2, r3, [r4, #32]
   2cbd2:	ldrd	r2, r3, [r4, #48]	; 0x30
   2cbd6:	cmp	r1, r3
   2cbd8:	it	eq
   2cbda:	cmpeq	r0, r2
   2cbdc:	ittt	cc
   2cbde:	movcc	r2, r0
   2cbe0:	movcc	r3, r1
   2cbe2:	strdcc	r2, r3, [r4, #48]	; 0x30
   2cbe6:	movs	r0, #0
   2cbe8:	ldr	r3, [sp, #28]
   2cbea:	str	r4, [r3, #0]
   2cbec:	b.n	2ca3a <btrfs_scan_one_device@@Base+0xae>
   2cbee:	mov	r0, sl
   2cbf0:	blx	8c78 <strdup@plt+0x4>
   2cbf4:	mov	r5, r0
   2cbf6:	cmp	r0, #0
   2cbf8:	beq.w	2ca36 <btrfs_scan_one_device@@Base+0xaa>
   2cbfc:	mov	r0, r9
   2cbfe:	blx	8b84 <free@plt+0x4>
   2cc02:	str.w	r5, [r8, #32]
   2cc06:	b.n	2cbb6 <btrfs_scan_one_device@@Base+0x22a>
   2cc08:	mvn.w	r0, #4
   2cc0c:	b.n	2ca3a <btrfs_scan_one_device@@Base+0xae>
   2cc0e:	add.w	sp, sp, #4128	; 0x1020
   2cc12:	add	sp, #12
   2cc14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cc18:	b.n	2d304 <btrfs_alloc_chunk@@Base+0x248>
   2cc1a:	movs	r3, r0
   2cc1c:	lsls	r0, r1, #10
   2cc1e:	movs	r0, r0
   2cc20:	b.n	2d1cc <btrfs_alloc_chunk@@Base+0x110>
   2cc22:	movs	r3, r0
   2cc24:			; <UNDEFINED> instruction: 0xf7540003
   2cc28:	ldrh	r1, [r1, #4]
   2cc2a:	movs	r1, r0

0002cc2c <btrfs_insert_dev_extent@@Base>:
   2cc2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cc30:	sub	sp, #52	; 0x34
   2cc32:	mov	r7, r3
   2cc34:	mov	r8, r2
   2cc36:	ldrd	sl, r3, [sp, #88]	; 0x58
   2cc3a:	mov	r4, r0
   2cc3c:	ldr	r2, [pc, #236]	; (2cd2c <btrfs_insert_dev_extent@@Base+0x100>)
   2cc3e:	mov	r6, r1
   2cc40:	ldr.w	r9, [sp, #100]	; 0x64
   2cc44:	str	r3, [sp, #8]
   2cc46:	add	r2, pc
   2cc48:	ldr	r3, [sp, #96]	; 0x60
   2cc4a:	ldr.w	fp, [r1, #8]
   2cc4e:	str	r3, [sp, #12]
   2cc50:	ldr	r3, [pc, #220]	; (2cd30 <btrfs_insert_dev_extent@@Base+0x104>)
   2cc52:	ldr	r3, [r2, r3]
   2cc54:	ldr	r3, [r3, #0]
   2cc56:	str	r3, [sp, #44]	; 0x2c
   2cc58:	mov.w	r3, #0
   2cc5c:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2cc60:	mov	r5, r0
   2cc62:	cmp	r0, #0
   2cc64:	beq.n	2cd1e <btrfs_insert_dev_extent@@Base+0xf2>
   2cc66:	ldrd	r0, r1, [r6, #64]	; 0x40
   2cc6a:	mov	r2, r5
   2cc6c:	ldr	r3, [sp, #12]
   2cc6e:	str.w	r9, [sp, #37]	; 0x25
   2cc72:	mov.w	r9, #1
   2cc76:	strd	r0, r1, [sp, #24]
   2cc7a:	mov	r1, fp
   2cc7c:	str.w	r3, [sp, #33]	; 0x21
   2cc80:	mov	r0, r4
   2cc82:	movs	r3, #204	; 0xcc
   2cc84:	str.w	r9, [sp, #4]
   2cc88:	strb.w	r3, [sp, #32]
   2cc8c:	movs	r3, #48	; 0x30
   2cc8e:	str	r3, [sp, #20]
   2cc90:	add	r3, sp, #20
   2cc92:	str	r3, [sp, #0]
   2cc94:	add	r3, sp, #24
   2cc96:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2cc9a:	subs	r6, r0, #0
   2cc9c:	blt.n	2cd04 <btrfs_insert_dev_extent@@Base+0xd8>
   2cc9e:	ldr	r0, [r5, #0]
   2cca0:	movs	r2, #25
   2cca2:	ldr	r3, [r5, #32]
   2cca4:	mov.w	lr, #3
   2cca8:	add.w	r1, r0, #96	; 0x60
   2ccac:	str	r0, [sp, #12]
   2ccae:	mla	r3, r2, r3, r1
   2ccb2:	ldr.w	r2, [r3, #118]	; 0x76
   2ccb6:	movs	r3, #0
   2ccb8:	add.w	ip, r2, #101	; 0x65
   2ccbc:	adds	r2, #133	; 0x85
   2ccbe:	add.w	r4, r1, ip
   2ccc2:	strb.w	lr, [r1, ip]
   2ccc6:	strb	r3, [r4, #1]
   2ccc8:	strb	r3, [r4, #2]
   2ccca:	strb	r3, [r4, #3]
   2cccc:	strb	r3, [r4, #4]
   2ccce:	strb	r3, [r4, #5]
   2ccd0:	strb	r3, [r4, #6]
   2ccd2:	strb	r3, [r4, #7]
   2ccd4:	strb	r3, [r4, #8]
   2ccd6:	strb	r3, [r4, #10]
   2ccd8:	strb	r3, [r4, #11]
   2ccda:	strb	r3, [r4, #12]
   2ccdc:	strb	r3, [r4, #13]
   2ccde:	strb	r3, [r4, #14]
   2cce0:	strb	r3, [r4, #15]
   2cce2:	movs	r3, #16
   2cce4:	strb.w	r9, [r4, #9]
   2cce8:	str.w	r8, [r4, #16]
   2ccec:	str	r7, [r4, #20]
   2ccee:	ldr.w	r1, [fp, #464]	; 0x1d0
   2ccf2:	bl	1bbd0 <write_extent_buffer@@Base>
   2ccf6:	ldr	r3, [sp, #8]
   2ccf8:	ldr	r0, [sp, #12]
   2ccfa:	str.w	sl, [r4, #24]
   2ccfe:	str	r3, [r4, #28]
   2cd00:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2cd04:	mov	r0, r5
   2cd06:	bl	1c71e <btrfs_free_path@@Base>
   2cd0a:	ldr	r2, [pc, #40]	; (2cd34 <btrfs_insert_dev_extent@@Base+0x108>)
   2cd0c:	ldr	r3, [pc, #32]	; (2cd30 <btrfs_insert_dev_extent@@Base+0x104>)
   2cd0e:	add	r2, pc
   2cd10:	ldr	r3, [r2, r3]
   2cd12:	ldr	r2, [r3, #0]
   2cd14:	ldr	r3, [sp, #44]	; 0x2c
   2cd16:	eors	r2, r3
   2cd18:	beq.n	2cd24 <btrfs_insert_dev_extent@@Base+0xf8>
   2cd1a:	blx	8c90 <__stack_chk_fail@plt>
   2cd1e:	mvn.w	r6, #11
   2cd22:	b.n	2cd0a <btrfs_insert_dev_extent@@Base+0xde>
   2cd24:	mov	r0, r6
   2cd26:	add	sp, #52	; 0x34
   2cd28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cd2c:	b.n	2ced4 <btrfs_add_device@@Base+0x19c>
   2cd2e:	movs	r3, r0
   2cd30:	lsls	r0, r1, #10
   2cd32:	movs	r0, r0
   2cd34:	b.n	2cd4c <btrfs_add_device@@Base+0x14>
   2cd36:	movs	r3, r0

0002cd38 <btrfs_add_device@@Base>:
   2cd38:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd3c:	mov	r5, r2
   2cd3e:	vpush	{d8}
   2cd42:	mov	sl, r1
   2cd44:	ldr	r2, [pc, #536]	; (2cf60 <btrfs_add_device@@Base+0x228>)
   2cd46:	ldr	r3, [pc, #540]	; (2cf64 <btrfs_add_device@@Base+0x22c>)
   2cd48:	add	r2, pc
   2cd4a:	vmov	s16, r0
   2cd4e:	sub	sp, #68	; 0x44
   2cd50:	ldr.w	fp, [r1, #32]
   2cd54:	ldr	r3, [r2, r3]
   2cd56:	ldr	r3, [r3, #0]
   2cd58:	str	r3, [sp, #60]	; 0x3c
   2cd5a:	mov.w	r3, #0
   2cd5e:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2cd62:	mov	r6, r0
   2cd64:	cmp	r0, #0
   2cd66:	beq.w	2cf4e <btrfs_add_device@@Base+0x216>
   2cd6a:	mov.w	r9, #0
   2cd6e:	movs	r3, #1
   2cd70:	strd	r3, r9, [sp, #20]
   2cd74:	add	r3, sp, #20
   2cd76:	str	r3, [sp, #12]
   2cd78:	mov.w	r2, #4294967295	; 0xffffffff
   2cd7c:	mov	r3, r0
   2cd7e:	strb.w	r2, [sp, #29]
   2cd82:	strb.w	r2, [sp, #30]
   2cd86:	mov	r1, fp
   2cd88:	strb.w	r2, [sp, #31]
   2cd8c:	mov	r0, r9
   2cd8e:	strb.w	r2, [sp, #32]
   2cd92:	movs	r7, #216	; 0xd8
   2cd94:	strb.w	r2, [sp, #33]	; 0x21
   2cd98:	strb.w	r2, [sp, #34]	; 0x22
   2cd9c:	strb.w	r2, [sp, #35]	; 0x23
   2cda0:	strb.w	r2, [sp, #36]	; 0x24
   2cda4:	strd	r9, r9, [sp]
   2cda8:	ldr	r2, [sp, #12]
   2cdaa:	strb.w	r7, [sp, #28]
   2cdae:	bl	1eadc <btrfs_search_slot@@Base>
   2cdb2:	subs	r4, r0, #0
   2cdb4:	blt.w	2cf3e <btrfs_add_device@@Base+0x206>
   2cdb8:	ldr	r2, [pc, #428]	; (2cf68 <btrfs_add_device@@Base+0x230>)
   2cdba:	it	eq
   2cdbc:	moveq	r3, #1
   2cdbe:	ldr	r1, [pc, #428]	; (2cf6c <btrfs_add_device@@Base+0x234>)
   2cdc0:	it	ne
   2cdc2:	movne	r3, r9
   2cdc4:	ldr	r0, [pc, #424]	; (2cf70 <btrfs_add_device@@Base+0x238>)
   2cdc6:	add	r2, pc
   2cdc8:	adds	r2, #22
   2cdca:	add	r1, pc
   2cdcc:	add	r0, pc
   2cdce:	str	r3, [sp, #0]
   2cdd0:	movw	r3, #719	; 0x2cf
   2cdd4:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2cdd8:	movs	r2, #1
   2cdda:	movs	r3, #0
   2cddc:	mov	r1, r6
   2cdde:	mov	r0, fp
   2cde0:	str	r7, [sp, #0]
   2cde2:	bl	20194 <btrfs_previous_item@@Base>
   2cde6:	mov	r4, r0
   2cde8:	cmp	r0, #0
   2cdea:	bne.w	2cf44 <btrfs_add_device@@Base+0x20c>
   2cdee:	ldr	r2, [r6, #32]
   2cdf0:	add	r1, sp, #40	; 0x28
   2cdf2:	ldr	r0, [r6, #0]
   2cdf4:	bl	2c764 <btrfs_add_root_ref@@Base+0x29c>
   2cdf8:	ldr.w	r7, [sp, #49]	; 0x31
   2cdfc:	ldr.w	r8, [sp, #53]	; 0x35
   2ce00:	adds	r7, #1
   2ce02:	adc.w	r8, r8, r9
   2ce06:	mov	r0, r6
   2ce08:	bl	1c6f8 <btrfs_release_path@@Base>
   2ce0c:	cmp	r4, #0
   2ce0e:	bne.w	2cf24 <btrfs_add_device@@Base+0x1ec>
   2ce12:	movs	r2, #1
   2ce14:	movs	r3, #0
   2ce16:	strd	r2, r3, [sp, #40]	; 0x28
   2ce1a:	movs	r3, #216	; 0xd8
   2ce1c:	strb.w	r3, [sp, #48]	; 0x30
   2ce20:	movs	r3, #98	; 0x62
   2ce22:	str	r3, [sp, #20]
   2ce24:	movs	r3, #1
   2ce26:	str	r3, [sp, #4]
   2ce28:	mov	r2, r6
   2ce2a:	ldr	r3, [sp, #12]
   2ce2c:	mov	r1, fp
   2ce2e:	vmov	r0, s16
   2ce32:	str.w	r7, [sp, #49]	; 0x31
   2ce36:	str	r3, [sp, #0]
   2ce38:	add	r3, sp, #40	; 0x28
   2ce3a:	str.w	r8, [sp, #53]	; 0x35
   2ce3e:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   2ce42:	mov	r4, r0
   2ce44:	cmp	r0, #0
   2ce46:	bne.n	2cf24 <btrfs_add_device@@Base+0x1ec>
   2ce48:	ldr	r0, [r6, #0]
   2ce4a:	movs	r1, #25
   2ce4c:	ldr	r3, [r6, #32]
   2ce4e:	add.w	r2, r0, #96	; 0x60
   2ce52:	mla	r3, r1, r3, r2
   2ce56:	ldr.w	r9, [r3, #118]	; 0x76
   2ce5a:	strd	r7, r8, [r5, #64]	; 0x40
   2ce5e:	add.w	r1, r9, #101	; 0x65
   2ce62:	adds	r3, r2, r1
   2ce64:	str	r7, [r2, r1]
   2ce66:	str.w	r8, [r3, #4]
   2ce6a:	strb.w	r4, [r3, #44]	; 0x2c
   2ce6e:	strb.w	r4, [r3, #45]	; 0x2d
   2ce72:	strb.w	r4, [r3, #46]	; 0x2e
   2ce76:	strb.w	r4, [r3, #47]	; 0x2f
   2ce7a:	strb.w	r4, [r3, #48]	; 0x30
   2ce7e:	strb.w	r4, [r3, #49]	; 0x31
   2ce82:	strb.w	r4, [r3, #50]	; 0x32
   2ce86:	strb.w	r4, [r3, #51]	; 0x33
   2ce8a:	ldrd	r1, r2, [r5, #104]	; 0x68
   2ce8e:	str	r1, [r3, #36]	; 0x24
   2ce90:	str	r2, [r3, #40]	; 0x28
   2ce92:	ldr	r2, [r5, #88]	; 0x58
   2ce94:	str	r2, [r3, #24]
   2ce96:	ldr	r2, [r5, #92]	; 0x5c
   2ce98:	str	r2, [r3, #28]
   2ce9a:	ldr	r2, [r5, #96]	; 0x60
   2ce9c:	str	r2, [r3, #32]
   2ce9e:	ldrd	r1, r2, [r5, #72]	; 0x48
   2cea2:	str	r1, [r3, #8]
   2cea4:	str	r2, [r3, #12]
   2cea6:	ldrd	r1, r2, [r5, #80]	; 0x50
   2ceaa:	str	r1, [r3, #16]
   2ceac:	add.w	r1, r5, #112	; 0x70
   2ceb0:	str	r2, [r3, #20]
   2ceb2:	add.w	r2, r9, #167	; 0xa7
   2ceb6:	strb.w	r4, [r3, #60]	; 0x3c
   2ceba:	strb.w	r4, [r3, #61]	; 0x3d
   2cebe:	strb.w	r4, [r3, #62]	; 0x3e
   2cec2:	strb.w	r4, [r3, #63]	; 0x3f
   2cec6:	strb.w	r4, [r3, #64]	; 0x40
   2ceca:	strb.w	r4, [r3, #65]	; 0x41
   2cece:	strb.w	r4, [r3, #52]	; 0x34
   2ced2:	strb.w	r4, [r3, #53]	; 0x35
   2ced6:	strb.w	r4, [r3, #54]	; 0x36
   2ceda:	strb.w	r4, [r3, #55]	; 0x37
   2cede:	strb.w	r4, [r3, #56]	; 0x38
   2cee2:	strb.w	r4, [r3, #57]	; 0x39
   2cee6:	strb.w	r4, [r3, #58]	; 0x3a
   2ceea:	strb.w	r4, [r3, #59]	; 0x3b
   2ceee:	movs	r3, #16
   2cef0:	str	r0, [sp, #12]
   2cef2:	bl	1bbd0 <write_extent_buffer@@Base>
   2cef6:	ldr.w	r1, [sl, #352]	; 0x160
   2cefa:	movs	r3, #16
   2cefc:	add.w	r2, r9, #183	; 0xb7
   2cf00:	ldr	r0, [sp, #12]
   2cf02:	add	r1, r3
   2cf04:	bl	1bbd0 <write_extent_buffer@@Base>
   2cf08:	ldr	r0, [sp, #12]
   2cf0a:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2cf0e:	ldr.w	r2, [sl, #352]	; 0x160
   2cf12:	ldrd	r0, r5, [r5, #72]	; 0x48
   2cf16:	ldrd	r3, r1, [r2, #56]	; 0x38
   2cf1a:	adds	r3, r3, r0
   2cf1c:	adc.w	r1, r5, r1
   2cf20:	strd	r3, r1, [r2, #56]	; 0x38
   2cf24:	mov	r0, r6
   2cf26:	bl	1c71e <btrfs_free_path@@Base>
   2cf2a:	ldr	r2, [pc, #72]	; (2cf74 <btrfs_add_device@@Base+0x23c>)
   2cf2c:	ldr	r3, [pc, #52]	; (2cf64 <btrfs_add_device@@Base+0x22c>)
   2cf2e:	add	r2, pc
   2cf30:	ldr	r3, [r2, r3]
   2cf32:	ldr	r2, [r3, #0]
   2cf34:	ldr	r3, [sp, #60]	; 0x3c
   2cf36:	eors	r2, r3
   2cf38:	beq.n	2cf54 <btrfs_add_device@@Base+0x21c>
   2cf3a:	blx	8c90 <__stack_chk_fail@plt>
   2cf3e:	movs	r7, #0
   2cf40:	mov	r8, r7
   2cf42:	b.n	2ce06 <btrfs_add_device@@Base+0xce>
   2cf44:	movs	r7, #1
   2cf46:	mov.w	r8, #0
   2cf4a:	mov	r4, r9
   2cf4c:	b.n	2ce06 <btrfs_add_device@@Base+0xce>
   2cf4e:	mvn.w	r4, #11
   2cf52:	b.n	2cf2a <btrfs_add_device@@Base+0x1f2>
   2cf54:	mov	r0, r4
   2cf56:	add	sp, #68	; 0x44
   2cf58:	vpop	{d8}
   2cf5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf60:	svc	208	; 0xd0
   2cf62:	movs	r3, r0
   2cf64:	lsls	r0, r1, #10
   2cf66:	movs	r0, r0
   2cf68:	ldrh	r6, [r5, #40]	; 0x28
   2cf6a:	movs	r1, r0
   2cf6c:	strh	r2, [r2, #50]	; 0x32
   2cf6e:	movs	r1, r0
   2cf70:	adds	r2, #213	; 0xd5
   2cf72:	movs	r1, r0
   2cf74:	ble.n	2cf4c <btrfs_add_device@@Base+0x214>
   2cf76:	movs	r3, r0

0002cf78 <btrfs_update_device@@Base>:
   2cf78:	ldr	r2, [pc, #212]	; (2d050 <btrfs_update_device@@Base+0xd8>)
   2cf7a:	ldr	r3, [pc, #216]	; (2d054 <btrfs_update_device@@Base+0xdc>)
   2cf7c:	add	r2, pc
   2cf7e:	push	{r4, r5, r6, r7, lr}
   2cf80:	sub	sp, #44	; 0x2c
   2cf82:	ldr	r3, [r2, r3]
   2cf84:	mov	r4, r1
   2cf86:	mov	r6, r0
   2cf88:	ldr	r3, [r3, #0]
   2cf8a:	str	r3, [sp, #36]	; 0x24
   2cf8c:	mov.w	r3, #0
   2cf90:	ldr	r3, [r1, #8]
   2cf92:	ldr.w	r3, [r3, #464]	; 0x1d0
   2cf96:	ldr	r1, [r3, #32]
   2cf98:	str	r1, [sp, #12]
   2cf9a:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2cf9e:	mov	r5, r0
   2cfa0:	cmp	r0, #0
   2cfa2:	beq.n	2d042 <btrfs_update_device@@Base+0xca>
   2cfa4:	movs	r2, #1
   2cfa6:	movs	r3, #0
   2cfa8:	strd	r2, r3, [sp, #16]
   2cfac:	movs	r3, #216	; 0xd8
   2cfae:	strb.w	r3, [sp, #24]
   2cfb2:	movs	r2, #1
   2cfb4:	ldr	r3, [r4, #64]	; 0x40
   2cfb6:	ldr	r1, [sp, #12]
   2cfb8:	str.w	r3, [sp, #25]
   2cfbc:	ldr	r3, [r4, #68]	; 0x44
   2cfbe:	str.w	r3, [sp, #29]
   2cfc2:	movs	r3, #0
   2cfc4:	strd	r3, r2, [sp]
   2cfc8:	mov	r3, r0
   2cfca:	add	r2, sp, #16
   2cfcc:	mov	r0, r6
   2cfce:	bl	1eadc <btrfs_search_slot@@Base>
   2cfd2:	subs	r6, r0, #0
   2cfd4:	blt.n	2d022 <btrfs_update_device@@Base+0xaa>
   2cfd6:	bne.n	2d03c <btrfs_update_device@@Base+0xc4>
   2cfd8:	ldr	r0, [r5, #0]
   2cfda:	movs	r2, #25
   2cfdc:	ldr	r3, [r5, #32]
   2cfde:	add.w	r1, r0, #96	; 0x60
   2cfe2:	ldr.w	ip, [r4, #68]	; 0x44
   2cfe6:	ldr	r7, [r4, #64]	; 0x40
   2cfe8:	mla	r3, r2, r3, r1
   2cfec:	ldr.w	r3, [r3, #118]	; 0x76
   2cff0:	adds	r3, #101	; 0x65
   2cff2:	adds	r2, r1, r3
   2cff4:	str	r7, [r1, r3]
   2cff6:	str.w	ip, [r2, #4]
   2cffa:	ldrd	r1, r3, [r4, #104]	; 0x68
   2cffe:	str	r1, [r2, #36]	; 0x24
   2d000:	str	r3, [r2, #40]	; 0x28
   2d002:	ldr	r3, [r4, #88]	; 0x58
   2d004:	str	r3, [r2, #24]
   2d006:	ldr	r3, [r4, #92]	; 0x5c
   2d008:	str	r3, [r2, #28]
   2d00a:	ldr	r3, [r4, #96]	; 0x60
   2d00c:	str	r3, [r2, #32]
   2d00e:	ldrd	r1, r3, [r4, #72]	; 0x48
   2d012:	str	r1, [r2, #8]
   2d014:	str	r3, [r2, #12]
   2d016:	ldrd	r1, r3, [r4, #80]	; 0x50
   2d01a:	str	r1, [r2, #16]
   2d01c:	str	r3, [r2, #20]
   2d01e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2d022:	mov	r0, r5
   2d024:	bl	1c71e <btrfs_free_path@@Base>
   2d028:	ldr	r2, [pc, #44]	; (2d058 <btrfs_update_device@@Base+0xe0>)
   2d02a:	ldr	r3, [pc, #40]	; (2d054 <btrfs_update_device@@Base+0xdc>)
   2d02c:	add	r2, pc
   2d02e:	ldr	r3, [r2, r3]
   2d030:	ldr	r2, [r3, #0]
   2d032:	ldr	r3, [sp, #36]	; 0x24
   2d034:	eors	r2, r3
   2d036:	beq.n	2d048 <btrfs_update_device@@Base+0xd0>
   2d038:	blx	8c90 <__stack_chk_fail@plt>
   2d03c:	mvn.w	r6, #1
   2d040:	b.n	2d022 <btrfs_update_device@@Base+0xaa>
   2d042:	mvn.w	r6, #11
   2d046:	b.n	2d028 <btrfs_update_device@@Base+0xb0>
   2d048:	mov	r0, r6
   2d04a:	add	sp, #44	; 0x2c
   2d04c:	pop	{r4, r5, r6, r7, pc}
   2d04e:	nop
   2d050:	ble.n	2cf8c <btrfs_update_device@@Base+0x14>
   2d052:	movs	r3, r0
   2d054:	lsls	r0, r1, #10
   2d056:	movs	r0, r0
   2d058:	bgt.n	2d034 <btrfs_update_device@@Base+0xbc>
   2d05a:	movs	r3, r0

0002d05c <btrfs_add_system_chunk@@Base>:
   2d05c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d060:	mov	r4, r1
   2d062:	ldr.w	r6, [r0, #308]	; 0x134
   2d066:	mov	r1, r2
   2d068:	add.w	r5, r3, #17
   2d06c:	ldr.w	r2, [r6, #160]	; 0xa0
   2d070:	add	r5, r2
   2d072:	cmp.w	r5, #2048	; 0x800
   2d076:	bhi.n	2d0b6 <btrfs_add_system_chunk@@Base+0x5a>
   2d078:	ldr.w	lr, [r4, #9]
   2d07c:	addw	r7, r6, #811	; 0x32b
   2d080:	ldr.w	ip, [r4, #13]
   2d084:	adds	r0, r7, r2
   2d086:	ldrb.w	r8, [r4, #8]
   2d08a:	adds	r0, #17
   2d08c:	ldr.w	r9, [r4]
   2d090:	ldr	r4, [r4, #4]
   2d092:	str.w	r9, [r7, r2]
   2d096:	mov	r2, r3
   2d098:	str.w	r4, [r0, #-13]
   2d09c:	strb.w	r8, [r0, #-9]
   2d0a0:	str.w	lr, [r0, #-8]
   2d0a4:	str.w	ip, [r0, #-4]
   2d0a8:	blx	8bdc <memcpy@plt+0x4>
   2d0ac:	movs	r0, #0
   2d0ae:	str.w	r5, [r6, #160]	; 0xa0
   2d0b2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2d0b6:	mvn.w	r0, #26
   2d0ba:	b.n	2d0b2 <btrfs_add_system_chunk@@Base+0x56>

0002d0bc <btrfs_alloc_chunk@@Base>:
   2d0bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d0c0:	vpush	{d8-d11}
   2d0c4:	vmov	s16, r0
   2d0c8:	sub	sp, #252	; 0xfc
   2d0ca:	str	r3, [sp, #148]	; 0x94
   2d0cc:	ldrd	sl, r3, [sp, #320]	; 0x140
   2d0d0:	str	r2, [sp, #176]	; 0xb0
   2d0d2:	ldr.w	r2, [pc, #1252]	; 2d5b8 <btrfs_alloc_chunk@@Base+0x4fc>
   2d0d6:	str	r3, [sp, #120]	; 0x78
   2d0d8:	ldr.w	r3, [pc, #1248]	; 2d5bc <btrfs_alloc_chunk@@Base+0x500>
   2d0dc:	add	r2, pc
   2d0de:	str	r1, [sp, #44]	; 0x2c
   2d0e0:	ldr	r3, [r2, r3]
   2d0e2:	ldr	r3, [r3, #0]
   2d0e4:	str	r3, [sp, #244]	; 0xf4
   2d0e6:	mov.w	r3, #0
   2d0ea:	ldr	r3, [r1, #24]
   2d0ec:	str	r3, [sp, #172]	; 0xac
   2d0ee:	ldr	r3, [r1, #32]
   2d0f0:	vmov	s17, r3
   2d0f4:	ldr.w	r3, [r1, #352]	; 0x160
   2d0f8:	str	r3, [sp, #48]	; 0x30
   2d0fa:	adds	r3, #72	; 0x48
   2d0fc:	str	r3, [sp, #108]	; 0x6c
   2d0fe:	ldr	r3, [sp, #48]	; 0x30
   2d100:	ldr	r2, [sp, #108]	; 0x6c
   2d102:	ldr	r3, [r3, #72]	; 0x48
   2d104:	cmp	r2, r3
   2d106:	bne.n	2d126 <btrfs_alloc_chunk@@Base+0x6a>
   2d108:	mvn.w	r6, #27
   2d10c:	ldr.w	r2, [pc, #1200]	; 2d5c0 <btrfs_alloc_chunk@@Base+0x504>
   2d110:	ldr.w	r3, [pc, #1192]	; 2d5bc <btrfs_alloc_chunk@@Base+0x500>
   2d114:	add	r2, pc
   2d116:	ldr	r3, [r2, r3]
   2d118:	ldr	r2, [r3, #0]
   2d11a:	ldr	r3, [sp, #244]	; 0xf4
   2d11c:	eors	r2, r3
   2d11e:	beq.w	2dbfc <btrfs_alloc_chunk@@Base+0xb40>
   2d122:	blx	8c90 <__stack_chk_fail@plt>
   2d126:	and.w	r0, sl, #2040	; 0x7f8
   2d12a:	movs	r3, #0
   2d12c:	mov	r1, r3
   2d12e:	orrs.w	r2, r0, r1
   2d132:	beq.w	2d396 <btrfs_alloc_chunk@@Base+0x2da>
   2d136:	and.w	r0, sl, #2
   2d13a:	orrs.w	r2, r0, r1
   2d13e:	bne.w	2d37e <btrfs_alloc_chunk@@Base+0x2c2>
   2d142:	and.w	r0, sl, #1
   2d146:	orrs.w	r2, r0, r1
   2d14a:	beq.w	2d33c <btrfs_alloc_chunk@@Base+0x280>
   2d14e:	ldr	r3, [sp, #44]	; 0x2c
   2d150:	movs	r2, #0
   2d152:	mov.w	r1, #1073741824	; 0x40000000
   2d156:	mov.w	r5, #2147483648	; 0x80000000
   2d15a:	strd	r1, r2, [sp, #16]
   2d15e:	movs	r4, #2
   2d160:	ldr.w	r3, [r3, #384]	; 0x180
   2d164:	mov.w	r2, #67108864	; 0x4000000
   2d168:	subs	r3, #206	; 0xce
   2d16a:	lsrs	r3, r3, #5
   2d16c:	adds	r3, #1
   2d16e:	str	r2, [sp, #72]	; 0x48
   2d170:	and.w	r6, sl, #16
   2d174:	ldr	r2, [sp, #44]	; 0x2c
   2d176:	movs	r7, #0
   2d178:	ldr.w	r1, [r2, #308]	; 0x134
   2d17c:	orrs.w	r2, r6, r7
   2d180:	beq.w	2d39c <btrfs_alloc_chunk@@Base+0x2e0>
   2d184:	ldr.w	r7, [r1, #140]	; 0x8c
   2d188:	ldr.w	r6, [r1, #136]	; 0x88
   2d18c:	cmp	r7, #0
   2d18e:	it	eq
   2d190:	cmpeq	r6, #3
   2d192:	it	cs
   2d194:	movcs	r6, #2
   2d196:	cmp	r6, #2
   2d198:	mov	fp, r6
   2d19a:	bne.n	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d19c:	and.w	r6, sl, #512	; 0x200
   2d1a0:	movs	r7, #0
   2d1a2:	orrs.w	r2, r6, r7
   2d1a6:	beq.n	2d1c0 <btrfs_alloc_chunk@@Base+0x104>
   2d1a8:	ldr.w	r7, [r1, #140]	; 0x8c
   2d1ac:	ldr.w	r6, [r1, #136]	; 0x88
   2d1b0:	cmp	r7, #0
   2d1b2:	it	eq
   2d1b4:	cmpeq	r6, #4
   2d1b6:	it	cs
   2d1b8:	movcs	r6, #3
   2d1ba:	cmp	r6, #3
   2d1bc:	mov	fp, r6
   2d1be:	bne.n	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d1c0:	and.w	r6, sl, #1024	; 0x400
   2d1c4:	movs	r7, #0
   2d1c6:	orrs.w	r2, r6, r7
   2d1ca:	beq.n	2d1e4 <btrfs_alloc_chunk@@Base+0x128>
   2d1cc:	ldr.w	r7, [r1, #140]	; 0x8c
   2d1d0:	ldr.w	r6, [r1, #136]	; 0x88
   2d1d4:	cmp	r7, #0
   2d1d6:	it	eq
   2d1d8:	cmpeq	r6, #5
   2d1da:	it	cs
   2d1dc:	movcs	r6, #4
   2d1de:	cmp	r6, #4
   2d1e0:	mov	fp, r6
   2d1e2:	bne.n	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d1e4:	movs	r2, #0
   2d1e6:	and.w	r0, sl, #32
   2d1ea:	strd	r0, r2, [sp, #56]	; 0x38
   2d1ee:	ldrd	r6, r7, [sp, #56]	; 0x38
   2d1f2:	orrs.w	r0, r6, r7
   2d1f6:	and.w	r6, sl, #8
   2d1fa:	mov	r7, r2
   2d1fc:	it	ne
   2d1fe:	movne.w	fp, #2
   2d202:	orrs.w	r2, r6, r7
   2d206:	beq.w	2d3a2 <btrfs_alloc_chunk@@Base+0x2e6>
   2d20a:	ldr.w	r2, [r1, #136]	; 0x88
   2d20e:	cmp	r2, r3
   2d210:	it	ge
   2d212:	movge	r2, r3
   2d214:	mov	fp, r2
   2d216:	movs	r2, #2
   2d218:	str	r2, [sp, #76]	; 0x4c
   2d21a:	and.w	r2, sl, #64	; 0x40
   2d21e:	str	r2, [sp, #88]	; 0x58
   2d220:	movs	r2, #0
   2d222:	str	r2, [sp, #92]	; 0x5c
   2d224:	ldrd	r6, r7, [sp, #88]	; 0x58
   2d228:	orrs.w	r2, r6, r7
   2d22c:	beq.w	2d3a8 <btrfs_alloc_chunk@@Base+0x2ec>
   2d230:	ldr.w	r2, [r1, #136]	; 0x88
   2d234:	cmp	r2, r3
   2d236:	it	ge
   2d238:	movge	r2, r3
   2d23a:	cmp	r2, #3
   2d23c:	ble.w	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d240:	bic.w	fp, r2, #1
   2d244:	movs	r2, #2
   2d246:	str	r2, [sp, #52]	; 0x34
   2d248:	movs	r2, #4
   2d24a:	str	r2, [sp, #76]	; 0x4c
   2d24c:	and.w	r6, sl, #128	; 0x80
   2d250:	movs	r7, #0
   2d252:	orrs.w	r2, r6, r7
   2d256:	beq.n	2d26e <btrfs_alloc_chunk@@Base+0x1b2>
   2d258:	ldr.w	r2, [r1, #136]	; 0x88
   2d25c:	cmp	r2, r3
   2d25e:	it	ge
   2d260:	movge	r2, r3
   2d262:	cmp	r2, #1
   2d264:	mov	fp, r2
   2d266:	ble.w	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d26a:	movs	r2, #2
   2d26c:	str	r2, [sp, #76]	; 0x4c
   2d26e:	and.w	r6, sl, #256	; 0x100
   2d272:	movs	r7, #0
   2d274:	orrs.w	r2, r6, r7
   2d278:	beq.n	2d290 <btrfs_alloc_chunk@@Base+0x1d4>
   2d27a:	ldr.w	r2, [r1, #136]	; 0x88
   2d27e:	cmp	r3, r2
   2d280:	it	ge
   2d282:	movge	r3, r2
   2d284:	cmp	r3, #2
   2d286:	mov	fp, r3
   2d288:	ble.w	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d28c:	movs	r3, #3
   2d28e:	str	r3, [sp, #76]	; 0x4c
   2d290:	ldr	r0, [r1, #112]	; 0x70
   2d292:	movs	r2, #1
   2d294:	ldr	r1, [r1, #116]	; 0x74
   2d296:	bl	36360 <div_factor@@Base>
   2d29a:	strd	r5, r4, [sp, #64]	; 0x40
   2d29e:	movs	r4, #0
   2d2a0:	mov	r3, r1
   2d2a2:	mov	r2, r0
   2d2a4:	ldrd	r0, r1, [sp, #64]	; 0x40
   2d2a8:	cmp	r3, r1
   2d2aa:	it	eq
   2d2ac:	cmpeq	r2, r0
   2d2ae:	it	cc
   2d2b0:	strdcc	r2, r3, [sp, #64]	; 0x40
   2d2b4:	movs	r3, #0
   2d2b6:	strd	r3, r4, [sp, #32]
   2d2ba:	str	r3, [sp, #168]	; 0xa8
   2d2bc:	movs	r4, #0
   2d2be:	movs	r3, #0
   2d2c0:	strd	r3, r4, [sp, #96]	; 0x60
   2d2c4:	ldr	r3, [sp, #52]	; 0x34
   2d2c6:	mov	r0, sl
   2d2c8:	ldr	r1, [sp, #120]	; 0x78
   2d2ca:	strd	fp, r3, [sp]
   2d2ce:	ldrd	r2, r3, [sp, #16]
   2d2d2:	bl	2c664 <btrfs_add_root_ref@@Base+0x19c>
   2d2d6:	ldrd	r3, r4, [sp, #64]	; 0x40
   2d2da:	cmp	r4, r1
   2d2dc:	ldr	r4, [pc, #724]	; (2d5b4 <btrfs_alloc_chunk@@Base+0x4f8>)
   2d2de:	it	eq
   2d2e0:	cmpeq	r3, r0
   2d2e2:	bcs.n	2d2f8 <btrfs_alloc_chunk@@Base+0x23c>
   2d2e4:	mov	r2, fp
   2d2e6:	ldrd	r0, r1, [sp, #64]	; 0x40
   2d2ea:	asrs	r3, r2, #31
   2d2ec:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2d2f0:	and.w	r3, r4, r0
   2d2f4:	strd	r3, r1, [sp, #16]
   2d2f8:	ldr	r3, [sp, #72]	; 0x48
   2d2fa:	asrs	r2, r3, #31
   2d2fc:	mov	r1, r3
   2d2fe:	mov	r3, r2
   2d300:	mov	r2, r1
   2d302:	ldrd	r0, r1, [sp, #16]
   2d306:	cmp	r3, r1
   2d308:	it	eq
   2d30a:	cmpeq	r2, r0
   2d30c:	itt	cc
   2d30e:	movcc	r3, r1
   2d310:	movcc	r2, r0
   2d312:	and.w	r1, r4, r2
   2d316:	strd	r1, r3, [sp, #16]
   2d31a:	add	r3, sp, #196	; 0xc4
   2d31c:	strd	r3, r3, [sp, #196]	; 0xc4
   2d320:	ldr	r3, [sp, #48]	; 0x30
   2d322:	ldr	r5, [r3, #72]	; 0x48
   2d324:	ldrd	r3, r4, [sp, #56]	; 0x38
   2d328:	orrs	r3, r4
   2d32a:	beq.w	2d6d6 <btrfs_alloc_chunk@@Base+0x61a>
   2d32e:	adds	r3, r1, r1
   2d330:	str	r3, [sp, #128]	; 0x80
   2d332:	ldr	r3, [sp, #20]
   2d334:	adcs	r3, r3
   2d336:	str	r3, [sp, #132]	; 0x84
   2d338:	movs	r7, #0
   2d33a:	b.n	2d4c8 <btrfs_alloc_chunk@@Base+0x40c>
   2d33c:	and.w	r0, sl, #4
   2d340:	orrs.w	r2, r0, r1
   2d344:	beq.n	2d396 <btrfs_alloc_chunk@@Base+0x2da>
   2d346:	ldr	r3, [sp, #48]	; 0x30
   2d348:	movs	r1, #12
   2d34a:	mov.w	r0, #2147483648	; 0x80000000
   2d34e:	movs	r4, #0
   2d350:	ldrd	r2, r3, [r3, #56]	; 0x38
   2d354:	cmp	r1, r3
   2d356:	it	eq
   2d358:	cmpeq	r0, r2
   2d35a:	mov.w	r2, #33554432	; 0x2000000
   2d35e:	ite	cs
   2d360:	movcs.w	r3, #268435456	; 0x10000000
   2d364:	movcc.w	r3, #1073741824	; 0x40000000
   2d368:	strd	r3, r4, [sp, #16]
   2d36c:	ldr	r3, [sp, #44]	; 0x2c
   2d36e:	ldrd	r5, r4, [sp, #16]
   2d372:	ldr.w	r3, [r3, #384]	; 0x180
   2d376:	subs	r3, #206	; 0xce
   2d378:	lsrs	r3, r3, #5
   2d37a:	adds	r3, #1
   2d37c:	b.n	2d16e <btrfs_alloc_chunk@@Base+0xb2>
   2d37e:	movs	r3, #58	; 0x3a
   2d380:	mov.w	r5, #16777216	; 0x1000000
   2d384:	movs	r2, #0
   2d386:	mov.w	r1, #8388608	; 0x800000
   2d38a:	movs	r4, #0
   2d38c:	strd	r1, r2, [sp, #16]
   2d390:	mov.w	r2, #1048576	; 0x100000
   2d394:	b.n	2d16e <btrfs_alloc_chunk@@Base+0xb2>
   2d396:	mov.w	r5, #33554432	; 0x2000000
   2d39a:	b.n	2d384 <btrfs_alloc_chunk@@Base+0x2c8>
   2d39c:	mov.w	fp, #1
   2d3a0:	b.n	2d19c <btrfs_alloc_chunk@@Base+0xe0>
   2d3a2:	str.w	fp, [sp, #76]	; 0x4c
   2d3a6:	b.n	2d21a <btrfs_alloc_chunk@@Base+0x15e>
   2d3a8:	movs	r2, #1
   2d3aa:	str	r2, [sp, #52]	; 0x34
   2d3ac:	b.n	2d24c <btrfs_alloc_chunk@@Base+0x190>
   2d3ae:	ldr	r3, [r5, #8]
   2d3b0:	str	r3, [sp, #104]	; 0x68
   2d3b2:	ldr.w	r3, [r3, #464]	; 0x1d0
   2d3b6:	ldrd	r9, r8, [r3, #296]	; 0x128
   2d3ba:	ldrd	r3, r4, [r5, #72]	; 0x48
   2d3be:	strd	r3, r4, [sp, #80]	; 0x50
   2d3c2:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2d3c6:	mov	r4, r0
   2d3c8:	cbnz	r0, 2d3d0 <btrfs_alloc_chunk@@Base+0x314>
   2d3ca:	mvn.w	r6, #11
   2d3ce:	b.n	2d10c <btrfs_alloc_chunk@@Base+0x50>
   2d3d0:	ldrd	r2, r3, [r5, #64]	; 0x40
   2d3d4:	ldr	r1, [sp, #104]	; 0x68
   2d3d6:	strd	r2, r3, [sp, #224]	; 0xe0
   2d3da:	ldr	r3, [sp, #104]	; 0x68
   2d3dc:	ldr.w	r3, [r3, #464]	; 0x1d0
   2d3e0:	ldr.w	r2, [r3, #296]	; 0x128
   2d3e4:	str.w	r2, [sp, #233]	; 0xe9
   2d3e8:	add	r2, sp, #224	; 0xe0
   2d3ea:	ldr.w	r3, [r3, #300]	; 0x12c
   2d3ee:	str.w	r3, [sp, #237]	; 0xed
   2d3f2:	movs	r3, #204	; 0xcc
   2d3f4:	strb.w	r3, [sp, #232]	; 0xe8
   2d3f8:	movs	r3, #2
   2d3fa:	strb.w	r3, [r0, #64]	; 0x40
   2d3fe:	movs	r3, #0
   2d400:	strd	r3, r3, [sp]
   2d404:	mov	r3, r0
   2d406:	vmov	r0, s16
   2d40a:	bl	1eadc <btrfs_search_slot@@Base>
   2d40e:	subs	r6, r0, #0
   2d410:	blt.n	2d480 <btrfs_alloc_chunk@@Base+0x3c4>
   2d412:	ldrb.w	r3, [sp, #232]	; 0xe8
   2d416:	movs	r2, #0
   2d418:	ldr	r0, [sp, #104]	; 0x68
   2d41a:	mov	r1, r4
   2d41c:	str	r3, [sp, #0]
   2d41e:	movs	r3, #0
   2d420:	bl	20194 <btrfs_previous_item@@Base>
   2d424:	subs	r6, r0, #0
   2d426:	blt.n	2d480 <btrfs_alloc_chunk@@Base+0x3c4>
   2d428:	strd	r9, r8, [sp, #24]
   2d42c:	ldrd	r2, r3, [sp, #24]
   2d430:	cmp	r3, #0
   2d432:	it	eq
   2d434:	cmpeq.w	r2, #1048576	; 0x100000
   2d438:	ittt	cc
   2d43a:	movcc.w	r2, #1048576	; 0x100000
   2d43e:	movcc	r3, #0
   2d440:	strdcc	r2, r3, [sp, #24]
   2d444:	add	r2, sp, #224	; 0xe0
   2d446:	movs	r3, #0
   2d448:	str	r3, [sp, #124]	; 0x7c
   2d44a:	vmov	s18, r2
   2d44e:	ldr	r2, [r4, #32]
   2d450:	ldr	r6, [r4, #0]
   2d452:	str	r2, [sp, #144]	; 0x90
   2d454:	ldr	r1, [sp, #144]	; 0x90
   2d456:	ldr.w	r2, [r6, #192]	; 0xc0
   2d45a:	cmp	r2, r1
   2d45c:	bhi.w	2d5d0 <btrfs_alloc_chunk@@Base+0x514>
   2d460:	str	r3, [sp, #144]	; 0x90
   2d462:	mov.w	r3, #0
   2d466:	strb.w	r3, [r4, #65]	; 0x41
   2d46a:	mov	r1, r4
   2d46c:	ldr	r3, [sp, #104]	; 0x68
   2d46e:	ldr.w	r0, [r3, #464]	; 0x1d0
   2d472:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2d476:	ldr	r3, [sp, #144]	; 0x90
   2d478:	subs	r6, r0, #0
   2d47a:	beq.n	2d44e <btrfs_alloc_chunk@@Base+0x392>
   2d47c:	bge.w	2d688 <btrfs_alloc_chunk@@Base+0x5cc>
   2d480:	mov	r0, r4
   2d482:	bl	1c71e <btrfs_free_path@@Base>
   2d486:	cmp	r6, #0
   2d488:	bne.w	2d10c <btrfs_alloc_chunk@@Base+0x50>
   2d48c:	ldrd	r1, r2, [sp, #32]
   2d490:	ldrd	r8, r9, [sp, #128]	; 0x80
   2d494:	ldr	r3, [r5, #0]
   2d496:	cmp	r2, r9
   2d498:	it	eq
   2d49a:	cmpeq	r1, r8
   2d49c:	bcc.w	2d6bc <btrfs_alloc_chunk@@Base+0x600>
   2d4a0:	ldr	r2, [r5, #4]
   2d4a2:	str	r2, [r3, #4]
   2d4a4:	str	r3, [r2, #0]
   2d4a6:	ldr	r2, [sp, #196]	; 0xc4
   2d4a8:	str	r5, [r2, #4]
   2d4aa:	str	r2, [r5, #0]
   2d4ac:	add	r2, sp, #196	; 0xc4
   2d4ae:	str	r2, [r5, #4]
   2d4b0:	ldrd	r1, r2, [sp, #56]	; 0x38
   2d4b4:	str	r5, [sp, #196]	; 0xc4
   2d4b6:	orrs	r2, r1
   2d4b8:	ite	eq
   2d4ba:	addeq	r7, #1
   2d4bc:	addne	r7, #2
   2d4be:	ldr	r2, [sp, #108]	; 0x6c
   2d4c0:	cmp	r2, r3
   2d4c2:	beq.w	2d6e0 <btrfs_alloc_chunk@@Base+0x624>
   2d4c6:	mov	r5, r3
   2d4c8:	cmp	fp, r7
   2d4ca:	bgt.w	2d3ae <btrfs_alloc_chunk@@Base+0x2f2>
   2d4ce:	ldr	r3, [sp, #44]	; 0x2c
   2d4d0:	ldr	r5, [r3, #32]
   2d4d2:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2d4d6:	mov	r4, r0
   2d4d8:	cmp	r0, #0
   2d4da:	beq.w	2d3ca <btrfs_alloc_chunk@@Base+0x30e>
   2d4de:	mov.w	r2, #4294967295	; 0xffffffff
   2d4e2:	movs	r0, #0
   2d4e4:	mov.w	r3, #256	; 0x100
   2d4e8:	strb.w	r2, [sp, #213]	; 0xd5
   2d4ec:	strd	r3, r0, [sp, #204]	; 0xcc
   2d4f0:	mov	r1, r5
   2d4f2:	strb.w	r2, [sp, #214]	; 0xd6
   2d4f6:	mov	r3, r4
   2d4f8:	strb.w	r2, [sp, #215]	; 0xd7
   2d4fc:	movs	r7, #228	; 0xe4
   2d4fe:	strb.w	r2, [sp, #216]	; 0xd8
   2d502:	strb.w	r2, [sp, #217]	; 0xd9
   2d506:	strb.w	r2, [sp, #218]	; 0xda
   2d50a:	strb.w	r2, [sp, #219]	; 0xdb
   2d50e:	strb.w	r2, [sp, #220]	; 0xdc
   2d512:	add	r2, sp, #204	; 0xcc
   2d514:	strd	r0, r0, [sp]
   2d518:	strb.w	r7, [sp, #212]	; 0xd4
   2d51c:	bl	1eadc <btrfs_search_slot@@Base>
   2d520:	subs	r6, r0, #0
   2d522:	blt.n	2d562 <btrfs_alloc_chunk@@Base+0x4a6>
   2d524:	ldr	r2, [pc, #156]	; (2d5c4 <btrfs_alloc_chunk@@Base+0x508>)
   2d526:	it	eq
   2d528:	moveq	r3, #1
   2d52a:	ldr	r1, [pc, #156]	; (2d5c8 <btrfs_alloc_chunk@@Base+0x50c>)
   2d52c:	it	ne
   2d52e:	movne	r3, #0
   2d530:	ldr	r0, [pc, #152]	; (2d5cc <btrfs_alloc_chunk@@Base+0x510>)
   2d532:	add	r2, pc
   2d534:	adds	r2, #38	; 0x26
   2d536:	add	r1, pc
   2d538:	add	r0, pc
   2d53a:	str	r3, [sp, #0]
   2d53c:	movw	r3, #681	; 0x2a9
   2d540:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2d544:	movs	r2, #0
   2d546:	movs	r3, #0
   2d548:	mov	r1, r4
   2d54a:	mov	r0, r5
   2d54c:	str	r7, [sp, #0]
   2d54e:	bl	20194 <btrfs_previous_item@@Base>
   2d552:	mov	r6, r0
   2d554:	cmp	r0, #0
   2d556:	beq.w	2d742 <btrfs_alloc_chunk@@Base+0x686>
   2d55a:	movs	r3, #0
   2d55c:	strd	r3, r3, [sp, #180]	; 0xb4
   2d560:	mov	r6, r3
   2d562:	mov	r0, r4
   2d564:	bl	1c71e <btrfs_free_path@@Base>
   2d568:	cmp	r6, #0
   2d56a:	bne.w	2d10c <btrfs_alloc_chunk@@Base+0x50>
   2d56e:	mov.w	r3, #256	; 0x100
   2d572:	strd	r3, r6, [sp, #204]	; 0xcc
   2d576:	movs	r3, #228	; 0xe4
   2d578:	strb.w	r3, [sp, #212]	; 0xd4
   2d57c:	ldr	r3, [sp, #180]	; 0xb4
   2d57e:	mov	r0, fp
   2d580:	str.w	r3, [sp, #213]	; 0xd5
   2d584:	ldr	r3, [sp, #184]	; 0xb8
   2d586:	str.w	r3, [sp, #217]	; 0xd9
   2d58a:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2d58e:	blx	8e40 <malloc@plt+0x4>
   2d592:	mov	r5, r0
   2d594:	cmp	r0, #0
   2d596:	beq.w	2d3ca <btrfs_alloc_chunk@@Base+0x30e>
   2d59a:	mov.w	r0, fp, lsl #4
   2d59e:	adds	r0, #72	; 0x48
   2d5a0:	blx	8e40 <malloc@plt+0x4>
   2d5a4:	mov	r7, r0
   2d5a6:	cmp	r0, #0
   2d5a8:	bne.w	2d788 <btrfs_alloc_chunk@@Base+0x6cc>
   2d5ac:	mov	r0, r5
   2d5ae:	blx	8b84 <free@plt+0x4>
   2d5b2:	b.n	2d3ca <btrfs_alloc_chunk@@Base+0x30e>
   2d5b4:	movs	r0, r0
   2d5b6:	vcvt.f16.u16	d29, d28, #1
   2d5ba:	movs	r3, r0
   2d5bc:	lsls	r0, r1, #10
   2d5be:	movs	r0, r0
   2d5c0:	bgt.n	2d5cc <btrfs_alloc_chunk@@Base+0x510>
   2d5c2:	movs	r3, r0
   2d5c4:	strh	r2, [r0, #46]	; 0x2e
   2d5c6:	movs	r1, r0
   2d5c8:	ldrb	r6, [r4, #27]
   2d5ca:	movs	r1, r0
   2d5cc:	cmp	r3, #105	; 0x69
   2d5ce:	movs	r1, r0
   2d5d0:	vmov	r1, s18
   2d5d4:	mov	r0, r6
   2d5d6:	ldr	r2, [sp, #144]	; 0x90
   2d5d8:	str	r3, [sp, #188]	; 0xbc
   2d5da:	bl	2c764 <btrfs_add_root_ref@@Base+0x29c>
   2d5de:	ldrd	r0, r1, [sp, #224]	; 0xe0
   2d5e2:	ldrd	r8, r9, [r5, #64]	; 0x40
   2d5e6:	ldr	r3, [sp, #188]	; 0xbc
   2d5e8:	cmp	r1, r9
   2d5ea:	it	eq
   2d5ec:	cmpeq	r0, r8
   2d5ee:	bcc.n	2d680 <btrfs_alloc_chunk@@Base+0x5c4>
   2d5f0:	cmp	r9, r1
   2d5f2:	it	eq
   2d5f4:	cmpeq	r8, r0
   2d5f6:	bcc.n	2d688 <btrfs_alloc_chunk@@Base+0x5cc>
   2d5f8:	ldrb.w	r2, [sp, #232]	; 0xe8
   2d5fc:	cmp	r2, #204	; 0xcc
   2d5fe:	bne.n	2d680 <btrfs_alloc_chunk@@Base+0x5c4>
   2d600:	ldrd	r1, r2, [sp, #80]	; 0x50
   2d604:	ldr.w	r9, [sp, #237]	; 0xed
   2d608:	ldr.w	r8, [sp, #233]	; 0xe9
   2d60c:	cmp	r2, r9
   2d60e:	it	eq
   2d610:	cmpeq	r1, r8
   2d612:	bcc.n	2d688 <btrfs_alloc_chunk@@Base+0x5cc>
   2d614:	ldrd	r1, r2, [sp, #24]
   2d618:	cmp	r2, r9
   2d61a:	it	eq
   2d61c:	cmpeq	r1, r8
   2d61e:	bcs.n	2d636 <btrfs_alloc_chunk@@Base+0x57a>
   2d620:	ldr	r2, [sp, #124]	; 0x7c
   2d622:	ldr	r1, [sp, #24]
   2d624:	adds.w	r2, r8, r2
   2d628:	adc.w	r3, r9, r3
   2d62c:	subs	r2, r2, r1
   2d62e:	str	r2, [sp, #124]	; 0x7c
   2d630:	ldr	r2, [sp, #28]
   2d632:	sbc.w	r3, r3, r2
   2d636:	ldr	r2, [sp, #144]	; 0x90
   2d638:	adds	r6, #96	; 0x60
   2d63a:	movs	r1, #25
   2d63c:	mla	r2, r1, r2, r6
   2d640:	ldr.w	r0, [r2, #118]	; 0x76
   2d644:	add	r6, r0
   2d646:	ldr.w	r2, [r6, #125]!
   2d64a:	adds.w	r2, r2, r8
   2d64e:	str	r2, [sp, #152]	; 0x98
   2d650:	ldr	r1, [r6, #4]
   2d652:	adc.w	r2, r1, r9
   2d656:	str	r2, [sp, #156]	; 0x9c
   2d658:	ldrd	r8, r9, [sp, #152]	; 0x98
   2d65c:	ldrd	r1, r2, [sp, #24]
   2d660:	cmp	r2, r9
   2d662:	it	eq
   2d664:	cmpeq	r1, r8
   2d666:	ittt	cc
   2d668:	movcc	r1, r8
   2d66a:	movcc	r2, r9
   2d66c:	strdcc	r1, r2, [sp, #24]
   2d670:	ldrd	r1, r2, [sp, #80]	; 0x50
   2d674:	ldrd	r8, r9, [sp, #24]
   2d678:	cmp	r2, r9
   2d67a:	it	eq
   2d67c:	cmpeq	r1, r8
   2d67e:	bcc.n	2d688 <btrfs_alloc_chunk@@Base+0x5cc>
   2d680:	ldr	r2, [r4, #32]
   2d682:	adds	r2, #1
   2d684:	str	r2, [r4, #32]
   2d686:	b.n	2d44e <btrfs_alloc_chunk@@Base+0x392>
   2d688:	ldrd	r1, r2, [sp, #24]
   2d68c:	ldrd	r8, r9, [sp, #80]	; 0x50
   2d690:	cmp	r2, r9
   2d692:	it	eq
   2d694:	cmpeq	r1, r8
   2d696:	bcs.n	2d6b6 <btrfs_alloc_chunk@@Base+0x5fa>
   2d698:	ldr	r1, [sp, #124]	; 0x7c
   2d69a:	ldr	r2, [sp, #80]	; 0x50
   2d69c:	adds	r2, r2, r1
   2d69e:	ldr	r1, [sp, #84]	; 0x54
   2d6a0:	adc.w	r3, r1, r3
   2d6a4:	ldr	r1, [sp, #24]
   2d6a6:	subs	r2, r2, r1
   2d6a8:	str	r2, [sp, #32]
   2d6aa:	ldr	r2, [sp, #28]
   2d6ac:	sbc.w	r3, r3, r2
   2d6b0:	movs	r6, #0
   2d6b2:	str	r3, [sp, #36]	; 0x24
   2d6b4:	b.n	2d480 <btrfs_alloc_chunk@@Base+0x3c4>
   2d6b6:	ldr	r2, [sp, #124]	; 0x7c
   2d6b8:	str	r2, [sp, #32]
   2d6ba:	b.n	2d6b0 <btrfs_alloc_chunk@@Base+0x5f4>
   2d6bc:	ldrd	r1, r2, [sp, #96]	; 0x60
   2d6c0:	ldrd	r4, r5, [sp, #32]
   2d6c4:	cmp	r2, r5
   2d6c6:	it	eq
   2d6c8:	cmpeq	r1, r4
   2d6ca:	ittt	cc
   2d6cc:	movcc	r1, r4
   2d6ce:	movcc	r2, r5
   2d6d0:	strdcc	r1, r2, [sp, #96]	; 0x60
   2d6d4:	b.n	2d4be <btrfs_alloc_chunk@@Base+0x402>
   2d6d6:	ldrd	r3, r4, [sp, #16]
   2d6da:	strd	r3, r4, [sp, #128]	; 0x80
   2d6de:	b.n	2d338 <btrfs_alloc_chunk@@Base+0x27c>
   2d6e0:	cmp	fp, r7
   2d6e2:	ble.w	2d4ce <btrfs_alloc_chunk@@Base+0x412>
   2d6e6:	ldr	r3, [sp, #196]	; 0xc4
   2d6e8:	add	r2, sp, #196	; 0xc4
   2d6ea:	cmp	r3, r2
   2d6ec:	beq.n	2d700 <btrfs_alloc_chunk@@Base+0x644>
   2d6ee:	ldr	r0, [sp, #108]	; 0x6c
   2d6f0:	ldr	r2, [sp, #48]	; 0x30
   2d6f2:	ldr	r1, [sp, #200]	; 0xc8
   2d6f4:	ldr	r2, [r2, #72]	; 0x48
   2d6f6:	str	r0, [r3, #4]
   2d6f8:	ldr	r0, [sp, #48]	; 0x30
   2d6fa:	str	r3, [r0, #72]	; 0x48
   2d6fc:	str	r2, [r1, #0]
   2d6fe:	str	r1, [r2, #4]
   2d700:	ldr	r3, [sp, #76]	; 0x4c
   2d702:	cmp	r3, r7
   2d704:	bgt.n	2d71e <btrfs_alloc_chunk@@Base+0x662>
   2d706:	ldrd	r3, r4, [sp, #88]	; 0x58
   2d70a:	orrs	r3, r4
   2d70c:	beq.n	2d73a <btrfs_alloc_chunk@@Base+0x67e>
   2d70e:	mov	r0, r7
   2d710:	ldr	r1, [sp, #52]	; 0x34
   2d712:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   2d716:	ldr	r3, [sp, #52]	; 0x34
   2d718:	mul.w	r7, r0, r3
   2d71c:	b.n	2d73a <btrfs_alloc_chunk@@Base+0x67e>
   2d71e:	ldr	r3, [sp, #168]	; 0xa8
   2d720:	cmp	r3, #0
   2d722:	bne.w	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d726:	ldrd	r3, r4, [sp, #96]	; 0x60
   2d72a:	orrs	r3, r4
   2d72c:	beq.w	2d108 <btrfs_alloc_chunk@@Base+0x4c>
   2d730:	ldrd	r3, r4, [sp, #96]	; 0x60
   2d734:	mov	r7, fp
   2d736:	strd	r3, r4, [sp, #16]
   2d73a:	movs	r3, #1
   2d73c:	mov	fp, r7
   2d73e:	str	r3, [sp, #168]	; 0xa8
   2d740:	b.n	2d2c4 <btrfs_alloc_chunk@@Base+0x208>
   2d742:	ldr	r2, [r4, #32]
   2d744:	add	r1, sp, #224	; 0xe0
   2d746:	ldr	r0, [r4, #0]
   2d748:	bl	2c764 <btrfs_add_root_ref@@Base+0x29c>
   2d74c:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2d750:	cmp	r3, #0
   2d752:	it	eq
   2d754:	cmpeq.w	r2, #256	; 0x100
   2d758:	bne.w	2d55a <btrfs_alloc_chunk@@Base+0x49e>
   2d75c:	ldr	r3, [r4, #0]
   2d75e:	movs	r1, #25
   2d760:	ldr	r2, [r4, #32]
   2d762:	adds	r3, #96	; 0x60
   2d764:	mla	r2, r1, r2, r3
   2d768:	ldr.w	r1, [sp, #237]	; 0xed
   2d76c:	ldr.w	r2, [r2, #118]	; 0x76
   2d770:	add	r3, r2
   2d772:	ldr.w	r2, [r3, #101]!
   2d776:	ldr	r0, [r3, #4]
   2d778:	ldr.w	r3, [sp, #233]	; 0xe9
   2d77c:	adds	r3, r2, r3
   2d77e:	str	r3, [sp, #180]	; 0xb4
   2d780:	adc.w	r3, r0, r1
   2d784:	str	r3, [sp, #184]	; 0xb8
   2d786:	b.n	2d562 <btrfs_alloc_chunk@@Base+0x4a6>
   2d788:	ldr	r3, [sp, #52]	; 0x34
   2d78a:	mov	r0, sl
   2d78c:	ldr	r1, [sp, #120]	; 0x78
   2d78e:	strd	fp, r3, [sp]
   2d792:	ldrd	r2, r3, [sp, #16]
   2d796:	bl	2c664 <btrfs_add_root_ref@@Base+0x19c>
   2d79a:	ldr	r3, [sp, #148]	; 0x94
   2d79c:	str	r6, [sp, #76]	; 0x4c
   2d79e:	strd	r0, r1, [r3]
   2d7a2:	add.w	r3, r7, #72	; 0x48
   2d7a6:	str	r3, [sp, #72]	; 0x48
   2d7a8:	add.w	r3, r5, #48	; 0x30
   2d7ac:	str	r3, [sp, #88]	; 0x58
   2d7ae:	ldr.w	r3, [pc, #1112]	; 2dc08 <btrfs_alloc_chunk@@Base+0xb4c>
   2d7b2:	add	r3, pc
   2d7b4:	adds	r3, #54	; 0x36
   2d7b6:	vmov	s21, r3
   2d7ba:	ldr.w	r3, [pc, #1104]	; 2dc0c <btrfs_alloc_chunk@@Base+0xb50>
   2d7be:	add	r3, pc
   2d7c0:	vmov	s22, r3
   2d7c4:	ldr	r3, [sp, #76]	; 0x4c
   2d7c6:	ldr	r4, [sp, #196]	; 0xc4
   2d7c8:	cmp	fp, r3
   2d7ca:	bgt.w	2d8d8 <btrfs_alloc_chunk@@Base+0x81c>
   2d7ce:	ldr.w	r6, [pc, #1088]	; 2dc10 <btrfs_alloc_chunk@@Base+0xb54>
   2d7d2:	add	r3, sp, #196	; 0xc4
   2d7d4:	ldr.w	r1, [pc, #1084]	; 2dc14 <btrfs_alloc_chunk@@Base+0xb58>
   2d7d8:	subs	r3, r4, r3
   2d7da:	add	r6, pc
   2d7dc:	ldr.w	r0, [pc, #1080]	; 2dc18 <btrfs_alloc_chunk@@Base+0xb5c>
   2d7e0:	add.w	r6, r6, #54	; 0x36
   2d7e4:	add	r1, pc
   2d7e6:	it	ne
   2d7e8:	movne	r3, #1
   2d7ea:	add	r0, pc
   2d7ec:	mov	r2, r6
   2d7ee:	str	r3, [sp, #0]
   2d7f0:	movw	r3, #1223	; 0x4c7
   2d7f4:	mov	r4, r1
   2d7f6:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2d7fa:	ldr	r3, [sp, #148]	; 0x94
   2d7fc:	ldr	r1, [sp, #52]	; 0x34
   2d7fe:	mov	r0, fp
   2d800:	add.w	r8, sp, #204	; 0xcc
   2d804:	ldrd	r2, r3, [r3]
   2d808:	strd	r2, r3, [r5]
   2d80c:	ldr	r3, [sp, #172]	; 0xac
   2d80e:	ldr.w	r2, [r3, #447]	; 0x1bf
   2d812:	ldr.w	r3, [r3, #451]	; 0x1c3
   2d816:	strh	r1, [r5, #46]	; 0x2e
   2d818:	str	r1, [r7, #68]	; 0x44
   2d81a:	strd	r2, r3, [r5, #8]
   2d81e:	mov.w	r2, #65536	; 0x10000
   2d822:	movs	r3, #0
   2d824:	strd	r2, r3, [r5, #16]
   2d828:	ldr	r2, [sp, #44]	; 0x2c
   2d82a:	ldr	r3, [sp, #120]	; 0x78
   2d82c:	str.w	sl, [r5, #24]
   2d830:	ldr.w	r2, [r2, #388]	; 0x184
   2d834:	str	r3, [r5, #28]
   2d836:	mov.w	r3, #65536	; 0x10000
   2d83a:	strd	r3, r3, [r5, #32]
   2d83e:	strd	r3, r2, [r7, #56]	; 0x38
   2d842:	strd	r3, r3, [r7, #48]	; 0x30
   2d846:	ldr	r3, [sp, #120]	; 0x78
   2d848:	str	r2, [r5, #40]	; 0x28
   2d84a:	strh.w	fp, [r5, #44]	; 0x2c
   2d84e:	str	r3, [r7, #44]	; 0x2c
   2d850:	str.w	sl, [r7, #40]	; 0x28
   2d854:	str.w	fp, [r7, #64]	; 0x40
   2d858:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2d85c:	vmov	r1, s17
   2d860:	mov	r3, r5
   2d862:	mov	r2, r8
   2d864:	str	r0, [sp, #0]
   2d866:	vmov	r0, s16
   2d86a:	bl	1fb68 <btrfs_insert_item@@Base>
   2d86e:	movw	r3, #1245	; 0x4dd
   2d872:	mov	r2, r6
   2d874:	mov	r1, r4
   2d876:	str	r0, [sp, #0]
   2d878:	ldr	r0, [pc, #928]	; (2dc1c <btrfs_alloc_chunk@@Base+0xb60>)
   2d87a:	add	r0, pc
   2d87c:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2d880:	ldr.w	r2, [sp, #213]	; 0xd5
   2d884:	ldr.w	r3, [sp, #217]	; 0xd9
   2d888:	ldr	r1, [sp, #176]	; 0xb0
   2d88a:	strd	r2, r3, [r7, #24]
   2d88e:	strd	r2, r3, [r1]
   2d892:	mov	r1, r7
   2d894:	ldr	r3, [sp, #148]	; 0x94
   2d896:	ldrd	r2, r3, [r3]
   2d89a:	strd	r2, r3, [r7, #32]
   2d89e:	ldr	r3, [sp, #44]	; 0x2c
   2d8a0:	add.w	r0, r3, #228	; 0xe4
   2d8a4:	bl	1a73a <insert_cache_extent@@Base>
   2d8a8:	subs.w	r9, r0, #0
   2d8ac:	blt.n	2d96a <btrfs_alloc_chunk@@Base+0x8ae>
   2d8ae:	and.w	r2, sl, #2
   2d8b2:	movs	r3, #0
   2d8b4:	orrs	r3, r2
   2d8b6:	beq.n	2d8ce <btrfs_alloc_chunk@@Base+0x812>
   2d8b8:	mov	r0, fp
   2d8ba:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2d8be:	mov	r2, r5
   2d8c0:	mov	r1, r8
   2d8c2:	mov	r3, r0
   2d8c4:	ldr	r0, [sp, #44]	; 0x2c
   2d8c6:	bl	2d05c <btrfs_add_system_chunk@@Base>
   2d8ca:	subs.w	r9, r0, #0
   2d8ce:	mov	r0, r5
   2d8d0:	mov	r6, r9
   2d8d2:	blx	8b84 <free@plt+0x4>
   2d8d6:	b.n	2d10c <btrfs_alloc_chunk@@Base+0x50>
   2d8d8:	add	r3, sp, #196	; 0xc4
   2d8da:	ldr	r0, [pc, #836]	; (2dc20 <btrfs_alloc_chunk@@Base+0xb64>)
   2d8dc:	subs	r2, r4, r3
   2d8de:	vmov	r1, s22
   2d8e2:	negs	r3, r2
   2d8e4:	add	r0, pc
   2d8e6:	adcs	r3, r2
   2d8e8:	vmov	r2, s21
   2d8ec:	str	r3, [sp, #0]
   2d8ee:	movw	r3, #1196	; 0x4ac
   2d8f2:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2d8f6:	ldrd	r2, r3, [sp, #56]	; 0x38
   2d8fa:	orrs	r3, r2
   2d8fc:	beq.n	2d908 <btrfs_alloc_chunk@@Base+0x84c>
   2d8fe:	ldr	r2, [sp, #76]	; 0x4c
   2d900:	add.w	r3, fp, #4294967295	; 0xffffffff
   2d904:	cmp	r3, r2
   2d906:	bne.n	2d920 <btrfs_alloc_chunk@@Base+0x864>
   2d908:	ldrd	r2, r3, [r4]
   2d90c:	str	r3, [r2, #4]
   2d90e:	str	r2, [r3, #0]
   2d910:	ldr	r3, [sp, #48]	; 0x30
   2d912:	ldr	r3, [r3, #72]	; 0x48
   2d914:	str	r4, [r3, #4]
   2d916:	str	r3, [r4, #0]
   2d918:	ldr	r3, [sp, #108]	; 0x6c
   2d91a:	str	r3, [r4, #4]
   2d91c:	ldr	r3, [sp, #48]	; 0x30
   2d91e:	str	r4, [r3, #72]	; 0x48
   2d920:	ldr.w	r3, [sp, #213]	; 0xd5
   2d924:	vmov	s18, r3
   2d928:	ldr.w	r3, [sp, #217]	; 0xd9
   2d92c:	vmov	s19, r3
   2d930:	ldr	r3, [r4, #8]
   2d932:	str	r3, [sp, #104]	; 0x68
   2d934:	ldrd	r2, r3, [r4, #72]	; 0x48
   2d938:	strd	r2, r3, [sp, #80]	; 0x50
   2d93c:	ldr	r3, [sp, #104]	; 0x68
   2d93e:	ldr.w	r3, [r3, #464]	; 0x1d0
   2d942:	ldrd	r2, r3, [r3, #296]	; 0x128
   2d946:	cmp	r3, #0
   2d948:	it	eq
   2d94a:	cmpeq.w	r2, #1048576	; 0x100000
   2d94e:	strd	r2, r3, [sp, #24]
   2d952:	ittt	cc
   2d954:	movcc.w	r2, #1048576	; 0x100000
   2d958:	movcc	r3, #0
   2d95a:	strdcc	r2, r3, [sp, #24]
   2d95e:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2d962:	mov	r6, r0
   2d964:	cbnz	r0, 2d972 <btrfs_alloc_chunk@@Base+0x8b6>
   2d966:	mvn.w	r9, #11
   2d96a:	mov	r0, r7
   2d96c:	blx	8b84 <free@plt+0x4>
   2d970:	b.n	2d8ce <btrfs_alloc_chunk@@Base+0x812>
   2d972:	ldrd	r2, r3, [sp, #24]
   2d976:	ldrd	r0, r1, [sp, #80]	; 0x50
   2d97a:	cmp	r3, r1
   2d97c:	it	eq
   2d97e:	cmpeq	r2, r0
   2d980:	bcs.w	2dbf0 <btrfs_alloc_chunk@@Base+0xb34>
   2d984:	movs	r3, #2
   2d986:	strb.w	r3, [r6, #64]	; 0x40
   2d98a:	ldrd	r2, r3, [r4, #64]	; 0x40
   2d98e:	movs	r0, #0
   2d990:	ldr	r1, [sp, #104]	; 0x68
   2d992:	strd	r0, r0, [sp]
   2d996:	strd	r2, r3, [sp, #224]	; 0xe0
   2d99a:	add	r2, sp, #224	; 0xe0
   2d99c:	ldr	r3, [sp, #24]
   2d99e:	str.w	r3, [sp, #233]	; 0xe9
   2d9a2:	ldr	r3, [sp, #28]
   2d9a4:	str.w	r3, [sp, #237]	; 0xed
   2d9a8:	movs	r3, #204	; 0xcc
   2d9aa:	strb.w	r3, [sp, #232]	; 0xe8
   2d9ae:	mov	r3, r6
   2d9b0:	bl	1eadc <btrfs_search_slot@@Base>
   2d9b4:	subs.w	r9, r0, #0
   2d9b8:	blt.n	2da74 <btrfs_alloc_chunk@@Base+0x9b8>
   2d9ba:	bne.n	2da5c <btrfs_alloc_chunk@@Base+0x9a0>
   2d9bc:	ldrd	r2, r3, [sp, #24]
   2d9c0:	strd	r2, r3, [sp, #32]
   2d9c4:	movs	r3, #0
   2d9c6:	movs	r2, #0
   2d9c8:	strd	r2, r3, [sp, #64]	; 0x40
   2d9cc:	add	r3, sp, #224	; 0xe0
   2d9ce:	vmov	s20, r3
   2d9d2:	ldr.w	ip, [r6]
   2d9d6:	ldr.w	lr, [r6, #32]
   2d9da:	ldr.w	r3, [ip, #192]	; 0xc0
   2d9de:	cmp	r3, lr
   2d9e0:	bhi.w	2db1c <btrfs_alloc_chunk@@Base+0xa60>
   2d9e4:	mov.w	r3, #0
   2d9e8:	strb.w	r3, [r6, #65]	; 0x41
   2d9ec:	ldr	r3, [sp, #104]	; 0x68
   2d9ee:	mov	r1, r6
   2d9f0:	ldr.w	r0, [r3, #464]	; 0x1d0
   2d9f4:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2d9f8:	subs.w	r9, r0, #0
   2d9fc:	beq.n	2d9d2 <btrfs_alloc_chunk@@Base+0x916>
   2d9fe:	blt.n	2da74 <btrfs_alloc_chunk@@Base+0x9b8>
   2da00:	ldrd	r2, r3, [sp, #32]
   2da04:	ldrd	r0, r1, [sp, #80]	; 0x50
   2da08:	cmp	r3, r1
   2da0a:	it	eq
   2da0c:	cmpeq	r2, r0
   2da0e:	bcs.n	2da42 <btrfs_alloc_chunk@@Base+0x986>
   2da10:	ldr	r2, [sp, #32]
   2da12:	ldr	r3, [sp, #80]	; 0x50
   2da14:	subs	r3, r3, r2
   2da16:	ldr	r2, [sp, #36]	; 0x24
   2da18:	str	r3, [sp, #136]	; 0x88
   2da1a:	ldr	r3, [sp, #84]	; 0x54
   2da1c:	sbc.w	r3, r3, r2
   2da20:	str	r3, [sp, #140]	; 0x8c
   2da22:	ldrd	r0, r1, [sp, #136]	; 0x88
   2da26:	ldrd	r2, r3, [sp, #64]	; 0x40
   2da2a:	cmp	r3, r1
   2da2c:	it	eq
   2da2e:	cmpeq	r2, r0
   2da30:	bcs.n	2da42 <btrfs_alloc_chunk@@Base+0x986>
   2da32:	mov	r2, r0
   2da34:	mov	r3, r1
   2da36:	strd	r2, r3, [sp, #64]	; 0x40
   2da3a:	ldrd	r2, r3, [sp, #32]
   2da3e:	strd	r2, r3, [sp, #24]
   2da42:	ldrd	r2, r3, [sp, #64]	; 0x40
   2da46:	ldrd	r0, r1, [sp, #16]
   2da4a:	cmp	r3, r1
   2da4c:	it	eq
   2da4e:	cmpeq	r2, r0
   2da50:	ite	cc
   2da52:	mvncc.w	r9, #27
   2da56:	movcs.w	r9, #0
   2da5a:	b.n	2da74 <btrfs_alloc_chunk@@Base+0x9b8>
   2da5c:	ldrb.w	r3, [sp, #232]	; 0xe8
   2da60:	mov	r1, r6
   2da62:	ldr	r0, [sp, #104]	; 0x68
   2da64:	str	r3, [sp, #0]
   2da66:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2da6a:	bl	20194 <btrfs_previous_item@@Base>
   2da6e:	subs.w	r9, r0, #0
   2da72:	bge.n	2d9bc <btrfs_alloc_chunk@@Base+0x900>
   2da74:	mov	r0, r6
   2da76:	bl	1c71e <btrfs_free_path@@Base>
   2da7a:	cmp.w	r9, #0
   2da7e:	bne.w	2d96a <btrfs_alloc_chunk@@Base+0x8ae>
   2da82:	ldrd	r2, r3, [sp, #24]
   2da86:	mov	r1, r4
   2da88:	vmov	r0, s16
   2da8c:	strd	r2, r3, [sp, #8]
   2da90:	ldrd	r2, r3, [sp, #16]
   2da94:	strd	r2, r3, [sp]
   2da98:	vmov	r2, s18
   2da9c:	vmov	r3, s19
   2daa0:	bl	2cc2c <btrfs_insert_dev_extent@@Base>
   2daa4:	subs.w	r9, r0, #0
   2daa8:	blt.w	2d96a <btrfs_alloc_chunk@@Base+0x8ae>
   2daac:	ldrd	r3, r2, [r4, #80]	; 0x50
   2dab0:	ldr	r1, [sp, #16]
   2dab2:	vmov	r0, s16
   2dab6:	adds	r3, r3, r1
   2dab8:	ldr	r1, [sp, #20]
   2daba:	adc.w	r2, r1, r2
   2dabe:	mov	r1, r4
   2dac0:	strd	r3, r2, [r4, #80]	; 0x50
   2dac4:	bl	2cf78 <btrfs_update_device@@Base>
   2dac8:	ldr	r3, [sp, #72]	; 0x48
   2daca:	adds	r3, #16
   2dacc:	str	r3, [sp, #72]	; 0x48
   2dace:	ldr	r3, [sp, #88]	; 0x58
   2dad0:	add.w	r1, r3, #32
   2dad4:	subs.w	r9, r0, #0
   2dad8:	blt.w	2d96a <btrfs_alloc_chunk@@Base+0x8ae>
   2dadc:	ldr	r3, [sp, #72]	; 0x48
   2dade:	str.w	r4, [r3, #-16]
   2dae2:	mov	r0, r3
   2dae4:	ldrd	r2, r3, [sp, #24]
   2dae8:	strd	r2, r3, [r0, #-8]
   2daec:	ldrd	r2, r3, [r4, #64]	; 0x40
   2daf0:	strd	r2, r3, [r1, #-32]
   2daf4:	ldrd	r2, r3, [sp, #24]
   2daf8:	strd	r2, r3, [r1, #-24]
   2dafc:	add.w	r3, r4, #112	; 0x70
   2db00:	ldr	r2, [sp, #88]	; 0x58
   2db02:	adds	r4, #128	; 0x80
   2db04:	adds	r2, #16
   2db06:	ldr.w	r0, [r3], #4
   2db0a:	cmp	r3, r4
   2db0c:	str.w	r0, [r2], #4
   2db10:	bne.n	2db06 <btrfs_alloc_chunk@@Base+0xa4a>
   2db12:	ldr	r3, [sp, #76]	; 0x4c
   2db14:	str	r1, [sp, #88]	; 0x58
   2db16:	adds	r3, #1
   2db18:	str	r3, [sp, #76]	; 0x4c
   2db1a:	b.n	2d7c4 <btrfs_alloc_chunk@@Base+0x708>
   2db1c:	mov	r2, lr
   2db1e:	vmov	r1, s20
   2db22:	mov	r0, ip
   2db24:	str.w	lr, [sp, #124]	; 0x7c
   2db28:	str.w	ip, [sp, #96]	; 0x60
   2db2c:	bl	2c764 <btrfs_add_root_ref@@Base+0x29c>
   2db30:	ldrd	r8, r9, [sp, #224]	; 0xe0
   2db34:	ldrd	r2, r3, [r4, #64]	; 0x40
   2db38:	cmp	r9, r3
   2db3a:	it	eq
   2db3c:	cmpeq	r8, r2
   2db3e:	bcc.n	2dbe8 <btrfs_alloc_chunk@@Base+0xb2c>
   2db40:	cmp	r3, r9
   2db42:	it	eq
   2db44:	cmpeq	r2, r8
   2db46:	bcc.w	2da00 <btrfs_alloc_chunk@@Base+0x944>
   2db4a:	ldrb.w	r3, [sp, #232]	; 0xe8
   2db4e:	cmp	r3, #204	; 0xcc
   2db50:	bne.n	2dbe8 <btrfs_alloc_chunk@@Base+0xb2c>
   2db52:	ldrd	r2, r3, [sp, #32]
   2db56:	ldr.w	r9, [sp, #237]	; 0xed
   2db5a:	ldr.w	r8, [sp, #233]	; 0xe9
   2db5e:	cmp	r3, r9
   2db60:	ldr.w	ip, [sp, #96]	; 0x60
   2db64:	it	eq
   2db66:	cmpeq	r2, r8
   2db68:	ldr.w	lr, [sp, #124]	; 0x7c
   2db6c:	bcs.n	2dbae <btrfs_alloc_chunk@@Base+0xaf2>
   2db6e:	ldr	r3, [sp, #32]
   2db70:	subs.w	r3, r8, r3
   2db74:	str	r3, [sp, #112]	; 0x70
   2db76:	ldr	r3, [sp, #36]	; 0x24
   2db78:	sbc.w	r3, r9, r3
   2db7c:	str	r3, [sp, #116]	; 0x74
   2db7e:	ldrd	r0, r1, [sp, #112]	; 0x70
   2db82:	ldrd	r2, r3, [sp, #64]	; 0x40
   2db86:	cmp	r3, r1
   2db88:	it	eq
   2db8a:	cmpeq	r2, r0
   2db8c:	bcs.n	2db9e <btrfs_alloc_chunk@@Base+0xae2>
   2db8e:	mov	r2, r0
   2db90:	mov	r3, r1
   2db92:	strd	r2, r3, [sp, #64]	; 0x40
   2db96:	ldrd	r2, r3, [sp, #32]
   2db9a:	strd	r2, r3, [sp, #24]
   2db9e:	ldrd	r2, r3, [sp, #112]	; 0x70
   2dba2:	ldrd	r0, r1, [sp, #16]
   2dba6:	cmp	r3, r1
   2dba8:	it	eq
   2dbaa:	cmpeq	r2, r0
   2dbac:	bcs.n	2dbf6 <btrfs_alloc_chunk@@Base+0xb3a>
   2dbae:	add.w	r0, ip, #96	; 0x60
   2dbb2:	movs	r3, #25
   2dbb4:	mla	r2, r3, lr, r0
   2dbb8:	ldr.w	r3, [r2, #118]	; 0x76
   2dbbc:	add	r0, r3
   2dbbe:	ldr.w	r3, [r0, #125]!
   2dbc2:	adds.w	r3, r3, r8
   2dbc6:	str	r3, [sp, #160]	; 0xa0
   2dbc8:	ldr	r2, [r0, #4]
   2dbca:	adc.w	r3, r2, r9
   2dbce:	str	r3, [sp, #164]	; 0xa4
   2dbd0:	ldrd	r0, r1, [sp, #160]	; 0xa0
   2dbd4:	ldrd	r2, r3, [sp, #32]
   2dbd8:	cmp	r3, r1
   2dbda:	it	eq
   2dbdc:	cmpeq	r2, r0
   2dbde:	ittt	cc
   2dbe0:	movcc	r2, r0
   2dbe2:	movcc	r3, r1
   2dbe4:	strdcc	r2, r3, [sp, #32]
   2dbe8:	ldr	r3, [r6, #32]
   2dbea:	adds	r3, #1
   2dbec:	str	r3, [r6, #32]
   2dbee:	b.n	2d9d2 <btrfs_alloc_chunk@@Base+0x916>
   2dbf0:	mvn.w	r9, #27
   2dbf4:	b.n	2da74 <btrfs_alloc_chunk@@Base+0x9b8>
   2dbf6:	mov.w	r9, #0
   2dbfa:	b.n	2da74 <btrfs_alloc_chunk@@Base+0x9b8>
   2dbfc:	mov	r0, r6
   2dbfe:	add	sp, #252	; 0xfc
   2dc00:	vpop	{d8-d11}
   2dc04:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc08:	strh	r2, [r0, #26]
   2dc0a:	movs	r1, r0
   2dc0c:	ldrb	r6, [r3, #17]
   2dc0e:	movs	r1, r0
   2dc10:	strh	r2, [r3, #24]
   2dc12:	movs	r1, r0
   2dc14:	ldrb	r0, [r7, #16]
   2dc16:	movs	r1, r0
   2dc18:	ldrb	r4, [r7, #16]
   2dc1a:	movs	r1, r0
   2dc1c:	movs	r2, #200	; 0xc8
   2dc1e:	movs	r1, r0
   2dc20:	ldrb	r3, [r0, #13]
   2dc22:	movs	r1, r0

0002dc24 <btrfs_alloc_data_chunk@@Base>:
   2dc24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc28:	mov	r7, r1
   2dc2a:	vpush	{d8}
   2dc2e:	mov	r8, r0
   2dc30:	ldr	r1, [pc, #504]	; (2de2c <btrfs_alloc_data_chunk@@Base+0x208>)
   2dc32:	ldr.w	r6, [r7, #352]	; 0x160
   2dc36:	add	r1, pc
   2dc38:	sub	sp, #60	; 0x3c
   2dc3a:	ldrd	sl, fp, [r2]
   2dc3e:	ldr	r3, [sp, #104]	; 0x68
   2dc40:	cmp	fp, fp
   2dc42:	str	r3, [sp, #16]
   2dc44:	ldr	r3, [sp, #108]	; 0x6c
   2dc46:	str	r3, [sp, #20]
   2dc48:	ldr	r3, [pc, #484]	; (2de30 <btrfs_alloc_data_chunk@@Base+0x20c>)
   2dc4a:	ldr	r3, [r1, r3]
   2dc4c:	ldr	r3, [r3, #0]
   2dc4e:	str	r3, [sp, #52]	; 0x34
   2dc50:	mov.w	r3, #0
   2dc54:	ldr	r3, [r7, #24]
   2dc56:	str	r3, [sp, #24]
   2dc58:	ldr	r3, [r7, #32]
   2dc5a:	vmov	s17, r3
   2dc5e:	ldr.w	r3, [r7, #388]	; 0x184
   2dc62:	rsb	r1, r3, #0
   2dc66:	mov	r3, fp
   2dc68:	and.w	r2, r1, sl
   2dc6c:	it	eq
   2dc6e:	cmpeq	sl, r2
   2dc70:	beq.n	2dc96 <btrfs_alloc_data_chunk@@Base+0x72>
   2dc72:	ldr	r0, [pc, #448]	; (2de34 <btrfs_alloc_data_chunk@@Base+0x210>)
   2dc74:	mov	r2, sl
   2dc76:	mvn.w	r5, #21
   2dc7a:	add	r0, pc
   2dc7c:	bl	1bd1c <__btrfs_error@@Base>
   2dc80:	ldr	r2, [pc, #436]	; (2de38 <btrfs_alloc_data_chunk@@Base+0x214>)
   2dc82:	ldr	r3, [pc, #428]	; (2de30 <btrfs_alloc_data_chunk@@Base+0x20c>)
   2dc84:	add	r2, pc
   2dc86:	ldr	r3, [r2, r3]
   2dc88:	ldr	r2, [r3, #0]
   2dc8a:	ldr	r3, [sp, #52]	; 0x34
   2dc8c:	eors	r2, r3
   2dc8e:	beq.w	2de20 <btrfs_alloc_data_chunk@@Base+0x1fc>
   2dc92:	blx	8c90 <__stack_chk_fail@plt>
   2dc96:	movs	r0, #1
   2dc98:	mov.w	r2, #256	; 0x100
   2dc9c:	movs	r3, #0
   2dc9e:	str.w	sl, [sp, #41]	; 0x29
   2dca2:	strd	r2, r3, [sp, #32]
   2dca6:	movs	r3, #228	; 0xe4
   2dca8:	str.w	fp, [sp, #45]	; 0x2d
   2dcac:	strb.w	r3, [sp, #40]	; 0x28
   2dcb0:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2dcb4:	blx	8e40 <malloc@plt+0x4>
   2dcb8:	mov	r4, r0
   2dcba:	cbz	r0, 2dccc <btrfs_alloc_data_chunk@@Base+0xa8>
   2dcbc:	movs	r0, #88	; 0x58
   2dcbe:	blx	8e40 <malloc@plt+0x4>
   2dcc2:	mov	r5, r0
   2dcc4:	cbnz	r0, 2dcd2 <btrfs_alloc_data_chunk@@Base+0xae>
   2dcc6:	mov	r0, r4
   2dcc8:	blx	8b84 <free@plt+0x4>
   2dccc:	mvn.w	r5, #11
   2dcd0:	b.n	2dc80 <btrfs_alloc_data_chunk@@Base+0x5c>
   2dcd2:	ldr	r3, [sp, #16]
   2dcd4:	mov	r2, sl
   2dcd6:	ldr	r6, [r6, #72]	; 0x48
   2dcd8:	mov	r0, r8
   2dcda:	strd	sl, fp, [sp, #8]
   2dcde:	str	r3, [sp, #0]
   2dce0:	ldr	r3, [sp, #20]
   2dce2:	mov	r1, r6
   2dce4:	ldr.w	r9, [pc, #340]	; 2de3c <btrfs_alloc_data_chunk@@Base+0x218>
   2dce8:	str	r3, [sp, #4]
   2dcea:	mov	r3, fp
   2dcec:	bl	2cc2c <btrfs_insert_dev_extent@@Base>
   2dcf0:	ldr	r2, [pc, #332]	; (2de40 <btrfs_alloc_data_chunk@@Base+0x21c>)
   2dcf2:	ldr	r1, [pc, #336]	; (2de44 <btrfs_alloc_data_chunk@@Base+0x220>)
   2dcf4:	add	r9, pc
   2dcf6:	add	r2, pc
   2dcf8:	movw	r3, #1332	; 0x534
   2dcfc:	add	r1, pc
   2dcfe:	adds	r2, #72	; 0x48
   2dd00:	str	r2, [sp, #28]
   2dd02:	vmov	s16, r1
   2dd06:	str	r0, [sp, #0]
   2dd08:	mov	r0, r9
   2dd0a:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2dd0e:	ldrd	r3, r1, [r6, #80]	; 0x50
   2dd12:	ldr	r2, [sp, #16]
   2dd14:	mov	r0, r8
   2dd16:	adds	r3, r3, r2
   2dd18:	ldr	r2, [sp, #20]
   2dd1a:	adc.w	r1, r2, r1
   2dd1e:	strd	r3, r1, [r6, #80]	; 0x50
   2dd22:	mov	r1, r6
   2dd24:	bl	2cf78 <btrfs_update_device@@Base>
   2dd28:	ldr	r2, [sp, #28]
   2dd2a:	mov.w	r3, #1336	; 0x538
   2dd2e:	vmov	r1, s16
   2dd32:	str	r0, [sp, #0]
   2dd34:	mov	r0, r9
   2dd36:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2dd3a:	str	r6, [r5, #72]	; 0x48
   2dd3c:	strd	sl, fp, [r5, #80]	; 0x50
   2dd40:	add.w	ip, r4, #64	; 0x40
   2dd44:	ldrd	r2, r3, [r6, #64]	; 0x40
   2dd48:	strd	sl, fp, [r4, #56]	; 0x38
   2dd4c:	strd	r2, r3, [r4, #48]	; 0x30
   2dd50:	add.w	r3, r6, #112	; 0x70
   2dd54:	adds	r6, #128	; 0x80
   2dd56:	ldr	r0, [r3, #0]
   2dd58:	adds	r3, #8
   2dd5a:	ldr.w	r1, [r3, #-4]
   2dd5e:	cmp	r3, r6
   2dd60:	mov	r2, ip
   2dd62:	stmia	r2!, {r0, r1}
   2dd64:	mov	ip, r2
   2dd66:	bne.n	2dd56 <btrfs_alloc_data_chunk@@Base+0x132>
   2dd68:	ldr	r3, [sp, #16]
   2dd6a:	movs	r0, #1
   2dd6c:	movs	r1, #0
   2dd6e:	mov.w	r6, #65537	; 0x10001
   2dd72:	str	r3, [r4, #0]
   2dd74:	ldr	r3, [sp, #20]
   2dd76:	str	r3, [r4, #4]
   2dd78:	ldr	r3, [sp, #24]
   2dd7a:	ldr.w	r2, [r3, #447]	; 0x1bf
   2dd7e:	ldr.w	r3, [r3, #451]	; 0x1c3
   2dd82:	strd	r0, r1, [r4, #24]
   2dd86:	str	r6, [r4, #44]	; 0x2c
   2dd88:	strd	r2, r3, [r4, #8]
   2dd8c:	mov.w	r2, #65536	; 0x10000
   2dd90:	movs	r3, #0
   2dd92:	strd	r2, r3, [r4, #16]
   2dd96:	ldr.w	r2, [r7, #388]	; 0x184
   2dd9a:	mov.w	r3, #65536	; 0x10000
   2dd9e:	strd	r0, r1, [r5, #40]	; 0x28
   2dda2:	strd	r3, r3, [r4, #32]
   2dda6:	strd	r3, r2, [r5, #56]	; 0x38
   2ddaa:	str	r2, [r4, #40]	; 0x28
   2ddac:	strd	r3, r3, [r5, #48]	; 0x30
   2ddb0:	strd	r0, r0, [r5, #64]	; 0x40
   2ddb4:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2ddb8:	vmov	r1, s17
   2ddbc:	add	r2, sp, #32
   2ddbe:	mov	r3, r4
   2ddc0:	ldr	r6, [pc, #132]	; (2de48 <btrfs_alloc_data_chunk@@Base+0x224>)
   2ddc2:	add	r6, pc
   2ddc4:	str	r0, [sp, #0]
   2ddc6:	mov	r0, r8
   2ddc8:	bl	1fb68 <btrfs_insert_item@@Base>
   2ddcc:	ldr.w	r8, [pc, #124]	; 2de4c <btrfs_alloc_data_chunk@@Base+0x228>
   2ddd0:	ldr	r2, [pc, #124]	; (2de50 <btrfs_alloc_data_chunk@@Base+0x22c>)
   2ddd2:	movw	r3, #1367	; 0x557
   2ddd6:	add	r8, pc
   2ddd8:	add	r2, pc
   2ddda:	adds	r2, #72	; 0x48
   2dddc:	mov	r1, r8
   2ddde:	str	r2, [sp, #24]
   2dde0:	str	r0, [sp, #0]
   2dde2:	mov	r0, r6
   2dde4:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2dde8:	ldr.w	r1, [sp, #41]	; 0x29
   2ddec:	ldr.w	r3, [sp, #45]	; 0x2d
   2ddf0:	add.w	r0, r7, #228	; 0xe4
   2ddf4:	strd	r1, r3, [r5, #24]
   2ddf8:	mov	r1, r5
   2ddfa:	ldr	r3, [sp, #16]
   2ddfc:	str	r3, [r5, #32]
   2ddfe:	ldr	r3, [sp, #20]
   2de00:	str	r3, [r5, #36]	; 0x24
   2de02:	bl	1a73a <insert_cache_extent@@Base>
   2de06:	ldr	r2, [sp, #24]
   2de08:	movw	r3, #1373	; 0x55d
   2de0c:	mov	r1, r8
   2de0e:	str	r0, [sp, #0]
   2de10:	mov	r5, r0
   2de12:	mov	r0, r6
   2de14:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2de18:	mov	r0, r4
   2de1a:	blx	8b84 <free@plt+0x4>
   2de1e:	b.n	2dc80 <btrfs_alloc_data_chunk@@Base+0x5c>
   2de20:	mov	r0, r5
   2de22:	add	sp, #60	; 0x3c
   2de24:	vpop	{d8}
   2de28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de2c:	beq.n	2ddf4 <btrfs_alloc_data_chunk@@Base+0x1d0>
   2de2e:	movs	r3, r0
   2de30:	lsls	r0, r1, #10
   2de32:	movs	r0, r0
   2de34:	strb	r7, [r0, #31]
   2de36:	movs	r1, r0
   2de38:	beq.n	2dd64 <btrfs_alloc_data_chunk@@Base+0x140>
   2de3a:	movs	r3, r0
   2de3c:	subs	r6, r1, #1
   2de3e:	movs	r1, r0
   2de40:	ldrb	r6, [r7, #23]
   2de42:	movs	r1, r0
   2de44:	strb	r0, [r4, #28]
   2de46:	movs	r1, r0
   2de48:	adds	r0, r0, #6
   2de4a:	movs	r1, r0
   2de4c:	strb	r6, [r0, #25]
   2de4e:	movs	r1, r0
   2de50:	ldrb	r4, [r3, #20]
   2de52:	movs	r1, r0

0002de54 <btrfs_num_copies@@Base>:
   2de54:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de58:	sub	sp, #44	; 0x2c
   2de5a:	adds	r0, #228	; 0xe4
   2de5c:	mov	r4, r2
   2de5e:	ldrd	fp, r1, [sp, #80]	; 0x50
   2de62:	mov	r5, r3
   2de64:	ldr.w	sl, [pc, #196]	; 2df2c <btrfs_num_copies@@Base+0xd8>
   2de68:	str	r1, [sp, #36]	; 0x24
   2de6a:	bl	1a87c <search_cache_extent@@Base>
   2de6e:	add	sl, pc
   2de70:	ldr	r1, [sp, #36]	; 0x24
   2de72:	cbnz	r0, 2de9e <btrfs_num_copies@@Base+0x4a>
   2de74:	ldr	r3, [pc, #184]	; (2df30 <btrfs_num_copies@@Base+0xdc>)
   2de76:	adds.w	r2, r4, fp
   2de7a:	adc.w	r1, r5, r1
   2de7e:	ldr.w	r3, [sl, r3]
   2de82:	strd	r2, r1, [sp, #8]
   2de86:	movs	r1, #1
   2de88:	ldr	r2, [pc, #168]	; (2df34 <btrfs_num_copies@@Base+0xe0>)
   2de8a:	strd	r4, r5, [sp]
   2de8e:	add	r2, pc
   2de90:	ldr	r0, [r3, #0]
   2de92:	blx	9040 <__fprintf_chk@plt+0x4>
   2de96:	movs	r0, #1
   2de98:	add	sp, #44	; 0x2c
   2de9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de9e:	ldrd	r8, r9, [r0, #24]
   2dea2:	ldrd	r3, r2, [r0, #32]
   2dea6:	adds.w	r6, r8, r3
   2deaa:	adc.w	r7, r9, r2
   2deae:	cmp	r5, r9
   2deb0:	it	eq
   2deb2:	cmpeq	r4, r8
   2deb4:	bcc.n	2debe <btrfs_num_copies@@Base+0x6a>
   2deb6:	cmp	r7, r5
   2deb8:	it	eq
   2deba:	cmpeq	r6, r4
   2debc:	bcs.n	2deea <btrfs_num_copies@@Base+0x96>
   2debe:	ldr	r3, [pc, #112]	; (2df30 <btrfs_num_copies@@Base+0xdc>)
   2dec0:	adds.w	r2, r4, fp
   2dec4:	adc.w	r1, r5, r1
   2dec8:	ldr.w	r3, [sl, r3]
   2decc:	strd	r2, r1, [sp, #8]
   2ded0:	movs	r1, #1
   2ded2:	ldr	r2, [pc, #100]	; (2df38 <btrfs_num_copies@@Base+0xe4>)
   2ded4:	strd	r6, r7, [sp, #24]
   2ded8:	strd	r8, r9, [sp, #16]
   2dedc:	add	r2, pc
   2dede:	strd	r4, r5, [sp]
   2dee2:	ldr	r0, [r3, #0]
   2dee4:	blx	9040 <__fprintf_chk@plt+0x4>
   2dee8:	b.n	2de96 <btrfs_num_copies@@Base+0x42>
   2deea:	ldr	r2, [r0, #40]	; 0x28
   2deec:	movs	r3, #0
   2deee:	mov	r5, r3
   2def0:	and.w	r4, r2, #1584	; 0x630
   2def4:	orrs.w	r1, r4, r5
   2def8:	beq.n	2defe <btrfs_num_copies@@Base+0xaa>
   2defa:	ldr	r0, [r0, #64]	; 0x40
   2defc:	b.n	2de98 <btrfs_num_copies@@Base+0x44>
   2defe:	and.w	r4, r2, #64	; 0x40
   2df02:	orrs.w	r1, r4, r5
   2df06:	beq.n	2df0c <btrfs_num_copies@@Base+0xb8>
   2df08:	ldr	r0, [r0, #68]	; 0x44
   2df0a:	b.n	2de98 <btrfs_num_copies@@Base+0x44>
   2df0c:	and.w	r0, r2, #128	; 0x80
   2df10:	mov	r1, r3
   2df12:	orrs	r1, r0
   2df14:	bne.n	2df28 <btrfs_num_copies@@Base+0xd4>
   2df16:	and.w	r0, r2, #256	; 0x100
   2df1a:	mov	r1, r3
   2df1c:	orrs.w	r3, r0, r1
   2df20:	ite	ne
   2df22:	movne	r0, #3
   2df24:	moveq	r0, #1
   2df26:	b.n	2de98 <btrfs_num_copies@@Base+0x44>
   2df28:	movs	r0, #2
   2df2a:	b.n	2de98 <btrfs_num_copies@@Base+0x44>
   2df2c:	ldmia	r6!, {r1, r3, r5, r7}
   2df2e:	movs	r3, r0
   2df30:	lsls	r4, r3, #10
   2df32:	movs	r0, r0
   2df34:	strb	r1, [r4, #23]
   2df36:	movs	r1, r0
   2df38:	strb	r5, [r5, #22]
   2df3a:	movs	r1, r0

0002df3c <btrfs_next_bg@@Base>:
   2df3c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2df40:	adds	r0, #228	; 0xe4
   2df42:	ldrd	r4, r5, [r1]
   2df46:	mov	r7, r2
   2df48:	ldrd	sl, fp, [sp, #40]	; 0x28
   2df4c:	mov	r6, r1
   2df4e:	mov	r2, r4
   2df50:	mov	r3, r5
   2df52:	bl	1a87c <search_cache_extent@@Base>
   2df56:	cbz	r0, 2df64 <btrfs_next_bg@@Base+0x28>
   2df58:	orrs.w	r3, r4, r5
   2df5c:	beq.n	2df6c <btrfs_next_bg@@Base+0x30>
   2df5e:	bl	1a950 <next_cache_extent@@Base>
   2df62:	cbnz	r0, 2df6c <btrfs_next_bg@@Base+0x30>
   2df64:	mvn.w	r0, #1
   2df68:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2df6c:	ldrd	r2, r3, [r0, #40]	; 0x28
   2df70:	ldrd	r4, r5, [r0, #24]
   2df74:	and.w	r8, sl, r2
   2df78:	and.w	r9, fp, r3
   2df7c:	orrs.w	r3, r8, r9
   2df80:	beq.n	2df92 <btrfs_next_bg@@Base+0x56>
   2df82:	strd	r4, r5, [r6]
   2df86:	ldrd	r2, r3, [r0, #32]
   2df8a:	movs	r0, #0
   2df8c:	strd	r2, r3, [r7]
   2df90:	b.n	2df68 <btrfs_next_bg@@Base+0x2c>
   2df92:	orrs.w	r3, r4, r5
   2df96:	bne.n	2df56 <btrfs_next_bg@@Base+0x1a>
   2df98:	bl	1a950 <next_cache_extent@@Base>
   2df9c:	b.n	2df56 <btrfs_next_bg@@Base+0x1a>

0002df9e <btrfs_rmap_block@@Base>:
   2df9e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dfa2:	adds	r0, #228	; 0xe4
   2dfa4:	sub	sp, #60	; 0x3c
   2dfa6:	bl	1a87c <search_cache_extent@@Base>
   2dfaa:	ldr	r2, [pc, #464]	; (2e17c <btrfs_rmap_block@@Base+0x1de>)
   2dfac:	ldr	r1, [pc, #464]	; (2e180 <btrfs_rmap_block@@Base+0x1e2>)
   2dfae:	movw	r3, #1467	; 0x5bb
   2dfb2:	add	r2, pc
   2dfb4:	adds	r2, #95	; 0x5f
   2dfb6:	add	r1, pc
   2dfb8:	mov	r4, r0
   2dfba:	clz	r0, r0
   2dfbe:	lsrs	r0, r0, #5
   2dfc0:	str	r0, [sp, #0]
   2dfc2:	ldr	r0, [pc, #448]	; (2e184 <btrfs_rmap_block@@Base+0x1e6>)
   2dfc4:	add	r0, pc
   2dfc6:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2dfca:	ldr	r5, [r4, #56]	; 0x38
   2dfcc:	ldr	r0, [r4, #40]	; 0x28
   2dfce:	movs	r1, #0
   2dfd0:	ldrd	r6, r7, [r4, #32]
   2dfd4:	asrs	r3, r5, #31
   2dfd6:	mov	r2, r5
   2dfd8:	strd	r2, r3, [sp, #8]
   2dfdc:	and.w	r2, r0, #64	; 0x40
   2dfe0:	mov	r3, r1
   2dfe2:	orrs	r3, r2
   2dfe4:	beq.n	2e034 <btrfs_rmap_block@@Base+0x96>
   2dfe6:	ldrd	r0, r1, [r4, #64]	; 0x40
   2dfea:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   2dfee:	mov	r2, r0
   2dff0:	mov	r0, r6
   2dff2:	mov	r1, r7
   2dff4:	asrs	r3, r2, #31
   2dff6:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2dffa:	mov	r6, r0
   2dffc:	mov	r7, r1
   2dffe:	ldr	r1, [r4, #64]	; 0x40
   2e000:	movs	r0, #1
   2e002:	mov.w	r8, #0
   2e006:	mov	sl, r8
   2e008:	mov	r9, r8
   2e00a:	lsls	r1, r1, #3
   2e00c:	blx	8ab8 <calloc@plt+0x4>
   2e010:	strd	r0, r4, [sp, #24]
   2e014:	ldr	r5, [r4, #64]	; 0x40
   2e016:	cmp	r5, r8
   2e018:	bgt.n	2e072 <btrfs_rmap_block@@Base+0xd4>
   2e01a:	ldr	r3, [sp, #104]	; 0x68
   2e01c:	movs	r0, #0
   2e01e:	ldr	r2, [sp, #24]
   2e020:	str	r2, [r3, #0]
   2e022:	ldr	r3, [sp, #108]	; 0x6c
   2e024:	ldr	r2, [sp, #8]
   2e026:	str.w	r9, [r3]
   2e02a:	ldr	r3, [sp, #112]	; 0x70
   2e02c:	str	r2, [r3, #0]
   2e02e:	add	sp, #60	; 0x3c
   2e030:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e034:	and.w	r8, r0, #8
   2e038:	mov	r9, r1
   2e03a:	orrs.w	r3, r8, r9
   2e03e:	ldr	r2, [r4, #64]	; 0x40
   2e040:	bne.n	2dff0 <btrfs_rmap_block@@Base+0x52>
   2e042:	and.w	r2, r0, #384	; 0x180
   2e046:	mov	r3, r1
   2e048:	orrs	r3, r2
   2e04a:	beq.n	2dffe <btrfs_rmap_block@@Base+0x60>
   2e04c:	mov	r0, r4
   2e04e:	bl	2c5c8 <btrfs_add_root_ref@@Base+0x100>
   2e052:	mov	r1, r7
   2e054:	asrs	r3, r0, #31
   2e056:	mov	r2, r0
   2e058:	mov	r8, r0
   2e05a:	mov	r0, r6
   2e05c:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e060:	mul.w	r5, r8, r5
   2e064:	asrs	r3, r5, #31
   2e066:	mov	r2, r5
   2e068:	strd	r2, r3, [sp, #8]
   2e06c:	mov	r6, r0
   2e06e:	mov	r7, r1
   2e070:	b.n	2dffe <btrfs_rmap_block@@Base+0x60>
   2e072:	ldr	r3, [sp, #28]
   2e074:	ldrd	fp, ip, [r3, #80]	; 0x50
   2e078:	ldrd	r2, r3, [sp, #96]	; 0x60
   2e07c:	cmp	r3, ip
   2e07e:	it	eq
   2e080:	cmpeq	r2, fp
   2e082:	bcc.n	2e12c <btrfs_rmap_block@@Base+0x18e>
   2e084:	adds.w	r3, fp, r6
   2e088:	str	r3, [sp, #32]
   2e08a:	adc.w	r3, ip, r7
   2e08e:	str	r3, [sp, #36]	; 0x24
   2e090:	ldrd	r0, r1, [sp, #32]
   2e094:	ldrd	r2, r3, [sp, #96]	; 0x60
   2e098:	cmp	r3, r1
   2e09a:	it	eq
   2e09c:	cmpeq	r2, r0
   2e09e:	bcs.n	2e12c <btrfs_rmap_block@@Base+0x18e>
   2e0a0:	ldr	r1, [sp, #96]	; 0x60
   2e0a2:	ldr	r2, [r4, #56]	; 0x38
   2e0a4:	subs.w	r0, r1, fp
   2e0a8:	ldr	r1, [sp, #100]	; 0x64
   2e0aa:	mov.w	r3, r2, asr #31
   2e0ae:	sbc.w	r1, r1, ip
   2e0b2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e0b6:	ldr	r3, [r4, #40]	; 0x28
   2e0b8:	and.w	r2, r3, #64	; 0x40
   2e0bc:	str	r2, [sp, #40]	; 0x28
   2e0be:	movs	r2, #0
   2e0c0:	str	r2, [sp, #44]	; 0x2c
   2e0c2:	ldrd	fp, ip, [sp, #40]	; 0x28
   2e0c6:	orrs.w	r2, fp, ip
   2e0ca:	mov	lr, r0
   2e0cc:	beq.n	2e13c <btrfs_rmap_block@@Base+0x19e>
   2e0ce:	asrs	r3, r5, #31
   2e0d0:	ldr	r2, [r4, #68]	; 0x44
   2e0d2:	muls	r1, r5
   2e0d4:	mla	r1, lr, r3, r1
   2e0d8:	asrs	r3, r2, #31
   2e0da:	umull	fp, ip, r5, lr
   2e0de:	add	ip, r1
   2e0e0:	adds.w	r0, fp, r8
   2e0e4:	adc.w	r1, ip, sl
   2e0e8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e0ec:	mov	lr, r0
   2e0ee:	ldr	r3, [sp, #12]
   2e0f0:	ldr	r2, [sp, #8]
   2e0f2:	mul.w	r3, lr, r3
   2e0f6:	mla	r1, r2, r1, r3
   2e0fa:	umull	r2, r3, lr, r2
   2e0fe:	add	r3, r1
   2e100:	ldrd	r1, r0, [r4, #24]
   2e104:	adds	r1, r2, r1
   2e106:	str	r1, [sp, #16]
   2e108:	adcs	r3, r0
   2e10a:	str	r3, [sp, #20]
   2e10c:	ldr	r3, [sp, #24]
   2e10e:	sub.w	r2, r3, #8
   2e112:	movs	r3, #0
   2e114:	cmp	r3, r9
   2e116:	blt.n	2e166 <btrfs_rmap_block@@Base+0x1c8>
   2e118:	bne.n	2e12c <btrfs_rmap_block@@Base+0x18e>
   2e11a:	ldr	r3, [sp, #24]
   2e11c:	ldrd	r1, r2, [sp, #16]
   2e120:	add.w	r3, r3, r9, lsl #3
   2e124:	add.w	r9, r9, #1
   2e128:	strd	r1, r2, [r3]
   2e12c:	ldr	r3, [sp, #28]
   2e12e:	adds.w	r8, r8, #1
   2e132:	adc.w	sl, sl, #0
   2e136:	adds	r3, #16
   2e138:	str	r3, [sp, #28]
   2e13a:	b.n	2e014 <btrfs_rmap_block@@Base+0x76>
   2e13c:	and.w	r3, r3, #8
   2e140:	str	r3, [sp, #48]	; 0x30
   2e142:	movs	r3, #0
   2e144:	str	r3, [sp, #52]	; 0x34
   2e146:	ldrd	r2, r3, [sp, #48]	; 0x30
   2e14a:	orrs	r3, r2
   2e14c:	beq.n	2e0ee <btrfs_rmap_block@@Base+0x150>
   2e14e:	asrs	r3, r5, #31
   2e150:	muls	r1, r5
   2e152:	mla	r3, lr, r3, r1
   2e156:	umull	r0, r1, r5, lr
   2e15a:	add	r1, r3
   2e15c:	adds.w	lr, r0, r8
   2e160:	adc.w	r1, r1, sl
   2e164:	b.n	2e0ee <btrfs_rmap_block@@Base+0x150>
   2e166:	ldrd	r0, r1, [r2, #8]!
   2e16a:	ldrd	fp, ip, [sp, #16]
   2e16e:	cmp	r1, ip
   2e170:	it	eq
   2e172:	cmpeq	r0, fp
   2e174:	beq.n	2e12c <btrfs_rmap_block@@Base+0x18e>
   2e176:	adds	r3, #1
   2e178:	b.n	2e114 <btrfs_rmap_block@@Base+0x176>
   2e17a:	nop
   2e17c:	ldrb	r2, [r0, #13]
   2e17e:	movs	r1, r0
   2e180:	strb	r6, [r4, #17]
   2e182:	movs	r1, r0
   2e184:	strb	r3, [r6, #19]
   2e186:	movs	r1, r0

0002e188 <__btrfs_map_block@@Base>:
   2e188:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e18c:	sub	sp, #124	; 0x7c
   2e18e:	mov	fp, r1
   2e190:	strd	r2, r3, [sp, #16]
   2e194:	ldrd	r3, r5, [sp, #168]	; 0xa8
   2e198:	cbz	r3, 2e1d2 <__btrfs_map_block@@Base+0x4a>
   2e19a:	cmp	r1, #0
   2e19c:	ite	eq
   2e19e:	moveq	r7, #1
   2e1a0:	movne	r7, #8
   2e1a2:	add.w	sl, r0, #228	; 0xe4
   2e1a6:	movs	r6, #1
   2e1a8:	mov.w	r9, #0
   2e1ac:	ldrd	r2, r3, [sp, #16]
   2e1b0:	mov	r0, sl
   2e1b2:	bl	1a87c <search_cache_extent@@Base>
   2e1b6:	mov	r4, r0
   2e1b8:	cbnz	r0, 2e1d6 <__btrfs_map_block@@Base+0x4e>
   2e1ba:	ldr	r1, [sp, #160]	; 0xa0
   2e1bc:	mov.w	r2, #4294967295	; 0xffffffff
   2e1c0:	mov.w	r3, #4294967295	; 0xffffffff
   2e1c4:	strd	r2, r3, [r1]
   2e1c8:	mvn.w	r0, #1
   2e1cc:	add	sp, #124	; 0x7c
   2e1ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1d2:	movs	r7, #8
   2e1d4:	b.n	2e1a2 <__btrfs_map_block@@Base+0x1a>
   2e1d6:	ldrd	r2, r3, [r0, #24]
   2e1da:	strd	r2, r3, [sp, #24]
   2e1de:	ldrd	r0, r1, [sp, #24]
   2e1e2:	ldrd	r2, r3, [sp, #16]
   2e1e6:	cmp	r3, r1
   2e1e8:	it	eq
   2e1ea:	cmpeq	r2, r0
   2e1ec:	bcs.n	2e204 <__btrfs_map_block@@Base+0x7c>
   2e1ee:	ldr	r3, [sp, #24]
   2e1f0:	ldr	r2, [sp, #16]
   2e1f2:	ldr	r1, [sp, #20]
   2e1f4:	subs	r2, r3, r2
   2e1f6:	ldr	r3, [sp, #28]
   2e1f8:	sbc.w	r3, r3, r1
   2e1fc:	ldr	r1, [sp, #160]	; 0xa0
   2e1fe:	str	r2, [r1, #0]
   2e200:	str	r3, [r1, #4]
   2e202:	b.n	2e1c8 <__btrfs_map_block@@Base+0x40>
   2e204:	ldr	r3, [sp, #168]	; 0xa8
   2e206:	cbz	r3, 2e21c <__btrfs_map_block@@Base+0x94>
   2e208:	lsls	r1, r7, #4
   2e20a:	movs	r0, #1
   2e20c:	adds	r1, #8
   2e20e:	blx	8ab8 <calloc@plt+0x4>
   2e212:	mov	r8, r0
   2e214:	cbnz	r0, 2e220 <__btrfs_map_block@@Base+0x98>
   2e216:	mvn.w	r0, #11
   2e21a:	b.n	2e1cc <__btrfs_map_block@@Base+0x44>
   2e21c:	ldr.w	r8, [sp, #168]	; 0xa8
   2e220:	ldr	r3, [r4, #40]	; 0x28
   2e222:	cmp.w	fp, #1
   2e226:	str	r3, [sp, #76]	; 0x4c
   2e228:	bne.n	2e23c <__btrfs_map_block@@Base+0xb4>
   2e22a:	and.w	r3, r3, #1584	; 0x630
   2e22e:	strd	r3, r9, [sp, #8]
   2e232:	ldrd	r2, r3, [sp, #8]
   2e236:	orrs	r3, r2
   2e238:	beq.n	2e278 <__btrfs_map_block@@Base+0xf0>
   2e23a:	ldr	r6, [r4, #64]	; 0x40
   2e23c:	ldr	r3, [sp, #76]	; 0x4c
   2e23e:	and.w	r3, r3, #384	; 0x180
   2e242:	strd	r3, r9, [sp, #48]	; 0x30
   2e246:	ldrd	r2, r3, [sp, #48]	; 0x30
   2e24a:	orrs	r3, r2
   2e24c:	ldr	r3, [sp, #168]	; 0xa8
   2e24e:	beq.n	2e28e <__btrfs_map_block@@Base+0x106>
   2e250:	cbz	r3, 2e29e <__btrfs_map_block@@Base+0x116>
   2e252:	tst.w	fp, #1
   2e256:	bne.n	2e25c <__btrfs_map_block@@Base+0xd4>
   2e258:	cmp	r5, #1
   2e25a:	ble.n	2e290 <__btrfs_map_block@@Base+0x108>
   2e25c:	ldr	r3, [sp, #176]	; 0xb0
   2e25e:	cbz	r3, 2e290 <__btrfs_map_block@@Base+0x108>
   2e260:	ldr	r6, [r4, #64]	; 0x40
   2e262:	cmp	r7, r6
   2e264:	blt.n	2e294 <__btrfs_map_block@@Base+0x10c>
   2e266:	lsls	r0, r6, #3
   2e268:	blx	8e40 <malloc@plt+0x4>
   2e26c:	str	r0, [sp, #8]
   2e26e:	cbnz	r0, 2e2a2 <__btrfs_map_block@@Base+0x11a>
   2e270:	mov	r0, r8
   2e272:	blx	8b84 <free@plt+0x4>
   2e276:	b.n	2e216 <__btrfs_map_block@@Base+0x8e>
   2e278:	ldr	r3, [sp, #76]	; 0x4c
   2e27a:	and.w	r3, r3, #64	; 0x40
   2e27e:	strd	r3, r9, [sp, #32]
   2e282:	ldrd	r2, r3, [sp, #32]
   2e286:	orrs	r3, r2
   2e288:	it	ne
   2e28a:	ldrne	r6, [r4, #68]	; 0x44
   2e28c:	b.n	2e23c <__btrfs_map_block@@Base+0xb4>
   2e28e:	cbz	r3, 2e29e <__btrfs_map_block@@Base+0x116>
   2e290:	cmp	r7, r6
   2e292:	bge.n	2e29e <__btrfs_map_block@@Base+0x116>
   2e294:	mov	r0, r8
   2e296:	mov	r7, r6
   2e298:	blx	8b84 <free@plt+0x4>
   2e29c:	b.n	2e1ac <__btrfs_map_block@@Base+0x24>
   2e29e:	movs	r3, #0
   2e2a0:	str	r3, [sp, #8]
   2e2a2:	ldr	r2, [sp, #24]
   2e2a4:	ldr	r3, [sp, #16]
   2e2a6:	ldr	r6, [r4, #56]	; 0x38
   2e2a8:	subs	r3, r3, r2
   2e2aa:	ldr	r2, [sp, #28]
   2e2ac:	str	r3, [sp, #64]	; 0x40
   2e2ae:	ldr	r3, [sp, #20]
   2e2b0:	sbc.w	r3, r3, r2
   2e2b4:	str	r3, [sp, #68]	; 0x44
   2e2b6:	mov	r2, r6
   2e2b8:	asrs	r3, r6, #31
   2e2ba:	ldrd	r0, r1, [sp, #64]	; 0x40
   2e2be:	strd	r2, r3, [sp, #80]	; 0x50
   2e2c2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e2c6:	mov	r9, r2
   2e2c8:	ldr	r2, [sp, #84]	; 0x54
   2e2ca:	mov	r7, r0
   2e2cc:	str	r3, [sp, #100]	; 0x64
   2e2ce:	mul.w	r3, r6, r1
   2e2d2:	str	r1, [sp, #48]	; 0x30
   2e2d4:	mla	r3, r7, r2, r3
   2e2d8:	mov	sl, r1
   2e2da:	umull	r1, r2, r6, r7
   2e2de:	str	r0, [sp, #32]
   2e2e0:	strd	r1, r2, [sp, #56]	; 0x38
   2e2e4:	ldr	r2, [sp, #60]	; 0x3c
   2e2e6:	add	r3, r2
   2e2e8:	str	r3, [sp, #60]	; 0x3c
   2e2ea:	ldrd	r0, r1, [sp, #56]	; 0x38
   2e2ee:	ldrd	r2, r3, [sp, #64]	; 0x40
   2e2f2:	cmp	r3, r1
   2e2f4:	ldr	r1, [pc, #952]	; (2e6b0 <__btrfs_map_block@@Base+0x528>)
   2e2f6:	it	eq
   2e2f8:	cmpeq	r2, r0
   2e2fa:	ldr	r2, [pc, #952]	; (2e6b4 <__btrfs_map_block@@Base+0x52c>)
   2e2fc:	ldr	r0, [pc, #952]	; (2e6b8 <__btrfs_map_block@@Base+0x530>)
   2e2fe:	add	r1, pc
   2e300:	add	r2, pc
   2e302:	ite	cc
   2e304:	movcc	r3, #1
   2e306:	movcs	r3, #0
   2e308:	adds	r2, #112	; 0x70
   2e30a:	add	r0, pc
   2e30c:	str	r3, [sp, #0]
   2e30e:	movw	r3, #1638	; 0x666
   2e312:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2e316:	ldr	r3, [sp, #76]	; 0x4c
   2e318:	movs	r1, #0
   2e31a:	ldrd	r2, r6, [r4, #32]
   2e31e:	and.w	r0, r3, #2040	; 0x7f8
   2e322:	str.w	r9, [sp, #96]	; 0x60
   2e326:	orrs.w	r3, r0, r1
   2e32a:	ldr	r3, [sp, #24]
   2e32c:	ldr	r1, [sp, #16]
   2e32e:	beq.n	2e388 <__btrfs_map_block@@Base+0x200>
   2e330:	subs	r3, r3, r1
   2e332:	ldr	r0, [sp, #20]
   2e334:	ldr	r1, [sp, #28]
   2e336:	sbc.w	r0, r1, r0
   2e33a:	ldr	r1, [sp, #80]	; 0x50
   2e33c:	adds.w	lr, r1, r3
   2e340:	ldr	r1, [sp, #84]	; 0x54
   2e342:	adc.w	ip, r1, r0
   2e346:	adds	r3, r3, r2
   2e348:	str	r3, [sp, #88]	; 0x58
   2e34a:	adc.w	r3, r0, r6
   2e34e:	str	r3, [sp, #92]	; 0x5c
   2e350:	ldr	r3, [sp, #56]	; 0x38
   2e352:	adds.w	r3, lr, r3
   2e356:	str	r3, [sp, #40]	; 0x28
   2e358:	ldr	r3, [sp, #60]	; 0x3c
   2e35a:	adc.w	r3, ip, r3
   2e35e:	str	r3, [sp, #44]	; 0x2c
   2e360:	ldrd	r0, r1, [sp, #40]	; 0x28
   2e364:	ldrd	r2, r3, [sp, #88]	; 0x58
   2e368:	cmp	r3, r1
   2e36a:	it	eq
   2e36c:	cmpeq	r2, r0
   2e36e:	bcs.n	2e374 <__btrfs_map_block@@Base+0x1ec>
   2e370:	strd	r2, r3, [sp, #40]	; 0x28
   2e374:	ldr	r3, [sp, #160]	; 0xa0
   2e376:	mov	r1, r3
   2e378:	ldrd	r2, r3, [sp, #40]	; 0x28
   2e37c:	strd	r2, r3, [r1]
   2e380:	ldr	r3, [sp, #168]	; 0xa8
   2e382:	cbnz	r3, 2e39e <__btrfs_map_block@@Base+0x216>
   2e384:	movs	r0, #0
   2e386:	b.n	2e1cc <__btrfs_map_block@@Base+0x44>
   2e388:	subs	r3, r3, r1
   2e38a:	ldr	r0, [sp, #20]
   2e38c:	ldr	r1, [sp, #28]
   2e38e:	sbc.w	r1, r1, r0
   2e392:	adds	r3, r3, r2
   2e394:	str	r3, [sp, #40]	; 0x28
   2e396:	adc.w	r3, r1, r6
   2e39a:	str	r3, [sp, #44]	; 0x2c
   2e39c:	b.n	2e374 <__btrfs_map_block@@Base+0x1ec>
   2e39e:	movs	r3, #1
   2e3a0:	str.w	r3, [r8, #4]
   2e3a4:	ldr	r1, [r4, #40]	; 0x28
   2e3a6:	mov.w	r9, #0
   2e3aa:	mov	r3, r9
   2e3ac:	ldr	r0, [r4, #64]	; 0x40
   2e3ae:	and.w	r2, r1, #1552	; 0x610
   2e3b2:	orrs	r3, r2
   2e3b4:	beq.n	2e43c <__btrfs_map_block@@Base+0x2b4>
   2e3b6:	cmp.w	fp, #1
   2e3ba:	bne.n	2e428 <__btrfs_map_block@@Base+0x2a0>
   2e3bc:	mov	r5, r9
   2e3be:	str.w	r0, [r8, #4]
   2e3c2:	ldr	r3, [r4, #64]	; 0x40
   2e3c4:	ldr	r2, [pc, #756]	; (2e6bc <__btrfs_map_block@@Base+0x534>)
   2e3c6:	cmp	r3, r5
   2e3c8:	ldr	r1, [pc, #756]	; (2e6c0 <__btrfs_map_block@@Base+0x538>)
   2e3ca:	ldr	r0, [pc, #760]	; (2e6c4 <__btrfs_map_block@@Base+0x53c>)
   2e3cc:	add	r2, pc
   2e3ce:	ite	gt
   2e3d0:	movgt	r3, #0
   2e3d2:	movle	r3, #1
   2e3d4:	add	r1, pc
   2e3d6:	add	r0, pc
   2e3d8:	str	r3, [sp, #0]
   2e3da:	adds	r2, #112	; 0x70
   2e3dc:	movw	r3, #1748	; 0x6d4
   2e3e0:	add.w	r5, r4, r5, lsl #4
   2e3e4:	bl	2c720 <btrfs_add_root_ref@@Base+0x258>
   2e3e8:	ldr.w	ip, [r8, #4]
   2e3ec:	add.w	r1, r8, #8
   2e3f0:	movs	r0, #0
   2e3f2:	cmp	ip, r0
   2e3f4:	add.w	r5, r5, #16
   2e3f8:	add.w	r1, r1, #16
   2e3fc:	bgt.w	2e5f0 <__btrfs_map_block@@Base+0x468>
   2e400:	ldr	r3, [sp, #168]	; 0xa8
   2e402:	str.w	r8, [r3]
   2e406:	ldr	r3, [sp, #164]	; 0xa4
   2e408:	cbz	r3, 2e414 <__btrfs_map_block@@Base+0x28c>
   2e40a:	ldrd	r2, r3, [r4, #40]	; 0x28
   2e40e:	ldr	r1, [sp, #164]	; 0xa4
   2e410:	strd	r2, r3, [r1]
   2e414:	ldr	r3, [sp, #8]
   2e416:	cmp	r3, #0
   2e418:	beq.n	2e384 <__btrfs_map_block@@Base+0x1fc>
   2e41a:	movs	r0, #0
   2e41c:	add.w	r7, ip, #4294967295	; 0xffffffff
   2e420:	add.w	r9, sp, #104	; 0x68
   2e424:	mov	r4, r0
   2e426:	b.n	2e698 <__btrfs_map_block@@Base+0x510>
   2e428:	cbz	r5, 2e42e <__btrfs_map_block@@Base+0x2a6>
   2e42a:	subs	r5, #1
   2e42c:	b.n	2e3c2 <__btrfs_map_block@@Base+0x23a>
   2e42e:	asrs	r3, r0, #31
   2e430:	mov	r2, r0
   2e432:	mov	r1, sl
   2e434:	mov	r0, r7
   2e436:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e43a:	b.n	2e46c <__btrfs_map_block@@Base+0x2e4>
   2e43c:	and.w	r2, r1, #64	; 0x40
   2e440:	mov	r3, r9
   2e442:	orrs	r3, r2
   2e444:	beq.n	2e47a <__btrfs_map_block@@Base+0x2f2>
   2e446:	ldr	r6, [r4, #68]	; 0x44
   2e448:	mov	r1, r6
   2e44a:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   2e44e:	mov	r1, sl
   2e450:	asrs	r3, r0, #31
   2e452:	mov	r2, r0
   2e454:	mov	r0, r7
   2e456:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e45a:	cmp.w	fp, #1
   2e45e:	mul.w	r2, r2, r6
   2e462:	bne.n	2e470 <__btrfs_map_block@@Base+0x2e8>
   2e464:	str.w	r6, [r8, #4]
   2e468:	str	r0, [sp, #32]
   2e46a:	str	r1, [sp, #48]	; 0x30
   2e46c:	mov	r5, r2
   2e46e:	b.n	2e3c2 <__btrfs_map_block@@Base+0x23a>
   2e470:	cmp	r5, #0
   2e472:	beq.n	2e468 <__btrfs_map_block@@Base+0x2e0>
   2e474:	subs	r5, #1
   2e476:	add	r2, r5
   2e478:	b.n	2e468 <__btrfs_map_block@@Base+0x2e0>
   2e47a:	and.w	r2, r1, #32
   2e47e:	mov	r3, r9
   2e480:	orrs	r3, r2
   2e482:	beq.n	2e490 <__btrfs_map_block@@Base+0x308>
   2e484:	cmp.w	fp, #1
   2e488:	beq.n	2e3bc <__btrfs_map_block@@Base+0x234>
   2e48a:	cmp	r5, #0
   2e48c:	beq.n	2e3c2 <__btrfs_map_block@@Base+0x23a>
   2e48e:	b.n	2e42a <__btrfs_map_block@@Base+0x2a2>
   2e490:	asrs	r3, r0, #31
   2e492:	mov	r2, r0
   2e494:	strd	r2, r3, [sp, #16]
   2e498:	and.w	r2, r1, #384	; 0x180
   2e49c:	mov	r3, r9
   2e49e:	orrs	r3, r2
   2e4a0:	beq.w	2e5dc <__btrfs_map_block@@Base+0x454>
   2e4a4:	mov	r0, r4
   2e4a6:	bl	2c5c8 <btrfs_add_root_ref@@Base+0x100>
   2e4aa:	asrs	r3, r0, #31
   2e4ac:	mov	r2, r0
   2e4ae:	strd	r2, r3, [sp, #24]
   2e4b2:	mov	r6, r0
   2e4b4:	ldr	r3, [sp, #8]
   2e4b6:	cmp	r3, #0
   2e4b8:	beq.n	2e5b2 <__btrfs_map_block@@Base+0x42a>
   2e4ba:	ldr	r7, [r4, #56]	; 0x38
   2e4bc:	mul.w	r5, r0, r7
   2e4c0:	ldrd	r0, r1, [sp, #64]	; 0x40
   2e4c4:	mov.w	fp, r5, asr #31
   2e4c8:	mov	r2, r5
   2e4ca:	mov	r3, fp
   2e4cc:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e4d0:	mov	r2, r7
   2e4d2:	mul.w	r3, r5, r1
   2e4d6:	mla	r3, r0, fp, r3
   2e4da:	umull	r0, r1, r5, r0
   2e4de:	add	r1, r3
   2e4e0:	asrs	r3, r7, #31
   2e4e2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e4e6:	asrs	r3, r6, #31
   2e4e8:	mov	r2, r6
   2e4ea:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e4ee:	ldrd	r2, r3, [sp, #16]
   2e4f2:	str	r0, [sp, #32]
   2e4f4:	str	r1, [sp, #48]	; 0x30
   2e4f6:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e4fa:	mov	r5, r2
   2e4fc:	ldrd	r3, r2, [sp, #28]
   2e500:	muls	r3, r2
   2e502:	ldr	r2, [sp, #48]	; 0x30
   2e504:	mla	r3, r6, r2, r3
   2e508:	ldr	r2, [sp, #32]
   2e50a:	umull	r6, r7, r2, r6
   2e50e:	add	r7, r3
   2e510:	mov	r0, r4
   2e512:	add.w	sl, r9, r5
   2e516:	bl	2c5c8 <btrfs_add_root_ref@@Base+0x100>
   2e51a:	ldr	r1, [r4, #64]	; 0x40
   2e51c:	cmp	r0, r9
   2e51e:	mov	r0, sl
   2e520:	bgt.n	2e57a <__btrfs_map_block@@Base+0x3f2>
   2e522:	bl	3dacc <btrfs_util_strerror@@Base+0x524>
   2e526:	ldr	r3, [sp, #8]
   2e528:	mvn.w	r2, #1
   2e52c:	add.w	r1, r3, r1, lsl #3
   2e530:	mov.w	r3, #4294967295	; 0xffffffff
   2e534:	strd	r2, r3, [r1]
   2e538:	movs	r3, #0
   2e53a:	ldr	r1, [r4, #40]	; 0x28
   2e53c:	and.w	r2, r1, #256	; 0x100
   2e540:	orrs	r3, r2
   2e542:	beq.n	2e560 <__btrfs_map_block@@Base+0x3d8>
   2e544:	ldr	r1, [r4, #64]	; 0x40
   2e546:	add.w	r0, sl, #1
   2e54a:	bl	3dacc <btrfs_util_strerror@@Base+0x524>
   2e54e:	ldr	r3, [sp, #8]
   2e550:	mov.w	r2, #4294967295	; 0xffffffff
   2e554:	add.w	r1, r3, r1, lsl #3
   2e558:	mov.w	r3, #4294967295	; 0xffffffff
   2e55c:	strd	r2, r3, [r1]
   2e560:	ldr	r2, [r4, #56]	; 0x38
   2e562:	ldr	r1, [sp, #160]	; 0xa0
   2e564:	asrs	r3, r2, #31
   2e566:	strd	r2, r3, [r1]
   2e56a:	ldr	r3, [r4, #64]	; 0x40
   2e56c:	str.w	r3, [r8, #4]
   2e570:	movs	r3, #0
   2e572:	mov	r5, r3
   2e574:	strd	r3, r3, [sp, #96]	; 0x60
   2e578:	b.n	2e3c2 <__btrfs_map_block@@Base+0x23a>
   2e57a:	bl	3dacc <btrfs_util_strerror@@Base+0x524>
   2e57e:	ldr	r0, [r4, #56]	; 0x38
   2e580:	ldr	r3, [sp, #8]
   2e582:	add.w	r9, r9, #1
   2e586:	mov.w	fp, r0, asr #31
   2e58a:	mul.w	r2, r0, r7
   2e58e:	add.w	ip, r3, r1, lsl #3
   2e592:	umull	r0, r1, r0, r6
   2e596:	mla	r3, r6, fp, r2
   2e59a:	add	r1, r3
   2e59c:	ldrd	r3, r2, [r4, #24]
   2e5a0:	adds	r3, r3, r0
   2e5a2:	adc.w	r2, r1, r2
   2e5a6:	adds	r6, #1
   2e5a8:	adc.w	r7, r7, #0
   2e5ac:	strd	r3, r2, [ip]
   2e5b0:	b.n	2e510 <__btrfs_map_block@@Base+0x388>
   2e5b2:	asrs	r3, r0, #31
   2e5b4:	mov	r1, sl
   2e5b6:	mov	r0, r7
   2e5b8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e5bc:	cmp	r5, #1
   2e5be:	itte	gt
   2e5c0:	addgt	r6, r6, r5
   2e5c2:	subgt	r6, #2
   2e5c4:	movle	r6, r2
   2e5c6:	mov	sl, r0
   2e5c8:	str	r0, [sp, #32]
   2e5ca:	adds.w	r0, sl, r6
   2e5ce:	mov	fp, r1
   2e5d0:	str	r1, [sp, #48]	; 0x30
   2e5d2:	ldrd	r2, r3, [sp, #16]
   2e5d6:	adc.w	r1, fp, r6, asr #31
   2e5da:	b.n	2e436 <__btrfs_map_block@@Base+0x2ae>
   2e5dc:	ldrd	r2, r3, [sp, #16]
   2e5e0:	mov	r0, r7
   2e5e2:	mov	r1, sl
   2e5e4:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2e5e8:	mov	r5, r2
   2e5ea:	str	r0, [sp, #32]
   2e5ec:	str	r1, [sp, #48]	; 0x30
   2e5ee:	b.n	2e3c2 <__btrfs_map_block@@Base+0x23a>
   2e5f0:	ldrd	r3, r2, [r5, #64]	; 0x40
   2e5f4:	adds	r0, #1
   2e5f6:	ldr	r6, [sp, #96]	; 0x60
   2e5f8:	ldr.w	sl, [r4, #56]	; 0x38
   2e5fc:	adds.w	lr, r6, r3
   2e600:	ldr	r6, [sp, #100]	; 0x64
   2e602:	adc.w	r2, r6, r2
   2e606:	mov	r6, sl
   2e608:	asrs	r7, r6, #31
   2e60a:	strd	r6, r7, [sp, #16]
   2e60e:	ldr	r6, [sp, #48]	; 0x30
   2e610:	ldr	r7, [sp, #32]
   2e612:	ldr	r3, [sp, #20]
   2e614:	mul.w	r6, sl, r6
   2e618:	mla	r6, r7, r3, r6
   2e61c:	umull	sl, fp, sl, r7
   2e620:	adds.w	r3, lr, sl
   2e624:	add	fp, r6
   2e626:	adc.w	r2, r2, fp
   2e62a:	strd	r3, r2, [r1, #-8]
   2e62e:	ldr	r3, [r5, #56]	; 0x38
   2e630:	str.w	r3, [r1, #-16]
   2e634:	b.n	2e3f2 <__btrfs_map_block@@Base+0x26a>
   2e636:	ldr	r3, [sp, #8]
   2e638:	add.w	lr, r4, #1
   2e63c:	add.w	sl, r3, r4, lsl #3
   2e640:	add.w	ip, sl, #8
   2e644:	ldrd	r2, r3, [sl]
   2e648:	strd	r2, r3, [sp, #16]
   2e64c:	ldrd	r5, r6, [sp, #16]
   2e650:	ldrd	r2, r3, [sl, #8]
   2e654:	cmp	r3, r6
   2e656:	it	eq
   2e658:	cmpeq	r2, r5
   2e65a:	strd	r2, r3, [sp, #24]
   2e65e:	bcs.n	2e696 <__btrfs_map_block@@Base+0x50e>
   2e660:	add.w	r4, r8, r4, lsl #4
   2e664:	add.w	r5, r8, lr, lsl #4
   2e668:	adds	r4, #8
   2e66a:	adds	r5, #8
   2e66c:	ldmia.w	r4, {r0, r1, r2, r3}
   2e670:	stmia.w	r9, {r0, r1, r2, r3}
   2e674:	ldmia.w	r5, {r0, r1, r2, r3}
   2e678:	stmia.w	r4, {r0, r1, r2, r3}
   2e67c:	ldrd	r3, r4, [sp, #24]
   2e680:	strd	r3, r4, [sl]
   2e684:	ldmia.w	r9, {r0, r1, r2, r3}
   2e688:	stmia.w	r5, {r0, r1, r2, r3}
   2e68c:	movs	r0, #1
   2e68e:	ldrd	r3, r4, [sp, #16]
   2e692:	strd	r3, r4, [ip]
   2e696:	mov	r4, lr
   2e698:	cmp	r4, r7
   2e69a:	blt.n	2e636 <__btrfs_map_block@@Base+0x4ae>
   2e69c:	cbnz	r0, 2e6a8 <__btrfs_map_block@@Base+0x520>
   2e69e:	ldr	r3, [sp, #176]	; 0xb0
   2e6a0:	mov	r2, r3
   2e6a2:	ldr	r3, [sp, #8]
   2e6a4:	str	r3, [r2, #0]
   2e6a6:	b.n	2e1cc <__btrfs_map_block@@Base+0x44>
   2e6a8:	movs	r0, #0
   2e6aa:	mov	lr, r0
   2e6ac:	b.n	2e696 <__btrfs_map_block@@Base+0x50e>
   2e6ae:	nop
   2e6b0:	strb	r6, [r3, #4]
   2e6b2:	movs	r1, r0
   2e6b4:	strb	r4, [r6, #31]
   2e6b6:	movs	r1, r0
   2e6b8:	strb	r1, [r6, #6]
   2e6ba:	movs	r1, r0
   2e6bc:	strb	r0, [r5, #28]
   2e6be:	movs	r1, r0
   2e6c0:	strb	r0, [r1, #1]
   2e6c2:	movs	r1, r0
   2e6c4:	strb	r4, [r7, #3]
   2e6c6:	movs	r1, r0

0002e6c8 <btrfs_map_block@@Base>:
   2e6c8:	push	{r4, lr}
   2e6ca:	sub	sp, #24
   2e6cc:	ldr	r4, [sp, #44]	; 0x2c
   2e6ce:	str	r4, [sp, #16]
   2e6d0:	ldr	r4, [sp, #40]	; 0x28
   2e6d2:	str	r4, [sp, #12]
   2e6d4:	ldr	r4, [sp, #36]	; 0x24
   2e6d6:	str	r4, [sp, #8]
   2e6d8:	movs	r4, #0
   2e6da:	str	r4, [sp, #4]
   2e6dc:	ldr	r4, [sp, #32]
   2e6de:	str	r4, [sp, #0]
   2e6e0:	bl	2e188 <__btrfs_map_block@@Base>
   2e6e4:	add	sp, #24
   2e6e6:	pop	{r4, pc}

0002e6e8 <btrfs_find_device@@Base>:
   2e6e8:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   2e6ec:	mov	r6, r0
   2e6ee:	ldr	r5, [sp, #36]	; 0x24
   2e6f0:	mov	r7, r2
   2e6f2:	ldr.w	r4, [r0, #352]	; 0x160
   2e6f6:	mov	r8, r3
   2e6f8:	cbnz	r4, 2e702 <btrfs_find_device@@Base+0x1a>
   2e6fa:	mov	r0, r4
   2e6fc:	add	sp, #8
   2e6fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2e702:	cbz	r5, 2e718 <btrfs_find_device@@Base+0x30>
   2e704:	movs	r2, #16
   2e706:	mov	r1, r5
   2e708:	adds	r0, r4, r2
   2e70a:	blx	8c1c <memcmp@plt+0x4>
   2e70e:	cbz	r0, 2e718 <btrfs_find_device@@Base+0x30>
   2e710:	ldrb.w	r3, [r6, #364]	; 0x16c
   2e714:	lsls	r3, r3, #25
   2e716:	bpl.n	2e72a <btrfs_find_device@@Base+0x42>
   2e718:	ldr	r3, [sp, #32]
   2e71a:	mov	r2, r7
   2e71c:	mov	r0, r4
   2e71e:	str	r3, [sp, #0]
   2e720:	mov	r3, r8
   2e722:	bl	2c624 <btrfs_add_root_ref@@Base+0x15c>
   2e726:	cmp	r0, #0
   2e728:	bne.n	2e6fc <btrfs_find_device@@Base+0x14>
   2e72a:	ldr	r4, [r4, #92]	; 0x5c
   2e72c:	b.n	2e6f8 <btrfs_find_device@@Base+0x10>

0002e72e <btrfs_find_device_by_devid@@Base>:
   2e72e:	push	{r4, r5, r6, r7, lr}
   2e730:	add.w	r1, r0, #72	; 0x48
   2e734:	mov	r6, r2
   2e736:	ldr	r0, [r0, #72]	; 0x48
   2e738:	ldr	r2, [sp, #20]
   2e73a:	mov	r7, r3
   2e73c:	movs	r3, #0
   2e73e:	cmp	r0, r1
   2e740:	bne.n	2e746 <btrfs_find_device_by_devid@@Base+0x18>
   2e742:	movs	r0, #0
   2e744:	pop	{r4, r5, r6, r7, pc}
   2e746:	ldrd	r4, r5, [r0, #64]	; 0x40
   2e74a:	cmp	r5, r7
   2e74c:	it	eq
   2e74e:	cmpeq	r4, r6
   2e750:	bne.n	2e75c <btrfs_find_device_by_devid@@Base+0x2e>
   2e752:	cmp	r3, r2
   2e754:	add.w	r4, r3, #1
   2e758:	beq.n	2e744 <btrfs_find_device_by_devid@@Base+0x16>
   2e75a:	mov	r3, r4
   2e75c:	ldr	r0, [r0, #0]
   2e75e:	b.n	2e73e <btrfs_find_device_by_devid@@Base+0x10>

0002e760 <btrfs_chunk_readonly@@Base>:
   2e760:	push	{r4, lr}
   2e762:	ldrb.w	r1, [r0, #364]	; 0x16c
   2e766:	ands.w	r4, r1, #8
   2e76a:	beq.n	2e770 <btrfs_chunk_readonly@@Base+0x10>
   2e76c:	movs	r0, #0
   2e76e:	pop	{r4, pc}
   2e770:	adds	r0, #228	; 0xe4
   2e772:	bl	1a87c <search_cache_extent@@Base>
   2e776:	cbz	r0, 2e78e <btrfs_chunk_readonly@@Base+0x2e>
   2e778:	ldr	r2, [r0, #64]	; 0x40
   2e77a:	adds	r0, #72	; 0x48
   2e77c:	mov	r3, r4
   2e77e:	cmp	r2, r3
   2e780:	ble.n	2e76c <btrfs_chunk_readonly@@Base+0xc>
   2e782:	lsls	r1, r3, #4
   2e784:	ldr	r1, [r0, r1]
   2e786:	ldr	r1, [r1, #28]
   2e788:	cbz	r1, 2e794 <btrfs_chunk_readonly@@Base+0x34>
   2e78a:	adds	r3, #1
   2e78c:	b.n	2e77e <btrfs_chunk_readonly@@Base+0x1e>
   2e78e:	mvn.w	r0, #1
   2e792:	b.n	2e76e <btrfs_chunk_readonly@@Base+0xe>
   2e794:	movs	r0, #1
   2e796:	b.n	2e76e <btrfs_chunk_readonly@@Base+0xe>

0002e798 <btrfs_check_chunk_valid@@Base>:
   2e798:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e79c:	sub	sp, #36	; 0x24
   2e79e:	subs	r6, r3, #0
   2e7a0:	add.w	r8, r1, #96	; 0x60
   2e7a4:	ldr	r4, [sp, #72]	; 0x48
   2e7a6:	str	r4, [sp, #20]
   2e7a8:	ldr	r4, [sp, #76]	; 0x4c
   2e7aa:	str	r4, [sp, #24]
   2e7ac:	ldr.w	r4, [r0, #388]	; 0x184
   2e7b0:	str	r4, [sp, #16]
   2e7b2:	blt.n	2e7dc <btrfs_check_chunk_valid@@Base+0x44>
   2e7b4:	movs	r3, #25
   2e7b6:	mla	r3, r3, r6, r8
   2e7ba:	ldr.w	r1, [r3, #122]	; 0x7a
   2e7be:	cmp	r1, #79	; 0x4f
   2e7c0:	bhi.n	2e7dc <btrfs_check_chunk_valid@@Base+0x44>
   2e7c2:	ldr.w	r3, [r0, #384]	; 0x180
   2e7c6:	movs	r2, #80	; 0x50
   2e7c8:	ldr	r0, [pc, #528]	; (2e9dc <btrfs_check_chunk_valid@@Base+0x244>)
   2e7ca:	subs	r3, #101	; 0x65
   2e7cc:	add	r0, pc
   2e7ce:	bl	1bd1c <__btrfs_error@@Base>
   2e7d2:	mvn.w	r0, #116	; 0x74
   2e7d6:	add	sp, #36	; 0x24
   2e7d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e7dc:	add.w	r7, r8, r2
   2e7e0:	ldr.w	sl, [r8, r2]
   2e7e4:	ldr	r3, [r7, #16]
   2e7e6:	ldrh	r5, [r7, #44]	; 0x2c
   2e7e8:	ldr.w	fp, [r7, #4]
   2e7ec:	str	r3, [sp, #8]
   2e7ee:	ldr	r3, [r7, #20]
   2e7f0:	ldrh.w	r9, [r7, #46]	; 0x2e
   2e7f4:	ldr	r4, [r7, #24]
   2e7f6:	str	r3, [sp, #12]
   2e7f8:	ldr	r3, [r7, #28]
   2e7fa:	cbnz	r5, 2e808 <btrfs_check_chunk_valid@@Base+0x70>
   2e7fc:	ldr	r0, [pc, #480]	; (2e9e0 <btrfs_check_chunk_valid@@Base+0x248>)
   2e7fe:	mov	r1, r5
   2e800:	add	r0, pc
   2e802:	bl	1bd1c <__btrfs_error@@Base>
   2e806:	b.n	2e7d2 <btrfs_check_chunk_valid@@Base+0x3a>
   2e808:	cmp	r6, #0
   2e80a:	blt.n	2e830 <btrfs_check_chunk_valid@@Base+0x98>
   2e80c:	mov	r0, r5
   2e80e:	str	r3, [sp, #28]
   2e810:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2e814:	movs	r2, #25
   2e816:	mla	r2, r2, r6, r8
   2e81a:	ldr	r3, [sp, #28]
   2e81c:	ldr.w	r1, [r2, #122]	; 0x7a
   2e820:	cmp	r0, r1
   2e822:	beq.n	2e830 <btrfs_check_chunk_valid@@Base+0x98>
   2e824:	mov	r2, r0
   2e826:	ldr	r0, [pc, #444]	; (2e9e4 <btrfs_check_chunk_valid@@Base+0x24c>)
   2e828:	add	r0, pc
   2e82a:	bl	1bd1c <__btrfs_error@@Base>
   2e82e:	b.n	2e7d2 <btrfs_check_chunk_valid@@Base+0x3a>
   2e830:	ldr.w	ip, [sp, #16]
   2e834:	mov.w	lr, #0
   2e838:	ldr	r2, [sp, #20]
   2e83a:	adds.w	ip, ip, #4294967295	; 0xffffffff
   2e83e:	and.w	r0, ip, r2
   2e842:	ldr	r2, [sp, #24]
   2e844:	adc.w	lr, lr, #4294967295	; 0xffffffff
   2e848:	and.w	r1, lr, r2
   2e84c:	orrs.w	r2, r0, r1
   2e850:	beq.n	2e864 <btrfs_check_chunk_valid@@Base+0xcc>
   2e852:	ldr	r0, [pc, #404]	; (2e9e8 <btrfs_check_chunk_valid@@Base+0x250>)
   2e854:	ldrd	r2, r3, [sp, #20]
   2e858:	add	r0, pc
   2e85a:	bl	1bd1c <__btrfs_error@@Base>
   2e85e:	mvn.w	r0, #4
   2e862:	b.n	2e7d6 <btrfs_check_chunk_valid@@Base+0x3e>
   2e864:	ldr	r2, [r7, #40]	; 0x28
   2e866:	ldr	r1, [sp, #16]
   2e868:	cmp	r1, r2
   2e86a:	beq.n	2e874 <btrfs_check_chunk_valid@@Base+0xdc>
   2e86c:	ldr	r0, [pc, #380]	; (2e9ec <btrfs_check_chunk_valid@@Base+0x254>)
   2e86e:	movs	r3, #0
   2e870:	add	r0, pc
   2e872:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e874:	orrs.w	r2, sl, fp
   2e878:	beq.n	2e888 <btrfs_check_chunk_valid@@Base+0xf0>
   2e87a:	and.w	r0, ip, sl
   2e87e:	and.w	r1, lr, fp
   2e882:	orrs.w	r2, r0, r1
   2e886:	beq.n	2e892 <btrfs_check_chunk_valid@@Base+0xfa>
   2e888:	ldr	r0, [pc, #356]	; (2e9f0 <btrfs_check_chunk_valid@@Base+0x258>)
   2e88a:	mov	r2, sl
   2e88c:	mov	r3, fp
   2e88e:	add	r0, pc
   2e890:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e892:	ldrd	r1, r2, [sp, #8]
   2e896:	cmp	r2, #0
   2e898:	it	eq
   2e89a:	cmpeq.w	r1, #65536	; 0x10000
   2e89e:	beq.n	2e8aa <btrfs_check_chunk_valid@@Base+0x112>
   2e8a0:	ldr	r0, [pc, #336]	; (2e9f4 <btrfs_check_chunk_valid@@Base+0x25c>)
   2e8a2:	mov	r3, r2
   2e8a4:	mov	r2, r1
   2e8a6:	add	r0, pc
   2e8a8:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e8aa:	adds	r1, r6, #1
   2e8ac:	bne.n	2e8c2 <btrfs_check_chunk_valid@@Base+0x12a>
   2e8ae:	and.w	r0, r4, #2
   2e8b2:	movs	r1, #0
   2e8b4:	orrs.w	r2, r0, r1
   2e8b8:	bne.n	2e8c2 <btrfs_check_chunk_valid@@Base+0x12a>
   2e8ba:	ldr	r0, [pc, #316]	; (2e9f8 <btrfs_check_chunk_valid@@Base+0x260>)
   2e8bc:	mov	r2, r4
   2e8be:	add	r0, pc
   2e8c0:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e8c2:	bic.w	r0, r4, #2040	; 0x7f8
   2e8c6:	mov	r1, r3
   2e8c8:	bic.w	r0, r0, #7
   2e8cc:	orrs.w	r2, r0, r1
   2e8d0:	beq.n	2e8da <btrfs_check_chunk_valid@@Base+0x142>
   2e8d2:	mov	r2, r0
   2e8d4:	ldr	r0, [pc, #292]	; (2e9fc <btrfs_check_chunk_valid@@Base+0x264>)
   2e8d6:	add	r0, pc
   2e8d8:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e8da:	and.w	r0, r4, #7
   2e8de:	movs	r1, #0
   2e8e0:	orrs.w	r2, r0, r1
   2e8e4:	bne.n	2e8ee <btrfs_check_chunk_valid@@Base+0x156>
   2e8e6:	ldr	r0, [pc, #280]	; (2ea00 <btrfs_check_chunk_valid@@Base+0x268>)
   2e8e8:	mov	r2, r4
   2e8ea:	add	r0, pc
   2e8ec:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e8ee:	ands.w	r2, r4, #2040	; 0x7f8
   2e8f2:	beq.n	2e8fa <btrfs_check_chunk_valid@@Base+0x162>
   2e8f4:	subs	r1, r2, #1
   2e8f6:	tst	r1, r2
   2e8f8:	beq.n	2e90e <btrfs_check_chunk_valid@@Base+0x176>
   2e8fa:	and.w	r0, r4, #2040	; 0x7f8
   2e8fe:	movs	r2, #0
   2e900:	mov	r1, r2
   2e902:	orrs	r1, r0
   2e904:	beq.n	2e910 <btrfs_check_chunk_valid@@Base+0x178>
   2e906:	ldr	r0, [pc, #252]	; (2ea04 <btrfs_check_chunk_valid@@Base+0x26c>)
   2e908:	mov	r2, r4
   2e90a:	add	r0, pc
   2e90c:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e90e:	movs	r2, #1
   2e910:	and.w	sl, r4, #2040	; 0x7f8
   2e914:	mov.w	fp, #0
   2e918:	orrs.w	r1, sl, fp
   2e91c:	beq.n	2e928 <btrfs_check_chunk_valid@@Base+0x190>
   2e91e:	cbnz	r2, 2e928 <btrfs_check_chunk_valid@@Base+0x190>
   2e920:	ldr	r0, [pc, #228]	; (2ea08 <btrfs_check_chunk_valid@@Base+0x270>)
   2e922:	mov	r2, r4
   2e924:	add	r0, pc
   2e926:	b.n	2e85a <btrfs_check_chunk_valid@@Base+0xc2>
   2e928:	mov	r0, r5
   2e92a:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2e92e:	adds	r2, r6, #1
   2e930:	bne.n	2e944 <btrfs_check_chunk_valid@@Base+0x1ac>
   2e932:	cmp.w	r0, #2048	; 0x800
   2e936:	bls.n	2e956 <btrfs_check_chunk_valid@@Base+0x1be>
   2e938:	ldr	r0, [pc, #208]	; (2ea0c <btrfs_check_chunk_valid@@Base+0x274>)
   2e93a:	mov	r1, r5
   2e93c:	add	r0, pc
   2e93e:	bl	1bd1c <__btrfs_error@@Base>
   2e942:	b.n	2e85e <btrfs_check_chunk_valid@@Base+0xc6>
   2e944:	cmp	r6, #0
   2e946:	blt.n	2e956 <btrfs_check_chunk_valid@@Base+0x1be>
   2e948:	movs	r3, #25
   2e94a:	mla	r6, r3, r6, r8
   2e94e:	ldr.w	r3, [r6, #122]	; 0x7a
   2e952:	cmp	r0, r3
   2e954:	b.n	2e936 <btrfs_check_chunk_valid@@Base+0x19e>
   2e956:	and.w	r2, r4, #64	; 0x40
   2e95a:	movs	r3, #0
   2e95c:	orrs	r3, r2
   2e95e:	beq.n	2e96a <btrfs_check_chunk_valid@@Base+0x1d2>
   2e960:	cmp.w	r9, #2
   2e964:	bne.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e966:	lsls	r3, r5, #31
   2e968:	bmi.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e96a:	and.w	r0, r4, #512	; 0x200
   2e96e:	movs	r3, #0
   2e970:	mov	r1, r3
   2e972:	orrs.w	r2, r0, r1
   2e976:	beq.n	2e97c <btrfs_check_chunk_valid@@Base+0x1e4>
   2e978:	cmp	r5, #2
   2e97a:	bls.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e97c:	and.w	r0, r4, #1024	; 0x400
   2e980:	mov	r1, r3
   2e982:	orrs.w	r3, r0, r1
   2e986:	beq.n	2e98c <btrfs_check_chunk_valid@@Base+0x1f4>
   2e988:	cmp	r5, #3
   2e98a:	bls.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e98c:	and.w	r0, r4, #128	; 0x80
   2e990:	movs	r3, #0
   2e992:	mov	r1, r3
   2e994:	orrs.w	r2, r0, r1
   2e998:	beq.n	2e99e <btrfs_check_chunk_valid@@Base+0x206>
   2e99a:	cmp	r5, #1
   2e99c:	bls.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e99e:	and.w	r0, r4, #256	; 0x100
   2e9a2:	mov	r1, r3
   2e9a4:	orrs.w	r3, r0, r1
   2e9a8:	beq.n	2e9ae <btrfs_check_chunk_valid@@Base+0x216>
   2e9aa:	cmp	r5, #2
   2e9ac:	bls.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e9ae:	and.w	r2, r4, #32
   2e9b2:	movs	r3, #0
   2e9b4:	orrs	r3, r2
   2e9b6:	beq.n	2e9bc <btrfs_check_chunk_valid@@Base+0x224>
   2e9b8:	cmp	r5, #2
   2e9ba:	bhi.n	2e9c6 <btrfs_check_chunk_valid@@Base+0x22e>
   2e9bc:	orrs.w	r3, sl, fp
   2e9c0:	bne.n	2e9d8 <btrfs_check_chunk_valid@@Base+0x240>
   2e9c2:	cmp	r5, #1
   2e9c4:	beq.n	2e9d8 <btrfs_check_chunk_valid@@Base+0x240>
   2e9c6:	ldr	r0, [pc, #72]	; (2ea10 <btrfs_check_chunk_valid@@Base+0x278>)
   2e9c8:	mov	r2, r9
   2e9ca:	mov	r1, r5
   2e9cc:	strd	sl, fp, [sp]
   2e9d0:	add	r0, pc
   2e9d2:	bl	1bd1c <__btrfs_error@@Base>
   2e9d6:	b.n	2e85e <btrfs_check_chunk_valid@@Base+0xc6>
   2e9d8:	movs	r0, #0
   2e9da:	b.n	2e7d6 <btrfs_check_chunk_valid@@Base+0x3e>
   2e9dc:	ldr	r7, [r4, #80]	; 0x50
   2e9de:	movs	r1, r0
   2e9e0:	ldr	r6, [r4, #80]	; 0x50
   2e9e2:	movs	r1, r0
   2e9e4:	ldr	r3, [r5, #80]	; 0x50
   2e9e6:	movs	r1, r0
   2e9e8:	ldr	r7, [r4, #80]	; 0x50
   2e9ea:	movs	r1, r0
   2e9ec:	ldr	r2, [r5, #80]	; 0x50
   2e9ee:	movs	r1, r0
   2e9f0:	ldr	r2, [r5, #80]	; 0x50
   2e9f2:	movs	r1, r0
   2e9f4:	ldr	r4, [r5, #80]	; 0x50
   2e9f6:	movs	r1, r0
   2e9f8:	ldr	r6, [r6, #80]	; 0x50
   2e9fa:	movs	r1, r0
   2e9fc:	ldr	r6, [r6, #80]	; 0x50
   2e9fe:	movs	r1, r0
   2ea00:	ldr	r0, [r0, #84]	; 0x54
   2ea02:	movs	r1, r0
   2ea04:	ldr	r6, [r7, #80]	; 0x50
   2ea06:	movs	r1, r0
   2ea08:	ldr	r2, [r1, #84]	; 0x54
   2ea0a:	movs	r1, r0
   2ea0c:	ldr	r3, [r3, #84]	; 0x54
   2ea0e:	movs	r1, r0
   2ea10:	ldr	r7, [r3, #76]	; 0x4c
   2ea12:	movs	r1, r0
   2ea14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ea18:	mov	r9, r2
   2ea1a:	vpush	{d8}
   2ea1e:	mov	r5, r3
   2ea20:	ldr	r2, [pc, #444]	; (2ebe0 <btrfs_check_chunk_valid@@Base+0x448>)
   2ea22:	ldr	r3, [pc, #448]	; (2ebe4 <btrfs_check_chunk_valid@@Base+0x44c>)
   2ea24:	add	r2, pc
   2ea26:	sub	sp, #68	; 0x44
   2ea28:	str	r0, [sp, #20]
   2ea2a:	ldr	r3, [r2, r3]
   2ea2c:	mov	r2, r5
   2ea2e:	ldr	r4, [sp, #112]	; 0x70
   2ea30:	ldr	r3, [r3, #0]
   2ea32:	str	r3, [sp, #60]	; 0x3c
   2ea34:	mov.w	r3, #0
   2ea38:	add.w	r3, r9, #96	; 0x60
   2ea3c:	adds	r7, r3, r5
   2ea3e:	ldr	r3, [r3, r5]
   2ea40:	ldr.w	sl, [r1, #9]
   2ea44:	ldr.w	fp, [r1, #13]
   2ea48:	mov	r1, r9
   2ea4a:	str	r3, [sp, #32]
   2ea4c:	ldr	r3, [r7, #4]
   2ea4e:	ldrh.w	r8, [r7, #44]	; 0x2c
   2ea52:	strd	sl, fp, [sp]
   2ea56:	str	r3, [sp, #36]	; 0x24
   2ea58:	mov	r3, r4
   2ea5a:	bl	2e798 <btrfs_check_chunk_valid@@Base>
   2ea5e:	mov	r6, r0
   2ea60:	cbz	r0, 2ea96 <btrfs_check_chunk_valid@@Base+0x2fe>
   2ea62:	adds	r4, #1
   2ea64:	bne.n	2ea8c <btrfs_check_chunk_valid@@Base+0x2f4>
   2ea66:	ldr	r1, [pc, #384]	; (2ebe8 <btrfs_check_chunk_valid@@Base+0x450>)
   2ea68:	ldr	r2, [pc, #384]	; (2ebec <btrfs_check_chunk_valid@@Base+0x454>)
   2ea6a:	add	r1, pc
   2ea6c:	add	r2, pc
   2ea6e:	ldr	r0, [pc, #384]	; (2ebf0 <btrfs_check_chunk_valid@@Base+0x458>)
   2ea70:	add	r0, pc
   2ea72:	bl	1bd1c <__btrfs_error@@Base>
   2ea76:	ldr	r2, [pc, #380]	; (2ebf4 <btrfs_check_chunk_valid@@Base+0x45c>)
   2ea78:	ldr	r3, [pc, #360]	; (2ebe4 <btrfs_check_chunk_valid@@Base+0x44c>)
   2ea7a:	add	r2, pc
   2ea7c:	ldr	r3, [r2, r3]
   2ea7e:	ldr	r2, [r3, #0]
   2ea80:	ldr	r3, [sp, #60]	; 0x3c
   2ea82:	eors	r2, r3
   2ea84:	beq.w	2ebd2 <btrfs_check_chunk_valid@@Base+0x43a>
   2ea88:	blx	8c90 <__stack_chk_fail@plt>
   2ea8c:	ldr	r1, [pc, #360]	; (2ebf8 <btrfs_check_chunk_valid@@Base+0x460>)
   2ea8e:	ldr	r2, [pc, #364]	; (2ebfc <btrfs_check_chunk_valid@@Base+0x464>)
   2ea90:	add	r1, pc
   2ea92:	add	r2, pc
   2ea94:	b.n	2ea6e <btrfs_check_chunk_valid@@Base+0x2d6>
   2ea96:	ldr	r3, [sp, #20]
   2ea98:	mov	r2, sl
   2ea9a:	adds	r3, #228	; 0xe4
   2ea9c:	vmov	s16, r3
   2eaa0:	mov	r3, fp
   2eaa2:	vmov	r0, s16
   2eaa6:	bl	1a87c <search_cache_extent@@Base>
   2eaaa:	cbz	r0, 2ead0 <btrfs_check_chunk_valid@@Base+0x338>
   2eaac:	ldrd	r2, r3, [r0, #24]
   2eab0:	cmp	fp, r3
   2eab2:	it	eq
   2eab4:	cmpeq	sl, r2
   2eab6:	bcc.n	2ead0 <btrfs_check_chunk_valid@@Base+0x338>
   2eab8:	ldrd	r1, r0, [r0, #32]
   2eabc:	adds	r1, r2, r1
   2eabe:	str	r1, [sp, #24]
   2eac0:	adcs	r3, r0
   2eac2:	str	r3, [sp, #28]
   2eac4:	ldrd	r3, r4, [sp, #24]
   2eac8:	cmp	fp, r4
   2eaca:	it	eq
   2eacc:	cmpeq	sl, r3
   2eace:	bcc.n	2ea76 <btrfs_check_chunk_valid@@Base+0x2de>
   2ead0:	mov.w	r3, r8, lsl #4
   2ead4:	str	r3, [sp, #24]
   2ead6:	add.w	r0, r3, #72	; 0x48
   2eada:	blx	8e40 <malloc@plt+0x4>
   2eade:	mov	r4, r0
   2eae0:	cmp	r0, #0
   2eae2:	beq.n	2ebcc <btrfs_check_chunk_valid@@Base+0x434>
   2eae4:	ldr	r2, [r7, #36]	; 0x24
   2eae6:	adds	r5, #48	; 0x30
   2eae8:	ldr	r3, [sp, #32]
   2eaea:	mov	r6, r0
   2eaec:	ldr	r1, [r7, #24]
   2eaee:	str	r2, [r0, #52]	; 0x34
   2eaf0:	ldr	r2, [r7, #32]
   2eaf2:	str	r3, [r0, #32]
   2eaf4:	ldr	r3, [sp, #36]	; 0x24
   2eaf6:	str	r2, [r0, #48]	; 0x30
   2eaf8:	ldr	r2, [r7, #40]	; 0x28
   2eafa:	strd	sl, fp, [r0, #24]
   2eafe:	add.w	sl, sp, #44	; 0x2c
   2eb02:	ldr.w	fp, [pc, #252]	; 2ec00 <btrfs_check_chunk_valid@@Base+0x468>
   2eb06:	str	r2, [r0, #60]	; 0x3c
   2eb08:	ldr	r2, [r7, #16]
   2eb0a:	add	fp, pc
   2eb0c:	str	r3, [r0, #36]	; 0x24
   2eb0e:	ldr	r3, [sp, #24]
   2eb10:	str	r2, [r0, #56]	; 0x38
   2eb12:	ldr	r2, [r7, #28]
   2eb14:	add	r3, r0
   2eb16:	str.w	r8, [r0, #64]	; 0x40
   2eb1a:	str	r3, [sp, #24]
   2eb1c:	add.w	r3, r9, #96	; 0x60
   2eb20:	strd	r1, r2, [r0, #40]	; 0x28
   2eb24:	ldrh	r2, [r7, #46]	; 0x2e
   2eb26:	str	r3, [sp, #32]
   2eb28:	str	r2, [r0, #68]	; 0x44
   2eb2a:	ldr	r3, [sp, #24]
   2eb2c:	cmp	r3, r6
   2eb2e:	bne.n	2eb5e <btrfs_check_chunk_valid@@Base+0x3c6>
   2eb30:	vmov	r0, s16
   2eb34:	mov	r1, r4
   2eb36:	bl	1a73a <insert_cache_extent@@Base>
   2eb3a:	subs	r6, r0, #0
   2eb3c:	bge.n	2ea76 <btrfs_check_chunk_valid@@Base+0x2de>
   2eb3e:	blx	8f58 <__errno_location@plt>
   2eb42:	negs	r3, r6
   2eb44:	str	r3, [r0, #0]
   2eb46:	str	r6, [sp, #8]
   2eb48:	ldrd	r2, r3, [r4, #32]
   2eb4c:	ldr	r0, [pc, #180]	; (2ec04 <btrfs_check_chunk_valid@@Base+0x46c>)
   2eb4e:	strd	r2, r3, [sp]
   2eb52:	add	r0, pc
   2eb54:	ldrd	r2, r3, [r4, #24]
   2eb58:	bl	1bd1c <__btrfs_error@@Base>
   2eb5c:	b.n	2ea76 <btrfs_check_chunk_valid@@Base+0x2de>
   2eb5e:	ldr	r3, [sp, #32]
   2eb60:	mov	r0, r9
   2eb62:	add	r3, r5
   2eb64:	ldr	r1, [r3, #8]
   2eb66:	ldr	r2, [r3, #12]
   2eb68:	ldr.w	r8, [r3]
   2eb6c:	ldr	r7, [r3, #4]
   2eb6e:	movs	r3, #16
   2eb70:	strd	r1, r2, [r6, #80]	; 0x50
   2eb74:	adds	r2, r5, r3
   2eb76:	mov	r1, sl
   2eb78:	bl	1bbba <read_extent_buffer@@Base>
   2eb7c:	movs	r3, #0
   2eb7e:	ldr	r0, [sp, #20]
   2eb80:	mov	r2, r8
   2eb82:	strd	sl, r3, [sp]
   2eb86:	mov	r3, r7
   2eb88:	bl	2e6e8 <btrfs_find_device@@Base>
   2eb8c:	str	r0, [r6, #72]	; 0x48
   2eb8e:	cbnz	r0, 2ebc6 <btrfs_check_chunk_valid@@Base+0x42e>
   2eb90:	movs	r1, #128	; 0x80
   2eb92:	movs	r0, #1
   2eb94:	blx	8ab8 <calloc@plt+0x4>
   2eb98:	mov.w	r3, #4294967295	; 0xffffffff
   2eb9c:	mov	r2, r8
   2eb9e:	mov	r1, fp
   2eba0:	str	r3, [r0, #24]
   2eba2:	mov	r3, r7
   2eba4:	strd	r8, r7, [r0, #64]	; 0x40
   2eba8:	str	r0, [r6, #72]	; 0x48
   2ebaa:	movs	r0, #1
   2ebac:	blx	900c <__printf_chk@plt+0x4>
   2ebb0:	ldr	r2, [sp, #20]
   2ebb2:	ldr	r3, [r6, #72]	; 0x48
   2ebb4:	ldr.w	r1, [r2, #352]	; 0x160
   2ebb8:	mov	r2, r1
   2ebba:	ldr.w	r0, [r2, #72]!
   2ebbe:	str	r3, [r0, #4]
   2ebc0:	strd	r0, r2, [r3]
   2ebc4:	str	r3, [r1, #72]	; 0x48
   2ebc6:	adds	r6, #16
   2ebc8:	adds	r5, #32
   2ebca:	b.n	2eb2a <btrfs_check_chunk_valid@@Base+0x392>
   2ebcc:	mvn.w	r6, #11
   2ebd0:	b.n	2ea76 <btrfs_check_chunk_valid@@Base+0x2de>
   2ebd2:	mov	r0, r6
   2ebd4:	add	sp, #68	; 0x44
   2ebd6:	vpop	{d8}
   2ebda:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ebde:	nop
   2ebe0:	stmia	r2!, {r2, r4, r5, r6, r7}
   2ebe2:	movs	r3, r0
   2ebe4:	lsls	r0, r1, #10
   2ebe6:	movs	r0, r0
   2ebe8:	ldr	r4, [r7, #68]	; 0x44
   2ebea:	movs	r1, r0
   2ebec:	ldr	r5, [r0, #72]	; 0x48
   2ebee:	movs	r1, r0
   2ebf0:	ldr	r0, [r6, #72]	; 0x48
   2ebf2:	movs	r1, r0
   2ebf4:	stmia	r2!, {r1, r2, r3, r4, r7}
   2ebf6:	movs	r3, r0
   2ebf8:	add	r4, pc, #132	; (adr r4, 2ec80 <btrfs_read_sys_array@@Base+0x78>)
   2ebfa:	movs	r2, r0
   2ebfc:	asrs	r1, r3, #7
   2ebfe:	movs	r1, r0
   2ec00:	ldr	r2, [r1, #68]	; 0x44
   2ec02:	movs	r1, r0
   2ec04:	ldr	r3, [r4, #64]	; 0x40
   2ec06:	movs	r1, r0

0002ec08 <btrfs_read_sys_array@@Base>:
   2ec08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec0c:	mov	r8, r0
   2ec0e:	vpush	{d8}
   2ec12:	ldr	r2, [pc, #376]	; (2ed8c <btrfs_read_sys_array@@Base+0x184>)
   2ec14:	ldr	r3, [pc, #376]	; (2ed90 <btrfs_read_sys_array@@Base+0x188>)
   2ec16:	add	r2, pc
   2ec18:	ldr.w	r9, [pc, #376]	; 2ed94 <btrfs_read_sys_array@@Base+0x18c>
   2ec1c:	sub	sp, #44	; 0x2c
   2ec1e:	ldr.w	r5, [r0, #308]	; 0x134
   2ec22:	ldr	r3, [r2, r3]
   2ec24:	add	r9, pc
   2ec26:	ldr.w	r2, [r0, #384]	; 0x180
   2ec2a:	ldr	r3, [r3, #0]
   2ec2c:	str	r3, [sp, #36]	; 0x24
   2ec2e:	mov.w	r3, #0
   2ec32:	cmp.w	r2, #4096	; 0x1000
   2ec36:	bcs.n	2ec5c <btrfs_read_sys_array@@Base+0x54>
   2ec38:	ldr	r1, [pc, #348]	; (2ed98 <btrfs_read_sys_array@@Base+0x190>)
   2ec3a:	movs	r0, #1
   2ec3c:	add	r1, pc
   2ec3e:	blx	900c <__printf_chk@plt+0x4>
   2ec42:	mvn.w	r3, #21
   2ec46:	ldr	r1, [pc, #340]	; (2ed9c <btrfs_read_sys_array@@Base+0x194>)
   2ec48:	ldr	r2, [pc, #324]	; (2ed90 <btrfs_read_sys_array@@Base+0x188>)
   2ec4a:	add	r1, pc
   2ec4c:	ldr	r2, [r1, r2]
   2ec4e:	ldr	r1, [r2, #0]
   2ec50:	ldr	r2, [sp, #36]	; 0x24
   2ec52:	eors	r1, r2
   2ec54:	beq.w	2ed80 <btrfs_read_sys_array@@Base+0x178>
   2ec58:	blx	8c90 <__stack_chk_fail@plt>
   2ec5c:	mov.w	r3, #4096	; 0x1000
   2ec60:	mov.w	r2, #65536	; 0x10000
   2ec64:	str	r3, [sp, #0]
   2ec66:	movs	r3, #0
   2ec68:	bl	1b6cc <alloc_dummy_extent_buffer@@Base>
   2ec6c:	mov	r6, r0
   2ec6e:	cmp	r0, #0
   2ec70:	beq.w	2ed7a <btrfs_read_sys_array@@Base+0x172>
   2ec74:	bl	21f18 <btrfs_set_buffer_uptodate@@Base>
   2ec78:	movw	r3, #3531	; 0xdcb
   2ec7c:	mov	r1, r5
   2ec7e:	movs	r2, #0
   2ec80:	mov	r0, r6
   2ec82:	movs	r7, #0
   2ec84:	bl	1bbd0 <write_extent_buffer@@Base>
   2ec88:	add	r3, sp, #16
   2ec8a:	ldr.w	sl, [r5, #160]	; 0xa0
   2ec8e:	addw	r5, r5, #811	; 0x32b
   2ec92:	vmov	s16, r3
   2ec96:	movw	fp, #811	; 0x32b
   2ec9a:	cmp	r7, sl
   2ec9c:	bcc.n	2eca2 <btrfs_read_sys_array@@Base+0x9a>
   2ec9e:	movs	r3, #0
   2eca0:	b.n	2ed30 <btrfs_read_sys_array@@Base+0x128>
   2eca2:	add.w	r2, r7, #17
   2eca6:	cmp	r2, sl
   2eca8:	bhi.n	2ed54 <btrfs_read_sys_array@@Base+0x14c>
   2ecaa:	ldr.w	r1, [r5, #9]
   2ecae:	add.w	fp, fp, #17
   2ecb2:	ldr.w	r3, [r5, #13]
   2ecb6:	str.w	r1, [sp, #25]
   2ecba:	str.w	r3, [sp, #29]
   2ecbe:	ldrb	r3, [r5, #8]
   2ecc0:	cmp	r3, #228	; 0xe4
   2ecc2:	strb.w	r3, [sp, #24]
   2ecc6:	ldr	r0, [r5, #0]
   2ecc8:	ldr	r1, [r5, #4]
   2ecca:	strd	r0, r1, [sp, #16]
   2ecce:	bne.n	2ed3c <btrfs_read_sys_array@@Base+0x134>
   2ecd0:	movs	r0, #1
   2ecd2:	str	r2, [sp, #12]
   2ecd4:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2ecd8:	ldr	r2, [sp, #12]
   2ecda:	adds	r3, r2, r0
   2ecdc:	mov	r4, r0
   2ecde:	cmp	r3, sl
   2ece0:	bhi.n	2ed58 <btrfs_read_sys_array@@Base+0x150>
   2ece2:	add.w	r3, r6, fp
   2ece6:	ldrh.w	r3, [r3, #140]	; 0x8c
   2ecea:	cbnz	r3, 2ed06 <btrfs_read_sys_array@@Base+0xfe>
   2ecec:	ldr	r1, [pc, #176]	; (2eda0 <btrfs_read_sys_array@@Base+0x198>)
   2ecee:	ldr.w	r0, [r9, r1]
   2ecf2:	str	r2, [sp, #0]
   2ecf4:	ldr	r2, [pc, #172]	; (2eda4 <btrfs_read_sys_array@@Base+0x19c>)
   2ecf6:	add	r2, pc
   2ecf8:	ldr	r0, [r0, #0]
   2ecfa:	movs	r1, #1
   2ecfc:	blx	9040 <__fprintf_chk@plt+0x4>
   2ed00:	mvn.w	r3, #4
   2ed04:	b.n	2ed30 <btrfs_read_sys_array@@Base+0x128>
   2ed06:	mov	r0, r3
   2ed08:	str	r2, [sp, #12]
   2ed0a:	bl	2c730 <btrfs_add_root_ref@@Base+0x268>
   2ed0e:	ldr	r2, [sp, #12]
   2ed10:	adds	r7, r2, r0
   2ed12:	mov	r4, r0
   2ed14:	cmp	r7, sl
   2ed16:	bhi.n	2ed58 <btrfs_read_sys_array@@Base+0x150>
   2ed18:	mov.w	r3, #4294967295	; 0xffffffff
   2ed1c:	vmov	r1, s16
   2ed20:	str	r3, [sp, #0]
   2ed22:	mov	r2, r6
   2ed24:	mov	r3, fp
   2ed26:	mov	r0, r8
   2ed28:	bl	2ea14 <btrfs_check_chunk_valid@@Base+0x27c>
   2ed2c:	mov	r3, r0
   2ed2e:	cbz	r0, 2ed4a <btrfs_read_sys_array@@Base+0x142>
   2ed30:	mov	r0, r6
   2ed32:	str	r3, [sp, #12]
   2ed34:	bl	1b4c0 <free_extent_buffer@@Base>
   2ed38:	ldr	r3, [sp, #12]
   2ed3a:	b.n	2ec46 <btrfs_read_sys_array@@Base+0x3e>
   2ed3c:	ldr	r1, [pc, #96]	; (2eda0 <btrfs_read_sys_array@@Base+0x198>)
   2ed3e:	ldr.w	r0, [r9, r1]
   2ed42:	str	r2, [sp, #0]
   2ed44:	ldr	r2, [pc, #96]	; (2eda8 <btrfs_read_sys_array@@Base+0x1a0>)
   2ed46:	add	r2, pc
   2ed48:	b.n	2ecf8 <btrfs_read_sys_array@@Base+0xf0>
   2ed4a:	add.w	r3, r4, #17
   2ed4e:	add	fp, r4
   2ed50:	add	r5, r3
   2ed52:	b.n	2ec9a <btrfs_read_sys_array@@Base+0x92>
   2ed54:	mov	r2, r7
   2ed56:	movs	r4, #17
   2ed58:	ldr	r3, [pc, #68]	; (2eda0 <btrfs_read_sys_array@@Base+0x198>)
   2ed5a:	movs	r1, #1
   2ed5c:	ldr.w	r0, [r9, r3]
   2ed60:	mov	r3, r4
   2ed62:	str	r2, [sp, #0]
   2ed64:	ldr	r2, [pc, #68]	; (2edac <btrfs_read_sys_array@@Base+0x1a4>)
   2ed66:	ldr	r0, [r0, #0]
   2ed68:	add	r2, pc
   2ed6a:	blx	9040 <__fprintf_chk@plt+0x4>
   2ed6e:	mov	r0, r6
   2ed70:	bl	1b4c0 <free_extent_buffer@@Base>
   2ed74:	mvn.w	r3, #4
   2ed78:	b.n	2ec46 <btrfs_read_sys_array@@Base+0x3e>
   2ed7a:	mvn.w	r3, #11
   2ed7e:	b.n	2ec46 <btrfs_read_sys_array@@Base+0x3e>
   2ed80:	mov	r0, r3
   2ed82:	add	sp, #44	; 0x2c
   2ed84:	vpop	{d8}
   2ed88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed8c:	stmia	r1!, {r1}
   2ed8e:	movs	r3, r0
   2ed90:	lsls	r0, r1, #10
   2ed92:	movs	r0, r0
   2ed94:	stmia	r0!, {r2, r4, r5, r6, r7}
   2ed96:	movs	r3, r0
   2ed98:	ldr	r6, [r5, #52]	; 0x34
   2ed9a:	movs	r1, r0
   2ed9c:	stmia	r0!, {r1, r2, r3, r6, r7}
   2ed9e:	movs	r3, r0
   2eda0:	lsls	r4, r3, #10
   2eda2:	movs	r0, r0
   2eda4:	ldr	r5, [r4, #44]	; 0x2c
   2eda6:	movs	r1, r0
   2eda8:	ldr	r4, [r2, #44]	; 0x2c
   2edaa:	movs	r1, r0
   2edac:	ldr	r4, [r5, #44]	; 0x2c
   2edae:	movs	r1, r0

0002edb0 <btrfs_read_chunk_tree@@Base>:
   2edb0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2edb4:	mov	r7, r0
   2edb6:	vpush	{d8-d9}
   2edba:	ldr	r2, [pc, #600]	; (2f014 <btrfs_read_chunk_tree@@Base+0x264>)
   2edbc:	ldr	r3, [pc, #600]	; (2f018 <btrfs_read_chunk_tree@@Base+0x268>)
   2edbe:	add	r2, pc
   2edc0:	sub	sp, #100	; 0x64
   2edc2:	ldr	r3, [r2, r3]
   2edc4:	ldr	r3, [r3, #0]
   2edc6:	str	r3, [sp, #92]	; 0x5c
   2edc8:	mov.w	r3, #0
   2edcc:	ldr	r3, [r0, #32]
   2edce:	str	r3, [sp, #8]
   2edd0:	bl	1c6f0 <btrfs_alloc_path@@Base>
   2edd4:	mov	r6, r0
   2edd6:	cmp	r0, #0
   2edd8:	beq.w	2f002 <btrfs_read_chunk_tree@@Base+0x252>
   2eddc:	movs	r0, #0
   2edde:	movs	r3, #1
   2ede0:	ldr	r1, [sp, #8]
   2ede2:	add	r2, sp, #20
   2ede4:	strd	r3, r0, [sp, #20]
   2ede8:	mov	r3, r6
   2edea:	strd	r0, r0, [sp]
   2edee:	strb.w	r0, [sp, #29]
   2edf2:	strb.w	r0, [sp, #30]
   2edf6:	strb.w	r0, [sp, #31]
   2edfa:	strb.w	r0, [sp, #32]
   2edfe:	strb.w	r0, [sp, #33]	; 0x21
   2ee02:	strb.w	r0, [sp, #34]	; 0x22
   2ee06:	strb.w	r0, [sp, #35]	; 0x23
   2ee0a:	strb.w	r0, [sp, #36]	; 0x24
   2ee0e:	strb.w	r0, [sp, #28]
   2ee12:	bl	1eadc <btrfs_search_slot@@Base>
   2ee16:	subs	r3, r0, #0
   2ee18:	blt.n	2ee4c <btrfs_read_chunk_tree@@Base+0x9c>
   2ee1a:	ldr.w	sl, [pc, #512]	; 2f01c <btrfs_read_chunk_tree@@Base+0x26c>
   2ee1e:	add.w	fp, sp, #40	; 0x28
   2ee22:	add	sl, pc
   2ee24:	ldr.w	r9, [r6]
   2ee28:	ldr	r4, [r6, #32]
   2ee2a:	ldr.w	r3, [r9, #192]	; 0xc0
   2ee2e:	cmp	r4, r3
   2ee30:	bcc.n	2ee6c <btrfs_read_chunk_tree@@Base+0xbc>
   2ee32:	movs	r3, #0
   2ee34:	strb.w	r3, [r6, #65]	; 0x41
   2ee38:	ldr	r3, [sp, #8]
   2ee3a:	mov	r1, r6
   2ee3c:	ldr.w	r0, [r3, #464]	; 0x1d0
   2ee40:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2ee44:	cmp	r0, #0
   2ee46:	beq.n	2ee24 <btrfs_read_chunk_tree@@Base+0x74>
   2ee48:	and.w	r3, r0, r0, asr #31
   2ee4c:	mov	r0, r6
   2ee4e:	str	r3, [sp, #8]
   2ee50:	bl	1c71e <btrfs_free_path@@Base>
   2ee54:	ldr	r3, [sp, #8]
   2ee56:	ldr	r1, [pc, #456]	; (2f020 <btrfs_read_chunk_tree@@Base+0x270>)
   2ee58:	ldr	r2, [pc, #444]	; (2f018 <btrfs_read_chunk_tree@@Base+0x268>)
   2ee5a:	add	r1, pc
   2ee5c:	ldr	r2, [r1, r2]
   2ee5e:	ldr	r1, [r2, #0]
   2ee60:	ldr	r2, [sp, #92]	; 0x5c
   2ee62:	eors	r1, r2
   2ee64:	beq.w	2f008 <btrfs_read_chunk_tree@@Base+0x258>
   2ee68:	blx	8c90 <__stack_chk_fail@plt>
   2ee6c:	mov	r2, r4
   2ee6e:	mov	r1, fp
   2ee70:	mov	r0, r9
   2ee72:	bl	2c764 <btrfs_add_root_ref@@Base+0x29c>
   2ee76:	ldrb.w	r3, [sp, #48]	; 0x30
   2ee7a:	cmp	r3, #216	; 0xd8
   2ee7c:	bne.w	2efe0 <btrfs_read_chunk_tree@@Base+0x230>
   2ee80:	add.w	r3, r9, #96	; 0x60
   2ee84:	movs	r2, #25
   2ee86:	add.w	r8, sp, #60	; 0x3c
   2ee8a:	mov	r0, r9
   2ee8c:	mla	r4, r2, r4, r3
   2ee90:	ldr.w	r4, [r4, #118]	; 0x76
   2ee94:	add.w	r2, r4, #101	; 0x65
   2ee98:	adds	r5, r3, r2
   2ee9a:	ldr	r3, [r3, r2]
   2ee9c:	vmov	s17, r3
   2eea0:	ldr	r3, [r5, #4]
   2eea2:	vmov	s18, r3
   2eea6:	add.w	r3, r4, #167	; 0xa7
   2eeaa:	vmov	s16, r3
   2eeae:	add	r3, sp, #76	; 0x4c
   2eeb0:	str	r3, [sp, #12]
   2eeb2:	movs	r3, #16
   2eeb4:	vmov	r2, s16
   2eeb8:	ldr	r1, [sp, #12]
   2eeba:	bl	1bbba <read_extent_buffer@@Base>
   2eebe:	add.w	r2, r4, #183	; 0xb7
   2eec2:	mov	r1, r8
   2eec4:	mov	r0, r9
   2eec6:	movs	r3, #16
   2eec8:	bl	1bbba <read_extent_buffer@@Base>
   2eecc:	ldr.w	r4, [r7, #352]	; 0x160
   2eed0:	movs	r2, #16
   2eed2:	mov	r0, r8
   2eed4:	mov	r1, r4
   2eed6:	blx	8c1c <memcmp@plt+0x4>
   2eeda:	cbz	r0, 2ef42 <btrfs_read_chunk_tree@@Base+0x192>
   2eedc:	ldr	r4, [r4, #92]	; 0x5c
   2eede:	cbnz	r4, 2eefe <btrfs_read_chunk_tree@@Base+0x14e>
   2eee0:	mov	r1, r4
   2eee2:	mov	r0, r8
   2eee4:	bl	2c5f0 <btrfs_add_root_ref@@Base+0x128>
   2eee8:	mov	r4, r0
   2eeea:	cbnz	r0, 2ef28 <btrfs_read_chunk_tree@@Base+0x178>
   2eeec:	movs	r1, #96	; 0x60
   2eeee:	movs	r0, #1
   2eef0:	blx	8ab8 <calloc@plt+0x4>
   2eef4:	mov	r4, r0
   2eef6:	cbnz	r0, 2ef06 <btrfs_read_chunk_tree@@Base+0x156>
   2eef8:	mvn.w	r3, #11
   2eefc:	b.n	2ee4c <btrfs_read_chunk_tree@@Base+0x9c>
   2eefe:	movs	r2, #16
   2ef00:	mov	r1, r8
   2ef02:	mov	r0, r4
   2ef04:	b.n	2eed6 <btrfs_read_chunk_tree@@Base+0x126>
   2ef06:	ldr.w	r2, [sl]
   2ef0a:	add.w	r3, r0, #72	; 0x48
   2ef0e:	strd	r3, r3, [r0, #72]	; 0x48
   2ef12:	add.w	r3, r0, #80	; 0x50
   2ef16:	str.w	r3, [sl]
   2ef1a:	str	r3, [r2, #4]
   2ef1c:	strd	r2, sl, [r0, #80]	; 0x50
   2ef20:	ldmia.w	r8, {r0, r1, r2, r3}
   2ef24:	stmia.w	r4, {r0, r1, r2, r3}
   2ef28:	movs	r1, #0
   2ef2a:	mov	r0, r4
   2ef2c:	bl	2c8bc <btrfs_open_devices@@Base>
   2ef30:	subs	r3, r0, #0
   2ef32:	bne.n	2effe <btrfs_read_chunk_tree@@Base+0x24e>
   2ef34:	ldr.w	r3, [r7, #352]	; 0x160
   2ef38:	ldr	r3, [r3, #92]	; 0x5c
   2ef3a:	str	r3, [r4, #92]	; 0x5c
   2ef3c:	ldr.w	r3, [r7, #352]	; 0x160
   2ef40:	str	r4, [r3, #92]	; 0x5c
   2ef42:	ldr	r3, [sp, #12]
   2ef44:	mov	r0, r7
   2ef46:	vmov	r2, s17
   2ef4a:	str.w	r8, [sp, #4]
   2ef4e:	str	r3, [sp, #0]
   2ef50:	vmov	r3, s18
   2ef54:	bl	2e6e8 <btrfs_find_device@@Base>
   2ef58:	mov	r4, r0
   2ef5a:	cbnz	r0, 2ef82 <btrfs_read_chunk_tree@@Base+0x1d2>
   2ef5c:	movs	r1, #128	; 0x80
   2ef5e:	movs	r0, #1
   2ef60:	blx	8ab8 <calloc@plt+0x4>
   2ef64:	mov	r4, r0
   2ef66:	cmp	r0, #0
   2ef68:	beq.n	2eef8 <btrfs_read_chunk_tree@@Base+0x148>
   2ef6a:	ldr.w	r2, [r7, #352]	; 0x160
   2ef6e:	mov.w	r3, #4294967295	; 0xffffffff
   2ef72:	str	r3, [r0, #24]
   2ef74:	mov	r3, r2
   2ef76:	ldr.w	r1, [r3, #72]!
   2ef7a:	str	r0, [r1, #4]
   2ef7c:	strd	r1, r3, [r0]
   2ef80:	str	r0, [r2, #72]	; 0x48
   2ef82:	ldr	r2, [r5, #0]
   2ef84:	add.w	r1, r4, #112	; 0x70
   2ef88:	ldr	r3, [r5, #4]
   2ef8a:	mov	r0, r9
   2ef8c:	strd	r2, r3, [r4, #64]	; 0x40
   2ef90:	ldr	r2, [r5, #8]
   2ef92:	ldr	r3, [r5, #12]
   2ef94:	strd	r2, r3, [r4, #72]	; 0x48
   2ef98:	ldr	r2, [r5, #16]
   2ef9a:	ldr	r3, [r5, #20]
   2ef9c:	strd	r2, r3, [r4, #80]	; 0x50
   2efa0:	ldr	r2, [r5, #36]	; 0x24
   2efa2:	ldr	r3, [r5, #40]	; 0x28
   2efa4:	strd	r2, r3, [r4, #104]	; 0x68
   2efa8:	ldr	r3, [r5, #24]
   2efaa:	vmov	r2, s16
   2efae:	str	r3, [r4, #88]	; 0x58
   2efb0:	ldr	r3, [r5, #28]
   2efb2:	str	r3, [r4, #92]	; 0x5c
   2efb4:	ldr	r3, [r5, #32]
   2efb6:	str	r3, [r4, #96]	; 0x60
   2efb8:	movs	r3, #16
   2efba:	bl	1bbba <read_extent_buffer@@Base>
   2efbe:	ldr	r3, [r7, #36]	; 0x24
   2efc0:	str	r3, [r4, #8]
   2efc2:	ldr.w	r2, [r7, #352]	; 0x160
   2efc6:	ldr	r0, [r5, #8]
   2efc8:	ldr	r4, [r5, #12]
   2efca:	ldrd	r3, r1, [r2, #56]	; 0x38
   2efce:	adds	r3, r3, r0
   2efd0:	adc.w	r1, r4, r1
   2efd4:	strd	r3, r1, [r2, #56]	; 0x38
   2efd8:	ldr	r3, [r6, #32]
   2efda:	adds	r3, #1
   2efdc:	str	r3, [r6, #32]
   2efde:	b.n	2ee24 <btrfs_read_chunk_tree@@Base+0x74>
   2efe0:	cmp	r3, #228	; 0xe4
   2efe2:	bne.n	2efd8 <btrfs_read_chunk_tree@@Base+0x228>
   2efe4:	movs	r3, #25
   2efe6:	mov	r2, r9
   2efe8:	mla	r3, r3, r4, r9
   2efec:	mov	r1, fp
   2efee:	mov	r0, r7
   2eff0:	ldr.w	r3, [r3, #214]	; 0xd6
   2eff4:	str	r4, [sp, #0]
   2eff6:	adds	r3, #101	; 0x65
   2eff8:	bl	2ea14 <btrfs_check_chunk_valid@@Base+0x27c>
   2effc:	subs	r3, r0, #0
   2effe:	bge.n	2efd8 <btrfs_read_chunk_tree@@Base+0x228>
   2f000:	b.n	2ee4c <btrfs_read_chunk_tree@@Base+0x9c>
   2f002:	mvn.w	r3, #11
   2f006:	b.n	2ee56 <btrfs_read_chunk_tree@@Base+0xa6>
   2f008:	mov	r0, r3
   2f00a:	add	sp, #100	; 0x64
   2f00c:	vpop	{d8-d9}
   2f010:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f014:	itte	pl
   2f016:	movpl	r3, r0
   2f018:	lslpl	r0, r1, #10
   2f01a:	movmi	r0, r0
   2f01c:	bcc.n	2ef4c <btrfs_read_chunk_tree@@Base+0x19c>
   2f01e:	movs	r3, r0
   2f020:	bkpt	0x00be
   2f022:	movs	r3, r0

0002f024 <btrfs_scanned_uuids@@Base>:
   2f024:	ldr	r0, [pc, #4]	; (2f02c <btrfs_scanned_uuids@@Base+0x8>)
   2f026:	add	r0, pc
   2f028:	bx	lr
   2f02a:	nop
   2f02c:	bne.n	2ef54 <btrfs_read_chunk_tree@@Base+0x1a4>
   2f02e:	movs	r3, r0

0002f030 <write_raid56_with_parity@@Base>:
   2f030:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f034:	vpush	{d8}
   2f038:	vmov	s16, r0
   2f03c:	ldr	r3, [r1, #76]	; 0x4c
   2f03e:	sub	sp, #44	; 0x2c
   2f040:	str	r1, [sp, #4]
   2f042:	str	r3, [sp, #16]
   2f044:	ldr	r3, [r2, #4]
   2f046:	str	r2, [sp, #12]
   2f048:	lsls	r5, r3, #2
   2f04a:	str	r3, [sp, #8]
   2f04c:	mov	r0, r5
   2f04e:	blx	8e40 <malloc@plt+0x4>
   2f052:	mov	r4, r0
   2f054:	mov	r0, r5
   2f056:	blx	8e40 <malloc@plt+0x4>
   2f05a:	mov	sl, r0
   2f05c:	cbz	r4, 2f060 <write_raid56_with_parity@@Base+0x30>
   2f05e:	cbnz	r0, 2f07c <write_raid56_with_parity@@Base+0x4c>
   2f060:	mov	r0, r4
   2f062:	mvn.w	r9, #11
   2f066:	blx	8b84 <free@plt+0x4>
   2f06a:	mov	r0, sl
   2f06c:	blx	8b84 <free@plt+0x4>
   2f070:	mov	r0, r9
   2f072:	add	sp, #44	; 0x2c
   2f074:	vpop	{d8}
   2f078:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f07c:	ldr	r3, [sp, #16]
   2f07e:	asrs	r2, r3, #31
   2f080:	mov	r1, r3
   2f082:	mov	r3, r2
   2f084:	mov	r2, r1
   2f086:	ldrd	r0, r1, [sp, #88]	; 0x58
   2f08a:	cmp	r3, r1
   2f08c:	ldr	r3, [sp, #16]
   2f08e:	it	eq
   2f090:	cmpeq	r2, r0
   2f092:	ldr	r2, [sp, #88]	; 0x58
   2f094:	ldr	r0, [sp, #8]
   2f096:	mov.w	r1, #4
   2f09a:	it	cc
   2f09c:	movcc	r3, r2
   2f09e:	str	r3, [sp, #16]
   2f0a0:	ldr	r3, [sp, #4]
   2f0a2:	ldrd	r2, r3, [r3, #40]	; 0x28
   2f0a6:	strd	r2, r3, [sp, #24]
   2f0aa:	blx	8ab8 <calloc@plt+0x4>
   2f0ae:	mov	r8, r0
   2f0b0:	cmp	r0, #0
   2f0b2:	beq.w	2f3ba <write_raid56_with_parity@@Base+0x38a>
   2f0b6:	ldr	r3, [sp, #96]	; 0x60
   2f0b8:	movs	r5, #0
   2f0ba:	ldr	r1, [sp, #88]	; 0x58
   2f0bc:	mvn.w	r2, #2
   2f0c0:	subs	r3, #8
   2f0c2:	str	r3, [sp, #20]
   2f0c4:	add.w	r7, r1, #96	; 0x60
   2f0c8:	mov	r6, r3
   2f0ca:	mov.w	r3, #4294967295	; 0xffffffff
   2f0ce:	ldr	r1, [sp, #8]
   2f0d0:	cmp	r1, r5
   2f0d2:	bgt.n	2f0da <write_raid56_with_parity@@Base+0xaa>
   2f0d4:	mov.w	fp, #0
   2f0d8:	b.n	2f208 <write_raid56_with_parity@@Base+0x1d8>
   2f0da:	ldrd	r0, r1, [r6, #8]!
   2f0de:	cmp	r3, r1
   2f0e0:	it	eq
   2f0e2:	cmpeq	r2, r0
   2f0e4:	bcc.n	2f0d4 <write_raid56_with_parity@@Base+0xa4>
   2f0e6:	mov	r1, r7
   2f0e8:	movs	r0, #1
   2f0ea:	blx	8ab8 <calloc@plt+0x4>
   2f0ee:	str.w	r0, [r8, r5, lsl #2]
   2f0f2:	cmp	r0, #0
   2f0f4:	beq.w	2f292 <write_raid56_with_parity@@Base+0x262>
   2f0f8:	adds	r5, #1
   2f0fa:	mvn.w	r2, #2
   2f0fe:	mov.w	r3, #4294967295	; 0xffffffff
   2f102:	b.n	2f0ce <write_raid56_with_parity@@Base+0x9e>
   2f104:	ldr	r3, [sp, #20]
   2f106:	mvn.w	r2, #2
   2f10a:	ldr.w	r5, [r8, fp, lsl #2]
   2f10e:	ldrd	r6, r7, [r3, #8]!
   2f112:	str	r3, [sp, #20]
   2f114:	mov.w	r3, #4294967295	; 0xffffffff
   2f118:	cmp	r3, r7
   2f11a:	it	eq
   2f11c:	cmpeq	r2, r6
   2f11e:	bcc.n	2f210 <write_raid56_with_parity@@Base+0x1e0>
   2f120:	ldr	r3, [sp, #88]	; 0x58
   2f122:	movs	r2, #1
   2f124:	strd	r6, r7, [r5, #40]	; 0x28
   2f128:	str	r3, [r5, #76]	; 0x4c
   2f12a:	movs	r3, #0
   2f12c:	strd	r2, r3, [r5, #80]	; 0x50
   2f130:	mov.w	r3, #4294967295	; 0xffffffff
   2f134:	mov.w	r2, #4294967295	; 0xffffffff
   2f138:	str	r3, [r5, #88]	; 0x58
   2f13a:	mov.w	r3, #4294967295	; 0xffffffff
   2f13e:	strd	r2, r3, [r5, #48]	; 0x30
   2f142:	ldrd	r2, r3, [sp, #24]
   2f146:	cmp	r7, r3
   2f148:	it	eq
   2f14a:	cmpeq	r6, r2
   2f14c:	bcc.n	2f176 <write_raid56_with_parity@@Base+0x146>
   2f14e:	ldr	r3, [sp, #4]
   2f150:	ldr	r1, [r3, #76]	; 0x4c
   2f152:	ldrd	r2, r3, [sp, #24]
   2f156:	adds	r2, r2, r1
   2f158:	ldr	r1, [sp, #88]	; 0x58
   2f15a:	adc.w	r3, r3, #0
   2f15e:	adds	r1, r1, r6
   2f160:	str	r1, [sp, #32]
   2f162:	ldr	r1, [sp, #92]	; 0x5c
   2f164:	adcs	r1, r7
   2f166:	str	r1, [sp, #36]	; 0x24
   2f168:	ldrd	r0, r1, [sp, #32]
   2f16c:	cmp	r3, r1
   2f16e:	it	eq
   2f170:	cmpeq	r2, r0
   2f172:	bcs.w	2f27e <write_raid56_with_parity@@Base+0x24e>
   2f176:	vmov	r0, s16
   2f17a:	movs	r2, #0
   2f17c:	mov	r1, r5
   2f17e:	bl	20ae0 <read_whole_eb@@Base>
   2f182:	mov	r9, r0
   2f184:	cmp	r0, #0
   2f186:	bne.w	2f296 <write_raid56_with_parity@@Base+0x266>
   2f18a:	ldr	r3, [sp, #4]
   2f18c:	ldrd	r0, r1, [r5, #40]	; 0x28
   2f190:	ldr.w	ip, [r5, #76]	; 0x4c
   2f194:	ldrd	r6, r7, [r3, #40]	; 0x28
   2f198:	adds.w	r2, r0, ip
   2f19c:	adc.w	r3, r1, #0
   2f1a0:	cmp	r7, r3
   2f1a2:	it	eq
   2f1a4:	cmpeq	r6, r2
   2f1a6:	bcs.n	2f200 <write_raid56_with_parity@@Base+0x1d0>
   2f1a8:	ldr	r3, [sp, #4]
   2f1aa:	ldr.w	lr, [r3, #76]	; 0x4c
   2f1ae:	adds.w	r2, r6, lr
   2f1b2:	adc.w	r3, r7, #0
   2f1b6:	cmp	r1, r3
   2f1b8:	it	eq
   2f1ba:	cmpeq	r0, r2
   2f1bc:	bcs.n	2f200 <write_raid56_with_parity@@Base+0x1d0>
   2f1be:	cmp	r7, r1
   2f1c0:	ldr	r3, [sp, #88]	; 0x58
   2f1c2:	it	eq
   2f1c4:	cmpeq	r6, r0
   2f1c6:	it	cc
   2f1c8:	subcc.w	r9, r0, r6
   2f1cc:	cmp	r1, r7
   2f1ce:	it	eq
   2f1d0:	cmpeq	r0, r6
   2f1d2:	sub.w	lr, lr, r9
   2f1d6:	it	cc
   2f1d8:	subcc	r6, r6, r0
   2f1da:	add.w	r0, r5, #96	; 0x60
   2f1de:	it	cs
   2f1e0:	movcs	r6, #0
   2f1e2:	cmp	lr, r3
   2f1e4:	sub.w	r2, ip, r6
   2f1e8:	add	r0, r6
   2f1ea:	it	cs
   2f1ec:	movcs	lr, r3
   2f1ee:	ldr	r3, [sp, #4]
   2f1f0:	cmp	r2, lr
   2f1f2:	add.w	r1, r3, #96	; 0x60
   2f1f6:	add	r1, r9
   2f1f8:	it	cs
   2f1fa:	movcs	r2, lr
   2f1fc:	blx	8bdc <memcpy@plt+0x4>
   2f200:	str.w	r5, [r4, fp, lsl #2]
   2f204:	add.w	fp, fp, #1
   2f208:	ldr	r3, [sp, #8]
   2f20a:	cmp	r3, fp
   2f20c:	bgt.w	2f104 <write_raid56_with_parity@@Base+0xd4>
   2f210:	mov	r0, r8
   2f212:	movs	r6, #0
   2f214:	blx	8b84 <free@plt+0x4>
   2f218:	ldr	r3, [sp, #16]
   2f21a:	ldr	r7, [sp, #12]
   2f21c:	mov	r5, r6
   2f21e:	ldr.w	r8, [sp, #96]	; 0x60
   2f222:	add.w	r9, r3, #96	; 0x60
   2f226:	str	r6, [sp, #8]
   2f228:	ldr	r3, [sp, #12]
   2f22a:	ldr	r0, [r3, #4]
   2f22c:	cmp	r0, r6
   2f22e:	bgt.n	2f2be <write_raid56_with_parity@@Base+0x28e>
   2f230:	add.w	r3, r0, #1073741824	; 0x40000000
   2f234:	subs	r3, #1
   2f236:	add.w	r2, r4, r3, lsl #2
   2f23a:	cmp	r5, #0
   2f23c:	beq.w	2f368 <write_raid56_with_parity@@Base+0x338>
   2f240:	ldr	r1, [sp, #8]
   2f242:	str.w	r1, [r2, #-4]
   2f246:	str.w	r5, [r4, r3, lsl #2]
   2f24a:	movs	r3, #0
   2f24c:	cmp	r0, r3
   2f24e:	bgt.w	2f35a <write_raid56_with_parity@@Base+0x32a>
   2f252:	ldr	r1, [sp, #88]	; 0x58
   2f254:	mov	r2, sl
   2f256:	bl	3339c <raid6_gen_syndrome@@Base>
   2f25a:	mov.w	r9, #0
   2f25e:	movs	r5, #0
   2f260:	ldr	r3, [sp, #12]
   2f262:	ldr	r3, [r3, #4]
   2f264:	cmp	r3, r5
   2f266:	ble.w	2f384 <write_raid56_with_parity@@Base+0x354>
   2f26a:	ldr.w	r0, [r4, r5, lsl #2]
   2f26e:	bl	1b71e <write_extent_to_disk@@Base>
   2f272:	subs.w	r9, r0, #0
   2f276:	blt.w	2f384 <write_raid56_with_parity@@Base+0x354>
   2f27a:	adds	r5, #1
   2f27c:	b.n	2f260 <write_raid56_with_parity@@Base+0x230>
   2f27e:	ldr	r3, [sp, #4]
   2f280:	add.w	r0, r5, #96	; 0x60
   2f284:	ldr	r2, [sp, #88]	; 0x58
   2f286:	add.w	r1, r3, #96	; 0x60
   2f28a:	ldr	r3, [sp, #24]
   2f28c:	subs	r6, r6, r3
   2f28e:	add	r1, r6
   2f290:	b.n	2f1fc <write_raid56_with_parity@@Base+0x1cc>
   2f292:	mvn.w	r9, #11
   2f296:	movs	r5, #0
   2f298:	ldr	r3, [sp, #8]
   2f29a:	cmp	r3, r5
   2f29c:	bgt.n	2f2b2 <write_raid56_with_parity@@Base+0x282>
   2f29e:	mov	r0, r8
   2f2a0:	blx	8b84 <free@plt+0x4>
   2f2a4:	mov	r0, r4
   2f2a6:	blx	8b84 <free@plt+0x4>
   2f2aa:	mov	r0, sl
   2f2ac:	blx	8b84 <free@plt+0x4>
   2f2b0:	b.n	2f070 <write_raid56_with_parity@@Base+0x40>
   2f2b2:	ldr.w	r0, [r8, r5, lsl #2]
   2f2b6:	adds	r5, #1
   2f2b8:	blx	8b84 <free@plt+0x4>
   2f2bc:	b.n	2f298 <write_raid56_with_parity@@Base+0x268>
   2f2be:	ldrd	r2, r3, [r8]
   2f2c2:	mov.w	r1, #4294967295	; 0xffffffff
   2f2c6:	mvn.w	r0, #2
   2f2ca:	cmp	r1, r3
   2f2cc:	it	eq
   2f2ce:	cmpeq	r0, r2
   2f2d0:	bcc.n	2f30c <write_raid56_with_parity@@Base+0x2dc>
   2f2d2:	ldrd	r2, r3, [r7, #16]
   2f2d6:	ldr	r1, [r7, #8]
   2f2d8:	ldr.w	r0, [r4, r6, lsl #2]
   2f2dc:	strd	r2, r3, [r0, #48]	; 0x30
   2f2e0:	ldr	r3, [r1, #24]
   2f2e2:	str	r3, [r0, #88]	; 0x58
   2f2e4:	ldrd	r3, r2, [r1, #16]
   2f2e8:	adds	r3, #1
   2f2ea:	adc.w	r2, r2, #0
   2f2ee:	strd	r3, r2, [r1, #16]
   2f2f2:	ldrd	r0, r1, [r0, #40]	; 0x28
   2f2f6:	ldrd	r2, r3, [r8]
   2f2fa:	cmp	r1, r3
   2f2fc:	it	eq
   2f2fe:	cmpeq	r0, r2
   2f300:	bne.n	2f3ae <write_raid56_with_parity@@Base+0x37e>
   2f302:	adds	r6, #1
   2f304:	adds	r7, #16
   2f306:	add.w	r8, r8, #8
   2f30a:	b.n	2f228 <write_raid56_with_parity@@Base+0x1f8>
   2f30c:	mov	r0, r9
   2f30e:	blx	8e40 <malloc@plt+0x4>
   2f312:	cmp	r0, #0
   2f314:	beq.n	2f3b4 <write_raid56_with_parity@@Base+0x384>
   2f316:	ldrd	r2, r3, [r7, #16]
   2f31a:	mov.w	ip, #4294967295	; 0xffffffff
   2f31e:	ldr	r1, [r7, #8]
   2f320:	mvn.w	fp, #1
   2f324:	strd	r2, r3, [r0, #48]	; 0x30
   2f328:	ldr	r3, [r1, #24]
   2f32a:	str	r3, [r0, #88]	; 0x58
   2f32c:	ldrd	r3, r2, [r1, #16]
   2f330:	adds	r3, #1
   2f332:	adc.w	r2, r2, #0
   2f336:	strd	r3, r2, [r1, #16]
   2f33a:	ldr	r3, [sp, #88]	; 0x58
   2f33c:	str	r3, [r0, #76]	; 0x4c
   2f33e:	ldrd	r2, r3, [r8]
   2f342:	cmp	r3, ip
   2f344:	it	eq
   2f346:	cmpeq	r2, fp
   2f348:	beq.n	2f356 <write_raid56_with_parity@@Base+0x326>
   2f34a:	adds	r3, #1
   2f34c:	itt	eq
   2f34e:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2f352:	moveq	r5, r0
   2f354:	b.n	2f302 <write_raid56_with_parity@@Base+0x2d2>
   2f356:	str	r0, [sp, #8]
   2f358:	b.n	2f302 <write_raid56_with_parity@@Base+0x2d2>
   2f35a:	ldr.w	r2, [r4, r3, lsl #2]
   2f35e:	adds	r2, #96	; 0x60
   2f360:	str.w	r2, [sl, r3, lsl #2]
   2f364:	adds	r3, #1
   2f366:	b.n	2f24c <write_raid56_with_parity@@Base+0x21c>
   2f368:	ldr	r2, [sp, #8]
   2f36a:	str.w	r2, [r4, r3, lsl #2]
   2f36e:	cmp	r0, r5
   2f370:	bgt.n	2f3a0 <write_raid56_with_parity@@Base+0x370>
   2f372:	ldr	r1, [sp, #88]	; 0x58
   2f374:	subs	r2, r0, #1
   2f376:	mov	r3, sl
   2f378:	bl	33408 <raid5_gen_result@@Base>
   2f37c:	subs.w	r9, r0, #0
   2f380:	bge.w	2f25e <write_raid56_with_parity@@Base+0x22e>
   2f384:	movs	r5, #0
   2f386:	ldr	r3, [sp, #12]
   2f388:	ldr	r3, [r3, #4]
   2f38a:	cmp	r3, r5
   2f38c:	ble.n	2f2a4 <write_raid56_with_parity@@Base+0x274>
   2f38e:	ldr.w	r0, [r4, r5, lsl #2]
   2f392:	ldr	r3, [sp, #4]
   2f394:	cmp	r0, r3
   2f396:	beq.n	2f39c <write_raid56_with_parity@@Base+0x36c>
   2f398:	blx	8b84 <free@plt+0x4>
   2f39c:	adds	r5, #1
   2f39e:	b.n	2f386 <write_raid56_with_parity@@Base+0x356>
   2f3a0:	ldr.w	r3, [r4, r5, lsl #2]
   2f3a4:	adds	r3, #96	; 0x60
   2f3a6:	str.w	r3, [sl, r5, lsl #2]
   2f3aa:	adds	r5, #1
   2f3ac:	b.n	2f36e <write_raid56_with_parity@@Base+0x33e>
   2f3ae:	mvn.w	r9, #21
   2f3b2:	b.n	2f384 <write_raid56_with_parity@@Base+0x354>
   2f3b4:	mvn.w	r9, #11
   2f3b8:	b.n	2f384 <write_raid56_with_parity@@Base+0x354>
   2f3ba:	mvn.w	r9, #11
   2f3be:	b.n	2f2a4 <write_raid56_with_parity@@Base+0x274>

0002f3c0 <btrfs_stripe_length@@Base>:
   2f3c0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2f3c4:	adds	r1, #96	; 0x60
   2f3c6:	add	r1, r2
   2f3c8:	movs	r3, #0
   2f3ca:	cmp	r3, #0
   2f3cc:	mov	r7, r3
   2f3ce:	ldr	r4, [r1, #24]
   2f3d0:	ldrh	r2, [r1, #44]	; 0x2c
   2f3d2:	and.w	r6, r4, #2040	; 0x7f8
   2f3d6:	ldr	r5, [r1, #0]
   2f3d8:	it	eq
   2f3da:	cmpeq	r6, #64	; 0x40
   2f3dc:	ldr	r4, [r1, #4]
   2f3de:	uxth	r0, r2
   2f3e0:	beq.n	2f484 <btrfs_stripe_length@@Base+0xc4>
   2f3e2:	cmp	r3, #0
   2f3e4:	it	eq
   2f3e6:	cmpeq	r6, #65	; 0x41
   2f3e8:	bcs.n	2f434 <btrfs_stripe_length@@Base+0x74>
   2f3ea:	cmp	r3, #0
   2f3ec:	it	eq
   2f3ee:	cmpeq	r6, #8
   2f3f0:	beq.n	2f47a <btrfs_stripe_length@@Base+0xba>
   2f3f2:	cmp	r3, #0
   2f3f4:	it	eq
   2f3f6:	cmpeq	r6, #9
   2f3f8:	bcs.n	2f41a <btrfs_stripe_length@@Base+0x5a>
   2f3fa:	orrs.w	r3, r6, r7
   2f3fe:	beq.n	2f42a <btrfs_stripe_length@@Base+0x6a>
   2f400:	ldr	r2, [pc, #140]	; (2f490 <btrfs_stripe_length@@Base+0xd0>)
   2f402:	movs	r3, #1
   2f404:	ldr	r1, [pc, #140]	; (2f494 <btrfs_stripe_length@@Base+0xd4>)
   2f406:	ldr	r0, [pc, #144]	; (2f498 <btrfs_stripe_length@@Base+0xd8>)
   2f408:	add	r2, pc
   2f40a:	str	r3, [sp, #0]
   2f40c:	adds	r2, #130	; 0x82
   2f40e:	add	r1, pc
   2f410:	add	r0, pc
   2f412:	movw	r3, #2545	; 0x9f1
   2f416:	bl	2c6bc <btrfs_add_root_ref@@Base+0x1f4>
   2f41a:	cmp	r3, #0
   2f41c:	it	eq
   2f41e:	cmpeq	r6, #16
   2f420:	beq.n	2f42a <btrfs_stripe_length@@Base+0x6a>
   2f422:	cmp	r3, #0
   2f424:	it	eq
   2f426:	cmpeq	r6, #32
   2f428:	bne.n	2f400 <btrfs_stripe_length@@Base+0x40>
   2f42a:	mov	r0, r5
   2f42c:	mov	r1, r4
   2f42e:	add	sp, #12
   2f430:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f434:	cmp	r3, #0
   2f436:	it	eq
   2f438:	cmpeq.w	r6, #256	; 0x100
   2f43c:	beq.n	2f480 <btrfs_stripe_length@@Base+0xc0>
   2f43e:	mov.w	r9, #0
   2f442:	cmp	r9, r3
   2f444:	mov.w	r8, #256	; 0x100
   2f448:	it	eq
   2f44a:	cmpeq	r8, r6
   2f44c:	bcc.n	2f466 <btrfs_stripe_length@@Base+0xa6>
   2f44e:	cmp	r3, #0
   2f450:	it	eq
   2f452:	cmpeq	r6, #128	; 0x80
   2f454:	bne.n	2f400 <btrfs_stripe_length@@Base+0x40>
   2f456:	subs	r2, r0, #1
   2f458:	mov	r0, r5
   2f45a:	mov	r1, r4
   2f45c:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2f460:	mov	r5, r0
   2f462:	mov	r4, r1
   2f464:	b.n	2f42a <btrfs_stripe_length@@Base+0x6a>
   2f466:	cmp	r3, #0
   2f468:	it	eq
   2f46a:	cmpeq.w	r6, #512	; 0x200
   2f46e:	beq.n	2f42a <btrfs_stripe_length@@Base+0x6a>
   2f470:	cmp	r3, #0
   2f472:	it	eq
   2f474:	cmpeq.w	r6, #1024	; 0x400
   2f478:	b.n	2f428 <btrfs_stripe_length@@Base+0x68>
   2f47a:	uxth	r2, r2
   2f47c:	movs	r3, #0
   2f47e:	b.n	2f458 <btrfs_stripe_length@@Base+0x98>
   2f480:	subs	r2, r0, #2
   2f482:	b.n	2f458 <btrfs_stripe_length@@Base+0x98>
   2f484:	ldrh	r1, [r1, #46]	; 0x2e
   2f486:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   2f48a:	mov	r2, r0
   2f48c:	b.n	2f47c <btrfs_stripe_length@@Base+0xbc>
   2f48e:	nop
   2f490:	str	r4, [r5, #108]	; 0x6c
   2f492:	movs	r1, r0
   2f494:	str	r6, [r1, #0]
   2f496:	movs	r1, r0
   2f498:	subs	r5, #162	; 0xa2
   2f49a:	movs	r1, r0

0002f49c <btrfs_fix_device_size@@Base>:
   2f49c:	ldr	r2, [pc, #344]	; (2f5f8 <btrfs_fix_device_size@@Base+0x15c>)
   2f49e:	ldr	r3, [pc, #348]	; (2f5fc <btrfs_fix_device_size@@Base+0x160>)
   2f4a0:	add	r2, pc
   2f4a2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4a6:	sub	sp, #116	; 0x74
   2f4a8:	ldr	r3, [r2, r3]
   2f4aa:	mov	r5, r1
   2f4ac:	ldrd	sl, fp, [r1, #72]	; 0x48
   2f4b0:	movs	r1, #0
   2f4b2:	ldr	r3, [r3, #0]
   2f4b4:	str	r3, [sp, #108]	; 0x6c
   2f4b6:	mov.w	r3, #0
   2f4ba:	ldr.w	r3, [r0, #388]	; 0x184
   2f4be:	movs	r4, #0
   2f4c0:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2f4c4:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2f4c8:	and.w	r6, r2, sl
   2f4cc:	and.w	r7, r1, fp
   2f4d0:	orrs.w	r2, r6, r7
   2f4d4:	beq.n	2f520 <btrfs_fix_device_size@@Base+0x84>
   2f4d6:	negs	r3, r3
   2f4d8:	ldr.w	r9, [r0, #32]
   2f4dc:	and.w	r3, r3, sl
   2f4e0:	str	r3, [r5, #72]	; 0x48
   2f4e2:	movs	r3, #216	; 0xd8
   2f4e4:	strb.w	r3, [sp, #28]
   2f4e8:	ldr	r3, [r5, #64]	; 0x40
   2f4ea:	mov.w	r8, #1
   2f4ee:	mov	r1, r8
   2f4f0:	mov	r0, r9
   2f4f2:	strd	r8, r4, [sp, #20]
   2f4f6:	str.w	r3, [sp, #29]
   2f4fa:	ldr	r3, [r5, #68]	; 0x44
   2f4fc:	str.w	r3, [sp, #33]	; 0x21
   2f500:	bl	2f81c <btrfs_start_transaction@@Base>
   2f504:	cmn.w	r0, #4096	; 0x1000
   2f508:	mov	r6, r0
   2f50a:	bls.n	2f534 <btrfs_fix_device_size@@Base+0x98>
   2f50c:	mov	r4, r0
   2f50e:	blx	8f58 <__errno_location@plt>
   2f512:	negs	r3, r6
   2f514:	mov	r1, r6
   2f516:	str	r3, [r0, #0]
   2f518:	ldr	r0, [pc, #228]	; (2f600 <btrfs_fix_device_size@@Base+0x164>)
   2f51a:	add	r0, pc
   2f51c:	bl	1bd1c <__btrfs_error@@Base>
   2f520:	ldr	r2, [pc, #224]	; (2f604 <btrfs_fix_device_size@@Base+0x168>)
   2f522:	ldr	r3, [pc, #216]	; (2f5fc <btrfs_fix_device_size@@Base+0x160>)
   2f524:	add	r2, pc
   2f526:	ldr	r3, [r2, r3]
   2f528:	ldr	r2, [r3, #0]
   2f52a:	ldr	r3, [sp, #108]	; 0x6c
   2f52c:	eors	r2, r3
   2f52e:	beq.n	2f5f0 <btrfs_fix_device_size@@Base+0x154>
   2f530:	blx	8c90 <__stack_chk_fail@plt>
   2f534:	add	r7, sp, #40	; 0x28
   2f536:	mov	r0, r7
   2f538:	bl	1c6e8 <btrfs_init_path@@Base>
   2f53c:	strd	r4, r8, [sp]
   2f540:	add	r2, sp, #20
   2f542:	mov	r3, r7
   2f544:	mov	r1, r9
   2f546:	mov	r0, r6
   2f548:	bl	1eadc <btrfs_search_slot@@Base>
   2f54c:	subs	r4, r0, #0
   2f54e:	ble.n	2f56a <btrfs_fix_device_size@@Base+0xce>
   2f550:	ldr	r0, [pc, #180]	; (2f608 <btrfs_fix_device_size@@Base+0x16c>)
   2f552:	mvn.w	r4, #1
   2f556:	ldrd	r2, r3, [r5, #64]	; 0x40
   2f55a:	add	r0, pc
   2f55c:	bl	1bd1c <__btrfs_error@@Base>
   2f560:	mov	r1, r9
   2f562:	mov	r0, r6
   2f564:	bl	2fa9c <btrfs_commit_transaction@@Base>
   2f568:	b.n	2f5c4 <btrfs_fix_device_size@@Base+0x128>
   2f56a:	beq.n	2f580 <btrfs_fix_device_size@@Base+0xe4>
   2f56c:	blx	8f58 <__errno_location@plt>
   2f570:	negs	r3, r4
   2f572:	mov	r1, r4
   2f574:	str	r3, [r0, #0]
   2f576:	ldr	r0, [pc, #148]	; (2f60c <btrfs_fix_device_size@@Base+0x170>)
   2f578:	add	r0, pc
   2f57a:	bl	1bd1c <__btrfs_error@@Base>
   2f57e:	b.n	2f560 <btrfs_fix_device_size@@Base+0xc4>
   2f580:	ldr	r0, [sp, #40]	; 0x28
   2f582:	mov.w	ip, #25
   2f586:	ldr	r2, [sp, #72]	; 0x48
   2f588:	add.w	r3, r0, #96	; 0x60
   2f58c:	ldrd	r1, r4, [r5, #72]	; 0x48
   2f590:	mla	r2, ip, r2, r3
   2f594:	ldr.w	r2, [r2, #118]	; 0x76
   2f598:	add	r3, r2
   2f59a:	str.w	r1, [r3, #109]	; 0x6d
   2f59e:	str.w	r4, [r3, #113]	; 0x71
   2f5a2:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   2f5a6:	mov	r1, r9
   2f5a8:	mov	r0, r6
   2f5aa:	bl	2fa9c <btrfs_commit_transaction@@Base>
   2f5ae:	subs	r4, r0, #0
   2f5b0:	bge.n	2f5cc <btrfs_fix_device_size@@Base+0x130>
   2f5b2:	blx	8f58 <__errno_location@plt>
   2f5b6:	negs	r3, r4
   2f5b8:	mov	r1, r4
   2f5ba:	str	r3, [r0, #0]
   2f5bc:	ldr	r0, [pc, #80]	; (2f610 <btrfs_fix_device_size@@Base+0x174>)
   2f5be:	add	r0, pc
   2f5c0:	bl	1bd1c <__btrfs_error@@Base>
   2f5c4:	mov	r0, r7
   2f5c6:	bl	1c6f8 <btrfs_release_path@@Base>
   2f5ca:	b.n	2f520 <btrfs_fix_device_size@@Base+0x84>
   2f5cc:	mov	r0, r7
   2f5ce:	mov	r4, r8
   2f5d0:	bl	1c6f8 <btrfs_release_path@@Base>
   2f5d4:	ldrd	r2, r3, [r5, #72]	; 0x48
   2f5d8:	ldr	r1, [pc, #56]	; (2f614 <btrfs_fix_device_size@@Base+0x178>)
   2f5da:	mov	r0, r8
   2f5dc:	strd	sl, fp, [sp]
   2f5e0:	strd	r2, r3, [sp, #8]
   2f5e4:	add	r1, pc
   2f5e6:	ldrd	r2, r3, [r5, #64]	; 0x40
   2f5ea:	blx	900c <__printf_chk@plt+0x4>
   2f5ee:	b.n	2f520 <btrfs_fix_device_size@@Base+0x84>
   2f5f0:	mov	r0, r4
   2f5f2:	add	sp, #116	; 0x74
   2f5f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f5f8:			; <UNDEFINED> instruction: 0xb878
   2f5fa:	movs	r3, r0
   2f5fc:	lsls	r0, r1, #10
   2f5fe:	movs	r0, r0
   2f600:	str	r4, [r6, #52]	; 0x34
   2f602:	movs	r1, r0
   2f604:			; <UNDEFINED> instruction: 0xb7f4
   2f606:	movs	r3, r0
   2f608:	str	r0, [r3, #52]	; 0x34
   2f60a:	movs	r1, r0
   2f60c:	str	r1, [r4, #52]	; 0x34
   2f60e:	movs	r1, r0
   2f610:	str	r0, [r0, #52]	; 0x34
   2f612:	movs	r1, r0
   2f614:	str	r0, [r1, #52]	; 0x34
   2f616:	movs	r1, r0

0002f618 <btrfs_fix_super_size@@Base>:
   2f618:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f61c:	sub	sp, #20
   2f61e:	ldr.w	r3, [r0, #352]	; 0x160
   2f622:	mov	r5, r0
   2f624:	movs	r6, #0
   2f626:	movs	r7, #0
   2f628:	add.w	lr, r3, #72	; 0x48
   2f62c:	ldr	r3, [r3, #72]	; 0x48
   2f62e:	cmp	r3, lr
   2f630:	bne.n	2f66e <btrfs_fix_super_size@@Base+0x56>
   2f632:	ldr.w	r3, [r5, #308]	; 0x134
   2f636:	ldr.w	r9, [r3, #116]	; 0x74
   2f63a:	ldr.w	r8, [r3, #112]	; 0x70
   2f63e:	cmp	r7, r9
   2f640:	it	eq
   2f642:	cmpeq	r6, r8
   2f644:	beq.n	2f6e8 <btrfs_fix_super_size@@Base+0xd0>
   2f646:	str	r6, [r3, #112]	; 0x70
   2f648:	movs	r1, #1
   2f64a:	str	r7, [r3, #116]	; 0x74
   2f64c:	ldr	r0, [r5, #28]
   2f64e:	bl	2f81c <btrfs_start_transaction@@Base>
   2f652:	cmn.w	r0, #4096	; 0x1000
   2f656:	mov	r4, r0
   2f658:	bls.n	2f6b8 <btrfs_fix_super_size@@Base+0xa0>
   2f65a:	blx	8f58 <__errno_location@plt>
   2f65e:	negs	r3, r4
   2f660:	mov	r1, r4
   2f662:	str	r3, [r0, #0]
   2f664:	ldr	r0, [pc, #132]	; (2f6ec <btrfs_fix_super_size@@Base+0xd4>)
   2f666:	add	r0, pc
   2f668:	bl	1bd1c <__btrfs_error@@Base>
   2f66c:	b.n	2f6a6 <btrfs_fix_super_size@@Base+0x8e>
   2f66e:	ldr.w	ip, [r5, #388]	; 0x184
   2f672:	movs	r4, #0
   2f674:	ldrd	r1, r0, [r3, #72]	; 0x48
   2f678:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2f67c:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2f680:	and.w	r8, r2, r1
   2f684:	and.w	r9, r4, r0
   2f688:	orrs.w	r2, r8, r9
   2f68c:	beq.n	2f6ae <btrfs_fix_super_size@@Base+0x96>
   2f68e:	strd	r1, r0, [sp]
   2f692:	mvn.w	r4, #116	; 0x74
   2f696:	ldr	r0, [pc, #88]	; (2f6f0 <btrfs_fix_super_size@@Base+0xd8>)
   2f698:	str.w	ip, [sp, #8]
   2f69c:	add	r0, pc
   2f69e:	ldrd	r2, r3, [r3, #64]	; 0x40
   2f6a2:	bl	1bd1c <__btrfs_error@@Base>
   2f6a6:	mov	r0, r4
   2f6a8:	add	sp, #20
   2f6aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f6ae:	adds	r6, r6, r1
   2f6b0:	ldr	r3, [r3, #0]
   2f6b2:	adc.w	r7, r0, r7
   2f6b6:	b.n	2f62e <btrfs_fix_super_size@@Base+0x16>
   2f6b8:	ldr	r1, [r5, #28]
   2f6ba:	bl	2fa9c <btrfs_commit_transaction@@Base>
   2f6be:	subs	r4, r0, #0
   2f6c0:	bge.n	2f6d2 <btrfs_fix_super_size@@Base+0xba>
   2f6c2:	blx	8f58 <__errno_location@plt>
   2f6c6:	negs	r3, r4
   2f6c8:	mov	r1, r4
   2f6ca:	str	r3, [r0, #0]
   2f6cc:	ldr	r0, [pc, #36]	; (2f6f4 <btrfs_fix_super_size@@Base+0xdc>)
   2f6ce:	add	r0, pc
   2f6d0:	b.n	2f668 <btrfs_fix_super_size@@Base+0x50>
   2f6d2:	ldr	r1, [pc, #36]	; (2f6f8 <btrfs_fix_super_size@@Base+0xe0>)
   2f6d4:	mov	r2, r8
   2f6d6:	mov	r3, r9
   2f6d8:	movs	r0, #1
   2f6da:	add	r1, pc
   2f6dc:	strd	r6, r7, [sp]
   2f6e0:	blx	900c <__printf_chk@plt+0x4>
   2f6e4:	movs	r4, #1
   2f6e6:	b.n	2f6a6 <btrfs_fix_super_size@@Base+0x8e>
   2f6e8:	movs	r4, #0
   2f6ea:	b.n	2f6a6 <btrfs_fix_super_size@@Base+0x8e>
   2f6ec:	str	r0, [r5, #32]
   2f6ee:	movs	r1, r0
   2f6f0:	str	r1, [r2, #44]	; 0x2c
   2f6f2:	movs	r1, r0
   2f6f4:	str	r0, [r6, #32]
   2f6f6:	movs	r1, r0
   2f6f8:	str	r2, [r0, #44]	; 0x2c
   2f6fa:	movs	r1, r0

0002f6fc <btrfs_fix_device_and_super_size@@Base>:
   2f6fc:	push	{r3, r4, r5, r6, r7, lr}
   2f6fe:	mov	r5, r0
   2f700:	ldr.w	r3, [r0, #352]	; 0x160
   2f704:	add.w	r7, r3, #72	; 0x48
   2f708:	ldr	r2, [r3, #92]	; 0x5c
   2f70a:	cbz	r2, 2f71a <btrfs_fix_device_and_super_size@@Base+0x1e>
   2f70c:	ldr	r0, [pc, #132]	; (2f794 <btrfs_fix_device_and_super_size@@Base+0x98>)
   2f70e:	add	r0, pc
   2f710:	bl	1bd1c <__btrfs_error@@Base>
   2f714:	mvn.w	r0, #94	; 0x5e
   2f718:	pop	{r3, r4, r5, r6, r7, pc}
   2f71a:	ldr	r4, [r3, #72]	; 0x48
   2f71c:	cmp	r7, r4
   2f71e:	bne.n	2f770 <btrfs_fix_device_and_super_size@@Base+0x74>
   2f720:	ldr	r0, [pc, #116]	; (2f798 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2f722:	add	r0, pc
   2f724:	bl	1bd1c <__btrfs_error@@Base>
   2f728:	mvn.w	r0, #18
   2f72c:	b.n	2f718 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2f72e:	ldr	r2, [r3, #24]
   2f730:	adds	r2, #1
   2f732:	bne.n	2f746 <btrfs_fix_device_and_super_size@@Base+0x4a>
   2f734:	ldr	r0, [pc, #100]	; (2f79c <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2f736:	ldrd	r2, r3, [r3, #64]	; 0x40
   2f73a:	add	r0, pc
   2f73c:	bl	1bd1c <__btrfs_error@@Base>
   2f740:	ldr	r0, [pc, #92]	; (2f7a0 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2f742:	add	r0, pc
   2f744:	b.n	2f724 <btrfs_fix_device_and_super_size@@Base+0x28>
   2f746:	ldr	r2, [r3, #28]
   2f748:	cmp	r2, #0
   2f74a:	beq.n	2f734 <btrfs_fix_device_and_super_size@@Base+0x38>
   2f74c:	ldr	r3, [r3, #0]
   2f74e:	cmp	r3, r7
   2f750:	bne.n	2f72e <btrfs_fix_device_and_super_size@@Base+0x32>
   2f752:	movs	r6, #0
   2f754:	cmp	r4, r7
   2f756:	bne.n	2f774 <btrfs_fix_device_and_super_size@@Base+0x78>
   2f758:	mov	r0, r5
   2f75a:	bl	2f618 <btrfs_fix_super_size@@Base>
   2f75e:	cmp	r0, #0
   2f760:	bgt.n	2f764 <btrfs_fix_device_and_super_size@@Base+0x68>
   2f762:	cbz	r6, 2f788 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2f764:	ldr	r0, [pc, #60]	; (2f7a4 <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2f766:	add	r0, pc
   2f768:	blx	8e24 <puts@plt+0x4>
   2f76c:	movs	r0, #1
   2f76e:	b.n	2f718 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2f770:	mov	r3, r4
   2f772:	b.n	2f74e <btrfs_fix_device_and_super_size@@Base+0x52>
   2f774:	mov	r1, r4
   2f776:	mov	r0, r5
   2f778:	bl	2f49c <btrfs_fix_device_size@@Base>
   2f77c:	cmp	r0, #0
   2f77e:	blt.n	2f718 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2f780:	ldr	r4, [r4, #0]
   2f782:	it	ne
   2f784:	movne	r6, #1
   2f786:	b.n	2f754 <btrfs_fix_device_and_super_size@@Base+0x58>
   2f788:	ldr	r0, [pc, #28]	; (2f7a8 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2f78a:	add	r0, pc
   2f78c:	blx	8e24 <puts@plt+0x4>
   2f790:	mov	r0, r6
   2f792:	b.n	2f718 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2f794:	str	r6, [r0, #44]	; 0x2c
   2f796:	movs	r1, r0
   2f798:	str	r3, [r5, #44]	; 0x2c
   2f79a:	movs	r1, r0
   2f79c:	str	r3, [r4, #44]	; 0x2c
   2f79e:	movs	r1, r0
   2f7a0:	str	r2, [r0, #48]	; 0x30
   2f7a2:	movs	r1, r0
   2f7a4:	str	r1, [r4, #48]	; 0x30
   2f7a6:	movs	r1, r0
   2f7a8:	str	r5, [r0, #52]	; 0x34
   2f7aa:	movs	r1, r0
   2f7ac:	ldr.w	ip, [pc, #80]	; 2f800 <btrfs_fix_device_and_super_size@@Base+0x104>
   2f7b0:	ldr	r4, [pc, #80]	; (2f804 <btrfs_fix_device_and_super_size@@Base+0x108>)
   2f7b2:	add	ip, pc
   2f7b4:	ldr	r3, [pc, #80]	; (2f808 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2f7b6:	push	{lr}
   2f7b8:	sub	sp, #92	; 0x5c
   2f7ba:	ldr.w	r4, [ip, r4]
   2f7be:	add	r3, pc
   2f7c0:	ldr	r4, [r4, #0]
   2f7c2:	str	r4, [sp, #84]	; 0x54
   2f7c4:	mov.w	r4, #0
   2f7c8:	ldr	r4, [pc, #64]	; (2f80c <btrfs_fix_device_and_super_size@@Base+0x110>)
   2f7ca:	ldr	r4, [r3, r4]
   2f7cc:	ldr	r3, [pc, #64]	; (2f810 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2f7ce:	strd	r0, r2, [sp, #8]
   2f7d2:	add	r3, pc
   2f7d4:	ldr	r2, [pc, #60]	; (2f814 <btrfs_fix_device_and_super_size@@Base+0x118>)
   2f7d6:	strd	r1, r3, [sp]
   2f7da:	movs	r1, #1
   2f7dc:	ldr	r3, [pc, #56]	; (2f818 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2f7de:	add	r2, pc
   2f7e0:	ldr	r0, [r4, #0]
   2f7e2:	add	r4, sp, #20
   2f7e4:	add	r3, pc
   2f7e6:	blx	9040 <__fprintf_chk@plt+0x4>
   2f7ea:	movs	r1, #16
   2f7ec:	mov	r0, r4
   2f7ee:	blx	8e98 <backtrace@plt>
   2f7f2:	movs	r2, #2
   2f7f4:	mov	r1, r0
   2f7f6:	mov	r0, r4
   2f7f8:	blx	9214 <backtrace_symbols_fd@plt>
   2f7fc:	blx	91c0 <abort@plt>
   2f800:	push	{r1, r2, r5, r6, lr}
   2f802:	movs	r3, r0
   2f804:	lsls	r0, r1, #10
   2f806:	movs	r0, r0
   2f808:	push	{r1, r3, r4, r6, lr}
   2f80a:	movs	r3, r0
   2f80c:	lsls	r4, r3, #10
   2f80e:	movs	r0, r0
   2f810:	str	r0, [r5, #104]	; 0x68
   2f812:	movs	r1, r0
   2f814:			; <UNDEFINED> instruction: 0xeb800000
   2f818:	str	r0, [r4, #88]	; 0x58
   2f81a:	movs	r1, r0

0002f81c <btrfs_start_transaction@@Base>:
   2f81c:	push	{r3, r4, r5, r6, r7, lr}
   2f81e:	mov	r5, r0
   2f820:	ldr.w	r6, [r0, #464]	; 0x1d0
   2f824:	mov	r7, r1
   2f826:	movs	r0, #1
   2f828:	movs	r1, #96	; 0x60
   2f82a:	blx	8ab8 <calloc@plt+0x4>
   2f82e:	ldr.w	r3, [r6, #368]	; 0x170
   2f832:	mov	r4, r0
   2f834:	cbnz	r3, 2f894 <btrfs_start_transaction@@Base+0x78>
   2f836:	cbz	r0, 2f89a <btrfs_start_transaction@@Base+0x7e>
   2f838:	ldr	r3, [r5, #4]
   2f83a:	cbz	r3, 2f852 <btrfs_start_transaction@@Base+0x36>
   2f83c:	ldr	r0, [pc, #96]	; (2f8a0 <btrfs_start_transaction@@Base+0x84>)
   2f83e:	add	r0, pc
   2f840:	bl	1bd1c <__btrfs_error@@Base>
   2f844:	mov	r0, r4
   2f846:	blx	8b84 <free@plt+0x4>
   2f84a:	mvn.w	r4, #21
   2f84e:	mov	r0, r4
   2f850:	pop	{r3, r4, r5, r6, r7, pc}
   2f852:	ldr.w	r3, [r6, #304]	; 0x130
   2f856:	cbz	r3, 2f85e <btrfs_start_transaction@@Base+0x42>
   2f858:	ldr	r0, [pc, #72]	; (2f8a4 <btrfs_start_transaction@@Base+0x88>)
   2f85a:	add	r0, pc
   2f85c:	b.n	2f840 <btrfs_start_transaction@@Base+0x24>
   2f85e:	str	r6, [r0, #0]
   2f860:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2f864:	str.w	r0, [r6, #304]	; 0x130
   2f868:	adds	r3, #1
   2f86a:	adc.w	r2, r2, #0
   2f86e:	strd	r3, r2, [r6, #232]	; 0xe8
   2f872:	strd	r3, r2, [r0, #8]
   2f876:	ldrh	r1, [r0, #32]
   2f878:	strd	r3, r2, [r5, #480]	; 0x1e0
   2f87c:	ldr	r3, [r5, #0]
   2f87e:	bic.w	r1, r1, #510	; 0x1fe
   2f882:	str	r7, [r0, #48]	; 0x30
   2f884:	bic.w	r1, r1, #1
   2f888:	strh	r1, [r0, #32]
   2f88a:	str	r3, [r5, #4]
   2f88c:	ldr	r2, [r3, #80]	; 0x50
   2f88e:	adds	r2, #1
   2f890:	str	r2, [r3, #80]	; 0x50
   2f892:	b.n	2f84e <btrfs_start_transaction@@Base+0x32>
   2f894:	mvn.w	r4, #29
   2f898:	b.n	2f84e <btrfs_start_transaction@@Base+0x32>
   2f89a:	mvn.w	r4, #11
   2f89e:	b.n	2f84e <btrfs_start_transaction@@Base+0x32>
   2f8a0:	str	r4, [r2, #84]	; 0x54
   2f8a2:	movs	r1, r0
   2f8a4:	str	r2, [r5, #84]	; 0x54
   2f8a6:	movs	r1, r0

0002f8a8 <commit_tree_roots@@Base>:
   2f8a8:	ldr	r2, [pc, #264]	; (2f9b4 <commit_tree_roots@@Base+0x10c>)
   2f8aa:	ldr	r3, [pc, #268]	; (2f9b8 <commit_tree_roots@@Base+0x110>)
   2f8ac:	add	r2, pc
   2f8ae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f8b2:	sub	sp, #28
   2f8b4:	ldr	r3, [r2, r3]
   2f8b6:	mov	r6, r0
   2f8b8:	mov	r5, r1
   2f8ba:	ldr	r3, [r3, #0]
   2f8bc:	str	r3, [sp, #20]
   2f8be:	mov.w	r3, #0
   2f8c2:	ldrb.w	r3, [r1, #364]	; 0x16c
   2f8c6:	ands.w	r3, r3, #2
   2f8ca:	beq.n	2f8e4 <commit_tree_roots@@Base+0x3c>
   2f8cc:	mov.w	sl, #0
   2f8d0:	ldr	r2, [pc, #232]	; (2f9bc <commit_tree_roots@@Base+0x114>)
   2f8d2:	ldr	r3, [pc, #228]	; (2f9b8 <commit_tree_roots@@Base+0x110>)
   2f8d4:	add	r2, pc
   2f8d6:	ldr	r3, [r2, r3]
   2f8d8:	ldr	r2, [r3, #0]
   2f8da:	ldr	r3, [sp, #20]
   2f8dc:	eors	r2, r3
   2f8de:	beq.n	2f9ac <commit_tree_roots@@Base+0x104>
   2f8e0:	blx	8c90 <__stack_chk_fail@plt>
   2f8e4:	ldr	r2, [r1, #28]
   2f8e6:	ldr	r2, [r2, #0]
   2f8e8:	ldr	r1, [r2, #80]	; 0x50
   2f8ea:	str	r2, [sp, #16]
   2f8ec:	adds	r1, #1
   2f8ee:	str	r1, [r2, #80]	; 0x50
   2f8f0:	add	r1, sp, #16
   2f8f2:	strd	r3, r1, [sp]
   2f8f6:	ldr	r1, [r5, #28]
   2f8f8:	bl	1d124 <btrfs_cow_block@@Base>
   2f8fc:	mov	sl, r0
   2f8fe:	ldr	r0, [sp, #16]
   2f900:	bl	1b4c0 <free_extent_buffer@@Base>
   2f904:	cmp.w	sl, #0
   2f908:	bne.n	2f8d0 <commit_tree_roots@@Base+0x28>
   2f90a:	mov.w	r1, #4294967295	; 0xffffffff
   2f90e:	mov	r0, r6
   2f910:	bl	27784 <btrfs_run_delayed_refs@@Base>
   2f914:	cmp	r0, #0
   2f916:	bne.n	2f9a8 <commit_tree_roots@@Base+0x100>
   2f918:	add.w	fp, r5, #336	; 0x150
   2f91c:	str	r0, [sp, #12]
   2f91e:	ldr.w	r4, [r5, #336]	; 0x150
   2f922:	cmp	r4, fp
   2f924:	beq.n	2f8cc <commit_tree_roots@@Base+0x24>
   2f926:	ldrd	r2, r3, [r4]
   2f92a:	sub.w	r7, r4, #520	; 0x208
   2f92e:	sub.w	r8, r4, #512	; 0x200
   2f932:	str	r3, [r2, #4]
   2f934:	str	r2, [r3, #0]
   2f936:	strd	r4, r4, [r4]
   2f93a:	subs	r4, #73	; 0x49
   2f93c:	ldr.w	r3, [r7, #464]	; 0x1d0
   2f940:	ldr.w	r9, [r3, #28]
   2f944:	ldr.w	ip, [r7]
   2f948:	ldr.w	r1, [r8, #180]	; 0xb4
   2f94c:	ldr.w	r0, [r8, #176]	; 0xb0
   2f950:	ldrd	r2, r3, [ip, #40]	; 0x28
   2f954:	cmp	r1, r3
   2f956:	it	eq
   2f958:	cmpeq	r0, r2
   2f95a:	beq.n	2f992 <commit_tree_roots@@Base+0xea>
   2f95c:	str.w	r2, [r8, #176]	; 0xb0
   2f960:	mov	r1, r9
   2f962:	str.w	r3, [r8, #180]	; 0xb4
   2f966:	mov	r0, r6
   2f968:	ldrd	r3, r2, [r6, #8]
   2f96c:	str.w	r2, [r8, #164]	; 0xa4
   2f970:	mov	r2, r4
   2f972:	str.w	r3, [r8, #160]	; 0xa0
   2f976:	ldrb.w	r3, [ip, #196]	; 0xc4
   2f97a:	strb.w	r3, [r7, #246]	; 0xf6
   2f97e:	mov	r3, r8
   2f980:	bl	2c318 <btrfs_update_root@@Base>
   2f984:	subs.w	sl, r0, #0
   2f988:	blt.n	2f996 <commit_tree_roots@@Base+0xee>
   2f98a:	mov	r0, r6
   2f98c:	bl	251dc <btrfs_write_dirty_block_groups@@Base>
   2f990:	b.n	2f944 <commit_tree_roots@@Base+0x9c>
   2f992:	mov.w	sl, #0
   2f996:	ldr	r0, [r7, #4]
   2f998:	bl	1b4c0 <free_extent_buffer@@Base>
   2f99c:	ldr	r3, [sp, #12]
   2f99e:	str	r3, [r7, #4]
   2f9a0:	cmp.w	sl, #0
   2f9a4:	beq.n	2f91e <commit_tree_roots@@Base+0x76>
   2f9a6:	b.n	2f8d0 <commit_tree_roots@@Base+0x28>
   2f9a8:	mov	sl, r0
   2f9aa:	b.n	2f8d0 <commit_tree_roots@@Base+0x28>
   2f9ac:	mov	r0, sl
   2f9ae:	add	sp, #28
   2f9b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9b4:	push	{r2, r3, r5, r6}
   2f9b6:	movs	r3, r0
   2f9b8:	lsls	r0, r1, #10
   2f9ba:	movs	r0, r0
   2f9bc:	push	{r2, r6}
   2f9be:	movs	r3, r0

0002f9c0 <__commit_transaction@@Base>:
   2f9c0:	ldr	r2, [pc, #196]	; (2fa88 <__commit_transaction@@Base+0xc8>)
   2f9c2:	ldr	r3, [pc, #200]	; (2fa8c <__commit_transaction@@Base+0xcc>)
   2f9c4:	add	r2, pc
   2f9c6:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2f9ca:	sub	sp, #40	; 0x28
   2f9cc:	ldr	r3, [r2, r3]
   2f9ce:	add.w	fp, sp, #24
   2f9d2:	ldr.w	r6, [r1, #464]	; 0x1d0
   2f9d6:	add.w	sl, sp, #16
   2f9da:	ldr	r3, [r3, #0]
   2f9dc:	str	r3, [sp, #36]	; 0x24
   2f9de:	mov.w	r3, #0
   2f9e2:	mov	r5, r0
   2f9e4:	add.w	r9, r6, #64	; 0x40
   2f9e8:	movs	r7, #1
   2f9ea:	movs	r2, #0
   2f9ec:	movs	r3, #0
   2f9ee:	mov	r0, r9
   2f9f0:	strd	fp, r7, [sp, #4]
   2f9f4:	str.w	sl, [sp]
   2f9f8:	bl	1b3b8 <find_first_extent_bit@@Base>
   2f9fc:	cbz	r0, 2fa3a <__commit_transaction@@Base+0x7a>
   2f9fe:	ldr	r2, [pc, #144]	; (2fa90 <__commit_transaction@@Base+0xd0>)
   2fa00:	ldr	r3, [pc, #136]	; (2fa8c <__commit_transaction@@Base+0xcc>)
   2fa02:	add	r2, pc
   2fa04:	ldr	r3, [r2, r3]
   2fa06:	ldr	r2, [r3, #0]
   2fa08:	ldr	r3, [sp, #36]	; 0x24
   2fa0a:	eors	r2, r3
   2fa0c:	beq.n	2fa7e <__commit_transaction@@Base+0xbe>
   2fa0e:	blx	8c90 <__stack_chk_fail@plt>
   2fa12:	ldr	r0, [pc, #128]	; (2fa94 <__commit_transaction@@Base+0xd4>)
   2fa14:	movs	r2, #1
   2fa16:	movs	r1, #145	; 0x91
   2fa18:	add	r0, pc
   2fa1a:	bl	2f7ac <btrfs_fix_device_and_super_size@@Base+0xb0>
   2fa1e:	ldrd	r2, r3, [sp, #16]
   2fa22:	mov	r0, r4
   2fa24:	ldr	r1, [r4, #76]	; 0x4c
   2fa26:	adds	r2, r2, r1
   2fa28:	adc.w	r3, r3, #0
   2fa2c:	strd	r2, r3, [sp, #16]
   2fa30:	bl	1bb6e <clear_extent_buffer_dirty@@Base>
   2fa34:	mov	r0, r4
   2fa36:	bl	1b4c0 <free_extent_buffer@@Base>
   2fa3a:	ldrd	r2, r3, [sp, #16]
   2fa3e:	ldrd	r0, r1, [sp, #24]
   2fa42:	cmp	r1, r3
   2fa44:	it	eq
   2fa46:	cmpeq	r0, r2
   2fa48:	bcc.n	2f9ea <__commit_transaction@@Base+0x2a>
   2fa4a:	mov	r0, r9
   2fa4c:	bl	1b592 <find_first_extent_buffer@@Base>
   2fa50:	mov	r4, r0
   2fa52:	cmp	r0, #0
   2fa54:	beq.n	2fa12 <__commit_transaction@@Base+0x52>
   2fa56:	ldrd	r0, r1, [r0, #40]	; 0x28
   2fa5a:	ldrd	r2, r3, [sp, #16]
   2fa5e:	cmp	r1, r3
   2fa60:	it	eq
   2fa62:	cmpeq	r0, r2
   2fa64:	bne.n	2fa12 <__commit_transaction@@Base+0x52>
   2fa66:	mov	r2, r4
   2fa68:	mov	r1, r6
   2fa6a:	mov	r0, r5
   2fa6c:	bl	21e7c <write_tree_block@@Base>
   2fa70:	mov	r2, r0
   2fa72:	cmp	r0, #0
   2fa74:	beq.n	2fa1e <__commit_transaction@@Base+0x5e>
   2fa76:	ldr	r0, [pc, #32]	; (2fa98 <__commit_transaction@@Base+0xd8>)
   2fa78:	movs	r1, #147	; 0x93
   2fa7a:	add	r0, pc
   2fa7c:	b.n	2fa1a <__commit_transaction@@Base+0x5a>
   2fa7e:	movs	r0, #0
   2fa80:	add	sp, #40	; 0x28
   2fa82:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2fa86:	nop
   2fa88:	cbz	r4, 2fae0 <btrfs_commit_transaction@@Base+0x44>
   2fa8a:	movs	r3, r0
   2fa8c:	lsls	r0, r1, #10
   2fa8e:	movs	r0, r0
   2fa90:	cbz	r6, 2fad8 <btrfs_commit_transaction@@Base+0x3c>
   2fa92:	movs	r3, r0
   2fa94:	str	r2, [r4, #60]	; 0x3c
   2fa96:	movs	r1, r0
   2fa98:	lsls	r0, r1, #3
   2fa9a:	movs	r1, r0

0002fa9c <btrfs_commit_transaction@@Base>:
   2fa9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2faa0:	mov	r6, r0
   2faa2:	ldr	r3, [r0, #0]
   2faa4:	sub	sp, #20
   2faa6:	ldrd	r8, r9, [r0, #8]
   2faaa:	mov	r5, r1
   2faac:	ldr.w	r7, [r1, #464]	; 0x1d0
   2fab0:	ldr.w	sl, [r3, #368]	; 0x170
   2fab4:	cmp.w	sl, #0
   2fab8:	bne.w	2fc06 <btrfs_commit_transaction@@Base+0x16a>
   2fabc:	mov.w	r1, #4294967295	; 0xffffffff
   2fac0:	bl	27784 <btrfs_run_delayed_refs@@Base>
   2fac4:	subs	r4, r0, #0
   2fac6:	blt.n	2fb76 <btrfs_commit_transaction@@Base+0xda>
   2fac8:	ldrd	r3, r0, [r5]
   2facc:	cmp	r0, r3
   2face:	bne.n	2fb24 <btrfs_commit_transaction@@Base+0x88>
   2fad0:	mov	r1, r7
   2fad2:	mov	r0, r6
   2fad4:	bl	2f8a8 <commit_tree_roots@@Base>
   2fad8:	subs	r4, r0, #0
   2fada:	blt.n	2fb76 <btrfs_commit_transaction@@Base+0xda>
   2fadc:	add.w	sl, r7, #128	; 0x80
   2fae0:	mov.w	fp, #1
   2fae4:	ldr	r3, [r6, #64]	; 0x40
   2fae6:	cmp	r3, #0
   2fae8:	bne.n	2fb84 <btrfs_commit_transaction@@Base+0xe8>
   2faea:	mov.w	r2, #4294967295	; 0xffffffff
   2faee:	strd	fp, r3, [sp, #8]
   2faf2:	mov	r0, sl
   2faf4:	mov.w	r3, #4294967295	; 0xffffffff
   2faf8:	strd	r2, r3, [sp]
   2fafc:	movs	r2, #0
   2fafe:	movs	r3, #0
   2fb00:	bl	1b3fa <test_range_bit@@Base>
   2fb04:	cmp	r0, #0
   2fb06:	bne.n	2fb84 <btrfs_commit_transaction@@Base+0xe8>
   2fb08:	mov	r1, r5
   2fb0a:	mov	r0, r6
   2fb0c:	bl	2f9c0 <__commit_transaction@@Base>
   2fb10:	ldr.w	sl, [r6, #64]	; 0x40
   2fb14:	cmp.w	sl, #0
   2fb18:	beq.n	2fb9e <btrfs_commit_transaction@@Base+0x102>
   2fb1a:	ldr	r0, [pc, #240]	; (2fc0c <btrfs_commit_transaction@@Base+0x170>)
   2fb1c:	add	r0, pc
   2fb1e:	bl	1bd1c <__btrfs_error@@Base>
   2fb22:	b.n	2fb76 <btrfs_commit_transaction@@Base+0xda>
   2fb24:	ldr.w	r3, [r5, #464]	; 0x1d0
   2fb28:	ldr	r2, [r3, #28]
   2fb2a:	cmp	r2, r5
   2fb2c:	beq.n	2fad0 <btrfs_commit_transaction@@Base+0x34>
   2fb2e:	ldr	r3, [r3, #32]
   2fb30:	cmp	r3, r5
   2fb32:	beq.n	2fad0 <btrfs_commit_transaction@@Base+0x34>
   2fb34:	bl	1b4c0 <free_extent_buffer@@Base>
   2fb38:	ldr	r3, [r5, #0]
   2fb3a:	str.w	sl, [r5, #4]
   2fb3e:	mov	r0, r6
   2fb40:	ldrd	r1, r2, [r3, #40]	; 0x28
   2fb44:	str.w	r1, [r5, #184]	; 0xb8
   2fb48:	str.w	r2, [r5, #188]	; 0xbc
   2fb4c:	ldrd	r1, r2, [r6, #8]
   2fb50:	str.w	r1, [r5, #168]	; 0xa8
   2fb54:	str.w	r2, [r5, #172]	; 0xac
   2fb58:	addw	r2, r5, #447	; 0x1bf
   2fb5c:	ldrb.w	r3, [r3, #196]	; 0xc4
   2fb60:	ldr.w	r1, [r5, #464]	; 0x1d0
   2fb64:	strb.w	r3, [r5, #246]	; 0xf6
   2fb68:	add.w	r3, r5, #8
   2fb6c:	ldr	r1, [r1, #28]
   2fb6e:	bl	2c318 <btrfs_update_root@@Base>
   2fb72:	subs	r4, r0, #0
   2fb74:	bge.n	2fad0 <btrfs_commit_transaction@@Base+0x34>
   2fb76:	mov	r0, r6
   2fb78:	bl	28b84 <btrfs_destroy_delayed_refs@@Base>
   2fb7c:	mov	r0, r6
   2fb7e:	blx	8b84 <free@plt+0x4>
   2fb82:	b.n	2fbd8 <btrfs_commit_transaction@@Base+0x13c>
   2fb84:	mov	r0, r6
   2fb86:	bl	251dc <btrfs_write_dirty_block_groups@@Base>
   2fb8a:	subs	r4, r0, #0
   2fb8c:	blt.n	2fb76 <btrfs_commit_transaction@@Base+0xda>
   2fb8e:	mov.w	r1, #4294967295	; 0xffffffff
   2fb92:	mov	r0, r6
   2fb94:	bl	27784 <btrfs_run_delayed_refs@@Base>
   2fb98:	subs	r4, r0, #0
   2fb9a:	bge.n	2fae4 <btrfs_commit_transaction@@Base+0x48>
   2fb9c:	b.n	2fb76 <btrfs_commit_transaction@@Base+0xda>
   2fb9e:	mov	r0, r6
   2fba0:	add.w	r7, r7, #356	; 0x164
   2fba4:	bl	21b8c <write_ctree_super@@Base>
   2fba8:	mov	r4, r0
   2fbaa:	mov	r0, r6
   2fbac:	bl	25428 <btrfs_finish_extent_commit@@Base>
   2fbb0:	mov	r0, r6
   2fbb2:	blx	8b84 <free@plt+0x4>
   2fbb6:	ldr	r0, [r5, #4]
   2fbb8:	bl	1b4c0 <free_extent_buffer@@Base>
   2fbbc:	str.w	sl, [r5, #4]
   2fbc0:	ldr	r5, [r7, #0]
   2fbc2:	ldr	r6, [pc, #76]	; (2fc10 <btrfs_commit_transaction@@Base+0x174>)
   2fbc4:	subs	r5, #44	; 0x2c
   2fbc6:	str.w	sl, [r7, #-52]
   2fbca:	add	r6, pc
   2fbcc:	strd	r8, r9, [r7, #-116]	; 0x74
   2fbd0:	add.w	r3, r5, #44	; 0x2c
   2fbd4:	cmp	r3, r7
   2fbd6:	bne.n	2fbe0 <btrfs_commit_transaction@@Base+0x144>
   2fbd8:	mov	r0, r4
   2fbda:	add	sp, #20
   2fbdc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fbe0:	ldrd	r2, r3, [r5, #32]
   2fbe4:	orrs.w	r1, r2, r3
   2fbe8:	beq.n	2fc00 <btrfs_commit_transaction@@Base+0x164>
   2fbea:	strd	r2, r3, [sp, #8]
   2fbee:	mov	r0, r6
   2fbf0:	ldrd	r2, r3, [r5]
   2fbf4:	strd	r2, r3, [sp]
   2fbf8:	mov	r2, r8
   2fbfa:	mov	r3, r9
   2fbfc:	bl	1bca0 <__btrfs_warning@@Base>
   2fc00:	ldr	r5, [r5, #44]	; 0x2c
   2fc02:	subs	r5, #44	; 0x2c
   2fc04:	b.n	2fbd0 <btrfs_commit_transaction@@Base+0x134>
   2fc06:	mvn.w	r4, #29
   2fc0a:	b.n	2fbd8 <btrfs_commit_transaction@@Base+0x13c>
   2fc0c:	str	r0, [r7, #44]	; 0x2c
   2fc0e:	movs	r1, r0
   2fc10:	str	r4, [r5, #36]	; 0x24
   2fc12:	movs	r1, r0

0002fc14 <btrfs_abort_transaction@@Base>:
   2fc14:	ldr	r3, [r0, #0]
   2fc16:	str.w	r1, [r3, #368]	; 0x170
   2fc1a:	bx	lr
   2fc1c:	push	{r4, lr}
   2fc1e:	mov	r4, r1
   2fc20:	ldr	r1, [pc, #84]	; (2fc78 <btrfs_abort_transaction@@Base+0x64>)
   2fc22:	sub	sp, #24
   2fc24:	ldr	r3, [pc, #84]	; (2fc7c <btrfs_abort_transaction@@Base+0x68>)
   2fc26:	add	r1, pc
   2fc28:	ldr	r3, [r1, r3]
   2fc2a:	mov	r1, sp
   2fc2c:	ldr	r3, [r3, #0]
   2fc2e:	str	r3, [sp, #20]
   2fc30:	mov.w	r3, #0
   2fc34:	movs	r3, #25
   2fc36:	muls	r2, r3
   2fc38:	movs	r3, #17
   2fc3a:	adds	r2, #101	; 0x65
   2fc3c:	bl	1bbba <read_extent_buffer@@Base>
   2fc40:	ldr.w	r3, [sp, #13]
   2fc44:	ldr.w	r2, [sp, #9]
   2fc48:	str.w	r3, [r4, #13]
   2fc4c:	ldrb.w	r3, [sp, #8]
   2fc50:	str.w	r2, [r4, #9]
   2fc54:	ldr	r2, [pc, #40]	; (2fc80 <btrfs_abort_transaction@@Base+0x6c>)
   2fc56:	strb	r3, [r4, #8]
   2fc58:	ldr	r3, [sp, #0]
   2fc5a:	add	r2, pc
   2fc5c:	str	r3, [r4, #0]
   2fc5e:	ldr	r3, [sp, #4]
   2fc60:	str	r3, [r4, #4]
   2fc62:	ldr	r3, [pc, #24]	; (2fc7c <btrfs_abort_transaction@@Base+0x68>)
   2fc64:	ldr	r3, [r2, r3]
   2fc66:	ldr	r2, [r3, #0]
   2fc68:	ldr	r3, [sp, #20]
   2fc6a:	eors	r2, r3
   2fc6c:	beq.n	2fc72 <btrfs_abort_transaction@@Base+0x5e>
   2fc6e:	blx	8c90 <__stack_chk_fail@plt>
   2fc72:	add	sp, #24
   2fc74:	pop	{r4, pc}
   2fc76:	nop
   2fc78:	sub	sp, #456	; 0x1c8
   2fc7a:	movs	r3, r0
   2fc7c:	lsls	r0, r1, #10
   2fc7e:	movs	r0, r0
   2fc80:	sub	sp, #248	; 0xf8
   2fc82:	movs	r3, r0
   2fc84:	push	{r4, r5, r6, r7, lr}
   2fc86:	sub	sp, #36	; 0x24
   2fc88:	ldr	r6, [pc, #112]	; (2fcfc <btrfs_abort_transaction@@Base+0xe8>)
   2fc8a:	mov	r4, r3
   2fc8c:	ldr	r5, [pc, #112]	; (2fd00 <btrfs_abort_transaction@@Base+0xec>)
   2fc8e:	add	r6, pc
   2fc90:	ldr	r5, [r6, r5]
   2fc92:	ldrd	r6, r7, [r2, #40]	; 0x28
   2fc96:	ldr	r5, [r5, #0]
   2fc98:	str	r5, [sp, #28]
   2fc9a:	mov.w	r5, #0
   2fc9e:	movs	r5, #198	; 0xc6
   2fca0:	strb.w	r5, [sp, #16]
   2fca4:	strd	r6, r7, [sp, #8]
   2fca8:	ldr.w	r5, [r2, #49]	; 0x31
   2fcac:	ldr.w	r2, [r2, #53]	; 0x35
   2fcb0:	str.w	r5, [sp, #17]
   2fcb4:	str.w	r2, [sp, #21]
   2fcb8:	ldr	r2, [sp, #56]	; 0x38
   2fcba:	str	r2, [sp, #4]
   2fcbc:	movs	r2, #0
   2fcbe:	str	r2, [sp, #0]
   2fcc0:	add	r2, sp, #8
   2fcc2:	bl	1eadc <btrfs_search_slot@@Base>
   2fcc6:	cmp	r0, #0
   2fcc8:	blt.n	2fce2 <btrfs_abort_transaction@@Base+0xce>
   2fcca:	ittte	eq
   2fccc:	ldreq	r3, [r4, #32]
   2fcce:	moveq	r1, #25
   2fcd0:	ldreq	r2, [r4, #0]
   2fcd2:	mvnne.w	r0, #1
   2fcd6:	ittt	eq
   2fcd8:	mlaeq	r3, r1, r3, r2
   2fcdc:	ldreq.w	r0, [r3, #214]	; 0xd6
   2fce0:	addeq	r0, #101	; 0x65
   2fce2:	ldr	r2, [pc, #32]	; (2fd04 <btrfs_abort_transaction@@Base+0xf0>)
   2fce4:	ldr	r3, [pc, #24]	; (2fd00 <btrfs_abort_transaction@@Base+0xec>)
   2fce6:	add	r2, pc
   2fce8:	ldr	r3, [r2, r3]
   2fcea:	ldr	r2, [r3, #0]
   2fcec:	ldr	r3, [sp, #28]
   2fcee:	eors	r2, r3
   2fcf0:	beq.n	2fcf6 <btrfs_abort_transaction@@Base+0xe2>
   2fcf2:	blx	8c90 <__stack_chk_fail@plt>
   2fcf6:	add	sp, #36	; 0x24
   2fcf8:	pop	{r4, r5, r6, r7, pc}
   2fcfa:	nop
   2fcfc:	sub	sp, #40	; 0x28
   2fcfe:	movs	r3, r0
   2fd00:	lsls	r0, r1, #10
   2fd02:	movs	r0, r0
   2fd04:	add	sp, #200	; 0xc8
   2fd06:	movs	r3, r0
   2fd08:	push	{r4}
   2fd0a:	ldr	r4, [r1, #0]
   2fd0c:	ldr	r2, [r1, #32]
   2fd0e:	adds	r2, #1
   2fd10:	str	r2, [r1, #32]
   2fd12:	ldr.w	r4, [r4, #192]	; 0xc0
   2fd16:	cmp	r2, r4
   2fd18:	bcc.n	2fd2c <btrfs_abort_transaction@@Base+0x118>
   2fd1a:	movs	r2, #0
   2fd1c:	ldr.w	r4, [sp], #4
   2fd20:	strb.w	r2, [r1, #65]	; 0x41
   2fd24:	ldr.w	r0, [r0, #464]	; 0x1d0
   2fd28:	b.w	1ff10 <btrfs_next_sibling_tree_block@@Base>
   2fd2c:	movs	r0, #0
   2fd2e:	ldr.w	r4, [sp], #4
   2fd32:	bx	lr
   2fd34:	push	{r4, r5, r6, lr}
   2fd36:	lsrs	r4, r2, #5
   2fd38:	and.w	r6, r2, #31
   2fd3c:	bic.w	r2, r2, #31
   2fd40:	ldr.w	r5, [r0, r4, lsl #2]
   2fd44:	mov.w	r4, #4294967295	; 0xffffffff
   2fd48:	lsls	r4, r6
   2fd4a:	eors	r5, r3
   2fd4c:	ands	r4, r5
   2fd4e:	cbz	r4, 2fd84 <btrfs_abort_transaction@@Base+0x170>
   2fd50:	uxth	r3, r4
   2fd52:	cbnz	r3, 2fd94 <btrfs_abort_transaction@@Base+0x180>
   2fd54:	lsrs	r4, r4, #16
   2fd56:	movs	r3, #16
   2fd58:	tst.w	r4, #255	; 0xff
   2fd5c:	itt	eq
   2fd5e:	lsreq	r4, r4, #8
   2fd60:	addeq	r3, #8
   2fd62:	lsls	r6, r4, #28
   2fd64:	itt	eq
   2fd66:	lsreq	r4, r4, #4
   2fd68:	addeq	r3, #4
   2fd6a:	lsls	r5, r4, #30
   2fd6c:	itt	eq
   2fd6e:	lsreq	r4, r4, #2
   2fd70:	addeq	r3, #2
   2fd72:	lsls	r0, r4, #31
   2fd74:	it	pl
   2fd76:	addpl	r3, #1
   2fd78:	add	r3, r2
   2fd7a:	cmp	r1, r3
   2fd7c:	it	cs
   2fd7e:	movcs	r1, r3
   2fd80:	mov	r0, r1
   2fd82:	pop	{r4, r5, r6, pc}
   2fd84:	adds	r2, #32
   2fd86:	cmp	r2, r1
   2fd88:	bcs.n	2fd80 <btrfs_abort_transaction@@Base+0x16c>
   2fd8a:	lsrs	r4, r2, #5
   2fd8c:	ldr.w	r4, [r0, r4, lsl #2]
   2fd90:	eors	r4, r3
   2fd92:	b.n	2fd4e <btrfs_abort_transaction@@Base+0x13a>
   2fd94:	movs	r3, #0
   2fd96:	b.n	2fd58 <btrfs_abort_transaction@@Base+0x144>
   2fd98:	ldr.w	ip, [pc, #80]	; 2fdec <btrfs_abort_transaction@@Base+0x1d8>
   2fd9c:	ldr	r4, [pc, #80]	; (2fdf0 <btrfs_abort_transaction@@Base+0x1dc>)
   2fd9e:	add	ip, pc
   2fda0:	ldr	r3, [pc, #80]	; (2fdf4 <btrfs_abort_transaction@@Base+0x1e0>)
   2fda2:	push	{lr}
   2fda4:	sub	sp, #92	; 0x5c
   2fda6:	ldr.w	r4, [ip, r4]
   2fdaa:	add	r3, pc
   2fdac:	ldr	r4, [r4, #0]
   2fdae:	str	r4, [sp, #84]	; 0x54
   2fdb0:	mov.w	r4, #0
   2fdb4:	ldr	r4, [pc, #64]	; (2fdf8 <btrfs_abort_transaction@@Base+0x1e4>)
   2fdb6:	ldr	r4, [r3, r4]
   2fdb8:	movs	r3, #0
   2fdba:	strd	r2, r1, [sp]
   2fdbe:	movs	r1, #1
   2fdc0:	strd	r0, r3, [sp, #8]
   2fdc4:	ldr	r2, [pc, #52]	; (2fdfc <btrfs_abort_transaction@@Base+0x1e8>)
   2fdc6:	ldr	r3, [pc, #56]	; (2fe00 <btrfs_abort_transaction@@Base+0x1ec>)
   2fdc8:	ldr	r0, [r4, #0]
   2fdca:	add	r4, sp, #20
   2fdcc:	add	r3, pc
   2fdce:	add	r2, pc
   2fdd0:	blx	9040 <__fprintf_chk@plt+0x4>
   2fdd4:	movs	r1, #16
   2fdd6:	mov	r0, r4
   2fdd8:	blx	8e98 <backtrace@plt>
   2fddc:	movs	r2, #2
   2fdde:	mov	r1, r0
   2fde0:	mov	r0, r4
   2fde2:	blx	9214 <backtrace_symbols_fd@plt>
   2fde6:	blx	91c0 <abort@plt>
   2fdea:	nop
   2fdec:	add	r7, sp, #488	; 0x1e8
   2fdee:	movs	r3, r0
   2fdf0:	lsls	r0, r1, #10
   2fdf2:	movs	r0, r0
   2fdf4:	add	r7, sp, #440	; 0x1b8
   2fdf6:	movs	r3, r0
   2fdf8:	lsls	r4, r3, #10
   2fdfa:	movs	r0, r0
   2fdfc:			; <UNDEFINED> instruction: 0xf0fc0000
   2fe00:	str	r3, [r0, #12]
   2fe02:	movs	r1, r0
   2fe04:	push	{r3, lr}
   2fe06:	cbnz	r3, 2fe0c <btrfs_abort_transaction@@Base+0x1f8>
   2fe08:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   2fe0c:	pop	{r3, pc}
   2fe0e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fe12:	mov	r6, r2
   2fe14:	ldr	r2, [pc, #192]	; (2fed8 <btrfs_abort_transaction@@Base+0x2c4>)
   2fe16:	mov	r7, r3
   2fe18:	ldr	r3, [pc, #192]	; (2fedc <btrfs_abort_transaction@@Base+0x2c8>)
   2fe1a:	sub	sp, #28
   2fe1c:	add	r2, pc
   2fe1e:	ldr.w	fp, [r0]
   2fe22:	mov	r1, sp
   2fe24:	mov	sl, r0
   2fe26:	ldr	r3, [r2, r3]
   2fe28:	ldr	r2, [r0, #32]
   2fe2a:	mov	r0, fp
   2fe2c:	ldr	r3, [r3, #0]
   2fe2e:	str	r3, [sp, #20]
   2fe30:	mov.w	r3, #0
   2fe34:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   2fe38:	ldrb.w	r3, [sp, #8]
   2fe3c:	ldr	r1, [pc, #160]	; (2fee0 <btrfs_abort_transaction@@Base+0x2cc>)
   2fe3e:	sub.w	r2, r3, #200	; 0xc8
   2fe42:	ldr	r0, [pc, #160]	; (2fee4 <btrfs_abort_transaction@@Base+0x2d0>)
   2fe44:	negs	r3, r2
   2fe46:	add	r1, pc
   2fe48:	adcs	r3, r2
   2fe4a:	add	r0, pc
   2fe4c:	movs	r2, #62	; 0x3e
   2fe4e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   2fe52:	ldrd	r4, r5, [sp]
   2fe56:	ldr.w	r3, [sp, #9]
   2fe5a:	cmp	r7, r5
   2fe5c:	ldr.w	r2, [sp, #13]
   2fe60:	it	eq
   2fe62:	cmpeq	r6, r4
   2fe64:	bcc.n	2fece <btrfs_abort_transaction@@Base+0x2ba>
   2fe66:	adds.w	r8, r4, r3
   2fe6a:	adc.w	r9, r5, r2
   2fe6e:	cmp	r7, r9
   2fe70:	it	eq
   2fe72:	cmpeq	r6, r8
   2fe74:	ite	cc
   2fe76:	movcc	r3, #1
   2fe78:	movcs	r3, #0
   2fe7a:	ldr	r1, [pc, #108]	; (2fee8 <btrfs_abort_transaction@@Base+0x2d4>)
   2fe7c:	movs	r2, #66	; 0x42
   2fe7e:	ldr	r0, [pc, #108]	; (2feec <btrfs_abort_transaction@@Base+0x2d8>)
   2fe80:	add	r1, pc
   2fe82:	add	r0, pc
   2fe84:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   2fe88:	ldr.w	r3, [fp, #92]	; 0x5c
   2fe8c:	subs	r0, r6, r4
   2fe8e:	sbc.w	r1, r7, r5
   2fe92:	ldr.w	r2, [r3, #388]	; 0x184
   2fe96:	movs	r3, #0
   2fe98:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   2fe9c:	ldr.w	r3, [sl, #32]
   2fea0:	movs	r1, #25
   2fea2:	mla	r3, r1, r3, fp
   2fea6:	ldr.w	r1, [r3, #214]	; 0xd6
   2feaa:	adds	r1, #101	; 0x65
   2feac:	mov	r2, r0
   2feae:	mov	r0, fp
   2feb0:	bl	1bc54 <extent_buffer_test_bit@@Base>
   2feb4:	ldr	r2, [pc, #56]	; (2fef0 <btrfs_abort_transaction@@Base+0x2dc>)
   2feb6:	ldr	r3, [pc, #36]	; (2fedc <btrfs_abort_transaction@@Base+0x2c8>)
   2feb8:	add	r2, pc
   2feba:	ldr	r3, [r2, r3]
   2febc:	subs	r0, #0
   2febe:	it	ne
   2fec0:	movne	r0, #1
   2fec2:	ldr	r2, [r3, #0]
   2fec4:	ldr	r3, [sp, #20]
   2fec6:	eors	r2, r3
   2fec8:	beq.n	2fed2 <btrfs_abort_transaction@@Base+0x2be>
   2feca:	blx	8c90 <__stack_chk_fail@plt>
   2fece:	movs	r3, #0
   2fed0:	b.n	2fe7a <btrfs_abort_transaction@@Base+0x266>
   2fed2:	add	sp, #28
   2fed4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fed8:	add	r6, sp, #1008	; 0x3f0
   2feda:	movs	r3, r0
   2fedc:	lsls	r0, r1, #10
   2fede:	movs	r0, r0
   2fee0:	str	r5, [r4, #80]	; 0x50
   2fee2:	movs	r1, r0
   2fee4:	str	r7, [r2, #4]
   2fee6:	movs	r1, r0
   2fee8:	str	r3, [r5, #76]	; 0x4c
   2feea:	movs	r1, r0
   2feec:	str	r7, [r0, #4]
   2feee:	movs	r1, r0
   2fef0:	add	r6, sp, #384	; 0x180
   2fef2:	movs	r3, r0
   2fef4:	push	{r0, r1, r2, r4, r5, lr}
   2fef6:	movs	r5, #1
   2fef8:	str	r5, [sp, #4]
   2fefa:	mov	r4, r3
   2fefc:	ldr	r5, [sp, #24]
   2fefe:	str	r5, [sp, #0]
   2ff00:	bl	1eadc <btrfs_search_slot@@Base>
   2ff04:	cmp	r0, #0
   2ff06:	blt.n	2ff32 <btrfs_abort_transaction@@Base+0x31e>
   2ff08:	bne.n	2ff1a <btrfs_abort_transaction@@Base+0x306>
   2ff0a:	ldr	r1, [pc, #44]	; (2ff38 <btrfs_abort_transaction@@Base+0x324>)
   2ff0c:	movs	r2, #89	; 0x59
   2ff0e:	ldr	r0, [pc, #44]	; (2ff3c <btrfs_abort_transaction@@Base+0x328>)
   2ff10:	add	r1, pc
   2ff12:	adds	r1, #20
   2ff14:	add	r0, pc
   2ff16:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   2ff1a:	ldr	r3, [r4, #32]
   2ff1c:	cbnz	r3, 2ff2c <btrfs_abort_transaction@@Base+0x318>
   2ff1e:	ldr	r1, [pc, #32]	; (2ff40 <btrfs_abort_transaction@@Base+0x32c>)
   2ff20:	movs	r2, #94	; 0x5e
   2ff22:	ldr	r0, [pc, #32]	; (2ff44 <btrfs_abort_transaction@@Base+0x330>)
   2ff24:	add	r1, pc
   2ff26:	adds	r1, #20
   2ff28:	add	r0, pc
   2ff2a:	b.n	2ff16 <btrfs_abort_transaction@@Base+0x302>
   2ff2c:	movs	r0, #0
   2ff2e:	subs	r3, #1
   2ff30:	str	r3, [r4, #32]
   2ff32:	add	sp, #12
   2ff34:	pop	{r4, r5, pc}
   2ff36:	nop
   2ff38:	str	r3, [r3, #68]	; 0x44
   2ff3a:	movs	r1, r0
   2ff3c:	movs	r0, #34	; 0x22
   2ff3e:	movs	r1, r0
   2ff40:	str	r7, [r0, #68]	; 0x44
   2ff42:	movs	r1, r0
   2ff44:	movs	r0, #14
   2ff46:	movs	r1, r0
   2ff48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ff4c:	mov	r6, r2
   2ff4e:	ldr	r2, [pc, #156]	; (2ffec <btrfs_abort_transaction@@Base+0x3d8>)
   2ff50:	sub	sp, #36	; 0x24
   2ff52:	ldr	r3, [pc, #156]	; (2fff0 <btrfs_abort_transaction@@Base+0x3dc>)
   2ff54:	mov	r8, r0
   2ff56:	add	r2, pc
   2ff58:	ldr	r0, [r6, #0]
   2ff5a:	mov	r9, r1
   2ff5c:	ldr	r3, [r2, r3]
   2ff5e:	ldr	r2, [r6, #32]
   2ff60:	ldr	r3, [r3, #0]
   2ff62:	str	r3, [sp, #28]
   2ff64:	mov.w	r3, #0
   2ff68:	adds	r3, r2, #1
   2ff6a:	ldr.w	r1, [r0, #192]	; 0xc0
   2ff6e:	cmp	r3, r1
   2ff70:	bcs.n	2ff8a <btrfs_abort_transaction@@Base+0x376>
   2ff72:	movs	r0, #0
   2ff74:	str	r3, [r6, #32]
   2ff76:	ldr	r2, [pc, #124]	; (2fff4 <btrfs_abort_transaction@@Base+0x3e0>)
   2ff78:	ldr	r3, [pc, #116]	; (2fff0 <btrfs_abort_transaction@@Base+0x3dc>)
   2ff7a:	add	r2, pc
   2ff7c:	ldr	r3, [r2, r3]
   2ff7e:	ldr	r2, [r3, #0]
   2ff80:	ldr	r3, [sp, #28]
   2ff82:	eors	r2, r3
   2ff84:	beq.n	2ffe6 <btrfs_abort_transaction@@Base+0x3d2>
   2ff86:	blx	8c90 <__stack_chk_fail@plt>
   2ff8a:	add	r7, sp, #8
   2ff8c:	movs	r5, #255	; 0xff
   2ff8e:	mov	r1, r7
   2ff90:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   2ff94:	mov	r0, r6
   2ff96:	bl	1c6f8 <btrfs_release_path@@Base>
   2ff9a:	ldr.w	r1, [sp, #17]
   2ff9e:	ldr	r3, [sp, #8]
   2ffa0:	ldr.w	r0, [sp, #21]
   2ffa4:	ldr	r2, [sp, #12]
   2ffa6:	adds	r3, r3, r1
   2ffa8:	mov	r1, r9
   2ffaa:	strb.w	r5, [sp, #16]
   2ffae:	adc.w	r2, r0, r2
   2ffb2:	mov	r0, r8
   2ffb4:	strd	r3, r2, [sp, #8]
   2ffb8:	movs	r3, #0
   2ffba:	mov	r2, r7
   2ffbc:	str	r3, [sp, #0]
   2ffbe:	mov	r3, r6
   2ffc0:	strb.w	r5, [sp, #17]
   2ffc4:	strb.w	r5, [sp, #18]
   2ffc8:	strb.w	r5, [sp, #19]
   2ffcc:	strb.w	r5, [sp, #20]
   2ffd0:	strb.w	r5, [sp, #21]
   2ffd4:	strb.w	r5, [sp, #22]
   2ffd8:	strb.w	r5, [sp, #23]
   2ffdc:	strb.w	r5, [sp, #24]
   2ffe0:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   2ffe4:	b.n	2ff76 <btrfs_abort_transaction@@Base+0x362>
   2ffe6:	add	sp, #36	; 0x24
   2ffe8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ffec:	add	r5, sp, #776	; 0x308
   2ffee:	movs	r3, r0
   2fff0:	lsls	r0, r1, #10
   2fff2:	movs	r0, r0
   2fff4:	add	r5, sp, #632	; 0x278
   2fff6:	movs	r3, r0
   2fff8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fffc:	mov	r7, r3
   2fffe:	vpush	{d8-d9}
   30002:	mov	r4, r2
   30004:	ldr.w	r3, [pc, #2080]	; 30828 <btrfs_abort_transaction@@Base+0xc14>
   30008:	mov	fp, r1
   3000a:	ldr.w	r2, [pc, #2080]	; 3082c <btrfs_abort_transaction@@Base+0xc18>
   3000e:	mov.w	r8, #1
   30012:	add	r3, pc
   30014:	mov	r5, r0
   30016:	sub	sp, #124	; 0x7c
   30018:	add	r2, pc
   3001a:	ldr	r1, [r0, #0]
   3001c:	str	r3, [sp, #64]	; 0x40
   3001e:	ldr.w	r3, [pc, #2064]	; 30830 <btrfs_abort_transaction@@Base+0xc1c>
   30022:	ldr	r3, [r2, r3]
   30024:	mov	r2, fp
   30026:	ldr	r3, [r3, #0]
   30028:	str	r3, [sp, #116]	; 0x74
   3002a:	mov.w	r3, #0
   3002e:	str.w	r8, [sp]
   30032:	mov	r3, r4
   30034:	ldr	r1, [r1, #48]	; 0x30
   30036:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   3003a:	cmn.w	r0, #4096	; 0x1000
   3003e:	bls.n	3005c <btrfs_abort_transaction@@Base+0x448>
   30040:	mov	r6, r0
   30042:	ldr.w	r2, [pc, #2032]	; 30834 <btrfs_abort_transaction@@Base+0xc20>
   30046:	ldr.w	r3, [pc, #2024]	; 30830 <btrfs_abort_transaction@@Base+0xc1c>
   3004a:	add	r2, pc
   3004c:	ldr	r3, [r2, r3]
   3004e:	ldr	r2, [r3, #0]
   30050:	ldr	r3, [sp, #116]	; 0x74
   30052:	eors	r2, r3
   30054:	beq.w	3081c <btrfs_abort_transaction@@Base+0xc08>
   30058:	blx	8c90 <__stack_chk_fail@plt>
   3005c:	ldr	r2, [r4, #0]
   3005e:	adds	r2, #96	; 0x60
   30060:	adds	r3, r2, r0
   30062:	ldr.w	sl, [r3, #4]
   30066:	ldr	r3, [r3, #0]
   30068:	add	r7, r3
   3006a:	str	r7, [r2, r0]
   3006c:	ldr	r0, [r4, #0]
   3006e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   30072:	mov	r0, r4
   30074:	bl	1c6f8 <btrfs_release_path@@Base>
   30078:	ands.w	sl, sl, #1
   3007c:	bne.w	30468 <btrfs_abort_transaction@@Base+0x854>
   30080:	ldr.w	r3, [fp, #112]	; 0x70
   30084:	cmp	r7, r3
   30086:	bls.w	30818 <btrfs_abort_transaction@@Base+0xc04>
   3008a:	ldr	r3, [r5, #0]
   3008c:	str	r3, [sp, #40]	; 0x28
   3008e:	ldr	r3, [r3, #48]	; 0x30
   30090:	ldr.w	r6, [fp, #49]	; 0x31
   30094:	ldr.w	r7, [fp, #53]	; 0x35
   30098:	vmov	s16, r3
   3009c:	ldr	r3, [sp, #40]	; 0x28
   3009e:	mov	r0, r6
   300a0:	mov	r1, r7
   300a2:	ldr.w	r2, [r3, #388]	; 0x184
   300a6:	mov	r3, sl
   300a8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   300ac:	adds	r1, r0, #7
   300ae:	mov	r0, r8
   300b0:	lsrs	r1, r1, #3
   300b2:	subs	r1, #1
   300b4:	orr.w	r1, r1, #3
   300b8:	adds	r1, #1
   300ba:	blx	8ab8 <calloc@plt+0x4>
   300be:	str	r0, [sp, #56]	; 0x38
   300c0:	cmp	r0, #0
   300c2:	beq.w	3045e <btrfs_abort_transaction@@Base+0x84a>
   300c6:	ldrd	r2, r3, [fp, #40]	; 0x28
   300ca:	ldr.w	r8, [pc, #1900]	; 30838 <btrfs_abort_transaction@@Base+0xc24>
   300ce:	strd	r2, r3, [sp, #16]
   300d2:	add	r8, pc
   300d4:	ldr	r3, [sp, #16]
   300d6:	add.w	r8, r8, #43	; 0x2b
   300da:	adds	r3, r6, r3
   300dc:	str	r3, [sp, #24]
   300de:	ldr	r3, [sp, #20]
   300e0:	adc.w	r3, r7, r3
   300e4:	str	r3, [sp, #28]
   300e6:	ldr	r3, [sp, #24]
   300e8:	adds.w	r2, r3, #4294967295	; 0xffffffff
   300ec:	ldr	r3, [sp, #28]
   300ee:	adc.w	r3, r3, #4294967295	; 0xffffffff
   300f2:	strd	r2, r3, [sp, #76]	; 0x4c
   300f6:	movs	r2, #255	; 0xff
   300f8:	strb.w	r2, [sp, #84]	; 0x54
   300fc:	strb.w	r2, [sp, #85]	; 0x55
   30100:	strb.w	r2, [sp, #86]	; 0x56
   30104:	strb.w	r2, [sp, #87]	; 0x57
   30108:	strb.w	r2, [sp, #88]	; 0x58
   3010c:	strb.w	r2, [sp, #89]	; 0x59
   30110:	strb.w	r2, [sp, #90]	; 0x5a
   30114:	strb.w	r2, [sp, #91]	; 0x5b
   30118:	strb.w	r2, [sp, #92]	; 0x5c
   3011c:	mov.w	r3, #4294967295	; 0xffffffff
   30120:	vmov	r1, s16
   30124:	str	r3, [sp, #0]
   30126:	add	r2, sp, #76	; 0x4c
   30128:	mov	r3, r4
   3012a:	mov	r0, r5
   3012c:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   30130:	mov	r6, r0
   30132:	cmp	r0, #0
   30134:	bne.n	30216 <btrfs_abort_transaction@@Base+0x602>
   30136:	ldr	r3, [r4, #0]
   30138:	mov	r9, r0
   3013a:	vmov	s17, r3
   3013e:	ldr	r3, [r4, #32]
   30140:	adds	r3, #1
   30142:	str	r3, [r4, #32]
   30144:	ldr.w	r3, [pc, #1780]	; 3083c <btrfs_abort_transaction@@Base+0xc28>
   30148:	add	r3, pc
   3014a:	vmov	s18, r3
   3014e:	ldr	r2, [r4, #32]
   30150:	add.w	r7, r9, sl
   30154:	cmp	r2, #0
   30156:	bgt.n	30162 <btrfs_abort_transaction@@Base+0x54e>
   30158:	mov.w	sl, #0
   3015c:	b.n	301d2 <btrfs_abort_transaction@@Base+0x5be>
   3015e:	mov	sl, r7
   30160:	b.n	3011c <btrfs_abort_transaction@@Base+0x508>
   30162:	vmov	r0, s17
   30166:	subs	r2, #1
   30168:	add	r1, sp, #96	; 0x60
   3016a:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   3016e:	ldrb.w	r3, [sp, #104]	; 0x68
   30172:	cmp	r3, #198	; 0xc6
   30174:	bne.n	3022c <btrfs_abort_transaction@@Base+0x618>
   30176:	ldrd	r2, r3, [fp, #40]	; 0x28
   3017a:	mov.w	sl, #1
   3017e:	ldrd	r0, r1, [sp, #96]	; 0x60
   30182:	ldr.w	r6, [pc, #1724]	; 30840 <btrfs_abort_transaction@@Base+0xc2c>
   30186:	cmp	r1, r3
   30188:	add	r6, pc
   3018a:	it	eq
   3018c:	cmpeq	r0, r2
   3018e:	add.w	r6, r6, #43	; 0x2b
   30192:	ldr.w	r0, [pc, #1712]	; 30844 <btrfs_abort_transaction@@Base+0xc30>
   30196:	ite	eq
   30198:	moveq	r3, #1
   3019a:	movne	r3, #0
   3019c:	add	r0, pc
   3019e:	movs	r2, #222	; 0xde
   301a0:	mov	r1, r6
   301a2:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   301a6:	ldr.w	r3, [fp, #53]	; 0x35
   301aa:	ldr.w	r1, [sp, #109]	; 0x6d
   301ae:	ldr.w	r0, [sp, #105]	; 0x69
   301b2:	ldr.w	r2, [fp, #49]	; 0x31
   301b6:	cmp	r1, r3
   301b8:	mov	r1, r6
   301ba:	it	eq
   301bc:	cmpeq	r0, r2
   301be:	ldr.w	r0, [pc, #1672]	; 30848 <btrfs_abort_transaction@@Base+0xc34>
   301c2:	mov.w	r2, #223	; 0xdf
   301c6:	add	r0, pc
   301c8:	ite	eq
   301ca:	moveq	r3, #1
   301cc:	movne	r3, #0
   301ce:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   301d2:	vmov	r1, s16
   301d6:	mov	r2, r4
   301d8:	ldr	r3, [r4, #32]
   301da:	mov	r0, r5
   301dc:	str.w	r9, [sp]
   301e0:	bl	1fc98 <btrfs_del_items@@Base>
   301e4:	mov	r6, r0
   301e6:	cbnz	r0, 30216 <btrfs_abort_transaction@@Base+0x602>
   301e8:	mov	r0, r4
   301ea:	bl	1c6f8 <btrfs_release_path@@Base>
   301ee:	cmp.w	sl, #0
   301f2:	beq.n	3015e <btrfs_abort_transaction@@Base+0x54a>
   301f4:	ldr	r1, [sp, #40]	; 0x28
   301f6:	mov	r3, r4
   301f8:	mov.w	r8, #1
   301fc:	mov	r2, fp
   301fe:	str.w	r8, [sp]
   30202:	mov	r0, r5
   30204:	ldr	r1, [r1, #48]	; 0x30
   30206:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   3020a:	cmn.w	r0, #4096	; 0x1000
   3020e:	mov	r3, r0
   30210:	bls.w	3033a <btrfs_abort_transaction@@Base+0x726>
   30214:	mov	r6, r0
   30216:	ldr	r0, [sp, #56]	; 0x38
   30218:	blx	8b84 <free@plt+0x4>
   3021c:	cmp	r6, #0
   3021e:	beq.w	30042 <btrfs_abort_transaction@@Base+0x42e>
   30222:	mov	r1, r6
   30224:	mov	r0, r5
   30226:	bl	2fc14 <btrfs_abort_transaction@@Base>
   3022a:	b.n	30042 <btrfs_abort_transaction@@Base+0x42e>
   3022c:	cmp	r3, #199	; 0xc7
   3022e:	bne.n	30326 <btrfs_abort_transaction@@Base+0x712>
   30230:	ldrd	r6, r7, [sp, #96]	; 0x60
   30234:	mov	r1, r8
   30236:	ldrd	r2, r3, [sp, #16]
   3023a:	vmov	r0, s18
   3023e:	cmp	r7, r3
   30240:	it	eq
   30242:	cmpeq	r6, r2
   30244:	mov.w	r2, #229	; 0xe5
   30248:	ite	cs
   3024a:	movcs	r3, #1
   3024c:	movcc	r3, #0
   3024e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30252:	ldrd	r2, r3, [sp, #24]
   30256:	ldr.w	r0, [pc, #1524]	; 3084c <btrfs_abort_transaction@@Base+0xc38>
   3025a:	mov	r1, r8
   3025c:	cmp	r7, r3
   3025e:	it	eq
   30260:	cmpeq	r6, r2
   30262:	add	r0, pc
   30264:	mov.w	r2, #230	; 0xe6
   30268:	ite	cc
   3026a:	movcc	r3, #1
   3026c:	movcs	r3, #0
   3026e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30272:	ldr.w	r3, [sp, #105]	; 0x69
   30276:	ldr.w	r2, [sp, #109]	; 0x6d
   3027a:	adds	r3, r3, r6
   3027c:	str	r3, [sp, #48]	; 0x30
   3027e:	adc.w	r3, r2, r7
   30282:	str	r3, [sp, #52]	; 0x34
   30284:	ldrd	r0, r1, [sp, #48]	; 0x30
   30288:	ldrd	r2, r3, [sp, #24]
   3028c:	cmp	r3, r1
   3028e:	mov	r1, r8
   30290:	it	eq
   30292:	cmpeq	r2, r0
   30294:	ldr.w	r0, [pc, #1464]	; 30850 <btrfs_abort_transaction@@Base+0xc3c>
   30298:	mov.w	r2, #231	; 0xe7
   3029c:	ite	cs
   3029e:	movcs	r3, #1
   302a0:	movcc	r3, #0
   302a2:	add	r0, pc
   302a4:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   302a8:	ldr	r3, [sp, #40]	; 0x28
   302aa:	ldr	r1, [sp, #16]
   302ac:	ldr.w	r2, [r3, #388]	; 0x184
   302b0:	subs	r0, r6, r1
   302b2:	ldr	r1, [sp, #20]
   302b4:	mov.w	r3, #0
   302b8:	sbc.w	r1, r7, r1
   302bc:	str	r2, [sp, #68]	; 0x44
   302be:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   302c2:	ldr	r1, [sp, #48]	; 0x30
   302c4:	ldr	r7, [sp, #20]
   302c6:	movs	r3, #0
   302c8:	ldr	r2, [sp, #68]	; 0x44
   302ca:	mov	r6, r0
   302cc:	ldr	r0, [sp, #16]
   302ce:	subs	r0, r1, r0
   302d0:	ldr	r1, [sp, #52]	; 0x34
   302d2:	sbc.w	r1, r1, r7
   302d6:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   302da:	ldr	r3, [sp, #56]	; 0x38
   302dc:	add.w	r2, r3, r6, lsr #3
   302e0:	movs	r3, #255	; 0xff
   302e2:	subs	r7, r0, r6
   302e4:	and.w	r6, r6, #7
   302e8:	rsb	r1, r6, #8
   302ec:	lsl.w	r6, r3, r6
   302f0:	uxtb	r6, r6
   302f2:	subs	r1, r7, r1
   302f4:	bpl.n	30316 <btrfs_abort_transaction@@Base+0x702>
   302f6:	cbz	r7, 3030a <btrfs_abort_transaction@@Base+0x6f6>
   302f8:	negs	r0, r0
   302fa:	movs	r3, #255	; 0xff
   302fc:	and.w	r0, r0, #7
   30300:	ldrb	r1, [r2, #0]
   30302:	asrs	r3, r0
   30304:	ands	r3, r6
   30306:	orrs	r3, r1
   30308:	strb	r3, [r2, #0]
   3030a:	ldr	r3, [r4, #32]
   3030c:	add.w	r9, r9, #1
   30310:	subs	r3, #1
   30312:	str	r3, [r4, #32]
   30314:	b.n	3014e <btrfs_abort_transaction@@Base+0x53a>
   30316:	ldrb	r3, [r2, #0]
   30318:	mov	r7, r1
   3031a:	movs	r1, #8
   3031c:	orrs	r3, r6
   3031e:	movs	r6, #255	; 0xff
   30320:	strb.w	r3, [r2], #1
   30324:	b.n	302f2 <btrfs_abort_transaction@@Base+0x6de>
   30326:	ldr.w	r1, [pc, #1324]	; 30854 <btrfs_abort_transaction@@Base+0xc40>
   3032a:	movs	r2, #243	; 0xf3
   3032c:	ldr.w	r0, [pc, #1320]	; 30858 <btrfs_abort_transaction@@Base+0xc44>
   30330:	add	r1, pc
   30332:	adds	r1, #43	; 0x2b
   30334:	add	r0, pc
   30336:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   3033a:	ldr	r0, [r4, #0]
   3033c:	add.w	r2, r0, #96	; 0x60
   30340:	add	r3, r2
   30342:	ldr	r2, [r3, #4]
   30344:	ldr.w	r9, [r3]
   30348:	orr.w	r2, r2, #1
   3034c:	str	r2, [r3, #4]
   3034e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   30352:	mov	r0, r4
   30354:	bl	1c6f8 <btrfs_release_path@@Base>
   30358:	cmp	r9, r7
   3035a:	beq.n	30392 <btrfs_abort_transaction@@Base+0x77e>
   3035c:	ldr	r2, [sp, #64]	; 0x40
   3035e:	ldr.w	r3, [pc, #1276]	; 3085c <btrfs_abort_transaction@@Base+0xc48>
   30362:	ldr	r3, [r2, r3]
   30364:	strd	r7, r9, [sp, #8]
   30368:	ldrd	r0, r1, [fp, #40]	; 0x28
   3036c:	ldr.w	r2, [pc, #1264]	; 30860 <btrfs_abort_transaction@@Base+0xc4c>
   30370:	strd	r0, r1, [sp]
   30374:	add	r2, pc
   30376:	mov	r1, r8
   30378:	ldr	r0, [r3, #0]
   3037a:	blx	9040 <__fprintf_chk@plt+0x4>
   3037e:	ldr.w	r1, [pc, #1252]	; 30864 <btrfs_abort_transaction@@Base+0xc50>
   30382:	ldr.w	r0, [pc, #1252]	; 30868 <btrfs_abort_transaction@@Base+0xc54>
   30386:	movw	r2, #271	; 0x10f
   3038a:	add	r1, pc
   3038c:	adds	r1, #43	; 0x2b
   3038e:	add	r0, pc
   30390:	b.n	30336 <btrfs_abort_transaction@@Base+0x722>
   30392:	ldr	r3, [sp, #40]	; 0x28
   30394:	mov.w	fp, #0
   30398:	ldr.w	r8, [sp, #56]	; 0x38
   3039c:	mov.w	r9, #200	; 0xc8
   303a0:	ldr.w	r3, [r3, #388]	; 0x184
   303a4:	lsls	r3, r3, #11
   303a6:	mov	sl, r3
   303a8:	ldrd	r2, r3, [sp, #16]
   303ac:	ldrd	r0, r1, [sp, #24]
   303b0:	cmp	r3, r1
   303b2:	it	eq
   303b4:	cmpeq	r2, r0
   303b6:	bcs.w	30216 <btrfs_abort_transaction@@Base+0x602>
   303ba:	ldr	r2, [sp, #16]
   303bc:	ldr	r3, [sp, #24]
   303be:	subs	r3, r3, r2
   303c0:	ldr	r2, [sp, #20]
   303c2:	str	r3, [sp, #32]
   303c4:	ldr	r3, [sp, #28]
   303c6:	sbc.w	r3, r3, r2
   303ca:	str	r3, [sp, #36]	; 0x24
   303cc:	ldrd	r2, r3, [sp, #32]
   303d0:	cmp	fp, r3
   303d2:	ldr	r3, [sp, #40]	; 0x28
   303d4:	it	eq
   303d6:	cmpeq	sl, r2
   303d8:	it	cc
   303da:	strdcc	sl, fp, [sp, #32]
   303de:	ldrd	r0, r1, [sp, #32]
   303e2:	ldr.w	r2, [r3, #388]	; 0x184
   303e6:	movs	r3, #0
   303e8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   303ec:	ldr	r3, [sp, #16]
   303ee:	vmov	r1, s16
   303f2:	mov	r2, r4
   303f4:	strb.w	r9, [sp, #84]	; 0x54
   303f8:	str	r3, [sp, #76]	; 0x4c
   303fa:	ldr	r3, [sp, #20]
   303fc:	str	r3, [sp, #80]	; 0x50
   303fe:	ldr	r3, [sp, #32]
   30400:	str.w	r3, [sp, #85]	; 0x55
   30404:	ldr	r3, [sp, #36]	; 0x24
   30406:	str.w	r3, [sp, #89]	; 0x59
   3040a:	movs	r3, #1
   3040c:	str	r3, [sp, #4]
   3040e:	add	r3, sp, #72	; 0x48
   30410:	str	r3, [sp, #0]
   30412:	add	r3, sp, #76	; 0x4c
   30414:	adds	r0, #7
   30416:	lsrs	r7, r0, #3
   30418:	mov	r0, r5
   3041a:	str	r7, [sp, #72]	; 0x48
   3041c:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   30420:	cbnz	r0, 30464 <btrfs_abort_transaction@@Base+0x850>
   30422:	ldr	r0, [r4, #0]
   30424:	movs	r2, #25
   30426:	ldr	r3, [r4, #32]
   30428:	mov	r1, r8
   3042a:	add	r8, r7
   3042c:	str	r0, [sp, #48]	; 0x30
   3042e:	mla	r3, r2, r3, r0
   30432:	ldr.w	r2, [r3, #214]	; 0xd6
   30436:	mov	r3, r7
   30438:	adds	r2, #101	; 0x65
   3043a:	bl	1bbd0 <write_extent_buffer@@Base>
   3043e:	ldr	r0, [sp, #48]	; 0x30
   30440:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   30444:	mov	r0, r4
   30446:	bl	1c6f8 <btrfs_release_path@@Base>
   3044a:	ldr	r3, [sp, #16]
   3044c:	ldr	r2, [sp, #32]
   3044e:	adds	r3, r3, r2
   30450:	ldr	r2, [sp, #36]	; 0x24
   30452:	str	r3, [sp, #16]
   30454:	ldr	r3, [sp, #20]
   30456:	adc.w	r3, r2, r3
   3045a:	str	r3, [sp, #20]
   3045c:	b.n	303a8 <btrfs_abort_transaction@@Base+0x794>
   3045e:	mvn.w	r6, #11
   30462:	b.n	30216 <btrfs_abort_transaction@@Base+0x602>
   30464:	mov	r6, r0
   30466:	b.n	30216 <btrfs_abort_transaction@@Base+0x602>
   30468:	ldr.w	r3, [fp, #116]	; 0x74
   3046c:	cmp	r7, r3
   3046e:	bcs.w	30818 <btrfs_abort_transaction@@Base+0xc04>
   30472:	ldr	r3, [r5, #0]
   30474:	str	r3, [sp, #16]
   30476:	ldr	r3, [r3, #48]	; 0x30
   30478:	ldr.w	r6, [fp, #49]	; 0x31
   3047c:	ldr.w	r7, [fp, #53]	; 0x35
   30480:	vmov	s16, r3
   30484:	ldr	r3, [sp, #16]
   30486:	mov	r0, r6
   30488:	mov	r1, r7
   3048a:	ldr.w	r2, [r3, #388]	; 0x184
   3048e:	movs	r3, #0
   30490:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   30494:	adds	r1, r0, #7
   30496:	mov	r0, r8
   30498:	lsrs	r1, r1, #3
   3049a:	subs	r1, #1
   3049c:	orr.w	r1, r1, #3
   304a0:	adds	r1, #1
   304a2:	blx	8ab8 <calloc@plt+0x4>
   304a6:	mov	r8, r0
   304a8:	cmp	r0, #0
   304aa:	beq.w	3080e <btrfs_abort_transaction@@Base+0xbfa>
   304ae:	ldrd	r2, r3, [fp, #40]	; 0x28
   304b2:	ldr.w	r9, [pc, #952]	; 3086c <btrfs_abort_transaction@@Base+0xc58>
   304b6:	strd	r2, r3, [sp, #24]
   304ba:	add	r9, pc
   304bc:	ldr	r3, [sp, #24]
   304be:	add.w	r9, r9, #73	; 0x49
   304c2:	adds	r3, r6, r3
   304c4:	str	r3, [sp, #40]	; 0x28
   304c6:	ldr	r3, [sp, #28]
   304c8:	adc.w	r3, r7, r3
   304cc:	str	r3, [sp, #44]	; 0x2c
   304ce:	ldr	r3, [sp, #40]	; 0x28
   304d0:	adds.w	r2, r3, #4294967295	; 0xffffffff
   304d4:	ldr	r3, [sp, #44]	; 0x2c
   304d6:	adc.w	r3, r3, #4294967295	; 0xffffffff
   304da:	strd	r2, r3, [sp, #76]	; 0x4c
   304de:	movs	r2, #255	; 0xff
   304e0:	strb.w	r2, [sp, #84]	; 0x54
   304e4:	strb.w	r2, [sp, #85]	; 0x55
   304e8:	strb.w	r2, [sp, #86]	; 0x56
   304ec:	strb.w	r2, [sp, #87]	; 0x57
   304f0:	strb.w	r2, [sp, #88]	; 0x58
   304f4:	strb.w	r2, [sp, #89]	; 0x59
   304f8:	strb.w	r2, [sp, #90]	; 0x5a
   304fc:	strb.w	r2, [sp, #91]	; 0x5b
   30500:	strb.w	r2, [sp, #92]	; 0x5c
   30504:	mov.w	r3, #4294967295	; 0xffffffff
   30508:	vmov	r1, s16
   3050c:	str	r3, [sp, #0]
   3050e:	add	r2, sp, #76	; 0x4c
   30510:	mov	r3, r4
   30512:	mov	r0, r5
   30514:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   30518:	mov	r6, r0
   3051a:	cmp	r0, #0
   3051c:	bne.n	305e2 <btrfs_abort_transaction@@Base+0x9ce>
   3051e:	ldr	r3, [r4, #32]
   30520:	ldr	r7, [r4, #0]
   30522:	adds	r3, #1
   30524:	str	r3, [r4, #32]
   30526:	ldr	r3, [pc, #840]	; (30870 <btrfs_abort_transaction@@Base+0xc5c>)
   30528:	str	r0, [sp, #48]	; 0x30
   3052a:	add	r3, pc
   3052c:	vmov	s17, r3
   30530:	ldr	r2, [r4, #32]
   30532:	cmp	r2, #0
   30534:	bgt.n	3053a <btrfs_abort_transaction@@Base+0x926>
   30536:	movs	r7, #0
   30538:	b.n	305a6 <btrfs_abort_transaction@@Base+0x992>
   3053a:	subs	r2, #1
   3053c:	add	r1, sp, #96	; 0x60
   3053e:	mov	r0, r7
   30540:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30544:	ldrb.w	r3, [sp, #104]	; 0x68
   30548:	cmp	r3, #198	; 0xc6
   3054a:	bne.n	305e6 <btrfs_abort_transaction@@Base+0x9d2>
   3054c:	ldrd	r2, r3, [fp, #40]	; 0x28
   30550:	ldrd	r6, r7, [sp, #96]	; 0x60
   30554:	ldr	r0, [pc, #796]	; (30874 <btrfs_abort_transaction@@Base+0xc60>)
   30556:	cmp	r7, r3
   30558:	mov.w	r7, #1
   3055c:	it	eq
   3055e:	cmpeq	r6, r2
   30560:	ldr	r6, [pc, #788]	; (30878 <btrfs_abort_transaction@@Base+0xc64>)
   30562:	add	r0, pc
   30564:	mov.w	r2, #360	; 0x168
   30568:	add	r6, pc
   3056a:	it	eq
   3056c:	moveq	r3, #1
   3056e:	add.w	r6, r6, #73	; 0x49
   30572:	it	ne
   30574:	movne	r3, #0
   30576:	mov	r1, r6
   30578:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   3057c:	ldr.w	r3, [fp, #53]	; 0x35
   30580:	ldr.w	r1, [sp, #109]	; 0x6d
   30584:	ldr.w	r0, [sp, #105]	; 0x69
   30588:	ldr.w	r2, [fp, #49]	; 0x31
   3058c:	cmp	r1, r3
   3058e:	mov	r1, r6
   30590:	it	eq
   30592:	cmpeq	r0, r2
   30594:	ldr	r0, [pc, #740]	; (3087c <btrfs_abort_transaction@@Base+0xc68>)
   30596:	movw	r2, #361	; 0x169
   3059a:	add	r0, pc
   3059c:	ite	eq
   3059e:	moveq	r3, #1
   305a0:	movne	r3, #0
   305a2:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   305a6:	ldr	r3, [sp, #48]	; 0x30
   305a8:	mov	r2, r4
   305aa:	vmov	r1, s16
   305ae:	mov	r0, r5
   305b0:	str	r3, [sp, #0]
   305b2:	ldr	r3, [r4, #32]
   305b4:	bl	1fc98 <btrfs_del_items@@Base>
   305b8:	mov	r6, r0
   305ba:	cbnz	r0, 305e2 <btrfs_abort_transaction@@Base+0x9ce>
   305bc:	mov	r0, r4
   305be:	bl	1c6f8 <btrfs_release_path@@Base>
   305c2:	cmp	r7, #0
   305c4:	beq.n	30504 <btrfs_abort_transaction@@Base+0x8f0>
   305c6:	ldr	r1, [sp, #16]
   305c8:	movs	r3, #1
   305ca:	mov	r2, fp
   305cc:	str	r3, [sp, #0]
   305ce:	mov	r0, r5
   305d0:	mov	r3, r4
   305d2:	ldr	r1, [r1, #48]	; 0x30
   305d4:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   305d8:	cmn.w	r0, #4096	; 0x1000
   305dc:	mov	r3, r0
   305de:	bls.n	306d8 <btrfs_abort_transaction@@Base+0xac4>
   305e0:	mov	r6, r0
   305e2:	mov	r0, r8
   305e4:	b.n	30218 <btrfs_abort_transaction@@Base+0x604>
   305e6:	cmp	r3, #200	; 0xc8
   305e8:	bne.n	306c8 <btrfs_abort_transaction@@Base+0xab4>
   305ea:	ldrd	r2, r3, [sp, #96]	; 0x60
   305ee:	ldrd	r0, r1, [sp, #24]
   305f2:	cmp	r3, r1
   305f4:	strd	r2, r3, [sp, #32]
   305f8:	it	eq
   305fa:	cmpeq	r2, r0
   305fc:	mov	r1, r9
   305fe:	vmov	r0, s17
   30602:	movw	r2, #369	; 0x171
   30606:	ite	cs
   30608:	movcs	r3, #1
   3060a:	movcc	r3, #0
   3060c:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30610:	ldrd	r2, r3, [sp, #32]
   30614:	ldrd	r0, r1, [sp, #40]	; 0x28
   30618:	cmp	r3, r1
   3061a:	mov	r1, r9
   3061c:	it	eq
   3061e:	cmpeq	r2, r0
   30620:	ldr	r0, [pc, #604]	; (30880 <btrfs_abort_transaction@@Base+0xc6c>)
   30622:	mov.w	r2, #370	; 0x172
   30626:	ite	cc
   30628:	movcc	r3, #1
   3062a:	movcs	r3, #0
   3062c:	add	r0, pc
   3062e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30632:	ldr.w	r6, [sp, #105]	; 0x69
   30636:	ldr	r3, [sp, #32]
   30638:	ldr.w	sl, [sp, #109]	; 0x6d
   3063c:	adds	r3, r3, r6
   3063e:	str	r3, [sp, #56]	; 0x38
   30640:	ldr	r3, [sp, #36]	; 0x24
   30642:	adc.w	r3, r3, sl
   30646:	str	r3, [sp, #60]	; 0x3c
   30648:	ldrd	r0, r1, [sp, #56]	; 0x38
   3064c:	ldrd	r2, r3, [sp, #40]	; 0x28
   30650:	cmp	r3, r1
   30652:	mov	r1, r9
   30654:	it	eq
   30656:	cmpeq	r2, r0
   30658:	ldr	r0, [pc, #552]	; (30884 <btrfs_abort_transaction@@Base+0xc70>)
   3065a:	movw	r2, #371	; 0x173
   3065e:	ite	cs
   30660:	movcs	r3, #1
   30662:	movcc	r3, #0
   30664:	add	r0, pc
   30666:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   3066a:	ldr	r3, [sp, #16]
   3066c:	mov	r0, r6
   3066e:	mov	r1, sl
   30670:	ldr.w	r2, [r3, #388]	; 0x184
   30674:	movs	r3, #0
   30676:	str	r2, [sp, #68]	; 0x44
   30678:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   3067c:	ldr	r3, [r4, #32]
   3067e:	movs	r1, #25
   30680:	ldr	r2, [sp, #68]	; 0x44
   30682:	subs	r3, #1
   30684:	mla	r3, r1, r3, r7
   30688:	ldr	r1, [sp, #32]
   3068a:	lsls	r2, r2, #3
   3068c:	ldr.w	sl, [r3, #214]	; 0xd6
   30690:	movs	r3, #0
   30692:	add.w	sl, sl, #101	; 0x65
   30696:	adds	r0, #7
   30698:	lsrs	r6, r0, #3
   3069a:	ldr	r0, [sp, #24]
   3069c:	subs	r0, r1, r0
   3069e:	ldr	r1, [sp, #36]	; 0x24
   306a0:	mov	ip, r1
   306a2:	ldr	r1, [sp, #28]
   306a4:	sbc.w	r1, ip, r1
   306a8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   306ac:	mov	r3, r6
   306ae:	mov	r2, sl
   306b0:	add.w	r1, r8, r0
   306b4:	mov	r0, r7
   306b6:	bl	1bbba <read_extent_buffer@@Base>
   306ba:	ldr	r3, [sp, #48]	; 0x30
   306bc:	adds	r3, #1
   306be:	str	r3, [sp, #48]	; 0x30
   306c0:	ldr	r3, [r4, #32]
   306c2:	subs	r3, #1
   306c4:	str	r3, [r4, #32]
   306c6:	b.n	30530 <btrfs_abort_transaction@@Base+0x91c>
   306c8:	ldr	r1, [pc, #444]	; (30888 <btrfs_abort_transaction@@Base+0xc74>)
   306ca:	movw	r2, #387	; 0x183
   306ce:	ldr	r0, [pc, #444]	; (3088c <btrfs_abort_transaction@@Base+0xc78>)
   306d0:	add	r1, pc
   306d2:	adds	r1, #73	; 0x49
   306d4:	add	r0, pc
   306d6:	b.n	30336 <btrfs_abort_transaction@@Base+0x722>
   306d8:	ldr	r0, [r4, #0]
   306da:	add.w	r2, r0, #96	; 0x60
   306de:	add	r3, r2
   306e0:	ldr	r2, [r3, #4]
   306e2:	bic.w	r2, r2, #1
   306e6:	str	r2, [r3, #4]
   306e8:	ldr	r3, [r3, #0]
   306ea:	str	r3, [sp, #40]	; 0x28
   306ec:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   306f0:	mov	r0, r4
   306f2:	bl	1c6f8 <btrfs_release_path@@Base>
   306f6:	ldr	r3, [sp, #16]
   306f8:	ldr.w	r0, [fp, #49]	; 0x31
   306fc:	ldr.w	r1, [fp, #53]	; 0x35
   30700:	ldr.w	r2, [r3, #388]	; 0x184
   30704:	mov	r3, r6
   30706:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   3070a:	mov	r9, r0
   3070c:	cmp	r0, #0
   3070e:	beq.n	3080a <btrfs_abort_transaction@@Base+0xbf6>
   30710:	mov	r3, r6
   30712:	mov	r1, r0
   30714:	mov	r2, r6
   30716:	mov	r0, r8
   30718:	bl	2fd34 <btrfs_abort_transaction@@Base+0x120>
   3071c:	ldr	r3, [pc, #368]	; (30890 <btrfs_abort_transaction@@Base+0xc7c>)
   3071e:	str	r6, [sp, #32]
   30720:	add	r3, pc
   30722:	adds	r3, #73	; 0x49
   30724:	vmov	s17, r3
   30728:	ldr	r3, [pc, #360]	; (30894 <btrfs_abort_transaction@@Base+0xc80>)
   3072a:	add	r3, pc
   3072c:	vmov	s18, r3
   30730:	mov	r7, r0
   30732:	cmp	r9, r7
   30734:	bhi.n	30772 <btrfs_abort_transaction@@Base+0xb5e>
   30736:	ldr	r3, [sp, #32]
   30738:	ldr	r2, [sp, #40]	; 0x28
   3073a:	cmp	r3, r2
   3073c:	beq.w	305e2 <btrfs_abort_transaction@@Base+0x9ce>
   30740:	ldr	r2, [sp, #64]	; 0x40
   30742:	ldr	r3, [pc, #280]	; (3085c <btrfs_abort_transaction@@Base+0xc48>)
   30744:	ldr	r3, [r2, r3]
   30746:	ldr	r2, [sp, #40]	; 0x28
   30748:	str	r2, [sp, #12]
   3074a:	ldr	r2, [sp, #32]
   3074c:	str	r2, [sp, #8]
   3074e:	ldrd	r0, r1, [fp, #40]	; 0x28
   30752:	ldr	r2, [pc, #324]	; (30898 <btrfs_abort_transaction@@Base+0xc84>)
   30754:	strd	r0, r1, [sp]
   30758:	add	r2, pc
   3075a:	movs	r1, #1
   3075c:	ldr	r0, [r3, #0]
   3075e:	blx	9040 <__fprintf_chk@plt+0x4>
   30762:	ldr	r1, [pc, #312]	; (3089c <btrfs_abort_transaction@@Base+0xc88>)
   30764:	ldr	r0, [pc, #312]	; (308a0 <btrfs_abort_transaction@@Base+0xc8c>)
   30766:	mov.w	r2, #436	; 0x1b4
   3076a:	add	r1, pc
   3076c:	adds	r1, #73	; 0x49
   3076e:	add	r0, pc
   30770:	b.n	30336 <btrfs_abort_transaction@@Base+0x722>
   30772:	mov.w	r3, #4294967295	; 0xffffffff
   30776:	mov	r2, r7
   30778:	mov	r1, r9
   3077a:	mov	r0, r8
   3077c:	bl	2fd34 <btrfs_abort_transaction@@Base+0x120>
   30780:	vmov	r1, s17
   30784:	movw	r2, #415	; 0x19f
   30788:	cmp	r7, r0
   3078a:	mov	sl, r0
   3078c:	vmov	r0, s18
   30790:	ite	cs
   30792:	movcs	r3, #0
   30794:	movcc	r3, #1
   30796:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   3079a:	ldr	r3, [sp, #16]
   3079c:	ldrd	r0, r1, [sp, #24]
   307a0:	ldr.w	r3, [r3, #388]	; 0x184
   307a4:	mul.w	r2, r3, r7
   307a8:	sub.w	r7, sl, r7
   307ac:	muls	r3, r7
   307ae:	adds	r0, r0, r2
   307b0:	adc.w	r1, r1, #0
   307b4:	movs	r2, #199	; 0xc7
   307b6:	strd	r0, r1, [sp, #76]	; 0x4c
   307ba:	mov	r0, r5
   307bc:	strb.w	r2, [sp, #84]	; 0x54
   307c0:	movs	r2, #0
   307c2:	vmov	r1, s16
   307c6:	str.w	r3, [sp, #85]	; 0x55
   307ca:	movs	r3, #1
   307cc:	str.w	r2, [sp, #89]	; 0x59
   307d0:	str	r2, [sp, #72]	; 0x48
   307d2:	mov	r2, r4
   307d4:	str	r3, [sp, #4]
   307d6:	add	r3, sp, #72	; 0x48
   307d8:	str	r3, [sp, #0]
   307da:	add	r3, sp, #76	; 0x4c
   307dc:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   307e0:	mov	r7, r0
   307e2:	cbnz	r0, 30814 <btrfs_abort_transaction@@Base+0xc00>
   307e4:	mov	r0, r4
   307e6:	bl	1c6f8 <btrfs_release_path@@Base>
   307ea:	ldr	r3, [sp, #32]
   307ec:	cmp	r9, sl
   307ee:	add.w	r3, r3, #1
   307f2:	str	r3, [sp, #32]
   307f4:	bls.n	30806 <btrfs_abort_transaction@@Base+0xbf2>
   307f6:	mov	r3, r7
   307f8:	mov	r2, sl
   307fa:	mov	r1, r9
   307fc:	mov	r0, r8
   307fe:	bl	2fd34 <btrfs_abort_transaction@@Base+0x120>
   30802:	mov	r7, r0
   30804:	b.n	30732 <btrfs_abort_transaction@@Base+0xb1e>
   30806:	mov	r7, r9
   30808:	b.n	30732 <btrfs_abort_transaction@@Base+0xb1e>
   3080a:	str	r6, [sp, #32]
   3080c:	b.n	30736 <btrfs_abort_transaction@@Base+0xb22>
   3080e:	mvn.w	r6, #11
   30812:	b.n	305e2 <btrfs_abort_transaction@@Base+0x9ce>
   30814:	mov	r6, r0
   30816:	b.n	305e2 <btrfs_abort_transaction@@Base+0x9ce>
   30818:	movs	r6, #0
   3081a:	b.n	30042 <btrfs_abort_transaction@@Base+0x42e>
   3081c:	mov	r0, r6
   3081e:	add	sp, #124	; 0x7c
   30820:	vpop	{d8-d9}
   30824:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30828:	add	r5, sp, #24
   3082a:	movs	r3, r0
   3082c:	add	r5, sp, #0
   3082e:	movs	r3, r0
   30830:	lsls	r0, r1, #10
   30832:	movs	r0, r0
   30834:	add	r4, sp, #824	; 0x338
   30836:	movs	r3, r0
   30838:	str	r1, [r3, #40]	; 0x28
   3083a:	movs	r1, r0
   3083c:	ldrsh	r1, [r1, r0]
   3083e:	movs	r1, r0
   30840:	str	r3, [r4, #28]
   30842:	movs	r1, r0
   30844:	ldrb	r1, [r3, r5]
   30846:	movs	r1, r0
   30848:	ldrb	r7, [r3, r5]
   3084a:	movs	r1, r0
   3084c:	ldrb	r3, [r1, r4]
   3084e:	movs	r1, r0
   30850:	ldrb	r4, [r4, r3]
   30852:	movs	r1, r0
   30854:	str	r3, [r7, #0]
   30856:	movs	r1, r0
   30858:	adds	r2, r0, #0
   3085a:	movs	r1, r0
   3085c:	lsls	r4, r3, #10
   3085e:	movs	r0, r0
   30860:	ldrb	r7, [r7, r0]
   30862:	movs	r1, r0
   30864:	ldrsh	r1, [r4, r7]
   30866:	movs	r1, r0
   30868:	subs	r0, r5, r6
   3086a:	movs	r1, r0
   3086c:	ldrsh	r1, [r6, r2]
   3086e:	movs	r1, r0
   30870:	ldrh	r7, [r4, r0]
   30872:	movs	r1, r0
   30874:	ldr	r3, [r2, r6]
   30876:	movs	r1, r0
   30878:	ldrsh	r3, [r0, r0]
   3087a:	movs	r1, r0
   3087c:	ldr	r3, [r1, r6]
   3087e:	movs	r1, r0
   30880:	ldr	r1, [r0, r5]
   30882:	movs	r1, r0
   30884:	ldr	r2, [r4, r4]
   30886:	movs	r1, r0
   30888:	ldrb	r3, [r3, r2]
   3088a:	movs	r1, r0
   3088c:	adds	r2, r4, r1
   3088e:	movs	r1, r0
   30890:	ldrb	r3, [r1, r1]
   30892:	movs	r1, r0
   30894:	ldr	r2, [r0, r3]
   30896:	movs	r1, r0
   30898:	ldr	r3, [r3, r1]
   3089a:	movs	r1, r0
   3089c:	ldrb	r1, [r0, r0]
   3089e:	movs	r1, r0
   308a0:	asrs	r0, r1, #31
   308a2:	movs	r1, r0
   308a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   308a8:	sub	sp, #156	; 0x9c
   308aa:	mov	r4, r2
   308ac:	ldr	r2, [pc, #900]	; (30c34 <btrfs_abort_transaction@@Base+0x1020>)
   308ae:	ldr	r3, [sp, #200]	; 0xc8
   308b0:	mov	r5, r1
   308b2:	add	r2, pc
   308b4:	ldrd	r9, sl, [sp, #192]	; 0xc0
   308b8:	ldr	r1, [r0, #0]
   308ba:	mov	r6, r0
   308bc:	str	r3, [sp, #92]	; 0x5c
   308be:	ldr	r3, [sp, #204]	; 0xcc
   308c0:	ldr.w	r8, [r1, #48]	; 0x30
   308c4:	str	r3, [sp, #96]	; 0x60
   308c6:	ldr	r3, [pc, #880]	; (30c38 <btrfs_abort_transaction@@Base+0x1024>)
   308c8:	ldr	r3, [r2, r3]
   308ca:	ldr	r3, [r3, #0]
   308cc:	str	r3, [sp, #148]	; 0x94
   308ce:	mov.w	r3, #0
   308d2:	ldrd	r2, r3, [r5, #40]	; 0x28
   308d6:	cmp	r3, sl
   308d8:	it	eq
   308da:	cmpeq	r2, r9
   308dc:	bcs.n	3098c <btrfs_abort_transaction@@Base+0xd78>
   308de:	ldr.w	r3, [r1, #388]	; 0x184
   308e2:	add	r7, sp, #108	; 0x6c
   308e4:	movs	r2, #255	; 0xff
   308e6:	mov	fp, sl
   308e8:	strb.w	r2, [sp, #116]	; 0x74
   308ec:	subs.w	sl, r9, r3
   308f0:	strb.w	r2, [sp, #117]	; 0x75
   308f4:	mov.w	r3, #0
   308f8:	strb.w	r2, [sp, #118]	; 0x76
   308fc:	mov	r1, r8
   308fe:	strb.w	r2, [sp, #119]	; 0x77
   30902:	sbc.w	fp, fp, #0
   30906:	strb.w	r2, [sp, #120]	; 0x78
   3090a:	strb.w	r2, [sp, #121]	; 0x79
   3090e:	strb.w	r2, [sp, #122]	; 0x7a
   30912:	strb.w	r2, [sp, #123]	; 0x7b
   30916:	strb.w	r2, [sp, #124]	; 0x7c
   3091a:	mov	r2, r7
   3091c:	str	r3, [sp, #0]
   3091e:	mov	r3, r4
   30920:	strd	sl, fp, [sp, #108]	; 0x6c
   30924:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   30928:	mov	r3, r0
   3092a:	cbnz	r0, 30976 <btrfs_abort_transaction@@Base+0xd62>
   3092c:	mov	r3, fp
   3092e:	mov	r2, sl
   30930:	mov	r0, r4
   30932:	bl	2fe0e <btrfs_abort_transaction@@Base+0x1fa>
   30936:	ldr	r2, [r4, #32]
   30938:	mov	r1, r7
   3093a:	str	r0, [sp, #68]	; 0x44
   3093c:	ldr	r0, [r4, #0]
   3093e:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30942:	ldrd	r3, r0, [sp, #108]	; 0x6c
   30946:	ldr.w	r2, [sp, #117]	; 0x75
   3094a:	ldr.w	r1, [sp, #121]	; 0x79
   3094e:	adds	r3, r3, r2
   30950:	str	r3, [sp, #8]
   30952:	adc.w	r3, r0, r1
   30956:	str	r3, [sp, #12]
   30958:	ldrd	r0, r1, [sp, #8]
   3095c:	ldrd	r2, r3, [sp, #192]	; 0xc0
   30960:	cmp	r3, r1
   30962:	it	eq
   30964:	cmpeq	r2, r0
   30966:	bcc.n	309d4 <btrfs_abort_transaction@@Base+0xdc0>
   30968:	mov	r2, r4
   3096a:	mov	r1, r8
   3096c:	mov	r0, r6
   3096e:	bl	2ff48 <btrfs_abort_transaction@@Base+0x334>
   30972:	mov	r3, r0
   30974:	cbz	r0, 309d4 <btrfs_abort_transaction@@Base+0xdc0>
   30976:	ldr	r1, [pc, #708]	; (30c3c <btrfs_abort_transaction@@Base+0x1028>)
   30978:	ldr	r2, [pc, #700]	; (30c38 <btrfs_abort_transaction@@Base+0x1024>)
   3097a:	add	r1, pc
   3097c:	ldr	r2, [r1, r2]
   3097e:	ldr	r1, [r2, #0]
   30980:	ldr	r2, [sp, #148]	; 0x94
   30982:	eors	r1, r2
   30984:	beq.w	30c2a <btrfs_abort_transaction@@Base+0x1016>
   30988:	blx	8c90 <__stack_chk_fail@plt>
   3098c:	ldr	r3, [sp, #192]	; 0xc0
   3098e:	movs	r2, #255	; 0xff
   30990:	mov	r1, r8
   30992:	strb.w	r2, [sp, #116]	; 0x74
   30996:	strb.w	r2, [sp, #117]	; 0x75
   3099a:	str	r3, [sp, #108]	; 0x6c
   3099c:	ldr	r3, [sp, #196]	; 0xc4
   3099e:	strb.w	r2, [sp, #118]	; 0x76
   309a2:	strb.w	r2, [sp, #119]	; 0x77
   309a6:	str	r3, [sp, #112]	; 0x70
   309a8:	movs	r3, #0
   309aa:	strb.w	r2, [sp, #120]	; 0x78
   309ae:	strb.w	r2, [sp, #121]	; 0x79
   309b2:	strb.w	r2, [sp, #122]	; 0x7a
   309b6:	strb.w	r2, [sp, #123]	; 0x7b
   309ba:	strb.w	r2, [sp, #124]	; 0x7c
   309be:	add	r2, sp, #108	; 0x6c
   309c0:	str	r3, [sp, #0]
   309c2:	mov	r3, r4
   309c4:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   309c8:	mov	r3, r0
   309ca:	cmp	r0, #0
   309cc:	bne.n	30976 <btrfs_abort_transaction@@Base+0xd62>
   309ce:	mov.w	r3, #4294967295	; 0xffffffff
   309d2:	str	r3, [sp, #68]	; 0x44
   309d4:	ldr	r3, [sp, #92]	; 0x5c
   309d6:	str	r3, [sp, #8]
   309d8:	ldr	r3, [sp, #96]	; 0x60
   309da:	str	r3, [sp, #12]
   309dc:	ldrd	r2, r3, [sp, #192]	; 0xc0
   309e0:	strd	r2, r3, [sp, #16]
   309e4:	ldr	r3, [pc, #600]	; (30c40 <btrfs_abort_transaction@@Base+0x102c>)
   309e6:	add	r3, pc
   309e8:	adds	r3, #103	; 0x67
   309ea:	str	r3, [sp, #88]	; 0x58
   309ec:	mov	fp, r3
   309ee:	ldr	r2, [sp, #8]
   309f0:	add	r1, sp, #128	; 0x80
   309f2:	ldr	r3, [sp, #16]
   309f4:	ldr	r7, [r4, #0]
   309f6:	adds	r3, r3, r2
   309f8:	ldr	r2, [sp, #12]
   309fa:	str	r3, [sp, #56]	; 0x38
   309fc:	ldr	r3, [sp, #20]
   309fe:	mov	r0, r7
   30a00:	ldr.w	r9, [r7, #92]	; 0x5c
   30a04:	adcs	r3, r2
   30a06:	ldr	r2, [r4, #32]
   30a08:	str	r3, [sp, #60]	; 0x3c
   30a0a:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30a0e:	ldrb.w	r3, [sp, #136]	; 0x88
   30a12:	ldr	r0, [pc, #560]	; (30c44 <btrfs_abort_transaction@@Base+0x1030>)
   30a14:	sub.w	r2, r3, #200	; 0xc8
   30a18:	ldr	r1, [sp, #88]	; 0x58
   30a1a:	negs	r3, r2
   30a1c:	add	r0, pc
   30a1e:	adcs	r3, r2
   30a20:	mov.w	r2, #502	; 0x1f6
   30a24:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30a28:	ldrd	r2, r3, [sp, #128]	; 0x80
   30a2c:	strd	r2, r3, [sp, #24]
   30a30:	ldr	r1, [sp, #24]
   30a32:	ldr.w	r3, [sp, #137]	; 0x89
   30a36:	ldr.w	r2, [sp, #141]	; 0x8d
   30a3a:	adds	r3, r3, r1
   30a3c:	str	r3, [sp, #48]	; 0x30
   30a3e:	ldr	r3, [sp, #28]
   30a40:	ldrd	r0, r1, [sp, #24]
   30a44:	adc.w	r3, r2, r3
   30a48:	str	r3, [sp, #52]	; 0x34
   30a4a:	ldrd	r2, r3, [sp, #16]
   30a4e:	cmp	r3, r1
   30a50:	it	eq
   30a52:	cmpeq	r2, r0
   30a54:	bcc.n	30b52 <btrfs_abort_transaction@@Base+0xf3e>
   30a56:	ldrd	r0, r1, [sp, #48]	; 0x30
   30a5a:	cmp	r3, r1
   30a5c:	it	eq
   30a5e:	cmpeq	r2, r0
   30a60:	ite	cc
   30a62:	movcc	r3, #1
   30a64:	movcs	r3, #0
   30a66:	ldr	r0, [pc, #480]	; (30c48 <btrfs_abort_transaction@@Base+0x1034>)
   30a68:	mov.w	r2, #506	; 0x1fa
   30a6c:	mov	r1, fp
   30a6e:	add	r0, pc
   30a70:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30a74:	ldrd	r2, r3, [sp, #24]
   30a78:	ldrd	r0, r1, [sp, #56]	; 0x38
   30a7c:	cmp	r3, r1
   30a7e:	mov	r1, fp
   30a80:	it	eq
   30a82:	cmpeq	r2, r0
   30a84:	ldr	r0, [pc, #452]	; (30c4c <btrfs_abort_transaction@@Base+0x1038>)
   30a86:	movw	r2, #507	; 0x1fb
   30a8a:	ite	cc
   30a8c:	movcc	r3, #1
   30a8e:	movcs	r3, #0
   30a90:	add	r0, pc
   30a92:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30a96:	ldrd	r2, r3, [sp, #56]	; 0x38
   30a9a:	strd	r2, r3, [sp, #32]
   30a9e:	ldrd	r0, r1, [sp, #32]
   30aa2:	ldrd	r2, r3, [sp, #48]	; 0x30
   30aa6:	cmp	r3, r1
   30aa8:	ldr	r1, [sp, #16]
   30aaa:	it	eq
   30aac:	cmpeq	r2, r0
   30aae:	it	cc
   30ab0:	strdcc	r2, r3, [sp, #32]
   30ab4:	ldr	r3, [r4, #32]
   30ab6:	movs	r2, #25
   30ab8:	ldr	r0, [sp, #24]
   30aba:	mla	r3, r2, r3, r7
   30abe:	subs	r0, r1, r0
   30ac0:	ldr	r1, [sp, #20]
   30ac2:	ldr.w	r2, [r9, #388]	; 0x184
   30ac6:	mov	ip, r1
   30ac8:	ldr	r1, [sp, #28]
   30aca:	ldr.w	sl, [r3, #214]	; 0xd6
   30ace:	mov.w	r3, #0
   30ad2:	sbc.w	r1, ip, r1
   30ad6:	str	r2, [sp, #100]	; 0x64
   30ad8:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   30adc:	ldr	r1, [sp, #32]
   30ade:	ldr	r2, [sp, #100]	; 0x64
   30ae0:	movs	r3, #0
   30ae2:	add.w	sl, sl, #101	; 0x65
   30ae6:	mov	r9, r0
   30ae8:	ldr	r0, [sp, #24]
   30aea:	subs	r0, r1, r0
   30aec:	ldr	r1, [sp, #36]	; 0x24
   30aee:	mov	ip, r1
   30af0:	ldr	r1, [sp, #28]
   30af2:	sbc.w	r1, ip, r1
   30af6:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   30afa:	ldr	r2, [sp, #208]	; 0xd0
   30afc:	sub.w	r3, r0, r9
   30b00:	cbnz	r2, 30b56 <btrfs_abort_transaction@@Base+0xf42>
   30b02:	mov	r2, r9
   30b04:	mov	r1, sl
   30b06:	mov	r0, r7
   30b08:	bl	1af52 <extent_buffer_bitmap_set@@Base>
   30b0c:	mov	r0, r7
   30b0e:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   30b12:	ldr	r2, [sp, #32]
   30b14:	ldr	r3, [sp, #16]
   30b16:	ldr	r1, [sp, #36]	; 0x24
   30b18:	subs	r3, r3, r2
   30b1a:	ldr	r2, [sp, #20]
   30b1c:	sbc.w	r2, r2, r1
   30b20:	ldr	r1, [sp, #8]
   30b22:	adds	r3, r1, r3
   30b24:	str	r3, [sp, #8]
   30b26:	ldr	r3, [sp, #12]
   30b28:	adc.w	r3, r2, r3
   30b2c:	str	r3, [sp, #12]
   30b2e:	ldrd	r2, r3, [sp, #8]
   30b32:	orrs	r3, r2
   30b34:	beq.n	30b62 <btrfs_abort_transaction@@Base+0xf4e>
   30b36:	mov	r2, r4
   30b38:	mov	r1, r8
   30b3a:	mov	r0, r6
   30b3c:	bl	2ff48 <btrfs_abort_transaction@@Base+0x334>
   30b40:	mov	r3, r0
   30b42:	cmp	r0, #0
   30b44:	bne.w	30976 <btrfs_abort_transaction@@Base+0xd62>
   30b48:	ldrd	r2, r3, [sp, #32]
   30b4c:	strd	r2, r3, [sp, #16]
   30b50:	b.n	309ee <btrfs_abort_transaction@@Base+0xdda>
   30b52:	movs	r3, #0
   30b54:	b.n	30a66 <btrfs_abort_transaction@@Base+0xe52>
   30b56:	mov	r2, r9
   30b58:	mov	r1, sl
   30b5a:	mov	r0, r7
   30b5c:	bl	1af9a <extent_buffer_bitmap_clear@@Base>
   30b60:	b.n	30b0c <btrfs_abort_transaction@@Base+0xef8>
   30b62:	ldr	r2, [sp, #92]	; 0x5c
   30b64:	ldr	r3, [sp, #192]	; 0xc0
   30b66:	ldrd	r1, r0, [r5, #40]	; 0x28
   30b6a:	adds	r3, r3, r2
   30b6c:	ldr	r2, [sp, #196]	; 0xc4
   30b6e:	str	r3, [sp, #40]	; 0x28
   30b70:	ldr	r3, [sp, #96]	; 0x60
   30b72:	adc.w	r3, r2, r3
   30b76:	str	r3, [sp, #44]	; 0x2c
   30b78:	ldr.w	r3, [r5, #49]	; 0x31
   30b7c:	ldr.w	r2, [r5, #53]	; 0x35
   30b80:	adds	r3, r3, r1
   30b82:	str	r3, [sp, #72]	; 0x48
   30b84:	adc.w	r3, r2, r0
   30b88:	str	r3, [sp, #76]	; 0x4c
   30b8a:	ldrd	r0, r1, [sp, #72]	; 0x48
   30b8e:	ldrd	r2, r3, [sp, #40]	; 0x28
   30b92:	cmp	r3, r1
   30b94:	it	eq
   30b96:	cmpeq	r2, r0
   30b98:	bcs.n	30c1a <btrfs_abort_transaction@@Base+0x1006>
   30b9a:	ldr	r2, [r4, #32]
   30b9c:	add	r1, sp, #108	; 0x6c
   30b9e:	ldr	r0, [r4, #0]
   30ba0:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30ba4:	ldrd	r3, r0, [sp, #108]	; 0x6c
   30ba8:	ldr.w	r2, [sp, #117]	; 0x75
   30bac:	ldr.w	r1, [sp, #121]	; 0x79
   30bb0:	adds	r3, r3, r2
   30bb2:	str	r3, [sp, #80]	; 0x50
   30bb4:	adc.w	r3, r0, r1
   30bb8:	str	r3, [sp, #84]	; 0x54
   30bba:	ldrd	r0, r1, [sp, #80]	; 0x50
   30bbe:	ldrd	r2, r3, [sp, #40]	; 0x28
   30bc2:	cmp	r3, r1
   30bc4:	it	eq
   30bc6:	cmpeq	r2, r0
   30bc8:	bcs.n	30c08 <btrfs_abort_transaction@@Base+0xff4>
   30bca:	ldrd	r2, r3, [sp, #40]	; 0x28
   30bce:	mov	r0, r4
   30bd0:	bl	2fe0e <btrfs_abort_transaction@@Base+0x1fa>
   30bd4:	ldr	r3, [sp, #68]	; 0x44
   30bd6:	ldr	r2, [sp, #208]	; 0xd0
   30bd8:	subs	r3, #1
   30bda:	it	ne
   30bdc:	movne	r3, #1
   30bde:	cbz	r2, 30c20 <btrfs_abort_transaction@@Base+0x100c>
   30be0:	cmp	r0, #1
   30be2:	ite	ne
   30be4:	negne	r3, r3
   30be6:	rsbeq	r3, r3, #1
   30bea:	mov	r0, r4
   30bec:	str	r3, [sp, #8]
   30bee:	bl	1c6f8 <btrfs_release_path@@Base>
   30bf2:	ldr	r3, [sp, #8]
   30bf4:	cmp	r3, #0
   30bf6:	beq.w	30976 <btrfs_abort_transaction@@Base+0xd62>
   30bfa:	mov	r2, r4
   30bfc:	mov	r1, r5
   30bfe:	mov	r0, r6
   30c00:	bl	2fff8 <btrfs_abort_transaction@@Base+0x3e4>
   30c04:	mov	r3, r0
   30c06:	b.n	30976 <btrfs_abort_transaction@@Base+0xd62>
   30c08:	mov	r2, r4
   30c0a:	mov	r1, r8
   30c0c:	mov	r0, r6
   30c0e:	bl	2ff48 <btrfs_abort_transaction@@Base+0x334>
   30c12:	mov	r3, r0
   30c14:	cmp	r0, #0
   30c16:	beq.n	30bca <btrfs_abort_transaction@@Base+0xfb6>
   30c18:	b.n	30976 <btrfs_abort_transaction@@Base+0xd62>
   30c1a:	mov.w	r0, #4294967295	; 0xffffffff
   30c1e:	b.n	30bd4 <btrfs_abort_transaction@@Base+0xfc0>
   30c20:	cmp	r0, #1
   30c22:	it	eq
   30c24:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   30c28:	b.n	30bea <btrfs_abort_transaction@@Base+0xfd6>
   30c2a:	mov	r0, r3
   30c2c:	add	sp, #156	; 0x9c
   30c2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30c32:	nop
   30c34:	add	r4, pc, #408	; (adr r4, 30dd0 <btrfs_abort_transaction@@Base+0x11bc>)
   30c36:	movs	r3, r0
   30c38:	lsls	r0, r1, #10
   30c3a:	movs	r0, r0
   30c3c:	add	r3, pc, #632	; (adr r3, 30eb8 <btrfs_abort_transaction@@Base+0x12a4>)
   30c3e:	movs	r3, r0
   30c40:	ldr	r5, [r0, r6]
   30c42:	movs	r1, r0
   30c44:	strb	r5, [r0, r2]
   30c46:	movs	r1, r0
   30c48:	strb	r2, [r2, r6]
   30c4a:	movs	r1, r0
   30c4c:	strb	r4, [r3, r6]
   30c4e:	movs	r1, r0
   30c50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30c54:	sub	sp, #116	; 0x74
   30c56:	mov	r5, r2
   30c58:	ldr	r2, [pc, #1000]	; (31044 <btrfs_abort_transaction@@Base+0x1430>)
   30c5a:	ldr	r3, [sp, #160]	; 0xa0
   30c5c:	mov	r6, r1
   30c5e:	add	r2, pc
   30c60:	ldr	r1, [r0, #0]
   30c62:	mov.w	r8, #0
   30c66:	mov	r7, r0
   30c68:	str	r3, [sp, #48]	; 0x30
   30c6a:	mov	r0, r8
   30c6c:	ldr	r3, [sp, #164]	; 0xa4
   30c6e:	str	r3, [sp, #52]	; 0x34
   30c70:	ldr	r3, [pc, #980]	; (31048 <btrfs_abort_transaction@@Base+0x1434>)
   30c72:	ldr	r3, [r2, r3]
   30c74:	mov	r2, r6
   30c76:	ldr	r3, [r3, #0]
   30c78:	str	r3, [sp, #108]	; 0x6c
   30c7a:	mov.w	r3, #0
   30c7e:	str.w	r8, [sp]
   30c82:	mov	r3, r5
   30c84:	ldr	r1, [r1, #48]	; 0x30
   30c86:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   30c8a:	cmn.w	r0, #4096	; 0x1000
   30c8e:	bls.n	30ca8 <btrfs_abort_transaction@@Base+0x1094>
   30c90:	mov	r4, r0
   30c92:	ldr	r2, [pc, #952]	; (3104c <btrfs_abort_transaction@@Base+0x1438>)
   30c94:	ldr	r3, [pc, #944]	; (31048 <btrfs_abort_transaction@@Base+0x1434>)
   30c96:	add	r2, pc
   30c98:	ldr	r3, [r2, r3]
   30c9a:	ldr	r2, [r3, #0]
   30c9c:	ldr	r3, [sp, #108]	; 0x6c
   30c9e:	eors	r2, r3
   30ca0:	beq.w	3103a <btrfs_abort_transaction@@Base+0x1426>
   30ca4:	blx	8c90 <__stack_chk_fail@plt>
   30ca8:	ldr	r4, [r5, #0]
   30caa:	add	r4, r0
   30cac:	mov	r0, r5
   30cae:	ldr	r4, [r4, #100]	; 0x64
   30cb0:	bl	1c6f8 <btrfs_release_path@@Base>
   30cb4:	lsls	r4, r4, #31
   30cb6:	bpl.n	30cd8 <btrfs_abort_transaction@@Base+0x10c4>
   30cb8:	ldr	r3, [sp, #48]	; 0x30
   30cba:	mov	r2, r5
   30cbc:	mov	r1, r6
   30cbe:	mov	r0, r7
   30cc0:	str.w	r8, [sp, #16]
   30cc4:	str	r3, [sp, #8]
   30cc6:	ldr	r3, [sp, #52]	; 0x34
   30cc8:	str	r3, [sp, #12]
   30cca:	ldrd	r3, r4, [sp, #152]	; 0x98
   30cce:	strd	r3, r4, [sp]
   30cd2:	bl	308a4 <btrfs_abort_transaction@@Base+0xc90>
   30cd6:	b.n	30c90 <btrfs_abort_transaction@@Base+0x107c>
   30cd8:	ldr	r3, [r7, #0]
   30cda:	ldrd	r0, r1, [sp, #152]	; 0x98
   30cde:	ldr.w	sl, [r3, #48]	; 0x30
   30ce2:	ldrd	r3, r4, [sp, #152]	; 0x98
   30ce6:	strd	r3, r4, [sp, #88]	; 0x58
   30cea:	movs	r3, #199	; 0xc7
   30cec:	strb.w	r3, [sp, #96]	; 0x60
   30cf0:	ldr	r3, [sp, #48]	; 0x30
   30cf2:	str.w	r3, [sp, #97]	; 0x61
   30cf6:	ldr	r3, [sp, #52]	; 0x34
   30cf8:	str.w	r3, [sp, #101]	; 0x65
   30cfc:	ldrd	r2, r3, [r6, #40]	; 0x28
   30d00:	cmp	r1, r3
   30d02:	it	eq
   30d04:	cmpeq	r0, r2
   30d06:	beq.n	30d8c <btrfs_abort_transaction@@Base+0x1178>
   30d08:	ldr	r3, [sp, #152]	; 0x98
   30d0a:	add.w	r8, sp, #68	; 0x44
   30d0e:	mov.w	r1, #4294967295	; 0xffffffff
   30d12:	mov	r0, r7
   30d14:	adds.w	r2, r3, #4294967295	; 0xffffffff
   30d18:	ldr	r3, [sp, #156]	; 0x9c
   30d1a:	strb.w	r1, [sp, #77]	; 0x4d
   30d1e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   30d22:	str	r1, [sp, #0]
   30d24:	strd	r2, r3, [sp, #68]	; 0x44
   30d28:	mov	r1, sl
   30d2a:	movs	r2, #255	; 0xff
   30d2c:	mov	r3, r5
   30d2e:	strb.w	r2, [sp, #76]	; 0x4c
   30d32:	strb.w	r2, [sp, #78]	; 0x4e
   30d36:	strb.w	r2, [sp, #79]	; 0x4f
   30d3a:	strb.w	r2, [sp, #80]	; 0x50
   30d3e:	strb.w	r2, [sp, #81]	; 0x51
   30d42:	strb.w	r2, [sp, #82]	; 0x52
   30d46:	strb.w	r2, [sp, #83]	; 0x53
   30d4a:	strb.w	r2, [sp, #84]	; 0x54
   30d4e:	mov	r2, r8
   30d50:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   30d54:	mov	r4, r0
   30d56:	cmp	r0, #0
   30d58:	bne.n	30c92 <btrfs_abort_transaction@@Base+0x107e>
   30d5a:	ldr	r2, [r5, #32]
   30d5c:	mov	r1, r8
   30d5e:	ldr	r0, [r5, #0]
   30d60:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30d64:	ldrb.w	r3, [sp, #76]	; 0x4c
   30d68:	cmp	r3, #199	; 0xc7
   30d6a:	beq.n	30d92 <btrfs_abort_transaction@@Base+0x117e>
   30d6c:	sub.w	r0, r3, #198	; 0xc6
   30d70:	ldr	r1, [pc, #732]	; (31050 <btrfs_abort_transaction@@Base+0x143c>)
   30d72:	negs	r3, r0
   30d74:	movw	r2, #857	; 0x359
   30d78:	adcs	r3, r0
   30d7a:	ldr	r0, [pc, #728]	; (31054 <btrfs_abort_transaction@@Base+0x1440>)
   30d7c:	add	r1, pc
   30d7e:	add	r0, pc
   30d80:	adds	r1, #123	; 0x7b
   30d82:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30d86:	mov	r0, r5
   30d88:	bl	1c6f8 <btrfs_release_path@@Base>
   30d8c:	mov.w	fp, #1
   30d90:	b.n	30e62 <btrfs_abort_transaction@@Base+0x124e>
   30d92:	ldrd	r8, r9, [sp, #68]	; 0x44
   30d96:	ldr.w	r3, [sp, #77]	; 0x4d
   30d9a:	ldr.w	r2, [sp, #81]	; 0x51
   30d9e:	adds.w	r3, r3, r8
   30da2:	str	r3, [sp, #32]
   30da4:	adc.w	r3, r2, r9
   30da8:	str	r3, [sp, #36]	; 0x24
   30daa:	ldrd	r2, r3, [r6, #40]	; 0x28
   30dae:	cmp	r9, r3
   30db0:	it	eq
   30db2:	cmpeq	r8, r2
   30db4:	bcc.w	30f54 <btrfs_abort_transaction@@Base+0x1340>
   30db8:	ldrd	r0, r1, [sp, #32]
   30dbc:	cmp	r3, r1
   30dbe:	it	eq
   30dc0:	cmpeq	r2, r0
   30dc2:	ite	cc
   30dc4:	movcc	r3, #1
   30dc6:	movcs	r3, #0
   30dc8:	ldr	r1, [pc, #652]	; (31058 <btrfs_abort_transaction@@Base+0x1444>)
   30dca:	mov.w	r2, #864	; 0x360
   30dce:	ldr	r0, [pc, #652]	; (3105c <btrfs_abort_transaction@@Base+0x1448>)
   30dd0:	add	r1, pc
   30dd2:	adds	r1, #123	; 0x7b
   30dd4:	add	r0, pc
   30dd6:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30dda:	ldrd	r2, r3, [sp, #152]	; 0x98
   30dde:	cmp	r9, r3
   30de0:	it	eq
   30de2:	cmpeq	r8, r2
   30de4:	bcs.n	30dfa <btrfs_abort_transaction@@Base+0x11e6>
   30de6:	mov	r4, r3
   30de8:	mov	r3, r2
   30dea:	ldrd	r1, r2, [sp, #32]
   30dee:	cmp	r4, r2
   30df0:	it	eq
   30df2:	cmpeq	r3, r1
   30df4:	ite	cs
   30df6:	movcs	r4, #1
   30df8:	movcc	r4, #0
   30dfa:	ldr	r1, [pc, #612]	; (31060 <btrfs_abort_transaction@@Base+0x144c>)
   30dfc:	mov	r3, r4
   30dfe:	ldr	r0, [pc, #612]	; (31064 <btrfs_abort_transaction@@Base+0x1450>)
   30e00:	movw	r2, #866	; 0x362
   30e04:	add	r1, pc
   30e06:	adds	r1, #123	; 0x7b
   30e08:	add	r0, pc
   30e0a:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30e0e:	ldrd	r3, r4, [sp, #152]	; 0x98
   30e12:	ldrd	r1, r2, [sp, #32]
   30e16:	cmp	r4, r2
   30e18:	mov.w	r4, #1
   30e1c:	it	eq
   30e1e:	cmpeq	r3, r1
   30e20:	bne.n	30e5a <btrfs_abort_transaction@@Base+0x1246>
   30e22:	str	r4, [sp, #0]
   30e24:	mov	r2, r5
   30e26:	ldr	r3, [r5, #32]
   30e28:	mov	r1, sl
   30e2a:	mov	r0, r7
   30e2c:	bl	1fc98 <btrfs_del_items@@Base>
   30e30:	mov	r4, r0
   30e32:	cmp	r0, #0
   30e34:	bne.w	30c92 <btrfs_abort_transaction@@Base+0x107e>
   30e38:	ldr.w	r3, [sp, #97]	; 0x61
   30e3c:	ldr.w	r1, [sp, #77]	; 0x4d
   30e40:	ldr.w	r2, [sp, #101]	; 0x65
   30e44:	ldr.w	r0, [sp, #81]	; 0x51
   30e48:	adds	r3, r3, r1
   30e4a:	strd	r8, r9, [sp, #88]	; 0x58
   30e4e:	adc.w	r2, r0, r2
   30e52:	str.w	r3, [sp, #97]	; 0x61
   30e56:	str.w	r2, [sp, #101]	; 0x65
   30e5a:	mov	r0, r5
   30e5c:	mov	fp, r4
   30e5e:	bl	1c6f8 <btrfs_release_path@@Base>
   30e62:	ldr	r2, [sp, #48]	; 0x30
   30e64:	ldr	r3, [sp, #152]	; 0x98
   30e66:	ldrd	r1, r0, [r6, #40]	; 0x28
   30e6a:	adds	r3, r3, r2
   30e6c:	ldr	r2, [sp, #156]	; 0x9c
   30e6e:	str	r3, [sp, #24]
   30e70:	ldr	r3, [sp, #52]	; 0x34
   30e72:	adc.w	r3, r2, r3
   30e76:	str	r3, [sp, #28]
   30e78:	ldr.w	r3, [r6, #49]	; 0x31
   30e7c:	ldr.w	r2, [r6, #53]	; 0x35
   30e80:	adds	r3, r3, r1
   30e82:	str	r3, [sp, #56]	; 0x38
   30e84:	adc.w	r3, r2, r0
   30e88:	str	r3, [sp, #60]	; 0x3c
   30e8a:	ldrd	r1, r2, [sp, #56]	; 0x38
   30e8e:	ldrd	r3, r4, [sp, #24]
   30e92:	cmp	r4, r2
   30e94:	it	eq
   30e96:	cmpeq	r3, r1
   30e98:	beq.n	30f18 <btrfs_abort_transaction@@Base+0x1304>
   30e9a:	ldr	r3, [sp, #24]
   30e9c:	add.w	r8, sp, #68	; 0x44
   30ea0:	movs	r2, #255	; 0xff
   30ea2:	mov.w	r1, #4294967295	; 0xffffffff
   30ea6:	strb.w	r2, [sp, #76]	; 0x4c
   30eaa:	mov	r0, r7
   30eac:	str	r3, [sp, #68]	; 0x44
   30eae:	ldr	r3, [sp, #28]
   30eb0:	strb.w	r1, [sp, #77]	; 0x4d
   30eb4:	strb.w	r2, [sp, #78]	; 0x4e
   30eb8:	str	r3, [sp, #72]	; 0x48
   30eba:	mov	r3, r5
   30ebc:	strb.w	r2, [sp, #79]	; 0x4f
   30ec0:	strb.w	r2, [sp, #80]	; 0x50
   30ec4:	strb.w	r2, [sp, #81]	; 0x51
   30ec8:	strb.w	r2, [sp, #82]	; 0x52
   30ecc:	strb.w	r2, [sp, #83]	; 0x53
   30ed0:	strb.w	r2, [sp, #84]	; 0x54
   30ed4:	mov	r2, r8
   30ed6:	str	r1, [sp, #0]
   30ed8:	mov	r1, sl
   30eda:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   30ede:	mov	r4, r0
   30ee0:	cmp	r0, #0
   30ee2:	bne.w	30c92 <btrfs_abort_transaction@@Base+0x107e>
   30ee6:	ldr	r2, [r5, #32]
   30ee8:	mov	r1, r8
   30eea:	ldr	r0, [r5, #0]
   30eec:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   30ef0:	ldrb.w	r3, [sp, #76]	; 0x4c
   30ef4:	cmp	r3, #199	; 0xc7
   30ef6:	beq.n	30f58 <btrfs_abort_transaction@@Base+0x1344>
   30ef8:	sub.w	r1, r3, #198	; 0xc6
   30efc:	ldr	r0, [pc, #360]	; (31068 <btrfs_abort_transaction@@Base+0x1454>)
   30efe:	negs	r3, r1
   30f00:	mov.w	r2, #896	; 0x380
   30f04:	adcs	r3, r1
   30f06:	ldr	r1, [pc, #356]	; (3106c <btrfs_abort_transaction@@Base+0x1458>)
   30f08:	add	r0, pc
   30f0a:	add	r1, pc
   30f0c:	adds	r1, #123	; 0x7b
   30f0e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30f12:	mov	r0, r5
   30f14:	bl	1c6f8 <btrfs_release_path@@Base>
   30f18:	movs	r3, #0
   30f1a:	mov	r2, r5
   30f1c:	str	r3, [sp, #64]	; 0x40
   30f1e:	mov	r1, sl
   30f20:	movs	r3, #1
   30f22:	mov	r0, r7
   30f24:	str	r3, [sp, #4]
   30f26:	add	r3, sp, #64	; 0x40
   30f28:	str	r3, [sp, #0]
   30f2a:	add	r3, sp, #88	; 0x58
   30f2c:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   30f30:	mov	r4, r0
   30f32:	cmp	r0, #0
   30f34:	bne.w	30c92 <btrfs_abort_transaction@@Base+0x107e>
   30f38:	mov	r0, r5
   30f3a:	bl	1c6f8 <btrfs_release_path@@Base>
   30f3e:	cmp.w	fp, #0
   30f42:	beq.w	30c92 <btrfs_abort_transaction@@Base+0x107e>
   30f46:	mov	r3, fp
   30f48:	mov	r2, r5
   30f4a:	mov	r1, r6
   30f4c:	mov	r0, r7
   30f4e:	bl	2fff8 <btrfs_abort_transaction@@Base+0x3e4>
   30f52:	b.n	30c90 <btrfs_abort_transaction@@Base+0x107c>
   30f54:	mov	r3, r4
   30f56:	b.n	30dc8 <btrfs_abort_transaction@@Base+0x11b4>
   30f58:	ldrd	r8, r9, [sp, #68]	; 0x44
   30f5c:	ldr.w	r3, [sp, #77]	; 0x4d
   30f60:	ldr.w	r2, [sp, #81]	; 0x51
   30f64:	adds.w	r3, r3, r8
   30f68:	str	r3, [sp, #40]	; 0x28
   30f6a:	adc.w	r3, r2, r9
   30f6e:	str	r3, [sp, #44]	; 0x2c
   30f70:	ldrd	r2, r3, [r6, #40]	; 0x28
   30f74:	cmp	r9, r3
   30f76:	it	eq
   30f78:	cmpeq	r8, r2
   30f7a:	bcc.n	31032 <btrfs_abort_transaction@@Base+0x141e>
   30f7c:	ldrd	r0, r1, [sp, #40]	; 0x28
   30f80:	cmp	r3, r1
   30f82:	it	eq
   30f84:	cmpeq	r2, r0
   30f86:	ite	cc
   30f88:	movcc	r3, #1
   30f8a:	movcs	r3, #0
   30f8c:	ldr	r1, [pc, #224]	; (31070 <btrfs_abort_transaction@@Base+0x145c>)
   30f8e:	movw	r2, #903	; 0x387
   30f92:	ldr	r0, [pc, #224]	; (31074 <btrfs_abort_transaction@@Base+0x1460>)
   30f94:	add	r1, pc
   30f96:	adds	r1, #123	; 0x7b
   30f98:	add	r0, pc
   30f9a:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30f9e:	ldrd	r2, r3, [sp, #152]	; 0x98
   30fa2:	cmp	r9, r3
   30fa4:	it	eq
   30fa6:	cmpeq	r8, r2
   30fa8:	bcs.n	30fb6 <btrfs_abort_transaction@@Base+0x13a2>
   30faa:	ldrd	r0, r1, [sp, #40]	; 0x28
   30fae:	cmp	r3, r1
   30fb0:	it	eq
   30fb2:	cmpeq	r2, r0
   30fb4:	bcs.n	31036 <btrfs_abort_transaction@@Base+0x1422>
   30fb6:	ldrd	r2, r3, [sp, #24]
   30fba:	cmp	r9, r3
   30fbc:	it	eq
   30fbe:	cmpeq	r8, r2
   30fc0:	bcc.n	30fd6 <btrfs_abort_transaction@@Base+0x13c2>
   30fc2:	mov	r4, r3
   30fc4:	mov	r3, r2
   30fc6:	ldrd	r1, r2, [sp, #40]	; 0x28
   30fca:	cmp	r4, r2
   30fcc:	it	eq
   30fce:	cmpeq	r3, r1
   30fd0:	ite	cc
   30fd2:	movcc	r4, #1
   30fd4:	movcs	r4, #0
   30fd6:	ldr	r1, [pc, #160]	; (31078 <btrfs_abort_transaction@@Base+0x1464>)
   30fd8:	mov	r3, r4
   30fda:	ldr	r0, [pc, #160]	; (3107c <btrfs_abort_transaction@@Base+0x1468>)
   30fdc:	movw	r2, #905	; 0x389
   30fe0:	add	r1, pc
   30fe2:	adds	r1, #123	; 0x7b
   30fe4:	add	r0, pc
   30fe6:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   30fea:	ldrd	r3, r4, [sp, #24]
   30fee:	cmp	r4, r9
   30ff0:	it	eq
   30ff2:	cmpeq	r3, r8
   30ff4:	bne.n	30f12 <btrfs_abort_transaction@@Base+0x12fe>
   30ff6:	movs	r3, #1
   30ff8:	mov	r2, r5
   30ffa:	str	r3, [sp, #0]
   30ffc:	mov	r1, sl
   30ffe:	ldr	r3, [r5, #32]
   31000:	mov	r0, r7
   31002:	bl	1fc98 <btrfs_del_items@@Base>
   31006:	mov	r4, r0
   31008:	cmp	r0, #0
   3100a:	bne.w	30c92 <btrfs_abort_transaction@@Base+0x107e>
   3100e:	ldr.w	r3, [sp, #97]	; 0x61
   31012:	add.w	fp, fp, #4294967295	; 0xffffffff
   31016:	ldr.w	r1, [sp, #77]	; 0x4d
   3101a:	ldr.w	r2, [sp, #101]	; 0x65
   3101e:	ldr.w	r0, [sp, #81]	; 0x51
   31022:	adds	r3, r3, r1
   31024:	str.w	r3, [sp, #97]	; 0x61
   31028:	adc.w	r2, r0, r2
   3102c:	str.w	r2, [sp, #101]	; 0x65
   31030:	b.n	30f12 <btrfs_abort_transaction@@Base+0x12fe>
   31032:	mov	r3, r4
   31034:	b.n	30f8c <btrfs_abort_transaction@@Base+0x1378>
   31036:	movs	r4, #1
   31038:	b.n	30fd6 <btrfs_abort_transaction@@Base+0x13c2>
   3103a:	mov	r0, r4
   3103c:	add	sp, #116	; 0x74
   3103e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31042:	nop
   31044:	add	r0, pc, #744	; (adr r0, 31330 <add_to_free_space_tree@@Base+0x10>)
   31046:	movs	r3, r0
   31048:	lsls	r0, r1, #10
   3104a:	movs	r0, r0
   3104c:	add	r0, pc, #520	; (adr r0, 31258 <remove_from_free_space_tree@@Base+0x1d8>)
   3104e:	movs	r3, r0
   31050:	strb	r7, [r5, r7]
   31052:	movs	r1, r0
   31054:	strh	r0, [r0, r3]
   31056:	movs	r1, r0
   31058:	strb	r3, [r3, r6]
   3105a:	movs	r1, r0
   3105c:	strh	r0, [r2, r2]
   3105e:	movs	r1, r0
   31060:	strb	r7, [r4, r5]
   31062:	movs	r1, r0
   31064:	strh	r6, [r5, r2]
   31066:	movs	r1, r0
   31068:	str	r6, [r6, r4]
   3106a:	movs	r1, r0
   3106c:	strb	r1, [r4, r1]
   3106e:	movs	r1, r0
   31070:	strh	r7, [r2, r7]
   31072:	movs	r1, r0
   31074:	str	r4, [r1, r3]
   31076:	movs	r1, r0
   31078:	strh	r3, [r1, r6]
   3107a:	movs	r1, r0
   3107c:	str	r4, [r7, r3]
   3107e:	movs	r1, r0

00031080 <remove_from_free_space_tree@@Base>:
   31080:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31084:	sub	sp, #92	; 0x5c
   31086:	movs	r4, #0
   31088:	mov	r6, r0
   3108a:	strd	r2, r3, [sp, #24]
   3108e:	ldrd	sl, r3, [sp, #128]	; 0x80
   31092:	ldr	r2, [pc, #616]	; (312fc <remove_from_free_space_tree@@Base+0x27c>)
   31094:	str	r3, [sp, #52]	; 0x34
   31096:	add	r2, pc
   31098:	ldr	r3, [pc, #612]	; (31300 <remove_from_free_space_tree@@Base+0x280>)
   3109a:	ldr	r3, [r2, r3]
   3109c:	ldr	r3, [r3, #0]
   3109e:	str	r3, [sp, #84]	; 0x54
   310a0:	mov.w	r3, #0
   310a4:	ldr	r3, [r0, #0]
   310a6:	ldr.w	r3, [r3, #308]	; 0x134
   310aa:	ldr.w	r1, [r3, #180]	; 0xb4
   310ae:	mov	r3, r4
   310b0:	and.w	r2, r1, #1
   310b4:	orrs	r3, r2
   310b6:	beq.w	3126a <remove_from_free_space_tree@@Base+0x1ea>
   310ba:	bl	1c6f0 <btrfs_alloc_path@@Base>
   310be:	mov	r5, r0
   310c0:	cmp	r0, #0
   310c2:	beq.w	312ee <remove_from_free_space_tree@@Base+0x26e>
   310c6:	ldrd	r2, r3, [sp, #24]
   310ca:	ldr	r0, [r6, #0]
   310cc:	bl	23754 <btrfs_lookup_block_group@@Base>
   310d0:	mov	r8, r0
   310d2:	cbnz	r0, 310e6 <remove_from_free_space_tree@@Base+0x66>
   310d4:	ldr	r1, [pc, #556]	; (31304 <remove_from_free_space_tree@@Base+0x284>)
   310d6:	movw	r2, #795	; 0x31b
   310da:	ldr	r0, [pc, #556]	; (31308 <remove_from_free_space_tree@@Base+0x288>)
   310dc:	add	r1, pc
   310de:	adds	r1, #145	; 0x91
   310e0:	add	r0, pc
   310e2:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   310e6:	ldr	r1, [r6, #0]
   310e8:	mov	r2, r0
   310ea:	str	r4, [sp, #0]
   310ec:	mov	r3, r5
   310ee:	mov	r0, r4
   310f0:	ldr	r1, [r1, #48]	; 0x30
   310f2:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   310f6:	cmn.w	r0, #4096	; 0x1000
   310fa:	bls.n	31100 <remove_from_free_space_tree@@Base+0x80>
   310fc:	mov	r4, r0
   310fe:	b.n	3125a <remove_from_free_space_tree@@Base+0x1da>
   31100:	ldr	r4, [r5, #0]
   31102:	add	r4, r0
   31104:	mov	r0, r5
   31106:	ldr	r4, [r4, #100]	; 0x64
   31108:	bl	1c6f8 <btrfs_release_path@@Base>
   3110c:	lsls	r0, r4, #31
   3110e:	bpl.n	31130 <remove_from_free_space_tree@@Base+0xb0>
   31110:	movs	r3, #1
   31112:	str	r3, [sp, #16]
   31114:	ldr	r3, [sp, #52]	; 0x34
   31116:	mov	r2, r5
   31118:	mov	r1, r8
   3111a:	mov	r0, r6
   3111c:	str.w	sl, [sp, #8]
   31120:	str	r3, [sp, #12]
   31122:	ldrd	r3, r4, [sp, #24]
   31126:	strd	r3, r4, [sp]
   3112a:	bl	308a4 <btrfs_abort_transaction@@Base+0xc90>
   3112e:	b.n	310fc <remove_from_free_space_tree@@Base+0x7c>
   31130:	ldr	r3, [r6, #0]
   31132:	add.w	r7, sp, #73	; 0x49
   31136:	add.w	fp, sp, #64	; 0x40
   3113a:	mov.w	r2, #4294967295	; 0xffffffff
   3113e:	mov	r0, r6
   31140:	strb.w	r2, [sp, #73]	; 0x49
   31144:	ldr.w	r9, [r3, #48]	; 0x30
   31148:	ldrd	r3, r4, [sp, #24]
   3114c:	mov	r1, r9
   3114e:	strd	r3, r4, [sp, #64]	; 0x40
   31152:	movs	r3, #255	; 0xff
   31154:	strb	r3, [r7, #1]
   31156:	strb	r3, [r7, #2]
   31158:	strb	r3, [r7, #3]
   3115a:	strb	r3, [r7, #4]
   3115c:	strb	r3, [r7, #5]
   3115e:	strb	r3, [r7, #6]
   31160:	strb	r3, [r7, #7]
   31162:	strb.w	r3, [sp, #72]	; 0x48
   31166:	mov	r3, r5
   31168:	str	r2, [sp, #0]
   3116a:	mov	r2, fp
   3116c:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   31170:	mov	r4, r0
   31172:	cmp	r0, #0
   31174:	bne.n	3125a <remove_from_free_space_tree@@Base+0x1da>
   31176:	ldr	r3, [sp, #24]
   31178:	mov	r1, fp
   3117a:	ldr	r2, [sp, #28]
   3117c:	adds.w	r3, r3, sl
   31180:	str	r3, [sp, #32]
   31182:	ldr	r3, [sp, #52]	; 0x34
   31184:	ldr	r0, [r5, #0]
   31186:	adc.w	r3, r2, r3
   3118a:	ldr	r2, [r5, #32]
   3118c:	str	r3, [sp, #36]	; 0x24
   3118e:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   31192:	ldrb.w	r3, [sp, #72]	; 0x48
   31196:	movw	r2, #691	; 0x2b3
   3119a:	ldr	r0, [pc, #368]	; (3130c <remove_from_free_space_tree@@Base+0x28c>)
   3119c:	sub.w	r1, r3, #199	; 0xc7
   311a0:	negs	r3, r1
   311a2:	add	r0, pc
   311a4:	adcs	r3, r1
   311a6:	ldr	r1, [pc, #360]	; (31310 <remove_from_free_space_tree@@Base+0x290>)
   311a8:	add	r1, pc
   311aa:	adds	r1, #173	; 0xad
   311ac:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   311b0:	ldrd	sl, fp, [sp, #64]	; 0x40
   311b4:	ldr.w	r3, [sp, #73]	; 0x49
   311b8:	ldr.w	r2, [sp, #77]	; 0x4d
   311bc:	adds.w	r3, r3, sl
   311c0:	str	r3, [sp, #40]	; 0x28
   311c2:	adc.w	r3, r2, fp
   311c6:	str	r3, [sp, #44]	; 0x2c
   311c8:	ldrd	r2, r3, [sp, #24]
   311cc:	cmp	r3, fp
   311ce:	it	eq
   311d0:	cmpeq	r2, sl
   311d2:	bcc.n	311e8 <remove_from_free_space_tree@@Base+0x168>
   311d4:	ldrd	r3, r4, [sp, #40]	; 0x28
   311d8:	ldrd	r1, r2, [sp, #32]
   311dc:	cmp	r4, r2
   311de:	it	eq
   311e0:	cmpeq	r3, r1
   311e2:	ite	cs
   311e4:	movcs	r4, #1
   311e6:	movcc	r4, #0
   311e8:	ldr	r1, [pc, #296]	; (31314 <remove_from_free_space_tree@@Base+0x294>)
   311ea:	mov	r3, r4
   311ec:	ldr	r0, [pc, #296]	; (31318 <remove_from_free_space_tree@@Base+0x298>)
   311ee:	movw	r2, #695	; 0x2b7
   311f2:	add	r1, pc
   311f4:	adds	r1, #173	; 0xad
   311f6:	add	r0, pc
   311f8:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   311fc:	movs	r3, #1
   311fe:	mov	r2, r5
   31200:	str	r3, [sp, #0]
   31202:	mov	r1, r9
   31204:	ldr	r3, [r5, #32]
   31206:	mov	r0, r6
   31208:	bl	1fc98 <btrfs_del_items@@Base>
   3120c:	mov	r4, r0
   3120e:	cbnz	r0, 3125a <remove_from_free_space_tree@@Base+0x1da>
   31210:	ldrd	r2, r3, [sp, #24]
   31214:	cmp	fp, r3
   31216:	it	eq
   31218:	cmpeq	sl, r2
   3121a:	bcs.n	3127e <remove_from_free_space_tree@@Base+0x1fe>
   3121c:	movs	r3, #199	; 0xc7
   3121e:	strb.w	r3, [sp, #72]	; 0x48
   31222:	ldr	r3, [sp, #24]
   31224:	mov	r0, r5
   31226:	strd	sl, fp, [sp, #64]	; 0x40
   3122a:	subs.w	r2, r3, sl
   3122e:	ldr	r3, [sp, #28]
   31230:	str.w	r2, [sp, #73]	; 0x49
   31234:	sbc.w	r3, r3, fp
   31238:	str.w	r3, [sp, #77]	; 0x4d
   3123c:	bl	1c6f8 <btrfs_release_path@@Base>
   31240:	movs	r3, #1
   31242:	mov	r2, r5
   31244:	str	r3, [sp, #4]
   31246:	mov	r1, r9
   31248:	add	r3, sp, #60	; 0x3c
   3124a:	mov	r0, r6
   3124c:	str	r3, [sp, #0]
   3124e:	add	r3, sp, #64	; 0x40
   31250:	str	r4, [sp, #60]	; 0x3c
   31252:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   31256:	mov	r4, r0
   31258:	cbz	r0, 31282 <remove_from_free_space_tree@@Base+0x202>
   3125a:	mov	r0, r5
   3125c:	bl	1c71e <btrfs_free_path@@Base>
   31260:	cbz	r4, 3126a <remove_from_free_space_tree@@Base+0x1ea>
   31262:	mov	r1, r4
   31264:	mov	r0, r6
   31266:	bl	2fc14 <btrfs_abort_transaction@@Base>
   3126a:	ldr	r2, [pc, #176]	; (3131c <remove_from_free_space_tree@@Base+0x29c>)
   3126c:	ldr	r3, [pc, #144]	; (31300 <remove_from_free_space_tree@@Base+0x280>)
   3126e:	add	r2, pc
   31270:	ldr	r3, [r2, r3]
   31272:	ldr	r2, [r3, #0]
   31274:	ldr	r3, [sp, #84]	; 0x54
   31276:	eors	r2, r3
   31278:	beq.n	312f4 <remove_from_free_space_tree@@Base+0x274>
   3127a:	blx	8c90 <__stack_chk_fail@plt>
   3127e:	mov.w	r4, #4294967295	; 0xffffffff
   31282:	ldrd	r2, r3, [sp, #32]
   31286:	ldrd	r0, r1, [sp, #40]	; 0x28
   3128a:	cmp	r3, r1
   3128c:	it	eq
   3128e:	cmpeq	r2, r0
   31290:	bcs.n	312d6 <remove_from_free_space_tree@@Base+0x256>
   31292:	strd	r2, r3, [sp, #64]	; 0x40
   31296:	movs	r3, #199	; 0xc7
   31298:	ldr	r2, [sp, #32]
   3129a:	mov	r0, r5
   3129c:	strb.w	r3, [sp, #72]	; 0x48
   312a0:	ldr	r3, [sp, #40]	; 0x28
   312a2:	ldr	r1, [sp, #36]	; 0x24
   312a4:	subs	r2, r3, r2
   312a6:	ldr	r3, [sp, #44]	; 0x2c
   312a8:	str.w	r2, [sp, #73]	; 0x49
   312ac:	sbc.w	r3, r3, r1
   312b0:	str	r3, [r7, #4]
   312b2:	bl	1c6f8 <btrfs_release_path@@Base>
   312b6:	movs	r3, #0
   312b8:	mov	r2, r5
   312ba:	str	r3, [sp, #60]	; 0x3c
   312bc:	mov	r1, r9
   312be:	movs	r3, #1
   312c0:	mov	r0, r6
   312c2:	str	r3, [sp, #4]
   312c4:	add	r3, sp, #60	; 0x3c
   312c6:	str	r3, [sp, #0]
   312c8:	add	r3, sp, #64	; 0x40
   312ca:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   312ce:	cmp	r0, #0
   312d0:	bne.w	310fc <remove_from_free_space_tree@@Base+0x7c>
   312d4:	adds	r4, #1
   312d6:	mov	r0, r5
   312d8:	bl	1c6f8 <btrfs_release_path@@Base>
   312dc:	cmp	r4, #0
   312de:	beq.n	3125a <remove_from_free_space_tree@@Base+0x1da>
   312e0:	mov	r3, r4
   312e2:	mov	r2, r5
   312e4:	mov	r1, r8
   312e6:	mov	r0, r6
   312e8:	bl	2fff8 <btrfs_abort_transaction@@Base+0x3e4>
   312ec:	b.n	310fc <remove_from_free_space_tree@@Base+0x7c>
   312ee:	mvn.w	r4, #11
   312f2:	b.n	3125a <remove_from_free_space_tree@@Base+0x1da>
   312f4:	mov	r0, r4
   312f6:	add	sp, #92	; 0x5c
   312f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   312fc:	ldr	r4, [sp, #520]	; 0x208
   312fe:	movs	r3, r0
   31300:	lsls	r0, r1, #10
   31302:	movs	r0, r0
   31304:	strh	r7, [r1, r2]
   31306:	movs	r1, r0
   31308:	lsrs	r6, r2, #25
   3130a:	movs	r1, r0
   3130c:	ldr	r7, [pc, #596]	; (31564 <populate_free_space_tree@@Base+0x1c0>)
   3130e:	movs	r1, r0
   31310:	str	r3, [r0, r7]
   31312:	movs	r1, r0
   31314:	str	r1, [r7, r5]
   31316:	movs	r1, r0
   31318:	ldr	r7, [pc, #420]	; (314c0 <populate_free_space_tree@@Base+0x11c>)
   3131a:	movs	r1, r0
   3131c:	ldr	r2, [sp, #680]	; 0x2a8
   3131e:	movs	r3, r0

00031320 <add_to_free_space_tree@@Base>:
   31320:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   31324:	mov	r7, r3
   31326:	ldr	r3, [r0, #0]
   31328:	mov	sl, r2
   3132a:	movs	r4, #0
   3132c:	mov	r5, r0
   3132e:	ldr.w	r3, [r3, #308]	; 0x134
   31332:	ldr.w	r1, [r3, #180]	; 0xb4
   31336:	mov	r3, r4
   31338:	and.w	r2, r1, #1
   3133c:	orrs	r3, r2
   3133e:	beq.n	3138e <add_to_free_space_tree@@Base+0x6e>
   31340:	bl	1c6f0 <btrfs_alloc_path@@Base>
   31344:	mov	r6, r0
   31346:	cbz	r0, 31396 <add_to_free_space_tree@@Base+0x76>
   31348:	ldr	r0, [r5, #0]
   3134a:	mov	r2, sl
   3134c:	mov	r3, r7
   3134e:	bl	23754 <btrfs_lookup_block_group@@Base>
   31352:	mov	r1, r0
   31354:	cbnz	r0, 31368 <add_to_free_space_tree@@Base+0x48>
   31356:	ldr	r1, [pc, #68]	; (3139c <add_to_free_space_tree@@Base+0x7c>)
   31358:	mov.w	r2, #976	; 0x3d0
   3135c:	ldr	r0, [pc, #64]	; (313a0 <add_to_free_space_tree@@Base+0x80>)
   3135e:	add	r1, pc
   31360:	adds	r1, #198	; 0xc6
   31362:	add	r0, pc
   31364:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   31368:	ldrd	r8, r9, [sp, #48]	; 0x30
   3136c:	mov	r2, r6
   3136e:	mov	r0, r5
   31370:	strd	sl, r7, [sp]
   31374:	strd	r8, r9, [sp, #8]
   31378:	bl	30c50 <btrfs_abort_transaction@@Base+0x103c>
   3137c:	mov	r4, r0
   3137e:	mov	r0, r6
   31380:	bl	1c71e <btrfs_free_path@@Base>
   31384:	cbz	r4, 3138e <add_to_free_space_tree@@Base+0x6e>
   31386:	mov	r1, r4
   31388:	mov	r0, r5
   3138a:	bl	2fc14 <btrfs_abort_transaction@@Base>
   3138e:	mov	r0, r4
   31390:	add	sp, #16
   31392:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   31396:	mvn.w	r4, #11
   3139a:	b.n	3137e <add_to_free_space_tree@@Base+0x5e>
   3139c:	str	r5, [r1, r0]
   3139e:	movs	r1, r0
   313a0:	lsrs	r4, r2, #15
   313a2:	movs	r1, r0

000313a4 <populate_free_space_tree@@Base>:
   313a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   313a8:	mov	r9, r0
   313aa:	vpush	{d8}
   313ae:	mov	r5, r1
   313b0:	ldr	r2, [pc, #544]	; (315d4 <populate_free_space_tree@@Base+0x230>)
   313b2:	ldr	r3, [pc, #548]	; (315d8 <populate_free_space_tree@@Base+0x234>)
   313b4:	add	r2, pc
   313b6:	sub	sp, #60	; 0x3c
   313b8:	ldr	r3, [r2, r3]
   313ba:	ldr	r3, [r3, #0]
   313bc:	str	r3, [sp, #52]	; 0x34
   313be:	mov.w	r3, #0
   313c2:	ldr	r3, [r0, #0]
   313c4:	ldr	r3, [r3, #24]
   313c6:	vmov	s17, r3
   313ca:	bl	1c6f0 <btrfs_alloc_path@@Base>
   313ce:	mov	r7, r0
   313d0:	cbz	r0, 313e6 <populate_free_space_tree@@Base+0x42>
   313d2:	movs	r3, #2
   313d4:	strb.w	r3, [r0, #64]	; 0x40
   313d8:	bl	1c6f0 <btrfs_alloc_path@@Base>
   313dc:	mov	r8, r0
   313de:	cbnz	r0, 313ec <populate_free_space_tree@@Base+0x48>
   313e0:	mov	r0, r7
   313e2:	bl	1c71e <btrfs_free_path@@Base>
   313e6:	mvn.w	r4, #11
   313ea:	b.n	31562 <populate_free_space_tree@@Base+0x1be>
   313ec:	ldr.w	r3, [r9]
   313f0:	add.w	r6, sp, #41	; 0x29
   313f4:	ldr	r1, [r3, #48]	; 0x30
   313f6:	ldrd	r2, r3, [r5, #40]	; 0x28
   313fa:	strd	r2, r3, [sp, #32]
   313fe:	movs	r3, #198	; 0xc6
   31400:	strb.w	r3, [sp, #40]	; 0x28
   31404:	ldr.w	r3, [r5, #53]	; 0x35
   31408:	ldr.w	r2, [r5, #49]	; 0x31
   3140c:	str.w	r3, [sp, #45]	; 0x2d
   31410:	movs	r3, #8
   31412:	str	r3, [sp, #28]
   31414:	add	r3, sp, #32
   31416:	str.w	r2, [sp, #41]	; 0x29
   3141a:	mov	r2, r0
   3141c:	vmov	s16, r3
   31420:	mov	r0, r9
   31422:	movs	r3, #1
   31424:	str	r3, [sp, #4]
   31426:	add	r3, sp, #28
   31428:	str	r3, [sp, #0]
   3142a:	vmov	r3, s16
   3142e:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   31432:	mov	r4, r0
   31434:	cbnz	r0, 31464 <populate_free_space_tree@@Base+0xc0>
   31436:	ldr.w	r0, [r8]
   3143a:	movs	r2, #25
   3143c:	ldr.w	r3, [r8, #32]
   31440:	add.w	r1, r0, #96	; 0x60
   31444:	mla	r3, r2, r3, r1
   31448:	ldr.w	r2, [r3, #118]	; 0x76
   3144c:	adds	r2, #101	; 0x65
   3144e:	adds	r3, r1, r2
   31450:	strb	r4, [r1, r2]
   31452:	strb	r4, [r3, #1]
   31454:	strb	r4, [r3, #2]
   31456:	strb	r4, [r3, #3]
   31458:	strb	r4, [r3, #4]
   3145a:	strb	r4, [r3, #5]
   3145c:	strb	r4, [r3, #6]
   3145e:	strb	r4, [r3, #7]
   31460:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   31464:	mov	r0, r8
   31466:	bl	1c6f8 <btrfs_release_path@@Base>
   3146a:	cmp	r4, #0
   3146c:	bne.n	31556 <populate_free_space_tree@@Base+0x1b2>
   3146e:	ldrd	r2, r3, [r5, #40]	; 0x28
   31472:	strb	r4, [r6, #1]
   31474:	strb	r4, [r6, #2]
   31476:	strd	r2, r3, [sp, #32]
   3147a:	movs	r3, #168	; 0xa8
   3147c:	strb	r4, [r6, #3]
   3147e:	mov	r2, r7
   31480:	strb.w	r3, [sp, #40]	; 0x28
   31484:	movs	r3, #1
   31486:	strb	r4, [r6, #4]
   31488:	strb	r4, [r6, #5]
   3148a:	strb	r4, [r6, #6]
   3148c:	strb	r4, [r6, #7]
   3148e:	vmov	r1, s16
   31492:	vmov	r0, s17
   31496:	str	r4, [sp, #0]
   31498:	strb.w	r4, [sp, #41]	; 0x29
   3149c:	bl	200ec <btrfs_search_slot_for_read@@Base>
   314a0:	cmp	r0, #0
   314a2:	blt.n	31554 <populate_free_space_tree@@Base+0x1b0>
   314a4:	ldr	r1, [pc, #308]	; (315dc <populate_free_space_tree@@Base+0x238>)
   314a6:	it	eq
   314a8:	moveq	r3, #1
   314aa:	ldr	r0, [pc, #308]	; (315e0 <populate_free_space_tree@@Base+0x23c>)
   314ac:	it	ne
   314ae:	movne	r3, #0
   314b0:	add	r1, pc
   314b2:	movw	r2, #1027	; 0x403
   314b6:	adds	r1, #221	; 0xdd
   314b8:	add	r0, pc
   314ba:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   314be:	ldrd	sl, fp, [r5, #40]	; 0x28
   314c2:	ldr.w	r3, [r5, #49]	; 0x31
   314c6:	ldr.w	r2, [r5, #53]	; 0x35
   314ca:	adds.w	r3, r3, sl
   314ce:	str	r3, [sp, #16]
   314d0:	adc.w	r3, r2, fp
   314d4:	str	r3, [sp, #20]
   314d6:	ldr	r2, [r7, #32]
   314d8:	vmov	r1, s16
   314dc:	ldr	r0, [r7, #0]
   314de:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   314e2:	ldrb.w	r2, [sp, #40]	; 0x28
   314e6:	add.w	r3, r2, #88	; 0x58
   314ea:	uxtb	r3, r3
   314ec:	cmp	r3, #1
   314ee:	bhi.n	31588 <populate_free_space_tree@@Base+0x1e4>
   314f0:	ldrd	r0, r1, [sp, #32]
   314f4:	ldrd	r2, r3, [sp, #16]
   314f8:	cmp	r1, r3
   314fa:	it	eq
   314fc:	cmpeq	r0, r2
   314fe:	bcs.n	3159c <populate_free_space_tree@@Base+0x1f8>
   31500:	cmp	fp, r1
   31502:	it	eq
   31504:	cmpeq	sl, r0
   31506:	bcc.n	31536 <populate_free_space_tree@@Base+0x192>
   31508:	ldrb.w	r1, [sp, #40]	; 0x28
   3150c:	ldrd	r2, r3, [sp, #32]
   31510:	cmp	r1, #169	; 0xa9
   31512:	bne.n	31576 <populate_free_space_tree@@Base+0x1d2>
   31514:	ldr.w	r1, [r9]
   31518:	ldr.w	r1, [r1, #384]	; 0x180
   3151c:	adds.w	sl, r2, r1
   31520:	adc.w	fp, r3, #0
   31524:	vmov	r0, s17
   31528:	mov	r1, r7
   3152a:	bl	2fd08 <btrfs_abort_transaction@@Base+0xf4>
   3152e:	cmp	r0, #0
   31530:	blt.n	31554 <populate_free_space_tree@@Base+0x1b0>
   31532:	beq.n	314d6 <populate_free_space_tree@@Base+0x132>
   31534:	b.n	3159c <populate_free_space_tree@@Base+0x1f8>
   31536:	subs.w	r2, r0, sl
   3153a:	strd	sl, fp, [sp]
   3153e:	sbc.w	r3, r1, fp
   31542:	mov	r0, r9
   31544:	strd	r2, r3, [sp, #8]
   31548:	mov	r1, r5
   3154a:	mov	r2, r8
   3154c:	bl	30c50 <btrfs_abort_transaction@@Base+0x103c>
   31550:	cmp	r0, #0
   31552:	beq.n	31508 <populate_free_space_tree@@Base+0x164>
   31554:	mov	r4, r0
   31556:	mov	r0, r8
   31558:	bl	1c71e <btrfs_free_path@@Base>
   3155c:	mov	r0, r7
   3155e:	bl	1c71e <btrfs_free_path@@Base>
   31562:	ldr	r2, [pc, #128]	; (315e4 <populate_free_space_tree@@Base+0x240>)
   31564:	ldr	r3, [pc, #112]	; (315d8 <populate_free_space_tree@@Base+0x234>)
   31566:	add	r2, pc
   31568:	ldr	r3, [r2, r3]
   3156a:	ldr	r2, [r3, #0]
   3156c:	ldr	r3, [sp, #52]	; 0x34
   3156e:	eors	r2, r3
   31570:	beq.n	315c8 <populate_free_space_tree@@Base+0x224>
   31572:	blx	8c90 <__stack_chk_fail@plt>
   31576:	ldr.w	r1, [sp, #41]	; 0x29
   3157a:	ldr.w	r0, [sp, #45]	; 0x2d
   3157e:	adds.w	sl, r1, r2
   31582:	adc.w	fp, r0, r3
   31586:	b.n	31524 <populate_free_space_tree@@Base+0x180>
   31588:	cmp	r2, #192	; 0xc0
   3158a:	bne.n	31524 <populate_free_space_tree@@Base+0x180>
   3158c:	ldrd	r2, r3, [r5, #40]	; 0x28
   31590:	ldrd	r0, r1, [sp, #32]
   31594:	cmp	r1, r3
   31596:	it	eq
   31598:	cmpeq	r0, r2
   3159a:	beq.n	31524 <populate_free_space_tree@@Base+0x180>
   3159c:	ldrd	r2, r3, [sp, #16]
   315a0:	cmp	fp, r3
   315a2:	it	eq
   315a4:	cmpeq	sl, r2
   315a6:	bcs.n	31556 <populate_free_space_tree@@Base+0x1b2>
   315a8:	ldr	r3, [sp, #16]
   315aa:	mov	r1, r5
   315ac:	mov	r0, r9
   315ae:	strd	sl, fp, [sp]
   315b2:	subs.w	r2, r3, sl
   315b6:	ldr	r3, [sp, #20]
   315b8:	sbc.w	r3, r3, fp
   315bc:	strd	r2, r3, [sp, #8]
   315c0:	mov	r2, r8
   315c2:	bl	30c50 <btrfs_abort_transaction@@Base+0x103c>
   315c6:	b.n	31554 <populate_free_space_tree@@Base+0x1b0>
   315c8:	mov	r0, r4
   315ca:	add	sp, #60	; 0x3c
   315cc:	vpop	{d8}
   315d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   315d4:	ldr	r1, [sp, #400]	; 0x190
   315d6:	movs	r3, r0
   315d8:	lsls	r0, r1, #10
   315da:	movs	r0, r0
   315dc:	ldr	r6, [pc, #748]	; (318cc <btrfs_clear_free_space_tree@@Base+0x98>)
   315de:	movs	r1, r0
   315e0:			; <UNDEFINED> instruction: 0xebe90000
   315e4:	str	r7, [sp, #712]	; 0x2c8
   315e6:	movs	r3, r0

000315e8 <remove_block_group_free_space@@Base>:
   315e8:	ldr	r2, [pc, #536]	; (31804 <remove_block_group_free_space@@Base+0x21c>)
   315ea:	ldr	r3, [pc, #540]	; (31808 <remove_block_group_free_space@@Base+0x220>)
   315ec:	add	r2, pc
   315ee:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   315f2:	sub	sp, #92	; 0x5c
   315f4:	ldr	r3, [r2, r3]
   315f6:	mov	r9, r0
   315f8:	mov	r8, r1
   315fa:	ldr	r3, [r3, #0]
   315fc:	str	r3, [sp, #84]	; 0x54
   315fe:	mov.w	r3, #0
   31602:	ldr	r3, [r0, #0]
   31604:	ldr.w	fp, [r3, #48]	; 0x30
   31608:	bl	1c6f0 <btrfs_alloc_path@@Base>
   3160c:	mov	r5, r0
   3160e:	cmp	r0, #0
   31610:	beq.w	317f6 <remove_block_group_free_space@@Base+0x20e>
   31614:	ldrd	r3, r4, [r8, #40]	; 0x28
   31618:	ldr.w	r2, [r8, #53]	; 0x35
   3161c:	ldr.w	sl, [pc, #492]	; 3180c <remove_block_group_free_space@@Base+0x224>
   31620:	strd	r3, r4, [sp, #24]
   31624:	ldr	r1, [sp, #24]
   31626:	add	sl, pc
   31628:	ldr.w	r3, [r8, #49]	; 0x31
   3162c:	add.w	sl, sl, #246	; 0xf6
   31630:	adds	r3, r3, r1
   31632:	str	r3, [sp, #8]
   31634:	ldr	r3, [sp, #28]
   31636:	adc.w	r3, r2, r3
   3163a:	str	r3, [sp, #12]
   3163c:	ldr	r3, [sp, #8]
   3163e:	adds.w	r2, r3, #4294967295	; 0xffffffff
   31642:	ldr	r3, [sp, #12]
   31644:	adc.w	r3, r3, #4294967295	; 0xffffffff
   31648:	strd	r2, r3, [sp, #44]	; 0x2c
   3164c:	movs	r2, #255	; 0xff
   3164e:	strb.w	r2, [sp, #52]	; 0x34
   31652:	strb.w	r2, [sp, #53]	; 0x35
   31656:	strb.w	r2, [sp, #54]	; 0x36
   3165a:	strb.w	r2, [sp, #55]	; 0x37
   3165e:	strb.w	r2, [sp, #56]	; 0x38
   31662:	strb.w	r2, [sp, #57]	; 0x39
   31666:	strb.w	r2, [sp, #58]	; 0x3a
   3166a:	strb.w	r2, [sp, #59]	; 0x3b
   3166e:	strb.w	r2, [sp, #60]	; 0x3c
   31672:	mov.w	r3, #4294967295	; 0xffffffff
   31676:	add	r2, sp, #44	; 0x2c
   31678:	str	r3, [sp, #0]
   3167a:	mov	r1, fp
   3167c:	mov	r3, r5
   3167e:	mov	r0, r9
   31680:	bl	2fef4 <btrfs_abort_transaction@@Base+0x2e0>
   31684:	mov	r4, r0
   31686:	cmp	r0, #0
   31688:	bne.n	31730 <remove_block_group_free_space@@Base+0x148>
   3168a:	ldr	r7, [pc, #388]	; (31810 <remove_block_group_free_space@@Base+0x228>)
   3168c:	ldr	r6, [r5, #0]
   3168e:	ldr	r3, [r5, #32]
   31690:	add	r7, pc
   31692:	adds	r3, #1
   31694:	str	r3, [r5, #32]
   31696:	ldr	r2, [r5, #32]
   31698:	cmp	r2, #0
   3169a:	bgt.n	316a0 <remove_block_group_free_space@@Base+0xb8>
   3169c:	movs	r6, #0
   3169e:	b.n	31714 <remove_block_group_free_space@@Base+0x12c>
   316a0:	subs	r2, #1
   316a2:	add	r1, sp, #64	; 0x40
   316a4:	mov	r0, r6
   316a6:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   316aa:	ldrb.w	r3, [sp, #72]	; 0x48
   316ae:	cmp	r3, #198	; 0xc6
   316b0:	bne.n	31754 <remove_block_group_free_space@@Base+0x16c>
   316b2:	ldrd	r2, r3, [r8, #40]	; 0x28
   316b6:	adds	r4, #1
   316b8:	ldrd	r6, r7, [sp, #64]	; 0x40
   316bc:	ldr	r0, [pc, #340]	; (31814 <remove_block_group_free_space@@Base+0x22c>)
   316be:	cmp	r7, r3
   316c0:	it	eq
   316c2:	cmpeq	r6, r2
   316c4:	ldr	r6, [pc, #336]	; (31818 <remove_block_group_free_space@@Base+0x230>)
   316c6:	add	r0, pc
   316c8:	mov.w	r2, #1112	; 0x458
   316cc:	add	r6, pc
   316ce:	it	eq
   316d0:	moveq	r3, #1
   316d2:	add.w	r6, r6, #246	; 0xf6
   316d6:	it	ne
   316d8:	movne	r3, #0
   316da:	mov	r1, r6
   316dc:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   316e0:	ldr.w	r3, [r8, #53]	; 0x35
   316e4:	ldr.w	r1, [sp, #77]	; 0x4d
   316e8:	ldr.w	r0, [sp, #73]	; 0x49
   316ec:	ldr.w	r2, [r8, #49]	; 0x31
   316f0:	cmp	r1, r3
   316f2:	mov	r1, r6
   316f4:	mov.w	r6, #1
   316f8:	it	eq
   316fa:	cmpeq	r0, r2
   316fc:	ldr	r0, [pc, #284]	; (3181c <remove_block_group_free_space@@Base+0x234>)
   316fe:	movw	r2, #1113	; 0x459
   31702:	ite	eq
   31704:	moveq	r3, #1
   31706:	movne	r3, #0
   31708:	add	r0, pc
   3170a:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   3170e:	ldr	r3, [r5, #32]
   31710:	subs	r3, #1
   31712:	str	r3, [r5, #32]
   31714:	str	r4, [sp, #0]
   31716:	mov	r2, r5
   31718:	ldr	r3, [r5, #32]
   3171a:	mov	r1, fp
   3171c:	mov	r0, r9
   3171e:	bl	1fc98 <btrfs_del_items@@Base>
   31722:	mov	r4, r0
   31724:	cbnz	r0, 31730 <remove_block_group_free_space@@Base+0x148>
   31726:	mov	r0, r5
   31728:	bl	1c6f8 <btrfs_release_path@@Base>
   3172c:	cmp	r6, #0
   3172e:	beq.n	31672 <remove_block_group_free_space@@Base+0x8a>
   31730:	mov	r0, r5
   31732:	bl	1c71e <btrfs_free_path@@Base>
   31736:	cbz	r4, 31740 <remove_block_group_free_space@@Base+0x158>
   31738:	mov	r1, r4
   3173a:	mov	r0, r9
   3173c:	bl	2fc14 <btrfs_abort_transaction@@Base>
   31740:	ldr	r2, [pc, #220]	; (31820 <remove_block_group_free_space@@Base+0x238>)
   31742:	ldr	r3, [pc, #196]	; (31808 <remove_block_group_free_space@@Base+0x220>)
   31744:	add	r2, pc
   31746:	ldr	r3, [r2, r3]
   31748:	ldr	r2, [r3, #0]
   3174a:	ldr	r3, [sp, #84]	; 0x54
   3174c:	eors	r2, r3
   3174e:	beq.n	317fc <remove_block_group_free_space@@Base+0x214>
   31750:	blx	8c90 <__stack_chk_fail@plt>
   31754:	adds	r3, #57	; 0x39
   31756:	uxtb	r3, r3
   31758:	cmp	r3, #1
   3175a:	bhi.n	317e4 <remove_block_group_free_space@@Base+0x1fc>
   3175c:	ldrd	r2, r3, [sp, #64]	; 0x40
   31760:	adds	r4, #1
   31762:	ldrd	r0, r1, [sp, #24]
   31766:	cmp	r3, r1
   31768:	strd	r2, r3, [sp, #16]
   3176c:	it	eq
   3176e:	cmpeq	r2, r0
   31770:	mov	r1, sl
   31772:	mov.w	r2, #1120	; 0x460
   31776:	mov	r0, r7
   31778:	ite	cs
   3177a:	movcs	r3, #1
   3177c:	movcc	r3, #0
   3177e:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   31782:	ldrd	r2, r3, [sp, #16]
   31786:	ldrd	r0, r1, [sp, #8]
   3178a:	cmp	r3, r1
   3178c:	mov	r1, sl
   3178e:	it	eq
   31790:	cmpeq	r2, r0
   31792:	ldr	r0, [pc, #144]	; (31824 <remove_block_group_free_space@@Base+0x23c>)
   31794:	movw	r2, #1121	; 0x461
   31798:	ite	cc
   3179a:	movcc	r3, #1
   3179c:	movcs	r3, #0
   3179e:	add	r0, pc
   317a0:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   317a4:	ldr.w	r3, [sp, #73]	; 0x49
   317a8:	ldr	r1, [sp, #16]
   317aa:	ldr.w	r2, [sp, #77]	; 0x4d
   317ae:	adds	r3, r3, r1
   317b0:	str	r3, [sp, #32]
   317b2:	ldr	r3, [sp, #20]
   317b4:	adc.w	r3, r2, r3
   317b8:	str	r3, [sp, #36]	; 0x24
   317ba:	ldrd	r0, r1, [sp, #32]
   317be:	ldrd	r2, r3, [sp, #8]
   317c2:	cmp	r3, r1
   317c4:	mov	r1, sl
   317c6:	it	eq
   317c8:	cmpeq	r2, r0
   317ca:	ldr	r0, [pc, #92]	; (31828 <remove_block_group_free_space@@Base+0x240>)
   317cc:	movw	r2, #1122	; 0x462
   317d0:	ite	cs
   317d2:	movcs	r3, #1
   317d4:	movcc	r3, #0
   317d6:	add	r0, pc
   317d8:	bl	2fe04 <btrfs_abort_transaction@@Base+0x1f0>
   317dc:	ldr	r3, [r5, #32]
   317de:	subs	r3, #1
   317e0:	str	r3, [r5, #32]
   317e2:	b.n	31696 <remove_block_group_free_space@@Base+0xae>
   317e4:	ldr	r1, [pc, #68]	; (3182c <remove_block_group_free_space@@Base+0x244>)
   317e6:	movw	r2, #1126	; 0x466
   317ea:	ldr	r0, [pc, #68]	; (31830 <remove_block_group_free_space@@Base+0x248>)
   317ec:	add	r1, pc
   317ee:	adds	r1, #246	; 0xf6
   317f0:	add	r0, pc
   317f2:	bl	2fd98 <btrfs_abort_transaction@@Base+0x184>
   317f6:	mvn.w	r4, #11
   317fa:	b.n	31730 <remove_block_group_free_space@@Base+0x148>
   317fc:	mov	r0, r4
   317fe:	add	sp, #92	; 0x5c
   31800:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31804:	str	r7, [sp, #176]	; 0xb0
   31806:	movs	r3, r0
   31808:	lsls	r0, r1, #10
   3180a:	movs	r0, r0
   3180c:	ldr	r5, [pc, #276]	; (31924 <btrfs_clear_free_space_tree@@Base+0xf0>)
   3180e:	movs	r1, r0
   31810:	ldr	r0, [pc, #772]	; (31b18 <load_free_space_tree@@Base+0xaa>)
   31812:	movs	r1, r0
   31814:	ldr	r0, [pc, #188]	; (318d4 <btrfs_clear_free_space_tree@@Base+0xa0>)
   31816:	movs	r1, r0
   31818:	ldr	r4, [pc, #636]	; (31a98 <load_free_space_tree@@Base+0x2a>)
   3181a:	movs	r1, r0
   3181c:	ldr	r0, [pc, #116]	; (31894 <btrfs_clear_free_space_tree@@Base+0x60>)
   3181e:	movs	r1, r0
   31820:	str	r5, [sp, #848]	; 0x350
   31822:	movs	r3, r0
   31824:			; <UNDEFINED> instruction: 0x47cf
   31826:	movs	r1, r0
   31828:	blx	r6
   3182a:	movs	r1, r0
   3182c:	ldr	r3, [pc, #508]	; (31a2c <btrfs_create_free_space_tree@@Base+0x88>)
   3182e:	movs	r1, r0
   31830:	lsls	r6, r0, #29
   31832:	movs	r1, r0

00031834 <btrfs_clear_free_space_tree@@Base>:
   31834:	ldr	r2, [pc, #352]	; (31998 <btrfs_clear_free_space_tree@@Base+0x164>)
   31836:	movs	r1, #0
   31838:	ldr	r3, [pc, #352]	; (3199c <btrfs_clear_free_space_tree@@Base+0x168>)
   3183a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3183e:	add	r2, pc
   31840:	ldr.w	r8, [r0, #28]
   31844:	sub	sp, #44	; 0x2c
   31846:	ldr	r3, [r2, r3]
   31848:	mov	r7, r0
   3184a:	ldr	r5, [r0, #48]	; 0x30
   3184c:	mov	r0, r8
   3184e:	ldr	r3, [r3, #0]
   31850:	str	r3, [sp, #36]	; 0x24
   31852:	mov.w	r3, #0
   31856:	bl	2f81c <btrfs_start_transaction@@Base>
   3185a:	cmn.w	r0, #4096	; 0x1000
   3185e:	mov	r6, r0
   31860:	bls.n	3187a <btrfs_clear_free_space_tree@@Base+0x46>
   31862:	mov	r4, r0
   31864:	ldr	r2, [pc, #312]	; (319a0 <btrfs_clear_free_space_tree@@Base+0x16c>)
   31866:	ldr	r3, [pc, #308]	; (3199c <btrfs_clear_free_space_tree@@Base+0x168>)
   31868:	add	r2, pc
   3186a:	ldr	r3, [r2, r3]
   3186c:	ldr	r2, [r3, #0]
   3186e:	ldr	r3, [sp, #36]	; 0x24
   31870:	eors	r2, r3
   31872:	beq.w	31988 <btrfs_clear_free_space_tree@@Base+0x154>
   31876:	blx	8c90 <__stack_chk_fail@plt>
   3187a:	ldr.w	r3, [r7, #308]	; 0x134
   3187e:	movs	r4, #0
   31880:	ldr.w	r1, [r3, #184]	; 0xb8
   31884:	ldr.w	r2, [r3, #180]	; 0xb4
   31888:	str.w	r1, [r3, #184]	; 0xb8
   3188c:	bic.w	r2, r2, #3
   31890:	str.w	r2, [r3, #180]	; 0xb4
   31894:	str	r4, [r7, #48]	; 0x30
   31896:	bl	1c6f0 <btrfs_alloc_path@@Base>
   3189a:	mov	r7, r0
   3189c:	cbnz	r0, 318a4 <btrfs_clear_free_space_tree@@Base+0x70>
   3189e:	mvn.w	r4, #11
   318a2:	b.n	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   318a4:	add.w	r9, sp, #16
   318a8:	mov.w	sl, #1
   318ac:	mov.w	fp, #4294967295	; 0xffffffff
   318b0:	movs	r2, #0
   318b2:	movs	r3, #0
   318b4:	strb.w	r4, [sp, #24]
   318b8:	strd	r2, r3, [sp, #16]
   318bc:	strb.w	r4, [sp, #25]
   318c0:	strb.w	r4, [sp, #26]
   318c4:	strb.w	r4, [sp, #27]
   318c8:	strb.w	r4, [sp, #28]
   318cc:	strb.w	r4, [sp, #29]
   318d0:	strb.w	r4, [sp, #30]
   318d4:	strb.w	r4, [sp, #31]
   318d8:	strb.w	r4, [sp, #32]
   318dc:	mov	r3, r7
   318de:	mov	r2, r9
   318e0:	mov	r1, r5
   318e2:	mov	r0, r6
   318e4:	strd	fp, sl, [sp]
   318e8:	bl	1eadc <btrfs_search_slot@@Base>
   318ec:	subs	r4, r0, #0
   318ee:	blt.n	31914 <btrfs_clear_free_space_tree@@Base+0xe0>
   318f0:	ldr	r3, [r7, #0]
   318f2:	ldr.w	r4, [r3, #192]	; 0xc0
   318f6:	cbz	r4, 31914 <btrfs_clear_free_space_tree@@Base+0xe0>
   318f8:	movs	r3, #0
   318fa:	mov	r2, r7
   318fc:	str	r3, [r7, #32]
   318fe:	mov	r1, r5
   31900:	str	r4, [sp, #0]
   31902:	mov	r0, r6
   31904:	bl	1fc98 <btrfs_del_items@@Base>
   31908:	mov	r4, r0
   3190a:	cbnz	r0, 31914 <btrfs_clear_free_space_tree@@Base+0xe0>
   3190c:	mov	r0, r7
   3190e:	bl	1c6f8 <btrfs_release_path@@Base>
   31912:	b.n	318dc <btrfs_clear_free_space_tree@@Base+0xa8>
   31914:	mov	r0, r7
   31916:	bl	1c71e <btrfs_free_path@@Base>
   3191a:	cmp	r4, #0
   3191c:	bne.n	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   3191e:	addw	r2, r5, #447	; 0x1bf
   31922:	mov	r1, r8
   31924:	mov	r0, r6
   31926:	bl	2c470 <btrfs_del_root@@Base>
   3192a:	mov	r4, r0
   3192c:	cmp	r0, #0
   3192e:	bne.n	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   31930:	ldrd	r2, r3, [r5, #520]	; 0x208
   31934:	str	r3, [r2, #4]
   31936:	str	r2, [r3, #0]
   31938:	ldr	r2, [pc, #84]	; (31990 <btrfs_clear_free_space_tree@@Base+0x15c>)
   3193a:	ldr	r3, [pc, #88]	; (31994 <btrfs_clear_free_space_tree@@Base+0x160>)
   3193c:	ldr	r0, [r5, #0]
   3193e:	strd	r2, r3, [r5, #520]	; 0x208
   31942:	bl	21dac <clean_tree_block@@Base>
   31946:	mov	r4, r0
   31948:	cmp	r0, #0
   3194a:	bne.n	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   3194c:	movs	r3, #1
   3194e:	movs	r2, #0
   31950:	str	r3, [sp, #8]
   31952:	mov	r1, r5
   31954:	movs	r3, #0
   31956:	mov	r0, r6
   31958:	strd	r2, r3, [sp]
   3195c:	ldr	r2, [r5, #0]
   3195e:	bl	25660 <btrfs_free_tree_block@@Base>
   31962:	mov	r4, r0
   31964:	cmp	r0, #0
   31966:	bne.w	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   3196a:	ldr	r0, [r5, #0]
   3196c:	bl	1b4c0 <free_extent_buffer@@Base>
   31970:	ldr	r0, [r5, #4]
   31972:	bl	1b4c0 <free_extent_buffer@@Base>
   31976:	mov	r0, r5
   31978:	blx	8b84 <free@plt+0x4>
   3197c:	mov	r1, r8
   3197e:	mov	r0, r6
   31980:	bl	2fa9c <btrfs_commit_transaction@@Base>
   31984:	mov	r4, r0
   31986:	b.n	31864 <btrfs_clear_free_space_tree@@Base+0x30>
   31988:	mov	r0, r4
   3198a:	add	sp, #44	; 0x2c
   3198c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31990:	lsls	r0, r0, #4
   31992:	movs	r0, r2
   31994:	lsls	r0, r0, #8
   31996:	movs	r0, r4
   31998:	str	r4, [sp, #872]	; 0x368
   3199a:	movs	r3, r0
   3199c:	lsls	r0, r1, #10
   3199e:	movs	r0, r0
   319a0:	str	r4, [sp, #704]	; 0x2c0
   319a2:	movs	r3, r0

000319a4 <btrfs_create_free_space_tree@@Base>:
   319a4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   319a8:	movs	r1, #0
   319aa:	ldr	r7, [r0, #28]
   319ac:	mov	r5, r0
   319ae:	mov	r0, r7
   319b0:	bl	2f81c <btrfs_start_transaction@@Base>
   319b4:	cmn.w	r0, #4096	; 0x1000
   319b8:	mov	r6, r0
   319ba:	bls.n	319c4 <btrfs_create_free_space_tree@@Base+0x20>
   319bc:	mov	r4, r0
   319be:	mov	r0, r4
   319c0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   319c4:	movs	r2, #10
   319c6:	movs	r3, #0
   319c8:	mov	r1, r5
   319ca:	bl	22c1c <btrfs_create_tree@@Base>
   319ce:	cmn.w	r0, #4096	; 0x1000
   319d2:	mov	r4, r0
   319d4:	bhi.n	31a0e <btrfs_create_free_space_tree@@Base+0x6a>
   319d6:	mov.w	r8, #69632	; 0x11000
   319da:	mov.w	r9, #0
   319de:	str	r0, [r5, #48]	; 0x30
   319e0:	mov	r2, r8
   319e2:	mov	r3, r9
   319e4:	mov	r0, r5
   319e6:	bl	236d0 <btrfs_lookup_first_block_group@@Base>
   319ea:	mov	r1, r0
   319ec:	cbz	r0, 31a18 <btrfs_create_free_space_tree@@Base+0x74>
   319ee:	ldr.w	r2, [r0, #49]	; 0x31
   319f2:	ldr.w	r9, [r0, #53]	; 0x35
   319f6:	ldrd	r0, r3, [r0, #40]	; 0x28
   319fa:	adds.w	r8, r2, r0
   319fe:	mov	r0, r6
   31a00:	adc.w	r9, r9, r3
   31a04:	bl	313a4 <populate_free_space_tree@@Base>
   31a08:	mov	r4, r0
   31a0a:	cmp	r0, #0
   31a0c:	beq.n	319e0 <btrfs_create_free_space_tree@@Base+0x3c>
   31a0e:	mov	r1, r4
   31a10:	mov	r0, r6
   31a12:	bl	2fc14 <btrfs_abort_transaction@@Base>
   31a16:	b.n	319be <btrfs_create_free_space_tree@@Base+0x1a>
   31a18:	ldr.w	r3, [r5, #308]	; 0x134
   31a1c:	mov	r9, r1
   31a1e:	ldr.w	r2, [r3, #180]	; 0xb4
   31a22:	ldr.w	r0, [r3, #184]	; 0xb8
   31a26:	and.w	r8, r2, #1
   31a2a:	orrs.w	r1, r8, r9
   31a2e:	mov.w	r1, #0
   31a32:	ittt	eq
   31a34:	streq.w	r0, [r3, #184]	; 0xb8
   31a38:	orreq.w	r2, r2, #1
   31a3c:	streq.w	r2, [r3, #180]	; 0xb4
   31a40:	ldr.w	r3, [r5, #308]	; 0x134
   31a44:	ldr.w	r2, [r3, #180]	; 0xb4
   31a48:	ldr.w	r4, [r3, #184]	; 0xb8
   31a4c:	and.w	r0, r2, #2
   31a50:	orrs	r1, r0
   31a52:	mov	r1, r7
   31a54:	it	eq
   31a56:	orreq.w	r2, r2, #2
   31a5a:	mov	r0, r6
   31a5c:	itt	eq
   31a5e:	streq.w	r2, [r3, #180]	; 0xb4
   31a62:	streq.w	r4, [r3, #184]	; 0xb8
   31a66:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   31a6a:	b.w	2fa9c <btrfs_commit_transaction@@Base>

00031a6e <load_free_space_tree@@Base>:
   31a6e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31a72:	mov	r9, r0
   31a74:	vpush	{d8-d9}
   31a78:	mov	r8, r1
   31a7a:	ldr	r2, [pc, #976]	; (31e4c <load_free_space_tree@@Base+0x3de>)
   31a7c:	ldr	r3, [pc, #976]	; (31e50 <load_free_space_tree@@Base+0x3e2>)
   31a7e:	add	r2, pc
   31a80:	ldr	r6, [pc, #976]	; (31e54 <load_free_space_tree@@Base+0x3e6>)
   31a82:	sub	sp, #124	; 0x7c
   31a84:	ldr	r3, [r2, r3]
   31a86:	add	r6, pc
   31a88:	ldr	r3, [r3, #0]
   31a8a:	str	r3, [sp, #116]	; 0x74
   31a8c:	mov.w	r3, #0
   31a90:	bl	1c6f0 <btrfs_alloc_path@@Base>
   31a94:	mov	r5, r0
   31a96:	cmp	r0, #0
   31a98:	beq.w	31e3a <load_free_space_tree@@Base+0x3cc>
   31a9c:	movs	r4, #0
   31a9e:	movs	r3, #1
   31aa0:	mov	r2, r8
   31aa2:	strb.w	r3, [r0, #64]	; 0x40
   31aa6:	mov	r3, r0
   31aa8:	str	r4, [sp, #0]
   31aaa:	mov	r0, r4
   31aac:	ldr.w	r1, [r9, #48]	; 0x30
   31ab0:	bl	2fc84 <btrfs_abort_transaction@@Base+0x70>
   31ab4:	cmn.w	r0, #4096	; 0x1000
   31ab8:	bls.n	31ae2 <load_free_space_tree@@Base+0x74>
   31aba:	mov	r3, r0
   31abc:	mov	r0, r5
   31abe:	str	r3, [sp, #32]
   31ac0:	bl	1c71e <btrfs_free_path@@Base>
   31ac4:	ldr	r3, [sp, #32]
   31ac6:	cmp	r3, #0
   31ac8:	it	eq
   31aca:	moveq	r3, r4
   31acc:	ldr	r1, [pc, #904]	; (31e58 <load_free_space_tree@@Base+0x3ea>)
   31ace:	ldr	r2, [pc, #896]	; (31e50 <load_free_space_tree@@Base+0x3e2>)
   31ad0:	add	r1, pc
   31ad2:	ldr	r2, [r1, r2]
   31ad4:	ldr	r1, [r2, #0]
   31ad6:	ldr	r2, [sp, #116]	; 0x74
   31ad8:	eors	r1, r2
   31ada:	beq.w	31e40 <load_free_space_tree@@Base+0x3d2>
   31ade:	blx	8c90 <__stack_chk_fail@plt>
   31ae2:	ldr	r3, [r5, #0]
   31ae4:	adds	r3, #96	; 0x60
   31ae6:	adds	r2, r3, r0
   31ae8:	ldr	r3, [r3, r0]
   31aea:	ldr	r7, [r2, #4]
   31aec:	str	r3, [sp, #64]	; 0x40
   31aee:	ldr.w	r3, [r9, #48]	; 0x30
   31af2:	vmov	s18, r3
   31af6:	ldr.w	r3, [r8, #40]	; 0x28
   31afa:	str	r3, [sp, #48]	; 0x30
   31afc:	ldr.w	r3, [r8, #44]	; 0x2c
   31b00:	ldr	r1, [sp, #48]	; 0x30
   31b02:	str	r3, [sp, #52]	; 0x34
   31b04:	ldr.w	r3, [r8, #49]	; 0x31
   31b08:	ldr.w	r2, [r8, #53]	; 0x35
   31b0c:	adds	r3, r3, r1
   31b0e:	str	r3, [sp, #32]
   31b10:	ldr	r3, [sp, #52]	; 0x34
   31b12:	adc.w	r3, r2, r3
   31b16:	ands.w	r7, r7, #1
   31b1a:	str	r3, [sp, #36]	; 0x24
   31b1c:	beq.w	31ca4 <load_free_space_tree@@Base+0x236>
   31b20:	movs	r3, #0
   31b22:	mov	r7, r4
   31b24:	vmov	s16, r3
   31b28:	str	r4, [sp, #40]	; 0x28
   31b2a:	vmov	s17, r3
   31b2e:	add	r3, sp, #96	; 0x60
   31b30:	vmov	s19, r3
   31b34:	vmov	r0, s18
   31b38:	mov	r1, r5
   31b3a:	bl	2fd08 <btrfs_abort_transaction@@Base+0xf4>
   31b3e:	subs	r3, r0, #0
   31b40:	blt.w	31ca0 <load_free_space_tree@@Base+0x232>
   31b44:	bne.w	31c9c <load_free_space_tree@@Base+0x22e>
   31b48:	vmov	r1, s19
   31b4c:	ldr	r2, [r5, #32]
   31b4e:	ldr	r0, [r5, #0]
   31b50:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   31b54:	ldrb.w	r3, [sp, #104]	; 0x68
   31b58:	cmp	r3, #198	; 0xc6
   31b5a:	beq.w	31c9c <load_free_space_tree@@Base+0x22e>
   31b5e:	cmp	r3, #200	; 0xc8
   31b60:	beq.n	31bb4 <load_free_space_tree@@Base+0x146>
   31b62:	ldr	r2, [pc, #760]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31b64:	movs	r1, #1
   31b66:	ldr	r0, [r6, r2]
   31b68:	ldr	r2, [pc, #756]	; (31e60 <load_free_space_tree@@Base+0x3f2>)
   31b6a:	ldr	r0, [r0, #0]
   31b6c:	add	r2, pc
   31b6e:	blx	9040 <__fprintf_chk@plt+0x4>
   31b72:	movs	r4, #1
   31b74:	ldr	r3, [sp, #40]	; 0x28
   31b76:	cmp	r3, #1
   31b78:	bne.n	31b94 <load_free_space_tree@@Base+0x126>
   31b7a:	ldrd	r2, r3, [sp, #32]
   31b7e:	mov	r1, r9
   31b80:	mov	r0, r8
   31b82:	adds	r7, #1
   31b84:	strd	r2, r3, [sp]
   31b88:	vmov	r2, s16
   31b8c:	vmov	r3, s17
   31b90:	bl	27598 <add_new_free_space@@Base>
   31b94:	ldr	r3, [sp, #64]	; 0x40
   31b96:	cmp	r3, r7
   31b98:	beq.n	31bb0 <load_free_space_tree@@Base+0x142>
   31b9a:	ldr	r3, [pc, #704]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31b9c:	ldr	r2, [pc, #708]	; (31e64 <load_free_space_tree@@Base+0x3f6>)
   31b9e:	ldr	r0, [r6, r3]
   31ba0:	add	r2, pc
   31ba2:	ldr	r3, [sp, #64]	; 0x40
   31ba4:	str	r7, [sp, #0]
   31ba6:	ldr	r0, [r0, #0]
   31ba8:	movs	r1, #1
   31baa:	blx	9040 <__fprintf_chk@plt+0x4>
   31bae:	adds	r4, #1
   31bb0:	movs	r3, #0
   31bb2:	b.n	31abc <load_free_space_tree@@Base+0x4e>
   31bb4:	ldrd	sl, fp, [sp, #96]	; 0x60
   31bb8:	ldrd	r3, r4, [sp, #32]
   31bbc:	cmp	fp, r4
   31bbe:	it	eq
   31bc0:	cmpeq	sl, r3
   31bc2:	bcc.n	31bea <load_free_space_tree@@Base+0x17c>
   31bc4:	ldrd	r1, r2, [sp, #32]
   31bc8:	ldr	r3, [pc, #656]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31bca:	ldr	r3, [r6, r3]
   31bcc:	strd	r1, r2, [sp, #16]
   31bd0:	ldr	r2, [sp, #48]	; 0x30
   31bd2:	strd	sl, fp, [sp]
   31bd6:	str	r2, [sp, #8]
   31bd8:	ldr	r2, [sp, #52]	; 0x34
   31bda:	str	r2, [sp, #12]
   31bdc:	ldr	r2, [pc, #648]	; (31e68 <load_free_space_tree@@Base+0x3fa>)
   31bde:	add	r2, pc
   31be0:	ldr	r0, [r3, #0]
   31be2:	movs	r1, #1
   31be4:	blx	9040 <__fprintf_chk@plt+0x4>
   31be8:	b.n	31b72 <load_free_space_tree@@Base+0x104>
   31bea:	ldr.w	r3, [sp, #105]	; 0x69
   31bee:	ldr.w	r2, [sp, #109]	; 0x6d
   31bf2:	adds.w	r3, r3, sl
   31bf6:	str	r3, [sp, #72]	; 0x48
   31bf8:	adc.w	r3, r2, fp
   31bfc:	str	r3, [sp, #76]	; 0x4c
   31bfe:	ldrd	r1, r2, [sp, #72]	; 0x48
   31c02:	ldrd	r3, r4, [sp, #32]
   31c06:	cmp	r4, r2
   31c08:	it	eq
   31c0a:	cmpeq	r3, r1
   31c0c:	bcs.n	31c56 <load_free_space_tree@@Base+0x1e8>
   31c0e:	ldrd	r1, r2, [sp, #32]
   31c12:	ldr	r3, [pc, #584]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31c14:	ldr	r3, [r6, r3]
   31c16:	strd	r1, r2, [sp, #16]
   31c1a:	ldr	r2, [sp, #48]	; 0x30
   31c1c:	strd	sl, fp, [sp]
   31c20:	str	r2, [sp, #8]
   31c22:	ldr	r2, [sp, #52]	; 0x34
   31c24:	str	r2, [sp, #12]
   31c26:	ldr	r2, [pc, #580]	; (31e6c <load_free_space_tree@@Base+0x3fe>)
   31c28:	add	r2, pc
   31c2a:	b.n	31be0 <load_free_space_tree@@Base+0x172>
   31c2c:	mov	r3, fp
   31c2e:	mov	r2, sl
   31c30:	mov	r0, r5
   31c32:	bl	2fe0e <btrfs_abort_transaction@@Base+0x1fa>
   31c36:	ldr	r3, [sp, #40]	; 0x28
   31c38:	mov	r4, r0
   31c3a:	cbnz	r3, 31c7a <load_free_space_tree@@Base+0x20c>
   31c3c:	cmp	r0, #1
   31c3e:	bne.n	31c48 <load_free_space_tree@@Base+0x1da>
   31c40:	vmov	s16, sl
   31c44:	vmov	s17, fp
   31c48:	ldr.w	r3, [r9, #388]	; 0x184
   31c4c:	str	r4, [sp, #40]	; 0x28
   31c4e:	adds.w	sl, sl, r3
   31c52:	adc.w	fp, fp, #0
   31c56:	ldr.w	r3, [sp, #105]	; 0x69
   31c5a:	ldr	r1, [sp, #96]	; 0x60
   31c5c:	ldr.w	r2, [sp, #109]	; 0x6d
   31c60:	adds	r3, r3, r1
   31c62:	str	r3, [sp, #80]	; 0x50
   31c64:	ldr	r3, [sp, #100]	; 0x64
   31c66:	adc.w	r3, r2, r3
   31c6a:	str	r3, [sp, #84]	; 0x54
   31c6c:	ldrd	r3, r4, [sp, #80]	; 0x50
   31c70:	cmp	fp, r4
   31c72:	it	eq
   31c74:	cmpeq	sl, r3
   31c76:	bcc.n	31c2c <load_free_space_tree@@Base+0x1be>
   31c78:	b.n	31b34 <load_free_space_tree@@Base+0xc6>
   31c7a:	ldr	r3, [sp, #40]	; 0x28
   31c7c:	cmp	r3, #1
   31c7e:	bne.n	31c48 <load_free_space_tree@@Base+0x1da>
   31c80:	cmp	r0, #0
   31c82:	bne.n	31c48 <load_free_space_tree@@Base+0x1da>
   31c84:	vmov	r2, s16
   31c88:	mov	r1, r9
   31c8a:	vmov	r3, s17
   31c8e:	mov	r0, r8
   31c90:	strd	sl, fp, [sp]
   31c94:	adds	r7, #1
   31c96:	bl	27598 <add_new_free_space@@Base>
   31c9a:	b.n	31c48 <load_free_space_tree@@Base+0x1da>
   31c9c:	movs	r4, #0
   31c9e:	b.n	31b74 <load_free_space_tree@@Base+0x106>
   31ca0:	movs	r4, #0
   31ca2:	b.n	31abc <load_free_space_tree@@Base+0x4e>
   31ca4:	add	r3, sp, #96	; 0x60
   31ca6:	mov	r4, r7
   31ca8:	str	r7, [sp, #72]	; 0x48
   31caa:	vmov	s16, r3
   31cae:	ldr	r3, [pc, #448]	; (31e70 <load_free_space_tree@@Base+0x402>)
   31cb0:	add	r3, pc
   31cb2:	vmov	s17, r3
   31cb6:	ldr	r3, [pc, #444]	; (31e74 <load_free_space_tree@@Base+0x406>)
   31cb8:	add	r3, pc
   31cba:	vmov	s19, r3
   31cbe:	vmov	r0, s18
   31cc2:	mov	r1, r5
   31cc4:	bl	2fd08 <btrfs_abort_transaction@@Base+0xf4>
   31cc8:	subs	r3, r0, #0
   31cca:	blt.w	31abc <load_free_space_tree@@Base+0x4e>
   31cce:	bne.n	31cfa <load_free_space_tree@@Base+0x28c>
   31cd0:	vmov	r1, s16
   31cd4:	ldr	r2, [r5, #32]
   31cd6:	ldr	r0, [r5, #0]
   31cd8:	bl	2fc1c <btrfs_abort_transaction@@Base+0x8>
   31cdc:	ldrb.w	r3, [sp, #104]	; 0x68
   31ce0:	cmp	r3, #198	; 0xc6
   31ce2:	beq.n	31cfa <load_free_space_tree@@Base+0x28c>
   31ce4:	cmp	r3, #199	; 0xc7
   31ce6:	beq.n	31d10 <load_free_space_tree@@Base+0x2a2>
   31ce8:	ldr	r2, [pc, #368]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31cea:	movs	r1, #1
   31cec:	ldr	r0, [r6, r2]
   31cee:	ldr	r2, [pc, #392]	; (31e78 <load_free_space_tree@@Base+0x40a>)
   31cf0:	ldr	r0, [r0, #0]
   31cf2:	add	r2, pc
   31cf4:	blx	9040 <__fprintf_chk@plt+0x4>
   31cf8:	adds	r4, #1
   31cfa:	ldr	r3, [sp, #64]	; 0x40
   31cfc:	cmp	r3, r7
   31cfe:	beq.w	31bb0 <load_free_space_tree@@Base+0x142>
   31d02:	ldr	r3, [pc, #344]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31d04:	ldr	r2, [pc, #372]	; (31e7c <load_free_space_tree@@Base+0x40e>)
   31d06:	ldr	r0, [r6, r3]
   31d08:	add	r2, pc
   31d0a:	ldr	r3, [sp, #64]	; 0x40
   31d0c:	str	r7, [sp, #0]
   31d0e:	b.n	31ba6 <load_free_space_tree@@Base+0x138>
   31d10:	ldrd	r2, r3, [sp, #96]	; 0x60
   31d14:	ldrd	r0, r1, [sp, #32]
   31d18:	cmp	r3, r1
   31d1a:	it	eq
   31d1c:	cmpeq	r2, r0
   31d1e:	bcc.n	31d46 <load_free_space_tree@@Base+0x2d8>
   31d20:	ldr	r1, [pc, #312]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31d22:	ldrd	r8, r9, [sp, #32]
   31d26:	ldr	r0, [r6, r1]
   31d28:	ldr	r1, [sp, #48]	; 0x30
   31d2a:	strd	r2, r3, [sp]
   31d2e:	ldr	r2, [pc, #336]	; (31e80 <load_free_space_tree@@Base+0x412>)
   31d30:	str	r1, [sp, #8]
   31d32:	ldr	r1, [sp, #52]	; 0x34
   31d34:	add	r2, pc
   31d36:	strd	r8, r9, [sp, #16]
   31d3a:	str	r1, [sp, #12]
   31d3c:	movs	r1, #1
   31d3e:	ldr	r0, [r0, #0]
   31d40:	blx	9040 <__fprintf_chk@plt+0x4>
   31d44:	b.n	31cf8 <load_free_space_tree@@Base+0x28a>
   31d46:	ldr.w	r1, [sp, #105]	; 0x69
   31d4a:	ldr.w	r0, [sp, #109]	; 0x6d
   31d4e:	adds	r1, r1, r2
   31d50:	str	r1, [sp, #40]	; 0x28
   31d52:	adc.w	r1, r0, r3
   31d56:	str	r1, [sp, #44]	; 0x2c
   31d58:	ldrd	fp, ip, [sp, #40]	; 0x28
   31d5c:	ldrd	r0, r1, [sp, #32]
   31d60:	cmp	r1, ip
   31d62:	it	eq
   31d64:	cmpeq	r0, fp
   31d66:	bcs.n	31d8e <load_free_space_tree@@Base+0x320>
   31d68:	ldr	r3, [pc, #240]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31d6a:	mov	r2, r1
   31d6c:	mov	r1, r0
   31d6e:	ldr	r3, [r6, r3]
   31d70:	strd	r1, r2, [sp, #16]
   31d74:	mov	r1, fp
   31d76:	ldr	r2, [sp, #48]	; 0x30
   31d78:	str	r2, [sp, #8]
   31d7a:	ldr	r2, [sp, #52]	; 0x34
   31d7c:	str	r2, [sp, #12]
   31d7e:	mov	r2, ip
   31d80:	strd	r1, r2, [sp]
   31d84:	movs	r1, #1
   31d86:	ldr	r2, [pc, #252]	; (31e84 <load_free_space_tree@@Base+0x416>)
   31d88:	ldr	r0, [r3, #0]
   31d8a:	add	r2, pc
   31d8c:	b.n	31d40 <load_free_space_tree@@Base+0x2d2>
   31d8e:	ldr	r1, [sp, #72]	; 0x48
   31d90:	cbz	r1, 31dde <load_free_space_tree@@Base+0x370>
   31d92:	ldr	r1, [sp, #88]	; 0x58
   31d94:	ldr	r0, [sp, #68]	; 0x44
   31d96:	adds.w	r1, sl, r1
   31d9a:	str	r1, [sp, #56]	; 0x38
   31d9c:	ldr	r1, [sp, #92]	; 0x5c
   31d9e:	adc.w	r1, r0, r1
   31da2:	str	r1, [sp, #60]	; 0x3c
   31da4:	ldrd	r0, r1, [sp, #56]	; 0x38
   31da8:	cmp	r3, r1
   31daa:	it	eq
   31dac:	cmpeq	r2, r0
   31dae:	bcs.n	31e16 <load_free_space_tree@@Base+0x3a8>
   31db0:	ldr	r1, [pc, #168]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31db2:	ldrd	fp, ip, [sp, #56]	; 0x38
   31db6:	ldr	r0, [r6, r1]
   31db8:	strd	r2, r3, [sp]
   31dbc:	vmov	r2, s19
   31dc0:	ldr	r1, [sp, #68]	; 0x44
   31dc2:	strd	fp, ip, [sp, #24]
   31dc6:	str.w	sl, [sp, #16]
   31dca:	ldrd	sl, fp, [sp, #40]	; 0x28
   31dce:	str	r1, [sp, #20]
   31dd0:	strd	sl, fp, [sp, #8]
   31dd4:	ldr	r0, [r0, #0]
   31dd6:	movs	r1, #1
   31dd8:	blx	9040 <__fprintf_chk@plt+0x4>
   31ddc:	adds	r4, #1
   31dde:	ldrd	r2, r3, [sp, #96]	; 0x60
   31de2:	adds	r7, #1
   31de4:	ldr.w	r1, [sp, #105]	; 0x69
   31de8:	ldr.w	r0, [sp, #109]	; 0x6d
   31dec:	adds	r1, r1, r2
   31dee:	adc.w	r0, r3, r0
   31df2:	strd	r1, r0, [sp]
   31df6:	mov	r1, r9
   31df8:	mov	r0, r8
   31dfa:	bl	27598 <add_new_free_space@@Base>
   31dfe:	ldrd	sl, r3, [sp, #96]	; 0x60
   31e02:	str	r3, [sp, #68]	; 0x44
   31e04:	ldr.w	r3, [sp, #105]	; 0x69
   31e08:	str	r3, [sp, #88]	; 0x58
   31e0a:	ldr.w	r3, [sp, #109]	; 0x6d
   31e0e:	str	r3, [sp, #92]	; 0x5c
   31e10:	movs	r3, #1
   31e12:	str	r3, [sp, #72]	; 0x48
   31e14:	b.n	31cbe <load_free_space_tree@@Base+0x250>
   31e16:	bne.n	31dde <load_free_space_tree@@Base+0x370>
   31e18:	ldr	r1, [pc, #64]	; (31e5c <load_free_space_tree@@Base+0x3ee>)
   31e1a:	ldr	r0, [r6, r1]
   31e1c:	ldr	r1, [sp, #68]	; 0x44
   31e1e:	str.w	sl, [sp, #16]
   31e22:	ldrd	sl, fp, [sp, #40]	; 0x28
   31e26:	strd	r2, r3, [sp, #24]
   31e2a:	strd	r2, r3, [sp]
   31e2e:	str	r1, [sp, #20]
   31e30:	vmov	r2, s17
   31e34:	strd	sl, fp, [sp, #8]
   31e38:	b.n	31dd4 <load_free_space_tree@@Base+0x366>
   31e3a:	mvn.w	r3, #11
   31e3e:	b.n	31acc <load_free_space_tree@@Base+0x5e>
   31e40:	mov	r0, r3
   31e42:	add	sp, #124	; 0x7c
   31e44:	vpop	{d8-d9}
   31e48:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31e4c:	str	r2, [sp, #616]	; 0x268
   31e4e:	movs	r3, r0
   31e50:	lsls	r0, r1, #10
   31e52:	movs	r0, r0
   31e54:	str	r2, [sp, #584]	; 0x248
   31e56:	movs	r3, r0
   31e58:	str	r2, [sp, #288]	; 0x120
   31e5a:	movs	r3, r0
   31e5c:	lsls	r4, r3, #10
   31e5e:	movs	r0, r0
   31e60:	mov	r4, r3
   31e62:	movs	r1, r0
   31e64:	mov	pc, r1
   31e66:	movs	r1, r0
   31e68:	cmp	sp, r8
   31e6a:	movs	r1, r0
   31e6c:	cmp	sl, r8
   31e6e:	movs	r1, r0
   31e70:	mov	r2, pc
   31e72:	movs	r1, r0
   31e74:	mov	r4, r6
   31e76:	movs	r1, r0
   31e78:	add	lr, r2
   31e7a:	movs	r1, r0
   31e7c:	cmp	r7, r4
   31e7e:	movs	r1, r0
   31e80:	cmp	r4, r5
   31e82:	movs	r1, r0
   31e84:	cmp	r5, r3
   31e86:	movs	r1, r0

00031e88 <btrfs_add_corrupt_extent_record@@Base>:
   31e88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31e8c:	mov	sl, r2
   31e8e:	ldr	r2, [pc, #220]	; (31f6c <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   31e90:	mov	r9, r3
   31e92:	ldr	r3, [pc, #220]	; (31f70 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   31e94:	sub	sp, #92	; 0x5c
   31e96:	add	r2, pc
   31e98:	ldr.w	r8, [pc, #216]	; 31f74 <btrfs_add_corrupt_extent_record@@Base+0xec>
   31e9c:	ldr.w	fp, [r0, #380]	; 0x17c
   31ea0:	mov	r4, r1
   31ea2:	ldr	r3, [r2, r3]
   31ea4:	add	r8, pc
   31ea6:	ldr	r3, [r3, #0]
   31ea8:	str	r3, [sp, #84]	; 0x54
   31eaa:	mov.w	r3, #0
   31eae:	cmp.w	fp, #0
   31eb2:	beq.n	31f46 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   31eb4:	movs	r0, #64	; 0x40
   31eb6:	blx	8e40 <malloc@plt+0x4>
   31eba:	mov	r5, r0
   31ebc:	cmp	r0, #0
   31ebe:	beq.n	31f5c <btrfs_add_corrupt_extent_record@@Base+0xd4>
   31ec0:	add.w	r6, r0, #40	; 0x28
   31ec4:	add.w	r3, r4, #16
   31ec8:	ldr	r0, [r4, #0]
   31eca:	adds	r4, #8
   31ecc:	ldr.w	r1, [r4, #-4]
   31ed0:	cmp	r4, r3
   31ed2:	mov	r7, r6
   31ed4:	stmia	r7!, {r0, r1}
   31ed6:	mov	r6, r7
   31ed8:	bne.n	31ec8 <btrfs_add_corrupt_extent_record@@Base+0x40>
   31eda:	ldrb	r3, [r4, #0]
   31edc:	mov	r1, r5
   31ede:	mov	r0, fp
   31ee0:	strb	r3, [r7, #0]
   31ee2:	ldrd	r2, r3, [sp, #128]	; 0x80
   31ee6:	strd	sl, r9, [r5, #24]
   31eea:	strd	r2, r3, [r5, #32]
   31eee:	ldr	r3, [sp, #136]	; 0x88
   31ef0:	str	r3, [r5, #60]	; 0x3c
   31ef2:	bl	1a73a <insert_cache_extent@@Base>
   31ef6:	mov	r4, r0
   31ef8:	cbz	r0, 31f46 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   31efa:	mov	r0, r5
   31efc:	blx	8b84 <free@plt+0x4>
   31f00:	cmn.w	r4, #17
   31f04:	beq.n	31f48 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   31f06:	ldr	r3, [pc, #112]	; (31f78 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   31f08:	add	r4, sp, #20
   31f0a:	ldr	r2, [pc, #112]	; (31f7c <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   31f0c:	movs	r1, #1
   31f0e:	ldr.w	r0, [r8, r3]
   31f12:	add	r2, pc
   31f14:	ldr	r3, [pc, #104]	; (31f80 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   31f16:	str	r1, [sp, #12]
   31f18:	add	r3, pc
   31f1a:	str	r3, [sp, #8]
   31f1c:	ldr	r3, [pc, #100]	; (31f84 <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   31f1e:	add	r3, pc
   31f20:	str	r3, [sp, #4]
   31f22:	movs	r3, #49	; 0x31
   31f24:	str	r3, [sp, #0]
   31f26:	ldr	r3, [pc, #96]	; (31f88 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   31f28:	ldr	r0, [r0, #0]
   31f2a:	add	r3, pc
   31f2c:	blx	9040 <__fprintf_chk@plt+0x4>
   31f30:	movs	r1, #16
   31f32:	mov	r0, r4
   31f34:	blx	8e98 <backtrace@plt>
   31f38:	movs	r2, #2
   31f3a:	mov	r1, r0
   31f3c:	mov	r0, r4
   31f3e:	blx	9214 <backtrace_symbols_fd@plt>
   31f42:	blx	91c0 <abort@plt>
   31f46:	movs	r4, #0
   31f48:	ldr	r2, [pc, #64]	; (31f8c <btrfs_add_corrupt_extent_record@@Base+0x104>)
   31f4a:	ldr	r3, [pc, #36]	; (31f70 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   31f4c:	add	r2, pc
   31f4e:	ldr	r3, [r2, r3]
   31f50:	ldr	r2, [r3, #0]
   31f52:	ldr	r3, [sp, #84]	; 0x54
   31f54:	eors	r2, r3
   31f56:	beq.n	31f62 <btrfs_add_corrupt_extent_record@@Base+0xda>
   31f58:	blx	8c90 <__stack_chk_fail@plt>
   31f5c:	mvn.w	r4, #11
   31f60:	b.n	31f48 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   31f62:	mov	r0, r4
   31f64:	add	sp, #92	; 0x5c
   31f66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31f6a:	nop
   31f6c:	ldrh	r2, [r0, #52]	; 0x34
   31f6e:	movs	r3, r0
   31f70:	lsls	r0, r1, #10
   31f72:	movs	r0, r0
   31f74:	ldrh	r4, [r6, #50]	; 0x32
   31f76:	movs	r3, r0
   31f78:	lsls	r4, r3, #10
   31f7a:	movs	r0, r0
   31f7c:	stmia	r4!, {r2, r3, r6}
   31f7e:	movs	r0, r0
   31f80:	cmp	r0, lr
   31f82:	movs	r1, r0
   31f84:	cmp	r8, r0
   31f86:	movs	r1, r0
   31f88:	cmp	r5, sl
   31f8a:	movs	r1, r0
   31f8c:	ldrh	r4, [r1, #46]	; 0x2e
   31f8e:	movs	r3, r0
   31f90:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31f94:	mov	r7, r3
   31f96:	ldr.w	r9, [r0]
   31f9a:	mov	r5, r2
   31f9c:	ldr	r3, [r0, #32]
   31f9e:	movs	r2, #25
   31fa0:	add.w	sl, r9, #96	; 0x60
   31fa4:	movs	r4, #0
   31fa6:	mla	r3, r2, r3, sl
   31faa:	ldr.w	r6, [r3, #118]	; 0x76
   31fae:	ldr.w	fp, [r3, #122]	; 0x7a
   31fb2:	adds	r6, #101	; 0x65
   31fb4:	cmp	r4, fp
   31fb6:	bcc.n	31fbc <btrfs_add_corrupt_extent_record@@Base+0x134>
   31fb8:	movs	r0, #0
   31fba:	b.n	31fea <btrfs_add_corrupt_extent_record@@Base+0x162>
   31fbc:	add.w	r8, r4, r6
   31fc0:	add.w	r3, sl, r8
   31fc4:	ldrh	r3, [r3, #8]
   31fc6:	cmp	r3, r5
   31fc8:	add.w	r2, r3, #10
   31fcc:	add	r4, r2
   31fce:	bne.n	31fb4 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   31fd0:	add.w	r2, r8, #10
   31fd4:	mov	r3, r5
   31fd6:	mov	r0, r9
   31fd8:	str	r1, [sp, #4]
   31fda:	bl	1bba8 <memcmp_extent_buffer@@Base>
   31fde:	ldr	r1, [sp, #4]
   31fe0:	cmp	r0, #0
   31fe2:	bne.n	31fb4 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   31fe4:	movs	r0, #1
   31fe6:	str.w	r8, [r7]
   31fea:	add	sp, #12
   31fec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31ff0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31ff4:	mov	sl, r2
   31ff6:	ldr.w	r8, [r0]
   31ffa:	movs	r1, #25
   31ffc:	ldr	r2, [r0, #32]
   31ffe:	mov	fp, r3
   32000:	add.w	r9, r8, #96	; 0x60
   32004:	ldr	r3, [sp, #52]	; 0x34
   32006:	movs	r4, #0
   32008:	mla	r2, r1, r2, r9
   3200c:	ldr.w	r6, [r2, #118]	; 0x76
   32010:	ldr.w	r1, [r2, #122]	; 0x7a
   32014:	adds	r6, #101	; 0x65
   32016:	str	r1, [sp, #4]
   32018:	ldr	r2, [sp, #4]
   3201a:	cmp	r4, r2
   3201c:	bcc.n	32026 <btrfs_add_corrupt_extent_record@@Base+0x19e>
   3201e:	movs	r0, #0
   32020:	add	sp, #12
   32022:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32026:	adds	r7, r4, r6
   32028:	add.w	r2, r9, r7
   3202c:	ldrh	r5, [r2, #16]
   3202e:	cmp	r5, r3
   32030:	bne.n	3205a <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   32032:	ldr	r1, [r2, #4]
   32034:	ldr	r0, [r2, #0]
   32036:	cmp	fp, r1
   32038:	it	eq
   3203a:	cmpeq	sl, r0
   3203c:	bne.n	3205a <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   3203e:	ldr	r1, [sp, #48]	; 0x30
   32040:	add.w	r2, r7, #18
   32044:	mov	r0, r8
   32046:	str	r3, [sp, #52]	; 0x34
   32048:	bl	1bba8 <memcmp_extent_buffer@@Base>
   3204c:	ldr	r3, [sp, #52]	; 0x34
   3204e:	cbnz	r0, 3205a <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   32050:	ldr	r3, [sp, #56]	; 0x38
   32052:	cbz	r3, 32056 <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   32054:	str	r7, [r3, #0]
   32056:	movs	r0, #1
   32058:	b.n	32020 <btrfs_add_corrupt_extent_record@@Base+0x198>
   3205a:	adds	r5, #18
   3205c:	add	r4, r5
   3205e:	b.n	32018 <btrfs_add_corrupt_extent_record@@Base+0x190>

00032060 <btrfs_lookup_inode@@Base>:
   32060:	push	{r4, r5, r6, r7, lr}
   32062:	mov	r5, r2
   32064:	ldr	r6, [pc, #152]	; (32100 <btrfs_lookup_inode@@Base+0xa0>)
   32066:	sub	sp, #36	; 0x24
   32068:	ldr	r2, [pc, #152]	; (32104 <btrfs_lookup_inode@@Base+0xa4>)
   3206a:	mov	r4, r3
   3206c:	add	r6, pc
   3206e:	ldr	r3, [sp, #56]	; 0x38
   32070:	ldr	r2, [r6, r2]
   32072:	ldr	r2, [r2, #0]
   32074:	str	r2, [sp, #28]
   32076:	mov.w	r2, #0
   3207a:	subs	r2, r3, #0
   3207c:	mov.w	r3, r3, asr #31
   32080:	str	r3, [sp, #0]
   32082:	it	ne
   32084:	movne	r2, #1
   32086:	mov	r3, r5
   32088:	str	r2, [sp, #4]
   3208a:	mov	r2, r4
   3208c:	bl	1eadc <btrfs_search_slot@@Base>
   32090:	subs	r6, r0, #0
   32092:	ble.n	320e6 <btrfs_lookup_inode@@Base+0x86>
   32094:	ldrb	r3, [r4, #8]
   32096:	cmp	r3, #132	; 0x84
   32098:	bne.n	320e6 <btrfs_lookup_inode@@Base+0x86>
   3209a:	ldr.w	r3, [r4, #13]
   3209e:	ldr.w	r2, [r4, #9]
   320a2:	adds	r3, #1
   320a4:	it	eq
   320a6:	cmpeq.w	r2, #4294967295	; 0xffffffff
   320aa:	bne.n	320e6 <btrfs_lookup_inode@@Base+0x86>
   320ac:	ldr	r2, [r5, #32]
   320ae:	cbz	r2, 320e6 <btrfs_lookup_inode@@Base+0x86>
   320b0:	subs	r2, #1
   320b2:	movs	r3, #25
   320b4:	ldr	r0, [r5, #0]
   320b6:	add	r1, sp, #8
   320b8:	muls	r2, r3
   320ba:	movs	r3, #17
   320bc:	adds	r2, #101	; 0x65
   320be:	bl	1bbba <read_extent_buffer@@Base>
   320c2:	ldrd	r2, r3, [sp, #8]
   320c6:	ldr	r1, [r4, #4]
   320c8:	ldr	r0, [r4, #0]
   320ca:	cmp	r1, r3
   320cc:	ldrb.w	r7, [sp, #16]
   320d0:	it	eq
   320d2:	cmpeq	r0, r2
   320d4:	bne.n	320e6 <btrfs_lookup_inode@@Base+0x86>
   320d6:	ldrb	r3, [r4, #8]
   320d8:	cmp	r3, r7
   320da:	itttt	eq
   320dc:	ldreq	r3, [r5, #32]
   320de:	moveq	r6, #0
   320e0:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   320e4:	streq	r3, [r5, #32]
   320e6:	ldr	r2, [pc, #32]	; (32108 <btrfs_lookup_inode@@Base+0xa8>)
   320e8:	ldr	r3, [pc, #24]	; (32104 <btrfs_lookup_inode@@Base+0xa4>)
   320ea:	add	r2, pc
   320ec:	ldr	r3, [r2, r3]
   320ee:	ldr	r2, [r3, #0]
   320f0:	ldr	r3, [sp, #28]
   320f2:	eors	r2, r3
   320f4:	beq.n	320fa <btrfs_lookup_inode@@Base+0x9a>
   320f6:	blx	8c90 <__stack_chk_fail@plt>
   320fa:	mov	r0, r6
   320fc:	add	sp, #36	; 0x24
   320fe:	pop	{r4, r5, r6, r7, pc}
   32100:	ldrh	r4, [r5, #36]	; 0x24
   32102:	movs	r3, r0
   32104:	lsls	r0, r1, #10
   32106:	movs	r0, r0
   32108:	ldrh	r6, [r5, #32]
   3210a:	movs	r3, r0

0003210c <btrfs_insert_inode@@Base>:
   3210c:	push	{lr}
   3210e:	sub	sp, #36	; 0x24
   32110:	ldr.w	lr, [pc, #104]	; 3217c <btrfs_insert_inode@@Base+0x70>
   32114:	ldr.w	ip, [pc, #104]	; 32180 <btrfs_insert_inode@@Base+0x74>
   32118:	add	lr, pc
   3211a:	ldr.w	ip, [lr, ip]
   3211e:	ldr.w	ip, [ip]
   32122:	str.w	ip, [sp, #28]
   32126:	mov.w	ip, #0
   3212a:	strd	r2, r3, [sp, #8]
   3212e:	movs	r2, #0
   32130:	movs	r3, #1
   32132:	strb.w	r2, [sp, #17]
   32136:	strb.w	r3, [sp, #16]
   3213a:	movs	r3, #160	; 0xa0
   3213c:	strb.w	r2, [sp, #18]
   32140:	strb.w	r2, [sp, #19]
   32144:	strb.w	r2, [sp, #20]
   32148:	strb.w	r2, [sp, #21]
   3214c:	strb.w	r2, [sp, #22]
   32150:	strb.w	r2, [sp, #23]
   32154:	strb.w	r2, [sp, #24]
   32158:	add	r2, sp, #8
   3215a:	str	r3, [sp, #0]
   3215c:	ldr	r3, [sp, #40]	; 0x28
   3215e:	bl	1fb68 <btrfs_insert_item@@Base>
   32162:	ldr	r2, [pc, #32]	; (32184 <btrfs_insert_inode@@Base+0x78>)
   32164:	ldr	r3, [pc, #24]	; (32180 <btrfs_insert_inode@@Base+0x74>)
   32166:	add	r2, pc
   32168:	ldr	r3, [r2, r3]
   3216a:	ldr	r2, [r3, #0]
   3216c:	ldr	r3, [sp, #28]
   3216e:	eors	r2, r3
   32170:	beq.n	32176 <btrfs_insert_inode@@Base+0x6a>
   32172:	blx	8c90 <__stack_chk_fail@plt>
   32176:	add	sp, #36	; 0x24
   32178:	ldr.w	pc, [sp], #4
   3217c:	ldrh	r0, [r0, #32]
   3217e:	movs	r3, r0
   32180:	lsls	r0, r1, #10
   32182:	movs	r0, r0
   32184:	ldrh	r2, [r6, #28]
   32186:	movs	r3, r0

00032188 <btrfs_lookup_inode_ref@@Base>:
   32188:	push	{r4, r5, r6, lr}
   3218a:	mov	r4, r2
   3218c:	ldr	r2, [pc, #112]	; (32200 <btrfs_lookup_inode_ref@@Base+0x78>)
   3218e:	mov	r5, r3
   32190:	ldr	r3, [pc, #112]	; (32204 <btrfs_lookup_inode_ref@@Base+0x7c>)
   32192:	sub	sp, #40	; 0x28
   32194:	add	r2, pc
   32196:	ldr	r6, [sp, #80]	; 0x50
   32198:	ldr	r3, [r2, r3]
   3219a:	ldr	r3, [r3, #0]
   3219c:	str	r3, [sp, #36]	; 0x24
   3219e:	mov.w	r3, #0
   321a2:	movs	r3, #0
   321a4:	str	r3, [sp, #12]
   321a6:	ldrd	r2, r3, [sp, #64]	; 0x40
   321aa:	strd	r2, r3, [sp, #16]
   321ae:	movs	r3, #12
   321b0:	strb.w	r3, [sp, #24]
   321b4:	add	r2, sp, #16
   321b6:	ldr	r3, [sp, #72]	; 0x48
   321b8:	str.w	r3, [sp, #25]
   321bc:	ldr	r3, [sp, #76]	; 0x4c
   321be:	str.w	r3, [sp, #29]
   321c2:	subs	r3, r6, #0
   321c4:	it	ne
   321c6:	movne	r3, #1
   321c8:	strd	r6, r3, [sp]
   321cc:	mov	r3, r4
   321ce:	bl	1eadc <btrfs_search_slot@@Base>
   321d2:	cmp	r0, #0
   321d4:	bne.n	321e6 <btrfs_lookup_inode_ref@@Base+0x5e>
   321d6:	ldr	r2, [sp, #56]	; 0x38
   321d8:	add	r3, sp, #12
   321da:	mov	r1, r5
   321dc:	mov	r0, r4
   321de:	bl	31f90 <btrfs_add_corrupt_extent_record@@Base+0x108>
   321e2:	ldr	r0, [sp, #12]
   321e4:	b.n	321e8 <btrfs_lookup_inode_ref@@Base+0x60>
   321e6:	bge.n	321e2 <btrfs_lookup_inode_ref@@Base+0x5a>
   321e8:	ldr	r2, [pc, #28]	; (32208 <btrfs_lookup_inode_ref@@Base+0x80>)
   321ea:	ldr	r3, [pc, #24]	; (32204 <btrfs_lookup_inode_ref@@Base+0x7c>)
   321ec:	add	r2, pc
   321ee:	ldr	r3, [r2, r3]
   321f0:	ldr	r2, [r3, #0]
   321f2:	ldr	r3, [sp, #36]	; 0x24
   321f4:	eors	r2, r3
   321f6:	beq.n	321fc <btrfs_lookup_inode_ref@@Base+0x74>
   321f8:	blx	8c90 <__stack_chk_fail@plt>
   321fc:	add	sp, #40	; 0x28
   321fe:	pop	{r4, r5, r6, pc}
   32200:	ldrh	r4, [r0, #28]
   32202:	movs	r3, r0
   32204:	lsls	r0, r1, #10
   32206:	movs	r0, r0
   32208:	ldrh	r4, [r5, #24]
   3220a:	movs	r3, r0

0003220c <btrfs_lookup_inode_extref@@Base>:
   3220c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32210:	mov	sl, r2
   32212:	ldr	r2, [pc, #152]	; (322ac <btrfs_lookup_inode_extref@@Base+0xa0>)
   32214:	sub	sp, #52	; 0x34
   32216:	ldr	r3, [pc, #152]	; (322b0 <btrfs_lookup_inode_extref@@Base+0xa4>)
   32218:	mov	r5, r0
   3221a:	add	r2, pc
   3221c:	ldrd	r7, r8, [sp, #112]	; 0x70
   32220:	ldrd	r6, r9, [sp, #96]	; 0x60
   32224:	mov	r4, r1
   32226:	ldr	r3, [r2, r3]
   32228:	mov	r1, r7
   3222a:	ldr.w	fp, [sp, #120]	; 0x78
   3222e:	ldr	r3, [r3, #0]
   32230:	str	r3, [sp, #44]	; 0x2c
   32232:	mov.w	r3, #0
   32236:	ldrd	r2, r3, [sp, #88]	; 0x58
   3223a:	mov	r0, r6
   3223c:	strd	r2, r3, [sp, #24]
   32240:	mov	r2, r8
   32242:	movs	r3, #13
   32244:	strb.w	r3, [sp, #32]
   32248:	bl	1bc9a <crc32c_le@@Base>
   3224c:	movs	r3, #0
   3224e:	str.w	r3, [sp, #37]	; 0x25
   32252:	subs.w	r3, fp, r3
   32256:	add	r2, sp, #24
   32258:	mov	r1, sl
   3225a:	it	ne
   3225c:	movne	r3, #1
   3225e:	strd	fp, r3, [sp]
   32262:	mov	r3, r4
   32264:	str.w	r0, [sp, #33]	; 0x21
   32268:	mov	r0, r5
   3226a:	bl	1eadc <btrfs_search_slot@@Base>
   3226e:	cmp	r0, #0
   32270:	blt.n	32276 <btrfs_lookup_inode_extref@@Base+0x6a>
   32272:	beq.n	3228a <btrfs_lookup_inode_extref@@Base+0x7e>
   32274:	movs	r0, #0
   32276:	ldr	r2, [pc, #60]	; (322b4 <btrfs_lookup_inode_extref@@Base+0xa8>)
   32278:	ldr	r3, [pc, #52]	; (322b0 <btrfs_lookup_inode_extref@@Base+0xa4>)
   3227a:	add	r2, pc
   3227c:	ldr	r3, [r2, r3]
   3227e:	ldr	r2, [r3, #0]
   32280:	ldr	r3, [sp, #44]	; 0x2c
   32282:	eors	r2, r3
   32284:	beq.n	322a4 <btrfs_lookup_inode_extref@@Base+0x98>
   32286:	blx	8c90 <__stack_chk_fail@plt>
   3228a:	add	r3, sp, #20
   3228c:	mov	r2, r6
   3228e:	strd	r8, r3, [sp, #4]
   32292:	mov	r0, r4
   32294:	mov	r3, r9
   32296:	str	r7, [sp, #0]
   32298:	bl	31ff0 <btrfs_add_corrupt_extent_record@@Base+0x168>
   3229c:	cmp	r0, #0
   3229e:	beq.n	32274 <btrfs_lookup_inode_extref@@Base+0x68>
   322a0:	ldr	r0, [sp, #20]
   322a2:	b.n	32276 <btrfs_lookup_inode_extref@@Base+0x6a>
   322a4:	add	sp, #52	; 0x34
   322a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   322aa:	nop
   322ac:	ldrh	r6, [r7, #22]
   322ae:	movs	r3, r0
   322b0:	lsls	r0, r1, #10
   322b2:	movs	r0, r0
   322b4:	ldrh	r6, [r3, #20]
   322b6:	movs	r3, r0

000322b8 <btrfs_del_inode_extref@@Base>:
   322b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   322bc:	mov	r6, r3
   322be:	vpush	{d8}
   322c2:	mov	fp, r2
   322c4:	ldr	r2, [pc, #284]	; (323e4 <btrfs_del_inode_extref@@Base+0x12c>)
   322c6:	mov	r8, r0
   322c8:	mov	r7, r1
   322ca:	mov	r1, fp
   322cc:	add	r2, pc
   322ce:	sub	sp, #52	; 0x34
   322d0:	ldrd	sl, r3, [sp, #104]	; 0x68
   322d4:	ldr.w	r9, [sp, #112]	; 0x70
   322d8:	vmov	s16, r3
   322dc:	ldr	r3, [pc, #264]	; (323e8 <btrfs_del_inode_extref@@Base+0x130>)
   322de:	mov	r0, sl
   322e0:	ldr	r3, [r2, r3]
   322e2:	ldr	r3, [r3, #0]
   322e4:	str	r3, [sp, #44]	; 0x2c
   322e6:	mov.w	r3, #0
   322ea:	ldrd	r2, r3, [sp, #96]	; 0x60
   322ee:	strd	r2, r3, [sp, #24]
   322f2:	mov	r2, r6
   322f4:	movs	r3, #13
   322f6:	strb.w	r3, [sp, #32]
   322fa:	bl	1bc9a <crc32c_le@@Base>
   322fe:	movs	r3, #0
   32300:	str.w	r3, [sp, #37]	; 0x25
   32304:	str.w	r0, [sp, #33]	; 0x21
   32308:	bl	1c6f0 <btrfs_alloc_path@@Base>
   3230c:	mov	r4, r0
   3230e:	cmp	r0, #0
   32310:	beq.n	323d0 <btrfs_del_inode_extref@@Base+0x118>
   32312:	mov.w	r3, #4294967295	; 0xffffffff
   32316:	movs	r2, #1
   32318:	mov	r1, r7
   3231a:	strd	r3, r2, [sp]
   3231e:	mov	r3, r0
   32320:	add	r2, sp, #24
   32322:	mov	r0, r8
   32324:	bl	1eadc <btrfs_search_slot@@Base>
   32328:	subs	r5, r0, #0
   3232a:	ble.n	3234a <btrfs_del_inode_extref@@Base+0x92>
   3232c:	mvn.w	r5, #1
   32330:	mov	r0, r4
   32332:	bl	1c71e <btrfs_free_path@@Base>
   32336:	ldr	r2, [pc, #180]	; (323ec <btrfs_del_inode_extref@@Base+0x134>)
   32338:	ldr	r3, [pc, #172]	; (323e8 <btrfs_del_inode_extref@@Base+0x130>)
   3233a:	add	r2, pc
   3233c:	ldr	r3, [r2, r3]
   3233e:	ldr	r2, [r3, #0]
   32340:	ldr	r3, [sp, #44]	; 0x2c
   32342:	eors	r2, r3
   32344:	beq.n	323d6 <btrfs_del_inode_extref@@Base+0x11e>
   32346:	blx	8c90 <__stack_chk_fail@plt>
   3234a:	bne.n	32330 <btrfs_del_inode_extref@@Base+0x78>
   3234c:	add	r3, sp, #20
   3234e:	mov	r2, sl
   32350:	strd	r6, r3, [sp, #4]
   32354:	mov	r0, r4
   32356:	vmov	r3, s16
   3235a:	str.w	fp, [sp]
   3235e:	bl	31ff0 <btrfs_add_corrupt_extent_record@@Base+0x168>
   32362:	cmp	r0, #0
   32364:	beq.n	3232c <btrfs_del_inode_extref@@Base+0x74>
   32366:	ldr	r0, [r4, #0]
   32368:	movs	r2, #25
   3236a:	ldr	r3, [r4, #32]
   3236c:	add.w	ip, r0, #96	; 0x60
   32370:	mla	r3, r2, r3, ip
   32374:	ldr.w	sl, [r3, #122]	; 0x7a
   32378:	cmp.w	r9, #0
   3237c:	beq.n	3238a <btrfs_del_inode_extref@@Base+0xd2>
   3237e:	ldr	r2, [sp, #20]
   32380:	add	r2, ip
   32382:	ldr	r1, [r2, #8]
   32384:	ldr	r3, [r2, #12]
   32386:	strd	r1, r3, [r9]
   3238a:	adds	r6, #18
   3238c:	ldr	r3, [r4, #32]
   3238e:	cmp	r6, sl
   32390:	bne.n	323a4 <btrfs_del_inode_extref@@Base+0xec>
   32392:	movs	r2, #1
   32394:	mov	r1, r7
   32396:	str	r2, [sp, #0]
   32398:	mov	r0, r8
   3239a:	mov	r2, r4
   3239c:	bl	1fc98 <btrfs_del_items@@Base>
   323a0:	mov	r5, r0
   323a2:	b.n	32330 <btrfs_del_inode_extref@@Base+0x78>
   323a4:	mov.w	lr, #25
   323a8:	ldr	r1, [sp, #20]
   323aa:	mla	r3, lr, r3, ip
   323ae:	adds	r2, r6, r1
   323b0:	ldr.w	ip, [r3, #118]	; 0x76
   323b4:	rsb	r3, r2, #101	; 0x65
   323b8:	add	r3, sl
   323ba:	add	r3, ip
   323bc:	bl	1bc2c <memmove_extent_buffer@@Base>
   323c0:	sub.w	r2, sl, r6
   323c4:	movs	r3, #1
   323c6:	mov	r1, r4
   323c8:	mov	r0, r7
   323ca:	bl	1e71c <btrfs_truncate_item@@Base>
   323ce:	b.n	32330 <btrfs_del_inode_extref@@Base+0x78>
   323d0:	mvn.w	r5, #11
   323d4:	b.n	32336 <btrfs_del_inode_extref@@Base+0x7e>
   323d6:	mov	r0, r5
   323d8:	add	sp, #52	; 0x34
   323da:	vpop	{d8}
   323de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   323e2:	nop
   323e4:	ldrh	r4, [r1, #18]
   323e6:	movs	r3, r0
   323e8:	lsls	r0, r1, #10
   323ea:	movs	r0, r0
   323ec:	ldrh	r6, [r3, #14]
   323ee:	movs	r3, r0

000323f0 <btrfs_insert_inode_extref@@Base>:
   323f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   323f4:	sub	sp, #68	; 0x44
   323f6:	mov	r6, r3
   323f8:	mov	r7, r2
   323fa:	ldrd	sl, r3, [sp, #112]	; 0x70
   323fe:	mov	r5, r0
   32400:	ldr	r2, [pc, #260]	; (32508 <btrfs_insert_inode_extref@@Base+0x118>)
   32402:	mov	r9, r1
   32404:	mov	r1, r7
   32406:	mov.w	fp, #0
   3240a:	str	r3, [sp, #20]
   3240c:	add	r2, pc
   3240e:	ldr	r3, [sp, #120]	; 0x78
   32410:	mov	r0, sl
   32412:	add.w	r8, r6, #18
   32416:	str	r3, [sp, #24]
   32418:	ldr	r3, [sp, #124]	; 0x7c
   3241a:	str	r3, [sp, #28]
   3241c:	ldr	r3, [pc, #236]	; (3250c <btrfs_insert_inode_extref@@Base+0x11c>)
   3241e:	ldr	r3, [r2, r3]
   32420:	ldr	r3, [r3, #0]
   32422:	str	r3, [sp, #60]	; 0x3c
   32424:	mov.w	r3, #0
   32428:	ldrd	r2, r3, [sp, #104]	; 0x68
   3242c:	strd	r2, r3, [sp, #40]	; 0x28
   32430:	mov	r2, r6
   32432:	movs	r3, #13
   32434:	strb.w	r3, [sp, #48]	; 0x30
   32438:	bl	1bc9a <crc32c_le@@Base>
   3243c:	str.w	fp, [sp, #53]	; 0x35
   32440:	str.w	r0, [sp, #49]	; 0x31
   32444:	bl	1c6f0 <btrfs_alloc_path@@Base>
   32448:	mov	r4, r0
   3244a:	cmp	r0, #0
   3244c:	beq.n	324f8 <btrfs_insert_inode_extref@@Base+0x108>
   3244e:	movs	r3, #1
   32450:	mov	r2, r0
   32452:	str	r3, [sp, #4]
   32454:	mov	r0, r5
   32456:	add	r3, sp, #36	; 0x24
   32458:	mov	r1, r9
   3245a:	str	r3, [sp, #0]
   3245c:	add	r3, sp, #40	; 0x28
   3245e:	str.w	r8, [sp, #36]	; 0x24
   32462:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   32466:	cmn.w	r0, #17
   3246a:	mov	r5, r0
   3246c:	bne.n	324da <btrfs_insert_inode_extref@@Base+0xea>
   3246e:	strd	r6, fp, [sp, #4]
   32472:	mov	r2, sl
   32474:	ldr	r3, [sp, #20]
   32476:	mov	r0, r4
   32478:	str	r7, [sp, #0]
   3247a:	bl	31ff0 <btrfs_add_corrupt_extent_record@@Base+0x168>
   3247e:	mov	fp, r0
   32480:	cbnz	r0, 324de <btrfs_insert_inode_extref@@Base+0xee>
   32482:	mov	r2, r8
   32484:	mov	r1, r4
   32486:	mov	r0, r9
   32488:	mov	r5, fp
   3248a:	bl	1e8d0 <btrfs_extend_item@@Base>
   3248e:	ldr	r3, [r4, #0]
   32490:	movs	r2, #25
   32492:	ldr	r1, [r4, #32]
   32494:	rsb	r8, r8, #101	; 0x65
   32498:	adds	r3, #96	; 0x60
   3249a:	mla	r1, r2, r1, r3
   3249e:	ldr.w	r2, [r1, #118]	; 0x76
   324a2:	add	r8, r2
   324a4:	ldr.w	r2, [r1, #122]	; 0x7a
   324a8:	ldr	r1, [sp, #24]
   324aa:	add	r2, r8
   324ac:	add	r3, r2
   324ae:	strh	r6, [r3, #16]
   324b0:	ldr	r3, [r4, #0]
   324b2:	add	r3, r2
   324b4:	str	r1, [r3, #104]	; 0x68
   324b6:	ldr	r1, [sp, #28]
   324b8:	str	r1, [r3, #108]	; 0x6c
   324ba:	ldr	r3, [r4, #0]
   324bc:	ldr	r1, [sp, #20]
   324be:	add	r3, r2
   324c0:	adds	r2, #18
   324c2:	str.w	sl, [r3, #96]	; 0x60
   324c6:	str	r1, [r3, #100]	; 0x64
   324c8:	mov	r3, r6
   324ca:	ldr	r0, [r4, #0]
   324cc:	mov	r1, r7
   324ce:	bl	1bbd0 <write_extent_buffer@@Base>
   324d2:	ldr	r0, [r4, #0]
   324d4:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   324d8:	b.n	324de <btrfs_insert_inode_extref@@Base+0xee>
   324da:	cmp	r0, #0
   324dc:	bge.n	3248e <btrfs_insert_inode_extref@@Base+0x9e>
   324de:	mov	r0, r4
   324e0:	bl	1c71e <btrfs_free_path@@Base>
   324e4:	ldr	r2, [pc, #40]	; (32510 <btrfs_insert_inode_extref@@Base+0x120>)
   324e6:	ldr	r3, [pc, #36]	; (3250c <btrfs_insert_inode_extref@@Base+0x11c>)
   324e8:	add	r2, pc
   324ea:	ldr	r3, [r2, r3]
   324ec:	ldr	r2, [r3, #0]
   324ee:	ldr	r3, [sp, #60]	; 0x3c
   324f0:	eors	r2, r3
   324f2:	beq.n	324fe <btrfs_insert_inode_extref@@Base+0x10e>
   324f4:	blx	8c90 <__stack_chk_fail@plt>
   324f8:	mvn.w	r5, #11
   324fc:	b.n	324e4 <btrfs_insert_inode_extref@@Base+0xf4>
   324fe:	mov	r0, r5
   32500:	add	sp, #68	; 0x44
   32502:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32506:	nop
   32508:	ldrh	r4, [r1, #8]
   3250a:	movs	r3, r0
   3250c:	lsls	r0, r1, #10
   3250e:	movs	r0, r0
   32510:	ldrh	r0, [r6, #0]
   32512:	movs	r3, r0

00032514 <btrfs_insert_inode_ref@@Base>:
   32514:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32518:	sub	sp, #148	; 0x94
   3251a:	mov	r6, r3
   3251c:	mov	r8, r2
   3251e:	ldr	r3, [sp, #192]	; 0xc0
   32520:	mov	r9, r0
   32522:	ldr	r2, [pc, #424]	; (326cc <btrfs_insert_inode_ref@@Base+0x1b8>)
   32524:	mov	r7, r1
   32526:	ldr.w	fp, [sp, #204]	; 0xcc
   3252a:	str	r3, [sp, #36]	; 0x24
   3252c:	add	r2, pc
   3252e:	ldr	r3, [sp, #196]	; 0xc4
   32530:	str	r3, [sp, #40]	; 0x28
   32532:	ldr	r3, [sp, #200]	; 0xc8
   32534:	str	r3, [sp, #24]
   32536:	ldr	r3, [pc, #408]	; (326d0 <btrfs_insert_inode_ref@@Base+0x1bc>)
   32538:	add	r3, pc
   3253a:	str	r3, [sp, #32]
   3253c:	ldr	r3, [pc, #404]	; (326d4 <btrfs_insert_inode_ref@@Base+0x1c0>)
   3253e:	ldr	r3, [r2, r3]
   32540:	ldr	r3, [r3, #0]
   32542:	str	r3, [sp, #140]	; 0x8c
   32544:	mov.w	r3, #0
   32548:	add.w	r3, r6, #10
   3254c:	str	r3, [sp, #28]
   3254e:	ldrd	r3, r4, [sp, #184]	; 0xb8
   32552:	strd	r3, r4, [sp, #56]	; 0x38
   32556:	ldr	r3, [sp, #36]	; 0x24
   32558:	str.w	r3, [sp, #65]	; 0x41
   3255c:	ldr	r3, [sp, #40]	; 0x28
   3255e:	str.w	r3, [sp, #69]	; 0x45
   32562:	movs	r3, #12
   32564:	strb.w	r3, [sp, #64]	; 0x40
   32568:	bl	1c6f0 <btrfs_alloc_path@@Base>
   3256c:	mov	r4, r0
   3256e:	cmp	r0, #0
   32570:	beq.w	326be <btrfs_insert_inode_ref@@Base+0x1aa>
   32574:	ldr	r3, [sp, #28]
   32576:	mov	r2, r0
   32578:	add.w	sl, sp, #52	; 0x34
   3257c:	mov	r1, r7
   3257e:	mov	r0, r9
   32580:	str.w	sl, [sp]
   32584:	str	r3, [sp, #52]	; 0x34
   32586:	movs	r3, #1
   32588:	str	r3, [sp, #4]
   3258a:	add	r3, sp, #56	; 0x38
   3258c:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   32590:	cmn.w	r0, #17
   32594:	mov	r5, r0
   32596:	bne.n	32646 <btrfs_insert_inode_ref@@Base+0x132>
   32598:	mov	r3, sl
   3259a:	mov	r2, r6
   3259c:	mov	r1, r8
   3259e:	mov	r0, r4
   325a0:	bl	31f90 <btrfs_add_corrupt_extent_record@@Base+0x108>
   325a4:	cmp	r0, #0
   325a6:	bne.n	32654 <btrfs_insert_inode_ref@@Base+0x140>
   325a8:	ldr	r2, [r4, #0]
   325aa:	mov.w	sl, #25
   325ae:	ldr	r3, [r4, #32]
   325b0:	mov	r1, r4
   325b2:	mov	r0, r7
   325b4:	mla	r3, sl, r3, r2
   325b8:	ldr	r2, [sp, #28]
   325ba:	ldr.w	r3, [r3, #218]	; 0xda
   325be:	str	r3, [sp, #44]	; 0x2c
   325c0:	bl	1e8d0 <btrfs_extend_item@@Base>
   325c4:	ldr	r3, [sp, #44]	; 0x2c
   325c6:	mov	r5, r0
   325c8:	cbz	r0, 3260a <btrfs_insert_inode_ref@@Base+0xf6>
   325ca:	ldr	r2, [sp, #32]
   325cc:	add	r4, sp, #76	; 0x4c
   325ce:	ldr	r3, [pc, #264]	; (326d8 <btrfs_insert_inode_ref@@Base+0x1c4>)
   325d0:	movs	r1, #1
   325d2:	ldr	r0, [r2, r3]
   325d4:	ldr	r3, [pc, #260]	; (326dc <btrfs_insert_inode_ref@@Base+0x1c8>)
   325d6:	ldr	r2, [pc, #264]	; (326e0 <btrfs_insert_inode_ref@@Base+0x1cc>)
   325d8:	add	r3, pc
   325da:	str	r3, [sp, #8]
   325dc:	ldr	r3, [pc, #260]	; (326e4 <btrfs_insert_inode_ref@@Base+0x1d0>)
   325de:	add	r2, pc
   325e0:	str	r5, [sp, #12]
   325e2:	add	r3, pc
   325e4:	str	r3, [sp, #4]
   325e6:	movs	r3, #83	; 0x53
   325e8:	str	r3, [sp, #0]
   325ea:	ldr	r3, [pc, #252]	; (326e8 <btrfs_insert_inode_ref@@Base+0x1d4>)
   325ec:	ldr	r0, [r0, #0]
   325ee:	add	r3, pc
   325f0:	blx	9040 <__fprintf_chk@plt+0x4>
   325f4:	movs	r1, #16
   325f6:	mov	r0, r4
   325f8:	blx	8e98 <backtrace@plt>
   325fc:	movs	r2, #2
   325fe:	mov	r1, r0
   32600:	mov	r0, r4
   32602:	blx	9214 <backtrace_symbols_fd@plt>
   32606:	blx	91c0 <abort@plt>
   3260a:	ldr	r2, [r4, #32]
   3260c:	ldr	r1, [r4, #0]
   3260e:	mla	r2, sl, r2, r1
   32612:	ldr.w	r2, [r2, #214]	; 0xd6
   32616:	add	r3, r2
   32618:	adds	r3, #101	; 0x65
   3261a:	str	r3, [sp, #52]	; 0x34
   3261c:	ldr	r2, [r4, #0]
   3261e:	mov	r1, r8
   32620:	add	r2, r3
   32622:	strh.w	r6, [r2, #104]	; 0x68
   32626:	ldr	r2, [r4, #0]
   32628:	add	r3, r2
   3262a:	ldr	r2, [sp, #24]
   3262c:	str.w	fp, [r3, #100]	; 0x64
   32630:	str	r2, [r3, #96]	; 0x60
   32632:	mov	r3, r6
   32634:	ldr	r2, [sp, #52]	; 0x34
   32636:	ldr	r0, [r4, #0]
   32638:	adds	r2, #10
   3263a:	bl	1bbd0 <write_extent_buffer@@Base>
   3263e:	ldr	r0, [r4, #0]
   32640:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   32644:	b.n	32654 <btrfs_insert_inode_ref@@Base+0x140>
   32646:	cmp	r0, #0
   32648:	bge.n	326ae <btrfs_insert_inode_ref@@Base+0x19a>
   3264a:	cmn.w	r0, #75	; 0x4b
   3264e:	it	eq
   32650:	mvneq.w	r5, #30
   32654:	mov	r0, r4
   32656:	bl	1c71e <btrfs_free_path@@Base>
   3265a:	cmn.w	r5, #31
   3265e:	bne.n	3269a <btrfs_insert_inode_ref@@Base+0x186>
   32660:	ldr.w	r3, [r7, #464]	; 0x1d0
   32664:	ldr.w	r3, [r3, #308]	; 0x134
   32668:	ldr.w	r1, [r3, #188]	; 0xbc
   3266c:	movs	r3, #0
   3266e:	and.w	r2, r1, #64	; 0x40
   32672:	orrs	r3, r2
   32674:	beq.n	3269a <btrfs_insert_inode_ref@@Base+0x186>
   32676:	ldr	r3, [sp, #24]
   32678:	mov	r2, r8
   3267a:	mov	r1, r7
   3267c:	mov	r0, r9
   3267e:	strd	r3, fp, [sp, #16]
   32682:	ldr	r3, [sp, #36]	; 0x24
   32684:	str	r3, [sp, #8]
   32686:	ldr	r3, [sp, #40]	; 0x28
   32688:	str	r3, [sp, #12]
   3268a:	ldrd	r3, r4, [sp, #184]	; 0xb8
   3268e:	strd	r3, r4, [sp]
   32692:	mov	r3, r6
   32694:	bl	323f0 <btrfs_insert_inode_extref@@Base>
   32698:	mov	r5, r0
   3269a:	ldr	r2, [pc, #80]	; (326ec <btrfs_insert_inode_ref@@Base+0x1d8>)
   3269c:	ldr	r3, [pc, #52]	; (326d4 <btrfs_insert_inode_ref@@Base+0x1c0>)
   3269e:	add	r2, pc
   326a0:	ldr	r3, [r2, r3]
   326a2:	ldr	r2, [r3, #0]
   326a4:	ldr	r3, [sp, #140]	; 0x8c
   326a6:	eors	r2, r3
   326a8:	beq.n	326c4 <btrfs_insert_inode_ref@@Base+0x1b0>
   326aa:	blx	8c90 <__stack_chk_fail@plt>
   326ae:	ldr	r3, [r4, #32]
   326b0:	movs	r1, #25
   326b2:	ldr	r2, [r4, #0]
   326b4:	mla	r3, r1, r3, r2
   326b8:	ldr.w	r3, [r3, #214]	; 0xd6
   326bc:	b.n	32618 <btrfs_insert_inode_ref@@Base+0x104>
   326be:	mvn.w	r5, #11
   326c2:	b.n	3269a <btrfs_insert_inode_ref@@Base+0x186>
   326c4:	mov	r0, r5
   326c6:	add	sp, #148	; 0x94
   326c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   326cc:	strh	r4, [r5, #62]	; 0x3e
   326ce:	movs	r3, r0
   326d0:	strh	r0, [r4, #62]	; 0x3e
   326d2:	movs	r3, r0
   326d4:	lsls	r0, r1, #10
   326d6:	movs	r0, r0
   326d8:	lsls	r4, r3, #10
   326da:	movs	r0, r0
   326dc:	bpl.n	327b4 <btrfs_del_inode_ref@@Base+0xc4>
   326de:	movs	r0, r0
   326e0:	pop	{r7, pc}
   326e2:	movs	r0, r0
   326e4:	subs	r6, #233	; 0xe9
   326e6:	movs	r1, r0
   326e8:	subs	r6, #208	; 0xd0
   326ea:	movs	r1, r0
   326ec:	strh	r2, [r7, #50]	; 0x32
   326ee:	movs	r3, r0

000326f0 <btrfs_del_inode_ref@@Base>:
   326f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   326f4:	sub	sp, #76	; 0x4c
   326f6:	mov	r8, r3
   326f8:	mov	r9, r2
   326fa:	ldr	r3, [sp, #120]	; 0x78
   326fc:	mov	r7, r0
   326fe:	ldr	r2, [pc, #356]	; (32864 <btrfs_del_inode_ref@@Base+0x174>)
   32700:	mov	r6, r1
   32702:	ldr.w	sl, [sp, #128]	; 0x80
   32706:	str	r3, [sp, #32]
   32708:	add	r2, pc
   3270a:	ldr	r3, [sp, #124]	; 0x7c
   3270c:	str	r3, [sp, #36]	; 0x24
   3270e:	ldr	r3, [pc, #344]	; (32868 <btrfs_del_inode_ref@@Base+0x178>)
   32710:	ldr	r3, [r2, r3]
   32712:	ldr	r3, [r3, #0]
   32714:	str	r3, [sp, #68]	; 0x44
   32716:	mov.w	r3, #0
   3271a:	ldrd	r3, r4, [sp, #112]	; 0x70
   3271e:	strd	r3, r4, [sp, #48]	; 0x30
   32722:	ldr	r3, [sp, #32]
   32724:	str.w	r3, [sp, #57]	; 0x39
   32728:	ldr	r3, [sp, #36]	; 0x24
   3272a:	str.w	r3, [sp, #61]	; 0x3d
   3272e:	movs	r3, #12
   32730:	strb.w	r3, [sp, #56]	; 0x38
   32734:	bl	1c6f0 <btrfs_alloc_path@@Base>
   32738:	mov	r5, r0
   3273a:	cmp	r0, #0
   3273c:	beq.w	32856 <btrfs_del_inode_ref@@Base+0x166>
   32740:	mov.w	r3, #4294967295	; 0xffffffff
   32744:	movs	r2, #1
   32746:	mov	r1, r6
   32748:	strd	r3, r2, [sp]
   3274c:	mov	r3, r0
   3274e:	add	r2, sp, #48	; 0x30
   32750:	mov	r0, r7
   32752:	bl	1eadc <btrfs_search_slot@@Base>
   32756:	subs	r4, r0, #0
   32758:	ble.n	327ba <btrfs_del_inode_ref@@Base+0xca>
   3275a:	mov.w	fp, #1
   3275e:	mvn.w	r4, #1
   32762:	mov	r0, r5
   32764:	bl	1c71e <btrfs_free_path@@Base>
   32768:	cmp.w	fp, #0
   3276c:	beq.n	327a6 <btrfs_del_inode_ref@@Base+0xb6>
   3276e:	ldr.w	r3, [r6, #464]	; 0x1d0
   32772:	ldr.w	r3, [r3, #308]	; 0x134
   32776:	ldr.w	r1, [r3, #188]	; 0xbc
   3277a:	movs	r3, #0
   3277c:	and.w	r2, r1, #64	; 0x40
   32780:	orrs	r3, r2
   32782:	beq.n	327a6 <btrfs_del_inode_ref@@Base+0xb6>
   32784:	ldr	r3, [sp, #32]
   32786:	mov	r2, r9
   32788:	mov	r1, r6
   3278a:	mov	r0, r7
   3278c:	str.w	sl, [sp, #16]
   32790:	str	r3, [sp, #8]
   32792:	ldr	r3, [sp, #36]	; 0x24
   32794:	str	r3, [sp, #12]
   32796:	ldrd	r3, r4, [sp, #112]	; 0x70
   3279a:	strd	r3, r4, [sp]
   3279e:	mov	r3, r8
   327a0:	bl	322b8 <btrfs_del_inode_extref@@Base>
   327a4:	mov	r4, r0
   327a6:	ldr	r2, [pc, #196]	; (3286c <btrfs_del_inode_ref@@Base+0x17c>)
   327a8:	ldr	r3, [pc, #188]	; (32868 <btrfs_del_inode_ref@@Base+0x178>)
   327aa:	add	r2, pc
   327ac:	ldr	r3, [r2, r3]
   327ae:	ldr	r2, [r3, #0]
   327b0:	ldr	r3, [sp, #68]	; 0x44
   327b2:	eors	r2, r3
   327b4:	beq.n	3285c <btrfs_del_inode_ref@@Base+0x16c>
   327b6:	blx	8c90 <__stack_chk_fail@plt>
   327ba:	bne.n	32850 <btrfs_del_inode_ref@@Base+0x160>
   327bc:	add	r3, sp, #44	; 0x2c
   327be:	mov	r2, r8
   327c0:	mov	r1, r9
   327c2:	mov	r0, r5
   327c4:	bl	31f90 <btrfs_add_corrupt_extent_record@@Base+0x108>
   327c8:	cmp	r0, #0
   327ca:	beq.n	3275a <btrfs_del_inode_ref@@Base+0x6a>
   327cc:	ldr	r0, [r5, #0]
   327ce:	movs	r2, #25
   327d0:	ldr	r3, [r5, #32]
   327d2:	add.w	ip, r0, #96	; 0x60
   327d6:	mla	r3, r2, r3, ip
   327da:	ldr.w	r3, [r3, #122]	; 0x7a
   327de:	str	r3, [sp, #28]
   327e0:	cmp.w	sl, #0
   327e4:	beq.n	327f6 <btrfs_del_inode_ref@@Base+0x106>
   327e6:	ldr	r3, [sp, #44]	; 0x2c
   327e8:	add.w	r1, ip, r3
   327ec:	ldr.w	r2, [ip, r3]
   327f0:	ldr	r3, [r1, #4]
   327f2:	strd	r2, r3, [sl]
   327f6:	ldr	r2, [sp, #28]
   327f8:	add.w	fp, r8, #10
   327fc:	ldr	r3, [r5, #32]
   327fe:	cmp	fp, r2
   32800:	bne.n	32816 <btrfs_del_inode_ref@@Base+0x126>
   32802:	movs	r2, #1
   32804:	mov	r1, r6
   32806:	str	r2, [sp, #0]
   32808:	mov	r0, r7
   3280a:	mov	r2, r5
   3280c:	mov	fp, r4
   3280e:	bl	1fc98 <btrfs_del_items@@Base>
   32812:	mov	r4, r0
   32814:	b.n	32762 <btrfs_del_inode_ref@@Base+0x72>
   32816:	mov.w	lr, #25
   3281a:	ldr	r1, [sp, #44]	; 0x2c
   3281c:	mla	r3, lr, r3, ip
   32820:	add.w	r2, fp, r1
   32824:	rsb	lr, r2, #101	; 0x65
   32828:	ldr.w	ip, [r3, #118]	; 0x76
   3282c:	ldr	r3, [sp, #28]
   3282e:	add	r3, lr
   32830:	add	r3, ip
   32832:	bl	1bc2c <memmove_extent_buffer@@Base>
   32836:	ldr	r2, [sp, #28]
   32838:	movs	r3, #1
   3283a:	mov	r1, r5
   3283c:	sub.w	r2, r2, fp
   32840:	mov	r0, r6
   32842:	bl	1e71c <btrfs_truncate_item@@Base>
   32846:	ldr	r0, [r5, #0]
   32848:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   3284c:	mov	fp, r4
   3284e:	b.n	32762 <btrfs_del_inode_ref@@Base+0x72>
   32850:	mov.w	fp, #0
   32854:	b.n	32762 <btrfs_del_inode_ref@@Base+0x72>
   32856:	mvn.w	r4, #11
   3285a:	b.n	327a6 <btrfs_del_inode_ref@@Base+0xb6>
   3285c:	mov	r0, r4
   3285e:	add	sp, #76	; 0x4c
   32860:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32864:	strh	r0, [r2, #48]	; 0x30
   32866:	movs	r3, r0
   32868:	lsls	r0, r1, #10
   3286a:	movs	r0, r0
   3286c:	strh	r6, [r5, #42]	; 0x2a
   3286e:	movs	r3, r0
   32870:	ldr	r2, [pc, #60]	; (328b0 <btrfs_del_inode_ref@@Base+0x1c0>)
   32872:	movs	r1, #16
   32874:	ldr	r3, [pc, #60]	; (328b4 <btrfs_del_inode_ref@@Base+0x1c4>)
   32876:	push	{r4, lr}
   32878:	add	r2, pc
   3287a:	sub	sp, #72	; 0x48
   3287c:	add	r4, sp, #4
   3287e:	ldr	r3, [r2, r3]
   32880:	mov	r0, r4
   32882:	ldr	r3, [r3, #0]
   32884:	str	r3, [sp, #68]	; 0x44
   32886:	mov.w	r3, #0
   3288a:	blx	8e98 <backtrace@plt>
   3288e:	movs	r2, #2
   32890:	mov	r1, r0
   32892:	mov	r0, r4
   32894:	blx	9214 <backtrace_symbols_fd@plt>
   32898:	ldr	r2, [pc, #28]	; (328b8 <btrfs_del_inode_ref@@Base+0x1c8>)
   3289a:	ldr	r3, [pc, #24]	; (328b4 <btrfs_del_inode_ref@@Base+0x1c4>)
   3289c:	add	r2, pc
   3289e:	ldr	r3, [r2, r3]
   328a0:	ldr	r2, [r3, #0]
   328a2:	ldr	r3, [sp, #68]	; 0x44
   328a4:	eors	r2, r3
   328a6:	beq.n	328ac <btrfs_del_inode_ref@@Base+0x1bc>
   328a8:	blx	8c90 <__stack_chk_fail@plt>
   328ac:	add	sp, #72	; 0x48
   328ae:	pop	{r4, pc}
   328b0:	strh	r0, [r4, #36]	; 0x24
   328b2:	movs	r3, r0
   328b4:	lsls	r0, r1, #10
   328b6:	movs	r0, r0
   328b8:	strh	r4, [r7, #34]	; 0x22
   328ba:	movs	r3, r0
   328bc:	push	{r4, lr}
   328be:	mov	r4, r1
   328c0:	ldr	r1, [pc, #84]	; (32918 <btrfs_del_inode_ref@@Base+0x228>)
   328c2:	sub	sp, #24
   328c4:	ldr	r3, [pc, #84]	; (3291c <btrfs_del_inode_ref@@Base+0x22c>)
   328c6:	add	r1, pc
   328c8:	ldr	r3, [r1, r3]
   328ca:	mov	r1, sp
   328cc:	ldr	r3, [r3, #0]
   328ce:	str	r3, [sp, #20]
   328d0:	mov.w	r3, #0
   328d4:	movs	r3, #25
   328d6:	muls	r2, r3
   328d8:	movs	r3, #17
   328da:	adds	r2, #101	; 0x65
   328dc:	bl	1bbba <read_extent_buffer@@Base>
   328e0:	ldr.w	r3, [sp, #13]
   328e4:	ldr.w	r2, [sp, #9]
   328e8:	str.w	r3, [r4, #13]
   328ec:	ldrb.w	r3, [sp, #8]
   328f0:	str.w	r2, [r4, #9]
   328f4:	ldr	r2, [pc, #40]	; (32920 <btrfs_del_inode_ref@@Base+0x230>)
   328f6:	strb	r3, [r4, #8]
   328f8:	ldr	r3, [sp, #0]
   328fa:	add	r2, pc
   328fc:	str	r3, [r4, #0]
   328fe:	ldr	r3, [sp, #4]
   32900:	str	r3, [r4, #4]
   32902:	ldr	r3, [pc, #24]	; (3291c <btrfs_del_inode_ref@@Base+0x22c>)
   32904:	ldr	r3, [r2, r3]
   32906:	ldr	r2, [r3, #0]
   32908:	ldr	r3, [sp, #20]
   3290a:	eors	r2, r3
   3290c:	beq.n	32912 <btrfs_del_inode_ref@@Base+0x222>
   3290e:	blx	8c90 <__stack_chk_fail@plt>
   32912:	add	sp, #24
   32914:	pop	{r4, pc}
   32916:	nop
   32918:	strh	r2, [r2, #34]	; 0x22
   3291a:	movs	r3, r0
   3291c:	lsls	r0, r1, #10
   3291e:	movs	r0, r0
   32920:	strh	r6, [r3, #32]
   32922:	movs	r3, r0
   32924:	push	{r0, r1, r2, r3, r4, lr}
   32926:	ldr	r4, [pc, #40]	; (32950 <btrfs_del_inode_ref@@Base+0x260>)
   32928:	ldr	r5, [pc, #40]	; (32954 <btrfs_del_inode_ref@@Base+0x264>)
   3292a:	add	r4, pc
   3292c:	ldr	r4, [r4, r5]
   3292e:	strd	r2, r1, [sp]
   32932:	movs	r1, #1
   32934:	strd	r0, r3, [sp, #8]
   32938:	ldr	r2, [pc, #28]	; (32958 <btrfs_del_inode_ref@@Base+0x268>)
   3293a:	ldr	r3, [pc, #32]	; (3295c <btrfs_del_inode_ref@@Base+0x26c>)
   3293c:	add	r2, pc
   3293e:	ldr	r0, [r4, #0]
   32940:	add	r3, pc
   32942:	blx	9040 <__fprintf_chk@plt+0x4>
   32946:	bl	32870 <btrfs_del_inode_ref@@Base+0x180>
   3294a:	blx	91c0 <abort@plt>
   3294e:	nop
   32950:	strh	r6, [r5, #30]
   32952:	movs	r3, r0
   32954:	lsls	r4, r3, #10
   32956:	movs	r0, r0
   32958:	rev	r2, r4
   3295a:	movs	r0, r0
   3295c:	subs	r3, #162	; 0xa2
   3295e:	movs	r1, r0
   32960:	push	{r3, lr}
   32962:	cbz	r3, 32968 <btrfs_del_inode_ref@@Base+0x278>
   32964:	bl	32924 <btrfs_del_inode_ref@@Base+0x234>
   32968:	pop	{r3, pc}

0003296a <btrfs_insert_file_extent@@Base>:
   3296a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3296e:	sub	sp, #60	; 0x3c
   32970:	mov	r8, r3
   32972:	mov	r6, r1
   32974:	ldr	r3, [sp, #96]	; 0x60
   32976:	mov	r5, r0
   32978:	str	r2, [sp, #16]
   3297a:	movs	r0, #0
   3297c:	ldr	r2, [pc, #312]	; (32ab8 <btrfs_insert_file_extent@@Base+0x14e>)
   3297e:	str	r3, [sp, #12]
   32980:	ldr	r3, [pc, #312]	; (32abc <btrfs_insert_file_extent@@Base+0x152>)
   32982:	add	r2, pc
   32984:	ldr	r1, [sp, #100]	; 0x64
   32986:	ldrd	r7, fp, [sp, #112]	; 0x70
   3298a:	ldr	r3, [r2, r3]
   3298c:	ldrd	sl, r9, [sp, #120]	; 0x78
   32990:	ldr	r3, [r3, #0]
   32992:	str	r3, [sp, #52]	; 0x34
   32994:	mov.w	r3, #0
   32998:	ldr.w	r3, [r6, #464]	; 0x1d0
   3299c:	ldr.w	r3, [r3, #308]	; 0x134
   329a0:	ldr.w	ip, [r3, #188]	; 0xbc
   329a4:	mov	r3, r0
   329a6:	and.w	r2, ip, #512	; 0x200
   329aa:	orrs	r3, r2
   329ac:	ldrd	r3, r4, [sp, #104]	; 0x68
   329b0:	beq.n	329ba <btrfs_insert_file_extent@@Base+0x50>
   329b2:	orrs	r3, r4
   329b4:	bne.n	329c2 <btrfs_insert_file_extent@@Base+0x58>
   329b6:	mov	r6, r0
   329b8:	b.n	32a94 <btrfs_insert_file_extent@@Base+0x12a>
   329ba:	orrs	r3, r4
   329bc:	itt	eq
   329be:	moveq	r7, r0
   329c0:	moveq	fp, r7
   329c2:	str	r1, [sp, #20]
   329c4:	bl	1c6f0 <btrfs_alloc_path@@Base>
   329c8:	mov	r4, r0
   329ca:	cmp	r0, #0
   329cc:	beq.n	32aa8 <btrfs_insert_file_extent@@Base+0x13e>
   329ce:	ldr	r3, [sp, #16]
   329d0:	mov	r2, r0
   329d2:	ldr	r1, [sp, #20]
   329d4:	mov	r0, r5
   329d6:	strd	r3, r8, [sp, #32]
   329da:	mov.w	r8, #1
   329de:	ldr	r3, [sp, #12]
   329e0:	str.w	r1, [sp, #45]	; 0x2d
   329e4:	mov	r1, r6
   329e6:	str.w	r8, [sp, #4]
   329ea:	str.w	r3, [sp, #41]	; 0x29
   329ee:	movs	r3, #108	; 0x6c
   329f0:	strb.w	r3, [sp, #40]	; 0x28
   329f4:	movs	r3, #53	; 0x35
   329f6:	str	r3, [sp, #28]
   329f8:	add	r3, sp, #28
   329fa:	str	r3, [sp, #0]
   329fc:	add	r3, sp, #32
   329fe:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   32a02:	subs	r6, r0, #0
   32a04:	blt.n	32a8e <btrfs_insert_file_extent@@Base+0x124>
   32a06:	ldr	r1, [pc, #184]	; (32ac0 <btrfs_insert_file_extent@@Base+0x156>)
   32a08:	mov	r3, r6
   32a0a:	ldr	r0, [pc, #184]	; (32ac4 <btrfs_insert_file_extent@@Base+0x15a>)
   32a0c:	movs	r2, #67	; 0x43
   32a0e:	add	r1, pc
   32a10:	add	r0, pc
   32a12:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   32a16:	ldr	r0, [r4, #0]
   32a18:	ldr	r3, [r4, #32]
   32a1a:	movs	r2, #25
   32a1c:	add.w	ip, r0, #96	; 0x60
   32a20:	mla	r3, r2, r3, ip
   32a24:	ldr	r2, [sp, #104]	; 0x68
   32a26:	ldr.w	r1, [r3, #118]	; 0x76
   32a2a:	adds	r1, #101	; 0x65
   32a2c:	add.w	r3, ip, r1
   32a30:	str.w	r2, [r3, #21]
   32a34:	ldr	r2, [sp, #108]	; 0x6c
   32a36:	str.w	r7, [r3, #29]
   32a3a:	str.w	fp, [r3, #33]	; 0x21
   32a3e:	str.w	r2, [r3, #25]
   32a42:	movs	r2, #0
   32a44:	str.w	sl, [r3, #45]	; 0x2d
   32a48:	strb.w	r2, [r3, #37]	; 0x25
   32a4c:	strb.w	r2, [r3, #38]	; 0x26
   32a50:	strb.w	r2, [r3, #39]	; 0x27
   32a54:	strb.w	r2, [r3, #40]	; 0x28
   32a58:	strb.w	r2, [r3, #41]	; 0x29
   32a5c:	strb.w	r2, [r3, #42]	; 0x2a
   32a60:	strb.w	r2, [r3, #43]	; 0x2b
   32a64:	strb.w	r2, [r3, #44]	; 0x2c
   32a68:	str.w	r9, [r3, #49]	; 0x31
   32a6c:	str.w	sl, [r3, #8]
   32a70:	str.w	r9, [r3, #12]
   32a74:	ldrd	r7, r5, [r5, #8]
   32a78:	str.w	r7, [ip, r1]
   32a7c:	str	r5, [r3, #4]
   32a7e:	strb.w	r8, [r3, #20]
   32a82:	strb	r2, [r3, #16]
   32a84:	strb	r2, [r3, #17]
   32a86:	strb	r2, [r3, #18]
   32a88:	strb	r2, [r3, #19]
   32a8a:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   32a8e:	mov	r0, r4
   32a90:	bl	1c71e <btrfs_free_path@@Base>
   32a94:	ldr	r2, [pc, #48]	; (32ac8 <btrfs_insert_file_extent@@Base+0x15e>)
   32a96:	ldr	r3, [pc, #36]	; (32abc <btrfs_insert_file_extent@@Base+0x152>)
   32a98:	add	r2, pc
   32a9a:	ldr	r3, [r2, r3]
   32a9c:	ldr	r2, [r3, #0]
   32a9e:	ldr	r3, [sp, #52]	; 0x34
   32aa0:	eors	r2, r3
   32aa2:	beq.n	32aae <btrfs_insert_file_extent@@Base+0x144>
   32aa4:	blx	8c90 <__stack_chk_fail@plt>
   32aa8:	mvn.w	r6, #11
   32aac:	b.n	32a94 <btrfs_insert_file_extent@@Base+0x12a>
   32aae:	mov	r0, r6
   32ab0:	add	sp, #60	; 0x3c
   32ab2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ab6:	nop
   32ab8:	strh	r6, [r2, #28]
   32aba:	movs	r3, r0
   32abc:	lsls	r0, r1, #10
   32abe:	movs	r0, r0
   32ac0:	subs	r2, #246	; 0xf6
   32ac2:	movs	r1, r0
   32ac4:	bne.n	32b2c <btrfs_insert_inline_extent@@Base+0x60>
   32ac6:	movs	r0, r0
   32ac8:	strh	r0, [r0, #20]
   32aca:	movs	r3, r0

00032acc <btrfs_insert_inline_extent@@Base>:
   32acc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ad0:	mov	sl, r2
   32ad2:	ldr	r2, [pc, #208]	; (32ba4 <btrfs_insert_inline_extent@@Base+0xd8>)
   32ad4:	mov	r4, r3
   32ad6:	ldr	r3, [pc, #208]	; (32ba8 <btrfs_insert_inline_extent@@Base+0xdc>)
   32ad8:	sub	sp, #52	; 0x34
   32ada:	add	r2, pc
   32adc:	mov	r9, r0
   32ade:	str	r1, [sp, #12]
   32ae0:	ldr	r3, [r2, r3]
   32ae2:	ldrd	r8, fp, [sp, #88]	; 0x58
   32ae6:	ldrd	r7, r6, [sp, #96]	; 0x60
   32aea:	ldr	r3, [r3, #0]
   32aec:	str	r3, [sp, #44]	; 0x2c
   32aee:	mov.w	r3, #0
   32af2:	bl	1c6f0 <btrfs_alloc_path@@Base>
   32af6:	mov	r5, r0
   32af8:	cmp	r0, #0
   32afa:	beq.n	32b94 <btrfs_insert_inline_extent@@Base+0xc8>
   32afc:	movs	r3, #108	; 0x6c
   32afe:	mov	r2, r0
   32b00:	strb.w	r3, [sp, #32]
   32b04:	mov	r0, r9
   32b06:	add.w	r3, r6, #21
   32b0a:	ldr	r1, [sp, #12]
   32b0c:	str	r3, [sp, #20]
   32b0e:	movs	r3, #1
   32b10:	str	r3, [sp, #4]
   32b12:	add	r3, sp, #20
   32b14:	str	r3, [sp, #0]
   32b16:	add	r3, sp, #24
   32b18:	strd	sl, r4, [sp, #24]
   32b1c:	str.w	r8, [sp, #33]	; 0x21
   32b20:	str.w	fp, [sp, #37]	; 0x25
   32b24:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   32b28:	mov	r4, r0
   32b2a:	cbnz	r0, 32b7a <btrfs_insert_inline_extent@@Base+0xae>
   32b2c:	ldr	r0, [r5, #0]
   32b2e:	movs	r2, #25
   32b30:	ldr	r3, [r5, #32]
   32b32:	add.w	r1, r0, #96	; 0x60
   32b36:	ldrd	sl, lr, [r9, #8]
   32b3a:	str	r0, [sp, #12]
   32b3c:	mla	r3, r2, r3, r1
   32b40:	ldr.w	ip, [r3, #118]	; 0x76
   32b44:	add.w	r2, ip, #101	; 0x65
   32b48:	adds	r3, r1, r2
   32b4a:	str.w	sl, [r1, r2]
   32b4e:	mov	r1, r7
   32b50:	str.w	lr, [r3, #4]
   32b54:	strb	r4, [r3, #20]
   32b56:	str	r6, [r3, #8]
   32b58:	str	r4, [r3, #12]
   32b5a:	strb	r4, [r3, #16]
   32b5c:	strb	r4, [r3, #17]
   32b5e:	strb	r4, [r3, #18]
   32b60:	strb	r4, [r3, #19]
   32b62:	mov	r3, r6
   32b64:	ldr.w	r2, [sp, #33]	; 0x21
   32b68:	rsb	r2, r2, #122	; 0x7a
   32b6c:	add	r2, r8
   32b6e:	add	r2, ip
   32b70:	bl	1bbd0 <write_extent_buffer@@Base>
   32b74:	ldr	r0, [sp, #12]
   32b76:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   32b7a:	mov	r0, r5
   32b7c:	bl	1c71e <btrfs_free_path@@Base>
   32b80:	ldr	r2, [pc, #40]	; (32bac <btrfs_insert_inline_extent@@Base+0xe0>)
   32b82:	ldr	r3, [pc, #36]	; (32ba8 <btrfs_insert_inline_extent@@Base+0xdc>)
   32b84:	add	r2, pc
   32b86:	ldr	r3, [r2, r3]
   32b88:	ldr	r2, [r3, #0]
   32b8a:	ldr	r3, [sp, #44]	; 0x2c
   32b8c:	eors	r2, r3
   32b8e:	beq.n	32b9a <btrfs_insert_inline_extent@@Base+0xce>
   32b90:	blx	8c90 <__stack_chk_fail@plt>
   32b94:	mvn.w	r4, #11
   32b98:	b.n	32b80 <btrfs_insert_inline_extent@@Base+0xb4>
   32b9a:	mov	r0, r4
   32b9c:	add	sp, #52	; 0x34
   32b9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ba2:	nop
   32ba4:	strh	r6, [r7, #16]
   32ba6:	movs	r3, r0
   32ba8:	lsls	r0, r1, #10
   32baa:	movs	r0, r0
   32bac:	strh	r4, [r2, #12]
   32bae:	movs	r3, r0

00032bb0 <btrfs_csum_file_block@@Base>:
   32bb0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32bb4:	mov	fp, r0
   32bb6:	vpush	{d8-d9}
   32bba:	mov	r6, r1
   32bbc:	sub	sp, #140	; 0x8c
   32bbe:	strd	r2, r3, [sp, #24]
   32bc2:	ldr	r3, [sp, #200]	; 0xc8
   32bc4:	ldr.w	r2, [pc, #1044]	; 32fdc <btrfs_csum_file_block@@Base+0x42c>
   32bc8:	ldrd	r7, r8, [sp, #192]	; 0xc0
   32bcc:	vmov	s18, r3
   32bd0:	ldr.w	r3, [pc, #1036]	; 32fe0 <btrfs_csum_file_block@@Base+0x430>
   32bd4:	add	r2, pc
   32bd6:	add	r3, pc
   32bd8:	str	r3, [sp, #36]	; 0x24
   32bda:	ldr.w	r3, [pc, #1032]	; 32fe4 <btrfs_csum_file_block@@Base+0x434>
   32bde:	ldr	r3, [r2, r3]
   32be0:	ldr	r3, [r3, #0]
   32be2:	str	r3, [sp, #132]	; 0x84
   32be4:	mov.w	r3, #0
   32be8:	ldr.w	r3, [r1, #464]	; 0x1d0
   32bec:	ldr.w	r2, [r3, #388]	; 0x184
   32bf0:	ldr.w	r0, [r3, #308]	; 0x134
   32bf4:	vmov	s16, r2
   32bf8:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   32bfc:	ldr.w	r3, [r6, #464]	; 0x1d0
   32c00:	ldr.w	r3, [r3, #308]	; 0x134
   32c04:	ldrh.w	r3, [r3, #196]	; 0xc4
   32c08:	vmov	s17, r3
   32c0c:	mov	r5, r0
   32c0e:	bl	1c6f0 <btrfs_alloc_path@@Base>
   32c12:	mov	r4, r0
   32c14:	cmp	r0, #0
   32c16:	beq.w	32fca <btrfs_csum_file_block@@Base+0x41a>
   32c1a:	mvn.w	r2, #9
   32c1e:	mov.w	r3, #4294967295	; 0xffffffff
   32c22:	strd	r2, r3, [sp, #40]	; 0x28
   32c26:	mov.w	r9, #128	; 0x80
   32c2a:	ldr.w	r3, [r6, #464]	; 0x1d0
   32c2e:	str.w	r7, [sp, #49]	; 0x31
   32c32:	str.w	r8, [sp, #53]	; 0x35
   32c36:	ldr.w	r0, [r3, #308]	; 0x134
   32c3a:	strb.w	r9, [sp, #48]	; 0x30
   32c3e:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   32c42:	mvn.w	r2, #9
   32c46:	mov.w	r3, #4294967295	; 0xffffffff
   32c4a:	movs	r1, #1
   32c4c:	strd	r2, r3, [sp, #60]	; 0x3c
   32c50:	movs	r3, #0
   32c52:	add	r2, sp, #60	; 0x3c
   32c54:	strd	r3, r1, [sp]
   32c58:	mov	r3, r4
   32c5a:	mov	r1, r6
   32c5c:	str.w	r7, [sp, #69]	; 0x45
   32c60:	str.w	r8, [sp, #73]	; 0x49
   32c64:	strb.w	r9, [sp, #68]	; 0x44
   32c68:	mov	sl, r0
   32c6a:	mov	r0, fp
   32c6c:	bl	1eadc <btrfs_search_slot@@Base>
   32c70:	cmp	r0, #0
   32c72:	blt.n	32c82 <btrfs_csum_file_block@@Base+0xd2>
   32c74:	ldr.w	r9, [r4]
   32c78:	beq.n	32ce0 <btrfs_csum_file_block@@Base+0x130>
   32c7a:	ldr	r2, [r4, #32]
   32c7c:	cbnz	r2, 32c86 <btrfs_csum_file_block@@Base+0xd6>
   32c7e:	mvn.w	r0, #1
   32c82:	mov	r8, r0
   32c84:	b.n	32cfe <btrfs_csum_file_block@@Base+0x14e>
   32c86:	subs	r2, #1
   32c88:	add	r1, sp, #80	; 0x50
   32c8a:	mov	r0, r9
   32c8c:	str	r2, [r4, #32]
   32c8e:	bl	328bc <btrfs_del_inode_ref@@Base+0x1cc>
   32c92:	ldrb.w	r3, [sp, #88]	; 0x58
   32c96:	cmp	r3, #128	; 0x80
   32c98:	bne.n	32c7e <btrfs_csum_file_block@@Base+0xce>
   32c9a:	ldr.w	r3, [r6, #464]	; 0x1d0
   32c9e:	ldr.w	r0, [sp, #89]	; 0x59
   32ca2:	ldr.w	r1, [sp, #93]	; 0x5d
   32ca6:	subs	r0, r7, r0
   32ca8:	ldr.w	r2, [r3, #388]	; 0x184
   32cac:	sbc.w	r1, r8, r1
   32cb0:	movs	r3, #0
   32cb2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   32cb6:	ldr	r3, [r4, #32]
   32cb8:	movs	r2, #25
   32cba:	mla	r3, r2, r3, r9
   32cbe:	strd	r0, r1, [sp, #16]
   32cc2:	mov	r1, sl
   32cc4:	ldr.w	r0, [r3, #218]	; 0xda
   32cc8:	bl	3d838 <btrfs_util_strerror@@Base+0x290>
   32ccc:	ldrd	r2, r3, [sp, #16]
   32cd0:	asrs	r1, r0, #31
   32cd2:	cmp	r3, r1
   32cd4:	it	eq
   32cd6:	cmpeq	r2, r0
   32cd8:	bcc.n	32ce8 <btrfs_csum_file_block@@Base+0x138>
   32cda:	mvn.w	r0, #26
   32cde:	b.n	32c82 <btrfs_csum_file_block@@Base+0xd2>
   32ce0:	movs	r2, #0
   32ce2:	movs	r3, #0
   32ce4:	strd	r2, r3, [sp, #16]
   32ce8:	ldr	r3, [r4, #32]
   32cea:	movs	r2, #25
   32cec:	mla	r3, r2, r3, r9
   32cf0:	ldr.w	r8, [r3, #214]	; 0xd6
   32cf4:	ldr	r3, [sp, #16]
   32cf6:	add.w	r8, r8, #101	; 0x65
   32cfa:	mla	r8, sl, r3, r8
   32cfe:	cmn.w	r8, #4096	; 0x1000
   32d02:	ldr	r2, [r4, #0]
   32d04:	bhi.n	32d30 <btrfs_csum_file_block@@Base+0x180>
   32d06:	mov	r6, r2
   32d08:	add	r7, sp, #100	; 0x64
   32d0a:	vmov	r1, s18
   32d0e:	ldr	r3, [sp, #204]	; 0xcc
   32d10:	mov	r2, r7
   32d12:	vmov	r0, s17
   32d16:	bl	208e6 <btrfs_csum_data@@Base>
   32d1a:	mov	r1, r7
   32d1c:	mov	r3, r5
   32d1e:	mov	r2, r8
   32d20:	mov	r0, r6
   32d22:	movs	r7, #0
   32d24:	bl	1bbd0 <write_extent_buffer@@Base>
   32d28:	ldr	r0, [r4, #0]
   32d2a:	bl	21db0 <btrfs_mark_buffer_dirty@@Base>
   32d2e:	b.n	32ea8 <btrfs_csum_file_block@@Base+0x2f8>
   32d30:	cmn.w	r8, #27
   32d34:	ldr	r0, [r4, #32]
   32d36:	bne.n	32d9c <btrfs_csum_file_block@@Base+0x1ec>
   32d38:	mov.w	sl, #25
   32d3c:	mov	r1, r5
   32d3e:	mla	r0, sl, r0, r2
   32d42:	ldr.w	r0, [r0, #218]	; 0xda
   32d46:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   32d4a:	ldr.w	r3, [r6, #464]	; 0x1d0
   32d4e:	mov	r1, r5
   32d50:	mov	r7, r0
   32d52:	ldr.w	r0, [r3, #384]	; 0x180
   32d56:	subs	r0, #151	; 0x97
   32d58:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   32d5c:	subs	r3, r0, #1
   32d5e:	cmp	r7, r3
   32d60:	bcs.w	32eec <btrfs_csum_file_block@@Base+0x33c>
   32d64:	mov	r0, r4
   32d66:	mov.w	r8, #1
   32d6a:	bl	1c6f8 <btrfs_release_path@@Base>
   32d6e:	add	r2, sp, #40	; 0x28
   32d70:	mov	r3, r4
   32d72:	mov	r1, r6
   32d74:	mov	r0, fp
   32d76:	strd	r5, r8, [sp]
   32d7a:	bl	1eadc <btrfs_search_slot@@Base>
   32d7e:	subs	r7, r0, #0
   32d80:	blt.w	32ea8 <btrfs_csum_file_block@@Base+0x2f8>
   32d84:	bne.w	32ef2 <btrfs_csum_file_block@@Base+0x342>
   32d88:	ldr	r1, [pc, #604]	; (32fe8 <btrfs_csum_file_block@@Base+0x438>)
   32d8a:	mov	r3, r8
   32d8c:	ldr	r0, [pc, #604]	; (32fec <btrfs_csum_file_block@@Base+0x43c>)
   32d8e:	movw	r2, #265	; 0x109
   32d92:	add	r1, pc
   32d94:	adds	r1, #25
   32d96:	add	r0, pc
   32d98:	bl	32924 <btrfs_del_inode_ref@@Base+0x234>
   32d9c:	ldr.w	r3, [r2, #192]	; 0xc0
   32da0:	subs	r3, #1
   32da2:	cmp	r3, r0
   32da4:	bls.w	32ec4 <btrfs_csum_file_block@@Base+0x314>
   32da8:	adds	r2, r0, #1
   32daa:	ldr	r0, [r4, #0]
   32dac:	add	r1, sp, #80	; 0x50
   32dae:	bl	328bc <btrfs_del_inode_ref@@Base+0x1cc>
   32db2:	ldrd	r2, r3, [sp, #80]	; 0x50
   32db6:	mov.w	r1, #4294967295	; 0xffffffff
   32dba:	mvn.w	r0, #9
   32dbe:	cmp	r3, r1
   32dc0:	it	eq
   32dc2:	cmpeq	r2, r0
   32dc4:	bne.w	32eda <btrfs_csum_file_block@@Base+0x32a>
   32dc8:	ldrb.w	r3, [sp, #88]	; 0x58
   32dcc:	cmp	r3, #128	; 0x80
   32dce:	bne.w	32eda <btrfs_csum_file_block@@Base+0x32a>
   32dd2:	ldr.w	r7, [sp, #89]	; 0x59
   32dd6:	mov.w	r9, #1
   32dda:	ldr.w	r8, [sp, #93]	; 0x5d
   32dde:	mov	r0, r4
   32de0:	bl	1c6f8 <btrfs_release_path@@Base>
   32de4:	cmp.w	r9, #0
   32de8:	beq.w	32fc0 <btrfs_csum_file_block@@Base+0x410>
   32dec:	ldrd	r0, r1, [sp, #24]
   32df0:	mov	r3, r8
   32df2:	ldr.w	r9, [sp, #53]	; 0x35
   32df6:	mov	r2, r7
   32df8:	cmp	r1, r8
   32dfa:	ldr.w	r8, [sp, #49]	; 0x31
   32dfe:	it	eq
   32e00:	cmpeq	r0, r7
   32e02:	mov.w	sl, #0
   32e06:	itt	cc
   32e08:	movcc	r2, r0
   32e0a:	movcc	r3, r1
   32e0c:	subs.w	r8, r2, r8
   32e10:	mov	r1, r5
   32e12:	sbc.w	r9, r3, r9
   32e16:	ldr.w	r3, [r6, #464]	; 0x1d0
   32e1a:	ldr.w	r0, [r3, #384]	; 0x180
   32e1e:	subs	r0, #151	; 0x97
   32e20:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   32e24:	vmov	r2, s16
   32e28:	mov	r3, sl
   32e2a:	mov	r1, r9
   32e2c:	subs	r7, r0, #1
   32e2e:	mov	r0, r8
   32e30:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   32e34:	mov	r2, r7
   32e36:	mov	r8, r0
   32e38:	mov	r9, r1
   32e3a:	orrs.w	r3, r8, r9
   32e3e:	itt	eq
   32e40:	moveq.w	r8, #1
   32e44:	moveq.w	r9, #0
   32e48:	cmp	r9, sl
   32e4a:	it	eq
   32e4c:	cmpeq	r8, r7
   32e4e:	it	cc
   32e50:	movcc	r2, r8
   32e52:	muls	r2, r5
   32e54:	add	r3, sp, #60	; 0x3c
   32e56:	str	r2, [sp, #60]	; 0x3c
   32e58:	mov.w	r8, #1
   32e5c:	str	r3, [sp, #0]
   32e5e:	mov	r2, r4
   32e60:	add	r3, sp, #40	; 0x28
   32e62:	mov	r1, r6
   32e64:	mov	r0, fp
   32e66:	str.w	r8, [sp, #4]
   32e6a:	bl	1f8ac <btrfs_insert_empty_items@@Base>
   32e6e:	subs	r7, r0, #0
   32e70:	blt.n	32ea8 <btrfs_csum_file_block@@Base+0x2f8>
   32e72:	beq.w	32fc4 <btrfs_csum_file_block@@Base+0x414>
   32e76:	ldr	r3, [pc, #376]	; (32ff0 <btrfs_csum_file_block@@Base+0x440>)
   32e78:	mov	r1, r8
   32e7a:	ldr	r2, [sp, #36]	; 0x24
   32e7c:	ldr	r0, [r2, r3]
   32e7e:	ldr	r3, [pc, #372]	; (32ff4 <btrfs_csum_file_block@@Base+0x444>)
   32e80:	ldr	r2, [pc, #372]	; (32ff8 <btrfs_csum_file_block@@Base+0x448>)
   32e82:	add	r3, pc
   32e84:	str	r3, [sp, #8]
   32e86:	ldr	r3, [pc, #372]	; (32ffc <btrfs_csum_file_block@@Base+0x44c>)
   32e88:	add	r2, pc
   32e8a:	str.w	r8, [sp, #12]
   32e8e:	add	r3, pc
   32e90:	adds	r3, #25
   32e92:	str	r3, [sp, #4]
   32e94:	mov.w	r3, #308	; 0x134
   32e98:	str	r3, [sp, #0]
   32e9a:	ldr	r3, [pc, #356]	; (33000 <btrfs_csum_file_block@@Base+0x450>)
   32e9c:	ldr	r0, [r0, #0]
   32e9e:	add	r3, pc
   32ea0:	blx	9040 <__fprintf_chk@plt+0x4>
   32ea4:	bl	32870 <btrfs_del_inode_ref@@Base+0x180>
   32ea8:	mov	r0, r4
   32eaa:	bl	1c71e <btrfs_free_path@@Base>
   32eae:	ldr	r2, [pc, #340]	; (33004 <btrfs_csum_file_block@@Base+0x454>)
   32eb0:	ldr	r3, [pc, #304]	; (32fe4 <btrfs_csum_file_block@@Base+0x434>)
   32eb2:	add	r2, pc
   32eb4:	ldr	r3, [r2, r3]
   32eb6:	ldr	r2, [r3, #0]
   32eb8:	ldr	r3, [sp, #132]	; 0x84
   32eba:	eors	r2, r3
   32ebc:	beq.w	32fd0 <btrfs_csum_file_block@@Base+0x420>
   32ec0:	blx	8c90 <__stack_chk_fail@plt>
   32ec4:	movs	r3, #0
   32ec6:	mov	r1, r4
   32ec8:	strb.w	r3, [r4, #65]	; 0x41
   32ecc:	ldr.w	r0, [r6, #464]	; 0x1d0
   32ed0:	bl	1ff10 <btrfs_next_sibling_tree_block@@Base>
   32ed4:	cmp	r0, #1
   32ed6:	mov	r2, r0
   32ed8:	bne.n	32ee6 <btrfs_csum_file_block@@Base+0x336>
   32eda:	mov.w	r9, #1
   32ede:	mov.w	r7, #4294967295	; 0xffffffff
   32ee2:	mov	r8, r7
   32ee4:	b.n	32dde <btrfs_csum_file_block@@Base+0x22e>
   32ee6:	cmp	r0, #0
   32ee8:	beq.w	32daa <btrfs_csum_file_block@@Base+0x1fa>
   32eec:	mov.w	r9, #0
   32ef0:	b.n	32ede <btrfs_csum_file_block@@Base+0x32e>
   32ef2:	ldr	r2, [r4, #32]
   32ef4:	cmp	r2, #0
   32ef6:	beq.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32ef8:	ldr	r7, [r4, #0]
   32efa:	subs	r2, #1
   32efc:	add	r1, sp, #80	; 0x50
   32efe:	str	r2, [r4, #32]
   32f00:	mov	r0, r7
   32f02:	bl	328bc <btrfs_del_inode_ref@@Base+0x1cc>
   32f06:	ldrd	r2, r3, [sp, #80]	; 0x50
   32f0a:	mov.w	r1, #4294967295	; 0xffffffff
   32f0e:	mvn.w	r0, #9
   32f12:	cmp	r3, r1
   32f14:	it	eq
   32f16:	cmpeq	r2, r0
   32f18:	bne.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32f1a:	ldrb.w	r3, [sp, #88]	; 0x58
   32f1e:	cmp	r3, #128	; 0x80
   32f20:	bne.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32f22:	ldr.w	lr, [sp, #49]	; 0x31
   32f26:	movs	r3, #0
   32f28:	ldr.w	r0, [sp, #89]	; 0x59
   32f2c:	ldr.w	ip, [sp, #53]	; 0x35
   32f30:	ldr.w	r1, [sp, #93]	; 0x5d
   32f34:	subs.w	r0, lr, r0
   32f38:	vmov	r2, s16
   32f3c:	sbc.w	r1, ip, r1
   32f40:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   32f44:	ldr.w	r3, [r6, #464]	; 0x1d0
   32f48:	mov	r8, r0
   32f4a:	ldr.w	r0, [r3, #384]	; 0x180
   32f4e:	mov	r9, r1
   32f50:	mov	r1, r5
   32f52:	subs	r0, #151	; 0x97
   32f54:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   32f58:	movs	r1, #0
   32f5a:	cmp	r9, r1
   32f5c:	add.w	r0, r0, #4294967295	; 0xffffffff
   32f60:	it	eq
   32f62:	cmpeq	r8, r0
   32f64:	bcs.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32f66:	ldr	r3, [r4, #32]
   32f68:	mov	r1, r5
   32f6a:	mla	r7, sl, r3, r7
   32f6e:	ldr.w	r7, [r7, #218]	; 0xda
   32f72:	mov	r0, r7
   32f74:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   32f78:	movs	r1, #0
   32f7a:	cmp	r9, r1
   32f7c:	it	eq
   32f7e:	cmpeq	r8, r0
   32f80:	bcc.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32f82:	mla	r0, r5, r8, r5
   32f86:	subs	r0, r0, r7
   32f88:	cmp	r0, r5
   32f8a:	bne.n	32eec <btrfs_csum_file_block@@Base+0x33c>
   32f8c:	mov	r2, r5
   32f8e:	mov	r1, r4
   32f90:	mov	r0, r6
   32f92:	bl	1e8d0 <btrfs_extend_item@@Base>
   32f96:	ldr	r1, [pc, #112]	; (33008 <btrfs_csum_file_block@@Base+0x458>)
   32f98:	mov.w	r2, #286	; 0x11e
   32f9c:	add	r1, pc
   32f9e:	adds	r1, #25
   32fa0:	mov	r3, r0
   32fa2:	ldr	r0, [pc, #104]	; (3300c <btrfs_csum_file_block@@Base+0x45c>)
   32fa4:	add	r0, pc
   32fa6:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   32faa:	ldr	r6, [r4, #0]
   32fac:	movs	r2, #25
   32fae:	ldr	r3, [r4, #32]
   32fb0:	mla	r3, r2, r3, r6
   32fb4:	ldr.w	r0, [r3, #214]	; 0xd6
   32fb8:	adds	r0, #101	; 0x65
   32fba:	mla	r8, r5, r8, r0
   32fbe:	b.n	32d08 <btrfs_csum_file_block@@Base+0x158>
   32fc0:	mov	r2, r5
   32fc2:	b.n	32e54 <btrfs_csum_file_block@@Base+0x2a4>
   32fc4:	mov.w	r8, #0
   32fc8:	b.n	32faa <btrfs_csum_file_block@@Base+0x3fa>
   32fca:	mvn.w	r7, #11
   32fce:	b.n	32eae <btrfs_csum_file_block@@Base+0x2fe>
   32fd0:	mov	r0, r7
   32fd2:	add	sp, #140	; 0x8c
   32fd4:	vpop	{d8-d9}
   32fd8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fdc:	strh	r4, [r0, #10]
   32fde:	movs	r3, r0
   32fe0:	strh	r2, [r0, #10]
   32fe2:	movs	r3, r0
   32fe4:	lsls	r0, r1, #10
   32fe6:	movs	r0, r0
   32fe8:	adds	r7, #114	; 0x72
   32fea:	movs	r1, r0
   32fec:	lsls	r4, r3, #16
   32fee:	movs	r1, r0
   32ff0:	lsls	r4, r3, #10
   32ff2:	movs	r0, r0
   32ff4:	lsls	r0, r6, #12
   32ff6:	movs	r1, r0
   32ff8:	stmia	r6!, {r0, r2, r5, r7}
   32ffa:	movs	r0, r0
   32ffc:	adds	r6, #118	; 0x76
   32ffe:	movs	r1, r0
   33000:	adds	r6, #68	; 0x44
   33002:	movs	r1, r0
   33004:	ldrb	r6, [r4, #25]
   33006:	movs	r3, r0
   33008:	adds	r5, #104	; 0x68
   3300a:	movs	r1, r0
   3300c:	ldmia	r3, {r1, r2, r3, r4, r7}
	...

00033010 <btrfs_del_csums@@Base>:
   33010:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33014:	sub	sp, #100	; 0x64
   33016:	mov	sl, r0
   33018:	strd	r2, r3, [sp, #8]
   3301c:	ldr	r3, [sp, #136]	; 0x88
   3301e:	ldr	r2, [pc, #832]	; (33360 <btrfs_del_csums@@Base+0x350>)
   33020:	str	r3, [sp, #60]	; 0x3c
   33022:	add	r2, pc
   33024:	ldr	r3, [sp, #140]	; 0x8c
   33026:	str	r3, [sp, #64]	; 0x40
   33028:	ldr	r3, [pc, #824]	; (33364 <btrfs_del_csums@@Base+0x354>)
   3302a:	ldr	r3, [r2, r3]
   3302c:	ldr	r2, [sp, #60]	; 0x3c
   3302e:	ldr	r3, [r3, #0]
   33030:	str	r3, [sp, #92]	; 0x5c
   33032:	mov.w	r3, #0
   33036:	ldr	r3, [sp, #8]
   33038:	adds.w	r8, r3, r2
   3303c:	ldr	r3, [sp, #12]
   3303e:	ldr	r2, [sp, #64]	; 0x40
   33040:	adc.w	r9, r3, r2
   33044:	ldr	r3, [r0, #0]
   33046:	ldr.w	r0, [r3, #308]	; 0x134
   3304a:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   3304e:	ldr.w	r3, [sl]
   33052:	ldr.w	r2, [r3, #388]	; 0x184
   33056:	ldr	r5, [r3, #40]	; 0x28
   33058:	str	r2, [sp, #48]	; 0x30
   3305a:	str	r0, [sp, #44]	; 0x2c
   3305c:	bl	1c6f0 <btrfs_alloc_path@@Base>
   33060:	mov	r4, r0
   33062:	cmp	r0, #0
   33064:	beq.w	33354 <btrfs_del_csums@@Base+0x344>
   33068:	adds.w	r3, r8, #4294967295	; 0xffffffff
   3306c:	str	r3, [sp, #52]	; 0x34
   3306e:	adc.w	r3, r9, #4294967295	; 0xffffffff
   33072:	str	r3, [sp, #56]	; 0x38
   33074:	add.w	r3, sp, #81	; 0x51
   33078:	str	r3, [sp, #40]	; 0x28
   3307a:	mvn.w	r2, #9
   3307e:	mov.w	r3, #4294967295	; 0xffffffff
   33082:	strd	r2, r3, [sp, #72]	; 0x48
   33086:	mov	r1, r5
   33088:	ldr	r2, [sp, #40]	; 0x28
   3308a:	mov	r0, sl
   3308c:	ldr	r3, [sp, #52]	; 0x34
   3308e:	str	r3, [r2, #0]
   33090:	ldr	r3, [sp, #56]	; 0x38
   33092:	str	r3, [r2, #4]
   33094:	movs	r3, #128	; 0x80
   33096:	movs	r2, #1
   33098:	strb.w	r3, [sp, #80]	; 0x50
   3309c:	mov.w	r3, #4294967295	; 0xffffffff
   330a0:	strd	r3, r2, [sp]
   330a4:	add	r2, sp, #72	; 0x48
   330a6:	mov	r3, r4
   330a8:	bl	1eadc <btrfs_search_slot@@Base>
   330ac:	cmp	r0, #0
   330ae:	ble.n	330bc <btrfs_del_csums@@Base+0xac>
   330b0:	ldr	r3, [r4, #32]
   330b2:	cmp	r3, #0
   330b4:	beq.w	33338 <btrfs_del_csums@@Base+0x328>
   330b8:	subs	r3, #1
   330ba:	str	r3, [r4, #32]
   330bc:	ldr	r6, [r4, #0]
   330be:	add	r7, sp, #72	; 0x48
   330c0:	ldr	r2, [r4, #32]
   330c2:	mov	r1, r7
   330c4:	mov	r0, r6
   330c6:	bl	328bc <btrfs_del_inode_ref@@Base+0x1cc>
   330ca:	ldrd	r2, r3, [sp, #72]	; 0x48
   330ce:	mov.w	r1, #4294967295	; 0xffffffff
   330d2:	mvn.w	r0, #9
   330d6:	cmp	r3, r1
   330d8:	it	eq
   330da:	cmpeq	r2, r0
   330dc:	bne.w	33338 <btrfs_del_csums@@Base+0x328>
   330e0:	ldrb.w	r3, [sp, #80]	; 0x50
   330e4:	cmp	r3, #128	; 0x80
   330e6:	bne.w	33338 <btrfs_del_csums@@Base+0x328>
   330ea:	ldr.w	r3, [sp, #81]	; 0x51
   330ee:	str	r3, [sp, #16]
   330f0:	ldr.w	r3, [sp, #85]	; 0x55
   330f4:	str	r3, [sp, #20]
   330f6:	ldrd	r2, r3, [sp, #16]
   330fa:	cmp	r3, r9
   330fc:	it	eq
   330fe:	cmpeq	r2, r8
   33100:	bcs.w	33338 <btrfs_del_csums@@Base+0x328>
   33104:	ldr	r3, [r4, #32]
   33106:	ldr	r1, [sp, #44]	; 0x2c
   33108:	mov	fp, r3
   3310a:	movs	r3, #25
   3310c:	mla	r3, r3, fp, r6
   33110:	add.w	r2, r3, #197	; 0xc5
   33114:	str	r2, [sp, #68]	; 0x44
   33116:	ldr.w	r0, [r3, #218]	; 0xda
   3311a:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   3311e:	ldr	r3, [sp, #48]	; 0x30
   33120:	mov	r1, r3
   33122:	asrs	r2, r3, #31
   33124:	strd	r1, r2, [sp, #32]
   33128:	ldr	r1, [sp, #36]	; 0x24
   3312a:	umull	r2, r3, r3, r0
   3312e:	mla	r3, r0, r1, r3
   33132:	ldr	r1, [sp, #16]
   33134:	adds	r1, r1, r2
   33136:	str	r1, [sp, #24]
   33138:	ldr	r1, [sp, #20]
   3313a:	adc.w	r3, r1, r3
   3313e:	str	r3, [sp, #28]
   33140:	ldrd	r0, r1, [sp, #24]
   33144:	ldrd	r2, r3, [sp, #8]
   33148:	cmp	r3, r1
   3314a:	it	eq
   3314c:	cmpeq	r2, r0
   3314e:	bcs.w	33338 <btrfs_del_csums@@Base+0x328>
   33152:	ldrd	r2, r3, [sp, #16]
   33156:	ldrd	r0, r1, [sp, #8]
   3315a:	cmp	r3, r1
   3315c:	it	eq
   3315e:	cmpeq	r2, r0
   33160:	ldrd	r2, r3, [sp, #24]
   33164:	bcc.n	33194 <btrfs_del_csums@@Base+0x184>
   33166:	cmp	r9, r3
   33168:	it	eq
   3316a:	cmpeq	r8, r2
   3316c:	bcc.n	33228 <btrfs_del_csums@@Base+0x218>
   3316e:	movs	r3, #1
   33170:	mov	r2, r4
   33172:	mov	r1, r5
   33174:	str	r3, [sp, #0]
   33176:	mov	r0, sl
   33178:	mov	r3, fp
   3317a:	bl	1fc98 <btrfs_del_items@@Base>
   3317e:	ldr	r1, [pc, #488]	; (33368 <btrfs_del_csums@@Base+0x358>)
   33180:	mov.w	r2, #450	; 0x1c2
   33184:	add	r1, pc
   33186:	adds	r1, #47	; 0x2f
   33188:	mov	r3, r0
   3318a:	ldr	r0, [pc, #480]	; (3336c <btrfs_del_csums@@Base+0x35c>)
   3318c:	add	r0, pc
   3318e:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   33192:	b.n	33220 <btrfs_del_csums@@Base+0x210>
   33194:	cmp	r9, r3
   33196:	it	eq
   33198:	cmpeq	r8, r2
   3319a:	bcs.n	33228 <btrfs_del_csums@@Base+0x218>
   3319c:	ldr	r1, [sp, #8]
   3319e:	ldr	r0, [sp, #16]
   331a0:	ldrd	r2, r3, [sp, #32]
   331a4:	subs	r0, r1, r0
   331a6:	ldr	r1, [sp, #12]
   331a8:	mov	ip, r1
   331aa:	ldr	r1, [sp, #20]
   331ac:	sbc.w	r1, ip, r1
   331b0:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   331b4:	ldr	r3, [sp, #44]	; 0x2c
   331b6:	muls	r3, r0
   331b8:	ldrd	r0, r1, [sp, #60]	; 0x3c
   331bc:	mov	fp, r3
   331be:	ldrd	r2, r3, [sp, #32]
   331c2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   331c6:	ldr	r3, [sp, #68]	; 0x44
   331c8:	add.w	r2, fp, #101	; 0x65
   331cc:	ldr.w	r1, [r3, #17]
   331d0:	ldr	r3, [sp, #44]	; 0x2c
   331d2:	add	r2, r1
   331d4:	movs	r1, #0
   331d6:	muls	r3, r0
   331d8:	mov	r0, r6
   331da:	bl	1bc42 <memset_extent_buffer@@Base>
   331de:	ldr	r2, [sp, #40]	; 0x28
   331e0:	ldr	r3, [sp, #8]
   331e2:	mov	r1, r5
   331e4:	mov	r0, sl
   331e6:	str	r3, [r2, #0]
   331e8:	ldr	r3, [sp, #12]
   331ea:	str	r3, [r2, #4]
   331ec:	mov	r3, r7
   331ee:	mov	r2, r4
   331f0:	str.w	fp, [sp]
   331f4:	bl	1f660 <btrfs_split_item@@Base>
   331f8:	mov	r3, r0
   331fa:	cbz	r0, 33204 <btrfs_del_csums@@Base+0x1f4>
   331fc:	adds.w	r3, r0, #11
   33200:	it	ne
   33202:	movne	r3, #1
   33204:	ldr	r1, [pc, #360]	; (33370 <btrfs_del_csums@@Base+0x360>)
   33206:	movw	r2, #491	; 0x1eb
   3320a:	ldr	r0, [pc, #360]	; (33374 <btrfs_del_csums@@Base+0x364>)
   3320c:	add	r1, pc
   3320e:	adds	r1, #47	; 0x2f
   33210:	add	r0, pc
   33212:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   33216:	ldr	r3, [sp, #52]	; 0x34
   33218:	ldr	r2, [sp, #40]	; 0x28
   3321a:	str	r3, [r2, #0]
   3321c:	ldr	r3, [sp, #56]	; 0x38
   3321e:	str	r3, [r2, #4]
   33220:	mov	r0, r4
   33222:	bl	1c6f8 <btrfs_release_path@@Base>
   33226:	b.n	3307a <btrfs_del_csums@@Base+0x6a>
   33228:	ldr.w	r3, [r5, #464]	; 0x1d0
   3322c:	ldr.w	r0, [r3, #308]	; 0x134
   33230:	bl	1c6b0 <btrfs_super_csum_size@@Base>
   33234:	ldr.w	r3, [r5, #464]	; 0x1d0
   33238:	ldr	r1, [r4, #0]
   3323a:	ldr.w	r6, [sp, #81]	; 0x51
   3323e:	ldr.w	r2, [r3, #388]	; 0x184
   33242:	ldr	r3, [r4, #32]
   33244:	ldr.w	r7, [sp, #85]	; 0x55
   33248:	mov	fp, r6
   3324a:	str	r2, [sp, #32]
   3324c:	str	r0, [sp, #16]
   3324e:	movs	r0, #25
   33250:	mla	r3, r0, r3, r1
   33254:	ldr	r1, [sp, #16]
   33256:	ldr.w	r0, [r3, #218]	; 0xda
   3325a:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   3325e:	ldr	r2, [sp, #32]
   33260:	mov	ip, r7
   33262:	umlal	fp, ip, r2, r0
   33266:	ldrd	r0, r1, [sp, #8]
   3326a:	cmp	r7, r1
   3326c:	it	eq
   3326e:	cmpeq	r6, r0
   33270:	bcs.n	332be <btrfs_del_csums@@Base+0x2ae>
   33272:	cmp	r9, ip
   33274:	it	eq
   33276:	cmpeq	r8, fp
   33278:	bcc.n	33324 <btrfs_del_csums@@Base+0x314>
   3327a:	ldr	r1, [sp, #8]
   3327c:	movs	r3, #0
   3327e:	subs	r0, r1, r6
   33280:	ldr	r1, [sp, #12]
   33282:	sbc.w	r1, r1, r7
   33286:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   3328a:	ldr	r2, [sp, #16]
   3328c:	movs	r3, #1
   3328e:	mov	r1, r4
   33290:	muls	r2, r0
   33292:	mov	r0, r5
   33294:	bl	1e71c <btrfs_truncate_item@@Base>
   33298:	ldr	r1, [pc, #220]	; (33378 <btrfs_del_csums@@Base+0x368>)
   3329a:	mov.w	r2, #372	; 0x174
   3329e:	add	r1, pc
   332a0:	adds	r1, #63	; 0x3f
   332a2:	mov	r3, r0
   332a4:	ldr	r0, [pc, #212]	; (3337c <btrfs_del_csums@@Base+0x36c>)
   332a6:	add	r0, pc
   332a8:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   332ac:	ldr	r1, [pc, #208]	; (33380 <btrfs_del_csums@@Base+0x370>)
   332ae:	ldr	r0, [pc, #212]	; (33384 <btrfs_del_csums@@Base+0x374>)
   332b0:	movs	r3, #0
   332b2:	add	r1, pc
   332b4:	movw	r2, #497	; 0x1f1
   332b8:	adds	r1, #47	; 0x2f
   332ba:	add	r0, pc
   332bc:	b.n	3318e <btrfs_del_csums@@Base+0x17e>
   332be:	cmp	r9, ip
   332c0:	it	eq
   332c2:	cmpeq	r8, fp
   332c4:	bcs.n	33324 <btrfs_del_csums@@Base+0x314>
   332c6:	cmp	r7, r9
   332c8:	it	eq
   332ca:	cmpeq	r6, r8
   332cc:	bcs.n	33324 <btrfs_del_csums@@Base+0x314>
   332ce:	subs.w	r0, fp, r8
   332d2:	mov.w	r3, #0
   332d6:	sbc.w	r1, ip, r9
   332da:	ldr	r7, [pc, #172]	; (33388 <btrfs_del_csums@@Base+0x378>)
   332dc:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   332e0:	ldr	r2, [sp, #16]
   332e2:	movs	r3, #0
   332e4:	mov	r1, r4
   332e6:	ldr	r6, [pc, #164]	; (3338c <btrfs_del_csums@@Base+0x37c>)
   332e8:	add	r7, pc
   332ea:	adds	r7, #63	; 0x3f
   332ec:	add	r6, pc
   332ee:	muls	r2, r0
   332f0:	mov	r0, r5
   332f2:	bl	1e71c <btrfs_truncate_item@@Base>
   332f6:	movw	r2, #385	; 0x181
   332fa:	mov	r1, r7
   332fc:	mov	r3, r0
   332fe:	mov	r0, r6
   33300:	bl	32960 <btrfs_del_inode_ref@@Base+0x270>
   33304:	ldr	r3, [sp, #40]	; 0x28
   33306:	add	r2, sp, #72	; 0x48
   33308:	mov	r1, r4
   3330a:	mov	r0, r5
   3330c:	str.w	r8, [r3]
   33310:	str.w	r9, [r3, #4]
   33314:	bl	1d738 <btrfs_set_item_key_safe@@Base>
   33318:	movw	r2, #389	; 0x185
   3331c:	mov	r1, r7
   3331e:	mov	r3, r0
   33320:	mov	r0, r6
   33322:	b.n	332a8 <btrfs_del_csums@@Base+0x298>
   33324:	ldr	r1, [pc, #104]	; (33390 <btrfs_del_csums@@Base+0x380>)
   33326:	movs	r3, #1
   33328:	ldr	r0, [pc, #104]	; (33394 <btrfs_del_csums@@Base+0x384>)
   3332a:	movw	r2, #391	; 0x187
   3332e:	add	r1, pc
   33330:	adds	r1, #63	; 0x3f
   33332:	add	r0, pc
   33334:	bl	32924 <btrfs_del_inode_ref@@Base+0x234>
   33338:	mov	r0, r4
   3333a:	bl	1c71e <btrfs_free_path@@Base>
   3333e:	movs	r0, #0
   33340:	ldr	r2, [pc, #84]	; (33398 <btrfs_del_csums@@Base+0x388>)
   33342:	ldr	r3, [pc, #32]	; (33364 <btrfs_del_csums@@Base+0x354>)
   33344:	add	r2, pc
   33346:	ldr	r3, [r2, r3]
   33348:	ldr	r2, [r3, #0]
   3334a:	ldr	r3, [sp, #92]	; 0x5c
   3334c:	eors	r2, r3
   3334e:	beq.n	3335a <btrfs_del_csums@@Base+0x34a>
   33350:	blx	8c90 <__stack_chk_fail@plt>
   33354:	mvn.w	r0, #11
   33358:	b.n	33340 <btrfs_del_csums@@Base+0x330>
   3335a:	add	sp, #100	; 0x64
   3335c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33360:	ldrb	r6, [r6, #19]
   33362:	movs	r3, r0
   33364:	lsls	r0, r1, #10
   33366:	movs	r0, r0
   33368:	adds	r3, #128	; 0x80
   3336a:	movs	r1, r0
   3336c:	ldmia	r1, {r1, r2, r4, r5, r7}
   3336e:	movs	r0, r0
   33370:	adds	r2, #248	; 0xf8
   33372:	movs	r1, r0
   33374:	adds	r2, #222	; 0xde
   33376:	movs	r1, r0
   33378:	adds	r2, #102	; 0x66
   3337a:	movs	r1, r0
   3337c:	ldmia	r0!, {r2, r3, r4, r7}
   3337e:	movs	r0, r0
   33380:	adds	r2, #82	; 0x52
   33382:	movs	r1, r0
   33384:	ldmia	r0!, {r3, r7}
   33386:	movs	r0, r0
   33388:	adds	r2, #28
   3338a:	movs	r1, r0
   3338c:	ldmia	r0!, {r1, r2, r4, r6}
   3338e:	movs	r0, r0
   33390:	adds	r1, #214	; 0xd6
   33392:	movs	r1, r0
   33394:	cdp2	0, 8, cr0, cr0, cr0, {0}
   33398:	ldrb	r4, [r2, #7]
   3339a:	movs	r3, r0

0003339c <raid6_gen_syndrome@@Base>:
   3339c:	subs	r3, r0, #2
   3339e:	sub.w	ip, r0, #3
   333a2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   333a6:	add.w	ip, r2, ip, lsl #2
   333aa:	ldr.w	r8, [r2, r3, lsl #2]
   333ae:	add.w	r3, r2, r3, lsl #2
   333b2:	movs	r4, #0
   333b4:	ldr.w	r9, [r3, #4]
   333b8:	cmp	r1, r4
   333ba:	bhi.n	333c0 <raid6_gen_syndrome@@Base+0x24>
   333bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   333c0:	ldr.w	r3, [ip]
   333c4:	subs	r7, r0, #4
   333c6:	ldr	r6, [r3, r4]
   333c8:	mov	r3, r6
   333ca:	cmp	r7, #0
   333cc:	bge.n	333da <raid6_gen_syndrome@@Base+0x3e>
   333ce:	str.w	r6, [r8, r4]
   333d2:	str.w	r3, [r9, r4]
   333d6:	adds	r4, #4
   333d8:	b.n	333b8 <raid6_gen_syndrome@@Base+0x1c>
   333da:	ldr.w	r5, [r2, r7, lsl #2]
   333de:	and.w	sl, r3, #2155905152	; 0x80808080
   333e2:	lsls	r3, r3, #1
   333e4:	subs	r7, #1
   333e6:	and.w	r3, r3, #4278124286	; 0xfefefefe
   333ea:	ldr.w	lr, [r5, r4]
   333ee:	mov.w	r5, sl, lsr #7
   333f2:	rsb	r5, r5, sl, lsl #1
   333f6:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   333fa:	eor.w	r6, r6, lr
   333fe:	eor.w	lr, r5, lr
   33402:	eor.w	r3, lr, r3
   33406:	b.n	333ca <raid6_gen_syndrome@@Base+0x2e>

00033408 <raid5_gen_result@@Base>:
   33408:	cmp.w	r1, #65536	; 0x10000
   3340c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33410:	mov	r6, r0
   33412:	ldr.w	r8, [r3, r2, lsl #2]
   33416:	mov	r5, r2
   33418:	mov	r7, r3
   3341a:	beq.n	33432 <raid5_gen_result@@Base+0x2a>
   3341c:	ldr	r1, [pc, #184]	; (334d8 <raid5_gen_result@@Base+0xd0>)
   3341e:	ldr	r0, [pc, #188]	; (334dc <raid5_gen_result@@Base+0xd4>)
   33420:	add	r1, pc
   33422:	add	r0, pc
   33424:	bl	1bd1c <__btrfs_error@@Base>
   33428:	mvn.w	r0, #21
   3342c:	add	sp, #12
   3342e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33432:	cmp	r2, r0
   33434:	bge.n	3341c <raid5_gen_result@@Base+0x14>
   33436:	cmp	r0, #1
   33438:	ble.n	3341c <raid5_gen_result@@Base+0x14>
   3343a:	cmp	r0, #2
   3343c:	bne.n	33452 <raid5_gen_result@@Base+0x4a>
   3343e:	rsb	r5, r2, #1
   33442:	mov	r0, r8
   33444:	mov	r2, r1
   33446:	ldr.w	r1, [r3, r5, lsl #2]
   3344a:	blx	8bdc <memcpy@plt+0x4>
   3344e:	movs	r0, #0
   33450:	b.n	3342c <raid5_gen_result@@Base+0x24>
   33452:	mov	r2, r1
   33454:	mov	r0, r8
   33456:	movs	r1, #0
   33458:	mvn.w	fp, #3
   3345c:	blx	8f98 <memset@plt+0x4>
   33460:	movs	r0, #0
   33462:	cmp	r0, r6
   33464:	beq.n	3344e <raid5_gen_result@@Base+0x46>
   33466:	cmp	r0, r5
   33468:	bne.n	3346e <raid5_gen_result@@Base+0x66>
   3346a:	adds	r0, #1
   3346c:	b.n	33462 <raid5_gen_result@@Base+0x5a>
   3346e:	ldr.w	r1, [r7, r0, lsl #2]
   33472:	mov.w	r2, #65536	; 0x10000
   33476:	mov	r4, r8
   33478:	lsls	r3, r4, #29
   3347a:	bmi.n	334b0 <raid5_gen_result@@Base+0xa8>
   3347c:	bic.w	r9, r2, #3
   33480:	sub.w	ip, r4, #4
   33484:	add.w	sl, r1, r9
   33488:	lsrs	r3, r2, #2
   3348a:	str	r3, [sp, #4]
   3348c:	cmp	r1, sl
   3348e:	bne.n	334c6 <raid5_gen_result@@Base+0xbe>
   33490:	ldr	r3, [sp, #4]
   33492:	add	r4, r9
   33494:	mla	r2, fp, r3, r2
   33498:	add	r2, r1
   3349a:	cmp	r1, r2
   3349c:	beq.n	3346a <raid5_gen_result@@Base+0x62>
   3349e:	ldrb.w	ip, [r4], #1
   334a2:	ldrb.w	r3, [r1], #1
   334a6:	eor.w	r3, r3, ip
   334aa:	strb.w	r3, [r4, #-1]
   334ae:	b.n	3349a <raid5_gen_result@@Base+0x92>
   334b0:	ldrb.w	ip, [r4], #1
   334b4:	subs	r2, #1
   334b6:	ldrb.w	r3, [r1], #1
   334ba:	eor.w	r3, r3, ip
   334be:	strb.w	r3, [r4, #-1]
   334c2:	bne.n	33478 <raid5_gen_result@@Base+0x70>
   334c4:	b.n	3346a <raid5_gen_result@@Base+0x62>
   334c6:	ldr.w	lr, [ip, #4]!
   334ca:	ldr.w	r3, [r1], #4
   334ce:	eor.w	lr, lr, r3
   334d2:	str.w	lr, [ip]
   334d6:	b.n	3348c <raid5_gen_result@@Base+0x84>
   334d8:	adds	r1, #78	; 0x4e
   334da:	movs	r1, r0
   334dc:	adds	r1, #51	; 0x33
   334de:	movs	r1, r0

000334e0 <raid6_recov_data2@@Base>:
   334e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   334e4:	mov	r5, r2
   334e6:	ldr.w	sl, [pc, #320]	; 33628 <raid6_recov_data2@@Base+0x148>
   334ea:	sub	sp, #28
   334ec:	cmp	r5, #0
   334ee:	mov	fp, r1
   334f0:	add	sl, pc
   334f2:	mov	r4, r3
   334f4:	str	r0, [sp, #8]
   334f6:	blt.w	33622 <raid6_recov_data2@@Base+0x142>
   334fa:	subs	r3, r0, #2
   334fc:	cmp	r3, r5
   334fe:	ble.w	33622 <raid6_recov_data2@@Base+0x142>
   33502:	cmp	r4, #0
   33504:	blt.w	33622 <raid6_recov_data2@@Base+0x142>
   33508:	cmp	r3, r4
   3350a:	ble.w	33622 <raid6_recov_data2@@Base+0x142>
   3350e:	cmp	r5, r4
   33510:	bge.w	33622 <raid6_recov_data2@@Base+0x142>
   33514:	movs	r0, #1
   33516:	blx	8ab8 <calloc@plt+0x4>
   3351a:	mov	r1, fp
   3351c:	mov	r8, r0
   3351e:	movs	r0, #1
   33520:	blx	8ab8 <calloc@plt+0x4>
   33524:	mov	r7, r0
   33526:	cmp.w	r8, #0
   3352a:	beq.n	33530 <raid6_recov_data2@@Base+0x50>
   3352c:	ldr	r2, [sp, #64]	; 0x40
   3352e:	cbnz	r0, 33546 <raid6_recov_data2@@Base+0x66>
   33530:	mov	r0, r8
   33532:	blx	8b84 <free@plt+0x4>
   33536:	mov	r0, r7
   33538:	blx	8b84 <free@plt+0x4>
   3353c:	mvn.w	r0, #11
   33540:	add	sp, #28
   33542:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33546:	ldr	r3, [sp, #8]
   33548:	str	r2, [sp, #64]	; 0x40
   3354a:	add.w	r9, r3, #1073741824	; 0x40000000
   3354e:	sub.w	r9, r9, #2
   33552:	ldr.w	r1, [r2, r9, lsl #2]
   33556:	mov.w	r3, r9, lsl #2
   3355a:	adds	r3, #4
   3355c:	str	r3, [sp, #20]
   3355e:	str	r1, [sp, #12]
   33560:	ldr	r1, [r2, r3]
   33562:	str	r1, [sp, #16]
   33564:	ldr.w	r1, [r2, r5, lsl #2]
   33568:	str.w	r8, [r2, r5, lsl #2]
   3356c:	str.w	r1, [r2, r9, lsl #2]
   33570:	ldr.w	r6, [r2, r4, lsl #2]
   33574:	str	r1, [sp, #4]
   33576:	mov	r1, fp
   33578:	str.w	r0, [r2, r4, lsl #2]
   3357c:	str	r6, [r2, r3]
   3357e:	ldr	r0, [sp, #8]
   33580:	bl	3339c <raid6_gen_syndrome@@Base>
   33584:	ldr	r2, [sp, #64]	; 0x40
   33586:	ldr	r3, [sp, #4]
   33588:	str.w	r3, [r2, r5, lsl #2]
   3358c:	ldr	r3, [sp, #12]
   3358e:	str.w	r6, [r2, r4, lsl #2]
   33592:	str.w	r3, [r2, r9, lsl #2]
   33596:	ldrd	r1, r3, [sp, #16]
   3359a:	str	r1, [r2, r3]
   3359c:	ldr	r3, [pc, #140]	; (3362c <raid6_recov_data2@@Base+0x14c>)
   3359e:	ldr.w	r2, [sl, r3]
   335a2:	subs	r3, r4, r5
   335a4:	ldrb	r0, [r2, r3]
   335a6:	ldr	r3, [pc, #136]	; (33630 <raid6_recov_data2@@Base+0x150>)
   335a8:	lsls	r0, r0, #8
   335aa:	ldr.w	r2, [sl, r3]
   335ae:	ldr	r3, [pc, #132]	; (33634 <raid6_recov_data2@@Base+0x154>)
   335b0:	ldr.w	r1, [sl, r3]
   335b4:	ldrb	r3, [r1, r5]
   335b6:	ldrb	r1, [r1, r4]
   335b8:	eors	r3, r1
   335ba:	add.w	r1, r6, fp
   335be:	ldrb	r4, [r2, r3]
   335c0:	ldr	r3, [sp, #12]
   335c2:	subs	r5, r3, #1
   335c4:	ldr	r3, [sp, #4]
   335c6:	lsls	r4, r4, #8
   335c8:	add.w	ip, r3, #4294967295	; 0xffffffff
   335cc:	ldr	r3, [sp, #16]
   335ce:	add.w	lr, r3, #4294967295	; 0xffffffff
   335d2:	cmp	r6, r1
   335d4:	bne.n	335e6 <raid6_recov_data2@@Base+0x106>
   335d6:	mov	r0, r8
   335d8:	blx	8b84 <free@plt+0x4>
   335dc:	mov	r0, r7
   335de:	blx	8b84 <free@plt+0x4>
   335e2:	movs	r0, #0
   335e4:	b.n	33540 <raid6_recov_data2@@Base+0x60>
   335e6:	ldrb.w	r2, [r5, #1]!
   335ea:	ldrb.w	r3, [ip, #1]!
   335ee:	ldrb.w	r9, [r6]
   335f2:	eors	r3, r2
   335f4:	ldrb.w	r2, [lr, #1]!
   335f8:	add.w	fp, r3, r0
   335fc:	eor.w	r2, r2, r9
   33600:	ldr.w	r9, [pc, #52]	; 33638 <raid6_recov_data2@@Base+0x158>
   33604:	add	r2, r4
   33606:	ldr.w	r9, [sl, r9]
   3360a:	ldrb.w	r2, [r2, r9]
   3360e:	ldrb.w	r9, [fp, r9]
   33612:	eor.w	r2, r2, r9
   33616:	strb.w	r2, [r6], #1
   3361a:	eors	r3, r2
   3361c:	strb.w	r3, [ip]
   33620:	b.n	335d2 <raid6_recov_data2@@Base+0xf2>
   33622:	mvn.w	r0, #21
   33626:	b.n	33540 <raid6_recov_data2@@Base+0x60>
   33628:	ldrb	r0, [r5, #0]
   3362a:	movs	r3, r0
   3362c:	lsls	r0, r2, #11
   3362e:	movs	r0, r0
   33630:	lsls	r4, r4, #10
   33632:	movs	r0, r0
   33634:	lsls	r4, r2, #10
   33636:	movs	r0, r0
   33638:	lsls	r0, r5, #10
	...

0003363c <raid6_recov_datap@@Base>:
   3363c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33640:	mov	r7, r2
   33642:	add.w	r2, r0, #1073741824	; 0x40000000
   33646:	mov	r4, r3
   33648:	subs	r2, #2
   3364a:	ldr.w	sl, [pc, #144]	; 336dc <raid6_recov_datap@@Base+0xa0>
   3364e:	mov	fp, r0
   33650:	movs	r0, #1
   33652:	lsls	r3, r2, #2
   33654:	add	sl, pc
   33656:	add.w	r9, r3, #4
   3365a:	ldr.w	r8, [r4, r2, lsl #2]
   3365e:	mov	r6, r1
   33660:	ldr.w	r3, [r4, r9]
   33664:	str	r3, [sp, #4]
   33666:	blx	8ab8 <calloc@plt+0x4>
   3366a:	cbz	r0, 336d6 <raid6_recov_datap@@Base+0x9a>
   3366c:	ldr.w	r5, [r4, r7, lsl #2]
   33670:	mov	r2, r4
   33672:	str.w	r0, [r4, r7, lsl #2]
   33676:	mov	r1, r6
   33678:	mov	r0, fp
   3367a:	add	r6, r8
   3367c:	str.w	r5, [r4, r9]
   33680:	bl	3339c <raid6_gen_syndrome@@Base>
   33684:	ldr	r3, [sp, #4]
   33686:	str.w	r5, [r4, r7, lsl #2]
   3368a:	subs	r5, #1
   3368c:	str.w	r3, [r4, r9]
   33690:	ldr	r3, [pc, #76]	; (336e0 <raid6_recov_datap@@Base+0xa4>)
   33692:	ldr.w	r2, [sl, r3]
   33696:	ldr	r3, [pc, #76]	; (336e4 <raid6_recov_datap@@Base+0xa8>)
   33698:	ldr.w	r3, [sl, r3]
   3369c:	ldrb	r3, [r3, r7]
   3369e:	ldrb	r2, [r2, r3]
   336a0:	ldr	r3, [sp, #4]
   336a2:	lsls	r2, r2, #8
   336a4:	add.w	r9, r3, #4294967295	; 0xffffffff
   336a8:	cmp	r8, r6
   336aa:	bne.n	336b4 <raid6_recov_datap@@Base+0x78>
   336ac:	movs	r0, #0
   336ae:	add	sp, #12
   336b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   336b4:	ldrb.w	r1, [r5, #1]!
   336b8:	ldrb.w	r3, [r9, #1]!
   336bc:	eors	r3, r1
   336be:	ldr	r1, [pc, #40]	; (336e8 <raid6_recov_datap@@Base+0xac>)
   336c0:	add	r3, r2
   336c2:	ldr.w	r1, [sl, r1]
   336c6:	ldrb	r3, [r3, r1]
   336c8:	strb	r3, [r5, #0]
   336ca:	ldrb.w	r1, [r8], #1
   336ce:	eors	r3, r1
   336d0:	strb.w	r3, [r8, #-1]
   336d4:	b.n	336a8 <raid6_recov_datap@@Base+0x6c>
   336d6:	mvn.w	r0, #11
   336da:	b.n	336ae <raid6_recov_datap@@Base+0x72>
   336dc:	strb	r4, [r0, #27]
   336de:	movs	r3, r0
   336e0:	lsls	r4, r4, #10
   336e2:	movs	r0, r0
   336e4:	lsls	r4, r2, #10
   336e6:	movs	r0, r0
   336e8:	lsls	r0, r5, #10
	...

000336ec <raid56_recov@@Base>:
   336ec:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   336f0:	mov.w	ip, #0
   336f4:	mov	r5, r0
   336f6:	mov	r0, r2
   336f8:	and.w	r6, r0, #128	; 0x80
   336fc:	mov	r7, ip
   336fe:	orrs.w	lr, r6, r7
   33702:	ldrd	r2, r4, [sp, #40]	; 0x28
   33706:	ldr	r3, [sp, #48]	; 0x30
   33708:	bne.n	33728 <raid56_recov@@Base+0x3c>
   3370a:	and.w	r8, r0, #256	; 0x100
   3370e:	mov	r9, ip
   33710:	orrs.w	r0, r8, r9
   33714:	beq.n	33794 <raid56_recov@@Base+0xa8>
   33716:	movs	r0, #3
   33718:	cmp	r0, r5
   3371a:	bgt.n	33794 <raid56_recov@@Base+0xa8>
   3371c:	adds	r0, r2, #1
   3371e:	bne.n	3372c <raid56_recov@@Base+0x40>
   33720:	adds	r2, r4, #1
   33722:	bne.n	3379e <raid56_recov@@Base+0xb2>
   33724:	movs	r0, #0
   33726:	b.n	3378e <raid56_recov@@Base+0xa2>
   33728:	movs	r0, #2
   3372a:	b.n	33718 <raid56_recov@@Base+0x2c>
   3372c:	adds	r0, r4, #1
   3372e:	beq.n	337c8 <raid56_recov@@Base+0xdc>
   33730:	cmp	r2, r4
   33732:	bgt.n	337ba <raid56_recov@@Base+0xce>
   33734:	orrs.w	r0, r6, r7
   33738:	bne.n	3379a <raid56_recov@@Base+0xae>
   3373a:	subs	r0, r5, #2
   3373c:	cmp	r0, r2
   3373e:	bne.n	33746 <raid56_recov@@Base+0x5a>
   33740:	subs	r6, r5, #1
   33742:	cmp	r6, r4
   33744:	beq.n	337b0 <raid56_recov@@Base+0xc4>
   33746:	cmp	r0, r4
   33748:	ble.n	3376c <raid56_recov@@Base+0x80>
   3374a:	str	r3, [sp, #40]	; 0x28
   3374c:	mov	r0, r5
   3374e:	mov	r3, r4
   33750:	add	sp, #12
   33752:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33756:	b.w	334e0 <raid6_recov_data2@@Base>
   3375a:	mov	r2, r4
   3375c:	mov	r0, r5
   3375e:	add	sp, #12
   33760:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33764:	b.w	33408 <raid5_gen_result@@Base>
   33768:	mov	r2, r4
   3376a:	b.n	3375e <raid56_recov@@Base+0x72>
   3376c:	subs	r0, r5, #1
   3376e:	cmp	r0, r4
   33770:	bne.n	3377e <raid56_recov@@Base+0x92>
   33772:	mov	r0, r5
   33774:	add	sp, #12
   33776:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3377a:	b.w	3363c <raid6_recov_datap@@Base>
   3377e:	strd	r1, r3, [sp]
   33782:	bl	33408 <raid5_gen_result@@Base>
   33786:	ldrd	r1, r3, [sp]
   3378a:	cmp	r0, #0
   3378c:	bge.n	337b0 <raid56_recov@@Base+0xc4>
   3378e:	add	sp, #12
   33790:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   33794:	mvn.w	r0, #21
   33798:	b.n	3378e <raid56_recov@@Base+0xa2>
   3379a:	movs	r0, #1
   3379c:	b.n	3378e <raid56_recov@@Base+0xa2>
   3379e:	orrs.w	r2, r6, r7
   337a2:	bne.n	3375a <raid56_recov@@Base+0x6e>
   337a4:	subs	r0, r5, #1
   337a6:	cmp	r0, r4
   337a8:	beq.n	337b0 <raid56_recov@@Base+0xc4>
   337aa:	subs	r2, r5, #2
   337ac:	cmp	r2, r4
   337ae:	bne.n	33768 <raid56_recov@@Base+0x7c>
   337b0:	mov	r2, r3
   337b2:	mov	r0, r5
   337b4:	bl	3339c <raid6_gen_syndrome@@Base>
   337b8:	b.n	33724 <raid56_recov@@Base+0x38>
   337ba:	orrs.w	r0, r6, r7
   337be:	bne.n	3379a <raid56_recov@@Base+0xae>
   337c0:	mov	r0, r2
   337c2:	mov	r2, r4
   337c4:	mov	r4, r0
   337c6:	b.n	3373a <raid56_recov@@Base+0x4e>
   337c8:	orrs.w	r0, r6, r7
   337cc:	mov	r4, r2
   337ce:	b.n	337a2 <raid56_recov@@Base+0xb6>

000337d0 <check_arg_type@@Base>:
   337d0:	ldr	r1, [pc, #128]	; (33854 <check_arg_type@@Base+0x84>)
   337d2:	ldr	r2, [pc, #132]	; (33858 <check_arg_type@@Base+0x88>)
   337d4:	push	{r4, lr}
   337d6:	add	r1, pc
   337d8:	sub.w	sp, sp, #4096	; 0x1000
   337dc:	sub	sp, #8
   337de:	ldr	r2, [r1, r2]
   337e0:	add.w	r3, sp, #4096	; 0x1000
   337e4:	adds	r3, #4
   337e6:	ldr	r2, [r2, #0]
   337e8:	str	r2, [r3, #0]
   337ea:	mov.w	r2, #0
   337ee:	cbz	r0, 33842 <check_arg_type@@Base+0x72>
   337f0:	add	r4, sp, #4
   337f2:	mov.w	r2, #4096	; 0x1000
   337f6:	mov	r1, r4
   337f8:	blx	8d6c <__realpath_chk@plt>
   337fc:	cbz	r0, 33838 <check_arg_type@@Base+0x68>
   337fe:	mov	r0, r4
   33800:	bl	341ec <path_is_block_device@@Base>
   33804:	cmp	r0, #1
   33806:	beq.n	33848 <check_arg_type@@Base+0x78>
   33808:	mov	r0, r4
   3380a:	bl	34248 <path_is_mount_point@@Base>
   3380e:	cmp	r0, #1
   33810:	beq.n	3381e <check_arg_type@@Base+0x4e>
   33812:	mov	r0, r4
   33814:	bl	34290 <path_is_reg_file@@Base>
   33818:	cmp	r0, #0
   3381a:	it	ne
   3381c:	movne	r0, #4
   3381e:	ldr	r1, [pc, #60]	; (3385c <check_arg_type@@Base+0x8c>)
   33820:	add.w	r3, sp, #4096	; 0x1000
   33824:	ldr	r2, [pc, #48]	; (33858 <check_arg_type@@Base+0x88>)
   33826:	adds	r3, #4
   33828:	add	r1, pc
   3382a:	ldr	r2, [r1, r2]
   3382c:	ldr	r1, [r2, #0]
   3382e:	ldr	r2, [r3, #0]
   33830:	eors	r1, r2
   33832:	beq.n	3384c <check_arg_type@@Base+0x7c>
   33834:	blx	8c90 <__stack_chk_fail@plt>
   33838:	blx	8f58 <__errno_location@plt>
   3383c:	ldr	r0, [r0, #0]
   3383e:	negs	r0, r0
   33840:	b.n	3381e <check_arg_type@@Base+0x4e>
   33842:	mvn.w	r0, #21
   33846:	b.n	3381e <check_arg_type@@Base+0x4e>
   33848:	movs	r0, #3
   3384a:	b.n	3381e <check_arg_type@@Base+0x4e>
   3384c:	add.w	sp, sp, #4096	; 0x1000
   33850:	add	sp, #8
   33852:	pop	{r4, pc}
   33854:	strb	r2, [r0, #21]
   33856:	movs	r3, r0
   33858:	lsls	r0, r1, #10
   3385a:	movs	r0, r0
   3385c:	strb	r0, [r6, #19]
   3385e:	movs	r3, r0

00033860 <test_uuid_unique@@Base>:
   33860:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   33862:	movs	r1, #0
   33864:	ldr	r2, [pc, #136]	; (338f0 <test_uuid_unique@@Base+0x90>)
   33866:	mov	r4, r0
   33868:	ldr	r3, [pc, #136]	; (338f4 <test_uuid_unique@@Base+0x94>)
   3386a:	add	r0, sp, #8
   3386c:	add	r2, pc
   3386e:	ldr	r3, [r2, r3]
   33870:	ldr	r3, [r3, #0]
   33872:	str	r3, [sp, #12]
   33874:	mov.w	r3, #0
   33878:	strd	r1, r1, [sp, #4]
   3387c:	blx	918c <blkid_get_cache@plt>
   33880:	cmp	r0, #0
   33882:	bge.n	338a2 <test_uuid_unique@@Base+0x42>
   33884:	ldr	r0, [pc, #112]	; (338f8 <test_uuid_unique@@Base+0x98>)
   33886:	movs	r4, #1
   33888:	add	r0, pc
   3388a:	blx	8e24 <puts@plt+0x4>
   3388e:	ldr	r2, [pc, #108]	; (338fc <test_uuid_unique@@Base+0x9c>)
   33890:	ldr	r3, [pc, #96]	; (338f4 <test_uuid_unique@@Base+0x94>)
   33892:	add	r2, pc
   33894:	ldr	r3, [r2, r3]
   33896:	ldr	r2, [r3, #0]
   33898:	ldr	r3, [sp, #12]
   3389a:	eors	r2, r3
   3389c:	beq.n	338e8 <test_uuid_unique@@Base+0x88>
   3389e:	blx	8c90 <__stack_chk_fail@plt>
   338a2:	ldr	r0, [sp, #8]
   338a4:	add	r6, sp, #4
   338a6:	blx	91f0 <blkid_probe_all@plt>
   338aa:	ldr	r0, [sp, #8]
   338ac:	blx	8c9c <blkid_dev_iterate_begin@plt>
   338b0:	ldr	r1, [pc, #76]	; (33900 <test_uuid_unique@@Base+0xa0>)
   338b2:	mov	r2, r4
   338b4:	add	r1, pc
   338b6:	mov	r5, r0
   338b8:	blx	8d10 <blkid_dev_set_search@plt>
   338bc:	mov	r1, r6
   338be:	mov	r0, r5
   338c0:	blx	8ea4 <blkid_dev_next@plt>
   338c4:	mov	r4, r0
   338c6:	cbz	r0, 338cc <test_uuid_unique@@Base+0x6c>
   338c8:	movs	r4, #1
   338ca:	b.n	338da <test_uuid_unique@@Base+0x7a>
   338cc:	ldrd	r1, r0, [sp, #4]
   338d0:	blx	8eb0 <blkid_verify@plt>
   338d4:	str	r0, [sp, #4]
   338d6:	cmp	r0, #0
   338d8:	beq.n	338bc <test_uuid_unique@@Base+0x5c>
   338da:	mov	r0, r5
   338dc:	blx	8ff0 <blkid_dev_iterate_end@plt>
   338e0:	ldr	r0, [sp, #8]
   338e2:	blx	8c44 <blkid_put_cache@plt>
   338e6:	b.n	3388e <test_uuid_unique@@Base+0x2e>
   338e8:	mov	r0, r4
   338ea:	add	sp, #16
   338ec:	pop	{r4, r5, r6, pc}
   338ee:	nop
   338f0:	strb	r4, [r5, #18]
   338f2:	movs	r3, r0
   338f4:	lsls	r0, r1, #10
   338f6:	movs	r0, r0
   338f8:	str	r4, [r6, r1]
   338fa:	movs	r2, r0
   338fc:	strb	r6, [r0, #18]
   338fe:	movs	r3, r0
   33900:	bge.n	3399e <btrfs_add_to_fsid@@Base+0x9a>
	...

00033904 <btrfs_add_to_fsid@@Base>:
   33904:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33908:	sub	sp, #132	; 0x84
   3390a:	mov	fp, r3
   3390c:	ldr	r3, [pc, #596]	; (33b64 <btrfs_add_to_fsid@@Base+0x260>)
   3390e:	str	r2, [sp, #48]	; 0x30
   33910:	mov	r9, r0
   33912:	ldr	r2, [pc, #596]	; (33b68 <btrfs_add_to_fsid@@Base+0x264>)
   33914:	add	r3, pc
   33916:	str	r3, [sp, #52]	; 0x34
   33918:	ldr	r3, [pc, #592]	; (33b6c <btrfs_add_to_fsid@@Base+0x268>)
   3391a:	add	r2, pc
   3391c:	ldr.w	r8, [r1, #464]	; 0x1d0
   33920:	ldr	r7, [sp, #184]	; 0xb8
   33922:	ldr	r3, [r2, r3]
   33924:	ldr.w	r6, [r8, #308]	; 0x134
   33928:	ldr	r3, [r3, #0]
   3392a:	str	r3, [sp, #124]	; 0x7c
   3392c:	mov.w	r3, #0
   33930:	ldrd	r0, r1, [sp, #168]	; 0xa8
   33934:	mov	r2, r7
   33936:	ldr	r3, [r6, #112]	; 0x70
   33938:	str	r3, [sp, #32]
   3393a:	ldr	r3, [r6, #116]	; 0x74
   3393c:	str	r3, [sp, #36]	; 0x24
   3393e:	movs	r3, #0
   33940:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   33944:	umull	r3, r4, r7, r0
   33948:	movs	r0, #1
   3394a:	strd	r3, r4, [sp, #16]
   3394e:	ldr	r3, [sp, #20]
   33950:	mla	r3, r7, r1, r3
   33954:	movs	r1, #128	; 0x80
   33956:	str	r3, [sp, #20]
   33958:	blx	8ab8 <calloc@plt+0x4>
   3395c:	mov	r4, r0
   3395e:	cmp	r0, #0
   33960:	beq.w	33b4c <btrfs_add_to_fsid@@Base+0x248>
   33964:	mov	r1, r7
   33966:	movs	r0, #1
   33968:	blx	8ab8 <calloc@plt+0x4>
   3396c:	mov	r5, r0
   3396e:	cmp	r0, #0
   33970:	beq.w	33b4c <btrfs_add_to_fsid@@Base+0x248>
   33974:	add.w	r3, r4, #112	; 0x70
   33978:	str	r3, [sp, #44]	; 0x2c
   3397a:	mov	r0, r3
   3397c:	blx	9030 <uuid_generate@plt>
   33980:	ldr	r2, [sp, #176]	; 0xb0
   33982:	movs	r3, #0
   33984:	str	r7, [r4, #96]	; 0x60
   33986:	strd	r3, r3, [r4, #64]	; 0x40
   3398a:	mov	r0, fp
   3398c:	str	r2, [r4, #92]	; 0x5c
   3398e:	mov	sl, r3
   33990:	ldr	r2, [sp, #180]	; 0xb4
   33992:	strd	r3, r3, [r4, #104]	; 0x68
   33996:	strd	r3, r3, [r4, #80]	; 0x50
   3399a:	str	r2, [r4, #88]	; 0x58
   3399c:	ldr	r2, [sp, #48]	; 0x30
   3399e:	strd	r3, r3, [r4, #16]
   339a2:	str	r2, [r4, #24]
   339a4:	movs	r2, #1
   339a6:	str	r2, [r4, #28]
   339a8:	ldrd	r1, r2, [sp, #16]
   339ac:	strd	r1, r2, [r4, #72]	; 0x48
   339b0:	ldr.w	r2, [r8, #36]	; 0x24
   339b4:	str	r2, [r4, #8]
   339b6:	blx	8c78 <strdup@plt+0x4>
   339ba:	str	r0, [r4, #32]
   339bc:	cmp	r0, #0
   339be:	beq.w	33b54 <btrfs_add_to_fsid@@Base+0x250>
   339c2:	ldrd	r0, r1, [sp, #32]
   339c6:	strd	sl, sl, [sp, #24]
   339ca:	ldrd	sl, fp, [sp, #16]
   339ce:	adds.w	r2, sl, r0
   339d2:	adcs.w	r3, fp, r1
   339d6:	mov	fp, r2
   339d8:	itt	cs
   339da:	movcs	r0, #1
   339dc:	movcs	r1, #0
   339de:	mov	sl, r3
   339e0:	it	cs
   339e2:	strdcs	r0, r1, [sp, #24]
   339e6:	ldrd	r2, r3, [sp, #24]
   339ea:	orrs	r3, r2
   339ec:	beq.n	33a1a <btrfs_add_to_fsid@@Base+0x116>
   339ee:	ldrd	r0, r1, [sp, #16]
   339f2:	mov.w	r2, #512	; 0x200
   339f6:	bl	34da0 <pretty_size_mode@@Base>
   339fa:	ldrd	r2, r3, [sp, #16]
   339fe:	mvn.w	r9, #74	; 0x4a
   33a02:	str	r0, [sp, #0]
   33a04:	ldr	r0, [pc, #360]	; (33b70 <btrfs_add_to_fsid@@Base+0x26c>)
   33a06:	add	r0, pc
   33a08:	bl	1bd1c <__btrfs_error@@Base>
   33a0c:	mov	r0, r4
   33a0e:	blx	8b84 <free@plt+0x4>
   33a12:	mov	r0, r5
   33a14:	blx	8b84 <free@plt+0x4>
   33a18:	b.n	33b38 <btrfs_add_to_fsid@@Base+0x234>
   33a1a:	mov	r0, r9
   33a1c:	mov	r2, r4
   33a1e:	mov	r1, r8
   33a20:	strd	r4, r4, [r4]
   33a24:	bl	2cd38 <btrfs_add_device@@Base>
   33a28:	mov	r9, r0
   33a2a:	cmp	r0, #0
   33a2c:	bne.n	33a0c <btrfs_add_to_fsid@@Base+0x108>
   33a2e:	ldr.w	r3, [r6, #136]	; 0x88
   33a32:	mov	r1, r6
   33a34:	ldr.w	r2, [r6, #140]	; 0x8c
   33a38:	mov	r0, r5
   33a3a:	adds	r3, #1
   33a3c:	str.w	fp, [r6, #112]	; 0x70
   33a40:	adc.w	r2, r2, #0
   33a44:	str.w	r3, [r6, #136]	; 0x88
   33a48:	str.w	r2, [r6, #140]	; 0x8c
   33a4c:	movw	r2, #3531	; 0xdcb
   33a50:	str.w	sl, [r6, #116]	; 0x74
   33a54:	addw	r6, r5, #267	; 0x10b
   33a58:	blx	8bdc <memcpy@plt+0x4>
   33a5c:	movs	r3, #0
   33a5e:	mov.w	r2, #65536	; 0x10000
   33a62:	strd	r2, r3, [r5, #48]	; 0x30
   33a66:	ldr	r3, [r4, #64]	; 0x40
   33a68:	str.w	r3, [r5, #201]	; 0xc9
   33a6c:	ldr	r3, [r4, #68]	; 0x44
   33a6e:	str.w	r3, [r5, #205]	; 0xcd
   33a72:	ldr	r3, [r4, #104]	; 0x68
   33a74:	str.w	r3, [r5, #237]	; 0xed
   33a78:	ldr	r3, [r4, #108]	; 0x6c
   33a7a:	str.w	r3, [r5, #241]	; 0xf1
   33a7e:	ldr	r3, [r4, #88]	; 0x58
   33a80:	str.w	r3, [r5, #225]	; 0xe1
   33a84:	ldr	r3, [r4, #92]	; 0x5c
   33a86:	str.w	r3, [r5, #229]	; 0xe5
   33a8a:	ldr	r3, [r4, #96]	; 0x60
   33a8c:	str.w	r3, [r5, #233]	; 0xe9
   33a90:	ldr	r3, [r4, #72]	; 0x48
   33a92:	str.w	r3, [r5, #209]	; 0xd1
   33a96:	ldr	r3, [r4, #76]	; 0x4c
   33a98:	str.w	r3, [r5, #213]	; 0xd5
   33a9c:	ldr	r3, [r4, #80]	; 0x50
   33a9e:	str.w	r3, [r5, #217]	; 0xd9
   33aa2:	ldr	r3, [r4, #84]	; 0x54
   33aa4:	str.w	r3, [r5, #221]	; 0xdd
   33aa8:	ldr	r3, [sp, #44]	; 0x2c
   33aaa:	add.w	ip, r3, #16
   33aae:	mov	r2, r3
   33ab0:	adds	r6, #8
   33ab2:	ldmia	r2!, {r0, r1}
   33ab4:	cmp	r2, ip
   33ab6:	str.w	r0, [r6, #-8]
   33aba:	mov	r3, r2
   33abc:	str.w	r1, [r6, #-4]
   33ac0:	bne.n	33aae <btrfs_add_to_fsid@@Base+0x1aa>
   33ac2:	mov.w	r2, #65536	; 0x10000
   33ac6:	movs	r3, #0
   33ac8:	ldr	r0, [sp, #48]	; 0x30
   33aca:	mov	r1, r5
   33acc:	strd	r2, r3, [sp]
   33ad0:	mov	r2, r7
   33ad2:	blx	8ffc <pwrite64@plt>
   33ad6:	cmp	r0, r7
   33ad8:	beq.n	33b1a <btrfs_add_to_fsid@@Base+0x216>
   33ada:	ldr	r2, [sp, #52]	; 0x34
   33adc:	add	r4, sp, #60	; 0x3c
   33ade:	ldr	r3, [pc, #148]	; (33b74 <btrfs_add_to_fsid@@Base+0x270>)
   33ae0:	movs	r1, #1
   33ae2:	ldr	r0, [r2, r3]
   33ae4:	ldr	r3, [pc, #144]	; (33b78 <btrfs_add_to_fsid@@Base+0x274>)
   33ae6:	ldr	r2, [pc, #148]	; (33b7c <btrfs_add_to_fsid@@Base+0x278>)
   33ae8:	add	r3, pc
   33aea:	str	r3, [sp, #8]
   33aec:	ldr	r3, [pc, #144]	; (33b80 <btrfs_add_to_fsid@@Base+0x27c>)
   33aee:	add	r2, pc
   33af0:	str	r1, [sp, #12]
   33af2:	add	r3, pc
   33af4:	str	r3, [sp, #4]
   33af6:	movs	r3, #192	; 0xc0
   33af8:	str	r3, [sp, #0]
   33afa:	ldr	r3, [pc, #136]	; (33b84 <btrfs_add_to_fsid@@Base+0x280>)
   33afc:	ldr	r0, [r0, #0]
   33afe:	add	r3, pc
   33b00:	blx	9040 <__fprintf_chk@plt+0x4>
   33b04:	movs	r1, #16
   33b06:	mov	r0, r4
   33b08:	blx	8e98 <backtrace@plt>
   33b0c:	movs	r2, #2
   33b0e:	mov	r1, r0
   33b10:	mov	r0, r4
   33b12:	blx	9214 <backtrace_symbols_fd@plt>
   33b16:	blx	91c0 <abort@plt>
   33b1a:	mov	r0, r5
   33b1c:	blx	8b84 <free@plt+0x4>
   33b20:	ldr.w	r2, [r8, #352]	; 0x160
   33b24:	mov	r3, r2
   33b26:	ldr.w	r1, [r3, #72]!
   33b2a:	str	r4, [r1, #4]
   33b2c:	strd	r1, r3, [r4]
   33b30:	str	r4, [r2, #72]	; 0x48
   33b32:	ldr.w	r3, [r8, #352]	; 0x160
   33b36:	str	r3, [r4, #12]
   33b38:	ldr	r2, [pc, #76]	; (33b88 <btrfs_add_to_fsid@@Base+0x284>)
   33b3a:	ldr	r3, [pc, #48]	; (33b6c <btrfs_add_to_fsid@@Base+0x268>)
   33b3c:	add	r2, pc
   33b3e:	ldr	r3, [r2, r3]
   33b40:	ldr	r2, [r3, #0]
   33b42:	ldr	r3, [sp, #124]	; 0x7c
   33b44:	eors	r2, r3
   33b46:	beq.n	33b5a <btrfs_add_to_fsid@@Base+0x256>
   33b48:	blx	8c90 <__stack_chk_fail@plt>
   33b4c:	mvn.w	r9, #11
   33b50:	movs	r5, #0
   33b52:	b.n	33a0c <btrfs_add_to_fsid@@Base+0x108>
   33b54:	mvn.w	r9, #11
   33b58:	b.n	33a0c <btrfs_add_to_fsid@@Base+0x108>
   33b5a:	mov	r0, r9
   33b5c:	add	sp, #132	; 0x84
   33b5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b62:	nop
   33b64:	strb	r4, [r0, #16]
   33b66:	movs	r3, r0
   33b68:	strb	r6, [r7, #15]
   33b6a:	movs	r3, r0
   33b6c:	lsls	r0, r1, #10
   33b6e:	movs	r0, r0
   33b70:	ldr	r7, [pc, #84]	; (33bc8 <btrfs_register_one_device@@Base+0x3c>)
   33b72:	movs	r2, r0
   33b74:	lsls	r4, r3, #10
   33b76:	movs	r0, r0
   33b78:	ldr	r6, [pc, #556]	; (33da8 <add_seen_fsid@@Base+0x5c>)
   33b7a:	movs	r2, r0
   33b7c:	add	r0, sp, #448	; 0x1c0
   33b7e:	movs	r0, r0
   33b80:	ldr	r7, [pc, #244]	; (33c78 <btrfs_register_all_devices@@Base+0x28>)
   33b82:	movs	r2, r0
   33b84:	ldr	r6, [pc, #384]	; (33d08 <btrfs_device_already_in_root@@Base+0x74>)
   33b86:	movs	r2, r0
   33b88:	strb	r4, [r3, #7]
   33b8a:	movs	r3, r0

00033b8c <btrfs_register_one_device@@Base>:
   33b8c:	ldr	r1, [pc, #168]	; (33c38 <btrfs_register_one_device@@Base+0xac>)
   33b8e:	ldr	r2, [pc, #172]	; (33c3c <btrfs_register_one_device@@Base+0xb0>)
   33b90:	push	{r4, r5, r6, r7, lr}
   33b92:	add	r1, pc
   33b94:	sub.w	sp, sp, #4096	; 0x1000
   33b98:	mov	r6, r0
   33b9a:	sub	sp, #12
   33b9c:	ldr	r0, [pc, #160]	; (33c40 <btrfs_register_one_device@@Base+0xb4>)
   33b9e:	ldr	r2, [r1, r2]
   33ba0:	add.w	r3, sp, #4096	; 0x1000
   33ba4:	add	r0, pc
   33ba6:	movs	r1, #2
   33ba8:	adds	r3, #4
   33baa:	ldr	r2, [r2, #0]
   33bac:	str	r2, [r3, #0]
   33bae:	mov.w	r2, #0
   33bb2:	blx	8e14 <open64@plt>
   33bb6:	subs	r5, r0, #0
   33bb8:	bge.n	33be4 <btrfs_register_one_device@@Base+0x58>
   33bba:	ldr	r0, [pc, #136]	; (33c44 <btrfs_register_one_device@@Base+0xb8>)
   33bbc:	add	r0, pc
   33bbe:	bl	1bca0 <__btrfs_warning@@Base>
   33bc2:	blx	8f58 <__errno_location@plt>
   33bc6:	ldr	r4, [r0, #0]
   33bc8:	negs	r4, r4
   33bca:	ldr	r1, [pc, #124]	; (33c48 <btrfs_register_one_device@@Base+0xbc>)
   33bcc:	add.w	r3, sp, #4096	; 0x1000
   33bd0:	ldr	r2, [pc, #104]	; (33c3c <btrfs_register_one_device@@Base+0xb0>)
   33bd2:	adds	r3, #4
   33bd4:	add	r1, pc
   33bd6:	ldr	r2, [r1, r2]
   33bd8:	ldr	r1, [r2, #0]
   33bda:	ldr	r2, [r3, #0]
   33bdc:	eors	r1, r2
   33bde:	beq.n	33c28 <btrfs_register_one_device@@Base+0x9c>
   33be0:	blx	8c90 <__stack_chk_fail@plt>
   33be4:	mov	r4, sp
   33be6:	add	r7, sp, #8
   33be8:	mov.w	r2, #4096	; 0x1000
   33bec:	movs	r1, #0
   33bee:	mov	r0, r4
   33bf0:	blx	8f98 <memset@plt+0x4>
   33bf4:	movw	r2, #4088	; 0xff8
   33bf8:	mov	r1, r6
   33bfa:	mov	r0, r7
   33bfc:	bl	34420 <__strncpy_null@@Base>
   33c00:	mov	r2, r4
   33c02:	ldr	r1, [pc, #48]	; (33c34 <btrfs_register_one_device@@Base+0xa8>)
   33c04:	mov	r0, r5
   33c06:	blx	8d48 <ioctl@plt>
   33c0a:	subs	r4, r0, #0
   33c0c:	bge.n	33c20 <btrfs_register_one_device@@Base+0x94>
   33c0e:	ldr	r0, [pc, #60]	; (33c4c <btrfs_register_one_device@@Base+0xc0>)
   33c10:	mov	r1, r6
   33c12:	add	r0, pc
   33c14:	bl	1bd1c <__btrfs_error@@Base>
   33c18:	blx	8f58 <__errno_location@plt>
   33c1c:	ldr	r4, [r0, #0]
   33c1e:	negs	r4, r4
   33c20:	mov	r0, r5
   33c22:	blx	91e4 <close@plt>
   33c26:	b.n	33bca <btrfs_register_one_device@@Base+0x3e>
   33c28:	mov	r0, r4
   33c2a:	add.w	sp, sp, #4096	; 0x1000
   33c2e:	add	sp, #12
   33c30:	pop	{r4, r5, r6, r7, pc}
   33c32:	nop
   33c34:	str	r4, [sp, #16]
   33c36:	str	r0, [r0, r0]
   33c38:	strb	r6, [r0, #6]
   33c3a:	movs	r3, r0
   33c3c:	lsls	r0, r1, #10
   33c3e:	movs	r0, r0
   33c40:	ldr	r5, [pc, #900]	; (33fc8 <btrfs_scan_devices@@Base+0x1e0>)
   33c42:	movs	r2, r0
   33c44:	ldr	r5, [pc, #880]	; (33fb8 <btrfs_scan_devices@@Base+0x1d0>)
   33c46:	movs	r2, r0
   33c48:	strb	r4, [r0, #5]
   33c4a:	movs	r3, r0
   33c4c:	ldr	r5, [pc, #808]	; (33f78 <btrfs_scan_devices@@Base+0x190>)
   33c4e:	movs	r2, r0

00033c50 <btrfs_register_all_devices@@Base>:
   33c50:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   33c54:	bl	2f024 <btrfs_scanned_uuids@@Base>
   33c58:	movs	r5, #0
   33c5a:	ldr	r4, [r0, #0]
   33c5c:	mov	r6, r0
   33c5e:	mov	r0, r5
   33c60:	subs	r4, #80	; 0x50
   33c62:	add.w	r3, r4, #80	; 0x50
   33c66:	cmp	r6, r3
   33c68:	bne.n	33c70 <btrfs_register_all_devices@@Base+0x20>
   33c6a:	mov	r0, r5
   33c6c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   33c70:	mov	r8, r4
   33c72:	ldr.w	r7, [r8, #72]!
   33c76:	cmp	r7, r8
   33c78:	bne.n	33c80 <btrfs_register_all_devices@@Base+0x30>
   33c7a:	ldr	r4, [r4, #80]	; 0x50
   33c7c:	subs	r4, #80	; 0x50
   33c7e:	b.n	33c62 <btrfs_register_all_devices@@Base+0x12>
   33c80:	ldr	r3, [r7, #32]
   33c82:	ldrb	r2, [r3, #0]
   33c84:	cbz	r2, 33c8c <btrfs_register_all_devices@@Base+0x3c>
   33c86:	mov	r0, r3
   33c88:	bl	33b8c <btrfs_register_one_device@@Base>
   33c8c:	cbz	r0, 33c90 <btrfs_register_all_devices@@Base+0x40>
   33c8e:	adds	r5, #1
   33c90:	ldr	r7, [r7, #0]
   33c92:	b.n	33c76 <btrfs_register_all_devices@@Base+0x26>

00033c94 <btrfs_device_already_in_root@@Base>:
   33c94:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   33c96:	mov	r6, r0
   33c98:	mov.w	r0, #4096	; 0x1000
   33c9c:	mov	r7, r1
   33c9e:	mov	r4, r2
   33ca0:	blx	8e40 <malloc@plt+0x4>
   33ca4:	mov	r5, r0
   33ca6:	cbz	r0, 33d0e <btrfs_device_already_in_root@@Base+0x7a>
   33ca8:	asrs	r3, r4, #31
   33caa:	mov	r2, r4
   33cac:	mov	r1, r0
   33cae:	strd	r2, r3, [sp]
   33cb2:	mov	r0, r7
   33cb4:	mov.w	r2, #4096	; 0x1000
   33cb8:	blx	8dcc <pread64@plt>
   33cbc:	cmp.w	r0, #4096	; 0x1000
   33cc0:	mov	r4, r0
   33cc2:	bne.n	33cfe <btrfs_device_already_in_root@@Base+0x6a>
   33cc4:	ldrd	r2, r3, [r5, #64]	; 0x40
   33cc8:	add	r1, pc, #76	; (adr r1, 33d18 <btrfs_device_already_in_root@@Base+0x84>)
   33cca:	ldrd	r0, r1, [r1]
   33cce:	cmp	r3, r1
   33cd0:	it	eq
   33cd2:	cmpeq	r2, r0
   33cd4:	beq.n	33ce4 <btrfs_device_already_in_root@@Base+0x50>
   33cd6:	add	r1, pc, #72	; (adr r1, 33d20 <btrfs_device_already_in_root@@Base+0x8c>)
   33cd8:	ldrd	r0, r1, [r1]
   33cdc:	cmp	r3, r1
   33cde:	it	eq
   33ce0:	cmpeq	r2, r0
   33ce2:	bne.n	33d0a <btrfs_device_already_in_root@@Base+0x76>
   33ce4:	ldr.w	r3, [r6, #464]	; 0x1d0
   33ce8:	add.w	r0, r5, #32
   33cec:	movs	r2, #16
   33cee:	ldr.w	r1, [r3, #308]	; 0x134
   33cf2:	adds	r1, #32
   33cf4:	blx	8c1c <memcmp@plt+0x4>
   33cf8:	clz	r4, r0
   33cfc:	lsrs	r4, r4, #5
   33cfe:	mov	r0, r5
   33d00:	blx	8b84 <free@plt+0x4>
   33d04:	mov	r0, r4
   33d06:	add	sp, #12
   33d08:	pop	{r4, r5, r6, r7, pc}
   33d0a:	movs	r4, #0
   33d0c:	b.n	33cfe <btrfs_device_already_in_root@@Base+0x6a>
   33d0e:	mvn.w	r4, #11
   33d12:	b.n	33d04 <btrfs_device_already_in_root@@Base+0x70>
   33d14:	nop.w
   33d18:	negs	r7, r3
   33d1a:	strh	r0, [r1, r1]
   33d1c:	strh	r6, [r4, r5]
   33d1e:	ldr	r5, [pc, #380]	; (33e9c <btrfs_scan_devices@@Base+0xb4>)
   33d20:	tst	r1, r4
   33d22:	strh	r0, [r1, r1]
   33d24:	strh	r6, [r4, r5]
   33d26:	ldr	r5, [pc, #380]	; (33ea4 <btrfs_scan_devices@@Base+0xbc>)

00033d28 <is_seen_fsid@@Base>:
   33d28:	push	{r3, r4, r5, lr}
   33d2a:	mov	r5, r0
   33d2c:	ldrb	r3, [r0, #0]
   33d2e:	ldr.w	r4, [r1, r3, lsl #2]
   33d32:	cbnz	r4, 33d38 <is_seen_fsid@@Base+0x10>
   33d34:	mov	r0, r4
   33d36:	pop	{r3, r4, r5, pc}
   33d38:	movs	r2, #16
   33d3a:	mov	r1, r5
   33d3c:	mov	r0, r4
   33d3e:	blx	8c1c <memcmp@plt+0x4>
   33d42:	cbz	r0, 33d48 <is_seen_fsid@@Base+0x20>
   33d44:	ldr	r4, [r4, #16]
   33d46:	b.n	33d32 <is_seen_fsid@@Base+0xa>
   33d48:	movs	r0, #1
   33d4a:	b.n	33d36 <is_seen_fsid@@Base+0xe>

00033d4c <add_seen_fsid@@Base>:
   33d4c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   33d50:	mov	r5, r0
   33d52:	ldrb.w	sl, [r0]
   33d56:	mov	r7, r1
   33d58:	mov	r9, r2
   33d5a:	mov	r8, r3
   33d5c:	ldr.w	r4, [r1, sl, lsl #2]
   33d60:	cbnz	r4, 33d98 <add_seen_fsid@@Base+0x4c>
   33d62:	movs	r0, #28
   33d64:	blx	8e40 <malloc@plt+0x4>
   33d68:	mov	r6, r0
   33d6a:	cbz	r0, 33db8 <add_seen_fsid@@Base+0x6c>
   33d6c:	add.w	ip, r5, #16
   33d70:	mov	r2, r0
   33d72:	movs	r3, #0
   33d74:	str	r3, [r0, #16]
   33d76:	ldr	r0, [r5, #0]
   33d78:	adds	r5, #8
   33d7a:	ldr.w	r1, [r5, #-4]
   33d7e:	cmp	r5, ip
   33d80:	mov	r3, r2
   33d82:	stmia	r3!, {r0, r1}
   33d84:	mov	r2, r3
   33d86:	bne.n	33d76 <add_seen_fsid@@Base+0x2a>
   33d88:	strd	r8, r9, [r6, #20]
   33d8c:	cbz	r4, 33dac <add_seen_fsid@@Base+0x60>
   33d8e:	str	r6, [r4, #16]
   33d90:	movs	r0, #0
   33d92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   33d96:	mov	r4, r3
   33d98:	movs	r2, #16
   33d9a:	mov	r1, r5
   33d9c:	mov	r0, r4
   33d9e:	blx	8c1c <memcmp@plt+0x4>
   33da2:	cbz	r0, 33db2 <add_seen_fsid@@Base+0x66>
   33da4:	ldr	r3, [r4, #16]
   33da6:	cmp	r3, #0
   33da8:	bne.n	33d96 <add_seen_fsid@@Base+0x4a>
   33daa:	b.n	33d62 <add_seen_fsid@@Base+0x16>
   33dac:	str.w	r6, [r7, sl, lsl #2]
   33db0:	b.n	33d90 <add_seen_fsid@@Base+0x44>
   33db2:	mvn.w	r0, #16
   33db6:	b.n	33d92 <add_seen_fsid@@Base+0x46>
   33db8:	mvn.w	r0, #11
   33dbc:	b.n	33d92 <add_seen_fsid@@Base+0x46>

00033dbe <free_seen_fsid@@Base>:
   33dbe:	push	{r3, r4, r5, r6, r7, lr}
   33dc0:	subs	r6, r0, #4
   33dc2:	add.w	r5, r0, #1020	; 0x3fc
   33dc6:	ldr.w	r4, [r6, #4]!
   33dca:	cbnz	r4, 33dd4 <free_seen_fsid@@Base+0x16>
   33dcc:	cmp	r6, r5
   33dce:	str	r4, [r6, #0]
   33dd0:	bne.n	33dc6 <free_seen_fsid@@Base+0x8>
   33dd2:	pop	{r3, r4, r5, r6, r7, pc}
   33dd4:	ldrd	r7, r1, [r4, #16]
   33dd8:	ldr	r0, [r4, #24]
   33dda:	bl	35600 <close_file_or_dir@@Base>
   33dde:	mov	r0, r4
   33de0:	blx	8b84 <free@plt+0x4>
   33de4:	mov	r4, r7
   33de6:	b.n	33dca <free_seen_fsid@@Base+0xc>

00033de8 <btrfs_scan_devices@@Base>:
   33de8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33dec:	vpush	{d8}
   33df0:	ldr	r1, [pc, #324]	; (33f38 <btrfs_scan_devices@@Base+0x150>)
   33df2:	ldr	r2, [pc, #328]	; (33f3c <btrfs_scan_devices@@Base+0x154>)
   33df4:	add	r1, pc
   33df6:	sub.w	sp, sp, #4128	; 0x1020
   33dfa:	sub	sp, #20
   33dfc:	ldr	r2, [r1, r2]
   33dfe:	add.w	r3, sp, #4128	; 0x1020
   33e02:	add	r4, sp, #48	; 0x30
   33e04:	ldr	r2, [r2, #0]
   33e06:	str	r2, [r3, #12]
   33e08:	mov.w	r2, #0
   33e0c:	ldr	r2, [pc, #304]	; (33f40 <btrfs_scan_devices@@Base+0x158>)
   33e0e:	adds	r3, #12
   33e10:	sub.w	sl, r4, #20
   33e14:	add	r2, pc
   33e16:	movs	r3, #0
   33e18:	str.w	r3, [r4, #-24]
   33e1c:	ldr	r5, [r2, #0]
   33e1e:	str.w	r3, [r4, #-20]
   33e22:	cmp	r5, #0
   33e24:	bne.n	33f24 <btrfs_scan_devices@@Base+0x13c>
   33e26:	mov	r1, r5
   33e28:	mov	r0, sl
   33e2a:	blx	918c <blkid_get_cache@plt>
   33e2e:	subs	r6, r0, #0
   33e30:	bge.n	33e5e <btrfs_scan_devices@@Base+0x76>
   33e32:	blx	8f58 <__errno_location@plt>
   33e36:	negs	r3, r6
   33e38:	mov	r5, r6
   33e3a:	str	r3, [r0, #0]
   33e3c:	ldr	r0, [pc, #260]	; (33f44 <btrfs_scan_devices@@Base+0x15c>)
   33e3e:	add	r0, pc
   33e40:	bl	1bd1c <__btrfs_error@@Base>
   33e44:	ldr	r1, [pc, #256]	; (33f48 <btrfs_scan_devices@@Base+0x160>)
   33e46:	add.w	r3, sp, #4128	; 0x1020
   33e4a:	ldr	r2, [pc, #240]	; (33f3c <btrfs_scan_devices@@Base+0x154>)
   33e4c:	adds	r3, #12
   33e4e:	add	r1, pc
   33e50:	ldr	r2, [r1, r2]
   33e52:	ldr	r1, [r2, #0]
   33e54:	ldr	r2, [r3, #0]
   33e56:	eors	r1, r2
   33e58:	beq.n	33f28 <btrfs_scan_devices@@Base+0x140>
   33e5a:	blx	8c90 <__stack_chk_fail@plt>
   33e5e:	ldr.w	r0, [sl]
   33e62:	blx	91f0 <blkid_probe_all@plt>
   33e66:	ldr.w	r0, [sl]
   33e6a:	blx	8c9c <blkid_dev_iterate_begin@plt>
   33e6e:	ldr	r2, [pc, #220]	; (33f4c <btrfs_scan_devices@@Base+0x164>)
   33e70:	ldr	r1, [pc, #220]	; (33f50 <btrfs_scan_devices@@Base+0x168>)
   33e72:	add	r2, pc
   33e74:	ldr.w	fp, [pc, #220]	; 33f54 <btrfs_scan_devices@@Base+0x16c>
   33e78:	add	r1, pc
   33e7a:	add	fp, pc
   33e7c:	mov	r9, r0
   33e7e:	blx	8d10 <blkid_dev_set_search@plt>
   33e82:	ldr	r3, [pc, #212]	; (33f58 <btrfs_scan_devices@@Base+0x170>)
   33e84:	add	r3, pc
   33e86:	vmov	s16, r3
   33e8a:	sub.w	r7, r4, #24
   33e8e:	mov	r1, r7
   33e90:	mov	r0, r9
   33e92:	blx	8ea4 <blkid_dev_next@plt>
   33e96:	mov	r6, r0
   33e98:	cbz	r0, 33eb2 <btrfs_scan_devices@@Base+0xca>
   33e9a:	mov	r0, r9
   33e9c:	blx	8ff0 <blkid_dev_iterate_end@plt>
   33ea0:	ldr.w	r0, [r4, #-20]
   33ea4:	blx	8c44 <blkid_put_cache@plt>
   33ea8:	ldr	r3, [pc, #176]	; (33f5c <btrfs_scan_devices@@Base+0x174>)
   33eaa:	movs	r2, #1
   33eac:	add	r3, pc
   33eae:	str	r2, [r3, #0]
   33eb0:	b.n	33e44 <btrfs_scan_devices@@Base+0x5c>
   33eb2:	ldr	r1, [r7, #0]
   33eb4:	ldr.w	r0, [sl]
   33eb8:	blx	8eb0 <blkid_verify@plt>
   33ebc:	str	r0, [r7, #0]
   33ebe:	cmp	r0, #0
   33ec0:	beq.n	33e8e <btrfs_scan_devices@@Base+0xa6>
   33ec2:	blx	9110 <blkid_dev_devname@plt>
   33ec6:	sub.w	r8, r4, #4
   33eca:	mov.w	r2, #4096	; 0x1000
   33ece:	mov	r1, r0
   33ed0:	mov	r0, r8
   33ed2:	bl	34420 <__strncpy_null@@Base>
   33ed6:	mov	r1, r6
   33ed8:	mov	r0, r8
   33eda:	blx	8e14 <open64@plt>
   33ede:	subs	r7, r0, #0
   33ee0:	bge.n	33eec <btrfs_scan_devices@@Base+0x104>
   33ee2:	mov	r1, r8
   33ee4:	mov	r0, fp
   33ee6:	bl	1bd1c <__btrfs_error@@Base>
   33eea:	b.n	33e8a <btrfs_scan_devices@@Base+0xa2>
   33eec:	mov.w	r2, #65536	; 0x10000
   33ef0:	movs	r3, #0
   33ef2:	str	r6, [sp, #8]
   33ef4:	mov	r1, r8
   33ef6:	strd	r2, r3, [sp]
   33efa:	sub.w	r3, r4, #16
   33efe:	sub.w	r2, r4, #28
   33f02:	bl	2c98c <btrfs_scan_one_device@@Base>
   33f06:	mov	r6, r0
   33f08:	cbz	r0, 33f1c <btrfs_scan_devices@@Base+0x134>
   33f0a:	blx	8f58 <__errno_location@plt>
   33f0e:	negs	r6, r6
   33f10:	mov	r1, r8
   33f12:	str	r6, [r0, #0]
   33f14:	vmov	r0, s16
   33f18:	bl	1bd1c <__btrfs_error@@Base>
   33f1c:	mov	r0, r7
   33f1e:	blx	91e4 <close@plt>
   33f22:	b.n	33e8a <btrfs_scan_devices@@Base+0xa2>
   33f24:	mov	r5, r3
   33f26:	b.n	33e44 <btrfs_scan_devices@@Base+0x5c>
   33f28:	mov	r0, r5
   33f2a:	add.w	sp, sp, #4128	; 0x1020
   33f2e:	add	sp, #20
   33f30:	vpop	{d8}
   33f34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f38:	ldr	r4, [r4, #112]	; 0x70
   33f3a:	movs	r3, r0
   33f3c:	lsls	r0, r1, #10
   33f3e:	movs	r0, r0
   33f40:	strh	r4, [r3, #34]	; 0x22
   33f42:	movs	r3, r0
   33f44:	ldr	r3, [pc, #756]	; (3423c <path_is_block_device@@Base+0x50>)
   33f46:	movs	r2, r0
   33f48:	ldr	r2, [r1, #108]	; 0x6c
   33f4a:	movs	r3, r0
   33f4c:	ldr	r3, [pc, #656]	; (341e0 <btrfs_scan_devices@@Base+0x3f8>)
   33f4e:	movs	r2, r0
   33f50:	add	r2, pc, #448	; (adr r2, 34114 <btrfs_scan_devices@@Base+0x32c>)
   33f52:	movs	r0, r0
   33f54:	ldr	r4, [pc, #756]	; (3424c <path_is_mount_point@@Base+0x4>)
   33f56:	movs	r2, r0
   33f58:	ldr	r3, [pc, #608]	; (341bc <btrfs_scan_devices@@Base+0x3d4>)
   33f5a:	movs	r2, r0
   33f5c:	strh	r4, [r0, #30]
   33f5e:	movs	r3, r0
   33f60:	ldr	r2, [pc, #100]	; (33fc8 <btrfs_scan_devices@@Base+0x1e0>)
   33f62:	ldr	r3, [pc, #104]	; (33fcc <btrfs_scan_devices@@Base+0x1e4>)
   33f64:	add	r2, pc
   33f66:	push	{lr}
   33f68:	sub	sp, #116	; 0x74
   33f6a:	ldr	r3, [r2, r3]
   33f6c:	mov	r1, sp
   33f6e:	ldr	r3, [r3, #0]
   33f70:	str	r3, [sp, #108]	; 0x6c
   33f72:	mov.w	r3, #0
   33f76:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   33f7a:	cmp	r0, #0
   33f7c:	bge.n	33f9a <btrfs_scan_devices@@Base+0x1b2>
   33f7e:	blx	8f58 <__errno_location@plt>
   33f82:	ldr	r0, [r0, #0]
   33f84:	negs	r0, r0
   33f86:	ldr	r2, [pc, #72]	; (33fd0 <btrfs_scan_devices@@Base+0x1e8>)
   33f88:	ldr	r3, [pc, #64]	; (33fcc <btrfs_scan_devices@@Base+0x1e4>)
   33f8a:	add	r2, pc
   33f8c:	ldr	r3, [r2, r3]
   33f8e:	ldr	r2, [r3, #0]
   33f90:	ldr	r3, [sp, #108]	; 0x6c
   33f92:	eors	r2, r3
   33f94:	beq.n	33fc2 <btrfs_scan_devices@@Base+0x1da>
   33f96:	blx	8c90 <__stack_chk_fail@plt>
   33f9a:	ldr	r3, [sp, #16]
   33f9c:	and.w	r3, r3, #61440	; 0xf000
   33fa0:	cmp.w	r3, #24576	; 0x6000
   33fa4:	bne.n	33fbe <btrfs_scan_devices@@Base+0x1d6>
   33fa6:	ldrd	r0, r1, [sp, #32]
   33faa:	lsrs	r2, r0, #8
   33fac:	lsrs	r3, r1, #8
   33fae:	orr.w	r2, r2, r1, lsl #24
   33fb2:	cmp	r3, #0
   33fb4:	itte	eq
   33fb6:	cmpeq	r2, #7
   33fb8:	moveq	r0, #1
   33fba:	movne	r0, #0
   33fbc:	b.n	33f86 <btrfs_scan_devices@@Base+0x19e>
   33fbe:	movs	r0, #0
   33fc0:	b.n	33f86 <btrfs_scan_devices@@Base+0x19e>
   33fc2:	add	sp, #116	; 0x74
   33fc4:	ldr.w	pc, [sp], #4
   33fc8:	ldr	r4, [r6, #88]	; 0x58
   33fca:	movs	r3, r0
   33fcc:	lsls	r0, r1, #10
   33fce:	movs	r0, r0
   33fd0:	ldr	r6, [r1, #88]	; 0x58
   33fd2:	movs	r3, r0
   33fd4:	ldr	r1, [pc, #192]	; (34098 <btrfs_scan_devices@@Base+0x2b0>)
   33fd6:	ldr	r2, [pc, #196]	; (3409c <btrfs_scan_devices@@Base+0x2b4>)
   33fd8:	push	{r4, r5, r6, r7, lr}
   33fda:	add	r1, pc
   33fdc:	sub.w	sp, sp, #8192	; 0x2000
   33fe0:	sub	sp, #20
   33fe2:	ldr	r2, [r1, r2]
   33fe4:	add.w	r3, sp, #8192	; 0x2000
   33fe8:	add	r5, sp, #12
   33fea:	ldr	r2, [r2, #0]
   33fec:	str	r2, [r3, #12]
   33fee:	mov.w	r2, #0
   33ff2:	adds	r3, #12
   33ff4:	ldr	r3, [pc, #168]	; (340a0 <btrfs_scan_devices@@Base+0x2b8>)
   33ff6:	movs	r2, #1
   33ff8:	str	r0, [sp, #4]
   33ffa:	mov	r0, r5
   33ffc:	add	r3, pc
   33ffe:	str	r3, [sp, #0]
   34000:	mov.w	r3, #4096	; 0x1000
   34004:	mov	r1, r3
   34006:	blx	9208 <__snprintf_chk@plt>
   3400a:	ldr	r1, [pc, #152]	; (340a4 <btrfs_scan_devices@@Base+0x2bc>)
   3400c:	mov	r0, r5
   3400e:	add	r1, pc
   34010:	blx	911c <fopen64@plt>
   34014:	mov	r4, r0
   34016:	cbz	r0, 34036 <btrfs_scan_devices@@Base+0x24e>
   34018:	add.w	r6, sp, #4096	; 0x1000
   3401c:	mov	r2, r0
   3401e:	adds	r6, #12
   34020:	mov.w	r1, #4096	; 0x1000
   34024:	mov	r0, r6
   34026:	blx	8b90 <fgets@plt>
   3402a:	cbnz	r0, 34050 <btrfs_scan_devices@@Base+0x268>
   3402c:	movs	r5, #0
   3402e:	mov	r0, r4
   34030:	mov	r4, r5
   34032:	blx	9058 <fclose@plt>
   34036:	ldr	r1, [pc, #112]	; (340a8 <btrfs_scan_devices@@Base+0x2c0>)
   34038:	add.w	r3, sp, #8192	; 0x2000
   3403c:	ldr	r2, [pc, #92]	; (3409c <btrfs_scan_devices@@Base+0x2b4>)
   3403e:	adds	r3, #12
   34040:	add	r1, pc
   34042:	ldr	r2, [r1, r2]
   34044:	ldr	r1, [r2, #0]
   34046:	ldr	r2, [r3, #0]
   34048:	eors	r1, r2
   3404a:	beq.n	3408e <btrfs_scan_devices@@Base+0x2a6>
   3404c:	blx	8c90 <__stack_chk_fail@plt>
   34050:	mov	r0, r6
   34052:	blx	8f1c <strlen@plt>
   34056:	cmp	r0, #1
   34058:	bls.n	3402c <btrfs_scan_devices@@Base+0x244>
   3405a:	add	r0, r6
   3405c:	ldr	r3, [pc, #76]	; (340ac <btrfs_scan_devices@@Base+0x2c4>)
   3405e:	movs	r7, #0
   34060:	movs	r2, #1
   34062:	strb.w	r7, [r0, #-1]
   34066:	add	r3, pc
   34068:	str	r3, [sp, #0]
   3406a:	mov.w	r3, #4096	; 0x1000
   3406e:	mov	r1, r3
   34070:	mov	r0, r5
   34072:	str	r6, [sp, #4]
   34074:	blx	9208 <__snprintf_chk@plt>
   34078:	mov	r1, r7
   3407a:	mov	r0, r5
   3407c:	blx	904c <access@plt>
   34080:	cmp	r0, #0
   34082:	bne.n	3402c <btrfs_scan_devices@@Base+0x244>
   34084:	mov	r0, r5
   34086:	blx	8c78 <strdup@plt+0x4>
   3408a:	mov	r5, r0
   3408c:	b.n	3402e <btrfs_scan_devices@@Base+0x246>
   3408e:	mov	r0, r4
   34090:	add.w	sp, sp, #8192	; 0x2000
   34094:	add	sp, #20
   34096:	pop	{r4, r5, r6, r7, pc}
   34098:	ldr	r6, [r7, #80]	; 0x50
   3409a:	movs	r3, r0
   3409c:	lsls	r0, r1, #10
   3409e:	movs	r0, r0
   340a0:	ldr	r2, [pc, #276]	; (341b8 <btrfs_scan_devices@@Base+0x3d0>)
   340a2:	movs	r2, r0
   340a4:	vaddl.u<illegal width 64>	q0, d3, d0
   340a8:	ldr	r0, [r3, #76]	; 0x4c
   340aa:	movs	r3, r0
   340ac:	ldr	r1, [pc, #964]	; (34474 <is_same_loop_file@@Base+0x3c>)
   340ae:	movs	r2, r0
   340b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   340b4:	mov	r8, r1
   340b6:	ldr	r1, [pc, #284]	; (341d4 <btrfs_scan_devices@@Base+0x3ec>)
   340b8:	sub.w	sp, sp, #8448	; 0x2100
   340bc:	ldr	r2, [pc, #280]	; (341d8 <btrfs_scan_devices@@Base+0x3f0>)
   340be:	sub	sp, #12
   340c0:	add	r1, pc
   340c2:	add.w	r4, sp, #4352	; 0x1100
   340c6:	add.w	r3, sp, #8448	; 0x2100
   340ca:	adds	r4, #4
   340cc:	ldr	r2, [r1, r2]
   340ce:	adds	r3, #4
   340d0:	mov	r1, r4
   340d2:	mov	r9, r0
   340d4:	ldr	r2, [r2, #0]
   340d6:	str	r2, [r3, #0]
   340d8:	mov.w	r2, #0
   340dc:	mov.w	r2, #4096	; 0x1000
   340e0:	blx	8d6c <__realpath_chk@plt>
   340e4:	cbnz	r0, 340ee <btrfs_scan_devices@@Base+0x306>
   340e6:	blx	8f58 <__errno_location@plt>
   340ea:	ldr	r6, [r0, #0]
   340ec:	b.n	3413e <btrfs_scan_devices@@Base+0x356>
   340ee:	movs	r1, #47	; 0x2f
   340f0:	mov	r0, r4
   340f2:	blx	9094 <strrchr@plt>
   340f6:	add	r4, sp, #264	; 0x108
   340f8:	ldr	r3, [pc, #224]	; (341dc <btrfs_scan_devices@@Base+0x3f4>)
   340fa:	subs	r5, r4, #4
   340fc:	movs	r2, #1
   340fe:	add	r3, pc
   34100:	str	r3, [sp, #0]
   34102:	mov.w	r3, #4096	; 0x1000
   34106:	mov	r1, r3
   34108:	str	r0, [sp, #4]
   3410a:	mov	r0, r5
   3410c:	blx	9208 <__snprintf_chk@plt>
   34110:	ldr	r1, [pc, #204]	; (341e0 <btrfs_scan_devices@@Base+0x3f8>)
   34112:	mov	r0, r5
   34114:	add	r1, pc
   34116:	blx	911c <fopen64@plt>
   3411a:	mov	r7, r0
   3411c:	cmp	r0, #0
   3411e:	bne.n	34194 <btrfs_scan_devices@@Base+0x3ac>
   34120:	blx	8f58 <__errno_location@plt>
   34124:	ldr	r6, [r0, #0]
   34126:	mov	r5, r0
   34128:	cmp	r6, #2
   3412a:	bne.n	3413e <btrfs_scan_devices@@Base+0x356>
   3412c:	mov	r0, r9
   3412e:	mov.w	r1, #2048	; 0x800
   34132:	blx	8e14 <open64@plt>
   34136:	subs.w	r9, r0, #0
   3413a:	bge.n	34142 <btrfs_scan_devices@@Base+0x35a>
   3413c:	ldr	r6, [r5, #0]
   3413e:	negs	r6, r6
   34140:	b.n	3415c <btrfs_scan_devices@@Base+0x374>
   34142:	add	r4, sp, #8
   34144:	movw	r1, #19461	; 0x4c05
   34148:	mov	r2, r4
   3414a:	blx	8d48 <ioctl@plt>
   3414e:	subs	r6, r0, #0
   34150:	bge.n	34176 <btrfs_scan_devices@@Base+0x38e>
   34152:	ldr	r6, [r5, #0]
   34154:	negs	r6, r6
   34156:	mov	r0, r9
   34158:	blx	91e4 <close@plt>
   3415c:	ldr	r1, [pc, #132]	; (341e4 <btrfs_scan_devices@@Base+0x3fc>)
   3415e:	add.w	r3, sp, #8448	; 0x2100
   34162:	ldr	r2, [pc, #116]	; (341d8 <btrfs_scan_devices@@Base+0x3f0>)
   34164:	adds	r3, #4
   34166:	add	r1, pc
   34168:	ldr	r2, [r1, r2]
   3416a:	ldr	r1, [r2, #0]
   3416c:	ldr	r2, [r3, #0]
   3416e:	eors	r1, r2
   34170:	beq.n	341c8 <btrfs_scan_devices@@Base+0x3e0>
   34172:	blx	8c90 <__stack_chk_fail@plt>
   34176:	adds	r4, #56	; 0x38
   34178:	mov	r5, r8
   3417a:	ldmia	r4!, {r0, r1, r2, r3}
   3417c:	stmia	r5!, {r0, r1, r2, r3}
   3417e:	ldmia	r4!, {r0, r1, r2, r3}
   34180:	stmia	r5!, {r0, r1, r2, r3}
   34182:	ldmia	r4!, {r0, r1, r2, r3}
   34184:	stmia	r5!, {r0, r1, r2, r3}
   34186:	ldmia.w	r4, {r0, r1, r2, r3}
   3418a:	stmia.w	r5, {r0, r1, r2, r3}
   3418e:	strb.w	r7, [r8, #64]	; 0x40
   34192:	b.n	34156 <btrfs_scan_devices@@Base+0x36e>
   34194:	movw	r3, #4095	; 0xfff
   34198:	str	r3, [sp, #4]
   3419a:	ldr	r3, [pc, #76]	; (341e8 <btrfs_scan_devices@@Base+0x400>)
   3419c:	subs	r4, #24
   3419e:	movs	r2, #1
   341a0:	add	r3, pc
   341a2:	str	r3, [sp, #0]
   341a4:	movs	r3, #20
   341a6:	mov	r0, r4
   341a8:	mov	r1, r3
   341aa:	blx	9208 <__snprintf_chk@plt>
   341ae:	mov	r1, r4
   341b0:	mov	r2, r8
   341b2:	mov	r0, r7
   341b4:	blx	8fcc <fscanf@plt>
   341b8:	mov	r4, r0
   341ba:	mov	r0, r7
   341bc:	blx	9058 <fclose@plt>
   341c0:	adds	r4, #1
   341c2:	beq.n	340e6 <btrfs_scan_devices@@Base+0x2fe>
   341c4:	movs	r6, #0
   341c6:	b.n	3415c <btrfs_scan_devices@@Base+0x374>
   341c8:	mov	r0, r6
   341ca:	add.w	sp, sp, #8448	; 0x2100
   341ce:	add	sp, #12
   341d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   341d4:	ldr	r0, [r3, #68]	; 0x44
   341d6:	movs	r3, r0
   341d8:	lsls	r0, r1, #10
   341da:	movs	r0, r0
   341dc:	ldr	r1, [pc, #416]	; (34380 <path_is_reg_or_block_device@@Base+0x3c>)
   341de:	movs	r2, r0
   341e0:	cdp2	0, 10, cr0, cr13, cr0, {0}
   341e4:	ldr	r2, [r6, #56]	; 0x38
   341e6:	movs	r3, r0
   341e8:	ldr	r0, [pc, #920]	; (34584 <is_same_loop_file@@Base+0x14c>)
   341ea:	movs	r2, r0

000341ec <path_is_block_device@@Base>:
   341ec:	ldr	r2, [pc, #76]	; (3423c <path_is_block_device@@Base+0x50>)
   341ee:	ldr	r3, [pc, #80]	; (34240 <path_is_block_device@@Base+0x54>)
   341f0:	add	r2, pc
   341f2:	push	{lr}
   341f4:	sub	sp, #116	; 0x74
   341f6:	ldr	r3, [r2, r3]
   341f8:	mov	r1, sp
   341fa:	ldr	r3, [r3, #0]
   341fc:	str	r3, [sp, #108]	; 0x6c
   341fe:	mov.w	r3, #0
   34202:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   34206:	cmp	r0, #0
   34208:	bge.n	34226 <path_is_block_device@@Base+0x3a>
   3420a:	blx	8f58 <__errno_location@plt>
   3420e:	ldr	r0, [r0, #0]
   34210:	negs	r0, r0
   34212:	ldr	r2, [pc, #48]	; (34244 <path_is_block_device@@Base+0x58>)
   34214:	ldr	r3, [pc, #40]	; (34240 <path_is_block_device@@Base+0x54>)
   34216:	add	r2, pc
   34218:	ldr	r3, [r2, r3]
   3421a:	ldr	r2, [r3, #0]
   3421c:	ldr	r3, [sp, #108]	; 0x6c
   3421e:	eors	r2, r3
   34220:	beq.n	34236 <path_is_block_device@@Base+0x4a>
   34222:	blx	8c90 <__stack_chk_fail@plt>
   34226:	ldr	r0, [sp, #16]
   34228:	and.w	r0, r0, #61440	; 0xf000
   3422c:	sub.w	r3, r0, #24576	; 0x6000
   34230:	negs	r0, r3
   34232:	adcs	r0, r3
   34234:	b.n	34212 <path_is_block_device@@Base+0x26>
   34236:	add	sp, #116	; 0x74
   34238:	ldr.w	pc, [sp], #4
   3423c:	ldr	r0, [r5, #48]	; 0x30
   3423e:	movs	r3, r0
   34240:	lsls	r0, r1, #10
   34242:	movs	r0, r0
   34244:	ldr	r2, [r0, #48]	; 0x30
   34246:	movs	r3, r0

00034248 <path_is_mount_point@@Base>:
   34248:	push	{r4, r5, r6, lr}
   3424a:	mov	r6, r0
   3424c:	ldr	r1, [pc, #56]	; (34288 <path_is_mount_point@@Base+0x40>)
   3424e:	ldr	r0, [pc, #60]	; (3428c <path_is_mount_point@@Base+0x44>)
   34250:	add	r1, pc
   34252:	add	r0, pc
   34254:	blx	9128 <setmntent@plt>
   34258:	mov	r5, r0
   3425a:	cbnz	r0, 3426c <path_is_mount_point@@Base+0x24>
   3425c:	mov.w	r4, #4294967295	; 0xffffffff
   34260:	b.n	3427e <path_is_mount_point@@Base+0x36>
   34262:	ldr	r0, [r4, #4]
   34264:	mov	r1, r6
   34266:	blx	8b04 <strcmp@plt>
   3426a:	cbz	r0, 34282 <path_is_mount_point@@Base+0x3a>
   3426c:	mov	r0, r5
   3426e:	blx	8df0 <getmntent@plt>
   34272:	mov	r4, r0
   34274:	cmp	r0, #0
   34276:	bne.n	34262 <path_is_mount_point@@Base+0x1a>
   34278:	mov	r0, r5
   3427a:	blx	9064 <endmntent@plt>
   3427e:	mov	r0, r4
   34280:	pop	{r4, r5, r6, pc}
   34282:	movs	r4, #1
   34284:	b.n	34278 <path_is_mount_point@@Base+0x30>
   34286:	nop
   34288:	ldc2l	0, cr0, [r1, #-0]
   3428c:	ldr	r0, [pc, #244]	; (34384 <path_is_reg_or_block_device@@Base+0x40>)
   3428e:	movs	r2, r0

00034290 <path_is_reg_file@@Base>:
   34290:	ldr	r2, [pc, #76]	; (342e0 <path_is_reg_file@@Base+0x50>)
   34292:	ldr	r3, [pc, #80]	; (342e4 <path_is_reg_file@@Base+0x54>)
   34294:	add	r2, pc
   34296:	push	{lr}
   34298:	sub	sp, #116	; 0x74
   3429a:	ldr	r3, [r2, r3]
   3429c:	mov	r1, sp
   3429e:	ldr	r3, [r3, #0]
   342a0:	str	r3, [sp, #108]	; 0x6c
   342a2:	mov.w	r3, #0
   342a6:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   342aa:	cmp	r0, #0
   342ac:	bge.n	342ca <path_is_reg_file@@Base+0x3a>
   342ae:	blx	8f58 <__errno_location@plt>
   342b2:	ldr	r0, [r0, #0]
   342b4:	negs	r0, r0
   342b6:	ldr	r2, [pc, #48]	; (342e8 <path_is_reg_file@@Base+0x58>)
   342b8:	ldr	r3, [pc, #40]	; (342e4 <path_is_reg_file@@Base+0x54>)
   342ba:	add	r2, pc
   342bc:	ldr	r3, [r2, r3]
   342be:	ldr	r2, [r3, #0]
   342c0:	ldr	r3, [sp, #108]	; 0x6c
   342c2:	eors	r2, r3
   342c4:	beq.n	342da <path_is_reg_file@@Base+0x4a>
   342c6:	blx	8c90 <__stack_chk_fail@plt>
   342ca:	ldr	r0, [sp, #16]
   342cc:	and.w	r0, r0, #61440	; 0xf000
   342d0:	sub.w	r3, r0, #32768	; 0x8000
   342d4:	negs	r0, r3
   342d6:	adcs	r0, r3
   342d8:	b.n	342b6 <path_is_reg_file@@Base+0x26>
   342da:	add	sp, #116	; 0x74
   342dc:	ldr.w	pc, [sp], #4
   342e0:	ldr	r4, [r0, #40]	; 0x28
   342e2:	movs	r3, r0
   342e4:	lsls	r0, r1, #10
   342e6:	movs	r0, r0
   342e8:	ldr	r6, [r3, #36]	; 0x24
   342ea:	movs	r3, r0

000342ec <path_exists@@Base>:
   342ec:	ldr	r2, [pc, #72]	; (34338 <path_exists@@Base+0x4c>)
   342ee:	ldr	r3, [pc, #76]	; (3433c <path_exists@@Base+0x50>)
   342f0:	add	r2, pc
   342f2:	push	{lr}
   342f4:	sub	sp, #116	; 0x74
   342f6:	ldr	r3, [r2, r3]
   342f8:	mov	r1, sp
   342fa:	ldr	r3, [r3, #0]
   342fc:	str	r3, [sp, #108]	; 0x6c
   342fe:	mov.w	r3, #0
   34302:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   34306:	cmp	r0, #0
   34308:	bge.n	3432a <path_exists@@Base+0x3e>
   3430a:	blx	8f58 <__errno_location@plt>
   3430e:	ldr	r0, [r0, #0]
   34310:	cmp	r0, #2
   34312:	beq.n	3432e <path_exists@@Base+0x42>
   34314:	negs	r0, r0
   34316:	ldr	r2, [pc, #40]	; (34340 <path_exists@@Base+0x54>)
   34318:	ldr	r3, [pc, #32]	; (3433c <path_exists@@Base+0x50>)
   3431a:	add	r2, pc
   3431c:	ldr	r3, [r2, r3]
   3431e:	ldr	r2, [r3, #0]
   34320:	ldr	r3, [sp, #108]	; 0x6c
   34322:	eors	r2, r3
   34324:	beq.n	34332 <path_exists@@Base+0x46>
   34326:	blx	8c90 <__stack_chk_fail@plt>
   3432a:	movs	r0, #1
   3432c:	b.n	34316 <path_exists@@Base+0x2a>
   3432e:	movs	r0, #0
   34330:	b.n	34316 <path_exists@@Base+0x2a>
   34332:	add	sp, #116	; 0x74
   34334:	ldr.w	pc, [sp], #4
   34338:	ldr	r0, [r5, #32]
   3433a:	movs	r3, r0
   3433c:	lsls	r0, r1, #10
   3433e:	movs	r0, r0
   34340:	ldr	r6, [r7, #28]
   34342:	movs	r3, r0

00034344 <path_is_reg_or_block_device@@Base>:
   34344:	ldr	r2, [pc, #96]	; (343a8 <path_is_reg_or_block_device@@Base+0x64>)
   34346:	ldr	r3, [pc, #100]	; (343ac <path_is_reg_or_block_device@@Base+0x68>)
   34348:	add	r2, pc
   3434a:	push	{lr}
   3434c:	sub	sp, #116	; 0x74
   3434e:	ldr	r3, [r2, r3]
   34350:	mov	r1, sp
   34352:	ldr	r3, [r3, #0]
   34354:	str	r3, [sp, #108]	; 0x6c
   34356:	mov.w	r3, #0
   3435a:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   3435e:	cmp	r0, #0
   34360:	bge.n	34382 <path_is_reg_or_block_device@@Base+0x3e>
   34362:	blx	8f58 <__errno_location@plt>
   34366:	ldr	r0, [r0, #0]
   34368:	cmp	r0, #2
   3436a:	beq.n	34398 <path_is_reg_or_block_device@@Base+0x54>
   3436c:	negs	r0, r0
   3436e:	ldr	r2, [pc, #64]	; (343b0 <path_is_reg_or_block_device@@Base+0x6c>)
   34370:	ldr	r3, [pc, #56]	; (343ac <path_is_reg_or_block_device@@Base+0x68>)
   34372:	add	r2, pc
   34374:	ldr	r3, [r2, r3]
   34376:	ldr	r2, [r3, #0]
   34378:	ldr	r3, [sp, #108]	; 0x6c
   3437a:	eors	r2, r3
   3437c:	beq.n	343a0 <path_is_reg_or_block_device@@Base+0x5c>
   3437e:	blx	8c90 <__stack_chk_fail@plt>
   34382:	ldr	r0, [sp, #16]
   34384:	and.w	r0, r0, #61440	; 0xf000
   34388:	cmp.w	r0, #24576	; 0x6000
   3438c:	beq.n	3439c <path_is_reg_or_block_device@@Base+0x58>
   3438e:	sub.w	r3, r0, #32768	; 0x8000
   34392:	negs	r0, r3
   34394:	adcs	r0, r3
   34396:	b.n	3436e <path_is_reg_or_block_device@@Base+0x2a>
   34398:	movs	r0, #0
   3439a:	b.n	3436e <path_is_reg_or_block_device@@Base+0x2a>
   3439c:	movs	r0, #1
   3439e:	b.n	3436e <path_is_reg_or_block_device@@Base+0x2a>
   343a0:	add	sp, #116	; 0x74
   343a2:	ldr.w	pc, [sp], #4
   343a6:	nop
   343a8:	ldr	r0, [r2, #28]
   343aa:	movs	r3, r0
   343ac:	lsls	r0, r1, #10
   343ae:	movs	r0, r0
   343b0:	ldr	r6, [r4, #24]
   343b2:	movs	r3, r0

000343b4 <canonicalize_dm_name@@Base>:
   343b4:	cbz	r0, 343bc <canonicalize_dm_name@@Base+0x8>
   343b6:	ldrb	r3, [r0, #0]
   343b8:	cbz	r3, 343bc <canonicalize_dm_name@@Base+0x8>
   343ba:	b.n	33fd4 <btrfs_scan_devices@@Base+0x1ec>
   343bc:	movs	r0, #0
   343be:	bx	lr

000343c0 <canonicalize_path@@Base>:
   343c0:	push	{r3, r4, r5, lr}
   343c2:	mov	r5, r0
   343c4:	cbz	r0, 34414 <canonicalize_path@@Base+0x54>
   343c6:	ldrb	r4, [r0, #0]
   343c8:	cbz	r4, 34416 <canonicalize_path@@Base+0x56>
   343ca:	movs	r1, #0
   343cc:	blx	91cc <realpath@plt>
   343d0:	mov	r4, r0
   343d2:	cbnz	r0, 343de <canonicalize_path@@Base+0x1e>
   343d4:	mov	r0, r5
   343d6:	ldmia.w	sp!, {r3, r4, r5, lr}
   343da:	b.w	8c74 <strdup@plt>
   343de:	movs	r1, #47	; 0x2f
   343e0:	blx	9094 <strrchr@plt>
   343e4:	mov	r5, r0
   343e6:	cbz	r0, 34416 <canonicalize_path@@Base+0x56>
   343e8:	ldr	r1, [pc, #48]	; (3441c <canonicalize_path@@Base+0x5c>)
   343ea:	movs	r2, #4
   343ec:	add	r1, pc
   343ee:	blx	91b4 <strncmp@plt>
   343f2:	cbnz	r0, 34416 <canonicalize_path@@Base+0x56>
   343f4:	blx	8ef8 <__ctype_b_loc@plt>
   343f8:	ldrb	r2, [r5, #4]
   343fa:	ldr	r3, [r0, #0]
   343fc:	ldrh.w	r3, [r3, r2, lsl #1]
   34400:	lsls	r3, r3, #20
   34402:	bpl.n	34416 <canonicalize_path@@Base+0x56>
   34404:	adds	r0, r5, #1
   34406:	bl	343b4 <canonicalize_dm_name@@Base>
   3440a:	mov	r5, r0
   3440c:	cbz	r0, 34416 <canonicalize_path@@Base+0x56>
   3440e:	mov	r0, r4
   34410:	blx	8b84 <free@plt+0x4>
   34414:	mov	r4, r5
   34416:	mov	r0, r4
   34418:	pop	{r3, r4, r5, pc}
   3441a:	nop
   3441c:	mov	sp, r6
   3441e:	movs	r2, r0

00034420 <__strncpy_null@@Base>:
   34420:	push	{r3, r4, r5, lr}
   34422:	mov	r4, r2
   34424:	mov	r5, r0
   34426:	blx	8fb4 <strncpy@plt>
   3442a:	cbz	r4, 34434 <__strncpy_null@@Base+0x14>
   3442c:	add	r4, r5
   3442e:	movs	r3, #0
   34430:	strb.w	r3, [r4, #-1]
   34434:	mov	r0, r5
   34436:	pop	{r3, r4, r5, pc}

00034438 <is_same_loop_file@@Base>:
   34438:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3443c:	mov	r5, r1
   3443e:	ldr	r1, [pc, #368]	; (345b0 <is_same_loop_file@@Base+0x178>)
   34440:	sub.w	sp, sp, #16512	; 0x4080
   34444:	ldr	r2, [pc, #364]	; (345b4 <is_same_loop_file@@Base+0x17c>)
   34446:	sub	sp, #88	; 0x58
   34448:	add	r1, pc
   3444a:	add.w	r3, sp, #16512	; 0x4080
   3444e:	adds	r3, #84	; 0x54
   34450:	mov	r6, r0
   34452:	ldr	r2, [r1, r2]
   34454:	ldr	r2, [r2, #0]
   34456:	str	r2, [r3, #0]
   34458:	mov.w	r2, #0
   3445c:	bl	33f60 <btrfs_scan_devices@@Base+0x178>
   34460:	subs	r4, r0, #0
   34462:	bge.n	3446c <is_same_loop_file@@Base+0x34>
   34464:	adds	r3, r4, #2
   34466:	bne.n	344fe <is_same_loop_file@@Base+0xc6>
   34468:	movs	r4, #0
   3446a:	b.n	344fe <is_same_loop_file@@Base+0xc6>
   3446c:	beq.n	34488 <is_same_loop_file@@Base+0x50>
   3446e:	add	r7, sp, #212	; 0xd4
   34470:	mov	r0, r6
   34472:	mov	r1, r7
   34474:	bl	340b0 <btrfs_scan_devices@@Base+0x2c8>
   34478:	subs	r4, r0, #0
   3447a:	bge.n	34518 <is_same_loop_file@@Base+0xe0>
   3447c:	blx	8f58 <__errno_location@plt>
   34480:	ldr	r3, [r0, #0]
   34482:	cmp	r3, #1
   34484:	bne.n	344fe <is_same_loop_file@@Base+0xc6>
   34486:	movs	r6, #0
   34488:	mov	r0, r5
   3448a:	bl	33f60 <btrfs_scan_devices@@Base+0x178>
   3448e:	subs	r4, r0, #0
   34490:	blt.n	34464 <is_same_loop_file@@Base+0x2c>
   34492:	beq.n	344b2 <is_same_loop_file@@Base+0x7a>
   34494:	add.w	r7, sp, #4288	; 0x10c0
   34498:	mov	r0, r5
   3449a:	adds	r7, #20
   3449c:	mov	r1, r7
   3449e:	bl	340b0 <btrfs_scan_devices@@Base+0x2c8>
   344a2:	subs	r4, r0, #0
   344a4:	bge.n	3451c <is_same_loop_file@@Base+0xe4>
   344a6:	blx	8f58 <__errno_location@plt>
   344aa:	ldr	r3, [r0, #0]
   344ac:	cmp	r3, #1
   344ae:	bne.n	344fe <is_same_loop_file@@Base+0xc6>
   344b0:	movs	r5, #0
   344b2:	add.w	r4, sp, #8384	; 0x20c0
   344b6:	mov.w	r2, #4096	; 0x1000
   344ba:	adds	r4, #20
   344bc:	mov	r0, r6
   344be:	mov	r1, r4
   344c0:	blx	8d6c <__realpath_chk@plt>
   344c4:	cbnz	r0, 344d2 <is_same_loop_file@@Base+0x9a>
   344c6:	mov.w	r2, #4096	; 0x1000
   344ca:	mov	r1, r6
   344cc:	mov	r0, r4
   344ce:	bl	34420 <__strncpy_null@@Base>
   344d2:	add.w	r7, sp, #12480	; 0x30c0
   344d6:	mov.w	r2, #4096	; 0x1000
   344da:	adds	r7, #20
   344dc:	mov	r0, r5
   344de:	mov	r1, r7
   344e0:	blx	8d6c <__realpath_chk@plt>
   344e4:	cbnz	r0, 344f2 <is_same_loop_file@@Base+0xba>
   344e6:	mov.w	r2, #4096	; 0x1000
   344ea:	mov	r1, r5
   344ec:	mov	r0, r7
   344ee:	bl	34420 <__strncpy_null@@Base>
   344f2:	mov	r1, r7
   344f4:	mov	r0, r4
   344f6:	blx	8b04 <strcmp@plt>
   344fa:	cbnz	r0, 34520 <is_same_loop_file@@Base+0xe8>
   344fc:	movs	r4, #1
   344fe:	ldr	r1, [pc, #184]	; (345b8 <is_same_loop_file@@Base+0x180>)
   34500:	add.w	r3, sp, #16512	; 0x4080
   34504:	ldr	r2, [pc, #172]	; (345b4 <is_same_loop_file@@Base+0x17c>)
   34506:	adds	r3, #84	; 0x54
   34508:	add	r1, pc
   3450a:	ldr	r2, [r1, r2]
   3450c:	ldr	r1, [r2, #0]
   3450e:	ldr	r2, [r3, #0]
   34510:	eors	r1, r2
   34512:	beq.n	345a2 <is_same_loop_file@@Base+0x16a>
   34514:	blx	8c90 <__stack_chk_fail@plt>
   34518:	mov	r6, r7
   3451a:	b.n	34488 <is_same_loop_file@@Base+0x50>
   3451c:	mov	r5, r7
   3451e:	b.n	344b2 <is_same_loop_file@@Base+0x7a>
   34520:	add	r7, sp, #88	; 0x58
   34522:	mov	r0, r6
   34524:	sub.w	r8, r7, #88	; 0x58
   34528:	mov	r1, r8
   3452a:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   3452e:	cmp	r0, #0
   34530:	bge.n	34540 <is_same_loop_file@@Base+0x108>
   34532:	blx	8f58 <__errno_location@plt>
   34536:	ldr	r4, [r0, #0]
   34538:	cmp	r4, #2
   3453a:	beq.n	34468 <is_same_loop_file@@Base+0x30>
   3453c:	negs	r4, r4
   3453e:	b.n	344fe <is_same_loop_file@@Base+0xc6>
   34540:	add	r6, sp, #216	; 0xd8
   34542:	mov	r0, r5
   34544:	sub.w	r4, r6, #112	; 0x70
   34548:	mov	r1, r4
   3454a:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   3454e:	cmp	r0, #0
   34550:	blt.n	34532 <is_same_loop_file@@Base+0xfa>
   34552:	ldr.w	r3, [r8, #16]
   34556:	and.w	r3, r3, #61440	; 0xf000
   3455a:	cmp.w	r3, #24576	; 0x6000
   3455e:	bne.n	3457c <is_same_loop_file@@Base+0x144>
   34560:	ldr	r3, [r4, #16]
   34562:	and.w	r3, r3, #61440	; 0xf000
   34566:	cmp.w	r3, #24576	; 0x6000
   3456a:	bne.n	3457c <is_same_loop_file@@Base+0x144>
   3456c:	ldrd	r0, r1, [r8, #32]
   34570:	ldrd	r2, r3, [r4, #32]
   34574:	cmp	r1, r3
   34576:	it	eq
   34578:	cmpeq	r0, r2
   3457a:	beq.n	344fc <is_same_loop_file@@Base+0xc4>
   3457c:	ldrd	r0, r1, [r7, #-88]	; 0x58
   34580:	ldrd	r2, r3, [r6, #-112]	; 0x70
   34584:	cmp	r1, r3
   34586:	it	eq
   34588:	cmpeq	r0, r2
   3458a:	bne.w	34468 <is_same_loop_file@@Base+0x30>
   3458e:	ldrd	r2, r3, [r4, #96]	; 0x60
   34592:	ldrd	r0, r1, [r8, #96]	; 0x60
   34596:	cmp	r1, r3
   34598:	itte	eq
   3459a:	cmpeq	r0, r2
   3459c:	moveq	r4, #1
   3459e:	movne	r4, #0
   345a0:	b.n	344fe <is_same_loop_file@@Base+0xc6>
   345a2:	mov	r0, r4
   345a4:	add.w	sp, sp, #16512	; 0x4080
   345a8:	add	sp, #88	; 0x58
   345aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   345ae:	nop
   345b0:	ldr	r0, [r2, #12]
   345b2:	movs	r3, r0
   345b4:	lsls	r0, r1, #10
   345b6:	movs	r0, r0
   345b8:	ldr	r0, [r2, #0]
   345ba:	movs	r3, r0

000345bc <path_is_dir@@Base>:
   345bc:	ldr	r2, [pc, #76]	; (3460c <path_is_dir@@Base+0x50>)
   345be:	ldr	r3, [pc, #80]	; (34610 <path_is_dir@@Base+0x54>)
   345c0:	add	r2, pc
   345c2:	push	{lr}
   345c4:	sub	sp, #116	; 0x74
   345c6:	ldr	r3, [r2, r3]
   345c8:	mov	r1, sp
   345ca:	ldr	r3, [r3, #0]
   345cc:	str	r3, [sp, #108]	; 0x6c
   345ce:	mov.w	r3, #0
   345d2:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   345d6:	cmp	r0, #0
   345d8:	bge.n	345f6 <path_is_dir@@Base+0x3a>
   345da:	blx	8f58 <__errno_location@plt>
   345de:	ldr	r0, [r0, #0]
   345e0:	negs	r0, r0
   345e2:	ldr	r2, [pc, #48]	; (34614 <path_is_dir@@Base+0x58>)
   345e4:	ldr	r3, [pc, #40]	; (34610 <path_is_dir@@Base+0x54>)
   345e6:	add	r2, pc
   345e8:	ldr	r3, [r2, r3]
   345ea:	ldr	r2, [r3, #0]
   345ec:	ldr	r3, [sp, #108]	; 0x6c
   345ee:	eors	r2, r3
   345f0:	beq.n	34606 <path_is_dir@@Base+0x4a>
   345f2:	blx	8c90 <__stack_chk_fail@plt>
   345f6:	ldr	r0, [sp, #16]
   345f8:	and.w	r0, r0, #61440	; 0xf000
   345fc:	sub.w	r3, r0, #16384	; 0x4000
   34600:	negs	r0, r3
   34602:	adcs	r0, r3
   34604:	b.n	345e2 <path_is_dir@@Base+0x26>
   34606:	add	sp, #116	; 0x74
   34608:	ldr.w	pc, [sp], #4
   3460c:	str	r0, [r3, #116]	; 0x74
   3460e:	movs	r3, r0
   34610:	lsls	r0, r1, #10
   34612:	movs	r0, r0
   34614:	str	r2, [r6, #112]	; 0x70
   34616:	movs	r3, r0

00034618 <arg_copy_path@@Base>:
   34618:	push	{r0, r1, r2, r4, r5, lr}
   3461a:	mov	r5, r0
   3461c:	mov	r0, r1
   3461e:	mov	r4, r2
   34620:	str	r1, [sp, #4]
   34622:	blx	8f1c <strlen@plt>
   34626:	cmp.w	r0, #4096	; 0x1000
   3462a:	bcs.n	34640 <arg_copy_path@@Base+0x28>
   3462c:	cmp	r4, r0
   3462e:	bls.n	34640 <arg_copy_path@@Base+0x28>
   34630:	ldr	r1, [sp, #4]
   34632:	mov	r2, r4
   34634:	mov	r0, r5
   34636:	bl	34420 <__strncpy_null@@Base>
   3463a:	movs	r0, #0
   3463c:	add	sp, #12
   3463e:	pop	{r4, r5, pc}
   34640:	mvn.w	r0, #35	; 0x23
   34644:	b.n	3463c <arg_copy_path@@Base+0x24>

00034646 <test_issubvolname@@Base>:
   34646:	push	{r4, lr}
   34648:	mov	r4, r0
   3464a:	ldrb	r3, [r0, #0]
   3464c:	cbz	r3, 34674 <test_issubvolname@@Base+0x2e>
   3464e:	movs	r1, #47	; 0x2f
   34650:	blx	8f28 <strchr@plt>
   34654:	cbnz	r0, 34674 <test_issubvolname@@Base+0x2e>
   34656:	ldr	r1, [pc, #32]	; (34678 <test_issubvolname@@Base+0x32>)
   34658:	mov	r0, r4
   3465a:	add	r1, pc
   3465c:	blx	8b04 <strcmp@plt>
   34660:	cbz	r0, 34672 <test_issubvolname@@Base+0x2c>
   34662:	ldr	r1, [pc, #24]	; (3467c <test_issubvolname@@Base+0x36>)
   34664:	mov	r0, r4
   34666:	add	r1, pc
   34668:	blx	8b04 <strcmp@plt>
   3466c:	subs	r0, #0
   3466e:	it	ne
   34670:	movne	r0, #1
   34672:	pop	{r4, pc}
   34674:	movs	r0, #0
   34676:	b.n	34672 <test_issubvolname@@Base+0x2c>
   34678:	add	r5, sp, #92	; 0x5c
   3467a:	movs	r0, r0
   3467c:	add	r5, sp, #40	; 0x28
   3467e:	movs	r0, r0
   34680:	and.w	r2, r0, #2040	; 0x7f8
   34684:	movs	r3, #0
   34686:	cmp	r3, #0
   34688:	it	eq
   3468a:	cmpeq	r2, #64	; 0x40
   3468c:	beq.n	34708 <test_issubvolname@@Base+0xc2>
   3468e:	cmp	r3, #0
   34690:	it	eq
   34692:	cmpeq	r2, #65	; 0x41
   34694:	bcs.n	346c8 <test_issubvolname@@Base+0x82>
   34696:	cmp	r3, #0
   34698:	it	eq
   3469a:	cmpeq	r2, #16
   3469c:	beq.n	34714 <test_issubvolname@@Base+0xce>
   3469e:	cmp	r3, #0
   346a0:	it	eq
   346a2:	cmpeq	r2, #17
   346a4:	bcs.n	346ba <test_issubvolname@@Base+0x74>
   346a6:	orrs.w	r1, r2, r3
   346aa:	beq.n	3470c <test_issubvolname@@Base+0xc6>
   346ac:	cmp	r3, #0
   346ae:	itet	eq
   346b0:	cmpeq	r2, #8
   346b2:	movne.w	r0, #4294967295	; 0xffffffff
   346b6:	moveq	r0, #2
   346b8:	bx	lr
   346ba:	cmp	r3, #0
   346bc:	itet	eq
   346be:	cmpeq	r2, #32
   346c0:	movne.w	r0, #4294967295	; 0xffffffff
   346c4:	moveq	r0, #1
   346c6:	bx	lr
   346c8:	cmp	r3, #0
   346ca:	it	eq
   346cc:	cmpeq.w	r2, #512	; 0x200
   346d0:	beq.n	34710 <test_issubvolname@@Base+0xca>
   346d2:	movs	r1, #0
   346d4:	cmp	r1, r3
   346d6:	mov.w	r0, #512	; 0x200
   346da:	it	eq
   346dc:	cmpeq	r0, r2
   346de:	bcc.n	346f8 <test_issubvolname@@Base+0xb2>
   346e0:	cmp	r3, #0
   346e2:	it	eq
   346e4:	cmpeq	r2, #128	; 0x80
   346e6:	beq.n	34714 <test_issubvolname@@Base+0xce>
   346e8:	cmp	r3, #0
   346ea:	itet	eq
   346ec:	cmpeq.w	r2, #256	; 0x100
   346f0:	movne.w	r0, #4294967295	; 0xffffffff
   346f4:	moveq	r0, #3
   346f6:	bx	lr
   346f8:	cmp	r3, #0
   346fa:	itet	eq
   346fc:	cmpeq.w	r2, #1024	; 0x400
   34700:	movne.w	r0, #4294967295	; 0xffffffff
   34704:	moveq	r0, #4
   34706:	bx	lr
   34708:	movs	r0, #4
   3470a:	bx	lr
   3470c:	movs	r0, #1
   3470e:	bx	lr
   34710:	movs	r0, #3
   34712:	bx	lr
   34714:	movs	r0, #2
   34716:	bx	lr
   34718:	ldr	r2, [pc, #136]	; (347a4 <test_issubvolname@@Base+0x15e>)
   3471a:	movs	r1, #0
   3471c:	ldr	r3, [pc, #136]	; (347a8 <test_issubvolname@@Base+0x162>)
   3471e:	add	r2, pc
   34720:	ldr	r0, [pc, #136]	; (347ac <test_issubvolname@@Base+0x166>)
   34722:	push	{r4, r5, lr}
   34724:	sub	sp, #20
   34726:	ldr	r3, [r2, r3]
   34728:	add	r0, pc
   3472a:	ldr	r3, [r3, #0]
   3472c:	str	r3, [sp, #12]
   3472e:	mov.w	r3, #0
   34732:	blx	8e14 <open64@plt>
   34736:	subs	r4, r0, #0
   34738:	bge.n	34786 <test_issubvolname@@Base+0x140>
   3473a:	ldr	r0, [pc, #116]	; (347b0 <test_issubvolname@@Base+0x16a>)
   3473c:	ldr	r4, [pc, #116]	; (347b4 <test_issubvolname@@Base+0x16e>)
   3473e:	add	r0, pc
   34740:	bl	1bca0 <__btrfs_warning@@Base>
   34744:	movs	r1, #0
   34746:	add	r0, sp, #4
   34748:	add	r4, pc
   3474a:	blx	8da8 <gettimeofday@plt>
   3474e:	blx	8f04 <getpid@plt>
   34752:	ldr	r3, [sp, #4]
   34754:	eors	r0, r3
   34756:	strh	r0, [r4, #0]
   34758:	blx	90f8 <getppid@plt>
   3475c:	ldr	r3, [sp, #8]
   3475e:	ldr	r2, [sp, #4]
   34760:	eors	r0, r3
   34762:	eors	r3, r2
   34764:	strh	r0, [r4, #2]
   34766:	asrs	r3, r3, #16
   34768:	strh	r3, [r4, #4]
   3476a:	ldr	r3, [pc, #76]	; (347b8 <test_issubvolname@@Base+0x172>)
   3476c:	movs	r2, #1
   3476e:	add	r3, pc
   34770:	str	r2, [r3, #8]
   34772:	ldr	r2, [pc, #72]	; (347bc <test_issubvolname@@Base+0x176>)
   34774:	ldr	r3, [pc, #48]	; (347a8 <test_issubvolname@@Base+0x162>)
   34776:	add	r2, pc
   34778:	ldr	r3, [r2, r3]
   3477a:	ldr	r2, [r3, #0]
   3477c:	ldr	r3, [sp, #12]
   3477e:	eors	r2, r3
   34780:	beq.n	3479e <test_issubvolname@@Base+0x158>
   34782:	blx	8c90 <__stack_chk_fail@plt>
   34786:	ldr	r1, [pc, #56]	; (347c0 <test_issubvolname@@Base+0x17a>)
   34788:	movs	r2, #6
   3478a:	add	r1, pc
   3478c:	blx	8b40 <read@plt>
   34790:	mov	r5, r0
   34792:	mov	r0, r4
   34794:	blx	91e4 <close@plt>
   34798:	cmp	r5, #5
   3479a:	bhi.n	3476a <test_issubvolname@@Base+0x124>
   3479c:	b.n	3473a <test_issubvolname@@Base+0xf4>
   3479e:	add	sp, #20
   347a0:	pop	{r4, r5, pc}
   347a2:	nop
   347a4:	str	r2, [r7, #92]	; 0x5c
   347a6:	movs	r3, r0
   347a8:	lsls	r0, r1, #10
   347aa:	movs	r0, r0
   347ac:	muls	r6, r7
   347ae:	movs	r2, r0
   347b0:	muls	r5, r6
   347b2:	movs	r2, r0
   347b4:	ldrb	r4, [r5, #12]
   347b6:	movs	r3, r0
   347b8:	ldrb	r6, [r0, #12]
   347ba:	movs	r3, r0
   347bc:	str	r2, [r4, #88]	; 0x58
   347be:	movs	r3, r0
   347c0:	ldrb	r2, [r5, #11]
   347c2:	movs	r3, r0
   347c4:	ldr.w	ip, [pc, #76]	; 34814 <test_issubvolname@@Base+0x1ce>
   347c8:	ldr	r5, [pc, #76]	; (34818 <test_issubvolname@@Base+0x1d2>)
   347ca:	add	ip, pc
   347cc:	ldr	r4, [pc, #76]	; (3481c <test_issubvolname@@Base+0x1d6>)
   347ce:	push	{lr}
   347d0:	sub	sp, #92	; 0x5c
   347d2:	ldr.w	r5, [ip, r5]
   347d6:	add	r4, pc
   347d8:	ldr	r5, [r5, #0]
   347da:	str	r5, [sp, #84]	; 0x54
   347dc:	mov.w	r5, #0
   347e0:	ldr	r5, [pc, #60]	; (34820 <test_issubvolname@@Base+0x1da>)
   347e2:	ldr	r4, [r4, r5]
   347e4:	strd	r2, r1, [sp]
   347e8:	movs	r1, #1
   347ea:	strd	r0, r3, [sp, #8]
   347ee:	ldr	r2, [pc, #52]	; (34824 <test_issubvolname@@Base+0x1de>)
   347f0:	ldr	r3, [pc, #52]	; (34828 <test_issubvolname@@Base+0x1e2>)
   347f2:	ldr	r0, [r4, #0]
   347f4:	add	r4, sp, #20
   347f6:	add	r3, pc
   347f8:	add	r2, pc
   347fa:	blx	9040 <__fprintf_chk@plt+0x4>
   347fe:	movs	r1, #16
   34800:	mov	r0, r4
   34802:	blx	8e98 <backtrace@plt>
   34806:	movs	r2, #2
   34808:	mov	r1, r0
   3480a:	mov	r0, r4
   3480c:	blx	9214 <backtrace_symbols_fd@plt>
   34810:	blx	91c0 <abort@plt>
   34814:	str	r6, [r1, #84]	; 0x54
   34816:	movs	r3, r0
   34818:	lsls	r0, r1, #10
   3481a:	movs	r0, r0
   3481c:	str	r2, [r0, #84]	; 0x54
   3481e:	movs	r3, r0
   34820:	lsls	r4, r3, #10
   34822:	movs	r0, r0
   34824:	ldr	r3, [sp, #408]	; 0x198
   34826:	movs	r0, r0
   34828:	cmn	r2, r7
   3482a:	movs	r2, r0

0003482c <btrfs_make_root_dir@@Base>:
   3482c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   34830:	mov	r6, r2
   34832:	ldr	r2, [pc, #208]	; (34904 <btrfs_make_root_dir@@Base+0xd8>)
   34834:	mov	r5, r3
   34836:	ldr	r3, [pc, #208]	; (34908 <btrfs_make_root_dir@@Base+0xdc>)
   34838:	sub	sp, #192	; 0xc0
   3483a:	add	r2, pc
   3483c:	mov	r8, r0
   3483e:	movs	r0, #0
   34840:	mov	r4, r1
   34842:	ldr	r3, [r2, r3]
   34844:	ldr	r3, [r3, #0]
   34846:	str	r3, [sp, #188]	; 0xbc
   34848:	mov.w	r3, #0
   3484c:	blx	8c0c <time@plt>
   34850:	movs	r2, #104	; 0x68
   34852:	movs	r1, #0
   34854:	mov	r7, r0
   34856:	add	r0, sp, #36	; 0x24
   34858:	blx	8f98 <memset@plt+0x4>
   3485c:	ldr.w	r3, [r8, #8]
   34860:	movs	r2, #1
   34862:	str	r2, [sp, #68]	; 0x44
   34864:	ldr.w	r2, [r4, #464]	; 0x1d0
   34868:	mov	r0, r8
   3486a:	str	r3, [sp, #28]
   3486c:	ldr.w	r3, [r8, #12]
   34870:	ldr.w	r1, [r2, #384]	; 0x180
   34874:	str	r3, [sp, #32]
   34876:	movs	r3, #0
   34878:	strd	r3, r7, [sp, #172]	; 0xac
   3487c:	strd	r1, r3, [sp, #52]	; 0x34
   34880:	movw	r1, #16877	; 0x41ed
   34884:	strd	r3, r7, [sp, #148]	; 0x94
   34888:	str	r1, [sp, #80]	; 0x50
   3488a:	asrs	r1, r7, #31
   3488c:	strd	r1, r3, [sp, #156]	; 0x9c
   34890:	strd	r7, r1, [sp, #164]	; 0xa4
   34894:	strd	r1, r3, [sp, #180]	; 0xb4
   34898:	strd	r7, r1, [sp, #140]	; 0x8c
   3489c:	mov	r1, r4
   3489e:	ldr	r3, [r2, #28]
   348a0:	cmp	r3, r4
   348a2:	it	eq
   348a4:	ldreq.w	r3, [r2, #308]	; 0x134
   348a8:	mov	r2, r6
   348aa:	itt	eq
   348ac:	streq.w	r6, [r3, #128]	; 0x80
   348b0:	streq.w	r5, [r3, #132]	; 0x84
   348b4:	add	r3, sp, #28
   348b6:	str	r3, [sp, #0]
   348b8:	mov	r3, r5
   348ba:	bl	3210c <btrfs_insert_inode@@Base>
   348be:	cbnz	r0, 348e8 <btrfs_make_root_dir@@Base+0xbc>
   348c0:	movs	r2, #0
   348c2:	movs	r3, #0
   348c4:	strd	r2, r3, [sp, #16]
   348c8:	mov	r1, r4
   348ca:	ldr	r2, [pc, #64]	; (3490c <btrfs_make_root_dir@@Base+0xe0>)
   348cc:	movs	r3, #2
   348ce:	mov	r0, r8
   348d0:	strd	r6, r5, [sp, #8]
   348d4:	add	r2, pc
   348d6:	strd	r6, r5, [sp]
   348da:	bl	32514 <btrfs_insert_inode_ref@@Base>
   348de:	cbnz	r0, 348e8 <btrfs_make_root_dir@@Base+0xbc>
   348e0:	str.w	r6, [r4, #176]	; 0xb0
   348e4:	str.w	r5, [r4, #180]	; 0xb4
   348e8:	ldr	r2, [pc, #36]	; (34910 <btrfs_make_root_dir@@Base+0xe4>)
   348ea:	ldr	r3, [pc, #28]	; (34908 <btrfs_make_root_dir@@Base+0xdc>)
   348ec:	add	r2, pc
   348ee:	ldr	r3, [r2, r3]
   348f0:	ldr	r2, [r3, #0]
   348f2:	ldr	r3, [sp, #188]	; 0xbc
   348f4:	eors	r2, r3
   348f6:	beq.n	348fc <btrfs_make_root_dir@@Base+0xd0>
   348f8:	blx	8c90 <__stack_chk_fail@plt>
   348fc:	add	sp, #192	; 0xc0
   348fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   34902:	nop
   34904:	str	r6, [r3, #76]	; 0x4c
   34906:	movs	r3, r0
   34908:	lsls	r0, r1, #10
   3490a:	movs	r0, r0
   3490c:	add	r2, sp, #624	; 0x270
   3490e:	movs	r0, r0
   34910:	str	r4, [r5, #64]	; 0x40
   34912:	movs	r3, r0

00034914 <check_mounted_where@@Base>:
   34914:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34918:	mov	r8, r2
   3491a:	ldr	r2, [pc, #300]	; (34a48 <check_mounted_where@@Base+0x134>)
   3491c:	mov	r6, r3
   3491e:	ldr	r3, [pc, #300]	; (34a4c <check_mounted_where@@Base+0x138>)
   34920:	sub	sp, #60	; 0x3c
   34922:	add	r2, pc
   34924:	mov	r9, r1
   34926:	ldr.w	sl, [sp, #96]	; 0x60
   3492a:	ldr	r3, [r2, r3]
   3492c:	movs	r2, #1
   3492e:	ldr	r3, [r3, #0]
   34930:	str	r3, [sp, #52]	; 0x34
   34932:	mov.w	r3, #0
   34936:	movs	r3, #0
   34938:	strd	r2, r3, [sp, #40]	; 0x28
   3493c:	movs	r3, #0
   3493e:	str	r3, [sp, #36]	; 0x24
   34940:	mov.w	r2, #65536	; 0x10000
   34944:	ldr	r3, [sp, #100]	; 0x64
   34946:	str	r3, [sp, #8]
   34948:	movs	r3, #0
   3494a:	strd	r2, r3, [sp]
   3494e:	add	r3, sp, #40	; 0x28
   34950:	add	r2, sp, #36	; 0x24
   34952:	bl	2c98c <btrfs_scan_one_device@@Base>
   34956:	subs	r3, r0, #0
   34958:	str	r3, [sp, #16]
   3495a:	bge.n	349b8 <check_mounted_where@@Base+0xa4>
   3495c:	ldr	r1, [pc, #240]	; (34a50 <check_mounted_where@@Base+0x13c>)
   3495e:	ldr	r0, [pc, #244]	; (34a54 <check_mounted_where@@Base+0x140>)
   34960:	add	r1, pc
   34962:	add	r0, pc
   34964:	blx	9128 <setmntent@plt>
   34968:	mov	r7, r0
   3496a:	cmp	r0, #0
   3496c:	beq.n	349e2 <check_mounted_where@@Base+0xce>
   3496e:	ldr.w	fp, [pc, #232]	; 34a58 <check_mounted_where@@Base+0x144>
   34972:	add	fp, pc
   34974:	mov	r0, r7
   34976:	blx	8df0 <getmntent@plt>
   3497a:	mov	r5, r0
   3497c:	cmp	r0, #0
   3497e:	beq.n	34a08 <check_mounted_where@@Base+0xf4>
   34980:	ldr	r3, [sp, #16]
   34982:	cmp	r3, #0
   34984:	blt.n	349ec <check_mounted_where@@Base+0xd8>
   34986:	ldr	r0, [r5, #8]
   34988:	mov	r1, fp
   3498a:	blx	8b04 <strcmp@plt>
   3498e:	cmp	r0, #0
   34990:	bne.n	34974 <check_mounted_where@@Base+0x60>
   34992:	ldr	r2, [sp, #36]	; 0x24
   34994:	ldr	r1, [r5, #0]
   34996:	ldr.w	r3, [r2, #72]!
   3499a:	cmp	r3, r2
   3499c:	beq.n	34974 <check_mounted_where@@Base+0x60>
   3499e:	ldr	r0, [r3, #32]
   349a0:	strd	r1, r2, [sp, #24]
   349a4:	str	r3, [sp, #20]
   349a6:	bl	34438 <is_same_loop_file@@Base>
   349aa:	subs	r4, r0, #0
   349ac:	bne.n	34a3c <check_mounted_where@@Base+0x128>
   349ae:	ldr	r3, [sp, #20]
   349b0:	ldrd	r1, r2, [sp, #24]
   349b4:	ldr	r3, [r3, #0]
   349b6:	b.n	3499a <check_mounted_where@@Base+0x86>
   349b8:	ldrd	r2, r3, [sp, #40]	; 0x28
   349bc:	cmp	r3, #0
   349be:	it	eq
   349c0:	cmpeq	r2, #2
   349c2:	bcc.n	3495c <check_mounted_where@@Base+0x48>
   349c4:	bl	33de8 <btrfs_scan_devices@@Base>
   349c8:	mov	r4, r0
   349ca:	cmp	r0, #0
   349cc:	beq.n	3495c <check_mounted_where@@Base+0x48>
   349ce:	ldr	r2, [pc, #140]	; (34a5c <check_mounted_where@@Base+0x148>)
   349d0:	ldr	r3, [pc, #120]	; (34a4c <check_mounted_where@@Base+0x138>)
   349d2:	add	r2, pc
   349d4:	ldr	r3, [r2, r3]
   349d6:	ldr	r2, [r3, #0]
   349d8:	ldr	r3, [sp, #52]	; 0x34
   349da:	eors	r2, r3
   349dc:	beq.n	34a40 <check_mounted_where@@Base+0x12c>
   349de:	blx	8c90 <__stack_chk_fail@plt>
   349e2:	blx	8f58 <__errno_location@plt>
   349e6:	ldr	r4, [r0, #0]
   349e8:	negs	r4, r4
   349ea:	b.n	349ce <check_mounted_where@@Base+0xba>
   349ec:	ldr	r0, [r5, #0]
   349ee:	bl	34344 <path_is_reg_or_block_device@@Base>
   349f2:	subs	r4, r0, #0
   349f4:	blt.n	34a1a <check_mounted_where@@Base+0x106>
   349f6:	beq.n	34974 <check_mounted_where@@Base+0x60>
   349f8:	ldr	r1, [r5, #0]
   349fa:	mov	r0, r9
   349fc:	bl	34438 <is_same_loop_file@@Base>
   34a00:	subs	r4, r0, #0
   34a02:	blt.n	34a1a <check_mounted_where@@Base+0x106>
   34a04:	beq.n	34974 <check_mounted_where@@Base+0x60>
   34a06:	cbnz	r6, 34a22 <check_mounted_where@@Base+0x10e>
   34a08:	cmp.w	sl, #0
   34a0c:	beq.n	34a14 <check_mounted_where@@Base+0x100>
   34a0e:	ldr	r3, [sp, #36]	; 0x24
   34a10:	str.w	r3, [sl]
   34a14:	subs	r4, r5, #0
   34a16:	it	ne
   34a18:	movne	r4, #1
   34a1a:	mov	r0, r7
   34a1c:	blx	9064 <endmntent@plt>
   34a20:	b.n	349ce <check_mounted_where@@Base+0xba>
   34a22:	cmp.w	r8, #0
   34a26:	beq.n	34a08 <check_mounted_where@@Base+0xf4>
   34a28:	mov	r2, r6
   34a2a:	add	r6, r8
   34a2c:	ldr	r1, [r5, #4]
   34a2e:	mov	r0, r8
   34a30:	blx	8fb4 <strncpy@plt>
   34a34:	movs	r3, #0
   34a36:	strb.w	r3, [r6, #-1]
   34a3a:	b.n	34a08 <check_mounted_where@@Base+0xf4>
   34a3c:	blt.n	34a1a <check_mounted_where@@Base+0x106>
   34a3e:	b.n	34a06 <check_mounted_where@@Base+0xf2>
   34a40:	mov	r0, r4
   34a42:	add	sp, #60	; 0x3c
   34a44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a48:	str	r6, [r6, #60]	; 0x3c
   34a4a:	movs	r3, r0
   34a4c:	lsls	r0, r1, #10
   34a4e:	movs	r0, r0
   34a50:			; <UNDEFINED> instruction: 0xf6610000
   34a54:	asrs	r5, r5
   34a56:	movs	r2, r0
   34a58:	lsls	r4, r4
   34a5a:	movs	r2, r0
   34a5c:	str	r6, [r0, #52]	; 0x34
   34a5e:	movs	r3, r0

00034a60 <get_btrfs_mount@@Base>:
   34a60:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   34a64:	mov	r5, r0
   34a66:	mov	r7, r1
   34a68:	mov	r8, r2
   34a6a:	bl	341ec <path_is_block_device@@Base>
   34a6e:	subs	r4, r0, #0
   34a70:	bgt.n	34a9e <get_btrfs_mount@@Base+0x3e>
   34a72:	bne.n	34a8a <get_btrfs_mount@@Base+0x2a>
   34a74:	ldr	r0, [pc, #108]	; (34ae4 <get_btrfs_mount@@Base+0x84>)
   34a76:	mov	r1, r5
   34a78:	mvn.w	r4, #21
   34a7c:	add	r0, pc
   34a7e:	bl	1bd1c <__btrfs_error@@Base>
   34a82:	mov	r0, r4
   34a84:	add	sp, #8
   34a86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   34a8a:	blx	8f58 <__errno_location@plt>
   34a8e:	negs	r3, r4
   34a90:	mov	r1, r5
   34a92:	str	r3, [r0, #0]
   34a94:	ldr	r0, [pc, #80]	; (34ae8 <get_btrfs_mount@@Base+0x88>)
   34a96:	add	r0, pc
   34a98:	bl	1bd1c <__btrfs_error@@Base>
   34a9c:	b.n	34a82 <get_btrfs_mount@@Base+0x22>
   34a9e:	movs	r1, #0
   34aa0:	mov	r0, r5
   34aa2:	blx	8e14 <open64@plt>
   34aa6:	subs	r6, r0, #0
   34aa8:	bge.n	34ac8 <get_btrfs_mount@@Base+0x68>
   34aaa:	blx	8f58 <__errno_location@plt>
   34aae:	mov	r1, r5
   34ab0:	ldr	r4, [r0, #0]
   34ab2:	ldr	r0, [pc, #56]	; (34aec <get_btrfs_mount@@Base+0x8c>)
   34ab4:	negs	r4, r4
   34ab6:	add	r0, pc
   34ab8:	bl	1bd1c <__btrfs_error@@Base>
   34abc:	adds	r3, r6, #1
   34abe:	beq.n	34a82 <get_btrfs_mount@@Base+0x22>
   34ac0:	mov	r0, r6
   34ac2:	blx	91e4 <close@plt>
   34ac6:	b.n	34a82 <get_btrfs_mount@@Base+0x22>
   34ac8:	movs	r3, #0
   34aca:	mov	r2, r7
   34acc:	strd	r3, r3, [sp]
   34ad0:	mov	r1, r5
   34ad2:	mov	r3, r8
   34ad4:	bl	34914 <check_mounted_where@@Base>
   34ad8:	cmp	r0, #0
   34ada:	ite	eq
   34adc:	mvneq.w	r4, #21
   34ae0:	movne	r4, #0
   34ae2:	b.n	34ac0 <get_btrfs_mount@@Base+0x60>
   34ae4:	lsls	r3, r0
   34ae6:	movs	r2, r0
   34ae8:	lsls	r0, r0
   34aea:	movs	r2, r0
   34aec:	lsls	r1, r0
   34aee:	movs	r2, r0

00034af0 <check_mounted@@Base>:
   34af0:	push	{r0, r1, r2, r4, r5, lr}
   34af2:	movs	r1, #0
   34af4:	mov	r4, r0
   34af6:	blx	8e14 <open64@plt>
   34afa:	subs	r5, r0, #0
   34afc:	bge.n	34b16 <check_mounted@@Base+0x26>
   34afe:	ldr	r0, [pc, #48]	; (34b30 <check_mounted@@Base+0x40>)
   34b00:	mov	r1, r4
   34b02:	add	r0, pc
   34b04:	bl	1bd1c <__btrfs_error@@Base>
   34b08:	blx	8f58 <__errno_location@plt>
   34b0c:	ldr	r4, [r0, #0]
   34b0e:	negs	r4, r4
   34b10:	mov	r0, r4
   34b12:	add	sp, #12
   34b14:	pop	{r4, r5, pc}
   34b16:	movs	r3, #0
   34b18:	mov	r1, r4
   34b1a:	mov	r2, r3
   34b1c:	strd	r3, r3, [sp]
   34b20:	bl	34914 <check_mounted_where@@Base>
   34b24:	mov	r4, r0
   34b26:	mov	r0, r5
   34b28:	blx	91e4 <close@plt>
   34b2c:	b.n	34b10 <check_mounted@@Base+0x20>
   34b2e:	nop
   34b30:	ands	r0, r5
   34b32:	movs	r2, r0

00034b34 <pretty_size_snprintf@@Base>:
   34b34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34b38:	mov	r7, r1
   34b3a:	vpush	{d8}
   34b3e:	mov	r6, r0
   34b40:	mov	r5, r3
   34b42:	vmov	s17, r2
   34b46:	ldr	r2, [pc, #540]	; (34d64 <pretty_size_snprintf@@Base+0x230>)
   34b48:	sub	sp, #44	; 0x2c
   34b4a:	add	r2, pc
   34b4c:	ldr	r1, [sp, #88]	; 0x58
   34b4e:	cbz	r3, 34b82 <pretty_size_snprintf@@Base+0x4e>
   34b50:	and.w	r3, r1, #1024	; 0x400
   34b54:	str	r3, [sp, #32]
   34b56:	bic.w	r3, r1, #1272	; 0x4f8
   34b5a:	bic.w	r3, r3, #7
   34b5e:	cmp.w	r3, #256	; 0x100
   34b62:	bne.n	34b94 <pretty_size_snprintf@@Base+0x60>
   34b64:	ldr	r3, [sp, #32]
   34b66:	strd	r0, r7, [sp, #8]
   34b6a:	cbz	r3, 34b8e <pretty_size_snprintf@@Base+0x5a>
   34b6c:	ldr	r3, [pc, #504]	; (34d68 <pretty_size_snprintf@@Base+0x234>)
   34b6e:	add	r3, pc
   34b70:	str	r3, [sp, #0]
   34b72:	movs	r2, #1
   34b74:	vmov	r0, s17
   34b78:	mov.w	r3, #4294967295	; 0xffffffff
   34b7c:	mov	r1, r5
   34b7e:	blx	9208 <__snprintf_chk@plt>
   34b82:	movs	r0, #0
   34b84:	add	sp, #44	; 0x2c
   34b86:	vpop	{d8}
   34b8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34b8e:	ldr	r3, [pc, #476]	; (34d6c <pretty_size_snprintf@@Base+0x238>)
   34b90:	add	r3, pc
   34b92:	b.n	34b70 <pretty_size_snprintf@@Base+0x3c>
   34b94:	cmp.w	r3, #512	; 0x200
   34b98:	beq.w	34d28 <pretty_size_snprintf@@Base+0x1f4>
   34b9c:	cmp.w	r3, #768	; 0x300
   34ba0:	bne.w	34d02 <pretty_size_snprintf@@Base+0x1ce>
   34ba4:	ldr	r3, [pc, #456]	; (34d70 <pretty_size_snprintf@@Base+0x23c>)
   34ba6:	mov.w	r2, #1000	; 0x3e8
   34baa:	mov.w	sl, #1000	; 0x3e8
   34bae:	add	r3, pc
   34bb0:	adds	r3, #28
   34bb2:	str	r3, [sp, #36]	; 0x24
   34bb4:	b.n	34d36 <pretty_size_snprintf@@Base+0x202>
   34bb6:	asrs	r1, r2, #31
   34bb8:	movs	r4, #1
   34bba:	mul.w	r3, sl, r1
   34bbe:	mla	r3, r2, fp, r3
   34bc2:	umull	sl, fp, sl, r2
   34bc6:	add	fp, r3
   34bc8:	asrs	r1, r2, #31
   34bca:	adds	r4, #1
   34bcc:	mul.w	r3, sl, r1
   34bd0:	mla	r3, r2, fp, r3
   34bd4:	umull	sl, fp, sl, r2
   34bd8:	add	fp, r3
   34bda:	asrs	r1, r2, #31
   34bdc:	adds	r4, #1
   34bde:	mul.w	r3, sl, r1
   34be2:	mla	r3, r2, fp, r3
   34be6:	umull	sl, fp, sl, r2
   34bea:	add	fp, r3
   34bec:	adds	r4, #1
   34bee:	cmp	r4, #6
   34bf0:	ble.n	34c66 <pretty_size_snprintf@@Base+0x132>
   34bf2:	vmov	r2, s17
   34bf6:	movs	r3, #0
   34bf8:	ldr	r1, [pc, #376]	; (34d74 <pretty_size_snprintf@@Base+0x240>)
   34bfa:	movs	r0, #1
   34bfc:	add	r1, pc
   34bfe:	strb	r3, [r2, #0]
   34c00:	mov	r2, r4
   34c02:	blx	900c <__printf_chk@plt+0x4>
   34c06:	ldr	r3, [pc, #368]	; (34d78 <pretty_size_snprintf@@Base+0x244>)
   34c08:	ldr	r1, [pc, #368]	; (34d7c <pretty_size_snprintf@@Base+0x248>)
   34c0a:	movw	r2, #451	; 0x1c3
   34c0e:	ldr	r0, [pc, #368]	; (34d80 <pretty_size_snprintf@@Base+0x24c>)
   34c10:	add	r3, pc
   34c12:	add	r1, pc
   34c14:	add	r0, pc
   34c16:	blx	9220 <__assert_fail@plt>
   34c1a:	movs	r4, #0
   34c1c:	b.n	34bc8 <pretty_size_snprintf@@Base+0x94>
   34c1e:	movs	r4, #0
   34c20:	b.n	34bda <pretty_size_snprintf@@Base+0xa6>
   34c22:	movs	r4, #0
   34c24:	b.n	34bec <pretty_size_snprintf@@Base+0xb8>
   34c26:	mov	r3, r2
   34c28:	asrs	r4, r2, #31
   34c2a:	strd	r3, r4, [sp, #24]
   34c2e:	mov	r8, r6
   34c30:	ldr	r3, [sp, #32]
   34c32:	mov	r9, r7
   34c34:	cmp	r3, #0
   34c36:	beq.n	34cec <pretty_size_snprintf@@Base+0x1b8>
   34c38:	movs	r4, #0
   34c3a:	cmp.w	r8, #0
   34c3e:	mov	r2, r8
   34c40:	sbcs.w	r1, r9, #0
   34c44:	mov	r3, r9
   34c46:	bge.n	34c50 <pretty_size_snprintf@@Base+0x11c>
   34c48:	rsbs	r2, r8, #0
   34c4c:	sbc.w	r3, r9, r9, lsl #1
   34c50:	ldrd	r0, r1, [sp, #24]
   34c54:	cmp	r2, r0
   34c56:	sbcs	r3, r1
   34c58:	bge.n	34cb0 <pretty_size_snprintf@@Base+0x17c>
   34c5a:	cmp	r4, #0
   34c5c:	bne.n	34bee <pretty_size_snprintf@@Base+0xba>
   34c5e:	mov.w	sl, #1
   34c62:	mov.w	fp, #0
   34c66:	mov	r1, fp
   34c68:	mov	r0, sl
   34c6a:	bl	3dc78 <btrfs_util_strerror@@Base+0x6d0>
   34c6e:	ldr	r3, [sp, #32]
   34c70:	mov	r1, r7
   34c72:	vmov	s16, r0
   34c76:	mov	r0, r6
   34c78:	cmp	r3, #0
   34c7a:	beq.n	34cfc <pretty_size_snprintf@@Base+0x1c8>
   34c7c:	bl	3dc88 <btrfs_util_strerror@@Base+0x6e0>
   34c80:	vmov	s15, r0
   34c84:	ldr	r3, [sp, #36]	; 0x24
   34c86:	vmov	r0, s17
   34c8a:	movs	r2, #1
   34c8c:	vdiv.f32	s14, s15, s16
   34c90:	mov	r1, r5
   34c92:	ldr.w	r3, [r3, r4, lsl #2]
   34c96:	str	r3, [sp, #16]
   34c98:	ldr	r3, [pc, #232]	; (34d84 <pretty_size_snprintf@@Base+0x250>)
   34c9a:	add	r3, pc
   34c9c:	str	r3, [sp, #0]
   34c9e:	mov.w	r3, #4294967295	; 0xffffffff
   34ca2:	vcvt.f64.f32	d7, s14
   34ca6:	vstr	d7, [sp, #8]
   34caa:	blx	9208 <__snprintf_chk@plt>
   34cae:	b.n	34b84 <pretty_size_snprintf@@Base+0x50>
   34cb0:	mov	r0, r8
   34cb2:	mov	r1, r9
   34cb4:	ldrd	r2, r3, [sp, #24]
   34cb8:	mov	r6, r8
   34cba:	bl	3dd04 <btrfs_util_strerror@@Base+0x75c>
   34cbe:	mov	r7, r9
   34cc0:	adds	r4, #1
   34cc2:	mov	r8, r0
   34cc4:	mov	r9, r1
   34cc6:	b.n	34c3a <pretty_size_snprintf@@Base+0x106>
   34cc8:	mov	r0, r8
   34cca:	mov	r1, r9
   34ccc:	ldrd	r2, r3, [sp, #24]
   34cd0:	adds	r4, #1
   34cd2:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   34cd6:	mov	r6, r8
   34cd8:	mov	r7, r9
   34cda:	mov	r8, r0
   34cdc:	mov	r9, r1
   34cde:	ldrd	r2, r3, [sp, #24]
   34ce2:	cmp	r9, r3
   34ce4:	it	eq
   34ce6:	cmpeq	r8, r2
   34ce8:	bcs.n	34cc8 <pretty_size_snprintf@@Base+0x194>
   34cea:	b.n	34c5a <pretty_size_snprintf@@Base+0x126>
   34cec:	ldr	r4, [sp, #32]
   34cee:	b.n	34cde <pretty_size_snprintf@@Base+0x1aa>
   34cf0:	mov.w	sl, #1
   34cf4:	mov.w	fp, #0
   34cf8:	movs	r4, #0
   34cfa:	b.n	34c66 <pretty_size_snprintf@@Base+0x132>
   34cfc:	bl	3dc78 <btrfs_util_strerror@@Base+0x6d0>
   34d00:	b.n	34c80 <pretty_size_snprintf@@Base+0x14c>
   34d02:	ldr	r3, [pc, #132]	; (34d88 <pretty_size_snprintf@@Base+0x254>)
   34d04:	ldr	r0, [r2, r3]
   34d06:	bic.w	r3, r1, #1024	; 0x400
   34d0a:	ldr	r2, [pc, #128]	; (34d8c <pretty_size_snprintf@@Base+0x258>)
   34d0c:	movs	r1, #1
   34d0e:	add	r2, pc
   34d10:	ldr	r0, [r0, #0]
   34d12:	blx	9040 <__fprintf_chk@plt+0x4>
   34d16:	ldr	r3, [pc, #120]	; (34d90 <pretty_size_snprintf@@Base+0x25c>)
   34d18:	ldr	r1, [pc, #120]	; (34d94 <pretty_size_snprintf@@Base+0x260>)
   34d1a:	mov.w	r2, #394	; 0x18a
   34d1e:	ldr	r0, [pc, #120]	; (34d98 <pretty_size_snprintf@@Base+0x264>)
   34d20:	add	r3, pc
   34d22:	add	r1, pc
   34d24:	add	r0, pc
   34d26:	b.n	34c16 <pretty_size_snprintf@@Base+0xe2>
   34d28:	ldr	r3, [pc, #112]	; (34d9c <pretty_size_snprintf@@Base+0x268>)
   34d2a:	mov.w	r2, #1024	; 0x400
   34d2e:	mov.w	sl, #1024	; 0x400
   34d32:	add	r3, pc
   34d34:	str	r3, [sp, #36]	; 0x24
   34d36:	uxtb	r1, r1
   34d38:	mov.w	fp, #0
   34d3c:	subs	r1, #1
   34d3e:	cmp	r1, #4
   34d40:	bhi.w	34c26 <pretty_size_snprintf@@Base+0xf2>
   34d44:	add	r3, pc, #8	; (adr r3, 34d50 <pretty_size_snprintf@@Base+0x21c>)
   34d46:	ldr.w	r1, [r3, r1, lsl #2]
   34d4a:	add	r3, r1
   34d4c:	bx	r3
   34d4e:	nop
   34d50:			; <UNDEFINED> instruction: 0xffa1ffff
   34d54:	mrc2	15, 6, pc, cr3, cr15, {7}
   34d58:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   34d5c:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   34d60:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   34d64:	str	r6, [r1, #28]
   34d66:	movs	r3, r0
   34d68:	subs	r7, #220	; 0xdc
   34d6a:	movs	r2, r0
   34d6c:	ldr	r7, [sp, #1004]	; 0x3ec
   34d6e:	movs	r0, r0
   34d70:	strb	r2, [r2, #24]
   34d72:	movs	r3, r0
   34d74:	subs	r7, #83	; 0x53
   34d76:	movs	r2, r0
   34d78:	cmp	r5, ip
   34d7a:	movs	r2, r0
   34d7c:	subs	r6, #222	; 0xde
   34d7e:	movs	r2, r0
   34d80:	bcc.n	34dc8 <pretty_size_mode@@Base+0x28>
   34d82:	movs	r0, r0
   34d84:	subs	r6, #232	; 0xe8
   34d86:	movs	r2, r0
   34d88:	lsls	r4, r3, #10
   34d8a:	movs	r0, r0
   34d8c:	subs	r6, #123	; 0x7b
   34d8e:	movs	r2, r0
   34d90:	add	r5, sl
   34d92:	movs	r2, r0
   34d94:	subs	r5, #206	; 0xce
   34d96:	movs	r2, r0
   34d98:	bcs.n	34dc0 <pretty_size_mode@@Base+0x20>
   34d9a:	movs	r0, r0
   34d9c:	strb	r6, [r1, #18]
   34d9e:	movs	r3, r0

00034da0 <pretty_size_mode@@Base>:
   34da0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   34da4:	mov	r7, r0
   34da6:	ldr	r0, [pc, #68]	; (34dec <pretty_size_mode@@Base+0x4c>)
   34da8:	mov	r8, r2
   34daa:	mov	r6, r1
   34dac:	ldr.w	r9, [pc, #64]	; 34df0 <pretty_size_mode@@Base+0x50>
   34db0:	add	r0, pc
   34db2:	blx	914c <__tls_get_addr@plt>
   34db6:	movs	r1, #10
   34db8:	add.w	r4, r0, r9
   34dbc:	mov	r5, r0
   34dbe:	ldr.w	r0, [r0, r9]
   34dc2:	adds	r4, #4
   34dc4:	add.w	r4, r4, r0, lsl #5
   34dc8:	adds	r0, #1
   34dca:	bl	3dacc <btrfs_util_strerror@@Base+0x524>
   34dce:	movs	r3, #32
   34dd0:	mov	r2, r4
   34dd2:	mov	r0, r7
   34dd4:	str.w	r1, [r9, r5]
   34dd8:	mov	r1, r6
   34dda:	str.w	r8, [sp]
   34dde:	bl	34b34 <pretty_size_snprintf@@Base>
   34de2:	mov	r0, r4
   34de4:	add	sp, #12
   34de6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   34dea:	nop
   34dec:	str	r0, [r3, #28]
   34dee:	movs	r3, r0
   34df0:	movs	r0, r0
	...

00034df4 <get_label_unmounted@@Base>:
   34df4:	push	{r0, r1, r4, r5, r6, lr}
   34df6:	mov	r5, r0
   34df8:	mov	r6, r1
   34dfa:	bl	34af0 <check_mounted@@Base>
   34dfe:	subs	r2, r0, #0
   34e00:	bge.n	34e12 <get_label_unmounted@@Base+0x1e>
   34e02:	ldr	r0, [pc, #68]	; (34e48 <get_label_unmounted@@Base+0x54>)
   34e04:	mov	r1, r5
   34e06:	add	r0, pc
   34e08:	bl	1bd1c <__btrfs_error@@Base>
   34e0c:	mov.w	r0, #4294967295	; 0xffffffff
   34e10:	b.n	34e44 <get_label_unmounted@@Base+0x50>
   34e12:	mov	r0, r5
   34e14:	movs	r4, #0
   34e16:	movs	r2, #0
   34e18:	movs	r3, #0
   34e1a:	str	r4, [sp, #0]
   34e1c:	bl	22b8c <open_ctree@@Base>
   34e20:	mov	r5, r0
   34e22:	cmp	r0, #0
   34e24:	beq.n	34e0c <get_label_unmounted@@Base+0x18>
   34e26:	ldr.w	r3, [r0, #464]	; 0x1d0
   34e2a:	movs	r2, #255	; 0xff
   34e2c:	mov	r0, r6
   34e2e:	ldr.w	r1, [r3, #308]	; 0x134
   34e32:	addw	r1, r1, #299	; 0x12b
   34e36:	bl	34420 <__strncpy_null@@Base>
   34e3a:	ldr.w	r0, [r5, #464]	; 0x1d0
   34e3e:	bl	21c2c <close_ctree_fs_info@@Base>
   34e42:	mov	r0, r4
   34e44:	add	sp, #8
   34e46:	pop	{r4, r5, r6, pc}
   34e48:	subs	r5, #175	; 0xaf
   34e4a:	movs	r2, r0

00034e4c <get_label_mounted@@Base>:
   34e4c:	ldr	r2, [pc, #160]	; (34ef0 <get_label_mounted@@Base+0xa4>)
   34e4e:	ldr	r3, [pc, #164]	; (34ef4 <get_label_mounted@@Base+0xa8>)
   34e50:	add	r2, pc
   34e52:	push	{r4, r5, r6, r7, lr}
   34e54:	mov	r5, r1
   34e56:	ldr	r3, [r2, r3]
   34e58:	sub	sp, #268	; 0x10c
   34e5a:	mov.w	r1, #262144	; 0x40000
   34e5e:	mov	r7, r0
   34e60:	ldr	r3, [r3, #0]
   34e62:	str	r3, [sp, #260]	; 0x104
   34e64:	mov.w	r3, #0
   34e68:	blx	8e14 <open64@plt>
   34e6c:	subs	r4, r0, #0
   34e6e:	bge.n	34e92 <get_label_mounted@@Base+0x46>
   34e70:	ldr	r0, [pc, #132]	; (34ef8 <get_label_mounted@@Base+0xac>)
   34e72:	mov	r1, r7
   34e74:	mov.w	r5, #4294967295	; 0xffffffff
   34e78:	add	r0, pc
   34e7a:	bl	1bd1c <__btrfs_error@@Base>
   34e7e:	ldr	r2, [pc, #124]	; (34efc <get_label_mounted@@Base+0xb0>)
   34e80:	ldr	r3, [pc, #112]	; (34ef4 <get_label_mounted@@Base+0xa8>)
   34e82:	add	r2, pc
   34e84:	ldr	r3, [r2, r3]
   34e86:	ldr	r2, [r3, #0]
   34e88:	ldr	r3, [sp, #260]	; 0x104
   34e8a:	eors	r2, r3
   34e8c:	beq.n	34ee4 <get_label_mounted@@Base+0x98>
   34e8e:	blx	8c90 <__stack_chk_fail@plt>
   34e92:	add	r6, sp, #4
   34e94:	mov.w	r2, #256	; 0x100
   34e98:	movs	r1, #0
   34e9a:	mov	r0, r6
   34e9c:	blx	8f98 <memset@plt+0x4>
   34ea0:	ldr	r1, [pc, #72]	; (34eec <get_label_mounted@@Base+0xa0>)
   34ea2:	mov	r2, r6
   34ea4:	mov	r0, r4
   34ea6:	blx	8d48 <ioctl@plt>
   34eaa:	cmp	r0, #0
   34eac:	bge.n	34ed0 <get_label_mounted@@Base+0x84>
   34eae:	blx	8f58 <__errno_location@plt>
   34eb2:	ldr	r3, [r0, #0]
   34eb4:	mov	r5, r0
   34eb6:	cmp	r3, #25
   34eb8:	beq.n	34ec4 <get_label_mounted@@Base+0x78>
   34eba:	ldr	r0, [pc, #68]	; (34f00 <get_label_mounted@@Base+0xb4>)
   34ebc:	mov	r1, r7
   34ebe:	add	r0, pc
   34ec0:	bl	1bd1c <__btrfs_error@@Base>
   34ec4:	ldr	r5, [r5, #0]
   34ec6:	mov	r0, r4
   34ec8:	negs	r5, r5
   34eca:	blx	91e4 <close@plt>
   34ece:	b.n	34e7e <get_label_mounted@@Base+0x32>
   34ed0:	movs	r2, #255	; 0xff
   34ed2:	mov	r1, r6
   34ed4:	mov	r0, r5
   34ed6:	movs	r5, #0
   34ed8:	bl	34420 <__strncpy_null@@Base>
   34edc:	mov	r0, r4
   34ede:	blx	91e4 <close@plt>
   34ee2:	b.n	34e7e <get_label_mounted@@Base+0x32>
   34ee4:	mov	r0, r5
   34ee6:	add	sp, #268	; 0x10c
   34ee8:	pop	{r4, r5, r6, r7, pc}
   34eea:	nop
   34eec:	str	r4, [sp, #196]	; 0xc4
   34eee:	strh	r0, [r0, #8]
   34ef0:	ldrsh	r0, [r1, r3]
   34ef2:	movs	r3, r0
   34ef4:	lsls	r0, r1, #10
   34ef6:	movs	r0, r0
   34ef8:	subs	r5, #100	; 0x64
   34efa:	movs	r2, r0
   34efc:	ldrsh	r6, [r2, r2]
   34efe:	movs	r3, r0
   34f00:	subs	r5, #54	; 0x36
   34f02:	movs	r2, r0

00034f04 <get_label@@Base>:
   34f04:	push	{r0, r1, r4, lr}
   34f06:	mov	r4, r0
   34f08:	str	r1, [sp, #4]
   34f0a:	bl	34344 <path_is_reg_or_block_device@@Base>
   34f0e:	ldr	r1, [sp, #4]
   34f10:	cmp	r0, #0
   34f12:	bne.n	34f20 <get_label@@Base+0x1c>
   34f14:	mov	r0, r4
   34f16:	add	sp, #8
   34f18:	ldmia.w	sp!, {r4, lr}
   34f1c:	b.w	34e4c <get_label_mounted@@Base>
   34f20:	ble.n	34f2e <get_label@@Base+0x2a>
   34f22:	mov	r0, r4
   34f24:	add	sp, #8
   34f26:	ldmia.w	sp!, {r4, lr}
   34f2a:	b.w	34df4 <get_label_unmounted@@Base>
   34f2e:	add	sp, #8
   34f30:	pop	{r4, pc}

00034f32 <set_label@@Base>:
   34f32:	ldr	r2, [pc, #312]	; (3506c <set_label@@Base+0x13a>)
   34f34:	ldr	r3, [pc, #312]	; (35070 <set_label@@Base+0x13e>)
   34f36:	add	r2, pc
   34f38:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   34f3c:	mov	r5, r0
   34f3e:	ldr	r3, [r2, r3]
   34f40:	sub	sp, #272	; 0x110
   34f42:	mov	r0, r1
   34f44:	mov	r6, r1
   34f46:	ldr	r3, [r3, #0]
   34f48:	str	r3, [sp, #268]	; 0x10c
   34f4a:	mov.w	r3, #0
   34f4e:	blx	8f1c <strlen@plt>
   34f52:	cmp	r0, #255	; 0xff
   34f54:	bhi.n	34f7a <set_label@@Base+0x48>
   34f56:	mov	r0, r5
   34f58:	bl	34344 <path_is_reg_or_block_device@@Base>
   34f5c:	subs	r4, r0, #0
   34f5e:	bne.n	34fe0 <set_label@@Base+0xae>
   34f60:	mov.w	r1, #262144	; 0x40000
   34f64:	mov	r0, r5
   34f66:	blx	8e14 <open64@plt>
   34f6a:	subs	r7, r0, #0
   34f6c:	bge.n	34f88 <set_label@@Base+0x56>
   34f6e:	ldr	r0, [pc, #260]	; (35074 <set_label@@Base+0x142>)
   34f70:	mov	r1, r5
   34f72:	add	r0, pc
   34f74:	bl	1bd1c <__btrfs_error@@Base>
   34f78:	b.n	34fc0 <set_label@@Base+0x8e>
   34f7a:	ldr	r0, [pc, #252]	; (35078 <set_label@@Base+0x146>)
   34f7c:	movs	r2, #255	; 0xff
   34f7e:	mov	r1, r6
   34f80:	add	r0, pc
   34f82:	bl	1bd1c <__btrfs_error@@Base>
   34f86:	b.n	34fc0 <set_label@@Base+0x8e>
   34f88:	add.w	r8, sp, #12
   34f8c:	mov.w	r2, #256	; 0x100
   34f90:	mov	r1, r4
   34f92:	mov	r0, r8
   34f94:	blx	8f98 <memset@plt+0x4>
   34f98:	movs	r2, #255	; 0xff
   34f9a:	mov	r1, r6
   34f9c:	mov	r0, r8
   34f9e:	bl	34420 <__strncpy_null@@Base>
   34fa2:	ldr	r1, [pc, #196]	; (35068 <set_label@@Base+0x136>)
   34fa4:	mov	r2, r8
   34fa6:	mov	r0, r7
   34fa8:	blx	8d48 <ioctl@plt>
   34fac:	cmp	r0, #0
   34fae:	bge.n	34fc6 <set_label@@Base+0x94>
   34fb0:	ldr	r0, [pc, #200]	; (3507c <set_label@@Base+0x14a>)
   34fb2:	mov	r1, r5
   34fb4:	add	r0, pc
   34fb6:	bl	1bd1c <__btrfs_error@@Base>
   34fba:	mov	r0, r7
   34fbc:	blx	91e4 <close@plt>
   34fc0:	mov.w	r4, #4294967295	; 0xffffffff
   34fc4:	b.n	34fcc <set_label@@Base+0x9a>
   34fc6:	mov	r0, r7
   34fc8:	blx	91e4 <close@plt>
   34fcc:	ldr	r2, [pc, #176]	; (35080 <set_label@@Base+0x14e>)
   34fce:	ldr	r3, [pc, #160]	; (35070 <set_label@@Base+0x13e>)
   34fd0:	add	r2, pc
   34fd2:	ldr	r3, [r2, r3]
   34fd4:	ldr	r2, [r3, #0]
   34fd6:	ldr	r3, [sp, #268]	; 0x10c
   34fd8:	eors	r2, r3
   34fda:	beq.n	35060 <set_label@@Base+0x12e>
   34fdc:	blx	8c90 <__stack_chk_fail@plt>
   34fe0:	ble.n	34fcc <set_label@@Base+0x9a>
   34fe2:	mov	r0, r5
   34fe4:	bl	34af0 <check_mounted@@Base>
   34fe8:	subs	r4, r0, #0
   34fea:	bge.n	34ff6 <set_label@@Base+0xc4>
   34fec:	ldr	r0, [pc, #148]	; (35084 <set_label@@Base+0x152>)
   34fee:	mov	r2, r4
   34ff0:	mov	r1, r5
   34ff2:	add	r0, pc
   34ff4:	b.n	34f82 <set_label@@Base+0x50>
   34ff6:	beq.n	35000 <set_label@@Base+0xce>
   34ff8:	ldr	r0, [pc, #140]	; (35088 <set_label@@Base+0x156>)
   34ffa:	mov	r1, r5
   34ffc:	add	r0, pc
   34ffe:	b.n	34f74 <set_label@@Base+0x42>
   35000:	mov	r0, r5
   35002:	mov.w	r8, #1
   35006:	movs	r2, #0
   35008:	movs	r3, #0
   3500a:	str.w	r8, [sp]
   3500e:	bl	22b8c <open_ctree@@Base>
   35012:	mov	r5, r0
   35014:	cmp	r0, #0
   35016:	beq.n	34fc0 <set_label@@Base+0x8e>
   35018:	mov	r1, r8
   3501a:	bl	2f81c <btrfs_start_transaction@@Base>
   3501e:	cmn.w	r0, #4096	; 0x1000
   35022:	mov	r7, r0
   35024:	bls.n	3503a <set_label@@Base+0x108>
   35026:	ldr	r1, [pc, #100]	; (3508c <set_label@@Base+0x15a>)
   35028:	mov	r3, r8
   3502a:	ldr	r0, [pc, #100]	; (35090 <set_label@@Base+0x15e>)
   3502c:	movw	r2, #507	; 0x1fb
   35030:	add	r1, pc
   35032:	adds	r1, #21
   35034:	add	r0, pc
   35036:	bl	347c4 <test_issubvolname@@Base+0x17e>
   3503a:	ldr.w	r3, [r5, #464]	; 0x1d0
   3503e:	movs	r2, #255	; 0xff
   35040:	mov	r1, r6
   35042:	ldr.w	r0, [r3, #308]	; 0x134
   35046:	addw	r0, r0, #299	; 0x12b
   3504a:	bl	34420 <__strncpy_null@@Base>
   3504e:	mov	r1, r5
   35050:	mov	r0, r7
   35052:	bl	2fa9c <btrfs_commit_transaction@@Base>
   35056:	ldr.w	r0, [r5, #464]	; 0x1d0
   3505a:	bl	21c2c <close_ctree_fs_info@@Base>
   3505e:	b.n	34fcc <set_label@@Base+0x9a>
   35060:	mov	r0, r4
   35062:	add	sp, #272	; 0x110
   35064:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   35068:	str	r4, [sp, #200]	; 0xc8
   3506a:	asrs	r0, r0
   3506c:	ldrb	r2, [r4, r7]
   3506e:	movs	r3, r0
   35070:	lsls	r0, r1, #10
   35072:	movs	r0, r0
   35074:	subs	r4, #106	; 0x6a
   35076:	movs	r2, r0
   35078:	subs	r4, #146	; 0x92
   3507a:	movs	r2, r0
   3507c:	subs	r4, #124	; 0x7c
   3507e:	movs	r2, r0
   35080:	ldrb	r0, [r1, r5]
   35082:	movs	r3, r0
   35084:	subs	r3, #195	; 0xc3
   35086:	movs	r2, r0
   35088:	subs	r4, #82	; 0x52
   3508a:	movs	r2, r0
   3508c:	adcs	r5, r0
   3508e:	movs	r2, r0
   35090:	add	r3, pc, #788	; (adr r3, 353a8 <parse_csum_type@@Base+0x60>)
	...

00035094 <parse_size@@Base>:
   35094:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35098:	mov	sl, r0
   3509a:	ldr	r2, [pc, #404]	; (35230 <parse_size@@Base+0x19c>)
   3509c:	ldr	r3, [pc, #404]	; (35234 <parse_size@@Base+0x1a0>)
   3509e:	add	r2, pc
   350a0:	ldr	r3, [r2, r3]
   350a2:	ldr	r3, [r3, #0]
   350a4:	str	r3, [sp, #4]
   350a6:	mov.w	r3, #0
   350aa:	cbnz	r0, 350ba <parse_size@@Base+0x26>
   350ac:	ldr	r0, [pc, #392]	; (35238 <parse_size@@Base+0x1a4>)
   350ae:	add	r0, pc
   350b0:	bl	1bd1c <__btrfs_error@@Base>
   350b4:	movs	r0, #1
   350b6:	blx	8f10 <exit@plt>
   350ba:	ldrb	r3, [r0, #0]
   350bc:	cmp	r3, #45	; 0x2d
   350be:	bne.n	350cc <parse_size@@Base+0x38>
   350c0:	mov	r1, r0
   350c2:	ldr	r0, [pc, #376]	; (3523c <parse_size@@Base+0x1a8>)
   350c4:	add	r0, pc
   350c6:	bl	1bd1c <__btrfs_error@@Base>
   350ca:	b.n	350b4 <parse_size@@Base+0x20>
   350cc:	movs	r2, #10
   350ce:	mov	r1, sp
   350d0:	blx	8fd8 <strtoull@plt>
   350d4:	mov	r9, r1
   350d6:	ldr	r1, [sp, #0]
   350d8:	mov	r8, r0
   350da:	cmp	r1, sl
   350dc:	bne.n	350e4 <parse_size@@Base+0x50>
   350de:	ldr	r0, [pc, #352]	; (35240 <parse_size@@Base+0x1ac>)
   350e0:	add	r0, pc
   350e2:	b.n	350c6 <parse_size@@Base+0x32>
   350e4:	ldrb.w	fp, [r1]
   350e8:	cmp.w	fp, #0
   350ec:	beq.n	350f8 <parse_size@@Base+0x64>
   350ee:	ldrb	r1, [r1, #1]
   350f0:	cbz	r1, 350f8 <parse_size@@Base+0x64>
   350f2:	ldr	r0, [pc, #336]	; (35244 <parse_size@@Base+0x1b0>)
   350f4:	add	r0, pc
   350f6:	b.n	350c6 <parse_size@@Base+0x32>
   350f8:	blx	8f58 <__errno_location@plt>
   350fc:	ldr	r3, [r0, #0]
   350fe:	cmp	r3, #34	; 0x22
   35100:	bne.n	35116 <parse_size@@Base+0x82>
   35102:	cmp.w	r9, #4294967295	; 0xffffffff
   35106:	it	eq
   35108:	cmpeq.w	r8, #4294967295	; 0xffffffff
   3510c:	bne.n	35116 <parse_size@@Base+0x82>
   3510e:	ldr	r0, [pc, #312]	; (35248 <parse_size@@Base+0x1b4>)
   35110:	mov	r1, sl
   35112:	add	r0, pc
   35114:	b.n	350c6 <parse_size@@Base+0x32>
   35116:	cmp.w	fp, #0
   3511a:	beq.n	35218 <parse_size@@Base+0x184>
   3511c:	blx	8ebc <__ctype_tolower_loc@plt>
   35120:	ldr	r3, [r0, #0]
   35122:	ldrb.w	r1, [r3, fp, lsl #2]
   35126:	sub.w	r3, r1, #98	; 0x62
   3512a:	cmp	r3, #18
   3512c:	bhi.n	35212 <parse_size@@Base+0x17e>
   3512e:	tbb	[pc, r3]
   35132:	strb	r3, [r6, #1]
   35134:	lsrs	r0, r6, #9
   35136:	str	r0, [r6, #116]	; 0x74
   35138:	strb	r0, [r6, #1]
   3513a:	ldr	r0, [r6, #84]	; 0x54
   3513c:	ldr	r0, [r6, #36]	; 0x24
   3513e:	strb	r0, [r6, #1]
   35140:	strb	r2, [r4, #1]
   35142:	strb	r0, [r6, #1]
   35144:	lsls	r4, r4, #1
   35146:	mov.w	r2, #1024	; 0x400
   3514a:	movs	r3, #0
   3514c:	orr.w	r3, r3, r2, lsr #22
   35150:	lsls	r2, r2, #10
   35152:	lsls	r3, r3, #10
   35154:	orr.w	r3, r3, r2, lsr #22
   35158:	lsls	r2, r2, #10
   3515a:	lsls	r3, r3, #10
   3515c:	orr.w	r3, r3, r2, lsr #22
   35160:	lsls	r2, r2, #10
   35162:	lsls	r3, r3, #10
   35164:	orr.w	r3, r3, r2, lsr #22
   35168:	lsls	r2, r2, #10
   3516a:	lsls	r3, r3, #10
   3516c:	orr.w	r3, r3, r2, lsr #22
   35170:	lsls	r2, r2, #10
   35172:	movs	r1, #0
   35174:	sub.w	ip, r1, #32
   35178:	rsb	r0, r1, #32
   3517c:	lsl.w	r7, r9, r1
   35180:	lsl.w	ip, r8, ip
   35184:	lsr.w	r0, r8, r0
   35188:	orr.w	r7, r7, ip
   3518c:	lsl.w	r6, r8, r1
   35190:	orrs	r7, r0
   35192:	cmp	r6, #0
   35194:	sbcs.w	r0, r7, #0
   35198:	bge.n	3521e <parse_size@@Base+0x18a>
   3519a:	rsb	r0, r1, #64	; 0x40
   3519e:	movs	r1, #0
   351a0:	adds	r1, #1
   351a2:	cmp	r1, #64	; 0x40
   351a4:	beq.n	351d4 <parse_size@@Base+0x140>
   351a6:	sub.w	r7, r1, #32
   351aa:	rsb	r6, r1, #32
   351ae:	lsl.w	r5, r3, r1
   351b2:	lsl.w	r7, r2, r7
   351b6:	lsr.w	r6, r2, r6
   351ba:	orrs	r5, r7
   351bc:	lsl.w	r4, r2, r1
   351c0:	orrs	r5, r6
   351c2:	cmp	r4, #0
   351c4:	sbcs.w	r6, r5, #0
   351c8:	bge.n	351a0 <parse_size@@Base+0x10c>
   351ca:	rsb	r1, r1, #64	; 0x40
   351ce:	add	r1, r0
   351d0:	cmp	r1, #65	; 0x41
   351d2:	bgt.n	3510e <parse_size@@Base+0x7a>
   351d4:	mul.w	r3, r8, r3
   351d8:	mla	r3, r2, r9, r3
   351dc:	umull	r0, r1, r8, r2
   351e0:	ldr	r2, [pc, #104]	; (3524c <parse_size@@Base+0x1b8>)
   351e2:	add	r1, r3
   351e4:	ldr	r3, [pc, #76]	; (35234 <parse_size@@Base+0x1a0>)
   351e6:	add	r2, pc
   351e8:	ldr	r3, [r2, r3]
   351ea:	ldr	r2, [r3, #0]
   351ec:	ldr	r3, [sp, #4]
   351ee:	eors	r2, r3
   351f0:	beq.n	35228 <parse_size@@Base+0x194>
   351f2:	blx	8c90 <__stack_chk_fail@plt>
   351f6:	movs	r2, #1
   351f8:	b.n	3514a <parse_size@@Base+0xb6>
   351fa:	movs	r2, #1
   351fc:	movs	r3, #0
   351fe:	b.n	35152 <parse_size@@Base+0xbe>
   35200:	movs	r2, #1
   35202:	movs	r3, #0
   35204:	b.n	3515a <parse_size@@Base+0xc6>
   35206:	movs	r2, #1
   35208:	movs	r3, #0
   3520a:	b.n	35162 <parse_size@@Base+0xce>
   3520c:	movs	r2, #1
   3520e:	movs	r3, #0
   35210:	b.n	3516a <parse_size@@Base+0xd6>
   35212:	ldr	r0, [pc, #60]	; (35250 <parse_size@@Base+0x1bc>)
   35214:	add	r0, pc
   35216:	b.n	350c6 <parse_size@@Base+0x32>
   35218:	movs	r2, #1
   3521a:	movs	r3, #0
   3521c:	b.n	35172 <parse_size@@Base+0xde>
   3521e:	adds	r1, #1
   35220:	cmp	r1, #64	; 0x40
   35222:	bne.n	35174 <parse_size@@Base+0xe0>
   35224:	movs	r0, #0
   35226:	b.n	3519e <parse_size@@Base+0x10a>
   35228:	add	sp, #12
   3522a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3522e:	nop
   35230:	ldrb	r2, [r7, r1]
   35232:	movs	r3, r0
   35234:	lsls	r0, r1, #10
   35236:	movs	r0, r0
   35238:	subs	r3, #198	; 0xc6
   3523a:	movs	r2, r0
   3523c:	subs	r3, #196	; 0xc4
   3523e:	movs	r2, r0
   35240:	subs	r3, #205	; 0xcd
   35242:	movs	r2, r0
   35244:	subs	r3, #212	; 0xd4
   35246:	movs	r2, r0
   35248:	subs	r3, #239	; 0xef
   3524a:	movs	r2, r0
   3524c:	ldrh	r2, [r6, r4]
   3524e:	movs	r3, r0
   35250:	subs	r3, #18
   35252:	movs	r2, r0

00035254 <parse_qgroupid@@Base>:
   35254:	ldr	r2, [pc, #220]	; (35334 <parse_qgroupid@@Base+0xe0>)
   35256:	movs	r1, #47	; 0x2f
   35258:	ldr	r3, [pc, #220]	; (35338 <parse_qgroupid@@Base+0xe4>)
   3525a:	add	r2, pc
   3525c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   35260:	sub	sp, #24
   35262:	ldr	r3, [r2, r3]
   35264:	mov	r4, r0
   35266:	ldr	r3, [r3, #0]
   35268:	str	r3, [sp, #20]
   3526a:	mov.w	r3, #0
   3526e:	blx	8f28 <strchr@plt>
   35272:	mov	r6, r0
   35274:	mov	r0, r4
   35276:	blx	8f1c <strlen@plt>
   3527a:	movs	r3, #0
   3527c:	str	r3, [sp, #4]
   3527e:	ldrb	r3, [r4, #0]
   35280:	cmp	r3, #47	; 0x2f
   35282:	add.w	r5, r4, r0
   35286:	beq.n	352dc <parse_qgroupid@@Base+0x88>
   35288:	add.w	r8, sp, #4
   3528c:	movs	r2, #10
   3528e:	mov	r0, r4
   35290:	mov	r1, r8
   35292:	cbnz	r6, 352b6 <parse_qgroupid@@Base+0x62>
   35294:	blx	8fd8 <strtoull@plt>
   35298:	ldr	r3, [sp, #4]
   3529a:	cmp	r3, r5
   3529c:	strd	r0, r1, [sp, #8]
   352a0:	bne.n	352dc <parse_qgroupid@@Base+0x88>
   352a2:	ldr	r2, [pc, #152]	; (3533c <parse_qgroupid@@Base+0xe8>)
   352a4:	ldr	r3, [pc, #144]	; (35338 <parse_qgroupid@@Base+0xe4>)
   352a6:	add	r2, pc
   352a8:	ldr	r3, [r2, r3]
   352aa:	ldr	r2, [r3, #0]
   352ac:	ldr	r3, [sp, #20]
   352ae:	eors	r2, r3
   352b0:	beq.n	3532c <parse_qgroupid@@Base+0xd8>
   352b2:	blx	8c90 <__stack_chk_fail@plt>
   352b6:	blx	8fd8 <strtoull@plt>
   352ba:	mov	r7, r0
   352bc:	ldr	r0, [sp, #4]
   352be:	cmp	r0, r6
   352c0:	bne.n	352dc <parse_qgroupid@@Base+0x88>
   352c2:	adds	r0, #1
   352c4:	movs	r2, #10
   352c6:	mov	r1, r8
   352c8:	blx	8fd8 <strtoull@plt>
   352cc:	ldr	r3, [sp, #4]
   352ce:	cmp	r3, r5
   352d0:	strd	r0, r1, [sp, #8]
   352d4:	bne.n	352dc <parse_qgroupid@@Base+0x88>
   352d6:	orr.w	r1, r1, r7, lsl #16
   352da:	b.n	352a2 <parse_qgroupid@@Base+0x4e>
   352dc:	mov	r0, r4
   352de:	bl	36c98 <btrfs_util_is_subvolume@@Base>
   352e2:	mov	r1, r0
   352e4:	cbnz	r0, 3531a <parse_qgroupid@@Base+0xc6>
   352e6:	mov	r0, r4
   352e8:	blx	8e14 <open64@plt>
   352ec:	subs	r6, r0, #0
   352ee:	blt.n	3531a <parse_qgroupid@@Base+0xc6>
   352f0:	add	r1, sp, #8
   352f2:	bl	1c084 <lookup_path_rootid@@Base>
   352f6:	mov	r5, r0
   352f8:	cbz	r0, 3530a <parse_qgroupid@@Base+0xb6>
   352fa:	blx	8f58 <__errno_location@plt>
   352fe:	negs	r3, r5
   35300:	str	r3, [r0, #0]
   35302:	ldr	r0, [pc, #60]	; (35340 <parse_qgroupid@@Base+0xec>)
   35304:	add	r0, pc
   35306:	bl	1bd1c <__btrfs_error@@Base>
   3530a:	mov	r0, r6
   3530c:	blx	91e4 <close@plt>
   35310:	cmp	r5, #0
   35312:	blt.n	3531a <parse_qgroupid@@Base+0xc6>
   35314:	ldrd	r0, r1, [sp, #8]
   35318:	b.n	352a2 <parse_qgroupid@@Base+0x4e>
   3531a:	ldr	r0, [pc, #40]	; (35344 <parse_qgroupid@@Base+0xf0>)
   3531c:	mov	r1, r4
   3531e:	add	r0, pc
   35320:	bl	1bd1c <__btrfs_error@@Base>
   35324:	mov.w	r0, #4294967295	; 0xffffffff
   35328:	blx	8f10 <exit@plt>
   3532c:	add	sp, #24
   3532e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   35332:	nop
   35334:	ldrh	r6, [r7, r2]
   35336:	movs	r3, r0
   35338:	lsls	r0, r1, #10
   3533a:	movs	r0, r0
   3533c:	ldrh	r2, [r6, r1]
   3533e:	movs	r3, r0
   35340:	subs	r2, #63	; 0x3f
   35342:	movs	r2, r0
   35344:	subs	r2, #66	; 0x42
   35346:	movs	r2, r0

00035348 <parse_csum_type@@Base>:
   35348:	ldr	r1, [pc, #100]	; (353b0 <parse_csum_type@@Base+0x68>)
   3534a:	push	{r4, lr}
   3534c:	add	r1, pc
   3534e:	mov	r4, r0
   35350:	blx	8cdc <strcasecmp@plt>
   35354:	cbz	r0, 353a4 <parse_csum_type@@Base+0x5c>
   35356:	ldr	r1, [pc, #92]	; (353b4 <parse_csum_type@@Base+0x6c>)
   35358:	mov	r0, r4
   3535a:	add	r1, pc
   3535c:	blx	8cdc <strcasecmp@plt>
   35360:	cbz	r0, 353a2 <parse_csum_type@@Base+0x5a>
   35362:	ldr	r1, [pc, #84]	; (353b8 <parse_csum_type@@Base+0x70>)
   35364:	mov	r0, r4
   35366:	add	r1, pc
   35368:	blx	8cdc <strcasecmp@plt>
   3536c:	cbz	r0, 353a2 <parse_csum_type@@Base+0x5a>
   3536e:	ldr	r1, [pc, #76]	; (353bc <parse_csum_type@@Base+0x74>)
   35370:	mov	r0, r4
   35372:	add	r1, pc
   35374:	blx	8cdc <strcasecmp@plt>
   35378:	cbz	r0, 353a6 <parse_csum_type@@Base+0x5e>
   3537a:	ldr	r1, [pc, #68]	; (353c0 <parse_csum_type@@Base+0x78>)
   3537c:	mov	r0, r4
   3537e:	add	r1, pc
   35380:	blx	8cdc <strcasecmp@plt>
   35384:	cbz	r0, 353aa <parse_csum_type@@Base+0x62>
   35386:	ldr	r1, [pc, #60]	; (353c4 <parse_csum_type@@Base+0x7c>)
   35388:	mov	r0, r4
   3538a:	add	r1, pc
   3538c:	blx	8cdc <strcasecmp@plt>
   35390:	cbz	r0, 353aa <parse_csum_type@@Base+0x62>
   35392:	ldr	r0, [pc, #52]	; (353c8 <parse_csum_type@@Base+0x80>)
   35394:	mov	r1, r4
   35396:	add	r0, pc
   35398:	bl	1bd1c <__btrfs_error@@Base>
   3539c:	movs	r0, #1
   3539e:	blx	8f10 <exit@plt>
   353a2:	movs	r0, #1
   353a4:	pop	{r4, pc}
   353a6:	movs	r0, #2
   353a8:	b.n	353a4 <parse_csum_type@@Base+0x5c>
   353aa:	movs	r0, #3
   353ac:	b.n	353a4 <parse_csum_type@@Base+0x5c>
   353ae:	nop
   353b0:	subs	r2, #59	; 0x3b
   353b2:	movs	r2, r0
   353b4:	subs	r2, #52	; 0x34
   353b6:	movs	r2, r0
   353b8:	subs	r2, #49	; 0x31
   353ba:	movs	r2, r0
   353bc:	subs	r2, #44	; 0x2c
   353be:	movs	r2, r0
   353c0:	subs	r2, #39	; 0x27
   353c2:	movs	r2, r0
   353c4:	subs	r2, #35	; 0x23
   353c6:	movs	r2, r0
   353c8:	subs	r2, #30
   353ca:	movs	r2, r0

000353cc <open_file_or_dir3@@Base>:
   353cc:	push	{r4, r5, r6, lr}
   353ce:	mov	r6, r2
   353d0:	ldr	r2, [pc, #136]	; (3545c <open_file_or_dir3@@Base+0x90>)
   353d2:	sub	sp, #112	; 0x70
   353d4:	ldr	r3, [pc, #136]	; (35460 <open_file_or_dir3@@Base+0x94>)
   353d6:	mov	r4, r1
   353d8:	add	r2, pc
   353da:	mov	r1, sp
   353dc:	mov	r5, r0
   353de:	ldr	r3, [r2, r3]
   353e0:	ldr	r3, [r3, #0]
   353e2:	str	r3, [sp, #108]	; 0x6c
   353e4:	mov.w	r3, #0
   353e8:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   353ec:	cmp	r0, #0
   353ee:	bge.n	35408 <open_file_or_dir3@@Base+0x3c>
   353f0:	mov.w	r0, #4294967295	; 0xffffffff
   353f4:	ldr	r2, [pc, #108]	; (35464 <open_file_or_dir3@@Base+0x98>)
   353f6:	ldr	r3, [pc, #104]	; (35460 <open_file_or_dir3@@Base+0x94>)
   353f8:	add	r2, pc
   353fa:	ldr	r3, [r2, r3]
   353fc:	ldr	r2, [r3, #0]
   353fe:	ldr	r3, [sp, #108]	; 0x6c
   35400:	eors	r2, r3
   35402:	beq.n	35456 <open_file_or_dir3@@Base+0x8a>
   35404:	blx	8c90 <__stack_chk_fail@plt>
   35408:	ldr	r3, [sp, #16]
   3540a:	and.w	r2, r3, #61440	; 0xf000
   3540e:	cmp.w	r2, #16384	; 0x4000
   35412:	bne.n	35438 <open_file_or_dir3@@Base+0x6c>
   35414:	mov	r0, r5
   35416:	blx	8dfc <opendir@plt>
   3541a:	str	r0, [r4, #0]
   3541c:	cmp	r0, #0
   3541e:	beq.n	353f0 <open_file_or_dir3@@Base+0x24>
   35420:	blx	90ec <dirfd@plt>
   35424:	cmp	r0, #0
   35426:	bge.n	353f4 <open_file_or_dir3@@Base+0x28>
   35428:	ldr	r0, [r4, #0]
   3542a:	cmp	r0, #0
   3542c:	beq.n	353f0 <open_file_or_dir3@@Base+0x24>
   3542e:	blx	91fc <closedir@plt>
   35432:	movs	r3, #0
   35434:	str	r3, [r4, #0]
   35436:	b.n	353f0 <open_file_or_dir3@@Base+0x24>
   35438:	and.w	r3, r3, #53248	; 0xd000
   3543c:	cmp.w	r3, #32768	; 0x8000
   35440:	bne.n	3544c <open_file_or_dir3@@Base+0x80>
   35442:	mov	r1, r6
   35444:	mov	r0, r5
   35446:	blx	8f4c <__open64_2@plt>
   3544a:	b.n	35424 <open_file_or_dir3@@Base+0x58>
   3544c:	blx	8f58 <__errno_location@plt>
   35450:	movs	r3, #22
   35452:	str	r3, [r0, #0]
   35454:	b.n	353f0 <open_file_or_dir3@@Base+0x24>
   35456:	add	sp, #112	; 0x70
   35458:	pop	{r4, r5, r6, pc}
   3545a:	nop
   3545c:	ldr	r0, [r0, r5]
   3545e:	movs	r3, r0
   35460:	lsls	r0, r1, #10
   35462:	movs	r0, r0
   35464:	ldr	r0, [r4, r4]
   35466:	movs	r3, r0

00035468 <open_file_or_dir@@Base>:
   35468:	movs	r2, #2
   3546a:	b.w	353cc <open_file_or_dir3@@Base>

0003546e <btrfs_open@@Base>:
   3546e:	push	{r4, r5, r6, r7, lr}
   35470:	mov	r6, r2
   35472:	ldr	r2, [pc, #172]	; (35520 <btrfs_open@@Base+0xb2>)
   35474:	mov	r7, r3
   35476:	ldr	r3, [pc, #172]	; (35524 <btrfs_open@@Base+0xb6>)
   35478:	sub	sp, #204	; 0xcc
   3547a:	add	r2, pc
   3547c:	mov	r5, r1
   3547e:	add	r1, sp, #104	; 0x68
   35480:	mov	r4, r0
   35482:	ldr	r3, [r2, r3]
   35484:	ldr	r3, [r3, #0]
   35486:	str	r3, [sp, #196]	; 0xc4
   35488:	mov.w	r3, #0
   3548c:	blx	90ac <statfs64@plt>
   35490:	cbz	r0, 354b6 <btrfs_open@@Base+0x48>
   35492:	ldr	r1, [pc, #148]	; (35528 <btrfs_open@@Base+0xba>)
   35494:	mov	r2, r4
   35496:	mov	r0, r6
   35498:	mov.w	r5, #4294967295	; 0xffffffff
   3549c:	add	r1, pc
   3549e:	bl	1be14 <__btrfs_error_on@@Base>
   354a2:	ldr	r2, [pc, #136]	; (3552c <btrfs_open@@Base+0xbe>)
   354a4:	ldr	r3, [pc, #124]	; (35524 <btrfs_open@@Base+0xb6>)
   354a6:	add	r2, pc
   354a8:	ldr	r3, [r2, r3]
   354aa:	ldr	r2, [r3, #0]
   354ac:	ldr	r3, [sp, #196]	; 0xc4
   354ae:	eors	r2, r3
   354b0:	beq.n	35516 <btrfs_open@@Base+0xa8>
   354b2:	blx	8c90 <__stack_chk_fail@plt>
   354b6:	ldr	r3, [pc, #100]	; (3551c <btrfs_open@@Base+0xae>)
   354b8:	ldr	r2, [sp, #104]	; 0x68
   354ba:	cmp	r2, r3
   354bc:	beq.n	354d0 <btrfs_open@@Base+0x62>
   354be:	ldr	r1, [pc, #112]	; (35530 <btrfs_open@@Base+0xc2>)
   354c0:	mov	r2, r4
   354c2:	mov	r0, r6
   354c4:	mvn.w	r5, #1
   354c8:	add	r1, pc
   354ca:	bl	1be14 <__btrfs_error_on@@Base>
   354ce:	b.n	354a2 <btrfs_open@@Base+0x34>
   354d0:	mov	r1, sp
   354d2:	mov	r0, r4
   354d4:	bl	3df58 <__libc_csu_fini@@Base+0x1c>
   354d8:	cmp	r0, #0
   354da:	bne.n	35492 <btrfs_open@@Base+0x24>
   354dc:	cbz	r7, 354fc <btrfs_open@@Base+0x8e>
   354de:	ldr	r3, [sp, #16]
   354e0:	and.w	r3, r3, #61440	; 0xf000
   354e4:	cmp.w	r3, #16384	; 0x4000
   354e8:	beq.n	354fc <btrfs_open@@Base+0x8e>
   354ea:	ldr	r1, [pc, #72]	; (35534 <btrfs_open@@Base+0xc6>)
   354ec:	mov	r2, r4
   354ee:	mov	r0, r6
   354f0:	mvn.w	r5, #2
   354f4:	add	r1, pc
   354f6:	bl	1be14 <__btrfs_error_on@@Base>
   354fa:	b.n	354a2 <btrfs_open@@Base+0x34>
   354fc:	mov	r1, r5
   354fe:	mov	r0, r4
   35500:	bl	35468 <open_file_or_dir@@Base>
   35504:	subs	r5, r0, #0
   35506:	bge.n	354a2 <btrfs_open@@Base+0x34>
   35508:	ldr	r1, [pc, #44]	; (35538 <btrfs_open@@Base+0xca>)
   3550a:	mov	r2, r4
   3550c:	mov	r0, r6
   3550e:	add	r1, pc
   35510:	bl	1be14 <__btrfs_error_on@@Base>
   35514:	b.n	354a2 <btrfs_open@@Base+0x34>
   35516:	mov	r0, r5
   35518:	add	sp, #204	; 0xcc
   3551a:	pop	{r4, r5, r6, r7, pc}
   3551c:	ldr	r6, [r7, #0]
   3551e:	str	r1, [sp, #140]	; 0x8c
   35520:	ldr	r6, [r3, r2]
   35522:	movs	r3, r0
   35524:	lsls	r0, r1, #10
   35526:	movs	r0, r0
   35528:	subs	r1, #45	; 0x2d
   3552a:	movs	r2, r0
   3552c:	ldr	r2, [r6, r1]
   3552e:	movs	r3, r0
   35530:	subs	r1, #24
   35532:	movs	r2, r0
   35534:	subs	r1, #7
   35536:	movs	r2, r0
   35538:	subs	r0, #187	; 0xbb
   3553a:	movs	r2, r0

0003553c <btrfs_open_dir@@Base>:
   3553c:	movs	r3, #1
   3553e:	b.w	3546e <btrfs_open@@Base>

00035542 <btrfs_open_file_or_dir@@Base>:
   35542:	movs	r3, #0
   35544:	b.w	3546e <btrfs_open@@Base>

00035548 <open_path_or_dev_mnt@@Base>:
   35548:	push	{r4, r5, r6, r7, lr}
   3554a:	mov	r4, r1
   3554c:	ldr	r1, [pc, #156]	; (355ec <open_path_or_dev_mnt@@Base+0xa4>)
   3554e:	mov	r6, r2
   35550:	ldr	r2, [pc, #156]	; (355f0 <open_path_or_dev_mnt@@Base+0xa8>)
   35552:	sub.w	sp, sp, #4096	; 0x1000
   35556:	add	r1, pc
   35558:	sub	sp, #12
   3555a:	add.w	r3, sp, #4096	; 0x1000
   3555e:	mov	r5, r0
   35560:	ldr	r2, [r1, r2]
   35562:	adds	r3, #4
   35564:	ldr	r2, [r2, #0]
   35566:	str	r2, [r3, #0]
   35568:	mov.w	r2, #0
   3556c:	bl	341ec <path_is_block_device@@Base>
   35570:	cbz	r0, 355d2 <open_path_or_dev_mnt@@Base+0x8a>
   35572:	add	r7, sp, #4
   35574:	mov.w	r2, #4096	; 0x1000
   35578:	mov	r0, r5
   3557a:	mov	r1, r7
   3557c:	bl	34a60 <get_btrfs_mount@@Base>
   35580:	cmp	r0, #0
   35582:	bge.n	355b6 <open_path_or_dev_mnt@@Base+0x6e>
   35584:	ldr	r1, [pc, #108]	; (355f4 <open_path_or_dev_mnt@@Base+0xac>)
   35586:	mov	r2, r5
   35588:	mov	r0, r6
   3558a:	mov.w	r4, #4294967295	; 0xffffffff
   3558e:	add	r1, pc
   35590:	bl	1be14 <__btrfs_error_on@@Base>
   35594:	blx	8f58 <__errno_location@plt>
   35598:	movs	r3, #22
   3559a:	str	r3, [r0, #0]
   3559c:	ldr	r1, [pc, #88]	; (355f8 <open_path_or_dev_mnt@@Base+0xb0>)
   3559e:	add.w	r3, sp, #4096	; 0x1000
   355a2:	ldr	r2, [pc, #76]	; (355f0 <open_path_or_dev_mnt@@Base+0xa8>)
   355a4:	adds	r3, #4
   355a6:	add	r1, pc
   355a8:	ldr	r2, [r1, r2]
   355aa:	ldr	r1, [r2, #0]
   355ac:	ldr	r2, [r3, #0]
   355ae:	eors	r1, r2
   355b0:	beq.n	355e0 <open_path_or_dev_mnt@@Base+0x98>
   355b2:	blx	8c90 <__stack_chk_fail@plt>
   355b6:	mov	r1, r4
   355b8:	mov	r0, r7
   355ba:	bl	35468 <open_file_or_dir@@Base>
   355be:	mov	r4, r0
   355c0:	cbz	r6, 355c4 <open_path_or_dev_mnt@@Base+0x7c>
   355c2:	lsrs	r6, r0, #31
   355c4:	ldr	r1, [pc, #52]	; (355fc <open_path_or_dev_mnt@@Base+0xb4>)
   355c6:	mov	r2, r5
   355c8:	mov	r0, r6
   355ca:	add	r1, pc
   355cc:	bl	1be14 <__btrfs_error_on@@Base>
   355d0:	b.n	3559c <open_path_or_dev_mnt@@Base+0x54>
   355d2:	mov	r1, r4
   355d4:	movs	r2, #1
   355d6:	mov	r0, r5
   355d8:	bl	3553c <btrfs_open_dir@@Base>
   355dc:	mov	r4, r0
   355de:	b.n	3559c <open_path_or_dev_mnt@@Base+0x54>
   355e0:	mov	r0, r4
   355e2:	add.w	sp, sp, #4096	; 0x1000
   355e6:	add	sp, #12
   355e8:	pop	{r4, r5, r6, r7, pc}
   355ea:	nop
   355ec:	ldrsb	r2, [r0, r7]
   355ee:	movs	r3, r0
   355f0:	lsls	r0, r1, #10
   355f2:	movs	r0, r0
   355f4:	subs	r0, #129	; 0x81
   355f6:	movs	r2, r0
   355f8:	ldrsb	r2, [r6, r5]
   355fa:	movs	r3, r0
   355fc:	subs	r0, #104	; 0x68
   355fe:	movs	r2, r0

00035600 <close_file_or_dir@@Base>:
   35600:	push	{r3, r4, r5, r6, r7, lr}
   35602:	mov	r5, r0
   35604:	mov	r6, r1
   35606:	blx	8f58 <__errno_location@plt>
   3560a:	ldr	r7, [r0, #0]
   3560c:	mov	r4, r0
   3560e:	cbz	r6, 3561a <close_file_or_dir@@Base+0x1a>
   35610:	mov	r0, r6
   35612:	blx	91fc <closedir@plt>
   35616:	str	r7, [r4, #0]
   35618:	pop	{r3, r4, r5, r6, r7, pc}
   3561a:	cmp	r5, #0
   3561c:	blt.n	35616 <close_file_or_dir@@Base+0x16>
   3561e:	mov	r0, r5
   35620:	blx	91e4 <close@plt>
   35624:	b.n	35616 <close_file_or_dir@@Base+0x16>

00035626 <get_device_info@@Base>:
   35626:	push	{r4, lr}
   35628:	mov	r4, r0
   3562a:	ldr	r0, [sp, #8]
   3562c:	movs	r1, #0
   3562e:	strd	r2, r3, [r0], #8
   35632:	movs	r2, #16
   35634:	blx	8f98 <memset@plt+0x4>
   35638:	ldr	r2, [sp, #8]
   3563a:	ldr	r1, [pc, #24]	; (35654 <get_device_info@@Base+0x2e>)
   3563c:	mov	r0, r4
   3563e:	blx	8d48 <ioctl@plt>
   35642:	cmp	r0, #0
   35644:	bge.n	35650 <get_device_info@@Base+0x2a>
   35646:	blx	8f58 <__errno_location@plt>
   3564a:	ldr	r0, [r0, #0]
   3564c:	negs	r0, r0
   3564e:	pop	{r4, pc}
   35650:	movs	r0, #0
   35652:	b.n	3564e <get_device_info@@Base+0x28>
   35654:	str	r4, [sp, #120]	; 0x78
   35656:	beq.n	3565a <get_df@@Base+0x2>

00035658 <get_df@@Base>:
   35658:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   3565c:	mov	r5, r0
   3565e:	movs	r0, #16
   35660:	mov	sl, r1
   35662:	blx	8e40 <malloc@plt+0x4>
   35666:	mov	r4, r0
   35668:	cbnz	r0, 35672 <get_df@@Base+0x1a>
   3566a:	mvn.w	r0, #11
   3566e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   35672:	mov.w	r8, #0
   35676:	mov.w	r9, #0
   3567a:	mov	r2, r0
   3567c:	strd	r8, r9, [r0]
   35680:	strd	r8, r9, [r0, #8]
   35684:	mov	r0, r5
   35686:	ldr	r1, [pc, #120]	; (35700 <get_df@@Base+0xa8>)
   35688:	blx	8d48 <ioctl@plt>
   3568c:	cmp	r0, #0
   3568e:	bge.n	356a8 <get_df@@Base+0x50>
   35690:	ldr	r0, [pc, #112]	; (35704 <get_df@@Base+0xac>)
   35692:	add	r0, pc
   35694:	bl	1bd1c <__btrfs_error@@Base>
   35698:	mov	r0, r4
   3569a:	blx	8b84 <free@plt+0x4>
   3569e:	blx	8f58 <__errno_location@plt>
   356a2:	ldr	r0, [r0, #0]
   356a4:	negs	r0, r0
   356a6:	b.n	3566e <get_df@@Base+0x16>
   356a8:	ldrd	r6, r7, [r4, #8]
   356ac:	mov	r0, r4
   356ae:	orrs.w	r3, r6, r7
   356b2:	bne.n	356be <get_df@@Base+0x66>
   356b4:	blx	8b84 <free@plt+0x4>
   356b8:	mvn.w	r0, #1
   356bc:	b.n	3566e <get_df@@Base+0x16>
   356be:	blx	8b84 <free@plt+0x4>
   356c2:	movs	r0, #24
   356c4:	muls	r0, r6
   356c6:	adds	r0, #16
   356c8:	blx	8e40 <malloc@plt+0x4>
   356cc:	mov	r4, r0
   356ce:	cmp	r0, #0
   356d0:	beq.n	3566a <get_df@@Base+0x12>
   356d2:	mov	r2, r0
   356d4:	strd	r6, r7, [r0]
   356d8:	strd	r8, r9, [r0, #8]
   356dc:	mov	r0, r5
   356de:	ldr	r1, [pc, #32]	; (35700 <get_df@@Base+0xa8>)
   356e0:	blx	8d48 <ioctl@plt>
   356e4:	cmp	r0, #0
   356e6:	bge.n	356f6 <get_df@@Base+0x9e>
   356e8:	ldr	r0, [pc, #28]	; (35708 <get_df@@Base+0xb0>)
   356ea:	mov	r2, r6
   356ec:	mov	r3, r7
   356ee:	add	r0, pc
   356f0:	bl	1bd1c <__btrfs_error@@Base>
   356f4:	b.n	35698 <get_df@@Base+0x40>
   356f6:	movs	r0, #0
   356f8:	str.w	r4, [sl]
   356fc:	b.n	3566e <get_df@@Base+0x16>
   356fe:	nop
   35700:	str	r4, [sp, #80]	; 0x50
   35702:	stmia	r0!, {r4}
   35704:	adds	r7, #182	; 0xb6
   35706:	movs	r2, r0
   35708:	adds	r7, #116	; 0x74
   3570a:	movs	r2, r0

0003570c <get_fs_info@@Base>:
   3570c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35710:	sub.w	sp, sp, #12288	; 0x3000
   35714:	sub	sp, #44	; 0x2c
   35716:	mov	r5, r1
   35718:	ldr	r1, [pc, #736]	; (359fc <get_fs_info@@Base+0x2f0>)
   3571a:	add.w	r3, sp, #12288	; 0x3000
   3571e:	str	r2, [sp, #20]
   35720:	adds	r3, #36	; 0x24
   35722:	ldr	r2, [pc, #732]	; (35a00 <get_fs_info@@Base+0x2f4>)
   35724:	add	r1, pc
   35726:	add	r7, sp, #40	; 0x28
   35728:	mov.w	r9, #0
   3572c:	mov	r8, r0
   3572e:	mov	r0, r5
   35730:	ldr	r2, [r1, r2]
   35732:	mov	r1, r9
   35734:	ldr	r2, [r2, #0]
   35736:	str	r2, [r3, #0]
   35738:	mov.w	r2, #0
   3573c:	mov.w	r2, #1024	; 0x400
   35740:	sub.w	r3, r7, #16
   35744:	strd	r9, r9, [r7, #-16]
   35748:	str	r3, [sp, #12]
   3574a:	blx	8f98 <memset@plt+0x4>
   3574e:	mov	r0, r8
   35750:	bl	341ec <path_is_block_device@@Base>
   35754:	cmp	r0, #1
   35756:	bne.n	35834 <get_fs_info@@Base+0x128>
   35758:	mov	r1, r9
   3575a:	mov	r0, r8
   3575c:	blx	8e14 <open64@plt>
   35760:	subs	r6, r0, #0
   35762:	bge.n	3579c <get_fs_info@@Base+0x90>
   35764:	blx	8f58 <__errno_location@plt>
   35768:	mov	r1, r8
   3576a:	ldr	r4, [r0, #0]
   3576c:	ldr	r0, [pc, #660]	; (35a04 <get_fs_info@@Base+0x2f8>)
   3576e:	negs	r4, r4
   35770:	add	r0, pc
   35772:	bl	1bd1c <__btrfs_error@@Base>
   35776:	ldr.w	r1, [r7, #-12]
   3577a:	mov	r0, r6
   3577c:	bl	35600 <close_file_or_dir@@Base>
   35780:	ldr	r1, [pc, #644]	; (35a08 <get_fs_info@@Base+0x2fc>)
   35782:	ldr	r2, [pc, #636]	; (35a00 <get_fs_info@@Base+0x2f4>)
   35784:	add.w	r3, sp, #12288	; 0x3000
   35788:	add	r1, pc
   3578a:	adds	r3, #36	; 0x24
   3578c:	ldr	r2, [r1, r2]
   3578e:	ldr	r1, [r2, #0]
   35790:	ldr	r2, [r3, #0]
   35792:	eors	r1, r2
   35794:	beq.w	359e6 <get_fs_info@@Base+0x2da>
   35798:	blx	8c90 <__stack_chk_fail@plt>
   3579c:	add.w	r3, sp, #4128	; 0x1020
   357a0:	mov	r1, r8
   357a2:	adds	r3, #4
   357a4:	str	r3, [sp, #16]
   357a6:	ldr	r3, [sp, #12]
   357a8:	ldr	r2, [sp, #16]
   357aa:	str.w	r9, [sp, #4]
   357ae:	str	r3, [sp, #0]
   357b0:	mov.w	r3, #4096	; 0x1000
   357b4:	bl	34914 <check_mounted_where@@Base>
   357b8:	subs	r4, r0, #0
   357ba:	beq.n	35828 <get_fs_info@@Base+0x11c>
   357bc:	blt.n	35776 <get_fs_info@@Base+0x6a>
   357be:	add.w	r8, sp, #8192	; 0x2000
   357c2:	movs	r2, #1
   357c4:	add.w	r8, r8, #36	; 0x24
   357c8:	movs	r3, #0
   357ca:	mov	r0, r6
   357cc:	strd	r2, r3, [r5, #8]
   357d0:	mov	r1, r8
   357d2:	mov.w	r2, #65536	; 0x10000
   357d6:	movs	r3, #0
   357d8:	str.w	r9, [sp]
   357dc:	bl	21568 <btrfs_read_dev_super@@Base>
   357e0:	subs	r4, r0, #0
   357e2:	blt.n	3582e <get_fs_info@@Base+0x122>
   357e4:	ldr	r2, [sp, #12]
   357e6:	mov	r3, r5
   357e8:	ldr.w	sl, [r8, #201]	; 0xc9
   357ec:	ldr.w	fp, [r8, #205]	; 0xcd
   357f0:	ldr	r2, [r2, #0]
   357f2:	add.w	r1, r2, #16
   357f6:	strd	sl, fp, [r3], #16
   357fa:	ldr.w	r0, [r2], #4
   357fe:	cmp	r2, r1
   35800:	str.w	r0, [r3], #4
   35804:	bne.n	357fa <get_fs_info@@Base+0xee>
   35806:	mov	r0, r6
   35808:	blx	91e4 <close@plt>
   3580c:	ldr.w	r8, [sp, #16]
   35810:	sub.w	r1, r7, #12
   35814:	mov	r0, r8
   35816:	bl	35468 <open_file_or_dir@@Base>
   3581a:	subs	r6, r0, #0
   3581c:	bge.n	35840 <get_fs_info@@Base+0x134>
   3581e:	blx	8f58 <__errno_location@plt>
   35822:	ldr	r4, [r0, #0]
   35824:	negs	r4, r4
   35826:	b.n	35776 <get_fs_info@@Base+0x6a>
   35828:	mvn.w	r4, #21
   3582c:	b.n	35776 <get_fs_info@@Base+0x6a>
   3582e:	mvn.w	r4, #4
   35832:	b.n	35776 <get_fs_info@@Base+0x6a>
   35834:	mov.w	sl, #0
   35838:	mov.w	fp, #0
   3583c:	mov	r4, r9
   3583e:	b.n	35810 <get_fs_info@@Base+0x104>
   35840:	ldrd	r2, r3, [r5, #8]
   35844:	cmp	r3, #0
   35846:	it	eq
   35848:	cmpeq	r2, #1
   3584a:	beq.w	359b0 <get_fs_info@@Base+0x2a4>
   3584e:	ldr	r1, [pc, #420]	; (359f4 <get_fs_info@@Base+0x2e8>)
   35850:	mov	r2, r5
   35852:	blx	8d48 <ioctl@plt>
   35856:	cmp	r0, #0
   35858:	blt.n	3581e <get_fs_info@@Base+0x112>
   3585a:	mov	r8, r7
   3585c:	movs	r2, #3
   3585e:	movs	r3, #0
   35860:	strd	r2, r3, [r7, #-8]
   35864:	movs	r2, #1
   35866:	movs	r3, #0
   35868:	movs	r4, #216	; 0xd8
   3586a:	strd	r2, r3, [r8], #-8
   3586e:	mov	r9, r3
   35870:	strd	r4, r4, [r8, #56]	; 0x38
   35874:	movs	r4, #30
   35876:	str.w	r4, [r8, #64]	; 0x40
   3587a:	mov	r4, r2
   3587c:	movs	r0, #0
   3587e:	movs	r1, #0
   35880:	strd	r2, r3, [r8, #16]
   35884:	strd	r0, r1, [r5, #8]
   35888:	strd	r0, r1, [r8, #40]	; 0x28
   3588c:	mov.w	r0, #4294967295	; 0xffffffff
   35890:	mov.w	r1, #4294967295	; 0xffffffff
   35894:	strd	r0, r1, [r8, #48]	; 0x30
   35898:	strd	r0, r1, [r8, #32]
   3589c:	ldr	r1, [pc, #344]	; (359f8 <get_fs_info@@Base+0x2ec>)
   3589e:	mov	r2, r8
   358a0:	mov	r0, r6
   358a2:	strd	r4, r9, [r8, #24]
   358a6:	blx	8d48 <ioctl@plt>
   358aa:	cmp	r0, #0
   358ac:	bge.n	3595e <get_fs_info@@Base+0x252>
   358ae:	blx	8f58 <__errno_location@plt>
   358b2:	ldr	r3, [r0, #0]
   358b4:	negs	r4, r3
   358b6:	cmp	r3, #0
   358b8:	bne.w	35776 <get_fs_info@@Base+0x6a>
   358bc:	movs	r2, #0
   358be:	movs	r3, #0
   358c0:	mov	r0, r6
   358c2:	str.w	r8, [sp]
   358c6:	bl	35626 <get_device_info@@Base>
   358ca:	mov	r4, r0
   358cc:	cmp	r0, #0
   358ce:	bne.n	359b0 <get_fs_info@@Base+0x2a4>
   358d0:	ldrd	r3, r2, [r5, #8]
   358d4:	mov.w	r8, #1
   358d8:	adds	r3, #1
   358da:	adc.w	r2, r2, #0
   358de:	strd	r3, r2, [r5, #8]
   358e2:	orrs.w	r3, sl, fp
   358e6:	itt	eq
   358e8:	moveq.w	sl, #1
   358ec:	moveq.w	fp, #0
   358f0:	ldrd	r0, r1, [r5, #8]
   358f4:	orrs.w	r3, r0, r1
   358f8:	beq.w	35776 <get_fs_info@@Base+0x6a>
   358fc:	lsls	r0, r0, #12
   358fe:	blx	8e40 <malloc@plt+0x4>
   35902:	ldr	r3, [sp, #20]
   35904:	mov	r9, r0
   35906:	str	r0, [r3, #0]
   35908:	cmp	r0, #0
   3590a:	beq.n	3581e <get_fs_info@@Base+0x112>
   3590c:	cmp.w	r8, #0
   35910:	beq.n	3591e <get_fs_info@@Base+0x212>
   35912:	sub.w	r1, r7, #8
   35916:	mov.w	r2, #4096	; 0x1000
   3591a:	blx	8bdc <memcpy@plt+0x4>
   3591e:	ldrd	r2, r3, [r5]
   35922:	ldrd	r0, r1, [r5, #8]
   35926:	cmp	r3, fp
   35928:	it	eq
   3592a:	cmpeq	r2, sl
   3592c:	bcc.n	3593a <get_fs_info@@Base+0x22e>
   3592e:	mov	r2, r8
   35930:	asrs	r3, r2, #31
   35932:	cmp	r3, r1
   35934:	it	eq
   35936:	cmpeq	r8, r0
   35938:	bcc.n	359b6 <get_fs_info@@Base+0x2aa>
   3593a:	cmp	r1, #0
   3593c:	it	eq
   3593e:	cmpeq	r0, #1
   35940:	beq.w	35776 <get_fs_info@@Base+0x6a>
   35944:	cmp.w	r8, #0
   35948:	bne.n	359e2 <get_fs_info@@Base+0x2d6>
   3594a:	ldr	r1, [pc, #192]	; (35a0c <get_fs_info@@Base+0x300>)
   3594c:	movs	r3, #1
   3594e:	ldr	r0, [pc, #192]	; (35a10 <get_fs_info@@Base+0x304>)
   35950:	movw	r2, #1091	; 0x443
   35954:	add	r1, pc
   35956:	adds	r1, #41	; 0x29
   35958:	add	r0, pc
   3595a:	bl	347c4 <test_issubvolname@@Base+0x17e>
   3595e:	ldrd	r2, r3, [r5, #8]
   35962:	ldr.w	r1, [r8, #64]	; 0x40
   35966:	adds	r2, r2, r1
   35968:	adc.w	r3, r3, #0
   3596c:	cmp	r1, #30
   3596e:	strd	r2, r3, [r5, #8]
   35972:	bne.n	35984 <get_fs_info@@Base+0x278>
   35974:	ldr.w	r4, [r8, #3906]	; 0xf42
   35978:	ldr.w	r9, [r8, #3910]	; 0xf46
   3597c:	adds	r4, #1
   3597e:	adc.w	r9, r9, #0
   35982:	b.n	3589c <get_fs_info@@Base+0x190>
   35984:	cbnz	r1, 35994 <get_fs_info@@Base+0x288>
   35986:	adds.w	r4, r4, #4294967295	; 0xffffffff
   3598a:	str	r4, [r5, #0]
   3598c:	adc.w	r3, r9, #4294967295	; 0xffffffff
   35990:	str	r3, [r5, #4]
   35992:	b.n	358bc <get_fs_info@@Base+0x1b0>
   35994:	add.w	r2, sp, #12288	; 0x3000
   35998:	subs	r1, #1
   3599a:	adds	r2, #40	; 0x28
   3599c:	movs	r3, #130	; 0x82
   3599e:	mla	r1, r3, r1, r2
   359a2:	sub.w	r1, r1, #12160	; 0x2f80
   359a6:	ldr.w	r2, [r1], #-32
   359aa:	ldr	r3, [r1, #36]	; 0x24
   359ac:	str	r2, [r5, #0]
   359ae:	b.n	35990 <get_fs_info@@Base+0x284>
   359b0:	mov.w	r8, #0
   359b4:	b.n	358f0 <get_fs_info@@Base+0x1e4>
   359b6:	add.w	r3, r9, r8, lsl #12
   359ba:	mov	r2, sl
   359bc:	str	r3, [sp, #0]
   359be:	mov	r0, r6
   359c0:	mov	r3, fp
   359c2:	bl	35626 <get_device_info@@Base>
   359c6:	cmn.w	r0, #19
   359ca:	mov	r4, r0
   359cc:	beq.n	359d8 <get_fs_info@@Base+0x2cc>
   359ce:	cmp	r0, #0
   359d0:	bne.w	35776 <get_fs_info@@Base+0x6a>
   359d4:	add.w	r8, r8, #1
   359d8:	adds.w	sl, sl, #1
   359dc:	adc.w	fp, fp, #0
   359e0:	b.n	3591e <get_fs_info@@Base+0x212>
   359e2:	movs	r4, #0
   359e4:	b.n	35776 <get_fs_info@@Base+0x6a>
   359e6:	mov	r0, r4
   359e8:	add.w	sp, sp, #12288	; 0x3000
   359ec:	add	sp, #44	; 0x2c
   359ee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   359f2:	nop
   359f4:	str	r4, [sp, #124]	; 0x7c
   359f6:	strh	r0, [r0, #32]
   359f8:	str	r4, [sp, #68]	; 0x44
   359fa:	beq.n	359fe <get_fs_info@@Base+0x2f2>
   359fc:	strb	r4, [r6, r7]
   359fe:	movs	r3, r0
   35a00:	lsls	r0, r1, #10
   35a02:	movs	r0, r0
   35a04:	adds	r3, #199	; 0xc7
   35a06:	movs	r2, r0
   35a08:	strb	r0, [r2, r6]
   35a0a:	movs	r3, r0
   35a0c:	subs	r0, #33	; 0x21
   35a0e:	movs	r2, r0
   35a10:	adds	r5, #52	; 0x34
   35a12:	movs	r2, r0

00035a14 <get_fsid@@Base>:
   35a14:	push	{r4, r5, r6, r7, lr}
   35a16:	mov	r7, r2
   35a18:	ldr	r2, [pc, #148]	; (35ab0 <get_fsid@@Base+0x9c>)
   35a1a:	subw	sp, sp, #1036	; 0x40c
   35a1e:	ldr	r3, [pc, #148]	; (35ab4 <get_fsid@@Base+0xa0>)
   35a20:	mov	r4, r1
   35a22:	add	r2, pc
   35a24:	movs	r1, #0
   35a26:	mov	r6, r0
   35a28:	ldr	r3, [r2, r3]
   35a2a:	ldr	r3, [r3, #0]
   35a2c:	str.w	r3, [sp, #1028]	; 0x404
   35a30:	mov.w	r3, #0
   35a34:	blx	8e14 <open64@plt>
   35a38:	subs	r5, r0, #0
   35a3a:	bge.n	35a6a <get_fsid@@Base+0x56>
   35a3c:	blx	8f58 <__errno_location@plt>
   35a40:	ldr	r4, [r0, #0]
   35a42:	negs	r4, r4
   35a44:	cbnz	r7, 35a50 <get_fsid@@Base+0x3c>
   35a46:	ldr	r0, [pc, #112]	; (35ab8 <get_fsid@@Base+0xa4>)
   35a48:	mov	r1, r6
   35a4a:	add	r0, pc
   35a4c:	bl	1bd1c <__btrfs_error@@Base>
   35a50:	adds	r3, r5, #1
   35a52:	bne.n	35a7e <get_fsid@@Base+0x6a>
   35a54:	ldr	r2, [pc, #100]	; (35abc <get_fsid@@Base+0xa8>)
   35a56:	ldr	r3, [pc, #92]	; (35ab4 <get_fsid@@Base+0xa0>)
   35a58:	add	r2, pc
   35a5a:	ldr	r3, [r2, r3]
   35a5c:	ldr	r2, [r3, #0]
   35a5e:	ldr.w	r3, [sp, #1028]	; 0x404
   35a62:	eors	r2, r3
   35a64:	beq.n	35aa4 <get_fsid@@Base+0x90>
   35a66:	blx	8c90 <__stack_chk_fail@plt>
   35a6a:	ldr	r1, [pc, #64]	; (35aac <get_fsid@@Base+0x98>)
   35a6c:	mov	r2, sp
   35a6e:	blx	8d48 <ioctl@plt>
   35a72:	cmp	r0, #0
   35a74:	bge.n	35a86 <get_fsid@@Base+0x72>
   35a76:	blx	8f58 <__errno_location@plt>
   35a7a:	ldr	r4, [r0, #0]
   35a7c:	negs	r4, r4
   35a7e:	mov	r0, r5
   35a80:	blx	91e4 <close@plt>
   35a84:	b.n	35a54 <get_fsid@@Base+0x40>
   35a86:	mov	r3, r4
   35a88:	add	r6, sp, #16
   35a8a:	add	r4, sp, #32
   35a8c:	mov	r2, r6
   35a8e:	adds	r3, #8
   35a90:	ldmia	r2!, {r0, r1}
   35a92:	cmp	r2, r4
   35a94:	str.w	r0, [r3, #-8]
   35a98:	mov	r6, r2
   35a9a:	str.w	r1, [r3, #-4]
   35a9e:	bne.n	35a8c <get_fsid@@Base+0x78>
   35aa0:	movs	r4, #0
   35aa2:	b.n	35a7e <get_fsid@@Base+0x6a>
   35aa4:	mov	r0, r4
   35aa6:	addw	sp, sp, #1036	; 0x40c
   35aaa:	pop	{r4, r5, r6, r7, pc}
   35aac:	str	r4, [sp, #124]	; 0x7c
   35aae:	strh	r0, [r0, #32]
   35ab0:	strh	r6, [r6, r3]
   35ab2:	movs	r3, r0
   35ab4:	lsls	r0, r1, #10
   35ab6:	movs	r0, r0
   35ab8:	ldr	r7, [sp, #744]	; 0x2e8
   35aba:	movs	r0, r0
   35abc:	strh	r0, [r0, r3]
   35abe:	movs	r3, r0

00035ac0 <group_profile_max_safe_loss@@Base>:
   35ac0:	movs	r3, #0
   35ac2:	cmp	r3, #0
   35ac4:	push	{r4, r5, lr}
   35ac6:	and.w	r4, r0, #2040	; 0x7f8
   35aca:	it	eq
   35acc:	cmpeq	r4, #128	; 0x80
   35ace:	mov	r5, r3
   35ad0:	beq.n	35b40 <group_profile_max_safe_loss@@Base+0x80>
   35ad2:	cmp	r3, #0
   35ad4:	it	eq
   35ad6:	cmpeq	r4, #129	; 0x81
   35ad8:	bcs.n	35b0e <group_profile_max_safe_loss@@Base+0x4e>
   35ada:	cmp	r3, #0
   35adc:	it	eq
   35ade:	cmpeq	r4, #16
   35ae0:	beq.n	35b40 <group_profile_max_safe_loss@@Base+0x80>
   35ae2:	cmp	r3, #0
   35ae4:	it	eq
   35ae6:	cmpeq	r4, #17
   35ae8:	bcs.n	35af8 <group_profile_max_safe_loss@@Base+0x38>
   35aea:	tst.w	r0, #2032	; 0x7f0
   35aee:	ite	ne
   35af0:	movne.w	r0, #4294967295	; 0xffffffff
   35af4:	moveq	r0, r3
   35af6:	pop	{r4, r5, pc}
   35af8:	cmp	r3, #0
   35afa:	it	eq
   35afc:	cmpeq	r4, #32
   35afe:	beq.n	35b44 <group_profile_max_safe_loss@@Base+0x84>
   35b00:	cmp	r3, #0
   35b02:	itet	eq
   35b04:	cmpeq	r4, #64	; 0x40
   35b06:	movne.w	r0, #4294967295	; 0xffffffff
   35b0a:	moveq	r0, #1
   35b0c:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b0e:	cmp	r3, #0
   35b10:	it	eq
   35b12:	cmpeq.w	r4, #1024	; 0x400
   35b16:	beq.n	35b48 <group_profile_max_safe_loss@@Base+0x88>
   35b18:	movs	r3, #0
   35b1a:	cmp	r3, r5
   35b1c:	mov.w	r2, #1024	; 0x400
   35b20:	it	eq
   35b22:	cmpeq	r2, r4
   35b24:	bcc.n	35b4c <group_profile_max_safe_loss@@Base+0x8c>
   35b26:	cmp	r5, #0
   35b28:	it	eq
   35b2a:	cmpeq.w	r4, #256	; 0x100
   35b2e:	beq.n	35b52 <group_profile_max_safe_loss@@Base+0x92>
   35b30:	cmp	r5, #0
   35b32:	itet	eq
   35b34:	cmpeq.w	r4, #512	; 0x200
   35b38:	movne.w	r0, #4294967295	; 0xffffffff
   35b3c:	moveq	r0, #2
   35b3e:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b40:	movs	r0, #1
   35b42:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b44:	mov	r0, r3
   35b46:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b48:	movs	r0, #3
   35b4a:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b4c:	mov.w	r0, #4294967295	; 0xffffffff
   35b50:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>
   35b52:	movs	r0, #2
   35b54:	b.n	35af6 <group_profile_max_safe_loss@@Base+0x36>

00035b56 <ask_user@@Base>:
   35b56:	ldr	r2, [pc, #148]	; (35bec <ask_user@@Base+0x96>)
   35b58:	ldr	r3, [pc, #148]	; (35bf0 <ask_user@@Base+0x9a>)
   35b5a:	add	r2, pc
   35b5c:	push	{r4, r5, r6, lr}
   35b5e:	movs	r5, #0
   35b60:	sub	sp, #40	; 0x28
   35b62:	ldr	r3, [r2, r3]
   35b64:	mov	r4, r0
   35b66:	movs	r2, #26
   35b68:	mov	r1, r5
   35b6a:	add	r0, sp, #8
   35b6c:	ldr	r3, [r3, #0]
   35b6e:	str	r3, [sp, #36]	; 0x24
   35b70:	mov.w	r3, #0
   35b74:	str	r5, [sp, #4]
   35b76:	blx	8f98 <memset@plt+0x4>
   35b7a:	ldr	r1, [pc, #120]	; (35bf4 <ask_user@@Base+0x9e>)
   35b7c:	mov	r2, r4
   35b7e:	ldr	r6, [pc, #120]	; (35bf8 <ask_user@@Base+0xa2>)
   35b80:	add	r1, pc
   35b82:	movs	r0, #1
   35b84:	str	r5, [sp, #0]
   35b86:	blx	900c <__printf_chk@plt+0x4>
   35b8a:	ldr	r3, [pc, #112]	; (35bfc <ask_user@@Base+0xa6>)
   35b8c:	add	r6, pc
   35b8e:	add	r4, sp, #4
   35b90:	movs	r1, #29
   35b92:	ldr	r3, [r6, r3]
   35b94:	mov	r0, r4
   35b96:	ldr	r2, [r3, #0]
   35b98:	blx	8b90 <fgets@plt>
   35b9c:	cbnz	r0, 35bb4 <ask_user@@Base+0x5e>
   35b9e:	movs	r0, #0
   35ba0:	ldr	r2, [pc, #92]	; (35c00 <ask_user@@Base+0xaa>)
   35ba2:	ldr	r3, [pc, #76]	; (35bf0 <ask_user@@Base+0x9a>)
   35ba4:	add	r2, pc
   35ba6:	ldr	r3, [r2, r3]
   35ba8:	ldr	r2, [r3, #0]
   35baa:	ldr	r3, [sp, #36]	; 0x24
   35bac:	eors	r2, r3
   35bae:	beq.n	35be6 <ask_user@@Base+0x90>
   35bb0:	blx	8c90 <__stack_chk_fail@plt>
   35bb4:	ldr	r1, [pc, #76]	; (35c04 <ask_user@@Base+0xae>)
   35bb6:	mov	r0, r4
   35bb8:	mov	r2, sp
   35bba:	add	r1, pc
   35bbc:	blx	8de4 <strtok_r@plt>
   35bc0:	mov	r4, r0
   35bc2:	cmp	r0, #0
   35bc4:	beq.n	35b9e <ask_user@@Base+0x48>
   35bc6:	ldr	r1, [pc, #64]	; (35c08 <ask_user@@Base+0xb2>)
   35bc8:	add	r1, pc
   35bca:	blx	8cdc <strcasecmp@plt>
   35bce:	cbz	r0, 35be2 <ask_user@@Base+0x8c>
   35bd0:	ldr	r1, [pc, #56]	; (35c0c <ask_user@@Base+0xb6>)
   35bd2:	mov	r0, r4
   35bd4:	add	r1, pc
   35bd6:	blx	8cdc <strcasecmp@plt>
   35bda:	clz	r0, r0
   35bde:	lsrs	r0, r0, #5
   35be0:	b.n	35ba0 <ask_user@@Base+0x4a>
   35be2:	movs	r0, #1
   35be4:	b.n	35ba0 <ask_user@@Base+0x4a>
   35be6:	add	sp, #40	; 0x28
   35be8:	pop	{r4, r5, r6, pc}
   35bea:	nop
   35bec:	str	r6, [r7, r6]
   35bee:	movs	r3, r0
   35bf0:	lsls	r0, r1, #10
   35bf2:	movs	r0, r0
   35bf4:	adds	r3, #23
   35bf6:	movs	r2, r0
   35bf8:	str	r4, [r1, r6]
   35bfa:	movs	r3, r0
   35bfc:	lsls	r0, r7, #10
   35bfe:	movs	r0, r0
   35c00:	str	r4, [r6, r5]
   35c02:	movs	r3, r0
   35c04:	adds	r2, #232	; 0xe8
   35c06:	movs	r2, r0
   35c08:	strh	r4, [r4, #56]	; 0x38
   35c0a:	movs	r0, r0
   35c0c:	ldmia	r7, {r0, r2, r5, r6, r7}
	...

00035c10 <find_mount_root@@Base>:
   35c10:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35c14:	mov	r9, r0
   35c16:	str	r1, [sp, #0]
   35c18:	mov.w	r1, #262144	; 0x40000
   35c1c:	blx	8e14 <open64@plt>
   35c20:	cmp	r0, #0
   35c22:	bge.n	35c34 <find_mount_root@@Base+0x24>
   35c24:	blx	8f58 <__errno_location@plt>
   35c28:	ldr	r4, [r0, #0]
   35c2a:	negs	r4, r4
   35c2c:	mov	r0, r4
   35c2e:	add	sp, #12
   35c30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35c34:	blx	91e4 <close@plt>
   35c38:	ldr	r1, [pc, #172]	; (35ce8 <find_mount_root@@Base+0xd8>)
   35c3a:	ldr	r0, [pc, #176]	; (35cec <find_mount_root@@Base+0xdc>)
   35c3c:	add	r1, pc
   35c3e:	add	r0, pc
   35c40:	blx	9128 <setmntent@plt>
   35c44:	mov	r7, r0
   35c46:	cmp	r0, #0
   35c48:	beq.n	35c24 <find_mount_root@@Base+0x14>
   35c4a:	ldr.w	fp, [pc, #164]	; 35cf0 <find_mount_root@@Base+0xe0>
   35c4e:	movs	r5, #0
   35c50:	mov	sl, r5
   35c52:	movs	r6, #1
   35c54:	add	fp, pc
   35c56:	b.n	35c64 <find_mount_root@@Base+0x54>
   35c58:	ldr	r0, [r4, #8]
   35c5a:	mov	r1, fp
   35c5c:	blx	8b04 <strcmp@plt>
   35c60:	mov	sl, r8
   35c62:	mov	r6, r0
   35c64:	mov	r0, r7
   35c66:	blx	8df0 <getmntent@plt>
   35c6a:	mov	r4, r0
   35c6c:	cbz	r0, 35ca8 <find_mount_root@@Base+0x98>
   35c6e:	ldr	r3, [r4, #4]
   35c70:	mov	r0, r3
   35c72:	str	r3, [sp, #4]
   35c74:	blx	8f1c <strlen@plt>
   35c78:	ldr	r3, [sp, #4]
   35c7a:	mov	r1, r9
   35c7c:	mov	r8, r0
   35c7e:	mov	r2, r0
   35c80:	mov	r0, r3
   35c82:	blx	91b4 <strncmp@plt>
   35c86:	cmp	r0, #0
   35c88:	bne.n	35c64 <find_mount_root@@Base+0x54>
   35c8a:	cmp	sl, r8
   35c8c:	bgt.n	35c64 <find_mount_root@@Base+0x54>
   35c8e:	mov	r0, r5
   35c90:	blx	8b84 <free@plt+0x4>
   35c94:	ldr	r0, [r4, #4]
   35c96:	blx	8c78 <strdup@plt+0x4>
   35c9a:	mov	r5, r0
   35c9c:	cmp	r0, #0
   35c9e:	bne.n	35c58 <find_mount_root@@Base+0x48>
   35ca0:	blx	8f58 <__errno_location@plt>
   35ca4:	ldr	r4, [r0, #0]
   35ca6:	negs	r4, r4
   35ca8:	mov	r0, r7
   35caa:	blx	9064 <endmntent@plt>
   35cae:	cmp	r4, #0
   35cb0:	bne.n	35c2c <find_mount_root@@Base+0x1c>
   35cb2:	cbz	r5, 35ce0 <find_mount_root@@Base+0xd0>
   35cb4:	cbz	r6, 35cc0 <find_mount_root@@Base+0xb0>
   35cb6:	mov	r0, r5
   35cb8:	movs	r4, #1
   35cba:	blx	8b84 <free@plt+0x4>
   35cbe:	b.n	35c2c <find_mount_root@@Base+0x1c>
   35cc0:	mov	r1, r6
   35cc2:	mov	r0, r5
   35cc4:	blx	91cc <realpath@plt>
   35cc8:	ldr	r3, [sp, #0]
   35cca:	str	r0, [r3, #0]
   35ccc:	cbnz	r0, 35cd6 <find_mount_root@@Base+0xc6>
   35cce:	blx	8f58 <__errno_location@plt>
   35cd2:	ldr	r6, [r0, #0]
   35cd4:	negs	r6, r6
   35cd6:	mov	r0, r5
   35cd8:	mov	r4, r6
   35cda:	blx	8b84 <free@plt+0x4>
   35cde:	b.n	35c2c <find_mount_root@@Base+0x1c>
   35ce0:	mvn.w	r4, #1
   35ce4:	b.n	35c2c <find_mount_root@@Base+0x1c>
   35ce6:	nop
   35ce8:	b.n	363f6 <subvol_strip_mountpoint@@Base+0x4>
   35cea:	movs	r0, r0
   35cec:	cmp	r6, #81	; 0x51
   35cee:	movs	r2, r0
   35cf0:	cmp	r5, #194	; 0xc2
   35cf2:	movs	r2, r0

00035cf4 <units_set_mode@@Base>:
   35cf4:	ldrb	r3, [r0, #0]
   35cf6:	orrs	r1, r3
   35cf8:	str	r1, [r0, #0]
   35cfa:	bx	lr

00035cfc <units_set_base@@Base>:
   35cfc:	ldr	r3, [r0, #0]
   35cfe:	bic.w	r3, r3, #255	; 0xff
   35d02:	orrs	r3, r1
   35d04:	str	r3, [r0, #0]
   35d06:	bx	lr

00035d08 <find_next_key@@Base>:
   35d08:	ldr	r2, [pc, #168]	; (35db4 <find_next_key@@Base+0xac>)
   35d0a:	ldr	r3, [pc, #172]	; (35db8 <find_next_key@@Base+0xb0>)
   35d0c:	add	r2, pc
   35d0e:	push	{r4, r5, r6, lr}
   35d10:	sub	sp, #24
   35d12:	ldr	r3, [r2, r3]
   35d14:	mov	r4, r1
   35d16:	movs	r5, #0
   35d18:	ldr	r3, [r3, #0]
   35d1a:	str	r3, [sp, #20]
   35d1c:	mov.w	r3, #0
   35d20:	subs	r3, r0, #4
   35d22:	ldr.w	r0, [r3, #4]!
   35d26:	cbz	r0, 35d3a <find_next_key@@Base+0x32>
   35d28:	ldr	r2, [r3, #32]
   35d2a:	ldr.w	r1, [r0, #192]	; 0xc0
   35d2e:	adds	r2, #1
   35d30:	cmp	r2, r1
   35d32:	bcc.n	35d3e <find_next_key@@Base+0x36>
   35d34:	adds	r5, #1
   35d36:	cmp	r5, #8
   35d38:	bne.n	35d22 <find_next_key@@Base+0x1a>
   35d3a:	movs	r5, #1
   35d3c:	b.n	35d6e <find_next_key@@Base+0x66>
   35d3e:	add.w	r6, r4, #9
   35d42:	mov	r1, sp
   35d44:	cbnz	r5, 35d82 <find_next_key@@Base+0x7a>
   35d46:	movs	r3, #25
   35d48:	muls	r2, r3
   35d4a:	movs	r3, #17
   35d4c:	adds	r2, #101	; 0x65
   35d4e:	bl	1bbba <read_extent_buffer@@Base>
   35d52:	ldr.w	r2, [sp, #9]
   35d56:	ldr.w	r3, [sp, #13]
   35d5a:	str.w	r2, [r4, #9]
   35d5e:	str	r3, [r6, #4]
   35d60:	ldrb.w	r3, [sp, #8]
   35d64:	strb	r3, [r4, #8]
   35d66:	ldr	r3, [sp, #0]
   35d68:	str	r3, [r4, #0]
   35d6a:	ldr	r3, [sp, #4]
   35d6c:	str	r3, [r4, #4]
   35d6e:	ldr	r2, [pc, #76]	; (35dbc <find_next_key@@Base+0xb4>)
   35d70:	ldr	r3, [pc, #68]	; (35db8 <find_next_key@@Base+0xb0>)
   35d72:	add	r2, pc
   35d74:	ldr	r3, [r2, r3]
   35d76:	ldr	r2, [r3, #0]
   35d78:	ldr	r3, [sp, #20]
   35d7a:	eors	r2, r3
   35d7c:	beq.n	35dae <find_next_key@@Base+0xa6>
   35d7e:	blx	8c90 <__stack_chk_fail@plt>
   35d82:	add.w	r2, r2, r2, lsl #5
   35d86:	movs	r3, #17
   35d88:	adds	r2, #101	; 0x65
   35d8a:	movs	r5, #0
   35d8c:	bl	1bbba <read_extent_buffer@@Base>
   35d90:	ldr.w	r2, [sp, #9]
   35d94:	ldr.w	r3, [sp, #13]
   35d98:	str.w	r2, [r4, #9]
   35d9c:	str	r3, [r6, #4]
   35d9e:	ldrb.w	r3, [sp, #8]
   35da2:	strb	r3, [r4, #8]
   35da4:	ldr	r3, [sp, #0]
   35da6:	str	r3, [r4, #0]
   35da8:	ldr	r3, [sp, #4]
   35daa:	str	r3, [r4, #4]
   35dac:	b.n	35d6e <find_next_key@@Base+0x66>
   35dae:	mov	r0, r5
   35db0:	add	sp, #24
   35db2:	pop	{r4, r5, r6, pc}
   35db4:	str	r4, [r1, r0]
   35db6:	movs	r3, r0
   35db8:	lsls	r0, r1, #10
   35dba:	movs	r0, r0
   35dbc:	ldr	r7, [pc, #664]	; (36058 <test_num_disk_vs_raid@@Base+0x114>)
   35dbe:	movs	r3, r0

00035dc0 <btrfs_group_type_str@@Base>:
   35dc0:	and.w	r3, r1, #131072	; 0x20000
   35dc4:	and.w	r2, r0, #7
   35dc8:	cmp	r3, #0
   35dca:	it	eq
   35dcc:	cmpeq	r2, #6
   35dce:	push	{r4, r5, lr}
   35dd0:	bcs.n	35e02 <btrfs_group_type_str@@Base+0x42>
   35dd2:	orrs.w	r1, r2, r3
   35dd6:	beq.n	35e1e <btrfs_group_type_str@@Base+0x5e>
   35dd8:	adds.w	r4, r2, #4294967295	; 0xffffffff
   35ddc:	adc.w	r5, r3, #4294967295	; 0xffffffff
   35de0:	cmp	r5, #0
   35de2:	it	eq
   35de4:	cmpeq	r4, #5
   35de6:	bcs.n	35dfc <btrfs_group_type_str@@Base+0x3c>
   35de8:	cmp	r4, #4
   35dea:	bhi.n	35dfc <btrfs_group_type_str@@Base+0x3c>
   35dec:	tbb	[pc, r4]
   35df0:	lsls	r2, r3, #12
   35df2:	asrs	r6, r0, #4
   35df4:	movs	r4, r2
   35df6:	ldr	r0, [pc, #56]	; (35e30 <btrfs_group_type_str@@Base+0x70>)
   35df8:	add	r0, pc
   35dfa:	pop	{r4, r5, pc}
   35dfc:	ldr	r0, [pc, #52]	; (35e34 <btrfs_group_type_str@@Base+0x74>)
   35dfe:	add	r0, pc
   35e00:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e02:	cmp.w	r3, #131072	; 0x20000
   35e06:	it	eq
   35e08:	cmpeq	r2, #0
   35e0a:	bne.n	35e2a <btrfs_group_type_str@@Base+0x6a>
   35e0c:	ldr	r0, [pc, #40]	; (35e38 <btrfs_group_type_str@@Base+0x78>)
   35e0e:	add	r0, pc
   35e10:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e12:	ldr	r0, [pc, #40]	; (35e3c <btrfs_group_type_str@@Base+0x7c>)
   35e14:	add	r0, pc
   35e16:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e18:	ldr	r0, [pc, #36]	; (35e40 <btrfs_group_type_str@@Base+0x80>)
   35e1a:	add	r0, pc
   35e1c:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e1e:	ldr	r0, [pc, #36]	; (35e44 <btrfs_group_type_str@@Base+0x84>)
   35e20:	add	r0, pc
   35e22:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e24:	ldr	r0, [pc, #32]	; (35e48 <btrfs_group_type_str@@Base+0x88>)
   35e26:	add	r0, pc
   35e28:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e2a:	ldr	r0, [pc, #32]	; (35e4c <btrfs_group_type_str@@Base+0x8c>)
   35e2c:	add	r0, pc
   35e2e:	b.n	35dfa <btrfs_group_type_str@@Base+0x3a>
   35e30:	adds	r0, #194	; 0xc2
   35e32:	movs	r2, r0
   35e34:	b.n	361c2 <get_unit_mode_from_arg@@Base+0x76>
   35e36:	movs	r0, r0
   35e38:	adds	r0, #179	; 0xb3
   35e3a:	movs	r2, r0
   35e3c:	adds	r0, #157	; 0x9d
   35e3e:	movs	r2, r0
   35e40:	adds	r0, #146	; 0x92
   35e42:	movs	r2, r0
   35e44:	b.n	3618e <get_unit_mode_from_arg@@Base+0x42>
   35e46:	movs	r0, r0
   35e48:	adds	r0, #129	; 0x81
   35e4a:	movs	r2, r0
   35e4c:	b.n	3617e <get_unit_mode_from_arg@@Base+0x32>
	...

00035e50 <btrfs_group_profile_str@@Base>:
   35e50:	and.w	r2, r0, #2040	; 0x7f8
   35e54:	movs	r3, #0
   35e56:	cmp	r3, #0
   35e58:	it	eq
   35e5a:	cmpeq	r2, #64	; 0x40
   35e5c:	beq.n	35ed8 <btrfs_group_profile_str@@Base+0x88>
   35e5e:	cmp	r3, #0
   35e60:	it	eq
   35e62:	cmpeq	r2, #65	; 0x41
   35e64:	bcs.n	35e98 <btrfs_group_profile_str@@Base+0x48>
   35e66:	cmp	r3, #0
   35e68:	it	eq
   35e6a:	cmpeq	r2, #16
   35e6c:	beq.n	35ede <btrfs_group_profile_str@@Base+0x8e>
   35e6e:	cmp	r3, #0
   35e70:	it	eq
   35e72:	cmpeq	r2, #17
   35e74:	bcs.n	35e8a <btrfs_group_profile_str@@Base+0x3a>
   35e76:	orrs.w	r1, r2, r3
   35e7a:	beq.n	35ee4 <btrfs_group_profile_str@@Base+0x94>
   35e7c:	cmp	r3, #0
   35e7e:	it	eq
   35e80:	cmpeq	r2, #8
   35e82:	bne.n	35eea <btrfs_group_profile_str@@Base+0x9a>
   35e84:	ldr	r0, [pc, #136]	; (35f10 <btrfs_group_profile_str@@Base+0xc0>)
   35e86:	add	r0, pc
   35e88:	bx	lr
   35e8a:	cmp	r3, #0
   35e8c:	it	eq
   35e8e:	cmpeq	r2, #32
   35e90:	bne.n	35ef0 <btrfs_group_profile_str@@Base+0xa0>
   35e92:	ldr	r0, [pc, #128]	; (35f14 <btrfs_group_profile_str@@Base+0xc4>)
   35e94:	add	r0, pc
   35e96:	bx	lr
   35e98:	cmp	r3, #0
   35e9a:	it	eq
   35e9c:	cmpeq.w	r2, #512	; 0x200
   35ea0:	beq.n	35ef6 <btrfs_group_profile_str@@Base+0xa6>
   35ea2:	movs	r1, #0
   35ea4:	cmp	r1, r3
   35ea6:	mov.w	r0, #512	; 0x200
   35eaa:	it	eq
   35eac:	cmpeq	r0, r2
   35eae:	bcc.n	35ec8 <btrfs_group_profile_str@@Base+0x78>
   35eb0:	cmp	r3, #0
   35eb2:	it	eq
   35eb4:	cmpeq	r2, #128	; 0x80
   35eb6:	beq.n	35efc <btrfs_group_profile_str@@Base+0xac>
   35eb8:	cmp	r3, #0
   35eba:	it	eq
   35ebc:	cmpeq.w	r2, #256	; 0x100
   35ec0:	bne.n	35f02 <btrfs_group_profile_str@@Base+0xb2>
   35ec2:	ldr	r0, [pc, #84]	; (35f18 <btrfs_group_profile_str@@Base+0xc8>)
   35ec4:	add	r0, pc
   35ec6:	bx	lr
   35ec8:	cmp	r3, #0
   35eca:	it	eq
   35ecc:	cmpeq.w	r2, #1024	; 0x400
   35ed0:	bne.n	35f08 <btrfs_group_profile_str@@Base+0xb8>
   35ed2:	ldr	r0, [pc, #72]	; (35f1c <btrfs_group_profile_str@@Base+0xcc>)
   35ed4:	add	r0, pc
   35ed6:	bx	lr
   35ed8:	ldr	r0, [pc, #68]	; (35f20 <btrfs_group_profile_str@@Base+0xd0>)
   35eda:	add	r0, pc
   35edc:	bx	lr
   35ede:	ldr	r0, [pc, #68]	; (35f24 <btrfs_group_profile_str@@Base+0xd4>)
   35ee0:	add	r0, pc
   35ee2:	bx	lr
   35ee4:	ldr	r0, [pc, #64]	; (35f28 <btrfs_group_profile_str@@Base+0xd8>)
   35ee6:	add	r0, pc
   35ee8:	bx	lr
   35eea:	ldr	r0, [pc, #64]	; (35f2c <btrfs_group_profile_str@@Base+0xdc>)
   35eec:	add	r0, pc
   35eee:	bx	lr
   35ef0:	ldr	r0, [pc, #60]	; (35f30 <btrfs_group_profile_str@@Base+0xe0>)
   35ef2:	add	r0, pc
   35ef4:	bx	lr
   35ef6:	ldr	r0, [pc, #60]	; (35f34 <btrfs_group_profile_str@@Base+0xe4>)
   35ef8:	add	r0, pc
   35efa:	bx	lr
   35efc:	ldr	r0, [pc, #56]	; (35f38 <btrfs_group_profile_str@@Base+0xe8>)
   35efe:	add	r0, pc
   35f00:	bx	lr
   35f02:	ldr	r0, [pc, #56]	; (35f3c <btrfs_group_profile_str@@Base+0xec>)
   35f04:	add	r0, pc
   35f06:	bx	lr
   35f08:	ldr	r0, [pc, #52]	; (35f40 <btrfs_group_profile_str@@Base+0xf0>)
   35f0a:	add	r0, pc
   35f0c:	bx	lr
   35f0e:	nop
   35f10:	bgt.n	35fb2 <test_num_disk_vs_raid@@Base+0x6e>
   35f12:	movs	r0, r0
   35f14:	bgt.n	35fda <test_num_disk_vs_raid@@Base+0x96>
   35f16:	movs	r0, r0
   35f18:	bgt.n	35fa6 <test_num_disk_vs_raid@@Base+0x62>
   35f1a:	movs	r0, r0
   35f1c:	bgt.n	35f50 <test_num_disk_vs_raid@@Base+0xc>
   35f1e:	movs	r0, r0
   35f20:	bgt.n	35f64 <test_num_disk_vs_raid@@Base+0x20>
   35f22:	movs	r0, r0
   35f24:	blt.n	35f20 <btrfs_group_profile_str@@Base+0xd0>
   35f26:	movs	r0, r0
   35f28:	cmp	r7, #233	; 0xe9
   35f2a:	movs	r2, r0
   35f2c:	b.n	360de <btrfs_tree_search2_ioctl_supported@@Base+0x32>
   35f2e:	movs	r0, r0
   35f30:	b.n	360d6 <btrfs_tree_search2_ioctl_supported@@Base+0x2a>
   35f32:	movs	r0, r0
   35f34:	blt.n	35f0e <btrfs_group_profile_str@@Base+0xbe>
   35f36:	movs	r0, r0
   35f38:	bgt.n	35f44 <test_num_disk_vs_raid@@Base>
   35f3a:	movs	r0, r0
   35f3c:	b.n	360be <btrfs_tree_search2_ioctl_supported@@Base+0x12>
   35f3e:	movs	r0, r0
   35f40:	b.n	360b6 <btrfs_tree_search2_ioctl_supported@@Base+0xa>
	...

00035f44 <test_num_disk_vs_raid@@Base>:
   35f44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35f48:	sub	sp, #36	; 0x24
   35f4a:	mov	sl, r3
   35f4c:	ldr	r3, [pc, #316]	; (3608c <test_num_disk_vs_raid@@Base+0x148>)
   35f4e:	ldrd	r6, r7, [sp, #72]	; 0x48
   35f52:	orr.w	fp, r0, r2
   35f56:	add	r3, pc
   35f58:	ldr	r5, [sp, #80]	; 0x50
   35f5a:	cmp	r7, #0
   35f5c:	mov	r9, r0
   35f5e:	it	eq
   35f60:	cmpeq	r6, #2
   35f62:	mov	r8, r2
   35f64:	str	r3, [sp, #28]
   35f66:	beq.n	35ff4 <test_num_disk_vs_raid@@Base+0xb0>
   35f68:	cmp	r7, #0
   35f6a:	it	eq
   35f6c:	cmpeq	r6, #3
   35f6e:	beq.n	35ff0 <test_num_disk_vs_raid@@Base+0xac>
   35f70:	cmp	r7, #0
   35f72:	it	eq
   35f74:	cmpeq	r6, #1
   35f76:	beq.n	35ff8 <test_num_disk_vs_raid@@Base+0xb4>
   35f78:	mov.w	r4, #1088	; 0x440
   35f7c:	orr.w	r4, r4, #768	; 0x300
   35f80:	orr.w	r4, r4, #152	; 0x98
   35f84:	cmp	r7, #0
   35f86:	orr.w	r4, r4, #32
   35f8a:	it	eq
   35f8c:	cmpeq	r6, #2
   35f8e:	bcc.n	35fa6 <test_num_disk_vs_raid@@Base+0x62>
   35f90:	and.w	r2, fp, #32
   35f94:	movs	r3, #0
   35f96:	orrs	r3, r2
   35f98:	beq.n	35fa6 <test_num_disk_vs_raid@@Base+0x62>
   35f9a:	ldr	r0, [pc, #244]	; (36090 <test_num_disk_vs_raid@@Base+0x14c>)
   35f9c:	str	r1, [sp, #16]
   35f9e:	add	r0, pc
   35fa0:	bl	1bca0 <__btrfs_warning@@Base>
   35fa4:	ldr	r1, [sp, #16]
   35fa6:	bic.w	r3, r9, r4
   35faa:	mvn.w	ip, r4
   35fae:	strd	r3, r1, [sp, #16]
   35fb2:	ldrd	r3, r4, [sp, #16]
   35fb6:	orrs	r3, r4
   35fb8:	beq.n	35ffc <test_num_disk_vs_raid@@Base+0xb8>
   35fba:	ldr	r2, [pc, #216]	; (36094 <test_num_disk_vs_raid@@Base+0x150>)
   35fbc:	mov	r0, r9
   35fbe:	ldr	r3, [sp, #28]
   35fc0:	ldr	r3, [r3, r2]
   35fc2:	str	r1, [sp, #28]
   35fc4:	ldr	r4, [r3, #0]
   35fc6:	bl	35e50 <btrfs_group_profile_str@@Base>
   35fca:	ldr	r1, [sp, #28]
   35fcc:	str	r0, [sp, #16]
   35fce:	mov	r0, r9
   35fd0:	bl	34680 <test_issubvolname@@Base+0x3a>
   35fd4:	ldr	r2, [pc, #192]	; (36098 <test_num_disk_vs_raid@@Base+0x154>)
   35fd6:	ldr	r3, [sp, #16]
   35fd8:	add	r2, pc
   35fda:	strd	r6, r7, [sp]
   35fde:	str	r0, [sp, #8]
   35fe0:	movs	r1, #1
   35fe2:	mov	r0, r4
   35fe4:	blx	9040 <__fprintf_chk@plt+0x4>
   35fe8:	movs	r0, #1
   35fea:	add	sp, #36	; 0x24
   35fec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35ff0:	movs	r4, #0
   35ff2:	b.n	35f7c <test_num_disk_vs_raid@@Base+0x38>
   35ff4:	movs	r4, #0
   35ff6:	b.n	35f80 <test_num_disk_vs_raid@@Base+0x3c>
   35ff8:	movs	r4, #0
   35ffa:	b.n	35f84 <test_num_disk_vs_raid@@Base+0x40>
   35ffc:	and.w	r0, ip, r8
   36000:	mov	r1, sl
   36002:	orrs.w	r3, r0, r1
   36006:	beq.n	3602e <test_num_disk_vs_raid@@Base+0xea>
   36008:	ldr	r2, [pc, #136]	; (36094 <test_num_disk_vs_raid@@Base+0x150>)
   3600a:	mov	r0, r8
   3600c:	ldr	r3, [sp, #28]
   3600e:	ldr	r3, [r3, r2]
   36010:	ldr	r4, [r3, #0]
   36012:	bl	35e50 <btrfs_group_profile_str@@Base>
   36016:	mov	r1, sl
   36018:	str	r0, [sp, #16]
   3601a:	mov	r0, r8
   3601c:	bl	34680 <test_issubvolname@@Base+0x3a>
   36020:	ldr	r2, [pc, #120]	; (3609c <test_num_disk_vs_raid@@Base+0x158>)
   36022:	ldr	r3, [sp, #16]
   36024:	add	r2, pc
   36026:	strd	r6, r7, [sp]
   3602a:	str	r0, [sp, #8]
   3602c:	b.n	35fe0 <test_num_disk_vs_raid@@Base+0x9c>
   3602e:	cmp	r7, #0
   36030:	mov.w	r1, #0
   36034:	it	eq
   36036:	cmpeq	r6, #3
   36038:	bne.n	3606e <test_num_disk_vs_raid@@Base+0x12a>
   3603a:	and.w	r2, fp, #256	; 0x100
   3603e:	mov	r3, r1
   36040:	orrs	r3, r2
   36042:	beq.n	3604c <test_num_disk_vs_raid@@Base+0x108>
   36044:	ldr	r0, [pc, #88]	; (360a0 <test_num_disk_vs_raid@@Base+0x15c>)
   36046:	add	r0, pc
   36048:	bl	1bca0 <__btrfs_warning@@Base>
   3604c:	cbnz	r5, 36086 <test_num_disk_vs_raid@@Base+0x142>
   3604e:	and.w	r2, r8, #32
   36052:	mov	r3, r5
   36054:	orrs	r3, r2
   36056:	beq.n	36060 <test_num_disk_vs_raid@@Base+0x11c>
   36058:	ldr	r5, [sp, #84]	; 0x54
   3605a:	subs	r5, #0
   3605c:	it	ne
   3605e:	movne	r5, #1
   36060:	ldr	r1, [pc, #64]	; (360a4 <test_num_disk_vs_raid@@Base+0x160>)
   36062:	mov	r0, r5
   36064:	add	r1, pc
   36066:	bl	1bd98 <__btrfs_warning_on@@Base>
   3606a:	movs	r0, #0
   3606c:	b.n	35fea <test_num_disk_vs_raid@@Base+0xa6>
   3606e:	cmp	r7, #0
   36070:	it	eq
   36072:	cmpeq	r6, #2
   36074:	bne.n	3604c <test_num_disk_vs_raid@@Base+0x108>
   36076:	and.w	r2, fp, #128	; 0x80
   3607a:	mov	r3, r1
   3607c:	orrs	r3, r2
   3607e:	beq.n	3604c <test_num_disk_vs_raid@@Base+0x108>
   36080:	ldr	r0, [pc, #36]	; (360a8 <test_num_disk_vs_raid@@Base+0x164>)
   36082:	add	r0, pc
   36084:	b.n	36048 <test_num_disk_vs_raid@@Base+0x104>
   36086:	movs	r5, #0
   36088:	b.n	36060 <test_num_disk_vs_raid@@Base+0x11c>
   3608a:	nop
   3608c:	ldr	r5, [pc, #776]	; (36398 <count_digits@@Base+0x16>)
   3608e:	movs	r3, r0
   36090:	cmp	r7, #56	; 0x38
   36092:	movs	r2, r0
   36094:	lsls	r4, r3, #10
   36096:	movs	r0, r0
   36098:	cmp	r7, #57	; 0x39
   3609a:	movs	r2, r0
   3609c:	cmp	r7, #82	; 0x52
   3609e:	movs	r2, r0
   360a0:	cmp	r7, #145	; 0x91
   360a2:	movs	r2, r0
   360a4:	cmp	r7, #233	; 0xe9
   360a6:	movs	r2, r0
   360a8:	cmp	r7, #144	; 0x90
   360aa:	movs	r2, r0

000360ac <btrfs_tree_search2_ioctl_supported@@Base>:
   360ac:	ldr	r2, [pc, #144]	; (36140 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   360ae:	ldr	r3, [pc, #148]	; (36144 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   360b0:	add	r2, pc
   360b2:	ldr	r1, [pc, #136]	; (3613c <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   360b4:	push	{r4, r5, r7, lr}
   360b6:	sub	sp, #8
   360b8:	add	r7, sp, #0
   360ba:	ldr	r3, [r2, r3]
   360bc:	sub.w	sp, sp, #1024	; 0x400
   360c0:	movs	r2, #1
   360c2:	ldr	r3, [r3, #0]
   360c4:	str	r3, [r7, #4]
   360c6:	mov.w	r3, #0
   360ca:	movs	r3, #0
   360cc:	strd	r2, r3, [sp]
   360d0:	movs	r2, #2
   360d2:	movs	r3, #0
   360d4:	strd	r2, r3, [sp, #8]
   360d8:	strd	r2, r3, [sp, #16]
   360dc:	mov.w	r2, #4294967295	; 0xffffffff
   360e0:	movs	r3, #132	; 0x84
   360e2:	strd	r3, r3, [sp, #56]	; 0x38
   360e6:	mov.w	r3, #4294967295	; 0xffffffff
   360ea:	strd	r2, r3, [sp, #32]
   360ee:	strd	r2, r3, [sp, #48]	; 0x30
   360f2:	movs	r3, #1
   360f4:	mov.w	r2, #912	; 0x390
   360f8:	str	r3, [sp, #64]	; 0x40
   360fa:	movs	r3, #0
   360fc:	strd	r2, r3, [sp, #104]	; 0x68
   36100:	mov	r2, sp
   36102:	movs	r4, #0
   36104:	movs	r5, #0
   36106:	strd	r4, r5, [sp, #24]
   3610a:	strd	r4, r5, [sp, #40]	; 0x28
   3610e:	blx	8d48 <ioctl@plt>
   36112:	cmn.w	r0, #95	; 0x5f
   36116:	beq.n	36132 <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   36118:	cmp	r0, #0
   3611a:	it	eq
   3611c:	moveq	r0, #1
   3611e:	ldr	r2, [pc, #40]	; (36148 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   36120:	ldr	r3, [pc, #32]	; (36144 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   36122:	add	r2, pc
   36124:	ldr	r3, [r2, r3]
   36126:	ldr	r2, [r3, #0]
   36128:	ldr	r3, [r7, #4]
   3612a:	eors	r2, r3
   3612c:	beq.n	36136 <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   3612e:	blx	8c90 <__stack_chk_fail@plt>
   36132:	movs	r0, #0
   36134:	b.n	3611e <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   36136:	adds	r7, #8
   36138:	mov	sp, r7
   3613a:	pop	{r4, r5, r7, pc}
   3613c:	str	r4, [sp, #68]	; 0x44
   3613e:	stmia	r0!, {r4, r5, r6}
   36140:	ldr	r4, [pc, #416]	; (362e4 <get_unit_mode_from_arg@@Base+0x198>)
   36142:	movs	r3, r0
   36144:	lsls	r0, r1, #10
   36146:	movs	r0, r0
   36148:	ldr	r3, [pc, #984]	; (36524 <total_memory@@Base+0x30>)
   3614a:	movs	r3, r0

0003614c <get_unit_mode_from_arg@@Base>:
   3614c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36150:	mov	r8, r2
   36152:	ldr	r2, [pc, #448]	; (36314 <get_unit_mode_from_arg@@Base+0x1c8>)
   36154:	sub	sp, #20
   36156:	ldr	r3, [pc, #448]	; (36318 <get_unit_mode_from_arg@@Base+0x1cc>)
   36158:	mov	r7, r0
   3615a:	add	r2, pc
   3615c:	ldr.w	r9, [pc, #444]	; 3631c <get_unit_mode_from_arg@@Base+0x1d0>
   36160:	ldr.w	sl, [pc, #444]	; 36320 <get_unit_mode_from_arg@@Base+0x1d4>
   36164:	mov	r4, r1
   36166:	ldr.w	fp, [pc, #444]	; 36324 <get_unit_mode_from_arg@@Base+0x1d8>
   3616a:	add	r9, pc
   3616c:	ldr	r3, [r2, r3]
   3616e:	add	sl, pc
   36170:	add	fp, pc
   36172:	movs	r5, #0
   36174:	ldr	r3, [r3, #0]
   36176:	str	r3, [sp, #12]
   36178:	mov.w	r3, #0
   3617c:	mov.w	r3, #512	; 0x200
   36180:	str	r3, [sp, #8]
   36182:	ldr	r3, [r7, #0]
   36184:	cmp	r3, r5
   36186:	bgt.n	361ae <get_unit_mode_from_arg@@Base+0x62>
   36188:	movs	r3, #0
   3618a:	mov	r0, r3
   3618c:	ldr	r2, [r7, #0]
   3618e:	cmp	r2, r0
   36190:	bgt.w	362fa <get_unit_mode_from_arg@@Base+0x1ae>
   36194:	ldr	r2, [pc, #400]	; (36328 <get_unit_mode_from_arg@@Base+0x1dc>)
   36196:	str	r3, [r7, #0]
   36198:	ldr	r3, [pc, #380]	; (36318 <get_unit_mode_from_arg@@Base+0x1cc>)
   3619a:	add	r2, pc
   3619c:	ldr	r0, [sp, #8]
   3619e:	ldr	r3, [r2, r3]
   361a0:	ldr	r2, [r3, #0]
   361a2:	ldr	r3, [sp, #12]
   361a4:	eors	r2, r3
   361a6:	beq.w	3630e <get_unit_mode_from_arg@@Base+0x1c2>
   361aa:	blx	8c90 <__stack_chk_fail@plt>
   361ae:	ldr.w	r6, [r4, r5, lsl #2]
   361b2:	mov	r1, r9
   361b4:	mov	r0, r6
   361b6:	blx	8b04 <strcmp@plt>
   361ba:	cmp	r0, #0
   361bc:	beq.w	3630a <get_unit_mode_from_arg@@Base+0x1be>
   361c0:	mov	r1, sl
   361c2:	mov	r0, r6
   361c4:	blx	8b04 <strcmp@plt>
   361c8:	cbnz	r0, 361d0 <get_unit_mode_from_arg@@Base+0x84>
   361ca:	mov.w	r3, #256	; 0x100
   361ce:	b.n	361de <get_unit_mode_from_arg@@Base+0x92>
   361d0:	mov	r1, fp
   361d2:	mov	r0, r6
   361d4:	blx	8b04 <strcmp@plt>
   361d8:	cbnz	r0, 361e8 <get_unit_mode_from_arg@@Base+0x9c>
   361da:	mov.w	r3, #512	; 0x200
   361de:	str	r3, [sp, #8]
   361e0:	str.w	r0, [r4, r5, lsl #2]
   361e4:	adds	r5, #1
   361e6:	b.n	36182 <get_unit_mode_from_arg@@Base+0x36>
   361e8:	ldr	r1, [pc, #320]	; (3632c <get_unit_mode_from_arg@@Base+0x1e0>)
   361ea:	mov	r0, r6
   361ec:	add	r1, pc
   361ee:	blx	8b04 <strcmp@plt>
   361f2:	cbnz	r0, 36204 <get_unit_mode_from_arg@@Base+0xb8>
   361f4:	mov.w	r1, #512	; 0x200
   361f8:	str	r0, [sp, #4]
   361fa:	add	r0, sp, #8
   361fc:	bl	35cf4 <units_set_mode@@Base>
   36200:	ldr	r3, [sp, #4]
   36202:	b.n	36270 <get_unit_mode_from_arg@@Base+0x124>
   36204:	ldr	r1, [pc, #296]	; (36330 <get_unit_mode_from_arg@@Base+0x1e4>)
   36206:	mov	r0, r6
   36208:	add	r1, pc
   3620a:	blx	8b04 <strcmp@plt>
   3620e:	cbnz	r0, 36218 <get_unit_mode_from_arg@@Base+0xcc>
   36210:	mov.w	r1, #768	; 0x300
   36214:	str	r0, [sp, #4]
   36216:	b.n	361fa <get_unit_mode_from_arg@@Base+0xae>
   36218:	ldr	r1, [pc, #280]	; (36334 <get_unit_mode_from_arg@@Base+0x1e8>)
   3621a:	mov	r0, r6
   3621c:	add	r1, pc
   3621e:	blx	8b04 <strcmp@plt>
   36222:	mov	r3, r0
   36224:	cbnz	r0, 36232 <get_unit_mode_from_arg@@Base+0xe6>
   36226:	movs	r1, #2
   36228:	str	r3, [sp, #4]
   3622a:	add	r0, sp, #8
   3622c:	bl	35cfc <units_set_base@@Base>
   36230:	b.n	36200 <get_unit_mode_from_arg@@Base+0xb4>
   36232:	ldr	r1, [pc, #260]	; (36338 <get_unit_mode_from_arg@@Base+0x1ec>)
   36234:	mov	r0, r6
   36236:	add	r1, pc
   36238:	blx	8b04 <strcmp@plt>
   3623c:	mov	r3, r0
   3623e:	cbnz	r0, 36246 <get_unit_mode_from_arg@@Base+0xfa>
   36240:	movs	r1, #3
   36242:	str	r3, [sp, #4]
   36244:	b.n	3622a <get_unit_mode_from_arg@@Base+0xde>
   36246:	ldr	r1, [pc, #244]	; (3633c <get_unit_mode_from_arg@@Base+0x1f0>)
   36248:	mov	r0, r6
   3624a:	add	r1, pc
   3624c:	blx	8b04 <strcmp@plt>
   36250:	mov	r3, r0
   36252:	cbnz	r0, 3625a <get_unit_mode_from_arg@@Base+0x10e>
   36254:	movs	r1, #4
   36256:	str	r3, [sp, #4]
   36258:	b.n	3622a <get_unit_mode_from_arg@@Base+0xde>
   3625a:	ldr	r1, [pc, #228]	; (36340 <get_unit_mode_from_arg@@Base+0x1f4>)
   3625c:	mov	r0, r6
   3625e:	add	r1, pc
   36260:	blx	8b04 <strcmp@plt>
   36264:	cbnz	r0, 36276 <get_unit_mode_from_arg@@Base+0x12a>
   36266:	add	r0, sp, #8
   36268:	movs	r1, #5
   3626a:	bl	35cfc <units_set_base@@Base>
   3626e:	movs	r3, #0
   36270:	str.w	r3, [r4, r5, lsl #2]
   36274:	b.n	361e4 <get_unit_mode_from_arg@@Base+0x98>
   36276:	cmp.w	r8, #0
   3627a:	beq.n	361e4 <get_unit_mode_from_arg@@Base+0x98>
   3627c:	ldr	r1, [pc, #196]	; (36344 <get_unit_mode_from_arg@@Base+0x1f8>)
   3627e:	mov	r0, r6
   36280:	add	r1, pc
   36282:	blx	8b04 <strcmp@plt>
   36286:	cmp	r0, #0
   36288:	beq.n	361ca <get_unit_mode_from_arg@@Base+0x7e>
   3628a:	ldr	r1, [pc, #188]	; (36348 <get_unit_mode_from_arg@@Base+0x1fc>)
   3628c:	mov	r0, r6
   3628e:	add	r1, pc
   36290:	blx	8b04 <strcmp@plt>
   36294:	cmp	r0, #0
   36296:	beq.n	361da <get_unit_mode_from_arg@@Base+0x8e>
   36298:	ldr	r1, [pc, #176]	; (3634c <get_unit_mode_from_arg@@Base+0x200>)
   3629a:	mov	r0, r6
   3629c:	add	r1, pc
   3629e:	blx	8b04 <strcmp@plt>
   362a2:	cbnz	r0, 362aa <get_unit_mode_from_arg@@Base+0x15e>
   362a4:	mov.w	r3, #768	; 0x300
   362a8:	b.n	361de <get_unit_mode_from_arg@@Base+0x92>
   362aa:	ldr	r1, [pc, #164]	; (36350 <get_unit_mode_from_arg@@Base+0x204>)
   362ac:	mov	r0, r6
   362ae:	add	r1, pc
   362b0:	blx	8b04 <strcmp@plt>
   362b4:	mov	r3, r0
   362b6:	cmp	r0, #0
   362b8:	beq.n	36226 <get_unit_mode_from_arg@@Base+0xda>
   362ba:	ldr	r1, [pc, #152]	; (36354 <get_unit_mode_from_arg@@Base+0x208>)
   362bc:	mov	r0, r6
   362be:	add	r1, pc
   362c0:	blx	8b04 <strcmp@plt>
   362c4:	mov	r3, r0
   362c6:	cmp	r0, #0
   362c8:	beq.n	36240 <get_unit_mode_from_arg@@Base+0xf4>
   362ca:	ldr	r1, [pc, #140]	; (36358 <get_unit_mode_from_arg@@Base+0x20c>)
   362cc:	mov	r0, r6
   362ce:	add	r1, pc
   362d0:	blx	8b04 <strcmp@plt>
   362d4:	mov	r3, r0
   362d6:	cmp	r0, #0
   362d8:	beq.n	36254 <get_unit_mode_from_arg@@Base+0x108>
   362da:	ldr	r1, [pc, #128]	; (3635c <get_unit_mode_from_arg@@Base+0x210>)
   362dc:	mov	r0, r6
   362de:	add	r1, pc
   362e0:	blx	8b04 <strcmp@plt>
   362e4:	mov	r6, r0
   362e6:	cmp	r0, #0
   362e8:	bne.w	361e4 <get_unit_mode_from_arg@@Base+0x98>
   362ec:	add	r0, sp, #8
   362ee:	movs	r1, #5
   362f0:	bl	35cfc <units_set_base@@Base>
   362f4:	str.w	r6, [r4, r5, lsl #2]
   362f8:	b.n	361e4 <get_unit_mode_from_arg@@Base+0x98>
   362fa:	ldr.w	r2, [r4, r0, lsl #2]
   362fe:	cbz	r2, 36306 <get_unit_mode_from_arg@@Base+0x1ba>
   36300:	str.w	r2, [r4, r3, lsl #2]
   36304:	adds	r3, #1
   36306:	adds	r0, #1
   36308:	b.n	3618c <get_unit_mode_from_arg@@Base+0x40>
   3630a:	mov	r3, r0
   3630c:	b.n	3618c <get_unit_mode_from_arg@@Base+0x40>
   3630e:	add	sp, #20
   36310:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36314:	ldr	r3, [pc, #760]	; (36610 <print_all_devices@@Base+0x90>)
   36316:	movs	r3, r0
   36318:	lsls	r0, r1, #10
   3631a:	movs	r0, r0
   3631c:	str	r7, [sp, #116]	; 0x74
   3631e:	movs	r0, r0
   36320:	cmp	r7, #36	; 0x24
   36322:	movs	r2, r0
   36324:	cmp	r7, #40	; 0x28
   36326:	movs	r2, r0
   36328:	ldr	r3, [pc, #504]	; (36524 <total_memory@@Base+0x30>)
   3632a:	movs	r3, r0
   3632c:	cmp	r6, #189	; 0xbd
   3632e:	movs	r2, r0
   36330:	cmp	r6, #167	; 0xa7
   36332:	movs	r2, r0
   36334:	cmp	r6, #152	; 0x98
   36336:	movs	r2, r0
   36338:	cmp	r6, #135	; 0x87
   3633a:	movs	r2, r0
   3633c:	cmp	r6, #124	; 0x7c
   3633e:	movs	r2, r0
   36340:	cmp	r6, #113	; 0x71
   36342:	movs	r2, r0
   36344:	cmp	r6, #88	; 0x58
   36346:	movs	r2, r0
   36348:	cmp	r6, #77	; 0x4d
   3634a:	movs	r2, r0
   3634c:	cmp	r6, #66	; 0x42
   3634e:	movs	r2, r0
   36350:	cmp	r6, #51	; 0x33
   36352:	movs	r2, r0
   36354:	cmp	r6, #38	; 0x26
   36356:	movs	r2, r0
   36358:	cmp	r6, #25
   3635a:	movs	r2, r0
   3635c:	cmp	r6, #12
   3635e:	movs	r2, r0

00036360 <div_factor@@Base>:
   36360:	cmp	r2, #10
   36362:	push	{r3, r4, r5, lr}
   36364:	beq.n	36380 <div_factor@@Base+0x20>
   36366:	asrs	r5, r2, #31
   36368:	movs	r3, #0
   3636a:	muls	r1, r2
   3636c:	mla	r1, r0, r5, r1
   36370:	umull	r4, r5, r2, r0
   36374:	movs	r2, #10
   36376:	add	r5, r1
   36378:	mov	r1, r5
   3637a:	mov	r0, r4
   3637c:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   36380:	pop	{r3, r4, r5, pc}

00036382 <count_digits@@Base>:
   36382:	mov	r2, r0
   36384:	mov	r3, r1
   36386:	orrs.w	r1, r2, r3
   3638a:	push	{r4, r6, r7, lr}
   3638c:	beq.n	363b4 <count_digits@@Base+0x32>
   3638e:	movs	r4, #0
   36390:	mov	r6, r2
   36392:	mov	r7, r3
   36394:	movs	r2, #10
   36396:	movs	r3, #0
   36398:	mov	r0, r6
   3639a:	mov	r1, r7
   3639c:	bl	3dda4 <btrfs_util_strerror@@Base+0x7fc>
   363a0:	cmp	r7, #0
   363a2:	it	eq
   363a4:	cmpeq	r6, #10
   363a6:	add.w	r4, r4, #1
   363aa:	mov	r2, r0
   363ac:	mov	r3, r1
   363ae:	bcs.n	36390 <count_digits@@Base+0xe>
   363b0:	mov	r0, r4
   363b2:	pop	{r4, r6, r7, pc}
   363b4:	movs	r4, #1
   363b6:	b.n	363b0 <count_digits@@Base+0x2e>

000363b8 <string_is_numerical@@Base>:
   363b8:	cbz	r0, 363da <string_is_numerical@@Base+0x22>
   363ba:	ldrb	r3, [r0, #0]
   363bc:	subs	r3, #48	; 0x30
   363be:	cmp	r3, #9
   363c0:	bhi.n	363d8 <string_is_numerical@@Base+0x20>
   363c2:	subs	r3, r0, #1
   363c4:	ldrb.w	r0, [r3, #1]!
   363c8:	sub.w	r2, r0, #48	; 0x30
   363cc:	cmp	r2, #9
   363ce:	bls.n	363c4 <string_is_numerical@@Base+0xc>
   363d0:	clz	r0, r0
   363d4:	lsrs	r0, r0, #5
   363d6:	bx	lr
   363d8:	movs	r0, #0
   363da:	bx	lr

000363dc <prefixcmp@@Base>:
   363dc:	subs	r1, #1
   363de:	subs	r3, r0, #1
   363e0:	ldrb.w	r0, [r1, #1]!
   363e4:	cbz	r0, 363f0 <prefixcmp@@Base+0x14>
   363e6:	ldrb.w	r2, [r3, #1]!
   363ea:	cmp	r0, r2
   363ec:	beq.n	363e0 <prefixcmp@@Base+0x4>
   363ee:	subs	r0, r0, r2
   363f0:	bx	lr

000363f2 <subvol_strip_mountpoint@@Base>:
   363f2:	push	{r4, r5, r6, lr}
   363f4:	mov	r6, r0
   363f6:	mov	r5, r1
   363f8:	blx	8f1c <strlen@plt>
   363fc:	mov	r4, r0
   363fe:	cbz	r0, 36436 <subvol_strip_mountpoint@@Base+0x44>
   36400:	mov	r2, r0
   36402:	mov	r1, r5
   36404:	mov	r0, r6
   36406:	blx	91b4 <strncmp@plt>
   3640a:	cbnz	r0, 36418 <subvol_strip_mountpoint@@Base+0x26>
   3640c:	cmp	r4, #1
   3640e:	mov	r3, r4
   36410:	beq.n	36428 <subvol_strip_mountpoint@@Base+0x36>
   36412:	ldrb	r2, [r5, r4]
   36414:	cmp	r2, #47	; 0x2f
   36416:	beq.n	36428 <subvol_strip_mountpoint@@Base+0x36>
   36418:	ldr	r0, [pc, #32]	; (3643c <subvol_strip_mountpoint@@Base+0x4a>)
   3641a:	mov	r1, r6
   3641c:	add	r0, pc
   3641e:	bl	1bd1c <__btrfs_error@@Base>
   36422:	movs	r0, #1
   36424:	blx	8f10 <exit@plt>
   36428:	add	r6, r4
   3642a:	ldrb.w	r2, [r6, #-1]
   3642e:	cmp	r2, #47	; 0x2f
   36430:	it	ne
   36432:	addne	r3, r4, #1
   36434:	add	r5, r3
   36436:	mov	r0, r5
   36438:	pop	{r4, r5, r6, pc}
   3643a:	nop
   3643c:	cmp	r4, #209	; 0xd1
   3643e:	movs	r2, r0

00036440 <init_rand_seed@@Base>:
   36440:	ldr	r3, [pc, #24]	; (3645c <init_rand_seed@@Base+0x1c>)
   36442:	mvns	r2, r0
   36444:	lsrs	r0, r0, #16
   36446:	add	r3, pc
   36448:	orr.w	r0, r0, r1, lsl #16
   3644c:	mvns	r1, r1
   3644e:	mvns	r0, r0
   36450:	strh	r2, [r3, #0]
   36452:	strh	r0, [r3, #2]
   36454:	movs	r2, #1
   36456:	strh	r1, [r3, #4]
   36458:	str	r2, [r3, #8]
   3645a:	bx	lr
   3645c:	ldrsh	r6, [r5, r0]
   3645e:	movs	r3, r0

00036460 <rand_u32@@Base>:
   36460:	push	{r3, lr}
   36462:	ldr	r3, [pc, #24]	; (3647c <rand_u32@@Base+0x1c>)
   36464:	add	r3, pc
   36466:	ldr	r3, [r3, #8]
   36468:	cbnz	r3, 3646e <rand_u32@@Base+0xe>
   3646a:	bl	34718 <test_issubvolname@@Base+0xd2>
   3646e:	ldr	r0, [pc, #16]	; (36480 <rand_u32@@Base+0x20>)
   36470:	ldmia.w	sp!, {r3, lr}
   36474:	add	r0, pc
   36476:	b.w	8c34 <jrand48@plt>
   3647a:	nop
   3647c:	ldrsh	r0, [r2, r0]
   3647e:	movs	r3, r0
   36480:	ldrsh	r0, [r0, r0]
   36482:	movs	r3, r0

00036484 <rand_range@@Base>:
   36484:	ldr	r3, [pc, #32]	; (364a8 <rand_range@@Base+0x24>)
   36486:	push	{r4, lr}
   36488:	add	r3, pc
   3648a:	mov	r4, r0
   3648c:	ldr	r3, [r3, #8]
   3648e:	cbnz	r3, 36494 <rand_range@@Base+0x10>
   36490:	bl	34718 <test_issubvolname@@Base+0xd2>
   36494:	ldr	r0, [pc, #20]	; (364ac <rand_range@@Base+0x28>)
   36496:	add	r0, pc
   36498:	blx	8c38 <jrand48@plt+0x4>
   3649c:	mov	r1, r4
   3649e:	bl	3d81c <btrfs_util_strerror@@Base+0x274>
   364a2:	mov	r0, r1
   364a4:	pop	{r4, pc}
   364a6:	nop
   364a8:	ldrb	r4, [r5, r7]
   364aa:	movs	r3, r0
   364ac:	ldrb	r6, [r3, r7]
   364ae:	movs	r3, r0

000364b0 <rand_int@@Base>:
   364b0:	b.w	36460 <rand_u32@@Base>

000364b4 <rand_u64@@Base>:
   364b4:	push	{r3, r4, r5, lr}
   364b6:	bl	36460 <rand_u32@@Base>
   364ba:	movs	r4, #0
   364bc:	mov	r5, r0
   364be:	bl	36460 <rand_u32@@Base>
   364c2:	adds	r0, r4, r0
   364c4:	adc.w	r1, r5, #0
   364c8:	pop	{r3, r4, r5, pc}

000364ca <rand_u16@@Base>:
   364ca:	push	{r3, lr}
   364cc:	bl	36460 <rand_u32@@Base>
   364d0:	uxth	r0, r0
   364d2:	pop	{r3, pc}

000364d4 <rand_u8@@Base>:
   364d4:	push	{r3, lr}
   364d6:	bl	36460 <rand_u32@@Base>
   364da:	uxtb	r0, r0
   364dc:	pop	{r3, pc}

000364de <btrfs_config_init@@Base>:
   364de:	ldr	r3, [pc, #12]	; (364ec <btrfs_config_init@@Base+0xe>)
   364e0:	ldr	r2, [pc, #12]	; (364f0 <btrfs_config_init@@Base+0x12>)
   364e2:	add	r3, pc
   364e4:	ldr	r3, [r3, r2]
   364e6:	movs	r2, #4
   364e8:	str	r2, [r3, #0]
   364ea:	bx	lr
   364ec:	ldr	r0, [pc, #216]	; (365c8 <print_all_devices@@Base+0x48>)
   364ee:	movs	r3, r0
   364f0:	lsls	r4, r0, #10
	...

000364f4 <total_memory@@Base>:
   364f4:	ldr	r2, [pc, #72]	; (36540 <total_memory@@Base+0x4c>)
   364f6:	ldr	r3, [pc, #76]	; (36544 <total_memory@@Base+0x50>)
   364f8:	add	r2, pc
   364fa:	push	{lr}
   364fc:	sub	sp, #76	; 0x4c
   364fe:	ldr	r3, [r2, r3]
   36500:	add	r0, sp, #4
   36502:	ldr	r3, [r3, #0]
   36504:	str	r3, [sp, #68]	; 0x44
   36506:	mov.w	r3, #0
   3650a:	blx	8e30 <sysinfo@plt>
   3650e:	cmp	r0, #0
   36510:	bge.n	36532 <total_memory@@Base+0x3e>
   36512:	ldr	r0, [pc, #52]	; (36548 <total_memory@@Base+0x54>)
   36514:	add	r0, pc
   36516:	bl	1bd1c <__btrfs_error@@Base>
   3651a:	mov.w	r0, #4294967295	; 0xffffffff
   3651e:	ldr	r2, [pc, #44]	; (3654c <total_memory@@Base+0x58>)
   36520:	ldr	r3, [pc, #32]	; (36544 <total_memory@@Base+0x50>)
   36522:	add	r2, pc
   36524:	ldr	r3, [r2, r3]
   36526:	ldr	r2, [r3, #0]
   36528:	ldr	r3, [sp, #68]	; 0x44
   3652a:	eors	r2, r3
   3652c:	beq.n	3653a <total_memory@@Base+0x46>
   3652e:	blx	8c90 <__stack_chk_fail@plt>
   36532:	ldr	r3, [sp, #20]
   36534:	ldr	r0, [sp, #56]	; 0x38
   36536:	muls	r0, r3
   36538:	b.n	3651e <total_memory@@Base+0x2a>
   3653a:	add	sp, #76	; 0x4c
   3653c:	ldr.w	pc, [sp], #4
   36540:	ldr	r0, [pc, #128]	; (365c4 <print_all_devices@@Base+0x44>)
   36542:	movs	r3, r0
   36544:	lsls	r0, r1, #10
   36546:	movs	r0, r0
   36548:	cmp	r3, #240	; 0xf0
   3654a:	movs	r2, r0
   3654c:			; <UNDEFINED> instruction: 0x47f6
   3654e:	movs	r3, r0

00036550 <print_device_info@@Base>:
   36550:	push	{r0, r1, r4, lr}
   36552:	mov	r2, r1
   36554:	mov	r4, r0
   36556:	cbz	r1, 36562 <print_device_info@@Base+0x12>
   36558:	ldr	r1, [pc, #28]	; (36578 <print_device_info@@Base+0x28>)
   3655a:	movs	r0, #1
   3655c:	add	r1, pc
   3655e:	blx	900c <__printf_chk@plt+0x4>
   36562:	ldr	r3, [r4, #32]
   36564:	movs	r0, #1
   36566:	ldr	r1, [pc, #20]	; (3657c <print_device_info@@Base+0x2c>)
   36568:	str	r3, [sp, #0]
   3656a:	add	r1, pc
   3656c:	ldrd	r2, r3, [r4, #64]	; 0x40
   36570:	blx	900c <__printf_chk@plt+0x4>
   36574:	add	sp, #8
   36576:	pop	{r4, pc}
   36578:	ldrh	r1, [r5, #36]	; 0x24
   3657a:	movs	r0, r0
   3657c:	cmp	r3, #182	; 0xb6
   3657e:	movs	r2, r0

00036580 <print_all_devices@@Base>:
   36580:	push	{r4, r5, r6, lr}
   36582:	mov	r4, r0
   36584:	ldr	r0, [pc, #36]	; (365ac <print_all_devices@@Base+0x2c>)
   36586:	ldr	r6, [pc, #40]	; (365b0 <print_all_devices@@Base+0x30>)
   36588:	add	r0, pc
   3658a:	blx	8e24 <puts@plt+0x4>
   3658e:	ldr	r5, [r4, #0]
   36590:	add	r6, pc
   36592:	cmp	r5, r4
   36594:	bne.n	365a0 <print_all_devices@@Base+0x20>
   36596:	ldmia.w	sp!, {r4, r5, r6, lr}
   3659a:	movs	r0, #10
   3659c:	b.w	8fa4 <putchar@plt>
   365a0:	mov	r0, r5
   365a2:	mov	r1, r6
   365a4:	bl	36550 <print_device_info@@Base>
   365a8:	ldr	r5, [r5, #0]
   365aa:	b.n	36592 <print_all_devices@@Base+0x12>
   365ac:	cmp	r3, #182	; 0xb6
   365ae:	movs	r2, r0
   365b0:	str	r6, [sp, #872]	; 0x368
   365b2:	movs	r0, r0
   365b4:	ldr	r2, [pc, #284]	; (366d4 <print_all_devices@@Base+0x154>)
   365b6:	ldr	r3, [pc, #288]	; (366d8 <print_all_devices@@Base+0x158>)
   365b8:	push	{r4, r5, r6, r7, lr}
   365ba:	add	r2, pc
   365bc:	sub.w	sp, sp, #516	; 0x204
   365c0:	mov	r4, r1
   365c2:	ldr	r3, [r2, r3]
   365c4:	mov	r5, sp
   365c6:	ldr	r1, [pc, #264]	; (366d0 <print_all_devices@@Base+0x150>)
   365c8:	mov	r2, r5
   365ca:	ldr	r3, [r3, #0]
   365cc:	str	r3, [sp, #508]	; 0x1fc
   365ce:	mov.w	r3, #0
   365d2:	blx	8d48 <ioctl@plt>
   365d6:	adds	r0, #1
   365d8:	beq.n	366c4 <print_all_devices@@Base+0x144>
   365da:	ldrd	r2, r3, [sp]
   365de:	add	r7, sp, #296	; 0x128
   365e0:	add.w	r6, r4, #32
   365e4:	strd	r2, r3, [r4]
   365e8:	ldrd	r2, r3, [r5, #264]	; 0x108
   365ec:	strd	r2, r3, [r4, #8]
   365f0:	ldrd	r2, r3, [r5, #272]	; 0x110
   365f4:	strd	r2, r3, [r4, #16]
   365f8:	ldrd	r2, r3, [r5, #288]	; 0x120
   365fc:	strd	r2, r3, [r4, #24]
   36600:	ldrd	r2, r3, [r5, #280]	; 0x118
   36604:	strd	r2, r3, [r4, #80]	; 0x50
   36608:	add	r2, sp, #312	; 0x138
   3660a:	mov	r3, r7
   3660c:	adds	r6, #8
   3660e:	ldmia	r3!, {r0, r1}
   36610:	cmp	r3, r2
   36612:	str.w	r0, [r6, #-8]
   36616:	mov	r7, r3
   36618:	str.w	r1, [r6, #-4]
   3661c:	bne.n	3660a <print_all_devices@@Base+0x8a>
   3661e:	add.w	r7, r4, #48	; 0x30
   36622:	add	r3, sp, #328	; 0x148
   36624:	mov	r6, r2
   36626:	adds	r7, #8
   36628:	ldmia	r6!, {r0, r1}
   3662a:	cmp	r6, r3
   3662c:	str.w	r0, [r7, #-8]
   36630:	mov	r2, r6
   36632:	str.w	r1, [r7, #-4]
   36636:	bne.n	36624 <print_all_devices@@Base+0xa4>
   36638:	add.w	r6, r4, #64	; 0x40
   3663c:	add	r7, sp, #344	; 0x158
   3663e:	mov	r2, r3
   36640:	adds	r6, #8
   36642:	ldmia	r2!, {r0, r1}
   36644:	cmp	r2, r7
   36646:	str.w	r0, [r6, #-8]
   3664a:	mov	r3, r2
   3664c:	str.w	r1, [r6, #-4]
   36650:	bne.n	3663e <print_all_devices@@Base+0xbe>
   36652:	ldrd	r2, r3, [r5, #344]	; 0x158
   36656:	movs	r0, #0
   36658:	strd	r2, r3, [r4, #88]	; 0x58
   3665c:	ldrd	r2, r3, [r5, #352]	; 0x160
   36660:	strd	r2, r3, [r4, #96]	; 0x60
   36664:	ldrd	r2, r3, [r5, #360]	; 0x168
   36668:	strd	r2, r3, [r4, #104]	; 0x68
   3666c:	ldrd	r2, r3, [r5, #368]	; 0x170
   36670:	strd	r2, r3, [r4, #112]	; 0x70
   36674:	ldr.w	r3, [r5, #376]	; 0x178
   36678:	str	r3, [r4, #120]	; 0x78
   3667a:	ldr.w	r3, [r5, #384]	; 0x180
   3667e:	str	r3, [r4, #124]	; 0x7c
   36680:	ldr.w	r3, [r5, #392]	; 0x188
   36684:	str.w	r3, [r4, #128]	; 0x80
   36688:	ldr.w	r3, [r5, #400]	; 0x190
   3668c:	str.w	r3, [r4, #132]	; 0x84
   36690:	ldr.w	r3, [r5, #408]	; 0x198
   36694:	str.w	r3, [r4, #136]	; 0x88
   36698:	ldr.w	r3, [r5, #416]	; 0x1a0
   3669c:	str.w	r3, [r4, #140]	; 0x8c
   366a0:	ldr.w	r3, [r5, #424]	; 0x1a8
   366a4:	str.w	r3, [r4, #144]	; 0x90
   366a8:	ldr.w	r3, [r5, #432]	; 0x1b0
   366ac:	str.w	r3, [r4, #148]	; 0x94
   366b0:	ldr	r2, [pc, #40]	; (366dc <print_all_devices@@Base+0x15c>)
   366b2:	ldr	r3, [pc, #36]	; (366d8 <print_all_devices@@Base+0x158>)
   366b4:	add	r2, pc
   366b6:	ldr	r3, [r2, r3]
   366b8:	ldr	r2, [r3, #0]
   366ba:	ldr	r3, [sp, #508]	; 0x1fc
   366bc:	eors	r2, r3
   366be:	beq.n	366c8 <print_all_devices@@Base+0x148>
   366c0:	blx	8c90 <__stack_chk_fail@plt>
   366c4:	movs	r0, #23
   366c6:	b.n	366b0 <print_all_devices@@Base+0x130>
   366c8:	add.w	sp, sp, #516	; 0x204
   366cc:	pop	{r4, r5, r6, r7, pc}
   366ce:	nop
   366d0:	str	r4, [sp, #240]	; 0xf0
   366d2:	strh	r0, [r7, #14]
   366d4:	bx	fp
   366d6:	movs	r3, r0
   366d8:	lsls	r0, r1, #10
   366da:	movs	r0, r0
   366dc:	mov	r4, ip
   366de:	movs	r3, r0
   366e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   366e4:	mov	r7, r0
   366e6:	mov	r0, r1
   366e8:	mov	r9, r1
   366ea:	mov	r6, r2
   366ec:	mov	r8, r3
   366ee:	blx	8f1c <strlen@plt>
   366f2:	mov	r5, r0
   366f4:	cmp	r5, #1
   366f6:	bls.n	36702 <print_all_devices@@Base+0x182>
   366f8:	subs	r3, r5, #1
   366fa:	ldrb.w	r2, [r9, r3]
   366fe:	cmp	r2, #47	; 0x2f
   36700:	beq.n	36756 <print_all_devices@@Base+0x1d6>
   36702:	adds	r0, r5, #1
   36704:	blx	8e40 <malloc@plt+0x4>
   36708:	mov	r4, r0
   3670a:	cmp	r0, #0
   3670c:	beq.n	367a4 <print_all_devices@@Base+0x224>
   3670e:	mov	r2, r5
   36710:	mov	r1, r9
   36712:	blx	8bdc <memcpy@plt+0x4>
   36716:	mov.w	r9, #0
   3671a:	mov	r2, r5
   3671c:	strb.w	r9, [r4, r5]
   36720:	movs	r1, #47	; 0x2f
   36722:	mov	r0, r4
   36724:	blx	8f40 <memrchr@plt>
   36728:	cmp	r4, r0
   3672a:	mov	r5, r0
   3672c:	bne.n	3675a <print_all_devices@@Base+0x1da>
   3672e:	ldr.w	sl, [pc, #120]	; 367a8 <print_all_devices@@Base+0x228>
   36732:	adds	r5, r4, #1
   36734:	add	sl, pc
   36736:	mov	r0, r5
   36738:	blx	8f1c <strlen@plt>
   3673c:	cmp	r0, r8
   3673e:	mov	r9, r0
   36740:	bcc.n	3676e <print_all_devices@@Base+0x1ee>
   36742:	mov	r0, r4
   36744:	blx	8b84 <free@plt+0x4>
   36748:	blx	8f58 <__errno_location@plt>
   3674c:	movs	r3, #36	; 0x24
   3674e:	str	r3, [r0, #0]
   36750:	movs	r0, #3
   36752:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   36756:	mov	r5, r3
   36758:	b.n	366f4 <print_all_devices@@Base+0x174>
   3675a:	cbz	r0, 36764 <print_all_devices@@Base+0x1e4>
   3675c:	mov	sl, r4
   3675e:	strb.w	r9, [r5], #1
   36762:	b.n	36736 <print_all_devices@@Base+0x1b6>
   36764:	ldr.w	sl, [pc, #68]	; 367ac <print_all_devices@@Base+0x22c>
   36768:	mov	r5, r4
   3676a:	add	sl, pc
   3676c:	b.n	36736 <print_all_devices@@Base+0x1b6>
   3676e:	mov	r2, r0
   36770:	mov	r1, r5
   36772:	mov	r0, r6
   36774:	movs	r5, #0
   36776:	blx	8bdc <memcpy@plt+0x4>
   3677a:	mov.w	r2, #16384	; 0x4000
   3677e:	mov	r1, sl
   36780:	mov	r0, r7
   36782:	strb.w	r5, [r6, r9]
   36786:	blx	8c84 <openat@plt>
   3678a:	ldr	r3, [sp, #32]
   3678c:	str	r0, [r3, #0]
   3678e:	adds	r0, #1
   36790:	mov	r0, r4
   36792:	bne.n	3679c <print_all_devices@@Base+0x21c>
   36794:	blx	8b84 <free@plt+0x4>
   36798:	movs	r0, #7
   3679a:	b.n	36752 <print_all_devices@@Base+0x1d2>
   3679c:	blx	8b84 <free@plt+0x4>
   367a0:	mov	r0, r5
   367a2:	b.n	36752 <print_all_devices@@Base+0x1d2>
   367a4:	movs	r0, #2
   367a6:	b.n	36752 <print_all_devices@@Base+0x1d2>
   367a8:	add	r7, pc, #716	; (adr r7, 36a78 <print_all_devices@@Base+0x4f8>)
   367aa:	movs	r0, r0
   367ac:	ldrh	r7, [r0, #32]
   367ae:	movs	r0, r0
   367b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   367b4:	sub.w	sp, sp, #4096	; 0x1000
   367b8:	sub	sp, #20
   367ba:	ldr	r1, [pc, #528]	; (369cc <print_all_devices@@Base+0x44c>)
   367bc:	mov	r6, r2
   367be:	mov	r7, r3
   367c0:	ldr	r2, [pc, #524]	; (369d0 <print_all_devices@@Base+0x450>)
   367c2:	add.w	r3, sp, #4128	; 0x1020
   367c6:	add	r1, pc
   367c8:	add.w	r8, sp, #16
   367cc:	sub.w	r5, r8, #8
   367d0:	ldr	r4, [r3, #24]
   367d2:	ldr	r2, [r1, r2]
   367d4:	adds	r3, #24
   367d6:	add.w	r3, sp, #4096	; 0x1000
   367da:	mov	r9, r0
   367dc:	ldr	r2, [r2, #0]
   367de:	str	r2, [r3, #12]
   367e0:	mov.w	r2, #0
   367e4:	mov	r0, r5
   367e6:	mov.w	r2, #4096	; 0x1000
   367ea:	movs	r1, #0
   367ec:	adds	r3, #12
   367ee:	blx	8f98 <memset@plt+0x4>
   367f2:	movs	r2, #1
   367f4:	movs	r3, #0
   367f6:	strd	r6, r7, [r5, #16]
   367fa:	strd	r2, r3, [r8, #-8]
   367fe:	mov.w	r2, #4294967295	; 0xffffffff
   36802:	mov.w	r3, #4294967295	; 0xffffffff
   36806:	strd	r6, r7, [r5, #8]
   3680a:	strd	r2, r3, [r5, #32]
   3680e:	strd	r2, r3, [r5, #48]	; 0x30
   36812:	movs	r2, #132	; 0x84
   36814:	movs	r3, #144	; 0x90
   36816:	strd	r2, r3, [r5, #56]	; 0x38
   3681a:	cbnz	r4, 3686e <print_all_devices@@Base+0x2ee>
   3681c:	movs	r6, #0
   3681e:	movs	r3, #132	; 0x84
   36820:	str	r3, [r5, #60]	; 0x3c
   36822:	ldr.w	fp, [pc, #432]	; 369d4 <print_all_devices@@Base+0x454>
   36826:	movs	r2, #0
   36828:	movs	r7, #1
   3682a:	mov	ip, r2
   3682c:	mov.w	sl, #4096	; 0x1000
   36830:	ldr	r3, [r5, #64]	; 0x40
   36832:	cmp	r3, ip
   36834:	bhi.n	3689e <print_all_devices@@Base+0x31e>
   36836:	mov	r2, r5
   36838:	mov	r1, fp
   3683a:	mov	r0, r9
   3683c:	str.w	sl, [r5, #64]	; 0x40
   36840:	blx	8d48 <ioctl@plt>
   36844:	adds	r0, #1
   36846:	beq.w	369bc <print_all_devices@@Base+0x43c>
   3684a:	ldr	r3, [r5, #64]	; 0x40
   3684c:	cbnz	r3, 3689a <print_all_devices@@Base+0x31a>
   3684e:	cbnz	r7, 3688e <print_all_devices@@Base+0x30e>
   36850:	movs	r0, #0
   36852:	ldr	r1, [pc, #388]	; (369d8 <print_all_devices@@Base+0x458>)
   36854:	add.w	r3, sp, #4096	; 0x1000
   36858:	ldr	r2, [pc, #372]	; (369d0 <print_all_devices@@Base+0x450>)
   3685a:	adds	r3, #12
   3685c:	add	r1, pc
   3685e:	ldr	r2, [r1, r2]
   36860:	ldr	r1, [r2, #0]
   36862:	ldr	r2, [r3, #0]
   36864:	eors	r1, r2
   36866:	beq.w	369c0 <print_all_devices@@Base+0x440>
   3686a:	blx	8c90 <__stack_chk_fail@plt>
   3686e:	cmp	r7, #0
   36870:	mov.w	r2, #0
   36874:	it	eq
   36876:	cmpeq	r6, #5
   36878:	mov.w	r3, #0
   3687c:	strd	r6, r7, [r4]
   36880:	strd	r2, r3, [r4, #8]
   36884:	strd	r2, r3, [r4, #16]
   36888:	beq.n	3681c <print_all_devices@@Base+0x29c>
   3688a:	movs	r6, #1
   3688c:	b.n	36822 <print_all_devices@@Base+0x2a2>
   3688e:	blx	8f58 <__errno_location@plt>
   36892:	movs	r3, #2
   36894:	str	r3, [r0, #0]
   36896:	movs	r0, #6
   36898:	b.n	36852 <print_all_devices@@Base+0x2d2>
   3689a:	movs	r2, #0
   3689c:	mov	ip, r2
   3689e:	add	r3, sp, #112	; 0x70
   368a0:	add	r3, r2
   368a2:	ldr	r1, [r3, #24]
   368a4:	cmp	r1, #132	; 0x84
   368a6:	bne.n	3698e <print_all_devices@@Base+0x40e>
   368a8:	cmp	r4, #0
   368aa:	beq.n	36970 <print_all_devices@@Base+0x3f0>
   368ac:	ldr.w	r0, [r3, #240]	; 0xf0
   368b0:	addw	r7, r3, #295	; 0x127
   368b4:	ldr.w	r1, [r3, #244]	; 0xf4
   368b8:	strd	r0, r1, [r4, #24]
   368bc:	addw	r1, r3, #279	; 0x117
   368c0:	add.w	r0, r4, #32
   368c4:	ldr.w	lr, [r1], #4
   368c8:	cmp	r1, r7
   368ca:	str.w	lr, [r0], #4
   368ce:	bne.n	368c4 <print_all_devices@@Base+0x344>
   368d0:	add.w	r0, r4, #48	; 0x30
   368d4:	addw	r7, r3, #311	; 0x137
   368d8:	ldr.w	lr, [r1], #4
   368dc:	cmp	r1, r7
   368de:	str.w	lr, [r0], #4
   368e2:	bne.n	368d8 <print_all_devices@@Base+0x358>
   368e4:	add.w	r0, r4, #64	; 0x40
   368e8:	addw	r7, r3, #327	; 0x147
   368ec:	ldr.w	lr, [r1], #4
   368f0:	cmp	r1, r7
   368f2:	str.w	lr, [r0], #4
   368f6:	bne.n	368ec <print_all_devices@@Base+0x36c>
   368f8:	ldr.w	r0, [r3, #192]	; 0xc0
   368fc:	ldr.w	r1, [r3, #196]	; 0xc4
   36900:	strd	r0, r1, [r4, #80]	; 0x50
   36904:	ldr.w	r0, [r3, #327]	; 0x147
   36908:	ldr.w	r1, [r3, #331]	; 0x14b
   3690c:	strd	r0, r1, [r4, #88]	; 0x58
   36910:	ldr.w	r0, [r3, #335]	; 0x14f
   36914:	ldr.w	r1, [r3, #339]	; 0x153
   36918:	strd	r0, r1, [r4, #96]	; 0x60
   3691c:	ldr.w	r0, [r3, #343]	; 0x157
   36920:	ldr.w	r1, [r3, #347]	; 0x15b
   36924:	strd	r0, r1, [r4, #104]	; 0x68
   36928:	ldr.w	r1, [r3, #355]	; 0x163
   3692c:	ldr.w	r0, [r3, #351]	; 0x15f
   36930:	strd	r0, r1, [r4, #112]	; 0x70
   36934:	ldr.w	r1, [r3, #359]	; 0x167
   36938:	str	r1, [r4, #120]	; 0x78
   3693a:	ldr.w	r1, [r3, #367]	; 0x16f
   3693e:	str	r1, [r4, #124]	; 0x7c
   36940:	ldr.w	r1, [r3, #371]	; 0x173
   36944:	str.w	r1, [r4, #128]	; 0x80
   36948:	ldr.w	r1, [r3, #379]	; 0x17b
   3694c:	str.w	r1, [r4, #132]	; 0x84
   36950:	ldr.w	r1, [r3, #383]	; 0x17f
   36954:	str.w	r1, [r4, #136]	; 0x88
   36958:	ldr.w	r1, [r3, #391]	; 0x187
   3695c:	str.w	r1, [r4, #140]	; 0x8c
   36960:	ldr.w	r1, [r3, #395]	; 0x18b
   36964:	str.w	r1, [r4, #144]	; 0x90
   36968:	ldr.w	r1, [r3, #403]	; 0x193
   3696c:	str.w	r1, [r4, #148]	; 0x94
   36970:	movs	r7, #0
   36972:	movs	r1, #144	; 0x90
   36974:	str	r1, [r5, #56]	; 0x38
   36976:	ldr	r3, [r3, #28]
   36978:	adds	r2, #32
   3697a:	add.w	ip, ip, #1
   3697e:	add	r2, r3
   36980:	cmp	r7, #0
   36982:	bne.w	36830 <print_all_devices@@Base+0x2b0>
   36986:	cmp	r6, #0
   36988:	bne.w	36830 <print_all_devices@@Base+0x2b0>
   3698c:	b.n	36850 <print_all_devices@@Base+0x2d0>
   3698e:	cmp	r1, #144	; 0x90
   36990:	bne.n	36976 <print_all_devices@@Base+0x3f6>
   36992:	cbz	r4, 369b2 <print_all_devices@@Base+0x432>
   36994:	mov	r1, r3
   36996:	sub.w	r6, r8, #16
   3699a:	ldr.w	r0, [r1, #16]!
   3699e:	ldr	r1, [r1, #4]
   369a0:	stmia	r6!, {r0, r1}
   369a2:	ldrd	r0, r1, [r8, #-16]
   369a6:	strd	r0, r1, [r4, #8]
   369aa:	ldr	r0, [r3, #32]
   369ac:	ldr	r1, [r3, #36]	; 0x24
   369ae:	strd	r0, r1, [r4, #16]
   369b2:	mov.w	r1, #4294967295	; 0xffffffff
   369b6:	movs	r6, #0
   369b8:	str	r1, [r5, #56]	; 0x38
   369ba:	b.n	36976 <print_all_devices@@Base+0x3f6>
   369bc:	movs	r0, #12
   369be:	b.n	36852 <print_all_devices@@Base+0x2d2>
   369c0:	add.w	sp, sp, #4096	; 0x1000
   369c4:	add	sp, #20
   369c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   369ca:	nop
   369cc:	cmp	r2, sl
   369ce:	movs	r3, r0
   369d0:	lsls	r0, r1, #10
   369d2:	movs	r0, r0
   369d4:	str	r4, [sp, #68]	; 0x44
   369d6:	beq.n	369da <print_all_devices@@Base+0x45a>
   369d8:	add	ip, r7
   369da:	movs	r3, r0
   369dc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   369e0:	mov	r9, r3
   369e2:	ldr	r3, [r0, #20]
   369e4:	mov	r5, r2
   369e6:	movw	r2, #4112	; 0x1010
   369ea:	ldr	r6, [sp, #40]	; 0x28
   369ec:	mov	r4, r0
   369ee:	mov	r8, r1
   369f0:	muls	r2, r3
   369f2:	ldr	r3, [r0, #16]
   369f4:	sub.w	r2, r2, #4096	; 0x1000
   369f8:	subs	r2, #16
   369fa:	add.w	sl, r3, r2
   369fe:	movw	r3, #4108	; 0x100c
   36a02:	ldr.w	r3, [sl, r3]
   36a06:	cbz	r3, 36a7c <print_all_devices@@Base+0x4fc>
   36a08:	cbz	r6, 36a7c <print_all_devices@@Base+0x4fc>
   36a0a:	adds	r2, r3, #1
   36a0c:	adds	r7, r2, r6
   36a0e:	cbz	r3, 36a16 <print_all_devices@@Base+0x496>
   36a10:	cbnz	r6, 36a16 <print_all_devices@@Base+0x496>
   36a12:	cbz	r5, 36a16 <print_all_devices@@Base+0x496>
   36a14:	adds	r7, r2, #1
   36a16:	ldr	r3, [r4, #32]
   36a18:	add	r7, r5
   36a1a:	add.w	fp, r7, #1
   36a1e:	cmp	fp, r3
   36a20:	bls.n	36a30 <print_all_devices@@Base+0x4b0>
   36a22:	ldr	r0, [r4, #28]
   36a24:	mov	r1, fp
   36a26:	blx	8cb8 <realloc@plt+0x4>
   36a2a:	cbz	r0, 36a80 <print_all_devices@@Base+0x500>
   36a2c:	strd	r0, fp, [r4, #28]
   36a30:	movw	r3, #4108	; 0x100c
   36a34:	ldr	r1, [r4, #28]
   36a36:	ldr.w	r2, [sl, r3]
   36a3a:	adds	r3, r1, r2
   36a3c:	cbz	r2, 36a46 <print_all_devices@@Base+0x4c6>
   36a3e:	cbz	r6, 36a46 <print_all_devices@@Base+0x4c6>
   36a40:	adds	r3, #1
   36a42:	movs	r0, #47	; 0x2f
   36a44:	strb	r0, [r1, r2]
   36a46:	mov	r2, r6
   36a48:	mov	r1, r9
   36a4a:	mov	r0, r3
   36a4c:	blx	8bdc <memcpy@plt+0x4>
   36a50:	movw	r2, #4108	; 0x100c
   36a54:	ldr.w	r2, [sl, r2]
   36a58:	adds	r4, r0, r6
   36a5a:	cbz	r2, 36a66 <print_all_devices@@Base+0x4e6>
   36a5c:	cbnz	r6, 36a66 <print_all_devices@@Base+0x4e6>
   36a5e:	cbz	r5, 36a66 <print_all_devices@@Base+0x4e6>
   36a60:	movs	r2, #47	; 0x2f
   36a62:	strb	r2, [r4, #0]
   36a64:	adds	r4, r0, #1
   36a66:	mov	r2, r5
   36a68:	mov	r1, r8
   36a6a:	mov	r0, r4
   36a6c:	blx	8bdc <memcpy@plt+0x4>
   36a70:	ldr	r3, [sp, #44]	; 0x2c
   36a72:	movs	r0, #0
   36a74:	strb	r0, [r4, r5]
   36a76:	str	r7, [r3, #0]
   36a78:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a7c:	mov	r2, r3
   36a7e:	b.n	36a0c <print_all_devices@@Base+0x48c>
   36a80:	movs	r0, #2
   36a82:	b.n	36a78 <print_all_devices@@Base+0x4f8>
   36a84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   36a88:	mov	r4, r1
   36a8a:	ldr	r1, [pc, #172]	; (36b38 <print_all_devices@@Base+0x5b8>)
   36a8c:	sub.w	sp, sp, #4128	; 0x1020
   36a90:	mov	r5, r2
   36a92:	ldr	r2, [pc, #168]	; (36b3c <print_all_devices@@Base+0x5bc>)
   36a94:	add	r1, pc
   36a96:	mov	r9, r3
   36a98:	add.w	r3, sp, #4160	; 0x1040
   36a9c:	add	r7, sp, #24
   36a9e:	ldr	r2, [r1, r2]
   36aa0:	mov	r6, r0
   36aa2:	ldr.w	sl, [r3]
   36aa6:	add.w	r3, sp, #4096	; 0x1000
   36aaa:	ldr	r2, [r2, #0]
   36aac:	str	r2, [r3, #28]
   36aae:	mov.w	r2, #0
   36ab2:	mov	r0, r7
   36ab4:	mov.w	r2, #4096	; 0x1000
   36ab8:	movs	r1, #0
   36aba:	adds	r3, #28
   36abc:	blx	8f98 <memset@plt+0x4>
   36ac0:	mov	r1, r4
   36ac2:	add.w	r8, sp, #32
   36ac6:	ldr.w	r0, [r1, #8]!
   36aca:	sub.w	r3, r8, #16
   36ace:	ldr	r1, [r1, #4]
   36ad0:	stmia	r3!, {r0, r1}
   36ad2:	ldrd	r2, r3, [r8, #-16]
   36ad6:	ldr	r1, [pc, #92]	; (36b34 <print_all_devices@@Base+0x5b4>)
   36ad8:	ldr	r0, [r6, #4]
   36ada:	strd	r2, r3, [r8, #-8]
   36ade:	ldr	r2, [r5, #0]
   36ae0:	ldr	r3, [r5, #4]
   36ae2:	str	r2, [r7, #8]
   36ae4:	mov	r2, r7
   36ae6:	str.w	r3, [r8, #4]
   36aea:	blx	8d48 <ioctl@plt>
   36aee:	adds	r0, #1
   36af0:	beq.n	36b26 <print_all_devices@@Base+0x5a6>
   36af2:	add	r3, sp, #40	; 0x28
   36af4:	str	r3, [sp, #12]
   36af6:	mov	r0, r3
   36af8:	blx	8f1c <strlen@plt>
   36afc:	ldr	r3, [sp, #12]
   36afe:	ldrh	r2, [r5, #16]
   36b00:	mov	r1, r9
   36b02:	strd	r0, sl, [sp]
   36b06:	mov	r0, r6
   36b08:	bl	369dc <print_all_devices@@Base+0x45c>
   36b0c:	ldr	r1, [pc, #48]	; (36b40 <print_all_devices@@Base+0x5c0>)
   36b0e:	add.w	r3, sp, #4096	; 0x1000
   36b12:	ldr	r2, [pc, #40]	; (36b3c <print_all_devices@@Base+0x5bc>)
   36b14:	adds	r3, #28
   36b16:	add	r1, pc
   36b18:	ldr	r2, [r1, r2]
   36b1a:	ldr	r1, [r2, #0]
   36b1c:	ldr	r2, [r3, #0]
   36b1e:	eors	r1, r2
   36b20:	beq.n	36b2a <print_all_devices@@Base+0x5aa>
   36b22:	blx	8c90 <__stack_chk_fail@plt>
   36b26:	movs	r0, #13
   36b28:	b.n	36b0c <print_all_devices@@Base+0x58c>
   36b2a:	add.w	sp, sp, #4128	; 0x1020
   36b2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   36b32:	nop
   36b34:	str	r4, [sp, #72]	; 0x48
   36b36:	beq.n	36b3a <print_all_devices@@Base+0x5ba>
   36b38:	cmp	r4, r0
   36b3a:	movs	r3, r0
   36b3c:	lsls	r0, r1, #10
   36b3e:	movs	r0, r0
   36b40:	tst	r2, r0
   36b42:	movs	r3, r0
   36b44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   36b48:	sub.w	sp, sp, #4128	; 0x1020
   36b4c:	sub	sp, #4
   36b4e:	ldr	r1, [pc, #168]	; (36bf8 <print_all_devices@@Base+0x678>)
   36b50:	mov	r7, r2
   36b52:	mov	r6, r3
   36b54:	ldr	r2, [pc, #164]	; (36bfc <print_all_devices@@Base+0x67c>)
   36b56:	add.w	r3, sp, #4160	; 0x1040
   36b5a:	add	r1, pc
   36b5c:	add	r5, sp, #24
   36b5e:	ldr.w	r8, [r3, #8]
   36b62:	adds	r3, #8
   36b64:	ldr	r2, [r1, r2]
   36b66:	add.w	r3, sp, #4096	; 0x1000
   36b6a:	mov	r4, r0
   36b6c:	mov	r0, r5
   36b6e:	ldr	r2, [r2, #0]
   36b70:	str	r2, [r3, #28]
   36b72:	mov.w	r2, #0
   36b76:	movs	r1, #0
   36b78:	mov.w	r2, #4096	; 0x1000
   36b7c:	adds	r3, #28
   36b7e:	blx	8f98 <memset@plt+0x4>
   36b82:	add.w	r3, sp, #4160	; 0x1040
   36b86:	ldr	r1, [pc, #108]	; (36bf4 <print_all_devices@@Base+0x674>)
   36b88:	add.w	r9, sp, #32
   36b8c:	ldrd	r2, r3, [r3]
   36b90:	ldr	r0, [r4, #8]
   36b92:	str	r7, [r5, #8]
   36b94:	strd	r2, r3, [r9, #-8]
   36b98:	mov	r2, r5
   36b9a:	str.w	r6, [r9, #4]
   36b9e:	blx	8d48 <ioctl@plt>
   36ba2:	adds	r0, #1
   36ba4:	beq.n	36be6 <print_all_devices@@Base+0x666>
   36ba6:	add	r1, sp, #40	; 0x28
   36ba8:	str	r1, [sp, #20]
   36baa:	mov	r0, r1
   36bac:	blx	8f1c <strlen@plt>
   36bb0:	add	r3, sp, #296	; 0x128
   36bb2:	str	r3, [sp, #12]
   36bb4:	str	r0, [sp, #16]
   36bb6:	mov	r0, r3
   36bb8:	blx	8f1c <strlen@plt>
   36bbc:	ldrd	r3, r2, [sp, #12]
   36bc0:	ldr	r1, [sp, #20]
   36bc2:	strd	r0, r8, [sp]
   36bc6:	mov	r0, r4
   36bc8:	bl	369dc <print_all_devices@@Base+0x45c>
   36bcc:	ldr	r1, [pc, #48]	; (36c00 <print_all_devices@@Base+0x680>)
   36bce:	add.w	r3, sp, #4096	; 0x1000
   36bd2:	ldr	r2, [pc, #40]	; (36bfc <print_all_devices@@Base+0x67c>)
   36bd4:	adds	r3, #28
   36bd6:	add	r1, pc
   36bd8:	ldr	r2, [r1, r2]
   36bda:	ldr	r1, [r2, #0]
   36bdc:	ldr	r2, [r3, #0]
   36bde:	eors	r1, r2
   36be0:	beq.n	36bea <print_all_devices@@Base+0x66a>
   36be2:	blx	8c90 <__stack_chk_fail@plt>
   36be6:	movs	r0, #25
   36be8:	b.n	36bcc <print_all_devices@@Base+0x64c>
   36bea:	add.w	sp, sp, #4128	; 0x1020
   36bee:	add	sp, #4
   36bf0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   36bf4:	str	r4, [sp, #248]	; 0xf8
   36bf6:	beq.n	36bfa <print_all_devices@@Base+0x67a>
   36bf8:	sbcs	r6, r7
   36bfa:	movs	r3, r0
   36bfc:	lsls	r0, r1, #10
   36bfe:	movs	r0, r0
   36c00:	adcs	r2, r0
   36c02:	movs	r3, r0
   36c04:	ldrb	r1, [r0, #0]
   36c06:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36c0a:	mov	r4, r0
   36c0c:	ldr	r3, [r0, #20]
   36c0e:	subs	r2, r3, #1
   36c10:	cbnz	r1, 36c16 <print_all_devices@@Base+0x696>
   36c12:	cmp	r3, #1
   36c14:	bne.n	36c1e <print_all_devices@@Base+0x69e>
   36c16:	str	r2, [r4, #20]
   36c18:	movs	r0, #0
   36c1a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36c1e:	ldr	r1, [r0, #16]
   36c20:	movw	r0, #4112	; 0x1010
   36c24:	str	r2, [r4, #20]
   36c26:	ldr.w	sl, [pc, #108]	; 36c94 <print_all_devices@@Base+0x714>
   36c2a:	mla	r2, r0, r2, r1
   36c2e:	ldr	r6, [r4, #8]
   36c30:	mla	r3, r0, r3, r1
   36c34:	add	sl, pc
   36c36:	ldr.w	r7, [r2, #-4]
   36c3a:	subs	r5, r3, #4
   36c3c:	ldr	r3, [r5, #0]
   36c3e:	cmp	r3, r7
   36c40:	bhi.n	36c52 <print_all_devices@@Base+0x6d2>
   36c42:	ldrd	r3, r0, [r4, #4]
   36c46:	cmp	r0, r3
   36c48:	beq.n	36c4e <print_all_devices@@Base+0x6ce>
   36c4a:	blx	91e4 <close@plt>
   36c4e:	str	r6, [r4, #8]
   36c50:	b.n	36c18 <print_all_devices@@Base+0x698>
   36c52:	cbz	r7, 36c5c <print_all_devices@@Base+0x6dc>
   36c54:	ldr	r3, [r4, #28]
   36c56:	ldrb	r3, [r3, r7]
   36c58:	cmp	r3, #47	; 0x2f
   36c5a:	bne.n	36c8a <print_all_devices@@Base+0x70a>
   36c5c:	movs	r2, #0
   36c5e:	mov	r1, sl
   36c60:	mov	r0, r6
   36c62:	blx	8c84 <openat@plt>
   36c66:	ldr	r3, [r4, #8]
   36c68:	cmp	r3, r6
   36c6a:	mov	r8, r0
   36c6c:	beq.n	36c82 <print_all_devices@@Base+0x702>
   36c6e:	blx	8f58 <__errno_location@plt>
   36c72:	ldr.w	fp, [r0]
   36c76:	mov	r9, r0
   36c78:	mov	r0, r6
   36c7a:	blx	91e4 <close@plt>
   36c7e:	str.w	fp, [r9]
   36c82:	cmp.w	r8, #4294967295	; 0xffffffff
   36c86:	beq.n	36c8e <print_all_devices@@Base+0x70e>
   36c88:	mov	r6, r8
   36c8a:	adds	r7, #1
   36c8c:	b.n	36c3c <print_all_devices@@Base+0x6bc>
   36c8e:	movs	r0, #7
   36c90:	b.n	36c1a <print_all_devices@@Base+0x69a>
   36c92:	nop
   36c94:	strh	r4, [r7, #56]	; 0x38
	...

00036c98 <btrfs_util_is_subvolume@@Base>:
   36c98:	ldr	r2, [pc, #132]	; (36d20 <btrfs_util_is_subvolume@@Base+0x88>)
   36c9a:	ldr	r3, [pc, #136]	; (36d24 <btrfs_util_is_subvolume@@Base+0x8c>)
   36c9c:	add	r2, pc
   36c9e:	push	{r4, lr}
   36ca0:	sub	sp, #160	; 0xa0
   36ca2:	ldr	r3, [r2, r3]
   36ca4:	add	r1, sp, #92	; 0x5c
   36ca6:	mov	r4, r0
   36ca8:	ldr	r3, [r3, #0]
   36caa:	str	r3, [sp, #156]	; 0x9c
   36cac:	mov.w	r3, #0
   36cb0:	blx	8bb4 <statfs@plt>
   36cb4:	adds	r0, #1
   36cb6:	beq.n	36d0a <btrfs_util_is_subvolume@@Base+0x72>
   36cb8:	ldr	r3, [pc, #96]	; (36d1c <btrfs_util_is_subvolume@@Base+0x84>)
   36cba:	ldr	r2, [sp, #92]	; 0x5c
   36cbc:	cmp	r2, r3
   36cbe:	beq.n	36cde <btrfs_util_is_subvolume@@Base+0x46>
   36cc0:	blx	8f58 <__errno_location@plt>
   36cc4:	movs	r3, #22
   36cc6:	str	r3, [r0, #0]
   36cc8:	movs	r0, #4
   36cca:	ldr	r2, [pc, #92]	; (36d28 <btrfs_util_is_subvolume@@Base+0x90>)
   36ccc:	ldr	r3, [pc, #84]	; (36d24 <btrfs_util_is_subvolume@@Base+0x8c>)
   36cce:	add	r2, pc
   36cd0:	ldr	r3, [r2, r3]
   36cd2:	ldr	r2, [r3, #0]
   36cd4:	ldr	r3, [sp, #156]	; 0x9c
   36cd6:	eors	r2, r3
   36cd8:	beq.n	36d16 <btrfs_util_is_subvolume@@Base+0x7e>
   36cda:	blx	8c90 <__stack_chk_fail@plt>
   36cde:	mov	r1, sp
   36ce0:	mov	r0, r4
   36ce2:	bl	3df40 <__libc_csu_fini@@Base+0x4>
   36ce6:	adds	r0, #1
   36ce8:	beq.n	36d0e <btrfs_util_is_subvolume@@Base+0x76>
   36cea:	ldr	r3, [sp, #12]
   36cec:	cmp.w	r3, #256	; 0x100
   36cf0:	bne.n	36cfe <btrfs_util_is_subvolume@@Base+0x66>
   36cf2:	ldr	r3, [sp, #16]
   36cf4:	and.w	r3, r3, #61440	; 0xf000
   36cf8:	cmp.w	r3, #16384	; 0x4000
   36cfc:	beq.n	36d12 <btrfs_util_is_subvolume@@Base+0x7a>
   36cfe:	blx	8f58 <__errno_location@plt>
   36d02:	movs	r3, #22
   36d04:	str	r3, [r0, #0]
   36d06:	movs	r0, #5
   36d08:	b.n	36cca <btrfs_util_is_subvolume@@Base+0x32>
   36d0a:	movs	r0, #11
   36d0c:	b.n	36cca <btrfs_util_is_subvolume@@Base+0x32>
   36d0e:	movs	r0, #10
   36d10:	b.n	36cca <btrfs_util_is_subvolume@@Base+0x32>
   36d12:	movs	r0, #0
   36d14:	b.n	36cca <btrfs_util_is_subvolume@@Base+0x32>
   36d16:	add	sp, #160	; 0xa0
   36d18:	pop	{r4, pc}
   36d1a:	nop
   36d1c:	ldr	r6, [r7, #0]
   36d1e:	str	r1, [sp, #140]	; 0x8c
   36d20:	eors	r4, r7
   36d22:	movs	r3, r0
   36d24:	lsls	r0, r1, #10
   36d26:	movs	r0, r0
   36d28:	eors	r2, r1
   36d2a:	movs	r3, r0

00036d2c <btrfs_util_is_subvolume_fd@@Base>:
   36d2c:	ldr	r2, [pc, #132]	; (36db4 <btrfs_util_is_subvolume_fd@@Base+0x88>)
   36d2e:	ldr	r3, [pc, #136]	; (36db8 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   36d30:	add	r2, pc
   36d32:	push	{r4, lr}
   36d34:	sub	sp, #160	; 0xa0
   36d36:	ldr	r3, [r2, r3]
   36d38:	add	r1, sp, #92	; 0x5c
   36d3a:	mov	r4, r0
   36d3c:	ldr	r3, [r3, #0]
   36d3e:	str	r3, [sp, #156]	; 0x9c
   36d40:	mov.w	r3, #0
   36d44:	blx	9024 <fstatfs@plt>
   36d48:	adds	r0, #1
   36d4a:	beq.n	36d9e <btrfs_util_is_subvolume_fd@@Base+0x72>
   36d4c:	ldr	r3, [pc, #96]	; (36db0 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   36d4e:	ldr	r2, [sp, #92]	; 0x5c
   36d50:	cmp	r2, r3
   36d52:	beq.n	36d72 <btrfs_util_is_subvolume_fd@@Base+0x46>
   36d54:	blx	8f58 <__errno_location@plt>
   36d58:	movs	r3, #22
   36d5a:	str	r3, [r0, #0]
   36d5c:	movs	r0, #4
   36d5e:	ldr	r2, [pc, #92]	; (36dbc <btrfs_util_is_subvolume_fd@@Base+0x90>)
   36d60:	ldr	r3, [pc, #84]	; (36db8 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   36d62:	add	r2, pc
   36d64:	ldr	r3, [r2, r3]
   36d66:	ldr	r2, [r3, #0]
   36d68:	ldr	r3, [sp, #156]	; 0x9c
   36d6a:	eors	r2, r3
   36d6c:	beq.n	36daa <btrfs_util_is_subvolume_fd@@Base+0x7e>
   36d6e:	blx	8c90 <__stack_chk_fail@plt>
   36d72:	mov	r1, sp
   36d74:	mov	r0, r4
   36d76:	bl	3df4c <__libc_csu_fini@@Base+0x10>
   36d7a:	adds	r0, #1
   36d7c:	beq.n	36da2 <btrfs_util_is_subvolume_fd@@Base+0x76>
   36d7e:	ldr	r3, [sp, #12]
   36d80:	cmp.w	r3, #256	; 0x100
   36d84:	bne.n	36d92 <btrfs_util_is_subvolume_fd@@Base+0x66>
   36d86:	ldr	r3, [sp, #16]
   36d88:	and.w	r3, r3, #61440	; 0xf000
   36d8c:	cmp.w	r3, #16384	; 0x4000
   36d90:	beq.n	36da6 <btrfs_util_is_subvolume_fd@@Base+0x7a>
   36d92:	blx	8f58 <__errno_location@plt>
   36d96:	movs	r3, #22
   36d98:	str	r3, [r0, #0]
   36d9a:	movs	r0, #5
   36d9c:	b.n	36d5e <btrfs_util_is_subvolume_fd@@Base+0x32>
   36d9e:	movs	r0, #11
   36da0:	b.n	36d5e <btrfs_util_is_subvolume_fd@@Base+0x32>
   36da2:	movs	r0, #10
   36da4:	b.n	36d5e <btrfs_util_is_subvolume_fd@@Base+0x32>
   36da6:	movs	r0, #0
   36da8:	b.n	36d5e <btrfs_util_is_subvolume_fd@@Base+0x32>
   36daa:	add	sp, #160	; 0xa0
   36dac:	pop	{r4, pc}
   36dae:	nop
   36db0:	ldr	r6, [r7, #0]
   36db2:	str	r1, [sp, #140]	; 0x8c
   36db4:	subs	r7, #232	; 0xe8
   36db6:	movs	r3, r0
   36db8:	lsls	r0, r1, #10
   36dba:	movs	r0, r0
   36dbc:	subs	r7, #182	; 0xb6
   36dbe:	movs	r3, r0

00036dc0 <btrfs_util_subvolume_id_fd@@Base>:
   36dc0:	push	{r4, r5, r6, lr}
   36dc2:	mov	r4, r1
   36dc4:	ldr	r1, [pc, #120]	; (36e40 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   36dc6:	sub.w	sp, sp, #4096	; 0x1000
   36dca:	ldr	r2, [pc, #120]	; (36e44 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   36dcc:	sub	sp, #8
   36dce:	add	r1, pc
   36dd0:	add.w	r3, sp, #4096	; 0x1000
   36dd4:	adds	r3, #4
   36dd6:	mov	r5, r0
   36dd8:	ldr	r2, [r1, r2]
   36dda:	movs	r1, #0
   36ddc:	add	r6, sp, #8
   36dde:	ldr	r2, [r2, #0]
   36de0:	str	r2, [r3, #0]
   36de2:	mov.w	r2, #0
   36de6:	mov	r3, sp
   36de8:	mov.w	r2, #4096	; 0x1000
   36dec:	mov	r0, r3
   36dee:	blx	8f98 <memset@plt+0x4>
   36df2:	movs	r1, #0
   36df4:	mov	r3, r0
   36df6:	mov.w	r0, #256	; 0x100
   36dfa:	mov	r2, r3
   36dfc:	strd	r0, r1, [r3, #8]
   36e00:	ldr	r1, [pc, #56]	; (36e3c <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   36e02:	mov	r0, r5
   36e04:	blx	8d48 <ioctl@plt>
   36e08:	ldr	r1, [pc, #60]	; (36e48 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   36e0a:	add	r1, pc
   36e0c:	adds	r0, #1
   36e0e:	ittet	ne
   36e10:	ldrdne	r2, r3, [r6, #-8]
   36e14:	movne	r0, #0
   36e16:	moveq	r0, #13
   36e18:	strdne	r2, r3, [r4]
   36e1c:	add.w	r3, sp, #4096	; 0x1000
   36e20:	ldr	r2, [pc, #32]	; (36e44 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   36e22:	adds	r3, #4
   36e24:	ldr	r2, [r1, r2]
   36e26:	ldr	r1, [r2, #0]
   36e28:	ldr	r2, [r3, #0]
   36e2a:	eors	r1, r2
   36e2c:	beq.n	36e32 <btrfs_util_subvolume_id_fd@@Base+0x72>
   36e2e:	blx	8c90 <__stack_chk_fail@plt>
   36e32:	add.w	sp, sp, #4096	; 0x1000
   36e36:	add	sp, #8
   36e38:	pop	{r4, r5, r6, pc}
   36e3a:	nop
   36e3c:	str	r4, [sp, #72]	; 0x48
   36e3e:	beq.n	36e42 <btrfs_util_subvolume_id_fd@@Base+0x82>
   36e40:	subs	r7, #74	; 0x4a
   36e42:	movs	r3, r0
   36e44:	lsls	r0, r1, #10
   36e46:	movs	r0, r0
   36e48:	subs	r7, #14
   36e4a:	movs	r3, r0

00036e4c <btrfs_util_subvolume_id@@Base>:
   36e4c:	push	{r3, r4, r5, r6, r7, lr}
   36e4e:	mov	r4, r1
   36e50:	movs	r1, #0
   36e52:	blx	8ed4 <open@plt>
   36e56:	adds	r3, r0, #1
   36e58:	mov	r6, r0
   36e5a:	beq.n	36e78 <btrfs_util_subvolume_id@@Base+0x2c>
   36e5c:	mov	r1, r4
   36e5e:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   36e62:	mov	r4, r0
   36e64:	blx	8f58 <__errno_location@plt>
   36e68:	ldr	r7, [r0, #0]
   36e6a:	mov	r5, r0
   36e6c:	mov	r0, r6
   36e6e:	blx	91e4 <close@plt>
   36e72:	str	r7, [r5, #0]
   36e74:	mov	r0, r4
   36e76:	pop	{r3, r4, r5, r6, r7, pc}
   36e78:	movs	r4, #7
   36e7a:	b.n	36e74 <btrfs_util_subvolume_id@@Base+0x28>
   36e7c:	push	{r4, r5, r6, r7, lr}
   36e7e:	mov	r4, r2
   36e80:	ldr	r2, [pc, #156]	; (36f20 <btrfs_util_subvolume_id@@Base+0xd4>)
   36e82:	mov	r5, r3
   36e84:	ldr	r3, [pc, #156]	; (36f24 <btrfs_util_subvolume_id@@Base+0xd8>)
   36e86:	subw	sp, sp, #2068	; 0x814
   36e8a:	add	r2, pc
   36e8c:	mov	r6, r0
   36e8e:	mov	r7, r1
   36e90:	ldr	r3, [r2, r3]
   36e92:	ldr	r3, [r3, #0]
   36e94:	str.w	r3, [sp, #2060]	; 0x80c
   36e98:	mov.w	r3, #0
   36e9c:	bl	36d2c <btrfs_util_is_subvolume_fd@@Base>
   36ea0:	subs	r3, r0, #4
   36ea2:	cmp	r3, #1
   36ea4:	bhi.n	36eb2 <btrfs_util_subvolume_id@@Base+0x66>
   36ea6:	blx	8f58 <__errno_location@plt>
   36eaa:	movs	r3, #2
   36eac:	str	r3, [r0, #0]
   36eae:	movs	r0, #6
   36eb0:	b.n	36ec4 <btrfs_util_subvolume_id@@Base+0x78>
   36eb2:	cbnz	r0, 36ec4 <btrfs_util_subvolume_id@@Base+0x78>
   36eb4:	ldr	r1, [pc, #100]	; (36f1c <btrfs_util_subvolume_id@@Base+0xd0>)
   36eb6:	add	r2, sp, #8
   36eb8:	mov	r0, r7
   36eba:	blx	8d48 <ioctl@plt>
   36ebe:	adds	r0, #1
   36ec0:	bne.n	36eda <btrfs_util_subvolume_id@@Base+0x8e>
   36ec2:	movs	r0, #26
   36ec4:	ldr	r2, [pc, #96]	; (36f28 <btrfs_util_subvolume_id@@Base+0xdc>)
   36ec6:	ldr	r3, [pc, #92]	; (36f24 <btrfs_util_subvolume_id@@Base+0xd8>)
   36ec8:	add	r2, pc
   36eca:	ldr	r3, [r2, r3]
   36ecc:	ldr	r2, [r3, #0]
   36ece:	ldr.w	r3, [sp, #2060]	; 0x80c
   36ed2:	eors	r2, r3
   36ed4:	beq.n	36f16 <btrfs_util_subvolume_id@@Base+0xca>
   36ed6:	blx	8c90 <__stack_chk_fail@plt>
   36eda:	ldr	r1, [pc, #64]	; (36f1c <btrfs_util_subvolume_id@@Base+0xd0>)
   36edc:	add.w	r2, sp, #1032	; 0x408
   36ee0:	mov	r0, r6
   36ee2:	blx	8d48 <ioctl@plt>
   36ee6:	adds	r0, #1
   36ee8:	beq.n	36ec2 <btrfs_util_subvolume_id@@Base+0x76>
   36eea:	add.w	r1, sp, #1048	; 0x418
   36eee:	add	r0, sp, #24
   36ef0:	movs	r2, #16
   36ef2:	blx	8c1c <memcmp@plt+0x4>
   36ef6:	cmp	r0, #0
   36ef8:	bne.n	36ea6 <btrfs_util_subvolume_id@@Base+0x5a>
   36efa:	mov	r7, sp
   36efc:	mov	r0, r6
   36efe:	mov	r1, r7
   36f00:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   36f04:	cmp	r0, #0
   36f06:	bne.n	36ec4 <btrfs_util_subvolume_id@@Base+0x78>
   36f08:	ldrd	r2, r3, [r7]
   36f0c:	cmp	r3, r5
   36f0e:	it	eq
   36f10:	cmpeq	r2, r4
   36f12:	beq.n	36ec4 <btrfs_util_subvolume_id@@Base+0x78>
   36f14:	b.n	36ea6 <btrfs_util_subvolume_id@@Base+0x5a>
   36f16:	addw	sp, sp, #2068	; 0x814
   36f1a:	pop	{r4, r5, r6, r7, pc}
   36f1c:	str	r4, [sp, #124]	; 0x7c
   36f1e:	strh	r0, [r0, #32]
   36f20:	subs	r6, #142	; 0x8e
   36f22:	movs	r3, r0
   36f24:	lsls	r0, r1, #10
   36f26:	movs	r0, r0
   36f28:	subs	r6, #80	; 0x50
   36f2a:	movs	r3, r0
   36f2c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   36f30:	mov	r6, r3
   36f32:	ldrd	r3, r5, [r0, #20]
   36f36:	mov	r4, r0
   36f38:	mov	r7, r2
   36f3a:	cmp	r3, r5
   36f3c:	bcc.n	36f54 <btrfs_util_subvolume_id@@Base+0x108>
   36f3e:	lsls	r5, r5, #1
   36f40:	ldr	r0, [r0, #16]
   36f42:	movw	r2, #4112	; 0x1010
   36f46:	mov	r1, r5
   36f48:	bl	38308 <btrfs_util_deleted_subvolumes@@Base+0x38>
   36f4c:	cmp	r0, #0
   36f4e:	beq.n	3700c <btrfs_util_subvolume_id@@Base+0x1c0>
   36f50:	str	r5, [r4, #24]
   36f52:	str	r0, [r4, #16]
   36f54:	ldr	r3, [r4, #16]
   36f56:	movw	r8, #4112	; 0x1010
   36f5a:	ldr	r5, [r4, #20]
   36f5c:	mov	r2, r8
   36f5e:	movs	r1, #0
   36f60:	mla	r5, r8, r5, r3
   36f64:	mov	r0, r5
   36f66:	blx	8f98 <memset@plt+0x4>
   36f6a:	ldr	r2, [sp, #24]
   36f6c:	movw	r3, #4108	; 0x100c
   36f70:	str	r2, [r5, r3]
   36f72:	ldrb	r3, [r4, #0]
   36f74:	cbz	r3, 36fb6 <btrfs_util_subvolume_id@@Base+0x16a>
   36f76:	movs	r2, #1
   36f78:	movs	r3, #0
   36f7a:	movs	r0, #0
   36f7c:	movs	r1, #0
   36f7e:	strd	r2, r3, [r5]
   36f82:	movs	r3, #156	; 0x9c
   36f84:	mov.w	r2, #4294967295	; 0xffffffff
   36f88:	strd	r3, r3, [r5, #56]	; 0x38
   36f8c:	strd	r7, r6, [r5, #8]
   36f90:	mov.w	r3, #4294967295	; 0xffffffff
   36f94:	strd	r7, r6, [r5, #16]
   36f98:	strd	r2, r3, [r5, #32]
   36f9c:	strd	r2, r3, [r5, #48]	; 0x30
   36fa0:	movs	r3, #0
   36fa2:	strd	r0, r1, [r5, #24]
   36fa6:	strd	r0, r1, [r5, #40]	; 0x28
   36faa:	str	r3, [r5, #64]	; 0x40
   36fac:	ldr	r3, [r4, #20]
   36fae:	movs	r5, #0
   36fb0:	adds	r3, #1
   36fb2:	str	r3, [r4, #20]
   36fb4:	b.n	36ffa <btrfs_util_subvolume_id@@Base+0x1ae>
   36fb6:	ldr	r3, [r4, #20]
   36fb8:	strd	r7, r6, [r5]
   36fbc:	cmp	r3, #0
   36fbe:	beq.n	36fac <btrfs_util_subvolume_id@@Base+0x160>
   36fc0:	ldr	r2, [r4, #16]
   36fc2:	ldr	r0, [r4, #8]
   36fc4:	mla	r3, r8, r3, r2
   36fc8:	ldr	r2, [r4, #28]
   36fca:	ldr.w	r3, [r3, #-4]
   36fce:	adds	r1, r2, r3
   36fd0:	ldrb	r3, [r2, r3]
   36fd2:	movs	r2, #0
   36fd4:	cmp	r3, #47	; 0x2f
   36fd6:	it	eq
   36fd8:	addeq	r1, #1
   36fda:	blx	8c84 <openat@plt>
   36fde:	cmp.w	r0, #4294967295	; 0xffffffff
   36fe2:	mov	r8, r0
   36fe4:	beq.n	37010 <btrfs_util_subvolume_id@@Base+0x1c4>
   36fe6:	ldr	r1, [r4, #8]
   36fe8:	mov	r2, r7
   36fea:	mov	r3, r6
   36fec:	bl	36e7c <btrfs_util_subvolume_id@@Base+0x30>
   36ff0:	mov	r5, r0
   36ff2:	cbz	r0, 37000 <btrfs_util_subvolume_id@@Base+0x1b4>
   36ff4:	mov	r0, r8
   36ff6:	blx	91e4 <close@plt>
   36ffa:	mov	r0, r5
   36ffc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   37000:	ldr	r0, [r4, #8]
   37002:	blx	91e4 <close@plt>
   37006:	str.w	r8, [r4, #8]
   3700a:	b.n	36fac <btrfs_util_subvolume_id@@Base+0x160>
   3700c:	movs	r5, #2
   3700e:	b.n	36ffa <btrfs_util_subvolume_id@@Base+0x1ae>
   37010:	movs	r5, #7
   37012:	b.n	36ffa <btrfs_util_subvolume_id@@Base+0x1ae>

00037014 <btrfs_util_subvolume_path_fd@@Base>:
   37014:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37018:	sub.w	sp, sp, #8192	; 0x2000
   3701c:	sub	sp, #44	; 0x2c
   3701e:	ldr	r5, [pc, #496]	; (37210 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   37020:	add.w	r1, sp, #8256	; 0x2040
   37024:	ldr	r4, [pc, #492]	; (37214 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   37026:	adds	r1, #16
   37028:	add	r5, pc
   3702a:	strd	r2, r3, [sp, #24]
   3702e:	orrs	r3, r2
   37030:	ldr	r1, [r1, #0]
   37032:	add	r6, sp, #40	; 0x28
   37034:	sub.w	fp, r6, #16
   37038:	mov	r7, r0
   3703a:	str	r1, [sp, #16]
   3703c:	add.w	r1, sp, #8192	; 0x2000
   37040:	ldr	r4, [r5, r4]
   37042:	add.w	r1, r1, #36	; 0x24
   37046:	ldr	r4, [r4, #0]
   37048:	str	r4, [r1, #0]
   3704a:	mov.w	r4, #0
   3704e:	beq.n	37060 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   37050:	mov.w	r0, #4096	; 0x1000
   37054:	blx	8e40 <malloc@plt+0x4>
   37058:	mov	r4, r0
   3705a:	cbnz	r0, 3708e <btrfs_util_subvolume_path_fd@@Base+0x7a>
   3705c:	movs	r0, #2
   3705e:	b.n	37072 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   37060:	bl	36d2c <btrfs_util_is_subvolume_fd@@Base>
   37064:	cbnz	r0, 37072 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   37066:	mov	r1, fp
   37068:	mov	r0, r7
   3706a:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   3706e:	cmp	r0, #0
   37070:	beq.n	37050 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   37072:	ldr	r1, [pc, #420]	; (37218 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   37074:	add.w	r3, sp, #8192	; 0x2000
   37078:	ldr	r2, [pc, #408]	; (37214 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   3707a:	adds	r3, #36	; 0x24
   3707c:	add	r1, pc
   3707e:	ldr	r2, [r1, r2]
   37080:	ldr	r1, [r2, #0]
   37082:	ldr	r2, [r3, #0]
   37084:	eors	r1, r2
   37086:	beq.w	371fe <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   3708a:	blx	8c90 <__stack_chk_fail@plt>
   3708e:	addw	r5, r0, #4095	; 0xfff
   37092:	movs	r3, #0
   37094:	strb.w	r3, [r0, #4095]	; 0xfff
   37098:	mov.w	r3, #4096	; 0x1000
   3709c:	str	r3, [sp, #0]
   3709e:	ldrd	r8, r9, [fp]
   370a2:	cmp.w	r9, #0
   370a6:	it	eq
   370a8:	cmpeq.w	r8, #5
   370ac:	bne.n	370c8 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   370ae:	cmp	r4, r5
   370b0:	beq.n	370c0 <btrfs_util_subvolume_path_fd@@Base+0xac>
   370b2:	ldr	r3, [sp, #0]
   370b4:	mov	r1, r5
   370b6:	mov	r0, r4
   370b8:	add	r3, r4
   370ba:	subs	r2, r3, r5
   370bc:	blx	8b74 <memmove@plt+0x4>
   370c0:	ldr	r3, [sp, #16]
   370c2:	movs	r0, #0
   370c4:	str	r4, [r3, #0]
   370c6:	b.n	37072 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   370c8:	sub.w	sl, r6, #8
   370cc:	mov.w	r2, #4096	; 0x1000
   370d0:	movs	r1, #0
   370d2:	mov	r0, sl
   370d4:	blx	8f98 <memset@plt+0x4>
   370d8:	movs	r2, #1
   370da:	movs	r3, #0
   370dc:	ldr	r1, [pc, #296]	; (37208 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   370de:	strd	r2, r3, [r6, #-8]
   370e2:	mov	r0, r7
   370e4:	mov.w	r2, #4294967295	; 0xffffffff
   370e8:	mov.w	r3, #4294967295	; 0xffffffff
   370ec:	strd	r2, r3, [sl, #32]
   370f0:	strd	r2, r3, [sl, #48]	; 0x30
   370f4:	mov	r2, sl
   370f6:	movs	r3, #144	; 0x90
   370f8:	strd	r8, r9, [sl, #8]
   370fc:	strd	r3, r3, [sl, #56]	; 0x38
   37100:	movs	r3, #1
   37102:	strd	r8, r9, [sl, #16]
   37106:	str.w	r3, [sl, #64]	; 0x40
   3710a:	blx	8d48 <ioctl@plt>
   3710e:	adds	r0, #1
   37110:	bne.n	3711c <btrfs_util_subvolume_path_fd@@Base+0x108>
   37112:	mov	r0, r4
   37114:	blx	8b84 <free@plt+0x4>
   37118:	movs	r0, #12
   3711a:	b.n	37072 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   3711c:	ldr.w	r3, [sl, #64]	; 0x40
   37120:	cbnz	r3, 37134 <btrfs_util_subvolume_path_fd@@Base+0x120>
   37122:	mov	r0, r4
   37124:	blx	8b84 <free@plt+0x4>
   37128:	blx	8f58 <__errno_location@plt>
   3712c:	movs	r3, #2
   3712e:	str	r3, [r0, #0]
   37130:	movs	r0, #6
   37132:	b.n	37072 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   37134:	ldrd	r0, r1, [sl, #120]	; 0x78
   37138:	add.w	r2, sp, #4128	; 0x1020
   3713c:	adds	r2, #8
   3713e:	ldrh.w	r9, [sl, #152]	; 0x98
   37142:	strd	r0, r1, [r2, #-8]
   37146:	strd	r0, r1, [fp]
   3714a:	ldrd	r0, r1, [sl, #136]	; 0x88
   3714e:	strd	r0, r1, [r2], #-8
   37152:	mov	r0, r7
   37154:	ldr	r1, [pc, #180]	; (3720c <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   37156:	blx	8d48 <ioctl@plt>
   3715a:	adds	r0, #1
   3715c:	beq.n	37112 <btrfs_util_subvolume_path_fd@@Base+0xfe>
   3715e:	add.w	r0, sp, #4128	; 0x1020
   37162:	adds	r0, #16
   37164:	blx	8f1c <strlen@plt>
   37168:	ldrd	r2, r3, [fp]
   3716c:	cmp	r3, #0
   3716e:	it	eq
   37170:	cmpeq	r2, #5
   37172:	strd	r2, r3, [sp, #8]
   37176:	ite	ne
   37178:	movne	r3, #1
   3717a:	moveq	r3, #0
   3717c:	add	r3, r9
   3717e:	add	r3, r0
   37180:	mov	r8, r0
   37182:	subs	r3, r5, r3
   37184:	cmp	r4, r3
   37186:	bls.n	371c6 <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   37188:	ldr	r3, [sp, #0]
   3718a:	lsls	r3, r3, #1
   3718c:	str	r3, [sp, #4]
   3718e:	mov	r0, r3
   37190:	blx	8e40 <malloc@plt+0x4>
   37194:	cbnz	r0, 3719e <btrfs_util_subvolume_path_fd@@Base+0x18a>
   37196:	mov	r0, r4
   37198:	blx	8b84 <free@plt+0x4>
   3719c:	b.n	3705c <btrfs_util_subvolume_path_fd@@Base+0x48>
   3719e:	ldr	r2, [sp, #0]
   371a0:	ldr	r1, [sp, #4]
   371a2:	add	r2, r4
   371a4:	str	r0, [sp, #20]
   371a6:	subs	r2, r2, r5
   371a8:	sub.w	sl, r1, r2
   371ac:	mov	r1, r5
   371ae:	add	sl, r0
   371b0:	mov	r0, sl
   371b2:	mov	r5, sl
   371b4:	blx	8bdc <memcpy@plt+0x4>
   371b8:	mov	r0, r4
   371ba:	blx	8b84 <free@plt+0x4>
   371be:	ldr	r3, [sp, #4]
   371c0:	str	r3, [sp, #0]
   371c2:	ldr	r3, [sp, #20]
   371c4:	mov	r4, r3
   371c6:	sub.w	r5, r5, r9
   371ca:	add.w	r1, r6, #146	; 0x92
   371ce:	mov	r2, r9
   371d0:	mov	r0, r5
   371d2:	sub.w	r5, r5, r8
   371d6:	blx	8bdc <memcpy@plt+0x4>
   371da:	add.w	r1, sp, #4128	; 0x1020
   371de:	mov	r2, r8
   371e0:	mov	r0, r5
   371e2:	adds	r1, #16
   371e4:	blx	8bdc <memcpy@plt+0x4>
   371e8:	ldrd	r2, r3, [sp, #8]
   371ec:	cmp	r3, #0
   371ee:	iteee	eq
   371f0:	cmpeq	r2, #5
   371f2:	movne	r3, #47	; 0x2f
   371f4:	strbne.w	r3, [r5, #-1]
   371f8:	addne.w	r5, r5, #4294967295	; 0xffffffff
   371fc:	b.n	3709e <btrfs_util_subvolume_path_fd@@Base+0x8a>
   371fe:	add.w	sp, sp, #8192	; 0x2000
   37202:	add	sp, #44	; 0x2c
   37204:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37208:	str	r4, [sp, #68]	; 0x44
   3720a:	beq.n	3720e <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   3720c:	str	r4, [sp, #72]	; 0x48
   3720e:	beq.n	37212 <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   37210:	subs	r4, #240	; 0xf0
   37212:	movs	r3, r0
   37214:	lsls	r0, r1, #10
   37216:	movs	r0, r0
   37218:	subs	r4, #156	; 0x9c
   3721a:	movs	r3, r0

0003721c <btrfs_util_subvolume_path@@Base>:
   3721c:	push	{r4, r5, r6, r7, lr}
   3721e:	sub	sp, #20
   37220:	movs	r1, #0
   37222:	strd	r3, r2, [sp, #8]
   37226:	blx	8ed4 <open@plt>
   3722a:	adds	r3, r0, #1
   3722c:	mov	r6, r0
   3722e:	beq.n	37254 <btrfs_util_subvolume_path@@Base+0x38>
   37230:	ldr	r1, [sp, #40]	; 0x28
   37232:	ldrd	r3, r2, [sp, #8]
   37236:	str	r1, [sp, #0]
   37238:	bl	37014 <btrfs_util_subvolume_path_fd@@Base>
   3723c:	mov	r4, r0
   3723e:	blx	8f58 <__errno_location@plt>
   37242:	ldr	r7, [r0, #0]
   37244:	mov	r5, r0
   37246:	mov	r0, r6
   37248:	blx	91e4 <close@plt>
   3724c:	str	r7, [r5, #0]
   3724e:	mov	r0, r4
   37250:	add	sp, #20
   37252:	pop	{r4, r5, r6, r7, pc}
   37254:	movs	r4, #7
   37256:	b.n	3724e <btrfs_util_subvolume_path@@Base+0x32>

00037258 <btrfs_util_subvolume_info_fd@@Base>:
   37258:	push	{r4, r5, lr}
   3725a:	sub	sp, #20
   3725c:	mov	r4, r0
   3725e:	strd	r2, r3, [sp, #8]
   37262:	orrs	r3, r2
   37264:	ldr	r5, [sp, #32]
   37266:	beq.n	37290 <btrfs_util_subvolume_info_fd@@Base+0x38>
   37268:	ldrd	r2, r3, [sp, #8]
   3726c:	cmp	r3, #0
   3726e:	it	eq
   37270:	cmpeq.w	r2, #256	; 0x100
   37274:	bcc.n	372b6 <btrfs_util_subvolume_info_fd@@Base+0x5e>
   37276:	mov.w	r1, #4294967295	; 0xffffffff
   3727a:	cmp	r1, r3
   3727c:	mvn.w	r0, #255	; 0xff
   37280:	it	eq
   37282:	cmpeq	r0, r2
   37284:	bcc.n	372be <btrfs_util_subvolume_info_fd@@Base+0x66>
   37286:	mov	r0, r4
   37288:	str	r5, [sp, #0]
   3728a:	bl	367b0 <print_all_devices@@Base+0x230>
   3728e:	b.n	372a4 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   37290:	bl	36d2c <btrfs_util_is_subvolume_fd@@Base>
   37294:	cbnz	r0, 372a4 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   37296:	blx	8ce8 <geteuid@plt>
   3729a:	cbz	r0, 372a8 <btrfs_util_subvolume_info_fd@@Base+0x50>
   3729c:	mov	r1, r5
   3729e:	mov	r0, r4
   372a0:	bl	365b4 <print_all_devices@@Base+0x34>
   372a4:	add	sp, #20
   372a6:	pop	{r4, r5, pc}
   372a8:	add	r1, sp, #8
   372aa:	mov	r0, r4
   372ac:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   372b0:	cmp	r0, #0
   372b2:	beq.n	37268 <btrfs_util_subvolume_info_fd@@Base+0x10>
   372b4:	b.n	372a4 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   372b6:	cmp	r3, #0
   372b8:	it	eq
   372ba:	cmpeq	r2, #5
   372bc:	beq.n	37286 <btrfs_util_subvolume_info_fd@@Base+0x2e>
   372be:	blx	8f58 <__errno_location@plt>
   372c2:	movs	r3, #2
   372c4:	str	r3, [r0, #0]
   372c6:	movs	r0, #6
   372c8:	b.n	372a4 <btrfs_util_subvolume_info_fd@@Base+0x4c>

000372ca <btrfs_util_subvolume_info@@Base>:
   372ca:	push	{r4, r5, r6, r7, lr}
   372cc:	sub	sp, #20
   372ce:	movs	r1, #0
   372d0:	strd	r3, r2, [sp, #8]
   372d4:	blx	8ed4 <open@plt>
   372d8:	adds	r3, r0, #1
   372da:	mov	r6, r0
   372dc:	beq.n	37302 <btrfs_util_subvolume_info@@Base+0x38>
   372de:	ldr	r1, [sp, #40]	; 0x28
   372e0:	ldrd	r3, r2, [sp, #8]
   372e4:	str	r1, [sp, #0]
   372e6:	bl	37258 <btrfs_util_subvolume_info_fd@@Base>
   372ea:	mov	r4, r0
   372ec:	blx	8f58 <__errno_location@plt>
   372f0:	ldr	r7, [r0, #0]
   372f2:	mov	r5, r0
   372f4:	mov	r0, r6
   372f6:	blx	91e4 <close@plt>
   372fa:	str	r7, [r5, #0]
   372fc:	mov	r0, r4
   372fe:	add	sp, #20
   37300:	pop	{r4, r5, r6, r7, pc}
   37302:	movs	r4, #7
   37304:	b.n	372fc <btrfs_util_subvolume_info@@Base+0x32>

00037306 <btrfs_util_get_subvolume_read_only_fd@@Base>:
   37306:	push	{r0, r1, r2, r3, r4, lr}
   37308:	mov	r4, r1
   3730a:	ldr	r2, [pc, #68]	; (37350 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   3730c:	ldr	r3, [pc, #68]	; (37354 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   3730e:	add	r2, pc
   37310:	ldr	r1, [pc, #56]	; (3734c <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   37312:	ldr	r3, [r2, r3]
   37314:	mov	r2, sp
   37316:	ldr	r3, [r3, #0]
   37318:	str	r3, [sp, #12]
   3731a:	mov.w	r3, #0
   3731e:	blx	8d48 <ioctl@plt>
   37322:	ldr	r2, [pc, #52]	; (37358 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   37324:	add	r2, pc
   37326:	adds	r0, #1
   37328:	ittet	ne
   3732a:	ldrne	r3, [sp, #0]
   3732c:	movne	r0, #0
   3732e:	moveq	r0, #14
   37330:	ubfxne	r3, r3, #1, #1
   37334:	it	ne
   37336:	strbne	r3, [r4, #0]
   37338:	ldr	r3, [pc, #24]	; (37354 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   3733a:	ldr	r3, [r2, r3]
   3733c:	ldr	r2, [r3, #0]
   3733e:	ldr	r3, [sp, #12]
   37340:	eors	r2, r3
   37342:	beq.n	37348 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   37344:	blx	8c90 <__stack_chk_fail@plt>
   37348:	add	sp, #16
   3734a:	pop	{r4, pc}
   3734c:	str	r4, [sp, #100]	; 0x64
   3734e:	strh	r0, [r1, #0]
   37350:	subs	r2, #10
   37352:	movs	r3, r0
   37354:	lsls	r0, r1, #10
   37356:	movs	r0, r0
   37358:	subs	r1, #244	; 0xf4
   3735a:	movs	r3, r0

0003735c <btrfs_util_get_subvolume_read_only@@Base>:
   3735c:	push	{r3, r4, r5, r6, r7, lr}
   3735e:	mov	r4, r1
   37360:	movs	r1, #0
   37362:	blx	8ed4 <open@plt>
   37366:	adds	r3, r0, #1
   37368:	mov	r6, r0
   3736a:	beq.n	37388 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   3736c:	mov	r1, r4
   3736e:	bl	37306 <btrfs_util_get_subvolume_read_only_fd@@Base>
   37372:	mov	r4, r0
   37374:	blx	8f58 <__errno_location@plt>
   37378:	ldr	r7, [r0, #0]
   3737a:	mov	r5, r0
   3737c:	mov	r0, r6
   3737e:	blx	91e4 <close@plt>
   37382:	str	r7, [r5, #0]
   37384:	mov	r0, r4
   37386:	pop	{r3, r4, r5, r6, r7, pc}
   37388:	movs	r4, #7
   3738a:	b.n	37384 <btrfs_util_get_subvolume_read_only@@Base+0x28>

0003738c <btrfs_util_set_subvolume_read_only_fd@@Base>:
   3738c:	ldr	r2, [pc, #108]	; (373fc <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   3738e:	ldr	r3, [pc, #112]	; (37400 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   37390:	add	r2, pc
   37392:	push	{r4, r5, lr}
   37394:	sub	sp, #28
   37396:	ldr	r3, [r2, r3]
   37398:	mov	r5, r1
   3739a:	add	r2, sp, #8
   3739c:	ldr	r1, [pc, #84]	; (373f4 <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   3739e:	ldr	r3, [r3, #0]
   373a0:	str	r3, [sp, #20]
   373a2:	mov.w	r3, #0
   373a6:	mov	r4, r0
   373a8:	str	r2, [sp, #4]
   373aa:	blx	8d48 <ioctl@plt>
   373ae:	adds	r0, #1
   373b0:	beq.n	373ec <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   373b2:	ldrd	r3, r1, [sp, #8]
   373b6:	ldr	r2, [sp, #4]
   373b8:	cbz	r5, 373e6 <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   373ba:	orr.w	r3, r3, #2
   373be:	strd	r3, r1, [sp, #8]
   373c2:	mov	r0, r4
   373c4:	ldr	r1, [pc, #48]	; (373f8 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   373c6:	blx	8d48 <ioctl@plt>
   373ca:	adds	r3, r0, #1
   373cc:	ite	ne
   373ce:	movne	r0, #0
   373d0:	moveq	r0, #15
   373d2:	ldr	r2, [pc, #48]	; (37404 <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   373d4:	ldr	r3, [pc, #40]	; (37400 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   373d6:	add	r2, pc
   373d8:	ldr	r3, [r2, r3]
   373da:	ldr	r2, [r3, #0]
   373dc:	ldr	r3, [sp, #20]
   373de:	eors	r2, r3
   373e0:	beq.n	373f0 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   373e2:	blx	8c90 <__stack_chk_fail@plt>
   373e6:	bic.w	r3, r3, #2
   373ea:	b.n	373be <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   373ec:	movs	r0, #14
   373ee:	b.n	373d2 <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   373f0:	add	sp, #28
   373f2:	pop	{r4, r5, pc}
   373f4:	str	r4, [sp, #100]	; 0x64
   373f6:	strh	r0, [r1, #0]
   373f8:	str	r4, [sp, #104]	; 0x68
   373fa:	ands	r0, r1
   373fc:	subs	r1, #136	; 0x88
   373fe:	movs	r3, r0
   37400:	lsls	r0, r1, #10
   37402:	movs	r0, r0
   37404:	subs	r1, #66	; 0x42
   37406:	movs	r3, r0

00037408 <btrfs_util_set_subvolume_read_only@@Base>:
   37408:	push	{r3, r4, r5, r6, r7, lr}
   3740a:	mov	r4, r1
   3740c:	movs	r1, #0
   3740e:	blx	8ed4 <open@plt>
   37412:	adds	r3, r0, #1
   37414:	mov	r6, r0
   37416:	beq.n	37434 <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   37418:	mov	r1, r4
   3741a:	bl	3738c <btrfs_util_set_subvolume_read_only_fd@@Base>
   3741e:	mov	r4, r0
   37420:	blx	8f58 <__errno_location@plt>
   37424:	ldr	r7, [r0, #0]
   37426:	mov	r5, r0
   37428:	mov	r0, r6
   3742a:	blx	91e4 <close@plt>
   3742e:	str	r7, [r5, #0]
   37430:	mov	r0, r4
   37432:	pop	{r3, r4, r5, r6, r7, pc}
   37434:	movs	r4, #7
   37436:	b.n	37430 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00037438 <btrfs_util_get_default_subvolume_fd@@Base>:
   37438:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3743c:	mov	r7, r1
   3743e:	ldr	r1, [pc, #256]	; (37540 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   37440:	sub.w	sp, sp, #4096	; 0x1000
   37444:	ldr	r2, [pc, #252]	; (37544 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   37446:	sub	sp, #20
   37448:	add	r1, pc
   3744a:	add.w	r9, sp, #16
   3744e:	sub.w	r4, r9, #8
   37452:	add.w	r3, sp, #4096	; 0x1000
   37456:	ldr	r2, [r1, r2]
   37458:	mov	r8, r0
   3745a:	ldr.w	fp, [pc, #236]	; 37548 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   3745e:	mov	r0, r4
   37460:	ldr.w	sl, [pc, #232]	; 3754c <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   37464:	ldr	r2, [r2, #0]
   37466:	str	r2, [r3, #12]
   37468:	mov.w	r2, #0
   3746c:	movs	r6, #0
   3746e:	mov.w	r2, #4096	; 0x1000
   37472:	add	fp, pc
   37474:	movs	r1, #0
   37476:	adds	r3, #12
   37478:	blx	8f98 <memset@plt+0x4>
   3747c:	movs	r2, #1
   3747e:	movs	r3, #0
   37480:	strd	r2, r3, [r9, #-8]
   37484:	movs	r2, #6
   37486:	movs	r3, #0
   37488:	strd	r2, r3, [r4, #8]
   3748c:	strd	r2, r3, [r4, #16]
   37490:	mov.w	r3, #4294967295	; 0xffffffff
   37494:	mov.w	r2, #4294967295	; 0xffffffff
   37498:	strd	r2, r3, [r4, #32]
   3749c:	strd	r2, r3, [r4, #48]	; 0x30
   374a0:	movs	r3, #84	; 0x54
   374a2:	strd	r3, r3, [r4, #56]	; 0x38
   374a6:	mov	r3, r6
   374a8:	ldr	r2, [r4, #64]	; 0x40
   374aa:	cmp	r2, r3
   374ac:	bhi.n	374ee <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   374ae:	mov	r2, r4
   374b0:	mov	r1, sl
   374b2:	mov	r0, r8
   374b4:	mov.w	r3, #4096	; 0x1000
   374b8:	str	r3, [r4, #64]	; 0x40
   374ba:	blx	8d48 <ioctl@plt>
   374be:	adds	r0, #1
   374c0:	beq.n	37530 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   374c2:	ldr	r3, [r4, #64]	; 0x40
   374c4:	cbnz	r3, 374ea <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   374c6:	blx	8f58 <__errno_location@plt>
   374ca:	movs	r3, #2
   374cc:	str	r3, [r0, #0]
   374ce:	movs	r0, #6
   374d0:	ldr	r1, [pc, #124]	; (37550 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   374d2:	add.w	r3, sp, #4096	; 0x1000
   374d6:	ldr	r2, [pc, #108]	; (37544 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   374d8:	adds	r3, #12
   374da:	add	r1, pc
   374dc:	ldr	r2, [r1, r2]
   374de:	ldr	r1, [r2, #0]
   374e0:	ldr	r2, [r3, #0]
   374e2:	eors	r1, r2
   374e4:	beq.n	37534 <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   374e6:	blx	8c90 <__stack_chk_fail@plt>
   374ea:	movs	r6, #0
   374ec:	mov	r3, r6
   374ee:	add.w	r5, r9, #96	; 0x60
   374f2:	add	r5, r6
   374f4:	ldr	r2, [r5, #24]
   374f6:	cmp	r2, #84	; 0x54
   374f8:	bne.n	37518 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   374fa:	str	r3, [sp, #4]
   374fc:	add.w	r0, r5, #62	; 0x3e
   37500:	ldrh.w	r2, [r5, #59]	; 0x3b
   37504:	mov	r1, fp
   37506:	blx	91b4 <strncmp@plt>
   3750a:	ldr	r3, [sp, #4]
   3750c:	cbnz	r0, 37518 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   3750e:	ldr	r2, [r5, #32]
   37510:	ldr	r3, [r5, #36]	; 0x24
   37512:	strd	r2, r3, [r7]
   37516:	b.n	374d0 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   37518:	ldr	r2, [r5, #28]
   3751a:	adds	r6, #32
   3751c:	adds	r3, #1
   3751e:	add	r6, r2
   37520:	ldrd	r2, r1, [r5, #16]
   37524:	adds	r2, #1
   37526:	adc.w	r1, r1, #0
   3752a:	strd	r2, r1, [r4, #24]
   3752e:	b.n	374a8 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   37530:	movs	r0, #12
   37532:	b.n	374d0 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   37534:	add.w	sp, sp, #4096	; 0x1000
   37538:	add	sp, #20
   3753a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3753e:	nop
   37540:	subs	r0, #208	; 0xd0
   37542:	movs	r3, r0
   37544:	lsls	r0, r1, #10
   37546:	movs	r0, r0
   37548:	ldrb	r7, [r3, #31]
   3754a:	movs	r0, r0
   3754c:	str	r4, [sp, #68]	; 0x44
   3754e:	beq.n	37552 <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   37550:	subs	r0, #62	; 0x3e
   37552:	movs	r3, r0

00037554 <btrfs_util_get_default_subvolume@@Base>:
   37554:	push	{r3, r4, r5, r6, r7, lr}
   37556:	mov	r4, r1
   37558:	movs	r1, #0
   3755a:	blx	8ed4 <open@plt>
   3755e:	adds	r3, r0, #1
   37560:	mov	r6, r0
   37562:	beq.n	37580 <btrfs_util_get_default_subvolume@@Base+0x2c>
   37564:	mov	r1, r4
   37566:	bl	37438 <btrfs_util_get_default_subvolume_fd@@Base>
   3756a:	mov	r4, r0
   3756c:	blx	8f58 <__errno_location@plt>
   37570:	ldr	r7, [r0, #0]
   37572:	mov	r5, r0
   37574:	mov	r0, r6
   37576:	blx	91e4 <close@plt>
   3757a:	str	r7, [r5, #0]
   3757c:	mov	r0, r4
   3757e:	pop	{r3, r4, r5, r6, r7, pc}
   37580:	movs	r4, #7
   37582:	b.n	3757c <btrfs_util_get_default_subvolume@@Base+0x28>

00037584 <btrfs_util_set_default_subvolume_fd@@Base>:
   37584:	push	{r0, r1, r4, lr}
   37586:	mov	r4, r0
   37588:	strd	r2, r3, [sp]
   3758c:	orrs	r3, r2
   3758e:	beq.n	375a6 <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   37590:	ldr	r1, [pc, #40]	; (375bc <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   37592:	mov	r2, sp
   37594:	mov	r0, r4
   37596:	blx	8d48 <ioctl@plt>
   3759a:	adds	r3, r0, #1
   3759c:	ite	ne
   3759e:	movne	r0, #0
   375a0:	moveq	r0, #19
   375a2:	add	sp, #8
   375a4:	pop	{r4, pc}
   375a6:	bl	36d2c <btrfs_util_is_subvolume_fd@@Base>
   375aa:	cmp	r0, #0
   375ac:	bne.n	375a2 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   375ae:	mov	r1, sp
   375b0:	mov	r0, r4
   375b2:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   375b6:	cmp	r0, #0
   375b8:	beq.n	37590 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   375ba:	b.n	375a2 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   375bc:	str	r4, [sp, #76]	; 0x4c
   375be:	ands	r0, r1

000375c0 <btrfs_util_set_default_subvolume@@Base>:
   375c0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   375c2:	movs	r1, #0
   375c4:	strd	r3, r2, [sp]
   375c8:	blx	8ed4 <open@plt>
   375cc:	adds	r3, r0, #1
   375ce:	mov	r6, r0
   375d0:	beq.n	375f2 <btrfs_util_set_default_subvolume@@Base+0x32>
   375d2:	ldrd	r3, r2, [sp]
   375d6:	bl	37584 <btrfs_util_set_default_subvolume_fd@@Base>
   375da:	mov	r4, r0
   375dc:	blx	8f58 <__errno_location@plt>
   375e0:	ldr	r7, [r0, #0]
   375e2:	mov	r5, r0
   375e4:	mov	r0, r6
   375e6:	blx	91e4 <close@plt>
   375ea:	str	r7, [r5, #0]
   375ec:	mov	r0, r4
   375ee:	add	sp, #12
   375f0:	pop	{r4, r5, r6, r7, pc}
   375f2:	movs	r4, #7
   375f4:	b.n	375ec <btrfs_util_set_default_subvolume@@Base+0x2c>

000375f6 <btrfs_util_create_subvolume_fd@@Base>:
   375f6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   375fa:	sub.w	sp, sp, #4096	; 0x1000
   375fe:	sub	sp, #12
   37600:	mov	r8, r1
   37602:	ldr	r1, [pc, #232]	; (376ec <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   37604:	mov	r9, r2
   37606:	mov	r4, r3
   37608:	ldr	r2, [pc, #228]	; (376f0 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   3760a:	add.w	r3, sp, #4128	; 0x1020
   3760e:	add	r1, pc
   37610:	adds	r3, #8
   37612:	mov	r5, sp
   37614:	ldr	r2, [r1, r2]
   37616:	mov	r7, r0
   37618:	ldr	r6, [r3, #0]
   3761a:	add.w	r3, sp, #4096	; 0x1000
   3761e:	ldr	r2, [r2, #0]
   37620:	str	r2, [r3, #4]
   37622:	mov.w	r2, #0
   37626:	movs	r1, #0
   37628:	mov.w	r2, #4096	; 0x1000
   3762c:	mov	r0, r5
   3762e:	adds	r3, #4
   37630:	blx	8f98 <memset@plt+0x4>
   37634:	cmp.w	r9, #0
   37638:	beq.n	3765e <btrfs_util_create_subvolume_fd@@Base+0x68>
   3763a:	blx	8f58 <__errno_location@plt>
   3763e:	movs	r3, #22
   37640:	str	r3, [r0, #0]
   37642:	movs	r0, #3
   37644:	ldr	r1, [pc, #172]	; (376f4 <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   37646:	add.w	r3, sp, #4096	; 0x1000
   3764a:	ldr	r2, [pc, #164]	; (376f0 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   3764c:	adds	r3, #4
   3764e:	add	r1, pc
   37650:	ldr	r2, [r1, r2]
   37652:	ldr	r1, [r2, #0]
   37654:	ldr	r2, [r3, #0]
   37656:	eors	r1, r2
   37658:	beq.n	376de <btrfs_util_create_subvolume_fd@@Base+0xe8>
   3765a:	blx	8c90 <__stack_chk_fail@plt>
   3765e:	cbz	r4, 37668 <btrfs_util_create_subvolume_fd@@Base+0x72>
   37660:	movs	r2, #1
   37662:	movs	r3, #0
   37664:	strd	r2, r3, [r5, #16]
   37668:	cbz	r6, 3768a <btrfs_util_create_subvolume_fd@@Base+0x94>
   3766a:	ldr	r3, [r5, #16]
   3766c:	str	r6, [r5, #32]
   3766e:	orr.w	r3, r3, #4
   37672:	str	r3, [r5, #16]
   37674:	ldrd	r3, r2, [r6, #8]
   37678:	adds	r3, #9
   3767a:	adc.w	r2, r2, #0
   3767e:	lsls	r2, r2, #3
   37680:	orr.w	r2, r2, r3, lsr #29
   37684:	lsls	r3, r3, #3
   37686:	strd	r3, r2, [r5, #24]
   3768a:	mov	r0, r8
   3768c:	blx	8f1c <strlen@plt>
   37690:	movw	r3, #4039	; 0xfc7
   37694:	cmp	r0, r3
   37696:	mov	r6, r0
   37698:	bls.n	376a2 <btrfs_util_create_subvolume_fd@@Base+0xac>
   3769a:	blx	8f58 <__errno_location@plt>
   3769e:	movs	r3, #36	; 0x24
   376a0:	b.n	37640 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   376a2:	mov	r2, r0
   376a4:	mov	r1, r8
   376a6:	movw	r3, #4040	; 0xfc8
   376aa:	add	r0, sp, #56	; 0x38
   376ac:	add	r6, r5
   376ae:	blx	8d2c <__memcpy_chk@plt>
   376b2:	ldr	r1, [pc, #52]	; (376e8 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   376b4:	mov	r2, r5
   376b6:	mov	r0, r7
   376b8:	mov.w	r8, #0
   376bc:	strb.w	r8, [r6, #56]	; 0x38
   376c0:	blx	8d48 <ioctl@plt>
   376c4:	adds	r0, #1
   376c6:	beq.n	376d6 <btrfs_util_create_subvolume_fd@@Base+0xe0>
   376c8:	cbz	r4, 376da <btrfs_util_create_subvolume_fd@@Base+0xe4>
   376ca:	ldrd	r2, r3, [r5, #8]
   376ce:	mov	r0, r8
   376d0:	strd	r2, r3, [r4]
   376d4:	b.n	37644 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   376d6:	movs	r0, #16
   376d8:	b.n	37644 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   376da:	mov	r0, r4
   376dc:	b.n	37644 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   376de:	add.w	sp, sp, #4096	; 0x1000
   376e2:	add	sp, #12
   376e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   376e8:	str	r4, [sp, #96]	; 0x60
   376ea:	str	r0, [r0, r0]
   376ec:	adds	r7, #10
   376ee:	movs	r3, r0
   376f0:	lsls	r0, r1, #10
   376f2:	movs	r0, r0
   376f4:	adds	r6, #202	; 0xca
   376f6:	movs	r3, r0

000376f8 <btrfs_util_create_subvolume@@Base>:
   376f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   376fc:	mov	r7, r2
   376fe:	ldr	r2, [pc, #120]	; (37778 <btrfs_util_create_subvolume@@Base+0x80>)
   37700:	mov	r8, r3
   37702:	ldr	r3, [pc, #120]	; (3777c <btrfs_util_create_subvolume@@Base+0x84>)
   37704:	subw	sp, sp, #4060	; 0xfdc
   37708:	add	r2, pc
   3770a:	add.w	r9, sp, #12
   3770e:	add	r6, sp, #8
   37710:	mov	r5, r1
   37712:	ldr	r3, [r2, r3]
   37714:	mov	r1, r0
   37716:	mvn.w	r0, #99	; 0x63
   3771a:	mov	r2, r9
   3771c:	ldr	r3, [r3, #0]
   3771e:	str.w	r3, [sp, #4052]	; 0xfd4
   37722:	mov.w	r3, #0
   37726:	movw	r3, #4040	; 0xfc8
   3772a:	str	r6, [sp, #0]
   3772c:	bl	366e0 <print_all_devices@@Base+0x160>
   37730:	mov	r4, r0
   37732:	cbnz	r0, 37756 <btrfs_util_create_subvolume@@Base+0x5e>
   37734:	mov	r3, r7
   37736:	mov	r2, r5
   37738:	mov	r1, r9
   3773a:	str.w	r8, [sp]
   3773e:	ldr	r0, [r6, #0]
   37740:	bl	375f6 <btrfs_util_create_subvolume_fd@@Base>
   37744:	mov	r4, r0
   37746:	blx	8f58 <__errno_location@plt>
   3774a:	ldr	r7, [r0, #0]
   3774c:	mov	r5, r0
   3774e:	ldr	r0, [r6, #0]
   37750:	blx	91e4 <close@plt>
   37754:	str	r7, [r5, #0]
   37756:	ldr	r2, [pc, #40]	; (37780 <btrfs_util_create_subvolume@@Base+0x88>)
   37758:	ldr	r3, [pc, #32]	; (3777c <btrfs_util_create_subvolume@@Base+0x84>)
   3775a:	add	r2, pc
   3775c:	ldr	r3, [r2, r3]
   3775e:	ldr	r2, [r3, #0]
   37760:	ldr.w	r3, [sp, #4052]	; 0xfd4
   37764:	eors	r2, r3
   37766:	beq.n	3776c <btrfs_util_create_subvolume@@Base+0x74>
   37768:	blx	8c90 <__stack_chk_fail@plt>
   3776c:	mov	r0, r4
   3776e:	addw	sp, sp, #4060	; 0xfdc
   37772:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   37776:	nop
   37778:	adds	r6, #16
   3777a:	movs	r3, r0
   3777c:	lsls	r0, r1, #10
   3777e:	movs	r0, r0
   37780:	adds	r5, #190	; 0xbe
   37782:	movs	r3, r0

00037784 <btrfs_util_create_subvolume_iterator_fd@@Base>:
   37784:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   37788:	mov	r7, r0
   3778a:	ldr.w	r8, [sp, #40]	; 0x28
   3778e:	strd	r2, r3, [sp, #8]
   37792:	bics.w	r1, r8, #1
   37796:	beq.n	377aa <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   37798:	blx	8f58 <__errno_location@plt>
   3779c:	movs	r5, #3
   3779e:	movs	r3, #22
   377a0:	str	r3, [r0, #0]
   377a2:	mov	r0, r5
   377a4:	add	sp, #16
   377a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   377aa:	orrs	r3, r2
   377ac:	bne.n	377d0 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   377ae:	blx	8ce8 <geteuid@plt>
   377b2:	ldrd	r2, r3, [sp, #8]
   377b6:	orrs	r3, r2
   377b8:	clz	r6, r0
   377bc:	mov.w	r6, r6, lsr #5
   377c0:	beq.n	377d4 <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   377c2:	movs	r0, #36	; 0x24
   377c4:	blx	8e40 <malloc@plt+0x4>
   377c8:	mov	r4, r0
   377ca:	cbnz	r0, 377f0 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   377cc:	movs	r5, #2
   377ce:	b.n	377a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   377d0:	movs	r6, #1
   377d2:	b.n	377c2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   377d4:	mov	r0, r7
   377d6:	bl	36d2c <btrfs_util_is_subvolume_fd@@Base>
   377da:	mov	r5, r0
   377dc:	cmp	r0, #0
   377de:	bne.n	377a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   377e0:	add	r1, sp, #8
   377e2:	mov	r0, r7
   377e4:	bl	36dc0 <btrfs_util_subvolume_id_fd@@Base>
   377e8:	mov	r5, r0
   377ea:	cmp	r0, #0
   377ec:	beq.n	377c2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   377ee:	b.n	377a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   377f0:	movs	r3, #4
   377f2:	strd	r7, r7, [r0, #4]
   377f6:	str.w	r8, [r0, #12]
   377fa:	movs	r5, #0
   377fc:	strb	r6, [r0, #0]
   377fe:	strd	r5, r3, [r0, #20]
   37802:	movw	r0, #16448	; 0x4040
   37806:	blx	8e40 <malloc@plt+0x4>
   3780a:	str	r0, [r4, #16]
   3780c:	cbz	r0, 3784a <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   3780e:	mov.w	r0, #256	; 0x100
   37812:	str	r0, [r4, #32]
   37814:	blx	8e40 <malloc@plt+0x4>
   37818:	str	r0, [r4, #28]
   3781a:	cbz	r0, 37846 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   3781c:	str	r5, [sp, #0]
   3781e:	mov	r0, r4
   37820:	ldrd	r2, r3, [sp, #8]
   37824:	bl	36f2c <btrfs_util_subvolume_id@@Base+0xe0>
   37828:	mov	r5, r0
   3782a:	cbz	r0, 37840 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   3782c:	ldr	r0, [r4, #28]
   3782e:	blx	8b84 <free@plt+0x4>
   37832:	ldr	r0, [r4, #16]
   37834:	blx	8b84 <free@plt+0x4>
   37838:	mov	r0, r4
   3783a:	blx	8b84 <free@plt+0x4>
   3783e:	b.n	377a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   37840:	ldr	r3, [sp, #44]	; 0x2c
   37842:	str	r4, [r3, #0]
   37844:	b.n	377a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   37846:	movs	r5, #2
   37848:	b.n	37832 <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   3784a:	movs	r5, #2
   3784c:	b.n	37838 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

0003784e <btrfs_util_create_subvolume_iterator@@Base>:
   3784e:	push	{r4, r5, r6, r7, lr}
   37850:	sub	sp, #20
   37852:	movs	r1, #0
   37854:	strd	r3, r2, [sp, #8]
   37858:	ldr	r5, [sp, #44]	; 0x2c
   3785a:	blx	8ed4 <open@plt>
   3785e:	adds	r3, r0, #1
   37860:	mov	r6, r0
   37862:	beq.n	37898 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   37864:	ldr	r1, [sp, #40]	; 0x28
   37866:	ldrd	r3, r2, [sp, #8]
   3786a:	str	r5, [sp, #4]
   3786c:	str	r1, [sp, #0]
   3786e:	bl	37784 <btrfs_util_create_subvolume_iterator_fd@@Base>
   37872:	mov	r4, r0
   37874:	cbz	r0, 3788c <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   37876:	blx	8f58 <__errno_location@plt>
   3787a:	ldr	r7, [r0, #0]
   3787c:	mov	r5, r0
   3787e:	mov	r0, r6
   37880:	blx	91e4 <close@plt>
   37884:	str	r7, [r5, #0]
   37886:	mov	r0, r4
   37888:	add	sp, #20
   3788a:	pop	{r4, r5, r6, r7, pc}
   3788c:	ldr	r2, [r5, #0]
   3788e:	ldr	r3, [r2, #12]
   37890:	orr.w	r3, r3, #1073741824	; 0x40000000
   37894:	str	r3, [r2, #12]
   37896:	b.n	37886 <btrfs_util_create_subvolume_iterator@@Base+0x38>
   37898:	movs	r4, #7
   3789a:	b.n	37886 <btrfs_util_create_subvolume_iterator@@Base+0x38>

0003789c <btrfs_util_destroy_subvolume_iterator@@Base>:
   3789c:	push	{r3, r4, r5, r6, r7, lr}
   3789e:	mov	r4, r0
   378a0:	cbz	r0, 378e6 <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   378a2:	ldr	r0, [r0, #28]
   378a4:	blx	8b84 <free@plt+0x4>
   378a8:	ldr	r0, [r4, #16]
   378aa:	blx	8b84 <free@plt+0x4>
   378ae:	ldrd	r3, r6, [r4, #4]
   378b2:	cmp	r6, r3
   378b4:	beq.n	378c6 <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   378b6:	blx	8f58 <__errno_location@plt>
   378ba:	ldr	r7, [r0, #0]
   378bc:	mov	r5, r0
   378be:	mov	r0, r6
   378c0:	blx	91e4 <close@plt>
   378c4:	str	r7, [r5, #0]
   378c6:	ldr	r3, [r4, #12]
   378c8:	lsls	r3, r3, #1
   378ca:	bpl.n	378dc <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   378cc:	blx	8f58 <__errno_location@plt>
   378d0:	ldr	r6, [r0, #0]
   378d2:	mov	r5, r0
   378d4:	ldr	r0, [r4, #4]
   378d6:	blx	91e4 <close@plt>
   378da:	str	r6, [r5, #0]
   378dc:	mov	r0, r4
   378de:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   378e2:	b.w	8b80 <free@plt>
   378e6:	pop	{r3, r4, r5, r6, r7, pc}

000378e8 <btrfs_util_subvolume_iterator_fd@@Base>:
   378e8:	ldr	r0, [r0, #4]
   378ea:	bx	lr

000378ec <btrfs_util_subvolume_iterator_next@@Base>:
   378ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   378f0:	mov	r5, r2
   378f2:	ldr	r2, [pc, #696]	; (37bac <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   378f4:	sub	sp, #52	; 0x34
   378f6:	ldr	r3, [pc, #696]	; (37bb0 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   378f8:	mov	r4, r0
   378fa:	add	r2, pc
   378fc:	mov	r8, r1
   378fe:	ldr	r3, [r2, r3]
   37900:	ldr	r3, [r3, #0]
   37902:	str	r3, [sp, #44]	; 0x2c
   37904:	mov.w	r3, #0
   37908:	ldrb	r3, [r0, #0]
   3790a:	cmp	r3, #0
   3790c:	beq.n	379ce <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   3790e:	movw	r6, #4112	; 0x1010
   37912:	movw	sl, #4104	; 0x1008
   37916:	ldr	r3, [r4, #20]
   37918:	cmp	r3, #0
   3791a:	beq.w	37b8c <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   3791e:	muls	r3, r6
   37920:	ldr	r2, [r4, #16]
   37922:	sub.w	r3, r3, #4096	; 0x1000
   37926:	subs	r3, #16
   37928:	add.w	fp, r2, r3
   3792c:	add.w	r7, fp, sl
   37930:	ldr.w	r1, [fp, sl]
   37934:	ldr.w	r2, [fp, #64]	; 0x40
   37938:	cmp	r1, r2
   3793a:	bcc.w	37a7e <btrfs_util_subvolume_iterator_next@@Base+0x192>
   3793e:	mov.w	r2, #4096	; 0x1000
   37942:	ldr	r1, [pc, #608]	; (37ba4 <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   37944:	str.w	r2, [fp, #64]	; 0x40
   37948:	mov	r2, fp
   3794a:	ldr	r0, [r4, #4]
   3794c:	blx	8d48 <ioctl@plt>
   37950:	adds	r0, #1
   37952:	beq.w	37b16 <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   37956:	add.w	r1, fp, #4096	; 0x1000
   3795a:	movs	r2, #0
   3795c:	str	r2, [r7, #0]
   3795e:	str	r2, [r1, #0]
   37960:	ldr.w	r2, [fp, #64]	; 0x40
   37964:	cmp	r2, #0
   37966:	bne.n	37916 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   37968:	mov	r0, r4
   3796a:	bl	36c04 <print_all_devices@@Base+0x684>
   3796e:	ldr	r2, [r4, #12]
   37970:	lsls	r0, r2, #31
   37972:	bpl.n	37916 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   37974:	ldr	r2, [r4, #20]
   37976:	cmp	r2, #0
   37978:	beq.n	37916 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   3797a:	cmp.w	r8, #0
   3797e:	beq.n	379ac <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   37980:	movw	r7, #4108	; 0x100c
   37984:	ldr.w	r9, [fp, r7]
   37988:	add.w	r0, r9, #1
   3798c:	blx	8e40 <malloc@plt+0x4>
   37990:	mov	r6, r0
   37992:	str.w	r0, [r8]
   37996:	cmp	r0, #0
   37998:	beq.w	37b94 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   3799c:	ldr	r1, [r4, #28]
   3799e:	mov	r2, r9
   379a0:	blx	8bdc <memcpy@plt+0x4>
   379a4:	ldr.w	r2, [fp, r7]
   379a8:	movs	r1, #0
   379aa:	strb	r1, [r6, r2]
   379ac:	cbz	r5, 379b6 <btrfs_util_subvolume_iterator_next@@Base+0xca>
   379ae:	ldrd	r2, r3, [fp, #8]
   379b2:	strd	r2, r3, [r5]
   379b6:	movs	r3, #0
   379b8:	ldr	r1, [pc, #504]	; (37bb4 <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   379ba:	ldr	r2, [pc, #500]	; (37bb0 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   379bc:	add	r1, pc
   379be:	ldr	r2, [r1, r2]
   379c0:	ldr	r1, [r2, #0]
   379c2:	ldr	r2, [sp, #44]	; 0x2c
   379c4:	eors	r1, r2
   379c6:	beq.w	37b9c <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   379ca:	blx	8c90 <__stack_chk_fail@plt>
   379ce:	movw	r9, #4112	; 0x1010
   379d2:	movw	sl, #4104	; 0x1008
   379d6:	ldr	r3, [r4, #20]
   379d8:	cmp	r3, #0
   379da:	beq.w	37b8c <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   379de:	mul.w	fp, r9, r3
   379e2:	ldr	r3, [r4, #16]
   379e4:	sub.w	fp, fp, #4096	; 0x1000
   379e8:	sub.w	fp, fp, #16
   379ec:	add	fp, r3
   379ee:	add.w	r6, fp, #4096	; 0x1000
   379f2:	add.w	r7, fp, sl
   379f6:	ldr.w	r1, [fp, sl]
   379fa:	ldrb	r3, [r6, #0]
   379fc:	cmp	r1, r3
   379fe:	bcc.w	37b1a <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   37a02:	ldr	r1, [pc, #420]	; (37ba8 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   37a04:	add.w	r2, fp, #8
   37a08:	ldr	r0, [r4, #8]
   37a0a:	blx	8d48 <ioctl@plt>
   37a0e:	adds	r0, #1
   37a10:	bne.n	37a1e <btrfs_util_subvolume_iterator_next@@Base+0x132>
   37a12:	blx	8f58 <__errno_location@plt>
   37a16:	ldr	r3, [r0, #0]
   37a18:	cmp	r3, #75	; 0x4b
   37a1a:	bne.w	37b90 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   37a1e:	movs	r3, #0
   37a20:	str	r3, [r7, #0]
   37a22:	ldrb	r3, [r6, #0]
   37a24:	cmp	r3, #0
   37a26:	bne.n	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37a28:	mov	r0, r4
   37a2a:	bl	36c04 <print_all_devices@@Base+0x684>
   37a2e:	mov	r3, r0
   37a30:	cmp	r0, #0
   37a32:	bne.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37a34:	ldr	r3, [r4, #12]
   37a36:	lsls	r2, r3, #31
   37a38:	bpl.n	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37a3a:	ldr	r3, [r4, #20]
   37a3c:	cmp	r3, #0
   37a3e:	beq.n	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37a40:	cmp.w	r8, #0
   37a44:	beq.n	37a72 <btrfs_util_subvolume_iterator_next@@Base+0x186>
   37a46:	movw	r7, #4108	; 0x100c
   37a4a:	ldr.w	r9, [fp, r7]
   37a4e:	add.w	r0, r9, #1
   37a52:	blx	8e40 <malloc@plt+0x4>
   37a56:	mov	r6, r0
   37a58:	str.w	r0, [r8]
   37a5c:	cmp	r0, #0
   37a5e:	beq.w	37b94 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   37a62:	mov	r2, r9
   37a64:	ldr	r1, [r4, #28]
   37a66:	blx	8bdc <memcpy@plt+0x4>
   37a6a:	ldr.w	r3, [fp, r7]
   37a6e:	movs	r2, #0
   37a70:	strb	r2, [r6, r3]
   37a72:	cmp	r5, #0
   37a74:	beq.w	37b98 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   37a78:	ldrd	r2, r3, [fp]
   37a7c:	b.n	379b2 <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   37a7e:	add.w	r0, fp, #4096	; 0x1000
   37a82:	add.w	ip, fp, #104	; 0x68
   37a86:	adds	r1, #1
   37a88:	add	r7, sp, #32
   37a8a:	ldr	r2, [r0, #0]
   37a8c:	str.w	r1, [fp, sl]
   37a90:	add	ip, r2
   37a92:	adds	r2, #32
   37a94:	ldr.w	r1, [ip, #28]
   37a98:	mov	r9, ip
   37a9a:	add	r2, r1
   37a9c:	str	r2, [r0, #0]
   37a9e:	ldr.w	r0, [r9, #16]!
   37aa2:	mov	r2, r7
   37aa4:	ldr.w	r1, [r9, #4]
   37aa8:	stmia	r2!, {r0, r1}
   37aaa:	adds	r2, r0, #1
   37aac:	ldr	r1, [sp, #36]	; 0x24
   37aae:	adc.w	r1, r1, #0
   37ab2:	strd	r2, r1, [fp, #24]
   37ab6:	ldr.w	r3, [ip, #24]
   37aba:	cmp	r3, #156	; 0x9c
   37abc:	bne.w	37916 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   37ac0:	add	r3, sp, #28
   37ac2:	add.w	r2, ip, #32
   37ac6:	str	r3, [sp, #0]
   37ac8:	mov	r1, ip
   37aca:	add.w	r3, ip, #50	; 0x32
   37ace:	mov	r0, r4
   37ad0:	bl	36a84 <print_all_devices@@Base+0x504>
   37ad4:	mov	r3, r0
   37ad6:	cmp	r0, #0
   37ad8:	bne.w	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37adc:	ldr.w	r0, [r9]
   37ae0:	ldr.w	r1, [r9, #4]
   37ae4:	ldr	r3, [sp, #28]
   37ae6:	stmia	r7!, {r0, r1}
   37ae8:	mov	r0, r4
   37aea:	str	r3, [sp, #0]
   37aec:	ldrd	r2, r3, [sp, #32]
   37af0:	bl	36f2c <btrfs_util_subvolume_id@@Base+0xe0>
   37af4:	mov	r3, r0
   37af6:	cmp	r0, #0
   37af8:	bne.w	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37afc:	ldr	r3, [r4, #12]
   37afe:	lsls	r1, r3, #31
   37b00:	bmi.w	37916 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   37b04:	ldr	r3, [r4, #20]
   37b06:	muls	r6, r3
   37b08:	ldr	r3, [r4, #16]
   37b0a:	sub.w	r6, r6, #4096	; 0x1000
   37b0e:	subs	r6, #16
   37b10:	add.w	fp, r3, r6
   37b14:	b.n	3797a <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   37b16:	movs	r3, #12
   37b18:	b.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b1a:	adds	r1, #1
   37b1c:	mov	r0, r4
   37b1e:	add.w	r3, fp, r1, lsl #4
   37b22:	ldrd	r6, r7, [r3]
   37b26:	ldrd	r2, r3, [r3, #8]
   37b2a:	str.w	r1, [fp, sl]
   37b2e:	add	r1, sp, #32
   37b30:	str	r1, [sp, #8]
   37b32:	strd	r2, r3, [sp]
   37b36:	mov	r2, r6
   37b38:	mov	r3, r7
   37b3a:	bl	36b44 <print_all_devices@@Base+0x5c4>
   37b3e:	str	r0, [sp, #20]
   37b40:	cbz	r0, 37b52 <btrfs_util_subvolume_iterator_next@@Base+0x266>
   37b42:	blx	8f58 <__errno_location@plt>
   37b46:	ldr	r2, [r0, #0]
   37b48:	cmp	r2, #13
   37b4a:	ldr	r3, [sp, #20]
   37b4c:	bne.w	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b50:	b.n	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37b52:	ldr	r3, [sp, #32]
   37b54:	mov	r2, r6
   37b56:	mov	r0, r4
   37b58:	str	r3, [sp, #0]
   37b5a:	mov	r3, r7
   37b5c:	bl	36f2c <btrfs_util_subvolume_id@@Base+0xe0>
   37b60:	str	r0, [sp, #20]
   37b62:	cbz	r0, 37b70 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   37b64:	blx	8f58 <__errno_location@plt>
   37b68:	ldr	r2, [r0, #0]
   37b6a:	cmp	r2, #2
   37b6c:	bne.n	37b48 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   37b6e:	b.n	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37b70:	ldr	r3, [r4, #12]
   37b72:	lsls	r3, r3, #31
   37b74:	bmi.w	379d6 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   37b78:	ldr	r3, [r4, #20]
   37b7a:	mul.w	fp, r9, r3
   37b7e:	ldr	r3, [r4, #16]
   37b80:	sub.w	fp, fp, #4096	; 0x1000
   37b84:	sub.w	fp, fp, #16
   37b88:	add	fp, r3
   37b8a:	b.n	37a40 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   37b8c:	movs	r3, #1
   37b8e:	b.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b90:	movs	r3, #24
   37b92:	b.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b94:	movs	r3, #2
   37b96:	b.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b98:	mov	r3, r5
   37b9a:	b.n	379b8 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   37b9c:	mov	r0, r3
   37b9e:	add	sp, #52	; 0x34
   37ba0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ba4:	str	r4, [sp, #68]	; 0x44
   37ba6:	beq.n	37baa <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   37ba8:	str	r4, [sp, #244]	; 0xf4
   37baa:	beq.n	37bae <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   37bac:	adds	r4, #30
   37bae:	movs	r3, r0
   37bb0:	lsls	r0, r1, #10
   37bb2:	movs	r0, r0
   37bb4:	adds	r3, #92	; 0x5c
   37bb6:	movs	r3, r0

00037bb8 <btrfs_util_create_snapshot_fd2@@Base>:
   37bb8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37bbc:	sub.w	sp, sp, #8192	; 0x2000
   37bc0:	sub	sp, #4
   37bc2:	mov	r6, r3
   37bc4:	add.w	r3, sp, #8192	; 0x2000
   37bc8:	mov	sl, r1
   37bca:	ldr	r1, [pc, #604]	; (37e28 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   37bcc:	adds	r3, #40	; 0x28
   37bce:	mov	r7, r2
   37bd0:	ldr	r5, [r3, #0]
   37bd2:	ldr	r2, [pc, #600]	; (37e2c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   37bd4:	add.w	r3, sp, #8192	; 0x2000
   37bd8:	add	r1, pc
   37bda:	add.w	r8, sp, #64	; 0x40
   37bde:	ldr.w	fp, [r3, #44]	; 0x2c
   37be2:	adds	r3, #44	; 0x2c
   37be4:	ldr	r2, [r1, r2]
   37be6:	add.w	r3, sp, #8160	; 0x1fe0
   37bea:	sub.w	r4, r8, #16
   37bee:	mov	r9, r0
   37bf0:	ldr	r2, [r2, #0]
   37bf2:	str	r2, [r3, #28]
   37bf4:	mov.w	r2, #0
   37bf8:	mov.w	r2, #4096	; 0x1000
   37bfc:	movs	r1, #0
   37bfe:	mov	r0, r4
   37c00:	adds	r3, #28
   37c02:	blx	8f98 <memset@plt+0x4>
   37c06:	mov	r2, r9
   37c08:	asrs	r3, r2, #31
   37c0a:	strd	r2, r3, [r8, #-16]
   37c0e:	bics.w	r3, r6, #3
   37c12:	bne.n	37c18 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   37c14:	cmp	r6, #3
   37c16:	bne.n	37c3e <btrfs_util_create_snapshot_fd2@@Base+0x86>
   37c18:	blx	8f58 <__errno_location@plt>
   37c1c:	movs	r3, #22
   37c1e:	movs	r6, #3
   37c20:	str	r3, [r0, #0]
   37c22:	ldr	r1, [pc, #524]	; (37e30 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   37c24:	add.w	r3, sp, #8160	; 0x1fe0
   37c28:	ldr	r2, [pc, #512]	; (37e2c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   37c2a:	adds	r3, #28
   37c2c:	add	r1, pc
   37c2e:	ldr	r2, [r1, r2]
   37c30:	ldr	r1, [r2, #0]
   37c32:	ldr	r2, [r3, #0]
   37c34:	eors	r1, r2
   37c36:	beq.w	37e16 <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   37c3a:	blx	8c90 <__stack_chk_fail@plt>
   37c3e:	lsls	r2, r6, #30
   37c40:	ittt	mi
   37c42:	movmi	r2, #2
   37c44:	movmi	r3, #0
   37c46:	strdmi	r2, r3, [r4, #16]
   37c4a:	cbz	r5, 37c54 <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   37c4c:	ldr	r3, [r4, #16]
   37c4e:	orr.w	r3, r3, #1
   37c52:	str	r3, [r4, #16]
   37c54:	cmp.w	fp, #0
   37c58:	beq.n	37c7c <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   37c5a:	ldr	r3, [r4, #16]
   37c5c:	str.w	fp, [r4, #32]
   37c60:	orr.w	r3, r3, #4
   37c64:	str	r3, [r4, #16]
   37c66:	ldrd	r3, r2, [fp, #8]
   37c6a:	adds	r3, #9
   37c6c:	adc.w	r2, r2, #0
   37c70:	lsls	r2, r2, #3
   37c72:	orr.w	r2, r2, r3, lsr #29
   37c76:	lsls	r3, r3, #3
   37c78:	strd	r3, r2, [r4, #24]
   37c7c:	mov	r0, r7
   37c7e:	blx	8f1c <strlen@plt>
   37c82:	movw	r3, #4039	; 0xfc7
   37c86:	cmp	r0, r3
   37c88:	mov	fp, r0
   37c8a:	bls.n	37c94 <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   37c8c:	blx	8f58 <__errno_location@plt>
   37c90:	movs	r3, #36	; 0x24
   37c92:	b.n	37c1e <btrfs_util_create_snapshot_fd2@@Base+0x66>
   37c94:	mov	r2, r0
   37c96:	movw	r3, #4040	; 0xfc8
   37c9a:	mov	r1, r7
   37c9c:	add.w	r0, r8, #40	; 0x28
   37ca0:	add	fp, r4
   37ca2:	blx	8d2c <__memcpy_chk@plt>
   37ca6:	ldr	r1, [pc, #380]	; (37e24 <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   37ca8:	mov	r2, r4
   37caa:	mov	r0, sl
   37cac:	movs	r3, #0
   37cae:	strb.w	r3, [fp, #56]	; 0x38
   37cb2:	blx	8d48 <ioctl@plt>
   37cb6:	adds	r0, #1
   37cb8:	beq.w	37e0e <btrfs_util_create_snapshot_fd2@@Base+0x256>
   37cbc:	cbz	r5, 37cc6 <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   37cbe:	ldrd	r2, r3, [r4, #8]
   37cc2:	strd	r2, r3, [r5]
   37cc6:	ands.w	r3, r6, #1
   37cca:	beq.w	37e12 <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   37cce:	mov	r1, r7
   37cd0:	movs	r2, #0
   37cd2:	mov	r0, sl
   37cd4:	blx	8c84 <openat@plt>
   37cd8:	adds	r3, r0, #1
   37cda:	mov	r7, r0
   37cdc:	beq.w	37e0a <btrfs_util_create_snapshot_fd2@@Base+0x252>
   37ce0:	add	r4, sp, #32
   37ce2:	movs	r2, #0
   37ce4:	subs	r3, r4, #4
   37ce6:	mov	r0, r9
   37ce8:	str	r3, [sp, #12]
   37cea:	str	r3, [sp, #4]
   37cec:	movs	r3, #0
   37cee:	str	r3, [sp, #0]
   37cf0:	movs	r3, #0
   37cf2:	bl	37784 <btrfs_util_create_subvolume_iterator_fd@@Base>
   37cf6:	mov	r6, r0
   37cf8:	cbnz	r0, 37d38 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   37cfa:	cmp	r5, #0
   37cfc:	add.w	sl, sp, #36	; 0x24
   37d00:	sub.w	r3, r8, #24
   37d04:	str	r3, [sp, #16]
   37d06:	it	eq
   37d08:	moveq	r3, #0
   37d0a:	str	r3, [sp, #20]
   37d0c:	ldr	r3, [sp, #12]
   37d0e:	movs	r2, #0
   37d10:	mov	r1, r4
   37d12:	ldr	r0, [r3, #0]
   37d14:	bl	378ec <btrfs_util_subvolume_iterator_next@@Base>
   37d18:	mov	fp, r0
   37d1a:	blx	8f58 <__errno_location@plt>
   37d1e:	mov	r6, r0
   37d20:	cmp.w	fp, #0
   37d24:	beq.n	37d4a <btrfs_util_create_snapshot_fd2@@Base+0x192>
   37d26:	cmp.w	fp, #1
   37d2a:	it	eq
   37d2c:	moveq.w	fp, #0
   37d30:	ldr	r0, [sp, #28]
   37d32:	mov	r6, fp
   37d34:	bl	3789c <btrfs_util_destroy_subvolume_iterator@@Base>
   37d38:	blx	8f58 <__errno_location@plt>
   37d3c:	ldr	r5, [r0, #0]
   37d3e:	mov	r4, r0
   37d40:	mov	r0, r7
   37d42:	blx	91e4 <close@plt>
   37d46:	str	r5, [r4, #0]
   37d48:	b.n	37c22 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   37d4a:	ldr	r1, [r4, #0]
   37d4c:	mov.w	r2, #512	; 0x200
   37d50:	mov	r0, r7
   37d52:	blx	8b64 <unlinkat@plt>
   37d56:	adds	r0, #1
   37d58:	bne.n	37d66 <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   37d5a:	ldr	r0, [r4, #0]
   37d5c:	mov.w	fp, #8
   37d60:	blx	8b84 <free@plt+0x4>
   37d64:	b.n	37d30 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   37d66:	ldr	r1, [r4, #0]
   37d68:	mov	r2, fp
   37d6a:	mov	r0, r9
   37d6c:	blx	8c84 <openat@plt>
   37d70:	cmp.w	r0, #4294967295	; 0xffffffff
   37d74:	mov	r8, r0
   37d76:	bne.n	37d84 <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   37d78:	ldr	r0, [r4, #0]
   37d7a:	mov.w	fp, #7
   37d7e:	blx	8b84 <free@plt+0x4>
   37d82:	b.n	37d30 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   37d84:	add.w	r2, sp, #4128	; 0x1020
   37d88:	movw	r3, #4040	; 0xfc8
   37d8c:	adds	r2, #20
   37d8e:	str.w	sl, [sp]
   37d92:	mov	r0, r7
   37d94:	ldr	r1, [r4, #0]
   37d96:	str	r2, [sp, #8]
   37d98:	bl	366e0 <print_all_devices@@Base+0x160>
   37d9c:	mov	fp, r0
   37d9e:	ldr	r0, [r4, #0]
   37da0:	blx	8b84 <free@plt+0x4>
   37da4:	ldr	r2, [sp, #8]
   37da6:	cmp.w	fp, #0
   37daa:	beq.n	37db8 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   37dac:	ldr	r4, [r6, #0]
   37dae:	mov	r0, r8
   37db0:	blx	91e4 <close@plt>
   37db4:	str	r4, [r6, #0]
   37db6:	b.n	37d30 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   37db8:	ldr	r3, [sp, #20]
   37dba:	mov	r0, r8
   37dbc:	str.w	fp, [sp, #4]
   37dc0:	str	r3, [sp, #0]
   37dc2:	mov	r3, fp
   37dc4:	ldr.w	r1, [sl]
   37dc8:	bl	37bb8 <btrfs_util_create_snapshot_fd2@@Base>
   37dcc:	ldr	r3, [r6, #0]
   37dce:	str	r3, [sp, #8]
   37dd0:	mov	fp, r0
   37dd2:	mov	r0, r8
   37dd4:	blx	91e4 <close@plt>
   37dd8:	ldr	r3, [sp, #8]
   37dda:	ldr.w	r0, [sl]
   37dde:	str	r3, [r6, #0]
   37de0:	blx	91e4 <close@plt>
   37de4:	ldr	r3, [sp, #8]
   37de6:	str	r3, [r6, #0]
   37de8:	cmp.w	fp, #0
   37dec:	bne.n	37d30 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   37dee:	cmp	r5, #0
   37df0:	beq.n	37d0c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   37df2:	ldr	r3, [sp, #16]
   37df4:	ldrd	r0, r1, [r3]
   37df8:	ldrd	r2, r3, [r5]
   37dfc:	cmp	r3, r1
   37dfe:	it	eq
   37e00:	cmpeq	r2, r0
   37e02:	bcs.n	37d0c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   37e04:	strd	r0, r1, [r5]
   37e08:	b.n	37d0c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   37e0a:	movs	r6, #7
   37e0c:	b.n	37c22 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   37e0e:	movs	r6, #16
   37e10:	b.n	37c22 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   37e12:	mov	r6, r3
   37e14:	b.n	37c22 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   37e16:	mov	r0, r6
   37e18:	add.w	sp, sp, #8192	; 0x2000
   37e1c:	add	sp, #4
   37e1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37e22:	nop
   37e24:	str	r4, [sp, #92]	; 0x5c
   37e26:	str	r0, [r0, r0]
   37e28:	adds	r1, #64	; 0x40
   37e2a:	movs	r3, r0
   37e2c:	lsls	r0, r1, #10
   37e2e:	movs	r0, r0
   37e30:	adds	r0, #236	; 0xec
   37e32:	movs	r3, r0

00037e34 <btrfs_util_create_snapshot_fd@@Base>:
   37e34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   37e38:	subw	sp, sp, #4068	; 0xfe4
   37e3c:	mov	r8, r3
   37e3e:	add.w	r3, sp, #4096	; 0x1000
   37e42:	mov	r7, r2
   37e44:	ldr	r2, [pc, #112]	; (37eb8 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   37e46:	ldr.w	r9, [r3]
   37e4a:	add	r6, sp, #16
   37e4c:	ldr	r3, [pc, #108]	; (37ebc <btrfs_util_create_snapshot_fd@@Base+0x88>)
   37e4e:	add	r2, pc
   37e50:	mov	r5, r0
   37e52:	mvn.w	r0, #99	; 0x63
   37e56:	ldr	r3, [r2, r3]
   37e58:	add	r2, sp, #20
   37e5a:	ldr	r3, [r3, #0]
   37e5c:	str.w	r3, [sp, #4060]	; 0xfdc
   37e60:	mov.w	r3, #0
   37e64:	movw	r3, #4040	; 0xfc8
   37e68:	str	r6, [sp, #0]
   37e6a:	str	r2, [sp, #12]
   37e6c:	bl	366e0 <print_all_devices@@Base+0x160>
   37e70:	mov	r4, r0
   37e72:	cbnz	r0, 37e96 <btrfs_util_create_snapshot_fd@@Base+0x62>
   37e74:	mov	r3, r7
   37e76:	ldr	r2, [sp, #12]
   37e78:	mov	r0, r5
   37e7a:	strd	r8, r9, [sp]
   37e7e:	ldr	r1, [r6, #0]
   37e80:	bl	37bb8 <btrfs_util_create_snapshot_fd2@@Base>
   37e84:	mov	r4, r0
   37e86:	blx	8f58 <__errno_location@plt>
   37e8a:	ldr	r7, [r0, #0]
   37e8c:	mov	r5, r0
   37e8e:	ldr	r0, [r6, #0]
   37e90:	blx	91e4 <close@plt>
   37e94:	str	r7, [r5, #0]
   37e96:	ldr	r2, [pc, #40]	; (37ec0 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   37e98:	ldr	r3, [pc, #32]	; (37ebc <btrfs_util_create_snapshot_fd@@Base+0x88>)
   37e9a:	add	r2, pc
   37e9c:	ldr	r3, [r2, r3]
   37e9e:	ldr	r2, [r3, #0]
   37ea0:	ldr.w	r3, [sp, #4060]	; 0xfdc
   37ea4:	eors	r2, r3
   37ea6:	beq.n	37eac <btrfs_util_create_snapshot_fd@@Base+0x78>
   37ea8:	blx	8c90 <__stack_chk_fail@plt>
   37eac:	mov	r0, r4
   37eae:	addw	sp, sp, #4068	; 0xfe4
   37eb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   37eb6:	nop
   37eb8:	cmp	r6, #202	; 0xca
   37eba:	movs	r3, r0
   37ebc:	lsls	r0, r1, #10
   37ebe:	movs	r0, r0
   37ec0:	cmp	r6, #126	; 0x7e
   37ec2:	movs	r3, r0

00037ec4 <btrfs_util_create_snapshot@@Base>:
   37ec4:	push	{r4, r5, r6, r7, lr}
   37ec6:	sub	sp, #20
   37ec8:	mov	r4, r1
   37eca:	movs	r1, #0
   37ecc:	strd	r3, r2, [sp, #8]
   37ed0:	blx	8ed4 <open@plt>
   37ed4:	adds	r3, r0, #1
   37ed6:	mov	r6, r0
   37ed8:	beq.n	37f00 <btrfs_util_create_snapshot@@Base+0x3c>
   37eda:	ldr	r1, [sp, #40]	; 0x28
   37edc:	ldrd	r3, r2, [sp, #8]
   37ee0:	str	r1, [sp, #0]
   37ee2:	mov	r1, r4
   37ee4:	bl	37e34 <btrfs_util_create_snapshot_fd@@Base>
   37ee8:	mov	r4, r0
   37eea:	blx	8f58 <__errno_location@plt>
   37eee:	ldr	r7, [r0, #0]
   37ef0:	mov	r5, r0
   37ef2:	mov	r0, r6
   37ef4:	blx	91e4 <close@plt>
   37ef8:	str	r7, [r5, #0]
   37efa:	mov	r0, r4
   37efc:	add	sp, #20
   37efe:	pop	{r4, r5, r6, r7, pc}
   37f00:	movs	r4, #7
   37f02:	b.n	37efa <btrfs_util_create_snapshot@@Base+0x36>

00037f04 <btrfs_util_delete_subvolume_fd@@Base>:
   37f04:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37f08:	mov	r5, r1
   37f0a:	ldr	r1, [pc, #384]	; (3808c <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   37f0c:	mov	r6, r2
   37f0e:	ldr	r2, [pc, #384]	; (38090 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   37f10:	sub.w	sp, sp, #8192	; 0x2000
   37f14:	add	r1, pc
   37f16:	sub	sp, #36	; 0x24
   37f18:	add.w	r3, sp, #8192	; 0x2000
   37f1c:	add	r4, sp, #32
   37f1e:	ldr	r2, [r1, r2]
   37f20:	mov	r7, r0
   37f22:	mov	r0, r4
   37f24:	movs	r1, #0
   37f26:	ldr	r2, [r2, #0]
   37f28:	str	r2, [r3, #28]
   37f2a:	mov.w	r2, #0
   37f2e:	mov.w	r2, #4096	; 0x1000
   37f32:	adds	r3, #28
   37f34:	blx	8f98 <memset@plt+0x4>
   37f38:	bics.w	r2, r6, #1
   37f3c:	beq.n	37f4c <btrfs_util_delete_subvolume_fd@@Base+0x48>
   37f3e:	blx	8f58 <__errno_location@plt>
   37f42:	movs	r3, #22
   37f44:	mov.w	r8, #3
   37f48:	str	r3, [r0, #0]
   37f4a:	b.n	37f78 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   37f4c:	cbnz	r6, 37f66 <btrfs_util_delete_subvolume_fd@@Base+0x62>
   37f4e:	mov	r0, r5
   37f50:	blx	8f1c <strlen@plt>
   37f54:	movw	r3, #4087	; 0xff7
   37f58:	cmp	r0, r3
   37f5a:	mov	r6, r0
   37f5c:	bls.n	3804c <btrfs_util_delete_subvolume_fd@@Base+0x148>
   37f5e:	blx	8f58 <__errno_location@plt>
   37f62:	movs	r3, #36	; 0x24
   37f64:	b.n	37f44 <btrfs_util_delete_subvolume_fd@@Base+0x40>
   37f66:	mov	r1, r5
   37f68:	mov	r0, r7
   37f6a:	blx	8c84 <openat@plt>
   37f6e:	adds	r3, r0, #1
   37f70:	mov	r6, r0
   37f72:	bne.n	37f92 <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   37f74:	mov.w	r8, #7
   37f78:	ldr	r1, [pc, #280]	; (38094 <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   37f7a:	add.w	r3, sp, #8192	; 0x2000
   37f7e:	ldr	r2, [pc, #272]	; (38090 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   37f80:	adds	r3, #28
   37f82:	add	r1, pc
   37f84:	ldr	r2, [r1, r2]
   37f86:	ldr	r1, [r2, #0]
   37f88:	ldr	r2, [r3, #0]
   37f8a:	eors	r1, r2
   37f8c:	beq.n	3807a <btrfs_util_delete_subvolume_fd@@Base+0x176>
   37f8e:	blx	8c90 <__stack_chk_fail@plt>
   37f92:	sub.w	r3, r4, #12
   37f96:	movs	r2, #0
   37f98:	strd	r3, r3, [sp, #4]
   37f9c:	movs	r3, #1
   37f9e:	str	r3, [sp, #0]
   37fa0:	movs	r3, #0
   37fa2:	bl	37784 <btrfs_util_create_subvolume_iterator_fd@@Base>
   37fa6:	mov	r8, r0
   37fa8:	cbnz	r0, 37fe2 <btrfs_util_delete_subvolume_fd@@Base+0xde>
   37faa:	add.w	sl, sp, #4128	; 0x1020
   37fae:	sub.w	r9, r4, #8
   37fb2:	add.w	sl, sl, #4
   37fb6:	ldr	r3, [sp, #8]
   37fb8:	movs	r2, #0
   37fba:	mov	r1, r9
   37fbc:	ldr	r0, [r3, #0]
   37fbe:	bl	378ec <btrfs_util_subvolume_iterator_next@@Base>
   37fc2:	mov	r8, r0
   37fc4:	blx	8f58 <__errno_location@plt>
   37fc8:	mov	fp, r0
   37fca:	cmp.w	r8, #0
   37fce:	beq.n	37ffe <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   37fd0:	cmp.w	r8, #1
   37fd4:	it	eq
   37fd6:	moveq.w	r8, #0
   37fda:	ldr.w	r0, [r4, #-12]
   37fde:	bl	3789c <btrfs_util_destroy_subvolume_iterator@@Base>
   37fe2:	blx	8f58 <__errno_location@plt>
   37fe6:	ldr.w	sl, [r0]
   37fea:	mov	r9, r0
   37fec:	mov	r0, r6
   37fee:	blx	91e4 <close@plt>
   37ff2:	str.w	sl, [r9]
   37ff6:	cmp.w	r8, #0
   37ffa:	beq.n	37f4e <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   37ffc:	b.n	37f78 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   37ffe:	subs	r3, r4, #4
   38000:	mov	r2, sl
   38002:	str	r3, [sp, #0]
   38004:	mov	r0, r6
   38006:	ldr.w	r1, [r9]
   3800a:	movw	r3, #4088	; 0xff8
   3800e:	bl	366e0 <print_all_devices@@Base+0x160>
   38012:	mov	r8, r0
   38014:	ldr.w	r0, [r9]
   38018:	blx	8b84 <free@plt+0x4>
   3801c:	cmp.w	r8, #0
   38020:	bne.n	37fda <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   38022:	mov	r2, r8
   38024:	mov	r1, sl
   38026:	ldr.w	r0, [r4, #-4]
   3802a:	bl	37f04 <btrfs_util_delete_subvolume_fd@@Base>
   3802e:	ldr.w	r3, [fp]
   38032:	str	r3, [sp, #12]
   38034:	mov	r8, r0
   38036:	ldr.w	r0, [r4, #-4]
   3803a:	blx	91e4 <close@plt>
   3803e:	ldr	r3, [sp, #12]
   38040:	str.w	r3, [fp]
   38044:	cmp.w	r8, #0
   38048:	beq.n	37fb6 <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   3804a:	b.n	37fda <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   3804c:	mov	r2, r0
   3804e:	movw	r3, #4088	; 0xff8
   38052:	mov	r1, r5
   38054:	add.w	r0, r4, #8
   38058:	add	r6, r4
   3805a:	blx	8d2c <__memcpy_chk@plt>
   3805e:	ldr	r1, [pc, #40]	; (38088 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   38060:	mov	r2, r4
   38062:	mov	r0, r7
   38064:	movs	r3, #0
   38066:	strb	r3, [r6, #8]
   38068:	blx	8d48 <ioctl@plt>
   3806c:	adds	r0, #1
   3806e:	ite	ne
   38070:	movne.w	r8, #0
   38074:	moveq.w	r8, #18
   38078:	b.n	37f78 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   3807a:	mov	r0, r8
   3807c:	add.w	sp, sp, #8192	; 0x2000
   38080:	add	sp, #36	; 0x24
   38082:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38086:	nop
   38088:	str	r4, [sp, #60]	; 0x3c
   3808a:	str	r0, [r0, r0]
   3808c:	cmp	r6, #4
   3808e:	movs	r3, r0
   38090:	lsls	r0, r1, #10
   38092:	movs	r0, r0
   38094:	cmp	r5, #150	; 0x96
   38096:	movs	r3, r0

00038098 <btrfs_util_delete_subvolume@@Base>:
   38098:	push	{r4, r5, r6, r7, lr}
   3809a:	mov	r5, r1
   3809c:	ldr	r1, [pc, #116]	; (38114 <btrfs_util_delete_subvolume@@Base+0x7c>)
   3809e:	sub.w	sp, sp, #4096	; 0x1000
   380a2:	ldr	r2, [pc, #116]	; (38118 <btrfs_util_delete_subvolume@@Base+0x80>)
   380a4:	sub	sp, #12
   380a6:	add	r1, pc
   380a8:	add.w	r3, sp, #4096	; 0x1000
   380ac:	add	r7, sp, #12
   380ae:	adds	r3, #4
   380b0:	ldr	r2, [r1, r2]
   380b2:	add	r6, sp, #8
   380b4:	mov	r1, r0
   380b6:	mvn.w	r0, #99	; 0x63
   380ba:	ldr	r2, [r2, #0]
   380bc:	str	r2, [r3, #0]
   380be:	mov.w	r2, #0
   380c2:	movw	r3, #4088	; 0xff8
   380c6:	mov	r2, r7
   380c8:	str	r6, [sp, #0]
   380ca:	bl	366e0 <print_all_devices@@Base+0x160>
   380ce:	mov	r4, r0
   380d0:	cbnz	r0, 380ee <btrfs_util_delete_subvolume@@Base+0x56>
   380d2:	mov	r2, r5
   380d4:	mov	r1, r7
   380d6:	ldr	r0, [r6, #0]
   380d8:	bl	37f04 <btrfs_util_delete_subvolume_fd@@Base>
   380dc:	mov	r4, r0
   380de:	blx	8f58 <__errno_location@plt>
   380e2:	ldr	r7, [r0, #0]
   380e4:	mov	r5, r0
   380e6:	ldr	r0, [r6, #0]
   380e8:	blx	91e4 <close@plt>
   380ec:	str	r7, [r5, #0]
   380ee:	ldr	r1, [pc, #44]	; (3811c <btrfs_util_delete_subvolume@@Base+0x84>)
   380f0:	add.w	r3, sp, #4096	; 0x1000
   380f4:	ldr	r2, [pc, #32]	; (38118 <btrfs_util_delete_subvolume@@Base+0x80>)
   380f6:	adds	r3, #4
   380f8:	add	r1, pc
   380fa:	ldr	r2, [r1, r2]
   380fc:	ldr	r1, [r2, #0]
   380fe:	ldr	r2, [r3, #0]
   38100:	eors	r1, r2
   38102:	beq.n	38108 <btrfs_util_delete_subvolume@@Base+0x70>
   38104:	blx	8c90 <__stack_chk_fail@plt>
   38108:	mov	r0, r4
   3810a:	add.w	sp, sp, #4096	; 0x1000
   3810e:	add	sp, #12
   38110:	pop	{r4, r5, r6, r7, pc}
   38112:	nop
   38114:	cmp	r4, #114	; 0x72
   38116:	movs	r3, r0
   38118:	lsls	r0, r1, #10
   3811a:	movs	r0, r0
   3811c:	cmp	r4, #32
   3811e:	movs	r3, r0

00038120 <btrfs_util_subvolume_iterator_next_info@@Base>:
   38120:	push	{r4, r5, lr}
   38122:	mov	r5, r2
   38124:	ldr	r2, [pc, #72]	; (38170 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   38126:	sub	sp, #28
   38128:	ldr	r3, [pc, #72]	; (38174 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   3812a:	mov	r4, r0
   3812c:	add	r2, pc
   3812e:	ldr	r3, [r2, r3]
   38130:	add	r2, sp, #8
   38132:	ldr	r3, [r3, #0]
   38134:	str	r3, [sp, #20]
   38136:	mov.w	r3, #0
   3813a:	bl	378ec <btrfs_util_subvolume_iterator_next@@Base>
   3813e:	cbnz	r0, 38150 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   38140:	ldrb	r3, [r4, #0]
   38142:	str	r5, [sp, #0]
   38144:	cbz	r3, 38164 <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   38146:	ldrd	r2, r3, [sp, #8]
   3814a:	ldr	r0, [r4, #4]
   3814c:	bl	37258 <btrfs_util_subvolume_info_fd@@Base>
   38150:	ldr	r2, [pc, #36]	; (38178 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   38152:	ldr	r3, [pc, #32]	; (38174 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   38154:	add	r2, pc
   38156:	ldr	r3, [r2, r3]
   38158:	ldr	r2, [r3, #0]
   3815a:	ldr	r3, [sp, #20]
   3815c:	eors	r2, r3
   3815e:	beq.n	3816c <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   38160:	blx	8c90 <__stack_chk_fail@plt>
   38164:	ldr	r0, [r4, #8]
   38166:	movs	r2, #0
   38168:	movs	r3, #0
   3816a:	b.n	3814c <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   3816c:	add	sp, #28
   3816e:	pop	{r4, r5, pc}
   38170:	cmp	r3, #236	; 0xec
   38172:	movs	r3, r0
   38174:	lsls	r0, r1, #10
   38176:	movs	r0, r0
   38178:	cmp	r3, #196	; 0xc4
   3817a:	movs	r3, r0

0003817c <btrfs_util_deleted_subvolumes_fd@@Base>:
   3817c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38180:	mov	r6, r1
   38182:	ldr	r1, [pc, #320]	; (382c4 <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   38184:	mov	r7, r2
   38186:	ldr	r2, [pc, #320]	; (382c8 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   38188:	sub.w	sp, sp, #4096	; 0x1000
   3818c:	add	r1, pc
   3818e:	sub	sp, #28
   38190:	add	r5, sp, #16
   38192:	add.w	r3, sp, #4096	; 0x1000
   38196:	ldr	r2, [r1, r2]
   38198:	add	r4, sp, #24
   3819a:	mov	fp, r0
   3819c:	mov	r0, r5
   3819e:	ldr	r2, [r2, #0]
   381a0:	str	r2, [r3, #20]
   381a2:	mov.w	r2, #0
   381a6:	movs	r1, #0
   381a8:	mov.w	r2, #4096	; 0x1000
   381ac:	adds	r3, #20
   381ae:	blx	8f98 <memset@plt+0x4>
   381b2:	movs	r2, #1
   381b4:	movs	r3, #0
   381b6:	strd	r2, r3, [r4, #-8]
   381ba:	movs	r4, #0
   381bc:	mvn.w	r2, #4
   381c0:	mov	sl, r4
   381c2:	mov	r9, r4
   381c4:	mov.w	r3, #4294967295	; 0xffffffff
   381c8:	str	r4, [r6, #0]
   381ca:	strd	r2, r3, [r5, #8]
   381ce:	strd	r2, r3, [r5, #16]
   381d2:	mov.w	r3, #4294967295	; 0xffffffff
   381d6:	mov.w	r2, #4294967295	; 0xffffffff
   381da:	str	r4, [r7, #0]
   381dc:	strd	r2, r3, [r5, #32]
   381e0:	strd	r2, r3, [r5, #48]	; 0x30
   381e4:	movs	r3, #48	; 0x30
   381e6:	strd	r3, r3, [r5, #56]	; 0x38
   381ea:	ldr	r3, [r5, #64]	; 0x40
   381ec:	cmp	r3, sl
   381ee:	bhi.n	3820e <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   381f0:	ldr	r1, [pc, #204]	; (382c0 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   381f2:	mov	r2, r5
   381f4:	mov	r0, fp
   381f6:	mov.w	r3, #4096	; 0x1000
   381fa:	str	r3, [r5, #64]	; 0x40
   381fc:	blx	8d48 <ioctl@plt>
   38200:	adds	r0, #1
   38202:	beq.n	382aa <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   38204:	ldr	r3, [r5, #64]	; 0x40
   38206:	cmp	r3, #0
   38208:	beq.n	38290 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   3820a:	movs	r4, #0
   3820c:	mov	sl, r4
   3820e:	add.w	r8, sp, #120	; 0x78
   38212:	movs	r3, #0
   38214:	add	r8, r4
   38216:	str	r3, [sp, #0]
   38218:	mov	r0, fp
   3821a:	ldrd	r2, r3, [r8, #16]
   3821e:	bl	37258 <btrfs_util_subvolume_info_fd@@Base>
   38222:	mov	r3, r0
   38224:	cbnz	r0, 3827c <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   38226:	ldr	r3, [r7, #0]
   38228:	cmp	r3, r9
   3822a:	bcc.n	38246 <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   3822c:	cmp.w	r9, #0
   38230:	beq.n	38276 <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   38232:	mov.w	r9, r9, lsl #1
   38236:	ldr	r0, [r6, #0]
   38238:	movs	r2, #8
   3823a:	mov	r1, r9
   3823c:	bl	38308 <btrfs_util_deleted_subvolumes@@Base+0x38>
   38240:	cmp	r0, #0
   38242:	beq.n	382ae <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   38244:	str	r0, [r6, #0]
   38246:	ldr	r0, [r7, #0]
   38248:	ldr	r1, [r6, #0]
   3824a:	adds	r3, r0, #1
   3824c:	str	r3, [r7, #0]
   3824e:	ldrd	r2, r3, [r8, #16]
   38252:	add.w	r1, r1, r0, lsl #3
   38256:	strd	r2, r3, [r1]
   3825a:	ldr.w	r3, [r8, #28]
   3825e:	adds	r4, #32
   38260:	add.w	sl, sl, #1
   38264:	add	r4, r3
   38266:	ldrd	r3, r2, [r8, #16]
   3826a:	adds	r3, #1
   3826c:	adc.w	r2, r2, #0
   38270:	strd	r3, r2, [r5, #24]
   38274:	b.n	381ea <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   38276:	mov.w	r9, #1
   3827a:	b.n	38236 <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   3827c:	cmp	r0, #6
   3827e:	beq.n	3825a <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   38280:	ldr	r0, [r6, #0]
   38282:	str	r3, [sp, #12]
   38284:	blx	8b84 <free@plt+0x4>
   38288:	ldr	r3, [sp, #12]
   3828a:	movs	r2, #0
   3828c:	str	r2, [r6, #0]
   3828e:	str	r2, [r7, #0]
   38290:	ldr	r0, [pc, #56]	; (382cc <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   38292:	add.w	r2, sp, #4096	; 0x1000
   38296:	ldr	r1, [pc, #48]	; (382c8 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   38298:	adds	r2, #20
   3829a:	add	r0, pc
   3829c:	ldr	r1, [r0, r1]
   3829e:	ldr	r0, [r1, #0]
   382a0:	ldr	r1, [r2, #0]
   382a2:	eors	r0, r1
   382a4:	beq.n	382b2 <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   382a6:	blx	8c90 <__stack_chk_fail@plt>
   382aa:	movs	r3, #12
   382ac:	b.n	38280 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   382ae:	movs	r3, #2
   382b0:	b.n	38280 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   382b2:	mov	r0, r3
   382b4:	add.w	sp, sp, #4096	; 0x1000
   382b8:	add	sp, #28
   382ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   382be:	nop
   382c0:	str	r4, [sp, #68]	; 0x44
   382c2:	beq.n	382c6 <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   382c4:	cmp	r3, #140	; 0x8c
   382c6:	movs	r3, r0
   382c8:	lsls	r0, r1, #10
   382ca:	movs	r0, r0
   382cc:	cmp	r2, #126	; 0x7e
   382ce:	movs	r3, r0

000382d0 <btrfs_util_deleted_subvolumes@@Base>:
   382d0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   382d2:	mov	r4, r1
   382d4:	movs	r1, #0
   382d6:	str	r2, [sp, #4]
   382d8:	blx	8ed4 <open@plt>
   382dc:	adds	r3, r0, #1
   382de:	mov	r6, r0
   382e0:	beq.n	38302 <btrfs_util_deleted_subvolumes@@Base+0x32>
   382e2:	mov	r1, r4
   382e4:	ldr	r2, [sp, #4]
   382e6:	bl	3817c <btrfs_util_deleted_subvolumes_fd@@Base>
   382ea:	mov	r4, r0
   382ec:	blx	8f58 <__errno_location@plt>
   382f0:	ldr	r7, [r0, #0]
   382f2:	mov	r5, r0
   382f4:	mov	r0, r6
   382f6:	blx	91e4 <close@plt>
   382fa:	str	r7, [r5, #0]
   382fc:	mov	r0, r4
   382fe:	add	sp, #12
   38300:	pop	{r4, r5, r6, r7, pc}
   38302:	movs	r4, #7
   38304:	b.n	382fc <btrfs_util_deleted_subvolumes@@Base+0x2c>
   38306:	nop
   38308:	push	{r3, lr}
   3830a:	mul.w	r3, r2, r1
   3830e:	cmp	r1, r3
   38310:	bhi.n	38320 <btrfs_util_deleted_subvolumes@@Base+0x50>
   38312:	cmp	r2, r3
   38314:	bhi.n	38320 <btrfs_util_deleted_subvolumes@@Base+0x50>
   38316:	mov	r1, r3
   38318:	ldmia.w	sp!, {r3, lr}
   3831c:	b.w	8cb4 <realloc@plt>
   38320:	blx	8f58 <__errno_location@plt>
   38324:	movs	r3, #12
   38326:	str	r3, [r0, #0]
   38328:	movs	r0, #0
   3832a:	pop	{r3, pc}

0003832c <hash_crc32c@@Base>:
   3832c:	push	{r4, lr}
   3832e:	mov	r4, r2
   38330:	mov	r2, r1
   38332:	mov	r1, r0
   38334:	mov.w	r0, #4294967295	; 0xffffffff
   38338:	bl	1bc9a <crc32c_le@@Base>
   3833c:	mvns	r0, r0
   3833e:	str	r0, [r4, #0]
   38340:	movs	r0, #0
   38342:	pop	{r4, pc}

00038344 <hash_xxhash@@Base>:
   38344:	push	{r0, r1, r2, r3, r4, lr}
   38346:	mov	r4, r2
   38348:	ldr	r2, [pc, #60]	; (38388 <hash_xxhash@@Base+0x44>)
   3834a:	ldr	r3, [pc, #64]	; (3838c <hash_xxhash@@Base+0x48>)
   3834c:	add	r2, pc
   3834e:	ldr	r3, [r2, r3]
   38350:	movs	r2, #0
   38352:	ldr	r3, [r3, #0]
   38354:	str	r3, [sp, #12]
   38356:	mov.w	r3, #0
   3835a:	movs	r3, #0
   3835c:	bl	38d00 <XXH64@@Base>
   38360:	ldr	r2, [pc, #44]	; (38390 <hash_xxhash@@Base+0x4c>)
   38362:	mov	r3, sp
   38364:	add	r2, pc
   38366:	strd	r0, r1, [sp]
   3836a:	ldmia	r3!, {r0, r1}
   3836c:	ldr	r3, [pc, #28]	; (3838c <hash_xxhash@@Base+0x48>)
   3836e:	str	r0, [r4, #0]
   38370:	str	r1, [r4, #4]
   38372:	ldr	r3, [r2, r3]
   38374:	ldr	r2, [r3, #0]
   38376:	ldr	r3, [sp, #12]
   38378:	eors	r2, r3
   3837a:	beq.n	38380 <hash_xxhash@@Base+0x3c>
   3837c:	blx	8c90 <__stack_chk_fail@plt>
   38380:	movs	r0, #0
   38382:	add	sp, #16
   38384:	pop	{r4, pc}
   38386:	nop
   38388:	cmp	r1, #204	; 0xcc
   3838a:	movs	r3, r0
   3838c:	lsls	r0, r1, #10
   3838e:	movs	r0, r0
   38390:	cmp	r1, #180	; 0xb4
   38392:	movs	r3, r0

00038394 <hash_sha256@@Base>:
   38394:	push	{r4, r5, r6, r7, lr}
   38396:	mov	r5, r2
   38398:	ldr	r2, [pc, #72]	; (383e4 <hash_sha256@@Base+0x50>)
   3839a:	sub	sp, #124	; 0x7c
   3839c:	ldr	r3, [pc, #72]	; (383e8 <hash_sha256@@Base+0x54>)
   3839e:	mov	r7, r1
   383a0:	add	r2, pc
   383a2:	mov	r4, sp
   383a4:	mov	r6, r0
   383a6:	mov	r0, r4
   383a8:	ldr	r3, [r2, r3]
   383aa:	ldr	r3, [r3, #0]
   383ac:	str	r3, [sp, #116]	; 0x74
   383ae:	mov.w	r3, #0
   383b2:	bl	395ae <SHA256Reset@@Base>
   383b6:	mov	r2, r7
   383b8:	mov	r1, r6
   383ba:	mov	r0, r4
   383bc:	bl	395ec <SHA256Input@@Base>
   383c0:	mov	r1, r5
   383c2:	mov	r0, r4
   383c4:	bl	396e4 <SHA256Result@@Base>
   383c8:	ldr	r2, [pc, #32]	; (383ec <hash_sha256@@Base+0x58>)
   383ca:	ldr	r3, [pc, #28]	; (383e8 <hash_sha256@@Base+0x54>)
   383cc:	add	r2, pc
   383ce:	ldr	r3, [r2, r3]
   383d0:	ldr	r2, [r3, #0]
   383d2:	ldr	r3, [sp, #116]	; 0x74
   383d4:	eors	r2, r3
   383d6:	beq.n	383dc <hash_sha256@@Base+0x48>
   383d8:	blx	8c90 <__stack_chk_fail@plt>
   383dc:	movs	r0, #0
   383de:	add	sp, #124	; 0x7c
   383e0:	pop	{r4, r5, r6, r7, pc}
   383e2:	nop
   383e4:	cmp	r1, #120	; 0x78
   383e6:	movs	r3, r0
   383e8:	lsls	r0, r1, #10
   383ea:	movs	r0, r0
   383ec:	cmp	r1, #76	; 0x4c
   383ee:	movs	r3, r0

000383f0 <hash_blake2b@@Base>:
   383f0:	push	{r4, r5, r6, r7, lr}
   383f2:	mov	r5, r2
   383f4:	ldr	r2, [pc, #76]	; (38444 <hash_blake2b@@Base+0x54>)
   383f6:	sub	sp, #252	; 0xfc
   383f8:	ldr	r3, [pc, #76]	; (38448 <hash_blake2b@@Base+0x58>)
   383fa:	mov	r6, r0
   383fc:	add	r2, pc
   383fe:	mov	r4, sp
   38400:	mov	r7, r1
   38402:	mov	r0, r4
   38404:	ldr	r3, [r2, r3]
   38406:	movs	r1, #32
   38408:	ldr	r3, [r3, #0]
   3840a:	str	r3, [sp, #244]	; 0xf4
   3840c:	mov.w	r3, #0
   38410:	bl	3d19c <blake2b_init@@Base>
   38414:	mov	r2, r7
   38416:	mov	r1, r6
   38418:	mov	r0, r4
   3841a:	bl	3d228 <blake2b_update@@Base>
   3841e:	movs	r2, #32
   38420:	mov	r1, r5
   38422:	mov	r0, r4
   38424:	bl	3d3d8 <blake2b_final@@Base>
   38428:	ldr	r2, [pc, #32]	; (3844c <hash_blake2b@@Base+0x5c>)
   3842a:	ldr	r3, [pc, #28]	; (38448 <hash_blake2b@@Base+0x58>)
   3842c:	add	r2, pc
   3842e:	ldr	r3, [r2, r3]
   38430:	ldr	r2, [r3, #0]
   38432:	ldr	r3, [sp, #244]	; 0xf4
   38434:	eors	r2, r3
   38436:	beq.n	3843c <hash_blake2b@@Base+0x4c>
   38438:	blx	8c90 <__stack_chk_fail@plt>
   3843c:	movs	r0, #0
   3843e:	add	sp, #252	; 0xfc
   38440:	pop	{r4, r5, r6, r7, pc}
   38442:	nop
   38444:	cmp	r1, #28
   38446:	movs	r3, r0
   38448:	lsls	r0, r1, #10
   3844a:	movs	r0, r0
   3844c:	cmp	r0, #236	; 0xec
   3844e:	movs	r3, r0
   38450:	push	{r4, r5, r6, r7, lr}
   38452:	and.w	r2, r2, #15
   38456:	ldr	r6, [pc, #96]	; (384b8 <hash_blake2b@@Base+0xc8>)
   38458:	adds	r5, r1, r2
   3845a:	ldr	r7, [pc, #96]	; (384bc <hash_blake2b@@Base+0xcc>)
   3845c:	mov	r4, r2
   3845e:	cmp	r4, #3
   38460:	sub.w	r3, r5, r4
   38464:	bhi.n	38496 <hash_blake2b@@Base+0xa6>
   38466:	and.w	r4, r2, #12
   3846a:	lsrs	r3, r2, #2
   3846c:	add	r1, r4
   3846e:	mvn.w	r4, #3
   38472:	mla	r2, r4, r3, r2
   38476:	ldr	r5, [pc, #72]	; (384c0 <hash_blake2b@@Base+0xd0>)
   38478:	ldr	r4, [pc, #72]	; (384c4 <hash_blake2b@@Base+0xd4>)
   3847a:	add	r2, r1
   3847c:	cmp	r1, r2
   3847e:	bne.n	384a6 <hash_blake2b@@Base+0xb6>
   38480:	ldr	r3, [pc, #68]	; (384c8 <hash_blake2b@@Base+0xd8>)
   38482:	eor.w	r0, r0, r0, lsr #15
   38486:	muls	r0, r3
   38488:	ldr	r3, [pc, #44]	; (384b8 <hash_blake2b@@Base+0xc8>)
   3848a:	eor.w	r0, r0, r0, lsr #13
   3848e:	muls	r0, r3
   38490:	eor.w	r0, r0, r0, lsr #16
   38494:	pop	{r4, r5, r6, r7, pc}
   38496:	ldr	r3, [r3, #0]
   38498:	subs	r4, #4
   3849a:	mla	r0, r6, r3, r0
   3849e:	mov.w	r0, r0, ror #15
   384a2:	muls	r0, r7
   384a4:	b.n	3845e <hash_blake2b@@Base+0x6e>
   384a6:	ldrb.w	r3, [r1], #1
   384aa:	mla	r0, r4, r3, r0
   384ae:	mov.w	r0, r0, ror #21
   384b2:	muls	r0, r5
   384b4:	b.n	3847c <hash_blake2b@@Base+0x8c>
   384b6:	nop
   384b8:	add	r6, sp, #244	; 0xf4
   384ba:	stmia	r2!, {r1, r4, r5, r7}
   384bc:			; <UNDEFINED> instruction: 0xeb2f27d4
   384c0:	ldrb	r1, [r6, #6]
   384c2:	ldr	r6, [sp, #220]	; 0xdc
   384c4:	str	r1, [r6, #120]	; 0x78
   384c6:	asrs	r6, r2, #25
   384c8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   384ca:	strh	r3, [r5, #46]	; 0x2e
   384cc:	cmp	r1, #15
   384ce:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   384d2:	mov	r6, r1
   384d4:	bls.n	38568 <hash_blake2b@@Base+0x178>
   384d6:	ldr	r4, [pc, #152]	; (38570 <hash_blake2b@@Base+0x180>)
   384d8:	sub.w	lr, r1, #15
   384dc:	ldr	r7, [pc, #148]	; (38574 <hash_blake2b@@Base+0x184>)
   384de:	add	lr, r0
   384e0:	ldr.w	ip, [pc, #152]	; 3857c <hash_blake2b@@Base+0x18c>
   384e4:	add	r4, r2
   384e6:	ldr.w	r9, [pc, #152]	; 38580 <hash_blake2b@@Base+0x190>
   384ea:	adds	r5, r2, r7
   384ec:	add	ip, r2
   384ee:	mov	r1, r0
   384f0:	ldr.w	r8, [r1]
   384f4:	adds	r1, #16
   384f6:	mla	r4, r7, r8, r4
   384fa:	ldr.w	r8, [r1, #-12]
   384fe:	mla	r5, r7, r8, r5
   38502:	ldr.w	r8, [r1, #-8]
   38506:	mov.w	r4, r4, ror #19
   3850a:	mla	r2, r7, r8, r2
   3850e:	ldr.w	r8, [r1, #-4]
   38512:	mov.w	r5, r5, ror #19
   38516:	cmp	lr, r1
   38518:	mul.w	r4, r9, r4
   3851c:	mla	ip, r7, r8, ip
   38520:	mov.w	r2, r2, ror #19
   38524:	mul.w	r5, r9, r5
   38528:	mul.w	r2, r9, r2
   3852c:	mov.w	ip, ip, ror #19
   38530:	mul.w	ip, r9, ip
   38534:	bhi.n	384f0 <hash_blake2b@@Base+0x100>
   38536:	sub.w	r1, r6, #16
   3853a:	mov.w	r5, r5, ror #25
   3853e:	bic.w	r1, r1, #15
   38542:	adds	r7, r0, #1
   38544:	adds	r1, #16
   38546:	add.w	r5, r5, r4, ror #31
   3854a:	cmp	lr, r7
   3854c:	it	cc
   3854e:	movcc	r1, #16
   38550:	add.w	r4, r5, r2, ror #20
   38554:	add	r0, r1
   38556:	add.w	r4, r4, ip, ror #14
   3855a:	and.w	r2, r6, #15
   3855e:	mov	r1, r0
   38560:	adds	r0, r4, r6
   38562:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   38566:	b.n	38450 <hash_blake2b@@Base+0x60>
   38568:	ldr	r4, [pc, #12]	; (38578 <hash_blake2b@@Base+0x188>)
   3856a:	add	r4, r2
   3856c:	b.n	3855a <hash_blake2b@@Base+0x16a>
   3856e:	nop
   38570:	add	r0, r5
   38572:	movs	r4, #35	; 0x23
   38574:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   38576:	strh	r3, [r5, #46]	; 0x2e
   38578:	str	r1, [r6, #120]	; 0x78
   3857a:	asrs	r6, r2, #25
   3857c:	strh	r7, [r1, #50]	; 0x32
   3857e:	str	r0, [r1, #28]
   38580:	ldrb	r1, [r6, #6]
   38582:	ldr	r6, [sp, #220]	; 0xdc
   38584:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38588:	and.w	r3, r3, #31
   3858c:	ldr.w	r8, [pc, #368]	; 38700 <hash_blake2b@@Base+0x310>
   38590:	add.w	sl, r2, r3
   38594:	ldr.w	lr, [pc, #352]	; 386f8 <hash_blake2b@@Base+0x308>
   38598:	mov	ip, r3
   3859a:	ldr.w	r9, [pc, #352]	; 386fc <hash_blake2b@@Base+0x30c>
   3859e:	ldr.w	fp, [pc, #376]	; 38718 <hash_blake2b@@Base+0x328>
   385a2:	strd	r0, r1, [sp]
   385a6:	cmp.w	ip, #7
   385aa:	sub.w	r1, sl, ip
   385ae:	bhi.n	3865c <hash_blake2b@@Base+0x26c>
   385b0:	and.w	r0, r3, #24
   385b4:	lsrs	r1, r3, #3
   385b6:	add	r2, r0
   385b8:	mvn.w	r0, #7
   385bc:	mla	r3, r0, r1, r3
   385c0:	cmp	r3, #3
   385c2:	bls.n	3860a <hash_blake2b@@Base+0x21a>
   385c4:	ldr.w	r6, [r2], #4
   385c8:	subs	r3, #4
   385ca:	ldr	r0, [pc, #300]	; (386f8 <hash_blake2b@@Base+0x308>)
   385cc:	ldr	r7, [pc, #300]	; (386fc <hash_blake2b@@Base+0x30c>)
   385ce:	ldr	r1, [sp, #0]
   385d0:	umull	r4, r5, r6, r0
   385d4:	eor.w	r0, r4, r1
   385d8:	ldr	r1, [sp, #4]
   385da:	mla	r5, r7, r6, r5
   385de:	ldr	r7, [pc, #288]	; (38700 <hash_blake2b@@Base+0x310>)
   385e0:	eors	r1, r5
   385e2:	lsls	r6, r1, #23
   385e4:	orr.w	r6, r6, r0, lsr #9
   385e8:	lsls	r0, r0, #23
   385ea:	orr.w	r0, r0, r1, lsr #9
   385ee:	ldr	r1, [pc, #276]	; (38704 <hash_blake2b@@Base+0x314>)
   385f0:	umull	r4, r5, r0, r7
   385f4:	muls	r1, r0
   385f6:	ldr	r0, [pc, #272]	; (38708 <hash_blake2b@@Base+0x318>)
   385f8:	mla	r6, r7, r6, r1
   385fc:	add	r5, r6
   385fe:	ldr	r6, [pc, #268]	; (3870c <hash_blake2b@@Base+0x31c>)
   38600:	adds	r1, r4, r6
   38602:	str	r1, [sp, #0]
   38604:	adc.w	r1, r5, r0
   38608:	str	r1, [sp, #4]
   3860a:	ldr	r7, [pc, #260]	; (38710 <hash_blake2b@@Base+0x320>)
   3860c:	add	r3, r2
   3860e:	ldr.w	ip, [pc, #268]	; 3871c <hash_blake2b@@Base+0x32c>
   38612:	ldr	r6, [pc, #228]	; (386f8 <hash_blake2b@@Base+0x308>)
   38614:	ldr.w	lr, [pc, #228]	; 386fc <hash_blake2b@@Base+0x30c>
   38618:	cmp	r2, r3
   3861a:	bne.n	386be <hash_blake2b@@Base+0x2ce>
   3861c:	ldrd	r3, r2, [sp]
   38620:	ldr	r1, [pc, #224]	; (38704 <hash_blake2b@@Base+0x314>)
   38622:	ldr	r0, [sp, #4]
   38624:	eor.w	r2, r3, r2, lsr #1
   38628:	ldr	r3, [pc, #212]	; (38700 <hash_blake2b@@Base+0x310>)
   3862a:	muls	r1, r2
   3862c:	mla	r1, r3, r0, r1
   38630:	umull	r2, r3, r2, r3
   38634:	add	r3, r1
   38636:	eor.w	r1, r3, r3, lsr #29
   3863a:	lsrs	r0, r2, #29
   3863c:	orr.w	r0, r0, r3, lsl #3
   38640:	ldr	r3, [pc, #196]	; (38708 <hash_blake2b@@Base+0x318>)
   38642:	eors	r0, r2
   38644:	ldr	r2, [pc, #196]	; (3870c <hash_blake2b@@Base+0x31c>)
   38646:	muls	r3, r0
   38648:	umull	r4, r5, r0, r2
   3864c:	mla	r3, r2, r1, r3
   38650:	adds	r1, r5, r3
   38652:	eor.w	r0, r4, r1
   38656:	add	sp, #12
   38658:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3865c:	ldr	r0, [r1, #0]
   3865e:	sub.w	ip, ip, #8
   38662:	ldr	r6, [r1, #4]
   38664:	ldr	r1, [pc, #156]	; (38704 <hash_blake2b@@Base+0x314>)
   38666:	muls	r1, r0
   38668:	mla	r6, r8, r6, r1
   3866c:	umull	r0, r1, r0, r8
   38670:	add	r1, r6
   38672:	lsls	r7, r1, #31
   38674:	lsls	r6, r0, #31
   38676:	orr.w	r7, r7, r0, lsr #1
   3867a:	orr.w	r6, r6, r1, lsr #1
   3867e:	mul.w	r1, r9, r6
   38682:	mla	r1, lr, r7, r1
   38686:	umull	r6, r7, r6, lr
   3868a:	add	r7, r1
   3868c:	ldr	r1, [sp, #0]
   3868e:	eor.w	r0, r6, r1
   38692:	ldr	r1, [sp, #4]
   38694:	eors	r1, r7
   38696:	lsls	r6, r1, #27
   38698:	orr.w	r6, r6, r0, lsr #5
   3869c:	lsls	r0, r0, #27
   3869e:	orr.w	r0, r0, r1, lsr #5
   386a2:	mul.w	r1, r9, r0
   386a6:	mla	r6, lr, r6, r1
   386aa:	umull	r0, r1, r0, lr
   386ae:	adds.w	r4, r0, fp
   386b2:	str	r4, [sp, #0]
   386b4:	ldr	r4, [pc, #92]	; (38714 <hash_blake2b@@Base+0x324>)
   386b6:	add	r1, r6
   386b8:	adcs	r1, r4
   386ba:	str	r1, [sp, #4]
   386bc:	b.n	385a6 <hash_blake2b@@Base+0x1b6>
   386be:	ldrb.w	r8, [r2], #1
   386c2:	ldr	r5, [sp, #4]
   386c4:	ldr	r4, [sp, #0]
   386c6:	umull	r0, r1, r8, r7
   386ca:	eors	r4, r0
   386cc:	mla	r1, ip, r8, r1
   386d0:	eors	r5, r1
   386d2:	lsls	r1, r5, #11
   386d4:	orr.w	r1, r1, r4, lsr #21
   386d8:	lsls	r4, r4, #11
   386da:	orr.w	r4, r4, r5, lsr #21
   386de:	mul.w	r0, lr, r4
   386e2:	umull	r4, r5, r4, r6
   386e6:	mla	r1, r6, r1, r0
   386ea:	strd	r4, r5, [sp]
   386ee:	ldr	r0, [sp, #4]
   386f0:	add	r0, r1
   386f2:	str	r0, [sp, #4]
   386f4:	b.n	38618 <hash_blake2b@@Base+0x228>
   386f6:	nop
   386f8:	ldmia	r2, {r0, r1, r2, r7}
   386fa:	strh	r3, [r5, #46]	; 0x2e
   386fc:	ldrb	r1, [r6, #6]
   386fe:	ldr	r6, [sp, #220]	; 0xdc
   38700:	adc.w	r7, pc, r4, lsr #11
   38704:	add	r6, sp, #244	; 0xf4
   38706:	stmia	r2!, {r1, r4, r5, r7}
   38708:	str	r1, [r6, #120]	; 0x78
   3870a:	asrs	r6, r2, #25
   3870c:	ldrb	r1, [r7, #7]
   3870e:	ldr	r6, [sp, #220]	; 0xdc
   38710:	str	r5, [r0, #124]	; 0x7c
   38712:	asrs	r6, r2, #25
   38714:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   38716:	strh	r3, [r5, #46]	; 0x2e
   38718:	add	r6, sp, #396	; 0x18c
   3871a:	stmia	r2!, {r1, r4, r5, r7}
   3871c:			; <UNDEFINED> instruction: 0xeb2f27d4
   38720:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38724:	sub	sp, #84	; 0x54
   38726:	mov	fp, r3
   38728:	cmp	r1, #31
   3872a:	ldr	r3, [sp, #120]	; 0x78
   3872c:	mov	sl, r2
   3872e:	str	r0, [sp, #40]	; 0x28
   38730:	str	r1, [sp, #52]	; 0x34
   38732:	str	r3, [sp, #76]	; 0x4c
   38734:	bls.w	38aa4 <hash_blake2b@@Base+0x6b4>
   38738:	sub.w	r3, r1, #32
   3873c:	str	r3, [sp, #56]	; 0x38
   3873e:	ldr	r3, [pc, #820]	; (38a74 <hash_blake2b@@Base+0x684>)
   38740:	mov	r1, r0
   38742:	ldr	r2, [sp, #56]	; 0x38
   38744:	adds.w	r3, sl, r3
   38748:	str	r3, [sp, #0]
   3874a:	ldr	r3, [pc, #812]	; (38a78 <hash_blake2b@@Base+0x688>)
   3874c:	add.w	r9, r0, r2
   38750:	ldr	r5, [pc, #808]	; (38a7c <hash_blake2b@@Base+0x68c>)
   38752:	adc.w	r3, fp, r3
   38756:	str	r3, [sp, #4]
   38758:	ldr	r3, [pc, #800]	; (38a7c <hash_blake2b@@Base+0x68c>)
   3875a:	ldr.w	ip, [pc, #804]	; 38a80 <hash_blake2b@@Base+0x690>
   3875e:	adds.w	r3, sl, r3
   38762:	str	r3, [sp, #8]
   38764:	ldr	r3, [pc, #792]	; (38a80 <hash_blake2b@@Base+0x690>)
   38766:	ldr	r2, [pc, #796]	; (38a84 <hash_blake2b@@Base+0x694>)
   38768:	adc.w	r3, fp, r3
   3876c:	str	r3, [sp, #12]
   3876e:	ldr	r3, [pc, #792]	; (38a88 <hash_blake2b@@Base+0x698>)
   38770:	adds.w	r3, sl, r3
   38774:	str	r3, [sp, #16]
   38776:	ldr	r3, [pc, #788]	; (38a8c <hash_blake2b@@Base+0x69c>)
   38778:	adc.w	r3, fp, r3
   3877c:	str	r3, [sp, #20]
   3877e:	ldr	r3, [pc, #784]	; (38a90 <hash_blake2b@@Base+0x6a0>)
   38780:	ldr	r6, [r1, #0]
   38782:	adds	r1, #32
   38784:	ldr.w	r4, [r1, #-28]
   38788:	ldr.w	lr, [r1, #-12]
   3878c:	mul.w	r0, ip, r6
   38790:	mla	r0, r5, r4, r0
   38794:	ldr	r4, [sp, #4]
   38796:	umull	r6, r7, r6, r5
   3879a:	add	r7, r0
   3879c:	ldr	r0, [sp, #0]
   3879e:	adds	r0, r6, r0
   387a0:	adc.w	r4, r7, r4
   387a4:	mov.w	r8, r4, lsl #31
   387a8:	orr.w	r6, r8, r0, lsr #1
   387ac:	lsls	r0, r0, #31
   387ae:	orr.w	r0, r0, r4, lsr #1
   387b2:	str	r0, [sp, #48]	; 0x30
   387b4:	str	r6, [sp, #72]	; 0x48
   387b6:	mul.w	r4, r2, r0
   387ba:	ldr	r0, [sp, #48]	; 0x30
   387bc:	mla	r4, r3, r6, r4
   387c0:	umull	r6, r7, r0, r3
   387c4:	strd	r6, r7, [sp]
   387c8:	ldr.w	r6, [r1, #-24]
   387cc:	ldr.w	r7, [r1, #-20]
   387d0:	ldr	r0, [sp, #4]
   387d2:	adds	r0, r4, r0
   387d4:	str	r0, [sp, #4]
   387d6:	mul.w	r4, ip, r6
   387da:	ldr	r0, [sp, #8]
   387dc:	mla	r4, r5, r7, r4
   387e0:	umull	r6, r7, r6, r5
   387e4:	add	r7, r4
   387e6:	adds	r4, r6, r0
   387e8:	ldr	r0, [sp, #12]
   387ea:	adc.w	r0, r7, r0
   387ee:	lsls	r7, r0, #31
   387f0:	mov	r6, r0
   387f2:	orr.w	r0, r7, r4, lsr #1
   387f6:	lsls	r4, r4, #31
   387f8:	orr.w	r4, r4, r6, lsr #1
   387fc:	str	r0, [sp, #68]	; 0x44
   387fe:	umull	r7, r8, r4, r3
   38802:	mul.w	r6, r2, r4
   38806:	mla	r6, r3, r0, r6
   3880a:	strd	r7, r8, [sp, #8]
   3880e:	ldr	r0, [sp, #12]
   38810:	adds	r0, r6, r0
   38812:	ldr.w	r6, [r1, #-16]
   38816:	str	r0, [sp, #12]
   38818:	mul.w	r7, ip, r6
   3881c:	mla	lr, r5, lr, r7
   38820:	umull	r7, r8, r6, r5
   38824:	adds.w	r6, r7, sl
   38828:	add	r8, lr
   3882a:	adc.w	sl, r8, fp
   3882e:	ldr.w	lr, [r1, #-4]
   38832:	mov.w	r7, sl, lsl #31
   38836:	orr.w	r0, r7, r6, lsr #1
   3883a:	lsls	r6, r6, #31
   3883c:	str	r0, [sp, #60]	; 0x3c
   3883e:	orr.w	r0, r6, sl, lsr #1
   38842:	str	r0, [sp, #44]	; 0x2c
   38844:	mul.w	r6, r2, r0
   38848:	ldr	r0, [sp, #60]	; 0x3c
   3884a:	mla	r6, r3, r0, r6
   3884e:	ldr	r0, [sp, #44]	; 0x2c
   38850:	umull	sl, fp, r0, r3
   38854:	add	fp, r6
   38856:	ldr.w	r6, [r1, #-8]
   3885a:	mul.w	r7, ip, r6
   3885e:	mla	lr, r5, lr, r7
   38862:	umull	r6, r7, r6, r5
   38866:	strd	r6, r7, [sp, #32]
   3886a:	ldr	r0, [sp, #36]	; 0x24
   3886c:	ldr	r6, [sp, #32]
   3886e:	add	r0, lr
   38870:	str	r0, [sp, #36]	; 0x24
   38872:	ldr	r0, [sp, #16]
   38874:	ldr	r7, [sp, #20]
   38876:	adds	r6, r6, r0
   38878:	ldr	r0, [sp, #36]	; 0x24
   3887a:	adc.w	r7, r0, r7
   3887e:	cmp	r9, r1
   38880:	mov.w	lr, r7, lsl #31
   38884:	orr.w	r0, lr, r6, lsr #1
   38888:	mov.w	r6, r6, lsl #31
   3888c:	str	r0, [sp, #64]	; 0x40
   3888e:	orr.w	r0, r6, r7, lsr #1
   38892:	str	r0, [sp, #32]
   38894:	mul.w	r6, r2, r0
   38898:	ldr	r0, [sp, #64]	; 0x40
   3889a:	mla	r6, r3, r0, r6
   3889e:	ldr	r0, [sp, #32]
   388a0:	umull	r7, r8, r0, r3
   388a4:	strd	r7, r8, [sp, #16]
   388a8:	ldr	r0, [sp, #20]
   388aa:	add	r0, r6
   388ac:	str	r0, [sp, #20]
   388ae:	bcs.w	38780 <hash_blake2b@@Base+0x390>
   388b2:	ldr	r1, [sp, #56]	; 0x38
   388b4:	add.w	r5, r9, #1
   388b8:	ldr	r0, [sp, #40]	; 0x28
   388ba:	bic.w	r1, r1, #31
   388be:	ldr.w	r9, [pc, #468]	; 38a94 <hash_blake2b@@Base+0x6a4>
   388c2:	adds	r6, r0, #1
   388c4:	adds	r1, #32
   388c6:	cmp	r5, r6
   388c8:	it	cc
   388ca:	movcc	r1, #32
   388cc:	ldr.w	lr, [pc, #456]	; 38a98 <hash_blake2b@@Base+0x6a8>
   388d0:	adds	r1, r0, r1
   388d2:	str	r1, [sp, #40]	; 0x28
   388d4:	ldr	r1, [sp, #48]	; 0x30
   388d6:	ldr	r0, [sp, #72]	; 0x48
   388d8:	mul.w	r1, r9, r1
   388dc:	mla	r8, lr, r0, r1
   388e0:	ldr	r1, [sp, #48]	; 0x30
   388e2:	umull	r6, r7, r1, lr
   388e6:	add	r7, r8
   388e8:	lsls	r5, r7, #31
   388ea:	orr.w	r1, r5, r6, lsr #1
   388ee:	str	r1, [sp, #48]	; 0x30
   388f0:	ldr	r1, [sp, #4]
   388f2:	lsls	r0, r6, #31
   388f4:	ldr	r6, [sp, #0]
   388f6:	orr.w	r0, r0, r7, lsr #1
   388fa:	ldr	r5, [sp, #12]
   388fc:	lsls	r1, r1, #1
   388fe:	orr.w	r7, r1, r6, lsr #31
   38902:	ldr	r1, [sp, #4]
   38904:	lsls	r6, r6, #1
   38906:	orr.w	r6, r6, r1, lsr #31
   3890a:	ldr	r1, [sp, #12]
   3890c:	mov.w	r8, r1, lsl #7
   38910:	ldr	r1, [sp, #8]
   38912:	orr.w	ip, r8, r1, lsr #25
   38916:	lsls	r1, r1, #7
   38918:	orr.w	r1, r1, r5, lsr #25
   3891c:	ldr	r5, [sp, #20]
   3891e:	adds	r1, r6, r1
   38920:	mov.w	r6, sl, lsl #12
   38924:	orr.w	r6, r6, fp, lsr #20
   38928:	adc.w	r7, r7, ip
   3892c:	adds	r6, r1, r6
   3892e:	ldr	r1, [sp, #20]
   38930:	mov.w	ip, fp, lsl #12
   38934:	orr.w	r8, ip, sl, lsr #20
   38938:	adc.w	r7, r7, r8
   3893c:	mov.w	r8, r1, lsl #18
   38940:	ldr	r1, [sp, #16]
   38942:	orr.w	ip, r8, r1, lsr #14
   38946:	lsls	r1, r1, #18
   38948:	orr.w	r1, r1, r5, lsr #14
   3894c:	ldr	r5, [sp, #48]	; 0x30
   3894e:	adds	r6, r6, r1
   38950:	ldr.w	r8, [pc, #328]	; 38a9c <hash_blake2b@@Base+0x6ac>
   38954:	mul.w	r1, r2, r0
   38958:	adc.w	r7, r7, ip
   3895c:	mla	r5, r3, r5, r1
   38960:	umull	r0, r1, r0, r3
   38964:	add	r1, r5
   38966:	eors	r6, r0
   38968:	ldr	r0, [sp, #68]	; 0x44
   3896a:	eors	r7, r1
   3896c:	mul.w	r1, r9, r4
   38970:	umull	r4, r5, r4, lr
   38974:	mla	r1, lr, r0, r1
   38978:	mul.w	ip, r2, r6
   3897c:	add	r5, r1
   3897e:	lsls	r0, r4, #31
   38980:	mla	ip, r3, r7, ip
   38984:	orr.w	r0, r0, r5, lsr #1
   38988:	lsls	r1, r5, #31
   3898a:	umull	r6, r7, r6, r3
   3898e:	orr.w	r1, r1, r4, lsr #1
   38992:	mul.w	r4, r2, r0
   38996:	add	r7, ip
   38998:	mla	r4, r3, r1, r4
   3899c:	ldr.w	ip, [pc, #256]	; 38aa0 <hash_blake2b@@Base+0x6b0>
   389a0:	umull	r0, r1, r0, r3
   389a4:	add	r1, r4
   389a6:	adds.w	r4, r6, ip
   389aa:	adc.w	r5, r7, r8
   389ae:	eors	r4, r0
   389b0:	eors	r1, r5
   389b2:	mul.w	r0, r2, r4
   389b6:	mla	r1, r3, r1, r0
   389ba:	umull	r4, r5, r4, r3
   389be:	add	r5, r1
   389c0:	ldr	r1, [sp, #44]	; 0x2c
   389c2:	mul.w	r7, r9, r1
   389c6:	ldr	r1, [sp, #60]	; 0x3c
   389c8:	mla	r7, lr, r1, r7
   389cc:	ldr	r1, [sp, #44]	; 0x2c
   389ce:	umull	r0, r1, r1, lr
   389d2:	add	r1, r7
   389d4:	lsls	r7, r1, #31
   389d6:	lsls	r6, r0, #31
   389d8:	orr.w	r7, r7, r0, lsr #1
   389dc:	orr.w	r6, r6, r1, lsr #1
   389e0:	adds.w	r0, r4, ip
   389e4:	adc.w	r4, r5, r8
   389e8:	mul.w	r1, r2, r6
   389ec:	mla	r1, r3, r7, r1
   389f0:	umull	r6, r7, r6, r3
   389f4:	eors	r0, r6
   389f6:	add	r7, r1
   389f8:	eors	r4, r7
   389fa:	mul.w	r1, r2, r0
   389fe:	mla	r4, r3, r4, r1
   38a02:	ldr	r1, [sp, #32]
   38a04:	umull	sl, fp, r0, r3
   38a08:	mul.w	r9, r9, r1
   38a0c:	ldr	r1, [sp, #64]	; 0x40
   38a0e:	add	fp, r4
   38a10:	mla	r9, lr, r1, r9
   38a14:	ldr	r1, [sp, #32]
   38a16:	umull	r0, r1, r1, lr
   38a1a:	add	r1, r9
   38a1c:	lsls	r6, r1, #31
   38a1e:	lsls	r4, r0, #31
   38a20:	orr.w	r6, r6, r0, lsr #1
   38a24:	orr.w	r4, r4, r1, lsr #1
   38a28:	adds.w	r0, sl, ip
   38a2c:	adc.w	r1, fp, r8
   38a30:	mul.w	r5, r2, r4
   38a34:	mla	r6, r3, r6, r5
   38a38:	umull	r4, r5, r4, r3
   38a3c:	eors	r0, r4
   38a3e:	add	r5, r6
   38a40:	eors	r1, r5
   38a42:	muls	r2, r0
   38a44:	mla	r2, r3, r1, r2
   38a48:	umull	r0, r1, r0, r3
   38a4c:	adds.w	r3, r0, ip
   38a50:	add	r1, r2
   38a52:	str	r3, [sp, #24]
   38a54:	adc.w	r3, r1, r8
   38a58:	str	r3, [sp, #28]
   38a5a:	ldr	r3, [sp, #76]	; 0x4c
   38a5c:	ldrd	r0, r1, [sp, #24]
   38a60:	ldr	r2, [sp, #40]	; 0x28
   38a62:	str	r3, [sp, #120]	; 0x78
   38a64:	ldr	r3, [sp, #52]	; 0x34
   38a66:	adds	r0, r0, r3
   38a68:	adc.w	r1, r1, #0
   38a6c:	add	sp, #84	; 0x54
   38a6e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38a72:	b.n	38584 <hash_blake2b@@Base+0x194>
   38a74:	push	{r1, r2, r4, r6, r7, lr}
   38a76:	add	r5, sp, #768	; 0x300
   38a78:	movs	r7, #238	; 0xee
   38a7a:	str	r2, [r5, #12]
   38a7c:	adc.w	r7, pc, r4, lsr #11
   38a80:	add	r6, sp, #244	; 0xf4
   38a82:	stmia	r2!, {r1, r4, r5, r7}
   38a84:	ldrb	r1, [r6, #6]
   38a86:	ldr	r6, [sp, #220]	; 0xdc
   38a88:	adds	r5, #121	; 0x79
   38a8a:	ldrb	r4, [r2, #8]
   38a8c:	strh	r6, [r1, #50]	; 0x32
   38a8e:	str	r0, [r1, #28]
   38a90:	ldmia	r2, {r0, r1, r2, r7}
   38a92:	strh	r3, [r5, #46]	; 0x2e
   38a94:	ldrh	r1, [r0, r4]
   38a96:	udf	#243	; 0xf3
   38a98:	ldr	r1, [r5, #72]	; 0x48
   38a9a:	lsrs	r1, r7, #29
   38a9c:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   38a9e:	strh	r3, [r5, #46]	; 0x2e
   38aa0:	add	r6, sp, #396	; 0x18c
   38aa2:	stmia	r2!, {r1, r4, r5, r7}
   38aa4:	ldr	r3, [pc, #12]	; (38ab4 <hash_blake2b@@Base+0x6c4>)
   38aa6:	adds	r3, r2, r3
   38aa8:	str	r3, [sp, #24]
   38aaa:	ldr	r3, [pc, #12]	; (38ab8 <hash_blake2b@@Base+0x6c8>)
   38aac:	adc.w	r3, fp, r3
   38ab0:	b.n	38a58 <hash_blake2b@@Base+0x668>
   38ab2:	nop
   38ab4:	str	r5, [r0, #124]	; 0x7c
   38ab6:	asrs	r6, r2, #25
   38ab8:			; <UNDEFINED> instruction: 0xeb2f27d4
   38abc:	b.w	8bd8 <memcpy@plt>

00038ac0 <XXH_versionNumber@@Base>:
   38ac0:	movw	r0, #701	; 0x2bd
   38ac4:	bx	lr

00038ac6 <XXH32@@Base>:
   38ac6:	ands.w	r3, r0, #3
   38aca:	it	ne
   38acc:	movne	r3, #1
   38ace:	b.n	384cc <hash_blake2b@@Base+0xdc>

00038ad0 <XXH32_createState@@Base>:
   38ad0:	movs	r0, #48	; 0x30
   38ad2:	b.w	8e3c <malloc@plt>

00038ad6 <XXH32_freeState@@Base>:
   38ad6:	push	{r3, lr}
   38ad8:	blx	8b84 <free@plt+0x4>
   38adc:	movs	r0, #0
   38ade:	pop	{r3, pc}

00038ae0 <XXH32_copyState@@Base>:
   38ae0:	add.w	r3, r1, #48	; 0x30
   38ae4:	ldr.w	r2, [r1], #4
   38ae8:	cmp	r1, r3
   38aea:	str.w	r2, [r0], #4
   38aee:	bne.n	38ae4 <XXH32_copyState@@Base+0x4>
   38af0:	bx	lr

00038af2 <XXH32_reset@@Base>:
   38af2:	ldr	r2, [pc, #124]	; (38b70 <XXH32_reset@@Base+0x7e>)
   38af4:	ldr	r3, [pc, #124]	; (38b74 <XXH32_reset@@Base+0x82>)
   38af6:	add	r2, pc
   38af8:	push	{r4, r5, lr}
   38afa:	sub	sp, #60	; 0x3c
   38afc:	ldr	r3, [r2, r3]
   38afe:	mov	r5, r1
   38b00:	mov	r4, r0
   38b02:	movs	r2, #48	; 0x30
   38b04:	ldr	r3, [r3, #0]
   38b06:	str	r3, [sp, #52]	; 0x34
   38b08:	mov.w	r3, #0
   38b0c:	add	r3, sp, #4
   38b0e:	movs	r1, #0
   38b10:	mov	r0, r3
   38b12:	blx	8f98 <memset@plt+0x4>
   38b16:	ldr	r2, [pc, #76]	; (38b64 <XXH32_reset@@Base+0x72>)
   38b18:	mov	r3, r4
   38b1a:	add	r2, r5
   38b1c:	str	r2, [sp, #12]
   38b1e:	ldr	r2, [pc, #72]	; (38b68 <XXH32_reset@@Base+0x76>)
   38b20:	add	r2, r5
   38b22:	strd	r2, r5, [sp, #16]
   38b26:	ldr	r2, [pc, #68]	; (38b6c <XXH32_reset@@Base+0x7a>)
   38b28:	add	r2, r5
   38b2a:	add	r5, sp, #44	; 0x2c
   38b2c:	str	r2, [sp, #24]
   38b2e:	mov	r2, r0
   38b30:	mov	r4, r2
   38b32:	adds	r3, #8
   38b34:	ldmia	r4!, {r0, r1}
   38b36:	cmp	r4, r5
   38b38:	str.w	r0, [r3, #-8]
   38b3c:	mov	r2, r4
   38b3e:	str.w	r1, [r3, #-4]
   38b42:	bne.n	38b30 <XXH32_reset@@Base+0x3e>
   38b44:	ldr	r0, [r4, #0]
   38b46:	ldr	r2, [pc, #48]	; (38b78 <XXH32_reset@@Base+0x86>)
   38b48:	str	r0, [r3, #0]
   38b4a:	add	r2, pc
   38b4c:	ldr	r3, [pc, #36]	; (38b74 <XXH32_reset@@Base+0x82>)
   38b4e:	ldr	r3, [r2, r3]
   38b50:	ldr	r2, [r3, #0]
   38b52:	ldr	r3, [sp, #52]	; 0x34
   38b54:	eors	r2, r3
   38b56:	beq.n	38b5c <XXH32_reset@@Base+0x6a>
   38b58:	blx	8c90 <__stack_chk_fail@plt>
   38b5c:	movs	r0, #0
   38b5e:	add	sp, #60	; 0x3c
   38b60:	pop	{r4, r5, pc}
   38b62:	nop
   38b64:	add	r0, r5
   38b66:	movs	r4, #35	; 0x23
   38b68:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   38b6a:	strh	r3, [r5, #46]	; 0x2e
   38b6c:	strh	r7, [r1, #50]	; 0x32
   38b6e:	str	r0, [r1, #28]
   38b70:	movs	r2, #34	; 0x22
   38b72:	movs	r3, r0
   38b74:	lsls	r0, r1, #10
   38b76:	movs	r0, r0
   38b78:	movs	r1, #206	; 0xce
   38b7a:	movs	r3, r0

00038b7c <XXH32_update@@Base>:
   38b7c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   38b80:	mov	r4, r0
   38b82:	mov	r7, r2
   38b84:	mov	r5, r1
   38b86:	cmp	r1, #0
   38b88:	beq.w	38ca8 <XXH32_update@@Base+0x12c>
   38b8c:	ldr	r3, [r0, #0]
   38b8e:	adds	r6, r1, r2
   38b90:	add	r3, r2
   38b92:	str	r3, [r0, #0]
   38b94:	cmp	r3, #15
   38b96:	it	ls
   38b98:	cmpls	r2, #15
   38b9a:	ldr	r0, [r0, #4]
   38b9c:	ite	hi
   38b9e:	movhi	r3, #1
   38ba0:	movls	r3, #0
   38ba2:	orrs	r3, r0
   38ba4:	str	r3, [r4, #4]
   38ba6:	ldr	r3, [r4, #40]	; 0x28
   38ba8:	adds	r0, r3, r2
   38baa:	cmp	r0, #15
   38bac:	bhi.n	38bc2 <XXH32_update@@Base+0x46>
   38bae:	add.w	r0, r4, #24
   38bb2:	add	r0, r3
   38bb4:	bl	38abc <hash_blake2b@@Base+0x6cc>
   38bb8:	ldr	r2, [r4, #40]	; 0x28
   38bba:	add	r2, r7
   38bbc:	str	r2, [r4, #40]	; 0x28
   38bbe:	movs	r0, #0
   38bc0:	b.n	38caa <XXH32_update@@Base+0x12e>
   38bc2:	cbz	r3, 38c22 <XXH32_update@@Base+0xa6>
   38bc4:	add.w	r0, r4, #24
   38bc8:	rsb	r2, r3, #16
   38bcc:	add	r0, r3
   38bce:	bl	38abc <hash_blake2b@@Base+0x6cc>
   38bd2:	ldr	r1, [pc, #220]	; (38cb0 <XXH32_update@@Base+0x134>)
   38bd4:	ldr	r2, [r4, #8]
   38bd6:	ldr	r3, [r4, #24]
   38bd8:	ldr	r0, [r4, #12]
   38bda:	mla	r3, r1, r3, r2
   38bde:	ldr	r2, [pc, #212]	; (38cb4 <XXH32_update@@Base+0x138>)
   38be0:	mov.w	r3, r3, ror #19
   38be4:	muls	r3, r2
   38be6:	str	r3, [r4, #8]
   38be8:	ldr	r3, [r4, #28]
   38bea:	mla	r3, r1, r3, r0
   38bee:	ldr	r0, [r4, #16]
   38bf0:	mov.w	r3, r3, ror #19
   38bf4:	muls	r3, r2
   38bf6:	str	r3, [r4, #12]
   38bf8:	ldr	r3, [r4, #32]
   38bfa:	mla	r3, r1, r3, r0
   38bfe:	ldr	r0, [r4, #20]
   38c00:	mov.w	r3, r3, ror #19
   38c04:	muls	r3, r2
   38c06:	str	r3, [r4, #16]
   38c08:	ldr	r3, [r4, #36]	; 0x24
   38c0a:	mla	r1, r1, r3, r0
   38c0e:	ldr	r3, [r4, #40]	; 0x28
   38c10:	rsb	r3, r3, #16
   38c14:	add	r5, r3
   38c16:	movs	r3, #0
   38c18:	str	r3, [r4, #40]	; 0x28
   38c1a:	mov.w	r1, r1, ror #19
   38c1e:	muls	r2, r1
   38c20:	str	r2, [r4, #20]
   38c22:	sub.w	r3, r6, #16
   38c26:	cmp	r3, r5
   38c28:	bcc.n	38c92 <XXH32_update@@Base+0x116>
   38c2a:	ldrd	ip, r7, [r4, #8]
   38c2e:	mov	r1, r5
   38c30:	ldrd	r0, r8, [r4, #16]
   38c34:	ldr.w	r9, [pc, #120]	; 38cb0 <XXH32_update@@Base+0x134>
   38c38:	ldr.w	lr, [pc, #120]	; 38cb4 <XXH32_update@@Base+0x138>
   38c3c:	ldr	r2, [r1, #0]
   38c3e:	adds	r1, #16
   38c40:	mla	ip, r9, r2, ip
   38c44:	ldr.w	r2, [r1, #-12]
   38c48:	mla	r7, r9, r2, r7
   38c4c:	ldr.w	r2, [r1, #-8]
   38c50:	mov.w	ip, ip, ror #19
   38c54:	mla	r0, r9, r2, r0
   38c58:	ldr.w	r2, [r1, #-4]
   38c5c:	mov.w	r7, r7, ror #19
   38c60:	cmp	r3, r1
   38c62:	mul.w	ip, lr, ip
   38c66:	mla	r2, r9, r2, r8
   38c6a:	mov.w	r0, r0, ror #19
   38c6e:	mul.w	r7, lr, r7
   38c72:	mul.w	r0, lr, r0
   38c76:	mov.w	r2, r2, ror #19
   38c7a:	mul.w	r8, lr, r2
   38c7e:	bcs.n	38c3c <XXH32_update@@Base+0xc0>
   38c80:	subs	r3, r3, r5
   38c82:	strd	ip, r7, [r4, #8]
   38c86:	bic.w	r3, r3, #15
   38c8a:	strd	r0, r8, [r4, #16]
   38c8e:	adds	r3, #16
   38c90:	add	r5, r3
   38c92:	cmp	r5, r6
   38c94:	bcs.n	38bbe <XXH32_update@@Base+0x42>
   38c96:	subs	r6, r6, r5
   38c98:	add.w	r0, r4, #24
   38c9c:	mov	r1, r5
   38c9e:	mov	r2, r6
   38ca0:	bl	38abc <hash_blake2b@@Base+0x6cc>
   38ca4:	str	r6, [r4, #40]	; 0x28
   38ca6:	b.n	38bbe <XXH32_update@@Base+0x42>
   38ca8:	movs	r0, #1
   38caa:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   38cae:	nop
   38cb0:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   38cb2:	strh	r3, [r5, #46]	; 0x2e
   38cb4:	ldrb	r1, [r6, #6]
   38cb6:	ldr	r6, [sp, #220]	; 0xdc

00038cb8 <XXH32_digest@@Base>:
   38cb8:	push	{r4, r5}
   38cba:	ldr	r3, [r0, #4]
   38cbc:	ldr	r2, [r0, #16]
   38cbe:	cbz	r3, 38ce8 <XXH32_digest@@Base+0x30>
   38cc0:	ldrd	r1, r3, [r0, #8]
   38cc4:	mov.w	r4, r3, ror #25
   38cc8:	ldr	r3, [r0, #20]
   38cca:	add.w	r4, r4, r1, ror #31
   38cce:	add.w	r4, r4, r2, ror #20
   38cd2:	add.w	r4, r4, r3, ror #14
   38cd6:	mov	r1, r0
   38cd8:	ldr	r2, [r0, #40]	; 0x28
   38cda:	ldr.w	r5, [r1], #24
   38cde:	movs	r3, #0
   38ce0:	adds	r0, r4, r5
   38ce2:	pop	{r4, r5}
   38ce4:	b.w	38450 <hash_blake2b@@Base+0x60>
   38ce8:	ldr	r4, [pc, #4]	; (38cf0 <XXH32_digest@@Base+0x38>)
   38cea:	add	r4, r2
   38cec:	b.n	38cd6 <XXH32_digest@@Base+0x1e>
   38cee:	nop
   38cf0:	str	r1, [r6, #120]	; 0x78
   38cf2:	asrs	r6, r2, #25

00038cf4 <XXH32_canonicalFromHash@@Base>:
   38cf4:	rev	r1, r1
   38cf6:	str	r1, [r0, #0]
   38cf8:	bx	lr

00038cfa <XXH32_hashFromCanonical@@Base>:
   38cfa:	ldr	r0, [r0, #0]
   38cfc:	rev	r0, r0
   38cfe:	bx	lr

00038d00 <XXH64@@Base>:
   38d00:	push	{r0, r1, r4, lr}
   38d02:	ands.w	r4, r0, #7
   38d06:	it	ne
   38d08:	movne	r4, #1
   38d0a:	str	r4, [sp, #0]
   38d0c:	bl	38720 <hash_blake2b@@Base+0x330>
   38d10:	add	sp, #8
   38d12:	pop	{r4, pc}

00038d14 <XXH64_createState@@Base>:
   38d14:	movs	r0, #88	; 0x58
   38d16:	b.w	8e3c <malloc@plt>

00038d1a <XXH64_freeState@@Base>:
   38d1a:	push	{r3, lr}
   38d1c:	blx	8b84 <free@plt+0x4>
   38d20:	movs	r0, #0
   38d22:	pop	{r3, pc}

00038d24 <XXH64_copyState@@Base>:
   38d24:	movs	r2, #88	; 0x58
   38d26:	b.w	8bd8 <memcpy@plt>

00038d2a <XXH64_reset@@Base>:
   38d2a:	push	{r4, r5, r6, r7, lr}
   38d2c:	mov	r4, r2
   38d2e:	ldr	r2, [pc, #140]	; (38dbc <XXH64_reset@@Base+0x92>)
   38d30:	mov	r5, r3
   38d32:	ldr	r3, [pc, #140]	; (38dc0 <XXH64_reset@@Base+0x96>)
   38d34:	sub	sp, #100	; 0x64
   38d36:	add	r2, pc
   38d38:	mov	r7, r0
   38d3a:	mov	r6, sp
   38d3c:	movs	r1, #0
   38d3e:	ldr	r3, [r2, r3]
   38d40:	mov	r0, r6
   38d42:	movs	r2, #88	; 0x58
   38d44:	ldr	r3, [r3, #0]
   38d46:	str	r3, [sp, #92]	; 0x5c
   38d48:	mov.w	r3, #0
   38d4c:	blx	8f98 <memset@plt+0x4>
   38d50:	ldr	r3, [pc, #80]	; (38da4 <XXH64_reset@@Base+0x7a>)
   38d52:	mov	r1, r6
   38d54:	ldr	r2, [pc, #80]	; (38da8 <XXH64_reset@@Base+0x7e>)
   38d56:	mov	r0, r7
   38d58:	adds	r3, r4, r3
   38d5a:	strd	r4, r5, [sp, #24]
   38d5e:	adc.w	r2, r5, r2
   38d62:	strd	r3, r2, [sp, #8]
   38d66:	ldr	r3, [pc, #68]	; (38dac <XXH64_reset@@Base+0x82>)
   38d68:	ldr	r2, [pc, #68]	; (38db0 <XXH64_reset@@Base+0x86>)
   38d6a:	adds	r3, r4, r3
   38d6c:	adc.w	r2, r5, r2
   38d70:	strd	r3, r2, [sp, #16]
   38d74:	ldr	r2, [pc, #60]	; (38db4 <XXH64_reset@@Base+0x8a>)
   38d76:	ldr	r3, [pc, #64]	; (38db8 <XXH64_reset@@Base+0x8e>)
   38d78:	adds	r4, r4, r2
   38d7a:	mov.w	r2, #80	; 0x50
   38d7e:	adc.w	r5, r3, r5
   38d82:	strd	r4, r5, [sp, #32]
   38d86:	blx	8bdc <memcpy@plt+0x4>
   38d8a:	ldr	r2, [pc, #56]	; (38dc4 <XXH64_reset@@Base+0x9a>)
   38d8c:	ldr	r3, [pc, #48]	; (38dc0 <XXH64_reset@@Base+0x96>)
   38d8e:	add	r2, pc
   38d90:	ldr	r3, [r2, r3]
   38d92:	ldr	r2, [r3, #0]
   38d94:	ldr	r3, [sp, #92]	; 0x5c
   38d96:	eors	r2, r3
   38d98:	beq.n	38d9e <XXH64_reset@@Base+0x74>
   38d9a:	blx	8c90 <__stack_chk_fail@plt>
   38d9e:	movs	r0, #0
   38da0:	add	sp, #100	; 0x64
   38da2:	pop	{r4, r5, r6, r7, pc}
   38da4:	push	{r1, r2, r4, r6, r7, lr}
   38da6:	add	r5, sp, #768	; 0x300
   38da8:	movs	r7, #238	; 0xee
   38daa:	str	r2, [r5, #12]
   38dac:	adc.w	r7, pc, r4, lsr #11
   38db0:	add	r6, sp, #244	; 0xf4
   38db2:	stmia	r2!, {r1, r4, r5, r7}
   38db4:	adds	r5, #121	; 0x79
   38db6:	ldrb	r4, [r2, #8]
   38db8:	strh	r6, [r1, #50]	; 0x32
   38dba:	str	r0, [r1, #28]
   38dbc:	subs	r2, r4, #7
   38dbe:	movs	r3, r0
   38dc0:	lsls	r0, r1, #10
   38dc2:	movs	r0, r0
   38dc4:	subs	r2, r1, #6
   38dc6:	movs	r3, r0

00038dc8 <XXH64_update@@Base>:
   38dc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38dcc:	mov	r4, r0
   38dce:	sub	sp, #36	; 0x24
   38dd0:	mov	r5, r2
   38dd2:	mov	r8, r1
   38dd4:	cmp	r1, #0
   38dd6:	beq.w	390bc <XXH64_update@@Base+0x2f4>
   38dda:	ldrd	r6, r7, [r0]
   38dde:	add.w	r9, r1, r2
   38de2:	ldr	r3, [r0, #72]	; 0x48
   38de4:	adds	r6, r6, r2
   38de6:	adc.w	r7, r7, #0
   38dea:	strd	r6, r7, [r0]
   38dee:	adds	r0, r3, r2
   38df0:	cmp	r0, #31
   38df2:	bhi.n	38e08 <XXH64_update@@Base+0x40>
   38df4:	add.w	r0, r4, #40	; 0x28
   38df8:	add	r0, r3
   38dfa:	bl	38abc <hash_blake2b@@Base+0x6cc>
   38dfe:	ldr	r2, [r4, #72]	; 0x48
   38e00:	add	r2, r5
   38e02:	str	r2, [r4, #72]	; 0x48
   38e04:	movs	r0, #0
   38e06:	b.n	390be <XXH64_update@@Base+0x2f6>
   38e08:	cmp	r3, #0
   38e0a:	beq.w	38f18 <XXH64_update@@Base+0x150>
   38e0e:	add.w	r0, r4, #40	; 0x28
   38e12:	rsb	r2, r3, #32
   38e16:	add	r0, r3
   38e18:	ldr	r5, [pc, #680]	; (390c4 <XXH64_update@@Base+0x2fc>)
   38e1a:	bl	38abc <hash_blake2b@@Base+0x6cc>
   38e1e:	ldr.w	ip, [pc, #688]	; 390d0 <XXH64_update@@Base+0x308>
   38e22:	ldr	r6, [r4, #40]	; 0x28
   38e24:	ldr	r3, [r4, #44]	; 0x2c
   38e26:	mul.w	r2, ip, r6
   38e2a:	mla	r3, r5, r3, r2
   38e2e:	umull	r6, r7, r6, r5
   38e32:	add	r7, r3
   38e34:	ldrd	r3, r2, [r4, #8]
   38e38:	adds	r3, r6, r3
   38e3a:	ldr	r6, [pc, #652]	; (390c8 <XXH64_update@@Base+0x300>)
   38e3c:	adc.w	r0, r7, r2
   38e40:	ldr	r2, [pc, #648]	; (390cc <XXH64_update@@Base+0x304>)
   38e42:	lsls	r1, r0, #31
   38e44:	orr.w	r1, r1, r3, lsr #1
   38e48:	lsls	r3, r3, #31
   38e4a:	orr.w	r0, r3, r0, lsr #1
   38e4e:	mul.w	r3, r6, r0
   38e52:	mla	r3, r2, r1, r3
   38e56:	umull	r0, r1, r0, r2
   38e5a:	add	r1, r3
   38e5c:	ldr	r3, [r4, #52]	; 0x34
   38e5e:	strd	r0, r1, [r4, #8]
   38e62:	ldr	r0, [r4, #48]	; 0x30
   38e64:	mul.w	r1, ip, r0
   38e68:	mla	r3, r5, r3, r1
   38e6c:	umull	r0, r1, r0, r5
   38e70:	add	r1, r3
   38e72:	ldrd	r3, r7, [r4, #16]
   38e76:	adds	r3, r0, r3
   38e78:	adc.w	r0, r1, r7
   38e7c:	lsls	r1, r0, #31
   38e7e:	orr.w	r1, r1, r3, lsr #1
   38e82:	lsls	r3, r3, #31
   38e84:	orr.w	r0, r3, r0, lsr #1
   38e88:	mul.w	r3, r6, r0
   38e8c:	mla	r3, r2, r1, r3
   38e90:	umull	r0, r1, r0, r2
   38e94:	add	r1, r3
   38e96:	ldr	r3, [r4, #60]	; 0x3c
   38e98:	strd	r0, r1, [r4, #16]
   38e9c:	ldr	r0, [r4, #56]	; 0x38
   38e9e:	mul.w	r1, ip, r0
   38ea2:	mla	r3, r5, r3, r1
   38ea6:	umull	r0, r1, r0, r5
   38eaa:	add	r1, r3
   38eac:	ldrd	r3, r7, [r4, #24]
   38eb0:	adds	r3, r0, r3
   38eb2:	adc.w	r0, r1, r7
   38eb6:	lsls	r1, r0, #31
   38eb8:	orr.w	r1, r1, r3, lsr #1
   38ebc:	lsls	r3, r3, #31
   38ebe:	orr.w	r0, r3, r0, lsr #1
   38ec2:	mul.w	r3, r6, r0
   38ec6:	mla	r3, r2, r1, r3
   38eca:	umull	r0, r1, r0, r2
   38ece:	add	r1, r3
   38ed0:	ldr	r3, [r4, #68]	; 0x44
   38ed2:	strd	r0, r1, [r4, #24]
   38ed6:	ldr	r0, [r4, #64]	; 0x40
   38ed8:	mul.w	ip, ip, r0
   38edc:	mla	ip, r5, r3, ip
   38ee0:	umull	r0, r1, r0, r5
   38ee4:	ldrd	r3, r5, [r4, #32]
   38ee8:	add	r1, ip
   38eea:	adds	r3, r0, r3
   38eec:	adc.w	r5, r1, r5
   38ef0:	lsls	r1, r5, #31
   38ef2:	orr.w	r1, r1, r3, lsr #1
   38ef6:	lsls	r3, r3, #31
   38ef8:	orr.w	r5, r3, r5, lsr #1
   38efc:	muls	r6, r5
   38efe:	mla	r6, r2, r1, r6
   38f02:	umull	r2, r3, r5, r2
   38f06:	add	r3, r6
   38f08:	strd	r2, r3, [r4, #32]
   38f0c:	ldr	r3, [r4, #72]	; 0x48
   38f0e:	rsb	r3, r3, #32
   38f12:	add	r8, r3
   38f14:	movs	r3, #0
   38f16:	str	r3, [r4, #72]	; 0x48
   38f18:	add.w	r3, r8, #32
   38f1c:	cmp	r9, r3
   38f1e:	bcc.w	390a2 <XXH64_update@@Base+0x2da>
   38f22:	ldrd	r2, r3, [r4, #8]
   38f26:	sub.w	ip, r9, #32
   38f2a:	ldr	r5, [pc, #408]	; (390c4 <XXH64_update@@Base+0x2fc>)
   38f2c:	ldr	r7, [pc, #416]	; (390d0 <XXH64_update@@Base+0x308>)
   38f2e:	strd	r2, r3, [sp]
   38f32:	ldrd	r2, r3, [r4, #16]
   38f36:	strd	r2, r3, [sp, #8]
   38f3a:	ldrd	r2, r3, [r4, #24]
   38f3e:	strd	r2, r3, [sp, #16]
   38f42:	ldrd	r2, r3, [r4, #32]
   38f46:	strd	r2, r3, [sp, #24]
   38f4a:	mov	r3, r8
   38f4c:	ldr	r2, [pc, #380]	; (390cc <XXH64_update@@Base+0x304>)
   38f4e:	ldr	r0, [r3, #0]
   38f50:	adds	r3, #32
   38f52:	ldr.w	lr, [r3, #-28]
   38f56:	ldr	r6, [pc, #368]	; (390c8 <XXH64_update@@Base+0x300>)
   38f58:	umull	sl, fp, r0, r5
   38f5c:	mul.w	r1, r7, r0
   38f60:	mla	lr, r5, lr, r1
   38f64:	ldr	r1, [sp, #0]
   38f66:	adds.w	r0, sl, r1
   38f6a:	ldr	r1, [sp, #4]
   38f6c:	add	fp, lr
   38f6e:	adc.w	r1, fp, r1
   38f72:	mov.w	lr, r1, lsl #31
   38f76:	orr.w	lr, lr, r0, lsr #1
   38f7a:	lsls	r0, r0, #31
   38f7c:	orr.w	r1, r0, r1, lsr #1
   38f80:	ldr	r0, [pc, #324]	; (390c8 <XXH64_update@@Base+0x300>)
   38f82:	muls	r0, r1
   38f84:	mla	lr, r2, lr, r0
   38f88:	umull	r0, r1, r1, r2
   38f8c:	strd	r0, r1, [sp]
   38f90:	ldr	r1, [sp, #4]
   38f92:	ldr.w	r0, [r3, #-24]
   38f96:	add	r1, lr
   38f98:	ldr.w	lr, [r3, #-20]
   38f9c:	str	r1, [sp, #4]
   38f9e:	umull	sl, fp, r0, r5
   38fa2:	mul.w	r1, r7, r0
   38fa6:	mla	lr, r5, lr, r1
   38faa:	ldr	r1, [sp, #8]
   38fac:	adds.w	r0, sl, r1
   38fb0:	ldr	r1, [sp, #12]
   38fb2:	add	fp, lr
   38fb4:	adc.w	r1, fp, r1
   38fb8:	mov.w	lr, r1, lsl #31
   38fbc:	orr.w	lr, lr, r0, lsr #1
   38fc0:	lsls	r0, r0, #31
   38fc2:	orr.w	r1, r0, r1, lsr #1
   38fc6:	ldr	r0, [pc, #256]	; (390c8 <XXH64_update@@Base+0x300>)
   38fc8:	muls	r0, r1
   38fca:	mla	lr, r2, lr, r0
   38fce:	umull	r0, r1, r1, r2
   38fd2:	strd	r0, r1, [sp, #8]
   38fd6:	ldr	r1, [sp, #12]
   38fd8:	ldr.w	r0, [r3, #-16]
   38fdc:	add	r1, lr
   38fde:	ldr.w	lr, [r3, #-12]
   38fe2:	str	r1, [sp, #12]
   38fe4:	umull	sl, fp, r0, r5
   38fe8:	mul.w	r1, r7, r0
   38fec:	mla	lr, r5, lr, r1
   38ff0:	ldr	r1, [sp, #16]
   38ff2:	adds.w	r0, sl, r1
   38ff6:	ldr	r1, [sp, #20]
   38ff8:	add	fp, lr
   38ffa:	adc.w	lr, fp, r1
   38ffe:	mov.w	r1, lr, lsl #31
   39002:	orr.w	r1, r1, r0, lsr #1
   39006:	lsls	r0, r0, #31
   39008:	orr.w	r0, r0, lr, lsr #1
   3900c:	umull	sl, fp, r0, r2
   39010:	mul.w	lr, r6, r0
   39014:	ldr	r6, [sp, #24]
   39016:	mla	r1, r2, r1, lr
   3901a:	ldr.w	lr, [r3, #-4]
   3901e:	strd	sl, fp, [sp, #16]
   39022:	ldr	r0, [sp, #20]
   39024:	add	r1, r0
   39026:	ldr.w	r0, [r3, #-8]
   3902a:	str	r1, [sp, #20]
   3902c:	mul.w	r1, r7, r0
   39030:	mla	lr, r5, lr, r1
   39034:	umull	r0, r1, r0, r5
   39038:	adds.w	sl, r0, r6
   3903c:	ldr	r6, [sp, #28]
   3903e:	add	r1, lr
   39040:	ldr	r0, [pc, #132]	; (390c8 <XXH64_update@@Base+0x300>)
   39042:	adc.w	r6, r1, r6
   39046:	cmp	ip, r3
   39048:	mov.w	r1, r6, lsl #31
   3904c:	orr.w	r1, r1, sl, lsr #1
   39050:	mov.w	sl, sl, lsl #31
   39054:	orr.w	sl, sl, r6, lsr #1
   39058:	mul.w	r0, r0, sl
   3905c:	umull	sl, fp, sl, r2
   39060:	mla	r1, r2, r1, r0
   39064:	strd	sl, fp, [sp, #24]
   39068:	ldr	r0, [sp, #28]
   3906a:	add	r0, r1
   3906c:	str	r0, [sp, #28]
   3906e:	bcs.w	38f4e <XXH64_update@@Base+0x186>
   39072:	sub.w	r3, r9, #32
   39076:	sub.w	r3, r3, r8
   3907a:	bic.w	r3, r3, #31
   3907e:	adds	r3, #32
   39080:	add	r8, r3
   39082:	ldrd	r2, r3, [sp]
   39086:	strd	r2, r3, [r4, #8]
   3908a:	ldrd	r2, r3, [sp, #8]
   3908e:	strd	r2, r3, [r4, #16]
   39092:	ldrd	r2, r3, [sp, #16]
   39096:	strd	r2, r3, [r4, #24]
   3909a:	ldrd	r2, r3, [sp, #24]
   3909e:	strd	r2, r3, [r4, #32]
   390a2:	cmp	r8, r9
   390a4:	bcs.w	38e04 <XXH64_update@@Base+0x3c>
   390a8:	sub.w	r5, r9, r8
   390ac:	add.w	r0, r4, #40	; 0x28
   390b0:	mov	r1, r8
   390b2:	mov	r2, r5
   390b4:	bl	38abc <hash_blake2b@@Base+0x6cc>
   390b8:	str	r5, [r4, #72]	; 0x48
   390ba:	b.n	38e04 <XXH64_update@@Base+0x3c>
   390bc:	movs	r0, #1
   390be:	add	sp, #36	; 0x24
   390c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   390c4:	adc.w	r7, pc, r4, lsr #11
   390c8:	ldrb	r1, [r6, #6]
   390ca:	ldr	r6, [sp, #220]	; 0xdc
   390cc:	ldmia	r2, {r0, r1, r2, r7}
   390ce:	strh	r3, [r5, #46]	; 0x2e
   390d0:	add	r6, sp, #244	; 0xf4
   390d2:	stmia	r2!, {r1, r4, r5, r7}

000390d4 <XXH64_digest@@Base>:
   390d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   390d8:	sub	sp, #28
   390da:	ldrd	r3, r4, [r0]
   390de:	strd	r3, r4, [sp, #8]
   390e2:	ldrd	r2, r3, [sp, #8]
   390e6:	ldrd	r4, r5, [r0, #24]
   390ea:	cmp	r3, #0
   390ec:	it	eq
   390ee:	cmpeq	r2, #32
   390f0:	bcc.w	392b8 <XXH64_digest@@Base+0x1e4>
   390f4:	ldrd	sl, lr, [r0, #8]
   390f8:	ldr	r6, [pc, #456]	; (392c4 <XXH64_digest@@Base+0x1f0>)
   390fa:	ldr	r7, [pc, #460]	; (392c8 <XXH64_digest@@Base+0x1f4>)
   390fc:	ldrd	r1, ip, [r0, #16]
   39100:	umull	r2, r3, sl, r6
   39104:	mul.w	r8, r7, sl
   39108:	ldr	r7, [r0, #36]	; 0x24
   3910a:	mla	r8, r6, lr, r8
   3910e:	add	r3, r8
   39110:	mov.w	r8, r2, lsl #31
   39114:	mov.w	fp, r3, lsl #31
   39118:	orr.w	r8, r8, r3, lsr #1
   3911c:	mov.w	r3, lr, lsl #1
   39120:	orr.w	r9, fp, r2, lsr #1
   39124:	orr.w	r2, r3, sl, lsr #31
   39128:	mov.w	r3, sl, lsl #1
   3912c:	orr.w	fp, r3, lr, lsr #31
   39130:	mov.w	lr, r1, lsl #7
   39134:	mov.w	r3, ip, lsl #7
   39138:	orr.w	lr, lr, ip, lsr #25
   3913c:	orr.w	sl, r3, r1, lsr #25
   39140:	adds.w	r3, fp, lr
   39144:	mov.w	lr, r4, lsl #12
   39148:	adc.w	sl, r2, sl
   3914c:	orr.w	lr, lr, r5, lsr #20
   39150:	lsls	r2, r5, #12
   39152:	adds.w	lr, r3, lr
   39156:	ldr	r3, [r0, #36]	; 0x24
   39158:	orr.w	fp, r2, r4, lsr #20
   3915c:	adc.w	sl, sl, fp
   39160:	mov.w	fp, r3, lsl #18
   39164:	ldr	r3, [r0, #32]
   39166:	orr.w	r2, fp, r3, lsr #14
   3916a:	lsls	r3, r3, #18
   3916c:	orr.w	r3, r3, r7, lsr #14
   39170:	adds.w	lr, lr, r3
   39174:	ldr	r3, [pc, #340]	; (392cc <XXH64_digest@@Base+0x1f8>)
   39176:	adc.w	sl, sl, r2
   3917a:	ldr	r2, [pc, #340]	; (392d0 <XXH64_digest@@Base+0x1fc>)
   3917c:	mul.w	fp, r2, r8
   39180:	mla	fp, r3, r9, fp
   39184:	umull	r8, r9, r8, r3
   39188:	add	r9, fp
   3918a:	eor.w	lr, lr, r8
   3918e:	eor.w	sl, sl, r9
   39192:	mul.w	r8, r2, lr
   39196:	mla	sl, r3, sl, r8
   3919a:	umull	r7, r8, lr, r3
   3919e:	strd	r7, r8, [sp, #16]
   391a2:	ldr	r7, [sp, #20]
   391a4:	add	r7, sl
   391a6:	str	r7, [sp, #20]
   391a8:	ldr	r7, [pc, #284]	; (392c8 <XXH64_digest@@Base+0x1f4>)
   391aa:	umull	sl, fp, r1, r6
   391ae:	mul.w	lr, r7, r1
   391b2:	ldr	r7, [sp, #16]
   391b4:	mla	ip, r6, ip, lr
   391b8:	mov.w	r8, sl, lsl #31
   391bc:	add	fp, ip
   391be:	orr.w	r8, r8, fp, lsr #1
   391c2:	mov.w	r1, fp, lsl #31
   391c6:	orr.w	r1, r1, sl, lsr #1
   391ca:	mul.w	ip, r2, r8
   391ce:	mla	r1, r3, r1, ip
   391d2:	ldr.w	ip, [pc, #268]	; 392e0 <XXH64_digest@@Base+0x20c>
   391d6:	umull	r8, r9, r8, r3
   391da:	add	r9, r1
   391dc:	ldr	r1, [pc, #244]	; (392d4 <XXH64_digest@@Base+0x200>)
   391de:	adds.w	sl, r7, r1
   391e2:	ldr	r7, [sp, #20]
   391e4:	eor.w	sl, r8, sl
   391e8:	adc.w	lr, r7, ip
   391ec:	ldr	r7, [pc, #216]	; (392c8 <XXH64_digest@@Base+0x1f4>)
   391ee:	eor.w	lr, r9, lr
   391f2:	mul.w	r8, r2, sl
   391f6:	mla	lr, r3, lr, r8
   391fa:	umull	sl, fp, sl, r3
   391fe:	add	fp, lr
   39200:	mul.w	lr, r7, r4
   39204:	umull	r7, r8, r4, r6
   39208:	mla	lr, r6, r5, lr
   3920c:	add	r8, lr
   3920e:	lsls	r4, r7, #31
   39210:	orr.w	r4, r4, r8, lsr #1
   39214:	mov.w	lr, r8, lsl #31
   39218:	orr.w	lr, lr, r7, lsr #1
   3921c:	adds.w	r8, sl, r1
   39220:	mul.w	r5, r2, r4
   39224:	mla	lr, r3, lr, r5
   39228:	umull	r4, r5, r4, r3
   3922c:	add	r5, lr
   3922e:	eor.w	r8, r4, r8
   39232:	adc.w	lr, fp, ip
   39236:	eor.w	r4, r5, lr
   3923a:	mul.w	r5, r2, r8
   3923e:	mla	r4, r3, r4, r5
   39242:	ldr	r5, [pc, #132]	; (392c8 <XXH64_digest@@Base+0x1f4>)
   39244:	umull	r8, r9, r8, r3
   39248:	add	r9, r4
   3924a:	ldr	r4, [r0, #32]
   3924c:	mul.w	r7, r5, r4
   39250:	ldr	r5, [r0, #32]
   39252:	ldr	r4, [r0, #36]	; 0x24
   39254:	umull	sl, fp, r5, r6
   39258:	mla	r4, r6, r4, r7
   3925c:	add	fp, r4
   3925e:	mov.w	r6, sl, lsl #31
   39262:	orr.w	r6, r6, fp, lsr #1
   39266:	mov.w	r4, fp, lsl #31
   3926a:	orr.w	r4, r4, sl, lsr #1
   3926e:	mul.w	r5, r2, r6
   39272:	mla	r4, r3, r4, r5
   39276:	umull	r6, r7, r6, r3
   3927a:	add	r7, r4
   3927c:	adds.w	r4, r8, r1
   39280:	eor.w	r4, r4, r6
   39284:	adc.w	r5, r9, ip
   39288:	eors	r5, r7
   3928a:	muls	r2, r4
   3928c:	mla	r2, r3, r5, r2
   39290:	umull	r5, r6, r4, r3
   39294:	add	r6, r2
   39296:	adds	r4, r5, r1
   39298:	adc.w	r1, r6, ip
   3929c:	movs	r3, #0
   3929e:	str	r3, [sp, #0]
   392a0:	ldr	r3, [sp, #8]
   392a2:	add.w	r2, r0, #40	; 0x28
   392a6:	adds	r0, r3, r4
   392a8:	ldr	r4, [sp, #12]
   392aa:	adc.w	r1, r4, r1
   392ae:	bl	38584 <hash_blake2b@@Base+0x194>
   392b2:	add	sp, #28
   392b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   392b8:	ldr	r1, [pc, #28]	; (392d8 <XXH64_digest@@Base+0x204>)
   392ba:	adds	r4, r4, r1
   392bc:	ldr	r1, [pc, #28]	; (392dc <XXH64_digest@@Base+0x208>)
   392be:	adc.w	r1, r5, r1
   392c2:	b.n	3929c <XXH64_digest@@Base+0x1c8>
   392c4:	adc.w	r7, pc, r4, lsr #11
   392c8:	add	r6, sp, #244	; 0xf4
   392ca:	stmia	r2!, {r1, r4, r5, r7}
   392cc:	ldmia	r2, {r0, r1, r2, r7}
   392ce:	strh	r3, [r5, #46]	; 0x2e
   392d0:	ldrb	r1, [r6, #6]
   392d2:	ldr	r6, [sp, #220]	; 0xdc
   392d4:	add	r6, sp, #396	; 0x18c
   392d6:	stmia	r2!, {r1, r4, r5, r7}
   392d8:	str	r5, [r0, #124]	; 0x7c
   392da:	asrs	r6, r2, #25
   392dc:			; <UNDEFINED> instruction: 0xeb2f27d4
   392e0:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   392e2:	strh	r3, [r5, #46]	; 0x2e

000392e4 <XXH64_canonicalFromHash@@Base>:
   392e4:	push	{r0, r1, r4, lr}
   392e6:	mov	r4, r0
   392e8:	strd	r2, r3, [sp]
   392ec:	rev	r2, r2
   392ee:	ldr	r3, [sp, #4]
   392f0:	rev	r3, r3
   392f2:	strd	r3, r2, [sp]
   392f6:	mov	r3, sp
   392f8:	ldmia	r3!, {r0, r1}
   392fa:	str	r0, [r4, #0]
   392fc:	str	r1, [r4, #4]
   392fe:	add	sp, #8
   39300:	pop	{r4, pc}

00039302 <XXH64_hashFromCanonical@@Base>:
   39302:	ldr	r1, [r0, #0]
   39304:	ldr	r0, [r0, #4]
   39306:	rev	r1, r1
   39308:	rev	r0, r0
   3930a:	bx	lr
   3930c:	ldr	r2, [pc, #372]	; (39484 <XXH64_hashFromCanonical@@Base+0x182>)
   3930e:	ldr	r3, [pc, #376]	; (39488 <XXH64_hashFromCanonical@@Base+0x186>)
   39310:	add	r2, pc
   39312:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39316:	sub	sp, #308	; 0x134
   39318:	ldr	r3, [r2, r3]
   3931a:	add	r1, sp, #44	; 0x2c
   3931c:	add.w	r5, r0, #64	; 0x40
   39320:	mov	r2, r0
   39322:	ldr	r3, [r3, #0]
   39324:	str	r3, [sp, #300]	; 0x12c
   39326:	mov.w	r3, #0
   3932a:	mov	r4, r1
   3932c:	ldrb.w	r3, [r2, #43]	; 0x2b
   39330:	adds	r2, #4
   39332:	ldrb.w	r6, [r2, #38]	; 0x26
   39336:	lsls	r3, r3, #16
   39338:	orr.w	r3, r3, r6, lsl #24
   3933c:	ldrb.w	r6, [r2, #41]	; 0x29
   39340:	orrs	r3, r6
   39342:	ldrb.w	r6, [r2, #40]	; 0x28
   39346:	cmp	r5, r2
   39348:	orr.w	r3, r3, r6, lsl #8
   3934c:	str.w	r3, [r4], #4
   39350:	bne.n	3932c <XXH64_hashFromCanonical@@Base+0x2a>
   39352:	movs	r4, #16
   39354:	ldr	r2, [r1, #56]	; 0x38
   39356:	mov	r6, r1
   39358:	ldr.w	r5, [r1, #4]!
   3935c:	adds	r4, #1
   3935e:	cmp	r4, #64	; 0x40
   39360:	mov.w	r3, r2, ror #19
   39364:	eor.w	r3, r3, r2, ror #17
   39368:	eor.w	r3, r3, r2, lsr #10
   3936c:	ldr	r2, [r6, #36]	; 0x24
   3936e:	ldr	r6, [r6, #0]
   39370:	add	r2, r6
   39372:	add	r3, r2
   39374:	mov.w	r2, r5, ror #18
   39378:	eor.w	r2, r2, r5, ror #7
   3937c:	eor.w	r2, r2, r5, lsr #3
   39380:	add	r3, r2
   39382:	str	r3, [r1, #60]	; 0x3c
   39384:	bne.n	39354 <XXH64_hashFromCanonical@@Base+0x52>
   39386:	ldr	r3, [r0, #0]
   39388:	add.w	r9, sp, #44	; 0x2c
   3938c:	mov.w	lr, #0
   39390:	str	r3, [sp, #0]
   39392:	ldr	r3, [r0, #4]
   39394:	str	r3, [sp, #4]
   39396:	ldr	r3, [r0, #8]
   39398:	ldrd	r4, r6, [sp]
   3939c:	str	r3, [sp, #8]
   3939e:	ldr	r3, [r0, #12]
   393a0:	str	r3, [sp, #12]
   393a2:	ldr	r3, [r0, #16]
   393a4:	ldrd	r5, r8, [sp, #8]
   393a8:	str	r3, [sp, #16]
   393aa:	ldr	r3, [r0, #20]
   393ac:	str	r3, [sp, #20]
   393ae:	ldr	r3, [r0, #24]
   393b0:	ldrd	r1, ip, [sp, #16]
   393b4:	str	r3, [sp, #24]
   393b6:	ldr	r3, [r0, #28]
   393b8:	str	r3, [sp, #28]
   393ba:	ldrd	r7, fp, [sp, #24]
   393be:	ldr	r3, [pc, #204]	; (3948c <XXH64_hashFromCanonical@@Base+0x18a>)
   393c0:	add	r3, pc
   393c2:	str	r3, [sp, #36]	; 0x24
   393c4:	ldr	r3, [sp, #36]	; 0x24
   393c6:	ldr.w	r2, [r3], #4
   393ca:	str	r3, [sp, #36]	; 0x24
   393cc:	mov.w	r3, r1, ror #11
   393d0:	eor.w	r3, r3, r1, ror #6
   393d4:	eor.w	sl, r3, r1, ror #25
   393d8:	ldr.w	r3, [r9, lr, lsl #2]
   393dc:	add.w	lr, lr, #1
   393e0:	add	r2, r3
   393e2:	cmp.w	lr, #64	; 0x40
   393e6:	add.w	r3, sl, r2
   393ea:	bic.w	sl, r7, r1
   393ee:	and.w	r2, r1, ip
   393f2:	eor.w	r2, sl, r2
   393f6:	mov.w	sl, r4, ror #13
   393fa:	add	r2, r3
   393fc:	eor.w	r3, r6, r5
   39400:	add	r2, fp
   39402:	eor.w	sl, sl, r4, ror #2
   39406:	and.w	fp, r6, r5
   3940a:	and.w	r3, r3, r4
   3940e:	eor.w	r3, r3, fp
   39412:	eor.w	sl, sl, r4, ror #22
   39416:	add	sl, r3
   39418:	mov	fp, r7
   3941a:	add.w	r3, r2, r8
   3941e:	add	r2, sl
   39420:	mov	r8, r5
   39422:	str	r3, [sp, #32]
   39424:	bne.n	39470 <XXH64_hashFromCanonical@@Base+0x16e>
   39426:	ldr	r3, [sp, #0]
   39428:	add	r3, r2
   3942a:	str	r3, [r0, #0]
   3942c:	ldr	r3, [sp, #4]
   3942e:	ldr	r2, [sp, #32]
   39430:	add	r3, r4
   39432:	str	r3, [r0, #4]
   39434:	ldr	r3, [sp, #8]
   39436:	add	r3, r6
   39438:	str	r3, [r0, #8]
   3943a:	ldr	r3, [sp, #12]
   3943c:	add	r3, r5
   3943e:	str	r3, [r0, #12]
   39440:	ldr	r3, [sp, #16]
   39442:	add	r3, r2
   39444:	str	r3, [r0, #16]
   39446:	ldr	r3, [sp, #20]
   39448:	ldr	r2, [pc, #68]	; (39490 <XXH64_hashFromCanonical@@Base+0x18e>)
   3944a:	add	r3, r1
   3944c:	str	r3, [r0, #20]
   3944e:	ldr	r3, [sp, #24]
   39450:	add	r2, pc
   39452:	add	r3, ip
   39454:	str	r3, [r0, #24]
   39456:	ldr	r3, [sp, #28]
   39458:	add	r3, r7
   3945a:	str	r3, [r0, #28]
   3945c:	movs	r3, #0
   3945e:	strh	r3, [r0, #40]	; 0x28
   39460:	ldr	r3, [pc, #36]	; (39488 <XXH64_hashFromCanonical@@Base+0x186>)
   39462:	ldr	r3, [r2, r3]
   39464:	ldr	r2, [r3, #0]
   39466:	ldr	r3, [sp, #300]	; 0x12c
   39468:	eors	r2, r3
   3946a:	beq.n	3947e <XXH64_hashFromCanonical@@Base+0x17c>
   3946c:	blx	8c90 <__stack_chk_fail@plt>
   39470:	mov	r7, ip
   39472:	mov	r5, r6
   39474:	mov	ip, r1
   39476:	mov	r6, r4
   39478:	ldr	r1, [sp, #32]
   3947a:	mov	r4, r2
   3947c:	b.n	393c4 <XXH64_hashFromCanonical@@Base+0xc2>
   3947e:	add	sp, #308	; 0x134
   39480:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39484:	subs	r0, r1, r0
   39486:	movs	r3, r0
   39488:	lsls	r0, r1, #10
   3948a:	movs	r0, r0
   3948c:	stc2l	0, cr0, [ip, #4]!
   39490:	adds	r0, r1, r3
   39492:	movs	r3, r0
   39494:	push	{r4, lr}
   39496:	mov	r4, r0
   39498:	ldrsh.w	r3, [r0, #40]	; 0x28
   3949c:	adds	r2, r3, #1
   3949e:	cmp	r3, #55	; 0x37
   394a0:	add	r3, r0
   394a2:	sxth	r2, r2
   394a4:	strh	r2, [r0, #40]	; 0x28
   394a6:	strb.w	r1, [r3, #42]	; 0x2a
   394aa:	ble.n	394bc <XXH64_hashFromCanonical@@Base+0x1ba>
   394ac:	movs	r2, #0
   394ae:	ldrsh.w	r3, [r4, #40]	; 0x28
   394b2:	cmp	r3, #63	; 0x3f
   394b4:	ble.n	394fa <XXH64_hashFromCanonical@@Base+0x1f8>
   394b6:	mov	r0, r4
   394b8:	bl	3930c <XXH64_hashFromCanonical@@Base+0xa>
   394bc:	movs	r2, #0
   394be:	ldrsh.w	r3, [r4, #40]	; 0x28
   394c2:	cmp	r3, #55	; 0x37
   394c4:	ble.n	39506 <XXH64_hashFromCanonical@@Base+0x204>
   394c6:	ldr	r3, [r4, #32]
   394c8:	mov	r0, r4
   394ca:	ldrh	r2, [r4, #32]
   394cc:	lsrs	r1, r3, #24
   394ce:	lsrs	r3, r3, #16
   394d0:	strb.w	r3, [r4, #99]	; 0x63
   394d4:	rev16	r2, r2
   394d6:	ldr	r3, [r4, #36]	; 0x24
   394d8:	strh.w	r2, [r4, #100]	; 0x64
   394dc:	ldrh	r2, [r4, #36]	; 0x24
   394de:	strb.w	r1, [r4, #98]	; 0x62
   394e2:	lsrs	r1, r3, #24
   394e4:	rev16	r2, r2
   394e6:	lsrs	r3, r3, #16
   394e8:	strb.w	r1, [r4, #102]	; 0x66
   394ec:	strb.w	r3, [r4, #103]	; 0x67
   394f0:	strh.w	r2, [r4, #104]	; 0x68
   394f4:	ldmia.w	sp!, {r4, lr}
   394f8:	b.n	3930c <XXH64_hashFromCanonical@@Base+0xa>
   394fa:	adds	r1, r3, #1
   394fc:	add	r3, r4
   394fe:	strh	r1, [r4, #40]	; 0x28
   39500:	strb.w	r2, [r3, #42]	; 0x2a
   39504:	b.n	394ae <XXH64_hashFromCanonical@@Base+0x1ac>
   39506:	adds	r1, r3, #1
   39508:	add	r3, r4
   3950a:	strh	r1, [r4, #40]	; 0x28
   3950c:	strb.w	r2, [r3, #42]	; 0x2a
   39510:	b.n	394be <XXH64_hashFromCanonical@@Base+0x1bc>
   39512:	push	{r3, r4, r5, r6, r7, lr}
   39514:	mov	r4, r0
   39516:	ldr	r5, [r0, #108]	; 0x6c
   39518:	mov	r7, r1
   3951a:	mov	r6, r2
   3951c:	cbnz	r5, 3953c <XXH64_hashFromCanonical@@Base+0x23a>
   3951e:	movs	r1, #128	; 0x80
   39520:	bl	39494 <XXH64_hashFromCanonical@@Base+0x192>
   39524:	add.w	r2, r4, #42	; 0x2a
   39528:	add.w	r1, r4, #106	; 0x6a
   3952c:	strb.w	r5, [r2], #1
   39530:	cmp	r2, r1
   39532:	bne.n	3952c <XXH64_hashFromCanonical@@Base+0x22a>
   39534:	movs	r3, #1
   39536:	strd	r5, r5, [r4, #32]
   3953a:	str	r3, [r4, #108]	; 0x6c
   3953c:	movs	r3, #0
   3953e:	asrs	r2, r3, #2
   39540:	mvns	r0, r3
   39542:	and.w	r0, r0, #3
   39546:	ldr.w	r2, [r4, r2, lsl #2]
   3954a:	lsls	r0, r0, #3
   3954c:	lsr.w	r0, r2, r0
   39550:	strb	r0, [r7, r3]
   39552:	adds	r3, #1
   39554:	cmp	r3, r6
   39556:	bne.n	3953e <XXH64_hashFromCanonical@@Base+0x23c>
   39558:	movs	r0, #0
   3955a:	pop	{r3, r4, r5, r6, r7, pc}

0003955c <SHA224Reset@@Base>:
   3955c:	cbz	r0, 39592 <SHA224Reset@@Base+0x36>
   3955e:	ldr	r2, [pc, #56]	; (39598 <SHA224Reset@@Base+0x3c>)
   39560:	movs	r3, #0
   39562:	strd	r3, r3, [r0, #32]
   39566:	add	r2, pc
   39568:	strh	r3, [r0, #40]	; 0x28
   3956a:	strd	r3, r3, [r0, #108]	; 0x6c
   3956e:	ldr	r1, [r2, #0]
   39570:	str	r1, [r0, #0]
   39572:	ldr	r1, [r2, #4]
   39574:	str	r1, [r0, #4]
   39576:	ldr	r1, [r2, #8]
   39578:	str	r1, [r0, #8]
   3957a:	ldr	r1, [r2, #12]
   3957c:	str	r1, [r0, #12]
   3957e:	ldr	r1, [r2, #16]
   39580:	str	r1, [r0, #16]
   39582:	ldr	r1, [r2, #20]
   39584:	str	r1, [r0, #20]
   39586:	ldr	r1, [r2, #24]
   39588:	str	r1, [r0, #24]
   3958a:	ldr	r2, [r2, #28]
   3958c:	str	r2, [r0, #28]
   3958e:	mov	r0, r3
   39590:	bx	lr
   39592:	movs	r0, #1
   39594:	bx	lr
   39596:	nop
   39598:	cmp	r4, #146	; 0x92
   3959a:	movs	r3, r0

0003959c <SHA224Result@@Base>:
   3959c:	cbz	r0, 395a8 <SHA224Result@@Base+0xc>
   3959e:	cbz	r1, 395a8 <SHA224Result@@Base+0xc>
   395a0:	ldr	r3, [r0, #112]	; 0x70
   395a2:	cbnz	r3, 395aa <SHA224Result@@Base+0xe>
   395a4:	movs	r2, #28
   395a6:	b.n	39512 <XXH64_hashFromCanonical@@Base+0x210>
   395a8:	movs	r3, #1
   395aa:	mov	r0, r3
   395ac:	bx	lr

000395ae <SHA256Reset@@Base>:
   395ae:	cbz	r0, 395e4 <SHA256Reset@@Base+0x36>
   395b0:	ldr	r2, [pc, #52]	; (395e8 <SHA256Reset@@Base+0x3a>)
   395b2:	movs	r3, #0
   395b4:	strd	r3, r3, [r0, #32]
   395b8:	add	r2, pc
   395ba:	strh	r3, [r0, #40]	; 0x28
   395bc:	strd	r3, r3, [r0, #108]	; 0x6c
   395c0:	ldr	r1, [r2, #32]
   395c2:	str	r1, [r0, #0]
   395c4:	ldr	r1, [r2, #36]	; 0x24
   395c6:	str	r1, [r0, #4]
   395c8:	ldr	r1, [r2, #40]	; 0x28
   395ca:	str	r1, [r0, #8]
   395cc:	ldr	r1, [r2, #44]	; 0x2c
   395ce:	str	r1, [r0, #12]
   395d0:	ldr	r1, [r2, #48]	; 0x30
   395d2:	str	r1, [r0, #16]
   395d4:	ldr	r1, [r2, #52]	; 0x34
   395d6:	str	r1, [r0, #20]
   395d8:	ldr	r1, [r2, #56]	; 0x38
   395da:	str	r1, [r0, #24]
   395dc:	ldr	r2, [r2, #60]	; 0x3c
   395de:	str	r2, [r0, #28]
   395e0:	mov	r0, r3
   395e2:	bx	lr
   395e4:	movs	r0, #1
   395e6:	bx	lr
   395e8:	cmp	r4, #64	; 0x40
   395ea:	movs	r3, r0

000395ec <SHA256Input@@Base>:
   395ec:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   395f0:	mov	r4, r0
   395f2:	cmp	r0, #0
   395f4:	beq.n	39662 <SHA256Input@@Base+0x76>
   395f6:	cmp	r2, #0
   395f8:	beq.n	3965e <SHA256Input@@Base+0x72>
   395fa:	cmp	r1, #0
   395fc:	beq.n	39662 <SHA256Input@@Base+0x76>
   395fe:	ldr	r3, [r0, #108]	; 0x6c
   39600:	cbz	r3, 3960a <SHA256Input@@Base+0x1e>
   39602:	movs	r0, #3
   39604:	str	r0, [r4, #112]	; 0x70
   39606:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3960a:	ldr	r0, [r0, #112]	; 0x70
   3960c:	cmp	r0, #0
   3960e:	bne.n	39606 <SHA256Input@@Base+0x1a>
   39610:	adds	r6, r1, r2
   39612:	mov	r5, r1
   39614:	movs	r7, #8
   39616:	mov.w	r8, #2
   3961a:	cmp	r5, r6
   3961c:	bne.n	39622 <SHA256Input@@Base+0x36>
   3961e:	ldr	r0, [r4, #112]	; 0x70
   39620:	b.n	39606 <SHA256Input@@Base+0x1a>
   39622:	ldrsh.w	r3, [r4, #40]	; 0x28
   39626:	adds	r2, r3, #1
   39628:	add	r3, r4
   3962a:	sxth	r2, r2
   3962c:	strh	r2, [r4, #40]	; 0x28
   3962e:	ldrb.w	r1, [r5], #1
   39632:	strb.w	r1, [r3, #42]	; 0x2a
   39636:	ldr	r3, [r4, #36]	; 0x24
   39638:	adds	r3, r3, r7
   3963a:	str	r3, [r4, #36]	; 0x24
   3963c:	bcc.n	3964c <SHA256Input@@Base+0x60>
   3963e:	ldr	r3, [r4, #32]
   39640:	adds	r3, #1
   39642:	str	r3, [r4, #32]
   39644:	cbnz	r3, 3964c <SHA256Input@@Base+0x60>
   39646:	str.w	r8, [r4, #112]	; 0x70
   3964a:	b.n	3961a <SHA256Input@@Base+0x2e>
   3964c:	ldr	r3, [r4, #112]	; 0x70
   3964e:	cmp	r3, #0
   39650:	bne.n	3961a <SHA256Input@@Base+0x2e>
   39652:	cmp	r2, #64	; 0x40
   39654:	bne.n	3961a <SHA256Input@@Base+0x2e>
   39656:	mov	r0, r4
   39658:	bl	3930c <XXH64_hashFromCanonical@@Base+0xa>
   3965c:	b.n	3961a <SHA256Input@@Base+0x2e>
   3965e:	mov	r0, r2
   39660:	b.n	39606 <SHA256Input@@Base+0x1a>
   39662:	movs	r0, #1
   39664:	b.n	39606 <SHA256Input@@Base+0x1a>

00039666 <SHA224Input@@Base>:
   39666:	b.w	395ec <SHA256Input@@Base>

0003966a <SHA256FinalBits@@Base>:
   3966a:	push	{r4, lr}
   3966c:	mov	r4, r0
   3966e:	cbz	r0, 396d4 <SHA256FinalBits@@Base+0x6a>
   39670:	cbz	r2, 396d8 <SHA256FinalBits@@Base+0x6e>
   39672:	ldr	r0, [r0, #112]	; 0x70
   39674:	cbnz	r0, 3967e <SHA256FinalBits@@Base+0x14>
   39676:	ldr	r0, [r4, #108]	; 0x6c
   39678:	cbz	r0, 39680 <SHA256FinalBits@@Base+0x16>
   3967a:	movs	r0, #3
   3967c:	str	r0, [r4, #112]	; 0x70
   3967e:	pop	{r4, pc}
   39680:	cmp	r2, #7
   39682:	bls.n	39688 <SHA256FinalBits@@Base+0x1e>
   39684:	movs	r0, #4
   39686:	b.n	3967c <SHA256FinalBits@@Base+0x12>
   39688:	ldr	r3, [r4, #36]	; 0x24
   3968a:	adds	r3, r2, r3
   3968c:	str	r3, [r4, #36]	; 0x24
   3968e:	bcc.n	3969c <SHA256FinalBits@@Base+0x32>
   39690:	ldr	r3, [r4, #32]
   39692:	adds	r3, #1
   39694:	str	r3, [r4, #32]
   39696:	cmp	r3, #0
   39698:	it	eq
   3969a:	moveq	r0, #2
   3969c:	ldr	r3, [pc, #60]	; (396dc <SHA256FinalBits@@Base+0x72>)
   3969e:	str	r0, [r4, #112]	; 0x70
   396a0:	mov	r0, r4
   396a2:	add	r3, pc
   396a4:	add	r2, r3
   396a6:	ldrb.w	r3, [r2, #256]	; 0x100
   396aa:	ands	r1, r3
   396ac:	ldrb.w	r3, [r2, #264]	; 0x108
   396b0:	orrs	r1, r3
   396b2:	bl	39494 <XXH64_hashFromCanonical@@Base+0x192>
   396b6:	add.w	r2, r4, #42	; 0x2a
   396ba:	add.w	r1, r4, #106	; 0x6a
   396be:	movs	r3, #0
   396c0:	strb.w	r3, [r2], #1
   396c4:	cmp	r1, r2
   396c6:	bne.n	396c0 <SHA256FinalBits@@Base+0x56>
   396c8:	strd	r3, r3, [r4, #32]
   396cc:	movs	r3, #1
   396ce:	ldr	r0, [r4, #112]	; 0x70
   396d0:	str	r3, [r4, #108]	; 0x6c
   396d2:	b.n	3967e <SHA256FinalBits@@Base+0x14>
   396d4:	movs	r0, #1
   396d6:	b.n	3967e <SHA256FinalBits@@Base+0x14>
   396d8:	mov	r0, r2
   396da:	b.n	3967e <SHA256FinalBits@@Base+0x14>
   396dc:	mla	r0, sl, r1, r0

000396e0 <SHA224FinalBits@@Base>:
   396e0:	b.w	3966a <SHA256FinalBits@@Base>

000396e4 <SHA256Result@@Base>:
   396e4:	cbz	r0, 396f0 <SHA256Result@@Base+0xc>
   396e6:	cbz	r1, 396f0 <SHA256Result@@Base+0xc>
   396e8:	ldr	r3, [r0, #112]	; 0x70
   396ea:	cbnz	r3, 396f2 <SHA256Result@@Base+0xe>
   396ec:	movs	r2, #32
   396ee:	b.n	39512 <XXH64_hashFromCanonical@@Base+0x210>
   396f0:	movs	r3, #1
   396f2:	mov	r0, r3
   396f4:	bx	lr
   396f6:	nop
   396f8:	mov	r3, r0
   396fa:	ldr	r0, [r0, #0]
   396fc:	ldr	r1, [r3, #4]
   396fe:	bx	lr
   39700:	ldr	r2, [pc, #952]	; (39abc <SHA256Result@@Base+0x3d8>)
   39702:	ldr	r3, [pc, #956]	; (39ac0 <SHA256Result@@Base+0x3dc>)
   39704:	add	r2, pc
   39706:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3970a:	sub.w	sp, sp, #540	; 0x21c
   3970e:	ldr	r3, [r2, r3]
   39710:	add	r5, sp, #272	; 0x110
   39712:	add.w	r7, r1, #128	; 0x80
   39716:	mov	fp, r0
   39718:	ldr	r3, [r3, #0]
   3971a:	str	r3, [sp, #532]	; 0x214
   3971c:	mov.w	r3, #0
   39720:	mov	r2, r1
   39722:	mov	r4, r5
   39724:	mov	r0, r2
   39726:	bl	396f8 <SHA256Result@@Base+0x14>
   3972a:	adds	r2, #8
   3972c:	strd	r0, r1, [r5], #8
   39730:	cmp	r2, r7
   39732:	bne.n	39724 <SHA256Result@@Base+0x40>
   39734:	sub.w	r3, fp, #8
   39738:	str	r3, [sp, #132]	; 0x84
   3973a:	add	r3, sp, #400	; 0x190
   3973c:	str	r3, [sp, #136]	; 0x88
   3973e:	ldrd	r1, r0, [sp, #132]	; 0x84
   39742:	add.w	r3, fp, #56	; 0x38
   39746:	str	r3, [sp, #140]	; 0x8c
   39748:	ldrd	r2, r3, [r1, #8]!
   3974c:	strd	r2, r3, [r0], #8
   39750:	ldr	r3, [sp, #140]	; 0x8c
   39752:	cmp	r1, r3
   39754:	bne.n	39748 <SHA256Result@@Base+0x64>
   39756:	ldr	r3, [sp, #272]	; 0x110
   39758:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   3975c:	ldr	r7, [sp, #400]	; 0x190
   3975e:	str	r3, [sp, #4]
   39760:	ldr	r3, [sp, #276]	; 0x114
   39762:	adds.w	r7, r8, r7
   39766:	ldr	r6, [r4, #8]
   39768:	str	r3, [sp, #8]
   3976a:	ldr	r3, [sp, #404]	; 0x194
   3976c:	str	r6, [sp, #12]
   3976e:	adc.w	r9, r0, r3
   39772:	ldr	r3, [sp, #4]
   39774:	ldr	r6, [r4, #12]
   39776:	adds	r7, r7, r3
   39778:	ldr	r3, [sp, #8]
   3977a:	adc.w	r9, r9, r3
   3977e:	ldrd	r3, r2, [fp, #64]	; 0x40
   39782:	str	r6, [sp, #16]
   39784:	eor.w	r2, r9, r2
   39788:	eor.w	r5, r7, r3
   3978c:	eor.w	r1, r2, #1358954496	; 0x51000000
   39790:	eor.w	r3, r5, #2902458368	; 0xad000000
   39794:	eor.w	r1, r1, #937984	; 0xe5000
   39798:	ldr	r2, [pc, #768]	; (39a9c <SHA256Result@@Base+0x3b8>)
   3979a:	eor.w	r1, r1, #636	; 0x27c
   3979e:	eor.w	r3, r3, #15073280	; 0xe60000
   397a2:	eor.w	r1, r1, #3
   397a6:	ldr	r5, [pc, #760]	; (39aa0 <SHA256Result@@Base+0x3bc>)
   397a8:	eor.w	r3, r3, #33280	; 0x8200
   397ac:	adds	r2, r1, r2
   397ae:	eor.w	r3, r3, #209	; 0xd1
   397b2:	eor.w	r8, r8, r2
   397b6:	adc.w	r5, r3, r5
   397ba:	ldr	r6, [sp, #12]
   397bc:	eor.w	ip, r0, r5
   397c0:	mov.w	sl, r8, lsr #24
   397c4:	adds	r7, r7, r6
   397c6:	ldr	r6, [sp, #16]
   397c8:	orr.w	lr, sl, ip, lsl #8
   397cc:	mov.w	r0, ip, lsr #24
   397d0:	orr.w	r0, r0, r8, lsl #8
   397d4:	adc.w	r9, r9, r6
   397d8:	adds.w	r6, r7, lr
   397dc:	str	r6, [sp, #76]	; 0x4c
   397de:	adc.w	r6, r9, r0
   397e2:	str	r6, [sp, #80]	; 0x50
   397e4:	ldr	r6, [sp, #76]	; 0x4c
   397e6:	eors	r1, r6
   397e8:	ldr	r6, [sp, #80]	; 0x50
   397ea:	eors	r3, r6
   397ec:	lsrs	r7, r1, #16
   397ee:	orr.w	r6, r7, r3, lsl #16
   397f2:	lsrs	r3, r3, #16
   397f4:	orr.w	r3, r3, r1, lsl #16
   397f8:	str	r3, [sp, #168]	; 0xa8
   397fa:	adds	r3, r2, r6
   397fc:	str	r3, [sp, #108]	; 0x6c
   397fe:	ldr	r3, [sp, #168]	; 0xa8
   39800:	str	r6, [sp, #104]	; 0x68
   39802:	adc.w	r3, r5, r3
   39806:	str	r3, [sp, #112]	; 0x70
   39808:	ldr	r3, [sp, #108]	; 0x6c
   3980a:	eor.w	lr, r3, lr
   3980e:	ldr	r3, [sp, #112]	; 0x70
   39810:	eors	r0, r3
   39812:	lsls	r3, r0, #1
   39814:	orr.w	r3, r3, lr, lsr #31
   39818:	mov.w	lr, lr, lsl #1
   3981c:	str	r3, [sp, #196]	; 0xc4
   3981e:	orr.w	r3, lr, r0, lsr #31
   39822:	str	r3, [sp, #192]	; 0xc0
   39824:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   39828:	ldr	r3, [r4, #16]
   3982a:	ldr	r2, [sp, #408]	; 0x198
   3982c:	ldr	r7, [sp, #412]	; 0x19c
   3982e:	str	r3, [sp, #20]
   39830:	adds.w	r2, r9, r2
   39834:	ldr	r3, [r4, #20]
   39836:	adc.w	r7, ip, r7
   3983a:	ldr	r6, [r4, #24]
   3983c:	str	r3, [sp, #24]
   3983e:	ldr	r3, [sp, #20]
   39840:	str	r6, [sp, #28]
   39842:	adds	r2, r2, r3
   39844:	ldr	r3, [sp, #24]
   39846:	ldr	r6, [r4, #28]
   39848:	adc.w	r7, r3, r7
   3984c:	ldrd	r3, r1, [fp, #72]	; 0x48
   39850:	eor.w	r0, r7, r1
   39854:	eors	r3, r2
   39856:	eor.w	r5, r0, #2600468480	; 0x9b000000
   3985a:	eor.w	r1, r3, #721420288	; 0x2b000000
   3985e:	eor.w	r5, r5, #354304	; 0x56800
   39862:	ldr	r3, [pc, #576]	; (39aa4 <SHA256Result@@Base+0x3c0>)
   39864:	eor.w	r1, r1, #4079616	; 0x3e4000
   39868:	eor.w	r5, r5, #140	; 0x8c
   3986c:	ldr	r0, [pc, #568]	; (39aa8 <SHA256Result@@Base+0x3c4>)
   3986e:	eor.w	r1, r1, #11264	; 0x2c00
   39872:	adds	r3, r5, r3
   39874:	eor.w	r1, r1, #31
   39878:	adc.w	r0, r1, r0
   3987c:	eor.w	r9, r9, r3
   39880:	str	r6, [sp, #32]
   39882:	eor.w	ip, ip, r0
   39886:	ldr	r6, [sp, #28]
   39888:	mov.w	sl, r9, lsr #24
   3988c:	orr.w	r8, sl, ip, lsl #8
   39890:	mov.w	ip, ip, lsr #24
   39894:	adds	r2, r2, r6
   39896:	ldr	r6, [sp, #32]
   39898:	orr.w	lr, ip, r9, lsl #8
   3989c:	adc.w	r7, r6, r7
   398a0:	adds.w	r2, r2, r8
   398a4:	str	r2, [sp, #92]	; 0x5c
   398a6:	adc.w	r2, r7, lr
   398aa:	str	r2, [sp, #96]	; 0x60
   398ac:	ldr	r2, [sp, #92]	; 0x5c
   398ae:	eors	r5, r2
   398b0:	ldr	r2, [sp, #96]	; 0x60
   398b2:	eors	r1, r2
   398b4:	lsrs	r2, r5, #16
   398b6:	orr.w	r2, r2, r1, lsl #16
   398ba:	lsrs	r1, r1, #16
   398bc:	str	r2, [sp, #184]	; 0xb8
   398be:	orr.w	r2, r1, r5, lsl #16
   398c2:	str	r2, [sp, #188]	; 0xbc
   398c4:	ldr	r2, [sp, #184]	; 0xb8
   398c6:	adds	r3, r3, r2
   398c8:	str	r3, [sp, #124]	; 0x7c
   398ca:	ldr	r3, [sp, #188]	; 0xbc
   398cc:	adc.w	r3, r0, r3
   398d0:	str	r3, [sp, #128]	; 0x80
   398d2:	ldr	r3, [sp, #124]	; 0x7c
   398d4:	eor.w	r8, r3, r8
   398d8:	ldr	r3, [sp, #128]	; 0x80
   398da:	eor.w	lr, r3, lr
   398de:	mov.w	r3, lr, lsl #1
   398e2:	orr.w	r3, r3, r8, lsr #31
   398e6:	mov.w	r8, r8, lsl #1
   398ea:	str	r3, [sp, #88]	; 0x58
   398ec:	orr.w	r3, r8, lr, lsr #31
   398f0:	str	r3, [sp, #84]	; 0x54
   398f2:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   398f6:	ldr	r3, [r4, #32]
   398f8:	ldr	r2, [sp, #420]	; 0x1a4
   398fa:	ldr	r6, [r4, #40]	; 0x28
   398fc:	str	r3, [sp, #36]	; 0x24
   398fe:	ldr	r3, [r4, #36]	; 0x24
   39900:	ldr	r1, [sp, #36]	; 0x24
   39902:	str	r6, [sp, #44]	; 0x2c
   39904:	str	r3, [sp, #40]	; 0x28
   39906:	ldr	r3, [sp, #416]	; 0x1a0
   39908:	ldr	r6, [r4, #44]	; 0x2c
   3990a:	adds.w	r3, r8, r3
   3990e:	adc.w	r2, r7, r2
   39912:	adds	r3, r3, r1
   39914:	ldr	r1, [sp, #40]	; 0x28
   39916:	str	r6, [sp, #48]	; 0x30
   39918:	adc.w	ip, r2, r1
   3991c:	ldrd	r2, r1, [fp, #80]	; 0x50
   39920:	ldr	r6, [sp, #44]	; 0x2c
   39922:	eor.w	r5, ip, r1
   39926:	eors	r2, r3
   39928:	eor.w	r0, r5, #528482304	; 0x1f800000
   3992c:	eor.w	r1, r2, #4211081216	; 0xfb000000
   39930:	eor.w	r0, r0, #251904	; 0x3d800
   39934:	ldr	r2, [pc, #372]	; (39aac <SHA256Result@@Base+0x3c8>)
   39936:	eor.w	r0, r0, #426	; 0x1aa
   3993a:	eor.w	r1, r1, #4292608	; 0x418000
   3993e:	eor.w	r0, r0, #1
   39942:	ldr	r5, [pc, #364]	; (39ab0 <SHA256Result@@Base+0x3cc>)
   39944:	eor.w	r1, r1, #15680	; 0x3d40
   39948:	adds	r2, r0, r2
   3994a:	eor.w	r1, r1, #43	; 0x2b
   3994e:	eor.w	r8, r8, r2
   39952:	adc.w	r5, r1, r5
   39956:	adds	r3, r3, r6
   39958:	eor.w	lr, r7, r5
   3995c:	ldr	r6, [sp, #48]	; 0x30
   3995e:	mov.w	sl, r8, lsr #24
   39962:	orr.w	r7, sl, lr, lsl #8
   39966:	mov.w	lr, lr, lsr #24
   3996a:	orr.w	r9, lr, r8, lsl #8
   3996e:	adc.w	ip, ip, r6
   39972:	adds	r3, r3, r7
   39974:	str	r3, [sp, #116]	; 0x74
   39976:	adc.w	r3, ip, r9
   3997a:	str	r3, [sp, #120]	; 0x78
   3997c:	ldr	r3, [sp, #116]	; 0x74
   3997e:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   39982:	eors	r0, r3
   39984:	ldr	r3, [sp, #120]	; 0x78
   39986:	eors	r1, r3
   39988:	lsrs	r3, r0, #16
   3998a:	orr.w	r3, r3, r1, lsl #16
   3998e:	lsrs	r1, r1, #16
   39990:	str	r3, [sp, #200]	; 0xc8
   39992:	orr.w	r3, r1, r0, lsl #16
   39996:	str	r3, [sp, #204]	; 0xcc
   39998:	ldr	r3, [sp, #200]	; 0xc8
   3999a:	adds	r2, r2, r3
   3999c:	ldr	r3, [sp, #204]	; 0xcc
   3999e:	eor.w	r7, r7, r2
   399a2:	adc.w	r5, r3, r5
   399a6:	eor.w	r9, r5, r9
   399aa:	mov.w	r3, r9, lsl #1
   399ae:	orr.w	r3, r3, r7, lsr #31
   399b2:	lsls	r7, r7, #1
   399b4:	str	r3, [sp, #176]	; 0xb0
   399b6:	orr.w	r3, r7, r9, lsr #31
   399ba:	str	r3, [sp, #172]	; 0xac
   399bc:	ldr	r3, [r4, #48]	; 0x30
   399be:	str	r3, [sp, #52]	; 0x34
   399c0:	ldr	r3, [r4, #52]	; 0x34
   399c2:	str	r3, [sp, #56]	; 0x38
   399c4:	ldr	r1, [sp, #424]	; 0x1a8
   399c6:	ldr	r3, [sp, #428]	; 0x1ac
   399c8:	adds.w	r1, sl, r1
   399cc:	adc.w	r9, r8, r3
   399d0:	ldr	r3, [sp, #52]	; 0x34
   399d2:	adds	r1, r1, r3
   399d4:	ldr	r3, [sp, #56]	; 0x38
   399d6:	adc.w	r9, r9, r3
   399da:	ldrd	r3, r0, [fp, #88]	; 0x58
   399de:	eor.w	r0, r9, r0
   399e2:	eors	r3, r1
   399e4:	eor.w	r7, r0, #1535115264	; 0x5b800000
   399e8:	eor.w	r6, r3, #325058560	; 0x13600000
   399ec:	eor.w	r7, r7, #6324224	; 0x608000
   399f0:	ldr	r3, [pc, #192]	; (39ab4 <SHA256Result@@Base+0x3d0>)
   399f2:	eor.w	r7, r7, #19712	; 0x4d00
   399f6:	eor.w	r6, r6, #1974272	; 0x1e2000
   399fa:	eor.w	r7, r7, #25
   399fe:	ldr	r0, [pc, #184]	; (39ab8 <SHA256Result@@Base+0x3d4>)
   39a00:	adds	r3, r7, r3
   39a02:	str	r3, [sp, #68]	; 0x44
   39a04:	eor.w	sl, sl, r3
   39a08:	ldr	r3, [r4, #56]	; 0x38
   39a0a:	eor.w	r6, r6, #376	; 0x178
   39a0e:	eor.w	r6, r6, #1
   39a12:	mov.w	fp, sl, lsr #24
   39a16:	str	r3, [sp, #60]	; 0x3c
   39a18:	adc.w	r0, r6, r0
   39a1c:	ldr	r3, [r4, #60]	; 0x3c
   39a1e:	eor.w	r8, r8, r0
   39a22:	orr.w	ip, fp, r8, lsl #8
   39a26:	mov.w	lr, r8, lsr #24
   39a2a:	str	r3, [sp, #64]	; 0x40
   39a2c:	orr.w	lr, lr, sl, lsl #8
   39a30:	ldr	r3, [sp, #60]	; 0x3c
   39a32:	adds	r1, r1, r3
   39a34:	ldr	r3, [sp, #64]	; 0x40
   39a36:	adc.w	r9, r9, r3
   39a3a:	adds.w	r3, r1, ip
   39a3e:	str	r3, [sp, #144]	; 0x90
   39a40:	adc.w	r3, r9, lr
   39a44:	str	r3, [sp, #148]	; 0x94
   39a46:	ldr	r3, [sp, #144]	; 0x90
   39a48:	eors	r7, r3
   39a4a:	ldr	r3, [sp, #148]	; 0x94
   39a4c:	eors	r6, r3
   39a4e:	lsrs	r1, r7, #16
   39a50:	ldr	r3, [sp, #68]	; 0x44
   39a52:	orr.w	r8, r1, r6, lsl #16
   39a56:	lsrs	r6, r6, #16
   39a58:	adds.w	r3, r3, r8
   39a5c:	orr.w	sl, r6, r7, lsl #16
   39a60:	adc.w	r0, r0, sl
   39a64:	eor.w	ip, r3, ip
   39a68:	eor.w	lr, r0, lr
   39a6c:	str	r3, [sp, #100]	; 0x64
   39a6e:	mov.w	r1, lr, lsl #1
   39a72:	orr.w	fp, r1, ip, lsr #31
   39a76:	mov.w	ip, ip, lsl #1
   39a7a:	orr.w	r1, ip, lr, lsr #31
   39a7e:	str	r1, [sp, #208]	; 0xd0
   39a80:	ldr	r1, [r4, #64]	; 0x40
   39a82:	str	r1, [sp, #68]	; 0x44
   39a84:	ldr	r1, [r4, #68]	; 0x44
   39a86:	ldr	r6, [sp, #68]	; 0x44
   39a88:	str	r1, [sp, #72]	; 0x48
   39a8a:	ldr	r1, [sp, #76]	; 0x4c
   39a8c:	ldr	r7, [sp, #72]	; 0x48
   39a8e:	adds	r1, r1, r6
   39a90:	ldr	r6, [sp, #80]	; 0x50
   39a92:	adc.w	r9, r6, r7
   39a96:	ldr	r6, [sp, #84]	; 0x54
   39a98:	adds	r1, r1, r6
   39a9a:	b.n	39ac4 <SHA256Result@@Base+0x3e0>
   39a9c:	ldmia	r1!, {r3}
   39a9e:	bfcsel	e, 3a76e <SHA256Result@@Base+0x108a>, 10, <und>
   39aa2:	ldr	r1, [r1, #32]
   39aa4:	add	r7, pc, #236	; (adr r7, 39b94 <SHA256Result@@Base+0x4b0>)
   39aa6:	strh	r2, [r1, #38]	; 0x26
   39aa8:	add	r6, sp, #532	; 0x214
   39aaa:	cbnz	r7, 39b06 <SHA256Result@@Base+0x422>
   39aac:	strht	pc, [fp, #148]
   39ab0:			; <UNDEFINED> instruction: 0xf3723c6e
   39ab4:	adds	r6, #241	; 0xf1
   39ab6:	ldrsh	r5, [r3, r4]
   39ab8:	bmi.w	fffb455a <__bss_end__@@Base+0xfff482d2>
   39abc:	asrs	r4, r2, #24
   39abe:	movs	r3, r0
   39ac0:	lsls	r0, r1, #10
   39ac2:	movs	r0, r0
   39ac4:	ldr	r6, [sp, #88]	; 0x58
   39ac6:	eor.w	r7, r1, r8
   39aca:	adc.w	r9, r9, r6
   39ace:	ldr	r6, [sp, #84]	; 0x54
   39ad0:	eor.w	lr, r9, sl
   39ad4:	adds.w	r2, r2, lr
   39ad8:	eor.w	r8, r2, r6
   39adc:	ldr	r6, [sp, #88]	; 0x58
   39ade:	ldr	r3, [r4, #72]	; 0x48
   39ae0:	adc.w	r5, r7, r5
   39ae4:	eor.w	ip, r5, r6
   39ae8:	mov.w	r6, r8, lsr #24
   39aec:	str	r3, [sp, #76]	; 0x4c
   39aee:	orr.w	r6, r6, ip, lsl #8
   39af2:	ldr	r3, [r4, #76]	; 0x4c
   39af4:	mov.w	ip, ip, lsr #24
   39af8:	orr.w	sl, ip, r8, lsl #8
   39afc:	str	r3, [sp, #80]	; 0x50
   39afe:	ldr	r3, [sp, #76]	; 0x4c
   39b00:	adds	r1, r1, r3
   39b02:	ldr	r3, [sp, #80]	; 0x50
   39b04:	adc.w	r9, r9, r3
   39b08:	adds	r3, r1, r6
   39b0a:	str	r3, [sp, #152]	; 0x98
   39b0c:	adc.w	r3, r9, sl
   39b10:	str	r3, [sp, #156]	; 0x9c
   39b12:	ldr	r3, [sp, #152]	; 0x98
   39b14:	eor.w	lr, r3, lr
   39b18:	ldr	r3, [sp, #156]	; 0x9c
   39b1a:	eors	r7, r3
   39b1c:	mov.w	r1, lr, lsr #16
   39b20:	orr.w	r3, r1, r7, lsl #16
   39b24:	lsrs	r7, r7, #16
   39b26:	str	r3, [sp, #212]	; 0xd4
   39b28:	orr.w	r3, r7, lr, lsl #16
   39b2c:	str	r3, [sp, #216]	; 0xd8
   39b2e:	ldr	r3, [sp, #212]	; 0xd4
   39b30:	adds	r3, r2, r3
   39b32:	str	r3, [sp, #160]	; 0xa0
   39b34:	ldr	r3, [sp, #216]	; 0xd8
   39b36:	adc.w	r3, r5, r3
   39b3a:	str	r3, [sp, #164]	; 0xa4
   39b3c:	ldr	r3, [sp, #160]	; 0xa0
   39b3e:	eors	r6, r3
   39b40:	ldr	r3, [sp, #164]	; 0xa4
   39b42:	eor.w	sl, r3, sl
   39b46:	mov.w	r2, sl, lsl #1
   39b4a:	orr.w	r3, r2, r6, lsr #31
   39b4e:	lsls	r6, r6, #1
   39b50:	str	r3, [sp, #224]	; 0xe0
   39b52:	orr.w	r3, r6, sl, lsr #31
   39b56:	str	r3, [sp, #220]	; 0xdc
   39b58:	ldr	r3, [r4, #80]	; 0x50
   39b5a:	str	r3, [sp, #84]	; 0x54
   39b5c:	ldr	r3, [r4, #84]	; 0x54
   39b5e:	ldr	r2, [sp, #84]	; 0x54
   39b60:	str	r3, [sp, #88]	; 0x58
   39b62:	ldr	r3, [sp, #92]	; 0x5c
   39b64:	ldr	r1, [sp, #88]	; 0x58
   39b66:	adds	r2, r3, r2
   39b68:	ldr	r3, [sp, #96]	; 0x60
   39b6a:	adc.w	r6, r3, r1
   39b6e:	ldr	r3, [sp, #172]	; 0xac
   39b70:	adds	r2, r2, r3
   39b72:	ldr	r3, [sp, #176]	; 0xb0
   39b74:	adc.w	r6, r3, r6
   39b78:	ldr	r3, [sp, #168]	; 0xa8
   39b7a:	eor.w	r5, r6, r3
   39b7e:	ldr	r3, [sp, #104]	; 0x68
   39b80:	eor.w	r1, r2, r3
   39b84:	ldr	r3, [sp, #100]	; 0x64
   39b86:	ldr	r7, [sp, #172]	; 0xac
   39b88:	adds.w	sl, r3, r5
   39b8c:	ldr	r3, [r4, #88]	; 0x58
   39b8e:	eor.w	r8, sl, r7
   39b92:	ldr	r7, [sp, #176]	; 0xb0
   39b94:	adc.w	r0, r1, r0
   39b98:	str	r3, [sp, #92]	; 0x5c
   39b9a:	eor.w	ip, r0, r7
   39b9e:	ldr	r3, [r4, #92]	; 0x5c
   39ba0:	mov.w	r9, r8, lsr #24
   39ba4:	orr.w	r7, r9, ip, lsl #8
   39ba8:	mov.w	ip, ip, lsr #24
   39bac:	orr.w	lr, ip, r8, lsl #8
   39bb0:	str	r3, [sp, #96]	; 0x60
   39bb2:	ldr	r3, [sp, #92]	; 0x5c
   39bb4:	adds	r2, r2, r3
   39bb6:	ldr	r3, [sp, #96]	; 0x60
   39bb8:	adc.w	r6, r3, r6
   39bbc:	adds	r3, r2, r7
   39bbe:	str	r3, [sp, #168]	; 0xa8
   39bc0:	adc.w	r3, r6, lr
   39bc4:	str	r3, [sp, #172]	; 0xac
   39bc6:	ldr	r3, [sp, #168]	; 0xa8
   39bc8:	eors	r5, r3
   39bca:	ldr	r3, [sp, #172]	; 0xac
   39bcc:	eors	r1, r3
   39bce:	lsrs	r2, r5, #16
   39bd0:	orr.w	r3, r2, r1, lsl #16
   39bd4:	lsrs	r1, r1, #16
   39bd6:	str	r3, [sp, #228]	; 0xe4
   39bd8:	orr.w	r3, r1, r5, lsl #16
   39bdc:	str	r3, [sp, #232]	; 0xe8
   39bde:	ldr	r3, [sp, #228]	; 0xe4
   39be0:	adds.w	r3, sl, r3
   39be4:	str	r3, [sp, #176]	; 0xb0
   39be6:	ldr	r3, [sp, #232]	; 0xe8
   39be8:	adc.w	r3, r0, r3
   39bec:	str	r3, [sp, #180]	; 0xb4
   39bee:	ldr	r3, [sp, #176]	; 0xb0
   39bf0:	eors	r7, r3
   39bf2:	ldr	r3, [sp, #180]	; 0xb4
   39bf4:	eor.w	lr, r3, lr
   39bf8:	mov.w	r3, lr, lsl #1
   39bfc:	orr.w	r3, r3, r7, lsr #31
   39c00:	lsls	r7, r7, #1
   39c02:	str	r3, [sp, #240]	; 0xf0
   39c04:	orr.w	r3, r7, lr, lsr #31
   39c08:	str	r3, [sp, #236]	; 0xec
   39c0a:	ldr	r3, [r4, #96]	; 0x60
   39c0c:	str	r3, [sp, #100]	; 0x64
   39c0e:	ldr	r3, [r4, #100]	; 0x64
   39c10:	ldr	r2, [sp, #100]	; 0x64
   39c12:	str	r3, [sp, #104]	; 0x68
   39c14:	ldr	r3, [sp, #116]	; 0x74
   39c16:	ldr	r1, [sp, #104]	; 0x68
   39c18:	adds	r3, r3, r2
   39c1a:	ldr	r2, [sp, #120]	; 0x78
   39c1c:	adc.w	ip, r2, r1
   39c20:	ldr	r2, [sp, #208]	; 0xd0
   39c22:	adds	r3, r3, r2
   39c24:	ldr	r2, [sp, #188]	; 0xbc
   39c26:	adc.w	ip, ip, fp
   39c2a:	ldr	r0, [sp, #112]	; 0x70
   39c2c:	eor.w	r7, ip, r2
   39c30:	ldr	r2, [sp, #184]	; 0xb8
   39c32:	eor.w	r1, r3, r2
   39c36:	ldr	r2, [sp, #108]	; 0x6c
   39c38:	adds	r2, r2, r7
   39c3a:	adc.w	r5, r0, r1
   39c3e:	ldr	r0, [sp, #208]	; 0xd0
   39c40:	eor.w	lr, r2, r0
   39c44:	eor.w	r0, r5, fp
   39c48:	mov.w	r9, lr, lsr #24
   39c4c:	orr.w	r8, r9, r0, lsl #8
   39c50:	lsrs	r0, r0, #24
   39c52:	orr.w	r6, r0, lr, lsl #8
   39c56:	ldr	r0, [r4, #104]	; 0x68
   39c58:	str	r0, [sp, #108]	; 0x6c
   39c5a:	ldr	r0, [r4, #108]	; 0x6c
   39c5c:	str	r0, [sp, #112]	; 0x70
   39c5e:	ldr	r0, [sp, #108]	; 0x6c
   39c60:	adds	r3, r3, r0
   39c62:	ldr	r0, [sp, #112]	; 0x70
   39c64:	adc.w	ip, ip, r0
   39c68:	adds.w	r3, r3, r8
   39c6c:	str	r3, [sp, #184]	; 0xb8
   39c6e:	adc.w	r3, ip, r6
   39c72:	str	r3, [sp, #188]	; 0xbc
   39c74:	ldr	r3, [sp, #184]	; 0xb8
   39c76:	eors	r7, r3
   39c78:	ldr	r3, [sp, #188]	; 0xbc
   39c7a:	eors	r1, r3
   39c7c:	lsrs	r3, r7, #16
   39c7e:	orr.w	r3, r3, r1, lsl #16
   39c82:	lsrs	r1, r1, #16
   39c84:	str	r3, [sp, #208]	; 0xd0
   39c86:	orr.w	r3, r1, r7, lsl #16
   39c8a:	str	r3, [sp, #244]	; 0xf4
   39c8c:	ldr	r3, [sp, #208]	; 0xd0
   39c8e:	adds	r2, r2, r3
   39c90:	ldr	r3, [sp, #244]	; 0xf4
   39c92:	eor.w	r8, r2, r8
   39c96:	adc.w	r5, r3, r5
   39c9a:	eors	r6, r5
   39c9c:	lsls	r3, r6, #1
   39c9e:	orr.w	r3, r3, r8, lsr #31
   39ca2:	mov.w	r8, r8, lsl #1
   39ca6:	str	r3, [sp, #252]	; 0xfc
   39ca8:	orr.w	r3, r8, r6, lsr #31
   39cac:	str	r3, [sp, #248]	; 0xf8
   39cae:	ldr	r3, [r4, #112]	; 0x70
   39cb0:	str	r3, [sp, #116]	; 0x74
   39cb2:	ldr	r3, [r4, #116]	; 0x74
   39cb4:	ldr	r1, [sp, #116]	; 0x74
   39cb6:	str	r3, [sp, #120]	; 0x78
   39cb8:	ldr	r3, [sp, #144]	; 0x90
   39cba:	ldr	r0, [sp, #120]	; 0x78
   39cbc:	adds	r1, r3, r1
   39cbe:	ldr	r3, [sp, #148]	; 0x94
   39cc0:	adc.w	r9, r3, r0
   39cc4:	ldr	r3, [sp, #192]	; 0xc0
   39cc6:	adds	r1, r1, r3
   39cc8:	ldr	r3, [sp, #196]	; 0xc4
   39cca:	adc.w	r9, r9, r3
   39cce:	ldr	r3, [sp, #204]	; 0xcc
   39cd0:	eor.w	r7, r9, r3
   39cd4:	ldr	r3, [sp, #200]	; 0xc8
   39cd6:	ldr	r6, [sp, #192]	; 0xc0
   39cd8:	eor.w	sl, r1, r3
   39cdc:	ldr	r3, [sp, #124]	; 0x7c
   39cde:	ldr	r0, [sp, #128]	; 0x80
   39ce0:	adds	r3, r3, r7
   39ce2:	eor.w	lr, r3, r6
   39ce6:	ldr	r6, [sp, #196]	; 0xc4
   39ce8:	adc.w	r0, r0, sl
   39cec:	eors	r6, r0
   39cee:	mov.w	fp, lr, lsr #24
   39cf2:	orr.w	ip, fp, r6, lsl #8
   39cf6:	lsrs	r6, r6, #24
   39cf8:	orr.w	r8, r6, lr, lsl #8
   39cfc:	ldr	r6, [r4, #120]	; 0x78
   39cfe:	ldr	r4, [r4, #124]	; 0x7c
   39d00:	adds	r1, r1, r6
   39d02:	str	r6, [sp, #124]	; 0x7c
   39d04:	str	r4, [sp, #128]	; 0x80
   39d06:	ldr	r4, [sp, #128]	; 0x80
   39d08:	adc.w	r9, r9, r4
   39d0c:	adds.w	r1, r1, ip
   39d10:	str	r1, [sp, #144]	; 0x90
   39d12:	adc.w	r1, r9, r8
   39d16:	str	r1, [sp, #148]	; 0x94
   39d18:	ldr	r1, [sp, #144]	; 0x90
   39d1a:	eors	r7, r1
   39d1c:	ldr	r1, [sp, #148]	; 0x94
   39d1e:	eor.w	r1, r1, sl
   39d22:	lsrs	r4, r7, #16
   39d24:	orr.w	fp, r4, r1, lsl #16
   39d28:	mov.w	sl, r1, lsr #16
   39d2c:	adds.w	r3, r3, fp
   39d30:	orr.w	sl, sl, r7, lsl #16
   39d34:	adc.w	r0, r0, sl
   39d38:	eor.w	ip, r3, ip
   39d3c:	eor.w	r8, r0, r8
   39d40:	ldr	r4, [sp, #116]	; 0x74
   39d42:	ldr	r7, [sp, #120]	; 0x78
   39d44:	mov.w	r1, r8, lsl #1
   39d48:	str	r3, [sp, #192]	; 0xc0
   39d4a:	orr.w	r6, r1, ip, lsr #31
   39d4e:	ldr	r1, [sp, #152]	; 0x98
   39d50:	mov.w	ip, ip, lsl #1
   39d54:	adds	r1, r1, r4
   39d56:	ldr	r4, [sp, #156]	; 0x9c
   39d58:	orr.w	lr, ip, r8, lsr #31
   39d5c:	adc.w	r9, r4, r7
   39d60:	adds.w	r1, r1, lr
   39d64:	ldr	r4, [sp, #232]	; 0xe8
   39d66:	adc.w	r9, r9, r6
   39d6a:	eor.w	r7, r9, r4
   39d6e:	ldr	r4, [sp, #228]	; 0xe4
   39d70:	adds	r2, r2, r7
   39d72:	eor.w	r4, r1, r4
   39d76:	eor.w	ip, r2, lr
   39d7a:	adc.w	r5, r4, r5
   39d7e:	eors	r6, r5
   39d80:	mov.w	r3, ip, lsr #24
   39d84:	orr.w	lr, r3, r6, lsl #8
   39d88:	ldr	r3, [sp, #84]	; 0x54
   39d8a:	lsrs	r6, r6, #24
   39d8c:	adds	r1, r3, r1
   39d8e:	ldr	r3, [sp, #88]	; 0x58
   39d90:	orr.w	r8, r6, ip, lsl #8
   39d94:	adc.w	r9, r3, r9
   39d98:	adds.w	r3, r1, lr
   39d9c:	str	r3, [sp, #152]	; 0x98
   39d9e:	adc.w	r3, r9, r8
   39da2:	str	r3, [sp, #156]	; 0x9c
   39da4:	ldr	r3, [sp, #152]	; 0x98
   39da6:	eors	r7, r3
   39da8:	ldr	r3, [sp, #156]	; 0x9c
   39daa:	eors	r4, r3
   39dac:	lsrs	r1, r7, #16
   39dae:	orr.w	r3, r1, r4, lsl #16
   39db2:	lsrs	r4, r4, #16
   39db4:	str	r3, [sp, #228]	; 0xe4
   39db6:	orr.w	r3, r4, r7, lsl #16
   39dba:	str	r3, [sp, #232]	; 0xe8
   39dbc:	ldr	r3, [sp, #228]	; 0xe4
   39dbe:	adds	r3, r2, r3
   39dc0:	str	r3, [sp, #196]	; 0xc4
   39dc2:	ldr	r3, [sp, #232]	; 0xe8
   39dc4:	adc.w	r3, r5, r3
   39dc8:	str	r3, [sp, #200]	; 0xc8
   39dca:	ldr	r3, [sp, #196]	; 0xc4
   39dcc:	ldr	r1, [sp, #172]	; 0xac
   39dce:	eor.w	lr, r3, lr
   39dd2:	ldr	r3, [sp, #200]	; 0xc8
   39dd4:	ldr	r4, [sp, #220]	; 0xdc
   39dd6:	eor.w	r8, r3, r8
   39dda:	mov.w	r2, r8, lsl #1
   39dde:	orr.w	r3, r2, lr, lsr #31
   39de2:	mov.w	lr, lr, lsl #1
   39de6:	ldr	r2, [sp, #168]	; 0xa8
   39de8:	str	r3, [sp, #260]	; 0x104
   39dea:	orr.w	r3, lr, r8, lsr #31
   39dee:	str	r3, [sp, #256]	; 0x100
   39df0:	ldr	r3, [sp, #36]	; 0x24
   39df2:	adds	r2, r3, r2
   39df4:	ldr	r3, [sp, #40]	; 0x28
   39df6:	adc.w	r7, r3, r1
   39dfa:	ldr	r3, [sp, #220]	; 0xdc
   39dfc:	adds	r2, r2, r3
   39dfe:	ldr	r3, [sp, #224]	; 0xe0
   39e00:	adc.w	r7, r3, r7
   39e04:	ldr	r3, [sp, #244]	; 0xf4
   39e06:	eor.w	r5, r7, r3
   39e0a:	ldr	r3, [sp, #208]	; 0xd0
   39e0c:	eor.w	r1, r2, r3
   39e10:	ldr	r3, [sp, #192]	; 0xc0
   39e12:	adds	r3, r3, r5
   39e14:	eor.w	r6, r3, r4
   39e18:	ldr	r4, [sp, #224]	; 0xe0
   39e1a:	adc.w	r0, r1, r0
   39e1e:	eors	r4, r0
   39e20:	mov.w	r8, r6, lsr #24
   39e24:	orr.w	ip, r8, r4, lsl #8
   39e28:	lsrs	r4, r4, #24
   39e2a:	orr.w	lr, r4, r6, lsl #8
   39e2e:	ldr	r4, [sp, #68]	; 0x44
   39e30:	adds	r2, r4, r2
   39e32:	ldr	r4, [sp, #72]	; 0x48
   39e34:	adc.w	r7, r4, r7
   39e38:	adds.w	r2, r2, ip
   39e3c:	str	r2, [sp, #168]	; 0xa8
   39e3e:	adc.w	r2, r7, lr
   39e42:	str	r2, [sp, #172]	; 0xac
   39e44:	ldr	r2, [sp, #168]	; 0xa8
   39e46:	eors	r5, r2
   39e48:	ldr	r2, [sp, #172]	; 0xac
   39e4a:	eors	r1, r2
   39e4c:	lsrs	r2, r5, #16
   39e4e:	orr.w	r2, r2, r1, lsl #16
   39e52:	lsrs	r1, r1, #16
   39e54:	str	r2, [sp, #208]	; 0xd0
   39e56:	orr.w	r2, r1, r5, lsl #16
   39e5a:	str	r2, [sp, #220]	; 0xdc
   39e5c:	ldr	r2, [sp, #208]	; 0xd0
   39e5e:	adds	r3, r3, r2
   39e60:	str	r3, [sp, #192]	; 0xc0
   39e62:	ldr	r3, [sp, #220]	; 0xdc
   39e64:	adc.w	r3, r0, r3
   39e68:	str	r3, [sp, #204]	; 0xcc
   39e6a:	ldr	r2, [sp, #204]	; 0xcc
   39e6c:	ldr	r3, [sp, #192]	; 0xc0
   39e6e:	eor.w	lr, r2, lr
   39e72:	eor.w	r3, r3, ip
   39e76:	mov.w	r2, lr, lsl #1
   39e7a:	orr.w	r2, r2, r3, lsr #31
   39e7e:	mov.w	ip, r3, lsl #1
   39e82:	str	r2, [sp, #224]	; 0xe0
   39e84:	orr.w	ip, ip, lr, lsr #31
   39e88:	ldr	r3, [sp, #76]	; 0x4c
   39e8a:	ldr	r2, [sp, #184]	; 0xb8
   39e8c:	adds	r3, r3, r2
   39e8e:	ldr	r2, [sp, #80]	; 0x50
   39e90:	ldr	r1, [sp, #188]	; 0xbc
   39e92:	adc.w	r8, r2, r1
   39e96:	ldr	r2, [sp, #236]	; 0xec
   39e98:	ldr	r1, [sp, #164]	; 0xa4
   39e9a:	adds	r3, r3, r2
   39e9c:	ldr	r2, [sp, #240]	; 0xf0
   39e9e:	eor.w	r0, r3, fp
   39ea2:	adc.w	r8, r8, r2
   39ea6:	ldr	r2, [sp, #160]	; 0xa0
   39ea8:	eor.w	r6, r8, sl
   39eac:	adds	r2, r2, r6
   39eae:	adc.w	r5, r1, r0
   39eb2:	ldr	r1, [sp, #236]	; 0xec
   39eb4:	eor.w	r7, r2, r1
   39eb8:	ldr	r1, [sp, #240]	; 0xf0
   39eba:	eor.w	r4, r5, r1
   39ebe:	mov.w	r9, r7, lsr #24
   39ec2:	orr.w	r1, r9, r4, lsl #8
   39ec6:	lsrs	r4, r4, #24
   39ec8:	orr.w	lr, r4, r7, lsl #8
   39ecc:	ldr	r4, [sp, #124]	; 0x7c
   39ece:	adds	r3, r4, r3
   39ed0:	ldr	r4, [sp, #128]	; 0x80
   39ed2:	adc.w	r8, r4, r8
   39ed6:	adds	r3, r3, r1
   39ed8:	str	r3, [sp, #160]	; 0xa0
   39eda:	adc.w	r3, r8, lr
   39ede:	str	r3, [sp, #164]	; 0xa4
   39ee0:	ldr	r3, [sp, #160]	; 0xa0
   39ee2:	ldr	r4, [sp, #248]	; 0xf8
   39ee4:	eors	r6, r3
   39ee6:	ldr	r3, [sp, #164]	; 0xa4
   39ee8:	eors	r0, r3
   39eea:	lsrs	r3, r6, #16
   39eec:	orr.w	r3, r3, r0, lsl #16
   39ef0:	lsrs	r0, r0, #16
   39ef2:	str	r3, [sp, #236]	; 0xec
   39ef4:	orr.w	r3, r0, r6, lsl #16
   39ef8:	str	r3, [sp, #240]	; 0xf0
   39efa:	ldr	r3, [sp, #236]	; 0xec
   39efc:	ldr	r0, [sp, #148]	; 0x94
   39efe:	adds	r2, r2, r3
   39f00:	ldr	r3, [sp, #240]	; 0xf0
   39f02:	eor.w	r1, r1, r2
   39f06:	adc.w	r5, r3, r5
   39f0a:	eor.w	lr, r5, lr
   39f0e:	mov.w	r3, lr, lsl #1
   39f12:	orr.w	r3, r3, r1, lsr #31
   39f16:	lsls	r1, r1, #1
   39f18:	str	r3, [sp, #188]	; 0xbc
   39f1a:	orr.w	r3, r1, lr, lsr #31
   39f1e:	ldr	r1, [sp, #144]	; 0x90
   39f20:	str	r3, [sp, #184]	; 0xb8
   39f22:	ldr	r3, [sp, #108]	; 0x6c
   39f24:	adds	r1, r3, r1
   39f26:	ldr	r3, [sp, #112]	; 0x70
   39f28:	adc.w	sl, r3, r0
   39f2c:	ldr	r3, [sp, #248]	; 0xf8
   39f2e:	ldr	r0, [sp, #180]	; 0xb4
   39f30:	adds	r1, r1, r3
   39f32:	ldr	r3, [sp, #252]	; 0xfc
   39f34:	adc.w	sl, sl, r3
   39f38:	ldr	r3, [sp, #216]	; 0xd8
   39f3a:	eor.w	lr, sl, r3
   39f3e:	ldr	r3, [sp, #212]	; 0xd4
   39f40:	eor.w	r6, r1, r3
   39f44:	ldr	r3, [sp, #176]	; 0xb0
   39f46:	adds.w	r3, r3, lr
   39f4a:	eor.w	r8, r3, r4
   39f4e:	ldr	r4, [sp, #252]	; 0xfc
   39f50:	adcs	r0, r6
   39f52:	eor.w	r7, r0, r4
   39f56:	mov.w	fp, r8, lsr #24
   39f5a:	orr.w	r4, fp, r7, lsl #8
   39f5e:	lsrs	r7, r7, #24
   39f60:	orr.w	r9, r7, r8, lsl #8
   39f64:	ldr	r7, [sp, #52]	; 0x34
   39f66:	adds	r1, r7, r1
   39f68:	ldr	r7, [sp, #56]	; 0x38
   39f6a:	adc.w	sl, r7, sl
   39f6e:	adds	r1, r1, r4
   39f70:	str	r1, [sp, #144]	; 0x90
   39f72:	adc.w	r1, sl, r9
   39f76:	str	r1, [sp, #148]	; 0x94
   39f78:	ldr	r1, [sp, #144]	; 0x90
   39f7a:	eor.w	lr, r1, lr
   39f7e:	ldr	r1, [sp, #148]	; 0x94
   39f80:	eors	r6, r1
   39f82:	mov.w	r1, lr, lsr #16
   39f86:	orr.w	r8, r1, r6, lsl #16
   39f8a:	lsrs	r6, r6, #16
   39f8c:	adds.w	r3, r3, r8
   39f90:	orr.w	sl, r6, lr, lsl #16
   39f94:	adc.w	r0, r0, sl
   39f98:	eors	r4, r3
   39f9a:	eor.w	r9, r0, r9
   39f9e:	ldr	r6, [sp, #156]	; 0x9c
   39fa0:	mov.w	r1, r9, lsl #1
   39fa4:	orr.w	r1, r1, r4, lsr #31
   39fa8:	lsls	r4, r4, #1
   39faa:	orr.w	fp, r4, r9, lsr #31
   39fae:	str	r1, [sp, #212]	; 0xd4
   39fb0:	ldr	r4, [sp, #152]	; 0x98
   39fb2:	ldr	r1, [sp, #12]
   39fb4:	adds	r1, r1, r4
   39fb6:	ldr	r4, [sp, #16]
   39fb8:	adc.w	r9, r4, r6
   39fbc:	ldr	r4, [sp, #224]	; 0xe0
   39fbe:	adds.w	r1, r1, ip
   39fc2:	adc.w	r9, r9, r4
   39fc6:	eor.w	r7, r1, r8
   39fca:	eor.w	lr, r9, sl
   39fce:	adds.w	r2, r2, lr
   39fd2:	adc.w	r5, r7, r5
   39fd6:	eor.w	ip, r2, ip
   39fda:	eor.w	r6, r5, r4
   39fde:	mov.w	sl, ip, lsr #24
   39fe2:	orr.w	r4, sl, r6, lsl #8
   39fe6:	lsrs	r6, r6, #24
   39fe8:	orr.w	r8, r6, ip, lsl #8
   39fec:	ldr	r6, [sp, #100]	; 0x64
   39fee:	adds	r1, r6, r1
   39ff0:	ldr	r6, [sp, #104]	; 0x68
   39ff2:	adc.w	r9, r6, r9
   39ff6:	adds	r1, r1, r4
   39ff8:	str	r1, [sp, #152]	; 0x98
   39ffa:	adc.w	r1, r9, r8
   39ffe:	str	r1, [sp, #156]	; 0x9c
   3a000:	ldr	r1, [sp, #152]	; 0x98
   3a002:	eor.w	lr, r1, lr
   3a006:	ldr	r1, [sp, #156]	; 0x9c
   3a008:	eors	r7, r1
   3a00a:	mov.w	r1, lr, lsr #16
   3a00e:	orr.w	r1, r1, r7, lsl #16
   3a012:	lsrs	r7, r7, #16
   3a014:	str	r1, [sp, #216]	; 0xd8
   3a016:	orr.w	r1, r7, lr, lsl #16
   3a01a:	str	r1, [sp, #224]	; 0xe0
   3a01c:	ldr	r1, [sp, #216]	; 0xd8
   3a01e:	adds	r2, r2, r1
   3a020:	str	r2, [sp, #176]	; 0xb0
   3a022:	ldr	r2, [sp, #224]	; 0xe0
   3a024:	ldr	r1, [sp, #168]	; 0xa8
   3a026:	adc.w	r2, r5, r2
   3a02a:	str	r2, [sp, #180]	; 0xb4
   3a02c:	ldr	r2, [sp, #176]	; 0xb0
   3a02e:	eors	r4, r2
   3a030:	ldr	r2, [sp, #180]	; 0xb4
   3a032:	eor.w	r8, r2, r8
   3a036:	mov.w	r2, r8, lsl #1
   3a03a:	orr.w	r2, r2, r4, lsr #31
   3a03e:	lsls	r4, r4, #1
   3a040:	str	r2, [sp, #248]	; 0xf8
   3a042:	orr.w	r2, r4, r8, lsr #31
   3a046:	str	r2, [sp, #244]	; 0xf4
   3a048:	ldr	r2, [sp, #4]
   3a04a:	ldr	r4, [sp, #172]	; 0xac
   3a04c:	adds	r2, r2, r1
   3a04e:	ldr	r1, [sp, #8]
   3a050:	adc.w	r7, r1, r4
   3a054:	ldr	r1, [sp, #184]	; 0xb8
   3a056:	adds	r2, r2, r1
   3a058:	ldr	r1, [sp, #188]	; 0xbc
   3a05a:	adc.w	r7, r1, r7
   3a05e:	ldr	r1, [sp, #232]	; 0xe8
   3a060:	eor.w	r4, r7, r1
   3a064:	ldr	r1, [sp, #228]	; 0xe4
   3a066:	adds	r3, r3, r4
   3a068:	eor.w	r9, r2, r1
   3a06c:	ldr	r1, [sp, #184]	; 0xb8
   3a06e:	adc.w	r0, r0, r9
   3a072:	eor.w	ip, r3, r1
   3a076:	ldr	r1, [sp, #188]	; 0xbc
   3a078:	eor.w	r5, r0, r1
   3a07c:	mov.w	lr, ip, lsr #24
   3a080:	orr.w	r1, lr, r5, lsl #8
   3a084:	lsrs	r5, r5, #24
   3a086:	orr.w	r6, r5, ip, lsl #8
   3a08a:	ldr	r5, [sp, #20]
   3a08c:	adds	r2, r5, r2
   3a08e:	ldr	r5, [sp, #24]
   3a090:	adc.w	r7, r5, r7
   3a094:	adds	r2, r2, r1
   3a096:	str	r2, [sp, #168]	; 0xa8
   3a098:	adc.w	r2, r7, r6
   3a09c:	str	r2, [sp, #172]	; 0xac
   3a09e:	ldr	r2, [sp, #168]	; 0xa8
   3a0a0:	eors	r4, r2
   3a0a2:	ldr	r2, [sp, #172]	; 0xac
   3a0a4:	eor.w	r2, r2, r9
   3a0a8:	lsrs	r5, r4, #16
   3a0aa:	orr.w	r5, r5, r2, lsl #16
   3a0ae:	mov.w	r9, r2, lsr #16
   3a0b2:	orr.w	r9, r9, r4, lsl #16
   3a0b6:	adds	r3, r3, r5
   3a0b8:	str	r3, [sp, #184]	; 0xb8
   3a0ba:	adc.w	r3, r0, r9
   3a0be:	str	r3, [sp, #188]	; 0xbc
   3a0c0:	ldr	r3, [sp, #184]	; 0xb8
   3a0c2:	ldr	r2, [sp, #160]	; 0xa0
   3a0c4:	eors	r1, r3
   3a0c6:	ldr	r3, [sp, #188]	; 0xbc
   3a0c8:	ldr	r0, [sp, #200]	; 0xc8
   3a0ca:	eors	r6, r3
   3a0cc:	str	r5, [sp, #228]	; 0xe4
   3a0ce:	lsls	r3, r6, #1
   3a0d0:	orr.w	r3, r3, r1, lsr #31
   3a0d4:	lsls	r1, r1, #1
   3a0d6:	str	r3, [sp, #252]	; 0xfc
   3a0d8:	orr.w	r3, r1, r6, lsr #31
   3a0dc:	str	r3, [sp, #232]	; 0xe8
   3a0de:	ldr	r3, [sp, #92]	; 0x5c
   3a0e0:	ldr	r1, [sp, #164]	; 0xa4
   3a0e2:	adds	r3, r3, r2
   3a0e4:	ldr	r2, [sp, #96]	; 0x60
   3a0e6:	adc.w	ip, r2, r1
   3a0ea:	ldr	r2, [sp, #212]	; 0xd4
   3a0ec:	adds.w	r3, r3, fp
   3a0f0:	adc.w	ip, ip, r2
   3a0f4:	ldr	r2, [sp, #220]	; 0xdc
   3a0f6:	eor.w	r7, ip, r2
   3a0fa:	ldr	r2, [sp, #208]	; 0xd0
   3a0fc:	eor.w	r1, r3, r2
   3a100:	ldr	r2, [sp, #196]	; 0xc4
   3a102:	adds	r2, r2, r7
   3a104:	adc.w	r5, r0, r1
   3a108:	ldr	r0, [sp, #212]	; 0xd4
   3a10a:	eor.w	fp, r2, fp
   3a10e:	eors	r0, r5
   3a110:	mov.w	r4, fp, lsr #24
   3a114:	orr.w	r8, r4, r0, lsl #8
   3a118:	lsrs	r0, r0, #24
   3a11a:	orr.w	r6, r0, fp, lsl #8
   3a11e:	ldr	r0, [sp, #60]	; 0x3c
   3a120:	adds	r3, r0, r3
   3a122:	ldr	r0, [sp, #64]	; 0x40
   3a124:	adc.w	ip, r0, ip
   3a128:	adds.w	r3, r3, r8
   3a12c:	str	r3, [sp, #160]	; 0xa0
   3a12e:	adc.w	r3, ip, r6
   3a132:	str	r3, [sp, #164]	; 0xa4
   3a134:	ldr	r3, [sp, #160]	; 0xa0
   3a136:	ldr	r0, [sp, #148]	; 0x94
   3a138:	eors	r7, r3
   3a13a:	ldr	r3, [sp, #164]	; 0xa4
   3a13c:	ldr	r4, [sp, #256]	; 0x100
   3a13e:	eors	r1, r3
   3a140:	lsrs	r3, r7, #16
   3a142:	orr.w	r3, r3, r1, lsl #16
   3a146:	lsrs	r1, r1, #16
   3a148:	str	r3, [sp, #200]	; 0xc8
   3a14a:	orr.w	r3, r1, r7, lsl #16
   3a14e:	str	r3, [sp, #208]	; 0xd0
   3a150:	ldr	r3, [sp, #200]	; 0xc8
   3a152:	ldr	r1, [sp, #144]	; 0x90
   3a154:	adds	r2, r2, r3
   3a156:	ldr	r3, [sp, #208]	; 0xd0
   3a158:	eor.w	r8, r2, r8
   3a15c:	adc.w	r5, r3, r5
   3a160:	eors	r6, r5
   3a162:	lsls	r3, r6, #1
   3a164:	orr.w	r3, r3, r8, lsr #31
   3a168:	mov.w	r8, r8, lsl #1
   3a16c:	str	r3, [sp, #220]	; 0xdc
   3a16e:	orr.w	r3, r8, r6, lsr #31
   3a172:	str	r3, [sp, #212]	; 0xd4
   3a174:	ldr	r3, [sp, #44]	; 0x2c
   3a176:	adds	r1, r3, r1
   3a178:	ldr	r3, [sp, #48]	; 0x30
   3a17a:	adc.w	sl, r3, r0
   3a17e:	ldr	r3, [sp, #256]	; 0x100
   3a180:	ldr	r0, [sp, #204]	; 0xcc
   3a182:	adds	r1, r1, r3
   3a184:	ldr	r3, [sp, #260]	; 0x104
   3a186:	adc.w	sl, sl, r3
   3a18a:	ldr	r3, [sp, #240]	; 0xf0
   3a18c:	eor.w	ip, sl, r3
   3a190:	ldr	r3, [sp, #236]	; 0xec
   3a192:	eor.w	r6, r1, r3
   3a196:	ldr	r3, [sp, #192]	; 0xc0
   3a198:	adds.w	r3, r3, ip
   3a19c:	eor.w	lr, r3, r4
   3a1a0:	ldr	r4, [sp, #260]	; 0x104
   3a1a2:	adcs	r0, r6
   3a1a4:	eor.w	r7, r0, r4
   3a1a8:	mov.w	fp, lr, lsr #24
   3a1ac:	orr.w	r4, fp, r7, lsl #8
   3a1b0:	lsrs	r7, r7, #24
   3a1b2:	orr.w	r8, r7, lr, lsl #8
   3a1b6:	ldr	r7, [sp, #28]
   3a1b8:	adds	r1, r7, r1
   3a1ba:	ldr	r7, [sp, #32]
   3a1bc:	adc.w	sl, r7, sl
   3a1c0:	adds	r1, r1, r4
   3a1c2:	str	r1, [sp, #144]	; 0x90
   3a1c4:	adc.w	r1, sl, r8
   3a1c8:	str	r1, [sp, #148]	; 0x94
   3a1ca:	ldr	r1, [sp, #144]	; 0x90
   3a1cc:	ldr	r7, [sp, #156]	; 0x9c
   3a1ce:	eor.w	ip, r1, ip
   3a1d2:	ldr	r1, [sp, #148]	; 0x94
   3a1d4:	eors	r6, r1
   3a1d6:	mov.w	r1, ip, lsr #16
   3a1da:	orr.w	r1, r1, r6, lsl #16
   3a1de:	lsrs	r6, r6, #16
   3a1e0:	orr.w	fp, r6, ip, lsl #16
   3a1e4:	adds	r3, r3, r1
   3a1e6:	adc.w	r0, r0, fp
   3a1ea:	eors	r4, r3
   3a1ec:	eor.w	r8, r0, r8
   3a1f0:	str	r1, [sp, #236]	; 0xec
   3a1f2:	mov.w	r1, r8, lsl #1
   3a1f6:	orr.w	r6, r1, r4, lsr #31
   3a1fa:	lsls	r4, r4, #1
   3a1fc:	orr.w	ip, r4, r8, lsr #31
   3a200:	ldr	r1, [sp, #92]	; 0x5c
   3a202:	ldr	r4, [sp, #152]	; 0x98
   3a204:	adds	r1, r1, r4
   3a206:	ldr	r4, [sp, #96]	; 0x60
   3a208:	adc.w	sl, r4, r7
   3a20c:	adds.w	r1, r1, ip
   3a210:	adc.w	sl, sl, r6
   3a214:	ldr	r4, [sp, #228]	; 0xe4
   3a216:	eor.w	lr, sl, r9
   3a21a:	adds.w	r2, r2, lr
   3a21e:	eor.w	r7, r1, r4
   3a222:	adc.w	r5, r7, r5
   3a226:	eor.w	r4, r2, ip
   3a22a:	eor.w	ip, r5, r6
   3a22e:	mov.w	r9, r4, lsr #24
   3a232:	orr.w	r6, r9, ip, lsl #8
   3a236:	mov.w	ip, ip, lsr #24
   3a23a:	orr.w	r8, ip, r4, lsl #8
   3a23e:	ldr	r4, [sp, #68]	; 0x44
   3a240:	adds	r1, r4, r1
   3a242:	ldr	r4, [sp, #72]	; 0x48
   3a244:	adc.w	sl, r4, sl
   3a248:	adds	r1, r1, r6
   3a24a:	str	r1, [sp, #152]	; 0x98
   3a24c:	adc.w	r1, sl, r8
   3a250:	str	r1, [sp, #156]	; 0x9c
   3a252:	ldr	r1, [sp, #152]	; 0x98
   3a254:	ldr	r4, [sp, #172]	; 0xac
   3a256:	eor.w	lr, r1, lr
   3a25a:	ldr	r1, [sp, #156]	; 0x9c
   3a25c:	eors	r7, r1
   3a25e:	mov.w	r1, lr, lsr #16
   3a262:	orr.w	r1, r1, r7, lsl #16
   3a266:	lsrs	r7, r7, #16
   3a268:	str	r1, [sp, #228]	; 0xe4
   3a26a:	orr.w	r1, r7, lr, lsl #16
   3a26e:	str	r1, [sp, #240]	; 0xf0
   3a270:	ldr	r1, [sp, #228]	; 0xe4
   3a272:	adds	r2, r2, r1
   3a274:	str	r2, [sp, #192]	; 0xc0
   3a276:	ldr	r2, [sp, #240]	; 0xf0
   3a278:	ldr	r1, [sp, #168]	; 0xa8
   3a27a:	adc.w	r2, r5, r2
   3a27e:	str	r2, [sp, #196]	; 0xc4
   3a280:	ldr	r2, [sp, #192]	; 0xc0
   3a282:	ldr	r5, [sp, #248]	; 0xf8
   3a284:	eors	r6, r2
   3a286:	ldr	r2, [sp, #196]	; 0xc4
   3a288:	eor.w	r8, r2, r8
   3a28c:	mov.w	r2, r8, lsl #1
   3a290:	orr.w	r2, r2, r6, lsr #31
   3a294:	lsls	r6, r6, #1
   3a296:	str	r2, [sp, #260]	; 0x104
   3a298:	orr.w	r2, r6, r8, lsr #31
   3a29c:	str	r2, [sp, #256]	; 0x100
   3a29e:	ldr	r2, [sp, #100]	; 0x64
   3a2a0:	adds	r2, r2, r1
   3a2a2:	ldr	r1, [sp, #104]	; 0x68
   3a2a4:	adc.w	r7, r1, r4
   3a2a8:	ldr	r1, [sp, #244]	; 0xf4
   3a2aa:	ldr	r4, [sp, #244]	; 0xf4
   3a2ac:	adds	r2, r2, r1
   3a2ae:	ldr	r1, [sp, #248]	; 0xf8
   3a2b0:	adc.w	r7, r1, r7
   3a2b4:	ldr	r1, [sp, #208]	; 0xd0
   3a2b6:	eor.w	r6, r7, r1
   3a2ba:	ldr	r1, [sp, #200]	; 0xc8
   3a2bc:	adds	r3, r3, r6
   3a2be:	eor.w	r1, r2, r1
   3a2c2:	eor.w	r4, r3, r4
   3a2c6:	adc.w	r0, r1, r0
   3a2ca:	eors	r5, r0
   3a2cc:	mov.w	r8, r4, lsr #24
   3a2d0:	orr.w	ip, r8, r5, lsl #8
   3a2d4:	lsrs	r5, r5, #24
   3a2d6:	orr.w	lr, r5, r4, lsl #8
   3a2da:	ldr	r4, [sp, #4]
   3a2dc:	adds	r2, r4, r2
   3a2de:	ldr	r4, [sp, #8]
   3a2e0:	adc.w	r7, r4, r7
   3a2e4:	adds.w	r2, r2, ip
   3a2e8:	str	r2, [sp, #168]	; 0xa8
   3a2ea:	adc.w	r2, r7, lr
   3a2ee:	str	r2, [sp, #172]	; 0xac
   3a2f0:	ldr	r2, [sp, #168]	; 0xa8
   3a2f2:	eors	r6, r2
   3a2f4:	ldr	r2, [sp, #172]	; 0xac
   3a2f6:	eors	r1, r2
   3a2f8:	lsrs	r2, r6, #16
   3a2fa:	orr.w	r2, r2, r1, lsl #16
   3a2fe:	lsrs	r1, r1, #16
   3a300:	str	r2, [sp, #208]	; 0xd0
   3a302:	orr.w	r2, r1, r6, lsl #16
   3a306:	str	r2, [sp, #244]	; 0xf4
   3a308:	ldr	r2, [sp, #208]	; 0xd0
   3a30a:	ldr	r1, [sp, #164]	; 0xa4
   3a30c:	adds	r3, r3, r2
   3a30e:	str	r3, [sp, #200]	; 0xc8
   3a310:	ldr	r3, [sp, #244]	; 0xf4
   3a312:	adc.w	r3, r0, r3
   3a316:	str	r3, [sp, #204]	; 0xcc
   3a318:	ldr	r2, [sp, #204]	; 0xcc
   3a31a:	ldr	r3, [sp, #200]	; 0xc8
   3a31c:	eor.w	lr, r2, lr
   3a320:	eor.w	r3, r3, ip
   3a324:	mov.w	r2, lr, lsl #1
   3a328:	orr.w	r2, r2, r3, lsr #31
   3a32c:	mov.w	ip, r3, lsl #1
   3a330:	str	r2, [sp, #248]	; 0xf8
   3a332:	orr.w	ip, ip, lr, lsr #31
   3a336:	ldr	r2, [sp, #160]	; 0xa0
   3a338:	ldr	r3, [sp, #44]	; 0x2c
   3a33a:	adds	r3, r3, r2
   3a33c:	ldr	r2, [sp, #48]	; 0x30
   3a33e:	adc.w	lr, r2, r1
   3a342:	ldr	r2, [sp, #232]	; 0xe8
   3a344:	ldr	r1, [sp, #180]	; 0xb4
   3a346:	adds	r3, r3, r2
   3a348:	ldr	r2, [sp, #252]	; 0xfc
   3a34a:	adc.w	lr, lr, r2
   3a34e:	ldr	r2, [sp, #236]	; 0xec
   3a350:	eor.w	r6, lr, fp
   3a354:	eor.w	r0, r3, r2
   3a358:	ldr	r2, [sp, #176]	; 0xb0
   3a35a:	adds	r2, r2, r6
   3a35c:	adc.w	r5, r1, r0
   3a360:	ldr	r1, [sp, #232]	; 0xe8
   3a362:	eor.w	r8, r2, r1
   3a366:	ldr	r1, [sp, #252]	; 0xfc
   3a368:	eor.w	r4, r5, r1
   3a36c:	mov.w	r9, r8, lsr #24
   3a370:	orr.w	r1, r9, r4, lsl #8
   3a374:	lsrs	r4, r4, #24
   3a376:	orr.w	r7, r4, r8, lsl #8
   3a37a:	ldr	r4, [sp, #20]
   3a37c:	adds	r3, r4, r3
   3a37e:	ldr	r4, [sp, #24]
   3a380:	adc.w	lr, r4, lr
   3a384:	adds	r3, r3, r1
   3a386:	str	r3, [sp, #160]	; 0xa0
   3a388:	adc.w	r3, lr, r7
   3a38c:	str	r3, [sp, #164]	; 0xa4
   3a38e:	ldr	r3, [sp, #160]	; 0xa0
   3a390:	eors	r6, r3
   3a392:	ldr	r3, [sp, #164]	; 0xa4
   3a394:	eors	r0, r3
   3a396:	lsrs	r3, r6, #16
   3a398:	orr.w	r3, r3, r0, lsl #16
   3a39c:	lsrs	r0, r0, #16
   3a39e:	str	r3, [sp, #232]	; 0xe8
   3a3a0:	orr.w	r3, r0, r6, lsl #16
   3a3a4:	str	r3, [sp, #236]	; 0xec
   3a3a6:	ldr	r3, [sp, #232]	; 0xe8
   3a3a8:	adds	r2, r2, r3
   3a3aa:	ldr	r3, [sp, #236]	; 0xec
   3a3ac:	eor.w	r1, r1, r2
   3a3b0:	adc.w	r5, r3, r5
   3a3b4:	eors	r7, r5
   3a3b6:	lsls	r3, r7, #1
   3a3b8:	orr.w	r3, r3, r1, lsr #31
   3a3bc:	lsls	r1, r1, #1
   3a3be:	str	r3, [sp, #264]	; 0x108
   3a3c0:	orr.w	r3, r1, r7, lsr #31
   3a3c4:	str	r3, [sp, #252]	; 0xfc
   3a3c6:	ldr	r3, [sp, #124]	; 0x7c
   3a3c8:	ldr	r1, [sp, #144]	; 0x90
   3a3ca:	ldr	r0, [sp, #148]	; 0x94
   3a3cc:	adds	r1, r3, r1
   3a3ce:	ldr	r3, [sp, #128]	; 0x80
   3a3d0:	ldr	r4, [sp, #212]	; 0xd4
   3a3d2:	adc.w	sl, r3, r0
   3a3d6:	ldr	r3, [sp, #212]	; 0xd4
   3a3d8:	ldr	r0, [sp, #188]	; 0xbc
   3a3da:	adds	r1, r1, r3
   3a3dc:	ldr	r3, [sp, #220]	; 0xdc
   3a3de:	adc.w	sl, sl, r3
   3a3e2:	ldr	r3, [sp, #224]	; 0xe0
   3a3e4:	eor.w	lr, sl, r3
   3a3e8:	ldr	r3, [sp, #216]	; 0xd8
   3a3ea:	eor.w	r6, r1, r3
   3a3ee:	ldr	r3, [sp, #184]	; 0xb8
   3a3f0:	adds.w	r3, r3, lr
   3a3f4:	eor.w	r8, r3, r4
   3a3f8:	ldr	r4, [sp, #220]	; 0xdc
   3a3fa:	adcs	r0, r6
   3a3fc:	eor.w	r7, r0, r4
   3a400:	mov.w	fp, r8, lsr #24
   3a404:	orr.w	r4, fp, r7, lsl #8
   3a408:	lsrs	r7, r7, #24
   3a40a:	orr.w	r9, r7, r8, lsl #8
   3a40e:	ldr	r7, [sp, #108]	; 0x6c
   3a410:	adds	r1, r7, r1
   3a412:	ldr	r7, [sp, #112]	; 0x70
   3a414:	adc.w	sl, r7, sl
   3a418:	adds	r1, r1, r4
   3a41a:	str	r1, [sp, #144]	; 0x90
   3a41c:	adc.w	r1, sl, r9
   3a420:	str	r1, [sp, #148]	; 0x94
   3a422:	ldr	r1, [sp, #144]	; 0x90
   3a424:	eor.w	lr, r1, lr
   3a428:	ldr	r1, [sp, #148]	; 0x94
   3a42a:	eors	r6, r1
   3a42c:	mov.w	r1, lr, lsr #16
   3a430:	orr.w	r8, r1, r6, lsl #16
   3a434:	lsrs	r6, r6, #16
   3a436:	adds.w	r3, r3, r8
   3a43a:	orr.w	sl, r6, lr, lsl #16
   3a43e:	adc.w	r0, r0, sl
   3a442:	eors	r4, r3
   3a444:	eor.w	r9, r0, r9
   3a448:	ldr	r6, [sp, #156]	; 0x9c
   3a44a:	mov.w	r1, r9, lsl #1
   3a44e:	orr.w	r1, r1, r4, lsr #31
   3a452:	lsls	r4, r4, #1
   3a454:	orr.w	fp, r4, r9, lsr #31
   3a458:	str	r1, [sp, #212]	; 0xd4
   3a45a:	ldr	r4, [sp, #152]	; 0x98
   3a45c:	ldr	r1, [sp, #84]	; 0x54
   3a45e:	adds	r1, r1, r4
   3a460:	ldr	r4, [sp, #88]	; 0x58
   3a462:	adc.w	r9, r4, r6
   3a466:	ldr	r4, [sp, #248]	; 0xf8
   3a468:	adds.w	r1, r1, ip
   3a46c:	adc.w	r9, r9, r4
   3a470:	eor.w	r7, r1, r8
   3a474:	eor.w	lr, r9, sl
   3a478:	adds.w	r2, r2, lr
   3a47c:	adc.w	r5, r7, r5
   3a480:	eor.w	ip, r2, ip
   3a484:	eor.w	r6, r5, r4
   3a488:	mov.w	sl, ip, lsr #24
   3a48c:	orr.w	r4, sl, r6, lsl #8
   3a490:	lsrs	r6, r6, #24
   3a492:	orr.w	r8, r6, ip, lsl #8
   3a496:	ldr	r6, [sp, #116]	; 0x74
   3a498:	adds	r1, r6, r1
   3a49a:	ldr	r6, [sp, #120]	; 0x78
   3a49c:	adc.w	r9, r6, r9
   3a4a0:	adds	r1, r1, r4
   3a4a2:	str	r1, [sp, #152]	; 0x98
   3a4a4:	adc.w	r1, r9, r8
   3a4a8:	str	r1, [sp, #156]	; 0x9c
   3a4aa:	ldr	r1, [sp, #152]	; 0x98
   3a4ac:	eor.w	lr, r1, lr
   3a4b0:	ldr	r1, [sp, #156]	; 0x9c
   3a4b2:	eors	r7, r1
   3a4b4:	mov.w	r1, lr, lsr #16
   3a4b8:	orr.w	r1, r1, r7, lsl #16
   3a4bc:	lsrs	r7, r7, #16
   3a4be:	str	r1, [sp, #216]	; 0xd8
   3a4c0:	orr.w	r1, r7, lr, lsl #16
   3a4c4:	str	r1, [sp, #220]	; 0xdc
   3a4c6:	ldr	r1, [sp, #216]	; 0xd8
   3a4c8:	adds	r2, r2, r1
   3a4ca:	str	r2, [sp, #176]	; 0xb0
   3a4cc:	ldr	r2, [sp, #220]	; 0xdc
   3a4ce:	ldr	r1, [sp, #168]	; 0xa8
   3a4d0:	adc.w	r2, r5, r2
   3a4d4:	str	r2, [sp, #180]	; 0xb4
   3a4d6:	ldr	r2, [sp, #176]	; 0xb0
   3a4d8:	eors	r4, r2
   3a4da:	ldr	r2, [sp, #180]	; 0xb4
   3a4dc:	eor.w	r8, r2, r8
   3a4e0:	mov.w	r2, r8, lsl #1
   3a4e4:	orr.w	r2, r2, r4, lsr #31
   3a4e8:	lsls	r4, r4, #1
   3a4ea:	str	r2, [sp, #248]	; 0xf8
   3a4ec:	orr.w	r2, r4, r8, lsr #31
   3a4f0:	str	r2, [sp, #224]	; 0xe0
   3a4f2:	ldr	r2, [sp, #28]
   3a4f4:	ldr	r4, [sp, #172]	; 0xac
   3a4f6:	adds	r2, r2, r1
   3a4f8:	ldr	r1, [sp, #32]
   3a4fa:	adc.w	r7, r1, r4
   3a4fe:	ldr	r1, [sp, #252]	; 0xfc
   3a500:	adds	r2, r2, r1
   3a502:	ldr	r1, [sp, #264]	; 0x108
   3a504:	adc.w	r7, r1, r7
   3a508:	ldr	r1, [sp, #240]	; 0xf0
   3a50a:	eor.w	r4, r7, r1
   3a50e:	ldr	r1, [sp, #228]	; 0xe4
   3a510:	adds	r3, r3, r4
   3a512:	eor.w	r9, r2, r1
   3a516:	ldr	r1, [sp, #252]	; 0xfc
   3a518:	adc.w	r0, r0, r9
   3a51c:	eor.w	ip, r3, r1
   3a520:	ldr	r1, [sp, #264]	; 0x108
   3a522:	eor.w	r5, r0, r1
   3a526:	mov.w	lr, ip, lsr #24
   3a52a:	orr.w	r1, lr, r5, lsl #8
   3a52e:	lsrs	r5, r5, #24
   3a530:	orr.w	r6, r5, ip, lsl #8
   3a534:	ldr	r5, [sp, #52]	; 0x34
   3a536:	adds	r2, r5, r2
   3a538:	ldr	r5, [sp, #56]	; 0x38
   3a53a:	adc.w	r7, r5, r7
   3a53e:	adds	r2, r2, r1
   3a540:	str	r2, [sp, #168]	; 0xa8
   3a542:	adc.w	r2, r7, r6
   3a546:	str	r2, [sp, #172]	; 0xac
   3a548:	ldr	r2, [sp, #168]	; 0xa8
   3a54a:	eors	r4, r2
   3a54c:	ldr	r2, [sp, #172]	; 0xac
   3a54e:	eor.w	r2, r2, r9
   3a552:	lsrs	r5, r4, #16
   3a554:	orr.w	r5, r5, r2, lsl #16
   3a558:	mov.w	r9, r2, lsr #16
   3a55c:	orr.w	r9, r9, r4, lsl #16
   3a560:	adds	r3, r3, r5
   3a562:	str	r3, [sp, #184]	; 0xb8
   3a564:	adc.w	r3, r0, r9
   3a568:	str	r3, [sp, #188]	; 0xbc
   3a56a:	ldr	r3, [sp, #184]	; 0xb8
   3a56c:	ldr	r2, [sp, #160]	; 0xa0
   3a56e:	eors	r1, r3
   3a570:	ldr	r3, [sp, #188]	; 0xbc
   3a572:	str	r5, [sp, #228]	; 0xe4
   3a574:	eors	r6, r3
   3a576:	lsls	r3, r6, #1
   3a578:	orr.w	r3, r3, r1, lsr #31
   3a57c:	lsls	r1, r1, #1
   3a57e:	str	r3, [sp, #252]	; 0xfc
   3a580:	orr.w	r3, r1, r6, lsr #31
   3a584:	str	r3, [sp, #240]	; 0xf0
   3a586:	ldr	r3, [sp, #60]	; 0x3c
   3a588:	adds	r3, r3, r2
   3a58a:	ldr	r2, [sp, #64]	; 0x40
   3a58c:	ldr	r1, [sp, #164]	; 0xa4
   3a58e:	ldr	r0, [sp, #196]	; 0xc4
   3a590:	adc.w	ip, r2, r1
   3a594:	ldr	r2, [sp, #212]	; 0xd4
   3a596:	adds.w	r3, r3, fp
   3a59a:	adc.w	ip, ip, r2
   3a59e:	ldr	r2, [sp, #244]	; 0xf4
   3a5a0:	eor.w	r7, ip, r2
   3a5a4:	ldr	r2, [sp, #208]	; 0xd0
   3a5a6:	eor.w	r1, r3, r2
   3a5aa:	ldr	r2, [sp, #192]	; 0xc0
   3a5ac:	adds	r2, r2, r7
   3a5ae:	adc.w	r5, r0, r1
   3a5b2:	ldr	r0, [sp, #212]	; 0xd4
   3a5b4:	eor.w	fp, r2, fp
   3a5b8:	eors	r0, r5
   3a5ba:	mov.w	r4, fp, lsr #24
   3a5be:	orr.w	r8, r4, r0, lsl #8
   3a5c2:	lsrs	r0, r0, #24
   3a5c4:	orr.w	r6, r0, fp, lsl #8
   3a5c8:	ldr	r0, [sp, #12]
   3a5ca:	ldr	r4, [sp, #256]	; 0x100
   3a5cc:	adds	r3, r0, r3
   3a5ce:	ldr	r0, [sp, #16]
   3a5d0:	adc.w	ip, r0, ip
   3a5d4:	adds.w	r3, r3, r8
   3a5d8:	str	r3, [sp, #160]	; 0xa0
   3a5da:	adc.w	r3, ip, r6
   3a5de:	str	r3, [sp, #164]	; 0xa4
   3a5e0:	ldr	r3, [sp, #160]	; 0xa0
   3a5e2:	ldr	r0, [sp, #148]	; 0x94
   3a5e4:	eors	r7, r3
   3a5e6:	ldr	r3, [sp, #164]	; 0xa4
   3a5e8:	eors	r1, r3
   3a5ea:	lsrs	r3, r7, #16
   3a5ec:	orr.w	r3, r3, r1, lsl #16
   3a5f0:	lsrs	r1, r1, #16
   3a5f2:	str	r3, [sp, #208]	; 0xd0
   3a5f4:	orr.w	r3, r1, r7, lsl #16
   3a5f8:	str	r3, [sp, #212]	; 0xd4
   3a5fa:	ldr	r3, [sp, #208]	; 0xd0
   3a5fc:	ldr	r1, [sp, #144]	; 0x90
   3a5fe:	adds	r2, r2, r3
   3a600:	ldr	r3, [sp, #212]	; 0xd4
   3a602:	eor.w	r8, r2, r8
   3a606:	adc.w	r5, r3, r5
   3a60a:	eors	r6, r5
   3a60c:	lsls	r3, r6, #1
   3a60e:	orr.w	r3, r3, r8, lsr #31
   3a612:	mov.w	r8, r8, lsl #1
   3a616:	str	r3, [sp, #264]	; 0x108
   3a618:	orr.w	r3, r8, r6, lsr #31
   3a61c:	str	r3, [sp, #244]	; 0xf4
   3a61e:	ldr	r3, [sp, #76]	; 0x4c
   3a620:	adds	r1, r3, r1
   3a622:	ldr	r3, [sp, #80]	; 0x50
   3a624:	adc.w	sl, r3, r0
   3a628:	ldr	r3, [sp, #256]	; 0x100
   3a62a:	ldr	r0, [sp, #204]	; 0xcc
   3a62c:	adds	r1, r1, r3
   3a62e:	ldr	r3, [sp, #260]	; 0x104
   3a630:	adc.w	sl, sl, r3
   3a634:	ldr	r3, [sp, #236]	; 0xec
   3a636:	eor.w	lr, sl, r3
   3a63a:	ldr	r3, [sp, #232]	; 0xe8
   3a63c:	eor.w	r7, r1, r3
   3a640:	ldr	r3, [sp, #200]	; 0xc8
   3a642:	adds.w	r3, r3, lr
   3a646:	eor.w	r6, r3, r4
   3a64a:	ldr	r4, [sp, #260]	; 0x104
   3a64c:	adcs	r0, r7
   3a64e:	eor.w	ip, r0, r4
   3a652:	mov.w	fp, r6, lsr #24
   3a656:	orr.w	r4, fp, ip, lsl #8
   3a65a:	mov.w	ip, ip, lsr #24
   3a65e:	orr.w	r8, ip, r6, lsl #8
   3a662:	ldr	r6, [sp, #36]	; 0x24
   3a664:	adds	r1, r6, r1
   3a666:	ldr	r6, [sp, #40]	; 0x28
   3a668:	adc.w	sl, r6, sl
   3a66c:	adds	r1, r1, r4
   3a66e:	str	r1, [sp, #144]	; 0x90
   3a670:	adc.w	r1, sl, r8
   3a674:	str	r1, [sp, #148]	; 0x94
   3a676:	ldr	r1, [sp, #144]	; 0x90
   3a678:	eor.w	lr, r1, lr
   3a67c:	ldr	r1, [sp, #148]	; 0x94
   3a67e:	eors	r7, r1
   3a680:	mov.w	r1, lr, lsr #16
   3a684:	orr.w	r1, r1, r7, lsl #16
   3a688:	lsrs	r7, r7, #16
   3a68a:	str	r1, [sp, #232]	; 0xe8
   3a68c:	orr.w	r1, r7, lr, lsl #16
   3a690:	str	r1, [sp, #236]	; 0xec
   3a692:	ldr	r1, [sp, #232]	; 0xe8
   3a694:	ldr	r7, [sp, #156]	; 0x9c
   3a696:	adds	r3, r3, r1
   3a698:	ldr	r1, [sp, #236]	; 0xec
   3a69a:	eor.w	r4, r4, r3
   3a69e:	adc.w	r0, r1, r0
   3a6a2:	eor.w	r8, r0, r8
   3a6a6:	mov.w	r1, r8, lsl #1
   3a6aa:	orr.w	r6, r1, r4, lsr #31
   3a6ae:	lsls	r4, r4, #1
   3a6b0:	orr.w	fp, r4, r8, lsr #31
   3a6b4:	ldr	r1, [sp, #60]	; 0x3c
   3a6b6:	ldr	r4, [sp, #152]	; 0x98
   3a6b8:	adds	r1, r1, r4
   3a6ba:	ldr	r4, [sp, #64]	; 0x40
   3a6bc:	adc.w	sl, r4, r7
   3a6c0:	adds.w	r1, r1, fp
   3a6c4:	ldr	r4, [sp, #228]	; 0xe4
   3a6c6:	adc.w	sl, sl, r6
   3a6ca:	eor.w	lr, sl, r9
   3a6ce:	adds.w	r2, r2, lr
   3a6d2:	eor.w	r7, r1, r4
   3a6d6:	adc.w	r5, r7, r5
   3a6da:	eor.w	fp, r2, fp
   3a6de:	eor.w	ip, r5, r6
   3a6e2:	mov.w	r4, fp, lsr #24
   3a6e6:	orr.w	r6, r4, ip, lsl #8
   3a6ea:	ldr	r4, [sp, #76]	; 0x4c
   3a6ec:	mov.w	ip, ip, lsr #24
   3a6f0:	adds	r1, r4, r1
   3a6f2:	ldr	r4, [sp, #80]	; 0x50
   3a6f4:	orr.w	r8, ip, fp, lsl #8
   3a6f8:	adc.w	sl, r4, sl
   3a6fc:	adds	r1, r1, r6
   3a6fe:	str	r1, [sp, #152]	; 0x98
   3a700:	adc.w	r1, sl, r8
   3a704:	str	r1, [sp, #156]	; 0x9c
   3a706:	ldr	r1, [sp, #152]	; 0x98
   3a708:	eor.w	lr, r1, lr
   3a70c:	ldr	r1, [sp, #156]	; 0x9c
   3a70e:	eors	r7, r1
   3a710:	mov.w	r1, lr, lsr #16
   3a714:	orr.w	r1, r1, r7, lsl #16
   3a718:	lsrs	r7, r7, #16
   3a71a:	str	r1, [sp, #228]	; 0xe4
   3a71c:	orr.w	r1, r7, lr, lsl #16
   3a720:	str	r1, [sp, #256]	; 0x100
   3a722:	ldr	r1, [sp, #228]	; 0xe4
   3a724:	adds	r2, r2, r1
   3a726:	str	r2, [sp, #192]	; 0xc0
   3a728:	ldr	r2, [sp, #256]	; 0x100
   3a72a:	ldr	r1, [sp, #168]	; 0xa8
   3a72c:	adc.w	r2, r5, r2
   3a730:	str	r2, [sp, #196]	; 0xc4
   3a732:	ldr	r2, [sp, #192]	; 0xc0
   3a734:	eors	r6, r2
   3a736:	ldr	r2, [sp, #196]	; 0xc4
   3a738:	eor.w	r8, r2, r8
   3a73c:	mov.w	r2, r8, lsl #1
   3a740:	orr.w	r2, r2, r6, lsr #31
   3a744:	lsls	r6, r6, #1
   3a746:	str	r2, [sp, #268]	; 0x10c
   3a748:	orr.w	r2, r6, r8, lsr #31
   3a74c:	str	r2, [sp, #260]	; 0x104
   3a74e:	ldr	r2, [sp, #28]
   3a750:	adds	r2, r2, r1
   3a752:	ldr	r1, [sp, #32]
   3a754:	ldr	r4, [sp, #172]	; 0xac
   3a756:	ldr	r5, [sp, #248]	; 0xf8
   3a758:	adc.w	r7, r1, r4
   3a75c:	ldr	r1, [sp, #224]	; 0xe0
   3a75e:	ldr	r4, [sp, #224]	; 0xe0
   3a760:	adds	r2, r2, r1
   3a762:	ldr	r1, [sp, #248]	; 0xf8
   3a764:	adc.w	r7, r1, r7
   3a768:	ldr	r1, [sp, #212]	; 0xd4
   3a76a:	eor.w	r6, r7, r1
   3a76e:	ldr	r1, [sp, #208]	; 0xd0
   3a770:	adds	r3, r3, r6
   3a772:	eor.w	r1, r2, r1
   3a776:	eor.w	r4, r3, r4
   3a77a:	adc.w	r0, r1, r0
   3a77e:	eors	r5, r0
   3a780:	mov.w	r8, r4, lsr #24
   3a784:	orr.w	ip, r8, r5, lsl #8
   3a788:	lsrs	r5, r5, #24
   3a78a:	orr.w	lr, r5, r4, lsl #8
   3a78e:	ldr	r4, [sp, #12]
   3a790:	adds	r2, r4, r2
   3a792:	ldr	r4, [sp, #16]
   3a794:	adc.w	r7, r4, r7
   3a798:	adds.w	r2, r2, ip
   3a79c:	str	r2, [sp, #168]	; 0xa8
   3a79e:	adc.w	r2, r7, lr
   3a7a2:	str	r2, [sp, #172]	; 0xac
   3a7a4:	ldr	r2, [sp, #168]	; 0xa8
   3a7a6:	eors	r6, r2
   3a7a8:	ldr	r2, [sp, #172]	; 0xac
   3a7aa:	eors	r1, r2
   3a7ac:	lsrs	r2, r6, #16
   3a7ae:	orr.w	r2, r2, r1, lsl #16
   3a7b2:	lsrs	r1, r1, #16
   3a7b4:	str	r2, [sp, #208]	; 0xd0
   3a7b6:	orr.w	r2, r1, r6, lsl #16
   3a7ba:	str	r2, [sp, #212]	; 0xd4
   3a7bc:	ldr	r2, [sp, #208]	; 0xd0
   3a7be:	ldr	r1, [sp, #164]	; 0xa4
   3a7c0:	adds	r3, r3, r2
   3a7c2:	str	r3, [sp, #200]	; 0xc8
   3a7c4:	ldr	r3, [sp, #212]	; 0xd4
   3a7c6:	adc.w	r3, r0, r3
   3a7ca:	str	r3, [sp, #204]	; 0xcc
   3a7cc:	ldr	r2, [sp, #204]	; 0xcc
   3a7ce:	ldr	r3, [sp, #200]	; 0xc8
   3a7d0:	eor.w	lr, r2, lr
   3a7d4:	eor.w	r3, r3, ip
   3a7d8:	mov.w	r2, lr, lsl #1
   3a7dc:	orr.w	r2, r2, r3, lsr #31
   3a7e0:	mov.w	ip, r3, lsl #1
   3a7e4:	str	r2, [sp, #224]	; 0xe0
   3a7e6:	orr.w	ip, ip, lr, lsr #31
   3a7ea:	ldr	r2, [sp, #160]	; 0xa0
   3a7ec:	ldr	r3, [sp, #108]	; 0x6c
   3a7ee:	adds	r3, r3, r2
   3a7f0:	ldr	r2, [sp, #112]	; 0x70
   3a7f2:	adc.w	lr, r2, r1
   3a7f6:	ldr	r2, [sp, #240]	; 0xf0
   3a7f8:	adds	r3, r3, r2
   3a7fa:	ldr	r2, [sp, #252]	; 0xfc
   3a7fc:	adc.w	lr, lr, r2
   3a800:	ldr	r2, [sp, #236]	; 0xec
   3a802:	eor.w	r6, lr, r2
   3a806:	ldr	r2, [sp, #232]	; 0xe8
   3a808:	eor.w	r0, r3, r2
   3a80c:	ldr	r2, [sp, #176]	; 0xb0
   3a80e:	ldr	r1, [sp, #180]	; 0xb4
   3a810:	adds	r2, r2, r6
   3a812:	adc.w	r5, r1, r0
   3a816:	ldr	r1, [sp, #240]	; 0xf0
   3a818:	eor.w	r8, r2, r1
   3a81c:	ldr	r1, [sp, #252]	; 0xfc
   3a81e:	eor.w	r4, r5, r1
   3a822:	mov.w	r9, r8, lsr #24
   3a826:	orr.w	r1, r9, r4, lsl #8
   3a82a:	lsrs	r4, r4, #24
   3a82c:	orr.w	r7, r4, r8, lsl #8
   3a830:	ldr	r4, [sp, #100]	; 0x64
   3a832:	adds	r3, r4, r3
   3a834:	ldr	r4, [sp, #104]	; 0x68
   3a836:	adc.w	lr, r4, lr
   3a83a:	adds	r3, r3, r1
   3a83c:	str	r3, [sp, #160]	; 0xa0
   3a83e:	adc.w	r3, lr, r7
   3a842:	str	r3, [sp, #164]	; 0xa4
   3a844:	ldr	r3, [sp, #160]	; 0xa0
   3a846:	ldr	r4, [sp, #244]	; 0xf4
   3a848:	eors	r6, r3
   3a84a:	ldr	r3, [sp, #164]	; 0xa4
   3a84c:	eors	r0, r3
   3a84e:	lsrs	r3, r6, #16
   3a850:	orr.w	r3, r3, r0, lsl #16
   3a854:	lsrs	r0, r0, #16
   3a856:	str	r3, [sp, #232]	; 0xe8
   3a858:	orr.w	r3, r0, r6, lsl #16
   3a85c:	str	r3, [sp, #236]	; 0xec
   3a85e:	ldr	r3, [sp, #232]	; 0xe8
   3a860:	ldr	r0, [sp, #148]	; 0x94
   3a862:	adds	r2, r2, r3
   3a864:	ldr	r3, [sp, #236]	; 0xec
   3a866:	eor.w	r1, r1, r2
   3a86a:	adc.w	r5, r3, r5
   3a86e:	eors	r7, r5
   3a870:	lsls	r3, r7, #1
   3a872:	orr.w	r3, r3, r1, lsr #31
   3a876:	lsls	r1, r1, #1
   3a878:	str	r3, [sp, #248]	; 0xf8
   3a87a:	orr.w	r3, r1, r7, lsr #31
   3a87e:	ldr	r1, [sp, #144]	; 0x90
   3a880:	str	r3, [sp, #240]	; 0xf0
   3a882:	ldr	r3, [sp, #92]	; 0x5c
   3a884:	adds	r1, r3, r1
   3a886:	ldr	r3, [sp, #96]	; 0x60
   3a888:	adc.w	sl, r3, r0
   3a88c:	ldr	r3, [sp, #244]	; 0xf4
   3a88e:	ldr	r0, [sp, #188]	; 0xbc
   3a890:	adds	r1, r1, r3
   3a892:	ldr	r3, [sp, #264]	; 0x108
   3a894:	adc.w	sl, sl, r3
   3a898:	ldr	r3, [sp, #220]	; 0xdc
   3a89a:	eor.w	lr, sl, r3
   3a89e:	ldr	r3, [sp, #216]	; 0xd8
   3a8a0:	eor.w	r6, r1, r3
   3a8a4:	ldr	r3, [sp, #184]	; 0xb8
   3a8a6:	adds.w	r3, r3, lr
   3a8aa:	eor.w	r8, r3, r4
   3a8ae:	ldr	r4, [sp, #264]	; 0x108
   3a8b0:	adcs	r0, r6
   3a8b2:	eor.w	r7, r0, r4
   3a8b6:	mov.w	fp, r8, lsr #24
   3a8ba:	orr.w	r4, fp, r7, lsl #8
   3a8be:	lsrs	r7, r7, #24
   3a8c0:	orr.w	r9, r7, r8, lsl #8
   3a8c4:	ldr	r7, [sp, #116]	; 0x74
   3a8c6:	adds	r1, r7, r1
   3a8c8:	ldr	r7, [sp, #120]	; 0x78
   3a8ca:	adc.w	sl, r7, sl
   3a8ce:	adds	r1, r1, r4
   3a8d0:	str	r1, [sp, #144]	; 0x90
   3a8d2:	adc.w	r1, sl, r9
   3a8d6:	str	r1, [sp, #148]	; 0x94
   3a8d8:	ldr	r1, [sp, #144]	; 0x90
   3a8da:	eor.w	lr, r1, lr
   3a8de:	ldr	r1, [sp, #148]	; 0x94
   3a8e0:	eors	r6, r1
   3a8e2:	mov.w	r1, lr, lsr #16
   3a8e6:	orr.w	r8, r1, r6, lsl #16
   3a8ea:	lsrs	r6, r6, #16
   3a8ec:	adds.w	r3, r3, r8
   3a8f0:	orr.w	sl, r6, lr, lsl #16
   3a8f4:	adc.w	r0, r0, sl
   3a8f8:	eors	r4, r3
   3a8fa:	eor.w	r9, r0, r9
   3a8fe:	ldr	r6, [sp, #156]	; 0x9c
   3a900:	mov.w	r1, r9, lsl #1
   3a904:	orr.w	r1, r1, r4, lsr #31
   3a908:	lsls	r4, r4, #1
   3a90a:	orr.w	fp, r4, r9, lsr #31
   3a90e:	str	r1, [sp, #216]	; 0xd8
   3a910:	ldr	r4, [sp, #152]	; 0x98
   3a912:	ldr	r1, [sp, #20]
   3a914:	adds	r1, r1, r4
   3a916:	ldr	r4, [sp, #24]
   3a918:	adc.w	r9, r4, r6
   3a91c:	ldr	r4, [sp, #224]	; 0xe0
   3a91e:	adds.w	r1, r1, ip
   3a922:	adc.w	r9, r9, r4
   3a926:	eor.w	r7, r1, r8
   3a92a:	eor.w	lr, r9, sl
   3a92e:	adds.w	r2, r2, lr
   3a932:	adc.w	r5, r7, r5
   3a936:	eor.w	ip, r2, ip
   3a93a:	eor.w	r6, r5, r4
   3a93e:	mov.w	sl, ip, lsr #24
   3a942:	orr.w	r4, sl, r6, lsl #8
   3a946:	lsrs	r6, r6, #24
   3a948:	orr.w	r8, r6, ip, lsl #8
   3a94c:	ldr	r6, [sp, #52]	; 0x34
   3a94e:	adds	r1, r6, r1
   3a950:	ldr	r6, [sp, #56]	; 0x38
   3a952:	adc.w	r9, r6, r9
   3a956:	adds	r1, r1, r4
   3a958:	str	r1, [sp, #152]	; 0x98
   3a95a:	adc.w	r1, r9, r8
   3a95e:	str	r1, [sp, #156]	; 0x9c
   3a960:	ldr	r1, [sp, #152]	; 0x98
   3a962:	eor.w	lr, r1, lr
   3a966:	ldr	r1, [sp, #156]	; 0x9c
   3a968:	eors	r7, r1
   3a96a:	mov.w	r1, lr, lsr #16
   3a96e:	orr.w	r1, r1, r7, lsl #16
   3a972:	lsrs	r7, r7, #16
   3a974:	str	r1, [sp, #220]	; 0xdc
   3a976:	orr.w	r1, r7, lr, lsl #16
   3a97a:	str	r1, [sp, #224]	; 0xe0
   3a97c:	ldr	r1, [sp, #220]	; 0xdc
   3a97e:	adds	r2, r2, r1
   3a980:	str	r2, [sp, #176]	; 0xb0
   3a982:	ldr	r2, [sp, #224]	; 0xe0
   3a984:	ldr	r1, [sp, #168]	; 0xa8
   3a986:	adc.w	r2, r5, r2
   3a98a:	str	r2, [sp, #180]	; 0xb4
   3a98c:	ldr	r2, [sp, #176]	; 0xb0
   3a98e:	eors	r4, r2
   3a990:	ldr	r2, [sp, #180]	; 0xb4
   3a992:	eor.w	r8, r2, r8
   3a996:	mov.w	r2, r8, lsl #1
   3a99a:	orr.w	r2, r2, r4, lsr #31
   3a99e:	lsls	r4, r4, #1
   3a9a0:	str	r2, [sp, #252]	; 0xfc
   3a9a2:	orr.w	r2, r4, r8, lsr #31
   3a9a6:	str	r2, [sp, #244]	; 0xf4
   3a9a8:	ldr	r2, [sp, #44]	; 0x2c
   3a9aa:	ldr	r4, [sp, #172]	; 0xac
   3a9ac:	adds	r2, r2, r1
   3a9ae:	ldr	r1, [sp, #48]	; 0x30
   3a9b0:	adc.w	r7, r1, r4
   3a9b4:	ldr	r1, [sp, #240]	; 0xf0
   3a9b6:	adds	r2, r2, r1
   3a9b8:	ldr	r1, [sp, #248]	; 0xf8
   3a9ba:	adc.w	r7, r1, r7
   3a9be:	ldr	r1, [sp, #256]	; 0x100
   3a9c0:	eor.w	r4, r7, r1
   3a9c4:	ldr	r1, [sp, #228]	; 0xe4
   3a9c6:	adds	r3, r3, r4
   3a9c8:	eor.w	r9, r2, r1
   3a9cc:	ldr	r1, [sp, #240]	; 0xf0
   3a9ce:	adc.w	r0, r0, r9
   3a9d2:	eor.w	ip, r3, r1
   3a9d6:	ldr	r1, [sp, #248]	; 0xf8
   3a9d8:	eor.w	r5, r0, r1
   3a9dc:	mov.w	lr, ip, lsr #24
   3a9e0:	orr.w	r1, lr, r5, lsl #8
   3a9e4:	lsrs	r5, r5, #24
   3a9e6:	orr.w	r6, r5, ip, lsl #8
   3a9ea:	ldr	r5, [sp, #84]	; 0x54
   3a9ec:	adds	r2, r5, r2
   3a9ee:	ldr	r5, [sp, #88]	; 0x58
   3a9f0:	adc.w	r7, r5, r7
   3a9f4:	adds	r2, r2, r1
   3a9f6:	str	r2, [sp, #168]	; 0xa8
   3a9f8:	adc.w	r2, r7, r6
   3a9fc:	str	r2, [sp, #172]	; 0xac
   3a9fe:	ldr	r2, [sp, #168]	; 0xa8
   3aa00:	eors	r4, r2
   3aa02:	ldr	r2, [sp, #172]	; 0xac
   3aa04:	eor.w	r2, r2, r9
   3aa08:	lsrs	r5, r4, #16
   3aa0a:	orr.w	r5, r5, r2, lsl #16
   3aa0e:	mov.w	r9, r2, lsr #16
   3aa12:	orr.w	r9, r9, r4, lsl #16
   3aa16:	adds	r3, r3, r5
   3aa18:	str	r3, [sp, #184]	; 0xb8
   3aa1a:	adc.w	r3, r0, r9
   3aa1e:	str	r3, [sp, #188]	; 0xbc
   3aa20:	ldr	r3, [sp, #184]	; 0xb8
   3aa22:	ldr	r2, [sp, #160]	; 0xa0
   3aa24:	eors	r1, r3
   3aa26:	ldr	r3, [sp, #188]	; 0xbc
   3aa28:	ldr	r0, [sp, #196]	; 0xc4
   3aa2a:	eors	r6, r3
   3aa2c:	str	r5, [sp, #228]	; 0xe4
   3aa2e:	lsls	r3, r6, #1
   3aa30:	orr.w	r3, r3, r1, lsr #31
   3aa34:	lsls	r1, r1, #1
   3aa36:	str	r3, [sp, #248]	; 0xf8
   3aa38:	orr.w	r3, r1, r6, lsr #31
   3aa3c:	str	r3, [sp, #240]	; 0xf0
   3aa3e:	ldr	r3, [sp, #36]	; 0x24
   3aa40:	ldr	r1, [sp, #164]	; 0xa4
   3aa42:	adds	r3, r3, r2
   3aa44:	ldr	r2, [sp, #40]	; 0x28
   3aa46:	adc.w	ip, r2, r1
   3aa4a:	ldr	r2, [sp, #216]	; 0xd8
   3aa4c:	adds.w	r3, r3, fp
   3aa50:	adc.w	ip, ip, r2
   3aa54:	ldr	r2, [sp, #212]	; 0xd4
   3aa56:	eor.w	r7, ip, r2
   3aa5a:	ldr	r2, [sp, #208]	; 0xd0
   3aa5c:	eor.w	r1, r3, r2
   3aa60:	ldr	r2, [sp, #192]	; 0xc0
   3aa62:	adds	r2, r2, r7
   3aa64:	adc.w	r5, r0, r1
   3aa68:	ldr	r0, [sp, #216]	; 0xd8
   3aa6a:	eor.w	fp, r2, fp
   3aa6e:	eors	r0, r5
   3aa70:	mov.w	r4, fp, lsr #24
   3aa74:	orr.w	r8, r4, r0, lsl #8
   3aa78:	lsrs	r0, r0, #24
   3aa7a:	orr.w	r6, r0, fp, lsl #8
   3aa7e:	ldr	r0, [sp, #4]
   3aa80:	adds	r3, r0, r3
   3aa82:	ldr	r0, [sp, #8]
   3aa84:	adc.w	ip, r0, ip
   3aa88:	adds.w	r3, r3, r8
   3aa8c:	str	r3, [sp, #160]	; 0xa0
   3aa8e:	adc.w	r3, ip, r6
   3aa92:	str	r3, [sp, #164]	; 0xa4
   3aa94:	ldr	r3, [sp, #160]	; 0xa0
   3aa96:	eors	r7, r3
   3aa98:	ldr	r3, [sp, #164]	; 0xa4
   3aa9a:	eors	r1, r3
   3aa9c:	lsrs	r3, r7, #16
   3aa9e:	orr.w	r3, r3, r1, lsl #16
   3aaa2:	lsrs	r1, r1, #16
   3aaa4:	str	r3, [sp, #208]	; 0xd0
   3aaa6:	orr.w	r3, r1, r7, lsl #16
   3aaaa:	str	r3, [sp, #212]	; 0xd4
   3aaac:	ldr	r3, [sp, #208]	; 0xd0
   3aaae:	ldr	r1, [sp, #144]	; 0x90
   3aab0:	adds	r2, r2, r3
   3aab2:	ldr	r3, [sp, #212]	; 0xd4
   3aab4:	eor.w	r8, r2, r8
   3aab8:	ldr	r0, [sp, #148]	; 0x94
   3aaba:	adc.w	r5, r3, r5
   3aabe:	ldr	r4, [sp, #260]	; 0x104
   3aac0:	eors	r6, r5
   3aac2:	lsls	r3, r6, #1
   3aac4:	orr.w	r3, r3, r8, lsr #31
   3aac8:	mov.w	r8, r8, lsl #1
   3aacc:	str	r3, [sp, #256]	; 0x100
   3aace:	orr.w	r3, r8, r6, lsr #31
   3aad2:	str	r3, [sp, #216]	; 0xd8
   3aad4:	ldr	r3, [sp, #124]	; 0x7c
   3aad6:	adds	r1, r3, r1
   3aad8:	ldr	r3, [sp, #128]	; 0x80
   3aada:	adc.w	sl, r3, r0
   3aade:	ldr	r3, [sp, #260]	; 0x104
   3aae0:	ldr	r0, [sp, #204]	; 0xcc
   3aae2:	adds	r1, r1, r3
   3aae4:	ldr	r3, [sp, #268]	; 0x10c
   3aae6:	adc.w	sl, sl, r3
   3aaea:	ldr	r3, [sp, #236]	; 0xec
   3aaec:	eor.w	lr, sl, r3
   3aaf0:	ldr	r3, [sp, #232]	; 0xe8
   3aaf2:	eor.w	r7, r1, r3
   3aaf6:	ldr	r3, [sp, #200]	; 0xc8
   3aaf8:	adds.w	r3, r3, lr
   3aafc:	eor.w	r6, r3, r4
   3ab00:	ldr	r4, [sp, #268]	; 0x10c
   3ab02:	adcs	r0, r7
   3ab04:	eor.w	ip, r0, r4
   3ab08:	mov.w	fp, r6, lsr #24
   3ab0c:	orr.w	r4, fp, ip, lsl #8
   3ab10:	mov.w	ip, ip, lsr #24
   3ab14:	orr.w	r8, ip, r6, lsl #8
   3ab18:	ldr	r6, [sp, #68]	; 0x44
   3ab1a:	adds	r1, r6, r1
   3ab1c:	ldr	r6, [sp, #72]	; 0x48
   3ab1e:	adc.w	sl, r6, sl
   3ab22:	adds	r1, r1, r4
   3ab24:	str	r1, [sp, #144]	; 0x90
   3ab26:	adc.w	r1, sl, r8
   3ab2a:	str	r1, [sp, #148]	; 0x94
   3ab2c:	ldr	r1, [sp, #144]	; 0x90
   3ab2e:	eor.w	lr, r1, lr
   3ab32:	ldr	r1, [sp, #148]	; 0x94
   3ab34:	eors	r7, r1
   3ab36:	mov.w	r1, lr, lsr #16
   3ab3a:	orr.w	r1, r1, r7, lsl #16
   3ab3e:	lsrs	r7, r7, #16
   3ab40:	str	r1, [sp, #232]	; 0xe8
   3ab42:	orr.w	r1, r7, lr, lsl #16
   3ab46:	str	r1, [sp, #236]	; 0xec
   3ab48:	ldr	r1, [sp, #232]	; 0xe8
   3ab4a:	ldr	r7, [sp, #156]	; 0x9c
   3ab4c:	adds	r3, r3, r1
   3ab4e:	ldr	r1, [sp, #236]	; 0xec
   3ab50:	eor.w	r4, r4, r3
   3ab54:	adc.w	r0, r1, r0
   3ab58:	eor.w	r8, r0, r8
   3ab5c:	mov.w	r1, r8, lsl #1
   3ab60:	orr.w	r6, r1, r4, lsr #31
   3ab64:	lsls	r4, r4, #1
   3ab66:	orr.w	fp, r4, r8, lsr #31
   3ab6a:	ldr	r1, [sp, #76]	; 0x4c
   3ab6c:	ldr	r4, [sp, #152]	; 0x98
   3ab6e:	adds	r1, r1, r4
   3ab70:	ldr	r4, [sp, #80]	; 0x50
   3ab72:	adc.w	sl, r4, r7
   3ab76:	adds.w	r1, r1, fp
   3ab7a:	adc.w	sl, sl, r6
   3ab7e:	ldr	r4, [sp, #228]	; 0xe4
   3ab80:	eor.w	lr, sl, r9
   3ab84:	adds.w	r2, r2, lr
   3ab88:	eor.w	r7, r1, r4
   3ab8c:	adc.w	r5, r7, r5
   3ab90:	eor.w	fp, r2, fp
   3ab94:	eor.w	ip, r5, r6
   3ab98:	mov.w	r4, fp, lsr #24
   3ab9c:	orr.w	r6, r4, ip, lsl #8
   3aba0:	ldr	r4, [sp, #4]
   3aba2:	mov.w	ip, ip, lsr #24
   3aba6:	adds	r1, r4, r1
   3aba8:	ldr	r4, [sp, #8]
   3abaa:	orr.w	r8, ip, fp, lsl #8
   3abae:	adc.w	sl, r4, sl
   3abb2:	adds	r1, r1, r6
   3abb4:	str	r1, [sp, #152]	; 0x98
   3abb6:	adc.w	r1, sl, r8
   3abba:	str	r1, [sp, #156]	; 0x9c
   3abbc:	ldr	r1, [sp, #152]	; 0x98
   3abbe:	ldr	r4, [sp, #172]	; 0xac
   3abc0:	eor.w	lr, r1, lr
   3abc4:	ldr	r1, [sp, #156]	; 0x9c
   3abc6:	eors	r7, r1
   3abc8:	mov.w	r1, lr, lsr #16
   3abcc:	orr.w	r1, r1, r7, lsl #16
   3abd0:	lsrs	r7, r7, #16
   3abd2:	str	r1, [sp, #228]	; 0xe4
   3abd4:	orr.w	r1, r7, lr, lsl #16
   3abd8:	str	r1, [sp, #260]	; 0x104
   3abda:	ldr	r1, [sp, #228]	; 0xe4
   3abdc:	adds	r2, r2, r1
   3abde:	str	r2, [sp, #192]	; 0xc0
   3abe0:	ldr	r2, [sp, #260]	; 0x104
   3abe2:	ldr	r1, [sp, #168]	; 0xa8
   3abe4:	adc.w	r2, r5, r2
   3abe8:	str	r2, [sp, #196]	; 0xc4
   3abea:	ldr	r2, [sp, #192]	; 0xc0
   3abec:	ldr	r5, [sp, #252]	; 0xfc
   3abee:	eors	r6, r2
   3abf0:	ldr	r2, [sp, #196]	; 0xc4
   3abf2:	eor.w	r8, r2, r8
   3abf6:	mov.w	r2, r8, lsl #1
   3abfa:	orr.w	r2, r2, r6, lsr #31
   3abfe:	lsls	r6, r6, #1
   3ac00:	str	r2, [sp, #268]	; 0x10c
   3ac02:	orr.w	r2, r6, r8, lsr #31
   3ac06:	str	r2, [sp, #264]	; 0x108
   3ac08:	ldr	r2, [sp, #44]	; 0x2c
   3ac0a:	adds	r2, r2, r1
   3ac0c:	ldr	r1, [sp, #48]	; 0x30
   3ac0e:	adc.w	r7, r1, r4
   3ac12:	ldr	r1, [sp, #244]	; 0xf4
   3ac14:	ldr	r4, [sp, #244]	; 0xf4
   3ac16:	adds	r2, r2, r1
   3ac18:	ldr	r1, [sp, #252]	; 0xfc
   3ac1a:	adc.w	r7, r1, r7
   3ac1e:	ldr	r1, [sp, #212]	; 0xd4
   3ac20:	eor.w	r6, r7, r1
   3ac24:	ldr	r1, [sp, #208]	; 0xd0
   3ac26:	adds	r3, r3, r6
   3ac28:	eor.w	r1, r2, r1
   3ac2c:	eor.w	r4, r3, r4
   3ac30:	adc.w	r0, r1, r0
   3ac34:	eors	r5, r0
   3ac36:	mov.w	r8, r4, lsr #24
   3ac3a:	orr.w	ip, r8, r5, lsl #8
   3ac3e:	lsrs	r5, r5, #24
   3ac40:	orr.w	lr, r5, r4, lsl #8
   3ac44:	ldr	r4, [sp, #60]	; 0x3c
   3ac46:	adds	r2, r4, r2
   3ac48:	ldr	r4, [sp, #64]	; 0x40
   3ac4a:	adc.w	r7, r4, r7
   3ac4e:	adds.w	r2, r2, ip
   3ac52:	str	r2, [sp, #168]	; 0xa8
   3ac54:	adc.w	r2, r7, lr
   3ac58:	str	r2, [sp, #172]	; 0xac
   3ac5a:	ldr	r2, [sp, #168]	; 0xa8
   3ac5c:	eors	r6, r2
   3ac5e:	ldr	r2, [sp, #172]	; 0xac
   3ac60:	eors	r1, r2
   3ac62:	lsrs	r2, r6, #16
   3ac64:	orr.w	r2, r2, r1, lsl #16
   3ac68:	lsrs	r1, r1, #16
   3ac6a:	str	r2, [sp, #208]	; 0xd0
   3ac6c:	orr.w	r2, r1, r6, lsl #16
   3ac70:	str	r2, [sp, #212]	; 0xd4
   3ac72:	ldr	r2, [sp, #208]	; 0xd0
   3ac74:	ldr	r1, [sp, #164]	; 0xa4
   3ac76:	adds	r3, r3, r2
   3ac78:	str	r3, [sp, #200]	; 0xc8
   3ac7a:	ldr	r3, [sp, #212]	; 0xd4
   3ac7c:	adc.w	r3, r0, r3
   3ac80:	str	r3, [sp, #204]	; 0xcc
   3ac82:	ldr	r2, [sp, #204]	; 0xcc
   3ac84:	ldr	r3, [sp, #200]	; 0xc8
   3ac86:	eor.w	lr, r2, lr
   3ac8a:	eor.w	r3, r3, ip
   3ac8e:	mov.w	r2, lr, lsl #1
   3ac92:	orr.w	r2, r2, r3, lsr #31
   3ac96:	mov.w	ip, r3, lsl #1
   3ac9a:	str	r2, [sp, #244]	; 0xf4
   3ac9c:	orr.w	ip, ip, lr, lsr #31
   3aca0:	ldr	r2, [sp, #160]	; 0xa0
   3aca2:	ldr	r3, [sp, #20]
   3aca4:	adds	r3, r3, r2
   3aca6:	ldr	r2, [sp, #24]
   3aca8:	adc.w	lr, r2, r1
   3acac:	ldr	r2, [sp, #240]	; 0xf0
   3acae:	ldr	r1, [sp, #180]	; 0xb4
   3acb0:	adds	r3, r3, r2
   3acb2:	ldr	r2, [sp, #248]	; 0xf8
   3acb4:	adc.w	lr, lr, r2
   3acb8:	ldr	r2, [sp, #236]	; 0xec
   3acba:	eor.w	r6, lr, r2
   3acbe:	ldr	r2, [sp, #232]	; 0xe8
   3acc0:	eor.w	r0, r3, r2
   3acc4:	ldr	r2, [sp, #176]	; 0xb0
   3acc6:	adds	r2, r2, r6
   3acc8:	adc.w	r5, r1, r0
   3accc:	ldr	r1, [sp, #240]	; 0xf0
   3acce:	eor.w	r8, r2, r1
   3acd2:	ldr	r1, [sp, #248]	; 0xf8
   3acd4:	eor.w	r4, r5, r1
   3acd8:	mov.w	r9, r8, lsr #24
   3acdc:	orr.w	r1, r9, r4, lsl #8
   3ace0:	lsrs	r4, r4, #24
   3ace2:	orr.w	r7, r4, r8, lsl #8
   3ace6:	ldr	r4, [sp, #36]	; 0x24
   3ace8:	adds	r3, r4, r3
   3acea:	ldr	r4, [sp, #40]	; 0x28
   3acec:	adc.w	lr, r4, lr
   3acf0:	adds	r3, r3, r1
   3acf2:	str	r3, [sp, #160]	; 0xa0
   3acf4:	adc.w	r3, lr, r7
   3acf8:	str	r3, [sp, #164]	; 0xa4
   3acfa:	ldr	r3, [sp, #160]	; 0xa0
   3acfc:	eors	r6, r3
   3acfe:	ldr	r3, [sp, #164]	; 0xa4
   3ad00:	eors	r0, r3
   3ad02:	lsrs	r3, r6, #16
   3ad04:	orr.w	r3, r3, r0, lsl #16
   3ad08:	lsrs	r0, r0, #16
   3ad0a:	str	r3, [sp, #232]	; 0xe8
   3ad0c:	orr.w	r3, r0, r6, lsl #16
   3ad10:	str	r3, [sp, #236]	; 0xec
   3ad12:	ldr	r3, [sp, #232]	; 0xe8
   3ad14:	adds	r2, r2, r3
   3ad16:	ldr	r3, [sp, #236]	; 0xec
   3ad18:	eor.w	r1, r1, r2
   3ad1c:	adc.w	r5, r3, r5
   3ad20:	eors	r7, r5
   3ad22:	lsls	r3, r7, #1
   3ad24:	orr.w	r3, r3, r1, lsr #31
   3ad28:	lsls	r1, r1, #1
   3ad2a:	str	r3, [sp, #248]	; 0xf8
   3ad2c:	orr.w	r3, r1, r7, lsr #31
   3ad30:	str	r3, [sp, #240]	; 0xf0
   3ad32:	ldr	r3, [sp, #84]	; 0x54
   3ad34:	ldr	r1, [sp, #144]	; 0x90
   3ad36:	ldr	r0, [sp, #148]	; 0x94
   3ad38:	adds	r1, r3, r1
   3ad3a:	ldr	r3, [sp, #88]	; 0x58
   3ad3c:	ldr	r4, [sp, #216]	; 0xd8
   3ad3e:	adc.w	sl, r3, r0
   3ad42:	ldr	r3, [sp, #216]	; 0xd8
   3ad44:	ldr	r0, [sp, #188]	; 0xbc
   3ad46:	adds	r1, r1, r3
   3ad48:	ldr	r3, [sp, #256]	; 0x100
   3ad4a:	adc.w	sl, sl, r3
   3ad4e:	ldr	r3, [sp, #224]	; 0xe0
   3ad50:	eor.w	lr, sl, r3
   3ad54:	ldr	r3, [sp, #220]	; 0xdc
   3ad56:	eor.w	r6, r1, r3
   3ad5a:	ldr	r3, [sp, #184]	; 0xb8
   3ad5c:	adds.w	r3, r3, lr
   3ad60:	eor.w	r8, r3, r4
   3ad64:	ldr	r4, [sp, #256]	; 0x100
   3ad66:	adcs	r0, r6
   3ad68:	eor.w	r7, r0, r4
   3ad6c:	mov.w	fp, r8, lsr #24
   3ad70:	orr.w	r4, fp, r7, lsl #8
   3ad74:	lsrs	r7, r7, #24
   3ad76:	orr.w	r9, r7, r8, lsl #8
   3ad7a:	ldr	r7, [sp, #124]	; 0x7c
   3ad7c:	adds	r1, r7, r1
   3ad7e:	ldr	r7, [sp, #128]	; 0x80
   3ad80:	adc.w	sl, r7, sl
   3ad84:	adds	r1, r1, r4
   3ad86:	str	r1, [sp, #144]	; 0x90
   3ad88:	adc.w	r1, sl, r9
   3ad8c:	str	r1, [sp, #148]	; 0x94
   3ad8e:	ldr	r1, [sp, #144]	; 0x90
   3ad90:	eor.w	lr, r1, lr
   3ad94:	ldr	r1, [sp, #148]	; 0x94
   3ad96:	eors	r6, r1
   3ad98:	mov.w	r1, lr, lsr #16
   3ad9c:	orr.w	r8, r1, r6, lsl #16
   3ada0:	lsrs	r6, r6, #16
   3ada2:	adds.w	r3, r3, r8
   3ada6:	orr.w	sl, r6, lr, lsl #16
   3adaa:	adc.w	r0, r0, sl
   3adae:	eors	r4, r3
   3adb0:	eor.w	r9, r0, r9
   3adb4:	ldr	r6, [sp, #156]	; 0x9c
   3adb6:	mov.w	r1, r9, lsl #1
   3adba:	orr.w	r1, r1, r4, lsr #31
   3adbe:	lsls	r4, r4, #1
   3adc0:	orr.w	fp, r4, r9, lsr #31
   3adc4:	str	r1, [sp, #216]	; 0xd8
   3adc6:	ldr	r4, [sp, #152]	; 0x98
   3adc8:	ldr	r1, [sp, #116]	; 0x74
   3adca:	adds	r1, r1, r4
   3adcc:	ldr	r4, [sp, #120]	; 0x78
   3adce:	adc.w	r9, r4, r6
   3add2:	ldr	r4, [sp, #244]	; 0xf4
   3add4:	adds.w	r1, r1, ip
   3add8:	adc.w	r9, r9, r4
   3addc:	eor.w	r7, r1, r8
   3ade0:	eor.w	lr, r9, sl
   3ade4:	adds.w	r2, r2, lr
   3ade8:	adc.w	r5, r7, r5
   3adec:	eor.w	ip, r2, ip
   3adf0:	eor.w	r6, r5, r4
   3adf4:	mov.w	sl, ip, lsr #24
   3adf8:	orr.w	r4, sl, r6, lsl #8
   3adfc:	lsrs	r6, r6, #24
   3adfe:	orr.w	r8, r6, ip, lsl #8
   3ae02:	ldr	r6, [sp, #12]
   3ae04:	adds	r1, r6, r1
   3ae06:	ldr	r6, [sp, #16]
   3ae08:	adc.w	r9, r6, r9
   3ae0c:	adds	r1, r1, r4
   3ae0e:	str	r1, [sp, #152]	; 0x98
   3ae10:	adc.w	r1, r9, r8
   3ae14:	str	r1, [sp, #156]	; 0x9c
   3ae16:	ldr	r1, [sp, #152]	; 0x98
   3ae18:	eor.w	lr, r1, lr
   3ae1c:	ldr	r1, [sp, #156]	; 0x9c
   3ae1e:	eors	r7, r1
   3ae20:	mov.w	r1, lr, lsr #16
   3ae24:	orr.w	r1, r1, r7, lsl #16
   3ae28:	lsrs	r7, r7, #16
   3ae2a:	str	r1, [sp, #220]	; 0xdc
   3ae2c:	orr.w	r1, r7, lr, lsl #16
   3ae30:	str	r1, [sp, #224]	; 0xe0
   3ae32:	ldr	r1, [sp, #220]	; 0xdc
   3ae34:	adds	r2, r2, r1
   3ae36:	str	r2, [sp, #176]	; 0xb0
   3ae38:	ldr	r2, [sp, #224]	; 0xe0
   3ae3a:	ldr	r1, [sp, #168]	; 0xa8
   3ae3c:	adc.w	r2, r5, r2
   3ae40:	str	r2, [sp, #180]	; 0xb4
   3ae42:	ldr	r2, [sp, #176]	; 0xb0
   3ae44:	eors	r4, r2
   3ae46:	ldr	r2, [sp, #180]	; 0xb4
   3ae48:	eor.w	r8, r2, r8
   3ae4c:	mov.w	r2, r8, lsl #1
   3ae50:	orr.w	r2, r2, r4, lsr #31
   3ae54:	lsls	r4, r4, #1
   3ae56:	str	r2, [sp, #252]	; 0xfc
   3ae58:	orr.w	r2, r4, r8, lsr #31
   3ae5c:	str	r2, [sp, #244]	; 0xf4
   3ae5e:	ldr	r2, [sp, #92]	; 0x5c
   3ae60:	ldr	r4, [sp, #172]	; 0xac
   3ae62:	adds	r2, r2, r1
   3ae64:	ldr	r1, [sp, #96]	; 0x60
   3ae66:	adc.w	r7, r1, r4
   3ae6a:	ldr	r1, [sp, #240]	; 0xf0
   3ae6c:	adds	r2, r2, r1
   3ae6e:	ldr	r1, [sp, #248]	; 0xf8
   3ae70:	adc.w	r7, r1, r7
   3ae74:	ldr	r1, [sp, #260]	; 0x104
   3ae76:	eor.w	r4, r7, r1
   3ae7a:	ldr	r1, [sp, #228]	; 0xe4
   3ae7c:	adds	r3, r3, r4
   3ae7e:	eor.w	r9, r2, r1
   3ae82:	ldr	r1, [sp, #240]	; 0xf0
   3ae84:	adc.w	r0, r0, r9
   3ae88:	eor.w	ip, r3, r1
   3ae8c:	ldr	r1, [sp, #248]	; 0xf8
   3ae8e:	eor.w	r5, r0, r1
   3ae92:	mov.w	lr, ip, lsr #24
   3ae96:	orr.w	r1, lr, r5, lsl #8
   3ae9a:	lsrs	r5, r5, #24
   3ae9c:	orr.w	r6, r5, ip, lsl #8
   3aea0:	ldr	r5, [sp, #100]	; 0x64
   3aea2:	adds	r2, r5, r2
   3aea4:	ldr	r5, [sp, #104]	; 0x68
   3aea6:	adc.w	r7, r5, r7
   3aeaa:	adds	r2, r2, r1
   3aeac:	str	r2, [sp, #168]	; 0xa8
   3aeae:	adc.w	r2, r7, r6
   3aeb2:	str	r2, [sp, #172]	; 0xac
   3aeb4:	ldr	r2, [sp, #168]	; 0xa8
   3aeb6:	eors	r4, r2
   3aeb8:	ldr	r2, [sp, #172]	; 0xac
   3aeba:	eor.w	r2, r2, r9
   3aebe:	lsrs	r5, r4, #16
   3aec0:	orr.w	r5, r5, r2, lsl #16
   3aec4:	mov.w	r9, r2, lsr #16
   3aec8:	orr.w	r9, r9, r4, lsl #16
   3aecc:	adds	r3, r3, r5
   3aece:	str	r3, [sp, #184]	; 0xb8
   3aed0:	adc.w	r3, r0, r9
   3aed4:	str	r3, [sp, #188]	; 0xbc
   3aed6:	ldr	r3, [sp, #184]	; 0xb8
   3aed8:	ldr	r2, [sp, #160]	; 0xa0
   3aeda:	eors	r1, r3
   3aedc:	ldr	r3, [sp, #188]	; 0xbc
   3aede:	str	r5, [sp, #228]	; 0xe4
   3aee0:	eors	r6, r3
   3aee2:	lsls	r3, r6, #1
   3aee4:	orr.w	r3, r3, r1, lsr #31
   3aee8:	lsls	r1, r1, #1
   3aeea:	str	r3, [sp, #248]	; 0xf8
   3aeec:	orr.w	r3, r1, r6, lsr #31
   3aef0:	str	r3, [sp, #240]	; 0xf0
   3aef2:	ldr	r3, [sp, #52]	; 0x34
   3aef4:	adds	r3, r3, r2
   3aef6:	ldr	r2, [sp, #56]	; 0x38
   3aef8:	ldr	r1, [sp, #164]	; 0xa4
   3aefa:	ldr	r0, [sp, #196]	; 0xc4
   3aefc:	adc.w	ip, r2, r1
   3af00:	ldr	r2, [sp, #216]	; 0xd8
   3af02:	adds.w	r3, r3, fp
   3af06:	adc.w	ip, ip, r2
   3af0a:	ldr	r2, [sp, #212]	; 0xd4
   3af0c:	eor.w	r7, ip, r2
   3af10:	ldr	r2, [sp, #208]	; 0xd0
   3af12:	eor.w	r1, r3, r2
   3af16:	ldr	r2, [sp, #192]	; 0xc0
   3af18:	adds	r2, r2, r7
   3af1a:	adc.w	r5, r0, r1
   3af1e:	ldr	r0, [sp, #216]	; 0xd8
   3af20:	eor.w	fp, r2, fp
   3af24:	eors	r0, r5
   3af26:	mov.w	r4, fp, lsr #24
   3af2a:	orr.w	r8, r4, r0, lsl #8
   3af2e:	lsrs	r0, r0, #24
   3af30:	orr.w	r6, r0, fp, lsl #8
   3af34:	ldr	r0, [sp, #68]	; 0x44
   3af36:	ldr	r4, [sp, #264]	; 0x108
   3af38:	adds	r3, r0, r3
   3af3a:	ldr	r0, [sp, #72]	; 0x48
   3af3c:	adc.w	ip, r0, ip
   3af40:	adds.w	r3, r3, r8
   3af44:	str	r3, [sp, #160]	; 0xa0
   3af46:	adc.w	r3, ip, r6
   3af4a:	str	r3, [sp, #164]	; 0xa4
   3af4c:	ldr	r3, [sp, #160]	; 0xa0
   3af4e:	ldr	r0, [sp, #148]	; 0x94
   3af50:	eors	r7, r3
   3af52:	ldr	r3, [sp, #164]	; 0xa4
   3af54:	eors	r1, r3
   3af56:	lsrs	r3, r7, #16
   3af58:	orr.w	r3, r3, r1, lsl #16
   3af5c:	lsrs	r1, r1, #16
   3af5e:	str	r3, [sp, #208]	; 0xd0
   3af60:	orr.w	r3, r1, r7, lsl #16
   3af64:	str	r3, [sp, #212]	; 0xd4
   3af66:	ldr	r3, [sp, #208]	; 0xd0
   3af68:	ldr	r1, [sp, #144]	; 0x90
   3af6a:	adds	r2, r2, r3
   3af6c:	ldr	r3, [sp, #212]	; 0xd4
   3af6e:	eor.w	r8, r2, r8
   3af72:	adc.w	r5, r3, r5
   3af76:	eors	r6, r5
   3af78:	lsls	r3, r6, #1
   3af7a:	orr.w	r3, r3, r8, lsr #31
   3af7e:	mov.w	r8, r8, lsl #1
   3af82:	str	r3, [sp, #256]	; 0x100
   3af84:	orr.w	r3, r8, r6, lsr #31
   3af88:	str	r3, [sp, #216]	; 0xd8
   3af8a:	ldr	r3, [sp, #28]
   3af8c:	adds	r1, r3, r1
   3af8e:	ldr	r3, [sp, #32]
   3af90:	adc.w	sl, r3, r0
   3af94:	ldr	r3, [sp, #264]	; 0x108
   3af96:	ldr	r0, [sp, #204]	; 0xcc
   3af98:	adds	r1, r1, r3
   3af9a:	ldr	r3, [sp, #268]	; 0x10c
   3af9c:	adc.w	sl, sl, r3
   3afa0:	ldr	r3, [sp, #236]	; 0xec
   3afa2:	eor.w	lr, sl, r3
   3afa6:	ldr	r3, [sp, #232]	; 0xe8
   3afa8:	eor.w	r7, r1, r3
   3afac:	ldr	r3, [sp, #200]	; 0xc8
   3afae:	adds.w	r3, r3, lr
   3afb2:	eor.w	r6, r3, r4
   3afb6:	ldr	r4, [sp, #268]	; 0x10c
   3afb8:	adcs	r0, r7
   3afba:	eor.w	ip, r0, r4
   3afbe:	mov.w	fp, r6, lsr #24
   3afc2:	orr.w	r4, fp, ip, lsl #8
   3afc6:	mov.w	ip, ip, lsr #24
   3afca:	orr.w	r8, ip, r6, lsl #8
   3afce:	ldr	r6, [sp, #108]	; 0x6c
   3afd0:	adds	r1, r6, r1
   3afd2:	ldr	r6, [sp, #112]	; 0x70
   3afd4:	adc.w	sl, r6, sl
   3afd8:	adds	r1, r1, r4
   3afda:	str	r1, [sp, #144]	; 0x90
   3afdc:	adc.w	r1, sl, r8
   3afe0:	str	r1, [sp, #148]	; 0x94
   3afe2:	ldr	r1, [sp, #144]	; 0x90
   3afe4:	eor.w	lr, r1, lr
   3afe8:	ldr	r1, [sp, #148]	; 0x94
   3afea:	eors	r7, r1
   3afec:	mov.w	r1, lr, lsr #16
   3aff0:	orr.w	r1, r1, r7, lsl #16
   3aff4:	lsrs	r7, r7, #16
   3aff6:	str	r1, [sp, #232]	; 0xe8
   3aff8:	orr.w	r1, r7, lr, lsl #16
   3affc:	str	r1, [sp, #236]	; 0xec
   3affe:	ldr	r1, [sp, #232]	; 0xe8
   3b000:	ldr	r7, [sp, #156]	; 0x9c
   3b002:	adds	r3, r3, r1
   3b004:	ldr	r1, [sp, #236]	; 0xec
   3b006:	eor.w	r4, r4, r3
   3b00a:	adc.w	r0, r1, r0
   3b00e:	eor.w	r8, r0, r8
   3b012:	mov.w	r1, r8, lsl #1
   3b016:	orr.w	r6, r1, r4, lsr #31
   3b01a:	lsls	r4, r4, #1
   3b01c:	orr.w	fp, r4, r8, lsr #31
   3b020:	ldr	r1, [sp, #20]
   3b022:	ldr	r4, [sp, #152]	; 0x98
   3b024:	adds	r1, r1, r4
   3b026:	ldr	r4, [sp, #24]
   3b028:	adc.w	sl, r4, r7
   3b02c:	adds.w	r1, r1, fp
   3b030:	ldr	r4, [sp, #228]	; 0xe4
   3b032:	adc.w	sl, sl, r6
   3b036:	eor.w	lr, sl, r9
   3b03a:	adds.w	r2, r2, lr
   3b03e:	eor.w	r7, r1, r4
   3b042:	adc.w	r5, r7, r5
   3b046:	eor.w	fp, r2, fp
   3b04a:	eor.w	ip, r5, r6
   3b04e:	mov.w	r4, fp, lsr #24
   3b052:	orr.w	r6, r4, ip, lsl #8
   3b056:	ldr	r4, [sp, #100]	; 0x64
   3b058:	mov.w	ip, ip, lsr #24
   3b05c:	adds	r1, r4, r1
   3b05e:	ldr	r4, [sp, #104]	; 0x68
   3b060:	orr.w	r8, ip, fp, lsl #8
   3b064:	adc.w	sl, r4, sl
   3b068:	adds	r1, r1, r6
   3b06a:	str	r1, [sp, #152]	; 0x98
   3b06c:	adc.w	r1, sl, r8
   3b070:	str	r1, [sp, #156]	; 0x9c
   3b072:	ldr	r1, [sp, #152]	; 0x98
   3b074:	eor.w	lr, r1, lr
   3b078:	ldr	r1, [sp, #156]	; 0x9c
   3b07a:	eors	r7, r1
   3b07c:	mov.w	r1, lr, lsr #16
   3b080:	orr.w	r1, r1, r7, lsl #16
   3b084:	lsrs	r7, r7, #16
   3b086:	str	r1, [sp, #228]	; 0xe4
   3b088:	orr.w	r1, r7, lr, lsl #16
   3b08c:	str	r1, [sp, #260]	; 0x104
   3b08e:	ldr	r1, [sp, #228]	; 0xe4
   3b090:	adds	r2, r2, r1
   3b092:	str	r2, [sp, #192]	; 0xc0
   3b094:	ldr	r2, [sp, #260]	; 0x104
   3b096:	ldr	r1, [sp, #168]	; 0xa8
   3b098:	adc.w	r2, r5, r2
   3b09c:	str	r2, [sp, #196]	; 0xc4
   3b09e:	ldr	r2, [sp, #192]	; 0xc0
   3b0a0:	eors	r6, r2
   3b0a2:	ldr	r2, [sp, #196]	; 0xc4
   3b0a4:	eor.w	r8, r2, r8
   3b0a8:	mov.w	r2, r8, lsl #1
   3b0ac:	orr.w	r2, r2, r6, lsr #31
   3b0b0:	lsls	r6, r6, #1
   3b0b2:	str	r2, [sp, #268]	; 0x10c
   3b0b4:	orr.w	r2, r6, r8, lsr #31
   3b0b8:	str	r2, [sp, #264]	; 0x108
   3b0ba:	ldr	r2, [sp, #52]	; 0x34
   3b0bc:	adds	r2, r2, r1
   3b0be:	ldr	r1, [sp, #56]	; 0x38
   3b0c0:	ldr	r4, [sp, #172]	; 0xac
   3b0c2:	ldr	r5, [sp, #252]	; 0xfc
   3b0c4:	adc.w	r7, r1, r4
   3b0c8:	ldr	r1, [sp, #244]	; 0xf4
   3b0ca:	ldr	r4, [sp, #244]	; 0xf4
   3b0cc:	adds	r2, r2, r1
   3b0ce:	ldr	r1, [sp, #252]	; 0xfc
   3b0d0:	adc.w	r7, r1, r7
   3b0d4:	ldr	r1, [sp, #212]	; 0xd4
   3b0d6:	eor.w	r6, r7, r1
   3b0da:	ldr	r1, [sp, #208]	; 0xd0
   3b0dc:	adds	r3, r3, r6
   3b0de:	eor.w	r1, r2, r1
   3b0e2:	eor.w	r4, r3, r4
   3b0e6:	adc.w	r0, r1, r0
   3b0ea:	eors	r5, r0
   3b0ec:	mov.w	r8, r4, lsr #24
   3b0f0:	orr.w	ip, r8, r5, lsl #8
   3b0f4:	lsrs	r5, r5, #24
   3b0f6:	orr.w	lr, r5, r4, lsl #8
   3b0fa:	ldr	r4, [sp, #84]	; 0x54
   3b0fc:	adds	r2, r4, r2
   3b0fe:	ldr	r4, [sp, #88]	; 0x58
   3b100:	adc.w	r7, r4, r7
   3b104:	adds.w	r2, r2, ip
   3b108:	str	r2, [sp, #168]	; 0xa8
   3b10a:	adc.w	r2, r7, lr
   3b10e:	str	r2, [sp, #172]	; 0xac
   3b110:	ldr	r2, [sp, #168]	; 0xa8
   3b112:	eors	r6, r2
   3b114:	ldr	r2, [sp, #172]	; 0xac
   3b116:	eors	r1, r2
   3b118:	lsrs	r2, r6, #16
   3b11a:	orr.w	r2, r2, r1, lsl #16
   3b11e:	lsrs	r1, r1, #16
   3b120:	str	r2, [sp, #208]	; 0xd0
   3b122:	orr.w	r2, r1, r6, lsl #16
   3b126:	str	r2, [sp, #212]	; 0xd4
   3b128:	ldr	r2, [sp, #208]	; 0xd0
   3b12a:	ldr	r1, [sp, #164]	; 0xa4
   3b12c:	adds	r3, r3, r2
   3b12e:	str	r3, [sp, #200]	; 0xc8
   3b130:	ldr	r3, [sp, #212]	; 0xd4
   3b132:	adc.w	r3, r0, r3
   3b136:	str	r3, [sp, #204]	; 0xcc
   3b138:	ldr	r2, [sp, #204]	; 0xcc
   3b13a:	ldr	r3, [sp, #200]	; 0xc8
   3b13c:	eor.w	lr, r2, lr
   3b140:	eor.w	r3, r3, ip
   3b144:	mov.w	r2, lr, lsl #1
   3b148:	orr.w	r2, r2, r3, lsr #31
   3b14c:	mov.w	ip, r3, lsl #1
   3b150:	str	r2, [sp, #244]	; 0xf4
   3b152:	orr.w	ip, ip, lr, lsr #31
   3b156:	ldr	r2, [sp, #160]	; 0xa0
   3b158:	ldr	r3, [sp, #4]
   3b15a:	adds	r3, r3, r2
   3b15c:	ldr	r2, [sp, #8]
   3b15e:	adc.w	lr, r2, r1
   3b162:	ldr	r2, [sp, #240]	; 0xf0
   3b164:	adds	r3, r3, r2
   3b166:	ldr	r2, [sp, #248]	; 0xf8
   3b168:	adc.w	lr, lr, r2
   3b16c:	ldr	r2, [sp, #236]	; 0xec
   3b16e:	eor.w	r6, lr, r2
   3b172:	ldr	r2, [sp, #232]	; 0xe8
   3b174:	eor.w	r0, r3, r2
   3b178:	ldr	r2, [sp, #176]	; 0xb0
   3b17a:	ldr	r1, [sp, #180]	; 0xb4
   3b17c:	adds	r2, r2, r6
   3b17e:	adc.w	r5, r1, r0
   3b182:	ldr	r1, [sp, #240]	; 0xf0
   3b184:	eor.w	r8, r2, r1
   3b188:	ldr	r1, [sp, #248]	; 0xf8
   3b18a:	eor.w	r4, r5, r1
   3b18e:	mov.w	r9, r8, lsr #24
   3b192:	orr.w	r1, r9, r4, lsl #8
   3b196:	lsrs	r4, r4, #24
   3b198:	orr.w	r7, r4, r8, lsl #8
   3b19c:	ldr	r4, [sp, #92]	; 0x5c
   3b19e:	adds	r3, r4, r3
   3b1a0:	ldr	r4, [sp, #96]	; 0x60
   3b1a2:	adc.w	lr, r4, lr
   3b1a6:	adds	r3, r3, r1
   3b1a8:	str	r3, [sp, #160]	; 0xa0
   3b1aa:	adc.w	r3, lr, r7
   3b1ae:	str	r3, [sp, #164]	; 0xa4
   3b1b0:	ldr	r3, [sp, #160]	; 0xa0
   3b1b2:	ldr	r4, [sp, #216]	; 0xd8
   3b1b4:	eors	r6, r3
   3b1b6:	ldr	r3, [sp, #164]	; 0xa4
   3b1b8:	eors	r0, r3
   3b1ba:	lsrs	r3, r6, #16
   3b1bc:	orr.w	r3, r3, r0, lsl #16
   3b1c0:	lsrs	r0, r0, #16
   3b1c2:	str	r3, [sp, #232]	; 0xe8
   3b1c4:	orr.w	r3, r0, r6, lsl #16
   3b1c8:	str	r3, [sp, #236]	; 0xec
   3b1ca:	ldr	r3, [sp, #232]	; 0xe8
   3b1cc:	ldr	r0, [sp, #148]	; 0x94
   3b1ce:	adds	r2, r2, r3
   3b1d0:	ldr	r3, [sp, #236]	; 0xec
   3b1d2:	eor.w	r1, r1, r2
   3b1d6:	adc.w	r5, r3, r5
   3b1da:	eors	r7, r5
   3b1dc:	lsls	r3, r7, #1
   3b1de:	orr.w	r3, r3, r1, lsr #31
   3b1e2:	lsls	r1, r1, #1
   3b1e4:	str	r3, [sp, #248]	; 0xf8
   3b1e6:	orr.w	r3, r1, r7, lsr #31
   3b1ea:	ldr	r1, [sp, #144]	; 0x90
   3b1ec:	str	r3, [sp, #240]	; 0xf0
   3b1ee:	ldr	r3, [sp, #68]	; 0x44
   3b1f0:	adds	r1, r3, r1
   3b1f2:	ldr	r3, [sp, #72]	; 0x48
   3b1f4:	adc.w	sl, r3, r0
   3b1f8:	ldr	r3, [sp, #216]	; 0xd8
   3b1fa:	ldr	r0, [sp, #188]	; 0xbc
   3b1fc:	adds	r1, r1, r3
   3b1fe:	ldr	r3, [sp, #256]	; 0x100
   3b200:	adc.w	sl, sl, r3
   3b204:	ldr	r3, [sp, #224]	; 0xe0
   3b206:	eor.w	lr, sl, r3
   3b20a:	ldr	r3, [sp, #220]	; 0xdc
   3b20c:	eor.w	r6, r1, r3
   3b210:	ldr	r3, [sp, #184]	; 0xb8
   3b212:	adds.w	r3, r3, lr
   3b216:	eor.w	r8, r3, r4
   3b21a:	ldr	r4, [sp, #256]	; 0x100
   3b21c:	adcs	r0, r6
   3b21e:	eor.w	r7, r0, r4
   3b222:	mov.w	fp, r8, lsr #24
   3b226:	orr.w	r4, fp, r7, lsl #8
   3b22a:	lsrs	r7, r7, #24
   3b22c:	orr.w	r9, r7, r8, lsl #8
   3b230:	ldr	r7, [sp, #28]
   3b232:	adds	r1, r7, r1
   3b234:	ldr	r7, [sp, #32]
   3b236:	adc.w	sl, r7, sl
   3b23a:	adds	r1, r1, r4
   3b23c:	str	r1, [sp, #144]	; 0x90
   3b23e:	adc.w	r1, sl, r9
   3b242:	str	r1, [sp, #148]	; 0x94
   3b244:	ldr	r1, [sp, #144]	; 0x90
   3b246:	eor.w	lr, r1, lr
   3b24a:	ldr	r1, [sp, #148]	; 0x94
   3b24c:	eors	r6, r1
   3b24e:	mov.w	r1, lr, lsr #16
   3b252:	orr.w	r8, r1, r6, lsl #16
   3b256:	lsrs	r6, r6, #16
   3b258:	adds.w	r3, r3, r8
   3b25c:	orr.w	sl, r6, lr, lsl #16
   3b260:	adc.w	r0, r0, sl
   3b264:	eors	r4, r3
   3b266:	eor.w	r9, r0, r9
   3b26a:	ldr	r6, [sp, #156]	; 0x9c
   3b26c:	mov.w	r1, r9, lsl #1
   3b270:	orr.w	r1, r1, r4, lsr #31
   3b274:	lsls	r4, r4, #1
   3b276:	orr.w	fp, r4, r9, lsr #31
   3b27a:	str	r1, [sp, #216]	; 0xd8
   3b27c:	ldr	r4, [sp, #152]	; 0x98
   3b27e:	ldr	r1, [sp, #36]	; 0x24
   3b280:	adds	r1, r1, r4
   3b282:	ldr	r4, [sp, #40]	; 0x28
   3b284:	adc.w	r9, r4, r6
   3b288:	ldr	r4, [sp, #244]	; 0xf4
   3b28a:	adds.w	r1, r1, ip
   3b28e:	adc.w	r9, r9, r4
   3b292:	eor.w	r7, r1, r8
   3b296:	eor.w	lr, r9, sl
   3b29a:	adds.w	r2, r2, lr
   3b29e:	adc.w	r5, r7, r5
   3b2a2:	eor.w	ip, r2, ip
   3b2a6:	eor.w	r6, r5, r4
   3b2aa:	mov.w	sl, ip, lsr #24
   3b2ae:	orr.w	r4, sl, r6, lsl #8
   3b2b2:	lsrs	r6, r6, #24
   3b2b4:	orr.w	r8, r6, ip, lsl #8
   3b2b8:	ldr	r6, [sp, #108]	; 0x6c
   3b2ba:	adds	r1, r6, r1
   3b2bc:	ldr	r6, [sp, #112]	; 0x70
   3b2be:	adc.w	r9, r6, r9
   3b2c2:	adds	r1, r1, r4
   3b2c4:	str	r1, [sp, #152]	; 0x98
   3b2c6:	adc.w	r1, r9, r8
   3b2ca:	str	r1, [sp, #156]	; 0x9c
   3b2cc:	ldr	r1, [sp, #152]	; 0x98
   3b2ce:	eor.w	lr, r1, lr
   3b2d2:	ldr	r1, [sp, #156]	; 0x9c
   3b2d4:	eors	r7, r1
   3b2d6:	mov.w	r1, lr, lsr #16
   3b2da:	orr.w	r1, r1, r7, lsl #16
   3b2de:	lsrs	r7, r7, #16
   3b2e0:	str	r1, [sp, #220]	; 0xdc
   3b2e2:	orr.w	r1, r7, lr, lsl #16
   3b2e6:	str	r1, [sp, #224]	; 0xe0
   3b2e8:	ldr	r1, [sp, #220]	; 0xdc
   3b2ea:	adds	r2, r2, r1
   3b2ec:	str	r2, [sp, #176]	; 0xb0
   3b2ee:	ldr	r2, [sp, #224]	; 0xe0
   3b2f0:	ldr	r1, [sp, #168]	; 0xa8
   3b2f2:	adc.w	r2, r5, r2
   3b2f6:	str	r2, [sp, #180]	; 0xb4
   3b2f8:	ldr	r2, [sp, #176]	; 0xb0
   3b2fa:	eors	r4, r2
   3b2fc:	ldr	r2, [sp, #180]	; 0xb4
   3b2fe:	eor.w	r8, r2, r8
   3b302:	mov.w	r2, r8, lsl #1
   3b306:	orr.w	r2, r2, r4, lsr #31
   3b30a:	lsls	r4, r4, #1
   3b30c:	str	r2, [sp, #252]	; 0xfc
   3b30e:	orr.w	r2, r4, r8, lsr #31
   3b312:	str	r2, [sp, #244]	; 0xf4
   3b314:	ldr	r2, [sp, #60]	; 0x3c
   3b316:	ldr	r4, [sp, #172]	; 0xac
   3b318:	adds	r2, r2, r1
   3b31a:	ldr	r1, [sp, #64]	; 0x40
   3b31c:	adc.w	r7, r1, r4
   3b320:	ldr	r1, [sp, #240]	; 0xf0
   3b322:	adds	r2, r2, r1
   3b324:	ldr	r1, [sp, #248]	; 0xf8
   3b326:	adc.w	r7, r1, r7
   3b32a:	ldr	r1, [sp, #260]	; 0x104
   3b32c:	eor.w	r4, r7, r1
   3b330:	ldr	r1, [sp, #228]	; 0xe4
   3b332:	adds	r3, r3, r4
   3b334:	eor.w	r9, r2, r1
   3b338:	ldr	r1, [sp, #240]	; 0xf0
   3b33a:	adc.w	r0, r0, r9
   3b33e:	eor.w	ip, r3, r1
   3b342:	ldr	r1, [sp, #248]	; 0xf8
   3b344:	eor.w	r5, r0, r1
   3b348:	mov.w	lr, ip, lsr #24
   3b34c:	orr.w	r1, lr, r5, lsl #8
   3b350:	lsrs	r5, r5, #24
   3b352:	orr.w	r6, r5, ip, lsl #8
   3b356:	ldr	r5, [sp, #44]	; 0x2c
   3b358:	adds	r2, r5, r2
   3b35a:	ldr	r5, [sp, #48]	; 0x30
   3b35c:	adc.w	r7, r5, r7
   3b360:	adds	r2, r2, r1
   3b362:	str	r2, [sp, #168]	; 0xa8
   3b364:	adc.w	r2, r7, r6
   3b368:	str	r2, [sp, #172]	; 0xac
   3b36a:	ldr	r2, [sp, #168]	; 0xa8
   3b36c:	eors	r4, r2
   3b36e:	ldr	r2, [sp, #172]	; 0xac
   3b370:	eor.w	r2, r2, r9
   3b374:	lsrs	r5, r4, #16
   3b376:	orr.w	r5, r5, r2, lsl #16
   3b37a:	mov.w	r9, r2, lsr #16
   3b37e:	orr.w	r9, r9, r4, lsl #16
   3b382:	adds	r3, r3, r5
   3b384:	str	r3, [sp, #184]	; 0xb8
   3b386:	adc.w	r3, r0, r9
   3b38a:	str	r3, [sp, #188]	; 0xbc
   3b38c:	ldr	r3, [sp, #184]	; 0xb8
   3b38e:	ldr	r2, [sp, #160]	; 0xa0
   3b390:	eors	r1, r3
   3b392:	ldr	r3, [sp, #188]	; 0xbc
   3b394:	ldr	r0, [sp, #196]	; 0xc4
   3b396:	eors	r6, r3
   3b398:	str	r5, [sp, #228]	; 0xe4
   3b39a:	lsls	r3, r6, #1
   3b39c:	orr.w	r3, r3, r1, lsr #31
   3b3a0:	lsls	r1, r1, #1
   3b3a2:	str	r3, [sp, #248]	; 0xf8
   3b3a4:	orr.w	r3, r1, r6, lsr #31
   3b3a8:	str	r3, [sp, #240]	; 0xf0
   3b3aa:	ldr	r3, [sp, #124]	; 0x7c
   3b3ac:	ldr	r1, [sp, #164]	; 0xa4
   3b3ae:	adds	r3, r3, r2
   3b3b0:	ldr	r2, [sp, #128]	; 0x80
   3b3b2:	adc.w	ip, r2, r1
   3b3b6:	ldr	r2, [sp, #216]	; 0xd8
   3b3b8:	adds.w	r3, r3, fp
   3b3bc:	adc.w	ip, ip, r2
   3b3c0:	ldr	r2, [sp, #212]	; 0xd4
   3b3c2:	eor.w	r7, ip, r2
   3b3c6:	ldr	r2, [sp, #208]	; 0xd0
   3b3c8:	eor.w	r1, r3, r2
   3b3cc:	ldr	r2, [sp, #192]	; 0xc0
   3b3ce:	adds	r2, r2, r7
   3b3d0:	adc.w	r5, r0, r1
   3b3d4:	ldr	r0, [sp, #216]	; 0xd8
   3b3d6:	eor.w	fp, r2, fp
   3b3da:	eors	r0, r5
   3b3dc:	mov.w	r4, fp, lsr #24
   3b3e0:	orr.w	r8, r4, r0, lsl #8
   3b3e4:	lsrs	r0, r0, #24
   3b3e6:	orr.w	r6, r0, fp, lsl #8
   3b3ea:	ldr	r0, [sp, #116]	; 0x74
   3b3ec:	adds	r3, r0, r3
   3b3ee:	ldr	r0, [sp, #120]	; 0x78
   3b3f0:	adc.w	ip, r0, ip
   3b3f4:	adds.w	r3, r3, r8
   3b3f8:	str	r3, [sp, #160]	; 0xa0
   3b3fa:	adc.w	r3, ip, r6
   3b3fe:	str	r3, [sp, #164]	; 0xa4
   3b400:	ldr	r3, [sp, #160]	; 0xa0
   3b402:	eors	r7, r3
   3b404:	ldr	r3, [sp, #164]	; 0xa4
   3b406:	eors	r1, r3
   3b408:	lsrs	r3, r7, #16
   3b40a:	orr.w	r3, r3, r1, lsl #16
   3b40e:	lsrs	r1, r1, #16
   3b410:	str	r3, [sp, #208]	; 0xd0
   3b412:	orr.w	r3, r1, r7, lsl #16
   3b416:	str	r3, [sp, #212]	; 0xd4
   3b418:	ldr	r3, [sp, #208]	; 0xd0
   3b41a:	ldr	r1, [sp, #144]	; 0x90
   3b41c:	adds	r2, r2, r3
   3b41e:	ldr	r3, [sp, #212]	; 0xd4
   3b420:	eor.w	r8, r2, r8
   3b424:	ldr	r0, [sp, #148]	; 0x94
   3b426:	adc.w	r5, r3, r5
   3b42a:	ldr	r4, [sp, #264]	; 0x108
   3b42c:	eors	r6, r5
   3b42e:	lsls	r3, r6, #1
   3b430:	orr.w	r3, r3, r8, lsr #31
   3b434:	mov.w	r8, r8, lsl #1
   3b438:	str	r3, [sp, #256]	; 0x100
   3b43a:	orr.w	r3, r8, r6, lsr #31
   3b43e:	str	r3, [sp, #216]	; 0xd8
   3b440:	ldr	r3, [sp, #12]
   3b442:	adds	r1, r3, r1
   3b444:	ldr	r3, [sp, #16]
   3b446:	adc.w	sl, r3, r0
   3b44a:	ldr	r3, [sp, #264]	; 0x108
   3b44c:	ldr	r0, [sp, #204]	; 0xcc
   3b44e:	adds	r1, r1, r3
   3b450:	ldr	r3, [sp, #268]	; 0x10c
   3b452:	adc.w	sl, sl, r3
   3b456:	ldr	r3, [sp, #236]	; 0xec
   3b458:	eor.w	lr, sl, r3
   3b45c:	ldr	r3, [sp, #232]	; 0xe8
   3b45e:	eor.w	r7, r1, r3
   3b462:	ldr	r3, [sp, #200]	; 0xc8
   3b464:	adds.w	r3, r3, lr
   3b468:	eor.w	r6, r3, r4
   3b46c:	ldr	r4, [sp, #268]	; 0x10c
   3b46e:	adcs	r0, r7
   3b470:	eor.w	ip, r0, r4
   3b474:	mov.w	fp, r6, lsr #24
   3b478:	orr.w	r4, fp, ip, lsl #8
   3b47c:	mov.w	ip, ip, lsr #24
   3b480:	orr.w	r8, ip, r6, lsl #8
   3b484:	ldr	r6, [sp, #76]	; 0x4c
   3b486:	adds	r1, r6, r1
   3b488:	ldr	r6, [sp, #80]	; 0x50
   3b48a:	adc.w	sl, r6, sl
   3b48e:	adds	r1, r1, r4
   3b490:	str	r1, [sp, #144]	; 0x90
   3b492:	adc.w	r1, sl, r8
   3b496:	str	r1, [sp, #148]	; 0x94
   3b498:	ldr	r1, [sp, #144]	; 0x90
   3b49a:	eor.w	lr, r1, lr
   3b49e:	ldr	r1, [sp, #148]	; 0x94
   3b4a0:	eors	r7, r1
   3b4a2:	mov.w	r1, lr, lsr #16
   3b4a6:	orr.w	r1, r1, r7, lsl #16
   3b4aa:	lsrs	r7, r7, #16
   3b4ac:	str	r1, [sp, #232]	; 0xe8
   3b4ae:	orr.w	r1, r7, lr, lsl #16
   3b4b2:	str	r1, [sp, #236]	; 0xec
   3b4b4:	ldr	r1, [sp, #232]	; 0xe8
   3b4b6:	ldr	r7, [sp, #156]	; 0x9c
   3b4b8:	adds	r3, r3, r1
   3b4ba:	ldr	r1, [sp, #236]	; 0xec
   3b4bc:	eor.w	r4, r4, r3
   3b4c0:	adc.w	r0, r1, r0
   3b4c4:	eor.w	r8, r0, r8
   3b4c8:	mov.w	r1, r8, lsl #1
   3b4cc:	orr.w	r6, r1, r4, lsr #31
   3b4d0:	lsls	r4, r4, #1
   3b4d2:	orr.w	fp, r4, r8, lsr #31
   3b4d6:	ldr	r1, [sp, #100]	; 0x64
   3b4d8:	ldr	r4, [sp, #152]	; 0x98
   3b4da:	adds	r1, r1, r4
   3b4dc:	ldr	r4, [sp, #104]	; 0x68
   3b4de:	adc.w	sl, r4, r7
   3b4e2:	adds.w	r1, r1, fp
   3b4e6:	adc.w	sl, sl, r6
   3b4ea:	ldr	r4, [sp, #228]	; 0xe4
   3b4ec:	eor.w	lr, sl, r9
   3b4f0:	adds.w	r2, r2, lr
   3b4f4:	eor.w	r7, r1, r4
   3b4f8:	adc.w	r5, r7, r5
   3b4fc:	eor.w	fp, r2, fp
   3b500:	eor.w	ip, r5, r6
   3b504:	mov.w	r4, fp, lsr #24
   3b508:	orr.w	r6, r4, ip, lsl #8
   3b50c:	ldr	r4, [sp, #44]	; 0x2c
   3b50e:	mov.w	ip, ip, lsr #24
   3b512:	adds	r1, r4, r1
   3b514:	ldr	r4, [sp, #48]	; 0x30
   3b516:	orr.w	r8, ip, fp, lsl #8
   3b51a:	adc.w	sl, r4, sl
   3b51e:	adds	r1, r1, r6
   3b520:	str	r1, [sp, #152]	; 0x98
   3b522:	adc.w	r1, sl, r8
   3b526:	str	r1, [sp, #156]	; 0x9c
   3b528:	ldr	r1, [sp, #152]	; 0x98
   3b52a:	ldr	r4, [sp, #172]	; 0xac
   3b52c:	eor.w	lr, r1, lr
   3b530:	ldr	r1, [sp, #156]	; 0x9c
   3b532:	eors	r7, r1
   3b534:	mov.w	r1, lr, lsr #16
   3b538:	orr.w	r1, r1, r7, lsl #16
   3b53c:	lsrs	r7, r7, #16
   3b53e:	str	r1, [sp, #228]	; 0xe4
   3b540:	orr.w	r1, r7, lr, lsl #16
   3b544:	str	r1, [sp, #260]	; 0x104
   3b546:	ldr	r1, [sp, #228]	; 0xe4
   3b548:	adds	r2, r2, r1
   3b54a:	str	r2, [sp, #192]	; 0xc0
   3b54c:	ldr	r2, [sp, #260]	; 0x104
   3b54e:	ldr	r1, [sp, #168]	; 0xa8
   3b550:	adc.w	r2, r5, r2
   3b554:	str	r2, [sp, #196]	; 0xc4
   3b556:	ldr	r2, [sp, #192]	; 0xc0
   3b558:	ldr	r5, [sp, #252]	; 0xfc
   3b55a:	eors	r6, r2
   3b55c:	ldr	r2, [sp, #196]	; 0xc4
   3b55e:	eor.w	r8, r2, r8
   3b562:	mov.w	r2, r8, lsl #1
   3b566:	orr.w	r2, r2, r6, lsr #31
   3b56a:	lsls	r6, r6, #1
   3b56c:	str	r2, [sp, #268]	; 0x10c
   3b56e:	orr.w	r2, r6, r8, lsr #31
   3b572:	str	r2, [sp, #264]	; 0x108
   3b574:	ldr	r2, [sp, #12]
   3b576:	adds	r2, r2, r1
   3b578:	ldr	r1, [sp, #16]
   3b57a:	adc.w	r7, r1, r4
   3b57e:	ldr	r1, [sp, #244]	; 0xf4
   3b580:	ldr	r4, [sp, #244]	; 0xf4
   3b582:	adds	r2, r2, r1
   3b584:	ldr	r1, [sp, #252]	; 0xfc
   3b586:	adc.w	r7, r1, r7
   3b58a:	ldr	r1, [sp, #212]	; 0xd4
   3b58c:	eor.w	r6, r7, r1
   3b590:	ldr	r1, [sp, #208]	; 0xd0
   3b592:	adds	r3, r3, r6
   3b594:	eor.w	r1, r2, r1
   3b598:	eor.w	r4, r3, r4
   3b59c:	adc.w	r0, r1, r0
   3b5a0:	eors	r5, r0
   3b5a2:	mov.w	r8, r4, lsr #24
   3b5a6:	orr.w	ip, r8, r5, lsl #8
   3b5aa:	lsrs	r5, r5, #24
   3b5ac:	orr.w	lr, r5, r4, lsl #8
   3b5b0:	ldr	r4, [sp, #124]	; 0x7c
   3b5b2:	adds	r2, r4, r2
   3b5b4:	ldr	r4, [sp, #128]	; 0x80
   3b5b6:	adc.w	r7, r4, r7
   3b5ba:	adds.w	r2, r2, ip
   3b5be:	str	r2, [sp, #168]	; 0xa8
   3b5c0:	adc.w	r2, r7, lr
   3b5c4:	str	r2, [sp, #172]	; 0xac
   3b5c6:	ldr	r2, [sp, #168]	; 0xa8
   3b5c8:	eors	r6, r2
   3b5ca:	ldr	r2, [sp, #172]	; 0xac
   3b5cc:	eors	r1, r2
   3b5ce:	lsrs	r2, r6, #16
   3b5d0:	orr.w	r2, r2, r1, lsl #16
   3b5d4:	lsrs	r1, r1, #16
   3b5d6:	str	r2, [sp, #208]	; 0xd0
   3b5d8:	orr.w	r2, r1, r6, lsl #16
   3b5dc:	str	r2, [sp, #212]	; 0xd4
   3b5de:	ldr	r2, [sp, #208]	; 0xd0
   3b5e0:	ldr	r1, [sp, #164]	; 0xa4
   3b5e2:	adds	r3, r3, r2
   3b5e4:	str	r3, [sp, #200]	; 0xc8
   3b5e6:	ldr	r3, [sp, #212]	; 0xd4
   3b5e8:	adc.w	r3, r0, r3
   3b5ec:	str	r3, [sp, #204]	; 0xcc
   3b5ee:	ldr	r2, [sp, #204]	; 0xcc
   3b5f0:	ldr	r3, [sp, #200]	; 0xc8
   3b5f2:	eor.w	lr, r2, lr
   3b5f6:	eor.w	r3, r3, ip
   3b5fa:	mov.w	r2, lr, lsl #1
   3b5fe:	orr.w	r2, r2, r3, lsr #31
   3b602:	mov.w	ip, r3, lsl #1
   3b606:	str	r2, [sp, #244]	; 0xf4
   3b608:	orr.w	ip, ip, lr, lsr #31
   3b60c:	ldr	r2, [sp, #160]	; 0xa0
   3b60e:	ldr	r3, [sp, #116]	; 0x74
   3b610:	adds	r3, r3, r2
   3b612:	ldr	r2, [sp, #120]	; 0x78
   3b614:	adc.w	lr, r2, r1
   3b618:	ldr	r2, [sp, #240]	; 0xf0
   3b61a:	ldr	r1, [sp, #180]	; 0xb4
   3b61c:	adds	r3, r3, r2
   3b61e:	ldr	r2, [sp, #248]	; 0xf8
   3b620:	adc.w	lr, lr, r2
   3b624:	ldr	r2, [sp, #236]	; 0xec
   3b626:	eor.w	r6, lr, r2
   3b62a:	ldr	r2, [sp, #232]	; 0xe8
   3b62c:	eor.w	r0, r3, r2
   3b630:	ldr	r2, [sp, #176]	; 0xb0
   3b632:	adds	r2, r2, r6
   3b634:	adc.w	r5, r1, r0
   3b638:	ldr	r1, [sp, #240]	; 0xf0
   3b63a:	eor.w	r8, r2, r1
   3b63e:	ldr	r1, [sp, #248]	; 0xf8
   3b640:	eor.w	r4, r5, r1
   3b644:	mov.w	r9, r8, lsr #24
   3b648:	orr.w	r1, r9, r4, lsl #8
   3b64c:	lsrs	r4, r4, #24
   3b64e:	orr.w	r7, r4, r8, lsl #8
   3b652:	ldr	r4, [sp, #108]	; 0x6c
   3b654:	adds	r3, r4, r3
   3b656:	ldr	r4, [sp, #112]	; 0x70
   3b658:	adc.w	lr, r4, lr
   3b65c:	adds	r3, r3, r1
   3b65e:	str	r3, [sp, #160]	; 0xa0
   3b660:	adc.w	r3, lr, r7
   3b664:	str	r3, [sp, #164]	; 0xa4
   3b666:	ldr	r3, [sp, #160]	; 0xa0
   3b668:	eors	r6, r3
   3b66a:	ldr	r3, [sp, #164]	; 0xa4
   3b66c:	eors	r0, r3
   3b66e:	lsrs	r3, r6, #16
   3b670:	orr.w	r3, r3, r0, lsl #16
   3b674:	lsrs	r0, r0, #16
   3b676:	str	r3, [sp, #232]	; 0xe8
   3b678:	orr.w	r3, r0, r6, lsl #16
   3b67c:	str	r3, [sp, #236]	; 0xec
   3b67e:	ldr	r3, [sp, #232]	; 0xe8
   3b680:	adds	r2, r2, r3
   3b682:	ldr	r3, [sp, #236]	; 0xec
   3b684:	eor.w	r1, r1, r2
   3b688:	adc.w	r5, r3, r5
   3b68c:	eors	r7, r5
   3b68e:	lsls	r3, r7, #1
   3b690:	orr.w	r3, r3, r1, lsr #31
   3b694:	lsls	r1, r1, #1
   3b696:	str	r3, [sp, #248]	; 0xf8
   3b698:	orr.w	r3, r1, r7, lsr #31
   3b69c:	str	r3, [sp, #240]	; 0xf0
   3b69e:	ldr	r3, [sp, #36]	; 0x24
   3b6a0:	ldr	r1, [sp, #144]	; 0x90
   3b6a2:	ldr	r0, [sp, #148]	; 0x94
   3b6a4:	adds	r1, r3, r1
   3b6a6:	ldr	r3, [sp, #40]	; 0x28
   3b6a8:	ldr	r4, [sp, #216]	; 0xd8
   3b6aa:	adc.w	sl, r3, r0
   3b6ae:	ldr	r3, [sp, #216]	; 0xd8
   3b6b0:	ldr	r0, [sp, #188]	; 0xbc
   3b6b2:	adds	r1, r1, r3
   3b6b4:	ldr	r3, [sp, #256]	; 0x100
   3b6b6:	adc.w	sl, sl, r3
   3b6ba:	ldr	r3, [sp, #224]	; 0xe0
   3b6bc:	eor.w	lr, sl, r3
   3b6c0:	ldr	r3, [sp, #220]	; 0xdc
   3b6c2:	eor.w	r6, r1, r3
   3b6c6:	ldr	r3, [sp, #184]	; 0xb8
   3b6c8:	adds.w	r3, r3, lr
   3b6cc:	eor.w	r8, r3, r4
   3b6d0:	ldr	r4, [sp, #256]	; 0x100
   3b6d2:	adcs	r0, r6
   3b6d4:	eor.w	r7, r0, r4
   3b6d8:	mov.w	fp, r8, lsr #24
   3b6dc:	orr.w	r4, fp, r7, lsl #8
   3b6e0:	lsrs	r7, r7, #24
   3b6e2:	orr.w	r9, r7, r8, lsl #8
   3b6e6:	ldr	r7, [sp, #84]	; 0x54
   3b6e8:	adds	r1, r7, r1
   3b6ea:	ldr	r7, [sp, #88]	; 0x58
   3b6ec:	adc.w	sl, r7, sl
   3b6f0:	adds	r1, r1, r4
   3b6f2:	str	r1, [sp, #144]	; 0x90
   3b6f4:	adc.w	r1, sl, r9
   3b6f8:	str	r1, [sp, #148]	; 0x94
   3b6fa:	ldr	r1, [sp, #144]	; 0x90
   3b6fc:	eor.w	lr, r1, lr
   3b700:	ldr	r1, [sp, #148]	; 0x94
   3b702:	eors	r6, r1
   3b704:	mov.w	r1, lr, lsr #16
   3b708:	orr.w	r8, r1, r6, lsl #16
   3b70c:	lsrs	r6, r6, #16
   3b70e:	adds.w	r3, r3, r8
   3b712:	orr.w	sl, r6, lr, lsl #16
   3b716:	adc.w	r0, r0, sl
   3b71a:	eors	r4, r3
   3b71c:	eor.w	r9, r0, r9
   3b720:	ldr	r6, [sp, #156]	; 0x9c
   3b722:	mov.w	r1, r9, lsl #1
   3b726:	orr.w	r1, r1, r4, lsr #31
   3b72a:	lsls	r4, r4, #1
   3b72c:	orr.w	fp, r4, r9, lsr #31
   3b730:	str	r1, [sp, #216]	; 0xd8
   3b732:	ldr	r4, [sp, #152]	; 0x98
   3b734:	ldr	r1, [sp, #4]
   3b736:	adds	r1, r1, r4
   3b738:	ldr	r4, [sp, #8]
   3b73a:	adc.w	r9, r4, r6
   3b73e:	ldr	r4, [sp, #244]	; 0xf4
   3b740:	adds.w	r1, r1, ip
   3b744:	adc.w	r9, r9, r4
   3b748:	eor.w	r7, r1, r8
   3b74c:	eor.w	lr, r9, sl
   3b750:	adds.w	r2, r2, lr
   3b754:	adc.w	r5, r7, r5
   3b758:	eor.w	ip, r2, ip
   3b75c:	eor.w	r6, r5, r4
   3b760:	mov.w	sl, ip, lsr #24
   3b764:	orr.w	r4, sl, r6, lsl #8
   3b768:	lsrs	r6, r6, #24
   3b76a:	orr.w	r8, r6, ip, lsl #8
   3b76e:	ldr	r6, [sp, #60]	; 0x3c
   3b770:	adds	r1, r6, r1
   3b772:	ldr	r6, [sp, #64]	; 0x40
   3b774:	adc.w	r9, r6, r9
   3b778:	adds	r1, r1, r4
   3b77a:	str	r1, [sp, #152]	; 0x98
   3b77c:	adc.w	r1, r9, r8
   3b780:	str	r1, [sp, #156]	; 0x9c
   3b782:	ldr	r1, [sp, #152]	; 0x98
   3b784:	eor.w	lr, r1, lr
   3b788:	ldr	r1, [sp, #156]	; 0x9c
   3b78a:	eors	r7, r1
   3b78c:	mov.w	r1, lr, lsr #16
   3b790:	orr.w	r1, r1, r7, lsl #16
   3b794:	lsrs	r7, r7, #16
   3b796:	str	r1, [sp, #220]	; 0xdc
   3b798:	orr.w	r1, r7, lr, lsl #16
   3b79c:	str	r1, [sp, #224]	; 0xe0
   3b79e:	ldr	r1, [sp, #220]	; 0xdc
   3b7a0:	adds	r2, r2, r1
   3b7a2:	str	r2, [sp, #176]	; 0xb0
   3b7a4:	ldr	r2, [sp, #224]	; 0xe0
   3b7a6:	ldr	r1, [sp, #168]	; 0xa8
   3b7a8:	adc.w	r2, r5, r2
   3b7ac:	str	r2, [sp, #180]	; 0xb4
   3b7ae:	ldr	r2, [sp, #176]	; 0xb0
   3b7b0:	eors	r4, r2
   3b7b2:	ldr	r2, [sp, #180]	; 0xb4
   3b7b4:	eor.w	r8, r2, r8
   3b7b8:	mov.w	r2, r8, lsl #1
   3b7bc:	orr.w	r2, r2, r4, lsr #31
   3b7c0:	lsls	r4, r4, #1
   3b7c2:	str	r2, [sp, #252]	; 0xfc
   3b7c4:	orr.w	r2, r4, r8, lsr #31
   3b7c8:	str	r2, [sp, #244]	; 0xf4
   3b7ca:	ldr	r2, [sp, #52]	; 0x34
   3b7cc:	ldr	r4, [sp, #172]	; 0xac
   3b7ce:	adds	r2, r2, r1
   3b7d0:	ldr	r1, [sp, #56]	; 0x38
   3b7d2:	adc.w	r7, r1, r4
   3b7d6:	ldr	r1, [sp, #240]	; 0xf0
   3b7d8:	adds	r2, r2, r1
   3b7da:	ldr	r1, [sp, #248]	; 0xf8
   3b7dc:	adc.w	r7, r1, r7
   3b7e0:	ldr	r1, [sp, #260]	; 0x104
   3b7e2:	eor.w	r4, r7, r1
   3b7e6:	ldr	r1, [sp, #228]	; 0xe4
   3b7e8:	adds	r3, r3, r4
   3b7ea:	eor.w	r9, r2, r1
   3b7ee:	ldr	r1, [sp, #240]	; 0xf0
   3b7f0:	adc.w	r0, r0, r9
   3b7f4:	eor.w	ip, r3, r1
   3b7f8:	ldr	r1, [sp, #248]	; 0xf8
   3b7fa:	eor.w	r5, r0, r1
   3b7fe:	mov.w	lr, ip, lsr #24
   3b802:	orr.w	r1, lr, r5, lsl #8
   3b806:	lsrs	r5, r5, #24
   3b808:	orr.w	r6, r5, ip, lsl #8
   3b80c:	ldr	r5, [sp, #28]
   3b80e:	adds	r2, r5, r2
   3b810:	ldr	r5, [sp, #32]
   3b812:	adc.w	r7, r5, r7
   3b816:	adds	r2, r2, r1
   3b818:	str	r2, [sp, #168]	; 0xa8
   3b81a:	adc.w	r2, r7, r6
   3b81e:	str	r2, [sp, #172]	; 0xac
   3b820:	ldr	r2, [sp, #168]	; 0xa8
   3b822:	eors	r4, r2
   3b824:	ldr	r2, [sp, #172]	; 0xac
   3b826:	eor.w	r2, r2, r9
   3b82a:	lsrs	r5, r4, #16
   3b82c:	orr.w	r5, r5, r2, lsl #16
   3b830:	mov.w	r9, r2, lsr #16
   3b834:	orr.w	r9, r9, r4, lsl #16
   3b838:	adds	r3, r3, r5
   3b83a:	str	r3, [sp, #184]	; 0xb8
   3b83c:	adc.w	r3, r0, r9
   3b840:	str	r3, [sp, #188]	; 0xbc
   3b842:	ldr	r3, [sp, #184]	; 0xb8
   3b844:	ldr	r2, [sp, #160]	; 0xa0
   3b846:	eors	r1, r3
   3b848:	ldr	r3, [sp, #188]	; 0xbc
   3b84a:	str	r5, [sp, #228]	; 0xe4
   3b84c:	eors	r6, r3
   3b84e:	lsls	r3, r6, #1
   3b850:	orr.w	r3, r3, r1, lsr #31
   3b854:	lsls	r1, r1, #1
   3b856:	str	r3, [sp, #248]	; 0xf8
   3b858:	orr.w	r3, r1, r6, lsr #31
   3b85c:	str	r3, [sp, #240]	; 0xf0
   3b85e:	ldr	r3, [sp, #76]	; 0x4c
   3b860:	adds	r3, r3, r2
   3b862:	ldr	r2, [sp, #80]	; 0x50
   3b864:	ldr	r1, [sp, #164]	; 0xa4
   3b866:	ldr	r0, [sp, #196]	; 0xc4
   3b868:	adc.w	ip, r2, r1
   3b86c:	ldr	r2, [sp, #216]	; 0xd8
   3b86e:	adds.w	r3, r3, fp
   3b872:	adc.w	ip, ip, r2
   3b876:	ldr	r2, [sp, #212]	; 0xd4
   3b878:	eor.w	r7, ip, r2
   3b87c:	ldr	r2, [sp, #208]	; 0xd0
   3b87e:	eor.w	r1, r3, r2
   3b882:	ldr	r2, [sp, #192]	; 0xc0
   3b884:	adds	r2, r2, r7
   3b886:	adc.w	r5, r0, r1
   3b88a:	ldr	r0, [sp, #216]	; 0xd8
   3b88c:	eor.w	fp, r2, fp
   3b890:	eors	r0, r5
   3b892:	mov.w	r4, fp, lsr #24
   3b896:	orr.w	r8, r4, r0, lsl #8
   3b89a:	lsrs	r0, r0, #24
   3b89c:	orr.w	r6, r0, fp, lsl #8
   3b8a0:	ldr	r0, [sp, #20]
   3b8a2:	ldr	r4, [sp, #264]	; 0x108
   3b8a4:	adds	r3, r0, r3
   3b8a6:	ldr	r0, [sp, #24]
   3b8a8:	adc.w	ip, r0, ip
   3b8ac:	adds.w	r3, r3, r8
   3b8b0:	str	r3, [sp, #160]	; 0xa0
   3b8b2:	adc.w	r3, ip, r6
   3b8b6:	str	r3, [sp, #164]	; 0xa4
   3b8b8:	ldr	r3, [sp, #160]	; 0xa0
   3b8ba:	ldr	r0, [sp, #148]	; 0x94
   3b8bc:	eors	r7, r3
   3b8be:	ldr	r3, [sp, #164]	; 0xa4
   3b8c0:	eors	r1, r3
   3b8c2:	lsrs	r3, r7, #16
   3b8c4:	orr.w	r3, r3, r1, lsl #16
   3b8c8:	lsrs	r1, r1, #16
   3b8ca:	str	r3, [sp, #208]	; 0xd0
   3b8cc:	orr.w	r3, r1, r7, lsl #16
   3b8d0:	str	r3, [sp, #212]	; 0xd4
   3b8d2:	ldr	r3, [sp, #208]	; 0xd0
   3b8d4:	ldr	r1, [sp, #144]	; 0x90
   3b8d6:	adds	r2, r2, r3
   3b8d8:	ldr	r3, [sp, #212]	; 0xd4
   3b8da:	eor.w	r8, r2, r8
   3b8de:	adc.w	r5, r3, r5
   3b8e2:	eors	r6, r5
   3b8e4:	lsls	r3, r6, #1
   3b8e6:	orr.w	r3, r3, r8, lsr #31
   3b8ea:	mov.w	r8, r8, lsl #1
   3b8ee:	str	r3, [sp, #256]	; 0x100
   3b8f0:	orr.w	r3, r8, r6, lsr #31
   3b8f4:	str	r3, [sp, #216]	; 0xd8
   3b8f6:	ldr	r3, [sp, #68]	; 0x44
   3b8f8:	adds	r1, r3, r1
   3b8fa:	ldr	r3, [sp, #72]	; 0x48
   3b8fc:	adc.w	sl, r3, r0
   3b900:	ldr	r3, [sp, #264]	; 0x108
   3b902:	ldr	r0, [sp, #204]	; 0xcc
   3b904:	adds	r1, r1, r3
   3b906:	ldr	r3, [sp, #268]	; 0x10c
   3b908:	adc.w	sl, sl, r3
   3b90c:	ldr	r3, [sp, #236]	; 0xec
   3b90e:	eor.w	lr, sl, r3
   3b912:	ldr	r3, [sp, #232]	; 0xe8
   3b914:	eor.w	r7, r1, r3
   3b918:	ldr	r3, [sp, #200]	; 0xc8
   3b91a:	adds.w	r3, r3, lr
   3b91e:	eor.w	r6, r3, r4
   3b922:	ldr	r4, [sp, #268]	; 0x10c
   3b924:	adcs	r0, r7
   3b926:	eor.w	ip, r0, r4
   3b92a:	mov.w	fp, r6, lsr #24
   3b92e:	orr.w	r4, fp, ip, lsl #8
   3b932:	mov.w	ip, ip, lsr #24
   3b936:	orr.w	r8, ip, r6, lsl #8
   3b93a:	ldr	r6, [sp, #92]	; 0x5c
   3b93c:	adds	r1, r6, r1
   3b93e:	ldr	r6, [sp, #96]	; 0x60
   3b940:	adc.w	sl, r6, sl
   3b944:	adds	r1, r1, r4
   3b946:	str	r1, [sp, #144]	; 0x90
   3b948:	adc.w	r1, sl, r8
   3b94c:	str	r1, [sp, #148]	; 0x94
   3b94e:	ldr	r1, [sp, #144]	; 0x90
   3b950:	eor.w	lr, r1, lr
   3b954:	ldr	r1, [sp, #148]	; 0x94
   3b956:	eors	r7, r1
   3b958:	mov.w	r1, lr, lsr #16
   3b95c:	orr.w	r1, r1, r7, lsl #16
   3b960:	lsrs	r7, r7, #16
   3b962:	str	r1, [sp, #232]	; 0xe8
   3b964:	orr.w	r1, r7, lr, lsl #16
   3b968:	str	r1, [sp, #236]	; 0xec
   3b96a:	ldr	r1, [sp, #232]	; 0xe8
   3b96c:	ldr	r7, [sp, #156]	; 0x9c
   3b96e:	adds	r3, r3, r1
   3b970:	ldr	r1, [sp, #236]	; 0xec
   3b972:	eor.w	r4, r4, r3
   3b976:	adc.w	r0, r1, r0
   3b97a:	eor.w	r8, r0, r8
   3b97e:	mov.w	r1, r8, lsl #1
   3b982:	orr.w	r6, r1, r4, lsr #31
   3b986:	lsls	r4, r4, #1
   3b988:	orr.w	fp, r4, r8, lsr #31
   3b98c:	ldr	r1, [sp, #108]	; 0x6c
   3b98e:	ldr	r4, [sp, #152]	; 0x98
   3b990:	adds	r1, r1, r4
   3b992:	ldr	r4, [sp, #112]	; 0x70
   3b994:	adc.w	sl, r4, r7
   3b998:	adds.w	r1, r1, fp
   3b99c:	ldr	r4, [sp, #228]	; 0xe4
   3b99e:	adc.w	sl, sl, r6
   3b9a2:	eor.w	lr, sl, r9
   3b9a6:	adds.w	r2, r2, lr
   3b9aa:	eor.w	r7, r1, r4
   3b9ae:	adc.w	r5, r7, r5
   3b9b2:	eor.w	fp, r2, fp
   3b9b6:	eor.w	ip, r5, r6
   3b9ba:	mov.w	r4, fp, lsr #24
   3b9be:	orr.w	r6, r4, ip, lsl #8
   3b9c2:	ldr	r4, [sp, #92]	; 0x5c
   3b9c4:	mov.w	ip, ip, lsr #24
   3b9c8:	adds	r1, r4, r1
   3b9ca:	ldr	r4, [sp, #96]	; 0x60
   3b9cc:	orr.w	r8, ip, fp, lsl #8
   3b9d0:	adc.w	sl, r4, sl
   3b9d4:	adds	r1, r1, r6
   3b9d6:	str	r1, [sp, #152]	; 0x98
   3b9d8:	adc.w	r1, sl, r8
   3b9dc:	str	r1, [sp, #156]	; 0x9c
   3b9de:	ldr	r1, [sp, #152]	; 0x98
   3b9e0:	eor.w	lr, r1, lr
   3b9e4:	ldr	r1, [sp, #156]	; 0x9c
   3b9e6:	eors	r7, r1
   3b9e8:	mov.w	r1, lr, lsr #16
   3b9ec:	orr.w	r1, r1, r7, lsl #16
   3b9f0:	lsrs	r7, r7, #16
   3b9f2:	str	r1, [sp, #228]	; 0xe4
   3b9f4:	orr.w	r1, r7, lr, lsl #16
   3b9f8:	str	r1, [sp, #260]	; 0x104
   3b9fa:	ldr	r1, [sp, #228]	; 0xe4
   3b9fc:	adds	r2, r2, r1
   3b9fe:	str	r2, [sp, #192]	; 0xc0
   3ba00:	ldr	r2, [sp, #260]	; 0x104
   3ba02:	ldr	r1, [sp, #168]	; 0xa8
   3ba04:	adc.w	r2, r5, r2
   3ba08:	str	r2, [sp, #196]	; 0xc4
   3ba0a:	ldr	r2, [sp, #192]	; 0xc0
   3ba0c:	eors	r6, r2
   3ba0e:	ldr	r2, [sp, #196]	; 0xc4
   3ba10:	eor.w	r8, r2, r8
   3ba14:	mov.w	r2, r8, lsl #1
   3ba18:	orr.w	r2, r2, r6, lsr #31
   3ba1c:	lsls	r6, r6, #1
   3ba1e:	str	r2, [sp, #268]	; 0x10c
   3ba20:	orr.w	r2, r6, r8, lsr #31
   3ba24:	str	r2, [sp, #264]	; 0x108
   3ba26:	ldr	r2, [sp, #60]	; 0x3c
   3ba28:	adds	r2, r2, r1
   3ba2a:	ldr	r1, [sp, #64]	; 0x40
   3ba2c:	ldr	r4, [sp, #172]	; 0xac
   3ba2e:	ldr	r5, [sp, #252]	; 0xfc
   3ba30:	adc.w	r7, r1, r4
   3ba34:	ldr	r1, [sp, #244]	; 0xf4
   3ba36:	ldr	r4, [sp, #244]	; 0xf4
   3ba38:	adds	r2, r2, r1
   3ba3a:	ldr	r1, [sp, #252]	; 0xfc
   3ba3c:	adc.w	r7, r1, r7
   3ba40:	ldr	r1, [sp, #212]	; 0xd4
   3ba42:	eor.w	r6, r7, r1
   3ba46:	ldr	r1, [sp, #208]	; 0xd0
   3ba48:	adds	r3, r3, r6
   3ba4a:	eor.w	r1, r2, r1
   3ba4e:	eor.w	r4, r3, r4
   3ba52:	adc.w	r0, r1, r0
   3ba56:	eors	r5, r0
   3ba58:	mov.w	r8, r4, lsr #24
   3ba5c:	orr.w	ip, r8, r5, lsl #8
   3ba60:	lsrs	r5, r5, #24
   3ba62:	orr.w	lr, r5, r4, lsl #8
   3ba66:	ldr	r4, [sp, #116]	; 0x74
   3ba68:	adds	r2, r4, r2
   3ba6a:	ldr	r4, [sp, #120]	; 0x78
   3ba6c:	adc.w	r7, r4, r7
   3ba70:	adds.w	r2, r2, ip
   3ba74:	str	r2, [sp, #168]	; 0xa8
   3ba76:	adc.w	r2, r7, lr
   3ba7a:	str	r2, [sp, #172]	; 0xac
   3ba7c:	ldr	r2, [sp, #168]	; 0xa8
   3ba7e:	eors	r6, r2
   3ba80:	ldr	r2, [sp, #172]	; 0xac
   3ba82:	eors	r1, r2
   3ba84:	lsrs	r2, r6, #16
   3ba86:	orr.w	r2, r2, r1, lsl #16
   3ba8a:	lsrs	r1, r1, #16
   3ba8c:	str	r2, [sp, #208]	; 0xd0
   3ba8e:	orr.w	r2, r1, r6, lsl #16
   3ba92:	str	r2, [sp, #212]	; 0xd4
   3ba94:	ldr	r2, [sp, #208]	; 0xd0
   3ba96:	ldr	r1, [sp, #164]	; 0xa4
   3ba98:	adds	r3, r3, r2
   3ba9a:	str	r3, [sp, #200]	; 0xc8
   3ba9c:	ldr	r3, [sp, #212]	; 0xd4
   3ba9e:	adc.w	r3, r0, r3
   3baa2:	str	r3, [sp, #204]	; 0xcc
   3baa4:	ldr	r2, [sp, #204]	; 0xcc
   3baa6:	ldr	r3, [sp, #200]	; 0xc8
   3baa8:	eor.w	lr, r2, lr
   3baac:	eor.w	r3, r3, ip
   3bab0:	mov.w	r2, lr, lsl #1
   3bab4:	orr.w	r2, r2, r3, lsr #31
   3bab8:	mov.w	ip, r3, lsl #1
   3babc:	str	r2, [sp, #244]	; 0xf4
   3babe:	orr.w	ip, ip, lr, lsr #31
   3bac2:	ldr	r2, [sp, #160]	; 0xa0
   3bac4:	ldr	r3, [sp, #100]	; 0x64
   3bac6:	adds	r3, r3, r2
   3bac8:	ldr	r2, [sp, #104]	; 0x68
   3baca:	adc.w	lr, r2, r1
   3bace:	ldr	r2, [sp, #240]	; 0xf0
   3bad0:	adds	r3, r3, r2
   3bad2:	ldr	r2, [sp, #248]	; 0xf8
   3bad4:	adc.w	lr, lr, r2
   3bad8:	ldr	r2, [sp, #236]	; 0xec
   3bada:	eor.w	r6, lr, r2
   3bade:	ldr	r2, [sp, #232]	; 0xe8
   3bae0:	eor.w	r0, r3, r2
   3bae4:	ldr	r2, [sp, #176]	; 0xb0
   3bae6:	ldr	r1, [sp, #180]	; 0xb4
   3bae8:	adds	r2, r2, r6
   3baea:	adc.w	r5, r1, r0
   3baee:	ldr	r1, [sp, #240]	; 0xf0
   3baf0:	eor.w	r8, r2, r1
   3baf4:	ldr	r1, [sp, #248]	; 0xf8
   3baf6:	eor.w	r4, r5, r1
   3bafa:	mov.w	r9, r8, lsr #24
   3bafe:	orr.w	r1, r9, r4, lsl #8
   3bb02:	lsrs	r4, r4, #24
   3bb04:	orr.w	r7, r4, r8, lsl #8
   3bb08:	ldr	r4, [sp, #12]
   3bb0a:	adds	r3, r4, r3
   3bb0c:	ldr	r4, [sp, #16]
   3bb0e:	adc.w	lr, r4, lr
   3bb12:	adds	r3, r3, r1
   3bb14:	str	r3, [sp, #160]	; 0xa0
   3bb16:	adc.w	r3, lr, r7
   3bb1a:	str	r3, [sp, #164]	; 0xa4
   3bb1c:	ldr	r3, [sp, #160]	; 0xa0
   3bb1e:	ldr	r4, [sp, #216]	; 0xd8
   3bb20:	eors	r6, r3
   3bb22:	ldr	r3, [sp, #164]	; 0xa4
   3bb24:	eors	r0, r3
   3bb26:	lsrs	r3, r6, #16
   3bb28:	orr.w	r3, r3, r0, lsl #16
   3bb2c:	lsrs	r0, r0, #16
   3bb2e:	str	r3, [sp, #232]	; 0xe8
   3bb30:	orr.w	r3, r0, r6, lsl #16
   3bb34:	str	r3, [sp, #236]	; 0xec
   3bb36:	ldr	r3, [sp, #232]	; 0xe8
   3bb38:	ldr	r0, [sp, #148]	; 0x94
   3bb3a:	adds	r2, r2, r3
   3bb3c:	ldr	r3, [sp, #236]	; 0xec
   3bb3e:	eor.w	r1, r1, r2
   3bb42:	adc.w	r5, r3, r5
   3bb46:	eors	r7, r5
   3bb48:	lsls	r3, r7, #1
   3bb4a:	orr.w	r3, r3, r1, lsr #31
   3bb4e:	lsls	r1, r1, #1
   3bb50:	str	r3, [sp, #248]	; 0xf8
   3bb52:	orr.w	r3, r1, r7, lsr #31
   3bb56:	ldr	r1, [sp, #144]	; 0x90
   3bb58:	str	r3, [sp, #240]	; 0xf0
   3bb5a:	ldr	r3, [sp, #28]
   3bb5c:	adds	r1, r3, r1
   3bb5e:	ldr	r3, [sp, #32]
   3bb60:	adc.w	sl, r3, r0
   3bb64:	ldr	r3, [sp, #216]	; 0xd8
   3bb66:	ldr	r0, [sp, #188]	; 0xbc
   3bb68:	adds	r1, r1, r3
   3bb6a:	ldr	r3, [sp, #256]	; 0x100
   3bb6c:	adc.w	sl, sl, r3
   3bb70:	ldr	r3, [sp, #224]	; 0xe0
   3bb72:	eor.w	lr, sl, r3
   3bb76:	ldr	r3, [sp, #220]	; 0xdc
   3bb78:	eor.w	r6, r1, r3
   3bb7c:	ldr	r3, [sp, #184]	; 0xb8
   3bb7e:	adds.w	r3, r3, lr
   3bb82:	eor.w	r8, r3, r4
   3bb86:	ldr	r4, [sp, #256]	; 0x100
   3bb88:	adcs	r0, r6
   3bb8a:	eor.w	r7, r0, r4
   3bb8e:	mov.w	fp, r8, lsr #24
   3bb92:	orr.w	r4, fp, r7, lsl #8
   3bb96:	lsrs	r7, r7, #24
   3bb98:	orr.w	r9, r7, r8, lsl #8
   3bb9c:	ldr	r7, [sp, #76]	; 0x4c
   3bb9e:	adds	r1, r7, r1
   3bba0:	ldr	r7, [sp, #80]	; 0x50
   3bba2:	adc.w	sl, r7, sl
   3bba6:	adds	r1, r1, r4
   3bba8:	str	r1, [sp, #144]	; 0x90
   3bbaa:	adc.w	r1, sl, r9
   3bbae:	str	r1, [sp, #148]	; 0x94
   3bbb0:	ldr	r1, [sp, #144]	; 0x90
   3bbb2:	eor.w	lr, r1, lr
   3bbb6:	ldr	r1, [sp, #148]	; 0x94
   3bbb8:	eors	r6, r1
   3bbba:	mov.w	r1, lr, lsr #16
   3bbbe:	orr.w	r8, r1, r6, lsl #16
   3bbc2:	lsrs	r6, r6, #16
   3bbc4:	adds.w	r3, r3, r8
   3bbc8:	orr.w	sl, r6, lr, lsl #16
   3bbcc:	adc.w	r0, r0, sl
   3bbd0:	eors	r4, r3
   3bbd2:	eor.w	r9, r0, r9
   3bbd6:	ldr	r6, [sp, #156]	; 0x9c
   3bbd8:	mov.w	r1, r9, lsl #1
   3bbdc:	orr.w	r1, r1, r4, lsr #31
   3bbe0:	lsls	r4, r4, #1
   3bbe2:	orr.w	fp, r4, r9, lsr #31
   3bbe6:	str	r1, [sp, #216]	; 0xd8
   3bbe8:	ldr	r4, [sp, #152]	; 0x98
   3bbea:	ldr	r1, [sp, #44]	; 0x2c
   3bbec:	adds	r1, r1, r4
   3bbee:	ldr	r4, [sp, #48]	; 0x30
   3bbf0:	adc.w	r9, r4, r6
   3bbf4:	ldr	r4, [sp, #244]	; 0xf4
   3bbf6:	adds.w	r1, r1, ip
   3bbfa:	adc.w	r9, r9, r4
   3bbfe:	eor.w	r7, r1, r8
   3bc02:	eor.w	lr, r9, sl
   3bc06:	adds.w	r2, r2, lr
   3bc0a:	adc.w	r5, r7, r5
   3bc0e:	eor.w	ip, r2, ip
   3bc12:	eor.w	r6, r5, r4
   3bc16:	mov.w	sl, ip, lsr #24
   3bc1a:	orr.w	r4, sl, r6, lsl #8
   3bc1e:	lsrs	r6, r6, #24
   3bc20:	orr.w	r8, r6, ip, lsl #8
   3bc24:	ldr	r6, [sp, #4]
   3bc26:	adds	r1, r6, r1
   3bc28:	ldr	r6, [sp, #8]
   3bc2a:	adc.w	r9, r6, r9
   3bc2e:	adds	r1, r1, r4
   3bc30:	str	r1, [sp, #152]	; 0x98
   3bc32:	adc.w	r1, r9, r8
   3bc36:	str	r1, [sp, #156]	; 0x9c
   3bc38:	ldr	r1, [sp, #152]	; 0x98
   3bc3a:	eor.w	lr, r1, lr
   3bc3e:	ldr	r1, [sp, #156]	; 0x9c
   3bc40:	eors	r7, r1
   3bc42:	mov.w	r1, lr, lsr #16
   3bc46:	orr.w	r1, r1, r7, lsl #16
   3bc4a:	lsrs	r7, r7, #16
   3bc4c:	str	r1, [sp, #220]	; 0xdc
   3bc4e:	orr.w	r1, r7, lr, lsl #16
   3bc52:	str	r1, [sp, #224]	; 0xe0
   3bc54:	ldr	r1, [sp, #220]	; 0xdc
   3bc56:	adds	r2, r2, r1
   3bc58:	str	r2, [sp, #176]	; 0xb0
   3bc5a:	ldr	r2, [sp, #224]	; 0xe0
   3bc5c:	ldr	r1, [sp, #168]	; 0xa8
   3bc5e:	adc.w	r2, r5, r2
   3bc62:	str	r2, [sp, #180]	; 0xb4
   3bc64:	ldr	r2, [sp, #176]	; 0xb0
   3bc66:	eors	r4, r2
   3bc68:	ldr	r2, [sp, #180]	; 0xb4
   3bc6a:	eor.w	r8, r2, r8
   3bc6e:	mov.w	r2, r8, lsl #1
   3bc72:	orr.w	r2, r2, r4, lsr #31
   3bc76:	lsls	r4, r4, #1
   3bc78:	str	r2, [sp, #252]	; 0xfc
   3bc7a:	orr.w	r2, r4, r8, lsr #31
   3bc7e:	str	r2, [sp, #244]	; 0xf4
   3bc80:	ldr	r2, [sp, #124]	; 0x7c
   3bc82:	ldr	r4, [sp, #172]	; 0xac
   3bc84:	adds	r2, r2, r1
   3bc86:	ldr	r1, [sp, #128]	; 0x80
   3bc88:	adc.w	r7, r1, r4
   3bc8c:	ldr	r1, [sp, #240]	; 0xf0
   3bc8e:	adds	r2, r2, r1
   3bc90:	ldr	r1, [sp, #248]	; 0xf8
   3bc92:	adc.w	r7, r1, r7
   3bc96:	ldr	r1, [sp, #260]	; 0x104
   3bc98:	eor.w	r4, r7, r1
   3bc9c:	ldr	r1, [sp, #228]	; 0xe4
   3bc9e:	adds	r3, r3, r4
   3bca0:	eor.w	r9, r2, r1
   3bca4:	ldr	r1, [sp, #240]	; 0xf0
   3bca6:	adc.w	r0, r0, r9
   3bcaa:	eor.w	ip, r3, r1
   3bcae:	ldr	r1, [sp, #248]	; 0xf8
   3bcb0:	eor.w	r5, r0, r1
   3bcb4:	mov.w	lr, ip, lsr #24
   3bcb8:	orr.w	r1, lr, r5, lsl #8
   3bcbc:	lsrs	r5, r5, #24
   3bcbe:	orr.w	r6, r5, ip, lsl #8
   3bcc2:	ldr	r5, [sp, #36]	; 0x24
   3bcc4:	adds	r2, r5, r2
   3bcc6:	ldr	r5, [sp, #40]	; 0x28
   3bcc8:	adc.w	r7, r5, r7
   3bccc:	adds	r2, r2, r1
   3bcce:	str	r2, [sp, #168]	; 0xa8
   3bcd0:	adc.w	r2, r7, r6
   3bcd4:	str	r2, [sp, #172]	; 0xac
   3bcd6:	ldr	r2, [sp, #168]	; 0xa8
   3bcd8:	eors	r4, r2
   3bcda:	ldr	r2, [sp, #172]	; 0xac
   3bcdc:	eor.w	r2, r2, r9
   3bce0:	lsrs	r5, r4, #16
   3bce2:	orr.w	r5, r5, r2, lsl #16
   3bce6:	mov.w	r9, r2, lsr #16
   3bcea:	orr.w	r9, r9, r4, lsl #16
   3bcee:	adds	r3, r3, r5
   3bcf0:	str	r3, [sp, #184]	; 0xb8
   3bcf2:	adc.w	r3, r0, r9
   3bcf6:	str	r3, [sp, #188]	; 0xbc
   3bcf8:	ldr	r3, [sp, #184]	; 0xb8
   3bcfa:	ldr	r2, [sp, #160]	; 0xa0
   3bcfc:	eors	r1, r3
   3bcfe:	ldr	r3, [sp, #188]	; 0xbc
   3bd00:	ldr	r0, [sp, #196]	; 0xc4
   3bd02:	eors	r6, r3
   3bd04:	str	r5, [sp, #228]	; 0xe4
   3bd06:	lsls	r3, r6, #1
   3bd08:	orr.w	r3, r3, r1, lsr #31
   3bd0c:	lsls	r1, r1, #1
   3bd0e:	str	r3, [sp, #248]	; 0xf8
   3bd10:	orr.w	r3, r1, r6, lsr #31
   3bd14:	str	r3, [sp, #240]	; 0xf0
   3bd16:	ldr	r3, [sp, #68]	; 0x44
   3bd18:	ldr	r1, [sp, #164]	; 0xa4
   3bd1a:	adds	r3, r3, r2
   3bd1c:	ldr	r2, [sp, #72]	; 0x48
   3bd1e:	adc.w	ip, r2, r1
   3bd22:	ldr	r2, [sp, #216]	; 0xd8
   3bd24:	adds.w	r3, r3, fp
   3bd28:	adc.w	ip, ip, r2
   3bd2c:	ldr	r2, [sp, #212]	; 0xd4
   3bd2e:	eor.w	r7, ip, r2
   3bd32:	ldr	r2, [sp, #208]	; 0xd0
   3bd34:	eor.w	r1, r3, r2
   3bd38:	ldr	r2, [sp, #192]	; 0xc0
   3bd3a:	adds	r2, r2, r7
   3bd3c:	adc.w	r5, r0, r1
   3bd40:	ldr	r0, [sp, #216]	; 0xd8
   3bd42:	eor.w	fp, r2, fp
   3bd46:	eors	r0, r5
   3bd48:	mov.w	r4, fp, lsr #24
   3bd4c:	orr.w	r8, r4, r0, lsl #8
   3bd50:	lsrs	r0, r0, #24
   3bd52:	orr.w	r6, r0, fp, lsl #8
   3bd56:	ldr	r0, [sp, #52]	; 0x34
   3bd58:	adds	r3, r0, r3
   3bd5a:	ldr	r0, [sp, #56]	; 0x38
   3bd5c:	adc.w	ip, r0, ip
   3bd60:	adds.w	r3, r3, r8
   3bd64:	str	r3, [sp, #160]	; 0xa0
   3bd66:	adc.w	r3, ip, r6
   3bd6a:	str	r3, [sp, #164]	; 0xa4
   3bd6c:	ldr	r3, [sp, #160]	; 0xa0
   3bd6e:	eors	r7, r3
   3bd70:	ldr	r3, [sp, #164]	; 0xa4
   3bd72:	eors	r1, r3
   3bd74:	lsrs	r3, r7, #16
   3bd76:	orr.w	r3, r3, r1, lsl #16
   3bd7a:	lsrs	r1, r1, #16
   3bd7c:	str	r3, [sp, #208]	; 0xd0
   3bd7e:	orr.w	r3, r1, r7, lsl #16
   3bd82:	str	r3, [sp, #212]	; 0xd4
   3bd84:	ldr	r3, [sp, #208]	; 0xd0
   3bd86:	ldr	r1, [sp, #144]	; 0x90
   3bd88:	adds	r2, r2, r3
   3bd8a:	ldr	r3, [sp, #212]	; 0xd4
   3bd8c:	eor.w	r8, r2, r8
   3bd90:	ldr	r0, [sp, #148]	; 0x94
   3bd92:	adc.w	r5, r3, r5
   3bd96:	ldr	r4, [sp, #264]	; 0x108
   3bd98:	eors	r6, r5
   3bd9a:	lsls	r3, r6, #1
   3bd9c:	orr.w	r3, r3, r8, lsr #31
   3bda0:	mov.w	r8, r8, lsl #1
   3bda4:	str	r3, [sp, #256]	; 0x100
   3bda6:	orr.w	r3, r8, r6, lsr #31
   3bdaa:	str	r3, [sp, #216]	; 0xd8
   3bdac:	ldr	r3, [sp, #20]
   3bdae:	adds	r1, r3, r1
   3bdb0:	ldr	r3, [sp, #24]
   3bdb2:	adc.w	sl, r3, r0
   3bdb6:	ldr	r3, [sp, #264]	; 0x108
   3bdb8:	ldr	r0, [sp, #204]	; 0xcc
   3bdba:	adds	r1, r1, r3
   3bdbc:	ldr	r3, [sp, #268]	; 0x10c
   3bdbe:	adc.w	sl, sl, r3
   3bdc2:	ldr	r3, [sp, #236]	; 0xec
   3bdc4:	eor.w	lr, sl, r3
   3bdc8:	ldr	r3, [sp, #232]	; 0xe8
   3bdca:	eor.w	r7, r1, r3
   3bdce:	ldr	r3, [sp, #200]	; 0xc8
   3bdd0:	adds.w	r3, r3, lr
   3bdd4:	eor.w	r6, r3, r4
   3bdd8:	ldr	r4, [sp, #268]	; 0x10c
   3bdda:	adcs	r0, r7
   3bddc:	eor.w	ip, r0, r4
   3bde0:	mov.w	fp, r6, lsr #24
   3bde4:	orr.w	r4, fp, ip, lsl #8
   3bde8:	mov.w	ip, ip, lsr #24
   3bdec:	orr.w	r8, ip, r6, lsl #8
   3bdf0:	ldr	r6, [sp, #84]	; 0x54
   3bdf2:	adds	r1, r6, r1
   3bdf4:	ldr	r6, [sp, #88]	; 0x58
   3bdf6:	adc.w	sl, r6, sl
   3bdfa:	adds	r1, r1, r4
   3bdfc:	str	r1, [sp, #144]	; 0x90
   3bdfe:	adc.w	r1, sl, r8
   3be02:	str	r1, [sp, #148]	; 0x94
   3be04:	ldr	r1, [sp, #144]	; 0x90
   3be06:	eor.w	lr, r1, lr
   3be0a:	ldr	r1, [sp, #148]	; 0x94
   3be0c:	eors	r7, r1
   3be0e:	mov.w	r1, lr, lsr #16
   3be12:	orr.w	r1, r1, r7, lsl #16
   3be16:	lsrs	r7, r7, #16
   3be18:	str	r1, [sp, #232]	; 0xe8
   3be1a:	orr.w	r1, r7, lr, lsl #16
   3be1e:	str	r1, [sp, #236]	; 0xec
   3be20:	ldr	r1, [sp, #232]	; 0xe8
   3be22:	ldr	r7, [sp, #156]	; 0x9c
   3be24:	adds	r3, r3, r1
   3be26:	ldr	r1, [sp, #236]	; 0xec
   3be28:	eor.w	r4, r4, r3
   3be2c:	adc.w	r0, r1, r0
   3be30:	eor.w	r8, r0, r8
   3be34:	mov.w	r1, r8, lsl #1
   3be38:	orr.w	r6, r1, r4, lsr #31
   3be3c:	lsls	r4, r4, #1
   3be3e:	orr.w	fp, r4, r8, lsr #31
   3be42:	ldr	r1, [sp, #52]	; 0x34
   3be44:	ldr	r4, [sp, #152]	; 0x98
   3be46:	adds	r1, r1, r4
   3be48:	ldr	r4, [sp, #56]	; 0x38
   3be4a:	adc.w	sl, r4, r7
   3be4e:	adds.w	r1, r1, fp
   3be52:	adc.w	sl, sl, r6
   3be56:	ldr	r4, [sp, #228]	; 0xe4
   3be58:	eor.w	lr, sl, r9
   3be5c:	adds.w	r2, r2, lr
   3be60:	eor.w	r7, r1, r4
   3be64:	adc.w	r5, r7, r5
   3be68:	eor.w	fp, r2, fp
   3be6c:	eor.w	ip, r5, r6
   3be70:	mov.w	r4, fp, lsr #24
   3be74:	orr.w	r6, r4, ip, lsl #8
   3be78:	ldr	r4, [sp, #124]	; 0x7c
   3be7a:	mov.w	ip, ip, lsr #24
   3be7e:	adds	r1, r4, r1
   3be80:	ldr	r4, [sp, #128]	; 0x80
   3be82:	orr.w	r8, ip, fp, lsl #8
   3be86:	adc.w	sl, r4, sl
   3be8a:	adds	r1, r1, r6
   3be8c:	str	r1, [sp, #152]	; 0x98
   3be8e:	adc.w	r1, sl, r8
   3be92:	str	r1, [sp, #156]	; 0x9c
   3be94:	ldr	r1, [sp, #152]	; 0x98
   3be96:	ldr	r4, [sp, #172]	; 0xac
   3be98:	eor.w	lr, r1, lr
   3be9c:	ldr	r1, [sp, #156]	; 0x9c
   3be9e:	eors	r7, r1
   3bea0:	mov.w	r1, lr, lsr #16
   3bea4:	orr.w	r1, r1, r7, lsl #16
   3bea8:	lsrs	r7, r7, #16
   3beaa:	str	r1, [sp, #228]	; 0xe4
   3beac:	orr.w	r1, r7, lr, lsl #16
   3beb0:	str	r1, [sp, #260]	; 0x104
   3beb2:	ldr	r1, [sp, #228]	; 0xe4
   3beb4:	adds	r2, r2, r1
   3beb6:	str	r2, [sp, #192]	; 0xc0
   3beb8:	ldr	r2, [sp, #260]	; 0x104
   3beba:	ldr	r1, [sp, #168]	; 0xa8
   3bebc:	adc.w	r2, r5, r2
   3bec0:	str	r2, [sp, #196]	; 0xc4
   3bec2:	ldr	r2, [sp, #192]	; 0xc0
   3bec4:	ldr	r5, [sp, #252]	; 0xfc
   3bec6:	eors	r6, r2
   3bec8:	ldr	r2, [sp, #196]	; 0xc4
   3beca:	eor.w	r8, r2, r8
   3bece:	mov.w	r2, r8, lsl #1
   3bed2:	orr.w	r2, r2, r6, lsr #31
   3bed6:	lsls	r6, r6, #1
   3bed8:	str	r2, [sp, #268]	; 0x10c
   3beda:	orr.w	r2, r6, r8, lsr #31
   3bede:	str	r2, [sp, #264]	; 0x108
   3bee0:	ldr	r2, [sp, #116]	; 0x74
   3bee2:	adds	r2, r2, r1
   3bee4:	ldr	r1, [sp, #120]	; 0x78
   3bee6:	adc.w	r7, r1, r4
   3beea:	ldr	r1, [sp, #244]	; 0xf4
   3beec:	ldr	r4, [sp, #244]	; 0xf4
   3beee:	adds	r2, r2, r1
   3bef0:	ldr	r1, [sp, #252]	; 0xfc
   3bef2:	adc.w	r7, r1, r7
   3bef6:	ldr	r1, [sp, #212]	; 0xd4
   3bef8:	eor.w	r6, r7, r1
   3befc:	ldr	r1, [sp, #208]	; 0xd0
   3befe:	adds	r3, r3, r6
   3bf00:	eor.w	r1, r2, r1
   3bf04:	eor.w	r4, r3, r4
   3bf08:	adc.w	r0, r1, r0
   3bf0c:	eors	r5, r0
   3bf0e:	mov.w	r8, r4, lsr #24
   3bf12:	orr.w	ip, r8, r5, lsl #8
   3bf16:	lsrs	r5, r5, #24
   3bf18:	orr.w	lr, r5, r4, lsl #8
   3bf1c:	ldr	r4, [sp, #76]	; 0x4c
   3bf1e:	adds	r2, r4, r2
   3bf20:	ldr	r4, [sp, #80]	; 0x50
   3bf22:	adc.w	r7, r4, r7
   3bf26:	adds.w	r2, r2, ip
   3bf2a:	str	r2, [sp, #168]	; 0xa8
   3bf2c:	adc.w	r2, r7, lr
   3bf30:	str	r2, [sp, #172]	; 0xac
   3bf32:	ldr	r2, [sp, #168]	; 0xa8
   3bf34:	eors	r6, r2
   3bf36:	ldr	r2, [sp, #172]	; 0xac
   3bf38:	eors	r1, r2
   3bf3a:	lsrs	r2, r6, #16
   3bf3c:	orr.w	r2, r2, r1, lsl #16
   3bf40:	lsrs	r1, r1, #16
   3bf42:	str	r2, [sp, #208]	; 0xd0
   3bf44:	orr.w	r2, r1, r6, lsl #16
   3bf48:	str	r2, [sp, #212]	; 0xd4
   3bf4a:	ldr	r2, [sp, #208]	; 0xd0
   3bf4c:	ldr	r1, [sp, #164]	; 0xa4
   3bf4e:	adds	r3, r3, r2
   3bf50:	str	r3, [sp, #200]	; 0xc8
   3bf52:	ldr	r3, [sp, #212]	; 0xd4
   3bf54:	adc.w	r3, r0, r3
   3bf58:	str	r3, [sp, #204]	; 0xcc
   3bf5a:	ldr	r2, [sp, #204]	; 0xcc
   3bf5c:	ldr	r3, [sp, #200]	; 0xc8
   3bf5e:	eor.w	lr, r2, lr
   3bf62:	eor.w	r3, r3, ip
   3bf66:	mov.w	r2, lr, lsl #1
   3bf6a:	orr.w	r2, r2, r3, lsr #31
   3bf6e:	mov.w	ip, r3, lsl #1
   3bf72:	str	r2, [sp, #244]	; 0xf4
   3bf74:	orr.w	ip, ip, lr, lsr #31
   3bf78:	ldr	r2, [sp, #160]	; 0xa0
   3bf7a:	ldr	r3, [sp, #92]	; 0x5c
   3bf7c:	adds	r3, r3, r2
   3bf7e:	ldr	r2, [sp, #96]	; 0x60
   3bf80:	adc.w	lr, r2, r1
   3bf84:	ldr	r2, [sp, #240]	; 0xf0
   3bf86:	ldr	r1, [sp, #180]	; 0xb4
   3bf88:	adds	r3, r3, r2
   3bf8a:	ldr	r2, [sp, #248]	; 0xf8
   3bf8c:	adc.w	lr, lr, r2
   3bf90:	ldr	r2, [sp, #236]	; 0xec
   3bf92:	eor.w	r6, lr, r2
   3bf96:	ldr	r2, [sp, #232]	; 0xe8
   3bf98:	eor.w	r0, r3, r2
   3bf9c:	ldr	r2, [sp, #176]	; 0xb0
   3bf9e:	adds	r2, r2, r6
   3bfa0:	adc.w	r5, r1, r0
   3bfa4:	ldr	r1, [sp, #240]	; 0xf0
   3bfa6:	eor.w	r8, r2, r1
   3bfaa:	ldr	r1, [sp, #248]	; 0xf8
   3bfac:	eor.w	r4, r5, r1
   3bfb0:	mov.w	r9, r8, lsr #24
   3bfb4:	orr.w	r1, r9, r4, lsl #8
   3bfb8:	lsrs	r4, r4, #24
   3bfba:	orr.w	r7, r4, r8, lsl #8
   3bfbe:	ldr	r4, [sp, #28]
   3bfc0:	adds	r3, r4, r3
   3bfc2:	ldr	r4, [sp, #32]
   3bfc4:	adc.w	lr, r4, lr
   3bfc8:	adds	r3, r3, r1
   3bfca:	str	r3, [sp, #160]	; 0xa0
   3bfcc:	adc.w	r3, lr, r7
   3bfd0:	str	r3, [sp, #164]	; 0xa4
   3bfd2:	ldr	r3, [sp, #160]	; 0xa0
   3bfd4:	eors	r6, r3
   3bfd6:	ldr	r3, [sp, #164]	; 0xa4
   3bfd8:	eors	r0, r3
   3bfda:	lsrs	r3, r6, #16
   3bfdc:	orr.w	r3, r3, r0, lsl #16
   3bfe0:	lsrs	r0, r0, #16
   3bfe2:	str	r3, [sp, #232]	; 0xe8
   3bfe4:	orr.w	r3, r0, r6, lsl #16
   3bfe8:	str	r3, [sp, #236]	; 0xec
   3bfea:	ldr	r3, [sp, #232]	; 0xe8
   3bfec:	adds	r2, r2, r3
   3bfee:	ldr	r3, [sp, #236]	; 0xec
   3bff0:	eor.w	r1, r1, r2
   3bff4:	adc.w	r5, r3, r5
   3bff8:	eors	r7, r5
   3bffa:	lsls	r3, r7, #1
   3bffc:	orr.w	r3, r3, r1, lsr #31
   3c000:	lsls	r1, r1, #1
   3c002:	str	r3, [sp, #248]	; 0xf8
   3c004:	orr.w	r3, r1, r7, lsr #31
   3c008:	str	r3, [sp, #240]	; 0xf0
   3c00a:	ldr	r3, [sp, #4]
   3c00c:	ldr	r1, [sp, #144]	; 0x90
   3c00e:	ldr	r0, [sp, #148]	; 0x94
   3c010:	adds	r1, r3, r1
   3c012:	ldr	r3, [sp, #8]
   3c014:	ldr	r4, [sp, #216]	; 0xd8
   3c016:	adc.w	sl, r3, r0
   3c01a:	ldr	r3, [sp, #216]	; 0xd8
   3c01c:	ldr	r0, [sp, #188]	; 0xbc
   3c01e:	adds	r1, r1, r3
   3c020:	ldr	r3, [sp, #256]	; 0x100
   3c022:	adc.w	sl, sl, r3
   3c026:	ldr	r3, [sp, #224]	; 0xe0
   3c028:	eor.w	lr, sl, r3
   3c02c:	ldr	r3, [sp, #220]	; 0xdc
   3c02e:	eor.w	r6, r1, r3
   3c032:	ldr	r3, [sp, #184]	; 0xb8
   3c034:	adds.w	r3, r3, lr
   3c038:	eor.w	r8, r3, r4
   3c03c:	ldr	r4, [sp, #256]	; 0x100
   3c03e:	adcs	r0, r6
   3c040:	eor.w	r7, r0, r4
   3c044:	mov.w	fp, r8, lsr #24
   3c048:	orr.w	r4, fp, r7, lsl #8
   3c04c:	lsrs	r7, r7, #24
   3c04e:	orr.w	r9, r7, r8, lsl #8
   3c052:	ldr	r7, [sp, #68]	; 0x44
   3c054:	adds	r1, r7, r1
   3c056:	ldr	r7, [sp, #72]	; 0x48
   3c058:	adc.w	sl, r7, sl
   3c05c:	adds	r1, r1, r4
   3c05e:	str	r1, [sp, #144]	; 0x90
   3c060:	adc.w	r1, sl, r9
   3c064:	str	r1, [sp, #148]	; 0x94
   3c066:	ldr	r1, [sp, #144]	; 0x90
   3c068:	eor.w	lr, r1, lr
   3c06c:	ldr	r1, [sp, #148]	; 0x94
   3c06e:	eors	r6, r1
   3c070:	mov.w	r1, lr, lsr #16
   3c074:	orr.w	r8, r1, r6, lsl #16
   3c078:	lsrs	r6, r6, #16
   3c07a:	adds.w	r3, r3, r8
   3c07e:	orr.w	sl, r6, lr, lsl #16
   3c082:	adc.w	r0, r0, sl
   3c086:	eors	r4, r3
   3c088:	eor.w	r9, r0, r9
   3c08c:	ldr	r6, [sp, #156]	; 0x9c
   3c08e:	mov.w	r1, r9, lsl #1
   3c092:	orr.w	r1, r1, r4, lsr #31
   3c096:	lsls	r4, r4, #1
   3c098:	orr.w	fp, r4, r9, lsr #31
   3c09c:	str	r1, [sp, #216]	; 0xd8
   3c09e:	ldr	r4, [sp, #152]	; 0x98
   3c0a0:	ldr	r1, [sp, #100]	; 0x64
   3c0a2:	adds	r1, r1, r4
   3c0a4:	ldr	r4, [sp, #104]	; 0x68
   3c0a6:	adc.w	r9, r4, r6
   3c0aa:	ldr	r4, [sp, #244]	; 0xf4
   3c0ac:	adds.w	r1, r1, ip
   3c0b0:	adc.w	r9, r9, r4
   3c0b4:	eor.w	r7, r1, r8
   3c0b8:	eor.w	lr, r9, sl
   3c0bc:	adds.w	r2, r2, lr
   3c0c0:	adc.w	r5, r7, r5
   3c0c4:	eor.w	ip, r2, ip
   3c0c8:	eor.w	r6, r5, r4
   3c0cc:	mov.w	sl, ip, lsr #24
   3c0d0:	orr.w	r4, sl, r6, lsl #8
   3c0d4:	lsrs	r6, r6, #24
   3c0d6:	orr.w	r8, r6, ip, lsl #8
   3c0da:	ldr	r6, [sp, #20]
   3c0dc:	adds	r1, r6, r1
   3c0de:	ldr	r6, [sp, #24]
   3c0e0:	adc.w	r9, r6, r9
   3c0e4:	adds	r1, r1, r4
   3c0e6:	str	r1, [sp, #152]	; 0x98
   3c0e8:	adc.w	r1, r9, r8
   3c0ec:	str	r1, [sp, #156]	; 0x9c
   3c0ee:	ldr	r1, [sp, #152]	; 0x98
   3c0f0:	eor.w	lr, r1, lr
   3c0f4:	ldr	r1, [sp, #156]	; 0x9c
   3c0f6:	eors	r7, r1
   3c0f8:	mov.w	r1, lr, lsr #16
   3c0fc:	orr.w	r1, r1, r7, lsl #16
   3c100:	lsrs	r7, r7, #16
   3c102:	str	r1, [sp, #220]	; 0xdc
   3c104:	orr.w	r1, r7, lr, lsl #16
   3c108:	str	r1, [sp, #224]	; 0xe0
   3c10a:	ldr	r1, [sp, #220]	; 0xdc
   3c10c:	adds	r2, r2, r1
   3c10e:	str	r2, [sp, #176]	; 0xb0
   3c110:	ldr	r2, [sp, #224]	; 0xe0
   3c112:	ldr	r1, [sp, #168]	; 0xa8
   3c114:	adc.w	r2, r5, r2
   3c118:	str	r2, [sp, #180]	; 0xb4
   3c11a:	ldr	r2, [sp, #176]	; 0xb0
   3c11c:	eors	r4, r2
   3c11e:	ldr	r2, [sp, #180]	; 0xb4
   3c120:	eor.w	r8, r2, r8
   3c124:	mov.w	r2, r8, lsl #1
   3c128:	orr.w	r2, r2, r4, lsr #31
   3c12c:	lsls	r4, r4, #1
   3c12e:	str	r2, [sp, #252]	; 0xfc
   3c130:	orr.w	r2, r4, r8, lsr #31
   3c134:	str	r2, [sp, #244]	; 0xf4
   3c136:	ldr	r2, [sp, #108]	; 0x6c
   3c138:	ldr	r4, [sp, #172]	; 0xac
   3c13a:	adds	r2, r2, r1
   3c13c:	ldr	r1, [sp, #112]	; 0x70
   3c13e:	adc.w	r7, r1, r4
   3c142:	ldr	r1, [sp, #240]	; 0xf0
   3c144:	adds	r2, r2, r1
   3c146:	ldr	r1, [sp, #248]	; 0xf8
   3c148:	adc.w	r7, r1, r7
   3c14c:	ldr	r1, [sp, #260]	; 0x104
   3c14e:	eor.w	r4, r7, r1
   3c152:	ldr	r1, [sp, #228]	; 0xe4
   3c154:	adds	r3, r3, r4
   3c156:	eor.w	r9, r2, r1
   3c15a:	ldr	r1, [sp, #240]	; 0xf0
   3c15c:	adc.w	r0, r0, r9
   3c160:	eor.w	ip, r3, r1
   3c164:	ldr	r1, [sp, #248]	; 0xf8
   3c166:	eor.w	r5, r0, r1
   3c16a:	mov.w	lr, ip, lsr #24
   3c16e:	orr.w	r1, lr, r5, lsl #8
   3c172:	lsrs	r5, r5, #24
   3c174:	orr.w	r6, r5, ip, lsl #8
   3c178:	ldr	r5, [sp, #60]	; 0x3c
   3c17a:	adds	r2, r5, r2
   3c17c:	ldr	r5, [sp, #64]	; 0x40
   3c17e:	adc.w	r7, r5, r7
   3c182:	adds	r2, r2, r1
   3c184:	str	r2, [sp, #168]	; 0xa8
   3c186:	adc.w	r2, r7, r6
   3c18a:	str	r2, [sp, #172]	; 0xac
   3c18c:	ldr	r2, [sp, #168]	; 0xa8
   3c18e:	eors	r4, r2
   3c190:	ldr	r2, [sp, #172]	; 0xac
   3c192:	eor.w	r2, r2, r9
   3c196:	lsrs	r5, r4, #16
   3c198:	orr.w	r5, r5, r2, lsl #16
   3c19c:	mov.w	r9, r2, lsr #16
   3c1a0:	orr.w	r9, r9, r4, lsl #16
   3c1a4:	adds	r3, r3, r5
   3c1a6:	str	r3, [sp, #184]	; 0xb8
   3c1a8:	adc.w	r3, r0, r9
   3c1ac:	str	r3, [sp, #188]	; 0xbc
   3c1ae:	ldr	r3, [sp, #184]	; 0xb8
   3c1b0:	ldr	r2, [sp, #160]	; 0xa0
   3c1b2:	eors	r1, r3
   3c1b4:	ldr	r3, [sp, #188]	; 0xbc
   3c1b6:	str	r5, [sp, #228]	; 0xe4
   3c1b8:	eors	r6, r3
   3c1ba:	lsls	r3, r6, #1
   3c1bc:	orr.w	r3, r3, r1, lsr #31
   3c1c0:	lsls	r1, r1, #1
   3c1c2:	str	r3, [sp, #248]	; 0xf8
   3c1c4:	orr.w	r3, r1, r6, lsr #31
   3c1c8:	str	r3, [sp, #240]	; 0xf0
   3c1ca:	ldr	r3, [sp, #12]
   3c1cc:	adds	r3, r3, r2
   3c1ce:	ldr	r2, [sp, #16]
   3c1d0:	ldr	r1, [sp, #164]	; 0xa4
   3c1d2:	ldr	r0, [sp, #196]	; 0xc4
   3c1d4:	adc.w	ip, r2, r1
   3c1d8:	ldr	r2, [sp, #216]	; 0xd8
   3c1da:	adds.w	r3, r3, fp
   3c1de:	adc.w	ip, ip, r2
   3c1e2:	ldr	r2, [sp, #212]	; 0xd4
   3c1e4:	eor.w	r7, ip, r2
   3c1e8:	ldr	r2, [sp, #208]	; 0xd0
   3c1ea:	eor.w	r1, r3, r2
   3c1ee:	ldr	r2, [sp, #192]	; 0xc0
   3c1f0:	adds	r2, r2, r7
   3c1f2:	adc.w	r5, r0, r1
   3c1f6:	ldr	r0, [sp, #216]	; 0xd8
   3c1f8:	eor.w	fp, r2, fp
   3c1fc:	eors	r0, r5
   3c1fe:	mov.w	r4, fp, lsr #24
   3c202:	orr.w	r8, r4, r0, lsl #8
   3c206:	lsrs	r0, r0, #24
   3c208:	orr.w	r6, r0, fp, lsl #8
   3c20c:	ldr	r0, [sp, #36]	; 0x24
   3c20e:	ldr	r4, [sp, #264]	; 0x108
   3c210:	adds	r3, r0, r3
   3c212:	ldr	r0, [sp, #40]	; 0x28
   3c214:	adc.w	ip, r0, ip
   3c218:	adds.w	r3, r3, r8
   3c21c:	str	r3, [sp, #160]	; 0xa0
   3c21e:	adc.w	r3, ip, r6
   3c222:	str	r3, [sp, #164]	; 0xa4
   3c224:	ldr	r3, [sp, #160]	; 0xa0
   3c226:	ldr	r0, [sp, #148]	; 0x94
   3c228:	eors	r7, r3
   3c22a:	ldr	r3, [sp, #164]	; 0xa4
   3c22c:	eors	r1, r3
   3c22e:	lsrs	r3, r7, #16
   3c230:	orr.w	r3, r3, r1, lsl #16
   3c234:	lsrs	r1, r1, #16
   3c236:	str	r3, [sp, #208]	; 0xd0
   3c238:	orr.w	r3, r1, r7, lsl #16
   3c23c:	str	r3, [sp, #212]	; 0xd4
   3c23e:	ldr	r3, [sp, #208]	; 0xd0
   3c240:	ldr	r1, [sp, #144]	; 0x90
   3c242:	adds	r2, r2, r3
   3c244:	ldr	r3, [sp, #212]	; 0xd4
   3c246:	eor.w	r8, r2, r8
   3c24a:	adc.w	r5, r3, r5
   3c24e:	eors	r6, r5
   3c250:	lsls	r3, r6, #1
   3c252:	orr.w	r3, r3, r8, lsr #31
   3c256:	mov.w	r8, r8, lsl #1
   3c25a:	str	r3, [sp, #256]	; 0x100
   3c25c:	orr.w	r3, r8, r6, lsr #31
   3c260:	str	r3, [sp, #216]	; 0xd8
   3c262:	ldr	r3, [sp, #84]	; 0x54
   3c264:	adds	r1, r3, r1
   3c266:	ldr	r3, [sp, #88]	; 0x58
   3c268:	adc.w	sl, r3, r0
   3c26c:	ldr	r3, [sp, #264]	; 0x108
   3c26e:	ldr	r0, [sp, #204]	; 0xcc
   3c270:	adds	r1, r1, r3
   3c272:	ldr	r3, [sp, #268]	; 0x10c
   3c274:	adc.w	sl, sl, r3
   3c278:	ldr	r3, [sp, #236]	; 0xec
   3c27a:	eor.w	lr, sl, r3
   3c27e:	ldr	r3, [sp, #232]	; 0xe8
   3c280:	eor.w	r7, r1, r3
   3c284:	ldr	r3, [sp, #200]	; 0xc8
   3c286:	adds.w	r3, r3, lr
   3c28a:	eor.w	r6, r3, r4
   3c28e:	ldr	r4, [sp, #268]	; 0x10c
   3c290:	adcs	r0, r7
   3c292:	eor.w	ip, r0, r4
   3c296:	mov.w	fp, r6, lsr #24
   3c29a:	orr.w	r4, fp, ip, lsl #8
   3c29e:	mov.w	ip, ip, lsr #24
   3c2a2:	orr.w	r8, ip, r6, lsl #8
   3c2a6:	ldr	r6, [sp, #44]	; 0x2c
   3c2a8:	adds	r1, r6, r1
   3c2aa:	ldr	r6, [sp, #48]	; 0x30
   3c2ac:	adc.w	sl, r6, sl
   3c2b0:	adds	r1, r1, r4
   3c2b2:	str	r1, [sp, #144]	; 0x90
   3c2b4:	adc.w	r1, sl, r8
   3c2b8:	str	r1, [sp, #148]	; 0x94
   3c2ba:	ldr	r1, [sp, #144]	; 0x90
   3c2bc:	eor.w	lr, r1, lr
   3c2c0:	ldr	r1, [sp, #148]	; 0x94
   3c2c2:	eors	r7, r1
   3c2c4:	mov.w	r1, lr, lsr #16
   3c2c8:	orr.w	r1, r1, r7, lsl #16
   3c2cc:	lsrs	r7, r7, #16
   3c2ce:	str	r1, [sp, #232]	; 0xe8
   3c2d0:	orr.w	r1, r7, lr, lsl #16
   3c2d4:	str	r1, [sp, #236]	; 0xec
   3c2d6:	ldr	r1, [sp, #232]	; 0xe8
   3c2d8:	ldr	r7, [sp, #156]	; 0x9c
   3c2da:	adds	r3, r3, r1
   3c2dc:	ldr	r1, [sp, #236]	; 0xec
   3c2de:	eor.w	r4, r4, r3
   3c2e2:	adc.w	r0, r1, r0
   3c2e6:	eor.w	r8, r0, r8
   3c2ea:	mov.w	r1, r8, lsl #1
   3c2ee:	orr.w	r6, r1, r4, lsr #31
   3c2f2:	lsls	r4, r4, #1
   3c2f4:	orr.w	fp, r4, r8, lsr #31
   3c2f8:	ldr	r1, [sp, #84]	; 0x54
   3c2fa:	ldr	r4, [sp, #152]	; 0x98
   3c2fc:	adds	r1, r1, r4
   3c2fe:	ldr	r4, [sp, #88]	; 0x58
   3c300:	adc.w	sl, r4, r7
   3c304:	adds.w	r1, r1, fp
   3c308:	ldr	r4, [sp, #228]	; 0xe4
   3c30a:	adc.w	sl, sl, r6
   3c30e:	eor.w	lr, sl, r9
   3c312:	adds.w	r2, r2, lr
   3c316:	eor.w	r7, r1, r4
   3c31a:	adc.w	r5, r7, r5
   3c31e:	eor.w	fp, r2, fp
   3c322:	eor.w	ip, r5, r6
   3c326:	mov.w	r4, fp, lsr #24
   3c32a:	orr.w	r6, r4, ip, lsl #8
   3c32e:	ldr	r4, [sp, #20]
   3c330:	mov.w	ip, ip, lsr #24
   3c334:	adds	r1, r4, r1
   3c336:	ldr	r4, [sp, #24]
   3c338:	orr.w	r8, ip, fp, lsl #8
   3c33c:	adc.w	sl, r4, sl
   3c340:	adds	r1, r1, r6
   3c342:	str	r1, [sp, #152]	; 0x98
   3c344:	adc.w	r1, sl, r8
   3c348:	str	r1, [sp, #156]	; 0x9c
   3c34a:	ldr	r1, [sp, #152]	; 0x98
   3c34c:	eor.w	lr, r1, lr
   3c350:	ldr	r1, [sp, #156]	; 0x9c
   3c352:	eors	r7, r1
   3c354:	mov.w	r1, lr, lsr #16
   3c358:	orr.w	r1, r1, r7, lsl #16
   3c35c:	lsrs	r7, r7, #16
   3c35e:	str	r1, [sp, #228]	; 0xe4
   3c360:	orr.w	r1, r7, lr, lsl #16
   3c364:	str	r1, [sp, #260]	; 0x104
   3c366:	ldr	r1, [sp, #228]	; 0xe4
   3c368:	adds	r2, r2, r1
   3c36a:	str	r2, [sp, #192]	; 0xc0
   3c36c:	ldr	r2, [sp, #260]	; 0x104
   3c36e:	ldr	r1, [sp, #168]	; 0xa8
   3c370:	adc.w	r2, r5, r2
   3c374:	str	r2, [sp, #196]	; 0xc4
   3c376:	ldr	r2, [sp, #192]	; 0xc0
   3c378:	eors	r6, r2
   3c37a:	ldr	r2, [sp, #196]	; 0xc4
   3c37c:	eor.w	r8, r2, r8
   3c380:	mov.w	r2, r8, lsl #1
   3c384:	orr.w	r2, r2, r6, lsr #31
   3c388:	lsls	r6, r6, #1
   3c38a:	str	r2, [sp, #268]	; 0x10c
   3c38c:	orr.w	r2, r6, r8, lsr #31
   3c390:	str	r2, [sp, #264]	; 0x108
   3c392:	ldr	r2, [sp, #68]	; 0x44
   3c394:	adds	r2, r2, r1
   3c396:	ldr	r1, [sp, #72]	; 0x48
   3c398:	ldr	r4, [sp, #172]	; 0xac
   3c39a:	ldr	r5, [sp, #252]	; 0xfc
   3c39c:	adc.w	r7, r1, r4
   3c3a0:	ldr	r1, [sp, #244]	; 0xf4
   3c3a2:	ldr	r4, [sp, #244]	; 0xf4
   3c3a4:	adds	r2, r2, r1
   3c3a6:	ldr	r1, [sp, #252]	; 0xfc
   3c3a8:	adc.w	r7, r1, r7
   3c3ac:	ldr	r1, [sp, #212]	; 0xd4
   3c3ae:	eor.w	r6, r7, r1
   3c3b2:	ldr	r1, [sp, #208]	; 0xd0
   3c3b4:	adds	r3, r3, r6
   3c3b6:	eor.w	r1, r2, r1
   3c3ba:	eor.w	r4, r3, r4
   3c3be:	adc.w	r0, r1, r0
   3c3c2:	eors	r5, r0
   3c3c4:	mov.w	r8, r4, lsr #24
   3c3c8:	orr.w	ip, r8, r5, lsl #8
   3c3cc:	lsrs	r5, r5, #24
   3c3ce:	orr.w	lr, r5, r4, lsl #8
   3c3d2:	ldr	r4, [sp, #36]	; 0x24
   3c3d4:	adds	r2, r4, r2
   3c3d6:	ldr	r4, [sp, #40]	; 0x28
   3c3d8:	adc.w	r7, r4, r7
   3c3dc:	adds.w	r2, r2, ip
   3c3e0:	str	r2, [sp, #168]	; 0xa8
   3c3e2:	adc.w	r2, r7, lr
   3c3e6:	str	r2, [sp, #172]	; 0xac
   3c3e8:	ldr	r2, [sp, #168]	; 0xa8
   3c3ea:	eors	r6, r2
   3c3ec:	ldr	r2, [sp, #172]	; 0xac
   3c3ee:	eors	r1, r2
   3c3f0:	lsrs	r2, r6, #16
   3c3f2:	orr.w	r2, r2, r1, lsl #16
   3c3f6:	lsrs	r1, r1, #16
   3c3f8:	str	r2, [sp, #208]	; 0xd0
   3c3fa:	orr.w	r2, r1, r6, lsl #16
   3c3fe:	str	r2, [sp, #212]	; 0xd4
   3c400:	ldr	r2, [sp, #208]	; 0xd0
   3c402:	ldr	r1, [sp, #164]	; 0xa4
   3c404:	adds	r3, r3, r2
   3c406:	str	r3, [sp, #200]	; 0xc8
   3c408:	ldr	r3, [sp, #212]	; 0xd4
   3c40a:	adc.w	r3, r0, r3
   3c40e:	str	r3, [sp, #204]	; 0xcc
   3c410:	ldr	r2, [sp, #204]	; 0xcc
   3c412:	ldr	r3, [sp, #200]	; 0xc8
   3c414:	eor.w	lr, r2, lr
   3c418:	eor.w	r3, r3, ip
   3c41c:	mov.w	r2, lr, lsl #1
   3c420:	orr.w	r2, r2, r3, lsr #31
   3c424:	mov.w	ip, r3, lsl #1
   3c428:	str	r2, [sp, #244]	; 0xf4
   3c42a:	orr.w	ip, ip, lr, lsr #31
   3c42e:	ldr	r2, [sp, #160]	; 0xa0
   3c430:	ldr	r3, [sp, #60]	; 0x3c
   3c432:	adds	r3, r3, r2
   3c434:	ldr	r2, [sp, #64]	; 0x40
   3c436:	adc.w	lr, r2, r1
   3c43a:	ldr	r2, [sp, #240]	; 0xf0
   3c43c:	adds	r3, r3, r2
   3c43e:	ldr	r2, [sp, #248]	; 0xf8
   3c440:	adc.w	lr, lr, r2
   3c444:	ldr	r2, [sp, #236]	; 0xec
   3c446:	eor.w	r6, lr, r2
   3c44a:	ldr	r2, [sp, #232]	; 0xe8
   3c44c:	eor.w	r0, r3, r2
   3c450:	ldr	r2, [sp, #176]	; 0xb0
   3c452:	ldr	r1, [sp, #180]	; 0xb4
   3c454:	adds	r2, r2, r6
   3c456:	adc.w	r5, r1, r0
   3c45a:	ldr	r1, [sp, #240]	; 0xf0
   3c45c:	eor.w	r8, r2, r1
   3c460:	ldr	r1, [sp, #248]	; 0xf8
   3c462:	eor.w	r4, r5, r1
   3c466:	mov.w	r9, r8, lsr #24
   3c46a:	orr.w	r1, r9, r4, lsl #8
   3c46e:	lsrs	r4, r4, #24
   3c470:	orr.w	r7, r4, r8, lsl #8
   3c474:	ldr	r4, [sp, #52]	; 0x34
   3c476:	adds	r3, r4, r3
   3c478:	ldr	r4, [sp, #56]	; 0x38
   3c47a:	adc.w	lr, r4, lr
   3c47e:	adds	r3, r3, r1
   3c480:	str	r3, [sp, #160]	; 0xa0
   3c482:	adc.w	r3, lr, r7
   3c486:	str	r3, [sp, #164]	; 0xa4
   3c488:	ldr	r3, [sp, #160]	; 0xa0
   3c48a:	ldr	r4, [sp, #216]	; 0xd8
   3c48c:	eors	r6, r3
   3c48e:	ldr	r3, [sp, #164]	; 0xa4
   3c490:	eors	r0, r3
   3c492:	lsrs	r3, r6, #16
   3c494:	orr.w	r3, r3, r0, lsl #16
   3c498:	lsrs	r0, r0, #16
   3c49a:	str	r3, [sp, #232]	; 0xe8
   3c49c:	orr.w	r3, r0, r6, lsl #16
   3c4a0:	str	r3, [sp, #236]	; 0xec
   3c4a2:	ldr	r3, [sp, #232]	; 0xe8
   3c4a4:	ldr	r0, [sp, #148]	; 0x94
   3c4a6:	adds	r2, r2, r3
   3c4a8:	ldr	r3, [sp, #236]	; 0xec
   3c4aa:	eor.w	r1, r1, r2
   3c4ae:	adc.w	r5, r3, r5
   3c4b2:	eors	r7, r5
   3c4b4:	lsls	r3, r7, #1
   3c4b6:	orr.w	r3, r3, r1, lsr #31
   3c4ba:	lsls	r1, r1, #1
   3c4bc:	str	r3, [sp, #248]	; 0xf8
   3c4be:	orr.w	r3, r1, r7, lsr #31
   3c4c2:	ldr	r1, [sp, #144]	; 0x90
   3c4c4:	str	r3, [sp, #240]	; 0xf0
   3c4c6:	ldr	r3, [sp, #12]
   3c4c8:	adds	r1, r3, r1
   3c4ca:	ldr	r3, [sp, #16]
   3c4cc:	adc.w	sl, r3, r0
   3c4d0:	ldr	r3, [sp, #216]	; 0xd8
   3c4d2:	ldr	r0, [sp, #188]	; 0xbc
   3c4d4:	adds	r1, r1, r3
   3c4d6:	ldr	r3, [sp, #256]	; 0x100
   3c4d8:	adc.w	sl, sl, r3
   3c4dc:	ldr	r3, [sp, #224]	; 0xe0
   3c4de:	eor.w	lr, sl, r3
   3c4e2:	ldr	r3, [sp, #220]	; 0xdc
   3c4e4:	eor.w	r6, r1, r3
   3c4e8:	ldr	r3, [sp, #184]	; 0xb8
   3c4ea:	adds.w	r3, r3, lr
   3c4ee:	eor.w	r8, r3, r4
   3c4f2:	ldr	r4, [sp, #256]	; 0x100
   3c4f4:	adcs	r0, r6
   3c4f6:	eor.w	r7, r0, r4
   3c4fa:	mov.w	fp, r8, lsr #24
   3c4fe:	orr.w	r4, fp, r7, lsl #8
   3c502:	lsrs	r7, r7, #24
   3c504:	orr.w	r9, r7, r8, lsl #8
   3c508:	ldr	r7, [sp, #44]	; 0x2c
   3c50a:	adds	r1, r7, r1
   3c50c:	ldr	r7, [sp, #48]	; 0x30
   3c50e:	adc.w	sl, r7, sl
   3c512:	adds	r1, r1, r4
   3c514:	str	r1, [sp, #144]	; 0x90
   3c516:	adc.w	r1, sl, r9
   3c51a:	str	r1, [sp, #148]	; 0x94
   3c51c:	ldr	r1, [sp, #144]	; 0x90
   3c51e:	eor.w	lr, r1, lr
   3c522:	ldr	r1, [sp, #148]	; 0x94
   3c524:	eors	r6, r1
   3c526:	mov.w	r1, lr, lsr #16
   3c52a:	orr.w	r8, r1, r6, lsl #16
   3c52e:	lsrs	r6, r6, #16
   3c530:	adds.w	r3, r3, r8
   3c534:	orr.w	sl, r6, lr, lsl #16
   3c538:	adc.w	r0, r0, sl
   3c53c:	eors	r4, r3
   3c53e:	eor.w	r9, r0, r9
   3c542:	ldr	r6, [sp, #156]	; 0x9c
   3c544:	mov.w	r1, r9, lsl #1
   3c548:	orr.w	r1, r1, r4, lsr #31
   3c54c:	lsls	r4, r4, #1
   3c54e:	orr.w	fp, r4, r9, lsr #31
   3c552:	str	r1, [sp, #216]	; 0xd8
   3c554:	ldr	r4, [sp, #152]	; 0x98
   3c556:	ldr	r1, [sp, #124]	; 0x7c
   3c558:	adds	r1, r1, r4
   3c55a:	ldr	r4, [sp, #128]	; 0x80
   3c55c:	adc.w	r9, r4, r6
   3c560:	ldr	r4, [sp, #244]	; 0xf4
   3c562:	adds.w	r1, r1, ip
   3c566:	adc.w	r9, r9, r4
   3c56a:	eor.w	r7, r1, r8
   3c56e:	eor.w	lr, r9, sl
   3c572:	adds.w	r2, r2, lr
   3c576:	adc.w	r5, r7, r5
   3c57a:	eor.w	ip, r2, ip
   3c57e:	eor.w	r6, r5, r4
   3c582:	mov.w	sl, ip, lsr #24
   3c586:	orr.w	r4, sl, r6, lsl #8
   3c58a:	lsrs	r6, r6, #24
   3c58c:	orr.w	r8, r6, ip, lsl #8
   3c590:	ldr	r6, [sp, #92]	; 0x5c
   3c592:	adds	r1, r6, r1
   3c594:	ldr	r6, [sp, #96]	; 0x60
   3c596:	adc.w	r9, r6, r9
   3c59a:	adds	r1, r1, r4
   3c59c:	str	r1, [sp, #152]	; 0x98
   3c59e:	adc.w	r1, r9, r8
   3c5a2:	str	r1, [sp, #156]	; 0x9c
   3c5a4:	ldr	r1, [sp, #152]	; 0x98
   3c5a6:	eor.w	lr, r1, lr
   3c5aa:	ldr	r1, [sp, #156]	; 0x9c
   3c5ac:	eors	r7, r1
   3c5ae:	mov.w	r1, lr, lsr #16
   3c5b2:	orr.w	r1, r1, r7, lsl #16
   3c5b6:	lsrs	r7, r7, #16
   3c5b8:	str	r1, [sp, #220]	; 0xdc
   3c5ba:	orr.w	r1, r7, lr, lsl #16
   3c5be:	str	r1, [sp, #224]	; 0xe0
   3c5c0:	ldr	r1, [sp, #220]	; 0xdc
   3c5c2:	adds	r2, r2, r1
   3c5c4:	str	r2, [sp, #176]	; 0xb0
   3c5c6:	ldr	r2, [sp, #224]	; 0xe0
   3c5c8:	ldr	r1, [sp, #168]	; 0xa8
   3c5ca:	adc.w	r2, r5, r2
   3c5ce:	str	r2, [sp, #180]	; 0xb4
   3c5d0:	ldr	r2, [sp, #176]	; 0xb0
   3c5d2:	eors	r4, r2
   3c5d4:	ldr	r2, [sp, #180]	; 0xb4
   3c5d6:	eor.w	r8, r2, r8
   3c5da:	mov.w	r2, r8, lsl #1
   3c5de:	orr.w	r2, r2, r4, lsr #31
   3c5e2:	lsls	r4, r4, #1
   3c5e4:	str	r2, [sp, #252]	; 0xfc
   3c5e6:	orr.w	r2, r4, r8, lsr #31
   3c5ea:	str	r2, [sp, #244]	; 0xf4
   3c5ec:	ldr	r2, [sp, #76]	; 0x4c
   3c5ee:	ldr	r4, [sp, #172]	; 0xac
   3c5f0:	adds	r2, r2, r1
   3c5f2:	ldr	r1, [sp, #80]	; 0x50
   3c5f4:	adc.w	r7, r1, r4
   3c5f8:	ldr	r1, [sp, #240]	; 0xf0
   3c5fa:	adds	r2, r2, r1
   3c5fc:	ldr	r1, [sp, #248]	; 0xf8
   3c5fe:	adc.w	r7, r1, r7
   3c602:	ldr	r1, [sp, #260]	; 0x104
   3c604:	eor.w	r4, r7, r1
   3c608:	ldr	r1, [sp, #228]	; 0xe4
   3c60a:	adds	r3, r3, r4
   3c60c:	eor.w	r9, r2, r1
   3c610:	ldr	r1, [sp, #240]	; 0xf0
   3c612:	adc.w	r0, r0, r9
   3c616:	eor.w	ip, r3, r1
   3c61a:	ldr	r1, [sp, #248]	; 0xf8
   3c61c:	eor.w	r5, r0, r1
   3c620:	mov.w	lr, ip, lsr #24
   3c624:	orr.w	r1, lr, r5, lsl #8
   3c628:	lsrs	r5, r5, #24
   3c62a:	orr.w	r6, r5, ip, lsl #8
   3c62e:	ldr	r5, [sp, #116]	; 0x74
   3c630:	adds	r2, r5, r2
   3c632:	ldr	r5, [sp, #120]	; 0x78
   3c634:	adc.w	r7, r5, r7
   3c638:	adds	r2, r2, r1
   3c63a:	str	r2, [sp, #168]	; 0xa8
   3c63c:	adc.w	r2, r7, r6
   3c640:	str	r2, [sp, #172]	; 0xac
   3c642:	ldr	r2, [sp, #168]	; 0xa8
   3c644:	eors	r4, r2
   3c646:	ldr	r2, [sp, #172]	; 0xac
   3c648:	eor.w	r2, r2, r9
   3c64c:	lsrs	r5, r4, #16
   3c64e:	orr.w	r5, r5, r2, lsl #16
   3c652:	mov.w	r9, r2, lsr #16
   3c656:	orr.w	r9, r9, r4, lsl #16
   3c65a:	adds	r3, r3, r5
   3c65c:	str	r3, [sp, #184]	; 0xb8
   3c65e:	adc.w	r3, r0, r9
   3c662:	str	r3, [sp, #188]	; 0xbc
   3c664:	ldr	r3, [sp, #184]	; 0xb8
   3c666:	ldr	r2, [sp, #160]	; 0xa0
   3c668:	eors	r1, r3
   3c66a:	ldr	r3, [sp, #188]	; 0xbc
   3c66c:	ldr	r0, [sp, #196]	; 0xc4
   3c66e:	eors	r6, r3
   3c670:	str	r5, [sp, #228]	; 0xe4
   3c672:	lsls	r3, r6, #1
   3c674:	orr.w	r3, r3, r1, lsr #31
   3c678:	lsls	r1, r1, #1
   3c67a:	str	r3, [sp, #248]	; 0xf8
   3c67c:	orr.w	r3, r1, r6, lsr #31
   3c680:	str	r3, [sp, #240]	; 0xf0
   3c682:	ldr	r3, [sp, #28]
   3c684:	ldr	r1, [sp, #164]	; 0xa4
   3c686:	adds	r3, r3, r2
   3c688:	ldr	r2, [sp, #32]
   3c68a:	adc.w	ip, r2, r1
   3c68e:	ldr	r2, [sp, #216]	; 0xd8
   3c690:	adds.w	r3, r3, fp
   3c694:	adc.w	ip, ip, r2
   3c698:	ldr	r2, [sp, #212]	; 0xd4
   3c69a:	eor.w	r7, ip, r2
   3c69e:	ldr	r2, [sp, #208]	; 0xd0
   3c6a0:	eor.w	r1, r3, r2
   3c6a4:	ldr	r2, [sp, #192]	; 0xc0
   3c6a6:	adds	r2, r2, r7
   3c6a8:	adc.w	r5, r0, r1
   3c6ac:	ldr	r0, [sp, #216]	; 0xd8
   3c6ae:	eor.w	fp, r2, fp
   3c6b2:	eors	r0, r5
   3c6b4:	mov.w	r4, fp, lsr #24
   3c6b8:	orr.w	r8, r4, r0, lsl #8
   3c6bc:	lsrs	r0, r0, #24
   3c6be:	orr.w	r6, r0, fp, lsl #8
   3c6c2:	ldr	r0, [sp, #100]	; 0x64
   3c6c4:	adds	r3, r0, r3
   3c6c6:	ldr	r0, [sp, #104]	; 0x68
   3c6c8:	adc.w	ip, r0, ip
   3c6cc:	adds.w	r3, r3, r8
   3c6d0:	str	r3, [sp, #160]	; 0xa0
   3c6d2:	adc.w	r3, ip, r6
   3c6d6:	str	r3, [sp, #164]	; 0xa4
   3c6d8:	ldr	r3, [sp, #160]	; 0xa0
   3c6da:	eors	r7, r3
   3c6dc:	ldr	r3, [sp, #164]	; 0xa4
   3c6de:	eors	r1, r3
   3c6e0:	lsrs	r3, r7, #16
   3c6e2:	orr.w	r3, r3, r1, lsl #16
   3c6e6:	lsrs	r1, r1, #16
   3c6e8:	str	r3, [sp, #208]	; 0xd0
   3c6ea:	orr.w	r3, r1, r7, lsl #16
   3c6ee:	str	r3, [sp, #212]	; 0xd4
   3c6f0:	ldr	r3, [sp, #208]	; 0xd0
   3c6f2:	ldr	r1, [sp, #144]	; 0x90
   3c6f4:	adds	r2, r2, r3
   3c6f6:	ldr	r3, [sp, #212]	; 0xd4
   3c6f8:	eor.w	r8, r2, r8
   3c6fc:	ldr	r0, [sp, #148]	; 0x94
   3c6fe:	adc.w	r5, r3, r5
   3c702:	ldr	r4, [sp, #264]	; 0x108
   3c704:	eors	r6, r5
   3c706:	lsls	r3, r6, #1
   3c708:	orr.w	r3, r3, r8, lsr #31
   3c70c:	mov.w	r8, r8, lsl #1
   3c710:	str	r3, [sp, #256]	; 0x100
   3c712:	orr.w	r3, r8, r6, lsr #31
   3c716:	str	r3, [sp, #216]	; 0xd8
   3c718:	ldr	r3, [sp, #108]	; 0x6c
   3c71a:	adds	r1, r3, r1
   3c71c:	ldr	r3, [sp, #112]	; 0x70
   3c71e:	adc.w	sl, r3, r0
   3c722:	ldr	r3, [sp, #264]	; 0x108
   3c724:	ldr	r0, [sp, #204]	; 0xcc
   3c726:	adds	r1, r1, r3
   3c728:	ldr	r3, [sp, #268]	; 0x10c
   3c72a:	adc.w	sl, sl, r3
   3c72e:	ldr	r3, [sp, #236]	; 0xec
   3c730:	eor.w	lr, sl, r3
   3c734:	ldr	r3, [sp, #232]	; 0xe8
   3c736:	eor.w	r7, r1, r3
   3c73a:	ldr	r3, [sp, #200]	; 0xc8
   3c73c:	adds.w	r3, r3, lr
   3c740:	eor.w	r6, r3, r4
   3c744:	ldr	r4, [sp, #268]	; 0x10c
   3c746:	adcs	r0, r7
   3c748:	eor.w	ip, r0, r4
   3c74c:	mov.w	fp, r6, lsr #24
   3c750:	orr.w	r4, fp, ip, lsl #8
   3c754:	mov.w	ip, ip, lsr #24
   3c758:	orr.w	r8, ip, r6, lsl #8
   3c75c:	ldr	r6, [sp, #4]
   3c75e:	adds	r1, r6, r1
   3c760:	ldr	r6, [sp, #8]
   3c762:	adc.w	sl, r6, sl
   3c766:	adds	r1, r1, r4
   3c768:	str	r1, [sp, #144]	; 0x90
   3c76a:	adc.w	r1, sl, r8
   3c76e:	str	r1, [sp, #148]	; 0x94
   3c770:	ldr	r1, [sp, #144]	; 0x90
   3c772:	eor.w	lr, r1, lr
   3c776:	ldr	r1, [sp, #148]	; 0x94
   3c778:	eors	r7, r1
   3c77a:	mov.w	r1, lr, lsr #16
   3c77e:	orr.w	r1, r1, r7, lsl #16
   3c782:	lsrs	r7, r7, #16
   3c784:	str	r1, [sp, #232]	; 0xe8
   3c786:	orr.w	r1, r7, lr, lsl #16
   3c78a:	str	r1, [sp, #236]	; 0xec
   3c78c:	ldr	r1, [sp, #232]	; 0xe8
   3c78e:	ldr	r7, [sp, #156]	; 0x9c
   3c790:	adds	r3, r3, r1
   3c792:	ldr	r1, [sp, #236]	; 0xec
   3c794:	eor.w	r4, r4, r3
   3c798:	adc.w	r0, r1, r0
   3c79c:	eor.w	r8, r0, r8
   3c7a0:	mov.w	r1, r8, lsl #1
   3c7a4:	orr.w	r6, r1, r4, lsr #31
   3c7a8:	lsls	r4, r4, #1
   3c7aa:	orr.w	fp, r4, r8, lsr #31
   3c7ae:	ldr	r1, [sp, #4]
   3c7b0:	ldr	r4, [sp, #152]	; 0x98
   3c7b2:	adds	r1, r1, r4
   3c7b4:	ldr	r4, [sp, #8]
   3c7b6:	adc.w	sl, r4, r7
   3c7ba:	adds.w	r1, r1, fp
   3c7be:	adc.w	sl, sl, r6
   3c7c2:	ldr	r4, [sp, #228]	; 0xe4
   3c7c4:	eor.w	lr, sl, r9
   3c7c8:	adds.w	r2, r2, lr
   3c7cc:	eor.w	r7, r1, r4
   3c7d0:	adc.w	r5, r7, r5
   3c7d4:	eor.w	fp, r2, fp
   3c7d8:	eor.w	ip, r5, r6
   3c7dc:	mov.w	r4, fp, lsr #24
   3c7e0:	orr.w	r6, r4, ip, lsl #8
   3c7e4:	ldr	r4, [sp, #12]
   3c7e6:	mov.w	ip, ip, lsr #24
   3c7ea:	adds	r1, r4, r1
   3c7ec:	ldr	r4, [sp, #16]
   3c7ee:	orr.w	r8, ip, fp, lsl #8
   3c7f2:	adc.w	sl, r4, sl
   3c7f6:	adds	r1, r1, r6
   3c7f8:	str	r1, [sp, #152]	; 0x98
   3c7fa:	adc.w	r1, sl, r8
   3c7fe:	str	r1, [sp, #156]	; 0x9c
   3c800:	ldr	r1, [sp, #152]	; 0x98
   3c802:	ldr	r4, [sp, #172]	; 0xac
   3c804:	eor.w	lr, r1, lr
   3c808:	ldr	r1, [sp, #156]	; 0x9c
   3c80a:	eors	r7, r1
   3c80c:	mov.w	r1, lr, lsr #16
   3c810:	orr.w	r1, r1, r7, lsl #16
   3c814:	lsrs	r7, r7, #16
   3c816:	str	r1, [sp, #228]	; 0xe4
   3c818:	orr.w	r1, r7, lr, lsl #16
   3c81c:	str	r1, [sp, #260]	; 0x104
   3c81e:	ldr	r1, [sp, #228]	; 0xe4
   3c820:	adds	r2, r2, r1
   3c822:	str	r2, [sp, #192]	; 0xc0
   3c824:	ldr	r2, [sp, #260]	; 0x104
   3c826:	ldr	r1, [sp, #168]	; 0xa8
   3c828:	adc.w	r2, r5, r2
   3c82c:	str	r2, [sp, #196]	; 0xc4
   3c82e:	ldr	r2, [sp, #192]	; 0xc0
   3c830:	ldr	r5, [sp, #252]	; 0xfc
   3c832:	eors	r6, r2
   3c834:	ldr	r2, [sp, #196]	; 0xc4
   3c836:	eor.w	r8, r2, r8
   3c83a:	mov.w	r2, r8, lsl #1
   3c83e:	orr.w	r2, r2, r6, lsr #31
   3c842:	lsls	r6, r6, #1
   3c844:	str	r2, [sp, #268]	; 0x10c
   3c846:	orr.w	r2, r6, r8, lsr #31
   3c84a:	str	r2, [sp, #264]	; 0x108
   3c84c:	ldr	r2, [sp, #20]
   3c84e:	adds	r2, r2, r1
   3c850:	ldr	r1, [sp, #24]
   3c852:	adc.w	r7, r1, r4
   3c856:	ldr	r1, [sp, #244]	; 0xf4
   3c858:	ldr	r4, [sp, #244]	; 0xf4
   3c85a:	adds	r2, r2, r1
   3c85c:	ldr	r1, [sp, #252]	; 0xfc
   3c85e:	adc.w	r7, r1, r7
   3c862:	ldr	r1, [sp, #212]	; 0xd4
   3c864:	eor.w	r6, r7, r1
   3c868:	ldr	r1, [sp, #208]	; 0xd0
   3c86a:	adds	r3, r3, r6
   3c86c:	eor.w	r1, r2, r1
   3c870:	eor.w	r4, r3, r4
   3c874:	adc.w	r0, r1, r0
   3c878:	eors	r5, r0
   3c87a:	mov.w	r8, r4, lsr #24
   3c87e:	orr.w	ip, r8, r5, lsl #8
   3c882:	lsrs	r5, r5, #24
   3c884:	orr.w	lr, r5, r4, lsl #8
   3c888:	ldr	r4, [sp, #28]
   3c88a:	adds	r2, r4, r2
   3c88c:	ldr	r4, [sp, #32]
   3c88e:	adc.w	r7, r4, r7
   3c892:	adds.w	r2, r2, ip
   3c896:	str	r2, [sp, #168]	; 0xa8
   3c898:	adc.w	r2, r7, lr
   3c89c:	str	r2, [sp, #172]	; 0xac
   3c89e:	ldr	r2, [sp, #168]	; 0xa8
   3c8a0:	eors	r6, r2
   3c8a2:	ldr	r2, [sp, #172]	; 0xac
   3c8a4:	eors	r1, r2
   3c8a6:	lsrs	r2, r6, #16
   3c8a8:	orr.w	r2, r2, r1, lsl #16
   3c8ac:	lsrs	r1, r1, #16
   3c8ae:	str	r2, [sp, #208]	; 0xd0
   3c8b0:	orr.w	r2, r1, r6, lsl #16
   3c8b4:	str	r2, [sp, #212]	; 0xd4
   3c8b6:	ldr	r2, [sp, #208]	; 0xd0
   3c8b8:	ldr	r1, [sp, #164]	; 0xa4
   3c8ba:	adds	r3, r3, r2
   3c8bc:	str	r3, [sp, #200]	; 0xc8
   3c8be:	ldr	r3, [sp, #212]	; 0xd4
   3c8c0:	adc.w	r3, r0, r3
   3c8c4:	str	r3, [sp, #204]	; 0xcc
   3c8c6:	ldr	r2, [sp, #204]	; 0xcc
   3c8c8:	ldr	r3, [sp, #200]	; 0xc8
   3c8ca:	eor.w	lr, r2, lr
   3c8ce:	eor.w	r3, r3, ip
   3c8d2:	mov.w	r2, lr, lsl #1
   3c8d6:	orr.w	r2, r2, r3, lsr #31
   3c8da:	mov.w	ip, r3, lsl #1
   3c8de:	str	r2, [sp, #244]	; 0xf4
   3c8e0:	orr.w	ip, ip, lr, lsr #31
   3c8e4:	ldr	r2, [sp, #160]	; 0xa0
   3c8e6:	ldr	r3, [sp, #36]	; 0x24
   3c8e8:	adds	r3, r3, r2
   3c8ea:	ldr	r2, [sp, #40]	; 0x28
   3c8ec:	adc.w	lr, r2, r1
   3c8f0:	ldr	r2, [sp, #240]	; 0xf0
   3c8f2:	ldr	r1, [sp, #180]	; 0xb4
   3c8f4:	adds	r3, r3, r2
   3c8f6:	ldr	r2, [sp, #248]	; 0xf8
   3c8f8:	adc.w	lr, lr, r2
   3c8fc:	ldr	r2, [sp, #236]	; 0xec
   3c8fe:	eor.w	r6, lr, r2
   3c902:	ldr	r2, [sp, #232]	; 0xe8
   3c904:	eor.w	r0, r3, r2
   3c908:	ldr	r2, [sp, #176]	; 0xb0
   3c90a:	adds	r2, r2, r6
   3c90c:	adc.w	r5, r1, r0
   3c910:	ldr	r1, [sp, #240]	; 0xf0
   3c912:	eor.w	r8, r2, r1
   3c916:	ldr	r1, [sp, #248]	; 0xf8
   3c918:	eor.w	r4, r5, r1
   3c91c:	mov.w	r9, r8, lsr #24
   3c920:	orr.w	r1, r9, r4, lsl #8
   3c924:	lsrs	r4, r4, #24
   3c926:	orr.w	r7, r4, r8, lsl #8
   3c92a:	ldr	r4, [sp, #44]	; 0x2c
   3c92c:	adds	r3, r4, r3
   3c92e:	ldr	r4, [sp, #48]	; 0x30
   3c930:	adc.w	lr, r4, lr
   3c934:	adds	r3, r3, r1
   3c936:	str	r3, [sp, #160]	; 0xa0
   3c938:	adc.w	r3, lr, r7
   3c93c:	str	r3, [sp, #164]	; 0xa4
   3c93e:	ldr	r3, [sp, #160]	; 0xa0
   3c940:	eors	r6, r3
   3c942:	ldr	r3, [sp, #164]	; 0xa4
   3c944:	eors	r0, r3
   3c946:	lsrs	r3, r6, #16
   3c948:	orr.w	r3, r3, r0, lsl #16
   3c94c:	lsrs	r0, r0, #16
   3c94e:	str	r3, [sp, #232]	; 0xe8
   3c950:	orr.w	r3, r0, r6, lsl #16
   3c954:	str	r3, [sp, #236]	; 0xec
   3c956:	ldr	r3, [sp, #232]	; 0xe8
   3c958:	adds	r2, r2, r3
   3c95a:	ldr	r3, [sp, #236]	; 0xec
   3c95c:	eor.w	r1, r1, r2
   3c960:	adc.w	r5, r3, r5
   3c964:	eors	r7, r5
   3c966:	lsls	r3, r7, #1
   3c968:	orr.w	r3, r3, r1, lsr #31
   3c96c:	lsls	r1, r1, #1
   3c96e:	str	r3, [sp, #248]	; 0xf8
   3c970:	orr.w	r3, r1, r7, lsr #31
   3c974:	str	r3, [sp, #240]	; 0xf0
   3c976:	ldr	r3, [sp, #52]	; 0x34
   3c978:	ldr	r1, [sp, #144]	; 0x90
   3c97a:	ldr	r0, [sp, #148]	; 0x94
   3c97c:	adds	r1, r3, r1
   3c97e:	ldr	r3, [sp, #56]	; 0x38
   3c980:	ldr	r4, [sp, #216]	; 0xd8
   3c982:	adc.w	sl, r3, r0
   3c986:	ldr	r3, [sp, #216]	; 0xd8
   3c988:	ldr	r0, [sp, #188]	; 0xbc
   3c98a:	adds	r1, r1, r3
   3c98c:	ldr	r3, [sp, #256]	; 0x100
   3c98e:	adc.w	sl, sl, r3
   3c992:	ldr	r3, [sp, #224]	; 0xe0
   3c994:	eor.w	lr, sl, r3
   3c998:	ldr	r3, [sp, #220]	; 0xdc
   3c99a:	eor.w	r6, r1, r3
   3c99e:	ldr	r3, [sp, #184]	; 0xb8
   3c9a0:	adds.w	r3, r3, lr
   3c9a4:	eor.w	r8, r3, r4
   3c9a8:	ldr	r4, [sp, #256]	; 0x100
   3c9aa:	adcs	r0, r6
   3c9ac:	eor.w	r7, r0, r4
   3c9b0:	mov.w	fp, r8, lsr #24
   3c9b4:	orr.w	r4, fp, r7, lsl #8
   3c9b8:	lsrs	r7, r7, #24
   3c9ba:	orr.w	r9, r7, r8, lsl #8
   3c9be:	ldr	r7, [sp, #60]	; 0x3c
   3c9c0:	adds	r1, r7, r1
   3c9c2:	ldr	r7, [sp, #64]	; 0x40
   3c9c4:	adc.w	sl, r7, sl
   3c9c8:	adds	r1, r1, r4
   3c9ca:	str	r1, [sp, #144]	; 0x90
   3c9cc:	adc.w	r1, sl, r9
   3c9d0:	str	r1, [sp, #148]	; 0x94
   3c9d2:	ldr	r1, [sp, #144]	; 0x90
   3c9d4:	eor.w	lr, r1, lr
   3c9d8:	ldr	r1, [sp, #148]	; 0x94
   3c9da:	eors	r6, r1
   3c9dc:	mov.w	r1, lr, lsr #16
   3c9e0:	orr.w	r8, r1, r6, lsl #16
   3c9e4:	lsrs	r6, r6, #16
   3c9e6:	adds.w	r3, r3, r8
   3c9ea:	orr.w	sl, r6, lr, lsl #16
   3c9ee:	adc.w	r0, r0, sl
   3c9f2:	eors	r4, r3
   3c9f4:	eor.w	r9, r0, r9
   3c9f8:	ldr	r6, [sp, #156]	; 0x9c
   3c9fa:	mov.w	r1, r9, lsl #1
   3c9fe:	orr.w	r1, r1, r4, lsr #31
   3ca02:	lsls	r4, r4, #1
   3ca04:	orr.w	fp, r4, r9, lsr #31
   3ca08:	str	r1, [sp, #216]	; 0xd8
   3ca0a:	ldr	r4, [sp, #152]	; 0x98
   3ca0c:	ldr	r1, [sp, #68]	; 0x44
   3ca0e:	adds	r1, r1, r4
   3ca10:	ldr	r4, [sp, #72]	; 0x48
   3ca12:	adc.w	r9, r4, r6
   3ca16:	ldr	r4, [sp, #244]	; 0xf4
   3ca18:	adds.w	r1, r1, ip
   3ca1c:	adc.w	r9, r9, r4
   3ca20:	eor.w	r7, r1, r8
   3ca24:	eor.w	lr, r9, sl
   3ca28:	adds.w	r2, r2, lr
   3ca2c:	adc.w	r5, r7, r5
   3ca30:	eor.w	ip, r2, ip
   3ca34:	eor.w	r6, r5, r4
   3ca38:	mov.w	sl, ip, lsr #24
   3ca3c:	orr.w	r4, sl, r6, lsl #8
   3ca40:	lsrs	r6, r6, #24
   3ca42:	orr.w	r8, r6, ip, lsl #8
   3ca46:	ldr	r6, [sp, #76]	; 0x4c
   3ca48:	adds	r1, r6, r1
   3ca4a:	ldr	r6, [sp, #80]	; 0x50
   3ca4c:	adc.w	r9, r6, r9
   3ca50:	adds	r1, r1, r4
   3ca52:	str	r1, [sp, #152]	; 0x98
   3ca54:	adc.w	r1, r9, r8
   3ca58:	str	r1, [sp, #156]	; 0x9c
   3ca5a:	ldr	r1, [sp, #152]	; 0x98
   3ca5c:	eor.w	lr, r1, lr
   3ca60:	ldr	r1, [sp, #156]	; 0x9c
   3ca62:	eors	r7, r1
   3ca64:	mov.w	r1, lr, lsr #16
   3ca68:	orr.w	r1, r1, r7, lsl #16
   3ca6c:	lsrs	r7, r7, #16
   3ca6e:	str	r1, [sp, #220]	; 0xdc
   3ca70:	orr.w	r1, r7, lr, lsl #16
   3ca74:	str	r1, [sp, #224]	; 0xe0
   3ca76:	ldr	r1, [sp, #220]	; 0xdc
   3ca78:	adds	r2, r2, r1
   3ca7a:	str	r2, [sp, #176]	; 0xb0
   3ca7c:	ldr	r2, [sp, #224]	; 0xe0
   3ca7e:	ldr	r1, [sp, #168]	; 0xa8
   3ca80:	adc.w	r2, r5, r2
   3ca84:	str	r2, [sp, #180]	; 0xb4
   3ca86:	ldr	r2, [sp, #176]	; 0xb0
   3ca88:	eors	r4, r2
   3ca8a:	ldr	r2, [sp, #180]	; 0xb4
   3ca8c:	eor.w	r8, r2, r8
   3ca90:	mov.w	r2, r8, lsl #1
   3ca94:	orr.w	r2, r2, r4, lsr #31
   3ca98:	lsls	r4, r4, #1
   3ca9a:	str	r2, [sp, #252]	; 0xfc
   3ca9c:	orr.w	r2, r4, r8, lsr #31
   3caa0:	str	r2, [sp, #244]	; 0xf4
   3caa2:	ldr	r2, [sp, #84]	; 0x54
   3caa4:	ldr	r4, [sp, #172]	; 0xac
   3caa6:	adds	r2, r2, r1
   3caa8:	ldr	r1, [sp, #88]	; 0x58
   3caaa:	adc.w	r7, r1, r4
   3caae:	ldr	r1, [sp, #240]	; 0xf0
   3cab0:	adds	r2, r2, r1
   3cab2:	ldr	r1, [sp, #248]	; 0xf8
   3cab4:	adc.w	r7, r1, r7
   3cab8:	ldr	r1, [sp, #260]	; 0x104
   3caba:	eor.w	r4, r7, r1
   3cabe:	ldr	r1, [sp, #228]	; 0xe4
   3cac0:	adds	r3, r3, r4
   3cac2:	eor.w	sl, r2, r1
   3cac6:	ldr	r1, [sp, #240]	; 0xf0
   3cac8:	adc.w	r0, r0, sl
   3cacc:	eor.w	ip, r3, r1
   3cad0:	ldr	r1, [sp, #248]	; 0xf8
   3cad2:	eor.w	r5, r0, r1
   3cad6:	mov.w	lr, ip, lsr #24
   3cada:	orr.w	r1, lr, r5, lsl #8
   3cade:	lsrs	r5, r5, #24
   3cae0:	orr.w	r6, r5, ip, lsl #8
   3cae4:	ldr	r5, [sp, #92]	; 0x5c
   3cae6:	adds	r2, r5, r2
   3cae8:	ldr	r5, [sp, #96]	; 0x60
   3caea:	adc.w	r7, r5, r7
   3caee:	adds	r2, r2, r1
   3caf0:	str	r2, [sp, #168]	; 0xa8
   3caf2:	adc.w	r2, r7, r6
   3caf6:	str	r2, [sp, #172]	; 0xac
   3caf8:	ldr	r2, [sp, #168]	; 0xa8
   3cafa:	eors	r4, r2
   3cafc:	ldr	r2, [sp, #172]	; 0xac
   3cafe:	eor.w	r2, r2, sl
   3cb02:	lsrs	r5, r4, #16
   3cb04:	orr.w	r5, r5, r2, lsl #16
   3cb08:	mov.w	sl, r2, lsr #16
   3cb0c:	orr.w	sl, sl, r4, lsl #16
   3cb10:	adds	r3, r3, r5
   3cb12:	str	r3, [sp, #184]	; 0xb8
   3cb14:	adc.w	r3, r0, sl
   3cb18:	str	r3, [sp, #188]	; 0xbc
   3cb1a:	ldr	r3, [sp, #184]	; 0xb8
   3cb1c:	ldr	r2, [sp, #160]	; 0xa0
   3cb1e:	eors	r1, r3
   3cb20:	ldr	r3, [sp, #188]	; 0xbc
   3cb22:	str	r5, [sp, #228]	; 0xe4
   3cb24:	eors	r6, r3
   3cb26:	lsls	r3, r6, #1
   3cb28:	orr.w	r3, r3, r1, lsr #31
   3cb2c:	lsls	r1, r1, #1
   3cb2e:	str	r3, [sp, #248]	; 0xf8
   3cb30:	orr.w	r3, r1, r6, lsr #31
   3cb34:	str	r3, [sp, #240]	; 0xf0
   3cb36:	ldr	r3, [sp, #100]	; 0x64
   3cb38:	adds	r3, r3, r2
   3cb3a:	ldr	r2, [sp, #104]	; 0x68
   3cb3c:	ldr	r1, [sp, #164]	; 0xa4
   3cb3e:	ldr	r0, [sp, #196]	; 0xc4
   3cb40:	adc.w	ip, r2, r1
   3cb44:	ldr	r2, [sp, #216]	; 0xd8
   3cb46:	adds.w	r3, r3, fp
   3cb4a:	adc.w	ip, ip, r2
   3cb4e:	ldr	r2, [sp, #212]	; 0xd4
   3cb50:	eor.w	r7, ip, r2
   3cb54:	ldr	r2, [sp, #208]	; 0xd0
   3cb56:	eor.w	r1, r3, r2
   3cb5a:	ldr	r2, [sp, #192]	; 0xc0
   3cb5c:	adds	r2, r2, r7
   3cb5e:	adc.w	r5, r0, r1
   3cb62:	ldr	r0, [sp, #216]	; 0xd8
   3cb64:	eor.w	fp, r2, fp
   3cb68:	eors	r0, r5
   3cb6a:	mov.w	r4, fp, lsr #24
   3cb6e:	orr.w	r9, r4, r0, lsl #8
   3cb72:	lsrs	r0, r0, #24
   3cb74:	orr.w	r6, r0, fp, lsl #8
   3cb78:	ldr	r0, [sp, #108]	; 0x6c
   3cb7a:	adds	r3, r0, r3
   3cb7c:	ldr	r0, [sp, #112]	; 0x70
   3cb7e:	adc.w	ip, r0, ip
   3cb82:	adds.w	r3, r3, r9
   3cb86:	str	r3, [sp, #160]	; 0xa0
   3cb88:	adc.w	r3, ip, r6
   3cb8c:	str	r3, [sp, #164]	; 0xa4
   3cb8e:	ldr	r3, [sp, #160]	; 0xa0
   3cb90:	ldr	r0, [sp, #148]	; 0x94
   3cb92:	eors	r7, r3
   3cb94:	ldr	r3, [sp, #164]	; 0xa4
   3cb96:	eors	r1, r3
   3cb98:	lsrs	r3, r7, #16
   3cb9a:	orr.w	r3, r3, r1, lsl #16
   3cb9e:	lsrs	r1, r1, #16
   3cba0:	str	r3, [sp, #192]	; 0xc0
   3cba2:	orr.w	r3, r1, r7, lsl #16
   3cba6:	str	r3, [sp, #196]	; 0xc4
   3cba8:	ldr	r3, [sp, #192]	; 0xc0
   3cbaa:	ldr	r1, [sp, #144]	; 0x90
   3cbac:	adds	r2, r2, r3
   3cbae:	ldr	r3, [sp, #196]	; 0xc4
   3cbb0:	eor.w	r9, r2, r9
   3cbb4:	ldr	r7, [sp, #268]	; 0x10c
   3cbb6:	adc.w	r5, r3, r5
   3cbba:	eors	r6, r5
   3cbbc:	lsls	r3, r6, #1
   3cbbe:	orr.w	r3, r3, r9, lsr #31
   3cbc2:	mov.w	r9, r9, lsl #1
   3cbc6:	str	r3, [sp, #212]	; 0xd4
   3cbc8:	orr.w	r3, r9, r6, lsr #31
   3cbcc:	str	r3, [sp, #208]	; 0xd0
   3cbce:	ldr	r3, [sp, #116]	; 0x74
   3cbd0:	ldr	r6, [sp, #264]	; 0x108
   3cbd2:	adds	r1, r3, r1
   3cbd4:	ldr	r3, [sp, #120]	; 0x78
   3cbd6:	adc.w	r4, r3, r0
   3cbda:	ldr	r3, [sp, #264]	; 0x108
   3cbdc:	ldr	r0, [sp, #204]	; 0xcc
   3cbde:	adds	r1, r1, r3
   3cbe0:	ldr	r3, [sp, #268]	; 0x10c
   3cbe2:	adc.w	r4, r3, r4
   3cbe6:	ldr	r3, [sp, #236]	; 0xec
   3cbe8:	eor.w	r8, r4, r3
   3cbec:	ldr	r3, [sp, #232]	; 0xe8
   3cbee:	eor.w	ip, r1, r3
   3cbf2:	ldr	r3, [sp, #200]	; 0xc8
   3cbf4:	adds.w	r3, r3, r8
   3cbf8:	adc.w	r0, r0, ip
   3cbfc:	eors	r6, r3
   3cbfe:	eor.w	lr, r0, r7
   3cc02:	mov.w	fp, r6, lsr #24
   3cc06:	orr.w	r7, fp, lr, lsl #8
   3cc0a:	mov.w	lr, lr, lsr #24
   3cc0e:	orr.w	r9, lr, r6, lsl #8
   3cc12:	ldr	r6, [sp, #124]	; 0x7c
   3cc14:	adds	r1, r6, r1
   3cc16:	ldr	r6, [sp, #128]	; 0x80
   3cc18:	adc.w	r4, r6, r4
   3cc1c:	adds	r1, r1, r7
   3cc1e:	str	r1, [sp, #144]	; 0x90
   3cc20:	adc.w	r1, r4, r9
   3cc24:	str	r1, [sp, #148]	; 0x94
   3cc26:	ldr	r1, [sp, #144]	; 0x90
   3cc28:	ldr	r6, [sp, #152]	; 0x98
   3cc2a:	eor.w	r8, r1, r8
   3cc2e:	ldr	r1, [sp, #148]	; 0x94
   3cc30:	eor.w	ip, r1, ip
   3cc34:	mov.w	r1, r8, lsr #16
   3cc38:	orr.w	r1, r1, ip, lsl #16
   3cc3c:	mov.w	ip, ip, lsr #16
   3cc40:	orr.w	fp, ip, r8, lsl #16
   3cc44:	adds	r3, r3, r1
   3cc46:	adc.w	r0, r0, fp
   3cc4a:	eors	r7, r3
   3cc4c:	eor.w	r9, r0, r9
   3cc50:	str	r1, [sp, #200]	; 0xc8
   3cc52:	mov.w	r1, r9, lsl #1
   3cc56:	orr.w	r4, r1, r7, lsr #31
   3cc5a:	ldr	r1, [sp, #116]	; 0x74
   3cc5c:	lsls	r7, r7, #1
   3cc5e:	orr.w	ip, r7, r9, lsr #31
   3cc62:	adds	r1, r1, r6
   3cc64:	ldr	r7, [sp, #156]	; 0x9c
   3cc66:	ldr	r6, [sp, #120]	; 0x78
   3cc68:	adc.w	r9, r6, r7
   3cc6c:	adds.w	r1, r1, ip
   3cc70:	adc.w	r9, r9, r4
   3cc74:	ldr	r6, [sp, #228]	; 0xe4
   3cc76:	eor.w	lr, r9, sl
   3cc7a:	adds.w	r2, r2, lr
   3cc7e:	eor.w	r6, r1, r6
   3cc82:	adc.w	r5, r6, r5
   3cc86:	eor.w	r7, r2, ip
   3cc8a:	eor.w	ip, r5, r4
   3cc8e:	mov.w	sl, r7, lsr #24
   3cc92:	orr.w	r4, sl, ip, lsl #8
   3cc96:	mov.w	ip, ip, lsr #24
   3cc9a:	orr.w	r8, ip, r7, lsl #8
   3cc9e:	ldr	r7, [sp, #84]	; 0x54
   3cca0:	adds	r1, r7, r1
   3cca2:	ldr	r7, [sp, #88]	; 0x58
   3cca4:	adc.w	r9, r7, r9
   3cca8:	adds	r1, r1, r4
   3ccaa:	str	r1, [sp, #84]	; 0x54
   3ccac:	adc.w	r1, r9, r8
   3ccb0:	str	r1, [sp, #88]	; 0x58
   3ccb2:	ldr	r1, [sp, #84]	; 0x54
   3ccb4:	eor.w	lr, r1, lr
   3ccb8:	ldr	r1, [sp, #88]	; 0x58
   3ccba:	eors	r6, r1
   3ccbc:	mov.w	r1, lr, lsr #16
   3ccc0:	orr.w	r1, r1, r6, lsl #16
   3ccc4:	lsrs	r6, r6, #16
   3ccc6:	str	r1, [sp, #152]	; 0x98
   3ccc8:	orr.w	r1, r6, lr, lsl #16
   3cccc:	str	r1, [sp, #156]	; 0x9c
   3ccce:	ldr	r1, [sp, #152]	; 0x98
   3ccd0:	adds	r2, r2, r1
   3ccd2:	str	r2, [sp, #116]	; 0x74
   3ccd4:	ldr	r2, [sp, #156]	; 0x9c
   3ccd6:	ldr	r1, [sp, #168]	; 0xa8
   3ccd8:	adc.w	r2, r5, r2
   3ccdc:	str	r2, [sp, #120]	; 0x78
   3ccde:	ldr	r2, [sp, #116]	; 0x74
   3cce0:	eors	r4, r2
   3cce2:	ldr	r2, [sp, #120]	; 0x78
   3cce4:	eor.w	r8, r2, r8
   3cce8:	mov.w	r2, r8, lsl #1
   3ccec:	orr.w	r2, r2, r4, lsr #31
   3ccf0:	lsls	r4, r4, #1
   3ccf2:	str	r2, [sp, #216]	; 0xd8
   3ccf4:	orr.w	r2, r4, r8, lsr #31
   3ccf8:	str	r2, [sp, #204]	; 0xcc
   3ccfa:	ldr	r2, [sp, #36]	; 0x24
   3ccfc:	ldr	r4, [sp, #172]	; 0xac
   3ccfe:	adds	r2, r2, r1
   3cd00:	ldr	r1, [sp, #40]	; 0x28
   3cd02:	adc.w	r7, r1, r4
   3cd06:	ldr	r1, [sp, #244]	; 0xf4
   3cd08:	adds	r2, r2, r1
   3cd0a:	ldr	r1, [sp, #252]	; 0xfc
   3cd0c:	ldr	r4, [sp, #244]	; 0xf4
   3cd0e:	adc.w	r7, r1, r7
   3cd12:	ldr	r1, [sp, #196]	; 0xc4
   3cd14:	ldr	r5, [sp, #252]	; 0xfc
   3cd16:	eor.w	r6, r7, r1
   3cd1a:	ldr	r1, [sp, #192]	; 0xc0
   3cd1c:	adds	r3, r3, r6
   3cd1e:	eor.w	r1, r2, r1
   3cd22:	eor.w	r4, r3, r4
   3cd26:	adc.w	r0, r1, r0
   3cd2a:	eors	r5, r0
   3cd2c:	mov.w	r8, r4, lsr #24
   3cd30:	orr.w	lr, r8, r5, lsl #8
   3cd34:	lsrs	r5, r5, #24
   3cd36:	orr.w	ip, r5, r4, lsl #8
   3cd3a:	ldr	r4, [sp, #68]	; 0x44
   3cd3c:	adds	r2, r4, r2
   3cd3e:	ldr	r4, [sp, #72]	; 0x48
   3cd40:	adc.w	r7, r4, r7
   3cd44:	adds.w	r2, r2, lr
   3cd48:	str	r2, [sp, #36]	; 0x24
   3cd4a:	adc.w	r2, r7, ip
   3cd4e:	str	r2, [sp, #40]	; 0x28
   3cd50:	ldr	r2, [sp, #36]	; 0x24
   3cd52:	eors	r6, r2
   3cd54:	ldr	r2, [sp, #40]	; 0x28
   3cd56:	eors	r1, r2
   3cd58:	lsrs	r2, r6, #16
   3cd5a:	orr.w	r2, r2, r1, lsl #16
   3cd5e:	lsrs	r1, r1, #16
   3cd60:	str	r2, [sp, #168]	; 0xa8
   3cd62:	orr.w	r2, r1, r6, lsl #16
   3cd66:	str	r2, [sp, #172]	; 0xac
   3cd68:	ldr	r2, [sp, #168]	; 0xa8
   3cd6a:	ldr	r1, [sp, #164]	; 0xa4
   3cd6c:	adds	r3, r3, r2
   3cd6e:	str	r3, [sp, #68]	; 0x44
   3cd70:	ldr	r3, [sp, #172]	; 0xac
   3cd72:	adc.w	r3, r0, r3
   3cd76:	str	r3, [sp, #72]	; 0x48
   3cd78:	ldr	r2, [sp, #72]	; 0x48
   3cd7a:	ldr	r3, [sp, #68]	; 0x44
   3cd7c:	eor.w	ip, r2, ip
   3cd80:	eor.w	r3, r3, lr
   3cd84:	mov.w	r2, ip, lsl #1
   3cd88:	orr.w	r2, r2, r3, lsr #31
   3cd8c:	mov.w	lr, r3, lsl #1
   3cd90:	str	r2, [sp, #192]	; 0xc0
   3cd92:	orr.w	lr, lr, ip, lsr #31
   3cd96:	ldr	r2, [sp, #160]	; 0xa0
   3cd98:	ldr	r3, [sp, #76]	; 0x4c
   3cd9a:	adds	r3, r3, r2
   3cd9c:	ldr	r2, [sp, #80]	; 0x50
   3cd9e:	adc.w	ip, r2, r1
   3cda2:	ldr	r2, [sp, #240]	; 0xf0
   3cda4:	ldr	r1, [sp, #180]	; 0xb4
   3cda6:	adds	r3, r3, r2
   3cda8:	ldr	r2, [sp, #248]	; 0xf8
   3cdaa:	adc.w	ip, ip, r2
   3cdae:	ldr	r2, [sp, #200]	; 0xc8
   3cdb0:	eor.w	r6, ip, fp
   3cdb4:	eor.w	r0, r3, r2
   3cdb8:	ldr	r2, [sp, #176]	; 0xb0
   3cdba:	adds	r2, r2, r6
   3cdbc:	adc.w	r5, r1, r0
   3cdc0:	ldr	r1, [sp, #240]	; 0xf0
   3cdc2:	eor.w	r8, r2, r1
   3cdc6:	ldr	r1, [sp, #248]	; 0xf8
   3cdc8:	eor.w	r4, r5, r1
   3cdcc:	mov.w	r9, r8, lsr #24
   3cdd0:	orr.w	r1, r9, r4, lsl #8
   3cdd4:	lsrs	r4, r4, #24
   3cdd6:	orr.w	r7, r4, r8, lsl #8
   3cdda:	ldr	r4, [sp, #124]	; 0x7c
   3cddc:	adds	r3, r4, r3
   3cdde:	ldr	r4, [sp, #128]	; 0x80
   3cde0:	adc.w	ip, r4, ip
   3cde4:	adds	r3, r3, r1
   3cde6:	str	r3, [sp, #76]	; 0x4c
   3cde8:	adc.w	r3, ip, r7
   3cdec:	str	r3, [sp, #80]	; 0x50
   3cdee:	ldr	r3, [sp, #76]	; 0x4c
   3cdf0:	eors	r6, r3
   3cdf2:	ldr	r3, [sp, #80]	; 0x50
   3cdf4:	eors	r0, r3
   3cdf6:	lsrs	r3, r6, #16
   3cdf8:	orr.w	r3, r3, r0, lsl #16
   3cdfc:	lsrs	r0, r0, #16
   3cdfe:	str	r3, [sp, #124]	; 0x7c
   3ce00:	orr.w	r3, r0, r6, lsl #16
   3ce04:	str	r3, [sp, #128]	; 0x80
   3ce06:	ldr	r3, [sp, #124]	; 0x7c
   3ce08:	ldr	r0, [sp, #148]	; 0x94
   3ce0a:	adds	r2, r2, r3
   3ce0c:	ldr	r3, [sp, #128]	; 0x80
   3ce0e:	eor.w	r1, r1, r2
   3ce12:	ldr	r6, [sp, #208]	; 0xd0
   3ce14:	adc.w	r5, r3, r5
   3ce18:	eors	r7, r5
   3ce1a:	lsls	r3, r7, #1
   3ce1c:	orr.w	r3, r3, r1, lsr #31
   3ce20:	lsls	r1, r1, #1
   3ce22:	str	r3, [sp, #164]	; 0xa4
   3ce24:	orr.w	r3, r1, r7, lsr #31
   3ce28:	ldr	r1, [sp, #144]	; 0x90
   3ce2a:	str	r3, [sp, #160]	; 0xa0
   3ce2c:	ldr	r3, [sp, #108]	; 0x6c
   3ce2e:	adds	r1, r3, r1
   3ce30:	ldr	r3, [sp, #112]	; 0x70
   3ce32:	adc.w	r4, r3, r0
   3ce36:	ldr	r3, [sp, #208]	; 0xd0
   3ce38:	ldr	r0, [sp, #188]	; 0xbc
   3ce3a:	adds	r1, r1, r3
   3ce3c:	ldr	r3, [sp, #212]	; 0xd4
   3ce3e:	adc.w	r4, r3, r4
   3ce42:	ldr	r3, [sp, #224]	; 0xe0
   3ce44:	eor.w	r8, r4, r3
   3ce48:	ldr	r3, [sp, #220]	; 0xdc
   3ce4a:	eor.w	r7, r1, r3
   3ce4e:	ldr	r3, [sp, #184]	; 0xb8
   3ce50:	adds.w	r3, r3, r8
   3ce54:	str	r3, [sp, #108]	; 0x6c
   3ce56:	eor.w	r9, r3, r6
   3ce5a:	ldr	r6, [sp, #212]	; 0xd4
   3ce5c:	ldr	r3, [sp, #52]	; 0x34
   3ce5e:	adcs	r0, r7
   3ce60:	eor.w	ip, r0, r6
   3ce64:	mov.w	fp, r9, lsr #24
   3ce68:	adds	r1, r3, r1
   3ce6a:	ldr	r3, [sp, #56]	; 0x38
   3ce6c:	orr.w	r6, fp, ip, lsl #8
   3ce70:	mov.w	ip, ip, lsr #24
   3ce74:	orr.w	sl, ip, r9, lsl #8
   3ce78:	adc.w	r4, r3, r4
   3ce7c:	adds	r3, r1, r6
   3ce7e:	str	r3, [sp, #52]	; 0x34
   3ce80:	adc.w	r3, r4, sl
   3ce84:	str	r3, [sp, #56]	; 0x38
   3ce86:	ldr	r3, [sp, #52]	; 0x34
   3ce88:	eor.w	r8, r3, r8
   3ce8c:	ldr	r3, [sp, #56]	; 0x38
   3ce8e:	eors	r7, r3
   3ce90:	mov.w	r1, r8, lsr #16
   3ce94:	ldr	r3, [sp, #108]	; 0x6c
   3ce96:	orr.w	r4, r1, r7, lsl #16
   3ce9a:	lsrs	r7, r7, #16
   3ce9c:	adds	r3, r3, r4
   3ce9e:	orr.w	fp, r7, r8, lsl #16
   3cea2:	adc.w	r0, r0, fp
   3cea6:	eors	r6, r3
   3cea8:	eor.w	sl, r0, sl
   3ceac:	mov.w	r1, sl, lsl #1
   3ceb0:	orr.w	r1, r1, r6, lsr #31
   3ceb4:	lsls	r6, r6, #1
   3ceb6:	str	r1, [sp, #112]	; 0x70
   3ceb8:	orr.w	r1, r6, sl, lsr #31
   3cebc:	str	r1, [sp, #108]	; 0x6c
   3cebe:	ldr	r6, [sp, #84]	; 0x54
   3cec0:	ldr	r1, [sp, #12]
   3cec2:	ldr	r7, [sp, #88]	; 0x58
   3cec4:	adds	r1, r1, r6
   3cec6:	ldr	r6, [sp, #16]
   3cec8:	adc.w	r9, r6, r7
   3cecc:	ldr	r6, [sp, #192]	; 0xc0
   3cece:	adds.w	r1, r1, lr
   3ced2:	adc.w	r9, r9, r6
   3ced6:	eor.w	r7, r1, r4
   3ceda:	eor.w	r6, r9, fp
   3cede:	ldr	r4, [sp, #192]	; 0xc0
   3cee0:	adds	r2, r2, r6
   3cee2:	adc.w	r5, r7, r5
   3cee6:	eor.w	lr, r2, lr
   3ceea:	eors	r4, r5
   3ceec:	mov.w	sl, lr, lsr #24
   3cef0:	orr.w	ip, sl, r4, lsl #8
   3cef4:	lsrs	r4, r4, #24
   3cef6:	orr.w	r8, r4, lr, lsl #8
   3cefa:	ldr	r4, [sp, #100]	; 0x64
   3cefc:	adds	r1, r4, r1
   3cefe:	ldr	r4, [sp, #104]	; 0x68
   3cf00:	adc.w	r9, r4, r9
   3cf04:	adds.w	r1, r1, ip
   3cf08:	adc.w	r4, r9, r8
   3cf0c:	eors	r6, r1
   3cf0e:	eors	r7, r4
   3cf10:	strd	r1, r4, [sp, #400]	; 0x190
   3cf14:	mov.w	lr, r6, lsr #16
   3cf18:	orr.w	r1, lr, r7, lsl #16
   3cf1c:	lsrs	r7, r7, #16
   3cf1e:	orr.w	r4, r7, r6, lsl #16
   3cf22:	adds	r2, r2, r1
   3cf24:	adc.w	r5, r4, r5
   3cf28:	strd	r2, r5, [sp, #480]	; 0x1e0
   3cf2c:	eor.w	r5, r5, r8
   3cf30:	eor.w	r2, r2, ip
   3cf34:	strd	r1, r4, [sp, #520]	; 0x208
   3cf38:	lsls	r6, r5, #1
   3cf3a:	ldr	r1, [sp, #36]	; 0x24
   3cf3c:	orr.w	r6, r6, r2, lsr #31
   3cf40:	lsls	r2, r2, #1
   3cf42:	orr.w	r5, r2, r5, lsr #31
   3cf46:	ldr	r2, [sp, #4]
   3cf48:	ldr	r4, [sp, #40]	; 0x28
   3cf4a:	adds	r2, r2, r1
   3cf4c:	ldr	r1, [sp, #8]
   3cf4e:	strd	r5, r6, [sp, #440]	; 0x1b8
   3cf52:	adc.w	r7, r1, r4
   3cf56:	ldr	r1, [sp, #160]	; 0xa0
   3cf58:	ldr	r5, [sp, #160]	; 0xa0
   3cf5a:	adds	r2, r2, r1
   3cf5c:	ldr	r1, [sp, #164]	; 0xa4
   3cf5e:	ldr	r4, [sp, #152]	; 0x98
   3cf60:	adc.w	r7, r1, r7
   3cf64:	ldr	r1, [sp, #156]	; 0x9c
   3cf66:	eors	r4, r2
   3cf68:	eors	r1, r7
   3cf6a:	adds	r3, r3, r1
   3cf6c:	eor.w	lr, r3, r5
   3cf70:	ldr	r5, [sp, #164]	; 0xa4
   3cf72:	adc.w	r0, r4, r0
   3cf76:	eors	r5, r0
   3cf78:	mov.w	r8, lr, lsr #24
   3cf7c:	orr.w	r6, r8, r5, lsl #8
   3cf80:	lsrs	r5, r5, #24
   3cf82:	orr.w	ip, r5, lr, lsl #8
   3cf86:	ldr	r5, [sp, #20]
   3cf88:	adds	r2, r5, r2
   3cf8a:	ldr	r5, [sp, #24]
   3cf8c:	adc.w	r7, r5, r7
   3cf90:	adds	r2, r2, r6
   3cf92:	adc.w	r7, r7, ip
   3cf96:	eors	r1, r2
   3cf98:	eors	r4, r7
   3cf9a:	strd	r2, r7, [sp, #408]	; 0x198
   3cf9e:	lsrs	r7, r1, #16
   3cfa0:	orr.w	r2, r7, r4, lsl #16
   3cfa4:	lsrs	r4, r4, #16
   3cfa6:	orr.w	r5, r4, r1, lsl #16
   3cfaa:	adds	r3, r3, r2
   3cfac:	adc.w	r0, r5, r0
   3cfb0:	strd	r2, r5, [sp, #496]	; 0x1f0
   3cfb4:	strd	r3, r0, [sp, #488]	; 0x1e8
   3cfb8:	eor.w	r0, r0, ip
   3cfbc:	eors	r3, r6
   3cfbe:	ldr	r2, [sp, #76]	; 0x4c
   3cfc0:	lsls	r1, r0, #1
   3cfc2:	orr.w	r1, r1, r3, lsr #31
   3cfc6:	lsls	r3, r3, #1
   3cfc8:	orr.w	r0, r3, r0, lsr #31
   3cfcc:	ldr	r3, [sp, #92]	; 0x5c
   3cfce:	strd	r0, r1, [sp, #448]	; 0x1c0
   3cfd2:	adds	r3, r3, r2
   3cfd4:	ldr	r1, [sp, #80]	; 0x50
   3cfd6:	ldr	r2, [sp, #96]	; 0x60
   3cfd8:	adc.w	ip, r2, r1
   3cfdc:	ldr	r2, [sp, #108]	; 0x6c
   3cfde:	ldr	r1, [sp, #120]	; 0x78
   3cfe0:	adds	r3, r3, r2
   3cfe2:	ldr	r2, [sp, #112]	; 0x70
   3cfe4:	adc.w	ip, ip, r2
   3cfe8:	ldr	r2, [sp, #172]	; 0xac
   3cfea:	eor.w	r0, ip, r2
   3cfee:	ldr	r2, [sp, #168]	; 0xa8
   3cff0:	eor.w	r4, r3, r2
   3cff4:	ldr	r2, [sp, #116]	; 0x74
   3cff6:	adds	r2, r2, r0
   3cff8:	adc.w	r5, r1, r4
   3cffc:	ldr	r1, [sp, #108]	; 0x6c
   3cffe:	eor.w	r6, r2, r1
   3d002:	ldr	r1, [sp, #112]	; 0x70
   3d004:	eors	r1, r5
   3d006:	mov.w	r8, r6, lsr #24
   3d00a:	orr.w	r7, r8, r1, lsl #8
   3d00e:	lsrs	r1, r1, #24
   3d010:	orr.w	lr, r1, r6, lsl #8
   3d014:	ldr	r1, [sp, #60]	; 0x3c
   3d016:	adds	r3, r1, r3
   3d018:	ldr	r1, [sp, #64]	; 0x40
   3d01a:	adc.w	ip, r1, ip
   3d01e:	adds	r3, r3, r7
   3d020:	adc.w	r1, ip, lr
   3d024:	eors	r0, r3
   3d026:	eors	r4, r1
   3d028:	strd	r3, r1, [sp, #416]	; 0x1a0
   3d02c:	lsrs	r6, r0, #16
   3d02e:	orr.w	r3, r6, r4, lsl #16
   3d032:	lsrs	r4, r4, #16
   3d034:	orr.w	r1, r4, r0, lsl #16
   3d038:	adds	r2, r2, r3
   3d03a:	adc.w	r5, r1, r5
   3d03e:	strd	r2, r5, [sp, #464]	; 0x1d0
   3d042:	eor.w	r5, r5, lr
   3d046:	eors	r2, r7
   3d048:	strd	r3, r1, [sp, #504]	; 0x1f8
   3d04c:	lsls	r0, r5, #1
   3d04e:	ldr	r3, [sp, #44]	; 0x2c
   3d050:	orr.w	r0, r0, r2, lsr #31
   3d054:	lsls	r2, r2, #1
   3d056:	orr.w	r5, r2, r5, lsr #31
   3d05a:	ldr	r2, [sp, #52]	; 0x34
   3d05c:	strd	r5, r0, [sp, #456]	; 0x1c8
   3d060:	adds	r1, r3, r2
   3d062:	ldr	r3, [sp, #48]	; 0x30
   3d064:	ldr	r2, [sp, #56]	; 0x38
   3d066:	adc.w	r4, r3, r2
   3d06a:	ldr	r3, [sp, #204]	; 0xcc
   3d06c:	adds	r1, r1, r3
   3d06e:	ldr	r3, [sp, #216]	; 0xd8
   3d070:	adc.w	r2, r4, r3
   3d074:	ldr	r3, [sp, #128]	; 0x80
   3d076:	eor.w	r5, r2, r3
   3d07a:	ldr	r3, [sp, #124]	; 0x7c
   3d07c:	ldr	r0, [sp, #72]	; 0x48
   3d07e:	eor.w	r6, r1, r3
   3d082:	ldr	r3, [sp, #68]	; 0x44
   3d084:	ldr	r4, [sp, #204]	; 0xcc
   3d086:	adds	r3, r3, r5
   3d088:	ldr	r7, [sp, #216]	; 0xd8
   3d08a:	adcs	r0, r6
   3d08c:	eors	r4, r3
   3d08e:	eors	r7, r0
   3d090:	mov.w	r8, r4, lsr #24
   3d094:	orr.w	ip, r8, r7, lsl #8
   3d098:	lsrs	r7, r7, #24
   3d09a:	orr.w	lr, r7, r4, lsl #8
   3d09e:	ldr	r4, [sp, #28]
   3d0a0:	adds	r1, r4, r1
   3d0a2:	ldr	r4, [sp, #32]
   3d0a4:	adc.w	r2, r4, r2
   3d0a8:	adds.w	r1, r1, ip
   3d0ac:	adc.w	r2, r2, lr
   3d0b0:	eors	r5, r1
   3d0b2:	eors	r6, r2
   3d0b4:	strd	r1, r2, [sp, #424]	; 0x1a8
   3d0b8:	lsrs	r1, r5, #16
   3d0ba:	orr.w	r2, r1, r6, lsl #16
   3d0be:	lsrs	r6, r6, #16
   3d0c0:	adds	r3, r3, r2
   3d0c2:	orr.w	r7, r6, r5, lsl #16
   3d0c6:	adc.w	r0, r7, r0
   3d0ca:	strd	r3, r0, [sp, #472]	; 0x1d8
   3d0ce:	eor.w	r0, r0, lr
   3d0d2:	eor.w	ip, r3, ip
   3d0d6:	strd	r2, r7, [sp, #512]	; 0x200
   3d0da:	lsls	r3, r0, #1
   3d0dc:	orr.w	r3, r3, ip, lsr #31
   3d0e0:	mov.w	ip, ip, lsl #1
   3d0e4:	orr.w	r0, ip, r0, lsr #31
   3d0e8:	strd	r0, r3, [sp, #432]	; 0x1b0
   3d0ec:	ldr	r1, [sp, #136]	; 0x88
   3d0ee:	ldr	r3, [sp, #136]	; 0x88
   3d0f0:	adds	r1, #8
   3d0f2:	str	r1, [sp, #136]	; 0x88
   3d0f4:	ldr	r1, [sp, #132]	; 0x84
   3d0f6:	ldrd	r2, r3, [r3]
   3d0fa:	ldr.w	r0, [r1, #8]!
   3d0fe:	eors	r2, r0
   3d100:	str	r1, [sp, #132]	; 0x84
   3d102:	ldr	r1, [r1, #4]
   3d104:	eors	r3, r1
   3d106:	ldr	r1, [sp, #136]	; 0x88
   3d108:	ldrd	r0, r1, [r1, #56]	; 0x38
   3d10c:	eors	r3, r1
   3d10e:	ldr	r1, [sp, #132]	; 0x84
   3d110:	eors	r2, r0
   3d112:	str	r2, [r1, #0]
   3d114:	ldr	r2, [sp, #140]	; 0x8c
   3d116:	str	r3, [r1, #4]
   3d118:	cmp	r1, r2
   3d11a:	bne.n	3d0ec <SHA256Result@@Base+0x3a08>
   3d11c:	ldr	r2, [pc, #24]	; (3d138 <SHA256Result@@Base+0x3a54>)
   3d11e:	ldr	r3, [pc, #28]	; (3d13c <SHA256Result@@Base+0x3a58>)
   3d120:	add	r2, pc
   3d122:	ldr	r3, [r2, r3]
   3d124:	ldr	r2, [r3, #0]
   3d126:	ldr	r3, [sp, #532]	; 0x214
   3d128:	eors	r2, r3
   3d12a:	beq.n	3d130 <SHA256Result@@Base+0x3a4c>
   3d12c:	blx	8c90 <__stack_chk_fail@plt>
   3d130:	add.w	sp, sp, #540	; 0x21c
   3d134:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d138:	blt.n	3d12c <SHA256Result@@Base+0x3a48>
   3d13a:	movs	r2, r0
   3d13c:	lsls	r0, r1, #10
	...

0003d140 <blake2b_init_param@@Base>:
   3d140:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3d144:	movs	r2, #240	; 0xf0
   3d146:	ldr	r6, [pc, #80]	; (3d198 <blake2b_init_param@@Base+0x58>)
   3d148:	mov	r5, r1
   3d14a:	movs	r1, #0
   3d14c:	mov	r4, r0
   3d14e:	blx	8f98 <memset@plt+0x4>
   3d152:	sub.w	r2, r4, #8
   3d156:	add	r6, pc
   3d158:	add.w	r8, r4, #56	; 0x38
   3d15c:	mov	r3, r2
   3d15e:	ldrd	r0, r1, [r6], #8
   3d162:	strd	r0, r1, [r3, #8]!
   3d166:	cmp	r3, r8
   3d168:	bne.n	3d15e <blake2b_init_param@@Base+0x1e>
   3d16a:	mov	r6, r5
   3d16c:	mov	r0, r6
   3d16e:	adds	r6, #8
   3d170:	bl	396f8 <SHA256Result@@Base+0x14>
   3d174:	ldr.w	r7, [r2, #8]!
   3d178:	cmp	r2, r8
   3d17a:	eor.w	r0, r0, r7
   3d17e:	ldr	r3, [r2, #4]
   3d180:	eor.w	r1, r1, r3
   3d184:	strd	r0, r1, [r2]
   3d188:	bne.n	3d16c <blake2b_init_param@@Base+0x2c>
   3d18a:	ldrb	r3, [r5, #0]
   3d18c:	movs	r0, #0
   3d18e:	str.w	r3, [r4, #228]	; 0xe4
   3d192:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3d196:	nop
   3d198:	stmia	r1!, {r1, r2, r5, r6}
   3d19a:	movs	r1, r0

0003d19c <blake2b_init@@Base>:
   3d19c:	ldr	r2, [pc, #124]	; (3d21c <blake2b_init@@Base+0x80>)
   3d19e:	ldr	r3, [pc, #128]	; (3d220 <blake2b_init@@Base+0x84>)
   3d1a0:	add	r2, pc
   3d1a2:	push	{r4, r5, lr}
   3d1a4:	sub	sp, #76	; 0x4c
   3d1a6:	ldr	r3, [r2, r3]
   3d1a8:	mov	r5, r0
   3d1aa:	ldr	r3, [r3, #0]
   3d1ac:	str	r3, [sp, #68]	; 0x44
   3d1ae:	mov.w	r3, #0
   3d1b2:	subs	r3, r1, #1
   3d1b4:	cmp	r3, #63	; 0x3f
   3d1b6:	bhi.n	3d210 <blake2b_init@@Base+0x74>
   3d1b8:	movs	r4, #0
   3d1ba:	movs	r2, #14
   3d1bc:	strb.w	r1, [sp, #4]
   3d1c0:	add.w	r0, sp, #22
   3d1c4:	mov	r1, r4
   3d1c6:	movw	r3, #257	; 0x101
   3d1ca:	strb.w	r4, [sp, #5]
   3d1ce:	strh.w	r3, [sp, #6]
   3d1d2:	strd	r4, r4, [sp, #8]
   3d1d6:	str	r4, [sp, #16]
   3d1d8:	strh.w	r4, [sp, #20]
   3d1dc:	blx	8f98 <memset@plt+0x4>
   3d1e0:	movs	r2, #16
   3d1e2:	mov	r1, r4
   3d1e4:	add	r0, sp, #36	; 0x24
   3d1e6:	blx	8f98 <memset@plt+0x4>
   3d1ea:	mov	r1, r4
   3d1ec:	add	r0, sp, #52	; 0x34
   3d1ee:	movs	r2, #16
   3d1f0:	blx	8f98 <memset@plt+0x4>
   3d1f4:	add	r1, sp, #4
   3d1f6:	mov	r0, r5
   3d1f8:	bl	3d140 <blake2b_init_param@@Base>
   3d1fc:	ldr	r2, [pc, #36]	; (3d224 <blake2b_init@@Base+0x88>)
   3d1fe:	ldr	r3, [pc, #32]	; (3d220 <blake2b_init@@Base+0x84>)
   3d200:	add	r2, pc
   3d202:	ldr	r3, [r2, r3]
   3d204:	ldr	r2, [r3, #0]
   3d206:	ldr	r3, [sp, #68]	; 0x44
   3d208:	eors	r2, r3
   3d20a:	beq.n	3d216 <blake2b_init@@Base+0x7a>
   3d20c:	blx	8c90 <__stack_chk_fail@plt>
   3d210:	mov.w	r0, #4294967295	; 0xffffffff
   3d214:	b.n	3d1fc <blake2b_init@@Base+0x60>
   3d216:	add	sp, #76	; 0x4c
   3d218:	pop	{r4, r5, pc}
   3d21a:	nop
   3d21c:	blt.n	3d310 <blake2b_init_key@@Base+0x10>
   3d21e:	movs	r2, r0
   3d220:	lsls	r0, r1, #10
   3d222:	movs	r0, r0
   3d224:	blt.n	3d258 <blake2b_update@@Base+0x30>
   3d226:	movs	r2, r0

0003d228 <blake2b_update@@Base>:
   3d228:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d22c:	mov	r4, r0
   3d22e:	mov	sl, r1
   3d230:	mov	r5, r2
   3d232:	cmp	r2, #0
   3d234:	beq.n	3d2c2 <blake2b_update@@Base+0x9a>
   3d236:	ldr.w	r3, [r0, #224]	; 0xe0
   3d23a:	add.w	fp, r0, #96	; 0x60
   3d23e:	rsb	r2, r3, #128	; 0x80
   3d242:	cmp	r5, r2
   3d244:	bls.n	3d2aa <blake2b_update@@Base+0x82>
   3d246:	movs	r0, #0
   3d248:	str.w	r0, [r4, #224]	; 0xe0
   3d24c:	add.w	r0, fp, r3
   3d250:	str	r2, [sp, #4]
   3d252:	str	r3, [sp, #0]
   3d254:	blx	8bdc <memcpy@plt+0x4>
   3d258:	ldrd	r1, r0, [r4, #64]	; 0x40
   3d25c:	adds.w	r8, r1, #128	; 0x80
   3d260:	adc.w	r9, r0, #0
   3d264:	ldrd	r0, r1, [r4, #72]	; 0x48
   3d268:	cmp.w	r9, #0
   3d26c:	strd	r8, r9, [r4, #64]	; 0x40
   3d270:	it	eq
   3d272:	cmpeq.w	r8, #128	; 0x80
   3d276:	ite	cc
   3d278:	movcc.w	ip, #1
   3d27c:	movcs.w	ip, #0
   3d280:	adds.w	r0, r0, ip
   3d284:	adc.w	r1, r1, #0
   3d288:	strd	r0, r1, [r4, #72]	; 0x48
   3d28c:	mov	r1, fp
   3d28e:	mov	r0, r4
   3d290:	bl	39700 <SHA256Result@@Base+0x1c>
   3d294:	ldr	r3, [sp, #0]
   3d296:	ldr	r2, [sp, #4]
   3d298:	subs	r3, #128	; 0x80
   3d29a:	add	r2, sl
   3d29c:	add	r5, r3
   3d29e:	add.w	r8, r2, r5
   3d2a2:	cmp	r5, #128	; 0x80
   3d2a4:	sub.w	sl, r8, r5
   3d2a8:	bhi.n	3d2ca <blake2b_update@@Base+0xa2>
   3d2aa:	ldr.w	r0, [r4, #224]	; 0xe0
   3d2ae:	mov	r2, r5
   3d2b0:	mov	r1, sl
   3d2b2:	add	r0, fp
   3d2b4:	blx	8bdc <memcpy@plt+0x4>
   3d2b8:	ldr.w	r2, [r4, #224]	; 0xe0
   3d2bc:	add	r2, r5
   3d2be:	str.w	r2, [r4, #224]	; 0xe0
   3d2c2:	movs	r0, #0
   3d2c4:	add	sp, #12
   3d2c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d2ca:	ldrd	r3, r2, [r4, #64]	; 0x40
   3d2ce:	mov	r0, r4
   3d2d0:	subs	r5, #128	; 0x80
   3d2d2:	adds.w	r6, r3, #128	; 0x80
   3d2d6:	adc.w	r7, r2, #0
   3d2da:	ldrd	r2, r3, [r4, #72]	; 0x48
   3d2de:	cmp	r7, #0
   3d2e0:	strd	r6, r7, [r4, #64]	; 0x40
   3d2e4:	it	eq
   3d2e6:	cmpeq	r6, #128	; 0x80
   3d2e8:	ite	cc
   3d2ea:	movcc	r1, #1
   3d2ec:	movcs	r1, #0
   3d2ee:	adds	r2, r2, r1
   3d2f0:	mov	r1, sl
   3d2f2:	adc.w	r3, r3, #0
   3d2f6:	strd	r2, r3, [r4, #72]	; 0x48
   3d2fa:	bl	39700 <SHA256Result@@Base+0x1c>
   3d2fe:	b.n	3d2a2 <blake2b_update@@Base+0x7a>

0003d300 <blake2b_init_key@@Base>:
   3d300:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3d304:	mov	r8, r2
   3d306:	ldr	r2, [pc, #192]	; (3d3c8 <blake2b_init_key@@Base+0xc8>)
   3d308:	mov	r6, r3
   3d30a:	ldr	r3, [pc, #192]	; (3d3cc <blake2b_init_key@@Base+0xcc>)
   3d30c:	sub	sp, #200	; 0xc8
   3d30e:	add	r2, pc
   3d310:	mov	r7, r0
   3d312:	ldr	r3, [r2, r3]
   3d314:	ldr	r3, [r3, #0]
   3d316:	str	r3, [sp, #196]	; 0xc4
   3d318:	mov.w	r3, #0
   3d31c:	subs	r3, r1, #1
   3d31e:	cmp	r3, #63	; 0x3f
   3d320:	bls.n	3d33a <blake2b_init_key@@Base+0x3a>
   3d322:	mov.w	r0, #4294967295	; 0xffffffff
   3d326:	ldr	r2, [pc, #168]	; (3d3d0 <blake2b_init_key@@Base+0xd0>)
   3d328:	ldr	r3, [pc, #160]	; (3d3cc <blake2b_init_key@@Base+0xcc>)
   3d32a:	add	r2, pc
   3d32c:	ldr	r3, [r2, r3]
   3d32e:	ldr	r2, [r3, #0]
   3d330:	ldr	r3, [sp, #196]	; 0xc4
   3d332:	eors	r2, r3
   3d334:	beq.n	3d3c2 <blake2b_init_key@@Base+0xc2>
   3d336:	blx	8c90 <__stack_chk_fail@plt>
   3d33a:	cmp.w	r8, #0
   3d33e:	beq.n	3d322 <blake2b_init_key@@Base+0x22>
   3d340:	subs	r3, r6, #1
   3d342:	cmp	r3, #63	; 0x3f
   3d344:	bhi.n	3d322 <blake2b_init_key@@Base+0x22>
   3d346:	movs	r4, #0
   3d348:	movs	r2, #14
   3d34a:	strb.w	r1, [sp, #4]
   3d34e:	add.w	r0, sp, #22
   3d352:	mov	r1, r4
   3d354:	movw	r3, #257	; 0x101
   3d358:	strb.w	r6, [sp, #5]
   3d35c:	strh.w	r3, [sp, #6]
   3d360:	strd	r4, r4, [sp, #8]
   3d364:	str	r4, [sp, #16]
   3d366:	strh.w	r4, [sp, #20]
   3d36a:	blx	8f98 <memset@plt+0x4>
   3d36e:	movs	r2, #16
   3d370:	mov	r1, r4
   3d372:	add	r0, sp, #36	; 0x24
   3d374:	blx	8f98 <memset@plt+0x4>
   3d378:	movs	r2, #16
   3d37a:	mov	r1, r4
   3d37c:	add	r0, sp, #52	; 0x34
   3d37e:	blx	8f98 <memset@plt+0x4>
   3d382:	add	r1, sp, #4
   3d384:	mov	r0, r7
   3d386:	bl	3d140 <blake2b_init_param@@Base>
   3d38a:	cmp	r0, r4
   3d38c:	blt.n	3d322 <blake2b_init_key@@Base+0x22>
   3d38e:	add	r5, sp, #68	; 0x44
   3d390:	movs	r2, #128	; 0x80
   3d392:	mov	r1, r4
   3d394:	mov	r0, r5
   3d396:	blx	8f98 <memset@plt+0x4>
   3d39a:	movs	r3, #128	; 0x80
   3d39c:	mov	r2, r6
   3d39e:	mov	r1, r8
   3d3a0:	mov	r0, r5
   3d3a2:	blx	8d2c <__memcpy_chk@plt>
   3d3a6:	movs	r2, #128	; 0x80
   3d3a8:	mov	r1, r5
   3d3aa:	mov	r0, r7
   3d3ac:	bl	3d228 <blake2b_update@@Base>
   3d3b0:	ldr	r3, [pc, #32]	; (3d3d4 <blake2b_init_key@@Base+0xd4>)
   3d3b2:	movs	r2, #128	; 0x80
   3d3b4:	mov	r1, r4
   3d3b6:	add	r3, pc
   3d3b8:	mov	r0, r5
   3d3ba:	ldr	r3, [r3, #0]
   3d3bc:	blx	r3
   3d3be:	mov	r0, r4
   3d3c0:	b.n	3d326 <blake2b_init_key@@Base+0x26>
   3d3c2:	add	sp, #200	; 0xc8
   3d3c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3d3c8:	bge.n	3d3e0 <blake2b_final@@Base+0x8>
   3d3ca:	movs	r2, r0
   3d3cc:	lsls	r0, r1, #10
   3d3ce:	movs	r0, r0
   3d3d0:	bls.n	3d3b0 <blake2b_init_key@@Base+0xb0>
   3d3d2:	movs	r2, r0
   3d3d4:	cdp	0, 8, cr0, cr2, cr2, {0}

0003d3d8 <blake2b_final@@Base>:
   3d3d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3d3dc:	mov	r6, r2
   3d3de:	ldr	r2, [pc, #280]	; (3d4f8 <blake2b_final@@Base+0x120>)
   3d3e0:	sub	sp, #76	; 0x4c
   3d3e2:	ldr	r3, [pc, #280]	; (3d4fc <blake2b_final@@Base+0x124>)
   3d3e4:	mov	r5, r1
   3d3e6:	add	r2, pc
   3d3e8:	mov	r4, r0
   3d3ea:	movs	r1, #0
   3d3ec:	add	r0, sp, #8
   3d3ee:	ldr	r3, [r2, r3]
   3d3f0:	movs	r2, #60	; 0x3c
   3d3f2:	ldr	r3, [r3, #0]
   3d3f4:	str	r3, [sp, #68]	; 0x44
   3d3f6:	mov.w	r3, #0
   3d3fa:	str	r1, [sp, #4]
   3d3fc:	blx	8f98 <memset@plt+0x4>
   3d400:	cmp	r5, #0
   3d402:	beq.n	3d4ec <blake2b_final@@Base+0x114>
   3d404:	ldr.w	r3, [r4, #228]	; 0xe4
   3d408:	cmp	r3, r6
   3d40a:	bhi.n	3d4ec <blake2b_final@@Base+0x114>
   3d40c:	ldrd	r2, r3, [r4, #80]	; 0x50
   3d410:	orrs	r3, r2
   3d412:	bne.n	3d4ec <blake2b_final@@Base+0x114>
   3d414:	ldrd	r2, r3, [r4, #64]	; 0x40
   3d418:	movs	r7, #0
   3d41a:	ldr.w	r0, [r4, #224]	; 0xe0
   3d41e:	adds.w	r8, r0, r2
   3d422:	adcs.w	r9, r7, r3
   3d426:	ldrd	r2, r3, [r4, #72]	; 0x48
   3d42a:	strd	r8, r9, [r4, #64]	; 0x40
   3d42e:	ite	cs
   3d430:	movcs	r1, #1
   3d432:	movcc	r1, #0
   3d434:	adds	r2, r2, r1
   3d436:	ldrb.w	r1, [r4, #232]	; 0xe8
   3d43a:	adc.w	r3, r3, #0
   3d43e:	strd	r2, r3, [r4, #72]	; 0x48
   3d442:	mov.w	r2, #4294967295	; 0xffffffff
   3d446:	mov.w	r3, #4294967295	; 0xffffffff
   3d44a:	cbz	r1, 3d450 <blake2b_final@@Base+0x78>
   3d44c:	strd	r2, r3, [r4, #88]	; 0x58
   3d450:	add.w	r6, r4, #96	; 0x60
   3d454:	strd	r2, r3, [r4, #80]	; 0x50
   3d458:	movs	r1, #0
   3d45a:	rsb	r2, r0, #128	; 0x80
   3d45e:	add	r0, r6
   3d460:	add.w	r7, r4, #56	; 0x38
   3d464:	blx	8f98 <memset@plt+0x4>
   3d468:	mov	r1, r6
   3d46a:	mov	r0, r4
   3d46c:	bl	39700 <SHA256Result@@Base+0x1c>
   3d470:	add	r3, sp, #4
   3d472:	sub.w	r1, r4, #8
   3d476:	mov	r6, r3
   3d478:	ldr.w	r0, [r1, #8]!
   3d47c:	adds	r3, #8
   3d47e:	cmp	r1, r7
   3d480:	ldr	r2, [r1, #4]
   3d482:	mov.w	ip, r0, lsr #8
   3d486:	strb.w	r0, [r3, #-8]
   3d48a:	strb.w	ip, [r3, #-7]
   3d48e:	mov.w	ip, r0, lsr #16
   3d492:	strb.w	r2, [r3, #-4]
   3d496:	mov.w	r0, r0, lsr #24
   3d49a:	strb.w	ip, [r3, #-6]
   3d49e:	strb.w	r0, [r3, #-5]
   3d4a2:	mov.w	r0, r2, lsr #8
   3d4a6:	strb.w	r0, [r3, #-3]
   3d4aa:	mov.w	r0, r2, lsr #16
   3d4ae:	mov.w	r2, r2, lsr #24
   3d4b2:	strb.w	r0, [r3, #-2]
   3d4b6:	strb.w	r2, [r3, #-1]
   3d4ba:	bne.n	3d478 <blake2b_final@@Base+0xa0>
   3d4bc:	ldr.w	r2, [r4, #228]	; 0xe4
   3d4c0:	mov	r1, r6
   3d4c2:	mov	r0, r5
   3d4c4:	blx	8bdc <memcpy@plt+0x4>
   3d4c8:	ldr	r3, [pc, #52]	; (3d500 <blake2b_final@@Base+0x128>)
   3d4ca:	movs	r2, #64	; 0x40
   3d4cc:	movs	r1, #0
   3d4ce:	add	r3, pc
   3d4d0:	mov	r0, r6
   3d4d2:	ldr	r3, [r3, #0]
   3d4d4:	blx	r3
   3d4d6:	movs	r0, #0
   3d4d8:	ldr	r2, [pc, #40]	; (3d504 <blake2b_final@@Base+0x12c>)
   3d4da:	ldr	r3, [pc, #32]	; (3d4fc <blake2b_final@@Base+0x124>)
   3d4dc:	add	r2, pc
   3d4de:	ldr	r3, [r2, r3]
   3d4e0:	ldr	r2, [r3, #0]
   3d4e2:	ldr	r3, [sp, #68]	; 0x44
   3d4e4:	eors	r2, r3
   3d4e6:	beq.n	3d4f2 <blake2b_final@@Base+0x11a>
   3d4e8:	blx	8c90 <__stack_chk_fail@plt>
   3d4ec:	mov.w	r0, #4294967295	; 0xffffffff
   3d4f0:	b.n	3d4d8 <blake2b_final@@Base+0x100>
   3d4f2:	add	sp, #76	; 0x4c
   3d4f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   3d4f8:	bls.n	3d560 <blake2b@@Base+0x58>
   3d4fa:	movs	r2, r0
   3d4fc:	lsls	r0, r1, #10
   3d4fe:	movs	r0, r0
   3d500:	stcl	0, cr0, [sl, #-8]!
   3d504:	bhi.n	3d580 <blake2b@@Base+0x78>
   3d506:	movs	r2, r0

0003d508 <blake2b@@Base>:
   3d508:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3d50c:	mov	r6, r0
   3d50e:	ldr	r5, [pc, #136]	; (3d598 <blake2b@@Base+0x90>)
   3d510:	sub	sp, #248	; 0xf8
   3d512:	ldr	r0, [pc, #136]	; (3d59c <blake2b@@Base+0x94>)
   3d514:	mov	r4, r1
   3d516:	add	r5, pc
   3d518:	mov	r8, r3
   3d51a:	mov	r7, r2
   3d51c:	ldrd	r1, r3, [sp, #272]	; 0x110
   3d520:	ldr	r0, [r5, r0]
   3d522:	ldr	r0, [r0, #0]
   3d524:	str	r0, [sp, #244]	; 0xf4
   3d526:	mov.w	r0, #0
   3d52a:	cbnz	r2, 3d54a <blake2b@@Base+0x42>
   3d52c:	cmp.w	r8, #0
   3d530:	beq.n	3d54a <blake2b@@Base+0x42>
   3d532:	mov.w	r0, #4294967295	; 0xffffffff
   3d536:	ldr	r2, [pc, #104]	; (3d5a0 <blake2b@@Base+0x98>)
   3d538:	ldr	r3, [pc, #96]	; (3d59c <blake2b@@Base+0x94>)
   3d53a:	add	r2, pc
   3d53c:	ldr	r3, [r2, r3]
   3d53e:	ldr	r2, [r3, #0]
   3d540:	ldr	r3, [sp, #244]	; 0xf4
   3d542:	eors	r2, r3
   3d544:	beq.n	3d592 <blake2b@@Base+0x8a>
   3d546:	blx	8c90 <__stack_chk_fail@plt>
   3d54a:	cmp	r6, #0
   3d54c:	beq.n	3d532 <blake2b@@Base+0x2a>
   3d54e:	cbnz	r1, 3d554 <blake2b@@Base+0x4c>
   3d550:	cmp	r3, #0
   3d552:	bne.n	3d532 <blake2b@@Base+0x2a>
   3d554:	subs	r2, r4, #1
   3d556:	cmp	r2, #63	; 0x3f
   3d558:	bhi.n	3d532 <blake2b@@Base+0x2a>
   3d55a:	cmp	r3, #64	; 0x40
   3d55c:	bhi.n	3d532 <blake2b@@Base+0x2a>
   3d55e:	mov	r5, sp
   3d560:	cbz	r3, 3d588 <blake2b@@Base+0x80>
   3d562:	mov	r2, r1
   3d564:	mov	r0, r5
   3d566:	mov	r1, r4
   3d568:	bl	3d300 <blake2b_init_key@@Base>
   3d56c:	cmp	r0, #0
   3d56e:	blt.n	3d532 <blake2b@@Base+0x2a>
   3d570:	mov	r2, r8
   3d572:	mov	r1, r7
   3d574:	mov	r0, r5
   3d576:	bl	3d228 <blake2b_update@@Base>
   3d57a:	mov	r2, r4
   3d57c:	mov	r1, r6
   3d57e:	mov	r0, r5
   3d580:	bl	3d3d8 <blake2b_final@@Base>
   3d584:	movs	r0, #0
   3d586:	b.n	3d536 <blake2b@@Base+0x2e>
   3d588:	mov	r1, r4
   3d58a:	mov	r0, r5
   3d58c:	bl	3d19c <blake2b_init@@Base>
   3d590:	b.n	3d56c <blake2b@@Base+0x64>
   3d592:	add	sp, #248	; 0xf8
   3d594:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3d598:	bhi.n	3d5a0 <blake2b@@Base+0x98>
   3d59a:	movs	r2, r0
   3d59c:	lsls	r0, r1, #10
   3d59e:	movs	r0, r0
   3d5a0:	bvc.n	3d560 <blake2b@@Base+0x58>
   3d5a2:	movs	r2, r0

0003d5a4 <blake2@@Base>:
   3d5a4:	b.w	3d508 <blake2b@@Base>

0003d5a8 <btrfs_util_strerror@@Base>:
   3d5a8:	cmp	r0, #26
   3d5aa:	bhi.n	3d5b6 <btrfs_util_strerror@@Base+0xe>
   3d5ac:	ldr	r3, [pc, #12]	; (3d5bc <btrfs_util_strerror@@Base+0x14>)
   3d5ae:	add	r3, pc
   3d5b0:	ldr.w	r0, [r3, r0, lsl #2]
   3d5b4:	bx	lr
   3d5b6:	movs	r0, #0
   3d5b8:	bx	lr
   3d5ba:	nop
   3d5bc:	bpl.n	3d56c <blake2b@@Base+0x64>
   3d5be:	movs	r2, r0
   3d5c0:	subs	r2, r1, #1
   3d5c2:	it	eq
   3d5c4:	bxeq	lr
   3d5c6:	bcc.w	3d812 <btrfs_util_strerror@@Base+0x26a>
   3d5ca:	cmp	r0, r1
   3d5cc:	bls.w	3d7fc <btrfs_util_strerror@@Base+0x254>
   3d5d0:	tst	r1, r2
   3d5d2:	beq.w	3d804 <btrfs_util_strerror@@Base+0x25c>
   3d5d6:	clz	r3, r0
   3d5da:	clz	r2, r1
   3d5de:	sub.w	r3, r2, r3
   3d5e2:	rsb	r3, r3, #31
   3d5e6:	add	r2, pc, #16	; (adr r2, 3d5f8 <btrfs_util_strerror@@Base+0x50>)
   3d5e8:	add.w	r3, r2, r3, lsl #4
   3d5ec:	mov.w	r2, #0
   3d5f0:	mov	pc, r3
   3d5f2:	nop
   3d5f4:	nop.w
   3d5f8:	cmp.w	r0, r1, lsl #31
   3d5fc:	nop
   3d5fe:	adc.w	r2, r2, r2
   3d602:	it	cs
   3d604:	subcs.w	r0, r0, r1, lsl #31
   3d608:	cmp.w	r0, r1, lsl #30
   3d60c:	nop
   3d60e:	adc.w	r2, r2, r2
   3d612:	it	cs
   3d614:	subcs.w	r0, r0, r1, lsl #30
   3d618:	cmp.w	r0, r1, lsl #29
   3d61c:	nop
   3d61e:	adc.w	r2, r2, r2
   3d622:	it	cs
   3d624:	subcs.w	r0, r0, r1, lsl #29
   3d628:	cmp.w	r0, r1, lsl #28
   3d62c:	nop
   3d62e:	adc.w	r2, r2, r2
   3d632:	it	cs
   3d634:	subcs.w	r0, r0, r1, lsl #28
   3d638:	cmp.w	r0, r1, lsl #27
   3d63c:	nop
   3d63e:	adc.w	r2, r2, r2
   3d642:	it	cs
   3d644:	subcs.w	r0, r0, r1, lsl #27
   3d648:	cmp.w	r0, r1, lsl #26
   3d64c:	nop
   3d64e:	adc.w	r2, r2, r2
   3d652:	it	cs
   3d654:	subcs.w	r0, r0, r1, lsl #26
   3d658:	cmp.w	r0, r1, lsl #25
   3d65c:	nop
   3d65e:	adc.w	r2, r2, r2
   3d662:	it	cs
   3d664:	subcs.w	r0, r0, r1, lsl #25
   3d668:	cmp.w	r0, r1, lsl #24
   3d66c:	nop
   3d66e:	adc.w	r2, r2, r2
   3d672:	it	cs
   3d674:	subcs.w	r0, r0, r1, lsl #24
   3d678:	cmp.w	r0, r1, lsl #23
   3d67c:	nop
   3d67e:	adc.w	r2, r2, r2
   3d682:	it	cs
   3d684:	subcs.w	r0, r0, r1, lsl #23
   3d688:	cmp.w	r0, r1, lsl #22
   3d68c:	nop
   3d68e:	adc.w	r2, r2, r2
   3d692:	it	cs
   3d694:	subcs.w	r0, r0, r1, lsl #22
   3d698:	cmp.w	r0, r1, lsl #21
   3d69c:	nop
   3d69e:	adc.w	r2, r2, r2
   3d6a2:	it	cs
   3d6a4:	subcs.w	r0, r0, r1, lsl #21
   3d6a8:	cmp.w	r0, r1, lsl #20
   3d6ac:	nop
   3d6ae:	adc.w	r2, r2, r2
   3d6b2:	it	cs
   3d6b4:	subcs.w	r0, r0, r1, lsl #20
   3d6b8:	cmp.w	r0, r1, lsl #19
   3d6bc:	nop
   3d6be:	adc.w	r2, r2, r2
   3d6c2:	it	cs
   3d6c4:	subcs.w	r0, r0, r1, lsl #19
   3d6c8:	cmp.w	r0, r1, lsl #18
   3d6cc:	nop
   3d6ce:	adc.w	r2, r2, r2
   3d6d2:	it	cs
   3d6d4:	subcs.w	r0, r0, r1, lsl #18
   3d6d8:	cmp.w	r0, r1, lsl #17
   3d6dc:	nop
   3d6de:	adc.w	r2, r2, r2
   3d6e2:	it	cs
   3d6e4:	subcs.w	r0, r0, r1, lsl #17
   3d6e8:	cmp.w	r0, r1, lsl #16
   3d6ec:	nop
   3d6ee:	adc.w	r2, r2, r2
   3d6f2:	it	cs
   3d6f4:	subcs.w	r0, r0, r1, lsl #16
   3d6f8:	cmp.w	r0, r1, lsl #15
   3d6fc:	nop
   3d6fe:	adc.w	r2, r2, r2
   3d702:	it	cs
   3d704:	subcs.w	r0, r0, r1, lsl #15
   3d708:	cmp.w	r0, r1, lsl #14
   3d70c:	nop
   3d70e:	adc.w	r2, r2, r2
   3d712:	it	cs
   3d714:	subcs.w	r0, r0, r1, lsl #14
   3d718:	cmp.w	r0, r1, lsl #13
   3d71c:	nop
   3d71e:	adc.w	r2, r2, r2
   3d722:	it	cs
   3d724:	subcs.w	r0, r0, r1, lsl #13
   3d728:	cmp.w	r0, r1, lsl #12
   3d72c:	nop
   3d72e:	adc.w	r2, r2, r2
   3d732:	it	cs
   3d734:	subcs.w	r0, r0, r1, lsl #12
   3d738:	cmp.w	r0, r1, lsl #11
   3d73c:	nop
   3d73e:	adc.w	r2, r2, r2
   3d742:	it	cs
   3d744:	subcs.w	r0, r0, r1, lsl #11
   3d748:	cmp.w	r0, r1, lsl #10
   3d74c:	nop
   3d74e:	adc.w	r2, r2, r2
   3d752:	it	cs
   3d754:	subcs.w	r0, r0, r1, lsl #10
   3d758:	cmp.w	r0, r1, lsl #9
   3d75c:	nop
   3d75e:	adc.w	r2, r2, r2
   3d762:	it	cs
   3d764:	subcs.w	r0, r0, r1, lsl #9
   3d768:	cmp.w	r0, r1, lsl #8
   3d76c:	nop
   3d76e:	adc.w	r2, r2, r2
   3d772:	it	cs
   3d774:	subcs.w	r0, r0, r1, lsl #8
   3d778:	cmp.w	r0, r1, lsl #7
   3d77c:	nop
   3d77e:	adc.w	r2, r2, r2
   3d782:	it	cs
   3d784:	subcs.w	r0, r0, r1, lsl #7
   3d788:	cmp.w	r0, r1, lsl #6
   3d78c:	nop
   3d78e:	adc.w	r2, r2, r2
   3d792:	it	cs
   3d794:	subcs.w	r0, r0, r1, lsl #6
   3d798:	cmp.w	r0, r1, lsl #5
   3d79c:	nop
   3d79e:	adc.w	r2, r2, r2
   3d7a2:	it	cs
   3d7a4:	subcs.w	r0, r0, r1, lsl #5
   3d7a8:	cmp.w	r0, r1, lsl #4
   3d7ac:	nop
   3d7ae:	adc.w	r2, r2, r2
   3d7b2:	it	cs
   3d7b4:	subcs.w	r0, r0, r1, lsl #4
   3d7b8:	cmp.w	r0, r1, lsl #3
   3d7bc:	nop
   3d7be:	adc.w	r2, r2, r2
   3d7c2:	it	cs
   3d7c4:	subcs.w	r0, r0, r1, lsl #3
   3d7c8:	cmp.w	r0, r1, lsl #2
   3d7cc:	nop
   3d7ce:	adc.w	r2, r2, r2
   3d7d2:	it	cs
   3d7d4:	subcs.w	r0, r0, r1, lsl #2
   3d7d8:	cmp.w	r0, r1, lsl #1
   3d7dc:	nop
   3d7de:	adc.w	r2, r2, r2
   3d7e2:	it	cs
   3d7e4:	subcs.w	r0, r0, r1, lsl #1
   3d7e8:	cmp.w	r0, r1
   3d7ec:	nop
   3d7ee:	adc.w	r2, r2, r2
   3d7f2:	it	cs
   3d7f4:	subcs.w	r0, r0, r1
   3d7f8:	mov	r0, r2
   3d7fa:	bx	lr
   3d7fc:	ite	eq
   3d7fe:	moveq	r0, #1
   3d800:	movne	r0, #0
   3d802:	bx	lr
   3d804:	clz	r2, r1
   3d808:	rsb	r2, r2, #31
   3d80c:	lsr.w	r0, r0, r2
   3d810:	bx	lr
   3d812:	cbz	r0, 3d818 <btrfs_util_strerror@@Base+0x270>
   3d814:	mov.w	r0, #4294967295	; 0xffffffff
   3d818:	b.w	3ddd4 <btrfs_util_strerror@@Base+0x82c>
   3d81c:	cmp	r1, #0
   3d81e:	beq.n	3d812 <btrfs_util_strerror@@Base+0x26a>
   3d820:	stmdb	sp!, {r0, r1, lr}
   3d824:	bl	3d5c0 <btrfs_util_strerror@@Base+0x18>
   3d828:	ldmia.w	sp!, {r1, r2, lr}
   3d82c:	mul.w	r3, r2, r0
   3d830:	sub.w	r1, r1, r3
   3d834:	bx	lr
   3d836:	nop
   3d838:	cmp	r1, #0
   3d83a:	beq.w	3daba <btrfs_util_strerror@@Base+0x512>
   3d83e:	eor.w	ip, r0, r1
   3d842:	it	mi
   3d844:	negmi	r1, r1
   3d846:	subs	r2, r1, #1
   3d848:	beq.w	3da8a <btrfs_util_strerror@@Base+0x4e2>
   3d84c:	movs	r3, r0
   3d84e:	it	mi
   3d850:	negmi	r3, r0
   3d852:	cmp	r3, r1
   3d854:	bls.w	3da94 <btrfs_util_strerror@@Base+0x4ec>
   3d858:	tst	r1, r2
   3d85a:	beq.w	3daa4 <btrfs_util_strerror@@Base+0x4fc>
   3d85e:	clz	r2, r3
   3d862:	clz	r0, r1
   3d866:	sub.w	r2, r0, r2
   3d86a:	rsb	r2, r2, #31
   3d86e:	add	r0, pc, #16	; (adr r0, 3d880 <btrfs_util_strerror@@Base+0x2d8>)
   3d870:	add.w	r2, r0, r2, lsl #4
   3d874:	mov.w	r0, #0
   3d878:	mov	pc, r2
   3d87a:	nop
   3d87c:	nop.w
   3d880:	cmp.w	r3, r1, lsl #31
   3d884:	nop
   3d886:	adc.w	r0, r0, r0
   3d88a:	it	cs
   3d88c:	subcs.w	r3, r3, r1, lsl #31
   3d890:	cmp.w	r3, r1, lsl #30
   3d894:	nop
   3d896:	adc.w	r0, r0, r0
   3d89a:	it	cs
   3d89c:	subcs.w	r3, r3, r1, lsl #30
   3d8a0:	cmp.w	r3, r1, lsl #29
   3d8a4:	nop
   3d8a6:	adc.w	r0, r0, r0
   3d8aa:	it	cs
   3d8ac:	subcs.w	r3, r3, r1, lsl #29
   3d8b0:	cmp.w	r3, r1, lsl #28
   3d8b4:	nop
   3d8b6:	adc.w	r0, r0, r0
   3d8ba:	it	cs
   3d8bc:	subcs.w	r3, r3, r1, lsl #28
   3d8c0:	cmp.w	r3, r1, lsl #27
   3d8c4:	nop
   3d8c6:	adc.w	r0, r0, r0
   3d8ca:	it	cs
   3d8cc:	subcs.w	r3, r3, r1, lsl #27
   3d8d0:	cmp.w	r3, r1, lsl #26
   3d8d4:	nop
   3d8d6:	adc.w	r0, r0, r0
   3d8da:	it	cs
   3d8dc:	subcs.w	r3, r3, r1, lsl #26
   3d8e0:	cmp.w	r3, r1, lsl #25
   3d8e4:	nop
   3d8e6:	adc.w	r0, r0, r0
   3d8ea:	it	cs
   3d8ec:	subcs.w	r3, r3, r1, lsl #25
   3d8f0:	cmp.w	r3, r1, lsl #24
   3d8f4:	nop
   3d8f6:	adc.w	r0, r0, r0
   3d8fa:	it	cs
   3d8fc:	subcs.w	r3, r3, r1, lsl #24
   3d900:	cmp.w	r3, r1, lsl #23
   3d904:	nop
   3d906:	adc.w	r0, r0, r0
   3d90a:	it	cs
   3d90c:	subcs.w	r3, r3, r1, lsl #23
   3d910:	cmp.w	r3, r1, lsl #22
   3d914:	nop
   3d916:	adc.w	r0, r0, r0
   3d91a:	it	cs
   3d91c:	subcs.w	r3, r3, r1, lsl #22
   3d920:	cmp.w	r3, r1, lsl #21
   3d924:	nop
   3d926:	adc.w	r0, r0, r0
   3d92a:	it	cs
   3d92c:	subcs.w	r3, r3, r1, lsl #21
   3d930:	cmp.w	r3, r1, lsl #20
   3d934:	nop
   3d936:	adc.w	r0, r0, r0
   3d93a:	it	cs
   3d93c:	subcs.w	r3, r3, r1, lsl #20
   3d940:	cmp.w	r3, r1, lsl #19
   3d944:	nop
   3d946:	adc.w	r0, r0, r0
   3d94a:	it	cs
   3d94c:	subcs.w	r3, r3, r1, lsl #19
   3d950:	cmp.w	r3, r1, lsl #18
   3d954:	nop
   3d956:	adc.w	r0, r0, r0
   3d95a:	it	cs
   3d95c:	subcs.w	r3, r3, r1, lsl #18
   3d960:	cmp.w	r3, r1, lsl #17
   3d964:	nop
   3d966:	adc.w	r0, r0, r0
   3d96a:	it	cs
   3d96c:	subcs.w	r3, r3, r1, lsl #17
   3d970:	cmp.w	r3, r1, lsl #16
   3d974:	nop
   3d976:	adc.w	r0, r0, r0
   3d97a:	it	cs
   3d97c:	subcs.w	r3, r3, r1, lsl #16
   3d980:	cmp.w	r3, r1, lsl #15
   3d984:	nop
   3d986:	adc.w	r0, r0, r0
   3d98a:	it	cs
   3d98c:	subcs.w	r3, r3, r1, lsl #15
   3d990:	cmp.w	r3, r1, lsl #14
   3d994:	nop
   3d996:	adc.w	r0, r0, r0
   3d99a:	it	cs
   3d99c:	subcs.w	r3, r3, r1, lsl #14
   3d9a0:	cmp.w	r3, r1, lsl #13
   3d9a4:	nop
   3d9a6:	adc.w	r0, r0, r0
   3d9aa:	it	cs
   3d9ac:	subcs.w	r3, r3, r1, lsl #13
   3d9b0:	cmp.w	r3, r1, lsl #12
   3d9b4:	nop
   3d9b6:	adc.w	r0, r0, r0
   3d9ba:	it	cs
   3d9bc:	subcs.w	r3, r3, r1, lsl #12
   3d9c0:	cmp.w	r3, r1, lsl #11
   3d9c4:	nop
   3d9c6:	adc.w	r0, r0, r0
   3d9ca:	it	cs
   3d9cc:	subcs.w	r3, r3, r1, lsl #11
   3d9d0:	cmp.w	r3, r1, lsl #10
   3d9d4:	nop
   3d9d6:	adc.w	r0, r0, r0
   3d9da:	it	cs
   3d9dc:	subcs.w	r3, r3, r1, lsl #10
   3d9e0:	cmp.w	r3, r1, lsl #9
   3d9e4:	nop
   3d9e6:	adc.w	r0, r0, r0
   3d9ea:	it	cs
   3d9ec:	subcs.w	r3, r3, r1, lsl #9
   3d9f0:	cmp.w	r3, r1, lsl #8
   3d9f4:	nop
   3d9f6:	adc.w	r0, r0, r0
   3d9fa:	it	cs
   3d9fc:	subcs.w	r3, r3, r1, lsl #8
   3da00:	cmp.w	r3, r1, lsl #7
   3da04:	nop
   3da06:	adc.w	r0, r0, r0
   3da0a:	it	cs
   3da0c:	subcs.w	r3, r3, r1, lsl #7
   3da10:	cmp.w	r3, r1, lsl #6
   3da14:	nop
   3da16:	adc.w	r0, r0, r0
   3da1a:	it	cs
   3da1c:	subcs.w	r3, r3, r1, lsl #6
   3da20:	cmp.w	r3, r1, lsl #5
   3da24:	nop
   3da26:	adc.w	r0, r0, r0
   3da2a:	it	cs
   3da2c:	subcs.w	r3, r3, r1, lsl #5
   3da30:	cmp.w	r3, r1, lsl #4
   3da34:	nop
   3da36:	adc.w	r0, r0, r0
   3da3a:	it	cs
   3da3c:	subcs.w	r3, r3, r1, lsl #4
   3da40:	cmp.w	r3, r1, lsl #3
   3da44:	nop
   3da46:	adc.w	r0, r0, r0
   3da4a:	it	cs
   3da4c:	subcs.w	r3, r3, r1, lsl #3
   3da50:	cmp.w	r3, r1, lsl #2
   3da54:	nop
   3da56:	adc.w	r0, r0, r0
   3da5a:	it	cs
   3da5c:	subcs.w	r3, r3, r1, lsl #2
   3da60:	cmp.w	r3, r1, lsl #1
   3da64:	nop
   3da66:	adc.w	r0, r0, r0
   3da6a:	it	cs
   3da6c:	subcs.w	r3, r3, r1, lsl #1
   3da70:	cmp.w	r3, r1
   3da74:	nop
   3da76:	adc.w	r0, r0, r0
   3da7a:	it	cs
   3da7c:	subcs.w	r3, r3, r1
   3da80:	cmp.w	ip, #0
   3da84:	it	mi
   3da86:	negmi	r0, r0
   3da88:	bx	lr
   3da8a:	teq	ip, r0
   3da8e:	it	mi
   3da90:	negmi	r0, r0
   3da92:	bx	lr
   3da94:	it	cc
   3da96:	movcc	r0, #0
   3da98:	itt	eq
   3da9a:	moveq.w	r0, ip, asr #31
   3da9e:	orreq.w	r0, r0, #1
   3daa2:	bx	lr
   3daa4:	clz	r2, r1
   3daa8:	rsb	r2, r2, #31
   3daac:	cmp.w	ip, #0
   3dab0:	lsr.w	r0, r3, r2
   3dab4:	it	mi
   3dab6:	negmi	r0, r0
   3dab8:	bx	lr
   3daba:	cmp	r0, #0
   3dabc:	it	gt
   3dabe:	mvngt.w	r0, #2147483648	; 0x80000000
   3dac2:	it	lt
   3dac4:	movlt.w	r0, #2147483648	; 0x80000000
   3dac8:	b.w	3ddd4 <btrfs_util_strerror@@Base+0x82c>
   3dacc:	cmp	r1, #0
   3dace:	beq.n	3daba <btrfs_util_strerror@@Base+0x512>
   3dad0:	stmdb	sp!, {r0, r1, lr}
   3dad4:	bl	3d83e <btrfs_util_strerror@@Base+0x296>
   3dad8:	ldmia.w	sp!, {r1, r2, lr}
   3dadc:	mul.w	r3, r2, r0
   3dae0:	sub.w	r1, r1, r3
   3dae4:	bx	lr
   3dae6:	nop
   3dae8:	eor.w	r0, r0, #2147483648	; 0x80000000
   3daec:	b.n	3daf4 <btrfs_util_strerror@@Base+0x54c>
   3daee:	nop
   3daf0:	eor.w	r1, r1, #2147483648	; 0x80000000
   3daf4:	lsls	r2, r0, #1
   3daf6:	itttt	ne
   3daf8:	movsne.w	r3, r1, lsl #1
   3dafc:	teqne	r2, r3
   3db00:	mvnsne.w	ip, r2, asr #24
   3db04:	mvnsne.w	ip, r3, asr #24
   3db08:	beq.n	3dbe0 <btrfs_util_strerror@@Base+0x638>
   3db0a:	mov.w	r2, r2, lsr #24
   3db0e:	rsbs	r3, r2, r3, lsr #24
   3db12:	itttt	gt
   3db14:	addgt	r2, r2, r3
   3db16:	eorgt	r1, r0
   3db18:	eorgt	r0, r1
   3db1a:	eorgt	r1, r0
   3db1c:	it	lt
   3db1e:	neglt	r3, r3
   3db20:	cmp	r3, #25
   3db22:	it	hi
   3db24:	bxhi	lr
   3db26:	tst.w	r0, #2147483648	; 0x80000000
   3db2a:	orr.w	r0, r0, #8388608	; 0x800000
   3db2e:	bic.w	r0, r0, #4278190080	; 0xff000000
   3db32:	it	ne
   3db34:	negne	r0, r0
   3db36:	tst.w	r1, #2147483648	; 0x80000000
   3db3a:	orr.w	r1, r1, #8388608	; 0x800000
   3db3e:	bic.w	r1, r1, #4278190080	; 0xff000000
   3db42:	it	ne
   3db44:	negne	r1, r1
   3db46:	teq	r2, r3
   3db4a:	beq.n	3dbcc <btrfs_util_strerror@@Base+0x624>
   3db4c:	sub.w	r2, r2, #1
   3db50:	asr.w	ip, r1, r3
   3db54:	adds.w	r0, r0, ip
   3db58:	rsb	r3, r3, #32
   3db5c:	lsl.w	r1, r1, r3
   3db60:	and.w	r3, r0, #2147483648	; 0x80000000
   3db64:	bpl.n	3db6c <btrfs_util_strerror@@Base+0x5c4>
   3db66:	negs	r1, r1
   3db68:	sbc.w	r0, r0, r0, lsl #1
   3db6c:	cmp.w	r0, #8388608	; 0x800000
   3db70:	bcc.n	3db9a <btrfs_util_strerror@@Base+0x5f2>
   3db72:	cmp.w	r0, #16777216	; 0x1000000
   3db76:	bcc.n	3db86 <btrfs_util_strerror@@Base+0x5de>
   3db78:	lsrs	r0, r0, #1
   3db7a:	mov.w	r1, r1, rrx
   3db7e:	add.w	r2, r2, #1
   3db82:	cmp	r2, #254	; 0xfe
   3db84:	bcs.n	3dc2a <btrfs_util_strerror@@Base+0x682>
   3db86:	cmp.w	r1, #2147483648	; 0x80000000
   3db8a:	adc.w	r0, r0, r2, lsl #23
   3db8e:	it	eq
   3db90:	biceq.w	r0, r0, #1
   3db94:	orr.w	r0, r0, r3
   3db98:	bx	lr
   3db9a:	lsls	r1, r1, #1
   3db9c:	adc.w	r0, r0, r0
   3dba0:	subs	r2, #1
   3dba2:	it	cs
   3dba4:	cmpcs.w	r0, #8388608	; 0x800000
   3dba8:	bcs.n	3db86 <btrfs_util_strerror@@Base+0x5de>
   3dbaa:	clz	ip, r0
   3dbae:	sub.w	ip, ip, #8
   3dbb2:	subs.w	r2, r2, ip
   3dbb6:	lsl.w	r0, r0, ip
   3dbba:	itet	ge
   3dbbc:	addge.w	r0, r0, r2, lsl #23
   3dbc0:	neglt	r2, r2
   3dbc2:	orrge	r0, r3
   3dbc4:	itt	lt
   3dbc6:	lsrlt	r0, r2
   3dbc8:	orrlt	r0, r3
   3dbca:	bx	lr
   3dbcc:	teq	r2, #0
   3dbd0:	eor.w	r1, r1, #8388608	; 0x800000
   3dbd4:	itte	eq
   3dbd6:	eoreq.w	r0, r0, #8388608	; 0x800000
   3dbda:	addeq	r2, #1
   3dbdc:	subne	r3, #1
   3dbde:	b.n	3db4c <btrfs_util_strerror@@Base+0x5a4>
   3dbe0:	mov.w	r3, r1, lsl #1
   3dbe4:	mvns.w	ip, r2, asr #24
   3dbe8:	it	ne
   3dbea:	mvnsne.w	ip, r3, asr #24
   3dbee:	beq.n	3dc34 <btrfs_util_strerror@@Base+0x68c>
   3dbf0:	teq	r2, r3
   3dbf4:	beq.n	3dc00 <btrfs_util_strerror@@Base+0x658>
   3dbf6:	teq	r2, #0
   3dbfa:	it	eq
   3dbfc:	moveq	r0, r1
   3dbfe:	bx	lr
   3dc00:	teq	r0, r1
   3dc04:	itt	ne
   3dc06:	movne	r0, #0
   3dc08:	bxne	lr
   3dc0a:	tst.w	r2, #4278190080	; 0xff000000
   3dc0e:	bne.n	3dc1a <btrfs_util_strerror@@Base+0x672>
   3dc10:	lsls	r0, r0, #1
   3dc12:	it	cs
   3dc14:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   3dc18:	bx	lr
   3dc1a:	adds.w	r2, r2, #33554432	; 0x2000000
   3dc1e:	itt	cc
   3dc20:	addcc.w	r0, r0, #8388608	; 0x800000
   3dc24:	bxcc	lr
   3dc26:	and.w	r3, r0, #2147483648	; 0x80000000
   3dc2a:	orr.w	r0, r3, #2130706432	; 0x7f000000
   3dc2e:	orr.w	r0, r0, #8388608	; 0x800000
   3dc32:	bx	lr
   3dc34:	mvns.w	r2, r2, asr #24
   3dc38:	itet	ne
   3dc3a:	movne	r0, r1
   3dc3c:	mvnseq.w	r3, r3, asr #24
   3dc40:	movne	r1, r0
   3dc42:	lsls	r2, r0, #9
   3dc44:	itte	eq
   3dc46:	movseq.w	r3, r1, lsl #9
   3dc4a:	teqeq	r0, r1
   3dc4e:	orrne.w	r0, r0, #4194304	; 0x400000
   3dc52:	bx	lr
   3dc54:	mov.w	r3, #0
   3dc58:	b.n	3dc64 <btrfs_util_strerror@@Base+0x6bc>
   3dc5a:	nop
   3dc5c:	ands.w	r3, r0, #2147483648	; 0x80000000
   3dc60:	it	mi
   3dc62:	negmi	r0, r0
   3dc64:	movs.w	ip, r0
   3dc68:	it	eq
   3dc6a:	bxeq	lr
   3dc6c:	orr.w	r3, r3, #1258291200	; 0x4b000000
   3dc70:	mov	r1, r0
   3dc72:	mov.w	r0, #0
   3dc76:	b.n	3dcb2 <btrfs_util_strerror@@Base+0x70a>
   3dc78:	orrs.w	r2, r0, r1
   3dc7c:	it	eq
   3dc7e:	bxeq	lr
   3dc80:	mov.w	r3, #0
   3dc84:	b.n	3dc9c <btrfs_util_strerror@@Base+0x6f4>
   3dc86:	nop
   3dc88:	orrs.w	r2, r0, r1
   3dc8c:	it	eq
   3dc8e:	bxeq	lr
   3dc90:	ands.w	r3, r1, #2147483648	; 0x80000000
   3dc94:	bpl.n	3dc9c <btrfs_util_strerror@@Base+0x6f4>
   3dc96:	negs	r0, r0
   3dc98:	sbc.w	r1, r1, r1, lsl #1
   3dc9c:	movs.w	ip, r1
   3dca0:	ittt	eq
   3dca2:	moveq	ip, r0
   3dca4:	moveq	r1, r0
   3dca6:	moveq	r0, #0
   3dca8:	orr.w	r3, r3, #1526726656	; 0x5b000000
   3dcac:	it	eq
   3dcae:	subeq.w	r3, r3, #268435456	; 0x10000000
   3dcb2:	sub.w	r3, r3, #8388608	; 0x800000
   3dcb6:	clz	r2, ip
   3dcba:	subs	r2, #8
   3dcbc:	sub.w	r3, r3, r2, lsl #23
   3dcc0:	blt.n	3dce4 <btrfs_util_strerror@@Base+0x73c>
   3dcc2:	lsl.w	ip, r1, r2
   3dcc6:	add	r3, ip
   3dcc8:	lsl.w	ip, r0, r2
   3dccc:	rsb	r2, r2, #32
   3dcd0:	cmp.w	ip, #2147483648	; 0x80000000
   3dcd4:	lsr.w	r2, r0, r2
   3dcd8:	adc.w	r0, r3, r2
   3dcdc:	it	eq
   3dcde:	biceq.w	r0, r0, #1
   3dce2:	bx	lr
   3dce4:	add.w	r2, r2, #32
   3dce8:	lsl.w	ip, r1, r2
   3dcec:	rsb	r2, r2, #32
   3dcf0:	orrs.w	r0, r0, ip, lsl #1
   3dcf4:	lsr.w	r2, r1, r2
   3dcf8:	adc.w	r0, r3, r2
   3dcfc:	it	eq
   3dcfe:	biceq.w	r0, r0, ip, lsr #31
   3dd02:	bx	lr
   3dd04:	cbnz	r3, 3dd26 <btrfs_util_strerror@@Base+0x77e>
   3dd06:	cbnz	r2, 3dd26 <btrfs_util_strerror@@Base+0x77e>
   3dd08:	cmp	r1, #0
   3dd0a:	ittt	lt
   3dd0c:	movlt	r0, #0
   3dd0e:	movlt.w	r1, #2147483648	; 0x80000000
   3dd12:	blt.n	3dd22 <btrfs_util_strerror@@Base+0x77a>
   3dd14:	it	eq
   3dd16:	cmpeq	r0, #0
   3dd18:	itt	ne
   3dd1a:	mvnne.w	r1, #2147483648	; 0x80000000
   3dd1e:	movne.w	r0, #4294967295	; 0xffffffff
   3dd22:	b.w	3ddd4 <btrfs_util_strerror@@Base+0x82c>
   3dd26:	sub.w	ip, sp, #8
   3dd2a:	strd	ip, lr, [sp, #-16]!
   3dd2e:	cmp	r1, #0
   3dd30:	blt.n	3dd46 <btrfs_util_strerror@@Base+0x79e>
   3dd32:	cmp	r3, #0
   3dd34:	blt.n	3dd6c <btrfs_util_strerror@@Base+0x7c4>
   3dd36:	bl	3dde0 <btrfs_util_strerror@@Base+0x838>
   3dd3a:	ldr.w	lr, [sp, #4]
   3dd3e:	ldrd	r2, r3, [sp, #8]
   3dd42:	add	sp, #16
   3dd44:	bx	lr
   3dd46:	negs	r0, r0
   3dd48:	sbc.w	r1, r1, r1, lsl #1
   3dd4c:	cmp	r3, #0
   3dd4e:	blt.n	3dd88 <btrfs_util_strerror@@Base+0x7e0>
   3dd50:	bl	3dde0 <btrfs_util_strerror@@Base+0x838>
   3dd54:	ldr.w	lr, [sp, #4]
   3dd58:	ldrd	r2, r3, [sp, #8]
   3dd5c:	add	sp, #16
   3dd5e:	negs	r0, r0
   3dd60:	sbc.w	r1, r1, r1, lsl #1
   3dd64:	negs	r2, r2
   3dd66:	sbc.w	r3, r3, r3, lsl #1
   3dd6a:	bx	lr
   3dd6c:	negs	r2, r2
   3dd6e:	sbc.w	r3, r3, r3, lsl #1
   3dd72:	bl	3dde0 <btrfs_util_strerror@@Base+0x838>
   3dd76:	ldr.w	lr, [sp, #4]
   3dd7a:	ldrd	r2, r3, [sp, #8]
   3dd7e:	add	sp, #16
   3dd80:	negs	r0, r0
   3dd82:	sbc.w	r1, r1, r1, lsl #1
   3dd86:	bx	lr
   3dd88:	negs	r2, r2
   3dd8a:	sbc.w	r3, r3, r3, lsl #1
   3dd8e:	bl	3dde0 <btrfs_util_strerror@@Base+0x838>
   3dd92:	ldr.w	lr, [sp, #4]
   3dd96:	ldrd	r2, r3, [sp, #8]
   3dd9a:	add	sp, #16
   3dd9c:	negs	r2, r2
   3dd9e:	sbc.w	r3, r3, r3, lsl #1
   3dda2:	bx	lr
   3dda4:	cbnz	r3, 3ddbc <btrfs_util_strerror@@Base+0x814>
   3dda6:	cbnz	r2, 3ddbc <btrfs_util_strerror@@Base+0x814>
   3dda8:	cmp	r1, #0
   3ddaa:	it	eq
   3ddac:	cmpeq	r0, #0
   3ddae:	itt	ne
   3ddb0:	movne.w	r1, #4294967295	; 0xffffffff
   3ddb4:	movne.w	r0, #4294967295	; 0xffffffff
   3ddb8:	b.w	3ddd4 <btrfs_util_strerror@@Base+0x82c>
   3ddbc:	sub.w	ip, sp, #8
   3ddc0:	strd	ip, lr, [sp, #-16]!
   3ddc4:	bl	3dde0 <btrfs_util_strerror@@Base+0x838>
   3ddc8:	ldr.w	lr, [sp, #4]
   3ddcc:	ldrd	r2, r3, [sp, #8]
   3ddd0:	add	sp, #16
   3ddd2:	bx	lr
   3ddd4:	push	{r1, lr}
   3ddd6:	mov.w	r0, #8
   3ddda:	blx	8ac4 <raise@plt>
   3ddde:	pop	{r1, pc}
   3dde0:	cmp	r1, r3
   3dde2:	it	eq
   3dde4:	cmpeq	r0, r2
   3dde6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ddea:	mov	r4, r0
   3ddec:	it	cc
   3ddee:	movcc	r0, #0
   3ddf0:	mov	r5, r1
   3ddf2:	ldr.w	ip, [sp, #36]	; 0x24
   3ddf6:	it	cc
   3ddf8:	movcc	r1, r0
   3ddfa:	bcc.n	3ded4 <btrfs_util_strerror@@Base+0x92c>
   3ddfc:	mov	r8, r2
   3ddfe:	mov	r9, r3
   3de00:	clz	r2, r3
   3de04:	cmp	r3, #0
   3de06:	beq.n	3deea <btrfs_util_strerror@@Base+0x942>
   3de08:	clz	r3, r5
   3de0c:	cmp	r5, #0
   3de0e:	beq.n	3dee2 <btrfs_util_strerror@@Base+0x93a>
   3de10:	subs	r2, r2, r3
   3de12:	sub.w	lr, r2, #32
   3de16:	lsl.w	fp, r9, r2
   3de1a:	lsl.w	r3, r8, lr
   3de1e:	rsb	r7, r2, #32
   3de22:	orr.w	fp, fp, r3
   3de26:	lsr.w	r3, r8, r7
   3de2a:	orr.w	fp, fp, r3
   3de2e:	lsl.w	sl, r8, r2
   3de32:	cmp	r5, fp
   3de34:	it	eq
   3de36:	cmpeq	r4, sl
   3de38:	itt	cc
   3de3a:	movcc	r0, #0
   3de3c:	movcc	r1, r0
   3de3e:	bcc.n	3de56 <btrfs_util_strerror@@Base+0x8ae>
   3de40:	movs	r0, #1
   3de42:	subs.w	r4, r4, sl
   3de46:	lsl.w	r1, r0, lr
   3de4a:	lsr.w	r3, r0, r7
   3de4e:	sbc.w	r5, r5, fp
   3de52:	orrs	r1, r3
   3de54:	lsls	r0, r2
   3de56:	cmp	r2, #0
   3de58:	beq.n	3ded4 <btrfs_util_strerror@@Base+0x92c>
   3de5a:	mov.w	r8, sl, lsr #1
   3de5e:	mov.w	r9, fp, lsr #1
   3de62:	orr.w	r8, r8, fp, lsl #31
   3de66:	mov	r6, r2
   3de68:	b.n	3de82 <btrfs_util_strerror@@Base+0x8da>
   3de6a:	subs.w	r3, r4, r8
   3de6e:	sbc.w	sl, r5, r9
   3de72:	adds	r3, r3, r3
   3de74:	adc.w	sl, sl, sl
   3de78:	adds	r4, r3, #1
   3de7a:	adc.w	r5, sl, #0
   3de7e:	subs	r6, #1
   3de80:	beq.n	3de92 <btrfs_util_strerror@@Base+0x8ea>
   3de82:	cmp	r5, r9
   3de84:	it	eq
   3de86:	cmpeq	r4, r8
   3de88:	bcs.n	3de6a <btrfs_util_strerror@@Base+0x8c2>
   3de8a:	adds	r4, r4, r4
   3de8c:	adcs	r5, r5
   3de8e:	subs	r6, #1
   3de90:	bne.n	3de82 <btrfs_util_strerror@@Base+0x8da>
   3de92:	lsl.w	r7, r5, r7
   3de96:	lsr.w	r3, r4, r2
   3de9a:	orrs	r3, r7
   3de9c:	lsr.w	lr, r5, lr
   3dea0:	adds	r0, r0, r4
   3dea2:	lsr.w	r8, r5, r2
   3dea6:	orr.w	r4, r3, lr
   3deaa:	sub.w	r7, r2, #32
   3deae:	rsb	r6, r2, #32
   3deb2:	lsl.w	r3, r8, r2
   3deb6:	lsl.w	r7, r4, r7
   3deba:	lsl.w	r2, r4, r2
   3debe:	orr.w	r3, r3, r7
   3dec2:	lsr.w	r6, r4, r6
   3dec6:	adc.w	r1, r5, r1
   3deca:	orrs	r3, r6
   3decc:	subs	r0, r0, r2
   3dece:	mov	r5, r8
   3ded0:	sbc.w	r1, r1, r3
   3ded4:	cmp.w	ip, #0
   3ded8:	beq.n	3dede <btrfs_util_strerror@@Base+0x936>
   3deda:	strd	r4, r5, [ip]
   3dede:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dee2:	clz	r3, r4
   3dee6:	adds	r3, #32
   3dee8:	b.n	3de10 <btrfs_util_strerror@@Base+0x868>
   3deea:	clz	r2, r8
   3deee:	clz	r3, r5
   3def2:	adds	r2, #32
   3def4:	cmp	r5, #0
   3def6:	bne.n	3de10 <btrfs_util_strerror@@Base+0x868>
   3def8:	b.n	3dee2 <btrfs_util_strerror@@Base+0x93a>
   3defa:	nop

0003defc <__libc_csu_init@@Base>:
   3defc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   3df00:	mov	r7, r0
   3df02:	ldr	r6, [pc, #48]	; (3df34 <__libc_csu_init@@Base+0x38>)
   3df04:	mov	r8, r1
   3df06:	ldr	r5, [pc, #48]	; (3df38 <__libc_csu_init@@Base+0x3c>)
   3df08:	mov	r9, r2
   3df0a:	add	r6, pc
   3df0c:	blx	8a88 <pthread_mutex_unlock@plt-0x20>
   3df10:	add	r5, pc
   3df12:	subs	r6, r6, r5
   3df14:	asrs	r6, r6, #2
   3df16:	beq.n	3df2e <__libc_csu_init@@Base+0x32>
   3df18:	subs	r5, #4
   3df1a:	movs	r4, #0
   3df1c:	ldr.w	r3, [r5, #4]!
   3df20:	adds	r4, #1
   3df22:	mov	r2, r9
   3df24:	mov	r1, r8
   3df26:	mov	r0, r7
   3df28:	blx	r3
   3df2a:	cmp	r6, r4
   3df2c:	bne.n	3df1c <__libc_csu_init@@Base+0x20>
   3df2e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   3df32:	nop
   3df34:	stmia	r5!, {r1, r2, r3, r5}
   3df36:	movs	r2, r0
   3df38:	stmia	r5!, {r2, r5}
   3df3a:	movs	r2, r0

0003df3c <__libc_csu_fini@@Base>:
   3df3c:	bx	lr
   3df3e:	nop
   3df40:	mov	r2, r1
   3df42:	mov	r1, r0
   3df44:	movs	r0, #3
   3df46:	b.w	8d00 <__xstat@plt>
   3df4a:	nop
   3df4c:	mov	r2, r1
   3df4e:	mov	r1, r0
   3df50:	movs	r0, #3
   3df52:	b.w	8e64 <__fxstat@plt>
   3df56:	nop
   3df58:	mov	r2, r1
   3df5a:	mov	r1, r0
   3df5c:	movs	r0, #3
   3df5e:	b.w	917c <__xstat64@plt>
   3df62:	nop
   3df64:	mov	r2, r1
   3df66:	mov	r1, r0
   3df68:	movs	r0, #3
   3df6a:	b.w	8d1c <__fxstat64@plt>
   3df6e:	nop

Disassembly of section .fini:

0003df70 <.fini>:
   3df70:	push	{r3, lr}
   3df74:	pop	{r3, pc}
