
raspbian-preinstalled/bzip2recover:     file format elf32-littlearm


Disassembly of section .init:

00010638 <.init>:
   10638:	push	{r3, lr}
   1063c:	bl	111e8 <close@plt+0xa7c>
   10640:	pop	{r3, pc}

Disassembly of section .plt:

00010644 <fdopen@plt-0x14>:
   10644:	push	{lr}		; (str lr, [sp, #-4]!)
   10648:	ldr	lr, [pc, #4]	; 10654 <fdopen@plt-0x4>
   1064c:	add	lr, pc, lr
   10650:	ldr	pc, [lr, #8]!
   10654:	andeq	r1, r1, ip, lsr r9

00010658 <fdopen@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2364]!	; 0x93c

00010664 <fopen@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #69632	; 0x11000
   1066c:	ldr	pc, [ip, #2356]!	; 0x934

00010670 <fflush@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2348]!	; 0x92c

0001067c <free@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2340]!	; 0x924

00010688 <perror@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2332]!	; 0x91c

00010694 <__memcpy_chk@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2324]!	; 0x914

000106a0 <fwrite@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2316]!	; 0x90c

000106ac <__stpcpy_chk@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2308]!	; 0x904

000106b8 <__strcpy_chk@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2300]!	; 0x8fc

000106c4 <malloc@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2292]!	; 0x8f4

000106d0 <__libc_start_main@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2284]!	; 0x8ec

000106dc <__gmon_start__@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2276]!	; 0x8e4

000106e8 <open@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2268]!	; 0x8dc

000106f4 <exit@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2260]!	; 0x8d4

00010700 <strlen@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2252]!	; 0x8cc

0001070c <__errno_location@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2244]!	; 0x8c4

00010718 <__sprintf_chk@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2236]!	; 0x8bc

00010724 <__fprintf_chk@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2228]!	; 0x8b4

00010730 <fclose@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2220]!	; 0x8ac

0001073c <strrchr@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2212]!	; 0x8a4

00010748 <putc@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2204]!	; 0x89c

00010754 <abort@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2196]!	; 0x894

00010760 <getc@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2188]!	; 0x88c

0001076c <close@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

00010778 <.text>:
   10778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1077c:	mov	r2, #2000	; 0x7d0
   10780:	ldr	r5, [pc, #2448]	; 11118 <close@plt+0x9ac>
   10784:	sub	sp, sp, #68	; 0x44
   10788:	mov	r9, r0
   1078c:	mov	r8, r1
   10790:	mov	r0, r5
   10794:	ldr	r1, [r1]
   10798:	bl	106b8 <__strcpy_chk@plt>
   1079c:	ldr	ip, [pc, #2424]	; 1111c <close@plt+0x9b0>
   107a0:	mov	r4, #0
   107a4:	ldr	r3, [pc, #2420]	; 11120 <close@plt+0x9b4>
   107a8:	strb	r4, [ip]
   107ac:	ldr	ip, [pc, #2416]	; 11124 <close@plt+0x9b8>
   107b0:	ldr	r3, [r3]
   107b4:	mov	r2, #61	; 0x3d
   107b8:	mov	r1, #1
   107bc:	ldr	r0, [pc, #2404]	; 11128 <close@plt+0x9bc>
   107c0:	strb	r4, [ip]
   107c4:	bl	106a0 <fwrite@plt>
   107c8:	cmp	r9, #2
   107cc:	bne	110dc <close@plt+0x970>
   107d0:	ldr	r8, [r8, #4]
   107d4:	mov	r0, r8
   107d8:	bl	10700 <strlen@plt>
   107dc:	ldr	r3, [pc, #2376]	; 1112c <close@plt+0x9c0>
   107e0:	cmp	r0, r3
   107e4:	bhi	110b8 <close@plt+0x94c>
   107e8:	add	r2, r0, #1
   107ec:	mov	r1, r8
   107f0:	mov	r3, #2000	; 0x7d0
   107f4:	ldr	r0, [pc, #2344]	; 11124 <close@plt+0x9b8>
   107f8:	bl	10694 <__memcpy_chk@plt>
   107fc:	ldr	r1, [pc, #2348]	; 11130 <close@plt+0x9c4>
   10800:	ldr	r0, [pc, #2332]	; 11124 <close@plt+0x9b8>
   10804:	bl	10664 <fopen@plt>
   10808:	cmp	r0, #0
   1080c:	beq	11090 <close@plt+0x924>
   10810:	bl	114e4 <close@plt+0xd78>
   10814:	mov	r3, r5
   10818:	ldr	r2, [pc, #2324]	; 11134 <close@plt+0x9c8>
   1081c:	mov	r1, #1
   10820:	mov	sl, #0
   10824:	mov	fp, sl
   10828:	mov	r5, r4
   1082c:	mov	r8, r4
   10830:	mov	r9, r0
   10834:	ldr	r0, [pc, #2276]	; 11120 <close@plt+0x9b4>
   10838:	ldr	r0, [r0]
   1083c:	bl	10724 <__fprintf_chk@plt>
   10840:	ldr	r3, [pc, #2288]	; 11138 <close@plt+0x9cc>
   10844:	str	r4, [sp, #60]	; 0x3c
   10848:	str	r4, [sp, #28]
   1084c:	strd	sl, [r3]
   10850:	b	10870 <close@plt+0x104>
   10854:	ldr	r1, [pc, #2272]	; 1113c <close@plt+0x9d0>
   10858:	ldr	r3, [pc, #2272]	; 11140 <close@plt+0x9d4>
   1085c:	cmp	r2, r1
   10860:	cmpeq	r4, r3
   10864:	beq	108b4 <close@plt+0x148>
   10868:	mov	fp, r6
   1086c:	mov	sl, r7
   10870:	mov	r0, r9
   10874:	bl	113a8 <close@plt+0xc3c>
   10878:	adds	r6, fp, #1
   1087c:	adc	r7, sl, #0
   10880:	cmp	r0, #2
   10884:	beq	1094c <close@plt+0x1e0>
   10888:	lsr	r2, r4, #31
   1088c:	orr	r5, r2, r5, lsl #1
   10890:	ldr	r1, [pc, #2220]	; 11144 <close@plt+0x9d8>
   10894:	uxth	r2, r5
   10898:	and	r0, r0, #1
   1089c:	cmp	r2, r1
   108a0:	orr	r4, r0, r4, lsl #1
   108a4:	bne	10854 <close@plt+0xe8>
   108a8:	ldr	r3, [pc, #2200]	; 11148 <close@plt+0x9dc>
   108ac:	cmp	r4, r3
   108b0:	bne	10868 <close@plt+0xfc>
   108b4:	cmp	r7, #0
   108b8:	cmpeq	r6, #49	; 0x31
   108bc:	movls	r1, #0
   108c0:	movls	r3, r1
   108c4:	bls	108d0 <close@plt+0x164>
   108c8:	subs	r1, fp, #48	; 0x30
   108cc:	sbc	r3, sl, #0
   108d0:	ldr	r0, [pc, #2164]	; 1114c <close@plt+0x9e0>
   108d4:	ldr	ip, [sp, #28]
   108d8:	add	r2, r0, r8
   108dc:	cmp	ip, #0
   108e0:	str	r1, [r0, r8]
   108e4:	str	r2, [sp, #56]	; 0x38
   108e8:	str	r3, [r2, #4]
   108ec:	beq	10930 <close@plt+0x1c4>
   108f0:	ldr	r0, [pc, #2112]	; 11138 <close@plt+0x9cc>
   108f4:	add	r2, r0, r8
   108f8:	ldr	r0, [r0, r8]
   108fc:	ldr	r2, [r2, #4]
   10900:	subs	ip, r1, r0
   10904:	str	ip, [sp, #32]
   10908:	sbc	ip, r3, r2
   1090c:	str	ip, [sp, #36]	; 0x24
   10910:	ldrd	sl, [sp, #32]
   10914:	cmp	fp, #0
   10918:	cmpeq	sl, #129	; 0x81
   1091c:	bhi	10ed8 <close@plt+0x76c>
   10920:	ldr	r3, [pc, #2088]	; 11150 <close@plt+0x9e4>
   10924:	ldr	r2, [sp, #28]
   10928:	cmp	r2, r3
   1092c:	bgt	10fc8 <close@plt+0x85c>
   10930:	ldr	r3, [sp, #28]
   10934:	add	r3, r3, #1
   10938:	str	r3, [sp, #28]
   1093c:	lsl	r8, r3, #3
   10940:	ldr	r3, [pc, #2032]	; 11138 <close@plt+0x9cc>
   10944:	strd	r6, [r3, r8]
   10948:	b	10868 <close@plt+0xfc>
   1094c:	mov	r3, sl
   10950:	mov	sl, fp
   10954:	mov	fp, r3
   10958:	ldr	r3, [pc, #2008]	; 11138 <close@plt+0x9cc>
   1095c:	ldrd	r2, [r3, r8]
   10960:	cmp	r3, r7
   10964:	cmpeq	r2, r6
   10968:	bls	10f30 <close@plt+0x7c4>
   1096c:	mov	r0, r9
   10970:	bl	11300 <close@plt+0xb94>
   10974:	ldr	r3, [sp, #60]	; 0x3c
   10978:	cmp	r3, #0
   1097c:	beq	11070 <close@plt+0x904>
   10980:	ldr	r0, [pc, #1944]	; 11120 <close@plt+0x9b4>
   10984:	ldr	r3, [pc, #1932]	; 11118 <close@plt+0x9ac>
   10988:	ldr	r2, [pc, #1988]	; 11154 <close@plt+0x9e8>
   1098c:	mov	r1, #1
   10990:	ldr	r0, [r0]
   10994:	bl	10724 <__fprintf_chk@plt>
   10998:	ldr	r1, [pc, #1936]	; 11130 <close@plt+0x9c4>
   1099c:	ldr	r0, [pc, #1920]	; 11124 <close@plt+0x9b8>
   109a0:	bl	10664 <fopen@plt>
   109a4:	cmp	r0, #0
   109a8:	beq	11048 <close@plt+0x8dc>
   109ac:	bl	114e4 <close@plt+0xd78>
   109b0:	mov	r7, #0
   109b4:	mov	r2, #0
   109b8:	mov	r3, #0
   109bc:	str	r5, [sp, #28]
   109c0:	str	r4, [sp, #32]
   109c4:	str	r7, [sp, #56]	; 0x38
   109c8:	mov	r6, r7
   109cc:	mov	r8, r7
   109d0:	mov	r4, r2
   109d4:	mov	r5, r3
   109d8:	str	r0, [sp, #48]	; 0x30
   109dc:	b	10a14 <close@plt+0x2a8>
   109e0:	cmp	r5, fp
   109e4:	cmpeq	r4, sl
   109e8:	bls	10c10 <close@plt+0x4a4>
   109ec:	adds	r1, r4, #1
   109f0:	str	r1, [sp, #40]	; 0x28
   109f4:	adc	r1, r5, #0
   109f8:	str	r1, [sp, #44]	; 0x2c
   109fc:	ldrd	r0, [sp, #40]	; 0x28
   10a00:	cmp	r1, r3
   10a04:	cmpeq	r0, r2
   10a08:	beq	10c28 <close@plt+0x4bc>
   10a0c:	adds	r4, r4, #1
   10a10:	adc	r5, r5, #0
   10a14:	ldr	r0, [sp, #48]	; 0x30
   10a18:	bl	113a8 <close@plt+0xc3c>
   10a1c:	cmp	r0, #2
   10a20:	beq	10bec <close@plt+0x480>
   10a24:	ldr	r3, [sp, #56]	; 0x38
   10a28:	ldr	ip, [sp, #32]
   10a2c:	ldr	lr, [sp, #28]
   10a30:	lsl	r9, r3, #3
   10a34:	ldr	r3, [pc, #1820]	; 11158 <close@plt+0x9ec>
   10a38:	lsr	r1, ip, #31
   10a3c:	orr	r1, r1, lr, lsl #1
   10a40:	ldrd	r2, [r3, r9]
   10a44:	str	r1, [sp, #28]
   10a48:	and	r1, r0, #1
   10a4c:	adds	lr, r2, #47	; 0x2f
   10a50:	str	lr, [sp, #16]
   10a54:	adc	lr, r3, #0
   10a58:	str	lr, [sp, #20]
   10a5c:	ldrd	sl, [sp, #16]
   10a60:	orr	r1, r1, ip, lsl #1
   10a64:	str	r1, [sp, #32]
   10a68:	cmp	fp, r5
   10a6c:	cmpeq	sl, r4
   10a70:	lsreq	r7, r1, #16
   10a74:	ldreq	r1, [sp, #28]
   10a78:	orreq	r7, r7, r1, lsl #16
   10a7c:	ldr	r1, [pc, #1752]	; 1115c <close@plt+0x9f0>
   10a80:	cmp	r8, #0
   10a84:	ldrd	sl, [r1, r9]
   10a88:	beq	10ab0 <close@plt+0x344>
   10a8c:	cmp	r3, r5
   10a90:	cmpeq	r2, r4
   10a94:	bls	109e0 <close@plt+0x274>
   10a98:	cmp	fp, r5
   10a9c:	cmpeq	sl, r4
   10aa0:	beq	10adc <close@plt+0x370>
   10aa4:	ldr	r3, [pc, #1708]	; 11158 <close@plt+0x9ec>
   10aa8:	ldrd	r2, [r3, r9]
   10aac:	b	109ec <close@plt+0x280>
   10ab0:	cmp	r5, fp
   10ab4:	cmpeq	r4, sl
   10ab8:	bne	109ec <close@plt+0x280>
   10abc:	ldr	r3, [sp, #56]	; 0x38
   10ac0:	ldr	r2, [sp, #60]	; 0x3c
   10ac4:	cmp	r3, r2
   10ac8:	bge	10bec <close@plt+0x480>
   10acc:	add	r3, r3, #1
   10ad0:	str	r3, [sp, #56]	; 0x38
   10ad4:	mov	r8, #0
   10ad8:	b	10a0c <close@plt+0x2a0>
   10adc:	mov	r9, #7
   10ae0:	mov	r8, #23
   10ae4:	lsr	r1, r8, r9
   10ae8:	mov	r0, r6
   10aec:	and	r1, r1, #1
   10af0:	sub	r9, r9, #1
   10af4:	bl	11418 <close@plt+0xcac>
   10af8:	cmn	r9, #1
   10afc:	bne	10ae4 <close@plt+0x378>
   10b00:	mov	r9, #7
   10b04:	mov	r8, #114	; 0x72
   10b08:	lsr	r1, r8, r9
   10b0c:	mov	r0, r6
   10b10:	and	r1, r1, #1
   10b14:	sub	r9, r9, #1
   10b18:	bl	11418 <close@plt+0xcac>
   10b1c:	cmn	r9, #1
   10b20:	bne	10b08 <close@plt+0x39c>
   10b24:	mov	r9, #7
   10b28:	mov	r8, #69	; 0x45
   10b2c:	lsr	r1, r8, r9
   10b30:	mov	r0, r6
   10b34:	and	r1, r1, #1
   10b38:	sub	r9, r9, #1
   10b3c:	bl	11418 <close@plt+0xcac>
   10b40:	cmn	r9, #1
   10b44:	bne	10b2c <close@plt+0x3c0>
   10b48:	mov	r9, #7
   10b4c:	mov	r8, #56	; 0x38
   10b50:	lsr	r1, r8, r9
   10b54:	mov	r0, r6
   10b58:	and	r1, r1, #1
   10b5c:	sub	r9, r9, #1
   10b60:	bl	11418 <close@plt+0xcac>
   10b64:	cmn	r9, #1
   10b68:	bne	10b50 <close@plt+0x3e4>
   10b6c:	mov	r9, #7
   10b70:	mov	r8, #80	; 0x50
   10b74:	lsr	r1, r8, r9
   10b78:	mov	r0, r6
   10b7c:	and	r1, r1, #1
   10b80:	sub	r9, r9, #1
   10b84:	bl	11418 <close@plt+0xcac>
   10b88:	cmn	r9, #1
   10b8c:	bne	10b74 <close@plt+0x408>
   10b90:	mov	r9, #7
   10b94:	mov	r8, #144	; 0x90
   10b98:	lsr	r1, r8, r9
   10b9c:	mov	r0, r6
   10ba0:	and	r1, r1, #1
   10ba4:	sub	r9, r9, #1
   10ba8:	bl	11418 <close@plt+0xcac>
   10bac:	cmn	r9, #1
   10bb0:	bne	10b98 <close@plt+0x42c>
   10bb4:	mov	r8, #31
   10bb8:	lsr	r1, r7, r8
   10bbc:	mov	r0, r6
   10bc0:	and	r1, r1, #1
   10bc4:	sub	r8, r8, #1
   10bc8:	bl	11418 <close@plt+0xcac>
   10bcc:	cmn	r8, #1
   10bd0:	bne	10bb8 <close@plt+0x44c>
   10bd4:	mov	r0, r6
   10bd8:	bl	11300 <close@plt+0xb94>
   10bdc:	ldr	r3, [sp, #56]	; 0x38
   10be0:	ldr	r2, [sp, #60]	; 0x3c
   10be4:	cmp	r3, r2
   10be8:	blt	10acc <close@plt+0x360>
   10bec:	ldr	r3, [pc, #1324]	; 11120 <close@plt+0x9b4>
   10bf0:	ldr	r2, [pc, #1384]	; 11160 <close@plt+0x9f4>
   10bf4:	mov	r1, #1
   10bf8:	ldr	r0, [r3]
   10bfc:	ldr	r3, [pc, #1300]	; 11118 <close@plt+0x9ac>
   10c00:	bl	10724 <__fprintf_chk@plt>
   10c04:	mov	r0, #0
   10c08:	add	sp, sp, #68	; 0x44
   10c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c10:	mov	r1, r0
   10c14:	mov	r0, r6
   10c18:	bl	11418 <close@plt+0xcac>
   10c1c:	ldr	r3, [pc, #1336]	; 1115c <close@plt+0x9f0>
   10c20:	ldrd	sl, [r3, r9]
   10c24:	b	10a98 <close@plt+0x32c>
   10c28:	ldr	r3, [pc, #1260]	; 1111c <close@plt+0x9b0>
   10c2c:	mov	r1, #0
   10c30:	add	r2, r3, #1984	; 0x7c0
   10c34:	add	r2, r2, #15
   10c38:	sub	r3, r3, #1
   10c3c:	strb	r1, [r3, #1]!
   10c40:	cmp	r2, r3
   10c44:	bne	10c3c <close@plt+0x4d0>
   10c48:	mov	r2, #2000	; 0x7d0
   10c4c:	ldr	r1, [pc, #1232]	; 11124 <close@plt+0x9b8>
   10c50:	ldr	r0, [pc, #1220]	; 1111c <close@plt+0x9b0>
   10c54:	bl	106b8 <__strcpy_chk@plt>
   10c58:	mov	r1, #47	; 0x2f
   10c5c:	ldr	r0, [pc, #1208]	; 1111c <close@plt+0x9b0>
   10c60:	bl	1073c <strrchr@plt>
   10c64:	ldr	r3, [sp, #56]	; 0x38
   10c68:	mvn	r2, #0
   10c6c:	add	r8, r3, #1
   10c70:	str	r8, [sp]
   10c74:	ldr	r3, [pc, #1256]	; 11164 <close@plt+0x9f8>
   10c78:	mov	r1, #1
   10c7c:	cmp	r0, #0
   10c80:	addne	r6, r0, #1
   10c84:	ldreq	r6, [pc, #1168]	; 1111c <close@plt+0x9b0>
   10c88:	mov	r0, r6
   10c8c:	bl	10718 <__sprintf_chk@plt>
   10c90:	ldrb	r3, [r6]
   10c94:	ldr	r2, [pc, #1152]	; 1111c <close@plt+0x9b0>
   10c98:	cmp	r3, #0
   10c9c:	sub	r9, r6, r2
   10ca0:	beq	10cbc <close@plt+0x550>
   10ca4:	mov	r2, #48	; 0x30
   10ca8:	cmp	r3, #32
   10cac:	strbeq	r2, [r6]
   10cb0:	ldrb	r3, [r6, #1]!
   10cb4:	cmp	r3, #0
   10cb8:	bne	10ca8 <close@plt+0x53c>
   10cbc:	ldr	r0, [pc, #1112]	; 1111c <close@plt+0x9b0>
   10cc0:	bl	10700 <strlen@plt>
   10cc4:	ldr	r6, [pc, #1104]	; 1111c <close@plt+0x9b0>
   10cc8:	ldr	r3, [pc, #1108]	; 11124 <close@plt+0x9b8>
   10ccc:	mov	r2, #2000	; 0x7d0
   10cd0:	add	r1, r3, r9
   10cd4:	add	r0, r6, r0
   10cd8:	bl	106ac <__stpcpy_chk@plt>
   10cdc:	sub	r3, r0, r6
   10ce0:	cmp	r3, #4
   10ce4:	mov	r2, r0
   10ce8:	bls	10cfc <close@plt+0x590>
   10cec:	ldr	r1, [pc, #1140]	; 11168 <close@plt+0x9fc>
   10cf0:	ldrb	r0, [r3, r1]
   10cf4:	cmp	r0, #46	; 0x2e
   10cf8:	beq	10f90 <close@plt+0x824>
   10cfc:	ldr	r3, [pc, #1128]	; 1116c <close@plt+0xa00>
   10d00:	ldrb	r1, [r3, #4]
   10d04:	ldr	r0, [r3]
   10d08:	strb	r1, [r2, #4]
   10d0c:	str	r0, [r2]
   10d10:	ldr	r0, [pc, #1032]	; 11120 <close@plt+0x9b4>
   10d14:	ldr	r3, [pc, #1024]	; 1111c <close@plt+0x9b0>
   10d18:	ldr	r2, [pc, #1104]	; 11170 <close@plt+0xa04>
   10d1c:	str	r3, [sp]
   10d20:	mov	r1, #1
   10d24:	mov	r3, r8
   10d28:	ldr	r0, [r0]
   10d2c:	bl	10724 <__fprintf_chk@plt>
   10d30:	ldr	r1, [pc, #1084]	; 11174 <close@plt+0xa08>
   10d34:	ldr	r0, [pc, #992]	; 1111c <close@plt+0x9b0>
   10d38:	bl	1151c <close@plt+0xdb0>
   10d3c:	subs	r8, r0, #0
   10d40:	beq	11020 <close@plt+0x8b4>
   10d44:	mov	r0, #16
   10d48:	bl	106c4 <malloc@plt>
   10d4c:	subs	r6, r0, #0
   10d50:	beq	10fc4 <close@plt+0x858>
   10d54:	mov	r3, #0
   10d58:	mov	sl, #7
   10d5c:	mov	r9, #66	; 0x42
   10d60:	str	r3, [r6, #4]
   10d64:	str	r3, [r6, #8]
   10d68:	mov	r3, #119	; 0x77
   10d6c:	str	r8, [r6]
   10d70:	strb	r3, [r6, #12]
   10d74:	lsr	r1, r9, sl
   10d78:	mov	r0, r6
   10d7c:	and	r1, r1, #1
   10d80:	sub	sl, sl, #1
   10d84:	bl	11418 <close@plt+0xcac>
   10d88:	cmn	sl, #1
   10d8c:	bne	10d74 <close@plt+0x608>
   10d90:	mov	sl, #7
   10d94:	mov	r9, #90	; 0x5a
   10d98:	lsr	r1, r9, sl
   10d9c:	mov	r0, r6
   10da0:	and	r1, r1, #1
   10da4:	sub	sl, sl, #1
   10da8:	bl	11418 <close@plt+0xcac>
   10dac:	cmn	sl, #1
   10db0:	bne	10d98 <close@plt+0x62c>
   10db4:	mov	sl, #7
   10db8:	mov	r9, #104	; 0x68
   10dbc:	lsr	r1, r9, sl
   10dc0:	mov	r0, r6
   10dc4:	and	r1, r1, #1
   10dc8:	sub	sl, sl, #1
   10dcc:	bl	11418 <close@plt+0xcac>
   10dd0:	cmn	sl, #1
   10dd4:	bne	10dbc <close@plt+0x650>
   10dd8:	mov	sl, #7
   10ddc:	mov	r9, #57	; 0x39
   10de0:	lsr	r1, r9, sl
   10de4:	mov	r0, r6
   10de8:	and	r1, r1, #1
   10dec:	sub	sl, sl, #1
   10df0:	bl	11418 <close@plt+0xcac>
   10df4:	cmn	sl, #1
   10df8:	bne	10de0 <close@plt+0x674>
   10dfc:	mov	sl, #7
   10e00:	mov	r9, #49	; 0x31
   10e04:	lsr	r1, r9, sl
   10e08:	mov	r0, r6
   10e0c:	and	r1, r1, #1
   10e10:	sub	sl, sl, #1
   10e14:	bl	11418 <close@plt+0xcac>
   10e18:	cmn	sl, #1
   10e1c:	bne	10e04 <close@plt+0x698>
   10e20:	mov	sl, #7
   10e24:	mov	r9, #65	; 0x41
   10e28:	lsr	r1, r9, sl
   10e2c:	mov	r0, r6
   10e30:	and	r1, r1, #1
   10e34:	sub	sl, sl, #1
   10e38:	bl	11418 <close@plt+0xcac>
   10e3c:	cmn	sl, #1
   10e40:	bne	10e28 <close@plt+0x6bc>
   10e44:	mov	sl, #7
   10e48:	mov	r9, #89	; 0x59
   10e4c:	lsr	r1, r9, sl
   10e50:	mov	r0, r6
   10e54:	and	r1, r1, #1
   10e58:	sub	sl, sl, #1
   10e5c:	bl	11418 <close@plt+0xcac>
   10e60:	cmn	sl, #1
   10e64:	bne	10e4c <close@plt+0x6e0>
   10e68:	mov	sl, #7
   10e6c:	mov	r9, #38	; 0x26
   10e70:	lsr	r1, r9, sl
   10e74:	mov	r0, r6
   10e78:	and	r1, r1, #1
   10e7c:	sub	sl, sl, #1
   10e80:	bl	11418 <close@plt+0xcac>
   10e84:	cmn	sl, #1
   10e88:	bne	10e70 <close@plt+0x704>
   10e8c:	mov	sl, #7
   10e90:	mov	r9, #83	; 0x53
   10e94:	lsr	r1, r9, sl
   10e98:	mov	r0, r6
   10e9c:	and	r1, r1, #1
   10ea0:	sub	sl, sl, #1
   10ea4:	bl	11418 <close@plt+0xcac>
   10ea8:	cmn	sl, #1
   10eac:	bne	10e94 <close@plt+0x728>
   10eb0:	mov	sl, #7
   10eb4:	mov	r9, #89	; 0x59
   10eb8:	lsr	r1, r9, sl
   10ebc:	mov	r0, r6
   10ec0:	and	r1, r1, #1
   10ec4:	sub	sl, sl, #1
   10ec8:	bl	11418 <close@plt+0xcac>
   10ecc:	cmn	sl, #1
   10ed0:	bne	10eb8 <close@plt+0x74c>
   10ed4:	b	10a0c <close@plt+0x2a0>
   10ed8:	stm	sp, {r0, r2}
   10edc:	ldr	fp, [sp, #60]	; 0x3c
   10ee0:	ldr	r0, [pc, #568]	; 11120 <close@plt+0x9b4>
   10ee4:	add	sl, fp, #1
   10ee8:	str	r1, [sp, #8]
   10eec:	str	r3, [sp, #12]
   10ef0:	ldr	r2, [pc, #640]	; 11178 <close@plt+0xa0c>
   10ef4:	mov	r3, sl
   10ef8:	mov	r1, #1
   10efc:	ldr	r0, [r0]
   10f00:	bl	10724 <__fprintf_chk@plt>
   10f04:	ldr	r3, [pc, #556]	; 11138 <close@plt+0x9cc>
   10f08:	ldr	lr, [pc, #584]	; 11158 <close@plt+0x9ec>
   10f0c:	lsl	ip, fp, #3
   10f10:	ldrd	r0, [r3, r8]
   10f14:	ldr	r3, [sp, #56]	; 0x38
   10f18:	str	sl, [sp, #60]	; 0x3c
   10f1c:	strd	r0, [lr, ip]
   10f20:	ldrd	r2, [r3]
   10f24:	ldr	r1, [pc, #560]	; 1115c <close@plt+0x9f0>
   10f28:	strd	r2, [r1, ip]
   10f2c:	b	10920 <close@plt+0x1b4>
   10f30:	subs	r1, r6, r2
   10f34:	str	r1, [sp, #48]	; 0x30
   10f38:	sbc	r1, r7, r3
   10f3c:	str	r1, [sp, #52]	; 0x34
   10f40:	ldrd	r0, [sp, #48]	; 0x30
   10f44:	cmp	r1, #0
   10f48:	cmpeq	r0, #39	; 0x27
   10f4c:	bls	1096c <close@plt+0x200>
   10f50:	ldr	r1, [pc, #500]	; 1114c <close@plt+0x9e0>
   10f54:	ldr	ip, [sp, #28]
   10f58:	add	r0, r1, r8
   10f5c:	cmp	ip, #0
   10f60:	str	sl, [r1, r8]
   10f64:	str	fp, [r0, #4]
   10f68:	beq	1096c <close@plt+0x200>
   10f6c:	ldr	r0, [pc, #428]	; 11120 <close@plt+0x9b4>
   10f70:	strd	r2, [sp]
   10f74:	strd	sl, [sp, #8]
   10f78:	mov	r3, ip
   10f7c:	ldr	r2, [pc, #504]	; 1117c <close@plt+0xa10>
   10f80:	mov	r1, #1
   10f84:	ldr	r0, [r0]
   10f88:	bl	10724 <__fprintf_chk@plt>
   10f8c:	b	1096c <close@plt+0x200>
   10f90:	add	r0, r1, #1
   10f94:	ldrb	r0, [r3, r0]
   10f98:	cmp	r0, #98	; 0x62
   10f9c:	bne	10cfc <close@plt+0x590>
   10fa0:	add	r1, r1, #2
   10fa4:	ldrb	r1, [r3, r1]
   10fa8:	cmp	r1, #122	; 0x7a
   10fac:	bne	10cfc <close@plt+0x590>
   10fb0:	ldr	r1, [pc, #456]	; 11180 <close@plt+0xa14>
   10fb4:	ldrb	r3, [r1, r3]
   10fb8:	cmp	r3, #50	; 0x32
   10fbc:	bne	10cfc <close@plt+0x590>
   10fc0:	b	10d10 <close@plt+0x5a4>
   10fc4:	bl	1148c <close@plt+0xd20>
   10fc8:	ldr	r2, [pc, #340]	; 11124 <close@plt+0x9b8>
   10fcc:	ldr	r0, [pc, #332]	; 11120 <close@plt+0x9b4>
   10fd0:	add	r3, r3, #1
   10fd4:	mov	r4, r0
   10fd8:	strd	r2, [sp]
   10fdc:	mov	r1, #1
   10fe0:	ldr	r3, [pc, #304]	; 11118 <close@plt+0x9ac>
   10fe4:	ldr	r2, [pc, #408]	; 11184 <close@plt+0xa18>
   10fe8:	ldr	r0, [r0]
   10fec:	bl	10724 <__fprintf_chk@plt>
   10ff0:	ldr	r3, [pc, #288]	; 11118 <close@plt+0x9ac>
   10ff4:	ldr	r2, [pc, #396]	; 11188 <close@plt+0xa1c>
   10ff8:	mov	r1, #1
   10ffc:	ldr	r0, [r4]
   11000:	bl	10724 <__fprintf_chk@plt>
   11004:	ldr	r0, [r4]
   11008:	ldr	r3, [pc, #264]	; 11118 <close@plt+0x9ac>
   1100c:	ldr	r2, [pc, #376]	; 1118c <close@plt+0xa20>
   11010:	mov	r1, #1
   11014:	bl	10724 <__fprintf_chk@plt>
   11018:	mov	r0, #1
   1101c:	bl	106f4 <exit@plt>
   11020:	ldr	r3, [pc, #244]	; 1111c <close@plt+0x9b0>
   11024:	ldr	r2, [pc, #356]	; 11190 <close@plt+0xa24>
   11028:	str	r3, [sp]
   1102c:	ldr	r3, [pc, #236]	; 11120 <close@plt+0x9b4>
   11030:	mov	r1, #1
   11034:	ldr	r0, [r3]
   11038:	ldr	r3, [pc, #216]	; 11118 <close@plt+0x9ac>
   1103c:	bl	10724 <__fprintf_chk@plt>
   11040:	mov	r0, #1
   11044:	bl	106f4 <exit@plt>
   11048:	ldr	r3, [pc, #212]	; 11124 <close@plt+0x9b8>
   1104c:	ldr	r2, [pc, #320]	; 11194 <close@plt+0xa28>
   11050:	str	r3, [sp]
   11054:	ldr	r3, [pc, #196]	; 11120 <close@plt+0x9b4>
   11058:	mov	r1, #1
   1105c:	ldr	r0, [r3]
   11060:	ldr	r3, [pc, #176]	; 11118 <close@plt+0x9ac>
   11064:	bl	10724 <__fprintf_chk@plt>
   11068:	mov	r0, #1
   1106c:	bl	106f4 <exit@plt>
   11070:	ldr	r3, [pc, #168]	; 11120 <close@plt+0x9b4>
   11074:	ldr	r2, [pc, #284]	; 11198 <close@plt+0xa2c>
   11078:	mov	r1, #1
   1107c:	ldr	r0, [r3]
   11080:	ldr	r3, [pc, #144]	; 11118 <close@plt+0x9ac>
   11084:	bl	10724 <__fprintf_chk@plt>
   11088:	mov	r0, #1
   1108c:	bl	106f4 <exit@plt>
   11090:	ldr	r2, [pc, #136]	; 11120 <close@plt+0x9b4>
   11094:	ldr	r3, [pc, #136]	; 11124 <close@plt+0x9b8>
   11098:	mov	r1, #1
   1109c:	str	r3, [sp]
   110a0:	mov	r3, r5
   110a4:	ldr	r0, [r2]
   110a8:	ldr	r2, [pc, #236]	; 1119c <close@plt+0xa30>
   110ac:	bl	10724 <__fprintf_chk@plt>
   110b0:	mov	r0, #1
   110b4:	bl	106f4 <exit@plt>
   110b8:	ldr	r2, [pc, #96]	; 11120 <close@plt+0x9b4>
   110bc:	str	r0, [sp]
   110c0:	mov	r3, r5
   110c4:	ldr	r0, [r2]
   110c8:	mov	r1, #1
   110cc:	ldr	r2, [pc, #204]	; 111a0 <close@plt+0xa34>
   110d0:	bl	10724 <__fprintf_chk@plt>
   110d4:	mov	r0, #1
   110d8:	bl	106f4 <exit@plt>
   110dc:	ldr	r0, [pc, #60]	; 11120 <close@plt+0x9b4>
   110e0:	str	r5, [sp]
   110e4:	mov	r4, r0
   110e8:	mov	r3, r5
   110ec:	ldr	r2, [pc, #176]	; 111a4 <close@plt+0xa38>
   110f0:	mov	r1, #1
   110f4:	ldr	r0, [r0]
   110f8:	bl	10724 <__fprintf_chk@plt>
   110fc:	ldr	r3, [r4]
   11100:	mov	r2, #46	; 0x2e
   11104:	mov	r1, #1
   11108:	ldr	r0, [pc, #152]	; 111a8 <close@plt+0xa3c>
   1110c:	bl	106a0 <fwrite@plt>
   11110:	mov	r0, #1
   11114:	bl	106f4 <exit@plt>
   11118:	andseq	r7, r4, r0, asr #30
   1111c:	strdeq	r5, [lr], -r0
   11120:	andeq	r2, r2, r8
   11124:	andeq	r2, r2, r0, lsr #32
   11128:	andeq	r1, r1, ip, ror #12
   1112c:			; <UNDEFINED> instruction: 0x000007bb
   11130:	andeq	r1, r1, r8, asr #14
   11134:	andeq	r1, r1, r4, ror #14
   11138:	strdeq	r2, [r2], -r0
   1113c:	andeq	r1, r0, r2, ror r7
   11140:	ldrmi	r5, [r8, #-144]!	; 0xffffff70
   11144:	andeq	r3, r0, r1, asr #2
   11148:	stmdbpl	r6!, {r0, r3, r4, r6, r8, r9, ip, lr}
   1114c:	andeq	r6, lr, r0, asr #9
   11150:	andeq	ip, r0, pc, asr #6
   11154:			; <UNDEFINED> instruction: 0x000118b8
   11158:	andeq	r4, r8, r0, ror r2
   1115c:	andseq	r8, r4, r0, lsl r7
   11160:	andeq	r1, r1, ip, lsr r9
   11164:	andeq	r1, r1, ip, ror #17
   11168:	andeq	r5, lr, ip, ror #25
   1116c:	strdeq	r1, [r1], -r4
   11170:	strdeq	r1, [r1], -ip
   11174:	andeq	r1, r1, r0, lsr #18
   11178:			; <UNDEFINED> instruction: 0x000117bc
   1117c:	andeq	r1, r1, ip, lsl #15
   11180:	andeq	r5, lr, pc, ror #25
   11184:	andeq	r1, r1, r0, ror #15
   11188:	andeq	r1, r1, r4, lsl r8
   1118c:	andeq	r1, r1, r4, asr #16
   11190:	andeq	r1, r1, r4, lsr #18
   11194:	ldrdeq	r1, [r1], -r4
   11198:	andeq	r1, r1, r4, lsl #17
   1119c:	andeq	r1, r1, ip, asr #14
   111a0:	andeq	r1, r1, r4, lsl #14
   111a4:	andeq	r1, r1, ip, lsr #13
   111a8:	ldrdeq	r1, [r1], -r4
   111ac:	mov	fp, #0
   111b0:	mov	lr, #0
   111b4:	pop	{r1}		; (ldr r1, [sp], #4)
   111b8:	mov	r2, sp
   111bc:	push	{r2}		; (str r2, [sp, #-4]!)
   111c0:	push	{r0}		; (str r0, [sp, #-4]!)
   111c4:	ldr	ip, [pc, #16]	; 111dc <close@plt+0xa70>
   111c8:	push	{ip}		; (str ip, [sp, #-4]!)
   111cc:	ldr	r0, [pc, #12]	; 111e0 <close@plt+0xa74>
   111d0:	ldr	r3, [pc, #12]	; 111e4 <close@plt+0xa78>
   111d4:	bl	106d0 <__libc_start_main@plt>
   111d8:	bl	10754 <abort@plt>
   111dc:	andeq	r1, r1, r8, asr #11
   111e0:	andeq	r0, r1, r8, ror r7
   111e4:	andeq	r1, r1, r8, ror #10
   111e8:	ldr	r3, [pc, #20]	; 11204 <close@plt+0xa98>
   111ec:	ldr	r2, [pc, #20]	; 11208 <close@plt+0xa9c>
   111f0:	add	r3, pc, r3
   111f4:	ldr	r2, [r3, r2]
   111f8:	cmp	r2, #0
   111fc:	bxeq	lr
   11200:	b	106dc <__gmon_start__@plt>
   11204:	muleq	r1, r8, sp
   11208:	andeq	r0, r0, ip, rrx
   1120c:	ldr	r0, [pc, #24]	; 1122c <close@plt+0xac0>
   11210:	ldr	r3, [pc, #24]	; 11230 <close@plt+0xac4>
   11214:	cmp	r3, r0
   11218:	bxeq	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <close@plt+0xac8>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r2, r2, r8
   11230:	andeq	r2, r2, r8
   11234:	andeq	r0, r0, r0
   11238:	ldr	r0, [pc, #36]	; 11264 <close@plt+0xaf8>
   1123c:	ldr	r1, [pc, #36]	; 11268 <close@plt+0xafc>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <close@plt+0xb00>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r2, r2, r8
   11268:	andeq	r2, r2, r8
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <close@plt+0xb28>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	1120c <close@plt+0xaa0>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r2, r2, ip
   11298:	b	11238 <close@plt+0xacc>
   1129c:	ldr	r5, [pc, #72]	; 112ec <close@plt+0xb80>
   112a0:	push	{lr}		; (str lr, [sp, #-4]!)
   112a4:	sub	sp, sp, #12
   112a8:	ldr	r4, [pc, #64]	; 112f0 <close@plt+0xb84>
   112ac:	ldr	r2, [pc, #64]	; 112f4 <close@plt+0xb88>
   112b0:	mov	r3, r4
   112b4:	mov	r1, #1
   112b8:	str	r2, [sp]
   112bc:	ldr	r0, [r5]
   112c0:	ldr	r2, [pc, #48]	; 112f8 <close@plt+0xb8c>
   112c4:	bl	10724 <__fprintf_chk@plt>
   112c8:	mov	r0, r4
   112cc:	bl	10688 <perror@plt>
   112d0:	mov	r3, r4
   112d4:	ldr	r0, [r5]
   112d8:	ldr	r2, [pc, #28]	; 112fc <close@plt+0xb90>
   112dc:	mov	r1, #1
   112e0:	bl	10724 <__fprintf_chk@plt>
   112e4:	mov	r0, #1
   112e8:	bl	106f4 <exit@plt>
   112ec:	andeq	r2, r2, r8
   112f0:	andseq	r7, r4, r0, asr #30
   112f4:	andeq	r2, r2, r0, lsr #32
   112f8:	ldrdeq	r1, [r1], -r8
   112fc:	andeq	r1, r1, r0, lsl r6
   11300:	push	{r4, lr}
   11304:	mov	r4, r0
   11308:	ldrb	r3, [r0, #12]
   1130c:	cmp	r3, #119	; 0x77
   11310:	bne	11374 <close@plt+0xc08>
   11314:	ldmib	r0, {r0, r3}
   11318:	cmp	r3, #7
   1131c:	bgt	11334 <close@plt+0xbc8>
   11320:	add	r3, r3, #1
   11324:	cmp	r3, #8
   11328:	lsl	r0, r0, #1
   1132c:	bne	11320 <close@plt+0xbb4>
   11330:	stmib	r4, {r0, r3}
   11334:	uxtb	r0, r0
   11338:	ldr	r1, [r4]
   1133c:	bl	10748 <putc@plt>
   11340:	cmn	r0, #1
   11344:	beq	113a0 <close@plt+0xc34>
   11348:	ldr	r2, [pc, #84]	; 113a4 <close@plt+0xc38>
   1134c:	ldr	r0, [r4]
   11350:	ldr	r3, [r2]
   11354:	ldr	r1, [r2, #4]
   11358:	adds	r3, r3, #1
   1135c:	adc	r1, r1, #0
   11360:	str	r3, [r2]
   11364:	str	r1, [r2, #4]
   11368:	bl	10670 <fflush@plt>
   1136c:	cmn	r0, #1
   11370:	beq	113a0 <close@plt+0xc34>
   11374:	ldr	r0, [r4]
   11378:	bl	10730 <fclose@plt>
   1137c:	cmn	r0, #1
   11380:	bne	11394 <close@plt+0xc28>
   11384:	ldrb	r3, [r4, #12]
   11388:	cmp	r3, #119	; 0x77
   1138c:	beq	113a0 <close@plt+0xc34>
   11390:	bl	1129c <close@plt+0xb30>
   11394:	mov	r0, r4
   11398:	pop	{r4, lr}
   1139c:	b	1067c <free@plt>
   113a0:	bl	1129c <close@plt+0xb30>
   113a4:	andeq	r2, r2, r0, lsl r0
   113a8:	ldr	r2, [r0, #8]
   113ac:	cmp	r2, #0
   113b0:	ble	113cc <close@plt+0xc60>
   113b4:	ldr	r3, [r0, #4]
   113b8:	sub	r2, r2, #1
   113bc:	str	r2, [r0, #8]
   113c0:	asr	r0, r3, r2
   113c4:	and	r0, r0, #1
   113c8:	bx	lr
   113cc:	push	{r4, lr}
   113d0:	mov	r4, r0
   113d4:	ldr	r0, [r0]
   113d8:	bl	10760 <getc@plt>
   113dc:	cmn	r0, #1
   113e0:	bne	113fc <close@plt+0xc90>
   113e4:	bl	1070c <__errno_location@plt>
   113e8:	ldr	r3, [r0]
   113ec:	cmp	r3, #0
   113f0:	bne	11414 <close@plt+0xca8>
   113f4:	mov	r0, #2
   113f8:	pop	{r4, pc}
   113fc:	asr	r3, r0, #7
   11400:	mov	r2, #7
   11404:	str	r0, [r4, #4]
   11408:	str	r2, [r4, #8]
   1140c:	and	r0, r3, #1
   11410:	pop	{r4, pc}
   11414:	bl	1129c <close@plt+0xb30>
   11418:	ldrd	r2, [r0, #4]
   1141c:	cmp	r3, #8
   11420:	beq	11438 <close@plt+0xccc>
   11424:	and	r1, r1, #1
   11428:	orr	r1, r1, r2, lsl #1
   1142c:	add	r3, r3, #1
   11430:	stmib	r0, {r1, r3}
   11434:	bx	lr
   11438:	push	{r4, r5, r6, lr}
   1143c:	mov	r5, r0
   11440:	mov	r4, r1
   11444:	uxtb	r0, r2
   11448:	ldr	r1, [r5]
   1144c:	bl	10748 <putc@plt>
   11450:	cmn	r0, #1
   11454:	beq	11484 <close@plt+0xd18>
   11458:	ldr	r2, [pc, #40]	; 11488 <close@plt+0xd1c>
   1145c:	mov	ip, #1
   11460:	and	r1, r4, #1
   11464:	ldr	r3, [r2]
   11468:	ldr	r0, [r2, #4]
   1146c:	adds	r3, r3, ip
   11470:	adc	r0, r0, #0
   11474:	str	r3, [r2]
   11478:	str	r0, [r2, #4]
   1147c:	stmib	r5, {r1, ip}
   11480:	pop	{r4, r5, r6, pc}
   11484:	bl	1129c <close@plt+0xb30>
   11488:	andeq	r2, r2, r0, lsl r0
   1148c:	ldr	r4, [pc, #64]	; 114d4 <close@plt+0xd68>
   11490:	push	{lr}		; (str lr, [sp, #-4]!)
   11494:	sub	sp, sp, #12
   11498:	ldr	r5, [pc, #56]	; 114d8 <close@plt+0xd6c>
   1149c:	mov	r2, #16
   114a0:	mov	r3, r5
   114a4:	str	r2, [sp]
   114a8:	mov	r1, #1
   114ac:	ldr	r2, [pc, #40]	; 114dc <close@plt+0xd70>
   114b0:	ldr	r0, [r4]
   114b4:	bl	10724 <__fprintf_chk@plt>
   114b8:	mov	r3, r5
   114bc:	ldr	r0, [r4]
   114c0:	ldr	r2, [pc, #24]	; 114e0 <close@plt+0xd74>
   114c4:	mov	r1, #1
   114c8:	bl	10724 <__fprintf_chk@plt>
   114cc:	mov	r0, #1
   114d0:	bl	106f4 <exit@plt>
   114d4:	andeq	r2, r2, r8
   114d8:	andseq	r7, r4, r0, asr #30
   114dc:	andeq	r1, r1, r0, asr #12
   114e0:	andeq	r1, r1, r0, lsl r6
   114e4:	push	{r4, lr}
   114e8:	mov	r4, r0
   114ec:	mov	r0, #16
   114f0:	bl	106c4 <malloc@plt>
   114f4:	subs	r3, r0, #0
   114f8:	beq	11518 <close@plt+0xdac>
   114fc:	mov	r2, #0
   11500:	mov	r1, #114	; 0x72
   11504:	str	r4, [r3]
   11508:	str	r2, [r3, #4]
   1150c:	str	r2, [r3, #8]
   11510:	strb	r1, [r3, #12]
   11514:	pop	{r4, pc}
   11518:	bl	1148c <close@plt+0xd20>
   1151c:	push	{r4, r5, r6, lr}
   11520:	mov	r2, #384	; 0x180
   11524:	mov	r5, r1
   11528:	mov	r1, #193	; 0xc1
   1152c:	bl	106e8 <open@plt>
   11530:	cmn	r0, #1
   11534:	moveq	r5, #0
   11538:	beq	11550 <close@plt+0xde4>
   1153c:	mov	r1, r5
   11540:	mov	r4, r0
   11544:	bl	10658 <fdopen@plt>
   11548:	subs	r5, r0, #0
   1154c:	beq	11558 <close@plt+0xdec>
   11550:	mov	r0, r5
   11554:	pop	{r4, r5, r6, pc}
   11558:	mov	r0, r4
   1155c:	bl	1076c <close@plt>
   11560:	mov	r0, r5
   11564:	pop	{r4, r5, r6, pc}
   11568:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1156c:	mov	r7, r0
   11570:	ldr	r6, [pc, #72]	; 115c0 <close@plt+0xe54>
   11574:	ldr	r5, [pc, #72]	; 115c4 <close@plt+0xe58>
   11578:	add	r6, pc, r6
   1157c:	add	r5, pc, r5
   11580:	sub	r6, r6, r5
   11584:	mov	r8, r1
   11588:	mov	r9, r2
   1158c:	bl	10638 <fdopen@plt-0x20>
   11590:	asrs	r6, r6, #2
   11594:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11598:	mov	r4, #0
   1159c:	add	r4, r4, #1
   115a0:	ldr	r3, [r5], #4
   115a4:	mov	r2, r9
   115a8:	mov	r1, r8
   115ac:	mov	r0, r7
   115b0:	blx	r3
   115b4:	cmp	r6, r4
   115b8:	bne	1159c <close@plt+0xe30>
   115bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115c0:	andeq	r0, r1, r4, lsl r9
   115c4:	andeq	r0, r1, ip, lsl #18
   115c8:	bx	lr

Disassembly of section .fini:

000115cc <.fini>:
   115cc:	push	{r3, lr}
   115d0:	pop	{r3, pc}
