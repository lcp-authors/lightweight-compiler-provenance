
raspbian-preinstalled/systemd-stdio-bridge:     file format elf32-littlearm


Disassembly of section .init:

00000b4c <.init>:
 b4c:	push	{r3, lr}
 b50:	bl	1bbc <__printf_chk@plt+0xe7c>
 b54:	pop	{r3, pc}

Disassembly of section .plt:

00000b58 <ppoll@plt-0x14>:
 b58:	push	{lr}		; (str lr, [sp, #-4]!)
 b5c:	ldr	lr, [pc, #4]	; b68 <ppoll@plt-0x4>
 b60:	add	lr, pc, lr
 b64:	ldr	pc, [lr, #8]!
 b68:			; <UNDEFINED> instruction: 0x000123bc

00000b6c <ppoll@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #956]!	; 0x3bc

00000b78 <sd_listen_fds@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #948]!	; 0x3b4

00000b84 <sd_bus_start@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #940]!	; 0x3ac

00000b90 <version@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #932]!	; 0x3a4

00000b9c <sd_bus_get_timeout@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #924]!	; 0x39c

00000ba8 <sd_is_socket@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #916]!	; 0x394

00000bb4 <log_open@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #908]!	; 0x38c

00000bc0 <sd_bus_set_anonymous@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #900]!	; 0x384

00000bcc <ask_password_agent_close@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #892]!	; 0x37c

00000bd8 <polkit_agent_close@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #884]!	; 0x374

00000be4 <mac_selinux_finish@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #876]!	; 0x36c

00000bf0 <log_set_target@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #868]!	; 0x364

00000bfc <timespec_store@plt>:
 bfc:	add	ip, pc, #0, 12
 c00:	add	ip, ip, #73728	; 0x12000
 c04:	ldr	pc, [ip, #860]!	; 0x35c

00000c08 <sd_bus_set_server@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #73728	; 0x12000
 c10:	ldr	pc, [ip, #852]!	; 0x354

00000c14 <log_get_max_level_realm@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #73728	; 0x12000
 c1c:	ldr	pc, [ip, #844]!	; 0x34c

00000c20 <sd_bus_get_bus_id@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #73728	; 0x12000
 c28:	ldr	pc, [ip, #836]!	; 0x344

00000c2c <abort@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #73728	; 0x12000
 c34:	ldr	pc, [ip, #828]!	; 0x33c

00000c38 <sd_bus_send@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #73728	; 0x12000
 c40:	ldr	pc, [ip, #820]!	; 0x334

00000c44 <sd_bus_flush_close_unref@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #73728	; 0x12000
 c4c:	ldr	pc, [ip, #812]!	; 0x32c

00000c50 <sd_bus_negotiate_fds@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #73728	; 0x12000
 c58:	ldr	pc, [ip, #804]!	; 0x324

00000c5c <__stack_chk_fail@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #73728	; 0x12000
 c64:	ldr	pc, [ip, #796]!	; 0x31c

00000c68 <getopt_long@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #73728	; 0x12000
 c70:	ldr	pc, [ip, #788]!	; 0x314

00000c74 <sd_bus_message_unref@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #780]!	; 0x30c

00000c80 <pager_close@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #772]!	; 0x304

00000c8c <sd_bus_get_fd@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #764]!	; 0x2fc

00000c98 <sd_bus_process@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #756]!	; 0x2f4

00000ca4 <now@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #748]!	; 0x2ec

00000cb0 <sd_bus_new@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #740]!	; 0x2e4

00000cbc <log_parse_environment_realm@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #732]!	; 0x2dc

00000cc8 <sd_bus_get_events@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #724]!	; 0x2d4

00000cd4 <__errno_location@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #716]!	; 0x2cc

00000ce0 <sd_bus_set_address@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #708]!	; 0x2c4

00000cec <log_assert_failed_realm@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #700]!	; 0x2bc

00000cf8 <bus_set_address_system_machine@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #692]!	; 0x2b4

00000d04 <log_internal_realm@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #684]!	; 0x2ac

00000d10 <__libc_start_main@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #676]!	; 0x2a4

00000d1c <__gmon_start__@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #668]!	; 0x29c

00000d28 <__cxa_finalize@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #660]!	; 0x294

00000d34 <sd_bus_set_fd@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #652]!	; 0x28c

00000d40 <__printf_chk@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #644]!	; 0x284

Disassembly of section .text:

00000d4c <.text>:
     d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     d50:	sub	sp, sp, #116	; 0x74
     d54:	ldr	r7, [pc, #3244]	; 1a08 <__printf_chk@plt+0xcc8>
     d58:	ldr	r3, [pc, #3244]	; 1a0c <__printf_chk@plt+0xccc>
     d5c:	add	r7, pc, r7
     d60:	mov	r4, #0
     d64:	ldr	r8, [r7, r3]
     d68:	mov	r6, r0
     d6c:	mov	r0, #4
     d70:	ldr	r3, [r8]
     d74:	mov	r9, r1
     d78:	str	r3, [sp, #108]	; 0x6c
     d7c:	str	r4, [sp, #28]
     d80:	str	r4, [sp, #32]
     d84:	bl	bf0 <log_set_target@plt>
     d88:	mov	r0, r4
     d8c:	bl	cbc <log_parse_environment_realm@plt>
     d90:	bl	bb4 <log_open@plt>
     d94:	cmp	r6, r4
     d98:	blt	1088 <__printf_chk@plt+0x348>
     d9c:	cmp	r9, #0
     da0:	beq	10b0 <__printf_chk@plt+0x370>
     da4:	ldr	sl, [pc, #3172]	; 1a10 <__printf_chk@plt+0xcd0>
     da8:	ldr	r4, [pc, #3172]	; 1a14 <__printf_chk@plt+0xcd4>
     dac:	ldr	fp, [pc, #3172]	; 1a18 <__printf_chk@plt+0xcd8>
     db0:	add	sl, pc, sl
     db4:	add	r4, pc, r4
     db8:	add	fp, pc, fp
     dbc:	mov	r5, #0
     dc0:	str	r5, [sp]
     dc4:	mov	r3, sl
     dc8:	mov	r2, r4
     dcc:	mov	r1, r9
     dd0:	mov	r0, r6
     dd4:	bl	c68 <getopt_long@plt>
     dd8:	cmp	r0, #0
     ddc:	blt	e4c <__printf_chk@plt+0x10c>
     de0:	cmp	r0, #104	; 0x68
     de4:	beq	1058 <__printf_chk@plt+0x318>
     de8:	bgt	e28 <__printf_chk@plt+0xe8>
     dec:	cmp	r0, #63	; 0x3f
     df0:	beq	eb0 <__printf_chk@plt+0x170>
     df4:	cmp	r0, #77	; 0x4d
     df8:	bne	f3c <__printf_chk@plt+0x1fc>
     dfc:	ldr	r2, [pc, #3096]	; 1a1c <__printf_chk@plt+0xcdc>
     e00:	ldr	r3, [pc, #3096]	; 1a20 <__printf_chk@plt+0xce0>
     e04:	ldr	r1, [pc, #3096]	; 1a24 <__printf_chk@plt+0xce4>
     e08:	ldr	r2, [r7, r2]
     e0c:	add	r3, pc, r3
     e10:	mov	r0, #2
     e14:	add	r1, pc, r1
     e18:	str	r0, [r3]
     e1c:	ldr	r3, [r2]
     e20:	str	r3, [r1]
     e24:	b	dbc <__printf_chk@plt+0x7c>
     e28:	cmp	r0, #112	; 0x70
     e2c:	beq	1044 <__printf_chk@plt+0x304>
     e30:	cmp	r0, #256	; 0x100
     e34:	mov	r3, r0
     e38:	bne	f40 <__printf_chk@plt+0x200>
     e3c:	bl	b90 <version@plt>
     e40:	mov	r5, r0
     e44:	cmp	r5, #0
     e48:	ble	eb4 <__printf_chk@plt+0x174>
     e4c:	mov	r0, #0
     e50:	bl	b78 <sd_listen_fds@plt>
     e54:	subs	r4, r0, #0
     e58:	beq	1080 <__printf_chk@plt+0x340>
     e5c:	cmp	r4, #1
     e60:	beq	f98 <__printf_chk@plt+0x258>
     e64:	mov	r0, #0
     e68:	bl	c14 <log_get_max_level_realm@plt>
     e6c:	cmp	r0, #2
     e70:	ble	eb0 <__printf_chk@plt+0x170>
     e74:	ldr	r2, [pc, #2988]	; 1a28 <__printf_chk@plt+0xce8>
     e78:	ldr	r3, [pc, #2988]	; 1a2c <__printf_chk@plt+0xcec>
     e7c:	add	r2, pc, r2
     e80:	str	r2, [sp, #4]
     e84:	add	r3, pc, r3
     e88:	ldr	r2, [pc, #2976]	; 1a30 <__printf_chk@plt+0xcf0>
     e8c:	add	r3, r3, #24
     e90:	str	r3, [sp]
     e94:	add	r2, pc, r2
     e98:	mov	r3, #115	; 0x73
     e9c:	mov	r1, #0
     ea0:	mov	r0, #3
     ea4:	bl	d04 <log_internal_realm@plt>
     ea8:	mvn	r5, #21
     eac:	b	eb4 <__printf_chk@plt+0x174>
     eb0:	mvn	r5, #21
     eb4:	ldr	r0, [sp, #32]
     eb8:	cmp	r0, #0
     ebc:	beq	ec4 <__printf_chk@plt+0x184>
     ec0:	bl	c44 <sd_bus_flush_close_unref@plt>
     ec4:	ldr	r0, [sp, #28]
     ec8:	cmp	r0, #0
     ecc:	beq	ed4 <__printf_chk@plt+0x194>
     ed0:	bl	c44 <sd_bus_flush_close_unref@plt>
     ed4:	ldr	r3, [pc, #2904]	; 1a34 <__printf_chk@plt+0xcf4>
     ed8:	ldr	r4, [r7, r3]
     edc:	cmp	r4, #0
     ee0:	beq	f10 <__printf_chk@plt+0x1d0>
     ee4:	ldr	r3, [pc, #2892]	; 1a38 <__printf_chk@plt+0xcf8>
     ee8:	add	r4, r4, #3
     eec:	bic	r4, r4, #3
     ef0:	ldr	r6, [r7, r3]
     ef4:	cmp	r4, r6
     ef8:	bcs	f10 <__printf_chk@plt+0x1d0>
     efc:	ldm	r4, {r0, r3}
     f00:	add	r4, r4, #8
     f04:	blx	r3
     f08:	cmp	r4, r6
     f0c:	bcc	efc <__printf_chk@plt+0x1bc>
     f10:	bl	bcc <ask_password_agent_close@plt>
     f14:	bl	bd8 <polkit_agent_close@plt>
     f18:	bl	be4 <mac_selinux_finish@plt>
     f1c:	bl	c80 <pager_close@plt>
     f20:	ldr	r2, [sp, #108]	; 0x6c
     f24:	ldr	r3, [r8]
     f28:	lsr	r0, r5, #31
     f2c:	cmp	r2, r3
     f30:	bne	13f0 <__printf_chk@plt+0x6b0>
     f34:	add	sp, sp, #116	; 0x74
     f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f3c:	mov	r3, r0
     f40:	mov	r0, #0
     f44:	str	r3, [sp, #16]
     f48:	bl	c14 <log_get_max_level_realm@plt>
     f4c:	cmp	r0, #2
     f50:	ble	eb0 <__printf_chk@plt+0x170>
     f54:	ldr	r2, [pc, #2784]	; 1a3c <__printf_chk@plt+0xcfc>
     f58:	ldr	r1, [pc, #2784]	; 1a40 <__printf_chk@plt+0xd00>
     f5c:	add	r2, pc, r2
     f60:	add	r2, r2, #12
     f64:	ldr	r3, [sp, #16]
     f68:	str	r2, [sp]
     f6c:	ldr	r2, [pc, #2768]	; 1a44 <__printf_chk@plt+0xd04>
     f70:	add	r1, pc, r1
     f74:	str	r3, [sp, #8]
     f78:	str	r1, [sp, #4]
     f7c:	mov	r3, #86	; 0x56
     f80:	add	r2, pc, r2
     f84:	mov	r1, #1073741846	; 0x40000016
     f88:	mov	r0, #3
     f8c:	bl	d04 <log_internal_realm@plt>
     f90:	mov	r5, r0
     f94:	b	e44 <__printf_chk@plt+0x104>
     f98:	mov	r5, #3
     f9c:	mov	r4, r5
     fa0:	mov	r3, #0
     fa4:	mov	r2, r3
     fa8:	mov	r1, #1
     fac:	mov	r0, r4
     fb0:	bl	ba8 <sd_is_socket@plt>
     fb4:	cmp	r0, #0
     fb8:	movle	r6, #0
     fbc:	ble	fe0 <__printf_chk@plt+0x2a0>
     fc0:	mov	r3, #0
     fc4:	mov	r2, r3
     fc8:	mov	r1, #1
     fcc:	mov	r0, r5
     fd0:	bl	ba8 <sd_is_socket@plt>
     fd4:	cmp	r0, #0
     fd8:	movle	r6, #0
     fdc:	movgt	r6, #1
     fe0:	add	r0, sp, #28
     fe4:	bl	cb0 <sd_bus_new@plt>
     fe8:	subs	r9, r0, #0
     fec:	blt	10d8 <__printf_chk@plt+0x398>
     ff0:	ldr	r2, [pc, #2640]	; 1a48 <__printf_chk@plt+0xd08>
     ff4:	ldr	r3, [pc, #2640]	; 1a4c <__printf_chk@plt+0xd0c>
     ff8:	add	r2, pc, r2
     ffc:	add	r3, pc, r3
    1000:	ldr	r2, [r2]
    1004:	ldr	r0, [sp, #28]
    1008:	cmp	r2, #2
    100c:	ldr	r1, [r3]
    1010:	beq	121c <__printf_chk@plt+0x4dc>
    1014:	bl	ce0 <sd_bus_set_address@plt>
    1018:	mov	r9, r0
    101c:	cmp	r9, #0
    1020:	bge	1124 <__printf_chk@plt+0x3e4>
    1024:	mov	r0, #0
    1028:	bl	c14 <log_get_max_level_realm@plt>
    102c:	cmp	r0, #2
    1030:	bgt	11e0 <__printf_chk@plt+0x4a0>
    1034:	rsb	r5, r9, #0
    1038:	uxtb	r5, r5
    103c:	rsb	r5, r5, #0
    1040:	b	eb4 <__printf_chk@plt+0x174>
    1044:	ldr	r3, [pc, #2512]	; 1a1c <__printf_chk@plt+0xcdc>
    1048:	ldr	r3, [r7, r3]
    104c:	ldr	r3, [r3]
    1050:	str	r3, [fp]
    1054:	b	dbc <__printf_chk@plt+0x7c>
    1058:	ldr	r2, [pc, #2544]	; 1a50 <__printf_chk@plt+0xd10>
    105c:	ldr	r3, [pc, #2544]	; 1a54 <__printf_chk@plt+0xd14>
    1060:	ldr	r1, [pc, #2544]	; 1a58 <__printf_chk@plt+0xd18>
    1064:	ldr	r2, [r7, r2]
    1068:	add	r3, pc, r3
    106c:	add	r1, pc, r1
    1070:	ldr	r2, [r2]
    1074:	mov	r0, #1
    1078:	bl	d40 <__printf_chk@plt>
    107c:	b	eb4 <__printf_chk@plt+0x174>
    1080:	mov	r5, #1
    1084:	b	fa0 <__printf_chk@plt+0x260>
    1088:	ldr	r3, [pc, #2508]	; 1a5c <__printf_chk@plt+0xd1c>
    108c:	ldr	r2, [pc, #2508]	; 1a60 <__printf_chk@plt+0xd20>
    1090:	ldr	r1, [pc, #2508]	; 1a64 <__printf_chk@plt+0xd24>
    1094:	add	r3, pc, r3
    1098:	str	r3, [sp]
    109c:	mov	r0, r4
    10a0:	mov	r3, #56	; 0x38
    10a4:	add	r2, pc, r2
    10a8:	add	r1, pc, r1
    10ac:	bl	cec <log_assert_failed_realm@plt>
    10b0:	ldr	r3, [pc, #2480]	; 1a68 <__printf_chk@plt+0xd28>
    10b4:	ldr	r2, [pc, #2480]	; 1a6c <__printf_chk@plt+0xd2c>
    10b8:	ldr	r1, [pc, #2480]	; 1a70 <__printf_chk@plt+0xd30>
    10bc:	add	r3, pc, r3
    10c0:	str	r3, [sp]
    10c4:	mov	r0, r9
    10c8:	mov	r3, #57	; 0x39
    10cc:	add	r2, pc, r2
    10d0:	add	r1, pc, r1
    10d4:	bl	cec <log_assert_failed_realm@plt>
    10d8:	mov	r0, #0
    10dc:	bl	c14 <log_get_max_level_realm@plt>
    10e0:	cmp	r0, #2
    10e4:	ble	1034 <__printf_chk@plt+0x2f4>
    10e8:	ldr	r2, [pc, #2436]	; 1a74 <__printf_chk@plt+0xd34>
    10ec:	ldr	r3, [pc, #2436]	; 1a78 <__printf_chk@plt+0xd38>
    10f0:	add	r2, pc, r2
    10f4:	str	r2, [sp, #4]
    10f8:	add	r3, pc, r3
    10fc:	ldr	r2, [pc, #2424]	; 1a7c <__printf_chk@plt+0xd3c>
    1100:	add	r3, r3, #24
    1104:	str	r3, [sp]
    1108:	mov	r1, r9
    110c:	mov	r3, #125	; 0x7d
    1110:	add	r2, pc, r2
    1114:	mov	r0, #3
    1118:	bl	d04 <log_internal_realm@plt>
    111c:	mov	r5, r0
    1120:	b	eb4 <__printf_chk@plt+0x174>
    1124:	mov	r1, r6
    1128:	ldr	r0, [sp, #28]
    112c:	bl	c50 <sd_bus_negotiate_fds@plt>
    1130:	subs	r9, r0, #0
    1134:	bge	1184 <__printf_chk@plt+0x444>
    1138:	mov	r0, #0
    113c:	bl	c14 <log_get_max_level_realm@plt>
    1140:	cmp	r0, #2
    1144:	ble	1034 <__printf_chk@plt+0x2f4>
    1148:	ldr	r2, [pc, #2352]	; 1a80 <__printf_chk@plt+0xd40>
    114c:	ldr	r3, [pc, #2352]	; 1a84 <__printf_chk@plt+0xd44>
    1150:	add	r2, pc, r2
    1154:	str	r2, [sp, #4]
    1158:	add	r3, pc, r3
    115c:	ldr	r2, [pc, #2340]	; 1a88 <__printf_chk@plt+0xd48>
    1160:	add	r3, r3, #24
    1164:	str	r3, [sp]
    1168:	mov	r1, r9
    116c:	mov	r3, #136	; 0x88
    1170:	add	r2, pc, r2
    1174:	mov	r0, #3
    1178:	bl	d04 <log_internal_realm@plt>
    117c:	mov	r5, r0
    1180:	b	eb4 <__printf_chk@plt+0x174>
    1184:	ldr	r0, [sp, #28]
    1188:	bl	b84 <sd_bus_start@plt>
    118c:	subs	r9, r0, #0
    1190:	bge	1228 <__printf_chk@plt+0x4e8>
    1194:	mov	r0, #0
    1198:	bl	c14 <log_get_max_level_realm@plt>
    119c:	cmp	r0, #2
    11a0:	ble	1034 <__printf_chk@plt+0x2f4>
    11a4:	ldr	r2, [pc, #2272]	; 1a8c <__printf_chk@plt+0xd4c>
    11a8:	ldr	r3, [pc, #2272]	; 1a90 <__printf_chk@plt+0xd50>
    11ac:	add	r2, pc, r2
    11b0:	str	r2, [sp, #4]
    11b4:	add	r3, pc, r3
    11b8:	ldr	r2, [pc, #2260]	; 1a94 <__printf_chk@plt+0xd54>
    11bc:	add	r3, r3, #24
    11c0:	str	r3, [sp]
    11c4:	mov	r1, r9
    11c8:	mov	r3, #140	; 0x8c
    11cc:	add	r2, pc, r2
    11d0:	mov	r0, #3
    11d4:	bl	d04 <log_internal_realm@plt>
    11d8:	mov	r5, r0
    11dc:	b	eb4 <__printf_chk@plt+0x174>
    11e0:	ldr	r2, [pc, #2224]	; 1a98 <__printf_chk@plt+0xd58>
    11e4:	ldr	r3, [pc, #2224]	; 1a9c <__printf_chk@plt+0xd5c>
    11e8:	add	r2, pc, r2
    11ec:	str	r2, [sp, #4]
    11f0:	add	r3, pc, r3
    11f4:	ldr	r2, [pc, #2212]	; 1aa0 <__printf_chk@plt+0xd60>
    11f8:	add	r3, r3, #24
    11fc:	str	r3, [sp]
    1200:	mov	r1, r9
    1204:	mov	r3, #132	; 0x84
    1208:	add	r2, pc, r2
    120c:	mov	r0, #3
    1210:	bl	d04 <log_internal_realm@plt>
    1214:	mov	r5, r0
    1218:	b	eb4 <__printf_chk@plt+0x174>
    121c:	bl	cf8 <bus_set_address_system_machine@plt>
    1220:	mov	r9, r0
    1224:	b	101c <__printf_chk@plt+0x2dc>
    1228:	add	sl, sp, #64	; 0x40
    122c:	mov	r1, sl
    1230:	ldr	r0, [sp, #28]
    1234:	bl	c20 <sd_bus_get_bus_id@plt>
    1238:	subs	r9, r0, #0
    123c:	bge	128c <__printf_chk@plt+0x54c>
    1240:	mov	r0, #0
    1244:	bl	c14 <log_get_max_level_realm@plt>
    1248:	cmp	r0, #2
    124c:	ble	1034 <__printf_chk@plt+0x2f4>
    1250:	ldr	r2, [pc, #2124]	; 1aa4 <__printf_chk@plt+0xd64>
    1254:	ldr	r3, [pc, #2124]	; 1aa8 <__printf_chk@plt+0xd68>
    1258:	add	r2, pc, r2
    125c:	str	r2, [sp, #4]
    1260:	add	r3, pc, r3
    1264:	ldr	r2, [pc, #2112]	; 1aac <__printf_chk@plt+0xd6c>
    1268:	add	r3, r3, #24
    126c:	str	r3, [sp]
    1270:	mov	r1, r9
    1274:	mov	r3, #144	; 0x90
    1278:	add	r2, pc, r2
    127c:	mov	r0, #3
    1280:	bl	d04 <log_internal_realm@plt>
    1284:	mov	r5, r0
    1288:	b	eb4 <__printf_chk@plt+0x174>
    128c:	add	r0, sp, #32
    1290:	bl	cb0 <sd_bus_new@plt>
    1294:	subs	r9, r0, #0
    1298:	bge	12e8 <__printf_chk@plt+0x5a8>
    129c:	mov	r0, #0
    12a0:	bl	c14 <log_get_max_level_realm@plt>
    12a4:	cmp	r0, #2
    12a8:	ble	1034 <__printf_chk@plt+0x2f4>
    12ac:	ldr	r2, [pc, #2044]	; 1ab0 <__printf_chk@plt+0xd70>
    12b0:	ldr	r3, [pc, #2044]	; 1ab4 <__printf_chk@plt+0xd74>
    12b4:	add	r2, pc, r2
    12b8:	str	r2, [sp, #4]
    12bc:	add	r3, pc, r3
    12c0:	ldr	r2, [pc, #2032]	; 1ab8 <__printf_chk@plt+0xd78>
    12c4:	add	r3, r3, #24
    12c8:	str	r3, [sp]
    12cc:	mov	r1, r9
    12d0:	mov	r3, #148	; 0x94
    12d4:	add	r2, pc, r2
    12d8:	mov	r0, #3
    12dc:	bl	d04 <log_internal_realm@plt>
    12e0:	mov	r5, r0
    12e4:	b	eb4 <__printf_chk@plt+0x174>
    12e8:	mov	r2, r5
    12ec:	mov	r1, r4
    12f0:	ldr	r0, [sp, #32]
    12f4:	bl	d34 <sd_bus_set_fd@plt>
    12f8:	subs	r5, r0, #0
    12fc:	bge	1320 <__printf_chk@plt+0x5e0>
    1300:	mov	r0, #0
    1304:	bl	c14 <log_get_max_level_realm@plt>
    1308:	cmp	r0, #2
    130c:	bgt	13f4 <__printf_chk@plt+0x6b4>
    1310:	rsb	r5, r5, #0
    1314:	uxtb	r5, r5
    1318:	rsb	r5, r5, #0
    131c:	b	eb4 <__printf_chk@plt+0x174>
    1320:	add	r1, sp, #72	; 0x48
    1324:	ldm	sl, {r2, r3}
    1328:	ldm	r1, {r0, r1}
    132c:	stm	sp, {r0, r1}
    1330:	mov	r1, #1
    1334:	ldr	r0, [sp, #32]
    1338:	bl	c08 <sd_bus_set_server@plt>
    133c:	subs	r5, r0, #0
    1340:	bge	1390 <__printf_chk@plt+0x650>
    1344:	mov	r0, #0
    1348:	bl	c14 <log_get_max_level_realm@plt>
    134c:	cmp	r0, #2
    1350:	ble	1310 <__printf_chk@plt+0x5d0>
    1354:	ldr	r2, [pc, #1888]	; 1abc <__printf_chk@plt+0xd7c>
    1358:	ldr	r3, [pc, #1888]	; 1ac0 <__printf_chk@plt+0xd80>
    135c:	add	r2, pc, r2
    1360:	str	r2, [sp, #4]
    1364:	add	r3, pc, r3
    1368:	ldr	r2, [pc, #1876]	; 1ac4 <__printf_chk@plt+0xd84>
    136c:	add	r3, r3, #24
    1370:	mov	r1, r5
    1374:	str	r3, [sp]
    1378:	add	r2, pc, r2
    137c:	mov	r3, #156	; 0x9c
    1380:	mov	r0, #3
    1384:	bl	d04 <log_internal_realm@plt>
    1388:	mov	r5, r0
    138c:	b	eb4 <__printf_chk@plt+0x174>
    1390:	mov	r1, r6
    1394:	ldr	r0, [sp, #32]
    1398:	bl	c50 <sd_bus_negotiate_fds@plt>
    139c:	subs	r5, r0, #0
    13a0:	bge	1430 <__printf_chk@plt+0x6f0>
    13a4:	mov	r0, #0
    13a8:	bl	c14 <log_get_max_level_realm@plt>
    13ac:	cmp	r0, #2
    13b0:	ble	1310 <__printf_chk@plt+0x5d0>
    13b4:	ldr	r2, [pc, #1804]	; 1ac8 <__printf_chk@plt+0xd88>
    13b8:	ldr	r3, [pc, #1804]	; 1acc <__printf_chk@plt+0xd8c>
    13bc:	add	r2, pc, r2
    13c0:	str	r2, [sp, #4]
    13c4:	add	r3, pc, r3
    13c8:	ldr	r2, [pc, #1792]	; 1ad0 <__printf_chk@plt+0xd90>
    13cc:	add	r3, r3, #24
    13d0:	mov	r1, r5
    13d4:	str	r3, [sp]
    13d8:	add	r2, pc, r2
    13dc:	mov	r3, #160	; 0xa0
    13e0:	mov	r0, #3
    13e4:	bl	d04 <log_internal_realm@plt>
    13e8:	mov	r5, r0
    13ec:	b	eb4 <__printf_chk@plt+0x174>
    13f0:	bl	c5c <__stack_chk_fail@plt>
    13f4:	ldr	r2, [pc, #1752]	; 1ad4 <__printf_chk@plt+0xd94>
    13f8:	ldr	r3, [pc, #1752]	; 1ad8 <__printf_chk@plt+0xd98>
    13fc:	add	r2, pc, r2
    1400:	str	r2, [sp, #4]
    1404:	add	r3, pc, r3
    1408:	ldr	r2, [pc, #1740]	; 1adc <__printf_chk@plt+0xd9c>
    140c:	add	r3, r3, #24
    1410:	mov	r1, r5
    1414:	str	r3, [sp]
    1418:	add	r2, pc, r2
    141c:	mov	r3, #152	; 0x98
    1420:	mov	r0, #3
    1424:	bl	d04 <log_internal_realm@plt>
    1428:	mov	r5, r0
    142c:	b	eb4 <__printf_chk@plt+0x174>
    1430:	mov	r1, #1
    1434:	ldr	r0, [sp, #32]
    1438:	bl	bc0 <sd_bus_set_anonymous@plt>
    143c:	subs	r5, r0, #0
    1440:	bge	1490 <__printf_chk@plt+0x750>
    1444:	mov	r0, #0
    1448:	bl	c14 <log_get_max_level_realm@plt>
    144c:	cmp	r0, #2
    1450:	ble	1310 <__printf_chk@plt+0x5d0>
    1454:	ldr	r2, [pc, #1668]	; 1ae0 <__printf_chk@plt+0xda0>
    1458:	ldr	r3, [pc, #1668]	; 1ae4 <__printf_chk@plt+0xda4>
    145c:	add	r2, pc, r2
    1460:	str	r2, [sp, #4]
    1464:	add	r3, pc, r3
    1468:	ldr	r2, [pc, #1656]	; 1ae8 <__printf_chk@plt+0xda8>
    146c:	add	r3, r3, #24
    1470:	mov	r1, r5
    1474:	str	r3, [sp]
    1478:	add	r2, pc, r2
    147c:	mov	r3, #164	; 0xa4
    1480:	mov	r0, #3
    1484:	bl	d04 <log_internal_realm@plt>
    1488:	mov	r5, r0
    148c:	b	eb4 <__printf_chk@plt+0x174>
    1490:	ldr	r0, [sp, #32]
    1494:	bl	b84 <sd_bus_start@plt>
    1498:	subs	r5, r0, #0
    149c:	blt	19bc <__printf_chk@plt+0xc7c>
    14a0:	add	sl, sp, #36	; 0x24
    14a4:	mov	r9, #0
    14a8:	mov	r1, sl
    14ac:	ldr	r0, [sp, #28]
    14b0:	str	r9, [sp, #36]	; 0x24
    14b4:	bl	c98 <sd_bus_process@plt>
    14b8:	cmp	r0, #0
    14bc:	blt	196c <__printf_chk@plt+0xc2c>
    14c0:	ldr	r1, [sp, #36]	; 0x24
    14c4:	cmp	r1, #0
    14c8:	beq	14f8 <__printf_chk@plt+0x7b8>
    14cc:	mov	r2, #0
    14d0:	ldr	r0, [sp, #32]
    14d4:	bl	c38 <sd_bus_send@plt>
    14d8:	cmp	r0, #0
    14dc:	blt	191c <__printf_chk@plt+0xbdc>
    14e0:	beq	1500 <__printf_chk@plt+0x7c0>
    14e4:	ldr	r0, [sp, #36]	; 0x24
    14e8:	cmp	r0, #0
    14ec:	beq	14a8 <__printf_chk@plt+0x768>
    14f0:	bl	c74 <sd_bus_message_unref@plt>
    14f4:	b	14a8 <__printf_chk@plt+0x768>
    14f8:	cmp	r0, #0
    14fc:	bne	14a8 <__printf_chk@plt+0x768>
    1500:	mov	r1, sl
    1504:	ldr	r0, [sp, #32]
    1508:	bl	c98 <sd_bus_process@plt>
    150c:	subs	r5, r0, #0
    1510:	blt	1910 <__printf_chk@plt+0xbd0>
    1514:	ldr	r1, [sp, #36]	; 0x24
    1518:	ldr	r0, [sp, #28]
    151c:	cmp	r1, #0
    1520:	beq	1904 <__printf_chk@plt+0xbc4>
    1524:	mov	r2, #0
    1528:	bl	c38 <sd_bus_send@plt>
    152c:	cmp	r0, #0
    1530:	blt	18b4 <__printf_chk@plt+0xb74>
    1534:	bne	14e4 <__printf_chk@plt+0x7a4>
    1538:	ldr	r0, [sp, #28]
    153c:	bl	c8c <sd_bus_get_fd@plt>
    1540:	subs	r6, r0, #0
    1544:	blt	1820 <__printf_chk@plt+0xae0>
    1548:	ldr	r0, [sp, #28]
    154c:	bl	cc8 <sd_bus_get_events@plt>
    1550:	subs	r5, r0, #0
    1554:	blt	1800 <__printf_chk@plt+0xac0>
    1558:	add	r1, sp, #40	; 0x28
    155c:	ldr	r0, [sp, #28]
    1560:	bl	b9c <sd_bus_get_timeout@plt>
    1564:	cmp	r0, #0
    1568:	blt	16dc <__printf_chk@plt+0x99c>
    156c:	ldr	r0, [sp, #32]
    1570:	bl	cc8 <sd_bus_get_events@plt>
    1574:	subs	r4, r0, #0
    1578:	blt	16bc <__printf_chk@plt+0x97c>
    157c:	add	r1, sp, #48	; 0x30
    1580:	ldr	r0, [sp, #32]
    1584:	bl	b9c <sd_bus_get_timeout@plt>
    1588:	cmp	r0, #0
    158c:	blt	1768 <__printf_chk@plt+0xa28>
    1590:	ldrd	r2, [sp, #48]	; 0x30
    1594:	ldrd	r0, [sp, #40]	; 0x28
    1598:	strd	r2, [sp, #16]
    159c:	mvn	r3, #0
    15a0:	mvn	r2, #0
    15a4:	cmp	r1, r3
    15a8:	cmpeq	r0, r2
    15ac:	beq	169c <__printf_chk@plt+0x95c>
    15b0:	ldrd	r2, [sp, #16]
    15b4:	cmp	r1, r3
    15b8:	mov	ip, r2
    15bc:	cmpeq	r0, r2
    15c0:	and	ip, ip, r3
    15c4:	movhi	lr, #1
    15c8:	movls	lr, #0
    15cc:	adds	ip, ip, #1
    15d0:	movne	ip, #1
    15d4:	tst	lr, ip
    15d8:	bne	169c <__printf_chk@plt+0x95c>
    15dc:	strd	r0, [sp, #16]
    15e0:	mov	r0, #1
    15e4:	bl	ca4 <now@plt>
    15e8:	ldrd	r2, [sp, #16]
    15ec:	cmp	r1, r3
    15f0:	cmpeq	r0, r2
    15f4:	movcs	r2, #0
    15f8:	movcs	r3, #0
    15fc:	bcs	1608 <__printf_chk@plt+0x8c8>
    1600:	subs	r2, r2, r0
    1604:	sbc	r3, r3, r1
    1608:	add	r0, sp, #56	; 0x38
    160c:	bl	bfc <timespec_store@plt>
    1610:	mov	r2, r0
    1614:	sxth	r4, r4
    1618:	and	r1, r4, #1
    161c:	mov	ip, #1
    1620:	str	r9, [sp, #94]	; 0x5e
    1624:	and	r4, r4, #4
    1628:	strh	r1, [sp, #96]	; 0x60
    162c:	mov	r3, #0
    1630:	mov	r1, #3
    1634:	add	r0, sp, #84	; 0x54
    1638:	str	r9, [sp, #98]	; 0x62
    163c:	str	r9, [sp, #90]	; 0x5a
    1640:	str	r6, [sp, #84]	; 0x54
    1644:	strh	r5, [sp, #88]	; 0x58
    1648:	strh	r4, [sp, #104]	; 0x68
    164c:	strh	r9, [sp, #106]	; 0x6a
    1650:	str	ip, [sp, #100]	; 0x64
    1654:	bl	b6c <ppoll@plt>
    1658:	cmp	r0, #0
    165c:	bge	14e4 <__printf_chk@plt+0x7a4>
    1660:	bl	cd4 <__errno_location@plt>
    1664:	ldr	r5, [r0]
    1668:	mov	r0, #0
    166c:	bl	c14 <log_get_max_level_realm@plt>
    1670:	cmp	r0, #2
    1674:	bgt	17c4 <__printf_chk@plt+0xa84>
    1678:	cmp	r5, #0
    167c:	rsblt	r5, r5, #0
    1680:	uxtb	r5, r5
    1684:	rsb	r5, r5, #0
    1688:	ldr	r0, [sp, #36]	; 0x24
    168c:	cmp	r0, #0
    1690:	beq	eb4 <__printf_chk@plt+0x174>
    1694:	bl	c74 <sd_bus_message_unref@plt>
    1698:	b	eb4 <__printf_chk@plt+0x174>
    169c:	ldrd	r0, [sp, #16]
    16a0:	mvn	r3, #0
    16a4:	mvn	r2, #0
    16a8:	cmp	r1, r3
    16ac:	cmpeq	r0, r2
    16b0:	moveq	r2, #0
    16b4:	beq	1614 <__printf_chk@plt+0x8d4>
    16b8:	b	15e0 <__printf_chk@plt+0x8a0>
    16bc:	mov	r0, #0
    16c0:	bl	c14 <log_get_max_level_realm@plt>
    16c4:	cmp	r0, #2
    16c8:	bgt	172c <__printf_chk@plt+0x9ec>
    16cc:	rsb	r5, r4, #0
    16d0:	uxtb	r5, r5
    16d4:	rsb	r5, r5, #0
    16d8:	b	1688 <__printf_chk@plt+0x948>
    16dc:	mov	r4, r0
    16e0:	mov	r0, #0
    16e4:	bl	c14 <log_get_max_level_realm@plt>
    16e8:	cmp	r0, #2
    16ec:	ble	16cc <__printf_chk@plt+0x98c>
    16f0:	ldr	r2, [pc, #1012]	; 1aec <__printf_chk@plt+0xdac>
    16f4:	ldr	r3, [pc, #1012]	; 1af0 <__printf_chk@plt+0xdb0>
    16f8:	add	r2, pc, r2
    16fc:	str	r2, [sp, #4]
    1700:	add	r3, pc, r3
    1704:	ldr	r2, [pc, #1000]	; 1af4 <__printf_chk@plt+0xdb4>
    1708:	add	r3, r3, #24
    170c:	str	r3, [sp]
    1710:	mov	r1, r4
    1714:	mov	r3, #213	; 0xd5
    1718:	add	r2, pc, r2
    171c:	mov	r0, #3
    1720:	bl	d04 <log_internal_realm@plt>
    1724:	mov	r5, r0
    1728:	b	1688 <__printf_chk@plt+0x948>
    172c:	ldr	r2, [pc, #964]	; 1af8 <__printf_chk@plt+0xdb8>
    1730:	ldr	r3, [pc, #964]	; 1afc <__printf_chk@plt+0xdbc>
    1734:	add	r2, pc, r2
    1738:	str	r2, [sp, #4]
    173c:	add	r3, pc, r3
    1740:	ldr	r2, [pc, #952]	; 1b00 <__printf_chk@plt+0xdc0>
    1744:	add	r3, r3, #24
    1748:	str	r3, [sp]
    174c:	mov	r1, r4
    1750:	mov	r3, #217	; 0xd9
    1754:	add	r2, pc, r2
    1758:	mov	r0, #3
    175c:	bl	d04 <log_internal_realm@plt>
    1760:	mov	r5, r0
    1764:	b	1688 <__printf_chk@plt+0x948>
    1768:	mov	fp, r0
    176c:	mov	r0, #0
    1770:	bl	c14 <log_get_max_level_realm@plt>
    1774:	cmp	r0, #2
    1778:	rsble	r5, fp, #0
    177c:	uxtble	r5, r5
    1780:	rsble	r5, r5, #0
    1784:	ble	1688 <__printf_chk@plt+0x948>
    1788:	ldr	r2, [pc, #884]	; 1b04 <__printf_chk@plt+0xdc4>
    178c:	ldr	r3, [pc, #884]	; 1b08 <__printf_chk@plt+0xdc8>
    1790:	add	r2, pc, r2
    1794:	str	r2, [sp, #4]
    1798:	add	r3, pc, r3
    179c:	ldr	r2, [pc, #872]	; 1b0c <__printf_chk@plt+0xdcc>
    17a0:	add	r3, r3, #24
    17a4:	str	r3, [sp]
    17a8:	mov	r1, fp
    17ac:	mov	r3, #221	; 0xdd
    17b0:	add	r2, pc, r2
    17b4:	mov	r0, #3
    17b8:	bl	d04 <log_internal_realm@plt>
    17bc:	mov	r5, r0
    17c0:	b	1688 <__printf_chk@plt+0x948>
    17c4:	ldr	r2, [pc, #836]	; 1b10 <__printf_chk@plt+0xdd0>
    17c8:	ldr	r3, [pc, #836]	; 1b14 <__printf_chk@plt+0xdd4>
    17cc:	add	r2, pc, r2
    17d0:	str	r2, [sp, #4]
    17d4:	add	r3, pc, r3
    17d8:	ldr	r2, [pc, #824]	; 1b18 <__printf_chk@plt+0xdd8>
    17dc:	add	r3, r3, #24
    17e0:	mov	r1, r5
    17e4:	str	r3, [sp]
    17e8:	add	r2, pc, r2
    17ec:	mov	r3, #250	; 0xfa
    17f0:	mov	r0, #3
    17f4:	bl	d04 <log_internal_realm@plt>
    17f8:	mov	r5, r0
    17fc:	b	1688 <__printf_chk@plt+0x948>
    1800:	mov	r0, #0
    1804:	bl	c14 <log_get_max_level_realm@plt>
    1808:	cmp	r0, #2
    180c:	bgt	1878 <__printf_chk@plt+0xb38>
    1810:	rsb	r5, r5, #0
    1814:	uxtb	r5, r5
    1818:	rsb	r5, r5, #0
    181c:	b	1688 <__printf_chk@plt+0x948>
    1820:	mov	r0, #0
    1824:	bl	c14 <log_get_max_level_realm@plt>
    1828:	cmp	r0, #2
    182c:	rsble	r5, r6, #0
    1830:	uxtble	r5, r5
    1834:	rsble	r5, r5, #0
    1838:	ble	1688 <__printf_chk@plt+0x948>
    183c:	ldr	r2, [pc, #728]	; 1b1c <__printf_chk@plt+0xddc>
    1840:	ldr	r3, [pc, #728]	; 1b20 <__printf_chk@plt+0xde0>
    1844:	add	r2, pc, r2
    1848:	str	r2, [sp, #4]
    184c:	add	r3, pc, r3
    1850:	ldr	r2, [pc, #716]	; 1b24 <__printf_chk@plt+0xde4>
    1854:	add	r3, r3, #24
    1858:	str	r3, [sp]
    185c:	mov	r1, r6
    1860:	mov	r3, #205	; 0xcd
    1864:	add	r2, pc, r2
    1868:	mov	r0, #3
    186c:	bl	d04 <log_internal_realm@plt>
    1870:	mov	r5, r0
    1874:	b	1688 <__printf_chk@plt+0x948>
    1878:	ldr	r2, [pc, #680]	; 1b28 <__printf_chk@plt+0xde8>
    187c:	ldr	r3, [pc, #680]	; 1b2c <__printf_chk@plt+0xdec>
    1880:	add	r2, pc, r2
    1884:	str	r2, [sp, #4]
    1888:	add	r3, pc, r3
    188c:	ldr	r2, [pc, #668]	; 1b30 <__printf_chk@plt+0xdf0>
    1890:	add	r3, r3, #24
    1894:	mov	r1, r5
    1898:	str	r3, [sp]
    189c:	add	r2, pc, r2
    18a0:	mov	r3, #209	; 0xd1
    18a4:	mov	r0, #3
    18a8:	bl	d04 <log_internal_realm@plt>
    18ac:	mov	r5, r0
    18b0:	b	1688 <__printf_chk@plt+0x948>
    18b4:	mov	r5, r0
    18b8:	mov	r0, #0
    18bc:	bl	c14 <log_get_max_level_realm@plt>
    18c0:	cmp	r0, #2
    18c4:	ble	1810 <__printf_chk@plt+0xad0>
    18c8:	ldr	r2, [pc, #612]	; 1b34 <__printf_chk@plt+0xdf4>
    18cc:	ldr	r3, [pc, #612]	; 1b38 <__printf_chk@plt+0xdf8>
    18d0:	add	r2, pc, r2
    18d4:	str	r2, [sp, #4]
    18d8:	add	r3, pc, r3
    18dc:	ldr	r2, [pc, #600]	; 1b3c <__printf_chk@plt+0xdfc>
    18e0:	add	r3, r3, #24
    18e4:	mov	r1, r5
    18e8:	str	r3, [sp]
    18ec:	add	r2, pc, r2
    18f0:	mov	r3, #197	; 0xc5
    18f4:	mov	r0, #3
    18f8:	bl	d04 <log_internal_realm@plt>
    18fc:	mov	r5, r0
    1900:	b	1688 <__printf_chk@plt+0x948>
    1904:	cmp	r5, #0
    1908:	beq	1538 <__printf_chk@plt+0x7f8>
    190c:	b	14a8 <__printf_chk@plt+0x768>
    1910:	cmn	r5, #104	; 0x68
    1914:	moveq	r5, #0
    1918:	b	1688 <__printf_chk@plt+0x948>
    191c:	mov	r5, r0
    1920:	mov	r0, #0
    1924:	bl	c14 <log_get_max_level_realm@plt>
    1928:	cmp	r0, #2
    192c:	ble	1810 <__printf_chk@plt+0xad0>
    1930:	ldr	r2, [pc, #520]	; 1b40 <__printf_chk@plt+0xe00>
    1934:	ldr	r3, [pc, #520]	; 1b44 <__printf_chk@plt+0xe04>
    1938:	add	r2, pc, r2
    193c:	str	r2, [sp, #4]
    1940:	add	r3, pc, r3
    1944:	ldr	r2, [pc, #508]	; 1b48 <__printf_chk@plt+0xe08>
    1948:	add	r3, r3, #24
    194c:	mov	r1, r5
    1950:	str	r3, [sp]
    1954:	add	r2, pc, r2
    1958:	mov	r3, #183	; 0xb7
    195c:	mov	r0, #3
    1960:	bl	d04 <log_internal_realm@plt>
    1964:	mov	r5, r0
    1968:	b	1688 <__printf_chk@plt+0x948>
    196c:	mov	r5, r0
    1970:	mov	r0, #0
    1974:	bl	c14 <log_get_max_level_realm@plt>
    1978:	cmp	r0, #2
    197c:	ble	1810 <__printf_chk@plt+0xad0>
    1980:	ldr	r2, [pc, #452]	; 1b4c <__printf_chk@plt+0xe0c>
    1984:	ldr	r3, [pc, #452]	; 1b50 <__printf_chk@plt+0xe10>
    1988:	add	r2, pc, r2
    198c:	str	r2, [sp, #4]
    1990:	add	r3, pc, r3
    1994:	ldr	r2, [pc, #440]	; 1b54 <__printf_chk@plt+0xe14>
    1998:	add	r3, r3, #24
    199c:	mov	r1, r5
    19a0:	str	r3, [sp]
    19a4:	add	r2, pc, r2
    19a8:	mov	r3, #178	; 0xb2
    19ac:	mov	r0, #3
    19b0:	bl	d04 <log_internal_realm@plt>
    19b4:	mov	r5, r0
    19b8:	b	1688 <__printf_chk@plt+0x948>
    19bc:	mov	r0, #0
    19c0:	bl	c14 <log_get_max_level_realm@plt>
    19c4:	cmp	r0, #2
    19c8:	ble	1310 <__printf_chk@plt+0x5d0>
    19cc:	ldr	r2, [pc, #388]	; 1b58 <__printf_chk@plt+0xe18>
    19d0:	ldr	r3, [pc, #388]	; 1b5c <__printf_chk@plt+0xe1c>
    19d4:	add	r2, pc, r2
    19d8:	str	r2, [sp, #4]
    19dc:	add	r3, pc, r3
    19e0:	ldr	r2, [pc, #376]	; 1b60 <__printf_chk@plt+0xe20>
    19e4:	add	r3, r3, #24
    19e8:	mov	r1, r5
    19ec:	str	r3, [sp]
    19f0:	add	r2, pc, r2
    19f4:	mov	r3, #168	; 0xa8
    19f8:	mov	r0, #3
    19fc:	bl	d04 <log_internal_realm@plt>
    1a00:	mov	r5, r0
    1a04:	b	eb4 <__printf_chk@plt+0x174>
    1a08:	andeq	r2, r1, r0, asr #3
    1a0c:	andeq	r0, r0, ip, lsr #1
    1a10:	andeq	r2, r1, ip
    1a14:	andeq	r1, r0, r0, asr #2
    1a18:	andeq	r2, r1, r4, asr #4
    1a1c:	strheq	r0, [r0], -r4
    1a20:	strdeq	r2, [r1], -r8
    1a24:	andeq	r2, r1, r8, ror #3
    1a28:	andeq	r1, r0, r0, lsl #1
    1a2c:	andeq	r0, r0, r0, asr #29
    1a30:	andeq	r0, r0, ip, asr #29
    1a34:	strheq	r0, [r0], -r8
    1a38:	strheq	r0, [r0], -ip
    1a3c:	andeq	r0, r0, r8, ror #27
    1a40:	andeq	r0, r0, ip, ror #30
    1a44:	andeq	r0, r0, r0, ror #27
    1a48:	andeq	r2, r1, ip
    1a4c:	andeq	r2, r1, r0
    1a50:	andeq	r0, r0, ip, asr #1
    1a54:	andeq	r0, r0, r0, lsr sp
    1a58:	andeq	r0, r0, r4, asr sp
    1a5c:			; <UNDEFINED> instruction: 0x00000cb0
    1a60:			; <UNDEFINED> instruction: 0x00000cbc
    1a64:	ldrdeq	r0, [r0], -ip
    1a68:	andeq	r0, r0, r8, lsl #25
    1a6c:	muleq	r0, r4, ip
    1a70:	andeq	r0, r0, r0, asr #25
    1a74:	andeq	r0, r0, r8, lsr lr
    1a78:	andeq	r0, r0, ip, asr #24
    1a7c:	andeq	r0, r0, r0, asr ip
    1a80:	andeq	r0, r0, ip, lsl lr
    1a84:	andeq	r0, r0, ip, ror #23
    1a88:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a8c:	andeq	r0, r0, r4, ror #27
    1a90:	muleq	r0, r0, fp
    1a94:	muleq	r0, r4, fp
    1a98:	andeq	r0, r0, ip, asr sp
    1a9c:	andeq	r0, r0, r4, asr fp
    1aa0:	andeq	r0, r0, r8, asr fp
    1aa4:	andeq	r0, r0, r8, asr sp
    1aa8:	andeq	r0, r0, r4, ror #21
    1aac:	andeq	r0, r0, r8, ror #21
    1ab0:	andeq	r0, r0, r4, ror ip
    1ab4:	andeq	r0, r0, r8, lsl #21
    1ab8:	andeq	r0, r0, ip, lsl #21
    1abc:	andeq	r0, r0, r8, lsl #25
    1ac0:	andeq	r0, r0, r0, ror #19
    1ac4:	andeq	r0, r0, r8, ror #19
    1ac8:			; <UNDEFINED> instruction: 0x00000bb0
    1acc:	andeq	r0, r0, r0, lsl #19
    1ad0:	andeq	r0, r0, r8, lsl #19
    1ad4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ad8:	andeq	r0, r0, r0, asr #18
    1adc:	andeq	r0, r0, r8, asr #18
    1ae0:	andeq	r0, r0, r8, lsr #23
    1ae4:	andeq	r0, r0, r0, ror #17
    1ae8:	andeq	r0, r0, r8, ror #17
    1aec:	andeq	r0, r0, r8, lsr #19
    1af0:	andeq	r0, r0, r4, asr #12
    1af4:	andeq	r0, r0, r8, asr #12
    1af8:	andeq	r0, r0, ip, asr #18
    1afc:	andeq	r0, r0, r8, lsl #12
    1b00:	andeq	r0, r0, ip, lsl #12
    1b04:	andeq	r0, r0, r0, lsl r9
    1b08:	andeq	r0, r0, ip, lsr #11
    1b0c:			; <UNDEFINED> instruction: 0x000005b0
    1b10:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1b14:	andeq	r0, r0, r0, ror r5
    1b18:	andeq	r0, r0, r8, ror r5
    1b1c:	andeq	r0, r0, r4, lsr #16
    1b20:	strdeq	r0, [r0], -r8
    1b24:	strdeq	r0, [r0], -ip
    1b28:	andeq	r0, r0, r0, lsl #16
    1b2c:			; <UNDEFINED> instruction: 0x000004bc
    1b30:	andeq	r0, r0, r4, asr #9
    1b34:	andeq	r0, r0, ip, ror r7
    1b38:	andeq	r0, r0, ip, ror #8
    1b3c:	andeq	r0, r0, r4, ror r4
    1b40:	andeq	r0, r0, r4, lsl r7
    1b44:	andeq	r0, r0, r4, lsl #8
    1b48:	andeq	r0, r0, ip, lsl #8
    1b4c:	andeq	r0, r0, r8, lsr #13
    1b50:			; <UNDEFINED> instruction: 0x000003b4
    1b54:			; <UNDEFINED> instruction: 0x000003bc
    1b58:			; <UNDEFINED> instruction: 0x000005bc
    1b5c:	andeq	r0, r0, r8, ror #6
    1b60:	andeq	r0, r0, r0, ror r3
    1b64:	mov	fp, #0
    1b68:	mov	lr, #0
    1b6c:	pop	{r1}		; (ldr r1, [sp], #4)
    1b70:	mov	r2, sp
    1b74:	push	{r2}		; (str r2, [sp, #-4]!)
    1b78:	push	{r0}		; (str r0, [sp, #-4]!)
    1b7c:	ldr	sl, [pc, #40]	; 1bac <__printf_chk@plt+0xe6c>
    1b80:	add	r3, pc, #36	; 0x24
    1b84:	add	sl, sl, r3
    1b88:	ldr	ip, [pc, #32]	; 1bb0 <__printf_chk@plt+0xe70>
    1b8c:	ldr	ip, [sl, ip]
    1b90:	push	{ip}		; (str ip, [sp, #-4]!)
    1b94:	ldr	r3, [pc, #24]	; 1bb4 <__printf_chk@plt+0xe74>
    1b98:	ldr	r3, [sl, r3]
    1b9c:	ldr	r0, [pc, #20]	; 1bb8 <__printf_chk@plt+0xe78>
    1ba0:	ldr	r0, [sl, r0]
    1ba4:	bl	d10 <__libc_start_main@plt>
    1ba8:	bl	c2c <abort@plt>
    1bac:	andeq	r1, r1, r8, ror r3
    1bb0:	andeq	r0, r0, r8, asr #1
    1bb4:	andeq	r0, r0, r0, asr #1
    1bb8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1bbc:	ldr	r3, [pc, #20]	; 1bd8 <__printf_chk@plt+0xe98>
    1bc0:	ldr	r2, [pc, #20]	; 1bdc <__printf_chk@plt+0xe9c>
    1bc4:	add	r3, pc, r3
    1bc8:	ldr	r2, [r3, r2]
    1bcc:	cmp	r2, #0
    1bd0:	bxeq	lr
    1bd4:	b	d1c <__gmon_start__@plt>
    1bd8:	andeq	r1, r1, r8, asr r3
    1bdc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1be0:	ldr	r0, [pc, #44]	; 1c14 <__printf_chk@plt+0xed4>
    1be4:	ldr	r3, [pc, #44]	; 1c18 <__printf_chk@plt+0xed8>
    1be8:	add	r0, pc, r0
    1bec:	add	r3, pc, r3
    1bf0:	cmp	r3, r0
    1bf4:	ldr	r3, [pc, #32]	; 1c1c <__printf_chk@plt+0xedc>
    1bf8:	add	r3, pc, r3
    1bfc:	bxeq	lr
    1c00:	ldr	r2, [pc, #24]	; 1c20 <__printf_chk@plt+0xee0>
    1c04:	ldr	r3, [r3, r2]
    1c08:	cmp	r3, #0
    1c0c:	bxeq	lr
    1c10:	bx	r3
    1c14:	andeq	r1, r1, r8, lsl r4
    1c18:	andeq	r1, r1, r4, lsl r4
    1c1c:	andeq	r1, r1, r4, lsr #6
    1c20:	andeq	r0, r0, r4, asr #1
    1c24:	ldr	r0, [pc, #56]	; 1c64 <__printf_chk@plt+0xf24>
    1c28:	ldr	r3, [pc, #56]	; 1c68 <__printf_chk@plt+0xf28>
    1c2c:	add	r0, pc, r0
    1c30:	add	r3, pc, r3
    1c34:	sub	r1, r3, r0
    1c38:	ldr	r3, [pc, #44]	; 1c6c <__printf_chk@plt+0xf2c>
    1c3c:	asr	r1, r1, #2
    1c40:	add	r3, pc, r3
    1c44:	add	r1, r1, r1, lsr #31
    1c48:	asrs	r1, r1, #1
    1c4c:	bxeq	lr
    1c50:	ldr	r2, [pc, #24]	; 1c70 <__printf_chk@plt+0xf30>
    1c54:	ldr	r3, [r3, r2]
    1c58:	cmp	r3, #0
    1c5c:	bxeq	lr
    1c60:	bx	r3
    1c64:	ldrdeq	r1, [r1], -r4
    1c68:	ldrdeq	r1, [r1], -r0
    1c6c:	ldrdeq	r1, [r1], -ip
    1c70:	ldrdeq	r0, [r0], -r4
    1c74:	ldr	r3, [pc, #76]	; 1cc8 <__printf_chk@plt+0xf88>
    1c78:	ldr	r2, [pc, #76]	; 1ccc <__printf_chk@plt+0xf8c>
    1c7c:	add	r3, pc, r3
    1c80:	add	r2, pc, r2
    1c84:	ldrb	r3, [r3]
    1c88:	cmp	r3, #0
    1c8c:	bxne	lr
    1c90:	ldr	r3, [pc, #56]	; 1cd0 <__printf_chk@plt+0xf90>
    1c94:	push	{r4, lr}
    1c98:	ldr	r3, [r2, r3]
    1c9c:	cmp	r3, #0
    1ca0:	beq	1cb0 <__printf_chk@plt+0xf70>
    1ca4:	ldr	r3, [pc, #40]	; 1cd4 <__printf_chk@plt+0xf94>
    1ca8:	ldr	r0, [pc, r3]
    1cac:	bl	d28 <__cxa_finalize@plt>
    1cb0:	bl	1be0 <__printf_chk@plt+0xea0>
    1cb4:	ldr	r3, [pc, #28]	; 1cd8 <__printf_chk@plt+0xf98>
    1cb8:	mov	r2, #1
    1cbc:	add	r3, pc, r3
    1cc0:	strb	r2, [r3]
    1cc4:	pop	{r4, pc}
    1cc8:	andeq	r1, r1, r4, lsl #7
    1ccc:	muleq	r1, ip, r2
    1cd0:	ldrdeq	r0, [r0], -r8
    1cd4:	andeq	r1, r1, r0, asr r3
    1cd8:	andeq	r1, r1, r4, asr #6
    1cdc:	b	1c24 <__printf_chk@plt+0xee4>
    1ce0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1ce4:	mov	r7, r0
    1ce8:	ldr	r6, [pc, #72]	; 1d38 <__printf_chk@plt+0xff8>
    1cec:	ldr	r5, [pc, #72]	; 1d3c <__printf_chk@plt+0xffc>
    1cf0:	add	r6, pc, r6
    1cf4:	add	r5, pc, r5
    1cf8:	sub	r6, r6, r5
    1cfc:	mov	r8, r1
    1d00:	mov	r9, r2
    1d04:	bl	b4c <ppoll@plt-0x20>
    1d08:	asrs	r6, r6, #2
    1d0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    1d10:	mov	r4, #0
    1d14:	add	r4, r4, #1
    1d18:	ldr	r3, [r5], #4
    1d1c:	mov	r2, r9
    1d20:	mov	r1, r8
    1d24:	mov	r0, r7
    1d28:	blx	r3
    1d2c:	cmp	r6, r4
    1d30:	bne	1d14 <__printf_chk@plt+0xfd4>
    1d34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1d38:	andeq	r1, r1, r8, asr #1
    1d3c:	andeq	r1, r1, r0, asr #1
    1d40:	bx	lr

Disassembly of section .fini:

00001d44 <.fini>:
    1d44:	push	{r3, lr}
    1d48:	pop	{r3, pc}
