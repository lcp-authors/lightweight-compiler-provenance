
raspbian-preinstalled/xinit:     file format elf32-littlearm


Disassembly of section .init:

00010cb8 <_init@@Base>:
   10cb8:	push	{r3, lr}
   10cbc:	bl	11a38 <__snprintf_chk@plt+0xb14>
   10cc0:	pop	{r3, pc}

Disassembly of section .plt:

00010cc4 <XSetIOErrorHandler@plt-0x14>:
   10cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc8:	ldr	lr, [pc, #4]	; 10cd4 <_init@@Base+0x1c>
   10ccc:	add	lr, pc, lr
   10cd0:	ldr	pc, [lr, #8]!
   10cd4:	andeq	r2, r1, ip, lsr #6

00010cd8 <XSetIOErrorHandler@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #812]!	; 0x32c

00010ce4 <strcmp@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #804]!	; 0x324

00010cf0 <fflush@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #796]!	; 0x31c

00010cfc <getuid@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #788]!	; 0x314

00010d08 <sigprocmask@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #780]!	; 0x30c

00010d14 <_setjmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #772]!	; 0x304

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #764]!	; 0x2fc

00010d2c <_exit@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #756]!	; 0x2f4

00010d38 <execvp@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #748]!	; 0x2ec

00010d44 <signal@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d50 <sleep@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #732]!	; 0x2dc

00010d5c <__stack_chk_fail@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #724]!	; 0x2d4

00010d68 <alarm@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #716]!	; 0x2cc

00010d74 <XFree@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d80 <killpg@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #700]!	; 0x2bc

00010d8c <wait@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #692]!	; 0x2b4

00010d98 <sigaction@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #684]!	; 0x2ac

00010da4 <fwrite@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #676]!	; 0x2a4

00010db0 <waitpid@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #668]!	; 0x29c

00010dbc <getenv@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #660]!	; 0x294

00010dc8 <setpriority@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #652]!	; 0x28c

00010dd4 <malloc@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #644]!	; 0x284

00010de0 <sigaddset@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #636]!	; 0x27c

00010dec <__libc_start_main@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #628]!	; 0x274

00010df8 <strerror@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #620]!	; 0x26c

00010e04 <XOpenDisplay@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #612]!	; 0x264

00010e10 <__vfprintf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #604]!	; 0x25c

00010e1c <__gmon_start__@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #596]!	; 0x254

00010e28 <__ctype_b_loc@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #588]!	; 0x24c

00010e34 <getpid@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #580]!	; 0x244

00010e40 <exit@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #572]!	; 0x23c

00010e4c <strlen@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #73728	; 0x12000
   10e54:	ldr	pc, [ip, #564]!	; 0x234

00010e58 <setenv@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #73728	; 0x12000
   10e60:	ldr	pc, [ip, #556]!	; 0x22c

00010e64 <__errno_location@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #73728	; 0x12000
   10e6c:	ldr	pc, [ip, #548]!	; 0x224

00010e70 <XInternAtom@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #73728	; 0x12000
   10e78:	ldr	pc, [ip, #540]!	; 0x21c

00010e7c <snprintf@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #73728	; 0x12000
   10e84:	ldr	pc, [ip, #532]!	; 0x214

00010e88 <memset@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #524]!	; 0x20c

00010e94 <sigsuspend@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #516]!	; 0x204

00010ea0 <__fprintf_chk@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #508]!	; 0x1fc

00010eac <access@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb8 <__longjmp_chk@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec4 <sigemptyset@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #484]!	; 0x1e4

00010ed0 <fork@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #476]!	; 0x1dc

00010edc <fputc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee8 <setuid@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef4 <setpgid@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #452]!	; 0x1c4

00010f00 <XGetWindowProperty@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #444]!	; 0x1bc

00010f0c <XCloseDisplay@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #436]!	; 0x1b4

00010f18 <abort@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #428]!	; 0x1ac

00010f24 <__snprintf_chk@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010f30 <.text>:
   10f30:	push	{r0, r1, r2, r3}
   10f34:	ldr	r2, [pc, #40]	; 10f64 <__snprintf_chk@plt+0x40>
   10f38:	push	{lr}		; (str lr, [sp, #-4]!)
   10f3c:	sub	sp, sp, #12
   10f40:	add	r3, sp, #20
   10f44:	ldr	r2, [r2]
   10f48:	ldr	r0, [sp, #16]
   10f4c:	mov	r1, r3
   10f50:	str	r2, [sp, #4]
   10f54:	str	r3, [sp]
   10f58:	bl	11be4 <__snprintf_chk@plt+0xcc0>
   10f5c:	mov	r0, #1
   10f60:	bl	10e40 <exit@plt>
   10f64:	andeq	r2, r2, r0, lsl #30
   10f68:	ldr	r3, [pc, #2496]	; 11930 <__snprintf_chk@plt+0xa0c>
   10f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f70:	sub	sp, sp, #628	; 0x274
   10f74:	ldr	r8, [pc, #2488]	; 11934 <__snprintf_chk@plt+0xa10>
   10f78:	ldr	r2, [r3]
   10f7c:	ldr	r3, [pc, #2484]	; 11938 <__snprintf_chk@plt+0xa14>
   10f80:	ldr	ip, [r1]
   10f84:	ldr	r5, [r8, #12]
   10f88:	str	ip, [r3, #4]
   10f8c:	ldr	r3, [r8, #8]
   10f90:	subs	fp, r0, #1
   10f94:	str	r2, [sp, #620]	; 0x26c
   10f98:	mov	ip, r5
   10f9c:	str	r3, [sp, #40]	; 0x28
   10fa0:	add	sl, r1, #4
   10fa4:	beq	10fd4 <__snprintf_chk@plt+0xb0>
   10fa8:	ldr	r1, [r1, #4]
   10fac:	ldrb	r1, [r1]
   10fb0:	sub	r1, r1, #46	; 0x2e
   10fb4:	cmp	r1, #1
   10fb8:	bls	114b8 <__snprintf_chk@plt+0x594>
   10fbc:	ldr	r1, [r8, #16]
   10fc0:	cmp	r1, #0
   10fc4:	bne	10fe0 <__snprintf_chk@plt+0xbc>
   10fc8:	str	r1, [sp, #44]	; 0x2c
   10fcc:	str	r1, [sp, #36]	; 0x24
   10fd0:	b	11020 <__snprintf_chk@plt+0xfc>
   10fd4:	ldr	r1, [r8, #16]
   10fd8:	cmp	r1, #0
   10fdc:	beq	11928 <__snprintf_chk@plt+0xa04>
   10fe0:	ldr	r0, [pc, #2388]	; 1193c <__snprintf_chk@plt+0xa18>
   10fe4:	str	r1, [r5], #4
   10fe8:	ldr	r1, [r0, #4]!
   10fec:	cmp	r1, #0
   10ff0:	bne	10fe4 <__snprintf_chk@plt+0xc0>
   10ff4:	sub	ip, r5, ip
   10ff8:	cmp	fp, #0
   10ffc:	asr	r3, ip, #2
   11000:	str	r3, [sp, #44]	; 0x2c
   11004:	strne	r1, [sp, #36]	; 0x24
   11008:	bne	11020 <__snprintf_chk@plt+0xfc>
   1100c:	b	110c0 <__snprintf_chk@plt+0x19c>
   11010:	subs	fp, r6, #0
   11014:	str	r7, [r5], #4
   11018:	mov	sl, r4
   1101c:	beq	110bc <__snprintf_chk@plt+0x198>
   11020:	mov	r4, sl
   11024:	ldr	r1, [pc, #2324]	; 11940 <__snprintf_chk@plt+0xa1c>
   11028:	ldr	r7, [r4], #4
   1102c:	sub	r6, fp, #1
   11030:	mov	r0, r7
   11034:	bl	10ce4 <strcmp@plt>
   11038:	cmp	r0, #0
   1103c:	bne	11010 <__snprintf_chk@plt+0xec>
   11040:	ldr	r3, [sp, #40]	; 0x28
   11044:	cmp	r6, #0
   11048:	mov	r9, r0
   1104c:	str	r0, [r5]
   11050:	add	r7, r3, #4
   11054:	beq	1106c <__snprintf_chk@plt+0x148>
   11058:	ldr	r0, [sl, #4]
   1105c:	ldrb	r1, [r0]
   11060:	sub	r1, r1, #46	; 0x2e
   11064:	cmp	r1, #1
   11068:	bls	114d4 <__snprintf_chk@plt+0x5b0>
   1106c:	ldr	r2, [sp, #40]	; 0x28
   11070:	ldr	r3, [pc, #2252]	; 11944 <__snprintf_chk@plt+0xa20>
   11074:	str	r3, [r2]
   11078:	cmp	r6, #0
   1107c:	ble	110e8 <__snprintf_chk@plt+0x1c4>
   11080:	ldr	r5, [r4]
   11084:	ldrb	r3, [r5]
   11088:	cmp	r3, #58	; 0x3a
   1108c:	bne	110e8 <__snprintf_chk@plt+0x1c4>
   11090:	bl	10e28 <__ctype_b_loc@plt>
   11094:	ldrb	r3, [r5, #1]
   11098:	lsl	r3, r3, #1
   1109c:	ldr	r2, [r0]
   110a0:	ldrh	r3, [r2, r3]
   110a4:	tst	r3, #2048	; 0x800
   110a8:	beq	110e8 <__snprintf_chk@plt+0x1c4>
   110ac:	ldr	r3, [pc, #2180]	; 11938 <__snprintf_chk@plt+0xa14>
   110b0:	str	r5, [r3, #412]	; 0x19c
   110b4:	mov	r5, r7
   110b8:	b	110fc <__snprintf_chk@plt+0x1d8>
   110bc:	ldr	fp, [sp, #36]	; 0x24
   110c0:	ldr	r3, [sp, #40]	; 0x28
   110c4:	mov	r1, #0
   110c8:	ldr	r0, [pc, #2164]	; 11944 <__snprintf_chk@plt+0xa20>
   110cc:	mov	r9, r1
   110d0:	mov	r4, sl
   110d4:	mov	r6, r1
   110d8:	add	r7, r3, #4
   110dc:	str	r1, [r5]
   110e0:	str	fp, [sp, #36]	; 0x24
   110e4:	str	r0, [r3]
   110e8:	ldr	r2, [pc, #2120]	; 11938 <__snprintf_chk@plt+0xa14>
   110ec:	ldr	r3, [pc, #2132]	; 11948 <__snprintf_chk@plt+0xa24>
   110f0:	add	r5, r7, #4
   110f4:	str	r3, [r7]
   110f8:	str	r3, [r2, #412]	; 0x19c
   110fc:	subs	r3, r6, #1
   11100:	ldr	r7, [r8, #8]
   11104:	movmi	r6, r5
   11108:	bmi	11128 <__snprintf_chk@plt+0x204>
   1110c:	sub	r2, r5, #4
   11110:	sub	r3, r3, #1
   11114:	ldr	r1, [r4], #4
   11118:	cmn	r3, #1
   1111c:	str	r1, [r2, #4]!
   11120:	bne	11110 <__snprintf_chk@plt+0x1ec>
   11124:	add	r6, r5, r6, lsl #2
   11128:	ldr	r3, [sp, #36]	; 0x24
   1112c:	cmp	r3, #0
   11130:	mov	r3, #0
   11134:	str	r3, [r6]
   11138:	beq	11434 <__snprintf_chk@plt+0x510>
   1113c:	cmp	r9, #0
   11140:	beq	113c8 <__snprintf_chk@plt+0x4a4>
   11144:	mov	r1, #0
   11148:	mov	r0, #17
   1114c:	bl	10d44 <signal@plt>
   11150:	mov	r2, #136	; 0x88
   11154:	mov	r1, #0
   11158:	add	r0, sp, #332	; 0x14c
   1115c:	bl	10e88 <memset@plt>
   11160:	ldr	r3, [pc, #2020]	; 1194c <__snprintf_chk@plt+0xa28>
   11164:	mov	r4, #0
   11168:	add	r0, sp, #332	; 0x14c
   1116c:	str	r3, [sp, #328]	; 0x148
   11170:	bl	10ec4 <sigemptyset@plt>
   11174:	add	r1, sp, #328	; 0x148
   11178:	mov	r2, r4
   1117c:	mov	r0, #15
   11180:	str	r4, [sp, #460]	; 0x1cc
   11184:	bl	10d98 <sigaction@plt>
   11188:	mov	r2, r4
   1118c:	add	r1, sp, #328	; 0x148
   11190:	mov	r0, #3
   11194:	bl	10d98 <sigaction@plt>
   11198:	mov	r2, r4
   1119c:	add	r1, sp, #328	; 0x148
   111a0:	mov	r0, #2
   111a4:	bl	10d98 <sigaction@plt>
   111a8:	mov	r2, r4
   111ac:	add	r1, sp, #328	; 0x148
   111b0:	mov	r0, #1
   111b4:	bl	10d98 <sigaction@plt>
   111b8:	mov	r2, r4
   111bc:	add	r1, sp, #328	; 0x148
   111c0:	mov	r0, #13
   111c4:	bl	10d98 <sigaction@plt>
   111c8:	mov	r1, r4
   111cc:	mov	r2, #136	; 0x88
   111d0:	add	r0, sp, #472	; 0x1d8
   111d4:	bl	10e88 <memset@plt>
   111d8:	ldr	r3, [pc, #1904]	; 11950 <__snprintf_chk@plt+0xa2c>
   111dc:	add	r0, sp, #472	; 0x1d8
   111e0:	str	r3, [sp, #468]	; 0x1d4
   111e4:	bl	10ec4 <sigemptyset@plt>
   111e8:	mov	r3, #268435456	; 0x10000000
   111ec:	mov	r2, r4
   111f0:	add	r1, sp, #468	; 0x1d4
   111f4:	mov	r0, #14
   111f8:	str	r3, [sp, #600]	; 0x258
   111fc:	bl	10d98 <sigaction@plt>
   11200:	mov	r2, r4
   11204:	add	r1, sp, #468	; 0x1d4
   11208:	mov	r0, #10
   1120c:	bl	10d98 <sigaction@plt>
   11210:	add	r0, sp, #72	; 0x48
   11214:	ldr	r6, [r8, #8]
   11218:	bl	10ec4 <sigemptyset@plt>
   1121c:	mov	r1, #10
   11220:	add	r0, sp, #72	; 0x48
   11224:	bl	10de0 <sigaddset@plt>
   11228:	add	r1, sp, #72	; 0x48
   1122c:	add	r2, sp, #200	; 0xc8
   11230:	mov	r0, r4
   11234:	bl	10d08 <sigprocmask@plt>
   11238:	bl	10ed0 <fork@plt>
   1123c:	cmn	r0, #1
   11240:	mov	r5, r0
   11244:	str	r0, [r8]
   11248:	beq	1135c <__snprintf_chk@plt+0x438>
   1124c:	cmp	r0, r4
   11250:	beq	1171c <__snprintf_chk@plt+0x7f8>
   11254:	mov	r1, r0
   11258:	mvn	r2, #0
   1125c:	mov	r0, r4
   11260:	bl	10dc8 <setpriority@plt>
   11264:	bl	10e64 <__errno_location@plt>
   11268:	ldr	r1, [pc, #1764]	; 11954 <__snprintf_chk@plt+0xa30>
   1126c:	str	r4, [r0]
   11270:	mov	r0, r4
   11274:	bl	11cac <__snprintf_chk@plt+0xd88>
   11278:	cmp	r0, #0
   1127c:	bne	112f4 <__snprintf_chk@plt+0x3d0>
   11280:	mvn	r3, #0
   11284:	str	r3, [r8]
   11288:	mov	r1, #1
   1128c:	mov	r0, #15
   11290:	bl	10d44 <signal@plt>
   11294:	mov	r1, #1
   11298:	mov	r0, #3
   1129c:	bl	10d44 <signal@plt>
   112a0:	mov	r1, #1
   112a4:	mov	r0, #2
   112a8:	bl	10d44 <signal@plt>
   112ac:	mov	r1, #1
   112b0:	mov	r0, r1
   112b4:	bl	10d44 <signal@plt>
   112b8:	mov	r1, #1
   112bc:	mov	r0, #13
   112c0:	bl	10d44 <signal@plt>
   112c4:	bl	11d9c <__snprintf_chk@plt+0xe78>
   112c8:	ldr	r3, [pc, #1640]	; 11938 <__snprintf_chk@plt+0xa14>
   112cc:	ldr	r0, [r3]
   112d0:	cmp	r0, #0
   112d4:	bne	114a4 <__snprintf_chk@plt+0x580>
   112d8:	ldr	r3, [r8]
   112dc:	cmp	r3, #0
   112e0:	blt	114cc <__snprintf_chk@plt+0x5a8>
   112e4:	ldr	r3, [r8, #4]
   112e8:	cmp	r3, #0
   112ec:	blt	11594 <__snprintf_chk@plt+0x670>
   112f0:	bl	10e40 <exit@plt>
   112f4:	mov	r0, #15
   112f8:	bl	10d68 <alarm@plt>
   112fc:	add	r0, sp, #200	; 0xc8
   11300:	bl	10e94 <sigsuspend@plt>
   11304:	mov	r0, r4
   11308:	bl	10d68 <alarm@plt>
   1130c:	mov	r2, r4
   11310:	add	r1, sp, #200	; 0xc8
   11314:	mov	r0, #2
   11318:	bl	10d08 <sigprocmask@plt>
   1131c:	ldr	r5, [pc, #1588]	; 11958 <__snprintf_chk@plt+0xa34>
   11320:	mov	r4, #120	; 0x78
   11324:	b	11344 <__snprintf_chk@plt+0x420>
   11328:	mov	r1, r5
   1132c:	mov	r0, #1
   11330:	bl	11cac <__snprintf_chk@plt+0xd88>
   11334:	cmp	r0, #0
   11338:	beq	1160c <__snprintf_chk@plt+0x6e8>
   1133c:	subs	r4, r4, #1
   11340:	beq	1160c <__snprintf_chk@plt+0x6e8>
   11344:	ldr	r6, [pc, #1516]	; 11938 <__snprintf_chk@plt+0xa14>
   11348:	ldr	r0, [r6, #412]	; 0x19c
   1134c:	bl	10e04 <XOpenDisplay@plt>
   11350:	cmp	r0, #0
   11354:	str	r0, [r6, #408]	; 0x198
   11358:	beq	11328 <__snprintf_chk@plt+0x404>
   1135c:	ldr	r3, [r8]
   11360:	cmp	r3, #0
   11364:	ble	11288 <__snprintf_chk@plt+0x364>
   11368:	ldr	r5, [r8, #12]
   1136c:	bl	10ed0 <fork@plt>
   11370:	cmp	r0, #0
   11374:	mov	r4, r0
   11378:	str	r0, [r8, #4]
   1137c:	beq	114ec <__snprintf_chk@plt+0x5c8>
   11380:	ble	11288 <__snprintf_chk@plt+0x364>
   11384:	ldr	r3, [r8]
   11388:	cmn	r3, #1
   1138c:	bne	113b4 <__snprintf_chk@plt+0x490>
   11390:	b	11288 <__snprintf_chk@plt+0x364>
   11394:	mov	r0, #0
   11398:	bl	10d8c <wait@plt>
   1139c:	ldr	r3, [r8, #4]
   113a0:	cmp	r3, r0
   113a4:	beq	11288 <__snprintf_chk@plt+0x364>
   113a8:	ldr	r3, [r8]
   113ac:	cmp	r3, r0
   113b0:	beq	11288 <__snprintf_chk@plt+0x364>
   113b4:	ldr	r3, [pc, #1404]	; 11938 <__snprintf_chk@plt+0xa14>
   113b8:	ldr	r3, [r3]
   113bc:	cmp	r3, #0
   113c0:	beq	11394 <__snprintf_chk@plt+0x470>
   113c4:	b	11288 <__snprintf_chk@plt+0x364>
   113c8:	ldr	r4, [pc, #1420]	; 1195c <__snprintf_chk@plt+0xa38>
   113cc:	ldr	r0, [pc, #1420]	; 11960 <__snprintf_chk@plt+0xa3c>
   113d0:	strb	r9, [r4]
   113d4:	bl	10dbc <getenv@plt>
   113d8:	subs	r3, r0, #0
   113dc:	beq	1159c <__snprintf_chk@plt+0x678>
   113e0:	ldr	r2, [pc, #1404]	; 11964 <__snprintf_chk@plt+0xa40>
   113e4:	mov	r1, #256	; 0x100
   113e8:	mov	r0, r4
   113ec:	bl	10e7c <snprintf@plt>
   113f0:	mov	r9, #1
   113f4:	ldrb	r3, [r4]
   113f8:	cmp	r3, #0
   113fc:	beq	11144 <__snprintf_chk@plt+0x220>
   11400:	mov	r1, #0
   11404:	ldr	r0, [pc, #1360]	; 1195c <__snprintf_chk@plt+0xa38>
   11408:	bl	10eac <access@plt>
   1140c:	cmp	r0, #0
   11410:	bne	116f0 <__snprintf_chk@plt+0x7cc>
   11414:	sub	r3, r5, r7
   11418:	ldr	r2, [r8, #8]
   1141c:	asr	r3, r3, #2
   11420:	sub	r3, r3, #-1073741823	; 0xc0000001
   11424:	add	r1, r2, r3, lsl #2
   11428:	str	r4, [r2, r3, lsl #2]
   1142c:	str	r1, [r8, #8]
   11430:	b	11144 <__snprintf_chk@plt+0x220>
   11434:	ldr	r4, [pc, #1324]	; 11968 <__snprintf_chk@plt+0xa44>
   11438:	ldr	r3, [sp, #36]	; 0x24
   1143c:	ldr	r0, [pc, #1320]	; 1196c <__snprintf_chk@plt+0xa48>
   11440:	strb	r3, [r4]
   11444:	bl	10dbc <getenv@plt>
   11448:	subs	r3, r0, #0
   1144c:	beq	115d4 <__snprintf_chk@plt+0x6b0>
   11450:	ldr	r2, [pc, #1292]	; 11964 <__snprintf_chk@plt+0xa40>
   11454:	mov	r1, #256	; 0x100
   11458:	mov	r0, r4
   1145c:	bl	10e7c <snprintf@plt>
   11460:	mov	r3, #1
   11464:	str	r3, [sp, #36]	; 0x24
   11468:	ldrb	r3, [r4]
   1146c:	cmp	r3, #0
   11470:	beq	1113c <__snprintf_chk@plt+0x218>
   11474:	mov	r1, #0
   11478:	ldr	r0, [pc, #1256]	; 11968 <__snprintf_chk@plt+0xa44>
   1147c:	bl	10eac <access@plt>
   11480:	cmp	r0, #0
   11484:	bne	116d4 <__snprintf_chk@plt+0x7b0>
   11488:	ldr	r3, [sp, #44]	; 0x2c
   1148c:	sub	r2, r3, #-1073741823	; 0xc0000001
   11490:	ldr	r3, [r8, #12]
   11494:	add	r1, r3, r2, lsl #2
   11498:	str	r4, [r3, r2, lsl #2]
   1149c:	str	r1, [r8, #12]
   114a0:	b	1113c <__snprintf_chk@plt+0x218>
   114a4:	ldr	r0, [pc, #1220]	; 11970 <__snprintf_chk@plt+0xa4c>
   114a8:	ldr	r1, [r3]
   114ac:	bl	11b58 <__snprintf_chk@plt+0xc34>
   114b0:	mov	r0, #1
   114b4:	bl	10e40 <exit@plt>
   114b8:	mov	r3, #0
   114bc:	str	r3, [sp, #44]	; 0x2c
   114c0:	mov	r3, #1
   114c4:	str	r3, [sp, #36]	; 0x24
   114c8:	b	11020 <__snprintf_chk@plt+0xfc>
   114cc:	ldr	r0, [pc, #1184]	; 11974 <__snprintf_chk@plt+0xa50>
   114d0:	bl	11bac <__snprintf_chk@plt+0xc88>
   114d4:	ldr	r3, [sp, #40]	; 0x28
   114d8:	add	r4, sl, #8
   114dc:	sub	r6, fp, #2
   114e0:	mov	r9, #1
   114e4:	str	r0, [r3]
   114e8:	b	11078 <__snprintf_chk@plt+0x154>
   114ec:	ldr	r3, [pc, #1092]	; 11938 <__snprintf_chk@plt+0xa14>
   114f0:	mov	r2, #1
   114f4:	ldr	r0, [pc, #1148]	; 11978 <__snprintf_chk@plt+0xa54>
   114f8:	ldr	r1, [r3, #412]	; 0x19c
   114fc:	bl	10e58 <setenv@plt>
   11500:	cmn	r0, #1
   11504:	beq	11920 <__snprintf_chk@plt+0x9fc>
   11508:	ldr	r3, [pc, #1064]	; 11938 <__snprintf_chk@plt+0xa14>
   1150c:	mov	r2, r4
   11510:	ldr	r1, [pc, #1124]	; 1197c <__snprintf_chk@plt+0xa58>
   11514:	ldr	r0, [r3, #408]	; 0x198
   11518:	bl	10e70 <XInternAtom@plt>
   1151c:	subs	r2, r0, #0
   11520:	bne	11624 <__snprintf_chk@plt+0x700>
   11524:	ldr	r0, [pc, #1108]	; 11980 <__snprintf_chk@plt+0xa5c>
   11528:	bl	11b58 <__snprintf_chk@plt+0xc34>
   1152c:	bl	10cfc <getuid@plt>
   11530:	bl	10ee8 <setuid@plt>
   11534:	cmn	r0, #1
   11538:	beq	116c4 <__snprintf_chk@plt+0x7a0>
   1153c:	bl	10e34 <getpid@plt>
   11540:	ldr	r4, [pc, #1084]	; 11984 <__snprintf_chk@plt+0xa60>
   11544:	mov	r1, r0
   11548:	mov	r0, #0
   1154c:	bl	10ef4 <setpgid@plt>
   11550:	mov	r0, r5
   11554:	bl	11ef8 <__snprintf_chk@plt+0xfd4>
   11558:	ldr	r1, [r5]
   1155c:	ldr	r0, [pc, #1060]	; 11988 <__snprintf_chk@plt+0xa64>
   11560:	bl	11c58 <__snprintf_chk@plt+0xd34>
   11564:	ldr	r3, [r8, #40]	; 0x28
   11568:	ldr	r2, [pc, #1052]	; 1198c <__snprintf_chk@plt+0xa68>
   1156c:	mov	r1, #1
   11570:	ldr	r0, [r4]
   11574:	bl	10ea0 <__fprintf_chk@plt>
   11578:	ldr	r3, [r4]
   1157c:	mov	r2, #18
   11580:	mov	r1, #1
   11584:	ldr	r0, [pc, #1028]	; 11990 <__snprintf_chk@plt+0xa6c>
   11588:	bl	10da4 <fwrite@plt>
   1158c:	mov	r0, #1
   11590:	bl	10d2c <_exit@plt>
   11594:	ldr	r0, [pc, #1016]	; 11994 <__snprintf_chk@plt+0xa70>
   11598:	bl	11bac <__snprintf_chk@plt+0xc88>
   1159c:	ldr	r0, [pc, #1012]	; 11998 <__snprintf_chk@plt+0xa74>
   115a0:	bl	10dbc <getenv@plt>
   115a4:	cmp	r0, #0
   115a8:	beq	113f4 <__snprintf_chk@plt+0x4d0>
   115ac:	ldr	r1, [pc, #1000]	; 1199c <__snprintf_chk@plt+0xa78>
   115b0:	ldr	r2, [pc, #1000]	; 119a0 <__snprintf_chk@plt+0xa7c>
   115b4:	mov	r3, #256	; 0x100
   115b8:	strd	r0, [sp, #4]
   115bc:	str	r2, [sp]
   115c0:	mov	r1, r3
   115c4:	mov	r2, #1
   115c8:	mov	r0, r4
   115cc:	bl	10f24 <__snprintf_chk@plt>
   115d0:	b	113f4 <__snprintf_chk@plt+0x4d0>
   115d4:	ldr	r0, [pc, #956]	; 11998 <__snprintf_chk@plt+0xa74>
   115d8:	bl	10dbc <getenv@plt>
   115dc:	cmp	r0, #0
   115e0:	beq	11468 <__snprintf_chk@plt+0x544>
   115e4:	ldr	r1, [pc, #952]	; 119a4 <__snprintf_chk@plt+0xa80>
   115e8:	ldr	r2, [pc, #944]	; 119a0 <__snprintf_chk@plt+0xa7c>
   115ec:	mov	r3, #256	; 0x100
   115f0:	strd	r0, [sp, #4]
   115f4:	str	r2, [sp]
   115f8:	mov	r1, r3
   115fc:	mov	r2, #1
   11600:	mov	r0, r4
   11604:	bl	10f24 <__snprintf_chk@plt>
   11608:	b	11468 <__snprintf_chk@plt+0x544>
   1160c:	ldr	r0, [pc, #916]	; 119a8 <__snprintf_chk@plt+0xa84>
   11610:	bl	11b58 <__snprintf_chk@plt+0xc34>
   11614:	ldr	r0, [pc, #912]	; 119ac <__snprintf_chk@plt+0xa88>
   11618:	bl	11c58 <__snprintf_chk@plt+0xd34>
   1161c:	bl	11d9c <__snprintf_chk@plt+0xe78>
   11620:	b	11280 <__snprintf_chk@plt+0x35c>
   11624:	ldr	r3, [pc, #780]	; 11938 <__snprintf_chk@plt+0xa14>
   11628:	mov	ip, #80	; 0x50
   1162c:	add	lr, sp, #64	; 0x40
   11630:	ldr	r0, [r3, #408]	; 0x198
   11634:	add	r6, sp, #68	; 0x44
   11638:	ldr	r1, [r0, #132]	; 0x84
   1163c:	ldr	r3, [r0, #140]	; 0x8c
   11640:	str	r4, [sp, #8]
   11644:	mla	r1, ip, r1, r3
   11648:	add	ip, sp, #60	; 0x3c
   1164c:	str	r4, [sp, #4]
   11650:	str	lr, [sp, #24]
   11654:	str	ip, [sp, #20]
   11658:	mov	r3, r4
   1165c:	add	lr, sp, #52	; 0x34
   11660:	mov	ip, #1
   11664:	add	r4, sp, #56	; 0x38
   11668:	str	r6, [sp, #28]
   1166c:	str	r4, [sp, #16]
   11670:	str	lr, [sp, #12]
   11674:	str	ip, [sp]
   11678:	ldr	r1, [r1, #8]
   1167c:	bl	10f00 <XGetWindowProperty@plt>
   11680:	cmp	r0, #0
   11684:	bne	117f0 <__snprintf_chk@plt+0x8cc>
   11688:	ldr	r1, [sp, #60]	; 0x3c
   1168c:	cmp	r1, #1
   11690:	bne	11708 <__snprintf_chk@plt+0x7e4>
   11694:	ldr	r1, [sp, #52]	; 0x34
   11698:	cmp	r1, #19
   1169c:	beq	117fc <__snprintf_chk@plt+0x8d8>
   116a0:	cmp	r1, #33	; 0x21
   116a4:	beq	117fc <__snprintf_chk@plt+0x8d8>
   116a8:	cmp	r1, #6
   116ac:	beq	117fc <__snprintf_chk@plt+0x8d8>
   116b0:	ldr	r0, [pc, #760]	; 119b0 <__snprintf_chk@plt+0xa8c>
   116b4:	bl	11b58 <__snprintf_chk@plt+0xc34>
   116b8:	ldr	r0, [sp, #68]	; 0x44
   116bc:	bl	10d74 <XFree@plt>
   116c0:	b	1152c <__snprintf_chk@plt+0x608>
   116c4:	ldr	r0, [pc, #744]	; 119b4 <__snprintf_chk@plt+0xa90>
   116c8:	bl	11c58 <__snprintf_chk@plt+0xd34>
   116cc:	mov	r0, #1
   116d0:	bl	10d2c <_exit@plt>
   116d4:	ldr	r3, [sp, #36]	; 0x24
   116d8:	cmp	r3, #0
   116dc:	beq	1113c <__snprintf_chk@plt+0x218>
   116e0:	ldr	r1, [pc, #640]	; 11968 <__snprintf_chk@plt+0xa44>
   116e4:	ldr	r0, [pc, #716]	; 119b8 <__snprintf_chk@plt+0xa94>
   116e8:	bl	11c58 <__snprintf_chk@plt+0xd34>
   116ec:	b	1113c <__snprintf_chk@plt+0x218>
   116f0:	cmp	r9, #0
   116f4:	beq	11144 <__snprintf_chk@plt+0x220>
   116f8:	ldr	r1, [pc, #604]	; 1195c <__snprintf_chk@plt+0xa38>
   116fc:	ldr	r0, [pc, #696]	; 119bc <__snprintf_chk@plt+0xa98>
   11700:	bl	11c58 <__snprintf_chk@plt+0xd34>
   11704:	b	11144 <__snprintf_chk@plt+0x220>
   11708:	ldr	r0, [pc, #688]	; 119c0 <__snprintf_chk@plt+0xa9c>
   1170c:	bl	11b58 <__snprintf_chk@plt+0xc34>
   11710:	ldr	r0, [sp, #68]	; 0x44
   11714:	bl	10d74 <XFree@plt>
   11718:	b	1152c <__snprintf_chk@plt+0x608>
   1171c:	mov	r2, r0
   11720:	add	r1, sp, #200	; 0xc8
   11724:	mov	r0, #2
   11728:	bl	10d08 <sigprocmask@plt>
   1172c:	mov	r1, #1
   11730:	mov	r0, #21
   11734:	bl	10d44 <signal@plt>
   11738:	mov	r1, #1
   1173c:	mov	r0, #22
   11740:	bl	10d44 <signal@plt>
   11744:	mov	r1, #1
   11748:	mov	r0, #10
   1174c:	bl	10d44 <signal@plt>
   11750:	bl	10e34 <getpid@plt>
   11754:	ldr	r4, [pc, #552]	; 11984 <__snprintf_chk@plt+0xa60>
   11758:	mov	r1, r0
   1175c:	mov	r0, r5
   11760:	bl	10ef4 <setpgid@plt>
   11764:	mov	r0, r6
   11768:	bl	11ef8 <__snprintf_chk@plt+0xfd4>
   1176c:	ldr	r1, [r6]
   11770:	ldr	r0, [pc, #588]	; 119c4 <__snprintf_chk@plt+0xaa0>
   11774:	bl	11c58 <__snprintf_chk@plt+0xd34>
   11778:	ldr	r3, [r8, #40]	; 0x28
   1177c:	ldr	r2, [pc, #580]	; 119c8 <__snprintf_chk@plt+0xaa4>
   11780:	mov	r1, #1
   11784:	ldr	r0, [r4]
   11788:	bl	10ea0 <__fprintf_chk@plt>
   1178c:	ldr	r3, [r6]
   11790:	ldr	r2, [pc, #564]	; 119cc <__snprintf_chk@plt+0xaa8>
   11794:	mov	r1, #1
   11798:	ldr	r0, [r4]
   1179c:	bl	10ea0 <__fprintf_chk@plt>
   117a0:	ldr	r3, [r4]
   117a4:	mov	r2, #51	; 0x33
   117a8:	mov	r1, #1
   117ac:	ldr	r0, [pc, #540]	; 119d0 <__snprintf_chk@plt+0xaac>
   117b0:	bl	10da4 <fwrite@plt>
   117b4:	ldr	r5, [pc, #536]	; 119d4 <__snprintf_chk@plt+0xab0>
   117b8:	ldr	r3, [pc, #536]	; 119d8 <__snprintf_chk@plt+0xab4>
   117bc:	ldr	r6, [pc, #536]	; 119dc <__snprintf_chk@plt+0xab8>
   117c0:	mov	r2, r6
   117c4:	mov	r1, #1
   117c8:	ldr	r0, [r4]
   117cc:	bl	10ea0 <__fprintf_chk@plt>
   117d0:	ldr	r3, [r5, #4]!
   117d4:	cmp	r3, #0
   117d8:	bne	117c0 <__snprintf_chk@plt+0x89c>
   117dc:	ldr	r1, [r4]
   117e0:	mov	r0, #10
   117e4:	bl	10edc <fputc@plt>
   117e8:	mov	r0, #1
   117ec:	bl	10e40 <exit@plt>
   117f0:	ldr	r0, [pc, #488]	; 119e0 <__snprintf_chk@plt+0xabc>
   117f4:	bl	11b58 <__snprintf_chk@plt+0xc34>
   117f8:	b	1152c <__snprintf_chk@plt+0x608>
   117fc:	ldr	r1, [sp, #56]	; 0x38
   11800:	cmp	r1, #16
   11804:	beq	11834 <__snprintf_chk@plt+0x910>
   11808:	cmp	r1, #32
   1180c:	beq	118e0 <__snprintf_chk@plt+0x9bc>
   11810:	cmp	r1, #8
   11814:	ldreq	r3, [sp, #68]	; 0x44
   11818:	ldrbeq	r4, [r3]
   1181c:	beq	1183c <__snprintf_chk@plt+0x918>
   11820:	ldr	r0, [pc, #444]	; 119e4 <__snprintf_chk@plt+0xac0>
   11824:	bl	11b58 <__snprintf_chk@plt+0xc34>
   11828:	ldr	r0, [sp, #68]	; 0x44
   1182c:	bl	10d74 <XFree@plt>
   11830:	b	1152c <__snprintf_chk@plt+0x608>
   11834:	ldr	r3, [sp, #68]	; 0x44
   11838:	ldrh	r4, [r3]
   1183c:	ldr	r0, [sp, #68]	; 0x44
   11840:	bl	10d74 <XFree@plt>
   11844:	ldr	r0, [pc, #412]	; 119e8 <__snprintf_chk@plt+0xac4>
   11848:	bl	10dbc <getenv@plt>
   1184c:	ldr	r2, [pc, #408]	; 119ec <__snprintf_chk@plt+0xac8>
   11850:	mov	r3, #10
   11854:	mov	r1, r3
   11858:	stm	sp, {r2, r4}
   1185c:	mov	r2, #1
   11860:	mov	r6, r0
   11864:	add	r0, sp, #608	; 0x260
   11868:	bl	10f24 <__snprintf_chk@plt>
   1186c:	cmp	r6, #0
   11870:	mov	r4, r0
   11874:	beq	118ec <__snprintf_chk@plt+0x9c8>
   11878:	mov	r0, r6
   1187c:	bl	10e4c <strlen@plt>
   11880:	add	r4, r4, #2
   11884:	add	r4, r4, r0
   11888:	mov	r0, r4
   1188c:	bl	10dd4 <malloc@plt>
   11890:	subs	r7, r0, #0
   11894:	beq	1152c <__snprintf_chk@plt+0x608>
   11898:	ldr	r3, [pc, #336]	; 119f0 <__snprintf_chk@plt+0xacc>
   1189c:	add	r2, sp, #608	; 0x260
   118a0:	str	r2, [sp, #8]
   118a4:	str	r3, [sp]
   118a8:	str	r6, [sp, #4]
   118ac:	mov	r1, r4
   118b0:	mvn	r3, #0
   118b4:	mov	r2, #1
   118b8:	bl	10f24 <__snprintf_chk@plt>
   118bc:	mov	r2, #1
   118c0:	mov	r1, r7
   118c4:	ldr	r0, [pc, #284]	; 119e8 <__snprintf_chk@plt+0xac4>
   118c8:	bl	10e58 <setenv@plt>
   118cc:	cmn	r0, #1
   118d0:	beq	11914 <__snprintf_chk@plt+0x9f0>
   118d4:	mov	r0, r7
   118d8:	bl	10d20 <free@plt>
   118dc:	b	1152c <__snprintf_chk@plt+0x608>
   118e0:	ldr	r3, [sp, #68]	; 0x44
   118e4:	ldr	r4, [r3]
   118e8:	b	1183c <__snprintf_chk@plt+0x918>
   118ec:	add	r4, r0, #1
   118f0:	mov	r0, r4
   118f4:	bl	10dd4 <malloc@plt>
   118f8:	subs	r7, r0, #0
   118fc:	beq	1152c <__snprintf_chk@plt+0x608>
   11900:	add	r3, sp, #608	; 0x260
   11904:	mov	r1, r4
   11908:	ldr	r2, [pc, #84]	; 11964 <__snprintf_chk@plt+0xa40>
   1190c:	bl	10e7c <snprintf@plt>
   11910:	b	118bc <__snprintf_chk@plt+0x998>
   11914:	ldr	r0, [pc, #216]	; 119f4 <__snprintf_chk@plt+0xad0>
   11918:	bl	11c58 <__snprintf_chk@plt+0xd34>
   1191c:	b	118d4 <__snprintf_chk@plt+0x9b0>
   11920:	ldr	r0, [pc, #208]	; 119f8 <__snprintf_chk@plt+0xad4>
   11924:	bl	10f30 <__snprintf_chk@plt+0xc>
   11928:	str	fp, [sp, #44]	; 0x2c
   1192c:	b	110c0 <__snprintf_chk@plt+0x19c>
   11930:	andeq	r2, r2, r0, lsl #30
   11934:	andeq	r3, r2, r0, ror #1
   11938:	andeq	r3, r2, r8, lsl r1
   1193c:	strdeq	r3, [r2], -r0
   11940:	strdeq	r2, [r1], -ip
   11944:	andeq	r2, r1, r0, lsl #2
   11948:	andeq	r2, r1, r4, lsl #2
   1194c:	andeq	r1, r1, ip, ror #21
   11950:	strdeq	r1, [r1], -ip
   11954:	andeq	r2, r1, r8, ror #3
   11958:	andeq	r2, r1, r8, ror #4
   1195c:	ldrdeq	r3, [r2], -r8
   11960:	andeq	r2, r1, r4, asr r1
   11964:	andeq	r2, r1, r0, lsl r1
   11968:	ldrdeq	r3, [r2], -r8
   1196c:	andeq	r2, r1, r8, lsl #2
   11970:	andeq	r2, r1, r0, lsr #9
   11974:			; <UNDEFINED> instruction: 0x000124b8
   11978:			; <UNDEFINED> instruction: 0x000122bc
   1197c:	ldrdeq	r2, [r1], -ip
   11980:	andeq	r2, r1, r8, ror #5
   11984:	andeq	r3, r2, r0, lsl r1
   11988:	andeq	r2, r1, r4, lsr r4
   1198c:	andeq	r2, r1, r0, asr r4
   11990:	andeq	r2, r1, ip, lsl #9
   11994:	andeq	r2, r1, r8, asr #9
   11998:	andeq	r2, r1, r4, lsl r1
   1199c:	andeq	r2, r1, r0, ror #2
   119a0:	andeq	r2, r1, r8, lsr #2
   119a4:	andeq	r2, r1, ip, lsl r1
   119a8:	muleq	r1, r0, r2
   119ac:	muleq	r1, ip, r2
   119b0:	andeq	r2, r1, r0, asr #7
   119b4:	andeq	r2, r1, r0, lsr #8
   119b8:	andeq	r2, r1, r0, lsr r1
   119bc:	andeq	r2, r1, ip, ror #2
   119c0:	andeq	r2, r1, r4, asr r3
   119c4:	muleq	r1, r0, r1
   119c8:	andeq	r2, r1, ip, lsr #3
   119cc:	andeq	r2, r1, ip, ror #3
   119d0:	andeq	r2, r1, ip, lsr #4
   119d4:	andeq	r1, r1, r8, lsr #31
   119d8:	andeq	r2, r1, ip, asr #1
   119dc:	andeq	r2, r1, r0, ror #4
   119e0:	andeq	r2, r1, ip, lsl #6
   119e4:	muleq	r1, r0, r3
   119e8:	andeq	r2, r1, ip, ror #7
   119ec:	strdeq	r2, [r1], -r8
   119f0:	strdeq	r2, [r1], -ip
   119f4:	andeq	r2, r1, r4, lsl #8
   119f8:	andeq	r2, r1, r4, asr #5
   119fc:	mov	fp, #0
   11a00:	mov	lr, #0
   11a04:	pop	{r1}		; (ldr r1, [sp], #4)
   11a08:	mov	r2, sp
   11a0c:	push	{r2}		; (str r2, [sp, #-4]!)
   11a10:	push	{r0}		; (str r0, [sp, #-4]!)
   11a14:	ldr	ip, [pc, #16]	; 11a2c <__snprintf_chk@plt+0xb08>
   11a18:	push	{ip}		; (str ip, [sp, #-4]!)
   11a1c:	ldr	r0, [pc, #12]	; 11a30 <__snprintf_chk@plt+0xb0c>
   11a20:	ldr	r3, [pc, #12]	; 11a34 <__snprintf_chk@plt+0xb10>
   11a24:	bl	10dec <__libc_start_main@plt>
   11a28:	bl	10f18 <abort@plt>
   11a2c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11a30:	andeq	r0, r1, r8, ror #30
   11a34:	andeq	r1, r1, r8, lsr pc
   11a38:	ldr	r3, [pc, #20]	; 11a54 <__snprintf_chk@plt+0xb30>
   11a3c:	ldr	r2, [pc, #20]	; 11a58 <__snprintf_chk@plt+0xb34>
   11a40:	add	r3, pc, r3
   11a44:	ldr	r2, [r3, r2]
   11a48:	cmp	r2, #0
   11a4c:	bxeq	lr
   11a50:	b	10e1c <__gmon_start__@plt>
   11a54:			; <UNDEFINED> instruction: 0x000115b8
   11a58:	ldrdeq	r0, [r0], -r4
   11a5c:	ldr	r0, [pc, #24]	; 11a7c <__snprintf_chk@plt+0xb58>
   11a60:	ldr	r3, [pc, #24]	; 11a80 <__snprintf_chk@plt+0xb5c>
   11a64:	cmp	r3, r0
   11a68:	bxeq	lr
   11a6c:	ldr	r3, [pc, #16]	; 11a84 <__snprintf_chk@plt+0xb60>
   11a70:	cmp	r3, #0
   11a74:	bxeq	lr
   11a78:	bx	r3
   11a7c:	andeq	r3, r2, ip, lsl #2
   11a80:	andeq	r3, r2, ip, lsl #2
   11a84:	andeq	r0, r0, r0
   11a88:	ldr	r0, [pc, #36]	; 11ab4 <__snprintf_chk@plt+0xb90>
   11a8c:	ldr	r1, [pc, #36]	; 11ab8 <__snprintf_chk@plt+0xb94>
   11a90:	sub	r1, r1, r0
   11a94:	asr	r1, r1, #2
   11a98:	add	r1, r1, r1, lsr #31
   11a9c:	asrs	r1, r1, #1
   11aa0:	bxeq	lr
   11aa4:	ldr	r3, [pc, #16]	; 11abc <__snprintf_chk@plt+0xb98>
   11aa8:	cmp	r3, #0
   11aac:	bxeq	lr
   11ab0:	bx	r3
   11ab4:	andeq	r3, r2, ip, lsl #2
   11ab8:	andeq	r3, r2, ip, lsl #2
   11abc:	andeq	r0, r0, r0
   11ac0:	push	{r4, lr}
   11ac4:	ldr	r4, [pc, #24]	; 11ae4 <__snprintf_chk@plt+0xbc0>
   11ac8:	ldrb	r3, [r4]
   11acc:	cmp	r3, #0
   11ad0:	popne	{r4, pc}
   11ad4:	bl	11a5c <__snprintf_chk@plt+0xb38>
   11ad8:	mov	r3, #1
   11adc:	strb	r3, [r4]
   11ae0:	pop	{r4, pc}
   11ae4:	andeq	r3, r2, r4, lsl r1
   11ae8:	b	11a88 <__snprintf_chk@plt+0xb64>
   11aec:	ldr	r3, [pc, #4]	; 11af8 <__snprintf_chk@plt+0xbd4>
   11af0:	str	r0, [r3]
   11af4:	bx	lr
   11af8:	andeq	r3, r2, r8, lsl r1
   11afc:	bx	lr
   11b00:	push	{r4, r5, r6, lr}
   11b04:	mov	r5, r0
   11b08:	ldr	r4, [pc, #60]	; 11b4c <__snprintf_chk@plt+0xc28>
   11b0c:	ldr	r3, [pc, #60]	; 11b50 <__snprintf_chk@plt+0xc2c>
   11b10:	mov	r6, r1
   11b14:	ldr	r0, [r4]
   11b18:	ldr	r3, [r3, #4]
   11b1c:	ldr	r2, [pc, #48]	; 11b54 <__snprintf_chk@plt+0xc30>
   11b20:	mov	r1, #1
   11b24:	bl	10ea0 <__fprintf_chk@plt>
   11b28:	mov	r3, r6
   11b2c:	mov	r2, r5
   11b30:	ldr	r0, [r4]
   11b34:	mov	r1, #1
   11b38:	bl	10e10 <__vfprintf_chk@plt>
   11b3c:	ldr	r1, [r4]
   11b40:	mov	r0, #10
   11b44:	pop	{r4, r5, r6, lr}
   11b48:	b	10edc <fputc@plt>
   11b4c:	andeq	r3, r2, r0, lsl r1
   11b50:	andeq	r3, r2, r8, lsl r1
   11b54:	andeq	r1, r1, r8, asr #31
   11b58:	push	{r0, r1, r2, r3}
   11b5c:	push	{r4, lr}
   11b60:	sub	sp, sp, #8
   11b64:	ldr	r4, [pc, #60]	; 11ba8 <__snprintf_chk@plt+0xc84>
   11b68:	add	r3, sp, #20
   11b6c:	mov	r1, r3
   11b70:	ldr	r2, [r4]
   11b74:	ldr	r0, [sp, #16]
   11b78:	str	r2, [sp, #4]
   11b7c:	str	r3, [sp]
   11b80:	bl	11b00 <__snprintf_chk@plt+0xbdc>
   11b84:	ldr	r2, [sp, #4]
   11b88:	ldr	r3, [r4]
   11b8c:	cmp	r2, r3
   11b90:	bne	11ba4 <__snprintf_chk@plt+0xc80>
   11b94:	add	sp, sp, #8
   11b98:	pop	{r4, lr}
   11b9c:	add	sp, sp, #16
   11ba0:	bx	lr
   11ba4:	bl	10d5c <__stack_chk_fail@plt>
   11ba8:	andeq	r2, r2, r0, lsl #30
   11bac:	push	{r0, r1, r2, r3}
   11bb0:	ldr	r2, [pc, #40]	; 11be0 <__snprintf_chk@plt+0xcbc>
   11bb4:	push	{lr}		; (str lr, [sp, #-4]!)
   11bb8:	sub	sp, sp, #12
   11bbc:	add	r3, sp, #20
   11bc0:	ldr	r2, [r2]
   11bc4:	ldr	r0, [sp, #16]
   11bc8:	mov	r1, r3
   11bcc:	str	r2, [sp, #4]
   11bd0:	str	r3, [sp]
   11bd4:	bl	11b00 <__snprintf_chk@plt+0xbdc>
   11bd8:	mov	r0, #1
   11bdc:	bl	10e40 <exit@plt>
   11be0:	andeq	r2, r2, r0, lsl #30
   11be4:	push	{r4, r5, r6, lr}
   11be8:	mov	r5, r0
   11bec:	ldr	r4, [pc, #84]	; 11c48 <__snprintf_chk@plt+0xd24>
   11bf0:	ldr	r3, [pc, #84]	; 11c4c <__snprintf_chk@plt+0xd28>
   11bf4:	mov	r6, r1
   11bf8:	ldr	r0, [r4]
   11bfc:	ldr	r3, [r3, #4]
   11c00:	ldr	r2, [pc, #72]	; 11c50 <__snprintf_chk@plt+0xd2c>
   11c04:	mov	r1, #1
   11c08:	bl	10ea0 <__fprintf_chk@plt>
   11c0c:	mov	r3, r6
   11c10:	mov	r2, r5
   11c14:	mov	r1, #1
   11c18:	ldr	r0, [r4]
   11c1c:	bl	10e10 <__vfprintf_chk@plt>
   11c20:	bl	10e64 <__errno_location@plt>
   11c24:	ldr	r4, [r4]
   11c28:	ldr	r0, [r0]
   11c2c:	bl	10df8 <strerror@plt>
   11c30:	ldr	r2, [pc, #28]	; 11c54 <__snprintf_chk@plt+0xd30>
   11c34:	mov	r1, #1
   11c38:	mov	r3, r0
   11c3c:	mov	r0, r4
   11c40:	pop	{r4, r5, r6, lr}
   11c44:	b	10ea0 <__fprintf_chk@plt>
   11c48:	andeq	r3, r2, r0, lsl r1
   11c4c:	andeq	r3, r2, r8, lsl r1
   11c50:	andeq	r1, r1, r8, asr #31
   11c54:	ldrdeq	r1, [r1], -r0
   11c58:	push	{r0, r1, r2, r3}
   11c5c:	push	{r4, lr}
   11c60:	sub	sp, sp, #8
   11c64:	ldr	r4, [pc, #60]	; 11ca8 <__snprintf_chk@plt+0xd84>
   11c68:	add	r3, sp, #20
   11c6c:	mov	r1, r3
   11c70:	ldr	r2, [r4]
   11c74:	ldr	r0, [sp, #16]
   11c78:	str	r2, [sp, #4]
   11c7c:	str	r3, [sp]
   11c80:	bl	11be4 <__snprintf_chk@plt+0xcc0>
   11c84:	ldr	r2, [sp, #4]
   11c88:	ldr	r3, [r4]
   11c8c:	cmp	r2, r3
   11c90:	bne	11ca4 <__snprintf_chk@plt+0xd80>
   11c94:	add	sp, sp, #8
   11c98:	pop	{r4, lr}
   11c9c:	add	sp, sp, #16
   11ca0:	bx	lr
   11ca4:	bl	10d5c <__stack_chk_fail@plt>
   11ca8:	andeq	r2, r2, r0, lsl #30
   11cac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cb0:	mov	r8, r0
   11cb4:	ldr	r4, [pc, #204]	; 11d88 <__snprintf_chk@plt+0xe64>
   11cb8:	ldr	fp, [pc, #204]	; 11d8c <__snprintf_chk@plt+0xe68>
   11cbc:	ldr	r9, [pc, #204]	; 11d90 <__snprintf_chk@plt+0xe6c>
   11cc0:	ldr	r7, [pc, #204]	; 11d94 <__snprintf_chk@plt+0xe70>
   11cc4:	mov	sl, r1
   11cc8:	mov	r6, #0
   11ccc:	mov	r2, #1
   11cd0:	mov	r1, r9
   11cd4:	ldr	r0, [r4]
   11cd8:	bl	10db0 <waitpid@plt>
   11cdc:	mov	r5, r0
   11ce0:	ldr	r0, [r4]
   11ce4:	cmp	r0, r5
   11ce8:	beq	11d74 <__snprintf_chk@plt+0xe50>
   11cec:	cmp	r8, #0
   11cf0:	ldr	ip, [r7]
   11cf4:	bne	11d18 <__snprintf_chk@plt+0xdf4>
   11cf8:	mov	r1, ip
   11cfc:	mov	r0, #10
   11d00:	bl	10edc <fputc@plt>
   11d04:	ldr	r0, [r4]
   11d08:	subs	r0, r5, r0
   11d0c:	str	sl, [fp, #8]
   11d10:	movne	r0, #1
   11d14:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d18:	cmp	r6, #0
   11d1c:	mov	r1, ip
   11d20:	mov	r0, #46	; 0x2e
   11d24:	bne	11d6c <__snprintf_chk@plt+0xe48>
   11d28:	ldr	r2, [fp, #8]
   11d2c:	mov	r3, sl
   11d30:	cmp	r2, sl
   11d34:	ldr	r2, [pc, #92]	; 11d98 <__snprintf_chk@plt+0xe74>
   11d38:	beq	11d6c <__snprintf_chk@plt+0xe48>
   11d3c:	mov	r0, ip
   11d40:	mov	r1, #1
   11d44:	bl	10ea0 <__fprintf_chk@plt>
   11d48:	ldr	r0, [r7]
   11d4c:	bl	10cf0 <fflush@plt>
   11d50:	add	r6, r6, #1
   11d54:	mov	r0, #1
   11d58:	bl	10d50 <sleep@plt>
   11d5c:	cmp	r8, r6
   11d60:	bge	11ccc <__snprintf_chk@plt+0xda8>
   11d64:	ldr	ip, [r7]
   11d68:	b	11cf8 <__snprintf_chk@plt+0xdd4>
   11d6c:	bl	10edc <fputc@plt>
   11d70:	b	11d48 <__snprintf_chk@plt+0xe24>
   11d74:	cmp	r6, #0
   11d78:	beq	11d08 <__snprintf_chk@plt+0xde4>
   11d7c:	ldr	r3, [pc, #16]	; 11d94 <__snprintf_chk@plt+0xe70>
   11d80:	ldr	ip, [r3]
   11d84:	b	11cf8 <__snprintf_chk@plt+0xdd4>
   11d88:	andeq	r3, r2, r0, ror #1
   11d8c:	andeq	r3, r2, r8, lsl r1
   11d90:	ldrdeq	r3, [r2], -r8
   11d94:	andeq	r3, r2, r0, lsl r1
   11d98:	ldrdeq	r1, [r1], -r8
   11d9c:	ldr	r3, [pc, #264]	; 11eac <__snprintf_chk@plt+0xf88>
   11da0:	push	{r4, lr}
   11da4:	ldr	r3, [r3, #4]
   11da8:	cmp	r3, #0
   11dac:	bgt	11e4c <__snprintf_chk@plt+0xf28>
   11db0:	ldr	r4, [pc, #244]	; 11eac <__snprintf_chk@plt+0xf88>
   11db4:	ldr	r0, [r4]
   11db8:	cmp	r0, #0
   11dbc:	poplt	{r4, pc}
   11dc0:	mov	r1, #15
   11dc4:	bl	10d80 <killpg@plt>
   11dc8:	cmp	r0, #0
   11dcc:	bge	11de8 <__snprintf_chk@plt+0xec4>
   11dd0:	bl	10e64 <__errno_location@plt>
   11dd4:	ldr	r3, [r0]
   11dd8:	cmp	r3, #3
   11ddc:	popeq	{r4, pc}
   11de0:	ldr	r0, [pc, #200]	; 11eb0 <__snprintf_chk@plt+0xf8c>
   11de4:	bl	10f30 <__snprintf_chk@plt+0xc>
   11de8:	ldr	r1, [pc, #196]	; 11eb4 <__snprintf_chk@plt+0xf90>
   11dec:	mov	r0, #10
   11df0:	bl	11cac <__snprintf_chk@plt+0xd88>
   11df4:	cmp	r0, #0
   11df8:	popeq	{r4, pc}
   11dfc:	ldr	r0, [pc, #180]	; 11eb8 <__snprintf_chk@plt+0xf94>
   11e00:	bl	11b58 <__snprintf_chk@plt+0xc34>
   11e04:	ldr	r0, [r4]
   11e08:	mov	r1, #9
   11e0c:	bl	10d80 <killpg@plt>
   11e10:	cmp	r0, #0
   11e14:	bge	11e30 <__snprintf_chk@plt+0xf0c>
   11e18:	bl	10e64 <__errno_location@plt>
   11e1c:	ldr	r3, [r0]
   11e20:	cmp	r3, #3
   11e24:	popeq	{r4, pc}
   11e28:	ldr	r0, [pc, #140]	; 11ebc <__snprintf_chk@plt+0xf98>
   11e2c:	bl	11c58 <__snprintf_chk@plt+0xd34>
   11e30:	ldr	r1, [pc, #136]	; 11ec0 <__snprintf_chk@plt+0xf9c>
   11e34:	mov	r0, #3
   11e38:	bl	11cac <__snprintf_chk@plt+0xd88>
   11e3c:	cmp	r0, #0
   11e40:	popeq	{r4, pc}
   11e44:	ldr	r0, [pc, #120]	; 11ec4 <__snprintf_chk@plt+0xfa0>
   11e48:	bl	11bac <__snprintf_chk@plt+0xc88>
   11e4c:	ldr	r0, [pc, #116]	; 11ec8 <__snprintf_chk@plt+0xfa4>
   11e50:	bl	10cd8 <XSetIOErrorHandler@plt>
   11e54:	ldr	r0, [pc, #112]	; 11ecc <__snprintf_chk@plt+0xfa8>
   11e58:	bl	10d14 <_setjmp@plt>
   11e5c:	cmp	r0, #0
   11e60:	beq	11e9c <__snprintf_chk@plt+0xf78>
   11e64:	ldr	r4, [pc, #64]	; 11eac <__snprintf_chk@plt+0xf88>
   11e68:	mov	r1, #1
   11e6c:	ldr	r0, [r4, #4]
   11e70:	bl	10d80 <killpg@plt>
   11e74:	cmp	r0, #0
   11e78:	bge	11db0 <__snprintf_chk@plt+0xe8c>
   11e7c:	bl	10e64 <__errno_location@plt>
   11e80:	ldr	r3, [r0]
   11e84:	cmp	r3, #3
   11e88:	beq	11db0 <__snprintf_chk@plt+0xe8c>
   11e8c:	ldr	r1, [r4, #4]
   11e90:	ldr	r0, [pc, #56]	; 11ed0 <__snprintf_chk@plt+0xfac>
   11e94:	bl	11c58 <__snprintf_chk@plt+0xd34>
   11e98:	b	11db0 <__snprintf_chk@plt+0xe8c>
   11e9c:	ldr	r3, [pc, #48]	; 11ed4 <__snprintf_chk@plt+0xfb0>
   11ea0:	ldr	r0, [r3, #408]	; 0x198
   11ea4:	bl	10f0c <XCloseDisplay@plt>
   11ea8:	b	11e64 <__snprintf_chk@plt+0xf40>
   11eac:	andeq	r3, r2, r0, ror #1
   11eb0:	andeq	r2, r1, r0, lsl r0
   11eb4:	andeq	r2, r1, r4, lsr #32
   11eb8:	andeq	r2, r1, ip, lsr r0
   11ebc:	andeq	r2, r1, ip, ror r0
   11ec0:	andeq	r2, r1, ip, rrx
   11ec4:	muleq	r1, r4, r0
   11ec8:	ldrdeq	r1, [r1], -r8
   11ecc:	andeq	r3, r2, r8, lsr #2
   11ed0:	andeq	r1, r1, ip, ror #31
   11ed4:	andeq	r3, r2, r8, lsl r1
   11ed8:	ldr	r0, [pc, #16]	; 11ef0 <__snprintf_chk@plt+0xfcc>
   11edc:	push	{r4, lr}
   11ee0:	bl	11b58 <__snprintf_chk@plt+0xc34>
   11ee4:	mov	r1, #1
   11ee8:	ldr	r0, [pc, #4]	; 11ef4 <__snprintf_chk@plt+0xfd0>
   11eec:	bl	10eb8 <__longjmp_chk@plt>
   11ef0:	andeq	r2, r1, ip, lsr #1
   11ef4:	andeq	r3, r2, r8, lsr #2
   11ef8:	push	{r4, lr}
   11efc:	mov	r4, r0
   11f00:	mov	r1, r0
   11f04:	ldr	r0, [r0]
   11f08:	bl	10d38 <execvp@plt>
   11f0c:	ldr	r0, [r4]
   11f10:	mov	r1, #4
   11f14:	bl	10eac <access@plt>
   11f18:	cmp	r0, #0
   11f1c:	popne	{r4, pc}
   11f20:	mov	r1, r4
   11f24:	ldr	r0, [pc, #8]	; 11f34 <__snprintf_chk@plt+0x1010>
   11f28:	str	r0, [r1, #-4]!
   11f2c:	pop	{r4, lr}
   11f30:	b	10d38 <execvp@plt>
   11f34:	andeq	r2, r1, r8, asr #1
   11f38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f3c:	mov	r7, r0
   11f40:	ldr	r6, [pc, #72]	; 11f90 <__snprintf_chk@plt+0x106c>
   11f44:	ldr	r5, [pc, #72]	; 11f94 <__snprintf_chk@plt+0x1070>
   11f48:	add	r6, pc, r6
   11f4c:	add	r5, pc, r5
   11f50:	sub	r6, r6, r5
   11f54:	mov	r8, r1
   11f58:	mov	r9, r2
   11f5c:	bl	10cb8 <_init@@Base>
   11f60:	asrs	r6, r6, #2
   11f64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f68:	mov	r4, #0
   11f6c:	add	r4, r4, #1
   11f70:	ldr	r3, [r5], #4
   11f74:	mov	r2, r9
   11f78:	mov	r1, r8
   11f7c:	mov	r0, r7
   11f80:	blx	r3
   11f84:	cmp	r6, r4
   11f88:	bne	11f6c <__snprintf_chk@plt+0x1048>
   11f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f90:	andeq	r0, r1, ip, lsr #31
   11f94:	andeq	r0, r1, r4, lsr #31
   11f98:	bx	lr

Disassembly of section .fini:

00011f9c <_fini@@Base>:
   11f9c:	push	{r3, lr}
   11fa0:	pop	{r3, pc}
