
raspbian-preinstalled/flock:     file format elf32-littlearm


Disassembly of section .init:

00010f20 <.init>:
   10f20:	push	{r3, lr}
   10f24:	bl	11d40 <strspn@plt+0xb18>
   10f28:	pop	{r3, pc}

Disassembly of section .plt:

00010f2c <raise@plt-0x14>:
   10f2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f30:	ldr	lr, [pc, #4]	; 10f3c <raise@plt-0x4>
   10f34:	add	lr, pc, lr
   10f38:	ldr	pc, [lr, #8]!
   10f3c:			; <UNDEFINED> instruction: 0x00013fb0

00010f40 <raise@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #77824	; 0x13000
   10f48:	ldr	pc, [ip, #4016]!	; 0xfb0

00010f4c <strcmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #4008]!	; 0xfa8

00010f58 <strtol@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #77824	; 0x13000
   10f60:	ldr	pc, [ip, #4000]!	; 0xfa0

00010f64 <strcspn@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #77824	; 0x13000
   10f6c:	ldr	pc, [ip, #3992]!	; 0xf98

00010f70 <free@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #77824	; 0x13000
   10f78:	ldr	pc, [ip, #3984]!	; 0xf90

00010f7c <ferror@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #77824	; 0x13000
   10f84:	ldr	pc, [ip, #3976]!	; 0xf88

00010f88 <strndup@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #77824	; 0x13000
   10f90:	ldr	pc, [ip, #3968]!	; 0xf80

00010f94 <_exit@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #77824	; 0x13000
   10f9c:	ldr	pc, [ip, #3960]!	; 0xf78

00010fa0 <memcpy@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #77824	; 0x13000
   10fa8:	ldr	pc, [ip, #3952]!	; 0xf70

00010fac <execvp@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #77824	; 0x13000
   10fb4:	ldr	pc, [ip, #3944]!	; 0xf68

00010fb8 <__strtoull_internal@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #77824	; 0x13000
   10fc0:	ldr	pc, [ip, #3936]!	; 0xf60

00010fc4 <signal@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #77824	; 0x13000
   10fcc:	ldr	pc, [ip, #3928]!	; 0xf58

00010fd0 <dcgettext@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #77824	; 0x13000
   10fd8:	ldr	pc, [ip, #3920]!	; 0xf50

00010fdc <strdup@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #77824	; 0x13000
   10fe4:	ldr	pc, [ip, #3912]!	; 0xf48

00010fe8 <__stack_chk_fail@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #77824	; 0x13000
   10ff0:	ldr	pc, [ip, #3904]!	; 0xf40

00010ff4 <timer_create@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #77824	; 0x13000
   10ffc:	ldr	pc, [ip, #3896]!	; 0xf38

00011000 <textdomain@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #77824	; 0x13000
   11008:	ldr	pc, [ip, #3888]!	; 0xf30

0001100c <err@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #77824	; 0x13000
   11014:	ldr	pc, [ip, #3880]!	; 0xf28

00011018 <timer_settime@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #77824	; 0x13000
   11020:	ldr	pc, [ip, #3872]!	; 0xf20

00011024 <sigaction@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #77824	; 0x13000
   1102c:	ldr	pc, [ip, #3864]!	; 0xf18

00011030 <waitpid@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #77824	; 0x13000
   11038:	ldr	pc, [ip, #3856]!	; 0xf10

0001103c <gettimeofday@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #77824	; 0x13000
   11044:	ldr	pc, [ip, #3848]!	; 0xf08

00011048 <__fpending@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #77824	; 0x13000
   11050:	ldr	pc, [ip, #3840]!	; 0xf00

00011054 <timer_delete@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #77824	; 0x13000
   1105c:	ldr	pc, [ip, #3832]!	; 0xef8

00011060 <open64@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #77824	; 0x13000
   11068:	ldr	pc, [ip, #3824]!	; 0xef0

0001106c <getenv@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #77824	; 0x13000
   11074:	ldr	pc, [ip, #3816]!	; 0xee8

00011078 <sysinfo@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #77824	; 0x13000
   11080:	ldr	pc, [ip, #3808]!	; 0xee0

00011084 <malloc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #77824	; 0x13000
   1108c:	ldr	pc, [ip, #3800]!	; 0xed8

00011090 <__libc_start_main@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #77824	; 0x13000
   11098:	ldr	pc, [ip, #3792]!	; 0xed0

0001109c <__gmon_start__@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #77824	; 0x13000
   110a4:	ldr	pc, [ip, #3784]!	; 0xec8

000110a8 <getopt_long@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #77824	; 0x13000
   110b0:	ldr	pc, [ip, #3776]!	; 0xec0

000110b4 <__ctype_b_loc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #77824	; 0x13000
   110bc:	ldr	pc, [ip, #3768]!	; 0xeb8

000110c0 <exit@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #77824	; 0x13000
   110c8:	ldr	pc, [ip, #3760]!	; 0xeb0

000110cc <flock@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #77824	; 0x13000
   110d4:	ldr	pc, [ip, #3752]!	; 0xea8

000110d8 <strtoul@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #3744]!	; 0xea0

000110e4 <strlen@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #3736]!	; 0xe98

000110f0 <strchr@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #3728]!	; 0xe90

000110fc <warnx@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #3720]!	; 0xe88

00011108 <__errno_location@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #3712]!	; 0xe80

00011114 <__cxa_atexit@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #77824	; 0x13000
   1111c:	ldr	pc, [ip, #3704]!	; 0xe78

00011120 <__vasprintf_chk@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #77824	; 0x13000
   11128:	ldr	pc, [ip, #3696]!	; 0xe70

0001112c <fgetc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #77824	; 0x13000
   11134:	ldr	pc, [ip, #3688]!	; 0xe68

00011138 <__printf_chk@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #77824	; 0x13000
   11140:	ldr	pc, [ip, #3680]!	; 0xe60

00011144 <strtod@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #77824	; 0x13000
   1114c:	ldr	pc, [ip, #3672]!	; 0xe58

00011150 <__fprintf_chk@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #77824	; 0x13000
   11158:	ldr	pc, [ip, #3664]!	; 0xe50

0001115c <access@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #77824	; 0x13000
   11164:	ldr	pc, [ip, #3656]!	; 0xe48

00011168 <fclose@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #77824	; 0x13000
   11170:	ldr	pc, [ip, #3648]!	; 0xe40

00011174 <setlocale@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #77824	; 0x13000
   1117c:	ldr	pc, [ip, #3640]!	; 0xe38

00011180 <sigemptyset@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #77824	; 0x13000
   11188:	ldr	pc, [ip, #3632]!	; 0xe30

0001118c <fork@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #77824	; 0x13000
   11194:	ldr	pc, [ip, #3624]!	; 0xe28

00011198 <errx@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #77824	; 0x13000
   111a0:	ldr	pc, [ip, #3616]!	; 0xe20

000111a4 <warn@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #77824	; 0x13000
   111ac:	ldr	pc, [ip, #3608]!	; 0xe18

000111b0 <fputc@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #77824	; 0x13000
   111b8:	ldr	pc, [ip, #3600]!	; 0xe10

000111bc <localeconv@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #77824	; 0x13000
   111c4:	ldr	pc, [ip, #3592]!	; 0xe08

000111c8 <__strtoll_internal@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #77824	; 0x13000
   111d0:	ldr	pc, [ip, #3584]!	; 0xe00

000111d4 <clock_gettime@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #77824	; 0x13000
   111dc:	ldr	pc, [ip, #3576]!	; 0xdf8

000111e0 <bindtextdomain@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #77824	; 0x13000
   111e8:	ldr	pc, [ip, #3568]!	; 0xdf0

000111ec <fputs@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #77824	; 0x13000
   111f4:	ldr	pc, [ip, #3560]!	; 0xde8

000111f8 <strncmp@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #77824	; 0x13000
   11200:	ldr	pc, [ip, #3552]!	; 0xde0

00011204 <abort@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #77824	; 0x13000
   1120c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011210 <close@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #77824	; 0x13000
   11218:	ldr	pc, [ip, #3536]!	; 0xdd0

0001121c <__snprintf_chk@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #77824	; 0x13000
   11224:	ldr	pc, [ip, #3528]!	; 0xdc8

00011228 <strspn@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #77824	; 0x13000
   11230:	ldr	pc, [ip, #3520]!	; 0xdc0

Disassembly of section .text:

00011238 <.text>:
   11238:	ldr	r3, [pc, #2516]	; 11c14 <strspn@plt+0x9ec>
   1123c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11240:	sub	sp, sp, #100	; 0x64
   11244:	ldr	r3, [r3]
   11248:	mov	r4, r0
   1124c:	mov	r5, r1
   11250:	mov	r6, #0
   11254:	ldr	r1, [pc, #2492]	; 11c18 <strspn@plt+0x9f0>
   11258:	mov	r0, #6
   1125c:	str	r3, [sp, #92]	; 0x5c
   11260:	str	r6, [sp, #32]
   11264:	bl	11174 <setlocale@plt>
   11268:	ldr	r1, [pc, #2476]	; 11c1c <strspn@plt+0x9f4>
   1126c:	ldr	r0, [pc, #2476]	; 11c20 <strspn@plt+0x9f8>
   11270:	bl	111e0 <bindtextdomain@plt>
   11274:	ldr	r0, [pc, #2468]	; 11c20 <strspn@plt+0x9f8>
   11278:	bl	11000 <textdomain@plt>
   1127c:	ldr	r0, [pc, #2464]	; 11c24 <strspn@plt+0x9fc>
   11280:	bl	14430 <strspn@plt+0x3208>
   11284:	mov	r0, #64	; 0x40
   11288:	bl	12568 <strspn@plt+0x1340>
   1128c:	cmp	r4, #1
   11290:	ble	11bec <strspn@plt+0x9c4>
   11294:	ldr	r3, [pc, #2444]	; 11c28 <strspn@plt+0xa00>
   11298:	mov	sl, r6
   1129c:	str	r6, [sp, #60]	; 0x3c
   112a0:	str	r6, [r3]
   112a4:	str	r6, [sp, #64]	; 0x40
   112a8:	str	r6, [sp, #68]	; 0x44
   112ac:	str	r6, [sp, #72]	; 0x48
   112b0:	str	r6, [sp, #12]
   112b4:	str	r6, [sp, #20]
   112b8:	str	r6, [sp, #16]
   112bc:	str	r6, [sp, #8]
   112c0:	ldr	r7, [pc, #2404]	; 11c2c <strspn@plt+0xa04>
   112c4:	ldr	r6, [pc, #2404]	; 11c30 <strspn@plt+0xa08>
   112c8:	ldr	fp, [pc, #2404]	; 11c34 <strspn@plt+0xa0c>
   112cc:	mov	r9, #2
   112d0:	add	r8, sp, #36	; 0x24
   112d4:	mov	r3, #1
   112d8:	str	r3, [sp, #24]
   112dc:	str	r8, [sp]
   112e0:	mov	r3, r7
   112e4:	mov	r2, r6
   112e8:	mov	r1, r5
   112ec:	mov	r0, r4
   112f0:	bl	110a8 <getopt_long@plt>
   112f4:	cmn	r0, #1
   112f8:	beq	114d8 <strspn@plt+0x2b0>
   112fc:	sub	r0, r0, #69	; 0x45
   11300:	cmp	r0, #59	; 0x3b
   11304:	ldrls	pc, [pc, r0, lsl #2]
   11308:	b	11af0 <strspn@plt+0x8c8>
   1130c:	andeq	r1, r1, r8, ror #8
   11310:	andeq	r1, r1, ip, asr r4
   11314:	strdeq	r1, [r1], -r0
   11318:	strdeq	r1, [r1], -r0
   1131c:	strdeq	r1, [r1], -r0
   11320:	strdeq	r1, [r1], -r0
   11324:	strdeq	r1, [r1], -r0
   11328:	strdeq	r1, [r1], -r0
   1132c:	strdeq	r1, [r1], -r0
   11330:	strdeq	r1, [r1], -r0
   11334:	strdeq	r1, [r1], -r0
   11338:	strdeq	r1, [r1], -r0
   1133c:	strdeq	r1, [r1], -r0
   11340:	strdeq	r1, [r1], -r0
   11344:	strdeq	r1, [r1], -r0
   11348:	strdeq	r1, [r1], -r0
   1134c:	strdeq	r1, [r1], -r0
   11350:	andeq	r1, r1, ip, lsr #8
   11354:	strdeq	r1, [r1], -r0
   11358:	strdeq	r1, [r1], -r0
   1135c:	strdeq	r1, [r1], -r0
   11360:	strdeq	r1, [r1], -r0
   11364:	strdeq	r1, [r1], -r0
   11368:	strdeq	r1, [r1], -r0
   1136c:	strdeq	r1, [r1], -r0
   11370:	strdeq	r1, [r1], -r0
   11374:	strdeq	r1, [r1], -r0
   11378:	strdeq	r1, [r1], -r0
   1137c:	strdeq	r1, [r1], -r0
   11380:	strdeq	r1, [r1], -r0
   11384:	strdeq	r1, [r1], -r0
   11388:	strdeq	r1, [r1], -r0
   1138c:	andeq	r1, r1, r4, lsr #8
   11390:	strdeq	r1, [r1], -r0
   11394:	strdeq	r1, [r1], -r0
   11398:	andeq	r1, r1, r0, ror #17
   1139c:	strdeq	r1, [r1], -r0
   113a0:	strdeq	r1, [r1], -r0
   113a4:	strdeq	r1, [r1], -r0
   113a8:	strdeq	r1, [r1], -r0
   113ac:	strdeq	r1, [r1], -r0
   113b0:	andeq	r1, r1, r8, lsl r4
   113b4:	andeq	r1, r1, ip, lsl #8
   113b8:	strdeq	r1, [r1], -r0
   113bc:	strdeq	r1, [r1], -r0
   113c0:	strdeq	r1, [r1], -r0
   113c4:	andeq	r1, r1, r4, lsl #8
   113c8:	strdeq	r1, [r1], -r0
   113cc:	strdeq	r1, [r1], -ip
   113d0:	strdeq	r1, [r1], -r0
   113d4:	andeq	r1, r1, r0, lsr #9
   113d8:	andeq	r1, r1, r4, lsr #8
   113dc:	strdeq	r1, [r1], -r0
   113e0:	strdeq	r1, [r1], -r0
   113e4:	strdeq	r1, [r1], -r0
   113e8:	strdeq	r1, [r1], -r0
   113ec:	strdeq	r1, [r1], -r0
   113f0:	strdeq	r1, [r1], -r0
   113f4:	strdeq	r1, [r1], -r0
   113f8:	muleq	r1, r8, r4
   113fc:	mov	r9, #8
   11400:	b	112dc <strspn@plt+0xb4>
   11404:	mov	r9, #1
   11408:	b	112dc <strspn@plt+0xb4>
   1140c:	mov	r3, #1
   11410:	str	r3, [sp, #20]
   11414:	b	112dc <strspn@plt+0xb4>
   11418:	mov	r3, #4
   1141c:	str	r3, [sp, #16]
   11420:	b	112dc <strspn@plt+0xb4>
   11424:	mov	r9, #2
   11428:	b	112dc <strspn@plt+0xb4>
   1142c:	mov	r2, #5
   11430:	ldr	r1, [pc, #2048]	; 11c38 <strspn@plt+0xa10>
   11434:	mov	r0, #0
   11438:	bl	10fd0 <dcgettext@plt>
   1143c:	ldr	r2, [pc, #2040]	; 11c3c <strspn@plt+0xa14>
   11440:	ldr	r3, [pc, #2040]	; 11c40 <strspn@plt+0xa18>
   11444:	ldr	r2, [r2]
   11448:	mov	r1, r0
   1144c:	mov	r0, #1
   11450:	bl	11138 <__printf_chk@plt>
   11454:	mov	r0, #0
   11458:	bl	110c0 <exit@plt>
   1145c:	mov	r3, #1
   11460:	str	r3, [sp, #12]
   11464:	b	112dc <strspn@plt+0xb4>
   11468:	ldr	r3, [fp]
   1146c:	mov	r2, #5
   11470:	ldr	r1, [pc, #1996]	; 11c44 <strspn@plt+0xa1c>
   11474:	mov	r0, #0
   11478:	str	r3, [sp, #24]
   1147c:	bl	10fd0 <dcgettext@plt>
   11480:	ldr	r3, [sp, #24]
   11484:	mov	r1, r0
   11488:	mov	r0, r3
   1148c:	bl	12ff0 <strspn@plt+0x1dc8>
   11490:	str	r0, [sp, #24]
   11494:	b	112dc <strspn@plt+0xb4>
   11498:	mov	sl, #1
   1149c:	b	112dc <strspn@plt+0xb4>
   114a0:	ldr	r3, [fp]
   114a4:	mov	r2, #5
   114a8:	ldr	r1, [pc, #1944]	; 11c48 <strspn@plt+0xa20>
   114ac:	mov	r0, #0
   114b0:	str	r3, [sp, #8]
   114b4:	bl	10fd0 <dcgettext@plt>
   114b8:	ldr	r3, [sp, #8]
   114bc:	add	r1, sp, #68	; 0x44
   114c0:	mov	r2, r0
   114c4:	mov	r0, r3
   114c8:	bl	13474 <strspn@plt+0x224c>
   114cc:	mov	r3, #1
   114d0:	str	r3, [sp, #8]
   114d4:	b	112dc <strspn@plt+0xb4>
   114d8:	ldr	r3, [sp, #20]
   114dc:	ldr	r2, [sp, #12]
   114e0:	ands	r7, r3, r2
   114e4:	bne	11bd0 <strspn@plt+0x9a8>
   114e8:	ldr	r6, [pc, #1884]	; 11c4c <strspn@plt+0xa24>
   114ec:	ldr	r8, [r6]
   114f0:	add	fp, r8, #1
   114f4:	cmp	fp, r4
   114f8:	blt	11644 <strspn@plt+0x41c>
   114fc:	cmp	r8, r4
   11500:	bge	11b50 <strspn@plt+0x928>
   11504:	mov	r2, #5
   11508:	ldr	r1, [pc, #1856]	; 11c50 <strspn@plt+0xa28>
   1150c:	mov	r0, r7
   11510:	ldr	r4, [r5, r8, lsl #2]
   11514:	bl	10fd0 <dcgettext@plt>
   11518:	mov	r5, r7
   1151c:	mov	r1, r0
   11520:	mov	r0, r4
   11524:	bl	12ff0 <strspn@plt+0x1dc8>
   11528:	str	r7, [sp, #28]
   1152c:	mov	r4, r0
   11530:	ldr	r3, [sp, #8]
   11534:	cmp	r3, #0
   11538:	beq	11558 <strspn@plt+0x330>
   1153c:	ldr	r3, [sp, #68]	; 0x44
   11540:	ldr	r2, [sp, #72]	; 0x48
   11544:	orrs	r3, r3, r2
   11548:	bne	117c4 <strspn@plt+0x59c>
   1154c:	str	r3, [sp, #8]
   11550:	mov	r3, #4
   11554:	str	r3, [sp, #16]
   11558:	cmp	sl, #0
   1155c:	bne	117f8 <strspn@plt+0x5d0>
   11560:	ldr	r3, [sp, #16]
   11564:	ldr	r7, [pc, #1768]	; 11c54 <strspn@plt+0xa2c>
   11568:	orr	r6, r9, r3
   1156c:	mov	r8, #2
   11570:	mov	r1, r6
   11574:	mov	r0, r4
   11578:	bl	110cc <flock@plt>
   1157c:	cmp	r0, #0
   11580:	beq	116f0 <strspn@plt+0x4c8>
   11584:	bl	11108 <__errno_location@plt>
   11588:	ldr	r3, [r0]
   1158c:	mov	fp, r0
   11590:	sub	r3, r3, #4
   11594:	cmp	r3, #7
   11598:	ldrls	pc, [pc, r3, lsl #2]
   1159c:	b	11ac4 <strspn@plt+0x89c>
   115a0:	andeq	r1, r1, r8, lsl r6
   115a4:	andeq	r1, r1, r0, asr #11
   115a8:	andeq	r1, r1, r4, asr #21
   115ac:	andeq	r1, r1, r4, asr #21
   115b0:	andeq	r1, r1, r4, asr #21
   115b4:	andeq	r1, r1, r0, asr #11
   115b8:	andeq	r1, r1, r4, asr #21
   115bc:	ldrdeq	r1, [r1], -r0
   115c0:	ldr	r3, [sp, #32]
   115c4:	tst	r3, #2
   115c8:	bne	11ac4 <strspn@plt+0x89c>
   115cc:	cmp	r9, #1
   115d0:	cmpne	r5, #0
   115d4:	beq	11ac4 <strspn@plt+0x89c>
   115d8:	mov	r1, #6
   115dc:	mov	r0, r5
   115e0:	bl	1115c <access@plt>
   115e4:	cmp	r0, #0
   115e8:	bne	11acc <strspn@plt+0x8a4>
   115ec:	mov	r0, r4
   115f0:	bl	11210 <close@plt>
   115f4:	add	r1, sp, #32
   115f8:	mov	r0, r5
   115fc:	str	r8, [sp, #32]
   11600:	bl	11e10 <strspn@plt+0xbe8>
   11604:	ldr	r3, [sp, #32]
   11608:	tst	r3, #2
   1160c:	mov	r4, r0
   11610:	bne	11570 <strspn@plt+0x348>
   11614:	b	11acc <strspn@plt+0x8a4>
   11618:	ldr	r3, [r7]
   1161c:	cmp	r3, #0
   11620:	beq	11570 <strspn@plt+0x348>
   11624:	cmp	sl, #0
   11628:	beq	118d8 <strspn@plt+0x6b0>
   1162c:	mov	r2, #5
   11630:	ldr	r1, [pc, #1568]	; 11c58 <strspn@plt+0xa30>
   11634:	mov	r0, #0
   11638:	bl	10fd0 <dcgettext@plt>
   1163c:	bl	110fc <warnx@plt>
   11640:	b	118d8 <strspn@plt+0x6b0>
   11644:	ldr	r7, [r5, fp, lsl #2]
   11648:	add	r3, r5, fp, lsl #2
   1164c:	ldr	r1, [pc, #1544]	; 11c5c <strspn@plt+0xa34>
   11650:	mov	r0, r7
   11654:	str	r3, [sp, #28]
   11658:	bl	10f4c <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	beq	11678 <strspn@plt+0x450>
   11664:	mov	r0, r7
   11668:	ldr	r1, [pc, #1520]	; 11c60 <strspn@plt+0xa38>
   1166c:	bl	10f4c <strcmp@plt>
   11670:	cmp	r0, #0
   11674:	bne	116d4 <strspn@plt+0x4ac>
   11678:	add	r8, r8, #3
   1167c:	cmp	r8, r4
   11680:	bne	11b6c <strspn@plt+0x944>
   11684:	ldr	r0, [pc, #1496]	; 11c64 <strspn@plt+0xa3c>
   11688:	bl	1106c <getenv@plt>
   1168c:	cmp	r0, #0
   11690:	str	r0, [sp, #76]	; 0x4c
   11694:	beq	116a4 <strspn@plt+0x47c>
   11698:	ldrsb	r3, [r0]
   1169c:	cmp	r3, #0
   116a0:	bne	116ac <strspn@plt+0x484>
   116a4:	ldr	r3, [pc, #1468]	; 11c68 <strspn@plt+0xa40>
   116a8:	str	r3, [sp, #76]	; 0x4c
   116ac:	ldr	r3, [r6]
   116b0:	ldr	r2, [pc, #1444]	; 11c5c <strspn@plt+0xa34>
   116b4:	add	r3, r3, #2
   116b8:	str	r2, [sp, #80]	; 0x50
   116bc:	ldr	r3, [r5, r3, lsl #2]
   116c0:	add	r2, sp, #76	; 0x4c
   116c4:	str	r3, [sp, #84]	; 0x54
   116c8:	mov	r3, #0
   116cc:	str	r2, [sp, #28]
   116d0:	str	r3, [sp, #88]	; 0x58
   116d4:	ldr	r3, [r6]
   116d8:	add	r1, sp, #32
   116dc:	ldr	r5, [r5, r3, lsl #2]
   116e0:	mov	r0, r5
   116e4:	bl	11e10 <strspn@plt+0xbe8>
   116e8:	mov	r4, r0
   116ec:	b	11530 <strspn@plt+0x308>
   116f0:	ldr	r3, [sp, #8]
   116f4:	cmp	r3, #0
   116f8:	bne	118a4 <strspn@plt+0x67c>
   116fc:	cmp	sl, #0
   11700:	bne	11804 <strspn@plt+0x5dc>
   11704:	ldr	r3, [sp, #28]
   11708:	str	sl, [sp, #40]	; 0x28
   1170c:	cmp	r3, #0
   11710:	beq	11774 <strspn@plt+0x54c>
   11714:	mov	r1, sl
   11718:	mov	r0, #17
   1171c:	bl	10fc4 <signal@plt>
   11720:	ldr	r3, [sp, #12]
   11724:	cmp	r3, #0
   11728:	bne	11bc8 <strspn@plt+0x9a0>
   1172c:	bl	1118c <fork@plt>
   11730:	subs	r5, r0, #0
   11734:	blt	11b98 <strspn@plt+0x970>
   11738:	beq	11bb4 <strspn@plt+0x98c>
   1173c:	mov	r2, #0
   11740:	add	r1, sp, #40	; 0x28
   11744:	mov	r0, r5
   11748:	bl	11030 <waitpid@plt>
   1174c:	cmn	r0, #1
   11750:	beq	11794 <strspn@plt+0x56c>
   11754:	cmp	r5, r0
   11758:	bne	1173c <strspn@plt+0x514>
   1175c:	ldr	r3, [sp, #40]	; 0x28
   11760:	ands	r2, r3, #127	; 0x7f
   11764:	bne	118b0 <strspn@plt+0x688>
   11768:	asr	r3, r3, #8
   1176c:	uxtb	r3, r3
   11770:	str	r3, [sp, #40]	; 0x28
   11774:	ldr	r3, [pc, #1176]	; 11c14 <strspn@plt+0x9ec>
   11778:	ldr	r2, [sp, #92]	; 0x5c
   1177c:	ldr	r0, [sp, #40]	; 0x28
   11780:	ldr	r3, [r3]
   11784:	cmp	r2, r3
   11788:	bne	11b94 <strspn@plt+0x96c>
   1178c:	add	sp, sp, #100	; 0x64
   11790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11794:	bl	11108 <__errno_location@plt>
   11798:	ldr	r3, [r0]
   1179c:	cmp	r3, #4
   117a0:	beq	1173c <strspn@plt+0x514>
   117a4:	mov	r3, #1
   117a8:	mov	r2, #5
   117ac:	ldr	r1, [pc, #1208]	; 11c6c <strspn@plt+0xa44>
   117b0:	mov	r0, #0
   117b4:	str	r3, [sp, #40]	; 0x28
   117b8:	bl	10fd0 <dcgettext@plt>
   117bc:	bl	111a4 <warn@plt>
   117c0:	b	11774 <strspn@plt+0x54c>
   117c4:	add	r1, sp, #60	; 0x3c
   117c8:	ldr	r2, [pc, #1184]	; 11c70 <strspn@plt+0xa48>
   117cc:	ldr	r0, [pc, #1184]	; 11c74 <strspn@plt+0xa4c>
   117d0:	bl	121a4 <strspn@plt+0xf7c>
   117d4:	cmp	r0, #0
   117d8:	beq	11558 <strspn@plt+0x330>
   117dc:	ldr	r1, [pc, #1172]	; 11c78 <strspn@plt+0xa50>
   117e0:	mov	r2, #5
   117e4:	mov	r0, #0
   117e8:	bl	10fd0 <dcgettext@plt>
   117ec:	mov	r1, r0
   117f0:	mov	r0, #71	; 0x47
   117f4:	bl	1100c <err@plt>
   117f8:	add	r0, sp, #44	; 0x2c
   117fc:	bl	12134 <strspn@plt+0xf0c>
   11800:	b	11560 <strspn@plt+0x338>
   11804:	add	r0, sp, #52	; 0x34
   11808:	bl	12134 <strspn@plt+0xf0c>
   1180c:	add	r2, sp, #44	; 0x2c
   11810:	ldr	r5, [sp, #56]	; 0x38
   11814:	ldm	r2, {r2, r3, r6}
   11818:	mov	r0, #0
   1181c:	ldr	r1, [pc, #1112]	; 11c7c <strspn@plt+0xa54>
   11820:	ldr	r7, [pc, #1044]	; 11c3c <strspn@plt+0xa14>
   11824:	subs	r5, r5, r3
   11828:	addmi	r5, r5, #999424	; 0xf4000
   1182c:	sub	r6, r6, r2
   11830:	mov	r2, #5
   11834:	addmi	r5, r5, #576	; 0x240
   11838:	submi	r6, r6, #1
   1183c:	bl	10fd0 <dcgettext@plt>
   11840:	str	r5, [sp]
   11844:	mov	r3, r6
   11848:	ldr	r2, [r7]
   1184c:	mov	r5, #0
   11850:	mov	r1, r0
   11854:	mov	r0, #1
   11858:	bl	11138 <__printf_chk@plt>
   1185c:	ldr	r3, [sp, #28]
   11860:	str	r5, [sp, #40]	; 0x28
   11864:	cmp	r3, r5
   11868:	beq	11774 <strspn@plt+0x54c>
   1186c:	mov	r1, r5
   11870:	mov	r0, #17
   11874:	bl	10fc4 <signal@plt>
   11878:	mov	r0, r5
   1187c:	mov	r2, #5
   11880:	ldr	r1, [pc, #1016]	; 11c80 <strspn@plt+0xa58>
   11884:	bl	10fd0 <dcgettext@plt>
   11888:	ldr	r3, [sp, #28]
   1188c:	ldr	r2, [r7]
   11890:	ldr	r3, [r3]
   11894:	mov	r1, r0
   11898:	mov	r0, #1
   1189c:	bl	11138 <__printf_chk@plt>
   118a0:	b	11720 <strspn@plt+0x4f8>
   118a4:	ldr	r0, [pc, #968]	; 11c74 <strspn@plt+0xa4c>
   118a8:	bl	122b0 <strspn@plt+0x1088>
   118ac:	b	116fc <strspn@plt+0x4d4>
   118b0:	add	r3, r2, #1
   118b4:	sxtb	r3, r3
   118b8:	cmp	r3, #1
   118bc:	addgt	r2, r2, #128	; 0x80
   118c0:	movle	r3, #71	; 0x47
   118c4:	strgt	r2, [sp, #40]	; 0x28
   118c8:	strle	r3, [sp, #40]	; 0x28
   118cc:	b	11774 <strspn@plt+0x54c>
   118d0:	cmp	sl, #0
   118d4:	bne	11b38 <strspn@plt+0x910>
   118d8:	ldr	r0, [sp, #24]
   118dc:	bl	110c0 <exit@plt>
   118e0:	ldr	r4, [pc, #924]	; 11c84 <strspn@plt+0xa5c>
   118e4:	mov	r2, #5
   118e8:	ldr	r1, [pc, #920]	; 11c88 <strspn@plt+0xa60>
   118ec:	mov	r0, #0
   118f0:	bl	10fd0 <dcgettext@plt>
   118f4:	ldr	r1, [r4]
   118f8:	bl	111ec <fputs@plt>
   118fc:	mov	r2, #5
   11900:	ldr	r1, [pc, #900]	; 11c8c <strspn@plt+0xa64>
   11904:	mov	r0, #0
   11908:	bl	10fd0 <dcgettext@plt>
   1190c:	ldr	r3, [pc, #808]	; 11c3c <strspn@plt+0xa14>
   11910:	ldr	r2, [r3]
   11914:	mov	r1, r0
   11918:	mov	r0, #1
   1191c:	bl	11138 <__printf_chk@plt>
   11920:	ldr	r1, [r4]
   11924:	mov	r0, #10
   11928:	bl	111b0 <fputc@plt>
   1192c:	mov	r2, #5
   11930:	ldr	r1, [pc, #856]	; 11c90 <strspn@plt+0xa68>
   11934:	mov	r0, #0
   11938:	bl	10fd0 <dcgettext@plt>
   1193c:	ldr	r1, [r4]
   11940:	bl	111ec <fputs@plt>
   11944:	mov	r2, #5
   11948:	ldr	r1, [pc, #836]	; 11c94 <strspn@plt+0xa6c>
   1194c:	mov	r0, #0
   11950:	bl	10fd0 <dcgettext@plt>
   11954:	ldr	r1, [r4]
   11958:	bl	111ec <fputs@plt>
   1195c:	mov	r2, #5
   11960:	ldr	r1, [pc, #816]	; 11c98 <strspn@plt+0xa70>
   11964:	mov	r0, #0
   11968:	bl	10fd0 <dcgettext@plt>
   1196c:	ldr	r1, [r4]
   11970:	bl	111ec <fputs@plt>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #796]	; 11c9c <strspn@plt+0xa74>
   1197c:	mov	r0, #0
   11980:	bl	10fd0 <dcgettext@plt>
   11984:	ldr	r1, [r4]
   11988:	bl	111ec <fputs@plt>
   1198c:	mov	r2, #5
   11990:	ldr	r1, [pc, #776]	; 11ca0 <strspn@plt+0xa78>
   11994:	mov	r0, #0
   11998:	bl	10fd0 <dcgettext@plt>
   1199c:	ldr	r1, [r4]
   119a0:	bl	111ec <fputs@plt>
   119a4:	mov	r2, #5
   119a8:	ldr	r1, [pc, #756]	; 11ca4 <strspn@plt+0xa7c>
   119ac:	mov	r0, #0
   119b0:	bl	10fd0 <dcgettext@plt>
   119b4:	ldr	r1, [r4]
   119b8:	bl	111ec <fputs@plt>
   119bc:	mov	r2, #5
   119c0:	ldr	r1, [pc, #736]	; 11ca8 <strspn@plt+0xa80>
   119c4:	mov	r0, #0
   119c8:	bl	10fd0 <dcgettext@plt>
   119cc:	ldr	r1, [r4]
   119d0:	bl	111ec <fputs@plt>
   119d4:	mov	r2, #5
   119d8:	ldr	r1, [pc, #716]	; 11cac <strspn@plt+0xa84>
   119dc:	mov	r0, #0
   119e0:	bl	10fd0 <dcgettext@plt>
   119e4:	ldr	r1, [r4]
   119e8:	bl	111ec <fputs@plt>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #696]	; 11cb0 <strspn@plt+0xa88>
   119f4:	mov	r0, #0
   119f8:	bl	10fd0 <dcgettext@plt>
   119fc:	ldr	r1, [r4]
   11a00:	bl	111ec <fputs@plt>
   11a04:	mov	r2, #5
   11a08:	ldr	r1, [pc, #676]	; 11cb4 <strspn@plt+0xa8c>
   11a0c:	mov	r0, #0
   11a10:	bl	10fd0 <dcgettext@plt>
   11a14:	ldr	r1, [r4]
   11a18:	bl	111ec <fputs@plt>
   11a1c:	mov	r2, #5
   11a20:	ldr	r1, [pc, #656]	; 11cb8 <strspn@plt+0xa90>
   11a24:	mov	r0, #0
   11a28:	bl	10fd0 <dcgettext@plt>
   11a2c:	ldr	r1, [r4]
   11a30:	bl	111ec <fputs@plt>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #636]	; 11cbc <strspn@plt+0xa94>
   11a3c:	mov	r0, #0
   11a40:	bl	10fd0 <dcgettext@plt>
   11a44:	ldr	r1, [r4]
   11a48:	bl	111ec <fputs@plt>
   11a4c:	ldr	r1, [r4]
   11a50:	mov	r0, #10
   11a54:	bl	111b0 <fputc@plt>
   11a58:	mov	r2, #5
   11a5c:	ldr	r1, [pc, #604]	; 11cc0 <strspn@plt+0xa98>
   11a60:	mov	r0, #0
   11a64:	bl	10fd0 <dcgettext@plt>
   11a68:	mov	r2, #5
   11a6c:	ldr	r1, [pc, #592]	; 11cc4 <strspn@plt+0xa9c>
   11a70:	mov	r4, r0
   11a74:	mov	r0, #0
   11a78:	bl	10fd0 <dcgettext@plt>
   11a7c:	ldr	r2, [pc, #580]	; 11cc8 <strspn@plt+0xaa0>
   11a80:	mov	r3, r4
   11a84:	str	r2, [sp]
   11a88:	ldr	r1, [pc, #572]	; 11ccc <strspn@plt+0xaa4>
   11a8c:	ldr	r2, [pc, #572]	; 11cd0 <strspn@plt+0xaa8>
   11a90:	str	r0, [sp, #4]
   11a94:	mov	r0, #1
   11a98:	bl	11138 <__printf_chk@plt>
   11a9c:	mov	r2, #5
   11aa0:	ldr	r1, [pc, #556]	; 11cd4 <strspn@plt+0xaac>
   11aa4:	mov	r0, #0
   11aa8:	bl	10fd0 <dcgettext@plt>
   11aac:	ldr	r2, [pc, #548]	; 11cd8 <strspn@plt+0xab0>
   11ab0:	mov	r1, r0
   11ab4:	mov	r0, #1
   11ab8:	bl	11138 <__printf_chk@plt>
   11abc:	mov	r0, #0
   11ac0:	bl	110c0 <exit@plt>
   11ac4:	cmp	r5, #0
   11ac8:	beq	11b28 <strspn@plt+0x900>
   11acc:	mov	r1, r5
   11ad0:	ldr	r0, [pc, #516]	; 11cdc <strspn@plt+0xab4>
   11ad4:	bl	111a4 <warn@plt>
   11ad8:	ldr	r3, [fp]
   11adc:	cmp	r3, #12
   11ae0:	cmpne	r3, #37	; 0x25
   11ae4:	moveq	r0, #71	; 0x47
   11ae8:	movne	r0, #65	; 0x41
   11aec:	bl	110c0 <exit@plt>
   11af0:	ldr	r3, [pc, #488]	; 11ce0 <strspn@plt+0xab8>
   11af4:	ldr	r1, [pc, #488]	; 11ce4 <strspn@plt+0xabc>
   11af8:	mov	r2, #5
   11afc:	mov	r0, #0
   11b00:	ldr	r4, [r3]
   11b04:	bl	10fd0 <dcgettext@plt>
   11b08:	ldr	r3, [pc, #300]	; 11c3c <strspn@plt+0xa14>
   11b0c:	mov	r1, #1
   11b10:	ldr	r3, [r3]
   11b14:	mov	r2, r0
   11b18:	mov	r0, r4
   11b1c:	bl	11150 <__fprintf_chk@plt>
   11b20:	mov	r0, #64	; 0x40
   11b24:	bl	110c0 <exit@plt>
   11b28:	mov	r1, r4
   11b2c:	ldr	r0, [pc, #436]	; 11ce8 <strspn@plt+0xac0>
   11b30:	bl	111a4 <warn@plt>
   11b34:	b	11ad8 <strspn@plt+0x8b0>
   11b38:	mov	r2, #5
   11b3c:	ldr	r1, [pc, #424]	; 11cec <strspn@plt+0xac4>
   11b40:	mov	r0, #0
   11b44:	bl	10fd0 <dcgettext@plt>
   11b48:	bl	110fc <warnx@plt>
   11b4c:	b	118d8 <strspn@plt+0x6b0>
   11b50:	ldr	r1, [pc, #408]	; 11cf0 <strspn@plt+0xac8>
   11b54:	mov	r0, r7
   11b58:	mov	r2, #5
   11b5c:	bl	10fd0 <dcgettext@plt>
   11b60:	mov	r1, r0
   11b64:	mov	r0, #64	; 0x40
   11b68:	bl	11198 <errx@plt>
   11b6c:	mov	r2, #5
   11b70:	ldr	r1, [pc, #380]	; 11cf4 <strspn@plt+0xacc>
   11b74:	mov	r0, #0
   11b78:	bl	10fd0 <dcgettext@plt>
   11b7c:	ldr	r3, [r6]
   11b80:	add	r3, r3, #1
   11b84:	ldr	r2, [r5, r3, lsl #2]
   11b88:	mov	r1, r0
   11b8c:	mov	r0, #64	; 0x40
   11b90:	bl	11198 <errx@plt>
   11b94:	bl	10fe8 <__stack_chk_fail@plt>
   11b98:	ldr	r1, [pc, #344]	; 11cf8 <strspn@plt+0xad0>
   11b9c:	ldr	r0, [sp, #12]
   11ba0:	mov	r2, #5
   11ba4:	bl	10fd0 <dcgettext@plt>
   11ba8:	mov	r1, r0
   11bac:	mov	r0, #71	; 0x47
   11bb0:	bl	1100c <err@plt>
   11bb4:	ldr	r3, [sp, #20]
   11bb8:	cmp	r3, #0
   11bbc:	beq	11bc8 <strspn@plt+0x9a0>
   11bc0:	mov	r0, r4
   11bc4:	bl	11210 <close@plt>
   11bc8:	ldr	r0, [sp, #28]
   11bcc:	bl	11ed8 <strspn@plt+0xcb0>
   11bd0:	ldr	r1, [pc, #292]	; 11cfc <strspn@plt+0xad4>
   11bd4:	mov	r2, #5
   11bd8:	mov	r0, #0
   11bdc:	bl	10fd0 <dcgettext@plt>
   11be0:	mov	r1, r0
   11be4:	mov	r0, #64	; 0x40
   11be8:	bl	11198 <errx@plt>
   11bec:	mov	r2, #5
   11bf0:	ldr	r1, [pc, #264]	; 11d00 <strspn@plt+0xad8>
   11bf4:	mov	r0, r6
   11bf8:	bl	10fd0 <dcgettext@plt>
   11bfc:	bl	110fc <warnx@plt>
   11c00:	ldr	r3, [pc, #216]	; 11ce0 <strspn@plt+0xab8>
   11c04:	mov	r0, r6
   11c08:	mov	r2, #5
   11c0c:	ldr	r1, [pc, #208]	; 11ce4 <strspn@plt+0xabc>
   11c10:	b	11b00 <strspn@plt+0x8d8>
   11c14:	andeq	r4, r2, r0, ror #27
   11c18:	andeq	r4, r1, r8, lsr #12
   11c1c:	andeq	r4, r1, r4, ror r5
   11c20:	andeq	r4, r1, r8, lsl #11
   11c24:	andeq	r1, r1, r0, lsr #30
   11c28:	andeq	r5, r2, r0, rrx
   11c2c:	andeq	r4, r1, r4, asr r4
   11c30:	andeq	r4, r1, ip, asr #19
   11c34:	andeq	r5, r2, r0, ror r0
   11c38:	andeq	r4, r1, r0, lsl #12
   11c3c:	andeq	r5, r2, r0, asr r0
   11c40:	andeq	r4, r1, ip, lsl #12
   11c44:	andeq	r4, r1, ip, ror #11
   11c48:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11c4c:	andeq	r5, r2, r8, asr r0
   11c50:	andeq	r4, r1, ip, asr sl
   11c54:	andeq	r5, r2, r8, ror r0
   11c58:	andeq	r4, r1, r4, asr #21
   11c5c:	andeq	r4, r1, r0, lsl sl
   11c60:	andeq	r4, r1, r4, lsl sl
   11c64:	andeq	r4, r1, ip, asr #20
   11c68:	andeq	r4, r1, r4, asr sl
   11c6c:	andeq	r4, r1, r4, lsr #22
   11c70:	strdeq	r1, [r1], -r4
   11c74:	andeq	r5, r2, ip, ror r0
   11c78:	muleq	r1, ip, sl
   11c7c:	andeq	r4, r1, ip, ror #21
   11c80:	andeq	r4, r1, r4, lsr fp
   11c84:	andeq	r5, r2, ip, rrx
   11c88:	andeq	r4, r1, r0, lsr #12
   11c8c:	andeq	r4, r1, ip, lsr #12
   11c90:	andeq	r4, r1, r4, asr #13
   11c94:	andeq	r4, r1, ip, ror #13
   11c98:	strdeq	r4, [r1], -r8
   11c9c:	andeq	r4, r1, r8, lsr #14
   11ca0:	andeq	r4, r1, r4, ror #14
   11ca4:	muleq	r1, r0, r7
   11ca8:	andeq	r4, r1, r4, asr #15
   11cac:	andeq	r4, r1, r4, lsl #16
   11cb0:	andeq	r4, r1, r0, asr r8
   11cb4:	muleq	r1, r8, r8
   11cb8:	andeq	r4, r1, r4, ror #17
   11cbc:	andeq	r4, r1, r0, lsr #18
   11cc0:	andeq	r4, r1, r0, asr r9
   11cc4:	andeq	r4, r1, r4, ror #18
   11cc8:	muleq	r1, r4, r9
   11ccc:	andeq	r4, r1, r0, lsl #19
   11cd0:	andeq	r4, r1, r4, ror r9
   11cd4:	andeq	r4, r1, r4, lsr #19
   11cd8:	andeq	r4, r1, r0, asr #19
   11cdc:	strdeq	r4, [r1], -r0
   11ce0:	andeq	r5, r2, r8, rrx
   11ce4:	andeq	r4, r1, ip, lsr #11
   11ce8:	andeq	r4, r1, r8, ror #21
   11cec:			; <UNDEFINED> instruction: 0x00014ab0
   11cf0:	andeq	r4, r1, r0, ror sl
   11cf4:	andeq	r4, r1, r0, lsr #20
   11cf8:	andeq	r4, r1, r8, lsl fp
   11cfc:	ldrdeq	r4, [r1], -ip
   11d00:	muleq	r1, r4, r5
   11d04:	mov	fp, #0
   11d08:	mov	lr, #0
   11d0c:	pop	{r1}		; (ldr r1, [sp], #4)
   11d10:	mov	r2, sp
   11d14:	push	{r2}		; (str r2, [sp, #-4]!)
   11d18:	push	{r0}		; (str r0, [sp, #-4]!)
   11d1c:	ldr	ip, [pc, #16]	; 11d34 <strspn@plt+0xb0c>
   11d20:	push	{ip}		; (str ip, [sp, #-4]!)
   11d24:	ldr	r0, [pc, #12]	; 11d38 <strspn@plt+0xb10>
   11d28:	ldr	r3, [pc, #12]	; 11d3c <strspn@plt+0xb14>
   11d2c:	bl	11090 <__libc_start_main@plt>
   11d30:	bl	11204 <abort@plt>
   11d34:	andeq	r4, r1, ip, lsr #8
   11d38:	andeq	r1, r1, r8, lsr r2
   11d3c:	andeq	r4, r1, ip, asr #7
   11d40:	ldr	r3, [pc, #20]	; 11d5c <strspn@plt+0xb34>
   11d44:	ldr	r2, [pc, #20]	; 11d60 <strspn@plt+0xb38>
   11d48:	add	r3, pc, r3
   11d4c:	ldr	r2, [r3, r2]
   11d50:	cmp	r2, #0
   11d54:	bxeq	lr
   11d58:	b	1109c <__gmon_start__@plt>
   11d5c:	muleq	r1, ip, r1
   11d60:	andeq	r0, r0, ip, lsl #2
   11d64:	ldr	r0, [pc, #24]	; 11d84 <strspn@plt+0xb5c>
   11d68:	ldr	r3, [pc, #24]	; 11d88 <strspn@plt+0xb60>
   11d6c:	cmp	r3, r0
   11d70:	bxeq	lr
   11d74:	ldr	r3, [pc, #16]	; 11d8c <strspn@plt+0xb64>
   11d78:	cmp	r3, #0
   11d7c:	bxeq	lr
   11d80:	bx	r3
   11d84:	andeq	r5, r2, ip, asr #32
   11d88:	andeq	r5, r2, ip, asr #32
   11d8c:	andeq	r0, r0, r0
   11d90:	ldr	r0, [pc, #36]	; 11dbc <strspn@plt+0xb94>
   11d94:	ldr	r1, [pc, #36]	; 11dc0 <strspn@plt+0xb98>
   11d98:	sub	r1, r1, r0
   11d9c:	asr	r1, r1, #2
   11da0:	add	r1, r1, r1, lsr #31
   11da4:	asrs	r1, r1, #1
   11da8:	bxeq	lr
   11dac:	ldr	r3, [pc, #16]	; 11dc4 <strspn@plt+0xb9c>
   11db0:	cmp	r3, #0
   11db4:	bxeq	lr
   11db8:	bx	r3
   11dbc:	andeq	r5, r2, ip, asr #32
   11dc0:	andeq	r5, r2, ip, asr #32
   11dc4:	andeq	r0, r0, r0
   11dc8:	push	{r4, lr}
   11dcc:	ldr	r4, [pc, #24]	; 11dec <strspn@plt+0xbc4>
   11dd0:	ldrb	r3, [r4]
   11dd4:	cmp	r3, #0
   11dd8:	popne	{r4, pc}
   11ddc:	bl	11d64 <strspn@plt+0xb3c>
   11de0:	mov	r3, #1
   11de4:	strb	r3, [r4]
   11de8:	pop	{r4, pc}
   11dec:	andeq	r5, r2, r4, ror r0
   11df0:	b	11d90 <strspn@plt+0xb68>
   11df4:	ldr	r3, [r1, #8]
   11df8:	cmn	r3, #2
   11dfc:	moveq	r2, #1
   11e00:	ldreq	r3, [pc, #4]	; 11e0c <strspn@plt+0xbe4>
   11e04:	streq	r2, [r3]
   11e08:	bx	lr
   11e0c:	andeq	r5, r2, r8, ror r0
   11e10:	push	{r4, r5, r6, r7, r8, lr}
   11e14:	mov	r5, r1
   11e18:	ldr	r4, [r1]
   11e1c:	mov	r7, r0
   11e20:	bl	11108 <__errno_location@plt>
   11e24:	orr	r4, r4, #320	; 0x140
   11e28:	mov	r3, #0
   11e2c:	mov	r1, r4
   11e30:	ldr	r2, [pc, #152]	; 11ed0 <strspn@plt+0xca8>
   11e34:	str	r3, [r0]
   11e38:	mov	r6, r0
   11e3c:	mov	r0, r7
   11e40:	bl	11060 <open64@plt>
   11e44:	cmp	r0, #0
   11e48:	blt	11e54 <strspn@plt+0xc2c>
   11e4c:	str	r4, [r5]
   11e50:	pop	{r4, r5, r6, r7, r8, pc}
   11e54:	ldr	r3, [r6]
   11e58:	cmp	r3, #21
   11e5c:	beq	11ea8 <strspn@plt+0xc80>
   11e60:	mov	r2, #5
   11e64:	ldr	r1, [pc, #104]	; 11ed4 <strspn@plt+0xcac>
   11e68:	mov	r0, #0
   11e6c:	bl	10fd0 <dcgettext@plt>
   11e70:	mov	r1, r7
   11e74:	bl	111a4 <warn@plt>
   11e78:	ldr	r3, [r6]
   11e7c:	sub	r2, r3, #23
   11e80:	cmp	r3, #12
   11e84:	cmpne	r2, #1
   11e88:	bls	11ec8 <strspn@plt+0xca0>
   11e8c:	bic	r3, r3, #2
   11e90:	cmp	r3, #28
   11e94:	bne	11ea0 <strspn@plt+0xc78>
   11e98:	mov	r0, #73	; 0x49
   11e9c:	bl	110c0 <exit@plt>
   11ea0:	mov	r0, #66	; 0x42
   11ea4:	bl	110c0 <exit@plt>
   11ea8:	mov	r1, #256	; 0x100
   11eac:	mov	r0, r7
   11eb0:	bl	11060 <open64@plt>
   11eb4:	cmp	r0, #0
   11eb8:	blt	11e60 <strspn@plt+0xc38>
   11ebc:	mov	r4, #256	; 0x100
   11ec0:	str	r4, [r5]
   11ec4:	pop	{r4, r5, r6, r7, r8, pc}
   11ec8:	mov	r0, #71	; 0x47
   11ecc:	bl	110c0 <exit@plt>
   11ed0:			; <UNDEFINED> instruction: 0x000001b6
   11ed4:	andeq	r4, r1, r4, lsr r5
   11ed8:	push	{r4, lr}
   11edc:	mov	r1, r0
   11ee0:	mov	r4, r0
   11ee4:	ldr	r0, [r0]
   11ee8:	bl	10fac <execvp@plt>
   11eec:	mov	r2, #5
   11ef0:	ldr	r1, [pc, #36]	; 11f1c <strspn@plt+0xcf4>
   11ef4:	mov	r0, #0
   11ef8:	bl	10fd0 <dcgettext@plt>
   11efc:	ldr	r1, [r4]
   11f00:	bl	111a4 <warn@plt>
   11f04:	bl	11108 <__errno_location@plt>
   11f08:	ldr	r3, [r0]
   11f0c:	cmp	r3, #12
   11f10:	moveq	r0, #71	; 0x47
   11f14:	movne	r0, #69	; 0x45
   11f18:	bl	10f94 <_exit@plt>
   11f1c:	andeq	r4, r1, r0, asr r5
   11f20:	ldr	r3, [pc, #292]	; 1204c <strspn@plt+0xe24>
   11f24:	push	{r4, r5, r6, lr}
   11f28:	ldr	r4, [r3]
   11f2c:	mov	r0, r4
   11f30:	bl	11048 <__fpending@plt>
   11f34:	mov	r6, r0
   11f38:	mov	r0, r4
   11f3c:	bl	10f7c <ferror@plt>
   11f40:	mov	r5, r0
   11f44:	mov	r0, r4
   11f48:	bl	11168 <fclose@plt>
   11f4c:	cmp	r5, #0
   11f50:	mov	r4, r0
   11f54:	bne	11ffc <strspn@plt+0xdd4>
   11f58:	cmp	r0, #0
   11f5c:	beq	11f78 <strspn@plt+0xd50>
   11f60:	bl	11108 <__errno_location@plt>
   11f64:	cmp	r6, #0
   11f68:	ldr	r3, [r0]
   11f6c:	bne	11fd4 <strspn@plt+0xdac>
   11f70:	cmp	r3, #9
   11f74:	bne	11fd4 <strspn@plt+0xdac>
   11f78:	ldr	r3, [pc, #208]	; 12050 <strspn@plt+0xe28>
   11f7c:	ldr	r4, [r3]
   11f80:	mov	r0, r4
   11f84:	bl	11048 <__fpending@plt>
   11f88:	mov	r6, r0
   11f8c:	mov	r0, r4
   11f90:	bl	10f7c <ferror@plt>
   11f94:	mov	r5, r0
   11f98:	mov	r0, r4
   11f9c:	bl	11168 <fclose@plt>
   11fa0:	cmp	r5, #0
   11fa4:	mov	r4, r0
   11fa8:	bne	12030 <strspn@plt+0xe08>
   11fac:	cmp	r0, #0
   11fb0:	popeq	{r4, r5, r6, pc}
   11fb4:	cmp	r6, #0
   11fb8:	bne	11fcc <strspn@plt+0xda4>
   11fbc:	bl	11108 <__errno_location@plt>
   11fc0:	ldr	r3, [r0]
   11fc4:	cmp	r3, #9
   11fc8:	popeq	{r4, r5, r6, pc}
   11fcc:	mov	r0, #1
   11fd0:	bl	10f94 <_exit@plt>
   11fd4:	cmp	r3, #32
   11fd8:	beq	11f78 <strspn@plt+0xd50>
   11fdc:	cmp	r3, #0
   11fe0:	beq	12018 <strspn@plt+0xdf0>
   11fe4:	mov	r2, #5
   11fe8:	ldr	r1, [pc, #100]	; 12054 <strspn@plt+0xe2c>
   11fec:	mov	r0, #0
   11ff0:	bl	10fd0 <dcgettext@plt>
   11ff4:	bl	111a4 <warn@plt>
   11ff8:	b	11fcc <strspn@plt+0xda4>
   11ffc:	bl	11108 <__errno_location@plt>
   12000:	cmp	r4, #0
   12004:	ldr	r3, [r0]
   12008:	bne	11fd4 <strspn@plt+0xdac>
   1200c:	cmp	r3, #32
   12010:	strne	r4, [r0]
   12014:	beq	11f78 <strspn@plt+0xd50>
   12018:	mov	r2, #5
   1201c:	ldr	r1, [pc, #48]	; 12054 <strspn@plt+0xe2c>
   12020:	mov	r0, #0
   12024:	bl	10fd0 <dcgettext@plt>
   12028:	bl	110fc <warnx@plt>
   1202c:	b	11fcc <strspn@plt+0xda4>
   12030:	cmp	r0, #0
   12034:	bne	11fcc <strspn@plt+0xda4>
   12038:	bl	11108 <__errno_location@plt>
   1203c:	ldr	r3, [r0]
   12040:	cmp	r3, #32
   12044:	strne	r4, [r0]
   12048:	b	11fcc <strspn@plt+0xda4>
   1204c:	andeq	r5, r2, ip, rrx
   12050:	andeq	r5, r2, r8, rrx
   12054:	andeq	r4, r1, r8, ror #10
   12058:	push	{r4, r5, lr}
   1205c:	sub	sp, sp, #92	; 0x5c
   12060:	ldr	r4, [pc, #196]	; 1212c <strspn@plt+0xf04>
   12064:	mov	r5, r0
   12068:	mov	r1, #0
   1206c:	ldr	r3, [r4]
   12070:	add	r0, sp, #12
   12074:	str	r3, [sp, #84]	; 0x54
   12078:	bl	1103c <gettimeofday@plt>
   1207c:	cmp	r0, #0
   12080:	beq	120a8 <strspn@plt+0xe80>
   12084:	bl	11108 <__errno_location@plt>
   12088:	ldr	r0, [r0]
   1208c:	rsb	r0, r0, #0
   12090:	ldr	r2, [sp, #84]	; 0x54
   12094:	ldr	r3, [r4]
   12098:	cmp	r2, r3
   1209c:	bne	12128 <strspn@plt+0xf00>
   120a0:	add	sp, sp, #92	; 0x5c
   120a4:	pop	{r4, r5, pc}
   120a8:	add	r1, sp, #4
   120ac:	mov	r0, #7
   120b0:	bl	111d4 <clock_gettime@plt>
   120b4:	cmp	r0, #0
   120b8:	bne	12100 <strspn@plt+0xed8>
   120bc:	ldr	r2, [sp, #8]
   120c0:	ldr	r1, [pc, #104]	; 12130 <strspn@plt+0xf08>
   120c4:	ldr	r3, [sp, #16]
   120c8:	asr	ip, r2, #31
   120cc:	smull	r2, r1, r1, r2
   120d0:	ldr	r2, [sp, #12]
   120d4:	rsb	r1, ip, r1, asr #6
   120d8:	ldr	ip, [sp, #4]
   120dc:	sub	r3, r3, r1
   120e0:	sub	r2, r2, ip
   120e4:	cmp	r3, #0
   120e8:	strd	r2, [r5]
   120ec:	addlt	r3, r3, #999424	; 0xf4000
   120f0:	addlt	r3, r3, #576	; 0x240
   120f4:	sublt	r2, r2, #1
   120f8:	strdlt	r2, [r5]
   120fc:	b	12090 <strspn@plt+0xe68>
   12100:	add	r0, sp, #20
   12104:	bl	11078 <sysinfo@plt>
   12108:	cmp	r0, #0
   1210c:	bne	12084 <strspn@plt+0xe5c>
   12110:	ldr	r3, [sp, #12]
   12114:	ldr	r2, [sp, #20]
   12118:	str	r0, [r5, #4]
   1211c:	sub	r3, r3, r2
   12120:	str	r3, [r5]
   12124:	b	12090 <strspn@plt+0xe68>
   12128:	bl	10fe8 <__stack_chk_fail@plt>
   1212c:	andeq	r4, r2, r0, ror #27
   12130:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12134:	push	{r4, r5, lr}
   12138:	sub	sp, sp, #20
   1213c:	ldr	r4, [pc, #88]	; 1219c <strspn@plt+0xf74>
   12140:	mov	r5, r0
   12144:	add	r1, sp, #4
   12148:	ldr	r3, [r4]
   1214c:	mov	r0, #4
   12150:	str	r3, [sp, #12]
   12154:	bl	111d4 <clock_gettime@plt>
   12158:	cmp	r0, #0
   1215c:	bne	12180 <strspn@plt+0xf58>
   12160:	ldr	r3, [sp, #8]
   12164:	ldr	r2, [pc, #52]	; 121a0 <strspn@plt+0xf78>
   12168:	ldr	r1, [sp, #4]
   1216c:	smull	ip, r2, r2, r3
   12170:	str	r1, [r5]
   12174:	asr	r3, r3, #31
   12178:	rsb	r3, r3, r2, asr #6
   1217c:	str	r3, [r5, #4]
   12180:	ldr	r2, [sp, #12]
   12184:	ldr	r3, [r4]
   12188:	cmp	r2, r3
   1218c:	bne	12198 <strspn@plt+0xf70>
   12190:	add	sp, sp, #20
   12194:	pop	{r4, r5, pc}
   12198:	bl	10fe8 <__stack_chk_fail@plt>
   1219c:	andeq	r4, r2, r0, ror #27
   121a0:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   121a4:	ldr	ip, [r1, #8]
   121a8:	ldr	r3, [pc, #240]	; 122a0 <strspn@plt+0x1078>
   121ac:	push	{r4, r5, r6, r7, lr}
   121b0:	sub	sp, sp, #164	; 0xa4
   121b4:	smull	r3, lr, r3, ip
   121b8:	ldr	r4, [pc, #228]	; 122a4 <strspn@plt+0x107c>
   121bc:	asr	r3, ip, #31
   121c0:	rsb	r3, r3, lr, asr #5
   121c4:	cmp	ip, #0
   121c8:	str	r3, [sp]
   121cc:	addne	r3, r3, r3, lsl #2
   121d0:	mov	r5, r2
   121d4:	addne	r3, r3, r3, lsl #2
   121d8:	ldr	r2, [r1, #12]
   121dc:	subne	r3, ip, r3, lsl #2
   121e0:	ldreq	r3, [pc, #192]	; 122a8 <strspn@plt+0x1080>
   121e4:	rsbne	r1, r3, r3, lsl #5
   121e8:	ldr	r7, [r4]
   121ec:	rsbne	r1, r1, r1, lsl #6
   121f0:	mov	r6, r0
   121f4:	addne	r3, r3, r1, lsl #3
   121f8:	rsb	r1, r2, r2, lsl #5
   121fc:	addne	r3, r3, r3, lsl #2
   12200:	add	r2, r2, r1, lsl #2
   12204:	lslne	r3, r3, #7
   12208:	lsl	r2, r2, #3
   1220c:	add	r0, sp, #20
   12210:	str	r2, [sp, #12]
   12214:	str	r7, [sp, #156]	; 0x9c
   12218:	str	r3, [sp, #4]
   1221c:	str	ip, [sp, #8]
   12220:	bl	11180 <sigemptyset@plt>
   12224:	subs	r2, r0, #0
   12228:	beq	12248 <strspn@plt+0x1020>
   1222c:	mov	r0, #1
   12230:	ldr	r2, [sp, #156]	; 0x9c
   12234:	ldr	r3, [r4]
   12238:	cmp	r2, r3
   1223c:	bne	1229c <strspn@plt+0x1074>
   12240:	add	sp, sp, #164	; 0xa4
   12244:	pop	{r4, r5, r6, r7, pc}
   12248:	mov	r3, #4
   1224c:	add	r1, sp, #16
   12250:	mov	r0, #14
   12254:	str	r5, [sp, #16]
   12258:	str	r3, [sp, #148]	; 0x94
   1225c:	bl	11024 <sigaction@plt>
   12260:	cmp	r0, #0
   12264:	bne	1222c <strspn@plt+0x1004>
   12268:	mov	r2, r6
   1226c:	ldr	r1, [pc, #56]	; 122ac <strspn@plt+0x1084>
   12270:	mov	r0, #1
   12274:	bl	10ff4 <timer_create@plt>
   12278:	subs	r3, r0, #0
   1227c:	bne	1222c <strspn@plt+0x1004>
   12280:	ldr	r0, [r6]
   12284:	mov	r1, r3
   12288:	mov	r2, sp
   1228c:	bl	11018 <timer_settime@plt>
   12290:	adds	r0, r0, #0
   12294:	movne	r0, #1
   12298:	b	12230 <strspn@plt+0x1008>
   1229c:	bl	10fe8 <__stack_chk_fail@plt>
   122a0:	mvnpl	r8, pc, lsl r5
   122a4:	andeq	r4, r2, r0, ror #27
   122a8:	addseq	r9, r8, r0, lsl #13
   122ac:	andeq	r5, r2, r8
   122b0:	ldr	r0, [r0]
   122b4:	b	11054 <timer_delete@plt>
   122b8:	cmp	r0, #0
   122bc:	mov	r3, #0
   122c0:	str	r3, [r1]
   122c4:	bxeq	lr
   122c8:	ldrsb	r2, [r0]
   122cc:	cmp	r2, #47	; 0x2f
   122d0:	bne	1230c <strspn@plt+0x10e4>
   122d4:	ldrsb	r3, [r0, #1]
   122d8:	cmp	r3, #47	; 0x2f
   122dc:	bne	12314 <strspn@plt+0x10ec>
   122e0:	add	r3, r0, #1
   122e4:	b	122f4 <strspn@plt+0x10cc>
   122e8:	ldrsb	r2, [r3]
   122ec:	cmp	r2, #47	; 0x2f
   122f0:	bne	12314 <strspn@plt+0x10ec>
   122f4:	cmp	r3, #0
   122f8:	mov	r0, r3
   122fc:	bxeq	lr
   12300:	ldrsb	r2, [r3], #1
   12304:	cmp	r2, #47	; 0x2f
   12308:	beq	122e8 <strspn@plt+0x10c0>
   1230c:	cmp	r2, #0
   12310:	beq	12350 <strspn@plt+0x1128>
   12314:	mov	r3, #1
   12318:	str	r3, [r1]
   1231c:	ldrsb	r3, [r0, #1]
   12320:	add	r2, r0, #1
   12324:	cmp	r3, #47	; 0x2f
   12328:	cmpne	r3, #0
   1232c:	bxeq	lr
   12330:	rsb	r3, r0, #1
   12334:	add	ip, r2, r3
   12338:	str	ip, [r1]
   1233c:	ldrsb	ip, [r2, #1]!
   12340:	cmp	ip, #0
   12344:	cmpne	ip, #47	; 0x2f
   12348:	bne	12334 <strspn@plt+0x110c>
   1234c:	bx	lr
   12350:	mov	r0, r2
   12354:	bx	lr
   12358:	push	{r4, r5, r6, r7, r8, lr}
   1235c:	mov	r7, r1
   12360:	ldrsb	r1, [r0]
   12364:	cmp	r1, #0
   12368:	movne	r5, r0
   1236c:	movne	r4, #0
   12370:	beq	123dc <strspn@plt+0x11b4>
   12374:	cmp	r1, #92	; 0x5c
   12378:	addne	r6, r5, r4
   1237c:	beq	123ac <strspn@plt+0x1184>
   12380:	mov	r0, r7
   12384:	bl	110f0 <strchr@plt>
   12388:	cmp	r0, #0
   1238c:	bne	123d4 <strspn@plt+0x11ac>
   12390:	ldrsb	r1, [r6, #1]!
   12394:	add	r4, r4, #1
   12398:	mov	r0, r4
   1239c:	cmp	r1, #0
   123a0:	popeq	{r4, r5, r6, r7, r8, pc}
   123a4:	cmp	r1, #92	; 0x5c
   123a8:	bne	12380 <strspn@plt+0x1158>
   123ac:	add	r3, r5, r4
   123b0:	ldrsb	r3, [r3, #1]
   123b4:	cmp	r3, #0
   123b8:	beq	123d4 <strspn@plt+0x11ac>
   123bc:	add	r4, r4, #2
   123c0:	mov	r0, r4
   123c4:	ldrsb	r1, [r5, r4]
   123c8:	cmp	r1, #0
   123cc:	bne	12374 <strspn@plt+0x114c>
   123d0:	pop	{r4, r5, r6, r7, r8, pc}
   123d4:	mov	r0, r4
   123d8:	pop	{r4, r5, r6, r7, r8, pc}
   123dc:	mov	r0, r1
   123e0:	pop	{r4, r5, r6, r7, r8, pc}
   123e4:	ldr	ip, [pc, #244]	; 124e0 <strspn@plt+0x12b8>
   123e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   123ec:	add	ip, pc, ip
   123f0:	ldr	lr, [pc, #236]	; 124e4 <strspn@plt+0x12bc>
   123f4:	sub	sp, sp, #12
   123f8:	mov	r5, #0
   123fc:	ldr	r7, [ip, lr]
   12400:	mov	r4, r0
   12404:	mov	r8, r1
   12408:	ldr	r3, [r7]
   1240c:	mov	r0, ip
   12410:	mov	r9, r2
   12414:	str	r5, [sp]
   12418:	str	r3, [sp, #4]
   1241c:	bl	11108 <__errno_location@plt>
   12420:	cmp	r4, r5
   12424:	str	r5, [r0]
   12428:	beq	12438 <strspn@plt+0x1210>
   1242c:	ldrsb	r3, [r4]
   12430:	cmp	r3, r5
   12434:	bne	12458 <strspn@plt+0x1230>
   12438:	ldr	r1, [pc, #168]	; 124e8 <strspn@plt+0x12c0>
   1243c:	mov	r3, r4
   12440:	add	r1, pc, r1
   12444:	mov	r2, r8
   12448:	ldr	r0, [r1]
   1244c:	ldr	r1, [pc, #152]	; 124ec <strspn@plt+0x12c4>
   12450:	add	r1, pc, r1
   12454:	bl	11198 <errx@plt>
   12458:	mov	r6, r0
   1245c:	mov	r2, r9
   12460:	mov	r3, r5
   12464:	mov	r1, sp
   12468:	mov	r0, r4
   1246c:	bl	10fb8 <__strtoull_internal@plt>
   12470:	ldr	r2, [r6]
   12474:	cmp	r2, r5
   12478:	bne	124b4 <strspn@plt+0x128c>
   1247c:	ldr	r3, [sp]
   12480:	cmp	r3, r4
   12484:	beq	12438 <strspn@plt+0x1210>
   12488:	cmp	r3, r5
   1248c:	beq	1249c <strspn@plt+0x1274>
   12490:	ldrsb	r3, [r3]
   12494:	cmp	r3, r5
   12498:	bne	12438 <strspn@plt+0x1210>
   1249c:	ldr	r2, [sp, #4]
   124a0:	ldr	r3, [r7]
   124a4:	cmp	r2, r3
   124a8:	bne	124dc <strspn@plt+0x12b4>
   124ac:	add	sp, sp, #12
   124b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124b4:	ldr	r3, [pc, #52]	; 124f0 <strspn@plt+0x12c8>
   124b8:	cmp	r2, #34	; 0x22
   124bc:	add	r3, pc, r3
   124c0:	ldr	r0, [r3]
   124c4:	bne	12438 <strspn@plt+0x1210>
   124c8:	ldr	r1, [pc, #36]	; 124f4 <strspn@plt+0x12cc>
   124cc:	mov	r3, r4
   124d0:	mov	r2, r8
   124d4:	add	r1, pc, r1
   124d8:	bl	1100c <err@plt>
   124dc:	bl	10fe8 <__stack_chk_fail@plt>
   124e0:	strdeq	r2, [r1], -r8
   124e4:	andeq	r0, r0, r8, lsl #2
   124e8:	andeq	r2, r1, r0, lsl #24
   124ec:	andeq	r2, r0, r0, ror #14
   124f0:	andeq	r2, r1, r4, lsl #23
   124f4:	ldrdeq	r2, [r0], -ip
   124f8:	push	{r4, lr}
   124fc:	mov	r5, r0
   12500:	mov	r4, r1
   12504:	bl	11108 <__errno_location@plt>
   12508:	ldr	ip, [pc, #32]	; 12530 <strspn@plt+0x1308>
   1250c:	ldr	r1, [pc, #32]	; 12534 <strspn@plt+0x130c>
   12510:	add	ip, pc, ip
   12514:	mov	lr, #34	; 0x22
   12518:	mov	r3, r5
   1251c:	mov	r2, r4
   12520:	add	r1, pc, r1
   12524:	str	lr, [r0]
   12528:	ldr	r0, [ip]
   1252c:	bl	1100c <err@plt>
   12530:	andeq	r2, r1, r0, lsr fp
   12534:	muleq	r0, r0, r6
   12538:	push	{r4, r5, r6, lr}
   1253c:	mov	r4, r0
   12540:	mov	r5, r1
   12544:	bl	123e4 <strspn@plt+0x11bc>
   12548:	mov	r3, #0
   1254c:	mvn	r2, #0
   12550:	cmp	r1, r3
   12554:	cmpeq	r0, r2
   12558:	popls	{r4, r5, r6, pc}
   1255c:	mov	r1, r5
   12560:	mov	r0, r4
   12564:	bl	124f8 <strspn@plt+0x12d0>
   12568:	ldr	r3, [pc, #8]	; 12578 <strspn@plt+0x1350>
   1256c:	add	r3, pc, r3
   12570:	str	r0, [r3]
   12574:	bx	lr
   12578:	ldrdeq	r2, [r1], -r4
   1257c:	ldr	r3, [pc, #1648]	; 12bf4 <strspn@plt+0x19cc>
   12580:	ldr	ip, [pc, #1648]	; 12bf8 <strspn@plt+0x19d0>
   12584:	add	r3, pc, r3
   12588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1258c:	mov	r5, r1
   12590:	ldr	r1, [r3, ip]
   12594:	sub	sp, sp, #52	; 0x34
   12598:	mov	ip, r1
   1259c:	mov	r8, r0
   125a0:	str	r1, [sp, #24]
   125a4:	mov	r0, #0
   125a8:	mov	r1, #0
   125ac:	ldr	r3, [ip]
   125b0:	strd	r0, [r5]
   125b4:	mov	r9, r2
   125b8:	str	r3, [sp, #44]	; 0x2c
   125bc:	bl	11108 <__errno_location@plt>
   125c0:	cmp	r8, #0
   125c4:	mov	r4, r0
   125c8:	beq	127a8 <strspn@plt+0x1580>
   125cc:	ldrsb	fp, [r8]
   125d0:	cmp	fp, #0
   125d4:	beq	127a8 <strspn@plt+0x1580>
   125d8:	bl	110b4 <__ctype_b_loc@plt>
   125dc:	mov	r2, r8
   125e0:	ldr	r1, [r0]
   125e4:	b	125ec <strspn@plt+0x13c4>
   125e8:	ldrsb	fp, [r2, #1]!
   125ec:	uxtb	r3, fp
   125f0:	lsl	r3, r3, #1
   125f4:	ldrh	ip, [r1, r3]
   125f8:	ands	ip, ip, #8192	; 0x2000
   125fc:	bne	125e8 <strspn@plt+0x13c0>
   12600:	cmp	fp, #45	; 0x2d
   12604:	beq	127a8 <strspn@plt+0x1580>
   12608:	add	fp, sp, #40	; 0x28
   1260c:	mov	r3, ip
   12610:	mov	r2, ip
   12614:	str	ip, [r4]
   12618:	mov	r1, fp
   1261c:	mov	r0, r8
   12620:	str	ip, [sp, #40]	; 0x28
   12624:	bl	10fb8 <__strtoull_internal@plt>
   12628:	ldr	sl, [sp, #40]	; 0x28
   1262c:	cmp	sl, r8
   12630:	mov	r2, r0
   12634:	mov	r3, r1
   12638:	ldr	r0, [r4]
   1263c:	strd	r2, [sp, #16]
   12640:	beq	12928 <strspn@plt+0x1700>
   12644:	cmp	r0, #0
   12648:	bne	127d0 <strspn@plt+0x15a8>
   1264c:	cmp	sl, #0
   12650:	beq	1295c <strspn@plt+0x1734>
   12654:	ldrsb	r0, [sl]
   12658:	cmp	r0, #0
   1265c:	beq	12950 <strspn@plt+0x1728>
   12660:	mov	r8, #0
   12664:	mov	r2, #0
   12668:	mov	r3, #0
   1266c:	str	r9, [sp, #32]
   12670:	mov	r6, fp
   12674:	mov	r9, sl
   12678:	mov	r7, r8
   1267c:	mov	sl, r2
   12680:	mov	fp, r3
   12684:	str	r5, [sp, #28]
   12688:	ldrsb	r2, [r9, #1]
   1268c:	cmp	r2, #105	; 0x69
   12690:	beq	12814 <strspn@plt+0x15ec>
   12694:	bic	r1, r2, #32
   12698:	cmp	r1, #66	; 0x42
   1269c:	bne	12934 <strspn@plt+0x170c>
   126a0:	ldrsb	r2, [r9, #2]
   126a4:	cmp	r2, #0
   126a8:	beq	12b18 <strspn@plt+0x18f0>
   126ac:	bl	111bc <localeconv@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	127a8 <strspn@plt+0x1580>
   126b8:	ldr	r2, [r0]
   126bc:	cmp	r2, #0
   126c0:	beq	127a8 <strspn@plt+0x1580>
   126c4:	mov	r0, r2
   126c8:	str	r2, [sp]
   126cc:	bl	110e4 <strlen@plt>
   126d0:	orrs	r3, sl, fp
   126d4:	mov	r5, r0
   126d8:	bne	127a8 <strspn@plt+0x1580>
   126dc:	ldrsb	r1, [r9]
   126e0:	cmp	r1, #0
   126e4:	beq	127a8 <strspn@plt+0x1580>
   126e8:	ldr	r2, [sp]
   126ec:	mov	r1, r9
   126f0:	mov	r0, r2
   126f4:	mov	r2, r5
   126f8:	bl	111f8 <strncmp@plt>
   126fc:	cmp	r0, #0
   12700:	bne	127a8 <strspn@plt+0x1580>
   12704:	ldrsb	r2, [r9, r5]
   12708:	add	r5, r9, r5
   1270c:	cmp	r2, #48	; 0x30
   12710:	bne	12730 <strspn@plt+0x1508>
   12714:	add	r8, r8, #1
   12718:	sub	r1, r8, r5
   1271c:	mov	r3, r5
   12720:	add	r8, r3, r1
   12724:	ldrsb	r2, [r3, #1]!
   12728:	cmp	r2, #48	; 0x30
   1272c:	beq	12720 <strspn@plt+0x14f8>
   12730:	mov	r3, #0
   12734:	str	r7, [r4]
   12738:	mov	r2, r3
   1273c:	mov	r1, r6
   12740:	mov	r0, r5
   12744:	str	r7, [sp, #40]	; 0x28
   12748:	bl	10fb8 <__strtoull_internal@plt>
   1274c:	ldr	r9, [sp, #40]	; 0x28
   12750:	cmp	r9, r5
   12754:	mov	sl, r0
   12758:	mov	fp, r1
   1275c:	beq	12924 <strspn@plt+0x16fc>
   12760:	ldr	ip, [r4]
   12764:	cmp	ip, #0
   12768:	beq	12800 <strspn@plt+0x15d8>
   1276c:	subs	r3, r0, #1
   12770:	str	r3, [sp, #8]
   12774:	sbc	r3, r1, #0
   12778:	str	r3, [sp, #12]
   1277c:	ldrd	r2, [sp, #8]
   12780:	mvn	r1, #0
   12784:	mvn	r0, #2
   12788:	cmp	r3, r1
   1278c:	cmpeq	r2, r0
   12790:	bhi	12b54 <strspn@plt+0x192c>
   12794:	cmp	r9, #0
   12798:	beq	127a8 <strspn@plt+0x1580>
   1279c:	ldrsb	r2, [r9]
   127a0:	cmp	r2, #0
   127a4:	bne	12688 <strspn@plt+0x1460>
   127a8:	mov	r3, #22
   127ac:	mvn	r0, #21
   127b0:	str	r3, [r4]
   127b4:	ldr	r3, [sp, #24]
   127b8:	ldr	r2, [sp, #44]	; 0x2c
   127bc:	ldr	r3, [r3]
   127c0:	cmp	r2, r3
   127c4:	bne	12bf0 <strspn@plt+0x19c8>
   127c8:	add	sp, sp, #52	; 0x34
   127cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127d0:	subs	r6, r2, #1
   127d4:	sbc	r7, r3, #0
   127d8:	mvn	r3, #0
   127dc:	mvn	r2, #2
   127e0:	cmp	r7, r3
   127e4:	cmpeq	r6, r2
   127e8:	bls	1264c <strspn@plt+0x1424>
   127ec:	rsb	r0, r0, #0
   127f0:	cmp	r0, #0
   127f4:	bge	127b4 <strspn@plt+0x158c>
   127f8:	rsb	r3, r0, #0
   127fc:	b	127b0 <strspn@plt+0x1588>
   12800:	orrs	r3, sl, fp
   12804:	bne	12794 <strspn@plt+0x156c>
   12808:	ldrsb	r2, [r9, #1]
   1280c:	cmp	r2, #105	; 0x69
   12810:	bne	12694 <strspn@plt+0x146c>
   12814:	ldrsb	r2, [r9, #2]
   12818:	bic	r2, r2, #32
   1281c:	cmp	r2, #66	; 0x42
   12820:	bne	126ac <strspn@plt+0x1484>
   12824:	ldrsb	r2, [r9, #3]
   12828:	cmp	r2, #0
   1282c:	bne	126ac <strspn@plt+0x1484>
   12830:	strd	sl, [sp]
   12834:	mov	sl, r9
   12838:	ldr	r9, [sp, #32]
   1283c:	mov	r3, #1024	; 0x400
   12840:	ldr	r5, [sp, #28]
   12844:	str	r3, [sp, #28]
   12848:	ldrsb	r7, [sl]
   1284c:	ldr	r6, [pc, #936]	; 12bfc <strspn@plt+0x19d4>
   12850:	add	r6, pc, r6
   12854:	mov	r1, r7
   12858:	mov	r0, r6
   1285c:	bl	110f0 <strchr@plt>
   12860:	cmp	r0, #0
   12864:	beq	12b34 <strspn@plt+0x190c>
   12868:	sub	ip, r0, r6
   1286c:	add	fp, ip, #1
   12870:	cmp	fp, #0
   12874:	beq	12940 <strspn@plt+0x1718>
   12878:	ldr	r3, [sp, #20]
   1287c:	ldr	r6, [sp, #28]
   12880:	cmp	r3, #0
   12884:	mov	r0, #0
   12888:	asr	r7, r6, #31
   1288c:	mov	r1, #0
   12890:	bne	12b90 <strspn@plt+0x1968>
   12894:	orrs	r3, r0, r1
   12898:	bne	12984 <strspn@plt+0x175c>
   1289c:	str	fp, [sp, #32]
   128a0:	sub	ip, ip, #1
   128a4:	str	r8, [sp, #36]	; 0x24
   128a8:	mov	fp, r4
   128ac:	ldrd	r0, [sp, #16]
   128b0:	mov	lr, r5
   128b4:	mov	sl, r9
   128b8:	b	128c8 <strspn@plt+0x16a0>
   128bc:	orrs	r3, r4, r5
   128c0:	sub	ip, ip, #1
   128c4:	bne	1296c <strspn@plt+0x1744>
   128c8:	mul	r2, r0, r7
   128cc:	cmn	ip, #1
   128d0:	mla	r2, r6, r1, r2
   128d4:	umull	r0, r1, r0, r6
   128d8:	add	r2, r2, r1
   128dc:	mov	r1, r2
   128e0:	beq	12af8 <strspn@plt+0x18d0>
   128e4:	cmp	r2, #0
   128e8:	mov	r4, #0
   128ec:	mov	r5, #0
   128f0:	beq	128bc <strspn@plt+0x1694>
   128f4:	umull	r2, r3, r6, r2
   128f8:	umull	r8, r9, r0, r6
   128fc:	strd	r2, [sp, #8]
   12900:	mov	r8, r9
   12904:	ldr	r3, [sp, #12]
   12908:	adds	r8, r2, r8
   1290c:	mov	r2, #0
   12910:	adc	r3, r3, r2
   12914:	cmp	r3, r2
   12918:	movne	r4, #1
   1291c:	movne	r5, #0
   12920:	b	128bc <strspn@plt+0x1694>
   12924:	ldr	r0, [r4]
   12928:	cmp	r0, #0
   1292c:	beq	127a8 <strspn@plt+0x1580>
   12930:	b	127ec <strspn@plt+0x15c4>
   12934:	cmp	r2, #0
   12938:	bne	126ac <strspn@plt+0x1484>
   1293c:	b	12830 <strspn@plt+0x1608>
   12940:	cmp	r9, #0
   12944:	movne	r0, fp
   12948:	bne	12990 <strspn@plt+0x1768>
   1294c:	mov	r0, r9
   12950:	ldrd	r2, [sp, #16]
   12954:	strd	r2, [r5]
   12958:	b	127b4 <strspn@plt+0x158c>
   1295c:	ldrd	r2, [sp, #16]
   12960:	mov	r0, sl
   12964:	strd	r2, [r5]
   12968:	b	127b4 <strspn@plt+0x158c>
   1296c:	mov	r4, fp
   12970:	ldr	r8, [sp, #36]	; 0x24
   12974:	ldr	fp, [sp, #32]
   12978:	mov	r5, lr
   1297c:	mov	r9, sl
   12980:	strd	r0, [sp, #16]
   12984:	mvn	r0, #33	; 0x21
   12988:	cmp	r9, #0
   1298c:	beq	12994 <strspn@plt+0x176c>
   12990:	str	fp, [r9]
   12994:	ldrd	r2, [sp]
   12998:	mov	r1, r2
   1299c:	orrs	r3, r1, r3
   129a0:	movne	r3, #1
   129a4:	moveq	r3, #0
   129a8:	cmp	fp, #0
   129ac:	moveq	r3, #0
   129b0:	cmp	r3, #0
   129b4:	beq	12aec <strspn@plt+0x18c4>
   129b8:	ldr	r3, [pc, #576]	; 12c00 <strspn@plt+0x19d8>
   129bc:	ldr	r1, [pc, #576]	; 12c04 <strspn@plt+0x19dc>
   129c0:	umull	ip, r3, r3, r8
   129c4:	smull	ip, r1, r1, r8
   129c8:	lsr	r3, r3, #1
   129cc:	rsb	r1, r1, r8, asr #31
   129d0:	add	r3, r3, r3, lsl #1
   129d4:	add	r1, r1, fp
   129d8:	subs	r3, r8, r3
   129dc:	sub	r6, r1, #1
   129e0:	bne	12b5c <strspn@plt+0x1934>
   129e4:	ldrd	r8, [sp]
   129e8:	adds	r3, r8, r8
   129ec:	adc	r2, r9, r9
   129f0:	adds	r3, r3, r8
   129f4:	adc	r2, r2, r9
   129f8:	lsl	ip, r3, #5
   129fc:	lsl	lr, r2, #5
   12a00:	orr	lr, lr, r3, lsr #27
   12a04:	adds	r3, r3, ip
   12a08:	adc	r2, r2, lr
   12a0c:	adds	r3, r8, r3
   12a10:	str	r3, [sp]
   12a14:	ldr	r3, [sp, #4]
   12a18:	adc	r3, r3, r2
   12a1c:	str	r3, [sp, #4]
   12a20:	cmp	r6, #0
   12a24:	blt	127a8 <strspn@plt+0x1580>
   12a28:	beq	12ad0 <strspn@plt+0x18a8>
   12a2c:	ldr	r3, [sp, #4]
   12a30:	ldr	r8, [sp, #28]
   12a34:	cmp	r3, #0
   12a38:	mov	r6, #0
   12a3c:	asr	r9, r8, #31
   12a40:	mov	r7, #0
   12a44:	bne	12bc4 <strspn@plt+0x199c>
   12a48:	orrs	r3, r6, r7
   12a4c:	bne	12ad0 <strspn@plt+0x18a8>
   12a50:	sub	r1, r1, #3
   12a54:	ldrd	r2, [sp]
   12a58:	mov	lr, r4
   12a5c:	str	r5, [sp, #8]
   12a60:	b	12a70 <strspn@plt+0x1848>
   12a64:	orrs	ip, r6, r7
   12a68:	sub	r1, r1, #1
   12a6c:	bne	12ac4 <strspn@plt+0x189c>
   12a70:	mul	ip, r2, r9
   12a74:	cmn	r1, #1
   12a78:	mla	ip, r8, r3, ip
   12a7c:	umull	r2, r3, r2, r8
   12a80:	add	ip, ip, r3
   12a84:	mov	r3, ip
   12a88:	beq	12ac4 <strspn@plt+0x189c>
   12a8c:	cmp	ip, #0
   12a90:	mov	r6, #0
   12a94:	mov	r7, #0
   12a98:	beq	12a64 <strspn@plt+0x183c>
   12a9c:	umull	sl, fp, r2, r8
   12aa0:	umull	r4, r5, r8, ip
   12aa4:	mov	ip, fp
   12aa8:	adds	ip, r4, ip
   12aac:	mov	ip, #0
   12ab0:	adc	ip, r5, ip
   12ab4:	cmp	ip, #0
   12ab8:	movne	r6, #1
   12abc:	movne	r7, #0
   12ac0:	b	12a64 <strspn@plt+0x183c>
   12ac4:	ldr	r5, [sp, #8]
   12ac8:	mov	r4, lr
   12acc:	strd	r2, [sp]
   12ad0:	ldrd	r2, [sp]
   12ad4:	ldr	r1, [sp, #16]
   12ad8:	adds	r1, r1, r2
   12adc:	str	r1, [sp, #16]
   12ae0:	ldr	r1, [sp, #20]
   12ae4:	adc	r3, r1, r3
   12ae8:	str	r3, [sp, #20]
   12aec:	ldrd	r2, [sp, #16]
   12af0:	strd	r2, [r5]
   12af4:	b	127f0 <strspn@plt+0x15c8>
   12af8:	mov	r4, fp
   12afc:	strd	r0, [sp, #16]
   12b00:	ldr	r8, [sp, #36]	; 0x24
   12b04:	ldr	fp, [sp, #32]
   12b08:	mov	r5, lr
   12b0c:	mov	r9, sl
   12b10:	mov	r0, #0
   12b14:	b	12988 <strspn@plt+0x1760>
   12b18:	mov	r3, #1000	; 0x3e8
   12b1c:	strd	sl, [sp]
   12b20:	ldr	r5, [sp, #28]
   12b24:	mov	sl, r9
   12b28:	str	r3, [sp, #28]
   12b2c:	ldr	r9, [sp, #32]
   12b30:	b	12848 <strspn@plt+0x1620>
   12b34:	ldr	r6, [pc, #204]	; 12c08 <strspn@plt+0x19e0>
   12b38:	mov	r1, r7
   12b3c:	add	r6, pc, r6
   12b40:	mov	r0, r6
   12b44:	bl	110f0 <strchr@plt>
   12b48:	cmp	r0, #0
   12b4c:	bne	12868 <strspn@plt+0x1640>
   12b50:	b	127a8 <strspn@plt+0x1580>
   12b54:	mov	r0, ip
   12b58:	b	127ec <strspn@plt+0x15c4>
   12b5c:	cmp	r3, #1
   12b60:	bne	12a20 <strspn@plt+0x17f8>
   12b64:	ldrd	r8, [sp]
   12b68:	lsl	r2, r9, #2
   12b6c:	lsl	r3, r8, #2
   12b70:	adds	r3, r3, r8
   12b74:	orr	r2, r2, r8, lsr #30
   12b78:	adc	r2, r2, r9
   12b7c:	adds	r3, r3, r3
   12b80:	str	r3, [sp]
   12b84:	adc	r3, r2, r2
   12b88:	str	r3, [sp, #4]
   12b8c:	b	12a20 <strspn@plt+0x17f8>
   12b90:	ldr	lr, [sp, #28]
   12b94:	ldr	r3, [sp, #16]
   12b98:	ldr	sl, [sp, #20]
   12b9c:	umull	r2, r3, r3, lr
   12ba0:	str	r3, [sp, #8]
   12ba4:	mov	r3, #0
   12ba8:	str	r3, [sp, #12]
   12bac:	ldrd	r2, [sp, #8]
   12bb0:	umlal	r2, r3, sl, lr
   12bb4:	cmp	r3, #0
   12bb8:	movne	r0, #1
   12bbc:	movne	r1, #0
   12bc0:	b	12894 <strspn@plt+0x166c>
   12bc4:	ldr	r3, [sp]
   12bc8:	ldr	ip, [sp, #28]
   12bcc:	ldr	lr, [sp, #4]
   12bd0:	umull	sl, fp, r3, ip
   12bd4:	mov	r3, #0
   12bd8:	mov	r2, fp
   12bdc:	umlal	r2, r3, lr, ip
   12be0:	cmp	r3, #0
   12be4:	movne	r6, #1
   12be8:	movne	r7, #0
   12bec:	b	12a48 <strspn@plt+0x1820>
   12bf0:	bl	10fe8 <__stack_chk_fail@plt>
   12bf4:	andeq	r2, r1, r0, ror #18
   12bf8:	andeq	r0, r0, r8, lsl #2
   12bfc:	andeq	r2, r0, ip, ror #6
   12c00:	bge	feabd6b4 <optarg@@GLIBC_2.4+0xfea98644>
   12c04:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12c08:	andeq	r2, r0, ip, lsl #1
   12c0c:	mov	r2, #0
   12c10:	b	1257c <strspn@plt+0x1354>
   12c14:	push	{r4, r5, r6, lr}
   12c18:	subs	r5, r0, #0
   12c1c:	mov	r6, r1
   12c20:	beq	12c8c <strspn@plt+0x1a64>
   12c24:	ldrsb	r4, [r5]
   12c28:	cmp	r4, #0
   12c2c:	beq	12ca0 <strspn@plt+0x1a78>
   12c30:	bl	110b4 <__ctype_b_loc@plt>
   12c34:	mov	r3, r5
   12c38:	ldr	r0, [r0]
   12c3c:	b	12c54 <strspn@plt+0x1a2c>
   12c40:	adds	r3, r3, #1
   12c44:	beq	12c8c <strspn@plt+0x1a64>
   12c48:	ldrsb	r4, [r3]
   12c4c:	cmp	r4, #0
   12c50:	beq	12c68 <strspn@plt+0x1a40>
   12c54:	uxtb	r4, r4
   12c58:	lsl	r4, r4, #1
   12c5c:	ldrh	r2, [r0, r4]
   12c60:	tst	r2, #2048	; 0x800
   12c64:	bne	12c40 <strspn@plt+0x1a18>
   12c68:	cmp	r6, #0
   12c6c:	strne	r3, [r6]
   12c70:	cmp	r5, r3
   12c74:	bcs	12c98 <strspn@plt+0x1a70>
   12c78:	ldrsb	r3, [r3]
   12c7c:	cmp	r3, #0
   12c80:	bne	12c98 <strspn@plt+0x1a70>
   12c84:	mov	r0, #1
   12c88:	pop	{r4, r5, r6, pc}
   12c8c:	cmp	r6, #0
   12c90:	movne	r3, #0
   12c94:	strne	r3, [r6]
   12c98:	mov	r0, #0
   12c9c:	pop	{r4, r5, r6, pc}
   12ca0:	cmp	r1, #0
   12ca4:	strne	r5, [r1]
   12ca8:	b	12c98 <strspn@plt+0x1a70>
   12cac:	push	{r4, r5, r6, lr}
   12cb0:	subs	r5, r0, #0
   12cb4:	mov	r6, r1
   12cb8:	beq	12d24 <strspn@plt+0x1afc>
   12cbc:	ldrsb	r4, [r5]
   12cc0:	cmp	r4, #0
   12cc4:	beq	12d38 <strspn@plt+0x1b10>
   12cc8:	bl	110b4 <__ctype_b_loc@plt>
   12ccc:	mov	r3, r5
   12cd0:	ldr	r0, [r0]
   12cd4:	b	12cec <strspn@plt+0x1ac4>
   12cd8:	adds	r3, r3, #1
   12cdc:	beq	12d24 <strspn@plt+0x1afc>
   12ce0:	ldrsb	r4, [r3]
   12ce4:	cmp	r4, #0
   12ce8:	beq	12d00 <strspn@plt+0x1ad8>
   12cec:	uxtb	r4, r4
   12cf0:	lsl	r4, r4, #1
   12cf4:	ldrh	r2, [r0, r4]
   12cf8:	tst	r2, #4096	; 0x1000
   12cfc:	bne	12cd8 <strspn@plt+0x1ab0>
   12d00:	cmp	r6, #0
   12d04:	strne	r3, [r6]
   12d08:	cmp	r5, r3
   12d0c:	bcs	12d30 <strspn@plt+0x1b08>
   12d10:	ldrsb	r3, [r3]
   12d14:	cmp	r3, #0
   12d18:	bne	12d30 <strspn@plt+0x1b08>
   12d1c:	mov	r0, #1
   12d20:	pop	{r4, r5, r6, pc}
   12d24:	cmp	r6, #0
   12d28:	movne	r3, #0
   12d2c:	strne	r3, [r6]
   12d30:	mov	r0, #0
   12d34:	pop	{r4, r5, r6, pc}
   12d38:	cmp	r1, #0
   12d3c:	strne	r5, [r1]
   12d40:	b	12d30 <strspn@plt+0x1b08>
   12d44:	push	{r1, r2, r3}
   12d48:	ldr	r3, [pc, #188]	; 12e0c <strspn@plt+0x1be4>
   12d4c:	ldr	r2, [pc, #188]	; 12e10 <strspn@plt+0x1be8>
   12d50:	add	r3, pc, r3
   12d54:	push	{r4, r5, r6, r7, r8, lr}
   12d58:	sub	sp, sp, #12
   12d5c:	ldr	r7, [r3, r2]
   12d60:	ldr	r8, [sp, #36]	; 0x24
   12d64:	mov	r6, r0
   12d68:	ldr	r3, [r7]
   12d6c:	add	r4, sp, #48	; 0x30
   12d70:	str	r3, [sp, #4]
   12d74:	b	12d90 <strspn@plt+0x1b68>
   12d78:	mov	r1, r5
   12d7c:	mov	r0, r6
   12d80:	bl	10f4c <strcmp@plt>
   12d84:	add	r4, r4, #8
   12d88:	cmp	r0, #0
   12d8c:	beq	12dc8 <strspn@plt+0x1ba0>
   12d90:	ldr	r1, [r4, #-8]
   12d94:	sub	r3, r4, #4
   12d98:	cmp	r1, #0
   12d9c:	str	r3, [sp]
   12da0:	beq	12de8 <strspn@plt+0x1bc0>
   12da4:	ldr	r5, [r4, #-4]
   12da8:	str	r4, [sp]
   12dac:	cmp	r5, #0
   12db0:	beq	12de8 <strspn@plt+0x1bc0>
   12db4:	mov	r0, r6
   12db8:	bl	10f4c <strcmp@plt>
   12dbc:	cmp	r0, #0
   12dc0:	bne	12d78 <strspn@plt+0x1b50>
   12dc4:	mov	r0, #1
   12dc8:	ldr	r2, [sp, #4]
   12dcc:	ldr	r3, [r7]
   12dd0:	cmp	r2, r3
   12dd4:	bne	12e08 <strspn@plt+0x1be0>
   12dd8:	add	sp, sp, #12
   12ddc:	pop	{r4, r5, r6, r7, r8, lr}
   12de0:	add	sp, sp, #12
   12de4:	bx	lr
   12de8:	ldr	r1, [pc, #36]	; 12e14 <strspn@plt+0x1bec>
   12dec:	mov	r3, r6
   12df0:	add	r1, pc, r1
   12df4:	mov	r2, r8
   12df8:	ldr	r0, [r1]
   12dfc:	ldr	r1, [pc, #20]	; 12e18 <strspn@plt+0x1bf0>
   12e00:	add	r1, pc, r1
   12e04:	bl	11198 <errx@plt>
   12e08:	bl	10fe8 <__stack_chk_fail@plt>
   12e0c:	muleq	r1, r4, r1
   12e10:	andeq	r0, r0, r8, lsl #2
   12e14:	andeq	r2, r1, r0, asr r2
   12e18:			; <UNDEFINED> instruction: 0x00001db0
   12e1c:	cmp	r1, #0
   12e20:	beq	12e6c <strspn@plt+0x1c44>
   12e24:	ldrsb	r3, [r0]
   12e28:	cmp	r3, #0
   12e2c:	beq	12e6c <strspn@plt+0x1c44>
   12e30:	sxtb	r2, r2
   12e34:	cmp	r3, r2
   12e38:	bxeq	lr
   12e3c:	add	r1, r0, r1
   12e40:	add	r3, r0, #1
   12e44:	b	12e60 <strspn@plt+0x1c38>
   12e48:	ldrsb	ip, [r3]
   12e4c:	add	r3, r3, #1
   12e50:	cmp	ip, #0
   12e54:	beq	12e6c <strspn@plt+0x1c44>
   12e58:	cmp	ip, r2
   12e5c:	bxeq	lr
   12e60:	cmp	r3, r1
   12e64:	mov	r0, r3
   12e68:	bne	12e48 <strspn@plt+0x1c20>
   12e6c:	mov	r0, #0
   12e70:	bx	lr
   12e74:	push	{r4, r5, r6, lr}
   12e78:	mov	r2, #10
   12e7c:	mov	r4, r0
   12e80:	mov	r5, r1
   12e84:	bl	12538 <strspn@plt+0x1310>
   12e88:	cmp	r0, #65536	; 0x10000
   12e8c:	bcs	12e98 <strspn@plt+0x1c70>
   12e90:	uxth	r0, r0
   12e94:	pop	{r4, r5, r6, pc}
   12e98:	mov	r1, r5
   12e9c:	mov	r0, r4
   12ea0:	bl	124f8 <strspn@plt+0x12d0>
   12ea4:	push	{r4, r5, r6, lr}
   12ea8:	mov	r2, #16
   12eac:	mov	r4, r0
   12eb0:	mov	r5, r1
   12eb4:	bl	12538 <strspn@plt+0x1310>
   12eb8:	cmp	r0, #65536	; 0x10000
   12ebc:	bcs	12ec8 <strspn@plt+0x1ca0>
   12ec0:	uxth	r0, r0
   12ec4:	pop	{r4, r5, r6, pc}
   12ec8:	mov	r1, r5
   12ecc:	mov	r0, r4
   12ed0:	bl	124f8 <strspn@plt+0x12d0>
   12ed4:	mov	r2, #10
   12ed8:	b	12538 <strspn@plt+0x1310>
   12edc:	mov	r2, #16
   12ee0:	b	12538 <strspn@plt+0x1310>
   12ee4:	ldr	r2, [pc, #236]	; 12fd8 <strspn@plt+0x1db0>
   12ee8:	ldr	ip, [pc, #236]	; 12fdc <strspn@plt+0x1db4>
   12eec:	add	r2, pc, r2
   12ef0:	push	{r4, r5, r6, r7, r8, lr}
   12ef4:	sub	sp, sp, #8
   12ef8:	ldr	r7, [r2, ip]
   12efc:	mov	r5, #0
   12f00:	mov	r4, r0
   12f04:	ldr	r3, [r7]
   12f08:	mov	r8, r1
   12f0c:	str	r5, [sp]
   12f10:	str	r3, [sp, #4]
   12f14:	bl	11108 <__errno_location@plt>
   12f18:	cmp	r4, r5
   12f1c:	str	r5, [r0]
   12f20:	beq	12f30 <strspn@plt+0x1d08>
   12f24:	ldrsb	r3, [r4]
   12f28:	cmp	r3, r5
   12f2c:	bne	12f50 <strspn@plt+0x1d28>
   12f30:	ldr	r1, [pc, #168]	; 12fe0 <strspn@plt+0x1db8>
   12f34:	mov	r3, r4
   12f38:	add	r1, pc, r1
   12f3c:	mov	r2, r8
   12f40:	ldr	r0, [r1]
   12f44:	ldr	r1, [pc, #152]	; 12fe4 <strspn@plt+0x1dbc>
   12f48:	add	r1, pc, r1
   12f4c:	bl	11198 <errx@plt>
   12f50:	mov	r6, r0
   12f54:	mov	r2, #10
   12f58:	mov	r3, r5
   12f5c:	mov	r1, sp
   12f60:	mov	r0, r4
   12f64:	bl	111c8 <__strtoll_internal@plt>
   12f68:	ldr	r2, [r6]
   12f6c:	cmp	r2, r5
   12f70:	bne	12fac <strspn@plt+0x1d84>
   12f74:	ldr	r3, [sp]
   12f78:	cmp	r3, r4
   12f7c:	beq	12f30 <strspn@plt+0x1d08>
   12f80:	cmp	r3, r5
   12f84:	beq	12f94 <strspn@plt+0x1d6c>
   12f88:	ldrsb	r3, [r3]
   12f8c:	cmp	r3, r5
   12f90:	bne	12f30 <strspn@plt+0x1d08>
   12f94:	ldr	r2, [sp, #4]
   12f98:	ldr	r3, [r7]
   12f9c:	cmp	r2, r3
   12fa0:	bne	12fd4 <strspn@plt+0x1dac>
   12fa4:	add	sp, sp, #8
   12fa8:	pop	{r4, r5, r6, r7, r8, pc}
   12fac:	ldr	r3, [pc, #52]	; 12fe8 <strspn@plt+0x1dc0>
   12fb0:	cmp	r2, #34	; 0x22
   12fb4:	add	r3, pc, r3
   12fb8:	ldr	r0, [r3]
   12fbc:	bne	12f30 <strspn@plt+0x1d08>
   12fc0:	ldr	r1, [pc, #36]	; 12fec <strspn@plt+0x1dc4>
   12fc4:	mov	r3, r4
   12fc8:	mov	r2, r8
   12fcc:	add	r1, pc, r1
   12fd0:	bl	1100c <err@plt>
   12fd4:	bl	10fe8 <__stack_chk_fail@plt>
   12fd8:	strdeq	r1, [r1], -r8
   12fdc:	andeq	r0, r0, r8, lsl #2
   12fe0:	andeq	r2, r1, r8, lsl #2
   12fe4:	andeq	r1, r0, r8, ror #24
   12fe8:	andeq	r2, r1, ip, lsl #1
   12fec:	andeq	r1, r0, r4, ror #23
   12ff0:	push	{r4, r5, r6, r7, r8, lr}
   12ff4:	mov	r7, r0
   12ff8:	mov	r6, r1
   12ffc:	bl	12ee4 <strspn@plt+0x1cbc>
   13000:	mov	r3, #0
   13004:	mvn	r2, #0
   13008:	adds	r4, r0, #-2147483648	; 0x80000000
   1300c:	adc	r5, r1, #0
   13010:	cmp	r5, r3
   13014:	cmpeq	r4, r2
   13018:	popls	{r4, r5, r6, r7, r8, pc}
   1301c:	bl	11108 <__errno_location@plt>
   13020:	ldr	ip, [pc, #32]	; 13048 <strspn@plt+0x1e20>
   13024:	ldr	r1, [pc, #32]	; 1304c <strspn@plt+0x1e24>
   13028:	add	ip, pc, ip
   1302c:	mov	lr, #34	; 0x22
   13030:	mov	r3, r7
   13034:	mov	r2, r6
   13038:	add	r1, pc, r1
   1303c:	str	lr, [r0]
   13040:	ldr	r0, [ip]
   13044:	bl	1100c <err@plt>
   13048:	andeq	r2, r1, r8, lsl r0
   1304c:	andeq	r1, r0, r8, ror fp
   13050:	push	{r4, r5, r6, lr}
   13054:	mov	r5, r0
   13058:	mov	r4, r1
   1305c:	bl	12ff0 <strspn@plt+0x1dc8>
   13060:	add	r3, r0, #32768	; 0x8000
   13064:	cmp	r3, #65536	; 0x10000
   13068:	bcs	13074 <strspn@plt+0x1e4c>
   1306c:	sxth	r0, r0
   13070:	pop	{r4, r5, r6, pc}
   13074:	bl	11108 <__errno_location@plt>
   13078:	ldr	ip, [pc, #32]	; 130a0 <strspn@plt+0x1e78>
   1307c:	ldr	r1, [pc, #32]	; 130a4 <strspn@plt+0x1e7c>
   13080:	add	ip, pc, ip
   13084:	mov	lr, #34	; 0x22
   13088:	mov	r3, r5
   1308c:	mov	r2, r4
   13090:	add	r1, pc, r1
   13094:	str	lr, [r0]
   13098:	ldr	r0, [ip]
   1309c:	bl	1100c <err@plt>
   130a0:	andeq	r1, r1, r0, asr #31
   130a4:	andeq	r1, r0, r0, lsr #22
   130a8:	mov	r2, #10
   130ac:	b	123e4 <strspn@plt+0x11bc>
   130b0:	mov	r2, #16
   130b4:	b	123e4 <strspn@plt+0x11bc>
   130b8:	ldr	r2, [pc, #228]	; 131a4 <strspn@plt+0x1f7c>
   130bc:	ldr	r3, [pc, #228]	; 131a8 <strspn@plt+0x1f80>
   130c0:	add	r2, pc, r2
   130c4:	push	{r4, r5, r6, r7, r8, lr}
   130c8:	sub	sp, sp, #8
   130cc:	ldr	r7, [r2, r3]
   130d0:	mov	r5, #0
   130d4:	mov	r4, r0
   130d8:	ldr	r3, [r7]
   130dc:	mov	r8, r1
   130e0:	str	r5, [sp]
   130e4:	str	r3, [sp, #4]
   130e8:	bl	11108 <__errno_location@plt>
   130ec:	cmp	r4, r5
   130f0:	str	r5, [r0]
   130f4:	beq	13104 <strspn@plt+0x1edc>
   130f8:	ldrsb	r3, [r4]
   130fc:	cmp	r3, r5
   13100:	bne	13124 <strspn@plt+0x1efc>
   13104:	ldr	r1, [pc, #160]	; 131ac <strspn@plt+0x1f84>
   13108:	mov	r3, r4
   1310c:	add	r1, pc, r1
   13110:	mov	r2, r8
   13114:	ldr	r0, [r1]
   13118:	ldr	r1, [pc, #144]	; 131b0 <strspn@plt+0x1f88>
   1311c:	add	r1, pc, r1
   13120:	bl	11198 <errx@plt>
   13124:	mov	r6, r0
   13128:	mov	r1, sp
   1312c:	mov	r0, r4
   13130:	bl	11144 <strtod@plt>
   13134:	ldr	r2, [r6]
   13138:	cmp	r2, r5
   1313c:	bne	13178 <strspn@plt+0x1f50>
   13140:	ldr	r3, [sp]
   13144:	cmp	r3, r4
   13148:	beq	13104 <strspn@plt+0x1edc>
   1314c:	cmp	r3, r5
   13150:	beq	13160 <strspn@plt+0x1f38>
   13154:	ldrsb	r3, [r3]
   13158:	cmp	r3, r5
   1315c:	bne	13104 <strspn@plt+0x1edc>
   13160:	ldr	r2, [sp, #4]
   13164:	ldr	r3, [r7]
   13168:	cmp	r2, r3
   1316c:	bne	131a0 <strspn@plt+0x1f78>
   13170:	add	sp, sp, #8
   13174:	pop	{r4, r5, r6, r7, r8, pc}
   13178:	ldr	r3, [pc, #52]	; 131b4 <strspn@plt+0x1f8c>
   1317c:	cmp	r2, #34	; 0x22
   13180:	add	r3, pc, r3
   13184:	ldr	r0, [r3]
   13188:	bne	13104 <strspn@plt+0x1edc>
   1318c:	ldr	r1, [pc, #36]	; 131b8 <strspn@plt+0x1f90>
   13190:	mov	r3, r4
   13194:	mov	r2, r8
   13198:	add	r1, pc, r1
   1319c:	bl	1100c <err@plt>
   131a0:	bl	10fe8 <__stack_chk_fail@plt>
   131a4:	andeq	r1, r1, r4, lsr #28
   131a8:	andeq	r0, r0, r8, lsl #2
   131ac:	andeq	r1, r1, r4, lsr pc
   131b0:	muleq	r0, r4, sl
   131b4:	andeq	r1, r1, r0, asr #29
   131b8:	andeq	r1, r0, r8, lsl sl
   131bc:	ldr	r2, [pc, #232]	; 132ac <strspn@plt+0x2084>
   131c0:	ldr	r3, [pc, #232]	; 132b0 <strspn@plt+0x2088>
   131c4:	add	r2, pc, r2
   131c8:	push	{r4, r5, r6, r7, r8, lr}
   131cc:	sub	sp, sp, #8
   131d0:	ldr	r7, [r2, r3]
   131d4:	mov	r5, #0
   131d8:	mov	r4, r0
   131dc:	ldr	r3, [r7]
   131e0:	mov	r8, r1
   131e4:	str	r5, [sp]
   131e8:	str	r3, [sp, #4]
   131ec:	bl	11108 <__errno_location@plt>
   131f0:	cmp	r4, r5
   131f4:	str	r5, [r0]
   131f8:	beq	13208 <strspn@plt+0x1fe0>
   131fc:	ldrsb	r3, [r4]
   13200:	cmp	r3, r5
   13204:	bne	13228 <strspn@plt+0x2000>
   13208:	ldr	r1, [pc, #164]	; 132b4 <strspn@plt+0x208c>
   1320c:	mov	r3, r4
   13210:	add	r1, pc, r1
   13214:	mov	r2, r8
   13218:	ldr	r0, [r1]
   1321c:	ldr	r1, [pc, #148]	; 132b8 <strspn@plt+0x2090>
   13220:	add	r1, pc, r1
   13224:	bl	11198 <errx@plt>
   13228:	mov	r6, r0
   1322c:	mov	r2, #10
   13230:	mov	r1, sp
   13234:	mov	r0, r4
   13238:	bl	10f58 <strtol@plt>
   1323c:	ldr	r2, [r6]
   13240:	cmp	r2, r5
   13244:	bne	13280 <strspn@plt+0x2058>
   13248:	ldr	r3, [sp]
   1324c:	cmp	r3, r4
   13250:	beq	13208 <strspn@plt+0x1fe0>
   13254:	cmp	r3, r5
   13258:	beq	13268 <strspn@plt+0x2040>
   1325c:	ldrsb	r3, [r3]
   13260:	cmp	r3, r5
   13264:	bne	13208 <strspn@plt+0x1fe0>
   13268:	ldr	r2, [sp, #4]
   1326c:	ldr	r3, [r7]
   13270:	cmp	r2, r3
   13274:	bne	132a8 <strspn@plt+0x2080>
   13278:	add	sp, sp, #8
   1327c:	pop	{r4, r5, r6, r7, r8, pc}
   13280:	ldr	r3, [pc, #52]	; 132bc <strspn@plt+0x2094>
   13284:	cmp	r2, #34	; 0x22
   13288:	add	r3, pc, r3
   1328c:	ldr	r0, [r3]
   13290:	bne	13208 <strspn@plt+0x1fe0>
   13294:	ldr	r1, [pc, #36]	; 132c0 <strspn@plt+0x2098>
   13298:	mov	r3, r4
   1329c:	mov	r2, r8
   132a0:	add	r1, pc, r1
   132a4:	bl	1100c <err@plt>
   132a8:	bl	10fe8 <__stack_chk_fail@plt>
   132ac:	andeq	r1, r1, r0, lsr #26
   132b0:	andeq	r0, r0, r8, lsl #2
   132b4:	andeq	r1, r1, r0, lsr lr
   132b8:	muleq	r0, r0, r9
   132bc:			; <UNDEFINED> instruction: 0x00011db8
   132c0:	andeq	r1, r0, r0, lsl r9
   132c4:	ldr	r2, [pc, #232]	; 133b4 <strspn@plt+0x218c>
   132c8:	ldr	r3, [pc, #232]	; 133b8 <strspn@plt+0x2190>
   132cc:	add	r2, pc, r2
   132d0:	push	{r4, r5, r6, r7, r8, lr}
   132d4:	sub	sp, sp, #8
   132d8:	ldr	r7, [r2, r3]
   132dc:	mov	r5, #0
   132e0:	mov	r4, r0
   132e4:	ldr	r3, [r7]
   132e8:	mov	r8, r1
   132ec:	str	r5, [sp]
   132f0:	str	r3, [sp, #4]
   132f4:	bl	11108 <__errno_location@plt>
   132f8:	cmp	r4, r5
   132fc:	str	r5, [r0]
   13300:	beq	13310 <strspn@plt+0x20e8>
   13304:	ldrsb	r3, [r4]
   13308:	cmp	r3, r5
   1330c:	bne	13330 <strspn@plt+0x2108>
   13310:	ldr	r1, [pc, #164]	; 133bc <strspn@plt+0x2194>
   13314:	mov	r3, r4
   13318:	add	r1, pc, r1
   1331c:	mov	r2, r8
   13320:	ldr	r0, [r1]
   13324:	ldr	r1, [pc, #148]	; 133c0 <strspn@plt+0x2198>
   13328:	add	r1, pc, r1
   1332c:	bl	11198 <errx@plt>
   13330:	mov	r6, r0
   13334:	mov	r2, #10
   13338:	mov	r1, sp
   1333c:	mov	r0, r4
   13340:	bl	110d8 <strtoul@plt>
   13344:	ldr	r2, [r6]
   13348:	cmp	r2, r5
   1334c:	bne	13388 <strspn@plt+0x2160>
   13350:	ldr	r3, [sp]
   13354:	cmp	r3, r4
   13358:	beq	13310 <strspn@plt+0x20e8>
   1335c:	cmp	r3, r5
   13360:	beq	13370 <strspn@plt+0x2148>
   13364:	ldrsb	r3, [r3]
   13368:	cmp	r3, r5
   1336c:	bne	13310 <strspn@plt+0x20e8>
   13370:	ldr	r2, [sp, #4]
   13374:	ldr	r3, [r7]
   13378:	cmp	r2, r3
   1337c:	bne	133b0 <strspn@plt+0x2188>
   13380:	add	sp, sp, #8
   13384:	pop	{r4, r5, r6, r7, r8, pc}
   13388:	ldr	r3, [pc, #52]	; 133c4 <strspn@plt+0x219c>
   1338c:	cmp	r2, #34	; 0x22
   13390:	add	r3, pc, r3
   13394:	ldr	r0, [r3]
   13398:	bne	13310 <strspn@plt+0x20e8>
   1339c:	ldr	r1, [pc, #36]	; 133c8 <strspn@plt+0x21a0>
   133a0:	mov	r3, r4
   133a4:	mov	r2, r8
   133a8:	add	r1, pc, r1
   133ac:	bl	1100c <err@plt>
   133b0:	bl	10fe8 <__stack_chk_fail@plt>
   133b4:	andeq	r1, r1, r8, lsl ip
   133b8:	andeq	r0, r0, r8, lsl #2
   133bc:	andeq	r1, r1, r8, lsr #26
   133c0:	andeq	r1, r0, r8, lsl #17
   133c4:			; <UNDEFINED> instruction: 0x00011cb0
   133c8:	andeq	r1, r0, r8, lsl #16
   133cc:	ldr	r3, [pc, #140]	; 13460 <strspn@plt+0x2238>
   133d0:	ldr	r2, [pc, #140]	; 13464 <strspn@plt+0x223c>
   133d4:	add	r3, pc, r3
   133d8:	push	{r4, r5, r6, lr}
   133dc:	sub	sp, sp, #16
   133e0:	ldr	r4, [r3, r2]
   133e4:	mov	r5, r1
   133e8:	mov	r1, sp
   133ec:	ldr	r3, [r4]
   133f0:	mov	r6, r0
   133f4:	str	r3, [sp, #12]
   133f8:	bl	12c0c <strspn@plt+0x19e4>
   133fc:	cmp	r0, #0
   13400:	beq	13440 <strspn@plt+0x2218>
   13404:	bl	11108 <__errno_location@plt>
   13408:	ldr	r3, [pc, #88]	; 13468 <strspn@plt+0x2240>
   1340c:	mov	r2, r5
   13410:	ldr	r1, [pc, r3]
   13414:	ldr	r3, [r0]
   13418:	mov	r0, r1
   1341c:	cmp	r3, #0
   13420:	mov	r3, r6
   13424:	beq	13434 <strspn@plt+0x220c>
   13428:	ldr	r1, [pc, #60]	; 1346c <strspn@plt+0x2244>
   1342c:	add	r1, pc, r1
   13430:	bl	1100c <err@plt>
   13434:	ldr	r1, [pc, #52]	; 13470 <strspn@plt+0x2248>
   13438:	add	r1, pc, r1
   1343c:	bl	11198 <errx@plt>
   13440:	ldr	r2, [sp, #12]
   13444:	ldr	r3, [r4]
   13448:	ldrd	r0, [sp]
   1344c:	cmp	r2, r3
   13450:	bne	1345c <strspn@plt+0x2234>
   13454:	add	sp, sp, #16
   13458:	pop	{r4, r5, r6, pc}
   1345c:	bl	10fe8 <__stack_chk_fail@plt>
   13460:	andeq	r1, r1, r0, lsl fp
   13464:	andeq	r0, r0, r8, lsl #2
   13468:	andeq	r1, r1, r0, lsr ip
   1346c:	andeq	r1, r0, r4, lsl #15
   13470:	andeq	r1, r0, r8, ror r7
   13474:	push	{r4, lr}
   13478:	mov	r4, r1
   1347c:	mov	r1, r2
   13480:	bl	130b8 <strspn@plt+0x1e90>
   13484:	vldr	d6, [pc, #28]	; 134a8 <strspn@plt+0x2280>
   13488:	vcvt.s32.f64	s15, d0
   1348c:	vcvt.f64.s32	d5, s15
   13490:	vstr	s15, [r4]
   13494:	vsub.f64	d0, d0, d5
   13498:	vmul.f64	d0, d0, d6
   1349c:	vcvt.s32.f64	s0, d0
   134a0:	vstr	s0, [r4, #4]
   134a4:	pop	{r4, pc}
   134a8:	andeq	r0, r0, r0
   134ac:	smlawbmi	lr, r0, r4, r8
   134b0:	and	r2, r0, #61440	; 0xf000
   134b4:	cmp	r2, #16384	; 0x4000
   134b8:	moveq	r2, r1
   134bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134c0:	moveq	sl, #100	; 0x64
   134c4:	mov	r3, r0
   134c8:	add	r9, r1, #1
   134cc:	add	r8, r1, #2
   134d0:	add	r7, r1, #3
   134d4:	add	r6, r1, #4
   134d8:	add	r5, r1, #5
   134dc:	add	r4, r1, #6
   134e0:	add	lr, r1, #7
   134e4:	add	ip, r1, #8
   134e8:	add	r0, r1, #9
   134ec:	strbeq	sl, [r2], #10
   134f0:	beq	13594 <strspn@plt+0x236c>
   134f4:	cmp	r2, #40960	; 0xa000
   134f8:	moveq	r2, r1
   134fc:	moveq	sl, #108	; 0x6c
   13500:	strbeq	sl, [r2], #10
   13504:	beq	13594 <strspn@plt+0x236c>
   13508:	cmp	r2, #8192	; 0x2000
   1350c:	moveq	r2, r1
   13510:	moveq	sl, #99	; 0x63
   13514:	strbeq	sl, [r2], #10
   13518:	beq	13594 <strspn@plt+0x236c>
   1351c:	cmp	r2, #24576	; 0x6000
   13520:	moveq	r2, r1
   13524:	moveq	sl, #98	; 0x62
   13528:	strbeq	sl, [r2], #10
   1352c:	beq	13594 <strspn@plt+0x236c>
   13530:	cmp	r2, #49152	; 0xc000
   13534:	moveq	r2, r1
   13538:	moveq	sl, #115	; 0x73
   1353c:	strbeq	sl, [r2], #10
   13540:	beq	13594 <strspn@plt+0x236c>
   13544:	cmp	r2, #4096	; 0x1000
   13548:	moveq	r2, r1
   1354c:	moveq	sl, #112	; 0x70
   13550:	strbeq	sl, [r2], #10
   13554:	beq	13594 <strspn@plt+0x236c>
   13558:	cmp	r2, #32768	; 0x8000
   1355c:	moveq	r2, r1
   13560:	moveq	sl, #45	; 0x2d
   13564:	strbeq	sl, [r2], #10
   13568:	beq	13594 <strspn@plt+0x236c>
   1356c:	mov	r2, r0
   13570:	mov	r0, ip
   13574:	mov	ip, lr
   13578:	mov	lr, r4
   1357c:	mov	r4, r5
   13580:	mov	r5, r6
   13584:	mov	r6, r7
   13588:	mov	r7, r8
   1358c:	mov	r8, r9
   13590:	mov	r9, r1
   13594:	tst	r3, #256	; 0x100
   13598:	movne	fp, #114	; 0x72
   1359c:	moveq	fp, #45	; 0x2d
   135a0:	tst	r3, #128	; 0x80
   135a4:	movne	sl, #119	; 0x77
   135a8:	moveq	sl, #45	; 0x2d
   135ac:	tst	r3, #2048	; 0x800
   135b0:	strb	fp, [r9]
   135b4:	and	r9, r3, #64	; 0x40
   135b8:	strb	sl, [r8]
   135bc:	beq	13658 <strspn@plt+0x2430>
   135c0:	cmp	r9, #0
   135c4:	movne	r9, #115	; 0x73
   135c8:	moveq	r9, #83	; 0x53
   135cc:	tst	r3, #32
   135d0:	movne	r8, #114	; 0x72
   135d4:	moveq	r8, #45	; 0x2d
   135d8:	tst	r3, #16
   135dc:	strb	r9, [r7]
   135e0:	movne	r7, #119	; 0x77
   135e4:	moveq	r7, #45	; 0x2d
   135e8:	tst	r3, #1024	; 0x400
   135ec:	strb	r8, [r6]
   135f0:	and	r6, r3, #8
   135f4:	strb	r7, [r5]
   135f8:	beq	13668 <strspn@plt+0x2440>
   135fc:	cmp	r6, #0
   13600:	movne	r6, #115	; 0x73
   13604:	moveq	r6, #83	; 0x53
   13608:	tst	r3, #4
   1360c:	movne	r5, #114	; 0x72
   13610:	moveq	r5, #45	; 0x2d
   13614:	tst	r3, #2
   13618:	strb	r6, [r4]
   1361c:	movne	r4, #119	; 0x77
   13620:	moveq	r4, #45	; 0x2d
   13624:	tst	r3, #512	; 0x200
   13628:	strb	r5, [lr]
   1362c:	and	r3, r3, #1
   13630:	strb	r4, [ip]
   13634:	beq	13678 <strspn@plt+0x2450>
   13638:	cmp	r3, #0
   1363c:	movne	ip, #116	; 0x74
   13640:	moveq	ip, #84	; 0x54
   13644:	mov	r3, #0
   13648:	strb	ip, [r0]
   1364c:	mov	r0, r1
   13650:	strb	r3, [r2]
   13654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13658:	cmp	r9, #0
   1365c:	movne	r9, #120	; 0x78
   13660:	moveq	r9, #45	; 0x2d
   13664:	b	135cc <strspn@plt+0x23a4>
   13668:	cmp	r6, #0
   1366c:	movne	r6, #120	; 0x78
   13670:	moveq	r6, #45	; 0x2d
   13674:	b	13608 <strspn@plt+0x23e0>
   13678:	cmp	r3, #0
   1367c:	movne	ip, #120	; 0x78
   13680:	moveq	ip, #45	; 0x2d
   13684:	b	13644 <strspn@plt+0x241c>
   13688:	ldr	r1, [pc, #680]	; 13938 <strspn@plt+0x2710>
   1368c:	ldr	ip, [pc, #680]	; 1393c <strspn@plt+0x2714>
   13690:	add	r1, pc, r1
   13694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13698:	sub	sp, sp, #108	; 0x6c
   1369c:	ldr	r8, [r1, ip]
   136a0:	tst	r0, #2
   136a4:	strd	r2, [sp, #32]
   136a8:	ldr	r1, [r8]
   136ac:	addeq	r9, sp, #60	; 0x3c
   136b0:	str	r1, [sp, #100]	; 0x64
   136b4:	ldrd	r2, [sp, #32]
   136b8:	movne	r1, #32
   136bc:	strbne	r1, [sp, #60]	; 0x3c
   136c0:	addne	ip, sp, #61	; 0x3d
   136c4:	addne	r9, sp, #60	; 0x3c
   136c8:	moveq	ip, r9
   136cc:	mov	r1, #10
   136d0:	mov	sl, #1
   136d4:	sub	lr, r1, #32
   136d8:	lsl	r4, sl, r1
   136dc:	lsl	r5, sl, lr
   136e0:	rsb	lr, r1, #32
   136e4:	orr	r5, r5, sl, lsr lr
   136e8:	cmp	r3, r5
   136ec:	cmpeq	r2, r4
   136f0:	bcc	138ac <strspn@plt+0x2684>
   136f4:	add	r1, r1, #10
   136f8:	cmp	r1, #70	; 0x46
   136fc:	bne	136d4 <strspn@plt+0x24ac>
   13700:	mov	lr, ip
   13704:	strd	r2, [sp, #32]
   13708:	mov	r4, r2
   1370c:	tst	r0, #1
   13710:	mov	r2, #69	; 0x45
   13714:	bic	r5, r3, #-268435456	; 0xf0000000
   13718:	lsr	sl, r3, #28
   1371c:	strb	r2, [lr], #1
   13720:	bne	13894 <strspn@plt+0x266c>
   13724:	orrs	r3, r4, r5
   13728:	mov	r3, #0
   1372c:	strb	r3, [lr]
   13730:	beq	138d4 <strspn@plt+0x26ac>
   13734:	sub	r2, r1, #20
   13738:	rsb	r0, r2, #32
   1373c:	lsr	r3, r4, r2
   13740:	sub	r1, r1, #52	; 0x34
   13744:	orr	r3, r3, r5, lsl r0
   13748:	orr	r3, r3, r5, lsr r1
   1374c:	lsr	r2, r5, r2
   13750:	adds	r6, r3, #50	; 0x32
   13754:	adc	r7, r2, #0
   13758:	mov	r3, #0
   1375c:	mov	r2, #100	; 0x64
   13760:	mov	r0, r6
   13764:	mov	r1, r7
   13768:	bl	14258 <strspn@plt+0x3030>
   1376c:	cmp	r1, #0
   13770:	cmpeq	r0, #10
   13774:	mov	r2, r0
   13778:	mov	r3, r1
   1377c:	addeq	sl, sl, #1
   13780:	beq	138d4 <strspn@plt+0x26ac>
   13784:	cmp	r7, #0
   13788:	cmpeq	r6, #99	; 0x63
   1378c:	strd	r2, [sp, #32]
   13790:	bls	138d4 <strspn@plt+0x26ac>
   13794:	bl	111bc <localeconv@plt>
   13798:	ldrd	r2, [sp, #32]
   1379c:	cmp	r0, #0
   137a0:	beq	1391c <strspn@plt+0x26f4>
   137a4:	ldr	r0, [r0]
   137a8:	cmp	r0, #0
   137ac:	beq	13928 <strspn@plt+0x2700>
   137b0:	ldrsb	r1, [r0]
   137b4:	cmp	r1, #0
   137b8:	ldreq	r0, [pc, #384]	; 13940 <strspn@plt+0x2718>
   137bc:	addeq	r0, pc, r0
   137c0:	ldr	r1, [pc, #380]	; 13944 <strspn@plt+0x271c>
   137c4:	strd	r2, [sp, #16]
   137c8:	add	r1, pc, r1
   137cc:	add	r4, sp, #68	; 0x44
   137d0:	mov	r3, #32
   137d4:	str	r0, [sp, #8]
   137d8:	str	r1, [sp]
   137dc:	str	r9, [sp, #24]
   137e0:	str	sl, [sp, #4]
   137e4:	mov	r0, r4
   137e8:	mov	r1, r3
   137ec:	mov	r2, #1
   137f0:	bl	1121c <__snprintf_chk@plt>
   137f4:	b	138fc <strspn@plt+0x26d4>
   137f8:	ldr	r4, [pc, #328]	; 13948 <strspn@plt+0x2720>
   137fc:	mvn	sl, #0
   13800:	ldr	fp, [pc, #324]	; 1394c <strspn@plt+0x2724>
   13804:	umull	r2, r3, lr, r4
   13808:	sub	r4, r1, #42	; 0x2a
   1380c:	strd	r2, [sp, #40]	; 0x28
   13810:	ldr	r3, [sp, #44]	; 0x2c
   13814:	lsl	r2, sl, lr
   13818:	lsr	r3, r3, #3
   1381c:	str	r3, [sp, #52]	; 0x34
   13820:	ldr	r3, [sp, #32]
   13824:	str	r4, [sp, #48]	; 0x30
   13828:	orr	r4, r2, sl, lsl r4
   1382c:	lsr	r2, r3, lr
   13830:	mov	r3, r2
   13834:	ldr	r2, [sp, #52]	; 0x34
   13838:	add	fp, pc, fp
   1383c:	str	r4, [sp, #40]	; 0x28
   13840:	ldrsb	fp, [fp, r2]
   13844:	mov	r2, r3
   13848:	ldr	r3, [sp, #36]	; 0x24
   1384c:	rsb	r5, lr, #32
   13850:	ldr	r4, [sp, #40]	; 0x28
   13854:	orr	r2, r2, r3, lsl r5
   13858:	orr	r4, r4, sl, lsr r5
   1385c:	ldr	r3, [sp, #32]
   13860:	str	r4, [sp, #40]	; 0x28
   13864:	cmp	r0, #0
   13868:	bic	r4, r3, sl, lsl lr
   1386c:	ldr	r0, [sp, #36]	; 0x24
   13870:	ldr	r3, [sp, #48]	; 0x30
   13874:	mov	lr, ip
   13878:	orr	sl, r2, r0, lsr r3
   1387c:	ldr	r3, [sp, #40]	; 0x28
   13880:	strb	fp, [lr], #1
   13884:	bic	r5, r0, r3
   13888:	beq	13724 <strspn@plt+0x24fc>
   1388c:	cmp	fp, #66	; 0x42
   13890:	beq	13724 <strspn@plt+0x24fc>
   13894:	mov	r3, #105	; 0x69
   13898:	strb	r3, [ip, #1]
   1389c:	mov	r3, #66	; 0x42
   138a0:	add	lr, ip, #3
   138a4:	strb	r3, [ip, #2]
   138a8:	b	13724 <strspn@plt+0x24fc>
   138ac:	subs	lr, r1, #10
   138b0:	strd	r2, [sp, #32]
   138b4:	and	r0, r0, #1
   138b8:	bne	137f8 <strspn@plt+0x25d0>
   138bc:	ldr	sl, [sp, #32]
   138c0:	cmp	r0, #0
   138c4:	movne	r0, lr
   138c8:	mov	r3, #66	; 0x42
   138cc:	strb	r0, [ip, #1]
   138d0:	strb	r3, [ip]
   138d4:	ldr	r2, [pc, #116]	; 13950 <strspn@plt+0x2728>
   138d8:	add	r4, sp, #68	; 0x44
   138dc:	add	r2, pc, r2
   138e0:	mov	r3, #32
   138e4:	stm	sp, {r2, sl}
   138e8:	str	r9, [sp, #8]
   138ec:	mov	r0, r4
   138f0:	mov	r1, r3
   138f4:	mov	r2, #1
   138f8:	bl	1121c <__snprintf_chk@plt>
   138fc:	mov	r0, r4
   13900:	bl	10fdc <strdup@plt>
   13904:	ldr	r2, [sp, #100]	; 0x64
   13908:	ldr	r3, [r8]
   1390c:	cmp	r2, r3
   13910:	bne	13934 <strspn@plt+0x270c>
   13914:	add	sp, sp, #108	; 0x6c
   13918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1391c:	ldr	r0, [pc, #48]	; 13954 <strspn@plt+0x272c>
   13920:	add	r0, pc, r0
   13924:	b	137c0 <strspn@plt+0x2598>
   13928:	ldr	r0, [pc, #40]	; 13958 <strspn@plt+0x2730>
   1392c:	add	r0, pc, r0
   13930:	b	137c0 <strspn@plt+0x2598>
   13934:	bl	10fe8 <__stack_chk_fail@plt>
   13938:	andeq	r1, r1, r4, asr r8
   1393c:	andeq	r0, r0, r8, lsl #2
   13940:	andeq	r1, r0, r8, lsl r4
   13944:	andeq	r1, r0, r8, lsl r4
   13948:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1394c:	andeq	r1, r0, r0, lsr #7
   13950:	andeq	r1, r0, r0, lsl r3
   13954:			; <UNDEFINED> instruction: 0x000012b4
   13958:	andeq	r1, r0, r8, lsr #5
   1395c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13960:	subs	r4, r0, #0
   13964:	beq	13a34 <strspn@plt+0x280c>
   13968:	ldrsb	lr, [r4]
   1396c:	cmp	lr, #0
   13970:	beq	13a34 <strspn@plt+0x280c>
   13974:	cmp	r1, #0
   13978:	clz	ip, r2
   1397c:	lsr	ip, ip, #5
   13980:	moveq	r0, #1
   13984:	movne	r0, ip
   13988:	cmp	r3, #0
   1398c:	moveq	r0, #1
   13990:	cmp	r0, #0
   13994:	bne	13a34 <strspn@plt+0x280c>
   13998:	mov	r8, r3
   1399c:	mov	r7, r2
   139a0:	mov	r9, r1
   139a4:	mov	r5, r0
   139a8:	b	13a04 <strspn@plt+0x27dc>
   139ac:	cmp	r3, #0
   139b0:	bne	139f0 <strspn@plt+0x27c8>
   139b4:	cmn	r4, #1
   139b8:	add	r6, r4, #1
   139bc:	beq	13a3c <strspn@plt+0x2814>
   139c0:	cmp	r0, r6
   139c4:	bcs	13a34 <strspn@plt+0x280c>
   139c8:	sub	r1, r6, r0
   139cc:	blx	r8
   139d0:	cmn	r0, #1
   139d4:	beq	13a34 <strspn@plt+0x280c>
   139d8:	str	r0, [r9, r5, lsl #2]
   139dc:	ldrsb	r3, [r6]
   139e0:	add	r5, r5, #1
   139e4:	cmp	r3, #0
   139e8:	beq	13a3c <strspn@plt+0x2814>
   139ec:	mov	r0, #0
   139f0:	cmn	r4, #1
   139f4:	beq	13a3c <strspn@plt+0x2814>
   139f8:	ldrsb	lr, [r4, #1]!
   139fc:	cmp	lr, #0
   13a00:	beq	13a3c <strspn@plt+0x2814>
   13a04:	cmp	r7, r5
   13a08:	mov	r6, r4
   13a0c:	bls	13a44 <strspn@plt+0x281c>
   13a10:	cmp	r0, #0
   13a14:	moveq	r0, r4
   13a18:	cmp	lr, #44	; 0x2c
   13a1c:	ldrsb	r3, [r4, #1]
   13a20:	bne	139ac <strspn@plt+0x2784>
   13a24:	cmp	r3, #0
   13a28:	beq	139b4 <strspn@plt+0x278c>
   13a2c:	cmp	r0, r6
   13a30:	bcc	139c8 <strspn@plt+0x27a0>
   13a34:	mvn	r0, #0
   13a38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a3c:	mov	r0, r5
   13a40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a44:	mvn	r0, #1
   13a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a4c:	cmp	r0, #0
   13a50:	beq	13abc <strspn@plt+0x2894>
   13a54:	push	{r4, lr}
   13a58:	mov	r4, r3
   13a5c:	cmp	r4, #0
   13a60:	ldrsb	ip, [r0]
   13a64:	clz	r3, ip
   13a68:	lsr	r3, r3, #5
   13a6c:	moveq	r3, #1
   13a70:	cmp	r3, #0
   13a74:	bne	13ab4 <strspn@plt+0x288c>
   13a78:	ldr	lr, [r4]
   13a7c:	cmp	lr, r2
   13a80:	bhi	13ab4 <strspn@plt+0x288c>
   13a84:	cmp	ip, #43	; 0x2b
   13a88:	strne	r3, [r4]
   13a8c:	addeq	r0, r0, #1
   13a90:	ldr	r3, [sp, #8]
   13a94:	addeq	r1, r1, lr, lsl #2
   13a98:	subeq	r2, r2, lr
   13a9c:	bl	1395c <strspn@plt+0x2734>
   13aa0:	cmp	r0, #0
   13aa4:	ldrgt	r3, [r4]
   13aa8:	addgt	r3, r3, r0
   13aac:	strgt	r3, [r4]
   13ab0:	pop	{r4, pc}
   13ab4:	mvn	r0, #0
   13ab8:	pop	{r4, pc}
   13abc:	mvn	r0, #0
   13ac0:	bx	lr
   13ac4:	cmp	r2, #0
   13ac8:	clz	r3, r1
   13acc:	lsr	r3, r3, #5
   13ad0:	moveq	r3, #1
   13ad4:	cmp	r0, #0
   13ad8:	moveq	r3, #1
   13adc:	cmp	r3, #0
   13ae0:	bne	13bac <strspn@plt+0x2984>
   13ae4:	push	{r4, r5, r6, r7, r8, lr}
   13ae8:	mov	r6, r2
   13aec:	mov	r2, r3
   13af0:	ldrsb	r3, [r0]
   13af4:	mov	r8, r1
   13af8:	mov	r4, r0
   13afc:	mov	r7, #1
   13b00:	cmp	r3, #0
   13b04:	beq	13b74 <strspn@plt+0x294c>
   13b08:	cmp	r2, #0
   13b0c:	moveq	r2, r4
   13b10:	cmp	r3, #44	; 0x2c
   13b14:	mov	r5, r4
   13b18:	ldrsb	r3, [r4, #1]!
   13b1c:	beq	13b7c <strspn@plt+0x2954>
   13b20:	cmp	r3, #0
   13b24:	bne	13b9c <strspn@plt+0x2974>
   13b28:	mov	r5, r4
   13b2c:	cmp	r2, r5
   13b30:	sub	r1, r5, r2
   13b34:	mov	r0, r2
   13b38:	bcs	13b94 <strspn@plt+0x296c>
   13b3c:	blx	r6
   13b40:	mov	r2, r4
   13b44:	cmp	r0, #0
   13b48:	and	r1, r0, #7
   13b4c:	poplt	{r4, r5, r6, r7, r8, pc}
   13b50:	ldrb	r3, [r8, r0, asr #3]
   13b54:	orr	r3, r3, r7, lsl r1
   13b58:	strb	r3, [r8, r0, asr #3]
   13b5c:	ldrsb	r3, [r5]
   13b60:	cmp	r3, #0
   13b64:	beq	13b74 <strspn@plt+0x294c>
   13b68:	ldrsb	r3, [r4]
   13b6c:	cmp	r3, #0
   13b70:	bne	13b10 <strspn@plt+0x28e8>
   13b74:	mov	r0, #0
   13b78:	pop	{r4, r5, r6, r7, r8, pc}
   13b7c:	cmp	r3, #0
   13b80:	moveq	r5, r4
   13b84:	cmp	r2, r5
   13b88:	sub	r1, r5, r2
   13b8c:	mov	r0, r2
   13b90:	bcc	13b3c <strspn@plt+0x2914>
   13b94:	mvn	r0, #0
   13b98:	pop	{r4, r5, r6, r7, r8, pc}
   13b9c:	adds	r4, r5, #1
   13ba0:	bne	13b00 <strspn@plt+0x28d8>
   13ba4:	mov	r0, #0
   13ba8:	pop	{r4, r5, r6, r7, r8, pc}
   13bac:	mvn	r0, #21
   13bb0:	bx	lr
   13bb4:	cmp	r2, #0
   13bb8:	clz	r3, r1
   13bbc:	lsr	r3, r3, #5
   13bc0:	moveq	r3, #1
   13bc4:	cmp	r0, #0
   13bc8:	moveq	r3, #1
   13bcc:	cmp	r3, #0
   13bd0:	bne	13c94 <strspn@plt+0x2a6c>
   13bd4:	push	{r4, r5, r6, r7, r8, lr}
   13bd8:	mov	r6, r2
   13bdc:	mov	r2, r3
   13be0:	ldrsb	r3, [r0]
   13be4:	mov	r7, r1
   13be8:	mov	r4, r0
   13bec:	cmp	r3, #0
   13bf0:	beq	13c5c <strspn@plt+0x2a34>
   13bf4:	cmp	r2, #0
   13bf8:	moveq	r2, r4
   13bfc:	cmp	r3, #44	; 0x2c
   13c00:	mov	r5, r4
   13c04:	ldrsb	r3, [r4, #1]!
   13c08:	beq	13c64 <strspn@plt+0x2a3c>
   13c0c:	cmp	r3, #0
   13c10:	bne	13c84 <strspn@plt+0x2a5c>
   13c14:	mov	r5, r4
   13c18:	cmp	r2, r5
   13c1c:	sub	r1, r5, r2
   13c20:	mov	r0, r2
   13c24:	bcs	13c7c <strspn@plt+0x2a54>
   13c28:	blx	r6
   13c2c:	mov	r2, r4
   13c30:	cmp	r0, #0
   13c34:	poplt	{r4, r5, r6, r7, r8, pc}
   13c38:	ldr	r3, [r7]
   13c3c:	orr	r3, r3, r0
   13c40:	str	r3, [r7]
   13c44:	ldrsb	r3, [r5]
   13c48:	cmp	r3, #0
   13c4c:	beq	13c5c <strspn@plt+0x2a34>
   13c50:	ldrsb	r3, [r4]
   13c54:	cmp	r3, #0
   13c58:	bne	13bfc <strspn@plt+0x29d4>
   13c5c:	mov	r0, #0
   13c60:	pop	{r4, r5, r6, r7, r8, pc}
   13c64:	cmp	r3, #0
   13c68:	moveq	r5, r4
   13c6c:	cmp	r2, r5
   13c70:	sub	r1, r5, r2
   13c74:	mov	r0, r2
   13c78:	bcc	13c28 <strspn@plt+0x2a00>
   13c7c:	mvn	r0, #0
   13c80:	pop	{r4, r5, r6, r7, r8, pc}
   13c84:	adds	r4, r5, #1
   13c88:	bne	13bec <strspn@plt+0x29c4>
   13c8c:	mov	r0, #0
   13c90:	pop	{r4, r5, r6, r7, r8, pc}
   13c94:	mvn	r0, #21
   13c98:	bx	lr
   13c9c:	ldr	ip, [pc, #396]	; 13e30 <strspn@plt+0x2c08>
   13ca0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ca4:	add	ip, pc, ip
   13ca8:	ldr	lr, [pc, #388]	; 13e34 <strspn@plt+0x2c0c>
   13cac:	sub	sp, sp, #8
   13cb0:	mov	r9, r3
   13cb4:	ldr	r5, [ip, lr]
   13cb8:	mov	sl, #0
   13cbc:	subs	r4, r0, #0
   13cc0:	ldr	r3, [r5]
   13cc4:	mov	r7, r1
   13cc8:	str	sl, [sp]
   13ccc:	mov	r1, ip
   13cd0:	str	r3, [sp, #4]
   13cd4:	beq	13d48 <strspn@plt+0x2b20>
   13cd8:	str	r9, [r7]
   13cdc:	str	r9, [r2]
   13ce0:	mov	r6, r2
   13ce4:	bl	11108 <__errno_location@plt>
   13ce8:	str	sl, [r0]
   13cec:	ldrsb	r3, [r4]
   13cf0:	mov	r8, r0
   13cf4:	cmp	r3, #58	; 0x3a
   13cf8:	beq	13d64 <strspn@plt+0x2b3c>
   13cfc:	mov	sl, sp
   13d00:	mov	r1, sl
   13d04:	mov	r2, #10
   13d08:	mov	r0, r4
   13d0c:	bl	10f58 <strtol@plt>
   13d10:	str	r0, [r7]
   13d14:	str	r0, [r6]
   13d18:	ldr	r0, [r8]
   13d1c:	cmp	r0, #0
   13d20:	bne	13db4 <strspn@plt+0x2b8c>
   13d24:	ldr	r2, [sp]
   13d28:	cmp	r2, #0
   13d2c:	cmpne	r2, r4
   13d30:	beq	13db4 <strspn@plt+0x2b8c>
   13d34:	ldrsb	r3, [r2]
   13d38:	cmp	r3, #58	; 0x3a
   13d3c:	beq	13dbc <strspn@plt+0x2b94>
   13d40:	cmp	r3, #45	; 0x2d
   13d44:	beq	13dcc <strspn@plt+0x2ba4>
   13d48:	mov	r0, #0
   13d4c:	ldr	r2, [sp, #4]
   13d50:	ldr	r3, [r5]
   13d54:	cmp	r2, r3
   13d58:	bne	13e2c <strspn@plt+0x2c04>
   13d5c:	add	sp, sp, #8
   13d60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d64:	add	r4, r4, #1
   13d68:	mov	r0, r4
   13d6c:	mov	r2, #10
   13d70:	mov	r1, sp
   13d74:	bl	10f58 <strtol@plt>
   13d78:	str	r0, [r6]
   13d7c:	ldr	r3, [r8]
   13d80:	cmp	r3, #0
   13d84:	bne	13db4 <strspn@plt+0x2b8c>
   13d88:	ldr	r3, [sp]
   13d8c:	cmp	r3, #0
   13d90:	beq	13db4 <strspn@plt+0x2b8c>
   13d94:	ldrsb	r2, [r3]
   13d98:	sub	r3, r3, r4
   13d9c:	clz	r3, r3
   13da0:	cmp	r2, #0
   13da4:	lsr	r3, r3, #5
   13da8:	movne	r3, #1
   13dac:	cmp	r3, #0
   13db0:	beq	13d48 <strspn@plt+0x2b20>
   13db4:	mvn	r0, #0
   13db8:	b	13d4c <strspn@plt+0x2b24>
   13dbc:	ldrsb	r3, [r2, #1]
   13dc0:	cmp	r3, #0
   13dc4:	streq	r9, [r6]
   13dc8:	beq	13d4c <strspn@plt+0x2b24>
   13dcc:	mov	r3, #0
   13dd0:	add	r4, r2, #1
   13dd4:	str	r3, [r8]
   13dd8:	mov	r1, sl
   13ddc:	mov	r0, r4
   13de0:	mov	r2, #10
   13de4:	str	r3, [sp]
   13de8:	bl	10f58 <strtol@plt>
   13dec:	str	r0, [r6]
   13df0:	ldr	r3, [r8]
   13df4:	cmp	r3, #0
   13df8:	bne	13db4 <strspn@plt+0x2b8c>
   13dfc:	ldr	r2, [sp]
   13e00:	cmp	r2, #0
   13e04:	beq	13db4 <strspn@plt+0x2b8c>
   13e08:	ldrsb	r3, [r2]
   13e0c:	sub	r2, r2, r4
   13e10:	clz	r2, r2
   13e14:	cmp	r3, #0
   13e18:	lsr	r2, r2, #5
   13e1c:	movne	r2, #1
   13e20:	cmp	r2, #0
   13e24:	beq	13d48 <strspn@plt+0x2b20>
   13e28:	b	13db4 <strspn@plt+0x2b8c>
   13e2c:	bl	10fe8 <__stack_chk_fail@plt>
   13e30:	andeq	r1, r1, r0, asr #4
   13e34:	andeq	r0, r0, r8, lsl #2
   13e38:	ldr	r3, [pc, #244]	; 13f34 <strspn@plt+0x2d0c>
   13e3c:	ldr	r2, [pc, #244]	; 13f38 <strspn@plt+0x2d10>
   13e40:	add	r3, pc, r3
   13e44:	push	{r4, r5, r6, r7, r8, r9, lr}
   13e48:	sub	sp, sp, #20
   13e4c:	ldr	r9, [r3, r2]
   13e50:	cmp	r0, #0
   13e54:	cmpne	r1, #0
   13e58:	ldr	r3, [r9]
   13e5c:	str	r3, [sp, #12]
   13e60:	beq	13f28 <strspn@plt+0x2d00>
   13e64:	mov	r4, r1
   13e68:	add	r8, sp, #4
   13e6c:	add	r7, sp, #8
   13e70:	b	13eb0 <strspn@plt+0x2c88>
   13e74:	cmp	r4, r3
   13e78:	bne	13f28 <strspn@plt+0x2d00>
   13e7c:	mov	r2, r4
   13e80:	mov	r1, r6
   13e84:	mov	r0, r5
   13e88:	bl	111f8 <strncmp@plt>
   13e8c:	cmp	r0, #0
   13e90:	bne	13f28 <strspn@plt+0x2d00>
   13e94:	adds	r0, r5, r4
   13e98:	moveq	r3, #0
   13e9c:	movne	r3, #1
   13ea0:	adds	r4, r6, r4
   13ea4:	moveq	r3, #0
   13ea8:	cmp	r3, #0
   13eac:	beq	13f28 <strspn@plt+0x2d00>
   13eb0:	mov	r1, r8
   13eb4:	bl	122b8 <strspn@plt+0x1090>
   13eb8:	mov	r1, r7
   13ebc:	mov	r5, r0
   13ec0:	mov	r0, r4
   13ec4:	bl	122b8 <strspn@plt+0x1090>
   13ec8:	ldr	r4, [sp, #4]
   13ecc:	ldr	r3, [sp, #8]
   13ed0:	mov	r6, r0
   13ed4:	adds	r0, r4, r3
   13ed8:	beq	13f0c <strspn@plt+0x2ce4>
   13edc:	cmp	r0, #1
   13ee0:	bne	13e74 <strspn@plt+0x2c4c>
   13ee4:	cmp	r5, #0
   13ee8:	beq	13ef8 <strspn@plt+0x2cd0>
   13eec:	ldrsb	r2, [r5]
   13ef0:	cmp	r2, #47	; 0x2f
   13ef4:	beq	13f10 <strspn@plt+0x2ce8>
   13ef8:	cmp	r6, #0
   13efc:	beq	13e74 <strspn@plt+0x2c4c>
   13f00:	ldrsb	r2, [r6]
   13f04:	cmp	r2, #47	; 0x2f
   13f08:	bne	13e74 <strspn@plt+0x2c4c>
   13f0c:	mov	r0, #1
   13f10:	ldr	r2, [sp, #12]
   13f14:	ldr	r3, [r9]
   13f18:	cmp	r2, r3
   13f1c:	bne	13f30 <strspn@plt+0x2d08>
   13f20:	add	sp, sp, #20
   13f24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13f28:	mov	r0, #0
   13f2c:	b	13f10 <strspn@plt+0x2ce8>
   13f30:	bl	10fe8 <__stack_chk_fail@plt>
   13f34:	andeq	r1, r1, r4, lsr #1
   13f38:	andeq	r0, r0, r8, lsl #2
   13f3c:	orrs	r3, r0, r1
   13f40:	beq	13fbc <strspn@plt+0x2d94>
   13f44:	cmp	r0, #0
   13f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f4c:	mov	r4, r1
   13f50:	mov	r5, r0
   13f54:	beq	13fc8 <strspn@plt+0x2da0>
   13f58:	cmp	r1, #0
   13f5c:	beq	13fd8 <strspn@plt+0x2db0>
   13f60:	mov	r6, r2
   13f64:	bl	110e4 <strlen@plt>
   13f68:	mvn	r3, r0
   13f6c:	cmp	r6, r3
   13f70:	mov	r7, r0
   13f74:	movhi	r8, #0
   13f78:	bhi	13fb4 <strspn@plt+0x2d8c>
   13f7c:	add	r9, r6, r0
   13f80:	add	r0, r9, #1
   13f84:	bl	11084 <malloc@plt>
   13f88:	subs	r8, r0, #0
   13f8c:	beq	13fb4 <strspn@plt+0x2d8c>
   13f90:	mov	r1, r5
   13f94:	mov	r2, r7
   13f98:	bl	10fa0 <memcpy@plt>
   13f9c:	mov	r2, r6
   13fa0:	mov	r1, r4
   13fa4:	add	r0, r8, r7
   13fa8:	bl	10fa0 <memcpy@plt>
   13fac:	mov	r3, #0
   13fb0:	strb	r3, [r8, r9]
   13fb4:	mov	r0, r8
   13fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fbc:	ldr	r0, [pc, #28]	; 13fe0 <strspn@plt+0x2db8>
   13fc0:	add	r0, pc, r0
   13fc4:	b	10fdc <strdup@plt>
   13fc8:	mov	r0, r4
   13fcc:	mov	r1, r2
   13fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fd4:	b	10f88 <strndup@plt>
   13fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fdc:	b	10fdc <strdup@plt>
   13fe0:	andeq	r0, r0, r0, ror #12
   13fe4:	push	{r4, r5, r6, lr}
   13fe8:	subs	r4, r1, #0
   13fec:	mov	r5, r0
   13ff0:	moveq	r2, r4
   13ff4:	beq	14004 <strspn@plt+0x2ddc>
   13ff8:	mov	r0, r4
   13ffc:	bl	110e4 <strlen@plt>
   14000:	mov	r2, r0
   14004:	mov	r1, r4
   14008:	mov	r0, r5
   1400c:	pop	{r4, r5, r6, lr}
   14010:	b	13f3c <strspn@plt+0x2d14>
   14014:	push	{r1, r2, r3}
   14018:	ldr	r1, [pc, #132]	; 140a4 <strspn@plt+0x2e7c>
   1401c:	ldr	r3, [pc, #132]	; 140a8 <strspn@plt+0x2e80>
   14020:	add	r1, pc, r1
   14024:	push	{r4, r5, lr}
   14028:	mov	r5, r0
   1402c:	ldr	r4, [r1, r3]
   14030:	sub	sp, sp, #16
   14034:	add	ip, sp, #32
   14038:	ldr	r0, [r4]
   1403c:	ldr	r2, [sp, #28]
   14040:	str	r0, [sp, #12]
   14044:	mov	r3, ip
   14048:	add	r0, sp, #8
   1404c:	mov	r1, #1
   14050:	str	ip, [sp, #4]
   14054:	bl	11120 <__vasprintf_chk@plt>
   14058:	subs	r2, r0, #0
   1405c:	movlt	r5, #0
   14060:	blt	1407c <strspn@plt+0x2e54>
   14064:	mov	r0, r5
   14068:	ldr	r1, [sp, #8]
   1406c:	bl	13f3c <strspn@plt+0x2d14>
   14070:	mov	r5, r0
   14074:	ldr	r0, [sp, #8]
   14078:	bl	10f70 <free@plt>
   1407c:	ldr	r2, [sp, #12]
   14080:	ldr	r3, [r4]
   14084:	mov	r0, r5
   14088:	cmp	r2, r3
   1408c:	bne	140a0 <strspn@plt+0x2e78>
   14090:	add	sp, sp, #16
   14094:	pop	{r4, r5, lr}
   14098:	add	sp, sp, #12
   1409c:	bx	lr
   140a0:	bl	10fe8 <__stack_chk_fail@plt>
   140a4:	andeq	r0, r1, r4, asr #29
   140a8:	andeq	r0, r0, r8, lsl #2
   140ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140b0:	mov	r6, r0
   140b4:	ldr	r0, [pc, #348]	; 14218 <strspn@plt+0x2ff0>
   140b8:	ldr	ip, [pc, #348]	; 1421c <strspn@plt+0x2ff4>
   140bc:	add	r0, pc, r0
   140c0:	ldr	r5, [r6]
   140c4:	ldr	r8, [r0, ip]
   140c8:	sub	sp, sp, #8
   140cc:	ldrsb	r4, [r5]
   140d0:	mov	r9, r2
   140d4:	ldr	r2, [r8]
   140d8:	cmp	r4, #0
   140dc:	mov	r7, r1
   140e0:	str	r2, [sp, #4]
   140e4:	mov	r1, r0
   140e8:	beq	14198 <strspn@plt+0x2f70>
   140ec:	mov	r0, r5
   140f0:	mov	r1, r9
   140f4:	mov	sl, r3
   140f8:	bl	11228 <strspn@plt>
   140fc:	add	r4, r5, r0
   14100:	ldrsb	r5, [r5, r0]
   14104:	cmp	r5, #0
   14108:	beq	14200 <strspn@plt+0x2fd8>
   1410c:	cmp	sl, #0
   14110:	beq	141b4 <strspn@plt+0x2f8c>
   14114:	ldr	r0, [pc, #260]	; 14220 <strspn@plt+0x2ff8>
   14118:	mov	r1, r5
   1411c:	add	r0, pc, r0
   14120:	bl	110f0 <strchr@plt>
   14124:	cmp	r0, #0
   14128:	beq	141d0 <strspn@plt+0x2fa8>
   1412c:	add	sl, r4, #1
   14130:	mov	r3, #0
   14134:	mov	r0, sl
   14138:	mov	r1, sp
   1413c:	strb	r5, [sp]
   14140:	strb	r3, [sp, #1]
   14144:	bl	12358 <strspn@plt+0x1130>
   14148:	add	r3, r4, r0
   1414c:	str	r0, [r7]
   14150:	ldrsb	r3, [r3, #1]
   14154:	subs	r5, r5, r3
   14158:	movne	r5, #1
   1415c:	cmp	r3, #0
   14160:	moveq	r5, #1
   14164:	cmp	r5, #0
   14168:	bne	14200 <strspn@plt+0x2fd8>
   1416c:	add	r0, r0, #2
   14170:	add	r5, r4, r0
   14174:	ldrsb	r1, [r4, r0]
   14178:	cmp	r1, #0
   1417c:	beq	14190 <strspn@plt+0x2f68>
   14180:	mov	r0, r9
   14184:	bl	110f0 <strchr@plt>
   14188:	cmp	r0, #0
   1418c:	beq	14200 <strspn@plt+0x2fd8>
   14190:	mov	r4, sl
   14194:	str	r5, [r6]
   14198:	ldr	r2, [sp, #4]
   1419c:	ldr	r3, [r8]
   141a0:	mov	r0, r4
   141a4:	cmp	r2, r3
   141a8:	bne	14214 <strspn@plt+0x2fec>
   141ac:	add	sp, sp, #8
   141b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141b4:	mov	r1, r9
   141b8:	mov	r0, r4
   141bc:	bl	10f64 <strcspn@plt>
   141c0:	add	r3, r4, r0
   141c4:	str	r0, [r7]
   141c8:	str	r3, [r6]
   141cc:	b	14198 <strspn@plt+0x2f70>
   141d0:	mov	r1, r9
   141d4:	mov	r0, r4
   141d8:	bl	12358 <strspn@plt+0x1130>
   141dc:	str	r0, [r7]
   141e0:	ldrsb	r1, [r4, r0]
   141e4:	add	r5, r4, r0
   141e8:	cmp	r1, #0
   141ec:	beq	1420c <strspn@plt+0x2fe4>
   141f0:	mov	r0, r9
   141f4:	bl	110f0 <strchr@plt>
   141f8:	cmp	r0, #0
   141fc:	bne	1420c <strspn@plt+0x2fe4>
   14200:	str	r4, [r6]
   14204:	mov	r4, #0
   14208:	b	14198 <strspn@plt+0x2f70>
   1420c:	str	r5, [r6]
   14210:	b	14198 <strspn@plt+0x2f70>
   14214:	bl	10fe8 <__stack_chk_fail@plt>
   14218:	andeq	r0, r1, r8, lsr #28
   1421c:	andeq	r0, r0, r8, lsl #2
   14220:	ldrdeq	r0, [r0], -r8
   14224:	push	{r4, lr}
   14228:	mov	r4, r0
   1422c:	b	14238 <strspn@plt+0x3010>
   14230:	cmp	r0, #10
   14234:	beq	14250 <strspn@plt+0x3028>
   14238:	mov	r0, r4
   1423c:	bl	1112c <fgetc@plt>
   14240:	cmn	r0, #1
   14244:	bne	14230 <strspn@plt+0x3008>
   14248:	mov	r0, #1
   1424c:	pop	{r4, pc}
   14250:	mov	r0, #0
   14254:	pop	{r4, pc}
   14258:	cmp	r3, #0
   1425c:	cmpeq	r2, #0
   14260:	bne	14278 <strspn@plt+0x3050>
   14264:	cmp	r1, #0
   14268:	cmpeq	r0, #0
   1426c:	mvnne	r1, #0
   14270:	mvnne	r0, #0
   14274:	b	14294 <strspn@plt+0x306c>
   14278:	sub	sp, sp, #8
   1427c:	push	{sp, lr}
   14280:	bl	142a4 <strspn@plt+0x307c>
   14284:	ldr	lr, [sp, #4]
   14288:	add	sp, sp, #8
   1428c:	pop	{r2, r3}
   14290:	bx	lr
   14294:	push	{r1, lr}
   14298:	mov	r0, #8
   1429c:	bl	10f40 <raise@plt>
   142a0:	pop	{r1, pc}
   142a4:	cmp	r1, r3
   142a8:	cmpeq	r0, r2
   142ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142b0:	mov	r4, r0
   142b4:	movcc	r0, #0
   142b8:	mov	r5, r1
   142bc:	ldr	lr, [sp, #36]	; 0x24
   142c0:	movcc	r1, r0
   142c4:	bcc	143c0 <strspn@plt+0x3198>
   142c8:	cmp	r3, #0
   142cc:	clzeq	ip, r2
   142d0:	clzne	ip, r3
   142d4:	addeq	ip, ip, #32
   142d8:	cmp	r5, #0
   142dc:	clzeq	r1, r4
   142e0:	addeq	r1, r1, #32
   142e4:	clzne	r1, r5
   142e8:	sub	ip, ip, r1
   142ec:	sub	sl, ip, #32
   142f0:	lsl	r9, r3, ip
   142f4:	rsb	fp, ip, #32
   142f8:	orr	r9, r9, r2, lsl sl
   142fc:	orr	r9, r9, r2, lsr fp
   14300:	lsl	r8, r2, ip
   14304:	cmp	r5, r9
   14308:	cmpeq	r4, r8
   1430c:	movcc	r0, #0
   14310:	movcc	r1, r0
   14314:	bcc	14330 <strspn@plt+0x3108>
   14318:	mov	r0, #1
   1431c:	subs	r4, r4, r8
   14320:	lsl	r1, r0, sl
   14324:	orr	r1, r1, r0, lsr fp
   14328:	lsl	r0, r0, ip
   1432c:	sbc	r5, r5, r9
   14330:	cmp	ip, #0
   14334:	beq	143c0 <strspn@plt+0x3198>
   14338:	lsr	r6, r8, #1
   1433c:	orr	r6, r6, r9, lsl #31
   14340:	lsr	r7, r9, #1
   14344:	mov	r2, ip
   14348:	b	1436c <strspn@plt+0x3144>
   1434c:	subs	r3, r4, r6
   14350:	sbc	r8, r5, r7
   14354:	adds	r3, r3, r3
   14358:	adc	r8, r8, r8
   1435c:	adds	r4, r3, #1
   14360:	adc	r5, r8, #0
   14364:	subs	r2, r2, #1
   14368:	beq	14388 <strspn@plt+0x3160>
   1436c:	cmp	r5, r7
   14370:	cmpeq	r4, r6
   14374:	bcs	1434c <strspn@plt+0x3124>
   14378:	adds	r4, r4, r4
   1437c:	adc	r5, r5, r5
   14380:	subs	r2, r2, #1
   14384:	bne	1436c <strspn@plt+0x3144>
   14388:	lsr	r3, r4, ip
   1438c:	orr	r3, r3, r5, lsl fp
   14390:	lsr	r2, r5, ip
   14394:	orr	r3, r3, r5, lsr sl
   14398:	adds	r0, r0, r4
   1439c:	mov	r4, r3
   143a0:	lsl	r3, r2, ip
   143a4:	orr	r3, r3, r4, lsl sl
   143a8:	lsl	ip, r4, ip
   143ac:	orr	r3, r3, r4, lsr fp
   143b0:	adc	r1, r1, r5
   143b4:	subs	r0, r0, ip
   143b8:	mov	r5, r2
   143bc:	sbc	r1, r1, r3
   143c0:	cmp	lr, #0
   143c4:	strdne	r4, [lr]
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143d0:	mov	r7, r0
   143d4:	ldr	r6, [pc, #72]	; 14424 <strspn@plt+0x31fc>
   143d8:	ldr	r5, [pc, #72]	; 14428 <strspn@plt+0x3200>
   143dc:	add	r6, pc, r6
   143e0:	add	r5, pc, r5
   143e4:	sub	r6, r6, r5
   143e8:	mov	r8, r1
   143ec:	mov	r9, r2
   143f0:	bl	10f20 <raise@plt-0x20>
   143f4:	asrs	r6, r6, #2
   143f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   143fc:	mov	r4, #0
   14400:	add	r4, r4, #1
   14404:	ldr	r3, [r5], #4
   14408:	mov	r2, r9
   1440c:	mov	r1, r8
   14410:	mov	r0, r7
   14414:	blx	r3
   14418:	cmp	r6, r4
   1441c:	bne	14400 <strspn@plt+0x31d8>
   14420:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14424:	strdeq	r0, [r1], -r8
   14428:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1442c:	bx	lr
   14430:	ldr	r3, [pc, #12]	; 14444 <strspn@plt+0x321c>
   14434:	mov	r1, #0
   14438:	add	r3, pc, r3
   1443c:	ldr	r2, [r3]
   14440:	b	11114 <__cxa_atexit@plt>
   14444:	andeq	r0, r1, r4, asr #23

Disassembly of section .fini:

00014448 <.fini>:
   14448:	push	{r3, lr}
   1444c:	pop	{r3, pc}
