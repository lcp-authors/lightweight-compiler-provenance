
raspbian-preinstalled/look:     file format elf32-littlearm


Disassembly of section .init:

0001076c <.init>:
   1076c:	push	{r3, lr}
   10770:	bl	10ed0 <errc@plt+0x63c>
   10774:	pop	{r3, pc}

Disassembly of section .plt:

00010778 <towlower@plt-0x14>:
   10778:	push	{lr}		; (str lr, [sp, #-4]!)
   1077c:	ldr	lr, [pc, #4]	; 10788 <towlower@plt-0x4>
   10780:	add	lr, pc, lr
   10784:	ldr	pc, [lr, #8]!
   10788:	andeq	r1, r1, r8, ror r8

0001078c <towlower@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2168]!	; 0x878

00010798 <__stack_chk_fail@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2160]!	; 0x870

000107a4 <err@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2152]!	; 0x868

000107b0 <_IO_putc@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2144]!	; 0x860

000107bc <fwrite@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2136]!	; 0x858

000107c8 <mbrtowc@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2128]!	; 0x850

000107d4 <malloc@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2120]!	; 0x848

000107e0 <__libc_start_main@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2112]!	; 0x840

000107ec <strerror@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2104]!	; 0x838

000107f8 <__fxstat@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2096]!	; 0x830

00010804 <__gmon_start__@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2088]!	; 0x828

00010810 <open@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2080]!	; 0x820

0001081c <getopt_long@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2072]!	; 0x818

00010828 <exit@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2064]!	; 0x810

00010834 <strlen@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2056]!	; 0x808

00010840 <mmap@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2048]!	; 0x800

0001084c <iswalnum@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2040]!	; 0x7f8

00010858 <setlocale@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2032]!	; 0x7f0

00010864 <wcschr@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010870 <errx@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #2016]!	; 0x7e0

0001087c <abort@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #2008]!	; 0x7d8

00010888 <close@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #2000]!	; 0x7d0

00010894 <errc@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1992]!	; 0x7c8

Disassembly of section .text:

000108a0 <.text>:
   108a0:	ldr	r3, [pc, #1464]	; 10e60 <errc@plt+0x5cc>
   108a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108a8:	sub	sp, sp, #124	; 0x7c
   108ac:	ldr	r8, [pc, #1456]	; 10e64 <errc@plt+0x5d0>
   108b0:	ldr	r7, [pc, #1456]	; 10e68 <errc@plt+0x5d4>
   108b4:	ldr	fp, [pc, #1456]	; 10e6c <errc@plt+0x5d8>
   108b8:	ldr	sl, [pc, #1456]	; 10e70 <errc@plt+0x5dc>
   108bc:	ldr	r3, [r3]
   108c0:	add	r9, sp, #120	; 0x78
   108c4:	mov	r5, r0
   108c8:	mov	r6, r1
   108cc:	mov	r0, #0
   108d0:	ldr	r1, [pc, #1436]	; 10e74 <errc@plt+0x5e0>
   108d4:	mov	r4, #0
   108d8:	str	r3, [sp, #116]	; 0x74
   108dc:	bl	10858 <setlocale@plt>
   108e0:	str	r4, [r9, #-100]!	; 0xffffff9c
   108e4:	str	r4, [sp]
   108e8:	mov	r3, r8
   108ec:	mov	r2, r7
   108f0:	mov	r1, r6
   108f4:	mov	r0, r5
   108f8:	bl	1081c <getopt_long@plt>
   108fc:	cmn	r0, #1
   10900:	beq	109c4 <errc@plt+0x130>
   10904:	sub	r0, r0, #97	; 0x61
   10908:	cmp	r0, #19
   1090c:	ldrls	pc, [pc, r0, lsl #2]
   10910:	b	109c0 <errc@plt+0x12c>
   10914:	andeq	r0, r1, r4, ror #17
   10918:			; <UNDEFINED> instruction: 0x000109b4
   1091c:	andeq	r0, r1, r0, asr #19
   10920:	andeq	r0, r1, r8, lsr #19
   10924:	andeq	r0, r1, r0, asr #19
   10928:	muleq	r1, ip, r9
   1092c:	andeq	r0, r1, r0, asr #19
   10930:	andeq	r0, r1, r0, asr #19
   10934:	andeq	r0, r1, r0, asr #19
   10938:	andeq	r0, r1, r0, asr #19
   1093c:	andeq	r0, r1, r0, asr #19
   10940:	andeq	r0, r1, r0, asr #19
   10944:	andeq	r0, r1, r0, asr #19
   10948:	andeq	r0, r1, r0, asr #19
   1094c:	andeq	r0, r1, r0, asr #19
   10950:	andeq	r0, r1, r0, asr #19
   10954:	andeq	r0, r1, r0, asr #19
   10958:	andeq	r0, r1, r0, asr #19
   1095c:	andeq	r0, r1, r0, asr #19
   10960:	andeq	r0, r1, r4, ror #18
   10964:	mov	r3, #0
   10968:	mov	r2, #16
   1096c:	ldr	r1, [fp]
   10970:	mov	r0, r9
   10974:	bl	107c8 <mbrtowc@plt>
   10978:	str	r0, [sp, #8]
   1097c:	ldr	r0, [fp]
   10980:	bl	10834 <strlen@plt>
   10984:	ldr	r3, [sp, #8]
   10988:	cmp	r3, r0
   1098c:	beq	108e4 <errc@plt+0x50>
   10990:	ldr	r1, [pc, #1248]	; 10e78 <errc@plt+0x5e4>
   10994:	mov	r0, #2
   10998:	bl	10870 <errx@plt>
   1099c:	mov	r3, #1
   109a0:	str	r3, [sl]
   109a4:	b	108e4 <errc@plt+0x50>
   109a8:	mov	r3, #1
   109ac:	str	r3, [sl, #4]
   109b0:	b	108e4 <errc@plt+0x50>
   109b4:	mov	r3, #1
   109b8:	str	r3, [sl, #8]
   109bc:	b	108e4 <errc@plt+0x50>
   109c0:	bl	10f84 <errc@plt+0x6f0>
   109c4:	ldr	r3, [pc, #1200]	; 10e7c <errc@plt+0x5e8>
   109c8:	ldr	fp, [r3]
   109cc:	subs	r8, r5, fp
   109d0:	beq	109c0 <errc@plt+0x12c>
   109d4:	cmp	r8, #1
   109d8:	ldr	r4, [r6, fp, lsl #2]
   109dc:	ldreq	r3, [pc, #1164]	; 10e70 <errc@plt+0x5dc>
   109e0:	mov	r0, r4
   109e4:	add	fp, r6, fp, lsl #2
   109e8:	streq	r8, [r3]
   109ec:	streq	r8, [r3, #4]
   109f0:	bl	10834 <strlen@plt>
   109f4:	ldr	r3, [sp, #20]
   109f8:	str	r3, [sp, #8]
   109fc:	add	r0, r0, #1
   10a00:	lsl	r0, r0, #2
   10a04:	bl	107d4 <malloc@plt>
   10a08:	subs	r9, r0, #0
   10a0c:	movne	r6, r9
   10a10:	ldrne	r7, [pc, #1112]	; 10e70 <errc@plt+0x5dc>
   10a14:	bne	10a60 <errc@plt+0x1cc>
   10a18:	b	10e54 <errc@plt+0x5c0>
   10a1c:	ldr	r3, [r7]
   10a20:	cmp	r3, #0
   10a24:	beq	10a34 <errc@plt+0x1a0>
   10a28:	ldr	r0, [sp, #24]
   10a2c:	bl	1078c <towlower@plt>
   10a30:	str	r0, [sp, #24]
   10a34:	ldr	r3, [r7, #4]
   10a38:	ldr	sl, [sp, #24]
   10a3c:	cmp	r3, #0
   10a40:	beq	10a54 <errc@plt+0x1c0>
   10a44:	mov	r0, sl
   10a48:	bl	1084c <iswalnum@plt>
   10a4c:	cmp	r0, #0
   10a50:	beq	10a5c <errc@plt+0x1c8>
   10a54:	str	sl, [r6]
   10a58:	add	r6, r6, #4
   10a5c:	add	r4, r4, r5
   10a60:	mov	r3, #0
   10a64:	mov	r2, #16
   10a68:	mov	r1, r4
   10a6c:	add	r0, sp, #24
   10a70:	bl	107c8 <mbrtowc@plt>
   10a74:	subs	r5, r0, #0
   10a78:	beq	10a98 <errc@plt+0x204>
   10a7c:	cmn	r5, #2
   10a80:	bcc	10a1c <errc@plt+0x188>
   10a84:	mov	r2, #0
   10a88:	mov	r1, #84	; 0x54
   10a8c:	mov	r0, #2
   10a90:	bl	10894 <errc@plt>
   10a94:	b	10a1c <errc@plt+0x188>
   10a98:	ldr	r3, [sp, #8]
   10a9c:	str	r5, [r6]
   10aa0:	cmp	r3, #0
   10aa4:	beq	10abc <errc@plt+0x228>
   10aa8:	mov	r1, r3
   10aac:	mov	r0, r9
   10ab0:	bl	10864 <wcschr@plt>
   10ab4:	cmp	r0, #0
   10ab8:	strne	r5, [r0, #4]
   10abc:	cmp	r8, #1
   10ac0:	ldr	r7, [pc, #952]	; 10e80 <errc@plt+0x5ec>
   10ac4:	ldrle	r5, [pc, #952]	; 10e84 <errc@plt+0x5f0>
   10ac8:	ldrgt	r5, [fp, #4]
   10acc:	addle	r3, fp, #4
   10ad0:	addgt	r3, fp, #8
   10ad4:	strle	r3, [sp, #8]
   10ad8:	strgt	r3, [sp, #8]
   10adc:	mov	r3, #1
   10ae0:	str	r3, [sp, #12]
   10ae4:	mov	r2, #0
   10ae8:	mov	r1, r2
   10aec:	mov	r0, r5
   10af0:	bl	10810 <open@plt>
   10af4:	subs	sl, r0, #0
   10af8:	blt	10e28 <errc@plt+0x594>
   10afc:	add	r2, sp, #24
   10b00:	mov	r1, sl
   10b04:	mov	r0, #3
   10b08:	bl	107f8 <__fxstat@plt>
   10b0c:	subs	r2, r0, #0
   10b10:	bne	10e28 <errc@plt+0x594>
   10b14:	ldr	r1, [sp, #68]	; 0x44
   10b18:	cmp	r1, #0
   10b1c:	blt	10e38 <errc@plt+0x5a4>
   10b20:	beq	10bd0 <errc@plt+0x33c>
   10b24:	mov	r3, #1
   10b28:	str	r2, [sp, #4]
   10b2c:	str	sl, [sp]
   10b30:	mov	r2, r3
   10b34:	bl	10840 <mmap@plt>
   10b38:	cmn	r0, #1
   10b3c:	mov	r4, r0
   10b40:	beq	10e28 <errc@plt+0x594>
   10b44:	ldr	r3, [pc, #804]	; 10e70 <errc@plt+0x5dc>
   10b48:	ldr	r2, [r3, #8]
   10b4c:	ldr	r3, [sp, #68]	; 0x44
   10b50:	cmp	r2, #0
   10b54:	add	r5, r0, r3
   10b58:	bne	10c88 <errc@plt+0x3f4>
   10b5c:	cmp	r0, r5
   10b60:	mov	r6, #1
   10b64:	bcs	10bc4 <errc@plt+0x330>
   10b68:	mov	r2, r5
   10b6c:	mov	r1, r4
   10b70:	mov	r0, r9
   10b74:	bl	10fb0 <errc@plt+0x71c>
   10b78:	cmp	r0, #0
   10b7c:	beq	10c00 <errc@plt+0x36c>
   10b80:	cmp	r5, r4
   10b84:	bls	10bb8 <errc@plt+0x324>
   10b88:	ldrb	r3, [r4]
   10b8c:	cmp	r3, #10
   10b90:	addne	r3, r4, #1
   10b94:	bne	10bac <errc@plt+0x318>
   10b98:	b	10bb8 <errc@plt+0x324>
   10b9c:	ldrb	r2, [r3]
   10ba0:	add	r3, r3, #1
   10ba4:	cmp	r2, #10
   10ba8:	beq	10bb8 <errc@plt+0x324>
   10bac:	cmp	r5, r3
   10bb0:	mov	r4, r3
   10bb4:	bhi	10b9c <errc@plt+0x308>
   10bb8:	add	r4, r4, #1
   10bbc:	cmp	r5, r4
   10bc0:	bhi	10b68 <errc@plt+0x2d4>
   10bc4:	ldr	r3, [sp, #12]
   10bc8:	mul	r3, r6, r3
   10bcc:	str	r3, [sp, #12]
   10bd0:	mov	r0, sl
   10bd4:	bl	10888 <close@plt>
   10bd8:	cmp	r8, #2
   10bdc:	ble	10bf8 <errc@plt+0x364>
   10be0:	ldr	r3, [sp, #8]
   10be4:	sub	r8, r8, #1
   10be8:	ldr	r5, [r3], #4
   10bec:	cmp	r5, #0
   10bf0:	str	r3, [sp, #8]
   10bf4:	bne	10ae4 <errc@plt+0x250>
   10bf8:	ldr	r0, [sp, #12]
   10bfc:	bl	10828 <exit@plt>
   10c00:	cmp	r5, r4
   10c04:	bls	10c44 <errc@plt+0x3b0>
   10c08:	ldrb	r0, [r4]
   10c0c:	cmp	r0, #10
   10c10:	beq	10c64 <errc@plt+0x3d0>
   10c14:	add	r6, r4, #1
   10c18:	b	10c28 <errc@plt+0x394>
   10c1c:	ldrb	r0, [r6], #1
   10c20:	cmp	r0, #10
   10c24:	beq	10c64 <errc@plt+0x3d0>
   10c28:	ldr	r1, [r7]
   10c2c:	bl	107b0 <_IO_putc@plt>
   10c30:	cmn	r0, #1
   10c34:	beq	10c58 <errc@plt+0x3c4>
   10c38:	cmp	r5, r6
   10c3c:	mov	r4, r6
   10c40:	bne	10c1c <errc@plt+0x388>
   10c44:	ldr	r1, [r7]
   10c48:	mov	r0, #10
   10c4c:	bl	107b0 <_IO_putc@plt>
   10c50:	cmn	r0, #1
   10c54:	bne	10c80 <errc@plt+0x3ec>
   10c58:	ldr	r1, [pc, #552]	; 10e88 <errc@plt+0x5f4>
   10c5c:	mov	r0, #2
   10c60:	bl	107a4 <err@plt>
   10c64:	ldr	r1, [r7]
   10c68:	mov	r0, #10
   10c6c:	bl	107b0 <_IO_putc@plt>
   10c70:	cmn	r0, #1
   10c74:	beq	10c58 <errc@plt+0x3c4>
   10c78:	mov	r6, #0
   10c7c:	b	10b88 <errc@plt+0x2f4>
   10c80:	mov	r6, #0
   10c84:	b	10bb8 <errc@plt+0x324>
   10c88:	add	r3, r3, r3, lsr #31
   10c8c:	add	r6, r0, r3, asr #1
   10c90:	cmp	r5, r6
   10c94:	bls	10da0 <errc@plt+0x50c>
   10c98:	ldrb	r3, [r0, r3, asr #1]
   10c9c:	add	r6, r6, #1
   10ca0:	cmp	r3, #10
   10ca4:	bne	10cb8 <errc@plt+0x424>
   10ca8:	b	10da0 <errc@plt+0x50c>
   10cac:	ldrb	r3, [r6], #1
   10cb0:	cmp	r3, #10
   10cb4:	beq	10da0 <errc@plt+0x50c>
   10cb8:	cmp	r5, r6
   10cbc:	bne	10cac <errc@plt+0x418>
   10cc0:	cmp	r5, r4
   10cc4:	bls	10e20 <errc@plt+0x58c>
   10cc8:	mov	r2, r5
   10ccc:	mov	r1, r4
   10cd0:	mov	r0, r9
   10cd4:	bl	10fb0 <errc@plt+0x71c>
   10cd8:	cmn	r0, #1
   10cdc:	beq	10e20 <errc@plt+0x58c>
   10ce0:	cmp	r0, #0
   10ce4:	bne	10d84 <errc@plt+0x4f0>
   10ce8:	cmp	r4, #0
   10cec:	movne	r6, r4
   10cf0:	beq	10e20 <errc@plt+0x58c>
   10cf4:	mov	r2, r5
   10cf8:	mov	r1, r6
   10cfc:	mov	r0, r9
   10d00:	bl	10fb0 <errc@plt+0x71c>
   10d04:	cmp	r0, #0
   10d08:	bne	10d70 <errc@plt+0x4dc>
   10d0c:	cmp	r5, r6
   10d10:	bls	10d50 <errc@plt+0x4bc>
   10d14:	ldrb	r0, [r6]
   10d18:	cmp	r0, #10
   10d1c:	addne	fp, r6, #1
   10d20:	bne	10d34 <errc@plt+0x4a0>
   10d24:	b	10d50 <errc@plt+0x4bc>
   10d28:	ldrb	r0, [fp], #1
   10d2c:	cmp	r0, #10
   10d30:	beq	10d50 <errc@plt+0x4bc>
   10d34:	ldr	r1, [r7]
   10d38:	bl	107b0 <_IO_putc@plt>
   10d3c:	cmn	r0, #1
   10d40:	beq	10c58 <errc@plt+0x3c4>
   10d44:	cmp	fp, r5
   10d48:	mov	r6, fp
   10d4c:	bne	10d28 <errc@plt+0x494>
   10d50:	ldr	r1, [r7]
   10d54:	mov	r0, #10
   10d58:	bl	107b0 <_IO_putc@plt>
   10d5c:	cmn	r0, #1
   10d60:	beq	10c58 <errc@plt+0x3c4>
   10d64:	add	r6, r6, #1
   10d68:	cmp	r5, r6
   10d6c:	bhi	10cf4 <errc@plt+0x460>
   10d70:	ldr	r3, [sp, #12]
   10d74:	cmp	r4, #0
   10d78:	movne	r3, #0
   10d7c:	str	r3, [sp, #12]
   10d80:	b	10bd0 <errc@plt+0x33c>
   10d84:	ldrb	r3, [r4], #1
   10d88:	cmp	r3, #10
   10d8c:	beq	10cc0 <errc@plt+0x42c>
   10d90:	cmp	r5, r4
   10d94:	bne	10d84 <errc@plt+0x4f0>
   10d98:	mov	r4, r5
   10d9c:	b	10cc0 <errc@plt+0x42c>
   10da0:	mov	fp, r5
   10da4:	cmp	r6, fp
   10da8:	movcs	r3, #0
   10dac:	movcc	r3, #1
   10db0:	cmp	fp, r4
   10db4:	movls	r3, #0
   10db8:	cmp	r3, #0
   10dbc:	beq	10cc0 <errc@plt+0x42c>
   10dc0:	mov	r2, fp
   10dc4:	mov	r1, r6
   10dc8:	mov	r0, r9
   10dcc:	bl	10fb0 <errc@plt+0x71c>
   10dd0:	cmp	r0, #1
   10dd4:	moveq	r4, r6
   10dd8:	movne	fp, r6
   10ddc:	sub	r3, fp, r4
   10de0:	add	r3, r3, r3, lsr #31
   10de4:	add	r6, r4, r3, asr #1
   10de8:	cmp	fp, r6
   10dec:	bls	10da4 <errc@plt+0x510>
   10df0:	ldrb	r3, [r4, r3, asr #1]
   10df4:	add	r6, r6, #1
   10df8:	cmp	r3, #10
   10dfc:	bne	10e10 <errc@plt+0x57c>
   10e00:	b	10da4 <errc@plt+0x510>
   10e04:	ldrb	r3, [r6], #1
   10e08:	cmp	r3, #10
   10e0c:	beq	10da4 <errc@plt+0x510>
   10e10:	cmp	fp, r6
   10e14:	bne	10e04 <errc@plt+0x570>
   10e18:	mov	r6, fp
   10e1c:	b	10da4 <errc@plt+0x510>
   10e20:	mov	r4, #0
   10e24:	b	10d70 <errc@plt+0x4dc>
   10e28:	mov	r2, r5
   10e2c:	ldr	r1, [pc, #88]	; 10e8c <errc@plt+0x5f8>
   10e30:	mov	r0, #2
   10e34:	bl	107a4 <err@plt>
   10e38:	mov	r0, #27
   10e3c:	bl	107ec <strerror@plt>
   10e40:	mov	r2, r5
   10e44:	ldr	r1, [pc, #68]	; 10e90 <errc@plt+0x5fc>
   10e48:	mov	r3, r0
   10e4c:	mov	r0, #2
   10e50:	bl	10870 <errx@plt>
   10e54:	mov	r1, r9
   10e58:	mov	r0, #2
   10e5c:	bl	107a4 <err@plt>
   10e60:	andeq	r1, r2, r0, lsl #30
   10e64:	andeq	r2, r2, ip, lsl #1
   10e68:	muleq	r1, r0, r1
   10e6c:	andeq	r2, r2, r0, lsl #2
   10e70:	andeq	r2, r2, r8, lsl #2
   10e74:	andeq	r1, r1, r4, asr #3
   10e78:	andeq	r1, r1, r0, ror r1
   10e7c:	strdeq	r2, [r2], -r0
   10e80:	strdeq	r2, [r2], -ip
   10e84:	andeq	r2, r2, r4, ror r0
   10e88:	andeq	r1, r1, r0, lsr #3
   10e8c:	muleq	r1, ip, r1
   10e90:	muleq	r1, r8, r1
   10e94:	mov	fp, #0
   10e98:	mov	lr, #0
   10e9c:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea0:	mov	r2, sp
   10ea4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ea8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eac:	ldr	ip, [pc, #16]	; 10ec4 <errc@plt+0x630>
   10eb0:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb4:	ldr	r0, [pc, #12]	; 10ec8 <errc@plt+0x634>
   10eb8:	ldr	r3, [pc, #12]	; 10ecc <errc@plt+0x638>
   10ebc:	bl	107e0 <__libc_start_main@plt>
   10ec0:	bl	1087c <abort@plt>
   10ec4:	andeq	r1, r1, r0, lsr r1
   10ec8:	andeq	r0, r1, r0, lsr #17
   10ecc:	ldrdeq	r1, [r1], -r0
   10ed0:	ldr	r3, [pc, #20]	; 10eec <errc@plt+0x658>
   10ed4:	ldr	r2, [pc, #20]	; 10ef0 <errc@plt+0x65c>
   10ed8:	add	r3, pc, r3
   10edc:	ldr	r2, [r3, r2]
   10ee0:	cmp	r2, #0
   10ee4:	bxeq	lr
   10ee8:	b	10804 <__gmon_start__@plt>
   10eec:	andeq	r1, r1, r0, lsr #2
   10ef0:	andeq	r0, r0, r8, rrx
   10ef4:	ldr	r0, [pc, #24]	; 10f14 <errc@plt+0x680>
   10ef8:	ldr	r3, [pc, #24]	; 10f18 <errc@plt+0x684>
   10efc:	cmp	r3, r0
   10f00:	bxeq	lr
   10f04:	ldr	r3, [pc, #16]	; 10f1c <errc@plt+0x688>
   10f08:	cmp	r3, #0
   10f0c:	bxeq	lr
   10f10:	bx	r3
   10f14:	andeq	r2, r2, ip, ror #1
   10f18:	andeq	r2, r2, ip, ror #1
   10f1c:	andeq	r0, r0, r0
   10f20:	ldr	r0, [pc, #36]	; 10f4c <errc@plt+0x6b8>
   10f24:	ldr	r1, [pc, #36]	; 10f50 <errc@plt+0x6bc>
   10f28:	sub	r1, r1, r0
   10f2c:	asr	r1, r1, #2
   10f30:	add	r1, r1, r1, lsr #31
   10f34:	asrs	r1, r1, #1
   10f38:	bxeq	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <errc@plt+0x6c0>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	andeq	r2, r2, ip, ror #1
   10f50:	andeq	r2, r2, ip, ror #1
   10f54:	andeq	r0, r0, r0
   10f58:	push	{r4, lr}
   10f5c:	ldr	r4, [pc, #24]	; 10f7c <errc@plt+0x6e8>
   10f60:	ldrb	r3, [r4]
   10f64:	cmp	r3, #0
   10f68:	popne	{r4, pc}
   10f6c:	bl	10ef4 <errc@plt+0x660>
   10f70:	mov	r3, #1
   10f74:	strb	r3, [r4]
   10f78:	pop	{r4, pc}
   10f7c:	andeq	r2, r2, r4, lsl #2
   10f80:	b	10f20 <errc@plt+0x68c>
   10f84:	ldr	r3, [pc, #28]	; 10fa8 <errc@plt+0x714>
   10f88:	push	{r4, lr}
   10f8c:	mov	r2, #47	; 0x2f
   10f90:	mov	r1, #1
   10f94:	ldr	r3, [r3]
   10f98:	ldr	r0, [pc, #12]	; 10fac <errc@plt+0x718>
   10f9c:	bl	107bc <fwrite@plt>
   10fa0:	mov	r0, #2
   10fa4:	bl	10828 <exit@plt>
   10fa8:	strdeq	r2, [r2], -r8
   10fac:	andeq	r1, r1, r0, asr #2
   10fb0:	ldr	r3, [pc, #272]	; 110c8 <errc@plt+0x834>
   10fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fb8:	sub	sp, sp, #12
   10fbc:	ldr	r7, [r0]
   10fc0:	ldr	r3, [r3]
   10fc4:	cmp	r7, #0
   10fc8:	str	r3, [sp, #4]
   10fcc:	beq	11094 <errc@plt+0x800>
   10fd0:	cmp	r1, r2
   10fd4:	mov	r4, r1
   10fd8:	mov	r8, r2
   10fdc:	bcs	110a4 <errc@plt+0x810>
   10fe0:	ldrb	r3, [r1]
   10fe4:	cmp	r3, #10
   10fe8:	beq	110a4 <errc@plt+0x810>
   10fec:	ldr	r3, [pc, #216]	; 110cc <errc@plt+0x838>
   10ff0:	mov	r5, r0
   10ff4:	ldr	sl, [r3]
   10ff8:	ldr	r9, [r3, #4]
   10ffc:	b	11014 <errc@plt+0x780>
   11000:	cmp	r8, r4
   11004:	bls	110a4 <errc@plt+0x810>
   11008:	ldrb	r3, [r4]
   1100c:	cmp	r3, #10
   11010:	beq	110a4 <errc@plt+0x810>
   11014:	sub	r2, r8, r4
   11018:	mov	r3, #0
   1101c:	mov	r1, r4
   11020:	mov	r0, sp
   11024:	bl	107c8 <mbrtowc@plt>
   11028:	add	r2, r0, #2
   1102c:	cmp	r2, #1
   11030:	mov	fp, r0
   11034:	ldrbls	r6, [r4]
   11038:	ldrhi	r6, [sp]
   1103c:	movls	fp, #1
   11040:	strls	r6, [sp]
   11044:	cmp	sl, #0
   11048:	beq	1105c <errc@plt+0x7c8>
   1104c:	mov	r0, r6
   11050:	bl	1078c <towlower@plt>
   11054:	mov	r6, r0
   11058:	str	r0, [sp]
   1105c:	cmp	r9, #0
   11060:	beq	11078 <errc@plt+0x7e4>
   11064:	mov	r0, r6
   11068:	bl	1084c <iswalnum@plt>
   1106c:	cmp	r0, #0
   11070:	subeq	r5, r5, #4
   11074:	beq	11080 <errc@plt+0x7ec>
   11078:	cmp	r7, r6
   1107c:	bne	1109c <errc@plt+0x808>
   11080:	ldr	r7, [r5, #4]
   11084:	add	r4, r4, fp
   11088:	cmp	r7, #0
   1108c:	add	r5, r5, #4
   11090:	bne	11000 <errc@plt+0x76c>
   11094:	mov	r0, #0
   11098:	b	110a8 <errc@plt+0x814>
   1109c:	mvncc	r0, #0
   110a0:	bcc	110a8 <errc@plt+0x814>
   110a4:	mov	r0, #1
   110a8:	ldr	r3, [pc, #24]	; 110c8 <errc@plt+0x834>
   110ac:	ldr	r2, [sp, #4]
   110b0:	ldr	r3, [r3]
   110b4:	cmp	r2, r3
   110b8:	bne	110c4 <errc@plt+0x830>
   110bc:	add	sp, sp, #12
   110c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110c4:	bl	10798 <__stack_chk_fail@plt>
   110c8:	andeq	r1, r2, r0, lsl #30
   110cc:	andeq	r2, r2, r8, lsl #2
   110d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110d4:	mov	r7, r0
   110d8:	ldr	r6, [pc, #72]	; 11128 <errc@plt+0x894>
   110dc:	ldr	r5, [pc, #72]	; 1112c <errc@plt+0x898>
   110e0:	add	r6, pc, r6
   110e4:	add	r5, pc, r5
   110e8:	sub	r6, r6, r5
   110ec:	mov	r8, r1
   110f0:	mov	r9, r2
   110f4:	bl	1076c <towlower@plt-0x20>
   110f8:	asrs	r6, r6, #2
   110fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11100:	mov	r4, #0
   11104:	add	r4, r4, #1
   11108:	ldr	r3, [r5], #4
   1110c:	mov	r2, r9
   11110:	mov	r1, r8
   11114:	mov	r0, r7
   11118:	blx	r3
   1111c:	cmp	r6, r4
   11120:	bne	11104 <errc@plt+0x870>
   11124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11128:	andeq	r0, r1, r4, lsl lr
   1112c:	andeq	r0, r1, ip, lsl #28
   11130:	bx	lr

Disassembly of section .fini:

00011134 <.fini>:
   11134:	push	{r3, lr}
   11138:	pop	{r3, pc}
