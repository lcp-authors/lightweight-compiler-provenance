
raspbian-preinstalled/cupstestdsc:     file format elf32-littlearm


Disassembly of section .init:

000007a4 <.init>:
 7a4:	push	{r3, lr}
 7a8:	bl	9ac <__printf_chk@plt+0xec>
 7ac:	pop	{r3, pc}

Disassembly of section .plt:

000007b0 <cupsFileGetLine@plt-0x14>:
 7b0:	push	{lr}		; (str lr, [sp, #-4]!)
 7b4:	ldr	lr, [pc, #4]	; 7c0 <cupsFileGetLine@plt-0x4>
 7b8:	add	lr, pc, lr
 7bc:	ldr	pc, [lr, #8]!
 7c0:			; <UNDEFINED> instruction: 0x000117b4

000007c4 <cupsFileGetLine@plt>:
 7c4:	add	ip, pc, #0, 12
 7c8:	add	ip, ip, #69632	; 0x11000
 7cc:	ldr	pc, [ip, #1972]!	; 0x7b4

000007d0 <_cupsSetLocale@plt>:
 7d0:	add	ip, pc, #0, 12
 7d4:	add	ip, ip, #69632	; 0x11000
 7d8:	ldr	pc, [ip, #1964]!	; 0x7ac

000007dc <strtol@plt>:
 7dc:	add	ip, pc, #0, 12
 7e0:	add	ip, ip, #69632	; 0x11000
 7e4:	ldr	pc, [ip, #1956]!	; 0x7a4

000007e8 <_cupsLangPrintf@plt>:
 7e8:	add	ip, pc, #0, 12
 7ec:	add	ip, ip, #69632	; 0x11000
 7f0:	ldr	pc, [ip, #1948]!	; 0x79c

000007f4 <strncmp@plt>:
 7f4:	add	ip, pc, #0, 12
 7f8:	add	ip, ip, #69632	; 0x11000
 7fc:	ldr	pc, [ip, #1940]!	; 0x794

00000800 <_cupsLangPuts@plt>:
 800:	add	ip, pc, #0, 12
 804:	add	ip, ip, #69632	; 0x11000
 808:	ldr	pc, [ip, #1932]!	; 0x78c

0000080c <exit@plt>:
 80c:	add	ip, pc, #0, 12
 810:	add	ip, ip, #69632	; 0x11000
 814:	ldr	pc, [ip, #1924]!	; 0x784

00000818 <perror@plt>:
 818:	add	ip, pc, #0, 12
 81c:	add	ip, ip, #69632	; 0x11000
 820:	ldr	pc, [ip, #1916]!	; 0x77c

00000824 <cupsFileStdin@plt>:
 824:	add	ip, pc, #0, 12
 828:	add	ip, ip, #69632	; 0x11000
 82c:	ldr	pc, [ip, #1908]!	; 0x774

00000830 <abort@plt>:
 830:	add	ip, pc, #0, 12
 834:	add	ip, ip, #69632	; 0x11000
 838:	ldr	pc, [ip, #1900]!	; 0x76c

0000083c <strtod@plt>:
 83c:	add	ip, pc, #0, 12
 840:	add	ip, ip, #69632	; 0x11000
 844:	ldr	pc, [ip, #1892]!	; 0x764

00000848 <cupsFileClose@plt>:
 848:	add	ip, pc, #0, 12
 84c:	add	ip, ip, #69632	; 0x11000
 850:	ldr	pc, [ip, #1884]!	; 0x75c

00000854 <__stack_chk_fail@plt>:
 854:	add	ip, pc, #0, 12
 858:	add	ip, ip, #69632	; 0x11000
 85c:	ldr	pc, [ip, #1876]!	; 0x754

00000860 <cupsFileOpen@plt>:
 860:	add	ip, pc, #0, 12
 864:	add	ip, ip, #69632	; 0x11000
 868:	ldr	pc, [ip, #1868]!	; 0x74c

0000086c <strstr@plt>:
 86c:	add	ip, pc, #0, 12
 870:	add	ip, ip, #69632	; 0x11000
 874:	ldr	pc, [ip, #1860]!	; 0x744

00000878 <strcmp@plt>:
 878:	add	ip, pc, #0, 12
 87c:	add	ip, ip, #69632	; 0x11000
 880:	ldr	pc, [ip, #1852]!	; 0x73c

00000884 <sscanf@plt>:
 884:	add	ip, pc, #0, 12
 888:	add	ip, ip, #69632	; 0x11000
 88c:	ldr	pc, [ip, #1844]!	; 0x734

00000890 <fflush@plt>:
 890:	add	ip, pc, #0, 12
 894:	add	ip, ip, #69632	; 0x11000
 898:	ldr	pc, [ip, #1836]!	; 0x72c

0000089c <__libc_start_main@plt>:
 89c:	add	ip, pc, #0, 12
 8a0:	add	ip, ip, #69632	; 0x11000
 8a4:	ldr	pc, [ip, #1828]!	; 0x724

000008a8 <__gmon_start__@plt>:
 8a8:	add	ip, pc, #0, 12
 8ac:	add	ip, ip, #69632	; 0x11000
 8b0:	ldr	pc, [ip, #1820]!	; 0x71c

000008b4 <__cxa_finalize@plt>:
 8b4:	add	ip, pc, #0, 12
 8b8:	add	ip, ip, #69632	; 0x11000
 8bc:	ldr	pc, [ip, #1812]!	; 0x714

000008c0 <__printf_chk@plt>:
 8c0:	add	ip, pc, #0, 12
 8c4:	add	ip, ip, #69632	; 0x11000
 8c8:	ldr	pc, [ip, #1804]!	; 0x70c

Disassembly of section .text:

000008cc <.text>:
     8cc:	push	{r4, r5, r6, r7, r8, lr}
     8d0:	mov	r7, r0
     8d4:	mov	r0, r1
     8d8:	mov	r5, r1
     8dc:	bl	7d0 <_cupsSetLocale@plt>
     8e0:	cmp	r7, #1
     8e4:	ble	94c <__printf_chk@plt+0x8c>
     8e8:	ldr	r8, [pc, #96]	; 950 <__printf_chk@plt+0x90>
     8ec:	mov	r6, #0
     8f0:	add	r8, pc, r8
     8f4:	mov	r4, #1
     8f8:	b	920 <__printf_chk@plt+0x60>
     8fc:	ldrb	r3, [r0, #1]
     900:	cmp	r3, #0
     904:	bne	94c <__printf_chk@plt+0x8c>
     908:	mov	r0, r8
     90c:	bl	ad0 <__printf_chk@plt+0x210>
     910:	add	r4, r4, #1
     914:	cmp	r7, r4
     918:	add	r6, r6, r0
     91c:	beq	944 <__printf_chk@plt+0x84>
     920:	ldr	r0, [r5, #4]!
     924:	ldrb	r3, [r0]
     928:	cmp	r3, #45	; 0x2d
     92c:	beq	8fc <__printf_chk@plt+0x3c>
     930:	bl	ad0 <__printf_chk@plt+0x210>
     934:	add	r4, r4, #1
     938:	cmp	r7, r4
     93c:	add	r6, r6, r0
     940:	bne	920 <__printf_chk@plt+0x60>
     944:	mov	r0, r6
     948:	pop	{r4, r5, r6, r7, r8, pc}
     94c:	bl	16ac <__printf_chk@plt+0xdec>
     950:	ldrdeq	r0, [r0], -ip
     954:	mov	fp, #0
     958:	mov	lr, #0
     95c:	pop	{r1}		; (ldr r1, [sp], #4)
     960:	mov	r2, sp
     964:	push	{r2}		; (str r2, [sp, #-4]!)
     968:	push	{r0}		; (str r0, [sp, #-4]!)
     96c:	ldr	sl, [pc, #40]	; 99c <__printf_chk@plt+0xdc>
     970:	add	r3, pc, #36	; 0x24
     974:	add	sl, sl, r3
     978:	ldr	ip, [pc, #32]	; 9a0 <__printf_chk@plt+0xe0>
     97c:	ldr	ip, [sl, ip]
     980:	push	{ip}		; (str ip, [sp, #-4]!)
     984:	ldr	r3, [pc, #24]	; 9a4 <__printf_chk@plt+0xe4>
     988:	ldr	r3, [sl, r3]
     98c:	ldr	r0, [pc, #20]	; 9a8 <__printf_chk@plt+0xe8>
     990:	ldr	r0, [sl, r0]
     994:	bl	89c <__libc_start_main@plt>
     998:	bl	830 <abort@plt>
     99c:	ldrdeq	r1, [r1], -r8
     9a0:	andeq	r0, r0, ip, ror r0
     9a4:	andeq	r0, r0, r0, ror r0
     9a8:	andeq	r0, r0, r8, rrx
     9ac:	ldr	r3, [pc, #20]	; 9c8 <__printf_chk@plt+0x108>
     9b0:	ldr	r2, [pc, #20]	; 9cc <__printf_chk@plt+0x10c>
     9b4:	add	r3, pc, r3
     9b8:	ldr	r2, [r3, r2]
     9bc:	cmp	r2, #0
     9c0:	bxeq	lr
     9c4:	b	8a8 <__gmon_start__@plt>
     9c8:			; <UNDEFINED> instruction: 0x000115b8
     9cc:	andeq	r0, r0, r0, lsl #1
     9d0:	ldr	r0, [pc, #44]	; a04 <__printf_chk@plt+0x144>
     9d4:	ldr	r3, [pc, #44]	; a08 <__printf_chk@plt+0x148>
     9d8:	add	r0, pc, r0
     9dc:	add	r3, pc, r3
     9e0:	cmp	r3, r0
     9e4:	ldr	r3, [pc, #32]	; a0c <__printf_chk@plt+0x14c>
     9e8:	add	r3, pc, r3
     9ec:	bxeq	lr
     9f0:	ldr	r2, [pc, #24]	; a10 <__printf_chk@plt+0x150>
     9f4:	ldr	r3, [r3, r2]
     9f8:	cmp	r3, #0
     9fc:	bxeq	lr
     a00:	bx	r3
     a04:	andeq	r1, r1, r8, lsr #12
     a08:	andeq	r1, r1, r4, lsr #12
     a0c:	andeq	r1, r1, r4, lsl #11
     a10:	andeq	r0, r0, r8, ror r0
     a14:	ldr	r0, [pc, #56]	; a54 <__printf_chk@plt+0x194>
     a18:	ldr	r3, [pc, #56]	; a58 <__printf_chk@plt+0x198>
     a1c:	add	r0, pc, r0
     a20:	add	r3, pc, r3
     a24:	sub	r1, r3, r0
     a28:	ldr	r3, [pc, #44]	; a5c <__printf_chk@plt+0x19c>
     a2c:	asr	r1, r1, #2
     a30:	add	r3, pc, r3
     a34:	add	r1, r1, r1, lsr #31
     a38:	asrs	r1, r1, #1
     a3c:	bxeq	lr
     a40:	ldr	r2, [pc, #24]	; a60 <__printf_chk@plt+0x1a0>
     a44:	ldr	r3, [r3, r2]
     a48:	cmp	r3, #0
     a4c:	bxeq	lr
     a50:	bx	r3
     a54:	andeq	r1, r1, r4, ror #11
     a58:	andeq	r1, r1, r0, ror #11
     a5c:	andeq	r1, r1, ip, lsr r5
     a60:	andeq	r0, r0, r4, lsl #1
     a64:	ldr	r3, [pc, #76]	; ab8 <__printf_chk@plt+0x1f8>
     a68:	ldr	r2, [pc, #76]	; abc <__printf_chk@plt+0x1fc>
     a6c:	add	r3, pc, r3
     a70:	add	r2, pc, r2
     a74:	ldrb	r3, [r3]
     a78:	cmp	r3, #0
     a7c:	bxne	lr
     a80:	ldr	r3, [pc, #56]	; ac0 <__printf_chk@plt+0x200>
     a84:	push	{r4, lr}
     a88:	ldr	r3, [r2, r3]
     a8c:	cmp	r3, #0
     a90:	beq	aa0 <__printf_chk@plt+0x1e0>
     a94:	ldr	r3, [pc, #40]	; ac4 <__printf_chk@plt+0x204>
     a98:	ldr	r0, [pc, r3]
     a9c:	bl	8b4 <__cxa_finalize@plt>
     aa0:	bl	9d0 <__printf_chk@plt+0x110>
     aa4:	ldr	r3, [pc, #28]	; ac8 <__printf_chk@plt+0x208>
     aa8:	mov	r2, #1
     aac:	add	r3, pc, r3
     ab0:	strb	r2, [r3]
     ab4:	pop	{r4, pc}
     ab8:	muleq	r1, r4, r5
     abc:	strdeq	r1, [r1], -ip
     ac0:	andeq	r0, r0, r8, lsl #1
     ac4:	andeq	r1, r1, r4, ror #10
     ac8:	andeq	r1, r1, r4, asr r5
     acc:	b	a14 <__printf_chk@plt+0x154>
     ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ad4:	vpush	{d8}
     ad8:	ldr	r2, [pc, #904]	; e68 <__printf_chk@plt+0x5a8>
     adc:	ldr	r3, [pc, #904]	; e6c <__printf_chk@plt+0x5ac>
     ae0:	add	r2, pc, r2
     ae4:	sub	sp, sp, #1376	; 0x560
     ae8:	sub	sp, sp, #12
     aec:	ldr	r1, [pc, #892]	; e70 <__printf_chk@plt+0x5b0>
     af0:	str	r2, [sp, #32]
     af4:	ldr	r3, [r2, r3]
     af8:	add	r1, pc, r1
     afc:	str	r3, [sp, #36]	; 0x24
     b00:	ldr	r3, [r3]
     b04:	mov	r4, r0
     b08:	str	r3, [sp, #1380]	; 0x564
     b0c:	bl	878 <strcmp@plt>
     b10:	cmp	r0, #0
     b14:	bne	11e4 <__printf_chk@plt+0x924>
     b18:	bl	824 <cupsFileStdin@plt>
     b1c:	mov	fp, r0
     b20:	cmp	fp, #0
     b24:	beq	1200 <__printf_chk@plt+0x940>
     b28:	ldr	r1, [pc, #836]	; e74 <__printf_chk@plt+0x5b4>
     b2c:	mov	r2, r4
     b30:	add	r1, pc, r1
     b34:	mov	r0, #1
     b38:	bl	8c0 <__printf_chk@plt>
     b3c:	ldr	r2, [sp, #32]
     b40:	ldr	r3, [pc, #816]	; e78 <__printf_chk@plt+0x5b8>
     b44:	mov	r8, #0
     b48:	str	r8, [sp, #16]
     b4c:	ldr	r3, [r2, r3]
     b50:	str	r8, [sp, #60]	; 0x3c
     b54:	str	r3, [sp, #12]
     b58:	ldr	r0, [r3]
     b5c:	str	r8, [sp, #68]	; 0x44
     b60:	bl	890 <fflush@plt>
     b64:	add	r3, sp, #360	; 0x168
     b68:	str	r3, [sp, #20]
     b6c:	ldr	r3, [pc, #776]	; e7c <__printf_chk@plt+0x5bc>
     b70:	vldr	s16, [pc, #748]	; e64 <__printf_chk@plt+0x5a4>
     b74:	add	r3, pc, r3
     b78:	str	r3, [sp, #28]
     b7c:	ldr	r3, [pc, #764]	; e80 <__printf_chk@plt+0x5c0>
     b80:	mov	r9, r8
     b84:	add	r3, pc, r3
     b88:	str	r3, [sp, #52]	; 0x34
     b8c:	ldr	r3, [pc, #752]	; e84 <__printf_chk@plt+0x5c4>
     b90:	mov	r4, r8
     b94:	mov	r6, r8
     b98:	mov	sl, r8
     b9c:	add	r7, sp, #356	; 0x164
     ba0:	add	r3, pc, r3
     ba4:	str	r8, [sp, #64]	; 0x40
     ba8:	str	r8, [sp, #44]	; 0x2c
     bac:	str	r8, [sp, #56]	; 0x38
     bb0:	str	r8, [sp, #24]
     bb4:	str	r8, [sp, #40]	; 0x28
     bb8:	str	r8, [sp, #48]	; 0x30
     bbc:	str	r8, [sp, #72]	; 0x48
     bc0:	str	r3, [sp, #76]	; 0x4c
     bc4:	mov	r2, #1024	; 0x400
     bc8:	mov	r1, r7
     bcc:	mov	r0, fp
     bd0:	bl	7c4 <cupsFileGetLine@plt>
     bd4:	subs	r5, r0, #0
     bd8:	beq	f58 <__printf_chk@plt+0x698>
     bdc:	cmp	r5, #255	; 0xff
     be0:	add	r6, r6, #1
     be4:	bls	c18 <__printf_chk@plt+0x358>
     be8:	cmp	r8, #0
     bec:	bne	c14 <__printf_chk@plt+0x354>
     bf0:	ldr	r3, [sp, #12]
     bf4:	cmp	sl, #0
     bf8:	ldr	r0, [r3]
     bfc:	beq	e18 <__printf_chk@plt+0x558>
     c00:	mov	r3, r5
     c04:	mov	r2, r6
     c08:	ldr	r1, [sp, #28]
     c0c:	add	sl, sl, #1
     c10:	bl	7e8 <_cupsLangPrintf@plt>
     c14:	add	r8, r8, #1
     c18:	cmp	r6, #1
     c1c:	beq	cec <__printf_chk@plt+0x42c>
     c20:	cmp	r9, #0
     c24:	ble	d1c <__printf_chk@plt+0x45c>
     c28:	ldr	r1, [pc, #600]	; e88 <__printf_chk@plt+0x5c8>
     c2c:	mov	r2, #16
     c30:	add	r1, pc, r1
     c34:	mov	r0, r7
     c38:	bl	7f4 <strncmp@plt>
     c3c:	cmp	r0, #0
     c40:	beq	dbc <__printf_chk@plt+0x4fc>
     c44:	ldr	r1, [pc, #576]	; e8c <__printf_chk@plt+0x5cc>
     c48:	mov	r2, #13
     c4c:	add	r1, pc, r1
     c50:	mov	r0, r7
     c54:	bl	7f4 <strncmp@plt>
     c58:	cmp	r0, #0
     c5c:	bne	c64 <__printf_chk@plt+0x3a4>
     c60:	sub	r9, r9, #1
     c64:	eor	r0, r4, #1
     c68:	cmp	r5, #0
     c6c:	movle	r0, #0
     c70:	andgt	r0, r0, #1
     c74:	cmp	r0, #0
     c78:	beq	bc4 <__printf_chk@plt+0x304>
     c7c:	mov	r1, r7
     c80:	mov	r2, #0
     c84:	b	cb0 <__printf_chk@plt+0x3f0>
     c88:	tst	r3, #128	; 0x80
     c8c:	moveq	r3, r0
     c90:	moveq	r4, #0
     c94:	bne	cd4 <__printf_chk@plt+0x414>
     c98:	add	r2, r2, #1
     c9c:	cmp	r5, r2
     ca0:	movle	r3, #0
     ca4:	andgt	r3, r3, #1
     ca8:	cmp	r3, #0
     cac:	beq	bc4 <__printf_chk@plt+0x304>
     cb0:	ldrb	r3, [r1], #1
     cb4:	cmp	r3, #31
     cb8:	bgt	c88 <__printf_chk@plt+0x3c8>
     cbc:	cmp	r3, #10
     cc0:	cmpne	r3, #13
     cc4:	movne	r4, #1
     cc8:	moveq	r4, #0
     ccc:	moveq	r3, r0
     cd0:	beq	c98 <__printf_chk@plt+0x3d8>
     cd4:	cmp	r3, #9
     cd8:	movne	r4, #1
     cdc:	moveq	r4, #0
     ce0:	moveq	r3, #1
     ce4:	movne	r3, #0
     ce8:	b	c98 <__printf_chk@plt+0x3d8>
     cec:	ldr	r1, [pc, #412]	; e90 <__printf_chk@plt+0x5d0>
     cf0:	mov	r2, #11
     cf4:	add	r1, pc, r1
     cf8:	mov	r0, r7
     cfc:	bl	7f4 <strncmp@plt>
     d00:	subs	r1, r0, #0
     d04:	bne	13b8 <__printf_chk@plt+0xaf8>
     d08:	ldr	r3, [sp, #20]
     d0c:	add	r0, r3, #7
     d10:	bl	83c <strtod@plt>
     d14:	vcvt.f32.f64	s16, d0
     d18:	b	c64 <__printf_chk@plt+0x3a4>
     d1c:	ldr	r3, [sp, #16]
     d20:	cmp	r3, #0
     d24:	beq	dc4 <__printf_chk@plt+0x504>
     d28:	ldr	r1, [pc, #356]	; e94 <__printf_chk@plt+0x5d4>
     d2c:	mov	r2, #8
     d30:	add	r1, pc, r1
     d34:	mov	r0, r7
     d38:	bl	7f4 <strncmp@plt>
     d3c:	subs	r1, r0, #0
     d40:	beq	1210 <__printf_chk@plt+0x950>
     d44:	ldr	r1, [pc, #332]	; e98 <__printf_chk@plt+0x5d8>
     d48:	mov	r2, #14
     d4c:	add	r1, pc, r1
     d50:	mov	r0, r7
     d54:	bl	7f4 <strncmp@plt>
     d58:	cmp	r0, #0
     d5c:	bne	c64 <__printf_chk@plt+0x3a4>
     d60:	add	r3, sp, #88	; 0x58
     d64:	add	r1, r3, #8
     d68:	str	r1, [sp, #4]
     d6c:	ldr	r0, [sp, #20]
     d70:	ldr	r1, [pc, #292]	; e9c <__printf_chk@plt+0x5dc>
     d74:	add	r2, r3, #4
     d78:	str	r2, [sp]
     d7c:	add	r1, pc, r1
     d80:	sub	r2, r3, #4
     d84:	add	r0, r0, #10
     d88:	bl	884 <sscanf@plt>
     d8c:	cmp	r0, #4
     d90:	beq	1460 <__printf_chk@plt+0xba0>
     d94:	cmp	sl, #0
     d98:	beq	1394 <__printf_chk@plt+0xad4>
     d9c:	ldr	r3, [sp, #12]
     da0:	ldr	r1, [pc, #248]	; ea0 <__printf_chk@plt+0x5e0>
     da4:	mov	r2, r6
     da8:	add	r1, pc, r1
     dac:	ldr	r0, [r3]
     db0:	add	sl, sl, #1
     db4:	bl	7e8 <_cupsLangPrintf@plt>
     db8:	b	c64 <__printf_chk@plt+0x3a4>
     dbc:	add	r9, r9, #1
     dc0:	b	c64 <__printf_chk@plt+0x3a4>
     dc4:	ldr	r3, [sp, #24]
     dc8:	cmp	r3, #0
     dcc:	bne	e2c <__printf_chk@plt+0x56c>
     dd0:	ldr	r1, [pc, #204]	; ea4 <__printf_chk@plt+0x5e4>
     dd4:	mov	r2, #13
     dd8:	add	r1, pc, r1
     ddc:	mov	r0, r7
     de0:	bl	7f4 <strncmp@plt>
     de4:	subs	r3, r0, #0
     de8:	str	r3, [sp, #16]
     dec:	moveq	r3, #1
     df0:	streq	r3, [sp, #24]
     df4:	beq	c64 <__printf_chk@plt+0x3a4>
     df8:	ldrb	r3, [sp, #356]	; 0x164
     dfc:	cmp	r3, #37	; 0x25
     e00:	beq	1408 <__printf_chk@plt+0xb48>
     e04:	ldr	r3, [sp, #24]
     e08:	str	r3, [sp, #16]
     e0c:	mvn	r3, #0
     e10:	str	r3, [sp, #24]
     e14:	b	c64 <__printf_chk@plt+0x3a4>
     e18:	ldr	r1, [sp, #52]	; 0x34
     e1c:	bl	800 <_cupsLangPuts@plt>
     e20:	ldr	r3, [sp, #12]
     e24:	ldr	r0, [r3]
     e28:	b	c00 <__printf_chk@plt+0x340>
     e2c:	ldr	r3, [sp, #44]	; 0x2c
     e30:	ldr	r2, [sp, #56]	; 0x38
     e34:	eor	r3, r3, #1
     e38:	tst	r2, r3
     e3c:	beq	1088 <__printf_chk@plt+0x7c8>
     e40:	ldr	r1, [pc, #96]	; ea8 <__printf_chk@plt+0x5e8>
     e44:	mov	r2, #11
     e48:	add	r1, pc, r1
     e4c:	mov	r0, r7
     e50:	bl	7f4 <strncmp@plt>
     e54:	clz	r3, r0
     e58:	lsr	r3, r3, #5
     e5c:	str	r3, [sp, #44]	; 0x2c
     e60:	b	c64 <__printf_chk@plt+0x3a4>
     e64:	andeq	r0, r0, r0
     e68:	andeq	r1, r1, ip, lsl #9
     e6c:	andeq	r0, r0, r4, rrx
     e70:	ldrdeq	r0, [r0], -r4
     e74:	andeq	r0, r0, r4, lsr #25
     e78:	andeq	r0, r0, r4, ror r0
     e7c:	andeq	r0, r0, r0, ror ip
     e80:	andeq	r0, r0, r8, asr ip
     e84:	strdeq	r0, [r0], -r8
     e88:	andeq	r0, r0, r0, ror ip
     e8c:	andeq	r0, r0, r8, ror #24
     e90:	andeq	r0, r0, r4, asr #22
     e94:	muleq	r0, r4, fp
     e98:	andeq	r0, r0, r4, asr #23
     e9c:	andeq	r0, r0, r4, lsr #23
     ea0:	andeq	r0, r0, r4, lsl #23
     ea4:	andeq	r0, r0, r8, lsl #26
     ea8:	andeq	r0, r0, r8, lsr fp
     eac:	andeq	r0, r0, ip, asr #16
     eb0:	andeq	r0, r0, r4, lsl #22
     eb4:	andeq	r0, r0, r8, ror #22
     eb8:	andeq	r0, r0, ip, rrx
     ebc:	muleq	r0, r0, fp
     ec0:	andeq	r0, r0, r0, lsr #23
     ec4:	andeq	r0, r0, ip, lsl #23
     ec8:	andeq	r0, r0, ip, lsl #23
     ecc:	muleq	r0, r8, fp
     ed0:	andeq	r0, r0, r8, lsr #18
     ed4:	andeq	r0, r0, r0, lsl r9
     ed8:	muleq	r0, r0, r7
     edc:	andeq	r0, r0, r4, lsl #15
     ee0:			; <UNDEFINED> instruction: 0x000008b8
     ee4:	muleq	r0, r4, r8
     ee8:	andeq	r0, r0, r8, lsl #12
     eec:	andeq	r0, r0, r4, lsr #16
     ef0:	andeq	r0, r0, r4, asr r7
     ef4:	andeq	r0, r0, r4, ror r5
     ef8:	andeq	r0, r0, r8, ror #15
     efc:	andeq	r0, r0, r4, lsl #10
     f00:	andeq	r0, r0, r4, lsl #16
     f04:	andeq	r0, r0, r4, asr #16
     f08:	andeq	r0, r0, r4, asr r4
     f0c:	andeq	r0, r0, ip, lsr r4
     f10:	andeq	r0, r0, r8, ror r4
     f14:	ldrdeq	r0, [r0], -ip
     f18:			; <UNDEFINED> instruction: 0x000004b4
     f1c:	andeq	r0, r0, r4, asr #10
     f20:	andeq	r0, r0, ip, ror #6
     f24:	andeq	r0, r0, ip, asr #6
     f28:	strdeq	r0, [r0], -r4
     f2c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     f30:	andeq	r0, r0, r0, lsr #8
     f34:	andeq	r0, r0, r8, ror #8
     f38:	muleq	r0, r8, r2
     f3c:	andeq	r0, r0, r8, lsl r2
     f40:	andeq	r0, r0, r4, lsr r3
     f44:	andeq	r0, r0, r0, lsl r3
     f48:	andeq	r0, r0, r0, lsl #5
     f4c:	andeq	r0, r0, r0, ror r1
     f50:	andeq	r0, r0, r4, asr #2
     f54:	submi	r0, r0, r0
     f58:	ldr	r3, [sp, #48]	; 0x30
     f5c:	cmp	r3, #0
     f60:	ble	116c <__printf_chk@plt+0x8ac>
     f64:	ldr	r3, [sp, #40]	; 0x28
     f68:	cmp	r3, #0
     f6c:	ble	1254 <__printf_chk@plt+0x994>
     f70:	ldr	r3, [sp, #24]
     f74:	cmp	r3, #0
     f78:	bne	12b8 <__printf_chk@plt+0x9f8>
     f7c:	ldr	r5, [sp, #12]
     f80:	cmp	sl, #0
     f84:	ldr	r0, [r5]
     f88:	bne	f9c <__printf_chk@plt+0x6dc>
     f8c:	ldr	r1, [pc, #-232]	; eac <__printf_chk@plt+0x5ec>
     f90:	add	r1, pc, r1
     f94:	bl	800 <_cupsLangPuts@plt>
     f98:	ldr	r0, [r5]
     f9c:	ldr	r1, [pc, #-244]	; eb0 <__printf_chk@plt+0x5f0>
     fa0:	add	sl, sl, #1
     fa4:	add	r1, pc, r1
     fa8:	bl	800 <_cupsLangPuts@plt>
     fac:	ldr	r3, [sp, #60]	; 0x3c
     fb0:	cmp	r3, #0
     fb4:	beq	12e0 <__printf_chk@plt+0xa20>
     fb8:	cmp	r9, #0
     fbc:	bge	1300 <__printf_chk@plt+0xa40>
     fc0:	ldr	r3, [sp, #12]
     fc4:	ldr	r1, [pc, #-280]	; eb4 <__printf_chk@plt+0x5f4>
     fc8:	add	r6, sl, #1
     fcc:	add	r1, pc, r1
     fd0:	ldr	r0, [r3]
     fd4:	bl	800 <_cupsLangPuts@plt>
     fd8:	cmp	r8, #1
     fdc:	ble	1328 <__printf_chk@plt+0xa68>
     fe0:	ldr	r0, [sp, #32]
     fe4:	ldr	r3, [pc, #-308]	; eb8 <__printf_chk@plt+0x5f8>
     fe8:	ldr	r1, [pc, #-308]	; ebc <__printf_chk@plt+0x5fc>
     fec:	mov	r2, r8
     ff0:	ldr	r3, [r0, r3]
     ff4:	add	r1, pc, r1
     ff8:	ldr	r0, [r3]
     ffc:	bl	7e8 <_cupsLangPrintf@plt>
    1000:	cmp	r6, #0
    1004:	bne	1328 <__printf_chk@plt+0xa68>
    1008:	ldr	r3, [sp, #12]
    100c:	ldr	r1, [pc, #-340]	; ec0 <__printf_chk@plt+0x600>
    1010:	ldr	r0, [r3]
    1014:	add	r1, pc, r1
    1018:	bl	800 <_cupsLangPuts@plt>
    101c:	cmp	r4, #0
    1020:	beq	1330 <__printf_chk@plt+0xa70>
    1024:	ldr	r3, [sp, #12]
    1028:	ldr	r1, [pc, #-364]	; ec4 <__printf_chk@plt+0x604>
    102c:	ldr	r0, [r3]
    1030:	add	r1, pc, r1
    1034:	bl	800 <_cupsLangPuts@plt>
    1038:	vldr	s15, [pc, #-236]	; f54 <__printf_chk@plt+0x694>
    103c:	vcmpe.f32	s16, s15
    1040:	vmrs	APSR_nzcv, fpscr
    1044:	bpl	1340 <__printf_chk@plt+0xa80>
    1048:	vcvt.f64.f32	d7, s16
    104c:	ldr	r0, [sp, #12]
    1050:	ldr	r1, [pc, #-400]	; ec8 <__printf_chk@plt+0x608>
    1054:	ldr	r0, [r0]
    1058:	add	r1, pc, r1
    105c:	vmov	r2, r3, d7
    1060:	bl	7e8 <_cupsLangPrintf@plt>
    1064:	ldr	r3, [sp, #24]
    1068:	cmp	r3, #0
    106c:	bge	134c <__printf_chk@plt+0xa8c>
    1070:	ldr	r3, [sp, #12]
    1074:	ldr	r1, [pc, #-432]	; ecc <__printf_chk@plt+0x60c>
    1078:	ldr	r0, [r3]
    107c:	add	r1, pc, r1
    1080:	bl	800 <_cupsLangPuts@plt>
    1084:	b	134c <__printf_chk@plt+0xa8c>
    1088:	ldr	r3, [sp, #68]	; 0x44
    108c:	ldr	r2, [sp, #64]	; 0x40
    1090:	eor	r3, r3, #1
    1094:	tst	r2, r3
    1098:	bne	1230 <__printf_chk@plt+0x970>
    109c:	mov	r2, #7
    10a0:	ldr	r1, [sp, #76]	; 0x4c
    10a4:	mov	r0, r7
    10a8:	bl	7f4 <strncmp@plt>
    10ac:	subs	r3, r0, #0
    10b0:	str	r3, [sp, #16]
    10b4:	beq	149c <__printf_chk@plt+0xbdc>
    10b8:	ldr	r1, [pc, #-496]	; ed0 <__printf_chk@plt+0x610>
    10bc:	mov	r2, #13
    10c0:	add	r1, pc, r1
    10c4:	mov	r0, r7
    10c8:	bl	7f4 <strncmp@plt>
    10cc:	subs	r3, r0, #0
    10d0:	str	r3, [sp, #16]
    10d4:	moveq	r3, #1
    10d8:	streq	r3, [sp, #56]	; 0x38
    10dc:	beq	c64 <__printf_chk@plt+0x3a4>
    10e0:	ldr	r1, [pc, #-532]	; ed4 <__printf_chk@plt+0x614>
    10e4:	mov	r2, #12
    10e8:	add	r1, pc, r1
    10ec:	mov	r0, r7
    10f0:	bl	7f4 <strncmp@plt>
    10f4:	subs	r3, r0, #0
    10f8:	str	r3, [sp, #16]
    10fc:	moveq	r3, #1
    1100:	streq	r3, [sp, #64]	; 0x40
    1104:	beq	c64 <__printf_chk@plt+0x3a4>
    1108:	ldr	r1, [pc, #-568]	; ed8 <__printf_chk@plt+0x618>
    110c:	mov	r2, #16
    1110:	add	r1, pc, r1
    1114:	mov	r0, r7
    1118:	bl	7f4 <strncmp@plt>
    111c:	subs	r3, r0, #0
    1120:	str	r3, [sp, #16]
    1124:	beq	dbc <__printf_chk@plt+0x4fc>
    1128:	ldr	r1, [pc, #-596]	; edc <__printf_chk@plt+0x61c>
    112c:	mov	r2, #13
    1130:	add	r1, pc, r1
    1134:	mov	r0, r7
    1138:	bl	7f4 <strncmp@plt>
    113c:	subs	r3, r0, #0
    1140:	str	r3, [sp, #16]
    1144:	beq	c60 <__printf_chk@plt+0x3a0>
    1148:	ldr	r1, [pc, #-624]	; ee0 <__printf_chk@plt+0x620>
    114c:	mov	r2, #9
    1150:	add	r1, pc, r1
    1154:	mov	r0, r7
    1158:	bl	7f4 <strncmp@plt>
    115c:	clz	r3, r0
    1160:	lsr	r3, r3, #5
    1164:	str	r3, [sp, #16]
    1168:	b	c64 <__printf_chk@plt+0x3a4>
    116c:	cmp	sl, #0
    1170:	beq	137c <__printf_chk@plt+0xabc>
    1174:	ldr	r5, [sp, #12]
    1178:	ldr	r1, [pc, #-668]	; ee4 <__printf_chk@plt+0x624>
    117c:	add	sl, sl, #1
    1180:	add	r1, pc, r1
    1184:	ldr	r0, [r5]
    1188:	bl	800 <_cupsLangPuts@plt>
    118c:	ldr	r3, [sp, #40]	; 0x28
    1190:	cmp	r3, #0
    1194:	ble	1270 <__printf_chk@plt+0x9b0>
    1198:	ldr	r3, [sp, #24]
    119c:	cmp	r3, #0
    11a0:	beq	13ac <__printf_chk@plt+0xaec>
    11a4:	ldr	r3, [sp, #60]	; 0x3c
    11a8:	cmp	r3, #0
    11ac:	beq	12e0 <__printf_chk@plt+0xa20>
    11b0:	cmp	r9, #0
    11b4:	blt	fc0 <__printf_chk@plt+0x700>
    11b8:	cmp	r9, #0
    11bc:	beq	12a8 <__printf_chk@plt+0x9e8>
    11c0:	ldr	r5, [sp, #12]
    11c4:	cmp	sl, #0
    11c8:	ldr	r0, [r5]
    11cc:	bne	1310 <__printf_chk@plt+0xa50>
    11d0:	ldr	r1, [pc, #-752]	; ee8 <__printf_chk@plt+0x628>
    11d4:	add	r1, pc, r1
    11d8:	bl	800 <_cupsLangPuts@plt>
    11dc:	ldr	r0, [r5]
    11e0:	b	1310 <__printf_chk@plt+0xa50>
    11e4:	ldr	r1, [pc, #-768]	; eec <__printf_chk@plt+0x62c>
    11e8:	mov	r0, r4
    11ec:	add	r1, pc, r1
    11f0:	bl	860 <cupsFileOpen@plt>
    11f4:	mov	fp, r0
    11f8:	cmp	fp, #0
    11fc:	bne	b28 <__printf_chk@plt+0x268>
    1200:	mov	r0, r4
    1204:	bl	818 <perror@plt>
    1208:	mov	r6, #1
    120c:	b	1354 <__printf_chk@plt+0xa94>
    1210:	mov	r2, #10
    1214:	add	r0, sp, #364	; 0x16c
    1218:	bl	7dc <strtol@plt>
    121c:	cmp	r0, #0
    1220:	ble	13e0 <__printf_chk@plt+0xb20>
    1224:	ldr	r3, [sp, #16]
    1228:	str	r3, [sp, #40]	; 0x28
    122c:	b	c64 <__printf_chk@plt+0x3a4>
    1230:	ldr	r1, [pc, #-840]	; ef0 <__printf_chk@plt+0x630>
    1234:	mov	r2, #10
    1238:	add	r1, pc, r1
    123c:	mov	r0, r7
    1240:	bl	7f4 <strncmp@plt>
    1244:	clz	r3, r0
    1248:	lsr	r3, r3, #5
    124c:	str	r3, [sp, #68]	; 0x44
    1250:	b	c64 <__printf_chk@plt+0x3a4>
    1254:	ldr	r5, [sp, #12]
    1258:	cmp	sl, #0
    125c:	ldr	r0, [r5]
    1260:	bne	1274 <__printf_chk@plt+0x9b4>
    1264:	ldr	r1, [pc, #-888]	; ef4 <__printf_chk@plt+0x634>
    1268:	add	r1, pc, r1
    126c:	bl	800 <_cupsLangPuts@plt>
    1270:	ldr	r0, [r5]
    1274:	ldr	r1, [pc, #-900]	; ef8 <__printf_chk@plt+0x638>
    1278:	add	sl, sl, #1
    127c:	add	r1, pc, r1
    1280:	bl	800 <_cupsLangPuts@plt>
    1284:	ldr	r3, [sp, #24]
    1288:	cmp	r3, #0
    128c:	beq	13ac <__printf_chk@plt+0xaec>
    1290:	ldr	r3, [sp, #60]	; 0x3c
    1294:	cmp	r3, #0
    1298:	beq	12e0 <__printf_chk@plt+0xa20>
    129c:	cmp	r9, #0
    12a0:	blt	fc0 <__printf_chk@plt+0x700>
    12a4:	bne	1308 <__printf_chk@plt+0xa48>
    12a8:	cmp	r8, #1
    12ac:	mov	r6, sl
    12b0:	ble	1000 <__printf_chk@plt+0x740>
    12b4:	b	fe0 <__printf_chk@plt+0x720>
    12b8:	ldr	r3, [sp, #60]	; 0x3c
    12bc:	cmp	r3, #0
    12c0:	bne	15a8 <__printf_chk@plt+0xce8>
    12c4:	ldr	r3, [sp, #12]
    12c8:	cmp	sl, #0
    12cc:	ldr	r0, [r3]
    12d0:	bne	12e0 <__printf_chk@plt+0xa20>
    12d4:	ldr	r1, [pc, #-992]	; efc <__printf_chk@plt+0x63c>
    12d8:	add	r1, pc, r1
    12dc:	bl	800 <_cupsLangPuts@plt>
    12e0:	ldr	r3, [sp, #12]
    12e4:	ldr	r1, [pc, #-1004]	; f00 <__printf_chk@plt+0x640>
    12e8:	add	sl, sl, #1
    12ec:	add	r1, pc, r1
    12f0:	ldr	r0, [r3]
    12f4:	bl	800 <_cupsLangPuts@plt>
    12f8:	cmp	r9, #0
    12fc:	blt	fc0 <__printf_chk@plt+0x700>
    1300:	moveq	r6, sl
    1304:	beq	1320 <__printf_chk@plt+0xa60>
    1308:	ldr	r3, [sp, #12]
    130c:	ldr	r0, [r3]
    1310:	ldr	r1, [pc, #-1044]	; f04 <__printf_chk@plt+0x644>
    1314:	add	r6, sl, #1
    1318:	add	r1, pc, r1
    131c:	bl	800 <_cupsLangPuts@plt>
    1320:	cmp	r8, #1
    1324:	bgt	fe0 <__printf_chk@plt+0x720>
    1328:	cmp	r4, #0
    132c:	bne	1024 <__printf_chk@plt+0x764>
    1330:	vldr	s15, [pc, #-996]	; f54 <__printf_chk@plt+0x694>
    1334:	vcmpe.f32	s16, s15
    1338:	vmrs	APSR_nzcv, fpscr
    133c:	bmi	1048 <__printf_chk@plt+0x788>
    1340:	ldr	r3, [sp, #24]
    1344:	cmp	r3, #0
    1348:	blt	1070 <__printf_chk@plt+0x7b0>
    134c:	mov	r0, fp
    1350:	bl	848 <cupsFileClose@plt>
    1354:	ldr	r3, [sp, #36]	; 0x24
    1358:	ldr	r2, [sp, #1380]	; 0x564
    135c:	mov	r0, r6
    1360:	ldr	r3, [r3]
    1364:	cmp	r2, r3
    1368:	bne	1634 <__printf_chk@plt+0xd74>
    136c:	add	sp, sp, #1376	; 0x560
    1370:	add	sp, sp, #12
    1374:	vpop	{d8}
    1378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    137c:	ldr	r3, [sp, #12]
    1380:	ldr	r1, [pc, #-1152]	; f08 <__printf_chk@plt+0x648>
    1384:	ldr	r0, [r3]
    1388:	add	r1, pc, r1
    138c:	bl	800 <_cupsLangPuts@plt>
    1390:	b	1174 <__printf_chk@plt+0x8b4>
    1394:	ldr	r3, [sp, #12]
    1398:	ldr	r1, [pc, #-1172]	; f0c <__printf_chk@plt+0x64c>
    139c:	ldr	r0, [r3]
    13a0:	add	r1, pc, r1
    13a4:	bl	800 <_cupsLangPuts@plt>
    13a8:	b	d9c <__printf_chk@plt+0x4dc>
    13ac:	ldr	r3, [sp, #12]
    13b0:	ldr	r0, [r3]
    13b4:	b	f9c <__printf_chk@plt+0x6dc>
    13b8:	ldr	r3, [sp, #12]
    13bc:	cmp	sl, #0
    13c0:	ldr	r0, [r3]
    13c4:	beq	146c <__printf_chk@plt+0xbac>
    13c8:	ldr	r1, [pc, #-1216]	; f10 <__printf_chk@plt+0x650>
    13cc:	add	r1, pc, r1
    13d0:	bl	800 <_cupsLangPuts@plt>
    13d4:	mov	r0, fp
    13d8:	bl	848 <cupsFileClose@plt>
    13dc:	b	1354 <__printf_chk@plt+0xa94>
    13e0:	cmp	sl, #0
    13e4:	beq	1484 <__printf_chk@plt+0xbc4>
    13e8:	ldr	r3, [sp, #12]
    13ec:	ldr	r1, [pc, #-1248]	; f14 <__printf_chk@plt+0x654>
    13f0:	mov	r2, r6
    13f4:	add	r1, pc, r1
    13f8:	ldr	r0, [r3]
    13fc:	add	sl, sl, #1
    1400:	bl	7e8 <_cupsLangPrintf@plt>
    1404:	b	c64 <__printf_chk@plt+0x3a4>
    1408:	ldr	r1, [pc, #-1272]	; f18 <__printf_chk@plt+0x658>
    140c:	mov	r2, #8
    1410:	add	r1, pc, r1
    1414:	mov	r0, r7
    1418:	bl	7f4 <strncmp@plt>
    141c:	subs	r3, r0, #0
    1420:	str	r3, [sp, #16]
    1424:	bne	14e8 <__printf_chk@plt+0xc28>
    1428:	ldr	r1, [pc, #-1300]	; f1c <__printf_chk@plt+0x65c>
    142c:	add	r3, sp, #364	; 0x16c
    1430:	mov	r0, r3
    1434:	add	r1, pc, r1
    1438:	str	r3, [sp, #24]
    143c:	bl	86c <strstr@plt>
    1440:	ldr	r3, [sp, #24]
    1444:	cmp	r0, #0
    1448:	beq	157c <__printf_chk@plt+0xcbc>
    144c:	ldr	r3, [sp, #16]
    1450:	str	r3, [sp, #24]
    1454:	mvn	r3, #0
    1458:	str	r3, [sp, #40]	; 0x28
    145c:	b	c64 <__printf_chk@plt+0x3a4>
    1460:	ldr	r3, [sp, #16]
    1464:	str	r3, [sp, #48]	; 0x30
    1468:	b	c64 <__printf_chk@plt+0x3a4>
    146c:	ldr	r1, [pc, #-1364]	; f20 <__printf_chk@plt+0x660>
    1470:	add	r1, pc, r1
    1474:	bl	800 <_cupsLangPuts@plt>
    1478:	ldr	r3, [sp, #12]
    147c:	ldr	r0, [r3]
    1480:	b	13c8 <__printf_chk@plt+0xb08>
    1484:	ldr	r3, [sp, #12]
    1488:	ldr	r1, [pc, #-1388]	; f24 <__printf_chk@plt+0x664>
    148c:	ldr	r0, [r3]
    1490:	add	r1, pc, r1
    1494:	bl	800 <_cupsLangPuts@plt>
    1498:	b	13e8 <__printf_chk@plt+0xb28>
    149c:	ldr	r0, [sp, #20]
    14a0:	ldr	r1, [pc, #-1408]	; f28 <__printf_chk@plt+0x668>
    14a4:	add	r3, sp, #80	; 0x50
    14a8:	add	r2, sp, #100	; 0x64
    14ac:	add	r1, pc, r1
    14b0:	add	r0, r0, #3
    14b4:	bl	884 <sscanf@plt>
    14b8:	cmp	r0, #2
    14bc:	beq	1558 <__printf_chk@plt+0xc98>
    14c0:	ldr	r3, [sp, #12]
    14c4:	cmp	sl, #0
    14c8:	ldr	r0, [r3]
    14cc:	beq	1540 <__printf_chk@plt+0xc80>
    14d0:	ldr	r1, [pc, #-1452]	; f2c <__printf_chk@plt+0x66c>
    14d4:	mov	r2, r6
    14d8:	add	r1, pc, r1
    14dc:	add	sl, sl, #1
    14e0:	bl	7e8 <_cupsLangPrintf@plt>
    14e4:	b	c64 <__printf_chk@plt+0x3a4>
    14e8:	ldr	r1, [pc, #-1472]	; f30 <__printf_chk@plt+0x670>
    14ec:	mov	r2, #14
    14f0:	add	r1, pc, r1
    14f4:	mov	r0, r7
    14f8:	bl	7f4 <strncmp@plt>
    14fc:	subs	r3, r0, #0
    1500:	str	r3, [sp, #16]
    1504:	bne	1534 <__printf_chk@plt+0xc74>
    1508:	ldr	r1, [pc, #-1500]	; f34 <__printf_chk@plt+0x674>
    150c:	mov	r0, r7
    1510:	add	r1, pc, r1
    1514:	bl	86c <strstr@plt>
    1518:	cmp	r0, #0
    151c:	beq	15d0 <__printf_chk@plt+0xd10>
    1520:	ldr	r3, [sp, #16]
    1524:	str	r3, [sp, #24]
    1528:	mvn	r3, #0
    152c:	str	r3, [sp, #48]	; 0x30
    1530:	b	c64 <__printf_chk@plt+0x3a4>
    1534:	ldr	r3, [sp, #24]
    1538:	str	r3, [sp, #16]
    153c:	b	c64 <__printf_chk@plt+0x3a4>
    1540:	ldr	r1, [pc, #-1552]	; f38 <__printf_chk@plt+0x678>
    1544:	add	r1, pc, r1
    1548:	bl	800 <_cupsLangPuts@plt>
    154c:	ldr	r3, [sp, #12]
    1550:	ldr	r0, [r3]
    1554:	b	14d0 <__printf_chk@plt+0xc10>
    1558:	ldr	r3, [sp, #72]	; 0x48
    155c:	ldr	r2, [sp, #80]	; 0x50
    1560:	add	r3, r3, #1
    1564:	cmp	r3, r2
    1568:	bne	14c0 <__printf_chk@plt+0xc00>
    156c:	str	r3, [sp, #72]	; 0x48
    1570:	mov	r3, #1
    1574:	str	r3, [sp, #60]	; 0x3c
    1578:	b	c64 <__printf_chk@plt+0x3a4>
    157c:	mov	r0, r3
    1580:	mov	r2, #10
    1584:	ldr	r1, [sp, #16]
    1588:	bl	7dc <strtol@plt>
    158c:	cmp	r0, #0
    1590:	ble	1638 <__printf_chk@plt+0xd78>
    1594:	ldr	r3, [sp, #16]
    1598:	str	r3, [sp, #24]
    159c:	mov	r3, #1
    15a0:	str	r3, [sp, #40]	; 0x28
    15a4:	b	c64 <__printf_chk@plt+0x3a4>
    15a8:	cmp	r9, #0
    15ac:	bge	11b8 <__printf_chk@plt+0x8f8>
    15b0:	ldr	r3, [sp, #12]
    15b4:	cmp	sl, #0
    15b8:	ldr	r0, [r3]
    15bc:	bne	fc0 <__printf_chk@plt+0x700>
    15c0:	ldr	r1, [pc, #-1676]	; f3c <__printf_chk@plt+0x67c>
    15c4:	add	r1, pc, r1
    15c8:	bl	800 <_cupsLangPuts@plt>
    15cc:	b	fc0 <__printf_chk@plt+0x700>
    15d0:	add	r3, sp, #88	; 0x58
    15d4:	add	r1, r3, #8
    15d8:	str	r1, [sp, #4]
    15dc:	ldr	r0, [sp, #20]
    15e0:	ldr	r1, [pc, #-1704]	; f40 <__printf_chk@plt+0x680>
    15e4:	add	r2, r3, #4
    15e8:	str	r2, [sp]
    15ec:	add	r1, pc, r1
    15f0:	sub	r2, r3, #4
    15f4:	add	r0, r0, #10
    15f8:	bl	884 <sscanf@plt>
    15fc:	cmp	r0, #4
    1600:	beq	1680 <__printf_chk@plt+0xdc0>
    1604:	ldr	r3, [sp, #12]
    1608:	cmp	sl, #0
    160c:	ldr	r0, [r3]
    1610:	beq	1668 <__printf_chk@plt+0xda8>
    1614:	ldr	r1, [pc, #-1752]	; f44 <__printf_chk@plt+0x684>
    1618:	mov	r2, r6
    161c:	add	r1, pc, r1
    1620:	bl	7e8 <_cupsLangPrintf@plt>
    1624:	mov	r3, #0
    1628:	add	sl, sl, #1
    162c:	str	r3, [sp, #24]
    1630:	b	c64 <__printf_chk@plt+0x3a4>
    1634:	bl	854 <__stack_chk_fail@plt>
    1638:	ldr	r3, [sp, #12]
    163c:	cmp	sl, #0
    1640:	ldr	r0, [r3]
    1644:	beq	1694 <__printf_chk@plt+0xdd4>
    1648:	ldr	r1, [pc, #-1800]	; f48 <__printf_chk@plt+0x688>
    164c:	mov	r2, r6
    1650:	add	r1, pc, r1
    1654:	bl	7e8 <_cupsLangPrintf@plt>
    1658:	mov	r3, #0
    165c:	add	sl, sl, #1
    1660:	str	r3, [sp, #24]
    1664:	b	c64 <__printf_chk@plt+0x3a4>
    1668:	ldr	r1, [pc, #-1828]	; f4c <__printf_chk@plt+0x68c>
    166c:	add	r1, pc, r1
    1670:	bl	800 <_cupsLangPuts@plt>
    1674:	ldr	r3, [sp, #12]
    1678:	ldr	r0, [r3]
    167c:	b	1614 <__printf_chk@plt+0xd54>
    1680:	mov	r3, #0
    1684:	str	r3, [sp, #24]
    1688:	mov	r3, #1
    168c:	str	r3, [sp, #48]	; 0x30
    1690:	b	c64 <__printf_chk@plt+0x3a4>
    1694:	ldr	r1, [pc, #-1868]	; f50 <__printf_chk@plt+0x690>
    1698:	add	r1, pc, r1
    169c:	bl	800 <_cupsLangPuts@plt>
    16a0:	ldr	r3, [sp, #12]
    16a4:	ldr	r0, [r3]
    16a8:	b	1648 <__printf_chk@plt+0xd88>
    16ac:	ldr	r3, [pc, #144]	; 1744 <__printf_chk@plt+0xe84>
    16b0:	ldr	r2, [pc, #144]	; 1748 <__printf_chk@plt+0xe88>
    16b4:	add	r3, pc, r3
    16b8:	push	{r4, lr}
    16bc:	ldr	r4, [r3, r2]
    16c0:	ldr	r1, [pc, #132]	; 174c <__printf_chk@plt+0xe8c>
    16c4:	ldr	r5, [pc, #132]	; 1750 <__printf_chk@plt+0xe90>
    16c8:	add	r1, pc, r1
    16cc:	ldr	r0, [r4]
    16d0:	bl	800 <_cupsLangPuts@plt>
    16d4:	ldr	r1, [pc, #120]	; 1754 <__printf_chk@plt+0xe94>
    16d8:	add	r5, pc, r5
    16dc:	add	r1, pc, r1
    16e0:	ldr	r0, [r4]
    16e4:	bl	800 <_cupsLangPuts@plt>
    16e8:	mov	r1, r5
    16ec:	ldr	r0, [r4]
    16f0:	bl	800 <_cupsLangPuts@plt>
    16f4:	ldr	r1, [pc, #92]	; 1758 <__printf_chk@plt+0xe98>
    16f8:	ldr	r0, [r4]
    16fc:	add	r1, pc, r1
    1700:	bl	800 <_cupsLangPuts@plt>
    1704:	mov	r1, r5
    1708:	ldr	r0, [r4]
    170c:	bl	800 <_cupsLangPuts@plt>
    1710:	ldr	r1, [pc, #68]	; 175c <__printf_chk@plt+0xe9c>
    1714:	ldr	r0, [r4]
    1718:	add	r1, pc, r1
    171c:	bl	800 <_cupsLangPuts@plt>
    1720:	mov	r1, r5
    1724:	ldr	r0, [r4]
    1728:	bl	800 <_cupsLangPuts@plt>
    172c:	ldr	r1, [pc, #44]	; 1760 <__printf_chk@plt+0xea0>
    1730:	ldr	r0, [r4]
    1734:	add	r1, pc, r1
    1738:	bl	800 <_cupsLangPuts@plt>
    173c:	mov	r0, #1
    1740:	bl	80c <exit@plt>
    1744:			; <UNDEFINED> instruction: 0x000108b8
    1748:	andeq	r0, r0, r4, ror r0
    174c:	andeq	r0, r0, ip, ror r5
    1750:	andeq	r0, r0, r0, lsl #2
    1754:	andeq	r0, r0, r4, lsr #11
    1758:	andeq	r0, r0, r4, lsr #11
    175c:	muleq	r0, r4, r5
    1760:	muleq	r0, r8, r5
    1764:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1768:	mov	r7, r0
    176c:	ldr	r6, [pc, #72]	; 17bc <__printf_chk@plt+0xefc>
    1770:	ldr	r5, [pc, #72]	; 17c0 <__printf_chk@plt+0xf00>
    1774:	add	r6, pc, r6
    1778:	add	r5, pc, r5
    177c:	sub	r6, r6, r5
    1780:	mov	r8, r1
    1784:	mov	r9, r2
    1788:	bl	7a4 <cupsFileGetLine@plt-0x20>
    178c:	asrs	r6, r6, #2
    1790:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    1794:	mov	r4, #0
    1798:	add	r4, r4, #1
    179c:	ldr	r3, [r5], #4
    17a0:	mov	r2, r9
    17a4:	mov	r1, r8
    17a8:	mov	r0, r7
    17ac:	blx	r3
    17b0:	cmp	r6, r4
    17b4:	bne	1798 <__printf_chk@plt+0xed8>
    17b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    17bc:	andeq	r0, r1, ip, ror #13
    17c0:	andeq	r0, r1, r4, ror #13
    17c4:	bx	lr

Disassembly of section .fini:

000017c8 <.fini>:
    17c8:	push	{r3, lr}
    17cc:	pop	{r3, pc}
