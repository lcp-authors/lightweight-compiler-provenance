
raspbian-preinstalled/obxprop:     file format elf32-littlearm


Disassembly of section .init:

00010aac <.init>:
   10aac:	push	{r3, lr}
   10ab0:	bl	10fa8 <g_utf8_validate@plt+0x35c>
   10ab4:	pop	{r3, pc}

Disassembly of section .plt:

00010ab8 <strcmp@plt-0x14>:
   10ab8:	push	{lr}		; (str lr, [sp, #-4]!)
   10abc:	ldr	lr, [pc, #4]	; 10ac8 <strcmp@plt-0x4>
   10ac0:	add	lr, pc, lr
   10ac4:	ldr	pc, [lr, #8]!
   10ac8:	muleq	r1, ip, r4

00010acc <strcmp@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1180]!	; 0x49c

00010ad8 <g_string_new@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1172]!	; 0x494

00010ae4 <g_malloc@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1164]!	; 0x48c

00010af0 <strtol@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1156]!	; 0x484

00010afc <g_free@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1148]!	; 0x47c

00010b08 <XCreateFontCursor@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1140]!	; 0x474

00010b14 <g_print@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1132]!	; 0x46c

00010b20 <XQueryTree@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1124]!	; 0x464

00010b2c <__stack_chk_fail@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1116]!	; 0x45c

00010b38 <XFree@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1108]!	; 0x454

00010b44 <XListProperties@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1100]!	; 0x44c

00010b50 <XGrabPointer@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1092]!	; 0x444

00010b5c <fwrite@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1084]!	; 0x43c

00010b68 <g_string_free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1076]!	; 0x434

00010b74 <__libc_start_main@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1068]!	; 0x42c

00010b80 <XOpenDisplay@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1060]!	; 0x424

00010b8c <__gmon_start__@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1052]!	; 0x41c

00010b98 <strlen@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1044]!	; 0x414

00010ba4 <XUngrabPointer@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1036]!	; 0x40c

00010bb0 <g_slist_delete_link@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1028]!	; 0x404

00010bbc <XNextEvent@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1020]!	; 0x3fc

00010bc8 <XInternAtom@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1012]!	; 0x3f4

00010bd4 <XGetAtomName@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1004]!	; 0x3ec

00010be0 <g_string_append_printf@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #996]!	; 0x3e4

00010bec <g_locale_to_utf8@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #988]!	; 0x3dc

00010bf8 <g_slist_append@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #980]!	; 0x3d4

00010c04 <__fprintf_chk@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c10 <g_strdup@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #964]!	; 0x3c4

00010c1c <XGetWindowProperty@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #956]!	; 0x3bc

00010c28 <g_strndup@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #948]!	; 0x3b4

00010c34 <XCloseDisplay@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c40 <abort@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #932]!	; 0x3a4

00010c4c <g_utf8_validate@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #924]!	; 0x39c

Disassembly of section .text:

00010c58 <.text>:
   10c58:	ldr	r3, [pc, #736]	; 10f40 <g_utf8_validate@plt+0x2f4>
   10c5c:	ldr	r2, [pc, #736]	; 10f44 <g_utf8_validate@plt+0x2f8>
   10c60:	add	r3, pc, r3
   10c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c68:	sub	sp, sp, #148	; 0x94
   10c6c:	ldr	r2, [r3, r2]
   10c70:	cmp	r0, #1
   10c74:	mov	r7, r0
   10c78:	ldr	r3, [r2]
   10c7c:	str	r2, [sp, #36]	; 0x24
   10c80:	mov	r8, r1
   10c84:	str	r3, [sp, #140]	; 0x8c
   10c88:	ble	10e54 <g_utf8_validate@plt+0x208>
   10c8c:	ldr	r3, [pc, #692]	; 10f48 <g_utf8_validate@plt+0x2fc>
   10c90:	ldr	r9, [pc, #692]	; 10f4c <g_utf8_validate@plt+0x300>
   10c94:	ldr	sl, [pc, #692]	; 10f50 <g_utf8_validate@plt+0x304>
   10c98:	mov	fp, #0
   10c9c:	add	r3, pc, r3
   10ca0:	add	r9, pc, r9
   10ca4:	add	sl, pc, sl
   10ca8:	str	r3, [sp, #28]
   10cac:	str	fp, [sp, #32]
   10cb0:	str	fp, [sp, #24]
   10cb4:	mov	r4, #1
   10cb8:	b	10d24 <g_utf8_validate@plt+0xd8>
   10cbc:	ldr	r1, [sp, #28]
   10cc0:	mov	r0, r5
   10cc4:	bl	10acc <strcmp@plt>
   10cc8:	cmp	r0, #0
   10ccc:	bne	10dc4 <g_utf8_validate@plt+0x178>
   10cd0:	add	r4, r4, #1
   10cd4:	cmp	r7, r4
   10cd8:	beq	10e20 <g_utf8_validate@plt+0x1d4>
   10cdc:	add	r6, r8, r6
   10ce0:	ldr	r0, [r6, #4]
   10ce4:	ldrb	r2, [r0]
   10ce8:	cmp	r2, #48	; 0x30
   10cec:	bne	10cfc <g_utf8_validate@plt+0xb0>
   10cf0:	ldrb	r2, [r0, #1]
   10cf4:	cmp	r2, #120	; 0x78
   10cf8:	beq	10e44 <g_utf8_validate@plt+0x1f8>
   10cfc:	mov	r2, #10
   10d00:	mov	r1, #0
   10d04:	bl	10af0 <strtol@plt>
   10d08:	str	r0, [sp, #24]
   10d0c:	ldr	r3, [sp, #24]
   10d10:	cmp	r3, #0
   10d14:	beq	10f0c <g_utf8_validate@plt+0x2c0>
   10d18:	add	r4, r4, #1
   10d1c:	cmp	r7, r4
   10d20:	ble	10d64 <g_utf8_validate@plt+0x118>
   10d24:	ldr	r5, [r8, r4, lsl #2]
   10d28:	mov	r1, r9
   10d2c:	mov	r0, r5
   10d30:	bl	10acc <strcmp@plt>
   10d34:	lsl	r6, r4, #2
   10d38:	cmp	r0, #0
   10d3c:	beq	10e20 <g_utf8_validate@plt+0x1d4>
   10d40:	mov	r1, sl
   10d44:	mov	r0, r5
   10d48:	bl	10acc <strcmp@plt>
   10d4c:	cmp	r0, #0
   10d50:	bne	10cbc <g_utf8_validate@plt+0x70>
   10d54:	add	r4, r4, #1
   10d58:	cmp	r7, r4
   10d5c:	mov	fp, #1
   10d60:	bgt	10d24 <g_utf8_validate@plt+0xd8>
   10d64:	ldr	r0, [sp, #32]
   10d68:	bl	10b80 <XOpenDisplay@plt>
   10d6c:	subs	r5, r0, #0
   10d70:	beq	10f1c <g_utf8_validate@plt+0x2d0>
   10d74:	cmp	fp, #0
   10d78:	beq	10d94 <g_utf8_validate@plt+0x148>
   10d7c:	ldr	r3, [r5, #132]	; 0x84
   10d80:	ldr	r2, [r5, #140]	; 0x8c
   10d84:	mov	r1, #80	; 0x50
   10d88:	mla	r3, r1, r3, r2
   10d8c:	ldr	r3, [r3, #8]
   10d90:	str	r3, [sp, #24]
   10d94:	ldr	r3, [sp, #24]
   10d98:	cmp	r3, #0
   10d9c:	beq	10e68 <g_utf8_validate@plt+0x21c>
   10da0:	add	r3, r8, r4, lsl #2
   10da4:	sub	r2, r7, r4
   10da8:	ldr	r1, [sp, #24]
   10dac:	mov	r0, r5
   10db0:	bl	11790 <g_utf8_validate@plt+0xb44>
   10db4:	mov	r0, r5
   10db8:	bl	10c34 <XCloseDisplay@plt>
   10dbc:	mov	r0, #0
   10dc0:	b	10e28 <g_utf8_validate@plt+0x1dc>
   10dc4:	ldr	r1, [pc, #392]	; 10f54 <g_utf8_validate@plt+0x308>
   10dc8:	mov	r0, r5
   10dcc:	add	r1, pc, r1
   10dd0:	bl	10acc <strcmp@plt>
   10dd4:	cmp	r0, #0
   10dd8:	bne	10df8 <g_utf8_validate@plt+0x1ac>
   10ddc:	add	r4, r4, #1
   10de0:	cmp	r7, r4
   10de4:	beq	10e20 <g_utf8_validate@plt+0x1d4>
   10de8:	add	r6, r8, r6
   10dec:	ldr	r3, [r6, #4]
   10df0:	str	r3, [sp, #32]
   10df4:	b	10d18 <g_utf8_validate@plt+0xcc>
   10df8:	ldrb	r3, [r5]
   10dfc:	cmp	r3, #45	; 0x2d
   10e00:	bne	10d64 <g_utf8_validate@plt+0x118>
   10e04:	ldr	r1, [pc, #332]	; 10f58 <g_utf8_validate@plt+0x30c>
   10e08:	mov	r0, r5
   10e0c:	add	r1, pc, r1
   10e10:	bl	10acc <strcmp@plt>
   10e14:	cmp	r0, #0
   10e18:	addeq	r4, r4, #1
   10e1c:	beq	10d64 <g_utf8_validate@plt+0x118>
   10e20:	mov	r0, #0
   10e24:	bl	1105c <g_utf8_validate@plt+0x410>
   10e28:	ldr	r3, [sp, #36]	; 0x24
   10e2c:	ldr	r2, [sp, #140]	; 0x8c
   10e30:	ldr	r3, [r3]
   10e34:	cmp	r2, r3
   10e38:	bne	10f3c <g_utf8_validate@plt+0x2f0>
   10e3c:	add	sp, sp, #148	; 0x94
   10e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e44:	add	r0, r0, #2
   10e48:	bl	110c8 <g_utf8_validate@plt+0x47c>
   10e4c:	str	r0, [sp, #24]
   10e50:	b	10d0c <g_utf8_validate@plt+0xc0>
   10e54:	mov	r0, #0
   10e58:	bl	10b80 <XOpenDisplay@plt>
   10e5c:	subs	r5, r0, #0
   10e60:	beq	10f1c <g_utf8_validate@plt+0x2d0>
   10e64:	mov	r4, #1
   10e68:	ldr	r3, [r5, #132]	; 0x84
   10e6c:	ldr	r2, [r5, #140]	; 0x8c
   10e70:	mov	r0, #80	; 0x50
   10e74:	mov	r1, #34	; 0x22
   10e78:	mla	r3, r0, r3, r2
   10e7c:	mov	r0, r5
   10e80:	ldr	r6, [r3, #8]
   10e84:	bl	10b08 <XCreateFontCursor@plt>
   10e88:	mov	r2, #0
   10e8c:	mov	r3, #1
   10e90:	mov	r1, r6
   10e94:	str	r3, [sp, #4]
   10e98:	str	r3, [sp]
   10e9c:	str	r2, [sp, #16]
   10ea0:	str	r2, [sp, #8]
   10ea4:	mov	r3, #4
   10ea8:	str	r0, [sp, #12]
   10eac:	mov	r0, r5
   10eb0:	bl	10b50 <XGrabPointer@plt>
   10eb4:	cmp	r0, #0
   10eb8:	addeq	r6, sp, #44	; 0x2c
   10ebc:	bne	10f2c <g_utf8_validate@plt+0x2e0>
   10ec0:	mov	r1, r6
   10ec4:	mov	r0, r5
   10ec8:	bl	10bbc <XNextEvent@plt>
   10ecc:	ldr	r3, [sp, #44]	; 0x2c
   10ed0:	cmp	r3, #4
   10ed4:	bne	10ec0 <g_utf8_validate@plt+0x274>
   10ed8:	mov	r1, #0
   10edc:	mov	r0, r5
   10ee0:	bl	10ba4 <XUngrabPointer@plt>
   10ee4:	ldr	r1, [sp, #68]	; 0x44
   10ee8:	mov	r0, r5
   10eec:	bl	1112c <g_utf8_validate@plt+0x4e0>
   10ef0:	subs	r3, r0, #0
   10ef4:	str	r3, [sp, #24]
   10ef8:	bne	10da0 <g_utf8_validate@plt+0x154>
   10efc:	ldr	r0, [pc, #88]	; 10f5c <g_utf8_validate@plt+0x310>
   10f00:	add	r0, pc, r0
   10f04:	bl	1105c <g_utf8_validate@plt+0x410>
   10f08:	b	10e28 <g_utf8_validate@plt+0x1dc>
   10f0c:	ldr	r0, [pc, #76]	; 10f60 <g_utf8_validate@plt+0x314>
   10f10:	add	r0, pc, r0
   10f14:	bl	1105c <g_utf8_validate@plt+0x410>
   10f18:	b	10e28 <g_utf8_validate@plt+0x1dc>
   10f1c:	ldr	r0, [pc, #64]	; 10f64 <g_utf8_validate@plt+0x318>
   10f20:	add	r0, pc, r0
   10f24:	bl	1105c <g_utf8_validate@plt+0x410>
   10f28:	b	10e28 <g_utf8_validate@plt+0x1dc>
   10f2c:	ldr	r0, [pc, #52]	; 10f68 <g_utf8_validate@plt+0x31c>
   10f30:	add	r0, pc, r0
   10f34:	bl	1105c <g_utf8_validate@plt+0x410>
   10f38:	b	10e28 <g_utf8_validate@plt+0x1dc>
   10f3c:	bl	10b2c <__stack_chk_fail@plt>
   10f40:	strdeq	r1, [r1], -ip
   10f44:	muleq	r0, r0, r0
   10f48:	andeq	r0, r0, ip, asr #28
   10f4c:	andeq	r0, r0, r8, lsr lr
   10f50:	andeq	r0, r0, ip, lsr lr
   10f54:	andeq	r0, r0, r8, asr #26
   10f58:	andeq	r0, r0, r4, lsl sp
   10f5c:	muleq	r0, ip, ip
   10f60:	andeq	r0, r0, r0, ror #23
   10f64:	andeq	r0, r0, r4, lsl #24
   10f68:	andeq	r0, r0, r8, asr #24
   10f6c:	mov	fp, #0
   10f70:	mov	lr, #0
   10f74:	pop	{r1}		; (ldr r1, [sp], #4)
   10f78:	mov	r2, sp
   10f7c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f80:	push	{r0}		; (str r0, [sp, #-4]!)
   10f84:	ldr	ip, [pc, #16]	; 10f9c <g_utf8_validate@plt+0x350>
   10f88:	push	{ip}		; (str ip, [sp, #-4]!)
   10f8c:	ldr	r0, [pc, #12]	; 10fa0 <g_utf8_validate@plt+0x354>
   10f90:	ldr	r3, [pc, #12]	; 10fa4 <g_utf8_validate@plt+0x358>
   10f94:	bl	10b74 <__libc_start_main@plt>
   10f98:	bl	10c40 <abort@plt>
   10f9c:	andeq	r1, r1, r4, asr r9
   10fa0:	andeq	r0, r1, r8, asr ip
   10fa4:	strdeq	r1, [r1], -r4
   10fa8:	ldr	r3, [pc, #20]	; 10fc4 <g_utf8_validate@plt+0x378>
   10fac:	ldr	r2, [pc, #20]	; 10fc8 <g_utf8_validate@plt+0x37c>
   10fb0:	add	r3, pc, r3
   10fb4:	ldr	r2, [r3, r2]
   10fb8:	cmp	r2, #0
   10fbc:	bxeq	lr
   10fc0:	b	10b8c <__gmon_start__@plt>
   10fc4:	andeq	r0, r1, ip, lsr #31
   10fc8:	muleq	r0, r8, r0
   10fcc:	ldr	r0, [pc, #24]	; 10fec <g_utf8_validate@plt+0x3a0>
   10fd0:	ldr	r3, [pc, #24]	; 10ff0 <g_utf8_validate@plt+0x3a4>
   10fd4:	cmp	r3, r0
   10fd8:	bxeq	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <g_utf8_validate@plt+0x3a8>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r2, r2, r8
   10ff0:	andeq	r2, r2, r8
   10ff4:	andeq	r0, r0, r0
   10ff8:	ldr	r0, [pc, #36]	; 11024 <g_utf8_validate@plt+0x3d8>
   10ffc:	ldr	r1, [pc, #36]	; 11028 <g_utf8_validate@plt+0x3dc>
   11000:	sub	r1, r1, r0
   11004:	asr	r1, r1, #2
   11008:	add	r1, r1, r1, lsr #31
   1100c:	asrs	r1, r1, #1
   11010:	bxeq	lr
   11014:	ldr	r3, [pc, #16]	; 1102c <g_utf8_validate@plt+0x3e0>
   11018:	cmp	r3, #0
   1101c:	bxeq	lr
   11020:	bx	r3
   11024:	andeq	r2, r2, r8
   11028:	andeq	r2, r2, r8
   1102c:	andeq	r0, r0, r0
   11030:	push	{r4, lr}
   11034:	ldr	r4, [pc, #24]	; 11054 <g_utf8_validate@plt+0x408>
   11038:	ldrb	r3, [r4]
   1103c:	cmp	r3, #0
   11040:	popne	{r4, pc}
   11044:	bl	10fcc <g_utf8_validate@plt+0x380>
   11048:	mov	r3, #1
   1104c:	strb	r3, [r4]
   11050:	pop	{r4, pc}
   11054:	andeq	r2, r2, r8
   11058:	b	10ff8 <g_utf8_validate@plt+0x3ac>
   1105c:	ldr	r2, [pc, #80]	; 110b4 <g_utf8_validate@plt+0x468>
   11060:	ldr	r1, [pc, #80]	; 110b8 <g_utf8_validate@plt+0x46c>
   11064:	add	r2, pc, r2
   11068:	push	{r4, lr}
   1106c:	subs	r3, r0, #0
   11070:	ldr	r2, [r2, r1]
   11074:	ldr	r0, [r2]
   11078:	beq	11094 <g_utf8_validate@plt+0x448>
   1107c:	ldr	r2, [pc, #56]	; 110bc <g_utf8_validate@plt+0x470>
   11080:	mov	r1, #1
   11084:	add	r2, pc, r2
   11088:	bl	10c04 <__fprintf_chk@plt>
   1108c:	mov	r0, #1
   11090:	pop	{r4, pc}
   11094:	mov	r3, r0
   11098:	ldr	r0, [pc, #32]	; 110c0 <g_utf8_validate@plt+0x474>
   1109c:	ldr	r2, [pc, #32]	; 110c4 <g_utf8_validate@plt+0x478>
   110a0:	mov	r1, #1
   110a4:	add	r0, pc, r0
   110a8:	bl	10b5c <fwrite@plt>
   110ac:	mov	r0, #1
   110b0:	pop	{r4, pc}
   110b4:	strdeq	r0, [r1], -r8
   110b8:	muleq	r0, r4, r0
   110bc:	ldrdeq	r0, [r0], -r8
   110c0:			; <UNDEFINED> instruction: 0x000008bc
   110c4:	andeq	r0, r0, sl, lsl r1
   110c8:	ldrb	r3, [r0]
   110cc:	cmp	r3, #0
   110d0:	beq	11124 <g_utf8_validate@plt+0x4d8>
   110d4:	mov	r1, r0
   110d8:	mov	r0, #0
   110dc:	push	{lr}		; (str lr, [sp, #-4]!)
   110e0:	sub	r2, r3, #48	; 0x30
   110e4:	sub	lr, r3, #65	; 0x41
   110e8:	uxtb	ip, r2
   110ec:	cmp	ip, #9
   110f0:	bls	11110 <g_utf8_validate@plt+0x4c4>
   110f4:	cmp	lr, #5
   110f8:	sub	r2, r3, #87	; 0x57
   110fc:	sub	ip, r3, #97	; 0x61
   11100:	subls	r2, r3, #55	; 0x37
   11104:	bls	11110 <g_utf8_validate@plt+0x4c4>
   11108:	cmp	ip, #5
   1110c:	pophi	{pc}		; (ldrhi pc, [sp], #4)
   11110:	ldrb	r3, [r1, #1]!
   11114:	add	r0, r2, r0, lsl #4
   11118:	cmp	r3, #0
   1111c:	bne	110e0 <g_utf8_validate@plt+0x494>
   11120:	pop	{pc}		; (ldr pc, [sp], #4)
   11124:	mov	r0, r3
   11128:	bx	lr
   1112c:	ldr	r3, [pc, #300]	; 11260 <g_utf8_validate@plt+0x614>
   11130:	ldr	ip, [pc, #300]	; 11264 <g_utf8_validate@plt+0x618>
   11134:	add	r3, pc, r3
   11138:	push	{r4, r5, r6, r7, r8, lr}
   1113c:	mov	r7, r1
   11140:	ldr	r6, [r3, ip]
   11144:	ldr	r1, [pc, #284]	; 11268 <g_utf8_validate@plt+0x61c>
   11148:	sub	sp, sp, #72	; 0x48
   1114c:	ldr	r3, [r6]
   11150:	mov	r2, #1
   11154:	add	r1, pc, r1
   11158:	mov	r5, r0
   1115c:	str	r3, [sp, #68]	; 0x44
   11160:	bl	10bc8 <XInternAtom@plt>
   11164:	add	ip, sp, #44	; 0x2c
   11168:	add	r3, sp, #36	; 0x24
   1116c:	str	ip, [sp, #4]
   11170:	add	ip, sp, #40	; 0x28
   11174:	mov	r2, r3
   11178:	mov	r1, r7
   1117c:	str	ip, [sp]
   11180:	mov	r8, r0
   11184:	mov	r0, r5
   11188:	bl	10b20 <XQueryTree@plt>
   1118c:	ldr	r3, [sp, #44]	; 0x2c
   11190:	cmp	r3, #0
   11194:	beq	111c4 <g_utf8_validate@plt+0x578>
   11198:	mov	r4, #0
   1119c:	ldr	r3, [sp, #40]	; 0x28
   111a0:	mov	r0, r5
   111a4:	ldr	r1, [r3, r4, lsl #2]
   111a8:	bl	1112c <g_utf8_validate@plt+0x4e0>
   111ac:	cmp	r0, #0
   111b0:	bne	11244 <g_utf8_validate@plt+0x5f8>
   111b4:	ldr	r3, [sp, #44]	; 0x2c
   111b8:	add	r4, r4, #1
   111bc:	cmp	r3, r4
   111c0:	bhi	1119c <g_utf8_validate@plt+0x550>
   111c4:	add	r3, sp, #64	; 0x40
   111c8:	str	r3, [sp, #28]
   111cc:	add	r3, sp, #60	; 0x3c
   111d0:	str	r3, [sp, #24]
   111d4:	add	r3, sp, #56	; 0x38
   111d8:	str	r3, [sp, #20]
   111dc:	add	r3, sp, #52	; 0x34
   111e0:	mov	r4, #0
   111e4:	mov	r1, #1
   111e8:	str	r3, [sp, #16]
   111ec:	add	r3, sp, #48	; 0x30
   111f0:	mov	r2, r8
   111f4:	mov	r0, r5
   111f8:	str	r3, [sp, #12]
   111fc:	str	r1, [sp]
   11200:	mov	r3, r4
   11204:	mov	r1, r7
   11208:	str	r8, [sp, #8]
   1120c:	str	r4, [sp, #4]
   11210:	bl	10c1c <XGetWindowProperty@plt>
   11214:	mov	r5, r0
   11218:	ldr	r0, [sp, #64]	; 0x40
   1121c:	bl	10b38 <XFree@plt>
   11220:	cmp	r5, r4
   11224:	movne	r0, r4
   11228:	bne	11244 <g_utf8_validate@plt+0x5f8>
   1122c:	ldr	r0, [sp, #48]	; 0x30
   11230:	cmp	r0, r4
   11234:	beq	11244 <g_utf8_validate@plt+0x5f8>
   11238:	ldr	r0, [sp, #56]	; 0x38
   1123c:	cmp	r0, r4
   11240:	movne	r0, r7
   11244:	ldr	r2, [sp, #68]	; 0x44
   11248:	ldr	r3, [r6]
   1124c:	cmp	r2, r3
   11250:	bne	1125c <g_utf8_validate@plt+0x610>
   11254:	add	sp, sp, #72	; 0x48
   11258:	pop	{r4, r5, r6, r7, r8, pc}
   1125c:	bl	10b2c <__stack_chk_fail@plt>
   11260:	andeq	r0, r1, r8, lsr #28
   11264:	muleq	r0, r0, r0
   11268:	andeq	r0, r0, r8, lsr #18
   1126c:	cmp	r2, #0
   11270:	push	{r4, r5, r6, lr}
   11274:	mov	r4, r0
   11278:	sub	sp, sp, #8
   1127c:	mov	r6, r1
   11280:	bne	112bc <g_utf8_validate@plt+0x670>
   11284:	ldr	r5, [pc, #112]	; 112fc <g_utf8_validate@plt+0x6b0>
   11288:	cmp	r4, #0
   1128c:	add	r5, pc, r5
   11290:	beq	112cc <g_utf8_validate@plt+0x680>
   11294:	ldr	r1, [pc, #100]	; 11300 <g_utf8_validate@plt+0x6b4>
   11298:	mov	r0, r4
   1129c:	str	r5, [sp]
   112a0:	mov	r3, r6
   112a4:	mov	r2, r5
   112a8:	add	r1, pc, r1
   112ac:	bl	10be0 <g_string_append_printf@plt>
   112b0:	mov	r0, r4
   112b4:	add	sp, sp, #8
   112b8:	pop	{r4, r5, r6, pc}
   112bc:	ldr	r5, [pc, #64]	; 11304 <g_utf8_validate@plt+0x6b8>
   112c0:	cmp	r4, #0
   112c4:	add	r5, pc, r5
   112c8:	bne	11294 <g_utf8_validate@plt+0x648>
   112cc:	mov	r0, r4
   112d0:	bl	10ad8 <g_string_new@plt>
   112d4:	ldr	r1, [pc, #44]	; 11308 <g_utf8_validate@plt+0x6bc>
   112d8:	str	r5, [sp]
   112dc:	mov	r3, r6
   112e0:	mov	r2, r5
   112e4:	add	r1, pc, r1
   112e8:	mov	r4, r0
   112ec:	bl	10be0 <g_string_append_printf@plt>
   112f0:	mov	r0, r4
   112f4:	add	sp, sp, #8
   112f8:	pop	{r4, r5, r6, pc}
   112fc:	andeq	r0, r0, r8, asr #16
   11300:	andeq	r0, r0, r4, ror #15
   11304:	andeq	r0, r0, r4, asr #15
   11308:			; <UNDEFINED> instruction: 0x000007b4
   1130c:	push	{r4, r5, r6, lr}
   11310:	subs	r4, r0, #0
   11314:	mov	r5, r1
   11318:	beq	11334 <g_utf8_validate@plt+0x6e8>
   1131c:	mov	r2, r1
   11320:	ldr	r1, [pc, #44]	; 11354 <g_utf8_validate@plt+0x708>
   11324:	add	r1, pc, r1
   11328:	bl	10be0 <g_string_append_printf@plt>
   1132c:	mov	r0, r4
   11330:	pop	{r4, r5, r6, pc}
   11334:	bl	10ad8 <g_string_new@plt>
   11338:	ldr	r1, [pc, #24]	; 11358 <g_utf8_validate@plt+0x70c>
   1133c:	mov	r2, r5
   11340:	add	r1, pc, r1
   11344:	mov	r4, r0
   11348:	bl	10be0 <g_string_append_printf@plt>
   1134c:	mov	r0, r4
   11350:	pop	{r4, r5, r6, pc}
   11354:	andeq	r0, r0, ip, ror r7
   11358:	andeq	r0, r0, r8, ror #14
   1135c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11360:	add	r9, r0, r1
   11364:	cmp	r0, r9
   11368:	sub	sp, sp, #12
   1136c:	bcs	11480 <g_utf8_validate@plt+0x834>
   11370:	mov	r6, r2
   11374:	mov	r8, r1
   11378:	mov	r7, r0
   1137c:	mov	r4, r0
   11380:	mov	r5, #0
   11384:	sub	r1, r4, r7
   11388:	sub	r1, r8, r1
   1138c:	mov	r0, r4
   11390:	bl	10c28 <g_strndup@plt>
   11394:	mov	r1, r0
   11398:	mov	r0, r5
   1139c:	bl	10bf8 <g_slist_append@plt>
   113a0:	mov	r5, r0
   113a4:	mov	r0, r4
   113a8:	bl	10b98 <strlen@plt>
   113ac:	add	r0, r0, #1
   113b0:	add	r4, r4, r0
   113b4:	cmp	r4, r9
   113b8:	bcc	11384 <g_utf8_validate@plt+0x738>
   113bc:	cmp	r5, #0
   113c0:	beq	11480 <g_utf8_validate@plt+0x834>
   113c4:	ldr	r9, [pc, #192]	; 1148c <g_utf8_validate@plt+0x840>
   113c8:	mov	r4, r5
   113cc:	add	r9, pc, r9
   113d0:	mov	r8, #0
   113d4:	b	11418 <g_utf8_validate@plt+0x7cc>
   113d8:	bl	10c4c <g_utf8_validate@plt>
   113dc:	cmp	r0, #0
   113e0:	mov	r0, r9
   113e4:	ldrne	r0, [r4]
   113e8:	bl	10c10 <g_strdup@plt>
   113ec:	mov	r7, r0
   113f0:	mov	r0, r8
   113f4:	mov	r2, #1
   113f8:	mov	r1, r7
   113fc:	bl	1126c <g_utf8_validate@plt+0x620>
   11400:	mov	r8, r0
   11404:	mov	r0, r7
   11408:	bl	10afc <g_free@plt>
   1140c:	ldr	r4, [r4, #4]
   11410:	cmp	r4, #0
   11414:	beq	11448 <g_utf8_validate@plt+0x7fc>
   11418:	mov	r2, #0
   1141c:	cmp	r6, r2
   11420:	mvn	r1, #0
   11424:	mov	r3, r6
   11428:	ldr	r0, [r4]
   1142c:	bne	113d8 <g_utf8_validate@plt+0x78c>
   11430:	str	r6, [sp]
   11434:	mov	r2, r6
   11438:	mvn	r1, #0
   1143c:	bl	10bec <g_locale_to_utf8@plt>
   11440:	mov	r7, r0
   11444:	b	113f0 <g_utf8_validate@plt+0x7a4>
   11448:	ldr	r0, [r5]
   1144c:	bl	10afc <g_free@plt>
   11450:	mov	r1, r5
   11454:	mov	r0, r5
   11458:	bl	10bb0 <g_slist_delete_link@plt>
   1145c:	subs	r5, r0, #0
   11460:	bne	11448 <g_utf8_validate@plt+0x7fc>
   11464:	cmp	r8, #0
   11468:	beq	11480 <g_utf8_validate@plt+0x834>
   1146c:	mov	r1, r5
   11470:	mov	r0, r8
   11474:	add	sp, sp, #12
   11478:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1147c:	b	10b68 <g_string_free@plt>
   11480:	mov	r0, #0
   11484:	add	sp, sp, #12
   11488:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1148c:	andeq	r0, r0, r8, lsl #14
   11490:	push	{r4, r5, r6, r7, r8, lr}
   11494:	subs	r6, r2, #0
   11498:	beq	114e8 <g_utf8_validate@plt+0x89c>
   1149c:	sub	r4, r1, #4
   114a0:	mov	r7, r0
   114a4:	add	r6, r4, r6, lsl #2
   114a8:	mov	r5, #0
   114ac:	ldr	r1, [r4, #4]!
   114b0:	mov	r0, r7
   114b4:	bl	10bd4 <XGetAtomName@plt>
   114b8:	mov	r2, #0
   114bc:	mov	r1, r0
   114c0:	mov	r0, r5
   114c4:	bl	1126c <g_utf8_validate@plt+0x620>
   114c8:	cmp	r4, r6
   114cc:	mov	r5, r0
   114d0:	bne	114ac <g_utf8_validate@plt+0x860>
   114d4:	cmp	r0, #0
   114d8:	beq	114e8 <g_utf8_validate@plt+0x89c>
   114dc:	mov	r1, #0
   114e0:	pop	{r4, r5, r6, r7, r8, lr}
   114e4:	b	10b68 <g_string_free@plt>
   114e8:	mov	r0, #0
   114ec:	pop	{r4, r5, r6, r7, r8, pc}
   114f0:	push	{r4, r5, r6, r7, r8, lr}
   114f4:	subs	r6, r1, #0
   114f8:	beq	11578 <g_utf8_validate@plt+0x92c>
   114fc:	mov	r4, #0
   11500:	mov	r7, r0
   11504:	mov	r5, r2
   11508:	mov	r0, r4
   1150c:	b	11524 <g_utf8_validate@plt+0x8d8>
   11510:	cmp	r5, #8
   11514:	beq	1156c <g_utf8_validate@plt+0x920>
   11518:	add	r4, r4, #1
   1151c:	cmp	r6, r4
   11520:	beq	11548 <g_utf8_validate@plt+0x8fc>
   11524:	cmp	r5, #16
   11528:	beq	1155c <g_utf8_validate@plt+0x910>
   1152c:	cmp	r5, #32
   11530:	bne	11510 <g_utf8_validate@plt+0x8c4>
   11534:	ldr	r1, [r7, r4, lsl #2]
   11538:	add	r4, r4, #1
   1153c:	bl	1130c <g_utf8_validate@plt+0x6c0>
   11540:	cmp	r6, r4
   11544:	bne	11524 <g_utf8_validate@plt+0x8d8>
   11548:	cmp	r0, #0
   1154c:	beq	11578 <g_utf8_validate@plt+0x92c>
   11550:	mov	r1, #0
   11554:	pop	{r4, r5, r6, r7, r8, lr}
   11558:	b	10b68 <g_string_free@plt>
   1155c:	lsl	r3, r4, #1
   11560:	ldrh	r1, [r7, r3]
   11564:	bl	1130c <g_utf8_validate@plt+0x6c0>
   11568:	b	11518 <g_utf8_validate@plt+0x8cc>
   1156c:	ldrb	r1, [r7, r4]
   11570:	bl	1130c <g_utf8_validate@plt+0x6c0>
   11574:	b	11518 <g_utf8_validate@plt+0x8cc>
   11578:	mov	r0, #0
   1157c:	pop	{r4, r5, r6, r7, r8, pc}
   11580:	ldr	ip, [pc, #500]	; 1177c <g_utf8_validate@plt+0xb30>
   11584:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11588:	add	ip, pc, ip
   1158c:	ldr	lr, [pc, #492]	; 11780 <g_utf8_validate@plt+0xb34>
   11590:	sub	sp, sp, #56	; 0x38
   11594:	mov	r7, r3
   11598:	ldr	r6, [ip, lr]
   1159c:	add	r3, sp, #40	; 0x28
   115a0:	mov	r4, #0
   115a4:	str	r3, [sp, #28]
   115a8:	add	r3, sp, #48	; 0x30
   115ac:	str	r4, [sp, #8]
   115b0:	str	r4, [sp, #4]
   115b4:	ldr	lr, [r6]
   115b8:	str	r3, [sp, #24]
   115bc:	add	r3, sp, #44	; 0x2c
   115c0:	str	r3, [sp, #20]
   115c4:	add	r3, sp, #32
   115c8:	str	r3, [sp, #16]
   115cc:	mvn	r5, #-2147483648	; 0x80000000
   115d0:	add	r3, sp, #36	; 0x24
   115d4:	str	r3, [sp, #12]
   115d8:	str	r5, [sp]
   115dc:	mov	r3, r4
   115e0:	str	lr, [sp, #52]	; 0x34
   115e4:	str	r4, [sp, #40]	; 0x28
   115e8:	mov	r8, r0
   115ec:	ldr	r9, [sp, #88]	; 0x58
   115f0:	bl	10c1c <XGetWindowProperty@plt>
   115f4:	subs	r5, r0, #0
   115f8:	movne	r0, r4
   115fc:	bne	116a4 <g_utf8_validate@plt+0xa58>
   11600:	ldr	r4, [sp, #44]	; 0x2c
   11604:	cmp	r4, #0
   11608:	bne	116bc <g_utf8_validate@plt+0xa70>
   1160c:	ldr	r0, [sp, #40]	; 0x28
   11610:	mov	sl, r4
   11614:	bl	10b38 <XFree@plt>
   11618:	ldr	r1, [sp, #36]	; 0x24
   1161c:	mov	r0, r8
   11620:	bl	10bd4 <XGetAtomName@plt>
   11624:	ldr	r1, [pc, #344]	; 11784 <g_utf8_validate@plt+0xb38>
   11628:	add	r1, pc, r1
   1162c:	str	r0, [r7]
   11630:	mov	r5, r0
   11634:	bl	10acc <strcmp@plt>
   11638:	subs	r2, r0, #0
   1163c:	beq	11688 <g_utf8_validate@plt+0xa3c>
   11640:	ldr	r1, [pc, #320]	; 11788 <g_utf8_validate@plt+0xb3c>
   11644:	mov	r0, r5
   11648:	add	r1, pc, r1
   1164c:	bl	10acc <strcmp@plt>
   11650:	cmp	r0, #0
   11654:	beq	11760 <g_utf8_validate@plt+0xb14>
   11658:	ldr	r1, [pc, #300]	; 1178c <g_utf8_validate@plt+0xb40>
   1165c:	mov	r0, r5
   11660:	add	r1, pc, r1
   11664:	bl	10acc <strcmp@plt>
   11668:	cmp	r0, #0
   1166c:	bne	11748 <g_utf8_validate@plt+0xafc>
   11670:	mov	r2, r4
   11674:	mov	r0, r8
   11678:	mov	r1, sl
   1167c:	bl	11490 <g_utf8_validate@plt+0x844>
   11680:	str	r0, [r9]
   11684:	b	11698 <g_utf8_validate@plt+0xa4c>
   11688:	mov	r1, r4
   1168c:	mov	r0, sl
   11690:	bl	1135c <g_utf8_validate@plt+0x710>
   11694:	str	r0, [r9]
   11698:	mov	r0, sl
   1169c:	bl	10afc <g_free@plt>
   116a0:	mov	r0, #1
   116a4:	ldr	r2, [sp, #52]	; 0x34
   116a8:	ldr	r3, [r6]
   116ac:	cmp	r2, r3
   116b0:	bne	11778 <g_utf8_validate@plt+0xb2c>
   116b4:	add	sp, sp, #56	; 0x38
   116b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116bc:	ldr	r0, [sp, #32]
   116c0:	cmp	r0, #0
   116c4:	add	r3, r0, #7
   116c8:	movlt	r0, r3
   116cc:	asr	r0, r0, #3
   116d0:	mul	r0, r4, r0
   116d4:	bl	10ae4 <g_malloc@plt>
   116d8:	ldr	r4, [sp, #44]	; 0x2c
   116dc:	cmp	r4, #0
   116e0:	mov	sl, r0
   116e4:	ldreq	r0, [sp, #40]	; 0x28
   116e8:	beq	11614 <g_utf8_validate@plt+0x9c8>
   116ec:	ldr	r2, [sp, #32]
   116f0:	ldr	r0, [sp, #40]	; 0x28
   116f4:	mov	r3, r5
   116f8:	b	11710 <g_utf8_validate@plt+0xac4>
   116fc:	cmp	r2, #8
   11700:	beq	1173c <g_utf8_validate@plt+0xaf0>
   11704:	add	r3, r3, #1
   11708:	cmp	r4, r3
   1170c:	beq	11614 <g_utf8_validate@plt+0x9c8>
   11710:	cmp	r2, #16
   11714:	beq	1172c <g_utf8_validate@plt+0xae0>
   11718:	cmp	r2, #32
   1171c:	bne	116fc <g_utf8_validate@plt+0xab0>
   11720:	ldr	r1, [r0, r3, lsl #2]
   11724:	str	r1, [sl, r3, lsl #2]
   11728:	b	11704 <g_utf8_validate@plt+0xab8>
   1172c:	lsl	r1, r3, #1
   11730:	ldrh	ip, [r0, r1]
   11734:	strh	ip, [sl, r1]
   11738:	b	11704 <g_utf8_validate@plt+0xab8>
   1173c:	ldrb	r1, [r0, r3]
   11740:	strb	r1, [sl, r3]
   11744:	b	11704 <g_utf8_validate@plt+0xab8>
   11748:	mov	r1, r4
   1174c:	ldr	r2, [sp, #32]
   11750:	mov	r0, sl
   11754:	bl	114f0 <g_utf8_validate@plt+0x8a4>
   11758:	str	r0, [r9]
   1175c:	b	11698 <g_utf8_validate@plt+0xa4c>
   11760:	mov	r1, r4
   11764:	mov	r2, #1
   11768:	mov	r0, sl
   1176c:	bl	1135c <g_utf8_validate@plt+0x710>
   11770:	str	r0, [r9]
   11774:	b	11698 <g_utf8_validate@plt+0xa4c>
   11778:	bl	10b2c <__stack_chk_fail@plt>
   1177c:	ldrdeq	r0, [r1], -r4
   11780:	muleq	r0, r0, r0
   11784:	andeq	r0, r0, r4, lsl #9
   11788:	andeq	r0, r0, ip, ror #8
   1178c:	andeq	r0, r0, r0, ror #8
   11790:	ldr	ip, [pc, #332]	; 118e4 <g_utf8_validate@plt+0xc98>
   11794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11798:	add	ip, pc, ip
   1179c:	ldr	lr, [pc, #324]	; 118e8 <g_utf8_validate@plt+0xc9c>
   117a0:	sub	sp, sp, #60	; 0x3c
   117a4:	mov	r8, r2
   117a8:	ldr	lr, [ip, lr]
   117ac:	str	r3, [sp, #28]
   117b0:	add	r2, sp, #40	; 0x28
   117b4:	ldr	r3, [lr]
   117b8:	str	lr, [sp, #36]	; 0x24
   117bc:	str	r3, [sp, #52]	; 0x34
   117c0:	mov	r7, r0
   117c4:	str	r1, [sp, #12]
   117c8:	bl	10b44 <XListProperties@plt>
   117cc:	ldr	r3, [sp, #40]	; 0x28
   117d0:	cmp	r3, #0
   117d4:	str	r0, [sp, #32]
   117d8:	ble	118bc <g_utf8_validate@plt+0xc70>
   117dc:	ldr	r3, [pc, #264]	; 118ec <g_utf8_validate@plt+0xca0>
   117e0:	sub	r6, r0, #4
   117e4:	add	r3, pc, r3
   117e8:	str	r3, [sp, #20]
   117ec:	ldr	r3, [pc, #252]	; 118f0 <g_utf8_validate@plt+0xca4>
   117f0:	mov	r5, #0
   117f4:	add	r3, pc, r3
   117f8:	str	r3, [sp, #24]
   117fc:	add	r3, sp, #48	; 0x30
   11800:	add	fp, sp, #44	; 0x2c
   11804:	str	r3, [sp, #16]
   11808:	b	11848 <g_utf8_validate@plt+0xbfc>
   1180c:	ldrd	r2, [sp, #44]	; 0x2c
   11810:	ldr	r1, [sp, #24]
   11814:	ldr	r0, [sp, #20]
   11818:	cmp	r3, #0
   1181c:	moveq	r3, r1
   11820:	mov	r1, r4
   11824:	bl	10b14 <g_print@plt>
   11828:	ldr	r0, [sp, #48]	; 0x30
   1182c:	bl	10afc <g_free@plt>
   11830:	mov	r0, r4
   11834:	bl	10b38 <XFree@plt>
   11838:	ldr	r3, [sp, #40]	; 0x28
   1183c:	add	r5, r5, #1
   11840:	cmp	r3, r5
   11844:	ble	118bc <g_utf8_validate@plt+0xc70>
   11848:	ldr	r1, [r6, #4]!
   1184c:	mov	r0, r7
   11850:	bl	10bd4 <XGetAtomName@plt>
   11854:	ldr	r1, [sp, #16]
   11858:	ldr	r2, [r6]
   1185c:	mov	r3, fp
   11860:	str	r1, [sp]
   11864:	ldr	r1, [sp, #12]
   11868:	mov	r4, r0
   1186c:	mov	r0, r7
   11870:	bl	11580 <g_utf8_validate@plt+0x934>
   11874:	cmp	r0, #0
   11878:	beq	11830 <g_utf8_validate@plt+0xbe4>
   1187c:	cmp	r8, #0
   11880:	beq	1180c <g_utf8_validate@plt+0xbc0>
   11884:	ble	11828 <g_utf8_validate@plt+0xbdc>
   11888:	ldr	r3, [sp, #28]
   1188c:	mov	r9, #0
   11890:	sub	sl, r3, #4
   11894:	b	118a4 <g_utf8_validate@plt+0xc58>
   11898:	add	r9, r9, #1
   1189c:	cmp	r8, r9
   118a0:	beq	11828 <g_utf8_validate@plt+0xbdc>
   118a4:	ldr	r1, [sl, #4]!
   118a8:	mov	r0, r4
   118ac:	bl	10acc <strcmp@plt>
   118b0:	cmp	r0, #0
   118b4:	bne	11898 <g_utf8_validate@plt+0xc4c>
   118b8:	b	1180c <g_utf8_validate@plt+0xbc0>
   118bc:	ldr	r0, [sp, #32]
   118c0:	bl	10b38 <XFree@plt>
   118c4:	ldr	r3, [sp, #36]	; 0x24
   118c8:	ldr	r2, [sp, #52]	; 0x34
   118cc:	ldr	r3, [r3]
   118d0:	cmp	r2, r3
   118d4:	bne	118e0 <g_utf8_validate@plt+0xc94>
   118d8:	add	sp, sp, #60	; 0x3c
   118dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118e0:	bl	10b2c <__stack_chk_fail@plt>
   118e4:	andeq	r0, r1, r4, asr #15
   118e8:	muleq	r0, r0, r0
   118ec:	andeq	r0, r0, r4, ror #5
   118f0:	andeq	r0, r0, r0, ror #5
   118f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118f8:	mov	r7, r0
   118fc:	ldr	r6, [pc, #72]	; 1194c <g_utf8_validate@plt+0xd00>
   11900:	ldr	r5, [pc, #72]	; 11950 <g_utf8_validate@plt+0xd04>
   11904:	add	r6, pc, r6
   11908:	add	r5, pc, r5
   1190c:	sub	r6, r6, r5
   11910:	mov	r8, r1
   11914:	mov	r9, r2
   11918:	bl	10aac <strcmp@plt-0x20>
   1191c:	asrs	r6, r6, #2
   11920:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11924:	mov	r4, #0
   11928:	add	r4, r4, #1
   1192c:	ldr	r3, [r5], #4
   11930:	mov	r2, r9
   11934:	mov	r1, r8
   11938:	mov	r0, r7
   1193c:	blx	r3
   11940:	cmp	r6, r4
   11944:	bne	11928 <g_utf8_validate@plt+0xcdc>
   11948:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1194c:	andeq	r0, r1, r4, asr #10
   11950:	andeq	r0, r1, ip, lsr r5
   11954:	bx	lr

Disassembly of section .fini:

00011958 <.fini>:
   11958:	push	{r3, lr}
   1195c:	pop	{r3, pc}
