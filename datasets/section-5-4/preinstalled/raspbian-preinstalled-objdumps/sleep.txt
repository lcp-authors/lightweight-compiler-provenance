
raspbian-preinstalled/sleep:     file format elf32-littlearm


Disassembly of section .init:

00010bb4 <.init>:
   10bb4:	push	{r3, lr}
   10bb8:	bl	11138 <abort@plt+0x348>
   10bbc:	pop	{r3, pc}

Disassembly of section .plt:

00010bc0 <calloc@plt-0x14>:
   10bc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bc4:	ldr	lr, [pc, #4]	; 10bd0 <calloc@plt-0x4>
   10bc8:	add	lr, pc, lr
   10bcc:	ldr	pc, [lr, #8]!
   10bd0:	andeq	r5, r1, r0, lsr r4

00010bd4 <calloc@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #86016	; 0x15000
   10bdc:	ldr	pc, [ip, #1072]!	; 0x430

00010be0 <fputs_unlocked@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #86016	; 0x15000
   10be8:	ldr	pc, [ip, #1064]!	; 0x428

00010bec <raise@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #86016	; 0x15000
   10bf4:	ldr	pc, [ip, #1056]!	; 0x420

00010bf8 <strcmp@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #86016	; 0x15000
   10c00:	ldr	pc, [ip, #1048]!	; 0x418

00010c04 <fflush@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #86016	; 0x15000
   10c0c:	ldr	pc, [ip, #1040]!	; 0x410

00010c10 <free@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #86016	; 0x15000
   10c18:	ldr	pc, [ip, #1032]!	; 0x408

00010c1c <nanosleep@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #86016	; 0x15000
   10c24:	ldr	pc, [ip, #1024]!	; 0x400

00010c28 <_exit@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #86016	; 0x15000
   10c30:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c34 <memcpy@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #86016	; 0x15000
   10c3c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c40 <mbsinit@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #86016	; 0x15000
   10c48:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c4c <memcmp@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #86016	; 0x15000
   10c54:	ldr	pc, [ip, #992]!	; 0x3e0

00010c58 <dcgettext@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #86016	; 0x15000
   10c60:	ldr	pc, [ip, #984]!	; 0x3d8

00010c64 <__stack_chk_fail@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #86016	; 0x15000
   10c6c:	ldr	pc, [ip, #976]!	; 0x3d0

00010c70 <realloc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #86016	; 0x15000
   10c78:	ldr	pc, [ip, #968]!	; 0x3c8

00010c7c <textdomain@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #960]!	; 0x3c0

00010c88 <iswprint@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #952]!	; 0x3b8

00010c94 <fwrite@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #944]!	; 0x3b0

00010ca0 <lseek64@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #936]!	; 0x3a8

00010cac <__ctype_get_mb_cur_max@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb8 <__fpending@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #920]!	; 0x398

00010cc4 <mbrtowc@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #912]!	; 0x390

00010cd0 <error@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #904]!	; 0x388

00010cdc <malloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #896]!	; 0x380

00010ce8 <__libc_start_main@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #888]!	; 0x378

00010cf4 <__freading@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #880]!	; 0x370

00010d00 <__gmon_start__@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #872]!	; 0x368

00010d0c <getopt_long@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #864]!	; 0x360

00010d18 <__ctype_b_loc@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #856]!	; 0x358

00010d24 <exit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #848]!	; 0x350

00010d30 <strlen@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #840]!	; 0x348

00010d3c <__errno_location@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #832]!	; 0x340

00010d48 <__cxa_atexit@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #824]!	; 0x338

00010d54 <memset@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #816]!	; 0x330

00010d60 <__printf_chk@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #808]!	; 0x328

00010d6c <fileno@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #800]!	; 0x320

00010d78 <__fprintf_chk@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #792]!	; 0x318

00010d84 <fclose@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #784]!	; 0x310

00010d90 <fseeko64@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #776]!	; 0x308

00010d9c <strtod_l@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #768]!	; 0x300

00010da8 <setlocale@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #760]!	; 0x2f8

00010db4 <strrchr@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #752]!	; 0x2f0

00010dc0 <nl_langinfo@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #744]!	; 0x2e8

00010dcc <newlocale@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #736]!	; 0x2e0

00010dd8 <bindtextdomain@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #728]!	; 0x2d8

00010de4 <strncmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #720]!	; 0x2d0

00010df0 <abort@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #712]!	; 0x2c8

Disassembly of section .text:

00010e00 <.text>:
   10e00:	push	{r4, r5, r6, r7, r8, r9, lr}
   10e04:	vpush	{d8-d11}
   10e08:	ldr	r9, [pc, #680]	; 110b8 <abort@plt+0x2c8>
   10e0c:	mov	r5, r0
   10e10:	ldr	r0, [r1]
   10e14:	sub	sp, sp, #52	; 0x34
   10e18:	ldr	r3, [r9]
   10e1c:	mov	r4, r1
   10e20:	str	r3, [sp, #44]	; 0x2c
   10e24:	bl	1170c <abort@plt+0x91c>
   10e28:	ldr	r1, [pc, #652]	; 110bc <abort@plt+0x2cc>
   10e2c:	mov	r0, #6
   10e30:	bl	10da8 <setlocale@plt>
   10e34:	ldr	r1, [pc, #644]	; 110c0 <abort@plt+0x2d0>
   10e38:	ldr	r0, [pc, #644]	; 110c4 <abort@plt+0x2d4>
   10e3c:	bl	10dd8 <bindtextdomain@plt>
   10e40:	ldr	r0, [pc, #636]	; 110c4 <abort@plt+0x2d4>
   10e44:	bl	10c7c <textdomain@plt>
   10e48:	ldr	r0, [pc, #632]	; 110c8 <abort@plt+0x2d8>
   10e4c:	bl	1490c <abort@plt+0x3b1c>
   10e50:	ldr	r3, [pc, #628]	; 110cc <abort@plt+0x2dc>
   10e54:	ldr	ip, [pc, #628]	; 110d0 <abort@plt+0x2e0>
   10e58:	ldr	r2, [pc, #628]	; 110d4 <abort@plt+0x2e4>
   10e5c:	ldr	r1, [r3]
   10e60:	ldr	r3, [pc, #624]	; 110d8 <abort@plt+0x2e8>
   10e64:	mov	r6, #0
   10e68:	str	r1, [sp]
   10e6c:	mov	r0, r5
   10e70:	mov	r1, r4
   10e74:	str	ip, [sp, #12]
   10e78:	str	r2, [sp, #8]
   10e7c:	str	r3, [sp, #4]
   10e80:	ldr	r2, [pc, #596]	; 110dc <abort@plt+0x2ec>
   10e84:	ldr	r3, [pc, #596]	; 110e0 <abort@plt+0x2f0>
   10e88:	str	r6, [sp, #16]
   10e8c:	bl	1162c <abort@plt+0x83c>
   10e90:	str	r6, [sp]
   10e94:	mov	r1, r4
   10e98:	mov	r0, r5
   10e9c:	ldr	r3, [pc, #576]	; 110e4 <abort@plt+0x2f4>
   10ea0:	ldr	r2, [pc, #532]	; 110bc <abort@plt+0x2cc>
   10ea4:	bl	10d0c <getopt_long@plt>
   10ea8:	cmn	r0, #1
   10eac:	bne	11038 <abort@plt+0x248>
   10eb0:	cmp	r5, #1
   10eb4:	beq	1106c <abort@plt+0x27c>
   10eb8:	ldr	r3, [pc, #552]	; 110e8 <abort@plt+0x2f8>
   10ebc:	ldr	r3, [r3]
   10ec0:	cmp	r5, r3
   10ec4:	ble	11030 <abort@plt+0x240>
   10ec8:	sub	r3, r3, #-1073741823	; 0xc0000001
   10ecc:	add	r5, r4, r5, lsl #2
   10ed0:	vldr	d8, [pc, #448]	; 11098 <abort@plt+0x2a8>
   10ed4:	vldr	d11, [pc, #452]	; 110a0 <abort@plt+0x2b0>
   10ed8:	vldr	d10, [pc, #456]	; 110a8 <abort@plt+0x2b8>
   10edc:	vldr	d9, [pc, #460]	; 110b0 <abort@plt+0x2c0>
   10ee0:	ldr	r7, [pc, #516]	; 110ec <abort@plt+0x2fc>
   10ee4:	ldr	r8, [pc, #516]	; 110f0 <abort@plt+0x300>
   10ee8:	add	r4, r4, r3, lsl #2
   10eec:	sub	r5, r5, #4
   10ef0:	mov	r6, #1
   10ef4:	b	10f4c <abort@plt+0x15c>
   10ef8:	bl	10d3c <__errno_location@plt>
   10efc:	ldr	r3, [r0]
   10f00:	cmp	r3, #34	; 0x22
   10f04:	beq	10f68 <abort@plt+0x178>
   10f08:	mov	r2, #5
   10f0c:	mov	r1, r8
   10f10:	mov	r0, #0
   10f14:	bl	10c58 <dcgettext@plt>
   10f18:	mov	r6, r0
   10f1c:	ldr	r0, [r4]
   10f20:	bl	13970 <abort@plt+0x2b80>
   10f24:	mov	r1, #0
   10f28:	mov	r2, r6
   10f2c:	mov	r6, #0
   10f30:	mov	r3, r0
   10f34:	mov	r0, r1
   10f38:	bl	10cd0 <error@plt>
   10f3c:	vldr	d7, [sp, #32]
   10f40:	cmp	r4, r5
   10f44:	vadd.f64	d8, d8, d7
   10f48:	beq	10fe4 <abort@plt+0x1f4>
   10f4c:	mov	r3, r7
   10f50:	add	r2, sp, #32
   10f54:	add	r1, sp, #28
   10f58:	ldr	r0, [r4, #4]!
   10f5c:	bl	141e0 <abort@plt+0x33f0>
   10f60:	cmp	r0, #0
   10f64:	beq	10ef8 <abort@plt+0x108>
   10f68:	vldr	d7, [sp, #32]
   10f6c:	vcmpe.f64	d7, #0.0
   10f70:	vmrs	APSR_nzcv, fpscr
   10f74:	blt	10f08 <abort@plt+0x118>
   10f78:	ldr	r2, [sp, #28]
   10f7c:	ldrb	r3, [r2]
   10f80:	cmp	r3, #0
   10f84:	beq	10f40 <abort@plt+0x150>
   10f88:	ldrb	r2, [r2, #1]
   10f8c:	cmp	r2, #0
   10f90:	bne	10f08 <abort@plt+0x118>
   10f94:	sub	r3, r3, #100	; 0x64
   10f98:	cmp	r3, #15
   10f9c:	ldrls	pc, [pc, r3, lsl #2]
   10fa0:	b	10f08 <abort@plt+0x118>
   10fa4:	andeq	r1, r1, r8, lsr #32
   10fa8:	andeq	r0, r1, r8, lsl #30
   10fac:	andeq	r0, r1, r8, lsl #30
   10fb0:	andeq	r0, r1, r8, lsl #30
   10fb4:	andeq	r1, r1, r0, lsr #32
   10fb8:	andeq	r0, r1, r8, lsl #30
   10fbc:	andeq	r0, r1, r8, lsl #30
   10fc0:	andeq	r0, r1, r8, lsl #30
   10fc4:	andeq	r0, r1, r8, lsl #30
   10fc8:	andeq	r1, r1, r8, lsl r0
   10fcc:	andeq	r0, r1, r8, lsl #30
   10fd0:	andeq	r0, r1, r8, lsl #30
   10fd4:	andeq	r0, r1, r8, lsl #30
   10fd8:	andeq	r0, r1, r8, lsl #30
   10fdc:	andeq	r0, r1, r8, lsl #30
   10fe0:	andeq	r0, r1, r0, asr #30
   10fe4:	cmp	r6, #0
   10fe8:	beq	11038 <abort@plt+0x248>
   10fec:	vmov.f64	d0, d8
   10ff0:	bl	14168 <abort@plt+0x3378>
   10ff4:	cmp	r0, #0
   10ff8:	bne	11044 <abort@plt+0x254>
   10ffc:	ldr	r2, [sp, #44]	; 0x2c
   11000:	ldr	r3, [r9]
   11004:	cmp	r2, r3
   11008:	bne	11040 <abort@plt+0x250>
   1100c:	add	sp, sp, #52	; 0x34
   11010:	vpop	{d8-d11}
   11014:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11018:	vmul.f64	d7, d7, d9
   1101c:	b	10f40 <abort@plt+0x150>
   11020:	vmul.f64	d7, d7, d10
   11024:	b	10f40 <abort@plt+0x150>
   11028:	vmul.f64	d7, d7, d11
   1102c:	b	10f40 <abort@plt+0x150>
   11030:	vldr	d8, [pc, #96]	; 11098 <abort@plt+0x2a8>
   11034:	b	10fec <abort@plt+0x1fc>
   11038:	mov	r0, #1
   1103c:	bl	111ec <abort@plt+0x3fc>
   11040:	bl	10c64 <__stack_chk_fail@plt>
   11044:	bl	10d3c <__errno_location@plt>
   11048:	mov	r2, #5
   1104c:	ldr	r1, [pc, #160]	; 110f4 <abort@plt+0x304>
   11050:	ldr	r4, [r0]
   11054:	mov	r0, #0
   11058:	bl	10c58 <dcgettext@plt>
   1105c:	mov	r1, r4
   11060:	mov	r2, r0
   11064:	mov	r0, #1
   11068:	bl	10cd0 <error@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #128]	; 110f8 <abort@plt+0x308>
   11074:	mov	r0, r6
   11078:	bl	10c58 <dcgettext@plt>
   1107c:	mov	r1, r6
   11080:	mov	r2, r0
   11084:	mov	r0, r6
   11088:	bl	10cd0 <error@plt>
   1108c:	mov	r0, r5
   11090:	bl	111ec <abort@plt+0x3fc>
   11094:	nop			; (mov r0, r0)
	...
   110a4:	rscsmi	r1, r5, r0, lsl #16
   110a8:	andeq	r0, r0, r0
   110ac:	adcmi	r2, ip, r0
   110b0:	andeq	r0, r0, r0
   110b4:	submi	r0, lr, r0
   110b8:	andeq	r5, r2, r8, lsl #30
   110bc:	andeq	r5, r1, r8, asr #3
   110c0:	andeq	r4, r1, r0, lsl #25
   110c4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   110c8:	andeq	r1, r1, r4, asr r5
   110cc:	ldrdeq	r6, [r2], -r0
   110d0:	muleq	r1, r4, ip
   110d4:	andeq	r4, r1, r0, lsr #25
   110d8:	andeq	r1, r1, ip, ror #3
   110dc:	andeq	r4, r1, r8, ror r9
   110e0:	ldrdeq	r4, [r1], -r0
   110e4:	andeq	r4, r1, r8, ror #18
   110e8:	andeq	r6, r2, r0, lsr #2
   110ec:			; <UNDEFINED> instruction: 0x000114b8
   110f0:	andeq	r4, r1, r0, asr #25
   110f4:	ldrdeq	r4, [r1], -ip
   110f8:			; <UNDEFINED> instruction: 0x00014cb0
   110fc:	mov	fp, #0
   11100:	mov	lr, #0
   11104:	pop	{r1}		; (ldr r1, [sp], #4)
   11108:	mov	r2, sp
   1110c:	push	{r2}		; (str r2, [sp, #-4]!)
   11110:	push	{r0}		; (str r0, [sp, #-4]!)
   11114:	ldr	ip, [pc, #16]	; 1112c <abort@plt+0x33c>
   11118:	push	{ip}		; (str ip, [sp, #-4]!)
   1111c:	ldr	r0, [pc, #12]	; 11130 <abort@plt+0x340>
   11120:	ldr	r3, [pc, #12]	; 11134 <abort@plt+0x344>
   11124:	bl	10ce8 <__libc_start_main@plt>
   11128:	bl	10df0 <abort@plt>
   1112c:	andeq	r4, r1, r8, lsl #18
   11130:	andeq	r0, r1, r0, lsl #28
   11134:	andeq	r4, r1, r8, lsr #17
   11138:	ldr	r3, [pc, #20]	; 11154 <abort@plt+0x364>
   1113c:	ldr	r2, [pc, #20]	; 11158 <abort@plt+0x368>
   11140:	add	r3, pc, r3
   11144:	ldr	r2, [r3, r2]
   11148:	cmp	r2, #0
   1114c:	bxeq	lr
   11150:	b	10d00 <__gmon_start__@plt>
   11154:			; <UNDEFINED> instruction: 0x00014eb8
   11158:	andeq	r0, r0, r4, asr #1
   1115c:	ldr	r0, [pc, #24]	; 1117c <abort@plt+0x38c>
   11160:	ldr	r3, [pc, #24]	; 11180 <abort@plt+0x390>
   11164:	cmp	r3, r0
   11168:	bxeq	lr
   1116c:	ldr	r3, [pc, #16]	; 11184 <abort@plt+0x394>
   11170:	cmp	r3, #0
   11174:	bxeq	lr
   11178:	bx	r3
   1117c:	andeq	r6, r2, r8, lsl r1
   11180:	andeq	r6, r2, r8, lsl r1
   11184:	andeq	r0, r0, r0
   11188:	ldr	r0, [pc, #36]	; 111b4 <abort@plt+0x3c4>
   1118c:	ldr	r1, [pc, #36]	; 111b8 <abort@plt+0x3c8>
   11190:	sub	r1, r1, r0
   11194:	asr	r1, r1, #2
   11198:	add	r1, r1, r1, lsr #31
   1119c:	asrs	r1, r1, #1
   111a0:	bxeq	lr
   111a4:	ldr	r3, [pc, #16]	; 111bc <abort@plt+0x3cc>
   111a8:	cmp	r3, #0
   111ac:	bxeq	lr
   111b0:	bx	r3
   111b4:	andeq	r6, r2, r8, lsl r1
   111b8:	andeq	r6, r2, r8, lsl r1
   111bc:	andeq	r0, r0, r0
   111c0:	push	{r4, lr}
   111c4:	ldr	r4, [pc, #24]	; 111e4 <abort@plt+0x3f4>
   111c8:	ldrb	r3, [r4]
   111cc:	cmp	r3, #0
   111d0:	popne	{r4, pc}
   111d4:	bl	1115c <abort@plt+0x36c>
   111d8:	mov	r3, #1
   111dc:	strb	r3, [r4]
   111e0:	pop	{r4, pc}
   111e4:	andeq	r6, r2, r4, lsr r1
   111e8:	b	11188 <abort@plt+0x398>
   111ec:	ldr	r3, [pc, #628]	; 11468 <abort@plt+0x678>
   111f0:	push	{r7, lr}
   111f4:	sub	sp, sp, #64	; 0x40
   111f8:	ldr	r3, [r3]
   111fc:	subs	r6, r0, #0
   11200:	str	r3, [sp, #60]	; 0x3c
   11204:	beq	11240 <abort@plt+0x450>
   11208:	ldr	r3, [pc, #604]	; 1146c <abort@plt+0x67c>
   1120c:	mov	r2, #5
   11210:	ldr	r1, [pc, #600]	; 11470 <abort@plt+0x680>
   11214:	mov	r0, #0
   11218:	ldr	r4, [r3]
   1121c:	bl	10c58 <dcgettext@plt>
   11220:	ldr	r3, [pc, #588]	; 11474 <abort@plt+0x684>
   11224:	mov	r1, #1
   11228:	ldr	r3, [r3]
   1122c:	mov	r2, r0
   11230:	mov	r0, r4
   11234:	bl	10d78 <__fprintf_chk@plt>
   11238:	mov	r0, r6
   1123c:	bl	10d24 <exit@plt>
   11240:	mov	r2, #5
   11244:	ldr	r1, [pc, #556]	; 11478 <abort@plt+0x688>
   11248:	bl	10c58 <dcgettext@plt>
   1124c:	ldr	r3, [pc, #544]	; 11474 <abort@plt+0x684>
   11250:	ldr	r4, [pc, #548]	; 1147c <abort@plt+0x68c>
   11254:	ldr	r3, [r3]
   11258:	mov	r2, r3
   1125c:	mov	r1, r0
   11260:	mov	r0, #1
   11264:	bl	10d60 <__printf_chk@plt>
   11268:	mov	r2, #5
   1126c:	ldr	r1, [pc, #524]	; 11480 <abort@plt+0x690>
   11270:	mov	r0, r6
   11274:	bl	10c58 <dcgettext@plt>
   11278:	ldr	r1, [r4]
   1127c:	bl	10be0 <fputs_unlocked@plt>
   11280:	mov	r2, #5
   11284:	ldr	r1, [pc, #504]	; 11484 <abort@plt+0x694>
   11288:	mov	r0, r6
   1128c:	bl	10c58 <dcgettext@plt>
   11290:	ldr	r1, [r4]
   11294:	bl	10be0 <fputs_unlocked@plt>
   11298:	ldr	lr, [pc, #488]	; 11488 <abort@plt+0x698>
   1129c:	add	ip, sp, #4
   112a0:	ldm	lr!, {r0, r1, r2, r3}
   112a4:	stmia	ip!, {r0, r1, r2, r3}
   112a8:	ldm	lr!, {r0, r1, r2, r3}
   112ac:	ldr	r5, [sp, #4]
   112b0:	stmia	ip!, {r0, r1, r2, r3}
   112b4:	cmp	r5, #0
   112b8:	ldm	lr!, {r0, r1, r2, r3}
   112bc:	addeq	r4, sp, #4
   112c0:	stmia	ip!, {r0, r1, r2, r3}
   112c4:	ldm	lr, {r0, r1}
   112c8:	stm	ip, {r0, r1}
   112cc:	beq	112fc <abort@plt+0x50c>
   112d0:	ldr	r7, [pc, #436]	; 1148c <abort@plt+0x69c>
   112d4:	add	r4, sp, #4
   112d8:	b	112e8 <abort@plt+0x4f8>
   112dc:	ldr	r5, [r4, #8]!
   112e0:	cmp	r5, #0
   112e4:	beq	112fc <abort@plt+0x50c>
   112e8:	mov	r1, r5
   112ec:	mov	r0, r7
   112f0:	bl	10bf8 <strcmp@plt>
   112f4:	cmp	r0, #0
   112f8:	bne	112dc <abort@plt+0x4ec>
   112fc:	ldr	r4, [r4, #4]
   11300:	mov	r2, #5
   11304:	cmp	r4, #0
   11308:	ldr	r1, [pc, #384]	; 11490 <abort@plt+0x6a0>
   1130c:	beq	113b4 <abort@plt+0x5c4>
   11310:	mov	r0, #0
   11314:	bl	10c58 <dcgettext@plt>
   11318:	ldr	r3, [pc, #372]	; 11494 <abort@plt+0x6a4>
   1131c:	ldr	r2, [pc, #372]	; 11498 <abort@plt+0x6a8>
   11320:	mov	r1, r0
   11324:	mov	r0, #1
   11328:	bl	10d60 <__printf_chk@plt>
   1132c:	mov	r1, #0
   11330:	mov	r0, #5
   11334:	bl	10da8 <setlocale@plt>
   11338:	cmp	r0, #0
   1133c:	ldreq	r5, [pc, #328]	; 1148c <abort@plt+0x69c>
   11340:	beq	1135c <abort@plt+0x56c>
   11344:	mov	r2, #3
   11348:	ldr	r1, [pc, #332]	; 1149c <abort@plt+0x6ac>
   1134c:	bl	10de4 <strncmp@plt>
   11350:	ldr	r5, [pc, #308]	; 1148c <abort@plt+0x69c>
   11354:	cmp	r0, #0
   11358:	bne	11444 <abort@plt+0x654>
   1135c:	mov	r2, #5
   11360:	ldr	r1, [pc, #312]	; 114a0 <abort@plt+0x6b0>
   11364:	mov	r0, #0
   11368:	bl	10c58 <dcgettext@plt>
   1136c:	ldr	r3, [pc, #280]	; 1148c <abort@plt+0x69c>
   11370:	ldr	r2, [pc, #284]	; 11494 <abort@plt+0x6a4>
   11374:	mov	r1, r0
   11378:	mov	r0, #1
   1137c:	bl	10d60 <__printf_chk@plt>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #280]	; 114a4 <abort@plt+0x6b4>
   11388:	mov	r0, #0
   1138c:	bl	10c58 <dcgettext@plt>
   11390:	ldr	r2, [pc, #272]	; 114a8 <abort@plt+0x6b8>
   11394:	cmp	r4, r5
   11398:	ldr	r3, [pc, #268]	; 114ac <abort@plt+0x6bc>
   1139c:	movne	r3, r2
   113a0:	mov	r1, r0
   113a4:	mov	r2, r4
   113a8:	mov	r0, #1
   113ac:	bl	10d60 <__printf_chk@plt>
   113b0:	b	11238 <abort@plt+0x448>
   113b4:	mov	r0, r4
   113b8:	bl	10c58 <dcgettext@plt>
   113bc:	ldr	r3, [pc, #208]	; 11494 <abort@plt+0x6a4>
   113c0:	ldr	r2, [pc, #208]	; 11498 <abort@plt+0x6a8>
   113c4:	mov	r1, r0
   113c8:	mov	r0, #1
   113cc:	bl	10d60 <__printf_chk@plt>
   113d0:	mov	r1, r4
   113d4:	mov	r0, #5
   113d8:	bl	10da8 <setlocale@plt>
   113dc:	cmp	r0, #0
   113e0:	beq	113f8 <abort@plt+0x608>
   113e4:	mov	r2, #3
   113e8:	ldr	r1, [pc, #172]	; 1149c <abort@plt+0x6ac>
   113ec:	bl	10de4 <strncmp@plt>
   113f0:	cmp	r0, #0
   113f4:	bne	1143c <abort@plt+0x64c>
   113f8:	mov	r2, #5
   113fc:	ldr	r1, [pc, #156]	; 114a0 <abort@plt+0x6b0>
   11400:	mov	r0, #0
   11404:	bl	10c58 <dcgettext@plt>
   11408:	ldr	r3, [pc, #124]	; 1148c <abort@plt+0x69c>
   1140c:	ldr	r2, [pc, #128]	; 11494 <abort@plt+0x6a4>
   11410:	mov	r4, r3
   11414:	mov	r1, r0
   11418:	mov	r0, #1
   1141c:	bl	10d60 <__printf_chk@plt>
   11420:	ldr	r1, [pc, #124]	; 114a4 <abort@plt+0x6b4>
   11424:	mov	r2, #5
   11428:	mov	r0, #0
   1142c:	bl	10c58 <dcgettext@plt>
   11430:	ldr	r3, [pc, #116]	; 114ac <abort@plt+0x6bc>
   11434:	mov	r1, r0
   11438:	b	113a4 <abort@plt+0x5b4>
   1143c:	ldr	r5, [pc, #72]	; 1148c <abort@plt+0x69c>
   11440:	mov	r4, r5
   11444:	mov	r2, #5
   11448:	ldr	r1, [pc, #96]	; 114b0 <abort@plt+0x6c0>
   1144c:	mov	r0, #0
   11450:	bl	10c58 <dcgettext@plt>
   11454:	ldr	r2, [pc, #48]	; 1148c <abort@plt+0x69c>
   11458:	mov	r1, r0
   1145c:	mov	r0, #1
   11460:	bl	10d60 <__printf_chk@plt>
   11464:	b	1135c <abort@plt+0x56c>
   11468:	andeq	r5, r2, r8, lsl #30
   1146c:	andeq	r6, r2, r8, lsr #2
   11470:	andeq	r4, r1, r0, lsl #19
   11474:	andeq	r6, r2, r4, asr #2
   11478:	andeq	r4, r1, r8, lsr #19
   1147c:	andeq	r6, r2, ip, lsr #2
   11480:	andeq	r4, r1, r8, lsr #22
   11484:	andeq	r4, r1, r8, asr fp
   11488:	andeq	r4, r1, r0, lsr r9
   1148c:	andeq	r4, r1, r8, ror r9
   11490:	muleq	r1, r0, fp
   11494:	andeq	r4, r1, r8, lsr #23
   11498:	ldrdeq	r4, [r1], -r0
   1149c:	andeq	r4, r1, r0, ror #23
   114a0:	andeq	r4, r1, ip, lsr #24
   114a4:	andeq	r4, r1, ip, asr #24
   114a8:	andeq	r5, r1, r8, asr #3
   114ac:	andeq	r4, r1, r0, lsl #26
   114b0:	andeq	r4, r1, r4, ror #23
   114b4:	andeq	r0, r0, r0
   114b8:	push	{r4, r5, r6, lr}
   114bc:	mov	r6, r0
   114c0:	ldr	r4, [pc, #96]	; 11528 <abort@plt+0x738>
   114c4:	mov	r5, r1
   114c8:	ldr	r2, [r4]
   114cc:	cmp	r2, #0
   114d0:	beq	11504 <abort@plt+0x714>
   114d4:	ldr	r2, [r4]
   114d8:	cmp	r2, #0
   114dc:	beq	114f0 <abort@plt+0x700>
   114e0:	mov	r1, r5
   114e4:	mov	r0, r6
   114e8:	pop	{r4, r5, r6, lr}
   114ec:	b	10d9c <strtod_l@plt>
   114f0:	cmp	r5, #0
   114f4:	beq	11518 <abort@plt+0x728>
   114f8:	str	r6, [r5]
   114fc:	vldr	d0, [pc, #28]	; 11520 <abort@plt+0x730>
   11500:	pop	{r4, r5, r6, pc}
   11504:	ldr	r1, [pc, #32]	; 1152c <abort@plt+0x73c>
   11508:	ldr	r0, [pc, #32]	; 11530 <abort@plt+0x740>
   1150c:	bl	10dcc <newlocale@plt>
   11510:	str	r0, [r4]
   11514:	b	114d4 <abort@plt+0x6e4>
   11518:	vldr	d0, [pc]	; 11520 <abort@plt+0x730>
   1151c:	pop	{r4, r5, r6, pc}
	...
   11528:	andeq	r6, r2, r8, lsr r1
   1152c:	andeq	r4, r1, ip, ror #26
   11530:			; <UNDEFINED> instruction: 0x00001fbf
   11534:	ldr	r3, [pc, #4]	; 11540 <abort@plt+0x750>
   11538:	str	r0, [r3]
   1153c:	bx	lr
   11540:	andeq	r6, r2, ip, lsr r1
   11544:	ldr	r3, [pc, #4]	; 11550 <abort@plt+0x760>
   11548:	strb	r0, [r3, #4]
   1154c:	bx	lr
   11550:	andeq	r6, r2, ip, lsr r1
   11554:	ldr	r3, [pc, #180]	; 11610 <abort@plt+0x820>
   11558:	push	{r4, r5, r6, lr}
   1155c:	sub	sp, sp, #8
   11560:	ldr	r0, [r3]
   11564:	bl	1432c <abort@plt+0x353c>
   11568:	cmp	r0, #0
   1156c:	beq	11594 <abort@plt+0x7a4>
   11570:	bl	10d3c <__errno_location@plt>
   11574:	ldr	r5, [pc, #152]	; 11614 <abort@plt+0x824>
   11578:	ldrb	r3, [r5, #4]
   1157c:	cmp	r3, #0
   11580:	mov	r4, r0
   11584:	beq	115b0 <abort@plt+0x7c0>
   11588:	ldr	r3, [r0]
   1158c:	cmp	r3, #32
   11590:	bne	115b0 <abort@plt+0x7c0>
   11594:	ldr	r3, [pc, #124]	; 11618 <abort@plt+0x828>
   11598:	ldr	r0, [r3]
   1159c:	bl	1432c <abort@plt+0x353c>
   115a0:	cmp	r0, #0
   115a4:	bne	115f0 <abort@plt+0x800>
   115a8:	add	sp, sp, #8
   115ac:	pop	{r4, r5, r6, pc}
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #96]	; 1161c <abort@plt+0x82c>
   115b8:	mov	r0, #0
   115bc:	bl	10c58 <dcgettext@plt>
   115c0:	mov	r6, r0
   115c4:	ldr	r0, [r5]
   115c8:	cmp	r0, #0
   115cc:	beq	115fc <abort@plt+0x80c>
   115d0:	ldr	r4, [r4]
   115d4:	bl	13790 <abort@plt+0x29a0>
   115d8:	mov	r1, r4
   115dc:	str	r6, [sp]
   115e0:	ldr	r2, [pc, #56]	; 11620 <abort@plt+0x830>
   115e4:	mov	r3, r0
   115e8:	mov	r0, #0
   115ec:	bl	10cd0 <error@plt>
   115f0:	ldr	r3, [pc, #44]	; 11624 <abort@plt+0x834>
   115f4:	ldr	r0, [r3]
   115f8:	bl	10c28 <_exit@plt>
   115fc:	mov	r3, r6
   11600:	ldr	r1, [r4]
   11604:	ldr	r2, [pc, #28]	; 11628 <abort@plt+0x838>
   11608:	bl	10cd0 <error@plt>
   1160c:	b	115f0 <abort@plt+0x800>
   11610:	andeq	r6, r2, ip, lsr #2
   11614:	andeq	r6, r2, ip, lsr r1
   11618:	andeq	r6, r2, r8, lsr #2
   1161c:	andeq	r4, r1, r0, ror sp
   11620:	andeq	r4, r1, ip, ror sp
   11624:	ldrdeq	r6, [r2], -r4
   11628:	andeq	r4, r1, r0, lsl #27
   1162c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11630:	sub	sp, sp, #20
   11634:	ldr	r5, [pc, #184]	; 116f4 <abort@plt+0x904>
   11638:	ldr	r4, [pc, #184]	; 116f8 <abort@plt+0x908>
   1163c:	mov	r6, #0
   11640:	ldr	ip, [r5]
   11644:	cmp	r0, #2
   11648:	ldr	r7, [r4]
   1164c:	str	ip, [sp, #12]
   11650:	ldr	sl, [sp, #56]	; 0x38
   11654:	str	r6, [r4]
   11658:	ldr	fp, [sp, #60]	; 0x3c
   1165c:	beq	11688 <abort@plt+0x898>
   11660:	ldr	r0, [sp, #12]
   11664:	ldr	r3, [pc, #144]	; 116fc <abort@plt+0x90c>
   11668:	ldr	r1, [r5]
   1166c:	mov	r2, #0
   11670:	cmp	r0, r1
   11674:	str	r7, [r4]
   11678:	str	r2, [r3]
   1167c:	bne	116f0 <abort@plt+0x900>
   11680:	add	sp, sp, #20
   11684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11688:	mov	r8, r2
   1168c:	mov	r9, r3
   11690:	str	r6, [sp]
   11694:	ldr	r3, [pc, #100]	; 11700 <abort@plt+0x910>
   11698:	ldr	r2, [pc, #100]	; 11704 <abort@plt+0x914>
   1169c:	bl	10d0c <getopt_long@plt>
   116a0:	cmn	r0, #1
   116a4:	beq	11660 <abort@plt+0x870>
   116a8:	cmp	r0, #104	; 0x68
   116ac:	beq	116e4 <abort@plt+0x8f4>
   116b0:	cmp	r0, #118	; 0x76
   116b4:	bne	11660 <abort@plt+0x870>
   116b8:	ldr	r0, [pc, #72]	; 11708 <abort@plt+0x918>
   116bc:	add	ip, sp, #64	; 0x40
   116c0:	mov	r3, sl
   116c4:	ldr	r0, [r0]
   116c8:	mov	r2, r9
   116cc:	mov	r1, r8
   116d0:	str	ip, [sp]
   116d4:	str	ip, [sp, #8]
   116d8:	bl	13d70 <abort@plt+0x2f80>
   116dc:	mov	r0, r6
   116e0:	bl	10d24 <exit@plt>
   116e4:	mov	r0, r6
   116e8:	blx	fp
   116ec:	b	11660 <abort@plt+0x870>
   116f0:	bl	10c64 <__stack_chk_fail@plt>
   116f4:	andeq	r5, r2, r8, lsl #30
   116f8:	andeq	r6, r2, r0, lsr r1
   116fc:	andeq	r6, r2, r0, lsr #2
   11700:	andeq	r4, r1, r4, lsl #27
   11704:			; <UNDEFINED> instruction: 0x00014db4
   11708:	andeq	r6, r2, ip, lsr #2
   1170c:	push	{r4, r5, r6, lr}
   11710:	subs	r4, r0, #0
   11714:	beq	11788 <abort@plt+0x998>
   11718:	mov	r1, #47	; 0x2f
   1171c:	bl	10db4 <strrchr@plt>
   11720:	subs	r5, r0, #0
   11724:	beq	11774 <abort@plt+0x984>
   11728:	add	r6, r5, #1
   1172c:	sub	r3, r6, r4
   11730:	cmp	r3, #6
   11734:	ble	11774 <abort@plt+0x984>
   11738:	mov	r2, #7
   1173c:	ldr	r1, [pc, #96]	; 117a4 <abort@plt+0x9b4>
   11740:	sub	r0, r5, #6
   11744:	bl	10de4 <strncmp@plt>
   11748:	cmp	r0, #0
   1174c:	bne	11774 <abort@plt+0x984>
   11750:	mov	r2, #3
   11754:	ldr	r1, [pc, #76]	; 117a8 <abort@plt+0x9b8>
   11758:	mov	r0, r6
   1175c:	bl	10de4 <strncmp@plt>
   11760:	cmp	r0, #0
   11764:	movne	r4, r6
   11768:	ldreq	r3, [pc, #60]	; 117ac <abort@plt+0x9bc>
   1176c:	addeq	r4, r5, #4
   11770:	streq	r4, [r3]
   11774:	ldr	r2, [pc, #52]	; 117b0 <abort@plt+0x9c0>
   11778:	ldr	r3, [pc, #52]	; 117b4 <abort@plt+0x9c4>
   1177c:	str	r4, [r2]
   11780:	str	r4, [r3]
   11784:	pop	{r4, r5, r6, pc}
   11788:	ldr	r3, [pc, #40]	; 117b8 <abort@plt+0x9c8>
   1178c:	mov	r2, #55	; 0x37
   11790:	mov	r1, #1
   11794:	ldr	r3, [r3]
   11798:	ldr	r0, [pc, #28]	; 117bc <abort@plt+0x9cc>
   1179c:	bl	10c94 <fwrite@plt>
   117a0:	bl	10df0 <abort@plt>
   117a4:	andeq	r4, r1, r0, lsl #28
   117a8:	andeq	r4, r1, r8, lsl #28
   117ac:	andeq	r6, r2, r8, lsl r1
   117b0:	andeq	r6, r2, r4, asr #2
   117b4:	andeq	r6, r2, ip, lsl r1
   117b8:	andeq	r6, r2, r8, lsr #2
   117bc:	andeq	r4, r1, r8, asr #27
   117c0:	push	{r4, lr}
   117c4:	mov	r2, #48	; 0x30
   117c8:	mov	r4, r1
   117cc:	mov	r1, #0
   117d0:	bl	10d54 <memset@plt>
   117d4:	cmp	r4, #10
   117d8:	beq	117e4 <abort@plt+0x9f4>
   117dc:	str	r4, [r0]
   117e0:	pop	{r4, pc}
   117e4:	bl	10df0 <abort@plt>
   117e8:	push	{r4, r5, r6, lr}
   117ec:	mov	r2, #5
   117f0:	mov	r5, r0
   117f4:	mov	r6, r1
   117f8:	mov	r1, r0
   117fc:	mov	r0, #0
   11800:	bl	10c58 <dcgettext@plt>
   11804:	cmp	r5, r0
   11808:	mov	r4, r0
   1180c:	beq	11818 <abort@plt+0xa28>
   11810:	mov	r0, r4
   11814:	pop	{r4, r5, r6, pc}
   11818:	bl	144b8 <abort@plt+0x36c8>
   1181c:	ldrb	r3, [r0]
   11820:	bic	r3, r3, #32
   11824:	cmp	r3, #85	; 0x55
   11828:	bne	11888 <abort@plt+0xa98>
   1182c:	ldrb	r3, [r0, #1]
   11830:	bic	r3, r3, #32
   11834:	cmp	r3, #84	; 0x54
   11838:	bne	11900 <abort@plt+0xb10>
   1183c:	ldrb	r3, [r0, #2]
   11840:	bic	r3, r3, #32
   11844:	cmp	r3, #70	; 0x46
   11848:	bne	11900 <abort@plt+0xb10>
   1184c:	ldrb	r3, [r0, #3]
   11850:	cmp	r3, #45	; 0x2d
   11854:	bne	11900 <abort@plt+0xb10>
   11858:	ldrb	r3, [r0, #4]
   1185c:	cmp	r3, #56	; 0x38
   11860:	bne	11900 <abort@plt+0xb10>
   11864:	ldrb	r3, [r0, #5]
   11868:	cmp	r3, #0
   1186c:	bne	11900 <abort@plt+0xb10>
   11870:	ldrb	r2, [r4]
   11874:	ldr	r3, [pc, #156]	; 11918 <abort@plt+0xb28>
   11878:	ldr	r4, [pc, #156]	; 1191c <abort@plt+0xb2c>
   1187c:	cmp	r2, #96	; 0x60
   11880:	movne	r4, r3
   11884:	b	11810 <abort@plt+0xa20>
   11888:	cmp	r3, #71	; 0x47
   1188c:	bne	11900 <abort@plt+0xb10>
   11890:	ldrb	r3, [r0, #1]
   11894:	bic	r3, r3, #32
   11898:	cmp	r3, #66	; 0x42
   1189c:	bne	11900 <abort@plt+0xb10>
   118a0:	ldrb	r3, [r0, #2]
   118a4:	cmp	r3, #49	; 0x31
   118a8:	bne	11900 <abort@plt+0xb10>
   118ac:	ldrb	r3, [r0, #3]
   118b0:	cmp	r3, #56	; 0x38
   118b4:	bne	11900 <abort@plt+0xb10>
   118b8:	ldrb	r3, [r0, #4]
   118bc:	cmp	r3, #48	; 0x30
   118c0:	bne	11900 <abort@plt+0xb10>
   118c4:	ldrb	r3, [r0, #5]
   118c8:	cmp	r3, #51	; 0x33
   118cc:	bne	11900 <abort@plt+0xb10>
   118d0:	ldrb	r3, [r0, #6]
   118d4:	cmp	r3, #48	; 0x30
   118d8:	bne	11900 <abort@plt+0xb10>
   118dc:	ldrb	r3, [r0, #7]
   118e0:	cmp	r3, #0
   118e4:	bne	11900 <abort@plt+0xb10>
   118e8:	ldrb	r2, [r4]
   118ec:	ldr	r3, [pc, #44]	; 11920 <abort@plt+0xb30>
   118f0:	ldr	r4, [pc, #44]	; 11924 <abort@plt+0xb34>
   118f4:	cmp	r2, #96	; 0x60
   118f8:	movne	r4, r3
   118fc:	b	11810 <abort@plt+0xa20>
   11900:	ldr	r3, [pc, #32]	; 11928 <abort@plt+0xb38>
   11904:	ldr	r4, [pc, #32]	; 1192c <abort@plt+0xb3c>
   11908:	cmp	r6, #9
   1190c:	movne	r4, r3
   11910:	mov	r0, r4
   11914:	pop	{r4, r5, r6, pc}
   11918:	andeq	r4, r1, r4, ror #28
   1191c:	andeq	r4, r1, r0, ror lr
   11920:	andeq	r4, r1, r8, ror #28
   11924:	andeq	r4, r1, ip, ror #28
   11928:	andeq	r4, r1, r4, ror lr
   1192c:	andeq	r4, r1, r0, ror #28
   11930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11934:	sub	sp, sp, #124	; 0x7c
   11938:	ldr	ip, [pc, #3576]	; 12738 <abort@plt+0x1948>
   1193c:	str	r3, [sp, #24]
   11940:	ldr	r3, [sp, #168]	; 0xa8
   11944:	ldr	ip, [ip]
   11948:	str	r3, [sp, #56]	; 0x38
   1194c:	ldr	r3, [sp, #172]	; 0xac
   11950:	ldr	r8, [sp, #160]	; 0xa0
   11954:	str	r3, [sp, #80]	; 0x50
   11958:	ldr	r3, [sp, #176]	; 0xb0
   1195c:	mov	fp, r0
   11960:	str	r3, [sp, #76]	; 0x4c
   11964:	mov	sl, r1
   11968:	str	r2, [sp, #36]	; 0x24
   1196c:	str	ip, [sp, #116]	; 0x74
   11970:	bl	10cac <__ctype_get_mb_cur_max@plt>
   11974:	ldr	r3, [sp, #164]	; 0xa4
   11978:	ands	r4, r3, #2
   1197c:	movne	r3, #1
   11980:	moveq	r3, #0
   11984:	str	r3, [sp, #32]
   11988:	str	r0, [sp, #64]	; 0x40
   1198c:	cmp	r8, #10
   11990:	ldrls	pc, [pc, r8, lsl #2]
   11994:	b	13144 <abort@plt+0x2354>
   11998:	andeq	r1, r1, ip, lsl #27
   1199c:	andeq	r1, r1, r4, lsr #28
   119a0:	andeq	r2, r1, r4, lsr #8
   119a4:	andeq	r1, r1, r4, asr #28
   119a8:	strdeq	r1, [r1], -r8
   119ac:	andeq	r1, r1, r0, asr #26
   119b0:			; <UNDEFINED> instruction: 0x00011dbc
   119b4:	strdeq	r1, [r1], -r4
   119b8:	andeq	r1, r1, r4, asr #19
   119bc:	andeq	r1, r1, r4, asr #19
   119c0:	andeq	r1, r1, r4, asr #19
   119c4:	cmp	r8, #10
   119c8:	beq	119ec <abort@plt+0xbfc>
   119cc:	mov	r1, r8
   119d0:	ldr	r0, [pc, #3428]	; 1273c <abort@plt+0x194c>
   119d4:	bl	117e8 <abort@plt+0x9f8>
   119d8:	mov	r1, r8
   119dc:	str	r0, [sp, #80]	; 0x50
   119e0:	ldr	r0, [pc, #3420]	; 12744 <abort@plt+0x1954>
   119e4:	bl	117e8 <abort@plt+0x9f8>
   119e8:	str	r0, [sp, #76]	; 0x4c
   119ec:	cmp	r4, #0
   119f0:	movne	r4, #0
   119f4:	beq	12e04 <abort@plt+0x2014>
   119f8:	ldr	r7, [sp, #76]	; 0x4c
   119fc:	mov	r5, #0
   11a00:	mov	r6, #1
   11a04:	mov	r0, r7
   11a08:	str	r6, [sp, #40]	; 0x28
   11a0c:	str	r5, [sp, #68]	; 0x44
   11a10:	bl	10d30 <strlen@plt>
   11a14:	str	r6, [sp, #28]
   11a18:	str	r5, [sp, #44]	; 0x2c
   11a1c:	str	r5, [sp, #72]	; 0x48
   11a20:	str	r7, [sp, #60]	; 0x3c
   11a24:	str	r0, [sp, #52]	; 0x34
   11a28:	str	r8, [sp, #160]	; 0xa0
   11a2c:	mov	r8, fp
   11a30:	ldr	fp, [sp, #160]	; 0xa0
   11a34:	mov	r9, #0
   11a38:	ldr	r3, [sp, #24]
   11a3c:	cmn	r3, #1
   11a40:	beq	11fa8 <abort@plt+0x11b8>
   11a44:	ldr	r3, [sp, #24]
   11a48:	subs	r6, r3, r9
   11a4c:	movne	r6, #1
   11a50:	cmp	r6, #0
   11a54:	beq	11fc0 <abort@plt+0x11d0>
   11a58:	ldr	r7, [sp, #28]
   11a5c:	ldr	r0, [sp, #36]	; 0x24
   11a60:	cmp	fp, #2
   11a64:	moveq	r7, #0
   11a68:	andne	r7, r7, #1
   11a6c:	add	r3, r0, r9
   11a70:	cmp	r7, #0
   11a74:	str	r3, [sp, #48]	; 0x30
   11a78:	beq	12464 <abort@plt+0x1674>
   11a7c:	ldr	r2, [sp, #52]	; 0x34
   11a80:	cmp	r2, #0
   11a84:	beq	12748 <abort@plt+0x1958>
   11a88:	ldr	r1, [sp, #24]
   11a8c:	cmp	r2, #1
   11a90:	mov	r3, r2
   11a94:	movls	r3, #0
   11a98:	movhi	r3, #1
   11a9c:	cmn	r1, #1
   11aa0:	movne	r3, #0
   11aa4:	cmp	r3, #0
   11aa8:	add	r5, r9, r2
   11aac:	beq	11ab8 <abort@plt+0xcc8>
   11ab0:	bl	10d30 <strlen@plt>
   11ab4:	str	r0, [sp, #24]
   11ab8:	ldr	r3, [sp, #24]
   11abc:	cmp	r5, r3
   11ac0:	bhi	12748 <abort@plt+0x1958>
   11ac4:	ldr	r2, [sp, #52]	; 0x34
   11ac8:	ldr	r1, [sp, #60]	; 0x3c
   11acc:	ldr	r0, [sp, #48]	; 0x30
   11ad0:	bl	10c4c <memcmp@plt>
   11ad4:	cmp	r0, #0
   11ad8:	bne	12748 <abort@plt+0x1958>
   11adc:	ldr	r3, [sp, #32]
   11ae0:	cmp	r3, #0
   11ae4:	bne	13004 <abort@plt+0x2214>
   11ae8:	ldr	r3, [sp, #48]	; 0x30
   11aec:	ldrb	r5, [r3]
   11af0:	cmp	r5, #126	; 0x7e
   11af4:	ldrls	pc, [pc, r5, lsl #2]
   11af8:	b	123c8 <abort@plt+0x15d8>
   11afc:			; <UNDEFINED> instruction: 0x000122b4
   11b00:	andeq	r2, r1, r8, asr #7
   11b04:	andeq	r2, r1, r8, asr #7
   11b08:	andeq	r2, r1, r8, asr #7
   11b0c:	andeq	r2, r1, r8, asr #7
   11b10:	andeq	r2, r1, r8, asr #7
   11b14:	andeq	r2, r1, r8, asr #7
   11b18:	andeq	r2, r1, r0, lsl #7
   11b1c:	andeq	r2, r1, r0, ror r3
   11b20:	andeq	r2, r1, r0, ror r2
   11b24:	andeq	r2, r1, r8, lsr r2
   11b28:	muleq	r1, r0, r2
   11b2c:	andeq	r2, r1, r8, ror r2
   11b30:	andeq	r2, r1, r8, lsr #3
   11b34:	andeq	r2, r1, r8, asr #7
   11b38:	andeq	r2, r1, r8, asr #7
   11b3c:	andeq	r2, r1, r8, asr #7
   11b40:	andeq	r2, r1, r8, asr #7
   11b44:	andeq	r2, r1, r8, asr #7
   11b48:	andeq	r2, r1, r8, asr #7
   11b4c:	andeq	r2, r1, r8, asr #7
   11b50:	andeq	r2, r1, r8, asr #7
   11b54:	andeq	r2, r1, r8, asr #7
   11b58:	andeq	r2, r1, r8, asr #7
   11b5c:	andeq	r2, r1, r8, asr #7
   11b60:	andeq	r2, r1, r8, asr #7
   11b64:	andeq	r2, r1, r8, asr #7
   11b68:	andeq	r2, r1, r8, asr #7
   11b6c:	andeq	r2, r1, r8, asr #7
   11b70:	andeq	r2, r1, r8, asr #7
   11b74:	andeq	r2, r1, r8, asr #7
   11b78:	andeq	r2, r1, r8, asr #7
   11b7c:	andeq	r2, r1, r8, lsl #7
   11b80:	muleq	r1, ip, r2
   11b84:	muleq	r1, ip, r2
   11b88:	andeq	r2, r1, r0, lsr #7
   11b8c:	muleq	r1, ip, r2
   11b90:			; <UNDEFINED> instruction: 0x000123bc
   11b94:	muleq	r1, ip, r2
   11b98:	ldrdeq	r2, [r1], -ip
   11b9c:	muleq	r1, ip, r2
   11ba0:	muleq	r1, ip, r2
   11ba4:	muleq	r1, ip, r2
   11ba8:			; <UNDEFINED> instruction: 0x000123bc
   11bac:			; <UNDEFINED> instruction: 0x000123bc
   11bb0:			; <UNDEFINED> instruction: 0x000123bc
   11bb4:			; <UNDEFINED> instruction: 0x000123bc
   11bb8:			; <UNDEFINED> instruction: 0x000123bc
   11bbc:			; <UNDEFINED> instruction: 0x000123bc
   11bc0:			; <UNDEFINED> instruction: 0x000123bc
   11bc4:			; <UNDEFINED> instruction: 0x000123bc
   11bc8:			; <UNDEFINED> instruction: 0x000123bc
   11bcc:			; <UNDEFINED> instruction: 0x000123bc
   11bd0:			; <UNDEFINED> instruction: 0x000123bc
   11bd4:			; <UNDEFINED> instruction: 0x000123bc
   11bd8:			; <UNDEFINED> instruction: 0x000123bc
   11bdc:			; <UNDEFINED> instruction: 0x000123bc
   11be0:			; <UNDEFINED> instruction: 0x000123bc
   11be4:			; <UNDEFINED> instruction: 0x000123bc
   11be8:	muleq	r1, ip, r2
   11bec:	muleq	r1, ip, r2
   11bf0:	muleq	r1, ip, r2
   11bf4:	muleq	r1, ip, r2
   11bf8:	strheq	r2, [r1], -r0
   11bfc:	andeq	r2, r1, r8, asr #7
   11c00:			; <UNDEFINED> instruction: 0x000123bc
   11c04:			; <UNDEFINED> instruction: 0x000123bc
   11c08:			; <UNDEFINED> instruction: 0x000123bc
   11c0c:			; <UNDEFINED> instruction: 0x000123bc
   11c10:			; <UNDEFINED> instruction: 0x000123bc
   11c14:			; <UNDEFINED> instruction: 0x000123bc
   11c18:			; <UNDEFINED> instruction: 0x000123bc
   11c1c:			; <UNDEFINED> instruction: 0x000123bc
   11c20:			; <UNDEFINED> instruction: 0x000123bc
   11c24:			; <UNDEFINED> instruction: 0x000123bc
   11c28:			; <UNDEFINED> instruction: 0x000123bc
   11c2c:			; <UNDEFINED> instruction: 0x000123bc
   11c30:			; <UNDEFINED> instruction: 0x000123bc
   11c34:			; <UNDEFINED> instruction: 0x000123bc
   11c38:			; <UNDEFINED> instruction: 0x000123bc
   11c3c:			; <UNDEFINED> instruction: 0x000123bc
   11c40:			; <UNDEFINED> instruction: 0x000123bc
   11c44:			; <UNDEFINED> instruction: 0x000123bc
   11c48:			; <UNDEFINED> instruction: 0x000123bc
   11c4c:			; <UNDEFINED> instruction: 0x000123bc
   11c50:			; <UNDEFINED> instruction: 0x000123bc
   11c54:			; <UNDEFINED> instruction: 0x000123bc
   11c58:			; <UNDEFINED> instruction: 0x000123bc
   11c5c:			; <UNDEFINED> instruction: 0x000123bc
   11c60:			; <UNDEFINED> instruction: 0x000123bc
   11c64:			; <UNDEFINED> instruction: 0x000123bc
   11c68:	muleq	r1, ip, r2
   11c6c:	andeq	r2, r1, r8, rrx
   11c70:			; <UNDEFINED> instruction: 0x000123bc
   11c74:	muleq	r1, ip, r2
   11c78:			; <UNDEFINED> instruction: 0x000123bc
   11c7c:	muleq	r1, ip, r2
   11c80:			; <UNDEFINED> instruction: 0x000123bc
   11c84:			; <UNDEFINED> instruction: 0x000123bc
   11c88:			; <UNDEFINED> instruction: 0x000123bc
   11c8c:			; <UNDEFINED> instruction: 0x000123bc
   11c90:			; <UNDEFINED> instruction: 0x000123bc
   11c94:			; <UNDEFINED> instruction: 0x000123bc
   11c98:			; <UNDEFINED> instruction: 0x000123bc
   11c9c:			; <UNDEFINED> instruction: 0x000123bc
   11ca0:			; <UNDEFINED> instruction: 0x000123bc
   11ca4:			; <UNDEFINED> instruction: 0x000123bc
   11ca8:			; <UNDEFINED> instruction: 0x000123bc
   11cac:			; <UNDEFINED> instruction: 0x000123bc
   11cb0:			; <UNDEFINED> instruction: 0x000123bc
   11cb4:			; <UNDEFINED> instruction: 0x000123bc
   11cb8:			; <UNDEFINED> instruction: 0x000123bc
   11cbc:			; <UNDEFINED> instruction: 0x000123bc
   11cc0:			; <UNDEFINED> instruction: 0x000123bc
   11cc4:			; <UNDEFINED> instruction: 0x000123bc
   11cc8:			; <UNDEFINED> instruction: 0x000123bc
   11ccc:			; <UNDEFINED> instruction: 0x000123bc
   11cd0:			; <UNDEFINED> instruction: 0x000123bc
   11cd4:			; <UNDEFINED> instruction: 0x000123bc
   11cd8:			; <UNDEFINED> instruction: 0x000123bc
   11cdc:			; <UNDEFINED> instruction: 0x000123bc
   11ce0:			; <UNDEFINED> instruction: 0x000123bc
   11ce4:			; <UNDEFINED> instruction: 0x000123bc
   11ce8:	andeq	r1, r1, r0, lsl #29
   11cec:	muleq	r1, ip, r2
   11cf0:	andeq	r1, r1, r0, lsl #29
   11cf4:	andeq	r2, r1, r0, lsr #7
   11cf8:	cmp	r4, #0
   11cfc:	moveq	r3, #1
   11d00:	streq	r3, [sp, #28]
   11d04:	beq	12430 <abort@plt+0x1640>
   11d08:	mov	r3, #0
   11d0c:	mov	r4, r3
   11d10:	mov	r2, #1
   11d14:	str	r2, [sp, #40]	; 0x28
   11d18:	str	r3, [sp, #68]	; 0x44
   11d1c:	str	r2, [sp, #32]
   11d20:	str	r2, [sp, #52]	; 0x34
   11d24:	ldr	r3, [pc, #2584]	; 12744 <abort@plt+0x1954>
   11d28:	str	r4, [sp, #44]	; 0x2c
   11d2c:	str	r4, [sp, #72]	; 0x48
   11d30:	str	r4, [sp, #28]
   11d34:	str	r3, [sp, #60]	; 0x3c
   11d38:	mov	r8, #2
   11d3c:	b	11a28 <abort@plt+0xc38>
   11d40:	cmp	r4, #0
   11d44:	bne	12fd0 <abort@plt+0x21e0>
   11d48:	cmp	sl, #0
   11d4c:	beq	12d90 <abort@plt+0x1fa0>
   11d50:	mov	r3, #34	; 0x22
   11d54:	strb	r3, [fp]
   11d58:	ldr	r3, [pc, #2528]	; 12740 <abort@plt+0x1950>
   11d5c:	mov	r1, r4
   11d60:	mov	r2, #1
   11d64:	str	r4, [sp, #68]	; 0x44
   11d68:	str	r2, [sp, #40]	; 0x28
   11d6c:	mov	r4, r2
   11d70:	str	r1, [sp, #44]	; 0x2c
   11d74:	str	r1, [sp, #72]	; 0x48
   11d78:	str	r1, [sp, #32]
   11d7c:	str	r2, [sp, #28]
   11d80:	str	r2, [sp, #52]	; 0x34
   11d84:	str	r3, [sp, #60]	; 0x3c
   11d88:	b	11a28 <abort@plt+0xc38>
   11d8c:	mov	r3, #0
   11d90:	str	r3, [sp, #68]	; 0x44
   11d94:	str	r3, [sp, #44]	; 0x2c
   11d98:	str	r3, [sp, #32]
   11d9c:	str	r3, [sp, #28]
   11da0:	str	r3, [sp, #60]	; 0x3c
   11da4:	mov	r3, #1
   11da8:	str	r8, [sp, #72]	; 0x48
   11dac:	str	r8, [sp, #52]	; 0x34
   11db0:	mov	r4, r8
   11db4:	str	r3, [sp, #40]	; 0x28
   11db8:	b	11a28 <abort@plt+0xc38>
   11dbc:	mov	r3, #1
   11dc0:	str	r3, [sp, #40]	; 0x28
   11dc4:	str	r3, [sp, #32]
   11dc8:	str	r3, [sp, #28]
   11dcc:	str	r3, [sp, #52]	; 0x34
   11dd0:	ldr	r3, [pc, #2408]	; 12740 <abort@plt+0x1950>
   11dd4:	mov	r2, #0
   11dd8:	mov	r4, r2
   11ddc:	str	r2, [sp, #68]	; 0x44
   11de0:	str	r2, [sp, #44]	; 0x2c
   11de4:	str	r2, [sp, #72]	; 0x48
   11de8:	str	r3, [sp, #60]	; 0x3c
   11dec:	mov	r8, #5
   11df0:	b	11a28 <abort@plt+0xc38>
   11df4:	mov	r3, #0
   11df8:	mov	r2, #1
   11dfc:	str	r2, [sp, #40]	; 0x28
   11e00:	mov	r4, r3
   11e04:	str	r3, [sp, #68]	; 0x44
   11e08:	str	r2, [sp, #28]
   11e0c:	str	r3, [sp, #44]	; 0x2c
   11e10:	str	r3, [sp, #72]	; 0x48
   11e14:	str	r3, [sp, #32]
   11e18:	str	r3, [sp, #52]	; 0x34
   11e1c:	str	r3, [sp, #60]	; 0x3c
   11e20:	b	11a28 <abort@plt+0xc38>
   11e24:	mov	r2, #1
   11e28:	mov	r3, #0
   11e2c:	str	r2, [sp, #40]	; 0x28
   11e30:	mov	r4, r3
   11e34:	str	r3, [sp, #68]	; 0x44
   11e38:	str	r8, [sp, #52]	; 0x34
   11e3c:	str	r2, [sp, #32]
   11e40:	b	11d24 <abort@plt+0xf34>
   11e44:	mov	r3, #1
   11e48:	str	r3, [sp, #40]	; 0x28
   11e4c:	str	r3, [sp, #32]
   11e50:	str	r3, [sp, #28]
   11e54:	str	r3, [sp, #52]	; 0x34
   11e58:	ldr	r3, [pc, #2276]	; 12744 <abort@plt+0x1954>
   11e5c:	mov	r2, #0
   11e60:	mov	r4, r2
   11e64:	str	r2, [sp, #68]	; 0x44
   11e68:	str	r2, [sp, #44]	; 0x2c
   11e6c:	str	r2, [sp, #72]	; 0x48
   11e70:	str	r3, [sp, #60]	; 0x3c
   11e74:	mov	r8, #2
   11e78:	b	11a28 <abort@plt+0xc38>
   11e7c:	mov	r7, #0
   11e80:	ldr	r3, [sp, #24]
   11e84:	cmn	r3, #1
   11e88:	beq	129c4 <abort@plt+0x1bd4>
   11e8c:	ldr	r3, [sp, #24]
   11e90:	subs	r3, r3, #1
   11e94:	movne	r3, #1
   11e98:	cmp	r3, #0
   11e9c:	sub	r2, fp, #2
   11ea0:	clz	r2, r2
   11ea4:	lsr	r2, r2, #5
   11ea8:	bne	120a4 <abort@plt+0x12b4>
   11eac:	cmp	r9, #0
   11eb0:	bne	120a4 <abort@plt+0x12b4>
   11eb4:	ldr	r3, [sp, #32]
   11eb8:	tst	r3, r2
   11ebc:	bne	121c4 <abort@plt+0x13d4>
   11ec0:	ldr	r3, [sp, #28]
   11ec4:	eor	r3, r3, #1
   11ec8:	orr	r3, r2, r3
   11ecc:	ldr	r2, [sp, #32]
   11ed0:	eor	r3, r3, #1
   11ed4:	orrs	r3, r2, r3
   11ed8:	beq	11f08 <abort@plt+0x1118>
   11edc:	mov	r3, #0
   11ee0:	ldr	r1, [sp, #56]	; 0x38
   11ee4:	cmp	r1, #0
   11ee8:	beq	11f08 <abort@plt+0x1118>
   11eec:	lsr	r2, r5, #5
   11ef0:	and	r0, r5, #31
   11ef4:	uxtb	r2, r2
   11ef8:	ldr	r1, [r1, r2, lsl #2]
   11efc:	lsr	r2, r1, r0
   11f00:	tst	r2, #1
   11f04:	bne	11f10 <abort@plt+0x1120>
   11f08:	cmp	r7, #0
   11f0c:	beq	12160 <abort@plt+0x1370>
   11f10:	sub	r2, fp, #2
   11f14:	clz	r2, r2
   11f18:	lsr	r2, r2, #5
   11f1c:	ldr	r3, [sp, #32]
   11f20:	cmp	r3, #0
   11f24:	bne	12250 <abort@plt+0x1460>
   11f28:	ldr	r3, [sp, #44]	; 0x2c
   11f2c:	eor	r3, r3, #1
   11f30:	ands	r3, r2, r3
   11f34:	beq	11f6c <abort@plt+0x117c>
   11f38:	cmp	sl, r4
   11f3c:	movhi	r2, #39	; 0x27
   11f40:	strbhi	r2, [r8, r4]
   11f44:	add	r2, r4, #1
   11f48:	cmp	r2, sl
   11f4c:	movcc	r1, #36	; 0x24
   11f50:	strbcc	r1, [r8, r2]
   11f54:	add	r2, r4, #2
   11f58:	cmp	r2, sl
   11f5c:	add	r4, r4, #3
   11f60:	movcc	r1, #39	; 0x27
   11f64:	strbcc	r1, [r8, r2]
   11f68:	str	r3, [sp, #44]	; 0x2c
   11f6c:	cmp	r4, sl
   11f70:	movcc	r3, #92	; 0x5c
   11f74:	strbcc	r3, [r8, r4]
   11f78:	add	r9, r9, #1
   11f7c:	add	r4, r4, #1
   11f80:	cmp	r4, sl
   11f84:	ldr	r3, [sp, #40]	; 0x28
   11f88:	strbcc	r5, [r8, r4]
   11f8c:	cmp	r6, #0
   11f90:	moveq	r3, #0
   11f94:	str	r3, [sp, #40]	; 0x28
   11f98:	ldr	r3, [sp, #24]
   11f9c:	add	r4, r4, #1
   11fa0:	cmn	r3, #1
   11fa4:	bne	11a44 <abort@plt+0xc54>
   11fa8:	ldr	r3, [sp, #36]	; 0x24
   11fac:	ldrb	r6, [r3, r9]
   11fb0:	adds	r6, r6, #0
   11fb4:	movne	r6, #1
   11fb8:	cmp	r6, #0
   11fbc:	bne	11a58 <abort@plt+0xc68>
   11fc0:	str	fp, [sp, #160]	; 0xa0
   11fc4:	mov	fp, r8
   11fc8:	ldr	r8, [sp, #160]	; 0xa0
   11fcc:	ldr	r1, [sp, #32]
   11fd0:	cmp	r4, #0
   11fd4:	sub	r2, r8, #2
   11fd8:	clz	r2, r2
   11fdc:	lsr	r2, r2, #5
   11fe0:	andeq	r3, r2, r1
   11fe4:	movne	r3, #0
   11fe8:	cmp	r3, #0
   11fec:	bne	130d8 <abort@plt+0x22e8>
   11ff0:	eor	r3, r1, #1
   11ff4:	ands	r2, r2, r3
   11ff8:	beq	13014 <abort@plt+0x2224>
   11ffc:	ldr	r3, [sp, #68]	; 0x44
   12000:	cmp	r3, #0
   12004:	beq	13018 <abort@plt+0x2228>
   12008:	ldr	r3, [sp, #40]	; 0x28
   1200c:	cmp	r3, #0
   12010:	bne	13094 <abort@plt+0x22a4>
   12014:	ldr	r3, [sp, #72]	; 0x48
   12018:	adds	r3, r3, #0
   1201c:	movne	r3, #1
   12020:	cmp	sl, #0
   12024:	movne	r3, #0
   12028:	cmp	r3, #0
   1202c:	ldreq	r2, [sp, #68]	; 0x44
   12030:	beq	13018 <abort@plt+0x2228>
   12034:	ldr	sl, [sp, #72]	; 0x48
   12038:	str	r3, [sp, #68]	; 0x44
   1203c:	ldr	r3, [pc, #1792]	; 12744 <abort@plt+0x1954>
   12040:	mov	r2, #39	; 0x27
   12044:	mov	r4, #1
   12048:	str	r3, [sp, #60]	; 0x3c
   1204c:	mov	r3, #0
   12050:	strb	r2, [fp]
   12054:	str	r4, [sp, #52]	; 0x34
   12058:	mov	r8, #2
   1205c:	str	r3, [sp, #32]
   12060:	b	11a28 <abort@plt+0xc38>
   12064:	mov	r7, #0
   12068:	cmp	fp, #2
   1206c:	beq	129a4 <abort@plt+0x1bb4>
   12070:	ldr	r3, [sp, #52]	; 0x34
   12074:	ldr	r2, [sp, #28]
   12078:	ldr	r1, [sp, #32]
   1207c:	cmp	r3, #0
   12080:	andne	r2, r2, r1
   12084:	moveq	r2, #0
   12088:	cmp	r2, #0
   1208c:	moveq	r5, #92	; 0x5c
   12090:	moveq	r3, r5
   12094:	bne	129b0 <abort@plt+0x1bc0>
   12098:	ldr	r1, [sp, #28]
   1209c:	cmp	r1, #0
   120a0:	bne	13120 <abort@plt+0x2330>
   120a4:	mov	r6, #0
   120a8:	b	11ec0 <abort@plt+0x10d0>
   120ac:	mov	r7, #0
   120b0:	cmp	fp, #2
   120b4:	beq	12a14 <abort@plt+0x1c24>
   120b8:	cmp	fp, #5
   120bc:	beq	129d8 <abort@plt+0x1be8>
   120c0:	sub	r2, fp, #2
   120c4:	mov	r6, #0
   120c8:	clz	r2, r2
   120cc:	mov	r5, #63	; 0x3f
   120d0:	lsr	r2, r2, #5
   120d4:	b	11ec0 <abort@plt+0x10d0>
   120d8:	mov	r7, #0
   120dc:	cmp	fp, #2
   120e0:	strne	r6, [sp, #68]	; 0x44
   120e4:	movne	r2, #0
   120e8:	movne	r5, #39	; 0x27
   120ec:	bne	11ec0 <abort@plt+0x10d0>
   120f0:	ldr	r3, [sp, #32]
   120f4:	cmp	r3, #0
   120f8:	bne	12df4 <abort@plt+0x2004>
   120fc:	cmp	sl, #0
   12100:	ldr	r3, [sp, #72]	; 0x48
   12104:	clz	r3, r3
   12108:	lsr	r3, r3, #5
   1210c:	moveq	r3, #0
   12110:	cmp	r3, #0
   12114:	bne	12d28 <abort@plt+0x1f38>
   12118:	cmp	sl, r4
   1211c:	movhi	r3, #39	; 0x27
   12120:	strbhi	r3, [r8, r4]
   12124:	add	r3, r4, #1
   12128:	cmp	sl, r3
   1212c:	movhi	r2, #92	; 0x5c
   12130:	strbhi	r2, [r8, r3]
   12134:	add	r3, r4, #2
   12138:	cmp	sl, r3
   1213c:	movhi	r2, #39	; 0x27
   12140:	strbhi	r2, [r8, r3]
   12144:	mov	r3, #0
   12148:	cmp	r7, #0
   1214c:	add	r4, r4, #3
   12150:	str	r3, [sp, #44]	; 0x2c
   12154:	str	r6, [sp, #68]	; 0x44
   12158:	mov	r5, #39	; 0x27
   1215c:	bne	11f10 <abort@plt+0x1120>
   12160:	ldr	r2, [sp, #44]	; 0x2c
   12164:	eor	r3, r3, #1
   12168:	and	r3, r3, r2
   1216c:	add	r9, r9, #1
   12170:	uxtb	r3, r3
   12174:	cmp	r3, #0
   12178:	beq	11f80 <abort@plt+0x1190>
   1217c:	cmp	sl, r4
   12180:	movhi	r3, #39	; 0x27
   12184:	strbhi	r3, [r8, r4]
   12188:	add	r3, r4, #1
   1218c:	cmp	sl, r3
   12190:	movhi	r2, #39	; 0x27
   12194:	strbhi	r2, [r8, r3]
   12198:	mov	r3, #0
   1219c:	add	r4, r4, #2
   121a0:	str	r3, [sp, #44]	; 0x2c
   121a4:	b	11f80 <abort@plt+0x1190>
   121a8:	mov	r3, #114	; 0x72
   121ac:	ldr	r1, [sp, #32]
   121b0:	sub	r2, fp, #2
   121b4:	clz	r2, r2
   121b8:	lsr	r2, r2, #5
   121bc:	tst	r2, r1
   121c0:	beq	12098 <abort@plt+0x12a8>
   121c4:	mov	fp, r8
   121c8:	mov	r8, #2
   121cc:	ldr	r3, [sp, #28]
   121d0:	cmp	r3, #0
   121d4:	movne	r8, #4
   121d8:	ldr	r3, [sp, #164]	; 0xa4
   121dc:	mov	ip, #0
   121e0:	bic	r3, r3, #2
   121e4:	str	r3, [sp, #4]
   121e8:	ldr	r3, [sp, #76]	; 0x4c
   121ec:	str	r8, [sp]
   121f0:	str	r3, [sp, #16]
   121f4:	ldr	r3, [sp, #80]	; 0x50
   121f8:	ldr	r2, [sp, #36]	; 0x24
   121fc:	str	r3, [sp, #12]
   12200:	mov	r1, sl
   12204:	ldr	r3, [sp, #24]
   12208:	mov	r0, fp
   1220c:	str	ip, [sp, #8]
   12210:	bl	11930 <abort@plt+0xb40>
   12214:	mov	r4, r0
   12218:	ldr	r3, [pc, #1304]	; 12738 <abort@plt+0x1948>
   1221c:	ldr	r2, [sp, #116]	; 0x74
   12220:	mov	r0, r4
   12224:	ldr	r3, [r3]
   12228:	cmp	r2, r3
   1222c:	bne	1311c <abort@plt+0x232c>
   12230:	add	sp, sp, #124	; 0x7c
   12234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12238:	mov	r5, #110	; 0x6e
   1223c:	ldr	r3, [sp, #32]
   12240:	mov	r2, #0
   12244:	cmp	r3, #0
   12248:	mov	r6, r2
   1224c:	beq	11f28 <abort@plt+0x1138>
   12250:	str	fp, [sp, #160]	; 0xa0
   12254:	mov	fp, r8
   12258:	ldr	r8, [sp, #160]	; 0xa0
   1225c:	mov	r3, r2
   12260:	ldr	r2, [sp, #28]
   12264:	and	r2, r2, r3
   12268:	str	r2, [sp, #28]
   1226c:	b	121cc <abort@plt+0x13dc>
   12270:	mov	r5, #116	; 0x74
   12274:	b	1223c <abort@plt+0x144c>
   12278:	mov	r5, #102	; 0x66
   1227c:	ldr	r3, [sp, #32]
   12280:	cmp	r3, #0
   12284:	bne	12e30 <abort@plt+0x2040>
   12288:	mov	r6, #0
   1228c:	b	11f6c <abort@plt+0x117c>
   12290:	mov	r5, #118	; 0x76
   12294:	b	1227c <abort@plt+0x148c>
   12298:	mov	r7, #0
   1229c:	mov	r6, #0
   122a0:	b	11edc <abort@plt+0x10ec>
   122a4:	ldr	r3, [sp, #32]
   122a8:	cmp	r3, #0
   122ac:	bne	13074 <abort@plt+0x2284>
   122b0:	mov	r7, r3
   122b4:	ldr	r3, [sp, #44]	; 0x2c
   122b8:	sub	r2, fp, #2
   122bc:	eor	r3, r3, #1
   122c0:	clz	r2, r2
   122c4:	lsr	r2, r2, #5
   122c8:	ands	r3, r2, r3
   122cc:	beq	12d14 <abort@plt+0x1f24>
   122d0:	cmp	sl, r4
   122d4:	movhi	r1, #39	; 0x27
   122d8:	strbhi	r1, [r8, r4]
   122dc:	add	r1, r4, #1
   122e0:	cmp	sl, r1
   122e4:	movhi	r0, #36	; 0x24
   122e8:	strbhi	r0, [r8, r1]
   122ec:	add	r1, r4, #2
   122f0:	cmp	sl, r1
   122f4:	movhi	r0, #39	; 0x27
   122f8:	strbhi	r0, [r8, r1]
   122fc:	add	r1, r4, #3
   12300:	cmp	sl, r1
   12304:	bls	12d74 <abort@plt+0x1f84>
   12308:	mov	r4, r1
   1230c:	mov	r1, #92	; 0x5c
   12310:	strb	r1, [r8, r4]
   12314:	mov	r1, r4
   12318:	str	r3, [sp, #44]	; 0x2c
   1231c:	cmp	fp, #2
   12320:	add	r4, r4, #1
   12324:	beq	12dbc <abort@plt+0x1fcc>
   12328:	ldr	r0, [sp, #24]
   1232c:	add	r3, r9, #1
   12330:	cmp	r3, r0
   12334:	bcs	1234c <abort@plt+0x155c>
   12338:	ldr	r0, [sp, #36]	; 0x24
   1233c:	ldrb	r3, [r0, r3]
   12340:	sub	r3, r3, #48	; 0x30
   12344:	cmp	r3, #9
   12348:	bls	12dcc <abort@plt+0x1fdc>
   1234c:	mov	r5, #48	; 0x30
   12350:	ldr	r3, [sp, #28]
   12354:	eor	r3, r3, #1
   12358:	orrs	r2, r2, r3
   1235c:	mov	r3, r6
   12360:	moveq	r6, r2
   12364:	beq	11ee0 <abort@plt+0x10f0>
   12368:	mov	r6, #0
   1236c:	b	11f08 <abort@plt+0x1118>
   12370:	mov	r2, #0
   12374:	mov	r6, r2
   12378:	mov	r5, #98	; 0x62
   1237c:	b	11f28 <abort@plt+0x1138>
   12380:	mov	r5, #97	; 0x61
   12384:	b	12288 <abort@plt+0x1498>
   12388:	mov	r3, r7
   1238c:	mov	r6, r7
   12390:	mov	r2, #0
   12394:	mov	r7, r3
   12398:	mov	r5, #32
   1239c:	b	11ec0 <abort@plt+0x10d0>
   123a0:	cmp	r9, #0
   123a4:	mov	r3, r7
   123a8:	bne	12970 <abort@plt+0x1b80>
   123ac:	mov	r6, r7
   123b0:	mov	r2, r9
   123b4:	mov	r7, r3
   123b8:	b	11ec0 <abort@plt+0x10d0>
   123bc:	mov	r6, r7
   123c0:	b	11edc <abort@plt+0x10ec>
   123c4:	mov	r7, #0
   123c8:	ldr	r3, [sp, #64]	; 0x40
   123cc:	cmp	r3, #1
   123d0:	bne	12a2c <abort@plt+0x1c3c>
   123d4:	bl	10d18 <__ctype_b_loc@plt>
   123d8:	ldr	r2, [sp, #64]	; 0x40
   123dc:	sxth	r3, r5
   123e0:	mov	ip, r2
   123e4:	lsl	r3, r3, #1
   123e8:	ldr	r2, [r0]
   123ec:	ldrh	r3, [r2, r3]
   123f0:	and	r3, r3, #16384	; 0x4000
   123f4:	cmp	r3, #0
   123f8:	ldr	r3, [sp, #28]
   123fc:	movne	r6, #1
   12400:	moveq	r6, #0
   12404:	movne	r2, #0
   12408:	andeq	r2, r3, #1
   1240c:	cmp	r2, #0
   12410:	bne	12d3c <abort@plt+0x1f4c>
   12414:	sub	r2, fp, #2
   12418:	clz	r2, r2
   1241c:	lsr	r2, r2, #5
   12420:	b	11ec0 <abort@plt+0x10d0>
   12424:	cmp	r4, #0
   12428:	bne	130e8 <abort@plt+0x22f8>
   1242c:	str	r4, [sp, #28]
   12430:	cmp	sl, #0
   12434:	bne	1312c <abort@plt+0x233c>
   12438:	ldr	r3, [pc, #772]	; 12744 <abort@plt+0x1954>
   1243c:	mov	r4, #1
   12440:	str	r4, [sp, #40]	; 0x28
   12444:	str	r3, [sp, #60]	; 0x3c
   12448:	str	r4, [sp, #52]	; 0x34
   1244c:	str	sl, [sp, #72]	; 0x48
   12450:	str	sl, [sp, #68]	; 0x44
   12454:	str	sl, [sp, #44]	; 0x2c
   12458:	str	sl, [sp, #32]
   1245c:	mov	r8, #2
   12460:	b	11a28 <abort@plt+0xc38>
   12464:	ldr	r3, [sp, #36]	; 0x24
   12468:	ldrb	r5, [r3, r9]
   1246c:	cmp	r5, #126	; 0x7e
   12470:	ldrls	pc, [pc, r5, lsl #2]
   12474:	b	123c8 <abort@plt+0x15d8>
   12478:	andeq	r2, r1, ip, lsr #13
   1247c:	andeq	r2, r1, r8, asr #7
   12480:	andeq	r2, r1, r8, asr #7
   12484:	andeq	r2, r1, r8, asr #7
   12488:	andeq	r2, r1, r8, asr #7
   1248c:	andeq	r2, r1, r8, asr #7
   12490:	andeq	r2, r1, r8, asr #7
   12494:	muleq	r1, r8, r6
   12498:	andeq	r2, r1, r4, lsl #13
   1249c:	andeq	r2, r1, ip, ror r6
   124a0:	andeq	r2, r1, r4, ror r6
   124a4:	andeq	r2, r1, r4, lsr #14
   124a8:	andeq	r2, r1, r0, lsl r7
   124ac:	andeq	r2, r1, r8, lsr #3
   124b0:	andeq	r2, r1, r8, asr #7
   124b4:	andeq	r2, r1, r8, asr #7
   124b8:	andeq	r2, r1, r8, asr #7
   124bc:	andeq	r2, r1, r8, asr #7
   124c0:	andeq	r2, r1, r8, asr #7
   124c4:	andeq	r2, r1, r8, asr #7
   124c8:	andeq	r2, r1, r8, asr #7
   124cc:	andeq	r2, r1, r8, asr #7
   124d0:	andeq	r2, r1, r8, asr #7
   124d4:	andeq	r2, r1, r8, asr #7
   124d8:	andeq	r2, r1, r8, asr #7
   124dc:	andeq	r2, r1, r8, asr #7
   124e0:	andeq	r2, r1, r8, asr #7
   124e4:	andeq	r2, r1, r8, asr #7
   124e8:	andeq	r2, r1, r8, asr #7
   124ec:	andeq	r2, r1, r8, asr #7
   124f0:	andeq	r2, r1, r8, asr #7
   124f4:	andeq	r2, r1, r8, asr #7
   124f8:	andeq	r2, r1, r0, lsl #14
   124fc:	andeq	r2, r1, ip, ror #13
   12500:	andeq	r2, r1, ip, ror #13
   12504:	ldrdeq	r2, [r1], -ip
   12508:	andeq	r2, r1, ip, ror #13
   1250c:	andeq	r2, r1, r4, lsl r4
   12510:	andeq	r2, r1, ip, ror #13
   12514:	ldrdeq	r2, [r1], -ip
   12518:	andeq	r2, r1, ip, ror #13
   1251c:	andeq	r2, r1, ip, ror #13
   12520:	andeq	r2, r1, ip, ror #13
   12524:	andeq	r2, r1, r4, lsl r4
   12528:	andeq	r2, r1, r4, lsl r4
   1252c:	andeq	r2, r1, r4, lsl r4
   12530:	andeq	r2, r1, r4, lsl r4
   12534:	andeq	r2, r1, r4, lsl r4
   12538:	andeq	r2, r1, r4, lsl r4
   1253c:	andeq	r2, r1, r4, lsl r4
   12540:	andeq	r2, r1, r4, lsl r4
   12544:	andeq	r2, r1, r4, lsl r4
   12548:	andeq	r2, r1, r4, lsl r4
   1254c:	andeq	r2, r1, r4, lsl r4
   12550:	andeq	r2, r1, r4, lsl r4
   12554:	andeq	r2, r1, r4, lsl r4
   12558:	andeq	r2, r1, r4, lsl r4
   1255c:	andeq	r2, r1, r4, lsl r4
   12560:	andeq	r2, r1, r4, lsl r4
   12564:	andeq	r2, r1, ip, ror #13
   12568:	andeq	r2, r1, ip, ror #13
   1256c:	andeq	r2, r1, ip, ror #13
   12570:	andeq	r2, r1, ip, ror #13
   12574:	strheq	r2, [r1], -r0
   12578:	andeq	r2, r1, r8, asr #7
   1257c:	andeq	r2, r1, r4, lsl r4
   12580:	andeq	r2, r1, r4, lsl r4
   12584:	andeq	r2, r1, r4, lsl r4
   12588:	andeq	r2, r1, r4, lsl r4
   1258c:	andeq	r2, r1, r4, lsl r4
   12590:	andeq	r2, r1, r4, lsl r4
   12594:	andeq	r2, r1, r4, lsl r4
   12598:	andeq	r2, r1, r4, lsl r4
   1259c:	andeq	r2, r1, r4, lsl r4
   125a0:	andeq	r2, r1, r4, lsl r4
   125a4:	andeq	r2, r1, r4, lsl r4
   125a8:	andeq	r2, r1, r4, lsl r4
   125ac:	andeq	r2, r1, r4, lsl r4
   125b0:	andeq	r2, r1, r4, lsl r4
   125b4:	andeq	r2, r1, r4, lsl r4
   125b8:	andeq	r2, r1, r4, lsl r4
   125bc:	andeq	r2, r1, r4, lsl r4
   125c0:	andeq	r2, r1, r4, lsl r4
   125c4:	andeq	r2, r1, r4, lsl r4
   125c8:	andeq	r2, r1, r4, lsl r4
   125cc:	andeq	r2, r1, r4, lsl r4
   125d0:	andeq	r2, r1, r4, lsl r4
   125d4:	andeq	r2, r1, r4, lsl r4
   125d8:	andeq	r2, r1, r4, lsl r4
   125dc:	andeq	r2, r1, r4, lsl r4
   125e0:	andeq	r2, r1, r4, lsl r4
   125e4:	andeq	r2, r1, ip, ror #13
   125e8:	andeq	r2, r1, r8, rrx
   125ec:	andeq	r2, r1, r4, lsl r4
   125f0:	andeq	r2, r1, ip, ror #13
   125f4:	andeq	r2, r1, r4, lsl r4
   125f8:	andeq	r2, r1, ip, ror #13
   125fc:	andeq	r2, r1, r4, lsl r4
   12600:	andeq	r2, r1, r4, lsl r4
   12604:	andeq	r2, r1, r4, lsl r4
   12608:	andeq	r2, r1, r4, lsl r4
   1260c:	andeq	r2, r1, r4, lsl r4
   12610:	andeq	r2, r1, r4, lsl r4
   12614:	andeq	r2, r1, r4, lsl r4
   12618:	andeq	r2, r1, r4, lsl r4
   1261c:	andeq	r2, r1, r4, lsl r4
   12620:	andeq	r2, r1, r4, lsl r4
   12624:	andeq	r2, r1, r4, lsl r4
   12628:	andeq	r2, r1, r4, lsl r4
   1262c:	andeq	r2, r1, r4, lsl r4
   12630:	andeq	r2, r1, r4, lsl r4
   12634:	andeq	r2, r1, r4, lsl r4
   12638:	andeq	r2, r1, r4, lsl r4
   1263c:	andeq	r2, r1, r4, lsl r4
   12640:	andeq	r2, r1, r4, lsl r4
   12644:	andeq	r2, r1, r4, lsl r4
   12648:	andeq	r2, r1, r4, lsl r4
   1264c:	andeq	r2, r1, r4, lsl r4
   12650:	andeq	r2, r1, r4, lsl r4
   12654:	andeq	r2, r1, r4, lsl r4
   12658:	andeq	r2, r1, r4, lsl r4
   1265c:	andeq	r2, r1, r4, lsl r4
   12660:	andeq	r2, r1, r4, lsl r4
   12664:	andeq	r1, r1, r0, lsl #29
   12668:	andeq	r2, r1, ip, ror #13
   1266c:	andeq	r1, r1, r0, lsl #29
   12670:	ldrdeq	r2, [r1], -ip
   12674:	mov	r3, #110	; 0x6e
   12678:	b	121ac <abort@plt+0x13bc>
   1267c:	mov	r3, #116	; 0x74
   12680:	b	121ac <abort@plt+0x13bc>
   12684:	sub	r2, fp, #2
   12688:	mov	r3, #98	; 0x62
   1268c:	clz	r2, r2
   12690:	lsr	r2, r2, #5
   12694:	b	12098 <abort@plt+0x12a8>
   12698:	sub	r2, fp, #2
   1269c:	mov	r3, #97	; 0x61
   126a0:	clz	r2, r2
   126a4:	lsr	r2, r2, #5
   126a8:	b	12098 <abort@plt+0x12a8>
   126ac:	ldr	r3, [sp, #28]
   126b0:	cmp	r3, #0
   126b4:	bne	122a4 <abort@plt+0x14b4>
   126b8:	ldr	r3, [sp, #164]	; 0xa4
   126bc:	tst	r3, #1
   126c0:	bne	12d34 <abort@plt+0x1f44>
   126c4:	ldr	r6, [sp, #28]
   126c8:	sub	r2, fp, #2
   126cc:	mov	r7, r6
   126d0:	clz	r2, r2
   126d4:	lsr	r2, r2, #5
   126d8:	b	11ec0 <abort@plt+0x10d0>
   126dc:	sub	r2, fp, #2
   126e0:	clz	r2, r2
   126e4:	lsr	r2, r2, #5
   126e8:	b	11eac <abort@plt+0x10bc>
   126ec:	sub	r2, fp, #2
   126f0:	mov	r6, #0
   126f4:	clz	r2, r2
   126f8:	lsr	r2, r2, #5
   126fc:	b	11eb4 <abort@plt+0x10c4>
   12700:	sub	r2, fp, #2
   12704:	clz	r2, r2
   12708:	lsr	r2, r2, #5
   1270c:	b	11eb4 <abort@plt+0x10c4>
   12710:	sub	r2, fp, #2
   12714:	mov	r3, #102	; 0x66
   12718:	clz	r2, r2
   1271c:	lsr	r2, r2, #5
   12720:	b	12098 <abort@plt+0x12a8>
   12724:	sub	r2, fp, #2
   12728:	mov	r3, #118	; 0x76
   1272c:	clz	r2, r2
   12730:	lsr	r2, r2, #5
   12734:	b	12098 <abort@plt+0x12a8>
   12738:	andeq	r5, r2, r8, lsl #30
   1273c:	andeq	r4, r1, r8, ror lr
   12740:	andeq	r4, r1, r0, ror #28
   12744:	andeq	r4, r1, r4, ror lr
   12748:	ldr	r3, [sp, #48]	; 0x30
   1274c:	ldrb	r5, [r3]
   12750:	cmp	r5, #126	; 0x7e
   12754:	ldrls	pc, [pc, r5, lsl #2]
   12758:	b	123c4 <abort@plt+0x15d4>
   1275c:	andeq	r2, r1, r4, lsr #5
   12760:	andeq	r2, r1, r4, asr #7
   12764:	andeq	r2, r1, r4, asr #7
   12768:	andeq	r2, r1, r4, asr #7
   1276c:	andeq	r2, r1, r4, asr #7
   12770:	andeq	r2, r1, r4, asr #7
   12774:	andeq	r2, r1, r4, asr #7
   12778:	muleq	r1, ip, r9
   1277c:	muleq	r1, r4, r9
   12780:	andeq	r2, r1, r0, ror r2
   12784:	andeq	r2, r1, r8, lsr r2
   12788:	muleq	r1, r0, r2
   1278c:	andeq	r2, r1, r8, ror r2
   12790:	andeq	r2, r1, r8, lsl #19
   12794:	andeq	r2, r1, r4, asr #7
   12798:	andeq	r2, r1, r4, asr #7
   1279c:	andeq	r2, r1, r4, asr #7
   127a0:	andeq	r2, r1, r4, asr #7
   127a4:	andeq	r2, r1, r4, asr #7
   127a8:	andeq	r2, r1, r4, asr #7
   127ac:	andeq	r2, r1, r4, asr #7
   127b0:	andeq	r2, r1, r4, asr #7
   127b4:	andeq	r2, r1, r4, asr #7
   127b8:	andeq	r2, r1, r4, asr #7
   127bc:	andeq	r2, r1, r4, asr #7
   127c0:	andeq	r2, r1, r4, asr #7
   127c4:	andeq	r2, r1, r4, asr #7
   127c8:	andeq	r2, r1, r4, asr #7
   127cc:	andeq	r2, r1, r4, asr #7
   127d0:	andeq	r2, r1, r4, asr #7
   127d4:	andeq	r2, r1, r4, asr #7
   127d8:	andeq	r2, r1, r4, asr #7
   127dc:	andeq	r2, r1, r0, lsl #19
   127e0:	muleq	r1, r8, r2
   127e4:	muleq	r1, r8, r2
   127e8:	andeq	r2, r1, r4, ror #18
   127ec:	muleq	r1, r8, r2
   127f0:	andeq	r2, r1, r8, asr r9
   127f4:	muleq	r1, r8, r2
   127f8:	ldrdeq	r2, [r1], -r8
   127fc:	muleq	r1, r8, r2
   12800:	muleq	r1, r8, r2
   12804:	muleq	r1, r8, r2
   12808:	andeq	r2, r1, r8, asr r9
   1280c:	andeq	r2, r1, r8, asr r9
   12810:	andeq	r2, r1, r8, asr r9
   12814:	andeq	r2, r1, r8, asr r9
   12818:	andeq	r2, r1, r8, asr r9
   1281c:	andeq	r2, r1, r8, asr r9
   12820:	andeq	r2, r1, r8, asr r9
   12824:	andeq	r2, r1, r8, asr r9
   12828:	andeq	r2, r1, r8, asr r9
   1282c:	andeq	r2, r1, r8, asr r9
   12830:	andeq	r2, r1, r8, asr r9
   12834:	andeq	r2, r1, r8, asr r9
   12838:	andeq	r2, r1, r8, asr r9
   1283c:	andeq	r2, r1, r8, asr r9
   12840:	andeq	r2, r1, r8, asr r9
   12844:	andeq	r2, r1, r8, asr r9
   12848:	muleq	r1, r8, r2
   1284c:	muleq	r1, r8, r2
   12850:	muleq	r1, r8, r2
   12854:	muleq	r1, r8, r2
   12858:	andeq	r2, r1, ip, lsr #1
   1285c:	andeq	r2, r1, r4, asr #7
   12860:	andeq	r2, r1, r8, asr r9
   12864:	andeq	r2, r1, r8, asr r9
   12868:	andeq	r2, r1, r8, asr r9
   1286c:	andeq	r2, r1, r8, asr r9
   12870:	andeq	r2, r1, r8, asr r9
   12874:	andeq	r2, r1, r8, asr r9
   12878:	andeq	r2, r1, r8, asr r9
   1287c:	andeq	r2, r1, r8, asr r9
   12880:	andeq	r2, r1, r8, asr r9
   12884:	andeq	r2, r1, r8, asr r9
   12888:	andeq	r2, r1, r8, asr r9
   1288c:	andeq	r2, r1, r8, asr r9
   12890:	andeq	r2, r1, r8, asr r9
   12894:	andeq	r2, r1, r8, asr r9
   12898:	andeq	r2, r1, r8, asr r9
   1289c:	andeq	r2, r1, r8, asr r9
   128a0:	andeq	r2, r1, r8, asr r9
   128a4:	andeq	r2, r1, r8, asr r9
   128a8:	andeq	r2, r1, r8, asr r9
   128ac:	andeq	r2, r1, r8, asr r9
   128b0:	andeq	r2, r1, r8, asr r9
   128b4:	andeq	r2, r1, r8, asr r9
   128b8:	andeq	r2, r1, r8, asr r9
   128bc:	andeq	r2, r1, r8, asr r9
   128c0:	andeq	r2, r1, r8, asr r9
   128c4:	andeq	r2, r1, r8, asr r9
   128c8:	muleq	r1, r8, r2
   128cc:	andeq	r2, r1, r4, rrx
   128d0:	andeq	r2, r1, r8, asr r9
   128d4:	muleq	r1, r8, r2
   128d8:	andeq	r2, r1, r8, asr r9
   128dc:	muleq	r1, r8, r2
   128e0:	andeq	r2, r1, r8, asr r9
   128e4:	andeq	r2, r1, r8, asr r9
   128e8:	andeq	r2, r1, r8, asr r9
   128ec:	andeq	r2, r1, r8, asr r9
   128f0:	andeq	r2, r1, r8, asr r9
   128f4:	andeq	r2, r1, r8, asr r9
   128f8:	andeq	r2, r1, r8, asr r9
   128fc:	andeq	r2, r1, r8, asr r9
   12900:	andeq	r2, r1, r8, asr r9
   12904:	andeq	r2, r1, r8, asr r9
   12908:	andeq	r2, r1, r8, asr r9
   1290c:	andeq	r2, r1, r8, asr r9
   12910:	andeq	r2, r1, r8, asr r9
   12914:	andeq	r2, r1, r8, asr r9
   12918:	andeq	r2, r1, r8, asr r9
   1291c:	andeq	r2, r1, r8, asr r9
   12920:	andeq	r2, r1, r8, asr r9
   12924:	andeq	r2, r1, r8, asr r9
   12928:	andeq	r2, r1, r8, asr r9
   1292c:	andeq	r2, r1, r8, asr r9
   12930:	andeq	r2, r1, r8, asr r9
   12934:	andeq	r2, r1, r8, asr r9
   12938:	andeq	r2, r1, r8, asr r9
   1293c:	andeq	r2, r1, r8, asr r9
   12940:	andeq	r2, r1, r8, asr r9
   12944:	andeq	r2, r1, r8, asr r9
   12948:	andeq	r1, r1, ip, ror lr
   1294c:	muleq	r1, r8, r2
   12950:	andeq	r1, r1, ip, ror lr
   12954:	andeq	r2, r1, r4, ror #18
   12958:	mov	r6, r7
   1295c:	mov	r7, #0
   12960:	b	11edc <abort@plt+0x10ec>
   12964:	cmp	r9, #0
   12968:	mov	r3, #0
   1296c:	beq	123ac <abort@plt+0x15bc>
   12970:	mov	r6, #0
   12974:	mov	r7, r3
   12978:	mov	r3, r6
   1297c:	b	11ee0 <abort@plt+0x10f0>
   12980:	mov	r3, #0
   12984:	b	1238c <abort@plt+0x159c>
   12988:	mov	r7, #0
   1298c:	mov	r3, #114	; 0x72
   12990:	b	121ac <abort@plt+0x13bc>
   12994:	mov	r5, #98	; 0x62
   12998:	b	1223c <abort@plt+0x144c>
   1299c:	mov	r5, #97	; 0x61
   129a0:	b	1227c <abort@plt+0x148c>
   129a4:	ldr	r3, [sp, #32]
   129a8:	cmp	r3, #0
   129ac:	bne	12df4 <abort@plt+0x2004>
   129b0:	add	r9, r9, #1
   129b4:	ldr	r3, [sp, #44]	; 0x2c
   129b8:	mov	r6, #0
   129bc:	mov	r5, #92	; 0x5c
   129c0:	b	12174 <abort@plt+0x1384>
   129c4:	ldr	r3, [sp, #36]	; 0x24
   129c8:	ldrb	r3, [r3, #1]
   129cc:	adds	r3, r3, #0
   129d0:	movne	r3, #1
   129d4:	b	11e98 <abort@plt+0x10a8>
   129d8:	ldr	r3, [sp, #164]	; 0xa4
   129dc:	ands	r3, r3, #4
   129e0:	beq	12a04 <abort@plt+0x1c14>
   129e4:	ldr	r2, [sp, #24]
   129e8:	add	r3, r9, #2
   129ec:	cmp	r3, r2
   129f0:	bcs	12a04 <abort@plt+0x1c14>
   129f4:	ldr	r2, [sp, #48]	; 0x30
   129f8:	ldrb	r5, [r2, #1]
   129fc:	cmp	r5, #63	; 0x3f
   12a00:	beq	12e68 <abort@plt+0x2078>
   12a04:	mov	r2, #0
   12a08:	mov	r6, r2
   12a0c:	mov	r5, #63	; 0x3f
   12a10:	b	11ec0 <abort@plt+0x10d0>
   12a14:	ldr	r3, [sp, #32]
   12a18:	cmp	r3, #0
   12a1c:	bne	12df4 <abort@plt+0x2004>
   12a20:	mov	r6, r3
   12a24:	mov	r5, #63	; 0x3f
   12a28:	b	11f08 <abort@plt+0x1118>
   12a2c:	ldr	r3, [sp, #24]
   12a30:	cmn	r3, #1
   12a34:	mov	r3, #0
   12a38:	str	r3, [sp, #108]	; 0x6c
   12a3c:	str	r3, [sp, #112]	; 0x70
   12a40:	bne	12a50 <abort@plt+0x1c60>
   12a44:	ldr	r0, [sp, #36]	; 0x24
   12a48:	bl	10d30 <strlen@plt>
   12a4c:	str	r0, [sp, #24]
   12a50:	mov	r3, #0
   12a54:	str	sl, [sp, #88]	; 0x58
   12a58:	ldr	sl, [sp, #36]	; 0x24
   12a5c:	str	r5, [sp, #92]	; 0x5c
   12a60:	mov	r5, r3
   12a64:	str	r7, [sp, #96]	; 0x60
   12a68:	str	r4, [sp, #100]	; 0x64
   12a6c:	str	r8, [sp, #84]	; 0x54
   12a70:	ldr	r3, [sp, #24]
   12a74:	add	r4, r9, r5
   12a78:	add	r7, sl, r4
   12a7c:	sub	r2, r3, r4
   12a80:	mov	r1, r7
   12a84:	add	r3, sp, #108	; 0x6c
   12a88:	add	r0, sp, #104	; 0x68
   12a8c:	bl	142ac <abort@plt+0x34bc>
   12a90:	subs	r8, r0, #0
   12a94:	beq	12ae4 <abort@plt+0x1cf4>
   12a98:	cmn	r8, #1
   12a9c:	beq	12e44 <abort@plt+0x2054>
   12aa0:	cmn	r8, #2
   12aa4:	beq	12f64 <abort@plt+0x2174>
   12aa8:	ldr	r3, [sp, #32]
   12aac:	cmp	fp, #2
   12ab0:	movne	r3, #0
   12ab4:	andeq	r3, r3, #1
   12ab8:	cmp	r3, #0
   12abc:	bne	12c44 <abort@plt+0x1e54>
   12ac0:	ldr	r0, [sp, #104]	; 0x68
   12ac4:	bl	10c88 <iswprint@plt>
   12ac8:	add	r5, r5, r8
   12acc:	cmp	r0, #0
   12ad0:	add	r0, sp, #108	; 0x6c
   12ad4:	moveq	r6, #0
   12ad8:	bl	10c40 <mbsinit@plt>
   12adc:	cmp	r0, #0
   12ae0:	beq	12a70 <abort@plt+0x1c80>
   12ae4:	ldr	r3, [sp, #28]
   12ae8:	mov	ip, r5
   12aec:	eor	r2, r6, #1
   12af0:	ldr	r5, [sp, #92]	; 0x5c
   12af4:	ldr	r7, [sp, #96]	; 0x60
   12af8:	ldr	r4, [sp, #100]	; 0x64
   12afc:	ldr	r8, [sp, #84]	; 0x54
   12b00:	ldr	sl, [sp, #88]	; 0x58
   12b04:	and	r2, r2, r3
   12b08:	cmp	ip, #1
   12b0c:	bls	1240c <abort@plt+0x161c>
   12b10:	add	r1, ip, r9
   12b14:	ldr	lr, [sp, #48]	; 0x30
   12b18:	mov	r0, #0
   12b1c:	str	r6, [sp, #48]	; 0x30
   12b20:	mov	ip, #39	; 0x27
   12b24:	ldr	r6, [sp, #44]	; 0x2c
   12b28:	b	12be0 <abort@plt+0x1df0>
   12b2c:	ldr	r0, [sp, #32]
   12b30:	sub	r3, fp, #2
   12b34:	cmp	r0, #0
   12b38:	clz	r3, r3
   12b3c:	lsr	r3, r3, #5
   12b40:	bne	12d48 <abort@plt+0x1f58>
   12b44:	eor	r0, r6, #1
   12b48:	ands	r3, r3, r0
   12b4c:	beq	12b7c <abort@plt+0x1d8c>
   12b50:	add	r0, r4, #1
   12b54:	cmp	sl, r4
   12b58:	strbhi	ip, [r8, r4]
   12b5c:	cmp	sl, r0
   12b60:	movhi	r6, #36	; 0x24
   12b64:	strbhi	r6, [r8, r0]
   12b68:	add	r0, r4, #2
   12b6c:	mov	r6, r3
   12b70:	add	r4, r4, #3
   12b74:	cmp	sl, r0
   12b78:	strbhi	ip, [r8, r0]
   12b7c:	cmp	sl, r4
   12b80:	movhi	r3, #92	; 0x5c
   12b84:	strbhi	r3, [r8, r4]
   12b88:	add	r3, r4, #1
   12b8c:	cmp	sl, r3
   12b90:	lsrhi	r0, r5, #6
   12b94:	addhi	r0, r0, #48	; 0x30
   12b98:	strbhi	r0, [r8, r3]
   12b9c:	add	r0, r4, #2
   12ba0:	cmp	sl, r0
   12ba4:	lsrhi	r3, r5, #3
   12ba8:	andhi	r3, r3, #7
   12bac:	addhi	r3, r3, #48	; 0x30
   12bb0:	add	r9, r9, #1
   12bb4:	strbhi	r3, [r8, r0]
   12bb8:	and	r5, r5, #7
   12bbc:	cmp	r9, r1
   12bc0:	add	r5, r5, #48	; 0x30
   12bc4:	add	r4, r4, #3
   12bc8:	bcs	12d68 <abort@plt+0x1f78>
   12bcc:	mov	r0, r2
   12bd0:	cmp	sl, r4
   12bd4:	strbhi	r5, [r8, r4]
   12bd8:	ldrb	r5, [lr, #1]!
   12bdc:	add	r4, r4, #1
   12be0:	cmp	r2, #0
   12be4:	bne	12b2c <abort@plt+0x1d3c>
   12be8:	eor	r3, r0, #1
   12bec:	and	r3, r3, r6
   12bf0:	cmp	r7, #0
   12bf4:	uxtb	r3, r3
   12bf8:	beq	12c0c <abort@plt+0x1e1c>
   12bfc:	cmp	sl, r4
   12c00:	movhi	r7, #92	; 0x5c
   12c04:	strbhi	r7, [r8, r4]
   12c08:	add	r4, r4, #1
   12c0c:	add	r9, r9, #1
   12c10:	cmp	r9, r1
   12c14:	bcs	12d5c <abort@plt+0x1f6c>
   12c18:	cmp	r3, #0
   12c1c:	beq	12d88 <abort@plt+0x1f98>
   12c20:	cmp	sl, r4
   12c24:	add	r3, r4, #1
   12c28:	strbhi	ip, [r8, r4]
   12c2c:	mov	r7, #0
   12c30:	cmp	sl, r3
   12c34:	strbhi	ip, [r8, r3]
   12c38:	add	r4, r4, #2
   12c3c:	mov	r6, r7
   12c40:	b	12bd0 <abort@plt+0x1de0>
   12c44:	cmp	r8, #1
   12c48:	beq	12ac0 <abort@plt+0x1cd0>
   12c4c:	add	r1, r4, #1
   12c50:	add	r3, sl, r8
   12c54:	add	r1, sl, r1
   12c58:	add	r4, r3, r4
   12c5c:	ldrb	r3, [r1], #1
   12c60:	sub	r3, r3, #91	; 0x5b
   12c64:	cmp	r3, #33	; 0x21
   12c68:	ldrls	pc, [pc, r3, lsl #2]
   12c6c:	b	12cf8 <abort@plt+0x1f08>
   12c70:	andeq	r2, r1, r4, lsl #26
   12c74:	andeq	r2, r1, r4, lsl #26
   12c78:	strdeq	r2, [r1], -r8
   12c7c:	andeq	r2, r1, r4, lsl #26
   12c80:	strdeq	r2, [r1], -r8
   12c84:	andeq	r2, r1, r4, lsl #26
   12c88:	strdeq	r2, [r1], -r8
   12c8c:	strdeq	r2, [r1], -r8
   12c90:	strdeq	r2, [r1], -r8
   12c94:	strdeq	r2, [r1], -r8
   12c98:	strdeq	r2, [r1], -r8
   12c9c:	strdeq	r2, [r1], -r8
   12ca0:	strdeq	r2, [r1], -r8
   12ca4:	strdeq	r2, [r1], -r8
   12ca8:	strdeq	r2, [r1], -r8
   12cac:	strdeq	r2, [r1], -r8
   12cb0:	strdeq	r2, [r1], -r8
   12cb4:	strdeq	r2, [r1], -r8
   12cb8:	strdeq	r2, [r1], -r8
   12cbc:	strdeq	r2, [r1], -r8
   12cc0:	strdeq	r2, [r1], -r8
   12cc4:	strdeq	r2, [r1], -r8
   12cc8:	strdeq	r2, [r1], -r8
   12ccc:	strdeq	r2, [r1], -r8
   12cd0:	strdeq	r2, [r1], -r8
   12cd4:	strdeq	r2, [r1], -r8
   12cd8:	strdeq	r2, [r1], -r8
   12cdc:	strdeq	r2, [r1], -r8
   12ce0:	strdeq	r2, [r1], -r8
   12ce4:	strdeq	r2, [r1], -r8
   12ce8:	strdeq	r2, [r1], -r8
   12cec:	strdeq	r2, [r1], -r8
   12cf0:	strdeq	r2, [r1], -r8
   12cf4:	andeq	r2, r1, r4, lsl #26
   12cf8:	cmp	r4, r1
   12cfc:	bne	12c5c <abort@plt+0x1e6c>
   12d00:	b	12ac0 <abort@plt+0x1cd0>
   12d04:	ldr	fp, [sp, #84]	; 0x54
   12d08:	ldr	sl, [sp, #88]	; 0x58
   12d0c:	mov	r8, #2
   12d10:	b	121cc <abort@plt+0x13dc>
   12d14:	cmp	sl, r4
   12d18:	movls	r1, r4
   12d1c:	bls	1231c <abort@plt+0x152c>
   12d20:	ldr	r3, [sp, #44]	; 0x2c
   12d24:	b	1230c <abort@plt+0x151c>
   12d28:	str	sl, [sp, #72]	; 0x48
   12d2c:	ldr	sl, [sp, #32]
   12d30:	b	12144 <abort@plt+0x1354>
   12d34:	add	r9, r9, #1
   12d38:	b	11a38 <abort@plt+0xc48>
   12d3c:	ldr	r2, [sp, #28]
   12d40:	mov	r6, #0
   12d44:	b	12b10 <abort@plt+0x1d20>
   12d48:	str	fp, [sp, #160]	; 0xa0
   12d4c:	str	r3, [sp, #28]
   12d50:	mov	fp, r8
   12d54:	ldr	r8, [sp, #160]	; 0xa0
   12d58:	b	121cc <abort@plt+0x13dc>
   12d5c:	str	r6, [sp, #44]	; 0x2c
   12d60:	ldr	r6, [sp, #48]	; 0x30
   12d64:	b	12174 <abort@plt+0x1384>
   12d68:	str	r6, [sp, #44]	; 0x2c
   12d6c:	ldr	r6, [sp, #48]	; 0x30
   12d70:	b	11f80 <abort@plt+0x1190>
   12d74:	add	r4, r4, #4
   12d78:	str	r3, [sp, #44]	; 0x2c
   12d7c:	mov	r6, #0
   12d80:	mov	r5, #48	; 0x30
   12d84:	b	11f08 <abort@plt+0x1118>
   12d88:	mov	r7, r3
   12d8c:	b	12bd0 <abort@plt+0x1de0>
   12d90:	ldr	r3, [pc, #-1624]	; 12740 <abort@plt+0x1950>
   12d94:	mov	r4, #1
   12d98:	str	r4, [sp, #40]	; 0x28
   12d9c:	str	r4, [sp, #28]
   12da0:	str	r4, [sp, #52]	; 0x34
   12da4:	str	sl, [sp, #72]	; 0x48
   12da8:	str	sl, [sp, #68]	; 0x44
   12dac:	str	sl, [sp, #44]	; 0x2c
   12db0:	str	sl, [sp, #32]
   12db4:	str	r3, [sp, #60]	; 0x3c
   12db8:	b	11a28 <abort@plt+0xc38>
   12dbc:	mov	r3, r6
   12dc0:	mov	r5, #48	; 0x30
   12dc4:	mov	r6, #0
   12dc8:	b	11f08 <abort@plt+0x1118>
   12dcc:	cmp	sl, r4
   12dd0:	movhi	r3, #48	; 0x30
   12dd4:	strbhi	r3, [r8, r4]
   12dd8:	add	r3, r1, #2
   12ddc:	cmp	sl, r3
   12de0:	movhi	r0, #48	; 0x30
   12de4:	strbhi	r0, [r8, r3]
   12de8:	add	r4, r1, #3
   12dec:	mov	r5, #48	; 0x30
   12df0:	b	12350 <abort@plt+0x1560>
   12df4:	str	fp, [sp, #160]	; 0xa0
   12df8:	mov	fp, r8
   12dfc:	ldr	r8, [sp, #160]	; 0xa0
   12e00:	b	121cc <abort@plt+0x13dc>
   12e04:	ldr	r2, [sp, #80]	; 0x50
   12e08:	ldrb	r3, [r2]
   12e0c:	cmp	r3, #0
   12e10:	beq	119f8 <abort@plt+0xc08>
   12e14:	cmp	sl, r4
   12e18:	strbhi	r3, [fp, r4]
   12e1c:	ldrb	r3, [r2, #1]!
   12e20:	add	r4, r4, #1
   12e24:	cmp	r3, #0
   12e28:	bne	12e14 <abort@plt+0x2024>
   12e2c:	b	119f8 <abort@plt+0xc08>
   12e30:	str	fp, [sp, #160]	; 0xa0
   12e34:	mov	r3, #0
   12e38:	mov	fp, r8
   12e3c:	ldr	r8, [sp, #160]	; 0xa0
   12e40:	b	12260 <abort@plt+0x1470>
   12e44:	mov	ip, r5
   12e48:	ldr	r7, [sp, #96]	; 0x60
   12e4c:	ldr	r5, [sp, #92]	; 0x5c
   12e50:	ldr	r4, [sp, #100]	; 0x64
   12e54:	ldr	r8, [sp, #84]	; 0x54
   12e58:	ldr	sl, [sp, #88]	; 0x58
   12e5c:	ldr	r2, [sp, #28]
   12e60:	mov	r6, #0
   12e64:	b	12b08 <abort@plt+0x1d18>
   12e68:	ldr	r2, [sp, #36]	; 0x24
   12e6c:	ldrb	r1, [r2, r3]
   12e70:	sub	r2, r1, #33	; 0x21
   12e74:	cmp	r2, #29
   12e78:	ldrls	pc, [pc, r2, lsl #2]
   12e7c:	b	12f58 <abort@plt+0x2168>
   12e80:	strdeq	r2, [r1], -r8
   12e84:	andeq	r2, r1, r8, asr pc
   12e88:	andeq	r2, r1, r8, asr pc
   12e8c:	andeq	r2, r1, r8, asr pc
   12e90:	andeq	r2, r1, r8, asr pc
   12e94:	andeq	r2, r1, r8, asr pc
   12e98:	strdeq	r2, [r1], -r8
   12e9c:	strdeq	r2, [r1], -r8
   12ea0:	strdeq	r2, [r1], -r8
   12ea4:	andeq	r2, r1, r8, asr pc
   12ea8:	andeq	r2, r1, r8, asr pc
   12eac:	andeq	r2, r1, r8, asr pc
   12eb0:	strdeq	r2, [r1], -r8
   12eb4:	andeq	r2, r1, r8, asr pc
   12eb8:	strdeq	r2, [r1], -r8
   12ebc:	andeq	r2, r1, r8, asr pc
   12ec0:	andeq	r2, r1, r8, asr pc
   12ec4:	andeq	r2, r1, r8, asr pc
   12ec8:	andeq	r2, r1, r8, asr pc
   12ecc:	andeq	r2, r1, r8, asr pc
   12ed0:	andeq	r2, r1, r8, asr pc
   12ed4:	andeq	r2, r1, r8, asr pc
   12ed8:	andeq	r2, r1, r8, asr pc
   12edc:	andeq	r2, r1, r8, asr pc
   12ee0:	andeq	r2, r1, r8, asr pc
   12ee4:	andeq	r2, r1, r8, asr pc
   12ee8:	andeq	r2, r1, r8, asr pc
   12eec:	strdeq	r2, [r1], -r8
   12ef0:	strdeq	r2, [r1], -r8
   12ef4:	strdeq	r2, [r1], -r8
   12ef8:	ldr	r2, [sp, #32]
   12efc:	cmp	r2, #0
   12f00:	bne	13004 <abort@plt+0x2214>
   12f04:	cmp	sl, r4
   12f08:	movhi	r2, #63	; 0x3f
   12f0c:	strbhi	r2, [r8, r4]
   12f10:	add	r2, r4, #1
   12f14:	cmp	sl, r2
   12f18:	movhi	r0, #34	; 0x22
   12f1c:	strbhi	r0, [r8, r2]
   12f20:	add	r2, r4, #2
   12f24:	cmp	sl, r2
   12f28:	movhi	r0, #34	; 0x22
   12f2c:	strbhi	r0, [r8, r2]
   12f30:	add	r2, r4, #3
   12f34:	cmp	sl, r2
   12f38:	movhi	r0, #63	; 0x3f
   12f3c:	strbhi	r0, [r8, r2]
   12f40:	mov	r2, #0
   12f44:	add	r4, r4, #4
   12f48:	mov	r5, r1
   12f4c:	mov	r9, r3
   12f50:	mov	r6, r2
   12f54:	b	12350 <abort@plt+0x1560>
   12f58:	mov	r2, #0
   12f5c:	mov	r6, r2
   12f60:	b	11ec0 <abort@plt+0x10d0>
   12f64:	ldr	r0, [sp, #24]
   12f68:	mov	r1, r4
   12f6c:	cmp	r1, r0
   12f70:	mov	r2, r7
   12f74:	mov	r3, r5
   12f78:	mov	ip, r5
   12f7c:	ldr	r7, [sp, #96]	; 0x60
   12f80:	ldr	r5, [sp, #92]	; 0x5c
   12f84:	ldr	r4, [sp, #100]	; 0x64
   12f88:	ldr	r8, [sp, #84]	; 0x54
   12f8c:	ldr	sl, [sp, #88]	; 0x58
   12f90:	bcs	12fc4 <abort@plt+0x21d4>
   12f94:	ldrb	r6, [r2]
   12f98:	cmp	r6, #0
   12f9c:	bne	12fb0 <abort@plt+0x21c0>
   12fa0:	b	130e0 <abort@plt+0x22f0>
   12fa4:	ldrb	r6, [r2, #1]!
   12fa8:	cmp	r6, #0
   12fac:	beq	13068 <abort@plt+0x2278>
   12fb0:	add	r3, r3, #1
   12fb4:	add	r1, r9, r3
   12fb8:	cmp	r1, r0
   12fbc:	bcc	12fa4 <abort@plt+0x21b4>
   12fc0:	mov	ip, r3
   12fc4:	ldr	r2, [sp, #28]
   12fc8:	mov	r6, #0
   12fcc:	b	12b08 <abort@plt+0x1d18>
   12fd0:	mov	r3, #1
   12fd4:	str	r3, [sp, #40]	; 0x28
   12fd8:	str	r3, [sp, #32]
   12fdc:	str	r3, [sp, #28]
   12fe0:	str	r3, [sp, #52]	; 0x34
   12fe4:	ldr	r3, [pc, #-2220]	; 12740 <abort@plt+0x1950>
   12fe8:	mov	r2, #0
   12fec:	str	r2, [sp, #68]	; 0x44
   12ff0:	str	r2, [sp, #44]	; 0x2c
   12ff4:	str	r2, [sp, #72]	; 0x48
   12ff8:	mov	r4, r2
   12ffc:	str	r3, [sp, #60]	; 0x3c
   13000:	b	11a28 <abort@plt+0xc38>
   13004:	str	fp, [sp, #160]	; 0xa0
   13008:	mov	fp, r8
   1300c:	ldr	r8, [sp, #160]	; 0xa0
   13010:	b	121d8 <abort@plt+0x13e8>
   13014:	mov	r2, r3
   13018:	ldr	r3, [sp, #60]	; 0x3c
   1301c:	cmp	r3, #0
   13020:	moveq	r2, #0
   13024:	andne	r2, r2, #1
   13028:	cmp	r2, #0
   1302c:	beq	13058 <abort@plt+0x2268>
   13030:	mov	r2, r3
   13034:	ldrb	r3, [r3]
   13038:	cmp	r3, #0
   1303c:	beq	13058 <abort@plt+0x2268>
   13040:	cmp	sl, r4
   13044:	strbhi	r3, [fp, r4]
   13048:	ldrb	r3, [r2, #1]!
   1304c:	add	r4, r4, #1
   13050:	cmp	r3, #0
   13054:	bne	13040 <abort@plt+0x2250>
   13058:	cmp	sl, r4
   1305c:	movhi	r3, #0
   13060:	strbhi	r3, [fp, r4]
   13064:	b	12218 <abort@plt+0x1428>
   13068:	mov	ip, r3
   1306c:	ldr	r2, [sp, #28]
   13070:	b	12b08 <abort@plt+0x1d18>
   13074:	str	fp, [sp, #160]	; 0xa0
   13078:	mov	fp, r8
   1307c:	ldr	r8, [sp, #160]	; 0xa0
   13080:	sub	r3, r8, #2
   13084:	clz	r3, r3
   13088:	lsr	r3, r3, #5
   1308c:	str	r3, [sp, #28]
   13090:	b	121cc <abort@plt+0x13dc>
   13094:	ldr	r3, [sp, #76]	; 0x4c
   13098:	mov	ip, #5
   1309c:	str	r3, [sp, #16]
   130a0:	ldr	r3, [sp, #80]	; 0x50
   130a4:	ldr	r2, [sp, #36]	; 0x24
   130a8:	str	r3, [sp, #12]
   130ac:	ldr	r3, [sp, #56]	; 0x38
   130b0:	ldr	r1, [sp, #72]	; 0x48
   130b4:	str	r3, [sp, #8]
   130b8:	ldr	r3, [sp, #164]	; 0xa4
   130bc:	mov	r0, fp
   130c0:	str	r3, [sp, #4]
   130c4:	str	ip, [sp]
   130c8:	ldr	r3, [sp, #24]
   130cc:	bl	11930 <abort@plt+0xb40>
   130d0:	mov	r4, r0
   130d4:	b	12218 <abort@plt+0x1428>
   130d8:	mov	r8, #2
   130dc:	b	121cc <abort@plt+0x13dc>
   130e0:	ldr	r2, [sp, #28]
   130e4:	b	12b08 <abort@plt+0x1d18>
   130e8:	mov	r3, #0
   130ec:	str	r3, [sp, #68]	; 0x44
   130f0:	str	r3, [sp, #44]	; 0x2c
   130f4:	str	r3, [sp, #72]	; 0x48
   130f8:	str	r3, [sp, #28]
   130fc:	mov	r4, r3
   13100:	ldr	r3, [pc, #-2500]	; 12744 <abort@plt+0x1954>
   13104:	mov	r2, #1
   13108:	str	r2, [sp, #40]	; 0x28
   1310c:	str	r2, [sp, #32]
   13110:	str	r2, [sp, #52]	; 0x34
   13114:	str	r3, [sp, #60]	; 0x3c
   13118:	b	11a28 <abort@plt+0xc38>
   1311c:	bl	10c64 <__stack_chk_fail@plt>
   13120:	mov	r5, r3
   13124:	mov	r6, #0
   13128:	b	11f1c <abort@plt+0x112c>
   1312c:	mov	r3, #0
   13130:	mov	r2, #1
   13134:	str	r3, [sp, #44]	; 0x2c
   13138:	str	r3, [sp, #72]	; 0x48
   1313c:	str	r2, [sp, #40]	; 0x28
   13140:	b	12038 <abort@plt+0x1248>
   13144:	bl	10df0 <abort@plt>
   13148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1314c:	sub	sp, sp, #44	; 0x2c
   13150:	mov	r6, r0
   13154:	mov	r4, r3
   13158:	mov	sl, r1
   1315c:	mov	fp, r2
   13160:	bl	10d3c <__errno_location@plt>
   13164:	ldr	r7, [pc, #364]	; 132d8 <abort@plt+0x24e8>
   13168:	cmp	r6, #0
   1316c:	ldr	r5, [r7]
   13170:	ldr	r3, [r0]
   13174:	str	r3, [sp, #24]
   13178:	blt	132d4 <abort@plt+0x24e4>
   1317c:	ldr	r3, [r7, #4]
   13180:	mov	r8, r0
   13184:	cmp	r3, r6
   13188:	bgt	131d4 <abort@plt+0x23e4>
   1318c:	cmn	r6, #-268435454	; 0xf0000002
   13190:	bgt	132d0 <abort@plt+0x24e0>
   13194:	add	r9, r6, #1
   13198:	add	r3, r7, #8
   1319c:	cmp	r5, r3
   131a0:	lsl	r1, r9, #3
   131a4:	beq	132b0 <abort@plt+0x24c0>
   131a8:	mov	r0, r5
   131ac:	bl	13f3c <abort@plt+0x314c>
   131b0:	mov	r5, r0
   131b4:	str	r0, [r7]
   131b8:	ldr	r0, [r7, #4]
   131bc:	mov	r1, #0
   131c0:	sub	r2, r9, r0
   131c4:	add	r0, r5, r0, lsl #3
   131c8:	lsl	r2, r2, #3
   131cc:	bl	10d54 <memset@plt>
   131d0:	str	r9, [r7, #4]
   131d4:	add	r3, r5, r6, lsl #3
   131d8:	ldr	r1, [r4, #4]
   131dc:	ldr	r7, [r3, #4]
   131e0:	ldr	r9, [r5, r6, lsl #3]
   131e4:	ldr	r2, [r4, #40]	; 0x28
   131e8:	ldr	ip, [r4, #44]	; 0x2c
   131ec:	str	r3, [sp, #28]
   131f0:	ldr	r3, [r4]
   131f4:	orr	r1, r1, #1
   131f8:	add	lr, r4, #8
   131fc:	str	r1, [sp, #36]	; 0x24
   13200:	str	r1, [sp, #4]
   13204:	str	r2, [sp, #12]
   13208:	str	r3, [sp]
   1320c:	mov	r0, r7
   13210:	mov	r1, r9
   13214:	str	ip, [sp, #16]
   13218:	str	lr, [sp, #8]
   1321c:	mov	r3, fp
   13220:	mov	r2, sl
   13224:	str	lr, [sp, #32]
   13228:	bl	11930 <abort@plt+0xb40>
   1322c:	cmp	r9, r0
   13230:	bhi	1329c <abort@plt+0x24ac>
   13234:	ldr	r3, [pc, #160]	; 132dc <abort@plt+0x24ec>
   13238:	add	r9, r0, #1
   1323c:	cmp	r7, r3
   13240:	str	r9, [r5, r6, lsl #3]
   13244:	beq	13250 <abort@plt+0x2460>
   13248:	mov	r0, r7
   1324c:	bl	10c10 <free@plt>
   13250:	mov	r0, r9
   13254:	bl	13ee0 <abort@plt+0x30f0>
   13258:	ldr	lr, [sp, #28]
   1325c:	ldr	ip, [r4, #44]	; 0x2c
   13260:	ldr	r5, [r4, #40]	; 0x28
   13264:	mov	r3, fp
   13268:	mov	r2, sl
   1326c:	mov	r1, r9
   13270:	str	r0, [lr, #4]
   13274:	ldr	lr, [r4]
   13278:	ldr	r4, [sp, #32]
   1327c:	str	ip, [sp, #16]
   13280:	str	r4, [sp, #8]
   13284:	ldr	r4, [sp, #36]	; 0x24
   13288:	str	r5, [sp, #12]
   1328c:	str	r4, [sp, #4]
   13290:	str	lr, [sp]
   13294:	mov	r7, r0
   13298:	bl	11930 <abort@plt+0xb40>
   1329c:	ldr	r3, [sp, #24]
   132a0:	mov	r0, r7
   132a4:	str	r3, [r8]
   132a8:	add	sp, sp, #44	; 0x2c
   132ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132b0:	mov	r0, #0
   132b4:	bl	13f3c <abort@plt+0x314c>
   132b8:	ldr	r3, [pc, #32]	; 132e0 <abort@plt+0x24f0>
   132bc:	mov	r5, r0
   132c0:	ldm	r3, {r0, r1}
   132c4:	str	r5, [r7]
   132c8:	stm	r5, {r0, r1}
   132cc:	b	131b8 <abort@plt+0x23c8>
   132d0:	bl	14128 <abort@plt+0x3338>
   132d4:	bl	10df0 <abort@plt>
   132d8:	ldrdeq	r6, [r2], -r8
   132dc:	andeq	r6, r2, r8, asr #2
   132e0:	andeq	r6, r2, r0, ror #1
   132e4:	push	{r4, r5, r6, lr}
   132e8:	mov	r5, r0
   132ec:	bl	10d3c <__errno_location@plt>
   132f0:	cmp	r5, #0
   132f4:	mov	r1, #48	; 0x30
   132f8:	mov	r4, r0
   132fc:	ldr	r0, [pc, #16]	; 13314 <abort@plt+0x2524>
   13300:	ldr	r6, [r4]
   13304:	movne	r0, r5
   13308:	bl	140e8 <abort@plt+0x32f8>
   1330c:	str	r6, [r4]
   13310:	pop	{r4, r5, r6, pc}
   13314:	andeq	r6, r2, r8, asr #4
   13318:	ldr	r3, [pc, #12]	; 1332c <abort@plt+0x253c>
   1331c:	cmp	r0, #0
   13320:	moveq	r0, r3
   13324:	ldr	r0, [r0]
   13328:	bx	lr
   1332c:	andeq	r6, r2, r8, asr #4
   13330:	ldr	r3, [pc, #12]	; 13344 <abort@plt+0x2554>
   13334:	cmp	r0, #0
   13338:	moveq	r0, r3
   1333c:	str	r1, [r0]
   13340:	bx	lr
   13344:	andeq	r6, r2, r8, asr #4
   13348:	ldr	r3, [pc, #52]	; 13384 <abort@plt+0x2594>
   1334c:	cmp	r0, #0
   13350:	moveq	r0, r3
   13354:	add	r3, r0, #8
   13358:	push	{lr}		; (str lr, [sp, #-4]!)
   1335c:	lsr	lr, r1, #5
   13360:	and	r1, r1, #31
   13364:	ldr	ip, [r3, lr, lsl #2]
   13368:	lsr	r0, ip, r1
   1336c:	eor	r2, r2, r0
   13370:	and	r2, r2, #1
   13374:	and	r0, r0, #1
   13378:	eor	r1, ip, r2, lsl r1
   1337c:	str	r1, [r3, lr, lsl #2]
   13380:	pop	{pc}		; (ldr pc, [sp], #4)
   13384:	andeq	r6, r2, r8, asr #4
   13388:	ldr	r3, [pc, #16]	; 133a0 <abort@plt+0x25b0>
   1338c:	cmp	r0, #0
   13390:	movne	r3, r0
   13394:	ldr	r0, [r3, #4]
   13398:	str	r1, [r3, #4]
   1339c:	bx	lr
   133a0:	andeq	r6, r2, r8, asr #4
   133a4:	ldr	r3, [pc, #44]	; 133d8 <abort@plt+0x25e8>
   133a8:	cmp	r0, #0
   133ac:	moveq	r0, r3
   133b0:	mov	ip, #10
   133b4:	cmp	r2, #0
   133b8:	cmpne	r1, #0
   133bc:	str	ip, [r0]
   133c0:	beq	133d0 <abort@plt+0x25e0>
   133c4:	str	r1, [r0, #40]	; 0x28
   133c8:	str	r2, [r0, #44]	; 0x2c
   133cc:	bx	lr
   133d0:	push	{r4, lr}
   133d4:	bl	10df0 <abort@plt>
   133d8:	andeq	r6, r2, r8, asr #4
   133dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133e0:	sub	sp, sp, #24
   133e4:	ldr	ip, [pc, #108]	; 13458 <abort@plt+0x2668>
   133e8:	ldr	r4, [sp, #56]	; 0x38
   133ec:	mov	r9, r2
   133f0:	cmp	r4, #0
   133f4:	moveq	r4, ip
   133f8:	mov	sl, r3
   133fc:	mov	r7, r0
   13400:	mov	r8, r1
   13404:	bl	10d3c <__errno_location@plt>
   13408:	ldr	r3, [r4, #44]	; 0x2c
   1340c:	mov	r1, r8
   13410:	ldr	r6, [r0]
   13414:	str	r3, [sp, #16]
   13418:	ldr	r2, [r4, #40]	; 0x28
   1341c:	add	r3, r4, #8
   13420:	str	r3, [sp, #8]
   13424:	str	r2, [sp, #12]
   13428:	ldr	r2, [r4, #4]
   1342c:	mov	r5, r0
   13430:	str	r2, [sp, #4]
   13434:	ldr	ip, [r4]
   13438:	mov	r3, sl
   1343c:	mov	r2, r9
   13440:	mov	r0, r7
   13444:	str	ip, [sp]
   13448:	bl	11930 <abort@plt+0xb40>
   1344c:	str	r6, [r5]
   13450:	add	sp, sp, #24
   13454:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13458:	andeq	r6, r2, r8, asr #4
   1345c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13460:	cmp	r3, #0
   13464:	sub	sp, sp, #44	; 0x2c
   13468:	ldr	r4, [pc, #192]	; 13530 <abort@plt+0x2740>
   1346c:	mov	r6, r2
   13470:	movne	r4, r3
   13474:	mov	r9, r1
   13478:	mov	r8, r0
   1347c:	bl	10d3c <__errno_location@plt>
   13480:	ldr	r3, [r4, #44]	; 0x2c
   13484:	ldr	r5, [r4, #4]
   13488:	add	sl, r4, #8
   1348c:	cmp	r6, #0
   13490:	orreq	r5, r5, #1
   13494:	mov	r1, #0
   13498:	ldr	r2, [r0]
   1349c:	str	r3, [sp, #16]
   134a0:	ldr	r3, [r4, #40]	; 0x28
   134a4:	stmib	sp, {r5, sl}
   134a8:	str	r3, [sp, #12]
   134ac:	ldr	r3, [r4]
   134b0:	mov	r7, r0
   134b4:	str	r2, [sp, #28]
   134b8:	str	r3, [sp]
   134bc:	mov	r2, r8
   134c0:	mov	r3, r9
   134c4:	mov	r0, r1
   134c8:	bl	11930 <abort@plt+0xb40>
   134cc:	add	r1, r0, #1
   134d0:	mov	fp, r0
   134d4:	mov	r0, r1
   134d8:	str	r1, [sp, #36]	; 0x24
   134dc:	bl	13ee0 <abort@plt+0x30f0>
   134e0:	ldr	r3, [r4, #44]	; 0x2c
   134e4:	mov	r2, r8
   134e8:	str	r3, [sp, #16]
   134ec:	ldr	r3, [r4, #40]	; 0x28
   134f0:	str	r5, [sp, #4]
   134f4:	str	r3, [sp, #12]
   134f8:	str	sl, [sp, #8]
   134fc:	ldr	ip, [r4]
   13500:	ldr	r1, [sp, #36]	; 0x24
   13504:	mov	r3, r9
   13508:	str	ip, [sp]
   1350c:	str	r0, [sp, #32]
   13510:	bl	11930 <abort@plt+0xb40>
   13514:	ldr	r2, [sp, #28]
   13518:	cmp	r6, #0
   1351c:	str	r2, [r7]
   13520:	ldr	r0, [sp, #32]
   13524:	strne	fp, [r6]
   13528:	add	sp, sp, #44	; 0x2c
   1352c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13530:	andeq	r6, r2, r8, asr #4
   13534:	mov	r3, r2
   13538:	mov	r2, #0
   1353c:	b	1345c <abort@plt+0x266c>
   13540:	push	{r4, r5, r6, r7, r8, lr}
   13544:	ldr	r6, [pc, #112]	; 135bc <abort@plt+0x27cc>
   13548:	ldr	r3, [r6, #4]
   1354c:	ldr	r7, [r6]
   13550:	cmp	r3, #1
   13554:	ble	13578 <abort@plt+0x2788>
   13558:	sub	r5, r7, #8
   1355c:	add	r5, r5, r3, lsl #3
   13560:	mov	r4, r7
   13564:	ldr	r0, [r4, #12]
   13568:	add	r4, r4, #8
   1356c:	bl	10c10 <free@plt>
   13570:	cmp	r4, r5
   13574:	bne	13564 <abort@plt+0x2774>
   13578:	ldr	r0, [r7, #4]
   1357c:	ldr	r4, [pc, #60]	; 135c0 <abort@plt+0x27d0>
   13580:	cmp	r0, r4
   13584:	beq	13598 <abort@plt+0x27a8>
   13588:	bl	10c10 <free@plt>
   1358c:	mov	r3, #256	; 0x100
   13590:	str	r4, [r6, #12]
   13594:	str	r3, [r6, #8]
   13598:	ldr	r4, [pc, #36]	; 135c4 <abort@plt+0x27d4>
   1359c:	cmp	r7, r4
   135a0:	beq	135b0 <abort@plt+0x27c0>
   135a4:	mov	r0, r7
   135a8:	bl	10c10 <free@plt>
   135ac:	str	r4, [r6]
   135b0:	mov	r3, #1
   135b4:	str	r3, [r6, #4]
   135b8:	pop	{r4, r5, r6, r7, r8, pc}
   135bc:	ldrdeq	r6, [r2], -r8
   135c0:	andeq	r6, r2, r8, asr #2
   135c4:	andeq	r6, r2, r0, ror #1
   135c8:	ldr	r3, [pc, #4]	; 135d4 <abort@plt+0x27e4>
   135cc:	mvn	r2, #0
   135d0:	b	13148 <abort@plt+0x2358>
   135d4:	andeq	r6, r2, r8, asr #4
   135d8:	ldr	r3, [pc]	; 135e0 <abort@plt+0x27f0>
   135dc:	b	13148 <abort@plt+0x2358>
   135e0:	andeq	r6, r2, r8, asr #4
   135e4:	mov	r1, r0
   135e8:	ldr	r3, [pc, #8]	; 135f8 <abort@plt+0x2808>
   135ec:	mvn	r2, #0
   135f0:	mov	r0, #0
   135f4:	b	13148 <abort@plt+0x2358>
   135f8:	andeq	r6, r2, r8, asr #4
   135fc:	mov	r2, r1
   13600:	ldr	r3, [pc, #8]	; 13610 <abort@plt+0x2820>
   13604:	mov	r1, r0
   13608:	mov	r0, #0
   1360c:	b	13148 <abort@plt+0x2358>
   13610:	andeq	r6, r2, r8, asr #4
   13614:	push	{r4, r5, r6, lr}
   13618:	sub	sp, sp, #56	; 0x38
   1361c:	ldr	r4, [pc, #68]	; 13668 <abort@plt+0x2878>
   13620:	mov	r6, r2
   13624:	mov	r5, r0
   13628:	ldr	r3, [r4]
   1362c:	add	r0, sp, #4
   13630:	str	r3, [sp, #52]	; 0x34
   13634:	bl	117c0 <abort@plt+0x9d0>
   13638:	add	r3, sp, #4
   1363c:	mvn	r2, #0
   13640:	mov	r1, r6
   13644:	mov	r0, r5
   13648:	bl	13148 <abort@plt+0x2358>
   1364c:	ldr	r2, [sp, #52]	; 0x34
   13650:	ldr	r3, [r4]
   13654:	cmp	r2, r3
   13658:	bne	13664 <abort@plt+0x2874>
   1365c:	add	sp, sp, #56	; 0x38
   13660:	pop	{r4, r5, r6, pc}
   13664:	bl	10c64 <__stack_chk_fail@plt>
   13668:	andeq	r5, r2, r8, lsl #30
   1366c:	push	{r4, r5, r6, r7, lr}
   13670:	sub	sp, sp, #60	; 0x3c
   13674:	ldr	r4, [pc, #72]	; 136c4 <abort@plt+0x28d4>
   13678:	mov	r6, r2
   1367c:	mov	r7, r3
   13680:	ldr	ip, [r4]
   13684:	mov	r5, r0
   13688:	add	r0, sp, #4
   1368c:	str	ip, [sp, #52]	; 0x34
   13690:	bl	117c0 <abort@plt+0x9d0>
   13694:	add	r3, sp, #4
   13698:	mov	r2, r7
   1369c:	mov	r1, r6
   136a0:	mov	r0, r5
   136a4:	bl	13148 <abort@plt+0x2358>
   136a8:	ldr	r2, [sp, #52]	; 0x34
   136ac:	ldr	r3, [r4]
   136b0:	cmp	r2, r3
   136b4:	bne	136c0 <abort@plt+0x28d0>
   136b8:	add	sp, sp, #60	; 0x3c
   136bc:	pop	{r4, r5, r6, r7, pc}
   136c0:	bl	10c64 <__stack_chk_fail@plt>
   136c4:	andeq	r5, r2, r8, lsl #30
   136c8:	mov	r2, r1
   136cc:	mov	r1, r0
   136d0:	mov	r0, #0
   136d4:	b	13614 <abort@plt+0x2824>
   136d8:	mov	r3, r2
   136dc:	mov	r2, r1
   136e0:	mov	r1, r0
   136e4:	mov	r0, #0
   136e8:	b	1366c <abort@plt+0x287c>
   136ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   136f0:	mov	r4, r2
   136f4:	ldr	lr, [pc, #128]	; 1377c <abort@plt+0x298c>
   136f8:	mov	r8, r0
   136fc:	mov	r9, r1
   13700:	ldm	lr!, {r0, r1, r2, r3}
   13704:	sub	sp, sp, #60	; 0x3c
   13708:	add	ip, sp, #4
   1370c:	lsr	r6, r4, #5
   13710:	stmia	ip!, {r0, r1, r2, r3}
   13714:	add	r7, sp, #12
   13718:	ldm	lr!, {r0, r1, r2, r3}
   1371c:	and	r4, r4, #31
   13720:	ldr	r5, [pc, #88]	; 13780 <abort@plt+0x2990>
   13724:	stmia	ip!, {r0, r1, r2, r3}
   13728:	ldm	lr, {r0, r1, r2, r3}
   1372c:	stm	ip, {r0, r1, r2, r3}
   13730:	mov	r2, r9
   13734:	ldr	r3, [r7, r6, lsl #2]
   13738:	ldr	ip, [r5]
   1373c:	mov	r1, r8
   13740:	mvn	r0, r3, lsr r4
   13744:	and	r0, r0, #1
   13748:	str	ip, [sp, #52]	; 0x34
   1374c:	eor	r4, r3, r0, lsl r4
   13750:	add	r3, sp, #4
   13754:	mov	r0, #0
   13758:	str	r4, [r7, r6, lsl #2]
   1375c:	bl	13148 <abort@plt+0x2358>
   13760:	ldr	r2, [sp, #52]	; 0x34
   13764:	ldr	r3, [r5]
   13768:	cmp	r2, r3
   1376c:	bne	13778 <abort@plt+0x2988>
   13770:	add	sp, sp, #60	; 0x3c
   13774:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13778:	bl	10c64 <__stack_chk_fail@plt>
   1377c:	andeq	r6, r2, r8, asr #4
   13780:	andeq	r5, r2, r8, lsl #30
   13784:	mov	r2, r1
   13788:	mvn	r1, #0
   1378c:	b	136ec <abort@plt+0x28fc>
   13790:	mov	r2, #58	; 0x3a
   13794:	mvn	r1, #0
   13798:	b	136ec <abort@plt+0x28fc>
   1379c:	mov	r2, #58	; 0x3a
   137a0:	b	136ec <abort@plt+0x28fc>
   137a4:	push	{r4, r5, r6, r7, r8, lr}
   137a8:	sub	sp, sp, #104	; 0x68
   137ac:	ldr	r5, [pc, #120]	; 1382c <abort@plt+0x2a3c>
   137b0:	mov	r6, r0
   137b4:	mov	r0, sp
   137b8:	ldr	r3, [r5]
   137bc:	mov	r7, r2
   137c0:	str	r3, [sp, #100]	; 0x64
   137c4:	bl	117c0 <abort@plt+0x9d0>
   137c8:	mov	ip, sp
   137cc:	add	lr, sp, #52	; 0x34
   137d0:	ldm	ip!, {r0, r1, r2, r3}
   137d4:	stmia	lr!, {r0, r1, r2, r3}
   137d8:	ldm	ip!, {r0, r1, r2, r3}
   137dc:	ldr	r8, [sp, #64]	; 0x40
   137e0:	stmia	lr!, {r0, r1, r2, r3}
   137e4:	mvn	r4, r8
   137e8:	ldm	ip, {r0, r1, r2, r3}
   137ec:	and	ip, r4, #67108864	; 0x4000000
   137f0:	eor	ip, ip, r8
   137f4:	str	ip, [sp, #64]	; 0x40
   137f8:	stm	lr, {r0, r1, r2, r3}
   137fc:	add	r3, sp, #52	; 0x34
   13800:	mvn	r2, #0
   13804:	mov	r1, r7
   13808:	mov	r0, r6
   1380c:	bl	13148 <abort@plt+0x2358>
   13810:	ldr	r2, [sp, #100]	; 0x64
   13814:	ldr	r3, [r5]
   13818:	cmp	r2, r3
   1381c:	bne	13828 <abort@plt+0x2a38>
   13820:	add	sp, sp, #104	; 0x68
   13824:	pop	{r4, r5, r6, r7, r8, pc}
   13828:	bl	10c64 <__stack_chk_fail@plt>
   1382c:	andeq	r5, r2, r8, lsl #30
   13830:	push	{r4, r5, r6, r7, r8, r9, lr}
   13834:	mov	r6, r1
   13838:	ldr	lr, [pc, #132]	; 138c4 <abort@plt+0x2ad4>
   1383c:	mov	r5, r2
   13840:	mov	r8, r0
   13844:	mov	r9, r3
   13848:	ldm	lr!, {r0, r1, r2, r3}
   1384c:	sub	sp, sp, #60	; 0x3c
   13850:	add	ip, sp, #4
   13854:	ldr	r4, [pc, #108]	; 138c8 <abort@plt+0x2ad8>
   13858:	stmia	ip!, {r0, r1, r2, r3}
   1385c:	mov	r7, #10
   13860:	ldm	lr!, {r0, r1, r2, r3}
   13864:	cmp	r5, #0
   13868:	cmpne	r6, #0
   1386c:	str	r7, [sp, #4]
   13870:	stmia	ip!, {r0, r1, r2, r3}
   13874:	ldm	lr, {r0, r1, r2, r3}
   13878:	ldr	lr, [r4]
   1387c:	stm	ip, {r0, r1, r2, r3}
   13880:	str	lr, [sp, #52]	; 0x34
   13884:	beq	138c0 <abort@plt+0x2ad0>
   13888:	add	r3, sp, #4
   1388c:	ldr	r2, [sp, #88]	; 0x58
   13890:	mov	r1, r9
   13894:	mov	r0, r8
   13898:	str	r6, [sp, #44]	; 0x2c
   1389c:	str	r5, [sp, #48]	; 0x30
   138a0:	bl	13148 <abort@plt+0x2358>
   138a4:	ldr	r2, [sp, #52]	; 0x34
   138a8:	ldr	r3, [r4]
   138ac:	cmp	r2, r3
   138b0:	bne	138bc <abort@plt+0x2acc>
   138b4:	add	sp, sp, #60	; 0x3c
   138b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   138bc:	bl	10c64 <__stack_chk_fail@plt>
   138c0:	bl	10df0 <abort@plt>
   138c4:	andeq	r6, r2, r8, asr #4
   138c8:	andeq	r5, r2, r8, lsl #30
   138cc:	push	{lr}		; (str lr, [sp, #-4]!)
   138d0:	sub	sp, sp, #12
   138d4:	mvn	ip, #0
   138d8:	str	ip, [sp]
   138dc:	bl	13830 <abort@plt+0x2a40>
   138e0:	add	sp, sp, #12
   138e4:	pop	{pc}		; (ldr pc, [sp], #4)
   138e8:	push	{lr}		; (str lr, [sp, #-4]!)
   138ec:	sub	sp, sp, #12
   138f0:	mvn	ip, #0
   138f4:	mov	r3, r2
   138f8:	str	ip, [sp]
   138fc:	mov	r2, r1
   13900:	mov	r1, r0
   13904:	mov	r0, #0
   13908:	bl	13830 <abort@plt+0x2a40>
   1390c:	add	sp, sp, #12
   13910:	pop	{pc}		; (ldr pc, [sp], #4)
   13914:	push	{lr}		; (str lr, [sp, #-4]!)
   13918:	sub	sp, sp, #12
   1391c:	str	r3, [sp]
   13920:	mov	r3, r2
   13924:	mov	r2, r1
   13928:	mov	r1, r0
   1392c:	mov	r0, #0
   13930:	bl	13830 <abort@plt+0x2a40>
   13934:	add	sp, sp, #12
   13938:	pop	{pc}		; (ldr pc, [sp], #4)
   1393c:	ldr	r3, [pc]	; 13944 <abort@plt+0x2b54>
   13940:	b	13148 <abort@plt+0x2358>
   13944:	andeq	r6, r2, r8, ror #1
   13948:	mov	r2, r1
   1394c:	ldr	r3, [pc, #8]	; 1395c <abort@plt+0x2b6c>
   13950:	mov	r1, r0
   13954:	mov	r0, #0
   13958:	b	13148 <abort@plt+0x2358>
   1395c:	andeq	r6, r2, r8, ror #1
   13960:	ldr	r3, [pc, #4]	; 1396c <abort@plt+0x2b7c>
   13964:	mvn	r2, #0
   13968:	b	13148 <abort@plt+0x2358>
   1396c:	andeq	r6, r2, r8, ror #1
   13970:	mov	r1, r0
   13974:	ldr	r3, [pc, #8]	; 13984 <abort@plt+0x2b94>
   13978:	mvn	r2, #0
   1397c:	mov	r0, #0
   13980:	b	13148 <abort@plt+0x2358>
   13984:	andeq	r6, r2, r8, ror #1
   13988:	push	{r4, r5, r6, lr}
   1398c:	sub	sp, sp, #32
   13990:	cmp	r1, #0
   13994:	mov	r5, r0
   13998:	ldr	r4, [sp, #48]	; 0x30
   1399c:	ldr	r6, [sp, #52]	; 0x34
   139a0:	beq	13a30 <abort@plt+0x2c40>
   139a4:	strd	r2, [sp]
   139a8:	mov	r3, r1
   139ac:	ldr	r2, [pc, #828]	; 13cf0 <abort@plt+0x2f00>
   139b0:	mov	r1, #1
   139b4:	bl	10d78 <__fprintf_chk@plt>
   139b8:	mov	r2, #5
   139bc:	ldr	r1, [pc, #816]	; 13cf4 <abort@plt+0x2f04>
   139c0:	mov	r0, #0
   139c4:	bl	10c58 <dcgettext@plt>
   139c8:	ldr	r3, [pc, #808]	; 13cf8 <abort@plt+0x2f08>
   139cc:	ldr	r2, [pc, #808]	; 13cfc <abort@plt+0x2f0c>
   139d0:	str	r3, [sp]
   139d4:	mov	r1, #1
   139d8:	mov	r3, r0
   139dc:	mov	r0, r5
   139e0:	bl	10d78 <__fprintf_chk@plt>
   139e4:	ldr	r1, [pc, #788]	; 13d00 <abort@plt+0x2f10>
   139e8:	mov	r2, #5
   139ec:	mov	r0, #0
   139f0:	bl	10c58 <dcgettext@plt>
   139f4:	mov	r1, r5
   139f8:	bl	10be0 <fputs_unlocked@plt>
   139fc:	cmp	r6, #9
   13a00:	ldrls	pc, [pc, r6, lsl #2]
   13a04:	b	13ce0 <abort@plt+0x2ef0>
   13a08:	andeq	r3, r1, ip, ror #25
   13a0c:			; <UNDEFINED> instruction: 0x00013ab4
   13a10:	andeq	r3, r1, r0, ror #21
   13a14:	andeq	r3, r1, r4, lsl fp
   13a18:	andeq	r3, r1, r0, asr fp
   13a1c:	muleq	r1, r0, fp
   13a20:	ldrdeq	r3, [r1], -r8
   13a24:	andeq	r3, r1, r8, lsr #24
   13a28:	andeq	r3, r1, r0, lsl #25
   13a2c:	andeq	r3, r1, r8, asr #20
   13a30:	str	r3, [sp]
   13a34:	mov	r1, #1
   13a38:	mov	r3, r2
   13a3c:	ldr	r2, [pc, #704]	; 13d04 <abort@plt+0x2f14>
   13a40:	bl	10d78 <__fprintf_chk@plt>
   13a44:	b	139b8 <abort@plt+0x2bc8>
   13a48:	ldr	r1, [pc, #696]	; 13d08 <abort@plt+0x2f18>
   13a4c:	mov	r2, #5
   13a50:	mov	r0, #0
   13a54:	bl	10c58 <dcgettext@plt>
   13a58:	ldr	r2, [r4, #32]
   13a5c:	ldr	r3, [r4, #28]
   13a60:	ldr	r1, [r4, #24]
   13a64:	str	r2, [sp, #28]
   13a68:	ldr	r2, [r4, #20]
   13a6c:	str	r3, [sp, #24]
   13a70:	ldr	r3, [r4, #16]
   13a74:	str	r1, [sp, #20]
   13a78:	ldr	r1, [r4, #12]
   13a7c:	str	r2, [sp, #16]
   13a80:	ldr	r2, [r4, #8]
   13a84:	str	r3, [sp, #12]
   13a88:	ldr	r3, [r4, #4]
   13a8c:	str	r1, [sp, #8]
   13a90:	str	r2, [sp, #4]
   13a94:	str	r3, [sp]
   13a98:	mov	r1, #1
   13a9c:	ldr	r3, [r4]
   13aa0:	mov	r2, r0
   13aa4:	mov	r0, r5
   13aa8:	bl	10d78 <__fprintf_chk@plt>
   13aac:	add	sp, sp, #32
   13ab0:	pop	{r4, r5, r6, pc}
   13ab4:	mov	r2, #5
   13ab8:	ldr	r1, [pc, #588]	; 13d0c <abort@plt+0x2f1c>
   13abc:	mov	r0, #0
   13ac0:	bl	10c58 <dcgettext@plt>
   13ac4:	ldr	r3, [r4]
   13ac8:	mov	r1, #1
   13acc:	mov	r2, r0
   13ad0:	mov	r0, r5
   13ad4:	add	sp, sp, #32
   13ad8:	pop	{r4, r5, r6, lr}
   13adc:	b	10d78 <__fprintf_chk@plt>
   13ae0:	mov	r2, #5
   13ae4:	ldr	r1, [pc, #548]	; 13d10 <abort@plt+0x2f20>
   13ae8:	mov	r0, #0
   13aec:	bl	10c58 <dcgettext@plt>
   13af0:	ldr	r2, [r4, #4]
   13af4:	ldr	r3, [r4]
   13af8:	mov	r1, #1
   13afc:	str	r2, [sp, #48]	; 0x30
   13b00:	mov	r2, r0
   13b04:	mov	r0, r5
   13b08:	add	sp, sp, #32
   13b0c:	pop	{r4, r5, r6, lr}
   13b10:	b	10d78 <__fprintf_chk@plt>
   13b14:	mov	r2, #5
   13b18:	ldr	r1, [pc, #500]	; 13d14 <abort@plt+0x2f24>
   13b1c:	mov	r0, #0
   13b20:	bl	10c58 <dcgettext@plt>
   13b24:	ldr	r2, [r4, #8]
   13b28:	ldr	r3, [r4, #4]
   13b2c:	mov	r1, #1
   13b30:	str	r2, [sp, #52]	; 0x34
   13b34:	str	r3, [sp, #48]	; 0x30
   13b38:	ldr	r3, [r4]
   13b3c:	mov	r2, r0
   13b40:	mov	r0, r5
   13b44:	add	sp, sp, #32
   13b48:	pop	{r4, r5, r6, lr}
   13b4c:	b	10d78 <__fprintf_chk@plt>
   13b50:	mov	r2, #5
   13b54:	ldr	r1, [pc, #444]	; 13d18 <abort@plt+0x2f28>
   13b58:	mov	r0, #0
   13b5c:	bl	10c58 <dcgettext@plt>
   13b60:	ldr	r1, [r4, #12]
   13b64:	ldr	r2, [r4, #8]
   13b68:	ldr	r3, [r4, #4]
   13b6c:	str	r1, [sp, #8]
   13b70:	str	r2, [sp, #4]
   13b74:	str	r3, [sp]
   13b78:	mov	r1, #1
   13b7c:	ldr	r3, [r4]
   13b80:	mov	r2, r0
   13b84:	mov	r0, r5
   13b88:	bl	10d78 <__fprintf_chk@plt>
   13b8c:	b	13aac <abort@plt+0x2cbc>
   13b90:	mov	r2, #5
   13b94:	ldr	r1, [pc, #384]	; 13d1c <abort@plt+0x2f2c>
   13b98:	mov	r0, #0
   13b9c:	bl	10c58 <dcgettext@plt>
   13ba0:	ldr	r3, [r4, #16]
   13ba4:	ldr	r1, [r4, #12]
   13ba8:	ldr	r2, [r4, #8]
   13bac:	str	r3, [sp, #12]
   13bb0:	ldr	r3, [r4, #4]
   13bb4:	str	r1, [sp, #8]
   13bb8:	str	r2, [sp, #4]
   13bbc:	str	r3, [sp]
   13bc0:	mov	r1, #1
   13bc4:	ldr	r3, [r4]
   13bc8:	mov	r2, r0
   13bcc:	mov	r0, r5
   13bd0:	bl	10d78 <__fprintf_chk@plt>
   13bd4:	b	13aac <abort@plt+0x2cbc>
   13bd8:	mov	r2, #5
   13bdc:	ldr	r1, [pc, #316]	; 13d20 <abort@plt+0x2f30>
   13be0:	mov	r0, #0
   13be4:	bl	10c58 <dcgettext@plt>
   13be8:	ldr	r2, [r4, #20]
   13bec:	ldr	r3, [r4, #16]
   13bf0:	ldr	r1, [r4, #12]
   13bf4:	str	r2, [sp, #16]
   13bf8:	ldr	r2, [r4, #8]
   13bfc:	str	r3, [sp, #12]
   13c00:	ldr	r3, [r4, #4]
   13c04:	str	r1, [sp, #8]
   13c08:	str	r2, [sp, #4]
   13c0c:	str	r3, [sp]
   13c10:	mov	r1, #1
   13c14:	ldr	r3, [r4]
   13c18:	mov	r2, r0
   13c1c:	mov	r0, r5
   13c20:	bl	10d78 <__fprintf_chk@plt>
   13c24:	b	13aac <abort@plt+0x2cbc>
   13c28:	mov	r2, #5
   13c2c:	ldr	r1, [pc, #240]	; 13d24 <abort@plt+0x2f34>
   13c30:	mov	r0, #0
   13c34:	bl	10c58 <dcgettext@plt>
   13c38:	ldr	r1, [r4, #24]
   13c3c:	ldr	r2, [r4, #20]
   13c40:	ldr	r3, [r4, #16]
   13c44:	str	r1, [sp, #20]
   13c48:	ldr	r1, [r4, #12]
   13c4c:	str	r2, [sp, #16]
   13c50:	ldr	r2, [r4, #8]
   13c54:	str	r3, [sp, #12]
   13c58:	ldr	r3, [r4, #4]
   13c5c:	str	r1, [sp, #8]
   13c60:	str	r2, [sp, #4]
   13c64:	str	r3, [sp]
   13c68:	mov	r1, #1
   13c6c:	ldr	r3, [r4]
   13c70:	mov	r2, r0
   13c74:	mov	r0, r5
   13c78:	bl	10d78 <__fprintf_chk@plt>
   13c7c:	b	13aac <abort@plt+0x2cbc>
   13c80:	mov	r2, #5
   13c84:	ldr	r1, [pc, #156]	; 13d28 <abort@plt+0x2f38>
   13c88:	mov	r0, #0
   13c8c:	bl	10c58 <dcgettext@plt>
   13c90:	ldr	r3, [r4, #28]
   13c94:	ldr	r1, [r4, #24]
   13c98:	ldr	r2, [r4, #20]
   13c9c:	str	r3, [sp, #24]
   13ca0:	ldr	r3, [r4, #16]
   13ca4:	str	r1, [sp, #20]
   13ca8:	ldr	r1, [r4, #12]
   13cac:	str	r2, [sp, #16]
   13cb0:	ldr	r2, [r4, #8]
   13cb4:	str	r3, [sp, #12]
   13cb8:	ldr	r3, [r4, #4]
   13cbc:	str	r1, [sp, #8]
   13cc0:	str	r2, [sp, #4]
   13cc4:	str	r3, [sp]
   13cc8:	mov	r1, #1
   13ccc:	ldr	r3, [r4]
   13cd0:	mov	r2, r0
   13cd4:	mov	r0, r5
   13cd8:	bl	10d78 <__fprintf_chk@plt>
   13cdc:	b	13aac <abort@plt+0x2cbc>
   13ce0:	mov	r2, #5
   13ce4:	ldr	r1, [pc, #64]	; 13d2c <abort@plt+0x2f3c>
   13ce8:	b	13a50 <abort@plt+0x2c60>
   13cec:	bl	10df0 <abort@plt>
   13cf0:	andeq	r4, r1, r4, ror #29
   13cf4:	strdeq	r4, [r1], -r8
   13cf8:	andeq	r0, r0, r2, ror #15
   13cfc:	andeq	r5, r1, ip, asr #3
   13d00:	strdeq	r4, [r1], -ip
   13d04:	strdeq	r4, [r1], -r0
   13d08:	ldrdeq	r5, [r1], -r4
   13d0c:	andeq	r4, r1, r8, asr #31
   13d10:	ldrdeq	r4, [r1], -r8
   13d14:	strdeq	r4, [r1], -r0
   13d18:	andeq	r5, r1, ip
   13d1c:	andeq	r5, r1, ip, lsr #32
   13d20:	andeq	r5, r1, r0, asr r0
   13d24:	andeq	r5, r1, r8, ror r0
   13d28:	andeq	r5, r1, r4, lsr #1
   13d2c:	andeq	r5, r1, r8, lsl #2
   13d30:	push	{r4, r5, lr}
   13d34:	sub	sp, sp, #12
   13d38:	ldr	r5, [sp, #24]
   13d3c:	ldr	ip, [r5]
   13d40:	cmp	ip, #0
   13d44:	beq	13d60 <abort@plt+0x2f70>
   13d48:	mov	lr, r5
   13d4c:	mov	ip, #0
   13d50:	ldr	r4, [lr, #4]!
   13d54:	add	ip, ip, #1
   13d58:	cmp	r4, #0
   13d5c:	bne	13d50 <abort@plt+0x2f60>
   13d60:	stm	sp, {r5, ip}
   13d64:	bl	13988 <abort@plt+0x2b98>
   13d68:	add	sp, sp, #12
   13d6c:	pop	{r4, r5, pc}
   13d70:	push	{r4, r5, r6, lr}
   13d74:	sub	sp, sp, #56	; 0x38
   13d78:	ldr	r6, [pc, #88]	; 13dd8 <abort@plt+0x2fe8>
   13d7c:	ldr	r5, [sp, #72]	; 0x48
   13d80:	add	r4, sp, #8
   13d84:	ldr	ip, [r6]
   13d88:	str	ip, [sp, #52]	; 0x34
   13d8c:	mov	ip, #0
   13d90:	ldr	lr, [r5], #4
   13d94:	cmp	lr, #0
   13d98:	str	lr, [r4, #4]!
   13d9c:	beq	13dac <abort@plt+0x2fbc>
   13da0:	add	ip, ip, #1
   13da4:	cmp	ip, #10
   13da8:	bne	13d90 <abort@plt+0x2fa0>
   13dac:	add	lr, sp, #12
   13db0:	str	ip, [sp, #4]
   13db4:	str	lr, [sp]
   13db8:	bl	13988 <abort@plt+0x2b98>
   13dbc:	ldr	r2, [sp, #52]	; 0x34
   13dc0:	ldr	r3, [r6]
   13dc4:	cmp	r2, r3
   13dc8:	bne	13dd4 <abort@plt+0x2fe4>
   13dcc:	add	sp, sp, #56	; 0x38
   13dd0:	pop	{r4, r5, r6, pc}
   13dd4:	bl	10c64 <__stack_chk_fail@plt>
   13dd8:	andeq	r5, r2, r8, lsl #30
   13ddc:	push	{r3}		; (str r3, [sp, #-4]!)
   13de0:	mov	ip, #0
   13de4:	push	{r4, r5, r6, lr}
   13de8:	sub	sp, sp, #60	; 0x3c
   13dec:	ldr	r6, [pc, #100]	; 13e58 <abort@plt+0x3068>
   13df0:	add	r5, sp, #8
   13df4:	add	r4, sp, #80	; 0x50
   13df8:	ldr	r3, [r6]
   13dfc:	str	r4, [sp, #8]
   13e00:	str	r3, [sp, #52]	; 0x34
   13e04:	ldr	r3, [sp, #76]	; 0x4c
   13e08:	ldr	lr, [r4], #4
   13e0c:	cmp	lr, #0
   13e10:	str	lr, [r5, #4]!
   13e14:	beq	13e24 <abort@plt+0x3034>
   13e18:	add	ip, ip, #1
   13e1c:	cmp	ip, #10
   13e20:	bne	13e08 <abort@plt+0x3018>
   13e24:	add	lr, sp, #12
   13e28:	str	ip, [sp, #4]
   13e2c:	str	lr, [sp]
   13e30:	bl	13988 <abort@plt+0x2b98>
   13e34:	ldr	r2, [sp, #52]	; 0x34
   13e38:	ldr	r3, [r6]
   13e3c:	cmp	r2, r3
   13e40:	bne	13e54 <abort@plt+0x3064>
   13e44:	add	sp, sp, #60	; 0x3c
   13e48:	pop	{r4, r5, r6, lr}
   13e4c:	add	sp, sp, #4
   13e50:	bx	lr
   13e54:	bl	10c64 <__stack_chk_fail@plt>
   13e58:	andeq	r5, r2, r8, lsl #30
   13e5c:	push	{r4, lr}
   13e60:	mov	r2, #5
   13e64:	ldr	r1, [pc, #88]	; 13ec4 <abort@plt+0x30d4>
   13e68:	mov	r0, #0
   13e6c:	bl	10c58 <dcgettext@plt>
   13e70:	ldr	r2, [pc, #80]	; 13ec8 <abort@plt+0x30d8>
   13e74:	mov	r1, r0
   13e78:	mov	r0, #1
   13e7c:	bl	10d60 <__printf_chk@plt>
   13e80:	mov	r2, #5
   13e84:	ldr	r1, [pc, #64]	; 13ecc <abort@plt+0x30dc>
   13e88:	mov	r0, #0
   13e8c:	bl	10c58 <dcgettext@plt>
   13e90:	ldr	r3, [pc, #56]	; 13ed0 <abort@plt+0x30e0>
   13e94:	ldr	r2, [pc, #56]	; 13ed4 <abort@plt+0x30e4>
   13e98:	mov	r1, r0
   13e9c:	mov	r0, #1
   13ea0:	bl	10d60 <__printf_chk@plt>
   13ea4:	ldr	r1, [pc, #44]	; 13ed8 <abort@plt+0x30e8>
   13ea8:	mov	r2, #5
   13eac:	mov	r0, #0
   13eb0:	bl	10c58 <dcgettext@plt>
   13eb4:	ldr	r3, [pc, #32]	; 13edc <abort@plt+0x30ec>
   13eb8:	pop	{r4, lr}
   13ebc:	ldr	r1, [r3]
   13ec0:	b	10be0 <fputs_unlocked@plt>
   13ec4:	andeq	r5, r1, r4, asr #2
   13ec8:	andeq	r5, r1, ip, asr r1
   13ecc:	andeq	r5, r1, r4, ror r1
   13ed0:	andeq	r4, r1, r8, lsr #23
   13ed4:	ldrdeq	r4, [r1], -r0
   13ed8:	andeq	r5, r1, r8, lsl #3
   13edc:	andeq	r6, r2, ip, lsr #2
   13ee0:	push	{r4, lr}
   13ee4:	mov	r4, r0
   13ee8:	bl	10cdc <malloc@plt>
   13eec:	adds	r4, r4, #0
   13ef0:	movne	r4, #1
   13ef4:	cmp	r0, #0
   13ef8:	movne	r4, #0
   13efc:	cmp	r4, #0
   13f00:	popeq	{r4, pc}
   13f04:	bl	14128 <abort@plt+0x3338>
   13f08:	push	{r4, r5, r6, lr}
   13f0c:	umull	r4, r5, r0, r1
   13f10:	adds	r3, r5, #0
   13f14:	movne	r3, #1
   13f18:	cmp	r4, #0
   13f1c:	blt	13f34 <abort@plt+0x3144>
   13f20:	cmp	r3, #0
   13f24:	bne	13f34 <abort@plt+0x3144>
   13f28:	mul	r0, r1, r0
   13f2c:	pop	{r4, r5, r6, lr}
   13f30:	b	13ee0 <abort@plt+0x30f0>
   13f34:	bl	14128 <abort@plt+0x3338>
   13f38:	b	13ee0 <abort@plt+0x30f0>
   13f3c:	adds	r3, r0, #0
   13f40:	movne	r3, #1
   13f44:	cmp	r1, #0
   13f48:	movne	r3, #0
   13f4c:	cmp	r3, #0
   13f50:	push	{r4, lr}
   13f54:	bne	13f7c <abort@plt+0x318c>
   13f58:	mov	r4, r1
   13f5c:	bl	10c70 <realloc@plt>
   13f60:	adds	r4, r4, #0
   13f64:	movne	r4, #1
   13f68:	cmp	r0, #0
   13f6c:	movne	r4, #0
   13f70:	cmp	r4, #0
   13f74:	popeq	{r4, pc}
   13f78:	bl	14128 <abort@plt+0x3338>
   13f7c:	bl	10c10 <free@plt>
   13f80:	mov	r0, #0
   13f84:	pop	{r4, pc}
   13f88:	push	{r4, r5, r6, lr}
   13f8c:	umull	r4, r5, r1, r2
   13f90:	adds	r3, r5, #0
   13f94:	movne	r3, #1
   13f98:	cmp	r4, #0
   13f9c:	blt	13fb4 <abort@plt+0x31c4>
   13fa0:	cmp	r3, #0
   13fa4:	bne	13fb4 <abort@plt+0x31c4>
   13fa8:	mul	r1, r2, r1
   13fac:	pop	{r4, r5, r6, lr}
   13fb0:	b	13f3c <abort@plt+0x314c>
   13fb4:	bl	14128 <abort@plt+0x3338>
   13fb8:	push	{r4, r5, r6, r7, r8, lr}
   13fbc:	subs	r7, r0, #0
   13fc0:	mov	r6, r1
   13fc4:	mov	r5, r2
   13fc8:	ldr	r4, [r1]
   13fcc:	beq	14000 <abort@plt+0x3210>
   13fd0:	mov	r1, r2
   13fd4:	ldr	r0, [pc, #104]	; 14044 <abort@plt+0x3254>
   13fd8:	bl	1468c <abort@plt+0x389c>
   13fdc:	cmp	r0, r4
   13fe0:	bls	14024 <abort@plt+0x3234>
   13fe4:	add	r3, r4, #1
   13fe8:	add	r4, r3, r4, lsr #1
   13fec:	str	r4, [r6]
   13ff0:	mul	r1, r5, r4
   13ff4:	mov	r0, r7
   13ff8:	pop	{r4, r5, r6, r7, r8, lr}
   13ffc:	b	13f3c <abort@plt+0x314c>
   14000:	cmp	r4, #0
   14004:	beq	14028 <abort@plt+0x3238>
   14008:	umull	r0, r1, r4, r5
   1400c:	adds	r3, r1, #0
   14010:	movne	r3, #1
   14014:	cmp	r0, #0
   14018:	blt	14024 <abort@plt+0x3234>
   1401c:	cmp	r3, #0
   14020:	beq	13fec <abort@plt+0x31fc>
   14024:	bl	14128 <abort@plt+0x3338>
   14028:	mov	r1, r2
   1402c:	mov	r0, #64	; 0x40
   14030:	bl	1468c <abort@plt+0x389c>
   14034:	cmp	r5, #64	; 0x40
   14038:	movls	r4, r0
   1403c:	addhi	r4, r0, #1
   14040:	b	14008 <abort@plt+0x3218>
   14044:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14048:	cmp	r0, #0
   1404c:	ldr	r3, [r1]
   14050:	beq	14074 <abort@plt+0x3284>
   14054:	ldr	r2, [pc, #60]	; 14098 <abort@plt+0x32a8>
   14058:	cmp	r3, r2
   1405c:	bhi	14090 <abort@plt+0x32a0>
   14060:	add	r2, r3, #1
   14064:	add	r3, r2, r3, lsr #1
   14068:	str	r3, [r1]
   1406c:	mov	r1, r3
   14070:	b	13f3c <abort@plt+0x314c>
   14074:	cmp	r3, #0
   14078:	bne	1408c <abort@plt+0x329c>
   1407c:	mov	r3, #64	; 0x40
   14080:	str	r3, [r1]
   14084:	mov	r1, r3
   14088:	b	13f3c <abort@plt+0x314c>
   1408c:	bge	14068 <abort@plt+0x3278>
   14090:	push	{r4, lr}
   14094:	bl	14128 <abort@plt+0x3338>
   14098:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   1409c:	push	{r4, lr}
   140a0:	mov	r4, r0
   140a4:	bl	13ee0 <abort@plt+0x30f0>
   140a8:	mov	r2, r4
   140ac:	mov	r1, #0
   140b0:	pop	{r4, lr}
   140b4:	b	10d54 <memset@plt>
   140b8:	push	{r4, r5, r6, lr}
   140bc:	umull	r4, r5, r0, r1
   140c0:	adds	r3, r5, #0
   140c4:	movne	r3, #1
   140c8:	cmp	r4, #0
   140cc:	blt	140e4 <abort@plt+0x32f4>
   140d0:	cmp	r3, #0
   140d4:	bne	140e4 <abort@plt+0x32f4>
   140d8:	bl	10bd4 <calloc@plt>
   140dc:	cmp	r0, #0
   140e0:	popne	{r4, r5, r6, pc}
   140e4:	bl	14128 <abort@plt+0x3338>
   140e8:	push	{r4, r5, r6, lr}
   140ec:	mov	r4, r1
   140f0:	mov	r5, r0
   140f4:	mov	r0, r1
   140f8:	bl	13ee0 <abort@plt+0x30f0>
   140fc:	mov	r2, r4
   14100:	mov	r1, r5
   14104:	pop	{r4, r5, r6, lr}
   14108:	b	10c34 <memcpy@plt>
   1410c:	push	{r4, lr}
   14110:	mov	r4, r0
   14114:	bl	10d30 <strlen@plt>
   14118:	add	r1, r0, #1
   1411c:	mov	r0, r4
   14120:	pop	{r4, lr}
   14124:	b	140e8 <abort@plt+0x32f8>
   14128:	ldr	r3, [pc, #44]	; 1415c <abort@plt+0x336c>
   1412c:	push	{r4, lr}
   14130:	mov	r2, #5
   14134:	ldr	r1, [pc, #36]	; 14160 <abort@plt+0x3370>
   14138:	mov	r0, #0
   1413c:	ldr	r4, [r3]
   14140:	bl	10c58 <dcgettext@plt>
   14144:	ldr	r2, [pc, #24]	; 14164 <abort@plt+0x3374>
   14148:	mov	r1, #0
   1414c:	mov	r3, r0
   14150:	mov	r0, r4
   14154:	bl	10cd0 <error@plt>
   14158:	bl	10df0 <abort@plt>
   1415c:	ldrdeq	r6, [r2], -r4
   14160:	strdeq	r5, [r1], -ip
   14164:	andeq	r4, r1, r0, lsl #27
   14168:	push	{r4, r5, r6, lr}
   1416c:	sub	sp, sp, #16
   14170:	ldr	r6, [pc, #100]	; 141dc <abort@plt+0x33ec>
   14174:	add	r0, sp, #4
   14178:	mov	r5, #0
   1417c:	ldr	r3, [r6]
   14180:	str	r3, [sp, #12]
   14184:	bl	143a0 <abort@plt+0x35b0>
   14188:	bl	10d3c <__errno_location@plt>
   1418c:	mov	r4, r0
   14190:	b	141a0 <abort@plt+0x33b0>
   14194:	ldr	r3, [r4]
   14198:	bics	r3, r3, #4
   1419c:	bne	141d0 <abort@plt+0x33e0>
   141a0:	str	r5, [r4]
   141a4:	mov	r1, #0
   141a8:	add	r0, sp, #4
   141ac:	bl	10c1c <nanosleep@plt>
   141b0:	cmp	r0, #0
   141b4:	bne	14194 <abort@plt+0x33a4>
   141b8:	ldr	r2, [sp, #12]
   141bc:	ldr	r3, [r6]
   141c0:	cmp	r2, r3
   141c4:	bne	141d8 <abort@plt+0x33e8>
   141c8:	add	sp, sp, #16
   141cc:	pop	{r4, r5, r6, pc}
   141d0:	mvn	r0, #0
   141d4:	b	141b8 <abort@plt+0x33c8>
   141d8:	bl	10c64 <__stack_chk_fail@plt>
   141dc:	andeq	r5, r2, r8, lsl #30
   141e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   141e4:	mov	r5, r1
   141e8:	ldr	r6, [pc, #184]	; 142a8 <abort@plt+0x34b8>
   141ec:	sub	sp, sp, #8
   141f0:	mov	r7, r0
   141f4:	ldr	r1, [r6]
   141f8:	mov	sl, r3
   141fc:	mov	r9, r2
   14200:	str	r1, [sp, #4]
   14204:	bl	10d3c <__errno_location@plt>
   14208:	mov	r4, #0
   1420c:	mov	r1, sp
   14210:	str	r4, [r0]
   14214:	mov	r8, r0
   14218:	mov	r0, r7
   1421c:	blx	sl
   14220:	ldr	r3, [sp]
   14224:	cmp	r3, r7
   14228:	beq	1429c <abort@plt+0x34ac>
   1422c:	cmp	r5, r4
   14230:	beq	14278 <abort@plt+0x3488>
   14234:	vcmp.f64	d0, #0.0
   14238:	vmrs	APSR_nzcv, fpscr
   1423c:	moveq	r0, #1
   14240:	beq	14258 <abort@plt+0x3468>
   14244:	ldr	r0, [r8]
   14248:	subs	r0, r0, #34	; 0x22
   1424c:	movne	r0, #1
   14250:	cmp	r5, #0
   14254:	beq	1425c <abort@plt+0x346c>
   14258:	str	r3, [r5]
   1425c:	ldr	r2, [sp, #4]
   14260:	ldr	r3, [r6]
   14264:	vstr	d0, [r9]
   14268:	cmp	r2, r3
   1426c:	bne	142a4 <abort@plt+0x34b4>
   14270:	add	sp, sp, #8
   14274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14278:	ldrb	r2, [r3]
   1427c:	cmp	r2, r4
   14280:	movne	r0, r5
   14284:	bne	1425c <abort@plt+0x346c>
   14288:	vcmp.f64	d0, #0.0
   1428c:	vmrs	APSR_nzcv, fpscr
   14290:	moveq	r0, #1
   14294:	bne	14244 <abort@plt+0x3454>
   14298:	b	1425c <abort@plt+0x346c>
   1429c:	mov	r0, r4
   142a0:	b	14250 <abort@plt+0x3460>
   142a4:	bl	10c64 <__stack_chk_fail@plt>
   142a8:	andeq	r5, r2, r8, lsl #30
   142ac:	push	{r4, r5, r6, r7, r8, lr}
   142b0:	subs	r7, r0, #0
   142b4:	ldr	r5, [pc, #108]	; 14328 <abort@plt+0x3538>
   142b8:	sub	sp, sp, #8
   142bc:	mov	r8, r1
   142c0:	ldr	r1, [r5]
   142c4:	moveq	r7, sp
   142c8:	str	r1, [sp, #4]
   142cc:	mov	r0, r7
   142d0:	mov	r1, r8
   142d4:	mov	r6, r2
   142d8:	bl	10cc4 <mbrtowc@plt>
   142dc:	cmp	r6, #0
   142e0:	cmnne	r0, #3
   142e4:	mov	r4, r0
   142e8:	bhi	14308 <abort@plt+0x3518>
   142ec:	ldr	r2, [sp, #4]
   142f0:	ldr	r3, [r5]
   142f4:	mov	r0, r4
   142f8:	cmp	r2, r3
   142fc:	bne	14324 <abort@plt+0x3534>
   14300:	add	sp, sp, #8
   14304:	pop	{r4, r5, r6, r7, r8, pc}
   14308:	mov	r0, #0
   1430c:	bl	1446c <abort@plt+0x367c>
   14310:	cmp	r0, #0
   14314:	moveq	r4, #1
   14318:	ldrbeq	r3, [r8]
   1431c:	streq	r3, [r7]
   14320:	b	142ec <abort@plt+0x34fc>
   14324:	bl	10c64 <__stack_chk_fail@plt>
   14328:	andeq	r5, r2, r8, lsl #30
   1432c:	push	{r4, r5, r6, lr}
   14330:	mov	r4, r0
   14334:	bl	10cb8 <__fpending@plt>
   14338:	ldr	r5, [r4]
   1433c:	and	r5, r5, #32
   14340:	mov	r6, r0
   14344:	mov	r0, r4
   14348:	bl	144ec <abort@plt+0x36fc>
   1434c:	cmp	r5, #0
   14350:	mov	r4, r0
   14354:	bne	14380 <abort@plt+0x3590>
   14358:	cmp	r0, #0
   1435c:	beq	14378 <abort@plt+0x3588>
   14360:	cmp	r6, #0
   14364:	bne	14398 <abort@plt+0x35a8>
   14368:	bl	10d3c <__errno_location@plt>
   1436c:	ldr	r4, [r0]
   14370:	subs	r4, r4, #9
   14374:	mvnne	r4, #0
   14378:	mov	r0, r4
   1437c:	pop	{r4, r5, r6, pc}
   14380:	cmp	r0, #0
   14384:	bne	14398 <abort@plt+0x35a8>
   14388:	bl	10d3c <__errno_location@plt>
   1438c:	str	r4, [r0]
   14390:	mvn	r4, #0
   14394:	b	14378 <abort@plt+0x3588>
   14398:	mvn	r4, #0
   1439c:	b	14378 <abort@plt+0x3588>
   143a0:	vldr	d7, [pc, #160]	; 14448 <abort@plt+0x3658>
   143a4:	vcmpe.f64	d0, d7
   143a8:	vmrs	APSR_nzcv, fpscr
   143ac:	ble	14438 <abort@plt+0x3648>
   143b0:	vldr	d7, [pc, #152]	; 14450 <abort@plt+0x3660>
   143b4:	vcmpe.f64	d0, d7
   143b8:	vmrs	APSR_nzcv, fpscr
   143bc:	bmi	143d0 <abort@plt+0x35e0>
   143c0:	ldr	r3, [pc, #152]	; 14460 <abort@plt+0x3670>
   143c4:	mvn	r2, #-2147483648	; 0x80000000
   143c8:	strd	r2, [r0]
   143cc:	bx	lr
   143d0:	vcvt.s32.f64	s15, d0
   143d4:	vldr	d6, [pc, #124]	; 14458 <abort@plt+0x3668>
   143d8:	ldr	r2, [pc, #132]	; 14464 <abort@plt+0x3674>
   143dc:	ldr	ip, [pc, #132]	; 14468 <abort@plt+0x3678>
   143e0:	vcvt.f64.s32	d5, s15
   143e4:	vsub.f64	d0, d0, d5
   143e8:	vmul.f64	d0, d0, d6
   143ec:	vcvt.s32.f64	s14, d0
   143f0:	vcvt.f64.s32	d6, s14
   143f4:	vmov	r1, s14
   143f8:	vcmpe.f64	d6, d0
   143fc:	vmrs	APSR_nzcv, fpscr
   14400:	movmi	r3, #1
   14404:	movpl	r3, #0
   14408:	add	r3, r3, r1
   1440c:	smull	r2, r1, r2, r3
   14410:	asr	r2, r3, #31
   14414:	rsb	r2, r2, r1, asr #28
   14418:	vmov	r1, s15
   1441c:	add	r1, r2, r1
   14420:	mul	r2, ip, r2
   14424:	subs	r3, r3, r2
   14428:	submi	r1, r1, #1
   1442c:	addmi	r3, r3, ip
   14430:	stm	r0, {r1, r3}
   14434:	bx	lr
   14438:	mov	r2, #-2147483648	; 0x80000000
   1443c:	mov	r3, #0
   14440:	strd	r2, [r0]
   14444:	bx	lr
   14448:	andeq	r0, r0, r0
   1444c:	mvngt	r0, r0
   14450:	andeq	r0, r0, r0
   14454:	mvnmi	r0, r0
   14458:	andeq	r0, r0, r0
   1445c:	bicmi	ip, sp, r5, ror #26
   14460:	blcc	fe6c6c64 <opterr@@GLIBC_2.4+0xfe6a0b34>
   14464:	ldrtmi	r2, [r8], #4001	; 0xfa1
   14468:	blcc	fe6c6c70 <opterr@@GLIBC_2.4+0xfe6a0b40>
   1446c:	push	{r4, lr}
   14470:	mov	r1, #0
   14474:	bl	10da8 <setlocale@plt>
   14478:	subs	r4, r0, #0
   1447c:	beq	144a8 <abort@plt+0x36b8>
   14480:	ldr	r1, [pc, #40]	; 144b0 <abort@plt+0x36c0>
   14484:	bl	10bf8 <strcmp@plt>
   14488:	cmp	r0, #0
   1448c:	popeq	{r4, pc}
   14490:	mov	r0, r4
   14494:	ldr	r1, [pc, #24]	; 144b4 <abort@plt+0x36c4>
   14498:	bl	10bf8 <strcmp@plt>
   1449c:	adds	r0, r0, #0
   144a0:	movne	r0, #1
   144a4:	pop	{r4, pc}
   144a8:	mov	r0, #1
   144ac:	pop	{r4, pc}
   144b0:	andeq	r4, r1, ip, ror #26
   144b4:	andeq	r5, r1, r0, lsl r2
   144b8:	push	{r4, lr}
   144bc:	mov	r0, #14
   144c0:	bl	10dc0 <nl_langinfo@plt>
   144c4:	cmp	r0, #0
   144c8:	beq	144e0 <abort@plt+0x36f0>
   144cc:	ldrb	r2, [r0]
   144d0:	ldr	r3, [pc, #16]	; 144e8 <abort@plt+0x36f8>
   144d4:	cmp	r2, #0
   144d8:	moveq	r0, r3
   144dc:	pop	{r4, pc}
   144e0:	ldr	r0, [pc]	; 144e8 <abort@plt+0x36f8>
   144e4:	pop	{r4, pc}
   144e8:	andeq	r5, r1, r8, lsl r2
   144ec:	push	{r4, r5, lr}
   144f0:	sub	sp, sp, #12
   144f4:	mov	r4, r0
   144f8:	bl	10d6c <fileno@plt>
   144fc:	cmp	r0, #0
   14500:	mov	r0, r4
   14504:	blt	14580 <abort@plt+0x3790>
   14508:	bl	10cf4 <__freading@plt>
   1450c:	cmp	r0, #0
   14510:	bne	1454c <abort@plt+0x375c>
   14514:	mov	r0, r4
   14518:	bl	1458c <abort@plt+0x379c>
   1451c:	cmp	r0, #0
   14520:	beq	1457c <abort@plt+0x378c>
   14524:	bl	10d3c <__errno_location@plt>
   14528:	mov	r5, r0
   1452c:	mov	r0, r4
   14530:	ldr	r4, [r5]
   14534:	bl	10d84 <fclose@plt>
   14538:	cmp	r4, #0
   1453c:	mvnne	r0, #0
   14540:	strne	r4, [r5]
   14544:	add	sp, sp, #12
   14548:	pop	{r4, r5, pc}
   1454c:	mov	r0, r4
   14550:	bl	10d6c <fileno@plt>
   14554:	mov	r3, #1
   14558:	str	r3, [sp]
   1455c:	mov	r2, #0
   14560:	mov	r3, #0
   14564:	bl	10ca0 <lseek64@plt>
   14568:	mvn	r3, #0
   1456c:	mvn	r2, #0
   14570:	cmp	r1, r3
   14574:	cmpeq	r0, r2
   14578:	bne	14514 <abort@plt+0x3724>
   1457c:	mov	r0, r4
   14580:	add	sp, sp, #12
   14584:	pop	{r4, r5, lr}
   14588:	b	10d84 <fclose@plt>
   1458c:	push	{r4, lr}
   14590:	subs	r4, r0, #0
   14594:	sub	sp, sp, #8
   14598:	beq	145b4 <abort@plt+0x37c4>
   1459c:	bl	10cf4 <__freading@plt>
   145a0:	cmp	r0, #0
   145a4:	beq	145b4 <abort@plt+0x37c4>
   145a8:	ldr	r3, [r4]
   145ac:	tst	r3, #256	; 0x100
   145b0:	bne	145c4 <abort@plt+0x37d4>
   145b4:	mov	r0, r4
   145b8:	add	sp, sp, #8
   145bc:	pop	{r4, lr}
   145c0:	b	10c04 <fflush@plt>
   145c4:	mov	r3, #1
   145c8:	str	r3, [sp]
   145cc:	mov	r2, #0
   145d0:	mov	r3, #0
   145d4:	mov	r0, r4
   145d8:	bl	145ec <abort@plt+0x37fc>
   145dc:	mov	r0, r4
   145e0:	add	sp, sp, #8
   145e4:	pop	{r4, lr}
   145e8:	b	10c04 <fflush@plt>
   145ec:	push	{r4, r5, r6, r7, r8, lr}
   145f0:	sub	sp, sp, #8
   145f4:	ldmib	r0, {ip, lr}
   145f8:	mov	r4, r0
   145fc:	ldr	r5, [sp, #32]
   14600:	cmp	lr, ip
   14604:	beq	1461c <abort@plt+0x382c>
   14608:	str	r5, [sp, #32]
   1460c:	mov	r0, r4
   14610:	add	sp, sp, #8
   14614:	pop	{r4, r5, r6, r7, r8, lr}
   14618:	b	10d90 <fseeko64@plt>
   1461c:	ldr	lr, [r0, #20]
   14620:	ldr	ip, [r0, #16]
   14624:	cmp	lr, ip
   14628:	bne	14608 <abort@plt+0x3818>
   1462c:	ldr	r8, [r0, #36]	; 0x24
   14630:	cmp	r8, #0
   14634:	bne	14608 <abort@plt+0x3818>
   14638:	mov	r6, r2
   1463c:	mov	r7, r3
   14640:	bl	10d6c <fileno@plt>
   14644:	mov	r2, r6
   14648:	mov	r3, r7
   1464c:	str	r5, [sp]
   14650:	bl	10ca0 <lseek64@plt>
   14654:	mvn	r3, #0
   14658:	mvn	r2, #0
   1465c:	cmp	r1, r3
   14660:	cmpeq	r0, r2
   14664:	beq	14684 <abort@plt+0x3894>
   14668:	ldr	r3, [r4]
   1466c:	strd	r0, [r4, #80]	; 0x50
   14670:	mov	r0, r8
   14674:	bic	r3, r3, #16
   14678:	str	r3, [r4]
   1467c:	add	sp, sp, #8
   14680:	pop	{r4, r5, r6, r7, r8, pc}
   14684:	mvn	r0, #0
   14688:	b	1467c <abort@plt+0x388c>
   1468c:	subs	r2, r1, #1
   14690:	bxeq	lr
   14694:	bcc	1486c <abort@plt+0x3a7c>
   14698:	cmp	r0, r1
   1469c:	bls	14850 <abort@plt+0x3a60>
   146a0:	tst	r1, r2
   146a4:	beq	1485c <abort@plt+0x3a6c>
   146a8:	clz	r3, r0
   146ac:	clz	r2, r1
   146b0:	sub	r3, r2, r3
   146b4:	rsbs	r3, r3, #31
   146b8:	addne	r3, r3, r3, lsl #1
   146bc:	mov	r2, #0
   146c0:	addne	pc, pc, r3, lsl #2
   146c4:	nop			; (mov r0, r0)
   146c8:	cmp	r0, r1, lsl #31
   146cc:	adc	r2, r2, r2
   146d0:	subcs	r0, r0, r1, lsl #31
   146d4:	cmp	r0, r1, lsl #30
   146d8:	adc	r2, r2, r2
   146dc:	subcs	r0, r0, r1, lsl #30
   146e0:	cmp	r0, r1, lsl #29
   146e4:	adc	r2, r2, r2
   146e8:	subcs	r0, r0, r1, lsl #29
   146ec:	cmp	r0, r1, lsl #28
   146f0:	adc	r2, r2, r2
   146f4:	subcs	r0, r0, r1, lsl #28
   146f8:	cmp	r0, r1, lsl #27
   146fc:	adc	r2, r2, r2
   14700:	subcs	r0, r0, r1, lsl #27
   14704:	cmp	r0, r1, lsl #26
   14708:	adc	r2, r2, r2
   1470c:	subcs	r0, r0, r1, lsl #26
   14710:	cmp	r0, r1, lsl #25
   14714:	adc	r2, r2, r2
   14718:	subcs	r0, r0, r1, lsl #25
   1471c:	cmp	r0, r1, lsl #24
   14720:	adc	r2, r2, r2
   14724:	subcs	r0, r0, r1, lsl #24
   14728:	cmp	r0, r1, lsl #23
   1472c:	adc	r2, r2, r2
   14730:	subcs	r0, r0, r1, lsl #23
   14734:	cmp	r0, r1, lsl #22
   14738:	adc	r2, r2, r2
   1473c:	subcs	r0, r0, r1, lsl #22
   14740:	cmp	r0, r1, lsl #21
   14744:	adc	r2, r2, r2
   14748:	subcs	r0, r0, r1, lsl #21
   1474c:	cmp	r0, r1, lsl #20
   14750:	adc	r2, r2, r2
   14754:	subcs	r0, r0, r1, lsl #20
   14758:	cmp	r0, r1, lsl #19
   1475c:	adc	r2, r2, r2
   14760:	subcs	r0, r0, r1, lsl #19
   14764:	cmp	r0, r1, lsl #18
   14768:	adc	r2, r2, r2
   1476c:	subcs	r0, r0, r1, lsl #18
   14770:	cmp	r0, r1, lsl #17
   14774:	adc	r2, r2, r2
   14778:	subcs	r0, r0, r1, lsl #17
   1477c:	cmp	r0, r1, lsl #16
   14780:	adc	r2, r2, r2
   14784:	subcs	r0, r0, r1, lsl #16
   14788:	cmp	r0, r1, lsl #15
   1478c:	adc	r2, r2, r2
   14790:	subcs	r0, r0, r1, lsl #15
   14794:	cmp	r0, r1, lsl #14
   14798:	adc	r2, r2, r2
   1479c:	subcs	r0, r0, r1, lsl #14
   147a0:	cmp	r0, r1, lsl #13
   147a4:	adc	r2, r2, r2
   147a8:	subcs	r0, r0, r1, lsl #13
   147ac:	cmp	r0, r1, lsl #12
   147b0:	adc	r2, r2, r2
   147b4:	subcs	r0, r0, r1, lsl #12
   147b8:	cmp	r0, r1, lsl #11
   147bc:	adc	r2, r2, r2
   147c0:	subcs	r0, r0, r1, lsl #11
   147c4:	cmp	r0, r1, lsl #10
   147c8:	adc	r2, r2, r2
   147cc:	subcs	r0, r0, r1, lsl #10
   147d0:	cmp	r0, r1, lsl #9
   147d4:	adc	r2, r2, r2
   147d8:	subcs	r0, r0, r1, lsl #9
   147dc:	cmp	r0, r1, lsl #8
   147e0:	adc	r2, r2, r2
   147e4:	subcs	r0, r0, r1, lsl #8
   147e8:	cmp	r0, r1, lsl #7
   147ec:	adc	r2, r2, r2
   147f0:	subcs	r0, r0, r1, lsl #7
   147f4:	cmp	r0, r1, lsl #6
   147f8:	adc	r2, r2, r2
   147fc:	subcs	r0, r0, r1, lsl #6
   14800:	cmp	r0, r1, lsl #5
   14804:	adc	r2, r2, r2
   14808:	subcs	r0, r0, r1, lsl #5
   1480c:	cmp	r0, r1, lsl #4
   14810:	adc	r2, r2, r2
   14814:	subcs	r0, r0, r1, lsl #4
   14818:	cmp	r0, r1, lsl #3
   1481c:	adc	r2, r2, r2
   14820:	subcs	r0, r0, r1, lsl #3
   14824:	cmp	r0, r1, lsl #2
   14828:	adc	r2, r2, r2
   1482c:	subcs	r0, r0, r1, lsl #2
   14830:	cmp	r0, r1, lsl #1
   14834:	adc	r2, r2, r2
   14838:	subcs	r0, r0, r1, lsl #1
   1483c:	cmp	r0, r1
   14840:	adc	r2, r2, r2
   14844:	subcs	r0, r0, r1
   14848:	mov	r0, r2
   1484c:	bx	lr
   14850:	moveq	r0, #1
   14854:	movne	r0, #0
   14858:	bx	lr
   1485c:	clz	r2, r1
   14860:	rsb	r2, r2, #31
   14864:	lsr	r0, r0, r2
   14868:	bx	lr
   1486c:	cmp	r0, #0
   14870:	mvnne	r0, #0
   14874:	b	14898 <abort@plt+0x3aa8>
   14878:	cmp	r1, #0
   1487c:	beq	1486c <abort@plt+0x3a7c>
   14880:	push	{r0, r1, lr}
   14884:	bl	1468c <abort@plt+0x389c>
   14888:	pop	{r1, r2, lr}
   1488c:	mul	r3, r2, r0
   14890:	sub	r1, r1, r3
   14894:	bx	lr
   14898:	push	{r1, lr}
   1489c:	mov	r0, #8
   148a0:	bl	10bec <raise@plt>
   148a4:	pop	{r1, pc}
   148a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148ac:	mov	r7, r0
   148b0:	ldr	r6, [pc, #72]	; 14900 <abort@plt+0x3b10>
   148b4:	ldr	r5, [pc, #72]	; 14904 <abort@plt+0x3b14>
   148b8:	add	r6, pc, r6
   148bc:	add	r5, pc, r5
   148c0:	sub	r6, r6, r5
   148c4:	mov	r8, r1
   148c8:	mov	r9, r2
   148cc:	bl	10bb4 <calloc@plt-0x20>
   148d0:	asrs	r6, r6, #2
   148d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   148d8:	mov	r4, #0
   148dc:	add	r4, r4, #1
   148e0:	ldr	r3, [r5], #4
   148e4:	mov	r2, r9
   148e8:	mov	r1, r8
   148ec:	mov	r0, r7
   148f0:	blx	r3
   148f4:	cmp	r6, r4
   148f8:	bne	148dc <abort@plt+0x3aec>
   148fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14900:	andeq	r1, r1, r4, asr #12
   14904:	andeq	r1, r1, ip, lsr r6
   14908:	bx	lr
   1490c:	ldr	r3, [pc, #12]	; 14920 <abort@plt+0x3b30>
   14910:	mov	r1, #0
   14914:	add	r3, pc, r3
   14918:	ldr	r2, [r3]
   1491c:	b	10d48 <__cxa_atexit@plt>
   14920:			; <UNDEFINED> instruction: 0x000117b0

Disassembly of section .fini:

00014924 <.fini>:
   14924:	push	{r3, lr}
   14928:	pop	{r3, pc}
