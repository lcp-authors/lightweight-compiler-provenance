
raspbian-preinstalled/systemd-notify:     file format elf32-littlearm


Disassembly of section .init:

00000a90 <.init>:
 a90:	push	{r3, lr}
 a94:	bl	1594 <log_oom_internal@plt+0x94c>
 a98:	pop	{r3, pc}

Disassembly of section .plt:

00000a9c <version@plt-0x14>:
 a9c:	push	{lr}		; (str lr, [sp, #-4]!)
 aa0:	ldr	lr, [pc, #4]	; aac <version@plt-0x4>
 aa4:	add	lr, pc, lr
 aa8:	ldr	pc, [lr, #8]!
 aac:	andeq	r1, r1, r8, lsl #9

00000ab0 <version@plt>:
 ab0:	add	ip, pc, #0, 12
 ab4:	add	ip, ip, #69632	; 0x11000
 ab8:	ldr	pc, [ip, #1160]!	; 0x488

00000abc <free@plt>:
 abc:	add	ip, pc, #0, 12
 ac0:	add	ip, ip, #69632	; 0x11000
 ac4:	ldr	pc, [ip, #1152]!	; 0x480

00000ac8 <log_open@plt>:
 ac8:	add	ip, pc, #0, 12
 acc:	add	ip, ip, #69632	; 0x11000
 ad0:	ldr	pc, [ip, #1144]!	; 0x478

00000ad4 <log_assert_failed_unreachable_realm@plt>:
 ad4:	add	ip, pc, #0, 12
 ad8:	add	ip, ip, #69632	; 0x11000
 adc:	ldr	pc, [ip, #1136]!	; 0x470

00000ae0 <getppid@plt>:
 ae0:	add	ip, pc, #0, 12
 ae4:	add	ip, ip, #69632	; 0x11000
 ae8:	ldr	pc, [ip, #1128]!	; 0x468

00000aec <ask_password_agent_close@plt>:
 aec:	add	ip, pc, #0, 12
 af0:	add	ip, ip, #69632	; 0x11000
 af4:	ldr	pc, [ip, #1120]!	; 0x460

00000af8 <polkit_agent_close@plt>:
 af8:	add	ip, pc, #0, 12
 afc:	add	ip, ip, #69632	; 0x11000
 b00:	ldr	pc, [ip, #1112]!	; 0x458

00000b04 <mac_selinux_finish@plt>:
 b04:	add	ip, pc, #0, 12
 b08:	add	ip, ip, #69632	; 0x11000
 b0c:	ldr	pc, [ip, #1104]!	; 0x450

00000b10 <get_user_creds@plt>:
 b10:	add	ip, pc, #0, 12
 b14:	add	ip, ip, #69632	; 0x11000
 b18:	ldr	pc, [ip, #1096]!	; 0x448

00000b1c <log_get_max_level_realm@plt>:
 b1c:	add	ip, pc, #0, 12
 b20:	add	ip, ip, #69632	; 0x11000
 b24:	ldr	pc, [ip, #1088]!	; 0x440

00000b28 <setreuid@plt>:
 b28:	add	ip, pc, #0, 12
 b2c:	add	ip, ip, #69632	; 0x11000
 b30:	ldr	pc, [ip, #1080]!	; 0x438

00000b34 <abort@plt>:
 b34:	add	ip, pc, #0, 12
 b38:	add	ip, ip, #69632	; 0x11000
 b3c:	ldr	pc, [ip, #1072]!	; 0x430

00000b40 <__stack_chk_fail@plt>:
 b40:	add	ip, pc, #0, 12
 b44:	add	ip, ip, #69632	; 0x11000
 b48:	ldr	pc, [ip, #1064]!	; 0x428

00000b4c <terminal_urlify_man@plt>:
 b4c:	add	ip, pc, #0, 12
 b50:	add	ip, ip, #69632	; 0x11000
 b54:	ldr	pc, [ip, #1056]!	; 0x420

00000b58 <strappend@plt>:
 b58:	add	ip, pc, #0, 12
 b5c:	add	ip, ip, #69632	; 0x11000
 b60:	ldr	pc, [ip, #1048]!	; 0x418

00000b64 <__asprintf_chk@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #69632	; 0x11000
 b6c:	ldr	pc, [ip, #1040]!	; 0x410

00000b70 <getopt_long@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #69632	; 0x11000
 b78:	ldr	pc, [ip, #1032]!	; 0x408

00000b7c <parse_uid@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #69632	; 0x11000
 b84:	ldr	pc, [ip, #1024]!	; 0x400

00000b88 <pager_close@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #69632	; 0x11000
 b90:	ldr	pc, [ip, #1016]!	; 0x3f8

00000b94 <log_parse_environment_realm@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #69632	; 0x11000
 b9c:	ldr	pc, [ip, #1008]!	; 0x3f0

00000ba0 <strv_env_merge@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #69632	; 0x11000
 ba8:	ldr	pc, [ip, #1000]!	; 0x3e8

00000bac <__errno_location@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #69632	; 0x11000
 bb4:	ldr	pc, [ip, #992]!	; 0x3e0

00000bb8 <parse_pid@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #69632	; 0x11000
 bc0:	ldr	pc, [ip, #984]!	; 0x3d8

00000bc4 <setregid@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #69632	; 0x11000
 bcc:	ldr	pc, [ip, #976]!	; 0x3d0

00000bd0 <log_assert_failed_realm@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #69632	; 0x11000
 bd8:	ldr	pc, [ip, #968]!	; 0x3c8

00000bdc <log_internal_realm@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #69632	; 0x11000
 be4:	ldr	pc, [ip, #960]!	; 0x3c0

00000be8 <strv_free@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #69632	; 0x11000
 bf0:	ldr	pc, [ip, #952]!	; 0x3b8

00000bf4 <__libc_start_main@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #69632	; 0x11000
 bfc:	ldr	pc, [ip, #944]!	; 0x3b0

00000c00 <__gmon_start__@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #69632	; 0x11000
 c08:	ldr	pc, [ip, #936]!	; 0x3a8

00000c0c <sd_booted@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #69632	; 0x11000
 c14:	ldr	pc, [ip, #928]!	; 0x3a0

00000c18 <__cxa_finalize@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #69632	; 0x11000
 c20:	ldr	pc, [ip, #920]!	; 0x398

00000c24 <strv_join_prefix@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #69632	; 0x11000
 c2c:	ldr	pc, [ip, #912]!	; 0x390

00000c30 <sd_pid_notify@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #69632	; 0x11000
 c38:	ldr	pc, [ip, #904]!	; 0x388

00000c3c <__printf_chk@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #69632	; 0x11000
 c44:	ldr	pc, [ip, #896]!	; 0x380

00000c48 <log_oom_internal@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #69632	; 0x11000
 c50:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00000c54 <.text>:
     c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c58:	sub	sp, sp, #68	; 0x44
     c5c:	ldr	r5, [pc, #2012]	; 1440 <log_oom_internal@plt+0x7f8>
     c60:	ldr	r3, [pc, #2012]	; 1444 <log_oom_internal@plt+0x7fc>
     c64:	add	r5, pc, r5
     c68:	mov	r4, #0
     c6c:	ldr	r3, [r5, r3]
     c70:	mov	r7, r0
     c74:	str	r3, [sp, #20]
     c78:	ldr	r3, [r3]
     c7c:	mov	r0, r4
     c80:	mov	r6, r1
     c84:	str	r3, [sp, #60]	; 0x3c
     c88:	str	r4, [sp, #36]	; 0x24
     c8c:	bl	b94 <log_parse_environment_realm@plt>
     c90:	bl	ac8 <log_open@plt>
     c94:	cmp	r7, r4
     c98:	blt	11b8 <log_oom_internal@plt+0x570>
     c9c:	cmp	r6, #0
     ca0:	beq	11e4 <log_oom_internal@plt+0x59c>
     ca4:	ldr	sl, [pc, #1948]	; 1448 <log_oom_internal@plt+0x800>
     ca8:	ldr	r3, [pc, #1948]	; 144c <log_oom_internal@plt+0x804>
     cac:	ldr	r9, [pc, #1948]	; 1450 <log_oom_internal@plt+0x808>
     cb0:	ldr	r8, [pc, #1948]	; 1454 <log_oom_internal@plt+0x80c>
     cb4:	add	sl, pc, sl
     cb8:	add	r3, pc, r3
     cbc:	add	fp, sl, #4
     cc0:	add	r9, pc, r9
     cc4:	add	r8, pc, r8
     cc8:	add	r3, r3, #4
     ccc:	str	r3, [sp, #24]
     cd0:	mov	r4, #0
     cd4:	str	r4, [sp]
     cd8:	mov	r3, r9
     cdc:	mov	r2, r8
     ce0:	mov	r1, r6
     ce4:	mov	r0, r7
     ce8:	bl	b70 <getopt_long@plt>
     cec:	cmp	r0, #0
     cf0:	blt	1154 <log_oom_internal@plt+0x50c>
     cf4:	ldr	r3, [pc, #1884]	; 1458 <log_oom_internal@plt+0x810>
     cf8:	cmp	r0, r3
     cfc:	beq	1118 <log_oom_internal@plt+0x4d0>
     d00:	ble	dd4 <log_oom_internal@plt+0x18c>
     d04:	ldr	r3, [pc, #1872]	; 145c <log_oom_internal@plt+0x814>
     d08:	cmp	r0, r3
     d0c:	beq	10fc <log_oom_internal@plt+0x4b4>
     d10:	blt	107c <log_oom_internal@plt+0x434>
     d14:	cmp	r0, #260	; 0x104
     d18:	beq	e2c <log_oom_internal@plt+0x1e4>
     d1c:	add	r3, r3, #2
     d20:	cmp	r0, r3
     d24:	bne	dec <log_oom_internal@plt+0x1a4>
     d28:	ldr	r2, [pc, #1840]	; 1460 <log_oom_internal@plt+0x818>
     d2c:	add	r0, sp, #64	; 0x40
     d30:	mov	r3, r4
     d34:	ldr	r2, [r5, r2]
     d38:	str	r4, [sp, #4]
     d3c:	mov	r1, r2
     d40:	str	r2, [sp, #28]
     d44:	ldr	r1, [r1]
     d48:	mov	r2, sl
     d4c:	str	r4, [sp]
     d50:	str	r1, [r0, #-24]!	; 0xffffffe8
     d54:	mov	r1, fp
     d58:	bl	b10 <get_user_creds@plt>
     d5c:	cmn	r0, #3
     d60:	beq	1220 <log_oom_internal@plt+0x5d8>
     d64:	cmp	r0, #0
     d68:	bge	cd0 <log_oom_internal@plt+0x88>
     d6c:	mov	r4, r0
     d70:	mov	r0, #0
     d74:	bl	b1c <log_get_max_level_realm@plt>
     d78:	cmp	r0, #2
     d7c:	rsble	r7, r4, #0
     d80:	uxtble	r7, r7
     d84:	rsble	r7, r7, #0
     d88:	ble	ed8 <log_oom_internal@plt+0x290>
     d8c:	ldr	r2, [sp, #28]
     d90:	ldr	r3, [pc, #1740]	; 1464 <log_oom_internal@plt+0x81c>
     d94:	mov	r0, #3
     d98:	ldr	r1, [r2]
     d9c:	ldr	r2, [pc, #1732]	; 1468 <log_oom_internal@plt+0x820>
     da0:	add	r3, pc, r3
     da4:	add	r2, pc, r2
     da8:	str	r2, [sp, #4]
     dac:	ldr	r2, [pc, #1720]	; 146c <log_oom_internal@plt+0x824>
     db0:	add	r3, r3, #20
     db4:	str	r1, [sp, #8]
     db8:	str	r3, [sp]
     dbc:	mov	r1, r4
     dc0:	mov	r3, #122	; 0x7a
     dc4:	add	r2, pc, r2
     dc8:	bl	bdc <log_internal_realm@plt>
     dcc:	mov	r7, r0
     dd0:	b	ed8 <log_oom_internal@plt+0x290>
     dd4:	cmp	r0, #104	; 0x68
     dd8:	beq	ed0 <log_oom_internal@plt+0x288>
     ddc:	cmp	r0, #256	; 0x100
     de0:	beq	e18 <log_oom_internal@plt+0x1d0>
     de4:	cmp	r0, #63	; 0x3f
     de8:	beq	e40 <log_oom_internal@plt+0x1f8>
     dec:	ldr	r2, [pc, #1660]	; 1470 <log_oom_internal@plt+0x828>
     df0:	ldr	r1, [pc, #1660]	; 1474 <log_oom_internal@plt+0x82c>
     df4:	add	r2, pc, r2
     df8:	add	r2, r2, #8
     dfc:	str	r2, [sp]
     e00:	ldr	r2, [pc, #1648]	; 1478 <log_oom_internal@plt+0x830>
     e04:	mov	r3, #131	; 0x83
     e08:	add	r2, pc, r2
     e0c:	add	r1, pc, r1
     e10:	mov	r0, #0
     e14:	bl	ad4 <log_assert_failed_unreachable_realm@plt>
     e18:	ldr	r3, [pc, #1628]	; 147c <log_oom_internal@plt+0x834>
     e1c:	mov	r2, #1
     e20:	add	r3, pc, r3
     e24:	strb	r2, [r3]
     e28:	b	cd0 <log_oom_internal@plt+0x88>
     e2c:	ldr	r3, [pc, #1612]	; 1480 <log_oom_internal@plt+0x838>
     e30:	mov	r2, #1
     e34:	add	r3, pc, r3
     e38:	strb	r2, [r3, #12]
     e3c:	b	cd0 <log_oom_internal@plt+0x88>
     e40:	mvn	r7, #21
     e44:	mov	r4, #0
     e48:	mov	r8, r4
     e4c:	mov	r0, r8
     e50:	bl	abc <free@plt>
     e54:	ldr	r0, [sp, #36]	; 0x24
     e58:	bl	abc <free@plt>
     e5c:	mov	r0, r4
     e60:	bl	abc <free@plt>
     e64:	ldr	r3, [pc, #1560]	; 1484 <log_oom_internal@plt+0x83c>
     e68:	ldr	r4, [r5, r3]
     e6c:	cmp	r4, #0
     e70:	beq	ea0 <log_oom_internal@plt+0x258>
     e74:	ldr	r3, [pc, #1548]	; 1488 <log_oom_internal@plt+0x840>
     e78:	add	r4, r4, #3
     e7c:	bic	r4, r4, #3
     e80:	ldr	r5, [r5, r3]
     e84:	cmp	r4, r5
     e88:	bcs	ea0 <log_oom_internal@plt+0x258>
     e8c:	ldm	r4, {r0, r3}
     e90:	add	r4, r4, #8
     e94:	blx	r3
     e98:	cmp	r4, r5
     e9c:	bcc	e8c <log_oom_internal@plt+0x244>
     ea0:	bl	aec <ask_password_agent_close@plt>
     ea4:	bl	af8 <polkit_agent_close@plt>
     ea8:	bl	b04 <mac_selinux_finish@plt>
     eac:	bl	b88 <pager_close@plt>
     eb0:	ldr	r3, [sp, #20]
     eb4:	ldr	r2, [sp, #60]	; 0x3c
     eb8:	lsr	r0, r7, #31
     ebc:	ldr	r3, [r3]
     ec0:	cmp	r2, r3
     ec4:	bne	1428 <log_oom_internal@plt+0x7e0>
     ec8:	add	sp, sp, #68	; 0x44
     ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ed0:	bl	16b8 <log_oom_internal@plt+0xa70>
     ed4:	mov	r7, r0
     ed8:	cmp	r7, #0
     edc:	ble	e44 <log_oom_internal@plt+0x1fc>
     ee0:	ldr	r3, [pc, #1444]	; 148c <log_oom_internal@plt+0x844>
     ee4:	add	r3, pc, r3
     ee8:	ldrb	r2, [r3, #12]
     eec:	cmp	r2, #0
     ef0:	bne	1194 <log_oom_internal@plt+0x54c>
     ef4:	ldrb	r3, [r3]
     ef8:	cmp	r3, #0
     efc:	bne	112c <log_oom_internal@plt+0x4e4>
     f00:	mov	r7, #0
     f04:	ldr	r3, [pc, #1412]	; 1490 <log_oom_internal@plt+0x848>
     f08:	add	r3, pc, r3
     f0c:	ldr	r1, [r3, #8]
     f10:	cmp	r1, #0
     f14:	beq	11b0 <log_oom_internal@plt+0x568>
     f18:	ldr	r0, [pc, #1396]	; 1494 <log_oom_internal@plt+0x84c>
     f1c:	add	r0, pc, r0
     f20:	bl	b58 <strappend@plt>
     f24:	subs	r8, r0, #0
     f28:	beq	1324 <log_oom_internal@plt+0x6dc>
     f2c:	add	r3, sp, #64	; 0x40
     f30:	add	r3, r3, r7, lsl #2
     f34:	mov	r4, r8
     f38:	add	r7, r7, #1
     f3c:	str	r8, [r3, #-20]	; 0xffffffec
     f40:	ldr	r3, [pc, #1360]	; 1498 <log_oom_internal@plt+0x850>
     f44:	add	r3, pc, r3
     f48:	ldr	r3, [r3, #4]
     f4c:	cmp	r3, #0
     f50:	ble	f84 <log_oom_internal@plt+0x33c>
     f54:	ldr	r2, [pc, #1344]	; 149c <log_oom_internal@plt+0x854>
     f58:	mov	r1, #1
     f5c:	add	r2, pc, r2
     f60:	add	r0, sp, #36	; 0x24
     f64:	bl	b64 <__asprintf_chk@plt>
     f68:	cmp	r0, #0
     f6c:	blt	12f8 <log_oom_internal@plt+0x6b0>
     f70:	add	r3, sp, #64	; 0x40
     f74:	add	r3, r3, r7, lsl #2
     f78:	ldr	r2, [sp, #36]	; 0x24
     f7c:	add	r7, r7, #1
     f80:	str	r2, [r3, #-20]	; 0xffffffec
     f84:	add	r2, sp, #64	; 0x40
     f88:	ldr	r3, [pc, #1296]	; 14a0 <log_oom_internal@plt+0x858>
     f8c:	add	r7, r2, r7, lsl #2
     f90:	mov	r9, #0
     f94:	str	r9, [r7, #-20]	; 0xffffffec
     f98:	ldr	r3, [r5, r3]
     f9c:	mov	r0, #2
     fa0:	add	r1, sp, #44	; 0x2c
     fa4:	ldr	r2, [r3]
     fa8:	add	r2, r6, r2, lsl r0
     fac:	bl	ba0 <strv_env_merge@plt>
     fb0:	subs	r6, r0, #0
     fb4:	beq	12d0 <log_oom_internal@plt+0x688>
     fb8:	ldr	r7, [r6]
     fbc:	cmp	r7, #0
     fc0:	beq	1210 <log_oom_internal@plt+0x5c8>
     fc4:	ldr	r1, [pc, #1240]	; 14a4 <log_oom_internal@plt+0x85c>
     fc8:	mov	r2, r9
     fcc:	add	r1, pc, r1
     fd0:	bl	c24 <strv_join_prefix@plt>
     fd4:	subs	r8, r0, #0
     fd8:	beq	13a4 <log_oom_internal@plt+0x75c>
     fdc:	ldr	r3, [pc, #1220]	; 14a8 <log_oom_internal@plt+0x860>
     fe0:	ldr	r0, [pc, r3]
     fe4:	cmn	r0, #1
     fe8:	bne	1230 <log_oom_internal@plt+0x5e8>
     fec:	ldr	r3, [pc, #1208]	; 14ac <log_oom_internal@plt+0x864>
     ff0:	add	r3, pc, r3
     ff4:	ldr	r0, [r3, #4]
     ff8:	cmn	r0, #1
     ffc:	bne	126c <log_oom_internal@plt+0x624>
    1000:	ldr	r3, [pc, #1192]	; 14b0 <log_oom_internal@plt+0x868>
    1004:	add	r3, pc, r3
    1008:	ldr	r0, [r3, #4]
    100c:	cmp	r0, #0
    1010:	bne	1018 <log_oom_internal@plt+0x3d0>
    1014:	bl	ae0 <getppid@plt>
    1018:	mov	r2, r8
    101c:	mov	r1, #0
    1020:	bl	c30 <sd_pid_notify@plt>
    1024:	subs	r7, r0, #0
    1028:	blt	134c <log_oom_internal@plt+0x704>
    102c:	movne	r7, #0
    1030:	bne	1214 <log_oom_internal@plt+0x5cc>
    1034:	bl	b1c <log_get_max_level_realm@plt>
    1038:	cmp	r0, #2
    103c:	ble	142c <log_oom_internal@plt+0x7e4>
    1040:	ldr	r2, [pc, #1132]	; 14b4 <log_oom_internal@plt+0x86c>
    1044:	ldr	r3, [pc, #1132]	; 14b8 <log_oom_internal@plt+0x870>
    1048:	add	r2, pc, r2
    104c:	str	r2, [sp, #4]
    1050:	add	r3, pc, r3
    1054:	ldr	r2, [pc, #1120]	; 14bc <log_oom_internal@plt+0x874>
    1058:	add	r3, r3, #32
    105c:	str	r3, [sp]
    1060:	add	r2, pc, r2
    1064:	mov	r3, #212	; 0xd4
    1068:	ldr	r1, [pc, #1104]	; 14c0 <log_oom_internal@plt+0x878>
    106c:	mov	r0, #3
    1070:	bl	bdc <log_internal_realm@plt>
    1074:	mov	r7, r0
    1078:	b	1214 <log_oom_internal@plt+0x5cc>
    107c:	ldr	r3, [pc, #988]	; 1460 <log_oom_internal@plt+0x818>
    1080:	ldr	r3, [r5, r3]
    1084:	str	r3, [sp, #28]
    1088:	ldr	r0, [r3]
    108c:	cmp	r0, #0
    1090:	beq	1140 <log_oom_internal@plt+0x4f8>
    1094:	ldr	r1, [sp, #24]
    1098:	bl	bb8 <parse_pid@plt>
    109c:	cmp	r0, #0
    10a0:	bge	cd0 <log_oom_internal@plt+0x88>
    10a4:	mov	r0, r4
    10a8:	bl	b1c <log_get_max_level_realm@plt>
    10ac:	cmp	r0, #2
    10b0:	ble	1434 <log_oom_internal@plt+0x7ec>
    10b4:	ldr	r2, [sp, #28]
    10b8:	ldr	r3, [pc, #1028]	; 14c4 <log_oom_internal@plt+0x87c>
    10bc:	mov	r0, #3
    10c0:	ldr	r1, [r2]
    10c4:	ldr	r2, [pc, #1020]	; 14c8 <log_oom_internal@plt+0x880>
    10c8:	add	r3, pc, r3
    10cc:	add	r2, pc, r2
    10d0:	str	r2, [sp, #4]
    10d4:	ldr	r2, [pc, #1008]	; 14cc <log_oom_internal@plt+0x884>
    10d8:	add	r3, r3, #20
    10dc:	str	r1, [sp, #8]
    10e0:	str	r3, [sp]
    10e4:	add	r2, pc, r2
    10e8:	mov	r3, #101	; 0x65
    10ec:	mov	r1, #1073741846	; 0x40000016
    10f0:	bl	bdc <log_internal_realm@plt>
    10f4:	mov	r7, r0
    10f8:	b	ed8 <log_oom_internal@plt+0x290>
    10fc:	ldr	r3, [pc, #860]	; 1460 <log_oom_internal@plt+0x818>
    1100:	ldr	r2, [pc, #968]	; 14d0 <log_oom_internal@plt+0x888>
    1104:	ldr	r3, [r5, r3]
    1108:	add	r2, pc, r2
    110c:	ldr	r3, [r3]
    1110:	str	r3, [r2, #8]
    1114:	b	cd0 <log_oom_internal@plt+0x88>
    1118:	bl	ab0 <version@plt>
    111c:	mov	r7, r0
    1120:	b	ed8 <log_oom_internal@plt+0x290>
    1124:	cmp	r4, #0
    1128:	bne	1194 <log_oom_internal@plt+0x54c>
    112c:	ldr	r3, [pc, #928]	; 14d4 <log_oom_internal@plt+0x88c>
    1130:	mov	r7, #1
    1134:	add	r3, pc, r3
    1138:	str	r3, [sp, #44]	; 0x2c
    113c:	b	f04 <log_oom_internal@plt+0x2bc>
    1140:	bl	ae0 <getppid@plt>
    1144:	ldr	r3, [pc, #908]	; 14d8 <log_oom_internal@plt+0x890>
    1148:	add	r3, pc, r3
    114c:	str	r0, [r3, #4]
    1150:	b	cd0 <log_oom_internal@plt+0x88>
    1154:	ldr	r3, [pc, #836]	; 14a0 <log_oom_internal@plt+0x858>
    1158:	ldr	r3, [r5, r3]
    115c:	ldr	r3, [r3]
    1160:	cmp	r7, r3
    1164:	bgt	ee0 <log_oom_internal@plt+0x298>
    1168:	ldr	r3, [pc, #876]	; 14dc <log_oom_internal@plt+0x894>
    116c:	add	r3, pc, r3
    1170:	ldrb	r2, [r3]
    1174:	ldrb	r4, [r3, #12]
    1178:	cmp	r2, #0
    117c:	bne	1124 <log_oom_internal@plt+0x4dc>
    1180:	ldr	r2, [r3, #8]
    1184:	cmp	r2, #0
    1188:	beq	13c8 <log_oom_internal@plt+0x780>
    118c:	cmp	r4, #0
    1190:	beq	f00 <log_oom_internal@plt+0x2b8>
    1194:	bl	c0c <sd_booted@plt>
    1198:	mov	r4, #0
    119c:	mov	r8, r4
    11a0:	cmp	r0, r4
    11a4:	movgt	r7, #0
    11a8:	movle	r7, #1
    11ac:	b	e4c <log_oom_internal@plt+0x204>
    11b0:	mov	r4, r1
    11b4:	b	f40 <log_oom_internal@plt+0x2f8>
    11b8:	ldr	r3, [pc, #800]	; 14e0 <log_oom_internal@plt+0x898>
    11bc:	ldr	r2, [pc, #800]	; 14e4 <log_oom_internal@plt+0x89c>
    11c0:	add	r3, pc, r3
    11c4:	ldr	r1, [pc, #796]	; 14e8 <log_oom_internal@plt+0x8a0>
    11c8:	add	r3, r3, #8
    11cc:	str	r3, [sp]
    11d0:	mov	r0, r4
    11d4:	mov	r3, #79	; 0x4f
    11d8:	add	r2, pc, r2
    11dc:	add	r1, pc, r1
    11e0:	bl	bd0 <log_assert_failed_realm@plt>
    11e4:	ldr	r3, [pc, #768]	; 14ec <log_oom_internal@plt+0x8a4>
    11e8:	ldr	r2, [pc, #768]	; 14f0 <log_oom_internal@plt+0x8a8>
    11ec:	add	r3, pc, r3
    11f0:	ldr	r1, [pc, #764]	; 14f4 <log_oom_internal@plt+0x8ac>
    11f4:	add	r3, r3, #8
    11f8:	str	r3, [sp]
    11fc:	mov	r0, r6
    1200:	mov	r3, #80	; 0x50
    1204:	add	r2, pc, r2
    1208:	add	r1, pc, r1
    120c:	bl	bd0 <log_assert_failed_realm@plt>
    1210:	mov	r8, r7
    1214:	mov	r0, r6
    1218:	bl	be8 <strv_free@plt>
    121c:	b	e4c <log_oom_internal@plt+0x204>
    1220:	mov	r1, fp
    1224:	ldr	r0, [sp, #40]	; 0x28
    1228:	bl	b7c <parse_uid@plt>
    122c:	b	d64 <log_oom_internal@plt+0x11c>
    1230:	mvn	r1, #0
    1234:	bl	bc4 <setregid@plt>
    1238:	cmp	r0, #0
    123c:	bge	fec <log_oom_internal@plt+0x3a4>
    1240:	bl	bac <__errno_location@plt>
    1244:	ldr	r7, [r0]
    1248:	mov	r0, r9
    124c:	bl	b1c <log_get_max_level_realm@plt>
    1250:	cmp	r0, #2
    1254:	bgt	13ec <log_oom_internal@plt+0x7a4>
    1258:	cmp	r7, #0
    125c:	rsblt	r7, r7, #0
    1260:	uxtb	r7, r7
    1264:	rsb	r7, r7, #0
    1268:	b	1214 <log_oom_internal@plt+0x5cc>
    126c:	mvn	r1, #0
    1270:	bl	b28 <setreuid@plt>
    1274:	cmp	r0, #0
    1278:	bge	1000 <log_oom_internal@plt+0x3b8>
    127c:	bl	bac <__errno_location@plt>
    1280:	ldr	r7, [r0]
    1284:	mov	r0, #0
    1288:	bl	b1c <log_get_max_level_realm@plt>
    128c:	cmp	r0, #2
    1290:	ble	1258 <log_oom_internal@plt+0x610>
    1294:	ldr	r2, [pc, #604]	; 14f8 <log_oom_internal@plt+0x8b0>
    1298:	ldr	r3, [pc, #604]	; 14fc <log_oom_internal@plt+0x8b4>
    129c:	add	r2, pc, r2
    12a0:	str	r2, [sp, #4]
    12a4:	add	r3, pc, r3
    12a8:	ldr	r2, [pc, #592]	; 1500 <log_oom_internal@plt+0x8b8>
    12ac:	add	r3, r3, #32
    12b0:	mov	r1, r7
    12b4:	str	r3, [sp]
    12b8:	add	r2, pc, r2
    12bc:	mov	r3, #205	; 0xcd
    12c0:	mov	r0, #3
    12c4:	bl	bdc <log_internal_realm@plt>
    12c8:	mov	r7, r0
    12cc:	b	1214 <log_oom_internal@plt+0x5cc>
    12d0:	ldr	r3, [pc, #556]	; 1504 <log_oom_internal@plt+0x8bc>
    12d4:	ldr	r1, [pc, #556]	; 1508 <log_oom_internal@plt+0x8c0>
    12d8:	add	r3, pc, r3
    12dc:	mov	r2, #186	; 0xba
    12e0:	add	r3, r3, #32
    12e4:	add	r1, pc, r1
    12e8:	bl	c48 <log_oom_internal@plt>
    12ec:	mov	r8, r6
    12f0:	mov	r7, r0
    12f4:	b	e4c <log_oom_internal@plt+0x204>
    12f8:	ldr	r3, [pc, #524]	; 150c <log_oom_internal@plt+0x8c4>
    12fc:	ldr	r1, [pc, #524]	; 1510 <log_oom_internal@plt+0x8c8>
    1300:	add	r3, pc, r3
    1304:	mov	r2, #177	; 0xb1
    1308:	add	r3, r3, #32
    130c:	add	r1, pc, r1
    1310:	mov	r0, #0
    1314:	bl	c48 <log_oom_internal@plt>
    1318:	mov	r8, #0
    131c:	mov	r7, r0
    1320:	b	e4c <log_oom_internal@plt+0x204>
    1324:	ldr	r3, [pc, #488]	; 1514 <log_oom_internal@plt+0x8cc>
    1328:	ldr	r1, [pc, #488]	; 1518 <log_oom_internal@plt+0x8d0>
    132c:	add	r3, pc, r3
    1330:	mov	r2, #170	; 0xaa
    1334:	add	r3, r3, #32
    1338:	add	r1, pc, r1
    133c:	bl	c48 <log_oom_internal@plt>
    1340:	mov	r4, r8
    1344:	mov	r7, r0
    1348:	b	e4c <log_oom_internal@plt+0x204>
    134c:	mov	r0, #0
    1350:	bl	b1c <log_get_max_level_realm@plt>
    1354:	cmp	r0, #2
    1358:	rsble	r7, r7, #0
    135c:	uxtble	r7, r7
    1360:	rsble	r7, r7, #0
    1364:	ble	1214 <log_oom_internal@plt+0x5cc>
    1368:	ldr	r2, [pc, #428]	; 151c <log_oom_internal@plt+0x8d4>
    136c:	ldr	r3, [pc, #428]	; 1520 <log_oom_internal@plt+0x8d8>
    1370:	add	r2, pc, r2
    1374:	str	r2, [sp, #4]
    1378:	add	r3, pc, r3
    137c:	ldr	r2, [pc, #416]	; 1524 <log_oom_internal@plt+0x8dc>
    1380:	add	r3, r3, #32
    1384:	mov	r1, r7
    1388:	str	r3, [sp]
    138c:	add	r2, pc, r2
    1390:	mov	r3, #209	; 0xd1
    1394:	mov	r0, #3
    1398:	bl	bdc <log_internal_realm@plt>
    139c:	mov	r7, r0
    13a0:	b	1214 <log_oom_internal@plt+0x5cc>
    13a4:	ldr	r3, [pc, #380]	; 1528 <log_oom_internal@plt+0x8e0>
    13a8:	ldr	r1, [pc, #380]	; 152c <log_oom_internal@plt+0x8e4>
    13ac:	add	r3, pc, r3
    13b0:	mov	r2, #193	; 0xc1
    13b4:	add	r3, r3, #32
    13b8:	add	r1, pc, r1
    13bc:	bl	c48 <log_oom_internal@plt>
    13c0:	mov	r7, r0
    13c4:	b	1214 <log_oom_internal@plt+0x5cc>
    13c8:	ldr	r3, [r3, #4]
    13cc:	cmp	r3, #0
    13d0:	bne	118c <log_oom_internal@plt+0x544>
    13d4:	cmp	r4, #0
    13d8:	bne	1194 <log_oom_internal@plt+0x54c>
    13dc:	bl	16b8 <log_oom_internal@plt+0xa70>
    13e0:	mov	r8, r4
    13e4:	mvn	r7, #21
    13e8:	b	e4c <log_oom_internal@plt+0x204>
    13ec:	ldr	r2, [pc, #316]	; 1530 <log_oom_internal@plt+0x8e8>
    13f0:	ldr	r3, [pc, #316]	; 1534 <log_oom_internal@plt+0x8ec>
    13f4:	add	r2, pc, r2
    13f8:	str	r2, [sp, #4]
    13fc:	add	r3, pc, r3
    1400:	ldr	r2, [pc, #304]	; 1538 <log_oom_internal@plt+0x8f0>
    1404:	add	r3, r3, #32
    1408:	mov	r1, r7
    140c:	str	r3, [sp]
    1410:	add	r2, pc, r2
    1414:	mov	r3, #201	; 0xc9
    1418:	mov	r0, #3
    141c:	bl	bdc <log_internal_realm@plt>
    1420:	mov	r7, r0
    1424:	b	1214 <log_oom_internal@plt+0x5cc>
    1428:	bl	b40 <__stack_chk_fail@plt>
    142c:	mvn	r7, #94	; 0x5e
    1430:	b	1214 <log_oom_internal@plt+0x5cc>
    1434:	mov	r8, r4
    1438:	mvn	r7, #21
    143c:	b	e4c <log_oom_internal@plt+0x204>
    1440:	andeq	r1, r1, r8, asr #5
    1444:	muleq	r0, r8, r0
    1448:	andeq	r1, r1, r8, asr #6
    144c:	andeq	r1, r1, r0, asr r3
    1450:	ldrdeq	r1, [r1], -ip
    1454:			; <UNDEFINED> instruction: 0x00000db8
    1458:	andeq	r0, r0, r1, lsl #2
    145c:	andeq	r0, r0, r3, lsl #2
    1460:	andeq	r0, r0, r4, lsr #1
    1464:	andeq	r0, r0, r0, asr sl
    1468:	andeq	r0, r0, r8, lsr #25
    146c:	andeq	r0, r0, r4, ror #20
    1470:	strdeq	r0, [r0], -ip
    1474:	andeq	r0, r0, ip, asr ip
    1478:	andeq	r0, r0, r0, lsr #20
    147c:	andeq	r1, r1, r8, ror #3
    1480:	ldrdeq	r1, [r1], -r4
    1484:	andeq	r0, r0, r8, lsr #1
    1488:	andeq	r0, r0, ip, lsr #1
    148c:	andeq	r1, r1, r4, lsr #2
    1490:	andeq	r1, r1, r0, lsl #2
    1494:	andeq	r0, r0, ip, ror #22
    1498:	andeq	r1, r1, r4, asr #1
    149c:	andeq	r0, r0, r4, lsr fp
    14a0:	muleq	r0, ip, r0
    14a4:	andeq	r0, r0, r8, ror #22
    14a8:	andeq	r1, r1, ip, lsl r0
    14ac:	andeq	r1, r1, ip
    14b0:	andeq	r1, r1, r4
    14b4:			; <UNDEFINED> instruction: 0x00000ab0
    14b8:	andeq	r0, r0, r0, lsr #15
    14bc:	andeq	r0, r0, r8, asr #15
    14c0:	andmi	r0, r0, pc, asr r0
    14c4:	andeq	r0, r0, r8, lsr #14
    14c8:	andeq	r0, r0, r8, ror #18
    14cc:	andeq	r0, r0, r4, asr #14
    14d0:	andeq	r0, r1, r0, lsl #30
    14d4:	andeq	r0, r0, ip, asr #18
    14d8:	andeq	r0, r1, r0, asr #29
    14dc:	muleq	r1, ip, lr
    14e0:	andeq	r0, r0, r0, lsr r6
    14e4:	andeq	r0, r0, r0, asr r6
    14e8:	andeq	r0, r0, r4, asr #16
    14ec:	andeq	r0, r0, r4, lsl #12
    14f0:	andeq	r0, r0, r4, lsr #12
    14f4:	andeq	r0, r0, r4, lsr #16
    14f8:	andeq	r0, r0, ip, lsl r8
    14fc:	andeq	r0, r0, ip, asr #10
    1500:	andeq	r0, r0, r0, ror r5
    1504:	andeq	r0, r0, r8, lsl r5
    1508:	andeq	r0, r0, r4, asr #10
    150c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1510:	andeq	r0, r0, ip, lsl r5
    1514:	andeq	r0, r0, r4, asr #9
    1518:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    151c:	andeq	r0, r0, r4, ror #14
    1520:	andeq	r0, r0, r8, ror r4
    1524:	muleq	r0, ip, r4
    1528:	andeq	r0, r0, r4, asr #8
    152c:	andeq	r0, r0, r0, ror r4
    1530:	andeq	r0, r0, r8, lsr #13
    1534:	strdeq	r0, [r0], -r4
    1538:	andeq	r0, r0, r8, lsl r4
    153c:	mov	fp, #0
    1540:	mov	lr, #0
    1544:	pop	{r1}		; (ldr r1, [sp], #4)
    1548:	mov	r2, sp
    154c:	push	{r2}		; (str r2, [sp, #-4]!)
    1550:	push	{r0}		; (str r0, [sp, #-4]!)
    1554:	ldr	sl, [pc, #40]	; 1584 <log_oom_internal@plt+0x93c>
    1558:	add	r3, pc, #36	; 0x24
    155c:	add	sl, sl, r3
    1560:	ldr	ip, [pc, #32]	; 1588 <log_oom_internal@plt+0x940>
    1564:	ldr	ip, [sl, ip]
    1568:	push	{ip}		; (str ip, [sp, #-4]!)
    156c:	ldr	r3, [pc, #24]	; 158c <log_oom_internal@plt+0x944>
    1570:	ldr	r3, [sl, r3]
    1574:	ldr	r0, [pc, #20]	; 1590 <log_oom_internal@plt+0x948>
    1578:	ldr	r0, [sl, r0]
    157c:	bl	bf4 <__libc_start_main@plt>
    1580:	bl	b34 <abort@plt>
    1584:			; <UNDEFINED> instruction: 0x000109b0
    1588:	strheq	r0, [r0], -r8
    158c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1590:	andeq	r0, r0, r0, lsr #1
    1594:	ldr	r3, [pc, #20]	; 15b0 <log_oom_internal@plt+0x968>
    1598:	ldr	r2, [pc, #20]	; 15b4 <log_oom_internal@plt+0x96c>
    159c:	add	r3, pc, r3
    15a0:	ldr	r2, [r3, r2]
    15a4:	cmp	r2, #0
    15a8:	bxeq	lr
    15ac:	b	c00 <__gmon_start__@plt>
    15b0:	muleq	r1, r0, r9
    15b4:	andeq	r0, r0, r0, asr #1
    15b8:	ldr	r0, [pc, #44]	; 15ec <log_oom_internal@plt+0x9a4>
    15bc:	ldr	r3, [pc, #44]	; 15f0 <log_oom_internal@plt+0x9a8>
    15c0:	add	r0, pc, r0
    15c4:	add	r3, pc, r3
    15c8:	cmp	r3, r0
    15cc:	ldr	r3, [pc, #32]	; 15f4 <log_oom_internal@plt+0x9ac>
    15d0:	add	r3, pc, r3
    15d4:	bxeq	lr
    15d8:	ldr	r2, [pc, #24]	; 15f8 <log_oom_internal@plt+0x9b0>
    15dc:	ldr	r3, [r3, r2]
    15e0:	cmp	r3, #0
    15e4:	bxeq	lr
    15e8:	bx	r3
    15ec:	andeq	r0, r1, r4, asr #20
    15f0:	andeq	r0, r1, r0, asr #20
    15f4:	andeq	r0, r1, ip, asr r9
    15f8:	strheq	r0, [r0], -r4
    15fc:	ldr	r0, [pc, #56]	; 163c <log_oom_internal@plt+0x9f4>
    1600:	ldr	r3, [pc, #56]	; 1640 <log_oom_internal@plt+0x9f8>
    1604:	add	r0, pc, r0
    1608:	add	r3, pc, r3
    160c:	sub	r1, r3, r0
    1610:	ldr	r3, [pc, #44]	; 1644 <log_oom_internal@plt+0x9fc>
    1614:	asr	r1, r1, #2
    1618:	add	r3, pc, r3
    161c:	add	r1, r1, r1, lsr #31
    1620:	asrs	r1, r1, #1
    1624:	bxeq	lr
    1628:	ldr	r2, [pc, #24]	; 1648 <log_oom_internal@plt+0xa00>
    162c:	ldr	r3, [r3, r2]
    1630:	cmp	r3, #0
    1634:	bxeq	lr
    1638:	bx	r3
    163c:	andeq	r0, r1, r0, lsl #20
    1640:	strdeq	r0, [r1], -ip
    1644:	andeq	r0, r1, r4, lsl r9
    1648:	andeq	r0, r0, r4, asr #1
    164c:	ldr	r3, [pc, #76]	; 16a0 <log_oom_internal@plt+0xa58>
    1650:	ldr	r2, [pc, #76]	; 16a4 <log_oom_internal@plt+0xa5c>
    1654:	add	r3, pc, r3
    1658:	add	r2, pc, r2
    165c:	ldrb	r3, [r3]
    1660:	cmp	r3, #0
    1664:	bxne	lr
    1668:	ldr	r3, [pc, #56]	; 16a8 <log_oom_internal@plt+0xa60>
    166c:	push	{r4, lr}
    1670:	ldr	r3, [r2, r3]
    1674:	cmp	r3, #0
    1678:	beq	1688 <log_oom_internal@plt+0xa40>
    167c:	ldr	r3, [pc, #40]	; 16ac <log_oom_internal@plt+0xa64>
    1680:	ldr	r0, [pc, r3]
    1684:	bl	c18 <__cxa_finalize@plt>
    1688:	bl	15b8 <log_oom_internal@plt+0x970>
    168c:	ldr	r3, [pc, #28]	; 16b0 <log_oom_internal@plt+0xa68>
    1690:	mov	r2, #1
    1694:	add	r3, pc, r3
    1698:	strb	r2, [r3]
    169c:	pop	{r4, pc}
    16a0:			; <UNDEFINED> instruction: 0x000109b0
    16a4:	ldrdeq	r0, [r1], -r4
    16a8:	andeq	r0, r0, r8, asr #1
    16ac:	andeq	r0, r1, r8, ror r9
    16b0:	andeq	r0, r1, r0, ror r9
    16b4:	b	15fc <log_oom_internal@plt+0x9b4>
    16b8:	push	{r4, r5, r6, lr}
    16bc:	sub	sp, sp, #8
    16c0:	ldr	r5, [pc, #164]	; 176c <log_oom_internal@plt+0xb24>
    16c4:	ldr	r3, [pc, #164]	; 1770 <log_oom_internal@plt+0xb28>
    16c8:	add	r5, pc, r5
    16cc:	add	r2, sp, #8
    16d0:	ldr	r6, [r5, r3]
    16d4:	ldr	r1, [pc, #152]	; 1774 <log_oom_internal@plt+0xb2c>
    16d8:	ldr	r0, [pc, #152]	; 1778 <log_oom_internal@plt+0xb30>
    16dc:	mov	r4, #0
    16e0:	ldr	r3, [r6]
    16e4:	add	r1, pc, r1
    16e8:	str	r4, [r2, #-8]!
    16ec:	add	r0, pc, r0
    16f0:	str	r3, [sp, #4]
    16f4:	bl	b4c <terminal_urlify_man@plt>
    16f8:	cmp	r0, r4
    16fc:	blt	1744 <log_oom_internal@plt+0xafc>
    1700:	ldr	r2, [pc, #116]	; 177c <log_oom_internal@plt+0xb34>
    1704:	ldr	r1, [pc, #116]	; 1780 <log_oom_internal@plt+0xb38>
    1708:	ldr	r3, [sp]
    170c:	ldr	r2, [r5, r2]
    1710:	add	r1, pc, r1
    1714:	mov	r0, #1
    1718:	ldr	r2, [r2]
    171c:	bl	c3c <__printf_chk@plt>
    1720:	ldr	r0, [sp]
    1724:	bl	abc <free@plt>
    1728:	ldr	r2, [sp, #4]
    172c:	ldr	r3, [r6]
    1730:	mov	r0, r4
    1734:	cmp	r2, r3
    1738:	bne	1768 <log_oom_internal@plt+0xb20>
    173c:	add	sp, sp, #8
    1740:	pop	{r4, r5, r6, pc}
    1744:	ldr	r3, [pc, #56]	; 1784 <log_oom_internal@plt+0xb3c>
    1748:	ldr	r1, [pc, #56]	; 1788 <log_oom_internal@plt+0xb40>
    174c:	mov	r0, r4
    1750:	add	r3, pc, r3
    1754:	mov	r2, #36	; 0x24
    1758:	add	r1, pc, r1
    175c:	bl	c48 <log_oom_internal@plt>
    1760:	mov	r4, r0
    1764:	b	1720 <log_oom_internal@plt+0xad8>
    1768:	bl	b40 <__stack_chk_fail@plt>
    176c:	andeq	r0, r1, r4, ror #16
    1770:	muleq	r0, r8, r0
    1774:	andeq	r0, r0, r0, lsr r1
    1778:	andeq	r0, r0, ip, lsr #2
    177c:	strheq	r0, [r0], -ip
    1780:	andeq	r0, r0, r0, lsr r1
    1784:	andeq	r0, r0, r0, lsr #1
    1788:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    178c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1790:	mov	r7, r0
    1794:	ldr	r6, [pc, #72]	; 17e4 <log_oom_internal@plt+0xb9c>
    1798:	ldr	r5, [pc, #72]	; 17e8 <log_oom_internal@plt+0xba0>
    179c:	add	r6, pc, r6
    17a0:	add	r5, pc, r5
    17a4:	sub	r6, r6, r5
    17a8:	mov	r8, r1
    17ac:	mov	r9, r2
    17b0:	bl	a90 <version@plt-0x20>
    17b4:	asrs	r6, r6, #2
    17b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    17bc:	mov	r4, #0
    17c0:	add	r4, r4, #1
    17c4:	ldr	r3, [r5], #4
    17c8:	mov	r2, r9
    17cc:	mov	r1, r8
    17d0:	mov	r0, r7
    17d4:	blx	r3
    17d8:	cmp	r6, r4
    17dc:	bne	17c0 <log_oom_internal@plt+0xb78>
    17e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    17e4:	strdeq	r0, [r1], -ip
    17e8:	strdeq	r0, [r1], -r4
    17ec:	bx	lr

Disassembly of section .fini:

000017f0 <.fini>:
    17f0:	push	{r3, lr}
    17f4:	pop	{r3, pc}
