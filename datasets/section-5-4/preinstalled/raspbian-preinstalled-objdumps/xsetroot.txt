
raspbian-preinstalled/xsetroot:     file format elf32-littlearm


Disassembly of section .init:

00010bd8 <.init>:
   10bd8:	push	{r3, lr}
   10bdc:	bl	11c38 <abort@plt+0xe60>
   10be0:	pop	{r3, pc}

Disassembly of section .plt:

00010be4 <raise@plt-0x14>:
   10be4:	push	{lr}		; (str lr, [sp, #-4]!)
   10be8:	ldr	lr, [pc, #4]	; 10bf4 <raise@plt-0x4>
   10bec:	add	lr, pc, lr
   10bf0:	ldr	pc, [lr, #8]!
   10bf4:	andeq	r3, r1, ip, lsl #8

00010bf8 <raise@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #77824	; 0x13000
   10c00:	ldr	pc, [ip, #1036]!	; 0x40c

00010c04 <XClearWindow@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #77824	; 0x13000
   10c0c:	ldr	pc, [ip, #1028]!	; 0x404

00010c10 <strcmp@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #77824	; 0x13000
   10c18:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c1c <strtol@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #77824	; 0x13000
   10c24:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c28 <XAllocColor@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #77824	; 0x13000
   10c30:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c34 <XSetCloseDownMode@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #77824	; 0x13000
   10c3c:	ldr	pc, [ip, #996]!	; 0x3e4

00010c40 <XCopyPlane@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #77824	; 0x13000
   10c48:	ldr	pc, [ip, #988]!	; 0x3dc

00010c4c <XStoreName@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #77824	; 0x13000
   10c54:	ldr	pc, [ip, #980]!	; 0x3d4

00010c58 <XKillClient@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #77824	; 0x13000
   10c60:	ldr	pc, [ip, #972]!	; 0x3cc

00010c64 <__stack_chk_fail@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #77824	; 0x13000
   10c6c:	ldr	pc, [ip, #964]!	; 0x3c4

00010c70 <XFreePixmap@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #77824	; 0x13000
   10c78:	ldr	pc, [ip, #956]!	; 0x3bc

00010c7c <XCreateBitmapFromData@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #77824	; 0x13000
   10c84:	ldr	pc, [ip, #948]!	; 0x3b4

00010c88 <XCreatePixmapCursor@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #77824	; 0x13000
   10c90:	ldr	pc, [ip, #940]!	; 0x3ac

00010c94 <puts@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #77824	; 0x13000
   10c9c:	ldr	pc, [ip, #932]!	; 0x3a4

00010ca0 <__libc_start_main@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #77824	; 0x13000
   10ca8:	ldr	pc, [ip, #924]!	; 0x39c

00010cac <XOpenDisplay@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #77824	; 0x13000
   10cb4:	ldr	pc, [ip, #916]!	; 0x394

00010cb8 <__gmon_start__@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #77824	; 0x13000
   10cc0:	ldr	pc, [ip, #908]!	; 0x38c

00010cc4 <exit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #77824	; 0x13000
   10ccc:	ldr	pc, [ip, #900]!	; 0x384

00010cd0 <XcursorImagesLoadCursor@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #77824	; 0x13000
   10cd8:	ldr	pc, [ip, #892]!	; 0x37c

00010cdc <XmuCursorNameToIndex@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #77824	; 0x13000
   10ce4:	ldr	pc, [ip, #884]!	; 0x374

00010ce8 <XCreateGlyphCursor@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #77824	; 0x13000
   10cf0:	ldr	pc, [ip, #876]!	; 0x36c

00010cf4 <XInternAtom@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #77824	; 0x13000
   10cfc:	ldr	pc, [ip, #868]!	; 0x364

00010d00 <XChangeProperty@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #77824	; 0x13000
   10d08:	ldr	pc, [ip, #860]!	; 0x35c

00010d0c <XDisplayName@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #77824	; 0x13000
   10d14:	ldr	pc, [ip, #852]!	; 0x354

00010d18 <XLoadFont@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #77824	; 0x13000
   10d20:	ldr	pc, [ip, #844]!	; 0x34c

00010d24 <XUndefineCursor@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #77824	; 0x13000
   10d2c:	ldr	pc, [ip, #836]!	; 0x344

00010d30 <__fprintf_chk@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #77824	; 0x13000
   10d38:	ldr	pc, [ip, #828]!	; 0x33c

00010d3c <XDefineCursor@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #77824	; 0x13000
   10d44:	ldr	pc, [ip, #820]!	; 0x334

00010d48 <XcursorFilenameLoadImages@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #77824	; 0x13000
   10d50:	ldr	pc, [ip, #812]!	; 0x32c

00010d54 <XCreateGC@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #77824	; 0x13000
   10d5c:	ldr	pc, [ip, #804]!	; 0x324

00010d60 <XQueryColor@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #77824	; 0x13000
   10d68:	ldr	pc, [ip, #796]!	; 0x31c

00010d6c <XSetWindowBackgroundPixmap@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #77824	; 0x13000
   10d74:	ldr	pc, [ip, #788]!	; 0x314

00010d78 <XFreeCursor@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #77824	; 0x13000
   10d80:	ldr	pc, [ip, #780]!	; 0x30c

00010d84 <XSetWindowBackground@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #77824	; 0x13000
   10d8c:	ldr	pc, [ip, #772]!	; 0x304

00010d90 <XFreeGC@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #77824	; 0x13000
   10d98:	ldr	pc, [ip, #764]!	; 0x2fc

00010d9c <XParseColor@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #77824	; 0x13000
   10da4:	ldr	pc, [ip, #756]!	; 0x2f4

00010da8 <XGetWindowProperty@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #77824	; 0x13000
   10db0:	ldr	pc, [ip, #748]!	; 0x2ec

00010db4 <XCloseDisplay@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #77824	; 0x13000
   10dbc:	ldr	pc, [ip, #740]!	; 0x2e4

00010dc0 <XCreatePixmap@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #77824	; 0x13000
   10dc8:	ldr	pc, [ip, #732]!	; 0x2dc

00010dcc <XReadBitmapFile@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #77824	; 0x13000
   10dd4:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd8 <abort@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #77824	; 0x13000
   10de0:	ldr	pc, [ip, #716]!	; 0x2cc

Disassembly of section .text:

00010de4 <.text>:
   10de4:	cmp	r0, #0
   10de8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dec:	sub	sp, sp, #12
   10df0:	ldr	r5, [pc, #64]	; 10e38 <abort@plt+0x60>
   10df4:	ldr	r4, [pc, #64]	; 10e3c <abort@plt+0x64>
   10df8:	beq	10e14 <abort@plt+0x3c>
   10dfc:	str	r0, [sp]
   10e00:	ldr	r3, [r5]
   10e04:	ldr	r2, [pc, #52]	; 10e40 <abort@plt+0x68>
   10e08:	mov	r1, #1
   10e0c:	ldr	r0, [r4]
   10e10:	bl	10d30 <__fprintf_chk@plt>
   10e14:	ldr	r2, [pc, #40]	; 10e44 <abort@plt+0x6c>
   10e18:	ldr	r3, [r5]
   10e1c:	str	r2, [sp]
   10e20:	ldr	r0, [r4]
   10e24:	ldr	r2, [pc, #28]	; 10e48 <abort@plt+0x70>
   10e28:	mov	r1, #1
   10e2c:	bl	10d30 <__fprintf_chk@plt>
   10e30:	mov	r0, #1
   10e34:	bl	10cc4 <exit@plt>
   10e38:	andeq	r4, r2, r8, asr #1
   10e3c:	andeq	r4, r2, r0, asr #1
   10e40:	andeq	r2, r1, r4, asr r6
   10e44:	andeq	r2, r1, r8, ror r6
   10e48:	andeq	r2, r1, r0, ror #12
   10e4c:	ldr	r3, [pc, #3296]	; 11b34 <abort@plt+0xd5c>
   10e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e54:	sub	sp, sp, #212	; 0xd4
   10e58:	ldr	sl, [pc, #3288]	; 11b38 <abort@plt+0xd60>
   10e5c:	ldr	r2, [r1]
   10e60:	ldr	r3, [r3]
   10e64:	cmp	r0, #1
   10e68:	str	r2, [sp, #92]	; 0x5c
   10e6c:	str	r2, [sl]
   10e70:	str	r3, [sp, #204]	; 0xcc
   10e74:	ble	118d4 <abort@plt+0xafc>
   10e78:	mov	r3, #0
   10e7c:	str	r3, [sp, #88]	; 0x58
   10e80:	str	r3, [sp, #72]	; 0x48
   10e84:	str	r3, [sp, #80]	; 0x50
   10e88:	str	r3, [sp, #76]	; 0x4c
   10e8c:	str	r3, [sp, #64]	; 0x40
   10e90:	str	r3, [sp, #68]	; 0x44
   10e94:	str	r3, [sp, #56]	; 0x38
   10e98:	str	r3, [sp, #60]	; 0x3c
   10e9c:	str	r3, [sp, #48]	; 0x30
   10ea0:	str	r3, [sp, #44]	; 0x2c
   10ea4:	mov	r9, r3
   10ea8:	str	r3, [sp, #40]	; 0x28
   10eac:	str	r3, [sp, #36]	; 0x24
   10eb0:	str	r3, [sp, #52]	; 0x34
   10eb4:	mov	r3, #32
   10eb8:	mov	r7, r1
   10ebc:	mov	r6, r0
   10ec0:	ldr	r8, [pc, #3188]	; 11b3c <abort@plt+0xd64>
   10ec4:	mov	fp, #1
   10ec8:	str	r3, [sp, #84]	; 0x54
   10ecc:	b	10f78 <abort@plt+0x1a0>
   10ed0:	mov	r1, r4
   10ed4:	ldr	r0, [pc, #3172]	; 11b40 <abort@plt+0xd68>
   10ed8:	bl	10c10 <strcmp@plt>
   10edc:	cmp	r0, #0
   10ee0:	beq	10f94 <abort@plt+0x1bc>
   10ee4:	mov	r1, r4
   10ee8:	ldr	r0, [pc, #3156]	; 11b44 <abort@plt+0xd6c>
   10eec:	bl	10c10 <strcmp@plt>
   10ef0:	cmp	r0, #0
   10ef4:	beq	11b08 <abort@plt+0xd30>
   10ef8:	mov	r1, r4
   10efc:	ldr	r0, [pc, #3140]	; 11b48 <abort@plt+0xd70>
   10f00:	bl	10c10 <strcmp@plt>
   10f04:	cmp	r0, #0
   10f08:	beq	11748 <abort@plt+0x970>
   10f0c:	mov	r1, r4
   10f10:	ldr	r0, [pc, #3124]	; 11b4c <abort@plt+0xd74>
   10f14:	bl	10c10 <strcmp@plt>
   10f18:	cmp	r0, #0
   10f1c:	beq	113b0 <abort@plt+0x5d8>
   10f20:	mov	r1, r4
   10f24:	ldr	r0, [pc, #3108]	; 11b50 <abort@plt+0xd78>
   10f28:	bl	10c10 <strcmp@plt>
   10f2c:	cmp	r0, #0
   10f30:	beq	113b0 <abort@plt+0x5d8>
   10f34:	mov	r1, r4
   10f38:	ldr	r0, [pc, #3092]	; 11b54 <abort@plt+0xd7c>
   10f3c:	bl	10c10 <strcmp@plt>
   10f40:	cmp	r0, #0
   10f44:	bne	113bc <abort@plt+0x5e4>
   10f48:	add	fp, fp, #1
   10f4c:	cmp	r6, fp
   10f50:	ble	11b04 <abort@plt+0xd2c>
   10f54:	ldr	r3, [sp, #36]	; 0x24
   10f58:	add	r5, r7, r5
   10f5c:	add	r3, r3, #1
   10f60:	str	r3, [sp, #36]	; 0x24
   10f64:	ldr	r3, [r5, #4]
   10f68:	str	r3, [sp, #44]	; 0x2c
   10f6c:	add	fp, fp, #1
   10f70:	cmp	r6, fp
   10f74:	ble	10fb4 <abort@plt+0x1dc>
   10f78:	ldr	r4, [r7, fp, lsl #2]
   10f7c:	mov	r0, r8
   10f80:	mov	r1, r4
   10f84:	bl	10c10 <strcmp@plt>
   10f88:	lsl	r5, fp, #2
   10f8c:	cmp	r0, #0
   10f90:	bne	10ed0 <abort@plt+0xf8>
   10f94:	add	fp, fp, #1
   10f98:	cmp	r6, fp
   10f9c:	ble	11b24 <abort@plt+0xd4c>
   10fa0:	add	r5, r7, r5
   10fa4:	add	fp, fp, #1
   10fa8:	cmp	r6, fp
   10fac:	ldr	r9, [r5, #4]
   10fb0:	bgt	10f78 <abort@plt+0x1a0>
   10fb4:	ldr	r3, [sp, #52]	; 0x34
   10fb8:	cmp	r3, #1
   10fbc:	bgt	11a44 <abort@plt+0xc6c>
   10fc0:	mov	r0, r9
   10fc4:	bl	10cac <XOpenDisplay@plt>
   10fc8:	cmp	r0, #0
   10fcc:	str	r0, [sl, #8]
   10fd0:	beq	117cc <abort@plt+0x9f4>
   10fd4:	ldr	r2, [r0, #132]	; 0x84
   10fd8:	ldr	r3, [r0, #140]	; 0x8c
   10fdc:	ldr	r1, [sp, #36]	; 0x24
   10fe0:	mov	r5, #80	; 0x50
   10fe4:	ldr	r0, [sp, #52]	; 0x34
   10fe8:	mla	r3, r5, r2, r3
   10fec:	orrs	r1, r1, r0
   10ff0:	ldr	r1, [sp, #40]	; 0x28
   10ff4:	moveq	r1, #1
   10ff8:	str	r1, [sp, #40]	; 0x28
   10ffc:	ldr	r1, [sp, #48]	; 0x30
   11000:	str	r2, [sl, #12]
   11004:	cmp	r1, #0
   11008:	ldr	r1, [r3, #8]
   1100c:	str	r1, [sl, #4]
   11010:	beq	11150 <abort@plt+0x378>
   11014:	add	r6, sp, #96	; 0x60
   11018:	ldr	r2, [r3, #56]	; 0x38
   1101c:	mov	r0, r6
   11020:	ldr	r1, [sl, #20]
   11024:	bl	11dc0 <abort@plt+0xfe8>
   11028:	ldm	r6, {r0, r1, r2}
   1102c:	add	r4, sp, #136	; 0x88
   11030:	ldr	ip, [sl, #8]
   11034:	ldr	r3, [sl, #12]
   11038:	stm	r4, {r0, r1, r2}
   1103c:	mov	r0, r6
   11040:	ldr	r2, [ip, #140]	; 0x8c
   11044:	ldr	r1, [sl, #24]
   11048:	mla	r3, r5, r3, r2
   1104c:	add	r5, sp, #148	; 0x94
   11050:	ldr	r2, [r3, #52]	; 0x34
   11054:	bl	11dc0 <abort@plt+0xfe8>
   11058:	ldm	r6, {r0, r1, r2}
   1105c:	ldr	r3, [sl, #28]
   11060:	cmp	r3, #0
   11064:	stm	r5, {r0, r1, r2}
   11068:	bne	115c0 <abort@plt+0x7e8>
   1106c:	add	r3, sp, #132	; 0x84
   11070:	str	r3, [sp]
   11074:	add	r2, sp, #116	; 0x74
   11078:	add	r3, sp, #128	; 0x80
   1107c:	add	r1, sp, #112	; 0x70
   11080:	ldr	r0, [sp, #48]	; 0x30
   11084:	bl	11cec <abort@plt+0xf14>
   11088:	mov	r3, #0
   1108c:	str	r3, [sp]
   11090:	add	r2, sp, #124	; 0x7c
   11094:	add	r1, sp, #120	; 0x78
   11098:	mov	r6, r0
   1109c:	ldr	r0, [sp, #60]	; 0x3c
   110a0:	bl	11cec <abort@plt+0xf14>
   110a4:	ldr	r2, [sp, #112]	; 0x70
   110a8:	ldr	r3, [sp, #120]	; 0x78
   110ac:	cmp	r2, r3
   110b0:	mov	r7, r0
   110b4:	bne	11a64 <abort@plt+0xc8c>
   110b8:	ldr	r1, [sp, #116]	; 0x74
   110bc:	ldr	r3, [sp, #124]	; 0x7c
   110c0:	cmp	r1, r3
   110c4:	bne	11a64 <abort@plt+0xc8c>
   110c8:	ldr	r3, [sp, #128]	; 0x80
   110cc:	cmn	r3, #1
   110d0:	beq	11800 <abort@plt+0xa28>
   110d4:	cmp	r3, #0
   110d8:	blt	1180c <abort@plt+0xa34>
   110dc:	cmp	r2, r3
   110e0:	bls	1180c <abort@plt+0xa34>
   110e4:	ldr	r2, [sp, #132]	; 0x84
   110e8:	cmp	r2, #0
   110ec:	blt	1180c <abort@plt+0xa34>
   110f0:	cmp	r1, r2
   110f4:	bls	1180c <abort@plt+0xa34>
   110f8:	str	r2, [sp, #8]
   110fc:	str	r3, [sp, #4]
   11100:	mov	r2, r7
   11104:	mov	r3, r4
   11108:	mov	r1, r6
   1110c:	str	r5, [sp]
   11110:	ldr	r0, [sl, #8]
   11114:	bl	10c88 <XCreatePixmapCursor@plt>
   11118:	mov	r1, r6
   1111c:	mov	r4, r0
   11120:	ldr	r0, [sl, #8]
   11124:	bl	10c70 <XFreePixmap@plt>
   11128:	mov	r1, r7
   1112c:	ldr	r0, [sl, #8]
   11130:	bl	10c70 <XFreePixmap@plt>
   11134:	ldr	r1, [sl, #4]
   11138:	mov	r2, r4
   1113c:	ldr	r0, [sl, #8]
   11140:	bl	10d3c <XDefineCursor@plt>
   11144:	mov	r1, r4
   11148:	ldr	r0, [sl, #8]
   1114c:	bl	10d78 <XFreeCursor@plt>
   11150:	ldr	r3, [sp, #56]	; 0x38
   11154:	cmp	r3, #0
   11158:	beq	111ec <abort@plt+0x414>
   1115c:	ldrd	r2, [sl, #8]
   11160:	mov	r5, #80	; 0x50
   11164:	add	r6, sp, #96	; 0x60
   11168:	ldr	r2, [r2, #140]	; 0x8c
   1116c:	mov	r0, r6
   11170:	mla	r3, r5, r3, r2
   11174:	ldr	r1, [sl, #20]
   11178:	add	r4, sp, #136	; 0x88
   1117c:	ldr	r2, [r3, #56]	; 0x38
   11180:	bl	11dc0 <abort@plt+0xfe8>
   11184:	ldm	r6, {r0, r1, r2}
   11188:	ldr	ip, [sl, #8]
   1118c:	ldr	r3, [sl, #12]
   11190:	stm	r4, {r0, r1, r2}
   11194:	mov	r0, r6
   11198:	ldr	r2, [ip, #140]	; 0x8c
   1119c:	ldr	r1, [sl, #24]
   111a0:	mla	r3, r5, r3, r2
   111a4:	add	r5, sp, #148	; 0x94
   111a8:	ldr	r2, [r3, #52]	; 0x34
   111ac:	bl	11dc0 <abort@plt+0xfe8>
   111b0:	ldm	r6, {r0, r1, r2}
   111b4:	ldr	r3, [sl, #28]
   111b8:	cmp	r3, #0
   111bc:	stm	r5, {r0, r1, r2}
   111c0:	bne	115e0 <abort@plt+0x808>
   111c4:	ldr	r0, [sp, #56]	; 0x38
   111c8:	bl	10cdc <XmuCursorNameToIndex@plt>
   111cc:	cmn	r0, #1
   111d0:	mov	r6, r0
   111d4:	beq	111ec <abort@plt+0x414>
   111d8:	ldr	r1, [pc, #2424]	; 11b58 <abort@plt+0xd80>
   111dc:	ldr	r0, [sl, #8]
   111e0:	bl	10d18 <XLoadFont@plt>
   111e4:	subs	r2, r0, #0
   111e8:	bne	11678 <abort@plt+0x8a0>
   111ec:	ldr	r3, [sp, #64]	; 0x40
   111f0:	cmp	r3, #0
   111f4:	beq	1121c <abort@plt+0x444>
   111f8:	ldr	r1, [sp, #84]	; 0x54
   111fc:	mov	r0, r3
   11200:	bl	10d48 <XcursorFilenameLoadImages@plt>
   11204:	subs	r1, r0, #0
   11208:	beq	1182c <abort@plt+0xa54>
   1120c:	ldr	r0, [sl, #8]
   11210:	bl	10cd0 <XcursorImagesLoadCursor@plt>
   11214:	subs	r4, r0, #0
   11218:	bne	11728 <abort@plt+0x950>
   1121c:	ldr	r3, [sp, #76]	; 0x4c
   11220:	cmp	r3, #0
   11224:	bne	11584 <abort@plt+0x7ac>
   11228:	ldr	r3, [sp, #68]	; 0x44
   1122c:	cmp	r3, #0
   11230:	beq	1127c <abort@plt+0x4a4>
   11234:	ldrb	r3, [r3]
   11238:	ldr	r4, [sl, #8]
   1123c:	ldr	r5, [sl, #4]
   11240:	cmp	r3, #0
   11244:	bne	115b0 <abort@plt+0x7d8>
   11248:	ldr	r3, [sl, #12]
   1124c:	ldr	r2, [r4, #140]	; 0x8c
   11250:	mov	r1, #80	; 0x50
   11254:	mla	r3, r1, r3, r2
   11258:	ldr	r2, [r3, #56]	; 0x38
   1125c:	mov	r1, r5
   11260:	mov	r0, r4
   11264:	bl	10d84 <XSetWindowBackground@plt>
   11268:	ldr	r1, [sl, #4]
   1126c:	ldr	r0, [sl, #8]
   11270:	bl	10c04 <XClearWindow@plt>
   11274:	mov	r3, #1
   11278:	str	r3, [sl, #36]	; 0x24
   1127c:	ldr	r0, [sp, #80]	; 0x50
   11280:	cmp	r0, #0
   11284:	beq	112a8 <abort@plt+0x4d0>
   11288:	mov	r3, #0
   1128c:	add	r2, sp, #124	; 0x7c
   11290:	add	r1, sp, #120	; 0x78
   11294:	str	r3, [sp]
   11298:	bl	11cec <abort@plt+0xf14>
   1129c:	ldr	r2, [sp, #124]	; 0x7c
   112a0:	ldr	r1, [sp, #120]	; 0x78
   112a4:	bl	11fd4 <abort@plt+0x11fc>
   112a8:	ldr	r3, [sp, #72]	; 0x48
   112ac:	cmp	r3, #0
   112b0:	bne	114ec <abort@plt+0x714>
   112b4:	ldr	r3, [sp, #44]	; 0x2c
   112b8:	cmp	r3, #0
   112bc:	beq	112d0 <abort@plt+0x4f8>
   112c0:	mov	r2, r3
   112c4:	ldr	r1, [sl, #4]
   112c8:	ldr	r0, [sl, #8]
   112cc:	bl	10c4c <XStoreName@plt>
   112d0:	ldr	r3, [sp, #40]	; 0x28
   112d4:	cmp	r3, #0
   112d8:	beq	112f4 <abort@plt+0x51c>
   112dc:	ldr	r3, [sp, #48]	; 0x30
   112e0:	cmp	r3, #0
   112e4:	beq	11864 <abort@plt+0xa8c>
   112e8:	ldr	r3, [sp, #52]	; 0x34
   112ec:	cmp	r3, #0
   112f0:	beq	116bc <abort@plt+0x8e4>
   112f4:	ldr	r0, [sl, #8]
   112f8:	ldr	r3, [sl, #12]
   112fc:	mov	r1, #80	; 0x50
   11300:	ldr	r2, [r0, #140]	; 0x8c
   11304:	mla	r3, r1, r3, r2
   11308:	ldr	r3, [r3, #40]	; 0x28
   1130c:	ldr	r3, [r3, #8]
   11310:	tst	r3, #1
   11314:	bne	114ac <abort@plt+0x6d4>
   11318:	mov	r3, #0
   1131c:	str	r3, [sl, #36]	; 0x24
   11320:	ldr	r3, [sl, #16]
   11324:	cmp	r3, #0
   11328:	beq	113a0 <abort@plt+0x5c8>
   1132c:	mov	r2, #0
   11330:	ldr	r1, [pc, #2084]	; 11b5c <abort@plt+0xd84>
   11334:	bl	10cf4 <XInternAtom@plt>
   11338:	ldr	r3, [sl, #36]	; 0x24
   1133c:	cmp	r3, #0
   11340:	mov	r4, r0
   11344:	bne	11760 <abort@plt+0x988>
   11348:	ldr	r3, [sl, #16]
   1134c:	cmp	r3, #0
   11350:	beq	113a0 <abort@plt+0x5c8>
   11354:	ldr	r3, [sl, #32]
   11358:	cmp	r3, #0
   1135c:	beq	11708 <abort@plt+0x930>
   11360:	ldr	r0, [pc, #2040]	; 11b60 <abort@plt+0xd88>
   11364:	mov	r5, #1
   11368:	mov	r1, #0
   1136c:	mov	r3, #32
   11370:	str	r0, [sp, #8]
   11374:	str	r1, [sp, #4]
   11378:	str	r3, [sp]
   1137c:	ldr	r1, [sl, #4]
   11380:	mov	r2, r4
   11384:	str	r5, [sp, #12]
   11388:	mov	r3, #20
   1138c:	ldr	r0, [sl, #8]
   11390:	bl	10d00 <XChangeProperty@plt>
   11394:	mov	r1, r5
   11398:	ldr	r0, [sl, #8]
   1139c:	bl	10c34 <XSetCloseDownMode@plt>
   113a0:	ldr	r0, [sl, #8]
   113a4:	bl	10db4 <XCloseDisplay@plt>
   113a8:	mov	r0, #0
   113ac:	bl	10cc4 <exit@plt>
   113b0:	mov	r3, #1
   113b4:	str	r3, [sp, #40]	; 0x28
   113b8:	b	10f6c <abort@plt+0x194>
   113bc:	mov	r1, r4
   113c0:	ldr	r0, [pc, #1948]	; 11b64 <abort@plt+0xd8c>
   113c4:	bl	10c10 <strcmp@plt>
   113c8:	cmp	r0, #0
   113cc:	bne	1140c <abort@plt+0x634>
   113d0:	add	r2, fp, #1
   113d4:	cmp	r6, r2
   113d8:	ble	11b1c <abort@plt+0xd44>
   113dc:	add	r5, r7, r5
   113e0:	add	fp, fp, #2
   113e4:	ldr	r3, [r5, #4]
   113e8:	cmp	r6, fp
   113ec:	str	r3, [sp, #48]	; 0x30
   113f0:	ble	11b14 <abort@plt+0xd3c>
   113f4:	ldr	r3, [r5, #8]
   113f8:	str	r3, [sp, #60]	; 0x3c
   113fc:	ldr	r3, [sp, #36]	; 0x24
   11400:	add	r3, r3, #1
   11404:	str	r3, [sp, #36]	; 0x24
   11408:	b	10f6c <abort@plt+0x194>
   1140c:	mov	r1, r4
   11410:	ldr	r0, [pc, #1872]	; 11b68 <abort@plt+0xd90>
   11414:	bl	10c10 <strcmp@plt>
   11418:	cmp	r0, #0
   1141c:	bne	11448 <abort@plt+0x670>
   11420:	add	fp, fp, #1
   11424:	cmp	r6, fp
   11428:	ble	11b0c <abort@plt+0xd34>
   1142c:	ldr	r3, [sp, #36]	; 0x24
   11430:	add	r5, r7, r5
   11434:	add	r3, r3, #1
   11438:	str	r3, [sp, #36]	; 0x24
   1143c:	ldr	r3, [r5, #4]
   11440:	str	r3, [sp, #56]	; 0x38
   11444:	b	10f6c <abort@plt+0x194>
   11448:	mov	r1, r4
   1144c:	ldr	r0, [pc, #1816]	; 11b6c <abort@plt+0xd94>
   11450:	bl	10c10 <strcmp@plt>
   11454:	cmp	r0, #0
   11458:	bne	114bc <abort@plt+0x6e4>
   1145c:	add	r2, fp, #1
   11460:	cmp	r6, r2
   11464:	ble	11b2c <abort@plt+0xd54>
   11468:	add	r5, r7, r5
   1146c:	add	fp, fp, #2
   11470:	ldr	r3, [r5, #4]
   11474:	cmp	r6, fp
   11478:	str	r3, [sp, #64]	; 0x40
   1147c:	ble	11aec <abort@plt+0xd14>
   11480:	ldr	r0, [r5, #8]
   11484:	mov	r2, #10
   11488:	mov	r1, #0
   1148c:	bl	10c1c <strtol@plt>
   11490:	ldr	r3, [sp, #36]	; 0x24
   11494:	add	r3, r3, #1
   11498:	str	r3, [sp, #36]	; 0x24
   1149c:	subs	r3, r0, #0
   114a0:	movle	r3, #32
   114a4:	str	r3, [sp, #84]	; 0x54
   114a8:	b	10f6c <abort@plt+0x194>
   114ac:	ldr	r3, [sl, #36]	; 0x24
   114b0:	cmp	r3, #0
   114b4:	bne	1132c <abort@plt+0x554>
   114b8:	b	11320 <abort@plt+0x548>
   114bc:	mov	r1, r4
   114c0:	ldr	r0, [pc, #1704]	; 11b70 <abort@plt+0xd98>
   114c4:	bl	10c10 <strcmp@plt>
   114c8:	cmp	r0, #0
   114cc:	bne	11600 <abort@plt+0x828>
   114d0:	add	fp, fp, #1
   114d4:	cmp	r6, fp
   114d8:	ble	11afc <abort@plt+0xd24>
   114dc:	add	r5, r7, r5
   114e0:	ldr	r2, [r5, #4]
   114e4:	str	r2, [sl, #20]
   114e8:	b	10f6c <abort@plt+0x194>
   114ec:	mov	r4, #15
   114f0:	mov	r6, #0
   114f4:	mov	r5, r3
   114f8:	mov	r0, r4
   114fc:	mov	r1, r5
   11500:	bl	125b4 <abort@plt+0x17dc>
   11504:	lsl	r6, r6, #1
   11508:	cmp	r1, #0
   1150c:	orreq	r6, r6, #1
   11510:	subs	r4, r4, #1
   11514:	bcs	114f8 <abort@plt+0x720>
   11518:	asr	r7, r6, #8
   1151c:	ldr	r9, [sp, #88]	; 0x58
   11520:	uxtb	r7, r7
   11524:	add	r8, sp, #172	; 0xac
   11528:	mov	r5, #0
   1152c:	mov	r0, r5
   11530:	mov	r1, r9
   11534:	bl	125b4 <abort@plt+0x17dc>
   11538:	add	r5, r5, #1
   1153c:	add	r8, r8, #2
   11540:	cmp	r1, #0
   11544:	strbeq	r4, [r8, #-2]
   11548:	strbeq	r4, [r8, #-1]
   1154c:	strbne	r6, [r8, #-2]
   11550:	strbne	r7, [r8, #-1]
   11554:	cmp	r5, #16
   11558:	bne	1152c <abort@plt+0x754>
   1155c:	add	r2, sp, #172	; 0xac
   11560:	ldr	r1, [sl, #4]
   11564:	str	r5, [sp]
   11568:	mov	r3, r5
   1156c:	ldr	r0, [sl, #8]
   11570:	bl	10c7c <XCreateBitmapFromData@plt>
   11574:	mov	r2, r5
   11578:	mov	r1, r5
   1157c:	bl	11fd4 <abort@plt+0x11fc>
   11580:	b	112b4 <abort@plt+0x4dc>
   11584:	mov	r4, #2
   11588:	ldr	r1, [sl, #4]
   1158c:	str	r4, [sp]
   11590:	mov	r3, r4
   11594:	ldr	r2, [pc, #1496]	; 11b74 <abort@plt+0xd9c>
   11598:	ldr	r0, [sl, #8]
   1159c:	bl	10c7c <XCreateBitmapFromData@plt>
   115a0:	mov	r2, r4
   115a4:	mov	r1, r4
   115a8:	bl	11fd4 <abort@plt+0x11fc>
   115ac:	b	11228 <abort@plt+0x450>
   115b0:	ldr	r0, [sp, #68]	; 0x44
   115b4:	bl	11ea8 <abort@plt+0x10d0>
   115b8:	mov	r2, r0
   115bc:	b	1125c <abort@plt+0x484>
   115c0:	ldm	r4, {r0, r1, r2}
   115c4:	add	r3, sp, #160	; 0xa0
   115c8:	stm	r3, {r0, r1, r2}
   115cc:	ldm	r5, {r0, r1, r2}
   115d0:	stm	r4, {r0, r1, r2}
   115d4:	ldm	r3, {r0, r1, r2}
   115d8:	stm	r5, {r0, r1, r2}
   115dc:	b	1106c <abort@plt+0x294>
   115e0:	ldm	r4, {r0, r1, r2}
   115e4:	add	r3, sp, #160	; 0xa0
   115e8:	stm	r3, {r0, r1, r2}
   115ec:	ldm	r5, {r0, r1, r2}
   115f0:	stm	r4, {r0, r1, r2}
   115f4:	ldm	r3, {r0, r1, r2}
   115f8:	stm	r5, {r0, r1, r2}
   115fc:	b	111c4 <abort@plt+0x3ec>
   11600:	mov	r1, r4
   11604:	ldr	r0, [pc, #1388]	; 11b78 <abort@plt+0xda0>
   11608:	bl	10c10 <strcmp@plt>
   1160c:	cmp	r0, #0
   11610:	beq	114d0 <abort@plt+0x6f8>
   11614:	mov	r1, r4
   11618:	ldr	r0, [pc, #1372]	; 11b7c <abort@plt+0xda4>
   1161c:	bl	10c10 <strcmp@plt>
   11620:	cmp	r0, #0
   11624:	beq	11874 <abort@plt+0xa9c>
   11628:	mov	r1, r4
   1162c:	ldr	r0, [pc, #1356]	; 11b80 <abort@plt+0xda8>
   11630:	bl	10c10 <strcmp@plt>
   11634:	cmp	r0, #0
   11638:	beq	11874 <abort@plt+0xa9c>
   1163c:	mov	r1, r4
   11640:	ldr	r0, [pc, #1340]	; 11b84 <abort@plt+0xdac>
   11644:	bl	10c10 <strcmp@plt>
   11648:	cmp	r0, #0
   1164c:	bne	11948 <abort@plt+0xb70>
   11650:	add	fp, fp, #1
   11654:	cmp	r6, fp
   11658:	ble	11acc <abort@plt+0xcf4>
   1165c:	ldr	r3, [sp, #52]	; 0x34
   11660:	add	r5, r7, r5
   11664:	add	r3, r3, #1
   11668:	str	r3, [sp, #52]	; 0x34
   1166c:	ldr	r3, [r5, #4]
   11670:	str	r3, [sp, #68]	; 0x44
   11674:	b	10f6c <abort@plt+0x194>
   11678:	add	r3, r6, #1
   1167c:	strd	r4, [sp, #4]
   11680:	str	r3, [sp]
   11684:	mov	r1, r2
   11688:	mov	r3, r6
   1168c:	ldr	r0, [sl, #8]
   11690:	bl	10ce8 <XCreateGlyphCursor@plt>
   11694:	subs	r4, r0, #0
   11698:	beq	111ec <abort@plt+0x414>
   1169c:	ldr	r1, [sl, #4]
   116a0:	mov	r2, r4
   116a4:	ldr	r0, [sl, #8]
   116a8:	bl	10d3c <XDefineCursor@plt>
   116ac:	mov	r1, r4
   116b0:	ldr	r0, [sl, #8]
   116b4:	bl	10d78 <XFreeCursor@plt>
   116b8:	b	111ec <abort@plt+0x414>
   116bc:	mov	r2, r3
   116c0:	ldr	r1, [sl, #4]
   116c4:	ldr	r0, [sl, #8]
   116c8:	bl	10d6c <XSetWindowBackgroundPixmap@plt>
   116cc:	ldr	r1, [sl, #4]
   116d0:	ldr	r0, [sl, #8]
   116d4:	bl	10c04 <XClearWindow@plt>
   116d8:	ldr	r0, [sl, #8]
   116dc:	ldr	r3, [sl, #12]
   116e0:	mov	ip, #80	; 0x50
   116e4:	ldr	r1, [r0, #140]	; 0x8c
   116e8:	mov	r2, #1
   116ec:	mla	r3, ip, r3, r1
   116f0:	str	r2, [sl, #36]	; 0x24
   116f4:	ldr	r3, [r3, #40]	; 0x28
   116f8:	ldr	r3, [r3, #8]
   116fc:	tst	r3, #1
   11700:	bne	1132c <abort@plt+0x554>
   11704:	b	11318 <abort@plt+0x540>
   11708:	mov	r3, #1
   1170c:	str	r3, [sp]
   11710:	mov	r2, r3
   11714:	ldr	r1, [sl, #4]
   11718:	ldr	r0, [sl, #8]
   1171c:	bl	10dc0 <XCreatePixmap@plt>
   11720:	str	r0, [sl, #32]
   11724:	b	11360 <abort@plt+0x588>
   11728:	ldr	r1, [sl, #4]
   1172c:	mov	r2, r4
   11730:	ldr	r0, [sl, #8]
   11734:	bl	10d3c <XDefineCursor@plt>
   11738:	mov	r1, r4
   1173c:	ldr	r0, [sl, #8]
   11740:	bl	10d78 <XFreeCursor@plt>
   11744:	b	1121c <abort@plt+0x444>
   11748:	str	r0, [sp, #36]	; 0x24
   1174c:	ldr	r0, [pc, #1076]	; 11b88 <abort@plt+0xdb0>
   11750:	bl	10c94 <puts@plt>
   11754:	ldr	r2, [sp, #36]	; 0x24
   11758:	mov	r0, r2
   1175c:	bl	10cc4 <exit@plt>
   11760:	add	lr, sp, #160	; 0xa0
   11764:	add	ip, sp, #148	; 0x94
   11768:	add	r0, sp, #136	; 0x88
   1176c:	add	r1, sp, #132	; 0x84
   11770:	add	r2, sp, #128	; 0x80
   11774:	mov	r3, #0
   11778:	mov	r5, #1
   1177c:	str	r0, [sp, #20]
   11780:	str	r1, [sp, #16]
   11784:	str	r2, [sp, #12]
   11788:	str	lr, [sp, #28]
   1178c:	str	ip, [sp, #24]
   11790:	str	r3, [sp, #8]
   11794:	str	r5, [sp, #4]
   11798:	str	r5, [sp]
   1179c:	mov	r2, r4
   117a0:	ldr	r1, [sl, #4]
   117a4:	ldr	r0, [sl, #8]
   117a8:	bl	10da8 <XGetWindowProperty@plt>
   117ac:	cmp	r0, #0
   117b0:	bne	11848 <abort@plt+0xa70>
   117b4:	ldr	r3, [sp, #128]	; 0x80
   117b8:	cmp	r3, #20
   117bc:	beq	118ac <abort@plt+0xad4>
   117c0:	cmp	r3, #0
   117c4:	beq	11348 <abort@plt+0x570>
   117c8:	b	118b8 <abort@plt+0xae0>
   117cc:	ldr	r3, [pc, #952]	; 11b8c <abort@plt+0xdb4>
   117d0:	mov	r0, r9
   117d4:	ldr	r5, [sl]
   117d8:	ldr	r4, [r3]
   117dc:	bl	10d0c <XDisplayName@plt>
   117e0:	mov	r3, r5
   117e4:	ldr	r2, [pc, #932]	; 11b90 <abort@plt+0xdb8>
   117e8:	mov	r1, #1
   117ec:	str	r0, [sp]
   117f0:	mov	r0, r4
   117f4:	bl	10d30 <__fprintf_chk@plt>
   117f8:	mov	r0, #2
   117fc:	bl	10cc4 <exit@plt>
   11800:	ldr	r3, [sp, #132]	; 0x84
   11804:	cmn	r3, #1
   11808:	beq	11890 <abort@plt+0xab8>
   1180c:	ldr	r1, [pc, #888]	; 11b8c <abort@plt+0xdb4>
   11810:	ldr	r3, [sl]
   11814:	ldr	r2, [pc, #888]	; 11b94 <abort@plt+0xdbc>
   11818:	ldr	r0, [r1]
   1181c:	mov	r1, #1
   11820:	bl	10d30 <__fprintf_chk@plt>
   11824:	mov	r0, #1
   11828:	bl	10cc4 <exit@plt>
   1182c:	ldr	r1, [pc, #856]	; 11b8c <abort@plt+0xdb4>
   11830:	ldr	r3, [sp, #64]	; 0x40
   11834:	ldr	r2, [pc, #860]	; 11b98 <abort@plt+0xdc0>
   11838:	ldr	r0, [r1]
   1183c:	mov	r1, #1
   11840:	bl	10d30 <__fprintf_chk@plt>
   11844:	b	1121c <abort@plt+0x444>
   11848:	ldr	r2, [pc, #828]	; 11b8c <abort@plt+0xdb4>
   1184c:	mov	r1, r5
   11850:	ldr	r3, [sl]
   11854:	ldr	r0, [r2]
   11858:	ldr	r2, [pc, #828]	; 11b9c <abort@plt+0xdc4>
   1185c:	bl	10d30 <__fprintf_chk@plt>
   11860:	b	11348 <abort@plt+0x570>
   11864:	ldr	r1, [sl, #4]
   11868:	ldr	r0, [sl, #8]
   1186c:	bl	10d24 <XUndefineCursor@plt>
   11870:	b	112e8 <abort@plt+0x510>
   11874:	add	fp, fp, #1
   11878:	cmp	r6, fp
   1187c:	ble	11adc <abort@plt+0xd04>
   11880:	add	r5, r7, r5
   11884:	ldr	r2, [r5, #4]
   11888:	str	r2, [sl, #24]
   1188c:	b	10f6c <abort@plt+0x194>
   11890:	cmp	r2, #8
   11894:	mov	r2, #8
   11898:	str	r2, [sp, #128]	; 0x80
   1189c:	str	r2, [sp, #132]	; 0x84
   118a0:	movhi	r3, r2
   118a4:	bhi	110f0 <abort@plt+0x318>
   118a8:	b	1180c <abort@plt+0xa34>
   118ac:	ldr	r3, [sp, #132]	; 0x84
   118b0:	cmp	r3, #32
   118b4:	beq	1191c <abort@plt+0xb44>
   118b8:	ldr	r1, [pc, #716]	; 11b8c <abort@plt+0xdb4>
   118bc:	ldr	r3, [sl]
   118c0:	ldr	r2, [pc, #728]	; 11ba0 <abort@plt+0xdc8>
   118c4:	ldr	r0, [r1]
   118c8:	mov	r1, #1
   118cc:	bl	10d30 <__fprintf_chk@plt>
   118d0:	b	11348 <abort@plt+0x570>
   118d4:	mov	r3, #0
   118d8:	str	r3, [sp, #36]	; 0x24
   118dc:	mov	r9, r3
   118e0:	str	r3, [sp, #60]	; 0x3c
   118e4:	str	r3, [sp, #48]	; 0x30
   118e8:	str	r3, [sp, #64]	; 0x40
   118ec:	str	r3, [sp, #76]	; 0x4c
   118f0:	str	r3, [sp, #80]	; 0x50
   118f4:	str	r3, [sp, #72]	; 0x48
   118f8:	str	r3, [sp, #56]	; 0x38
   118fc:	str	r3, [sp, #88]	; 0x58
   11900:	str	r3, [sp, #68]	; 0x44
   11904:	str	r3, [sp, #44]	; 0x2c
   11908:	str	r3, [sp, #40]	; 0x28
   1190c:	str	r3, [sp, #52]	; 0x34
   11910:	mov	r3, #32
   11914:	str	r3, [sp, #84]	; 0x54
   11918:	b	10fc0 <abort@plt+0x1e8>
   1191c:	ldr	r3, [sp, #136]	; 0x88
   11920:	cmp	r3, #1
   11924:	bne	118b8 <abort@plt+0xae0>
   11928:	ldr	r3, [sp, #148]	; 0x94
   1192c:	cmp	r3, #0
   11930:	bne	118b8 <abort@plt+0xae0>
   11934:	ldr	r3, [sp, #160]	; 0xa0
   11938:	ldr	r0, [sl, #8]
   1193c:	ldr	r1, [r3]
   11940:	bl	10c58 <XKillClient@plt>
   11944:	b	11348 <abort@plt+0x570>
   11948:	mov	r1, r4
   1194c:	ldr	r0, [pc, #592]	; 11ba4 <abort@plt+0xdcc>
   11950:	bl	10c10 <strcmp@plt>
   11954:	cmp	r0, #0
   11958:	beq	119ac <abort@plt+0xbd4>
   1195c:	mov	r1, r4
   11960:	ldr	r0, [pc, #576]	; 11ba8 <abort@plt+0xdd0>
   11964:	bl	10c10 <strcmp@plt>
   11968:	cmp	r0, #0
   1196c:	beq	119ac <abort@plt+0xbd4>
   11970:	mov	r1, r4
   11974:	ldr	r0, [pc, #560]	; 11bac <abort@plt+0xdd4>
   11978:	bl	10c10 <strcmp@plt>
   1197c:	cmp	r0, #0
   11980:	bne	119c4 <abort@plt+0xbec>
   11984:	add	fp, fp, #1
   11988:	cmp	r6, fp
   1198c:	ble	11ad4 <abort@plt+0xcfc>
   11990:	ldr	r3, [sp, #52]	; 0x34
   11994:	add	r5, r7, r5
   11998:	add	r3, r3, #1
   1199c:	str	r3, [sp, #52]	; 0x34
   119a0:	ldr	r3, [r5, #4]
   119a4:	str	r3, [sp, #80]	; 0x50
   119a8:	b	10f6c <abort@plt+0x194>
   119ac:	ldr	r3, [sp, #52]	; 0x34
   119b0:	add	r3, r3, #1
   119b4:	str	r3, [sp, #52]	; 0x34
   119b8:	mov	r3, #1
   119bc:	str	r3, [sp, #76]	; 0x4c
   119c0:	b	10f6c <abort@plt+0x194>
   119c4:	mov	r1, r4
   119c8:	ldr	r0, [pc, #480]	; 11bb0 <abort@plt+0xdd8>
   119cc:	bl	10c10 <strcmp@plt>
   119d0:	cmp	r0, #0
   119d4:	bne	11a74 <abort@plt+0xc9c>
   119d8:	add	r2, fp, #1
   119dc:	cmp	r6, r2
   119e0:	ble	11ae4 <abort@plt+0xd0c>
   119e4:	add	r5, r7, r5
   119e8:	mov	r2, #10
   119ec:	ldr	r0, [r5, #4]
   119f0:	mov	r1, #0
   119f4:	bl	10c1c <strtol@plt>
   119f8:	add	fp, fp, #2
   119fc:	cmp	r0, #1
   11a00:	movge	r3, r0
   11a04:	movlt	r3, #1
   11a08:	cmp	r6, fp
   11a0c:	str	r3, [sp, #72]	; 0x48
   11a10:	ble	11af4 <abort@plt+0xd1c>
   11a14:	ldr	r0, [r5, #8]
   11a18:	mov	r2, #10
   11a1c:	mov	r1, #0
   11a20:	bl	10c1c <strtol@plt>
   11a24:	ldr	r3, [sp, #52]	; 0x34
   11a28:	add	r3, r3, #1
   11a2c:	str	r3, [sp, #52]	; 0x34
   11a30:	cmp	r0, #1
   11a34:	movge	r3, r0
   11a38:	movlt	r3, #1
   11a3c:	str	r3, [sp, #88]	; 0x58
   11a40:	b	10f6c <abort@plt+0x194>
   11a44:	ldr	r1, [pc, #320]	; 11b8c <abort@plt+0xdb4>
   11a48:	ldr	r3, [sp, #92]	; 0x5c
   11a4c:	ldr	r2, [pc, #352]	; 11bb4 <abort@plt+0xddc>
   11a50:	ldr	r0, [r1]
   11a54:	mov	r1, #1
   11a58:	bl	10d30 <__fprintf_chk@plt>
   11a5c:	mov	r0, #0
   11a60:	bl	10de4 <abort@plt+0xc>
   11a64:	ldr	r1, [pc, #288]	; 11b8c <abort@plt+0xdb4>
   11a68:	ldr	r3, [sl]
   11a6c:	ldr	r2, [pc, #324]	; 11bb8 <abort@plt+0xde0>
   11a70:	b	11818 <abort@plt+0xa40>
   11a74:	mov	r1, r4
   11a78:	ldr	r0, [pc, #316]	; 11bbc <abort@plt+0xde4>
   11a7c:	bl	10c10 <strcmp@plt>
   11a80:	cmp	r0, #0
   11a84:	beq	11a9c <abort@plt+0xcc4>
   11a88:	mov	r1, r4
   11a8c:	ldr	r0, [pc, #300]	; 11bc0 <abort@plt+0xde8>
   11a90:	bl	10c10 <strcmp@plt>
   11a94:	cmp	r0, #0
   11a98:	bne	11aa8 <abort@plt+0xcd0>
   11a9c:	mov	r2, #1
   11aa0:	str	r2, [sl, #28]
   11aa4:	b	10f6c <abort@plt+0x194>
   11aa8:	ldr	r2, [pc, #220]	; 11b8c <abort@plt+0xdb4>
   11aac:	str	r4, [sp]
   11ab0:	ldr	r3, [sp, #92]	; 0x5c
   11ab4:	ldr	r0, [r2]
   11ab8:	mov	r1, #1
   11abc:	ldr	r2, [pc, #256]	; 11bc4 <abort@plt+0xdec>
   11ac0:	bl	10d30 <__fprintf_chk@plt>
   11ac4:	mov	r0, #0
   11ac8:	bl	10de4 <abort@plt+0xc>
   11acc:	ldr	r0, [pc, #244]	; 11bc8 <abort@plt+0xdf0>
   11ad0:	bl	10de4 <abort@plt+0xc>
   11ad4:	ldr	r0, [pc, #240]	; 11bcc <abort@plt+0xdf4>
   11ad8:	bl	10de4 <abort@plt+0xc>
   11adc:	ldr	r0, [pc, #236]	; 11bd0 <abort@plt+0xdf8>
   11ae0:	bl	10de4 <abort@plt+0xc>
   11ae4:	ldr	r0, [pc, #232]	; 11bd4 <abort@plt+0xdfc>
   11ae8:	bl	10de4 <abort@plt+0xc>
   11aec:	ldr	r0, [pc, #228]	; 11bd8 <abort@plt+0xe00>
   11af0:	bl	10de4 <abort@plt+0xc>
   11af4:	ldr	r0, [pc, #224]	; 11bdc <abort@plt+0xe04>
   11af8:	bl	10de4 <abort@plt+0xc>
   11afc:	ldr	r0, [pc, #220]	; 11be0 <abort@plt+0xe08>
   11b00:	bl	10de4 <abort@plt+0xc>
   11b04:	ldr	r0, [pc, #216]	; 11be4 <abort@plt+0xe0c>
   11b08:	bl	10de4 <abort@plt+0xc>
   11b0c:	ldr	r0, [pc, #212]	; 11be8 <abort@plt+0xe10>
   11b10:	bl	10de4 <abort@plt+0xc>
   11b14:	ldr	r0, [pc, #208]	; 11bec <abort@plt+0xe14>
   11b18:	bl	10de4 <abort@plt+0xc>
   11b1c:	ldr	r0, [pc, #204]	; 11bf0 <abort@plt+0xe18>
   11b20:	bl	10de4 <abort@plt+0xc>
   11b24:	ldr	r0, [pc, #200]	; 11bf4 <abort@plt+0xe1c>
   11b28:	bl	10de4 <abort@plt+0xc>
   11b2c:	ldr	r0, [pc, #196]	; 11bf8 <abort@plt+0xe20>
   11b30:	bl	10de4 <abort@plt+0xc>
   11b34:	strdeq	r3, [r2], -r0
   11b38:	andeq	r4, r2, r8, asr #1
   11b3c:	andeq	r2, r1, r0, asr fp
   11b40:	andeq	r2, r1, ip, asr fp
   11b44:	andeq	r2, r1, r0, lsl #23
   11b48:	andeq	r2, r1, r8, lsl #23
   11b4c:	andeq	r2, r1, r4, lsr #23
   11b50:	andeq	r2, r1, ip, lsr #23
   11b54:			; <UNDEFINED> instruction: 0x00012bb8
   11b58:	andeq	r2, r1, r4, asr #29
   11b5c:	andeq	r2, r1, r8, ror #29
   11b60:	andeq	r4, r2, r8, ror #1
   11b64:	andeq	r2, r1, r8, lsl #24
   11b68:	andeq	r2, r1, r8, lsr ip
   11b6c:	andeq	r2, r1, r0, asr #25
   11b70:	andeq	r2, r1, r8, asr #25
   11b74:	strheq	r4, [r2], -ip
   11b78:	andeq	r2, r1, ip, asr #25
   11b7c:	strdeq	r2, [r1], -ip
   11b80:	andeq	r2, r1, r0, lsl #26
   11b84:	andeq	r2, r1, r0, lsr sp
   11b88:	muleq	r1, r4, fp
   11b8c:	andeq	r4, r2, r0, asr #1
   11b90:	andeq	r2, r1, r0, lsr lr
   11b94:	muleq	r1, ip, lr
   11b98:	andeq	r2, r1, ip, asr #29
   11b9c:	strdeq	r2, [r1], -r8
   11ba0:	andeq	r2, r1, r8, lsr pc
   11ba4:	andeq	r2, r1, r4, asr sp
   11ba8:	andeq	r2, r1, ip, asr sp
   11bac:	andeq	r2, r1, r4, ror #26
   11bb0:	andeq	r2, r1, r8, lsr #27
   11bb4:	strdeq	r2, [r1], -ip
   11bb8:	andeq	r2, r1, r4, asr lr
   11bbc:	andeq	r2, r1, ip, asr #27
   11bc0:	ldrdeq	r2, [r1], -r0
   11bc4:	ldrdeq	r2, [r1], -ip
   11bc8:	andeq	r2, r1, r8, lsr sp
   11bcc:	andeq	r2, r1, ip, ror #26
   11bd0:	andeq	r2, r1, ip, lsl #26
   11bd4:	andeq	r2, r1, ip, lsl #27
   11bd8:	andeq	r2, r1, r0, lsr #25
   11bdc:			; <UNDEFINED> instruction: 0x00012db0
   11be0:	ldrdeq	r2, [r1], -r8
   11be4:	andeq	r2, r1, r0, asr #23
   11be8:	andeq	r2, r1, r8, asr #24
   11bec:	andeq	r2, r1, r0, lsl ip
   11bf0:	ldrdeq	r2, [r1], -ip
   11bf4:	andeq	r2, r1, r0, ror #22
   11bf8:	andeq	r2, r1, ip, ror #24
   11bfc:	mov	fp, #0
   11c00:	mov	lr, #0
   11c04:	pop	{r1}		; (ldr r1, [sp], #4)
   11c08:	mov	r2, sp
   11c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c10:	push	{r0}		; (str r0, [sp, #-4]!)
   11c14:	ldr	ip, [pc, #16]	; 11c2c <abort@plt+0xe54>
   11c18:	push	{ip}		; (str ip, [sp, #-4]!)
   11c1c:	ldr	r0, [pc, #12]	; 11c30 <abort@plt+0xe58>
   11c20:	ldr	r3, [pc, #12]	; 11c34 <abort@plt+0xe5c>
   11c24:	bl	10ca0 <__libc_start_main@plt>
   11c28:	bl	10dd8 <abort@plt>
   11c2c:	andeq	r2, r1, r4, asr #12
   11c30:	andeq	r0, r1, ip, asr #28
   11c34:	andeq	r2, r1, r4, ror #11
   11c38:	ldr	r3, [pc, #20]	; 11c54 <abort@plt+0xe7c>
   11c3c:	ldr	r2, [pc, #20]	; 11c58 <abort@plt+0xe80>
   11c40:	add	r3, pc, r3
   11c44:	ldr	r2, [r3, r2]
   11c48:	cmp	r2, #0
   11c4c:	bxeq	lr
   11c50:	b	10cb8 <__gmon_start__@plt>
   11c54:			; <UNDEFINED> instruction: 0x000123b8
   11c58:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11c5c:	ldr	r0, [pc, #24]	; 11c7c <abort@plt+0xea4>
   11c60:	ldr	r3, [pc, #24]	; 11c80 <abort@plt+0xea8>
   11c64:	cmp	r3, r0
   11c68:	bxeq	lr
   11c6c:	ldr	r3, [pc, #16]	; 11c84 <abort@plt+0xeac>
   11c70:	cmp	r3, #0
   11c74:	bxeq	lr
   11c78:	bx	r3
   11c7c:	andeq	r4, r2, r0, asr #1
   11c80:	andeq	r4, r2, r0, asr #1
   11c84:	andeq	r0, r0, r0
   11c88:	ldr	r0, [pc, #36]	; 11cb4 <abort@plt+0xedc>
   11c8c:	ldr	r1, [pc, #36]	; 11cb8 <abort@plt+0xee0>
   11c90:	sub	r1, r1, r0
   11c94:	asr	r1, r1, #2
   11c98:	add	r1, r1, r1, lsr #31
   11c9c:	asrs	r1, r1, #1
   11ca0:	bxeq	lr
   11ca4:	ldr	r3, [pc, #16]	; 11cbc <abort@plt+0xee4>
   11ca8:	cmp	r3, #0
   11cac:	bxeq	lr
   11cb0:	bx	r3
   11cb4:	andeq	r4, r2, r0, asr #1
   11cb8:	andeq	r4, r2, r0, asr #1
   11cbc:	andeq	r0, r0, r0
   11cc0:	push	{r4, lr}
   11cc4:	ldr	r4, [pc, #24]	; 11ce4 <abort@plt+0xf0c>
   11cc8:	ldrb	r3, [r4]
   11ccc:	cmp	r3, #0
   11cd0:	popne	{r4, pc}
   11cd4:	bl	11c5c <abort@plt+0xe84>
   11cd8:	mov	r3, #1
   11cdc:	strb	r3, [r4]
   11ce0:	pop	{r4, pc}
   11ce4:	andeq	r4, r2, r4, asr #1
   11ce8:	b	11c88 <abort@plt+0xeb0>
   11cec:	push	{r4, r5, r6, lr}
   11cf0:	sub	sp, sp, #24
   11cf4:	ldr	r5, [pc, #172]	; 11da8 <abort@plt+0xfd0>
   11cf8:	ldr	r4, [pc, #172]	; 11dac <abort@plt+0xfd4>
   11cfc:	ldr	lr, [sp, #40]	; 0x28
   11d00:	mov	r6, r0
   11d04:	ldr	ip, [r5]
   11d08:	add	r0, sp, #16
   11d0c:	str	r3, [sp, #8]
   11d10:	str	r2, [sp]
   11d14:	mov	r3, r1
   11d18:	str	r0, [sp, #4]
   11d1c:	mov	r2, r6
   11d20:	ldr	r1, [r4, #4]
   11d24:	str	lr, [sp, #12]
   11d28:	ldr	r0, [r4, #8]
   11d2c:	str	ip, [sp, #20]
   11d30:	bl	10dcc <XReadBitmapFile@plt>
   11d34:	cmp	r0, #0
   11d38:	bne	11d58 <abort@plt+0xf80>
   11d3c:	ldr	r2, [sp, #20]
   11d40:	ldr	r3, [r5]
   11d44:	ldr	r0, [sp, #16]
   11d48:	cmp	r2, r3
   11d4c:	bne	11d90 <abort@plt+0xfb8>
   11d50:	add	sp, sp, #24
   11d54:	pop	{r4, r5, r6, pc}
   11d58:	ldr	r2, [pc, #80]	; 11db0 <abort@plt+0xfd8>
   11d5c:	cmp	r0, #1
   11d60:	ldr	r3, [r4]
   11d64:	ldr	r2, [r2]
   11d68:	str	r6, [sp]
   11d6c:	beq	11d94 <abort@plt+0xfbc>
   11d70:	cmp	r0, #2
   11d74:	mov	r1, #1
   11d78:	mov	r0, r2
   11d7c:	ldreq	r2, [pc, #48]	; 11db4 <abort@plt+0xfdc>
   11d80:	ldrne	r2, [pc, #48]	; 11db8 <abort@plt+0xfe0>
   11d84:	bl	10d30 <__fprintf_chk@plt>
   11d88:	mov	r0, #1
   11d8c:	bl	10cc4 <exit@plt>
   11d90:	bl	10c64 <__stack_chk_fail@plt>
   11d94:	mov	r1, r0
   11d98:	mov	r0, r2
   11d9c:	ldr	r2, [pc, #24]	; 11dbc <abort@plt+0xfe4>
   11da0:	bl	10d30 <__fprintf_chk@plt>
   11da4:	b	11d88 <abort@plt+0xfb0>
   11da8:	strdeq	r3, [r2], -r0
   11dac:	andeq	r4, r2, r8, asr #1
   11db0:	andeq	r4, r2, r0, asr #1
   11db4:	muleq	r1, r8, sl
   11db8:			; <UNDEFINED> instruction: 0x00012ab8
   11dbc:	andeq	r2, r1, ip, ror sl
   11dc0:	push	{r4, r5, r6, r7, r8, lr}
   11dc4:	subs	r7, r1, #0
   11dc8:	ldr	r4, [pc, #200]	; 11e98 <abort@plt+0x10c0>
   11dcc:	ldr	r6, [pc, #200]	; 11e9c <abort@plt+0x10c4>
   11dd0:	sub	sp, sp, #40	; 0x28
   11dd4:	ldr	ip, [r4, #8]
   11dd8:	ldr	r3, [r4, #12]
   11ddc:	mov	r5, r0
   11de0:	ldr	r1, [ip, #140]	; 0x8c
   11de4:	add	r3, r3, r3, lsl #2
   11de8:	ldr	r0, [r6]
   11dec:	add	r3, r1, r3, lsl #4
   11df0:	mov	lr, r2
   11df4:	ldr	r1, [r3, #48]	; 0x30
   11df8:	str	r0, [sp, #36]	; 0x24
   11dfc:	beq	11e0c <abort@plt+0x1034>
   11e00:	ldrb	r3, [r7]
   11e04:	cmp	r3, #0
   11e08:	bne	11e44 <abort@plt+0x106c>
   11e0c:	add	r4, sp, #12
   11e10:	mov	r0, ip
   11e14:	mov	r2, r4
   11e18:	str	lr, [sp, #12]
   11e1c:	bl	10d60 <XQueryColor@plt>
   11e20:	ldm	r4, {r0, r1, r2}
   11e24:	ldr	ip, [sp, #36]	; 0x24
   11e28:	ldr	r3, [r6]
   11e2c:	stm	r5, {r0, r1, r2}
   11e30:	cmp	ip, r3
   11e34:	mov	r0, r5
   11e38:	bne	11e70 <abort@plt+0x1098>
   11e3c:	add	sp, sp, #40	; 0x28
   11e40:	pop	{r4, r5, r6, r7, r8, pc}
   11e44:	add	r8, sp, #24
   11e48:	mov	r0, ip
   11e4c:	mov	r3, r8
   11e50:	mov	r2, r7
   11e54:	bl	10d9c <XParseColor@plt>
   11e58:	cmp	r0, #0
   11e5c:	beq	11e74 <abort@plt+0x109c>
   11e60:	ldm	r8, {r0, r1, r2}
   11e64:	add	r4, sp, #12
   11e68:	stm	r4, {r0, r1, r2}
   11e6c:	b	11e20 <abort@plt+0x1048>
   11e70:	bl	10c64 <__stack_chk_fail@plt>
   11e74:	ldr	r2, [pc, #36]	; 11ea0 <abort@plt+0x10c8>
   11e78:	str	r7, [sp]
   11e7c:	mov	r1, #1
   11e80:	ldr	r0, [r2]
   11e84:	ldr	r3, [r4]
   11e88:	ldr	r2, [pc, #20]	; 11ea4 <abort@plt+0x10cc>
   11e8c:	bl	10d30 <__fprintf_chk@plt>
   11e90:	mov	r0, #1
   11e94:	bl	10cc4 <exit@plt>
   11e98:	andeq	r4, r2, r8, asr #1
   11e9c:	strdeq	r3, [r2], -r0
   11ea0:	andeq	r4, r2, r0, asr #1
   11ea4:	andeq	r2, r1, r0, ror #21
   11ea8:	push	{r4, r5, r6, lr}
   11eac:	mov	r6, r0
   11eb0:	ldr	r4, [pc, #264]	; 11fc0 <abort@plt+0x11e8>
   11eb4:	ldr	r5, [pc, #264]	; 11fc4 <abort@plt+0x11ec>
   11eb8:	sub	sp, sp, #24
   11ebc:	ldr	r0, [r4, #8]
   11ec0:	ldr	r3, [r4, #12]
   11ec4:	ldr	ip, [r5]
   11ec8:	ldr	r2, [r0, #140]	; 0x8c
   11ecc:	add	r3, r3, r3, lsl #2
   11ed0:	str	ip, [sp, #20]
   11ed4:	add	r3, r2, r3, lsl #4
   11ed8:	mov	r2, r6
   11edc:	ldr	r1, [r3, #48]	; 0x30
   11ee0:	add	r3, sp, #8
   11ee4:	bl	10d9c <XParseColor@plt>
   11ee8:	cmp	r0, #0
   11eec:	beq	11f98 <abort@plt+0x11c0>
   11ef0:	ldr	r0, [r4, #8]
   11ef4:	ldr	r3, [r4, #12]
   11ef8:	add	r2, sp, #8
   11efc:	ldr	r1, [r0, #140]	; 0x8c
   11f00:	add	r3, r3, r3, lsl #2
   11f04:	add	r3, r1, r3, lsl #4
   11f08:	ldr	r1, [r3, #48]	; 0x30
   11f0c:	bl	10c28 <XAllocColor@plt>
   11f10:	cmp	r0, #0
   11f14:	beq	11f74 <abort@plt+0x119c>
   11f18:	ldr	r3, [r4, #8]
   11f1c:	ldr	r2, [r4, #12]
   11f20:	ldr	r0, [sp, #8]
   11f24:	ldr	r3, [r3, #140]	; 0x8c
   11f28:	add	r2, r2, r2, lsl #2
   11f2c:	add	r3, r3, r2, lsl #4
   11f30:	ldr	r2, [r3, #56]	; 0x38
   11f34:	cmp	r0, r2
   11f38:	beq	11f5c <abort@plt+0x1184>
   11f3c:	ldr	r2, [r3, #52]	; 0x34
   11f40:	cmp	r0, r2
   11f44:	beq	11f5c <abort@plt+0x1184>
   11f48:	ldr	r3, [r3, #40]	; 0x28
   11f4c:	ldr	r3, [r3, #8]
   11f50:	tst	r3, #1
   11f54:	movne	r3, #1
   11f58:	strne	r3, [r4, #16]
   11f5c:	ldr	r2, [sp, #20]
   11f60:	ldr	r3, [r5]
   11f64:	cmp	r2, r3
   11f68:	bne	11fbc <abort@plt+0x11e4>
   11f6c:	add	sp, sp, #24
   11f70:	pop	{r4, r5, r6, pc}
   11f74:	ldr	r2, [pc, #76]	; 11fc8 <abort@plt+0x11f0>
   11f78:	str	r6, [sp]
   11f7c:	ldr	r3, [r4]
   11f80:	ldr	r0, [r2]
   11f84:	mov	r1, #1
   11f88:	ldr	r2, [pc, #60]	; 11fcc <abort@plt+0x11f4>
   11f8c:	bl	10d30 <__fprintf_chk@plt>
   11f90:	mov	r0, #1
   11f94:	bl	10cc4 <exit@plt>
   11f98:	ldr	r2, [pc, #40]	; 11fc8 <abort@plt+0x11f0>
   11f9c:	str	r6, [sp]
   11fa0:	ldr	r3, [r4]
   11fa4:	ldr	r0, [r2]
   11fa8:	mov	r1, #1
   11fac:	ldr	r2, [pc, #28]	; 11fd0 <abort@plt+0x11f8>
   11fb0:	bl	10d30 <__fprintf_chk@plt>
   11fb4:	mov	r0, #1
   11fb8:	bl	10cc4 <exit@plt>
   11fbc:	bl	10c64 <__stack_chk_fail@plt>
   11fc0:	andeq	r4, r2, r8, asr #1
   11fc4:	strdeq	r3, [r2], -r0
   11fc8:	andeq	r4, r2, r0, asr #1
   11fcc:	andeq	r2, r1, r8, lsr #22
   11fd0:	andeq	r2, r1, ip, lsl #22
   11fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11fd8:	mov	r6, r0
   11fdc:	ldr	r4, [pc, #412]	; 12180 <abort@plt+0x13a8>
   11fe0:	ldr	r5, [pc, #412]	; 12184 <abort@plt+0x13ac>
   11fe4:	sub	sp, sp, #128	; 0x80
   11fe8:	ldr	ip, [r4, #8]
   11fec:	ldr	r3, [r4, #12]
   11ff0:	ldr	r0, [r4, #20]
   11ff4:	ldr	ip, [ip, #140]	; 0x8c
   11ff8:	add	r3, r3, r3, lsl #2
   11ffc:	ldr	lr, [r5]
   12000:	add	r3, ip, r3, lsl #4
   12004:	cmp	r0, #0
   12008:	mov	r9, r2
   1200c:	mov	r8, r1
   12010:	ldr	r2, [r3, #56]	; 0x38
   12014:	str	lr, [sp, #124]	; 0x7c
   12018:	beq	12028 <abort@plt+0x1250>
   1201c:	ldrb	r3, [r0]
   12020:	cmp	r3, #0
   12024:	bne	12160 <abort@plt+0x1388>
   12028:	ldr	r1, [r4, #8]
   1202c:	ldr	r3, [r4, #12]
   12030:	str	r2, [sp, #40]	; 0x28
   12034:	ldr	r2, [r1, #140]	; 0x8c
   12038:	add	r3, r3, r3, lsl #2
   1203c:	ldr	r1, [r4, #24]
   12040:	add	r3, r2, r3, lsl #4
   12044:	cmp	r1, #0
   12048:	ldr	r0, [r3, #52]	; 0x34
   1204c:	beq	1205c <abort@plt+0x1284>
   12050:	ldrb	r3, [r1]
   12054:	cmp	r3, #0
   12058:	bne	12154 <abort@plt+0x137c>
   1205c:	ldr	r3, [r4, #28]
   12060:	str	r0, [sp, #44]	; 0x2c
   12064:	cmp	r3, #0
   12068:	mov	r2, #12
   1206c:	ldrne	r3, [sp, #40]	; 0x28
   12070:	ldr	r1, [r4, #4]
   12074:	strne	r0, [sp, #40]	; 0x28
   12078:	strne	r3, [sp, #44]	; 0x2c
   1207c:	ldr	r0, [r4, #8]
   12080:	add	r3, sp, #32
   12084:	bl	10d54 <XCreateGC@plt>
   12088:	ldrd	r2, [r4, #8]
   1208c:	ldr	r1, [r2, #140]	; 0x8c
   12090:	mov	r7, r0
   12094:	mov	r0, r2
   12098:	add	r2, r3, r3, lsl #2
   1209c:	mov	r3, r9
   120a0:	add	r1, r1, r2, lsl #4
   120a4:	mov	r2, r8
   120a8:	ldr	ip, [r1, #36]	; 0x24
   120ac:	ldr	r1, [r4, #4]
   120b0:	str	ip, [sp]
   120b4:	bl	10dc0 <XCreatePixmap@plt>
   120b8:	mov	r1, #0
   120bc:	mov	r3, r7
   120c0:	str	r1, [sp, #20]
   120c4:	str	r1, [sp, #16]
   120c8:	str	r1, [sp, #4]
   120cc:	str	r1, [sp]
   120d0:	strd	r8, [sp, #8]
   120d4:	mov	r1, r6
   120d8:	mov	sl, r0
   120dc:	mov	r0, #1
   120e0:	mov	r2, sl
   120e4:	str	r0, [sp, #24]
   120e8:	ldr	r0, [r4, #8]
   120ec:	bl	10c40 <XCopyPlane@plt>
   120f0:	mov	r2, sl
   120f4:	ldr	r1, [r4, #4]
   120f8:	ldr	r0, [r4, #8]
   120fc:	bl	10d6c <XSetWindowBackgroundPixmap@plt>
   12100:	mov	r1, r7
   12104:	ldr	r0, [r4, #8]
   12108:	bl	10d90 <XFreeGC@plt>
   1210c:	mov	r1, r6
   12110:	ldr	r0, [r4, #8]
   12114:	bl	10c70 <XFreePixmap@plt>
   12118:	ldr	r3, [r4, #16]
   1211c:	cmp	r3, #0
   12120:	strne	sl, [r4, #32]
   12124:	beq	1216c <abort@plt+0x1394>
   12128:	ldr	r1, [r4, #4]
   1212c:	ldr	r0, [r4, #8]
   12130:	bl	10c04 <XClearWindow@plt>
   12134:	ldr	r1, [sp, #124]	; 0x7c
   12138:	ldr	r2, [r5]
   1213c:	mov	r3, #1
   12140:	cmp	r1, r2
   12144:	str	r3, [r4, #36]	; 0x24
   12148:	bne	1217c <abort@plt+0x13a4>
   1214c:	add	sp, sp, #128	; 0x80
   12150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12154:	mov	r0, r1
   12158:	bl	11ea8 <abort@plt+0x10d0>
   1215c:	b	1205c <abort@plt+0x1284>
   12160:	bl	11ea8 <abort@plt+0x10d0>
   12164:	mov	r2, r0
   12168:	b	12028 <abort@plt+0x1250>
   1216c:	mov	r1, sl
   12170:	ldr	r0, [r4, #8]
   12174:	bl	10c70 <XFreePixmap@plt>
   12178:	b	12128 <abort@plt+0x1350>
   1217c:	bl	10c64 <__stack_chk_fail@plt>
   12180:	andeq	r4, r2, r8, asr #1
   12184:	strdeq	r3, [r2], -r0
   12188:	subs	r2, r1, #1
   1218c:	bxeq	lr
   12190:	bcc	12368 <abort@plt+0x1590>
   12194:	cmp	r0, r1
   12198:	bls	1234c <abort@plt+0x1574>
   1219c:	tst	r1, r2
   121a0:	beq	12358 <abort@plt+0x1580>
   121a4:	clz	r3, r0
   121a8:	clz	r2, r1
   121ac:	sub	r3, r2, r3
   121b0:	rsbs	r3, r3, #31
   121b4:	addne	r3, r3, r3, lsl #1
   121b8:	mov	r2, #0
   121bc:	addne	pc, pc, r3, lsl #2
   121c0:	nop			; (mov r0, r0)
   121c4:	cmp	r0, r1, lsl #31
   121c8:	adc	r2, r2, r2
   121cc:	subcs	r0, r0, r1, lsl #31
   121d0:	cmp	r0, r1, lsl #30
   121d4:	adc	r2, r2, r2
   121d8:	subcs	r0, r0, r1, lsl #30
   121dc:	cmp	r0, r1, lsl #29
   121e0:	adc	r2, r2, r2
   121e4:	subcs	r0, r0, r1, lsl #29
   121e8:	cmp	r0, r1, lsl #28
   121ec:	adc	r2, r2, r2
   121f0:	subcs	r0, r0, r1, lsl #28
   121f4:	cmp	r0, r1, lsl #27
   121f8:	adc	r2, r2, r2
   121fc:	subcs	r0, r0, r1, lsl #27
   12200:	cmp	r0, r1, lsl #26
   12204:	adc	r2, r2, r2
   12208:	subcs	r0, r0, r1, lsl #26
   1220c:	cmp	r0, r1, lsl #25
   12210:	adc	r2, r2, r2
   12214:	subcs	r0, r0, r1, lsl #25
   12218:	cmp	r0, r1, lsl #24
   1221c:	adc	r2, r2, r2
   12220:	subcs	r0, r0, r1, lsl #24
   12224:	cmp	r0, r1, lsl #23
   12228:	adc	r2, r2, r2
   1222c:	subcs	r0, r0, r1, lsl #23
   12230:	cmp	r0, r1, lsl #22
   12234:	adc	r2, r2, r2
   12238:	subcs	r0, r0, r1, lsl #22
   1223c:	cmp	r0, r1, lsl #21
   12240:	adc	r2, r2, r2
   12244:	subcs	r0, r0, r1, lsl #21
   12248:	cmp	r0, r1, lsl #20
   1224c:	adc	r2, r2, r2
   12250:	subcs	r0, r0, r1, lsl #20
   12254:	cmp	r0, r1, lsl #19
   12258:	adc	r2, r2, r2
   1225c:	subcs	r0, r0, r1, lsl #19
   12260:	cmp	r0, r1, lsl #18
   12264:	adc	r2, r2, r2
   12268:	subcs	r0, r0, r1, lsl #18
   1226c:	cmp	r0, r1, lsl #17
   12270:	adc	r2, r2, r2
   12274:	subcs	r0, r0, r1, lsl #17
   12278:	cmp	r0, r1, lsl #16
   1227c:	adc	r2, r2, r2
   12280:	subcs	r0, r0, r1, lsl #16
   12284:	cmp	r0, r1, lsl #15
   12288:	adc	r2, r2, r2
   1228c:	subcs	r0, r0, r1, lsl #15
   12290:	cmp	r0, r1, lsl #14
   12294:	adc	r2, r2, r2
   12298:	subcs	r0, r0, r1, lsl #14
   1229c:	cmp	r0, r1, lsl #13
   122a0:	adc	r2, r2, r2
   122a4:	subcs	r0, r0, r1, lsl #13
   122a8:	cmp	r0, r1, lsl #12
   122ac:	adc	r2, r2, r2
   122b0:	subcs	r0, r0, r1, lsl #12
   122b4:	cmp	r0, r1, lsl #11
   122b8:	adc	r2, r2, r2
   122bc:	subcs	r0, r0, r1, lsl #11
   122c0:	cmp	r0, r1, lsl #10
   122c4:	adc	r2, r2, r2
   122c8:	subcs	r0, r0, r1, lsl #10
   122cc:	cmp	r0, r1, lsl #9
   122d0:	adc	r2, r2, r2
   122d4:	subcs	r0, r0, r1, lsl #9
   122d8:	cmp	r0, r1, lsl #8
   122dc:	adc	r2, r2, r2
   122e0:	subcs	r0, r0, r1, lsl #8
   122e4:	cmp	r0, r1, lsl #7
   122e8:	adc	r2, r2, r2
   122ec:	subcs	r0, r0, r1, lsl #7
   122f0:	cmp	r0, r1, lsl #6
   122f4:	adc	r2, r2, r2
   122f8:	subcs	r0, r0, r1, lsl #6
   122fc:	cmp	r0, r1, lsl #5
   12300:	adc	r2, r2, r2
   12304:	subcs	r0, r0, r1, lsl #5
   12308:	cmp	r0, r1, lsl #4
   1230c:	adc	r2, r2, r2
   12310:	subcs	r0, r0, r1, lsl #4
   12314:	cmp	r0, r1, lsl #3
   12318:	adc	r2, r2, r2
   1231c:	subcs	r0, r0, r1, lsl #3
   12320:	cmp	r0, r1, lsl #2
   12324:	adc	r2, r2, r2
   12328:	subcs	r0, r0, r1, lsl #2
   1232c:	cmp	r0, r1, lsl #1
   12330:	adc	r2, r2, r2
   12334:	subcs	r0, r0, r1, lsl #1
   12338:	cmp	r0, r1
   1233c:	adc	r2, r2, r2
   12340:	subcs	r0, r0, r1
   12344:	mov	r0, r2
   12348:	bx	lr
   1234c:	moveq	r0, #1
   12350:	movne	r0, #0
   12354:	bx	lr
   12358:	clz	r2, r1
   1235c:	rsb	r2, r2, #31
   12360:	lsr	r0, r0, r2
   12364:	bx	lr
   12368:	cmp	r0, #0
   1236c:	mvnne	r0, #0
   12370:	b	125d4 <abort@plt+0x17fc>
   12374:	cmp	r1, #0
   12378:	beq	12368 <abort@plt+0x1590>
   1237c:	push	{r0, r1, lr}
   12380:	bl	12188 <abort@plt+0x13b0>
   12384:	pop	{r1, r2, lr}
   12388:	mul	r3, r2, r0
   1238c:	sub	r1, r1, r3
   12390:	bx	lr
   12394:	cmp	r1, #0
   12398:	beq	125a4 <abort@plt+0x17cc>
   1239c:	eor	ip, r0, r1
   123a0:	rsbmi	r1, r1, #0
   123a4:	subs	r2, r1, #1
   123a8:	beq	12570 <abort@plt+0x1798>
   123ac:	movs	r3, r0
   123b0:	rsbmi	r3, r0, #0
   123b4:	cmp	r3, r1
   123b8:	bls	1257c <abort@plt+0x17a4>
   123bc:	tst	r1, r2
   123c0:	beq	1258c <abort@plt+0x17b4>
   123c4:	clz	r2, r3
   123c8:	clz	r0, r1
   123cc:	sub	r2, r0, r2
   123d0:	rsbs	r2, r2, #31
   123d4:	addne	r2, r2, r2, lsl #1
   123d8:	mov	r0, #0
   123dc:	addne	pc, pc, r2, lsl #2
   123e0:	nop			; (mov r0, r0)
   123e4:	cmp	r3, r1, lsl #31
   123e8:	adc	r0, r0, r0
   123ec:	subcs	r3, r3, r1, lsl #31
   123f0:	cmp	r3, r1, lsl #30
   123f4:	adc	r0, r0, r0
   123f8:	subcs	r3, r3, r1, lsl #30
   123fc:	cmp	r3, r1, lsl #29
   12400:	adc	r0, r0, r0
   12404:	subcs	r3, r3, r1, lsl #29
   12408:	cmp	r3, r1, lsl #28
   1240c:	adc	r0, r0, r0
   12410:	subcs	r3, r3, r1, lsl #28
   12414:	cmp	r3, r1, lsl #27
   12418:	adc	r0, r0, r0
   1241c:	subcs	r3, r3, r1, lsl #27
   12420:	cmp	r3, r1, lsl #26
   12424:	adc	r0, r0, r0
   12428:	subcs	r3, r3, r1, lsl #26
   1242c:	cmp	r3, r1, lsl #25
   12430:	adc	r0, r0, r0
   12434:	subcs	r3, r3, r1, lsl #25
   12438:	cmp	r3, r1, lsl #24
   1243c:	adc	r0, r0, r0
   12440:	subcs	r3, r3, r1, lsl #24
   12444:	cmp	r3, r1, lsl #23
   12448:	adc	r0, r0, r0
   1244c:	subcs	r3, r3, r1, lsl #23
   12450:	cmp	r3, r1, lsl #22
   12454:	adc	r0, r0, r0
   12458:	subcs	r3, r3, r1, lsl #22
   1245c:	cmp	r3, r1, lsl #21
   12460:	adc	r0, r0, r0
   12464:	subcs	r3, r3, r1, lsl #21
   12468:	cmp	r3, r1, lsl #20
   1246c:	adc	r0, r0, r0
   12470:	subcs	r3, r3, r1, lsl #20
   12474:	cmp	r3, r1, lsl #19
   12478:	adc	r0, r0, r0
   1247c:	subcs	r3, r3, r1, lsl #19
   12480:	cmp	r3, r1, lsl #18
   12484:	adc	r0, r0, r0
   12488:	subcs	r3, r3, r1, lsl #18
   1248c:	cmp	r3, r1, lsl #17
   12490:	adc	r0, r0, r0
   12494:	subcs	r3, r3, r1, lsl #17
   12498:	cmp	r3, r1, lsl #16
   1249c:	adc	r0, r0, r0
   124a0:	subcs	r3, r3, r1, lsl #16
   124a4:	cmp	r3, r1, lsl #15
   124a8:	adc	r0, r0, r0
   124ac:	subcs	r3, r3, r1, lsl #15
   124b0:	cmp	r3, r1, lsl #14
   124b4:	adc	r0, r0, r0
   124b8:	subcs	r3, r3, r1, lsl #14
   124bc:	cmp	r3, r1, lsl #13
   124c0:	adc	r0, r0, r0
   124c4:	subcs	r3, r3, r1, lsl #13
   124c8:	cmp	r3, r1, lsl #12
   124cc:	adc	r0, r0, r0
   124d0:	subcs	r3, r3, r1, lsl #12
   124d4:	cmp	r3, r1, lsl #11
   124d8:	adc	r0, r0, r0
   124dc:	subcs	r3, r3, r1, lsl #11
   124e0:	cmp	r3, r1, lsl #10
   124e4:	adc	r0, r0, r0
   124e8:	subcs	r3, r3, r1, lsl #10
   124ec:	cmp	r3, r1, lsl #9
   124f0:	adc	r0, r0, r0
   124f4:	subcs	r3, r3, r1, lsl #9
   124f8:	cmp	r3, r1, lsl #8
   124fc:	adc	r0, r0, r0
   12500:	subcs	r3, r3, r1, lsl #8
   12504:	cmp	r3, r1, lsl #7
   12508:	adc	r0, r0, r0
   1250c:	subcs	r3, r3, r1, lsl #7
   12510:	cmp	r3, r1, lsl #6
   12514:	adc	r0, r0, r0
   12518:	subcs	r3, r3, r1, lsl #6
   1251c:	cmp	r3, r1, lsl #5
   12520:	adc	r0, r0, r0
   12524:	subcs	r3, r3, r1, lsl #5
   12528:	cmp	r3, r1, lsl #4
   1252c:	adc	r0, r0, r0
   12530:	subcs	r3, r3, r1, lsl #4
   12534:	cmp	r3, r1, lsl #3
   12538:	adc	r0, r0, r0
   1253c:	subcs	r3, r3, r1, lsl #3
   12540:	cmp	r3, r1, lsl #2
   12544:	adc	r0, r0, r0
   12548:	subcs	r3, r3, r1, lsl #2
   1254c:	cmp	r3, r1, lsl #1
   12550:	adc	r0, r0, r0
   12554:	subcs	r3, r3, r1, lsl #1
   12558:	cmp	r3, r1
   1255c:	adc	r0, r0, r0
   12560:	subcs	r3, r3, r1
   12564:	cmp	ip, #0
   12568:	rsbmi	r0, r0, #0
   1256c:	bx	lr
   12570:	teq	ip, r0
   12574:	rsbmi	r0, r0, #0
   12578:	bx	lr
   1257c:	movcc	r0, #0
   12580:	asreq	r0, ip, #31
   12584:	orreq	r0, r0, #1
   12588:	bx	lr
   1258c:	clz	r2, r1
   12590:	rsb	r2, r2, #31
   12594:	cmp	ip, #0
   12598:	lsr	r0, r3, r2
   1259c:	rsbmi	r0, r0, #0
   125a0:	bx	lr
   125a4:	cmp	r0, #0
   125a8:	mvngt	r0, #-2147483648	; 0x80000000
   125ac:	movlt	r0, #-2147483648	; 0x80000000
   125b0:	b	125d4 <abort@plt+0x17fc>
   125b4:	cmp	r1, #0
   125b8:	beq	125a4 <abort@plt+0x17cc>
   125bc:	push	{r0, r1, lr}
   125c0:	bl	1239c <abort@plt+0x15c4>
   125c4:	pop	{r1, r2, lr}
   125c8:	mul	r3, r2, r0
   125cc:	sub	r1, r1, r3
   125d0:	bx	lr
   125d4:	push	{r1, lr}
   125d8:	mov	r0, #8
   125dc:	bl	10bf8 <raise@plt>
   125e0:	pop	{r1, pc}
   125e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125e8:	mov	r7, r0
   125ec:	ldr	r6, [pc, #72]	; 1263c <abort@plt+0x1864>
   125f0:	ldr	r5, [pc, #72]	; 12640 <abort@plt+0x1868>
   125f4:	add	r6, pc, r6
   125f8:	add	r5, pc, r5
   125fc:	sub	r6, r6, r5
   12600:	mov	r8, r1
   12604:	mov	r9, r2
   12608:	bl	10bd8 <raise@plt-0x20>
   1260c:	asrs	r6, r6, #2
   12610:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12614:	mov	r4, #0
   12618:	add	r4, r4, #1
   1261c:	ldr	r3, [r5], #4
   12620:	mov	r2, r9
   12624:	mov	r1, r8
   12628:	mov	r0, r7
   1262c:	blx	r3
   12630:	cmp	r6, r4
   12634:	bne	12618 <abort@plt+0x1840>
   12638:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1263c:	strdeq	r1, [r1], -r0
   12640:	andeq	r1, r1, r8, ror #17
   12644:	bx	lr

Disassembly of section .fini:

00012648 <.fini>:
   12648:	push	{r3, lr}
   1264c:	pop	{r3, pc}
