
raspbian-preinstalled/lxhotkey:     file format elf32-littlearm


Disassembly of section .init:

00010e64 <_init@@Base>:
   10e64:	push	{r3, lr}
   10e68:	bl	11f18 <g_strcmp0@plt+0xe30>
   10e6c:	pop	{r3, pc}

Disassembly of section .plt:

00010e70 <g_list_reverse@plt-0x14>:
   10e70:	push	{lr}		; (str lr, [sp, #-4]!)
   10e74:	ldr	lr, [pc, #4]	; 10e80 <_init@@Base+0x1c>
   10e78:	add	lr, pc, lr
   10e7c:	ldr	pc, [lr, #8]!
   10e80:	muleq	r1, ip, r0

00010e84 <g_list_reverse@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #77824	; 0x13000
   10e8c:	ldr	pc, [ip, #156]!	; 0x9c

00010e90 <g_error_free@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #77824	; 0x13000
   10e98:	ldr	pc, [ip, #148]!	; 0x94

00010e9c <strtol@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #77824	; 0x13000
   10ea4:	ldr	pc, [ip, #140]!	; 0x8c

00010ea8 <XGetWindowProperty@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #77824	; 0x13000
   10eb0:	ldr	pc, [ip, #132]!	; 0x84

00010eb4 <g_strndup@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #77824	; 0x13000
   10ebc:	ldr	pc, [ip, #124]!	; 0x7c

00010ec0 <bind_textdomain_codeset@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #77824	; 0x13000
   10ec8:	ldr	pc, [ip, #116]!	; 0x74

00010ecc <g_string_truncate@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #77824	; 0x13000
   10ed4:	ldr	pc, [ip, #108]!	; 0x6c

00010ed8 <ulc_fprintf@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #77824	; 0x13000
   10ee0:	ldr	pc, [ip, #100]!	; 0x64

00010ee4 <g_set_error_literal@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #77824	; 0x13000
   10eec:	ldr	pc, [ip, #92]!	; 0x5c

00010ef0 <g_list_free@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #77824	; 0x13000
   10ef8:	ldr	pc, [ip, #84]!	; 0x54

00010efc <textdomain@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #77824	; 0x13000
   10f04:	ldr	pc, [ip, #76]!	; 0x4c

00010f08 <__fprintf_chk@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #77824	; 0x13000
   10f10:	ldr	pc, [ip, #68]!	; 0x44

00010f14 <g_strdup@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #77824	; 0x13000
   10f1c:	ldr	pc, [ip, #60]!	; 0x3c

00010f20 <XInternAtom@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #77824	; 0x13000
   10f28:	ldr	pc, [ip, #52]!	; 0x34

00010f2c <g_malloc@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #77824	; 0x13000
   10f34:	ldr	pc, [ip, #44]!	; 0x2c

00010f38 <abort@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #77824	; 0x13000
   10f40:	ldr	pc, [ip, #36]!	; 0x24

00010f44 <fm_module_unregister_type@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #77824	; 0x13000
   10f4c:	ldr	pc, [ip, #28]!

00010f50 <g_string_insert_c@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #77824	; 0x13000
   10f58:	ldr	pc, [ip, #20]!

00010f5c <g_slice_alloc0@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #77824	; 0x13000
   10f64:	ldr	pc, [ip, #12]!

00010f68 <g_string_sized_new@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #77824	; 0x13000
   10f70:	ldr	pc, [ip, #4]!

00010f74 <g_list_free_full@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #73728	; 0x12000
   10f7c:	ldr	pc, [ip, #4092]!	; 0xffc

00010f80 <__stack_chk_fail@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #73728	; 0x12000
   10f88:	ldr	pc, [ip, #4084]!	; 0xff4

00010f8c <g_list_prepend@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #73728	; 0x12000
   10f94:	ldr	pc, [ip, #4076]!	; 0xfec

00010f98 <g_getenv@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #73728	; 0x12000
   10fa0:	ldr	pc, [ip, #4068]!	; 0xfe4

00010fa4 <fm_init@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #73728	; 0x12000
   10fac:	ldr	pc, [ip, #4060]!	; 0xfdc

00010fb0 <g_free@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #73728	; 0x12000
   10fb8:	ldr	pc, [ip, #4052]!	; 0xfd4

00010fbc <dcgettext@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #73728	; 0x12000
   10fc4:	ldr	pc, [ip, #4044]!	; 0xfcc

00010fc8 <g_file_test@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #73728	; 0x12000
   10fd0:	ldr	pc, [ip, #4036]!	; 0xfc4

00010fd4 <XFree@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #73728	; 0x12000
   10fdc:	ldr	pc, [ip, #4028]!	; 0xfbc

00010fe0 <bindtextdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #73728	; 0x12000
   10fe8:	ldr	pc, [ip, #4020]!	; 0xfb4

00010fec <XOpenDisplay@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #73728	; 0x12000
   10ff4:	ldr	pc, [ip, #4012]!	; 0xfac

00010ff8 <g_quark_from_static_string@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #73728	; 0x12000
   11000:	ldr	pc, [ip, #4004]!	; 0xfa4

00011004 <setlocale@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #73728	; 0x12000
   1100c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011010 <g_string_free@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #73728	; 0x12000
   11018:	ldr	pc, [ip, #3988]!	; 0xf94

0001101c <fwrite@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #73728	; 0x12000
   11024:	ldr	pc, [ip, #3980]!	; 0xf8c

00011028 <memcpy@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #73728	; 0x12000
   11030:	ldr	pc, [ip, #3972]!	; 0xf84

00011034 <__snprintf_chk@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #73728	; 0x12000
   1103c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011040 <fm_modules_add_directory@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #73728	; 0x12000
   11048:	ldr	pc, [ip, #3956]!	; 0xf74

0001104c <g_ascii_strcasecmp@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #73728	; 0x12000
   11054:	ldr	pc, [ip, #3948]!	; 0xf6c

00011058 <strcmp@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #73728	; 0x12000
   11060:	ldr	pc, [ip, #3940]!	; 0xf64

00011064 <fm_module_register_type@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #73728	; 0x12000
   1106c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011070 <fm_modules_load@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #73728	; 0x12000
   11078:	ldr	pc, [ip, #3924]!	; 0xf54

0001107c <memcmp@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #73728	; 0x12000
   11084:	ldr	pc, [ip, #3916]!	; 0xf4c

00011088 <g_locale_to_utf8@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #73728	; 0x12000
   11090:	ldr	pc, [ip, #3908]!	; 0xf44

00011094 <g_slice_free1@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #73728	; 0x12000
   1109c:	ldr	pc, [ip, #3900]!	; 0xf3c

000110a0 <g_set_error@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #73728	; 0x12000
   110a8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ac <__libc_start_main@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #73728	; 0x12000
   110b4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110b8 <__gmon_start__@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #73728	; 0x12000
   110c0:	ldr	pc, [ip, #3876]!	; 0xf24

000110c4 <strchr@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #73728	; 0x12000
   110cc:	ldr	pc, [ip, #3868]!	; 0xf1c

000110d0 <__printf_chk@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #73728	; 0x12000
   110d8:	ldr	pc, [ip, #3860]!	; 0xf14

000110dc <g_prefix_error@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #73728	; 0x12000
   110e4:	ldr	pc, [ip, #3852]!	; 0xf0c

000110e8 <g_strcmp0@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #73728	; 0x12000
   110f0:	ldr	pc, [ip, #3844]!	; 0xf04

Disassembly of section .text:

000110f4 <.text>:
   110f4:	ldr	r3, [pc, #3332]	; 11e00 <g_strcmp0@plt+0xd18>
   110f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110fc:	sub	sp, sp, #108	; 0x6c
   11100:	ldr	r2, [r3]
   11104:	mov	r9, r0
   11108:	mov	r3, #0
   1110c:	mov	r8, r1
   11110:	ldr	r0, [pc, #3308]	; 11e04 <g_strcmp0@plt+0xd1c>
   11114:	ldr	r1, [pc, #3308]	; 11e08 <g_strcmp0@plt+0xd20>
   11118:	str	r2, [sp, #100]	; 0x64
   1111c:	str	r3, [sp, #36]	; 0x24
   11120:	str	r3, [sp, #40]	; 0x28
   11124:	bl	10fe0 <bindtextdomain@plt>
   11128:	ldr	r1, [pc, #3292]	; 11e0c <g_strcmp0@plt+0xd24>
   1112c:	ldr	r0, [pc, #3280]	; 11e04 <g_strcmp0@plt+0xd1c>
   11130:	bl	10ec0 <bind_textdomain_codeset@plt>
   11134:	ldr	r0, [pc, #3272]	; 11e04 <g_strcmp0@plt+0xd1c>
   11138:	bl	10efc <textdomain@plt>
   1113c:	ldr	r1, [pc, #3276]	; 11e10 <g_strcmp0@plt+0xd28>
   11140:	mov	r0, #5
   11144:	bl	11004 <setlocale@plt>
   11148:	cmp	r9, #1
   1114c:	ble	113ec <g_strcmp0@plt+0x304>
   11150:	ldr	r7, [r8, #4]
   11154:	ldrb	r3, [r7]
   11158:	cmp	r3, #45	; 0x2d
   1115c:	beq	11b04 <g_strcmp0@plt+0xa1c>
   11160:	ldr	r1, [pc, #3244]	; 11e14 <g_strcmp0@plt+0xd2c>
   11164:	mov	r0, r7
   11168:	bl	11058 <strcmp@plt>
   1116c:	cmp	r0, #0
   11170:	beq	11404 <g_strcmp0@plt+0x31c>
   11174:	ldrb	r3, [r7]
   11178:	cmp	r3, #45	; 0x2d
   1117c:	beq	113f8 <g_strcmp0@plt+0x310>
   11180:	mov	r2, #4
   11184:	ldr	r1, [pc, #3212]	; 11e18 <g_strcmp0@plt+0xd30>
   11188:	mov	r0, r7
   1118c:	bl	1107c <memcmp@plt>
   11190:	cmp	r0, #0
   11194:	bne	11248 <g_strcmp0@plt+0x160>
   11198:	bl	10fa4 <fm_init@plt>
   1119c:	ldr	r0, [pc, #3192]	; 11e1c <g_strcmp0@plt+0xd34>
   111a0:	bl	11040 <fm_modules_add_directory@plt>
   111a4:	mov	r2, #1
   111a8:	mov	r1, r2
   111ac:	ldr	r3, [pc, #3180]	; 11e20 <g_strcmp0@plt+0xd38>
   111b0:	ldr	r0, [pc, #3148]	; 11e04 <g_strcmp0@plt+0xd1c>
   111b4:	bl	11064 <fm_module_register_type@plt>
   111b8:	mov	r2, #1
   111bc:	ldr	r3, [pc, #3168]	; 11e24 <g_strcmp0@plt+0xd3c>
   111c0:	mov	r1, r2
   111c4:	ldr	r0, [pc, #3164]	; 11e28 <g_strcmp0@plt+0xd40>
   111c8:	bl	11064 <fm_module_register_type@plt>
   111cc:	ldr	r0, [pc, #3160]	; 11e2c <g_strcmp0@plt+0xd44>
   111d0:	bl	10ff8 <g_quark_from_static_string@plt>
   111d4:	ldr	r3, [pc, #3156]	; 11e30 <g_strcmp0@plt+0xd48>
   111d8:	ldr	r4, [pc, #3156]	; 11e34 <g_strcmp0@plt+0xd4c>
   111dc:	add	r7, r7, #4
   111e0:	ldr	r3, [r3]
   111e4:	cmp	r3, #0
   111e8:	str	r0, [r4, #8]
   111ec:	beq	1151c <g_strcmp0@plt+0x434>
   111f0:	ldr	r5, [r4, #4]
   111f4:	cmp	r5, #0
   111f8:	bne	1120c <g_strcmp0@plt+0x124>
   111fc:	b	1123c <g_strcmp0@plt+0x154>
   11200:	ldr	r5, [r5]
   11204:	cmp	r5, #0
   11208:	beq	1123c <g_strcmp0@plt+0x154>
   1120c:	mov	r1, r7
   11210:	ldr	r0, [r5, #4]
   11214:	bl	1104c <g_ascii_strcasecmp@plt>
   11218:	cmp	r0, #0
   1121c:	bne	11200 <g_strcmp0@plt+0x118>
   11220:	ldr	r3, [r5, #8]
   11224:	ldr	r3, [r3, #8]
   11228:	cmp	r3, #0
   1122c:	beq	1123c <g_strcmp0@plt+0x154>
   11230:	mov	r1, r8
   11234:	mov	r0, r9
   11238:	blx	r3
   1123c:	mov	r3, #1
   11240:	str	r3, [sp, #8]
   11244:	b	112a4 <g_strcmp0@plt+0x1bc>
   11248:	mov	r0, #0
   1124c:	bl	10fa4 <fm_init@plt>
   11250:	ldr	r0, [pc, #3012]	; 11e1c <g_strcmp0@plt+0xd34>
   11254:	bl	11040 <fm_modules_add_directory@plt>
   11258:	mov	r2, #1
   1125c:	ldr	r3, [pc, #3004]	; 11e20 <g_strcmp0@plt+0xd38>
   11260:	mov	r1, r2
   11264:	ldr	r0, [pc, #2968]	; 11e04 <g_strcmp0@plt+0xd1c>
   11268:	bl	11064 <fm_module_register_type@plt>
   1126c:	ldr	r0, [pc, #3000]	; 11e2c <g_strcmp0@plt+0xd44>
   11270:	bl	10ff8 <g_quark_from_static_string@plt>
   11274:	ldr	r3, [pc, #2996]	; 11e30 <g_strcmp0@plt+0xd48>
   11278:	ldr	r4, [pc, #2996]	; 11e34 <g_strcmp0@plt+0xd4c>
   1127c:	ldr	r3, [r3]
   11280:	cmp	r3, #0
   11284:	str	r0, [r4, #8]
   11288:	bne	11524 <g_strcmp0@plt+0x43c>
   1128c:	str	r3, [sp, #8]
   11290:	bl	11070 <fm_modules_load@plt>
   11294:	ldr	r3, [sp, #8]
   11298:	cmp	r3, #0
   1129c:	bne	111f0 <g_strcmp0@plt+0x108>
   112a0:	mov	r5, r3
   112a4:	ldr	r0, [pc, #2956]	; 11e38 <g_strcmp0@plt+0xd50>
   112a8:	bl	10f98 <g_getenv@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	112d4 <g_strcmp0@plt+0x1ec>
   112b4:	mov	r1, #58	; 0x3a
   112b8:	bl	110c4 <strchr@plt>
   112bc:	cmp	r0, #0
   112c0:	beq	112d4 <g_strcmp0@plt+0x1ec>
   112c4:	ldrb	r3, [r0, #1]
   112c8:	sub	r3, r3, #48	; 0x30
   112cc:	cmp	r3, #9
   112d0:	bls	11530 <g_strcmp0@plt+0x448>
   112d4:	ldr	r6, [r4, #8]
   112d8:	ldr	r1, [pc, #2908]	; 11e3c <g_strcmp0@plt+0xd54>
   112dc:	mov	r2, #5
   112e0:	mov	r0, #0
   112e4:	bl	10fbc <dcgettext@plt>
   112e8:	mov	r1, r6
   112ec:	mov	r6, #0
   112f0:	mov	r2, #1
   112f4:	mov	fp, r6
   112f8:	mov	r3, r0
   112fc:	add	r0, sp, #40	; 0x28
   11300:	bl	10ee4 <g_set_error_literal@plt>
   11304:	mov	r3, #1
   11308:	str	r3, [sp, #12]
   1130c:	ldr	sl, [sp, #36]	; 0x24
   11310:	cmp	sl, #0
   11314:	beq	11328 <g_strcmp0@plt+0x240>
   11318:	ldr	r3, [r6, #8]
   1131c:	mov	r0, sl
   11320:	ldr	r3, [r3, #8]
   11324:	blx	r3
   11328:	ldr	r0, [sp, #40]	; 0x28
   1132c:	cmp	r0, #0
   11330:	beq	11358 <g_strcmp0@plt+0x270>
   11334:	cmp	r5, #0
   11338:	beq	114f4 <g_strcmp0@plt+0x40c>
   1133c:	ldr	r3, [r5, #8]
   11340:	ldr	r3, [r3, #4]
   11344:	cmp	r3, #0
   11348:	beq	114f4 <g_strcmp0@plt+0x40c>
   1134c:	blx	r3
   11350:	ldr	r0, [sp, #40]	; 0x28
   11354:	bl	10e90 <g_error_free@plt>
   11358:	ldr	r0, [pc, #2724]	; 11e04 <g_strcmp0@plt+0xd1c>
   1135c:	bl	10f44 <fm_module_unregister_type@plt>
   11360:	ldr	r3, [sp, #8]
   11364:	cmp	r3, #0
   11368:	beq	11388 <g_strcmp0@plt+0x2a0>
   1136c:	b	11510 <g_strcmp0@plt+0x428>
   11370:	ldr	r3, [r5]
   11374:	ldr	r0, [r5, #4]
   11378:	str	r3, [r4]
   1137c:	bl	10fb0 <g_free@plt>
   11380:	mov	r0, r5
   11384:	bl	10fb0 <g_free@plt>
   11388:	ldr	r5, [r4]
   1138c:	cmp	r5, #0
   11390:	bne	11370 <g_strcmp0@plt+0x288>
   11394:	ldr	r5, [r4, #4]
   11398:	cmp	r5, #0
   1139c:	beq	113c4 <g_strcmp0@plt+0x2dc>
   113a0:	ldr	r3, [r5]
   113a4:	ldr	r0, [r5, #4]
   113a8:	str	r3, [r4, #4]
   113ac:	bl	10fb0 <g_free@plt>
   113b0:	mov	r0, r5
   113b4:	bl	10fb0 <g_free@plt>
   113b8:	ldr	r5, [r4, #4]
   113bc:	cmp	r5, #0
   113c0:	bne	113a0 <g_strcmp0@plt+0x2b8>
   113c4:	mov	r0, fp
   113c8:	bl	10fb0 <g_free@plt>
   113cc:	ldr	r3, [pc, #2604]	; 11e00 <g_strcmp0@plt+0xd18>
   113d0:	ldr	r2, [sp, #100]	; 0x64
   113d4:	ldr	r0, [sp, #12]
   113d8:	ldr	r3, [r3]
   113dc:	cmp	r2, r3
   113e0:	bne	11ddc <g_strcmp0@plt+0xcf4>
   113e4:	add	sp, sp, #108	; 0x6c
   113e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113ec:	ldr	r7, [pc, #2636]	; 11e40 <g_strcmp0@plt+0xd58>
   113f0:	add	r7, r7, #2
   113f4:	b	11160 <g_strcmp0@plt+0x78>
   113f8:	ldrb	r3, [r7, #1]
   113fc:	cmp	r3, #104	; 0x68
   11400:	bne	11180 <g_strcmp0@plt+0x98>
   11404:	mov	r2, #5
   11408:	ldr	r1, [pc, #2612]	; 11e44 <g_strcmp0@plt+0xd5c>
   1140c:	mov	r0, #0
   11410:	ldr	r4, [r8]
   11414:	bl	10fbc <dcgettext@plt>
   11418:	mov	r2, r4
   1141c:	mov	r1, r0
   11420:	mov	r0, #1
   11424:	bl	110d0 <__printf_chk@plt>
   11428:	mov	r2, #5
   1142c:	ldr	r1, [pc, #2580]	; 11e48 <g_strcmp0@plt+0xd60>
   11430:	mov	r0, #0
   11434:	bl	10fbc <dcgettext@plt>
   11438:	mov	r2, r4
   1143c:	mov	r1, r0
   11440:	mov	r0, #1
   11444:	bl	110d0 <__printf_chk@plt>
   11448:	mov	r2, #5
   1144c:	ldr	r1, [pc, #2552]	; 11e4c <g_strcmp0@plt+0xd64>
   11450:	mov	r0, #0
   11454:	bl	10fbc <dcgettext@plt>
   11458:	mov	r2, r4
   1145c:	mov	r1, r0
   11460:	mov	r0, #1
   11464:	bl	110d0 <__printf_chk@plt>
   11468:	mov	r2, #5
   1146c:	ldr	r1, [pc, #2524]	; 11e50 <g_strcmp0@plt+0xd68>
   11470:	mov	r0, #0
   11474:	bl	10fbc <dcgettext@plt>
   11478:	mov	r2, r4
   1147c:	mov	r1, r0
   11480:	mov	r0, #1
   11484:	bl	110d0 <__printf_chk@plt>
   11488:	mov	r2, #5
   1148c:	ldr	r1, [pc, #2496]	; 11e54 <g_strcmp0@plt+0xd6c>
   11490:	mov	r0, #0
   11494:	bl	10fbc <dcgettext@plt>
   11498:	mov	r2, r4
   1149c:	mov	r1, r0
   114a0:	mov	r0, #1
   114a4:	bl	110d0 <__printf_chk@plt>
   114a8:	mov	r2, #5
   114ac:	ldr	r1, [pc, #2468]	; 11e58 <g_strcmp0@plt+0xd70>
   114b0:	mov	r0, #0
   114b4:	bl	10fbc <dcgettext@plt>
   114b8:	mov	r2, r4
   114bc:	mov	r1, r0
   114c0:	mov	r0, #1
   114c4:	bl	110d0 <__printf_chk@plt>
   114c8:	mov	r2, #5
   114cc:	ldr	r1, [pc, #2440]	; 11e5c <g_strcmp0@plt+0xd74>
   114d0:	mov	r0, #0
   114d4:	bl	10fbc <dcgettext@plt>
   114d8:	mov	r2, r4
   114dc:	mov	r1, r0
   114e0:	mov	r0, #1
   114e4:	bl	110d0 <__printf_chk@plt>
   114e8:	mov	r3, #0
   114ec:	str	r3, [sp, #12]
   114f0:	b	113cc <g_strcmp0@plt+0x2e4>
   114f4:	ldr	r1, [pc, #2404]	; 11e60 <g_strcmp0@plt+0xd78>
   114f8:	ldr	r3, [r0, #8]
   114fc:	ldr	r2, [pc, #2400]	; 11e64 <g_strcmp0@plt+0xd7c>
   11500:	ldr	r0, [r1]
   11504:	mov	r1, #1
   11508:	bl	10f08 <__fprintf_chk@plt>
   1150c:	b	11350 <g_strcmp0@plt+0x268>
   11510:	ldr	r0, [pc, #2320]	; 11e28 <g_strcmp0@plt+0xd40>
   11514:	bl	10f44 <fm_module_unregister_type@plt>
   11518:	b	11388 <g_strcmp0@plt+0x2a0>
   1151c:	mov	r3, #1
   11520:	b	1128c <g_strcmp0@plt+0x1a4>
   11524:	mov	r3, #0
   11528:	str	r3, [sp, #8]
   1152c:	b	112a0 <g_strcmp0@plt+0x1b8>
   11530:	mov	r2, #10
   11534:	mov	r1, #0
   11538:	add	r0, r0, #1
   1153c:	bl	10e9c <strtol@plt>
   11540:	ldr	r2, [pc, #2336]	; 11e68 <g_strcmp0@plt+0xd80>
   11544:	mov	r3, #32
   11548:	mov	r1, r3
   1154c:	str	r2, [sp]
   11550:	mov	r2, #1
   11554:	str	r0, [sp, #4]
   11558:	add	r0, sp, #68	; 0x44
   1155c:	bl	11034 <__snprintf_chk@plt>
   11560:	add	r0, sp, #68	; 0x44
   11564:	mov	r1, #1
   11568:	bl	10fc8 <g_file_test@plt>
   1156c:	cmp	r0, #0
   11570:	beq	112d4 <g_strcmp0@plt+0x1ec>
   11574:	mov	r0, #0
   11578:	bl	10fec <XOpenDisplay@plt>
   1157c:	subs	r6, r0, #0
   11580:	beq	11bd8 <g_strcmp0@plt+0xaf0>
   11584:	ldr	r1, [r6, #132]	; 0x84
   11588:	ldr	r2, [r6, #140]	; 0x8c
   1158c:	mov	fp, #80	; 0x50
   11590:	ldr	r3, [pc, #2260]	; 11e6c <g_strcmp0@plt+0xd84>
   11594:	mla	r1, fp, r1, r2
   11598:	mov	r2, #33	; 0x21
   1159c:	ldr	r1, [r1, #8]
   115a0:	bl	124d4 <g_strcmp0@plt+0x13ec>
   115a4:	subs	sl, r0, #0
   115a8:	beq	11884 <g_strcmp0@plt+0x79c>
   115ac:	mov	r2, #0
   115b0:	ldr	r1, [pc, #2232]	; 11e70 <g_strcmp0@plt+0xd88>
   115b4:	mov	r0, r6
   115b8:	ldr	fp, [sl]
   115bc:	bl	10f20 <XInternAtom@plt>
   115c0:	mov	r1, fp
   115c4:	ldr	r3, [pc, #2216]	; 11e74 <g_strcmp0@plt+0xd8c>
   115c8:	mov	r2, r0
   115cc:	mov	r0, r6
   115d0:	bl	124d4 <g_strcmp0@plt+0x13ec>
   115d4:	subs	fp, r0, #0
   115d8:	beq	11988 <g_strcmp0@plt+0x8a0>
   115dc:	ldr	r6, [r4]
   115e0:	cmp	r6, #0
   115e4:	bne	115f8 <g_strcmp0@plt+0x510>
   115e8:	b	11670 <g_strcmp0@plt+0x588>
   115ec:	ldr	r6, [r6]
   115f0:	cmp	r6, #0
   115f4:	beq	11670 <g_strcmp0@plt+0x588>
   115f8:	mov	r1, fp
   115fc:	ldr	r0, [r6, #4]
   11600:	bl	1104c <g_ascii_strcasecmp@plt>
   11604:	cmp	r0, #0
   11608:	bne	115ec <g_strcmp0@plt+0x504>
   1160c:	ldr	r3, [r6, #8]
   11610:	add	r1, sp, #40	; 0x28
   11614:	ldr	r3, [r3]
   11618:	blx	r3
   1161c:	cmp	r0, #0
   11620:	mov	sl, r0
   11624:	str	r0, [sp, #36]	; 0x24
   11628:	beq	119e8 <g_strcmp0@plt+0x900>
   1162c:	ldr	r3, [sp, #8]
   11630:	cmp	r3, #0
   11634:	beq	116a8 <g_strcmp0@plt+0x5c0>
   11638:	cmp	r5, #0
   1163c:	beq	11954 <g_strcmp0@plt+0x86c>
   11640:	ldr	r3, [r5, #8]
   11644:	ldr	r8, [r3]
   11648:	cmp	r8, #0
   1164c:	beq	11954 <g_strcmp0@plt+0x86c>
   11650:	add	r3, sp, #40	; 0x28
   11654:	add	r2, sp, #36	; 0x24
   11658:	ldr	r1, [r6, #8]
   1165c:	mov	r0, fp
   11660:	blx	r8
   11664:	mov	r3, #1
   11668:	str	r3, [sp, #12]
   1166c:	b	1130c <g_strcmp0@plt+0x224>
   11670:	mov	r2, #5
   11674:	ldr	r1, [pc, #2044]	; 11e78 <g_strcmp0@plt+0xd90>
   11678:	mov	r0, #0
   1167c:	ldr	r6, [r4, #8]
   11680:	bl	10fbc <dcgettext@plt>
   11684:	mov	r1, r6
   11688:	mov	r2, #1
   1168c:	str	fp, [sp]
   11690:	str	r2, [sp, #12]
   11694:	mov	r6, #0
   11698:	mov	r3, r0
   1169c:	add	r0, sp, #40	; 0x28
   116a0:	bl	110a0 <g_set_error@plt>
   116a4:	b	1130c <g_strcmp0@plt+0x224>
   116a8:	ldr	r7, [r8, #4]
   116ac:	ldr	r1, [pc, #1992]	; 11e7c <g_strcmp0@plt+0xd94>
   116b0:	mov	r0, r7
   116b4:	bl	11058 <strcmp@plt>
   116b8:	subs	r3, r0, #0
   116bc:	str	r3, [sp, #12]
   116c0:	bne	117d8 <g_strcmp0@plt+0x6f0>
   116c4:	cmp	r9, #3
   116c8:	ldr	r3, [r6, #8]
   116cc:	bgt	118f0 <g_strcmp0@plt+0x808>
   116d0:	ldr	r3, [r3, #12]
   116d4:	cmp	r3, #0
   116d8:	beq	11850 <g_strcmp0@plt+0x768>
   116dc:	cmp	r9, #3
   116e0:	ldr	r2, [pc, #1944]	; 11e80 <g_strcmp0@plt+0xd98>
   116e4:	ldreq	r1, [r8, #8]
   116e8:	ldrne	r1, [sp, #8]
   116ec:	mov	r9, r2
   116f0:	mov	r0, sl
   116f4:	mov	r2, #0
   116f8:	blx	r3
   116fc:	mov	r2, #5
   11700:	ldr	r1, [pc, #1916]	; 11e84 <g_strcmp0@plt+0xd9c>
   11704:	ldr	r8, [r9]
   11708:	str	r0, [sp, #16]
   1170c:	mov	sl, r0
   11710:	mov	r0, #0
   11714:	bl	10fbc <dcgettext@plt>
   11718:	mov	r2, #5
   1171c:	ldr	r1, [pc, #1892]	; 11e88 <g_strcmp0@plt+0xda0>
   11720:	mov	r7, r0
   11724:	mov	r0, #0
   11728:	bl	10fbc <dcgettext@plt>
   1172c:	mov	r2, r7
   11730:	ldr	r1, [pc, #1876]	; 11e8c <g_strcmp0@plt+0xda4>
   11734:	mov	r3, r0
   11738:	mov	r0, r8
   1173c:	bl	10ed8 <ulc_fprintf@plt>
   11740:	str	fp, [sp, #20]
   11744:	mov	fp, r9
   11748:	str	r5, [sp, #24]
   1174c:	str	r6, [sp, #28]
   11750:	cmp	sl, #0
   11754:	beq	119d0 <g_strcmp0@plt+0x8e8>
   11758:	ldr	r7, [sl]
   1175c:	ldr	r3, [r7]
   11760:	cmp	r3, #0
   11764:	mov	r5, r3
   11768:	movne	r9, #1
   1176c:	movne	r8, #0
   11770:	bne	117a4 <g_strcmp0@plt+0x6bc>
   11774:	b	1193c <g_strcmp0@plt+0x854>
   11778:	ldr	r2, [r6]
   1177c:	ldr	r1, [pc, #1804]	; 11e90 <g_strcmp0@plt+0xda8>
   11780:	mov	r0, r9
   11784:	bl	110d0 <__printf_chk@plt>
   11788:	ldr	r0, [r6, #8]
   1178c:	mov	r1, r8
   11790:	bl	120d4 <g_strcmp0@plt+0xfec>
   11794:	ldr	r5, [r5, #4]
   11798:	cmp	r5, #0
   1179c:	beq	1193c <g_strcmp0@plt+0x854>
   117a0:	ldr	r3, [r7]
   117a4:	cmp	r3, r5
   117a8:	ldr	r6, [r5]
   117ac:	bne	11778 <g_strcmp0@plt+0x690>
   117b0:	ldr	r1, [r7, #8]
   117b4:	ldr	r3, [r7, #4]
   117b8:	cmp	r1, #0
   117bc:	ldr	r2, [r6]
   117c0:	beq	11944 <g_strcmp0@plt+0x85c>
   117c4:	ldr	r0, [fp]
   117c8:	str	r1, [sp]
   117cc:	ldr	r1, [pc, #1728]	; 11e94 <g_strcmp0@plt+0xdac>
   117d0:	bl	10ed8 <ulc_fprintf@plt>
   117d4:	b	11788 <g_strcmp0@plt+0x6a0>
   117d8:	ldrb	r3, [r7]
   117dc:	cmp	r3, #97	; 0x61
   117e0:	bne	118d4 <g_strcmp0@plt+0x7ec>
   117e4:	ldrb	r3, [r7, #1]
   117e8:	cmp	r3, #112	; 0x70
   117ec:	bne	118d4 <g_strcmp0@plt+0x7ec>
   117f0:	ldrb	r3, [r7, #2]
   117f4:	cmp	r3, #112	; 0x70
   117f8:	bne	118d4 <g_strcmp0@plt+0x7ec>
   117fc:	ldrb	r3, [r7, #3]
   11800:	cmp	r3, #0
   11804:	bne	118d4 <g_strcmp0@plt+0x7ec>
   11808:	cmp	r9, #3
   1180c:	ldr	r3, [r6, #8]
   11810:	ble	11a0c <g_strcmp0@plt+0x924>
   11814:	ldr	r2, [r3, #28]
   11818:	cmp	r2, #0
   1181c:	beq	11850 <g_strcmp0@plt+0x768>
   11820:	ldr	r3, [r3, #24]
   11824:	cmp	r3, #0
   11828:	beq	11c10 <g_strcmp0@plt+0xb28>
   1182c:	mov	r0, sl
   11830:	mov	r2, #0
   11834:	ldr	r1, [r8, #8]
   11838:	blx	r3
   1183c:	cmp	r0, #0
   11840:	beq	11c10 <g_strcmp0@plt+0xb28>
   11844:	ldr	r2, [r0, #4]
   11848:	cmp	r2, #0
   1184c:	beq	11cac <g_strcmp0@plt+0xbc4>
   11850:	mov	r2, #5
   11854:	ldr	r1, [pc, #1596]	; 11e98 <g_strcmp0@plt+0xdb0>
   11858:	mov	r0, #0
   1185c:	ldr	r7, [r4, #8]
   11860:	bl	10fbc <dcgettext@plt>
   11864:	mov	r1, r7
   11868:	mov	r2, #1
   1186c:	mov	r3, r0
   11870:	add	r0, sp, #40	; 0x28
   11874:	bl	10ee4 <g_set_error_literal@plt>
   11878:	mov	r3, #1
   1187c:	str	r3, [sp, #12]
   11880:	b	1130c <g_strcmp0@plt+0x224>
   11884:	ldr	r2, [r6, #132]	; 0x84
   11888:	ldr	r1, [r6, #140]	; 0x8c
   1188c:	ldr	r3, [pc, #1544]	; 11e9c <g_strcmp0@plt+0xdb4>
   11890:	mla	fp, fp, r2, r1
   11894:	mov	r0, r6
   11898:	mov	r2, #6
   1189c:	ldr	r1, [fp, #8]
   118a0:	bl	124d4 <g_strcmp0@plt+0x13ec>
   118a4:	subs	sl, r0, #0
   118a8:	bne	115ac <g_strcmp0@plt+0x4c4>
   118ac:	ldr	r3, [pc, #1452]	; 11e60 <g_strcmp0@plt+0xd78>
   118b0:	mov	r2, #98	; 0x62
   118b4:	mov	r1, #1
   118b8:	ldr	r3, [r3]
   118bc:	ldr	r0, [pc, #1500]	; 11ea0 <g_strcmp0@plt+0xdb8>
   118c0:	bl	1101c <fwrite@plt>
   118c4:	ldr	r6, [r4, #8]
   118c8:	mov	r2, #5
   118cc:	ldr	r1, [pc, #1488]	; 11ea4 <g_strcmp0@plt+0xdbc>
   118d0:	b	112e0 <g_strcmp0@plt+0x1f8>
   118d4:	mov	r0, r7
   118d8:	ldr	r1, [pc, #1480]	; 11ea8 <g_strcmp0@plt+0xdc0>
   118dc:	bl	11058 <strcmp@plt>
   118e0:	adds	r3, r0, #0
   118e4:	movne	r3, #1
   118e8:	str	r3, [sp, #12]
   118ec:	b	11318 <g_strcmp0@plt+0x230>
   118f0:	ldr	r3, [r3, #16]
   118f4:	cmp	r3, #0
   118f8:	beq	11850 <g_strcmp0@plt+0x768>
   118fc:	add	r1, sp, #40	; 0x28
   11900:	ldr	r0, [r8, #8]
   11904:	bl	125dc <g_strcmp0@plt+0x14f4>
   11908:	ldr	r3, [sp, #40]	; 0x28
   1190c:	cmp	r3, #0
   11910:	mov	r7, r0
   11914:	str	r0, [sp, #44]	; 0x2c
   11918:	beq	11b14 <g_strcmp0@plt+0xa2c>
   1191c:	mov	r2, #5
   11920:	ldr	r1, [pc, #1412]	; 11eac <g_strcmp0@plt+0xdc4>
   11924:	mov	r0, #0
   11928:	bl	10fbc <dcgettext@plt>
   1192c:	mov	r1, r0
   11930:	add	r0, sp, #40	; 0x28
   11934:	bl	110dc <g_prefix_error@plt>
   11938:	b	11878 <g_strcmp0@plt+0x790>
   1193c:	ldr	sl, [sl, #4]
   11940:	b	11750 <g_strcmp0@plt+0x668>
   11944:	ldr	r1, [pc, #1380]	; 11eb0 <g_strcmp0@plt+0xdc8>
   11948:	ldr	r0, [fp]
   1194c:	bl	10ed8 <ulc_fprintf@plt>
   11950:	b	11788 <g_strcmp0@plt+0x6a0>
   11954:	mov	r2, #5
   11958:	ldr	r1, [pc, #1364]	; 11eb4 <g_strcmp0@plt+0xdcc>
   1195c:	mov	r0, #0
   11960:	ldr	r8, [r4, #8]
   11964:	bl	10fbc <dcgettext@plt>
   11968:	mov	r2, #1
   1196c:	mov	r1, r8
   11970:	str	r7, [sp]
   11974:	str	r2, [sp, #12]
   11978:	mov	r3, r0
   1197c:	add	r0, sp, #40	; 0x28
   11980:	bl	110a0 <g_set_error@plt>
   11984:	b	1130c <g_strcmp0@plt+0x224>
   11988:	ldr	r1, [sl]
   1198c:	mov	r0, r6
   11990:	ldr	r3, [pc, #1244]	; 11e74 <g_strcmp0@plt+0xd8c>
   11994:	mov	r2, #31
   11998:	bl	124d4 <g_strcmp0@plt+0x13ec>
   1199c:	subs	fp, r0, #0
   119a0:	beq	11bf4 <g_strcmp0@plt+0xb0c>
   119a4:	mov	r3, #0
   119a8:	str	r3, [sp]
   119ac:	mov	r2, r3
   119b0:	mvn	r1, #0
   119b4:	bl	11088 <g_locale_to_utf8@plt>
   119b8:	subs	r6, r0, #0
   119bc:	beq	115dc <g_strcmp0@plt+0x4f4>
   119c0:	mov	r0, fp
   119c4:	bl	10fb0 <g_free@plt>
   119c8:	mov	fp, r6
   119cc:	b	115dc <g_strcmp0@plt+0x4f4>
   119d0:	ldr	r0, [sp, #16]
   119d4:	ldr	fp, [sp, #20]
   119d8:	ldr	r5, [sp, #24]
   119dc:	ldr	r6, [sp, #28]
   119e0:	bl	10ef0 <g_list_free@plt>
   119e4:	b	1130c <g_strcmp0@plt+0x224>
   119e8:	mov	r2, #5
   119ec:	ldr	r1, [pc, #1220]	; 11eb8 <g_strcmp0@plt+0xdd0>
   119f0:	bl	10fbc <dcgettext@plt>
   119f4:	mov	r1, r0
   119f8:	add	r0, sp, #40	; 0x28
   119fc:	bl	110dc <g_prefix_error@plt>
   11a00:	mov	r3, #1
   11a04:	str	r3, [sp, #12]
   11a08:	b	1130c <g_strcmp0@plt+0x224>
   11a0c:	ldr	r3, [r3, #24]
   11a10:	cmp	r3, #0
   11a14:	beq	11850 <g_strcmp0@plt+0x768>
   11a18:	cmp	r9, #3
   11a1c:	ldr	r2, [pc, #1116]	; 11e80 <g_strcmp0@plt+0xd98>
   11a20:	ldreq	r1, [r8, #8]
   11a24:	movne	r1, #0
   11a28:	mov	r7, r2
   11a2c:	mov	r0, sl
   11a30:	mov	r2, #0
   11a34:	blx	r3
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #1144]	; 11ebc <g_strcmp0@plt+0xdd4>
   11a40:	ldr	r8, [r7]
   11a44:	str	r7, [sp, #16]
   11a48:	ldr	sl, [pc, #1136]	; 11ec0 <g_strcmp0@plt+0xdd8>
   11a4c:	mov	r9, r0
   11a50:	str	r0, [sp, #12]
   11a54:	mov	r0, #0
   11a58:	bl	10fbc <dcgettext@plt>
   11a5c:	mov	r2, #5
   11a60:	ldr	r1, [pc, #1056]	; 11e88 <g_strcmp0@plt+0xda0>
   11a64:	mov	r7, r0
   11a68:	mov	r0, #0
   11a6c:	bl	10fbc <dcgettext@plt>
   11a70:	mov	r2, r7
   11a74:	ldr	r1, [pc, #1096]	; 11ec4 <g_strcmp0@plt+0xddc>
   11a78:	mov	r3, r0
   11a7c:	mov	r0, r8
   11a80:	bl	10ed8 <ulc_fprintf@plt>
   11a84:	mov	r8, r9
   11a88:	str	fp, [sp, #20]
   11a8c:	mov	r9, #0
   11a90:	ldr	fp, [sp, #16]
   11a94:	b	11ac0 <g_strcmp0@plt+0x9d8>
   11a98:	str	r3, [sp]
   11a9c:	mov	r1, sl
   11aa0:	ldr	r3, [r7, #8]
   11aa4:	ldr	r2, [r7]
   11aa8:	ldr	r0, [fp]
   11aac:	bl	10ed8 <ulc_fprintf@plt>
   11ab0:	ldr	r0, [r7, #4]
   11ab4:	mov	r1, r9
   11ab8:	bl	120d4 <g_strcmp0@plt+0xfec>
   11abc:	ldr	r8, [r8, #4]
   11ac0:	cmp	r8, #0
   11ac4:	beq	11af0 <g_strcmp0@plt+0xa08>
   11ac8:	ldr	r7, [r8]
   11acc:	ldr	r3, [r7, #12]
   11ad0:	cmp	r3, #0
   11ad4:	bne	11a98 <g_strcmp0@plt+0x9b0>
   11ad8:	ldr	r3, [r7, #8]
   11adc:	ldr	r2, [r7]
   11ae0:	ldr	r1, [pc, #992]	; 11ec8 <g_strcmp0@plt+0xde0>
   11ae4:	ldr	r0, [fp]
   11ae8:	bl	10ed8 <ulc_fprintf@plt>
   11aec:	b	11ab0 <g_strcmp0@plt+0x9c8>
   11af0:	ldr	r0, [sp, #12]
   11af4:	ldr	fp, [sp, #20]
   11af8:	bl	10ef0 <g_list_free@plt>
   11afc:	str	r8, [sp, #12]
   11b00:	b	1130c <g_strcmp0@plt+0x224>
   11b04:	ldrb	r3, [r7, #1]
   11b08:	cmp	r3, #45	; 0x2d
   11b0c:	bne	11160 <g_strcmp0@plt+0x78>
   11b10:	b	113f0 <g_strcmp0@plt+0x308>
   11b14:	ldr	r3, [r6, #8]
   11b18:	ldr	r2, [r3, #20]
   11b1c:	cmp	r2, #0
   11b20:	beq	11b58 <g_strcmp0@plt+0xa70>
   11b24:	add	r1, sp, #40	; 0x28
   11b28:	ldr	r0, [sp, #36]	; 0x24
   11b2c:	blx	r2
   11b30:	add	r3, sp, #40	; 0x28
   11b34:	str	r3, [sp]
   11b38:	ldr	r2, [sp, #8]
   11b3c:	mov	r3, fp
   11b40:	mov	r1, r0
   11b44:	mov	r0, r7
   11b48:	bl	12184 <g_strcmp0@plt+0x109c>
   11b4c:	cmp	r0, #0
   11b50:	beq	1191c <g_strcmp0@plt+0x834>
   11b54:	ldr	r3, [r6, #8]
   11b58:	cmp	r9, #4
   11b5c:	mov	r2, #0
   11b60:	str	r2, [sp, #52]	; 0x34
   11b64:	ldr	r1, [r8, #12]
   11b68:	ldrne	r2, [r8, #16]
   11b6c:	str	r1, [sp, #48]	; 0x30
   11b70:	strne	r2, [sp, #52]	; 0x34
   11b74:	ldr	r3, [r3, #16]
   11b78:	add	r2, sp, #40	; 0x28
   11b7c:	add	r1, sp, #44	; 0x2c
   11b80:	ldr	r0, [sp, #36]	; 0x24
   11b84:	blx	r3
   11b88:	cmp	r0, #0
   11b8c:	beq	11bac <g_strcmp0@plt+0xac4>
   11b90:	ldr	r3, [r6, #8]
   11b94:	add	r1, sp, #40	; 0x28
   11b98:	ldr	r0, [sp, #36]	; 0x24
   11b9c:	ldr	r3, [r3, #4]
   11ba0:	blx	r3
   11ba4:	cmp	r0, #0
   11ba8:	bne	11dcc <g_strcmp0@plt+0xce4>
   11bac:	mov	r2, #5
   11bb0:	ldr	r1, [pc, #788]	; 11ecc <g_strcmp0@plt+0xde4>
   11bb4:	mov	r0, #0
   11bb8:	bl	10fbc <dcgettext@plt>
   11bbc:	mov	r1, r0
   11bc0:	add	r0, sp, #40	; 0x28
   11bc4:	bl	110dc <g_prefix_error@plt>
   11bc8:	ldr	r1, [pc, #768]	; 11ed0 <g_strcmp0@plt+0xde8>
   11bcc:	ldr	r0, [sp, #44]	; 0x2c
   11bd0:	bl	10f74 <g_list_free_full@plt>
   11bd4:	b	11878 <g_strcmp0@plt+0x790>
   11bd8:	ldr	r3, [pc, #640]	; 11e60 <g_strcmp0@plt+0xd78>
   11bdc:	mov	r2, #21
   11be0:	mov	r1, #1
   11be4:	ldr	r3, [r3]
   11be8:	ldr	r0, [pc, #740]	; 11ed4 <g_strcmp0@plt+0xdec>
   11bec:	bl	1101c <fwrite@plt>
   11bf0:	b	118c4 <g_strcmp0@plt+0x7dc>
   11bf4:	ldr	r3, [pc, #612]	; 11e60 <g_strcmp0@plt+0xd78>
   11bf8:	mov	r2, #54	; 0x36
   11bfc:	mov	r1, #1
   11c00:	ldr	r3, [r3]
   11c04:	ldr	r0, [pc, #716]	; 11ed8 <g_strcmp0@plt+0xdf0>
   11c08:	bl	1101c <fwrite@plt>
   11c0c:	b	118c4 <g_strcmp0@plt+0x7dc>
   11c10:	ldr	r3, [r8, #12]
   11c14:	mov	r0, #0
   11c18:	str	r0, [sp, #56]	; 0x38
   11c1c:	ldrb	r2, [r3]
   11c20:	cmp	r2, #45	; 0x2d
   11c24:	bne	11dc4 <g_strcmp0@plt+0xcdc>
   11c28:	ldrb	r2, [r3, #1]
   11c2c:	cmp	r2, #45	; 0x2d
   11c30:	bne	11dc4 <g_strcmp0@plt+0xcdc>
   11c34:	ldrb	r2, [r3, #2]
   11c38:	cmp	r2, #0
   11c3c:	bne	11dbc <g_strcmp0@plt+0xcd4>
   11c40:	str	r2, [sp, #52]	; 0x34
   11c44:	bl	10ef0 <g_list_free@plt>
   11c48:	ldr	r9, [r8, #8]
   11c4c:	mov	r1, #38	; 0x26
   11c50:	mov	r0, r9
   11c54:	bl	110c4 <strchr@plt>
   11c58:	subs	r7, r0, #0
   11c5c:	beq	11da8 <g_strcmp0@plt+0xcc0>
   11c60:	add	r1, sp, #40	; 0x28
   11c64:	add	r0, r7, #1
   11c68:	bl	125dc <g_strcmp0@plt+0x14f4>
   11c6c:	ldr	sl, [sp, #40]	; 0x28
   11c70:	cmp	sl, #0
   11c74:	mov	r9, r0
   11c78:	str	r0, [sp, #48]	; 0x30
   11c7c:	beq	11ce8 <g_strcmp0@plt+0xc00>
   11c80:	mov	r2, #5
   11c84:	ldr	r1, [pc, #544]	; 11eac <g_strcmp0@plt+0xdc4>
   11c88:	mov	r0, #0
   11c8c:	bl	10fbc <dcgettext@plt>
   11c90:	mov	r1, r0
   11c94:	add	r0, sp, #40	; 0x28
   11c98:	bl	110dc <g_prefix_error@plt>
   11c9c:	ldr	r1, [pc, #556]	; 11ed0 <g_strcmp0@plt+0xde8>
   11ca0:	ldr	r0, [sp, #48]	; 0x30
   11ca4:	bl	10f74 <g_list_free_full@plt>
   11ca8:	b	11878 <g_strcmp0@plt+0x790>
   11cac:	ldr	r3, [r8, #12]
   11cb0:	str	r2, [sp, #56]	; 0x38
   11cb4:	ldrb	r2, [r3]
   11cb8:	cmp	r2, #45	; 0x2d
   11cbc:	bne	11ccc <g_strcmp0@plt+0xbe4>
   11cc0:	ldrb	r2, [r3, #1]
   11cc4:	cmp	r2, #45	; 0x2d
   11cc8:	beq	11c34 <g_strcmp0@plt+0xb4c>
   11ccc:	ldr	r2, [r0]
   11cd0:	ldr	r2, [r2, #8]
   11cd4:	cmp	r2, #0
   11cd8:	beq	11dc4 <g_strcmp0@plt+0xcdc>
   11cdc:	str	r2, [sp, #52]	; 0x34
   11ce0:	str	r3, [sp, #56]	; 0x38
   11ce4:	b	11c44 <g_strcmp0@plt+0xb5c>
   11ce8:	ldr	r3, [r6, #8]
   11cec:	ldr	r3, [r3, #32]
   11cf0:	cmp	r3, #0
   11cf4:	beq	11d28 <g_strcmp0@plt+0xc40>
   11cf8:	add	r1, sp, #40	; 0x28
   11cfc:	ldr	r0, [sp, #36]	; 0x24
   11d00:	blx	r3
   11d04:	add	r3, sp, #40	; 0x28
   11d08:	str	r3, [sp]
   11d0c:	mov	r2, sl
   11d10:	mov	r3, fp
   11d14:	mov	r1, r0
   11d18:	mov	r0, r9
   11d1c:	bl	12184 <g_strcmp0@plt+0x109c>
   11d20:	cmp	r0, #0
   11d24:	beq	11c80 <g_strcmp0@plt+0xb98>
   11d28:	ldr	r0, [r8, #8]
   11d2c:	sub	r1, r7, r0
   11d30:	bl	10eb4 <g_strndup@plt>
   11d34:	str	r0, [sp, #44]	; 0x2c
   11d38:	ldr	r3, [r6, #8]
   11d3c:	add	r2, sp, #40	; 0x28
   11d40:	add	r1, sp, #44	; 0x2c
   11d44:	ldr	r3, [r3, #28]
   11d48:	ldr	r0, [sp, #36]	; 0x24
   11d4c:	blx	r3
   11d50:	cmp	r0, #0
   11d54:	beq	11d74 <g_strcmp0@plt+0xc8c>
   11d58:	ldr	r3, [r6, #8]
   11d5c:	add	r1, sp, #40	; 0x28
   11d60:	ldr	r0, [sp, #36]	; 0x24
   11d64:	ldr	r3, [r3, #4]
   11d68:	blx	r3
   11d6c:	cmp	r0, #0
   11d70:	bne	11de0 <g_strcmp0@plt+0xcf8>
   11d74:	mov	r2, #5
   11d78:	ldr	r1, [pc, #332]	; 11ecc <g_strcmp0@plt+0xde4>
   11d7c:	mov	r0, #0
   11d80:	bl	10fbc <dcgettext@plt>
   11d84:	mov	r1, r0
   11d88:	add	r0, sp, #40	; 0x28
   11d8c:	bl	110dc <g_prefix_error@plt>
   11d90:	ldr	r0, [sp, #48]	; 0x30
   11d94:	ldr	r1, [pc, #308]	; 11ed0 <g_strcmp0@plt+0xde8>
   11d98:	bl	10f74 <g_list_free_full@plt>
   11d9c:	ldr	r0, [sp, #44]	; 0x2c
   11da0:	bl	10fb0 <g_free@plt>
   11da4:	b	11878 <g_strcmp0@plt+0x790>
   11da8:	mov	r0, r9
   11dac:	str	r7, [sp, #48]	; 0x30
   11db0:	bl	10f14 <g_strdup@plt>
   11db4:	str	r0, [sp, #44]	; 0x2c
   11db8:	b	11d38 <g_strcmp0@plt+0xc50>
   11dbc:	cmp	r0, #0
   11dc0:	bne	11ccc <g_strcmp0@plt+0xbe4>
   11dc4:	str	r3, [sp, #52]	; 0x34
   11dc8:	b	11c44 <g_strcmp0@plt+0xb5c>
   11dcc:	ldr	r1, [pc, #252]	; 11ed0 <g_strcmp0@plt+0xde8>
   11dd0:	ldr	r0, [sp, #44]	; 0x2c
   11dd4:	bl	10f74 <g_list_free_full@plt>
   11dd8:	b	1130c <g_strcmp0@plt+0x224>
   11ddc:	bl	10f80 <__stack_chk_fail@plt>
   11de0:	ldr	r1, [pc, #232]	; 11ed0 <g_strcmp0@plt+0xde8>
   11de4:	ldr	r0, [sp, #48]	; 0x30
   11de8:	bl	10f74 <g_list_free_full@plt>
   11dec:	ldr	r0, [sp, #44]	; 0x2c
   11df0:	bl	10fb0 <g_free@plt>
   11df4:	mov	r3, #0
   11df8:	str	r3, [sp, #12]
   11dfc:	b	1130c <g_strcmp0@plt+0x224>
   11e00:	strdeq	r3, [r2], -r0
   11e04:			; <UNDEFINED> instruction: 0x00012bbc
   11e08:	andeq	r2, r1, r8, lsr #23
   11e0c:	andeq	r2, r1, r8, asr #23
   11e10:	andeq	r2, r1, r8, lsl ip
   11e14:	ldrdeq	r2, [r1], -r0
   11e18:	andeq	r2, r1, r0, lsr #27
   11e1c:	andeq	r2, r1, r8, lsr #27
   11e20:	andeq	r2, r1, ip, asr #32
   11e24:	muleq	r1, r0, r0
   11e28:	ldrdeq	r2, [r1], -r0
   11e2c:	andeq	r2, r1, r0, ror #27
   11e30:	andeq	r4, r2, ip
   11e34:	andeq	r4, r2, r8, lsl r0
   11e38:	strdeq	r2, [r1], -r0
   11e3c:	andeq	r2, r1, r8, lsl #28
   11e40:	muleq	r1, ip, fp
   11e44:	ldrdeq	r2, [r1], -r8
   11e48:	andeq	r2, r1, ip, lsl ip
   11e4c:	andeq	r2, r1, ip, asr ip
   11e50:	andeq	r2, r1, r0, lsr #25
   11e54:	andeq	r2, r1, r4, ror #25
   11e58:	andeq	r2, r1, r8, lsr #26
   11e5c:	andeq	r2, r1, ip, ror #26
   11e60:	andeq	r4, r2, r8
   11e64:	muleq	r1, r4, r0
   11e68:	strdeq	r2, [r1], -r8
   11e6c:	andeq	r2, r1, r8, asr #28
   11e70:	andeq	r2, r1, r4, ror #29
   11e74:	strdeq	r2, [r1], -r0
   11e78:	andeq	r2, r1, r8, lsr pc
   11e7c:			; <UNDEFINED> instruction: 0x00012fb4
   11e80:	andeq	r4, r2, r0, lsl r0
   11e84:	strdeq	r2, [r1], -r0
   11e88:	strdeq	r2, [r1], -ip
   11e8c:	andeq	r3, r1, r4
   11e90:	andeq	r3, r1, r0, lsl r0
   11e94:	andeq	r3, r1, r8, lsl r0
   11e98:	andeq	r3, r1, ip, rrx
   11e9c:	andeq	r2, r1, r4, ror #28
   11ea0:	andeq	r2, r1, r0, lsl #29
   11ea4:	andeq	r3, r1, r4, lsr #1
   11ea8:	andeq	r3, r1, r4, rrx
   11eac:			; <UNDEFINED> instruction: 0x00012fbc
   11eb0:	andeq	r3, r1, r8, lsr #32
   11eb4:	andeq	r2, r1, ip, lsl #31
   11eb8:	andeq	r2, r1, r8, ror #30
   11ebc:	andeq	r3, r1, r4, lsr r0
   11ec0:	andeq	r3, r1, r8, asr #32
   11ec4:	andeq	r3, r1, ip, lsr r0
   11ec8:	andeq	r3, r1, r8, asr r0
   11ecc:	ldrdeq	r2, [r1], -r0
   11ed0:	andeq	r2, r1, r4
   11ed4:	andeq	r2, r1, r0, lsr lr
   11ed8:	andeq	r2, r1, r0, lsl #30
   11edc:	mov	fp, #0
   11ee0:	mov	lr, #0
   11ee4:	pop	{r1}		; (ldr r1, [sp], #4)
   11ee8:	mov	r2, sp
   11eec:	push	{r2}		; (str r2, [sp, #-4]!)
   11ef0:	push	{r0}		; (str r0, [sp, #-4]!)
   11ef4:	ldr	ip, [pc, #16]	; 11f0c <g_strcmp0@plt+0xe24>
   11ef8:	push	{ip}		; (str ip, [sp, #-4]!)
   11efc:	ldr	r0, [pc, #12]	; 11f10 <g_strcmp0@plt+0xe28>
   11f00:	ldr	r3, [pc, #12]	; 11f14 <g_strcmp0@plt+0xe2c>
   11f04:	bl	110ac <__libc_start_main@plt>
   11f08:	bl	10f38 <abort@plt>
   11f0c:	andeq	r2, r1, r8, ror #20
   11f10:	strdeq	r1, [r1], -r4
   11f14:	andeq	r2, r1, r8, lsl #20
   11f18:	ldr	r3, [pc, #20]	; 11f34 <g_strcmp0@plt+0xe4c>
   11f1c:	ldr	r2, [pc, #20]	; 11f38 <g_strcmp0@plt+0xe50>
   11f20:	add	r3, pc, r3
   11f24:	ldr	r2, [r3, r2]
   11f28:	cmp	r2, #0
   11f2c:	bxeq	lr
   11f30:	b	110b8 <__gmon_start__@plt>
   11f34:	strdeq	r1, [r1], -r4
   11f38:	ldrdeq	r0, [r0], -ip
   11f3c:	ldr	r3, [pc, #28]	; 11f60 <g_strcmp0@plt+0xe78>
   11f40:	ldr	r0, [pc, #28]	; 11f64 <g_strcmp0@plt+0xe7c>
   11f44:	sub	r3, r3, r0
   11f48:	cmp	r3, #6
   11f4c:	bxls	lr
   11f50:	ldr	r3, [pc, #16]	; 11f68 <g_strcmp0@plt+0xe80>
   11f54:	cmp	r3, #0
   11f58:	bxeq	lr
   11f5c:	bx	r3
   11f60:	andeq	r4, r2, fp
   11f64:	andeq	r4, r2, r8
   11f68:	andeq	r0, r0, r0
   11f6c:	ldr	r1, [pc, #36]	; 11f98 <g_strcmp0@plt+0xeb0>
   11f70:	ldr	r0, [pc, #36]	; 11f9c <g_strcmp0@plt+0xeb4>
   11f74:	sub	r1, r1, r0
   11f78:	asr	r1, r1, #2
   11f7c:	add	r1, r1, r1, lsr #31
   11f80:	asrs	r1, r1, #1
   11f84:	bxeq	lr
   11f88:	ldr	r3, [pc, #16]	; 11fa0 <g_strcmp0@plt+0xeb8>
   11f8c:	cmp	r3, #0
   11f90:	bxeq	lr
   11f94:	bx	r3
   11f98:	andeq	r4, r2, r8
   11f9c:	andeq	r4, r2, r8
   11fa0:	andeq	r0, r0, r0
   11fa4:	push	{r4, lr}
   11fa8:	ldr	r4, [pc, #24]	; 11fc8 <g_strcmp0@plt+0xee0>
   11fac:	ldrb	r3, [r4]
   11fb0:	cmp	r3, #0
   11fb4:	popne	{r4, pc}
   11fb8:	bl	11f3c <g_strcmp0@plt+0xe54>
   11fbc:	mov	r3, #1
   11fc0:	strb	r3, [r4]
   11fc4:	pop	{r4, pc}
   11fc8:	andeq	r4, r2, r4, lsl r0
   11fcc:	ldr	r0, [pc, #40]	; 11ffc <g_strcmp0@plt+0xf14>
   11fd0:	ldr	r3, [r0]
   11fd4:	cmp	r3, #0
   11fd8:	bne	11fe0 <g_strcmp0@plt+0xef8>
   11fdc:	b	11f6c <g_strcmp0@plt+0xe84>
   11fe0:	ldr	r3, [pc, #24]	; 12000 <g_strcmp0@plt+0xf18>
   11fe4:	cmp	r3, #0
   11fe8:	beq	11fdc <g_strcmp0@plt+0xef4>
   11fec:	push	{r4, lr}
   11ff0:	blx	r3
   11ff4:	pop	{r4, lr}
   11ff8:	b	11f6c <g_strcmp0@plt+0xe84>
   11ffc:	andeq	r3, r2, ip, ror #27
   12000:	andeq	r0, r0, r0
   12004:	push	{r4, lr}
   12008:	mov	r4, r0
   1200c:	ldr	r0, [r0]
   12010:	bl	10fb0 <g_free@plt>
   12014:	ldr	r0, [r4, #4]
   12018:	ldr	r1, [pc, #36]	; 12044 <g_strcmp0@plt+0xf5c>
   1201c:	bl	10f74 <g_list_free_full@plt>
   12020:	ldr	r0, [r4, #8]
   12024:	ldr	r1, [pc, #28]	; 12048 <g_strcmp0@plt+0xf60>
   12028:	bl	10f74 <g_list_free_full@plt>
   1202c:	ldr	r0, [r4, #12]
   12030:	bl	10fb0 <g_free@plt>
   12034:	mov	r1, r4
   12038:	mov	r0, #24
   1203c:	pop	{r4, lr}
   12040:	b	11094 <g_slice_free1@plt>
   12044:			; <UNDEFINED> instruction: 0x00010fb0
   12048:	andeq	r2, r1, r4
   1204c:	push	{r4, r5, r6, r7, r8, lr}
   12050:	mov	r7, r0
   12054:	mov	r0, #12
   12058:	mov	r6, r1
   1205c:	bl	10f2c <g_malloc@plt>
   12060:	ldr	r5, [pc, #36]	; 1208c <g_strcmp0@plt+0xfa4>
   12064:	ldr	r3, [r5]
   12068:	mov	r4, r0
   1206c:	mov	r0, r7
   12070:	str	r3, [r4]
   12074:	bl	10f14 <g_strdup@plt>
   12078:	str	r6, [r4, #8]
   1207c:	str	r4, [r5]
   12080:	str	r0, [r4, #4]
   12084:	mov	r0, #1
   12088:	pop	{r4, r5, r6, r7, r8, pc}
   1208c:	andeq	r4, r2, r8, lsl r0
   12090:	push	{r4, r5, r6, r7, r8, lr}
   12094:	mov	r7, r0
   12098:	mov	r0, #12
   1209c:	mov	r6, r1
   120a0:	bl	10f2c <g_malloc@plt>
   120a4:	ldr	r5, [pc, #36]	; 120d0 <g_strcmp0@plt+0xfe8>
   120a8:	ldr	r3, [r5, #4]
   120ac:	mov	r4, r0
   120b0:	mov	r0, r7
   120b4:	str	r3, [r4]
   120b8:	bl	10f14 <g_strdup@plt>
   120bc:	str	r6, [r4, #8]
   120c0:	str	r4, [r5, #4]
   120c4:	str	r0, [r4, #4]
   120c8:	mov	r0, #1
   120cc:	pop	{r4, r5, r6, r7, r8, pc}
   120d0:	andeq	r4, r2, r8, lsl r0
   120d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120d8:	subs	r4, r0, #0
   120dc:	sub	sp, sp, #8
   120e0:	beq	12170 <g_strcmp0@plt+0x1088>
   120e4:	add	r6, r1, #3
   120e8:	ldr	r8, [pc, #136]	; 12178 <g_strcmp0@plt+0x1090>
   120ec:	ldr	sl, [pc, #136]	; 1217c <g_strcmp0@plt+0x1094>
   120f0:	ldr	r9, [pc, #136]	; 12180 <g_strcmp0@plt+0x1098>
   120f4:	mov	r7, #1
   120f8:	b	12124 <g_strcmp0@plt+0x103c>
   120fc:	str	ip, [sp, #4]
   12100:	ldr	ip, [r5]
   12104:	str	ip, [sp]
   12108:	bl	110d0 <__printf_chk@plt>
   1210c:	ldr	r0, [r5, #8]
   12110:	mov	r1, r6
   12114:	bl	120d4 <g_strcmp0@plt+0xfec>
   12118:	ldr	r4, [r4, #4]
   1211c:	cmp	r4, #0
   12120:	beq	12170 <g_strcmp0@plt+0x1088>
   12124:	ldr	r5, [r4]
   12128:	mov	r3, r8
   1212c:	mov	r2, r6
   12130:	ldr	ip, [r5, #4]
   12134:	mov	r1, r9
   12138:	cmp	ip, #0
   1213c:	mov	r0, r7
   12140:	beq	12150 <g_strcmp0@plt+0x1068>
   12144:	ldr	ip, [ip]
   12148:	cmp	ip, #0
   1214c:	bne	120fc <g_strcmp0@plt+0x1014>
   12150:	ldr	r2, [r5]
   12154:	mov	r3, r8
   12158:	str	r2, [sp]
   1215c:	mov	r1, sl
   12160:	mov	r2, r6
   12164:	mov	r0, r7
   12168:	bl	110d0 <__printf_chk@plt>
   1216c:	b	1210c <g_strcmp0@plt+0x1024>
   12170:	add	sp, sp, #8
   12174:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12178:	andeq	r2, r1, r8, lsl ip
   1217c:	andeq	r2, r1, r4, lsl #21
   12180:	andeq	r2, r1, r8, ror sl
   12184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12188:	sub	sp, sp, #36	; 0x24
   1218c:	cmp	r1, #0
   12190:	str	r1, [sp, #16]
   12194:	ldr	r1, [pc, #788]	; 124b0 <g_strcmp0@plt+0x13c8>
   12198:	str	r3, [sp, #20]
   1219c:	ldr	r3, [sp, #72]	; 0x48
   121a0:	ldr	r1, [r1]
   121a4:	str	r2, [sp, #8]
   121a8:	str	r1, [sp, #28]
   121ac:	str	r3, [sp, #12]
   121b0:	beq	12304 <g_strcmp0@plt+0x121c>
   121b4:	ldr	r3, [sp, #8]
   121b8:	mov	sl, r0
   121bc:	cmp	r3, #0
   121c0:	ldrne	fp, [r3, #8]
   121c4:	ldreq	fp, [sp, #16]
   121c8:	cmp	r0, #0
   121cc:	beq	12374 <g_strcmp0@plt+0x128c>
   121d0:	ldr	r8, [pc, #732]	; 124b4 <g_strcmp0@plt+0x13cc>
   121d4:	ldr	r9, [pc, #732]	; 124b8 <g_strcmp0@plt+0x13d0>
   121d8:	mov	r7, #10
   121dc:	cmp	fp, #0
   121e0:	ldr	r5, [sl]
   121e4:	beq	1237c <g_strcmp0@plt+0x1294>
   121e8:	mov	r4, fp
   121ec:	b	121fc <g_strcmp0@plt+0x1114>
   121f0:	ldr	r4, [r4, #4]
   121f4:	cmp	r4, #0
   121f8:	beq	1237c <g_strcmp0@plt+0x1294>
   121fc:	ldr	r6, [r4]
   12200:	ldr	r0, [r5]
   12204:	ldr	r1, [r6]
   12208:	bl	110e8 <g_strcmp0@plt>
   1220c:	cmp	r0, #0
   12210:	bne	121f0 <g_strcmp0@plt+0x1108>
   12214:	ldr	r3, [r5, #4]
   12218:	cmp	r3, #0
   1221c:	beq	12324 <g_strcmp0@plt+0x123c>
   12220:	ldr	r4, [r6, #4]
   12224:	cmp	r4, #0
   12228:	bne	12234 <g_strcmp0@plt+0x114c>
   1222c:	b	12324 <g_strcmp0@plt+0x123c>
   12230:	ldr	r3, [r5, #4]
   12234:	ldr	r0, [r3]
   12238:	ldr	r1, [r4]
   1223c:	bl	110e8 <g_strcmp0@plt>
   12240:	cmp	r0, #0
   12244:	beq	12324 <g_strcmp0@plt+0x123c>
   12248:	ldr	r3, [r5, #4]
   1224c:	mov	r2, r7
   12250:	add	r1, sp, #24
   12254:	ldr	r0, [r3]
   12258:	bl	10e9c <strtol@plt>
   1225c:	cmn	r0, #-2147483647	; 0x80000001
   12260:	beq	122ac <g_strcmp0@plt+0x11c4>
   12264:	mov	r1, r8
   12268:	ldr	r0, [r4]
   1226c:	bl	110e8 <g_strcmp0@plt>
   12270:	cmp	r0, #0
   12274:	bne	12288 <g_strcmp0@plt+0x11a0>
   12278:	ldr	r3, [sp, #24]
   1227c:	ldrb	r3, [r3]
   12280:	cmp	r3, #0
   12284:	beq	12324 <g_strcmp0@plt+0x123c>
   12288:	mov	r1, r9
   1228c:	ldr	r0, [r4]
   12290:	bl	110e8 <g_strcmp0@plt>
   12294:	cmp	r0, #0
   12298:	bne	122ac <g_strcmp0@plt+0x11c4>
   1229c:	ldr	r3, [sp, #24]
   122a0:	ldrb	r3, [r3]
   122a4:	cmp	r3, #37	; 0x25
   122a8:	beq	12324 <g_strcmp0@plt+0x123c>
   122ac:	ldr	r4, [r4, #4]
   122b0:	cmp	r4, #0
   122b4:	bne	12230 <g_strcmp0@plt+0x1148>
   122b8:	ldr	r3, [sp, #8]
   122bc:	cmp	r3, #0
   122c0:	beq	1242c <g_strcmp0@plt+0x1344>
   122c4:	ldr	r3, [pc, #496]	; 124bc <g_strcmp0@plt+0x13d4>
   122c8:	mov	r2, #5
   122cc:	ldr	r1, [pc, #492]	; 124c0 <g_strcmp0@plt+0x13d8>
   122d0:	mov	r0, r4
   122d4:	ldr	r6, [r3, #8]
   122d8:	bl	10fbc <dcgettext@plt>
   122dc:	ldr	r3, [r5]
   122e0:	mov	r1, r6
   122e4:	str	r3, [sp, #4]
   122e8:	ldr	r3, [r5, #4]
   122ec:	mov	r2, r4
   122f0:	ldr	r3, [r3]
   122f4:	str	r3, [sp]
   122f8:	mov	r3, r0
   122fc:	ldr	r0, [sp, #12]
   12300:	bl	110a0 <g_set_error@plt>
   12304:	mov	r0, #0
   12308:	ldr	r3, [pc, #416]	; 124b0 <g_strcmp0@plt+0x13c8>
   1230c:	ldr	r2, [sp, #28]
   12310:	ldr	r3, [r3]
   12314:	cmp	r2, r3
   12318:	bne	124ac <g_strcmp0@plt+0x13c4>
   1231c:	add	sp, sp, #36	; 0x24
   12320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12324:	ldr	r0, [r5, #8]
   12328:	cmp	r0, #0
   1232c:	beq	12368 <g_strcmp0@plt+0x1280>
   12330:	ldr	r3, [r6, #16]
   12334:	cmp	r3, #0
   12338:	bne	123cc <g_strcmp0@plt+0x12e4>
   1233c:	ldr	r4, [r6, #8]
   12340:	cmp	r4, #0
   12344:	beq	123f0 <g_strcmp0@plt+0x1308>
   12348:	ldr	r3, [sp, #12]
   1234c:	mov	r2, r6
   12350:	str	r3, [sp]
   12354:	ldr	r1, [sp, #16]
   12358:	ldr	r3, [sp, #20]
   1235c:	bl	12184 <g_strcmp0@plt+0x109c>
   12360:	cmp	r0, #0
   12364:	beq	12304 <g_strcmp0@plt+0x121c>
   12368:	ldr	sl, [sl, #4]
   1236c:	cmp	sl, #0
   12370:	bne	121dc <g_strcmp0@plt+0x10f4>
   12374:	mov	r0, #1
   12378:	b	12308 <g_strcmp0@plt+0x1220>
   1237c:	ldr	r3, [sp, #8]
   12380:	cmp	r3, #0
   12384:	beq	12464 <g_strcmp0@plt+0x137c>
   12388:	ldr	r3, [pc, #300]	; 124bc <g_strcmp0@plt+0x13d4>
   1238c:	mov	r2, #5
   12390:	ldr	r1, [pc, #300]	; 124c4 <g_strcmp0@plt+0x13dc>
   12394:	mov	r0, #0
   12398:	ldr	r4, [r3, #8]
   1239c:	bl	10fbc <dcgettext@plt>
   123a0:	ldr	r3, [sp, #8]
   123a4:	mov	r1, r4
   123a8:	mov	r2, #0
   123ac:	ldr	r3, [r3]
   123b0:	str	r3, [sp, #4]
   123b4:	ldr	r3, [r5]
   123b8:	str	r3, [sp]
   123bc:	mov	r3, r0
   123c0:	ldr	r0, [sp, #12]
   123c4:	bl	110a0 <g_set_error@plt>
   123c8:	b	12304 <g_strcmp0@plt+0x121c>
   123cc:	ldr	r3, [sp, #12]
   123d0:	mov	r2, #0
   123d4:	str	r3, [sp]
   123d8:	ldr	r1, [sp, #16]
   123dc:	ldr	r3, [sp, #20]
   123e0:	bl	12184 <g_strcmp0@plt+0x109c>
   123e4:	cmp	r0, #0
   123e8:	bne	12368 <g_strcmp0@plt+0x1280>
   123ec:	b	12304 <g_strcmp0@plt+0x121c>
   123f0:	ldr	r3, [pc, #196]	; 124bc <g_strcmp0@plt+0x13d4>
   123f4:	mov	r2, #5
   123f8:	ldr	r1, [pc, #200]	; 124c8 <g_strcmp0@plt+0x13e0>
   123fc:	mov	r0, r4
   12400:	ldr	r6, [r3, #8]
   12404:	bl	10fbc <dcgettext@plt>
   12408:	ldr	r3, [r5]
   1240c:	mov	r1, r6
   12410:	str	r3, [sp]
   12414:	mov	r2, r4
   12418:	mov	r3, r0
   1241c:	ldr	r0, [sp, #12]
   12420:	bl	110a0 <g_set_error@plt>
   12424:	mov	r0, r4
   12428:	b	12308 <g_strcmp0@plt+0x1220>
   1242c:	ldr	r3, [pc, #136]	; 124bc <g_strcmp0@plt+0x13d4>
   12430:	ldr	r6, [sp, #8]
   12434:	mov	r2, #5
   12438:	ldr	r1, [pc, #140]	; 124cc <g_strcmp0@plt+0x13e4>
   1243c:	mov	r0, r6
   12440:	ldr	r4, [r3, #8]
   12444:	bl	10fbc <dcgettext@plt>
   12448:	ldr	r3, [r5]
   1244c:	mov	r1, r4
   12450:	str	r3, [sp, #4]
   12454:	ldr	r3, [r5, #4]
   12458:	mov	r2, r6
   1245c:	ldr	r3, [r3]
   12460:	b	122f4 <g_strcmp0@plt+0x120c>
   12464:	ldr	r6, [sp, #8]
   12468:	ldr	r3, [pc, #76]	; 124bc <g_strcmp0@plt+0x13d4>
   1246c:	mov	r2, #5
   12470:	ldr	r1, [pc, #88]	; 124d0 <g_strcmp0@plt+0x13e8>
   12474:	mov	r0, r6
   12478:	ldr	r4, [r3, #8]
   1247c:	bl	10fbc <dcgettext@plt>
   12480:	ldr	r3, [sp, #20]
   12484:	mov	r1, r4
   12488:	str	r3, [sp, #4]
   1248c:	ldr	r3, [r5]
   12490:	mov	r2, r6
   12494:	str	r3, [sp]
   12498:	mov	r3, r0
   1249c:	ldr	r0, [sp, #12]
   124a0:	bl	110a0 <g_set_error@plt>
   124a4:	mov	r0, r6
   124a8:	b	12308 <g_strcmp0@plt+0x1220>
   124ac:	bl	10f80 <__stack_chk_fail@plt>
   124b0:	strdeq	r3, [r2], -r0
   124b4:	andeq	r2, r1, r4, ror #21
   124b8:	andeq	r2, r1, r8, ror #21
   124bc:	andeq	r4, r2, r8, lsl r0
   124c0:	andeq	r2, r1, ip, ror #21
   124c4:	andeq	r2, r1, ip, lsl #21
   124c8:	andeq	r2, r1, ip, asr #22
   124cc:	andeq	r2, r1, ip, lsl fp
   124d0:			; <UNDEFINED> instruction: 0x00012abc
   124d4:	push	{r4, r5, r6, r7, r8, lr}
   124d8:	sub	sp, sp, #56	; 0x38
   124dc:	ldr	r6, [pc, #244]	; 125d8 <g_strcmp0@plt+0x14f0>
   124e0:	mov	r8, r1
   124e4:	mov	r5, r2
   124e8:	ldr	ip, [r6]
   124ec:	mov	r1, r3
   124f0:	mov	r2, #0
   124f4:	mov	r7, r0
   124f8:	str	ip, [sp, #52]	; 0x34
   124fc:	bl	10f20 <XInternAtom@plt>
   12500:	add	ip, sp, #48	; 0x30
   12504:	add	r3, sp, #44	; 0x2c
   12508:	add	r2, sp, #40	; 0x28
   1250c:	mov	r4, #0
   12510:	str	ip, [sp, #28]
   12514:	str	r3, [sp, #24]
   12518:	add	ip, sp, #36	; 0x24
   1251c:	add	r3, sp, #32
   12520:	str	r2, [sp, #20]
   12524:	mov	r2, #1024	; 0x400
   12528:	str	r3, [sp, #12]
   1252c:	str	r2, [sp]
   12530:	str	r5, [sp, #8]
   12534:	mov	r1, r8
   12538:	str	ip, [sp, #16]
   1253c:	str	r4, [sp, #4]
   12540:	mov	r3, r4
   12544:	mov	r2, r0
   12548:	mov	r0, r7
   1254c:	bl	10ea8 <XGetWindowProperty@plt>
   12550:	subs	r7, r0, #0
   12554:	bne	125a8 <g_strcmp0@plt+0x14c0>
   12558:	ldr	r3, [sp, #32]
   1255c:	cmp	r5, r3
   12560:	bne	125c4 <g_strcmp0@plt+0x14dc>
   12564:	ldr	r3, [sp, #36]	; 0x24
   12568:	ldr	r5, [sp, #40]	; 0x28
   1256c:	add	r2, r3, #7
   12570:	cmp	r3, #0
   12574:	movlt	r3, r2
   12578:	asr	r3, r3, #3
   1257c:	mul	r5, r5, r3
   12580:	add	r0, r5, #1
   12584:	bl	10f2c <g_malloc@plt>
   12588:	ldr	r8, [sp, #48]	; 0x30
   1258c:	mov	r2, r5
   12590:	mov	r1, r8
   12594:	mov	r4, r0
   12598:	bl	11028 <memcpy@plt>
   1259c:	strb	r7, [r4, r5]
   125a0:	mov	r0, r8
   125a4:	bl	10fd4 <XFree@plt>
   125a8:	ldr	r2, [sp, #52]	; 0x34
   125ac:	ldr	r3, [r6]
   125b0:	mov	r0, r4
   125b4:	cmp	r2, r3
   125b8:	bne	125d4 <g_strcmp0@plt+0x14ec>
   125bc:	add	sp, sp, #56	; 0x38
   125c0:	pop	{r4, r5, r6, r7, r8, pc}
   125c4:	ldr	r0, [sp, #48]	; 0x30
   125c8:	mov	r4, r7
   125cc:	bl	10fd4 <XFree@plt>
   125d0:	b	125a8 <g_strcmp0@plt+0x14c0>
   125d4:	bl	10f80 <__stack_chk_fail@plt>
   125d8:	strdeq	r3, [r2], -r0
   125dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125e0:	sub	sp, sp, #12
   125e4:	mov	r5, r0
   125e8:	mov	r0, #16
   125ec:	str	r1, [sp, #4]
   125f0:	bl	10f68 <g_string_sized_new@plt>
   125f4:	mov	r4, r0
   125f8:	mov	r0, #24
   125fc:	bl	10f5c <g_slice_alloc0@plt>
   12600:	mov	r1, r0
   12604:	mov	r6, r0
   12608:	mov	r0, #0
   1260c:	bl	10f8c <g_list_prepend@plt>
   12610:	ldrb	r2, [r5]
   12614:	cmp	r2, #0
   12618:	mov	r8, r0
   1261c:	beq	129a4 <g_strcmp0@plt+0x18bc>
   12620:	mov	fp, #0
   12624:	mov	r7, fp
   12628:	mov	r9, #24
   1262c:	mov	sl, #61	; 0x3d
   12630:	b	12650 <g_strcmp0@plt+0x1568>
   12634:	cmp	r2, #61	; 0x3d
   12638:	beq	127d4 <g_strcmp0@plt+0x16ec>
   1263c:	cmp	r2, #92	; 0x5c
   12640:	bne	127a8 <g_strcmp0@plt+0x16c0>
   12644:	ldrb	r2, [r5, #1]!
   12648:	cmp	r2, #0
   1264c:	beq	126e0 <g_strcmp0@plt+0x15f8>
   12650:	cmp	r2, #58	; 0x3a
   12654:	beq	12744 <g_strcmp0@plt+0x165c>
   12658:	bhi	12634 <g_strcmp0@plt+0x154c>
   1265c:	cmp	r2, #38	; 0x26
   12660:	bne	127a8 <g_strcmp0@plt+0x16c0>
   12664:	ldr	r3, [r6]
   12668:	cmp	r3, #0
   1266c:	beq	128c0 <g_strcmp0@plt+0x17d8>
   12670:	cmp	fp, #0
   12674:	beq	1293c <g_strcmp0@plt+0x1854>
   12678:	ldr	r3, [fp]
   1267c:	cmp	r3, #0
   12680:	beq	12844 <g_strcmp0@plt+0x175c>
   12684:	ldr	r0, [r4]
   12688:	bl	10f14 <g_strdup@plt>
   1268c:	mov	r1, r0
   12690:	mov	r0, r7
   12694:	bl	10f8c <g_list_prepend@plt>
   12698:	str	r0, [fp, #4]
   1269c:	mov	r1, r7
   126a0:	mov	r0, r4
   126a4:	bl	10ecc <g_string_truncate@plt>
   126a8:	ldr	r0, [r6, #8]
   126ac:	bl	10e84 <g_list_reverse@plt>
   126b0:	mov	fp, r7
   126b4:	str	r0, [r6, #8]
   126b8:	mov	r0, r9
   126bc:	bl	10f5c <g_slice_alloc0@plt>
   126c0:	mov	r1, r0
   126c4:	mov	r6, r0
   126c8:	mov	r0, r8
   126cc:	bl	10f8c <g_list_prepend@plt>
   126d0:	ldrb	r2, [r5, #1]!
   126d4:	cmp	r2, #0
   126d8:	mov	r8, r0
   126dc:	bne	12650 <g_strcmp0@plt+0x1568>
   126e0:	ldr	r1, [r6]
   126e4:	cmp	r1, #0
   126e8:	beq	129b0 <g_strcmp0@plt+0x18c8>
   126ec:	cmp	fp, #0
   126f0:	beq	129dc <g_strcmp0@plt+0x18f4>
   126f4:	ldr	r1, [fp]
   126f8:	cmp	r1, #0
   126fc:	beq	12904 <g_strcmp0@plt+0x181c>
   12700:	ldr	r0, [r4]
   12704:	str	r2, [sp, #4]
   12708:	bl	10f14 <g_strdup@plt>
   1270c:	ldr	r2, [sp, #4]
   12710:	mov	r1, r0
   12714:	mov	r0, r2
   12718:	bl	10f8c <g_list_prepend@plt>
   1271c:	str	r0, [fp, #4]
   12720:	mov	r0, r8
   12724:	bl	10e84 <g_list_reverse@plt>
   12728:	mov	r1, #1
   1272c:	mov	r5, r0
   12730:	mov	r0, r4
   12734:	bl	11010 <g_string_free@plt>
   12738:	mov	r0, r5
   1273c:	add	sp, sp, #12
   12740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12744:	ldr	r3, [r6]
   12748:	cmp	r3, #0
   1274c:	beq	1287c <g_strcmp0@plt+0x1794>
   12750:	cmp	fp, #0
   12754:	beq	12920 <g_strcmp0@plt+0x1838>
   12758:	ldr	r3, [fp]
   1275c:	cmp	r3, #0
   12760:	beq	12860 <g_strcmp0@plt+0x1778>
   12764:	ldr	r0, [r4]
   12768:	bl	10f14 <g_strdup@plt>
   1276c:	mov	r1, r0
   12770:	mov	r0, r7
   12774:	bl	10f8c <g_list_prepend@plt>
   12778:	str	r0, [fp, #4]
   1277c:	mov	r1, r7
   12780:	mov	r0, r4
   12784:	bl	10ecc <g_string_truncate@plt>
   12788:	mov	r0, r9
   1278c:	bl	10f5c <g_slice_alloc0@plt>
   12790:	mov	r1, r0
   12794:	mov	fp, r0
   12798:	ldr	r0, [r6, #8]
   1279c:	bl	10f8c <g_list_prepend@plt>
   127a0:	str	r0, [r6, #8]
   127a4:	b	12644 <g_strcmp0@plt+0x155c>
   127a8:	ldr	r3, [r4, #4]
   127ac:	ldr	r0, [r4, #8]
   127b0:	add	r1, r3, #1
   127b4:	cmp	r1, r0
   127b8:	bcs	12820 <g_strcmp0@plt+0x1738>
   127bc:	ldr	r0, [r4]
   127c0:	str	r1, [r4, #4]
   127c4:	strb	r2, [r0, r3]
   127c8:	ldm	r4, {r2, r3}
   127cc:	strb	r7, [r2, r3]
   127d0:	b	12644 <g_strcmp0@plt+0x155c>
   127d4:	ldr	r3, [r6]
   127d8:	cmp	r3, #0
   127dc:	beq	12898 <g_strcmp0@plt+0x17b0>
   127e0:	cmp	fp, #0
   127e4:	beq	127f4 <g_strcmp0@plt+0x170c>
   127e8:	ldr	r3, [fp]
   127ec:	cmp	r3, #0
   127f0:	beq	128dc <g_strcmp0@plt+0x17f4>
   127f4:	ldr	r3, [r4, #4]
   127f8:	ldr	r1, [r4, #8]
   127fc:	add	r2, r3, #1
   12800:	cmp	r2, r1
   12804:	bcs	12830 <g_strcmp0@plt+0x1748>
   12808:	ldr	r1, [r4]
   1280c:	str	r2, [r4, #4]
   12810:	strb	sl, [r1, r3]
   12814:	ldm	r4, {r2, r3}
   12818:	strb	r7, [r2, r3]
   1281c:	b	12644 <g_strcmp0@plt+0x155c>
   12820:	mvn	r1, #0
   12824:	mov	r0, r4
   12828:	bl	10f50 <g_string_insert_c@plt>
   1282c:	b	12644 <g_strcmp0@plt+0x155c>
   12830:	mov	r2, sl
   12834:	mvn	r1, #0
   12838:	mov	r0, r4
   1283c:	bl	10f50 <g_string_insert_c@plt>
   12840:	b	12644 <g_strcmp0@plt+0x155c>
   12844:	ldr	r3, [r4, #4]
   12848:	cmp	r3, #0
   1284c:	beq	12958 <g_strcmp0@plt+0x1870>
   12850:	ldr	r0, [r4]
   12854:	bl	10f14 <g_strdup@plt>
   12858:	str	r0, [fp]
   1285c:	b	1269c <g_strcmp0@plt+0x15b4>
   12860:	ldr	r3, [r4, #4]
   12864:	cmp	r3, #0
   12868:	beq	12958 <g_strcmp0@plt+0x1870>
   1286c:	ldr	r0, [r4]
   12870:	bl	10f14 <g_strdup@plt>
   12874:	str	r0, [fp]
   12878:	b	1277c <g_strcmp0@plt+0x1694>
   1287c:	ldr	r3, [r4, #4]
   12880:	cmp	r3, #0
   12884:	beq	129cc <g_strcmp0@plt+0x18e4>
   12888:	ldr	r0, [r4]
   1288c:	bl	10f14 <g_strdup@plt>
   12890:	str	r0, [r6]
   12894:	b	1277c <g_strcmp0@plt+0x1694>
   12898:	ldr	r3, [r4, #4]
   1289c:	cmp	r3, #0
   128a0:	beq	129cc <g_strcmp0@plt+0x18e4>
   128a4:	ldr	r0, [r4]
   128a8:	bl	10f14 <g_strdup@plt>
   128ac:	mov	r1, r7
   128b0:	str	r0, [r6]
   128b4:	mov	r0, r4
   128b8:	bl	10ecc <g_string_truncate@plt>
   128bc:	b	12644 <g_strcmp0@plt+0x155c>
   128c0:	ldr	r3, [r4, #4]
   128c4:	cmp	r3, #0
   128c8:	beq	129cc <g_strcmp0@plt+0x18e4>
   128cc:	ldr	r0, [r4]
   128d0:	bl	10f14 <g_strdup@plt>
   128d4:	str	r0, [r6]
   128d8:	b	1269c <g_strcmp0@plt+0x15b4>
   128dc:	ldr	r3, [r4, #4]
   128e0:	cmp	r3, #0
   128e4:	beq	12958 <g_strcmp0@plt+0x1870>
   128e8:	ldr	r0, [r4]
   128ec:	bl	10f14 <g_strdup@plt>
   128f0:	mov	r1, r7
   128f4:	str	r0, [fp]
   128f8:	mov	r0, r4
   128fc:	bl	10ecc <g_string_truncate@plt>
   12900:	b	12644 <g_strcmp0@plt+0x155c>
   12904:	ldr	r2, [r4, #4]
   12908:	cmp	r2, #0
   1290c:	beq	12958 <g_strcmp0@plt+0x1870>
   12910:	ldr	r0, [r4]
   12914:	bl	10f14 <g_strdup@plt>
   12918:	str	r0, [fp]
   1291c:	b	12720 <g_strcmp0@plt+0x1638>
   12920:	ldr	r0, [r4]
   12924:	bl	10f14 <g_strdup@plt>
   12928:	mov	r1, r0
   1292c:	mov	r0, r7
   12930:	bl	10f8c <g_list_prepend@plt>
   12934:	str	r0, [r6, #4]
   12938:	b	1277c <g_strcmp0@plt+0x1694>
   1293c:	ldr	r0, [r4]
   12940:	bl	10f14 <g_strdup@plt>
   12944:	mov	r1, r0
   12948:	mov	r0, r7
   1294c:	bl	10f8c <g_list_prepend@plt>
   12950:	str	r0, [r6, #4]
   12954:	b	1269c <g_strcmp0@plt+0x15b4>
   12958:	ldr	r3, [pc, #152]	; 129f8 <g_strcmp0@plt+0x1910>
   1295c:	ldr	r1, [pc, #152]	; 129fc <g_strcmp0@plt+0x1914>
   12960:	mov	r2, #5
   12964:	mov	r0, #0
   12968:	ldr	r5, [r3, #8]
   1296c:	bl	10fbc <dcgettext@plt>
   12970:	mov	r1, r5
   12974:	mov	r2, #0
   12978:	mov	r5, #0
   1297c:	mov	r3, r0
   12980:	ldr	r0, [sp, #4]
   12984:	bl	10ee4 <g_set_error_literal@plt>
   12988:	mov	r0, r8
   1298c:	ldr	r1, [pc, #108]	; 12a00 <g_strcmp0@plt+0x1918>
   12990:	bl	10f74 <g_list_free_full@plt>
   12994:	mov	r0, r4
   12998:	mov	r1, #1
   1299c:	bl	11010 <g_string_free@plt>
   129a0:	b	12738 <g_strcmp0@plt+0x1650>
   129a4:	ldr	r3, [r6]
   129a8:	cmp	r3, #0
   129ac:	bne	129dc <g_strcmp0@plt+0x18f4>
   129b0:	ldr	r3, [r4, #4]
   129b4:	cmp	r3, #0
   129b8:	beq	129cc <g_strcmp0@plt+0x18e4>
   129bc:	ldr	r0, [r4]
   129c0:	bl	10f14 <g_strdup@plt>
   129c4:	str	r0, [r6]
   129c8:	b	12720 <g_strcmp0@plt+0x1638>
   129cc:	ldr	r3, [pc, #36]	; 129f8 <g_strcmp0@plt+0x1910>
   129d0:	mov	r2, #5
   129d4:	ldr	r1, [pc, #40]	; 12a04 <g_strcmp0@plt+0x191c>
   129d8:	b	12964 <g_strcmp0@plt+0x187c>
   129dc:	ldr	r0, [r4]
   129e0:	bl	10f14 <g_strdup@plt>
   129e4:	mov	r1, r0
   129e8:	mov	r0, #0
   129ec:	bl	10f8c <g_list_prepend@plt>
   129f0:	str	r0, [r6, #4]
   129f4:	b	12720 <g_strcmp0@plt+0x1638>
   129f8:	andeq	r4, r2, r8, lsl r0
   129fc:	andeq	r2, r1, r4, ror fp
   12a00:	andeq	r2, r1, r4
   12a04:	andeq	r2, r1, r8, lsl #23
   12a08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a0c:	mov	r7, r0
   12a10:	ldr	r6, [pc, #72]	; 12a60 <g_strcmp0@plt+0x1978>
   12a14:	ldr	r5, [pc, #72]	; 12a64 <g_strcmp0@plt+0x197c>
   12a18:	add	r6, pc, r6
   12a1c:	add	r5, pc, r5
   12a20:	sub	r6, r6, r5
   12a24:	mov	r8, r1
   12a28:	mov	r9, r2
   12a2c:	bl	10e64 <_init@@Base>
   12a30:	asrs	r6, r6, #2
   12a34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a38:	mov	r4, #0
   12a3c:	add	r4, r4, #1
   12a40:	ldr	r3, [r5], #4
   12a44:	mov	r2, r9
   12a48:	mov	r1, r8
   12a4c:	mov	r0, r7
   12a50:	blx	r3
   12a54:	cmp	r6, r4
   12a58:	bne	12a3c <g_strcmp0@plt+0x1954>
   12a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a60:	andeq	r1, r1, r8, asr #7
   12a64:	andeq	r1, r1, r0, asr #7
   12a68:	bx	lr

Disassembly of section .fini:

00012a6c <_fini@@Base>:
   12a6c:	push	{r3, lr}
   12a70:	pop	{r3, pc}
