
raspbian-preinstalled/xdg-dbus-proxy:     file format elf32-littlearm


Disassembly of section .init:

00012274 <.init>:
   12274:	push	{r3, lr}
   12278:	bl	12f7c <g_type_class_adjust_private_offset@plt+0x5ec>
   1227c:	pop	{r3, pc}

Disassembly of section .plt:

00012280 <g_free@plt-0x14>:
   12280:	push	{lr}		; (str lr, [sp, #-4]!)
   12284:	ldr	lr, [pc, #4]	; 12290 <g_free@plt-0x4>
   12288:	add	lr, pc, lr
   1228c:	ldr	pc, [lr, #8]!
   12290:	andeq	r6, r1, r4, lsl #22

00012294 <g_free@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #90112	; 0x16000
   1229c:	ldr	pc, [ip, #2820]!	; 0xb04

000122a0 <g_variant_dup_string@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #90112	; 0x16000
   122a8:	ldr	pc, [ip, #2812]!	; 0xafc

000122ac <g_socket_close@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #90112	; 0x16000
   122b4:	ldr	pc, [ip, #2804]!	; 0xaf4

000122b8 <g_param_spec_string@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #90112	; 0x16000
   122c0:	ldr	pc, [ip, #2796]!	; 0xaec

000122c4 <g_dbus_message_get_body@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #90112	; 0x16000
   122cc:	ldr	pc, [ip, #2788]!	; 0xae4

000122d0 <g_bytes_get_data@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #90112	; 0x16000
   122d8:	ldr	pc, [ip, #2780]!	; 0xadc

000122dc <abort@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #90112	; 0x16000
   122e4:	ldr	pc, [ip, #2772]!	; 0xad4

000122e8 <g_ptr_array_insert@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #90112	; 0x16000
   122f0:	ldr	pc, [ip, #2764]!	; 0xacc

000122f4 <g_direct_equal@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #90112	; 0x16000
   122fc:	ldr	pc, [ip, #2756]!	; 0xac4

00012300 <g_intern_static_string@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #90112	; 0x16000
   12308:	ldr	pc, [ip, #2748]!	; 0xabc

0001230c <g_socket_receive_message@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #90112	; 0x16000
   12314:	ldr	pc, [ip, #2740]!	; 0xab4

00012318 <g_variant_is_of_type@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #90112	; 0x16000
   12320:	ldr	pc, [ip, #2732]!	; 0xaac

00012324 <g_byte_array_new@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #90112	; 0x16000
   1232c:	ldr	pc, [ip, #2724]!	; 0xaa4

00012330 <g_dbus_message_set_body@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #90112	; 0x16000
   12338:	ldr	pc, [ip, #2716]!	; 0xa9c

0001233c <g_value_dup_string@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #90112	; 0x16000
   12344:	ldr	pc, [ip, #2708]!	; 0xa94

00012348 <g_socket_service_is_active@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #90112	; 0x16000
   12350:	ldr	pc, [ip, #2700]!	; 0xa8c

00012354 <g_hash_table_destroy@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #90112	; 0x16000
   1235c:	ldr	pc, [ip, #2692]!	; 0xa84

00012360 <__libc_start_main@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #90112	; 0x16000
   12368:	ldr	pc, [ip, #2684]!	; 0xa7c

0001236c <g_str_hash@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #90112	; 0x16000
   12374:	ldr	pc, [ip, #2676]!	; 0xa74

00012378 <g_dbus_message_new_method_call@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #90112	; 0x16000
   12380:	ldr	pc, [ip, #2668]!	; 0xa6c

00012384 <g_io_channel_unix_new@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #90112	; 0x16000
   1238c:	ldr	pc, [ip, #2660]!	; 0xa64

00012390 <g_variant_builder_add@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #90112	; 0x16000
   12398:	ldr	pc, [ip, #2652]!	; 0xa5c

0001239c <g_ptr_array_new_with_free_func@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #90112	; 0x16000
   123a4:	ldr	pc, [ip, #2644]!	; 0xa54

000123a8 <g_print@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #90112	; 0x16000
   123b0:	ldr	pc, [ip, #2636]!	; 0xa4c

000123b4 <g_unix_socket_address_new@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #90112	; 0x16000
   123bc:	ldr	pc, [ip, #2628]!	; 0xa44

000123c0 <g_dbus_message_to_blob@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #90112	; 0x16000
   123c8:	ldr	pc, [ip, #2620]!	; 0xa3c

000123cc <g_variant_builder_init@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #90112	; 0x16000
   123d4:	ldr	pc, [ip, #2612]!	; 0xa34

000123d8 <__gmon_start__@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #90112	; 0x16000
   123e0:	ldr	pc, [ip, #2604]!	; 0xa2c

000123e4 <g_source_set_callback@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #90112	; 0x16000
   123ec:	ldr	pc, [ip, #2596]!	; 0xa24

000123f0 <g_object_unref@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #90112	; 0x16000
   123f8:	ldr	pc, [ip, #2588]!	; 0xa1c

000123fc <g_hash_table_lookup_extended@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #90112	; 0x16000
   12404:	ldr	pc, [ip, #2580]!	; 0xa14

00012408 <g_strcmp0@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #90112	; 0x16000
   12410:	ldr	pc, [ip, #2572]!	; 0xa0c

00012414 <g_bytes_new@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #90112	; 0x16000
   1241c:	ldr	pc, [ip, #2564]!	; 0xa04

00012420 <g_strdup@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #90112	; 0x16000
   12428:	ldr	pc, [ip, #2556]!	; 0x9fc

0001242c <strchr@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #90112	; 0x16000
   12434:	ldr	pc, [ip, #2548]!	; 0x9f4

00012438 <g_hash_table_insert@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #90112	; 0x16000
   12440:	ldr	pc, [ip, #2540]!	; 0x9ec

00012444 <g_list_free@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #90112	; 0x16000
   1244c:	ldr	pc, [ip, #2532]!	; 0x9e4

00012450 <g_printerr@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #90112	; 0x16000
   12458:	ldr	pc, [ip, #2524]!	; 0x9dc

0001245c <g_socket_connection_get_type@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #90112	; 0x16000
   12464:	ldr	pc, [ip, #2516]!	; 0x9d4

00012468 <g_list_free_full@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #90112	; 0x16000
   12470:	ldr	pc, [ip, #2508]!	; 0x9cc

00012474 <g_bytes_new_with_free_func@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #90112	; 0x16000
   1247c:	ldr	pc, [ip, #2500]!	; 0x9c4

00012480 <g_object_class_install_property@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #90112	; 0x16000
   12488:	ldr	pc, [ip, #2492]!	; 0x9bc

0001248c <g_malloc@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #90112	; 0x16000
   12494:	ldr	pc, [ip, #2484]!	; 0x9b4

00012498 <strrchr@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #90112	; 0x16000
   124a0:	ldr	pc, [ip, #2476]!	; 0x9ac

000124a4 <g_hash_table_remove@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #90112	; 0x16000
   124ac:	ldr	pc, [ip, #2468]!	; 0x9a4

000124b0 <g_main_loop_new@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #90112	; 0x16000
   124b8:	ldr	pc, [ip, #2460]!	; 0x99c

000124bc <g_strndup@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #90112	; 0x16000
   124c4:	ldr	pc, [ip, #2452]!	; 0x994

000124c8 <__fxstat64@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #90112	; 0x16000
   124d0:	ldr	pc, [ip, #2444]!	; 0x98c

000124d4 <g_unix_fd_list_get_length@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #90112	; 0x16000
   124dc:	ldr	pc, [ip, #2436]!	; 0x984

000124e0 <g_ptr_array_add@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #90112	; 0x16000
   124e8:	ldr	pc, [ip, #2428]!	; 0x97c

000124ec <g_dbus_message_new@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #90112	; 0x16000
   124f4:	ldr	pc, [ip, #2420]!	; 0x974

000124f8 <g_assertion_message_expr@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #90112	; 0x16000
   12500:	ldr	pc, [ip, #2412]!	; 0x96c

00012504 <g_variant_get_child_value@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #90112	; 0x16000
   1250c:	ldr	pc, [ip, #2404]!	; 0x964

00012510 <g_object_new@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #90112	; 0x16000
   12518:	ldr	pc, [ip, #2396]!	; 0x95c

0001251c <read@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #90112	; 0x16000
   12524:	ldr	pc, [ip, #2388]!	; 0x954

00012528 <write@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #90112	; 0x16000
   12530:	ldr	pc, [ip, #2380]!	; 0x94c

00012534 <g_list_length@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #90112	; 0x16000
   1253c:	ldr	pc, [ip, #2372]!	; 0x944

00012540 <g_object_ref@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #90112	; 0x16000
   12548:	ldr	pc, [ip, #2364]!	; 0x93c

0001254c <g_unix_fd_message_get_type@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #90112	; 0x16000
   12554:	ldr	pc, [ip, #2356]!	; 0x934

00012558 <g_bytes_new_take@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #90112	; 0x16000
   12560:	ldr	pc, [ip, #2348]!	; 0x92c

00012564 <g_value_set_string@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #90112	; 0x16000
   1256c:	ldr	pc, [ip, #2340]!	; 0x924

00012570 <g_socket_shutdown@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #90112	; 0x16000
   12578:	ldr	pc, [ip, #2332]!	; 0x91c

0001257c <g_type_check_class_cast@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #90112	; 0x16000
   12584:	ldr	pc, [ip, #2324]!	; 0x914

00012588 <g_socket_service_get_type@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #90112	; 0x16000
   12590:	ldr	pc, [ip, #2316]!	; 0x90c

00012594 <g_socket_set_blocking@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #90112	; 0x16000
   1259c:	ldr	pc, [ip, #2308]!	; 0x904

000125a0 <g_socket_service_start@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #90112	; 0x16000
   125a8:	ldr	pc, [ip, #2300]!	; 0x8fc

000125ac <g_hash_table_new@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #90112	; 0x16000
   125b4:	ldr	pc, [ip, #2292]!	; 0x8f4

000125b8 <g_hash_table_iter_next@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #90112	; 0x16000
   125c0:	ldr	pc, [ip, #2284]!	; 0x8ec

000125c4 <g_hash_table_iter_init@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #90112	; 0x16000
   125cc:	ldr	pc, [ip, #2276]!	; 0x8e4

000125d0 <g_hash_table_new_full@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #90112	; 0x16000
   125d8:	ldr	pc, [ip, #2268]!	; 0x8dc

000125dc <g_byte_array_free@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #90112	; 0x16000
   125e4:	ldr	pc, [ip, #2260]!	; 0x8d4

000125e8 <g_dbus_message_set_message_type@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #90112	; 0x16000
   125f0:	ldr	pc, [ip, #2252]!	; 0x8cc

000125f4 <g_variant_new_printf@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #90112	; 0x16000
   125fc:	ldr	pc, [ip, #2244]!	; 0x8c4

00012600 <strlen@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #90112	; 0x16000
   12608:	ldr	pc, [ip, #2236]!	; 0x8bc

0001260c <unlink@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #90112	; 0x16000
   12614:	ldr	pc, [ip, #2228]!	; 0x8b4

00012618 <g_io_add_watch@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #90112	; 0x16000
   12620:	ldr	pc, [ip, #2220]!	; 0x8ac

00012624 <g_unix_connection_send_credentials@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #90112	; 0x16000
   1262c:	ldr	pc, [ip, #2212]!	; 0x8a4

00012630 <memcpy@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #90112	; 0x16000
   12638:	ldr	pc, [ip, #2204]!	; 0x89c

0001263c <g_variant_builder_end@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #90112	; 0x16000
   12644:	ldr	pc, [ip, #2196]!	; 0x894

00012648 <g_dbus_message_set_reply_serial@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #90112	; 0x16000
   12650:	ldr	pc, [ip, #2188]!	; 0x88c

00012654 <g_list_concat@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #90112	; 0x16000
   1265c:	ldr	pc, [ip, #2180]!	; 0x884

00012660 <g_dbus_message_new_from_blob@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #90112	; 0x16000
   12668:	ldr	pc, [ip, #2172]!	; 0x87c

0001266c <strtol@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #90112	; 0x16000
   12674:	ldr	pc, [ip, #2164]!	; 0x874

00012678 <memmem@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #90112	; 0x16000
   12680:	ldr	pc, [ip, #2156]!	; 0x86c

00012684 <g_unix_fd_message_get_fd_list@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #90112	; 0x16000
   1268c:	ldr	pc, [ip, #2148]!	; 0x864

00012690 <g_socket_listener_add_address@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #90112	; 0x16000
   12698:	ldr	pc, [ip, #2140]!	; 0x85c

0001269c <g_error_matches@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #90112	; 0x16000
   126a4:	ldr	pc, [ip, #2132]!	; 0x854

000126a8 <g_list_delete_link@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #90112	; 0x16000
   126b0:	ldr	pc, [ip, #2124]!	; 0x84c

000126b4 <g_type_check_instance_is_a@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #90112	; 0x16000
   126bc:	ldr	pc, [ip, #2116]!	; 0x844

000126c0 <strstr@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #90112	; 0x16000
   126c8:	ldr	pc, [ip, #2108]!	; 0x83c

000126cc <g_unix_connection_get_type@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #90112	; 0x16000
   126d4:	ldr	pc, [ip, #2100]!	; 0x834

000126d8 <g_list_append@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #90112	; 0x16000
   126e0:	ldr	pc, [ip, #2092]!	; 0x82c

000126e4 <fwrite@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #90112	; 0x16000
   126ec:	ldr	pc, [ip, #2084]!	; 0x824

000126f0 <g_dbus_message_bytes_needed@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #90112	; 0x16000
   126f8:	ldr	pc, [ip, #2076]!	; 0x81c

000126fc <g_dbus_address_get_stream@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #90112	; 0x16000
   12704:	ldr	pc, [ip, #2068]!	; 0x814

00012708 <g_str_has_prefix@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #90112	; 0x16000
   12710:	ldr	pc, [ip, #2060]!	; 0x80c

00012714 <g_type_name@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #90112	; 0x16000
   1271c:	ldr	pc, [ip, #2052]!	; 0x804

00012720 <g_realloc@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #90112	; 0x16000
   12728:	ldr	pc, [ip, #2044]!	; 0x7fc

0001272c <g_io_error_quark@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #90112	; 0x16000
   12734:	ldr	pc, [ip, #2036]!	; 0x7f4

00012738 <g_hash_table_replace@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #90112	; 0x16000
   12740:	ldr	pc, [ip, #2028]!	; 0x7ec

00012744 <g_io_error_from_errno@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #90112	; 0x16000
   1274c:	ldr	pc, [ip, #2020]!	; 0x7e4

00012750 <g_type_check_instance_cast@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #90112	; 0x16000
   12758:	ldr	pc, [ip, #2012]!	; 0x7dc

0001275c <__stack_chk_fail@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #90112	; 0x16000
   12764:	ldr	pc, [ip, #2004]!	; 0x7d4

00012768 <g_variant_new_tuple@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #90112	; 0x16000
   12770:	ldr	pc, [ip, #1996]!	; 0x7cc

00012774 <g_socket_connection_get_socket@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #90112	; 0x16000
   1277c:	ldr	pc, [ip, #1988]!	; 0x7c4

00012780 <__fprintf_chk@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #90112	; 0x16000
   12788:	ldr	pc, [ip, #1980]!	; 0x7bc

0001278c <g_variant_unref@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #90112	; 0x16000
   12794:	ldr	pc, [ip, #1972]!	; 0x7b4

00012798 <g_type_register_static_simple@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #90112	; 0x16000
   127a0:	ldr	pc, [ip, #1964]!	; 0x7ac

000127a4 <g_byte_array_append@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #90112	; 0x16000
   127ac:	ldr	pc, [ip, #1956]!	; 0x7a4

000127b0 <g_hash_table_lookup@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #90112	; 0x16000
   127b8:	ldr	pc, [ip, #1948]!	; 0x79c

000127bc <g_socket_create_source@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #90112	; 0x16000
   127c4:	ldr	pc, [ip, #1940]!	; 0x794

000127c8 <g_direct_hash@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #90112	; 0x16000
   127d0:	ldr	pc, [ip, #1932]!	; 0x78c

000127d4 <g_variant_get_strv@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #90112	; 0x16000
   127dc:	ldr	pc, [ip, #1924]!	; 0x784

000127e0 <g_bytes_unref@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #90112	; 0x16000
   127e8:	ldr	pc, [ip, #1916]!	; 0x77c

000127ec <g_byte_array_remove_range@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #90112	; 0x16000
   127f4:	ldr	pc, [ip, #1908]!	; 0x774

000127f8 <g_malloc0@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #90112	; 0x16000
   12800:	ldr	pc, [ip, #1900]!	; 0x76c

00012804 <g_socket_service_stop@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #90112	; 0x16000
   1280c:	ldr	pc, [ip, #1892]!	; 0x764

00012810 <g_set_error_literal@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #90112	; 0x16000
   12818:	ldr	pc, [ip, #1884]!	; 0x75c

0001281c <g_list_prepend@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #90112	; 0x16000
   12824:	ldr	pc, [ip, #1876]!	; 0x754

00012828 <g_main_loop_unref@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #90112	; 0x16000
   12830:	ldr	pc, [ip, #1868]!	; 0x74c

00012834 <g_dbus_is_name@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #90112	; 0x16000
   1283c:	ldr	pc, [ip, #1860]!	; 0x744

00012840 <g_source_destroy@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #90112	; 0x16000
   12848:	ldr	pc, [ip, #1852]!	; 0x73c

0001284c <g_once_init_enter@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #90112	; 0x16000
   12854:	ldr	pc, [ip, #1844]!	; 0x734

00012858 <g_strerror@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #90112	; 0x16000
   12860:	ldr	pc, [ip, #1836]!	; 0x72c

00012864 <g_socket_listener_get_type@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #90112	; 0x16000
   1286c:	ldr	pc, [ip, #1828]!	; 0x724

00012870 <g_source_unref@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #90112	; 0x16000
   12878:	ldr	pc, [ip, #1820]!	; 0x71c

0001287c <g_source_attach@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #90112	; 0x16000
   12884:	ldr	pc, [ip, #1812]!	; 0x714

00012888 <g_dbus_address_get_stream_finish@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #90112	; 0x16000
   12890:	ldr	pc, [ip, #1804]!	; 0x70c

00012894 <g_dbus_message_set_flags@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #90112	; 0x16000
   1289c:	ldr	pc, [ip, #1796]!	; 0x704

000128a0 <g_error_free@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #90112	; 0x16000
   128a8:	ldr	pc, [ip, #1788]!	; 0x6fc

000128ac <g_str_has_suffix@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #90112	; 0x16000
   128b4:	ldr	pc, [ip, #1780]!	; 0x6f4

000128b8 <g_ptr_array_unref@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #90112	; 0x16000
   128c0:	ldr	pc, [ip, #1772]!	; 0x6ec

000128c4 <g_malloc_n@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #90112	; 0x16000
   128cc:	ldr	pc, [ip, #1764]!	; 0x6e4

000128d0 <g_once_init_leave@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #90112	; 0x16000
   128d8:	ldr	pc, [ip, #1756]!	; 0x6dc

000128dc <strncmp@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #90112	; 0x16000
   128e4:	ldr	pc, [ip, #1748]!	; 0x6d4

000128e8 <g_dbus_message_set_error_name@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #90112	; 0x16000
   128f0:	ldr	pc, [ip, #1740]!	; 0x6cc

000128f4 <g_main_loop_run@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #90112	; 0x16000
   128fc:	ldr	pc, [ip, #1732]!	; 0x6c4

00012900 <g_list_remove@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #90112	; 0x16000
   12908:	ldr	pc, [ip, #1724]!	; 0x6bc

0001290c <memchr@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #90112	; 0x16000
   12914:	ldr	pc, [ip, #1716]!	; 0x6b4

00012918 <g_type_class_peek_parent@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #90112	; 0x16000
   12920:	ldr	pc, [ip, #1708]!	; 0x6ac

00012924 <g_log@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #90112	; 0x16000
   1292c:	ldr	pc, [ip, #1700]!	; 0x6a4

00012930 <g_dbus_message_set_serial@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #90112	; 0x16000
   12938:	ldr	pc, [ip, #1692]!	; 0x69c

0001293c <strcmp@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #90112	; 0x16000
   12944:	ldr	pc, [ip, #1684]!	; 0x694

00012948 <g_str_equal@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #90112	; 0x16000
   12950:	ldr	pc, [ip, #1676]!	; 0x68c

00012954 <g_variant_new@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #90112	; 0x16000
   1295c:	ldr	pc, [ip, #1668]!	; 0x684

00012960 <exit@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #90112	; 0x16000
   12968:	ldr	pc, [ip, #1660]!	; 0x67c

0001296c <g_socket_send_message@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #90112	; 0x16000
   12974:	ldr	pc, [ip, #1652]!	; 0x674

00012978 <__errno_location@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #90112	; 0x16000
   12980:	ldr	pc, [ip, #1644]!	; 0x66c

00012984 <g_variant_get_string@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #90112	; 0x16000
   1298c:	ldr	pc, [ip, #1636]!	; 0x664

00012990 <g_type_class_adjust_private_offset@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #90112	; 0x16000
   12998:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

0001299c <.text>:
   1299c:	ldr	r3, [pc, #1344]	; 12ee4 <g_type_class_adjust_private_offset@plt+0x554>
   129a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a4:	sub	sp, sp, #28
   129a8:	ldr	r3, [r3]
   129ac:	mov	r4, r1
   129b0:	mov	r6, r0
   129b4:	ldr	r0, [pc, #1324]	; 12ee8 <g_type_class_adjust_private_offset@plt+0x558>
   129b8:	str	r3, [sp, #20]
   129bc:	bl	1239c <g_ptr_array_new_with_free_func@plt>
   129c0:	ldr	r2, [pc, #1316]	; 12eec <g_type_class_adjust_private_offset@plt+0x55c>
   129c4:	ldr	r3, [r4]
   129c8:	cmp	r6, #1
   129cc:	str	r3, [r2, #4]
   129d0:	beq	12ed4 <g_type_class_adjust_private_offset@plt+0x544>
   129d4:	addgt	r6, r4, r6, lsl #2
   129d8:	mov	r5, r0
   129dc:	subgt	r6, r6, #4
   129e0:	ble	12a00 <g_type_class_adjust_private_offset@plt+0x70>
   129e4:	ldr	r0, [r4, #4]!
   129e8:	bl	12420 <g_strdup@plt>
   129ec:	mov	r1, r0
   129f0:	mov	r0, r5
   129f4:	bl	124e0 <g_ptr_array_add@plt>
   129f8:	cmp	r6, r4
   129fc:	bne	129e4 <g_type_class_adjust_private_offset@plt+0x54>
   12a00:	ldr	r1, [r5, #4]
   12a04:	mov	r3, #0
   12a08:	cmp	r1, r3
   12a0c:	str	r3, [sp, #12]
   12a10:	ldr	r8, [pc, #1240]	; 12ef0 <g_type_class_adjust_private_offset@plt+0x560>
   12a14:	bls	12ce4 <g_type_class_adjust_private_offset@plt+0x354>
   12a18:	ldr	r2, [r5]
   12a1c:	add	ip, r2, r3, lsl #2
   12a20:	ldr	r0, [r2, r3, lsl #2]
   12a24:	ldrb	r0, [r0]
   12a28:	cmp	r0, #45	; 0x2d
   12a2c:	beq	12cc0 <g_type_class_adjust_private_offset@plt+0x330>
   12a30:	mov	r0, #0
   12a34:	str	r0, [sp, #16]
   12a38:	ldr	r7, [r2, r3, lsl #2]
   12a3c:	ldrb	r2, [r7]
   12a40:	cmp	r2, #45	; 0x2d
   12a44:	beq	12d28 <g_type_class_adjust_private_offset@plt+0x398>
   12a48:	add	r2, r3, #1
   12a4c:	cmp	r1, r2
   12a50:	str	r2, [sp, #12]
   12a54:	bls	12d6c <g_type_class_adjust_private_offset@plt+0x3dc>
   12a58:	ldr	r1, [ip, #4]
   12a5c:	ldrb	r2, [r1]
   12a60:	cmp	r2, #45	; 0x2d
   12a64:	beq	12d6c <g_type_class_adjust_private_offset@plt+0x3dc>
   12a68:	add	r3, r3, #2
   12a6c:	mov	r0, r7
   12a70:	str	r3, [sp, #12]
   12a74:	bl	16b9c <g_type_class_adjust_private_offset@plt+0x420c>
   12a78:	ldr	r3, [sp, #12]
   12a7c:	mov	r9, r0
   12a80:	b	12b04 <g_type_class_adjust_private_offset@plt+0x174>
   12a84:	cmp	r3, #111	; 0x6f
   12a88:	movne	sl, #1
   12a8c:	moveq	sl, #3
   12a90:	mov	r1, r8
   12a94:	mov	r0, r4
   12a98:	bl	128ac <g_str_has_suffix@plt>
   12a9c:	subs	r6, r0, #0
   12aa0:	beq	12abc <g_type_class_adjust_private_offset@plt+0x12c>
   12aa4:	mov	r0, r4
   12aa8:	bl	12600 <strlen@plt>
   12aac:	mov	r6, #1
   12ab0:	mov	r3, #0
   12ab4:	add	r0, r4, r0
   12ab8:	strb	r3, [r0, #-2]
   12abc:	ldrb	r3, [r4]
   12ac0:	cmp	r3, #58	; 0x3a
   12ac4:	beq	12d78 <g_type_class_adjust_private_offset@plt+0x3e8>
   12ac8:	mov	r0, r4
   12acc:	bl	12834 <g_dbus_is_name@plt>
   12ad0:	cmp	r0, #0
   12ad4:	beq	12d78 <g_type_class_adjust_private_offset@plt+0x3e8>
   12ad8:	mov	r3, sl
   12adc:	mov	r2, r6
   12ae0:	mov	r1, r4
   12ae4:	mov	r0, r9
   12ae8:	bl	16b18 <g_type_class_adjust_private_offset@plt+0x4188>
   12aec:	ldr	r3, [sp, #12]
   12af0:	mov	r0, r4
   12af4:	add	r3, r3, #1
   12af8:	str	r3, [sp, #12]
   12afc:	bl	12294 <g_free@plt>
   12b00:	ldr	r3, [sp, #12]
   12b04:	ldr	r2, [r5, #4]
   12b08:	cmp	r3, r2
   12b0c:	bcs	12c5c <g_type_class_adjust_private_offset@plt+0x2cc>
   12b10:	ldr	r2, [r5]
   12b14:	ldr	r6, [r2, r3, lsl #2]
   12b18:	ldrb	r3, [r6]
   12b1c:	cmp	r3, #45	; 0x2d
   12b20:	bne	12c5c <g_type_class_adjust_private_offset@plt+0x2cc>
   12b24:	ldr	r1, [pc, #968]	; 12ef4 <g_type_class_adjust_private_offset@plt+0x564>
   12b28:	mov	r0, r6
   12b2c:	bl	12708 <g_str_has_prefix@plt>
   12b30:	cmp	r0, #0
   12b34:	bne	12b4c <g_type_class_adjust_private_offset@plt+0x1bc>
   12b38:	ldr	r1, [pc, #952]	; 12ef8 <g_type_class_adjust_private_offset@plt+0x568>
   12b3c:	mov	r0, r6
   12b40:	bl	12708 <g_str_has_prefix@plt>
   12b44:	cmp	r0, #0
   12b48:	beq	12b78 <g_type_class_adjust_private_offset@plt+0x1e8>
   12b4c:	mov	r1, #61	; 0x3d
   12b50:	mov	r0, r6
   12b54:	bl	1242c <strchr@plt>
   12b58:	add	r0, r0, #1
   12b5c:	bl	12420 <g_strdup@plt>
   12b60:	ldrb	r3, [r6, #2]
   12b64:	cmp	r3, #116	; 0x74
   12b68:	mov	r4, r0
   12b6c:	bne	12a84 <g_type_class_adjust_private_offset@plt+0xf4>
   12b70:	mov	sl, #2
   12b74:	b	12a90 <g_type_class_adjust_private_offset@plt+0x100>
   12b78:	ldr	r1, [pc, #892]	; 12efc <g_type_class_adjust_private_offset@plt+0x56c>
   12b7c:	mov	r0, r6
   12b80:	bl	12708 <g_str_has_prefix@plt>
   12b84:	subs	fp, r0, #0
   12b88:	bne	12b4c <g_type_class_adjust_private_offset@plt+0x1bc>
   12b8c:	ldr	r1, [pc, #876]	; 12f00 <g_type_class_adjust_private_offset@plt+0x570>
   12b90:	mov	r0, r6
   12b94:	bl	12708 <g_str_has_prefix@plt>
   12b98:	cmp	r0, #0
   12b9c:	bne	12bb4 <g_type_class_adjust_private_offset@plt+0x224>
   12ba0:	ldr	r1, [pc, #860]	; 12f04 <g_type_class_adjust_private_offset@plt+0x574>
   12ba4:	mov	r0, r6
   12ba8:	bl	12708 <g_str_has_prefix@plt>
   12bac:	cmp	r0, #0
   12bb0:	beq	12db4 <g_type_class_adjust_private_offset@plt+0x424>
   12bb4:	mov	r1, #61	; 0x3d
   12bb8:	mov	r0, r6
   12bbc:	bl	1242c <strchr@plt>
   12bc0:	add	r0, r0, #1
   12bc4:	bl	12420 <g_strdup@plt>
   12bc8:	mov	r1, #61	; 0x3d
   12bcc:	mov	sl, r0
   12bd0:	bl	1242c <strchr@plt>
   12bd4:	subs	r4, r0, #0
   12bd8:	beq	12eac <g_type_class_adjust_private_offset@plt+0x51c>
   12bdc:	mov	fp, #0
   12be0:	strb	fp, [r4], #1
   12be4:	mov	r1, r8
   12be8:	mov	r0, sl
   12bec:	bl	128ac <g_str_has_suffix@plt>
   12bf0:	subs	r2, r0, #0
   12bf4:	beq	12c0c <g_type_class_adjust_private_offset@plt+0x27c>
   12bf8:	mov	r0, sl
   12bfc:	bl	12600 <strlen@plt>
   12c00:	mov	r2, #1
   12c04:	add	r0, sl, r0
   12c08:	strb	fp, [r0, #-2]
   12c0c:	ldr	r1, [pc, #748]	; 12f00 <g_type_class_adjust_private_offset@plt+0x570>
   12c10:	mov	r0, r6
   12c14:	str	r2, [sp, #4]
   12c18:	bl	12708 <g_str_has_prefix@plt>
   12c1c:	mov	r3, r4
   12c20:	mov	r1, sl
   12c24:	ldr	r2, [sp, #4]
   12c28:	cmp	r0, #0
   12c2c:	mov	r0, r9
   12c30:	beq	12d94 <g_type_class_adjust_private_offset@plt+0x404>
   12c34:	bl	16b44 <g_type_class_adjust_private_offset@plt+0x41b4>
   12c38:	ldr	r3, [sp, #12]
   12c3c:	mov	r0, sl
   12c40:	add	r3, r3, #1
   12c44:	str	r3, [sp, #12]
   12c48:	bl	12294 <g_free@plt>
   12c4c:	ldr	r3, [sp, #12]
   12c50:	ldr	r2, [r5, #4]
   12c54:	cmp	r3, r2
   12c58:	bcc	12b10 <g_type_class_adjust_private_offset@plt+0x180>
   12c5c:	add	r1, sp, #16
   12c60:	mov	r0, r9
   12c64:	bl	16bdc <g_type_class_adjust_private_offset@plt+0x424c>
   12c68:	subs	r4, r0, #0
   12c6c:	beq	12d9c <g_type_class_adjust_private_offset@plt+0x40c>
   12c70:	ldr	r6, [pc, #628]	; 12eec <g_type_class_adjust_private_offset@plt+0x55c>
   12c74:	mov	r0, r9
   12c78:	ldr	r4, [r6]
   12c7c:	bl	12540 <g_object_ref@plt>
   12c80:	mov	r1, r0
   12c84:	mov	r0, r4
   12c88:	bl	1281c <g_list_prepend@plt>
   12c8c:	mov	r4, #1
   12c90:	str	r0, [r6]
   12c94:	ldr	r0, [sp, #16]
   12c98:	cmp	r0, #0
   12c9c:	beq	12ca4 <g_type_class_adjust_private_offset@plt+0x314>
   12ca0:	bl	128a0 <g_error_free@plt>
   12ca4:	cmp	r9, #0
   12ca8:	beq	12cb4 <g_type_class_adjust_private_offset@plt+0x324>
   12cac:	mov	r0, r9
   12cb0:	bl	123f0 <g_object_unref@plt>
   12cb4:	cmp	r4, #0
   12cb8:	bne	12cd4 <g_type_class_adjust_private_offset@plt+0x344>
   12cbc:	b	12d40 <g_type_class_adjust_private_offset@plt+0x3b0>
   12cc0:	add	r1, sp, #12
   12cc4:	mov	r0, r5
   12cc8:	bl	16d1c <g_type_class_adjust_private_offset@plt+0x438c>
   12ccc:	cmp	r0, #0
   12cd0:	beq	12d40 <g_type_class_adjust_private_offset@plt+0x3b0>
   12cd4:	ldr	r3, [sp, #12]
   12cd8:	ldr	r1, [r5, #4]
   12cdc:	cmp	r1, r3
   12ce0:	bhi	12a18 <g_type_class_adjust_private_offset@plt+0x88>
   12ce4:	ldr	r3, [pc, #512]	; 12eec <g_type_class_adjust_private_offset@plt+0x55c>
   12ce8:	ldr	r3, [r3]
   12cec:	cmp	r3, #0
   12cf0:	beq	12e84 <g_type_class_adjust_private_offset@plt+0x4f4>
   12cf4:	ldr	r4, [pc, #524]	; 12f08 <g_type_class_adjust_private_offset@plt+0x578>
   12cf8:	ldr	r0, [r4]
   12cfc:	cmp	r0, #0
   12d00:	bge	12e14 <g_type_class_adjust_private_offset@plt+0x484>
   12d04:	mov	r1, #0
   12d08:	mov	r0, r1
   12d0c:	bl	124b0 <g_main_loop_new@plt>
   12d10:	mov	r4, r0
   12d14:	bl	128f4 <g_main_loop_run@plt>
   12d18:	mov	r0, r4
   12d1c:	bl	12828 <g_main_loop_unref@plt>
   12d20:	mov	r4, #0
   12d24:	b	12d44 <g_type_class_adjust_private_offset@plt+0x3b4>
   12d28:	ldr	r0, [pc, #476]	; 12f0c <g_type_class_adjust_private_offset@plt+0x57c>
   12d2c:	bl	12450 <g_printerr@plt>
   12d30:	ldr	r0, [sp, #16]
   12d34:	cmp	r0, #0
   12d38:	beq	12d40 <g_type_class_adjust_private_offset@plt+0x3b0>
   12d3c:	bl	128a0 <g_error_free@plt>
   12d40:	mov	r4, #1
   12d44:	mov	r0, r5
   12d48:	bl	128b8 <g_ptr_array_unref@plt>
   12d4c:	ldr	r3, [pc, #400]	; 12ee4 <g_type_class_adjust_private_offset@plt+0x554>
   12d50:	ldr	r2, [sp, #20]
   12d54:	mov	r0, r4
   12d58:	ldr	r3, [r3]
   12d5c:	cmp	r2, r3
   12d60:	bne	12ed0 <g_type_class_adjust_private_offset@plt+0x540>
   12d64:	add	sp, sp, #28
   12d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d6c:	ldr	r0, [pc, #412]	; 12f10 <g_type_class_adjust_private_offset@plt+0x580>
   12d70:	bl	12450 <g_printerr@plt>
   12d74:	b	12d30 <g_type_class_adjust_private_offset@plt+0x3a0>
   12d78:	mov	r1, r4
   12d7c:	ldr	r0, [pc, #400]	; 12f14 <g_type_class_adjust_private_offset@plt+0x584>
   12d80:	bl	12450 <g_printerr@plt>
   12d84:	mov	r0, r4
   12d88:	bl	12294 <g_free@plt>
   12d8c:	mov	r4, #0
   12d90:	b	12c94 <g_type_class_adjust_private_offset@plt+0x304>
   12d94:	bl	16b70 <g_type_class_adjust_private_offset@plt+0x41e0>
   12d98:	b	12c38 <g_type_class_adjust_private_offset@plt+0x2a8>
   12d9c:	ldr	r3, [sp, #16]
   12da0:	mov	r1, r7
   12da4:	ldr	r0, [pc, #364]	; 12f18 <g_type_class_adjust_private_offset@plt+0x588>
   12da8:	ldr	r2, [r3, #8]
   12dac:	bl	12450 <g_printerr@plt>
   12db0:	b	12c94 <g_type_class_adjust_private_offset@plt+0x304>
   12db4:	ldr	r1, [pc, #352]	; 12f1c <g_type_class_adjust_private_offset@plt+0x58c>
   12db8:	mov	r0, r6
   12dbc:	bl	12948 <g_str_equal@plt>
   12dc0:	cmp	r0, #0
   12dc4:	bne	12df8 <g_type_class_adjust_private_offset@plt+0x468>
   12dc8:	ldr	r1, [pc, #336]	; 12f20 <g_type_class_adjust_private_offset@plt+0x590>
   12dcc:	mov	r0, r6
   12dd0:	bl	12948 <g_str_equal@plt>
   12dd4:	cmp	r0, #0
   12dd8:	beq	12e54 <g_type_class_adjust_private_offset@plt+0x4c4>
   12ddc:	mov	r1, #1
   12de0:	mov	r0, r9
   12de4:	bl	16b00 <g_type_class_adjust_private_offset@plt+0x4170>
   12de8:	ldr	r3, [sp, #12]
   12dec:	add	r3, r3, #1
   12df0:	str	r3, [sp, #12]
   12df4:	b	12b04 <g_type_class_adjust_private_offset@plt+0x174>
   12df8:	mov	r1, #1
   12dfc:	mov	r0, r9
   12e00:	bl	16b10 <g_type_class_adjust_private_offset@plt+0x4180>
   12e04:	ldr	r3, [sp, #12]
   12e08:	add	r3, r3, #1
   12e0c:	str	r3, [sp, #12]
   12e10:	b	12b04 <g_type_class_adjust_private_offset@plt+0x174>
   12e14:	mov	r2, #1
   12e18:	ldr	r1, [pc, #260]	; 12f24 <g_type_class_adjust_private_offset@plt+0x594>
   12e1c:	bl	12528 <write@plt>
   12e20:	cmp	r0, #1
   12e24:	beq	12e38 <g_type_class_adjust_private_offset@plt+0x4a8>
   12e28:	ldr	r2, [pc, #248]	; 12f28 <g_type_class_adjust_private_offset@plt+0x598>
   12e2c:	mov	r1, #16
   12e30:	mov	r0, #0
   12e34:	bl	12924 <g_log@plt>
   12e38:	ldr	r0, [r4]
   12e3c:	bl	12384 <g_io_channel_unix_new@plt>
   12e40:	mov	r3, #0
   12e44:	ldr	r2, [pc, #224]	; 12f2c <g_type_class_adjust_private_offset@plt+0x59c>
   12e48:	mov	r1, #24
   12e4c:	bl	12618 <g_io_add_watch@plt>
   12e50:	b	12d04 <g_type_class_adjust_private_offset@plt+0x374>
   12e54:	mov	r0, r6
   12e58:	ldr	r1, [pc, #208]	; 12f30 <g_type_class_adjust_private_offset@plt+0x5a0>
   12e5c:	bl	12948 <g_str_equal@plt>
   12e60:	cmp	r0, #0
   12e64:	bne	12e90 <g_type_class_adjust_private_offset@plt+0x500>
   12e68:	add	r1, sp, #12
   12e6c:	mov	r0, r5
   12e70:	bl	16d1c <g_type_class_adjust_private_offset@plt+0x438c>
   12e74:	subs	fp, r0, #0
   12e78:	beq	12ec8 <g_type_class_adjust_private_offset@plt+0x538>
   12e7c:	ldr	r3, [sp, #12]
   12e80:	b	12b04 <g_type_class_adjust_private_offset@plt+0x174>
   12e84:	ldr	r0, [pc, #168]	; 12f34 <g_type_class_adjust_private_offset@plt+0x5a4>
   12e88:	bl	12450 <g_printerr@plt>
   12e8c:	b	12d40 <g_type_class_adjust_private_offset@plt+0x3b0>
   12e90:	mov	r1, #1
   12e94:	mov	r0, r9
   12e98:	bl	16b08 <g_type_class_adjust_private_offset@plt+0x4178>
   12e9c:	ldr	r3, [sp, #12]
   12ea0:	add	r3, r3, #1
   12ea4:	str	r3, [sp, #12]
   12ea8:	b	12b04 <g_type_class_adjust_private_offset@plt+0x174>
   12eac:	mov	r1, sl
   12eb0:	ldr	r0, [pc, #128]	; 12f38 <g_type_class_adjust_private_offset@plt+0x5a8>
   12eb4:	bl	12450 <g_printerr@plt>
   12eb8:	mov	r0, sl
   12ebc:	mov	r4, fp
   12ec0:	bl	12294 <g_free@plt>
   12ec4:	b	12c94 <g_type_class_adjust_private_offset@plt+0x304>
   12ec8:	mov	r4, fp
   12ecc:	b	12c94 <g_type_class_adjust_private_offset@plt+0x304>
   12ed0:	bl	1275c <__stack_chk_fail@plt>
   12ed4:	ldr	r3, [pc, #96]	; 12f3c <g_type_class_adjust_private_offset@plt+0x5ac>
   12ed8:	mov	r0, r6
   12edc:	ldr	r1, [r3]
   12ee0:	bl	16ccc <g_type_class_adjust_private_offset@plt+0x433c>
   12ee4:	andeq	r8, r2, r0, ror ip
   12ee8:	muleq	r1, r4, r2
   12eec:	andeq	r9, r2, r8, asr #32
   12ef0:	andeq	r7, r1, r8, ror pc
   12ef4:	andeq	r7, r1, r0, ror #30
   12ef8:	andeq	r7, r1, r8, ror #30
   12efc:	andeq	r7, r1, r0, ror pc
   12f00:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12f04:	andeq	r7, r1, r4, lsr #31
   12f08:	andeq	r9, r2, r8
   12f0c:	andeq	r7, r1, r0, lsr pc
   12f10:	andeq	r7, r1, r8, asr #30
   12f14:	andeq	r7, r1, ip, ror pc
   12f18:	strdeq	r7, [r1], -ip
   12f1c:	ldrdeq	r7, [r1], -r8
   12f20:	andeq	r7, r1, r0, ror #31
   12f24:	andeq	r8, r1, r8, lsr r0
   12f28:	andeq	r8, r1, ip, lsr r0
   12f2c:	andeq	r6, r1, r8, lsl #25
   12f30:	andeq	r7, r1, ip, ror #31
   12f34:	andeq	r8, r1, r0, lsr #32
   12f38:			; <UNDEFINED> instruction: 0x00017fb4
   12f3c:	andeq	r9, r2, r8, lsl r0
   12f40:	mov	fp, #0
   12f44:	mov	lr, #0
   12f48:	pop	{r1}		; (ldr r1, [sp], #4)
   12f4c:	mov	r2, sp
   12f50:	push	{r2}		; (str r2, [sp, #-4]!)
   12f54:	push	{r0}		; (str r0, [sp, #-4]!)
   12f58:	ldr	ip, [pc, #16]	; 12f70 <g_type_class_adjust_private_offset@plt+0x5e0>
   12f5c:	push	{ip}		; (str ip, [sp, #-4]!)
   12f60:	ldr	r0, [pc, #12]	; 12f74 <g_type_class_adjust_private_offset@plt+0x5e4>
   12f64:	ldr	r3, [pc, #12]	; 12f78 <g_type_class_adjust_private_offset@plt+0x5e8>
   12f68:	bl	12360 <__libc_start_main@plt>
   12f6c:	bl	122dc <abort@plt>
   12f70:	andeq	r7, r1, r0, ror #3
   12f74:	muleq	r1, ip, r9
   12f78:	andeq	r7, r1, r0, lsl #3
   12f7c:	ldr	r3, [pc, #20]	; 12f98 <g_type_class_adjust_private_offset@plt+0x608>
   12f80:	ldr	r2, [pc, #20]	; 12f9c <g_type_class_adjust_private_offset@plt+0x60c>
   12f84:	add	r3, pc, r3
   12f88:	ldr	r2, [r3, r2]
   12f8c:	cmp	r2, #0
   12f90:	bxeq	lr
   12f94:	b	123d8 <__gmon_start__@plt>
   12f98:	andeq	r5, r1, r8, lsl #28
   12f9c:	andeq	r0, r0, r4, ror #4
   12fa0:	ldr	r0, [pc, #24]	; 12fc0 <g_type_class_adjust_private_offset@plt+0x630>
   12fa4:	ldr	r3, [pc, #24]	; 12fc4 <g_type_class_adjust_private_offset@plt+0x634>
   12fa8:	cmp	r3, r0
   12fac:	bxeq	lr
   12fb0:	ldr	r3, [pc, #16]	; 12fc8 <g_type_class_adjust_private_offset@plt+0x638>
   12fb4:	cmp	r3, #0
   12fb8:	bxeq	lr
   12fbc:	bx	r3
   12fc0:	andeq	r9, r2, ip
   12fc4:	andeq	r9, r2, ip
   12fc8:	andeq	r0, r0, r0
   12fcc:	ldr	r0, [pc, #36]	; 12ff8 <g_type_class_adjust_private_offset@plt+0x668>
   12fd0:	ldr	r1, [pc, #36]	; 12ffc <g_type_class_adjust_private_offset@plt+0x66c>
   12fd4:	sub	r1, r1, r0
   12fd8:	asr	r1, r1, #2
   12fdc:	add	r1, r1, r1, lsr #31
   12fe0:	asrs	r1, r1, #1
   12fe4:	bxeq	lr
   12fe8:	ldr	r3, [pc, #16]	; 13000 <g_type_class_adjust_private_offset@plt+0x670>
   12fec:	cmp	r3, #0
   12ff0:	bxeq	lr
   12ff4:	bx	r3
   12ff8:	andeq	r9, r2, ip
   12ffc:	andeq	r9, r2, ip
   13000:	andeq	r0, r0, r0
   13004:	push	{r4, lr}
   13008:	ldr	r4, [pc, #24]	; 13028 <g_type_class_adjust_private_offset@plt+0x698>
   1300c:	ldrb	r3, [r4]
   13010:	cmp	r3, #0
   13014:	popne	{r4, pc}
   13018:	bl	12fa0 <g_type_class_adjust_private_offset@plt+0x610>
   1301c:	mov	r3, #1
   13020:	strb	r3, [r4]
   13024:	pop	{r4, pc}
   13028:	andeq	r9, r2, ip, lsl r0
   1302c:	b	12fcc <g_type_class_adjust_private_offset@plt+0x63c>
   13030:	push	{r4, lr}
   13034:	sub	sp, sp, #16
   13038:	bl	12588 <g_socket_service_get_type@plt>
   1303c:	mov	r4, r0
   13040:	ldr	r0, [pc, #48]	; 13078 <g_type_class_adjust_private_offset@plt+0x6e8>
   13044:	bl	12300 <g_intern_static_string@plt>
   13048:	ldr	r1, [pc, #44]	; 1307c <g_type_class_adjust_private_offset@plt+0x6ec>
   1304c:	mov	r2, #0
   13050:	mov	r3, #48	; 0x30
   13054:	stmib	sp, {r1, r2}
   13058:	str	r3, [sp]
   1305c:	mov	r2, #124	; 0x7c
   13060:	ldr	r3, [pc, #24]	; 13080 <g_type_class_adjust_private_offset@plt+0x6f0>
   13064:	mov	r1, r0
   13068:	mov	r0, r4
   1306c:	bl	12798 <g_type_register_static_simple@plt>
   13070:	add	sp, sp, #16
   13074:	pop	{r4, pc}
   13078:	andeq	r7, r1, r8, ror r2
   1307c:	andeq	r4, r1, r8, asr #20
   13080:	andeq	r3, r1, ip, ror #2
   13084:	push	{lr}		; (str lr, [sp, #-4]!)
   13088:	sub	sp, sp, #20
   1308c:	ldr	r0, [pc, #48]	; 130c4 <g_type_class_adjust_private_offset@plt+0x734>
   13090:	bl	12300 <g_intern_static_string@plt>
   13094:	ldr	r1, [pc, #44]	; 130c8 <g_type_class_adjust_private_offset@plt+0x738>
   13098:	mov	r2, #0
   1309c:	mov	r3, #212	; 0xd4
   130a0:	stmib	sp, {r1, r2}
   130a4:	str	r3, [sp]
   130a8:	mov	r2, #68	; 0x44
   130ac:	ldr	r3, [pc, #24]	; 130cc <g_type_class_adjust_private_offset@plt+0x73c>
   130b0:	mov	r1, r0
   130b4:	mov	r0, #80	; 0x50
   130b8:	bl	12798 <g_type_register_static_simple@plt>
   130bc:	add	sp, sp, #20
   130c0:	pop	{pc}		; (ldr pc, [sp], #4)
   130c4:	andeq	r7, r1, r8, lsl #5
   130c8:	andeq	r3, r1, ip, lsr fp
   130cc:	andeq	r3, r1, ip, lsl r1
   130d0:	push	{r4, lr}
   130d4:	mov	r4, r0
   130d8:	ldr	r0, [r0]
   130dc:	bl	12294 <g_free@plt>
   130e0:	ldr	r0, [r4, #16]
   130e4:	bl	12294 <g_free@plt>
   130e8:	ldr	r0, [r4, #24]
   130ec:	bl	12294 <g_free@plt>
   130f0:	ldr	r0, [r4, #28]
   130f4:	bl	12294 <g_free@plt>
   130f8:	mov	r0, r4
   130fc:	pop	{r4, lr}
   13100:	b	12294 <g_free@plt>
   13104:	ldr	r1, [pc]	; 1310c <g_type_class_adjust_private_offset@plt+0x77c>
   13108:	b	12468 <g_list_free_full@plt>
   1310c:	ldrdeq	r3, [r1], -r0
   13110:	ldr	r1, [pc]	; 13118 <g_type_class_adjust_private_offset@plt+0x788>
   13114:	b	12468 <g_list_free_full@plt>
   13118:	muleq	r1, r4, r2
   1311c:	push	{r4, lr}
   13120:	mov	r4, r0
   13124:	bl	12918 <g_type_class_peek_parent@plt>
   13128:	ldr	r1, [pc, #52]	; 13164 <g_type_class_adjust_private_offset@plt+0x7d4>
   1312c:	ldr	r3, [r1, #4]
   13130:	cmp	r3, #0
   13134:	str	r0, [r1]
   13138:	bne	13154 <g_type_class_adjust_private_offset@plt+0x7c4>
   1313c:	mov	r0, r4
   13140:	mov	r1, #80	; 0x50
   13144:	bl	1257c <g_type_check_class_cast@plt>
   13148:	ldr	r3, [pc, #24]	; 13168 <g_type_class_adjust_private_offset@plt+0x7d8>
   1314c:	str	r3, [r0, #24]
   13150:	pop	{r4, pc}
   13154:	add	r1, r1, #4
   13158:	mov	r0, r4
   1315c:	bl	12990 <g_type_class_adjust_private_offset@plt>
   13160:	b	1313c <g_type_class_adjust_private_offset@plt+0x7ac>
   13164:	andeq	r9, r2, r0, lsr #32
   13168:	andeq	r6, r1, r4, asr sl
   1316c:	push	{r4, r5, lr}
   13170:	sub	sp, sp, #12
   13174:	mov	r5, r0
   13178:	bl	12918 <g_type_class_peek_parent@plt>
   1317c:	ldr	r1, [pc, #184]	; 1323c <g_type_class_adjust_private_offset@plt+0x8ac>
   13180:	ldr	r3, [r1, #12]
   13184:	cmp	r3, #0
   13188:	str	r0, [r1, #8]
   1318c:	bne	1322c <g_type_class_adjust_private_offset@plt+0x89c>
   13190:	mov	r1, #80	; 0x50
   13194:	mov	r0, r5
   13198:	bl	1257c <g_type_check_class_cast@plt>
   1319c:	mov	r4, r0
   131a0:	bl	12588 <g_socket_service_get_type@plt>
   131a4:	mov	r1, r0
   131a8:	mov	r0, r5
   131ac:	bl	1257c <g_type_check_class_cast@plt>
   131b0:	ldr	lr, [pc, #136]	; 13240 <g_type_class_adjust_private_offset@plt+0x8b0>
   131b4:	ldr	ip, [pc, #136]	; 13244 <g_type_class_adjust_private_offset@plt+0x8b4>
   131b8:	ldr	r2, [pc, #136]	; 13248 <g_type_class_adjust_private_offset@plt+0x8b8>
   131bc:	ldr	r1, [pc, #136]	; 1324c <g_type_class_adjust_private_offset@plt+0x8bc>
   131c0:	ldr	r3, [pc, #136]	; 13250 <g_type_class_adjust_private_offset@plt+0x8c0>
   131c4:	mov	r5, #11
   131c8:	str	lr, [r4, #16]
   131cc:	str	r1, [r4, #12]
   131d0:	str	r3, [r4, #24]
   131d4:	mov	r1, r2
   131d8:	mov	r3, #0
   131dc:	str	ip, [r0, #96]	; 0x60
   131e0:	str	r5, [sp]
   131e4:	ldr	r0, [pc, #104]	; 13254 <g_type_class_adjust_private_offset@plt+0x8c4>
   131e8:	bl	122b8 <g_param_spec_string@plt>
   131ec:	mov	r1, #1
   131f0:	mov	r2, r0
   131f4:	mov	r0, r4
   131f8:	bl	12480 <g_object_class_install_property@plt>
   131fc:	ldr	r2, [pc, #68]	; 13248 <g_type_class_adjust_private_offset@plt+0x8b8>
   13200:	str	r5, [sp]
   13204:	mov	r1, r2
   13208:	mov	r3, #0
   1320c:	ldr	r0, [pc, #68]	; 13258 <g_type_class_adjust_private_offset@plt+0x8c8>
   13210:	bl	122b8 <g_param_spec_string@plt>
   13214:	mov	r1, #2
   13218:	mov	r2, r0
   1321c:	mov	r0, r4
   13220:	add	sp, sp, #12
   13224:	pop	{r4, r5, lr}
   13228:	b	12480 <g_object_class_install_property@plt>
   1322c:	add	r1, r1, #12
   13230:	mov	r0, r5
   13234:	bl	12990 <g_type_class_adjust_private_offset@plt>
   13238:	b	13190 <g_type_class_adjust_private_offset@plt+0x800>
   1323c:	andeq	r9, r2, r0, lsr #32
   13240:	andeq	r6, r1, r0, asr #17
   13244:	andeq	r6, r1, ip, asr #19
   13248:	andeq	r7, r1, r8, asr #23
   1324c:	andeq	r6, r1, r0, lsl #16
   13250:	andeq	r6, r1, r0, asr #14
   13254:	muleq	r1, ip, r2
   13258:	andeq	r7, r1, ip, lsr #5
   1325c:	push	{r4, lr}
   13260:	mov	r4, r0
   13264:	ldr	r0, [r0, #12]
   13268:	bl	12774 <g_socket_connection_get_socket@plt>
   1326c:	mov	r2, #0
   13270:	mov	r1, #1
   13274:	bl	127bc <g_socket_create_source@plt>
   13278:	mov	r2, r4
   1327c:	mov	r3, #0
   13280:	ldr	r1, [pc, #28]	; 132a4 <g_type_class_adjust_private_offset@plt+0x914>
   13284:	str	r0, [r4, #16]
   13288:	bl	123e4 <g_source_set_callback@plt>
   1328c:	ldr	r0, [r4, #16]
   13290:	mov	r1, #0
   13294:	bl	1287c <g_source_attach@plt>
   13298:	ldr	r0, [r4, #16]
   1329c:	pop	{r4, lr}
   132a0:	b	12870 <g_source_unref@plt>
   132a4:	andeq	r6, r1, r0, ror r1
   132a8:	push	{r4, r5, r6, r7, lr}
   132ac:	mov	r4, #0
   132b0:	ldr	r6, [pc, #152]	; 13350 <g_type_class_adjust_private_offset@plt+0x9c0>
   132b4:	sub	sp, sp, #12
   132b8:	mov	r0, r1
   132bc:	ldr	r3, [r6]
   132c0:	mov	r5, r2
   132c4:	mov	r1, r4
   132c8:	mov	r2, sp
   132cc:	str	r3, [sp, #4]
   132d0:	str	r4, [sp]
   132d4:	bl	12888 <g_dbus_address_get_stream_finish@plt>
   132d8:	subs	r7, r0, #0
   132dc:	beq	1332c <g_type_class_adjust_private_offset@plt+0x99c>
   132e0:	bl	1245c <g_socket_connection_get_type@plt>
   132e4:	mov	r1, r0
   132e8:	mov	r0, r7
   132ec:	bl	12750 <g_type_check_instance_cast@plt>
   132f0:	mov	r7, r0
   132f4:	bl	12774 <g_socket_connection_get_socket@plt>
   132f8:	mov	r1, r4
   132fc:	bl	12594 <g_socket_set_blocking@plt>
   13300:	add	r0, r5, #24
   13304:	str	r7, [r5, #116]	; 0x74
   13308:	bl	1325c <g_type_class_adjust_private_offset@plt+0x8cc>
   1330c:	add	r0, r5, #104	; 0x68
   13310:	bl	1325c <g_type_class_adjust_private_offset@plt+0x8cc>
   13314:	ldr	r2, [sp, #4]
   13318:	ldr	r3, [r6]
   1331c:	cmp	r2, r3
   13320:	bne	1334c <g_type_class_adjust_private_offset@plt+0x9bc>
   13324:	add	sp, sp, #12
   13328:	pop	{r4, r5, r6, r7, pc}
   1332c:	ldr	r3, [sp]
   13330:	ldr	r2, [pc, #28]	; 13354 <g_type_class_adjust_private_offset@plt+0x9c4>
   13334:	mov	r1, #16
   13338:	ldr	r3, [r3, #8]
   1333c:	bl	12924 <g_log@plt>
   13340:	mov	r0, r5
   13344:	bl	123f0 <g_object_unref@plt>
   13348:	b	13314 <g_type_class_adjust_private_offset@plt+0x984>
   1334c:	bl	1275c <__stack_chk_fail@plt>
   13350:	andeq	r8, r2, r0, ror ip
   13354:			; <UNDEFINED> instruction: 0x000172b8
   13358:	push	{r4, r5, r6, lr}
   1335c:	mov	r4, r0
   13360:	ldr	r6, [r0, #20]
   13364:	mov	r5, r1
   13368:	cmp	r6, #0
   1336c:	beq	1338c <g_type_class_adjust_private_offset@plt+0x9fc>
   13370:	mov	r3, #0
   13374:	str	r3, [r5, #4]
   13378:	mov	r1, r5
   1337c:	ldr	r0, [r4, #68]	; 0x44
   13380:	bl	126d8 <g_list_append@plt>
   13384:	str	r0, [r4, #68]	; 0x44
   13388:	pop	{r4, r5, r6, pc}
   1338c:	ldr	r0, [r0, #12]
   13390:	bl	12774 <g_socket_connection_get_socket@plt>
   13394:	mov	r2, r6
   13398:	mov	r1, #4
   1339c:	bl	127bc <g_socket_create_source@plt>
   133a0:	mov	r3, r6
   133a4:	mov	r2, r4
   133a8:	ldr	r1, [pc, #28]	; 133cc <g_type_class_adjust_private_offset@plt+0xa3c>
   133ac:	str	r0, [r4, #20]
   133b0:	bl	123e4 <g_source_set_callback@plt>
   133b4:	mov	r1, r6
   133b8:	ldr	r0, [r4, #20]
   133bc:	bl	1287c <g_source_attach@plt>
   133c0:	ldr	r0, [r4, #20]
   133c4:	bl	12870 <g_source_unref@plt>
   133c8:	b	13370 <g_type_class_adjust_private_offset@plt+0x9e0>
   133cc:	andeq	r4, r1, r8, lsl r4
   133d0:	push	{r4, r5, r6, r7, lr}
   133d4:	sub	sp, sp, #12
   133d8:	ldr	r3, [r0, #8]
   133dc:	ldr	r6, [pc, #196]	; 134a8 <g_type_class_adjust_private_offset@plt+0xb18>
   133e0:	add	r5, r3, #24
   133e4:	ldr	r7, [r0, #4]
   133e8:	cmp	r0, r5
   133ec:	ldr	r2, [r6]
   133f0:	addeq	r5, r3, #104	; 0x68
   133f4:	cmp	r7, #0
   133f8:	mov	r4, r0
   133fc:	str	r2, [sp, #4]
   13400:	beq	1341c <g_type_class_adjust_private_offset@plt+0xa8c>
   13404:	ldr	r2, [sp, #4]
   13408:	ldr	r3, [r6]
   1340c:	cmp	r2, r3
   13410:	bne	134a4 <g_type_class_adjust_private_offset@plt+0xb14>
   13414:	add	sp, sp, #12
   13418:	pop	{r4, r5, r6, r7, pc}
   1341c:	ldr	r0, [r0, #12]
   13420:	bl	12774 <g_socket_connection_get_socket@plt>
   13424:	mov	r1, r7
   13428:	mov	r7, #1
   1342c:	bl	122ac <g_socket_close@plt>
   13430:	str	r7, [r4, #4]
   13434:	ldr	r0, [r5, #12]
   13438:	bl	12774 <g_socket_connection_get_socket@plt>
   1343c:	ldr	ip, [r5, #4]
   13440:	cmp	ip, #0
   13444:	bne	13498 <g_type_class_adjust_private_offset@plt+0xb08>
   13448:	ldr	r1, [r5, #68]	; 0x44
   1344c:	cmp	r1, #0
   13450:	beq	13490 <g_type_class_adjust_private_offset@plt+0xb00>
   13454:	mov	r1, r7
   13458:	mov	r2, ip
   1345c:	mov	r3, sp
   13460:	str	ip, [sp]
   13464:	bl	12570 <g_socket_shutdown@plt>
   13468:	cmp	r0, #0
   1346c:	bne	13404 <g_type_class_adjust_private_offset@plt+0xa74>
   13470:	ldr	r3, [sp]
   13474:	ldr	r2, [pc, #48]	; 134ac <g_type_class_adjust_private_offset@plt+0xb1c>
   13478:	mov	r1, #16
   1347c:	ldr	r3, [r3, #8]
   13480:	bl	12924 <g_log@plt>
   13484:	ldr	r0, [sp]
   13488:	bl	128a0 <g_error_free@plt>
   1348c:	b	13404 <g_type_class_adjust_private_offset@plt+0xa74>
   13490:	bl	122ac <g_socket_close@plt>
   13494:	str	r7, [r5, #4]
   13498:	ldr	r0, [r4, #8]
   1349c:	bl	123f0 <g_object_unref@plt>
   134a0:	b	13404 <g_type_class_adjust_private_offset@plt+0xa74>
   134a4:	bl	1275c <__stack_chk_fail@plt>
   134a8:	andeq	r8, r2, r0, ror ip
   134ac:	ldrdeq	r7, [r1], -r8
   134b0:	push	{r4, r5, r6, r7, r8, lr}
   134b4:	mov	r7, r0
   134b8:	mov	r0, #32
   134bc:	mov	r6, r1
   134c0:	mov	r5, r2
   134c4:	bl	127f8 <g_malloc0@plt>
   134c8:	mov	r4, r0
   134cc:	mov	r0, r7
   134d0:	bl	12420 <g_strdup@plt>
   134d4:	mov	r3, #3
   134d8:	str	r6, [r4, #4]
   134dc:	str	r5, [r4, #8]
   134e0:	str	r3, [r4, #12]
   134e4:	str	r0, [r4]
   134e8:	mov	r0, r4
   134ec:	pop	{r4, r5, r6, r7, r8, pc}
   134f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134f4:	mov	r8, r0
   134f8:	ldr	r4, [pc, #444]	; 136bc <g_type_class_adjust_private_offset@plt+0xd2c>
   134fc:	mov	r7, r1
   13500:	mov	r6, r2
   13504:	ldr	r5, [r4, #20]
   13508:	cmp	r5, #0
   1350c:	beq	13664 <g_type_class_adjust_private_offset@plt+0xcd4>
   13510:	cmp	r7, #0
   13514:	beq	135bc <g_type_class_adjust_private_offset@plt+0xc2c>
   13518:	ldrb	r3, [r7]
   1351c:	cmp	r3, #58	; 0x3a
   13520:	beq	135f0 <g_type_class_adjust_private_offset@plt+0xc60>
   13524:	mov	r0, r7
   13528:	bl	12420 <g_strdup@plt>
   1352c:	mov	r5, #0
   13530:	mov	r9, r5
   13534:	mov	sl, #1
   13538:	mov	r7, r0
   1353c:	ldr	r3, [r8, #12]
   13540:	mov	r1, r7
   13544:	ldr	r0, [r3, #44]	; 0x2c
   13548:	bl	127b0 <g_hash_table_lookup@plt>
   1354c:	subs	r4, r0, #0
   13550:	beq	1359c <g_type_class_adjust_private_offset@plt+0xc0c>
   13554:	cmp	sl, #0
   13558:	ldr	r3, [r4]
   1355c:	bne	1356c <g_type_class_adjust_private_offset@plt+0xbdc>
   13560:	ldr	r2, [r3, #4]
   13564:	cmp	r2, #0
   13568:	beq	13590 <g_type_class_adjust_private_offset@plt+0xc00>
   1356c:	mov	r1, r3
   13570:	ldr	r3, [r3, #8]
   13574:	cmp	r5, r3
   13578:	movcc	r5, r3
   1357c:	cmp	r6, #0
   13580:	beq	13590 <g_type_class_adjust_private_offset@plt+0xc00>
   13584:	ldr	r0, [r6]
   13588:	bl	126d8 <g_list_append@plt>
   1358c:	str	r0, [r6]
   13590:	ldr	r4, [r4, #4]
   13594:	cmp	r4, #0
   13598:	bne	13554 <g_type_class_adjust_private_offset@plt+0xbc4>
   1359c:	mov	r1, #46	; 0x2e
   135a0:	mov	r0, r7
   135a4:	bl	12498 <strrchr@plt>
   135a8:	cmp	r0, #0
   135ac:	beq	135e0 <g_type_class_adjust_private_offset@plt+0xc50>
   135b0:	strb	r9, [r0]
   135b4:	mov	sl, #0
   135b8:	b	1353c <g_type_class_adjust_private_offset@plt+0xbac>
   135bc:	cmp	r6, #0
   135c0:	moveq	r7, r6
   135c4:	moveq	r5, #2
   135c8:	beq	135e0 <g_type_class_adjust_private_offset@plt+0xc50>
   135cc:	ldr	r1, [r4, #24]
   135d0:	ldr	r0, [r6]
   135d4:	bl	126d8 <g_list_append@plt>
   135d8:	mov	r5, #2
   135dc:	str	r0, [r6]
   135e0:	mov	r0, r7
   135e4:	bl	12294 <g_free@plt>
   135e8:	mov	r0, r5
   135ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135f0:	mov	r1, r7
   135f4:	ldr	r0, [r8, #204]	; 0xcc
   135f8:	bl	127b0 <g_hash_table_lookup@plt>
   135fc:	cmp	r0, #0
   13600:	cmpne	r6, #0
   13604:	mov	r5, r0
   13608:	bne	136a4 <g_type_class_adjust_private_offset@plt+0xd14>
   1360c:	mov	r1, r7
   13610:	ldr	r0, [r8, #208]	; 0xd0
   13614:	bl	127b0 <g_hash_table_lookup@plt>
   13618:	subs	r7, r0, #0
   1361c:	beq	135e0 <g_type_class_adjust_private_offset@plt+0xc50>
   13620:	ldr	r4, [r7]
   13624:	mov	r2, r6
   13628:	mov	r1, r4
   1362c:	mov	r0, r8
   13630:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   13634:	cmp	r0, r5
   13638:	bcs	1364c <g_type_class_adjust_private_offset@plt+0xcbc>
   1363c:	ldr	r7, [r7, #4]
   13640:	cmp	r7, #0
   13644:	bne	13620 <g_type_class_adjust_private_offset@plt+0xc90>
   13648:	b	135e0 <g_type_class_adjust_private_offset@plt+0xc50>
   1364c:	mov	r1, r4
   13650:	mov	r2, r6
   13654:	mov	r0, r8
   13658:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   1365c:	mov	r5, r0
   13660:	b	1363c <g_type_class_adjust_private_offset@plt+0xcac>
   13664:	mov	r2, #1
   13668:	mov	r1, r5
   1366c:	ldr	r0, [pc, #76]	; 136c0 <g_type_class_adjust_private_offset@plt+0xd30>
   13670:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   13674:	mov	r2, #2
   13678:	mov	r1, r5
   1367c:	str	r0, [r4, #20]
   13680:	ldr	r0, [pc, #56]	; 136c0 <g_type_class_adjust_private_offset@plt+0xd30>
   13684:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   13688:	mov	r1, r5
   1368c:	mov	r2, #3
   13690:	str	r0, [r4, #24]
   13694:	ldr	r0, [pc, #36]	; 136c0 <g_type_class_adjust_private_offset@plt+0xd30>
   13698:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   1369c:	str	r0, [r4, #28]
   136a0:	b	13510 <g_type_class_adjust_private_offset@plt+0xb80>
   136a4:	add	r4, r4, r0, lsl #2
   136a8:	ldr	r0, [r6]
   136ac:	ldr	r1, [r4, #16]
   136b0:	bl	126d8 <g_list_append@plt>
   136b4:	str	r0, [r6]
   136b8:	b	1360c <g_type_class_adjust_private_offset@plt+0xc7c>
   136bc:	andeq	r9, r2, r0, lsr #32
   136c0:	andeq	r7, r1, r8, asr #23
   136c4:	ldr	ip, [r0, #8]
   136c8:	cmp	ip, #1
   136cc:	bls	1377c <g_type_class_adjust_private_offset@plt+0xdec>
   136d0:	ldr	ip, [r0, #12]
   136d4:	tst	r1, ip
   136d8:	beq	1377c <g_type_class_adjust_private_offset@plt+0xdec>
   136dc:	push	{r4, r5, r6, r7, r8, lr}
   136e0:	mov	r6, r3
   136e4:	ldr	r7, [r0, #16]
   136e8:	mov	r5, r2
   136ec:	cmp	r7, #0
   136f0:	mov	r4, r0
   136f4:	beq	13740 <g_type_class_adjust_private_offset@plt+0xdb0>
   136f8:	cmp	r2, #0
   136fc:	beq	13798 <g_type_class_adjust_private_offset@plt+0xe08>
   13700:	ldr	r3, [r0, #20]
   13704:	cmp	r3, #0
   13708:	beq	13784 <g_type_class_adjust_private_offset@plt+0xdf4>
   1370c:	mov	r0, r7
   13710:	bl	12600 <strlen@plt>
   13714:	mov	r1, r7
   13718:	mov	r2, r0
   1371c:	mov	r8, r0
   13720:	mov	r0, r5
   13724:	bl	128dc <strncmp@plt>
   13728:	cmp	r0, #0
   1372c:	bne	13798 <g_type_class_adjust_private_offset@plt+0xe08>
   13730:	ldrb	r3, [r5, r8]
   13734:	cmp	r3, #0
   13738:	cmpne	r3, #47	; 0x2f
   1373c:	bne	13798 <g_type_class_adjust_private_offset@plt+0xe08>
   13740:	ldr	r0, [r4, #24]
   13744:	cmp	r0, #0
   13748:	beq	1375c <g_type_class_adjust_private_offset@plt+0xdcc>
   1374c:	mov	r1, r6
   13750:	bl	12408 <g_strcmp0@plt>
   13754:	cmp	r0, #0
   13758:	bne	13798 <g_type_class_adjust_private_offset@plt+0xe08>
   1375c:	ldr	r0, [r4, #28]
   13760:	cmp	r0, #0
   13764:	beq	137a0 <g_type_class_adjust_private_offset@plt+0xe10>
   13768:	ldr	r1, [sp, #24]
   1376c:	bl	12408 <g_strcmp0@plt>
   13770:	clz	r0, r0
   13774:	lsr	r0, r0, #5
   13778:	pop	{r4, r5, r6, r7, r8, pc}
   1377c:	mov	r0, #0
   13780:	bx	lr
   13784:	mov	r1, r2
   13788:	mov	r0, r7
   1378c:	bl	1293c <strcmp@plt>
   13790:	cmp	r0, #0
   13794:	beq	13740 <g_type_class_adjust_private_offset@plt+0xdb0>
   13798:	mov	r0, #0
   1379c:	pop	{r4, r5, r6, r7, r8, pc}
   137a0:	mov	r0, #1
   137a4:	pop	{r4, r5, r6, r7, r8, pc}
   137a8:	push	{r4, r5, r6, r7, lr}
   137ac:	mov	r3, #0
   137b0:	ldr	r5, [pc, #116]	; 1382c <g_type_class_adjust_private_offset@plt+0xe9c>
   137b4:	sub	sp, sp, #12
   137b8:	mov	r2, r3
   137bc:	ldr	ip, [r5]
   137c0:	mov	r1, sp
   137c4:	str	ip, [sp, #4]
   137c8:	bl	123c0 <g_dbus_message_to_blob@plt>
   137cc:	ldr	r7, [sp]
   137d0:	mov	r6, r0
   137d4:	add	r0, r7, #20
   137d8:	bl	127f8 <g_malloc0@plt>
   137dc:	mov	r2, #0
   137e0:	mov	r3, #1
   137e4:	mov	r1, r6
   137e8:	mov	r4, r0
   137ec:	str	r7, [r0]
   137f0:	str	r2, [r4, #16]
   137f4:	add	r0, r0, #20
   137f8:	ldr	r2, [sp]
   137fc:	str	r3, [r4, #8]
   13800:	bl	12630 <memcpy@plt>
   13804:	mov	r0, r6
   13808:	bl	12294 <g_free@plt>
   1380c:	ldr	r2, [sp, #4]
   13810:	ldr	r3, [r5]
   13814:	cmp	r2, r3
   13818:	bne	13828 <g_type_class_adjust_private_offset@plt+0xe98>
   1381c:	mov	r0, r4
   13820:	add	sp, sp, #12
   13824:	pop	{r4, r5, r6, r7, pc}
   13828:	bl	1275c <__stack_chk_fail@plt>
   1382c:	andeq	r8, r2, r0, ror ip
   13830:	push	{r4, r5, r6, r7, r8, lr}
   13834:	mov	r5, r1
   13838:	ldr	r3, [r0, #184]	; 0xb8
   1383c:	ldr	r1, [r0, #192]	; 0xc0
   13840:	add	r3, r3, #1
   13844:	add	r1, r1, #1
   13848:	mov	r4, r0
   1384c:	str	r3, [r0, #184]	; 0xb8
   13850:	str	r1, [r0, #192]	; 0xc0
   13854:	mov	r0, r5
   13858:	mov	r6, r2
   1385c:	bl	12930 <g_dbus_message_set_serial@plt>
   13860:	mov	r0, r5
   13864:	bl	137a8 <g_type_class_adjust_private_offset@plt+0xe18>
   13868:	mov	r7, r0
   1386c:	mov	r0, r5
   13870:	bl	123f0 <g_object_unref@plt>
   13874:	mov	r1, r7
   13878:	add	r0, r4, #104	; 0x68
   1387c:	bl	13358 <g_type_class_adjust_private_offset@plt+0x9c8>
   13880:	mov	r2, r6
   13884:	ldr	r1, [r4, #192]	; 0xc0
   13888:	ldr	r0, [r4, #100]	; 0x64
   1388c:	pop	{r4, r5, r6, r7, r8, lr}
   13890:	b	12738 <g_hash_table_replace@plt>
   13894:	mov	ip, r1
   13898:	push	{r4, r5, r6, r7, r8, lr}
   1389c:	mov	r5, r3
   138a0:	ldr	r1, [ip], #20
   138a4:	mov	r3, #0
   138a8:	mov	r6, r0
   138ac:	mov	r7, r2
   138b0:	mov	r0, ip
   138b4:	mov	r2, r3
   138b8:	bl	12660 <g_dbus_message_new_from_blob@plt>
   138bc:	cmp	r5, #0
   138c0:	movne	r3, #0
   138c4:	strne	r3, [r5]
   138c8:	cmp	r0, #0
   138cc:	mov	r4, r0
   138d0:	beq	13958 <g_type_class_adjust_private_offset@plt+0xfc8>
   138d4:	bl	122c4 <g_dbus_message_get_body@plt>
   138d8:	cmp	r0, #0
   138dc:	beq	13958 <g_type_class_adjust_private_offset@plt+0xfc8>
   138e0:	mov	r1, #0
   138e4:	bl	12504 <g_variant_get_child_value@plt>
   138e8:	subs	r8, r0, #0
   138ec:	beq	13958 <g_type_class_adjust_private_offset@plt+0xfc8>
   138f0:	ldr	r1, [pc, #116]	; 1396c <g_type_class_adjust_private_offset@plt+0xfdc>
   138f4:	bl	12318 <g_variant_is_of_type@plt>
   138f8:	cmp	r0, #0
   138fc:	beq	13958 <g_type_class_adjust_private_offset@plt+0xfc8>
   13900:	mov	r0, r8
   13904:	mov	r1, #0
   13908:	bl	12984 <g_variant_get_string@plt>
   1390c:	mov	r2, #0
   13910:	mov	r1, r0
   13914:	mov	r8, r0
   13918:	mov	r0, r6
   1391c:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   13920:	cmp	r5, #0
   13924:	strne	r0, [r5]
   13928:	cmp	r7, r0
   1392c:	movls	r5, #1
   13930:	bls	1395c <g_type_class_adjust_private_offset@plt+0xfcc>
   13934:	ldr	r3, [r6, #12]
   13938:	ldr	r3, [r3, #20]
   1393c:	cmp	r3, #0
   13940:	beq	13958 <g_type_class_adjust_private_offset@plt+0xfc8>
   13944:	mov	r2, r0
   13948:	mov	r3, r7
   1394c:	mov	r1, r8
   13950:	ldr	r0, [pc, #24]	; 13970 <g_type_class_adjust_private_offset@plt+0xfe0>
   13954:	bl	123a8 <g_print@plt>
   13958:	mov	r5, #0
   1395c:	mov	r0, r4
   13960:	bl	123f0 <g_object_unref@plt>
   13964:	mov	r0, r5
   13968:	pop	{r4, r5, r6, r7, r8, pc}
   1396c:	andeq	r7, r1, r0, lsr fp
   13970:	strdeq	r7, [r1], -ip
   13974:	mov	r3, #0
   13978:	push	{r4, r5, r6, lr}
   1397c:	mov	r2, r3
   13980:	ldr	r1, [r0], #20
   13984:	bl	12660 <g_dbus_message_new_from_blob@plt>
   13988:	subs	r5, r0, #0
   1398c:	beq	139e4 <g_type_class_adjust_private_offset@plt+0x1054>
   13990:	bl	122c4 <g_dbus_message_get_body@plt>
   13994:	subs	r4, r0, #0
   13998:	beq	139f4 <g_type_class_adjust_private_offset@plt+0x1064>
   1399c:	mov	r1, #0
   139a0:	bl	12504 <g_variant_get_child_value@plt>
   139a4:	subs	r6, r0, #0
   139a8:	beq	13a04 <g_type_class_adjust_private_offset@plt+0x1074>
   139ac:	ldr	r1, [pc, #96]	; 13a14 <g_type_class_adjust_private_offset@plt+0x1084>
   139b0:	bl	12318 <g_variant_is_of_type@plt>
   139b4:	subs	r4, r0, #0
   139b8:	beq	139cc <g_type_class_adjust_private_offset@plt+0x103c>
   139bc:	mov	r1, #0
   139c0:	mov	r0, r6
   139c4:	bl	122a0 <g_variant_dup_string@plt>
   139c8:	mov	r4, r0
   139cc:	mov	r0, r5
   139d0:	bl	123f0 <g_object_unref@plt>
   139d4:	mov	r0, r6
   139d8:	bl	1278c <g_variant_unref@plt>
   139dc:	mov	r0, r4
   139e0:	pop	{r4, r5, r6, pc}
   139e4:	mov	r4, r5
   139e8:	bl	123f0 <g_object_unref@plt>
   139ec:	mov	r0, r4
   139f0:	pop	{r4, r5, r6, pc}
   139f4:	mov	r0, r5
   139f8:	bl	123f0 <g_object_unref@plt>
   139fc:	mov	r0, r4
   13a00:	pop	{r4, r5, r6, pc}
   13a04:	mov	r0, r5
   13a08:	bl	123f0 <g_object_unref@plt>
   13a0c:	mov	r4, r6
   13a10:	b	139dc <g_type_class_adjust_private_offset@plt+0x104c>
   13a14:	andeq	r7, r1, r0, lsr fp
   13a18:	push	{r4, r5, r6, r7, r8, r9, lr}
   13a1c:	mov	ip, #0
   13a20:	ldr	r4, [pc, #140]	; 13ab4 <g_type_class_adjust_private_offset@plt+0x1124>
   13a24:	sub	sp, sp, #12
   13a28:	mov	r3, sp
   13a2c:	ldr	lr, [r4]
   13a30:	mov	r8, r2
   13a34:	mov	r5, r0
   13a38:	mov	r2, ip
   13a3c:	ldr	r0, [r0, #208]	; 0xd0
   13a40:	str	lr, [sp, #4]
   13a44:	str	ip, [sp]
   13a48:	mov	r9, r1
   13a4c:	bl	123fc <g_hash_table_lookup_extended@plt>
   13a50:	ldr	r7, [sp]
   13a54:	mov	r6, r0
   13a58:	mov	r0, r8
   13a5c:	bl	12420 <g_strdup@plt>
   13a60:	mov	r1, r0
   13a64:	mov	r0, r7
   13a68:	bl	126d8 <g_list_append@plt>
   13a6c:	cmp	r6, #0
   13a70:	str	r0, [sp]
   13a74:	beq	13a90 <g_type_class_adjust_private_offset@plt+0x1100>
   13a78:	ldr	r2, [sp, #4]
   13a7c:	ldr	r3, [r4]
   13a80:	cmp	r2, r3
   13a84:	bne	13ab0 <g_type_class_adjust_private_offset@plt+0x1120>
   13a88:	add	sp, sp, #12
   13a8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a90:	mov	r0, r9
   13a94:	ldr	r5, [r5, #208]	; 0xd0
   13a98:	bl	12420 <g_strdup@plt>
   13a9c:	ldr	r2, [sp]
   13aa0:	mov	r1, r0
   13aa4:	mov	r0, r5
   13aa8:	bl	12438 <g_hash_table_insert@plt>
   13aac:	b	13a78 <g_type_class_adjust_private_offset@plt+0x10e8>
   13ab0:	bl	1275c <__stack_chk_fail@plt>
   13ab4:	andeq	r8, r2, r0, ror ip
   13ab8:	push	{r4, lr}
   13abc:	mov	r4, r0
   13ac0:	ldr	r0, [r0, #12]
   13ac4:	mov	r3, #0
   13ac8:	cmp	r0, r3
   13acc:	str	r3, [r4, #12]
   13ad0:	beq	13ad8 <g_type_class_adjust_private_offset@plt+0x1148>
   13ad4:	bl	123f0 <g_object_unref@plt>
   13ad8:	ldr	r0, [r4, #24]
   13adc:	mov	r3, #0
   13ae0:	cmp	r0, r3
   13ae4:	str	r3, [r4, #24]
   13ae8:	beq	13af0 <g_type_class_adjust_private_offset@plt+0x1160>
   13aec:	bl	127e0 <g_bytes_unref@plt>
   13af0:	ldr	r1, [pc, #60]	; 13b34 <g_type_class_adjust_private_offset@plt+0x11a4>
   13af4:	ldr	r0, [r4, #68]	; 0x44
   13af8:	bl	12468 <g_list_free_full@plt>
   13afc:	ldr	r0, [r4, #72]	; 0x48
   13b00:	ldr	r1, [pc, #48]	; 13b38 <g_type_class_adjust_private_offset@plt+0x11a8>
   13b04:	bl	12468 <g_list_free_full@plt>
   13b08:	ldr	r0, [r4, #16]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b18 <g_type_class_adjust_private_offset@plt+0x1188>
   13b14:	bl	12840 <g_source_destroy@plt>
   13b18:	ldr	r0, [r4, #20]
   13b1c:	cmp	r0, #0
   13b20:	beq	13b28 <g_type_class_adjust_private_offset@plt+0x1198>
   13b24:	bl	12840 <g_source_destroy@plt>
   13b28:	ldr	r0, [r4, #76]	; 0x4c
   13b2c:	pop	{r4, lr}
   13b30:	b	12354 <g_hash_table_destroy@plt>
   13b34:	ldrdeq	r3, [r1], -r0
   13b38:	strdeq	r2, [r1], -r0
   13b3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b40:	mov	r4, r0
   13b44:	ldr	r7, [pc, #212]	; 13c20 <g_type_class_adjust_private_offset@plt+0x1290>
   13b48:	ldr	r6, [pc, #212]	; 13c24 <g_type_class_adjust_private_offset@plt+0x1294>
   13b4c:	mov	r5, #0
   13b50:	add	r3, r0, #56	; 0x38
   13b54:	mov	r8, #16
   13b58:	str	r0, [r4, #32]
   13b5c:	mov	r1, r7
   13b60:	str	r3, [r0, #52]	; 0x34
   13b64:	str	r8, [r0, #56]	; 0x38
   13b68:	str	r5, [r0, #24]
   13b6c:	str	r5, [r0, #60]	; 0x3c
   13b70:	mov	r0, r6
   13b74:	bl	125ac <g_hash_table_new@plt>
   13b78:	mov	r2, #1
   13b7c:	add	r3, r4, #136	; 0x88
   13b80:	str	r2, [r4, #104]	; 0x68
   13b84:	str	r3, [r4, #132]	; 0x84
   13b88:	mov	r1, r7
   13b8c:	str	r8, [r4, #136]	; 0x88
   13b90:	str	r4, [r4, #112]	; 0x70
   13b94:	str	r5, [r4, #140]	; 0x8c
   13b98:	ldr	r8, [pc, #136]	; 13c28 <g_type_class_adjust_private_offset@plt+0x1298>
   13b9c:	ldr	sl, [pc, #136]	; 13c2c <g_type_class_adjust_private_offset@plt+0x129c>
   13ba0:	ldr	r9, [pc, #136]	; 13c30 <g_type_class_adjust_private_offset@plt+0x12a0>
   13ba4:	str	r0, [r4, #100]	; 0x64
   13ba8:	mov	r0, r6
   13bac:	bl	125ac <g_hash_table_new@plt>
   13bb0:	str	r0, [r4, #180]	; 0xb4
   13bb4:	bl	12324 <g_byte_array_new@plt>
   13bb8:	mov	r2, r5
   13bbc:	mov	r1, r7
   13bc0:	ldr	r3, [pc, #108]	; 13c34 <g_type_class_adjust_private_offset@plt+0x12a4>
   13bc4:	str	r0, [r4, #20]
   13bc8:	mov	r0, r6
   13bcc:	bl	125d0 <g_hash_table_new_full@plt>
   13bd0:	mov	r1, r7
   13bd4:	mov	r2, r5
   13bd8:	mov	r3, r8
   13bdc:	str	r0, [r4, #196]	; 0xc4
   13be0:	mov	r0, r6
   13be4:	bl	125d0 <g_hash_table_new_full@plt>
   13be8:	mov	r3, r5
   13bec:	mov	r2, r8
   13bf0:	mov	r1, sl
   13bf4:	str	r0, [r4, #200]	; 0xc8
   13bf8:	mov	r0, r9
   13bfc:	bl	125d0 <g_hash_table_new_full@plt>
   13c00:	mov	r2, r8
   13c04:	mov	r1, sl
   13c08:	ldr	r3, [pc, #40]	; 13c38 <g_type_class_adjust_private_offset@plt+0x12a8>
   13c0c:	str	r0, [r4, #204]	; 0xcc
   13c10:	mov	r0, r9
   13c14:	bl	125d0 <g_hash_table_new_full@plt>
   13c18:	str	r0, [r4, #208]	; 0xd0
   13c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c20:	strdeq	r2, [r1], -r4
   13c24:	andeq	r2, r1, r8, asr #15
   13c28:	muleq	r1, r4, r2
   13c2c:	andeq	r2, r1, r8, asr #18
   13c30:	andeq	r2, r1, ip, ror #6
   13c34:	strdeq	r2, [r1], -r0
   13c38:	andeq	r3, r1, r0, lsl r1
   13c3c:	push	{r4, r5, r6, r7, r8, lr}
   13c40:	mov	r6, r2
   13c44:	mov	r2, #2
   13c48:	mov	r4, r3
   13c4c:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   13c50:	mov	r1, #64	; 0x40
   13c54:	str	r6, [r0, #12]
   13c58:	mov	r5, r0
   13c5c:	mov	r0, r4
   13c60:	bl	1242c <strchr@plt>
   13c64:	subs	r6, r0, #0
   13c68:	beq	13d20 <g_type_class_adjust_private_offset@plt+0x1390>
   13c6c:	ldrb	r3, [r6, #1]
   13c70:	cmp	r3, #0
   13c74:	bne	13ce0 <g_type_class_adjust_private_offset@plt+0x1350>
   13c78:	cmp	r6, r4
   13c7c:	beq	13c8c <g_type_class_adjust_private_offset@plt+0x12fc>
   13c80:	ldrb	r3, [r4]
   13c84:	cmp	r3, #42	; 0x2a
   13c88:	bne	13c94 <g_type_class_adjust_private_offset@plt+0x1304>
   13c8c:	mov	r0, r5
   13c90:	pop	{r4, r5, r6, r7, r8, pc}
   13c94:	sub	r1, r6, r4
   13c98:	mov	r0, r4
   13c9c:	bl	124bc <g_strndup@plt>
   13ca0:	mov	r1, #46	; 0x2e
   13ca4:	str	r0, [r5, #24]
   13ca8:	bl	12498 <strrchr@plt>
   13cac:	subs	r4, r0, #0
   13cb0:	beq	13c8c <g_type_class_adjust_private_offset@plt+0x12fc>
   13cb4:	mov	r3, #0
   13cb8:	strb	r3, [r4], #1
   13cbc:	ldr	r1, [pc, #108]	; 13d30 <g_type_class_adjust_private_offset@plt+0x13a0>
   13cc0:	mov	r0, r4
   13cc4:	bl	1293c <strcmp@plt>
   13cc8:	cmp	r0, #0
   13ccc:	beq	13c8c <g_type_class_adjust_private_offset@plt+0x12fc>
   13cd0:	mov	r0, r4
   13cd4:	bl	12420 <g_strdup@plt>
   13cd8:	str	r0, [r5, #28]
   13cdc:	b	13c8c <g_type_class_adjust_private_offset@plt+0x12fc>
   13ce0:	add	r0, r6, #1
   13ce4:	bl	12420 <g_strdup@plt>
   13ce8:	ldr	r1, [pc, #68]	; 13d34 <g_type_class_adjust_private_offset@plt+0x13a4>
   13cec:	str	r0, [r5, #16]
   13cf0:	bl	128ac <g_str_has_suffix@plt>
   13cf4:	cmp	r0, #0
   13cf8:	beq	13c78 <g_type_class_adjust_private_offset@plt+0x12e8>
   13cfc:	ldr	r7, [r5, #16]
   13d00:	mov	r3, #1
   13d04:	str	r3, [r5, #20]
   13d08:	mov	r0, r7
   13d0c:	bl	12600 <strlen@plt>
   13d10:	mov	r3, #0
   13d14:	add	r0, r7, r0
   13d18:	strb	r3, [r0, #-2]
   13d1c:	b	13c78 <g_type_class_adjust_private_offset@plt+0x12e8>
   13d20:	mov	r0, r4
   13d24:	bl	12600 <strlen@plt>
   13d28:	add	r6, r4, r0
   13d2c:	b	13c78 <g_type_class_adjust_private_offset@plt+0x12e8>
   13d30:	andeq	r7, r1, ip, lsr r3
   13d34:	andeq	r7, r1, r8, lsr r3
   13d38:	ldr	r0, [r0]
   13d3c:	rev	r0, r0
   13d40:	bx	lr
   13d44:	ldr	ip, [r2]
   13d48:	push	{r4, r5, r6, lr}
   13d4c:	add	ip, ip, #3
   13d50:	bic	r4, ip, #3
   13d54:	add	r6, r4, #4
   13d58:	cmp	r6, r3
   13d5c:	str	r4, [r2]
   13d60:	bcs	13dbc <g_type_class_adjust_private_offset@plt+0x142c>
   13d64:	mov	r5, r0
   13d68:	ldr	r0, [r1, #4]
   13d6c:	add	r1, r4, #20
   13d70:	cmp	r0, #0
   13d74:	add	r0, r5, r1
   13d78:	bne	13db4 <g_type_class_adjust_private_offset@plt+0x1424>
   13d7c:	ldr	r0, [r5, r1]
   13d80:	uxtab	r0, r6, r0
   13d84:	add	r1, r0, #1
   13d88:	cmp	r1, r3
   13d8c:	str	r6, [r2]
   13d90:	bhi	13dbc <g_type_class_adjust_private_offset@plt+0x142c>
   13d94:	add	r0, r5, r0
   13d98:	ldrb	r3, [r0, #20]
   13d9c:	cmp	r3, #0
   13da0:	bne	13dbc <g_type_class_adjust_private_offset@plt+0x142c>
   13da4:	add	r4, r4, #24
   13da8:	add	r0, r5, r4
   13dac:	str	r1, [r2]
   13db0:	pop	{r4, r5, r6, pc}
   13db4:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   13db8:	b	13d80 <g_type_class_adjust_private_offset@plt+0x13f0>
   13dbc:	mov	r0, #0
   13dc0:	pop	{r4, r5, r6, pc}
   13dc4:	rev	r1, r1
   13dc8:	str	r1, [r0]
   13dcc:	bx	lr
   13dd0:	ldr	r3, [r0, #8]
   13dd4:	push	{r4, lr}
   13dd8:	cmp	r3, #0
   13ddc:	sub	sp, sp, #8
   13de0:	ble	13e00 <g_type_class_adjust_private_offset@plt+0x1470>
   13de4:	sub	r3, r3, #1
   13de8:	cmp	r3, #0
   13dec:	mov	r4, r0
   13df0:	str	r3, [r0, #8]
   13df4:	beq	13e1c <g_type_class_adjust_private_offset@plt+0x148c>
   13df8:	add	sp, sp, #8
   13dfc:	pop	{r4, pc}
   13e00:	ldr	r2, [pc, #48]	; 13e38 <g_type_class_adjust_private_offset@plt+0x14a8>
   13e04:	ldr	r3, [pc, #48]	; 13e3c <g_type_class_adjust_private_offset@plt+0x14ac>
   13e08:	str	r2, [sp]
   13e0c:	ldr	r1, [pc, #44]	; 13e40 <g_type_class_adjust_private_offset@plt+0x14b0>
   13e10:	ldr	r2, [pc, #44]	; 13e44 <g_type_class_adjust_private_offset@plt+0x14b4>
   13e14:	mov	r0, #0
   13e18:	bl	124f8 <g_assertion_message_expr@plt>
   13e1c:	ldr	r1, [pc, #36]	; 13e48 <g_type_class_adjust_private_offset@plt+0x14b8>
   13e20:	ldr	r0, [r0, #16]
   13e24:	bl	12468 <g_list_free_full@plt>
   13e28:	mov	r0, r4
   13e2c:	add	sp, sp, #8
   13e30:	pop	{r4, lr}
   13e34:	b	12294 <g_free@plt>
   13e38:	andeq	r7, r1, r0, asr r3
   13e3c:	strdeq	r7, [r1], -r0
   13e40:	andeq	r7, r1, r0, asr #6
   13e44:	andeq	r0, r0, r9, ror #2
   13e48:	strdeq	r2, [r1], -r0
   13e4c:	push	{r4, lr}
   13e50:	mov	r4, r0
   13e54:	ldr	r0, [r0]
   13e58:	cmp	r0, #0
   13e5c:	beq	13e64 <g_type_class_adjust_private_offset@plt+0x14d4>
   13e60:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   13e64:	mov	r0, r4
   13e68:	pop	{r4, lr}
   13e6c:	b	12294 <g_free@plt>
   13e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e74:	mov	r4, r0
   13e78:	ldr	r7, [pc, #1384]	; 143e8 <g_type_class_adjust_private_offset@plt+0x1a58>
   13e7c:	sub	sp, sp, #36	; 0x24
   13e80:	mov	r0, #60	; 0x3c
   13e84:	ldr	ip, [r7]
   13e88:	mov	sl, r3
   13e8c:	mov	r8, r1
   13e90:	mov	r9, r2
   13e94:	str	ip, [sp, #28]
   13e98:	bl	127f8 <g_malloc0@plt>
   13e9c:	ldr	r3, [r4, #8]
   13ea0:	cmp	r3, #0
   13ea4:	ble	14078 <g_type_class_adjust_private_offset@plt+0x16e8>
   13ea8:	ldr	r2, [r4]
   13eac:	add	r3, r3, #1
   13eb0:	cmp	r2, #15
   13eb4:	mov	r5, r0
   13eb8:	str	r3, [r4, #8]
   13ebc:	str	r4, [r0]
   13ec0:	bls	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13ec4:	ldrb	r3, [r4, #23]
   13ec8:	cmp	r3, #1
   13ecc:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13ed0:	ldrb	r1, [r4, #20]
   13ed4:	cmp	r1, #66	; 0x42
   13ed8:	beq	1400c <g_type_class_adjust_private_offset@plt+0x167c>
   13edc:	cmp	r1, #108	; 0x6c
   13ee0:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13ee4:	ldrb	r1, [r4, #22]
   13ee8:	ldr	r3, [r4, #28]
   13eec:	ldrb	r0, [r4, #21]
   13ef0:	cmp	r3, #0
   13ef4:	strb	r1, [r5, #9]
   13ef8:	ldr	r1, [r4, #24]
   13efc:	str	r3, [r5, #16]
   13f00:	mov	r3, #0
   13f04:	strb	r0, [r5, #8]
   13f08:	str	r1, [r5, #12]
   13f0c:	str	r3, [r5, #4]
   13f10:	add	fp, r4, #28
   13f14:	ldrne	r0, [r4, #32]
   13f18:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13f1c:	add	r3, r0, #23
   13f20:	bic	r3, r3, #7
   13f24:	cmp	r2, r3
   13f28:	bcc	1405c <g_type_class_adjust_private_offset@plt+0x16cc>
   13f2c:	mov	r1, #16
   13f30:	add	r6, r0, r1
   13f34:	mov	r3, #0
   13f38:	str	r1, [sp, #24]
   13f3c:	str	r3, [sp, #12]
   13f40:	cmp	r6, r1
   13f44:	bls	142c8 <g_type_class_adjust_private_offset@plt+0x1938>
   13f48:	add	r0, r1, #7
   13f4c:	bic	r0, r0, #7
   13f50:	cmp	r6, r0
   13f54:	bls	13fe0 <g_type_class_adjust_private_offset@plt+0x1650>
   13f58:	add	r3, r0, #1
   13f5c:	add	r2, r4, r0
   13f60:	cmp	r6, r3
   13f64:	str	r3, [sp, #24]
   13f68:	ldrb	r1, [r2, #20]
   13f6c:	bls	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13f70:	add	r2, r4, r3
   13f74:	add	r3, r0, #2
   13f78:	ldrb	r2, [r2, #20]
   13f7c:	str	r3, [sp, #24]
   13f80:	add	r3, r2, r3
   13f84:	add	r2, r3, #1
   13f88:	cmp	r6, r2
   13f8c:	bcc	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13f90:	add	ip, r4, r3
   13f94:	ldrb	ip, [ip, #20]
   13f98:	cmp	ip, #0
   13f9c:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13fa0:	add	r0, r0, #22
   13fa4:	sub	r1, r1, #1
   13fa8:	add	r0, r4, r0
   13fac:	str	r2, [sp, #24]
   13fb0:	cmp	r1, #8
   13fb4:	ldrls	pc, [pc, r1, lsl #2]
   13fb8:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   13fbc:	ldrdeq	r4, [r1], -r0
   13fc0:	andeq	r4, r1, r8, ror #2
   13fc4:	muleq	r1, ip, r1
   13fc8:	andeq	r4, r1, r0, lsr r1
   13fcc:	andeq	r4, r1, ip, ror #4
   13fd0:	andeq	r4, r1, r4, lsl #4
   13fd4:	andeq	r4, r1, r8, lsr r2
   13fd8:	muleq	r1, r4, r0
   13fdc:	andeq	r4, r1, r0, lsl #2
   13fe0:	str	r0, [sp, #24]
   13fe4:	mov	r0, r5
   13fe8:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   13fec:	mov	r5, #0
   13ff0:	ldr	r2, [sp, #28]
   13ff4:	ldr	r3, [r7]
   13ff8:	mov	r0, r5
   13ffc:	cmp	r2, r3
   14000:	bne	143e4 <g_type_class_adjust_private_offset@plt+0x1a54>
   14004:	add	sp, sp, #36	; 0x24
   14008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1400c:	ldrb	r1, [r4, #22]
   14010:	ldrb	r0, [r4, #21]
   14014:	str	r3, [r5, #4]
   14018:	strb	r1, [r5, #9]
   1401c:	strb	r0, [r5, #8]
   14020:	add	r0, r4, #24
   14024:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   14028:	add	fp, r4, #28
   1402c:	str	r0, [r5, #12]
   14030:	mov	r0, fp
   14034:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   14038:	cmp	r0, #0
   1403c:	str	r0, [r5, #16]
   14040:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14044:	add	r0, r4, #32
   14048:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   1404c:	add	r3, r0, #23
   14050:	bic	r3, r3, #7
   14054:	cmp	r2, r3
   14058:	bcs	13f2c <g_type_class_adjust_private_offset@plt+0x159c>
   1405c:	ldr	r2, [pc, #904]	; 143ec <g_type_class_adjust_private_offset@plt+0x1a5c>
   14060:	ldr	r3, [pc, #904]	; 143f0 <g_type_class_adjust_private_offset@plt+0x1a60>
   14064:	str	r2, [sp]
   14068:	ldr	r1, [pc, #900]	; 143f4 <g_type_class_adjust_private_offset@plt+0x1a64>
   1406c:	mov	r2, #1168	; 0x490
   14070:	mov	r0, #0
   14074:	bl	124f8 <g_assertion_message_expr@plt>
   14078:	ldr	r2, [pc, #888]	; 143f8 <g_type_class_adjust_private_offset@plt+0x1a68>
   1407c:	ldr	r3, [pc, #888]	; 143fc <g_type_class_adjust_private_offset@plt+0x1a6c>
   14080:	str	r2, [sp]
   14084:	ldr	r1, [pc, #872]	; 143f4 <g_type_class_adjust_private_offset@plt+0x1a64>
   14088:	ldr	r2, [pc, #880]	; 14400 <g_type_class_adjust_private_offset@plt+0x1a70>
   1408c:	mov	r0, #0
   14090:	bl	124f8 <g_assertion_message_expr@plt>
   14094:	ldr	r1, [pc, #872]	; 14404 <g_type_class_adjust_private_offset@plt+0x1a74>
   14098:	str	r2, [sp, #20]
   1409c:	str	r3, [sp, #16]
   140a0:	bl	1293c <strcmp@plt>
   140a4:	cmp	r0, #0
   140a8:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   140ac:	ldr	r2, [sp, #20]
   140b0:	ldr	r3, [sp, #16]
   140b4:	cmp	r6, r2
   140b8:	beq	142c0 <g_type_class_adjust_private_offset@plt+0x1930>
   140bc:	add	r2, r4, r2
   140c0:	add	ip, r3, #2
   140c4:	ldrb	r1, [r2, #20]
   140c8:	str	ip, [sp, #24]
   140cc:	add	r2, r1, ip
   140d0:	add	r1, r2, #1
   140d4:	cmp	r6, r1
   140d8:	bcc	142c0 <g_type_class_adjust_private_offset@plt+0x1930>
   140dc:	add	r2, r4, r2
   140e0:	ldrb	r2, [r2, #20]
   140e4:	cmp	r2, #0
   140e8:	bne	142c0 <g_type_class_adjust_private_offset@plt+0x1930>
   140ec:	add	r3, r3, #22
   140f0:	add	r3, r4, r3
   140f4:	str	r3, [r5, #44]	; 0x2c
   140f8:	str	r1, [sp, #24]
   140fc:	b	13f40 <g_type_class_adjust_private_offset@plt+0x15b0>
   14100:	add	r1, r3, #5
   14104:	cmp	r6, r1
   14108:	bcc	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   1410c:	ldr	r2, [r5, #4]
   14110:	add	r3, r3, #21
   14114:	cmp	r2, #0
   14118:	add	r0, r4, r3
   1411c:	beq	142b0 <g_type_class_adjust_private_offset@plt+0x1920>
   14120:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   14124:	str	r0, [r5, #56]	; 0x38
   14128:	str	r1, [sp, #24]
   1412c:	b	13f40 <g_type_class_adjust_private_offset@plt+0x15b0>
   14130:	ldr	r1, [pc, #720]	; 14408 <g_type_class_adjust_private_offset@plt+0x1a78>
   14134:	bl	1293c <strcmp@plt>
   14138:	cmp	r0, #0
   1413c:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14140:	mov	r3, r6
   14144:	add	r2, sp, #24
   14148:	mov	r1, r5
   1414c:	mov	r0, r4
   14150:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   14154:	cmp	r0, #0
   14158:	str	r0, [r5, #32]
   1415c:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14160:	ldr	r1, [sp, #24]
   14164:	b	13f40 <g_type_class_adjust_private_offset@plt+0x15b0>
   14168:	ldr	r1, [pc, #664]	; 14408 <g_type_class_adjust_private_offset@plt+0x1a78>
   1416c:	bl	1293c <strcmp@plt>
   14170:	cmp	r0, #0
   14174:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14178:	mov	r3, r6
   1417c:	add	r2, sp, #24
   14180:	mov	r1, r5
   14184:	mov	r0, r4
   14188:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   1418c:	cmp	r0, #0
   14190:	str	r0, [r5, #24]
   14194:	bne	14160 <g_type_class_adjust_private_offset@plt+0x17d0>
   14198:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   1419c:	ldr	r1, [pc, #612]	; 14408 <g_type_class_adjust_private_offset@plt+0x1a78>
   141a0:	bl	1293c <strcmp@plt>
   141a4:	cmp	r0, #0
   141a8:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   141ac:	mov	r3, r6
   141b0:	add	r2, sp, #24
   141b4:	mov	r1, r5
   141b8:	mov	r0, r4
   141bc:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   141c0:	cmp	r0, #0
   141c4:	str	r0, [r5, #28]
   141c8:	bne	14160 <g_type_class_adjust_private_offset@plt+0x17d0>
   141cc:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   141d0:	ldr	r1, [pc, #564]	; 1440c <g_type_class_adjust_private_offset@plt+0x1a7c>
   141d4:	bl	1293c <strcmp@plt>
   141d8:	cmp	r0, #0
   141dc:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   141e0:	mov	r3, r6
   141e4:	add	r2, sp, #24
   141e8:	mov	r1, r5
   141ec:	mov	r0, r4
   141f0:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   141f4:	cmp	r0, #0
   141f8:	str	r0, [r5, #20]
   141fc:	bne	14160 <g_type_class_adjust_private_offset@plt+0x17d0>
   14200:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14204:	ldr	r1, [pc, #508]	; 14408 <g_type_class_adjust_private_offset@plt+0x1a78>
   14208:	bl	1293c <strcmp@plt>
   1420c:	cmp	r0, #0
   14210:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14214:	mov	r3, r6
   14218:	add	r2, sp, #24
   1421c:	mov	r1, r5
   14220:	mov	r0, r4
   14224:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   14228:	cmp	r0, #0
   1422c:	str	r0, [r5, #36]	; 0x24
   14230:	bne	14160 <g_type_class_adjust_private_offset@plt+0x17d0>
   14234:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14238:	ldr	r1, [pc, #456]	; 14408 <g_type_class_adjust_private_offset@plt+0x1a78>
   1423c:	bl	1293c <strcmp@plt>
   14240:	cmp	r0, #0
   14244:	bne	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14248:	mov	r3, r6
   1424c:	add	r2, sp, #24
   14250:	mov	r1, r5
   14254:	mov	r0, r4
   14258:	bl	13d44 <g_type_class_adjust_private_offset@plt+0x13b4>
   1425c:	cmp	r0, #0
   14260:	str	r0, [r5, #40]	; 0x28
   14264:	bne	14160 <g_type_class_adjust_private_offset@plt+0x17d0>
   14268:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   1426c:	add	r1, r3, #5
   14270:	cmp	r6, r1
   14274:	bcc	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14278:	ldr	r0, [r5, #4]
   1427c:	add	r3, r3, #21
   14280:	cmp	r0, #0
   14284:	mov	ip, #1
   14288:	add	r0, r4, r3
   1428c:	str	ip, [r5, #48]	; 0x30
   14290:	beq	142b8 <g_type_class_adjust_private_offset@plt+0x1928>
   14294:	str	r2, [sp, #12]
   14298:	bl	13d38 <g_type_class_adjust_private_offset@plt+0x13a8>
   1429c:	ldr	r2, [sp, #12]
   142a0:	str	r0, [r5, #52]	; 0x34
   142a4:	str	r1, [sp, #24]
   142a8:	str	r2, [sp, #12]
   142ac:	b	13f40 <g_type_class_adjust_private_offset@plt+0x15b0>
   142b0:	ldr	r0, [r4, r3]
   142b4:	b	14124 <g_type_class_adjust_private_offset@plt+0x1794>
   142b8:	ldr	r0, [r4, r3]
   142bc:	b	142a0 <g_type_class_adjust_private_offset@plt+0x1910>
   142c0:	str	r0, [r5, #44]	; 0x2c
   142c4:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   142c8:	ldrb	r3, [r5, #8]
   142cc:	sub	r3, r3, #1
   142d0:	cmp	r3, #3
   142d4:	ldrls	pc, [pc, r3, lsl #2]
   142d8:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   142dc:	andeq	r4, r1, ip, ror r3
   142e0:	strdeq	r4, [r1], -r8
   142e4:	andeq	r4, r1, ip, ror #5
   142e8:	muleq	r1, r8, r3
   142ec:	ldr	r3, [r5, #32]
   142f0:	cmp	r3, #0
   142f4:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   142f8:	ldr	r3, [r5, #48]	; 0x30
   142fc:	cmp	r3, #0
   14300:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14304:	cmp	r8, #0
   14308:	beq	14330 <g_type_class_adjust_private_offset@plt+0x19a0>
   1430c:	ldr	r1, [r5, #16]
   14310:	ldr	r3, [r5, #4]
   14314:	add	r1, r8, r1
   14318:	cmp	r3, #0
   1431c:	str	r1, [r5, #16]
   14320:	streq	r1, [r4, #28]
   14324:	beq	14330 <g_type_class_adjust_private_offset@plt+0x19a0>
   14328:	mov	r0, fp
   1432c:	bl	13dc4 <g_type_class_adjust_private_offset@plt+0x1434>
   14330:	cmp	r9, #0
   14334:	beq	13ff0 <g_type_class_adjust_private_offset@plt+0x1660>
   14338:	ldr	r3, [r5, #48]	; 0x30
   1433c:	cmp	r3, #0
   14340:	beq	13ff0 <g_type_class_adjust_private_offset@plt+0x1660>
   14344:	ldr	r1, [r5, #52]	; 0x34
   14348:	add	sl, r9, sl
   1434c:	cmp	r1, sl
   14350:	bls	13ff0 <g_type_class_adjust_private_offset@plt+0x1660>
   14354:	ldr	r3, [sp, #12]
   14358:	ldr	r2, [r5, #4]
   1435c:	add	r3, r3, #20
   14360:	cmp	r2, #0
   14364:	sub	r1, r1, r9
   14368:	add	r0, r4, r3
   1436c:	streq	r1, [r4, r3]
   14370:	beq	13ff0 <g_type_class_adjust_private_offset@plt+0x1660>
   14374:	bl	13dc4 <g_type_class_adjust_private_offset@plt+0x1434>
   14378:	b	13ff0 <g_type_class_adjust_private_offset@plt+0x1660>
   1437c:	ldr	r3, [r5, #20]
   14380:	cmp	r3, #0
   14384:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14388:	ldr	r3, [r5, #28]
   1438c:	cmp	r3, #0
   14390:	bne	14304 <g_type_class_adjust_private_offset@plt+0x1974>
   14394:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   14398:	ldr	r0, [r5, #20]
   1439c:	cmp	r0, #0
   143a0:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   143a4:	ldr	r6, [r5, #24]
   143a8:	cmp	r6, #0
   143ac:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   143b0:	ldr	r3, [r5, #28]
   143b4:	cmp	r3, #0
   143b8:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   143bc:	ldr	r1, [pc, #76]	; 14410 <g_type_class_adjust_private_offset@plt+0x1a80>
   143c0:	bl	1293c <strcmp@plt>
   143c4:	cmp	r0, #0
   143c8:	beq	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   143cc:	mov	r0, r6
   143d0:	ldr	r1, [pc, #60]	; 14414 <g_type_class_adjust_private_offset@plt+0x1a84>
   143d4:	bl	1293c <strcmp@plt>
   143d8:	cmp	r0, #0
   143dc:	bne	14304 <g_type_class_adjust_private_offset@plt+0x1974>
   143e0:	b	13fe4 <g_type_class_adjust_private_offset@plt+0x1654>
   143e4:	bl	1275c <__stack_chk_fail@plt>
   143e8:	andeq	r8, r2, r0, ror ip
   143ec:	andeq	r7, r1, r8, ror #6
   143f0:	andeq	r7, r1, ip, lsl #4
   143f4:	andeq	r7, r1, r0, asr #6
   143f8:	andeq	r7, r1, r0, asr r3
   143fc:	andeq	r7, r1, r0, lsl #4
   14400:	andeq	r0, r0, r6, ror r1
   14404:	ldrdeq	r7, [r1], -ip
   14408:	andeq	r7, r1, r0, lsr fp
   1440c:	strdeq	r7, [r1], -r0
   14410:	andeq	r7, r1, r4, lsl #7
   14414:	andeq	r7, r1, r0, lsr #7
   14418:	ldr	r3, [pc, #716]	; 146ec <g_type_class_adjust_private_offset@plt+0x1d5c>
   1441c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14420:	mov	r7, r2
   14424:	ldr	r2, [r2, #8]
   14428:	sub	sp, sp, #52	; 0x34
   1442c:	ldr	r3, [r3]
   14430:	mov	r9, r0
   14434:	mov	r0, r2
   14438:	str	r2, [sp, #28]
   1443c:	str	r3, [sp, #44]	; 0x2c
   14440:	bl	12540 <g_object_ref@plt>
   14444:	mov	sl, #0
   14448:	ldr	fp, [pc, #672]	; 146f0 <g_type_class_adjust_private_offset@plt+0x1d60>
   1444c:	mov	r6, sl
   14450:	ldr	r3, [r7, #68]	; 0x44
   14454:	cmp	r3, #0
   14458:	beq	145b4 <g_type_class_adjust_private_offset@plt+0x1c24>
   1445c:	ldr	r4, [r3]
   14460:	str	r6, [sp, #32]
   14464:	ldr	r3, [r4, #12]
   14468:	cmp	r3, #0
   1446c:	beq	144d4 <g_type_class_adjust_private_offset@plt+0x1b44>
   14470:	ldr	r5, [r7, #12]
   14474:	bl	126cc <g_unix_connection_get_type@plt>
   14478:	cmp	r5, #0
   1447c:	beq	144d4 <g_type_class_adjust_private_offset@plt+0x1b44>
   14480:	ldr	r3, [r5]
   14484:	cmp	r3, #0
   14488:	beq	14498 <g_type_class_adjust_private_offset@plt+0x1b08>
   1448c:	ldr	r3, [r3]
   14490:	cmp	r0, r3
   14494:	beq	144ac <g_type_class_adjust_private_offset@plt+0x1b1c>
   14498:	mov	r1, r0
   1449c:	mov	r0, r5
   144a0:	bl	126b4 <g_type_check_instance_is_a@plt>
   144a4:	cmp	r0, #0
   144a8:	beq	144d4 <g_type_class_adjust_private_offset@plt+0x1b44>
   144ac:	ldr	r5, [r4]
   144b0:	cmp	r5, #1
   144b4:	beq	14664 <g_type_class_adjust_private_offset@plt+0x1cd4>
   144b8:	ldr	r2, [pc, #564]	; 146f4 <g_type_class_adjust_private_offset@plt+0x1d64>
   144bc:	ldr	r3, [pc, #564]	; 146f8 <g_type_class_adjust_private_offset@plt+0x1d68>
   144c0:	str	r2, [sp]
   144c4:	ldr	r1, [pc, #560]	; 146fc <g_type_class_adjust_private_offset@plt+0x1d6c>
   144c8:	mov	r2, #900	; 0x384
   144cc:	mov	r0, #0
   144d0:	bl	124f8 <g_assertion_message_expr@plt>
   144d4:	ldr	r0, [r4, #16]
   144d8:	bl	12534 <g_list_length@plt>
   144dc:	mov	r1, #4
   144e0:	mov	r5, r0
   144e4:	bl	128c4 <g_malloc_n@plt>
   144e8:	ldr	r3, [r4, #16]
   144ec:	cmp	r3, #0
   144f0:	mov	r8, r0
   144f4:	subne	r2, r0, #4
   144f8:	beq	1450c <g_type_class_adjust_private_offset@plt+0x1b7c>
   144fc:	ldm	r3, {r1, r3}
   14500:	cmp	r3, #0
   14504:	str	r1, [r2, #4]!
   14508:	bne	144fc <g_type_class_adjust_private_offset@plt+0x1b6c>
   1450c:	ldr	r3, [r4, #4]
   14510:	ldr	ip, [r4]
   14514:	add	r0, r3, #20
   14518:	add	r2, sp, #32
   1451c:	add	r0, r4, r0
   14520:	sub	ip, ip, r3
   14524:	stmib	sp, {r5, r6}
   14528:	str	r2, [sp, #16]
   1452c:	mov	r3, #1
   14530:	add	r2, sp, #36	; 0x24
   14534:	mov	r1, #0
   14538:	str	r0, [sp, #36]	; 0x24
   1453c:	str	r6, [sp, #12]
   14540:	str	r8, [sp]
   14544:	mov	r0, r9
   14548:	str	ip, [sp, #40]	; 0x28
   1454c:	bl	1296c <g_socket_send_message@plt>
   14550:	mov	r5, r0
   14554:	mov	r0, r8
   14558:	bl	12294 <g_free@plt>
   1455c:	cmp	r5, #0
   14560:	blt	145e8 <g_type_class_adjust_private_offset@plt+0x1c58>
   14564:	beq	14624 <g_type_class_adjust_private_offset@plt+0x1c94>
   14568:	mov	r1, fp
   1456c:	ldr	r0, [r4, #16]
   14570:	bl	12468 <g_list_free_full@plt>
   14574:	ldr	r3, [r4, #4]
   14578:	str	sl, [r4, #16]
   1457c:	add	r5, r5, r3
   14580:	ldr	r3, [r4]
   14584:	str	r5, [r4, #4]
   14588:	cmp	r3, r5
   1458c:	bne	14450 <g_type_class_adjust_private_offset@plt+0x1ac0>
   14590:	ldr	r1, [r7, #68]	; 0x44
   14594:	mov	r0, r1
   14598:	bl	126a8 <g_list_delete_link@plt>
   1459c:	str	r0, [r7, #68]	; 0x44
   145a0:	mov	r0, r4
   145a4:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   145a8:	ldr	r3, [r7, #68]	; 0x44
   145ac:	cmp	r3, #0
   145b0:	bne	1445c <g_type_class_adjust_private_offset@plt+0x1acc>
   145b4:	ldr	r2, [r7, #8]
   145b8:	add	r3, r2, #24
   145bc:	cmp	r7, r3
   145c0:	beq	146e0 <g_type_class_adjust_private_offset@plt+0x1d50>
   145c4:	ldr	r4, [r3, #4]
   145c8:	mov	r5, #0
   145cc:	cmp	r4, r5
   145d0:	str	r5, [r7, #20]
   145d4:	beq	1463c <g_type_class_adjust_private_offset@plt+0x1cac>
   145d8:	mov	r0, r7
   145dc:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   145e0:	mov	r4, r5
   145e4:	b	1463c <g_type_class_adjust_private_offset@plt+0x1cac>
   145e8:	ldr	r4, [sp, #32]
   145ec:	bl	1272c <g_io_error_quark@plt>
   145f0:	mov	r2, #27
   145f4:	mov	r1, r0
   145f8:	mov	r0, r4
   145fc:	bl	1269c <g_error_matches@plt>
   14600:	cmp	r0, #0
   14604:	bne	146ac <g_type_class_adjust_private_offset@plt+0x1d1c>
   14608:	ldr	r3, [sp, #32]
   1460c:	ldr	r2, [pc, #236]	; 14700 <g_type_class_adjust_private_offset@plt+0x1d70>
   14610:	mov	r1, #16
   14614:	ldr	r3, [r3, #8]
   14618:	bl	12924 <g_log@plt>
   1461c:	ldr	r0, [sp, #32]
   14620:	bl	128a0 <g_error_free@plt>
   14624:	mov	r0, r7
   14628:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   1462c:	ldr	r3, [r7, #68]	; 0x44
   14630:	cmp	r3, #0
   14634:	beq	145b4 <g_type_class_adjust_private_offset@plt+0x1c24>
   14638:	mov	r4, #1
   1463c:	ldr	r0, [sp, #28]
   14640:	bl	123f0 <g_object_unref@plt>
   14644:	ldr	r3, [pc, #160]	; 146ec <g_type_class_adjust_private_offset@plt+0x1d5c>
   14648:	ldr	r2, [sp, #44]	; 0x2c
   1464c:	mov	r0, r4
   14650:	ldr	r3, [r3]
   14654:	cmp	r2, r3
   14658:	bne	146e8 <g_type_class_adjust_private_offset@plt+0x1d58>
   1465c:	add	sp, sp, #52	; 0x34
   14660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14664:	ldr	r8, [r7, #12]
   14668:	bl	126cc <g_unix_connection_get_type@plt>
   1466c:	mov	r1, r0
   14670:	mov	r0, r8
   14674:	bl	12750 <g_type_check_instance_cast@plt>
   14678:	add	r2, sp, #32
   1467c:	mov	r1, #0
   14680:	bl	12624 <g_unix_connection_send_credentials@plt>
   14684:	cmp	r0, #0
   14688:	bne	14580 <g_type_class_adjust_private_offset@plt+0x1bf0>
   1468c:	ldr	r4, [sp, #32]
   14690:	bl	1272c <g_io_error_quark@plt>
   14694:	mov	r2, #27
   14698:	mov	r1, r0
   1469c:	mov	r0, r4
   146a0:	bl	1269c <g_error_matches@plt>
   146a4:	cmp	r0, #0
   146a8:	beq	146b8 <g_type_class_adjust_private_offset@plt+0x1d28>
   146ac:	ldr	r0, [sp, #32]
   146b0:	bl	128a0 <g_error_free@plt>
   146b4:	b	1462c <g_type_class_adjust_private_offset@plt+0x1c9c>
   146b8:	ldr	r3, [sp, #32]
   146bc:	ldr	r2, [pc, #60]	; 14700 <g_type_class_adjust_private_offset@plt+0x1d70>
   146c0:	mov	r1, #16
   146c4:	ldr	r3, [r3, #8]
   146c8:	bl	12924 <g_log@plt>
   146cc:	ldr	r0, [sp, #32]
   146d0:	bl	128a0 <g_error_free@plt>
   146d4:	mov	r0, r7
   146d8:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   146dc:	b	1462c <g_type_class_adjust_private_offset@plt+0x1c9c>
   146e0:	add	r3, r2, #104	; 0x68
   146e4:	b	145c4 <g_type_class_adjust_private_offset@plt+0x1c34>
   146e8:	bl	1275c <__stack_chk_fail@plt>
   146ec:	andeq	r8, r2, r0, ror ip
   146f0:	strdeq	r2, [r1], -r0
   146f4:			; <UNDEFINED> instruction: 0x000173bc
   146f8:	andeq	r7, r1, ip, lsl r2
   146fc:	andeq	r7, r1, r0, asr #6
   14700:	ldrdeq	r7, [r1], -r0
   14704:	push	{r4, lr}
   14708:	mov	r4, r0
   1470c:	ldr	r1, [pc, #56]	; 1474c <g_type_class_adjust_private_offset@plt+0x1dbc>
   14710:	ldr	r0, [r0, #36]	; 0x24
   14714:	bl	12408 <g_strcmp0@plt>
   14718:	cmp	r0, #0
   1471c:	bne	14744 <g_type_class_adjust_private_offset@plt+0x1db4>
   14720:	ldrb	r3, [r4, #8]
   14724:	cmp	r3, #1
   14728:	popne	{r4, pc}
   1472c:	ldr	r0, [r4, #24]
   14730:	ldr	r1, [pc, #20]	; 1474c <g_type_class_adjust_private_offset@plt+0x1dbc>
   14734:	bl	12408 <g_strcmp0@plt>
   14738:	clz	r0, r0
   1473c:	lsr	r0, r0, #5
   14740:	pop	{r4, pc}
   14744:	mov	r0, #0
   14748:	pop	{r4, pc}
   1474c:	strdeq	r7, [r1], -r8
   14750:	push	{r4, r5, r6, r7, r8, lr}
   14754:	mov	r4, r0
   14758:	mov	r6, r1
   1475c:	ldr	r0, [r0, #72]	; 0x48
   14760:	ldr	r1, [r1, #16]
   14764:	mov	r5, r2
   14768:	bl	12654 <g_list_concat@plt>
   1476c:	ldr	r8, [r5]
   14770:	mov	r3, #0
   14774:	cmp	r8, r3
   14778:	str	r0, [r4, #72]	; 0x48
   1477c:	str	r3, [r6, #16]
   14780:	bne	1478c <g_type_class_adjust_private_offset@plt+0x1dfc>
   14784:	mov	r0, #1
   14788:	pop	{r4, r5, r6, r7, r8, pc}
   1478c:	ldr	r5, [r4, #72]	; 0x48
   14790:	cmp	r5, #0
   14794:	beq	147f8 <g_type_class_adjust_private_offset@plt+0x1e68>
   14798:	bl	1254c <g_unix_fd_message_get_type@plt>
   1479c:	mov	r7, r0
   147a0:	ldr	r5, [r5]
   147a4:	mov	r1, r7
   147a8:	subs	r0, r5, #0
   147ac:	beq	147d4 <g_type_class_adjust_private_offset@plt+0x1e44>
   147b0:	ldr	r3, [r5]
   147b4:	cmp	r3, #0
   147b8:	beq	147c8 <g_type_class_adjust_private_offset@plt+0x1e38>
   147bc:	ldr	r3, [r3]
   147c0:	cmp	r7, r3
   147c4:	beq	14828 <g_type_class_adjust_private_offset@plt+0x1e98>
   147c8:	bl	126b4 <g_type_check_instance_is_a@plt>
   147cc:	cmp	r0, #0
   147d0:	bne	14828 <g_type_class_adjust_private_offset@plt+0x1e98>
   147d4:	mov	r0, r5
   147d8:	bl	123f0 <g_object_unref@plt>
   147dc:	ldr	r1, [r4, #72]	; 0x48
   147e0:	mov	r0, r1
   147e4:	bl	126a8 <g_list_delete_link@plt>
   147e8:	cmp	r0, #0
   147ec:	mov	r5, r0
   147f0:	str	r0, [r4, #72]	; 0x48
   147f4:	bne	147a0 <g_type_class_adjust_private_offset@plt+0x1e10>
   147f8:	mov	r3, #0
   147fc:	str	r3, [r6, #16]
   14800:	ldr	r2, [pc, #136]	; 14890 <g_type_class_adjust_private_offset@plt+0x1f00>
   14804:	mov	r1, #16
   14808:	mov	r0, #0
   1480c:	bl	12924 <g_log@plt>
   14810:	mov	r0, r4
   14814:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   14818:	mov	r0, r6
   1481c:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   14820:	mov	r0, #0
   14824:	pop	{r4, r5, r6, r7, r8, pc}
   14828:	mov	r1, r7
   1482c:	mov	r0, r5
   14830:	bl	12750 <g_type_check_instance_cast@plt>
   14834:	bl	12684 <g_unix_fd_message_get_fd_list@plt>
   14838:	bl	124d4 <g_unix_fd_list_get_length@plt>
   1483c:	cmp	r8, r0
   14840:	bne	14874 <g_type_class_adjust_private_offset@plt+0x1ee4>
   14844:	ldr	r1, [r4, #72]	; 0x48
   14848:	mov	r0, r1
   1484c:	bl	126a8 <g_list_delete_link@plt>
   14850:	mov	r1, r5
   14854:	str	r0, [r4, #72]	; 0x48
   14858:	mov	r0, #0
   1485c:	bl	126d8 <g_list_append@plt>
   14860:	cmp	r0, #0
   14864:	str	r0, [r6, #16]
   14868:	beq	14800 <g_type_class_adjust_private_offset@plt+0x1e70>
   1486c:	mov	r0, #1
   14870:	pop	{r4, r5, r6, r7, r8, pc}
   14874:	ldr	r2, [pc, #24]	; 14894 <g_type_class_adjust_private_offset@plt+0x1f04>
   14878:	mov	r1, #16
   1487c:	mov	r0, #0
   14880:	bl	12924 <g_log@plt>
   14884:	mov	r3, #0
   14888:	str	r3, [r6, #16]
   1488c:	b	14800 <g_type_class_adjust_private_offset@plt+0x1e70>
   14890:	andeq	r7, r1, r8, lsr r4
   14894:	andeq	r7, r1, r0, lsl r4
   14898:	push	{r4, r5, r6, lr}
   1489c:	mov	r6, r1
   148a0:	ldr	r3, [pc, #68]	; 148ec <g_type_class_adjust_private_offset@plt+0x1f5c>
   148a4:	ldr	r2, [pc, #68]	; 148f0 <g_type_class_adjust_private_offset@plt+0x1f60>
   148a8:	mov	r5, r0
   148ac:	ldr	r1, [pc, #64]	; 148f4 <g_type_class_adjust_private_offset@plt+0x1f64>
   148b0:	mov	r0, #0
   148b4:	bl	12378 <g_dbus_message_new_method_call@plt>
   148b8:	ldr	r1, [r6]
   148bc:	mov	r4, r0
   148c0:	bl	12930 <g_dbus_message_set_serial@plt>
   148c4:	ldrb	r1, [r5]
   148c8:	mov	r0, r4
   148cc:	bl	12894 <g_dbus_message_set_flags@plt>
   148d0:	mov	r0, r4
   148d4:	bl	137a8 <g_type_class_adjust_private_offset@plt+0xe18>
   148d8:	mov	r5, r0
   148dc:	mov	r0, r4
   148e0:	bl	123f0 <g_object_unref@plt>
   148e4:	mov	r0, r5
   148e8:	pop	{r4, r5, r6, pc}
   148ec:	andeq	r7, r1, r4, asr r4
   148f0:	andeq	r7, r1, ip, asr r4
   148f4:	andeq	r7, r1, r8, ror r4
   148f8:	push	{r4, r5, r6, r7, r8, lr}
   148fc:	mov	r5, r1
   14900:	mov	r6, r0
   14904:	add	r1, r1, #16
   14908:	add	r0, r5, #9
   1490c:	mov	r7, r2
   14910:	bl	14898 <g_type_class_adjust_private_offset@plt+0x1f08>
   14914:	mov	r8, r0
   14918:	bl	124ec <g_dbus_message_new@plt>
   1491c:	mov	r1, #3
   14920:	mov	r4, r0
   14924:	bl	125e8 <g_dbus_message_set_message_type@plt>
   14928:	mov	r0, r4
   1492c:	mov	r1, #1
   14930:	bl	12894 <g_dbus_message_set_flags@plt>
   14934:	ldr	r3, [r6, #184]	; 0xb8
   14938:	ldr	r1, [r5, #16]
   1493c:	mov	r0, r4
   14940:	sub	r1, r1, r3
   14944:	bl	12648 <g_dbus_message_set_reply_serial@plt>
   14948:	mov	r1, r7
   1494c:	mov	r0, r4
   14950:	bl	128e8 <g_dbus_message_set_error_name@plt>
   14954:	mov	r1, r7
   14958:	ldr	r0, [pc, #36]	; 14984 <g_type_class_adjust_private_offset@plt+0x1ff4>
   1495c:	bl	12954 <g_variant_new@plt>
   14960:	mov	r1, r0
   14964:	mov	r0, r4
   14968:	bl	12330 <g_dbus_message_set_body@plt>
   1496c:	mov	r2, r4
   14970:	ldr	r1, [r5, #16]
   14974:	ldr	r0, [r6, #196]	; 0xc4
   14978:	bl	12738 <g_hash_table_replace@plt>
   1497c:	mov	r0, r8
   14980:	pop	{r4, r5, r6, r7, r8, pc}
   14984:	andeq	r7, r1, ip, ror r4
   14988:	push	{r4, r5, r6, lr}
   1498c:	sub	sp, sp, #16
   14990:	ldr	r5, [pc, #156]	; 14a34 <g_type_class_adjust_private_offset@plt+0x20a4>
   14994:	mov	r4, r1
   14998:	mov	r6, r0
   1499c:	ldr	ip, [r5]
   149a0:	ldr	r1, [r1]
   149a4:	ldr	r0, [r0, #44]	; 0x2c
   149a8:	add	r3, sp, #8
   149ac:	mov	r2, #0
   149b0:	str	ip, [sp, #12]
   149b4:	bl	123fc <g_hash_table_lookup_extended@plt>
   149b8:	mov	r1, r4
   149bc:	cmp	r0, #0
   149c0:	beq	149f4 <g_type_class_adjust_private_offset@plt+0x2064>
   149c4:	ldr	r0, [sp, #8]
   149c8:	bl	126d8 <g_list_append@plt>
   149cc:	ldr	r3, [sp, #8]
   149d0:	cmp	r3, r0
   149d4:	beq	14a18 <g_type_class_adjust_private_offset@plt+0x2088>
   149d8:	ldr	r2, [pc, #88]	; 14a38 <g_type_class_adjust_private_offset@plt+0x20a8>
   149dc:	ldr	r3, [pc, #88]	; 14a3c <g_type_class_adjust_private_offset@plt+0x20ac>
   149e0:	str	r2, [sp]
   149e4:	ldr	r1, [pc, #84]	; 14a40 <g_type_class_adjust_private_offset@plt+0x20b0>
   149e8:	ldr	r2, [pc, #84]	; 14a44 <g_type_class_adjust_private_offset@plt+0x20b4>
   149ec:	mov	r0, #0
   149f0:	bl	124f8 <g_assertion_message_expr@plt>
   149f4:	bl	126d8 <g_list_append@plt>
   149f8:	ldr	r6, [r6, #44]	; 0x2c
   149fc:	str	r0, [sp, #8]
   14a00:	ldr	r0, [r4]
   14a04:	bl	12420 <g_strdup@plt>
   14a08:	ldr	r2, [sp, #8]
   14a0c:	mov	r1, r0
   14a10:	mov	r0, r6
   14a14:	bl	12438 <g_hash_table_insert@plt>
   14a18:	ldr	r2, [sp, #12]
   14a1c:	ldr	r3, [r5]
   14a20:	cmp	r2, r3
   14a24:	bne	14a30 <g_type_class_adjust_private_offset@plt+0x20a0>
   14a28:	add	sp, sp, #16
   14a2c:	pop	{r4, r5, r6, pc}
   14a30:	bl	1275c <__stack_chk_fail@plt>
   14a34:	andeq	r8, r2, r0, ror ip
   14a38:	andeq	r7, r1, r0, lsl #9
   14a3c:	andeq	r7, r1, ip, lsr #4
   14a40:	andeq	r7, r1, r0, asr #6
   14a44:	andeq	r0, r0, sp, ror r2
   14a48:	push	{r4, lr}
   14a4c:	mov	r4, r0
   14a50:	ldr	r3, [pc, #48]	; 14a88 <g_type_class_adjust_private_offset@plt+0x20f8>
   14a54:	ldr	r2, [pc, #48]	; 14a8c <g_type_class_adjust_private_offset@plt+0x20fc>
   14a58:	ldr	r1, [pc, #48]	; 14a90 <g_type_class_adjust_private_offset@plt+0x2100>
   14a5c:	ldr	r0, [pc, #48]	; 14a94 <g_type_class_adjust_private_offset@plt+0x2104>
   14a60:	bl	125d0 <g_hash_table_new_full@plt>
   14a64:	mov	r1, #0
   14a68:	mov	r2, #2
   14a6c:	str	r0, [r4, #44]	; 0x2c
   14a70:	ldr	r0, [pc, #32]	; 14a98 <g_type_class_adjust_private_offset@plt+0x2108>
   14a74:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   14a78:	mov	r1, r0
   14a7c:	mov	r0, r4
   14a80:	pop	{r4, lr}
   14a84:	b	14988 <g_type_class_adjust_private_offset@plt+0x1ff8>
   14a88:	andeq	r3, r1, r4, lsl #2
   14a8c:	muleq	r1, r4, r2
   14a90:	andeq	r2, r1, r8, asr #18
   14a94:	andeq	r2, r1, ip, ror #6
   14a98:	strdeq	r7, [r1], -r8
   14a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14aa0:	sub	sp, sp, #132	; 0x84
   14aa4:	ldr	r6, [pc, #3992]	; 15a44 <g_type_class_adjust_private_offset@plt+0x30b4>
   14aa8:	ldr	r4, [r0, #8]
   14aac:	mov	r5, r0
   14ab0:	add	r8, r4, #24
   14ab4:	ldr	r2, [r6]
   14ab8:	cmp	r8, r0
   14abc:	mov	r7, r1
   14ac0:	ldr	r3, [r4, #16]
   14ac4:	str	r2, [sp, #124]	; 0x7c
   14ac8:	beq	14b10 <g_type_class_adjust_private_offset@plt+0x2180>
   14acc:	cmp	r3, #0
   14ad0:	beq	14ae4 <g_type_class_adjust_private_offset@plt+0x2154>
   14ad4:	ldr	r3, [r4, #12]
   14ad8:	ldr	r3, [r3, #36]	; 0x24
   14adc:	cmp	r3, #0
   14ae0:	bne	14b3c <g_type_class_adjust_private_offset@plt+0x21ac>
   14ae4:	cmp	r7, #0
   14ae8:	beq	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14aec:	mov	r1, r7
   14af0:	mov	r0, r8
   14af4:	bl	13358 <g_type_class_adjust_private_offset@plt+0x9c8>
   14af8:	ldr	r2, [sp, #124]	; 0x7c
   14afc:	ldr	r3, [r6]
   14b00:	cmp	r2, r3
   14b04:	bne	15d5c <g_type_class_adjust_private_offset@plt+0x33cc>
   14b08:	add	sp, sp, #132	; 0x84
   14b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b10:	cmp	r3, #0
   14b14:	beq	14b28 <g_type_class_adjust_private_offset@plt+0x2198>
   14b18:	ldr	r3, [r4, #12]
   14b1c:	ldr	r3, [r3, #36]	; 0x24
   14b20:	cmp	r3, #0
   14b24:	bne	14bfc <g_type_class_adjust_private_offset@plt+0x226c>
   14b28:	cmp	r7, #0
   14b2c:	beq	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14b30:	add	r0, r4, #104	; 0x68
   14b34:	bl	13358 <g_type_class_adjust_private_offset@plt+0x9c8>
   14b38:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14b3c:	ldrd	r2, [r4, #184]	; 0xb8
   14b40:	mov	r1, #0
   14b44:	mov	r0, r7
   14b48:	bl	13e70 <g_type_class_adjust_private_offset@plt+0x14e0>
   14b4c:	subs	r9, r0, #0
   14b50:	beq	153c0 <g_type_class_adjust_private_offset@plt+0x2a30>
   14b54:	add	r2, r9, #56	; 0x38
   14b58:	mov	r1, r7
   14b5c:	mov	r0, r5
   14b60:	bl	14750 <g_type_class_adjust_private_offset@plt+0x1dc0>
   14b64:	cmp	r0, #0
   14b68:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   14b6c:	ldr	r3, [r4, #12]
   14b70:	ldr	r3, [r3, #20]
   14b74:	cmp	r3, #0
   14b78:	bne	14e64 <g_type_class_adjust_private_offset@plt+0x24d4>
   14b7c:	ldr	r3, [r9, #48]	; 0x30
   14b80:	cmp	r3, #0
   14b84:	bne	14dfc <g_type_class_adjust_private_offset@plt+0x246c>
   14b88:	ldrb	r3, [r9, #8]
   14b8c:	sub	r2, r3, #2
   14b90:	cmp	r2, #1
   14b94:	bls	153e0 <g_type_class_adjust_private_offset@plt+0x2a50>
   14b98:	cmp	r3, #4
   14b9c:	beq	15410 <g_type_class_adjust_private_offset@plt+0x2a80>
   14ba0:	cmp	r7, #0
   14ba4:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   14ba8:	ldr	sl, [r9, #40]	; 0x28
   14bac:	cmp	sl, #0
   14bb0:	beq	14bc0 <g_type_class_adjust_private_offset@plt+0x2230>
   14bb4:	ldrb	r3, [sl]
   14bb8:	cmp	r3, #58	; 0x3a
   14bbc:	beq	1599c <g_type_class_adjust_private_offset@plt+0x300c>
   14bc0:	ldrb	r2, [r9, #8]
   14bc4:	cmp	r2, #1
   14bc8:	beq	1554c <g_type_class_adjust_private_offset@plt+0x2bbc>
   14bcc:	mov	r0, r9
   14bd0:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   14bd4:	b	14aec <g_type_class_adjust_private_offset@plt+0x215c>
   14bd8:	ldr	r3, [r4, #12]
   14bdc:	ldr	r3, [r3, #20]
   14be0:	cmp	r3, #0
   14be4:	bne	159ec <g_type_class_adjust_private_offset@plt+0x305c>
   14be8:	mov	r0, r7
   14bec:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   14bf0:	mov	r0, r9
   14bf4:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   14bf8:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14bfc:	mov	r3, #0
   14c00:	mov	r2, r3
   14c04:	ldr	r1, [r4, #184]	; 0xb8
   14c08:	mov	r0, r7
   14c0c:	bl	13e70 <g_type_class_adjust_private_offset@plt+0x14e0>
   14c10:	subs	r9, r0, #0
   14c14:	beq	15814 <g_type_class_adjust_private_offset@plt+0x2e84>
   14c18:	add	r2, r9, #56	; 0x38
   14c1c:	mov	r1, r7
   14c20:	mov	r0, r8
   14c24:	bl	14750 <g_type_class_adjust_private_offset@plt+0x1dc0>
   14c28:	cmp	r0, #0
   14c2c:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   14c30:	ldr	r1, [r9, #16]
   14c34:	ldr	r3, [r4, #192]	; 0xc0
   14c38:	cmp	r1, r3
   14c3c:	bls	15978 <g_type_class_adjust_private_offset@plt+0x2fe8>
   14c40:	ldr	r3, [r4, #12]
   14c44:	str	r1, [r4, #192]	; 0xc0
   14c48:	ldr	r3, [r3, #20]
   14c4c:	cmp	r3, #0
   14c50:	bne	15858 <g_type_class_adjust_private_offset@plt+0x2ec8>
   14c54:	mov	r0, r9
   14c58:	bl	14704 <g_type_class_adjust_private_offset@plt+0x1d74>
   14c5c:	cmp	r0, #0
   14c60:	bne	15834 <g_type_class_adjust_private_offset@plt+0x2ea4>
   14c64:	mov	r8, #0
   14c68:	ldr	r2, [r9, #48]	; 0x30
   14c6c:	mov	r3, #0
   14c70:	cmp	r2, r3
   14c74:	str	r3, [sp, #36]	; 0x24
   14c78:	beq	15770 <g_type_class_adjust_private_offset@plt+0x2de0>
   14c7c:	ldr	sl, [r9, #52]	; 0x34
   14c80:	ldr	r0, [r4, #180]	; 0xb4
   14c84:	mov	r1, sl
   14c88:	bl	127b0 <g_hash_table_lookup@plt>
   14c8c:	cmp	r0, #0
   14c90:	beq	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   14c94:	mov	r1, sl
   14c98:	ldr	r0, [r4, #180]	; 0xb4
   14c9c:	bl	124a4 <g_hash_table_remove@plt>
   14ca0:	ldr	r0, [sp, #36]	; 0x24
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cb0 <g_type_class_adjust_private_offset@plt+0x2320>
   14cac:	bl	12444 <g_list_free@plt>
   14cb0:	ldrb	r3, [r9, #8]
   14cb4:	cmp	r3, #1
   14cb8:	beq	15bb8 <g_type_class_adjust_private_offset@plt+0x3228>
   14cbc:	cmp	r7, #0
   14cc0:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   14cc4:	cmp	r8, #0
   14cc8:	bne	15bd8 <g_type_class_adjust_private_offset@plt+0x3248>
   14ccc:	mov	r0, r9
   14cd0:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   14cd4:	cmp	r7, #0
   14cd8:	beq	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14cdc:	mov	r1, r7
   14ce0:	add	r0, r4, #104	; 0x68
   14ce4:	bl	13358 <g_type_class_adjust_private_offset@plt+0x9c8>
   14ce8:	cmp	r8, #2
   14cec:	bne	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   14cf0:	ldr	r3, [r4, #12]
   14cf4:	add	sl, sp, #36	; 0x24
   14cf8:	ldr	r7, [pc, #3616]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   14cfc:	ldr	fp, [pc, #3396]	; 15a48 <g_type_class_adjust_private_offset@plt+0x30b8>
   14d00:	ldr	r8, [pc, #3616]	; 15b28 <g_type_class_adjust_private_offset@plt+0x3198>
   14d04:	ldr	r1, [r3, #44]	; 0x2c
   14d08:	mov	r0, sl
   14d0c:	bl	125c4 <g_hash_table_iter_init@plt>
   14d10:	mov	r3, #0
   14d14:	str	r3, [sp, #8]
   14d18:	add	r2, sp, #28
   14d1c:	add	r1, sp, #24
   14d20:	mov	r0, sl
   14d24:	bl	125b8 <g_hash_table_iter_next@plt>
   14d28:	cmp	r0, #0
   14d2c:	beq	1534c <g_type_class_adjust_private_offset@plt+0x29bc>
   14d30:	ldr	r3, [sp, #28]
   14d34:	ldr	r5, [sp, #24]
   14d38:	cmp	r3, #0
   14d3c:	bne	14d50 <g_type_class_adjust_private_offset@plt+0x23c0>
   14d40:	b	1523c <g_type_class_adjust_private_offset@plt+0x28ac>
   14d44:	ldr	r3, [r3, #4]
   14d48:	cmp	r3, #0
   14d4c:	beq	1523c <g_type_class_adjust_private_offset@plt+0x28ac>
   14d50:	ldr	r2, [r3]
   14d54:	ldr	r2, [r2, #4]
   14d58:	cmp	r2, #0
   14d5c:	beq	14d44 <g_type_class_adjust_private_offset@plt+0x23b4>
   14d60:	mov	r1, r7
   14d64:	mov	r0, r5
   14d68:	bl	1293c <strcmp@plt>
   14d6c:	cmp	r0, #0
   14d70:	beq	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   14d74:	mov	r3, fp
   14d78:	mov	r2, r7
   14d7c:	mov	r1, r8
   14d80:	ldr	r0, [pc, #3480]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   14d84:	bl	12378 <g_dbus_message_new_method_call@plt>
   14d88:	mov	r1, r5
   14d8c:	mov	r9, r0
   14d90:	ldr	r0, [pc, #3252]	; 15a4c <g_type_class_adjust_private_offset@plt+0x30bc>
   14d94:	bl	125f4 <g_variant_new_printf@plt>
   14d98:	mov	r1, #1
   14d9c:	str	r0, [sp, #32]
   14da0:	add	r0, sp, #32
   14da4:	bl	12768 <g_variant_new_tuple@plt>
   14da8:	mov	r1, r0
   14dac:	mov	r0, r9
   14db0:	bl	12330 <g_dbus_message_set_body@plt>
   14db4:	mov	r1, r9
   14db8:	mov	r2, #3
   14dbc:	mov	r0, r4
   14dc0:	bl	13830 <g_type_class_adjust_private_offset@plt+0xea0>
   14dc4:	ldr	r3, [r4, #12]
   14dc8:	ldr	r3, [r3, #20]
   14dcc:	cmp	r3, #0
   14dd0:	moveq	r3, #1
   14dd4:	streq	r3, [sp, #8]
   14dd8:	beq	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   14ddc:	mov	r3, r5
   14de0:	ldr	r2, [pc, #3176]	; 15a50 <g_type_class_adjust_private_offset@plt+0x30c0>
   14de4:	ldr	r1, [r4, #192]	; 0xc0
   14de8:	ldr	r0, [pc, #3172]	; 15a54 <g_type_class_adjust_private_offset@plt+0x30c4>
   14dec:	bl	123a8 <g_print@plt>
   14df0:	mov	r3, #1
   14df4:	str	r3, [sp, #8]
   14df8:	b	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   14dfc:	ldr	r3, [r5, #8]
   14e00:	ldr	fp, [r9, #52]	; 0x34
   14e04:	add	sl, r3, #24
   14e08:	cmp	r5, sl
   14e0c:	addeq	sl, r3, #104	; 0x68
   14e10:	mov	r1, fp
   14e14:	ldr	r0, [sl, #76]	; 0x4c
   14e18:	bl	127b0 <g_hash_table_lookup@plt>
   14e1c:	subs	r3, r0, #0
   14e20:	str	r3, [sp, #8]
   14e24:	beq	14bd8 <g_type_class_adjust_private_offset@plt+0x2248>
   14e28:	mov	r1, fp
   14e2c:	ldr	r0, [sl, #76]	; 0x4c
   14e30:	bl	124a4 <g_hash_table_remove@plt>
   14e34:	ldr	r3, [sp, #8]
   14e38:	sub	r2, r3, #1
   14e3c:	cmp	r2, #6
   14e40:	ldrls	pc, [pc, r2, lsl #2]
   14e44:	b	16140 <g_type_class_adjust_private_offset@plt+0x37b0>
   14e48:	andeq	r4, r1, r4, lsl #31
   14e4c:	andeq	r5, r1, r8, asr r0
   14e50:			; <UNDEFINED> instruction: 0x000151bc
   14e54:	andeq	r5, r1, r4, asr r1
   14e58:	ldrdeq	r5, [r1], -r8
   14e5c:	muleq	r1, r4, r0
   14e60:	strdeq	r4, [r1], -ip
   14e64:	ldrb	r3, [r9, #8]
   14e68:	sub	r3, r3, #1
   14e6c:	cmp	r3, #3
   14e70:	ldrls	pc, [pc, r3, lsl #2]
   14e74:	b	16164 <g_type_class_adjust_private_offset@plt+0x37d4>
   14e78:	andeq	r4, r1, r4, lsr pc
   14e7c:	andeq	r4, r1, r0, lsl pc
   14e80:	ldrdeq	r4, [r1], -r8
   14e84:	andeq	r4, r1, r8, lsl #29
   14e88:	ldr	ip, [r9, #28]
   14e8c:	ldr	r0, [r9, #20]
   14e90:	ldr	lr, [pc, #3008]	; 15a58 <g_type_class_adjust_private_offset@plt+0x30c8>
   14e94:	ldr	r3, [r9, #24]
   14e98:	cmp	ip, #0
   14e9c:	ldr	r2, [r9, #40]	; 0x28
   14ea0:	moveq	ip, lr
   14ea4:	cmp	r0, #0
   14ea8:	moveq	r0, lr
   14eac:	ldr	sl, [pc, #2984]	; 15a5c <g_type_class_adjust_private_offset@plt+0x30cc>
   14eb0:	cmp	r3, #0
   14eb4:	moveq	r3, lr
   14eb8:	cmp	r2, #0
   14ebc:	ldr	r1, [r9, #16]
   14ec0:	moveq	r2, sl
   14ec4:	str	r0, [sp, #4]
   14ec8:	str	ip, [sp]
   14ecc:	ldr	r0, [pc, #2956]	; 15a60 <g_type_class_adjust_private_offset@plt+0x30d0>
   14ed0:	bl	123a8 <g_print@plt>
   14ed4:	b	14b7c <g_type_class_adjust_private_offset@plt+0x21ec>
   14ed8:	ldr	r2, [r9, #40]	; 0x28
   14edc:	ldr	r0, [pc, #2936]	; 15a5c <g_type_class_adjust_private_offset@plt+0x30cc>
   14ee0:	ldr	r3, [r9, #32]
   14ee4:	cmp	r2, #0
   14ee8:	moveq	r2, r0
   14eec:	ldr	ip, [pc, #2928]	; 15a64 <g_type_class_adjust_private_offset@plt+0x30d4>
   14ef0:	ldr	r0, [r9, #52]	; 0x34
   14ef4:	cmp	r3, #0
   14ef8:	ldr	r1, [r9, #16]
   14efc:	moveq	r3, ip
   14f00:	str	r0, [sp]
   14f04:	ldr	r0, [pc, #2908]	; 15a68 <g_type_class_adjust_private_offset@plt+0x30d8>
   14f08:	bl	123a8 <g_print@plt>
   14f0c:	b	14b7c <g_type_class_adjust_private_offset@plt+0x21ec>
   14f10:	ldr	r2, [r9, #40]	; 0x28
   14f14:	ldr	r1, [pc, #2880]	; 15a5c <g_type_class_adjust_private_offset@plt+0x30cc>
   14f18:	cmp	r2, #0
   14f1c:	moveq	r2, r1
   14f20:	ldr	r3, [r9, #52]	; 0x34
   14f24:	ldr	r1, [r9, #16]
   14f28:	ldr	r0, [pc, #2876]	; 15a6c <g_type_class_adjust_private_offset@plt+0x30dc>
   14f2c:	bl	123a8 <g_print@plt>
   14f30:	b	14b7c <g_type_class_adjust_private_offset@plt+0x21ec>
   14f34:	ldr	ip, [r9, #28]
   14f38:	ldr	r0, [r9, #20]
   14f3c:	ldr	lr, [pc, #2836]	; 15a58 <g_type_class_adjust_private_offset@plt+0x30c8>
   14f40:	ldr	r3, [r9, #24]
   14f44:	cmp	ip, #0
   14f48:	ldr	r2, [r9, #40]	; 0x28
   14f4c:	moveq	ip, lr
   14f50:	cmp	r0, #0
   14f54:	moveq	r0, lr
   14f58:	ldr	sl, [pc, #2812]	; 15a5c <g_type_class_adjust_private_offset@plt+0x30cc>
   14f5c:	cmp	r3, #0
   14f60:	moveq	r3, lr
   14f64:	cmp	r2, #0
   14f68:	ldr	r1, [r9, #16]
   14f6c:	moveq	r2, sl
   14f70:	str	r0, [sp, #4]
   14f74:	str	ip, [sp]
   14f78:	ldr	r0, [pc, #2800]	; 15a70 <g_type_class_adjust_private_offset@plt+0x30e0>
   14f7c:	bl	123a8 <g_print@plt>
   14f80:	b	14b7c <g_type_class_adjust_private_offset@plt+0x21ec>
   14f84:	ldrb	r3, [r9, #8]
   14f88:	cmp	r3, #4
   14f8c:	bne	14ba0 <g_type_class_adjust_private_offset@plt+0x2210>
   14f90:	ldr	r3, [r9, #36]	; 0x24
   14f94:	cmp	r3, #0
   14f98:	bne	14ba0 <g_type_class_adjust_private_offset@plt+0x2210>
   14f9c:	mov	r3, #0
   14fa0:	ldr	r1, [r9, #40]	; 0x28
   14fa4:	add	r2, sp, #36	; 0x24
   14fa8:	mov	r0, r4
   14fac:	str	r3, [sp, #36]	; 0x24
   14fb0:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   14fb4:	cmp	r0, #3
   14fb8:	beq	14fe8 <g_type_class_adjust_private_offset@plt+0x2658>
   14fbc:	cmp	r0, #2
   14fc0:	beq	15cb0 <g_type_class_adjust_private_offset@plt+0x3320>
   14fc4:	ldr	r3, [r4, #12]
   14fc8:	ldr	r3, [r3, #20]
   14fcc:	cmp	r3, #0
   14fd0:	bne	15d10 <g_type_class_adjust_private_offset@plt+0x3380>
   14fd4:	cmp	r7, #0
   14fd8:	beq	14fe8 <g_type_class_adjust_private_offset@plt+0x2658>
   14fdc:	mov	r0, r7
   14fe0:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   14fe4:	mov	r7, #0
   14fe8:	ldr	r0, [sp, #36]	; 0x24
   14fec:	cmp	r0, #0
   14ff0:	beq	14ba0 <g_type_class_adjust_private_offset@plt+0x2210>
   14ff4:	bl	12444 <g_list_free@plt>
   14ff8:	b	14ba0 <g_type_class_adjust_private_offset@plt+0x2210>
   14ffc:	ldr	r1, [r9, #52]	; 0x34
   15000:	ldr	r0, [r4, #196]	; 0xc4
   15004:	bl	127b0 <g_hash_table_lookup@plt>
   15008:	ldr	r3, [r4, #12]
   1500c:	ldr	r3, [r3, #20]
   15010:	cmp	r3, #0
   15014:	mov	sl, r0
   15018:	bne	15bec <g_type_class_adjust_private_offset@plt+0x325c>
   1501c:	ldr	r1, [r9, #16]
   15020:	mov	r0, sl
   15024:	bl	12930 <g_dbus_message_set_serial@plt>
   15028:	cmp	r7, #0
   1502c:	beq	15038 <g_type_class_adjust_private_offset@plt+0x26a8>
   15030:	mov	r0, r7
   15034:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15038:	mov	r0, sl
   1503c:	bl	137a8 <g_type_class_adjust_private_offset@plt+0xe18>
   15040:	ldr	r1, [r9, #52]	; 0x34
   15044:	mov	r7, r0
   15048:	ldr	r0, [r4, #196]	; 0xc4
   1504c:	bl	124a4 <g_hash_table_remove@plt>
   15050:	ldrb	r3, [r9, #8]
   15054:	b	14f88 <g_type_class_adjust_private_offset@plt+0x25f8>
   15058:	ldrb	sl, [r9, #8]
   1505c:	cmp	sl, #2
   15060:	bne	14ffc <g_type_class_adjust_private_offset@plt+0x266c>
   15064:	mov	r0, r7
   15068:	bl	13974 <g_type_class_adjust_private_offset@plt+0xfe4>
   1506c:	mov	r1, r0
   15070:	mov	fp, r0
   15074:	ldr	r0, [r4, #204]	; 0xcc
   15078:	bl	127b0 <g_hash_table_lookup@plt>
   1507c:	cmp	r0, #1
   15080:	bls	15ec4 <g_type_class_adjust_private_offset@plt+0x3534>
   15084:	mov	r0, fp
   15088:	bl	12294 <g_free@plt>
   1508c:	ldrb	r3, [r9, #8]
   15090:	b	14f88 <g_type_class_adjust_private_offset@plt+0x25f8>
   15094:	ldrb	r3, [r9, #8]
   15098:	cmp	r3, #2
   1509c:	bne	14f88 <g_type_class_adjust_private_offset@plt+0x25f8>
   150a0:	mov	r0, r7
   150a4:	mov	r3, #0
   150a8:	ldr	r1, [r0], #20
   150ac:	mov	r2, r3
   150b0:	bl	12660 <g_dbus_message_new_from_blob@plt>
   150b4:	subs	sl, r0, #0
   150b8:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   150bc:	bl	122c4 <g_dbus_message_get_body@plt>
   150c0:	cmp	r0, #0
   150c4:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   150c8:	mov	r1, #0
   150cc:	bl	12504 <g_variant_get_child_value@plt>
   150d0:	subs	fp, r0, #0
   150d4:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   150d8:	ldr	r1, [pc, #2620]	; 15b1c <g_type_class_adjust_private_offset@plt+0x318c>
   150dc:	bl	12318 <g_variant_is_of_type@plt>
   150e0:	cmp	r0, #0
   150e4:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   150e8:	mov	r0, fp
   150ec:	mov	r1, #0
   150f0:	bl	127d4 <g_variant_get_strv@plt>
   150f4:	ldr	r1, [pc, #2592]	; 15b1c <g_type_class_adjust_private_offset@plt+0x318c>
   150f8:	mov	fp, r0
   150fc:	add	r0, sp, #60	; 0x3c
   15100:	bl	123cc <g_variant_builder_init@plt>
   15104:	ldr	r1, [fp]
   15108:	cmp	r1, #0
   1510c:	movne	r3, fp
   15110:	strne	r5, [sp, #8]
   15114:	movne	r5, r3
   15118:	bne	1512c <g_type_class_adjust_private_offset@plt+0x279c>
   1511c:	b	15e70 <g_type_class_adjust_private_offset@plt+0x34e0>
   15120:	ldr	r1, [r5, #4]!
   15124:	cmp	r1, #0
   15128:	beq	15e6c <g_type_class_adjust_private_offset@plt+0x34dc>
   1512c:	mov	r2, #0
   15130:	mov	r0, r4
   15134:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   15138:	cmp	r0, #0
   1513c:	beq	15120 <g_type_class_adjust_private_offset@plt+0x2790>
   15140:	ldr	r2, [r5]
   15144:	ldr	r1, [pc, #2480]	; 15afc <g_type_class_adjust_private_offset@plt+0x316c>
   15148:	add	r0, sp, #60	; 0x3c
   1514c:	bl	12390 <g_variant_builder_add@plt>
   15150:	b	15120 <g_type_class_adjust_private_offset@plt+0x2790>
   15154:	ldr	r1, [r9, #52]	; 0x34
   15158:	ldr	r0, [r4, #200]	; 0xc8
   1515c:	bl	127b0 <g_hash_table_lookup@plt>
   15160:	ldrb	r3, [r9, #8]
   15164:	cmp	r3, #2
   15168:	mov	fp, r0
   1516c:	beq	15d1c <g_type_class_adjust_private_offset@plt+0x338c>
   15170:	ldr	r1, [r9, #52]	; 0x34
   15174:	ldr	r0, [r4, #200]	; 0xc8
   15178:	bl	124a4 <g_hash_table_remove@plt>
   1517c:	ldr	r3, [r4, #12]
   15180:	ldr	r3, [r3, #20]
   15184:	cmp	r3, #0
   15188:	bne	151cc <g_type_class_adjust_private_offset@plt+0x283c>
   1518c:	cmp	r7, #0
   15190:	beq	1519c <g_type_class_adjust_private_offset@plt+0x280c>
   15194:	mov	r0, r7
   15198:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   1519c:	ldrb	r3, [r9, #8]
   151a0:	cmp	r3, #4
   151a4:	bne	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   151a8:	ldr	r3, [r9, #36]	; 0x24
   151ac:	cmp	r3, #0
   151b0:	moveq	r7, #0
   151b4:	bne	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   151b8:	b	14f9c <g_type_class_adjust_private_offset@plt+0x260c>
   151bc:	ldr	r3, [r4, #12]
   151c0:	ldr	r3, [r3, #20]
   151c4:	cmp	r3, #0
   151c8:	beq	1518c <g_type_class_adjust_private_offset@plt+0x27fc>
   151cc:	ldr	r0, [pc, #2360]	; 15b0c <g_type_class_adjust_private_offset@plt+0x317c>
   151d0:	bl	123a8 <g_print@plt>
   151d4:	b	1518c <g_type_class_adjust_private_offset@plt+0x27fc>
   151d8:	mov	r0, r7
   151dc:	mov	r3, #0
   151e0:	mov	r2, r3
   151e4:	ldr	r1, [r0], #20
   151e8:	bl	12660 <g_dbus_message_new_from_blob@plt>
   151ec:	subs	r3, r0, #0
   151f0:	str	r3, [sp, #8]
   151f4:	beq	15204 <g_type_class_adjust_private_offset@plt+0x2874>
   151f8:	ldrb	r3, [r9, #8]
   151fc:	cmp	r3, #2
   15200:	beq	15d60 <g_type_class_adjust_private_offset@plt+0x33d0>
   15204:	ldr	r0, [sp, #8]
   15208:	bl	123f0 <g_object_unref@plt>
   1520c:	ldr	r3, [r4, #12]
   15210:	ldr	r3, [r3, #20]
   15214:	cmp	r3, #0
   15218:	bne	15c9c <g_type_class_adjust_private_offset@plt+0x330c>
   1521c:	mov	r0, r7
   15220:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15224:	mov	r0, r8
   15228:	bl	1325c <g_type_class_adjust_private_offset@plt+0x8cc>
   1522c:	ldrb	r3, [r9, #8]
   15230:	cmp	r3, #4
   15234:	bne	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15238:	b	151a8 <g_type_class_adjust_private_offset@plt+0x2818>
   1523c:	mov	r1, r7
   15240:	mov	r0, r5
   15244:	bl	1293c <strcmp@plt>
   15248:	cmp	r0, #0
   1524c:	beq	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   15250:	mov	r3, fp
   15254:	mov	r2, r7
   15258:	mov	r1, r8
   1525c:	ldr	r0, [pc, #2236]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   15260:	bl	12378 <g_dbus_message_new_method_call@plt>
   15264:	mov	r1, r5
   15268:	mov	r9, r0
   1526c:	ldr	r0, [pc, #2048]	; 15a74 <g_type_class_adjust_private_offset@plt+0x30e4>
   15270:	bl	125f4 <g_variant_new_printf@plt>
   15274:	mov	r1, #1
   15278:	str	r0, [sp, #32]
   1527c:	add	r0, sp, #32
   15280:	bl	12768 <g_variant_new_tuple@plt>
   15284:	mov	r1, r0
   15288:	mov	r0, r9
   1528c:	bl	12330 <g_dbus_message_set_body@plt>
   15290:	mov	r1, r9
   15294:	mov	r2, #3
   15298:	mov	r0, r4
   1529c:	bl	13830 <g_type_class_adjust_private_offset@plt+0xea0>
   152a0:	ldr	r3, [r4, #12]
   152a4:	ldr	r3, [r3, #20]
   152a8:	cmp	r3, #0
   152ac:	beq	152c4 <g_type_class_adjust_private_offset@plt+0x2934>
   152b0:	mov	r3, r5
   152b4:	ldr	r2, [pc, #1948]	; 15a58 <g_type_class_adjust_private_offset@plt+0x30c8>
   152b8:	ldr	r1, [r4, #192]	; 0xc0
   152bc:	ldr	r0, [pc, #1936]	; 15a54 <g_type_class_adjust_private_offset@plt+0x30c4>
   152c0:	bl	123a8 <g_print@plt>
   152c4:	ldr	r3, [pc, #2136]	; 15b24 <g_type_class_adjust_private_offset@plt+0x3194>
   152c8:	mov	r2, r7
   152cc:	mov	r1, r8
   152d0:	ldr	r0, [pc, #2120]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   152d4:	bl	12378 <g_dbus_message_new_method_call@plt>
   152d8:	mov	r1, r5
   152dc:	mov	r9, r0
   152e0:	ldr	r0, [pc, #2116]	; 15b2c <g_type_class_adjust_private_offset@plt+0x319c>
   152e4:	bl	12954 <g_variant_new@plt>
   152e8:	mov	r1, r0
   152ec:	mov	r0, r9
   152f0:	bl	12330 <g_dbus_message_set_body@plt>
   152f4:	mov	r1, r9
   152f8:	mov	r2, #4
   152fc:	mov	r0, r4
   15300:	bl	13830 <g_type_class_adjust_private_offset@plt+0xea0>
   15304:	ldr	r1, [r4, #192]	; 0xc0
   15308:	mov	r0, r5
   1530c:	ldr	r9, [r4, #200]	; 0xc8
   15310:	str	r1, [sp, #12]
   15314:	bl	12420 <g_strdup@plt>
   15318:	ldr	r1, [sp, #12]
   1531c:	mov	r2, r0
   15320:	mov	r0, r9
   15324:	bl	12738 <g_hash_table_replace@plt>
   15328:	ldr	r3, [r4, #12]
   1532c:	ldr	r3, [r3, #20]
   15330:	cmp	r3, #0
   15334:	beq	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   15338:	mov	r2, r5
   1533c:	ldr	r1, [r4, #192]	; 0xc0
   15340:	ldr	r0, [pc, #2024]	; 15b30 <g_type_class_adjust_private_offset@plt+0x31a0>
   15344:	bl	123a8 <g_print@plt>
   15348:	b	14d18 <g_type_class_adjust_private_offset@plt+0x2388>
   1534c:	ldr	r3, [sp, #8]
   15350:	cmp	r3, #0
   15354:	beq	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   15358:	ldr	r2, [pc, #1984]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   1535c:	ldr	r3, [pc, #1812]	; 15a78 <g_type_class_adjust_private_offset@plt+0x30e8>
   15360:	mov	r0, r2
   15364:	ldr	r1, [pc, #1980]	; 15b28 <g_type_class_adjust_private_offset@plt+0x3198>
   15368:	bl	12378 <g_dbus_message_new_method_call@plt>
   1536c:	mov	r5, r0
   15370:	ldr	r0, [pc, #1796]	; 15a7c <g_type_class_adjust_private_offset@plt+0x30ec>
   15374:	bl	12954 <g_variant_new@plt>
   15378:	mov	r1, r0
   1537c:	mov	r0, r5
   15380:	bl	12330 <g_dbus_message_set_body@plt>
   15384:	mov	r1, r5
   15388:	mov	r2, #5
   1538c:	mov	r0, r4
   15390:	bl	13830 <g_type_class_adjust_private_offset@plt+0xea0>
   15394:	ldr	r3, [r4, #12]
   15398:	ldr	r3, [r3, #20]
   1539c:	cmp	r3, #0
   153a0:	bne	159dc <g_type_class_adjust_private_offset@plt+0x304c>
   153a4:	ldr	r0, [r4, #40]	; 0x28
   153a8:	cmp	r0, #0
   153ac:	beq	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   153b0:	bl	12840 <g_source_destroy@plt>
   153b4:	mov	r3, #0
   153b8:	str	r3, [r4, #40]	; 0x28
   153bc:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   153c0:	ldr	r2, [pc, #1720]	; 15a80 <g_type_class_adjust_private_offset@plt+0x30f0>
   153c4:	mov	r1, #16
   153c8:	bl	12924 <g_log@plt>
   153cc:	mov	r0, r7
   153d0:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   153d4:	mov	r0, r5
   153d8:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   153dc:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   153e0:	ldr	r3, [r4, #12]
   153e4:	ldr	r3, [r3, #20]
   153e8:	cmp	r3, #0
   153ec:	bne	159d0 <g_type_class_adjust_private_offset@plt+0x3040>
   153f0:	cmp	r7, #0
   153f4:	beq	15968 <g_type_class_adjust_private_offset@plt+0x2fd8>
   153f8:	mov	r0, r7
   153fc:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15400:	ldrb	r3, [r9, #8]
   15404:	cmp	r3, #4
   15408:	bne	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   1540c:	mov	r7, #0
   15410:	ldr	r1, [pc, #1800]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   15414:	ldr	r0, [r9, #40]	; 0x28
   15418:	bl	12408 <g_strcmp0@plt>
   1541c:	cmp	r0, #0
   15420:	bne	14f84 <g_type_class_adjust_private_offset@plt+0x25f4>
   15424:	ldr	r1, [pc, #1780]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   15428:	ldr	r0, [r9, #24]
   1542c:	bl	12408 <g_strcmp0@plt>
   15430:	cmp	r0, #0
   15434:	bne	14f84 <g_type_class_adjust_private_offset@plt+0x25f4>
   15438:	ldr	r1, [pc, #1604]	; 15a84 <g_type_class_adjust_private_offset@plt+0x30f4>
   1543c:	ldr	r0, [r9, #28]
   15440:	bl	12408 <g_strcmp0@plt>
   15444:	subs	sl, r0, #0
   15448:	bne	14f84 <g_type_class_adjust_private_offset@plt+0x25f4>
   1544c:	mov	r0, r7
   15450:	mov	r3, sl
   15454:	ldr	r1, [r0], #20
   15458:	mov	r2, sl
   1545c:	bl	12660 <g_dbus_message_new_from_blob@plt>
   15460:	subs	fp, r0, #0
   15464:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   15468:	bl	122c4 <g_dbus_message_get_body@plt>
   1546c:	subs	r3, r0, #0
   15470:	str	r3, [sp, #8]
   15474:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   15478:	mov	r1, sl
   1547c:	bl	12504 <g_variant_get_child_value@plt>
   15480:	subs	sl, r0, #0
   15484:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   15488:	ldr	r1, [pc, #1644]	; 15afc <g_type_class_adjust_private_offset@plt+0x316c>
   1548c:	bl	12318 <g_variant_is_of_type@plt>
   15490:	cmp	r0, #0
   15494:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   15498:	mov	r1, #1
   1549c:	ldr	r0, [sp, #8]
   154a0:	bl	12504 <g_variant_get_child_value@plt>
   154a4:	cmp	r0, #0
   154a8:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   154ac:	ldr	r1, [pc, #1608]	; 15afc <g_type_class_adjust_private_offset@plt+0x316c>
   154b0:	bl	12318 <g_variant_is_of_type@plt>
   154b4:	cmp	r0, #0
   154b8:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   154bc:	ldr	r0, [sp, #8]
   154c0:	mov	r1, #2
   154c4:	bl	12504 <g_variant_get_child_value@plt>
   154c8:	subs	r3, r0, #0
   154cc:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   154d0:	ldr	r1, [pc, #1572]	; 15afc <g_type_class_adjust_private_offset@plt+0x316c>
   154d4:	mov	r0, r3
   154d8:	str	r3, [sp, #8]
   154dc:	bl	12318 <g_variant_is_of_type@plt>
   154e0:	cmp	r0, #0
   154e4:	beq	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   154e8:	mov	r0, sl
   154ec:	mov	r1, #0
   154f0:	bl	12984 <g_variant_get_string@plt>
   154f4:	mov	r1, #0
   154f8:	mov	sl, r0
   154fc:	ldr	r0, [sp, #8]
   15500:	bl	12984 <g_variant_get_string@plt>
   15504:	mov	r1, sl
   15508:	mov	r2, #0
   1550c:	str	r0, [sp, #8]
   15510:	mov	r0, r4
   15514:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   15518:	ldr	r3, [sp, #8]
   1551c:	cmp	r0, #0
   15520:	bne	15f50 <g_type_class_adjust_private_offset@plt+0x35c0>
   15524:	ldr	r3, [r4, #12]
   15528:	ldr	r3, [r3, #40]	; 0x28
   1552c:	cmp	r3, #0
   15530:	beq	15540 <g_type_class_adjust_private_offset@plt+0x2bb0>
   15534:	ldrb	r3, [sl]
   15538:	cmp	r3, #58	; 0x3a
   1553c:	beq	15f68 <g_type_class_adjust_private_offset@plt+0x35d8>
   15540:	mov	r0, fp
   15544:	bl	123f0 <g_object_unref@plt>
   15548:	b	15194 <g_type_class_adjust_private_offset@plt+0x2804>
   1554c:	ldrb	r3, [r9, #9]
   15550:	tst	r3, #1
   15554:	bne	14bcc <g_type_class_adjust_private_offset@plt+0x223c>
   15558:	ldr	r0, [r5, #76]	; 0x4c
   1555c:	ldr	r1, [r9, #16]
   15560:	bl	12738 <g_hash_table_replace@plt>
   15564:	b	14bcc <g_type_class_adjust_private_offset@plt+0x223c>
   15568:	ldrb	r3, [r9, #8]
   1556c:	cmp	r3, #1
   15570:	beq	15d44 <g_type_class_adjust_private_offset@plt+0x33b4>
   15574:	mov	r0, r9
   15578:	bl	14704 <g_type_class_adjust_private_offset@plt+0x1d74>
   1557c:	cmp	r0, #0
   15580:	beq	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   15584:	ldr	fp, [r9, #28]
   15588:	cmp	fp, #0
   1558c:	beq	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   15590:	ldr	r1, [pc, #1200]	; 15a48 <g_type_class_adjust_private_offset@plt+0x30b8>
   15594:	mov	r0, fp
   15598:	bl	1293c <strcmp@plt>
   1559c:	cmp	r0, #0
   155a0:	beq	15b50 <g_type_class_adjust_private_offset@plt+0x31c0>
   155a4:	ldr	r1, [pc, #1244]	; 15a88 <g_type_class_adjust_private_offset@plt+0x30f8>
   155a8:	mov	r0, fp
   155ac:	bl	1293c <strcmp@plt>
   155b0:	cmp	r0, #0
   155b4:	beq	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   155b8:	ldr	r1, [pc, #1228]	; 15a8c <g_type_class_adjust_private_offset@plt+0x30fc>
   155bc:	mov	r0, fp
   155c0:	bl	1293c <strcmp@plt>
   155c4:	cmp	r0, #0
   155c8:	beq	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   155cc:	ldr	r1, [pc, #1212]	; 15a90 <g_type_class_adjust_private_offset@plt+0x3100>
   155d0:	mov	r0, fp
   155d4:	bl	1293c <strcmp@plt>
   155d8:	cmp	r0, #0
   155dc:	beq	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   155e0:	ldr	r1, [pc, #1196]	; 15a94 <g_type_class_adjust_private_offset@plt+0x3104>
   155e4:	mov	r0, fp
   155e8:	bl	1293c <strcmp@plt>
   155ec:	cmp	r0, #0
   155f0:	beq	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   155f4:	ldr	r1, [pc, #1180]	; 15a98 <g_type_class_adjust_private_offset@plt+0x3108>
   155f8:	mov	r0, fp
   155fc:	bl	1293c <strcmp@plt>
   15600:	cmp	r0, #0
   15604:	beq	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   15608:	ldr	r1, [pc, #1164]	; 15a9c <g_type_class_adjust_private_offset@plt+0x310c>
   1560c:	mov	r0, fp
   15610:	bl	1293c <strcmp@plt>
   15614:	cmp	r0, #0
   15618:	beq	15f8c <g_type_class_adjust_private_offset@plt+0x35fc>
   1561c:	ldr	r1, [pc, #1148]	; 15aa0 <g_type_class_adjust_private_offset@plt+0x3110>
   15620:	mov	r0, fp
   15624:	bl	1293c <strcmp@plt>
   15628:	cmp	r0, #0
   1562c:	beq	15f8c <g_type_class_adjust_private_offset@plt+0x35fc>
   15630:	ldr	r1, [pc, #1132]	; 15aa4 <g_type_class_adjust_private_offset@plt+0x3114>
   15634:	mov	r0, fp
   15638:	bl	1293c <strcmp@plt>
   1563c:	cmp	r0, #0
   15640:	beq	15f8c <g_type_class_adjust_private_offset@plt+0x35fc>
   15644:	ldr	r1, [pc, #1116]	; 15aa8 <g_type_class_adjust_private_offset@plt+0x3118>
   15648:	mov	r0, fp
   1564c:	bl	1293c <strcmp@plt>
   15650:	cmp	r0, #0
   15654:	beq	15fd4 <g_type_class_adjust_private_offset@plt+0x3644>
   15658:	ldr	r1, [pc, #1220]	; 15b24 <g_type_class_adjust_private_offset@plt+0x3194>
   1565c:	mov	r0, fp
   15660:	bl	1293c <strcmp@plt>
   15664:	cmp	r0, #0
   15668:	beq	16128 <g_type_class_adjust_private_offset@plt+0x3798>
   1566c:	ldr	r1, [pc, #1080]	; 15aac <g_type_class_adjust_private_offset@plt+0x311c>
   15670:	mov	r0, fp
   15674:	bl	1293c <strcmp@plt>
   15678:	cmp	r0, #0
   1567c:	beq	16110 <g_type_class_adjust_private_offset@plt+0x3780>
   15680:	ldr	r1, [pc, #1064]	; 15ab0 <g_type_class_adjust_private_offset@plt+0x3120>
   15684:	mov	r0, fp
   15688:	bl	1293c <strcmp@plt>
   1568c:	cmp	r0, #0
   15690:	beq	16110 <g_type_class_adjust_private_offset@plt+0x3780>
   15694:	ldr	r1, [pc, #1048]	; 15ab4 <g_type_class_adjust_private_offset@plt+0x3124>
   15698:	mov	r0, fp
   1569c:	bl	1293c <strcmp@plt>
   156a0:	cmp	r0, #0
   156a4:	beq	16110 <g_type_class_adjust_private_offset@plt+0x3780>
   156a8:	ldr	r1, [pc, #1032]	; 15ab8 <g_type_class_adjust_private_offset@plt+0x3128>
   156ac:	mov	r0, fp
   156b0:	bl	1293c <strcmp@plt>
   156b4:	cmp	r0, #0
   156b8:	beq	16110 <g_type_class_adjust_private_offset@plt+0x3780>
   156bc:	ldr	r1, [pc, #1016]	; 15abc <g_type_class_adjust_private_offset@plt+0x312c>
   156c0:	mov	r0, fp
   156c4:	bl	1293c <strcmp@plt>
   156c8:	cmp	r0, #0
   156cc:	beq	16110 <g_type_class_adjust_private_offset@plt+0x3780>
   156d0:	ldr	r1, [pc, #1000]	; 15ac0 <g_type_class_adjust_private_offset@plt+0x3130>
   156d4:	mov	r0, fp
   156d8:	bl	1293c <strcmp@plt>
   156dc:	cmp	r0, #0
   156e0:	beq	160f8 <g_type_class_adjust_private_offset@plt+0x3768>
   156e4:	ldr	r1, [pc, #908]	; 15a78 <g_type_class_adjust_private_offset@plt+0x30e8>
   156e8:	mov	r0, fp
   156ec:	bl	1293c <strcmp@plt>
   156f0:	cmp	r0, #0
   156f4:	beq	160c8 <g_type_class_adjust_private_offset@plt+0x3738>
   156f8:	ldr	r1, [pc, #964]	; 15ac4 <g_type_class_adjust_private_offset@plt+0x3134>
   156fc:	mov	r0, fp
   15700:	bl	1293c <strcmp@plt>
   15704:	cmp	r0, #0
   15708:	beq	160c8 <g_type_class_adjust_private_offset@plt+0x3738>
   1570c:	mov	r3, fp
   15710:	ldr	r2, [pc, #944]	; 15ac8 <g_type_class_adjust_private_offset@plt+0x3138>
   15714:	mov	r1, #16
   15718:	mov	r0, #0
   1571c:	bl	12924 <g_log@plt>
   15720:	ldr	r0, [sp, #36]	; 0x24
   15724:	cmp	r0, #0
   15728:	beq	15730 <g_type_class_adjust_private_offset@plt+0x2da0>
   1572c:	bl	12444 <g_list_free@plt>
   15730:	cmp	r7, #0
   15734:	beq	15740 <g_type_class_adjust_private_offset@plt+0x2db0>
   15738:	mov	r0, r7
   1573c:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15740:	ldrb	r2, [r9, #8]
   15744:	ldr	r3, [r4, #12]
   15748:	cmp	r2, #1
   1574c:	ldr	r3, [r3, #20]
   15750:	beq	15bf8 <g_type_class_adjust_private_offset@plt+0x3268>
   15754:	cmp	r3, #0
   15758:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   1575c:	ldr	r0, [pc, #872]	; 15acc <g_type_class_adjust_private_offset@plt+0x313c>
   15760:	bl	123a8 <g_print@plt>
   15764:	mov	r0, r9
   15768:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   1576c:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   15770:	add	sl, sp, #36	; 0x24
   15774:	mov	r2, sl
   15778:	ldr	r1, [r9, #36]	; 0x24
   1577c:	mov	r0, r4
   15780:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   15784:	subs	fp, r0, #0
   15788:	beq	159f8 <g_type_class_adjust_private_offset@plt+0x3068>
   1578c:	cmp	fp, #1
   15790:	bls	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   15794:	ldr	r1, [pc, #900]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   15798:	ldr	r0, [r9, #36]	; 0x24
   1579c:	bl	12408 <g_strcmp0@plt>
   157a0:	cmp	r0, #0
   157a4:	beq	15568 <g_type_class_adjust_private_offset@plt+0x2bd8>
   157a8:	cmp	fp, #3
   157ac:	beq	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   157b0:	ldr	sl, [sp, #36]	; 0x24
   157b4:	ldr	fp, [r9, #20]
   157b8:	cmp	sl, #0
   157bc:	ldr	r3, [r9, #24]
   157c0:	ldr	r2, [r9, #28]
   157c4:	beq	15730 <g_type_class_adjust_private_offset@plt+0x2da0>
   157c8:	str	r4, [sp, #8]
   157cc:	str	r9, [sp, #12]
   157d0:	mov	r4, r3
   157d4:	mov	r9, r2
   157d8:	b	157e8 <g_type_class_adjust_private_offset@plt+0x2e58>
   157dc:	ldr	sl, [sl, #4]
   157e0:	cmp	sl, #0
   157e4:	beq	15c74 <g_type_class_adjust_private_offset@plt+0x32e4>
   157e8:	ldr	r0, [sl]
   157ec:	mov	r3, r4
   157f0:	str	r9, [sp]
   157f4:	mov	r2, fp
   157f8:	mov	r1, #1
   157fc:	bl	136c4 <g_type_class_adjust_private_offset@plt+0xd34>
   15800:	cmp	r0, #0
   15804:	beq	157dc <g_type_class_adjust_private_offset@plt+0x2e4c>
   15808:	ldr	r4, [sp, #8]
   1580c:	ldr	r9, [sp, #12]
   15810:	b	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   15814:	ldr	r2, [pc, #612]	; 15a80 <g_type_class_adjust_private_offset@plt+0x30f0>
   15818:	mov	r1, #16
   1581c:	bl	12924 <g_log@plt>
   15820:	mov	r0, r8
   15824:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   15828:	mov	r0, r7
   1582c:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15830:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   15834:	ldr	r1, [pc, #588]	; 15a88 <g_type_class_adjust_private_offset@plt+0x30f8>
   15838:	ldr	r0, [r9, #28]
   1583c:	bl	12408 <g_strcmp0@plt>
   15840:	cmp	r0, #0
   15844:	bne	14c64 <g_type_class_adjust_private_offset@plt+0x22d4>
   15848:	ldr	r3, [r9, #16]
   1584c:	mov	r8, #2
   15850:	str	r3, [r4, #188]	; 0xbc
   15854:	b	14c68 <g_type_class_adjust_private_offset@plt+0x22d8>
   15858:	ldrb	r3, [r9, #8]
   1585c:	sub	r3, r3, #1
   15860:	cmp	r3, #3
   15864:	ldrls	pc, [pc, r3, lsl #2]
   15868:	b	16158 <g_type_class_adjust_private_offset@plt+0x37c8>
   1586c:	andeq	r5, r1, ip, lsl r9
   15870:	strdeq	r5, [r1], -ip
   15874:	andeq	r5, r1, r8, asr #17
   15878:	andeq	r5, r1, ip, ror r8
   1587c:	ldr	ip, [r9, #28]
   15880:	ldr	r0, [r9, #20]
   15884:	ldr	lr, [pc, #460]	; 15a58 <g_type_class_adjust_private_offset@plt+0x30c8>
   15888:	ldr	r3, [r9, #24]
   1588c:	cmp	ip, #0
   15890:	ldr	r2, [r9, #36]	; 0x24
   15894:	moveq	ip, lr
   15898:	cmp	r0, #0
   1589c:	moveq	r0, lr
   158a0:	ldr	r8, [pc, #552]	; 15ad0 <g_type_class_adjust_private_offset@plt+0x3140>
   158a4:	cmp	r3, #0
   158a8:	moveq	r3, lr
   158ac:	cmp	r2, #0
   158b0:	str	r0, [sp, #4]
   158b4:	str	ip, [sp]
   158b8:	moveq	r2, r8
   158bc:	ldr	r0, [pc, #528]	; 15ad4 <g_type_class_adjust_private_offset@plt+0x3144>
   158c0:	bl	123a8 <g_print@plt>
   158c4:	b	14c54 <g_type_class_adjust_private_offset@plt+0x22c4>
   158c8:	ldr	r2, [r9, #36]	; 0x24
   158cc:	ldr	r0, [pc, #516]	; 15ad8 <g_type_class_adjust_private_offset@plt+0x3148>
   158d0:	ldr	r3, [r9, #32]
   158d4:	cmp	r2, #0
   158d8:	moveq	r2, r0
   158dc:	ldr	ip, [pc, #384]	; 15a64 <g_type_class_adjust_private_offset@plt+0x30d4>
   158e0:	ldr	r0, [r9, #52]	; 0x34
   158e4:	cmp	r3, #0
   158e8:	str	r0, [sp]
   158ec:	moveq	r3, ip
   158f0:	ldr	r0, [pc, #484]	; 15adc <g_type_class_adjust_private_offset@plt+0x314c>
   158f4:	bl	123a8 <g_print@plt>
   158f8:	b	14c54 <g_type_class_adjust_private_offset@plt+0x22c4>
   158fc:	ldr	r2, [r9, #36]	; 0x24
   15900:	ldr	r3, [pc, #464]	; 15ad8 <g_type_class_adjust_private_offset@plt+0x3148>
   15904:	cmp	r2, #0
   15908:	moveq	r2, r3
   1590c:	ldr	r0, [pc, #460]	; 15ae0 <g_type_class_adjust_private_offset@plt+0x3150>
   15910:	ldr	r3, [r9, #52]	; 0x34
   15914:	bl	123a8 <g_print@plt>
   15918:	b	14c54 <g_type_class_adjust_private_offset@plt+0x22c4>
   1591c:	ldr	ip, [r9, #28]
   15920:	ldr	r0, [r9, #20]
   15924:	ldr	lr, [pc, #300]	; 15a58 <g_type_class_adjust_private_offset@plt+0x30c8>
   15928:	ldr	r3, [r9, #24]
   1592c:	cmp	ip, #0
   15930:	ldr	r2, [r9, #36]	; 0x24
   15934:	moveq	ip, lr
   15938:	cmp	r0, #0
   1593c:	moveq	r0, lr
   15940:	ldr	r8, [pc, #400]	; 15ad8 <g_type_class_adjust_private_offset@plt+0x3148>
   15944:	cmp	r3, #0
   15948:	moveq	r3, lr
   1594c:	cmp	r2, #0
   15950:	str	r0, [sp, #4]
   15954:	str	ip, [sp]
   15958:	moveq	r2, r8
   1595c:	ldr	r0, [pc, #384]	; 15ae4 <g_type_class_adjust_private_offset@plt+0x3154>
   15960:	bl	123a8 <g_print@plt>
   15964:	b	14c54 <g_type_class_adjust_private_offset@plt+0x22c4>
   15968:	ldrb	r3, [r9, #8]
   1596c:	cmp	r3, #4
   15970:	bne	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15974:	b	15410 <g_type_class_adjust_private_offset@plt+0x2a80>
   15978:	ldr	r2, [pc, #360]	; 15ae8 <g_type_class_adjust_private_offset@plt+0x3158>
   1597c:	mov	r1, #16
   15980:	mov	r0, #0
   15984:	bl	12924 <g_log@plt>
   15988:	mov	r0, r8
   1598c:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   15990:	mov	r0, r7
   15994:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15998:	b	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   1599c:	mov	r1, sl
   159a0:	ldr	r0, [r4, #204]	; 0xcc
   159a4:	bl	127b0 <g_hash_table_lookup@plt>
   159a8:	cmp	r0, #0
   159ac:	bne	14bc0 <g_type_class_adjust_private_offset@plt+0x2230>
   159b0:	mov	r0, sl
   159b4:	ldr	r4, [r4, #204]	; 0xcc
   159b8:	bl	12420 <g_strdup@plt>
   159bc:	mov	r2, #1
   159c0:	mov	r1, r0
   159c4:	mov	r0, r4
   159c8:	bl	12738 <g_hash_table_replace@plt>
   159cc:	b	14bc0 <g_type_class_adjust_private_offset@plt+0x2230>
   159d0:	ldr	r0, [pc, #276]	; 15aec <g_type_class_adjust_private_offset@plt+0x315c>
   159d4:	bl	123a8 <g_print@plt>
   159d8:	b	153f0 <g_type_class_adjust_private_offset@plt+0x2a60>
   159dc:	ldr	r1, [r4, #192]	; 0xc0
   159e0:	ldr	r0, [pc, #264]	; 15af0 <g_type_class_adjust_private_offset@plt+0x3160>
   159e4:	bl	123a8 <g_print@plt>
   159e8:	b	153a4 <g_type_class_adjust_private_offset@plt+0x2a14>
   159ec:	ldr	r0, [pc, #256]	; 15af4 <g_type_class_adjust_private_offset@plt+0x3164>
   159f0:	bl	123a8 <g_print@plt>
   159f4:	b	14be8 <g_type_class_adjust_private_offset@plt+0x2258>
   159f8:	ldr	r0, [sp, #36]	; 0x24
   159fc:	cmp	r0, #0
   15a00:	bne	16090 <g_type_class_adjust_private_offset@plt+0x3700>
   15a04:	cmp	r7, #0
   15a08:	beq	15a14 <g_type_class_adjust_private_offset@plt+0x3084>
   15a0c:	mov	r0, r7
   15a10:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15a14:	ldrb	r2, [r9, #8]
   15a18:	ldr	r3, [r4, #12]
   15a1c:	cmp	r2, #1
   15a20:	ldr	r3, [r3, #20]
   15a24:	beq	15c30 <g_type_class_adjust_private_offset@plt+0x32a0>
   15a28:	cmp	r3, #0
   15a2c:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15a30:	ldr	r0, [pc, #192]	; 15af8 <g_type_class_adjust_private_offset@plt+0x3168>
   15a34:	bl	123a8 <g_print@plt>
   15a38:	mov	r0, r9
   15a3c:	bl	13e4c <g_type_class_adjust_private_offset@plt+0x14bc>
   15a40:	b	14af8 <g_type_class_adjust_private_offset@plt+0x2168>
   15a44:	andeq	r8, r2, r0, ror ip
   15a48:	andeq	r7, r1, r8, lsl r6
   15a4c:	andeq	r7, r1, r8, asr #19
   15a50:			; <UNDEFINED> instruction: 0x000179bc
   15a54:	andeq	r7, r1, r4, lsl #19
   15a58:	andeq	r7, r1, r8, asr #23
   15a5c:	andeq	r7, r1, ip, lsl #10
   15a60:	ldrdeq	r7, [r1], -r4
   15a64:	andeq	r7, r1, r4, lsr #9
   15a68:	andeq	r7, r1, ip, lsr #17
   15a6c:	muleq	r1, r0, r8
   15a70:	andeq	r7, r1, r0, ror r8
   15a74:	andeq	r7, r1, r4, asr #20
   15a78:	andeq	r7, r1, r0, asr r7
   15a7c:	andeq	r7, r1, ip, lsr r8
   15a80:	andeq	r7, r1, r8, lsl r5
   15a84:	andeq	r7, r1, r0, ror #18
   15a88:	andeq	r7, r1, ip, ror #11
   15a8c:	andeq	r7, r1, r4, lsr #12
   15a90:	andeq	r7, r1, r0, lsr r6
   15a94:	andeq	r7, r1, r8, lsr r6
   15a98:	andeq	r7, r1, r4, asr r6
   15a9c:	andeq	r7, r1, r4, ror #12
   15aa0:	andeq	r7, r1, r0, ror r6
   15aa4:	andeq	r7, r1, ip, ror r6
   15aa8:	muleq	r1, r0, r6
   15aac:			; <UNDEFINED> instruction: 0x000176b0
   15ab0:	andeq	r7, r1, ip, asr #13
   15ab4:	andeq	r7, r1, r8, ror #13
   15ab8:	andeq	r7, r1, r0, lsl #14
   15abc:	andeq	r7, r1, r4, lsr #14
   15ac0:	andeq	r7, r1, ip, lsr r7
   15ac4:	andeq	r7, r1, ip, asr r7
   15ac8:	andeq	r7, r1, r4, ror r7
   15acc:	strdeq	r7, [r1], -r8
   15ad0:			; <UNDEFINED> instruction: 0x000174b0
   15ad4:			; <UNDEFINED> instruction: 0x000175b4
   15ad8:	muleq	r1, r8, r4
   15adc:	andeq	r7, r1, ip, lsl #11
   15ae0:	andeq	r7, r1, r0, ror r5
   15ae4:	andeq	r7, r1, r0, asr r5
   15ae8:	andeq	r7, r1, r8, lsr r5
   15aec:	andeq	r7, r1, ip, asr #18
   15af0:	andeq	r7, r1, r0, asr #16
   15af4:	strdeq	r7, [r1], -r4
   15af8:	andeq	r7, r1, r4, asr #15
   15afc:	andeq	r7, r1, r0, lsr fp
   15b00:	andeq	r7, r1, r8, lsl #18
   15b04:	ldrdeq	r7, [r1], -r0
   15b08:	andeq	r7, r1, r0, ror #9
   15b0c:	andeq	r7, r1, ip, lsl r9
   15b10:			; <UNDEFINED> instruction: 0x000174b4
   15b14:	andeq	r7, r1, r4, ror r9
   15b18:	strdeq	r7, [r1], -r4
   15b1c:	andeq	r7, r1, r8, lsl r9
   15b20:	strdeq	r7, [r1], -r8
   15b24:	andeq	r7, r1, r0, lsr #13
   15b28:	andeq	r7, r1, r8, ror r4
   15b2c:	andeq	r7, r1, ip, ror r4
   15b30:	andeq	r7, r1, r4, lsl #16
   15b34:	muleq	r1, r0, r7
   15b38:			; <UNDEFINED> instruction: 0x000177b0
   15b3c:	muleq	r1, ip, r7
   15b40:	strdeq	r7, [r1], -r0
   15b44:	andeq	r7, r1, ip, lsl #15
   15b48:	andeq	r7, r1, r8, lsr #18
   15b4c:	ldrdeq	r7, [r1], -r4
   15b50:	ldr	r0, [sp, #36]	; 0x24
   15b54:	cmp	r0, #0
   15b58:	bne	160c0 <g_type_class_adjust_private_offset@plt+0x3730>
   15b5c:	mov	r0, r7
   15b60:	mov	r3, #0
   15b64:	ldr	r1, [r0], #20
   15b68:	mov	r2, r3
   15b6c:	bl	12660 <g_dbus_message_new_from_blob@plt>
   15b70:	subs	sl, r0, #0
   15b74:	beq	15ba8 <g_type_class_adjust_private_offset@plt+0x3218>
   15b78:	bl	122c4 <g_dbus_message_get_body@plt>
   15b7c:	cmp	r0, #0
   15b80:	beq	15ba4 <g_type_class_adjust_private_offset@plt+0x3214>
   15b84:	mov	r1, #0
   15b88:	bl	12504 <g_variant_get_child_value@plt>
   15b8c:	subs	fp, r0, #0
   15b90:	beq	15ba4 <g_type_class_adjust_private_offset@plt+0x3214>
   15b94:	ldr	r1, [pc, #-160]	; 15afc <g_type_class_adjust_private_offset@plt+0x316c>
   15b98:	bl	12318 <g_variant_is_of_type@plt>
   15b9c:	cmp	r0, #0
   15ba0:	bne	15eec <g_type_class_adjust_private_offset@plt+0x355c>
   15ba4:	mov	r0, sl
   15ba8:	bl	123f0 <g_object_unref@plt>
   15bac:	ldrb	r3, [r9, #8]
   15bb0:	cmp	r3, #1
   15bb4:	bne	14cc4 <g_type_class_adjust_private_offset@plt+0x2334>
   15bb8:	ldrb	r3, [r9, #9]
   15bbc:	tst	r3, #1
   15bc0:	bne	14cbc <g_type_class_adjust_private_offset@plt+0x232c>
   15bc4:	cmp	r8, #0
   15bc8:	bne	15c90 <g_type_class_adjust_private_offset@plt+0x3300>
   15bcc:	cmp	r7, #0
   15bd0:	movne	r8, #1
   15bd4:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15bd8:	mov	r2, r8
   15bdc:	ldr	r0, [r5, #76]	; 0x4c
   15be0:	ldr	r1, [r9, #16]
   15be4:	bl	12738 <g_hash_table_replace@plt>
   15be8:	b	14ccc <g_type_class_adjust_private_offset@plt+0x233c>
   15bec:	ldr	r0, [pc, #-244]	; 15b00 <g_type_class_adjust_private_offset@plt+0x3170>
   15bf0:	bl	123a8 <g_print@plt>
   15bf4:	b	1501c <g_type_class_adjust_private_offset@plt+0x268c>
   15bf8:	ldrb	r2, [r9, #9]
   15bfc:	tst	r2, #1
   15c00:	bne	15754 <g_type_class_adjust_private_offset@plt+0x2dc4>
   15c04:	cmp	r3, #0
   15c08:	bne	15f44 <g_type_class_adjust_private_offset@plt+0x35b4>
   15c0c:	ldr	r2, [pc, #-272]	; 15b04 <g_type_class_adjust_private_offset@plt+0x3174>
   15c10:	mov	r1, r9
   15c14:	mov	r0, r4
   15c18:	bl	148f8 <g_type_class_adjust_private_offset@plt+0x1f68>
   15c1c:	subs	r7, r0, #0
   15c20:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15c24:	mov	r2, #7
   15c28:	mov	r8, r2
   15c2c:	b	15bdc <g_type_class_adjust_private_offset@plt+0x324c>
   15c30:	ldrb	r2, [r9, #9]
   15c34:	tst	r2, #1
   15c38:	bne	15a28 <g_type_class_adjust_private_offset@plt+0x3098>
   15c3c:	cmp	r3, #0
   15c40:	bne	15f38 <g_type_class_adjust_private_offset@plt+0x35a8>
   15c44:	ldr	r3, [r9, #36]	; 0x24
   15c48:	cmp	r3, #0
   15c4c:	beq	15c5c <g_type_class_adjust_private_offset@plt+0x32cc>
   15c50:	ldrb	r3, [r3]
   15c54:	cmp	r3, #58	; 0x3a
   15c58:	beq	15ca8 <g_type_class_adjust_private_offset@plt+0x3318>
   15c5c:	ldrb	r1, [r9, #9]
   15c60:	ldr	r3, [pc, #-352]	; 15b08 <g_type_class_adjust_private_offset@plt+0x3178>
   15c64:	ldr	r2, [pc, #-348]	; 15b10 <g_type_class_adjust_private_offset@plt+0x3180>
   15c68:	tst	r1, #2
   15c6c:	moveq	r2, r3
   15c70:	b	15c10 <g_type_class_adjust_private_offset@plt+0x3280>
   15c74:	ldr	r4, [sp, #8]
   15c78:	ldr	r9, [sp, #12]
   15c7c:	b	15720 <g_type_class_adjust_private_offset@plt+0x2d90>
   15c80:	ldrb	r3, [r9, #9]
   15c84:	tst	r3, #1
   15c88:	bne	160e4 <g_type_class_adjust_private_offset@plt+0x3754>
   15c8c:	mov	r8, #6
   15c90:	cmp	r7, #0
   15c94:	beq	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   15c98:	b	15bd8 <g_type_class_adjust_private_offset@plt+0x3248>
   15c9c:	ldr	r0, [pc, #-408]	; 15b0c <g_type_class_adjust_private_offset@plt+0x317c>
   15ca0:	bl	123a8 <g_print@plt>
   15ca4:	b	1521c <g_type_class_adjust_private_offset@plt+0x288c>
   15ca8:	ldr	r2, [pc, #-416]	; 15b10 <g_type_class_adjust_private_offset@plt+0x3180>
   15cac:	b	15c10 <g_type_class_adjust_private_offset@plt+0x3280>
   15cb0:	ldr	sl, [sp, #36]	; 0x24
   15cb4:	ldr	fp, [r9, #20]
   15cb8:	cmp	sl, #0
   15cbc:	ldr	r3, [r9, #24]
   15cc0:	ldr	r2, [r9, #28]
   15cc4:	beq	14fc4 <g_type_class_adjust_private_offset@plt+0x2634>
   15cc8:	str	r4, [sp, #8]
   15ccc:	str	r5, [sp, #12]
   15cd0:	mov	r4, r3
   15cd4:	mov	r5, r2
   15cd8:	b	15ce8 <g_type_class_adjust_private_offset@plt+0x3358>
   15cdc:	ldr	sl, [sl, #4]
   15ce0:	cmp	sl, #0
   15ce4:	beq	15e64 <g_type_class_adjust_private_offset@plt+0x34d4>
   15ce8:	ldr	r0, [sl]
   15cec:	mov	r3, r4
   15cf0:	str	r5, [sp]
   15cf4:	mov	r2, fp
   15cf8:	mov	r1, #2
   15cfc:	bl	136c4 <g_type_class_adjust_private_offset@plt+0xd34>
   15d00:	cmp	r0, #0
   15d04:	beq	15cdc <g_type_class_adjust_private_offset@plt+0x334c>
   15d08:	ldrd	r4, [sp, #8]
   15d0c:	b	14fe8 <g_type_class_adjust_private_offset@plt+0x2658>
   15d10:	ldr	r0, [pc, #-516]	; 15b14 <g_type_class_adjust_private_offset@plt+0x3184>
   15d14:	bl	123a8 <g_print@plt>
   15d18:	b	14fd4 <g_type_class_adjust_private_offset@plt+0x2644>
   15d1c:	mov	r0, r7
   15d20:	bl	13974 <g_type_class_adjust_private_offset@plt+0xfe4>
   15d24:	mov	r2, fp
   15d28:	mov	sl, r0
   15d2c:	mov	r1, r0
   15d30:	mov	r0, r4
   15d34:	bl	13a18 <g_type_class_adjust_private_offset@plt+0x1088>
   15d38:	mov	r0, sl
   15d3c:	bl	12294 <g_free@plt>
   15d40:	b	15170 <g_type_class_adjust_private_offset@plt+0x27e0>
   15d44:	ldr	r1, [pc, #-564]	; 15b18 <g_type_class_adjust_private_offset@plt+0x3188>
   15d48:	ldr	r0, [r9, #24]
   15d4c:	bl	12408 <g_strcmp0@plt>
   15d50:	cmp	r0, #0
   15d54:	beq	14ca0 <g_type_class_adjust_private_offset@plt+0x2310>
   15d58:	b	15574 <g_type_class_adjust_private_offset@plt+0x2be4>
   15d5c:	bl	1275c <__stack_chk_fail@plt>
   15d60:	bl	122c4 <g_dbus_message_get_body@plt>
   15d64:	cmp	r0, #0
   15d68:	beq	15204 <g_type_class_adjust_private_offset@plt+0x2874>
   15d6c:	mov	r1, #0
   15d70:	bl	12504 <g_variant_get_child_value@plt>
   15d74:	subs	sl, r0, #0
   15d78:	beq	15204 <g_type_class_adjust_private_offset@plt+0x2874>
   15d7c:	ldr	r1, [pc, #-616]	; 15b1c <g_type_class_adjust_private_offset@plt+0x318c>
   15d80:	bl	12318 <g_variant_is_of_type@plt>
   15d84:	cmp	r0, #0
   15d88:	beq	15204 <g_type_class_adjust_private_offset@plt+0x2874>
   15d8c:	mov	r0, sl
   15d90:	mov	r1, #0
   15d94:	bl	127d4 <g_variant_get_strv@plt>
   15d98:	sub	r3, r0, #4
   15d9c:	str	r0, [sp, #16]
   15da0:	str	r3, [sp, #12]
   15da4:	ldr	r3, [sp, #12]
   15da8:	ldr	sl, [r3, #4]!
   15dac:	cmp	sl, #0
   15db0:	str	r3, [sp, #12]
   15db4:	beq	160b4 <g_type_class_adjust_private_offset@plt+0x3724>
   15db8:	ldrb	r3, [sl]
   15dbc:	cmp	r3, #58	; 0x3a
   15dc0:	beq	15da4 <g_type_class_adjust_private_offset@plt+0x3414>
   15dc4:	mov	r2, #0
   15dc8:	mov	r1, sl
   15dcc:	mov	r0, r4
   15dd0:	bl	134f0 <g_type_class_adjust_private_offset@plt+0xb60>
   15dd4:	cmp	r0, #0
   15dd8:	beq	15da4 <g_type_class_adjust_private_offset@plt+0x3414>
   15ddc:	ldr	r2, [pc, #-708]	; 15b20 <g_type_class_adjust_private_offset@plt+0x3190>
   15de0:	ldr	r3, [pc, #-708]	; 15b24 <g_type_class_adjust_private_offset@plt+0x3194>
   15de4:	mov	r0, r2
   15de8:	ldr	r1, [pc, #-712]	; 15b28 <g_type_class_adjust_private_offset@plt+0x3198>
   15dec:	bl	12378 <g_dbus_message_new_method_call@plt>
   15df0:	mov	r1, sl
   15df4:	mov	fp, r0
   15df8:	ldr	r0, [pc, #-724]	; 15b2c <g_type_class_adjust_private_offset@plt+0x319c>
   15dfc:	bl	12954 <g_variant_new@plt>
   15e00:	mov	r1, r0
   15e04:	mov	r0, fp
   15e08:	bl	12330 <g_dbus_message_set_body@plt>
   15e0c:	mov	r1, fp
   15e10:	mov	r2, #4
   15e14:	mov	r0, r4
   15e18:	bl	13830 <g_type_class_adjust_private_offset@plt+0xea0>
   15e1c:	ldr	r1, [r4, #192]	; 0xc0
   15e20:	mov	r0, sl
   15e24:	ldr	fp, [r4, #200]	; 0xc8
   15e28:	str	r1, [sp, #20]
   15e2c:	bl	12420 <g_strdup@plt>
   15e30:	ldr	r1, [sp, #20]
   15e34:	mov	r2, r0
   15e38:	mov	r0, fp
   15e3c:	bl	12738 <g_hash_table_replace@plt>
   15e40:	ldr	r3, [r4, #12]
   15e44:	ldr	r3, [r3, #20]
   15e48:	cmp	r3, #0
   15e4c:	beq	15da4 <g_type_class_adjust_private_offset@plt+0x3414>
   15e50:	mov	r2, sl
   15e54:	ldr	r1, [r4, #192]	; 0xc0
   15e58:	ldr	r0, [pc, #-816]	; 15b30 <g_type_class_adjust_private_offset@plt+0x31a0>
   15e5c:	bl	123a8 <g_print@plt>
   15e60:	b	15da4 <g_type_class_adjust_private_offset@plt+0x3414>
   15e64:	ldrd	r4, [sp, #8]
   15e68:	b	14fc4 <g_type_class_adjust_private_offset@plt+0x2634>
   15e6c:	ldr	r5, [sp, #8]
   15e70:	mov	r0, fp
   15e74:	bl	12294 <g_free@plt>
   15e78:	add	r0, sp, #60	; 0x3c
   15e7c:	bl	1263c <g_variant_builder_end@plt>
   15e80:	mov	r1, #1
   15e84:	str	r0, [sp, #36]	; 0x24
   15e88:	add	r0, sp, #36	; 0x24
   15e8c:	bl	12768 <g_variant_new_tuple@plt>
   15e90:	mov	r1, r0
   15e94:	mov	r0, sl
   15e98:	bl	12330 <g_dbus_message_set_body@plt>
   15e9c:	mov	r0, sl
   15ea0:	bl	137a8 <g_type_class_adjust_private_offset@plt+0xe18>
   15ea4:	mov	fp, r0
   15ea8:	mov	r0, sl
   15eac:	bl	123f0 <g_object_unref@plt>
   15eb0:	mov	r0, r7
   15eb4:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15eb8:	mov	r7, fp
   15ebc:	ldrb	r3, [r9, #8]
   15ec0:	b	14f88 <g_type_class_adjust_private_offset@plt+0x25f8>
   15ec4:	ldr	r3, [r4, #204]	; 0xcc
   15ec8:	mov	r0, fp
   15ecc:	str	r3, [sp, #8]
   15ed0:	bl	12420 <g_strdup@plt>
   15ed4:	ldr	r3, [sp, #8]
   15ed8:	mov	r2, sl
   15edc:	mov	r1, r0
   15ee0:	mov	r0, r3
   15ee4:	bl	12738 <g_hash_table_replace@plt>
   15ee8:	b	15084 <g_type_class_adjust_private_offset@plt+0x26f4>
   15eec:	mov	r1, #0
   15ef0:	mov	r0, fp
   15ef4:	bl	12984 <g_variant_get_string@plt>
   15ef8:	ldr	r1, [pc, #-972]	; 15b34 <g_type_class_adjust_private_offset@plt+0x31a4>
   15efc:	bl	126c0 <strstr@plt>
   15f00:	cmp	r0, #0
   15f04:	mov	r0, sl
   15f08:	beq	15ba8 <g_type_class_adjust_private_offset@plt+0x3218>
   15f0c:	bl	123f0 <g_object_unref@plt>
   15f10:	ldr	r3, [r4, #12]
   15f14:	ldr	r3, [r3, #20]
   15f18:	cmp	r3, #0
   15f1c:	bne	15f2c <g_type_class_adjust_private_offset@plt+0x359c>
   15f20:	mov	r0, r7
   15f24:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   15f28:	b	15c0c <g_type_class_adjust_private_offset@plt+0x327c>
   15f2c:	ldr	r0, [pc, #-1016]	; 15b3c <g_type_class_adjust_private_offset@plt+0x31ac>
   15f30:	bl	123a8 <g_print@plt>
   15f34:	b	15f20 <g_type_class_adjust_private_offset@plt+0x3590>
   15f38:	ldr	r0, [pc, #-1032]	; 15b38 <g_type_class_adjust_private_offset@plt+0x31a8>
   15f3c:	bl	123a8 <g_print@plt>
   15f40:	b	15c44 <g_type_class_adjust_private_offset@plt+0x32b4>
   15f44:	ldr	r0, [pc, #-1040]	; 15b3c <g_type_class_adjust_private_offset@plt+0x31ac>
   15f48:	bl	123a8 <g_print@plt>
   15f4c:	b	15c0c <g_type_class_adjust_private_offset@plt+0x327c>
   15f50:	ldrb	r2, [sl]
   15f54:	cmp	r2, #58	; 0x3a
   15f58:	beq	15f68 <g_type_class_adjust_private_offset@plt+0x35d8>
   15f5c:	ldrb	r2, [r3]
   15f60:	cmp	r2, #0
   15f64:	bne	16098 <g_type_class_adjust_private_offset@plt+0x3708>
   15f68:	mov	r0, fp
   15f6c:	bl	123f0 <g_object_unref@plt>
   15f70:	ldrb	r3, [r9, #8]
   15f74:	cmp	r3, #4
   15f78:	bne	14ba8 <g_type_class_adjust_private_offset@plt+0x2218>
   15f7c:	ldr	r3, [r9, #36]	; 0x24
   15f80:	cmp	r3, #0
   15f84:	bne	14ba8 <g_type_class_adjust_private_offset@plt+0x2218>
   15f88:	b	14f9c <g_type_class_adjust_private_offset@plt+0x260c>
   15f8c:	ldr	r0, [sp, #36]	; 0x24
   15f90:	cmp	r0, #0
   15f94:	beq	15f9c <g_type_class_adjust_private_offset@plt+0x360c>
   15f98:	bl	12444 <g_list_free@plt>
   15f9c:	mov	r2, #6
   15fa0:	ldr	r1, [pc, #-1128]	; 15b40 <g_type_class_adjust_private_offset@plt+0x31b0>
   15fa4:	mov	r3, sl
   15fa8:	add	r2, r1, r2, lsl #2
   15fac:	mov	r0, r4
   15fb0:	mov	r1, r7
   15fb4:	ldr	r2, [r2, #64]	; 0x40
   15fb8:	bl	13894 <g_type_class_adjust_private_offset@plt+0xf04>
   15fbc:	cmp	r0, #0
   15fc0:	bne	14cb0 <g_type_class_adjust_private_offset@plt+0x2320>
   15fc4:	ldr	r3, [sp, #36]	; 0x24
   15fc8:	cmp	r3, #0
   15fcc:	bne	15730 <g_type_class_adjust_private_offset@plt+0x2da0>
   15fd0:	b	15a04 <g_type_class_adjust_private_offset@plt+0x3074>
   15fd4:	ldr	r0, [sp, #36]	; 0x24
   15fd8:	cmp	r0, #0
   15fdc:	beq	15fe4 <g_type_class_adjust_private_offset@plt+0x3654>
   15fe0:	bl	12444 <g_list_free@plt>
   15fe4:	mov	sl, #4
   15fe8:	mov	r3, #0
   15fec:	mov	r2, #1
   15ff0:	mov	r1, r7
   15ff4:	mov	r0, r4
   15ff8:	bl	13894 <g_type_class_adjust_private_offset@plt+0xf04>
   15ffc:	cmp	r0, #0
   16000:	bne	14cb0 <g_type_class_adjust_private_offset@plt+0x2320>
   16004:	cmp	r7, #0
   16008:	beq	16014 <g_type_class_adjust_private_offset@plt+0x3684>
   1600c:	mov	r0, r7
   16010:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   16014:	cmp	sl, #5
   16018:	beq	15ca8 <g_type_class_adjust_private_offset@plt+0x3318>
   1601c:	add	r1, r9, #16
   16020:	add	r0, r9, #9
   16024:	bl	14898 <g_type_class_adjust_private_offset@plt+0x1f08>
   16028:	mov	r7, r0
   1602c:	bl	124ec <g_dbus_message_new@plt>
   16030:	mov	r1, #2
   16034:	mov	r8, r0
   16038:	bl	125e8 <g_dbus_message_set_message_type@plt>
   1603c:	mov	r0, r8
   16040:	mov	r1, #1
   16044:	bl	12894 <g_dbus_message_set_flags@plt>
   16048:	ldr	r3, [r4, #184]	; 0xb8
   1604c:	ldr	r1, [r9, #16]
   16050:	mov	r0, r8
   16054:	sub	r1, r1, r3
   16058:	bl	12648 <g_dbus_message_set_reply_serial@plt>
   1605c:	mov	r1, #0
   16060:	ldr	r0, [pc, #-1316]	; 15b44 <g_type_class_adjust_private_offset@plt+0x31b4>
   16064:	bl	12954 <g_variant_new@plt>
   16068:	mov	r1, r0
   1606c:	mov	r0, r8
   16070:	bl	12330 <g_dbus_message_set_body@plt>
   16074:	mov	r2, r8
   16078:	ldr	r1, [r9, #16]
   1607c:	ldr	r0, [r4, #196]	; 0xc4
   16080:	bl	12738 <g_hash_table_replace@plt>
   16084:	cmp	r7, #0
   16088:	bne	15c24 <g_type_class_adjust_private_offset@plt+0x3294>
   1608c:	b	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   16090:	bl	12444 <g_list_free@plt>
   16094:	b	15a04 <g_type_class_adjust_private_offset@plt+0x3074>
   16098:	mov	r0, r4
   1609c:	mov	r2, sl
   160a0:	mov	r1, r3
   160a4:	bl	13a18 <g_type_class_adjust_private_offset@plt+0x1088>
   160a8:	mov	r0, fp
   160ac:	bl	123f0 <g_object_unref@plt>
   160b0:	b	15f70 <g_type_class_adjust_private_offset@plt+0x35e0>
   160b4:	ldr	r0, [sp, #16]
   160b8:	bl	12294 <g_free@plt>
   160bc:	b	15204 <g_type_class_adjust_private_offset@plt+0x2874>
   160c0:	bl	12444 <g_list_free@plt>
   160c4:	b	15b5c <g_type_class_adjust_private_offset@plt+0x31cc>
   160c8:	ldr	r0, [sp, #36]	; 0x24
   160cc:	cmp	r0, #0
   160d0:	beq	160d8 <g_type_class_adjust_private_offset@plt+0x3748>
   160d4:	bl	12444 <g_list_free@plt>
   160d8:	ldrb	r3, [r9, #8]
   160dc:	cmp	r3, #1
   160e0:	beq	15c80 <g_type_class_adjust_private_offset@plt+0x32f0>
   160e4:	cmp	r7, #0
   160e8:	movne	r2, #6
   160ec:	movne	r8, r2
   160f0:	bne	15bdc <g_type_class_adjust_private_offset@plt+0x324c>
   160f4:	b	14bf0 <g_type_class_adjust_private_offset@plt+0x2260>
   160f8:	ldr	r0, [sp, #36]	; 0x24
   160fc:	cmp	r0, #0
   16100:	beq	16108 <g_type_class_adjust_private_offset@plt+0x3778>
   16104:	bl	12444 <g_list_free@plt>
   16108:	mov	r2, #8
   1610c:	b	15fa0 <g_type_class_adjust_private_offset@plt+0x3610>
   16110:	ldr	r0, [sp, #36]	; 0x24
   16114:	cmp	r0, #0
   16118:	beq	16120 <g_type_class_adjust_private_offset@plt+0x3790>
   1611c:	bl	12444 <g_list_free@plt>
   16120:	mov	r2, #7
   16124:	b	15fa0 <g_type_class_adjust_private_offset@plt+0x3610>
   16128:	ldr	r0, [sp, #36]	; 0x24
   1612c:	cmp	r0, #0
   16130:	beq	16138 <g_type_class_adjust_private_offset@plt+0x37a8>
   16134:	bl	12444 <g_list_free@plt>
   16138:	mov	sl, #5
   1613c:	b	15fe8 <g_type_class_adjust_private_offset@plt+0x3658>
   16140:	ldr	r2, [pc, #-1536]	; 15b48 <g_type_class_adjust_private_offset@plt+0x31b8>
   16144:	mov	r1, #16
   16148:	mov	r0, #0
   1614c:	bl	12924 <g_log@plt>
   16150:	ldrb	r3, [r9, #8]
   16154:	b	14f88 <g_type_class_adjust_private_offset@plt+0x25f8>
   16158:	ldr	r0, [pc, #-1556]	; 15b4c <g_type_class_adjust_private_offset@plt+0x31bc>
   1615c:	bl	123a8 <g_print@plt>
   16160:	b	14c54 <g_type_class_adjust_private_offset@plt+0x22c4>
   16164:	ldr	r0, [pc, #-1568]	; 15b4c <g_type_class_adjust_private_offset@plt+0x31bc>
   16168:	bl	123a8 <g_print@plt>
   1616c:	b	14b7c <g_type_class_adjust_private_offset@plt+0x21ec>
   16170:	ldr	r3, [pc, #1352]	; 166c0 <g_type_class_adjust_private_offset@plt+0x3d30>
   16174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16178:	mov	r5, r2
   1617c:	ldr	fp, [r2, #8]
   16180:	sub	sp, sp, #68	; 0x44
   16184:	ldr	r2, [r3]
   16188:	mov	sl, r0
   1618c:	mov	r3, #0
   16190:	mov	r0, fp
   16194:	str	r2, [sp, #60]	; 0x3c
   16198:	str	r3, [sp, #32]
   1619c:	bl	12540 <g_object_ref@plt>
   161a0:	ldr	r3, [r5, #4]
   161a4:	cmp	r3, #0
   161a8:	bne	16288 <g_type_class_adjust_private_offset@plt+0x38f8>
   161ac:	ldr	r6, [r5]
   161b0:	cmp	r6, #0
   161b4:	beq	162c8 <g_type_class_adjust_private_offset@plt+0x3938>
   161b8:	ldr	r6, [fp, #16]
   161bc:	cmp	r6, #0
   161c0:	ldrne	r4, [r5, #28]
   161c4:	beq	163a4 <g_type_class_adjust_private_offset@plt+0x3a14>
   161c8:	ldr	r7, [r5, #24]
   161cc:	mov	r8, #0
   161d0:	cmp	r7, r8
   161d4:	str	r8, [sp, #36]	; 0x24
   161d8:	beq	162e8 <g_type_class_adjust_private_offset@plt+0x3958>
   161dc:	mov	r0, r7
   161e0:	add	r1, sp, #52	; 0x34
   161e4:	bl	122d0 <g_bytes_get_data@plt>
   161e8:	ldr	r6, [r4]
   161ec:	ldr	r7, [sp, #52]	; 0x34
   161f0:	mov	r9, r0
   161f4:	ldr	r0, [r4, #4]
   161f8:	mov	r1, r9
   161fc:	sub	r6, r6, r0
   16200:	cmp	r6, r7
   16204:	movcs	r6, r7
   16208:	add	r0, r0, #20
   1620c:	add	r0, r4, r0
   16210:	mov	r2, r6
   16214:	bl	12630 <memcpy@plt>
   16218:	cmp	r7, r6
   1621c:	bhi	16388 <g_type_class_adjust_private_offset@plt+0x39f8>
   16220:	ldr	r0, [r5, #24]
   16224:	str	r8, [r5, #24]
   16228:	cmp	r0, #0
   1622c:	beq	16234 <g_type_class_adjust_private_offset@plt+0x38a4>
   16230:	bl	127e0 <g_bytes_unref@plt>
   16234:	ldr	r2, [r4, #4]
   16238:	ldr	r3, [fp, #16]
   1623c:	add	r2, r6, r2
   16240:	cmp	r3, #0
   16244:	str	r2, [r4, #4]
   16248:	bne	16294 <g_type_class_adjust_private_offset@plt+0x3904>
   1624c:	cmp	r2, #0
   16250:	beq	163e4 <g_type_class_adjust_private_offset@plt+0x3a54>
   16254:	ldr	r3, [r5]
   16258:	str	r2, [r4]
   1625c:	cmp	r3, #0
   16260:	bne	163c8 <g_type_class_adjust_private_offset@plt+0x3a38>
   16264:	mov	r3, #1
   16268:	str	r3, [r4, #12]
   1626c:	mov	r1, r4
   16270:	str	r3, [r5]
   16274:	mov	r0, r5
   16278:	bl	14a9c <g_type_class_adjust_private_offset@plt+0x210c>
   1627c:	ldr	r3, [r5, #4]
   16280:	cmp	r3, #0
   16284:	beq	161ac <g_type_class_adjust_private_offset@plt+0x381c>
   16288:	mov	r4, #0
   1628c:	str	r4, [r5, #16]
   16290:	b	16458 <g_type_class_adjust_private_offset@plt+0x3ac8>
   16294:	ldr	r1, [r4]
   16298:	cmp	r1, r2
   1629c:	bne	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   162a0:	add	r6, r5, #32
   162a4:	cmp	r6, r4
   162a8:	beq	16480 <g_type_class_adjust_private_offset@plt+0x3af0>
   162ac:	mov	r1, r4
   162b0:	mov	r0, r5
   162b4:	bl	14a9c <g_type_class_adjust_private_offset@plt+0x210c>
   162b8:	mov	r3, #0
   162bc:	str	r6, [r5, #28]
   162c0:	str	r3, [r5, #36]	; 0x24
   162c4:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   162c8:	mov	r0, #21
   162cc:	bl	127f8 <g_malloc0@plt>
   162d0:	mov	r3, #1
   162d4:	mov	r4, r0
   162d8:	str	r6, [r0, #16]
   162dc:	str	r3, [r0]
   162e0:	str	r3, [r0, #8]
   162e4:	b	161c8 <g_type_class_adjust_private_offset@plt+0x3838>
   162e8:	ldr	r3, [r4, #4]
   162ec:	ldr	ip, [r4]
   162f0:	add	r0, r3, #20
   162f4:	sub	ip, ip, r3
   162f8:	add	lr, sp, #36	; 0x24
   162fc:	add	r1, sp, #48	; 0x30
   16300:	add	r0, r4, r0
   16304:	add	r2, sp, #44	; 0x2c
   16308:	add	r3, sp, #40	; 0x28
   1630c:	str	r1, [sp, #8]
   16310:	str	r2, [sp, #4]
   16314:	str	r3, [sp]
   16318:	str	r0, [sp, #52]	; 0x34
   1631c:	str	r7, [sp, #12]
   16320:	str	lr, [sp, #16]
   16324:	mov	r3, #1
   16328:	add	r2, sp, #52	; 0x34
   1632c:	mov	r1, r7
   16330:	mov	r0, sl
   16334:	str	r7, [sp, #48]	; 0x30
   16338:	str	ip, [sp, #56]	; 0x38
   1633c:	bl	1230c <g_socket_receive_message@plt>
   16340:	subs	r6, r0, #0
   16344:	blt	163f0 <g_type_class_adjust_private_offset@plt+0x3a60>
   16348:	beq	1642c <g_type_class_adjust_private_offset@plt+0x3a9c>
   1634c:	ldr	r3, [sp, #44]	; 0x2c
   16350:	cmp	r3, #0
   16354:	ldrgt	r0, [r4, #16]
   16358:	ble	1637c <g_type_class_adjust_private_offset@plt+0x39ec>
   1635c:	ldr	r3, [sp, #40]	; 0x28
   16360:	ldr	r1, [r3, r7, lsl #2]
   16364:	bl	126d8 <g_list_append@plt>
   16368:	ldr	r3, [sp, #44]	; 0x2c
   1636c:	add	r7, r7, #1
   16370:	cmp	r7, r3
   16374:	str	r0, [r4, #16]
   16378:	blt	1635c <g_type_class_adjust_private_offset@plt+0x39cc>
   1637c:	ldr	r0, [sp, #40]	; 0x28
   16380:	bl	12294 <g_free@plt>
   16384:	b	16234 <g_type_class_adjust_private_offset@plt+0x38a4>
   16388:	sub	r1, r7, r6
   1638c:	add	r0, r9, r6
   16390:	ldr	r3, [r5, #24]
   16394:	ldr	r2, [pc, #808]	; 166c4 <g_type_class_adjust_private_offset@plt+0x3d34>
   16398:	bl	12474 <g_bytes_new_with_free_func@plt>
   1639c:	str	r0, [r5, #24]
   163a0:	b	16234 <g_type_class_adjust_private_offset@plt+0x38a4>
   163a4:	mov	r0, #84	; 0x54
   163a8:	bl	127f8 <g_malloc0@plt>
   163ac:	mov	r2, #64	; 0x40
   163b0:	mov	r3, #1
   163b4:	mov	r4, r0
   163b8:	str	r6, [r0, #16]
   163bc:	str	r2, [r0]
   163c0:	str	r3, [r0, #8]
   163c4:	b	161c8 <g_type_class_adjust_private_offset@plt+0x3838>
   163c8:	add	r3, fp, #24
   163cc:	cmp	r5, r3
   163d0:	beq	16508 <g_type_class_adjust_private_offset@plt+0x3b78>
   163d4:	mov	r1, r4
   163d8:	mov	r0, r5
   163dc:	bl	14a9c <g_type_class_adjust_private_offset@plt+0x210c>
   163e0:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   163e4:	mov	r0, r4
   163e8:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   163ec:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   163f0:	ldr	r6, [sp, #36]	; 0x24
   163f4:	bl	1272c <g_io_error_quark@plt>
   163f8:	mov	r2, #27
   163fc:	mov	r1, r0
   16400:	mov	r0, r6
   16404:	bl	1269c <g_error_matches@plt>
   16408:	cmp	r0, #0
   1640c:	bne	165b8 <g_type_class_adjust_private_offset@plt+0x3c28>
   16410:	ldr	r3, [sp, #36]	; 0x24
   16414:	ldr	r2, [pc, #684]	; 166c8 <g_type_class_adjust_private_offset@plt+0x3d38>
   16418:	mov	r1, #128	; 0x80
   1641c:	ldr	r3, [r3, #8]
   16420:	bl	12924 <g_log@plt>
   16424:	ldr	r0, [sp, #36]	; 0x24
   16428:	bl	128a0 <g_error_free@plt>
   1642c:	mov	r0, r5
   16430:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   16434:	ldr	r3, [r5, #28]
   16438:	cmp	r3, r4
   1643c:	beq	16448 <g_type_class_adjust_private_offset@plt+0x3ab8>
   16440:	mov	r0, r4
   16444:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   16448:	ldr	r3, [r5, #4]
   1644c:	cmp	r3, #0
   16450:	bne	16288 <g_type_class_adjust_private_offset@plt+0x38f8>
   16454:	mov	r4, #1
   16458:	mov	r0, fp
   1645c:	bl	123f0 <g_object_unref@plt>
   16460:	ldr	r3, [pc, #600]	; 166c0 <g_type_class_adjust_private_offset@plt+0x3d30>
   16464:	ldr	r2, [sp, #60]	; 0x3c
   16468:	mov	r0, r4
   1646c:	ldr	r3, [r3]
   16470:	cmp	r2, r3
   16474:	bne	166bc <g_type_class_adjust_private_offset@plt+0x3d2c>
   16478:	add	sp, sp, #68	; 0x44
   1647c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16480:	add	r8, r5, #52	; 0x34
   16484:	mov	r0, r8
   16488:	add	r2, sp, #32
   1648c:	bl	126f0 <g_dbus_message_bytes_needed@plt>
   16490:	subs	r7, r0, #0
   16494:	blt	164ec <g_type_class_adjust_private_offset@plt+0x3b5c>
   16498:	add	r0, r7, #20
   1649c:	bl	127f8 <g_malloc0@plt>
   164a0:	mov	r3, #1
   164a4:	ldr	r1, [r4, #4]
   164a8:	mov	r6, r0
   164ac:	mov	r0, #0
   164b0:	str	r7, [r6]
   164b4:	ldr	r2, [r4]
   164b8:	str	r0, [r6, #16]
   164bc:	str	r3, [r6, #8]
   164c0:	ldr	r3, [r4, #16]
   164c4:	cmp	r7, r2
   164c8:	str	r1, [r6, #4]
   164cc:	str	r3, [r6, #16]
   164d0:	str	r0, [r4, #16]
   164d4:	bcc	165c4 <g_type_class_adjust_private_offset@plt+0x3c34>
   164d8:	mov	r1, r8
   164dc:	add	r0, r6, #20
   164e0:	bl	12630 <memcpy@plt>
   164e4:	str	r6, [r5, #28]
   164e8:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   164ec:	ldr	r2, [pc, #472]	; 166cc <g_type_class_adjust_private_offset@plt+0x3d3c>
   164f0:	mov	r1, #16
   164f4:	mov	r0, #0
   164f8:	bl	12924 <g_log@plt>
   164fc:	mov	r0, r5
   16500:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   16504:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   16508:	ldr	r3, [fp, #20]
   1650c:	add	r1, r4, #20
   16510:	mov	r0, r3
   16514:	ldr	r3, [r3, #4]
   16518:	str	r1, [sp, #28]
   1651c:	str	r3, [sp, #24]
   16520:	bl	127a4 <g_byte_array_append@plt>
   16524:	mov	r6, #0
   16528:	ldr	r9, [fp, #20]
   1652c:	mov	r3, #2
   16530:	ldr	r2, [pc, #408]	; 166d0 <g_type_class_adjust_private_offset@plt+0x3d40>
   16534:	ldr	r8, [r9]
   16538:	ldr	r1, [r9, #4]
   1653c:	add	r8, r8, r6
   16540:	mov	r0, r8
   16544:	sub	r1, r1, r6
   16548:	bl	12678 <memmem@plt>
   1654c:	cmp	r0, #0
   16550:	beq	16688 <g_type_class_adjust_private_offset@plt+0x3cf8>
   16554:	cmp	r8, r0
   16558:	ldrb	ip, [r8]
   1655c:	bcs	165dc <g_type_class_adjust_private_offset@plt+0x3c4c>
   16560:	cmp	ip, #31
   16564:	bls	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   16568:	tst	ip, #128	; 0x80
   1656c:	bne	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   16570:	mov	r3, r8
   16574:	sub	r1, r0, #1
   16578:	cmp	r3, r1
   1657c:	beq	165dc <g_type_class_adjust_private_offset@plt+0x3c4c>
   16580:	ldrb	r2, [r3, #1]!
   16584:	cmp	r2, #31
   16588:	bls	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   1658c:	tst	r2, #128	; 0x80
   16590:	beq	16578 <g_type_class_adjust_private_offset@plt+0x3be8>
   16594:	mov	r0, r4
   16598:	bl	13dd0 <g_type_class_adjust_private_offset@plt+0x1440>
   1659c:	ldr	r3, [fp, #12]
   165a0:	ldr	r3, [r3, #20]
   165a4:	cmp	r3, #0
   165a8:	bne	166b0 <g_type_class_adjust_private_offset@plt+0x3d20>
   165ac:	mov	r0, r5
   165b0:	bl	133d0 <g_type_class_adjust_private_offset@plt+0xa40>
   165b4:	b	16448 <g_type_class_adjust_private_offset@plt+0x3ab8>
   165b8:	ldr	r0, [sp, #36]	; 0x24
   165bc:	bl	128a0 <g_error_free@plt>
   165c0:	b	16434 <g_type_class_adjust_private_offset@plt+0x3aa4>
   165c4:	ldr	r3, [pc, #264]	; 166d4 <g_type_class_adjust_private_offset@plt+0x3d44>
   165c8:	ldr	r2, [pc, #264]	; 166d8 <g_type_class_adjust_private_offset@plt+0x3d48>
   165cc:	str	r3, [sp]
   165d0:	ldr	r1, [pc, #260]	; 166dc <g_type_class_adjust_private_offset@plt+0x3d4c>
   165d4:	ldr	r3, [pc, #260]	; 166e0 <g_type_class_adjust_private_offset@plt+0x3d50>
   165d8:	bl	124f8 <g_assertion_message_expr@plt>
   165dc:	sub	ip, ip, #65	; 0x41
   165e0:	cmp	ip, #25
   165e4:	bhi	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   165e8:	mov	r3, #0
   165ec:	strb	r3, [r0]
   165f0:	ldr	r1, [pc, #236]	; 166e4 <g_type_class_adjust_private_offset@plt+0x3d54>
   165f4:	add	r3, r0, #2
   165f8:	mov	r0, r8
   165fc:	sub	r6, r3, r8
   16600:	bl	12708 <g_str_has_prefix@plt>
   16604:	cmp	r0, #0
   16608:	beq	16528 <g_type_class_adjust_private_offset@plt+0x3b98>
   1660c:	ldrb	r3, [r8, #5]
   16610:	and	r2, r3, #223	; 0xdf
   16614:	cmp	r2, #0
   16618:	cmpne	r3, #9
   1661c:	bne	16528 <g_type_class_adjust_private_offset@plt+0x3b98>
   16620:	ldr	r3, [sp, #24]
   16624:	subs	r0, r6, r3
   16628:	bmi	1665c <g_type_class_adjust_private_offset@plt+0x3ccc>
   1662c:	ldr	r3, [r4, #4]
   16630:	ldr	r2, [sp, #24]
   16634:	str	r0, [r4]
   16638:	add	r3, r2, r3
   1663c:	subs	r1, r3, r6
   16640:	bne	16668 <g_type_class_adjust_private_offset@plt+0x3cd8>
   16644:	mov	r1, r4
   16648:	mov	r0, r5
   1664c:	bl	14a9c <g_type_class_adjust_private_offset@plt+0x210c>
   16650:	mov	r3, #1
   16654:	str	r3, [fp, #16]
   16658:	b	161a0 <g_type_class_adjust_private_offset@plt+0x3810>
   1665c:	cmn	r0, #2
   16660:	bne	163d4 <g_type_class_adjust_private_offset@plt+0x3a44>
   16664:	b	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   16668:	ldr	r3, [sp, #28]
   1666c:	add	r0, r3, r0
   16670:	bl	12414 <g_bytes_new@plt>
   16674:	mov	r1, r4
   16678:	str	r0, [r5, #24]
   1667c:	mov	r0, r5
   16680:	bl	14a9c <g_type_class_adjust_private_offset@plt+0x210c>
   16684:	b	16650 <g_type_class_adjust_private_offset@plt+0x3cc0>
   16688:	mov	r2, r6
   1668c:	mov	r1, r0
   16690:	mov	r0, r9
   16694:	bl	127ec <g_byte_array_remove_range@plt>
   16698:	ldr	r3, [fp, #20]
   1669c:	ldr	r2, [pc, #68]	; 166e8 <g_type_class_adjust_private_offset@plt+0x3d58>
   166a0:	ldr	r3, [r3, #4]
   166a4:	cmp	r3, r2
   166a8:	bhi	16594 <g_type_class_adjust_private_offset@plt+0x3c04>
   166ac:	b	163d4 <g_type_class_adjust_private_offset@plt+0x3a44>
   166b0:	ldr	r0, [pc, #52]	; 166ec <g_type_class_adjust_private_offset@plt+0x3d5c>
   166b4:	bl	123a8 <g_print@plt>
   166b8:	b	165ac <g_type_class_adjust_private_offset@plt+0x3c1c>
   166bc:	bl	1275c <__stack_chk_fail@plt>
   166c0:	andeq	r8, r2, r0, ror ip
   166c4:	andeq	r2, r1, r0, ror #15
   166c8:	andeq	r7, r1, r4, lsl fp
   166cc:	andeq	r7, r1, r4, ror #21
   166d0:			; <UNDEFINED> instruction: 0x00017ab8
   166d4:	andeq	r7, r1, r0, lsl #22
   166d8:	strdeq	r0, [r0], -r9
   166dc:	andeq	r7, r1, r0, asr #6
   166e0:	andeq	r7, r1, r4, asr r2
   166e4:			; <UNDEFINED> instruction: 0x00017abc
   166e8:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   166ec:	andeq	r7, r1, r4, asr #21
   166f0:	push	{r4, lr}
   166f4:	mcr	15, 0, r0, cr7, cr10, {5}
   166f8:	ldr	r4, [pc, #60]	; 1673c <g_type_class_adjust_private_offset@plt+0x3dac>
   166fc:	ldr	r3, [r4, #32]
   16700:	mcr	15, 0, r0, cr7, cr10, {5}
   16704:	cmp	r3, #0
   16708:	beq	16714 <g_type_class_adjust_private_offset@plt+0x3d84>
   1670c:	ldr	r0, [r4, #32]
   16710:	pop	{r4, pc}
   16714:	add	r0, r4, #32
   16718:	bl	1284c <g_once_init_enter@plt>
   1671c:	cmp	r0, #0
   16720:	beq	1670c <g_type_class_adjust_private_offset@plt+0x3d7c>
   16724:	bl	13030 <g_type_class_adjust_private_offset@plt+0x6a0>
   16728:	mov	r1, r0
   1672c:	add	r0, r4, #32
   16730:	bl	128d0 <g_once_init_leave@plt>
   16734:	ldr	r0, [r4, #32]
   16738:	pop	{r4, pc}
   1673c:	andeq	r9, r2, r0, lsr #32
   16740:	push	{r4, r5, lr}
   16744:	sub	sp, sp, #12
   16748:	mov	r5, r0
   1674c:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   16750:	mov	r1, r0
   16754:	mov	r0, r5
   16758:	bl	12750 <g_type_check_instance_cast@plt>
   1675c:	mov	r4, r0
   16760:	bl	12588 <g_socket_service_get_type@plt>
   16764:	mov	r1, r0
   16768:	mov	r0, r4
   1676c:	bl	12750 <g_type_check_instance_cast@plt>
   16770:	bl	12348 <g_socket_service_is_active@plt>
   16774:	cmp	r0, #0
   16778:	bne	167e0 <g_type_class_adjust_private_offset@plt+0x3e50>
   1677c:	ldr	r3, [r4, #24]
   16780:	cmp	r3, #0
   16784:	beq	167a4 <g_type_class_adjust_private_offset@plt+0x3e14>
   16788:	ldr	r2, [pc, #92]	; 167ec <g_type_class_adjust_private_offset@plt+0x3e5c>
   1678c:	ldr	r3, [pc, #92]	; 167f0 <g_type_class_adjust_private_offset@plt+0x3e60>
   16790:	str	r2, [sp]
   16794:	ldr	r1, [pc, #88]	; 167f4 <g_type_class_adjust_private_offset@plt+0x3e64>
   16798:	ldr	r2, [pc, #88]	; 167f8 <g_type_class_adjust_private_offset@plt+0x3e68>
   1679c:	mov	r0, #0
   167a0:	bl	124f8 <g_assertion_message_expr@plt>
   167a4:	ldr	r0, [r4, #44]	; 0x2c
   167a8:	bl	12354 <g_hash_table_destroy@plt>
   167ac:	ldr	r0, [r4, #28]
   167b0:	bl	12294 <g_free@plt>
   167b4:	ldr	r0, [r4, #32]
   167b8:	bl	12294 <g_free@plt>
   167bc:	ldr	r3, [pc, #56]	; 167fc <g_type_class_adjust_private_offset@plt+0x3e6c>
   167c0:	mov	r1, #80	; 0x50
   167c4:	ldr	r0, [r3, #8]
   167c8:	bl	1257c <g_type_check_class_cast@plt>
   167cc:	ldr	r3, [r0, #24]
   167d0:	mov	r0, r5
   167d4:	add	sp, sp, #12
   167d8:	pop	{r4, r5, lr}
   167dc:	bx	r3
   167e0:	ldr	r0, [r4, #28]
   167e4:	bl	1260c <unlink@plt>
   167e8:	b	1677c <g_type_class_adjust_private_offset@plt+0x3dec>
   167ec:	andeq	r7, r1, r4, lsr fp
   167f0:	andeq	r7, r1, r0, ror #4
   167f4:	andeq	r7, r1, r0, asr #6
   167f8:	andeq	r0, r0, pc, lsr #5
   167fc:	andeq	r9, r2, r0, lsr #32
   16800:	push	{r4, r5, r6, r7, r8, lr}
   16804:	sub	sp, sp, #24
   16808:	mov	r4, r1
   1680c:	mov	r5, r0
   16810:	mov	r8, r2
   16814:	mov	r6, r3
   16818:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   1681c:	mov	r1, r0
   16820:	mov	r0, r5
   16824:	bl	12750 <g_type_check_instance_cast@plt>
   16828:	cmp	r4, #1
   1682c:	mov	r7, r0
   16830:	beq	1688c <g_type_class_adjust_private_offset@plt+0x3efc>
   16834:	cmp	r4, #2
   16838:	beq	168a0 <g_type_class_adjust_private_offset@plt+0x3f10>
   1683c:	ldm	r6, {r3, r6}
   16840:	ldr	r0, [r3]
   16844:	bl	12714 <g_type_name@plt>
   16848:	ldr	r3, [r5]
   1684c:	mov	r7, r0
   16850:	ldr	r0, [r3]
   16854:	bl	12714 <g_type_name@plt>
   16858:	ldr	r2, [pc, #84]	; 168b4 <g_type_class_adjust_private_offset@plt+0x3f24>
   1685c:	mov	r3, #716	; 0x2cc
   16860:	str	r3, [sp]
   16864:	stmib	sp, {r2, r4}
   16868:	strd	r6, [sp, #12]
   1686c:	ldr	r3, [pc, #68]	; 168b8 <g_type_class_adjust_private_offset@plt+0x3f28>
   16870:	ldr	r2, [pc, #68]	; 168bc <g_type_class_adjust_private_offset@plt+0x3f2c>
   16874:	mov	r1, #16
   16878:	str	r0, [sp, #20]
   1687c:	mov	r0, #0
   16880:	bl	12924 <g_log@plt>
   16884:	add	sp, sp, #24
   16888:	pop	{r4, r5, r6, r7, r8, pc}
   1688c:	mov	r0, r8
   16890:	bl	1233c <g_value_dup_string@plt>
   16894:	str	r0, [r7, #32]
   16898:	add	sp, sp, #24
   1689c:	pop	{r4, r5, r6, r7, r8, pc}
   168a0:	mov	r0, r8
   168a4:	bl	1233c <g_value_dup_string@plt>
   168a8:	str	r0, [r7, #28]
   168ac:	add	sp, sp, #24
   168b0:	pop	{r4, r5, r6, r7, r8, pc}
   168b4:	andeq	r7, r1, r4, lsl #23
   168b8:	andeq	r7, r1, r0, asr #6
   168bc:	andeq	r7, r1, ip, asr #22
   168c0:	push	{r4, r5, r6, r7, lr}
   168c4:	sub	sp, sp, #28
   168c8:	mov	r4, r1
   168cc:	mov	r5, r0
   168d0:	mov	r7, r2
   168d4:	mov	r6, r3
   168d8:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   168dc:	mov	r1, r0
   168e0:	mov	r0, r5
   168e4:	bl	12750 <g_type_check_instance_cast@plt>
   168e8:	cmp	r4, #1
   168ec:	beq	16948 <g_type_class_adjust_private_offset@plt+0x3fb8>
   168f0:	cmp	r4, #2
   168f4:	beq	1695c <g_type_class_adjust_private_offset@plt+0x3fcc>
   168f8:	ldm	r6, {r3, r6}
   168fc:	ldr	r0, [r3]
   16900:	bl	12714 <g_type_name@plt>
   16904:	ldr	r3, [r5]
   16908:	mov	r7, r0
   1690c:	ldr	r0, [r3]
   16910:	bl	12714 <g_type_name@plt>
   16914:	ldr	r2, [pc, #84]	; 16970 <g_type_class_adjust_private_offset@plt+0x3fe0>
   16918:	mov	r3, #740	; 0x2e4
   1691c:	str	r3, [sp]
   16920:	stmib	sp, {r2, r4}
   16924:	strd	r6, [sp, #12]
   16928:	ldr	r3, [pc, #68]	; 16974 <g_type_class_adjust_private_offset@plt+0x3fe4>
   1692c:	ldr	r2, [pc, #68]	; 16978 <g_type_class_adjust_private_offset@plt+0x3fe8>
   16930:	mov	r1, #16
   16934:	str	r0, [sp, #20]
   16938:	mov	r0, #0
   1693c:	bl	12924 <g_log@plt>
   16940:	add	sp, sp, #28
   16944:	pop	{r4, r5, r6, r7, pc}
   16948:	ldr	r1, [r0, #32]
   1694c:	mov	r0, r7
   16950:	add	sp, sp, #28
   16954:	pop	{r4, r5, r6, r7, lr}
   16958:	b	12564 <g_value_set_string@plt>
   1695c:	ldr	r1, [r0, #28]
   16960:	mov	r0, r7
   16964:	add	sp, sp, #28
   16968:	pop	{r4, r5, r6, r7, lr}
   1696c:	b	12564 <g_value_set_string@plt>
   16970:	andeq	r7, r1, r4, lsl #23
   16974:	andeq	r7, r1, r0, asr #6
   16978:	andeq	r7, r1, ip, asr #22
   1697c:	push	{r4, lr}
   16980:	mcr	15, 0, r0, cr7, cr10, {5}
   16984:	ldr	r4, [pc, #60]	; 169c8 <g_type_class_adjust_private_offset@plt+0x4038>
   16988:	ldr	r3, [r4, #36]	; 0x24
   1698c:	mcr	15, 0, r0, cr7, cr10, {5}
   16990:	cmp	r3, #0
   16994:	beq	169a0 <g_type_class_adjust_private_offset@plt+0x4010>
   16998:	ldr	r0, [r4, #36]	; 0x24
   1699c:	pop	{r4, pc}
   169a0:	add	r0, r4, #36	; 0x24
   169a4:	bl	1284c <g_once_init_enter@plt>
   169a8:	cmp	r0, #0
   169ac:	beq	16998 <g_type_class_adjust_private_offset@plt+0x4008>
   169b0:	bl	13084 <g_type_class_adjust_private_offset@plt+0x6f4>
   169b4:	mov	r1, r0
   169b8:	add	r0, r4, #36	; 0x24
   169bc:	bl	128d0 <g_once_init_leave@plt>
   169c0:	ldr	r0, [r4, #36]	; 0x24
   169c4:	pop	{r4, pc}
   169c8:	andeq	r9, r2, r0, lsr #32
   169cc:	push	{r4, r5, r6, lr}
   169d0:	mov	r6, r1
   169d4:	mov	r4, r0
   169d8:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   169dc:	mov	r1, r0
   169e0:	mov	r0, r4
   169e4:	bl	12750 <g_type_check_instance_cast@plt>
   169e8:	mov	r4, r0
   169ec:	mov	r0, r6
   169f0:	bl	12774 <g_socket_connection_get_socket@plt>
   169f4:	mov	r1, #0
   169f8:	bl	12594 <g_socket_set_blocking@plt>
   169fc:	bl	1697c <g_type_class_adjust_private_offset@plt+0x3fec>
   16a00:	mov	r1, #0
   16a04:	bl	12510 <g_object_new@plt>
   16a08:	mov	r5, r0
   16a0c:	mov	r0, r4
   16a10:	bl	12540 <g_object_ref@plt>
   16a14:	str	r0, [r5, #12]
   16a18:	mov	r0, r6
   16a1c:	bl	12540 <g_object_ref@plt>
   16a20:	mov	r1, r5
   16a24:	str	r0, [r5, #36]	; 0x24
   16a28:	ldr	r0, [r4, #24]
   16a2c:	bl	1281c <g_list_prepend@plt>
   16a30:	mov	r3, r5
   16a34:	ldr	r2, [pc, #20]	; 16a50 <g_type_class_adjust_private_offset@plt+0x40c0>
   16a38:	mov	r1, #0
   16a3c:	str	r0, [r4, #24]
   16a40:	ldr	r0, [r4, #32]
   16a44:	bl	126fc <g_dbus_address_get_stream@plt>
   16a48:	mov	r0, #1
   16a4c:	pop	{r4, r5, r6, pc}
   16a50:	andeq	r3, r1, r8, lsr #5
   16a54:	push	{r4, r5, r6, lr}
   16a58:	mov	r5, r0
   16a5c:	bl	1697c <g_type_class_adjust_private_offset@plt+0x3fec>
   16a60:	mov	r1, r0
   16a64:	mov	r0, r5
   16a68:	bl	12750 <g_type_check_instance_cast@plt>
   16a6c:	ldr	r6, [r0, #12]
   16a70:	mov	r4, r0
   16a74:	mov	r1, r0
   16a78:	ldr	r0, [r6, #24]
   16a7c:	bl	12900 <g_list_remove@plt>
   16a80:	ldr	r3, [r4, #12]
   16a84:	mov	r2, #0
   16a88:	cmp	r3, r2
   16a8c:	str	r0, [r6, #24]
   16a90:	str	r2, [r4, #12]
   16a94:	beq	16aa0 <g_type_class_adjust_private_offset@plt+0x4110>
   16a98:	mov	r0, r3
   16a9c:	bl	123f0 <g_object_unref@plt>
   16aa0:	mov	r1, #1
   16aa4:	ldr	r0, [r4, #20]
   16aa8:	bl	125dc <g_byte_array_free@plt>
   16aac:	ldr	r0, [r4, #196]	; 0xc4
   16ab0:	bl	12354 <g_hash_table_destroy@plt>
   16ab4:	ldr	r0, [r4, #200]	; 0xc8
   16ab8:	bl	12354 <g_hash_table_destroy@plt>
   16abc:	ldr	r0, [r4, #204]	; 0xcc
   16ac0:	bl	12354 <g_hash_table_destroy@plt>
   16ac4:	ldr	r0, [r4, #208]	; 0xd0
   16ac8:	bl	12354 <g_hash_table_destroy@plt>
   16acc:	add	r0, r4, #24
   16ad0:	bl	13ab8 <g_type_class_adjust_private_offset@plt+0x1128>
   16ad4:	add	r0, r4, #104	; 0x68
   16ad8:	bl	13ab8 <g_type_class_adjust_private_offset@plt+0x1128>
   16adc:	ldr	r3, [pc, #24]	; 16afc <g_type_class_adjust_private_offset@plt+0x416c>
   16ae0:	mov	r1, #80	; 0x50
   16ae4:	ldr	r0, [r3]
   16ae8:	bl	1257c <g_type_check_class_cast@plt>
   16aec:	ldr	r3, [r0, #24]
   16af0:	mov	r0, r5
   16af4:	pop	{r4, r5, r6, lr}
   16af8:	bx	r3
   16afc:	andeq	r9, r2, r0, lsr #32
   16b00:	str	r1, [r0, #36]	; 0x24
   16b04:	bx	lr
   16b08:	str	r1, [r0, #40]	; 0x28
   16b0c:	bx	lr
   16b10:	str	r1, [r0, #20]
   16b14:	bx	lr
   16b18:	mov	ip, r1
   16b1c:	push	{r4, lr}
   16b20:	mov	r1, r2
   16b24:	mov	r4, r0
   16b28:	mov	r2, r3
   16b2c:	mov	r0, ip
   16b30:	bl	134b0 <g_type_class_adjust_private_offset@plt+0xb20>
   16b34:	mov	r1, r0
   16b38:	mov	r0, r4
   16b3c:	pop	{r4, lr}
   16b40:	b	14988 <g_type_class_adjust_private_offset@plt+0x1ff8>
   16b44:	mov	ip, r1
   16b48:	push	{r4, lr}
   16b4c:	mov	r1, r2
   16b50:	mov	r4, r0
   16b54:	mov	r2, #1
   16b58:	mov	r0, ip
   16b5c:	bl	13c3c <g_type_class_adjust_private_offset@plt+0x12ac>
   16b60:	mov	r1, r0
   16b64:	mov	r0, r4
   16b68:	pop	{r4, lr}
   16b6c:	b	14988 <g_type_class_adjust_private_offset@plt+0x1ff8>
   16b70:	mov	ip, r1
   16b74:	push	{r4, lr}
   16b78:	mov	r1, r2
   16b7c:	mov	r4, r0
   16b80:	mov	r2, #2
   16b84:	mov	r0, ip
   16b88:	bl	13c3c <g_type_class_adjust_private_offset@plt+0x12ac>
   16b8c:	mov	r1, r0
   16b90:	mov	r0, r4
   16b94:	pop	{r4, lr}
   16b98:	b	14988 <g_type_class_adjust_private_offset@plt+0x1ff8>
   16b9c:	push	{r4, r5, lr}
   16ba0:	sub	sp, sp, #12
   16ba4:	mov	r5, r1
   16ba8:	mov	r4, r0
   16bac:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   16bb0:	mov	r3, #0
   16bb4:	str	r3, [sp, #4]
   16bb8:	str	r5, [sp]
   16bbc:	mov	r2, r4
   16bc0:	ldr	r3, [pc, #12]	; 16bd4 <g_type_class_adjust_private_offset@plt+0x4244>
   16bc4:	ldr	r1, [pc, #12]	; 16bd8 <g_type_class_adjust_private_offset@plt+0x4248>
   16bc8:	bl	12510 <g_object_new@plt>
   16bcc:	add	sp, sp, #12
   16bd0:	pop	{r4, r5, pc}
   16bd4:	andeq	r7, r1, ip, lsr #5
   16bd8:	muleq	r1, ip, r2
   16bdc:	push	{r4, r5, r6, lr}
   16be0:	mov	r4, r0
   16be4:	sub	sp, sp, #16
   16be8:	ldr	r0, [r0, #28]
   16bec:	bl	1260c <unlink@plt>
   16bf0:	ldr	r0, [r4, #28]
   16bf4:	bl	123b4 <g_unix_socket_address_new@plt>
   16bf8:	mov	r6, r0
   16bfc:	bl	12864 <g_socket_listener_get_type@plt>
   16c00:	mov	r1, r0
   16c04:	mov	r0, r4
   16c08:	bl	12750 <g_type_check_instance_cast@plt>
   16c0c:	mov	r3, #0
   16c10:	mov	r1, r6
   16c14:	str	r3, [sp, #8]
   16c18:	str	r3, [sp, #4]
   16c1c:	str	r3, [sp]
   16c20:	mov	r2, #1
   16c24:	bl	12690 <g_socket_listener_add_address@plt>
   16c28:	mov	r5, r0
   16c2c:	mov	r0, r6
   16c30:	bl	123f0 <g_object_unref@plt>
   16c34:	cmp	r5, #0
   16c38:	beq	16c54 <g_type_class_adjust_private_offset@plt+0x42c4>
   16c3c:	bl	12588 <g_socket_service_get_type@plt>
   16c40:	mov	r5, #1
   16c44:	mov	r1, r0
   16c48:	mov	r0, r4
   16c4c:	bl	12750 <g_type_check_instance_cast@plt>
   16c50:	bl	125a0 <g_socket_service_start@plt>
   16c54:	mov	r0, r5
   16c58:	add	sp, sp, #16
   16c5c:	pop	{r4, r5, r6, pc}
   16c60:	push	{r4, lr}
   16c64:	mov	r4, r0
   16c68:	ldr	r0, [r0, #28]
   16c6c:	bl	1260c <unlink@plt>
   16c70:	bl	12588 <g_socket_service_get_type@plt>
   16c74:	mov	r1, r0
   16c78:	mov	r0, r4
   16c7c:	bl	12750 <g_type_check_instance_cast@plt>
   16c80:	pop	{r4, lr}
   16c84:	b	12804 <g_socket_service_stop@plt>
   16c88:	ldr	r3, [pc, #56]	; 16cc8 <g_type_class_adjust_private_offset@plt+0x4338>
   16c8c:	push	{r4, r5, r6, lr}
   16c90:	ldr	r4, [r3]
   16c94:	cmp	r4, #0
   16c98:	beq	16cc0 <g_type_class_adjust_private_offset@plt+0x4330>
   16c9c:	ldr	r5, [r4]
   16ca0:	bl	166f0 <g_type_class_adjust_private_offset@plt+0x3d60>
   16ca4:	mov	r1, r0
   16ca8:	mov	r0, r5
   16cac:	bl	12750 <g_type_check_instance_cast@plt>
   16cb0:	bl	16c60 <g_type_class_adjust_private_offset@plt+0x42d0>
   16cb4:	ldr	r4, [r4, #4]
   16cb8:	cmp	r4, #0
   16cbc:	bne	16c9c <g_type_class_adjust_private_offset@plt+0x430c>
   16cc0:	mov	r0, #0
   16cc4:	bl	12960 <exit@plt>
   16cc8:	andeq	r9, r2, r8, asr #32
   16ccc:	ldr	r3, [pc, #56]	; 16d0c <g_type_class_adjust_private_offset@plt+0x437c>
   16cd0:	push	{r4, lr}
   16cd4:	mov	r5, r0
   16cd8:	mov	r4, r1
   16cdc:	ldr	r3, [r3, #4]
   16ce0:	mov	r0, r1
   16ce4:	ldr	r2, [pc, #36]	; 16d10 <g_type_class_adjust_private_offset@plt+0x4380>
   16ce8:	mov	r1, #1
   16cec:	bl	12780 <__fprintf_chk@plt>
   16cf0:	mov	r3, r4
   16cf4:	ldr	r2, [pc, #24]	; 16d14 <g_type_class_adjust_private_offset@plt+0x4384>
   16cf8:	mov	r1, #1
   16cfc:	ldr	r0, [pc, #20]	; 16d18 <g_type_class_adjust_private_offset@plt+0x4388>
   16d00:	bl	126e4 <fwrite@plt>
   16d04:	mov	r0, r5
   16d08:	bl	12960 <exit@plt>
   16d0c:	andeq	r9, r2, r8, asr #32
   16d10:	muleq	r1, r0, fp
   16d14:	andeq	r0, r0, r3, asr #5
   16d18:	andeq	r7, r1, ip, asr #23
   16d1c:	ldr	r3, [r0]
   16d20:	ldr	r2, [r1]
   16d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d28:	sub	sp, sp, #132	; 0x84
   16d2c:	ldr	r4, [pc, #1040]	; 17144 <g_type_class_adjust_private_offset@plt+0x47b4>
   16d30:	ldr	r7, [r3, r2, lsl #2]
   16d34:	mov	r5, r0
   16d38:	ldr	r3, [r4]
   16d3c:	mov	r6, r1
   16d40:	mov	r0, r7
   16d44:	ldr	r1, [pc, #1020]	; 17148 <g_type_class_adjust_private_offset@plt+0x47b8>
   16d48:	str	r3, [sp, #124]	; 0x7c
   16d4c:	bl	1293c <strcmp@plt>
   16d50:	cmp	r0, #0
   16d54:	beq	17134 <g_type_class_adjust_private_offset@plt+0x47a4>
   16d58:	ldr	r1, [pc, #1004]	; 1714c <g_type_class_adjust_private_offset@plt+0x47bc>
   16d5c:	mov	r0, r7
   16d60:	bl	1293c <strcmp@plt>
   16d64:	subs	r8, r0, #0
   16d68:	beq	16de8 <g_type_class_adjust_private_offset@plt+0x4458>
   16d6c:	ldr	r1, [pc, #988]	; 17150 <g_type_class_adjust_private_offset@plt+0x47c0>
   16d70:	mov	r0, r7
   16d74:	bl	12708 <g_str_has_prefix@plt>
   16d78:	subs	r8, r0, #0
   16d7c:	beq	16e00 <g_type_class_adjust_private_offset@plt+0x4470>
   16d80:	add	r7, r7, #5
   16d84:	mov	r0, r7
   16d88:	mov	r2, #10
   16d8c:	add	r1, sp, #16
   16d90:	bl	1266c <strtol@plt>
   16d94:	cmp	r0, #0
   16d98:	blt	16f48 <g_type_class_adjust_private_offset@plt+0x45b8>
   16d9c:	ldr	r3, [sp, #16]
   16da0:	cmp	r3, r7
   16da4:	beq	16f48 <g_type_class_adjust_private_offset@plt+0x45b8>
   16da8:	ldrb	r3, [r3]
   16dac:	cmp	r3, #0
   16db0:	bne	16f48 <g_type_class_adjust_private_offset@plt+0x45b8>
   16db4:	ldr	r3, [r6]
   16db8:	ldr	r2, [pc, #916]	; 17154 <g_type_class_adjust_private_offset@plt+0x47c4>
   16dbc:	mov	r8, #1
   16dc0:	add	r3, r3, #1
   16dc4:	str	r3, [r6]
   16dc8:	str	r0, [r2]
   16dcc:	ldr	r2, [sp, #124]	; 0x7c
   16dd0:	ldr	r3, [r4]
   16dd4:	mov	r0, r8
   16dd8:	cmp	r2, r3
   16ddc:	bne	17140 <g_type_class_adjust_private_offset@plt+0x47b0>
   16de0:	add	sp, sp, #132	; 0x84
   16de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16de8:	ldr	r0, [pc, #872]	; 17158 <g_type_class_adjust_private_offset@plt+0x47c8>
   16dec:	ldr	r2, [pc, #872]	; 1715c <g_type_class_adjust_private_offset@plt+0x47cc>
   16df0:	ldr	r1, [pc, #872]	; 17160 <g_type_class_adjust_private_offset@plt+0x47d0>
   16df4:	bl	123a8 <g_print@plt>
   16df8:	mov	r0, r8
   16dfc:	bl	12960 <exit@plt>
   16e00:	ldr	r1, [pc, #860]	; 17164 <g_type_class_adjust_private_offset@plt+0x47d4>
   16e04:	mov	r0, r7
   16e08:	bl	12708 <g_str_has_prefix@plt>
   16e0c:	cmp	r0, #0
   16e10:	beq	16f38 <g_type_class_adjust_private_offset@plt+0x45a8>
   16e14:	add	r7, r7, #7
   16e18:	mov	r0, r7
   16e1c:	mov	r2, #10
   16e20:	add	r1, sp, #8
   16e24:	str	r8, [sp, #12]
   16e28:	bl	1266c <strtol@plt>
   16e2c:	subs	r9, r0, #0
   16e30:	blt	16e4c <g_type_class_adjust_private_offset@plt+0x44bc>
   16e34:	ldr	r3, [sp, #8]
   16e38:	cmp	r3, r7
   16e3c:	beq	16e4c <g_type_class_adjust_private_offset@plt+0x44bc>
   16e40:	ldrb	r3, [r3]
   16e44:	cmp	r3, #0
   16e48:	beq	16e7c <g_type_class_adjust_private_offset@plt+0x44ec>
   16e4c:	mov	r1, r7
   16e50:	ldr	r0, [pc, #784]	; 17168 <g_type_class_adjust_private_offset@plt+0x47d8>
   16e54:	bl	12450 <g_printerr@plt>
   16e58:	ldr	r0, [sp, #12]
   16e5c:	cmp	r0, #0
   16e60:	beq	16dcc <g_type_class_adjust_private_offset@plt+0x443c>
   16e64:	bl	128a0 <g_error_free@plt>
   16e68:	b	16dcc <g_type_class_adjust_private_offset@plt+0x443c>
   16e6c:	bl	12978 <__errno_location@plt>
   16e70:	ldr	r7, [r0]
   16e74:	cmp	r7, #4
   16e78:	bne	170f0 <g_type_class_adjust_private_offset@plt+0x4760>
   16e7c:	add	r2, sp, #16
   16e80:	mov	r1, r9
   16e84:	mov	r0, #3
   16e88:	bl	124c8 <__fxstat64@plt>
   16e8c:	cmn	r0, #1
   16e90:	beq	16e6c <g_type_class_adjust_private_offset@plt+0x44dc>
   16e94:	cmp	r0, #0
   16e98:	bne	170e8 <g_type_class_adjust_private_offset@plt+0x4758>
   16e9c:	ldr	r3, [sp, #32]
   16ea0:	and	r3, r3, #61440	; 0xf000
   16ea4:	cmp	r3, #32768	; 0x8000
   16ea8:	movne	sl, #16
   16eac:	beq	16fc4 <g_type_class_adjust_private_offset@plt+0x4634>
   16eb0:	mov	r0, sl
   16eb4:	bl	1248c <g_malloc@plt>
   16eb8:	mov	fp, #0
   16ebc:	mov	r3, r6
   16ec0:	str	r5, [sp, #4]
   16ec4:	mov	r6, fp
   16ec8:	mov	r7, sl
   16ecc:	mov	r5, r9
   16ed0:	mov	fp, r3
   16ed4:	str	r0, [sp]
   16ed8:	ldr	r3, [sp]
   16edc:	cmp	r7, #4096	; 0x1000
   16ee0:	movcs	r7, #4096	; 0x1000
   16ee4:	add	r9, r3, r6
   16ee8:	mov	r2, r7
   16eec:	mov	r1, r9
   16ef0:	mov	r0, r5
   16ef4:	bl	1251c <read@plt>
   16ef8:	cmn	r0, #1
   16efc:	beq	16f5c <g_type_class_adjust_private_offset@plt+0x45cc>
   16f00:	cmp	r0, #0
   16f04:	beq	16fd8 <g_type_class_adjust_private_offset@plt+0x4648>
   16f08:	add	r6, r6, r0
   16f0c:	ldr	r3, [pc, #600]	; 1716c <g_type_class_adjust_private_offset@plt+0x47dc>
   16f10:	sub	r7, sl, r6
   16f14:	cmp	r7, r3
   16f18:	bhi	16ed8 <g_type_class_adjust_private_offset@plt+0x4548>
   16f1c:	lsl	sl, sl, #1
   16f20:	ldr	r0, [sp]
   16f24:	mov	r1, sl
   16f28:	bl	12720 <g_realloc@plt>
   16f2c:	sub	r7, sl, r6
   16f30:	str	r0, [sp]
   16f34:	b	16ed8 <g_type_class_adjust_private_offset@plt+0x4548>
   16f38:	mov	r1, r7
   16f3c:	ldr	r0, [pc, #556]	; 17170 <g_type_class_adjust_private_offset@plt+0x47e0>
   16f40:	bl	12450 <g_printerr@plt>
   16f44:	b	16dcc <g_type_class_adjust_private_offset@plt+0x443c>
   16f48:	mov	r1, r7
   16f4c:	ldr	r0, [pc, #544]	; 17174 <g_type_class_adjust_private_offset@plt+0x47e4>
   16f50:	bl	12450 <g_printerr@plt>
   16f54:	mov	r8, #0
   16f58:	b	16dcc <g_type_class_adjust_private_offset@plt+0x443c>
   16f5c:	bl	12978 <__errno_location@plt>
   16f60:	ldr	r2, [r0]
   16f64:	cmp	r2, #4
   16f68:	beq	16ee8 <g_type_class_adjust_private_offset@plt+0x4558>
   16f6c:	str	r2, [sp, #4]
   16f70:	bl	1272c <g_io_error_quark@plt>
   16f74:	ldr	r2, [sp, #4]
   16f78:	mov	r5, r0
   16f7c:	mov	r0, r2
   16f80:	bl	12744 <g_io_error_from_errno@plt>
   16f84:	ldr	r2, [sp, #4]
   16f88:	mov	r6, r0
   16f8c:	mov	r0, r2
   16f90:	bl	12858 <g_strerror@plt>
   16f94:	mov	r2, r6
   16f98:	mov	r1, r5
   16f9c:	mov	r3, r0
   16fa0:	add	r0, sp, #12
   16fa4:	bl	12810 <g_set_error_literal@plt>
   16fa8:	ldr	r0, [sp]
   16fac:	bl	12294 <g_free@plt>
   16fb0:	ldr	r3, [sp, #12]
   16fb4:	ldr	r0, [pc, #444]	; 17178 <g_type_class_adjust_private_offset@plt+0x47e8>
   16fb8:	ldr	r1, [r3, #8]
   16fbc:	bl	12450 <g_printerr@plt>
   16fc0:	b	16e58 <g_type_class_adjust_private_offset@plt+0x44c8>
   16fc4:	ldrd	sl, [sp, #64]	; 0x40
   16fc8:	cmp	sl, #1
   16fcc:	sbcs	r3, fp, #0
   16fd0:	movlt	sl, #16
   16fd4:	b	16eb0 <g_type_class_adjust_private_offset@plt+0x4520>
   16fd8:	mov	r3, fp
   16fdc:	mov	fp, r6
   16fe0:	ldr	r5, [sp, #4]
   16fe4:	mov	r1, fp
   16fe8:	str	r0, [sp, #4]
   16fec:	ldr	r0, [sp]
   16ff0:	mov	r6, r3
   16ff4:	bl	12558 <g_bytes_new_take@plt>
   16ff8:	ldr	r2, [sp, #4]
   16ffc:	mov	r7, r0
   17000:	str	r0, [sp]
   17004:	mov	r0, r2
   17008:	bl	12294 <g_free@plt>
   1700c:	cmp	r7, #0
   17010:	ldr	r2, [sp, #4]
   17014:	beq	16fb0 <g_type_class_adjust_private_offset@plt+0x4620>
   17018:	ldr	r8, [r6]
   1701c:	add	r1, sp, #16
   17020:	add	r8, r8, #1
   17024:	str	r8, [r6]
   17028:	ldr	r0, [sp]
   1702c:	str	r2, [sp, #4]
   17030:	bl	122d0 <g_bytes_get_data@plt>
   17034:	ldr	r2, [sp, #4]
   17038:	ldr	sl, [sp, #16]
   1703c:	mov	r1, r2
   17040:	mov	r2, sl
   17044:	mov	r7, r0
   17048:	bl	1290c <memchr@plt>
   1704c:	subs	r9, r0, #0
   17050:	beq	1712c <g_type_class_adjust_private_offset@plt+0x479c>
   17054:	sub	r6, r9, r7
   17058:	mov	r1, r6
   1705c:	mov	r0, r7
   17060:	bl	124bc <g_strndup@plt>
   17064:	mvn	r6, r6
   17068:	mov	r1, r8
   1706c:	add	r7, r9, #1
   17070:	add	sl, sl, r6
   17074:	add	fp, r8, #1
   17078:	mov	r8, fp
   1707c:	mov	r2, r0
   17080:	mov	r0, r5
   17084:	bl	122e8 <g_ptr_array_insert@plt>
   17088:	mov	r2, sl
   1708c:	mov	r0, r7
   17090:	mov	r1, #0
   17094:	bl	1290c <memchr@plt>
   17098:	subs	r9, r0, #0
   1709c:	bne	17054 <g_type_class_adjust_private_offset@plt+0x46c4>
   170a0:	cmp	sl, #0
   170a4:	bne	170c8 <g_type_class_adjust_private_offset@plt+0x4738>
   170a8:	ldr	r0, [sp, #12]
   170ac:	cmp	r0, #0
   170b0:	beq	170b8 <g_type_class_adjust_private_offset@plt+0x4728>
   170b4:	bl	128a0 <g_error_free@plt>
   170b8:	ldr	r0, [sp]
   170bc:	bl	127e0 <g_bytes_unref@plt>
   170c0:	mov	r8, #1
   170c4:	b	16dcc <g_type_class_adjust_private_offset@plt+0x443c>
   170c8:	mov	r1, sl
   170cc:	mov	r0, r7
   170d0:	bl	124bc <g_strndup@plt>
   170d4:	mov	r1, fp
   170d8:	mov	r2, r0
   170dc:	mov	r0, r5
   170e0:	bl	122e8 <g_ptr_array_insert@plt>
   170e4:	b	170a8 <g_type_class_adjust_private_offset@plt+0x4718>
   170e8:	bl	12978 <__errno_location@plt>
   170ec:	ldr	r7, [r0]
   170f0:	bl	1272c <g_io_error_quark@plt>
   170f4:	mov	r5, r0
   170f8:	mov	r0, r7
   170fc:	bl	12744 <g_io_error_from_errno@plt>
   17100:	mov	r6, r0
   17104:	mov	r0, r7
   17108:	bl	12858 <g_strerror@plt>
   1710c:	mov	r2, r6
   17110:	mov	r1, r5
   17114:	mov	r3, r0
   17118:	add	r0, sp, #12
   1711c:	bl	12810 <g_set_error_literal@plt>
   17120:	mov	r0, #0
   17124:	bl	12294 <g_free@plt>
   17128:	b	16fb0 <g_type_class_adjust_private_offset@plt+0x4620>
   1712c:	mov	fp, r8
   17130:	b	170a0 <g_type_class_adjust_private_offset@plt+0x4710>
   17134:	ldr	r3, [pc, #64]	; 1717c <g_type_class_adjust_private_offset@plt+0x47ec>
   17138:	ldr	r1, [r3]
   1713c:	bl	16ccc <g_type_class_adjust_private_offset@plt+0x433c>
   17140:	bl	1275c <__stack_chk_fail@plt>
   17144:	andeq	r8, r2, r0, ror ip
   17148:	muleq	r1, r0, lr
   1714c:	muleq	r1, r8, lr
   17150:	andeq	r7, r1, r4, asr #29
   17154:	andeq	r9, r2, r8
   17158:			; <UNDEFINED> instruction: 0x00017ebc
   1715c:	andeq	r7, r1, r4, lsr #29
   17160:	andeq	r7, r1, ip, lsr #29
   17164:	ldrdeq	r7, [r1], -ip
   17168:	andeq	r7, r1, r4, ror #29
   1716c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   17170:	andeq	r7, r1, r8, lsl pc
   17174:	andeq	r7, r1, ip, asr #29
   17178:	strdeq	r7, [r1], -ip
   1717c:	andeq	r9, r2, r0, lsl r0
   17180:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17184:	mov	r7, r0
   17188:	ldr	r6, [pc, #72]	; 171d8 <g_type_class_adjust_private_offset@plt+0x4848>
   1718c:	ldr	r5, [pc, #72]	; 171dc <g_type_class_adjust_private_offset@plt+0x484c>
   17190:	add	r6, pc, r6
   17194:	add	r5, pc, r5
   17198:	sub	r6, r6, r5
   1719c:	mov	r8, r1
   171a0:	mov	r9, r2
   171a4:	bl	12274 <g_free@plt-0x20>
   171a8:	asrs	r6, r6, #2
   171ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   171b0:	mov	r4, #0
   171b4:	add	r4, r4, #1
   171b8:	ldr	r3, [r5], #4
   171bc:	mov	r2, r9
   171c0:	mov	r1, r8
   171c4:	mov	r0, r7
   171c8:	blx	r3
   171cc:	cmp	r6, r4
   171d0:	bne	171b4 <g_type_class_adjust_private_offset@plt+0x4824>
   171d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   171d8:	ldrdeq	r1, [r1], -r4
   171dc:	andeq	r1, r1, ip, asr #21
   171e0:	bx	lr

Disassembly of section .fini:

000171e4 <.fini>:
   171e4:	push	{r3, lr}
   171e8:	pop	{r3, pc}
