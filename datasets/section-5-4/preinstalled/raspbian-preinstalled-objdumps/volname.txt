
raspbian-preinstalled/volname:     file format elf32-littlearm


Disassembly of section .init:

00010508 <.init>:
   10508:	push	{r3, lr}
   1050c:	bl	1074c <abort@plt+0x17c>
   10510:	pop	{r3, pc}

Disassembly of section .plt:

00010514 <read@plt-0x14>:
   10514:	push	{lr}		; (str lr, [sp, #-4]!)
   10518:	ldr	lr, [pc, #4]	; 10524 <read@plt-0x4>
   1051c:	add	lr, pc, lr
   10520:	ldr	pc, [lr, #8]!
   10524:	muleq	r1, r0, sl

00010528 <read@plt>:
   10528:	add	ip, pc, #0, 12
   1052c:	add	ip, ip, #16, 20	; 0x10000
   10530:	ldr	pc, [ip, #2704]!	; 0xa90

00010534 <lseek@plt>:
   10534:	add	ip, pc, #0, 12
   10538:	add	ip, ip, #16, 20	; 0x10000
   1053c:	ldr	pc, [ip, #2696]!	; 0xa88

00010540 <dcgettext@plt>:
   10540:	add	ip, pc, #0, 12
   10544:	add	ip, ip, #16, 20	; 0x10000
   10548:	ldr	pc, [ip, #2688]!	; 0xa80

0001054c <__stack_chk_fail@plt>:
   1054c:	add	ip, pc, #0, 12
   10550:	add	ip, ip, #16, 20	; 0x10000
   10554:	ldr	pc, [ip, #2680]!	; 0xa78

00010558 <textdomain@plt>:
   10558:	add	ip, pc, #0, 12
   1055c:	add	ip, ip, #16, 20	; 0x10000
   10560:	ldr	pc, [ip, #2672]!	; 0xa70

00010564 <perror@plt>:
   10564:	add	ip, pc, #0, 12
   10568:	add	ip, ip, #16, 20	; 0x10000
   1056c:	ldr	pc, [ip, #2664]!	; 0xa68

00010570 <__libc_start_main@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #16, 20	; 0x10000
   10578:	ldr	pc, [ip, #2656]!	; 0xa60

0001057c <__gmon_start__@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #16, 20	; 0x10000
   10584:	ldr	pc, [ip, #2648]!	; 0xa58

00010588 <open@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #16, 20	; 0x10000
   10590:	ldr	pc, [ip, #2640]!	; 0xa50

00010594 <exit@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #16, 20	; 0x10000
   1059c:	ldr	pc, [ip, #2632]!	; 0xa48

000105a0 <__printf_chk@plt>:
   105a0:	add	ip, pc, #0, 12
   105a4:	add	ip, ip, #16, 20	; 0x10000
   105a8:	ldr	pc, [ip, #2624]!	; 0xa40

000105ac <__fprintf_chk@plt>:
   105ac:	add	ip, pc, #0, 12
   105b0:	add	ip, ip, #16, 20	; 0x10000
   105b4:	ldr	pc, [ip, #2616]!	; 0xa38

000105b8 <setlocale@plt>:
   105b8:	add	ip, pc, #0, 12
   105bc:	add	ip, ip, #16, 20	; 0x10000
   105c0:	ldr	pc, [ip, #2608]!	; 0xa30

000105c4 <bindtextdomain@plt>:
   105c4:	add	ip, pc, #0, 12
   105c8:	add	ip, ip, #16, 20	; 0x10000
   105cc:	ldr	pc, [ip, #2600]!	; 0xa28

000105d0 <abort@plt>:
   105d0:	add	ip, pc, #0, 12
   105d4:	add	ip, ip, #16, 20	; 0x10000
   105d8:	ldr	pc, [ip, #2592]!	; 0xa20

Disassembly of section .text:

000105dc <.text>:
   105dc:	push	{r4, r5, r6, lr}
   105e0:	sub	sp, sp, #40	; 0x28
   105e4:	ldr	r4, [pc, #252]	; 106e8 <abort@plt+0x118>
   105e8:	mov	r5, r0
   105ec:	mov	r6, r1
   105f0:	ldr	r3, [r4]
   105f4:	ldr	r1, [pc, #240]	; 106ec <abort@plt+0x11c>
   105f8:	mov	r0, #6
   105fc:	str	r3, [sp, #36]	; 0x24
   10600:	bl	105b8 <setlocale@plt>
   10604:	ldr	r0, [pc, #228]	; 106f0 <abort@plt+0x120>
   10608:	bl	10558 <textdomain@plt>
   1060c:	ldr	r1, [pc, #224]	; 106f4 <abort@plt+0x124>
   10610:	ldr	r0, [pc, #216]	; 106f0 <abort@plt+0x120>
   10614:	bl	105c4 <bindtextdomain@plt>
   10618:	cmp	r5, #2
   1061c:	ldreq	r0, [r6, #4]
   10620:	beq	10660 <abort@plt+0x90>
   10624:	cmp	r5, #1
   10628:	ldreq	r0, [pc, #200]	; 106f8 <abort@plt+0x128>
   1062c:	beq	10660 <abort@plt+0x90>
   10630:	ldr	r3, [pc, #196]	; 106fc <abort@plt+0x12c>
   10634:	mov	r2, #5
   10638:	ldr	r1, [pc, #192]	; 10700 <abort@plt+0x130>
   1063c:	mov	r0, #0
   10640:	ldr	r4, [r3]
   10644:	bl	10540 <dcgettext@plt>
   10648:	mov	r1, #1
   1064c:	mov	r2, r0
   10650:	mov	r0, r4
   10654:	bl	105ac <__fprintf_chk@plt>
   10658:	mov	r0, #1
   1065c:	bl	10594 <exit@plt>
   10660:	mov	r1, #0
   10664:	bl	10588 <open@plt>
   10668:	cmn	r0, #1
   1066c:	mov	r5, r0
   10670:	bne	1068c <abort@plt+0xbc>
   10674:	mov	r2, #5
   10678:	ldr	r1, [pc, #132]	; 10704 <abort@plt+0x134>
   1067c:	mov	r0, #0
   10680:	bl	10540 <dcgettext@plt>
   10684:	bl	10564 <perror@plt>
   10688:	b	10658 <abort@plt+0x88>
   1068c:	mov	r2, #0
   10690:	ldr	r1, [pc, #112]	; 10708 <abort@plt+0x138>
   10694:	bl	10534 <lseek@plt>
   10698:	cmn	r0, #1
   1069c:	beq	10674 <abort@plt+0xa4>
   106a0:	mov	r2, #32
   106a4:	mov	r1, sp
   106a8:	mov	r0, r5
   106ac:	bl	10528 <read@plt>
   106b0:	cmn	r0, #1
   106b4:	beq	10674 <abort@plt+0xa4>
   106b8:	mov	r2, sp
   106bc:	ldr	r1, [pc, #72]	; 1070c <abort@plt+0x13c>
   106c0:	mov	r0, #1
   106c4:	bl	105a0 <__printf_chk@plt>
   106c8:	ldr	r2, [sp, #36]	; 0x24
   106cc:	ldr	r3, [r4]
   106d0:	mov	r0, #0
   106d4:	cmp	r2, r3
   106d8:	beq	106e0 <abort@plt+0x110>
   106dc:	bl	1054c <__stack_chk_fail@plt>
   106e0:	add	sp, sp, #40	; 0x28
   106e4:	pop	{r4, r5, r6, pc}
   106e8:			; <UNDEFINED> instruction: 0x00020eb0
   106ec:	andeq	r0, r1, sl, ror #17
   106f0:			; <UNDEFINED> instruction: 0x000108b3
   106f4:			; <UNDEFINED> instruction: 0x000108b9
   106f8:	andeq	r0, r1, r8, lsr #17
   106fc:	andeq	r1, r2, r8
   10700:	andeq	r0, r1, fp, asr #17
   10704:	andeq	r0, r1, fp, ror #17
   10708:	andeq	r8, r0, r8, lsr #32
   1070c:	strdeq	r0, [r1], -r3
   10710:	mov	fp, #0
   10714:	mov	lr, #0
   10718:	pop	{r1}		; (ldr r1, [sp], #4)
   1071c:	mov	r2, sp
   10720:	push	{r2}		; (str r2, [sp, #-4]!)
   10724:	push	{r0}		; (str r0, [sp, #-4]!)
   10728:	ldr	ip, [pc, #16]	; 10740 <abort@plt+0x170>
   1072c:	push	{ip}		; (str ip, [sp, #-4]!)
   10730:	ldr	r0, [pc, #12]	; 10744 <abort@plt+0x174>
   10734:	ldr	r3, [pc, #12]	; 10748 <abort@plt+0x178>
   10738:	bl	10570 <__libc_start_main@plt>
   1073c:	bl	105d0 <abort@plt>
   10740:	muleq	r1, r8, r8
   10744:	ldrdeq	r0, [r1], -ip
   10748:	andeq	r0, r1, r8, lsr r8
   1074c:	ldr	r3, [pc, #20]	; 10768 <abort@plt+0x198>
   10750:	ldr	r2, [pc, #20]	; 1076c <abort@plt+0x19c>
   10754:	add	r3, pc, r3
   10758:	ldr	r2, [r3, r2]
   1075c:	cmp	r2, #0
   10760:	bxeq	lr
   10764:	b	1057c <__gmon_start__@plt>
   10768:	andeq	r0, r1, r8, asr r8
   1076c:	andeq	r0, r0, r8, asr #32
   10770:	ldr	r3, [pc, #28]	; 10794 <abort@plt+0x1c4>
   10774:	ldr	r0, [pc, #28]	; 10798 <abort@plt+0x1c8>
   10778:	sub	r3, r3, r0
   1077c:	cmp	r3, #6
   10780:	bxls	lr
   10784:	ldr	r3, [pc, #16]	; 1079c <abort@plt+0x1cc>
   10788:	cmp	r3, #0
   1078c:	bxeq	lr
   10790:	bx	r3
   10794:	andeq	r1, r2, fp
   10798:	andeq	r1, r2, r8
   1079c:	andeq	r0, r0, r0
   107a0:	ldr	r1, [pc, #36]	; 107cc <abort@plt+0x1fc>
   107a4:	ldr	r0, [pc, #36]	; 107d0 <abort@plt+0x200>
   107a8:	sub	r1, r1, r0
   107ac:	asr	r1, r1, #2
   107b0:	add	r1, r1, r1, lsr #31
   107b4:	asrs	r1, r1, #1
   107b8:	bxeq	lr
   107bc:	ldr	r3, [pc, #16]	; 107d4 <abort@plt+0x204>
   107c0:	cmp	r3, #0
   107c4:	bxeq	lr
   107c8:	bx	r3
   107cc:	andeq	r1, r2, r8
   107d0:	andeq	r1, r2, r8
   107d4:	andeq	r0, r0, r0
   107d8:	push	{r4, lr}
   107dc:	ldr	r4, [pc, #24]	; 107fc <abort@plt+0x22c>
   107e0:	ldrb	r3, [r4]
   107e4:	cmp	r3, #0
   107e8:	popne	{r4, pc}
   107ec:	bl	10770 <abort@plt+0x1a0>
   107f0:	mov	r3, #1
   107f4:	strb	r3, [r4]
   107f8:	pop	{r4, pc}
   107fc:	andeq	r1, r2, ip
   10800:	ldr	r0, [pc, #40]	; 10830 <abort@plt+0x260>
   10804:	ldr	r3, [r0]
   10808:	cmp	r3, #0
   1080c:	bne	10814 <abort@plt+0x244>
   10810:	b	107a0 <abort@plt+0x1d0>
   10814:	ldr	r3, [pc, #24]	; 10834 <abort@plt+0x264>
   10818:	cmp	r3, #0
   1081c:	beq	10810 <abort@plt+0x240>
   10820:	push	{r4, lr}
   10824:	blx	r3
   10828:	pop	{r4, lr}
   1082c:	b	107a0 <abort@plt+0x1d0>
   10830:	andeq	r0, r2, ip, lsr #29
   10834:	andeq	r0, r0, r0
   10838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1083c:	mov	r7, r0
   10840:	ldr	r6, [pc, #72]	; 10890 <abort@plt+0x2c0>
   10844:	ldr	r5, [pc, #72]	; 10894 <abort@plt+0x2c4>
   10848:	add	r6, pc, r6
   1084c:	add	r5, pc, r5
   10850:	sub	r6, r6, r5
   10854:	mov	r8, r1
   10858:	mov	r9, r2
   1085c:	bl	10508 <read@plt-0x20>
   10860:	asrs	r6, r6, #2
   10864:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10868:	mov	r4, #0
   1086c:	add	r4, r4, #1
   10870:	ldr	r3, [r5], #4
   10874:	mov	r2, r9
   10878:	mov	r1, r8
   1087c:	mov	r0, r7
   10880:	blx	r3
   10884:	cmp	r6, r4
   10888:	bne	1086c <abort@plt+0x29c>
   1088c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10890:	andeq	r0, r1, r8, asr r6
   10894:	andeq	r0, r1, r0, asr r6
   10898:	bx	lr

Disassembly of section .fini:

0001089c <.fini>:
   1089c:	push	{r3, lr}
   108a0:	pop	{r3, pc}
