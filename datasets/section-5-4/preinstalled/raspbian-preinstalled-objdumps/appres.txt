
raspbian-preinstalled/appres:     file format elf32-littlearm


Disassembly of section .init:

00010828 <_init@@Base>:
   10828:	push	{r3, lr}
   1082c:	bl	10c10 <abort@plt+0x2d8>
   10830:	pop	{r3, pc}

Disassembly of section .plt:

00010834 <XtDatabase@plt-0x14>:
   10834:	push	{lr}		; (str lr, [sp, #-4]!)
   10838:	ldr	lr, [pc, #4]	; 10844 <_init@@Base+0x1c>
   1083c:	add	lr, pc, lr
   10840:	ldr	pc, [lr, #8]!
   10844:			; <UNDEFINED> instruction: 0x000117bc

00010848 <XtDatabase@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #69632	; 0x11000
   10850:	ldr	pc, [ip, #1980]!	; 0x7bc

00010854 <XrmEnumerateDatabase@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #69632	; 0x11000
   1085c:	ldr	pc, [ip, #1972]!	; 0x7b4

00010860 <strcmp@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #69632	; 0x11000
   10868:	ldr	pc, [ip, #1964]!	; 0x7ac

0001086c <XrmQuarkToString@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #1956]!	; 0x7a4

00010878 <XtAppInitialize@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #1948]!	; 0x79c

00010884 <__stack_chk_fail@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1940]!	; 0x794

00010890 <XrmPermStringToQuark@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1932]!	; 0x78c

0001089c <_IO_putc@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1924]!	; 0x784

000108a8 <fwrite@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1916]!	; 0x77c

000108b4 <puts@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1908]!	; 0x774

000108c0 <__libc_start_main@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1900]!	; 0x76c

000108cc <__gmon_start__@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1892]!	; 0x764

000108d8 <exit@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1884]!	; 0x75c

000108e4 <XtGetApplicationNameAndClass@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1876]!	; 0x754

000108f0 <XtDisplay@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1868]!	; 0x74c

000108fc <__fprintf_chk@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1860]!	; 0x744

00010908 <XrmStringToQuarkList@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1852]!	; 0x73c

00010914 <fputc@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1844]!	; 0x734

00010920 <XrmStringToQuark@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1836]!	; 0x72c

0001092c <fputs@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1828]!	; 0x724

00010938 <abort@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1820]!	; 0x71c

Disassembly of section .text:

00010944 <.text>:
   10944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10948:	mov	r5, r1
   1094c:	ldr	r3, [r1]
   10950:	ldr	sl, [pc, #592]	; 10ba8 <abort@plt+0x270>
   10954:	ldr	r1, [pc, #592]	; 10bac <abort@plt+0x274>
   10958:	sub	sp, sp, #860	; 0x35c
   1095c:	str	r3, [sl]
   10960:	ldr	r1, [r1]
   10964:	ldr	r3, [pc, #580]	; 10bb0 <abort@plt+0x278>
   10968:	cmp	r0, #1
   1096c:	str	r0, [sp, #28]
   10970:	str	r1, [sp, #852]	; 0x354
   10974:	str	r3, [sp, #32]
   10978:	str	r3, [sp, #36]	; 0x24
   1097c:	ble	109ac <abort@plt+0x74>
   10980:	ldr	r3, [r5, #4]
   10984:	ldrb	r1, [r3]
   10988:	cmp	r1, #45	; 0x2d
   1098c:	beq	109ac <abort@plt+0x74>
   10990:	cmp	r0, #2
   10994:	str	r3, [sp, #36]	; 0x24
   10998:	beq	109ac <abort@plt+0x74>
   1099c:	ldr	r3, [r5, #8]
   109a0:	ldrb	r2, [r3]
   109a4:	cmp	r2, #45	; 0x2d
   109a8:	strne	r3, [sp, #32]
   109ac:	add	r1, sp, #448	; 0x1c0
   109b0:	ldr	r0, [sp, #36]	; 0x24
   109b4:	bl	10908 <XrmStringToQuarkList@plt>
   109b8:	ldr	r0, [sp, #32]
   109bc:	add	r1, sp, #44	; 0x2c
   109c0:	bl	10908 <XrmStringToQuarkList@plt>
   109c4:	ldr	r0, [sp, #44]	; 0x2c
   109c8:	cmp	r0, #0
   109cc:	beq	10ba0 <abort@plt+0x268>
   109d0:	add	r1, sp, #48	; 0x30
   109d4:	mov	r3, #0
   109d8:	b	109e0 <abort@plt+0xa8>
   109dc:	mov	r3, r2
   109e0:	ldr	ip, [r1], #4
   109e4:	add	r2, r3, #1
   109e8:	cmp	ip, #0
   109ec:	bne	109dc <abort@plt+0xa4>
   109f0:	add	r1, sp, #856	; 0x358
   109f4:	add	r2, r1, r2, lsl #2
   109f8:	ldr	r6, [r2, #-408]	; 0xfffffe68
   109fc:	cmp	r6, #0
   10a00:	bne	10ba0 <abort@plt+0x268>
   10a04:	add	r3, r1, r3, lsl #2
   10a08:	ldr	r3, [r3, #-408]	; 0xfffffe68
   10a0c:	cmp	r3, #0
   10a10:	beq	10ba0 <abort@plt+0x268>
   10a14:	bl	1086c <XrmQuarkToString@plt>
   10a18:	str	r0, [r5]
   10a1c:	ldr	r0, [sp, #448]	; 0x1c0
   10a20:	bl	1086c <XrmQuarkToString@plt>
   10a24:	add	r3, sp, #28
   10a28:	str	r6, [sp, #16]
   10a2c:	stm	sp, {r3, r5, r6}
   10a30:	mov	r2, r6
   10a34:	str	r6, [sp, #12]
   10a38:	mov	r3, r6
   10a3c:	mov	r1, r0
   10a40:	add	r0, sp, #40	; 0x28
   10a44:	bl	10878 <XtAppInitialize@plt>
   10a48:	ldr	r7, [sp, #28]
   10a4c:	str	r6, [sp, #32]
   10a50:	cmp	r7, #1
   10a54:	str	r6, [sp, #36]	; 0x24
   10a58:	str	r0, [sp, #24]
   10a5c:	ble	10b60 <abort@plt+0x228>
   10a60:	ldr	r8, [pc, #332]	; 10bb4 <abort@plt+0x27c>
   10a64:	ldr	r9, [pc, #332]	; 10bb8 <abort@plt+0x280>
   10a68:	mov	r4, #1
   10a6c:	b	10abc <abort@plt+0x184>
   10a70:	mov	r1, r9
   10a74:	mov	r0, fp
   10a78:	bl	10860 <strcmp@plt>
   10a7c:	subs	r2, r0, #0
   10a80:	beq	10b48 <abort@plt+0x210>
   10a84:	ldrb	r2, [fp]
   10a88:	cmp	r2, #45	; 0x2d
   10a8c:	beq	10b84 <abort@plt+0x24c>
   10a90:	ldr	r2, [sp, #36]	; 0x24
   10a94:	cmp	r2, #0
   10a98:	streq	fp, [sp, #36]	; 0x24
   10a9c:	beq	10ab0 <abort@plt+0x178>
   10aa0:	ldr	r2, [sp, #32]
   10aa4:	cmp	r2, #0
   10aa8:	bne	10ba0 <abort@plt+0x268>
   10aac:	str	fp, [sp, #32]
   10ab0:	add	r4, r4, #1
   10ab4:	cmp	r4, r7
   10ab8:	beq	10ae4 <abort@plt+0x1ac>
   10abc:	ldr	fp, [r5, #4]!
   10ac0:	mov	r1, r8
   10ac4:	mov	r0, fp
   10ac8:	bl	10860 <strcmp@plt>
   10acc:	cmp	r0, #0
   10ad0:	bne	10a70 <abort@plt+0x138>
   10ad4:	add	r4, r4, #1
   10ad8:	cmp	r4, r7
   10adc:	mov	r6, #1
   10ae0:	bne	10abc <abort@plt+0x184>
   10ae4:	ldr	r3, [sp, #32]
   10ae8:	cmp	r3, #0
   10aec:	beq	10b60 <abort@plt+0x228>
   10af0:	ldr	r0, [pc, #196]	; 10bbc <abort@plt+0x284>
   10af4:	bl	10890 <XrmPermStringToQuark@plt>
   10af8:	str	r0, [sl, #4]
   10afc:	ldr	r0, [sp, #24]
   10b00:	bl	108f0 <XtDisplay@plt>
   10b04:	bl	10848 <XtDatabase@plt>
   10b08:	ldr	r2, [pc, #176]	; 10bc0 <abort@plt+0x288>
   10b0c:	ldr	ip, [pc, #176]	; 10bc4 <abort@plt+0x28c>
   10b10:	mov	r3, r6
   10b14:	ldr	lr, [r2]
   10b18:	add	r1, sp, #44	; 0x2c
   10b1c:	add	r2, sp, #448	; 0x1c0
   10b20:	stm	sp, {ip, lr}
   10b24:	bl	10854 <XrmEnumerateDatabase@plt>
   10b28:	ldr	r3, [pc, #124]	; 10bac <abort@plt+0x274>
   10b2c:	ldr	r2, [sp, #852]	; 0x354
   10b30:	mov	r0, #0
   10b34:	ldr	r3, [r3]
   10b38:	cmp	r2, r3
   10b3c:	bne	10ba4 <abort@plt+0x26c>
   10b40:	add	sp, sp, #860	; 0x35c
   10b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b48:	ldr	r0, [pc, #120]	; 10bc8 <abort@plt+0x290>
   10b4c:	str	r2, [sp, #24]
   10b50:	bl	108b4 <puts@plt>
   10b54:	ldr	r2, [sp, #24]
   10b58:	mov	r0, r2
   10b5c:	bl	108d8 <exit@plt>
   10b60:	ldr	r0, [sp, #24]
   10b64:	bl	108f0 <XtDisplay@plt>
   10b68:	add	r2, sp, #36	; 0x24
   10b6c:	add	r1, sp, #32
   10b70:	bl	108e4 <XtGetApplicationNameAndClass@plt>
   10b74:	ldr	r0, [sp, #32]
   10b78:	bl	10920 <XrmStringToQuark@plt>
   10b7c:	str	r0, [sp, #44]	; 0x2c
   10b80:	b	10af0 <abort@plt+0x1b8>
   10b84:	ldr	r2, [pc, #64]	; 10bcc <abort@plt+0x294>
   10b88:	str	fp, [sp]
   10b8c:	ldr	r3, [sl]
   10b90:	ldr	r0, [r2]
   10b94:	mov	r1, #1
   10b98:	ldr	r2, [pc, #48]	; 10bd0 <abort@plt+0x298>
   10b9c:	bl	108fc <__fprintf_chk@plt>
   10ba0:	bl	10cc4 <abort@plt+0x38c>
   10ba4:	bl	10884 <__stack_chk_fail@plt>
   10ba8:	andeq	r2, r2, ip, ror r0
   10bac:	strdeq	r1, [r2], -r8
   10bb0:	andeq	r1, r1, r0, lsl #1
   10bb4:	muleq	r1, r0, r0
   10bb8:	muleq	r1, r4, r0
   10bbc:	andeq	r1, r1, r8, asr #1
   10bc0:	andeq	r2, r2, r4, ror r0
   10bc4:	strdeq	r0, [r1], -r8
   10bc8:	muleq	r1, r8, r0
   10bcc:	andeq	r2, r2, r0, ror r0
   10bd0:	andeq	r1, r1, r8, lsr #1
   10bd4:	mov	fp, #0
   10bd8:	mov	lr, #0
   10bdc:	pop	{r1}		; (ldr r1, [sp], #4)
   10be0:	mov	r2, sp
   10be4:	push	{r2}		; (str r2, [sp, #-4]!)
   10be8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bec:	ldr	ip, [pc, #16]	; 10c04 <abort@plt+0x2cc>
   10bf0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf4:	ldr	r0, [pc, #12]	; 10c08 <abort@plt+0x2d0>
   10bf8:	ldr	r3, [pc, #12]	; 10c0c <abort@plt+0x2d4>
   10bfc:	bl	108c0 <__libc_start_main@plt>
   10c00:	bl	10938 <abort@plt>
   10c04:	andeq	r0, r1, ip, ror pc
   10c08:	andeq	r0, r1, r4, asr #18
   10c0c:	andeq	r0, r1, ip, lsl pc
   10c10:	ldr	r3, [pc, #20]	; 10c2c <abort@plt+0x2f4>
   10c14:	ldr	r2, [pc, #20]	; 10c30 <abort@plt+0x2f8>
   10c18:	add	r3, pc, r3
   10c1c:	ldr	r2, [r3, r2]
   10c20:	cmp	r2, #0
   10c24:	bxeq	lr
   10c28:	b	108cc <__gmon_start__@plt>
   10c2c:	andeq	r1, r1, r0, ror #7
   10c30:	andeq	r0, r0, r0, rrx
   10c34:	ldr	r0, [pc, #24]	; 10c54 <abort@plt+0x31c>
   10c38:	ldr	r3, [pc, #24]	; 10c58 <abort@plt+0x320>
   10c3c:	cmp	r3, r0
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <abort@plt+0x324>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	andeq	r2, r2, ip, rrx
   10c58:	andeq	r2, r2, ip, rrx
   10c5c:	andeq	r0, r0, r0
   10c60:	ldr	r0, [pc, #36]	; 10c8c <abort@plt+0x354>
   10c64:	ldr	r1, [pc, #36]	; 10c90 <abort@plt+0x358>
   10c68:	sub	r1, r1, r0
   10c6c:	asr	r1, r1, #2
   10c70:	add	r1, r1, r1, lsr #31
   10c74:	asrs	r1, r1, #1
   10c78:	bxeq	lr
   10c7c:	ldr	r3, [pc, #16]	; 10c94 <abort@plt+0x35c>
   10c80:	cmp	r3, #0
   10c84:	bxeq	lr
   10c88:	bx	r3
   10c8c:	andeq	r2, r2, ip, rrx
   10c90:	andeq	r2, r2, ip, rrx
   10c94:	andeq	r0, r0, r0
   10c98:	push	{r4, lr}
   10c9c:	ldr	r4, [pc, #24]	; 10cbc <abort@plt+0x384>
   10ca0:	ldrb	r3, [r4]
   10ca4:	cmp	r3, #0
   10ca8:	popne	{r4, pc}
   10cac:	bl	10c34 <abort@plt+0x2fc>
   10cb0:	mov	r3, #1
   10cb4:	strb	r3, [r4]
   10cb8:	pop	{r4, pc}
   10cbc:	andeq	r2, r2, r8, ror r0
   10cc0:	b	10c60 <abort@plt+0x328>
   10cc4:	ldr	r1, [pc, #32]	; 10cec <abort@plt+0x3b4>
   10cc8:	ldr	r3, [pc, #32]	; 10cf0 <abort@plt+0x3b8>
   10ccc:	push	{r4, lr}
   10cd0:	ldr	r2, [pc, #28]	; 10cf4 <abort@plt+0x3bc>
   10cd4:	ldr	r0, [r1]
   10cd8:	ldr	r3, [r3]
   10cdc:	mov	r1, #1
   10ce0:	bl	108fc <__fprintf_chk@plt>
   10ce4:	mov	r0, #1
   10ce8:	bl	108d8 <exit@plt>
   10cec:	andeq	r2, r2, r0, ror r0
   10cf0:	andeq	r2, r2, ip, ror r0
   10cf4:	andeq	r0, r1, ip, lsl #31
   10cf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cfc:	mov	r8, r3
   10d00:	ldr	r9, [pc, #504]	; 10f00 <abort@plt+0x5c8>
   10d04:	mov	r6, r1
   10d08:	ldr	r1, [r3]
   10d0c:	ldr	r3, [r9, #4]
   10d10:	mov	r4, r2
   10d14:	cmp	r1, r3
   10d18:	ldr	r7, [sp, #32]
   10d1c:	ldr	r5, [sp, #36]	; 0x24
   10d20:	bne	10d90 <abort@plt+0x458>
   10d24:	ldr	r3, [r2]
   10d28:	cmp	r3, #0
   10d2c:	beq	10ec4 <abort@plt+0x58c>
   10d30:	sub	r6, r6, #4
   10d34:	mov	r2, #0
   10d38:	b	10d5c <abort@plt+0x424>
   10d3c:	ldr	r0, [r4]
   10d40:	bl	1086c <XrmQuarkToString@plt>
   10d44:	mov	r1, r5
   10d48:	bl	1092c <fputs@plt>
   10d4c:	ldr	r3, [r4, #4]!
   10d50:	mov	r2, #1
   10d54:	cmp	r3, #0
   10d58:	beq	10da8 <abort@plt+0x470>
   10d5c:	ldr	r3, [r6, #4]!
   10d60:	cmp	r3, #1
   10d64:	beq	10d80 <abort@plt+0x448>
   10d68:	cmp	r2, #0
   10d6c:	beq	10d3c <abort@plt+0x404>
   10d70:	mov	r1, r5
   10d74:	mov	r0, #46	; 0x2e
   10d78:	bl	10914 <fputc@plt>
   10d7c:	b	10d3c <abort@plt+0x404>
   10d80:	mov	r1, r5
   10d84:	mov	r0, #42	; 0x2a
   10d88:	bl	10914 <fputc@plt>
   10d8c:	b	10d3c <abort@plt+0x404>
   10d90:	mov	r1, r5
   10d94:	mov	r0, #33	; 0x21
   10d98:	bl	1089c <_IO_putc@plt>
   10d9c:	ldr	r3, [r4]
   10da0:	cmp	r3, #0
   10da4:	bne	10d30 <abort@plt+0x3f8>
   10da8:	ldr	r0, [r8]
   10dac:	ldr	r3, [r9, #4]
   10db0:	ldr	r6, [r7, #4]
   10db4:	cmp	r0, r3
   10db8:	ldr	r4, [r7]
   10dbc:	beq	10ec8 <abort@plt+0x590>
   10dc0:	bl	1086c <XrmQuarkToString@plt>
   10dc4:	ldr	r2, [pc, #312]	; 10f04 <abort@plt+0x5cc>
   10dc8:	mov	r1, #1
   10dcc:	mov	r3, r0
   10dd0:	mov	r0, r5
   10dd4:	bl	108fc <__fprintf_chk@plt>
   10dd8:	cmp	r4, #0
   10ddc:	beq	10e88 <abort@plt+0x550>
   10de0:	ldrb	r3, [r6]
   10de4:	cmp	r3, #9
   10de8:	cmpne	r3, #32
   10dec:	beq	10eec <abort@plt+0x5b4>
   10df0:	ldr	r7, [pc, #272]	; 10f08 <abort@plt+0x5d0>
   10df4:	ldr	r9, [pc, #272]	; 10f0c <abort@plt+0x5d4>
   10df8:	ldr	r8, [pc, #272]	; 10f10 <abort@plt+0x5d8>
   10dfc:	sub	r4, r4, #1
   10e00:	b	10e50 <abort@plt+0x518>
   10e04:	cmp	r3, #92	; 0x5c
   10e08:	beq	10e9c <abort@plt+0x564>
   10e0c:	cmp	r3, #31
   10e10:	movhi	r2, #0
   10e14:	movls	r2, #1
   10e18:	cmp	r3, #9
   10e1c:	moveq	r2, #0
   10e20:	cmp	r2, #0
   10e24:	bne	10e34 <abort@plt+0x4fc>
   10e28:	sub	r2, r3, #127	; 0x7f
   10e2c:	cmp	r2, #32
   10e30:	bhi	10eb4 <abort@plt+0x57c>
   10e34:	mov	r2, r7
   10e38:	mov	r1, #1
   10e3c:	mov	r0, r5
   10e40:	bl	108fc <__fprintf_chk@plt>
   10e44:	subs	r4, r4, #1
   10e48:	bcc	10e88 <abort@plt+0x550>
   10e4c:	ldrb	r3, [r6, #1]!
   10e50:	cmp	r3, #10
   10e54:	bne	10e04 <abort@plt+0x4cc>
   10e58:	cmp	r4, #0
   10e5c:	mov	r3, r5
   10e60:	beq	10e78 <abort@plt+0x540>
   10e64:	mov	r2, #4
   10e68:	mov	r1, #1
   10e6c:	mov	r0, r8
   10e70:	bl	108a8 <fwrite@plt>
   10e74:	b	10e44 <abort@plt+0x50c>
   10e78:	mov	r2, #2
   10e7c:	mov	r1, #1
   10e80:	ldr	r0, [pc, #140]	; 10f14 <abort@plt+0x5dc>
   10e84:	bl	108a8 <fwrite@plt>
   10e88:	mov	r1, r5
   10e8c:	mov	r0, #10
   10e90:	bl	1089c <_IO_putc@plt>
   10e94:	mov	r0, #0
   10e98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e9c:	mov	r3, r5
   10ea0:	mov	r2, #2
   10ea4:	mov	r1, #1
   10ea8:	mov	r0, r9
   10eac:	bl	108a8 <fwrite@plt>
   10eb0:	b	10e44 <abort@plt+0x50c>
   10eb4:	mov	r0, r3
   10eb8:	mov	r1, r5
   10ebc:	bl	1089c <_IO_putc@plt>
   10ec0:	b	10e44 <abort@plt+0x50c>
   10ec4:	ldm	r7, {r4, r6}
   10ec8:	mov	r3, r5
   10ecc:	mov	r2, #2
   10ed0:	mov	r1, #1
   10ed4:	ldr	r0, [pc, #60]	; 10f18 <abort@plt+0x5e0>
   10ed8:	bl	108a8 <fwrite@plt>
   10edc:	cmp	r4, #0
   10ee0:	subne	r4, r4, #1
   10ee4:	bne	10dd8 <abort@plt+0x4a0>
   10ee8:	b	10e88 <abort@plt+0x550>
   10eec:	mov	r1, r5
   10ef0:	mov	r0, #92	; 0x5c
   10ef4:	bl	1089c <_IO_putc@plt>
   10ef8:	ldrb	r3, [r6]
   10efc:	b	10df0 <abort@plt+0x4b8>
   10f00:	andeq	r2, r2, ip, ror r0
   10f04:	andeq	r1, r1, r0, rrx
   10f08:	andeq	r1, r1, r8, ror r0
   10f0c:	andeq	r1, r1, r4, ror r0
   10f10:	andeq	r1, r1, r8, rrx
   10f14:	andeq	r1, r1, r0, ror r0
   10f18:	andeq	r1, r1, ip, asr r0
   10f1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f20:	mov	r7, r0
   10f24:	ldr	r6, [pc, #72]	; 10f74 <abort@plt+0x63c>
   10f28:	ldr	r5, [pc, #72]	; 10f78 <abort@plt+0x640>
   10f2c:	add	r6, pc, r6
   10f30:	add	r5, pc, r5
   10f34:	sub	r6, r6, r5
   10f38:	mov	r8, r1
   10f3c:	mov	r9, r2
   10f40:	bl	10828 <_init@@Base>
   10f44:	asrs	r6, r6, #2
   10f48:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f4c:	mov	r4, #0
   10f50:	add	r4, r4, #1
   10f54:	ldr	r3, [r5], #4
   10f58:	mov	r2, r9
   10f5c:	mov	r1, r8
   10f60:	mov	r0, r7
   10f64:	blx	r3
   10f68:	cmp	r6, r4
   10f6c:	bne	10f50 <abort@plt+0x618>
   10f70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f74:	andeq	r0, r1, r0, asr #31
   10f78:			; <UNDEFINED> instruction: 0x00010fb8
   10f7c:	bx	lr

Disassembly of section .fini:

00010f80 <_fini@@Base>:
   10f80:	push	{r3, lr}
   10f84:	pop	{r3, pc}
