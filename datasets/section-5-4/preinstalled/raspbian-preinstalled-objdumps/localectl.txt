
raspbian-preinstalled/localectl:     file format elf32-littlearm


Disassembly of section .init:

00000f80 <.init>:
 f80:	push	{r3, lr}
 f84:	bl	1664 <log_oom_internal@plt+0x40c>
 f88:	pop	{r3, pc}

Disassembly of section .plt:

00000f8c <bus_log_create_error@plt-0x14>:
     f8c:	push	{lr}		; (str lr, [sp, #-4]!)
     f90:	ldr	lr, [pc, #4]	; f9c <bus_log_create_error@plt-0x4>
     f94:	add	lr, pc, lr
     f98:	ldr	pc, [lr, #8]!
     f9c:	andeq	r2, r1, ip, lsr pc

00000fa0 <bus_log_create_error@plt>:
     fa0:	add	ip, pc, #0, 12
     fa4:	add	ip, ip, #73728	; 0x12000
     fa8:	ldr	pc, [ip, #3900]!	; 0xf3c

00000fac <locale_variables_free@plt>:
     fac:	add	ip, pc, #0, 12
     fb0:	add	ip, ip, #73728	; 0x12000
     fb4:	ldr	pc, [ip, #3892]!	; 0xf34

00000fb8 <version@plt>:
     fb8:	add	ip, pc, #0, 12
     fbc:	add	ip, ip, #73728	; 0x12000
     fc0:	ldr	pc, [ip, #3884]!	; 0xf2c

00000fc4 <free@plt>:
     fc4:	add	ip, pc, #0, 12
     fc8:	add	ip, ip, #73728	; 0x12000
     fcc:	ldr	pc, [ip, #3876]!	; 0xf24

00000fd0 <log_open@plt>:
     fd0:	add	ip, pc, #0, 12
     fd4:	add	ip, ip, #73728	; 0x12000
     fd8:	ldr	pc, [ip, #3868]!	; 0xf1c

00000fdc <log_assert_failed_unreachable_realm@plt>:
     fdc:	add	ip, pc, #0, 12
     fe0:	add	ip, ip, #73728	; 0x12000
     fe4:	ldr	pc, [ip, #3860]!	; 0xf14

00000fe8 <strncmp@plt>:
     fe8:	add	ip, pc, #0, 12
     fec:	add	ip, ip, #73728	; 0x12000
     ff0:	ldr	pc, [ip, #3852]!	; 0xf0c

00000ff4 <strcspn@plt>:
     ff4:	add	ip, pc, #0, 12
     ff8:	add	ip, ip, #73728	; 0x12000
     ffc:	ldr	pc, [ip, #3844]!	; 0xf04

00001000 <ask_password_agent_close@plt>:
    1000:	add	ip, pc, #0, 12
    1004:	add	ip, ip, #73728	; 0x12000
    1008:	ldr	pc, [ip, #3836]!	; 0xefc

0000100c <polkit_agent_close@plt>:
    100c:	add	ip, pc, #0, 12
    1010:	add	ip, ip, #73728	; 0x12000
    1014:	ldr	pc, [ip, #3828]!	; 0xef4

00001018 <mac_selinux_finish@plt>:
    1018:	add	ip, pc, #0, 12
    101c:	add	ip, ip, #73728	; 0x12000
    1020:	ldr	pc, [ip, #3820]!	; 0xeec

00001024 <get_locales@plt>:
    1024:	add	ip, pc, #0, 12
    1028:	add	ip, ip, #73728	; 0x12000
    102c:	ldr	pc, [ip, #3812]!	; 0xee4

00001030 <puts@plt>:
    1030:	add	ip, pc, #0, 12
    1034:	add	ip, ip, #73728	; 0x12000
    1038:	ldr	pc, [ip, #3804]!	; 0xedc

0000103c <strv_sort@plt>:
    103c:	add	ip, pc, #0, 12
    1040:	add	ip, ip, #73728	; 0x12000
    1044:	ldr	pc, [ip, #3796]!	; 0xed4

00001048 <memset@plt>:
    1048:	add	ip, pc, #0, 12
    104c:	add	ip, ip, #73728	; 0x12000
    1050:	ldr	pc, [ip, #3788]!	; 0xecc

00001054 <strspn@plt>:
    1054:	add	ip, pc, #0, 12
    1058:	add	ip, ip, #73728	; 0x12000
    105c:	ldr	pc, [ip, #3780]!	; 0xec4

00001060 <log_get_max_level_realm@plt>:
    1060:	add	ip, pc, #0, 12
    1064:	add	ip, ip, #73728	; 0x12000
    1068:	ldr	pc, [ip, #3772]!	; 0xebc

0000106c <abort@plt>:
    106c:	add	ip, pc, #0, 12
    1070:	add	ip, ip, #73728	; 0x12000
    1074:	ldr	pc, [ip, #3764]!	; 0xeb4

00001078 <dispatch_verb@plt>:
    1078:	add	ip, pc, #0, 12
    107c:	add	ip, ip, #73728	; 0x12000
    1080:	ldr	pc, [ip, #3756]!	; 0xeac

00001084 <sd_bus_error_free@plt>:
    1084:	add	ip, pc, #0, 12
    1088:	add	ip, ip, #73728	; 0x12000
    108c:	ldr	pc, [ip, #3748]!	; 0xea4

00001090 <sd_bus_flush_close_unref@plt>:
    1090:	add	ip, pc, #0, 12
    1094:	add	ip, ip, #73728	; 0x12000
    1098:	ldr	pc, [ip, #3740]!	; 0xe9c

0000109c <locale_variable_to_string@plt>:
    109c:	add	ip, pc, #0, 12
    10a0:	add	ip, ip, #73728	; 0x12000
    10a4:	ldr	pc, [ip, #3732]!	; 0xe94

000010a8 <bus_map_all_properties@plt>:
    10a8:	add	ip, pc, #0, 12
    10ac:	add	ip, ip, #73728	; 0x12000
    10b0:	ldr	pc, [ip, #3724]!	; 0xe8c

000010b4 <sd_bus_message_new_method_call@plt>:
    10b4:	add	ip, pc, #0, 12
    10b8:	add	ip, ip, #73728	; 0x12000
    10bc:	ldr	pc, [ip, #3716]!	; 0xe84

000010c0 <__stack_chk_fail@plt>:
    10c0:	add	ip, pc, #0, 12
    10c4:	add	ip, ip, #73728	; 0x12000
    10c8:	ldr	pc, [ip, #3708]!	; 0xe7c

000010cc <terminal_urlify_man@plt>:
    10cc:	add	ip, pc, #0, 12
    10d0:	add	ip, ip, #73728	; 0x12000
    10d4:	ldr	pc, [ip, #3700]!	; 0xe74

000010d8 <get_keymaps@plt>:
    10d8:	add	ip, pc, #0, 12
    10dc:	add	ip, ip, #73728	; 0x12000
    10e0:	ldr	pc, [ip, #3692]!	; 0xe6c

000010e4 <sd_bus_message_append_strv@plt>:
    10e4:	add	ip, pc, #0, 12
    10e8:	add	ip, ip, #73728	; 0x12000
    10ec:	ldr	pc, [ip, #3684]!	; 0xe64

000010f0 <polkit_agent_open@plt>:
    10f0:	add	ip, pc, #0, 12
    10f4:	add	ip, ip, #73728	; 0x12000
    10f8:	ldr	pc, [ip, #3676]!	; 0xe5c

000010fc <strstrip@plt>:
    10fc:	add	ip, pc, #0, 12
    1100:	add	ip, ip, #73728	; 0x12000
    1104:	ldr	pc, [ip, #3668]!	; 0xe54

00001108 <getopt_long@plt>:
    1108:	add	ip, pc, #0, 12
    110c:	add	ip, ip, #73728	; 0x12000
    1110:	ldr	pc, [ip, #3660]!	; 0xe4c

00001114 <sd_bus_message_unref@plt>:
    1114:	add	ip, pc, #0, 12
    1118:	add	ip, ip, #73728	; 0x12000
    111c:	ldr	pc, [ip, #3652]!	; 0xe44

00001120 <pager_close@plt>:
    1120:	add	ip, pc, #0, 12
    1124:	add	ip, ip, #73728	; 0x12000
    1128:	ldr	pc, [ip, #3644]!	; 0xe3c

0000112c <read_line_full@plt>:
    112c:	add	ip, pc, #0, 12
    1130:	add	ip, ip, #73728	; 0x12000
    1134:	ldr	pc, [ip, #3636]!	; 0xe34

00001138 <setlocale@plt>:
    1138:	add	ip, pc, #0, 12
    113c:	add	ip, ip, #73728	; 0x12000
    1140:	ldr	pc, [ip, #3628]!	; 0xe2c

00001144 <strv_extend@plt>:
    1144:	add	ip, pc, #0, 12
    1148:	add	ip, ip, #73728	; 0x12000
    114c:	ldr	pc, [ip, #3620]!	; 0xe24

00001150 <safe_fclose@plt>:
    1150:	add	ip, pc, #0, 12
    1154:	add	ip, ip, #73728	; 0x12000
    1158:	ldr	pc, [ip, #3612]!	; 0xe1c

0000115c <strv_print@plt>:
    115c:	add	ip, pc, #0, 12
    1160:	add	ip, ip, #73728	; 0x12000
    1164:	ldr	pc, [ip, #3604]!	; 0xe14

00001168 <bus_error_message@plt>:
    1168:	add	ip, pc, #0, 12
    116c:	add	ip, ip, #73728	; 0x12000
    1170:	ldr	pc, [ip, #3596]!	; 0xe0c

00001174 <strcmp@plt>:
    1174:	add	ip, pc, #0, 12
    1178:	add	ip, ip, #73728	; 0x12000
    117c:	ldr	pc, [ip, #3588]!	; 0xe04

00001180 <log_parse_environment_realm@plt>:
    1180:	add	ip, pc, #0, 12
    1184:	add	ip, ip, #73728	; 0x12000
    1188:	ldr	pc, [ip, #3580]!	; 0xdfc

0000118c <sd_bus_call_method@plt>:
    118c:	add	ip, pc, #0, 12
    1190:	add	ip, ip, #73728	; 0x12000
    1194:	ldr	pc, [ip, #3572]!	; 0xdf4

00001198 <__errno_location@plt>:
    1198:	add	ip, pc, #0, 12
    119c:	add	ip, ip, #73728	; 0x12000
    11a0:	ldr	pc, [ip, #3564]!	; 0xdec

000011a4 <sd_bus_call@plt>:
    11a4:	add	ip, pc, #0, 12
    11a8:	add	ip, ip, #73728	; 0x12000
    11ac:	ldr	pc, [ip, #3556]!	; 0xde4

000011b0 <fopen64@plt>:
    11b0:	add	ip, pc, #0, 12
    11b4:	add	ip, ip, #73728	; 0x12000
    11b8:	ldr	pc, [ip, #3548]!	; 0xddc

000011bc <strv_uniq@plt>:
    11bc:	add	ip, pc, #0, 12
    11c0:	add	ip, ip, #73728	; 0x12000
    11c4:	ldr	pc, [ip, #3540]!	; 0xdd4

000011c8 <log_assert_failed_realm@plt>:
    11c8:	add	ip, pc, #0, 12
    11cc:	add	ip, ip, #73728	; 0x12000
    11d0:	ldr	pc, [ip, #3532]!	; 0xdcc

000011d4 <log_internal_realm@plt>:
    11d4:	add	ip, pc, #0, 12
    11d8:	add	ip, ip, #73728	; 0x12000
    11dc:	ldr	pc, [ip, #3524]!	; 0xdc4

000011e0 <strv_free@plt>:
    11e0:	add	ip, pc, #0, 12
    11e4:	add	ip, ip, #73728	; 0x12000
    11e8:	ldr	pc, [ip, #3516]!	; 0xdbc

000011ec <proc_cmdline_get_key_many_internal@plt>:
    11ec:	add	ip, pc, #0, 12
    11f0:	add	ip, ip, #73728	; 0x12000
    11f4:	ldr	pc, [ip, #3508]!	; 0xdb4

000011f8 <pager_open@plt>:
    11f8:	add	ip, pc, #0, 12
    11fc:	add	ip, ip, #73728	; 0x12000
    1200:	ldr	pc, [ip, #3500]!	; 0xdac

00001204 <__libc_start_main@plt>:
    1204:	add	ip, pc, #0, 12
    1208:	add	ip, ip, #73728	; 0x12000
    120c:	ldr	pc, [ip, #3492]!	; 0xda4

00001210 <__gmon_start__@plt>:
    1210:	add	ip, pc, #0, 12
    1214:	add	ip, ip, #73728	; 0x12000
    1218:	ldr	pc, [ip, #3484]!	; 0xd9c

0000121c <sd_bus_message_append@plt>:
    121c:	add	ip, pc, #0, 12
    1220:	add	ip, ip, #73728	; 0x12000
    1224:	ldr	pc, [ip, #3476]!	; 0xd94

00001228 <strchr@plt>:
    1228:	add	ip, pc, #0, 12
    122c:	add	ip, ip, #73728	; 0x12000
    1230:	ldr	pc, [ip, #3468]!	; 0xd8c

00001234 <__cxa_finalize@plt>:
    1234:	add	ip, pc, #0, 12
    1238:	add	ip, ip, #73728	; 0x12000
    123c:	ldr	pc, [ip, #3460]!	; 0xd84

00001240 <__printf_chk@plt>:
    1240:	add	ip, pc, #0, 12
    1244:	add	ip, ip, #73728	; 0x12000
    1248:	ldr	pc, [ip, #3452]!	; 0xd7c

0000124c <bus_connect_transport@plt>:
    124c:	add	ip, pc, #0, 12
    1250:	add	ip, ip, #73728	; 0x12000
    1254:	ldr	pc, [ip, #3444]!	; 0xd74

00001258 <log_oom_internal@plt>:
    1258:	add	ip, pc, #0, 12
    125c:	add	ip, ip, #73728	; 0x12000
    1260:	ldr	pc, [ip, #3436]!	; 0xd6c

Disassembly of section .text:

00001264 <.text>:
    1264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1268:	mov	r9, r1
    126c:	ldr	r5, [pc, #792]	; 158c <log_oom_internal@plt+0x334>
    1270:	ldr	r3, [pc, #792]	; 1590 <log_oom_internal@plt+0x338>
    1274:	add	r5, pc, r5
    1278:	ldr	r1, [pc, #788]	; 1594 <log_oom_internal@plt+0x33c>
    127c:	ldr	r8, [r5, r3]
    1280:	sub	sp, sp, #20
    1284:	mov	r4, #0
    1288:	ldr	r3, [r8]
    128c:	add	r1, pc, r1
    1290:	mov	r7, r0
    1294:	mov	r0, #6
    1298:	str	r3, [sp, #12]
    129c:	str	r4, [sp, #8]
    12a0:	bl	1138 <setlocale@plt>
    12a4:	mov	r0, r4
    12a8:	bl	1180 <log_parse_environment_realm@plt>
    12ac:	bl	fd0 <log_open@plt>
    12b0:	cmp	r7, r4
    12b4:	blt	1530 <log_oom_internal@plt+0x2d8>
    12b8:	cmp	r9, #0
    12bc:	beq	155c <log_oom_internal@plt+0x304>
    12c0:	ldr	r4, [pc, #720]	; 1598 <log_oom_internal@plt+0x340>
    12c4:	ldr	sl, [pc, #720]	; 159c <log_oom_internal@plt+0x344>
    12c8:	add	r4, pc, r4
    12cc:	ldr	fp, [pc, #716]	; 15a0 <log_oom_internal@plt+0x348>
    12d0:	add	sl, pc, sl
    12d4:	add	r4, r4, #128	; 0x80
    12d8:	mov	r6, #0
    12dc:	str	r6, [sp]
    12e0:	mov	r3, r4
    12e4:	mov	r2, sl
    12e8:	mov	r1, r9
    12ec:	mov	r0, r7
    12f0:	bl	1108 <getopt_long@plt>
    12f4:	cmp	r0, #0
    12f8:	blt	143c <log_oom_internal@plt+0x1e4>
    12fc:	cmp	r0, #104	; 0x68
    1300:	beq	1500 <log_oom_internal@plt+0x2a8>
    1304:	ble	133c <log_oom_internal@plt+0xe4>
    1308:	cmp	r0, fp
    130c:	beq	14b4 <log_oom_internal@plt+0x25c>
    1310:	ble	1380 <log_oom_internal@plt+0x128>
    1314:	ldr	r3, [pc, #648]	; 15a4 <log_oom_internal@plt+0x34c>
    1318:	cmp	r0, r3
    131c:	beq	14cc <log_oom_internal@plt+0x274>
    1320:	add	r3, r3, #1
    1324:	cmp	r0, r3
    1328:	bne	1354 <log_oom_internal@plt+0xfc>
    132c:	ldr	r3, [pc, #628]	; 15a8 <log_oom_internal@plt+0x350>
    1330:	add	r3, pc, r3
    1334:	strb	r6, [r3]
    1338:	b	12d8 <log_oom_internal@plt+0x80>
    133c:	cmp	r0, #72	; 0x48
    1340:	beq	1410 <log_oom_internal@plt+0x1b8>
    1344:	cmp	r0, #77	; 0x4d
    1348:	beq	14dc <log_oom_internal@plt+0x284>
    134c:	cmp	r0, #63	; 0x3f
    1350:	beq	1434 <log_oom_internal@plt+0x1dc>
    1354:	ldr	r2, [pc, #592]	; 15ac <log_oom_internal@plt+0x354>
    1358:	ldr	r1, [pc, #592]	; 15b0 <log_oom_internal@plt+0x358>
    135c:	add	r2, pc, r2
    1360:	add	r2, r2, #220	; 0xdc
    1364:	str	r2, [sp]
    1368:	ldr	r2, [pc, #580]	; 15b4 <log_oom_internal@plt+0x35c>
    136c:	ldr	r3, [pc, #580]	; 15b8 <log_oom_internal@plt+0x360>
    1370:	add	r2, pc, r2
    1374:	add	r1, pc, r1
    1378:	mov	r0, #0
    137c:	bl	fdc <log_assert_failed_unreachable_realm@plt>
    1380:	cmp	r0, #256	; 0x100
    1384:	bne	1354 <log_oom_internal@plt+0xfc>
    1388:	bl	fb8 <version@plt>
    138c:	mov	r6, r0
    1390:	cmp	r6, #0
    1394:	bgt	143c <log_oom_internal@plt+0x1e4>
    1398:	ldr	r0, [sp, #8]
    139c:	cmp	r0, #0
    13a0:	beq	13a8 <log_oom_internal@plt+0x150>
    13a4:	bl	1090 <sd_bus_flush_close_unref@plt>
    13a8:	ldr	r3, [pc, #524]	; 15bc <log_oom_internal@plt+0x364>
    13ac:	ldr	r4, [r5, r3]
    13b0:	cmp	r4, #0
    13b4:	beq	13e4 <log_oom_internal@plt+0x18c>
    13b8:	ldr	r3, [pc, #512]	; 15c0 <log_oom_internal@plt+0x368>
    13bc:	add	r4, r4, #3
    13c0:	bic	r4, r4, #3
    13c4:	ldr	r5, [r5, r3]
    13c8:	cmp	r4, r5
    13cc:	bcs	13e4 <log_oom_internal@plt+0x18c>
    13d0:	ldm	r4, {r0, r3}
    13d4:	add	r4, r4, #8
    13d8:	blx	r3
    13dc:	cmp	r4, r5
    13e0:	bcc	13d0 <log_oom_internal@plt+0x178>
    13e4:	bl	1000 <ask_password_agent_close@plt>
    13e8:	bl	100c <polkit_agent_close@plt>
    13ec:	bl	1018 <mac_selinux_finish@plt>
    13f0:	bl	1120 <pager_close@plt>
    13f4:	ldr	r2, [sp, #12]
    13f8:	ldr	r3, [r8]
    13fc:	lsr	r0, r6, #31
    1400:	cmp	r2, r3
    1404:	bne	1588 <log_oom_internal@plt+0x330>
    1408:	add	sp, sp, #20
    140c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1410:	ldr	r2, [pc, #428]	; 15c4 <log_oom_internal@plt+0x36c>
    1414:	ldr	r3, [pc, #428]	; 15c8 <log_oom_internal@plt+0x370>
    1418:	add	r2, pc, r2
    141c:	mov	r1, #1
    1420:	str	r1, [r2, #4]
    1424:	ldr	r3, [r5, r3]
    1428:	ldr	r3, [r3]
    142c:	str	r3, [r2, #8]
    1430:	b	12d8 <log_oom_internal@plt+0x80>
    1434:	mvn	r6, #21
    1438:	b	1398 <log_oom_internal@plt+0x140>
    143c:	ldr	r0, [pc, #392]	; 15cc <log_oom_internal@plt+0x374>
    1440:	add	r3, sp, #8
    1444:	add	r0, pc, r0
    1448:	mov	r2, #0
    144c:	ldrd	r0, [r0, #4]
    1450:	bl	124c <bus_connect_transport@plt>
    1454:	subs	r6, r0, #0
    1458:	bge	150c <log_oom_internal@plt+0x2b4>
    145c:	mov	r0, #0
    1460:	bl	1060 <log_get_max_level_realm@plt>
    1464:	cmp	r0, #2
    1468:	rsble	r6, r6, #0
    146c:	uxtble	r6, r6
    1470:	rsble	r6, r6, #0
    1474:	ble	1398 <log_oom_internal@plt+0x140>
    1478:	ldr	r2, [pc, #336]	; 15d0 <log_oom_internal@plt+0x378>
    147c:	ldr	r3, [pc, #336]	; 15d4 <log_oom_internal@plt+0x37c>
    1480:	add	r2, pc, r2
    1484:	str	r2, [sp, #4]
    1488:	add	r3, pc, r3
    148c:	ldr	r2, [pc, #324]	; 15d8 <log_oom_internal@plt+0x380>
    1490:	add	r3, r3, #232	; 0xe8
    1494:	mov	r1, r6
    1498:	str	r3, [sp]
    149c:	add	r2, pc, r2
    14a0:	ldr	r3, [pc, #308]	; 15dc <log_oom_internal@plt+0x384>
    14a4:	mov	r0, #3
    14a8:	bl	11d4 <log_internal_realm@plt>
    14ac:	mov	r6, r0
    14b0:	b	1398 <log_oom_internal@plt+0x140>
    14b4:	ldr	r2, [pc, #292]	; 15e0 <log_oom_internal@plt+0x388>
    14b8:	add	r2, pc, r2
    14bc:	ldr	r3, [r2]
    14c0:	orr	r3, r3, #1
    14c4:	str	r3, [r2]
    14c8:	b	12d8 <log_oom_internal@plt+0x80>
    14cc:	ldr	r3, [pc, #272]	; 15e4 <log_oom_internal@plt+0x38c>
    14d0:	add	r3, pc, r3
    14d4:	strb	r6, [r3, #1]
    14d8:	b	12d8 <log_oom_internal@plt+0x80>
    14dc:	ldr	r2, [pc, #260]	; 15e8 <log_oom_internal@plt+0x390>
    14e0:	ldr	r3, [pc, #224]	; 15c8 <log_oom_internal@plt+0x370>
    14e4:	add	r2, pc, r2
    14e8:	mov	r1, #2
    14ec:	str	r1, [r2, #4]
    14f0:	ldr	r3, [r5, r3]
    14f4:	ldr	r3, [r3]
    14f8:	str	r3, [r2, #8]
    14fc:	b	12d8 <log_oom_internal@plt+0x80>
    1500:	bl	1788 <log_oom_internal@plt+0x530>
    1504:	mov	r6, r0
    1508:	b	1390 <log_oom_internal@plt+0x138>
    150c:	ldr	r2, [pc, #216]	; 15ec <log_oom_internal@plt+0x394>
    1510:	mov	r1, r9
    1514:	add	r2, pc, r2
    1518:	mov	r0, r7
    151c:	add	r2, r2, #256	; 0x100
    1520:	ldr	r3, [sp, #8]
    1524:	bl	1078 <dispatch_verb@plt>
    1528:	mov	r6, r0
    152c:	b	1398 <log_oom_internal@plt+0x140>
    1530:	ldr	r3, [pc, #184]	; 15f0 <log_oom_internal@plt+0x398>
    1534:	ldr	r2, [pc, #184]	; 15f4 <log_oom_internal@plt+0x39c>
    1538:	add	r3, pc, r3
    153c:	ldr	r1, [pc, #180]	; 15f8 <log_oom_internal@plt+0x3a0>
    1540:	add	r3, r3, #220	; 0xdc
    1544:	str	r3, [sp]
    1548:	mov	r0, r4
    154c:	ldr	r3, [pc, #168]	; 15fc <log_oom_internal@plt+0x3a4>
    1550:	add	r2, pc, r2
    1554:	add	r1, pc, r1
    1558:	bl	11c8 <log_assert_failed_realm@plt>
    155c:	ldr	r3, [pc, #156]	; 1600 <log_oom_internal@plt+0x3a8>
    1560:	ldr	r2, [pc, #156]	; 1604 <log_oom_internal@plt+0x3ac>
    1564:	add	r3, pc, r3
    1568:	ldr	r1, [pc, #152]	; 1608 <log_oom_internal@plt+0x3b0>
    156c:	add	r3, r3, #220	; 0xdc
    1570:	str	r3, [sp]
    1574:	mov	r0, r9
    1578:	mov	r3, #444	; 0x1bc
    157c:	add	r2, pc, r2
    1580:	add	r1, pc, r1
    1584:	bl	11c8 <log_assert_failed_realm@plt>
    1588:	bl	10c0 <__stack_chk_fail@plt>
    158c:	andeq	r2, r1, ip, asr ip
    1590:	strdeq	r0, [r0], -r8
    1594:	andeq	r2, r0, r4, lsl r1
    1598:	andeq	r2, r1, r8, lsl #18
    159c:	ldrdeq	r2, [r0], -r0
    15a0:	andeq	r0, r0, r1, lsl #2
    15a4:	andeq	r0, r0, r2, lsl #2
    15a8:	andeq	r2, r1, ip, asr #25
    15ac:	andeq	r1, r0, r0, ror #18
    15b0:	andeq	r2, r0, r8, lsl r4
    15b4:	andeq	r1, r0, r8, asr #20
    15b8:	andeq	r0, r0, r2, ror #3
    15bc:	andeq	r0, r0, r4, lsl #2
    15c0:	andeq	r0, r0, r8, lsl #2
    15c4:	andeq	r2, r1, ip, ror #23
    15c8:	andeq	r0, r0, r0, lsl #2
    15cc:	andeq	r2, r1, r0, asr #23
    15d0:	andeq	r2, r0, r8, lsr #6
    15d4:	andeq	r1, r0, r4, lsr r8
    15d8:	andeq	r1, r0, ip, lsl r9
    15dc:	andeq	r0, r0, sl, lsl #4
    15e0:	andeq	r2, r1, ip, asr #22
    15e4:	andeq	r2, r1, ip, lsr #22
    15e8:	andeq	r2, r1, r0, lsr #22
    15ec:			; <UNDEFINED> instruction: 0x000126bc
    15f0:	andeq	r1, r0, r4, lsl #15
    15f4:	andeq	r1, r0, r8, ror #16
    15f8:	andeq	r2, r0, r4, lsr #4
    15fc:			; <UNDEFINED> instruction: 0x000001bb
    1600:	andeq	r1, r0, r8, asr r7
    1604:	andeq	r1, r0, ip, lsr r8
    1608:	andeq	r2, r0, r4, lsl #4
    160c:	mov	fp, #0
    1610:	mov	lr, #0
    1614:	pop	{r1}		; (ldr r1, [sp], #4)
    1618:	mov	r2, sp
    161c:	push	{r2}		; (str r2, [sp, #-4]!)
    1620:	push	{r0}		; (str r0, [sp, #-4]!)
    1624:	ldr	sl, [pc, #40]	; 1654 <log_oom_internal@plt+0x3fc>
    1628:	add	r3, pc, #36	; 0x24
    162c:	add	sl, sl, r3
    1630:	ldr	ip, [pc, #32]	; 1658 <log_oom_internal@plt+0x400>
    1634:	ldr	ip, [sl, ip]
    1638:	push	{ip}		; (str ip, [sp, #-4]!)
    163c:	ldr	r3, [pc, #24]	; 165c <log_oom_internal@plt+0x404>
    1640:	ldr	r3, [sl, r3]
    1644:	ldr	r0, [pc, #20]	; 1660 <log_oom_internal@plt+0x408>
    1648:	ldr	r0, [sl, r0]
    164c:	bl	1204 <__libc_start_main@plt>
    1650:	bl	106c <abort@plt>
    1654:	andeq	r2, r1, r4, lsl #17
    1658:	andeq	r0, r0, r4, lsl r1
    165c:	andeq	r0, r0, ip, lsl #2
    1660:	strdeq	r0, [r0], -ip
    1664:	ldr	r3, [pc, #20]	; 1680 <log_oom_internal@plt+0x428>
    1668:	ldr	r2, [pc, #20]	; 1684 <log_oom_internal@plt+0x42c>
    166c:	add	r3, pc, r3
    1670:	ldr	r2, [r3, r2]
    1674:	cmp	r2, #0
    1678:	bxeq	lr
    167c:	b	1210 <__gmon_start__@plt>
    1680:	andeq	r2, r1, r4, ror #16
    1684:	andeq	r0, r0, ip, lsl r1
    1688:	ldr	r0, [pc, #44]	; 16bc <log_oom_internal@plt+0x464>
    168c:	ldr	r3, [pc, #44]	; 16c0 <log_oom_internal@plt+0x468>
    1690:	add	r0, pc, r0
    1694:	add	r3, pc, r3
    1698:	cmp	r3, r0
    169c:	ldr	r3, [pc, #32]	; 16c4 <log_oom_internal@plt+0x46c>
    16a0:	add	r3, pc, r3
    16a4:	bxeq	lr
    16a8:	ldr	r2, [pc, #24]	; 16c8 <log_oom_internal@plt+0x470>
    16ac:	ldr	r3, [r3, r2]
    16b0:	cmp	r3, #0
    16b4:	bxeq	lr
    16b8:	bx	r3
    16bc:	andeq	r2, r1, r0, ror r9
    16c0:	andeq	r2, r1, ip, ror #18
    16c4:	andeq	r2, r1, r0, lsr r8
    16c8:	andeq	r0, r0, r0, lsl r1
    16cc:	ldr	r0, [pc, #56]	; 170c <log_oom_internal@plt+0x4b4>
    16d0:	ldr	r3, [pc, #56]	; 1710 <log_oom_internal@plt+0x4b8>
    16d4:	add	r0, pc, r0
    16d8:	add	r3, pc, r3
    16dc:	sub	r1, r3, r0
    16e0:	ldr	r3, [pc, #44]	; 1714 <log_oom_internal@plt+0x4bc>
    16e4:	asr	r1, r1, #2
    16e8:	add	r3, pc, r3
    16ec:	add	r1, r1, r1, lsr #31
    16f0:	asrs	r1, r1, #1
    16f4:	bxeq	lr
    16f8:	ldr	r2, [pc, #24]	; 1718 <log_oom_internal@plt+0x4c0>
    16fc:	ldr	r3, [r3, r2]
    1700:	cmp	r3, #0
    1704:	bxeq	lr
    1708:	bx	r3
    170c:	andeq	r2, r1, ip, lsr #18
    1710:	andeq	r2, r1, r8, lsr #18
    1714:	andeq	r2, r1, r8, ror #15
    1718:	andeq	r0, r0, r0, lsr #2
    171c:	ldr	r3, [pc, #76]	; 1770 <log_oom_internal@plt+0x518>
    1720:	ldr	r2, [pc, #76]	; 1774 <log_oom_internal@plt+0x51c>
    1724:	add	r3, pc, r3
    1728:	add	r2, pc, r2
    172c:	ldrb	r3, [r3]
    1730:	cmp	r3, #0
    1734:	bxne	lr
    1738:	ldr	r3, [pc, #56]	; 1778 <log_oom_internal@plt+0x520>
    173c:	push	{r4, lr}
    1740:	ldr	r3, [r2, r3]
    1744:	cmp	r3, #0
    1748:	beq	1758 <log_oom_internal@plt+0x500>
    174c:	ldr	r3, [pc, #40]	; 177c <log_oom_internal@plt+0x524>
    1750:	ldr	r0, [pc, r3]
    1754:	bl	1234 <__cxa_finalize@plt>
    1758:	bl	1688 <log_oom_internal@plt+0x430>
    175c:	ldr	r3, [pc, #28]	; 1780 <log_oom_internal@plt+0x528>
    1760:	mov	r2, #1
    1764:	add	r3, pc, r3
    1768:	strb	r2, [r3]
    176c:	pop	{r4, pc}
    1770:	ldrdeq	r2, [r1], -ip
    1774:	andeq	r2, r1, r8, lsr #15
    1778:	andeq	r0, r0, r4, lsr #2
    177c:	andeq	r2, r1, r8, lsr #17
    1780:	muleq	r1, ip, r8
    1784:	b	16cc <log_oom_internal@plt+0x474>
    1788:	push	{r4, r5, r6, lr}
    178c:	sub	sp, sp, #8
    1790:	ldr	r5, [pc, #164]	; 183c <log_oom_internal@plt+0x5e4>
    1794:	ldr	r3, [pc, #164]	; 1840 <log_oom_internal@plt+0x5e8>
    1798:	add	r5, pc, r5
    179c:	add	r2, sp, #8
    17a0:	ldr	r6, [r5, r3]
    17a4:	ldr	r1, [pc, #152]	; 1844 <log_oom_internal@plt+0x5ec>
    17a8:	ldr	r0, [pc, #152]	; 1848 <log_oom_internal@plt+0x5f0>
    17ac:	mov	r4, #0
    17b0:	ldr	r3, [r6]
    17b4:	add	r1, pc, r1
    17b8:	str	r4, [r2, #-8]!
    17bc:	add	r0, pc, r0
    17c0:	str	r3, [sp, #4]
    17c4:	bl	10cc <terminal_urlify_man@plt>
    17c8:	cmp	r0, r4
    17cc:	blt	1814 <log_oom_internal@plt+0x5bc>
    17d0:	ldr	r2, [pc, #116]	; 184c <log_oom_internal@plt+0x5f4>
    17d4:	ldr	r1, [pc, #116]	; 1850 <log_oom_internal@plt+0x5f8>
    17d8:	ldr	r3, [sp]
    17dc:	ldr	r2, [r5, r2]
    17e0:	add	r1, pc, r1
    17e4:	mov	r0, #1
    17e8:	ldr	r2, [r2]
    17ec:	bl	1240 <__printf_chk@plt>
    17f0:	ldr	r0, [sp]
    17f4:	bl	fc4 <free@plt>
    17f8:	ldr	r2, [sp, #4]
    17fc:	ldr	r3, [r6]
    1800:	mov	r0, r4
    1804:	cmp	r2, r3
    1808:	bne	1838 <log_oom_internal@plt+0x5e0>
    180c:	add	sp, sp, #8
    1810:	pop	{r4, r5, r6, pc}
    1814:	ldr	r3, [pc, #56]	; 1854 <log_oom_internal@plt+0x5fc>
    1818:	ldr	r1, [pc, #56]	; 1858 <log_oom_internal@plt+0x600>
    181c:	mov	r0, r4
    1820:	add	r3, pc, r3
    1824:	ldr	r2, [pc, #48]	; 185c <log_oom_internal@plt+0x604>
    1828:	add	r1, pc, r1
    182c:	bl	1258 <log_oom_internal@plt>
    1830:	mov	r4, r0
    1834:	b	17f0 <log_oom_internal@plt+0x598>
    1838:	bl	10c0 <__stack_chk_fail@plt>
    183c:	andeq	r2, r1, r8, lsr r7
    1840:	strdeq	r0, [r0], -r8
    1844:	strdeq	r1, [r0], -r4
    1848:	strdeq	r1, [r0], -r0
    184c:	andeq	r0, r0, r8, lsl r1
    1850:	strdeq	r1, [r0], -r4
    1854:	muleq	r0, ip, r4
    1858:	muleq	r0, r0, r5
    185c:	andeq	r0, r0, r1, lsl #3
    1860:	b	1788 <log_oom_internal@plt+0x530>
    1864:	ldr	r3, [pc, #1164]	; 1cf8 <log_oom_internal@plt+0xaa0>
    1868:	ldr	r2, [pc, #1164]	; 1cfc <log_oom_internal@plt+0xaa4>
    186c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1870:	add	r3, pc, r3
    1874:	sub	sp, sp, #52	; 0x34
    1878:	mov	sl, r0
    187c:	str	r1, [sp, #12]
    1880:	ldr	r2, [r3, r2]
    1884:	ldr	r1, [pc, #1140]	; 1d00 <log_oom_internal@plt+0xaa8>
    1888:	ldr	r0, [pc, #1140]	; 1d04 <log_oom_internal@plt+0xaac>
    188c:	str	r2, [sp, #16]
    1890:	ldr	r2, [r2]
    1894:	mov	r4, #0
    1898:	add	r1, pc, r1
    189c:	add	r0, pc, r0
    18a0:	str	r2, [sp, #44]	; 0x2c
    18a4:	str	r4, [sp, #36]	; 0x24
    18a8:	bl	11b0 <fopen64@plt>
    18ac:	subs	r5, r0, #0
    18b0:	beq	1ba8 <log_oom_internal@plt+0x950>
    18b4:	ldr	r3, [sp, #12]
    18b8:	ldr	r1, [pc, #1096]	; 1d08 <log_oom_internal@plt+0xab0>
    18bc:	ldr	r6, [r3]
    18c0:	add	r1, pc, r1
    18c4:	mov	r0, r6
    18c8:	bl	1174 <strcmp@plt>
    18cc:	cmp	r0, #0
    18d0:	bne	1a84 <log_oom_internal@plt+0x82c>
    18d4:	mov	r8, #1
    18d8:	ldr	r3, [pc, #1068]	; 1d0c <log_oom_internal@plt+0xab4>
    18dc:	ldr	r9, [pc, #1068]	; 1d10 <log_oom_internal@plt+0xab8>
    18e0:	add	r3, pc, r3
    18e4:	str	r3, [sp, #20]
    18e8:	ldr	r3, [pc, #1060]	; 1d14 <log_oom_internal@plt+0xabc>
    18ec:	add	r9, pc, r9
    18f0:	add	r3, pc, r3
    18f4:	str	r3, [sp, #28]
    18f8:	mov	r7, #0
    18fc:	add	r6, sp, #40	; 0x28
    1900:	b	19a0 <log_oom_internal@plt+0x748>
    1904:	cmp	r7, r8
    1908:	bne	1998 <log_oom_internal@plt+0x740>
    190c:	mov	r1, r9
    1910:	bl	ff4 <strcspn@plt>
    1914:	cmp	sl, #1
    1918:	add	r3, fp, r0
    191c:	ble	1afc <log_oom_internal@plt+0x8a4>
    1920:	ldrb	r2, [fp, r0]
    1924:	cmp	r2, #0
    1928:	beq	1998 <log_oom_internal@plt+0x740>
    192c:	add	r3, r3, #1
    1930:	strb	r4, [fp, r0]
    1934:	mov	r1, r9
    1938:	mov	r0, r3
    193c:	str	r3, [sp, #24]
    1940:	bl	1054 <strspn@plt>
    1944:	ldr	r3, [sp, #24]
    1948:	mov	r1, #58	; 0x3a
    194c:	add	r3, r3, r0
    1950:	mov	r0, r3
    1954:	str	r3, [sp, #24]
    1958:	bl	1228 <strchr@plt>
    195c:	cmp	r0, #0
    1960:	beq	1998 <log_oom_internal@plt+0x740>
    1964:	ldr	r3, [sp, #24]
    1968:	strb	r4, [r0]
    196c:	mov	r0, r3
    1970:	ldr	r3, [sp, #12]
    1974:	ldr	r1, [r3, #4]
    1978:	bl	1174 <strcmp@plt>
    197c:	cmp	r0, #0
    1980:	bne	1998 <log_oom_internal@plt+0x740>
    1984:	mov	r1, fp
    1988:	add	r0, sp, #36	; 0x24
    198c:	bl	1144 <strv_extend@plt>
    1990:	cmp	r0, #0
    1994:	blt	1cc4 <log_oom_internal@plt+0xa6c>
    1998:	ldr	r0, [sp, #40]	; 0x28
    199c:	bl	fc4 <free@plt>
    19a0:	mov	r4, #0
    19a4:	mov	r2, r4
    19a8:	mov	r3, r6
    19ac:	mov	r1, #1048576	; 0x100000
    19b0:	mov	r0, r5
    19b4:	str	r4, [sp, #40]	; 0x28
    19b8:	bl	112c <read_line_full@plt>
    19bc:	subs	fp, r0, #0
    19c0:	blt	1b04 <log_oom_internal@plt+0x8ac>
    19c4:	ldr	r0, [sp, #40]	; 0x28
    19c8:	beq	1b64 <log_oom_internal@plt+0x90c>
    19cc:	bl	10fc <strstrip@plt>
    19d0:	subs	fp, r0, #0
    19d4:	beq	1998 <log_oom_internal@plt+0x740>
    19d8:	ldrb	r3, [fp]
    19dc:	cmp	r3, #0
    19e0:	beq	1998 <log_oom_internal@plt+0x740>
    19e4:	cmp	r3, #33	; 0x21
    19e8:	bne	1904 <log_oom_internal@plt+0x6ac>
    19ec:	mov	r2, #7
    19f0:	ldr	r1, [sp, #20]
    19f4:	bl	fe8 <strncmp@plt>
    19f8:	cmp	r0, #0
    19fc:	bne	1a0c <log_oom_internal@plt+0x7b4>
    1a00:	cmn	fp, #7
    1a04:	movne	r7, #1
    1a08:	bne	1998 <log_oom_internal@plt+0x740>
    1a0c:	mov	r2, #8
    1a10:	ldr	r1, [sp, #28]
    1a14:	mov	r0, fp
    1a18:	bl	fe8 <strncmp@plt>
    1a1c:	cmp	r0, #0
    1a20:	bne	1a30 <log_oom_internal@plt+0x7d8>
    1a24:	cmn	fp, #8
    1a28:	movne	r7, #2
    1a2c:	bne	1998 <log_oom_internal@plt+0x740>
    1a30:	ldr	r1, [pc, #736]	; 1d18 <log_oom_internal@plt+0xac0>
    1a34:	mov	r2, #9
    1a38:	add	r1, pc, r1
    1a3c:	mov	r0, fp
    1a40:	bl	fe8 <strncmp@plt>
    1a44:	cmp	r0, #0
    1a48:	bne	1a58 <log_oom_internal@plt+0x800>
    1a4c:	cmn	fp, #9
    1a50:	movne	r7, #3
    1a54:	bne	1998 <log_oom_internal@plt+0x740>
    1a58:	ldr	r1, [pc, #700]	; 1d1c <log_oom_internal@plt+0xac4>
    1a5c:	mov	r2, #8
    1a60:	add	r1, pc, r1
    1a64:	mov	r0, fp
    1a68:	bl	fe8 <strncmp@plt>
    1a6c:	cmp	r0, #0
    1a70:	bne	1cec <log_oom_internal@plt+0xa94>
    1a74:	cmn	fp, #8
    1a78:	moveq	r7, #0
    1a7c:	movne	r7, #4
    1a80:	b	1998 <log_oom_internal@plt+0x740>
    1a84:	ldr	r1, [pc, #660]	; 1d20 <log_oom_internal@plt+0xac8>
    1a88:	mov	r0, r6
    1a8c:	add	r1, pc, r1
    1a90:	bl	1174 <strcmp@plt>
    1a94:	cmp	r0, #0
    1a98:	beq	1bd4 <log_oom_internal@plt+0x97c>
    1a9c:	ldr	r1, [pc, #640]	; 1d24 <log_oom_internal@plt+0xacc>
    1aa0:	mov	r0, r6
    1aa4:	add	r1, pc, r1
    1aa8:	bl	1174 <strcmp@plt>
    1aac:	cmp	r0, #0
    1ab0:	beq	1cbc <log_oom_internal@plt+0xa64>
    1ab4:	ldr	r1, [pc, #620]	; 1d28 <log_oom_internal@plt+0xad0>
    1ab8:	mov	r0, r6
    1abc:	add	r1, pc, r1
    1ac0:	bl	1174 <strcmp@plt>
    1ac4:	cmp	r0, #0
    1ac8:	moveq	r8, #4
    1acc:	beq	18d8 <log_oom_internal@plt+0x680>
    1ad0:	ldr	r3, [pc, #596]	; 1d2c <log_oom_internal@plt+0xad4>
    1ad4:	ldr	r2, [pc, #596]	; 1d30 <log_oom_internal@plt+0xad8>
    1ad8:	add	r3, pc, r3
    1adc:	ldr	r1, [pc, #592]	; 1d34 <log_oom_internal@plt+0xadc>
    1ae0:	add	r3, r3, #28
    1ae4:	str	r3, [sp]
    1ae8:	mov	r0, r4
    1aec:	ldr	r3, [pc, #580]	; 1d38 <log_oom_internal@plt+0xae0>
    1af0:	add	r2, pc, r2
    1af4:	add	r1, pc, r1
    1af8:	bl	fdc <log_assert_failed_unreachable_realm@plt>
    1afc:	strb	r4, [fp, r0]
    1b00:	b	1984 <log_oom_internal@plt+0x72c>
    1b04:	mov	r0, r4
    1b08:	bl	1060 <log_get_max_level_realm@plt>
    1b0c:	cmp	r0, #2
    1b10:	rsble	r1, fp, #0
    1b14:	uxtble	r1, r1
    1b18:	rsble	fp, r1, #0
    1b1c:	bgt	1c2c <log_oom_internal@plt+0x9d4>
    1b20:	ldr	r0, [sp, #40]	; 0x28
    1b24:	bl	fc4 <free@plt>
    1b28:	ldr	r4, [sp, #36]	; 0x24
    1b2c:	cmp	r4, #0
    1b30:	beq	1b3c <log_oom_internal@plt+0x8e4>
    1b34:	mov	r0, r4
    1b38:	bl	11e0 <strv_free@plt>
    1b3c:	mov	r0, r5
    1b40:	bl	1150 <safe_fclose@plt>
    1b44:	ldr	r3, [sp, #16]
    1b48:	ldr	r2, [sp, #44]	; 0x2c
    1b4c:	mov	r0, fp
    1b50:	ldr	r3, [r3]
    1b54:	cmp	r2, r3
    1b58:	bne	1cf4 <log_oom_internal@plt+0xa9c>
    1b5c:	add	sp, sp, #52	; 0x34
    1b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b64:	bl	fc4 <free@plt>
    1b68:	ldr	r4, [sp, #36]	; 0x24
    1b6c:	cmp	r4, #0
    1b70:	beq	1ca4 <log_oom_internal@plt+0xa4c>
    1b74:	ldr	r3, [r4]
    1b78:	cmp	r3, #0
    1b7c:	beq	1bdc <log_oom_internal@plt+0x984>
    1b80:	mov	r0, r4
    1b84:	bl	103c <strv_sort@plt>
    1b88:	ldr	r0, [sp, #36]	; 0x24
    1b8c:	bl	11bc <strv_uniq@plt>
    1b90:	ldr	r3, [pc, #420]	; 1d3c <log_oom_internal@plt+0xae4>
    1b94:	ldr	r0, [pc, r3]
    1b98:	bl	11f8 <pager_open@plt>
    1b9c:	ldr	r0, [sp, #36]	; 0x24
    1ba0:	bl	115c <strv_print@plt>
    1ba4:	b	1b28 <log_oom_internal@plt+0x8d0>
    1ba8:	bl	1198 <__errno_location@plt>
    1bac:	ldr	r4, [r0]
    1bb0:	mov	r0, r5
    1bb4:	bl	1060 <log_get_max_level_realm@plt>
    1bb8:	cmp	r0, #2
    1bbc:	bgt	1c68 <log_oom_internal@plt+0xa10>
    1bc0:	eor	r1, r4, r4, asr #31
    1bc4:	sub	r1, r1, r4, asr #31
    1bc8:	uxtb	r1, r1
    1bcc:	rsb	fp, r1, #0
    1bd0:	b	1b28 <log_oom_internal@plt+0x8d0>
    1bd4:	mov	r8, #2
    1bd8:	b	18d8 <log_oom_internal@plt+0x680>
    1bdc:	mov	r0, fp
    1be0:	bl	1060 <log_get_max_level_realm@plt>
    1be4:	cmp	r0, #2
    1be8:	mvnle	fp, #1
    1bec:	ble	1b34 <log_oom_internal@plt+0x8dc>
    1bf0:	ldr	r2, [pc, #328]	; 1d40 <log_oom_internal@plt+0xae8>
    1bf4:	ldr	r3, [pc, #328]	; 1d44 <log_oom_internal@plt+0xaec>
    1bf8:	add	r2, pc, r2
    1bfc:	str	r2, [sp, #4]
    1c00:	add	r3, pc, r3
    1c04:	ldr	r2, [pc, #316]	; 1d48 <log_oom_internal@plt+0xaf0>
    1c08:	add	r3, r3, #8
    1c0c:	str	r3, [sp]
    1c10:	add	r2, pc, r2
    1c14:	mov	r3, #368	; 0x170
    1c18:	mov	r1, #1073741826	; 0x40000002
    1c1c:	mov	r0, #3
    1c20:	bl	11d4 <log_internal_realm@plt>
    1c24:	mov	fp, r0
    1c28:	b	1b28 <log_oom_internal@plt+0x8d0>
    1c2c:	ldr	r2, [pc, #280]	; 1d4c <log_oom_internal@plt+0xaf4>
    1c30:	ldr	r3, [pc, #280]	; 1d50 <log_oom_internal@plt+0xaf8>
    1c34:	add	r2, pc, r2
    1c38:	str	r2, [sp, #4]
    1c3c:	add	r3, pc, r3
    1c40:	ldr	r2, [pc, #268]	; 1d54 <log_oom_internal@plt+0xafc>
    1c44:	add	r3, r3, #8
    1c48:	mov	r1, fp
    1c4c:	str	r3, [sp]
    1c50:	add	r2, pc, r2
    1c54:	ldr	r3, [pc, #252]	; 1d58 <log_oom_internal@plt+0xb00>
    1c58:	mov	r0, #3
    1c5c:	bl	11d4 <log_internal_realm@plt>
    1c60:	mov	fp, r0
    1c64:	b	1b20 <log_oom_internal@plt+0x8c8>
    1c68:	ldr	r2, [pc, #236]	; 1d5c <log_oom_internal@plt+0xb04>
    1c6c:	ldr	r3, [pc, #236]	; 1d60 <log_oom_internal@plt+0xb08>
    1c70:	add	r2, pc, r2
    1c74:	str	r2, [sp, #4]
    1c78:	add	r3, pc, r3
    1c7c:	ldr	r2, [pc, #224]	; 1d64 <log_oom_internal@plt+0xb0c>
    1c80:	add	r3, r3, #8
    1c84:	str	r3, [sp]
    1c88:	mov	r1, r4
    1c8c:	mov	r3, #292	; 0x124
    1c90:	add	r2, pc, r2
    1c94:	mov	r0, #3
    1c98:	bl	11d4 <log_internal_realm@plt>
    1c9c:	mov	fp, r0
    1ca0:	b	1b28 <log_oom_internal@plt+0x8d0>
    1ca4:	mov	r0, fp
    1ca8:	bl	1060 <log_get_max_level_realm@plt>
    1cac:	cmp	r0, #2
    1cb0:	mvnle	fp, #1
    1cb4:	bgt	1bf0 <log_oom_internal@plt+0x998>
    1cb8:	b	1b3c <log_oom_internal@plt+0x8e4>
    1cbc:	mov	r8, #3
    1cc0:	b	18d8 <log_oom_internal@plt+0x680>
    1cc4:	ldr	r3, [pc, #156]	; 1d68 <log_oom_internal@plt+0xb10>
    1cc8:	ldr	r1, [pc, #156]	; 1d6c <log_oom_internal@plt+0xb14>
    1ccc:	add	r3, pc, r3
    1cd0:	ldr	r2, [pc, #152]	; 1d70 <log_oom_internal@plt+0xb18>
    1cd4:	add	r3, r3, #8
    1cd8:	add	r1, pc, r1
    1cdc:	mov	r0, #0
    1ce0:	bl	1258 <log_oom_internal@plt>
    1ce4:	mov	fp, r0
    1ce8:	b	1b20 <log_oom_internal@plt+0x8c8>
    1cec:	mov	r7, #0
    1cf0:	b	1998 <log_oom_internal@plt+0x740>
    1cf4:	bl	10c0 <__stack_chk_fail@plt>
    1cf8:	andeq	r2, r1, r0, ror #12
    1cfc:	strdeq	r0, [r0], -r8
    1d00:	andeq	r1, r0, r4, ror #19
    1d04:	andeq	r1, r0, r4, ror #19
    1d08:	andeq	r1, r0, r0, lsl sl
    1d0c:	muleq	r0, r0, sl
    1d10:			; <UNDEFINED> instruction: 0x00001ab0
    1d14:	andeq	r1, r0, r8, lsl #21
    1d18:	andeq	r1, r0, ip, asr #18
    1d1c:	andeq	r1, r0, r0, lsr r9
    1d20:	andeq	r1, r0, ip, asr r8
    1d24:	andeq	r1, r0, ip, asr r8
    1d28:	andeq	r1, r0, r0, ror #16
    1d2c:	andeq	r1, r0, r4, ror #3
    1d30:	andeq	r1, r0, r8, asr #5
    1d34:	andeq	r1, r0, r0, asr #16
    1d38:	andeq	r0, r0, pc, lsr #2
    1d3c:	andeq	r2, r1, r0, ror r4
    1d40:	andeq	r1, r0, ip, lsr #15
    1d44:	strheq	r1, [r0], -ip
    1d48:	andeq	r1, r0, r8, lsr #3
    1d4c:	andeq	r1, r0, r0, lsl r7
    1d50:	andeq	r1, r0, r0, lsl #1
    1d54:	andeq	r1, r0, r8, ror #2
    1d58:	andeq	r0, r0, r7, lsr r1
    1d5c:	andeq	r1, r0, r4, lsr r6
    1d60:	andeq	r1, r0, r4, asr #32
    1d64:	andeq	r1, r0, r8, lsr #2
    1d68:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1d6c:	andeq	r1, r0, r0, ror #1
    1d70:	andeq	r0, r0, fp, ror #2
    1d74:	push	{r4, r5, r6, r7, lr}
    1d78:	mov	r6, r0
    1d7c:	ldr	r3, [pc, #448]	; 1f44 <log_oom_internal@plt+0xcec>
    1d80:	ldr	r4, [pc, #448]	; 1f48 <log_oom_internal@plt+0xcf0>
    1d84:	ldr	lr, [pc, #448]	; 1f4c <log_oom_internal@plt+0xcf4>
    1d88:	ldr	ip, [pc, #448]	; 1f50 <log_oom_internal@plt+0xcf8>
    1d8c:	add	r3, pc, r3
    1d90:	add	r4, pc, r4
    1d94:	add	ip, pc, ip
    1d98:	ldr	r5, [r3, lr]
    1d9c:	ldrb	lr, [r4]
    1da0:	ldr	ip, [ip, #4]
    1da4:	sub	sp, sp, #68	; 0x44
    1da8:	cmp	ip, #0
    1dac:	movne	ip, #0
    1db0:	andeq	ip, lr, #1
    1db4:	ldr	r0, [r5]
    1db8:	cmp	ip, #0
    1dbc:	mov	r3, #0
    1dc0:	str	r0, [sp, #60]	; 0x3c
    1dc4:	str	r3, [sp, #48]	; 0x30
    1dc8:	str	r3, [sp, #52]	; 0x34
    1dcc:	str	r3, [sp, #56]	; 0x38
    1dd0:	bne	1f08 <log_oom_internal@plt+0xcb0>
    1dd4:	cmp	r6, #2
    1dd8:	ldr	r7, [r1, #4]
    1ddc:	ble	1e90 <log_oom_internal@plt+0xc38>
    1de0:	cmp	r6, #3
    1de4:	ldr	r4, [r1, #8]
    1de8:	beq	1f34 <log_oom_internal@plt+0xcdc>
    1dec:	cmp	r6, #4
    1df0:	ldr	r0, [r1, #12]
    1df4:	beq	1f28 <log_oom_internal@plt+0xcd0>
    1df8:	ldr	r1, [r1, #16]
    1dfc:	ldr	r3, [pc, #336]	; 1f54 <log_oom_internal@plt+0xcfc>
    1e00:	str	lr, [sp, #36]	; 0x24
    1e04:	add	r3, pc, r3
    1e08:	str	r1, [sp, #28]
    1e0c:	ldr	lr, [pc, #324]	; 1f58 <log_oom_internal@plt+0xd00>
    1e10:	ldrb	r1, [r3, #1]
    1e14:	ldr	ip, [pc, #320]	; 1f5c <log_oom_internal@plt+0xd04>
    1e18:	ldr	r3, [pc, #320]	; 1f60 <log_oom_internal@plt+0xd08>
    1e1c:	str	r0, [sp, #24]
    1e20:	mov	r0, r2
    1e24:	ldr	r2, [pc, #312]	; 1f64 <log_oom_internal@plt+0xd0c>
    1e28:	add	r3, pc, r3
    1e2c:	add	lr, pc, lr
    1e30:	add	ip, pc, ip
    1e34:	str	r4, [sp, #20]
    1e38:	add	r6, sp, #48	; 0x30
    1e3c:	mov	r4, #0
    1e40:	str	r7, [sp, #16]
    1e44:	str	r1, [sp, #32]
    1e48:	str	lr, [sp, #12]
    1e4c:	mov	r1, r3
    1e50:	str	ip, [sp]
    1e54:	str	r4, [sp, #8]
    1e58:	str	r6, [sp, #4]
    1e5c:	add	r2, pc, r2
    1e60:	bl	118c <sd_bus_call_method@plt>
    1e64:	subs	r7, r0, #0
    1e68:	blt	1ea4 <log_oom_internal@plt+0xc4c>
    1e6c:	mov	r0, r6
    1e70:	bl	1084 <sd_bus_error_free@plt>
    1e74:	ldr	r2, [sp, #60]	; 0x3c
    1e78:	ldr	r3, [r5]
    1e7c:	mov	r0, r4
    1e80:	cmp	r2, r3
    1e84:	bne	1f24 <log_oom_internal@plt+0xccc>
    1e88:	add	sp, sp, #68	; 0x44
    1e8c:	pop	{r4, r5, r6, r7, pc}
    1e90:	ldr	r0, [pc, #208]	; 1f68 <log_oom_internal@plt+0xd10>
    1e94:	add	r0, pc, r0
    1e98:	mov	r4, r0
    1e9c:	mov	r1, r0
    1ea0:	b	1dfc <log_oom_internal@plt+0xba4>
    1ea4:	mov	r0, r4
    1ea8:	bl	1060 <log_get_max_level_realm@plt>
    1eac:	rsb	r1, r7, #0
    1eb0:	cmp	r0, #2
    1eb4:	uxtble	r4, r1
    1eb8:	rsble	r4, r4, #0
    1ebc:	ble	1e6c <log_oom_internal@plt+0xc14>
    1ec0:	mov	r0, r6
    1ec4:	bl	1168 <bus_error_message@plt>
    1ec8:	ldr	r2, [pc, #156]	; 1f6c <log_oom_internal@plt+0xd14>
    1ecc:	ldr	r3, [pc, #156]	; 1f70 <log_oom_internal@plt+0xd18>
    1ed0:	add	r2, pc, r2
    1ed4:	str	r2, [sp, #4]
    1ed8:	add	r3, pc, r3
    1edc:	ldr	r2, [pc, #144]	; 1f74 <log_oom_internal@plt+0xd1c>
    1ee0:	add	r3, r3, #48	; 0x30
    1ee4:	str	r3, [sp]
    1ee8:	mov	r1, r7
    1eec:	ldr	r3, [pc, #132]	; 1f78 <log_oom_internal@plt+0xd20>
    1ef0:	add	r2, pc, r2
    1ef4:	str	r0, [sp, #8]
    1ef8:	mov	r0, #3
    1efc:	bl	11d4 <log_internal_realm@plt>
    1f00:	mov	r4, r0
    1f04:	b	1e6c <log_oom_internal@plt+0xc14>
    1f08:	str	r2, [sp, #44]	; 0x2c
    1f0c:	str	r1, [sp, #40]	; 0x28
    1f10:	bl	10f0 <polkit_agent_open@plt>
    1f14:	ldrb	lr, [r4]
    1f18:	ldr	r2, [sp, #44]	; 0x2c
    1f1c:	ldr	r1, [sp, #40]	; 0x28
    1f20:	b	1dd4 <log_oom_internal@plt+0xb7c>
    1f24:	bl	10c0 <__stack_chk_fail@plt>
    1f28:	ldr	r1, [pc, #76]	; 1f7c <log_oom_internal@plt+0xd24>
    1f2c:	add	r1, pc, r1
    1f30:	b	1dfc <log_oom_internal@plt+0xba4>
    1f34:	ldr	r0, [pc, #68]	; 1f80 <log_oom_internal@plt+0xd28>
    1f38:	add	r0, pc, r0
    1f3c:	mov	r1, r0
    1f40:	b	1dfc <log_oom_internal@plt+0xba4>
    1f44:	andeq	r2, r1, r4, asr #2
    1f48:	andeq	r2, r1, ip, ror #4
    1f4c:	strdeq	r0, [r0], -r8
    1f50:	andeq	r2, r1, r0, ror r2
    1f54:	strdeq	r2, [r1], -r8
    1f58:	andeq	r1, r0, r8, asr #11
    1f5c:	andeq	r1, r0, ip, asr #11
    1f60:	muleq	r0, r8, r5
    1f64:	andeq	r1, r0, ip, ror r5
    1f68:	andeq	r1, r0, ip, lsl #10
    1f6c:	andeq	r1, r0, ip, lsr r5
    1f70:	andeq	r0, r0, r4, ror #27
    1f74:	andeq	r0, r0, r8, asr #29
    1f78:	andeq	r0, r0, r1, lsl r1
    1f7c:	andeq	r1, r0, r4, ror r4
    1f80:	andeq	r1, r0, r8, ror #8
    1f84:	ldr	r3, [pc, #432]	; 213c <log_oom_internal@plt+0xee4>
    1f88:	ldr	ip, [pc, #432]	; 2140 <log_oom_internal@plt+0xee8>
    1f8c:	add	r3, pc, r3
    1f90:	push	{r4, r5, r6, r7, lr}
    1f94:	sub	sp, sp, #60	; 0x3c
    1f98:	ldr	r5, [r3, ip]
    1f9c:	mov	r4, r0
    1fa0:	subs	r7, r2, #0
    1fa4:	ldr	r3, [r5]
    1fa8:	mov	r0, #0
    1fac:	str	r0, [sp, #40]	; 0x28
    1fb0:	str	r3, [sp, #52]	; 0x34
    1fb4:	str	r0, [sp, #44]	; 0x2c
    1fb8:	str	r0, [sp, #48]	; 0x30
    1fbc:	beq	210c <log_oom_internal@plt+0xeb4>
    1fc0:	ldr	r6, [pc, #380]	; 2144 <log_oom_internal@plt+0xeec>
    1fc4:	ldr	r3, [pc, #380]	; 2148 <log_oom_internal@plt+0xef0>
    1fc8:	add	r6, pc, r6
    1fcc:	add	r3, pc, r3
    1fd0:	ldrb	r0, [r6]
    1fd4:	ldr	r3, [r3, #4]
    1fd8:	cmp	r3, #0
    1fdc:	movne	r3, #0
    1fe0:	andeq	r3, r0, #1
    1fe4:	cmp	r3, #0
    1fe8:	bne	20f8 <log_oom_internal@plt+0xea0>
    1fec:	cmp	r4, #2
    1ff0:	ldr	lr, [r1, #4]
    1ff4:	bgt	208c <log_oom_internal@plt+0xe34>
    1ff8:	ldr	r4, [pc, #332]	; 214c <log_oom_internal@plt+0xef4>
    1ffc:	add	r4, pc, r4
    2000:	ldr	r2, [pc, #328]	; 2150 <log_oom_internal@plt+0xef8>
    2004:	str	r0, [sp, #28]
    2008:	add	r2, pc, r2
    200c:	ldr	r3, [pc, #320]	; 2154 <log_oom_internal@plt+0xefc>
    2010:	ldrb	r1, [r2, #1]
    2014:	ldr	r2, [pc, #316]	; 2158 <log_oom_internal@plt+0xf00>
    2018:	ldr	ip, [pc, #316]	; 215c <log_oom_internal@plt+0xf04>
    201c:	add	r2, pc, r2
    2020:	str	r2, [sp]
    2024:	ldr	r2, [pc, #308]	; 2160 <log_oom_internal@plt+0xf08>
    2028:	add	r3, pc, r3
    202c:	add	ip, pc, ip
    2030:	str	r4, [sp, #20]
    2034:	add	r6, sp, #40	; 0x28
    2038:	mov	r4, #0
    203c:	mov	r0, r7
    2040:	str	r1, [sp, #24]
    2044:	str	lr, [sp, #16]
    2048:	mov	r1, r3
    204c:	str	ip, [sp, #12]
    2050:	str	r4, [sp, #8]
    2054:	str	r6, [sp, #4]
    2058:	add	r2, pc, r2
    205c:	bl	118c <sd_bus_call_method@plt>
    2060:	subs	r7, r0, #0
    2064:	blt	2094 <log_oom_internal@plt+0xe3c>
    2068:	mov	r0, r6
    206c:	bl	1084 <sd_bus_error_free@plt>
    2070:	ldr	r2, [sp, #52]	; 0x34
    2074:	ldr	r3, [r5]
    2078:	mov	r0, r4
    207c:	cmp	r2, r3
    2080:	bne	2138 <log_oom_internal@plt+0xee0>
    2084:	add	sp, sp, #60	; 0x3c
    2088:	pop	{r4, r5, r6, r7, pc}
    208c:	ldr	r4, [r1, #8]
    2090:	b	2000 <log_oom_internal@plt+0xda8>
    2094:	mov	r0, r4
    2098:	bl	1060 <log_get_max_level_realm@plt>
    209c:	rsb	r1, r7, #0
    20a0:	cmp	r0, #2
    20a4:	uxtble	r4, r1
    20a8:	rsble	r4, r4, #0
    20ac:	ble	2068 <log_oom_internal@plt+0xe10>
    20b0:	mov	r0, r6
    20b4:	bl	1168 <bus_error_message@plt>
    20b8:	ldr	r2, [pc, #164]	; 2164 <log_oom_internal@plt+0xf0c>
    20bc:	ldr	r3, [pc, #164]	; 2168 <log_oom_internal@plt+0xf10>
    20c0:	add	r2, pc, r2
    20c4:	str	r2, [sp, #4]
    20c8:	add	r3, pc, r3
    20cc:	ldr	r2, [pc, #152]	; 216c <log_oom_internal@plt+0xf14>
    20d0:	add	r3, r3, #84	; 0x54
    20d4:	str	r3, [sp]
    20d8:	mov	r1, r7
    20dc:	mov	r3, #229	; 0xe5
    20e0:	add	r2, pc, r2
    20e4:	str	r0, [sp, #8]
    20e8:	mov	r0, #3
    20ec:	bl	11d4 <log_internal_realm@plt>
    20f0:	mov	r4, r0
    20f4:	b	2068 <log_oom_internal@plt+0xe10>
    20f8:	str	r1, [sp, #36]	; 0x24
    20fc:	bl	10f0 <polkit_agent_open@plt>
    2100:	ldrb	r0, [r6]
    2104:	ldr	r1, [sp, #36]	; 0x24
    2108:	b	1fec <log_oom_internal@plt+0xd94>
    210c:	ldr	r3, [pc, #92]	; 2170 <log_oom_internal@plt+0xf18>
    2110:	ldr	r2, [pc, #92]	; 2174 <log_oom_internal@plt+0xf1c>
    2114:	add	r3, pc, r3
    2118:	ldr	r1, [pc, #88]	; 2178 <log_oom_internal@plt+0xf20>
    211c:	add	r3, r3, #64	; 0x40
    2120:	str	r3, [sp]
    2124:	mov	r0, r7
    2128:	mov	r3, #212	; 0xd4
    212c:	add	r2, pc, r2
    2130:	add	r1, pc, r1
    2134:	bl	11c8 <log_assert_failed_realm@plt>
    2138:	bl	10c0 <__stack_chk_fail@plt>
    213c:	andeq	r1, r1, r4, asr #30
    2140:	strdeq	r0, [r0], -r8
    2144:	andeq	r2, r1, r4, lsr r0
    2148:	andeq	r2, r1, r8, lsr r0
    214c:	andeq	r1, r0, r4, lsr #7
    2150:	strdeq	r1, [r1], -r4
    2154:	muleq	r0, r8, r3
    2158:	andeq	r1, r0, r8, lsl r4
    215c:	andeq	r1, r0, r0, lsl #8
    2160:	andeq	r1, r0, r0, lsl #7
    2164:	andeq	r1, r0, ip, asr #6
    2168:	strdeq	r0, [r0], -r4
    216c:	ldrdeq	r0, [r0], -r8
    2170:	andeq	r0, r0, r8, lsr #23
    2174:	andeq	r0, r0, ip, lsl #25
    2178:	strdeq	r1, [r0], -r8
    217c:	ldr	r3, [pc, #208]	; 2254 <log_oom_internal@plt+0xffc>
    2180:	ldr	r2, [pc, #208]	; 2258 <log_oom_internal@plt+0x1000>
    2184:	add	r3, pc, r3
    2188:	push	{r4, r5, r6, lr}
    218c:	sub	sp, sp, #16
    2190:	ldr	r5, [r3, r2]
    2194:	add	r0, sp, #16
    2198:	mov	r4, #0
    219c:	ldr	r2, [r5]
    21a0:	str	r4, [r0, #-8]!
    21a4:	str	r2, [sp, #12]
    21a8:	bl	10d8 <get_keymaps@plt>
    21ac:	subs	r6, r0, #0
    21b0:	bge	21fc <log_oom_internal@plt+0xfa4>
    21b4:	mov	r0, r4
    21b8:	bl	1060 <log_get_max_level_realm@plt>
    21bc:	cmp	r0, #2
    21c0:	rsble	r4, r6, #0
    21c4:	uxtble	r4, r4
    21c8:	rsble	r4, r4, #0
    21cc:	bgt	2214 <log_oom_internal@plt+0xfbc>
    21d0:	ldr	r0, [sp, #8]
    21d4:	cmp	r0, #0
    21d8:	beq	21e0 <log_oom_internal@plt+0xf88>
    21dc:	bl	11e0 <strv_free@plt>
    21e0:	ldr	r2, [sp, #12]
    21e4:	ldr	r3, [r5]
    21e8:	mov	r0, r4
    21ec:	cmp	r2, r3
    21f0:	bne	2250 <log_oom_internal@plt+0xff8>
    21f4:	add	sp, sp, #16
    21f8:	pop	{r4, r5, r6, pc}
    21fc:	ldr	r3, [pc, #88]	; 225c <log_oom_internal@plt+0x1004>
    2200:	ldr	r0, [pc, r3]
    2204:	bl	11f8 <pager_open@plt>
    2208:	ldr	r0, [sp, #8]
    220c:	bl	115c <strv_print@plt>
    2210:	b	21d0 <log_oom_internal@plt+0xf78>
    2214:	ldr	r2, [pc, #68]	; 2260 <log_oom_internal@plt+0x1008>
    2218:	ldr	r3, [pc, #68]	; 2264 <log_oom_internal@plt+0x100c>
    221c:	add	r2, pc, r2
    2220:	str	r2, [sp, #4]
    2224:	add	r3, pc, r3
    2228:	ldr	r2, [pc, #56]	; 2268 <log_oom_internal@plt+0x1010>
    222c:	add	r3, r3, #104	; 0x68
    2230:	str	r3, [sp]
    2234:	mov	r1, r6
    2238:	mov	r3, #240	; 0xf0
    223c:	add	r2, pc, r2
    2240:	mov	r0, #3
    2244:	bl	11d4 <log_internal_realm@plt>
    2248:	mov	r4, r0
    224c:	b	21d0 <log_oom_internal@plt+0xf78>
    2250:	bl	10c0 <__stack_chk_fail@plt>
    2254:	andeq	r1, r1, ip, asr #26
    2258:	strdeq	r0, [r0], -r8
    225c:	andeq	r1, r1, r4, lsl #28
    2260:	andeq	r1, r0, ip, lsr #4
    2264:	muleq	r0, r8, sl
    2268:	andeq	r0, r0, ip, ror fp
    226c:	ldr	r3, [pc, #208]	; 2344 <log_oom_internal@plt+0x10ec>
    2270:	ldr	r2, [pc, #208]	; 2348 <log_oom_internal@plt+0x10f0>
    2274:	add	r3, pc, r3
    2278:	push	{r4, r5, r6, lr}
    227c:	sub	sp, sp, #16
    2280:	ldr	r5, [r3, r2]
    2284:	add	r0, sp, #16
    2288:	mov	r4, #0
    228c:	ldr	r2, [r5]
    2290:	str	r4, [r0, #-8]!
    2294:	str	r2, [sp, #12]
    2298:	bl	1024 <get_locales@plt>
    229c:	subs	r6, r0, #0
    22a0:	bge	22ec <log_oom_internal@plt+0x1094>
    22a4:	mov	r0, r4
    22a8:	bl	1060 <log_get_max_level_realm@plt>
    22ac:	cmp	r0, #2
    22b0:	rsble	r4, r6, #0
    22b4:	uxtble	r4, r4
    22b8:	rsble	r4, r4, #0
    22bc:	bgt	2304 <log_oom_internal@plt+0x10ac>
    22c0:	ldr	r0, [sp, #8]
    22c4:	cmp	r0, #0
    22c8:	beq	22d0 <log_oom_internal@plt+0x1078>
    22cc:	bl	11e0 <strv_free@plt>
    22d0:	ldr	r2, [sp, #12]
    22d4:	ldr	r3, [r5]
    22d8:	mov	r0, r4
    22dc:	cmp	r2, r3
    22e0:	bne	2340 <log_oom_internal@plt+0x10e8>
    22e4:	add	sp, sp, #16
    22e8:	pop	{r4, r5, r6, pc}
    22ec:	ldr	r3, [pc, #88]	; 234c <log_oom_internal@plt+0x10f4>
    22f0:	ldr	r0, [pc, r3]
    22f4:	bl	11f8 <pager_open@plt>
    22f8:	ldr	r0, [sp, #8]
    22fc:	bl	115c <strv_print@plt>
    2300:	b	22c0 <log_oom_internal@plt+0x1068>
    2304:	ldr	r2, [pc, #68]	; 2350 <log_oom_internal@plt+0x10f8>
    2308:	ldr	r3, [pc, #68]	; 2354 <log_oom_internal@plt+0x10fc>
    230c:	add	r2, pc, r2
    2310:	str	r2, [sp, #4]
    2314:	add	r3, pc, r3
    2318:	ldr	r2, [pc, #56]	; 2358 <log_oom_internal@plt+0x1100>
    231c:	add	r3, r3, #128	; 0x80
    2320:	str	r3, [sp]
    2324:	mov	r1, r6
    2328:	mov	r3, #198	; 0xc6
    232c:	add	r2, pc, r2
    2330:	mov	r0, #3
    2334:	bl	11d4 <log_internal_realm@plt>
    2338:	mov	r4, r0
    233c:	b	22c0 <log_oom_internal@plt+0x1068>
    2340:	bl	10c0 <__stack_chk_fail@plt>
    2344:	andeq	r1, r1, ip, asr ip
    2348:	strdeq	r0, [r0], -r8
    234c:	andeq	r1, r1, r4, lsl sp
    2350:	andeq	r1, r0, r0, ror #2
    2354:	andeq	r0, r0, r8, lsr #19
    2358:	andeq	r0, r0, ip, lsl #21
    235c:	ldr	r0, [pc, #472]	; 253c <log_oom_internal@plt+0x12e4>
    2360:	ldr	ip, [pc, #472]	; 2540 <log_oom_internal@plt+0x12e8>
    2364:	add	r0, pc, r0
    2368:	push	{r4, r5, r6, r7, lr}
    236c:	subs	r4, r2, #0
    2370:	ldr	r5, [r0, ip]
    2374:	sub	sp, sp, #44	; 0x2c
    2378:	mov	r2, r0
    237c:	ldr	r2, [r5]
    2380:	mov	r3, #0
    2384:	str	r3, [sp, #20]
    2388:	str	r3, [sp, #24]
    238c:	str	r2, [sp, #36]	; 0x24
    2390:	str	r3, [sp, #28]
    2394:	str	r3, [sp, #32]
    2398:	beq	250c <log_oom_internal@plt+0x12b4>
    239c:	ldr	r3, [pc, #416]	; 2544 <log_oom_internal@plt+0x12ec>
    23a0:	ldr	r2, [pc, #416]	; 2548 <log_oom_internal@plt+0x12f0>
    23a4:	add	r3, pc, r3
    23a8:	add	r2, pc, r2
    23ac:	ldrb	r3, [r3]
    23b0:	ldr	r2, [r2, #4]
    23b4:	mov	r6, r1
    23b8:	cmp	r2, #0
    23bc:	movne	r3, #0
    23c0:	andeq	r3, r3, #1
    23c4:	cmp	r3, #0
    23c8:	bne	2504 <log_oom_internal@plt+0x12ac>
    23cc:	ldr	r2, [pc, #376]	; 254c <log_oom_internal@plt+0x12f4>
    23d0:	ldr	r3, [pc, #376]	; 2550 <log_oom_internal@plt+0x12f8>
    23d4:	add	r2, pc, r2
    23d8:	add	r3, pc, r3
    23dc:	add	r1, sp, #20
    23e0:	strd	r2, [sp]
    23e4:	ldr	r3, [pc, #360]	; 2554 <log_oom_internal@plt+0x12fc>
    23e8:	mov	r0, r4
    23ec:	add	r3, pc, r3
    23f0:	bl	10b4 <sd_bus_message_new_method_call@plt>
    23f4:	cmp	r0, #0
    23f8:	blt	24c4 <log_oom_internal@plt+0x126c>
    23fc:	add	r1, r6, #4
    2400:	ldr	r0, [sp, #20]
    2404:	bl	10e4 <sd_bus_message_append_strv@plt>
    2408:	cmp	r0, #0
    240c:	blt	24c4 <log_oom_internal@plt+0x126c>
    2410:	ldr	r3, [pc, #320]	; 2558 <log_oom_internal@plt+0x1300>
    2414:	ldr	r1, [pc, #320]	; 255c <log_oom_internal@plt+0x1304>
    2418:	add	r3, pc, r3
    241c:	add	r1, pc, r1
    2420:	ldr	r0, [sp, #20]
    2424:	ldrb	r2, [r3]
    2428:	bl	121c <sd_bus_message_append@plt>
    242c:	cmp	r0, #0
    2430:	blt	24c4 <log_oom_internal@plt+0x126c>
    2434:	mov	r6, #0
    2438:	add	r7, sp, #24
    243c:	mov	r0, r4
    2440:	ldr	r1, [sp, #20]
    2444:	str	r6, [sp, #4]
    2448:	str	r7, [sp]
    244c:	mov	r2, #0
    2450:	mov	r3, #0
    2454:	bl	11a4 <sd_bus_call@plt>
    2458:	subs	r4, r0, #0
    245c:	bge	24d0 <log_oom_internal@plt+0x1278>
    2460:	mov	r0, r6
    2464:	bl	1060 <log_get_max_level_realm@plt>
    2468:	rsb	r1, r4, #0
    246c:	cmp	r0, #2
    2470:	uxtble	r1, r1
    2474:	rsble	r6, r1, #0
    2478:	ble	24d0 <log_oom_internal@plt+0x1278>
    247c:	mov	r0, r7
    2480:	bl	1168 <bus_error_message@plt>
    2484:	ldr	r2, [pc, #212]	; 2560 <log_oom_internal@plt+0x1308>
    2488:	ldr	r3, [pc, #212]	; 2564 <log_oom_internal@plt+0x130c>
    248c:	add	r2, pc, r2
    2490:	str	r2, [sp, #4]
    2494:	add	r3, pc, r3
    2498:	ldr	r2, [pc, #200]	; 2568 <log_oom_internal@plt+0x1310>
    249c:	add	r3, r3, #156	; 0x9c
    24a0:	str	r3, [sp]
    24a4:	mov	r1, r4
    24a8:	mov	r3, #187	; 0xbb
    24ac:	add	r2, pc, r2
    24b0:	str	r0, [sp, #8]
    24b4:	mov	r0, #3
    24b8:	bl	11d4 <log_internal_realm@plt>
    24bc:	mov	r6, r0
    24c0:	b	24d0 <log_oom_internal@plt+0x1278>
    24c4:	bl	fa0 <bus_log_create_error@plt>
    24c8:	add	r7, sp, #24
    24cc:	mov	r6, r0
    24d0:	mov	r0, r7
    24d4:	bl	1084 <sd_bus_error_free@plt>
    24d8:	ldr	r0, [sp, #20]
    24dc:	cmp	r0, #0
    24e0:	beq	24e8 <log_oom_internal@plt+0x1290>
    24e4:	bl	1114 <sd_bus_message_unref@plt>
    24e8:	ldr	r2, [sp, #36]	; 0x24
    24ec:	ldr	r3, [r5]
    24f0:	mov	r0, r6
    24f4:	cmp	r2, r3
    24f8:	bne	2538 <log_oom_internal@plt+0x12e0>
    24fc:	add	sp, sp, #44	; 0x2c
    2500:	pop	{r4, r5, r6, r7, pc}
    2504:	bl	10f0 <polkit_agent_open@plt>
    2508:	b	23cc <log_oom_internal@plt+0x1174>
    250c:	ldr	r3, [pc, #88]	; 256c <log_oom_internal@plt+0x1314>
    2510:	ldr	r2, [pc, #88]	; 2570 <log_oom_internal@plt+0x1318>
    2514:	add	r3, pc, r3
    2518:	ldr	r1, [pc, #84]	; 2574 <log_oom_internal@plt+0x131c>
    251c:	add	r3, r3, #144	; 0x90
    2520:	str	r3, [sp]
    2524:	mov	r0, r4
    2528:	mov	r3, #163	; 0xa3
    252c:	add	r2, pc, r2
    2530:	add	r1, pc, r1
    2534:	bl	11c8 <log_assert_failed_realm@plt>
    2538:	bl	10c0 <__stack_chk_fail@plt>
    253c:	andeq	r1, r1, ip, ror #22
    2540:	strdeq	r0, [r0], -r8
    2544:	andeq	r1, r1, r8, asr ip
    2548:	andeq	r1, r1, ip, asr ip
    254c:	andeq	r0, r0, ip, ror #31
    2550:	strheq	r1, [r0], -r8
    2554:	andeq	r0, r0, ip, ror #31
    2558:	andeq	r1, r1, r4, ror #23
    255c:	andeq	r1, r0, r0, lsl #1
    2560:	andeq	r1, r0, r4, lsl r0
    2564:	andeq	r0, r0, r8, lsr #16
    2568:	andeq	r0, r0, ip, lsl #18
    256c:	andeq	r0, r0, r8, lsr #15
    2570:	andeq	r0, r0, ip, lsl #17
    2574:	strdeq	r0, [r0], -r8
    2578:	ldr	r1, [pc, #1568]	; 2ba0 <log_oom_internal@plt+0x1948>
    257c:	ldr	ip, [pc, #1568]	; 2ba4 <log_oom_internal@plt+0x194c>
    2580:	add	r1, pc, r1
    2584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2588:	sub	sp, sp, #228	; 0xe4
    258c:	ldr	r6, [r1, ip]
    2590:	add	r3, sp, #136	; 0x88
    2594:	mov	r5, #0
    2598:	ldr	r1, [r6]
    259c:	subs	r0, r2, #0
    25a0:	str	r5, [r3, #4]
    25a4:	str	r5, [sp, #136]	; 0x88
    25a8:	str	r1, [sp, #220]	; 0xdc
    25ac:	str	r5, [r3, #8]
    25b0:	str	r5, [r3, #12]
    25b4:	str	r5, [r3, #16]
    25b8:	str	r5, [r3, #20]
    25bc:	str	r5, [r3, #24]
    25c0:	str	r5, [sp, #124]	; 0x7c
    25c4:	str	r5, [sp, #128]	; 0x80
    25c8:	str	r5, [sp, #132]	; 0x84
    25cc:	str	r5, [sp, #120]	; 0x78
    25d0:	beq	2b74 <log_oom_internal@plt+0x191c>
    25d4:	str	r3, [sp, #12]
    25d8:	add	r3, sp, #120	; 0x78
    25dc:	str	r3, [sp, #8]
    25e0:	ldr	r2, [pc, #1472]	; 2ba8 <log_oom_internal@plt+0x1950>
    25e4:	ldr	r3, [pc, #1472]	; 2bac <log_oom_internal@plt+0x1954>
    25e8:	ldr	r1, [pc, #1472]	; 2bb0 <log_oom_internal@plt+0x1958>
    25ec:	add	r8, sp, #124	; 0x7c
    25f0:	str	r5, [sp]
    25f4:	str	r8, [sp, #4]
    25f8:	add	r3, pc, r3
    25fc:	add	r2, pc, r2
    2600:	add	r1, pc, r1
    2604:	bl	10a8 <bus_map_all_properties@plt>
    2608:	subs	r4, r0, #0
    260c:	bge	2668 <log_oom_internal@plt+0x1410>
    2610:	mov	r0, r5
    2614:	bl	1060 <log_get_max_level_realm@plt>
    2618:	cmp	r0, #2
    261c:	rsble	r4, r4, #0
    2620:	uxtble	r4, r4
    2624:	rsble	r4, r4, #0
    2628:	bgt	2b00 <log_oom_internal@plt+0x18a8>
    262c:	ldr	r0, [sp, #120]	; 0x78
    2630:	cmp	r0, #0
    2634:	beq	263c <log_oom_internal@plt+0x13e4>
    2638:	bl	1114 <sd_bus_message_unref@plt>
    263c:	mov	r0, r8
    2640:	bl	1084 <sd_bus_error_free@plt>
    2644:	ldr	r0, [sp, #136]	; 0x88
    2648:	bl	11e0 <strv_free@plt>
    264c:	ldr	r2, [sp, #220]	; 0xdc
    2650:	ldr	r3, [r6]
    2654:	mov	r0, r4
    2658:	cmp	r2, r3
    265c:	bne	2b9c <log_oom_internal@plt+0x1944>
    2660:	add	sp, sp, #228	; 0xe4
    2664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2668:	add	r9, sp, #164	; 0xa4
    266c:	mov	r1, r5
    2670:	mov	r0, r9
    2674:	mov	r2, #56	; 0x38
    2678:	bl	1048 <memset@plt>
    267c:	ldr	r3, [pc, #1328]	; 2bb4 <log_oom_internal@plt+0x195c>
    2680:	add	r3, pc, r3
    2684:	ldr	r7, [r3, #4]
    2688:	cmp	r7, #0
    268c:	bne	28fc <log_oom_internal@plt+0x16a4>
    2690:	ldr	r3, [pc, #1312]	; 2bb8 <log_oom_internal@plt+0x1960>
    2694:	ldr	r2, [pc, #1312]	; 2bbc <log_oom_internal@plt+0x1964>
    2698:	add	r3, pc, r3
    269c:	str	r3, [sp, #12]
    26a0:	ldr	r3, [pc, #1304]	; 2bc0 <log_oom_internal@plt+0x1968>
    26a4:	ldr	ip, [pc, #1304]	; 2bc4 <log_oom_internal@plt+0x196c>
    26a8:	add	r3, pc, r3
    26ac:	str	r3, [sp, #68]	; 0x44
    26b0:	ldr	r3, [pc, #1296]	; 2bc8 <log_oom_internal@plt+0x1970>
    26b4:	ldr	r1, [pc, #1296]	; 2bcc <log_oom_internal@plt+0x1974>
    26b8:	add	r3, pc, r3
    26bc:	add	r2, pc, r2
    26c0:	str	r3, [sp, #28]
    26c4:	add	r3, sp, #216	; 0xd8
    26c8:	add	ip, pc, ip
    26cc:	add	r1, pc, r1
    26d0:	str	r2, [sp, #20]
    26d4:	str	r3, [sp, #96]	; 0x60
    26d8:	ldr	r0, [pc, #1264]	; 2bd0 <log_oom_internal@plt+0x1978>
    26dc:	add	r3, sp, #212	; 0xd4
    26e0:	ldr	r2, [pc, #1260]	; 2bd4 <log_oom_internal@plt+0x197c>
    26e4:	str	ip, [sp, #4]
    26e8:	str	r1, [sp, #84]	; 0x54
    26ec:	str	r3, [sp, #88]	; 0x58
    26f0:	ldr	ip, [pc, #1248]	; 2bd8 <log_oom_internal@plt+0x1980>
    26f4:	add	r3, sp, #208	; 0xd0
    26f8:	ldr	r1, [pc, #1244]	; 2bdc <log_oom_internal@plt+0x1984>
    26fc:	add	r0, pc, r0
    2700:	add	r2, pc, r2
    2704:	str	r3, [sp, #80]	; 0x50
    2708:	add	r3, sp, #204	; 0xcc
    270c:	add	ip, pc, ip
    2710:	str	r0, [sp, #92]	; 0x5c
    2714:	add	r1, pc, r1
    2718:	str	r2, [sp, #76]	; 0x4c
    271c:	str	r3, [sp, #72]	; 0x48
    2720:	ldr	r0, [pc, #1208]	; 2be0 <log_oom_internal@plt+0x1988>
    2724:	add	r3, sp, #200	; 0xc8
    2728:	ldr	r2, [pc, #1204]	; 2be4 <log_oom_internal@plt+0x198c>
    272c:	str	ip, [sp, #60]	; 0x3c
    2730:	str	r1, [sp, #44]	; 0x2c
    2734:	add	ip, sp, #176	; 0xb0
    2738:	str	r3, [sp, #64]	; 0x40
    273c:	add	r1, sp, #188	; 0xbc
    2740:	add	r3, sp, #196	; 0xc4
    2744:	add	r0, pc, r0
    2748:	add	r2, pc, r2
    274c:	str	ip, [sp, #16]
    2750:	str	r3, [sp, #56]	; 0x38
    2754:	add	ip, sp, #172	; 0xac
    2758:	str	r1, [sp, #40]	; 0x28
    275c:	ldr	r3, [pc, #1156]	; 2be8 <log_oom_internal@plt+0x1990>
    2760:	ldr	r1, [pc, #1156]	; 2bec <log_oom_internal@plt+0x1994>
    2764:	str	ip, [sp, #8]
    2768:	str	r0, [sp, #52]	; 0x34
    276c:	add	ip, sp, #168	; 0xa8
    2770:	str	r2, [sp, #36]	; 0x24
    2774:	add	r0, sp, #184	; 0xb8
    2778:	add	r2, sp, #192	; 0xc0
    277c:	str	ip, [sp]
    2780:	str	r2, [sp, #48]	; 0x30
    2784:	str	r0, [sp, #32]
    2788:	add	ip, sp, #180	; 0xb4
    278c:	add	r3, pc, r3
    2790:	mov	r2, r9
    2794:	add	r1, pc, r1
    2798:	mov	r0, #1
    279c:	str	r7, [sp, #100]	; 0x64
    27a0:	str	ip, [sp, #24]
    27a4:	bl	11ec <proc_cmdline_get_key_many_internal@plt>
    27a8:	adds	r5, r0, #2
    27ac:	movne	r5, #1
    27b0:	ands	r5, r5, r0, lsr #31
    27b4:	mov	sl, r0
    27b8:	bne	28b8 <log_oom_internal@plt+0x1660>
    27bc:	ldr	r2, [pc, #1068]	; 2bf0 <log_oom_internal@plt+0x1998>
    27c0:	ldr	r3, [pc, #1068]	; 2bf4 <log_oom_internal@plt+0x199c>
    27c4:	add	r2, pc, r2
    27c8:	str	r2, [sp, #108]	; 0x6c
    27cc:	ldr	r2, [pc, #1060]	; 2bf8 <log_oom_internal@plt+0x19a0>
    27d0:	add	r3, pc, r3
    27d4:	mov	sl, #1
    27d8:	add	r2, pc, r2
    27dc:	add	r3, r3, #192	; 0xc0
    27e0:	str	r2, [sp, #116]	; 0x74
    27e4:	str	r3, [sp, #112]	; 0x70
    27e8:	add	r3, sp, #224	; 0xe0
    27ec:	add	r3, r3, r5, lsl #2
    27f0:	add	r7, r5, #1
    27f4:	ldr	fp, [r3, #-60]	; 0xffffffc4
    27f8:	cmp	fp, #0
    27fc:	beq	2b4c <log_oom_internal@plt+0x18f4>
    2800:	mov	r0, #0
    2804:	bl	1060 <log_get_max_level_realm@plt>
    2808:	cmp	sl, #0
    280c:	beq	2854 <log_oom_internal@plt+0x15fc>
    2810:	cmp	r0, #3
    2814:	bgt	2a94 <log_oom_internal@plt+0x183c>
    2818:	cmp	r7, #14
    281c:	beq	28fc <log_oom_internal@plt+0x16a4>
    2820:	add	r3, sp, #224	; 0xe0
    2824:	add	r3, r3, r7, lsl #2
    2828:	ldr	fp, [r3, #-60]	; 0xffffffc4
    282c:	cmp	fp, #0
    2830:	beq	2b68 <log_oom_internal@plt+0x1910>
    2834:	cmp	r0, #3
    2838:	add	r5, r7, #1
    283c:	bgt	2864 <log_oom_internal@plt+0x160c>
    2840:	cmp	r5, #13
    2844:	bgt	28fc <log_oom_internal@plt+0x16a4>
    2848:	ldr	fp, [r9, r5, lsl #2]
    284c:	cmp	fp, #0
    2850:	beq	2b5c <log_oom_internal@plt+0x1904>
    2854:	mov	r7, r5
    2858:	cmp	r0, #3
    285c:	add	r5, r7, #1
    2860:	ble	2840 <log_oom_internal@plt+0x15e8>
    2864:	mov	r0, r7
    2868:	bl	109c <locale_variable_to_string@plt>
    286c:	ldr	r3, [sp, #116]	; 0x74
    2870:	str	fp, [sp, #12]
    2874:	str	r3, [sp, #4]
    2878:	ldr	r3, [sp, #112]	; 0x70
    287c:	ldr	r2, [sp, #108]	; 0x6c
    2880:	str	r3, [sp]
    2884:	mov	r1, #0
    2888:	mov	r3, #90	; 0x5a
    288c:	str	r0, [sp, #8]
    2890:	mov	r0, #4
    2894:	bl	11d4 <log_internal_realm@plt>
    2898:	cmp	r5, #13
    289c:	bgt	28fc <log_oom_internal@plt+0x16a4>
    28a0:	ldr	fp, [r9, r5, lsl #2]
    28a4:	cmp	fp, #0
    28a8:	beq	2b5c <log_oom_internal@plt+0x1904>
    28ac:	mov	r0, #0
    28b0:	bl	1060 <log_get_max_level_realm@plt>
    28b4:	b	2854 <log_oom_internal@plt+0x15fc>
    28b8:	mov	r0, r7
    28bc:	bl	1060 <log_get_max_level_realm@plt>
    28c0:	cmp	r0, #3
    28c4:	ble	28fc <log_oom_internal@plt+0x16a4>
    28c8:	ldr	r2, [pc, #812]	; 2bfc <log_oom_internal@plt+0x19a4>
    28cc:	ldr	r3, [pc, #812]	; 2c00 <log_oom_internal@plt+0x19a8>
    28d0:	add	r2, pc, r2
    28d4:	add	r3, pc, r3
    28d8:	str	r2, [sp, #4]
    28dc:	ldr	r2, [pc, #800]	; 2c04 <log_oom_internal@plt+0x19ac>
    28e0:	add	r3, r3, #192	; 0xc0
    28e4:	str	r3, [sp]
    28e8:	mov	r1, sl
    28ec:	mov	r3, #78	; 0x4e
    28f0:	add	r2, pc, r2
    28f4:	mov	r0, #4
    28f8:	bl	11d4 <log_internal_realm@plt>
    28fc:	mov	r0, r9
    2900:	bl	fac <locale_variables_free@plt>
    2904:	ldr	r3, [sp, #136]	; 0x88
    2908:	cmp	r3, #0
    290c:	beq	2a20 <log_oom_internal@plt+0x17c8>
    2910:	ldr	r2, [r3]
    2914:	cmp	r2, #0
    2918:	beq	2a20 <log_oom_internal@plt+0x17c8>
    291c:	ldr	r1, [pc, #740]	; 2c08 <log_oom_internal@plt+0x19b0>
    2920:	mov	r0, #1
    2924:	add	r1, pc, r1
    2928:	bl	1240 <__printf_chk@plt>
    292c:	ldr	r5, [sp, #136]	; 0x88
    2930:	cmn	r5, #4
    2934:	beq	2974 <log_oom_internal@plt+0x171c>
    2938:	ldr	r2, [r5, #4]
    293c:	cmp	r2, #0
    2940:	beq	2974 <log_oom_internal@plt+0x171c>
    2944:	ldr	r7, [pc, #704]	; 2c0c <log_oom_internal@plt+0x19b4>
    2948:	add	r5, r5, #8
    294c:	add	r7, pc, r7
    2950:	b	2960 <log_oom_internal@plt+0x1708>
    2954:	ldr	r2, [r5], #4
    2958:	cmp	r2, #0
    295c:	beq	2974 <log_oom_internal@plt+0x171c>
    2960:	mov	r1, r7
    2964:	mov	r0, #1
    2968:	bl	1240 <__printf_chk@plt>
    296c:	cmp	r5, #0
    2970:	bne	2954 <log_oom_internal@plt+0x16fc>
    2974:	ldr	r2, [sp, #140]	; 0x8c
    2978:	cmp	r2, #0
    297c:	beq	2a38 <log_oom_internal@plt+0x17e0>
    2980:	ldr	r1, [pc, #648]	; 2c10 <log_oom_internal@plt+0x19b8>
    2984:	mov	r0, #1
    2988:	add	r1, pc, r1
    298c:	bl	1240 <__printf_chk@plt>
    2990:	ldr	r2, [sp, #144]	; 0x90
    2994:	cmp	r2, #0
    2998:	beq	29a8 <log_oom_internal@plt+0x1750>
    299c:	ldrb	r3, [r2]
    29a0:	cmp	r3, #0
    29a4:	bne	2a6c <log_oom_internal@plt+0x1814>
    29a8:	ldr	r2, [sp, #148]	; 0x94
    29ac:	cmp	r2, #0
    29b0:	beq	2a88 <log_oom_internal@plt+0x1830>
    29b4:	ldr	r1, [pc, #600]	; 2c14 <log_oom_internal@plt+0x19bc>
    29b8:	mov	r0, #1
    29bc:	add	r1, pc, r1
    29c0:	bl	1240 <__printf_chk@plt>
    29c4:	ldr	r2, [sp, #152]	; 0x98
    29c8:	cmp	r2, #0
    29cc:	beq	29dc <log_oom_internal@plt+0x1784>
    29d0:	ldrb	r3, [r2]
    29d4:	cmp	r3, #0
    29d8:	bne	2a58 <log_oom_internal@plt+0x1800>
    29dc:	ldr	r2, [sp, #156]	; 0x9c
    29e0:	cmp	r2, #0
    29e4:	beq	29f4 <log_oom_internal@plt+0x179c>
    29e8:	ldrb	r3, [r2]
    29ec:	cmp	r3, #0
    29f0:	bne	2a44 <log_oom_internal@plt+0x17ec>
    29f4:	ldr	r2, [sp, #160]	; 0xa0
    29f8:	cmp	r2, #0
    29fc:	beq	262c <log_oom_internal@plt+0x13d4>
    2a00:	ldrb	r3, [r2]
    2a04:	cmp	r3, #0
    2a08:	beq	262c <log_oom_internal@plt+0x13d4>
    2a0c:	ldr	r1, [pc, #516]	; 2c18 <log_oom_internal@plt+0x19c0>
    2a10:	mov	r0, #1
    2a14:	add	r1, pc, r1
    2a18:	bl	1240 <__printf_chk@plt>
    2a1c:	b	262c <log_oom_internal@plt+0x13d4>
    2a20:	ldr	r0, [pc, #500]	; 2c1c <log_oom_internal@plt+0x19c4>
    2a24:	add	r0, pc, r0
    2a28:	bl	1030 <puts@plt>
    2a2c:	ldr	r2, [sp, #140]	; 0x8c
    2a30:	cmp	r2, #0
    2a34:	bne	2980 <log_oom_internal@plt+0x1728>
    2a38:	ldr	r2, [pc, #480]	; 2c20 <log_oom_internal@plt+0x19c8>
    2a3c:	add	r2, pc, r2
    2a40:	b	2980 <log_oom_internal@plt+0x1728>
    2a44:	ldr	r1, [pc, #472]	; 2c24 <log_oom_internal@plt+0x19cc>
    2a48:	mov	r0, #1
    2a4c:	add	r1, pc, r1
    2a50:	bl	1240 <__printf_chk@plt>
    2a54:	b	29f4 <log_oom_internal@plt+0x179c>
    2a58:	ldr	r1, [pc, #456]	; 2c28 <log_oom_internal@plt+0x19d0>
    2a5c:	mov	r0, #1
    2a60:	add	r1, pc, r1
    2a64:	bl	1240 <__printf_chk@plt>
    2a68:	b	29dc <log_oom_internal@plt+0x1784>
    2a6c:	ldr	r1, [pc, #440]	; 2c2c <log_oom_internal@plt+0x19d4>
    2a70:	mov	r0, #1
    2a74:	add	r1, pc, r1
    2a78:	bl	1240 <__printf_chk@plt>
    2a7c:	ldr	r2, [sp, #148]	; 0x94
    2a80:	cmp	r2, #0
    2a84:	bne	29b4 <log_oom_internal@plt+0x175c>
    2a88:	ldr	r2, [pc, #416]	; 2c30 <log_oom_internal@plt+0x19d8>
    2a8c:	add	r2, pc, r2
    2a90:	b	29b4 <log_oom_internal@plt+0x175c>
    2a94:	mov	r0, r5
    2a98:	bl	109c <locale_variable_to_string@plt>
    2a9c:	ldr	r2, [pc, #400]	; 2c34 <log_oom_internal@plt+0x19dc>
    2aa0:	ldr	r1, [pc, #400]	; 2c38 <log_oom_internal@plt+0x19e0>
    2aa4:	add	r2, pc, r2
    2aa8:	add	r2, r2, #192	; 0xc0
    2aac:	str	r2, [sp]
    2ab0:	ldr	r2, [pc, #388]	; 2c3c <log_oom_internal@plt+0x19e4>
    2ab4:	add	r1, pc, r1
    2ab8:	str	r1, [sp, #4]
    2abc:	str	fp, [sp, #12]
    2ac0:	mov	r3, #86	; 0x56
    2ac4:	add	r2, pc, r2
    2ac8:	mov	r1, #0
    2acc:	str	r0, [sp, #8]
    2ad0:	mov	r0, #4
    2ad4:	bl	11d4 <log_internal_realm@plt>
    2ad8:	cmp	r7, #14
    2adc:	beq	28fc <log_oom_internal@plt+0x16a4>
    2ae0:	add	r3, sp, #224	; 0xe0
    2ae4:	add	r3, r3, r7, lsl #2
    2ae8:	ldr	fp, [r3, #-60]	; 0xffffffc4
    2aec:	cmp	fp, #0
    2af0:	beq	2b68 <log_oom_internal@plt+0x1910>
    2af4:	mov	r0, #0
    2af8:	bl	1060 <log_get_max_level_realm@plt>
    2afc:	b	2834 <log_oom_internal@plt+0x15dc>
    2b00:	mov	r1, r4
    2b04:	mov	r0, r8
    2b08:	bl	1168 <bus_error_message@plt>
    2b0c:	ldr	r2, [pc, #300]	; 2c40 <log_oom_internal@plt+0x19e8>
    2b10:	ldr	r3, [pc, #300]	; 2c44 <log_oom_internal@plt+0x19ec>
    2b14:	add	r2, pc, r2
    2b18:	str	r2, [sp, #4]
    2b1c:	add	r3, pc, r3
    2b20:	ldr	r2, [pc, #288]	; 2c48 <log_oom_internal@plt+0x19f0>
    2b24:	add	r3, r3, #180	; 0xb4
    2b28:	mov	r1, r4
    2b2c:	str	r3, [sp]
    2b30:	add	r2, pc, r2
    2b34:	mov	r3, #149	; 0x95
    2b38:	str	r0, [sp, #8]
    2b3c:	mov	r0, #3
    2b40:	bl	11d4 <log_internal_realm@plt>
    2b44:	mov	r4, r0
    2b48:	b	262c <log_oom_internal@plt+0x13d4>
    2b4c:	mov	r5, r7
    2b50:	cmp	r5, #14
    2b54:	bne	27e8 <log_oom_internal@plt+0x1590>
    2b58:	b	28fc <log_oom_internal@plt+0x16a4>
    2b5c:	add	r5, r7, #2
    2b60:	mov	sl, fp
    2b64:	b	2b50 <log_oom_internal@plt+0x18f8>
    2b68:	add	r5, r5, #2
    2b6c:	mov	sl, fp
    2b70:	b	2b50 <log_oom_internal@plt+0x18f8>
    2b74:	ldr	r3, [pc, #208]	; 2c4c <log_oom_internal@plt+0x19f4>
    2b78:	ldr	r2, [pc, #208]	; 2c50 <log_oom_internal@plt+0x19f8>
    2b7c:	add	r3, pc, r3
    2b80:	ldr	r1, [pc, #204]	; 2c54 <log_oom_internal@plt+0x19fc>
    2b84:	add	r3, r3, #168	; 0xa8
    2b88:	str	r3, [sp]
    2b8c:	add	r2, pc, r2
    2b90:	mov	r3, #138	; 0x8a
    2b94:	add	r1, pc, r1
    2b98:	bl	11c8 <log_assert_failed_realm@plt>
    2b9c:	bl	10c0 <__stack_chk_fail@plt>
    2ba0:	andeq	r1, r1, r0, asr r9
    2ba4:	strdeq	r0, [r0], -r8
    2ba8:	ldrdeq	r0, [r0], -ip
    2bac:	ldrdeq	r1, [r1], -r8
    2bb0:	andeq	r0, r0, r0, asr #27
    2bb4:	andeq	r1, r1, r4, lsl #19
    2bb8:	andeq	r0, r0, r0, lsr pc
    2bbc:	strdeq	r0, [r0], -ip
    2bc0:	andeq	r0, r0, r0, lsr #29
    2bc4:	andeq	r0, r0, r4, lsl pc
    2bc8:	andeq	r0, r0, ip, ror #29
    2bcc:	andeq	r0, r0, r0, asr lr
    2bd0:	andeq	r0, r0, r4, lsl #28
    2bd4:	andeq	r0, r0, r4, lsr lr
    2bd8:	andeq	r0, r0, r0, asr lr
    2bdc:	andeq	r0, r0, r8, ror #28
    2be0:	andeq	r0, r0, r8, lsr #28
    2be4:	andeq	r0, r0, r8, asr #28
    2be8:	andeq	r0, r0, r8, asr sp
    2bec:	andeq	r0, r0, r0, ror #26
    2bf0:	strdeq	r0, [r0], -r4
    2bf4:	andeq	r0, r0, ip, ror #9
    2bf8:			; <UNDEFINED> instruction: 0x00000eb0
    2bfc:	andeq	r0, r0, ip, lsl sp
    2c00:	andeq	r0, r0, r8, ror #7
    2c04:	andeq	r0, r0, r8, asr #9
    2c08:	ldrdeq	r0, [r0], -ip
    2c0c:	andeq	r0, r0, r4, asr sp
    2c10:	andeq	r0, r0, r0, lsr sp
    2c14:	andeq	r0, r0, r4, lsl sp
    2c18:	andeq	r0, r0, ip, asr #26
    2c1c:	andeq	r0, r0, r4, asr #25
    2c20:	andeq	r0, r0, r4, lsl #21
    2c24:	strdeq	r0, [r0], -ip
    2c28:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2c2c:	andeq	r0, r0, r4, lsr #25
    2c30:	andeq	r0, r0, r4, lsr sl
    2c34:	andeq	r0, r0, r8, lsl r2
    2c38:	andeq	r0, r0, ip, asr fp
    2c3c:	strdeq	r0, [r0], -r4
    2c40:			; <UNDEFINED> instruction: 0x000009b0
    2c44:	andeq	r0, r0, r0, lsr #3
    2c48:	andeq	r0, r0, r8, lsl #5
    2c4c:	andeq	r0, r0, r0, asr #2
    2c50:	andeq	r0, r0, ip, lsr #4
    2c54:	muleq	r0, r4, r8
    2c58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2c5c:	mov	r7, r0
    2c60:	ldr	r6, [pc, #72]	; 2cb0 <log_oom_internal@plt+0x1a58>
    2c64:	ldr	r5, [pc, #72]	; 2cb4 <log_oom_internal@plt+0x1a5c>
    2c68:	add	r6, pc, r6
    2c6c:	add	r5, pc, r5
    2c70:	sub	r6, r6, r5
    2c74:	mov	r8, r1
    2c78:	mov	r9, r2
    2c7c:	bl	f80 <bus_log_create_error@plt-0x20>
    2c80:	asrs	r6, r6, #2
    2c84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    2c88:	mov	r4, #0
    2c8c:	add	r4, r4, #1
    2c90:	ldr	r3, [r5], #4
    2c94:	mov	r2, r9
    2c98:	mov	r1, r8
    2c9c:	mov	r0, r7
    2ca0:	blx	r3
    2ca4:	cmp	r6, r4
    2ca8:	bne	2c8c <log_oom_internal@plt+0x1a34>
    2cac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2cb0:	andeq	r0, r1, r4, ror #30
    2cb4:	andeq	r0, r1, ip, asr pc
    2cb8:	bx	lr

Disassembly of section .fini:

00002cbc <.fini>:
    2cbc:	push	{r3, lr}
    2cc0:	pop	{r3, pc}
