
raspbian-preinstalled/renice:     file format elf32-littlearm


Disassembly of section .init:

00010784 <.init>:
   10784:	push	{r3, lr}
   10788:	bl	10f40 <abort@plt+0x670>
   1078c:	pop	{r3, pc}

Disassembly of section .plt:

00010790 <getpwnam@plt-0x14>:
   10790:	push	{lr}		; (str lr, [sp, #-4]!)
   10794:	ldr	lr, [pc, #4]	; 107a0 <getpwnam@plt-0x4>
   10798:	add	lr, pc, lr
   1079c:	ldr	pc, [lr, #8]!
   107a0:	andeq	r1, r1, r4, ror #15

000107a4 <getpwnam@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2020]!	; 0x7e4

000107b0 <strcmp@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2012]!	; 0x7dc

000107bc <strtol@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2004]!	; 0x7d4

000107c8 <ferror@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #1996]!	; 0x7cc

000107d4 <_exit@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #1988]!	; 0x7c4

000107e0 <dcgettext@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #1980]!	; 0x7bc

000107ec <__stack_chk_fail@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #1972]!	; 0x7b4

000107f8 <getpriority@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #1964]!	; 0x7ac

00010804 <textdomain@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #1956]!	; 0x7a4

00010810 <__fpending@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #1948]!	; 0x79c

0001081c <setpriority@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #1940]!	; 0x794

00010828 <__libc_start_main@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #1932]!	; 0x78c

00010834 <__gmon_start__@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #1924]!	; 0x784

00010840 <exit@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #1916]!	; 0x77c

0001084c <warnx@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #1908]!	; 0x774

00010858 <__errno_location@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #1900]!	; 0x76c

00010864 <__cxa_atexit@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1892]!	; 0x764

00010870 <__printf_chk@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1884]!	; 0x75c

0001087c <__fprintf_chk@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1876]!	; 0x754

00010888 <fclose@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1868]!	; 0x74c

00010894 <setlocale@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1860]!	; 0x744

000108a0 <warn@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1852]!	; 0x73c

000108ac <fputc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1844]!	; 0x734

000108b8 <bindtextdomain@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1836]!	; 0x72c

000108c4 <fputs@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1828]!	; 0x724

000108d0 <abort@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1820]!	; 0x71c

Disassembly of section .text:

000108dc <.text>:
   108dc:	ldr	r3, [pc, #1384]	; 10e4c <abort@plt+0x57c>
   108e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108e4:	sub	sp, sp, #36	; 0x24
   108e8:	ldr	r2, [r3]
   108ec:	mov	r7, r1
   108f0:	mov	r3, #0
   108f4:	mov	r8, r0
   108f8:	ldr	r1, [pc, #1360]	; 10e50 <abort@plt+0x580>
   108fc:	mov	r0, #6
   10900:	str	r2, [sp, #28]
   10904:	str	r3, [sp, #16]
   10908:	bl	10894 <setlocale@plt>
   1090c:	ldr	r1, [pc, #1344]	; 10e54 <abort@plt+0x584>
   10910:	ldr	r0, [pc, #1344]	; 10e58 <abort@plt+0x588>
   10914:	bl	108b8 <bindtextdomain@plt>
   10918:	ldr	r0, [pc, #1336]	; 10e58 <abort@plt+0x588>
   1091c:	bl	10804 <textdomain@plt>
   10920:	sub	r5, r8, #1
   10924:	ldr	r0, [pc, #1328]	; 10e5c <abort@plt+0x58c>
   10928:	bl	11210 <abort@plt+0x940>
   1092c:	cmp	r5, #1
   10930:	ldr	r4, [r7, #4]
   10934:	add	r6, r7, #4
   10938:	beq	10acc <abort@plt+0x1fc>
   1093c:	cmp	r4, #0
   10940:	beq	10960 <abort@plt+0x90>
   10944:	ldr	r1, [pc, #1300]	; 10e60 <abort@plt+0x590>
   10948:	mov	r0, r4
   1094c:	bl	107b0 <strcmp@plt>
   10950:	cmp	r0, #0
   10954:	bne	10ab4 <abort@plt+0x1e4>
   10958:	sub	r5, r8, #2
   1095c:	add	r6, r7, #8
   10960:	cmp	r5, #1
   10964:	ble	10cd8 <abort@plt+0x408>
   10968:	add	r1, sp, #16
   1096c:	mov	r2, #10
   10970:	ldr	r0, [r6]
   10974:	bl	107bc <strtol@plt>
   10978:	ldr	r3, [sp, #16]
   1097c:	ldrsb	r9, [r3]
   10980:	cmp	r9, #0
   10984:	str	r0, [sp, #8]
   10988:	bne	10c88 <abort@plt+0x3b8>
   1098c:	ldr	r8, [pc, #1232]	; 10e64 <abort@plt+0x594>
   10990:	ldr	sl, [pc, #1232]	; 10e68 <abort@plt+0x598>
   10994:	ldr	fp, [pc, #1232]	; 10e6c <abort@plt+0x59c>
   10998:	sub	r5, r5, #1
   1099c:	mov	r7, r9
   109a0:	ldr	r4, [r6, #4]!
   109a4:	mov	r1, r8
   109a8:	mov	r0, r4
   109ac:	bl	107b0 <strcmp@plt>
   109b0:	cmp	r0, #0
   109b4:	beq	10a78 <abort@plt+0x1a8>
   109b8:	mov	r1, sl
   109bc:	mov	r0, r4
   109c0:	bl	107b0 <strcmp@plt>
   109c4:	cmp	r0, #0
   109c8:	beq	10a78 <abort@plt+0x1a8>
   109cc:	mov	r1, fp
   109d0:	mov	r0, r4
   109d4:	bl	107b0 <strcmp@plt>
   109d8:	cmp	r0, #0
   109dc:	beq	10aa4 <abort@plt+0x1d4>
   109e0:	ldr	r1, [pc, #1160]	; 10e70 <abort@plt+0x5a0>
   109e4:	mov	r0, r4
   109e8:	bl	107b0 <strcmp@plt>
   109ec:	cmp	r0, #0
   109f0:	beq	10aa4 <abort@plt+0x1d4>
   109f4:	ldr	r1, [pc, #1144]	; 10e74 <abort@plt+0x5a4>
   109f8:	mov	r0, r4
   109fc:	bl	107b0 <strcmp@plt>
   10a00:	cmp	r0, #0
   10a04:	beq	10aac <abort@plt+0x1dc>
   10a08:	ldr	r1, [pc, #1128]	; 10e78 <abort@plt+0x5a8>
   10a0c:	mov	r0, r4
   10a10:	bl	107b0 <strcmp@plt>
   10a14:	cmp	r0, #0
   10a18:	beq	10aac <abort@plt+0x1dc>
   10a1c:	cmp	r7, #2
   10a20:	mov	r0, r4
   10a24:	beq	10b60 <abort@plt+0x290>
   10a28:	mov	r2, #10
   10a2c:	add	r1, sp, #16
   10a30:	bl	107bc <strtol@plt>
   10a34:	subs	r4, r0, #0
   10a38:	blt	10c18 <abort@plt+0x348>
   10a3c:	ldr	r2, [sp, #16]
   10a40:	ldrsb	r2, [r2]
   10a44:	cmp	r2, #0
   10a48:	bne	10c18 <abort@plt+0x348>
   10a4c:	add	r2, sp, #20
   10a50:	mov	r1, r4
   10a54:	mov	r0, r7
   10a58:	bl	10ff4 <abort@plt+0x724>
   10a5c:	subs	r3, r0, #0
   10a60:	beq	10ba8 <abort@plt+0x2d8>
   10a64:	mov	r3, #1
   10a68:	str	r3, [sp, #12]
   10a6c:	ldr	r3, [sp, #12]
   10a70:	orr	r9, r9, r3
   10a74:	b	10a7c <abort@plt+0x1ac>
   10a78:	mov	r7, #1
   10a7c:	subs	r5, r5, #1
   10a80:	bne	109a0 <abort@plt+0xd0>
   10a84:	ldr	r3, [pc, #960]	; 10e4c <abort@plt+0x57c>
   10a88:	ldr	r2, [sp, #28]
   10a8c:	mov	r0, r9
   10a90:	ldr	r3, [r3]
   10a94:	cmp	r2, r3
   10a98:	bne	10c84 <abort@plt+0x3b4>
   10a9c:	add	sp, sp, #36	; 0x24
   10aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10aa4:	mov	r7, #2
   10aa8:	b	10a7c <abort@plt+0x1ac>
   10aac:	mov	r7, r0
   10ab0:	b	10a7c <abort@plt+0x1ac>
   10ab4:	mov	r0, r4
   10ab8:	ldr	r1, [pc, #956]	; 10e7c <abort@plt+0x5ac>
   10abc:	bl	107b0 <strcmp@plt>
   10ac0:	cmp	r0, #0
   10ac4:	bne	10960 <abort@plt+0x90>
   10ac8:	b	10958 <abort@plt+0x88>
   10acc:	ldr	r1, [pc, #940]	; 10e80 <abort@plt+0x5b0>
   10ad0:	mov	r0, r4
   10ad4:	bl	107b0 <strcmp@plt>
   10ad8:	cmp	r0, #0
   10adc:	beq	10cf0 <abort@plt+0x420>
   10ae0:	ldr	r1, [pc, #924]	; 10e84 <abort@plt+0x5b4>
   10ae4:	mov	r0, r4
   10ae8:	bl	107b0 <strcmp@plt>
   10aec:	cmp	r0, #0
   10af0:	beq	10cf0 <abort@plt+0x420>
   10af4:	ldr	r1, [pc, #908]	; 10e88 <abort@plt+0x5b8>
   10af8:	mov	r0, r4
   10afc:	bl	107b0 <strcmp@plt>
   10b00:	cmp	r0, #0
   10b04:	beq	10b30 <abort@plt+0x260>
   10b08:	ldr	r1, [pc, #892]	; 10e8c <abort@plt+0x5bc>
   10b0c:	mov	r0, r4
   10b10:	bl	107b0 <strcmp@plt>
   10b14:	cmp	r0, #0
   10b18:	beq	10b30 <abort@plt+0x260>
   10b1c:	ldr	r1, [pc, #876]	; 10e90 <abort@plt+0x5c0>
   10b20:	mov	r0, r4
   10b24:	bl	107b0 <strcmp@plt>
   10b28:	cmp	r0, #0
   10b2c:	bne	10944 <abort@plt+0x74>
   10b30:	mov	r2, #5
   10b34:	ldr	r1, [pc, #856]	; 10e94 <abort@plt+0x5c4>
   10b38:	mov	r0, #0
   10b3c:	bl	107e0 <dcgettext@plt>
   10b40:	ldr	r2, [pc, #848]	; 10e98 <abort@plt+0x5c8>
   10b44:	ldr	r3, [pc, #848]	; 10e9c <abort@plt+0x5cc>
   10b48:	mov	r9, #0
   10b4c:	ldr	r2, [r2]
   10b50:	mov	r1, r0
   10b54:	mov	r0, #1
   10b58:	bl	10870 <__printf_chk@plt>
   10b5c:	b	10a84 <abort@plt+0x1b4>
   10b60:	bl	107a4 <getpwnam@plt>
   10b64:	cmp	r0, #0
   10b68:	ldrne	r4, [r0, #8]
   10b6c:	beq	10c6c <abort@plt+0x39c>
   10b70:	cmp	r4, #0
   10b74:	blt	10b88 <abort@plt+0x2b8>
   10b78:	ldr	r2, [sp, #16]
   10b7c:	ldrsb	r2, [r2]
   10b80:	cmp	r2, #0
   10b84:	beq	10a4c <abort@plt+0x17c>
   10b88:	mov	r2, #5
   10b8c:	ldr	r1, [pc, #780]	; 10ea0 <abort@plt+0x5d0>
   10b90:	mov	r0, #0
   10b94:	bl	107e0 <dcgettext@plt>
   10b98:	ldr	r1, [r6]
   10b9c:	bl	1084c <warnx@plt>
   10ba0:	mov	r9, #1
   10ba4:	b	10a7c <abort@plt+0x1ac>
   10ba8:	ldr	r2, [sp, #8]
   10bac:	mov	r1, r4
   10bb0:	mov	r0, r7
   10bb4:	str	r3, [sp, #12]
   10bb8:	bl	1081c <setpriority@plt>
   10bbc:	ldr	r3, [sp, #12]
   10bc0:	cmp	r0, #0
   10bc4:	blt	10c40 <abort@plt+0x370>
   10bc8:	add	r2, sp, #24
   10bcc:	mov	r1, r4
   10bd0:	mov	r0, r7
   10bd4:	bl	10ff4 <abort@plt+0x724>
   10bd8:	subs	r3, r0, #0
   10bdc:	str	r3, [sp, #12]
   10be0:	bne	10a64 <abort@plt+0x194>
   10be4:	mov	r2, #5
   10be8:	ldr	r1, [pc, #692]	; 10ea4 <abort@plt+0x5d4>
   10bec:	bl	107e0 <dcgettext@plt>
   10bf0:	ldr	r1, [sp, #20]
   10bf4:	ldr	lr, [pc, #684]	; 10ea8 <abort@plt+0x5d8>
   10bf8:	ldr	ip, [sp, #24]
   10bfc:	mov	r2, r4
   10c00:	ldr	r3, [lr, r7, lsl #2]
   10c04:	stm	sp, {r1, ip}
   10c08:	mov	r1, r0
   10c0c:	mov	r0, #1
   10c10:	bl	10870 <__printf_chk@plt>
   10c14:	b	10a6c <abort@plt+0x19c>
   10c18:	mov	r2, #5
   10c1c:	ldr	r1, [pc, #648]	; 10eac <abort@plt+0x5dc>
   10c20:	mov	r0, #0
   10c24:	bl	107e0 <dcgettext@plt>
   10c28:	ldr	r3, [pc, #632]	; 10ea8 <abort@plt+0x5d8>
   10c2c:	ldr	r2, [r6]
   10c30:	mov	r9, #1
   10c34:	ldr	r1, [r3, r7, lsl #2]
   10c38:	bl	1084c <warnx@plt>
   10c3c:	b	10a7c <abort@plt+0x1ac>
   10c40:	mov	r0, r3
   10c44:	mov	r2, #5
   10c48:	ldr	r1, [pc, #608]	; 10eb0 <abort@plt+0x5e0>
   10c4c:	bl	107e0 <dcgettext@plt>
   10c50:	ldr	r2, [pc, #592]	; 10ea8 <abort@plt+0x5d8>
   10c54:	mov	r3, #1
   10c58:	mov	r1, r4
   10c5c:	ldr	r2, [r2, r7, lsl #2]
   10c60:	str	r3, [sp, #12]
   10c64:	bl	108a0 <warn@plt>
   10c68:	b	10a6c <abort@plt+0x19c>
   10c6c:	mov	r2, #10
   10c70:	add	r1, sp, #16
   10c74:	ldr	r0, [r6]
   10c78:	bl	107bc <strtol@plt>
   10c7c:	mov	r4, r0
   10c80:	b	10b70 <abort@plt+0x2a0>
   10c84:	bl	107ec <__stack_chk_fail@plt>
   10c88:	ldr	r1, [pc, #548]	; 10eb4 <abort@plt+0x5e4>
   10c8c:	mov	r2, #5
   10c90:	mov	r0, #0
   10c94:	bl	107e0 <dcgettext@plt>
   10c98:	ldr	r1, [r6]
   10c9c:	bl	1084c <warnx@plt>
   10ca0:	ldr	r3, [pc, #528]	; 10eb8 <abort@plt+0x5e8>
   10ca4:	mov	r2, #5
   10ca8:	ldr	r1, [pc, #524]	; 10ebc <abort@plt+0x5ec>
   10cac:	mov	r0, #0
   10cb0:	ldr	r4, [r3]
   10cb4:	bl	107e0 <dcgettext@plt>
   10cb8:	ldr	r3, [pc, #472]	; 10e98 <abort@plt+0x5c8>
   10cbc:	mov	r1, #1
   10cc0:	ldr	r3, [r3]
   10cc4:	mov	r2, r0
   10cc8:	mov	r0, r4
   10ccc:	bl	1087c <__fprintf_chk@plt>
   10cd0:	mov	r0, #1
   10cd4:	bl	10840 <exit@plt>
   10cd8:	mov	r2, #5
   10cdc:	ldr	r1, [pc, #476]	; 10ec0 <abort@plt+0x5f0>
   10ce0:	mov	r0, #0
   10ce4:	bl	107e0 <dcgettext@plt>
   10ce8:	bl	1084c <warnx@plt>
   10cec:	b	10ca0 <abort@plt+0x3d0>
   10cf0:	ldr	r3, [pc, #460]	; 10ec4 <abort@plt+0x5f4>
   10cf4:	mov	r2, #5
   10cf8:	ldr	r1, [pc, #456]	; 10ec8 <abort@plt+0x5f8>
   10cfc:	ldr	r4, [r3]
   10d00:	mov	r0, #0
   10d04:	bl	107e0 <dcgettext@plt>
   10d08:	mov	r1, r4
   10d0c:	bl	108c4 <fputs@plt>
   10d10:	mov	r2, #5
   10d14:	ldr	r1, [pc, #432]	; 10ecc <abort@plt+0x5fc>
   10d18:	mov	r0, #0
   10d1c:	bl	107e0 <dcgettext@plt>
   10d20:	ldr	r3, [pc, #368]	; 10e98 <abort@plt+0x5c8>
   10d24:	mov	r1, #1
   10d28:	ldr	r3, [r3]
   10d2c:	mov	r2, r0
   10d30:	mov	r0, r4
   10d34:	bl	1087c <__fprintf_chk@plt>
   10d38:	mov	r1, r4
   10d3c:	mov	r0, #10
   10d40:	bl	108ac <fputc@plt>
   10d44:	mov	r2, #5
   10d48:	ldr	r1, [pc, #384]	; 10ed0 <abort@plt+0x600>
   10d4c:	mov	r0, #0
   10d50:	bl	107e0 <dcgettext@plt>
   10d54:	mov	r1, r4
   10d58:	bl	108c4 <fputs@plt>
   10d5c:	mov	r2, #5
   10d60:	ldr	r1, [pc, #364]	; 10ed4 <abort@plt+0x604>
   10d64:	mov	r0, #0
   10d68:	bl	107e0 <dcgettext@plt>
   10d6c:	mov	r1, r4
   10d70:	bl	108c4 <fputs@plt>
   10d74:	mov	r2, #5
   10d78:	ldr	r1, [pc, #344]	; 10ed8 <abort@plt+0x608>
   10d7c:	mov	r0, #0
   10d80:	bl	107e0 <dcgettext@plt>
   10d84:	mov	r1, r4
   10d88:	bl	108c4 <fputs@plt>
   10d8c:	mov	r2, #5
   10d90:	ldr	r1, [pc, #324]	; 10edc <abort@plt+0x60c>
   10d94:	mov	r0, #0
   10d98:	bl	107e0 <dcgettext@plt>
   10d9c:	mov	r1, r4
   10da0:	bl	108c4 <fputs@plt>
   10da4:	mov	r2, #5
   10da8:	ldr	r1, [pc, #304]	; 10ee0 <abort@plt+0x610>
   10dac:	mov	r0, #0
   10db0:	bl	107e0 <dcgettext@plt>
   10db4:	mov	r1, r4
   10db8:	bl	108c4 <fputs@plt>
   10dbc:	mov	r2, #5
   10dc0:	ldr	r1, [pc, #284]	; 10ee4 <abort@plt+0x614>
   10dc4:	mov	r0, #0
   10dc8:	bl	107e0 <dcgettext@plt>
   10dcc:	mov	r1, r4
   10dd0:	bl	108c4 <fputs@plt>
   10dd4:	mov	r1, r4
   10dd8:	mov	r0, #10
   10ddc:	bl	108ac <fputc@plt>
   10de0:	mov	r2, #5
   10de4:	ldr	r1, [pc, #252]	; 10ee8 <abort@plt+0x618>
   10de8:	mov	r0, #0
   10dec:	bl	107e0 <dcgettext@plt>
   10df0:	mov	r2, #5
   10df4:	ldr	r1, [pc, #240]	; 10eec <abort@plt+0x61c>
   10df8:	mov	r4, r0
   10dfc:	mov	r0, #0
   10e00:	bl	107e0 <dcgettext@plt>
   10e04:	ldr	r2, [pc, #228]	; 10ef0 <abort@plt+0x620>
   10e08:	mov	r3, r4
   10e0c:	str	r2, [sp]
   10e10:	ldr	r1, [pc, #220]	; 10ef4 <abort@plt+0x624>
   10e14:	ldr	r2, [pc, #220]	; 10ef8 <abort@plt+0x628>
   10e18:	str	r0, [sp, #4]
   10e1c:	mov	r0, #1
   10e20:	bl	10870 <__printf_chk@plt>
   10e24:	mov	r2, #5
   10e28:	ldr	r1, [pc, #204]	; 10efc <abort@plt+0x62c>
   10e2c:	mov	r0, #0
   10e30:	bl	107e0 <dcgettext@plt>
   10e34:	ldr	r2, [pc, #196]	; 10f00 <abort@plt+0x630>
   10e38:	mov	r1, r0
   10e3c:	mov	r0, #1
   10e40:	bl	10870 <__printf_chk@plt>
   10e44:	mov	r0, #0
   10e48:	bl	10840 <exit@plt>
   10e4c:	andeq	r1, r2, r0, lsl #29
   10e50:	andeq	r1, r1, r8, lsr #6
   10e54:	andeq	r1, r1, r0, ror r2
   10e58:	andeq	r1, r1, r4, lsl #5
   10e5c:	andeq	r1, r1, r4, ror r0
   10e60:	andeq	r1, r1, r8, lsl r5
   10e64:	andeq	r1, r1, r0, lsl #11
   10e68:	andeq	r1, r1, r4, lsl #11
   10e6c:	andeq	r1, r1, ip, lsl #11
   10e70:	muleq	r1, r0, r5
   10e74:	muleq	r1, r8, r5
   10e78:	muleq	r1, ip, r5
   10e7c:	andeq	r1, r1, ip, lsl r5
   10e80:	muleq	r1, r0, r2
   10e84:	muleq	r1, r4, r2
   10e88:	andeq	r1, r1, r4, ror #9
   10e8c:	andeq	r1, r1, r8, ror #9
   10e90:	andeq	r1, r1, ip, ror #9
   10e94:	strdeq	r1, [r1], -r8
   10e98:	andeq	r2, r2, r8
   10e9c:	andeq	r1, r1, r4, lsl #10
   10ea0:	andeq	r1, r1, r4, lsr #11
   10ea4:	andeq	r1, r1, ip, ror #11
   10ea8:	andeq	r1, r1, r4, lsr r2
   10eac:			; <UNDEFINED> instruction: 0x000115b4
   10eb0:	andeq	r1, r1, r8, asr #11
   10eb4:	andeq	r1, r1, r8, ror #10
   10eb8:	andeq	r2, r2, r0, lsl r0
   10ebc:	andeq	r1, r1, r0, asr #10
   10ec0:	andeq	r1, r1, r8, lsr #10
   10ec4:	andeq	r2, r2, r4, lsl r0
   10ec8:	muleq	r1, ip, r2
   10ecc:	andeq	r1, r1, r8, lsr #5
   10ed0:	andeq	r1, r1, ip, lsr #6
   10ed4:	andeq	r1, r1, r8, asr r3
   10ed8:	andeq	r1, r1, r4, ror #6
   10edc:	andeq	r1, r1, r0, lsr #7
   10ee0:	andeq	r1, r1, r4, ror #7
   10ee4:	andeq	r1, r1, r4, lsr #8
   10ee8:	andeq	r1, r1, r8, ror #8
   10eec:	andeq	r1, r1, ip, ror r4
   10ef0:	andeq	r1, r1, ip, lsr #9
   10ef4:	muleq	r1, r8, r4
   10ef8:	andeq	r1, r1, ip, lsl #9
   10efc:			; <UNDEFINED> instruction: 0x000114bc
   10f00:	ldrdeq	r1, [r1], -r8
   10f04:	mov	fp, #0
   10f08:	mov	lr, #0
   10f0c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f10:	mov	r2, sp
   10f14:	push	{r2}		; (str r2, [sp, #-4]!)
   10f18:	push	{r0}		; (str r0, [sp, #-4]!)
   10f1c:	ldr	ip, [pc, #16]	; 10f34 <abort@plt+0x664>
   10f20:	push	{ip}		; (str ip, [sp, #-4]!)
   10f24:	ldr	r0, [pc, #12]	; 10f38 <abort@plt+0x668>
   10f28:	ldr	r3, [pc, #12]	; 10f3c <abort@plt+0x66c>
   10f2c:	bl	10828 <__libc_start_main@plt>
   10f30:	bl	108d0 <abort@plt>
   10f34:	andeq	r1, r1, ip, lsl #4
   10f38:	ldrdeq	r0, [r1], -ip
   10f3c:	andeq	r1, r1, ip, lsr #3
   10f40:	ldr	r3, [pc, #20]	; 10f5c <abort@plt+0x68c>
   10f44:	ldr	r2, [pc, #20]	; 10f60 <abort@plt+0x690>
   10f48:	add	r3, pc, r3
   10f4c:	ldr	r2, [r3, r2]
   10f50:	cmp	r2, #0
   10f54:	bxeq	lr
   10f58:	b	10834 <__gmon_start__@plt>
   10f5c:	andeq	r1, r1, r4, lsr r0
   10f60:	andeq	r0, r0, r4, ror r0
   10f64:	ldr	r0, [pc, #24]	; 10f84 <abort@plt+0x6b4>
   10f68:	ldr	r3, [pc, #24]	; 10f88 <abort@plt+0x6b8>
   10f6c:	cmp	r3, r0
   10f70:	bxeq	lr
   10f74:	ldr	r3, [pc, #16]	; 10f8c <abort@plt+0x6bc>
   10f78:	cmp	r3, #0
   10f7c:	bxeq	lr
   10f80:	bx	r3
   10f84:	andeq	r2, r2, r8
   10f88:	andeq	r2, r2, r8
   10f8c:	andeq	r0, r0, r0
   10f90:	ldr	r0, [pc, #36]	; 10fbc <abort@plt+0x6ec>
   10f94:	ldr	r1, [pc, #36]	; 10fc0 <abort@plt+0x6f0>
   10f98:	sub	r1, r1, r0
   10f9c:	asr	r1, r1, #2
   10fa0:	add	r1, r1, r1, lsr #31
   10fa4:	asrs	r1, r1, #1
   10fa8:	bxeq	lr
   10fac:	ldr	r3, [pc, #16]	; 10fc4 <abort@plt+0x6f4>
   10fb0:	cmp	r3, #0
   10fb4:	bxeq	lr
   10fb8:	bx	r3
   10fbc:	andeq	r2, r2, r8
   10fc0:	andeq	r2, r2, r8
   10fc4:	andeq	r0, r0, r0
   10fc8:	push	{r4, lr}
   10fcc:	ldr	r4, [pc, #24]	; 10fec <abort@plt+0x71c>
   10fd0:	ldrb	r3, [r4]
   10fd4:	cmp	r3, #0
   10fd8:	popne	{r4, pc}
   10fdc:	bl	10f64 <abort@plt+0x694>
   10fe0:	mov	r3, #1
   10fe4:	strb	r3, [r4]
   10fe8:	pop	{r4, pc}
   10fec:	andeq	r2, r2, r8, lsl r0
   10ff0:	b	10f90 <abort@plt+0x6c0>
   10ff4:	push	{r4, r5, r6, r7, r8, lr}
   10ff8:	mov	r8, r2
   10ffc:	mov	r6, r0
   11000:	mov	r7, r1
   11004:	bl	10858 <__errno_location@plt>
   11008:	mov	r4, #0
   1100c:	mov	r1, r7
   11010:	str	r4, [r0]
   11014:	mov	r5, r0
   11018:	mov	r0, r6
   1101c:	bl	107f8 <getpriority@plt>
   11020:	cmn	r0, #1
   11024:	str	r0, [r8]
   11028:	beq	11034 <abort@plt+0x764>
   1102c:	mov	r0, r4
   11030:	pop	{r4, r5, r6, r7, r8, pc}
   11034:	ldr	r0, [r5]
   11038:	cmp	r0, r4
   1103c:	popeq	{r4, r5, r6, r7, r8, pc}
   11040:	mov	r0, r4
   11044:	mov	r2, #5
   11048:	ldr	r1, [pc, #28]	; 1106c <abort@plt+0x79c>
   1104c:	bl	107e0 <dcgettext@plt>
   11050:	ldr	r3, [pc, #24]	; 11070 <abort@plt+0x7a0>
   11054:	mov	r1, r7
   11058:	ldr	r2, [r3, r6, lsl #2]
   1105c:	bl	108a0 <warn@plt>
   11060:	ldr	r0, [r5]
   11064:	rsb	r0, r0, #0
   11068:	pop	{r4, r5, r6, r7, r8, pc}
   1106c:	andeq	r1, r1, r0, asr #4
   11070:	andeq	r1, r1, r4, lsr r2
   11074:	ldr	r3, [pc, #292]	; 111a0 <abort@plt+0x8d0>
   11078:	push	{r4, r5, r6, lr}
   1107c:	ldr	r4, [r3]
   11080:	mov	r0, r4
   11084:	bl	10810 <__fpending@plt>
   11088:	mov	r6, r0
   1108c:	mov	r0, r4
   11090:	bl	107c8 <ferror@plt>
   11094:	mov	r5, r0
   11098:	mov	r0, r4
   1109c:	bl	10888 <fclose@plt>
   110a0:	cmp	r5, #0
   110a4:	mov	r4, r0
   110a8:	bne	11150 <abort@plt+0x880>
   110ac:	cmp	r0, #0
   110b0:	beq	110cc <abort@plt+0x7fc>
   110b4:	bl	10858 <__errno_location@plt>
   110b8:	cmp	r6, #0
   110bc:	ldr	r3, [r0]
   110c0:	bne	11128 <abort@plt+0x858>
   110c4:	cmp	r3, #9
   110c8:	bne	11128 <abort@plt+0x858>
   110cc:	ldr	r3, [pc, #208]	; 111a4 <abort@plt+0x8d4>
   110d0:	ldr	r4, [r3]
   110d4:	mov	r0, r4
   110d8:	bl	10810 <__fpending@plt>
   110dc:	mov	r6, r0
   110e0:	mov	r0, r4
   110e4:	bl	107c8 <ferror@plt>
   110e8:	mov	r5, r0
   110ec:	mov	r0, r4
   110f0:	bl	10888 <fclose@plt>
   110f4:	cmp	r5, #0
   110f8:	mov	r4, r0
   110fc:	bne	11184 <abort@plt+0x8b4>
   11100:	cmp	r0, #0
   11104:	popeq	{r4, r5, r6, pc}
   11108:	cmp	r6, #0
   1110c:	bne	11120 <abort@plt+0x850>
   11110:	bl	10858 <__errno_location@plt>
   11114:	ldr	r3, [r0]
   11118:	cmp	r3, #9
   1111c:	popeq	{r4, r5, r6, pc}
   11120:	mov	r0, #1
   11124:	bl	107d4 <_exit@plt>
   11128:	cmp	r3, #32
   1112c:	beq	110cc <abort@plt+0x7fc>
   11130:	cmp	r3, #0
   11134:	beq	1116c <abort@plt+0x89c>
   11138:	mov	r2, #5
   1113c:	ldr	r1, [pc, #100]	; 111a8 <abort@plt+0x8d8>
   11140:	mov	r0, #0
   11144:	bl	107e0 <dcgettext@plt>
   11148:	bl	108a0 <warn@plt>
   1114c:	b	11120 <abort@plt+0x850>
   11150:	bl	10858 <__errno_location@plt>
   11154:	cmp	r4, #0
   11158:	ldr	r3, [r0]
   1115c:	bne	11128 <abort@plt+0x858>
   11160:	cmp	r3, #32
   11164:	strne	r4, [r0]
   11168:	beq	110cc <abort@plt+0x7fc>
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #48]	; 111a8 <abort@plt+0x8d8>
   11174:	mov	r0, #0
   11178:	bl	107e0 <dcgettext@plt>
   1117c:	bl	1084c <warnx@plt>
   11180:	b	11120 <abort@plt+0x850>
   11184:	cmp	r0, #0
   11188:	bne	11120 <abort@plt+0x850>
   1118c:	bl	10858 <__errno_location@plt>
   11190:	ldr	r3, [r0]
   11194:	cmp	r3, #32
   11198:	strne	r4, [r0]
   1119c:	b	11120 <abort@plt+0x850>
   111a0:	andeq	r2, r2, r4, lsl r0
   111a4:	andeq	r2, r2, r0, lsl r0
   111a8:	andeq	r1, r1, r4, ror #4
   111ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111b0:	mov	r7, r0
   111b4:	ldr	r6, [pc, #72]	; 11204 <abort@plt+0x934>
   111b8:	ldr	r5, [pc, #72]	; 11208 <abort@plt+0x938>
   111bc:	add	r6, pc, r6
   111c0:	add	r5, pc, r5
   111c4:	sub	r6, r6, r5
   111c8:	mov	r8, r1
   111cc:	mov	r9, r2
   111d0:	bl	10784 <getpwnam@plt-0x20>
   111d4:	asrs	r6, r6, #2
   111d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111dc:	mov	r4, #0
   111e0:	add	r4, r4, #1
   111e4:	ldr	r3, [r5], #4
   111e8:	mov	r2, r9
   111ec:	mov	r1, r8
   111f0:	mov	r0, r7
   111f4:	blx	r3
   111f8:	cmp	r6, r4
   111fc:	bne	111e0 <abort@plt+0x910>
   11200:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11204:			; <UNDEFINED> instruction: 0x00010cb8
   11208:			; <UNDEFINED> instruction: 0x00010cb0
   1120c:	bx	lr
   11210:	ldr	r3, [pc, #12]	; 11224 <abort@plt+0x954>
   11214:	mov	r1, #0
   11218:	add	r3, pc, r3
   1121c:	ldr	r2, [r3]
   11220:	b	10864 <__cxa_atexit@plt>
   11224:	andeq	r0, r1, r4, ror #27

Disassembly of section .fini:

00011228 <.fini>:
   11228:	push	{r3, lr}
   1122c:	pop	{r3, pc}
