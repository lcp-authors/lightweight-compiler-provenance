
raspbian-preinstalled/scriptreplay:     file format elf32-littlearm


Disassembly of section .init:

00010c8c <.init>:
   10c8c:	push	{r3, lr}
   10c90:	bl	11574 <strspn@plt+0x658>
   10c94:	pop	{r3, pc}

Disassembly of section .plt:

00010c98 <raise@plt-0x14>:
   10c98:	push	{lr}		; (str lr, [sp, #-4]!)
   10c9c:	ldr	lr, [pc, #4]	; 10ca8 <raise@plt-0x4>
   10ca0:	add	lr, pc, lr
   10ca4:	ldr	pc, [lr, #8]!
   10ca8:	andeq	r4, r1, ip, ror #4

00010cac <raise@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #620]!	; 0x26c

00010cb8 <strcmp@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #612]!	; 0x264

00010cc4 <strtol@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #604]!	; 0x25c

00010cd0 <strcspn@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #596]!	; 0x254

00010cdc <free@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #588]!	; 0x24c

00010ce8 <nanosleep@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #580]!	; 0x244

00010cf4 <ferror@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #572]!	; 0x23c

00010d00 <strndup@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #564]!	; 0x234

00010d0c <_exit@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #556]!	; 0x22c

00010d18 <memcpy@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #548]!	; 0x224

00010d24 <__strtoull_internal@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #540]!	; 0x21c

00010d30 <dcgettext@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #532]!	; 0x214

00010d3c <strdup@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #524]!	; 0x20c

00010d48 <__stack_chk_fail@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #516]!	; 0x204

00010d54 <textdomain@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #508]!	; 0x1fc

00010d60 <err@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #500]!	; 0x1f4

00010d6c <__fpending@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #492]!	; 0x1ec

00010d78 <malloc@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #484]!	; 0x1e4

00010d84 <__libc_start_main@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #476]!	; 0x1dc

00010d90 <__gmon_start__@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #468]!	; 0x1d4

00010d9c <getopt_long@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #460]!	; 0x1cc

00010da8 <__ctype_b_loc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #452]!	; 0x1c4

00010db4 <exit@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #444]!	; 0x1bc

00010dc0 <feof@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #436]!	; 0x1b4

00010dcc <strtoul@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #428]!	; 0x1ac

00010dd8 <strlen@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #420]!	; 0x1a4

00010de4 <strchr@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #412]!	; 0x19c

00010df0 <warnx@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #404]!	; 0x194

00010dfc <__errno_location@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #396]!	; 0x18c

00010e08 <__cxa_atexit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #388]!	; 0x184

00010e14 <__vasprintf_chk@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #380]!	; 0x17c

00010e20 <putchar@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #372]!	; 0x174

00010e2c <fscanf@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #364]!	; 0x16c

00010e38 <fgetc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #356]!	; 0x164

00010e44 <__printf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #348]!	; 0x15c

00010e50 <strtod@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #340]!	; 0x154

00010e5c <write@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #332]!	; 0x14c

00010e68 <__fprintf_chk@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #324]!	; 0x144

00010e74 <fclose@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #316]!	; 0x13c

00010e80 <__fread_chk@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #308]!	; 0x134

00010e8c <setlocale@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #300]!	; 0x12c

00010e98 <errx@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #292]!	; 0x124

00010ea4 <warn@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #284]!	; 0x11c

00010eb0 <fputc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #276]!	; 0x114

00010ebc <localeconv@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #268]!	; 0x10c

00010ec8 <__strtoll_internal@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #260]!	; 0x104

00010ed4 <fopen64@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #252]!	; 0xfc

00010ee0 <bindtextdomain@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #244]!	; 0xf4

00010eec <fputs@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #236]!	; 0xec

00010ef8 <strncmp@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #228]!	; 0xe4

00010f04 <abort@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #220]!	; 0xdc

00010f10 <__snprintf_chk@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #212]!	; 0xd4

00010f1c <strspn@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #204]!	; 0xcc

Disassembly of section .text:

00010f28 <.text>:
   10f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f2c:	vpush	{d8-d11}
   10f30:	ldr	r3, [pc, #992]	; 11318 <strspn@plt+0x3fc>
   10f34:	mov	r6, r0
   10f38:	mov	r7, r1
   10f3c:	sub	sp, sp, #60	; 0x3c
   10f40:	ldr	r3, [r3]
   10f44:	ldr	r1, [pc, #976]	; 1131c <strspn@plt+0x400>
   10f48:	mov	r0, #6
   10f4c:	str	r3, [sp, #52]	; 0x34
   10f50:	vldr	d9, [pc, #928]	; 112f8 <strspn@plt+0x3dc>
   10f54:	bl	10e8c <setlocale@plt>
   10f58:	vldr	d8, [pc, #928]	; 11300 <strspn@plt+0x3e4>
   10f5c:	ldr	r1, [pc, #956]	; 11320 <strspn@plt+0x404>
   10f60:	mov	r0, #1
   10f64:	bl	10e8c <setlocale@plt>
   10f68:	mov	r5, #0
   10f6c:	ldr	r1, [pc, #944]	; 11324 <strspn@plt+0x408>
   10f70:	ldr	r0, [pc, #944]	; 11328 <strspn@plt+0x40c>
   10f74:	ldr	r9, [pc, #944]	; 1132c <strspn@plt+0x410>
   10f78:	ldr	r8, [pc, #944]	; 11330 <strspn@plt+0x414>
   10f7c:	ldr	sl, [pc, #944]	; 11334 <strspn@plt+0x418>
   10f80:	bl	10ee0 <bindtextdomain@plt>
   10f84:	mov	fp, r5
   10f88:	ldr	r0, [pc, #920]	; 11328 <strspn@plt+0x40c>
   10f8c:	bl	10d54 <textdomain@plt>
   10f90:	ldr	r0, [pc, #928]	; 11338 <strspn@plt+0x41c>
   10f94:	bl	13a60 <strspn@plt+0x2b44>
   10f98:	str	r5, [sp, #12]
   10f9c:	str	r5, [sp, #8]
   10fa0:	mov	r4, #0
   10fa4:	str	r4, [sp]
   10fa8:	mov	r3, r9
   10fac:	mov	r2, r8
   10fb0:	mov	r1, r7
   10fb4:	mov	r0, r6
   10fb8:	bl	10d9c <getopt_long@plt>
   10fbc:	cmn	r0, #1
   10fc0:	beq	11200 <strspn@plt+0x2e4>
   10fc4:	sub	r0, r0, #86	; 0x56
   10fc8:	cmp	r0, #30
   10fcc:	ldrls	pc, [pc, r0, lsl #2]
   10fd0:	b	111c8 <strspn@plt+0x2ac>
   10fd4:	muleq	r1, r8, r1
   10fd8:	andeq	r1, r1, r8, asr #3
   10fdc:	andeq	r1, r1, r8, asr #3
   10fe0:	andeq	r1, r1, r8, asr #3
   10fe4:	andeq	r1, r1, r8, asr #3
   10fe8:	andeq	r1, r1, r8, asr #3
   10fec:	andeq	r1, r1, r8, asr #3
   10ff0:	andeq	r1, r1, r8, asr #3
   10ff4:	andeq	r1, r1, r8, asr #3
   10ff8:	andeq	r1, r1, r8, asr #3
   10ffc:	andeq	r1, r1, r8, asr #3
   11000:	andeq	r1, r1, r8, asr #3
   11004:	andeq	r1, r1, r8, asr #3
   11008:	andeq	r1, r1, r8, asr #3
   1100c:	andeq	r1, r1, r0, lsl #3
   11010:	andeq	r1, r1, r8, asr #3
   11014:	andeq	r1, r1, r8, asr #3
   11018:	andeq	r1, r1, r8, asr #3
   1101c:	andeq	r1, r1, r8, ror r0
   11020:	andeq	r1, r1, r8, asr #3
   11024:	andeq	r1, r1, r8, asr #3
   11028:	andeq	r1, r1, r8, asr #3
   1102c:	andeq	r1, r1, r8, asr #3
   11030:	andeq	r1, r1, r4, rrx
   11034:	andeq	r1, r1, r8, asr #3
   11038:	andeq	r1, r1, r8, asr #3
   1103c:	andeq	r1, r1, r8, asr #3
   11040:	andeq	r1, r1, r8, asr #3
   11044:	andeq	r1, r1, r8, asr #3
   11048:	andeq	r1, r1, ip, asr r0
   1104c:	andeq	r1, r1, r0, asr r0
   11050:	ldr	r3, [sl]
   11054:	str	r3, [sp, #8]
   11058:	b	10fa0 <strspn@plt+0x84>
   1105c:	ldr	fp, [sl]
   11060:	b	10fa0 <strspn@plt+0x84>
   11064:	ldr	r0, [sl]
   11068:	bl	11748 <strspn@plt+0x82c>
   1106c:	mov	r5, #1
   11070:	vmov.f64	d9, d0
   11074:	b	10fa0 <strspn@plt+0x84>
   11078:	ldr	r3, [pc, #700]	; 1133c <strspn@plt+0x420>
   1107c:	mov	r2, #5
   11080:	ldr	r1, [pc, #696]	; 11340 <strspn@plt+0x424>
   11084:	ldr	r4, [r3]
   11088:	mov	r0, #0
   1108c:	bl	10d30 <dcgettext@plt>
   11090:	mov	r1, r4
   11094:	bl	10eec <fputs@plt>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #672]	; 11344 <strspn@plt+0x428>
   110a0:	mov	r0, #0
   110a4:	bl	10d30 <dcgettext@plt>
   110a8:	ldr	r3, [pc, #664]	; 11348 <strspn@plt+0x42c>
   110ac:	mov	r1, #1
   110b0:	ldr	r3, [r3]
   110b4:	mov	r2, r0
   110b8:	mov	r0, r4
   110bc:	bl	10e68 <__fprintf_chk@plt>
   110c0:	mov	r1, r4
   110c4:	mov	r0, #10
   110c8:	bl	10eb0 <fputc@plt>
   110cc:	mov	r2, #5
   110d0:	ldr	r1, [pc, #628]	; 1134c <strspn@plt+0x430>
   110d4:	mov	r0, #0
   110d8:	bl	10d30 <dcgettext@plt>
   110dc:	mov	r1, r4
   110e0:	bl	10eec <fputs@plt>
   110e4:	mov	r2, #5
   110e8:	ldr	r1, [pc, #608]	; 11350 <strspn@plt+0x434>
   110ec:	mov	r0, #0
   110f0:	bl	10d30 <dcgettext@plt>
   110f4:	mov	r1, r4
   110f8:	bl	10eec <fputs@plt>
   110fc:	mov	r2, #5
   11100:	ldr	r1, [pc, #588]	; 11354 <strspn@plt+0x438>
   11104:	mov	r0, #0
   11108:	bl	10d30 <dcgettext@plt>
   1110c:	mov	r1, r4
   11110:	bl	10eec <fputs@plt>
   11114:	mov	r2, #5
   11118:	ldr	r1, [pc, #568]	; 11358 <strspn@plt+0x43c>
   1111c:	mov	r0, #0
   11120:	bl	10d30 <dcgettext@plt>
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #556]	; 1135c <strspn@plt+0x440>
   1112c:	mov	r4, r0
   11130:	mov	r0, #0
   11134:	bl	10d30 <dcgettext@plt>
   11138:	ldr	r2, [pc, #544]	; 11360 <strspn@plt+0x444>
   1113c:	mov	r3, r4
   11140:	str	r2, [sp]
   11144:	ldr	r1, [pc, #536]	; 11364 <strspn@plt+0x448>
   11148:	ldr	r2, [pc, #536]	; 11368 <strspn@plt+0x44c>
   1114c:	str	r0, [sp, #4]
   11150:	mov	r0, #1
   11154:	bl	10e44 <__printf_chk@plt>
   11158:	mov	r2, #5
   1115c:	ldr	r1, [pc, #520]	; 1136c <strspn@plt+0x450>
   11160:	mov	r0, #0
   11164:	bl	10d30 <dcgettext@plt>
   11168:	ldr	r2, [pc, #512]	; 11370 <strspn@plt+0x454>
   1116c:	mov	r1, r0
   11170:	mov	r0, #1
   11174:	bl	10e44 <__printf_chk@plt>
   11178:	mov	r0, #0
   1117c:	bl	10db4 <exit@plt>
   11180:	ldr	r0, [sl]
   11184:	bl	11748 <strspn@plt+0x82c>
   11188:	mov	r3, #1
   1118c:	str	r3, [sp, #12]
   11190:	vmov.f64	d8, d0
   11194:	b	10fa0 <strspn@plt+0x84>
   11198:	mov	r2, #5
   1119c:	ldr	r1, [pc, #464]	; 11374 <strspn@plt+0x458>
   111a0:	mov	r0, #0
   111a4:	bl	10d30 <dcgettext@plt>
   111a8:	ldr	r2, [pc, #408]	; 11348 <strspn@plt+0x42c>
   111ac:	ldr	r3, [pc, #452]	; 11378 <strspn@plt+0x45c>
   111b0:	ldr	r2, [r2]
   111b4:	mov	r1, r0
   111b8:	mov	r0, #1
   111bc:	bl	10e44 <__printf_chk@plt>
   111c0:	mov	r0, #0
   111c4:	bl	10db4 <exit@plt>
   111c8:	ldr	r3, [pc, #428]	; 1137c <strspn@plt+0x460>
   111cc:	ldr	r1, [pc, #428]	; 11380 <strspn@plt+0x464>
   111d0:	mov	r2, #5
   111d4:	mov	r0, #0
   111d8:	ldr	r4, [r3]
   111dc:	bl	10d30 <dcgettext@plt>
   111e0:	ldr	r3, [pc, #352]	; 11348 <strspn@plt+0x42c>
   111e4:	mov	r1, #1
   111e8:	ldr	r3, [r3]
   111ec:	mov	r2, r0
   111f0:	mov	r0, r4
   111f4:	bl	10e68 <__fprintf_chk@plt>
   111f8:	mov	r0, #1
   111fc:	bl	10db4 <exit@plt>
   11200:	ldr	r3, [pc, #380]	; 11384 <strspn@plt+0x468>
   11204:	ldr	r2, [r3]
   11208:	ldr	r3, [sp, #8]
   1120c:	sub	r6, r6, r2
   11210:	cmp	r6, r4
   11214:	cmple	r3, r4
   11218:	moveq	r3, #1
   1121c:	movne	r3, #0
   11220:	cmp	r6, #3
   11224:	orrgt	r3, r3, #1
   11228:	cmp	r3, r4
   1122c:	beq	11258 <strspn@plt+0x33c>
   11230:	mov	r2, #5
   11234:	ldr	r1, [pc, #332]	; 11388 <strspn@plt+0x46c>
   11238:	mov	r0, r4
   1123c:	bl	10d30 <dcgettext@plt>
   11240:	bl	10df0 <warnx@plt>
   11244:	ldr	r3, [pc, #304]	; 1137c <strspn@plt+0x460>
   11248:	mov	r0, r4
   1124c:	mov	r2, #5
   11250:	ldr	r1, [pc, #296]	; 11380 <strspn@plt+0x464>
   11254:	b	111d8 <strspn@plt+0x2bc>
   11258:	ldr	r1, [sp, #8]
   1125c:	cmp	r1, #0
   11260:	add	r1, r7, r2, lsl #2
   11264:	ldreq	r3, [r7, r2, lsl #2]
   11268:	streq	r3, [sp, #8]
   1126c:	moveq	r3, #1
   11270:	cmp	fp, #0
   11274:	beq	114d8 <strspn@plt+0x5bc>
   11278:	ldr	r2, [sp, #12]
   1127c:	cmp	r2, #0
   11280:	bne	11290 <strspn@plt+0x374>
   11284:	cmp	r3, r6
   11288:	vldrge	d8, [pc, #112]	; 11300 <strspn@plt+0x3e4>
   1128c:	blt	114ec <strspn@plt+0x5d0>
   11290:	vcmpe.f64	d9, #0.0
   11294:	ldr	r1, [pc, #240]	; 1138c <strspn@plt+0x470>
   11298:	ldr	r0, [sp, #8]
   1129c:	vmrs	APSR_nzcv, fpscr
   112a0:	vldrmi	d9, [pc, #80]	; 112f8 <strspn@plt+0x3dc>
   112a4:	bl	10ed4 <fopen64@plt>
   112a8:	subs	r9, r0, #0
   112ac:	moveq	r2, #5
   112b0:	ldreq	r1, [pc, #232]	; 113a0 <strspn@plt+0x484>
   112b4:	beq	114c4 <strspn@plt+0x5a8>
   112b8:	ldr	r1, [pc, #204]	; 1138c <strspn@plt+0x470>
   112bc:	mov	r0, fp
   112c0:	bl	10ed4 <fopen64@plt>
   112c4:	subs	r7, r0, #0
   112c8:	beq	1151c <strspn@plt+0x600>
   112cc:	mov	r0, r7
   112d0:	bl	10e38 <fgetc@plt>
   112d4:	cmp	r0, #10
   112d8:	cmnne	r0, #1
   112dc:	bne	112cc <strspn@plt+0x3b0>
   112e0:	vldr	d10, [pc, #32]	; 11308 <strspn@plt+0x3ec>
   112e4:	vldr	d11, [pc, #36]	; 11310 <strspn@plt+0x3f4>
   112e8:	ldr	sl, [pc, #160]	; 11390 <strspn@plt+0x474>
   112ec:	mov	r8, #1
   112f0:	b	113d8 <strspn@plt+0x4bc>
   112f4:	nop			; (mov r0, r0)
	...
   11304:	svccc	0x00f00000	; IMB
   11308:	bl	721fc4 <optarg@@GLIBC_2.4+0x6fcf9c>
   1130c:	svccc	0x001a36e2
   11310:	andeq	r0, r0, r0
   11314:	bicmi	ip, sp, r5, ror #26
   11318:	andeq	r4, r2, r0, lsl lr
   1131c:	ldrdeq	r3, [r1], -r4
   11320:	andeq	r3, r1, r8, lsl #23
   11324:	andeq	r3, r1, ip, lsl #23
   11328:	andeq	r3, r1, r0, lsr #23
   1132c:	andeq	r3, r1, r4, lsl #21
   11330:	strdeq	r3, [r1], -r8
   11334:	andeq	r5, r2, r8, lsr #32
   11338:			; <UNDEFINED> instruction: 0x000117b0
   1133c:	andeq	r5, r2, r4, lsr #32
   11340:	andeq	r3, r1, ip, asr #23
   11344:	ldrdeq	r3, [r1], -r8
   11348:	andeq	r5, r2, r0, lsl r0
   1134c:	andeq	r3, r1, r4, lsl #24
   11350:	andeq	r3, r1, r0, asr #24
   11354:	andeq	r3, r1, ip, asr #24
   11358:	andeq	r3, r1, r0, asr sp
   1135c:	andeq	r3, r1, r4, ror #26
   11360:	muleq	r1, r4, sp
   11364:	andeq	r3, r1, r0, lsl #27
   11368:	andeq	r3, r1, r4, ror sp
   1136c:	andeq	r3, r1, r4, lsr #27
   11370:	andeq	r3, r1, r0, asr #27
   11374:	andeq	r3, r1, ip, lsr #23
   11378:			; <UNDEFINED> instruction: 0x00013bb8
   1137c:	andeq	r5, r2, r0, lsr #32
   11380:	ldrdeq	r3, [r1], -r0
   11384:	andeq	r5, r2, r8, lsl r0
   11388:	andeq	r3, r1, r4, lsl #28
   1138c:	andeq	r3, r1, r0, lsr #28
   11390:	andeq	r3, r1, r4, lsr lr
   11394:	andeq	r3, r1, r0, asr #28
   11398:	andeq	r3, r1, ip, ror fp
   1139c:	andeq	r3, r1, r0, ror #28
   113a0:	andeq	r3, r1, r4, lsr #28
   113a4:	vcmpe.f64	d7, d9
   113a8:	vmrs	APSR_nzcv, fpscr
   113ac:	ble	11418 <strspn@plt+0x4fc>
   113b0:	vstr	d9, [sp, #24]
   113b4:	vldr	d7, [sp, #24]
   113b8:	vcmpe.f64	d7, d10
   113bc:	vmrs	APSR_nzcv, fpscr
   113c0:	bgt	11420 <strspn@plt+0x504>
   113c4:	ldr	r2, [sp, #20]
   113c8:	mov	r1, fp
   113cc:	mov	r0, r7
   113d0:	add	r8, r8, #1
   113d4:	bl	11628 <strspn@plt+0x70c>
   113d8:	add	r3, sp, #19
   113dc:	str	r3, [sp]
   113e0:	add	r2, sp, #24
   113e4:	add	r3, sp, #20
   113e8:	mov	r1, sl
   113ec:	mov	r0, r9
   113f0:	bl	10e2c <fscanf@plt>
   113f4:	cmp	r0, #3
   113f8:	bne	11478 <strspn@plt+0x55c>
   113fc:	ldrsb	r3, [sp, #19]
   11400:	cmp	r3, #10
   11404:	bne	11478 <strspn@plt+0x55c>
   11408:	vldr	d6, [sp, #24]
   1140c:	cmp	r5, #0
   11410:	vdiv.f64	d7, d6, d8
   11414:	bne	113a4 <strspn@plt+0x488>
   11418:	vstr	d7, [sp, #24]
   1141c:	b	113b4 <strspn@plt+0x498>
   11420:	vcvt.s32.f64	s13, d7
   11424:	add	r6, sp, #44	; 0x2c
   11428:	add	r4, sp, #36	; 0x24
   1142c:	vcvt.f64.s32	d5, s13
   11430:	vstr	s13, [sp, #36]	; 0x24
   11434:	vsub.f64	d7, d7, d5
   11438:	vmul.f64	d7, d7, d11
   1143c:	vcvt.s32.f64	s14, d7
   11440:	vstr	s14, [sp, #40]	; 0x28
   11444:	b	11460 <strspn@plt+0x544>
   11448:	bl	10dfc <__errno_location@plt>
   1144c:	ldr	r3, [r0]
   11450:	cmp	r3, #4
   11454:	bne	113c4 <strspn@plt+0x4a8>
   11458:	ldm	r6, {r0, r1}
   1145c:	stm	r4, {r0, r1}
   11460:	mov	r1, r6
   11464:	mov	r0, r4
   11468:	bl	10ce8 <nanosleep@plt>
   1146c:	cmn	r0, #1
   11470:	beq	11448 <strspn@plt+0x52c>
   11474:	b	113c4 <strspn@plt+0x4a8>
   11478:	mov	r0, r9
   1147c:	bl	10dc0 <feof@plt>
   11480:	subs	r4, r0, #0
   11484:	beq	114a8 <strspn@plt+0x58c>
   11488:	mov	r0, r7
   1148c:	bl	10e74 <fclose@plt>
   11490:	mov	r0, r9
   11494:	bl	10e74 <fclose@plt>
   11498:	mov	r0, #10
   1149c:	bl	10e20 <putchar@plt>
   114a0:	mov	r0, #0
   114a4:	bl	10db4 <exit@plt>
   114a8:	mov	r0, r9
   114ac:	bl	10cf4 <ferror@plt>
   114b0:	cmp	r0, #0
   114b4:	beq	114fc <strspn@plt+0x5e0>
   114b8:	ldr	r1, [pc, #-300]	; 11394 <strspn@plt+0x478>
   114bc:	mov	r0, r4
   114c0:	mov	r2, #5
   114c4:	bl	10d30 <dcgettext@plt>
   114c8:	ldr	r2, [sp, #8]
   114cc:	mov	r1, r0
   114d0:	mov	r0, #1
   114d4:	bl	10d60 <err@plt>
   114d8:	cmp	r3, r6
   114dc:	ldrlt	fp, [r1, r3, lsl #2]
   114e0:	ldrge	fp, [pc, #-336]	; 11398 <strspn@plt+0x47c>
   114e4:	addlt	r3, r3, #1
   114e8:	b	11278 <strspn@plt+0x35c>
   114ec:	ldr	r0, [r1, r3, lsl #2]
   114f0:	bl	11748 <strspn@plt+0x82c>
   114f4:	vmov.f64	d8, d0
   114f8:	b	11290 <strspn@plt+0x374>
   114fc:	mov	r2, #5
   11500:	ldr	r1, [pc, #-364]	; 1139c <strspn@plt+0x480>
   11504:	bl	10d30 <dcgettext@plt>
   11508:	mov	r3, r8
   1150c:	ldr	r2, [sp, #8]
   11510:	mov	r1, r0
   11514:	mov	r0, #1
   11518:	bl	10e98 <errx@plt>
   1151c:	mov	r2, #5
   11520:	ldr	r1, [pc, #-392]	; 113a0 <strspn@plt+0x484>
   11524:	bl	10d30 <dcgettext@plt>
   11528:	mov	r2, fp
   1152c:	mov	r1, r0
   11530:	mov	r0, #1
   11534:	bl	10d60 <err@plt>
   11538:	mov	fp, #0
   1153c:	mov	lr, #0
   11540:	pop	{r1}		; (ldr r1, [sp], #4)
   11544:	mov	r2, sp
   11548:	push	{r2}		; (str r2, [sp, #-4]!)
   1154c:	push	{r0}		; (str r0, [sp, #-4]!)
   11550:	ldr	ip, [pc, #16]	; 11568 <strspn@plt+0x64c>
   11554:	push	{ip}		; (str ip, [sp, #-4]!)
   11558:	ldr	r0, [pc, #12]	; 1156c <strspn@plt+0x650>
   1155c:	ldr	r3, [pc, #12]	; 11570 <strspn@plt+0x654>
   11560:	bl	10d84 <__libc_start_main@plt>
   11564:	bl	10f04 <abort@plt>
   11568:	andeq	r3, r1, ip, asr sl
   1156c:	andeq	r0, r1, r8, lsr #30
   11570:	strdeq	r3, [r1], -ip
   11574:	ldr	r3, [pc, #20]	; 11590 <strspn@plt+0x674>
   11578:	ldr	r2, [pc, #20]	; 11594 <strspn@plt+0x678>
   1157c:	add	r3, pc, r3
   11580:	ldr	r2, [r3, r2]
   11584:	cmp	r2, #0
   11588:	bxeq	lr
   1158c:	b	10d90 <__gmon_start__@plt>
   11590:	muleq	r1, r0, r9
   11594:	andeq	r0, r0, r4, ror #1
   11598:	ldr	r0, [pc, #24]	; 115b8 <strspn@plt+0x69c>
   1159c:	ldr	r3, [pc, #24]	; 115bc <strspn@plt+0x6a0>
   115a0:	cmp	r3, r0
   115a4:	bxeq	lr
   115a8:	ldr	r3, [pc, #16]	; 115c0 <strspn@plt+0x6a4>
   115ac:	cmp	r3, #0
   115b0:	bxeq	lr
   115b4:	bx	r3
   115b8:	andeq	r5, r2, ip
   115bc:	andeq	r5, r2, ip
   115c0:	andeq	r0, r0, r0
   115c4:	ldr	r0, [pc, #36]	; 115f0 <strspn@plt+0x6d4>
   115c8:	ldr	r1, [pc, #36]	; 115f4 <strspn@plt+0x6d8>
   115cc:	sub	r1, r1, r0
   115d0:	asr	r1, r1, #2
   115d4:	add	r1, r1, r1, lsr #31
   115d8:	asrs	r1, r1, #1
   115dc:	bxeq	lr
   115e0:	ldr	r3, [pc, #16]	; 115f8 <strspn@plt+0x6dc>
   115e4:	cmp	r3, #0
   115e8:	bxeq	lr
   115ec:	bx	r3
   115f0:	andeq	r5, r2, ip
   115f4:	andeq	r5, r2, ip
   115f8:	andeq	r0, r0, r0
   115fc:	push	{r4, lr}
   11600:	ldr	r4, [pc, #24]	; 11620 <strspn@plt+0x704>
   11604:	ldrb	r3, [r4]
   11608:	cmp	r3, #0
   1160c:	popne	{r4, pc}
   11610:	bl	11598 <strspn@plt+0x67c>
   11614:	mov	r3, #1
   11618:	strb	r3, [r4]
   1161c:	pop	{r4, pc}
   11620:	andeq	r5, r2, ip, lsr #32
   11624:	b	115c4 <strspn@plt+0x6a8>
   11628:	push	{r4, r5, r6, r7, r8, lr}
   1162c:	sub	sp, sp, #8192	; 0x2000
   11630:	ldr	r7, [pc, #256]	; 11738 <strspn@plt+0x81c>
   11634:	sub	sp, sp, #16
   11638:	subs	r4, r2, #0
   1163c:	add	r2, sp, #8192	; 0x2000
   11640:	ldr	r3, [r7]
   11644:	add	r2, r2, #12
   11648:	str	r3, [r2]
   1164c:	beq	116d8 <strspn@plt+0x7bc>
   11650:	mov	r6, r0
   11654:	mov	r8, r1
   11658:	b	11680 <strspn@plt+0x764>
   1165c:	mov	r2, r5
   11660:	add	r1, sp, #12
   11664:	mov	r0, #1
   11668:	bl	10e5c <write@plt>
   1166c:	sub	r4, r4, r5
   11670:	cmp	r0, r5
   11674:	bne	11718 <strspn@plt+0x7fc>
   11678:	cmp	r4, #0
   1167c:	beq	116d8 <strspn@plt+0x7bc>
   11680:	cmp	r4, #8192	; 0x2000
   11684:	movcc	r3, r4
   11688:	movcs	r3, #8192	; 0x2000
   1168c:	str	r6, [sp]
   11690:	mov	r2, #1
   11694:	mov	r1, #8192	; 0x2000
   11698:	add	r0, sp, #12
   1169c:	bl	10e80 <__fread_chk@plt>
   116a0:	subs	r5, r0, #0
   116a4:	bne	1165c <strspn@plt+0x740>
   116a8:	mov	r0, r6
   116ac:	bl	10dc0 <feof@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	116fc <strspn@plt+0x7e0>
   116b8:	mov	r2, #5
   116bc:	ldr	r1, [pc, #120]	; 1173c <strspn@plt+0x820>
   116c0:	mov	r0, r5
   116c4:	bl	10d30 <dcgettext@plt>
   116c8:	mov	r2, r8
   116cc:	mov	r1, r0
   116d0:	mov	r0, #1
   116d4:	bl	10e98 <errx@plt>
   116d8:	add	r3, sp, #8192	; 0x2000
   116dc:	add	r3, r3, #12
   116e0:	ldr	r2, [r3]
   116e4:	ldr	r3, [r7]
   116e8:	cmp	r2, r3
   116ec:	bne	11734 <strspn@plt+0x818>
   116f0:	add	sp, sp, #8192	; 0x2000
   116f4:	add	sp, sp, #16
   116f8:	pop	{r4, r5, r6, r7, r8, pc}
   116fc:	mov	r2, #5
   11700:	ldr	r1, [pc, #56]	; 11740 <strspn@plt+0x824>
   11704:	bl	10d30 <dcgettext@plt>
   11708:	mov	r2, r8
   1170c:	mov	r1, r0
   11710:	mov	r0, #1
   11714:	bl	10d60 <err@plt>
   11718:	ldr	r1, [pc, #36]	; 11744 <strspn@plt+0x828>
   1171c:	mov	r2, #5
   11720:	mov	r0, #0
   11724:	bl	10d30 <dcgettext@plt>
   11728:	mov	r1, r0
   1172c:	mov	r0, #1
   11730:	bl	10d60 <err@plt>
   11734:	bl	10d48 <__stack_chk_fail@plt>
   11738:	andeq	r4, r2, r0, lsl lr
   1173c:	andeq	r3, r1, ip, lsl #22
   11740:	andeq	r3, r1, ip, lsr #22
   11744:	strdeq	r3, [r1], -r4
   11748:	push	{r4, lr}
   1174c:	mov	r2, #5
   11750:	mov	r4, r0
   11754:	ldr	r1, [pc, #76]	; 117a8 <strspn@plt+0x88c>
   11758:	mov	r0, #0
   1175c:	bl	10d30 <dcgettext@plt>
   11760:	mov	r1, r0
   11764:	mov	r0, r4
   11768:	bl	126e8 <strspn@plt+0x17cc>
   1176c:	vcmp.f64	d0, d0
   11770:	vmrs	APSR_nzcv, fpscr
   11774:	popvc	{r4, pc}
   11778:	bl	10dfc <__errno_location@plt>
   1177c:	mov	r3, #22
   11780:	mov	r2, #5
   11784:	ldr	r1, [pc, #28]	; 117a8 <strspn@plt+0x88c>
   11788:	str	r3, [r0]
   1178c:	mov	r0, #0
   11790:	bl	10d30 <dcgettext@plt>
   11794:	mov	r3, r4
   11798:	ldr	r1, [pc, #12]	; 117ac <strspn@plt+0x890>
   1179c:	mov	r2, r0
   117a0:	mov	r0, #1
   117a4:	bl	10d60 <err@plt>
   117a8:	andeq	r3, r1, r0, asr fp
   117ac:	andeq	r3, r1, r8, ror #22
   117b0:	ldr	r3, [pc, #292]	; 118dc <strspn@plt+0x9c0>
   117b4:	push	{r4, r5, r6, lr}
   117b8:	ldr	r4, [r3]
   117bc:	mov	r0, r4
   117c0:	bl	10d6c <__fpending@plt>
   117c4:	mov	r6, r0
   117c8:	mov	r0, r4
   117cc:	bl	10cf4 <ferror@plt>
   117d0:	mov	r5, r0
   117d4:	mov	r0, r4
   117d8:	bl	10e74 <fclose@plt>
   117dc:	cmp	r5, #0
   117e0:	mov	r4, r0
   117e4:	bne	1188c <strspn@plt+0x970>
   117e8:	cmp	r0, #0
   117ec:	beq	11808 <strspn@plt+0x8ec>
   117f0:	bl	10dfc <__errno_location@plt>
   117f4:	cmp	r6, #0
   117f8:	ldr	r3, [r0]
   117fc:	bne	11864 <strspn@plt+0x948>
   11800:	cmp	r3, #9
   11804:	bne	11864 <strspn@plt+0x948>
   11808:	ldr	r3, [pc, #208]	; 118e0 <strspn@plt+0x9c4>
   1180c:	ldr	r4, [r3]
   11810:	mov	r0, r4
   11814:	bl	10d6c <__fpending@plt>
   11818:	mov	r6, r0
   1181c:	mov	r0, r4
   11820:	bl	10cf4 <ferror@plt>
   11824:	mov	r5, r0
   11828:	mov	r0, r4
   1182c:	bl	10e74 <fclose@plt>
   11830:	cmp	r5, #0
   11834:	mov	r4, r0
   11838:	bne	118c0 <strspn@plt+0x9a4>
   1183c:	cmp	r0, #0
   11840:	popeq	{r4, r5, r6, pc}
   11844:	cmp	r6, #0
   11848:	bne	1185c <strspn@plt+0x940>
   1184c:	bl	10dfc <__errno_location@plt>
   11850:	ldr	r3, [r0]
   11854:	cmp	r3, #9
   11858:	popeq	{r4, r5, r6, pc}
   1185c:	mov	r0, #1
   11860:	bl	10d0c <_exit@plt>
   11864:	cmp	r3, #32
   11868:	beq	11808 <strspn@plt+0x8ec>
   1186c:	cmp	r3, #0
   11870:	beq	118a8 <strspn@plt+0x98c>
   11874:	mov	r2, #5
   11878:	ldr	r1, [pc, #100]	; 118e4 <strspn@plt+0x9c8>
   1187c:	mov	r0, #0
   11880:	bl	10d30 <dcgettext@plt>
   11884:	bl	10ea4 <warn@plt>
   11888:	b	1185c <strspn@plt+0x940>
   1188c:	bl	10dfc <__errno_location@plt>
   11890:	cmp	r4, #0
   11894:	ldr	r3, [r0]
   11898:	bne	11864 <strspn@plt+0x948>
   1189c:	cmp	r3, #32
   118a0:	strne	r4, [r0]
   118a4:	beq	11808 <strspn@plt+0x8ec>
   118a8:	mov	r2, #5
   118ac:	ldr	r1, [pc, #48]	; 118e4 <strspn@plt+0x9c8>
   118b0:	mov	r0, #0
   118b4:	bl	10d30 <dcgettext@plt>
   118b8:	bl	10df0 <warnx@plt>
   118bc:	b	1185c <strspn@plt+0x940>
   118c0:	cmp	r0, #0
   118c4:	bne	1185c <strspn@plt+0x940>
   118c8:	bl	10dfc <__errno_location@plt>
   118cc:	ldr	r3, [r0]
   118d0:	cmp	r3, #32
   118d4:	strne	r4, [r0]
   118d8:	b	1185c <strspn@plt+0x940>
   118dc:	andeq	r5, r2, r4, lsr #32
   118e0:	andeq	r5, r2, r0, lsr #32
   118e4:	andeq	r3, r1, r0, ror fp
   118e8:	cmp	r0, #0
   118ec:	mov	r3, #0
   118f0:	str	r3, [r1]
   118f4:	bxeq	lr
   118f8:	ldrsb	r2, [r0]
   118fc:	cmp	r2, #47	; 0x2f
   11900:	bne	1193c <strspn@plt+0xa20>
   11904:	ldrsb	r3, [r0, #1]
   11908:	cmp	r3, #47	; 0x2f
   1190c:	bne	11944 <strspn@plt+0xa28>
   11910:	add	r3, r0, #1
   11914:	b	11924 <strspn@plt+0xa08>
   11918:	ldrsb	r2, [r3]
   1191c:	cmp	r2, #47	; 0x2f
   11920:	bne	11944 <strspn@plt+0xa28>
   11924:	cmp	r3, #0
   11928:	mov	r0, r3
   1192c:	bxeq	lr
   11930:	ldrsb	r2, [r3], #1
   11934:	cmp	r2, #47	; 0x2f
   11938:	beq	11918 <strspn@plt+0x9fc>
   1193c:	cmp	r2, #0
   11940:	beq	11980 <strspn@plt+0xa64>
   11944:	mov	r3, #1
   11948:	str	r3, [r1]
   1194c:	ldrsb	r3, [r0, #1]
   11950:	add	r2, r0, #1
   11954:	cmp	r3, #47	; 0x2f
   11958:	cmpne	r3, #0
   1195c:	bxeq	lr
   11960:	rsb	r3, r0, #1
   11964:	add	ip, r2, r3
   11968:	str	ip, [r1]
   1196c:	ldrsb	ip, [r2, #1]!
   11970:	cmp	ip, #0
   11974:	cmpne	ip, #47	; 0x2f
   11978:	bne	11964 <strspn@plt+0xa48>
   1197c:	bx	lr
   11980:	mov	r0, r2
   11984:	bx	lr
   11988:	push	{r4, r5, r6, r7, r8, lr}
   1198c:	mov	r7, r1
   11990:	ldrsb	r1, [r0]
   11994:	cmp	r1, #0
   11998:	movne	r5, r0
   1199c:	movne	r4, #0
   119a0:	beq	11a0c <strspn@plt+0xaf0>
   119a4:	cmp	r1, #92	; 0x5c
   119a8:	addne	r6, r5, r4
   119ac:	beq	119dc <strspn@plt+0xac0>
   119b0:	mov	r0, r7
   119b4:	bl	10de4 <strchr@plt>
   119b8:	cmp	r0, #0
   119bc:	bne	11a04 <strspn@plt+0xae8>
   119c0:	ldrsb	r1, [r6, #1]!
   119c4:	add	r4, r4, #1
   119c8:	mov	r0, r4
   119cc:	cmp	r1, #0
   119d0:	popeq	{r4, r5, r6, r7, r8, pc}
   119d4:	cmp	r1, #92	; 0x5c
   119d8:	bne	119b0 <strspn@plt+0xa94>
   119dc:	add	r3, r5, r4
   119e0:	ldrsb	r3, [r3, #1]
   119e4:	cmp	r3, #0
   119e8:	beq	11a04 <strspn@plt+0xae8>
   119ec:	add	r4, r4, #2
   119f0:	mov	r0, r4
   119f4:	ldrsb	r1, [r5, r4]
   119f8:	cmp	r1, #0
   119fc:	bne	119a4 <strspn@plt+0xa88>
   11a00:	pop	{r4, r5, r6, r7, r8, pc}
   11a04:	mov	r0, r4
   11a08:	pop	{r4, r5, r6, r7, r8, pc}
   11a0c:	mov	r0, r1
   11a10:	pop	{r4, r5, r6, r7, r8, pc}
   11a14:	ldr	ip, [pc, #244]	; 11b10 <strspn@plt+0xbf4>
   11a18:	push	{r4, r5, r6, r7, r8, r9, lr}
   11a1c:	add	ip, pc, ip
   11a20:	ldr	lr, [pc, #236]	; 11b14 <strspn@plt+0xbf8>
   11a24:	sub	sp, sp, #12
   11a28:	mov	r5, #0
   11a2c:	ldr	r7, [ip, lr]
   11a30:	mov	r4, r0
   11a34:	mov	r8, r1
   11a38:	ldr	r3, [r7]
   11a3c:	mov	r0, ip
   11a40:	mov	r9, r2
   11a44:	str	r5, [sp]
   11a48:	str	r3, [sp, #4]
   11a4c:	bl	10dfc <__errno_location@plt>
   11a50:	cmp	r4, r5
   11a54:	str	r5, [r0]
   11a58:	beq	11a68 <strspn@plt+0xb4c>
   11a5c:	ldrsb	r3, [r4]
   11a60:	cmp	r3, r5
   11a64:	bne	11a88 <strspn@plt+0xb6c>
   11a68:	ldr	r1, [pc, #168]	; 11b18 <strspn@plt+0xbfc>
   11a6c:	mov	r3, r4
   11a70:	add	r1, pc, r1
   11a74:	mov	r2, r8
   11a78:	ldr	r0, [r1]
   11a7c:	ldr	r1, [pc, #152]	; 11b1c <strspn@plt+0xc00>
   11a80:	add	r1, pc, r1
   11a84:	bl	10e98 <errx@plt>
   11a88:	mov	r6, r0
   11a8c:	mov	r2, r9
   11a90:	mov	r3, r5
   11a94:	mov	r1, sp
   11a98:	mov	r0, r4
   11a9c:	bl	10d24 <__strtoull_internal@plt>
   11aa0:	ldr	r2, [r6]
   11aa4:	cmp	r2, r5
   11aa8:	bne	11ae4 <strspn@plt+0xbc8>
   11aac:	ldr	r3, [sp]
   11ab0:	cmp	r3, r4
   11ab4:	beq	11a68 <strspn@plt+0xb4c>
   11ab8:	cmp	r3, r5
   11abc:	beq	11acc <strspn@plt+0xbb0>
   11ac0:	ldrsb	r3, [r3]
   11ac4:	cmp	r3, r5
   11ac8:	bne	11a68 <strspn@plt+0xb4c>
   11acc:	ldr	r2, [sp, #4]
   11ad0:	ldr	r3, [r7]
   11ad4:	cmp	r2, r3
   11ad8:	bne	11b0c <strspn@plt+0xbf0>
   11adc:	add	sp, sp, #12
   11ae0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ae4:	ldr	r3, [pc, #52]	; 11b20 <strspn@plt+0xc04>
   11ae8:	cmp	r2, #34	; 0x22
   11aec:	add	r3, pc, r3
   11af0:	ldr	r0, [r3]
   11af4:	bne	11a68 <strspn@plt+0xb4c>
   11af8:	ldr	r1, [pc, #36]	; 11b24 <strspn@plt+0xc08>
   11afc:	mov	r3, r4
   11b00:	mov	r2, r8
   11b04:	add	r1, pc, r1
   11b08:	bl	10d60 <err@plt>
   11b0c:	bl	10d48 <__stack_chk_fail@plt>
   11b10:	strdeq	r3, [r1], -r0
   11b14:	andeq	r0, r0, r0, ror #1
   11b18:	muleq	r1, r0, r5
   11b1c:	andeq	r2, r0, r8, lsr #8
   11b20:	andeq	r3, r1, r4, lsl r5
   11b24:	andeq	r2, r0, r4, lsr #7
   11b28:	push	{r4, lr}
   11b2c:	mov	r5, r0
   11b30:	mov	r4, r1
   11b34:	bl	10dfc <__errno_location@plt>
   11b38:	ldr	ip, [pc, #32]	; 11b60 <strspn@plt+0xc44>
   11b3c:	ldr	r1, [pc, #32]	; 11b64 <strspn@plt+0xc48>
   11b40:	add	ip, pc, ip
   11b44:	mov	lr, #34	; 0x22
   11b48:	mov	r3, r5
   11b4c:	mov	r2, r4
   11b50:	add	r1, pc, r1
   11b54:	str	lr, [r0]
   11b58:	ldr	r0, [ip]
   11b5c:	bl	10d60 <err@plt>
   11b60:	andeq	r3, r1, r0, asr #9
   11b64:	andeq	r2, r0, r8, asr r3
   11b68:	push	{r4, r5, r6, lr}
   11b6c:	mov	r4, r0
   11b70:	mov	r5, r1
   11b74:	bl	11a14 <strspn@plt+0xaf8>
   11b78:	mov	r3, #0
   11b7c:	mvn	r2, #0
   11b80:	cmp	r1, r3
   11b84:	cmpeq	r0, r2
   11b88:	popls	{r4, r5, r6, pc}
   11b8c:	mov	r1, r5
   11b90:	mov	r0, r4
   11b94:	bl	11b28 <strspn@plt+0xc0c>
   11b98:	ldr	r3, [pc, #8]	; 11ba8 <strspn@plt+0xc8c>
   11b9c:	add	r3, pc, r3
   11ba0:	str	r0, [r3]
   11ba4:	bx	lr
   11ba8:	andeq	r3, r1, r4, ror #8
   11bac:	ldr	r3, [pc, #1648]	; 12224 <strspn@plt+0x1308>
   11bb0:	ldr	ip, [pc, #1648]	; 12228 <strspn@plt+0x130c>
   11bb4:	add	r3, pc, r3
   11bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bbc:	mov	r5, r1
   11bc0:	ldr	r1, [r3, ip]
   11bc4:	sub	sp, sp, #52	; 0x34
   11bc8:	mov	ip, r1
   11bcc:	mov	r8, r0
   11bd0:	str	r1, [sp, #24]
   11bd4:	mov	r0, #0
   11bd8:	mov	r1, #0
   11bdc:	ldr	r3, [ip]
   11be0:	strd	r0, [r5]
   11be4:	mov	r9, r2
   11be8:	str	r3, [sp, #44]	; 0x2c
   11bec:	bl	10dfc <__errno_location@plt>
   11bf0:	cmp	r8, #0
   11bf4:	mov	r4, r0
   11bf8:	beq	11dd8 <strspn@plt+0xebc>
   11bfc:	ldrsb	fp, [r8]
   11c00:	cmp	fp, #0
   11c04:	beq	11dd8 <strspn@plt+0xebc>
   11c08:	bl	10da8 <__ctype_b_loc@plt>
   11c0c:	mov	r2, r8
   11c10:	ldr	r1, [r0]
   11c14:	b	11c1c <strspn@plt+0xd00>
   11c18:	ldrsb	fp, [r2, #1]!
   11c1c:	uxtb	r3, fp
   11c20:	lsl	r3, r3, #1
   11c24:	ldrh	ip, [r1, r3]
   11c28:	ands	ip, ip, #8192	; 0x2000
   11c2c:	bne	11c18 <strspn@plt+0xcfc>
   11c30:	cmp	fp, #45	; 0x2d
   11c34:	beq	11dd8 <strspn@plt+0xebc>
   11c38:	add	fp, sp, #40	; 0x28
   11c3c:	mov	r3, ip
   11c40:	mov	r2, ip
   11c44:	str	ip, [r4]
   11c48:	mov	r1, fp
   11c4c:	mov	r0, r8
   11c50:	str	ip, [sp, #40]	; 0x28
   11c54:	bl	10d24 <__strtoull_internal@plt>
   11c58:	ldr	sl, [sp, #40]	; 0x28
   11c5c:	cmp	sl, r8
   11c60:	mov	r2, r0
   11c64:	mov	r3, r1
   11c68:	ldr	r0, [r4]
   11c6c:	strd	r2, [sp, #16]
   11c70:	beq	11f58 <strspn@plt+0x103c>
   11c74:	cmp	r0, #0
   11c78:	bne	11e00 <strspn@plt+0xee4>
   11c7c:	cmp	sl, #0
   11c80:	beq	11f8c <strspn@plt+0x1070>
   11c84:	ldrsb	r0, [sl]
   11c88:	cmp	r0, #0
   11c8c:	beq	11f80 <strspn@plt+0x1064>
   11c90:	mov	r8, #0
   11c94:	mov	r2, #0
   11c98:	mov	r3, #0
   11c9c:	str	r9, [sp, #32]
   11ca0:	mov	r6, fp
   11ca4:	mov	r9, sl
   11ca8:	mov	r7, r8
   11cac:	mov	sl, r2
   11cb0:	mov	fp, r3
   11cb4:	str	r5, [sp, #28]
   11cb8:	ldrsb	r2, [r9, #1]
   11cbc:	cmp	r2, #105	; 0x69
   11cc0:	beq	11e44 <strspn@plt+0xf28>
   11cc4:	bic	r1, r2, #32
   11cc8:	cmp	r1, #66	; 0x42
   11ccc:	bne	11f64 <strspn@plt+0x1048>
   11cd0:	ldrsb	r2, [r9, #2]
   11cd4:	cmp	r2, #0
   11cd8:	beq	12148 <strspn@plt+0x122c>
   11cdc:	bl	10ebc <localeconv@plt>
   11ce0:	cmp	r0, #0
   11ce4:	beq	11dd8 <strspn@plt+0xebc>
   11ce8:	ldr	r2, [r0]
   11cec:	cmp	r2, #0
   11cf0:	beq	11dd8 <strspn@plt+0xebc>
   11cf4:	mov	r0, r2
   11cf8:	str	r2, [sp]
   11cfc:	bl	10dd8 <strlen@plt>
   11d00:	orrs	r3, sl, fp
   11d04:	mov	r5, r0
   11d08:	bne	11dd8 <strspn@plt+0xebc>
   11d0c:	ldrsb	r1, [r9]
   11d10:	cmp	r1, #0
   11d14:	beq	11dd8 <strspn@plt+0xebc>
   11d18:	ldr	r2, [sp]
   11d1c:	mov	r1, r9
   11d20:	mov	r0, r2
   11d24:	mov	r2, r5
   11d28:	bl	10ef8 <strncmp@plt>
   11d2c:	cmp	r0, #0
   11d30:	bne	11dd8 <strspn@plt+0xebc>
   11d34:	ldrsb	r2, [r9, r5]
   11d38:	add	r5, r9, r5
   11d3c:	cmp	r2, #48	; 0x30
   11d40:	bne	11d60 <strspn@plt+0xe44>
   11d44:	add	r8, r8, #1
   11d48:	sub	r1, r8, r5
   11d4c:	mov	r3, r5
   11d50:	add	r8, r3, r1
   11d54:	ldrsb	r2, [r3, #1]!
   11d58:	cmp	r2, #48	; 0x30
   11d5c:	beq	11d50 <strspn@plt+0xe34>
   11d60:	mov	r3, #0
   11d64:	str	r7, [r4]
   11d68:	mov	r2, r3
   11d6c:	mov	r1, r6
   11d70:	mov	r0, r5
   11d74:	str	r7, [sp, #40]	; 0x28
   11d78:	bl	10d24 <__strtoull_internal@plt>
   11d7c:	ldr	r9, [sp, #40]	; 0x28
   11d80:	cmp	r9, r5
   11d84:	mov	sl, r0
   11d88:	mov	fp, r1
   11d8c:	beq	11f54 <strspn@plt+0x1038>
   11d90:	ldr	ip, [r4]
   11d94:	cmp	ip, #0
   11d98:	beq	11e30 <strspn@plt+0xf14>
   11d9c:	subs	r3, r0, #1
   11da0:	str	r3, [sp, #8]
   11da4:	sbc	r3, r1, #0
   11da8:	str	r3, [sp, #12]
   11dac:	ldrd	r2, [sp, #8]
   11db0:	mvn	r1, #0
   11db4:	mvn	r0, #2
   11db8:	cmp	r3, r1
   11dbc:	cmpeq	r2, r0
   11dc0:	bhi	12184 <strspn@plt+0x1268>
   11dc4:	cmp	r9, #0
   11dc8:	beq	11dd8 <strspn@plt+0xebc>
   11dcc:	ldrsb	r2, [r9]
   11dd0:	cmp	r2, #0
   11dd4:	bne	11cb8 <strspn@plt+0xd9c>
   11dd8:	mov	r3, #22
   11ddc:	mvn	r0, #21
   11de0:	str	r3, [r4]
   11de4:	ldr	r3, [sp, #24]
   11de8:	ldr	r2, [sp, #44]	; 0x2c
   11dec:	ldr	r3, [r3]
   11df0:	cmp	r2, r3
   11df4:	bne	12220 <strspn@plt+0x1304>
   11df8:	add	sp, sp, #52	; 0x34
   11dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e00:	subs	r6, r2, #1
   11e04:	sbc	r7, r3, #0
   11e08:	mvn	r3, #0
   11e0c:	mvn	r2, #2
   11e10:	cmp	r7, r3
   11e14:	cmpeq	r6, r2
   11e18:	bls	11c7c <strspn@plt+0xd60>
   11e1c:	rsb	r0, r0, #0
   11e20:	cmp	r0, #0
   11e24:	bge	11de4 <strspn@plt+0xec8>
   11e28:	rsb	r3, r0, #0
   11e2c:	b	11de0 <strspn@plt+0xec4>
   11e30:	orrs	r3, sl, fp
   11e34:	bne	11dc4 <strspn@plt+0xea8>
   11e38:	ldrsb	r2, [r9, #1]
   11e3c:	cmp	r2, #105	; 0x69
   11e40:	bne	11cc4 <strspn@plt+0xda8>
   11e44:	ldrsb	r2, [r9, #2]
   11e48:	bic	r2, r2, #32
   11e4c:	cmp	r2, #66	; 0x42
   11e50:	bne	11cdc <strspn@plt+0xdc0>
   11e54:	ldrsb	r2, [r9, #3]
   11e58:	cmp	r2, #0
   11e5c:	bne	11cdc <strspn@plt+0xdc0>
   11e60:	strd	sl, [sp]
   11e64:	mov	sl, r9
   11e68:	ldr	r9, [sp, #32]
   11e6c:	mov	r3, #1024	; 0x400
   11e70:	ldr	r5, [sp, #28]
   11e74:	str	r3, [sp, #28]
   11e78:	ldrsb	r7, [sl]
   11e7c:	ldr	r6, [pc, #936]	; 1222c <strspn@plt+0x1310>
   11e80:	add	r6, pc, r6
   11e84:	mov	r1, r7
   11e88:	mov	r0, r6
   11e8c:	bl	10de4 <strchr@plt>
   11e90:	cmp	r0, #0
   11e94:	beq	12164 <strspn@plt+0x1248>
   11e98:	sub	ip, r0, r6
   11e9c:	add	fp, ip, #1
   11ea0:	cmp	fp, #0
   11ea4:	beq	11f70 <strspn@plt+0x1054>
   11ea8:	ldr	r3, [sp, #20]
   11eac:	ldr	r6, [sp, #28]
   11eb0:	cmp	r3, #0
   11eb4:	mov	r0, #0
   11eb8:	asr	r7, r6, #31
   11ebc:	mov	r1, #0
   11ec0:	bne	121c0 <strspn@plt+0x12a4>
   11ec4:	orrs	r3, r0, r1
   11ec8:	bne	11fb4 <strspn@plt+0x1098>
   11ecc:	str	fp, [sp, #32]
   11ed0:	sub	ip, ip, #1
   11ed4:	str	r8, [sp, #36]	; 0x24
   11ed8:	mov	fp, r4
   11edc:	ldrd	r0, [sp, #16]
   11ee0:	mov	lr, r5
   11ee4:	mov	sl, r9
   11ee8:	b	11ef8 <strspn@plt+0xfdc>
   11eec:	orrs	r3, r4, r5
   11ef0:	sub	ip, ip, #1
   11ef4:	bne	11f9c <strspn@plt+0x1080>
   11ef8:	mul	r2, r0, r7
   11efc:	cmn	ip, #1
   11f00:	mla	r2, r6, r1, r2
   11f04:	umull	r0, r1, r0, r6
   11f08:	add	r2, r2, r1
   11f0c:	mov	r1, r2
   11f10:	beq	12128 <strspn@plt+0x120c>
   11f14:	cmp	r2, #0
   11f18:	mov	r4, #0
   11f1c:	mov	r5, #0
   11f20:	beq	11eec <strspn@plt+0xfd0>
   11f24:	umull	r2, r3, r6, r2
   11f28:	umull	r8, r9, r0, r6
   11f2c:	strd	r2, [sp, #8]
   11f30:	mov	r8, r9
   11f34:	ldr	r3, [sp, #12]
   11f38:	adds	r8, r2, r8
   11f3c:	mov	r2, #0
   11f40:	adc	r3, r3, r2
   11f44:	cmp	r3, r2
   11f48:	movne	r4, #1
   11f4c:	movne	r5, #0
   11f50:	b	11eec <strspn@plt+0xfd0>
   11f54:	ldr	r0, [r4]
   11f58:	cmp	r0, #0
   11f5c:	beq	11dd8 <strspn@plt+0xebc>
   11f60:	b	11e1c <strspn@plt+0xf00>
   11f64:	cmp	r2, #0
   11f68:	bne	11cdc <strspn@plt+0xdc0>
   11f6c:	b	11e60 <strspn@plt+0xf44>
   11f70:	cmp	r9, #0
   11f74:	movne	r0, fp
   11f78:	bne	11fc0 <strspn@plt+0x10a4>
   11f7c:	mov	r0, r9
   11f80:	ldrd	r2, [sp, #16]
   11f84:	strd	r2, [r5]
   11f88:	b	11de4 <strspn@plt+0xec8>
   11f8c:	ldrd	r2, [sp, #16]
   11f90:	mov	r0, sl
   11f94:	strd	r2, [r5]
   11f98:	b	11de4 <strspn@plt+0xec8>
   11f9c:	mov	r4, fp
   11fa0:	ldr	r8, [sp, #36]	; 0x24
   11fa4:	ldr	fp, [sp, #32]
   11fa8:	mov	r5, lr
   11fac:	mov	r9, sl
   11fb0:	strd	r0, [sp, #16]
   11fb4:	mvn	r0, #33	; 0x21
   11fb8:	cmp	r9, #0
   11fbc:	beq	11fc4 <strspn@plt+0x10a8>
   11fc0:	str	fp, [r9]
   11fc4:	ldrd	r2, [sp]
   11fc8:	mov	r1, r2
   11fcc:	orrs	r3, r1, r3
   11fd0:	movne	r3, #1
   11fd4:	moveq	r3, #0
   11fd8:	cmp	fp, #0
   11fdc:	moveq	r3, #0
   11fe0:	cmp	r3, #0
   11fe4:	beq	1211c <strspn@plt+0x1200>
   11fe8:	ldr	r3, [pc, #576]	; 12230 <strspn@plt+0x1314>
   11fec:	ldr	r1, [pc, #576]	; 12234 <strspn@plt+0x1318>
   11ff0:	umull	ip, r3, r3, r8
   11ff4:	smull	ip, r1, r1, r8
   11ff8:	lsr	r3, r3, #1
   11ffc:	rsb	r1, r1, r8, asr #31
   12000:	add	r3, r3, r3, lsl #1
   12004:	add	r1, r1, fp
   12008:	subs	r3, r8, r3
   1200c:	sub	r6, r1, #1
   12010:	bne	1218c <strspn@plt+0x1270>
   12014:	ldrd	r8, [sp]
   12018:	adds	r3, r8, r8
   1201c:	adc	r2, r9, r9
   12020:	adds	r3, r3, r8
   12024:	adc	r2, r2, r9
   12028:	lsl	ip, r3, #5
   1202c:	lsl	lr, r2, #5
   12030:	orr	lr, lr, r3, lsr #27
   12034:	adds	r3, r3, ip
   12038:	adc	r2, r2, lr
   1203c:	adds	r3, r8, r3
   12040:	str	r3, [sp]
   12044:	ldr	r3, [sp, #4]
   12048:	adc	r3, r3, r2
   1204c:	str	r3, [sp, #4]
   12050:	cmp	r6, #0
   12054:	blt	11dd8 <strspn@plt+0xebc>
   12058:	beq	12100 <strspn@plt+0x11e4>
   1205c:	ldr	r3, [sp, #4]
   12060:	ldr	r8, [sp, #28]
   12064:	cmp	r3, #0
   12068:	mov	r6, #0
   1206c:	asr	r9, r8, #31
   12070:	mov	r7, #0
   12074:	bne	121f4 <strspn@plt+0x12d8>
   12078:	orrs	r3, r6, r7
   1207c:	bne	12100 <strspn@plt+0x11e4>
   12080:	sub	r1, r1, #3
   12084:	ldrd	r2, [sp]
   12088:	mov	lr, r4
   1208c:	str	r5, [sp, #8]
   12090:	b	120a0 <strspn@plt+0x1184>
   12094:	orrs	ip, r6, r7
   12098:	sub	r1, r1, #1
   1209c:	bne	120f4 <strspn@plt+0x11d8>
   120a0:	mul	ip, r2, r9
   120a4:	cmn	r1, #1
   120a8:	mla	ip, r8, r3, ip
   120ac:	umull	r2, r3, r2, r8
   120b0:	add	ip, ip, r3
   120b4:	mov	r3, ip
   120b8:	beq	120f4 <strspn@plt+0x11d8>
   120bc:	cmp	ip, #0
   120c0:	mov	r6, #0
   120c4:	mov	r7, #0
   120c8:	beq	12094 <strspn@plt+0x1178>
   120cc:	umull	sl, fp, r2, r8
   120d0:	umull	r4, r5, r8, ip
   120d4:	mov	ip, fp
   120d8:	adds	ip, r4, ip
   120dc:	mov	ip, #0
   120e0:	adc	ip, r5, ip
   120e4:	cmp	ip, #0
   120e8:	movne	r6, #1
   120ec:	movne	r7, #0
   120f0:	b	12094 <strspn@plt+0x1178>
   120f4:	ldr	r5, [sp, #8]
   120f8:	mov	r4, lr
   120fc:	strd	r2, [sp]
   12100:	ldrd	r2, [sp]
   12104:	ldr	r1, [sp, #16]
   12108:	adds	r1, r1, r2
   1210c:	str	r1, [sp, #16]
   12110:	ldr	r1, [sp, #20]
   12114:	adc	r3, r1, r3
   12118:	str	r3, [sp, #20]
   1211c:	ldrd	r2, [sp, #16]
   12120:	strd	r2, [r5]
   12124:	b	11e20 <strspn@plt+0xf04>
   12128:	mov	r4, fp
   1212c:	strd	r0, [sp, #16]
   12130:	ldr	r8, [sp, #36]	; 0x24
   12134:	ldr	fp, [sp, #32]
   12138:	mov	r5, lr
   1213c:	mov	r9, sl
   12140:	mov	r0, #0
   12144:	b	11fb8 <strspn@plt+0x109c>
   12148:	mov	r3, #1000	; 0x3e8
   1214c:	strd	sl, [sp]
   12150:	ldr	r5, [sp, #28]
   12154:	mov	sl, r9
   12158:	str	r3, [sp, #28]
   1215c:	ldr	r9, [sp, #32]
   12160:	b	11e78 <strspn@plt+0xf5c>
   12164:	ldr	r6, [pc, #204]	; 12238 <strspn@plt+0x131c>
   12168:	mov	r1, r7
   1216c:	add	r6, pc, r6
   12170:	mov	r0, r6
   12174:	bl	10de4 <strchr@plt>
   12178:	cmp	r0, #0
   1217c:	bne	11e98 <strspn@plt+0xf7c>
   12180:	b	11dd8 <strspn@plt+0xebc>
   12184:	mov	r0, ip
   12188:	b	11e1c <strspn@plt+0xf00>
   1218c:	cmp	r3, #1
   12190:	bne	12050 <strspn@plt+0x1134>
   12194:	ldrd	r8, [sp]
   12198:	lsl	r2, r9, #2
   1219c:	lsl	r3, r8, #2
   121a0:	adds	r3, r3, r8
   121a4:	orr	r2, r2, r8, lsr #30
   121a8:	adc	r2, r2, r9
   121ac:	adds	r3, r3, r3
   121b0:	str	r3, [sp]
   121b4:	adc	r3, r2, r2
   121b8:	str	r3, [sp, #4]
   121bc:	b	12050 <strspn@plt+0x1134>
   121c0:	ldr	lr, [sp, #28]
   121c4:	ldr	r3, [sp, #16]
   121c8:	ldr	sl, [sp, #20]
   121cc:	umull	r2, r3, r3, lr
   121d0:	str	r3, [sp, #8]
   121d4:	mov	r3, #0
   121d8:	str	r3, [sp, #12]
   121dc:	ldrd	r2, [sp, #8]
   121e0:	umlal	r2, r3, sl, lr
   121e4:	cmp	r3, #0
   121e8:	movne	r0, #1
   121ec:	movne	r1, #0
   121f0:	b	11ec4 <strspn@plt+0xfa8>
   121f4:	ldr	r3, [sp]
   121f8:	ldr	ip, [sp, #28]
   121fc:	ldr	lr, [sp, #4]
   12200:	umull	sl, fp, r3, ip
   12204:	mov	r3, #0
   12208:	mov	r2, fp
   1220c:	umlal	r2, r3, lr, ip
   12210:	cmp	r3, #0
   12214:	movne	r6, #1
   12218:	movne	r7, #0
   1221c:	b	12078 <strspn@plt+0x115c>
   12220:	bl	10d48 <__stack_chk_fail@plt>
   12224:	andeq	r3, r1, r8, asr r3
   12228:	andeq	r0, r0, r0, ror #1
   1222c:	andeq	r2, r0, r4, lsr r0
   12230:	bge	feabcce4 <optarg@@GLIBC_2.4+0xfea97cbc>
   12234:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12238:	andeq	r1, r0, r4, asr sp
   1223c:	mov	r2, #0
   12240:	b	11bac <strspn@plt+0xc90>
   12244:	push	{r4, r5, r6, lr}
   12248:	subs	r5, r0, #0
   1224c:	mov	r6, r1
   12250:	beq	122bc <strspn@plt+0x13a0>
   12254:	ldrsb	r4, [r5]
   12258:	cmp	r4, #0
   1225c:	beq	122d0 <strspn@plt+0x13b4>
   12260:	bl	10da8 <__ctype_b_loc@plt>
   12264:	mov	r3, r5
   12268:	ldr	r0, [r0]
   1226c:	b	12284 <strspn@plt+0x1368>
   12270:	adds	r3, r3, #1
   12274:	beq	122bc <strspn@plt+0x13a0>
   12278:	ldrsb	r4, [r3]
   1227c:	cmp	r4, #0
   12280:	beq	12298 <strspn@plt+0x137c>
   12284:	uxtb	r4, r4
   12288:	lsl	r4, r4, #1
   1228c:	ldrh	r2, [r0, r4]
   12290:	tst	r2, #2048	; 0x800
   12294:	bne	12270 <strspn@plt+0x1354>
   12298:	cmp	r6, #0
   1229c:	strne	r3, [r6]
   122a0:	cmp	r5, r3
   122a4:	bcs	122c8 <strspn@plt+0x13ac>
   122a8:	ldrsb	r3, [r3]
   122ac:	cmp	r3, #0
   122b0:	bne	122c8 <strspn@plt+0x13ac>
   122b4:	mov	r0, #1
   122b8:	pop	{r4, r5, r6, pc}
   122bc:	cmp	r6, #0
   122c0:	movne	r3, #0
   122c4:	strne	r3, [r6]
   122c8:	mov	r0, #0
   122cc:	pop	{r4, r5, r6, pc}
   122d0:	cmp	r1, #0
   122d4:	strne	r5, [r1]
   122d8:	b	122c8 <strspn@plt+0x13ac>
   122dc:	push	{r4, r5, r6, lr}
   122e0:	subs	r5, r0, #0
   122e4:	mov	r6, r1
   122e8:	beq	12354 <strspn@plt+0x1438>
   122ec:	ldrsb	r4, [r5]
   122f0:	cmp	r4, #0
   122f4:	beq	12368 <strspn@plt+0x144c>
   122f8:	bl	10da8 <__ctype_b_loc@plt>
   122fc:	mov	r3, r5
   12300:	ldr	r0, [r0]
   12304:	b	1231c <strspn@plt+0x1400>
   12308:	adds	r3, r3, #1
   1230c:	beq	12354 <strspn@plt+0x1438>
   12310:	ldrsb	r4, [r3]
   12314:	cmp	r4, #0
   12318:	beq	12330 <strspn@plt+0x1414>
   1231c:	uxtb	r4, r4
   12320:	lsl	r4, r4, #1
   12324:	ldrh	r2, [r0, r4]
   12328:	tst	r2, #4096	; 0x1000
   1232c:	bne	12308 <strspn@plt+0x13ec>
   12330:	cmp	r6, #0
   12334:	strne	r3, [r6]
   12338:	cmp	r5, r3
   1233c:	bcs	12360 <strspn@plt+0x1444>
   12340:	ldrsb	r3, [r3]
   12344:	cmp	r3, #0
   12348:	bne	12360 <strspn@plt+0x1444>
   1234c:	mov	r0, #1
   12350:	pop	{r4, r5, r6, pc}
   12354:	cmp	r6, #0
   12358:	movne	r3, #0
   1235c:	strne	r3, [r6]
   12360:	mov	r0, #0
   12364:	pop	{r4, r5, r6, pc}
   12368:	cmp	r1, #0
   1236c:	strne	r5, [r1]
   12370:	b	12360 <strspn@plt+0x1444>
   12374:	push	{r1, r2, r3}
   12378:	ldr	r3, [pc, #188]	; 1243c <strspn@plt+0x1520>
   1237c:	ldr	r2, [pc, #188]	; 12440 <strspn@plt+0x1524>
   12380:	add	r3, pc, r3
   12384:	push	{r4, r5, r6, r7, r8, lr}
   12388:	sub	sp, sp, #12
   1238c:	ldr	r7, [r3, r2]
   12390:	ldr	r8, [sp, #36]	; 0x24
   12394:	mov	r6, r0
   12398:	ldr	r3, [r7]
   1239c:	add	r4, sp, #48	; 0x30
   123a0:	str	r3, [sp, #4]
   123a4:	b	123c0 <strspn@plt+0x14a4>
   123a8:	mov	r1, r5
   123ac:	mov	r0, r6
   123b0:	bl	10cb8 <strcmp@plt>
   123b4:	add	r4, r4, #8
   123b8:	cmp	r0, #0
   123bc:	beq	123f8 <strspn@plt+0x14dc>
   123c0:	ldr	r1, [r4, #-8]
   123c4:	sub	r3, r4, #4
   123c8:	cmp	r1, #0
   123cc:	str	r3, [sp]
   123d0:	beq	12418 <strspn@plt+0x14fc>
   123d4:	ldr	r5, [r4, #-4]
   123d8:	str	r4, [sp]
   123dc:	cmp	r5, #0
   123e0:	beq	12418 <strspn@plt+0x14fc>
   123e4:	mov	r0, r6
   123e8:	bl	10cb8 <strcmp@plt>
   123ec:	cmp	r0, #0
   123f0:	bne	123a8 <strspn@plt+0x148c>
   123f4:	mov	r0, #1
   123f8:	ldr	r2, [sp, #4]
   123fc:	ldr	r3, [r7]
   12400:	cmp	r2, r3
   12404:	bne	12438 <strspn@plt+0x151c>
   12408:	add	sp, sp, #12
   1240c:	pop	{r4, r5, r6, r7, r8, lr}
   12410:	add	sp, sp, #12
   12414:	bx	lr
   12418:	ldr	r1, [pc, #36]	; 12444 <strspn@plt+0x1528>
   1241c:	mov	r3, r6
   12420:	add	r1, pc, r1
   12424:	mov	r2, r8
   12428:	ldr	r0, [r1]
   1242c:	ldr	r1, [pc, #20]	; 12448 <strspn@plt+0x152c>
   12430:	add	r1, pc, r1
   12434:	bl	10e98 <errx@plt>
   12438:	bl	10d48 <__stack_chk_fail@plt>
   1243c:	andeq	r2, r1, ip, lsl #23
   12440:	andeq	r0, r0, r0, ror #1
   12444:	andeq	r2, r1, r0, ror #23
   12448:	andeq	r1, r0, r8, ror sl
   1244c:	cmp	r1, #0
   12450:	beq	1249c <strspn@plt+0x1580>
   12454:	ldrsb	r3, [r0]
   12458:	cmp	r3, #0
   1245c:	beq	1249c <strspn@plt+0x1580>
   12460:	sxtb	r2, r2
   12464:	cmp	r3, r2
   12468:	bxeq	lr
   1246c:	add	r1, r0, r1
   12470:	add	r3, r0, #1
   12474:	b	12490 <strspn@plt+0x1574>
   12478:	ldrsb	ip, [r3]
   1247c:	add	r3, r3, #1
   12480:	cmp	ip, #0
   12484:	beq	1249c <strspn@plt+0x1580>
   12488:	cmp	ip, r2
   1248c:	bxeq	lr
   12490:	cmp	r3, r1
   12494:	mov	r0, r3
   12498:	bne	12478 <strspn@plt+0x155c>
   1249c:	mov	r0, #0
   124a0:	bx	lr
   124a4:	push	{r4, r5, r6, lr}
   124a8:	mov	r2, #10
   124ac:	mov	r4, r0
   124b0:	mov	r5, r1
   124b4:	bl	11b68 <strspn@plt+0xc4c>
   124b8:	cmp	r0, #65536	; 0x10000
   124bc:	bcs	124c8 <strspn@plt+0x15ac>
   124c0:	uxth	r0, r0
   124c4:	pop	{r4, r5, r6, pc}
   124c8:	mov	r1, r5
   124cc:	mov	r0, r4
   124d0:	bl	11b28 <strspn@plt+0xc0c>
   124d4:	push	{r4, r5, r6, lr}
   124d8:	mov	r2, #16
   124dc:	mov	r4, r0
   124e0:	mov	r5, r1
   124e4:	bl	11b68 <strspn@plt+0xc4c>
   124e8:	cmp	r0, #65536	; 0x10000
   124ec:	bcs	124f8 <strspn@plt+0x15dc>
   124f0:	uxth	r0, r0
   124f4:	pop	{r4, r5, r6, pc}
   124f8:	mov	r1, r5
   124fc:	mov	r0, r4
   12500:	bl	11b28 <strspn@plt+0xc0c>
   12504:	mov	r2, #10
   12508:	b	11b68 <strspn@plt+0xc4c>
   1250c:	mov	r2, #16
   12510:	b	11b68 <strspn@plt+0xc4c>
   12514:	ldr	r2, [pc, #236]	; 12608 <strspn@plt+0x16ec>
   12518:	ldr	ip, [pc, #236]	; 1260c <strspn@plt+0x16f0>
   1251c:	add	r2, pc, r2
   12520:	push	{r4, r5, r6, r7, r8, lr}
   12524:	sub	sp, sp, #8
   12528:	ldr	r7, [r2, ip]
   1252c:	mov	r5, #0
   12530:	mov	r4, r0
   12534:	ldr	r3, [r7]
   12538:	mov	r8, r1
   1253c:	str	r5, [sp]
   12540:	str	r3, [sp, #4]
   12544:	bl	10dfc <__errno_location@plt>
   12548:	cmp	r4, r5
   1254c:	str	r5, [r0]
   12550:	beq	12560 <strspn@plt+0x1644>
   12554:	ldrsb	r3, [r4]
   12558:	cmp	r3, r5
   1255c:	bne	12580 <strspn@plt+0x1664>
   12560:	ldr	r1, [pc, #168]	; 12610 <strspn@plt+0x16f4>
   12564:	mov	r3, r4
   12568:	add	r1, pc, r1
   1256c:	mov	r2, r8
   12570:	ldr	r0, [r1]
   12574:	ldr	r1, [pc, #152]	; 12614 <strspn@plt+0x16f8>
   12578:	add	r1, pc, r1
   1257c:	bl	10e98 <errx@plt>
   12580:	mov	r6, r0
   12584:	mov	r2, #10
   12588:	mov	r3, r5
   1258c:	mov	r1, sp
   12590:	mov	r0, r4
   12594:	bl	10ec8 <__strtoll_internal@plt>
   12598:	ldr	r2, [r6]
   1259c:	cmp	r2, r5
   125a0:	bne	125dc <strspn@plt+0x16c0>
   125a4:	ldr	r3, [sp]
   125a8:	cmp	r3, r4
   125ac:	beq	12560 <strspn@plt+0x1644>
   125b0:	cmp	r3, r5
   125b4:	beq	125c4 <strspn@plt+0x16a8>
   125b8:	ldrsb	r3, [r3]
   125bc:	cmp	r3, r5
   125c0:	bne	12560 <strspn@plt+0x1644>
   125c4:	ldr	r2, [sp, #4]
   125c8:	ldr	r3, [r7]
   125cc:	cmp	r2, r3
   125d0:	bne	12604 <strspn@plt+0x16e8>
   125d4:	add	sp, sp, #8
   125d8:	pop	{r4, r5, r6, r7, r8, pc}
   125dc:	ldr	r3, [pc, #52]	; 12618 <strspn@plt+0x16fc>
   125e0:	cmp	r2, #34	; 0x22
   125e4:	add	r3, pc, r3
   125e8:	ldr	r0, [r3]
   125ec:	bne	12560 <strspn@plt+0x1644>
   125f0:	ldr	r1, [pc, #36]	; 1261c <strspn@plt+0x1700>
   125f4:	mov	r3, r4
   125f8:	mov	r2, r8
   125fc:	add	r1, pc, r1
   12600:	bl	10d60 <err@plt>
   12604:	bl	10d48 <__stack_chk_fail@plt>
   12608:	strdeq	r2, [r1], -r0
   1260c:	andeq	r0, r0, r0, ror #1
   12610:	muleq	r1, r8, sl
   12614:	andeq	r1, r0, r0, lsr r9
   12618:	andeq	r2, r1, ip, lsl sl
   1261c:	andeq	r1, r0, ip, lsr #17
   12620:	push	{r4, r5, r6, r7, r8, lr}
   12624:	mov	r7, r0
   12628:	mov	r6, r1
   1262c:	bl	12514 <strspn@plt+0x15f8>
   12630:	mov	r3, #0
   12634:	mvn	r2, #0
   12638:	adds	r4, r0, #-2147483648	; 0x80000000
   1263c:	adc	r5, r1, #0
   12640:	cmp	r5, r3
   12644:	cmpeq	r4, r2
   12648:	popls	{r4, r5, r6, r7, r8, pc}
   1264c:	bl	10dfc <__errno_location@plt>
   12650:	ldr	ip, [pc, #32]	; 12678 <strspn@plt+0x175c>
   12654:	ldr	r1, [pc, #32]	; 1267c <strspn@plt+0x1760>
   12658:	add	ip, pc, ip
   1265c:	mov	lr, #34	; 0x22
   12660:	mov	r3, r7
   12664:	mov	r2, r6
   12668:	add	r1, pc, r1
   1266c:	str	lr, [r0]
   12670:	ldr	r0, [ip]
   12674:	bl	10d60 <err@plt>
   12678:	andeq	r2, r1, r8, lsr #19
   1267c:	andeq	r1, r0, r0, asr #16
   12680:	push	{r4, r5, r6, lr}
   12684:	mov	r5, r0
   12688:	mov	r4, r1
   1268c:	bl	12620 <strspn@plt+0x1704>
   12690:	add	r3, r0, #32768	; 0x8000
   12694:	cmp	r3, #65536	; 0x10000
   12698:	bcs	126a4 <strspn@plt+0x1788>
   1269c:	sxth	r0, r0
   126a0:	pop	{r4, r5, r6, pc}
   126a4:	bl	10dfc <__errno_location@plt>
   126a8:	ldr	ip, [pc, #32]	; 126d0 <strspn@plt+0x17b4>
   126ac:	ldr	r1, [pc, #32]	; 126d4 <strspn@plt+0x17b8>
   126b0:	add	ip, pc, ip
   126b4:	mov	lr, #34	; 0x22
   126b8:	mov	r3, r5
   126bc:	mov	r2, r4
   126c0:	add	r1, pc, r1
   126c4:	str	lr, [r0]
   126c8:	ldr	r0, [ip]
   126cc:	bl	10d60 <err@plt>
   126d0:	andeq	r2, r1, r0, asr r9
   126d4:	andeq	r1, r0, r8, ror #15
   126d8:	mov	r2, #10
   126dc:	b	11a14 <strspn@plt+0xaf8>
   126e0:	mov	r2, #16
   126e4:	b	11a14 <strspn@plt+0xaf8>
   126e8:	ldr	r2, [pc, #228]	; 127d4 <strspn@plt+0x18b8>
   126ec:	ldr	r3, [pc, #228]	; 127d8 <strspn@plt+0x18bc>
   126f0:	add	r2, pc, r2
   126f4:	push	{r4, r5, r6, r7, r8, lr}
   126f8:	sub	sp, sp, #8
   126fc:	ldr	r7, [r2, r3]
   12700:	mov	r5, #0
   12704:	mov	r4, r0
   12708:	ldr	r3, [r7]
   1270c:	mov	r8, r1
   12710:	str	r5, [sp]
   12714:	str	r3, [sp, #4]
   12718:	bl	10dfc <__errno_location@plt>
   1271c:	cmp	r4, r5
   12720:	str	r5, [r0]
   12724:	beq	12734 <strspn@plt+0x1818>
   12728:	ldrsb	r3, [r4]
   1272c:	cmp	r3, r5
   12730:	bne	12754 <strspn@plt+0x1838>
   12734:	ldr	r1, [pc, #160]	; 127dc <strspn@plt+0x18c0>
   12738:	mov	r3, r4
   1273c:	add	r1, pc, r1
   12740:	mov	r2, r8
   12744:	ldr	r0, [r1]
   12748:	ldr	r1, [pc, #144]	; 127e0 <strspn@plt+0x18c4>
   1274c:	add	r1, pc, r1
   12750:	bl	10e98 <errx@plt>
   12754:	mov	r6, r0
   12758:	mov	r1, sp
   1275c:	mov	r0, r4
   12760:	bl	10e50 <strtod@plt>
   12764:	ldr	r2, [r6]
   12768:	cmp	r2, r5
   1276c:	bne	127a8 <strspn@plt+0x188c>
   12770:	ldr	r3, [sp]
   12774:	cmp	r3, r4
   12778:	beq	12734 <strspn@plt+0x1818>
   1277c:	cmp	r3, r5
   12780:	beq	12790 <strspn@plt+0x1874>
   12784:	ldrsb	r3, [r3]
   12788:	cmp	r3, r5
   1278c:	bne	12734 <strspn@plt+0x1818>
   12790:	ldr	r2, [sp, #4]
   12794:	ldr	r3, [r7]
   12798:	cmp	r2, r3
   1279c:	bne	127d0 <strspn@plt+0x18b4>
   127a0:	add	sp, sp, #8
   127a4:	pop	{r4, r5, r6, r7, r8, pc}
   127a8:	ldr	r3, [pc, #52]	; 127e4 <strspn@plt+0x18c8>
   127ac:	cmp	r2, #34	; 0x22
   127b0:	add	r3, pc, r3
   127b4:	ldr	r0, [r3]
   127b8:	bne	12734 <strspn@plt+0x1818>
   127bc:	ldr	r1, [pc, #36]	; 127e8 <strspn@plt+0x18cc>
   127c0:	mov	r3, r4
   127c4:	mov	r2, r8
   127c8:	add	r1, pc, r1
   127cc:	bl	10d60 <err@plt>
   127d0:	bl	10d48 <__stack_chk_fail@plt>
   127d4:	andeq	r2, r1, ip, lsl r8
   127d8:	andeq	r0, r0, r0, ror #1
   127dc:	andeq	r2, r1, r4, asr #17
   127e0:	andeq	r1, r0, ip, asr r7
   127e4:	andeq	r2, r1, r0, asr r8
   127e8:	andeq	r1, r0, r0, ror #13
   127ec:	ldr	r2, [pc, #232]	; 128dc <strspn@plt+0x19c0>
   127f0:	ldr	r3, [pc, #232]	; 128e0 <strspn@plt+0x19c4>
   127f4:	add	r2, pc, r2
   127f8:	push	{r4, r5, r6, r7, r8, lr}
   127fc:	sub	sp, sp, #8
   12800:	ldr	r7, [r2, r3]
   12804:	mov	r5, #0
   12808:	mov	r4, r0
   1280c:	ldr	r3, [r7]
   12810:	mov	r8, r1
   12814:	str	r5, [sp]
   12818:	str	r3, [sp, #4]
   1281c:	bl	10dfc <__errno_location@plt>
   12820:	cmp	r4, r5
   12824:	str	r5, [r0]
   12828:	beq	12838 <strspn@plt+0x191c>
   1282c:	ldrsb	r3, [r4]
   12830:	cmp	r3, r5
   12834:	bne	12858 <strspn@plt+0x193c>
   12838:	ldr	r1, [pc, #164]	; 128e4 <strspn@plt+0x19c8>
   1283c:	mov	r3, r4
   12840:	add	r1, pc, r1
   12844:	mov	r2, r8
   12848:	ldr	r0, [r1]
   1284c:	ldr	r1, [pc, #148]	; 128e8 <strspn@plt+0x19cc>
   12850:	add	r1, pc, r1
   12854:	bl	10e98 <errx@plt>
   12858:	mov	r6, r0
   1285c:	mov	r2, #10
   12860:	mov	r1, sp
   12864:	mov	r0, r4
   12868:	bl	10cc4 <strtol@plt>
   1286c:	ldr	r2, [r6]
   12870:	cmp	r2, r5
   12874:	bne	128b0 <strspn@plt+0x1994>
   12878:	ldr	r3, [sp]
   1287c:	cmp	r3, r4
   12880:	beq	12838 <strspn@plt+0x191c>
   12884:	cmp	r3, r5
   12888:	beq	12898 <strspn@plt+0x197c>
   1288c:	ldrsb	r3, [r3]
   12890:	cmp	r3, r5
   12894:	bne	12838 <strspn@plt+0x191c>
   12898:	ldr	r2, [sp, #4]
   1289c:	ldr	r3, [r7]
   128a0:	cmp	r2, r3
   128a4:	bne	128d8 <strspn@plt+0x19bc>
   128a8:	add	sp, sp, #8
   128ac:	pop	{r4, r5, r6, r7, r8, pc}
   128b0:	ldr	r3, [pc, #52]	; 128ec <strspn@plt+0x19d0>
   128b4:	cmp	r2, #34	; 0x22
   128b8:	add	r3, pc, r3
   128bc:	ldr	r0, [r3]
   128c0:	bne	12838 <strspn@plt+0x191c>
   128c4:	ldr	r1, [pc, #36]	; 128f0 <strspn@plt+0x19d4>
   128c8:	mov	r3, r4
   128cc:	mov	r2, r8
   128d0:	add	r1, pc, r1
   128d4:	bl	10d60 <err@plt>
   128d8:	bl	10d48 <__stack_chk_fail@plt>
   128dc:	andeq	r2, r1, r8, lsl r7
   128e0:	andeq	r0, r0, r0, ror #1
   128e4:	andeq	r2, r1, r0, asr #15
   128e8:	andeq	r1, r0, r8, asr r6
   128ec:	andeq	r2, r1, r8, asr #14
   128f0:	ldrdeq	r1, [r0], -r8
   128f4:	ldr	r2, [pc, #232]	; 129e4 <strspn@plt+0x1ac8>
   128f8:	ldr	r3, [pc, #232]	; 129e8 <strspn@plt+0x1acc>
   128fc:	add	r2, pc, r2
   12900:	push	{r4, r5, r6, r7, r8, lr}
   12904:	sub	sp, sp, #8
   12908:	ldr	r7, [r2, r3]
   1290c:	mov	r5, #0
   12910:	mov	r4, r0
   12914:	ldr	r3, [r7]
   12918:	mov	r8, r1
   1291c:	str	r5, [sp]
   12920:	str	r3, [sp, #4]
   12924:	bl	10dfc <__errno_location@plt>
   12928:	cmp	r4, r5
   1292c:	str	r5, [r0]
   12930:	beq	12940 <strspn@plt+0x1a24>
   12934:	ldrsb	r3, [r4]
   12938:	cmp	r3, r5
   1293c:	bne	12960 <strspn@plt+0x1a44>
   12940:	ldr	r1, [pc, #164]	; 129ec <strspn@plt+0x1ad0>
   12944:	mov	r3, r4
   12948:	add	r1, pc, r1
   1294c:	mov	r2, r8
   12950:	ldr	r0, [r1]
   12954:	ldr	r1, [pc, #148]	; 129f0 <strspn@plt+0x1ad4>
   12958:	add	r1, pc, r1
   1295c:	bl	10e98 <errx@plt>
   12960:	mov	r6, r0
   12964:	mov	r2, #10
   12968:	mov	r1, sp
   1296c:	mov	r0, r4
   12970:	bl	10dcc <strtoul@plt>
   12974:	ldr	r2, [r6]
   12978:	cmp	r2, r5
   1297c:	bne	129b8 <strspn@plt+0x1a9c>
   12980:	ldr	r3, [sp]
   12984:	cmp	r3, r4
   12988:	beq	12940 <strspn@plt+0x1a24>
   1298c:	cmp	r3, r5
   12990:	beq	129a0 <strspn@plt+0x1a84>
   12994:	ldrsb	r3, [r3]
   12998:	cmp	r3, r5
   1299c:	bne	12940 <strspn@plt+0x1a24>
   129a0:	ldr	r2, [sp, #4]
   129a4:	ldr	r3, [r7]
   129a8:	cmp	r2, r3
   129ac:	bne	129e0 <strspn@plt+0x1ac4>
   129b0:	add	sp, sp, #8
   129b4:	pop	{r4, r5, r6, r7, r8, pc}
   129b8:	ldr	r3, [pc, #52]	; 129f4 <strspn@plt+0x1ad8>
   129bc:	cmp	r2, #34	; 0x22
   129c0:	add	r3, pc, r3
   129c4:	ldr	r0, [r3]
   129c8:	bne	12940 <strspn@plt+0x1a24>
   129cc:	ldr	r1, [pc, #36]	; 129f8 <strspn@plt+0x1adc>
   129d0:	mov	r3, r4
   129d4:	mov	r2, r8
   129d8:	add	r1, pc, r1
   129dc:	bl	10d60 <err@plt>
   129e0:	bl	10d48 <__stack_chk_fail@plt>
   129e4:	andeq	r2, r1, r0, lsl r6
   129e8:	andeq	r0, r0, r0, ror #1
   129ec:			; <UNDEFINED> instruction: 0x000126b8
   129f0:	andeq	r1, r0, r0, asr r5
   129f4:	andeq	r2, r1, r0, asr #12
   129f8:	ldrdeq	r1, [r0], -r0
   129fc:	ldr	r3, [pc, #140]	; 12a90 <strspn@plt+0x1b74>
   12a00:	ldr	r2, [pc, #140]	; 12a94 <strspn@plt+0x1b78>
   12a04:	add	r3, pc, r3
   12a08:	push	{r4, r5, r6, lr}
   12a0c:	sub	sp, sp, #16
   12a10:	ldr	r4, [r3, r2]
   12a14:	mov	r5, r1
   12a18:	mov	r1, sp
   12a1c:	ldr	r3, [r4]
   12a20:	mov	r6, r0
   12a24:	str	r3, [sp, #12]
   12a28:	bl	1223c <strspn@plt+0x1320>
   12a2c:	cmp	r0, #0
   12a30:	beq	12a70 <strspn@plt+0x1b54>
   12a34:	bl	10dfc <__errno_location@plt>
   12a38:	ldr	r3, [pc, #88]	; 12a98 <strspn@plt+0x1b7c>
   12a3c:	mov	r2, r5
   12a40:	ldr	r1, [pc, r3]
   12a44:	ldr	r3, [r0]
   12a48:	mov	r0, r1
   12a4c:	cmp	r3, #0
   12a50:	mov	r3, r6
   12a54:	beq	12a64 <strspn@plt+0x1b48>
   12a58:	ldr	r1, [pc, #60]	; 12a9c <strspn@plt+0x1b80>
   12a5c:	add	r1, pc, r1
   12a60:	bl	10d60 <err@plt>
   12a64:	ldr	r1, [pc, #52]	; 12aa0 <strspn@plt+0x1b84>
   12a68:	add	r1, pc, r1
   12a6c:	bl	10e98 <errx@plt>
   12a70:	ldr	r2, [sp, #12]
   12a74:	ldr	r3, [r4]
   12a78:	ldrd	r0, [sp]
   12a7c:	cmp	r2, r3
   12a80:	bne	12a8c <strspn@plt+0x1b70>
   12a84:	add	sp, sp, #16
   12a88:	pop	{r4, r5, r6, pc}
   12a8c:	bl	10d48 <__stack_chk_fail@plt>
   12a90:	andeq	r2, r1, r8, lsl #10
   12a94:	andeq	r0, r0, r0, ror #1
   12a98:	andeq	r2, r1, r0, asr #11
   12a9c:	andeq	r1, r0, ip, asr #8
   12aa0:	andeq	r1, r0, r0, asr #8
   12aa4:	push	{r4, lr}
   12aa8:	mov	r4, r1
   12aac:	mov	r1, r2
   12ab0:	bl	126e8 <strspn@plt+0x17cc>
   12ab4:	vldr	d6, [pc, #28]	; 12ad8 <strspn@plt+0x1bbc>
   12ab8:	vcvt.s32.f64	s15, d0
   12abc:	vcvt.f64.s32	d5, s15
   12ac0:	vstr	s15, [r4]
   12ac4:	vsub.f64	d0, d0, d5
   12ac8:	vmul.f64	d0, d0, d6
   12acc:	vcvt.s32.f64	s0, d0
   12ad0:	vstr	s0, [r4, #4]
   12ad4:	pop	{r4, pc}
   12ad8:	andeq	r0, r0, r0
   12adc:	smlawbmi	lr, r0, r4, r8
   12ae0:	and	r2, r0, #61440	; 0xf000
   12ae4:	cmp	r2, #16384	; 0x4000
   12ae8:	moveq	r2, r1
   12aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12af0:	moveq	sl, #100	; 0x64
   12af4:	mov	r3, r0
   12af8:	add	r9, r1, #1
   12afc:	add	r8, r1, #2
   12b00:	add	r7, r1, #3
   12b04:	add	r6, r1, #4
   12b08:	add	r5, r1, #5
   12b0c:	add	r4, r1, #6
   12b10:	add	lr, r1, #7
   12b14:	add	ip, r1, #8
   12b18:	add	r0, r1, #9
   12b1c:	strbeq	sl, [r2], #10
   12b20:	beq	12bc4 <strspn@plt+0x1ca8>
   12b24:	cmp	r2, #40960	; 0xa000
   12b28:	moveq	r2, r1
   12b2c:	moveq	sl, #108	; 0x6c
   12b30:	strbeq	sl, [r2], #10
   12b34:	beq	12bc4 <strspn@plt+0x1ca8>
   12b38:	cmp	r2, #8192	; 0x2000
   12b3c:	moveq	r2, r1
   12b40:	moveq	sl, #99	; 0x63
   12b44:	strbeq	sl, [r2], #10
   12b48:	beq	12bc4 <strspn@plt+0x1ca8>
   12b4c:	cmp	r2, #24576	; 0x6000
   12b50:	moveq	r2, r1
   12b54:	moveq	sl, #98	; 0x62
   12b58:	strbeq	sl, [r2], #10
   12b5c:	beq	12bc4 <strspn@plt+0x1ca8>
   12b60:	cmp	r2, #49152	; 0xc000
   12b64:	moveq	r2, r1
   12b68:	moveq	sl, #115	; 0x73
   12b6c:	strbeq	sl, [r2], #10
   12b70:	beq	12bc4 <strspn@plt+0x1ca8>
   12b74:	cmp	r2, #4096	; 0x1000
   12b78:	moveq	r2, r1
   12b7c:	moveq	sl, #112	; 0x70
   12b80:	strbeq	sl, [r2], #10
   12b84:	beq	12bc4 <strspn@plt+0x1ca8>
   12b88:	cmp	r2, #32768	; 0x8000
   12b8c:	moveq	r2, r1
   12b90:	moveq	sl, #45	; 0x2d
   12b94:	strbeq	sl, [r2], #10
   12b98:	beq	12bc4 <strspn@plt+0x1ca8>
   12b9c:	mov	r2, r0
   12ba0:	mov	r0, ip
   12ba4:	mov	ip, lr
   12ba8:	mov	lr, r4
   12bac:	mov	r4, r5
   12bb0:	mov	r5, r6
   12bb4:	mov	r6, r7
   12bb8:	mov	r7, r8
   12bbc:	mov	r8, r9
   12bc0:	mov	r9, r1
   12bc4:	tst	r3, #256	; 0x100
   12bc8:	movne	fp, #114	; 0x72
   12bcc:	moveq	fp, #45	; 0x2d
   12bd0:	tst	r3, #128	; 0x80
   12bd4:	movne	sl, #119	; 0x77
   12bd8:	moveq	sl, #45	; 0x2d
   12bdc:	tst	r3, #2048	; 0x800
   12be0:	strb	fp, [r9]
   12be4:	and	r9, r3, #64	; 0x40
   12be8:	strb	sl, [r8]
   12bec:	beq	12c88 <strspn@plt+0x1d6c>
   12bf0:	cmp	r9, #0
   12bf4:	movne	r9, #115	; 0x73
   12bf8:	moveq	r9, #83	; 0x53
   12bfc:	tst	r3, #32
   12c00:	movne	r8, #114	; 0x72
   12c04:	moveq	r8, #45	; 0x2d
   12c08:	tst	r3, #16
   12c0c:	strb	r9, [r7]
   12c10:	movne	r7, #119	; 0x77
   12c14:	moveq	r7, #45	; 0x2d
   12c18:	tst	r3, #1024	; 0x400
   12c1c:	strb	r8, [r6]
   12c20:	and	r6, r3, #8
   12c24:	strb	r7, [r5]
   12c28:	beq	12c98 <strspn@plt+0x1d7c>
   12c2c:	cmp	r6, #0
   12c30:	movne	r6, #115	; 0x73
   12c34:	moveq	r6, #83	; 0x53
   12c38:	tst	r3, #4
   12c3c:	movne	r5, #114	; 0x72
   12c40:	moveq	r5, #45	; 0x2d
   12c44:	tst	r3, #2
   12c48:	strb	r6, [r4]
   12c4c:	movne	r4, #119	; 0x77
   12c50:	moveq	r4, #45	; 0x2d
   12c54:	tst	r3, #512	; 0x200
   12c58:	strb	r5, [lr]
   12c5c:	and	r3, r3, #1
   12c60:	strb	r4, [ip]
   12c64:	beq	12ca8 <strspn@plt+0x1d8c>
   12c68:	cmp	r3, #0
   12c6c:	movne	ip, #116	; 0x74
   12c70:	moveq	ip, #84	; 0x54
   12c74:	mov	r3, #0
   12c78:	strb	ip, [r0]
   12c7c:	mov	r0, r1
   12c80:	strb	r3, [r2]
   12c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c88:	cmp	r9, #0
   12c8c:	movne	r9, #120	; 0x78
   12c90:	moveq	r9, #45	; 0x2d
   12c94:	b	12bfc <strspn@plt+0x1ce0>
   12c98:	cmp	r6, #0
   12c9c:	movne	r6, #120	; 0x78
   12ca0:	moveq	r6, #45	; 0x2d
   12ca4:	b	12c38 <strspn@plt+0x1d1c>
   12ca8:	cmp	r3, #0
   12cac:	movne	ip, #120	; 0x78
   12cb0:	moveq	ip, #45	; 0x2d
   12cb4:	b	12c74 <strspn@plt+0x1d58>
   12cb8:	ldr	r1, [pc, #680]	; 12f68 <strspn@plt+0x204c>
   12cbc:	ldr	ip, [pc, #680]	; 12f6c <strspn@plt+0x2050>
   12cc0:	add	r1, pc, r1
   12cc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cc8:	sub	sp, sp, #108	; 0x6c
   12ccc:	ldr	r8, [r1, ip]
   12cd0:	tst	r0, #2
   12cd4:	strd	r2, [sp, #32]
   12cd8:	ldr	r1, [r8]
   12cdc:	addeq	r9, sp, #60	; 0x3c
   12ce0:	str	r1, [sp, #100]	; 0x64
   12ce4:	ldrd	r2, [sp, #32]
   12ce8:	movne	r1, #32
   12cec:	strbne	r1, [sp, #60]	; 0x3c
   12cf0:	addne	ip, sp, #61	; 0x3d
   12cf4:	addne	r9, sp, #60	; 0x3c
   12cf8:	moveq	ip, r9
   12cfc:	mov	r1, #10
   12d00:	mov	sl, #1
   12d04:	sub	lr, r1, #32
   12d08:	lsl	r4, sl, r1
   12d0c:	lsl	r5, sl, lr
   12d10:	rsb	lr, r1, #32
   12d14:	orr	r5, r5, sl, lsr lr
   12d18:	cmp	r3, r5
   12d1c:	cmpeq	r2, r4
   12d20:	bcc	12edc <strspn@plt+0x1fc0>
   12d24:	add	r1, r1, #10
   12d28:	cmp	r1, #70	; 0x46
   12d2c:	bne	12d04 <strspn@plt+0x1de8>
   12d30:	mov	lr, ip
   12d34:	strd	r2, [sp, #32]
   12d38:	mov	r4, r2
   12d3c:	tst	r0, #1
   12d40:	mov	r2, #69	; 0x45
   12d44:	bic	r5, r3, #-268435456	; 0xf0000000
   12d48:	lsr	sl, r3, #28
   12d4c:	strb	r2, [lr], #1
   12d50:	bne	12ec4 <strspn@plt+0x1fa8>
   12d54:	orrs	r3, r4, r5
   12d58:	mov	r3, #0
   12d5c:	strb	r3, [lr]
   12d60:	beq	12f04 <strspn@plt+0x1fe8>
   12d64:	sub	r2, r1, #20
   12d68:	rsb	r0, r2, #32
   12d6c:	lsr	r3, r4, r2
   12d70:	sub	r1, r1, #52	; 0x34
   12d74:	orr	r3, r3, r5, lsl r0
   12d78:	orr	r3, r3, r5, lsr r1
   12d7c:	lsr	r2, r5, r2
   12d80:	adds	r6, r3, #50	; 0x32
   12d84:	adc	r7, r2, #0
   12d88:	mov	r3, #0
   12d8c:	mov	r2, #100	; 0x64
   12d90:	mov	r0, r6
   12d94:	mov	r1, r7
   12d98:	bl	13888 <strspn@plt+0x296c>
   12d9c:	cmp	r1, #0
   12da0:	cmpeq	r0, #10
   12da4:	mov	r2, r0
   12da8:	mov	r3, r1
   12dac:	addeq	sl, sl, #1
   12db0:	beq	12f04 <strspn@plt+0x1fe8>
   12db4:	cmp	r7, #0
   12db8:	cmpeq	r6, #99	; 0x63
   12dbc:	strd	r2, [sp, #32]
   12dc0:	bls	12f04 <strspn@plt+0x1fe8>
   12dc4:	bl	10ebc <localeconv@plt>
   12dc8:	ldrd	r2, [sp, #32]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12f4c <strspn@plt+0x2030>
   12dd4:	ldr	r0, [r0]
   12dd8:	cmp	r0, #0
   12ddc:	beq	12f58 <strspn@plt+0x203c>
   12de0:	ldrsb	r1, [r0]
   12de4:	cmp	r1, #0
   12de8:	ldreq	r0, [pc, #384]	; 12f70 <strspn@plt+0x2054>
   12dec:	addeq	r0, pc, r0
   12df0:	ldr	r1, [pc, #380]	; 12f74 <strspn@plt+0x2058>
   12df4:	strd	r2, [sp, #16]
   12df8:	add	r1, pc, r1
   12dfc:	add	r4, sp, #68	; 0x44
   12e00:	mov	r3, #32
   12e04:	str	r0, [sp, #8]
   12e08:	str	r1, [sp]
   12e0c:	str	r9, [sp, #24]
   12e10:	str	sl, [sp, #4]
   12e14:	mov	r0, r4
   12e18:	mov	r1, r3
   12e1c:	mov	r2, #1
   12e20:	bl	10f10 <__snprintf_chk@plt>
   12e24:	b	12f2c <strspn@plt+0x2010>
   12e28:	ldr	r4, [pc, #328]	; 12f78 <strspn@plt+0x205c>
   12e2c:	mvn	sl, #0
   12e30:	ldr	fp, [pc, #324]	; 12f7c <strspn@plt+0x2060>
   12e34:	umull	r2, r3, lr, r4
   12e38:	sub	r4, r1, #42	; 0x2a
   12e3c:	strd	r2, [sp, #40]	; 0x28
   12e40:	ldr	r3, [sp, #44]	; 0x2c
   12e44:	lsl	r2, sl, lr
   12e48:	lsr	r3, r3, #3
   12e4c:	str	r3, [sp, #52]	; 0x34
   12e50:	ldr	r3, [sp, #32]
   12e54:	str	r4, [sp, #48]	; 0x30
   12e58:	orr	r4, r2, sl, lsl r4
   12e5c:	lsr	r2, r3, lr
   12e60:	mov	r3, r2
   12e64:	ldr	r2, [sp, #52]	; 0x34
   12e68:	add	fp, pc, fp
   12e6c:	str	r4, [sp, #40]	; 0x28
   12e70:	ldrsb	fp, [fp, r2]
   12e74:	mov	r2, r3
   12e78:	ldr	r3, [sp, #36]	; 0x24
   12e7c:	rsb	r5, lr, #32
   12e80:	ldr	r4, [sp, #40]	; 0x28
   12e84:	orr	r2, r2, r3, lsl r5
   12e88:	orr	r4, r4, sl, lsr r5
   12e8c:	ldr	r3, [sp, #32]
   12e90:	str	r4, [sp, #40]	; 0x28
   12e94:	cmp	r0, #0
   12e98:	bic	r4, r3, sl, lsl lr
   12e9c:	ldr	r0, [sp, #36]	; 0x24
   12ea0:	ldr	r3, [sp, #48]	; 0x30
   12ea4:	mov	lr, ip
   12ea8:	orr	sl, r2, r0, lsr r3
   12eac:	ldr	r3, [sp, #40]	; 0x28
   12eb0:	strb	fp, [lr], #1
   12eb4:	bic	r5, r0, r3
   12eb8:	beq	12d54 <strspn@plt+0x1e38>
   12ebc:	cmp	fp, #66	; 0x42
   12ec0:	beq	12d54 <strspn@plt+0x1e38>
   12ec4:	mov	r3, #105	; 0x69
   12ec8:	strb	r3, [ip, #1]
   12ecc:	mov	r3, #66	; 0x42
   12ed0:	add	lr, ip, #3
   12ed4:	strb	r3, [ip, #2]
   12ed8:	b	12d54 <strspn@plt+0x1e38>
   12edc:	subs	lr, r1, #10
   12ee0:	strd	r2, [sp, #32]
   12ee4:	and	r0, r0, #1
   12ee8:	bne	12e28 <strspn@plt+0x1f0c>
   12eec:	ldr	sl, [sp, #32]
   12ef0:	cmp	r0, #0
   12ef4:	movne	r0, lr
   12ef8:	mov	r3, #66	; 0x42
   12efc:	strb	r0, [ip, #1]
   12f00:	strb	r3, [ip]
   12f04:	ldr	r2, [pc, #116]	; 12f80 <strspn@plt+0x2064>
   12f08:	add	r4, sp, #68	; 0x44
   12f0c:	add	r2, pc, r2
   12f10:	mov	r3, #32
   12f14:	stm	sp, {r2, sl}
   12f18:	str	r9, [sp, #8]
   12f1c:	mov	r0, r4
   12f20:	mov	r1, r3
   12f24:	mov	r2, #1
   12f28:	bl	10f10 <__snprintf_chk@plt>
   12f2c:	mov	r0, r4
   12f30:	bl	10d3c <strdup@plt>
   12f34:	ldr	r2, [sp, #100]	; 0x64
   12f38:	ldr	r3, [r8]
   12f3c:	cmp	r2, r3
   12f40:	bne	12f64 <strspn@plt+0x2048>
   12f44:	add	sp, sp, #108	; 0x6c
   12f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f4c:	ldr	r0, [pc, #48]	; 12f84 <strspn@plt+0x2068>
   12f50:	add	r0, pc, r0
   12f54:	b	12df0 <strspn@plt+0x1ed4>
   12f58:	ldr	r0, [pc, #40]	; 12f88 <strspn@plt+0x206c>
   12f5c:	add	r0, pc, r0
   12f60:	b	12df0 <strspn@plt+0x1ed4>
   12f64:	bl	10d48 <__stack_chk_fail@plt>
   12f68:	andeq	r2, r1, ip, asr #4
   12f6c:	andeq	r0, r0, r0, ror #1
   12f70:	andeq	r1, r0, r0, ror #1
   12f74:	andeq	r1, r0, r0, ror #1
   12f78:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12f7c:	andeq	r1, r0, r8, rrx
   12f80:	ldrdeq	r0, [r0], -r8
   12f84:	andeq	r0, r0, ip, ror pc
   12f88:	andeq	r0, r0, r0, ror pc
   12f8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f90:	subs	r4, r0, #0
   12f94:	beq	13064 <strspn@plt+0x2148>
   12f98:	ldrsb	lr, [r4]
   12f9c:	cmp	lr, #0
   12fa0:	beq	13064 <strspn@plt+0x2148>
   12fa4:	cmp	r1, #0
   12fa8:	clz	ip, r2
   12fac:	lsr	ip, ip, #5
   12fb0:	moveq	r0, #1
   12fb4:	movne	r0, ip
   12fb8:	cmp	r3, #0
   12fbc:	moveq	r0, #1
   12fc0:	cmp	r0, #0
   12fc4:	bne	13064 <strspn@plt+0x2148>
   12fc8:	mov	r8, r3
   12fcc:	mov	r7, r2
   12fd0:	mov	r9, r1
   12fd4:	mov	r5, r0
   12fd8:	b	13034 <strspn@plt+0x2118>
   12fdc:	cmp	r3, #0
   12fe0:	bne	13020 <strspn@plt+0x2104>
   12fe4:	cmn	r4, #1
   12fe8:	add	r6, r4, #1
   12fec:	beq	1306c <strspn@plt+0x2150>
   12ff0:	cmp	r0, r6
   12ff4:	bcs	13064 <strspn@plt+0x2148>
   12ff8:	sub	r1, r6, r0
   12ffc:	blx	r8
   13000:	cmn	r0, #1
   13004:	beq	13064 <strspn@plt+0x2148>
   13008:	str	r0, [r9, r5, lsl #2]
   1300c:	ldrsb	r3, [r6]
   13010:	add	r5, r5, #1
   13014:	cmp	r3, #0
   13018:	beq	1306c <strspn@plt+0x2150>
   1301c:	mov	r0, #0
   13020:	cmn	r4, #1
   13024:	beq	1306c <strspn@plt+0x2150>
   13028:	ldrsb	lr, [r4, #1]!
   1302c:	cmp	lr, #0
   13030:	beq	1306c <strspn@plt+0x2150>
   13034:	cmp	r7, r5
   13038:	mov	r6, r4
   1303c:	bls	13074 <strspn@plt+0x2158>
   13040:	cmp	r0, #0
   13044:	moveq	r0, r4
   13048:	cmp	lr, #44	; 0x2c
   1304c:	ldrsb	r3, [r4, #1]
   13050:	bne	12fdc <strspn@plt+0x20c0>
   13054:	cmp	r3, #0
   13058:	beq	12fe4 <strspn@plt+0x20c8>
   1305c:	cmp	r0, r6
   13060:	bcc	12ff8 <strspn@plt+0x20dc>
   13064:	mvn	r0, #0
   13068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1306c:	mov	r0, r5
   13070:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13074:	mvn	r0, #1
   13078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1307c:	cmp	r0, #0
   13080:	beq	130ec <strspn@plt+0x21d0>
   13084:	push	{r4, lr}
   13088:	mov	r4, r3
   1308c:	cmp	r4, #0
   13090:	ldrsb	ip, [r0]
   13094:	clz	r3, ip
   13098:	lsr	r3, r3, #5
   1309c:	moveq	r3, #1
   130a0:	cmp	r3, #0
   130a4:	bne	130e4 <strspn@plt+0x21c8>
   130a8:	ldr	lr, [r4]
   130ac:	cmp	lr, r2
   130b0:	bhi	130e4 <strspn@plt+0x21c8>
   130b4:	cmp	ip, #43	; 0x2b
   130b8:	strne	r3, [r4]
   130bc:	addeq	r0, r0, #1
   130c0:	ldr	r3, [sp, #8]
   130c4:	addeq	r1, r1, lr, lsl #2
   130c8:	subeq	r2, r2, lr
   130cc:	bl	12f8c <strspn@plt+0x2070>
   130d0:	cmp	r0, #0
   130d4:	ldrgt	r3, [r4]
   130d8:	addgt	r3, r3, r0
   130dc:	strgt	r3, [r4]
   130e0:	pop	{r4, pc}
   130e4:	mvn	r0, #0
   130e8:	pop	{r4, pc}
   130ec:	mvn	r0, #0
   130f0:	bx	lr
   130f4:	cmp	r2, #0
   130f8:	clz	r3, r1
   130fc:	lsr	r3, r3, #5
   13100:	moveq	r3, #1
   13104:	cmp	r0, #0
   13108:	moveq	r3, #1
   1310c:	cmp	r3, #0
   13110:	bne	131dc <strspn@plt+0x22c0>
   13114:	push	{r4, r5, r6, r7, r8, lr}
   13118:	mov	r6, r2
   1311c:	mov	r2, r3
   13120:	ldrsb	r3, [r0]
   13124:	mov	r8, r1
   13128:	mov	r4, r0
   1312c:	mov	r7, #1
   13130:	cmp	r3, #0
   13134:	beq	131a4 <strspn@plt+0x2288>
   13138:	cmp	r2, #0
   1313c:	moveq	r2, r4
   13140:	cmp	r3, #44	; 0x2c
   13144:	mov	r5, r4
   13148:	ldrsb	r3, [r4, #1]!
   1314c:	beq	131ac <strspn@plt+0x2290>
   13150:	cmp	r3, #0
   13154:	bne	131cc <strspn@plt+0x22b0>
   13158:	mov	r5, r4
   1315c:	cmp	r2, r5
   13160:	sub	r1, r5, r2
   13164:	mov	r0, r2
   13168:	bcs	131c4 <strspn@plt+0x22a8>
   1316c:	blx	r6
   13170:	mov	r2, r4
   13174:	cmp	r0, #0
   13178:	and	r1, r0, #7
   1317c:	poplt	{r4, r5, r6, r7, r8, pc}
   13180:	ldrb	r3, [r8, r0, asr #3]
   13184:	orr	r3, r3, r7, lsl r1
   13188:	strb	r3, [r8, r0, asr #3]
   1318c:	ldrsb	r3, [r5]
   13190:	cmp	r3, #0
   13194:	beq	131a4 <strspn@plt+0x2288>
   13198:	ldrsb	r3, [r4]
   1319c:	cmp	r3, #0
   131a0:	bne	13140 <strspn@plt+0x2224>
   131a4:	mov	r0, #0
   131a8:	pop	{r4, r5, r6, r7, r8, pc}
   131ac:	cmp	r3, #0
   131b0:	moveq	r5, r4
   131b4:	cmp	r2, r5
   131b8:	sub	r1, r5, r2
   131bc:	mov	r0, r2
   131c0:	bcc	1316c <strspn@plt+0x2250>
   131c4:	mvn	r0, #0
   131c8:	pop	{r4, r5, r6, r7, r8, pc}
   131cc:	adds	r4, r5, #1
   131d0:	bne	13130 <strspn@plt+0x2214>
   131d4:	mov	r0, #0
   131d8:	pop	{r4, r5, r6, r7, r8, pc}
   131dc:	mvn	r0, #21
   131e0:	bx	lr
   131e4:	cmp	r2, #0
   131e8:	clz	r3, r1
   131ec:	lsr	r3, r3, #5
   131f0:	moveq	r3, #1
   131f4:	cmp	r0, #0
   131f8:	moveq	r3, #1
   131fc:	cmp	r3, #0
   13200:	bne	132c4 <strspn@plt+0x23a8>
   13204:	push	{r4, r5, r6, r7, r8, lr}
   13208:	mov	r6, r2
   1320c:	mov	r2, r3
   13210:	ldrsb	r3, [r0]
   13214:	mov	r7, r1
   13218:	mov	r4, r0
   1321c:	cmp	r3, #0
   13220:	beq	1328c <strspn@plt+0x2370>
   13224:	cmp	r2, #0
   13228:	moveq	r2, r4
   1322c:	cmp	r3, #44	; 0x2c
   13230:	mov	r5, r4
   13234:	ldrsb	r3, [r4, #1]!
   13238:	beq	13294 <strspn@plt+0x2378>
   1323c:	cmp	r3, #0
   13240:	bne	132b4 <strspn@plt+0x2398>
   13244:	mov	r5, r4
   13248:	cmp	r2, r5
   1324c:	sub	r1, r5, r2
   13250:	mov	r0, r2
   13254:	bcs	132ac <strspn@plt+0x2390>
   13258:	blx	r6
   1325c:	mov	r2, r4
   13260:	cmp	r0, #0
   13264:	poplt	{r4, r5, r6, r7, r8, pc}
   13268:	ldr	r3, [r7]
   1326c:	orr	r3, r3, r0
   13270:	str	r3, [r7]
   13274:	ldrsb	r3, [r5]
   13278:	cmp	r3, #0
   1327c:	beq	1328c <strspn@plt+0x2370>
   13280:	ldrsb	r3, [r4]
   13284:	cmp	r3, #0
   13288:	bne	1322c <strspn@plt+0x2310>
   1328c:	mov	r0, #0
   13290:	pop	{r4, r5, r6, r7, r8, pc}
   13294:	cmp	r3, #0
   13298:	moveq	r5, r4
   1329c:	cmp	r2, r5
   132a0:	sub	r1, r5, r2
   132a4:	mov	r0, r2
   132a8:	bcc	13258 <strspn@plt+0x233c>
   132ac:	mvn	r0, #0
   132b0:	pop	{r4, r5, r6, r7, r8, pc}
   132b4:	adds	r4, r5, #1
   132b8:	bne	1321c <strspn@plt+0x2300>
   132bc:	mov	r0, #0
   132c0:	pop	{r4, r5, r6, r7, r8, pc}
   132c4:	mvn	r0, #21
   132c8:	bx	lr
   132cc:	ldr	ip, [pc, #396]	; 13460 <strspn@plt+0x2544>
   132d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132d4:	add	ip, pc, ip
   132d8:	ldr	lr, [pc, #388]	; 13464 <strspn@plt+0x2548>
   132dc:	sub	sp, sp, #8
   132e0:	mov	r9, r3
   132e4:	ldr	r5, [ip, lr]
   132e8:	mov	sl, #0
   132ec:	subs	r4, r0, #0
   132f0:	ldr	r3, [r5]
   132f4:	mov	r7, r1
   132f8:	str	sl, [sp]
   132fc:	mov	r1, ip
   13300:	str	r3, [sp, #4]
   13304:	beq	13378 <strspn@plt+0x245c>
   13308:	str	r9, [r7]
   1330c:	str	r9, [r2]
   13310:	mov	r6, r2
   13314:	bl	10dfc <__errno_location@plt>
   13318:	str	sl, [r0]
   1331c:	ldrsb	r3, [r4]
   13320:	mov	r8, r0
   13324:	cmp	r3, #58	; 0x3a
   13328:	beq	13394 <strspn@plt+0x2478>
   1332c:	mov	sl, sp
   13330:	mov	r1, sl
   13334:	mov	r2, #10
   13338:	mov	r0, r4
   1333c:	bl	10cc4 <strtol@plt>
   13340:	str	r0, [r7]
   13344:	str	r0, [r6]
   13348:	ldr	r0, [r8]
   1334c:	cmp	r0, #0
   13350:	bne	133e4 <strspn@plt+0x24c8>
   13354:	ldr	r2, [sp]
   13358:	cmp	r2, #0
   1335c:	cmpne	r2, r4
   13360:	beq	133e4 <strspn@plt+0x24c8>
   13364:	ldrsb	r3, [r2]
   13368:	cmp	r3, #58	; 0x3a
   1336c:	beq	133ec <strspn@plt+0x24d0>
   13370:	cmp	r3, #45	; 0x2d
   13374:	beq	133fc <strspn@plt+0x24e0>
   13378:	mov	r0, #0
   1337c:	ldr	r2, [sp, #4]
   13380:	ldr	r3, [r5]
   13384:	cmp	r2, r3
   13388:	bne	1345c <strspn@plt+0x2540>
   1338c:	add	sp, sp, #8
   13390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13394:	add	r4, r4, #1
   13398:	mov	r0, r4
   1339c:	mov	r2, #10
   133a0:	mov	r1, sp
   133a4:	bl	10cc4 <strtol@plt>
   133a8:	str	r0, [r6]
   133ac:	ldr	r3, [r8]
   133b0:	cmp	r3, #0
   133b4:	bne	133e4 <strspn@plt+0x24c8>
   133b8:	ldr	r3, [sp]
   133bc:	cmp	r3, #0
   133c0:	beq	133e4 <strspn@plt+0x24c8>
   133c4:	ldrsb	r2, [r3]
   133c8:	sub	r3, r3, r4
   133cc:	clz	r3, r3
   133d0:	cmp	r2, #0
   133d4:	lsr	r3, r3, #5
   133d8:	movne	r3, #1
   133dc:	cmp	r3, #0
   133e0:	beq	13378 <strspn@plt+0x245c>
   133e4:	mvn	r0, #0
   133e8:	b	1337c <strspn@plt+0x2460>
   133ec:	ldrsb	r3, [r2, #1]
   133f0:	cmp	r3, #0
   133f4:	streq	r9, [r6]
   133f8:	beq	1337c <strspn@plt+0x2460>
   133fc:	mov	r3, #0
   13400:	add	r4, r2, #1
   13404:	str	r3, [r8]
   13408:	mov	r1, sl
   1340c:	mov	r0, r4
   13410:	mov	r2, #10
   13414:	str	r3, [sp]
   13418:	bl	10cc4 <strtol@plt>
   1341c:	str	r0, [r6]
   13420:	ldr	r3, [r8]
   13424:	cmp	r3, #0
   13428:	bne	133e4 <strspn@plt+0x24c8>
   1342c:	ldr	r2, [sp]
   13430:	cmp	r2, #0
   13434:	beq	133e4 <strspn@plt+0x24c8>
   13438:	ldrsb	r3, [r2]
   1343c:	sub	r2, r2, r4
   13440:	clz	r2, r2
   13444:	cmp	r3, #0
   13448:	lsr	r2, r2, #5
   1344c:	movne	r2, #1
   13450:	cmp	r2, #0
   13454:	beq	13378 <strspn@plt+0x245c>
   13458:	b	133e4 <strspn@plt+0x24c8>
   1345c:	bl	10d48 <__stack_chk_fail@plt>
   13460:	andeq	r1, r1, r8, lsr ip
   13464:	andeq	r0, r0, r0, ror #1
   13468:	ldr	r3, [pc, #244]	; 13564 <strspn@plt+0x2648>
   1346c:	ldr	r2, [pc, #244]	; 13568 <strspn@plt+0x264c>
   13470:	add	r3, pc, r3
   13474:	push	{r4, r5, r6, r7, r8, r9, lr}
   13478:	sub	sp, sp, #20
   1347c:	ldr	r9, [r3, r2]
   13480:	cmp	r0, #0
   13484:	cmpne	r1, #0
   13488:	ldr	r3, [r9]
   1348c:	str	r3, [sp, #12]
   13490:	beq	13558 <strspn@plt+0x263c>
   13494:	mov	r4, r1
   13498:	add	r8, sp, #4
   1349c:	add	r7, sp, #8
   134a0:	b	134e0 <strspn@plt+0x25c4>
   134a4:	cmp	r4, r3
   134a8:	bne	13558 <strspn@plt+0x263c>
   134ac:	mov	r2, r4
   134b0:	mov	r1, r6
   134b4:	mov	r0, r5
   134b8:	bl	10ef8 <strncmp@plt>
   134bc:	cmp	r0, #0
   134c0:	bne	13558 <strspn@plt+0x263c>
   134c4:	adds	r0, r5, r4
   134c8:	moveq	r3, #0
   134cc:	movne	r3, #1
   134d0:	adds	r4, r6, r4
   134d4:	moveq	r3, #0
   134d8:	cmp	r3, #0
   134dc:	beq	13558 <strspn@plt+0x263c>
   134e0:	mov	r1, r8
   134e4:	bl	118e8 <strspn@plt+0x9cc>
   134e8:	mov	r1, r7
   134ec:	mov	r5, r0
   134f0:	mov	r0, r4
   134f4:	bl	118e8 <strspn@plt+0x9cc>
   134f8:	ldr	r4, [sp, #4]
   134fc:	ldr	r3, [sp, #8]
   13500:	mov	r6, r0
   13504:	adds	r0, r4, r3
   13508:	beq	1353c <strspn@plt+0x2620>
   1350c:	cmp	r0, #1
   13510:	bne	134a4 <strspn@plt+0x2588>
   13514:	cmp	r5, #0
   13518:	beq	13528 <strspn@plt+0x260c>
   1351c:	ldrsb	r2, [r5]
   13520:	cmp	r2, #47	; 0x2f
   13524:	beq	13540 <strspn@plt+0x2624>
   13528:	cmp	r6, #0
   1352c:	beq	134a4 <strspn@plt+0x2588>
   13530:	ldrsb	r2, [r6]
   13534:	cmp	r2, #47	; 0x2f
   13538:	bne	134a4 <strspn@plt+0x2588>
   1353c:	mov	r0, #1
   13540:	ldr	r2, [sp, #12]
   13544:	ldr	r3, [r9]
   13548:	cmp	r2, r3
   1354c:	bne	13560 <strspn@plt+0x2644>
   13550:	add	sp, sp, #20
   13554:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13558:	mov	r0, #0
   1355c:	b	13540 <strspn@plt+0x2624>
   13560:	bl	10d48 <__stack_chk_fail@plt>
   13564:	muleq	r1, ip, sl
   13568:	andeq	r0, r0, r0, ror #1
   1356c:	orrs	r3, r0, r1
   13570:	beq	135ec <strspn@plt+0x26d0>
   13574:	cmp	r0, #0
   13578:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1357c:	mov	r4, r1
   13580:	mov	r5, r0
   13584:	beq	135f8 <strspn@plt+0x26dc>
   13588:	cmp	r1, #0
   1358c:	beq	13608 <strspn@plt+0x26ec>
   13590:	mov	r6, r2
   13594:	bl	10dd8 <strlen@plt>
   13598:	mvn	r3, r0
   1359c:	cmp	r6, r3
   135a0:	mov	r7, r0
   135a4:	movhi	r8, #0
   135a8:	bhi	135e4 <strspn@plt+0x26c8>
   135ac:	add	r9, r6, r0
   135b0:	add	r0, r9, #1
   135b4:	bl	10d78 <malloc@plt>
   135b8:	subs	r8, r0, #0
   135bc:	beq	135e4 <strspn@plt+0x26c8>
   135c0:	mov	r1, r5
   135c4:	mov	r2, r7
   135c8:	bl	10d18 <memcpy@plt>
   135cc:	mov	r2, r6
   135d0:	mov	r1, r4
   135d4:	add	r0, r8, r7
   135d8:	bl	10d18 <memcpy@plt>
   135dc:	mov	r3, #0
   135e0:	strb	r3, [r8, r9]
   135e4:	mov	r0, r8
   135e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135ec:	ldr	r0, [pc, #28]	; 13610 <strspn@plt+0x26f4>
   135f0:	add	r0, pc, r0
   135f4:	b	10d3c <strdup@plt>
   135f8:	mov	r0, r4
   135fc:	mov	r1, r2
   13600:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13604:	b	10d00 <strndup@plt>
   13608:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1360c:	b	10d3c <strdup@plt>
   13610:	ldrdeq	r0, [r0], -ip
   13614:	push	{r4, r5, r6, lr}
   13618:	subs	r4, r1, #0
   1361c:	mov	r5, r0
   13620:	moveq	r2, r4
   13624:	beq	13634 <strspn@plt+0x2718>
   13628:	mov	r0, r4
   1362c:	bl	10dd8 <strlen@plt>
   13630:	mov	r2, r0
   13634:	mov	r1, r4
   13638:	mov	r0, r5
   1363c:	pop	{r4, r5, r6, lr}
   13640:	b	1356c <strspn@plt+0x2650>
   13644:	push	{r1, r2, r3}
   13648:	ldr	r1, [pc, #132]	; 136d4 <strspn@plt+0x27b8>
   1364c:	ldr	r3, [pc, #132]	; 136d8 <strspn@plt+0x27bc>
   13650:	add	r1, pc, r1
   13654:	push	{r4, r5, lr}
   13658:	mov	r5, r0
   1365c:	ldr	r4, [r1, r3]
   13660:	sub	sp, sp, #16
   13664:	add	ip, sp, #32
   13668:	ldr	r0, [r4]
   1366c:	ldr	r2, [sp, #28]
   13670:	str	r0, [sp, #12]
   13674:	mov	r3, ip
   13678:	add	r0, sp, #8
   1367c:	mov	r1, #1
   13680:	str	ip, [sp, #4]
   13684:	bl	10e14 <__vasprintf_chk@plt>
   13688:	subs	r2, r0, #0
   1368c:	movlt	r5, #0
   13690:	blt	136ac <strspn@plt+0x2790>
   13694:	mov	r0, r5
   13698:	ldr	r1, [sp, #8]
   1369c:	bl	1356c <strspn@plt+0x2650>
   136a0:	mov	r5, r0
   136a4:	ldr	r0, [sp, #8]
   136a8:	bl	10cdc <free@plt>
   136ac:	ldr	r2, [sp, #12]
   136b0:	ldr	r3, [r4]
   136b4:	mov	r0, r5
   136b8:	cmp	r2, r3
   136bc:	bne	136d0 <strspn@plt+0x27b4>
   136c0:	add	sp, sp, #16
   136c4:	pop	{r4, r5, lr}
   136c8:	add	sp, sp, #12
   136cc:	bx	lr
   136d0:	bl	10d48 <__stack_chk_fail@plt>
   136d4:			; <UNDEFINED> instruction: 0x000118bc
   136d8:	andeq	r0, r0, r0, ror #1
   136dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136e0:	mov	r6, r0
   136e4:	ldr	r0, [pc, #348]	; 13848 <strspn@plt+0x292c>
   136e8:	ldr	ip, [pc, #348]	; 1384c <strspn@plt+0x2930>
   136ec:	add	r0, pc, r0
   136f0:	ldr	r5, [r6]
   136f4:	ldr	r8, [r0, ip]
   136f8:	sub	sp, sp, #8
   136fc:	ldrsb	r4, [r5]
   13700:	mov	r9, r2
   13704:	ldr	r2, [r8]
   13708:	cmp	r4, #0
   1370c:	mov	r7, r1
   13710:	str	r2, [sp, #4]
   13714:	mov	r1, r0
   13718:	beq	137c8 <strspn@plt+0x28ac>
   1371c:	mov	r0, r5
   13720:	mov	r1, r9
   13724:	mov	sl, r3
   13728:	bl	10f1c <strspn@plt>
   1372c:	add	r4, r5, r0
   13730:	ldrsb	r5, [r5, r0]
   13734:	cmp	r5, #0
   13738:	beq	13830 <strspn@plt+0x2914>
   1373c:	cmp	sl, #0
   13740:	beq	137e4 <strspn@plt+0x28c8>
   13744:	ldr	r0, [pc, #260]	; 13850 <strspn@plt+0x2934>
   13748:	mov	r1, r5
   1374c:	add	r0, pc, r0
   13750:	bl	10de4 <strchr@plt>
   13754:	cmp	r0, #0
   13758:	beq	13800 <strspn@plt+0x28e4>
   1375c:	add	sl, r4, #1
   13760:	mov	r3, #0
   13764:	mov	r0, sl
   13768:	mov	r1, sp
   1376c:	strb	r5, [sp]
   13770:	strb	r3, [sp, #1]
   13774:	bl	11988 <strspn@plt+0xa6c>
   13778:	add	r3, r4, r0
   1377c:	str	r0, [r7]
   13780:	ldrsb	r3, [r3, #1]
   13784:	subs	r5, r5, r3
   13788:	movne	r5, #1
   1378c:	cmp	r3, #0
   13790:	moveq	r5, #1
   13794:	cmp	r5, #0
   13798:	bne	13830 <strspn@plt+0x2914>
   1379c:	add	r0, r0, #2
   137a0:	add	r5, r4, r0
   137a4:	ldrsb	r1, [r4, r0]
   137a8:	cmp	r1, #0
   137ac:	beq	137c0 <strspn@plt+0x28a4>
   137b0:	mov	r0, r9
   137b4:	bl	10de4 <strchr@plt>
   137b8:	cmp	r0, #0
   137bc:	beq	13830 <strspn@plt+0x2914>
   137c0:	mov	r4, sl
   137c4:	str	r5, [r6]
   137c8:	ldr	r2, [sp, #4]
   137cc:	ldr	r3, [r8]
   137d0:	mov	r0, r4
   137d4:	cmp	r2, r3
   137d8:	bne	13844 <strspn@plt+0x2928>
   137dc:	add	sp, sp, #8
   137e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137e4:	mov	r1, r9
   137e8:	mov	r0, r4
   137ec:	bl	10cd0 <strcspn@plt>
   137f0:	add	r3, r4, r0
   137f4:	str	r0, [r7]
   137f8:	str	r3, [r6]
   137fc:	b	137c8 <strspn@plt+0x28ac>
   13800:	mov	r1, r9
   13804:	mov	r0, r4
   13808:	bl	11988 <strspn@plt+0xa6c>
   1380c:	str	r0, [r7]
   13810:	ldrsb	r1, [r4, r0]
   13814:	add	r5, r4, r0
   13818:	cmp	r1, #0
   1381c:	beq	1383c <strspn@plt+0x2920>
   13820:	mov	r0, r9
   13824:	bl	10de4 <strchr@plt>
   13828:	cmp	r0, #0
   1382c:	bne	1383c <strspn@plt+0x2920>
   13830:	str	r4, [r6]
   13834:	mov	r4, #0
   13838:	b	137c8 <strspn@plt+0x28ac>
   1383c:	str	r5, [r6]
   13840:	b	137c8 <strspn@plt+0x28ac>
   13844:	bl	10d48 <__stack_chk_fail@plt>
   13848:	andeq	r1, r1, r0, lsr #16
   1384c:	andeq	r0, r0, r0, ror #1
   13850:	andeq	r0, r0, r0, lsr #15
   13854:	push	{r4, lr}
   13858:	mov	r4, r0
   1385c:	b	13868 <strspn@plt+0x294c>
   13860:	cmp	r0, #10
   13864:	beq	13880 <strspn@plt+0x2964>
   13868:	mov	r0, r4
   1386c:	bl	10e38 <fgetc@plt>
   13870:	cmn	r0, #1
   13874:	bne	13860 <strspn@plt+0x2944>
   13878:	mov	r0, #1
   1387c:	pop	{r4, pc}
   13880:	mov	r0, #0
   13884:	pop	{r4, pc}
   13888:	cmp	r3, #0
   1388c:	cmpeq	r2, #0
   13890:	bne	138a8 <strspn@plt+0x298c>
   13894:	cmp	r1, #0
   13898:	cmpeq	r0, #0
   1389c:	mvnne	r1, #0
   138a0:	mvnne	r0, #0
   138a4:	b	138c4 <strspn@plt+0x29a8>
   138a8:	sub	sp, sp, #8
   138ac:	push	{sp, lr}
   138b0:	bl	138d4 <strspn@plt+0x29b8>
   138b4:	ldr	lr, [sp, #4]
   138b8:	add	sp, sp, #8
   138bc:	pop	{r2, r3}
   138c0:	bx	lr
   138c4:	push	{r1, lr}
   138c8:	mov	r0, #8
   138cc:	bl	10cac <raise@plt>
   138d0:	pop	{r1, pc}
   138d4:	cmp	r1, r3
   138d8:	cmpeq	r0, r2
   138dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138e0:	mov	r4, r0
   138e4:	movcc	r0, #0
   138e8:	mov	r5, r1
   138ec:	ldr	lr, [sp, #36]	; 0x24
   138f0:	movcc	r1, r0
   138f4:	bcc	139f0 <strspn@plt+0x2ad4>
   138f8:	cmp	r3, #0
   138fc:	clzeq	ip, r2
   13900:	clzne	ip, r3
   13904:	addeq	ip, ip, #32
   13908:	cmp	r5, #0
   1390c:	clzeq	r1, r4
   13910:	addeq	r1, r1, #32
   13914:	clzne	r1, r5
   13918:	sub	ip, ip, r1
   1391c:	sub	sl, ip, #32
   13920:	lsl	r9, r3, ip
   13924:	rsb	fp, ip, #32
   13928:	orr	r9, r9, r2, lsl sl
   1392c:	orr	r9, r9, r2, lsr fp
   13930:	lsl	r8, r2, ip
   13934:	cmp	r5, r9
   13938:	cmpeq	r4, r8
   1393c:	movcc	r0, #0
   13940:	movcc	r1, r0
   13944:	bcc	13960 <strspn@plt+0x2a44>
   13948:	mov	r0, #1
   1394c:	subs	r4, r4, r8
   13950:	lsl	r1, r0, sl
   13954:	orr	r1, r1, r0, lsr fp
   13958:	lsl	r0, r0, ip
   1395c:	sbc	r5, r5, r9
   13960:	cmp	ip, #0
   13964:	beq	139f0 <strspn@plt+0x2ad4>
   13968:	lsr	r6, r8, #1
   1396c:	orr	r6, r6, r9, lsl #31
   13970:	lsr	r7, r9, #1
   13974:	mov	r2, ip
   13978:	b	1399c <strspn@plt+0x2a80>
   1397c:	subs	r3, r4, r6
   13980:	sbc	r8, r5, r7
   13984:	adds	r3, r3, r3
   13988:	adc	r8, r8, r8
   1398c:	adds	r4, r3, #1
   13990:	adc	r5, r8, #0
   13994:	subs	r2, r2, #1
   13998:	beq	139b8 <strspn@plt+0x2a9c>
   1399c:	cmp	r5, r7
   139a0:	cmpeq	r4, r6
   139a4:	bcs	1397c <strspn@plt+0x2a60>
   139a8:	adds	r4, r4, r4
   139ac:	adc	r5, r5, r5
   139b0:	subs	r2, r2, #1
   139b4:	bne	1399c <strspn@plt+0x2a80>
   139b8:	lsr	r3, r4, ip
   139bc:	orr	r3, r3, r5, lsl fp
   139c0:	lsr	r2, r5, ip
   139c4:	orr	r3, r3, r5, lsr sl
   139c8:	adds	r0, r0, r4
   139cc:	mov	r4, r3
   139d0:	lsl	r3, r2, ip
   139d4:	orr	r3, r3, r4, lsl sl
   139d8:	lsl	ip, r4, ip
   139dc:	orr	r3, r3, r4, lsr fp
   139e0:	adc	r1, r1, r5
   139e4:	subs	r0, r0, ip
   139e8:	mov	r5, r2
   139ec:	sbc	r1, r1, r3
   139f0:	cmp	lr, #0
   139f4:	strdne	r4, [lr]
   139f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a00:	mov	r7, r0
   13a04:	ldr	r6, [pc, #72]	; 13a54 <strspn@plt+0x2b38>
   13a08:	ldr	r5, [pc, #72]	; 13a58 <strspn@plt+0x2b3c>
   13a0c:	add	r6, pc, r6
   13a10:	add	r5, pc, r5
   13a14:	sub	r6, r6, r5
   13a18:	mov	r8, r1
   13a1c:	mov	r9, r2
   13a20:	bl	10c8c <raise@plt-0x20>
   13a24:	asrs	r6, r6, #2
   13a28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a2c:	mov	r4, #0
   13a30:	add	r4, r4, #1
   13a34:	ldr	r3, [r5], #4
   13a38:	mov	r2, r9
   13a3c:	mov	r1, r8
   13a40:	mov	r0, r7
   13a44:	blx	r3
   13a48:	cmp	r6, r4
   13a4c:	bne	13a30 <strspn@plt+0x2b14>
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a54:	strdeq	r1, [r1], -r8
   13a58:	strdeq	r1, [r1], -r0
   13a5c:	bx	lr
   13a60:	ldr	r3, [pc, #12]	; 13a74 <strspn@plt+0x2b58>
   13a64:	mov	r1, #0
   13a68:	add	r3, pc, r3
   13a6c:	ldr	r2, [r3]
   13a70:	b	10e08 <__cxa_atexit@plt>
   13a74:	muleq	r1, r4, r5

Disassembly of section .fini:

00013a78 <.fini>:
   13a78:	push	{r3, lr}
   13a7c:	pop	{r3, pc}
