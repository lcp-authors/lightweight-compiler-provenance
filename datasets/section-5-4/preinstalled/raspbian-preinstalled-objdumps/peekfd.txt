
raspbian-preinstalled/peekfd:     file format elf32-littlearm


Disassembly of section .init:

00010798 <.init>:
   10798:	push	{r3, lr}
   1079c:	bl	11030 <__snprintf_chk@plt+0x734>
   107a0:	pop	{r3, pc}

Disassembly of section .plt:

000107a4 <raise@plt-0x14>:
   107a4:	push	{lr}		; (str lr, [sp, #-4]!)
   107a8:	ldr	lr, [pc, #4]	; 107b4 <raise@plt-0x4>
   107ac:	add	lr, pc, lr
   107b0:	ldr	pc, [lr, #8]!
   107b4:	andeq	r1, r1, ip, asr #16

000107b8 <raise@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2124]!	; 0x84c

000107c4 <strtol@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2116]!	; 0x844

000107d0 <fflush@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2108]!	; 0x83c

000107dc <free@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2100]!	; 0x834

000107e8 <memcpy@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2092]!	; 0x82c

000107f4 <signal@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2084]!	; 0x824

00010800 <dcgettext@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2076]!	; 0x81c

0001080c <__stack_chk_fail@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2068]!	; 0x814

00010818 <wait@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2060]!	; 0x80c

00010824 <textdomain@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2052]!	; 0x804

00010830 <_IO_putc@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #69632	; 0x11000
   10838:	ldr	pc, [ip, #2044]!	; 0x7fc

0001083c <opendir@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #69632	; 0x11000
   10844:	ldr	pc, [ip, #2036]!	; 0x7f4

00010848 <puts@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #69632	; 0x11000
   10850:	ldr	pc, [ip, #2028]!	; 0x7ec

00010854 <malloc@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #69632	; 0x11000
   1085c:	ldr	pc, [ip, #2020]!	; 0x7e4

00010860 <__libc_start_main@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #69632	; 0x11000
   10868:	ldr	pc, [ip, #2012]!	; 0x7dc

0001086c <__gmon_start__@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #2004]!	; 0x7d4

00010878 <getopt_long@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #1996]!	; 0x7cc

00010884 <__ctype_b_loc@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1988]!	; 0x7c4

00010890 <putchar@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1980]!	; 0x7bc

0001089c <__printf_chk@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1972]!	; 0x7b4

000108a8 <__fprintf_chk@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1964]!	; 0x7ac

000108b4 <setlocale@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1956]!	; 0x7a4

000108c0 <readdir64@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1948]!	; 0x79c

000108cc <bindtextdomain@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1940]!	; 0x794

000108d8 <abort@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1932]!	; 0x78c

000108e4 <ptrace@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1924]!	; 0x784

000108f0 <closedir@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1916]!	; 0x77c

000108fc <__snprintf_chk@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1908]!	; 0x774

Disassembly of section .text:

00010908 <.text>:
   10908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1090c:	sub	sp, sp, #276	; 0x114
   10910:	ldr	sl, [pc, #1680]	; 10fa8 <__snprintf_chk@plt+0x6ac>
   10914:	mov	r2, #112	; 0x70
   10918:	mov	r6, r0
   1091c:	ldr	r3, [sl]
   10920:	mov	r9, r1
   10924:	add	r0, sp, #132	; 0x84
   10928:	ldr	r1, [pc, #1660]	; 10fac <__snprintf_chk@plt+0x6b0>
   1092c:	str	r3, [sp, #268]	; 0x10c
   10930:	bl	107e8 <memcpy@plt>
   10934:	ldr	r1, [pc, #1652]	; 10fb0 <__snprintf_chk@plt+0x6b4>
   10938:	mov	r0, #6
   1093c:	bl	108b4 <setlocale@plt>
   10940:	ldr	r1, [pc, #1644]	; 10fb4 <__snprintf_chk@plt+0x6b8>
   10944:	ldr	r0, [pc, #1644]	; 10fb8 <__snprintf_chk@plt+0x6bc>
   10948:	bl	108cc <bindtextdomain@plt>
   1094c:	ldr	r0, [pc, #1636]	; 10fb8 <__snprintf_chk@plt+0x6bc>
   10950:	bl	10824 <textdomain@plt>
   10954:	cmp	r6, #1
   10958:	ble	10aa4 <__snprintf_chk@plt+0x1a8>
   1095c:	mov	r3, #0
   10960:	ldr	fp, [pc, #1620]	; 10fbc <__snprintf_chk@plt+0x6c0>
   10964:	mov	r5, r3
   10968:	mov	r4, r3
   1096c:	str	r3, [sp, #24]
   10970:	str	r3, [sp, #52]	; 0x34
   10974:	str	r3, [sp, #40]	; 0x28
   10978:	str	r3, [sp, #48]	; 0x30
   1097c:	mov	r8, #0
   10980:	str	r8, [sp]
   10984:	add	r3, sp, #132	; 0x84
   10988:	mov	r2, fp
   1098c:	mov	r1, r9
   10990:	mov	r0, r6
   10994:	bl	10878 <getopt_long@plt>
   10998:	cmn	r0, #1
   1099c:	beq	10b10 <__snprintf_chk@plt+0x214>
   109a0:	sub	r0, r0, #56	; 0x38
   109a4:	cmp	r0, #60	; 0x3c
   109a8:	ldrls	pc, [pc, r0, lsl #2]
   109ac:	b	1097c <__snprintf_chk@plt+0x80>
   109b0:	strdeq	r0, [r1], -r4
   109b4:	andeq	r0, r1, ip, ror r9
   109b8:	andeq	r0, r1, ip, ror r9
   109bc:	andeq	r0, r1, ip, ror r9
   109c0:	andeq	r0, r1, ip, ror r9
   109c4:	andeq	r0, r1, ip, ror r9
   109c8:	andeq	r0, r1, ip, ror r9
   109cc:	andeq	r0, r1, r4, lsr #21
   109d0:	andeq	r0, r1, ip, ror r9
   109d4:	andeq	r0, r1, ip, ror r9
   109d8:	andeq	r0, r1, ip, ror r9
   109dc:	andeq	r0, r1, ip, ror r9
   109e0:	andeq	r0, r1, ip, ror r9
   109e4:	andeq	r0, r1, ip, ror r9
   109e8:	andeq	r0, r1, ip, ror r9
   109ec:	andeq	r0, r1, ip, ror r9
   109f0:	andeq	r0, r1, ip, ror r9
   109f4:	andeq	r0, r1, ip, ror r9
   109f8:	andeq	r0, r1, ip, ror r9
   109fc:	andeq	r0, r1, ip, ror r9
   10a00:	andeq	r0, r1, ip, ror r9
   10a04:	andeq	r0, r1, ip, ror r9
   10a08:	andeq	r0, r1, ip, ror r9
   10a0c:	andeq	r0, r1, ip, ror r9
   10a10:	andeq	r0, r1, ip, ror r9
   10a14:	andeq	r0, r1, ip, ror r9
   10a18:	andeq	r0, r1, ip, ror r9
   10a1c:	andeq	r0, r1, ip, ror r9
   10a20:	andeq	r0, r1, ip, ror r9
   10a24:	andeq	r0, r1, ip, ror r9
   10a28:	andeq	r0, r1, r8, ror #21
   10a2c:	andeq	r0, r1, ip, ror r9
   10a30:	andeq	r0, r1, ip, ror r9
   10a34:	andeq	r0, r1, ip, ror r9
   10a38:	andeq	r0, r1, ip, ror r9
   10a3c:	andeq	r0, r1, ip, ror r9
   10a40:	andeq	r0, r1, ip, ror r9
   10a44:	andeq	r0, r1, ip, ror r9
   10a48:	andeq	r0, r1, ip, ror r9
   10a4c:	andeq	r0, r1, ip, ror r9
   10a50:	andeq	r0, r1, ip, ror r9
   10a54:	andeq	r0, r1, ip, ror r9
   10a58:	andeq	r0, r1, ip, ror r9
   10a5c:	ldrdeq	r0, [r1], -ip
   10a60:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a64:	andeq	r0, r1, ip, ror r9
   10a68:	andeq	r0, r1, ip, ror r9
   10a6c:	andeq	r0, r1, ip, ror r9
   10a70:	andeq	r0, r1, r4, lsr #21
   10a74:	andeq	r0, r1, ip, ror r9
   10a78:	andeq	r0, r1, ip, ror r9
   10a7c:	andeq	r0, r1, ip, ror r9
   10a80:	andeq	r0, r1, ip, ror r9
   10a84:	andeq	r0, r1, ip, ror r9
   10a88:	andeq	r0, r1, r4, asr #21
   10a8c:	andeq	r0, r1, ip, ror r9
   10a90:	andeq	r0, r1, ip, ror r9
   10a94:	andeq	r0, r1, ip, ror r9
   10a98:	andeq	r0, r1, ip, ror r9
   10a9c:	andeq	r0, r1, ip, ror r9
   10aa0:	andeq	r0, r1, r0, lsl #22
   10aa4:	bl	11270 <__snprintf_chk@plt+0x974>
   10aa8:	mov	r0, #1
   10aac:	ldr	r2, [sp, #268]	; 0x10c
   10ab0:	ldr	r3, [sl]
   10ab4:	cmp	r2, r3
   10ab8:	bne	10f9c <__snprintf_chk@plt+0x6a0>
   10abc:	add	sp, sp, #276	; 0x114
   10ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac4:	mov	r3, #1
   10ac8:	str	r3, [sp, #40]	; 0x28
   10acc:	b	1097c <__snprintf_chk@plt+0x80>
   10ad0:	mov	r3, #1
   10ad4:	str	r3, [sp, #24]
   10ad8:	b	1097c <__snprintf_chk@plt+0x80>
   10adc:	mov	r5, #1
   10ae0:	mov	r4, r5
   10ae4:	b	1097c <__snprintf_chk@plt+0x80>
   10ae8:	bl	111e0 <__snprintf_chk@plt+0x8e4>
   10aec:	mov	r0, #1
   10af0:	b	10aac <__snprintf_chk@plt+0x1b0>
   10af4:	mov	r3, #1
   10af8:	str	r3, [sp, #48]	; 0x30
   10afc:	b	1097c <__snprintf_chk@plt+0x80>
   10b00:	mov	r3, #1
   10b04:	str	r3, [sp, #52]	; 0x34
   10b08:	mov	r5, r3
   10b0c:	b	1097c <__snprintf_chk@plt+0x80>
   10b10:	ldr	fp, [pc, #1192]	; 10fc0 <__snprintf_chk@plt+0x6c4>
   10b14:	ldr	r3, [fp]
   10b18:	cmp	r3, r6
   10b1c:	bge	10f8c <__snprintf_chk@plt+0x690>
   10b20:	add	ip, r3, #1
   10b24:	ldr	r0, [r9, r3, lsl #2]
   10b28:	mov	r2, #10
   10b2c:	mov	r1, r8
   10b30:	str	ip, [fp]
   10b34:	bl	107c4 <strtol@plt>
   10b38:	ldr	r3, [fp]
   10b3c:	cmp	r3, r6
   10b40:	str	r0, [sp, #12]
   10b44:	blt	10c74 <__snprintf_chk@plt+0x378>
   10b48:	ldr	r3, [pc, #1140]	; 10fc4 <__snprintf_chk@plt+0x6c8>
   10b4c:	mov	r6, r8
   10b50:	str	r3, [sp, #16]
   10b54:	ldr	r0, [sp, #12]
   10b58:	bl	11154 <__snprintf_chk@plt+0x858>
   10b5c:	ldr	r3, [sp, #52]	; 0x34
   10b60:	cmp	r3, #0
   10b64:	bne	10f18 <__snprintf_chk@plt+0x61c>
   10b68:	ldr	r7, [sp, #16]
   10b6c:	ldr	r3, [r7]
   10b70:	cmp	r3, #0
   10b74:	moveq	r0, #1
   10b78:	beq	10aac <__snprintf_chk@plt+0x1b0>
   10b7c:	ldr	r1, [pc, #1092]	; 10fc8 <__snprintf_chk@plt+0x6cc>
   10b80:	mov	r0, #2
   10b84:	bl	107f4 <signal@plt>
   10b88:	ldr	r9, [pc, #1084]	; 10fcc <__snprintf_chk@plt+0x6d0>
   10b8c:	mov	r8, #0
   10b90:	b	10bac <__snprintf_chk@plt+0x2b0>
   10b94:	mov	r3, #0
   10b98:	mov	r2, r3
   10b9c:	ldr	r1, [r9], #4
   10ba0:	mov	r0, #24
   10ba4:	bl	108e4 <ptrace@plt>
   10ba8:	add	r8, r8, #1
   10bac:	ldr	r3, [r7]
   10bb0:	cmp	r3, r8
   10bb4:	bgt	10b94 <__snprintf_chk@plt+0x298>
   10bb8:	cmp	r6, #0
   10bbc:	moveq	sl, r6
   10bc0:	ldrne	r3, [sp, #16]
   10bc4:	ldrne	r3, [r3, #4]
   10bc8:	ldrne	sl, [r3]
   10bcc:	ldr	r3, [sp, #24]
   10bd0:	eor	r3, r3, #1
   10bd4:	str	r3, [sp, #44]	; 0x2c
   10bd8:	mvn	r3, #0
   10bdc:	str	r3, [sp, #36]	; 0x24
   10be0:	mov	r3, #0
   10be4:	str	r3, [sp, #12]
   10be8:	mov	r3, #3
   10bec:	str	r3, [sp, #20]
   10bf0:	add	r0, sp, #56	; 0x38
   10bf4:	bl	10818 <wait@plt>
   10bf8:	ldrb	r3, [sp, #56]	; 0x38
   10bfc:	cmp	r3, #127	; 0x7f
   10c00:	mov	r7, r0
   10c04:	bne	10bf0 <__snprintf_chk@plt+0x2f4>
   10c08:	mov	r1, r0
   10c0c:	add	r3, sp, #60	; 0x3c
   10c10:	mov	r2, #0
   10c14:	mov	r0, #12
   10c18:	bl	108e4 <ptrace@plt>
   10c1c:	cmp	r4, #0
   10c20:	ldr	r8, [sp, #88]	; 0x58
   10c24:	beq	10c30 <__snprintf_chk@plt+0x334>
   10c28:	cmp	r8, #2
   10c2c:	beq	10cc0 <__snprintf_chk@plt+0x3c4>
   10c30:	cmp	r5, #0
   10c34:	beq	10c40 <__snprintf_chk@plt+0x344>
   10c38:	cmp	r8, #120	; 0x78
   10c3c:	beq	10cc0 <__snprintf_chk@plt+0x3c4>
   10c40:	sub	r3, r8, #3
   10c44:	cmp	r3, #1
   10c48:	bhi	10c5c <__snprintf_chk@plt+0x360>
   10c4c:	ldr	fp, [sp, #68]	; 0x44
   10c50:	ldr	r3, [sp, #60]	; 0x3c
   10c54:	cmp	fp, r3
   10c58:	beq	10cd8 <__snprintf_chk@plt+0x3dc>
   10c5c:	mov	r3, #0
   10c60:	mov	r1, r7
   10c64:	mov	r2, r3
   10c68:	mov	r0, #24
   10c6c:	bl	108e4 <ptrace@plt>
   10c70:	b	10bf0 <__snprintf_chk@plt+0x2f4>
   10c74:	sub	r6, r6, r3
   10c78:	ldr	r7, [pc, #836]	; 10fc4 <__snprintf_chk@plt+0x6c8>
   10c7c:	lsl	r0, r6, #2
   10c80:	str	r7, [sp, #16]
   10c84:	bl	10854 <malloc@plt>
   10c88:	str	r0, [r7, #4]
   10c8c:	ldr	r3, [fp]
   10c90:	mov	r2, #10
   10c94:	add	r3, r8, r3
   10c98:	mov	r1, #0
   10c9c:	ldr	r0, [r9, r3, lsl #2]
   10ca0:	ldr	r3, [sp, #16]
   10ca4:	ldr	r7, [r3, #4]
   10ca8:	bl	107c4 <strtol@plt>
   10cac:	str	r0, [r7, r8, lsl #2]
   10cb0:	add	r8, r8, #1
   10cb4:	cmp	r6, r8
   10cb8:	bne	10c8c <__snprintf_chk@plt+0x390>
   10cbc:	b	10b54 <__snprintf_chk@plt+0x258>
   10cc0:	ldr	r0, [sp, #60]	; 0x3c
   10cc4:	cmp	r0, #0
   10cc8:	ble	10c5c <__snprintf_chk@plt+0x360>
   10ccc:	bl	11154 <__snprintf_chk@plt+0x858>
   10cd0:	ldr	r8, [sp, #88]	; 0x58
   10cd4:	b	10c40 <__snprintf_chk@plt+0x344>
   10cd8:	cmp	r6, #0
   10cdc:	ldr	r9, [sp, #128]	; 0x80
   10ce0:	beq	10d14 <__snprintf_chk@plt+0x418>
   10ce4:	ldr	r3, [sp, #16]
   10ce8:	ldr	r1, [r3, #4]
   10cec:	ldr	r3, [r1]
   10cf0:	cmp	r9, r3
   10cf4:	beq	10d14 <__snprintf_chk@plt+0x418>
   10cf8:	mov	r2, #0
   10cfc:	add	r2, r2, #1
   10d00:	cmp	r6, r2
   10d04:	beq	10c5c <__snprintf_chk@plt+0x360>
   10d08:	ldr	r3, [r1, #4]!
   10d0c:	cmp	r3, r9
   10d10:	bne	10cfc <__snprintf_chk@plt+0x400>
   10d14:	ldr	r3, [sp, #20]
   10d18:	cmp	r9, sl
   10d1c:	cmpeq	r3, r8
   10d20:	beq	10f0c <__snprintf_chk@plt+0x610>
   10d24:	ldr	r3, [sp, #40]	; 0x28
   10d28:	cmp	r3, #0
   10d2c:	bne	10d68 <__snprintf_chk@plt+0x46c>
   10d30:	ldr	r1, [pc, #664]	; 10fd0 <__snprintf_chk@plt+0x6d4>
   10d34:	cmp	r8, #3
   10d38:	mov	r3, r9
   10d3c:	ldr	r2, [pc, #656]	; 10fd4 <__snprintf_chk@plt+0x6d8>
   10d40:	mov	r0, #1
   10d44:	movne	r2, r1
   10d48:	ldr	r1, [pc, #648]	; 10fd8 <__snprintf_chk@plt+0x6dc>
   10d4c:	bl	1089c <__printf_chk@plt>
   10d50:	ldr	r3, [sp, #52]	; 0x34
   10d54:	cmp	r3, #0
   10d58:	bne	10ef8 <__snprintf_chk@plt+0x5fc>
   10d5c:	ldr	r0, [pc, #632]	; 10fdc <__snprintf_chk@plt+0x6e0>
   10d60:	bl	10848 <puts@plt>
   10d64:	ldr	fp, [sp, #68]	; 0x44
   10d68:	ldr	r1, [sp, #12]
   10d6c:	ldr	r3, [sp, #44]	; 0x2c
   10d70:	cmp	r1, #0
   10d74:	moveq	r3, #1
   10d78:	cmp	r3, #0
   10d7c:	bne	10ea0 <__snprintf_chk@plt+0x5a4>
   10d80:	ldr	r3, [sp, #36]	; 0x24
   10d84:	cmp	r3, fp
   10d88:	beq	10ed8 <__snprintf_chk@plt+0x5dc>
   10d8c:	ldr	r0, [sp, #12]
   10d90:	bl	107dc <free@plt>
   10d94:	str	fp, [sp, #36]	; 0x24
   10d98:	mov	r0, fp
   10d9c:	bl	10854 <malloc@plt>
   10da0:	str	r0, [sp, #12]
   10da4:	cmp	fp, #0
   10da8:	beq	10e60 <__snprintf_chk@plt+0x564>
   10dac:	str	r9, [sp, #20]
   10db0:	strd	r4, [sp, #28]
   10db4:	mov	sl, #0
   10db8:	ldr	fp, [sp, #48]	; 0x30
   10dbc:	ldr	r9, [sp, #24]
   10dc0:	ldr	r4, [sp, #12]
   10dc4:	b	10e0c <__snprintf_chk@plt+0x510>
   10dc8:	bl	10884 <__ctype_b_loc@plt>
   10dcc:	uxtb	r2, r5
   10dd0:	lsl	r3, r2, #1
   10dd4:	ldr	r1, [r0]
   10dd8:	ldrh	r3, [r1, r3]
   10ddc:	lsr	r3, r3, #14
   10de0:	cmp	r2, #10
   10de4:	orreq	r3, r3, #1
   10de8:	tst	r3, #1
   10dec:	beq	10e78 <__snprintf_chk@plt+0x57c>
   10df0:	ldr	r1, [pc, #488]	; 10fe0 <__snprintf_chk@plt+0x6e4>
   10df4:	mov	r0, #1
   10df8:	bl	1089c <__printf_chk@plt>
   10dfc:	ldr	r3, [sp, #68]	; 0x44
   10e00:	add	sl, sl, #1
   10e04:	cmp	r3, sl
   10e08:	bls	10e58 <__snprintf_chk@plt+0x55c>
   10e0c:	ldr	r2, [sp, #64]	; 0x40
   10e10:	mov	r3, #0
   10e14:	add	r2, sl, r2
   10e18:	mov	r1, r7
   10e1c:	mov	r0, #1
   10e20:	bl	108e4 <ptrace@plt>
   10e24:	cmp	r9, #0
   10e28:	strbne	r0, [r4, sl]
   10e2c:	cmp	fp, #0
   10e30:	mov	r5, r0
   10e34:	beq	10dc8 <__snprintf_chk@plt+0x4cc>
   10e38:	ldr	r3, [pc, #420]	; 10fe4 <__snprintf_chk@plt+0x6e8>
   10e3c:	uxtb	r0, r0
   10e40:	add	sl, sl, #1
   10e44:	ldr	r1, [r3]
   10e48:	bl	10830 <_IO_putc@plt>
   10e4c:	ldr	r3, [sp, #68]	; 0x44
   10e50:	cmp	r3, sl
   10e54:	bhi	10e0c <__snprintf_chk@plt+0x510>
   10e58:	ldr	r9, [sp, #20]
   10e5c:	ldrd	r4, [sp, #28]
   10e60:	ldr	r3, [pc, #380]	; 10fe4 <__snprintf_chk@plt+0x6e8>
   10e64:	mov	sl, r9
   10e68:	ldr	r0, [r3]
   10e6c:	bl	107d0 <fflush@plt>
   10e70:	str	r8, [sp, #20]
   10e74:	b	10c5c <__snprintf_chk@plt+0x360>
   10e78:	cmp	r2, #13
   10e7c:	beq	10ec0 <__snprintf_chk@plt+0x5c4>
   10e80:	cmp	r2, #127	; 0x7f
   10e84:	beq	10ecc <__snprintf_chk@plt+0x5d0>
   10e88:	cmp	r2, #0
   10e8c:	beq	10dfc <__snprintf_chk@plt+0x500>
   10e90:	ldr	r1, [pc, #336]	; 10fe8 <__snprintf_chk@plt+0x6ec>
   10e94:	mov	r0, #1
   10e98:	bl	1089c <__printf_chk@plt>
   10e9c:	b	10dfc <__snprintf_chk@plt+0x500>
   10ea0:	ldr	r3, [sp, #24]
   10ea4:	cmp	r3, #0
   10ea8:	beq	10da4 <__snprintf_chk@plt+0x4a8>
   10eac:	ldr	r3, [sp, #12]
   10eb0:	cmp	r3, #0
   10eb4:	streq	fp, [sp, #36]	; 0x24
   10eb8:	beq	10d98 <__snprintf_chk@plt+0x49c>
   10ebc:	b	10d8c <__snprintf_chk@plt+0x490>
   10ec0:	mov	r0, #10
   10ec4:	bl	10890 <putchar@plt>
   10ec8:	b	10dfc <__snprintf_chk@plt+0x500>
   10ecc:	mov	r0, #8
   10ed0:	bl	10890 <putchar@plt>
   10ed4:	b	10dfc <__snprintf_chk@plt+0x500>
   10ed8:	mov	r3, fp
   10edc:	ldr	r2, [sp, #64]	; 0x40
   10ee0:	mov	r0, r7
   10ee4:	bl	112a8 <__snprintf_chk@plt+0x9ac>
   10ee8:	cmp	r0, #0
   10eec:	ldrne	fp, [sp, #68]	; 0x44
   10ef0:	beq	10e60 <__snprintf_chk@plt+0x564>
   10ef4:	b	10d8c <__snprintf_chk@plt+0x490>
   10ef8:	mov	r2, r7
   10efc:	ldr	r1, [pc, #232]	; 10fec <__snprintf_chk@plt+0x6f0>
   10f00:	mov	r0, #1
   10f04:	bl	1089c <__printf_chk@plt>
   10f08:	b	10d5c <__snprintf_chk@plt+0x460>
   10f0c:	ldr	r8, [sp, #20]
   10f10:	mov	r9, sl
   10f14:	b	10d68 <__snprintf_chk@plt+0x46c>
   10f18:	ldr	r1, [sp, #12]
   10f1c:	ldr	r2, [pc, #204]	; 10ff0 <__snprintf_chk@plt+0x6f4>
   10f20:	mov	r3, #24
   10f24:	str	r1, [sp, #4]
   10f28:	str	r2, [sp]
   10f2c:	mov	r1, r3
   10f30:	mov	r2, #1
   10f34:	add	r0, sp, #244	; 0xf4
   10f38:	bl	108fc <__snprintf_chk@plt>
   10f3c:	add	r0, sp, #244	; 0xf4
   10f40:	bl	1083c <opendir@plt>
   10f44:	subs	r8, r0, #0
   10f48:	bne	10f70 <__snprintf_chk@plt+0x674>
   10f4c:	b	10b68 <__snprintf_chk@plt+0x26c>
   10f50:	add	r0, r0, #19
   10f54:	mov	r2, #10
   10f58:	mov	r1, #0
   10f5c:	bl	107c4 <strtol@plt>
   10f60:	ldr	r3, [sp, #12]
   10f64:	cmp	r0, #0
   10f68:	cmpne	r3, r0
   10f6c:	bne	10fa0 <__snprintf_chk@plt+0x6a4>
   10f70:	mov	r0, r8
   10f74:	bl	108c0 <readdir64@plt>
   10f78:	cmp	r0, #0
   10f7c:	bne	10f50 <__snprintf_chk@plt+0x654>
   10f80:	mov	r0, r8
   10f84:	bl	108f0 <closedir@plt>
   10f88:	b	10b68 <__snprintf_chk@plt+0x26c>
   10f8c:	str	r0, [sp, #12]
   10f90:	bl	11270 <__snprintf_chk@plt+0x974>
   10f94:	ldr	r0, [sp, #12]
   10f98:	b	10aac <__snprintf_chk@plt+0x1b0>
   10f9c:	bl	1080c <__stack_chk_fail@plt>
   10fa0:	bl	11154 <__snprintf_chk@plt+0x858>
   10fa4:	b	10f70 <__snprintf_chk@plt+0x674>
   10fa8:	andeq	r1, r2, r8, lsl #30
   10fac:	andeq	r1, r1, ip, lsl #7
   10fb0:	andeq	r1, r1, r4, ror #15
   10fb4:	andeq	r1, r1, r0, lsl #15
   10fb8:	muleq	r1, r4, r7
   10fbc:	muleq	r1, ip, r7
   10fc0:	andeq	r2, r2, r8, lsl #1
   10fc4:	muleq	r2, ip, r0
   10fc8:	andeq	r1, r1, r4, ror #1
   10fcc:	andeq	r2, r2, r4, lsr #1
   10fd0:	andeq	r1, r1, r8, ror r7
   10fd4:	andeq	r1, r1, r0, ror r7
   10fd8:			; <UNDEFINED> instruction: 0x000117b4
   10fdc:	ldrdeq	r1, [r1], -r4
   10fe0:	ldrdeq	r1, [r1], -r8
   10fe4:	muleq	r2, r4, r0
   10fe8:	ldrdeq	r1, [r1], -ip
   10fec:	andeq	r1, r1, r4, asr #15
   10ff0:	andeq	r1, r1, r4, lsr #15
   10ff4:	mov	fp, #0
   10ff8:	mov	lr, #0
   10ffc:	pop	{r1}		; (ldr r1, [sp], #4)
   11000:	mov	r2, sp
   11004:	push	{r2}		; (str r2, [sp, #-4]!)
   11008:	push	{r0}		; (str r0, [sp, #-4]!)
   1100c:	ldr	ip, [pc, #16]	; 11024 <__snprintf_chk@plt+0x728>
   11010:	push	{ip}		; (str ip, [sp, #-4]!)
   11014:	ldr	r0, [pc, #12]	; 11028 <__snprintf_chk@plt+0x72c>
   11018:	ldr	r3, [pc, #12]	; 1102c <__snprintf_chk@plt+0x730>
   1101c:	bl	10860 <__libc_start_main@plt>
   11020:	bl	108d8 <abort@plt>
   11024:	andeq	r1, r1, ip, ror r3
   11028:	andeq	r0, r1, r8, lsl #18
   1102c:	andeq	r1, r1, ip, lsl r3
   11030:	ldr	r3, [pc, #20]	; 1104c <__snprintf_chk@plt+0x750>
   11034:	ldr	r2, [pc, #20]	; 11050 <__snprintf_chk@plt+0x754>
   11038:	add	r3, pc, r3
   1103c:	ldr	r2, [r3, r2]
   11040:	cmp	r2, #0
   11044:	bxeq	lr
   11048:	b	1086c <__gmon_start__@plt>
   1104c:	andeq	r0, r1, r0, asr #31
   11050:	andeq	r0, r0, ip, ror r0
   11054:	ldr	r0, [pc, #24]	; 11074 <__snprintf_chk@plt+0x778>
   11058:	ldr	r3, [pc, #24]	; 11078 <__snprintf_chk@plt+0x77c>
   1105c:	cmp	r3, r0
   11060:	bxeq	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <__snprintf_chk@plt+0x780>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r2, r2, r8, lsl #1
   11078:	andeq	r2, r2, r8, lsl #1
   1107c:	andeq	r0, r0, r0
   11080:	ldr	r0, [pc, #36]	; 110ac <__snprintf_chk@plt+0x7b0>
   11084:	ldr	r1, [pc, #36]	; 110b0 <__snprintf_chk@plt+0x7b4>
   11088:	sub	r1, r1, r0
   1108c:	asr	r1, r1, #2
   11090:	add	r1, r1, r1, lsr #31
   11094:	asrs	r1, r1, #1
   11098:	bxeq	lr
   1109c:	ldr	r3, [pc, #16]	; 110b4 <__snprintf_chk@plt+0x7b8>
   110a0:	cmp	r3, #0
   110a4:	bxeq	lr
   110a8:	bx	r3
   110ac:	andeq	r2, r2, r8, lsl #1
   110b0:	andeq	r2, r2, r8, lsl #1
   110b4:	andeq	r0, r0, r0
   110b8:	push	{r4, lr}
   110bc:	ldr	r4, [pc, #24]	; 110dc <__snprintf_chk@plt+0x7e0>
   110c0:	ldrb	r3, [r4]
   110c4:	cmp	r3, #0
   110c8:	popne	{r4, pc}
   110cc:	bl	11054 <__snprintf_chk@plt+0x758>
   110d0:	mov	r3, #1
   110d4:	strb	r3, [r4]
   110d8:	pop	{r4, pc}
   110dc:	muleq	r2, r8, r0
   110e0:	b	11080 <__snprintf_chk@plt+0x784>
   110e4:	push	{r4, r5, r6, lr}
   110e8:	ldr	r6, [pc, #92]	; 1114c <__snprintf_chk@plt+0x850>
   110ec:	ldr	r3, [r6]
   110f0:	cmp	r3, #0
   110f4:	ble	11124 <__snprintf_chk@plt+0x828>
   110f8:	ldr	r5, [pc, #80]	; 11150 <__snprintf_chk@plt+0x854>
   110fc:	mov	r4, #0
   11100:	mov	r3, #0
   11104:	mov	r2, r3
   11108:	ldr	r1, [r5, #4]!
   1110c:	mov	r0, #17
   11110:	bl	108e4 <ptrace@plt>
   11114:	ldr	r3, [r6]
   11118:	add	r4, r4, #1
   1111c:	cmp	r3, r4
   11120:	bgt	11100 <__snprintf_chk@plt+0x804>
   11124:	ldr	r0, [r6, #4]
   11128:	cmp	r0, #0
   1112c:	beq	11134 <__snprintf_chk@plt+0x838>
   11130:	bl	107dc <free@plt>
   11134:	mov	r1, #0
   11138:	mov	r0, #2
   1113c:	bl	107f4 <signal@plt>
   11140:	mov	r0, #2
   11144:	pop	{r4, r5, r6, lr}
   11148:	b	107b8 <raise@plt>
   1114c:	muleq	r2, ip, r0
   11150:	andeq	r2, r2, r0, lsr #1
   11154:	push	{r4, r5, r6, lr}
   11158:	ldr	r5, [pc, #112]	; 111d0 <__snprintf_chk@plt+0x8d4>
   1115c:	ldr	ip, [r5]
   11160:	cmp	ip, #1024	; 0x400
   11164:	popge	{r4, r5, r6, pc}
   11168:	mov	r4, r0
   1116c:	ldr	r0, [pc, #96]	; 111d4 <__snprintf_chk@plt+0x8d8>
   11170:	mov	r3, #0
   11174:	mov	r2, r3
   11178:	str	r4, [r0, ip, lsl #2]
   1117c:	mov	r1, r4
   11180:	mov	r0, #16
   11184:	bl	108e4 <ptrace@plt>
   11188:	cmn	r0, #1
   1118c:	beq	111a0 <__snprintf_chk@plt+0x8a4>
   11190:	ldr	r3, [r5]
   11194:	add	r3, r3, #1
   11198:	str	r3, [r5]
   1119c:	pop	{r4, r5, r6, pc}
   111a0:	ldr	r3, [pc, #48]	; 111d8 <__snprintf_chk@plt+0x8dc>
   111a4:	mov	r2, #5
   111a8:	ldr	r1, [pc, #44]	; 111dc <__snprintf_chk@plt+0x8e0>
   111ac:	mov	r0, #0
   111b0:	ldr	r5, [r3]
   111b4:	bl	10800 <dcgettext@plt>
   111b8:	mov	r3, r4
   111bc:	mov	r1, #1
   111c0:	mov	r2, r0
   111c4:	mov	r0, r5
   111c8:	pop	{r4, r5, r6, lr}
   111cc:	b	108a8 <__fprintf_chk@plt>
   111d0:	muleq	r2, ip, r0
   111d4:	andeq	r2, r2, r4, lsr #1
   111d8:	muleq	r2, r0, r0
   111dc:	strdeq	r1, [r1], -ip
   111e0:	push	{r4, r5, r6, lr}
   111e4:	mov	r2, #5
   111e8:	ldr	r4, [pc, #108]	; 1125c <__snprintf_chk@plt+0x960>
   111ec:	ldr	r1, [pc, #108]	; 11260 <__snprintf_chk@plt+0x964>
   111f0:	mov	r0, #0
   111f4:	ldr	r5, [r4]
   111f8:	bl	10800 <dcgettext@plt>
   111fc:	ldr	r3, [pc, #96]	; 11264 <__snprintf_chk@plt+0x968>
   11200:	mov	r1, #1
   11204:	mov	r2, r0
   11208:	mov	r0, r5
   1120c:	bl	108a8 <__fprintf_chk@plt>
   11210:	mov	r2, #5
   11214:	ldr	r1, [pc, #76]	; 11268 <__snprintf_chk@plt+0x96c>
   11218:	mov	r0, #0
   1121c:	ldr	r5, [r4]
   11220:	bl	10800 <dcgettext@plt>
   11224:	mov	r1, #1
   11228:	mov	r2, r0
   1122c:	mov	r0, r5
   11230:	bl	108a8 <__fprintf_chk@plt>
   11234:	mov	r2, #5
   11238:	ldr	r1, [pc, #44]	; 1126c <__snprintf_chk@plt+0x970>
   1123c:	mov	r0, #0
   11240:	ldr	r4, [r4]
   11244:	bl	10800 <dcgettext@plt>
   11248:	mov	r1, #1
   1124c:	mov	r2, r0
   11250:	mov	r0, r4
   11254:	pop	{r4, r5, r6, lr}
   11258:	b	108a8 <__fprintf_chk@plt>
   1125c:	muleq	r2, r0, r0
   11260:	andeq	r1, r1, r8, lsl r4
   11264:	andeq	r1, r1, ip, lsr #8
   11268:	andeq	r1, r1, r4, lsr r4
   1126c:	andeq	r1, r1, ip, asr r4
   11270:	ldr	r3, [pc, #40]	; 112a0 <__snprintf_chk@plt+0x9a4>
   11274:	push	{r4, lr}
   11278:	mov	r2, #5
   1127c:	ldr	r1, [pc, #32]	; 112a4 <__snprintf_chk@plt+0x9a8>
   11280:	mov	r0, #0
   11284:	ldr	r4, [r3]
   11288:	bl	10800 <dcgettext@plt>
   1128c:	mov	r1, #1
   11290:	mov	r2, r0
   11294:	mov	r0, r4
   11298:	pop	{r4, lr}
   1129c:	b	108a8 <__fprintf_chk@plt>
   112a0:	muleq	r2, r0, r0
   112a4:	andeq	r1, r1, r0, asr #10
   112a8:	cmp	r3, #0
   112ac:	beq	11314 <__snprintf_chk@plt+0xa18>
   112b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112b4:	add	r6, r1, r3
   112b8:	mov	r9, r2
   112bc:	mov	r7, r1
   112c0:	mov	r8, r0
   112c4:	sub	r6, r6, #1
   112c8:	sub	r4, r1, #1
   112cc:	b	112d8 <__snprintf_chk@plt+0x9dc>
   112d0:	cmp	r4, r6
   112d4:	beq	1130c <__snprintf_chk@plt+0xa10>
   112d8:	add	r4, r4, #1
   112dc:	mov	r2, r4
   112e0:	mov	r3, #0
   112e4:	ldrb	r5, [r2], r9
   112e8:	mov	r1, r8
   112ec:	mov	r0, #1
   112f0:	sub	r2, r2, r7
   112f4:	bl	108e4 <ptrace@plt>
   112f8:	uxtb	r0, r0
   112fc:	cmp	r5, r0
   11300:	beq	112d0 <__snprintf_chk@plt+0x9d4>
   11304:	mov	r0, #1
   11308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1130c:	mov	r0, #0
   11310:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11314:	mov	r0, #0
   11318:	bx	lr
   1131c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11320:	mov	r7, r0
   11324:	ldr	r6, [pc, #72]	; 11374 <__snprintf_chk@plt+0xa78>
   11328:	ldr	r5, [pc, #72]	; 11378 <__snprintf_chk@plt+0xa7c>
   1132c:	add	r6, pc, r6
   11330:	add	r5, pc, r5
   11334:	sub	r6, r6, r5
   11338:	mov	r8, r1
   1133c:	mov	r9, r2
   11340:	bl	10798 <raise@plt-0x20>
   11344:	asrs	r6, r6, #2
   11348:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1134c:	mov	r4, #0
   11350:	add	r4, r4, #1
   11354:	ldr	r3, [r5], #4
   11358:	mov	r2, r9
   1135c:	mov	r1, r8
   11360:	mov	r0, r7
   11364:	blx	r3
   11368:	cmp	r6, r4
   1136c:	bne	11350 <__snprintf_chk@plt+0xa54>
   11370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11374:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11378:	andeq	r0, r1, r8, asr #23
   1137c:	bx	lr

Disassembly of section .fini:

00011380 <.fini>:
   11380:	push	{r3, lr}
   11384:	pop	{r3, pc}
