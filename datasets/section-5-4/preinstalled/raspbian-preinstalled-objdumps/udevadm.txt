
raspbian-preinstalled/udevadm:     file format elf32-littlearm


Disassembly of section .init:

00006898 <.init>:
    6898:	push	{r3, lr}
    689c:	bl	9970 <blkid_probe_get_size@plt+0x2458>
    68a0:	pop	{r3, pc}

Disassembly of section .plt:

000068a4 <getfilecon_raw@plt-0x14>:
    68a4:	push	{lr}		; (str lr, [sp, #-4]!)
    68a8:	ldr	lr, [pc, #4]	; 68b4 <getfilecon_raw@plt-0x4>
    68ac:	add	lr, pc, lr
    68b0:	ldr	pc, [lr, #8]!
    68b4:			; <UNDEFINED> instruction: 0x000912bc

000068b8 <getfilecon_raw@plt>:
    68b8:	add	ip, pc, #0, 12
    68bc:	add	ip, ip, #593920	; 0x91000
    68c0:	ldr	pc, [ip, #700]!	; 0x2bc

000068c4 <ppoll@plt>:
    68c4:	add	ip, pc, #0, 12
    68c8:	add	ip, ip, #593920	; 0x91000
    68cc:	ldr	pc, [ip, #692]!	; 0x2b4

000068d0 <selabel_lookup_raw@plt>:
    68d0:	add	ip, pc, #0, 12
    68d4:	add	ip, ip, #593920	; 0x91000
    68d8:	ldr	pc, [ip, #684]!	; 0x2ac

000068dc <strndup@plt>:
    68dc:	add	ip, pc, #0, 12
    68e0:	add	ip, ip, #593920	; 0x91000
    68e4:	ldr	pc, [ip, #676]!	; 0x2a4

000068e8 <chown@plt>:
    68e8:	add	ip, pc, #0, 12
    68ec:	add	ip, ip, #593920	; 0x91000
    68f0:	ldr	pc, [ip, #668]!	; 0x29c

000068f4 <__fsetlocking@plt>:
    68f4:	add	ip, pc, #0, 12
    68f8:	add	ip, ip, #593920	; 0x91000
    68fc:	ldr	pc, [ip, #660]!	; 0x294

00006900 <getpwnam@plt>:
    6900:	add	ip, pc, #0, 12
    6904:	add	ip, ip, #593920	; 0x91000
    6908:	ldr	pc, [ip, #652]!	; 0x28c

0000690c <acl_set_qualifier@plt>:
    690c:	add	ip, pc, #0, 12
    6910:	add	ip, ip, #593920	; 0x91000
    6914:	ldr	pc, [ip, #644]!	; 0x284

00006918 <kmod_list_next@plt>:
    6918:	add	ip, pc, #0, 12
    691c:	add	ip, ip, #593920	; 0x91000
    6920:	ldr	pc, [ip, #636]!	; 0x27c

00006924 <localtime_r@plt>:
    6924:	add	ip, pc, #0, 12
    6928:	add	ip, ip, #593920	; 0x91000
    692c:	ldr	pc, [ip, #628]!	; 0x274

00006930 <kmod_set_log_fn@plt>:
    6930:	add	ip, pc, #0, 12
    6934:	add	ip, ip, #593920	; 0x91000
    6938:	ldr	pc, [ip, #620]!	; 0x26c

0000693c <fnmatch@plt>:
    693c:	add	ip, pc, #0, 12
    6940:	add	ip, ip, #593920	; 0x91000
    6944:	ldr	pc, [ip, #612]!	; 0x264

00006948 <fsync@plt>:
    6948:	add	ip, pc, #0, 12
    694c:	add	ip, ip, #593920	; 0x91000
    6950:	ldr	pc, [ip, #604]!	; 0x25c

00006954 <rand@plt>:
    6954:	add	ip, pc, #0, 12
    6958:	add	ip, ip, #593920	; 0x91000
    695c:	ldr	pc, [ip, #596]!	; 0x254

00006960 <parse_printf_format@plt>:
    6960:	add	ip, pc, #0, 12
    6964:	add	ip, ip, #593920	; 0x91000
    6968:	ldr	pc, [ip, #588]!	; 0x24c

0000696c <__memcpy_chk@plt>:
    696c:	add	ip, pc, #0, 12
    6970:	add	ip, ip, #593920	; 0x91000
    6974:	ldr	pc, [ip, #580]!	; 0x244

00006978 <acl_set_tag_type@plt>:
    6978:	add	ip, pc, #0, 12
    697c:	add	ip, ip, #593920	; 0x91000
    6980:	ldr	pc, [ip, #572]!	; 0x23c

00006984 <dirfd@plt>:
    6984:	add	ip, pc, #0, 12
    6988:	add	ip, ip, #593920	; 0x91000
    698c:	ldr	pc, [ip, #564]!	; 0x234

00006990 <__open64_2@plt>:
    6990:	add	ip, pc, #0, 12
    6994:	add	ip, ip, #593920	; 0x91000
    6998:	ldr	pc, [ip, #556]!	; 0x22c

0000699c <readlinkat@plt>:
    699c:	add	ip, pc, #0, 12
    69a0:	add	ip, ip, #593920	; 0x91000
    69a4:	ldr	pc, [ip, #548]!	; 0x224

000069a8 <fseeko64@plt>:
    69a8:	add	ip, pc, #0, 12
    69ac:	add	ip, ip, #593920	; 0x91000
    69b0:	ldr	pc, [ip, #540]!	; 0x21c

000069b4 <getsockopt@plt>:
    69b4:	add	ip, pc, #0, 12
    69b8:	add	ip, ip, #593920	; 0x91000
    69bc:	ldr	pc, [ip, #532]!	; 0x214

000069c0 <strcasecmp@plt>:
    69c0:	add	ip, pc, #0, 12
    69c4:	add	ip, ip, #593920	; 0x91000
    69c8:	ldr	pc, [ip, #524]!	; 0x20c

000069cc <strnlen@plt>:
    69cc:	add	ip, pc, #0, 12
    69d0:	add	ip, ip, #593920	; 0x91000
    69d4:	ldr	pc, [ip, #516]!	; 0x204

000069d8 <fdopen@plt>:
    69d8:	add	ip, pc, #0, 12
    69dc:	add	ip, ip, #593920	; 0x91000
    69e0:	ldr	pc, [ip, #508]!	; 0x1fc

000069e4 <strtol@plt>:
    69e4:	add	ip, pc, #0, 12
    69e8:	add	ip, ip, #593920	; 0x91000
    69ec:	ldr	pc, [ip, #500]!	; 0x1f4

000069f0 <free@plt>:
    69f0:	add	ip, pc, #0, 12
    69f4:	add	ip, ip, #593920	; 0x91000
    69f8:	ldr	pc, [ip, #492]!	; 0x1ec

000069fc <__getdelim@plt>:
    69fc:	add	ip, pc, #0, 12
    6a00:	add	ip, ip, #593920	; 0x91000
    6a04:	ldr	pc, [ip, #484]!	; 0x1e4

00006a08 <acl_get_file@plt>:
    6a08:	add	ip, pc, #0, 12
    6a0c:	add	ip, ip, #593920	; 0x91000
    6a10:	ldr	pc, [ip, #476]!	; 0x1dc

00006a14 <getrandom@plt>:
    6a14:	add	ip, pc, #0, 12
    6a18:	add	ip, ip, #593920	; 0x91000
    6a1c:	ldr	pc, [ip, #468]!	; 0x1d4

00006a20 <kmod_load_resources@plt>:
    6a20:	add	ip, pc, #0, 12
    6a24:	add	ip, ip, #593920	; 0x91000
    6a28:	ldr	pc, [ip, #460]!	; 0x1cc

00006a2c <__xstat64@plt>:
    6a2c:	add	ip, pc, #0, 12
    6a30:	add	ip, ip, #593920	; 0x91000
    6a34:	ldr	pc, [ip, #452]!	; 0x1c4

00006a38 <kmod_module_get_module@plt>:
    6a38:	add	ip, pc, #0, 12
    6a3c:	add	ip, ip, #593920	; 0x91000
    6a40:	ldr	pc, [ip, #444]!	; 0x1bc

00006a44 <qsort@plt>:
    6a44:	add	ip, pc, #0, 12
    6a48:	add	ip, ip, #593920	; 0x91000
    6a4c:	ldr	pc, [ip, #436]!	; 0x1b4

00006a50 <blkid_new_probe@plt>:
    6a50:	add	ip, pc, #0, 12
    6a54:	add	ip, ip, #593920	; 0x91000
    6a58:	ldr	pc, [ip, #428]!	; 0x1ac

00006a5c <strncmp@plt>:
    6a5c:	add	ip, pc, #0, 12
    6a60:	add	ip, ip, #593920	; 0x91000
    6a64:	ldr	pc, [ip, #420]!	; 0x1a4

00006a68 <getppid@plt>:
    6a68:	add	ip, pc, #0, 12
    6a6c:	add	ip, ip, #593920	; 0x91000
    6a70:	ldr	pc, [ip, #412]!	; 0x19c

00006a74 <fgetc@plt>:
    6a74:	add	ip, pc, #0, 12
    6a78:	add	ip, ip, #593920	; 0x91000
    6a7c:	ldr	pc, [ip, #404]!	; 0x194

00006a80 <blkid_probe_set_device@plt>:
    6a80:	add	ip, pc, #0, 12
    6a84:	add	ip, ip, #593920	; 0x91000
    6a88:	ldr	pc, [ip, #396]!	; 0x18c

00006a8c <strcspn@plt>:
    6a8c:	add	ip, pc, #0, 12
    6a90:	add	ip, ip, #593920	; 0x91000
    6a94:	ldr	pc, [ip, #388]!	; 0x184

00006a98 <inotify_rm_watch@plt>:
    6a98:	add	ip, pc, #0, 12
    6a9c:	add	ip, ip, #593920	; 0x91000
    6aa0:	ldr	pc, [ip, #380]!	; 0x17c

00006aa4 <closedir@plt>:
    6aa4:	add	ip, pc, #0, 12
    6aa8:	add	ip, ip, #593920	; 0x91000
    6aac:	ldr	pc, [ip, #372]!	; 0x174

00006ab0 <selabel_close@plt>:
    6ab0:	add	ip, pc, #0, 12
    6ab4:	add	ip, ip, #593920	; 0x91000
    6ab8:	ldr	pc, [ip, #364]!	; 0x16c

00006abc <exit@plt>:
    6abc:	add	ip, pc, #0, 12
    6ac0:	add	ip, ip, #593920	; 0x91000
    6ac4:	ldr	pc, [ip, #356]!	; 0x164

00006ac8 <getegid@plt>:
    6ac8:	add	ip, pc, #0, 12
    6acc:	add	ip, ip, #593920	; 0x91000
    6ad0:	ldr	pc, [ip, #348]!	; 0x15c

00006ad4 <dirname@plt>:
    6ad4:	add	ip, pc, #0, 12
    6ad8:	add	ip, ip, #593920	; 0x91000
    6adc:	ldr	pc, [ip, #340]!	; 0x154

00006ae0 <stpcpy@plt>:
    6ae0:	add	ip, pc, #0, 12
    6ae4:	add	ip, ip, #593920	; 0x91000
    6ae8:	ldr	pc, [ip, #332]!	; 0x14c

00006aec <uname@plt>:
    6aec:	add	ip, pc, #0, 12
    6af0:	add	ip, ip, #593920	; 0x91000
    6af4:	ldr	pc, [ip, #324]!	; 0x144

00006af8 <blkid_partlist_numof_partitions@plt>:
    6af8:	add	ip, pc, #0, 12
    6afc:	add	ip, ip, #593920	; 0x91000
    6b00:	ldr	pc, [ip, #316]!	; 0x13c

00006b04 <__vsnprintf_chk@plt>:
    6b04:	add	ip, pc, #0, 12
    6b08:	add	ip, ip, #593920	; 0x91000
    6b0c:	ldr	pc, [ip, #308]!	; 0x134

00006b10 <blkid_probe_is_wholedisk@plt>:
    6b10:	add	ip, pc, #0, 12
    6b14:	add	ip, ip, #593920	; 0x91000
    6b18:	ldr	pc, [ip, #300]!	; 0x12c

00006b1c <inotify_add_watch@plt>:
    6b1c:	add	ip, pc, #0, 12
    6b20:	add	ip, ip, #593920	; 0x91000
    6b24:	ldr	pc, [ip, #292]!	; 0x124

00006b28 <lremovexattr@plt>:
    6b28:	add	ip, pc, #0, 12
    6b2c:	add	ip, ip, #593920	; 0x91000
    6b30:	ldr	pc, [ip, #284]!	; 0x11c

00006b34 <signalfd@plt>:
    6b34:	add	ip, pc, #0, 12
    6b38:	add	ip, ip, #593920	; 0x91000
    6b3c:	ldr	pc, [ip, #276]!	; 0x114

00006b40 <feof@plt>:
    6b40:	add	ip, pc, #0, 12
    6b44:	add	ip, ip, #593920	; 0x91000
    6b48:	ldr	pc, [ip, #268]!	; 0x10c

00006b4c <puts@plt>:
    6b4c:	add	ip, pc, #0, 12
    6b50:	add	ip, ip, #593920	; 0x91000
    6b54:	ldr	pc, [ip, #260]!	; 0x104

00006b58 <getgrgid@plt>:
    6b58:	add	ip, pc, #0, 12
    6b5c:	add	ip, ip, #593920	; 0x91000
    6b60:	ldr	pc, [ip, #252]!	; 0xfc

00006b64 <strtoll@plt>:
    6b64:	add	ip, pc, #0, 12
    6b68:	add	ip, ip, #593920	; 0x91000
    6b6c:	ldr	pc, [ip, #244]!	; 0xf4

00006b70 <utimensat@plt>:
    6b70:	add	ip, pc, #0, 12
    6b74:	add	ip, ip, #593920	; 0x91000
    6b78:	ldr	pc, [ip, #236]!	; 0xec

00006b7c <blkid_probe_get_partitions@plt>:
    6b7c:	add	ip, pc, #0, 12
    6b80:	add	ip, ip, #593920	; 0x91000
    6b84:	ldr	pc, [ip, #228]!	; 0xe4

00006b88 <getpwuid@plt>:
    6b88:	add	ip, pc, #0, 12
    6b8c:	add	ip, ip, #593920	; 0x91000
    6b90:	ldr	pc, [ip, #220]!	; 0xdc

00006b94 <syscall@plt>:
    6b94:	add	ip, pc, #0, 12
    6b98:	add	ip, ip, #593920	; 0x91000
    6b9c:	ldr	pc, [ip, #212]!	; 0xd4

00006ba0 <blkid_probe_numof_values@plt>:
    6ba0:	add	ip, pc, #0, 12
    6ba4:	add	ip, ip, #593920	; 0x91000
    6ba8:	ldr	pc, [ip, #204]!	; 0xcc

00006bac <blkid_probe_enable_partitions@plt>:
    6bac:	add	ip, pc, #0, 12
    6bb0:	add	ip, ip, #593920	; 0x91000
    6bb4:	ldr	pc, [ip, #196]!	; 0xc4

00006bb8 <readdir64@plt>:
    6bb8:	add	ip, pc, #0, 12
    6bbc:	add	ip, ip, #593920	; 0x91000
    6bc0:	ldr	pc, [ip, #188]!	; 0xbc

00006bc4 <sigfillset@plt>:
    6bc4:	add	ip, pc, #0, 12
    6bc8:	add	ip, ip, #593920	; 0x91000
    6bcc:	ldr	pc, [ip, #180]!	; 0xb4

00006bd0 <blkid_probe_lookup_value@plt>:
    6bd0:	add	ip, pc, #0, 12
    6bd4:	add	ip, ip, #593920	; 0x91000
    6bd8:	ldr	pc, [ip, #172]!	; 0xac

00006bdc <kmod_module_unref@plt>:
    6bdc:	add	ip, pc, #0, 12
    6be0:	add	ip, ip, #593920	; 0x91000
    6be4:	ldr	pc, [ip, #164]!	; 0xa4

00006be8 <sendto@plt>:
    6be8:	add	ip, pc, #0, 12
    6bec:	add	ip, ip, #593920	; 0x91000
    6bf0:	ldr	pc, [ip, #156]!	; 0x9c

00006bf4 <setfilecon@plt>:
    6bf4:	add	ip, pc, #0, 12
    6bf8:	add	ip, ip, #593920	; 0x91000
    6bfc:	ldr	pc, [ip, #148]!	; 0x94

00006c00 <prctl@plt>:
    6c00:	add	ip, pc, #0, 12
    6c04:	add	ip, ip, #593920	; 0x91000
    6c08:	ldr	pc, [ip, #140]!	; 0x8c

00006c0c <__fprintf_chk@plt>:
    6c0c:	add	ip, pc, #0, 12
    6c10:	add	ip, ip, #593920	; 0x91000
    6c14:	ldr	pc, [ip, #132]!	; 0x84

00006c18 <unlinkat@plt>:
    6c18:	add	ip, pc, #0, 12
    6c1c:	add	ip, ip, #593920	; 0x91000
    6c20:	ldr	pc, [ip, #124]!	; 0x7c

00006c24 <setrlimit64@plt>:
    6c24:	add	ip, pc, #0, 12
    6c28:	add	ip, ip, #593920	; 0x91000
    6c2c:	ldr	pc, [ip, #116]!	; 0x74

00006c30 <setxattr@plt>:
    6c30:	add	ip, pc, #0, 12
    6c34:	add	ip, ip, #593920	; 0x91000
    6c38:	ldr	pc, [ip, #108]!	; 0x6c

00006c3c <pipe2@plt>:
    6c3c:	add	ip, pc, #0, 12
    6c40:	add	ip, ip, #593920	; 0x91000
    6c44:	ldr	pc, [ip, #100]!	; 0x64

00006c48 <setfscreatecon_raw@plt>:
    6c48:	add	ip, pc, #0, 12
    6c4c:	add	ip, ip, #593920	; 0x91000
    6c50:	ldr	pc, [ip, #92]!	; 0x5c

00006c54 <strtoul@plt>:
    6c54:	add	ip, pc, #0, 12
    6c58:	add	ip, ip, #593920	; 0x91000
    6c5c:	ldr	pc, [ip, #84]!	; 0x54

00006c60 <nanosleep@plt>:
    6c60:	add	ip, pc, #0, 12
    6c64:	add	ip, ip, #593920	; 0x91000
    6c68:	ldr	pc, [ip, #76]!	; 0x4c

00006c6c <strftime@plt>:
    6c6c:	add	ip, pc, #0, 12
    6c70:	add	ip, ip, #593920	; 0x91000
    6c74:	ldr	pc, [ip, #68]!	; 0x44

00006c78 <putchar@plt>:
    6c78:	add	ip, pc, #0, 12
    6c7c:	add	ip, ip, #593920	; 0x91000
    6c80:	ldr	pc, [ip, #60]!	; 0x3c

00006c84 <memset@plt>:
    6c84:	add	ip, pc, #0, 12
    6c88:	add	ip, ip, #593920	; 0x91000
    6c8c:	ldr	pc, [ip, #52]!	; 0x34

00006c90 <__fxstat64@plt>:
    6c90:	add	ip, pc, #0, 12
    6c94:	add	ip, ip, #593920	; 0x91000
    6c98:	ldr	pc, [ip, #44]!	; 0x2c

00006c9c <strspn@plt>:
    6c9c:	add	ip, pc, #0, 12
    6ca0:	add	ip, ip, #593920	; 0x91000
    6ca4:	ldr	pc, [ip, #36]!	; 0x24

00006ca8 <opendir@plt>:
    6ca8:	add	ip, pc, #0, 12
    6cac:	add	ip, ip, #593920	; 0x91000
    6cb0:	ldr	pc, [ip, #28]!

00006cb4 <epoll_ctl@plt>:
    6cb4:	add	ip, pc, #0, 12
    6cb8:	add	ip, ip, #593920	; 0x91000
    6cbc:	ldr	pc, [ip, #20]!

00006cc0 <blkid_safe_string@plt>:
    6cc0:	add	ip, pc, #0, 12
    6cc4:	add	ip, ip, #593920	; 0x91000
    6cc8:	ldr	pc, [ip, #12]!

00006ccc <execve@plt>:
    6ccc:	add	ip, pc, #0, 12
    6cd0:	add	ip, ip, #593920	; 0x91000
    6cd4:	ldr	pc, [ip, #4]!

00006cd8 <pthread_sigmask@plt>:
    6cd8:	add	ip, pc, #0, 12
    6cdc:	add	ip, ip, #144, 20	; 0x90000
    6ce0:	ldr	pc, [ip, #4092]!	; 0xffc

00006ce4 <statfs64@plt>:
    6ce4:	add	ip, pc, #0, 12
    6ce8:	add	ip, ip, #144, 20	; 0x90000
    6cec:	ldr	pc, [ip, #4084]!	; 0xff4

00006cf0 <getgroups@plt>:
    6cf0:	add	ip, pc, #0, 12
    6cf4:	add	ip, ip, #144, 20	; 0x90000
    6cf8:	ldr	pc, [ip, #4076]!	; 0xfec

00006cfc <blkid_probe_get_value@plt>:
    6cfc:	add	ip, pc, #0, 12
    6d00:	add	ip, ip, #144, 20	; 0x90000
    6d04:	ldr	pc, [ip, #4068]!	; 0xfe4

00006d08 <snprintf@plt>:
    6d08:	add	ip, pc, #0, 12
    6d0c:	add	ip, ip, #144, 20	; 0x90000
    6d10:	ldr	pc, [ip, #4060]!	; 0xfdc

00006d14 <mmap64@plt>:
    6d14:	add	ip, pc, #0, 12
    6d18:	add	ip, ip, #144, 20	; 0x90000
    6d1c:	ldr	pc, [ip, #4052]!	; 0xfd4

00006d20 <sigaddset@plt>:
    6d20:	add	ip, pc, #0, 12
    6d24:	add	ip, ip, #144, 20	; 0x90000
    6d28:	ldr	pc, [ip, #4044]!	; 0xfcc

00006d2c <timerfd_settime@plt>:
    6d2c:	add	ip, pc, #0, 12
    6d30:	add	ip, ip, #144, 20	; 0x90000
    6d34:	ldr	pc, [ip, #4036]!	; 0xfc4

00006d38 <setlinebuf@plt>:
    6d38:	add	ip, pc, #0, 12
    6d3c:	add	ip, ip, #144, 20	; 0x90000
    6d40:	ldr	pc, [ip, #4028]!	; 0xfbc

00006d44 <close@plt>:
    6d44:	add	ip, pc, #0, 12
    6d48:	add	ip, ip, #144, 20	; 0x90000
    6d4c:	ldr	pc, [ip, #4020]!	; 0xfb4

00006d50 <blkid_do_fullprobe@plt>:
    6d50:	add	ip, pc, #0, 12
    6d54:	add	ip, ip, #144, 20	; 0x90000
    6d58:	ldr	pc, [ip, #4012]!	; 0xfac

00006d5c <kmod_new@plt>:
    6d5c:	add	ip, pc, #0, 12
    6d60:	add	ip, ip, #144, 20	; 0x90000
    6d64:	ldr	pc, [ip, #4004]!	; 0xfa4

00006d68 <is_selinux_enabled@plt>:
    6d68:	add	ip, pc, #0, 12
    6d6c:	add	ip, ip, #144, 20	; 0x90000
    6d70:	ldr	pc, [ip, #3996]!	; 0xf9c

00006d74 <read@plt>:
    6d74:	add	ip, pc, #0, 12
    6d78:	add	ip, ip, #144, 20	; 0x90000
    6d7c:	ldr	pc, [ip, #3988]!	; 0xf94

00006d80 <kmod_module_probe_insert_module@plt>:
    6d80:	add	ip, pc, #0, 12
    6d84:	add	ip, ip, #144, 20	; 0x90000
    6d88:	ldr	pc, [ip, #3980]!	; 0xf8c

00006d8c <acl_free@plt>:
    6d8c:	add	ip, pc, #0, 12
    6d90:	add	ip, ip, #144, 20	; 0x90000
    6d94:	ldr	pc, [ip, #3972]!	; 0xf84

00006d98 <abort@plt>:
    6d98:	add	ip, pc, #0, 12
    6d9c:	add	ip, ip, #144, 20	; 0x90000
    6da0:	ldr	pc, [ip, #3964]!	; 0xf7c

00006da4 <poll@plt>:
    6da4:	add	ip, pc, #0, 12
    6da8:	add	ip, ip, #144, 20	; 0x90000
    6dac:	ldr	pc, [ip, #3956]!	; 0xf74

00006db0 <acl_delete_entry@plt>:
    6db0:	add	ip, pc, #0, 12
    6db4:	add	ip, ip, #144, 20	; 0x90000
    6db8:	ldr	pc, [ip, #3948]!	; 0xf6c

00006dbc <lsetxattr@plt>:
    6dbc:	add	ip, pc, #0, 12
    6dc0:	add	ip, ip, #144, 20	; 0x90000
    6dc4:	ldr	pc, [ip, #3940]!	; 0xf64

00006dc8 <mallinfo@plt>:
    6dc8:	add	ip, pc, #0, 12
    6dcc:	add	ip, ip, #144, 20	; 0x90000
    6dd0:	ldr	pc, [ip, #3932]!	; 0xf5c

00006dd4 <blkid_free_probe@plt>:
    6dd4:	add	ip, pc, #0, 12
    6dd8:	add	ip, ip, #144, 20	; 0x90000
    6ddc:	ldr	pc, [ip, #3924]!	; 0xf54

00006de0 <acl_create_entry@plt>:
    6de0:	add	ip, pc, #0, 12
    6de4:	add	ip, ip, #144, 20	; 0x90000
    6de8:	ldr	pc, [ip, #3916]!	; 0xf4c

00006dec <ftello64@plt>:
    6dec:	add	ip, pc, #0, 12
    6df0:	add	ip, ip, #144, 20	; 0x90000
    6df4:	ldr	pc, [ip, #3908]!	; 0xf44

00006df8 <recvmsg@plt>:
    6df8:	add	ip, pc, #0, 12
    6dfc:	add	ip, ip, #144, 20	; 0x90000
    6e00:	ldr	pc, [ip, #3900]!	; 0xf3c

00006e04 <memmove@plt>:
    6e04:	add	ip, pc, #0, 12
    6e08:	add	ip, ip, #144, 20	; 0x90000
    6e0c:	ldr	pc, [ip, #3892]!	; 0xf34

00006e10 <strpbrk@plt>:
    6e10:	add	ip, pc, #0, 12
    6e14:	add	ip, ip, #144, 20	; 0x90000
    6e18:	ldr	pc, [ip, #3884]!	; 0xf2c

00006e1c <rmdir@plt>:
    6e1c:	add	ip, pc, #0, 12
    6e20:	add	ip, ip, #144, 20	; 0x90000
    6e24:	ldr	pc, [ip, #3876]!	; 0xf24

00006e28 <unlink@plt>:
    6e28:	add	ip, pc, #0, 12
    6e2c:	add	ip, ip, #144, 20	; 0x90000
    6e30:	ldr	pc, [ip, #3868]!	; 0xf1c

00006e34 <globfree64@plt>:
    6e34:	add	ip, pc, #0, 12
    6e38:	add	ip, ip, #144, 20	; 0x90000
    6e3c:	ldr	pc, [ip, #3860]!	; 0xf14

00006e40 <glob64@plt>:
    6e40:	add	ip, pc, #0, 12
    6e44:	add	ip, ip, #144, 20	; 0x90000
    6e48:	ldr	pc, [ip, #3852]!	; 0xf0c

00006e4c <mkostemp64@plt>:
    6e4c:	add	ip, pc, #0, 12
    6e50:	add	ip, ip, #144, 20	; 0x90000
    6e54:	ldr	pc, [ip, #3844]!	; 0xf04

00006e58 <__libc_current_sigrtmin@plt>:
    6e58:	add	ip, pc, #0, 12
    6e5c:	add	ip, ip, #144, 20	; 0x90000
    6e60:	ldr	pc, [ip, #3836]!	; 0xefc

00006e64 <kill@plt>:
    6e64:	add	ip, pc, #0, 12
    6e68:	add	ip, ip, #144, 20	; 0x90000
    6e6c:	ldr	pc, [ip, #3828]!	; 0xef4

00006e70 <ioctl@plt>:
    6e70:	add	ip, pc, #0, 12
    6e74:	add	ip, ip, #144, 20	; 0x90000
    6e78:	ldr	pc, [ip, #3820]!	; 0xeec

00006e7c <dup2@plt>:
    6e7c:	add	ip, pc, #0, 12
    6e80:	add	ip, ip, #144, 20	; 0x90000
    6e84:	ldr	pc, [ip, #3812]!	; 0xee4

00006e88 <clock_gettime@plt>:
    6e88:	add	ip, pc, #0, 12
    6e8c:	add	ip, ip, #144, 20	; 0x90000
    6e90:	ldr	pc, [ip, #3804]!	; 0xedc

00006e94 <realloc@plt>:
    6e94:	add	ip, pc, #0, 12
    6e98:	add	ip, ip, #144, 20	; 0x90000
    6e9c:	ldr	pc, [ip, #3796]!	; 0xed4

00006ea0 <strcpy@plt>:
    6ea0:	add	ip, pc, #0, 12
    6ea4:	add	ip, ip, #144, 20	; 0x90000
    6ea8:	ldr	pc, [ip, #3788]!	; 0xecc

00006eac <kmod_module_unref_list@plt>:
    6eac:	add	ip, pc, #0, 12
    6eb0:	add	ip, ip, #144, 20	; 0x90000
    6eb4:	ldr	pc, [ip, #3780]!	; 0xec4

00006eb8 <getxattr@plt>:
    6eb8:	add	ip, pc, #0, 12
    6ebc:	add	ip, ip, #144, 20	; 0x90000
    6ec0:	ldr	pc, [ip, #3772]!	; 0xebc

00006ec4 <open64@plt>:
    6ec4:	add	ip, pc, #0, 12
    6ec8:	add	ip, ip, #144, 20	; 0x90000
    6ecc:	ldr	pc, [ip, #3764]!	; 0xeb4

00006ed0 <openat64@plt>:
    6ed0:	add	ip, pc, #0, 12
    6ed4:	add	ip, ip, #144, 20	; 0x90000
    6ed8:	ldr	pc, [ip, #3756]!	; 0xeac

00006edc <blkid_probe_enable_superblocks@plt>:
    6edc:	add	ip, pc, #0, 12
    6ee0:	add	ip, ip, #144, 20	; 0x90000
    6ee4:	ldr	pc, [ip, #3748]!	; 0xea4

00006ee8 <kmod_unref@plt>:
    6ee8:	add	ip, pc, #0, 12
    6eec:	add	ip, ip, #144, 20	; 0x90000
    6ef0:	ldr	pc, [ip, #3740]!	; 0xe9c

00006ef4 <bind@plt>:
    6ef4:	add	ip, pc, #0, 12
    6ef8:	add	ip, ip, #144, 20	; 0x90000
    6efc:	ldr	pc, [ip, #3732]!	; 0xe94

00006f00 <fchmod@plt>:
    6f00:	add	ip, pc, #0, 12
    6f04:	add	ip, ip, #144, 20	; 0x90000
    6f08:	ldr	pc, [ip, #3724]!	; 0xe8c

00006f0c <blkid_partition_get_type_string@plt>:
    6f0c:	add	ip, pc, #0, 12
    6f10:	add	ip, ip, #144, 20	; 0x90000
    6f14:	ldr	pc, [ip, #3716]!	; 0xe84

00006f18 <strsep@plt>:
    6f18:	add	ip, pc, #0, 12
    6f1c:	add	ip, ip, #144, 20	; 0x90000
    6f20:	ldr	pc, [ip, #3708]!	; 0xe7c

00006f24 <chmod@plt>:
    6f24:	add	ip, pc, #0, 12
    6f28:	add	ip, ip, #144, 20	; 0x90000
    6f2c:	ldr	pc, [ip, #3700]!	; 0xe74

00006f30 <blkid_encode_string@plt>:
    6f30:	add	ip, pc, #0, 12
    6f34:	add	ip, ip, #144, 20	; 0x90000
    6f38:	ldr	pc, [ip, #3692]!	; 0xe6c

00006f3c <acl_calc_mask@plt>:
    6f3c:	add	ip, pc, #0, 12
    6f40:	add	ip, ip, #144, 20	; 0x90000
    6f44:	ldr	pc, [ip, #3684]!	; 0xe64

00006f48 <waitid@plt>:
    6f48:	add	ip, pc, #0, 12
    6f4c:	add	ip, ip, #144, 20	; 0x90000
    6f50:	ldr	pc, [ip, #3676]!	; 0xe5c

00006f54 <ether_aton@plt>:
    6f54:	add	ip, pc, #0, 12
    6f58:	add	ip, ip, #144, 20	; 0x90000
    6f5c:	ldr	pc, [ip, #3668]!	; 0xe54

00006f60 <fread@plt>:
    6f60:	add	ip, pc, #0, 12
    6f64:	add	ip, ip, #144, 20	; 0x90000
    6f68:	ldr	pc, [ip, #3660]!	; 0xe4c

00006f6c <getrlimit64@plt>:
    6f6c:	add	ip, pc, #0, 12
    6f70:	add	ip, ip, #144, 20	; 0x90000
    6f74:	ldr	pc, [ip, #3652]!	; 0xe44

00006f78 <ungetc@plt>:
    6f78:	add	ip, pc, #0, 12
    6f7c:	add	ip, ip, #144, 20	; 0x90000
    6f80:	ldr	pc, [ip, #3644]!	; 0xe3c

00006f84 <kmod_validate_resources@plt>:
    6f84:	add	ip, pc, #0, 12
    6f88:	add	ip, ip, #144, 20	; 0x90000
    6f8c:	ldr	pc, [ip, #3636]!	; 0xe34

00006f90 <fileno@plt>:
    6f90:	add	ip, pc, #0, 12
    6f94:	add	ip, ip, #144, 20	; 0x90000
    6f98:	ldr	pc, [ip, #3628]!	; 0xe2c

00006f9c <acl_get_permset@plt>:
    6f9c:	add	ip, pc, #0, 12
    6fa0:	add	ip, ip, #144, 20	; 0x90000
    6fa4:	ldr	pc, [ip, #3620]!	; 0xe24

00006fa8 <get_current_dir_name@plt>:
    6fa8:	add	ip, pc, #0, 12
    6fac:	add	ip, ip, #144, 20	; 0x90000
    6fb0:	ldr	pc, [ip, #3612]!	; 0xe1c

00006fb4 <__stack_chk_fail@plt>:
    6fb4:	add	ip, pc, #0, 12
    6fb8:	add	ip, ip, #144, 20	; 0x90000
    6fbc:	ldr	pc, [ip, #3604]!	; 0xe14

00006fc0 <fork@plt>:
    6fc0:	add	ip, pc, #0, 12
    6fc4:	add	ip, ip, #144, 20	; 0x90000
    6fc8:	ldr	pc, [ip, #3596]!	; 0xe0c

00006fcc <statvfs64@plt>:
    6fcc:	add	ip, pc, #0, 12
    6fd0:	add	ip, ip, #144, 20	; 0x90000
    6fd4:	ldr	pc, [ip, #3588]!	; 0xe04

00006fd8 <socket@plt>:
    6fd8:	add	ip, pc, #0, 12
    6fdc:	add	ip, ip, #144, 20	; 0x90000
    6fe0:	ldr	pc, [ip, #3580]!	; 0xdfc

00006fe4 <strchrnul@plt>:
    6fe4:	add	ip, pc, #0, 12
    6fe8:	add	ip, ip, #144, 20	; 0x90000
    6fec:	ldr	pc, [ip, #3572]!	; 0xdf4

00006ff0 <access@plt>:
    6ff0:	add	ip, pc, #0, 12
    6ff4:	add	ip, ip, #144, 20	; 0x90000
    6ff8:	ldr	pc, [ip, #3564]!	; 0xdec

00006ffc <isatty@plt>:
    6ffc:	add	ip, pc, #0, 12
    7000:	add	ip, ip, #144, 20	; 0x90000
    7004:	ldr	pc, [ip, #3556]!	; 0xde4

00007008 <acl_get_tag_type@plt>:
    7008:	add	ip, pc, #0, 12
    700c:	add	ip, ip, #144, 20	; 0x90000
    7010:	ldr	pc, [ip, #3548]!	; 0xddc

00007014 <sigdelset@plt>:
    7014:	add	ip, pc, #0, 12
    7018:	add	ip, ip, #144, 20	; 0x90000
    701c:	ldr	pc, [ip, #3540]!	; 0xdd4

00007020 <blkid_do_safeprobe@plt>:
    7020:	add	ip, pc, #0, 12
    7024:	add	ip, ip, #144, 20	; 0x90000
    7028:	ldr	pc, [ip, #3532]!	; 0xdcc

0000702c <mkdir@plt>:
    702c:	add	ip, pc, #0, 12
    7030:	add	ip, ip, #144, 20	; 0x90000
    7034:	ldr	pc, [ip, #3524]!	; 0xdc4

00007038 <name_to_handle_at@plt>:
    7038:	add	ip, pc, #0, 12
    703c:	add	ip, ip, #144, 20	; 0x90000
    7040:	ldr	pc, [ip, #3516]!	; 0xdbc

00007044 <getc@plt>:
    7044:	add	ip, pc, #0, 12
    7048:	add	ip, ip, #144, 20	; 0x90000
    704c:	ldr	pc, [ip, #3508]!	; 0xdb4

00007050 <strstr@plt>:
    7050:	add	ip, pc, #0, 12
    7054:	add	ip, ip, #144, 20	; 0x90000
    7058:	ldr	pc, [ip, #3500]!	; 0xdac

0000705c <kmod_module_get_name@plt>:
    705c:	add	ip, pc, #0, 12
    7060:	add	ip, ip, #144, 20	; 0x90000
    7064:	ldr	pc, [ip, #3492]!	; 0xda4

00007068 <__register_atfork@plt>:
    7068:	add	ip, pc, #0, 12
    706c:	add	ip, ip, #144, 20	; 0x90000
    7070:	ldr	pc, [ip, #3484]!	; 0xd9c

00007074 <sigisemptyset@plt>:
    7074:	add	ip, pc, #0, 12
    7078:	add	ip, ip, #144, 20	; 0x90000
    707c:	ldr	pc, [ip, #3476]!	; 0xd94

00007080 <__asprintf_chk@plt>:
    7080:	add	ip, pc, #0, 12
    7084:	add	ip, ip, #144, 20	; 0x90000
    7088:	ldr	pc, [ip, #3468]!	; 0xd8c

0000708c <basename@plt>:
    708c:	add	ip, pc, #0, 12
    7090:	add	ip, ip, #144, 20	; 0x90000
    7094:	ldr	pc, [ip, #3460]!	; 0xd84

00007098 <fdopendir@plt>:
    7098:	add	ip, pc, #0, 12
    709c:	add	ip, ip, #144, 20	; 0x90000
    70a0:	ldr	pc, [ip, #3452]!	; 0xd7c

000070a4 <getopt_long@plt>:
    70a4:	add	ip, pc, #0, 12
    70a8:	add	ip, ip, #144, 20	; 0x90000
    70ac:	ldr	pc, [ip, #3444]!	; 0xd74

000070b0 <setsockopt@plt>:
    70b0:	add	ip, pc, #0, 12
    70b4:	add	ip, ip, #144, 20	; 0x90000
    70b8:	ldr	pc, [ip, #3436]!	; 0xd6c

000070bc <acl_get_entry@plt>:
    70bc:	add	ip, pc, #0, 12
    70c0:	add	ip, ip, #144, 20	; 0x90000
    70c4:	ldr	pc, [ip, #3428]!	; 0xd64

000070c8 <epoll_create1@plt>:
    70c8:	add	ip, pc, #0, 12
    70cc:	add	ip, ip, #144, 20	; 0x90000
    70d0:	ldr	pc, [ip, #3420]!	; 0xd5c

000070d4 <blkid_probe_set_partitions_flags@plt>:
    70d4:	add	ip, pc, #0, 12
    70d8:	add	ip, ip, #144, 20	; 0x90000
    70dc:	ldr	pc, [ip, #3412]!	; 0xd54

000070e0 <symlink@plt>:
    70e0:	add	ip, pc, #0, 12
    70e4:	add	ip, ip, #144, 20	; 0x90000
    70e8:	ldr	pc, [ip, #3404]!	; 0xd4c

000070ec <acl_add_perm@plt>:
    70ec:	add	ip, pc, #0, 12
    70f0:	add	ip, ip, #144, 20	; 0x90000
    70f4:	ldr	pc, [ip, #3396]!	; 0xd44

000070f8 <raise@plt>:
    70f8:	add	ip, pc, #0, 12
    70fc:	add	ip, ip, #144, 20	; 0x90000
    7100:	ldr	pc, [ip, #3388]!	; 0xd3c

00007104 <__ctype_b_loc@plt>:
    7104:	add	ip, pc, #0, 12
    7108:	add	ip, ip, #144, 20	; 0x90000
    710c:	ldr	pc, [ip, #3380]!	; 0xd34

00007110 <getuid@plt>:
    7110:	add	ip, pc, #0, 12
    7114:	add	ip, ip, #144, 20	; 0x90000
    7118:	ldr	pc, [ip, #3372]!	; 0xd2c

0000711c <reallocarray@plt>:
    711c:	add	ip, pc, #0, 12
    7120:	add	ip, ip, #144, 20	; 0x90000
    7124:	ldr	pc, [ip, #3364]!	; 0xd24

00007128 <strtoull@plt>:
    7128:	add	ip, pc, #0, 12
    712c:	add	ip, ip, #144, 20	; 0x90000
    7130:	ldr	pc, [ip, #3356]!	; 0xd1c

00007134 <connect@plt>:
    7134:	add	ip, pc, #0, 12
    7138:	add	ip, ip, #144, 20	; 0x90000
    713c:	ldr	pc, [ip, #3348]!	; 0xd14

00007140 <sigaction@plt>:
    7140:	add	ip, pc, #0, 12
    7144:	add	ip, ip, #144, 20	; 0x90000
    7148:	ldr	pc, [ip, #3340]!	; 0xd0c

0000714c <rewinddir@plt>:
    714c:	add	ip, pc, #0, 12
    7150:	add	ip, ip, #144, 20	; 0x90000
    7154:	ldr	pc, [ip, #3332]!	; 0xd04

00007158 <sysconf@plt>:
    7158:	add	ip, pc, #0, 12
    715c:	add	ip, ip, #144, 20	; 0x90000
    7160:	ldr	pc, [ip, #3324]!	; 0xcfc

00007164 <calloc@plt>:
    7164:	add	ip, pc, #0, 12
    7168:	add	ip, ip, #144, 20	; 0x90000
    716c:	ldr	pc, [ip, #3316]!	; 0xcf4

00007170 <epoll_wait@plt>:
    7170:	add	ip, pc, #0, 12
    7174:	add	ip, ip, #144, 20	; 0x90000
    7178:	ldr	pc, [ip, #3308]!	; 0xcec

0000717c <kmod_module_get_initstate@plt>:
    717c:	add	ip, pc, #0, 12
    7180:	add	ip, ip, #144, 20	; 0x90000
    7184:	ldr	pc, [ip, #3300]!	; 0xce4

00007188 <ferror@plt>:
    7188:	add	ip, pc, #0, 12
    718c:	add	ip, ip, #144, 20	; 0x90000
    7190:	ldr	pc, [ip, #3292]!	; 0xcdc

00007194 <blkid_probe_get_fd@plt>:
    7194:	add	ip, pc, #0, 12
    7198:	add	ip, ip, #144, 20	; 0x90000
    719c:	ldr	pc, [ip, #3284]!	; 0xcd4

000071a0 <security_getenforce@plt>:
    71a0:	add	ip, pc, #0, 12
    71a4:	add	ip, ip, #144, 20	; 0x90000
    71a8:	ldr	pc, [ip, #3276]!	; 0xccc

000071ac <fgets@plt>:
    71ac:	add	ip, pc, #0, 12
    71b0:	add	ip, ip, #144, 20	; 0x90000
    71b4:	ldr	pc, [ip, #3268]!	; 0xcc4

000071b8 <flockfile@plt>:
    71b8:	add	ip, pc, #0, 12
    71bc:	add	ip, ip, #144, 20	; 0x90000
    71c0:	ldr	pc, [ip, #3260]!	; 0xcbc

000071c4 <fputc@plt>:
    71c4:	add	ip, pc, #0, 12
    71c8:	add	ip, ip, #144, 20	; 0x90000
    71cc:	ldr	pc, [ip, #3252]!	; 0xcb4

000071d0 <setvbuf@plt>:
    71d0:	add	ip, pc, #0, 12
    71d4:	add	ip, ip, #144, 20	; 0x90000
    71d8:	ldr	pc, [ip, #3244]!	; 0xcac

000071dc <fwrite@plt>:
    71dc:	add	ip, pc, #0, 12
    71e0:	add	ip, ip, #144, 20	; 0x90000
    71e4:	ldr	pc, [ip, #3236]!	; 0xca4

000071e8 <memcpy@plt>:
    71e8:	add	ip, pc, #0, 12
    71ec:	add	ip, ip, #144, 20	; 0x90000
    71f0:	ldr	pc, [ip, #3228]!	; 0xc9c

000071f4 <umask@plt>:
    71f4:	add	ip, pc, #0, 12
    71f8:	add	ip, ip, #144, 20	; 0x90000
    71fc:	ldr	pc, [ip, #3220]!	; 0xc94

00007200 <blkid_probe_set_superblocks_flags@plt>:
    7200:	add	ip, pc, #0, 12
    7204:	add	ip, ip, #144, 20	; 0x90000
    7208:	ldr	pc, [ip, #3212]!	; 0xc8c

0000720c <__fxstatat64@plt>:
    720c:	add	ip, pc, #0, 12
    7210:	add	ip, ip, #144, 20	; 0x90000
    7214:	ldr	pc, [ip, #3204]!	; 0xc84

00007218 <geteuid@plt>:
    7218:	add	ip, pc, #0, 12
    721c:	add	ip, ip, #144, 20	; 0x90000
    7220:	ldr	pc, [ip, #3196]!	; 0xc7c

00007224 <getgid@plt>:
    7224:	add	ip, pc, #0, 12
    7228:	add	ip, ip, #144, 20	; 0x90000
    722c:	ldr	pc, [ip, #3188]!	; 0xc74

00007230 <malloc@plt>:
    7230:	add	ip, pc, #0, 12
    7234:	add	ip, ip, #144, 20	; 0x90000
    7238:	ldr	pc, [ip, #3180]!	; 0xc6c

0000723c <strlen@plt>:
    723c:	add	ip, pc, #0, 12
    7240:	add	ip, ip, #144, 20	; 0x90000
    7244:	ldr	pc, [ip, #3172]!	; 0xc64

00007248 <kmod_module_new_from_lookup@plt>:
    7248:	add	ip, pc, #0, 12
    724c:	add	ip, ip, #144, 20	; 0x90000
    7250:	ldr	pc, [ip, #3164]!	; 0xc5c

00007254 <freecon@plt>:
    7254:	add	ip, pc, #0, 12
    7258:	add	ip, ip, #144, 20	; 0x90000
    725c:	ldr	pc, [ip, #3156]!	; 0xc54

00007260 <__snprintf_chk@plt>:
    7260:	add	ip, pc, #0, 12
    7264:	add	ip, ip, #144, 20	; 0x90000
    7268:	ldr	pc, [ip, #3148]!	; 0xc4c

0000726c <munmap@plt>:
    726c:	add	ip, pc, #0, 12
    7270:	add	ip, ip, #144, 20	; 0x90000
    7274:	ldr	pc, [ip, #3140]!	; 0xc44

00007278 <usleep@plt>:
    7278:	add	ip, pc, #0, 12
    727c:	add	ip, ip, #144, 20	; 0x90000
    7280:	ldr	pc, [ip, #3132]!	; 0xc3c

00007284 <fclose@plt>:
    7284:	add	ip, pc, #0, 12
    7288:	add	ip, ip, #144, 20	; 0x90000
    728c:	ldr	pc, [ip, #3124]!	; 0xc34

00007290 <write@plt>:
    7290:	add	ip, pc, #0, 12
    7294:	add	ip, ip, #144, 20	; 0x90000
    7298:	ldr	pc, [ip, #3116]!	; 0xc2c

0000729c <blkid_partition_get_flags@plt>:
    729c:	add	ip, pc, #0, 12
    72a0:	add	ip, ip, #144, 20	; 0x90000
    72a4:	ldr	pc, [ip, #3108]!	; 0xc24

000072a8 <setfilecon_raw@plt>:
    72a8:	add	ip, pc, #0, 12
    72ac:	add	ip, ip, #144, 20	; 0x90000
    72b0:	ldr	pc, [ip, #3100]!	; 0xc1c

000072b4 <sigismember@plt>:
    72b4:	add	ip, pc, #0, 12
    72b8:	add	ip, ip, #144, 20	; 0x90000
    72bc:	ldr	pc, [ip, #3092]!	; 0xc14

000072c0 <mempcpy@plt>:
    72c0:	add	ip, pc, #0, 12
    72c4:	add	ip, ip, #144, 20	; 0x90000
    72c8:	ldr	pc, [ip, #3084]!	; 0xc0c

000072cc <fcntl64@plt>:
    72cc:	add	ip, pc, #0, 12
    72d0:	add	ip, ip, #144, 20	; 0x90000
    72d4:	ldr	pc, [ip, #3076]!	; 0xc04

000072d8 <faccessat@plt>:
    72d8:	add	ip, pc, #0, 12
    72dc:	add	ip, ip, #144, 20	; 0x90000
    72e0:	ldr	pc, [ip, #3068]!	; 0xbfc

000072e4 <qsort_r@plt>:
    72e4:	add	ip, pc, #0, 12
    72e8:	add	ip, ip, #144, 20	; 0x90000
    72ec:	ldr	pc, [ip, #3060]!	; 0xbf4

000072f0 <_exit@plt>:
    72f0:	add	ip, pc, #0, 12
    72f4:	add	ip, ip, #144, 20	; 0x90000
    72f8:	ldr	pc, [ip, #3052]!	; 0xbec

000072fc <acl_get_perm@plt>:
    72fc:	add	ip, pc, #0, 12
    7300:	add	ip, ip, #144, 20	; 0x90000
    7304:	ldr	pc, [ip, #3044]!	; 0xbe4

00007308 <blkid_probe_filter_superblocks_usage@plt>:
    7308:	add	ip, pc, #0, 12
    730c:	add	ip, ip, #144, 20	; 0x90000
    7310:	ldr	pc, [ip, #3036]!	; 0xbdc

00007314 <strcmp@plt>:
    7314:	add	ip, pc, #0, 12
    7318:	add	ip, ip, #144, 20	; 0x90000
    731c:	ldr	pc, [ip, #3028]!	; 0xbd4

00007320 <acl_set_file@plt>:
    7320:	add	ip, pc, #0, 12
    7324:	add	ip, ip, #144, 20	; 0x90000
    7328:	ldr	pc, [ip, #3020]!	; 0xbcc

0000732c <__errno_location@plt>:
    732c:	add	ip, pc, #0, 12
    7330:	add	ip, ip, #144, 20	; 0x90000
    7334:	ldr	pc, [ip, #3012]!	; 0xbc4

00007338 <inotify_init1@plt>:
    7338:	add	ip, pc, #0, 12
    733c:	add	ip, ip, #144, 20	; 0x90000
    7340:	ldr	pc, [ip, #3004]!	; 0xbbc

00007344 <send@plt>:
    7344:	add	ip, pc, #0, 12
    7348:	add	ip, ip, #144, 20	; 0x90000
    734c:	ldr	pc, [ip, #2996]!	; 0xbb4

00007350 <memchr@plt>:
    7350:	add	ip, pc, #0, 12
    7354:	add	ip, ip, #144, 20	; 0x90000
    7358:	ldr	pc, [ip, #2988]!	; 0xbac

0000735c <sscanf@plt>:
    735c:	add	ip, pc, #0, 12
    7360:	add	ip, ip, #144, 20	; 0x90000
    7364:	ldr	pc, [ip, #2980]!	; 0xba4

00007368 <__lxstat64@plt>:
    7368:	add	ip, pc, #0, 12
    736c:	add	ip, ip, #144, 20	; 0x90000
    7370:	ldr	pc, [ip, #2972]!	; 0xb9c

00007374 <strncpy@plt>:
    7374:	add	ip, pc, #0, 12
    7378:	add	ip, ip, #144, 20	; 0x90000
    737c:	ldr	pc, [ip, #2964]!	; 0xb94

00007380 <fflush@plt>:
    7380:	add	ip, pc, #0, 12
    7384:	add	ip, ip, #144, 20	; 0x90000
    7388:	ldr	pc, [ip, #2956]!	; 0xb8c

0000738c <fopen64@plt>:
    738c:	add	ip, pc, #0, 12
    7390:	add	ip, ip, #144, 20	; 0x90000
    7394:	ldr	pc, [ip, #2948]!	; 0xb84

00007398 <memcmp@plt>:
    7398:	add	ip, pc, #0, 12
    739c:	add	ip, ip, #144, 20	; 0x90000
    73a0:	ldr	pc, [ip, #2940]!	; 0xb7c

000073a4 <timerfd_create@plt>:
    73a4:	add	ip, pc, #0, 12
    73a8:	add	ip, ip, #144, 20	; 0x90000
    73ac:	ldr	pc, [ip, #2932]!	; 0xb74

000073b0 <getauxval@plt>:
    73b0:	add	ip, pc, #0, 12
    73b4:	add	ip, ip, #144, 20	; 0x90000
    73b8:	ldr	pc, [ip, #2924]!	; 0xb6c

000073bc <__libc_current_sigrtmax@plt>:
    73bc:	add	ip, pc, #0, 12
    73c0:	add	ip, ip, #144, 20	; 0x90000
    73c4:	ldr	pc, [ip, #2916]!	; 0xb64

000073c8 <writev@plt>:
    73c8:	add	ip, pc, #0, 12
    73cc:	add	ip, ip, #144, 20	; 0x90000
    73d0:	ldr	pc, [ip, #2908]!	; 0xb5c

000073d4 <acl_get_qualifier@plt>:
    73d4:	add	ip, pc, #0, 12
    73d8:	add	ip, ip, #144, 20	; 0x90000
    73dc:	ldr	pc, [ip, #2900]!	; 0xb54

000073e0 <sendmsg@plt>:
    73e0:	add	ip, pc, #0, 12
    73e4:	add	ip, ip, #144, 20	; 0x90000
    73e8:	ldr	pc, [ip, #2892]!	; 0xb4c

000073ec <sigemptyset@plt>:
    73ec:	add	ip, pc, #0, 12
    73f0:	add	ip, ip, #144, 20	; 0x90000
    73f4:	ldr	pc, [ip, #2884]!	; 0xb44

000073f8 <blkid_partition_get_uuid@plt>:
    73f8:	add	ip, pc, #0, 12
    73fc:	add	ip, ip, #144, 20	; 0x90000
    7400:	ldr	pc, [ip, #2876]!	; 0xb3c

00007404 <__sprintf_chk@plt>:
    7404:	add	ip, pc, #0, 12
    7408:	add	ip, ip, #144, 20	; 0x90000
    740c:	ldr	pc, [ip, #2868]!	; 0xb34

00007410 <strrchr@plt>:
    7410:	add	ip, pc, #0, 12
    7414:	add	ip, ip, #144, 20	; 0x90000
    7418:	ldr	pc, [ip, #2860]!	; 0xb2c

0000741c <blkid_partlist_get_partition@plt>:
    741c:	add	ip, pc, #0, 12
    7420:	add	ip, ip, #144, 20	; 0x90000
    7424:	ldr	pc, [ip, #2852]!	; 0xb24

00007428 <__vasprintf_chk@plt>:
    7428:	add	ip, pc, #0, 12
    742c:	add	ip, ip, #144, 20	; 0x90000
    7430:	ldr	pc, [ip, #2844]!	; 0xb1c

00007434 <getsockname@plt>:
    7434:	add	ip, pc, #0, 12
    7438:	add	ip, ip, #144, 20	; 0x90000
    743c:	ldr	pc, [ip, #2836]!	; 0xb14

00007440 <funlockfile@plt>:
    7440:	add	ip, pc, #0, 12
    7444:	add	ip, ip, #144, 20	; 0x90000
    7448:	ldr	pc, [ip, #2828]!	; 0xb0c

0000744c <secure_getenv@plt>:
    744c:	add	ip, pc, #0, 12
    7450:	add	ip, ip, #144, 20	; 0x90000
    7454:	ldr	pc, [ip, #2820]!	; 0xb04

00007458 <fputs@plt>:
    7458:	add	ip, pc, #0, 12
    745c:	add	ip, ip, #144, 20	; 0x90000
    7460:	ldr	pc, [ip, #2812]!	; 0xafc

00007464 <getenv@plt>:
    7464:	add	ip, pc, #0, 12
    7468:	add	ip, ip, #144, 20	; 0x90000
    746c:	ldr	pc, [ip, #2804]!	; 0xaf4

00007470 <__libc_start_main@plt>:
    7470:	add	ip, pc, #0, 12
    7474:	add	ip, ip, #144, 20	; 0x90000
    7478:	ldr	pc, [ip, #2796]!	; 0xaec

0000747c <__gmon_start__@plt>:
    747c:	add	ip, pc, #0, 12
    7480:	add	ip, ip, #144, 20	; 0x90000
    7484:	ldr	pc, [ip, #2788]!	; 0xae4

00007488 <getpwuid_r@plt>:
    7488:	add	ip, pc, #0, 12
    748c:	add	ip, ip, #144, 20	; 0x90000
    7490:	ldr	pc, [ip, #2780]!	; 0xadc

00007494 <rename@plt>:
    7494:	add	ip, pc, #0, 12
    7498:	add	ip, ip, #144, 20	; 0x90000
    749c:	ldr	pc, [ip, #2772]!	; 0xad4

000074a0 <getgrnam@plt>:
    74a0:	add	ip, pc, #0, 12
    74a4:	add	ip, ip, #144, 20	; 0x90000
    74a8:	ldr	pc, [ip, #2764]!	; 0xacc

000074ac <srand@plt>:
    74ac:	add	ip, pc, #0, 12
    74b0:	add	ip, ip, #144, 20	; 0x90000
    74b4:	ldr	pc, [ip, #2756]!	; 0xac4

000074b8 <sigprocmask@plt>:
    74b8:	add	ip, pc, #0, 12
    74bc:	add	ip, ip, #144, 20	; 0x90000
    74c0:	ldr	pc, [ip, #2748]!	; 0xabc

000074c4 <strchr@plt>:
    74c4:	add	ip, pc, #0, 12
    74c8:	add	ip, ip, #144, 20	; 0x90000
    74cc:	ldr	pc, [ip, #2740]!	; 0xab4

000074d0 <__cxa_finalize@plt>:
    74d0:	add	ip, pc, #0, 12
    74d4:	add	ip, ip, #144, 20	; 0x90000
    74d8:	ldr	pc, [ip, #2732]!	; 0xaac

000074dc <__tls_get_addr@plt>:
    74dc:	add	ip, pc, #0, 12
    74e0:	add	ip, ip, #144, 20	; 0x90000
    74e4:	ldr	pc, [ip, #2724]!	; 0xaa4

000074e8 <strdup@plt>:
    74e8:	add	ip, pc, #0, 12
    74ec:	add	ip, ip, #144, 20	; 0x90000
    74f0:	ldr	pc, [ip, #2716]!	; 0xa9c

000074f4 <__printf_chk@plt>:
    74f4:	add	ip, pc, #0, 12
    74f8:	add	ip, ip, #144, 20	; 0x90000
    74fc:	ldr	pc, [ip, #2708]!	; 0xa94

00007500 <selabel_open@plt>:
    7500:	add	ip, pc, #0, 12
    7504:	add	ip, ip, #144, 20	; 0x90000
    7508:	ldr	pc, [ip, #2700]!	; 0xa8c

0000750c <__openat64_2@plt>:
    750c:	add	ip, pc, #0, 12
    7510:	add	ip, ip, #144, 20	; 0x90000
    7514:	ldr	pc, [ip, #2692]!	; 0xa84

00007518 <blkid_probe_get_size@plt>:
    7518:	add	ip, pc, #0, 12
    751c:	add	ip, ip, #144, 20	; 0x90000
    7520:	ldr	pc, [ip, #2684]!	; 0xa7c

Disassembly of section .text:

00007528 <.text>:
    7528:	ldr	r3, [pc, #3380]	; 8264 <blkid_probe_get_size@plt+0xd4c>
    752c:	ldr	ip, [pc, #3380]	; 8268 <blkid_probe_get_size@plt+0xd50>
    7530:	add	r3, pc, r3
    7534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7538:	mov	r7, r1
    753c:	add	fp, sp, #32
    7540:	sub	sp, sp, #76	; 0x4c
    7544:	ldr	r1, [r3, ip]
    7548:	subs	r4, r0, #0
    754c:	str	r1, [fp, #-64]	; 0xffffffc0
    7550:	ldr	r3, [r1]
    7554:	str	r3, [fp, #-40]	; 0xffffffd8
    7558:	bne	7588 <blkid_probe_get_size@plt+0x70>
    755c:	ldr	r2, [pc, #3336]	; 826c <blkid_probe_get_size@plt+0xd54>
    7560:	ldr	r1, [pc, #3336]	; 8270 <blkid_probe_get_size@plt+0xd58>
    7564:	add	r2, pc, r2
    7568:	add	r2, r2, #1568	; 0x620
    756c:	add	r2, r2, #12
    7570:	str	r2, [sp]
    7574:	ldr	r2, [pc, #3320]	; 8274 <blkid_probe_get_size@plt+0xd5c>
    7578:	mov	r3, #190	; 0xbe
    757c:	add	r2, pc, r2
    7580:	add	r1, pc, r1
    7584:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    7588:	cmp	r7, #0
    758c:	bne	75c0 <blkid_probe_get_size@plt+0xa8>
    7590:	ldr	r3, [pc, #3296]	; 8278 <blkid_probe_get_size@plt+0xd60>
    7594:	ldr	r2, [pc, #3296]	; 827c <blkid_probe_get_size@plt+0xd64>
    7598:	add	r3, pc, r3
    759c:	add	r3, r3, #1568	; 0x620
    75a0:	ldr	r1, [pc, #3288]	; 8280 <blkid_probe_get_size@plt+0xd68>
    75a4:	add	r3, r3, #12
    75a8:	str	r3, [sp]
    75ac:	mov	r0, r7
    75b0:	mov	r3, #191	; 0xbf
    75b4:	add	r2, pc, r2
    75b8:	add	r1, pc, r1
    75bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    75c0:	cmp	r2, #0
    75c4:	mov	r6, r2
    75c8:	bne	75fc <blkid_probe_get_size@plt+0xe4>
    75cc:	ldr	r3, [pc, #3248]	; 8284 <blkid_probe_get_size@plt+0xd6c>
    75d0:	mov	r0, r2
    75d4:	add	r3, pc, r3
    75d8:	add	r3, r3, #1568	; 0x620
    75dc:	ldr	r2, [pc, #3236]	; 8288 <blkid_probe_get_size@plt+0xd70>
    75e0:	ldr	r1, [pc, #3236]	; 828c <blkid_probe_get_size@plt+0xd74>
    75e4:	add	r3, r3, #12
    75e8:	str	r3, [sp]
    75ec:	add	r2, pc, r2
    75f0:	mov	r3, #192	; 0xc0
    75f4:	add	r1, pc, r1
    75f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    75fc:	ldr	r1, [pc, #3212]	; 8290 <blkid_probe_get_size@plt+0xd78>
    7600:	mov	r0, r7
    7604:	add	r1, pc, r1
    7608:	bl	7314 <strcmp@plt>
    760c:	subs	r8, r0, #0
    7610:	bne	7730 <blkid_probe_get_size@plt+0x218>
    7614:	mov	r0, r6
    7618:	bl	723c <strlen@plt>
    761c:	add	r3, r0, #5
    7620:	cmp	r3, #4194304	; 0x400000
    7624:	bls	7658 <blkid_probe_get_size@plt+0x140>
    7628:	ldr	r3, [pc, #3172]	; 8294 <blkid_probe_get_size@plt+0xd7c>
    762c:	ldr	r2, [pc, #3172]	; 8298 <blkid_probe_get_size@plt+0xd80>
    7630:	add	r3, pc, r3
    7634:	add	r3, r3, #1568	; 0x620
    7638:	ldr	r1, [pc, #3164]	; 829c <blkid_probe_get_size@plt+0xd84>
    763c:	add	r3, r3, #12
    7640:	str	r3, [sp]
    7644:	mov	r0, r8
    7648:	mov	r3, #197	; 0xc5
    764c:	add	r2, pc, r2
    7650:	add	r1, pc, r1
    7654:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    7658:	add	r0, r0, #19
    765c:	bic	r0, r0, #7
    7660:	sub	sp, sp, r0
    7664:	ldr	r1, [pc, #3124]	; 82a0 <blkid_probe_get_size@plt+0xd88>
    7668:	add	r5, sp, #32
    766c:	add	r1, pc, r1
    7670:	mov	r0, r5
    7674:	bl	6ae0 <stpcpy@plt>
    7678:	mov	r1, r6
    767c:	bl	6ea0 <strcpy@plt>
    7680:	mov	r2, r8
    7684:	mov	r1, r5
    7688:	mov	r0, r4
    768c:	bl	24cc0 <blkid_probe_get_size@plt+0x1d7a8>
    7690:	subs	r6, r0, #0
    7694:	blt	76a0 <blkid_probe_get_size@plt+0x188>
    7698:	mov	r5, #0
    769c:	b	8240 <blkid_probe_get_size@plt+0xd28>
    76a0:	ldr	r3, [pc, #3068]	; 82a4 <blkid_probe_get_size@plt+0xd8c>
    76a4:	str	r8, [fp, #-52]	; 0xffffffcc
    76a8:	add	r3, pc, r3
    76ac:	ldr	r3, [r3]
    76b0:	cmp	r3, #6
    76b4:	ble	76c4 <blkid_probe_get_size@plt+0x1ac>
    76b8:	mov	r0, r4
    76bc:	sub	r1, fp, #52	; 0x34
    76c0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    76c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    76c8:	cmp	r1, #0
    76cc:	moveq	ip, r1
    76d0:	ldrne	ip, [pc, #3024]	; 82a8 <blkid_probe_get_size@plt+0xd90>
    76d4:	addne	ip, pc, ip
    76d8:	ldr	r3, [pc, #3020]	; 82ac <blkid_probe_get_size@plt+0xd94>
    76dc:	ldr	r2, [pc, #3020]	; 82b0 <blkid_probe_get_size@plt+0xd98>
    76e0:	add	r3, pc, r3
    76e4:	add	r2, pc, r2
    76e8:	str	r2, [sp, #20]
    76ec:	add	r3, r3, #1584	; 0x630
    76f0:	ldr	r2, [pc, #3004]	; 82b4 <blkid_probe_get_size@plt+0xd9c>
    76f4:	mov	r0, #0
    76f8:	add	r3, r3, #12
    76fc:	str	r5, [sp, #24]
    7700:	str	r1, [sp, #8]
    7704:	str	r3, [sp]
    7708:	str	r0, [sp, #16]
    770c:	str	r0, [sp, #12]
    7710:	str	ip, [sp, #4]
    7714:	mov	r1, r6
    7718:	mov	r3, #202	; 0xca
    771c:	add	r2, pc, r2
    7720:	mov	r0, #7
    7724:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7728:	mov	r5, r0
    772c:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7730:	ldr	r1, [pc, #2944]	; 82b8 <blkid_probe_get_size@plt+0xda0>
    7734:	mov	r0, r7
    7738:	add	r1, pc, r1
    773c:	bl	7314 <strcmp@plt>
    7740:	subs	r8, r0, #0
    7744:	bne	77ec <blkid_probe_get_size@plt+0x2d4>
    7748:	mov	r1, r6
    774c:	mov	r0, r4
    7750:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
    7754:	subs	r5, r0, #0
    7758:	bge	7698 <blkid_probe_get_size@plt+0x180>
    775c:	ldr	r3, [pc, #2904]	; 82bc <blkid_probe_get_size@plt+0xda4>
    7760:	str	r8, [fp, #-52]	; 0xffffffcc
    7764:	add	r3, pc, r3
    7768:	ldr	r3, [r3]
    776c:	cmp	r3, #6
    7770:	ble	7780 <blkid_probe_get_size@plt+0x268>
    7774:	mov	r0, r4
    7778:	sub	r1, fp, #52	; 0x34
    777c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7780:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7784:	cmp	r1, #0
    7788:	moveq	ip, r1
    778c:	ldrne	ip, [pc, #2860]	; 82c0 <blkid_probe_get_size@plt+0xda8>
    7790:	addne	ip, pc, ip
    7794:	ldr	r3, [pc, #2856]	; 82c4 <blkid_probe_get_size@plt+0xdac>
    7798:	ldr	r2, [pc, #2856]	; 82c8 <blkid_probe_get_size@plt+0xdb0>
    779c:	add	r3, pc, r3
    77a0:	add	r2, pc, r2
    77a4:	str	r2, [sp, #20]
    77a8:	add	r3, r3, #1584	; 0x630
    77ac:	ldr	r2, [pc, #2840]	; 82cc <blkid_probe_get_size@plt+0xdb4>
    77b0:	mov	r0, #0
    77b4:	add	r3, r3, #12
    77b8:	str	r1, [sp, #8]
    77bc:	str	r3, [sp]
    77c0:	mov	r1, r5
    77c4:	str	r0, [sp, #16]
    77c8:	str	r0, [sp, #12]
    77cc:	str	r6, [sp, #24]
    77d0:	str	ip, [sp, #4]
    77d4:	mov	r3, #206	; 0xce
    77d8:	add	r2, pc, r2
    77dc:	mov	r0, #7
    77e0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    77e4:	mov	r5, r0
    77e8:	b	8240 <blkid_probe_get_size@plt+0xd28>
    77ec:	ldr	r1, [pc, #2780]	; 82d0 <blkid_probe_get_size@plt+0xdb8>
    77f0:	mov	r0, r7
    77f4:	add	r1, pc, r1
    77f8:	bl	7314 <strcmp@plt>
    77fc:	subs	r8, r0, #0
    7800:	bne	78a8 <blkid_probe_get_size@plt+0x390>
    7804:	mov	r1, r6
    7808:	mov	r0, r4
    780c:	bl	24414 <blkid_probe_get_size@plt+0x1cefc>
    7810:	subs	r5, r0, #0
    7814:	bge	7698 <blkid_probe_get_size@plt+0x180>
    7818:	ldr	r3, [pc, #2740]	; 82d4 <blkid_probe_get_size@plt+0xdbc>
    781c:	str	r8, [fp, #-52]	; 0xffffffcc
    7820:	add	r3, pc, r3
    7824:	ldr	r3, [r3]
    7828:	cmp	r3, #6
    782c:	ble	783c <blkid_probe_get_size@plt+0x324>
    7830:	mov	r0, r4
    7834:	sub	r1, fp, #52	; 0x34
    7838:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    783c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7840:	cmp	r1, #0
    7844:	moveq	ip, r1
    7848:	ldrne	ip, [pc, #2696]	; 82d8 <blkid_probe_get_size@plt+0xdc0>
    784c:	addne	ip, pc, ip
    7850:	ldr	r3, [pc, #2692]	; 82dc <blkid_probe_get_size@plt+0xdc4>
    7854:	ldr	r2, [pc, #2692]	; 82e0 <blkid_probe_get_size@plt+0xdc8>
    7858:	add	r3, pc, r3
    785c:	add	r2, pc, r2
    7860:	str	r2, [sp, #20]
    7864:	add	r3, r3, #1584	; 0x630
    7868:	ldr	r2, [pc, #2676]	; 82e4 <blkid_probe_get_size@plt+0xdcc>
    786c:	mov	r0, #0
    7870:	add	r3, r3, #12
    7874:	str	r1, [sp, #8]
    7878:	str	r3, [sp]
    787c:	mov	r1, r5
    7880:	str	r0, [sp, #16]
    7884:	str	r0, [sp, #12]
    7888:	str	r6, [sp, #24]
    788c:	str	ip, [sp, #4]
    7890:	mov	r3, #210	; 0xd2
    7894:	add	r2, pc, r2
    7898:	mov	r0, #7
    789c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    78a0:	mov	r5, r0
    78a4:	b	8240 <blkid_probe_get_size@plt+0xd28>
    78a8:	ldr	r1, [pc, #2616]	; 82e8 <blkid_probe_get_size@plt+0xdd0>
    78ac:	mov	r0, r7
    78b0:	add	r1, pc, r1
    78b4:	bl	7314 <strcmp@plt>
    78b8:	subs	r8, r0, #0
    78bc:	bne	7964 <blkid_probe_get_size@plt+0x44c>
    78c0:	mov	r1, r6
    78c4:	mov	r0, r4
    78c8:	bl	24188 <blkid_probe_get_size@plt+0x1cc70>
    78cc:	subs	r5, r0, #0
    78d0:	bge	7698 <blkid_probe_get_size@plt+0x180>
    78d4:	ldr	r3, [pc, #2576]	; 82ec <blkid_probe_get_size@plt+0xdd4>
    78d8:	str	r8, [fp, #-52]	; 0xffffffcc
    78dc:	add	r3, pc, r3
    78e0:	ldr	r3, [r3]
    78e4:	cmp	r3, #6
    78e8:	ble	78f8 <blkid_probe_get_size@plt+0x3e0>
    78ec:	mov	r0, r4
    78f0:	sub	r1, fp, #52	; 0x34
    78f4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    78f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    78fc:	cmp	r1, #0
    7900:	moveq	ip, r1
    7904:	ldrne	ip, [pc, #2532]	; 82f0 <blkid_probe_get_size@plt+0xdd8>
    7908:	addne	ip, pc, ip
    790c:	ldr	r3, [pc, #2528]	; 82f4 <blkid_probe_get_size@plt+0xddc>
    7910:	ldr	r2, [pc, #2528]	; 82f8 <blkid_probe_get_size@plt+0xde0>
    7914:	add	r3, pc, r3
    7918:	add	r2, pc, r2
    791c:	str	r2, [sp, #20]
    7920:	add	r3, r3, #1584	; 0x630
    7924:	ldr	r2, [pc, #2512]	; 82fc <blkid_probe_get_size@plt+0xde4>
    7928:	mov	r0, #0
    792c:	add	r3, r3, #12
    7930:	str	r1, [sp, #8]
    7934:	str	r3, [sp]
    7938:	mov	r1, r5
    793c:	str	r0, [sp, #16]
    7940:	str	r0, [sp, #12]
    7944:	str	r6, [sp, #24]
    7948:	str	ip, [sp, #4]
    794c:	mov	r3, #214	; 0xd6
    7950:	add	r2, pc, r2
    7954:	mov	r0, #7
    7958:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    795c:	mov	r5, r0
    7960:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7964:	ldr	r1, [pc, #2452]	; 8300 <blkid_probe_get_size@plt+0xde8>
    7968:	mov	r0, r7
    796c:	add	r1, pc, r1
    7970:	bl	7314 <strcmp@plt>
    7974:	subs	r5, r0, #0
    7978:	bne	7ac8 <blkid_probe_get_size@plt+0x5b0>
    797c:	sub	r1, fp, #52	; 0x34
    7980:	mov	r0, r6
    7984:	bl	40ec0 <blkid_probe_get_size@plt+0x399a8>
    7988:	subs	r7, r0, #0
    798c:	bge	7a20 <blkid_probe_get_size@plt+0x508>
    7990:	ldr	r3, [pc, #2412]	; 8304 <blkid_probe_get_size@plt+0xdec>
    7994:	str	r5, [fp, #-56]	; 0xffffffc8
    7998:	add	r3, pc, r3
    799c:	ldr	r3, [r3]
    79a0:	cmp	r3, #6
    79a4:	ble	79b4 <blkid_probe_get_size@plt+0x49c>
    79a8:	mov	r0, r4
    79ac:	sub	r1, fp, #56	; 0x38
    79b0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    79b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    79b8:	cmp	r1, #0
    79bc:	moveq	ip, r1
    79c0:	ldrne	ip, [pc, #2368]	; 8308 <blkid_probe_get_size@plt+0xdf0>
    79c4:	addne	ip, pc, ip
    79c8:	ldr	r3, [pc, #2364]	; 830c <blkid_probe_get_size@plt+0xdf4>
    79cc:	ldr	r2, [pc, #2364]	; 8310 <blkid_probe_get_size@plt+0xdf8>
    79d0:	add	r3, pc, r3
    79d4:	add	r2, pc, r2
    79d8:	str	r2, [sp, #20]
    79dc:	add	r3, r3, #1584	; 0x630
    79e0:	ldr	r2, [pc, #2348]	; 8314 <blkid_probe_get_size@plt+0xdfc>
    79e4:	mov	r0, #0
    79e8:	add	r3, r3, #12
    79ec:	str	r1, [sp, #8]
    79f0:	str	r3, [sp]
    79f4:	str	r0, [sp, #16]
    79f8:	str	r0, [sp, #12]
    79fc:	str	r6, [sp, #24]
    7a00:	str	ip, [sp, #4]
    7a04:	mov	r1, r7
    7a08:	mov	r3, #220	; 0xdc
    7a0c:	add	r2, pc, r2
    7a10:	mov	r0, #7
    7a14:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7a18:	mov	r5, r0
    7a1c:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7a20:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    7a24:	mov	r0, r4
    7a28:	bl	35964 <blkid_probe_get_size@plt+0x2e44c>
    7a2c:	subs	r7, r0, #0
    7a30:	bge	8240 <blkid_probe_get_size@plt+0xd28>
    7a34:	ldr	r3, [pc, #2268]	; 8318 <blkid_probe_get_size@plt+0xe00>
    7a38:	mov	r2, #0
    7a3c:	add	r3, pc, r3
    7a40:	str	r2, [fp, #-56]	; 0xffffffc8
    7a44:	ldr	r3, [r3]
    7a48:	cmp	r3, #6
    7a4c:	ble	7a5c <blkid_probe_get_size@plt+0x544>
    7a50:	mov	r0, r4
    7a54:	sub	r1, fp, #56	; 0x38
    7a58:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7a5c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    7a60:	cmp	r1, #0
    7a64:	moveq	ip, r1
    7a68:	ldrne	ip, [pc, #2220]	; 831c <blkid_probe_get_size@plt+0xe04>
    7a6c:	addne	ip, pc, ip
    7a70:	ldr	r3, [pc, #2216]	; 8320 <blkid_probe_get_size@plt+0xe08>
    7a74:	ldr	r2, [pc, #2216]	; 8324 <blkid_probe_get_size@plt+0xe0c>
    7a78:	add	r3, pc, r3
    7a7c:	add	r2, pc, r2
    7a80:	str	r2, [sp, #20]
    7a84:	add	r3, r3, #1584	; 0x630
    7a88:	ldr	r2, [pc, #2200]	; 8328 <blkid_probe_get_size@plt+0xe10>
    7a8c:	mov	r0, #0
    7a90:	add	r3, r3, #12
    7a94:	str	r1, [sp, #8]
    7a98:	str	r3, [sp]
    7a9c:	str	r0, [sp, #16]
    7aa0:	str	r0, [sp, #12]
    7aa4:	str	r6, [sp, #24]
    7aa8:	str	ip, [sp, #4]
    7aac:	mov	r1, r7
    7ab0:	mov	r3, #224	; 0xe0
    7ab4:	add	r2, pc, r2
    7ab8:	mov	r0, #7
    7abc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7ac0:	mov	r5, r0
    7ac4:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7ac8:	ldr	r1, [pc, #2140]	; 832c <blkid_probe_get_size@plt+0xe14>
    7acc:	mov	r0, r7
    7ad0:	add	r1, pc, r1
    7ad4:	bl	7314 <strcmp@plt>
    7ad8:	cmp	r0, #0
    7adc:	bne	7b88 <blkid_probe_get_size@plt+0x670>
    7ae0:	mov	r1, r6
    7ae4:	mov	r0, r4
    7ae8:	bl	3633c <blkid_probe_get_size@plt+0x2ee24>
    7aec:	subs	r5, r0, #0
    7af0:	bge	7698 <blkid_probe_get_size@plt+0x180>
    7af4:	ldr	r3, [pc, #2100]	; 8330 <blkid_probe_get_size@plt+0xe18>
    7af8:	mov	r2, #0
    7afc:	add	r3, pc, r3
    7b00:	str	r2, [fp, #-52]	; 0xffffffcc
    7b04:	ldr	r3, [r3]
    7b08:	cmp	r3, #6
    7b0c:	ble	7b1c <blkid_probe_get_size@plt+0x604>
    7b10:	mov	r0, r4
    7b14:	sub	r1, fp, #52	; 0x34
    7b18:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7b1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7b20:	cmp	r1, #0
    7b24:	moveq	ip, r1
    7b28:	ldrne	ip, [pc, #2052]	; 8334 <blkid_probe_get_size@plt+0xe1c>
    7b2c:	addne	ip, pc, ip
    7b30:	ldr	r3, [pc, #2048]	; 8338 <blkid_probe_get_size@plt+0xe20>
    7b34:	ldr	r2, [pc, #2048]	; 833c <blkid_probe_get_size@plt+0xe24>
    7b38:	add	r3, pc, r3
    7b3c:	add	r2, pc, r2
    7b40:	str	r2, [sp, #20]
    7b44:	add	r3, r3, #1584	; 0x630
    7b48:	ldr	r2, [pc, #2032]	; 8340 <blkid_probe_get_size@plt+0xe28>
    7b4c:	mov	r0, #0
    7b50:	add	r3, r3, #12
    7b54:	str	r1, [sp, #8]
    7b58:	str	r3, [sp]
    7b5c:	mov	r1, r5
    7b60:	str	r0, [sp, #16]
    7b64:	str	r0, [sp, #12]
    7b68:	str	r6, [sp, #24]
    7b6c:	str	ip, [sp, #4]
    7b70:	mov	r3, #228	; 0xe4
    7b74:	add	r2, pc, r2
    7b78:	mov	r0, #7
    7b7c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7b80:	mov	r5, r0
    7b84:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7b88:	ldr	r1, [pc, #1972]	; 8344 <blkid_probe_get_size@plt+0xe2c>
    7b8c:	mov	r0, r7
    7b90:	add	r1, pc, r1
    7b94:	bl	7314 <strcmp@plt>
    7b98:	cmp	r0, #0
    7b9c:	bne	7c48 <blkid_probe_get_size@plt+0x730>
    7ba0:	mov	r1, r6
    7ba4:	mov	r0, r4
    7ba8:	bl	242f8 <blkid_probe_get_size@plt+0x1cde0>
    7bac:	subs	r5, r0, #0
    7bb0:	bge	7698 <blkid_probe_get_size@plt+0x180>
    7bb4:	ldr	r3, [pc, #1932]	; 8348 <blkid_probe_get_size@plt+0xe30>
    7bb8:	mov	r2, #0
    7bbc:	add	r3, pc, r3
    7bc0:	str	r2, [fp, #-52]	; 0xffffffcc
    7bc4:	ldr	r3, [r3]
    7bc8:	cmp	r3, #6
    7bcc:	ble	7bdc <blkid_probe_get_size@plt+0x6c4>
    7bd0:	mov	r0, r4
    7bd4:	sub	r1, fp, #52	; 0x34
    7bd8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7bdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7be0:	cmp	r1, #0
    7be4:	moveq	ip, r1
    7be8:	ldrne	ip, [pc, #1884]	; 834c <blkid_probe_get_size@plt+0xe34>
    7bec:	addne	ip, pc, ip
    7bf0:	ldr	r3, [pc, #1880]	; 8350 <blkid_probe_get_size@plt+0xe38>
    7bf4:	ldr	r2, [pc, #1880]	; 8354 <blkid_probe_get_size@plt+0xe3c>
    7bf8:	add	r3, pc, r3
    7bfc:	add	r2, pc, r2
    7c00:	str	r2, [sp, #20]
    7c04:	add	r3, r3, #1584	; 0x630
    7c08:	ldr	r2, [pc, #1864]	; 8358 <blkid_probe_get_size@plt+0xe40>
    7c0c:	mov	r0, #0
    7c10:	add	r3, r3, #12
    7c14:	str	r1, [sp, #8]
    7c18:	str	r3, [sp]
    7c1c:	mov	r1, r5
    7c20:	str	r0, [sp, #16]
    7c24:	str	r0, [sp, #12]
    7c28:	str	r6, [sp, #24]
    7c2c:	str	ip, [sp, #4]
    7c30:	mov	r3, #232	; 0xe8
    7c34:	add	r2, pc, r2
    7c38:	mov	r0, #7
    7c3c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7c40:	mov	r5, r0
    7c44:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7c48:	ldr	r1, [pc, #1804]	; 835c <blkid_probe_get_size@plt+0xe44>
    7c4c:	mov	r0, r7
    7c50:	add	r1, pc, r1
    7c54:	bl	7314 <strcmp@plt>
    7c58:	subs	r8, r0, #0
    7c5c:	bne	7d04 <blkid_probe_get_size@plt+0x7ec>
    7c60:	mov	r1, r6
    7c64:	mov	r0, r4
    7c68:	bl	24064 <blkid_probe_get_size@plt+0x1cb4c>
    7c6c:	subs	r5, r0, #0
    7c70:	bge	7698 <blkid_probe_get_size@plt+0x180>
    7c74:	ldr	r3, [pc, #1764]	; 8360 <blkid_probe_get_size@plt+0xe48>
    7c78:	str	r8, [fp, #-52]	; 0xffffffcc
    7c7c:	add	r3, pc, r3
    7c80:	ldr	r3, [r3]
    7c84:	cmp	r3, #6
    7c88:	ble	7c98 <blkid_probe_get_size@plt+0x780>
    7c8c:	mov	r0, r4
    7c90:	sub	r1, fp, #52	; 0x34
    7c94:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7c98:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7c9c:	cmp	r1, #0
    7ca0:	moveq	ip, r1
    7ca4:	ldrne	ip, [pc, #1720]	; 8364 <blkid_probe_get_size@plt+0xe4c>
    7ca8:	addne	ip, pc, ip
    7cac:	ldr	r3, [pc, #1716]	; 8368 <blkid_probe_get_size@plt+0xe50>
    7cb0:	ldr	r2, [pc, #1716]	; 836c <blkid_probe_get_size@plt+0xe54>
    7cb4:	add	r3, pc, r3
    7cb8:	add	r2, pc, r2
    7cbc:	str	r2, [sp, #20]
    7cc0:	add	r3, r3, #1584	; 0x630
    7cc4:	ldr	r2, [pc, #1700]	; 8370 <blkid_probe_get_size@plt+0xe58>
    7cc8:	mov	r0, #0
    7ccc:	add	r3, r3, #12
    7cd0:	str	r1, [sp, #8]
    7cd4:	str	r3, [sp]
    7cd8:	mov	r1, r5
    7cdc:	str	r0, [sp, #16]
    7ce0:	str	r0, [sp, #12]
    7ce4:	str	r6, [sp, #24]
    7ce8:	str	ip, [sp, #4]
    7cec:	mov	r3, #236	; 0xec
    7cf0:	add	r2, pc, r2
    7cf4:	mov	r0, #7
    7cf8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7cfc:	mov	r5, r0
    7d00:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7d04:	ldr	r8, [pc, #1640]	; 8374 <blkid_probe_get_size@plt+0xe5c>
    7d08:	mov	r0, r7
    7d0c:	add	r8, pc, r8
    7d10:	mov	r1, r8
    7d14:	bl	7314 <strcmp@plt>
    7d18:	subs	r5, r0, #0
    7d1c:	bne	7d60 <blkid_probe_get_size@plt+0x848>
    7d20:	sub	r9, fp, #52	; 0x34
    7d24:	mov	r2, r9
    7d28:	mov	r1, r5
    7d2c:	mov	r0, r6
    7d30:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
    7d34:	subs	r7, r0, #0
    7d38:	blt	811c <blkid_probe_get_size@plt+0xc04>
    7d3c:	mov	r1, r8
    7d40:	mov	r2, r6
    7d44:	mov	r0, r4
    7d48:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
    7d4c:	subs	r7, r0, #0
    7d50:	ldrge	r3, [fp, #-52]	; 0xffffffcc
    7d54:	strge	r3, [r4, #204]	; 0xcc
    7d58:	bge	8240 <blkid_probe_get_size@plt+0xd28>
    7d5c:	b	811c <blkid_probe_get_size@plt+0xc04>
    7d60:	ldr	r8, [pc, #1552]	; 8378 <blkid_probe_get_size@plt+0xe60>
    7d64:	mov	r0, r7
    7d68:	add	r8, pc, r8
    7d6c:	mov	r1, r8
    7d70:	bl	7314 <strcmp@plt>
    7d74:	subs	r5, r0, #0
    7d78:	bne	7dbc <blkid_probe_get_size@plt+0x8a4>
    7d7c:	sub	r9, fp, #52	; 0x34
    7d80:	mov	r2, r9
    7d84:	mov	r1, r5
    7d88:	mov	r0, r6
    7d8c:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
    7d90:	subs	r7, r0, #0
    7d94:	blt	81b0 <blkid_probe_get_size@plt+0xc98>
    7d98:	mov	r1, r8
    7d9c:	mov	r2, r6
    7da0:	mov	r0, r4
    7da4:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
    7da8:	subs	r7, r0, #0
    7dac:	ldrge	r3, [fp, #-52]	; 0xffffffcc
    7db0:	strge	r3, [r4, #208]	; 0xd0
    7db4:	bge	8240 <blkid_probe_get_size@plt+0xd28>
    7db8:	b	81b0 <blkid_probe_get_size@plt+0xc98>
    7dbc:	ldr	r1, [pc, #1464]	; 837c <blkid_probe_get_size@plt+0xe64>
    7dc0:	mov	r0, r7
    7dc4:	add	r1, pc, r1
    7dc8:	bl	7314 <strcmp@plt>
    7dcc:	subs	r5, r0, #0
    7dd0:	bne	7f14 <blkid_probe_get_size@plt+0x9fc>
    7dd4:	ldr	r2, [pc, #1444]	; 8380 <blkid_probe_get_size@plt+0xe68>
    7dd8:	sub	sl, fp, #60	; 0x3c
    7ddc:	sub	r9, fp, #56	; 0x38
    7de0:	mov	r3, r5
    7de4:	mov	r1, sl
    7de8:	mov	r0, r9
    7dec:	add	r2, pc, r2
    7df0:	str	r6, [fp, #-56]	; 0xffffffc8
    7df4:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
    7df8:	ldr	r3, [pc, #1412]	; 8384 <blkid_probe_get_size@plt+0xe6c>
    7dfc:	mov	r8, r5
    7e00:	add	r3, pc, r3
    7e04:	str	r3, [fp, #-68]	; 0xffffffbc
    7e08:	cmp	r0, #0
    7e0c:	beq	8240 <blkid_probe_get_size@plt+0xd28>
    7e10:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7e14:	mov	r7, sp
    7e18:	add	r2, r3, #8
    7e1c:	bic	r2, r2, #7
    7e20:	sub	sp, sp, r2
    7e24:	add	r6, sp, #32
    7e28:	mov	r1, r0
    7e2c:	mov	r2, r3
    7e30:	mov	r0, r6
    7e34:	str	r3, [fp, #-72]	; 0xffffffb8
    7e38:	bl	7374 <strncpy@plt>
    7e3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7e40:	mov	r1, r6
    7e44:	mov	r0, r4
    7e48:	strb	r8, [r6, r3]
    7e4c:	bl	35a90 <blkid_probe_get_size@plt+0x2e578>
    7e50:	cmp	r0, #0
    7e54:	bge	7ef8 <blkid_probe_get_size@plt+0x9e0>
    7e58:	ldr	r3, [pc, #1320]	; 8388 <blkid_probe_get_size@plt+0xe70>
    7e5c:	mov	r2, r0
    7e60:	add	r3, pc, r3
    7e64:	str	r8, [fp, #-52]	; 0xffffffcc
    7e68:	ldr	r3, [r3]
    7e6c:	cmp	r3, #6
    7e70:	ble	7e88 <blkid_probe_get_size@plt+0x970>
    7e74:	str	r0, [fp, #-68]	; 0xffffffbc
    7e78:	sub	r1, fp, #52	; 0x34
    7e7c:	mov	r0, r4
    7e80:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7e84:	ldr	r2, [fp, #-68]	; 0xffffffbc
    7e88:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7e8c:	cmp	r1, #0
    7e90:	moveq	lr, r1
    7e94:	ldrne	lr, [pc, #1264]	; 838c <blkid_probe_get_size@plt+0xe74>
    7e98:	addne	lr, pc, lr
    7e9c:	ldr	r3, [pc, #1260]	; 8390 <blkid_probe_get_size@plt+0xe78>
    7ea0:	ldr	r0, [pc, #1260]	; 8394 <blkid_probe_get_size@plt+0xe7c>
    7ea4:	add	r3, pc, r3
    7ea8:	str	r1, [sp, #8]
    7eac:	add	r3, r3, #1584	; 0x630
    7eb0:	mov	r1, r2
    7eb4:	ldr	r2, [pc, #1244]	; 8398 <blkid_probe_get_size@plt+0xe80>
    7eb8:	mov	ip, #0
    7ebc:	add	r0, pc, r0
    7ec0:	add	r3, r3, #12
    7ec4:	str	r3, [sp]
    7ec8:	str	r0, [sp, #20]
    7ecc:	str	r6, [sp, #24]
    7ed0:	str	lr, [sp, #4]
    7ed4:	str	ip, [sp, #16]
    7ed8:	str	ip, [sp, #12]
    7edc:	ldr	r3, [pc, #1208]	; 839c <blkid_probe_get_size@plt+0xe84>
    7ee0:	add	r2, pc, r2
    7ee4:	mov	r0, #7
    7ee8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    7eec:	mov	sp, r7
    7ef0:	mov	r5, r0
    7ef4:	b	8240 <blkid_probe_get_size@plt+0xd28>
    7ef8:	mov	r3, #0
    7efc:	mov	r1, sl
    7f00:	ldr	r2, [fp, #-68]	; 0xffffffbc
    7f04:	mov	sp, r7
    7f08:	mov	r0, r9
    7f0c:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
    7f10:	b	7e08 <blkid_probe_get_size@plt+0x8f0>
    7f14:	ldr	r1, [pc, #1156]	; 83a0 <blkid_probe_get_size@plt+0xe88>
    7f18:	mov	r0, r7
    7f1c:	add	r1, pc, r1
    7f20:	bl	7314 <strcmp@plt>
    7f24:	subs	r5, r0, #0
    7f28:	bne	806c <blkid_probe_get_size@plt+0xb54>
    7f2c:	ldr	r2, [pc, #1136]	; 83a4 <blkid_probe_get_size@plt+0xe8c>
    7f30:	sub	sl, fp, #60	; 0x3c
    7f34:	sub	r9, fp, #56	; 0x38
    7f38:	mov	r3, r5
    7f3c:	mov	r1, sl
    7f40:	mov	r0, r9
    7f44:	add	r2, pc, r2
    7f48:	str	r6, [fp, #-56]	; 0xffffffc8
    7f4c:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
    7f50:	ldr	r3, [pc, #1104]	; 83a8 <blkid_probe_get_size@plt+0xe90>
    7f54:	mov	r8, r5
    7f58:	add	r3, pc, r3
    7f5c:	str	r3, [fp, #-68]	; 0xffffffbc
    7f60:	cmp	r0, #0
    7f64:	beq	8240 <blkid_probe_get_size@plt+0xd28>
    7f68:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7f6c:	mov	r7, sp
    7f70:	add	r2, r3, #8
    7f74:	bic	r2, r2, #7
    7f78:	sub	sp, sp, r2
    7f7c:	add	r6, sp, #32
    7f80:	mov	r1, r0
    7f84:	mov	r2, r3
    7f88:	mov	r0, r6
    7f8c:	str	r3, [fp, #-72]	; 0xffffffb8
    7f90:	bl	7374 <strncpy@plt>
    7f94:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7f98:	mov	r1, r6
    7f9c:	mov	r0, r4
    7fa0:	strb	r8, [r6, r3]
    7fa4:	bl	35b38 <blkid_probe_get_size@plt+0x2e620>
    7fa8:	cmp	r0, #0
    7fac:	bge	8050 <blkid_probe_get_size@plt+0xb38>
    7fb0:	ldr	r3, [pc, #1012]	; 83ac <blkid_probe_get_size@plt+0xe94>
    7fb4:	mov	r2, r0
    7fb8:	add	r3, pc, r3
    7fbc:	str	r8, [fp, #-52]	; 0xffffffcc
    7fc0:	ldr	r3, [r3]
    7fc4:	cmp	r3, #6
    7fc8:	ble	7fe0 <blkid_probe_get_size@plt+0xac8>
    7fcc:	str	r0, [fp, #-68]	; 0xffffffbc
    7fd0:	sub	r1, fp, #52	; 0x34
    7fd4:	mov	r0, r4
    7fd8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    7fdc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    7fe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7fe4:	cmp	r1, #0
    7fe8:	moveq	lr, r1
    7fec:	ldrne	lr, [pc, #956]	; 83b0 <blkid_probe_get_size@plt+0xe98>
    7ff0:	addne	lr, pc, lr
    7ff4:	ldr	r3, [pc, #952]	; 83b4 <blkid_probe_get_size@plt+0xe9c>
    7ff8:	ldr	r0, [pc, #952]	; 83b8 <blkid_probe_get_size@plt+0xea0>
    7ffc:	add	r3, pc, r3
    8000:	str	r1, [sp, #8]
    8004:	add	r3, r3, #1584	; 0x630
    8008:	mov	r1, r2
    800c:	ldr	r2, [pc, #936]	; 83bc <blkid_probe_get_size@plt+0xea4>
    8010:	mov	ip, #0
    8014:	add	r0, pc, r0
    8018:	add	r3, r3, #12
    801c:	str	r3, [sp]
    8020:	str	r0, [sp, #20]
    8024:	str	r6, [sp, #24]
    8028:	str	lr, [sp, #4]
    802c:	str	ip, [sp, #16]
    8030:	str	ip, [sp, #12]
    8034:	ldr	r3, [pc, #900]	; 83c0 <blkid_probe_get_size@plt+0xea8>
    8038:	add	r2, pc, r2
    803c:	mov	r0, #7
    8040:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    8044:	mov	sp, r7
    8048:	mov	r5, r0
    804c:	b	8240 <blkid_probe_get_size@plt+0xd28>
    8050:	mov	r3, #0
    8054:	mov	r1, sl
    8058:	ldr	r2, [fp, #-68]	; 0xffffffbc
    805c:	mov	sp, r7
    8060:	mov	r0, r9
    8064:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
    8068:	b	7f60 <blkid_probe_get_size@plt+0xa48>
    806c:	mov	r2, r6
    8070:	mov	r1, r7
    8074:	mov	r0, r4
    8078:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
    807c:	subs	r5, r0, #0
    8080:	bge	7698 <blkid_probe_get_size@plt+0x180>
    8084:	ldr	r3, [pc, #824]	; 83c4 <blkid_probe_get_size@plt+0xeac>
    8088:	mov	r2, #0
    808c:	add	r3, pc, r3
    8090:	str	r2, [fp, #-52]	; 0xffffffcc
    8094:	ldr	r3, [r3]
    8098:	cmp	r3, #6
    809c:	ble	80ac <blkid_probe_get_size@plt+0xb94>
    80a0:	mov	r0, r4
    80a4:	sub	r1, fp, #52	; 0x34
    80a8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    80ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    80b0:	cmp	r1, #0
    80b4:	moveq	ip, r1
    80b8:	ldrne	ip, [pc, #776]	; 83c8 <blkid_probe_get_size@plt+0xeb0>
    80bc:	addne	ip, pc, ip
    80c0:	ldr	r3, [pc, #772]	; 83cc <blkid_probe_get_size@plt+0xeb4>
    80c4:	ldr	r2, [pc, #772]	; 83d0 <blkid_probe_get_size@plt+0xeb8>
    80c8:	add	r3, pc, r3
    80cc:	add	r2, pc, r2
    80d0:	str	r2, [sp, #20]
    80d4:	add	r3, r3, #1584	; 0x630
    80d8:	ldr	r2, [pc, #756]	; 83d4 <blkid_probe_get_size@plt+0xebc>
    80dc:	mov	r0, #0
    80e0:	add	r3, r3, #12
    80e4:	str	r1, [sp, #8]
    80e8:	str	r3, [sp]
    80ec:	mov	r1, r5
    80f0:	str	r0, [sp, #16]
    80f4:	str	r0, [sp, #12]
    80f8:	str	r6, [sp, #28]
    80fc:	str	r7, [sp, #24]
    8100:	str	ip, [sp, #4]
    8104:	mov	r3, #276	; 0x114
    8108:	add	r2, pc, r2
    810c:	mov	r0, #7
    8110:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    8114:	mov	r5, r0
    8118:	b	8240 <blkid_probe_get_size@plt+0xd28>
    811c:	ldr	r3, [pc, #692]	; 83d8 <blkid_probe_get_size@plt+0xec0>
    8120:	mov	r2, #0
    8124:	add	r3, pc, r3
    8128:	str	r2, [fp, #-52]	; 0xffffffcc
    812c:	ldr	r3, [r3]
    8130:	cmp	r3, #6
    8134:	ble	8144 <blkid_probe_get_size@plt+0xc2c>
    8138:	mov	r1, r9
    813c:	mov	r0, r4
    8140:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    8144:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8148:	cmp	r1, #0
    814c:	moveq	ip, r1
    8150:	ldrne	ip, [pc, #644]	; 83dc <blkid_probe_get_size@plt+0xec4>
    8154:	addne	ip, pc, ip
    8158:	ldr	r3, [pc, #640]	; 83e0 <blkid_probe_get_size@plt+0xec8>
    815c:	ldr	r2, [pc, #640]	; 83e4 <blkid_probe_get_size@plt+0xecc>
    8160:	add	r3, pc, r3
    8164:	add	r2, pc, r2
    8168:	str	r2, [sp, #20]
    816c:	add	r3, r3, #1584	; 0x630
    8170:	ldr	r2, [pc, #624]	; 83e8 <blkid_probe_get_size@plt+0xed0>
    8174:	mov	r0, #0
    8178:	add	r3, r3, #12
    817c:	str	r1, [sp, #8]
    8180:	str	r3, [sp]
    8184:	str	r0, [sp, #16]
    8188:	str	r0, [sp, #12]
    818c:	str	r6, [sp, #24]
    8190:	str	ip, [sp, #4]
    8194:	mov	r1, r7
    8198:	mov	r3, #240	; 0xf0
    819c:	add	r2, pc, r2
    81a0:	mov	r0, #7
    81a4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    81a8:	mov	r5, r0
    81ac:	b	8240 <blkid_probe_get_size@plt+0xd28>
    81b0:	ldr	r3, [pc, #564]	; 83ec <blkid_probe_get_size@plt+0xed4>
    81b4:	mov	r2, #0
    81b8:	add	r3, pc, r3
    81bc:	str	r2, [fp, #-52]	; 0xffffffcc
    81c0:	ldr	r3, [r3]
    81c4:	cmp	r3, #6
    81c8:	ble	81d8 <blkid_probe_get_size@plt+0xcc0>
    81cc:	mov	r1, r9
    81d0:	mov	r0, r4
    81d4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    81d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    81dc:	cmp	r1, #0
    81e0:	moveq	ip, r1
    81e4:	ldrne	ip, [pc, #516]	; 83f0 <blkid_probe_get_size@plt+0xed8>
    81e8:	addne	ip, pc, ip
    81ec:	ldr	r3, [pc, #512]	; 83f4 <blkid_probe_get_size@plt+0xedc>
    81f0:	ldr	r2, [pc, #512]	; 83f8 <blkid_probe_get_size@plt+0xee0>
    81f4:	add	r3, pc, r3
    81f8:	add	r2, pc, r2
    81fc:	str	r2, [sp, #20]
    8200:	add	r3, r3, #1584	; 0x630
    8204:	ldr	r2, [pc, #496]	; 83fc <blkid_probe_get_size@plt+0xee4>
    8208:	mov	r0, #0
    820c:	add	r3, r3, #12
    8210:	str	r1, [sp, #8]
    8214:	str	r3, [sp]
    8218:	str	r0, [sp, #16]
    821c:	str	r0, [sp, #12]
    8220:	str	r6, [sp, #24]
    8224:	str	ip, [sp, #4]
    8228:	mov	r1, r7
    822c:	mov	r3, #244	; 0xf4
    8230:	add	r2, pc, r2
    8234:	mov	r0, #7
    8238:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    823c:	mov	r5, r0
    8240:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8244:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8248:	mov	r0, r5
    824c:	ldr	r3, [r3]
    8250:	cmp	r2, r3
    8254:	beq	825c <blkid_probe_get_size@plt+0xd44>
    8258:	bl	6fb4 <__stack_chk_fail@plt>
    825c:	sub	sp, fp, #32
    8260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8264:	andeq	r0, r9, r8, lsr r6
    8268:	andeq	r0, r0, ip, lsr r4
    826c:	andeq	r2, r6, r4, lsr #1
    8270:	andeq	r3, r6, r0, ror #19
    8274:	andeq	r0, r6, r4, lsl r2
    8278:	andeq	r2, r6, r0, ror r0
    827c:	ldrdeq	r0, [r6], -ip
    8280:	andeq	r3, r6, r4, lsl #29
    8284:	andeq	r2, r6, r4, lsr r0
    8288:	andeq	r0, r6, r4, lsr #3
    828c:	andeq	r3, r6, ip, asr #28
    8290:	andeq	pc, r5, r0, asr #15
    8294:	ldrdeq	r1, [r6], -r8
    8298:	andeq	r0, r6, r4, asr #2
    829c:	andeq	sp, r5, r8, asr #20
    82a0:	muleq	r5, r0, pc	; <UNPREDICTABLE>
    82a4:	muleq	r9, r4, sl
    82a8:	andeq	sp, r5, r4, ror #16
    82ac:	andeq	r1, r6, r8, lsr #30
    82b0:	andeq	r3, r6, r4, ror #26
    82b4:	andeq	r0, r6, r4, ror r0
    82b8:	muleq	r5, r4, r6
    82bc:	ldrdeq	r0, [r9], -r8
    82c0:	andeq	sp, r5, r8, lsr #15
    82c4:	andeq	r1, r6, ip, ror #28
    82c8:	ldrdeq	r3, [r6], -r8
    82cc:			; <UNDEFINED> instruction: 0x0005ffb8
    82d0:	ldrdeq	r1, [r6], -r4
    82d4:	andeq	r0, r9, ip, lsl r9
    82d8:	andeq	sp, r5, ip, ror #13
    82dc:			; <UNDEFINED> instruction: 0x00061db0
    82e0:	andeq	r3, r6, ip, asr #24
    82e4:	strdeq	pc, [r5], -ip
    82e8:	andeq	r1, r6, r8, lsr sp
    82ec:	andeq	r0, r9, r0, ror #16
    82f0:	andeq	sp, r5, r0, lsr r6
    82f4:	strdeq	r1, [r6], -r4
    82f8:	andeq	r3, r6, r0, asr #23
    82fc:	andeq	pc, r5, r0, asr #28
    8300:	muleq	r6, ip, fp
    8304:	andeq	r0, r9, r4, lsr #15
    8308:	andeq	sp, r5, r4, ror r5
    830c:	andeq	r1, r6, r8, lsr ip
    8310:	andeq	r3, r6, r8, asr #22
    8314:	andeq	pc, r5, r4, lsl #27
    8318:	andeq	r0, r9, r0, lsl #14
    831c:	andeq	sp, r5, ip, asr #9
    8320:	muleq	r6, r0, fp
    8324:	ldrdeq	r3, [r6], -r0
    8328:	ldrdeq	pc, [r5], -ip
    832c:	andeq	pc, r5, r8, asr r3	; <UNPREDICTABLE>
    8330:	andeq	r0, r9, r0, asr #12
    8334:	andeq	sp, r5, ip, lsl #8
    8338:	ldrdeq	r1, [r6], -r0
    833c:	andeq	r3, r6, r8, asr #20
    8340:	andeq	pc, r5, ip, lsl ip	; <UNPREDICTABLE>
    8344:	andeq	r1, r6, r0, asr sl
    8348:	andeq	r0, r9, r0, lsl #11
    834c:	andeq	sp, r5, ip, asr #6
    8350:	andeq	r1, r6, r0, lsl sl
    8354:			; <UNDEFINED> instruction: 0x000639b4
    8358:	andeq	pc, r5, ip, asr fp	; <UNPREDICTABLE>
    835c:	muleq	r6, r8, r5
    8360:	andeq	r0, r9, r0, asr #9
    8364:	muleq	r5, r0, r2
    8368:	andeq	r1, r6, r4, asr r9
    836c:	andeq	r3, r6, r8, lsr #18
    8370:	andeq	pc, r5, r0, lsr #21
    8374:	andeq	r3, r6, r4, lsl #18
    8378:	ldrdeq	r3, [r6], -ip
    837c:	andeq	r1, r6, ip, lsr #16
    8380:			; <UNDEFINED> instruction: 0x00062fb0
    8384:	muleq	r6, ip, pc	; <UNPREDICTABLE>
    8388:	ldrdeq	r0, [r9], -ip
    838c:	andeq	sp, r5, r0, lsr #1
    8390:	andeq	r1, r6, r4, ror #14
    8394:			; <UNDEFINED> instruction: 0x000637bc
    8398:			; <UNDEFINED> instruction: 0x0005f8b0
    839c:	andeq	r0, r0, r1, lsl #2
    83a0:	andeq	pc, r5, r4, lsr r0	; <UNPREDICTABLE>
    83a4:	andeq	r3, r6, r0, ror #14
    83a8:	andeq	r3, r6, ip, asr #14
    83ac:	andeq	r0, r9, r4, lsl #3
    83b0:	andeq	ip, r5, r8, asr #30
    83b4:	andeq	r1, r6, ip, lsl #12
    83b8:	muleq	r6, r4, r6
    83bc:	andeq	pc, r5, r8, asr r7	; <UNPREDICTABLE>
    83c0:	andeq	r0, r0, pc, lsl #2
    83c4:	strheq	r0, [r9], -r0	; <UNPREDICTABLE>
    83c8:	andeq	ip, r5, ip, ror lr
    83cc:	andeq	r1, r6, r0, asr #10
    83d0:	andeq	r3, r6, r4, lsl #12
    83d4:	andeq	pc, r5, r8, lsl #13
    83d8:	andeq	r0, r9, r8, lsl r0
    83dc:	andeq	ip, r5, r4, ror #27
    83e0:	andeq	r1, r6, r8, lsr #9
    83e4:			; <UNDEFINED> instruction: 0x000634b4
    83e8:	strdeq	pc, [r5], -r4
    83ec:	andeq	pc, r8, r4, lsl #31
    83f0:	andeq	ip, r5, r0, asr sp
    83f4:	andeq	r1, r6, r4, lsl r4
    83f8:	andeq	r3, r6, r4, asr r4
    83fc:	andeq	pc, r5, r0, ror #10
    8400:	ldr	r3, [pc, #500]	; 85fc <blkid_probe_get_size@plt+0x10e4>
    8404:	ldr	r2, [pc, #500]	; 8600 <blkid_probe_get_size@plt+0x10e8>
    8408:	add	r3, pc, r3
    840c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8410:	add	fp, sp, #32
    8414:	sub	sp, sp, #36	; 0x24
    8418:	ldr	r7, [r3, r2]
    841c:	subs	r5, r0, #0
    8420:	ldr	r3, [r7]
    8424:	str	r3, [fp, #-40]	; 0xffffffd8
    8428:	bne	8458 <blkid_probe_get_size@plt+0xf40>
    842c:	ldr	r2, [pc, #464]	; 8604 <blkid_probe_get_size@plt+0x10ec>
    8430:	ldr	r1, [pc, #464]	; 8608 <blkid_probe_get_size@plt+0x10f0>
    8434:	add	r2, pc, r2
    8438:	add	r2, r2, #1824	; 0x720
    843c:	add	r2, r2, #8
    8440:	str	r2, [sp]
    8444:	ldr	r2, [pc, #448]	; 860c <blkid_probe_get_size@plt+0x10f4>
    8448:	mov	r3, #584	; 0x248
    844c:	add	r2, pc, r2
    8450:	add	r1, pc, r1
    8454:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    8458:	cmp	r1, #0
    845c:	mov	r6, r1
    8460:	bne	8494 <blkid_probe_get_size@plt+0xf7c>
    8464:	ldr	r3, [pc, #420]	; 8610 <blkid_probe_get_size@plt+0x10f8>
    8468:	mov	r0, r1
    846c:	add	r3, pc, r3
    8470:	add	r3, r3, #1824	; 0x720
    8474:	ldr	r2, [pc, #408]	; 8614 <blkid_probe_get_size@plt+0x10fc>
    8478:	ldr	r1, [pc, #408]	; 8618 <blkid_probe_get_size@plt+0x1100>
    847c:	add	r3, r3, #8
    8480:	str	r3, [sp]
    8484:	add	r2, pc, r2
    8488:	ldr	r3, [pc, #396]	; 861c <blkid_probe_get_size@plt+0x1104>
    848c:	add	r1, pc, r1
    8490:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    8494:	ldr	r0, [r5, #156]	; 0x9c
    8498:	bl	3fa14 <blkid_probe_get_size@plt+0x384fc>
    849c:	subs	r8, r0, #0
    84a0:	beq	85d0 <blkid_probe_get_size@plt+0x10b8>
    84a4:	ldr	r3, [pc, #372]	; 8620 <blkid_probe_get_size@plt+0x1108>
    84a8:	mov	sl, #0
    84ac:	mov	r4, sl
    84b0:	sub	r9, fp, #52	; 0x34
    84b4:	add	r3, pc, r3
    84b8:	str	r8, [fp, #-52]	; 0xffffffcc
    84bc:	str	r6, [fp, #-44]	; 0xffffffd4
    84c0:	str	r3, [fp, #-48]	; 0xffffffd0
    84c4:	ldr	r0, [r9, sl, lsl #2]
    84c8:	cmp	r0, #0
    84cc:	beq	84e4 <blkid_probe_get_size@plt+0xfcc>
    84d0:	bl	723c <strlen@plt>
    84d4:	add	sl, sl, #1
    84d8:	cmp	sl, #3
    84dc:	add	r4, r4, r0
    84e0:	bne	84c4 <blkid_probe_get_size@plt+0xfac>
    84e4:	add	r3, r4, #1
    84e8:	cmp	r3, #4194304	; 0x400000
    84ec:	bls	8520 <blkid_probe_get_size@plt+0x1008>
    84f0:	ldr	r2, [pc, #300]	; 8624 <blkid_probe_get_size@plt+0x110c>
    84f4:	ldr	r1, [pc, #300]	; 8628 <blkid_probe_get_size@plt+0x1110>
    84f8:	add	r2, pc, r2
    84fc:	add	r2, r2, #1824	; 0x720
    8500:	add	r2, r2, #8
    8504:	str	r2, [sp]
    8508:	ldr	r2, [pc, #284]	; 862c <blkid_probe_get_size@plt+0x1114>
    850c:	ldr	r3, [pc, #284]	; 8630 <blkid_probe_get_size@plt+0x1118>
    8510:	add	r2, pc, r2
    8514:	add	r1, pc, r1
    8518:	mov	r0, #0
    851c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    8520:	add	r4, r4, #15
    8524:	bic	r4, r4, #7
    8528:	sub	sp, sp, r4
    852c:	add	sl, sp, #8
    8530:	mov	r0, sl
    8534:	mov	r4, #0
    8538:	ldr	r1, [r9, r4, lsl #2]
    853c:	cmp	r1, #0
    8540:	beq	8554 <blkid_probe_get_size@plt+0x103c>
    8544:	add	r4, r4, #1
    8548:	bl	6ae0 <stpcpy@plt>
    854c:	cmp	r4, #3
    8550:	bne	8538 <blkid_probe_get_size@plt+0x1020>
    8554:	mov	r2, #0
    8558:	strb	r2, [r0]
    855c:	mov	r1, sl
    8560:	mov	r0, r5
    8564:	bl	24cc0 <blkid_probe_get_size@plt+0x1d7a8>
    8568:	subs	r4, r0, #0
    856c:	blt	85d4 <blkid_probe_get_size@plt+0x10bc>
    8570:	ldr	r9, [pc, #188]	; 8634 <blkid_probe_get_size@plt+0x111c>
    8574:	sub	r2, fp, #56	; 0x38
    8578:	add	r9, pc, r9
    857c:	mov	r1, r9
    8580:	mov	r0, r5
    8584:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
    8588:	subs	r4, r0, #0
    858c:	blt	85c4 <blkid_probe_get_size@plt+0x10ac>
    8590:	ldr	r1, [pc, #160]	; 8638 <blkid_probe_get_size@plt+0x1120>
    8594:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8598:	add	r1, pc, r1
    859c:	mov	r0, r5
    85a0:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
    85a4:	subs	r4, r0, #0
    85a8:	blt	85d4 <blkid_probe_get_size@plt+0x10bc>
    85ac:	mov	r2, r6
    85b0:	mov	r1, r9
    85b4:	mov	r0, r5
    85b8:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
    85bc:	and	r4, r0, r0, asr #31
    85c0:	b	85d4 <blkid_probe_get_size@plt+0x10bc>
    85c4:	cmn	r4, #2
    85c8:	moveq	r4, #0
    85cc:	b	85d4 <blkid_probe_get_size@plt+0x10bc>
    85d0:	mvn	r4, #11
    85d4:	mov	r0, r8
    85d8:	bl	69f0 <free@plt>
    85dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    85e0:	ldr	r3, [r7]
    85e4:	mov	r0, r4
    85e8:	cmp	r2, r3
    85ec:	beq	85f4 <blkid_probe_get_size@plt+0x10dc>
    85f0:	bl	6fb4 <__stack_chk_fail@plt>
    85f4:	sub	sp, fp, #32
    85f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    85fc:	andeq	pc, r8, r0, ror #14
    8600:	andeq	r0, r0, ip, lsr r4
    8604:	ldrdeq	r1, [r6], -r4
    8608:	andeq	r2, r6, r0, lsl fp
    860c:	andeq	pc, r5, r4, asr #6
    8610:	muleq	r6, ip, r1
    8614:	andeq	pc, r5, ip, lsl #6
    8618:	muleq	r6, r8, fp
    861c:	andeq	r0, r0, r9, asr #4
    8620:	andeq	pc, r6, ip, lsl #22
    8624:	andeq	r1, r6, r0, lsl r1
    8628:	andeq	ip, r5, r4, lsl #23
    862c:	andeq	pc, r5, r0, lsl #5
    8630:	andeq	r0, r0, pc, asr #4
    8634:			; <UNDEFINED> instruction: 0x000632b4
    8638:	andeq	r3, r6, r0, lsr #5
    863c:	ldr	r0, [pc, #48]	; 8674 <blkid_probe_get_size@plt+0x115c>
    8640:	push	{r4, lr}
    8644:	add	r0, pc, r0
    8648:	bl	7464 <getenv@plt>
    864c:	cmp	r0, #0
    8650:	beq	866c <blkid_probe_get_size@plt+0x1154>
    8654:	ldr	r1, [pc, #28]	; 8678 <blkid_probe_get_size@plt+0x1160>
    8658:	add	r1, pc, r1
    865c:	bl	7314 <strcmp@plt>
    8660:	clz	r0, r0
    8664:	lsr	r0, r0, #5
    8668:	pop	{r4, pc}
    866c:	mov	r0, #1
    8670:	pop	{r4, pc}
    8674:	andeq	r6, r6, ip, lsr #25
    8678:	andeq	r6, r6, r0, lsr #25
    867c:	push	{r4, r5, r6, lr}
    8680:	subs	r4, r0, #0
    8684:	beq	8774 <blkid_probe_get_size@plt+0x125c>
    8688:	ldrb	r5, [r4]
    868c:	cmp	r5, #0
    8690:	beq	8778 <blkid_probe_get_size@plt+0x1260>
    8694:	bl	723c <strlen@plt>
    8698:	cmp	r0, #4096	; 0x1000
    869c:	bcs	8774 <blkid_probe_get_size@plt+0x125c>
    86a0:	mov	r0, r4
    86a4:	bl	39c08 <blkid_probe_get_size@plt+0x326f0>
    86a8:	subs	r5, r0, #0
    86ac:	bne	8774 <blkid_probe_get_size@plt+0x125c>
    86b0:	ldr	r1, [pc, #200]	; 8780 <blkid_probe_get_size@plt+0x1268>
    86b4:	mov	r2, #3
    86b8:	add	r1, pc, r1
    86bc:	mov	r0, r4
    86c0:	bl	6a5c <strncmp@plt>
    86c4:	cmp	r0, #0
    86c8:	bne	86d4 <blkid_probe_get_size@plt+0x11bc>
    86cc:	cmn	r4, #3
    86d0:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    86d4:	ldr	r1, [pc, #168]	; 8784 <blkid_probe_get_size@plt+0x126c>
    86d8:	mov	r0, r4
    86dc:	add	r1, pc, r1
    86e0:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
    86e4:	cmp	r0, #0
    86e8:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    86ec:	ldr	r1, [pc, #148]	; 8788 <blkid_probe_get_size@plt+0x1270>
    86f0:	mov	r0, r4
    86f4:	add	r1, pc, r1
    86f8:	bl	7050 <strstr@plt>
    86fc:	cmp	r0, #0
    8700:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    8704:	ldr	r1, [pc, #128]	; 878c <blkid_probe_get_size@plt+0x1274>
    8708:	mov	r2, #2
    870c:	add	r1, pc, r1
    8710:	mov	r0, r4
    8714:	bl	6a5c <strncmp@plt>
    8718:	cmp	r0, #0
    871c:	bne	8728 <blkid_probe_get_size@plt+0x1210>
    8720:	cmn	r4, #2
    8724:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    8728:	ldr	r1, [pc, #96]	; 8790 <blkid_probe_get_size@plt+0x1278>
    872c:	mov	r0, r4
    8730:	add	r1, pc, r1
    8734:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
    8738:	cmp	r0, #0
    873c:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    8740:	ldr	r1, [pc, #76]	; 8794 <blkid_probe_get_size@plt+0x127c>
    8744:	mov	r0, r4
    8748:	add	r1, pc, r1
    874c:	bl	7050 <strstr@plt>
    8750:	cmp	r0, #0
    8754:	bne	8778 <blkid_probe_get_size@plt+0x1260>
    8758:	ldr	r1, [pc, #56]	; 8798 <blkid_probe_get_size@plt+0x1280>
    875c:	mov	r0, r4
    8760:	add	r1, pc, r1
    8764:	bl	7050 <strstr@plt>
    8768:	clz	r5, r0
    876c:	lsr	r5, r5, #5
    8770:	b	8778 <blkid_probe_get_size@plt+0x1260>
    8774:	mov	r5, #0
    8778:	mov	r0, r5
    877c:	pop	{r4, r5, r6, pc}
    8780:	andeq	lr, r5, r8, lsr r8
    8784:	andeq	r5, r6, r8, asr r0
    8788:	andeq	r7, r6, ip, lsl #7
    878c:	andeq	r7, r6, ip, ror r3
    8790:	andeq	r3, r6, r4, lsr r8
    8794:	andeq	r7, r6, r4, asr #6
    8798:	andeq	r7, r6, r0, lsr r3
    879c:	ldr	r3, [pc, #612]	; 8a08 <blkid_probe_get_size@plt+0x14f0>
    87a0:	ldr	r2, [pc, #612]	; 8a0c <blkid_probe_get_size@plt+0x14f4>
    87a4:	add	r3, pc, r3
    87a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    87ac:	add	fp, sp, #32
    87b0:	sub	sp, sp, #60	; 0x3c
    87b4:	ldr	r2, [r3, r2]
    87b8:	subs	r4, r0, #0
    87bc:	str	r2, [fp, #-80]	; 0xffffffb0
    87c0:	ldr	r3, [r2]
    87c4:	str	r3, [fp, #-40]	; 0xffffffd8
    87c8:	bne	87f8 <blkid_probe_get_size@plt+0x12e0>
    87cc:	ldr	r2, [pc, #572]	; 8a10 <blkid_probe_get_size@plt+0x14f8>
    87d0:	ldr	r1, [pc, #572]	; 8a14 <blkid_probe_get_size@plt+0x14fc>
    87d4:	add	r2, pc, r2
    87d8:	add	r2, r2, #32
    87dc:	str	r2, [sp]
    87e0:	ldr	r2, [pc, #560]	; 8a18 <blkid_probe_get_size@plt+0x1500>
    87e4:	ldr	r3, [pc, #560]	; 8a1c <blkid_probe_get_size@plt+0x1504>
    87e8:	add	r2, pc, r2
    87ec:	add	r1, pc, r1
    87f0:	mov	r0, #1
    87f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    87f8:	mov	r8, r1
    87fc:	ldr	r2, [pc, #540]	; 8a20 <blkid_probe_get_size@plt+0x1508>
    8800:	ldr	r1, [pc, #540]	; 8a24 <blkid_probe_get_size@plt+0x150c>
    8804:	sub	r3, fp, #48	; 0x30
    8808:	add	r2, pc, r2
    880c:	add	r1, pc, r1
    8810:	bl	379ac <blkid_probe_get_size@plt+0x30494>
    8814:	cmp	r0, #0
    8818:	blt	89e0 <blkid_probe_get_size@plt+0x14c8>
    881c:	mov	r0, r4
    8820:	sub	r1, fp, #68	; 0x44
    8824:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    8828:	cmp	r0, #0
    882c:	blt	89e0 <blkid_probe_get_size@plt+0x14c8>
    8830:	sub	r3, fp, #64	; 0x40
    8834:	ldr	r1, [pc, #492]	; 8a28 <blkid_probe_get_size@plt+0x1510>
    8838:	str	r3, [sp, #4]
    883c:	sub	r3, fp, #60	; 0x3c
    8840:	str	r3, [sp]
    8844:	sub	r2, fp, #52	; 0x34
    8848:	sub	r3, fp, #56	; 0x38
    884c:	add	r1, pc, r1
    8850:	ldr	r0, [fp, #-68]	; 0xffffffbc
    8854:	bl	735c <sscanf@plt>
    8858:	cmp	r0, #4
    885c:	bne	89e0 <blkid_probe_get_size@plt+0x14c8>
    8860:	sub	r1, fp, #72	; 0x48
    8864:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8868:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
    886c:	cmp	r0, #0
    8870:	blt	89e0 <blkid_probe_get_size@plt+0x14c8>
    8874:	ldr	r5, [fp, #-72]	; 0xffffffb8
    8878:	mov	r1, #47	; 0x2f
    887c:	mov	r0, r5
    8880:	bl	7410 <strrchr@plt>
    8884:	subs	r1, r0, #0
    8888:	beq	89e0 <blkid_probe_get_size@plt+0x14c8>
    888c:	sub	r1, r1, r5
    8890:	mov	r0, r5
    8894:	bl	69cc <strnlen@plt>
    8898:	mov	r4, #0
    889c:	mov	r1, r5
    88a0:	add	r3, r0, #15
    88a4:	bic	r3, r3, #7
    88a8:	sub	sp, sp, r3
    88ac:	mov	r2, r0
    88b0:	add	r0, sp, #15
    88b4:	lsr	r0, r0, #3
    88b8:	strb	r4, [r2, r0, lsl #3]
    88bc:	lsl	r0, r0, #3
    88c0:	bl	71e8 <memcpy@plt>
    88c4:	str	r0, [fp, #-72]	; 0xffffffb8
    88c8:	bl	6ca8 <opendir@plt>
    88cc:	subs	r5, r0, #0
    88d0:	beq	89e0 <blkid_probe_get_size@plt+0x14c8>
    88d4:	bl	732c <__errno_location@plt>
    88d8:	ldr	sl, [pc, #332]	; 8a2c <blkid_probe_get_size@plt+0x1514>
    88dc:	sub	r9, fp, #44	; 0x2c
    88e0:	add	sl, pc, sl
    88e4:	str	r4, [r0]
    88e8:	mov	r7, r0
    88ec:	mov	r0, r5
    88f0:	bl	6bb8 <readdir64@plt>
    88f4:	mvn	r4, #0
    88f8:	mov	r6, r0
    88fc:	cmp	r6, #0
    8900:	bne	8944 <blkid_probe_get_size@plt+0x142c>
    8904:	cmn	r4, #1
    8908:	beq	89d0 <blkid_probe_get_size@plt+0x14b8>
    890c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8910:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8914:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8918:	str	r1, [sp]
    891c:	ldr	r1, [pc, #268]	; 8a30 <blkid_probe_get_size@plt+0x1518>
    8920:	sub	r4, r3, r4
    8924:	str	r2, [sp, #4]
    8928:	mov	r0, r8
    892c:	mov	r2, r4
    8930:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8934:	add	r1, pc, r1
    8938:	str	r4, [fp, #-52]	; 0xffffffcc
    893c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
    8940:	b	89d0 <blkid_probe_get_size@plt+0x14b8>
    8944:	ldrb	r2, [r6, #19]
    8948:	cmp	r2, #46	; 0x2e
    894c:	beq	89b8 <blkid_probe_get_size@plt+0x14a0>
    8950:	ldrb	r2, [r6, #18]
    8954:	cmp	r2, #4
    8958:	beq	8964 <blkid_probe_get_size@plt+0x144c>
    895c:	cmp	r2, #10
    8960:	bne	89b8 <blkid_probe_get_size@plt+0x14a0>
    8964:	mov	r2, #4
    8968:	mov	r1, sl
    896c:	add	r0, r6, #19
    8970:	bl	6a5c <strncmp@plt>
    8974:	cmp	r0, #0
    8978:	bne	89b8 <blkid_probe_get_size@plt+0x14a0>
    897c:	add	r0, r6, #23
    8980:	mov	r2, #10
    8984:	mov	r1, r9
    8988:	bl	6c54 <strtoul@plt>
    898c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8990:	ldrb	r3, [r3]
    8994:	cmp	r3, #0
    8998:	bne	89b8 <blkid_probe_get_size@plt+0x14a0>
    899c:	cmn	r4, #1
    89a0:	movne	r3, #0
    89a4:	moveq	r3, #1
    89a8:	cmp	r4, r0
    89ac:	orrgt	r3, r3, #1
    89b0:	cmp	r3, #0
    89b4:	movne	r4, r0
    89b8:	mov	r3, #0
    89bc:	str	r3, [r7]
    89c0:	mov	r0, r5
    89c4:	bl	6bb8 <readdir64@plt>
    89c8:	mov	r6, r0
    89cc:	b	88fc <blkid_probe_get_size@plt+0x13e4>
    89d0:	mov	r0, r5
    89d4:	ldr	r4, [fp, #-48]	; 0xffffffd0
    89d8:	bl	6aa4 <closedir@plt>
    89dc:	b	89e4 <blkid_probe_get_size@plt+0x14cc>
    89e0:	mov	r4, #0
    89e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    89e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    89ec:	mov	r0, r4
    89f0:	ldr	r3, [r3]
    89f4:	cmp	r2, r3
    89f8:	beq	8a00 <blkid_probe_get_size@plt+0x14e8>
    89fc:	bl	6fb4 <__stack_chk_fail@plt>
    8a00:	sub	sp, fp, #32
    8a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8a08:	andeq	pc, r8, r4, asr #7
    8a0c:	andeq	r0, r0, ip, lsr r4
    8a10:	andeq	sl, r6, r0, ror r1
    8a14:	andeq	lr, r5, ip, asr r8
    8a18:	andeq	sl, r6, ip, lsr #16
    8a1c:	andeq	r0, r0, r3, lsr #2
    8a20:	andeq	sl, r6, r0, lsr r8
    8a24:	andeq	r2, r6, r8, lsl #12
    8a28:	andeq	r2, r6, ip, asr #14
    8a2c:	andeq	sl, r6, r4, ror #14
    8a30:	andeq	sl, r6, r8, lsl r7
    8a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8a38:	sub	sp, sp, #228	; 0xe4
    8a3c:	ldr	r4, [pc, #3356]	; 9760 <blkid_probe_get_size@plt+0x2248>
    8a40:	ldr	r3, [pc, #3356]	; 9764 <blkid_probe_get_size@plt+0x224c>
    8a44:	add	r4, pc, r4
    8a48:	ldr	r2, [pc, #3352]	; 9768 <blkid_probe_get_size@plt+0x2250>
    8a4c:	ldr	r3, [r4, r3]
    8a50:	ldr	r5, [pc, #3348]	; 976c <blkid_probe_get_size@plt+0x2254>
    8a54:	mov	ip, r3
    8a58:	str	r3, [sp, #44]	; 0x2c
    8a5c:	ldr	r3, [pc, #3340]	; 9770 <blkid_probe_get_size@plt+0x2258>
    8a60:	add	r2, pc, r2
    8a64:	ldr	sl, [pc, #3336]	; 9774 <blkid_probe_get_size@plt+0x225c>
    8a68:	ldr	lr, [ip]
    8a6c:	add	r5, pc, r5
    8a70:	add	r3, pc, r3
    8a74:	str	r2, [sp, #8]
    8a78:	mov	r7, r1
    8a7c:	ldr	r2, [pc, #3316]	; 9778 <blkid_probe_get_size@plt+0x2260>
    8a80:	ldr	r1, [pc, #3316]	; 977c <blkid_probe_get_size@plt+0x2264>
    8a84:	mov	ip, #0
    8a88:	str	r5, [sp, #24]
    8a8c:	str	r3, [sp]
    8a90:	add	sl, pc, sl
    8a94:	add	r3, sp, #68	; 0x44
    8a98:	add	r9, sp, #116	; 0x74
    8a9c:	add	r8, sp, #76	; 0x4c
    8aa0:	add	r5, sp, #72	; 0x48
    8aa4:	str	r3, [sp, #4]
    8aa8:	mov	r6, r0
    8aac:	str	sl, [sp, #16]
    8ab0:	str	ip, [sp, #32]
    8ab4:	mov	r0, ip
    8ab8:	str	r9, [sp, #28]
    8abc:	str	r8, [sp, #20]
    8ac0:	str	r5, [sp, #12]
    8ac4:	add	r3, sp, #64	; 0x40
    8ac8:	add	r2, pc, r2
    8acc:	add	r1, pc, r1
    8ad0:	str	lr, [sp, #220]	; 0xdc
    8ad4:	str	ip, [sp, #64]	; 0x40
    8ad8:	str	ip, [sp, #68]	; 0x44
    8adc:	str	ip, [sp, #72]	; 0x48
    8ae0:	str	ip, [sp, #76]	; 0x4c
    8ae4:	str	ip, [sp, #116]	; 0x74
    8ae8:	bl	4943c <blkid_probe_get_size@plt+0x41f24>
    8aec:	cmp	r0, #0
    8af0:	bge	8f5c <blkid_probe_get_size@plt+0x1a44>
    8af4:	ldr	r0, [sp, #116]	; 0x74
    8af8:	bl	69f0 <free@plt>
    8afc:	ldr	r0, [sp, #76]	; 0x4c
    8b00:	bl	69f0 <free@plt>
    8b04:	ldr	r0, [sp, #72]	; 0x48
    8b08:	bl	69f0 <free@plt>
    8b0c:	ldr	r0, [sp, #68]	; 0x44
    8b10:	bl	69f0 <free@plt>
    8b14:	ldr	r0, [sp, #64]	; 0x40
    8b18:	bl	69f0 <free@plt>
    8b1c:	bl	48ef8 <blkid_probe_get_size@plt+0x419e0>
    8b20:	cmp	r0, #0
    8b24:	blt	9020 <blkid_probe_get_size@plt+0x1b08>
    8b28:	ldr	r0, [pc, #3152]	; 9780 <blkid_probe_get_size@plt+0x2268>
    8b2c:	add	r0, pc, r0
    8b30:	bl	7464 <getenv@plt>
    8b34:	subs	r5, r0, #0
    8b38:	beq	8b48 <blkid_probe_get_size@plt+0x1630>
    8b3c:	bl	41dd8 <blkid_probe_get_size@plt+0x3a8c0>
    8b40:	cmp	r0, #0
    8b44:	blt	90ac <blkid_probe_get_size@plt+0x1b94>
    8b48:	ldr	r0, [pc, #3124]	; 9784 <blkid_probe_get_size@plt+0x226c>
    8b4c:	add	r0, pc, r0
    8b50:	bl	7464 <getenv@plt>
    8b54:	subs	r5, r0, #0
    8b58:	beq	8b70 <blkid_probe_get_size@plt+0x1658>
    8b5c:	mov	r1, r5
    8b60:	mov	r0, #1
    8b64:	bl	41ed8 <blkid_probe_get_size@plt+0x3a9c0>
    8b68:	cmp	r0, #0
    8b6c:	blt	9100 <blkid_probe_get_size@plt+0x1be8>
    8b70:	ldr	r0, [pc, #3088]	; 9788 <blkid_probe_get_size@plt+0x2270>
    8b74:	add	r0, pc, r0
    8b78:	bl	7464 <getenv@plt>
    8b7c:	subs	r5, r0, #0
    8b80:	beq	8ba4 <blkid_probe_get_size@plt+0x168c>
    8b84:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
    8b88:	cmp	r0, #0
    8b8c:	blt	8d40 <blkid_probe_get_size@plt+0x1828>
    8b90:	ldr	r3, [pc, #3060]	; 978c <blkid_probe_get_size@plt+0x2274>
    8b94:	movne	r2, #1
    8b98:	add	r3, pc, r3
    8b9c:	moveq	r2, #0
    8ba0:	strb	r2, [r3]
    8ba4:	ldr	r0, [pc, #3044]	; 9790 <blkid_probe_get_size@plt+0x2278>
    8ba8:	add	r0, pc, r0
    8bac:	bl	7464 <getenv@plt>
    8bb0:	subs	r5, r0, #0
    8bb4:	beq	8bd8 <blkid_probe_get_size@plt+0x16c0>
    8bb8:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
    8bbc:	cmp	r0, #0
    8bc0:	blt	8cec <blkid_probe_get_size@plt+0x17d4>
    8bc4:	ldr	r3, [pc, #3016]	; 9794 <blkid_probe_get_size@plt+0x227c>
    8bc8:	movne	r2, #1
    8bcc:	add	r3, pc, r3
    8bd0:	moveq	r2, #0
    8bd4:	strb	r2, [r3]
    8bd8:	bl	3adf8 <blkid_probe_get_size@plt+0x338e0>
    8bdc:	cmp	r6, #0
    8be0:	blt	9408 <blkid_probe_get_size@plt+0x1ef0>
    8be4:	cmp	r7, #0
    8be8:	beq	9438 <blkid_probe_get_size@plt+0x1f20>
    8bec:	ldr	r5, [pc, #2980]	; 9798 <blkid_probe_get_size@plt+0x2280>
    8bf0:	ldr	fp, [pc, #2980]	; 979c <blkid_probe_get_size@plt+0x2284>
    8bf4:	add	r5, pc, r5
    8bf8:	add	fp, pc, fp
    8bfc:	add	r5, r5, #1808	; 0x710
    8c00:	mov	sl, #0
    8c04:	str	sl, [sp]
    8c08:	mov	r3, r5
    8c0c:	mov	r2, fp
    8c10:	mov	r1, r7
    8c14:	mov	r0, r6
    8c18:	bl	70a4 <getopt_long@plt>
    8c1c:	cmp	r0, #0
    8c20:	blt	8c4c <blkid_probe_get_size@plt+0x1734>
    8c24:	cmp	r0, #86	; 0x56
    8c28:	beq	900c <blkid_probe_get_size@plt+0x1af4>
    8c2c:	ble	8d94 <blkid_probe_get_size@plt+0x187c>
    8c30:	cmp	r0, #100	; 0x64
    8c34:	beq	8ffc <blkid_probe_get_size@plt+0x1ae4>
    8c38:	cmp	r0, #104	; 0x68
    8c3c:	bne	972c <blkid_probe_get_size@plt+0x2214>
    8c40:	bl	1094c <blkid_probe_get_size@plt+0x9434>
    8c44:	subs	sl, r0, #0
    8c48:	ble	8da0 <blkid_probe_get_size@plt+0x1888>
    8c4c:	ldr	sl, [pc, #2892]	; 97a0 <blkid_probe_get_size@plt+0x2288>
    8c50:	ldr	r5, [pc, #2892]	; 97a4 <blkid_probe_get_size@plt+0x228c>
    8c54:	add	sl, pc, sl
    8c58:	add	r5, pc, r5
    8c5c:	mov	r0, #0
    8c60:	ldr	r1, [sl, #4]
    8c64:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
    8c68:	ldr	fp, [r5]
    8c6c:	cmp	fp, #0
    8c70:	beq	917c <blkid_probe_get_size@plt+0x1c64>
    8c74:	ldr	r3, [pc, #2860]	; 97a8 <blkid_probe_get_size@plt+0x2290>
    8c78:	ldr	r3, [r4, r3]
    8c7c:	ldr	r9, [r3]
    8c80:	cmp	r6, r9
    8c84:	blt	9578 <blkid_probe_get_size@plt+0x2060>
    8c88:	ldr	r5, [pc, #2844]	; 97ac <blkid_probe_get_size@plt+0x2294>
    8c8c:	mov	r2, #0
    8c90:	add	r5, pc, r5
    8c94:	add	r5, r5, #1584	; 0x630
    8c98:	str	r2, [r3]
    8c9c:	add	r8, r7, r9, lsl #2
    8ca0:	add	r5, r5, #4
    8ca4:	ldr	r7, [r7, r9, lsl #2]
    8ca8:	b	8cd8 <blkid_probe_get_size@plt+0x17c0>
    8cac:	ldr	r1, [r5]
    8cb0:	mov	r0, r7
    8cb4:	bl	7314 <strcmp@plt>
    8cb8:	clz	r0, r0
    8cbc:	lsr	r0, r0, #5
    8cc0:	cmp	r0, #0
    8cc4:	bne	92f4 <blkid_probe_get_size@plt+0x1ddc>
    8cc8:	add	r5, r5, #20
    8ccc:	ldr	r3, [r5, #16]
    8cd0:	cmp	r3, #0
    8cd4:	beq	9294 <blkid_probe_get_size@plt+0x1d7c>
    8cd8:	cmp	r7, #0
    8cdc:	bne	8cac <blkid_probe_get_size@plt+0x1794>
    8ce0:	ldr	r0, [r5, #12]
    8ce4:	and	r0, r0, #1
    8ce8:	b	8cc0 <blkid_probe_get_size@plt+0x17a8>
    8cec:	ldr	r3, [pc, #2748]	; 97b0 <blkid_probe_get_size@plt+0x2298>
    8cf0:	add	r3, pc, r3
    8cf4:	ldr	r3, [r3]
    8cf8:	cmp	r3, #3
    8cfc:	ble	8bd8 <blkid_probe_get_size@plt+0x16c0>
    8d00:	ldr	r3, [pc, #2732]	; 97b4 <blkid_probe_get_size@plt+0x229c>
    8d04:	ldr	r2, [pc, #2732]	; 97b8 <blkid_probe_get_size@plt+0x22a0>
    8d08:	add	r3, pc, r3
    8d0c:	add	r2, pc, r2
    8d10:	str	r2, [sp, #4]
    8d14:	add	r3, r3, #2096	; 0x830
    8d18:	ldr	r2, [pc, #2716]	; 97bc <blkid_probe_get_size@plt+0x22a4>
    8d1c:	add	r3, r3, #8
    8d20:	str	r3, [sp]
    8d24:	str	r5, [sp, #8]
    8d28:	ldr	r3, [pc, #2704]	; 97c0 <blkid_probe_get_size@plt+0x22a8>
    8d2c:	add	r2, pc, r2
    8d30:	mov	r1, #0
    8d34:	mov	r0, #4
    8d38:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    8d3c:	b	8bd8 <blkid_probe_get_size@plt+0x16c0>
    8d40:	ldr	r3, [pc, #2684]	; 97c4 <blkid_probe_get_size@plt+0x22ac>
    8d44:	add	r3, pc, r3
    8d48:	ldr	r3, [r3]
    8d4c:	cmp	r3, #3
    8d50:	ble	8ba4 <blkid_probe_get_size@plt+0x168c>
    8d54:	ldr	r3, [pc, #2668]	; 97c8 <blkid_probe_get_size@plt+0x22b0>
    8d58:	ldr	r2, [pc, #2668]	; 97cc <blkid_probe_get_size@plt+0x22b4>
    8d5c:	add	r3, pc, r3
    8d60:	add	r2, pc, r2
    8d64:	str	r2, [sp, #4]
    8d68:	add	r3, r3, #2096	; 0x830
    8d6c:	ldr	r2, [pc, #2652]	; 97d0 <blkid_probe_get_size@plt+0x22b8>
    8d70:	add	r3, r3, #8
    8d74:	str	r3, [sp]
    8d78:	str	r5, [sp, #8]
    8d7c:	ldr	r3, [pc, #2640]	; 97d4 <blkid_probe_get_size@plt+0x22bc>
    8d80:	add	r2, pc, r2
    8d84:	mov	r1, #0
    8d88:	mov	r0, #4
    8d8c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    8d90:	b	8ba4 <blkid_probe_get_size@plt+0x168c>
    8d94:	cmp	r0, #63	; 0x3f
    8d98:	bne	972c <blkid_probe_get_size@plt+0x2214>
    8d9c:	mvn	sl, #21
    8da0:	ldr	r3, [pc, #2608]	; 97d8 <blkid_probe_get_size@plt+0x22c0>
    8da4:	ldr	r5, [r4, r3]
    8da8:	cmp	r5, #0
    8dac:	beq	8ddc <blkid_probe_get_size@plt+0x18c4>
    8db0:	ldr	r3, [pc, #2596]	; 97dc <blkid_probe_get_size@plt+0x22c4>
    8db4:	add	r5, r5, #3
    8db8:	bic	r5, r5, #3
    8dbc:	ldr	r6, [r4, r3]
    8dc0:	cmp	r5, r6
    8dc4:	bcs	8ddc <blkid_probe_get_size@plt+0x18c4>
    8dc8:	ldm	r5, {r0, r3}
    8dcc:	add	r5, r5, #8
    8dd0:	blx	r3
    8dd4:	cmp	r5, r6
    8dd8:	bcc	8dc8 <blkid_probe_get_size@plt+0x18b0>
    8ddc:	ldr	r5, [pc, #2556]	; 97e0 <blkid_probe_get_size@plt+0x22c8>
    8de0:	add	r5, pc, r5
    8de4:	ldr	r0, [r5, #1084]	; 0x43c
    8de8:	cmp	r0, #0
    8dec:	ble	8e0c <blkid_probe_get_size@plt+0x18f4>
    8df0:	mov	r1, #15
    8df4:	bl	39b58 <blkid_probe_get_size@plt+0x32640>
    8df8:	mov	r1, #0
    8dfc:	ldr	r0, [r5, #1084]	; 0x43c
    8e00:	bl	3eda0 <blkid_probe_get_size@plt+0x37888>
    8e04:	mov	r3, #0
    8e08:	str	r3, [r5, #1084]	; 0x43c
    8e0c:	ldr	r5, [pc, #2512]	; 97e4 <blkid_probe_get_size@plt+0x22cc>
    8e10:	add	r5, pc, r5
    8e14:	ldr	r0, [r5, #1088]	; 0x440
    8e18:	cmp	r0, #0
    8e1c:	ble	8e3c <blkid_probe_get_size@plt+0x1924>
    8e20:	mov	r1, #15
    8e24:	bl	39b58 <blkid_probe_get_size@plt+0x32640>
    8e28:	mov	r1, #0
    8e2c:	ldr	r0, [r5, #1088]	; 0x440
    8e30:	bl	3eda0 <blkid_probe_get_size@plt+0x37888>
    8e34:	mov	r3, #0
    8e38:	str	r3, [r5, #1088]	; 0x440
    8e3c:	ldr	r5, [pc, #2468]	; 97e8 <blkid_probe_get_size@plt+0x22d0>
    8e40:	add	r5, pc, r5
    8e44:	ldr	r0, [r5]
    8e48:	cmp	r0, #0
    8e4c:	beq	8e5c <blkid_probe_get_size@plt+0x1944>
    8e50:	bl	6ab0 <selabel_close@plt>
    8e54:	mov	r3, #0
    8e58:	str	r3, [r5]
    8e5c:	ldr	r3, [pc, #2440]	; 97ec <blkid_probe_get_size@plt+0x22d4>
    8e60:	add	r3, pc, r3
    8e64:	ldr	r3, [r3]
    8e68:	cmp	r3, #0
    8e6c:	ble	8f3c <blkid_probe_get_size@plt+0x1a24>
    8e70:	ldr	r3, [pc, #2424]	; 97f0 <blkid_probe_get_size@plt+0x22d8>
    8e74:	ldr	r3, [r4, r3]
    8e78:	ldr	r0, [r3]
    8e7c:	bl	7380 <fflush@plt>
    8e80:	ldr	r3, [pc, #2412]	; 97f4 <blkid_probe_get_size@plt+0x22dc>
    8e84:	add	r3, pc, r3
    8e88:	ldrb	r3, [r3, #1092]	; 0x444
    8e8c:	cmp	r3, #0
    8e90:	beq	8eb8 <blkid_probe_get_size@plt+0x19a0>
    8e94:	ldr	r3, [pc, #2396]	; 97f8 <blkid_probe_get_size@plt+0x22e0>
    8e98:	add	r3, pc, r3
    8e9c:	ldr	r0, [r3, #96]	; 0x60
    8ea0:	cmp	r0, #0
    8ea4:	blt	9288 <blkid_probe_get_size@plt+0x1d70>
    8ea8:	mov	r1, #1
    8eac:	bl	6e7c <dup2@plt>
    8eb0:	cmp	r0, #0
    8eb4:	blt	9288 <blkid_probe_get_size@plt+0x1d70>
    8eb8:	ldr	r5, [pc, #2364]	; 97fc <blkid_probe_get_size@plt+0x22e4>
    8ebc:	add	r5, pc, r5
    8ec0:	ldr	r0, [r5, #96]	; 0x60
    8ec4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
    8ec8:	ldr	r3, [pc, #2352]	; 9800 <blkid_probe_get_size@plt+0x22e8>
    8ecc:	str	r0, [r5, #96]	; 0x60
    8ed0:	ldr	r3, [r4, r3]
    8ed4:	ldr	r0, [r3]
    8ed8:	bl	7380 <fflush@plt>
    8edc:	ldr	r3, [pc, #2336]	; 9804 <blkid_probe_get_size@plt+0x22ec>
    8ee0:	add	r3, pc, r3
    8ee4:	ldrb	r3, [r3, #1093]	; 0x445
    8ee8:	cmp	r3, #0
    8eec:	bne	9154 <blkid_probe_get_size@plt+0x1c3c>
    8ef0:	ldr	r6, [pc, #2320]	; 9808 <blkid_probe_get_size@plt+0x22f0>
    8ef4:	ldr	r4, [pc, #2320]	; 980c <blkid_probe_get_size@plt+0x22f4>
    8ef8:	add	r6, pc, r6
    8efc:	add	r4, pc, r4
    8f00:	ldr	r0, [r6, #100]	; 0x64
    8f04:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
    8f08:	ldr	r3, [pc, #2304]	; 9810 <blkid_probe_get_size@plt+0x22f8>
    8f0c:	mov	r5, #0
    8f10:	add	r3, pc, r3
    8f14:	mov	r1, #18
    8f18:	strb	r5, [r3, #1093]	; 0x445
    8f1c:	strb	r5, [r3, #1092]	; 0x444
    8f20:	str	r0, [r6, #100]	; 0x64
    8f24:	ldr	r0, [r4]
    8f28:	bl	6e64 <kill@plt>
    8f2c:	mov	r1, r5
    8f30:	ldr	r0, [r4]
    8f34:	bl	3eda0 <blkid_probe_get_size@plt+0x37888>
    8f38:	str	r5, [r4]
    8f3c:	ldr	r3, [sp, #44]	; 0x2c
    8f40:	ldr	r2, [sp, #220]	; 0xdc
    8f44:	lsr	r0, sl, #31
    8f48:	ldr	r3, [r3]
    8f4c:	cmp	r2, r3
    8f50:	bne	975c <blkid_probe_get_size@plt+0x2244>
    8f54:	add	sp, sp, #228	; 0xe4
    8f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f5c:	ldr	sl, [sp, #64]	; 0x40
    8f60:	cmp	sl, #0
    8f64:	beq	8af4 <blkid_probe_get_size@plt+0x15dc>
    8f68:	mov	r0, sl
    8f6c:	bl	723c <strlen@plt>
    8f70:	cmp	r0, #1
    8f74:	bls	8f9c <blkid_probe_get_size@plt+0x1a84>
    8f78:	ldrb	r3, [sl]
    8f7c:	cmp	r3, #34	; 0x22
    8f80:	beq	9264 <blkid_probe_get_size@plt+0x1d4c>
    8f84:	cmp	r3, #39	; 0x27
    8f88:	bne	8f9c <blkid_probe_get_size@plt+0x1a84>
    8f8c:	add	r0, sl, r0
    8f90:	ldrb	r3, [r0, #-1]
    8f94:	cmp	r3, #39	; 0x27
    8f98:	beq	9274 <blkid_probe_get_size@plt+0x1d5c>
    8f9c:	mov	r1, sl
    8fa0:	mov	r0, #1
    8fa4:	bl	41ed8 <blkid_probe_get_size@plt+0x3a9c0>
    8fa8:	subs	r1, r0, #0
    8fac:	bge	8af4 <blkid_probe_get_size@plt+0x15dc>
    8fb0:	ldr	r3, [pc, #2140]	; 9814 <blkid_probe_get_size@plt+0x22fc>
    8fb4:	add	r3, pc, r3
    8fb8:	ldr	r3, [r3]
    8fbc:	cmp	r3, #6
    8fc0:	ble	8af4 <blkid_probe_get_size@plt+0x15dc>
    8fc4:	ldr	r2, [pc, #2124]	; 9818 <blkid_probe_get_size@plt+0x2300>
    8fc8:	ldr	r3, [pc, #2124]	; 981c <blkid_probe_get_size@plt+0x2304>
    8fcc:	add	r2, pc, r2
    8fd0:	str	r2, [sp, #4]
    8fd4:	add	r3, pc, r3
    8fd8:	ldr	r2, [pc, #2112]	; 9820 <blkid_probe_get_size@plt+0x2308>
    8fdc:	add	r3, r3, #2080	; 0x820
    8fe0:	str	r3, [sp]
    8fe4:	str	sl, [sp, #8]
    8fe8:	mov	r3, #61	; 0x3d
    8fec:	add	r2, pc, r2
    8ff0:	mov	r0, #7
    8ff4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    8ff8:	b	8af4 <blkid_probe_get_size@plt+0x15dc>
    8ffc:	mov	r1, #7
    9000:	mov	r0, #1
    9004:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
    9008:	b	8c04 <blkid_probe_get_size@plt+0x16ec>
    900c:	ldr	r0, [pc, #2064]	; 9824 <blkid_probe_get_size@plt+0x230c>
    9010:	mov	sl, #0
    9014:	add	r0, pc, r0
    9018:	bl	6b4c <puts@plt>
    901c:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    9020:	mov	r0, r5
    9024:	mov	r5, #0
    9028:	str	r5, [sp, #72]	; 0x48
    902c:	bl	3ef60 <blkid_probe_get_size@plt+0x37a48>
    9030:	cmp	r0, r5
    9034:	blt	90a0 <blkid_probe_get_size@plt+0x1b88>
    9038:	ldr	r3, [sp, #72]	; 0x48
    903c:	str	r3, [sp, #76]	; 0x4c
    9040:	b	907c <blkid_probe_get_size@plt+0x1b64>
    9044:	ldr	r0, [sp, #116]	; 0x74
    9048:	beq	9570 <blkid_probe_get_size@plt+0x2058>
    904c:	mov	r1, #61	; 0x3d
    9050:	bl	74c4 <strchr@plt>
    9054:	mov	r2, #0
    9058:	subs	r1, r0, #0
    905c:	strbne	r5, [r1]
    9060:	addne	r1, r1, #1
    9064:	ldr	r0, [sp, #116]	; 0x74
    9068:	bl	41f08 <blkid_probe_get_size@plt+0x3a9f0>
    906c:	cmp	r0, #0
    9070:	blt	9098 <blkid_probe_get_size@plt+0x1b80>
    9074:	ldr	r0, [sp, #116]	; 0x74
    9078:	bl	69f0 <free@plt>
    907c:	mov	r2, #1
    9080:	mov	r1, r9
    9084:	mov	r0, r8
    9088:	str	r5, [sp, #116]	; 0x74
    908c:	bl	4868c <blkid_probe_get_size@plt+0x41174>
    9090:	cmp	r0, #0
    9094:	bge	9044 <blkid_probe_get_size@plt+0x1b2c>
    9098:	ldr	r0, [sp, #116]	; 0x74
    909c:	bl	69f0 <free@plt>
    90a0:	ldr	r0, [sp, #72]	; 0x48
    90a4:	bl	69f0 <free@plt>
    90a8:	b	8b28 <blkid_probe_get_size@plt+0x1610>
    90ac:	ldr	r3, [pc, #1908]	; 9828 <blkid_probe_get_size@plt+0x2310>
    90b0:	add	r3, pc, r3
    90b4:	ldr	r3, [r3]
    90b8:	cmp	r3, #3
    90bc:	ble	8b48 <blkid_probe_get_size@plt+0x1630>
    90c0:	ldr	r3, [pc, #1892]	; 982c <blkid_probe_get_size@plt+0x2314>
    90c4:	ldr	r2, [pc, #1892]	; 9830 <blkid_probe_get_size@plt+0x2318>
    90c8:	add	r3, pc, r3
    90cc:	add	r2, pc, r2
    90d0:	str	r2, [sp, #4]
    90d4:	add	r3, r3, #2096	; 0x830
    90d8:	ldr	r2, [pc, #1876]	; 9834 <blkid_probe_get_size@plt+0x231c>
    90dc:	add	r3, r3, #8
    90e0:	str	r3, [sp]
    90e4:	str	r5, [sp, #8]
    90e8:	ldr	r3, [pc, #1864]	; 9838 <blkid_probe_get_size@plt+0x2320>
    90ec:	add	r2, pc, r2
    90f0:	mov	r1, #0
    90f4:	mov	r0, #4
    90f8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    90fc:	b	8b48 <blkid_probe_get_size@plt+0x1630>
    9100:	ldr	r3, [pc, #1844]	; 983c <blkid_probe_get_size@plt+0x2324>
    9104:	add	r3, pc, r3
    9108:	ldr	r3, [r3]
    910c:	cmp	r3, #3
    9110:	ble	8b70 <blkid_probe_get_size@plt+0x1658>
    9114:	ldr	r3, [pc, #1828]	; 9840 <blkid_probe_get_size@plt+0x2328>
    9118:	ldr	r2, [pc, #1828]	; 9844 <blkid_probe_get_size@plt+0x232c>
    911c:	add	r3, pc, r3
    9120:	add	r2, pc, r2
    9124:	str	r2, [sp, #4]
    9128:	add	r3, r3, #2096	; 0x830
    912c:	ldr	r2, [pc, #1812]	; 9848 <blkid_probe_get_size@plt+0x2330>
    9130:	add	r3, r3, #8
    9134:	str	r3, [sp]
    9138:	str	r5, [sp, #8]
    913c:	ldr	r3, [pc, #1800]	; 984c <blkid_probe_get_size@plt+0x2334>
    9140:	add	r2, pc, r2
    9144:	mov	r1, #0
    9148:	mov	r0, #4
    914c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9150:	b	8b70 <blkid_probe_get_size@plt+0x1658>
    9154:	ldr	r0, [r5, #100]	; 0x64
    9158:	cmp	r0, #0
    915c:	blt	9170 <blkid_probe_get_size@plt+0x1c58>
    9160:	mov	r1, #2
    9164:	bl	6e7c <dup2@plt>
    9168:	cmp	r0, #0
    916c:	bge	8ef0 <blkid_probe_get_size@plt+0x19d8>
    9170:	mov	r0, #2
    9174:	bl	6d44 <close@plt>
    9178:	b	8ef0 <blkid_probe_get_size@plt+0x19d8>
    917c:	bl	39990 <blkid_probe_get_size@plt+0x32478>
    9180:	cmp	r0, #0
    9184:	beq	8c74 <blkid_probe_get_size@plt+0x175c>
    9188:	mov	r0, r8
    918c:	bl	6dc8 <mallinfo@plt>
    9190:	mov	r0, #1
    9194:	ldr	r8, [sp, #104]	; 0x68
    9198:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
    919c:	mov	r2, fp
    91a0:	strd	r0, [sp, #48]	; 0x30
    91a4:	mov	r1, fp
    91a8:	mov	r0, fp
    91ac:	bl	7500 <selabel_open@plt>
    91b0:	cmp	r0, #0
    91b4:	str	r0, [r5]
    91b8:	beq	95dc <blkid_probe_get_size@plt+0x20c4>
    91bc:	mov	r0, #1
    91c0:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
    91c4:	strd	r0, [sp, #56]	; 0x38
    91c8:	mov	r0, r9
    91cc:	bl	6dc8 <mallinfo@plt>
    91d0:	ldr	r3, [pc, #1656]	; 9850 <blkid_probe_get_size@plt+0x2338>
    91d4:	ldr	r2, [sp, #144]	; 0x90
    91d8:	add	r3, pc, r3
    91dc:	cmp	r8, r2
    91e0:	ldr	r3, [r3]
    91e4:	sublt	r8, r2, r8
    91e8:	movge	r8, fp
    91ec:	cmp	r3, #6
    91f0:	ble	8c74 <blkid_probe_get_size@plt+0x175c>
    91f4:	ldrd	r2, [sp, #56]	; 0x38
    91f8:	ldrd	sl, [sp, #48]	; 0x30
    91fc:	mov	r1, #0
    9200:	mov	r0, #0
    9204:	subs	r2, r2, sl
    9208:	strd	r0, [sp]
    920c:	sbc	r3, r3, fp
    9210:	add	r0, sp, #156	; 0x9c
    9214:	bl	47f58 <blkid_probe_get_size@plt+0x40a40>
    9218:	ldr	r2, [pc, #1588]	; 9854 <blkid_probe_get_size@plt+0x233c>
    921c:	add	r3, r8, #1020	; 0x3fc
    9220:	add	r2, pc, r2
    9224:	add	r2, r2, #2144	; 0x860
    9228:	add	r3, r3, #3
    922c:	ldr	r1, [pc, #1572]	; 9858 <blkid_probe_get_size@plt+0x2340>
    9230:	str	r2, [sp]
    9234:	ldr	r2, [pc, #1568]	; 985c <blkid_probe_get_size@plt+0x2344>
    9238:	add	r1, pc, r1
    923c:	asr	r3, r3, #10
    9240:	str	r3, [sp, #12]
    9244:	str	r1, [sp, #4]
    9248:	mov	r3, #90	; 0x5a
    924c:	add	r2, pc, r2
    9250:	mov	r1, #0
    9254:	str	r0, [sp, #8]
    9258:	mov	r0, #7
    925c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9260:	b	8c74 <blkid_probe_get_size@plt+0x175c>
    9264:	add	r0, sl, r0
    9268:	ldrb	r3, [r0, #-1]
    926c:	cmp	r3, #34	; 0x22
    9270:	bne	8f9c <blkid_probe_get_size@plt+0x1a84>
    9274:	mov	r3, #0
    9278:	strb	r3, [r0, #-1]
    927c:	ldr	sl, [sp, #64]	; 0x40
    9280:	add	sl, sl, #1
    9284:	b	8f9c <blkid_probe_get_size@plt+0x1a84>
    9288:	mov	r0, #1
    928c:	bl	6d44 <close@plt>
    9290:	b	8eb8 <blkid_probe_get_size@plt+0x19a0>
    9294:	ldr	r3, [pc, #1476]	; 9860 <blkid_probe_get_size@plt+0x2348>
    9298:	cmp	r7, #0
    929c:	add	r3, pc, r3
    92a0:	ldr	r3, [r3]
    92a4:	beq	9520 <blkid_probe_get_size@plt+0x2008>
    92a8:	cmp	r3, #2
    92ac:	ble	8d9c <blkid_probe_get_size@plt+0x1884>
    92b0:	ldr	r3, [pc, #1452]	; 9864 <blkid_probe_get_size@plt+0x234c>
    92b4:	ldr	r2, [pc, #1452]	; 9868 <blkid_probe_get_size@plt+0x2350>
    92b8:	add	r3, pc, r3
    92bc:	add	r2, pc, r2
    92c0:	str	r2, [sp, #4]
    92c4:	add	r3, r3, #2176	; 0x880
    92c8:	ldr	r2, [pc, #1436]	; 986c <blkid_probe_get_size@plt+0x2354>
    92cc:	add	r3, r3, #4
    92d0:	mov	r1, r0
    92d4:	str	r3, [sp]
    92d8:	str	r7, [sp, #8]
    92dc:	mov	r3, #72	; 0x48
    92e0:	add	r2, pc, r2
    92e4:	mov	r0, #3
    92e8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    92ec:	mvn	sl, #21
    92f0:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    92f4:	cmp	r7, #0
    92f8:	subne	r6, r6, r9
    92fc:	beq	9568 <blkid_probe_get_size@plt+0x2050>
    9300:	ldr	r3, [r5, #4]
    9304:	cmn	r3, #1
    9308:	beq	9368 <blkid_probe_get_size@plt+0x1e50>
    930c:	cmp	r3, r6
    9310:	bls	9368 <blkid_probe_get_size@plt+0x1e50>
    9314:	ldr	r3, [pc, #1364]	; 9870 <blkid_probe_get_size@plt+0x2358>
    9318:	add	r3, pc, r3
    931c:	ldr	r3, [r3]
    9320:	cmp	r3, #2
    9324:	ble	8d9c <blkid_probe_get_size@plt+0x1884>
    9328:	ldr	r3, [pc, #1348]	; 9874 <blkid_probe_get_size@plt+0x235c>
    932c:	ldr	r2, [pc, #1348]	; 9878 <blkid_probe_get_size@plt+0x2360>
    9330:	add	r3, pc, r3
    9334:	add	r2, pc, r2
    9338:	str	r2, [sp, #4]
    933c:	add	r3, r3, #2176	; 0x880
    9340:	ldr	r2, [pc, #1332]	; 987c <blkid_probe_get_size@plt+0x2364>
    9344:	add	r3, r3, #4
    9348:	str	r3, [sp]
    934c:	add	r2, pc, r2
    9350:	mov	r3, #97	; 0x61
    9354:	mov	r1, #1073741846	; 0x40000016
    9358:	mov	r0, #3
    935c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9360:	mov	sl, r0
    9364:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    9368:	ldr	r3, [r5, #8]
    936c:	cmn	r3, #1
    9370:	beq	93d0 <blkid_probe_get_size@plt+0x1eb8>
    9374:	cmp	r3, r6
    9378:	bcs	93d0 <blkid_probe_get_size@plt+0x1eb8>
    937c:	ldr	r3, [pc, #1276]	; 9880 <blkid_probe_get_size@plt+0x2368>
    9380:	add	r3, pc, r3
    9384:	ldr	r3, [r3]
    9388:	cmp	r3, #2
    938c:	ble	8d9c <blkid_probe_get_size@plt+0x1884>
    9390:	ldr	r3, [pc, #1260]	; 9884 <blkid_probe_get_size@plt+0x236c>
    9394:	ldr	r2, [pc, #1260]	; 9888 <blkid_probe_get_size@plt+0x2370>
    9398:	add	r3, pc, r3
    939c:	add	r2, pc, r2
    93a0:	str	r2, [sp, #4]
    93a4:	add	r3, r3, #2176	; 0x880
    93a8:	ldr	r2, [pc, #1244]	; 988c <blkid_probe_get_size@plt+0x2374>
    93ac:	add	r3, r3, #4
    93b0:	str	r3, [sp]
    93b4:	add	r2, pc, r2
    93b8:	mov	r3, #102	; 0x66
    93bc:	mov	r1, #1073741846	; 0x40000016
    93c0:	mov	r0, #3
    93c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    93c8:	mov	sl, r0
    93cc:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    93d0:	ldr	r3, [r5, #12]
    93d4:	tst	r3, #2
    93d8:	bne	9468 <blkid_probe_get_size@plt+0x1f50>
    93dc:	tst	r3, #4
    93e0:	bne	95a8 <blkid_probe_get_size@plt+0x2090>
    93e4:	cmp	r7, #0
    93e8:	ldr	r3, [r5, #16]
    93ec:	beq	95b8 <blkid_probe_get_size@plt+0x20a0>
    93f0:	mov	r1, r8
    93f4:	mov	r0, r6
    93f8:	mov	r2, #0
    93fc:	blx	r3
    9400:	mov	sl, r0
    9404:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    9408:	ldr	r2, [pc, #1152]	; 9890 <blkid_probe_get_size@plt+0x2378>
    940c:	ldr	r1, [pc, #1152]	; 9894 <blkid_probe_get_size@plt+0x237c>
    9410:	add	r2, pc, r2
    9414:	add	r2, r2, #2128	; 0x850
    9418:	add	r2, r2, #4
    941c:	str	r2, [sp]
    9420:	ldr	r2, [pc, #1136]	; 9898 <blkid_probe_get_size@plt+0x2380>
    9424:	mov	r3, #58	; 0x3a
    9428:	add	r2, pc, r2
    942c:	add	r1, pc, r1
    9430:	mov	r0, #1
    9434:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    9438:	ldr	r2, [pc, #1116]	; 989c <blkid_probe_get_size@plt+0x2384>
    943c:	ldr	r1, [pc, #1116]	; 98a0 <blkid_probe_get_size@plt+0x2388>
    9440:	add	r2, pc, r2
    9444:	add	r2, r2, #2128	; 0x850
    9448:	add	r2, r2, #4
    944c:	str	r2, [sp]
    9450:	ldr	r2, [pc, #1100]	; 98a4 <blkid_probe_get_size@plt+0x238c>
    9454:	mov	r3, #59	; 0x3b
    9458:	add	r2, pc, r2
    945c:	add	r1, pc, r1
    9460:	mov	r0, #1
    9464:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    9468:	ldr	r0, [pc, #1080]	; 98a8 <blkid_probe_get_size@plt+0x2390>
    946c:	add	r0, pc, r0
    9470:	bl	2e0ac <blkid_probe_get_size@plt+0x26b94>
    9474:	adds	r3, r0, #6
    9478:	movne	r3, #1
    947c:	ands	r3, r3, r0, lsr #31
    9480:	beq	9608 <blkid_probe_get_size@plt+0x20f0>
    9484:	ldr	r3, [pc, #1056]	; 98ac <blkid_probe_get_size@plt+0x2394>
    9488:	add	r3, pc, r3
    948c:	ldr	r3, [r3]
    9490:	cmp	r3, #6
    9494:	bgt	966c <blkid_probe_get_size@plt+0x2154>
    9498:	bl	3bec8 <blkid_probe_get_size@plt+0x349b0>
    949c:	subs	r9, r0, #0
    94a0:	blt	961c <blkid_probe_get_size@plt+0x2104>
    94a4:	cmp	r9, #0
    94a8:	movle	r3, #0
    94ac:	movgt	r3, #1
    94b0:	cmp	r3, #0
    94b4:	ldreq	r3, [r5, #12]
    94b8:	beq	93dc <blkid_probe_get_size@plt+0x1ec4>
    94bc:	ldr	r3, [pc, #1004]	; 98b0 <blkid_probe_get_size@plt+0x2398>
    94c0:	cmp	r7, #0
    94c4:	add	r3, pc, r3
    94c8:	ldr	r3, [r3]
    94cc:	beq	96e0 <blkid_probe_get_size@plt+0x21c8>
    94d0:	cmp	r3, #5
    94d4:	movle	sl, #0
    94d8:	ble	8da0 <blkid_probe_get_size@plt+0x1888>
    94dc:	ldr	r3, [pc, #976]	; 98b4 <blkid_probe_get_size@plt+0x239c>
    94e0:	ldr	r2, [pc, #976]	; 98b8 <blkid_probe_get_size@plt+0x23a0>
    94e4:	add	r3, pc, r3
    94e8:	add	r2, pc, r2
    94ec:	str	r2, [sp, #4]
    94f0:	add	r3, r3, #2176	; 0x880
    94f4:	ldr	r2, [pc, #960]	; 98bc <blkid_probe_get_size@plt+0x23a4>
    94f8:	add	r3, r3, #4
    94fc:	str	r3, [sp]
    9500:	str	r7, [sp, #8]
    9504:	mov	r3, #106	; 0x6a
    9508:	add	r2, pc, r2
    950c:	mov	r1, #0
    9510:	mov	r0, #6
    9514:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9518:	mov	sl, #0
    951c:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    9520:	cmp	r3, #2
    9524:	ble	8d9c <blkid_probe_get_size@plt+0x1884>
    9528:	ldr	r3, [pc, #912]	; 98c0 <blkid_probe_get_size@plt+0x23a8>
    952c:	ldr	r2, [pc, #912]	; 98c4 <blkid_probe_get_size@plt+0x23ac>
    9530:	add	r3, pc, r3
    9534:	add	r2, pc, r2
    9538:	str	r2, [sp, #4]
    953c:	add	r3, r3, #2176	; 0x880
    9540:	ldr	r2, [pc, #896]	; 98c8 <blkid_probe_get_size@plt+0x23b0>
    9544:	add	r3, r3, #4
    9548:	str	r3, [sp]
    954c:	mov	r1, r7
    9550:	mov	r3, #74	; 0x4a
    9554:	add	r2, pc, r2
    9558:	mov	r0, #3
    955c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9560:	mvn	sl, #21
    9564:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    9568:	mov	r6, #1
    956c:	b	9300 <blkid_probe_get_size@plt+0x1de8>
    9570:	bl	69f0 <free@plt>
    9574:	b	90a0 <blkid_probe_get_size@plt+0x1b88>
    9578:	ldr	r2, [pc, #844]	; 98cc <blkid_probe_get_size@plt+0x23b4>
    957c:	ldr	r1, [pc, #844]	; 98d0 <blkid_probe_get_size@plt+0x23b8>
    9580:	add	r2, pc, r2
    9584:	add	r2, r2, #2160	; 0x870
    9588:	add	r2, r2, #4
    958c:	str	r2, [sp]
    9590:	ldr	r2, [pc, #828]	; 98d4 <blkid_probe_get_size@plt+0x23bc>
    9594:	mov	r3, #59	; 0x3b
    9598:	add	r2, pc, r2
    959c:	add	r1, pc, r1
    95a0:	mov	r0, #0
    95a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    95a8:	bl	3ac44 <blkid_probe_get_size@plt+0x3372c>
    95ac:	subs	sl, r0, #0
    95b0:	bge	93e4 <blkid_probe_get_size@plt+0x1ecc>
    95b4:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    95b8:	ldr	r2, [r5]
    95bc:	str	r7, [sp, #160]	; 0xa0
    95c0:	str	r2, [sp, #156]	; 0x9c
    95c4:	add	r1, sp, #156	; 0x9c
    95c8:	mov	r2, r7
    95cc:	mov	r0, #1
    95d0:	blx	r3
    95d4:	mov	sl, r0
    95d8:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    95dc:	bl	71a0 <security_getenforce@plt>
    95e0:	cmp	r0, #1
    95e4:	movne	r5, #7
    95e8:	moveq	r5, #3
    95ec:	bl	732c <__errno_location@plt>
    95f0:	ldr	r3, [sl]
    95f4:	cmp	r5, r3
    95f8:	mov	r1, r0
    95fc:	ble	96a8 <blkid_probe_get_size@plt+0x2190>
    9600:	bl	71a0 <security_getenforce@plt>
    9604:	b	8c74 <blkid_probe_get_size@plt+0x175c>
    9608:	cmp	r0, #0
    960c:	blt	9498 <blkid_probe_get_size@plt+0x1f80>
    9610:	movgt	r3, #1
    9614:	movle	r3, #0
    9618:	b	94b0 <blkid_probe_get_size@plt+0x1f98>
    961c:	ldr	r3, [pc, #692]	; 98d8 <blkid_probe_get_size@plt+0x23c0>
    9620:	add	r3, pc, r3
    9624:	ldr	r3, [r3]
    9628:	cmp	r3, #6
    962c:	ble	94a4 <blkid_probe_get_size@plt+0x1f8c>
    9630:	ldr	r3, [pc, #676]	; 98dc <blkid_probe_get_size@plt+0x23c4>
    9634:	ldr	r2, [pc, #676]	; 98e0 <blkid_probe_get_size@plt+0x23c8>
    9638:	add	r3, pc, r3
    963c:	add	r2, pc, r2
    9640:	str	r2, [sp, #4]
    9644:	add	r3, r3, #2192	; 0x890
    9648:	ldr	r2, [pc, #660]	; 98e4 <blkid_probe_get_size@plt+0x23cc>
    964c:	add	r3, r3, #4
    9650:	str	r3, [sp]
    9654:	add	r2, pc, r2
    9658:	mov	r3, #44	; 0x2c
    965c:	mov	r1, r9
    9660:	mov	r0, #7
    9664:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9668:	b	94a4 <blkid_probe_get_size@plt+0x1f8c>
    966c:	ldr	r3, [pc, #628]	; 98e8 <blkid_probe_get_size@plt+0x23d0>
    9670:	ldr	r2, [pc, #628]	; 98ec <blkid_probe_get_size@plt+0x23d4>
    9674:	add	r3, pc, r3
    9678:	add	r2, pc, r2
    967c:	str	r2, [sp, #4]
    9680:	add	r3, r3, #2192	; 0x890
    9684:	ldr	r2, [pc, #612]	; 98f0 <blkid_probe_get_size@plt+0x23d8>
    9688:	add	r3, r3, #4
    968c:	mov	r1, r0
    9690:	str	r3, [sp]
    9694:	add	r2, pc, r2
    9698:	mov	r3, #30
    969c:	mov	r0, #7
    96a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    96a4:	b	9498 <blkid_probe_get_size@plt+0x1f80>
    96a8:	ldr	r2, [pc, #580]	; 98f4 <blkid_probe_get_size@plt+0x23dc>
    96ac:	ldr	r3, [pc, #580]	; 98f8 <blkid_probe_get_size@plt+0x23e0>
    96b0:	add	r2, pc, r2
    96b4:	str	r2, [sp, #4]
    96b8:	add	r3, pc, r3
    96bc:	ldr	r2, [pc, #568]	; 98fc <blkid_probe_get_size@plt+0x23e4>
    96c0:	add	r3, r3, #2144	; 0x860
    96c4:	str	r3, [sp]
    96c8:	mov	r0, r5
    96cc:	mov	r3, #77	; 0x4d
    96d0:	ldr	r1, [r1]
    96d4:	add	r2, pc, r2
    96d8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    96dc:	b	9600 <blkid_probe_get_size@plt+0x20e8>
    96e0:	cmp	r3, #5
    96e4:	movle	sl, r7
    96e8:	ble	8da0 <blkid_probe_get_size@plt+0x1888>
    96ec:	ldr	r3, [pc, #524]	; 9900 <blkid_probe_get_size@plt+0x23e8>
    96f0:	ldr	r2, [pc, #524]	; 9904 <blkid_probe_get_size@plt+0x23ec>
    96f4:	add	r3, pc, r3
    96f8:	add	r2, pc, r2
    96fc:	str	r2, [sp, #4]
    9700:	add	r3, r3, #2176	; 0x880
    9704:	ldr	r2, [pc, #508]	; 9908 <blkid_probe_get_size@plt+0x23f0>
    9708:	add	r3, r3, #4
    970c:	str	r3, [sp]
    9710:	add	r2, pc, r2
    9714:	mov	r3, #108	; 0x6c
    9718:	mov	r1, r7
    971c:	mov	r0, #6
    9720:	mov	sl, r7
    9724:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9728:	b	8da0 <blkid_probe_get_size@plt+0x1888>
    972c:	ldr	r2, [pc, #472]	; 990c <blkid_probe_get_size@plt+0x23f4>
    9730:	ldr	r1, [pc, #472]	; 9910 <blkid_probe_get_size@plt+0x23f8>
    9734:	add	r2, pc, r2
    9738:	add	r2, r2, #2128	; 0x850
    973c:	add	r2, r2, #4
    9740:	str	r2, [sp]
    9744:	ldr	r2, [pc, #456]	; 9914 <blkid_probe_get_size@plt+0x23fc>
    9748:	mov	r3, #78	; 0x4e
    974c:	add	r2, pc, r2
    9750:	add	r1, pc, r1
    9754:	mov	r0, #1
    9758:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    975c:	bl	6fb4 <__stack_chk_fail@plt>
    9760:	andeq	pc, r8, r4, lsr #2
    9764:	andeq	r0, r0, ip, lsr r4
    9768:	ldrdeq	r0, [r6], -r4
    976c:	andeq	r0, r6, r8, lsr #9
    9770:	ldrdeq	r0, [r6], -r0	; <UNPREDICTABLE>
    9774:	muleq	r6, r4, r4
    9778:	andeq	r0, r6, ip, lsr #8
    977c:	andeq	r0, r6, r4, lsr r4
    9780:	andeq	r0, r6, r8, lsl #9
    9784:			; <UNDEFINED> instruction: 0x000604bc
    9788:	ldrdeq	r0, [r6], -r4
    978c:	andeq	r0, r9, ip, lsr #5
    9790:	ldrdeq	r0, [r6], -ip
    9794:	andeq	r0, r9, r9, ror r2
    9798:	andeq	r0, r8, ip, lsl r4
    979c:	andeq	r0, r6, ip, asr #9
    97a0:	andeq	pc, r8, r8, ror #9
    97a4:	andeq	r0, r9, r8, ror #3
    97a8:	andeq	r0, r0, r0, asr #8
    97ac:	andeq	r0, r8, r0, lsl #7
    97b0:	andeq	pc, r8, ip, asr #8
    97b4:	andeq	fp, r5, r8, asr #17
    97b8:	andeq	r0, r6, r0, asr r3
    97bc:	muleq	r6, ip, r2
    97c0:	andeq	r0, r0, sp, asr r4
    97c4:	strdeq	pc, [r8], -r8
    97c8:	andeq	fp, r5, r4, ror r8
    97cc:	strdeq	r0, [r6], -ip
    97d0:	andeq	r0, r6, r8, asr #4
    97d4:	andeq	r0, r0, r9, asr r4
    97d8:	andeq	r0, r0, r4, ror #8
    97dc:	andeq	r0, r0, ip, ror #8
    97e0:	andeq	pc, r8, r4, lsl #8
    97e4:	ldrdeq	pc, [r8], -r4
    97e8:	andeq	r0, r9, r0
    97ec:	andeq	r0, r9, r4, lsl r0
    97f0:	andeq	r0, r0, r4, ror r4
    97f4:	andeq	pc, r8, r0, ror #6
    97f8:	andeq	pc, r8, r8, ror #2
    97fc:	andeq	pc, r8, r4, asr #2
    9800:	andeq	r0, r0, ip, asr r4
    9804:	andeq	pc, r8, r4, lsl #6
    9808:	andeq	pc, r8, r8, lsl #2
    980c:	andeq	pc, r8, r8, ror pc	; <UNPREDICTABLE>
    9810:	ldrdeq	pc, [r8], -r4
    9814:	andeq	pc, r8, r8, lsl #3
    9818:	andeq	pc, r5, r0, lsr #31
    981c:	strdeq	fp, [r5], -ip
    9820:	andeq	pc, r5, r4, ror #30
    9824:	andeq	ip, r5, r8, lsl r4
    9828:	andeq	pc, r8, ip, lsl #1
    982c:	andeq	fp, r5, r8, lsl #10
    9830:	andeq	pc, r5, r0, lsl pc	; <UNPREDICTABLE>
    9834:	ldrdeq	pc, [r5], -ip
    9838:	andeq	r0, r0, r1, asr r4
    983c:	andeq	pc, r8, r8, lsr r0	; <UNPREDICTABLE>
    9840:			; <UNDEFINED> instruction: 0x0005b4b4
    9844:	strdeq	pc, [r5], -ip
    9848:	andeq	pc, r5, r8, lsl #29
    984c:	andeq	r0, r0, r5, asr r4
    9850:	andeq	lr, r8, r4, ror #30
    9854:			; <UNDEFINED> instruction: 0x0005b3b0
    9858:	andeq	pc, r5, r0, asr #29
    985c:	strdeq	lr, [r5], -r0
    9860:	andeq	lr, r8, r0, lsr #29
    9864:	andeq	fp, r5, r8, lsl r3
    9868:	andeq	pc, r5, r8, lsr #29
    986c:	andeq	pc, r5, ip, asr lr	; <UNPREDICTABLE>
    9870:	andeq	lr, r8, r4, lsr #28
    9874:	andeq	fp, r5, r0, lsr #5
    9878:	andeq	pc, r5, r8, ror #28
    987c:	strdeq	pc, [r5], -r0
    9880:			; <UNDEFINED> instruction: 0x0008edbc
    9884:	andeq	fp, r5, r8, lsr r2
    9888:	andeq	pc, r5, r4, lsl lr	; <UNPREDICTABLE>
    988c:	andeq	pc, r5, r8, lsl #27
    9890:	andeq	fp, r5, r0, asr #3
    9894:	andeq	pc, r5, r0, ror ip	; <UNPREDICTABLE>
    9898:	andeq	sp, r5, r4, asr #14
    989c:	muleq	r5, r0, r1
    98a0:	andeq	pc, r5, ip, asr #24
    98a4:	andeq	sp, r5, r4, lsl r7
    98a8:	andeq	pc, r5, r8, asr sp	; <UNPREDICTABLE>
    98ac:			; <UNDEFINED> instruction: 0x0008ecb4
    98b0:	andeq	lr, r8, r8, ror ip
    98b4:	andeq	fp, r5, ip, ror #1
    98b8:	andeq	pc, r5, ip, lsr #26
    98bc:	andeq	pc, r5, r4, lsr ip	; <UNPREDICTABLE>
    98c0:	andeq	fp, r5, r0, lsr #1
    98c4:	andeq	pc, r5, r8, asr #24
    98c8:	andeq	pc, r5, r8, ror #23
    98cc:	andeq	fp, r5, r0, asr r0
    98d0:			; <UNDEFINED> instruction: 0x0005fbb8
    98d4:	andeq	pc, r5, r4, lsr #23
    98d8:	andeq	lr, r8, ip, lsl fp
    98dc:	muleq	r5, r8, pc	; <UNPREDICTABLE>
    98e0:	andeq	pc, r5, r0, asr #23
    98e4:	andeq	pc, r5, r8, ror #21
    98e8:	andeq	sl, r5, ip, asr pc
    98ec:	andeq	pc, r5, ip, asr fp	; <UNPREDICTABLE>
    98f0:	andeq	pc, r5, r8, lsr #21
    98f4:	andeq	pc, r5, ip, lsl sl	; <UNPREDICTABLE>
    98f8:	andeq	sl, r5, r8, lsl pc
    98fc:	andeq	lr, r5, r8, ror #12
    9900:	ldrdeq	sl, [r5], -ip
    9904:	andeq	ip, r5, ip, lsl #7
    9908:	andeq	pc, r5, ip, lsr #20
    990c:	muleq	r5, ip, lr
    9910:	andeq	pc, r5, r0, ror #18
    9914:	andeq	sp, r5, r0, lsr #8
    9918:	mov	fp, #0
    991c:	mov	lr, #0
    9920:	pop	{r1}		; (ldr r1, [sp], #4)
    9924:	mov	r2, sp
    9928:	push	{r2}		; (str r2, [sp, #-4]!)
    992c:	push	{r0}		; (str r0, [sp, #-4]!)
    9930:	ldr	sl, [pc, #40]	; 9960 <blkid_probe_get_size@plt+0x2448>
    9934:	add	r3, pc, #36	; 0x24
    9938:	add	sl, sl, r3
    993c:	ldr	ip, [pc, #32]	; 9964 <blkid_probe_get_size@plt+0x244c>
    9940:	ldr	ip, [sl, ip]
    9944:	push	{ip}		; (str ip, [sp, #-4]!)
    9948:	ldr	r3, [pc, #24]	; 9968 <blkid_probe_get_size@plt+0x2450>
    994c:	ldr	r3, [sl, r3]
    9950:	ldr	r0, [pc, #20]	; 996c <blkid_probe_get_size@plt+0x2454>
    9954:	ldr	r0, [sl, r0]
    9958:	bl	7470 <__libc_start_main@plt>
    995c:	bl	6d98 <abort@plt>
    9960:	andeq	lr, r8, r0, lsl r2
    9964:	andeq	r0, r0, ip, ror r4
    9968:	andeq	r0, r0, r0, ror r4
    996c:	andeq	r0, r0, r4, asr #8
    9970:	ldr	r3, [pc, #20]	; 998c <blkid_probe_get_size@plt+0x2474>
    9974:	ldr	r2, [pc, #20]	; 9990 <blkid_probe_get_size@plt+0x2478>
    9978:	add	r3, pc, r3
    997c:	ldr	r2, [r3, r2]
    9980:	cmp	r2, #0
    9984:	bxeq	lr
    9988:	b	747c <__gmon_start__@plt>
    998c:	strdeq	lr, [r8], -r0
    9990:	andeq	r0, r0, r4, lsl #9
    9994:	ldr	r0, [pc, #44]	; 99c8 <blkid_probe_get_size@plt+0x24b0>
    9998:	ldr	r3, [pc, #44]	; 99cc <blkid_probe_get_size@plt+0x24b4>
    999c:	add	r0, pc, r0
    99a0:	add	r3, pc, r3
    99a4:	cmp	r3, r0
    99a8:	ldr	r3, [pc, #32]	; 99d0 <blkid_probe_get_size@plt+0x24b8>
    99ac:	add	r3, pc, r3
    99b0:	bxeq	lr
    99b4:	ldr	r2, [pc, #24]	; 99d4 <blkid_probe_get_size@plt+0x24bc>
    99b8:	ldr	r3, [r3, r2]
    99bc:	cmp	r3, #0
    99c0:	bxeq	lr
    99c4:	bx	r3
    99c8:	andeq	lr, r8, r4, asr #16
    99cc:	andeq	lr, r8, r0, asr #16
    99d0:			; <UNDEFINED> instruction: 0x0008e1bc
    99d4:	andeq	r0, r0, r8, ror r4
    99d8:	ldr	r0, [pc, #56]	; 9a18 <blkid_probe_get_size@plt+0x2500>
    99dc:	ldr	r3, [pc, #56]	; 9a1c <blkid_probe_get_size@plt+0x2504>
    99e0:	add	r0, pc, r0
    99e4:	add	r3, pc, r3
    99e8:	sub	r1, r3, r0
    99ec:	ldr	r3, [pc, #44]	; 9a20 <blkid_probe_get_size@plt+0x2508>
    99f0:	asr	r1, r1, #2
    99f4:	add	r3, pc, r3
    99f8:	add	r1, r1, r1, lsr #31
    99fc:	asrs	r1, r1, #1
    9a00:	bxeq	lr
    9a04:	ldr	r2, [pc, #24]	; 9a24 <blkid_probe_get_size@plt+0x250c>
    9a08:	ldr	r3, [r3, r2]
    9a0c:	cmp	r3, #0
    9a10:	bxeq	lr
    9a14:	bx	r3
    9a18:	andeq	lr, r8, r0, lsl #16
    9a1c:	strdeq	lr, [r8], -ip
    9a20:	andeq	lr, r8, r4, ror r1
    9a24:	andeq	r0, r0, r8, lsl #9
    9a28:	ldr	r3, [pc, #76]	; 9a7c <blkid_probe_get_size@plt+0x2564>
    9a2c:	ldr	r2, [pc, #76]	; 9a80 <blkid_probe_get_size@plt+0x2568>
    9a30:	add	r3, pc, r3
    9a34:	add	r2, pc, r2
    9a38:	ldrb	r3, [r3]
    9a3c:	cmp	r3, #0
    9a40:	bxne	lr
    9a44:	ldr	r3, [pc, #56]	; 9a84 <blkid_probe_get_size@plt+0x256c>
    9a48:	push	{r4, lr}
    9a4c:	ldr	r3, [r2, r3]
    9a50:	cmp	r3, #0
    9a54:	beq	9a64 <blkid_probe_get_size@plt+0x254c>
    9a58:	ldr	r3, [pc, #40]	; 9a88 <blkid_probe_get_size@plt+0x2570>
    9a5c:	ldr	r0, [pc, r3]
    9a60:	bl	74d0 <__cxa_finalize@plt>
    9a64:	bl	9994 <blkid_probe_get_size@plt+0x247c>
    9a68:	ldr	r3, [pc, #28]	; 9a8c <blkid_probe_get_size@plt+0x2574>
    9a6c:	mov	r2, #1
    9a70:	add	r3, pc, r3
    9a74:	strb	r2, [r3]
    9a78:	pop	{r4, pc}
    9a7c:			; <UNDEFINED> instruction: 0x0008e7b0
    9a80:	andeq	lr, r8, r4, lsr r1
    9a84:	andeq	r0, r0, ip, lsl #9
    9a88:	muleq	r8, ip, r5
    9a8c:	andeq	lr, r8, r0, ror r7
    9a90:	b	99d8 <blkid_probe_get_size@plt+0x24c0>
    9a94:	andeq	r0, r0, r0
    9a98:	push	{r4, lr}
    9a9c:	mov	r1, #123	; 0x7b
    9aa0:	sub	sp, sp, #8
    9aa4:	bl	74c4 <strchr@plt>
    9aa8:	subs	r4, r0, #0
    9aac:	beq	9ad0 <blkid_probe_get_size@plt+0x25b8>
    9ab0:	add	r4, r4, #1
    9ab4:	mov	r1, #125	; 0x7d
    9ab8:	mov	r0, r4
    9abc:	bl	74c4 <strchr@plt>
    9ac0:	subs	r1, r0, #0
    9ac4:	movne	r3, #0
    9ac8:	strbne	r3, [r1]
    9acc:	beq	9adc <blkid_probe_get_size@plt+0x25c4>
    9ad0:	mov	r0, r4
    9ad4:	add	sp, sp, #8
    9ad8:	pop	{r4, pc}
    9adc:	ldr	r3, [pc, #68]	; 9b28 <blkid_probe_get_size@plt+0x2610>
    9ae0:	add	r3, pc, r3
    9ae4:	ldr	r3, [r3, #4]
    9ae8:	cmp	r3, #2
    9aec:	movle	r4, r1
    9af0:	ble	9ad0 <blkid_probe_get_size@plt+0x25b8>
    9af4:	ldr	r2, [pc, #48]	; 9b2c <blkid_probe_get_size@plt+0x2614>
    9af8:	ldr	r3, [pc, #48]	; 9b30 <blkid_probe_get_size@plt+0x2618>
    9afc:	add	r2, pc, r2
    9b00:	str	r2, [sp, #4]
    9b04:	ldr	r2, [pc, #40]	; 9b34 <blkid_probe_get_size@plt+0x261c>
    9b08:	add	r3, pc, r3
    9b0c:	str	r3, [sp]
    9b10:	add	r2, pc, r2
    9b14:	ldr	r3, [pc, #28]	; 9b38 <blkid_probe_get_size@plt+0x2620>
    9b18:	ldr	r0, [pc, #28]	; 9b3c <blkid_probe_get_size@plt+0x2624>
    9b1c:	mov	r4, r1
    9b20:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    9b24:	b	9ad0 <blkid_probe_get_size@plt+0x25b8>
    9b28:	andeq	lr, r8, ip, asr r6
    9b2c:	andeq	fp, r5, r4, lsr #7
    9b30:	andeq	sl, r5, r8, asr #21
    9b34:	andeq	fp, r5, r4, ror r3
    9b38:	andeq	r0, r0, fp, lsr r3
    9b3c:	andeq	r0, r0, r3, lsl #8
    9b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9b44:	sub	sp, sp, #20
    9b48:	ldr	ip, [r0, #784]	; 0x310
    9b4c:	add	r8, r0, #16
    9b50:	cmp	ip, #63	; 0x3f
    9b54:	add	ip, ip, ip, lsl #1
    9b58:	ldr	r9, [sp, #56]	; 0x38
    9b5c:	lsl	r6, ip, #2
    9b60:	add	r4, r8, r6
    9b64:	bhi	9f58 <blkid_probe_get_size@plt+0x2a40>
    9b68:	mov	r5, r3
    9b6c:	mov	sl, r2
    9b70:	mov	r3, #0
    9b74:	sub	r2, r1, #2
    9b78:	str	r3, [r8, r6]
    9b7c:	mov	r7, r1
    9b80:	mov	fp, r0
    9b84:	str	r3, [r4, #4]
    9b88:	str	r3, [r4, #8]
    9b8c:	cmp	r2, #50	; 0x32
    9b90:	addls	pc, pc, r2, lsl #2
    9b94:	b	9c6c <blkid_probe_get_size@plt+0x2754>
    9b98:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9b9c:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9ba0:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9ba4:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9ba8:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bac:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9bb0:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bb4:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bb8:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bbc:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bc0:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9bc4:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9bc8:	b	9f2c <blkid_probe_get_size@plt+0x2a14>
    9bcc:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bd0:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bd4:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bd8:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9bdc:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9be0:	b	9f2c <blkid_probe_get_size@plt+0x2a14>
    9be4:	b	9dcc <blkid_probe_get_size@plt+0x28b4>
    9be8:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bec:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bf0:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bf4:	b	9e28 <blkid_probe_get_size@plt+0x2910>
    9bf8:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9bfc:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c00:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c04:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c08:	b	9f2c <blkid_probe_get_size@plt+0x2a14>
    9c0c:	b	9c6c <blkid_probe_get_size@plt+0x2754>
    9c10:	b	9c6c <blkid_probe_get_size@plt+0x2754>
    9c14:	b	9c6c <blkid_probe_get_size@plt+0x2754>
    9c18:	b	9d18 <blkid_probe_get_size@plt+0x2800>
    9c1c:	b	9d18 <blkid_probe_get_size@plt+0x2800>
    9c20:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c24:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c28:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c2c:	b	9c64 <blkid_probe_get_size@plt+0x274c>
    9c30:	b	9c64 <blkid_probe_get_size@plt+0x274c>
    9c34:	b	9c64 <blkid_probe_get_size@plt+0x274c>
    9c38:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c3c:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c40:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9c44:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9c48:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c4c:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c50:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9c54:	b	9d88 <blkid_probe_get_size@plt+0x2870>
    9c58:	b	9e58 <blkid_probe_get_size@plt+0x2940>
    9c5c:	b	9e58 <blkid_probe_get_size@plt+0x2940>
    9c60:	b	9e00 <blkid_probe_get_size@plt+0x28e8>
    9c64:	ldr	r3, [r9]
    9c68:	str	r3, [r4, #8]
    9c6c:	cmp	r5, #0
    9c70:	cmpne	r7, #30
    9c74:	bls	9ce4 <blkid_probe_get_size@plt+0x27cc>
    9c78:	ldrb	r3, [r5]
    9c7c:	cmp	r3, #91	; 0x5b
    9c80:	movne	r9, #0
    9c84:	beq	9e90 <blkid_probe_get_size@plt+0x2978>
    9c88:	mov	r1, #37	; 0x25
    9c8c:	mov	r0, r5
    9c90:	bl	74c4 <strchr@plt>
    9c94:	cmp	r0, #0
    9c98:	beq	9ed8 <blkid_probe_get_size@plt+0x29c0>
    9c9c:	ldrb	r3, [r4, #3]
    9ca0:	bic	r3, r3, #13
    9ca4:	orr	r3, r3, #2
    9ca8:	strb	r3, [r4, #3]
    9cac:	cmp	r9, #0
    9cb0:	beq	9ce4 <blkid_probe_get_size@plt+0x27cc>
    9cb4:	ldrb	r3, [r9]
    9cb8:	cmp	r3, #91	; 0x5b
    9cbc:	beq	9d04 <blkid_probe_get_size@plt+0x27ec>
    9cc0:	mov	r1, #37	; 0x25
    9cc4:	mov	r0, r9
    9cc8:	bl	74c4 <strchr@plt>
    9ccc:	cmp	r0, #0
    9cd0:	beq	9e68 <blkid_probe_get_size@plt+0x2950>
    9cd4:	ldrb	r3, [r4, #3]
    9cd8:	bic	r3, r3, #208	; 0xd0
    9cdc:	orr	r3, r3, #32
    9ce0:	strb	r3, [r4, #3]
    9ce4:	strb	r7, [r8, r6]
    9ce8:	strb	sl, [r4, #1]
    9cec:	ldr	r3, [fp, #784]	; 0x310
    9cf0:	mov	r0, #0
    9cf4:	add	r3, r3, #1
    9cf8:	str	r3, [fp, #784]	; 0x310
    9cfc:	add	sp, sp, #20
    9d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d04:	ldrb	r3, [r4, #3]
    9d08:	bic	r3, r3, #192	; 0xc0
    9d0c:	orr	r3, r3, #48	; 0x30
    9d10:	strb	r3, [r4, #3]
    9d14:	b	9ce4 <blkid_probe_get_size@plt+0x27cc>
    9d18:	ldr	r3, [r9]
    9d1c:	mov	r9, #0
    9d20:	str	r3, [r4, #8]
    9d24:	adds	r3, r5, #0
    9d28:	movne	r3, #1
    9d2c:	cmp	r7, #29
    9d30:	movhi	r2, #0
    9d34:	andls	r2, r3, #1
    9d38:	cmp	r2, #0
    9d3c:	beq	9ea4 <blkid_probe_get_size@plt+0x298c>
    9d40:	mov	r1, #124	; 0x7c
    9d44:	mov	r0, r5
    9d48:	bl	74c4 <strchr@plt>
    9d4c:	ldr	r1, [pc, #524]	; 9f60 <blkid_probe_get_size@plt+0x2a48>
    9d50:	add	r1, pc, r1
    9d54:	str	r0, [sp, #12]
    9d58:	mov	r0, r5
    9d5c:	bl	6e10 <strpbrk@plt>
    9d60:	ldr	r3, [sp, #12]
    9d64:	cmp	r3, #0
    9d68:	cmpne	r0, #0
    9d6c:	movne	r3, #4
    9d70:	bne	9d80 <blkid_probe_get_size@plt+0x2868>
    9d74:	cmp	r3, #0
    9d78:	movne	r3, #3
    9d7c:	beq	9f00 <blkid_probe_get_size@plt+0x29e8>
    9d80:	strb	r3, [r4, #2]
    9d84:	b	9cac <blkid_probe_get_size@plt+0x2794>
    9d88:	mov	r0, r5
    9d8c:	bl	723c <strlen@plt>
    9d90:	ldr	r3, [fp]
    9d94:	mov	r1, r5
    9d98:	mov	r2, r0
    9d9c:	ldr	r0, [r3, #24]
    9da0:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
    9da4:	str	r0, [r4, #4]
    9da8:	mov	r0, r9
    9dac:	bl	723c <strlen@plt>
    9db0:	ldr	r3, [fp]
    9db4:	mov	r1, r9
    9db8:	mov	r2, r0
    9dbc:	ldr	r0, [r3, #24]
    9dc0:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
    9dc4:	str	r0, [r4, #8]
    9dc8:	b	9d24 <blkid_probe_get_size@plt+0x280c>
    9dcc:	mov	r0, r5
    9dd0:	bl	723c <strlen@plt>
    9dd4:	ldr	r3, [fp]
    9dd8:	mov	r1, r5
    9ddc:	mov	r2, r0
    9de0:	ldr	r0, [r3, #24]
    9de4:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
    9de8:	cmp	r9, #0
    9dec:	str	r0, [r4, #4]
    9df0:	ldrne	r3, [r9]
    9df4:	movne	r9, #0
    9df8:	strne	r3, [r4, #8]
    9dfc:	b	9d40 <blkid_probe_get_size@plt+0x2828>
    9e00:	mov	r0, r5
    9e04:	bl	723c <strlen@plt>
    9e08:	ldr	r3, [fp]
    9e0c:	mov	r1, r5
    9e10:	mov	r9, #0
    9e14:	mov	r2, r0
    9e18:	ldr	r0, [r3, #24]
    9e1c:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
    9e20:	str	r0, [r4, #4]
    9e24:	b	9d24 <blkid_probe_get_size@plt+0x280c>
    9e28:	mov	r0, r5
    9e2c:	bl	723c <strlen@plt>
    9e30:	ldr	r3, [fp]
    9e34:	mov	r1, r5
    9e38:	mov	r2, r0
    9e3c:	ldr	r0, [r3, #24]
    9e40:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
    9e44:	str	r0, [r4, #4]
    9e48:	ldr	r3, [r9]
    9e4c:	mov	r9, #0
    9e50:	str	r3, [r4, #8]
    9e54:	b	9d40 <blkid_probe_get_size@plt+0x2828>
    9e58:	ldr	r3, [r9]
    9e5c:	mov	r0, r5
    9e60:	str	r3, [r4, #8]
    9e64:	b	9e04 <blkid_probe_get_size@plt+0x28ec>
    9e68:	mov	r0, r9
    9e6c:	mov	r1, #36	; 0x24
    9e70:	bl	74c4 <strchr@plt>
    9e74:	cmp	r0, #0
    9e78:	bne	9cd4 <blkid_probe_get_size@plt+0x27bc>
    9e7c:	ldrb	r3, [r4, #3]
    9e80:	bic	r3, r3, #224	; 0xe0
    9e84:	orr	r3, r3, #16
    9e88:	strb	r3, [r4, #3]
    9e8c:	b	9ce4 <blkid_probe_get_size@plt+0x27cc>
    9e90:	ldrb	r3, [r4, #3]
    9e94:	bic	r3, r3, #12
    9e98:	orr	r3, r3, #3
    9e9c:	strb	r3, [r4, #3]
    9ea0:	b	9ce4 <blkid_probe_get_size@plt+0x27cc>
    9ea4:	cmp	r7, #30
    9ea8:	movls	r3, #0
    9eac:	andhi	r3, r3, #1
    9eb0:	cmp	r3, #0
    9eb4:	beq	9cac <blkid_probe_get_size@plt+0x2794>
    9eb8:	ldrb	r3, [r5]
    9ebc:	cmp	r3, #91	; 0x5b
    9ec0:	bne	9c88 <blkid_probe_get_size@plt+0x2770>
    9ec4:	ldrb	r3, [r4, #3]
    9ec8:	bic	r3, r3, #12
    9ecc:	orr	r3, r3, #3
    9ed0:	strb	r3, [r4, #3]
    9ed4:	b	9cac <blkid_probe_get_size@plt+0x2794>
    9ed8:	mov	r0, r5
    9edc:	mov	r1, #36	; 0x24
    9ee0:	bl	74c4 <strchr@plt>
    9ee4:	cmp	r0, #0
    9ee8:	bne	9c9c <blkid_probe_get_size@plt+0x2784>
    9eec:	ldrb	r3, [r4, #3]
    9ef0:	bic	r3, r3, #14
    9ef4:	orr	r3, r3, #1
    9ef8:	strb	r3, [r4, #3]
    9efc:	b	9cac <blkid_probe_get_size@plt+0x2794>
    9f00:	cmp	r0, #0
    9f04:	moveq	r3, #1
    9f08:	beq	9d80 <blkid_probe_get_size@plt+0x2868>
    9f0c:	ldr	r1, [pc, #80]	; 9f64 <blkid_probe_get_size@plt+0x2a4c>
    9f10:	mov	r0, r5
    9f14:	add	r1, pc, r1
    9f18:	bl	7314 <strcmp@plt>
    9f1c:	cmp	r0, #0
    9f20:	movne	r3, #2
    9f24:	moveq	r3, #5
    9f28:	b	9d80 <blkid_probe_get_size@plt+0x2868>
    9f2c:	ldr	r2, [pc, #52]	; 9f68 <blkid_probe_get_size@plt+0x2a50>
    9f30:	ldr	r1, [pc, #52]	; 9f6c <blkid_probe_get_size@plt+0x2a54>
    9f34:	add	r2, pc, r2
    9f38:	add	r2, r2, #20
    9f3c:	str	r2, [sp]
    9f40:	ldr	r2, [pc, #40]	; 9f70 <blkid_probe_get_size@plt+0x2a58>
    9f44:	ldr	r3, [pc, #40]	; 9f74 <blkid_probe_get_size@plt+0x2a5c>
    9f48:	add	r2, pc, r2
    9f4c:	add	r1, pc, r1
    9f50:	mov	r0, #1
    9f54:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    9f58:	mvn	r0, #6
    9f5c:	b	9cfc <blkid_probe_get_size@plt+0x27e4>
    9f60:	andeq	fp, r5, r0, lsl #3
    9f64:	andeq	sl, r5, r0, asr #31
    9f68:	muleq	r5, ip, r6
    9f6c:	andeq	sl, r5, r8, ror pc
    9f70:	andeq	sl, r5, ip, lsr pc
    9f74:	muleq	r0, pc, r3	; <UNPREDICTABLE>
    9f78:	push	{r4, r5, r6, lr}
    9f7c:	mov	r5, r1
    9f80:	ldr	r3, [r0, #16]
    9f84:	ldr	r1, [r0, #20]
    9f88:	add	r2, r3, #1
    9f8c:	cmp	r2, r1
    9f90:	mov	r4, r0
    9f94:	ldr	r0, [r0, #12]
    9f98:	bcc	9fd0 <blkid_probe_get_size@plt+0x2ab8>
    9f9c:	cmp	r1, #8
    9fa0:	movcs	r6, r1
    9fa4:	movcc	r6, #8
    9fa8:	add	r1, r1, r6
    9fac:	mov	r2, #12
    9fb0:	bl	711c <reallocarray@plt>
    9fb4:	cmp	r0, #0
    9fb8:	beq	a008 <blkid_probe_get_size@plt+0x2af0>
    9fbc:	ldr	r2, [r4, #20]
    9fc0:	ldr	r3, [r4, #16]
    9fc4:	add	r2, r2, r6
    9fc8:	str	r0, [r4, #12]
    9fcc:	str	r2, [r4, #20]
    9fd0:	add	r3, r3, r3, lsl #1
    9fd4:	ldr	lr, [r5]
    9fd8:	lsl	r3, r3, #2
    9fdc:	ldr	ip, [r5, #4]
    9fe0:	ldr	r1, [r5, #8]
    9fe4:	add	r2, r0, r3
    9fe8:	str	lr, [r0, r3]
    9fec:	str	ip, [r2, #4]
    9ff0:	str	r1, [r2, #8]
    9ff4:	ldr	r3, [r4, #16]
    9ff8:	mov	r0, #0
    9ffc:	add	r3, r3, #1
    a000:	str	r3, [r4, #16]
    a004:	pop	{r4, r5, r6, pc}
    a008:	mvn	r0, #0
    a00c:	pop	{r4, r5, r6, pc}
    a010:	push	{r4, r5, r6, lr}
    a014:	mov	r6, r1
    a018:	mov	r5, r2
    a01c:	bl	74e8 <strdup@plt>
    a020:	subs	r4, r0, #0
    a024:	beq	a044 <blkid_probe_get_size@plt+0x2b2c>
    a028:	mov	r1, #61	; 0x3d
    a02c:	bl	74c4 <strchr@plt>
    a030:	str	r4, [r6]
    a034:	cmp	r0, #0
    a038:	movne	r3, #0
    a03c:	strbne	r3, [r0], #1
    a040:	str	r0, [r5]
    a044:	mov	r0, r4
    a048:	pop	{r4, r5, r6, pc}
    a04c:	ldr	r3, [pc, #308]	; a188 <blkid_probe_get_size@plt+0x2c70>
    a050:	ldr	r2, [pc, #308]	; a18c <blkid_probe_get_size@plt+0x2c74>
    a054:	add	r3, pc, r3
    a058:	push	{r4, r5, r6, lr}
    a05c:	sub	sp, sp, #96	; 0x60
    a060:	ldr	r4, [r3, r2]
    a064:	mov	r5, r1
    a068:	add	r1, sp, #20
    a06c:	ldr	r3, [r4]
    a070:	mov	r6, r0
    a074:	str	r3, [sp, #92]	; 0x5c
    a078:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
    a07c:	cmp	r0, #0
    a080:	blt	a134 <blkid_probe_get_size@plt+0x2c1c>
    a084:	mov	r0, r6
    a088:	add	r1, sp, #24
    a08c:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
    a090:	cmp	r0, #0
    a094:	blt	a134 <blkid_probe_get_size@plt+0x2c1c>
    a098:	ldr	r6, [pc, #240]	; a190 <blkid_probe_get_size@plt+0x2c78>
    a09c:	ldr	r0, [sp, #20]
    a0a0:	add	r6, pc, r6
    a0a4:	mov	r1, r6
    a0a8:	bl	7314 <strcmp@plt>
    a0ac:	cmp	r0, #0
    a0b0:	moveq	r1, r6
    a0b4:	bne	a14c <blkid_probe_get_size@plt+0x2c34>
    a0b8:	ldr	ip, [sp, #24]
    a0bc:	ldr	r3, [sp, #28]
    a0c0:	ldr	lr, [pc, #204]	; a194 <blkid_probe_get_size@plt+0x2c7c>
    a0c4:	lsr	r0, ip, #12
    a0c8:	orr	r0, r0, r3, lsl #20
    a0cc:	lsl	r2, ip, #12
    a0d0:	bic	r3, r3, #4080	; 0xff0
    a0d4:	bic	r3, r3, #15
    a0d8:	uxtb	ip, ip
    a0dc:	bic	r0, r0, #255	; 0xff
    a0e0:	orr	r0, r0, ip
    a0e4:	orr	r2, r3, r2, lsr #20
    a0e8:	add	lr, pc, lr
    a0ec:	mov	r3, #56	; 0x38
    a0f0:	add	r6, sp, #36	; 0x24
    a0f4:	str	r1, [sp, #4]
    a0f8:	str	r0, [sp, #12]
    a0fc:	str	r2, [sp, #8]
    a100:	str	lr, [sp]
    a104:	mov	r0, r6
    a108:	mov	r1, r3
    a10c:	mov	r2, #1
    a110:	bl	7260 <__snprintf_chk@plt>
    a114:	cmp	r0, #55	; 0x37
    a118:	bhi	a158 <blkid_probe_get_size@plt+0x2c40>
    a11c:	mov	r0, r6
    a120:	bl	74e8 <strdup@plt>
    a124:	cmp	r0, #0
    a128:	strne	r0, [r5]
    a12c:	mvneq	r0, #11
    a130:	movne	r0, #0
    a134:	ldr	r2, [sp, #92]	; 0x5c
    a138:	ldr	r3, [r4]
    a13c:	cmp	r2, r3
    a140:	bne	a184 <blkid_probe_get_size@plt+0x2c6c>
    a144:	add	sp, sp, #96	; 0x60
    a148:	pop	{r4, r5, r6, pc}
    a14c:	ldr	r1, [pc, #68]	; a198 <blkid_probe_get_size@plt+0x2c80>
    a150:	add	r1, pc, r1
    a154:	b	a0b8 <blkid_probe_get_size@plt+0x2ba0>
    a158:	ldr	r2, [pc, #60]	; a19c <blkid_probe_get_size@plt+0x2c84>
    a15c:	ldr	r1, [pc, #60]	; a1a0 <blkid_probe_get_size@plt+0x2c88>
    a160:	add	r2, pc, r2
    a164:	add	r2, r2, #36	; 0x24
    a168:	str	r2, [sp]
    a16c:	ldr	r2, [pc, #48]	; a1a4 <blkid_probe_get_size@plt+0x2c8c>
    a170:	ldr	r3, [pc, #48]	; a1a8 <blkid_probe_get_size@plt+0x2c90>
    a174:	add	r2, pc, r2
    a178:	add	r1, pc, r1
    a17c:	mov	r0, #1
    a180:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    a184:	bl	6fb4 <__stack_chk_fail@plt>
    a188:	andeq	sp, r8, r4, lsl fp
    a18c:	andeq	r0, r0, ip, lsr r4
    a190:	andeq	sl, r5, r8, lsr lr
    a194:	andeq	sl, r5, r0, lsl #28
    a198:	muleq	r5, r0, sp
    a19c:	andeq	sl, r5, r0, ror r4
    a1a0:	muleq	r5, r8, sp
    a1a4:	andeq	sl, r5, r4, lsl #27
    a1a8:	andeq	r0, r0, r9, ror r1
    a1ac:	ldr	r3, [pc, #2360]	; aaec <blkid_probe_get_size@plt+0x35d4>
    a1b0:	ldr	ip, [pc, #2360]	; aaf0 <blkid_probe_get_size@plt+0x35d8>
    a1b4:	add	r3, pc, r3
    a1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a1bc:	add	fp, sp, #32
    a1c0:	sub	sp, sp, #188	; 0xbc
    a1c4:	ldr	r7, [r3, ip]
    a1c8:	mov	r5, r2
    a1cc:	mov	r4, #0
    a1d0:	ldr	r2, [r7]
    a1d4:	subs	r6, r0, #0
    a1d8:	str	r4, [fp, #-168]	; 0xffffff58
    a1dc:	str	r2, [fp, #-40]	; 0xffffffd8
    a1e0:	beq	a674 <blkid_probe_get_size@plt+0x315c>
    a1e4:	cmp	r1, #0
    a1e8:	mov	r9, r1
    a1ec:	beq	a6a0 <blkid_probe_get_size@plt+0x3188>
    a1f0:	cmp	r5, #0
    a1f4:	beq	a6cc <blkid_probe_get_size@plt+0x31b4>
    a1f8:	mov	r0, r5
    a1fc:	bl	3fa14 <blkid_probe_get_size@plt+0x384fc>
    a200:	subs	r8, r0, #0
    a204:	beq	a64c <blkid_probe_get_size@plt+0x3134>
    a208:	sub	r2, fp, #168	; 0xa8
    a20c:	mov	r1, r9
    a210:	bl	402bc <blkid_probe_get_size@plt+0x38da4>
    a214:	subs	sl, r0, #0
    a218:	bge	a2b4 <blkid_probe_get_size@plt+0x2d9c>
    a21c:	ldr	r3, [pc, #2256]	; aaf4 <blkid_probe_get_size@plt+0x35dc>
    a220:	str	r4, [fp, #-156]	; 0xffffff64
    a224:	add	r3, pc, r3
    a228:	ldr	r3, [r3, #4]
    a22c:	cmp	r3, #2
    a230:	bgt	a834 <blkid_probe_get_size@plt+0x331c>
    a234:	mov	r1, r4
    a238:	ldr	r2, [pc, #2232]	; aaf8 <blkid_probe_get_size@plt+0x35e0>
    a23c:	ldr	r3, [pc, #2232]	; aafc <blkid_probe_get_size@plt+0x35e4>
    a240:	add	r2, pc, r2
    a244:	str	r2, [sp, #20]
    a248:	add	r3, pc, r3
    a24c:	ldr	r2, [pc, #2220]	; ab00 <blkid_probe_get_size@plt+0x35e8>
    a250:	mov	r0, #0
    a254:	add	r3, r3, #92	; 0x5c
    a258:	stmib	sp, {r1, r4}
    a25c:	str	r3, [sp]
    a260:	str	r0, [sp, #16]
    a264:	str	r0, [sp, #12]
    a268:	str	r9, [sp, #28]
    a26c:	str	r5, [sp, #24]
    a270:	mov	r1, sl
    a274:	mov	r3, #47	; 0x2f
    a278:	add	r2, pc, r2
    a27c:	mov	r0, #3
    a280:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a284:	mov	r4, r0
    a288:	ldr	r0, [fp, #-168]	; 0xffffff58
    a28c:	bl	69f0 <free@plt>
    a290:	mov	r0, r8
    a294:	bl	69f0 <free@plt>
    a298:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a29c:	ldr	r3, [r7]
    a2a0:	mov	r0, r4
    a2a4:	cmp	r2, r3
    a2a8:	bne	aac4 <blkid_probe_get_size@plt+0x35ac>
    a2ac:	sub	sp, fp, #32
    a2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a2b4:	sub	r2, fp, #156	; 0x9c
    a2b8:	mov	r1, r5
    a2bc:	mov	r0, #3
    a2c0:	bl	7368 <__lxstat64@plt>
    a2c4:	cmp	r0, #0
    a2c8:	bne	a4e4 <blkid_probe_get_size@plt+0x2fcc>
    a2cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    a2d0:	and	r2, r3, #45056	; 0xb000
    a2d4:	cmp	r2, #8192	; 0x2000
    a2d8:	and	r3, r3, #61440	; 0xf000
    a2dc:	beq	a9e8 <blkid_probe_get_size@plt+0x34d0>
    a2e0:	cmp	r3, #40960	; 0xa000
    a2e4:	beq	a858 <blkid_probe_get_size@plt+0x3340>
    a2e8:	ldr	r3, [pc, #2068]	; ab04 <blkid_probe_get_size@plt+0x35ec>
    a2ec:	sub	sl, fp, #164	; 0xa4
    a2f0:	add	r3, pc, r3
    a2f4:	ldr	r3, [r3, #4]
    a2f8:	mov	r2, #0
    a2fc:	cmp	r3, #6
    a300:	str	r2, [fp, #-160]	; 0xffffff60
    a304:	bgt	a934 <blkid_probe_get_size@plt+0x341c>
    a308:	mov	r0, r2
    a30c:	ldr	r3, [pc, #2036]	; ab08 <blkid_probe_get_size@plt+0x35f0>
    a310:	ldr	r1, [pc, #2036]	; ab0c <blkid_probe_get_size@plt+0x35f4>
    a314:	stmib	sp, {r0, r2}
    a318:	add	r3, pc, r3
    a31c:	ldr	r2, [pc, #2028]	; ab10 <blkid_probe_get_size@plt+0x35f8>
    a320:	mov	r9, #0
    a324:	add	r1, pc, r1
    a328:	add	r3, r3, #92	; 0x5c
    a32c:	str	r3, [sp]
    a330:	str	r1, [sp, #20]
    a334:	mov	r3, #82	; 0x52
    a338:	mov	r1, r9
    a33c:	add	r2, pc, r2
    a340:	str	r5, [sp, #24]
    a344:	str	r9, [sp, #16]
    a348:	str	r9, [sp, #12]
    a34c:	mov	r0, #7
    a350:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a354:	mov	r1, sl
    a358:	mov	r0, r6
    a35c:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
    a360:	subs	r4, r0, #0
    a364:	blt	a6f8 <blkid_probe_get_size@plt+0x31e0>
    a368:	ldr	r3, [pc, #1956]	; ab14 <blkid_probe_get_size@plt+0x35fc>
    a36c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a370:	mov	r4, r9
    a374:	mov	r0, r5
    a378:	sub	sl, fp, #52	; 0x34
    a37c:	add	r3, pc, r3
    a380:	str	r5, [fp, #-52]	; 0xffffffcc
    a384:	str	r3, [fp, #-48]	; 0xffffffd0
    a388:	str	r2, [fp, #-44]	; 0xffffffd4
    a38c:	bl	723c <strlen@plt>
    a390:	add	r9, r9, #1
    a394:	cmp	r9, #3
    a398:	add	r4, r4, r0
    a39c:	beq	a3ac <blkid_probe_get_size@plt+0x2e94>
    a3a0:	ldr	r0, [sl, r9, lsl #2]
    a3a4:	cmp	r0, #0
    a3a8:	bne	a38c <blkid_probe_get_size@plt+0x2e74>
    a3ac:	add	r3, r4, #1
    a3b0:	cmp	r3, #4194304	; 0x400000
    a3b4:	bhi	a998 <blkid_probe_get_size@plt+0x3480>
    a3b8:	add	r4, r4, #15
    a3bc:	bic	r4, r4, #7
    a3c0:	sub	sp, sp, r4
    a3c4:	add	r9, sp, #40	; 0x28
    a3c8:	mov	r0, r9
    a3cc:	mov	r1, r5
    a3d0:	mov	r4, #0
    a3d4:	sub	sl, fp, #52	; 0x34
    a3d8:	add	r4, r4, #1
    a3dc:	bl	6ae0 <stpcpy@plt>
    a3e0:	cmp	r4, #3
    a3e4:	beq	a3f4 <blkid_probe_get_size@plt+0x2edc>
    a3e8:	ldr	r1, [sl, r4, lsl #2]
    a3ec:	cmp	r1, #0
    a3f0:	bne	a3d8 <blkid_probe_get_size@plt+0x2ec0>
    a3f4:	ldr	sl, [pc, #1820]	; ab18 <blkid_probe_get_size@plt+0x3600>
    a3f8:	mov	r0, r9
    a3fc:	bl	6e28 <unlink@plt>
    a400:	add	sl, pc, sl
    a404:	b	a440 <blkid_probe_get_size@plt+0x2f28>
    a408:	mov	r1, #40960	; 0xa000
    a40c:	mov	r0, r9
    a410:	bl	40bf4 <blkid_probe_get_size@plt+0x396dc>
    a414:	mov	r1, r9
    a418:	ldr	r0, [fp, #-168]	; 0xffffff58
    a41c:	bl	70e0 <symlink@plt>
    a420:	cmp	r0, #0
    a424:	bge	a434 <blkid_probe_get_size@plt+0x2f1c>
    a428:	bl	732c <__errno_location@plt>
    a42c:	ldr	r4, [r0]
    a430:	rsb	r4, r4, #0
    a434:	bl	399d0 <blkid_probe_get_size@plt+0x324b8>
    a438:	cmn	r4, #2
    a43c:	bne	a460 <blkid_probe_get_size@plt+0x2f48>
    a440:	mov	r1, sl
    a444:	mov	r0, r9
    a448:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
    a44c:	cmn	r0, #2
    a450:	mov	r4, r0
    a454:	beq	a408 <blkid_probe_get_size@plt+0x2ef0>
    a458:	cmp	r0, #0
    a45c:	beq	a408 <blkid_probe_get_size@plt+0x2ef0>
    a460:	cmp	r4, #0
    a464:	bge	a794 <blkid_probe_get_size@plt+0x327c>
    a468:	ldr	r3, [pc, #1708]	; ab1c <blkid_probe_get_size@plt+0x3604>
    a46c:	mov	r2, #0
    a470:	add	r3, pc, r3
    a474:	str	r2, [fp, #-160]	; 0xffffff60
    a478:	ldr	r3, [r3, #4]
    a47c:	cmp	r3, #2
    a480:	bgt	a770 <blkid_probe_get_size@plt+0x3258>
    a484:	mov	r1, r2
    a488:	str	r2, [sp, #8]
    a48c:	ldr	r2, [pc, #1676]	; ab20 <blkid_probe_get_size@plt+0x3608>
    a490:	ldr	r3, [pc, #1676]	; ab24 <blkid_probe_get_size@plt+0x360c>
    a494:	add	r2, pc, r2
    a498:	ldr	ip, [fp, #-168]	; 0xffffff58
    a49c:	str	r2, [sp, #20]
    a4a0:	add	r3, pc, r3
    a4a4:	ldr	r2, [pc, #1660]	; ab28 <blkid_probe_get_size@plt+0x3610>
    a4a8:	mov	r0, #0
    a4ac:	add	r3, r3, #92	; 0x5c
    a4b0:	str	r1, [sp, #4]
    a4b4:	str	r3, [sp]
    a4b8:	mov	r1, r4
    a4bc:	str	r0, [sp, #16]
    a4c0:	str	r0, [sp, #12]
    a4c4:	str	r9, [sp, #24]
    a4c8:	str	ip, [sp, #28]
    a4cc:	mov	r3, #98	; 0x62
    a4d0:	add	r2, pc, r2
    a4d4:	mov	r0, #3
    a4d8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a4dc:	mov	r4, r0
    a4e0:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    a4e4:	ldr	r3, [pc, #1600]	; ab2c <blkid_probe_get_size@plt+0x3614>
    a4e8:	str	r4, [fp, #-160]	; 0xffffff60
    a4ec:	add	r3, pc, r3
    a4f0:	ldr	r3, [r3, #4]
    a4f4:	cmp	r3, #6
    a4f8:	bgt	a974 <blkid_probe_get_size@plt+0x345c>
    a4fc:	mov	r0, r4
    a500:	ldr	r2, [pc, #1576]	; ab30 <blkid_probe_get_size@plt+0x3618>
    a504:	ldr	r3, [pc, #1576]	; ab34 <blkid_probe_get_size@plt+0x361c>
    a508:	add	r2, pc, r2
    a50c:	ldr	ip, [fp, #-168]	; 0xffffff58
    a510:	str	r2, [sp, #20]
    a514:	add	r3, pc, r3
    a518:	ldr	r2, [pc, #1560]	; ab38 <blkid_probe_get_size@plt+0x3620>
    a51c:	mov	r1, #0
    a520:	add	r3, r3, #92	; 0x5c
    a524:	ldr	r9, [pc, #1552]	; ab3c <blkid_probe_get_size@plt+0x3624>
    a528:	str	r0, [sp, #4]
    a52c:	str	r3, [sp]
    a530:	str	r5, [sp, #24]
    a534:	str	r4, [sp, #8]
    a538:	str	ip, [sp, #28]
    a53c:	str	r1, [sp, #16]
    a540:	str	r1, [sp, #12]
    a544:	mov	r3, #66	; 0x42
    a548:	add	r2, pc, r2
    a54c:	mov	r0, #7
    a550:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a554:	add	r9, pc, r9
    a558:	b	a594 <blkid_probe_get_size@plt+0x307c>
    a55c:	mov	r1, #40960	; 0xa000
    a560:	mov	r0, r5
    a564:	bl	40bf4 <blkid_probe_get_size@plt+0x396dc>
    a568:	mov	r1, r5
    a56c:	ldr	r0, [fp, #-168]	; 0xffffff58
    a570:	bl	70e0 <symlink@plt>
    a574:	cmp	r0, #0
    a578:	bge	a588 <blkid_probe_get_size@plt+0x3070>
    a57c:	bl	732c <__errno_location@plt>
    a580:	ldr	r4, [r0]
    a584:	rsb	r4, r4, #0
    a588:	bl	399d0 <blkid_probe_get_size@plt+0x324b8>
    a58c:	cmn	r4, #2
    a590:	bne	a764 <blkid_probe_get_size@plt+0x324c>
    a594:	mov	r1, r9
    a598:	mov	r0, r5
    a59c:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
    a5a0:	cmn	r0, #2
    a5a4:	mov	r4, r0
    a5a8:	beq	a55c <blkid_probe_get_size@plt+0x3044>
    a5ac:	cmp	r0, #0
    a5b0:	beq	a55c <blkid_probe_get_size@plt+0x3044>
    a5b4:	ldr	r3, [pc, #1412]	; ab40 <blkid_probe_get_size@plt+0x3628>
    a5b8:	cmp	r4, #0
    a5bc:	add	r3, pc, r3
    a5c0:	subge	sl, fp, #164	; 0xa4
    a5c4:	ldr	r3, [r3, #4]
    a5c8:	bge	a2f8 <blkid_probe_get_size@plt+0x2de0>
    a5cc:	mov	r2, #0
    a5d0:	cmp	r3, #6
    a5d4:	str	r2, [fp, #-160]	; 0xffffff60
    a5d8:	bgt	aa54 <blkid_probe_get_size@plt+0x353c>
    a5dc:	mov	r1, r2
    a5e0:	str	r2, [sp, #8]
    a5e4:	ldr	r2, [pc, #1368]	; ab44 <blkid_probe_get_size@plt+0x362c>
    a5e8:	ldr	r3, [pc, #1368]	; ab48 <blkid_probe_get_size@plt+0x3630>
    a5ec:	add	r2, pc, r2
    a5f0:	ldr	ip, [fp, #-168]	; 0xffffff58
    a5f4:	str	r2, [sp, #20]
    a5f8:	add	r3, pc, r3
    a5fc:	ldr	r2, [pc, #1352]	; ab4c <blkid_probe_get_size@plt+0x3634>
    a600:	mov	r0, #0
    a604:	add	r3, r3, #92	; 0x5c
    a608:	str	r1, [sp, #4]
    a60c:	str	r3, [sp]
    a610:	str	r0, [sp, #16]
    a614:	str	r0, [sp, #12]
    a618:	mov	r3, #79	; 0x4f
    a61c:	str	r5, [sp, #32]
    a620:	str	r5, [sp, #24]
    a624:	mov	r1, r4
    a628:	str	ip, [sp, #28]
    a62c:	add	r2, pc, r2
    a630:	mov	r0, #7
    a634:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a638:	ldr	r3, [pc, #1296]	; ab50 <blkid_probe_get_size@plt+0x3638>
    a63c:	sub	sl, fp, #164	; 0xa4
    a640:	add	r3, pc, r3
    a644:	ldr	r3, [r3, #4]
    a648:	b	a2f8 <blkid_probe_get_size@plt+0x2de0>
    a64c:	ldr	r3, [pc, #1280]	; ab54 <blkid_probe_get_size@plt+0x363c>
    a650:	ldr	r1, [pc, #1280]	; ab58 <blkid_probe_get_size@plt+0x3640>
    a654:	add	r3, pc, r3
    a658:	mov	r2, #42	; 0x2a
    a65c:	add	r3, r3, #92	; 0x5c
    a660:	add	r1, pc, r1
    a664:	mov	r0, #1
    a668:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    a66c:	mov	r4, r0
    a670:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    a674:	ldr	r2, [pc, #1248]	; ab5c <blkid_probe_get_size@plt+0x3644>
    a678:	ldr	r1, [pc, #1248]	; ab60 <blkid_probe_get_size@plt+0x3648>
    a67c:	add	r2, pc, r2
    a680:	add	r2, r2, #76	; 0x4c
    a684:	str	r2, [sp]
    a688:	ldr	r2, [pc, #1236]	; ab64 <blkid_probe_get_size@plt+0x364c>
    a68c:	mov	r3, #36	; 0x24
    a690:	add	r2, pc, r2
    a694:	add	r1, pc, r1
    a698:	mov	r0, #1
    a69c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    a6a0:	ldr	r2, [pc, #1216]	; ab68 <blkid_probe_get_size@plt+0x3650>
    a6a4:	ldr	r1, [pc, #1216]	; ab6c <blkid_probe_get_size@plt+0x3654>
    a6a8:	add	r2, pc, r2
    a6ac:	add	r2, r2, #76	; 0x4c
    a6b0:	str	r2, [sp]
    a6b4:	ldr	r2, [pc, #1204]	; ab70 <blkid_probe_get_size@plt+0x3658>
    a6b8:	mov	r3, #37	; 0x25
    a6bc:	add	r2, pc, r2
    a6c0:	add	r1, pc, r1
    a6c4:	mov	r0, #1
    a6c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    a6cc:	ldr	r2, [pc, #1184]	; ab74 <blkid_probe_get_size@plt+0x365c>
    a6d0:	ldr	r1, [pc, #1184]	; ab78 <blkid_probe_get_size@plt+0x3660>
    a6d4:	add	r2, pc, r2
    a6d8:	add	r2, r2, #76	; 0x4c
    a6dc:	str	r2, [sp]
    a6e0:	ldr	r2, [pc, #1172]	; ab7c <blkid_probe_get_size@plt+0x3664>
    a6e4:	mov	r3, #38	; 0x26
    a6e8:	add	r2, pc, r2
    a6ec:	add	r1, pc, r1
    a6f0:	mov	r0, #1
    a6f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    a6f8:	ldr	r3, [pc, #1152]	; ab80 <blkid_probe_get_size@plt+0x3668>
    a6fc:	str	r9, [fp, #-160]	; 0xffffff60
    a700:	add	r3, pc, r3
    a704:	ldr	r3, [r3, #4]
    a708:	cmp	r3, #2
    a70c:	bgt	a9c4 <blkid_probe_get_size@plt+0x34ac>
    a710:	mov	r1, r9
    a714:	ldr	r2, [pc, #1128]	; ab84 <blkid_probe_get_size@plt+0x366c>
    a718:	ldr	r3, [pc, #1128]	; ab88 <blkid_probe_get_size@plt+0x3670>
    a71c:	add	r2, pc, r2
    a720:	str	r2, [sp, #20]
    a724:	add	r3, pc, r3
    a728:	ldr	r2, [pc, #1116]	; ab8c <blkid_probe_get_size@plt+0x3674>
    a72c:	mov	r0, #0
    a730:	add	r3, r3, #92	; 0x5c
    a734:	str	r1, [sp, #4]
    a738:	str	r3, [sp]
    a73c:	mov	r1, r4
    a740:	str	r0, [sp, #16]
    a744:	str	r0, [sp, #12]
    a748:	str	r9, [sp, #8]
    a74c:	mov	r3, #85	; 0x55
    a750:	add	r2, pc, r2
    a754:	mov	r0, #3
    a758:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a75c:	mov	r4, r0
    a760:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    a764:	cmp	r4, #0
    a768:	beq	a288 <blkid_probe_get_size@plt+0x2d70>
    a76c:	b	a5b4 <blkid_probe_get_size@plt+0x309c>
    a770:	mov	r0, r6
    a774:	sub	r1, fp, #160	; 0xa0
    a778:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    a77c:	ldr	r2, [fp, #-160]	; 0xffffff60
    a780:	cmp	r2, #0
    a784:	beq	a484 <blkid_probe_get_size@plt+0x2f6c>
    a788:	ldr	r1, [pc, #1024]	; ab90 <blkid_probe_get_size@plt+0x3678>
    a78c:	add	r1, pc, r1
    a790:	b	a488 <blkid_probe_get_size@plt+0x2f70>
    a794:	mov	r1, r5
    a798:	mov	r0, r9
    a79c:	bl	7494 <rename@plt>
    a7a0:	cmp	r0, #0
    a7a4:	bge	a288 <blkid_probe_get_size@plt+0x2d70>
    a7a8:	mov	sl, #0
    a7ac:	str	sl, [fp, #-160]	; 0xffffff60
    a7b0:	bl	732c <__errno_location@plt>
    a7b4:	ldr	r3, [pc, #984]	; ab94 <blkid_probe_get_size@plt+0x367c>
    a7b8:	add	r3, pc, r3
    a7bc:	ldr	r3, [r3, #4]
    a7c0:	cmp	r3, #2
    a7c4:	movle	r2, sl
    a7c8:	ldr	r4, [r0]
    a7cc:	movle	r1, r2
    a7d0:	bgt	aa78 <blkid_probe_get_size@plt+0x3560>
    a7d4:	ldr	r3, [pc, #956]	; ab98 <blkid_probe_get_size@plt+0x3680>
    a7d8:	ldr	r0, [pc, #956]	; ab9c <blkid_probe_get_size@plt+0x3684>
    a7dc:	add	r3, pc, r3
    a7e0:	add	r0, pc, r0
    a7e4:	add	r3, r3, #92	; 0x5c
    a7e8:	str	r2, [sp, #8]
    a7ec:	str	r3, [sp]
    a7f0:	mov	r2, #0
    a7f4:	mov	r3, r0
    a7f8:	str	r2, [sp, #12]
    a7fc:	strd	r2, [sp, #16]
    a800:	ldr	r2, [pc, #920]	; aba0 <blkid_probe_get_size@plt+0x3688>
    a804:	str	r1, [sp, #4]
    a808:	str	r5, [sp, #28]
    a80c:	mov	r1, r4
    a810:	str	r9, [sp, #24]
    a814:	mov	r3, #101	; 0x65
    a818:	add	r2, pc, r2
    a81c:	mov	r0, #3
    a820:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a824:	mov	r4, r0
    a828:	mov	r0, r9
    a82c:	bl	6e28 <unlink@plt>
    a830:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    a834:	mov	r0, r6
    a838:	sub	r1, fp, #156	; 0x9c
    a83c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    a840:	ldr	r4, [fp, #-156]	; 0xffffff64
    a844:	cmp	r4, #0
    a848:	beq	a234 <blkid_probe_get_size@plt+0x2d1c>
    a84c:	ldr	r1, [pc, #848]	; aba4 <blkid_probe_get_size@plt+0x368c>
    a850:	add	r1, pc, r1
    a854:	b	a238 <blkid_probe_get_size@plt+0x2d20>
    a858:	sub	sl, fp, #36	; 0x24
    a85c:	mov	r1, r5
    a860:	str	r0, [sl, #-128]!	; 0xffffff80
    a864:	mvn	r0, #99	; 0x63
    a868:	mov	r2, sl
    a86c:	bl	2ce9c <blkid_probe_get_size@plt+0x25984>
    a870:	cmp	r0, #0
    a874:	blt	a958 <blkid_probe_get_size@plt+0x3440>
    a878:	ldr	r2, [fp, #-168]	; 0xffffff58
    a87c:	ldr	r9, [fp, #-164]	; 0xffffff5c
    a880:	mov	r0, r2
    a884:	mov	r1, r9
    a888:	str	r2, [fp, #-176]	; 0xffffff50
    a88c:	bl	7314 <strcmp@plt>
    a890:	subs	r4, r0, #0
    a894:	bne	a95c <blkid_probe_get_size@plt+0x3444>
    a898:	ldr	r3, [pc, #776]	; aba8 <blkid_probe_get_size@plt+0x3690>
    a89c:	mov	r1, #0
    a8a0:	add	r3, pc, r3
    a8a4:	str	r1, [fp, #-160]	; 0xffffff60
    a8a8:	ldr	r3, [r3, #4]
    a8ac:	ldr	r2, [fp, #-176]	; 0xffffff50
    a8b0:	cmp	r3, #6
    a8b4:	bgt	aa9c <blkid_probe_get_size@plt+0x3584>
    a8b8:	mov	ip, r1
    a8bc:	ldr	r3, [pc, #744]	; abac <blkid_probe_get_size@plt+0x3694>
    a8c0:	ldr	r0, [pc, #744]	; abb0 <blkid_probe_get_size@plt+0x3698>
    a8c4:	add	r3, pc, r3
    a8c8:	str	r2, [sp, #28]
    a8cc:	add	r3, r3, #92	; 0x5c
    a8d0:	ldr	r2, [pc, #732]	; abb4 <blkid_probe_get_size@plt+0x369c>
    a8d4:	mov	r6, #0
    a8d8:	add	r0, pc, r0
    a8dc:	stm	sp, {r3, ip}
    a8e0:	str	r1, [sp, #8]
    a8e4:	str	r0, [sp, #20]
    a8e8:	mov	r1, r6
    a8ec:	mov	r3, #59	; 0x3b
    a8f0:	add	r2, pc, r2
    a8f4:	str	r5, [sp, #24]
    a8f8:	str	r6, [sp, #16]
    a8fc:	str	r6, [sp, #12]
    a900:	mov	r0, #7
    a904:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    a908:	mov	r1, #1
    a90c:	mov	r0, r5
    a910:	bl	426fc <blkid_probe_get_size@plt+0x3b1e4>
    a914:	mov	r2, r6
    a918:	mov	r1, r5
    a91c:	mov	r3, #256	; 0x100
    a920:	mvn	r0, #99	; 0x63
    a924:	bl	6b70 <utimensat@plt>
    a928:	ldr	r0, [fp, #-164]	; 0xffffff5c
    a92c:	bl	69f0 <free@plt>
    a930:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    a934:	sub	r1, fp, #160	; 0xa0
    a938:	mov	r0, r6
    a93c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    a940:	ldr	r2, [fp, #-160]	; 0xffffff60
    a944:	cmp	r2, #0
    a948:	beq	a308 <blkid_probe_get_size@plt+0x2df0>
    a94c:	ldr	r0, [pc, #612]	; abb8 <blkid_probe_get_size@plt+0x36a0>
    a950:	add	r0, pc, r0
    a954:	b	a30c <blkid_probe_get_size@plt+0x2df4>
    a958:	ldr	r9, [fp, #-164]	; 0xffffff5c
    a95c:	mov	r0, r9
    a960:	bl	69f0 <free@plt>
    a964:	ldr	r3, [pc, #592]	; abbc <blkid_probe_get_size@plt+0x36a4>
    a968:	add	r3, pc, r3
    a96c:	ldr	r3, [r3, #4]
    a970:	b	a2f8 <blkid_probe_get_size@plt+0x2de0>
    a974:	sub	r1, fp, #160	; 0xa0
    a978:	mov	r0, r6
    a97c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    a980:	ldr	r4, [fp, #-160]	; 0xffffff60
    a984:	cmp	r4, #0
    a988:	beq	a4fc <blkid_probe_get_size@plt+0x2fe4>
    a98c:	ldr	r0, [pc, #556]	; abc0 <blkid_probe_get_size@plt+0x36a8>
    a990:	add	r0, pc, r0
    a994:	b	a500 <blkid_probe_get_size@plt+0x2fe8>
    a998:	ldr	r2, [pc, #548]	; abc4 <blkid_probe_get_size@plt+0x36ac>
    a99c:	ldr	r1, [pc, #548]	; abc8 <blkid_probe_get_size@plt+0x36b0>
    a9a0:	add	r2, pc, r2
    a9a4:	add	r2, r2, #76	; 0x4c
    a9a8:	str	r2, [sp]
    a9ac:	ldr	r2, [pc, #536]	; abcc <blkid_probe_get_size@plt+0x36b4>
    a9b0:	mov	r3, #86	; 0x56
    a9b4:	add	r2, pc, r2
    a9b8:	add	r1, pc, r1
    a9bc:	mov	r0, #1
    a9c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    a9c4:	mov	r0, r6
    a9c8:	sub	r1, fp, #160	; 0xa0
    a9cc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    a9d0:	ldr	r9, [fp, #-160]	; 0xffffff60
    a9d4:	cmp	r9, #0
    a9d8:	beq	a710 <blkid_probe_get_size@plt+0x31f8>
    a9dc:	ldr	r1, [pc, #492]	; abd0 <blkid_probe_get_size@plt+0x36b8>
    a9e0:	add	r1, pc, r1
    a9e4:	b	a714 <blkid_probe_get_size@plt+0x31fc>
    a9e8:	ldr	r3, [pc, #484]	; abd4 <blkid_probe_get_size@plt+0x36bc>
    a9ec:	str	r0, [fp, #-160]	; 0xffffff60
    a9f0:	add	r3, pc, r3
    a9f4:	ldr	r3, [r3, #4]
    a9f8:	cmp	r3, #2
    a9fc:	bgt	aac8 <blkid_probe_get_size@plt+0x35b0>
    aa00:	mov	ip, r0
    aa04:	ldr	r3, [pc, #460]	; abd8 <blkid_probe_get_size@plt+0x36c0>
    aa08:	ldr	r2, [pc, #460]	; abdc <blkid_probe_get_size@plt+0x36c4>
    aa0c:	add	r3, pc, r3
    aa10:	add	r2, pc, r2
    aa14:	add	r3, r3, #92	; 0x5c
    aa18:	str	r2, [sp, #20]
    aa1c:	ldr	r2, [pc, #444]	; abe0 <blkid_probe_get_size@plt+0x36c8>
    aa20:	mov	r1, #0
    aa24:	str	r0, [sp, #8]
    aa28:	stm	sp, {r3, ip}
    aa2c:	str	r9, [sp, #28]
    aa30:	str	r5, [sp, #24]
    aa34:	str	r1, [sp, #16]
    aa38:	str	r1, [sp, #12]
    aa3c:	mov	r3, #52	; 0x34
    aa40:	add	r2, pc, r2
    aa44:	mov	r0, #3
    aa48:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    aa4c:	mvn	r4, #94	; 0x5e
    aa50:	b	a288 <blkid_probe_get_size@plt+0x2d70>
    aa54:	sub	r1, fp, #160	; 0xa0
    aa58:	mov	r0, r6
    aa5c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    aa60:	ldr	r2, [fp, #-160]	; 0xffffff60
    aa64:	cmp	r2, #0
    aa68:	beq	a5dc <blkid_probe_get_size@plt+0x30c4>
    aa6c:	ldr	r1, [pc, #368]	; abe4 <blkid_probe_get_size@plt+0x36cc>
    aa70:	add	r1, pc, r1
    aa74:	b	a5e0 <blkid_probe_get_size@plt+0x30c8>
    aa78:	sub	r1, fp, #160	; 0xa0
    aa7c:	mov	r0, r6
    aa80:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    aa84:	ldr	r2, [fp, #-160]	; 0xffffff60
    aa88:	cmp	r2, sl
    aa8c:	moveq	r1, r2
    aa90:	ldrne	r1, [pc, #336]	; abe8 <blkid_probe_get_size@plt+0x36d0>
    aa94:	addne	r1, pc, r1
    aa98:	b	a7d4 <blkid_probe_get_size@plt+0x32bc>
    aa9c:	sub	r1, fp, #160	; 0xa0
    aaa0:	mov	r0, r6
    aaa4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    aaa8:	ldr	r1, [fp, #-160]	; 0xffffff60
    aaac:	ldr	ip, [pc, #312]	; abec <blkid_probe_get_size@plt+0x36d4>
    aab0:	cmp	r1, #0
    aab4:	ldr	r2, [fp, #-168]	; 0xffffff58
    aab8:	add	ip, pc, ip
    aabc:	bne	a8bc <blkid_probe_get_size@plt+0x33a4>
    aac0:	b	a8b8 <blkid_probe_get_size@plt+0x33a0>
    aac4:	bl	6fb4 <__stack_chk_fail@plt>
    aac8:	mov	r0, r6
    aacc:	sub	r1, fp, #160	; 0xa0
    aad0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    aad4:	ldr	r0, [fp, #-160]	; 0xffffff60
    aad8:	cmp	r0, #0
    aadc:	beq	aa00 <blkid_probe_get_size@plt+0x34e8>
    aae0:	ldr	ip, [pc, #264]	; abf0 <blkid_probe_get_size@plt+0x36d8>
    aae4:	add	ip, pc, ip
    aae8:	b	aa04 <blkid_probe_get_size@plt+0x34ec>
    aaec:			; <UNDEFINED> instruction: 0x0008d9b4
    aaf0:	andeq	r0, r0, ip, lsr r4
    aaf4:	andeq	sp, r8, r8, lsl pc
    aaf8:	andeq	sl, r5, r8, lsl #26
    aafc:	andeq	sl, r5, r8, lsl #7
    ab00:	andeq	sl, r5, r0, lsl #25
    ab04:	andeq	sp, r8, ip, asr #28
    ab08:			; <UNDEFINED> instruction: 0x0005a2b8
    ab0c:	andeq	sl, r5, r4, lsr sp
    ab10:			; <UNDEFINED> instruction: 0x0005abbc
    ab14:	andeq	sl, r5, r4, lsl sp
    ab18:	andeq	r7, r3, r8, lsr r9
    ab1c:	andeq	sp, r8, ip, asr #25
    ab20:	andeq	sl, r5, r4, lsr #24
    ab24:	andeq	sl, r5, r0, lsr r1
    ab28:	andeq	sl, r5, r8, lsr #20
    ab2c:	andeq	sp, r8, r0, asr ip
    ab30:	andeq	sl, r5, ip, ror #21
    ab34:	strheq	sl, [r5], -ip
    ab38:			; <UNDEFINED> instruction: 0x0005a9b0
    ab3c:	andeq	r7, r3, r4, ror #15
    ab40:	andeq	sp, r8, r0, lsl #23
    ab44:	andeq	sl, r5, r8, lsr #20
    ab48:	ldrdeq	r9, [r5], -r8
    ab4c:	andeq	sl, r5, ip, asr #17
    ab50:	strdeq	sp, [r8], -ip
    ab54:	andeq	r9, r5, ip, ror pc
    ab58:	muleq	r5, r8, r8
    ab5c:	andeq	r9, r5, r4, asr pc
    ab60:	strdeq	fp, [r5], -r0
    ab64:	andeq	sl, r5, r8, ror #16
    ab68:	andeq	r9, r5, r8, lsr #30
    ab6c:	andeq	lr, r5, ip, asr #29
    ab70:	andeq	sl, r5, ip, lsr r8
    ab74:	strdeq	r9, [r5], -ip
    ab78:	andeq	sl, r5, r4, asr r8
    ab7c:	andeq	sl, r5, r0, lsl r8
    ab80:	andeq	sp, r8, ip, lsr sl
    ab84:	andeq	sl, r5, r4, asr r9
    ab88:	andeq	r9, r5, ip, lsr #29
    ab8c:	andeq	sl, r5, r8, lsr #15
    ab90:	andeq	sl, r5, ip, lsr #15
    ab94:	andeq	sp, r8, r4, lsl #19
    ab98:	strdeq	r9, [r5], -r4
    ab9c:	andeq	sl, r5, r4, lsl #18
    aba0:	andeq	sl, r5, r0, ror #13
    aba4:	andeq	sl, r5, r8, ror #13
    aba8:	muleq	r8, ip, r8
    abac:	andeq	r9, r5, ip, lsl #26
    abb0:	andeq	sl, r5, ip, ror #13
    abb4:	andeq	sl, r5, r8, lsl #12
    abb8:	andeq	sl, r5, r8, ror #11
    abbc:	ldrdeq	sp, [r8], -r4
    abc0:	andeq	sl, r5, r8, lsr #11
    abc4:	andeq	r9, r5, r0, lsr ip
    abc8:	andeq	sl, r5, r0, ror #13
    abcc:	andeq	sl, r5, r4, asr #10
    abd0:	andeq	sl, r5, r8, asr r5
    abd4:	andeq	sp, r8, ip, asr #14
    abd8:	andeq	r9, r5, r4, asr #23
    abdc:	andeq	sl, r5, ip, ror #10
    abe0:			; <UNDEFINED> instruction: 0x0005a4b8
    abe4:	andeq	sl, r5, r8, asr #9
    abe8:	andeq	sl, r5, r4, lsr #9
    abec:	andeq	sl, r5, r0, lsl #9
    abf0:	andeq	sl, r5, r4, asr r4
    abf4:	ldr	r3, [pc, #2340]	; b520 <blkid_probe_get_size@plt+0x4008>
    abf8:	ldr	ip, [pc, #2340]	; b524 <blkid_probe_get_size@plt+0x400c>
    abfc:	add	r3, pc, r3
    ac00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac04:	mov	fp, r2
    ac08:	sub	sp, sp, #4160	; 0x1040
    ac0c:	ldr	r2, [r3, ip]
    ac10:	sub	sp, sp, #44	; 0x2c
    ac14:	subs	sl, r0, #0
    ac18:	ldr	r3, [r2]
    ac1c:	str	r2, [sp, #32]
    ac20:	add	r2, sp, #4160	; 0x1040
    ac24:	add	r2, r2, #36	; 0x24
    ac28:	str	r3, [r2]
    ac2c:	beq	aefc <blkid_probe_get_size@plt+0x39e4>
    ac30:	cmp	r1, #0
    ac34:	mov	r7, r1
    ac38:	beq	af28 <blkid_probe_get_size@plt+0x3a10>
    ac3c:	add	r5, sp, #104	; 0x68
    ac40:	sub	r1, r5, #36	; 0x24
    ac44:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
    ac48:	subs	r6, r0, #0
    ac4c:	bge	ad04 <blkid_probe_get_size@plt+0x37ec>
    ac50:	ldr	r3, [pc, #2256]	; b528 <blkid_probe_get_size@plt+0x4010>
    ac54:	mov	r2, #0
    ac58:	add	r3, pc, r3
    ac5c:	str	r2, [r5, #-8]
    ac60:	ldr	r3, [r3, #4]
    ac64:	cmp	r3, #6
    ac68:	bgt	b264 <blkid_probe_get_size@plt+0x3d4c>
    ac6c:	mov	r1, r2
    ac70:	ldr	r3, [pc, #2228]	; b52c <blkid_probe_get_size@plt+0x4014>
    ac74:	ldr	r0, [pc, #2228]	; b530 <blkid_probe_get_size@plt+0x4018>
    ac78:	stmib	sp, {r1, r2}
    ac7c:	add	r3, pc, r3
    ac80:	ldr	r2, [pc, #2220]	; b534 <blkid_probe_get_size@plt+0x401c>
    ac84:	mov	r4, #0
    ac88:	add	r0, pc, r0
    ac8c:	add	r3, r3, #120	; 0x78
    ac90:	mov	r1, r6
    ac94:	str	r3, [sp]
    ac98:	str	r0, [sp, #20]
    ac9c:	str	r4, [sp, #16]
    aca0:	str	r4, [sp, #12]
    aca4:	mov	r3, #203	; 0xcb
    aca8:	add	r2, pc, r2
    acac:	mov	r0, #7
    acb0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    acb4:	mov	r9, r4
    acb8:	mov	r8, r4
    acbc:	mov	r6, r0
    acc0:	mov	r0, r9
    acc4:	bl	69f0 <free@plt>
    acc8:	mov	r0, r8
    accc:	bl	69f0 <free@plt>
    acd0:	mov	r0, r4
    acd4:	bl	69f0 <free@plt>
    acd8:	add	r3, sp, #4160	; 0x1040
    acdc:	add	r3, r3, #36	; 0x24
    ace0:	ldr	r2, [r3]
    ace4:	ldr	r3, [sp, #32]
    ace8:	mov	r0, r6
    acec:	ldr	r3, [r3]
    acf0:	cmp	r2, r3
    acf4:	bne	b51c <blkid_probe_get_size@plt+0x4004>
    acf8:	add	sp, sp, #4160	; 0x1040
    acfc:	add	sp, sp, #44	; 0x2c
    ad00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ad04:	adds	ip, r7, #4
    ad08:	beq	b2b0 <blkid_probe_get_size@plt+0x3d98>
    ad0c:	ldrb	r3, [r7, #4]
    ad10:	cmp	r3, #0
    ad14:	addeq	r1, sp, #100	; 0x64
    ad18:	beq	adb0 <blkid_probe_get_size@plt+0x3898>
    ad1c:	ldr	r6, [pc, #2068]	; b538 <blkid_probe_get_size@plt+0x4020>
    ad20:	ldr	r4, [pc, #2068]	; b53c <blkid_probe_get_size@plt+0x4024>
    ad24:	ldr	lr, [pc, #2068]	; b540 <blkid_probe_get_size@plt+0x4028>
    ad28:	add	r6, pc, r6
    ad2c:	add	r4, pc, r4
    ad30:	mov	r2, #0
    ad34:	add	r1, sp, #100	; 0x64
    ad38:	b	ad64 <blkid_probe_get_size@plt+0x384c>
    ad3c:	cmp	r3, #92	; 0x5c
    ad40:	beq	ad98 <blkid_probe_get_size@plt+0x3880>
    ad44:	add	r0, r2, #1
    ad48:	cmp	r0, lr
    ad4c:	bhi	adb0 <blkid_probe_get_size@plt+0x3898>
    ad50:	strb	r3, [r1, r2]
    ad54:	mov	r2, r0
    ad58:	ldrb	r3, [ip, #1]!
    ad5c:	cmp	r3, #0
    ad60:	beq	ad90 <blkid_probe_get_size@plt+0x3878>
    ad64:	cmp	r3, #47	; 0x2f
    ad68:	bne	ad3c <blkid_probe_get_size@plt+0x3824>
    ad6c:	add	r3, r2, #4
    ad70:	cmp	r3, lr
    ad74:	bhi	adb0 <blkid_probe_get_size@plt+0x3898>
    ad78:	ldr	r0, [r4]
    ad7c:	str	r0, [r1, r2]
    ad80:	mov	r2, r3
    ad84:	ldrb	r3, [ip, #1]!
    ad88:	cmp	r3, #0
    ad8c:	bne	ad64 <blkid_probe_get_size@plt+0x384c>
    ad90:	add	r3, r1, r2
    ad94:	b	adb4 <blkid_probe_get_size@plt+0x389c>
    ad98:	add	r3, r2, #4
    ad9c:	cmp	r3, lr
    ada0:	ldrls	r0, [r6]
    ada4:	strls	r0, [r1, r2]
    ada8:	movls	r2, r3
    adac:	bls	ad58 <blkid_probe_get_size@plt+0x3840>
    adb0:	mov	r3, r1
    adb4:	ldr	r0, [pc, #1928]	; b544 <blkid_probe_get_size@plt+0x402c>
    adb8:	mov	r4, #0
    adbc:	mvn	r2, #0
    adc0:	add	r0, pc, r0
    adc4:	strb	r4, [r3]
    adc8:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
    adcc:	subs	r9, r0, #0
    add0:	beq	af54 <blkid_probe_get_size@plt+0x3a3c>
    add4:	mvn	r2, #0
    add8:	ldr	r1, [r5, #-36]	; 0xffffffdc
    addc:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
    ade0:	subs	r8, r0, #0
    ade4:	beq	b2dc <blkid_probe_get_size@plt+0x3dc4>
    ade8:	cmp	fp, #0
    adec:	beq	af84 <blkid_probe_get_size@plt+0x3a6c>
    adf0:	mov	r1, r5
    adf4:	mov	r0, sl
    adf8:	str	r4, [r1, #-28]!	; 0xffffffe4
    adfc:	str	r4, [r5, #-32]	; 0xffffffe0
    ae00:	bl	26c8c <blkid_probe_get_size@plt+0x1f774>
    ae04:	subs	r6, r0, #0
    ae08:	bge	b308 <blkid_probe_get_size@plt+0x3df0>
    ae0c:	ldr	r0, [r5, #-32]	; 0xffffffe0
    ae10:	bl	69f0 <free@plt>
    ae14:	ldr	r3, [pc, #1836]	; b548 <blkid_probe_get_size@plt+0x4030>
    ae18:	mov	r2, #0
    ae1c:	add	r3, pc, r3
    ae20:	str	r2, [r5, #-8]
    ae24:	ldr	r3, [r3, #4]
    ae28:	cmp	r3, #6
    ae2c:	bgt	b464 <blkid_probe_get_size@plt+0x3f4c>
    ae30:	mov	r0, r2
    ae34:	ldr	r3, [pc, #1808]	; b54c <blkid_probe_get_size@plt+0x4034>
    ae38:	ldr	r1, [pc, #1808]	; b550 <blkid_probe_get_size@plt+0x4038>
    ae3c:	stmib	sp, {r0, r2}
    ae40:	add	r3, pc, r3
    ae44:	ldr	r2, [pc, #1800]	; b554 <blkid_probe_get_size@plt+0x403c>
    ae48:	mov	r4, #0
    ae4c:	add	r1, pc, r1
    ae50:	add	r3, r3, #120	; 0x78
    ae54:	str	r3, [sp]
    ae58:	str	r1, [sp, #20]
    ae5c:	mov	r3, #218	; 0xda
    ae60:	mov	r1, r4
    ae64:	add	r2, pc, r2
    ae68:	str	r7, [sp, #24]
    ae6c:	str	r4, [sp, #16]
    ae70:	str	r4, [sp, #12]
    ae74:	mov	r0, #7
    ae78:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    ae7c:	mov	r0, r7
    ae80:	bl	6e28 <unlink@plt>
    ae84:	cmp	r0, r4
    ae88:	beq	b210 <blkid_probe_get_size@plt+0x3cf8>
    ae8c:	cmp	fp, #0
    ae90:	beq	acc0 <blkid_probe_get_size@plt+0x37a8>
    ae94:	ldr	r7, [pc, #1724]	; b558 <blkid_probe_get_size@plt+0x4040>
    ae98:	ldr	sl, [pc, #1724]	; b55c <blkid_probe_get_size@plt+0x4044>
    ae9c:	add	r7, pc, r7
    aea0:	b	aed8 <blkid_probe_get_size@plt+0x39c0>
    aea4:	mov	r2, #292	; 0x124
    aea8:	mov	r1, sl
    aeac:	mov	r0, r8
    aeb0:	bl	6ec4 <open64@plt>
    aeb4:	subs	r5, r0, #0
    aeb8:	bge	aec8 <blkid_probe_get_size@plt+0x39b0>
    aebc:	bl	732c <__errno_location@plt>
    aec0:	ldr	r6, [r0]
    aec4:	rsb	r6, r6, #0
    aec8:	mov	r0, r5
    aecc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
    aed0:	cmn	r6, #2
    aed4:	bne	acc0 <blkid_probe_get_size@plt+0x37a8>
    aed8:	mov	r1, r7
    aedc:	mov	r0, r8
    aee0:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
    aee4:	cmn	r0, #2
    aee8:	mov	r6, r0
    aeec:	beq	aea4 <blkid_probe_get_size@plt+0x398c>
    aef0:	cmp	r0, #0
    aef4:	beq	aea4 <blkid_probe_get_size@plt+0x398c>
    aef8:	b	acc0 <blkid_probe_get_size@plt+0x37a8>
    aefc:	ldr	r2, [pc, #1628]	; b560 <blkid_probe_get_size@plt+0x4048>
    af00:	ldr	r1, [pc, #1628]	; b564 <blkid_probe_get_size@plt+0x404c>
    af04:	add	r2, pc, r2
    af08:	add	r2, r2, #108	; 0x6c
    af0c:	str	r2, [sp]
    af10:	ldr	r2, [pc, #1616]	; b568 <blkid_probe_get_size@plt+0x4050>
    af14:	mov	r3, #198	; 0xc6
    af18:	add	r2, pc, r2
    af1c:	add	r1, pc, r1
    af20:	mov	r0, #1
    af24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    af28:	ldr	r2, [pc, #1596]	; b56c <blkid_probe_get_size@plt+0x4054>
    af2c:	ldr	r1, [pc, #1596]	; b570 <blkid_probe_get_size@plt+0x4058>
    af30:	add	r2, pc, r2
    af34:	add	r2, r2, #108	; 0x6c
    af38:	str	r2, [sp]
    af3c:	ldr	r2, [pc, #1584]	; b574 <blkid_probe_get_size@plt+0x405c>
    af40:	mov	r3, #199	; 0xc7
    af44:	add	r2, pc, r2
    af48:	add	r1, pc, r1
    af4c:	mov	r0, #1
    af50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    af54:	ldr	r3, [pc, #1564]	; b578 <blkid_probe_get_size@plt+0x4060>
    af58:	ldr	r1, [pc, #1564]	; b57c <blkid_probe_get_size@plt+0x4064>
    af5c:	add	r3, pc, r3
    af60:	mov	r2, #208	; 0xd0
    af64:	add	r3, r3, #120	; 0x78
    af68:	add	r1, pc, r1
    af6c:	mov	r0, #1
    af70:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    af74:	mov	r4, r9
    af78:	mov	r8, r9
    af7c:	mov	r6, r0
    af80:	b	acc0 <blkid_probe_get_size@plt+0x37a8>
    af84:	bl	6e28 <unlink@plt>
    af88:	cmp	r0, #0
    af8c:	beq	b258 <blkid_probe_get_size@plt+0x3d40>
    af90:	mov	r3, #0
    af94:	str	r3, [r5, #-32]	; 0xffffffe0
    af98:	str	r3, [r5, #-28]	; 0xffffffe4
    af9c:	mov	r0, r9
    afa0:	bl	6ca8 <opendir@plt>
    afa4:	subs	r6, r0, #0
    afa8:	str	r6, [sp, #44]	; 0x2c
    afac:	beq	b1f0 <blkid_probe_get_size@plt+0x3cd8>
    afb0:	bl	732c <__errno_location@plt>
    afb4:	mov	r6, #0
    afb8:	str	r0, [sp, #48]	; 0x30
    afbc:	str	r6, [r0]
    afc0:	ldr	r0, [sp, #44]	; 0x2c
    afc4:	bl	6bb8 <readdir64@plt>
    afc8:	subs	r4, r0, #0
    afcc:	beq	b290 <blkid_probe_get_size@plt+0x3d78>
    afd0:	ldrb	r3, [r4, #19]
    afd4:	str	r6, [r5, #-24]	; 0xffffffe8
    afd8:	str	r6, [r5, #-12]
    afdc:	cmp	r3, r6
    afe0:	beq	b290 <blkid_probe_get_size@plt+0x3d78>
    afe4:	ldr	r1, [pc, #1428]	; b580 <blkid_probe_get_size@plt+0x4068>
    afe8:	ldr	r2, [pc, #1428]	; b584 <blkid_probe_get_size@plt+0x406c>
    afec:	add	r1, pc, r1
    aff0:	add	r2, pc, r2
    aff4:	add	r1, r1, #152	; 0x98
    aff8:	add	r2, r2, #152	; 0x98
    affc:	str	r1, [sp, #40]	; 0x28
    b000:	str	r2, [sp, #60]	; 0x3c
    b004:	ldr	r1, [pc, #1404]	; b588 <blkid_probe_get_size@plt+0x4070>
    b008:	ldr	r2, [pc, #1404]	; b58c <blkid_probe_get_size@plt+0x4074>
    b00c:	add	r1, pc, r1
    b010:	add	r2, pc, r2
    b014:	str	r8, [sp, #52]	; 0x34
    b018:	str	fp, [sp, #56]	; 0x38
    b01c:	ldr	r8, [sp, #48]	; 0x30
    b020:	str	r1, [sp, #36]	; 0x24
    b024:	str	r7, [sp, #48]	; 0x30
    b028:	mov	fp, r2
    b02c:	ldr	r7, [sp, #44]	; 0x2c
    b030:	b	b158 <blkid_probe_get_size@plt+0x3c40>
    b034:	mov	r1, r4
    b038:	sub	r0, r5, #24
    b03c:	bl	38c30 <blkid_probe_get_size@plt+0x31718>
    b040:	cmp	r0, #0
    b044:	blt	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b048:	sub	r1, r5, #20
    b04c:	ldr	r0, [r5, #-24]	; 0xffffffe8
    b050:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
    b054:	cmp	r0, #0
    b058:	blt	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b05c:	sub	r1, r5, #12
    b060:	ldr	r0, [r5, #-24]	; 0xffffffe8
    b064:	bl	26c8c <blkid_probe_get_size@plt+0x1f774>
    b068:	cmp	r0, #0
    b06c:	blt	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b070:	ldr	r3, [r5, #-32]	; 0xffffffe0
    b074:	cmp	r3, #0
    b078:	beq	b08c <blkid_probe_get_size@plt+0x3b74>
    b07c:	ldr	r2, [r5, #-12]
    b080:	ldr	r3, [r5, #-28]	; 0xffffffe4
    b084:	cmp	r2, r3
    b088:	ble	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b08c:	ldr	r3, [r5, #-24]	; 0xffffffe8
    b090:	mov	r0, #0
    b094:	cmp	r3, r0
    b098:	str	r0, [r5, #-8]
    b09c:	beq	b458 <blkid_probe_get_size@plt+0x3f40>
    b0a0:	ldr	r2, [pc, #1256]	; b590 <blkid_probe_get_size@plt+0x4078>
    b0a4:	add	r2, pc, r2
    b0a8:	ldr	r2, [r2, #4]
    b0ac:	cmp	r2, #6
    b0b0:	bgt	b4b8 <blkid_probe_get_size@plt+0x3fa0>
    b0b4:	mov	r2, r0
    b0b8:	ldr	ip, [r5, #-12]
    b0bc:	str	r2, [sp, #4]
    b0c0:	ldr	r2, [sp, #60]	; 0x3c
    b0c4:	ldr	r3, [pc, #1224]	; b594 <blkid_probe_get_size@plt+0x407c>
    b0c8:	str	r2, [sp]
    b0cc:	ldr	r2, [pc, #1220]	; b598 <blkid_probe_get_size@plt+0x4080>
    b0d0:	mov	r1, #0
    b0d4:	add	r3, pc, r3
    b0d8:	str	r0, [sp, #8]
    b0dc:	str	ip, [sp, #24]
    b0e0:	str	r3, [sp, #20]
    b0e4:	str	r1, [sp, #16]
    b0e8:	str	r1, [sp, #12]
    b0ec:	mov	r3, #176	; 0xb0
    b0f0:	add	r2, pc, r2
    b0f4:	str	r9, [sp, #28]
    b0f8:	mov	r0, #7
    b0fc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    b100:	ldr	r1, [r5, #-20]	; 0xffffffec
    b104:	sub	r0, r5, #32
    b108:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
    b10c:	cmp	r0, #0
    b110:	blt	b4dc <blkid_probe_get_size@plt+0x3fc4>
    b114:	ldr	r0, [r5, #-24]	; 0xffffffe8
    b118:	ldr	r3, [r5, #-12]
    b11c:	cmp	r0, #0
    b120:	str	r3, [r5, #-28]	; 0xffffffe4
    b124:	beq	b12c <blkid_probe_get_size@plt+0x3c14>
    b128:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
    b12c:	mov	r6, #0
    b130:	str	r6, [r8]
    b134:	mov	r0, r7
    b138:	bl	6bb8 <readdir64@plt>
    b13c:	subs	r4, r0, #0
    b140:	beq	b288 <blkid_probe_get_size@plt+0x3d70>
    b144:	ldrb	r3, [r4, #19]
    b148:	str	r6, [r5, #-24]	; 0xffffffe8
    b14c:	str	r6, [r5, #-12]
    b150:	cmp	r3, #0
    b154:	beq	b288 <blkid_probe_get_size@plt+0x3d70>
    b158:	cmp	r3, #46	; 0x2e
    b15c:	beq	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b160:	ldr	r2, [fp, #4]
    b164:	mov	r3, #0
    b168:	cmp	r2, #6
    b16c:	str	r3, [r5, #-8]
    b170:	bgt	b338 <blkid_probe_get_size@plt+0x3e20>
    b174:	mov	r0, r3
    b178:	ldr	r2, [pc, #1052]	; b59c <blkid_probe_get_size@plt+0x4084>
    b17c:	stmib	sp, {r0, r3}
    b180:	ldr	r3, [sp, #40]	; 0x28
    b184:	mov	r1, #0
    b188:	add	r2, pc, r2
    b18c:	add	r4, r4, #19
    b190:	str	r3, [sp]
    b194:	str	r2, [sp, #20]
    b198:	str	r1, [sp, #16]
    b19c:	str	r1, [sp, #12]
    b1a0:	mov	r3, #155	; 0x9b
    b1a4:	ldr	r2, [sp, #36]	; 0x24
    b1a8:	str	r4, [sp, #24]
    b1ac:	str	r9, [sp, #28]
    b1b0:	mov	r0, #7
    b1b4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
    b1b8:	sub	r1, r5, #16
    b1bc:	mov	r0, sl
    b1c0:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
    b1c4:	cmp	r0, #0
    b1c8:	blt	b1e0 <blkid_probe_get_size@plt+0x3cc8>
    b1cc:	ldr	r1, [r5, #-16]
    b1d0:	mov	r0, r4
    b1d4:	bl	7314 <strcmp@plt>
    b1d8:	cmp	r0, #0
    b1dc:	bne	b034 <blkid_probe_get_size@plt+0x3b1c>
    b1e0:	ldr	r0, [r5, #-24]	; 0xffffffe8
    b1e4:	cmp	r0, #0
    b1e8:	bne	b128 <blkid_probe_get_size@plt+0x3c10>
    b1ec:	b	b12c <blkid_probe_get_size@plt+0x3c14>
    b1f0:	ldr	r4, [r5, #-32]	; 0xffffffe0
    b1f4:	cmp	r4, #0
    b1f8:	beq	b35c <blkid_probe_get_size@plt+0x3e44>
    b1fc:	mov	r2, r7
    b200:	mov	r0, sl
    b204:	mov	r1, r4
    b208:	bl	a1ac <blkid_probe_get_size@plt+0x2c94>
    b20c:	b	ae8c <blkid_probe_get_size@plt+0x3974>
    b210:	mov	r0, r7
    b214:	bl	723c <strlen@plt>
    b218:	subs	r3, r0, #0
    b21c:	beq	b250 <blkid_probe_get_size@plt+0x3d38>
    b220:	sub	r3, r3, #1
    b224:	add	r1, r7, r3
    b228:	ldrb	r2, [r7, r3]
    b22c:	cmp	r2, #47	; 0x2f
    b230:	beq	b248 <blkid_probe_get_size@plt+0x3d30>
    b234:	b	b374 <blkid_probe_get_size@plt+0x3e5c>
    b238:	ldrb	r2, [r1, #-1]!
    b23c:	sub	r3, r3, #1
    b240:	cmp	r2, #47	; 0x2f
    b244:	bne	b374 <blkid_probe_get_size@plt+0x3e5c>
    b248:	cmp	r3, #0
    b24c:	bne	b238 <blkid_probe_get_size@plt+0x3d20>
    b250:	mov	r4, #0
    b254:	b	ae8c <blkid_probe_get_size@plt+0x3974>
    b258:	mov	r0, r9
    b25c:	bl	6e1c <rmdir@plt>
    b260:	b	af90 <blkid_probe_get_size@plt+0x3a78>
    b264:	mov	r0, sl
    b268:	sub	r1, r5, #8
    b26c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    b270:	ldr	r2, [r5, #-8]
    b274:	cmp	r2, #0
    b278:	beq	ac6c <blkid_probe_get_size@plt+0x3754>
    b27c:	ldr	r1, [pc, #796]	; b5a0 <blkid_probe_get_size@plt+0x4088>
    b280:	add	r1, pc, r1
    b284:	b	ac70 <blkid_probe_get_size@plt+0x3758>
    b288:	add	r7, sp, #48	; 0x30
    b28c:	ldm	r7, {r7, r8, fp}
    b290:	ldr	r4, [r5, #-32]	; 0xffffffe0
    b294:	ldr	r0, [sp, #44]	; 0x2c
    b298:	cmp	r4, #0
    b29c:	beq	b510 <blkid_probe_get_size@plt+0x3ff8>
    b2a0:	mov	r6, #0
    b2a4:	str	r6, [r5, #-32]	; 0xffffffe0
    b2a8:	bl	6aa4 <closedir@plt>
    b2ac:	b	b1fc <blkid_probe_get_size@plt+0x3ce4>
    b2b0:	ldr	r3, [pc, #748]	; b5a4 <blkid_probe_get_size@plt+0x408c>
    b2b4:	ldr	r2, [pc, #748]	; b5a8 <blkid_probe_get_size@plt+0x4090>
    b2b8:	add	r3, pc, r3
    b2bc:	ldr	r1, [pc, #744]	; b5ac <blkid_probe_get_size@plt+0x4094>
    b2c0:	add	r3, r3, #132	; 0x84
    b2c4:	str	r3, [sp]
    b2c8:	mov	r0, ip
    b2cc:	mov	r3, #81	; 0x51
    b2d0:	add	r2, pc, r2
    b2d4:	add	r1, pc, r1
    b2d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    b2dc:	ldr	r3, [pc, #716]	; b5b0 <blkid_probe_get_size@plt+0x4098>
    b2e0:	ldr	r1, [pc, #716]	; b5b4 <blkid_probe_get_size@plt+0x409c>
    b2e4:	add	r3, pc, r3
    b2e8:	mov	r2, #211	; 0xd3
    b2ec:	add	r3, r3, #120	; 0x78
    b2f0:	add	r1, pc, r1
    b2f4:	mov	r0, #1
    b2f8:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    b2fc:	mov	r4, r8
    b300:	mov	r6, r0
    b304:	b	acc0 <blkid_probe_get_size@plt+0x37a8>
    b308:	sub	r1, r5, #8
    b30c:	mov	r0, sl
    b310:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
    b314:	subs	r6, r0, #0
    b318:	blt	ae0c <blkid_probe_get_size@plt+0x38f4>
    b31c:	ldr	r0, [r5, #-8]
    b320:	bl	74e8 <strdup@plt>
    b324:	cmp	r0, #0
    b328:	str	r0, [r5, #-32]	; 0xffffffe0
    b32c:	bne	af9c <blkid_probe_get_size@plt+0x3a84>
    b330:	mvn	r6, #11
    b334:	b	ae10 <blkid_probe_get_size@plt+0x38f8>
    b338:	sub	r1, r5, #8
    b33c:	mov	r0, sl
    b340:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    b344:	ldr	r3, [r5, #-8]
    b348:	cmp	r3, #0
    b34c:	beq	b174 <blkid_probe_get_size@plt+0x3c5c>
    b350:	ldr	r0, [pc, #608]	; b5b8 <blkid_probe_get_size@plt+0x40a0>
    b354:	add	r0, pc, r0
    b358:	b	b178 <blkid_probe_get_size@plt+0x3c60>
    b35c:	bl	732c <__errno_location@plt>
    b360:	ldr	r6, [r0]
    b364:	cmp	r6, #0
    b368:	rsb	r6, r6, #0
    b36c:	ble	b1fc <blkid_probe_get_size@plt+0x3ce4>
    b370:	b	ae14 <blkid_probe_get_size@plt+0x38fc>
    b374:	ldr	r5, [pc, #576]	; b5bc <blkid_probe_get_size@plt+0x40a4>
    b378:	mov	sl, r3
    b37c:	add	r5, pc, r5
    b380:	str	r9, [sp, #36]	; 0x24
    b384:	str	r8, [sp, #40]	; 0x28
    b388:	str	r6, [sp, #44]	; 0x2c
    b38c:	add	r1, r7, sl
    b390:	b	b39c <blkid_probe_get_size@plt+0x3e84>
    b394:	ldrb	r2, [r1, #-1]!
    b398:	sub	sl, sl, #1
    b39c:	cmp	r2, #47	; 0x2f
    b3a0:	mov	r8, sl
    b3a4:	beq	b3c4 <blkid_probe_get_size@plt+0x3eac>
    b3a8:	cmp	sl, #0
    b3ac:	bne	b394 <blkid_probe_get_size@plt+0x3e7c>
    b3b0:	ldr	r9, [sp, #36]	; 0x24
    b3b4:	ldr	r8, [sp, #40]	; 0x28
    b3b8:	ldr	r6, [sp, #44]	; 0x2c
    b3bc:	mov	r4, sl
    b3c0:	b	ae8c <blkid_probe_get_size@plt+0x3974>
    b3c4:	add	r2, r7, sl
    b3c8:	b	b3d0 <blkid_probe_get_size@plt+0x3eb8>
    b3cc:	mov	r8, sl
    b3d0:	cmp	sl, #0
    b3d4:	beq	b3b0 <blkid_probe_get_size@plt+0x3e98>
    b3d8:	ldrb	r1, [r2, #-1]!
    b3dc:	sub	sl, sl, #1
    b3e0:	cmp	r1, #47	; 0x2f
    b3e4:	beq	b3cc <blkid_probe_get_size@plt+0x3eb4>
    b3e8:	mov	r1, r8
    b3ec:	mov	r0, r7
    b3f0:	bl	68dc <strndup@plt>
    b3f4:	subs	r6, r0, #0
    b3f8:	beq	b488 <blkid_probe_get_size@plt+0x3f70>
    b3fc:	mov	r1, r6
    b400:	mov	r0, r5
    b404:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    b408:	subs	r4, r0, #0
    b40c:	bne	b49c <blkid_probe_get_size@plt+0x3f84>
    b410:	mov	r0, r6
    b414:	bl	6e1c <rmdir@plt>
    b418:	mov	r9, r0
    b41c:	mov	r0, r6
    b420:	bl	69f0 <free@plt>
    b424:	cmp	r9, #0
    b428:	blt	b438 <blkid_probe_get_size@plt+0x3f20>
    b42c:	add	r3, r7, r8
    b430:	ldrb	r2, [r3, #-1]
    b434:	b	b38c <blkid_probe_get_size@plt+0x3e74>
    b438:	bl	732c <__errno_location@plt>
    b43c:	ldr	r2, [r0]
    b440:	cmp	r2, #2
    b444:	beq	b42c <blkid_probe_get_size@plt+0x3f14>
    b448:	ldr	r9, [sp, #36]	; 0x24
    b44c:	ldr	r8, [sp, #40]	; 0x28
    b450:	ldr	r6, [sp, #44]	; 0x2c
    b454:	b	ae8c <blkid_probe_get_size@plt+0x3974>
    b458:	mov	r0, r3
    b45c:	mov	r2, r3
    b460:	b	b0b8 <blkid_probe_get_size@plt+0x3ba0>
    b464:	mov	r0, sl
    b468:	sub	r1, r5, #8
    b46c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    b470:	ldr	r2, [r5, #-8]
    b474:	cmp	r2, #0
    b478:	beq	ae30 <blkid_probe_get_size@plt+0x3918>
    b47c:	ldr	r0, [pc, #316]	; b5c0 <blkid_probe_get_size@plt+0x40a8>
    b480:	add	r0, pc, r0
    b484:	b	ae34 <blkid_probe_get_size@plt+0x391c>
    b488:	mov	r4, r6
    b48c:	ldr	r9, [sp, #36]	; 0x24
    b490:	ldr	r8, [sp, #40]	; 0x28
    b494:	ldr	r6, [sp, #44]	; 0x2c
    b498:	b	ae8c <blkid_probe_get_size@plt+0x3974>
    b49c:	mov	r4, r6
    b4a0:	mov	r0, r4
    b4a4:	ldr	r9, [sp, #36]	; 0x24
    b4a8:	ldr	r8, [sp, #40]	; 0x28
    b4ac:	ldr	r6, [sp, #44]	; 0x2c
    b4b0:	bl	69f0 <free@plt>
    b4b4:	b	b250 <blkid_probe_get_size@plt+0x3d38>
    b4b8:	mov	r0, r3
    b4bc:	sub	r1, r5, #8
    b4c0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    b4c4:	ldr	r0, [r5, #-8]
    b4c8:	cmp	r0, #0
    b4cc:	beq	b0b4 <blkid_probe_get_size@plt+0x3b9c>
    b4d0:	ldr	r2, [pc, #236]	; b5c4 <blkid_probe_get_size@plt+0x40ac>
    b4d4:	add	r2, pc, r2
    b4d8:	b	b0b8 <blkid_probe_get_size@plt+0x3ba0>
    b4dc:	mov	r6, r0
    b4e0:	ldr	r0, [r5, #-24]	; 0xffffffe8
    b4e4:	ldr	r8, [sp, #52]	; 0x34
    b4e8:	cmp	r0, #0
    b4ec:	ldr	r7, [sp, #48]	; 0x30
    b4f0:	ldr	fp, [sp, #56]	; 0x38
    b4f4:	beq	b4fc <blkid_probe_get_size@plt+0x3fe4>
    b4f8:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
    b4fc:	ldr	r0, [r5, #-32]	; 0xffffffe0
    b500:	bl	69f0 <free@plt>
    b504:	ldr	r0, [sp, #44]	; 0x2c
    b508:	bl	6aa4 <closedir@plt>
    b50c:	b	ae14 <blkid_probe_get_size@plt+0x38fc>
    b510:	bl	6aa4 <closedir@plt>
    b514:	mvn	r6, #1
    b518:	b	ae14 <blkid_probe_get_size@plt+0x38fc>
    b51c:	bl	6fb4 <__stack_chk_fail@plt>
    b520:	andeq	ip, r8, ip, ror #30
    b524:	andeq	r0, r0, ip, lsr r4
    b528:	andeq	sp, r8, r4, ror #9
    b52c:	andeq	r9, r5, r4, asr r9
    b530:	andeq	sl, r5, r8, ror #7
    b534:	andeq	sl, r5, r0, asr r2
    b538:	andeq	sl, r5, r4, lsl r4
    b53c:	andeq	sl, r5, r8, lsl #8
    b540:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    b544:	andeq	sl, r5, r4, lsl #7
    b548:	andeq	sp, r8, r0, lsr #6
    b54c:	muleq	r5, r0, r7
    b550:	andeq	sl, r5, ip, asr #6
    b554:	muleq	r5, r4, r0
    b558:	ldrdeq	lr, [r2], -r0
    b55c:	andeq	r8, r8, r1, asr #4
    b560:	andeq	r9, r5, ip, asr #13
    b564:	andeq	sl, r5, r8, ror #16
    b568:	andeq	r9, r5, r0, ror #31
    b56c:	andeq	r9, r5, r0, lsr #13
    b570:	strdeq	r9, [r5], -r8
    b574:			; <UNDEFINED> instruction: 0x00059fb4
    b578:	andeq	r9, r5, r4, ror r6
    b57c:	muleq	r5, r0, pc	; <UNPREDICTABLE>
    b580:	andeq	r9, r5, r4, ror #11
    b584:	andeq	r9, r5, r0, ror #11
    b588:	andeq	r9, r5, ip, ror #29
    b58c:	andeq	sp, r8, ip, lsr #2
    b590:	muleq	r8, r8, r0
    b594:	andeq	sl, r5, r0, lsr #1
    b598:	andeq	r9, r5, r8, lsl #28
    b59c:	ldrdeq	r9, [r5], -r0
    b5a0:			; <UNDEFINED> instruction: 0x00059cb8
    b5a4:	andeq	r9, r5, r8, lsl r3
    b5a8:	andeq	r9, r5, r0, asr #28
    b5ac:	andeq	r9, r5, ip, asr lr
    b5b0:	andeq	r9, r5, ip, ror #5
    b5b4:	andeq	r9, r5, r8, lsl #24
    b5b8:	andeq	r9, r5, r4, ror #23
    b5bc:	andeq	ip, r6, r4, asr #24
    b5c0:			; <UNDEFINED> instruction: 0x00059ab8
    b5c4:	andeq	r9, r5, r4, ror #20
    b5c8:	push	{r4, r5, r6, r7, lr}
    b5cc:	subs	r7, r2, #0
    b5d0:	sub	sp, sp, #20
    b5d4:	beq	b734 <blkid_probe_get_size@plt+0x421c>
    b5d8:	ldr	r3, [pc, #472]	; b7b8 <blkid_probe_get_size@plt+0x42a0>
    b5dc:	ldr	r2, [r1, #8]
    b5e0:	add	r3, pc, r3
    b5e4:	cmp	r2, #1
    b5e8:	mov	r4, r0
    b5ec:	mov	r5, r1
    b5f0:	ldr	r3, [r3, #4]
    b5f4:	beq	b67c <blkid_probe_get_size@plt+0x4164>
    b5f8:	blt	b630 <blkid_probe_get_size@plt+0x4118>
    b5fc:	cmp	r2, #3
    b600:	bgt	b630 <blkid_probe_get_size@plt+0x4118>
    b604:	cmp	r3, #2
    b608:	bgt	b760 <blkid_probe_get_size@plt+0x4248>
    b60c:	mvn	r6, #4
    b610:	cmp	r4, #0
    b614:	ldrne	r0, [r4, #8]
    b618:	beq	b7b0 <blkid_probe_get_size@plt+0x4298>
    b61c:	mov	r1, r6
    b620:	bl	2fcb8 <blkid_probe_get_size@plt+0x287a0>
    b624:	mov	r0, #1
    b628:	add	sp, sp, #20
    b62c:	pop	{r4, r5, r6, r7, pc}
    b630:	cmp	r3, #2
    b634:	ble	b60c <blkid_probe_get_size@plt+0x40f4>
    b638:	ldr	r2, [pc, #380]	; b7bc <blkid_probe_get_size@plt+0x42a4>
    b63c:	ldr	r3, [pc, #380]	; b7c0 <blkid_probe_get_size@plt+0x42a8>
    b640:	add	r2, pc, r2
    b644:	ldr	r1, [r7]
    b648:	add	r3, pc, r3
    b64c:	str	r2, [sp, #4]
    b650:	ldr	r2, [pc, #364]	; b7c4 <blkid_probe_get_size@plt+0x42ac>
    b654:	add	r3, r3, #196	; 0xc4
    b658:	str	r1, [sp, #8]
    b65c:	str	r3, [sp]
    b660:	add	r2, pc, r2
    b664:	ldr	r3, [pc, #348]	; b7c8 <blkid_probe_get_size@plt+0x42b0>
    b668:	mov	r1, #0
    b66c:	ldr	r0, [pc, #344]	; b7cc <blkid_probe_get_size@plt+0x42b4>
    b670:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b674:	mvn	r6, #4
    b678:	b	b610 <blkid_probe_get_size@plt+0x40f8>
    b67c:	ldr	r6, [r1, #20]
    b680:	cmp	r6, #0
    b684:	bne	b6d4 <blkid_probe_get_size@plt+0x41bc>
    b688:	cmp	r3, #6
    b68c:	ble	b610 <blkid_probe_get_size@plt+0x40f8>
    b690:	ldr	r2, [pc, #312]	; b7d0 <blkid_probe_get_size@plt+0x42b8>
    b694:	ldr	r3, [pc, #312]	; b7d4 <blkid_probe_get_size@plt+0x42bc>
    b698:	add	r2, pc, r2
    b69c:	ldr	r1, [r7]
    b6a0:	add	r3, pc, r3
    b6a4:	str	r2, [sp, #4]
    b6a8:	ldr	r2, [pc, #296]	; b7d8 <blkid_probe_get_size@plt+0x42c0>
    b6ac:	add	r3, r3, #196	; 0xc4
    b6b0:	str	r1, [sp, #8]
    b6b4:	str	r3, [sp]
    b6b8:	mov	r1, r6
    b6bc:	ldr	r3, [pc, #280]	; b7dc <blkid_probe_get_size@plt+0x42c4>
    b6c0:	add	r2, pc, r2
    b6c4:	ldr	r0, [pc, #276]	; b7e0 <blkid_probe_get_size@plt+0x42c8>
    b6c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b6cc:	ldr	r6, [r5, #20]
    b6d0:	b	b610 <blkid_probe_get_size@plt+0x40f8>
    b6d4:	ldrb	r2, [r7, #32]
    b6d8:	cmp	r2, #0
    b6dc:	moveq	r0, #4
    b6e0:	movne	r0, #7
    b6e4:	cmp	r3, r0
    b6e8:	blt	b610 <blkid_probe_get_size@plt+0x40f8>
    b6ec:	ldr	r2, [pc, #240]	; b7e4 <blkid_probe_get_size@plt+0x42cc>
    b6f0:	ldr	r3, [pc, #240]	; b7e8 <blkid_probe_get_size@plt+0x42d0>
    b6f4:	add	r2, pc, r2
    b6f8:	str	r6, [sp, #12]
    b6fc:	add	r3, pc, r3
    b700:	ldr	r1, [r7]
    b704:	str	r2, [sp, #4]
    b708:	ldr	r2, [pc, #220]	; b7ec <blkid_probe_get_size@plt+0x42d4>
    b70c:	add	r3, r3, #196	; 0xc4
    b710:	str	r1, [sp, #8]
    b714:	str	r3, [sp]
    b718:	orr	r0, r0, #1024	; 0x400
    b71c:	ldr	r3, [pc, #204]	; b7f0 <blkid_probe_get_size@plt+0x42d8>
    b720:	add	r2, pc, r2
    b724:	mov	r1, #0
    b728:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b72c:	ldr	r6, [r5, #20]
    b730:	b	b610 <blkid_probe_get_size@plt+0x40f8>
    b734:	ldr	r2, [pc, #184]	; b7f4 <blkid_probe_get_size@plt+0x42dc>
    b738:	ldr	r1, [pc, #184]	; b7f8 <blkid_probe_get_size@plt+0x42e0>
    b73c:	add	r2, pc, r2
    b740:	add	r2, r2, #176	; 0xb0
    b744:	str	r2, [sp]
    b748:	ldr	r2, [pc, #172]	; b7fc <blkid_probe_get_size@plt+0x42e4>
    b74c:	ldr	r3, [pc, #172]	; b800 <blkid_probe_get_size@plt+0x42e8>
    b750:	add	r2, pc, r2
    b754:	add	r1, pc, r1
    b758:	mov	r0, #1
    b75c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    b760:	ldr	r0, [r1, #20]
    b764:	bl	3e964 <blkid_probe_get_size@plt+0x3744c>
    b768:	ldr	ip, [pc, #148]	; b804 <blkid_probe_get_size@plt+0x42ec>
    b76c:	ldr	lr, [pc, #148]	; b808 <blkid_probe_get_size@plt+0x42f0>
    b770:	add	ip, pc, ip
    b774:	ldr	r2, [pc, #144]	; b80c <blkid_probe_get_size@plt+0x42f4>
    b778:	add	lr, pc, lr
    b77c:	add	ip, ip, #196	; 0xc4
    b780:	ldr	r3, [pc, #136]	; b810 <blkid_probe_get_size@plt+0x42f8>
    b784:	add	r2, pc, r2
    b788:	mov	r1, #0
    b78c:	mvn	r6, #4
    b790:	str	r0, [sp, #12]
    b794:	ldr	r0, [r7]
    b798:	str	ip, [sp]
    b79c:	str	r0, [sp, #8]
    b7a0:	str	lr, [sp, #4]
    b7a4:	ldr	r0, [pc, #32]	; b7cc <blkid_probe_get_size@plt+0x42b4>
    b7a8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b7ac:	b	b610 <blkid_probe_get_size@plt+0x40f8>
    b7b0:	bl	2fc20 <blkid_probe_get_size@plt+0x28708>
    b7b4:	b	b61c <blkid_probe_get_size@plt+0x4104>
    b7b8:	andeq	ip, r8, ip, asr fp
    b7bc:	andeq	r9, r5, r8, lsl #24
    b7c0:	andeq	r8, r5, r8, lsl #31
    b7c4:	andeq	r9, r5, ip, asr fp
    b7c8:	andeq	r0, r0, sp, lsl #4
    b7cc:	andeq	r0, r0, r3, lsl #8
    b7d0:	andeq	r9, r5, r8, asr #22
    b7d4:	andeq	r8, r5, r0, lsr pc
    b7d8:	strdeq	r9, [r5], -ip
    b7dc:	andeq	r0, r0, r2, lsl #4
    b7e0:	andeq	r0, r0, r7, lsl #8
    b7e4:	andeq	r9, r5, r4, lsl #22
    b7e8:	ldrdeq	r8, [r5], -r4
    b7ec:	muleq	r5, ip, sl
    b7f0:	andeq	r0, r0, r5, lsl #4
    b7f4:	muleq	r5, r4, lr
    b7f8:	andeq	r9, r5, r4, lsl #21
    b7fc:	andeq	r9, r5, ip, ror #20
    b800:	strdeq	r0, [r0], -sp
    b804:	andeq	r8, r5, r0, ror #28
    b808:	andeq	r9, r5, r8, lsr #21
    b80c:	andeq	r9, r5, r8, lsr sl
    b810:	andeq	r0, r0, sl, lsl #4
    b814:	ldr	r3, [pc, #224]	; b8fc <blkid_probe_get_size@plt+0x43e4>
    b818:	ldr	r2, [pc, #224]	; b900 <blkid_probe_get_size@plt+0x43e8>
    b81c:	add	r3, pc, r3
    b820:	push	{r4, r5, r6, r7, lr}
    b824:	sub	sp, sp, #100	; 0x64
    b828:	ldr	r4, [r3, r2]
    b82c:	ldr	r1, [sp, #120]	; 0x78
    b830:	ldr	r3, [r4]
    b834:	cmp	r1, #0
    b838:	str	r3, [sp, #92]	; 0x5c
    b83c:	beq	b8cc <blkid_probe_get_size@plt+0x43b4>
    b840:	ldr	r3, [pc, #188]	; b904 <blkid_probe_get_size@plt+0x43ec>
    b844:	add	r3, pc, r3
    b848:	ldr	r3, [r3, #4]
    b84c:	cmp	r3, #3
    b850:	ble	b8b0 <blkid_probe_get_size@plt+0x4398>
    b854:	ldr	r6, [pc, #172]	; b908 <blkid_probe_get_size@plt+0x43f0>
    b858:	mov	r7, #0
    b85c:	ldrd	r2, [r1, #8]
    b860:	add	r0, sp, #28
    b864:	strd	r6, [sp]
    b868:	ldm	r1, {r5, r6}
    b86c:	bl	47f58 <blkid_probe_get_size@plt+0x40a40>
    b870:	ldr	r2, [pc, #148]	; b90c <blkid_probe_get_size@plt+0x43f4>
    b874:	ldr	r3, [pc, #148]	; b910 <blkid_probe_get_size@plt+0x43f8>
    b878:	add	r2, pc, r2
    b87c:	add	r3, pc, r3
    b880:	str	r2, [sp, #4]
    b884:	ldr	r2, [pc, #136]	; b914 <blkid_probe_get_size@plt+0x43fc>
    b888:	add	r3, r3, #244	; 0xf4
    b88c:	str	r3, [sp]
    b890:	str	r6, [sp, #12]
    b894:	str	r5, [sp, #8]
    b898:	mov	r3, #500	; 0x1f4
    b89c:	add	r2, pc, r2
    b8a0:	mov	r1, #0
    b8a4:	str	r0, [sp, #16]
    b8a8:	ldr	r0, [pc, #104]	; b918 <blkid_probe_get_size@plt+0x4400>
    b8ac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b8b0:	ldr	r2, [sp, #92]	; 0x5c
    b8b4:	ldr	r3, [r4]
    b8b8:	mov	r0, #1
    b8bc:	cmp	r2, r3
    b8c0:	bne	b8f8 <blkid_probe_get_size@plt+0x43e0>
    b8c4:	add	sp, sp, #100	; 0x64
    b8c8:	pop	{r4, r5, r6, r7, pc}
    b8cc:	ldr	r2, [pc, #72]	; b91c <blkid_probe_get_size@plt+0x4404>
    b8d0:	ldr	r1, [pc, #72]	; b920 <blkid_probe_get_size@plt+0x4408>
    b8d4:	add	r2, pc, r2
    b8d8:	add	r2, r2, #216	; 0xd8
    b8dc:	str	r2, [sp]
    b8e0:	ldr	r2, [pc, #60]	; b924 <blkid_probe_get_size@plt+0x440c>
    b8e4:	ldr	r3, [pc, #60]	; b928 <blkid_probe_get_size@plt+0x4410>
    b8e8:	add	r2, pc, r2
    b8ec:	add	r1, pc, r1
    b8f0:	mov	r0, #1
    b8f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    b8f8:	bl	6fb4 <__stack_chk_fail@plt>
    b8fc:	andeq	ip, r8, ip, asr #6
    b900:	andeq	r0, r0, ip, lsr r4
    b904:	strdeq	ip, [r8], -r8
    b908:	andeq	r4, pc, r0, asr #4
    b90c:	strdeq	r9, [r5], -ip
    b910:	andeq	r8, r5, r4, asr sp
    b914:	andeq	r9, r5, r0, lsr #18
    b918:	andeq	r0, r0, r4, lsl #8
    b91c:	strdeq	r8, [r5], -ip
    b920:	andeq	r9, r5, ip, ror #17
    b924:	ldrdeq	r9, [r5], -r4
    b928:	strdeq	r0, [r0], -r1
    b92c:	ldr	r3, [pc, #240]	; ba24 <blkid_probe_get_size@plt+0x450c>
    b930:	ldr	r2, [pc, #240]	; ba28 <blkid_probe_get_size@plt+0x4510>
    b934:	add	r3, pc, r3
    b938:	push	{r4, r5, r6, r7, lr}
    b93c:	sub	sp, sp, #100	; 0x64
    b940:	ldr	r5, [r3, r2]
    b944:	ldr	r4, [sp, #120]	; 0x78
    b948:	ldr	r3, [r5]
    b94c:	cmp	r4, #0
    b950:	str	r3, [sp, #92]	; 0x5c
    b954:	beq	b9f4 <blkid_probe_get_size@plt+0x44dc>
    b958:	mov	r1, #9
    b95c:	ldr	r0, [r4, #4]
    b960:	bl	39b58 <blkid_probe_get_size@plt+0x32640>
    b964:	ldr	r3, [pc, #192]	; ba2c <blkid_probe_get_size@plt+0x4514>
    b968:	add	r3, pc, r3
    b96c:	ldr	r3, [r3, #4]
    b970:	cmp	r3, #2
    b974:	ble	b9d8 <blkid_probe_get_size@plt+0x44c0>
    b978:	ldr	r6, [pc, #176]	; ba30 <blkid_probe_get_size@plt+0x4518>
    b97c:	mov	r7, #0
    b980:	ldrd	r2, [r4, #16]
    b984:	add	r0, sp, #28
    b988:	strd	r6, [sp]
    b98c:	ldr	r6, [r4]
    b990:	ldr	r4, [r4, #4]
    b994:	bl	47f58 <blkid_probe_get_size@plt+0x40a40>
    b998:	ldr	r2, [pc, #148]	; ba34 <blkid_probe_get_size@plt+0x451c>
    b99c:	ldr	r3, [pc, #148]	; ba38 <blkid_probe_get_size@plt+0x4520>
    b9a0:	add	r2, pc, r2
    b9a4:	add	r3, pc, r3
    b9a8:	str	r2, [sp, #4]
    b9ac:	ldr	r2, [pc, #136]	; ba3c <blkid_probe_get_size@plt+0x4524>
    b9b0:	add	r3, r3, #292	; 0x124
    b9b4:	str	r3, [sp]
    b9b8:	str	r4, [sp, #12]
    b9bc:	str	r6, [sp, #8]
    b9c0:	mov	r3, #488	; 0x1e8
    b9c4:	add	r2, pc, r2
    b9c8:	mov	r1, #0
    b9cc:	str	r0, [sp, #16]
    b9d0:	ldr	r0, [pc, #104]	; ba40 <blkid_probe_get_size@plt+0x4528>
    b9d4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    b9d8:	ldr	r2, [sp, #92]	; 0x5c
    b9dc:	ldr	r3, [r5]
    b9e0:	mov	r0, #1
    b9e4:	cmp	r2, r3
    b9e8:	bne	ba20 <blkid_probe_get_size@plt+0x4508>
    b9ec:	add	sp, sp, #100	; 0x64
    b9f0:	pop	{r4, r5, r6, r7, pc}
    b9f4:	ldr	r2, [pc, #72]	; ba44 <blkid_probe_get_size@plt+0x452c>
    b9f8:	ldr	r1, [pc, #72]	; ba48 <blkid_probe_get_size@plt+0x4530>
    b9fc:	add	r2, pc, r2
    ba00:	add	r2, r2, #272	; 0x110
    ba04:	str	r2, [sp]
    ba08:	ldr	r2, [pc, #60]	; ba4c <blkid_probe_get_size@plt+0x4534>
    ba0c:	ldr	r3, [pc, #60]	; ba50 <blkid_probe_get_size@plt+0x4538>
    ba10:	add	r2, pc, r2
    ba14:	add	r1, pc, r1
    ba18:	mov	r0, #1
    ba1c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    ba20:	bl	6fb4 <__stack_chk_fail@plt>
    ba24:	andeq	ip, r8, r4, lsr r2
    ba28:	andeq	r0, r0, ip, lsr r4
    ba2c:	ldrdeq	ip, [r8], -r4
    ba30:	andeq	r4, pc, r0, asr #4
    ba34:	andeq	r9, r5, r4, lsl r9
    ba38:	andeq	r8, r5, ip, lsr #24
    ba3c:	strdeq	r9, [r5], -r8
    ba40:	andeq	r0, r0, r3, lsl #8
    ba44:	ldrdeq	r8, [r5], -r4
    ba48:	andeq	r9, r5, r4, asr #15
    ba4c:	andeq	r9, r5, ip, lsr #15
    ba50:	andeq	r0, r0, r3, ror #3
    ba54:	ldr	r2, [pc, #792]	; bd74 <blkid_probe_get_size@plt+0x485c>
    ba58:	ldr	r0, [pc, #792]	; bd78 <blkid_probe_get_size@plt+0x4860>
    ba5c:	add	r2, pc, r2
    ba60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ba64:	sub	sp, sp, #4096	; 0x1000
    ba68:	ldr	r7, [r2, r0]
    ba6c:	sub	sp, sp, #32
    ba70:	subs	r4, r3, #0
    ba74:	mov	r3, r2
    ba78:	add	r2, sp, #4096	; 0x1000
    ba7c:	add	r2, r2, #28
    ba80:	ldr	r3, [r7]
    ba84:	str	r3, [r2]
    ba88:	beq	bc8c <blkid_probe_get_size@plt+0x4774>
    ba8c:	ldr	r3, [r4, #36]	; 0x24
    ba90:	mov	r6, r1
    ba94:	cmp	r3, r1
    ba98:	bne	bcb8 <blkid_probe_get_size@plt+0x47a0>
    ba9c:	ldr	r5, [r4, #44]	; 0x2c
    baa0:	cmp	r5, #0
    baa4:	bne	bcf0 <blkid_probe_get_size@plt+0x47d8>
    baa8:	ldr	r2, [pc, #716]	; bd7c <blkid_probe_get_size@plt+0x4864>
    baac:	add	r5, sp, #28
    bab0:	mov	r1, r5
    bab4:	mov	r0, r6
    bab8:	bl	6d74 <read@plt>
    babc:	cmp	r0, #0
    bac0:	blt	bbcc <blkid_probe_get_size@plt+0x46b4>
    bac4:	mov	r3, #0
    bac8:	strb	r3, [r5, r0]
    bacc:	ldr	r3, [r4, #36]	; 0x24
    bad0:	cmp	r3, r6
    bad4:	beq	bc50 <blkid_probe_get_size@plt+0x4738>
    bad8:	cmp	r0, #0
    badc:	beq	bc28 <blkid_probe_get_size@plt+0x4710>
    bae0:	ldr	r3, [r4, #40]	; 0x28
    bae4:	cmp	r3, #0
    bae8:	blt	bc28 <blkid_probe_get_size@plt+0x4710>
    baec:	cmp	r5, #0
    baf0:	beq	bd18 <blkid_probe_get_size@plt+0x4800>
    baf4:	ldr	r1, [pc, #644]	; bd80 <blkid_probe_get_size@plt+0x4868>
    baf8:	mov	r0, r5
    bafc:	mov	r2, #0
    bb00:	add	r1, pc, r1
    bb04:	bl	3d204 <blkid_probe_get_size@plt+0x35cec>
    bb08:	subs	sl, r0, #0
    bb0c:	beq	bc28 <blkid_probe_get_size@plt+0x4710>
    bb10:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
    bb14:	cmp	r0, #0
    bb18:	beq	bb38 <blkid_probe_get_size@plt+0x4620>
    bb1c:	sub	r5, r0, #-1073741823	; 0xc0000001
    bb20:	ldr	r0, [sl, r5, lsl #2]
    bb24:	cmp	r0, #0
    bb28:	beq	bc70 <blkid_probe_get_size@plt+0x4758>
    bb2c:	ldrb	r3, [r0]
    bb30:	cmp	r3, #0
    bb34:	beq	bc70 <blkid_probe_get_size@plt+0x4758>
    bb38:	ldr	r8, [pc, #580]	; bd84 <blkid_probe_get_size@plt+0x486c>
    bb3c:	ldr	r9, [pc, #580]	; bd88 <blkid_probe_get_size@plt+0x4870>
    bb40:	add	r8, pc, r8
    bb44:	add	r9, pc, r9
    bb48:	add	r8, r8, #324	; 0x144
    bb4c:	mov	r5, sl
    bb50:	b	bb98 <blkid_probe_get_size@plt+0x4680>
    bb54:	ldr	r0, [pc, #560]	; bd8c <blkid_probe_get_size@plt+0x4874>
    bb58:	add	r0, pc, r0
    bb5c:	ldr	r2, [pc, #556]	; bd90 <blkid_probe_get_size@plt+0x4878>
    bb60:	str	r3, [sp, #16]
    bb64:	add	r2, pc, r2
    bb68:	str	r2, [sp, #4]
    bb6c:	ldr	r2, [pc, #544]	; bd94 <blkid_probe_get_size@plt+0x487c>
    bb70:	str	r0, [sp, #12]
    bb74:	str	r1, [sp, #8]
    bb78:	str	r8, [sp]
    bb7c:	ldr	r3, [pc, #532]	; bd98 <blkid_probe_get_size@plt+0x4880>
    bb80:	add	r2, pc, r2
    bb84:	mov	r1, #0
    bb88:	ldr	r0, [pc, #524]	; bd9c <blkid_probe_get_size@plt+0x4884>
    bb8c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    bb90:	cmp	r5, #0
    bb94:	beq	bc80 <blkid_probe_get_size@plt+0x4768>
    bb98:	ldr	r3, [r5], #4
    bb9c:	cmp	r3, #0
    bba0:	beq	bc80 <blkid_probe_get_size@plt+0x4768>
    bba4:	ldr	r2, [r9, #4]
    bba8:	cmp	r2, #6
    bbac:	ble	bb90 <blkid_probe_get_size@plt+0x4678>
    bbb0:	ldr	r2, [r4, #36]	; 0x24
    bbb4:	ldr	r1, [r4]
    bbb8:	cmp	r2, r6
    bbbc:	bne	bb54 <blkid_probe_get_size@plt+0x463c>
    bbc0:	ldr	r0, [pc, #472]	; bda0 <blkid_probe_get_size@plt+0x4888>
    bbc4:	add	r0, pc, r0
    bbc8:	b	bb5c <blkid_probe_get_size@plt+0x4644>
    bbcc:	bl	732c <__errno_location@plt>
    bbd0:	ldr	r1, [r0]
    bbd4:	cmp	r1, #11
    bbd8:	beq	bc28 <blkid_probe_get_size@plt+0x4710>
    bbdc:	ldr	r3, [pc, #448]	; bda4 <blkid_probe_get_size@plt+0x488c>
    bbe0:	add	r3, pc, r3
    bbe4:	ldr	r3, [r3, #4]
    bbe8:	cmp	r3, #2
    bbec:	ble	bc28 <blkid_probe_get_size@plt+0x4710>
    bbf0:	ldr	r2, [pc, #432]	; bda8 <blkid_probe_get_size@plt+0x4890>
    bbf4:	ldr	r3, [pc, #432]	; bdac <blkid_probe_get_size@plt+0x4894>
    bbf8:	add	r2, pc, r2
    bbfc:	ldr	r0, [r4]
    bc00:	add	r3, pc, r3
    bc04:	str	r2, [sp, #4]
    bc08:	ldr	r2, [pc, #416]	; bdb0 <blkid_probe_get_size@plt+0x4898>
    bc0c:	add	r3, r3, #324	; 0x144
    bc10:	str	r0, [sp, #8]
    bc14:	str	r3, [sp]
    bc18:	add	r2, pc, r2
    bc1c:	ldr	r3, [pc, #400]	; bdb4 <blkid_probe_get_size@plt+0x489c>
    bc20:	ldr	r0, [pc, #400]	; bdb8 <blkid_probe_get_size@plt+0x48a0>
    bc24:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    bc28:	add	r3, sp, #4096	; 0x1000
    bc2c:	add	r3, r3, #28
    bc30:	ldr	r2, [r3]
    bc34:	ldr	r3, [r7]
    bc38:	mov	r0, #0
    bc3c:	cmp	r2, r3
    bc40:	bne	bd70 <blkid_probe_get_size@plt+0x4858>
    bc44:	add	sp, sp, #4096	; 0x1000
    bc48:	add	sp, sp, #32
    bc4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    bc50:	ldr	r3, [r4, #44]	; 0x2c
    bc54:	cmp	r3, #0
    bc58:	ldrne	r3, [r4, #52]	; 0x34
    bc5c:	addne	r3, r3, r0
    bc60:	strne	r3, [r4, #52]	; 0x34
    bc64:	cmp	r0, #0
    bc68:	bne	bae0 <blkid_probe_get_size@plt+0x45c8>
    bc6c:	b	bc28 <blkid_probe_get_size@plt+0x4710>
    bc70:	bl	69f0 <free@plt>
    bc74:	mov	r3, #0
    bc78:	str	r3, [sl, r5, lsl #2]
    bc7c:	b	bb38 <blkid_probe_get_size@plt+0x4620>
    bc80:	mov	r0, sl
    bc84:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
    bc88:	b	bc28 <blkid_probe_get_size@plt+0x4710>
    bc8c:	ldr	r2, [pc, #296]	; bdbc <blkid_probe_get_size@plt+0x48a4>
    bc90:	ldr	r1, [pc, #296]	; bdc0 <blkid_probe_get_size@plt+0x48a8>
    bc94:	add	r2, pc, r2
    bc98:	add	r2, r2, #312	; 0x138
    bc9c:	str	r2, [sp]
    bca0:	ldr	r2, [pc, #284]	; bdc4 <blkid_probe_get_size@plt+0x48ac>
    bca4:	ldr	r3, [pc, #284]	; bdc8 <blkid_probe_get_size@plt+0x48b0>
    bca8:	add	r2, pc, r2
    bcac:	add	r1, pc, r1
    bcb0:	mov	r0, #1
    bcb4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    bcb8:	ldr	r2, [r4, #40]	; 0x28
    bcbc:	cmp	r2, r1
    bcc0:	beq	ba9c <blkid_probe_get_size@plt+0x4584>
    bcc4:	ldr	r2, [pc, #256]	; bdcc <blkid_probe_get_size@plt+0x48b4>
    bcc8:	ldr	r1, [pc, #256]	; bdd0 <blkid_probe_get_size@plt+0x48b8>
    bccc:	add	r2, pc, r2
    bcd0:	add	r2, r2, #312	; 0x138
    bcd4:	str	r2, [sp]
    bcd8:	ldr	r2, [pc, #244]	; bdd4 <blkid_probe_get_size@plt+0x48bc>
    bcdc:	ldr	r3, [pc, #244]	; bdd8 <blkid_probe_get_size@plt+0x48c0>
    bce0:	add	r2, pc, r2
    bce4:	add	r1, pc, r1
    bce8:	mov	r0, #1
    bcec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    bcf0:	ldr	r1, [r4, #52]	; 0x34
    bcf4:	ldr	r2, [r4, #48]	; 0x30
    bcf8:	cmp	r1, r2
    bcfc:	bcs	bd44 <blkid_probe_get_size@plt+0x482c>
    bd00:	cmp	r3, r6
    bd04:	bne	baa8 <blkid_probe_get_size@plt+0x4590>
    bd08:	sub	r2, r2, #1
    bd0c:	sub	r2, r2, r1
    bd10:	add	r5, r5, r1
    bd14:	b	bab0 <blkid_probe_get_size@plt+0x4598>
    bd18:	ldr	r3, [pc, #188]	; bddc <blkid_probe_get_size@plt+0x48c4>
    bd1c:	ldr	r2, [pc, #188]	; bde0 <blkid_probe_get_size@plt+0x48c8>
    bd20:	add	r3, pc, r3
    bd24:	ldr	r1, [pc, #184]	; bde4 <blkid_probe_get_size@plt+0x48cc>
    bd28:	add	r3, r3, #336	; 0x150
    bd2c:	str	r3, [sp]
    bd30:	mov	r0, r5
    bd34:	ldr	r3, [pc, #172]	; bde8 <blkid_probe_get_size@plt+0x48d0>
    bd38:	add	r2, pc, r2
    bd3c:	add	r1, pc, r1
    bd40:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    bd44:	ldr	r2, [pc, #160]	; bdec <blkid_probe_get_size@plt+0x48d4>
    bd48:	ldr	r1, [pc, #160]	; bdf0 <blkid_probe_get_size@plt+0x48d8>
    bd4c:	add	r2, pc, r2
    bd50:	add	r2, r2, #312	; 0x138
    bd54:	str	r2, [sp]
    bd58:	ldr	r2, [pc, #148]	; bdf4 <blkid_probe_get_size@plt+0x48dc>
    bd5c:	mov	r3, #440	; 0x1b8
    bd60:	add	r2, pc, r2
    bd64:	add	r1, pc, r1
    bd68:	mov	r0, #1
    bd6c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    bd70:	bl	6fb4 <__stack_chk_fail@plt>
    bd74:	andeq	ip, r8, ip, lsl #2
    bd78:	andeq	r0, r0, ip, lsr r4
    bd7c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    bd80:	muleq	r5, r8, r8
    bd84:	muleq	r5, r0, sl
    bd88:	strdeq	ip, [r8], -r8
    bd8c:	muleq	r5, r4, r7
    bd90:	andeq	r9, r5, r8, lsr r8
    bd94:	andeq	r9, r5, ip, lsr r6
    bd98:	ldrdeq	r0, [r0], -r9
    bd9c:	andeq	r0, r0, r7, lsl #8
    bda0:	andeq	sp, r5, r8, asr #15
    bda4:	andeq	ip, r8, ip, asr r5
    bda8:	andeq	r9, r5, r8, ror #14
    bdac:	ldrdeq	r8, [r5], -r0
    bdb0:	andeq	r9, r5, r4, lsr #11
    bdb4:	andeq	r0, r0, r5, asr #3
    bdb8:	andeq	r0, r0, r3, lsl #8
    bdbc:	andeq	r8, r5, ip, lsr r9
    bdc0:	andeq	r9, r5, ip, lsr #10
    bdc4:	andeq	r9, r5, r4, lsl r5
    bdc8:			; <UNDEFINED> instruction: 0x000001b6
    bdcc:	andeq	r8, r5, r4, lsl #18
    bdd0:	andeq	r9, r5, ip, lsl #12
    bdd4:	ldrdeq	r9, [r5], -ip
    bdd8:			; <UNDEFINED> instruction: 0x000001b7
    bddc:			; <UNDEFINED> instruction: 0x000588b0
    bde0:	andeq	r9, r5, ip, asr #12
    bde4:	andeq	r4, r6, ip, lsr r6
    bde8:	andeq	r0, r0, r2, lsr #2
    bdec:	andeq	r8, r5, r4, lsl #17
    bdf0:	andeq	r9, r5, r0, asr #11
    bdf4:	andeq	r9, r5, ip, asr r4
    bdf8:	ldr	ip, [pc, #412]	; bf9c <blkid_probe_get_size@plt+0x4a84>
    bdfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    be00:	add	ip, pc, ip
    be04:	ldr	lr, [pc, #404]	; bfa0 <blkid_probe_get_size@plt+0x4a88>
    be08:	sub	sp, sp, #296	; 0x128
    be0c:	add	r5, sp, #12
    be10:	ldr	r6, [ip, lr]
    be14:	mov	r7, r1
    be18:	mov	r8, r2
    be1c:	ldr	lr, [r6]
    be20:	mov	r2, #280	; 0x118
    be24:	mov	r1, #0
    be28:	mov	r4, r0
    be2c:	mov	r0, r5
    be30:	mov	r9, r3
    be34:	str	lr, [sp, #292]	; 0x124
    be38:	bl	6c84 <memset@plt>
    be3c:	ldr	r2, [pc, #352]	; bfa4 <blkid_probe_get_size@plt+0x4a8c>
    be40:	ldr	ip, [pc, #352]	; bfa8 <blkid_probe_get_size@plt+0x4a90>
    be44:	add	r2, pc, r2
    be48:	add	r2, r2, #356	; 0x164
    be4c:	mov	r3, r5
    be50:	ldm	r2, {r0, r1, r2}
    be54:	cmp	r9, #0
    be58:	str	ip, [sp, #28]
    be5c:	mov	ip, #0
    be60:	stmia	r3!, {r0, r1}
    be64:	str	ip, [sp, #21]
    be68:	str	r7, [sp, #32]
    be6c:	strb	r2, [r3]
    be70:	str	ip, [sp, #24]
    be74:	streq	r8, [sp, #36]	; 0x24
    be78:	beq	be8c <blkid_probe_get_size@plt+0x4974>
    be7c:	mov	r2, r9
    be80:	mov	r1, #256	; 0x100
    be84:	add	r0, sp, #36	; 0x24
    be88:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
    be8c:	ldrb	r3, [r4, #142]	; 0x8e
    be90:	ldr	r0, [r4, #4]
    be94:	cmp	r3, #0
    be98:	bne	bebc <blkid_probe_get_size@plt+0x49a4>
    be9c:	ldr	r2, [r4, #136]	; 0x88
    bea0:	add	r1, r4, #8
    bea4:	bl	7134 <connect@plt>
    bea8:	cmp	r0, #0
    beac:	blt	bf6c <blkid_probe_get_size@plt+0x4a54>
    beb0:	ldr	r0, [r4, #4]
    beb4:	mov	r3, #1
    beb8:	strb	r3, [r4, #142]	; 0x8e
    bebc:	mov	r3, #0
    bec0:	mov	r2, #280	; 0x118
    bec4:	mov	r1, r5
    bec8:	bl	7344 <send@plt>
    becc:	cmp	r0, #0
    bed0:	blt	bf6c <blkid_probe_get_size@plt+0x4a54>
    bed4:	add	r1, sp, #328	; 0x148
    bed8:	mov	r2, #1000	; 0x3e8
    bedc:	mov	r3, #0
    bee0:	ldrd	r0, [r1]
    bee4:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
    bee8:	add	r1, sp, #328	; 0x148
    beec:	mov	sl, #0
    bef0:	ldrd	r0, [r1]
    bef4:	mov	r9, #1
    bef8:	add	r8, sp, #4
    befc:	orrs	r3, r2, r3
    bf00:	mov	r2, #1000	; 0x3e8
    bf04:	mov	r3, #0
    bf08:	movne	r7, r9
    bf0c:	moveq	r7, sl
    bf10:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
    bf14:	add	r7, r0, r7
    bf18:	ldr	r3, [r4, #4]
    bf1c:	mov	r2, r7
    bf20:	mov	r1, #1
    bf24:	mov	r0, r8
    bf28:	strh	sl, [r5, #-2]
    bf2c:	strh	r9, [r8, #4]
    bf30:	str	r3, [sp, #4]
    bf34:	bl	6da4 <poll@plt>
    bf38:	cmp	r0, #0
    bf3c:	bge	bf7c <blkid_probe_get_size@plt+0x4a64>
    bf40:	bl	732c <__errno_location@plt>
    bf44:	ldr	r0, [r0]
    bf48:	cmp	r0, #4
    bf4c:	beq	bf18 <blkid_probe_get_size@plt+0x4a00>
    bf50:	rsb	r0, r0, #0
    bf54:	ldr	r2, [sp, #292]	; 0x124
    bf58:	ldr	r3, [r6]
    bf5c:	cmp	r2, r3
    bf60:	bne	bf98 <blkid_probe_get_size@plt+0x4a80>
    bf64:	add	sp, sp, #296	; 0x128
    bf68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    bf6c:	bl	732c <__errno_location@plt>
    bf70:	ldr	r0, [r0]
    bf74:	rsb	r0, r0, #0
    bf78:	b	bf54 <blkid_probe_get_size@plt+0x4a3c>
    bf7c:	mvneq	r0, #109	; 0x6d
    bf80:	beq	bf54 <blkid_probe_get_size@plt+0x4a3c>
    bf84:	ldrh	r3, [r8, #6]
    bf88:	tst	r3, #8
    bf8c:	moveq	r0, #0
    bf90:	mvnne	r0, #4
    bf94:	b	bf54 <blkid_probe_get_size@plt+0x4a3c>
    bf98:	bl	6fb4 <__stack_chk_fail@plt>
    bf9c:	andeq	fp, r8, r8, ror #26
    bfa0:	andeq	r0, r0, ip, lsr r4
    bfa4:	andeq	r8, r5, ip, lsl #15
    bfa8:	cdple	13, 10, cr1, cr13, cr10, {7}
    bfac:	ldr	r3, [pc, #1060]	; c3d8 <blkid_probe_get_size@plt+0x4ec0>
    bfb0:	ldr	ip, [pc, #1060]	; c3dc <blkid_probe_get_size@plt+0x4ec4>
    bfb4:	add	r3, pc, r3
    bfb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bfbc:	sub	sp, sp, #140	; 0x8c
    bfc0:	ldr	r5, [r3, ip]
    bfc4:	subs	r4, r0, #0
    bfc8:	ldr	r3, [r5]
    bfcc:	str	r3, [sp, #132]	; 0x84
    bfd0:	beq	c1c4 <blkid_probe_get_size@plt+0x4cac>
    bfd4:	cmp	r1, #0
    bfd8:	mov	r6, r2
    bfdc:	mov	r8, r1
    bfe0:	beq	c080 <blkid_probe_get_size@plt+0x4b68>
    bfe4:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    bfe8:	cmp	r0, #0
    bfec:	beq	c170 <blkid_probe_get_size@plt+0x4c58>
    bff0:	mov	r7, #0
    bff4:	ldr	r1, [pc, #996]	; c3e0 <blkid_probe_get_size@plt+0x4ec8>
    bff8:	mov	r0, r4
    bffc:	add	r1, pc, r1
    c000:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    c004:	cmp	r0, #0
    c008:	beq	c040 <blkid_probe_get_size@plt+0x4b28>
    c00c:	mov	r0, r6
    c010:	mov	r1, r4
    c014:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
    c018:	mov	r6, r0
    c01c:	mov	r0, r7
    c020:	bl	69f0 <free@plt>
    c024:	ldr	r2, [sp, #132]	; 0x84
    c028:	ldr	r3, [r5]
    c02c:	mov	r0, r6
    c030:	cmp	r2, r3
    c034:	bne	c3b4 <blkid_probe_get_size@plt+0x4e9c>
    c038:	add	sp, sp, #140	; 0x8c
    c03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c040:	ldr	r1, [pc, #924]	; c3e4 <blkid_probe_get_size@plt+0x4ecc>
    c044:	mov	r0, r4
    c048:	add	r1, pc, r1
    c04c:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    c050:	cmp	r0, #0
    c054:	beq	c220 <blkid_probe_get_size@plt+0x4d08>
    c058:	mov	r1, r4
    c05c:	add	r2, sp, #24
    c060:	mov	r0, #3
    c064:	bl	6a2c <__xstat64@plt>
    c068:	cmp	r0, #0
    c06c:	bge	c194 <blkid_probe_get_size@plt+0x4c7c>
    c070:	bl	732c <__errno_location@plt>
    c074:	ldr	r6, [r0]
    c078:	rsb	r6, r6, #0
    c07c:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c080:	mov	r1, #1
    c084:	bl	3c664 <blkid_probe_get_size@plt+0x3514c>
    c088:	subs	r7, r0, #0
    c08c:	beq	bff4 <blkid_probe_get_size@plt+0x4adc>
    c090:	mov	r1, #7
    c094:	mov	r0, r4
    c098:	bl	3c664 <blkid_probe_get_size@plt+0x3514c>
    c09c:	cmp	r0, #0
    c0a0:	beq	bff0 <blkid_probe_get_size@plt+0x4ad8>
    c0a4:	mov	r1, #46	; 0x2e
    c0a8:	mov	r0, r4
    c0ac:	bl	7410 <strrchr@plt>
    c0b0:	subs	r7, r0, #0
    c0b4:	beq	c1f8 <blkid_probe_get_size@plt+0x4ce0>
    c0b8:	ldr	r0, [pc, #808]	; c3e8 <blkid_probe_get_size@plt+0x4ed0>
    c0bc:	add	r2, r7, #1
    c0c0:	mov	r1, #11
    c0c4:	add	r0, pc, r0
    c0c8:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
    c0cc:	cmp	r0, #3
    c0d0:	movne	r7, r8
    c0d4:	bne	bff4 <blkid_probe_get_size@plt+0x4adc>
    c0d8:	mov	r1, #64	; 0x40
    c0dc:	mov	r0, r4
    c0e0:	bl	74c4 <strchr@plt>
    c0e4:	cmp	r0, #0
    c0e8:	moveq	r0, r7
    c0ec:	sub	r1, r0, r4
    c0f0:	mov	r0, r4
    c0f4:	bl	68dc <strndup@plt>
    c0f8:	subs	r9, r0, #0
    c0fc:	beq	c3b8 <blkid_probe_get_size@plt+0x4ea0>
    c100:	ldrb	r7, [r9]
    c104:	cmp	r7, #0
    c108:	bne	c228 <blkid_probe_get_size@plt+0x4d10>
    c10c:	bl	69f0 <free@plt>
    c110:	mvn	r6, #21
    c114:	ldr	r3, [pc, #720]	; c3ec <blkid_probe_get_size@plt+0x4ed4>
    c118:	add	r3, pc, r3
    c11c:	ldr	r3, [r3, #4]
    c120:	cmp	r3, #6
    c124:	movle	r7, #0
    c128:	ble	c01c <blkid_probe_get_size@plt+0x4b04>
    c12c:	ldr	r2, [pc, #700]	; c3f0 <blkid_probe_get_size@plt+0x4ed8>
    c130:	ldr	r3, [pc, #700]	; c3f4 <blkid_probe_get_size@plt+0x4edc>
    c134:	add	r2, pc, r2
    c138:	str	r2, [sp, #4]
    c13c:	add	r3, pc, r3
    c140:	ldr	r2, [pc, #688]	; c3f8 <blkid_probe_get_size@plt+0x4ee0>
    c144:	add	r3, r3, #404	; 0x194
    c148:	mov	r1, r6
    c14c:	str	r3, [sp]
    c150:	str	r4, [sp, #8]
    c154:	mov	r3, #31
    c158:	add	r2, pc, r2
    c15c:	ldr	r0, [pc, #664]	; c3fc <blkid_probe_get_size@plt+0x4ee4>
    c160:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c164:	mov	r7, #0
    c168:	mov	r6, r0
    c16c:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c170:	mov	r1, r4
    c174:	mov	r0, r8
    c178:	mvn	r2, #0
    c17c:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
    c180:	subs	r4, r0, #0
    c184:	mov	r7, r4
    c188:	bne	bff4 <blkid_probe_get_size@plt+0x4adc>
    c18c:	mvn	r6, #11
    c190:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c194:	ldr	r3, [sp, #40]	; 0x28
    c198:	and	r3, r3, #61440	; 0xf000
    c19c:	cmp	r3, #24576	; 0x6000
    c1a0:	beq	c1f0 <blkid_probe_get_size@plt+0x4cd8>
    c1a4:	cmp	r3, #8192	; 0x2000
    c1a8:	bne	c2dc <blkid_probe_get_size@plt+0x4dc4>
    c1ac:	mov	r1, #99	; 0x63
    c1b0:	mov	r0, r6
    c1b4:	ldrd	r2, [sp, #56]	; 0x38
    c1b8:	bl	26220 <blkid_probe_get_size@plt+0x1ed08>
    c1bc:	mov	r6, r0
    c1c0:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c1c4:	ldr	r2, [pc, #564]	; c400 <blkid_probe_get_size@plt+0x4ee8>
    c1c8:	ldr	r1, [pc, #564]	; c404 <blkid_probe_get_size@plt+0x4eec>
    c1cc:	add	r2, pc, r2
    c1d0:	add	r2, r2, #372	; 0x174
    c1d4:	str	r2, [sp]
    c1d8:	ldr	r2, [pc, #552]	; c408 <blkid_probe_get_size@plt+0x4ef0>
    c1dc:	mov	r3, #15
    c1e0:	add	r2, pc, r2
    c1e4:	add	r1, pc, r1
    c1e8:	mov	r0, #1
    c1ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    c1f0:	mov	r1, #98	; 0x62
    c1f4:	b	c1b0 <blkid_probe_get_size@plt+0x4c98>
    c1f8:	ldr	r2, [pc, #524]	; c40c <blkid_probe_get_size@plt+0x4ef4>
    c1fc:	ldr	r1, [pc, #524]	; c410 <blkid_probe_get_size@plt+0x4ef8>
    c200:	add	r2, pc, r2
    c204:	add	r2, r2, #384	; 0x180
    c208:	str	r2, [sp]
    c20c:	ldr	r2, [pc, #512]	; c414 <blkid_probe_get_size@plt+0x4efc>
    c210:	mov	r3, #204	; 0xcc
    c214:	add	r2, pc, r2
    c218:	add	r1, pc, r1
    c21c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    c220:	mvn	r6, #21
    c224:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c228:	ldr	r1, [pc, #488]	; c418 <blkid_probe_get_size@plt+0x4f00>
    c22c:	add	r1, pc, r1
    c230:	bl	7314 <strcmp@plt>
    c234:	cmp	r0, #0
    c238:	beq	c2e4 <blkid_probe_get_size@plt+0x4dcc>
    c23c:	mov	r0, r9
    c240:	bl	74e8 <strdup@plt>
    c244:	subs	r3, r0, #0
    c248:	str	r3, [sp, #20]
    c24c:	beq	c3c0 <blkid_probe_get_size@plt+0x4ea8>
    c250:	add	sl, r3, #1
    c254:	mov	r8, r9
    c258:	mov	fp, #47	; 0x2f
    c25c:	b	c270 <blkid_probe_get_size@plt+0x4d58>
    c260:	cmp	r7, #0
    c264:	add	r8, r8, #1
    c268:	add	sl, sl, #1
    c26c:	beq	c308 <blkid_probe_get_size@plt+0x4df0>
    c270:	ldrb	r2, [r8, #1]
    c274:	cmp	r7, #45	; 0x2d
    c278:	strbeq	fp, [sl, #-1]
    c27c:	moveq	r7, r2
    c280:	moveq	r1, sl
    c284:	beq	c260 <blkid_probe_get_size@plt+0x4d48>
    c288:	cmp	r7, #92	; 0x5c
    c28c:	strbne	r7, [sl, #-1]
    c290:	movne	r1, sl
    c294:	movne	r7, r2
    c298:	bne	c260 <blkid_probe_get_size@plt+0x4d48>
    c29c:	cmp	r2, #120	; 0x78
    c2a0:	bne	c334 <blkid_probe_get_size@plt+0x4e1c>
    c2a4:	ldrb	r0, [r8, #2]
    c2a8:	bl	42c4c <blkid_probe_get_size@plt+0x3b734>
    c2ac:	subs	r7, r0, #0
    c2b0:	blt	c334 <blkid_probe_get_size@plt+0x4e1c>
    c2b4:	ldrb	r0, [r8, #3]
    c2b8:	bl	42c4c <blkid_probe_get_size@plt+0x3b734>
    c2bc:	subs	r2, r0, #0
    c2c0:	blt	c334 <blkid_probe_get_size@plt+0x4e1c>
    c2c4:	orr	r2, r2, r7, lsl #4
    c2c8:	strb	r2, [sl, #-1]
    c2cc:	ldrb	r7, [r8, #4]
    c2d0:	mov	r1, sl
    c2d4:	add	r8, r8, #3
    c2d8:	b	c260 <blkid_probe_get_size@plt+0x4d48>
    c2dc:	mvn	r6, #24
    c2e0:	b	c01c <blkid_probe_get_size@plt+0x4b04>
    c2e4:	ldr	r0, [pc, #304]	; c41c <blkid_probe_get_size@plt+0x4f04>
    c2e8:	add	r0, pc, r0
    c2ec:	bl	74e8 <strdup@plt>
    c2f0:	subs	r7, r0, #0
    c2f4:	beq	c3c8 <blkid_probe_get_size@plt+0x4eb0>
    c2f8:	mov	r0, r9
    c2fc:	bl	69f0 <free@plt>
    c300:	mov	r4, r7
    c304:	b	bff4 <blkid_probe_get_size@plt+0x4adc>
    c308:	ldr	r3, [sp, #20]
    c30c:	strb	r7, [r1]
    c310:	ldrb	r3, [r3]
    c314:	cmp	r3, #47	; 0x2f
    c318:	bne	c34c <blkid_probe_get_size@plt+0x4e34>
    c31c:	ldr	r0, [sp, #20]
    c320:	bl	69f0 <free@plt>
    c324:	mov	r0, r9
    c328:	bl	69f0 <free@plt>
    c32c:	mvn	r6, #21
    c330:	b	c114 <blkid_probe_get_size@plt+0x4bfc>
    c334:	ldr	r0, [sp, #20]
    c338:	bl	69f0 <free@plt>
    c33c:	mvn	r6, #21
    c340:	mov	r0, r9
    c344:	bl	69f0 <free@plt>
    c348:	b	c114 <blkid_probe_get_size@plt+0x4bfc>
    c34c:	ldr	r7, [pc, #204]	; c420 <blkid_probe_get_size@plt+0x4f08>
    c350:	ldr	r0, [sp, #20]
    c354:	add	r7, pc, r7
    c358:	mov	r1, r7
    c35c:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
    c360:	cmp	r0, #0
    c364:	bne	c31c <blkid_probe_get_size@plt+0x4e04>
    c368:	ldr	r8, [sp, #20]
    c36c:	mov	r0, r7
    c370:	mov	r1, r8
    c374:	bl	39594 <blkid_probe_get_size@plt+0x3207c>
    c378:	mov	r7, r0
    c37c:	mov	r0, r8
    c380:	bl	69f0 <free@plt>
    c384:	cmp	r7, #0
    c388:	beq	c3c8 <blkid_probe_get_size@plt+0x4eb0>
    c38c:	mov	r0, r7
    c390:	bl	867c <blkid_probe_get_size@plt+0x1164>
    c394:	cmp	r0, #0
    c398:	bne	c2f8 <blkid_probe_get_size@plt+0x4de0>
    c39c:	mov	r0, r7
    c3a0:	bl	69f0 <free@plt>
    c3a4:	mov	r0, r9
    c3a8:	bl	69f0 <free@plt>
    c3ac:	mvn	r6, #21
    c3b0:	b	c114 <blkid_probe_get_size@plt+0x4bfc>
    c3b4:	bl	6fb4 <__stack_chk_fail@plt>
    c3b8:	mvn	r6, #11
    c3bc:	b	c114 <blkid_probe_get_size@plt+0x4bfc>
    c3c0:	mvn	r6, #11
    c3c4:	b	c340 <blkid_probe_get_size@plt+0x4e28>
    c3c8:	mov	r0, r9
    c3cc:	bl	69f0 <free@plt>
    c3d0:	mvn	r6, #11
    c3d4:	b	c114 <blkid_probe_get_size@plt+0x4bfc>
    c3d8:			; <UNDEFINED> instruction: 0x0008bbb4
    c3dc:	andeq	r0, r0, ip, lsr r4
    c3e0:	andeq	r9, r5, r8, lsr #8
    c3e4:	andeq	pc, r5, r8, lsl r7	; <UNPREDICTABLE>
    c3e8:	andeq	sp, r7, r4, asr #27
    c3ec:	andeq	ip, r8, r4, lsr #32
    c3f0:	andeq	r9, r5, r4, asr #5
    c3f4:	muleq	r5, r4, r4
    c3f8:	andeq	r9, r5, r4, asr r2
    c3fc:	andeq	r0, r0, r7, lsl #8
    c400:	andeq	r8, r5, r4, lsl #8
    c404:	andeq	fp, r6, r4, asr pc
    c408:	andeq	r9, r5, ip, asr #3
    c40c:	ldrdeq	r8, [r5], -r0
    c410:	andeq	r9, r5, ip, asr #3
    c414:			; <UNDEFINED> instruction: 0x000591b4
    c418:	andeq	r8, r5, r8, ror #28
    c41c:	ldrdeq	fp, [r6], -r8
    c420:	andeq	fp, r6, ip, ror #24
    c424:	ldr	r0, [pc, #16]	; c43c <blkid_probe_get_size@plt+0x4f24>
    c428:	push	{r4, lr}
    c42c:	add	r0, pc, r0
    c430:	bl	6b4c <puts@plt>
    c434:	mov	r0, #0
    c438:	pop	{r4, pc}
    c43c:	andeq	r9, r5, r0
    c440:	ldr	r3, [pc, #436]	; c5fc <blkid_probe_get_size@plt+0x50e4>
    c444:	ldr	ip, [pc, #436]	; c600 <blkid_probe_get_size@plt+0x50e8>
    c448:	add	r3, pc, r3
    c44c:	push	{r4, r5, r6, lr}
    c450:	sub	sp, sp, #24
    c454:	ldr	r4, [r3, ip]
    c458:	cmp	r1, #0
    c45c:	ldr	r3, [r4]
    c460:	str	r3, [sp, #20]
    c464:	beq	c570 <blkid_probe_get_size@plt+0x5058>
    c468:	cmp	r2, #0
    c46c:	mov	r5, r2
    c470:	beq	c59c <blkid_probe_get_size@plt+0x5084>
    c474:	mov	r6, r0
    c478:	mov	r0, r1
    c47c:	add	r1, sp, #16
    c480:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
    c484:	cmp	r0, #0
    c488:	blt	c4c4 <blkid_probe_get_size@plt+0x4fac>
    c48c:	ldr	r3, [pc, #368]	; c604 <blkid_probe_get_size@plt+0x50ec>
    c490:	ldr	r1, [sp, #16]
    c494:	add	r3, pc, r3
    c498:	ldrb	r3, [r3]
    c49c:	cmp	r3, #0
    c4a0:	bne	c4f8 <blkid_probe_get_size@plt+0x4fe0>
    c4a4:	mov	r0, r5
    c4a8:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
    c4ac:	subs	r1, r0, #0
    c4b0:	beq	c520 <blkid_probe_get_size@plt+0x5008>
    c4b4:	mov	r0, r5
    c4b8:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
    c4bc:	cmp	r0, #0
    c4c0:	beq	c4e0 <blkid_probe_get_size@plt+0x4fc8>
    c4c4:	mov	r0, #0
    c4c8:	ldr	r2, [sp, #20]
    c4cc:	ldr	r3, [r4]
    c4d0:	cmp	r2, r3
    c4d4:	bne	c5f8 <blkid_probe_get_size@plt+0x50e0>
    c4d8:	add	sp, sp, #24
    c4dc:	pop	{r4, r5, r6, pc}
    c4e0:	cmp	r6, #0
    c4e4:	ldrne	r0, [r6, #280]	; 0x118
    c4e8:	beq	c5c8 <blkid_probe_get_size@plt+0x50b0>
    c4ec:	mov	r1, #0
    c4f0:	bl	2fcb8 <blkid_probe_get_size@plt+0x287a0>
    c4f4:	b	c4c8 <blkid_probe_get_size@plt+0x4fb0>
    c4f8:	mov	r2, r1
    c4fc:	ldr	r1, [pc, #260]	; c608 <blkid_probe_get_size@plt+0x50f0>
    c500:	mov	r0, #1
    c504:	add	r1, pc, r1
    c508:	bl	74f4 <__printf_chk@plt>
    c50c:	ldr	r1, [sp, #16]
    c510:	mov	r0, r5
    c514:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
    c518:	subs	r1, r0, #0
    c51c:	bne	c4b4 <blkid_probe_get_size@plt+0x4f9c>
    c520:	ldr	r3, [pc, #228]	; c60c <blkid_probe_get_size@plt+0x50f4>
    c524:	add	r3, pc, r3
    c528:	ldr	r3, [r3, #4]
    c52c:	cmp	r3, #6
    c530:	ble	c4b4 <blkid_probe_get_size@plt+0x4f9c>
    c534:	ldr	r2, [pc, #212]	; c610 <blkid_probe_get_size@plt+0x50f8>
    c538:	ldr	r3, [pc, #212]	; c614 <blkid_probe_get_size@plt+0x50fc>
    c53c:	add	r2, pc, r2
    c540:	ldr	r0, [sp, #16]
    c544:	str	r2, [sp, #4]
    c548:	add	r3, pc, r3
    c54c:	ldr	r2, [pc, #196]	; c618 <blkid_probe_get_size@plt+0x5100>
    c550:	add	r3, r3, #440	; 0x1b8
    c554:	str	r3, [sp]
    c558:	str	r0, [sp, #8]
    c55c:	mov	r3, #75	; 0x4b
    c560:	add	r2, pc, r2
    c564:	ldr	r0, [pc, #176]	; c61c <blkid_probe_get_size@plt+0x5104>
    c568:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c56c:	b	c4b4 <blkid_probe_get_size@plt+0x4f9c>
    c570:	ldr	r2, [pc, #168]	; c620 <blkid_probe_get_size@plt+0x5108>
    c574:	ldr	r1, [pc, #168]	; c624 <blkid_probe_get_size@plt+0x510c>
    c578:	add	r2, pc, r2
    c57c:	add	r2, r2, #416	; 0x1a0
    c580:	str	r2, [sp]
    c584:	ldr	r2, [pc, #156]	; c628 <blkid_probe_get_size@plt+0x5110>
    c588:	mov	r3, #65	; 0x41
    c58c:	add	r2, pc, r2
    c590:	add	r1, pc, r1
    c594:	mov	r0, #1
    c598:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    c59c:	ldr	r2, [pc, #136]	; c62c <blkid_probe_get_size@plt+0x5114>
    c5a0:	ldr	r1, [pc, #136]	; c630 <blkid_probe_get_size@plt+0x5118>
    c5a4:	add	r2, pc, r2
    c5a8:	add	r2, r2, #416	; 0x1a0
    c5ac:	str	r2, [sp]
    c5b0:	ldr	r2, [pc, #124]	; c634 <blkid_probe_get_size@plt+0x511c>
    c5b4:	mov	r3, #66	; 0x42
    c5b8:	add	r2, pc, r2
    c5bc:	add	r1, pc, r1
    c5c0:	mov	r0, #1
    c5c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    c5c8:	ldr	r2, [pc, #104]	; c638 <blkid_probe_get_size@plt+0x5120>
    c5cc:	ldr	r1, [pc, #104]	; c63c <blkid_probe_get_size@plt+0x5124>
    c5d0:	add	r2, pc, r2
    c5d4:	add	r2, r2, #464	; 0x1d0
    c5d8:	str	r2, [sp]
    c5dc:	ldr	r2, [pc, #92]	; c640 <blkid_probe_get_size@plt+0x5128>
    c5e0:	ldr	r3, [pc, #92]	; c644 <blkid_probe_get_size@plt+0x512c>
    c5e4:	add	r2, pc, r2
    c5e8:	add	r1, pc, r1
    c5ec:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    c5f0:	mov	r0, r6
    c5f4:	b	c4ec <blkid_probe_get_size@plt+0x4fd4>
    c5f8:	bl	6fb4 <__stack_chk_fail@plt>
    c5fc:	andeq	fp, r8, r0, lsr #14
    c600:	andeq	r0, r0, ip, lsr r4
    c604:	andeq	fp, r8, r0, asr sp
    c608:	andeq	r8, r5, r8, asr pc
    c60c:	andeq	fp, r8, r8, lsl ip
    c610:	andeq	r8, r5, ip, lsr #30
    c614:	andeq	r8, r5, r8, lsl #1
    c618:	ldrdeq	r8, [r5], -r0
    c61c:	andeq	r0, r0, r7, lsl #8
    c620:	andeq	r8, r5, r8, asr r0
    c624:	strdeq	r9, [r5], -r4
    c628:	andeq	r8, r5, r4, lsr #29
    c62c:	andeq	r8, r5, ip, lsr #32
    c630:	muleq	r5, r4, lr
    c634:	andeq	r8, r5, r8, ror lr
    c638:	andeq	r8, r5, r0
    c63c:	andeq	r7, r6, r8, lsl #16
    c640:	andeq	r8, r5, r0, asr #29
    c644:	andeq	r0, r0, r1, lsl #2
    c648:	push	{r4, r5, r6, r7, r8, lr}
    c64c:	sub	sp, sp, #24
    c650:	ldr	r5, [pc, #944]	; ca08 <blkid_probe_get_size@plt+0x54f0>
    c654:	ldr	r3, [pc, #944]	; ca0c <blkid_probe_get_size@plt+0x54f4>
    c658:	add	r5, pc, r5
    c65c:	mov	r8, r0
    c660:	ldr	r6, [r5, r3]
    c664:	mov	r7, r1
    c668:	mov	r4, #0
    c66c:	ldr	r3, [r6]
    c670:	mov	r1, #7
    c674:	mov	r0, #1
    c678:	str	r3, [sp, #20]
    c67c:	str	r4, [sp, #16]
    c680:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
    c684:	ldr	r3, [pc, #900]	; ca10 <blkid_probe_get_size@plt+0x54f8>
    c688:	ldr	r2, [pc, #900]	; ca14 <blkid_probe_get_size@plt+0x54fc>
    c68c:	str	r4, [sp]
    c690:	mov	r0, r8
    c694:	mov	r1, r7
    c698:	add	r3, pc, r3
    c69c:	add	r2, pc, r2
    c6a0:	bl	70a4 <getopt_long@plt>
    c6a4:	cmp	r0, #0
    c6a8:	blt	c730 <blkid_probe_get_size@plt+0x5218>
    c6ac:	cmp	r0, #86	; 0x56
    c6b0:	beq	c6f0 <blkid_probe_get_size@plt+0x51d8>
    c6b4:	cmp	r0, #104	; 0x68
    c6b8:	beq	c82c <blkid_probe_get_size@plt+0x5314>
    c6bc:	cmp	r0, #63	; 0x3f
    c6c0:	beq	c728 <blkid_probe_get_size@plt+0x5210>
    c6c4:	ldr	r2, [pc, #844]	; ca18 <blkid_probe_get_size@plt+0x5500>
    c6c8:	ldr	r1, [pc, #844]	; ca1c <blkid_probe_get_size@plt+0x5504>
    c6cc:	add	r2, pc, r2
    c6d0:	add	r2, r2, #492	; 0x1ec
    c6d4:	str	r2, [sp]
    c6d8:	ldr	r2, [pc, #832]	; ca20 <blkid_probe_get_size@plt+0x5508>
    c6dc:	mov	r3, #48	; 0x30
    c6e0:	add	r2, pc, r2
    c6e4:	add	r1, pc, r1
    c6e8:	mov	r0, #1
    c6ec:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    c6f0:	ldr	r0, [pc, #812]	; ca24 <blkid_probe_get_size@plt+0x550c>
    c6f4:	add	r0, pc, r0
    c6f8:	bl	6b4c <puts@plt>
    c6fc:	ldr	r0, [sp, #16]
    c700:	cmp	r0, #0
    c704:	beq	c70c <blkid_probe_get_size@plt+0x51f4>
    c708:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
    c70c:	ldr	r2, [sp, #20]
    c710:	ldr	r3, [r6]
    c714:	mov	r0, r4
    c718:	cmp	r2, r3
    c71c:	bne	ca04 <blkid_probe_get_size@plt+0x54ec>
    c720:	add	sp, sp, #24
    c724:	pop	{r4, r5, r6, r7, r8, pc}
    c728:	mvn	r4, #21
    c72c:	b	c6fc <blkid_probe_get_size@plt+0x51e4>
    c730:	ldr	r3, [pc, #752]	; ca28 <blkid_probe_get_size@plt+0x5510>
    c734:	ldr	r0, [pc, #752]	; ca2c <blkid_probe_get_size@plt+0x5514>
    c738:	ldr	r2, [r5, r3]
    c73c:	add	r0, pc, r0
    c740:	ldr	r3, [r2]
    c744:	add	r1, r3, #1
    c748:	str	r1, [r2]
    c74c:	ldr	r1, [r7, r3, lsl #2]
    c750:	lsl	ip, r3, #2
    c754:	cmp	r1, #0
    c758:	str	r1, [r0, #4]
    c75c:	beq	c9b4 <blkid_probe_get_size@plt+0x549c>
    c760:	add	r7, r7, ip
    c764:	add	r3, r3, #2
    c768:	str	r3, [r2]
    c76c:	ldr	r3, [r7, #4]
    c770:	cmp	r3, #0
    c774:	str	r3, [r0, #8]
    c778:	beq	c91c <blkid_probe_get_size@plt+0x5404>
    c77c:	ldr	r5, [pc, #684]	; ca30 <blkid_probe_get_size@plt+0x5518>
    c780:	bl	59124 <blkid_probe_get_size@plt+0x51c0c>
    c784:	add	r5, pc, r5
    c788:	ldr	r4, [r5, #4]
    c78c:	mov	r0, r4
    c790:	bl	58f70 <blkid_probe_get_size@plt+0x51a58>
    c794:	subs	r7, r0, #0
    c798:	bge	c7bc <blkid_probe_get_size@plt+0x52a4>
    c79c:	ldr	r3, [pc, #656]	; ca34 <blkid_probe_get_size@plt+0x551c>
    c7a0:	add	r3, pc, r3
    c7a4:	ldr	r3, [r3, #4]
    c7a8:	cmp	r3, #2
    c7ac:	mvnle	r4, #21
    c7b0:	bgt	c974 <blkid_probe_get_size@plt+0x545c>
    c7b4:	bl	590a8 <blkid_probe_get_size@plt+0x51b90>
    c7b8:	b	c6fc <blkid_probe_get_size@plt+0x51e4>
    c7bc:	ldr	r1, [pc, #628]	; ca38 <blkid_probe_get_size@plt+0x5520>
    c7c0:	add	r2, sp, #16
    c7c4:	add	r1, pc, r1
    c7c8:	ldr	r0, [r5, #8]
    c7cc:	bl	bfac <blkid_probe_get_size@plt+0x4a94>
    c7d0:	subs	r4, r0, #0
    c7d4:	bge	c8ac <blkid_probe_get_size@plt+0x5394>
    c7d8:	ldr	r3, [pc, #604]	; ca3c <blkid_probe_get_size@plt+0x5524>
    c7dc:	add	r3, pc, r3
    c7e0:	ldr	r3, [r3, #4]
    c7e4:	cmp	r3, #2
    c7e8:	ble	c7b4 <blkid_probe_get_size@plt+0x529c>
    c7ec:	ldr	r2, [pc, #588]	; ca40 <blkid_probe_get_size@plt+0x5528>
    c7f0:	ldr	r3, [pc, #588]	; ca44 <blkid_probe_get_size@plt+0x552c>
    c7f4:	add	r2, pc, r2
    c7f8:	ldr	r1, [r5, #8]
    c7fc:	add	r3, pc, r3
    c800:	str	r2, [sp, #4]
    c804:	ldr	r2, [pc, #572]	; ca48 <blkid_probe_get_size@plt+0x5530>
    c808:	add	r3, r3, #516	; 0x204
    c80c:	str	r1, [sp, #8]
    c810:	str	r3, [sp]
    c814:	add	r2, pc, r2
    c818:	mov	r3, #86	; 0x56
    c81c:	mov	r1, r4
    c820:	ldr	r0, [pc, #548]	; ca4c <blkid_probe_get_size@plt+0x5534>
    c824:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c828:	b	c7b4 <blkid_probe_get_size@plt+0x529c>
    c82c:	ldr	r3, [pc, #540]	; ca50 <blkid_probe_get_size@plt+0x5538>
    c830:	ldr	r1, [pc, #540]	; ca54 <blkid_probe_get_size@plt+0x553c>
    c834:	mov	r0, #1
    c838:	ldr	r3, [r5, r3]
    c83c:	add	r1, pc, r1
    c840:	ldr	r7, [pc, #528]	; ca58 <blkid_probe_get_size@plt+0x5540>
    c844:	ldr	r2, [r3]
    c848:	ldr	r8, [pc, #524]	; ca5c <blkid_probe_get_size@plt+0x5544>
    c84c:	bl	74f4 <__printf_chk@plt>
    c850:	ldr	r2, [pc, #520]	; ca60 <blkid_probe_get_size@plt+0x5548>
    c854:	add	r7, pc, r7
    c858:	add	r4, r7, #4
    c85c:	add	r8, pc, r8
    c860:	add	r2, pc, r2
    c864:	add	r7, r7, #44	; 0x2c
    c868:	b	c870 <blkid_probe_get_size@plt+0x5358>
    c86c:	ldr	r2, [r4], #4
    c870:	cmp	r2, #0
    c874:	beq	c89c <blkid_probe_get_size@plt+0x5384>
    c878:	ldr	r1, [pc, #484]	; ca64 <blkid_probe_get_size@plt+0x554c>
    c87c:	ldr	r0, [r2, #8]
    c880:	ldr	r3, [r2]
    c884:	ldr	r2, [r5, r1]
    c888:	str	r0, [sp]
    c88c:	mov	r1, #1
    c890:	ldr	r0, [r2]
    c894:	mov	r2, r8
    c898:	bl	6c0c <__fprintf_chk@plt>
    c89c:	cmp	r4, r7
    c8a0:	bne	c86c <blkid_probe_get_size@plt+0x5354>
    c8a4:	mov	r4, #0
    c8a8:	b	c6fc <blkid_probe_get_size@plt+0x51e4>
    c8ac:	mov	r1, r7
    c8b0:	mov	r3, #1
    c8b4:	ldr	r2, [r5, #4]
    c8b8:	ldr	r0, [sp, #16]
    c8bc:	bl	58e04 <blkid_probe_get_size@plt+0x518ec>
    c8c0:	subs	r4, r0, #0
    c8c4:	bge	c7b4 <blkid_probe_get_size@plt+0x529c>
    c8c8:	ldr	r3, [pc, #408]	; ca68 <blkid_probe_get_size@plt+0x5550>
    c8cc:	add	r3, pc, r3
    c8d0:	ldr	r3, [r3, #4]
    c8d4:	cmp	r3, #6
    c8d8:	ble	c7b4 <blkid_probe_get_size@plt+0x529c>
    c8dc:	ldr	r2, [pc, #392]	; ca6c <blkid_probe_get_size@plt+0x5554>
    c8e0:	ldr	r3, [pc, #392]	; ca70 <blkid_probe_get_size@plt+0x5558>
    c8e4:	add	r2, pc, r2
    c8e8:	ldr	r1, [r5, #4]
    c8ec:	add	r3, pc, r3
    c8f0:	str	r2, [sp, #4]
    c8f4:	ldr	r2, [pc, #376]	; ca74 <blkid_probe_get_size@plt+0x555c>
    c8f8:	add	r3, r3, #516	; 0x204
    c8fc:	str	r1, [sp, #8]
    c900:	str	r3, [sp]
    c904:	add	r2, pc, r2
    c908:	mov	r3, #92	; 0x5c
    c90c:	mov	r1, r4
    c910:	ldr	r0, [pc, #352]	; ca78 <blkid_probe_get_size@plt+0x5560>
    c914:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c918:	b	c7b4 <blkid_probe_get_size@plt+0x529c>
    c91c:	ldr	r3, [pc, #344]	; ca7c <blkid_probe_get_size@plt+0x5564>
    c920:	add	r3, pc, r3
    c924:	ldr	r3, [r3, #4]
    c928:	cmp	r3, #2
    c92c:	ble	c728 <blkid_probe_get_size@plt+0x5210>
    c930:	ldr	r2, [pc, #328]	; ca80 <blkid_probe_get_size@plt+0x5568>
    c934:	ldr	r3, [pc, #328]	; ca84 <blkid_probe_get_size@plt+0x556c>
    c938:	add	r2, pc, r2
    c93c:	str	r2, [sp, #4]
    c940:	add	r3, pc, r3
    c944:	ldr	r2, [pc, #316]	; ca88 <blkid_probe_get_size@plt+0x5570>
    c948:	add	r3, r3, #504	; 0x1f8
    c94c:	str	r3, [sp]
    c950:	add	r2, pc, r2
    c954:	mov	r3, #59	; 0x3b
    c958:	mov	r1, #1073741846	; 0x40000016
    c95c:	ldr	r0, [pc, #232]	; ca4c <blkid_probe_get_size@plt+0x5534>
    c960:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c964:	mov	r4, r0
    c968:	cmp	r4, #0
    c96c:	bgt	c77c <blkid_probe_get_size@plt+0x5264>
    c970:	b	c6fc <blkid_probe_get_size@plt+0x51e4>
    c974:	ldr	r2, [pc, #272]	; ca8c <blkid_probe_get_size@plt+0x5574>
    c978:	ldr	r3, [pc, #272]	; ca90 <blkid_probe_get_size@plt+0x5578>
    c97c:	add	r2, pc, r2
    c980:	str	r2, [sp, #4]
    c984:	add	r3, pc, r3
    c988:	ldr	r2, [pc, #260]	; ca94 <blkid_probe_get_size@plt+0x557c>
    c98c:	add	r3, r3, #516	; 0x204
    c990:	str	r4, [sp, #8]
    c994:	str	r3, [sp]
    c998:	add	r2, pc, r2
    c99c:	mov	r3, #79	; 0x4f
    c9a0:	mov	r1, #0
    c9a4:	ldr	r0, [pc, #160]	; ca4c <blkid_probe_get_size@plt+0x5534>
    c9a8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c9ac:	mvn	r4, #21
    c9b0:	b	c7b4 <blkid_probe_get_size@plt+0x529c>
    c9b4:	ldr	r3, [pc, #220]	; ca98 <blkid_probe_get_size@plt+0x5580>
    c9b8:	add	r3, pc, r3
    c9bc:	ldr	r3, [r3, #4]
    c9c0:	cmp	r3, #2
    c9c4:	ble	c728 <blkid_probe_get_size@plt+0x5210>
    c9c8:	ldr	r2, [pc, #204]	; ca9c <blkid_probe_get_size@plt+0x5584>
    c9cc:	ldr	r3, [pc, #204]	; caa0 <blkid_probe_get_size@plt+0x5588>
    c9d0:	add	r2, pc, r2
    c9d4:	str	r2, [sp, #4]
    c9d8:	add	r3, pc, r3
    c9dc:	ldr	r2, [pc, #192]	; caa4 <blkid_probe_get_size@plt+0x558c>
    c9e0:	add	r3, r3, #504	; 0x1f8
    c9e4:	str	r3, [sp]
    c9e8:	add	r2, pc, r2
    c9ec:	mov	r3, #54	; 0x36
    c9f0:	mov	r1, #1073741846	; 0x40000016
    c9f4:	ldr	r0, [pc, #80]	; ca4c <blkid_probe_get_size@plt+0x5534>
    c9f8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    c9fc:	mov	r4, r0
    ca00:	b	c968 <blkid_probe_get_size@plt+0x5450>
    ca04:	bl	6fb4 <__stack_chk_fail@plt>
    ca08:	andeq	fp, r8, r0, lsl r5
    ca0c:	andeq	r0, r0, ip, lsr r4
    ca10:	andeq	ip, r7, r8, ror r9
    ca14:			; <UNDEFINED> instruction: 0x0005aeb4
    ca18:	andeq	r7, r5, r4, lsl #30
    ca1c:	andeq	r8, r5, r8, asr #29
    ca20:	andeq	r8, r5, r8, lsr #29
    ca24:	andeq	r8, r5, r8, lsr sp
    ca28:	andeq	r0, r0, r0, asr #8
    ca2c:	andeq	fp, r8, r8, lsr #21
    ca30:	andeq	fp, r8, r0, ror #20
    ca34:	muleq	r8, ip, r9
    ca38:	andeq	r8, r5, r8, lsr lr
    ca3c:	andeq	fp, r8, r0, ror #18
    ca40:	andeq	r8, r5, r0, lsl lr
    ca44:	ldrdeq	r7, [r5], -r4
    ca48:	andeq	r8, r5, r4, ror sp
    ca4c:	andeq	r0, r0, r3, lsl #8
    ca50:	andeq	r0, r0, r0, lsl #9
    ca54:	muleq	r5, r8, ip
    ca58:	andeq	fp, r8, r8, lsl r0
    ca5c:	andeq	r8, r5, ip, lsl sp
    ca60:	andeq	fp, r8, ip, lsr #3
    ca64:	andeq	r0, r0, ip, asr r4
    ca68:	andeq	fp, r8, r0, ror r8
    ca6c:	andeq	r8, r5, r0, asr #26
    ca70:	andeq	r7, r5, r4, ror #25
    ca74:	andeq	r8, r5, r4, lsl #25
    ca78:	andeq	r0, r0, r7, lsl #8
    ca7c:	andeq	fp, r8, ip, lsl r8
    ca80:	muleq	r5, r8, ip
    ca84:	muleq	r5, r0, ip
    ca88:	andeq	r8, r5, r8, lsr ip
    ca8c:	andeq	r8, r5, r8, ror #24
    ca90:	andeq	r7, r5, ip, asr #24
    ca94:	strdeq	r8, [r5], -r0
    ca98:	andeq	fp, r8, r4, lsl #15
    ca9c:	andeq	r8, r5, ip, ror #23
    caa0:	strdeq	r7, [r5], -r8
    caa4:	andeq	r8, r5, r0, lsr #23
    caa8:	ldr	r3, [pc, #480]	; cc90 <blkid_probe_get_size@plt+0x5778>
    caac:	ldr	r2, [pc, #480]	; cc94 <blkid_probe_get_size@plt+0x577c>
    cab0:	add	r3, pc, r3
    cab4:	push	{r4, r5, r6, r7, lr}
    cab8:	sub	sp, sp, #28
    cabc:	ldr	r7, [r3, r2]
    cac0:	add	r5, sp, #16
    cac4:	mov	r1, r5
    cac8:	ldr	r3, [r7]
    cacc:	mov	r4, r0
    cad0:	str	r3, [sp, #20]
    cad4:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
    cad8:	ldr	r1, [pc, #440]	; cc98 <blkid_probe_get_size@plt+0x5780>
    cadc:	ldr	r2, [sp, #16]
    cae0:	add	r1, pc, r1
    cae4:	mov	r0, #1
    cae8:	bl	74f4 <__printf_chk@plt>
    caec:	mov	r1, r5
    caf0:	mov	r0, r4
    caf4:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
    caf8:	cmp	r0, #0
    cafc:	blt	cb30 <blkid_probe_get_size@plt+0x5618>
    cb00:	ldr	r1, [pc, #404]	; cc9c <blkid_probe_get_size@plt+0x5784>
    cb04:	ldr	r0, [sp, #16]
    cb08:	add	r1, pc, r1
    cb0c:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    cb10:	cmp	r0, #0
    cb14:	str	r0, [sp, #12]
    cb18:	beq	cc60 <blkid_probe_get_size@plt+0x5748>
    cb1c:	ldr	r1, [pc, #380]	; cca0 <blkid_probe_get_size@plt+0x5788>
    cb20:	mov	r2, r0
    cb24:	add	r1, pc, r1
    cb28:	mov	r0, #1
    cb2c:	bl	74f4 <__printf_chk@plt>
    cb30:	add	r1, sp, #8
    cb34:	mov	r0, r4
    cb38:	bl	26c8c <blkid_probe_get_size@plt+0x1f774>
    cb3c:	cmp	r0, #0
    cb40:	bge	cbd0 <blkid_probe_get_size@plt+0x56b8>
    cb44:	mov	r0, r4
    cb48:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
    cb4c:	cmp	r0, #0
    cb50:	str	r0, [sp, #16]
    cb54:	beq	cbe8 <blkid_probe_get_size@plt+0x56d0>
    cb58:	ldr	r5, [pc, #324]	; cca4 <blkid_probe_get_size@plt+0x578c>
    cb5c:	ldr	r6, [pc, #324]	; cca8 <blkid_probe_get_size@plt+0x5790>
    cb60:	add	r5, pc, r5
    cb64:	add	r6, pc, r6
    cb68:	b	cb90 <blkid_probe_get_size@plt+0x5678>
    cb6c:	mov	r2, r0
    cb70:	mov	r1, r6
    cb74:	mov	r0, #1
    cb78:	bl	74f4 <__printf_chk@plt>
    cb7c:	mov	r0, r4
    cb80:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
    cb84:	cmp	r0, #0
    cb88:	str	r0, [sp, #16]
    cb8c:	beq	cbe8 <blkid_probe_get_size@plt+0x56d0>
    cb90:	mov	r1, r5
    cb94:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    cb98:	cmp	r0, #0
    cb9c:	str	r0, [sp, #12]
    cba0:	bne	cb6c <blkid_probe_get_size@plt+0x5654>
    cba4:	ldr	r2, [pc, #256]	; ccac <blkid_probe_get_size@plt+0x5794>
    cba8:	ldr	r1, [pc, #256]	; ccb0 <blkid_probe_get_size@plt+0x5798>
    cbac:	add	r2, pc, r2
    cbb0:	add	r2, r2, #532	; 0x214
    cbb4:	str	r2, [sp]
    cbb8:	ldr	r2, [pc, #244]	; ccb4 <blkid_probe_get_size@plt+0x579c>
    cbbc:	mov	r3, #146	; 0x92
    cbc0:	add	r2, pc, r2
    cbc4:	add	r1, pc, r1
    cbc8:	mov	r0, #1
    cbcc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    cbd0:	ldr	r1, [pc, #224]	; ccb8 <blkid_probe_get_size@plt+0x57a0>
    cbd4:	ldr	r2, [sp, #8]
    cbd8:	add	r1, pc, r1
    cbdc:	mov	r0, #1
    cbe0:	bl	74f4 <__printf_chk@plt>
    cbe4:	b	cb44 <blkid_probe_get_size@plt+0x562c>
    cbe8:	add	r5, sp, #12
    cbec:	mov	r1, r5
    cbf0:	mov	r0, r4
    cbf4:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
    cbf8:	cmp	r0, #0
    cbfc:	str	r0, [sp, #16]
    cc00:	beq	cc38 <blkid_probe_get_size@plt+0x5720>
    cc04:	ldr	r6, [pc, #176]	; ccbc <blkid_probe_get_size@plt+0x57a4>
    cc08:	add	r6, pc, r6
    cc0c:	mov	r2, r0
    cc10:	ldr	r3, [sp, #12]
    cc14:	mov	r1, r6
    cc18:	mov	r0, #1
    cc1c:	bl	74f4 <__printf_chk@plt>
    cc20:	mov	r1, r5
    cc24:	mov	r0, r4
    cc28:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
    cc2c:	cmp	r0, #0
    cc30:	str	r0, [sp, #16]
    cc34:	bne	cc0c <blkid_probe_get_size@plt+0x56f4>
    cc38:	ldr	r0, [pc, #128]	; ccc0 <blkid_probe_get_size@plt+0x57a8>
    cc3c:	add	r0, pc, r0
    cc40:	bl	6b4c <puts@plt>
    cc44:	ldr	r2, [sp, #20]
    cc48:	ldr	r3, [r7]
    cc4c:	mov	r0, #0
    cc50:	cmp	r2, r3
    cc54:	bne	cc8c <blkid_probe_get_size@plt+0x5774>
    cc58:	add	sp, sp, #28
    cc5c:	pop	{r4, r5, r6, r7, pc}
    cc60:	ldr	r2, [pc, #92]	; ccc4 <blkid_probe_get_size@plt+0x57ac>
    cc64:	ldr	r1, [pc, #92]	; ccc8 <blkid_probe_get_size@plt+0x57b0>
    cc68:	add	r2, pc, r2
    cc6c:	add	r2, r2, #532	; 0x214
    cc70:	str	r2, [sp]
    cc74:	ldr	r2, [pc, #80]	; cccc <blkid_probe_get_size@plt+0x57b4>
    cc78:	mov	r3, #138	; 0x8a
    cc7c:	add	r2, pc, r2
    cc80:	add	r1, pc, r1
    cc84:	mov	r0, #1
    cc88:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    cc8c:	bl	6fb4 <__stack_chk_fail@plt>
    cc90:	strheq	fp, [r8], -r8
    cc94:	andeq	r0, r0, ip, lsr r4
    cc98:	andeq	r8, r5, r4, ror #22
    cc9c:	andeq	lr, r5, r8, asr ip
    cca0:	andeq	r8, r5, r8, ror #22
    cca4:	andeq	lr, r5, r0, lsl #24
    cca8:	andeq	r8, r5, r8, lsr fp
    ccac:	andeq	r7, r5, r4, lsr #20
    ccb0:	andeq	r8, r5, r4, lsr #21
    ccb4:	andeq	r8, r5, ip, lsl #21
    ccb8:			; <UNDEFINED> instruction: 0x00058abc
    ccbc:	muleq	r5, ip, sl
    ccc0:			; <UNDEFINED> instruction: 0x000598b0
    ccc4:	andeq	r7, r5, r8, ror #18
    ccc8:	andeq	r8, r5, r8, ror #19
    cccc:	ldrdeq	r8, [r5], -r0
    ccd0:	ldr	r3, [pc, #492]	; cec4 <blkid_probe_get_size@plt+0x59ac>
    ccd4:	ldr	r0, [pc, #492]	; cec8 <blkid_probe_get_size@plt+0x59b0>
    ccd8:	add	r3, pc, r3
    ccdc:	push	{r4, r5, r6, r7, lr}
    cce0:	sub	sp, sp, #60	; 0x3c
    cce4:	ldr	r5, [r3, r0]
    cce8:	subs	r4, r1, #0
    ccec:	mov	r1, #0
    ccf0:	ldr	r3, [r5]
    ccf4:	str	r1, [sp, #36]	; 0x24
    ccf8:	str	r1, [sp, #32]
    ccfc:	str	r3, [sp, #52]	; 0x34
    cd00:	str	r1, [sp, #28]
    cd04:	beq	ce68 <blkid_probe_get_size@plt+0x5950>
    cd08:	sub	r3, r2, #1
    cd0c:	cmp	r3, #1
    cd10:	mov	r6, r2
    cd14:	bhi	cde0 <blkid_probe_get_size@plt+0x58c8>
    cd18:	ldr	r1, [pc, #428]	; cecc <blkid_probe_get_size@plt+0x59b4>
    cd1c:	add	r2, sp, #36	; 0x24
    cd20:	add	r1, pc, r1
    cd24:	mov	r0, r4
    cd28:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
    cd2c:	add	r1, sp, #32
    cd30:	mov	r0, r4
    cd34:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
    cd38:	add	r1, sp, #28
    cd3c:	mov	r0, r4
    cd40:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
    cd44:	add	r1, sp, #44	; 0x2c
    cd48:	mov	r0, #1
    cd4c:	bl	6e88 <clock_gettime@plt>
    cd50:	cmp	r0, #0
    cd54:	bne	ce94 <blkid_probe_get_size@plt+0x597c>
    cd58:	cmp	r6, #2
    cd5c:	beq	ce5c <blkid_probe_get_size@plt+0x5944>
    cd60:	ldr	r6, [pc, #360]	; ced0 <blkid_probe_get_size@plt+0x59b8>
    cd64:	add	r6, pc, r6
    cd68:	ldrd	r2, [sp, #28]
    cd6c:	ldr	r0, [sp, #48]	; 0x30
    cd70:	ldr	ip, [sp, #36]	; 0x24
    cd74:	str	r2, [sp, #16]
    cd78:	str	r3, [sp, #12]
    cd7c:	mov	r2, #1000	; 0x3e8
    cd80:	mov	r3, #0
    cd84:	asr	r1, r0, #31
    cd88:	str	ip, [sp, #8]
    cd8c:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
    cd90:	ldr	ip, [pc, #316]	; ced4 <blkid_probe_get_size@plt+0x59bc>
    cd94:	ldr	r3, [sp, #44]	; 0x2c
    cd98:	add	ip, pc, ip
    cd9c:	mov	r2, r6
    cda0:	strd	r0, [sp]
    cda4:	mov	r1, ip
    cda8:	mov	r0, #1
    cdac:	bl	74f4 <__printf_chk@plt>
    cdb0:	ldr	r3, [pc, #288]	; ced8 <blkid_probe_get_size@plt+0x59c0>
    cdb4:	add	r3, pc, r3
    cdb8:	ldrb	r3, [r3, #12]
    cdbc:	cmp	r3, #0
    cdc0:	bne	ce0c <blkid_probe_get_size@plt+0x58f4>
    cdc4:	ldr	r2, [sp, #52]	; 0x34
    cdc8:	ldr	r3, [r5]
    cdcc:	mov	r0, #0
    cdd0:	cmp	r2, r3
    cdd4:	bne	cec0 <blkid_probe_get_size@plt+0x59a8>
    cdd8:	add	sp, sp, #60	; 0x3c
    cddc:	pop	{r4, r5, r6, r7, pc}
    cde0:	ldr	r2, [pc, #244]	; cedc <blkid_probe_get_size@plt+0x59c4>
    cde4:	ldr	r1, [pc, #244]	; cee0 <blkid_probe_get_size@plt+0x59c8>
    cde8:	add	r2, pc, r2
    cdec:	add	r2, r2, #548	; 0x224
    cdf0:	str	r2, [sp]
    cdf4:	ldr	r2, [pc, #232]	; cee4 <blkid_probe_get_size@plt+0x59cc>
    cdf8:	mov	r3, #34	; 0x22
    cdfc:	add	r2, pc, r2
    ce00:	add	r1, pc, r1
    ce04:	mov	r0, #1
    ce08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    ce0c:	add	r6, sp, #40	; 0x28
    ce10:	mov	r1, r6
    ce14:	mov	r0, r4
    ce18:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
    ce1c:	subs	r2, r0, #0
    ce20:	beq	ce50 <blkid_probe_get_size@plt+0x5938>
    ce24:	ldr	r7, [pc, #188]	; cee8 <blkid_probe_get_size@plt+0x59d0>
    ce28:	add	r7, pc, r7
    ce2c:	ldr	r3, [sp, #40]	; 0x28
    ce30:	mov	r1, r7
    ce34:	mov	r0, #1
    ce38:	bl	74f4 <__printf_chk@plt>
    ce3c:	mov	r1, r6
    ce40:	mov	r0, r4
    ce44:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
    ce48:	subs	r2, r0, #0
    ce4c:	bne	ce2c <blkid_probe_get_size@plt+0x5914>
    ce50:	mov	r0, #10
    ce54:	bl	6c78 <putchar@plt>
    ce58:	b	cdc4 <blkid_probe_get_size@plt+0x58ac>
    ce5c:	ldr	r6, [pc, #136]	; ceec <blkid_probe_get_size@plt+0x59d4>
    ce60:	add	r6, pc, r6
    ce64:	b	cd68 <blkid_probe_get_size@plt+0x5850>
    ce68:	ldr	r2, [pc, #128]	; cef0 <blkid_probe_get_size@plt+0x59d8>
    ce6c:	ldr	r1, [pc, #128]	; cef4 <blkid_probe_get_size@plt+0x59dc>
    ce70:	add	r2, pc, r2
    ce74:	add	r2, r2, #548	; 0x224
    ce78:	str	r2, [sp]
    ce7c:	ldr	r2, [pc, #116]	; cef8 <blkid_probe_get_size@plt+0x59e0>
    ce80:	mov	r3, #33	; 0x21
    ce84:	add	r2, pc, r2
    ce88:	add	r1, pc, r1
    ce8c:	mov	r0, #1
    ce90:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    ce94:	ldr	r2, [pc, #96]	; cefc <blkid_probe_get_size@plt+0x59e4>
    ce98:	ldr	r1, [pc, #96]	; cf00 <blkid_probe_get_size@plt+0x59e8>
    ce9c:	add	r2, pc, r2
    cea0:	add	r2, r2, #548	; 0x224
    cea4:	str	r2, [sp]
    cea8:	ldr	r2, [pc, #84]	; cf04 <blkid_probe_get_size@plt+0x59ec>
    ceac:	mov	r3, #40	; 0x28
    ceb0:	add	r2, pc, r2
    ceb4:	add	r1, pc, r1
    ceb8:	mov	r0, #1
    cebc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    cec0:	bl	6fb4 <__stack_chk_fail@plt>
    cec4:	muleq	r8, r0, lr
    cec8:	andeq	r0, r0, ip, lsr r4
    cecc:	strdeq	r8, [r5], -r8	; <UNPREDICTABLE>
    ced0:	andeq	r8, r5, r4, asr r9
    ced4:			; <UNDEFINED> instruction: 0x000589b4
    ced8:	andeq	fp, r8, r0, lsr r4
    cedc:	andeq	r7, r5, r8, ror #15
    cee0:	andeq	r8, r5, r0, ror #17
    cee4:	andeq	r8, r5, r4, asr #17
    cee8:	andeq	r8, r5, r4, asr #18
    ceec:	andeq	r8, r5, r0, asr r8
    cef0:	andeq	r7, r5, r0, ror #14
    cef4:	ldrdeq	lr, [r5], -r8
    cef8:	andeq	r8, r5, ip, lsr r8
    cefc:	andeq	r7, r5, r4, lsr r7
    cf00:	andeq	r8, r5, ip, ror #16
    cf04:	andeq	r8, r5, r0, lsl r8
    cf08:	ldr	r3, [pc, #1620]	; d564 <blkid_probe_get_size@plt+0x604c>
    cf0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf10:	add	r3, pc, r3
    cf14:	ldr	lr, [pc, #1612]	; d568 <blkid_probe_get_size@plt+0x6050>
    cf18:	sub	sp, sp, #92	; 0x5c
    cf1c:	add	ip, sp, #88	; 0x58
    cf20:	str	r0, [sp, #40]	; 0x28
    cf24:	ldr	lr, [r3, lr]
    cf28:	mov	r5, r0
    cf2c:	str	lr, [sp, #32]
    cf30:	mov	r0, #0
    cf34:	ldr	lr, [lr]
    cf38:	str	r0, [ip, #-24]!	; 0xffffffe8
    cf3c:	mov	r4, r1
    cf40:	mov	r0, ip
    cf44:	mov	r1, r5
    cf48:	str	r2, [sp, #44]	; 0x2c
    cf4c:	str	lr, [sp, #84]	; 0x54
    cf50:	bl	4b1bc <blkid_probe_get_size@plt+0x43ca4>
    cf54:	subs	r1, r0, #0
    cf58:	bge	cfb0 <blkid_probe_get_size@plt+0x5a98>
    cf5c:	ldr	r3, [pc, #1544]	; d56c <blkid_probe_get_size@plt+0x6054>
    cf60:	add	r3, pc, r3
    cf64:	ldr	r3, [r3, #4]
    cf68:	cmp	r3, #2
    cf6c:	bgt	d154 <blkid_probe_get_size@plt+0x5c3c>
    cf70:	rsb	r4, r1, #0
    cf74:	ldr	fp, [sp, #64]	; 0x40
    cf78:	uxtb	r4, r4
    cf7c:	rsb	r4, r4, #0
    cf80:	cmp	fp, #0
    cf84:	beq	cf90 <blkid_probe_get_size@plt+0x5a78>
    cf88:	mov	r0, fp
    cf8c:	bl	27edc <blkid_probe_get_size@plt+0x209c4>
    cf90:	ldr	r3, [sp, #32]
    cf94:	ldr	r2, [sp, #84]	; 0x54
    cf98:	mov	r0, r4
    cf9c:	ldr	r3, [r3]
    cfa0:	cmp	r2, r3
    cfa4:	bne	d560 <blkid_probe_get_size@plt+0x6048>
    cfa8:	add	sp, sp, #92	; 0x5c
    cfac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cfb0:	ldr	r5, [sp, #64]	; 0x40
    cfb4:	cmp	r5, #0
    cfb8:	beq	d468 <blkid_probe_get_size@plt+0x5f50>
    cfbc:	add	r3, sp, #88	; 0x58
    cfc0:	mov	r6, #134217728	; 0x8000000
    cfc4:	mov	r7, #4
    cfc8:	ldr	r0, [r5, #4]
    cfcc:	str	r6, [r3, #-20]!	; 0xffffffec
    cfd0:	mov	r2, #33	; 0x21
    cfd4:	str	r7, [sp]
    cfd8:	mov	r1, #1
    cfdc:	bl	70b0 <setsockopt@plt>
    cfe0:	cmp	r0, #0
    cfe4:	blt	d248 <blkid_probe_get_size@plt+0x5d30>
    cfe8:	mov	r1, r4
    cfec:	ldr	r0, [sp, #64]	; 0x40
    cff0:	bl	27fb4 <blkid_probe_get_size@plt+0x20a9c>
    cff4:	subs	r1, r0, #0
    cff8:	blt	d1f8 <blkid_probe_get_size@plt+0x5ce0>
    cffc:	mov	r3, #0
    d000:	mvn	r2, #1
    d004:	str	r3, [sp, #36]	; 0x24
    d008:	strd	r2, [sp, #76]	; 0x4c
    d00c:	ldr	r3, [pc, #1372]	; d570 <blkid_probe_get_size@plt+0x6058>
    d010:	add	sl, sp, #60	; 0x3c
    d014:	add	r9, sp, #56	; 0x38
    d018:	add	r5, sp, #76	; 0x4c
    d01c:	add	r3, pc, r3
    d020:	str	r3, [sp, #28]
    d024:	ldr	r0, [sp, #28]
    d028:	mov	r3, sl
    d02c:	mov	r2, r9
    d030:	mov	r1, r5
    d034:	ldr	r0, [r0, #16]
    d038:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
    d03c:	cmp	r0, #0
    d040:	beq	d278 <blkid_probe_get_size@plt+0x5d60>
    d044:	ldr	fp, [sp, #64]	; 0x40
    d048:	ldr	r8, [sp, #60]	; 0x3c
    d04c:	cmp	fp, #0
    d050:	beq	d190 <blkid_probe_get_size@plt+0x5c78>
    d054:	cmp	r8, #0
    d058:	beq	d1c4 <blkid_probe_get_size@plt+0x5cac>
    d05c:	mov	r0, r8
    d060:	ldr	r4, [sp, #56]	; 0x38
    d064:	bl	74e8 <strdup@plt>
    d068:	subs	r6, r0, #0
    d06c:	beq	d4e8 <blkid_probe_get_size@plt+0x5fd0>
    d070:	cmp	r4, #0
    d074:	beq	d14c <blkid_probe_get_size@plt+0x5c34>
    d078:	mov	r0, r4
    d07c:	bl	74e8 <strdup@plt>
    d080:	subs	r7, r0, #0
    d084:	beq	d4fc <blkid_probe_get_size@plt+0x5fe4>
    d088:	mov	r2, #0
    d08c:	mov	r1, r2
    d090:	add	r0, fp, #268	; 0x10c
    d094:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
    d098:	cmp	r0, #0
    d09c:	blt	d0c0 <blkid_probe_get_size@plt+0x5ba8>
    d0a0:	mov	r2, r7
    d0a4:	mov	r1, r6
    d0a8:	ldr	r0, [fp, #268]	; 0x10c
    d0ac:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
    d0b0:	cmp	r0, #0
    d0b4:	ldrge	r3, [sp, #36]	; 0x24
    d0b8:	strbge	r3, [fp, #276]	; 0x114
    d0bc:	bge	d024 <blkid_probe_get_size@plt+0x5b0c>
    d0c0:	str	r0, [sp, #28]
    d0c4:	mov	r0, r7
    d0c8:	bl	69f0 <free@plt>
    d0cc:	mov	r0, r6
    d0d0:	bl	69f0 <free@plt>
    d0d4:	ldr	r1, [sp, #28]
    d0d8:	ldr	r3, [pc, #1172]	; d574 <blkid_probe_get_size@plt+0x605c>
    d0dc:	add	r3, pc, r3
    d0e0:	ldr	r3, [r3, #4]
    d0e4:	cmp	r3, #2
    d0e8:	ble	cf70 <blkid_probe_get_size@plt+0x5a58>
    d0ec:	ldr	r4, [sp, #56]	; 0x38
    d0f0:	ldr	r8, [sp, #60]	; 0x3c
    d0f4:	cmp	r4, #0
    d0f8:	beq	d458 <blkid_probe_get_size@plt+0x5f40>
    d0fc:	ldr	ip, [pc, #1140]	; d578 <blkid_probe_get_size@plt+0x6060>
    d100:	add	ip, pc, ip
    d104:	ldr	r3, [pc, #1136]	; d57c <blkid_probe_get_size@plt+0x6064>
    d108:	ldr	r0, [pc, #1136]	; d580 <blkid_probe_get_size@plt+0x6068>
    d10c:	add	r3, pc, r3
    d110:	ldr	r2, [pc, #1132]	; d584 <blkid_probe_get_size@plt+0x606c>
    d114:	add	r0, pc, r0
    d118:	add	r3, r3, #572	; 0x23c
    d11c:	str	r4, [sp, #16]
    d120:	str	r3, [sp]
    d124:	str	r0, [sp, #4]
    d128:	str	ip, [sp, #12]
    d12c:	str	r8, [sp, #8]
    d130:	mov	r3, #79	; 0x4f
    d134:	add	r2, pc, r2
    d138:	ldr	r0, [pc, #1096]	; d588 <blkid_probe_get_size@plt+0x6070>
    d13c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    d140:	ldr	fp, [sp, #64]	; 0x40
    d144:	mov	r4, r0
    d148:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d14c:	mov	r7, r4
    d150:	b	d088 <blkid_probe_get_size@plt+0x5b70>
    d154:	ldr	r2, [pc, #1072]	; d58c <blkid_probe_get_size@plt+0x6074>
    d158:	ldr	r3, [pc, #1072]	; d590 <blkid_probe_get_size@plt+0x6078>
    d15c:	add	r2, pc, r2
    d160:	str	r2, [sp, #4]
    d164:	add	r3, pc, r3
    d168:	ldr	r2, [pc, #1060]	; d594 <blkid_probe_get_size@plt+0x607c>
    d16c:	add	r3, r3, #572	; 0x23c
    d170:	str	r3, [sp]
    d174:	add	r2, pc, r2
    d178:	mov	r3, #67	; 0x43
    d17c:	ldr	r0, [pc, #1028]	; d588 <blkid_probe_get_size@plt+0x6070>
    d180:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    d184:	ldr	fp, [sp, #64]	; 0x40
    d188:	mov	r4, r0
    d18c:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d190:	ldr	r2, [pc, #1024]	; d598 <blkid_probe_get_size@plt+0x6080>
    d194:	ldr	r1, [pc, #1024]	; d59c <blkid_probe_get_size@plt+0x6084>
    d198:	add	r2, pc, r2
    d19c:	add	r3, r2, #632	; 0x278
    d1a0:	ldr	r2, [pc, #1016]	; d5a0 <blkid_probe_get_size@plt+0x6088>
    d1a4:	str	r3, [sp]
    d1a8:	add	r1, pc, r1
    d1ac:	mov	r0, fp
    d1b0:	ldr	r3, [pc, #1004]	; d5a4 <blkid_probe_get_size@plt+0x608c>
    d1b4:	add	r2, pc, r2
    d1b8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d1bc:	mvn	r1, #21
    d1c0:	b	d0d8 <blkid_probe_get_size@plt+0x5bc0>
    d1c4:	ldr	r3, [pc, #988]	; d5a8 <blkid_probe_get_size@plt+0x6090>
    d1c8:	ldr	r2, [pc, #988]	; d5ac <blkid_probe_get_size@plt+0x6094>
    d1cc:	add	r3, pc, r3
    d1d0:	ldr	r1, [pc, #984]	; d5b0 <blkid_probe_get_size@plt+0x6098>
    d1d4:	add	r3, r3, #632	; 0x278
    d1d8:	str	r3, [sp]
    d1dc:	add	r1, pc, r1
    d1e0:	mov	r0, r8
    d1e4:	ldr	r3, [pc, #968]	; d5b4 <blkid_probe_get_size@plt+0x609c>
    d1e8:	add	r2, pc, r2
    d1ec:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d1f0:	mvn	r1, #21
    d1f4:	b	d0d8 <blkid_probe_get_size@plt+0x5bc0>
    d1f8:	ldr	r3, [pc, #952]	; d5b8 <blkid_probe_get_size@plt+0x60a0>
    d1fc:	add	r3, pc, r3
    d200:	ldr	r3, [r3, #4]
    d204:	cmp	r3, #2
    d208:	ble	cf70 <blkid_probe_get_size@plt+0x5a58>
    d20c:	ldr	r2, [pc, #936]	; d5bc <blkid_probe_get_size@plt+0x60a4>
    d210:	ldr	r3, [pc, #936]	; d5c0 <blkid_probe_get_size@plt+0x60a8>
    d214:	add	r2, pc, r2
    d218:	str	r2, [sp, #4]
    d21c:	add	r3, pc, r3
    d220:	ldr	r2, [pc, #924]	; d5c4 <blkid_probe_get_size@plt+0x60ac>
    d224:	add	r3, r3, #572	; 0x23c
    d228:	str	r3, [sp]
    d22c:	add	r2, pc, r2
    d230:	mov	r3, #73	; 0x49
    d234:	ldr	r0, [pc, #844]	; d588 <blkid_probe_get_size@plt+0x6070>
    d238:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    d23c:	ldr	fp, [sp, #64]	; 0x40
    d240:	mov	r4, r0
    d244:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d248:	bl	732c <__errno_location@plt>
    d24c:	ldr	r3, [r0]
    d250:	cmp	r3, #0
    d254:	ble	cfe8 <blkid_probe_get_size@plt+0x5ad0>
    d258:	add	r3, sp, #88	; 0x58
    d25c:	ldr	r0, [r5, #4]
    d260:	mov	r2, #8
    d264:	str	r7, [sp]
    d268:	mov	r1, #1
    d26c:	str	r6, [r3, #-16]!
    d270:	bl	70b0 <setsockopt@plt>
    d274:	b	cfe8 <blkid_probe_get_size@plt+0x5ad0>
    d278:	ldr	r8, [pc, #840]	; d5c8 <blkid_probe_get_size@plt+0x60b0>
    d27c:	ldr	sl, [pc, #840]	; d5cc <blkid_probe_get_size@plt+0x60b4>
    d280:	mov	fp, r0
    d284:	add	r9, sp, #52	; 0x34
    d288:	add	r8, pc, r8
    d28c:	add	sl, pc, sl
    d290:	mvn	r3, #1
    d294:	str	r0, [sp, #80]	; 0x50
    d298:	str	r3, [sp, #76]	; 0x4c
    d29c:	mov	r2, r9
    d2a0:	mov	r1, r5
    d2a4:	ldr	r0, [r8, #20]
    d2a8:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
    d2ac:	cmp	r0, #0
    d2b0:	beq	d3b0 <blkid_probe_get_size@plt+0x5e98>
    d2b4:	ldr	r4, [sp, #64]	; 0x40
    d2b8:	ldr	r0, [sp, #52]	; 0x34
    d2bc:	cmp	r4, #0
    d2c0:	beq	d34c <blkid_probe_get_size@plt+0x5e34>
    d2c4:	cmp	r0, #0
    d2c8:	beq	d380 <blkid_probe_get_size@plt+0x5e68>
    d2cc:	bl	74e8 <strdup@plt>
    d2d0:	subs	r7, r0, #0
    d2d4:	beq	d4e0 <blkid_probe_get_size@plt+0x5fc8>
    d2d8:	mov	r1, sl
    d2dc:	add	r0, r4, #272	; 0x110
    d2e0:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
    d2e4:	cmp	r0, #0
    d2e8:	blt	d30c <blkid_probe_get_size@plt+0x5df4>
    d2ec:	mov	r1, r7
    d2f0:	ldr	r0, [r4, #272]	; 0x110
    d2f4:	bl	43cec <blkid_probe_get_size@plt+0x3c7d4>
    d2f8:	cmn	r0, #17
    d2fc:	beq	d340 <blkid_probe_get_size@plt+0x5e28>
    d300:	cmp	r0, #0
    d304:	strbge	fp, [r4, #276]	; 0x114
    d308:	bge	d29c <blkid_probe_get_size@plt+0x5d84>
    d30c:	mov	r6, r0
    d310:	mov	r0, r7
    d314:	bl	69f0 <free@plt>
    d318:	ldr	r3, [pc, #688]	; d5d0 <blkid_probe_get_size@plt+0x60b8>
    d31c:	add	r3, pc, r3
    d320:	ldr	r3, [r3, #4]
    d324:	cmp	r3, #2
    d328:	bgt	d498 <blkid_probe_get_size@plt+0x5f80>
    d32c:	rsb	r4, r6, #0
    d330:	ldr	fp, [sp, #64]	; 0x40
    d334:	uxtb	r4, r4
    d338:	rsb	r4, r4, #0
    d33c:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d340:	mov	r0, r7
    d344:	bl	69f0 <free@plt>
    d348:	b	d29c <blkid_probe_get_size@plt+0x5d84>
    d34c:	ldr	r3, [pc, #640]	; d5d4 <blkid_probe_get_size@plt+0x60bc>
    d350:	ldr	r2, [pc, #640]	; d5d8 <blkid_probe_get_size@plt+0x60c0>
    d354:	add	r3, pc, r3
    d358:	ldr	r1, [pc, #636]	; d5dc <blkid_probe_get_size@plt+0x60c4>
    d35c:	add	r3, r3, #688	; 0x2b0
    d360:	str	r3, [sp]
    d364:	mov	r0, r4
    d368:	mov	r3, #720	; 0x2d0
    d36c:	add	r2, pc, r2
    d370:	add	r1, pc, r1
    d374:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d378:	mvn	r6, #21
    d37c:	b	d318 <blkid_probe_get_size@plt+0x5e00>
    d380:	ldr	r3, [pc, #600]	; d5e0 <blkid_probe_get_size@plt+0x60c8>
    d384:	ldr	r2, [pc, #600]	; d5e4 <blkid_probe_get_size@plt+0x60cc>
    d388:	add	r3, pc, r3
    d38c:	ldr	r1, [pc, #596]	; d5e8 <blkid_probe_get_size@plt+0x60d0>
    d390:	add	r3, r3, #688	; 0x2b0
    d394:	str	r3, [sp]
    d398:	add	r2, pc, r2
    d39c:	ldr	r3, [pc, #584]	; d5ec <blkid_probe_get_size@plt+0x60d4>
    d3a0:	add	r1, pc, r1
    d3a4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d3a8:	mvn	r6, #21
    d3ac:	b	d318 <blkid_probe_get_size@plt+0x5e00>
    d3b0:	ldr	r1, [pc, #568]	; d5f0 <blkid_probe_get_size@plt+0x60d8>
    d3b4:	ldr	r2, [sp, #40]	; 0x28
    d3b8:	add	r1, pc, r1
    d3bc:	ldr	r0, [sp, #64]	; 0x40
    d3c0:	bl	28094 <blkid_probe_get_size@plt+0x20b7c>
    d3c4:	subs	r1, r0, #0
    d3c8:	bge	d41c <blkid_probe_get_size@plt+0x5f04>
    d3cc:	ldr	r3, [pc, #544]	; d5f4 <blkid_probe_get_size@plt+0x60dc>
    d3d0:	add	r3, pc, r3
    d3d4:	ldr	r3, [r3, #4]
    d3d8:	cmp	r3, #2
    d3dc:	ble	cf70 <blkid_probe_get_size@plt+0x5a58>
    d3e0:	ldr	r2, [pc, #528]	; d5f8 <blkid_probe_get_size@plt+0x60e0>
    d3e4:	ldr	r3, [pc, #528]	; d5fc <blkid_probe_get_size@plt+0x60e4>
    d3e8:	add	r2, pc, r2
    d3ec:	str	r2, [sp, #4]
    d3f0:	add	r3, pc, r3
    d3f4:	ldr	r2, [pc, #516]	; d600 <blkid_probe_get_size@plt+0x60e8>
    d3f8:	add	r3, r3, #572	; 0x23c
    d3fc:	str	r3, [sp]
    d400:	add	r2, pc, r2
    d404:	mov	r3, #90	; 0x5a
    d408:	ldr	r0, [pc, #376]	; d588 <blkid_probe_get_size@plt+0x6070>
    d40c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    d410:	ldr	fp, [sp, #64]	; 0x40
    d414:	mov	r4, r0
    d418:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d41c:	ldr	r4, [sp, #64]	; 0x40
    d420:	cmp	r4, #0
    d424:	ldrne	r0, [r4, #284]	; 0x11c
    d428:	beq	d52c <blkid_probe_get_size@plt+0x6014>
    d42c:	ldr	r3, [sp, #40]	; 0x28
    d430:	cmp	r3, #2
    d434:	beq	d4f0 <blkid_probe_get_size@plt+0x5fd8>
    d438:	ldr	r1, [pc, #452]	; d604 <blkid_probe_get_size@plt+0x60ec>
    d43c:	add	r1, pc, r1
    d440:	bl	2ff04 <blkid_probe_get_size@plt+0x289ec>
    d444:	ldr	r2, [sp, #44]	; 0x2c
    d448:	ldr	r3, [sp, #64]	; 0x40
    d44c:	mov	r4, #0
    d450:	str	r3, [r2]
    d454:	b	cf90 <blkid_probe_get_size@plt+0x5a78>
    d458:	ldr	ip, [pc, #424]	; d608 <blkid_probe_get_size@plt+0x60f0>
    d45c:	add	ip, pc, ip
    d460:	mov	r4, ip
    d464:	b	d104 <blkid_probe_get_size@plt+0x5bec>
    d468:	ldr	r3, [pc, #412]	; d60c <blkid_probe_get_size@plt+0x60f4>
    d46c:	ldr	r2, [pc, #412]	; d610 <blkid_probe_get_size@plt+0x60f8>
    d470:	add	r3, pc, r3
    d474:	ldr	r1, [pc, #408]	; d614 <blkid_probe_get_size@plt+0x60fc>
    d478:	add	r3, r3, #588	; 0x24c
    d47c:	str	r3, [sp]
    d480:	mov	r0, r5
    d484:	mov	r3, #93	; 0x5d
    d488:	add	r2, pc, r2
    d48c:	add	r1, pc, r1
    d490:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d494:	b	cfe8 <blkid_probe_get_size@plt+0x5ad0>
    d498:	ldr	r2, [pc, #376]	; d618 <blkid_probe_get_size@plt+0x6100>
    d49c:	ldr	r3, [pc, #376]	; d61c <blkid_probe_get_size@plt+0x6104>
    d4a0:	add	r2, pc, r2
    d4a4:	ldr	r0, [sp, #52]	; 0x34
    d4a8:	str	r2, [sp, #4]
    d4ac:	add	r3, pc, r3
    d4b0:	ldr	r2, [pc, #360]	; d620 <blkid_probe_get_size@plt+0x6108>
    d4b4:	add	r3, r3, #572	; 0x23c
    d4b8:	str	r3, [sp]
    d4bc:	str	r0, [sp, #8]
    d4c0:	mov	r1, r6
    d4c4:	mov	r3, #85	; 0x55
    d4c8:	add	r2, pc, r2
    d4cc:	ldr	r0, [pc, #180]	; d588 <blkid_probe_get_size@plt+0x6070>
    d4d0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    d4d4:	ldr	fp, [sp, #64]	; 0x40
    d4d8:	mov	r4, r0
    d4dc:	b	cf80 <blkid_probe_get_size@plt+0x5a68>
    d4e0:	mvn	r6, #11
    d4e4:	b	d318 <blkid_probe_get_size@plt+0x5e00>
    d4e8:	mvn	r1, #11
    d4ec:	b	d0d8 <blkid_probe_get_size@plt+0x5bc0>
    d4f0:	ldr	r1, [pc, #300]	; d624 <blkid_probe_get_size@plt+0x610c>
    d4f4:	add	r1, pc, r1
    d4f8:	b	d440 <blkid_probe_get_size@plt+0x5f28>
    d4fc:	mov	r0, r6
    d500:	bl	69f0 <free@plt>
    d504:	ldr	r1, [pc, #284]	; d628 <blkid_probe_get_size@plt+0x6110>
    d508:	add	r1, pc, r1
    d50c:	ldr	r1, [r1, #4]
    d510:	cmp	r1, #2
    d514:	mvnle	r4, #11
    d518:	ble	cf88 <blkid_probe_get_size@plt+0x5a70>
    d51c:	ldr	ip, [pc, #264]	; d62c <blkid_probe_get_size@plt+0x6114>
    d520:	mvn	r1, #11
    d524:	add	ip, pc, ip
    d528:	b	d104 <blkid_probe_get_size@plt+0x5bec>
    d52c:	ldr	r2, [pc, #252]	; d630 <blkid_probe_get_size@plt+0x6118>
    d530:	ldr	r1, [pc, #252]	; d634 <blkid_probe_get_size@plt+0x611c>
    d534:	add	r2, pc, r2
    d538:	add	r2, r2, #728	; 0x2d8
    d53c:	str	r2, [sp]
    d540:	ldr	r2, [pc, #240]	; d638 <blkid_probe_get_size@plt+0x6120>
    d544:	mov	r0, r4
    d548:	ldr	r3, [pc, #236]	; d63c <blkid_probe_get_size@plt+0x6124>
    d54c:	add	r2, pc, r2
    d550:	add	r1, pc, r1
    d554:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    d558:	mov	r0, r4
    d55c:	b	d42c <blkid_probe_get_size@plt+0x5f14>
    d560:	bl	6fb4 <__stack_chk_fail@plt>
    d564:	andeq	sl, r8, r8, asr ip
    d568:	andeq	r0, r0, ip, lsr r4
    d56c:	ldrdeq	fp, [r8], -ip
    d570:	andeq	fp, r8, r8, asr #3
    d574:	andeq	fp, r8, r0, rrx
    d578:	andeq	sl, r6, r0, asr #29
    d57c:	andeq	r7, r5, r4, asr #9
    d580:	ldrdeq	r8, [r5], -r8	; <UNPREDICTABLE>
    d584:	andeq	r8, r5, ip, lsl #11
    d588:	andeq	r0, r0, r3, lsl #8
    d58c:	andeq	r8, r5, r4, asr #12
    d590:	andeq	r7, r5, ip, ror #8
    d594:	andeq	r8, r5, ip, asr #10
    d598:	andeq	r7, r5, r8, lsr r4
    d59c:	andeq	r6, r6, r8, asr #24
    d5a0:	strdeq	r8, [r5], -r0
    d5a4:			; <UNDEFINED> instruction: 0x000002b1
    d5a8:	andeq	r7, r5, r4, lsl #8
    d5ac:			; <UNDEFINED> instruction: 0x000582bc
    d5b0:	andeq	r8, r5, r4, lsl #12
    d5b4:			; <UNDEFINED> instruction: 0x000002b2
    d5b8:	andeq	sl, r8, r0, asr #30
    d5bc:			; <UNDEFINED> instruction: 0x000585b0
    d5c0:			; <UNDEFINED> instruction: 0x000573b4
    d5c4:	muleq	r5, r4, r4
    d5c8:	andeq	sl, r8, ip, asr pc
    d5cc:	muleq	r8, ip, r7
    d5d0:	andeq	sl, r8, r0, lsr #28
    d5d4:	andeq	r7, r5, ip, ror r2
    d5d8:	andeq	r8, r5, r8, lsr r1
    d5dc:	andeq	r6, r6, r0, lsl #21
    d5e0:	andeq	r7, r5, r8, asr #4
    d5e4:	andeq	r8, r5, ip, lsl #2
    d5e8:	andeq	r8, r5, ip, ror r4
    d5ec:	ldrdeq	r0, [r0], -r1
    d5f0:			; <UNDEFINED> instruction: 0xfffff910
    d5f4:	andeq	sl, r8, ip, ror #26
    d5f8:	andeq	r8, r5, ip, asr r4
    d5fc:	andeq	r7, r5, r0, ror #3
    d600:	andeq	r8, r5, r0, asr #5
    d604:	andeq	r8, r5, ip, asr #6
    d608:	muleq	r5, r0, r0
    d60c:	andeq	r7, r5, r0, ror #2
    d610:	andeq	r8, r5, ip, lsl r0
    d614:	andeq	r6, r6, r4, ror #18
    d618:	andeq	r8, r5, r0, lsl #7
    d61c:	andeq	r7, r5, r4, lsr #2
    d620:	strdeq	r8, [r5], -r8	; <UNPREDICTABLE>
    d624:	andeq	r8, r5, r0, lsl #5
    d628:	andeq	sl, r8, r4, lsr ip
    d62c:	muleq	r6, ip, sl
    d630:	muleq	r5, ip, r0
    d634:	andeq	r6, r6, r0, lsr #17
    d638:	andeq	r7, r5, r8, asr pc
    d63c:	andeq	r0, r0, r7, lsl #2
    d640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d644:	sub	sp, sp, #52	; 0x34
    d648:	ldr	r5, [pc, #1568]	; dc70 <blkid_probe_get_size@plt+0x6758>
    d64c:	ldr	r3, [pc, #1568]	; dc74 <blkid_probe_get_size@plt+0x675c>
    d650:	add	r5, pc, r5
    d654:	ldr	r4, [pc, #1564]	; dc78 <blkid_probe_get_size@plt+0x6760>
    d658:	ldr	r3, [r5, r3]
    d65c:	ldr	sl, [pc, #1560]	; dc7c <blkid_probe_get_size@plt+0x6764>
    d660:	mov	r2, r3
    d664:	ldr	fp, [pc, #1556]	; dc80 <blkid_probe_get_size@plt+0x6768>
    d668:	ldr	r2, [r2]
    d66c:	ldr	r7, [pc, #1552]	; dc84 <blkid_probe_get_size@plt+0x676c>
    d670:	add	r4, pc, r4
    d674:	add	sl, pc, sl
    d678:	add	fp, pc, fp
    d67c:	str	r2, [sp, #44]	; 0x2c
    d680:	mov	r9, r0
    d684:	add	r2, sl, #20
    d688:	mov	r8, r1
    d68c:	add	r4, r4, #48	; 0x30
    d690:	add	r7, pc, r7
    d694:	str	r3, [sp, #12]
    d698:	str	r2, [sp, #16]
    d69c:	mov	r3, #0
    d6a0:	add	r2, fp, #16
    d6a4:	str	r2, [sp, #20]
    d6a8:	str	r3, [sp, #40]	; 0x28
    d6ac:	str	r3, [sp, #36]	; 0x24
    d6b0:	str	r3, [sp, #32]
    d6b4:	mov	r3, #0
    d6b8:	str	r3, [sp]
    d6bc:	mov	r2, r7
    d6c0:	mov	r3, r4
    d6c4:	mov	r1, r8
    d6c8:	mov	r0, r9
    d6cc:	bl	70a4 <getopt_long@plt>
    d6d0:	cmp	r0, #0
    d6d4:	blt	d9f4 <blkid_probe_get_size@plt+0x64dc>
    d6d8:	sub	r0, r0, #63	; 0x3f
    d6dc:	cmp	r0, #54	; 0x36
    d6e0:	addls	pc, pc, r0, lsl #2
    d6e4:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d6e8:	b	d854 <blkid_probe_get_size@plt+0x633c>
    d6ec:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d6f0:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d6f4:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d6f8:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d6fc:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d700:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d704:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d708:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d70c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d710:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d714:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d718:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d71c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d720:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d724:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d728:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d72c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d730:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d734:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d738:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d73c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d740:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d744:	b	d7c4 <blkid_probe_get_size@plt+0x62ac>
    d748:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d74c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d750:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d754:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d758:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d75c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d760:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d764:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d768:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d76c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d770:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d774:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d778:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d77c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d780:	b	d9a0 <blkid_probe_get_size@plt+0x6488>
    d784:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d788:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d78c:	b	d97c <blkid_probe_get_size@plt+0x6464>
    d790:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d794:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d798:	b	d968 <blkid_probe_get_size@plt+0x6450>
    d79c:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7a0:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7a4:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7a8:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7ac:	b	d9a0 <blkid_probe_get_size@plt+0x6488>
    d7b0:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7b4:	b	d9c8 <blkid_probe_get_size@plt+0x64b0>
    d7b8:	b	d8c8 <blkid_probe_get_size@plt+0x63b0>
    d7bc:	b	d870 <blkid_probe_get_size@plt+0x6358>
    d7c0:	b	d85c <blkid_probe_get_size@plt+0x6344>
    d7c4:	ldr	r0, [pc, #1212]	; dc88 <blkid_probe_get_size@plt+0x6770>
    d7c8:	mov	r6, #0
    d7cc:	add	r0, pc, r0
    d7d0:	bl	6b4c <puts@plt>
    d7d4:	ldr	r3, [pc, #1200]	; dc8c <blkid_probe_get_size@plt+0x6774>
    d7d8:	ldr	r4, [pc, #1200]	; dc90 <blkid_probe_get_size@plt+0x6778>
    d7dc:	ldr	r5, [r5, r3]
    d7e0:	add	r4, pc, r4
    d7e4:	mov	r2, r5
    d7e8:	mov	r1, r5
    d7ec:	ldr	r0, [r4, #16]
    d7f0:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
    d7f4:	mov	r1, r5
    d7f8:	ldr	r0, [r4, #20]
    d7fc:	mov	r2, #0
    d800:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
    d804:	ldr	r0, [sp, #32]
    d808:	cmp	r0, #0
    d80c:	beq	d814 <blkid_probe_get_size@plt+0x62fc>
    d810:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
    d814:	ldr	r0, [sp, #36]	; 0x24
    d818:	cmp	r0, #0
    d81c:	beq	d824 <blkid_probe_get_size@plt+0x630c>
    d820:	bl	27edc <blkid_probe_get_size@plt+0x209c4>
    d824:	ldr	r0, [sp, #40]	; 0x28
    d828:	cmp	r0, #0
    d82c:	beq	d834 <blkid_probe_get_size@plt+0x631c>
    d830:	bl	27edc <blkid_probe_get_size@plt+0x209c4>
    d834:	ldr	r3, [sp, #12]
    d838:	ldr	r2, [sp, #44]	; 0x2c
    d83c:	mov	r0, r6
    d840:	ldr	r3, [r3]
    d844:	cmp	r2, r3
    d848:	bne	dc6c <blkid_probe_get_size@plt+0x6754>
    d84c:	add	sp, sp, #52	; 0x34
    d850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d854:	mvn	r6, #21
    d858:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    d85c:	ldr	r3, [pc, #1072]	; dc94 <blkid_probe_get_size@plt+0x677c>
    d860:	mov	r2, #1
    d864:	add	r3, pc, r3
    d868:	strb	r2, [r3, #25]
    d86c:	b	d6b4 <blkid_probe_get_size@plt+0x619c>
    d870:	ldr	r1, [pc, #1056]	; dc98 <blkid_probe_get_size@plt+0x6780>
    d874:	ldr	r0, [sp, #16]
    d878:	add	r1, pc, r1
    d87c:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
    d880:	cmp	r0, #0
    d884:	blt	dc38 <blkid_probe_get_size@plt+0x6720>
    d888:	ldr	r3, [pc, #1036]	; dc9c <blkid_probe_get_size@plt+0x6784>
    d88c:	ldr	r3, [r5, r3]
    d890:	ldr	r0, [r3]
    d894:	bl	74e8 <strdup@plt>
    d898:	subs	r6, r0, #0
    d89c:	beq	dc50 <blkid_probe_get_size@plt+0x6738>
    d8a0:	mov	r1, r6
    d8a4:	ldr	r0, [sl, #20]
    d8a8:	bl	43cec <blkid_probe_get_size@plt+0x3c7d4>
    d8ac:	cmp	r0, #0
    d8b0:	bge	d6b4 <blkid_probe_get_size@plt+0x619c>
    d8b4:	mov	r3, r6
    d8b8:	mov	r6, r0
    d8bc:	mov	r0, r3
    d8c0:	bl	69f0 <free@plt>
    d8c4:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    d8c8:	ldr	r3, [pc, #972]	; dc9c <blkid_probe_get_size@plt+0x6784>
    d8cc:	mov	r1, #47	; 0x2f
    d8d0:	ldr	r3, [r5, r3]
    d8d4:	ldr	r6, [r3]
    d8d8:	mov	r0, r6
    d8dc:	bl	74c4 <strchr@plt>
    d8e0:	subs	r1, r0, #0
    d8e4:	beq	d9b4 <blkid_probe_get_size@plt+0x649c>
    d8e8:	add	r0, r1, #1
    d8ec:	str	r1, [sp, #28]
    d8f0:	bl	74e8 <strdup@plt>
    d8f4:	subs	r3, r0, #0
    d8f8:	str	r3, [sp, #24]
    d8fc:	beq	dc5c <blkid_probe_get_size@plt+0x6744>
    d900:	ldr	r1, [sp, #28]
    d904:	mov	r0, r6
    d908:	sub	r1, r1, r6
    d90c:	bl	68dc <strndup@plt>
    d910:	mov	r6, r0
    d914:	cmp	r6, #0
    d918:	beq	dc44 <blkid_probe_get_size@plt+0x672c>
    d91c:	mov	r2, #0
    d920:	mov	r1, r2
    d924:	ldr	r0, [sp, #20]
    d928:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
    d92c:	cmp	r0, #0
    d930:	blt	d94c <blkid_probe_get_size@plt+0x6434>
    d934:	ldr	r2, [sp, #24]
    d938:	mov	r1, r6
    d93c:	ldr	r0, [fp, #16]
    d940:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
    d944:	cmp	r0, #0
    d948:	bge	d6b4 <blkid_probe_get_size@plt+0x619c>
    d94c:	mov	r4, r6
    d950:	mov	r6, r0
    d954:	ldr	r0, [sp, #24]
    d958:	bl	69f0 <free@plt>
    d95c:	mov	r0, r4
    d960:	bl	69f0 <free@plt>
    d964:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    d968:	ldr	r3, [pc, #816]	; dca0 <blkid_probe_get_size@plt+0x6788>
    d96c:	mov	r2, #1
    d970:	add	r3, pc, r3
    d974:	strb	r2, [r3, #24]
    d978:	b	d6b4 <blkid_probe_get_size@plt+0x619c>
    d97c:	ldr	r3, [pc, #800]	; dca4 <blkid_probe_get_size@plt+0x678c>
    d980:	ldr	r1, [pc, #800]	; dca8 <blkid_probe_get_size@plt+0x6790>
    d984:	mov	r0, #1
    d988:	ldr	r3, [r5, r3]
    d98c:	add	r1, pc, r1
    d990:	mov	r6, #0
    d994:	ldr	r2, [r3]
    d998:	bl	74f4 <__printf_chk@plt>
    d99c:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    d9a0:	ldr	r3, [pc, #772]	; dcac <blkid_probe_get_size@plt+0x6794>
    d9a4:	mov	r2, #1
    d9a8:	add	r3, pc, r3
    d9ac:	strb	r2, [r3, #12]
    d9b0:	b	d6b4 <blkid_probe_get_size@plt+0x619c>
    d9b4:	mov	r0, r6
    d9b8:	str	r1, [sp, #24]
    d9bc:	bl	74e8 <strdup@plt>
    d9c0:	mov	r6, r0
    d9c4:	b	d914 <blkid_probe_get_size@plt+0x63fc>
    d9c8:	ldr	r2, [pc, #736]	; dcb0 <blkid_probe_get_size@plt+0x6798>
    d9cc:	ldr	r1, [pc, #736]	; dcb4 <blkid_probe_get_size@plt+0x679c>
    d9d0:	add	r2, pc, r2
    d9d4:	add	r2, r2, #764	; 0x2fc
    d9d8:	str	r2, [sp]
    d9dc:	ldr	r2, [pc, #724]	; dcb8 <blkid_probe_get_size@plt+0x67a0>
    d9e0:	mov	r3, #194	; 0xc2
    d9e4:	add	r2, pc, r2
    d9e8:	add	r1, pc, r1
    d9ec:	mov	r0, #1
    d9f0:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    d9f4:	ldr	r3, [pc, #704]	; dcbc <blkid_probe_get_size@plt+0x67a4>
    d9f8:	add	r3, pc, r3
    d9fc:	ldrb	r2, [r3, #24]
    da00:	cmp	r2, #0
    da04:	bne	da1c <blkid_probe_get_size@plt+0x6504>
    da08:	ldrb	r2, [r3, #25]
    da0c:	cmp	r2, #0
    da10:	moveq	r2, #1
    da14:	strbeq	r2, [r3, #24]
    da18:	strbeq	r2, [r3, #25]
    da1c:	bl	3bec8 <blkid_probe_get_size@plt+0x349b0>
    da20:	cmp	r0, #0
    da24:	ble	da7c <blkid_probe_get_size@plt+0x6564>
    da28:	ldr	r3, [pc, #656]	; dcc0 <blkid_probe_get_size@plt+0x67a8>
    da2c:	add	r3, pc, r3
    da30:	ldr	r3, [r3, #4]
    da34:	cmp	r3, #5
    da38:	movle	r6, #0
    da3c:	ble	d804 <blkid_probe_get_size@plt+0x62ec>
    da40:	ldr	r2, [pc, #636]	; dcc4 <blkid_probe_get_size@plt+0x67ac>
    da44:	ldr	r3, [pc, #636]	; dcc8 <blkid_probe_get_size@plt+0x67b0>
    da48:	add	r2, pc, r2
    da4c:	str	r2, [sp, #4]
    da50:	add	r3, pc, r3
    da54:	ldr	r2, [pc, #624]	; dccc <blkid_probe_get_size@plt+0x67b4>
    da58:	add	r3, r3, #776	; 0x308
    da5c:	str	r3, [sp]
    da60:	add	r2, pc, r2
    da64:	mov	r3, #215	; 0xd7
    da68:	mov	r1, #0
    da6c:	ldr	r0, [pc, #604]	; dcd0 <blkid_probe_get_size@plt+0x67b8>
    da70:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    da74:	mov	r6, #0
    da78:	b	d804 <blkid_probe_get_size@plt+0x62ec>
    da7c:	ldr	r3, [pc, #592]	; dcd4 <blkid_probe_get_size@plt+0x67bc>
    da80:	ldr	r3, [r5, r3]
    da84:	ldr	r0, [r3]
    da88:	bl	6d38 <setlinebuf@plt>
    da8c:	add	r0, sp, #32
    da90:	bl	31f4c <blkid_probe_get_size@plt+0x2aa34>
    da94:	subs	r6, r0, #0
    da98:	bge	dae8 <blkid_probe_get_size@plt+0x65d0>
    da9c:	ldr	r3, [pc, #564]	; dcd8 <blkid_probe_get_size@plt+0x67c0>
    daa0:	add	r3, pc, r3
    daa4:	ldr	r3, [r3, #4]
    daa8:	cmp	r3, #2
    daac:	ble	d7d4 <blkid_probe_get_size@plt+0x62bc>
    dab0:	ldr	r2, [pc, #548]	; dcdc <blkid_probe_get_size@plt+0x67c4>
    dab4:	ldr	r3, [pc, #548]	; dce0 <blkid_probe_get_size@plt+0x67c8>
    dab8:	add	r2, pc, r2
    dabc:	str	r2, [sp, #4]
    dac0:	add	r3, pc, r3
    dac4:	ldr	r2, [pc, #536]	; dce4 <blkid_probe_get_size@plt+0x67cc>
    dac8:	add	r3, r3, #776	; 0x308
    dacc:	str	r3, [sp]
    dad0:	add	r2, pc, r2
    dad4:	mov	r3, #224	; 0xe0
    dad8:	mov	r1, r6
    dadc:	ldr	r0, [pc, #516]	; dce8 <blkid_probe_get_size@plt+0x67d0>
    dae0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    dae4:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    dae8:	mvn	r3, #0
    daec:	str	r3, [sp]
    daf0:	mov	r2, #15
    daf4:	mov	r3, #2
    daf8:	mov	r1, #0
    dafc:	mov	r0, #1
    db00:	bl	4bdfc <blkid_probe_get_size@plt+0x448e4>
    db04:	cmp	r0, #0
    db08:	blt	dc0c <blkid_probe_get_size@plt+0x66f4>
    db0c:	mov	r1, #15
    db10:	ldr	r0, [sp, #32]
    db14:	bl	4bb54 <blkid_probe_get_size@plt+0x4463c>
    db18:	mov	r1, #2
    db1c:	ldr	r0, [sp, #32]
    db20:	bl	4bb54 <blkid_probe_get_size@plt+0x4463c>
    db24:	ldr	r0, [pc, #448]	; dcec <blkid_probe_get_size@plt+0x67d4>
    db28:	add	r0, pc, r0
    db2c:	bl	6b4c <puts@plt>
    db30:	ldr	r3, [pc, #440]	; dcf0 <blkid_probe_get_size@plt+0x67d8>
    db34:	add	r3, pc, r3
    db38:	ldrb	r3, [r3, #25]
    db3c:	cmp	r3, #0
    db40:	bne	dbe4 <blkid_probe_get_size@plt+0x66cc>
    db44:	ldr	r3, [pc, #424]	; dcf4 <blkid_probe_get_size@plt+0x67dc>
    db48:	add	r3, pc, r3
    db4c:	ldrb	r3, [r3, #24]
    db50:	cmp	r3, #0
    db54:	beq	db7c <blkid_probe_get_size@plt+0x6664>
    db58:	add	r2, sp, #40	; 0x28
    db5c:	ldr	r1, [sp, #32]
    db60:	mov	r0, #1
    db64:	bl	cf08 <blkid_probe_get_size@plt+0x59f0>
    db68:	subs	r6, r0, #0
    db6c:	blt	d7d4 <blkid_probe_get_size@plt+0x62bc>
    db70:	ldr	r0, [pc, #384]	; dcf8 <blkid_probe_get_size@plt+0x67e0>
    db74:	add	r0, pc, r0
    db78:	bl	6b4c <puts@plt>
    db7c:	mov	r0, #10
    db80:	bl	6c78 <putchar@plt>
    db84:	ldr	r0, [sp, #32]
    db88:	bl	3370c <blkid_probe_get_size@plt+0x2c1f4>
    db8c:	subs	r6, r0, #0
    db90:	movge	r6, #0
    db94:	bge	d7d4 <blkid_probe_get_size@plt+0x62bc>
    db98:	ldr	r3, [pc, #348]	; dcfc <blkid_probe_get_size@plt+0x67e4>
    db9c:	add	r3, pc, r3
    dba0:	ldr	r3, [r3, #4]
    dba4:	cmp	r3, #2
    dba8:	ble	d7d4 <blkid_probe_get_size@plt+0x62bc>
    dbac:	ldr	r2, [pc, #332]	; dd00 <blkid_probe_get_size@plt+0x67e8>
    dbb0:	ldr	r3, [pc, #332]	; dd04 <blkid_probe_get_size@plt+0x67ec>
    dbb4:	add	r2, pc, r2
    dbb8:	str	r2, [sp, #4]
    dbbc:	add	r3, pc, r3
    dbc0:	ldr	r2, [pc, #320]	; dd08 <blkid_probe_get_size@plt+0x67f0>
    dbc4:	add	r3, r3, #776	; 0x308
    dbc8:	str	r3, [sp]
    dbcc:	add	r2, pc, r2
    dbd0:	mov	r3, #252	; 0xfc
    dbd4:	mov	r1, r6
    dbd8:	ldr	r0, [pc, #264]	; dce8 <blkid_probe_get_size@plt+0x67d0>
    dbdc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    dbe0:	b	d7d4 <blkid_probe_get_size@plt+0x62bc>
    dbe4:	add	r2, sp, #36	; 0x24
    dbe8:	ldr	r1, [sp, #32]
    dbec:	mov	r0, #2
    dbf0:	bl	cf08 <blkid_probe_get_size@plt+0x59f0>
    dbf4:	subs	r6, r0, #0
    dbf8:	blt	d7d4 <blkid_probe_get_size@plt+0x62bc>
    dbfc:	ldr	r0, [pc, #264]	; dd0c <blkid_probe_get_size@plt+0x67f4>
    dc00:	add	r0, pc, r0
    dc04:	bl	6b4c <puts@plt>
    dc08:	b	db44 <blkid_probe_get_size@plt+0x662c>
    dc0c:	ldr	r2, [pc, #252]	; dd10 <blkid_probe_get_size@plt+0x67f8>
    dc10:	ldr	r1, [pc, #252]	; dd14 <blkid_probe_get_size@plt+0x67fc>
    dc14:	add	r2, pc, r2
    dc18:	add	r2, r2, #792	; 0x318
    dc1c:	str	r2, [sp]
    dc20:	ldr	r2, [pc, #240]	; dd18 <blkid_probe_get_size@plt+0x6800>
    dc24:	mov	r3, #228	; 0xe4
    dc28:	add	r2, pc, r2
    dc2c:	add	r1, pc, r1
    dc30:	mov	r0, #1
    dc34:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    dc38:	mov	r6, r0
    dc3c:	mov	r3, #0
    dc40:	b	d8bc <blkid_probe_get_size@plt+0x63a4>
    dc44:	mov	r4, r6
    dc48:	mvn	r6, #11
    dc4c:	b	d954 <blkid_probe_get_size@plt+0x643c>
    dc50:	mov	r3, r6
    dc54:	mvn	r6, #11
    dc58:	b	d8bc <blkid_probe_get_size@plt+0x63a4>
    dc5c:	ldr	r3, [sp, #24]
    dc60:	mvn	r6, #11
    dc64:	mov	r4, r3
    dc68:	b	d954 <blkid_probe_get_size@plt+0x643c>
    dc6c:	bl	6fb4 <__stack_chk_fail@plt>
    dc70:	andeq	sl, r8, r8, lsl r5
    dc74:	andeq	r0, r0, ip, lsr r4
    dc78:	andeq	fp, r7, r0, lsr #19
    dc7c:	andeq	sl, r8, r0, ror fp
    dc80:	andeq	sl, r8, ip, ror #22
    dc84:	andeq	r8, r5, r8, ror #7
    dc88:	andeq	r7, r5, r0, ror #24
    dc8c:	andeq	r0, r0, r8, lsr r4
    dc90:	andeq	sl, r8, r4, lsl #20
    dc94:	andeq	sl, r8, r0, lsl #19
    dc98:			; <UNDEFINED> instruction: 0x0008a1b0
    dc9c:	andeq	r0, r0, r8, asr r4
    dca0:	andeq	sl, r8, r4, ror r8
    dca4:	andeq	r0, r0, r0, lsl #9
    dca8:	ldrdeq	r7, [r5], -ip
    dcac:	andeq	sl, r8, ip, lsr r8
    dcb0:	andeq	r6, r5, r0, lsl #24
    dcb4:	andeq	r8, r5, r0, lsl #1
    dcb8:	ldrdeq	r7, [r5], -ip
    dcbc:	andeq	sl, r8, ip, ror #15
    dcc0:	andeq	sl, r8, r0, lsl r7
    dcc4:	andeq	r8, r5, ip, lsr r0
    dcc8:	andeq	r6, r5, r0, lsl #23
    dccc:	andeq	r7, r5, r0, ror #24
    dcd0:	andeq	r0, r0, r6, lsl #8
    dcd4:	andeq	r0, r0, r4, ror r4
    dcd8:	muleq	r8, ip, r6
    dcdc:	strdeq	r7, [r5], -r4
    dce0:	andeq	r6, r5, r0, lsl fp
    dce4:	strdeq	r7, [r5], -r0
    dce8:	andeq	r0, r0, r3, lsl #8
    dcec:	andeq	r7, r5, r4, ror #31
    dcf0:			; <UNDEFINED> instruction: 0x0008a6b0
    dcf4:	muleq	r8, ip, r6
    dcf8:	andeq	r8, r5, r0
    dcfc:	andeq	sl, r8, r0, lsr #11
    dd00:	ldrdeq	r7, [r5], -ip
    dd04:	andeq	r6, r5, r4, lsl sl
    dd08:	strdeq	r7, [r5], -r4
    dd0c:	andeq	r7, r5, r8, lsr pc
    dd10:			; <UNDEFINED> instruction: 0x000569bc
    dd14:	andeq	r7, r5, r0, lsr #29
    dd18:	muleq	r5, r8, sl
    dd1c:	ldr	r3, [pc, #352]	; de84 <blkid_probe_get_size@plt+0x696c>
    dd20:	ldr	ip, [pc, #352]	; de88 <blkid_probe_get_size@plt+0x6970>
    dd24:	add	r3, pc, r3
    dd28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd2c:	sub	sp, sp, #132	; 0x84
    dd30:	ldr	r9, [r3, ip]
    dd34:	mov	r5, r0
    dd38:	mov	r8, r1
    dd3c:	ldr	r3, [r9]
    dd40:	mov	fp, r2
    dd44:	str	r3, [sp, #124]	; 0x7c
    dd48:	bl	732c <__errno_location@plt>
    dd4c:	mov	r6, #0
    dd50:	mov	r7, r0
    dd54:	mov	r0, r5
    dd58:	str	r6, [r7]
    dd5c:	bl	6bb8 <readdir64@plt>
    dd60:	subs	r4, r0, #0
    dd64:	beq	ddec <blkid_probe_get_size@plt+0x68d4>
    dd68:	add	sl, sp, #16
    dd6c:	str	fp, [sp, #8]
    dd70:	ldrb	r3, [r4, #19]
    dd74:	cmp	r3, #46	; 0x2e
    dd78:	beq	ddd8 <blkid_probe_get_size@plt+0x68c0>
    dd7c:	mov	r0, r5
    dd80:	bl	6984 <dirfd@plt>
    dd84:	add	r4, r4, #19
    dd88:	mov	r3, #256	; 0x100
    dd8c:	str	r3, [sp]
    dd90:	mov	r2, r4
    dd94:	mov	r3, sl
    dd98:	mov	r1, r0
    dd9c:	mov	r0, #3
    dda0:	bl	720c <__fxstatat64@plt>
    dda4:	cmp	r0, #0
    dda8:	bne	ddd8 <blkid_probe_get_size@plt+0x68c0>
    ddac:	ldr	r3, [sp, #32]
    ddb0:	ands	fp, r3, r8
    ddb4:	bne	ddd8 <blkid_probe_get_size@plt+0x68c0>
    ddb8:	and	r3, r3, #61440	; 0xf000
    ddbc:	cmp	r3, #16384	; 0x4000
    ddc0:	mov	r0, r5
    ddc4:	beq	de04 <blkid_probe_get_size@plt+0x68ec>
    ddc8:	bl	6984 <dirfd@plt>
    ddcc:	mov	r2, fp
    ddd0:	mov	r1, r4
    ddd4:	bl	6c18 <unlinkat@plt>
    ddd8:	str	r6, [r7]
    dddc:	mov	r0, r5
    dde0:	bl	6bb8 <readdir64@plt>
    dde4:	subs	r4, r0, #0
    dde8:	bne	dd70 <blkid_probe_get_size@plt+0x6858>
    ddec:	ldr	r2, [sp, #124]	; 0x7c
    ddf0:	ldr	r3, [r9]
    ddf4:	cmp	r2, r3
    ddf8:	bne	de80 <blkid_probe_get_size@plt+0x6968>
    ddfc:	add	sp, sp, #132	; 0x84
    de00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de04:	bl	6984 <dirfd@plt>
    de08:	ldr	r2, [pc, #124]	; de8c <blkid_probe_get_size@plt+0x6974>
    de0c:	mov	r1, r4
    de10:	bl	6ed0 <openat64@plt>
    de14:	bl	7098 <fdopendir@plt>
    de18:	subs	r3, r0, #0
    de1c:	bne	de38 <blkid_probe_get_size@plt+0x6920>
    de20:	mov	r0, r5
    de24:	bl	6984 <dirfd@plt>
    de28:	mov	r1, r4
    de2c:	mov	r2, #512	; 0x200
    de30:	bl	6c18 <unlinkat@plt>
    de34:	b	ddd8 <blkid_probe_get_size@plt+0x68c0>
    de38:	ldr	r2, [sp, #8]
    de3c:	sub	r2, r2, #1
    de40:	cmp	r2, #0
    de44:	ble	de58 <blkid_probe_get_size@plt+0x6940>
    de48:	mov	r1, r8
    de4c:	str	r3, [sp, #12]
    de50:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    de54:	ldr	r3, [sp, #12]
    de58:	mov	r0, r5
    de5c:	str	r3, [sp, #12]
    de60:	bl	6984 <dirfd@plt>
    de64:	mov	r1, r4
    de68:	mov	r2, #512	; 0x200
    de6c:	bl	6c18 <unlinkat@plt>
    de70:	ldr	r3, [sp, #12]
    de74:	mov	r0, r3
    de78:	bl	6aa4 <closedir@plt>
    de7c:	b	ddd8 <blkid_probe_get_size@plt+0x68c0>
    de80:	bl	6fb4 <__stack_chk_fail@plt>
    de84:	andeq	r9, r8, r4, asr #28
    de88:	andeq	r0, r0, ip, lsr r4
    de8c:	andeq	r4, r8, r0, lsl #16
    de90:	ldr	r3, [pc, #456]	; e060 <blkid_probe_get_size@plt+0x6b48>
    de94:	ldr	r2, [pc, #456]	; e064 <blkid_probe_get_size@plt+0x6b4c>
    de98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de9c:	add	r3, pc, r3
    dea0:	sub	sp, sp, #44	; 0x2c
    dea4:	subs	r6, r0, #0
    dea8:	str	r1, [sp, #20]
    deac:	ldr	r2, [r3, r2]
    deb0:	str	r2, [sp, #16]
    deb4:	ldr	r3, [r2]
    deb8:	str	r3, [sp, #36]	; 0x24
    debc:	beq	e030 <blkid_probe_get_size@plt+0x6b18>
    dec0:	ldrb	r3, [r6, #212]	; 0xd4
    dec4:	tst	r3, #2
    dec8:	beq	e014 <blkid_probe_get_size@plt+0x6afc>
    decc:	mvn	r2, #1
    ded0:	mov	r3, #0
    ded4:	add	r9, r6, #52	; 0x34
    ded8:	add	sl, sp, #32
    dedc:	strd	r2, [r6, #52]	; 0x34
    dee0:	mov	r1, r9
    dee4:	mov	r2, sl
    dee8:	ldr	r0, [r6, #48]	; 0x30
    deec:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
    def0:	ldr	r4, [sp, #32]
    def4:	cmp	r4, #0
    def8:	beq	dfcc <blkid_probe_get_size@plt+0x6ab4>
    defc:	ldr	r7, [pc, #356]	; e068 <blkid_probe_get_size@plt+0x6b50>
    df00:	ldr	r8, [pc, #356]	; e06c <blkid_probe_get_size@plt+0x6b54>
    df04:	add	r7, pc, r7
    df08:	add	r8, pc, r8
    df0c:	add	r5, r7, #216	; 0xd8
    df10:	add	fp, r7, #192	; 0xc0
    df14:	mov	r1, r8
    df18:	b	df20 <blkid_probe_get_size@plt+0x6a08>
    df1c:	ldr	r1, [fp, #4]!
    df20:	mov	r0, r4
    df24:	bl	7314 <strcmp@plt>
    df28:	cmp	r0, #0
    df2c:	beq	dfa4 <blkid_probe_get_size@plt+0x6a8c>
    df30:	cmp	r5, fp
    df34:	bne	df1c <blkid_probe_get_size@plt+0x6a04>
    df38:	add	r2, sp, #28
    df3c:	mov	r1, r4
    df40:	mov	r0, r6
    df44:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
    df48:	cmp	r0, #0
    df4c:	blt	dfa4 <blkid_probe_get_size@plt+0x6a8c>
    df50:	ldr	fp, [sp, #28]
    df54:	ldrb	r3, [fp]
    df58:	cmp	r3, #47	; 0x2f
    df5c:	beq	dfa4 <blkid_probe_get_size@plt+0x6a8c>
    df60:	mov	r0, fp
    df64:	bl	723c <strlen@plt>
    df68:	subs	r1, r0, #0
    df6c:	str	r1, [sp, #12]
    df70:	beq	dff4 <blkid_probe_get_size@plt+0x6adc>
    df74:	bl	7104 <__ctype_b_loc@plt>
    df78:	ldr	r1, [sp, #12]
    df7c:	add	r1, fp, r1
    df80:	ldr	r0, [r0]
    df84:	b	df90 <blkid_probe_get_size@plt+0x6a78>
    df88:	cmp	fp, r1
    df8c:	beq	dff4 <blkid_probe_get_size@plt+0x6adc>
    df90:	ldrb	r3, [r1, #-1]!
    df94:	lsl	r3, r3, #1
    df98:	ldrh	r3, [r0, r3]
    df9c:	tst	r3, #16384	; 0x4000
    dfa0:	bne	df88 <blkid_probe_get_size@plt+0x6a70>
    dfa4:	ldrb	r3, [r6, #212]	; 0xd4
    dfa8:	tst	r3, #2
    dfac:	beq	dfcc <blkid_probe_get_size@plt+0x6ab4>
    dfb0:	mov	r2, sl
    dfb4:	mov	r1, r9
    dfb8:	ldr	r0, [r6, #48]	; 0x30
    dfbc:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
    dfc0:	ldr	r4, [sp, #32]
    dfc4:	cmp	r4, #0
    dfc8:	bne	df10 <blkid_probe_get_size@plt+0x69f8>
    dfcc:	ldr	r0, [pc, #156]	; e070 <blkid_probe_get_size@plt+0x6b58>
    dfd0:	add	r0, pc, r0
    dfd4:	bl	6b4c <puts@plt>
    dfd8:	ldr	r3, [sp, #16]
    dfdc:	ldr	r2, [sp, #36]	; 0x24
    dfe0:	ldr	r3, [r3]
    dfe4:	cmp	r2, r3
    dfe8:	bne	e05c <blkid_probe_get_size@plt+0x6b44>
    dfec:	add	sp, sp, #44	; 0x2c
    dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dff4:	ldr	r1, [pc, #120]	; e074 <blkid_probe_get_size@plt+0x6b5c>
    dff8:	str	fp, [sp]
    dffc:	mov	r3, r4
    e000:	ldr	r2, [sp, #20]
    e004:	add	r1, pc, r1
    e008:	mov	r0, #1
    e00c:	bl	74f4 <__printf_chk@plt>
    e010:	b	dfa4 <blkid_probe_get_size@plt+0x6a8c>
    e014:	bl	36d44 <blkid_probe_get_size@plt+0x2f82c>
    e018:	subs	r4, r0, #0
    e01c:	bge	decc <blkid_probe_get_size@plt+0x69b4>
    e020:	bl	732c <__errno_location@plt>
    e024:	rsb	r4, r4, #0
    e028:	str	r4, [r0]
    e02c:	b	dfcc <blkid_probe_get_size@plt+0x6ab4>
    e030:	ldr	r2, [pc, #64]	; e078 <blkid_probe_get_size@plt+0x6b60>
    e034:	ldr	r1, [pc, #64]	; e07c <blkid_probe_get_size@plt+0x6b64>
    e038:	add	r2, pc, r2
    e03c:	add	r2, r2, #808	; 0x328
    e040:	str	r2, [sp]
    e044:	ldr	r2, [pc, #52]	; e080 <blkid_probe_get_size@plt+0x6b68>
    e048:	ldr	r3, [pc, #52]	; e084 <blkid_probe_get_size@plt+0x6b6c>
    e04c:	add	r2, pc, r2
    e050:	add	r1, pc, r1
    e054:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    e058:	b	dfcc <blkid_probe_get_size@plt+0x6ab4>
    e05c:	bl	6fb4 <__stack_chk_fail@plt>
    e060:	andeq	r9, r8, ip, asr #25
    e064:	andeq	r0, r0, ip, lsr r4
    e068:	andeq	fp, r7, ip, lsl #2
    e06c:	andeq	r7, r5, r0, lsl #25
    e070:	andeq	r8, r5, ip, lsl r5
    e074:	ldrdeq	r7, [r5], -r4
    e078:	muleq	r5, r8, r5
    e07c:	andeq	ip, r5, r0, lsl pc
    e080:	andeq	r7, r5, r4, ror #22
    e084:	andeq	r0, r0, r7, asr r6
    e088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e08c:	sub	sp, sp, #172	; 0xac
    e090:	ldr	r7, [pc, #4060]	; f074 <blkid_probe_get_size@plt+0x7b5c>
    e094:	ldr	r3, [pc, #4060]	; f078 <blkid_probe_get_size@plt+0x7b60>
    e098:	add	r7, pc, r7
    e09c:	ldr	r4, [pc, #4056]	; f07c <blkid_probe_get_size@plt+0x7b64>
    e0a0:	ldr	r3, [r7, r3]
    e0a4:	ldr	r9, [pc, #4052]	; f080 <blkid_probe_get_size@plt+0x7b68>
    e0a8:	ldr	fp, [pc, #4052]	; f084 <blkid_probe_get_size@plt+0x7b6c>
    e0ac:	add	r4, pc, r4
    e0b0:	str	r3, [sp, #16]
    e0b4:	ldr	r3, [r3]
    e0b8:	mov	sl, r0
    e0bc:	mov	r8, r1
    e0c0:	add	r4, r4, #220	; 0xdc
    e0c4:	add	r9, pc, r9
    e0c8:	add	fp, pc, fp
    e0cc:	mov	r6, #0
    e0d0:	str	r3, [sp, #164]	; 0xa4
    e0d4:	mov	r3, #4
    e0d8:	str	r6, [sp, #44]	; 0x2c
    e0dc:	str	r6, [sp, #40]	; 0x28
    e0e0:	str	r3, [sp, #20]
    e0e4:	mov	r5, #0
    e0e8:	str	r5, [sp]
    e0ec:	mov	r3, r4
    e0f0:	mov	r2, r9
    e0f4:	mov	r1, r8
    e0f8:	mov	r0, sl
    e0fc:	bl	70a4 <getopt_long@plt>
    e100:	cmp	r0, #0
    e104:	blt	e5f4 <blkid_probe_get_size@plt+0x70dc>
    e108:	sub	r3, r0, #63	; 0x3f
    e10c:	cmp	r3, #57	; 0x39
    e110:	addls	pc, pc, r3, lsl #2
    e114:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e118:	b	e200 <blkid_probe_get_size@plt+0x6ce8>
    e11c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e120:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e124:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e128:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e12c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e130:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e134:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e138:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e13c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e140:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e144:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e148:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e14c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e150:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e154:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e158:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e15c:	b	e23c <blkid_probe_get_size@plt+0x6d24>
    e160:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e164:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e168:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e16c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e170:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e174:	b	e258 <blkid_probe_get_size@plt+0x6d40>
    e178:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e17c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e180:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e184:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e188:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e18c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e190:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e194:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e198:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e19c:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1a0:	b	e26c <blkid_probe_get_size@plt+0x6d54>
    e1a4:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1a8:	b	e274 <blkid_probe_get_size@plt+0x6d5c>
    e1ac:	b	e368 <blkid_probe_get_size@plt+0x6e50>
    e1b0:	b	e38c <blkid_probe_get_size@plt+0x6e74>
    e1b4:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1b8:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1bc:	b	e3b8 <blkid_probe_get_size@plt+0x6ea0>
    e1c0:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1c4:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1c8:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1cc:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1d0:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1d4:	b	e3dc <blkid_probe_get_size@plt+0x6ec4>
    e1d8:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1dc:	b	e3dc <blkid_probe_get_size@plt+0x6ec4>
    e1e0:	b	e464 <blkid_probe_get_size@plt+0x6f4c>
    e1e4:	b	e50c <blkid_probe_get_size@plt+0x6ff4>
    e1e8:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1ec:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1f0:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1f4:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1f8:	b	e5c8 <blkid_probe_get_size@plt+0x70b0>
    e1fc:	b	e520 <blkid_probe_get_size@plt+0x7008>
    e200:	mvn	r4, #21
    e204:	ldr	r0, [sp, #40]	; 0x28
    e208:	bl	69f0 <free@plt>
    e20c:	ldr	r0, [sp, #44]	; 0x2c
    e210:	cmp	r0, #0
    e214:	beq	e21c <blkid_probe_get_size@plt+0x6d04>
    e218:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
    e21c:	ldr	r3, [sp, #16]
    e220:	ldr	r2, [sp, #164]	; 0xa4
    e224:	mov	r0, r4
    e228:	ldr	r3, [r3]
    e22c:	cmp	r2, r3
    e230:	bne	efe4 <blkid_probe_get_size@plt+0x7acc>
    e234:	add	sp, sp, #172	; 0xac
    e238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e23c:	ldr	r3, [pc, #3652]	; f088 <blkid_probe_get_size@plt+0x7b70>
    e240:	mov	r2, #1
    e244:	strb	r2, [fp, #27]
    e248:	ldr	r3, [r7, r3]
    e24c:	ldr	r3, [r3]
    e250:	str	r3, [fp, #28]
    e254:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e258:	ldr	r0, [pc, #3628]	; f08c <blkid_probe_get_size@plt+0x7b74>
    e25c:	mov	r4, #0
    e260:	add	r0, pc, r0
    e264:	bl	6b4c <puts@plt>
    e268:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e26c:	mov	r6, #1
    e270:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e274:	ldr	r0, [pc, #3604]	; f090 <blkid_probe_get_size@plt+0x7b78>
    e278:	add	r0, pc, r0
    e27c:	bl	6e28 <unlink@plt>
    e280:	ldr	r0, [pc, #3596]	; f094 <blkid_probe_get_size@plt+0x7b7c>
    e284:	add	r0, pc, r0
    e288:	bl	6ca8 <opendir@plt>
    e28c:	subs	r4, r0, #0
    e290:	beq	e2a0 <blkid_probe_get_size@plt+0x6d88>
    e294:	mov	r2, #1
    e298:	mov	r1, #512	; 0x200
    e29c:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e2a0:	ldr	r0, [pc, #3568]	; f098 <blkid_probe_get_size@plt+0x7b80>
    e2a4:	add	r0, pc, r0
    e2a8:	bl	6ca8 <opendir@plt>
    e2ac:	subs	r5, r0, #0
    e2b0:	beq	e2c0 <blkid_probe_get_size@plt+0x6da8>
    e2b4:	mov	r2, #2
    e2b8:	mov	r1, #0
    e2bc:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e2c0:	ldr	r0, [pc, #3540]	; f09c <blkid_probe_get_size@plt+0x7b84>
    e2c4:	add	r0, pc, r0
    e2c8:	bl	6ca8 <opendir@plt>
    e2cc:	subs	r6, r0, #0
    e2d0:	beq	e2e0 <blkid_probe_get_size@plt+0x6dc8>
    e2d4:	mov	r2, #2
    e2d8:	mov	r1, #0
    e2dc:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e2e0:	ldr	r0, [pc, #3512]	; f0a0 <blkid_probe_get_size@plt+0x7b88>
    e2e4:	add	r0, pc, r0
    e2e8:	bl	6ca8 <opendir@plt>
    e2ec:	subs	r7, r0, #0
    e2f0:	beq	e590 <blkid_probe_get_size@plt+0x7078>
    e2f4:	mov	r2, #2
    e2f8:	mov	r1, #0
    e2fc:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e300:	ldr	r0, [pc, #3484]	; f0a4 <blkid_probe_get_size@plt+0x7b8c>
    e304:	add	r0, pc, r0
    e308:	bl	6ca8 <opendir@plt>
    e30c:	subs	r8, r0, #0
    e310:	beq	e328 <blkid_probe_get_size@plt+0x6e10>
    e314:	mov	r2, #1
    e318:	mov	r1, #0
    e31c:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e320:	mov	r0, r8
    e324:	bl	6aa4 <closedir@plt>
    e328:	mov	r0, r7
    e32c:	bl	6aa4 <closedir@plt>
    e330:	cmp	r6, #0
    e334:	beq	e340 <blkid_probe_get_size@plt+0x6e28>
    e338:	mov	r0, r6
    e33c:	bl	6aa4 <closedir@plt>
    e340:	cmp	r5, #0
    e344:	beq	e350 <blkid_probe_get_size@plt+0x6e38>
    e348:	mov	r0, r5
    e34c:	bl	6aa4 <closedir@plt>
    e350:	cmp	r4, #0
    e354:	beq	e360 <blkid_probe_get_size@plt+0x6e48>
    e358:	mov	r0, r4
    e35c:	bl	6aa4 <closedir@plt>
    e360:	mov	r4, #0
    e364:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e368:	ldr	r3, [pc, #3352]	; f088 <blkid_probe_get_size@plt+0x7b70>
    e36c:	add	r0, sp, #40	; 0x28
    e370:	ldr	r3, [r7, r3]
    e374:	ldr	r1, [r3]
    e378:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
    e37c:	cmp	r0, #0
    e380:	blt	ed70 <blkid_probe_get_size@plt+0x7858>
    e384:	mov	r6, #2
    e388:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e38c:	add	r0, sp, #168	; 0xa8
    e390:	mov	r5, #0
    e394:	str	r5, [r0, #-112]!	; 0xffffff90
    e398:	bl	29f14 <blkid_probe_get_size@plt+0x229fc>
    e39c:	subs	r4, r0, #0
    e3a0:	bge	e540 <blkid_probe_get_size@plt+0x7028>
    e3a4:	ldr	r0, [sp, #56]	; 0x38
    e3a8:	cmp	r0, #0
    e3ac:	beq	e204 <blkid_probe_get_size@plt+0x6cec>
    e3b0:	bl	29ddc <blkid_probe_get_size@plt+0x228c4>
    e3b4:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e3b8:	ldr	r3, [pc, #3304]	; f0a8 <blkid_probe_get_size@plt+0x7b90>
    e3bc:	ldr	r1, [pc, #3304]	; f0ac <blkid_probe_get_size@plt+0x7b94>
    e3c0:	mov	r0, #1
    e3c4:	ldr	r3, [r7, r3]
    e3c8:	add	r1, pc, r1
    e3cc:	mov	r4, #0
    e3d0:	ldr	r2, [r3]
    e3d4:	bl	74f4 <__printf_chk@plt>
    e3d8:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e3dc:	cmp	r0, #110	; 0x6e
    e3e0:	beq	e5bc <blkid_probe_get_size@plt+0x70a4>
    e3e4:	ldr	r5, [pc, #3268]	; f0b0 <blkid_probe_get_size@plt+0x7b98>
    e3e8:	add	r5, pc, r5
    e3ec:	ldr	r3, [pc, #3220]	; f088 <blkid_probe_get_size@plt+0x7b70>
    e3f0:	mov	r1, r5
    e3f4:	ldr	r3, [r7, r3]
    e3f8:	ldr	r3, [r3]
    e3fc:	mov	r0, r3
    e400:	str	r3, [sp, #24]
    e404:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    e408:	ldr	r3, [sp, #24]
    e40c:	mvn	r2, #0
    e410:	mov	r1, r3
    e414:	cmp	r0, #0
    e418:	moveq	r0, r5
    e41c:	movne	r0, #0
    e420:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
    e424:	subs	r1, r0, #0
    e428:	beq	ed48 <blkid_probe_get_size@plt+0x7830>
    e42c:	add	r0, sp, #44	; 0x2c
    e430:	bl	39388 <blkid_probe_get_size@plt+0x31e70>
    e434:	cmp	r0, #0
    e438:	bge	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e43c:	ldr	r3, [pc, #3184]	; f0b4 <blkid_probe_get_size@plt+0x7b9c>
    e440:	ldr	r1, [pc, #3184]	; f0b8 <blkid_probe_get_size@plt+0x7ba0>
    e444:	add	r3, pc, r3
    e448:	ldr	r2, [pc, #3180]	; f0bc <blkid_probe_get_size@plt+0x7ba4>
    e44c:	add	r3, r3, #836	; 0x344
    e450:	add	r1, pc, r1
    e454:	mov	r0, #1
    e458:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    e45c:	mov	r4, r0
    e460:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e464:	ldr	r3, [pc, #3100]	; f088 <blkid_probe_get_size@plt+0x7b70>
    e468:	ldr	r1, [pc, #3152]	; f0c0 <blkid_probe_get_size@plt+0x7ba8>
    e46c:	ldr	r3, [r7, r3]
    e470:	add	r1, pc, r1
    e474:	ldr	r5, [r3]
    e478:	mov	r0, r5
    e47c:	bl	7314 <strcmp@plt>
    e480:	subs	r6, r0, #0
    e484:	beq	e534 <blkid_probe_get_size@plt+0x701c>
    e488:	ldr	r1, [pc, #3124]	; f0c4 <blkid_probe_get_size@plt+0x7bac>
    e48c:	mov	r0, r5
    e490:	add	r1, pc, r1
    e494:	bl	7314 <strcmp@plt>
    e498:	subs	r6, r0, #0
    e49c:	beq	e534 <blkid_probe_get_size@plt+0x701c>
    e4a0:	ldr	r1, [pc, #3104]	; f0c8 <blkid_probe_get_size@plt+0x7bb0>
    e4a4:	mov	r0, r5
    e4a8:	add	r1, pc, r1
    e4ac:	bl	7314 <strcmp@plt>
    e4b0:	cmp	r0, #0
    e4b4:	beq	e668 <blkid_probe_get_size@plt+0x7150>
    e4b8:	ldr	r1, [pc, #3084]	; f0cc <blkid_probe_get_size@plt+0x7bb4>
    e4bc:	mov	r0, r5
    e4c0:	add	r1, pc, r1
    e4c4:	bl	7314 <strcmp@plt>
    e4c8:	subs	r6, r0, #0
    e4cc:	beq	ea30 <blkid_probe_get_size@plt+0x7518>
    e4d0:	ldr	r1, [pc, #3064]	; f0d0 <blkid_probe_get_size@plt+0x7bb8>
    e4d4:	mov	r0, r5
    e4d8:	add	r1, pc, r1
    e4dc:	bl	7314 <strcmp@plt>
    e4e0:	subs	r6, r0, #0
    e4e4:	beq	ed3c <blkid_probe_get_size@plt+0x7824>
    e4e8:	ldr	r1, [pc, #3044]	; f0d4 <blkid_probe_get_size@plt+0x7bbc>
    e4ec:	mov	r0, r5
    e4f0:	add	r1, pc, r1
    e4f4:	bl	7314 <strcmp@plt>
    e4f8:	subs	r6, r0, #0
    e4fc:	bne	efe8 <blkid_probe_get_size@plt+0x7ad0>
    e500:	mov	r3, #4
    e504:	str	r3, [sp, #20]
    e508:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e50c:	ldr	r3, [pc, #3012]	; f0d8 <blkid_probe_get_size@plt+0x7bc0>
    e510:	mov	r2, #1
    e514:	add	r3, pc, r3
    e518:	strb	r2, [r3, #26]
    e51c:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e520:	ldr	r3, [pc, #2996]	; f0dc <blkid_probe_get_size@plt+0x7bc4>
    e524:	mov	r2, #1
    e528:	add	r3, pc, r3
    e52c:	strb	r2, [r3, #27]
    e530:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e534:	mov	r3, #3
    e538:	str	r3, [sp, #20]
    e53c:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e540:	ldr	r0, [sp, #56]	; 0x38
    e544:	cmp	r0, r5
    e548:	beq	ea3c <blkid_probe_get_size@plt+0x7524>
    e54c:	mov	r3, #1
    e550:	strb	r5, [r0, #24]
    e554:	strb	r3, [r0, #60]	; 0x3c
    e558:	bl	2967c <blkid_probe_get_size@plt+0x22164>
    e55c:	subs	r4, r0, #0
    e560:	blt	e3a4 <blkid_probe_get_size@plt+0x6e8c>
    e564:	ldr	r0, [sp, #56]	; 0x38
    e568:	bl	28460 <blkid_probe_get_size@plt+0x20f48>
    e56c:	cmp	r0, #0
    e570:	beq	e588 <blkid_probe_get_size@plt+0x7070>
    e574:	bl	caa8 <blkid_probe_get_size@plt+0x5590>
    e578:	ldr	r0, [sp, #56]	; 0x38
    e57c:	bl	283d4 <blkid_probe_get_size@plt+0x20ebc>
    e580:	cmp	r0, #0
    e584:	bne	e574 <blkid_probe_get_size@plt+0x705c>
    e588:	mov	r4, #0
    e58c:	b	e3a4 <blkid_probe_get_size@plt+0x6e8c>
    e590:	ldr	r0, [pc, #2888]	; f0e0 <blkid_probe_get_size@plt+0x7bc8>
    e594:	add	r0, pc, r0
    e598:	bl	6ca8 <opendir@plt>
    e59c:	subs	r8, r0, #0
    e5a0:	beq	e330 <blkid_probe_get_size@plt+0x6e18>
    e5a4:	mov	r1, r7
    e5a8:	mov	r2, #1
    e5ac:	bl	dd1c <blkid_probe_get_size@plt+0x6804>
    e5b0:	mov	r0, r8
    e5b4:	bl	6aa4 <closedir@plt>
    e5b8:	b	e330 <blkid_probe_get_size@plt+0x6e18>
    e5bc:	ldr	r5, [pc, #2848]	; f0e4 <blkid_probe_get_size@plt+0x7bcc>
    e5c0:	add	r5, pc, r5
    e5c4:	b	e3ec <blkid_probe_get_size@plt+0x6ed4>
    e5c8:	ldr	r2, [pc, #2840]	; f0e8 <blkid_probe_get_size@plt+0x7bd0>
    e5cc:	ldr	r1, [pc, #2840]	; f0ec <blkid_probe_get_size@plt+0x7bd4>
    e5d0:	add	r2, pc, r2
    e5d4:	add	r2, r2, #892	; 0x37c
    e5d8:	str	r2, [sp]
    e5dc:	ldr	r2, [pc, #2828]	; f0f0 <blkid_probe_get_size@plt+0x7bd8>
    e5e0:	ldr	r3, [pc, #2828]	; f0f4 <blkid_probe_get_size@plt+0x7bdc>
    e5e4:	add	r2, pc, r2
    e5e8:	add	r1, pc, r1
    e5ec:	mov	r0, #1
    e5f0:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    e5f4:	ldr	r3, [pc, #2812]	; f0f8 <blkid_probe_get_size@plt+0x7be0>
    e5f8:	cmp	r6, #2
    e5fc:	ldr	r3, [r7, r3]
    e600:	ldr	fp, [r3]
    e604:	add	r4, r8, fp, lsl #2
    e608:	bne	e674 <blkid_probe_get_size@plt+0x715c>
    e60c:	ldr	r3, [r8, fp, lsl #2]
    e610:	cmp	r3, r5
    e614:	beq	ec34 <blkid_probe_get_size@plt+0x771c>
    e618:	ldr	r3, [pc, #2780]	; f0fc <blkid_probe_get_size@plt+0x7be4>
    e61c:	add	r3, pc, r3
    e620:	ldr	r3, [r3, #4]
    e624:	cmp	r3, #2
    e628:	ble	e200 <blkid_probe_get_size@plt+0x6ce8>
    e62c:	ldr	r2, [pc, #2764]	; f100 <blkid_probe_get_size@plt+0x7be8>
    e630:	ldr	r3, [pc, #2764]	; f104 <blkid_probe_get_size@plt+0x7bec>
    e634:	add	r2, pc, r2
    e638:	str	r2, [sp, #4]
    e63c:	add	r3, pc, r3
    e640:	ldr	r2, [pc, #2752]	; f108 <blkid_probe_get_size@plt+0x7bf0>
    e644:	add	r3, r3, #836	; 0x344
    e648:	str	r3, [sp]
    e64c:	add	r2, pc, r2
    e650:	ldr	r3, [pc, #2740]	; f10c <blkid_probe_get_size@plt+0x7bf4>
    e654:	mov	r1, #1073741846	; 0x40000016
    e658:	ldr	r0, [pc, #2736]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    e65c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    e660:	mov	r4, r0
    e664:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e668:	str	r0, [sp, #20]
    e66c:	mov	r6, r0
    e670:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    e674:	cmp	r4, #0
    e678:	ldr	r9, [sp, #44]	; 0x2c
    e67c:	beq	e7b0 <blkid_probe_get_size@plt+0x7298>
    e680:	ldr	r3, [r8, fp, lsl #2]
    e684:	cmp	r3, #0
    e688:	beq	e7b0 <blkid_probe_get_size@plt+0x7298>
    e68c:	mov	r0, r9
    e690:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
    e694:	mov	r7, r0
    e698:	mov	r0, r4
    e69c:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
    e6a0:	mov	r2, #4
    e6a4:	add	r1, r7, r0
    e6a8:	str	r0, [sp, #24]
    e6ac:	add	r1, r1, #1
    e6b0:	mov	r0, r9
    e6b4:	bl	711c <reallocarray@plt>
    e6b8:	subs	r9, r0, #0
    e6bc:	beq	f06c <blkid_probe_get_size@plt+0x7b54>
    e6c0:	str	r5, [r9, r7, lsl #2]
    e6c4:	ldr	r0, [r8, fp, lsl #2]
    e6c8:	str	r9, [sp, #44]	; 0x2c
    e6cc:	cmp	r0, #0
    e6d0:	add	r8, r9, r7, lsl #2
    e6d4:	beq	e7ac <blkid_probe_get_size@plt+0x7294>
    e6d8:	add	sl, r4, #4
    e6dc:	mov	fp, r5
    e6e0:	mov	r4, r8
    e6e4:	b	e704 <blkid_probe_get_size@plt+0x71ec>
    e6e8:	cmp	sl, #0
    e6ec:	add	r5, r5, #1
    e6f0:	str	fp, [r4]
    e6f4:	beq	e798 <blkid_probe_get_size@plt+0x7280>
    e6f8:	ldr	r0, [sl], #4
    e6fc:	cmp	r0, #0
    e700:	beq	e798 <blkid_probe_get_size@plt+0x7280>
    e704:	bl	74e8 <strdup@plt>
    e708:	cmp	r0, #0
    e70c:	str	r0, [r4], #4
    e710:	bne	e6e8 <blkid_probe_get_size@plt+0x71d0>
    e714:	cmp	r5, #0
    e718:	addne	r5, r7, r5
    e71c:	addne	r5, r9, r5, lsl #2
    e720:	beq	e734 <blkid_probe_get_size@plt+0x721c>
    e724:	ldr	r0, [r8], #4
    e728:	bl	69f0 <free@plt>
    e72c:	cmp	r8, r5
    e730:	bne	e724 <blkid_probe_get_size@plt+0x720c>
    e734:	mvn	r1, #11
    e738:	mov	r3, #0
    e73c:	str	r3, [r9, r7, lsl #2]
    e740:	ldr	r3, [pc, #2508]	; f114 <blkid_probe_get_size@plt+0x7bfc>
    e744:	add	r3, pc, r3
    e748:	ldr	r3, [r3, #4]
    e74c:	cmp	r3, #2
    e750:	rsble	r4, r1, #0
    e754:	uxtble	r4, r4
    e758:	rsble	r4, r4, #0
    e75c:	ble	e204 <blkid_probe_get_size@plt+0x6cec>
    e760:	ldr	r2, [pc, #2480]	; f118 <blkid_probe_get_size@plt+0x7c00>
    e764:	ldr	r3, [pc, #2480]	; f11c <blkid_probe_get_size@plt+0x7c04>
    e768:	add	r2, pc, r2
    e76c:	str	r2, [sp, #4]
    e770:	add	r3, pc, r3
    e774:	ldr	r2, [pc, #2468]	; f120 <blkid_probe_get_size@plt+0x7c08>
    e778:	add	r3, r3, #836	; 0x344
    e77c:	str	r3, [sp]
    e780:	add	r2, pc, r2
    e784:	mov	r3, #440	; 0x1b8
    e788:	ldr	r0, [pc, #2432]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    e78c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    e790:	mov	r4, r0
    e794:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    e798:	ldr	r3, [sp, #24]
    e79c:	cmp	r3, r5
    e7a0:	bcc	efb8 <blkid_probe_get_size@plt+0x7aa0>
    e7a4:	subs	r1, r5, #0
    e7a8:	blt	e740 <blkid_probe_get_size@plt+0x7228>
    e7ac:	ldr	r9, [sp, #44]	; 0x2c
    e7b0:	cmp	r9, #0
    e7b4:	beq	ecc4 <blkid_probe_get_size@plt+0x77ac>
    e7b8:	ldr	r3, [r9]
    e7bc:	cmp	r3, #0
    e7c0:	beq	ecc4 <blkid_probe_get_size@plt+0x77ac>
    e7c4:	cmp	r6, #1
    e7c8:	beq	eda8 <blkid_probe_get_size@plt+0x7890>
    e7cc:	ldr	r3, [pc, #2384]	; f124 <blkid_probe_get_size@plt+0x7c0c>
    e7d0:	ldr	fp, [pc, #2384]	; f128 <blkid_probe_get_size@plt+0x7c10>
    e7d4:	add	r3, pc, r3
    e7d8:	ldr	r7, [pc, #2380]	; f12c <blkid_probe_get_size@plt+0x7c14>
    e7dc:	str	r3, [sp, #28]
    e7e0:	ldr	r3, [pc, #2376]	; f130 <blkid_probe_get_size@plt+0x7c18>
    e7e4:	mov	sl, r9
    e7e8:	add	fp, pc, fp
    e7ec:	add	r7, pc, r7
    e7f0:	add	r9, sp, #48	; 0x30
    e7f4:	add	r3, pc, r3
    e7f8:	str	r3, [sp, #32]
    e7fc:	str	r6, [sp, #24]
    e800:	mov	r1, #0
    e804:	str	r1, [sp, #48]	; 0x30
    e808:	mov	r2, r9
    e80c:	ldr	r0, [sl]
    e810:	bl	bfac <blkid_probe_get_size@plt+0x4a94>
    e814:	mov	r5, sl
    e818:	add	sl, sl, #4
    e81c:	cmn	r0, #22
    e820:	beq	ef14 <blkid_probe_get_size@plt+0x79fc>
    e824:	cmp	r0, #0
    e828:	blt	eeac <blkid_probe_get_size@plt+0x7994>
    e82c:	ldr	r3, [sp, #24]
    e830:	ldr	r5, [sp, #48]	; 0x30
    e834:	cmp	r3, #0
    e838:	beq	ea6c <blkid_probe_get_size@plt+0x7554>
    e83c:	add	r4, sp, #56	; 0x38
    e840:	ldr	r0, [sp, #28]
    e844:	bl	6b4c <puts@plt>
    e848:	mov	r1, r4
    e84c:	mov	r0, r5
    e850:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
    e854:	ldr	r2, [sp, #56]	; 0x38
    e858:	ldr	r1, [sp, #32]
    e85c:	mov	r0, #1
    e860:	bl	74f4 <__printf_chk@plt>
    e864:	mov	r1, r4
    e868:	mov	r0, r5
    e86c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    e870:	ldr	r1, [pc, #2236]	; f134 <blkid_probe_get_size@plt+0x7c1c>
    e874:	ldr	r2, [sp, #56]	; 0x38
    e878:	add	r1, pc, r1
    e87c:	mov	r0, #1
    e880:	bl	74f4 <__printf_chk@plt>
    e884:	mov	r1, r4
    e888:	mov	r0, r5
    e88c:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
    e890:	cmp	r0, #0
    e894:	blt	ed14 <blkid_probe_get_size@plt+0x77fc>
    e898:	ldr	r2, [sp, #56]	; 0x38
    e89c:	ldr	r1, [pc, #2196]	; f138 <blkid_probe_get_size@plt+0x7c20>
    e8a0:	mov	r0, #1
    e8a4:	add	r1, pc, r1
    e8a8:	bl	74f4 <__printf_chk@plt>
    e8ac:	mov	r1, r4
    e8b0:	mov	r0, r5
    e8b4:	bl	36fe8 <blkid_probe_get_size@plt+0x2fad0>
    e8b8:	cmp	r0, #0
    e8bc:	blt	ed28 <blkid_probe_get_size@plt+0x7810>
    e8c0:	ldr	r2, [sp, #56]	; 0x38
    e8c4:	ldr	r1, [pc, #2160]	; f13c <blkid_probe_get_size@plt+0x7c24>
    e8c8:	mov	r0, #1
    e8cc:	add	r1, pc, r1
    e8d0:	bl	74f4 <__printf_chk@plt>
    e8d4:	ldr	r1, [pc, #2148]	; f140 <blkid_probe_get_size@plt+0x7c28>
    e8d8:	ldr	r8, [pc, #2148]	; f144 <blkid_probe_get_size@plt+0x7c2c>
    e8dc:	mov	r0, r5
    e8e0:	add	r1, pc, r1
    e8e4:	bl	de90 <blkid_probe_get_size@plt+0x6978>
    e8e8:	add	r6, sp, #52	; 0x34
    e8ec:	add	r8, pc, r8
    e8f0:	mov	r0, r5
    e8f4:	b	e920 <blkid_probe_get_size@plt+0x7408>
    e8f8:	ldr	r2, [sp, #56]	; 0x38
    e8fc:	ldr	r1, [pc, #2116]	; f148 <blkid_probe_get_size@plt+0x7c30>
    e900:	mov	r0, #1
    e904:	add	r1, pc, r1
    e908:	bl	74f4 <__printf_chk@plt>
    e90c:	ldr	r1, [pc, #2104]	; f14c <blkid_probe_get_size@plt+0x7c34>
    e910:	ldr	r0, [sp, #52]	; 0x34
    e914:	add	r1, pc, r1
    e918:	bl	de90 <blkid_probe_get_size@plt+0x6978>
    e91c:	ldr	r0, [sp, #52]	; 0x34
    e920:	mov	r1, r6
    e924:	bl	37880 <blkid_probe_get_size@plt+0x30368>
    e928:	cmp	r0, #0
    e92c:	blt	ea08 <blkid_probe_get_size@plt+0x74f0>
    e930:	mov	r1, r4
    e934:	ldr	r0, [sp, #52]	; 0x34
    e938:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
    e93c:	ldr	r2, [sp, #56]	; 0x38
    e940:	mov	r1, fp
    e944:	mov	r0, #1
    e948:	bl	74f4 <__printf_chk@plt>
    e94c:	mov	r1, r4
    e950:	ldr	r0, [sp, #52]	; 0x34
    e954:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
    e958:	ldr	r2, [sp, #56]	; 0x38
    e95c:	mov	r1, r7
    e960:	mov	r0, #1
    e964:	bl	74f4 <__printf_chk@plt>
    e968:	mov	r1, r4
    e96c:	ldr	r0, [sp, #52]	; 0x34
    e970:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
    e974:	ldr	r1, [pc, #2004]	; f150 <blkid_probe_get_size@plt+0x7c38>
    e978:	add	r1, pc, r1
    e97c:	cmp	r0, #0
    e980:	movlt	r2, r8
    e984:	ldrge	r2, [sp, #56]	; 0x38
    e988:	mov	r0, #1
    e98c:	strlt	r8, [sp, #56]	; 0x38
    e990:	bl	74f4 <__printf_chk@plt>
    e994:	mov	r1, r4
    e998:	ldr	r0, [sp, #52]	; 0x34
    e99c:	bl	36fe8 <blkid_probe_get_size@plt+0x2fad0>
    e9a0:	cmp	r0, #0
    e9a4:	bge	e8f8 <blkid_probe_get_size@plt+0x73e0>
    e9a8:	ldr	r3, [pc, #1956]	; f154 <blkid_probe_get_size@plt+0x7c3c>
    e9ac:	add	r3, pc, r3
    e9b0:	mov	r2, r3
    e9b4:	str	r3, [sp, #56]	; 0x38
    e9b8:	b	e8fc <blkid_probe_get_size@plt+0x73e4>
    e9bc:	add	r1, sp, #56	; 0x38
    e9c0:	mov	r0, r5
    e9c4:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
    e9c8:	subs	r1, r0, #0
    e9cc:	blt	ef70 <blkid_probe_get_size@plt+0x7a58>
    e9d0:	ldr	r3, [pc, #1920]	; f158 <blkid_probe_get_size@plt+0x7c40>
    e9d4:	add	r3, pc, r3
    e9d8:	ldrb	r3, [r3, #26]
    e9dc:	cmp	r3, #0
    e9e0:	bne	ea00 <blkid_probe_get_size@plt+0x74e8>
    e9e4:	ldr	r1, [pc, #1904]	; f15c <blkid_probe_get_size@plt+0x7c44>
    e9e8:	ldr	r0, [sp, #56]	; 0x38
    e9ec:	add	r1, pc, r1
    e9f0:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    e9f4:	cmp	r0, #0
    e9f8:	str	r0, [sp, #56]	; 0x38
    e9fc:	beq	f290 <blkid_probe_get_size@plt+0x7d78>
    ea00:	ldr	r0, [sp, #56]	; 0x38
    ea04:	bl	6b4c <puts@plt>
    ea08:	ldr	r0, [sp, #48]	; 0x30
    ea0c:	cmp	r0, #0
    ea10:	beq	ea18 <blkid_probe_get_size@plt+0x7500>
    ea14:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
    ea18:	cmp	sl, #0
    ea1c:	beq	e360 <blkid_probe_get_size@plt+0x6e48>
    ea20:	ldr	r3, [sl]
    ea24:	cmp	r3, #0
    ea28:	bne	e800 <blkid_probe_get_size@plt+0x72e8>
    ea2c:	b	e360 <blkid_probe_get_size@plt+0x6e48>
    ea30:	mov	r3, #2
    ea34:	str	r3, [sp, #20]
    ea38:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    ea3c:	ldr	r3, [pc, #1820]	; f160 <blkid_probe_get_size@plt+0x7c48>
    ea40:	ldr	r2, [pc, #1820]	; f164 <blkid_probe_get_size@plt+0x7c4c>
    ea44:	add	r3, pc, r3
    ea48:	ldr	r1, [pc, #1816]	; f168 <blkid_probe_get_size@plt+0x7c50>
    ea4c:	add	r3, r3, #848	; 0x350
    ea50:	str	r3, [sp]
    ea54:	add	r2, pc, r2
    ea58:	mov	r3, #233	; 0xe9
    ea5c:	add	r1, pc, r1
    ea60:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
    ea64:	mvn	r4, #21
    ea68:	b	e3a4 <blkid_probe_get_size@plt+0x6e8c>
    ea6c:	cmp	r5, #0
    ea70:	beq	ee48 <blkid_probe_get_size@plt+0x7930>
    ea74:	ldr	r3, [sp, #20]
    ea78:	sub	r3, r3, #1
    ea7c:	cmp	r3, #3
    ea80:	addls	pc, pc, r3, lsl #2
    ea84:	b	e9bc <blkid_probe_get_size@plt+0x74a4>
    ea88:	b	ebe0 <blkid_probe_get_size@plt+0x76c8>
    ea8c:	b	eb28 <blkid_probe_get_size@plt+0x7610>
    ea90:	b	ea98 <blkid_probe_get_size@plt+0x7580>
    ea94:	b	ee14 <blkid_probe_get_size@plt+0x78fc>
    ea98:	add	r4, sp, #56	; 0x38
    ea9c:	mov	r1, r4
    eaa0:	mov	r0, r5
    eaa4:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
    eaa8:	cmp	r0, #0
    eaac:	beq	ea08 <blkid_probe_get_size@plt+0x74f0>
    eab0:	ldr	r3, [pc, #1716]	; f16c <blkid_probe_get_size@plt+0x7c54>
    eab4:	ldr	r6, [pc, #1716]	; f170 <blkid_probe_get_size@plt+0x7c58>
    eab8:	ldr	r8, [pc, #1716]	; f174 <blkid_probe_get_size@plt+0x7c5c>
    eabc:	add	r3, pc, r3
    eac0:	add	r6, pc, r6
    eac4:	str	r3, [sp, #36]	; 0x24
    eac8:	add	r8, pc, r8
    eacc:	b	eb04 <blkid_probe_get_size@plt+0x75ec>
    ead0:	ldr	r2, [r6, #28]
    ead4:	cmp	r2, #0
    ead8:	beq	ee08 <blkid_probe_get_size@plt+0x78f0>
    eadc:	str	r3, [sp]
    eae0:	mov	r1, r8
    eae4:	mov	r3, r0
    eae8:	mov	r0, #1
    eaec:	bl	74f4 <__printf_chk@plt>
    eaf0:	mov	r1, r4
    eaf4:	mov	r0, r5
    eaf8:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
    eafc:	cmp	r0, #0
    eb00:	beq	ea08 <blkid_probe_get_size@plt+0x74f0>
    eb04:	ldrb	r2, [r6, #27]
    eb08:	ldr	r3, [sp, #56]	; 0x38
    eb0c:	cmp	r2, #0
    eb10:	bne	ead0 <blkid_probe_get_size@plt+0x75b8>
    eb14:	mov	r2, r0
    eb18:	ldr	r1, [sp, #36]	; 0x24
    eb1c:	mov	r0, #1
    eb20:	bl	74f4 <__printf_chk@plt>
    eb24:	b	eaf0 <blkid_probe_get_size@plt+0x75d8>
    eb28:	mov	r0, r5
    eb2c:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
    eb30:	cmp	r0, #0
    eb34:	beq	ee38 <blkid_probe_get_size@plt+0x7920>
    eb38:	ldr	r3, [pc, #1592]	; f178 <blkid_probe_get_size@plt+0x7c60>
    eb3c:	ldr	r8, [pc, #1592]	; f17c <blkid_probe_get_size@plt+0x7c64>
    eb40:	add	r3, pc, r3
    eb44:	ldr	r6, [pc, #1588]	; f180 <blkid_probe_get_size@plt+0x7c68>
    eb48:	ldr	r4, [pc, #1588]	; f184 <blkid_probe_get_size@plt+0x7c6c>
    eb4c:	add	r8, pc, r8
    eb50:	str	r3, [sp, #36]	; 0x24
    eb54:	mov	r3, r7
    eb58:	add	r6, pc, r6
    eb5c:	mov	r7, r8
    eb60:	add	r4, pc, r4
    eb64:	mov	r8, r3
    eb68:	b	eb98 <blkid_probe_get_size@plt+0x7680>
    eb6c:	mov	r3, r0
    eb70:	mov	r2, r7
    eb74:	mov	r1, r4
    eb78:	mov	r0, #1
    eb7c:	bl	74f4 <__printf_chk@plt>
    eb80:	mov	r0, r5
    eb84:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
    eb88:	ldr	r7, [pc, #1528]	; f188 <blkid_probe_get_size@plt+0x7c70>
    eb8c:	add	r7, pc, r7
    eb90:	cmp	r0, #0
    eb94:	beq	ee34 <blkid_probe_get_size@plt+0x791c>
    eb98:	ldrb	r3, [r6, #26]
    eb9c:	cmp	r3, #0
    eba0:	bne	eb6c <blkid_probe_get_size@plt+0x7654>
    eba4:	ldr	r1, [sp, #36]	; 0x24
    eba8:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
    ebac:	cmp	r0, #0
    ebb0:	bne	eb6c <blkid_probe_get_size@plt+0x7654>
    ebb4:	ldr	r2, [pc, #1488]	; f18c <blkid_probe_get_size@plt+0x7c74>
    ebb8:	ldr	r1, [pc, #1488]	; f190 <blkid_probe_get_size@plt+0x7c78>
    ebbc:	add	r2, pc, r2
    ebc0:	add	r2, r2, #924	; 0x39c
    ebc4:	str	r2, [sp]
    ebc8:	ldr	r2, [pc, #1476]	; f194 <blkid_probe_get_size@plt+0x7c7c>
    ebcc:	mov	r3, #276	; 0x114
    ebd0:	add	r2, pc, r2
    ebd4:	add	r1, pc, r1
    ebd8:	mov	r0, #1
    ebdc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    ebe0:	add	r1, sp, #56	; 0x38
    ebe4:	mov	r0, r5
    ebe8:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
    ebec:	subs	r1, r0, #0
    ebf0:	bge	ea00 <blkid_probe_get_size@plt+0x74e8>
    ebf4:	ldr	r3, [pc, #1436]	; f198 <blkid_probe_get_size@plt+0x7c80>
    ebf8:	add	r3, pc, r3
    ebfc:	ldr	r3, [r3, #4]
    ec00:	cmp	r3, #2
    ec04:	bgt	f038 <blkid_probe_get_size@plt+0x7b20>
    ec08:	rsb	r0, r1, #0
    ec0c:	uxtb	r0, r0
    ec10:	rsb	r0, r0, #0
    ec14:	cmp	r0, #0
    ec18:	bge	ea08 <blkid_probe_get_size@plt+0x74f0>
    ec1c:	mov	r4, r0
    ec20:	ldr	r0, [sp, #48]	; 0x30
    ec24:	cmp	r0, #0
    ec28:	beq	e204 <blkid_probe_get_size@plt+0x6cec>
    ec2c:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
    ec30:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ec34:	ldr	r1, [sp, #40]	; 0x28
    ec38:	cmp	r1, #0
    ec3c:	beq	ee80 <blkid_probe_get_size@plt+0x7968>
    ec40:	ldr	r3, [pc, #1364]	; f19c <blkid_probe_get_size@plt+0x7c84>
    ec44:	add	r2, sp, #56	; 0x38
    ec48:	add	r3, pc, r3
    ec4c:	mov	r0, #3
    ec50:	ldrb	r6, [r3, #27]
    ec54:	ldr	r5, [r3, #28]
    ec58:	bl	6a2c <__xstat64@plt>
    ec5c:	subs	r4, r0, #0
    ec60:	bne	ed98 <blkid_probe_get_size@plt+0x7880>
    ec64:	ldr	r1, [sp, #56]	; 0x38
    ec68:	ldr	r2, [sp, #60]	; 0x3c
    ec6c:	cmp	r6, #0
    ec70:	lsr	r3, r1, #12
    ec74:	orr	r3, r3, r2, lsl #20
    ec78:	lsl	r0, r1, #12
    ec7c:	bic	r2, r2, #4080	; 0xff0
    ec80:	bic	r3, r3, #255	; 0xff
    ec84:	bic	r2, r2, #15
    ec88:	uxtb	r1, r1
    ec8c:	orr	r3, r3, r1
    ec90:	orr	r2, r2, r0, lsr #20
    ec94:	beq	ee20 <blkid_probe_get_size@plt+0x7908>
    ec98:	cmp	r5, #0
    ec9c:	beq	ee74 <blkid_probe_get_size@plt+0x795c>
    eca0:	ldr	r1, [pc, #1272]	; f1a0 <blkid_probe_get_size@plt+0x7c88>
    eca4:	str	r3, [sp, #4]
    eca8:	str	r5, [sp]
    ecac:	mov	r3, r2
    ecb0:	add	r1, pc, r1
    ecb4:	mov	r2, r5
    ecb8:	mov	r0, #1
    ecbc:	bl	74f4 <__printf_chk@plt>
    ecc0:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ecc4:	ldr	r3, [pc, #1240]	; f1a4 <blkid_probe_get_size@plt+0x7c8c>
    ecc8:	add	r3, pc, r3
    eccc:	ldr	r3, [r3, #4]
    ecd0:	cmp	r3, #2
    ecd4:	ble	e200 <blkid_probe_get_size@plt+0x6ce8>
    ecd8:	ldr	r2, [pc, #1224]	; f1a8 <blkid_probe_get_size@plt+0x7c90>
    ecdc:	ldr	r3, [pc, #1224]	; f1ac <blkid_probe_get_size@plt+0x7c94>
    ece0:	add	r2, pc, r2
    ece4:	str	r2, [sp, #4]
    ece8:	add	r3, pc, r3
    ecec:	ldr	r2, [pc, #1212]	; f1b0 <blkid_probe_get_size@plt+0x7c98>
    ecf0:	add	r3, r3, #836	; 0x344
    ecf4:	str	r3, [sp]
    ecf8:	add	r2, pc, r2
    ecfc:	mov	r3, #444	; 0x1bc
    ed00:	mov	r1, #1073741846	; 0x40000016
    ed04:	ldr	r0, [pc, #1028]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    ed08:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    ed0c:	mov	r4, r0
    ed10:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ed14:	ldr	r3, [pc, #1176]	; f1b4 <blkid_probe_get_size@plt+0x7c9c>
    ed18:	add	r3, pc, r3
    ed1c:	mov	r2, r3
    ed20:	str	r3, [sp, #56]	; 0x38
    ed24:	b	e89c <blkid_probe_get_size@plt+0x7384>
    ed28:	ldr	r3, [pc, #1160]	; f1b8 <blkid_probe_get_size@plt+0x7ca0>
    ed2c:	add	r3, pc, r3
    ed30:	mov	r2, r3
    ed34:	str	r3, [sp, #56]	; 0x38
    ed38:	b	e8c4 <blkid_probe_get_size@plt+0x73ac>
    ed3c:	mov	r3, #1
    ed40:	str	r3, [sp, #20]
    ed44:	b	e0e4 <blkid_probe_get_size@plt+0x6bcc>
    ed48:	ldr	r3, [pc, #1132]	; f1bc <blkid_probe_get_size@plt+0x7ca4>
    ed4c:	ldr	r1, [pc, #1132]	; f1c0 <blkid_probe_get_size@plt+0x7ca8>
    ed50:	add	r3, pc, r3
    ed54:	ldr	r2, [pc, #1128]	; f1c4 <blkid_probe_get_size@plt+0x7cac>
    ed58:	add	r3, r3, #836	; 0x344
    ed5c:	add	r1, pc, r1
    ed60:	mov	r0, #1
    ed64:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    ed68:	mov	r4, r0
    ed6c:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ed70:	ldr	r3, [pc, #1104]	; f1c8 <blkid_probe_get_size@plt+0x7cb0>
    ed74:	ldr	r1, [pc, #1104]	; f1cc <blkid_probe_get_size@plt+0x7cb4>
    ed78:	add	r3, pc, r3
    ed7c:	ldr	r2, [pc, #1100]	; f1d0 <blkid_probe_get_size@plt+0x7cb8>
    ed80:	add	r3, r3, #836	; 0x344
    ed84:	add	r1, pc, r1
    ed88:	mov	r0, #1
    ed8c:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
    ed90:	mov	r4, r0
    ed94:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ed98:	bl	732c <__errno_location@plt>
    ed9c:	ldr	r4, [r0]
    eda0:	rsb	r4, r4, #0
    eda4:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    eda8:	mov	r0, r9
    edac:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
    edb0:	cmp	r0, #1
    edb4:	bls	e7cc <blkid_probe_get_size@plt+0x72b4>
    edb8:	ldr	r3, [pc, #1044]	; f1d4 <blkid_probe_get_size@plt+0x7cbc>
    edbc:	add	r3, pc, r3
    edc0:	ldr	r3, [r3, #4]
    edc4:	cmp	r3, #2
    edc8:	ble	e200 <blkid_probe_get_size@plt+0x6ce8>
    edcc:	ldr	r2, [pc, #1028]	; f1d8 <blkid_probe_get_size@plt+0x7cc0>
    edd0:	ldr	r3, [pc, #1028]	; f1dc <blkid_probe_get_size@plt+0x7cc4>
    edd4:	add	r2, pc, r2
    edd8:	str	r2, [sp, #4]
    eddc:	add	r3, pc, r3
    ede0:	ldr	r2, [pc, #1016]	; f1e0 <blkid_probe_get_size@plt+0x7cc8>
    ede4:	add	r3, r3, #836	; 0x344
    ede8:	str	r3, [sp]
    edec:	add	r2, pc, r2
    edf0:	ldr	r3, [pc, #1004]	; f1e4 <blkid_probe_get_size@plt+0x7ccc>
    edf4:	mov	r1, #1073741846	; 0x40000016
    edf8:	ldr	r0, [pc, #784]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    edfc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    ee00:	mov	r4, r0
    ee04:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ee08:	ldr	r2, [pc, #984]	; f1e8 <blkid_probe_get_size@plt+0x7cd0>
    ee0c:	add	r2, pc, r2
    ee10:	b	eadc <blkid_probe_get_size@plt+0x75c4>
    ee14:	mov	r0, r5
    ee18:	bl	caa8 <blkid_probe_get_size@plt+0x5590>
    ee1c:	b	ec14 <blkid_probe_get_size@plt+0x76fc>
    ee20:	ldr	r1, [pc, #964]	; f1ec <blkid_probe_get_size@plt+0x7cd4>
    ee24:	mov	r0, #1
    ee28:	add	r1, pc, r1
    ee2c:	bl	74f4 <__printf_chk@plt>
    ee30:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    ee34:	mov	r7, r8
    ee38:	ldr	r0, [pc, #944]	; f1f0 <blkid_probe_get_size@plt+0x7cd8>
    ee3c:	add	r0, pc, r0
    ee40:	bl	6b4c <puts@plt>
    ee44:	b	ea08 <blkid_probe_get_size@plt+0x74f0>
    ee48:	ldr	r2, [pc, #932]	; f1f4 <blkid_probe_get_size@plt+0x7cdc>
    ee4c:	ldr	r1, [pc, #932]	; f1f8 <blkid_probe_get_size@plt+0x7ce0>
    ee50:	add	r2, pc, r2
    ee54:	add	r2, r2, #924	; 0x39c
    ee58:	str	r2, [sp]
    ee5c:	ldr	r2, [pc, #920]	; f1fc <blkid_probe_get_size@plt+0x7ce4>
    ee60:	mov	r3, #255	; 0xff
    ee64:	add	r2, pc, r2
    ee68:	add	r1, pc, r1
    ee6c:	mov	r0, #1
    ee70:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    ee74:	ldr	r5, [pc, #900]	; f200 <blkid_probe_get_size@plt+0x7ce8>
    ee78:	add	r5, pc, r5
    ee7c:	b	eca0 <blkid_probe_get_size@plt+0x7788>
    ee80:	ldr	r2, [pc, #892]	; f204 <blkid_probe_get_size@plt+0x7cec>
    ee84:	ldr	r1, [pc, #892]	; f208 <blkid_probe_get_size@plt+0x7cf0>
    ee88:	add	r2, pc, r2
    ee8c:	add	r2, r2, #892	; 0x37c
    ee90:	str	r2, [sp]
    ee94:	ldr	r2, [pc, #880]	; f20c <blkid_probe_get_size@plt+0x7cf4>
    ee98:	ldr	r3, [pc, #880]	; f210 <blkid_probe_get_size@plt+0x7cf8>
    ee9c:	add	r2, pc, r2
    eea0:	add	r1, pc, r1
    eea4:	mov	r0, #1
    eea8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    eeac:	ldr	r3, [pc, #864]	; f214 <blkid_probe_get_size@plt+0x7cfc>
    eeb0:	mov	r4, r0
    eeb4:	add	r3, pc, r3
    eeb8:	ldr	r3, [r3, #4]
    eebc:	cmp	r3, #2
    eec0:	rsble	r4, r0, #0
    eec4:	uxtble	r4, r4
    eec8:	rsble	r4, r4, #0
    eecc:	ble	ec20 <blkid_probe_get_size@plt+0x7708>
    eed0:	ldr	r2, [pc, #832]	; f218 <blkid_probe_get_size@plt+0x7d00>
    eed4:	ldr	r3, [pc, #832]	; f21c <blkid_probe_get_size@plt+0x7d04>
    eed8:	add	r2, pc, r2
    eedc:	ldr	r1, [r5]
    eee0:	add	r3, pc, r3
    eee4:	str	r2, [sp, #4]
    eee8:	ldr	r2, [pc, #816]	; f220 <blkid_probe_get_size@plt+0x7d08>
    eeec:	add	r3, r3, #836	; 0x344
    eef0:	str	r1, [sp, #8]
    eef4:	str	r3, [sp]
    eef8:	mov	r1, r4
    eefc:	ldr	r3, [pc, #800]	; f224 <blkid_probe_get_size@plt+0x7d0c>
    ef00:	add	r2, pc, r2
    ef04:	ldr	r0, [pc, #516]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    ef08:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    ef0c:	mov	r4, r0
    ef10:	b	ec20 <blkid_probe_get_size@plt+0x7708>
    ef14:	ldr	r3, [pc, #780]	; f228 <blkid_probe_get_size@plt+0x7d10>
    ef18:	mov	r4, r0
    ef1c:	add	r3, pc, r3
    ef20:	ldr	r3, [r3, #4]
    ef24:	cmp	r3, #2
    ef28:	ble	ec20 <blkid_probe_get_size@plt+0x7708>
    ef2c:	ldr	r2, [pc, #760]	; f22c <blkid_probe_get_size@plt+0x7d14>
    ef30:	ldr	r3, [pc, #760]	; f230 <blkid_probe_get_size@plt+0x7d18>
    ef34:	add	r2, pc, r2
    ef38:	ldr	r1, [r5]
    ef3c:	add	r3, pc, r3
    ef40:	str	r2, [sp, #4]
    ef44:	ldr	r2, [pc, #744]	; f234 <blkid_probe_get_size@plt+0x7d1c>
    ef48:	add	r3, r3, #836	; 0x344
    ef4c:	str	r1, [sp, #8]
    ef50:	str	r3, [sp]
    ef54:	mov	r1, r0
    ef58:	ldr	r3, [pc, #728]	; f238 <blkid_probe_get_size@plt+0x7d20>
    ef5c:	add	r2, pc, r2
    ef60:	ldr	r0, [pc, #424]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    ef64:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    ef68:	mov	r4, r0
    ef6c:	b	ec20 <blkid_probe_get_size@plt+0x7708>
    ef70:	ldr	r3, [pc, #708]	; f23c <blkid_probe_get_size@plt+0x7d24>
    ef74:	add	r3, pc, r3
    ef78:	ldr	r3, [r3, #4]
    ef7c:	cmp	r3, #2
    ef80:	ble	ec08 <blkid_probe_get_size@plt+0x76f0>
    ef84:	ldr	r2, [pc, #692]	; f240 <blkid_probe_get_size@plt+0x7d28>
    ef88:	ldr	r3, [pc, #692]	; f244 <blkid_probe_get_size@plt+0x7d2c>
    ef8c:	add	r2, pc, r2
    ef90:	str	r2, [sp, #4]
    ef94:	add	r3, pc, r3
    ef98:	ldr	r2, [pc, #680]	; f248 <blkid_probe_get_size@plt+0x7d30>
    ef9c:	add	r3, r3, #940	; 0x3ac
    efa0:	str	r3, [sp]
    efa4:	add	r2, pc, r2
    efa8:	ldr	r3, [pc, #668]	; f24c <blkid_probe_get_size@plt+0x7d34>
    efac:	ldr	r0, [pc, #348]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    efb0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    efb4:	b	ec14 <blkid_probe_get_size@plt+0x76fc>
    efb8:	ldr	r2, [pc, #656]	; f250 <blkid_probe_get_size@plt+0x7d38>
    efbc:	ldr	r1, [pc, #656]	; f254 <blkid_probe_get_size@plt+0x7d3c>
    efc0:	add	r2, pc, r2
    efc4:	add	r2, r2, #904	; 0x388
    efc8:	str	r2, [sp]
    efcc:	ldr	r2, [pc, #644]	; f258 <blkid_probe_get_size@plt+0x7d40>
    efd0:	mov	r3, #215	; 0xd7
    efd4:	add	r2, pc, r2
    efd8:	add	r1, pc, r1
    efdc:	mov	r0, #0
    efe0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    efe4:	bl	6fb4 <__stack_chk_fail@plt>
    efe8:	ldr	r3, [pc, #620]	; f25c <blkid_probe_get_size@plt+0x7d44>
    efec:	add	r3, pc, r3
    eff0:	ldr	r3, [r3, #4]
    eff4:	cmp	r3, #2
    eff8:	ble	e200 <blkid_probe_get_size@plt+0x6ce8>
    effc:	ldr	r2, [pc, #604]	; f260 <blkid_probe_get_size@plt+0x7d48>
    f000:	ldr	r3, [pc, #604]	; f264 <blkid_probe_get_size@plt+0x7d4c>
    f004:	add	r2, pc, r2
    f008:	str	r2, [sp, #4]
    f00c:	add	r3, pc, r3
    f010:	ldr	r2, [pc, #592]	; f268 <blkid_probe_get_size@plt+0x7d50>
    f014:	add	r3, r3, #836	; 0x344
    f018:	str	r3, [sp]
    f01c:	add	r2, pc, r2
    f020:	ldr	r3, [pc, #580]	; f26c <blkid_probe_get_size@plt+0x7d54>
    f024:	mov	r1, #1073741846	; 0x40000016
    f028:	ldr	r0, [pc, #224]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    f02c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    f030:	mov	r4, r0
    f034:	b	e204 <blkid_probe_get_size@plt+0x6cec>
    f038:	ldr	r2, [pc, #560]	; f270 <blkid_probe_get_size@plt+0x7d58>
    f03c:	ldr	r3, [pc, #560]	; f274 <blkid_probe_get_size@plt+0x7d5c>
    f040:	add	r2, pc, r2
    f044:	str	r2, [sp, #4]
    f048:	add	r3, pc, r3
    f04c:	ldr	r2, [pc, #548]	; f278 <blkid_probe_get_size@plt+0x7d60>
    f050:	add	r3, r3, #940	; 0x3ac
    f054:	str	r3, [sp]
    f058:	add	r2, pc, r2
    f05c:	ldr	r3, [pc, #536]	; f27c <blkid_probe_get_size@plt+0x7d64>
    f060:	ldr	r0, [pc, #168]	; f110 <blkid_probe_get_size@plt+0x7bf8>
    f064:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    f068:	b	ec14 <blkid_probe_get_size@plt+0x76fc>
    f06c:	mvn	r1, #11
    f070:	b	e740 <blkid_probe_get_size@plt+0x7228>
    f074:	ldrdeq	r9, [r8], -r0
    f078:	andeq	r0, r0, ip, lsr r4
    f07c:	andeq	sl, r7, r4, ror #30
    f080:	muleq	r5, r4, r0
    f084:	andeq	sl, r8, ip, lsl r1
    f088:	andeq	r0, r0, r8, asr r4
    f08c:	andeq	r7, r5, ip, asr #3
    f090:	andeq	r7, r5, r8, ror #19
    f094:	strdeq	r7, [r5], -r0
    f098:	andeq	r7, r5, r0, ror #19
    f09c:	ldrdeq	r7, [r5], -r0
    f0a0:	andeq	r7, r5, r0, asr #19
    f0a4:			; <UNDEFINED> instruction: 0x000579bc
    f0a8:	andeq	r0, r0, r0, lsl #9
    f0ac:	andeq	r7, r5, r8, lsl #18
    f0b0:	andeq	r7, r5, ip, lsr r0
    f0b4:	andeq	r6, r5, ip, lsl #3
    f0b8:	strdeq	r7, [r5], -ip
    f0bc:	andeq	r0, r0, r9, ror r1
    f0c0:	andeq	r7, r5, r4, lsl #15
    f0c4:	andeq	r7, r5, r0, ror r7
    f0c8:	andeq	r5, r6, ip, ror fp
    f0cc:	andeq	r7, r5, r4, asr #14
    f0d0:	andeq	ip, r5, ip, lsr lr
    f0d4:	andeq	r7, r5, ip, lsl r7
    f0d8:	ldrdeq	r9, [r8], -r0
    f0dc:			; <UNDEFINED> instruction: 0x00089cbc
    f0e0:	andeq	r7, r5, ip, lsr #14
    f0e4:	andeq	sp, r5, r0, lsr #3
    f0e8:	andeq	r6, r5, r0
    f0ec:	andeq	r6, r5, r4, asr #31
    f0f0:	andeq	r7, r5, r8, rrx
    f0f4:	andeq	r0, r0, fp, lsr #3
    f0f8:	andeq	r0, r0, r0, asr #8
    f0fc:	andeq	r9, r8, r0, lsr #22
    f100:	andeq	r7, r5, r8, lsr fp
    f104:	muleq	r5, r4, pc	; <UNPREDICTABLE>
    f108:	andeq	r7, r5, r0
    f10c:			; <UNDEFINED> instruction: 0x000001b1
    f110:	andeq	r0, r0, r3, lsl #8
    f114:	strdeq	r9, [r8], -r8
    f118:	andeq	r7, r5, r0, ror sl
    f11c:	andeq	r5, r5, r0, ror #28
    f120:	andeq	r6, r5, ip, asr #29
    f124:	muleq	r5, r8, fp
    f128:	andeq	r7, r5, r4, lsr #26
    f12c:	andeq	r7, r5, r4, asr #26
    f130:			; <UNDEFINED> instruction: 0x00057cb4
    f134:	andeq	r7, r5, ip, asr #24
    f138:	andeq	r7, r5, r4, lsr ip
    f13c:	andeq	r7, r5, r4, lsr #24
    f140:	andeq	r7, r5, r4, lsr #24
    f144:	andeq	r7, r5, r0, lsl #24
    f148:	andeq	r7, r5, r8, asr ip
    f14c:	andeq	r7, r5, ip, asr ip
    f150:	andeq	r7, r5, ip, asr #23
    f154:	andeq	r7, r5, r0, asr #22
    f158:	andeq	r9, r8, r0, lsl r8
    f15c:	andeq	ip, r5, r4, ror sp
    f160:	andeq	r5, r5, ip, lsl #23
    f164:	ldrdeq	r7, [r5], -r0
    f168:	strdeq	r7, [r5], -r8
    f16c:			; <UNDEFINED> instruction: 0x00056cb0
    f170:	andeq	r9, r8, r4, lsr #14
    f174:	muleq	r5, r8, r8
    f178:	andeq	ip, r5, r0, lsr #24
    f17c:	andeq	r7, r5, r0, lsr #19
    f180:	andeq	r9, r8, ip, lsl #13
    f184:	ldrdeq	r7, [r5], -r8
    f188:	andeq	r3, r6, r0, asr r4
    f18c:	andeq	r5, r5, r4, lsl sl
    f190:	andeq	r7, r5, r8, lsr r7
    f194:	andeq	r6, r5, ip, ror sl
    f198:	andeq	r9, r8, r4, asr #10
    f19c:	muleq	r8, ip, r5
    f1a0:	andeq	r7, r5, r0, lsl #10
    f1a4:	andeq	r9, r8, r4, ror r4
    f1a8:	andeq	r7, r5, ip, lsl r5
    f1ac:	andeq	r5, r5, r8, ror #17
    f1b0:	andeq	r6, r5, r4, asr r9
    f1b4:	ldrdeq	r7, [r5], -r4
    f1b8:	andeq	r7, r5, r0, asr #15
    f1bc:	andeq	r5, r5, r0, lsl #17
    f1c0:	strdeq	r6, [r5], -r0
    f1c4:	andeq	r0, r0, r5, ror r1
    f1c8:	andeq	r5, r5, r8, asr r8
    f1cc:	andeq	r6, r5, r8, asr #17
    f1d0:	muleq	r0, r3, r1
    f1d4:	andeq	r9, r8, r0, lsl #7
    f1d8:	andeq	r7, r5, ip, asr #8
    f1dc:	strdeq	r5, [r5], -r4
    f1e0:	andeq	r6, r5, r0, ror #16
    f1e4:			; <UNDEFINED> instruction: 0x000001bf
    f1e8:	andeq	r7, r5, r0, ror #13
    f1ec:	andeq	r7, r5, r0, lsr #7
    f1f0:			; <UNDEFINED> instruction: 0x000576b0
    f1f4:	andeq	r5, r5, r0, lsl #15
    f1f8:	strdeq	ip, [r5], -r8
    f1fc:	andeq	r6, r5, r8, ror #15
    f200:	andeq	r6, r5, r4, ror sp
    f204:	andeq	r5, r5, r8, asr #14
    f208:	andeq	r5, r6, r4, lsl #3
    f20c:			; <UNDEFINED> instruction: 0x000567b0
    f210:			; <UNDEFINED> instruction: 0x000001b2
    f214:	andeq	r9, r8, r8, lsl #5
    f218:	ldrdeq	r7, [r5], -r8
    f21c:	strdeq	r5, [r5], -r0
    f220:	andeq	r6, r5, ip, asr #14
    f224:	andeq	r0, r0, r9, asr #3
    f228:	andeq	r9, r8, r0, lsr #4
    f22c:	andeq	r7, r5, r8, lsr #6
    f230:	muleq	r5, r4, r6
    f234:	strdeq	r6, [r5], -r0
    f238:	andeq	r0, r0, r7, asr #3
    f23c:	andeq	r9, r8, r8, asr #3
    f240:	andeq	r7, r5, ip, lsr r3
    f244:	andeq	r5, r5, ip, lsr r6
    f248:	andeq	r6, r5, r8, lsr #13
    f24c:	andeq	r0, r0, r7, lsl #2
    f250:	andeq	r5, r5, r0, lsl r6
    f254:	strdeq	r7, [r5], -r8
    f258:			; <UNDEFINED> instruction: 0x000563b0
    f25c:	andeq	r9, r8, r0, asr r1
    f260:	andeq	r6, r5, ip, lsl #24
    f264:	andeq	r5, r5, r4, asr #11
    f268:	andeq	r6, r5, r0, lsr r6
    f26c:	andeq	r0, r0, sl, lsl #3
    f270:	andeq	r7, r5, r0, lsl #6
    f274:	andeq	r5, r5, r8, lsl #11
    f278:	strdeq	r6, [r5], -r4
    f27c:	andeq	r0, r0, r1, lsr #2
    f280:	andeq	r5, r5, r8, lsr r3
    f284:	andeq	r7, r5, r4, lsr r0
    f288:	andeq	r6, r5, r0, lsr #7
    f28c:	andeq	r0, r0, sl, lsl #2
    f290:	ldr	r2, [pc, #-24]	; f280 <blkid_probe_get_size@plt+0x7d68>
    f294:	ldr	r1, [pc, #-24]	; f284 <blkid_probe_get_size@plt+0x7d6c>
    f298:	add	r2, pc, r2
    f29c:	add	r2, r2, #924	; 0x39c
    f2a0:	str	r2, [sp]
    f2a4:	ldr	r2, [pc, #-36]	; f288 <blkid_probe_get_size@plt+0x7d70>
    f2a8:	ldr	r3, [pc, #-36]	; f28c <blkid_probe_get_size@plt+0x7d74>
    f2ac:	add	r2, pc, r2
    f2b0:	add	r1, pc, r1
    f2b4:	mov	r0, #1
    f2b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
    f2bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f2c0:	sub	sp, sp, #220	; 0xdc
    f2c4:	ldr	r5, [pc, #4060]	; 102a8 <blkid_probe_get_size@plt+0x8d90>
    f2c8:	ldr	r3, [pc, #4060]	; 102ac <blkid_probe_get_size@plt+0x8d94>
    f2cc:	add	r5, pc, r5
    f2d0:	ldr	sl, [pc, #4056]	; 102b0 <blkid_probe_get_size@plt+0x8d98>
    f2d4:	ldr	r3, [r5, r3]
    f2d8:	ldr	r6, [pc, #4052]	; 102b4 <blkid_probe_get_size@plt+0x8d9c>
    f2dc:	ldr	fp, [pc, #4052]	; 102b8 <blkid_probe_get_size@plt+0x8da0>
    f2e0:	add	sl, pc, sl
    f2e4:	str	r3, [sp, #40]	; 0x28
    f2e8:	mov	r9, r0
    f2ec:	ldr	r3, [r3]
    f2f0:	mov	r8, r1
    f2f4:	add	r7, sl, #428	; 0x1ac
    f2f8:	add	r6, pc, r6
    f2fc:	add	fp, pc, fp
    f300:	str	r3, [sp, #212]	; 0xd4
    f304:	mov	r4, #0
    f308:	str	r4, [sp]
    f30c:	mov	r3, r7
    f310:	mov	r2, r6
    f314:	mov	r1, r8
    f318:	mov	r0, r9
    f31c:	bl	70a4 <getopt_long@plt>
    f320:	cmp	r0, #0
    f324:	blt	f3ac <blkid_probe_get_size@plt+0x7e94>
    f328:	cmp	r0, #114	; 0x72
    f32c:	beq	f760 <blkid_probe_get_size@plt+0x8248>
    f330:	ble	f368 <blkid_probe_get_size@plt+0x7e50>
    f334:	cmp	r0, #116	; 0x74
    f338:	beq	f79c <blkid_probe_get_size@plt+0x8284>
    f33c:	blt	f788 <blkid_probe_get_size@plt+0x8270>
    f340:	cmp	r0, #117	; 0x75
    f344:	beq	f740 <blkid_probe_get_size@plt+0x8228>
    f348:	cmp	r0, #256	; 0x100
    f34c:	bne	f380 <blkid_probe_get_size@plt+0x7e68>
    f350:	ldr	r3, [pc, #3940]	; 102bc <blkid_probe_get_size@plt+0x8da4>
    f354:	ldr	r2, [pc, #3940]	; 102c0 <blkid_probe_get_size@plt+0x8da8>
    f358:	add	r3, pc, r3
    f35c:	add	r2, pc, r2
    f360:	str	r2, [r3, #36]	; 0x24
    f364:	b	f304 <blkid_probe_get_size@plt+0x7dec>
    f368:	cmp	r0, #86	; 0x56
    f36c:	beq	f774 <blkid_probe_get_size@plt+0x825c>
    f370:	cmp	r0, #104	; 0x68
    f374:	beq	f700 <blkid_probe_get_size@plt+0x81e8>
    f378:	cmp	r0, #63	; 0x3f
    f37c:	beq	f754 <blkid_probe_get_size@plt+0x823c>
    f380:	ldr	r2, [pc, #3900]	; 102c4 <blkid_probe_get_size@plt+0x8dac>
    f384:	ldr	r1, [pc, #3900]	; 102c8 <blkid_probe_get_size@plt+0x8db0>
    f388:	add	r2, pc, r2
    f38c:	add	r2, r2, #956	; 0x3bc
    f390:	str	r2, [sp]
    f394:	ldr	r2, [pc, #3888]	; 102cc <blkid_probe_get_size@plt+0x8db4>
    f398:	mov	r3, #74	; 0x4a
    f39c:	add	r2, pc, r2
    f3a0:	add	r1, pc, r1
    f3a4:	mov	r0, #1
    f3a8:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
    f3ac:	ldr	r3, [pc, #3868]	; 102d0 <blkid_probe_get_size@plt+0x8db8>
    f3b0:	add	r3, pc, r3
    f3b4:	ldrb	r2, [r3, #32]
    f3b8:	cmp	r2, r4
    f3bc:	beq	f6c4 <blkid_probe_get_size@plt+0x81ac>
    f3c0:	ldr	r2, [r3, #48]	; 0x30
    f3c4:	mov	r1, #20
    f3c8:	str	r2, [sp, #68]	; 0x44
    f3cc:	ldr	r2, [r3, #36]	; 0x24
    f3d0:	ldrb	r3, [r3, #40]	; 0x28
    f3d4:	mov	r0, #1
    f3d8:	str	r4, [sp, #80]	; 0x50
    f3dc:	str	r3, [sp, #60]	; 0x3c
    f3e0:	str	r2, [sp, #72]	; 0x48
    f3e4:	bl	7164 <calloc@plt>
    f3e8:	subs	r3, r0, #0
    f3ec:	mov	r5, r3
    f3f0:	str	r3, [sp, #52]	; 0x34
    f3f4:	beq	106b8 <blkid_probe_get_size@plt+0x91a0>
    f3f8:	bl	39870 <blkid_probe_get_size@plt+0x32358>
    f3fc:	cmp	r0, #0
    f400:	str	r0, [r5, #4]
    f404:	beq	106a8 <blkid_probe_get_size@plt+0x9190>
    f408:	mov	r1, #20
    f40c:	mov	r0, #1
    f410:	bl	7164 <calloc@plt>
    f414:	ldr	r1, [sp, #52]	; 0x34
    f418:	cmp	r0, #0
    f41c:	str	r0, [r1]
    f420:	beq	106a8 <blkid_probe_get_size@plt+0x9190>
    f424:	ldr	r2, [r1, #8]
    f428:	add	r3, sl, #556	; 0x22c
    f42c:	add	r2, r2, #1
    f430:	str	r2, [r1, #8]
    f434:	ldr	r1, [pc, #3736]	; 102d4 <blkid_probe_get_size@plt+0x8dbc>
    f438:	ldr	r2, [sp, #68]	; 0x44
    f43c:	add	r1, pc, r1
    f440:	add	r0, sp, #80	; 0x50
    f444:	bl	4a7f8 <blkid_probe_get_size@plt+0x432e0>
    f448:	subs	r1, r0, #0
    f44c:	blt	101c8 <blkid_probe_get_size@plt+0x8cb0>
    f450:	ldr	r3, [sp, #80]	; 0x50
    f454:	cmp	r3, #0
    f458:	beq	106a0 <blkid_probe_get_size@plt+0x9188>
    f45c:	ldr	r2, [r3]
    f460:	cmp	r2, #0
    f464:	beq	fde4 <blkid_probe_get_size@plt+0x88cc>
    f468:	ldr	r1, [pc, #3688]	; 102d8 <blkid_probe_get_size@plt+0x8dc0>
    f46c:	str	r3, [sp, #36]	; 0x24
    f470:	add	r1, pc, r1
    f474:	add	r3, r1, #992	; 0x3e0
    f478:	str	r3, [sp, #76]	; 0x4c
    f47c:	mov	r3, #1
    f480:	str	r3, [sp, #48]	; 0x30
    f484:	ldr	r3, [pc, #3664]	; 102dc <blkid_probe_get_size@plt+0x8dc4>
    f488:	str	r4, [sp, #32]
    f48c:	add	r3, pc, r3
    f490:	str	r3, [sp, #64]	; 0x40
    f494:	ldr	r3, [pc, #3652]	; 102e0 <blkid_probe_get_size@plt+0x8dc8>
    f498:	add	r3, pc, r3
    f49c:	ldr	r3, [r3]
    f4a0:	cmp	r3, #6
    f4a4:	bgt	fd18 <blkid_probe_get_size@plt+0x8800>
    f4a8:	ldr	r3, [sp, #36]	; 0x24
    f4ac:	ldr	r1, [pc, #3632]	; 102e4 <blkid_probe_get_size@plt+0x8dcc>
    f4b0:	mov	r6, #0
    f4b4:	ldr	r0, [r3], #4
    f4b8:	add	r1, pc, r1
    f4bc:	str	r3, [sp, #36]	; 0x24
    f4c0:	ldr	r3, [sp, #48]	; 0x30
    f4c4:	str	r0, [sp, #44]	; 0x2c
    f4c8:	add	r3, r3, #1
    f4cc:	str	r6, [sp, #84]	; 0x54
    f4d0:	uxth	r3, r3
    f4d4:	str	r3, [sp, #56]	; 0x38
    f4d8:	bl	738c <fopen64@plt>
    f4dc:	subs	r8, r0, #0
    f4e0:	movne	r5, r6
    f4e4:	addne	r9, sp, #88	; 0x58
    f4e8:	beq	fd54 <blkid_probe_get_size@plt+0x883c>
    f4ec:	mov	r4, #0
    f4f0:	mov	r1, r4
    f4f4:	mov	r2, r9
    f4f8:	mov	r0, r8
    f4fc:	str	r4, [sp, #88]	; 0x58
    f500:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f504:	cmp	r0, #0
    f508:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f50c:	ldr	fp, [sp, #88]	; 0x58
    f510:	beq	10154 <blkid_probe_get_size@plt+0x8c3c>
    f514:	ldrb	r3, [fp]
    f518:	add	r6, r6, #1
    f51c:	cmp	r3, #35	; 0x23
    f520:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    f524:	mov	r1, #35	; 0x23
    f528:	mov	r0, fp
    f52c:	bl	74c4 <strchr@plt>
    f530:	cmp	r0, #0
    f534:	strbne	r4, [r0]
    f538:	ldrne	fp, [sp, #88]	; 0x58
    f53c:	mov	r0, fp
    f540:	bl	723c <strlen@plt>
    f544:	subs	r7, r0, #0
    f548:	beq	f820 <blkid_probe_get_size@plt+0x8308>
    f54c:	ldr	r3, [pc, #3476]	; 102e8 <blkid_probe_get_size@plt+0x8dd0>
    f550:	add	r3, pc, r3
    f554:	str	r3, [sp, #28]
    f558:	bl	7104 <__ctype_b_loc@plt>
    f55c:	mov	r4, r0
    f560:	ldr	ip, [r4]
    f564:	add	r0, fp, r7
    f568:	b	f574 <blkid_probe_get_size@plt+0x805c>
    f56c:	subs	r7, r2, #0
    f570:	beq	f820 <blkid_probe_get_size@plt+0x8308>
    f574:	ldrb	r3, [r0, #-1]!
    f578:	sub	r2, r7, #1
    f57c:	lsl	r3, r3, #1
    f580:	ldrh	sl, [ip, r3]
    f584:	ands	sl, sl, #8192	; 0x2000
    f588:	bne	f56c <blkid_probe_get_size@plt+0x8054>
    f58c:	cmp	r5, #1
    f590:	strb	sl, [fp, r7]
    f594:	beq	f96c <blkid_probe_get_size@plt+0x8454>
    f598:	bcc	f8d8 <blkid_probe_get_size@plt+0x83c0>
    f59c:	cmp	r5, #2
    f5a0:	bne	f8bc <blkid_probe_get_size@plt+0x83a4>
    f5a4:	cmp	r7, #0
    f5a8:	beq	f83c <blkid_probe_get_size@plt+0x8324>
    f5ac:	ldr	r2, [sp, #88]	; 0x58
    f5b0:	ldrb	r3, [r2]
    f5b4:	cmp	r3, #32
    f5b8:	beq	fc88 <blkid_probe_get_size@plt+0x8770>
    f5bc:	ldr	r3, [pc, #3368]	; 102ec <blkid_probe_get_size@plt+0x8dd4>
    f5c0:	add	r3, pc, r3
    f5c4:	ldr	r3, [r3]
    f5c8:	cmp	r3, #3
    f5cc:	bgt	fb2c <blkid_probe_get_size@plt+0x8614>
    f5d0:	ldr	r0, [sp, #84]	; 0x54
    f5d4:	bl	393b4 <blkid_probe_get_size@plt+0x31e9c>
    f5d8:	mov	r5, #0
    f5dc:	ldr	r0, [sp, #88]	; 0x58
    f5e0:	bl	69f0 <free@plt>
    f5e4:	mov	r1, r5
    f5e8:	mov	r2, r9
    f5ec:	mov	r0, r8
    f5f0:	str	r5, [sp, #88]	; 0x58
    f5f4:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f5f8:	cmp	r0, #0
    f5fc:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f600:	ldr	fp, [sp, #88]	; 0x58
    f604:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    f608:	ldrb	r3, [fp]
    f60c:	add	r6, r6, #1
    f610:	cmp	r3, #35	; 0x23
    f614:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    f618:	mov	r1, #35	; 0x23
    f61c:	mov	r0, fp
    f620:	bl	74c4 <strchr@plt>
    f624:	subs	r4, r0, #0
    f628:	beq	fd78 <blkid_probe_get_size@plt+0x8860>
    f62c:	strb	r5, [r4]
    f630:	ldr	fp, [sp, #88]	; 0x58
    f634:	mov	r0, fp
    f638:	bl	723c <strlen@plt>
    f63c:	subs	r7, r0, #0
    f640:	bne	f558 <blkid_probe_get_size@plt+0x8040>
    f644:	strb	r7, [fp]
    f648:	mov	r4, #0
    f64c:	ldr	r0, [sp, #88]	; 0x58
    f650:	bl	69f0 <free@plt>
    f654:	mov	r2, r9
    f658:	mov	r1, #0
    f65c:	mov	r0, r8
    f660:	str	r4, [sp, #88]	; 0x58
    f664:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f668:	cmp	r0, #0
    f66c:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f670:	ldr	fp, [sp, #88]	; 0x58
    f674:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    f678:	ldrb	r3, [fp]
    f67c:	add	r6, r6, #1
    f680:	cmp	r3, #35	; 0x23
    f684:	beq	f8c8 <blkid_probe_get_size@plt+0x83b0>
    f688:	mov	r1, #35	; 0x23
    f68c:	mov	r0, fp
    f690:	bl	74c4 <strchr@plt>
    f694:	cmp	r0, #0
    f698:	beq	fd90 <blkid_probe_get_size@plt+0x8878>
    f69c:	strb	r4, [r0]
    f6a0:	ldr	fp, [sp, #88]	; 0x58
    f6a4:	mov	r5, #0
    f6a8:	mov	r0, fp
    f6ac:	bl	723c <strlen@plt>
    f6b0:	cmp	r0, r5
    f6b4:	mov	r7, r0
    f6b8:	bne	f54c <blkid_probe_get_size@plt+0x8034>
    f6bc:	strb	r0, [fp]
    f6c0:	b	f64c <blkid_probe_get_size@plt+0x8134>
    f6c4:	ldr	r4, [r3, #44]	; 0x2c
    f6c8:	cmp	r4, #0
    f6cc:	beq	100d8 <blkid_probe_get_size@plt+0x8bc0>
    f6d0:	add	r0, sp, #216	; 0xd8
    f6d4:	mov	r3, #0
    f6d8:	str	r3, [r0, #-136]!	; 0xffffff78
    f6dc:	bl	35128 <blkid_probe_get_size@plt+0x2dc10>
    f6e0:	subs	r3, r0, #0
    f6e4:	str	r3, [sp, #32]
    f6e8:	bge	f7b8 <blkid_probe_get_size@plt+0x82a0>
    f6ec:	ldr	r0, [sp, #80]	; 0x50
    f6f0:	cmp	r0, #0
    f6f4:	beq	f720 <blkid_probe_get_size@plt+0x8208>
    f6f8:	bl	350bc <blkid_probe_get_size@plt+0x2dba4>
    f6fc:	b	f720 <blkid_probe_get_size@plt+0x8208>
    f700:	ldr	r3, [pc, #3048]	; 102f0 <blkid_probe_get_size@plt+0x8dd8>
    f704:	str	r4, [sp, #32]
    f708:	ldr	r1, [pc, #3044]	; 102f4 <blkid_probe_get_size@plt+0x8ddc>
    f70c:	ldr	r3, [r5, r3]
    f710:	add	r1, pc, r1
    f714:	mov	r0, #1
    f718:	ldr	r2, [r3]
    f71c:	bl	74f4 <__printf_chk@plt>
    f720:	ldr	r3, [sp, #40]	; 0x28
    f724:	ldr	r2, [sp, #212]	; 0xd4
    f728:	ldr	r0, [sp, #32]
    f72c:	ldr	r3, [r3]
    f730:	cmp	r2, r3
    f734:	bne	106cc <blkid_probe_get_size@plt+0x91b4>
    f738:	add	sp, sp, #220	; 0xdc
    f73c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f740:	ldr	r3, [pc, #2992]	; 102f8 <blkid_probe_get_size@plt+0x8de0>
    f744:	mov	r2, #1
    f748:	add	r3, pc, r3
    f74c:	strb	r2, [r3, #32]
    f750:	b	f304 <blkid_probe_get_size@plt+0x7dec>
    f754:	mvn	r3, #21
    f758:	str	r3, [sp, #32]
    f75c:	b	f720 <blkid_probe_get_size@plt+0x8208>
    f760:	ldr	r3, [pc, #2964]	; 102fc <blkid_probe_get_size@plt+0x8de4>
    f764:	ldr	r3, [r5, r3]
    f768:	ldr	r3, [r3]
    f76c:	str	r3, [fp, #48]	; 0x30
    f770:	b	f304 <blkid_probe_get_size@plt+0x7dec>
    f774:	ldr	r0, [pc, #2948]	; 10300 <blkid_probe_get_size@plt+0x8de8>
    f778:	str	r4, [sp, #32]
    f77c:	add	r0, pc, r0
    f780:	bl	6b4c <puts@plt>
    f784:	b	f720 <blkid_probe_get_size@plt+0x8208>
    f788:	ldr	r3, [pc, #2932]	; 10304 <blkid_probe_get_size@plt+0x8dec>
    f78c:	mov	r2, #1
    f790:	add	r3, pc, r3
    f794:	strb	r2, [r3, #40]	; 0x28
    f798:	b	f304 <blkid_probe_get_size@plt+0x7dec>
    f79c:	ldr	r3, [pc, #2904]	; 102fc <blkid_probe_get_size@plt+0x8de4>
    f7a0:	ldr	r2, [pc, #2912]	; 10308 <blkid_probe_get_size@plt+0x8df0>
    f7a4:	ldr	r3, [r5, r3]
    f7a8:	add	r2, pc, r2
    f7ac:	ldr	r3, [r3]
    f7b0:	str	r3, [r2, #44]	; 0x2c
    f7b4:	b	f304 <blkid_probe_get_size@plt+0x7dec>
    f7b8:	mov	r1, r4
    f7bc:	ldr	r0, [sp, #80]	; 0x50
    f7c0:	bl	34f88 <blkid_probe_get_size@plt+0x2da70>
    f7c4:	cmp	r0, #0
    f7c8:	blt	f808 <blkid_probe_get_size@plt+0x82f0>
    f7cc:	ldr	r6, [pc, #2872]	; 1030c <blkid_probe_get_size@plt+0x8df4>
    f7d0:	add	r5, sp, #88	; 0x58
    f7d4:	add	r4, sp, #84	; 0x54
    f7d8:	add	r6, pc, r6
    f7dc:	b	f7f0 <blkid_probe_get_size@plt+0x82d8>
    f7e0:	ldrd	r2, [sp, #84]	; 0x54
    f7e4:	mov	r1, r6
    f7e8:	mov	r0, #1
    f7ec:	bl	74f4 <__printf_chk@plt>
    f7f0:	mov	r2, r5
    f7f4:	mov	r1, r4
    f7f8:	ldr	r0, [sp, #80]	; 0x50
    f7fc:	bl	34e88 <blkid_probe_get_size@plt+0x2d970>
    f800:	cmp	r0, #0
    f804:	bgt	f7e0 <blkid_probe_get_size@plt+0x82c8>
    f808:	ldr	r0, [sp, #80]	; 0x50
    f80c:	mov	r3, #0
    f810:	cmp	r0, #0
    f814:	str	r3, [sp, #32]
    f818:	bne	f6f8 <blkid_probe_get_size@plt+0x81e0>
    f81c:	b	f720 <blkid_probe_get_size@plt+0x8208>
    f820:	mov	r3, #0
    f824:	cmp	r5, #1
    f828:	strb	r3, [fp]
    f82c:	beq	fa18 <blkid_probe_get_size@plt+0x8500>
    f830:	bcc	f648 <blkid_probe_get_size@plt+0x8130>
    f834:	cmp	r5, #2
    f838:	bne	f8bc <blkid_probe_get_size@plt+0x83a4>
    f83c:	ldr	r0, [sp, #84]	; 0x54
    f840:	bl	393b4 <blkid_probe_get_size@plt+0x31e9c>
    f844:	mov	r5, #0
    f848:	ldr	r0, [sp, #88]	; 0x58
    f84c:	bl	69f0 <free@plt>
    f850:	mov	r1, r5
    f854:	mov	r2, r9
    f858:	mov	r0, r8
    f85c:	str	r5, [sp, #88]	; 0x58
    f860:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f864:	cmp	r0, #0
    f868:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f86c:	ldr	fp, [sp, #88]	; 0x58
    f870:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    f874:	ldrb	r3, [fp]
    f878:	add	r6, r6, #1
    f87c:	cmp	r3, #35	; 0x23
    f880:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    f884:	mov	r1, #35	; 0x23
    f888:	mov	r0, fp
    f88c:	bl	74c4 <strchr@plt>
    f890:	subs	r4, r0, #0
    f894:	beq	fb10 <blkid_probe_get_size@plt+0x85f8>
    f898:	strb	r5, [r4]
    f89c:	ldr	fp, [sp, #88]	; 0x58
    f8a0:	mov	r0, fp
    f8a4:	bl	723c <strlen@plt>
    f8a8:	cmp	r0, #0
    f8ac:	mov	r7, r0
    f8b0:	bne	f54c <blkid_probe_get_size@plt+0x8034>
    f8b4:	strb	r0, [fp]
    f8b8:	b	f648 <blkid_probe_get_size@plt+0x8130>
    f8bc:	ldr	r0, [sp, #88]	; 0x58
    f8c0:	bl	69f0 <free@plt>
    f8c4:	b	f4ec <blkid_probe_get_size@plt+0x7fd4>
    f8c8:	mov	r5, #0
    f8cc:	mov	r0, fp
    f8d0:	bl	69f0 <free@plt>
    f8d4:	b	f4ec <blkid_probe_get_size@plt+0x7fd4>
    f8d8:	ldr	fp, [sp, #88]	; 0x58
    f8dc:	ldrb	r3, [fp]
    f8e0:	cmp	r3, #32
    f8e4:	bne	fa7c <blkid_probe_get_size@plt+0x8564>
    f8e8:	ldr	r3, [sp, #64]	; 0x40
    f8ec:	ldr	r3, [r3]
    f8f0:	cmp	r3, #3
    f8f4:	movle	r0, fp
    f8f8:	bgt	fd98 <blkid_probe_get_size@plt+0x8880>
    f8fc:	bl	69f0 <free@plt>
    f900:	mov	r2, r9
    f904:	mov	r1, sl
    f908:	mov	r0, r8
    f90c:	str	sl, [sp, #88]	; 0x58
    f910:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f914:	cmp	r0, #0
    f918:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f91c:	ldr	fp, [sp, #88]	; 0x58
    f920:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    f924:	ldrb	r3, [fp]
    f928:	add	r6, r6, #1
    f92c:	cmp	r3, #35	; 0x23
    f930:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    f934:	mov	r1, #35	; 0x23
    f938:	mov	r0, fp
    f93c:	bl	74c4 <strchr@plt>
    f940:	cmp	r0, #0
    f944:	beq	f53c <blkid_probe_get_size@plt+0x8024>
    f948:	strb	sl, [r0]
    f94c:	ldr	fp, [sp, #88]	; 0x58
    f950:	mov	r0, fp
    f954:	bl	723c <strlen@plt>
    f958:	subs	r7, r0, #0
    f95c:	bne	f560 <blkid_probe_get_size@plt+0x8048>
    f960:	mov	r3, #0
    f964:	strb	r3, [fp]
    f968:	b	f648 <blkid_probe_get_size@plt+0x8130>
    f96c:	cmp	r7, #0
    f970:	beq	fa18 <blkid_probe_get_size@plt+0x8500>
    f974:	ldr	fp, [sp, #88]	; 0x58
    f978:	ldrb	r3, [fp]
    f97c:	cmp	r3, #32
    f980:	beq	fb80 <blkid_probe_get_size@plt+0x8668>
    f984:	mov	r0, fp
    f988:	bl	74e8 <strdup@plt>
    f98c:	subs	r1, r0, #0
    f990:	beq	10688 <blkid_probe_get_size@plt+0x9170>
    f994:	add	r0, sp, #84	; 0x54
    f998:	bl	39388 <blkid_probe_get_size@plt+0x31e70>
    f99c:	cmp	r0, #0
    f9a0:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f9a4:	ldr	r0, [sp, #88]	; 0x58
    f9a8:	bl	69f0 <free@plt>
    f9ac:	mov	r1, sl
    f9b0:	mov	r2, r9
    f9b4:	mov	r0, r8
    f9b8:	str	sl, [sp, #88]	; 0x58
    f9bc:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    f9c0:	cmp	r0, #0
    f9c4:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    f9c8:	ldr	fp, [sp, #88]	; 0x58
    f9cc:	beq	1067c <blkid_probe_get_size@plt+0x9164>
    f9d0:	ldrb	r3, [fp]
    f9d4:	add	r6, r6, #1
    f9d8:	cmp	r3, #35	; 0x23
    f9dc:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    f9e0:	mov	r1, #35	; 0x23
    f9e4:	mov	r0, fp
    f9e8:	bl	74c4 <strchr@plt>
    f9ec:	cmp	r0, #0
    f9f0:	beq	f53c <blkid_probe_get_size@plt+0x8024>
    f9f4:	mov	r3, #0
    f9f8:	strb	r3, [r0]
    f9fc:	ldr	fp, [sp, #88]	; 0x58
    fa00:	mov	r0, fp
    fa04:	bl	723c <strlen@plt>
    fa08:	cmp	r0, #0
    fa0c:	mov	r7, r0
    fa10:	bne	f560 <blkid_probe_get_size@plt+0x8048>
    fa14:	strb	r0, [fp]
    fa18:	ldr	r3, [pc, #2288]	; 10310 <blkid_probe_get_size@plt+0x8df8>
    fa1c:	add	r3, pc, r3
    fa20:	ldr	r3, [r3]
    fa24:	cmp	r3, #3
    fa28:	ble	f83c <blkid_probe_get_size@plt+0x8324>
    fa2c:	ldr	r3, [pc, #2272]	; 10314 <blkid_probe_get_size@plt+0x8dfc>
    fa30:	ldr	r2, [pc, #2272]	; 10318 <blkid_probe_get_size@plt+0x8e00>
    fa34:	add	r3, pc, r3
    fa38:	add	r2, pc, r2
    fa3c:	add	r3, r3, #992	; 0x3e0
    fa40:	ldr	r1, [pc, #2260]	; 1031c <blkid_probe_get_size@plt+0x8e04>
    fa44:	ldr	ip, [pc, #2260]	; 10320 <blkid_probe_get_size@plt+0x8e08>
    fa48:	mov	r0, #22
    fa4c:	str	r3, [sp, #12]
    fa50:	mov	r3, r2
    fa54:	add	r1, pc, r1
    fa58:	stm	sp, {r0, r3}
    fa5c:	str	r1, [sp, #16]
    fa60:	str	ip, [sp, #8]
    fa64:	mov	r3, r6
    fa68:	ldr	r2, [sp, #44]	; 0x2c
    fa6c:	mov	r1, #4
    fa70:	mov	r0, #0
    fa74:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
    fa78:	b	f83c <blkid_probe_get_size@plt+0x8324>
    fa7c:	mov	r0, fp
    fa80:	bl	74e8 <strdup@plt>
    fa84:	subs	r1, r0, #0
    fa88:	beq	10688 <blkid_probe_get_size@plt+0x9170>
    fa8c:	add	r0, sp, #84	; 0x54
    fa90:	bl	39388 <blkid_probe_get_size@plt+0x31e70>
    fa94:	cmp	r0, #0
    fa98:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    fa9c:	ldr	r0, [sp, #88]	; 0x58
    faa0:	bl	69f0 <free@plt>
    faa4:	mov	r1, sl
    faa8:	mov	r2, r9
    faac:	mov	r0, r8
    fab0:	str	sl, [sp, #88]	; 0x58
    fab4:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    fab8:	cmp	r0, #0
    fabc:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    fac0:	ldr	fp, [sp, #88]	; 0x58
    fac4:	beq	1067c <blkid_probe_get_size@plt+0x9164>
    fac8:	ldrb	r3, [fp]
    facc:	add	r6, r6, #1
    fad0:	cmp	r3, #35	; 0x23
    fad4:	beq	101c0 <blkid_probe_get_size@plt+0x8ca8>
    fad8:	mov	r1, #35	; 0x23
    fadc:	mov	r0, fp
    fae0:	bl	74c4 <strchr@plt>
    fae4:	cmp	r0, #0
    fae8:	beq	1014c <blkid_probe_get_size@plt+0x8c34>
    faec:	mov	r3, #0
    faf0:	strb	r3, [r0]
    faf4:	ldr	fp, [sp, #88]	; 0x58
    faf8:	mov	r0, fp
    fafc:	bl	723c <strlen@plt>
    fb00:	subs	r7, r0, #0
    fb04:	beq	10698 <blkid_probe_get_size@plt+0x9180>
    fb08:	mov	r5, #1
    fb0c:	b	f560 <blkid_probe_get_size@plt+0x8048>
    fb10:	mov	r0, fp
    fb14:	bl	723c <strlen@plt>
    fb18:	mov	r5, r4
    fb1c:	cmp	r0, #0
    fb20:	mov	r7, r0
    fb24:	bne	f54c <blkid_probe_get_size@plt+0x8034>
    fb28:	b	f8b4 <blkid_probe_get_size@plt+0x839c>
    fb2c:	ldr	r3, [pc, #2032]	; 10324 <blkid_probe_get_size@plt+0x8e0c>
    fb30:	str	r2, [sp, #20]
    fb34:	ldr	r1, [pc, #2028]	; 10328 <blkid_probe_get_size@plt+0x8e10>
    fb38:	ldr	r2, [pc, #2028]	; 1032c <blkid_probe_get_size@plt+0x8e14>
    fb3c:	ldr	lr, [pc, #2028]	; 10330 <blkid_probe_get_size@plt+0x8e18>
    fb40:	add	r3, pc, r3
    fb44:	add	r1, pc, r1
    fb48:	add	r3, r3, #992	; 0x3e0
    fb4c:	add	r2, pc, r2
    fb50:	mov	ip, #22
    fb54:	str	r3, [sp, #12]
    fb58:	str	r1, [sp, #16]
    fb5c:	str	r2, [sp, #4]
    fb60:	mov	r0, sl
    fb64:	str	lr, [sp, #8]
    fb68:	str	ip, [sp]
    fb6c:	mov	r3, r6
    fb70:	ldr	r2, [sp, #44]	; 0x2c
    fb74:	mov	r1, #4
    fb78:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
    fb7c:	b	f5d0 <blkid_probe_get_size@plt+0x80b8>
    fb80:	ldr	r3, [sp, #48]	; 0x30
    fb84:	ldr	r1, [sp, #84]	; 0x54
    fb88:	mov	r2, fp
    fb8c:	str	r3, [sp]
    fb90:	str	r6, [sp, #4]
    fb94:	ldr	r3, [sp, #44]	; 0x2c
    fb98:	ldr	r0, [sp, #52]	; 0x34
    fb9c:	bl	4a108 <blkid_probe_get_size@plt+0x42bf0>
    fba0:	ldr	r0, [sp, #88]	; 0x58
    fba4:	bl	69f0 <free@plt>
    fba8:	mov	r2, r9
    fbac:	mov	r1, sl
    fbb0:	mov	r0, r8
    fbb4:	str	sl, [sp, #88]	; 0x58
    fbb8:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    fbbc:	cmp	r0, #0
    fbc0:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    fbc4:	ldr	fp, [sp, #88]	; 0x58
    fbc8:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    fbcc:	ldrb	r3, [fp]
    fbd0:	add	r6, r6, #1
    fbd4:	cmp	r3, #35	; 0x23
    fbd8:	beq	101f8 <blkid_probe_get_size@plt+0x8ce0>
    fbdc:	mov	r1, #35	; 0x23
    fbe0:	mov	r0, fp
    fbe4:	bl	74c4 <strchr@plt>
    fbe8:	cmp	r0, #0
    fbec:	beq	101f0 <blkid_probe_get_size@plt+0x8cd8>
    fbf0:	strb	sl, [r0]
    fbf4:	ldr	fp, [sp, #88]	; 0x58
    fbf8:	mov	r0, fp
    fbfc:	bl	723c <strlen@plt>
    fc00:	subs	r7, r0, #0
    fc04:	beq	10690 <blkid_probe_get_size@plt+0x9178>
    fc08:	mov	r5, #2
    fc0c:	b	f560 <blkid_probe_get_size@plt+0x8048>
    fc10:	ldr	fp, [sp, #88]	; 0x58
    fc14:	mov	r3, r0
    fc18:	mov	r0, fp
    fc1c:	str	r3, [sp, #28]
    fc20:	bl	69f0 <free@plt>
    fc24:	ldr	r4, [sp, #60]	; 0x3c
    fc28:	ldr	r3, [sp, #28]
    fc2c:	ldr	r0, [sp, #84]	; 0x54
    fc30:	cmp	r0, #0
    fc34:	beq	fc44 <blkid_probe_get_size@plt+0x872c>
    fc38:	str	r3, [sp, #28]
    fc3c:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
    fc40:	ldr	r3, [sp, #28]
    fc44:	mov	r0, r8
    fc48:	str	r3, [sp, #28]
    fc4c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
    fc50:	ldr	r3, [sp, #28]
    fc54:	ldr	r2, [sp, #32]
    fc58:	cmp	r4, #0
    fc5c:	movne	r2, r3
    fc60:	str	r2, [sp, #32]
    fc64:	ldr	r3, [sp, #36]	; 0x24
    fc68:	cmp	r3, #0
    fc6c:	beq	fde8 <blkid_probe_get_size@plt+0x88d0>
    fc70:	ldr	r2, [r3]
    fc74:	cmp	r2, #0
    fc78:	beq	fde8 <blkid_probe_get_size@plt+0x88d0>
    fc7c:	ldr	r3, [sp, #56]	; 0x38
    fc80:	str	r3, [sp, #48]	; 0x30
    fc84:	b	f494 <blkid_probe_get_size@plt+0x7f7c>
    fc88:	ldr	r3, [sp, #48]	; 0x30
    fc8c:	ldr	r1, [sp, #84]	; 0x54
    fc90:	str	r3, [sp]
    fc94:	str	r6, [sp, #4]
    fc98:	ldr	r3, [sp, #44]	; 0x2c
    fc9c:	ldr	r0, [sp, #52]	; 0x34
    fca0:	bl	4a108 <blkid_probe_get_size@plt+0x42bf0>
    fca4:	ldr	r0, [sp, #88]	; 0x58
    fca8:	bl	69f0 <free@plt>
    fcac:	mov	r1, sl
    fcb0:	mov	r2, r9
    fcb4:	mov	r0, r8
    fcb8:	str	sl, [sp, #88]	; 0x58
    fcbc:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
    fcc0:	cmp	r0, #0
    fcc4:	blt	fc10 <blkid_probe_get_size@plt+0x86f8>
    fcc8:	ldr	fp, [sp, #88]	; 0x58
    fccc:	beq	10128 <blkid_probe_get_size@plt+0x8c10>
    fcd0:	ldrb	r3, [fp]
    fcd4:	add	r6, r6, #1
    fcd8:	cmp	r3, #35	; 0x23
    fcdc:	beq	f8cc <blkid_probe_get_size@plt+0x83b4>
    fce0:	mov	r1, #35	; 0x23
    fce4:	mov	r0, fp
    fce8:	bl	74c4 <strchr@plt>
    fcec:	cmp	r0, #0
    fcf0:	movne	r3, #0
    fcf4:	strbne	r3, [r0]
    fcf8:	ldrne	fp, [sp, #88]	; 0x58
    fcfc:	mov	r0, fp
    fd00:	bl	723c <strlen@plt>
    fd04:	cmp	r0, #0
    fd08:	mov	r7, r0
    fd0c:	bne	f558 <blkid_probe_get_size@plt+0x8040>
    fd10:	strb	r0, [fp]
    fd14:	b	f83c <blkid_probe_get_size@plt+0x8324>
    fd18:	ldr	r3, [pc, #1556]	; 10334 <blkid_probe_get_size@plt+0x8e1c>
    fd1c:	ldr	r1, [pc, #1556]	; 10338 <blkid_probe_get_size@plt+0x8e20>
    fd20:	str	r2, [sp, #8]
    fd24:	add	r3, pc, r3
    fd28:	ldr	r2, [pc, #1548]	; 1033c <blkid_probe_get_size@plt+0x8e24>
    fd2c:	add	r1, pc, r1
    fd30:	add	r3, r3, #980	; 0x3d4
    fd34:	str	r3, [sp]
    fd38:	str	r1, [sp, #4]
    fd3c:	ldr	r3, [pc, #1532]	; 10340 <blkid_probe_get_size@plt+0x8e28>
    fd40:	add	r2, pc, r2
    fd44:	mov	r1, #0
    fd48:	mov	r0, #7
    fd4c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
    fd50:	b	f4a8 <blkid_probe_get_size@plt+0x7f90>
    fd54:	bl	732c <__errno_location@plt>
    fd58:	ldr	r2, [sp, #60]	; 0x3c
    fd5c:	ldr	r4, [r0]
    fd60:	cmp	r4, r6
    fd64:	movle	r2, #0
    fd68:	andgt	r2, r2, #1
    fd6c:	rsb	r3, r4, #0
    fd70:	mov	r4, r2
    fd74:	b	fc2c <blkid_probe_get_size@plt+0x8714>
    fd78:	mov	r0, fp
    fd7c:	bl	723c <strlen@plt>
    fd80:	subs	r7, r0, #0
    fd84:	beq	f644 <blkid_probe_get_size@plt+0x812c>
    fd88:	mov	r5, r4
    fd8c:	b	f558 <blkid_probe_get_size@plt+0x8040>
    fd90:	mov	r5, r0
    fd94:	b	f53c <blkid_probe_get_size@plt+0x8024>
    fd98:	ldr	r0, [sp, #28]
    fd9c:	ldr	r3, [pc, #1440]	; 10344 <blkid_probe_get_size@plt+0x8e2c>
    fda0:	str	r0, [sp, #16]
    fda4:	ldr	r0, [sp, #76]	; 0x4c
    fda8:	add	r3, pc, r3
    fdac:	mov	r1, #520	; 0x208
    fdb0:	mov	r2, #22
    fdb4:	str	r0, [sp, #12]
    fdb8:	str	r3, [sp, #4]
    fdbc:	str	r1, [sp, #8]
    fdc0:	str	r2, [sp]
    fdc4:	str	fp, [sp, #20]
    fdc8:	mov	r3, r6
    fdcc:	ldr	r2, [sp, #44]	; 0x2c
    fdd0:	mov	r1, #4
    fdd4:	mov	r0, sl
    fdd8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
    fddc:	ldr	r0, [sp, #88]	; 0x58
    fde0:	b	f8fc <blkid_probe_get_size@plt+0x83e4>
    fde4:	str	r2, [sp, #32]
    fde8:	ldr	r3, [sp, #52]	; 0x34
    fdec:	ldr	r5, [pc, #1364]	; 10348 <blkid_probe_get_size@plt+0x8e30>
    fdf0:	add	r5, pc, r5
    fdf4:	ldr	r0, [r3, #4]
    fdf8:	bl	3984c <blkid_probe_get_size@plt+0x32334>
    fdfc:	ldr	r3, [r5]
    fe00:	cmp	r3, #6
    fe04:	bgt	10490 <blkid_probe_get_size@plt+0x8f78>
    fe08:	ldr	r3, [sp, #72]	; 0x48
    fe0c:	cmp	r3, #0
    fe10:	beq	10480 <blkid_probe_get_size@plt+0x8f68>
    fe14:	ldr	r2, [pc, #1328]	; 1034c <blkid_probe_get_size@plt+0x8e34>
    fe18:	ldrd	r0, [sp, #68]	; 0x44
    fe1c:	mvn	r3, #0
    fe20:	add	r2, pc, r2
    fe24:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
    fe28:	subs	r4, r0, #0
    fe2c:	beq	106a8 <blkid_probe_get_size@plt+0x9190>
    fe30:	ldr	r1, [pc, #1304]	; 10350 <blkid_probe_get_size@plt+0x8e38>
    fe34:	mov	r8, #0
    fe38:	add	r5, sp, #88	; 0x58
    fe3c:	add	r1, pc, r1
    fe40:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
    fe44:	mov	r2, #40	; 0x28
    fe48:	mov	r1, r8
    fe4c:	mov	r0, r5
    fe50:	bl	6c84 <memset@plt>
    fe54:	ldr	fp, [sp, #52]	; 0x34
    fe58:	mov	r1, r8
    fe5c:	mov	r2, #64	; 0x40
    fe60:	add	r0, sp, #148	; 0x94
    fe64:	str	fp, [sp, #92]	; 0x5c
    fe68:	str	r8, [sp, #84]	; 0x54
    fe6c:	bl	6c84 <memset@plt>
    fe70:	ldr	r2, [pc, #1244]	; 10354 <blkid_probe_get_size@plt+0x8e3c>
    fe74:	ldr	r3, [pc, #1244]	; 10358 <blkid_probe_get_size@plt+0x8e40>
    fe78:	mov	r1, #241	; 0xf1
    fe7c:	mov	r6, #80	; 0x50
    fe80:	mov	r7, #0
    fe84:	mov	r0, r5
    fe88:	str	r2, [sp, #132]	; 0x84
    fe8c:	str	r3, [sp, #136]	; 0x88
    fe90:	mov	r2, #24
    fe94:	mov	r3, #16
    fe98:	str	r1, [sp, #140]	; 0x8c
    fe9c:	mov	r9, #80	; 0x50
    fea0:	ldr	r1, [fp]
    fea4:	str	r2, [sp, #164]	; 0xa4
    fea8:	str	r3, [sp, #172]	; 0xac
    feac:	str	r3, [sp, #180]	; 0xb4
    feb0:	str	r8, [sp, #144]	; 0x90
    feb4:	strd	r6, [sp, #96]	; 0x60
    feb8:	str	r9, [sp, #156]	; 0x9c
    febc:	bl	4993c <blkid_probe_get_size@plt+0x42424>
    fec0:	mov	r1, r5
    fec4:	add	r2, sp, #84	; 0x54
    fec8:	mov	r0, r4
    fecc:	bl	400b0 <blkid_probe_get_size@plt+0x38b98>
    fed0:	subs	sl, r0, #0
    fed4:	blt	10200 <blkid_probe_get_size@plt+0x8ce8>
    fed8:	ldr	r0, [sp, #88]	; 0x58
    fedc:	bl	6f90 <fileno@plt>
    fee0:	mov	r1, #292	; 0x124
    fee4:	bl	6f00 <fchmod@plt>
    fee8:	ldr	r0, [sp, #88]	; 0x58
    feec:	str	r8, [sp]
    fef0:	mov	r2, r6
    fef4:	mov	r3, r7
    fef8:	bl	69a8 <fseeko64@plt>
    fefc:	cmp	r0, r8
    ff00:	blt	1001c <blkid_probe_get_size@plt+0x8b04>
    ff04:	mov	r0, r5
    ff08:	ldr	r1, [fp]
    ff0c:	bl	496a4 <blkid_probe_get_size@plt+0x4218c>
    ff10:	str	r0, [sp, #188]	; 0xbc
    ff14:	ldr	r0, [sp, #88]	; 0x58
    ff18:	str	r1, [sp, #192]	; 0xc0
    ff1c:	bl	6dec <ftello64@plt>
    ff20:	ldr	ip, [fp, #4]
    ff24:	mov	r2, #1
    ff28:	ldr	r3, [sp, #88]	; 0x58
    ff2c:	subs	r6, r0, #80	; 0x50
    ff30:	sbc	r7, r1, #0
    ff34:	strd	r6, [sp, #196]	; 0xc4
    ff38:	ldrd	r0, [ip]
    ff3c:	bl	71dc <fwrite@plt>
    ff40:	ldr	r3, [fp, #4]
    ff44:	ldr	r0, [sp, #88]	; 0x58
    ff48:	ldr	r3, [r3, #4]
    ff4c:	str	r8, [sp, #208]	; 0xd0
    ff50:	str	r3, [sp, #204]	; 0xcc
    ff54:	bl	6dec <ftello64@plt>
    ff58:	str	r8, [sp]
    ff5c:	mov	r2, #0
    ff60:	mov	r3, #0
    ff64:	mov	r7, r0
    ff68:	ldr	r0, [sp, #88]	; 0x58
    ff6c:	mov	r6, r1
    ff70:	str	r7, [sp, #148]	; 0x94
    ff74:	str	r1, [sp, #152]	; 0x98
    ff78:	bl	69a8 <fseeko64@plt>
    ff7c:	cmp	r0, r8
    ff80:	blt	1001c <blkid_probe_get_size@plt+0x8b04>
    ff84:	mov	r1, r9
    ff88:	ldr	r3, [sp, #88]	; 0x58
    ff8c:	mov	r2, #1
    ff90:	add	r0, sp, #132	; 0x84
    ff94:	bl	71dc <fwrite@plt>
    ff98:	ldr	r0, [sp, #88]	; 0x58
    ff9c:	bl	7188 <ferror@plt>
    ffa0:	subs	r8, r0, #0
    ffa4:	bne	1001c <blkid_probe_get_size@plt+0x8b04>
    ffa8:	ldr	r0, [sp, #88]	; 0x58
    ffac:	bl	7380 <fflush@plt>
    ffb0:	cmp	r0, #0
    ffb4:	blt	1001c <blkid_probe_get_size@plt+0x8b04>
    ffb8:	ldr	r0, [sp, #88]	; 0x58
    ffbc:	bl	6f90 <fileno@plt>
    ffc0:	bl	6948 <fsync@plt>
    ffc4:	cmp	r0, #0
    ffc8:	blt	1001c <blkid_probe_get_size@plt+0x8b04>
    ffcc:	mov	r1, r4
    ffd0:	ldr	r0, [sp, #84]	; 0x54
    ffd4:	bl	7494 <rename@plt>
    ffd8:	cmp	r0, #0
    ffdc:	blt	1001c <blkid_probe_get_size@plt+0x8b04>
    ffe0:	ldr	r5, [pc, #884]	; 1035c <blkid_probe_get_size@plt+0x8e44>
    ffe4:	ldr	r0, [sp, #88]	; 0x58
    ffe8:	add	r5, pc, r5
    ffec:	bl	7284 <fclose@plt>
    fff0:	ldr	r3, [r5]
    fff4:	cmp	r3, #6
    fff8:	bgt	10838 <blkid_probe_get_size@plt+0x9320>
    fffc:	ldr	r3, [pc, #860]	; 10360 <blkid_probe_get_size@plt+0x8e48>
   10000:	add	r3, pc, r3
   10004:	ldr	r3, [r3]
   10008:	cmp	r3, #6
   1000c:	bgt	106d0 <blkid_probe_get_size@plt+0x91b8>
   10010:	ldr	r0, [sp, #84]	; 0x54
   10014:	bl	69f0 <free@plt>
   10018:	b	10044 <blkid_probe_get_size@plt+0x8b2c>
   1001c:	bl	732c <__errno_location@plt>
   10020:	ldr	sl, [r0]
   10024:	ldr	r0, [sp, #88]	; 0x58
   10028:	bl	7284 <fclose@plt>
   1002c:	ldr	r0, [sp, #84]	; 0x54
   10030:	bl	6e28 <unlink@plt>
   10034:	ldr	r0, [sp, #84]	; 0x54
   10038:	bl	69f0 <free@plt>
   1003c:	cmp	sl, #0
   10040:	bgt	106c4 <blkid_probe_get_size@plt+0x91ac>
   10044:	mov	r1, #0
   10048:	mov	r0, r4
   1004c:	bl	426fc <blkid_probe_get_size@plt+0x3b1e4>
   10050:	ldr	r3, [sp, #32]
   10054:	cmp	r0, #0
   10058:	movlt	r3, r0
   1005c:	str	r3, [sp, #32]
   10060:	ldr	r0, [sp, #80]	; 0x50
   10064:	cmp	r0, #0
   10068:	beq	10070 <blkid_probe_get_size@plt+0x8b58>
   1006c:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   10070:	ldr	r5, [sp, #52]	; 0x34
   10074:	ldr	r0, [r5]
   10078:	bl	3590c <blkid_probe_get_size@plt+0x2e3f4>
   1007c:	ldr	r5, [r5, #4]
   10080:	cmp	r5, #0
   10084:	beq	100a0 <blkid_probe_get_size@plt+0x8b88>
   10088:	mov	r0, r5
   1008c:	bl	3984c <blkid_probe_get_size@plt+0x32334>
   10090:	ldr	r0, [r5]
   10094:	bl	69f0 <free@plt>
   10098:	mov	r0, r5
   1009c:	bl	69f0 <free@plt>
   100a0:	ldr	r0, [sp, #52]	; 0x34
   100a4:	bl	69f0 <free@plt>
   100a8:	mov	r0, r4
   100ac:	bl	69f0 <free@plt>
   100b0:	ldr	r3, [sp, #32]
   100b4:	cmp	r3, #0
   100b8:	blt	f720 <blkid_probe_get_size@plt+0x8208>
   100bc:	ldr	r3, [pc, #672]	; 10364 <blkid_probe_get_size@plt+0x8e4c>
   100c0:	add	r3, pc, r3
   100c4:	ldr	r4, [r3, #44]	; 0x2c
   100c8:	cmp	r4, #0
   100cc:	streq	r4, [sp, #32]
   100d0:	beq	f720 <blkid_probe_get_size@plt+0x8208>
   100d4:	b	f6d0 <blkid_probe_get_size@plt+0x81b8>
   100d8:	ldr	r3, [pc, #648]	; 10368 <blkid_probe_get_size@plt+0x8e50>
   100dc:	add	r3, pc, r3
   100e0:	ldr	r3, [r3, #4]
   100e4:	cmp	r3, #2
   100e8:	ble	f754 <blkid_probe_get_size@plt+0x823c>
   100ec:	ldr	r2, [pc, #632]	; 1036c <blkid_probe_get_size@plt+0x8e54>
   100f0:	ldr	r3, [pc, #632]	; 10370 <blkid_probe_get_size@plt+0x8e58>
   100f4:	add	r2, pc, r2
   100f8:	str	r2, [sp, #4]
   100fc:	add	r3, pc, r3
   10100:	ldr	r2, [pc, #620]	; 10374 <blkid_probe_get_size@plt+0x8e5c>
   10104:	add	r3, r3, #968	; 0x3c8
   10108:	str	r3, [sp]
   1010c:	add	r2, pc, r2
   10110:	mov	r3, #89	; 0x59
   10114:	mov	r1, #1073741846	; 0x40000016
   10118:	ldr	r0, [pc, #600]	; 10378 <blkid_probe_get_size@plt+0x8e60>
   1011c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10120:	str	r0, [sp, #32]
   10124:	b	f720 <blkid_probe_get_size@plt+0x8208>
   10128:	mov	r0, fp
   1012c:	bl	69f0 <free@plt>
   10130:	ldr	r0, [sp, #84]	; 0x54
   10134:	cmp	r0, #0
   10138:	beq	10140 <blkid_probe_get_size@plt+0x8c28>
   1013c:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   10140:	mov	r0, r8
   10144:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   10148:	b	fc64 <blkid_probe_get_size@plt+0x874c>
   1014c:	mov	r5, #1
   10150:	b	f53c <blkid_probe_get_size@plt+0x8024>
   10154:	mov	r0, fp
   10158:	bl	69f0 <free@plt>
   1015c:	cmp	r5, #1
   10160:	bne	10130 <blkid_probe_get_size@plt+0x8c18>
   10164:	ldr	r3, [pc, #528]	; 1037c <blkid_probe_get_size@plt+0x8e64>
   10168:	add	r3, pc, r3
   1016c:	ldr	r3, [r3]
   10170:	cmp	r3, #3
   10174:	ble	10130 <blkid_probe_get_size@plt+0x8c18>
   10178:	ldr	r1, [pc, #512]	; 10380 <blkid_probe_get_size@plt+0x8e68>
   1017c:	ldr	r0, [pc, #512]	; 10384 <blkid_probe_get_size@plt+0x8e6c>
   10180:	add	r1, pc, r1
   10184:	add	r1, r1, #992	; 0x3e0
   10188:	str	r1, [sp, #12]
   1018c:	ldr	r1, [pc, #500]	; 10388 <blkid_probe_get_size@plt+0x8e70>
   10190:	add	r0, pc, r0
   10194:	ldr	ip, [pc, #496]	; 1038c <blkid_probe_get_size@plt+0x8e74>
   10198:	add	r1, pc, r1
   1019c:	str	r0, [sp, #16]
   101a0:	mov	r0, #22
   101a4:	mov	r3, r6
   101a8:	stm	sp, {r0, r1, ip}
   101ac:	mov	r1, #4
   101b0:	ldr	r2, [sp, #44]	; 0x2c
   101b4:	mov	r0, #0
   101b8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   101bc:	b	10130 <blkid_probe_get_size@plt+0x8c18>
   101c0:	mov	r5, #1
   101c4:	b	f8cc <blkid_probe_get_size@plt+0x83b4>
   101c8:	ldr	r3, [pc, #448]	; 10390 <blkid_probe_get_size@plt+0x8e78>
   101cc:	add	r3, pc, r3
   101d0:	ldr	r3, [r3]
   101d4:	cmp	r3, #2
   101d8:	bgt	10230 <blkid_probe_get_size@plt+0x8d18>
   101dc:	rsb	r3, r1, #0
   101e0:	uxtb	r3, r3
   101e4:	rsb	r3, r3, #0
   101e8:	str	r3, [sp, #32]
   101ec:	b	10060 <blkid_probe_get_size@plt+0x8b48>
   101f0:	mov	r5, #2
   101f4:	b	f53c <blkid_probe_get_size@plt+0x8024>
   101f8:	mov	r5, #2
   101fc:	b	f8cc <blkid_probe_get_size@plt+0x83b4>
   10200:	ldr	r0, [sp, #84]	; 0x54
   10204:	bl	69f0 <free@plt>
   10208:	ldr	r3, [pc, #388]	; 10394 <blkid_probe_get_size@plt+0x8e7c>
   1020c:	add	r3, pc, r3
   10210:	ldr	r3, [r3]
   10214:	cmp	r3, #2
   10218:	bgt	10268 <blkid_probe_get_size@plt+0x8d50>
   1021c:	rsb	r3, sl, #0
   10220:	uxtb	r3, r3
   10224:	rsb	r3, r3, #0
   10228:	str	r3, [sp, #32]
   1022c:	b	10060 <blkid_probe_get_size@plt+0x8b48>
   10230:	ldr	r2, [pc, #352]	; 10398 <blkid_probe_get_size@plt+0x8e80>
   10234:	ldr	r3, [pc, #352]	; 1039c <blkid_probe_get_size@plt+0x8e84>
   10238:	add	r2, pc, r2
   1023c:	str	r2, [sp, #4]
   10240:	add	r3, pc, r3
   10244:	ldr	r2, [pc, #340]	; 103a0 <blkid_probe_get_size@plt+0x8e88>
   10248:	add	r3, r3, #980	; 0x3d4
   1024c:	str	r3, [sp]
   10250:	add	r2, pc, r2
   10254:	ldr	r3, [pc, #328]	; 103a4 <blkid_probe_get_size@plt+0x8e8c>
   10258:	mov	r0, #3
   1025c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10260:	str	r0, [sp, #32]
   10264:	b	10060 <blkid_probe_get_size@plt+0x8b48>
   10268:	ldr	r2, [pc, #312]	; 103a8 <blkid_probe_get_size@plt+0x8e90>
   1026c:	ldr	r3, [pc, #312]	; 103ac <blkid_probe_get_size@plt+0x8e94>
   10270:	add	r2, pc, r2
   10274:	str	r2, [sp, #4]
   10278:	add	r3, pc, r3
   1027c:	ldr	r2, [pc, #300]	; 103b0 <blkid_probe_get_size@plt+0x8e98>
   10280:	add	r3, r3, #980	; 0x3d4
   10284:	str	r3, [sp]
   10288:	str	r4, [sp, #8]
   1028c:	mov	r1, sl
   10290:	ldr	r3, [pc, #284]	; 103b4 <blkid_probe_get_size@plt+0x8e9c>
   10294:	add	r2, pc, r2
   10298:	mov	r0, #3
   1029c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   102a0:	str	r0, [sp, #32]
   102a4:	b	10060 <blkid_probe_get_size@plt+0x8b48>
   102a8:	muleq	r8, ip, r8
   102ac:	andeq	r0, r0, ip, lsr r4
   102b0:	andeq	r9, r7, r0, lsr sp
   102b4:	andeq	r7, r5, r0, ror #9
   102b8:	andeq	r8, r8, r8, ror #29
   102bc:	andeq	r8, r8, ip, lsl #29
   102c0:	andeq	r7, r5, r8, lsr #4
   102c4:	andeq	r5, r5, r8, asr #4
   102c8:	andeq	r6, r5, ip, lsl #4
   102cc:	andeq	r7, r5, r0, lsr #8
   102d0:	andeq	r8, r8, r4, lsr lr
   102d4:	ldrdeq	r7, [r5], -r0
   102d8:	andeq	r5, r5, r0, ror #2
   102dc:			; <UNDEFINED> instruction: 0x00088cb0
   102e0:	andeq	r8, r8, r4, lsr #25
   102e4:	ldrdeq	lr, [r5], -r4
   102e8:	andeq	r7, r5, r4, lsr #6
   102ec:	andeq	r8, r8, ip, ror fp
   102f0:	andeq	r0, r0, r0, lsl #9
   102f4:	andeq	r6, r5, r0, lsl #29
   102f8:	muleq	r8, ip, sl
   102fc:	andeq	r0, r0, r8, asr r4
   10300:			; <UNDEFINED> instruction: 0x00055cb0
   10304:	andeq	r8, r8, r4, asr sl
   10308:	andeq	r8, r8, ip, lsr sl
   1030c:	muleq	r5, r4, pc	; <UNPREDICTABLE>
   10310:	andeq	r8, r8, r0, lsr #14
   10314:	muleq	r5, ip, fp
   10318:	ldrdeq	r6, [r5], -ip
   1031c:	andeq	r6, r5, r0, ror #28
   10320:	andeq	r0, r0, sp, lsl r2
   10324:	muleq	r5, r0, sl
   10328:	andeq	r6, r5, r8, lsr #27
   1032c:	andeq	r6, r5, r8, asr #25
   10330:	andeq	r0, r0, r2, asr #4
   10334:	andeq	r4, r5, ip, lsr #17
   10338:	andeq	r6, r5, r4, lsr fp
   1033c:	ldrdeq	r6, [r5], -r4
   10340:	andeq	r0, r0, r9, ror r2
   10344:	andeq	r6, r5, ip, ror #20
   10348:	andeq	r8, r8, ip, asr #6
   1034c:	strdeq	r6, [r5], -r4
   10350:	strdeq	r1, [r3], -ip
   10354:	subpl	r5, ip, fp, asr #6
   10358:	ldmdami	r2, {r3, r6, fp, lr}^
   1035c:	andeq	r8, r8, r4, asr r1
   10360:	andeq	r8, r8, ip, lsr r1
   10364:	andeq	r8, r8, r4, lsr #2
   10368:	andeq	r8, r8, r0, rrx
   1036c:	strdeq	r6, [r5], -r0
   10370:	ldrdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   10374:			; <UNDEFINED> instruction: 0x000566b0
   10378:	andeq	r0, r0, r3, lsl #8
   1037c:	ldrdeq	r7, [r8], -r4
   10380:	andeq	r4, r5, r0, asr r4
   10384:	andeq	r6, r5, r4, lsr #14
   10388:	andeq	r6, r5, ip, ror r6
   1038c:	andeq	r0, r0, r2, asr r2
   10390:	andeq	r7, r8, r0, ror pc
   10394:	andeq	r7, r8, r0, lsr pc
   10398:	andeq	r6, r5, r4, lsl #12
   1039c:	muleq	r5, r0, r3
   103a0:	andeq	r6, r5, r4, asr #11
   103a4:	andeq	r0, r0, r6, ror r2
   103a8:			; <UNDEFINED> instruction: 0x000568b8
   103ac:	andeq	r4, r5, r8, asr r3
   103b0:	andeq	r6, r5, r0, lsl #11
   103b4:	muleq	r0, r6, r2
   103b8:	strdeq	r6, [r5], -r4
   103bc:	andeq	r4, r5, r4, lsr r1
   103c0:	andeq	r6, r5, r0, ror r3
   103c4:	andeq	r6, r5, r8, lsl #9
   103c8:	andeq	r0, r0, r1, lsl #5
   103cc:	andeq	r6, r5, ip, asr r4
   103d0:	andeq	r0, r0, r3, lsl #5
   103d4:	andeq	r6, r5, ip, lsr r4
   103d8:	andeq	r0, r0, r5, lsl #5
   103dc:	andeq	r6, r5, ip, lsl r4
   103e0:	andeq	r0, r0, r7, lsl #5
   103e4:	strdeq	r6, [r5], -ip
   103e8:	andeq	r0, r0, r9, lsl #5
   103ec:	andeq	r7, r8, r8, ror #22
   103f0:	ldrdeq	r3, [r5], -r8
   103f4:	andeq	r6, r5, r8, lsl #4
   103f8:	andeq	r6, r5, ip, asr #7
   103fc:	andeq	r0, r0, fp, lsl #5
   10400:	andeq	r6, r5, r0, lsr #7
   10404:	andeq	r0, r0, sp, lsl #5
   10408:			; <UNDEFINED> instruction: 0x000563bc
   1040c:	andeq	r3, r5, r4, ror #29
   10410:	andeq	r6, r5, r0, lsl #2
   10414:	andeq	r0, r0, r9, lsr #3
   10418:	andeq	r7, r8, r4, lsl sl
   1041c:	andeq	r6, r5, ip, ror r3
   10420:	andeq	r3, r5, ip, ror lr
   10424:	muleq	r5, r8, r0
   10428:	andeq	r0, r0, fp, lsr #3
   1042c:	andeq	r7, r8, ip, lsr #19
   10430:	andeq	r6, r5, ip, lsr r3
   10434:	andeq	r3, r5, r4, lsl lr
   10438:	andeq	r6, r5, r0, asr #32
   1043c:	andeq	r7, r8, r4, asr r9
   10440:	andeq	r3, r5, r8, asr #27
   10444:	andeq	r6, r5, r0, lsl #6
   10448:	strdeq	r5, [r5], -r0
   1044c:	andeq	r0, r0, sp, lsr #3
   10450:	andeq	r6, r5, r0, ror #3
   10454:	andeq	r3, r5, r8, lsl #27
   10458:			; <UNDEFINED> instruction: 0x00055fb4
   1045c:	andeq	r0, r0, r3, lsr #3
   10460:	andeq	r3, r5, r8, asr #26
   10464:	andeq	r5, r5, r4, lsl #31
   10468:	andeq	r6, r5, ip, lsr #3
   1046c:	andeq	r7, r8, r8, lsr #17
   10470:	andeq	r6, r5, r4, lsl #3
   10474:	andeq	r0, r0, r5, lsr #3
   10478:	andeq	r6, r5, r4, asr r1
   1047c:	andeq	r0, r0, r7, lsr #3
   10480:	ldr	r3, [pc, #-208]	; 103b8 <blkid_probe_get_size@plt+0x8ea0>
   10484:	add	r3, pc, r3
   10488:	str	r3, [sp, #72]	; 0x48
   1048c:	b	fe14 <blkid_probe_get_size@plt+0x88fc>
   10490:	ldr	r4, [pc, #-220]	; 103bc <blkid_probe_get_size@plt+0x8ea4>
   10494:	ldr	r6, [pc, #-220]	; 103c0 <blkid_probe_get_size@plt+0x8ea8>
   10498:	ldr	r3, [pc, #-220]	; 103c4 <blkid_probe_get_size@plt+0x8eac>
   1049c:	add	r4, pc, r4
   104a0:	add	r3, pc, r3
   104a4:	add	r6, pc, r6
   104a8:	add	r4, r4, #980	; 0x3d4
   104ac:	str	r3, [sp, #4]
   104b0:	str	r4, [sp]
   104b4:	ldr	r3, [pc, #-244]	; 103c8 <blkid_probe_get_size@plt+0x8eb0>
   104b8:	mov	r2, r6
   104bc:	mov	r1, #0
   104c0:	mov	r0, #7
   104c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   104c8:	ldr	r3, [r5]
   104cc:	cmp	r3, #6
   104d0:	ble	105d0 <blkid_probe_get_size@plt+0x90b8>
   104d4:	ldr	r7, [sp, #52]	; 0x34
   104d8:	ldr	r2, [pc, #-276]	; 103cc <blkid_probe_get_size@plt+0x8eb4>
   104dc:	mov	r1, #0
   104e0:	ldr	r3, [r7, #8]
   104e4:	add	r2, pc, r2
   104e8:	str	r3, [sp, #12]
   104ec:	add	r3, r3, r3, lsl #2
   104f0:	str	r2, [sp, #4]
   104f4:	lsl	r3, r3, #2
   104f8:	str	r3, [sp, #8]
   104fc:	str	r4, [sp]
   10500:	ldr	r3, [pc, #-312]	; 103d0 <blkid_probe_get_size@plt+0x8eb8>
   10504:	mov	r2, r6
   10508:	mov	r0, #7
   1050c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10510:	ldr	r3, [r5]
   10514:	cmp	r3, #6
   10518:	ble	fe08 <blkid_probe_get_size@plt+0x88f0>
   1051c:	ldr	r3, [r7, #12]
   10520:	ldr	r2, [pc, #-340]	; 103d4 <blkid_probe_get_size@plt+0x8ebc>
   10524:	str	r3, [sp, #12]
   10528:	add	r2, pc, r2
   1052c:	lsl	r3, r3, #3
   10530:	str	r3, [sp, #8]
   10534:	str	r2, [sp, #4]
   10538:	ldr	r3, [pc, #-360]	; 103d8 <blkid_probe_get_size@plt+0x8ec0>
   1053c:	str	r4, [sp]
   10540:	mov	r2, r6
   10544:	mov	r1, #0
   10548:	mov	r0, #7
   1054c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10550:	ldr	r3, [r5]
   10554:	cmp	r3, #6
   10558:	ble	fe08 <blkid_probe_get_size@plt+0x88f0>
   1055c:	ldr	r3, [r7, #16]
   10560:	ldr	r2, [pc, #-396]	; 103dc <blkid_probe_get_size@plt+0x8ec4>
   10564:	str	r3, [sp, #12]
   10568:	add	r3, r3, r3, lsl #2
   1056c:	add	r2, pc, r2
   10570:	lsl	r3, r3, #2
   10574:	str	r3, [sp, #8]
   10578:	str	r2, [sp, #4]
   1057c:	ldr	r3, [pc, #-420]	; 103e0 <blkid_probe_get_size@plt+0x8ec8>
   10580:	str	r4, [sp]
   10584:	mov	r2, r6
   10588:	mov	r1, #0
   1058c:	mov	r0, #7
   10590:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10594:	ldr	r3, [r5]
   10598:	cmp	r3, #6
   1059c:	ble	fe08 <blkid_probe_get_size@plt+0x88f0>
   105a0:	ldr	r1, [r7, #4]
   105a4:	ldr	r3, [pc, #-456]	; 103e4 <blkid_probe_get_size@plt+0x8ecc>
   105a8:	mov	r2, r6
   105ac:	ldr	r1, [r1, #4]
   105b0:	add	r3, pc, r3
   105b4:	str	r1, [sp, #8]
   105b8:	str	r3, [sp, #4]
   105bc:	str	r4, [sp]
   105c0:	ldr	r3, [pc, #-480]	; 103e8 <blkid_probe_get_size@plt+0x8ed0>
   105c4:	mov	r1, #0
   105c8:	mov	r0, #7
   105cc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   105d0:	ldr	r6, [pc, #-492]	; 103ec <blkid_probe_get_size@plt+0x8ed4>
   105d4:	add	r6, pc, r6
   105d8:	ldr	r3, [r6]
   105dc:	cmp	r3, #6
   105e0:	ble	fe08 <blkid_probe_get_size@plt+0x88f0>
   105e4:	ldr	r7, [sp, #52]	; 0x34
   105e8:	ldr	r4, [pc, #-512]	; 103f0 <blkid_probe_get_size@plt+0x8ed8>
   105ec:	ldr	r5, [pc, #-512]	; 103f4 <blkid_probe_get_size@plt+0x8edc>
   105f0:	ldr	r2, [r7, #4]
   105f4:	ldr	r3, [pc, #-516]	; 103f8 <blkid_probe_get_size@plt+0x8ee0>
   105f8:	add	r4, pc, r4
   105fc:	ldr	r1, [r2, #16]
   10600:	add	r3, pc, r3
   10604:	str	r1, [sp, #12]
   10608:	ldr	r2, [r2, #20]
   1060c:	add	r5, pc, r5
   10610:	add	r4, r4, #980	; 0x3d4
   10614:	str	r2, [sp, #8]
   10618:	str	r3, [sp, #4]
   1061c:	str	r4, [sp]
   10620:	ldr	r3, [pc, #-556]	; 103fc <blkid_probe_get_size@plt+0x8ee4>
   10624:	mov	r2, r5
   10628:	mov	r1, #0
   1062c:	mov	r0, #7
   10630:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10634:	ldr	r3, [r6]
   10638:	cmp	r3, #6
   1063c:	ble	fe08 <blkid_probe_get_size@plt+0x88f0>
   10640:	ldr	r1, [r7, #4]
   10644:	ldr	r3, [pc, #-588]	; 10400 <blkid_probe_get_size@plt+0x8ee8>
   10648:	mov	r2, r5
   1064c:	ldr	r0, [r1, #28]
   10650:	add	r3, pc, r3
   10654:	str	r0, [sp, #12]
   10658:	ldr	r1, [r1, #24]
   1065c:	mov	r0, #7
   10660:	str	r1, [sp, #8]
   10664:	str	r3, [sp, #4]
   10668:	str	r4, [sp]
   1066c:	ldr	r3, [pc, #-624]	; 10404 <blkid_probe_get_size@plt+0x8eec>
   10670:	mov	r1, #0
   10674:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10678:	b	fe08 <blkid_probe_get_size@plt+0x88f0>
   1067c:	mov	r0, fp
   10680:	bl	69f0 <free@plt>
   10684:	b	10164 <blkid_probe_get_size@plt+0x8c4c>
   10688:	mvn	r3, #11
   1068c:	b	fc18 <blkid_probe_get_size@plt+0x8700>
   10690:	strb	r7, [fp]
   10694:	b	f83c <blkid_probe_get_size@plt+0x8324>
   10698:	strb	r7, [fp]
   1069c:	b	fa18 <blkid_probe_get_size@plt+0x8500>
   106a0:	str	r3, [sp, #32]
   106a4:	b	fde8 <blkid_probe_get_size@plt+0x88d0>
   106a8:	mvn	r3, #11
   106ac:	mov	r4, #0
   106b0:	str	r3, [sp, #32]
   106b4:	b	10060 <blkid_probe_get_size@plt+0x8b48>
   106b8:	mvn	r3, #11
   106bc:	str	r3, [sp, #32]
   106c0:	b	f720 <blkid_probe_get_size@plt+0x8208>
   106c4:	rsb	sl, sl, #0
   106c8:	b	10208 <blkid_probe_get_size@plt+0x8cf0>
   106cc:	bl	6fb4 <__stack_chk_fail@plt>
   106d0:	ldr	ip, [sp, #116]	; 0x74
   106d4:	ldr	r1, [sp, #112]	; 0x70
   106d8:	ldr	r2, [pc, #-728]	; 10408 <blkid_probe_get_size@plt+0x8ef0>
   106dc:	ldr	r3, [pc, #-728]	; 1040c <blkid_probe_get_size@plt+0x8ef4>
   106e0:	lsl	r0, ip, #4
   106e4:	add	r2, pc, r2
   106e8:	orr	r0, r0, r1, lsr #28
   106ec:	add	r3, pc, r3
   106f0:	str	r2, [sp, #4]
   106f4:	ldr	r2, [pc, #-748]	; 10410 <blkid_probe_get_size@plt+0x8ef8>
   106f8:	add	r3, r3, #1004	; 0x3ec
   106fc:	str	ip, [sp, #20]
   10700:	lsl	ip, r1, #4
   10704:	strd	r0, [sp, #12]
   10708:	str	r3, [sp]
   1070c:	str	ip, [sp, #8]
   10710:	ldr	r3, [pc, #-772]	; 10414 <blkid_probe_get_size@plt+0x8efc>
   10714:	add	r2, pc, r2
   10718:	mov	r1, #0
   1071c:	mov	r0, #7
   10720:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10724:	ldr	r3, [pc, #-788]	; 10418 <blkid_probe_get_size@plt+0x8f00>
   10728:	add	r3, pc, r3
   1072c:	ldr	r3, [r3]
   10730:	cmp	r3, #6
   10734:	ble	10010 <blkid_probe_get_size@plt+0x8af8>
   10738:	ldr	ip, [sp, #124]	; 0x7c
   1073c:	ldr	r1, [sp, #120]	; 0x78
   10740:	ldr	r2, [pc, #-812]	; 1041c <blkid_probe_get_size@plt+0x8f04>
   10744:	ldr	r3, [pc, #-812]	; 10420 <blkid_probe_get_size@plt+0x8f08>
   10748:	lsl	r0, ip, #4
   1074c:	add	r2, pc, r2
   10750:	orr	r0, r0, r1, lsr #28
   10754:	add	r3, pc, r3
   10758:	str	r2, [sp, #4]
   1075c:	ldr	r2, [pc, #-832]	; 10424 <blkid_probe_get_size@plt+0x8f0c>
   10760:	add	r3, r3, #1004	; 0x3ec
   10764:	str	ip, [sp, #20]
   10768:	lsl	ip, r1, #4
   1076c:	strd	r0, [sp, #12]
   10770:	str	r3, [sp]
   10774:	str	ip, [sp, #8]
   10778:	ldr	r3, [pc, #-856]	; 10428 <blkid_probe_get_size@plt+0x8f10>
   1077c:	add	r2, pc, r2
   10780:	mov	r1, #0
   10784:	mov	r0, #7
   10788:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1078c:	ldr	r3, [pc, #-872]	; 1042c <blkid_probe_get_size@plt+0x8f14>
   10790:	add	r3, pc, r3
   10794:	ldr	r3, [r3]
   10798:	cmp	r3, #6
   1079c:	ble	10010 <blkid_probe_get_size@plt+0x8af8>
   107a0:	ldr	r3, [sp, #52]	; 0x34
   107a4:	ldr	r2, [pc, #-892]	; 10430 <blkid_probe_get_size@plt+0x8f18>
   107a8:	mov	r0, #7
   107ac:	ldr	r1, [r3, #4]
   107b0:	ldr	r3, [pc, #-900]	; 10434 <blkid_probe_get_size@plt+0x8f1c>
   107b4:	add	r2, pc, r2
   107b8:	ldr	r1, [r1, #4]
   107bc:	add	r3, pc, r3
   107c0:	str	r2, [sp, #4]
   107c4:	ldr	r2, [pc, #-916]	; 10438 <blkid_probe_get_size@plt+0x8f20>
   107c8:	add	r3, r3, #1004	; 0x3ec
   107cc:	str	r1, [sp, #8]
   107d0:	str	r3, [sp]
   107d4:	add	r2, pc, r2
   107d8:	mov	r3, #428	; 0x1ac
   107dc:	mov	r1, #0
   107e0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   107e4:	ldr	r3, [pc, #-944]	; 1043c <blkid_probe_get_size@plt+0x8f24>
   107e8:	add	r3, pc, r3
   107ec:	ldr	r3, [r3]
   107f0:	cmp	r3, #6
   107f4:	ble	10010 <blkid_probe_get_size@plt+0x8af8>
   107f8:	ldrd	r2, [sp, #96]	; 0x60
   107fc:	ldr	r1, [pc, #-964]	; 10440 <blkid_probe_get_size@plt+0x8f28>
   10800:	ldr	r0, [pc, #-964]	; 10444 <blkid_probe_get_size@plt+0x8f2c>
   10804:	strd	r2, [sp, #8]
   10808:	add	r1, pc, r1
   1080c:	ldr	r2, [pc, #-972]	; 10448 <blkid_probe_get_size@plt+0x8f30>
   10810:	add	r0, pc, r0
   10814:	add	r1, r1, #1004	; 0x3ec
   10818:	str	r1, [sp]
   1081c:	str	r0, [sp, #4]
   10820:	ldr	r3, [pc, #-988]	; 1044c <blkid_probe_get_size@plt+0x8f34>
   10824:	add	r2, pc, r2
   10828:	mov	r1, #0
   1082c:	mov	r0, #7
   10830:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10834:	b	10010 <blkid_probe_get_size@plt+0x8af8>
   10838:	ldr	r2, [pc, #-1008]	; 10450 <blkid_probe_get_size@plt+0x8f38>
   1083c:	ldr	r3, [pc, #-1008]	; 10454 <blkid_probe_get_size@plt+0x8f3c>
   10840:	add	r2, pc, r2
   10844:	str	r2, [sp, #4]
   10848:	add	r3, pc, r3
   1084c:	ldr	r2, [pc, #-1020]	; 10458 <blkid_probe_get_size@plt+0x8f40>
   10850:	add	r3, r3, #1004	; 0x3ec
   10854:	str	r3, [sp]
   10858:	mov	r1, r8
   1085c:	ldr	r3, [pc, #-1032]	; 1045c <blkid_probe_get_size@plt+0x8f44>
   10860:	add	r2, pc, r2
   10864:	mov	r0, #7
   10868:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1086c:	ldr	r3, [r5]
   10870:	cmp	r3, #6
   10874:	ble	10724 <blkid_probe_get_size@plt+0x920c>
   10878:	ldr	r5, [pc, #-1056]	; 10460 <blkid_probe_get_size@plt+0x8f48>
   1087c:	ldr	r8, [pc, #-1056]	; 10464 <blkid_probe_get_size@plt+0x8f4c>
   10880:	ldr	r3, [pc, #-1056]	; 10468 <blkid_probe_get_size@plt+0x8f50>
   10884:	ldr	r9, [pc, #-1056]	; 1046c <blkid_probe_get_size@plt+0x8f54>
   10888:	add	r5, pc, r5
   1088c:	add	r3, pc, r3
   10890:	add	r8, pc, r8
   10894:	add	r9, pc, r9
   10898:	add	r5, r5, #1004	; 0x3ec
   1089c:	str	r3, [sp, #4]
   108a0:	str	r7, [sp, #8]
   108a4:	mov	r3, #420	; 0x1a4
   108a8:	str	r6, [sp, #12]
   108ac:	str	r5, [sp]
   108b0:	mov	r2, r8
   108b4:	mov	r1, #0
   108b8:	mov	r0, #7
   108bc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   108c0:	ldr	r3, [r9]
   108c4:	cmp	r3, #6
   108c8:	ble	1078c <blkid_probe_get_size@plt+0x9274>
   108cc:	ldr	r3, [pc, #-1124]	; 10470 <blkid_probe_get_size@plt+0x8f58>
   108d0:	mov	r2, #80	; 0x50
   108d4:	add	r3, pc, r3
   108d8:	str	r3, [sp, #4]
   108dc:	str	r2, [sp, #8]
   108e0:	ldr	r3, [pc, #-1140]	; 10474 <blkid_probe_get_size@plt+0x8f5c>
   108e4:	str	r5, [sp]
   108e8:	mov	r2, r8
   108ec:	mov	r1, #0
   108f0:	mov	r0, #7
   108f4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   108f8:	ldr	r3, [r9]
   108fc:	cmp	r3, #6
   10900:	ble	107e4 <blkid_probe_get_size@plt+0x92cc>
   10904:	ldr	lr, [sp, #104]	; 0x68
   10908:	mov	r3, #24
   1090c:	ldr	ip, [sp, #108]	; 0x6c
   10910:	umull	r0, r1, lr, r3
   10914:	str	r5, [sp]
   10918:	mla	r1, r3, ip, r1
   1091c:	ldr	r3, [pc, #-1196]	; 10478 <blkid_probe_get_size@plt+0x8f60>
   10920:	mov	r2, r8
   10924:	add	r3, pc, r3
   10928:	strd	r0, [sp, #8]
   1092c:	str	r3, [sp, #4]
   10930:	str	lr, [sp, #16]
   10934:	str	ip, [sp, #20]
   10938:	ldr	r3, [pc, #-1220]	; 1047c <blkid_probe_get_size@plt+0x8f64>
   1093c:	mov	r1, #0
   10940:	mov	r0, #7
   10944:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10948:	b	fffc <blkid_probe_get_size@plt+0x8ae4>
   1094c:	push	{r4, r5, r6, r7, lr}
   10950:	sub	sp, sp, #12
   10954:	ldr	r4, [pc, #244]	; 10a50 <blkid_probe_get_size@plt+0x9538>
   10958:	ldr	r3, [pc, #244]	; 10a54 <blkid_probe_get_size@plt+0x953c>
   1095c:	add	r4, pc, r4
   10960:	add	r0, sp, #8
   10964:	ldr	r7, [r4, r3]
   10968:	mov	r2, #0
   1096c:	str	r2, [r0, #-8]!
   10970:	ldr	r3, [r7]
   10974:	str	r3, [sp, #4]
   10978:	bl	47b40 <blkid_probe_get_size@plt+0x40628>
   1097c:	cmp	r0, #0
   10980:	blt	10a24 <blkid_probe_get_size@plt+0x950c>
   10984:	ldr	r3, [pc, #204]	; 10a58 <blkid_probe_get_size@plt+0x9540>
   10988:	ldr	r1, [pc, #204]	; 10a5c <blkid_probe_get_size@plt+0x9544>
   1098c:	mov	r0, #1
   10990:	ldr	r3, [r4, r3]
   10994:	add	r1, pc, r1
   10998:	ldr	r5, [pc, #192]	; 10a60 <blkid_probe_get_size@plt+0x9548>
   1099c:	ldr	r2, [r3]
   109a0:	bl	74f4 <__printf_chk@plt>
   109a4:	ldr	r6, [pc, #184]	; 10a64 <blkid_probe_get_size@plt+0x954c>
   109a8:	ldr	r3, [pc, #184]	; 10a68 <blkid_probe_get_size@plt+0x9550>
   109ac:	ldr	r2, [pc, #184]	; 10a6c <blkid_probe_get_size@plt+0x9554>
   109b0:	add	r5, pc, r5
   109b4:	add	r4, r5, #568	; 0x238
   109b8:	add	r6, pc, r6
   109bc:	add	r3, pc, r3
   109c0:	add	r2, pc, r2
   109c4:	add	r5, r5, #616	; 0x268
   109c8:	b	109d4 <blkid_probe_get_size@plt+0x94bc>
   109cc:	ldrd	r2, [r4, #8]
   109d0:	add	r4, r4, #8
   109d4:	mov	r1, r6
   109d8:	mov	r0, #1
   109dc:	bl	74f4 <__printf_chk@plt>
   109e0:	cmp	r4, r5
   109e4:	bne	109cc <blkid_probe_get_size@plt+0x94b4>
   109e8:	ldr	r1, [pc, #128]	; 10a70 <blkid_probe_get_size@plt+0x9558>
   109ec:	ldr	r2, [sp]
   109f0:	add	r1, pc, r1
   109f4:	mov	r0, #1
   109f8:	bl	74f4 <__printf_chk@plt>
   109fc:	mov	r4, #0
   10a00:	ldr	r0, [sp]
   10a04:	bl	69f0 <free@plt>
   10a08:	ldr	r2, [sp, #4]
   10a0c:	ldr	r3, [r7]
   10a10:	mov	r0, r4
   10a14:	cmp	r2, r3
   10a18:	bne	10a4c <blkid_probe_get_size@plt+0x9534>
   10a1c:	add	sp, sp, #12
   10a20:	pop	{r4, r5, r6, r7, pc}
   10a24:	ldr	r3, [pc, #72]	; 10a74 <blkid_probe_get_size@plt+0x955c>
   10a28:	ldr	r1, [pc, #72]	; 10a78 <blkid_probe_get_size@plt+0x9560>
   10a2c:	add	r3, pc, r3
   10a30:	mov	r2, #35	; 0x23
   10a34:	add	r3, r3, #1016	; 0x3f8
   10a38:	add	r1, pc, r1
   10a3c:	mov	r0, #1
   10a40:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   10a44:	mov	r4, r0
   10a48:	b	10a00 <blkid_probe_get_size@plt+0x94e8>
   10a4c:	bl	6fb4 <__stack_chk_fail@plt>
   10a50:	andeq	r7, r8, ip, lsl #4
   10a54:	andeq	r0, r0, ip, lsr r4
   10a58:	andeq	r0, r0, r0, lsl #9
   10a5c:	strdeq	r6, [r5], -r0
   10a60:	andeq	r8, r7, r0, ror #12
   10a64:	andeq	r6, r5, r8, asr #4
   10a68:	andeq	r6, r5, ip, lsl #3
   10a6c:			; <UNDEFINED> instruction: 0x000647b0
   10a70:	andeq	r6, r5, r0, lsr #4
   10a74:	andeq	r3, r5, r4, lsr #23
   10a78:	andeq	r6, r5, r4, lsr r1
   10a7c:	b	1094c <blkid_probe_get_size@plt+0x9434>
   10a80:	push	{r4, r5, r6, r7, r8, r9, lr}
   10a84:	sub	sp, sp, #20
   10a88:	mov	r7, r1
   10a8c:	mov	r8, r0
   10a90:	bl	7104 <__ctype_b_loc@plt>
   10a94:	mov	r2, r7
   10a98:	mov	r6, r0
   10a9c:	ldr	r0, [r0]
   10aa0:	ldrb	r1, [r2]
   10aa4:	mov	r5, r2
   10aa8:	add	r2, r2, #1
   10aac:	lsl	r3, r1, #1
   10ab0:	ldrh	r3, [r0, r3]
   10ab4:	ands	r4, r3, #8192	; 0x2000
   10ab8:	bne	10aa0 <blkid_probe_get_size@plt+0x9588>
   10abc:	cmp	r1, #0
   10ac0:	beq	10c3c <blkid_probe_get_size@plt+0x9724>
   10ac4:	cmp	r1, #35	; 0x23
   10ac8:	beq	10c3c <blkid_probe_get_size@plt+0x9724>
   10acc:	mov	r1, #61	; 0x3d
   10ad0:	mov	r0, r5
   10ad4:	bl	74c4 <strchr@plt>
   10ad8:	cmp	r0, #0
   10adc:	beq	10c48 <blkid_probe_get_size@plt+0x9730>
   10ae0:	mov	r9, r0
   10ae4:	strb	r4, [r9], #1
   10ae8:	ldrb	r3, [r0, #1]
   10aec:	ldr	r4, [r6]
   10af0:	lsl	r3, r3, #1
   10af4:	ldrh	r3, [r4, r3]
   10af8:	tst	r3, #8192	; 0x2000
   10afc:	beq	10b14 <blkid_probe_get_size@plt+0x95fc>
   10b00:	ldrb	r3, [r9, #1]!
   10b04:	lsl	r3, r3, #1
   10b08:	ldrh	r3, [r4, r3]
   10b0c:	tst	r3, #8192	; 0x2000
   10b10:	bne	10b00 <blkid_probe_get_size@plt+0x95e8>
   10b14:	mov	r0, r5
   10b18:	bl	723c <strlen@plt>
   10b1c:	cmp	r0, #0
   10b20:	beq	10c48 <blkid_probe_get_size@plt+0x9730>
   10b24:	add	r2, r5, r0
   10b28:	b	10b30 <blkid_probe_get_size@plt+0x9618>
   10b2c:	mov	r0, r1
   10b30:	ldrb	r3, [r2, #-1]!
   10b34:	sub	r1, r0, #1
   10b38:	lsl	r3, r3, #1
   10b3c:	ldrh	r3, [r4, r3]
   10b40:	ands	r3, r3, #8192	; 0x2000
   10b44:	bne	10b2c <blkid_probe_get_size@plt+0x9614>
   10b48:	strb	r3, [r5, r0]
   10b4c:	mov	r0, r9
   10b50:	bl	723c <strlen@plt>
   10b54:	cmp	r0, #0
   10b58:	beq	10c48 <blkid_probe_get_size@plt+0x9730>
   10b5c:	sub	r1, r0, #1
   10b60:	ldr	lr, [r6]
   10b64:	add	ip, r9, r1
   10b68:	b	10b74 <blkid_probe_get_size@plt+0x965c>
   10b6c:	mov	r0, r1
   10b70:	sub	r1, r1, #1
   10b74:	mov	r2, ip
   10b78:	sub	ip, ip, #1
   10b7c:	ldrb	r3, [r2]
   10b80:	lsl	r3, r3, #1
   10b84:	ldrh	r3, [lr, r3]
   10b88:	ands	r3, r3, #8192	; 0x2000
   10b8c:	bne	10b6c <blkid_probe_get_size@plt+0x9654>
   10b90:	cmp	r0, #0
   10b94:	strb	r3, [r9, r0]
   10b98:	beq	10c48 <blkid_probe_get_size@plt+0x9730>
   10b9c:	ldrb	r3, [r9]
   10ba0:	cmp	r3, #34	; 0x22
   10ba4:	beq	10bb0 <blkid_probe_get_size@plt+0x9698>
   10ba8:	cmp	r3, #39	; 0x27
   10bac:	bne	10c24 <blkid_probe_get_size@plt+0x970c>
   10bb0:	cmp	r0, #1
   10bb4:	beq	10bc4 <blkid_probe_get_size@plt+0x96ac>
   10bb8:	ldrb	r1, [r2]
   10bbc:	cmp	r1, r3
   10bc0:	beq	10c18 <blkid_probe_get_size@plt+0x9700>
   10bc4:	ldr	r3, [pc, #132]	; 10c50 <blkid_probe_get_size@plt+0x9738>
   10bc8:	add	r3, pc, r3
   10bcc:	ldr	r3, [r3, #4]
   10bd0:	cmp	r3, #6
   10bd4:	ble	10c48 <blkid_probe_get_size@plt+0x9730>
   10bd8:	ldr	r2, [pc, #116]	; 10c54 <blkid_probe_get_size@plt+0x973c>
   10bdc:	ldr	r3, [pc, #116]	; 10c58 <blkid_probe_get_size@plt+0x9740>
   10be0:	add	r2, pc, r2
   10be4:	add	r3, pc, r3
   10be8:	str	r2, [sp, #4]
   10bec:	ldr	r2, [pc, #104]	; 10c5c <blkid_probe_get_size@plt+0x9744>
   10bf0:	add	r3, r3, #1024	; 0x400
   10bf4:	str	r3, [sp]
   10bf8:	str	r7, [sp, #8]
   10bfc:	mov	r3, #612	; 0x264
   10c00:	add	r2, pc, r2
   10c04:	mov	r1, #1073741846	; 0x40000016
   10c08:	ldr	r0, [pc, #80]	; 10c60 <blkid_probe_get_size@plt+0x9748>
   10c0c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   10c10:	add	sp, sp, #20
   10c14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10c18:	add	r9, r9, #1
   10c1c:	mov	r3, #0
   10c20:	strb	r3, [r2]
   10c24:	mov	r2, r9
   10c28:	mov	r1, r5
   10c2c:	mov	r0, r8
   10c30:	add	sp, sp, #20
   10c34:	pop	{r4, r5, r6, r7, r8, r9, lr}
   10c38:	b	27e10 <blkid_probe_get_size@plt+0x208f8>
   10c3c:	mov	r0, #0
   10c40:	add	sp, sp, #20
   10c44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10c48:	mvn	r0, #21
   10c4c:	b	10c10 <blkid_probe_get_size@plt+0x96f8>
   10c50:	andeq	r7, r8, r4, ror r5
   10c54:	andeq	r6, r5, ip, asr #32
   10c58:	andeq	r3, r5, ip, ror #19
   10c5c:	andeq	r4, r5, r4, lsl #5
   10c60:	andeq	r0, r0, r7, lsl #8
   10c64:	ldr	ip, [pc, #428]	; 10e18 <blkid_probe_get_size@plt+0x9900>
   10c68:	push	{r4, r5, lr}
   10c6c:	add	ip, pc, ip
   10c70:	ldr	r4, [pc, #420]	; 10e1c <blkid_probe_get_size@plt+0x9904>
   10c74:	eor	lr, r1, r1, asr #31
   10c78:	sub	lr, lr, r1, asr #31
   10c7c:	ldr	r4, [ip, r4]
   10c80:	mov	r5, r1
   10c84:	mov	r1, ip
   10c88:	sub	ip, lr, #2
   10c8c:	sub	sp, sp, #52	; 0x34
   10c90:	cmp	ip, #1
   10c94:	ldr	ip, [r4]
   10c98:	str	ip, [sp, #44]	; 0x2c
   10c9c:	bhi	10d1c <blkid_probe_get_size@plt+0x9804>
   10ca0:	mov	r1, #0
   10ca4:	cmp	r0, #0
   10ca8:	str	r1, [sp, #40]	; 0x28
   10cac:	beq	10db4 <blkid_probe_get_size@plt+0x989c>
   10cb0:	ldr	ip, [pc, #360]	; 10e20 <blkid_probe_get_size@plt+0x9908>
   10cb4:	add	ip, pc, ip
   10cb8:	ldr	ip, [ip, #4]
   10cbc:	cmp	ip, #2
   10cc0:	movle	r0, r1
   10cc4:	movle	lr, r0
   10cc8:	bgt	10dec <blkid_probe_get_size@plt+0x98d4>
   10ccc:	ldr	r1, [pc, #336]	; 10e24 <blkid_probe_get_size@plt+0x990c>
   10cd0:	str	r3, [sp, #28]
   10cd4:	add	r1, pc, r1
   10cd8:	add	r3, r1, #1040	; 0x410
   10cdc:	ldr	ip, [pc, #324]	; 10e28 <blkid_probe_get_size@plt+0x9910>
   10ce0:	add	r3, r3, #12
   10ce4:	str	r2, [sp, #24]
   10ce8:	ldr	r2, [pc, #316]	; 10e2c <blkid_probe_get_size@plt+0x9914>
   10cec:	mov	r1, #0
   10cf0:	add	ip, pc, ip
   10cf4:	str	r0, [sp, #8]
   10cf8:	stm	sp, {r3, lr}
   10cfc:	str	ip, [sp, #20]
   10d00:	str	r1, [sp, #16]
   10d04:	str	r1, [sp, #12]
   10d08:	mov	r3, #472	; 0x1d8
   10d0c:	add	r2, pc, r2
   10d10:	mov	r0, #3
   10d14:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   10d18:	b	10d9c <blkid_probe_get_size@plt+0x9884>
   10d1c:	mov	r1, #0
   10d20:	cmp	r0, #0
   10d24:	str	r1, [sp, #40]	; 0x28
   10d28:	beq	10dbc <blkid_probe_get_size@plt+0x98a4>
   10d2c:	ldr	ip, [pc, #252]	; 10e30 <blkid_probe_get_size@plt+0x9918>
   10d30:	add	ip, pc, ip
   10d34:	ldr	ip, [ip, #4]
   10d38:	cmp	ip, #2
   10d3c:	movle	r0, r1
   10d40:	movle	lr, r0
   10d44:	bgt	10dc4 <blkid_probe_get_size@plt+0x98ac>
   10d48:	ldr	r1, [pc, #228]	; 10e34 <blkid_probe_get_size@plt+0x991c>
   10d4c:	ldr	ip, [pc, #228]	; 10e38 <blkid_probe_get_size@plt+0x9920>
   10d50:	add	r1, pc, r1
   10d54:	str	r3, [sp, #28]
   10d58:	add	r3, r1, #1040	; 0x410
   10d5c:	add	r3, r3, #12
   10d60:	add	ip, pc, ip
   10d64:	str	r2, [sp, #24]
   10d68:	str	r3, [sp]
   10d6c:	mov	r2, #0
   10d70:	mov	r3, ip
   10d74:	str	r2, [sp, #12]
   10d78:	strd	r2, [sp, #16]
   10d7c:	ldr	r2, [pc, #184]	; 10e3c <blkid_probe_get_size@plt+0x9924>
   10d80:	str	r0, [sp, #8]
   10d84:	str	lr, [sp, #4]
   10d88:	mov	r1, r5
   10d8c:	ldr	r3, [pc, #172]	; 10e40 <blkid_probe_get_size@plt+0x9928>
   10d90:	add	r2, pc, r2
   10d94:	mov	r0, #3
   10d98:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   10d9c:	ldr	r2, [sp, #44]	; 0x2c
   10da0:	ldr	r3, [r4]
   10da4:	cmp	r2, r3
   10da8:	bne	10e14 <blkid_probe_get_size@plt+0x98fc>
   10dac:	add	sp, sp, #52	; 0x34
   10db0:	pop	{r4, r5, pc}
   10db4:	mov	lr, r0
   10db8:	b	10ccc <blkid_probe_get_size@plt+0x97b4>
   10dbc:	mov	lr, r0
   10dc0:	b	10d48 <blkid_probe_get_size@plt+0x9830>
   10dc4:	add	r1, sp, #40	; 0x28
   10dc8:	strd	r2, [sp, #32]
   10dcc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   10dd0:	ldr	r0, [sp, #40]	; 0x28
   10dd4:	ldrd	r2, [sp, #32]
   10dd8:	cmp	r0, #0
   10ddc:	moveq	lr, r0
   10de0:	ldrne	lr, [pc, #92]	; 10e44 <blkid_probe_get_size@plt+0x992c>
   10de4:	addne	lr, pc, lr
   10de8:	b	10d48 <blkid_probe_get_size@plt+0x9830>
   10dec:	add	r1, sp, #40	; 0x28
   10df0:	strd	r2, [sp, #32]
   10df4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   10df8:	ldr	r0, [sp, #40]	; 0x28
   10dfc:	ldrd	r2, [sp, #32]
   10e00:	cmp	r0, #0
   10e04:	moveq	lr, r0
   10e08:	ldrne	lr, [pc, #56]	; 10e48 <blkid_probe_get_size@plt+0x9930>
   10e0c:	addne	lr, pc, lr
   10e10:	b	10ccc <blkid_probe_get_size@plt+0x97b4>
   10e14:	bl	6fb4 <__stack_chk_fail@plt>
   10e18:	strdeq	r6, [r8], -ip
   10e1c:	andeq	r0, r0, ip, lsr r4
   10e20:	andeq	r7, r8, r8, lsl #9
   10e24:	strdeq	r3, [r5], -ip
   10e28:	andeq	r5, r5, r0, ror #30
   10e2c:	andeq	r4, r5, r8, ror r1
   10e30:	andeq	r7, r8, ip, lsl #8
   10e34:	andeq	r3, r5, r0, lsl #17
   10e38:	andeq	r5, r5, ip, lsl #30
   10e3c:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   10e40:	ldrdeq	r0, [r0], -sl
   10e44:	andeq	r4, r5, r4, asr r1
   10e48:	andeq	r4, r5, ip, lsr #2
   10e4c:	ldr	r3, [pc, #4020]	; 11e08 <blkid_probe_get_size@plt+0xa8f0>
   10e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e54:	sub	sp, sp, #17152	; 0x4300
   10e58:	ldr	r2, [pc, #4012]	; 11e0c <blkid_probe_get_size@plt+0xa8f4>
   10e5c:	sub	sp, sp, #196	; 0xc4
   10e60:	add	r3, pc, r3
   10e64:	str	r1, [sp, #24]
   10e68:	str	r0, [sp, #44]	; 0x2c
   10e6c:	ldr	r2, [r3, r2]
   10e70:	mov	r0, r1
   10e74:	str	r2, [sp, #48]	; 0x30
   10e78:	ldr	r1, [pc, #3984]	; 11e10 <blkid_probe_get_size@plt+0xa8f8>
   10e7c:	ldr	r3, [r2]
   10e80:	add	r2, sp, #17152	; 0x4300
   10e84:	add	r2, r2, #188	; 0xbc
   10e88:	add	r1, pc, r1
   10e8c:	str	r3, [r2]
   10e90:	bl	738c <fopen64@plt>
   10e94:	subs	r3, r0, #0
   10e98:	str	r3, [sp, #40]	; 0x28
   10e9c:	beq	110cc <blkid_probe_get_size@plt+0x9bb4>
   10ea0:	bl	6f90 <fileno@plt>
   10ea4:	bl	3e014 <blkid_probe_get_size@plt+0x36afc>
   10ea8:	subs	r9, r0, #0
   10eac:	beq	10efc <blkid_probe_get_size@plt+0x99e4>
   10eb0:	ldr	r3, [pc, #3932]	; 11e14 <blkid_probe_get_size@plt+0xa8fc>
   10eb4:	add	r3, pc, r3
   10eb8:	ldr	r3, [r3, #4]
   10ebc:	cmp	r3, #6
   10ec0:	bgt	11a38 <blkid_probe_get_size@plt+0xa520>
   10ec4:	mov	r4, #0
   10ec8:	ldr	r0, [sp, #40]	; 0x28
   10ecc:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   10ed0:	add	r3, sp, #17152	; 0x4300
   10ed4:	add	r3, r3, #188	; 0xbc
   10ed8:	ldr	r2, [r3]
   10edc:	ldr	r3, [sp, #48]	; 0x30
   10ee0:	mov	r0, r4
   10ee4:	ldr	r3, [r3]
   10ee8:	cmp	r2, r3
   10eec:	bne	12d68 <blkid_probe_get_size@plt+0xb850>
   10ef0:	add	sp, sp, #17152	; 0x4300
   10ef4:	add	sp, sp, #196	; 0xc4
   10ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10efc:	ldr	r3, [pc, #3860]	; 11e18 <blkid_probe_get_size@plt+0xa900>
   10f00:	add	r3, pc, r3
   10f04:	ldr	r3, [r3, #4]
   10f08:	cmp	r3, #6
   10f0c:	bgt	11a7c <blkid_probe_get_size@plt+0xa564>
   10f10:	ldr	r4, [sp, #24]
   10f14:	mov	r0, r4
   10f18:	bl	723c <strlen@plt>
   10f1c:	ldr	r3, [sp, #44]	; 0x2c
   10f20:	mov	r1, r4
   10f24:	mov	r2, r0
   10f28:	ldr	r0, [r3, #24]
   10f2c:	ldr	r3, [r3, #16]
   10f30:	str	r3, [sp, #56]	; 0x38
   10f34:	ldr	r3, [pc, #3808]	; 11e1c <blkid_probe_get_size@plt+0xa904>
   10f38:	add	r3, pc, r3
   10f3c:	mov	r4, r3
   10f40:	str	r3, [sp, #64]	; 0x40
   10f44:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   10f48:	ldr	r3, [pc, #3792]	; 11e20 <blkid_probe_get_size@plt+0xa908>
   10f4c:	add	r2, r4, #1088	; 0x440
   10f50:	add	r3, pc, r3
   10f54:	add	r3, r3, #1072	; 0x430
   10f58:	add	r3, r3, #12
   10f5c:	str	r3, [sp, #72]	; 0x48
   10f60:	add	r3, sp, #960	; 0x3c0
   10f64:	add	r2, r2, #8
   10f68:	str	r3, [sp, #32]
   10f6c:	add	r3, sp, #956	; 0x3bc
   10f70:	str	r2, [sp, #68]	; 0x44
   10f74:	str	r3, [sp, #36]	; 0x24
   10f78:	str	r0, [sp, #60]	; 0x3c
   10f7c:	ldr	r2, [sp, #40]	; 0x28
   10f80:	mov	r1, #16384	; 0x4000
   10f84:	ldr	r0, [sp, #36]	; 0x24
   10f88:	bl	71ac <fgets@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	117f8 <blkid_probe_get_size@plt+0xa2e0>
   10f94:	bl	7104 <__ctype_b_loc@plt>
   10f98:	add	r9, r9, #1
   10f9c:	ldr	r6, [sp, #36]	; 0x24
   10fa0:	str	r0, [sp, #28]
   10fa4:	ldr	r0, [r0]
   10fa8:	b	10fb0 <blkid_probe_get_size@plt+0x9a98>
   10fac:	mov	r6, r3
   10fb0:	mov	r3, r6
   10fb4:	mov	fp, r6
   10fb8:	ldrb	r2, [r3], #1
   10fbc:	lsl	r1, r2, #1
   10fc0:	ldrh	r1, [r0, r1]
   10fc4:	tst	r1, #8192	; 0x2000
   10fc8:	bne	10fac <blkid_probe_get_size@plt+0x9a94>
   10fcc:	cmp	r2, #35	; 0x23
   10fd0:	beq	10f7c <blkid_probe_get_size@plt+0x9a64>
   10fd4:	ldr	r7, [sp, #36]	; 0x24
   10fd8:	mov	r0, r7
   10fdc:	bl	723c <strlen@plt>
   10fe0:	cmp	r0, #2
   10fe4:	mov	r4, r0
   10fe8:	bls	10f7c <blkid_probe_get_size@plt+0x9a64>
   10fec:	ldr	sl, [sp, #32]
   10ff0:	sub	r0, r0, #2
   10ff4:	add	r3, sl, r0
   10ff8:	ldrb	r3, [r3, #-4]
   10ffc:	cmp	r3, #92	; 0x5c
   11000:	bne	11068 <blkid_probe_get_size@plt+0x9b50>
   11004:	ldr	r5, [pc, #3608]	; 11e24 <blkid_probe_get_size@plt+0xa90c>
   11008:	ldr	r8, [sp, #40]	; 0x28
   1100c:	str	r6, [sp, #52]	; 0x34
   11010:	b	11048 <blkid_probe_get_size@plt+0x9b30>
   11014:	mov	r0, r6
   11018:	bl	723c <strlen@plt>
   1101c:	cmp	r0, #1
   11020:	bls	11064 <blkid_probe_get_size@plt+0x9b4c>
   11024:	mov	r0, r7
   11028:	bl	723c <strlen@plt>
   1102c:	add	r9, r9, #1
   11030:	mov	r4, r0
   11034:	sub	r0, r0, #2
   11038:	add	r3, sl, r0
   1103c:	ldrb	r3, [r3, #-4]
   11040:	cmp	r3, #92	; 0x5c
   11044:	bne	11064 <blkid_probe_get_size@plt+0x9b4c>
   11048:	add	r6, r7, r0
   1104c:	mov	r0, r6
   11050:	mov	r2, r8
   11054:	sub	r1, r5, r4
   11058:	bl	71ac <fgets@plt>
   1105c:	cmp	r0, #0
   11060:	bne	11014 <blkid_probe_get_size@plt+0x9afc>
   11064:	ldr	r6, [sp, #52]	; 0x34
   11068:	add	r4, r4, #1
   1106c:	cmp	r4, #16384	; 0x4000
   11070:	bcc	110e4 <blkid_probe_get_size@plt+0x9bcc>
   11074:	ldr	r3, [pc, #3500]	; 11e28 <blkid_probe_get_size@plt+0xa910>
   11078:	add	r3, pc, r3
   1107c:	ldr	r3, [r3, #4]
   11080:	cmp	r3, #2
   11084:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11088:	ldr	r2, [pc, #3484]	; 11e2c <blkid_probe_get_size@plt+0xa914>
   1108c:	ldr	r3, [pc, #3484]	; 11e30 <blkid_probe_get_size@plt+0xa918>
   11090:	add	r2, pc, r2
   11094:	ldr	r1, [sp, #24]
   11098:	str	r2, [sp, #4]
   1109c:	add	r3, pc, r3
   110a0:	ldr	r2, [pc, #3468]	; 11e34 <blkid_probe_get_size@plt+0xa91c>
   110a4:	add	r3, r3, #1072	; 0x430
   110a8:	str	r1, [sp, #8]
   110ac:	str	r3, [sp]
   110b0:	str	r9, [sp, #12]
   110b4:	ldr	r3, [pc, #3452]	; 11e38 <blkid_probe_get_size@plt+0xa920>
   110b8:	add	r2, pc, r2
   110bc:	mov	r1, #0
   110c0:	ldr	r0, [pc, #4044]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   110c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   110c8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   110cc:	bl	732c <__errno_location@plt>
   110d0:	ldr	r4, [r0]
   110d4:	cmp	r4, #2
   110d8:	rsbne	r4, r4, #0
   110dc:	bne	10ec8 <blkid_probe_get_size@plt+0x99b0>
   110e0:	b	10ec4 <blkid_probe_get_size@plt+0x99ac>
   110e4:	ldr	r4, [sp, #32]
   110e8:	mov	r2, #788	; 0x314
   110ec:	sub	r3, r4, #792	; 0x318
   110f0:	mov	r0, r3
   110f4:	mov	r1, #0
   110f8:	bl	6c84 <memset@plt>
   110fc:	ldr	r1, [pc, #3384]	; 11e3c <blkid_probe_get_size@plt+0xa924>
   11100:	mov	r2, #1
   11104:	strb	r2, [r4, #-788]	; 0xfffffcec
   11108:	mov	r3, r0
   1110c:	ldr	r0, [sp, #60]	; 0x3c
   11110:	cmp	r0, r1
   11114:	strhls	r0, [r3, #12]
   11118:	ldr	r3, [sp, #32]
   1111c:	ldr	r1, [sp, #44]	; 0x2c
   11120:	sub	r3, r3, #792	; 0x318
   11124:	str	r1, [r4, #-792]	; 0xfffffce8
   11128:	strh	r9, [r3, #14]
   1112c:	ldrb	r5, [fp]
   11130:	ldr	r3, [sp, #28]
   11134:	cmp	r5, #0
   11138:	ldr	r2, [r3]
   1113c:	lsl	r3, r5, #1
   11140:	ldrh	r7, [r2, r3]
   11144:	beq	11294 <blkid_probe_get_size@plt+0x9d7c>
   11148:	lsr	r3, r7, #13
   1114c:	cmp	r5, #44	; 0x2c
   11150:	orreq	r3, r3, #1
   11154:	tst	r3, #1
   11158:	mov	sl, fp
   1115c:	beq	11188 <blkid_probe_get_size@plt+0x9c70>
   11160:	ldrb	r1, [sl, #1]!
   11164:	lsl	r3, r1, #1
   11168:	ldrh	r3, [r2, r3]
   1116c:	lsr	r3, r3, #13
   11170:	cmp	r1, #44	; 0x2c
   11174:	orreq	r3, r3, #1
   11178:	tst	r3, #1
   1117c:	bne	11160 <blkid_probe_get_size@plt+0x9c48>
   11180:	cmp	r1, #0
   11184:	beq	11294 <blkid_probe_get_size@plt+0x9d7c>
   11188:	mov	r0, sl
   1118c:	ldrb	r3, [r0, #1]
   11190:	add	r4, r0, #1
   11194:	cmp	r3, #0
   11198:	beq	11294 <blkid_probe_get_size@plt+0x9d7c>
   1119c:	lsl	r1, r3, #1
   111a0:	ldrh	r1, [r2, r1]
   111a4:	ands	r1, r1, #8192	; 0x2000
   111a8:	movne	ip, #1
   111ac:	moveq	ip, #0
   111b0:	cmp	r3, #61	; 0x3d
   111b4:	orreq	ip, ip, #1
   111b8:	cmp	ip, #0
   111bc:	bne	1124c <blkid_probe_get_size@plt+0x9d34>
   111c0:	sub	r1, r3, #33	; 0x21
   111c4:	cmp	r1, #25
   111c8:	addls	pc, pc, r1, lsl #2
   111cc:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111d0:	b	11238 <blkid_probe_get_size@plt+0x9d20>
   111d4:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111d8:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111dc:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111e0:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111e4:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111e8:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111ec:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111f0:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111f4:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   111f8:	b	11238 <blkid_probe_get_size@plt+0x9d20>
   111fc:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11200:	b	11238 <blkid_probe_get_size@plt+0x9d20>
   11204:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11208:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   1120c:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11210:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11214:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11218:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   1121c:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11220:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11224:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11228:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   1122c:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11230:	b	11244 <blkid_probe_get_size@plt+0x9d2c>
   11234:	b	11238 <blkid_probe_get_size@plt+0x9d20>
   11238:	ldrb	r1, [r4, #1]
   1123c:	cmp	r1, #61	; 0x3d
   11240:	beq	11270 <blkid_probe_get_size@plt+0x9d58>
   11244:	mov	r0, r4
   11248:	b	1118c <blkid_probe_get_size@plt+0x9c74>
   1124c:	cmp	r1, #0
   11250:	beq	11270 <blkid_probe_get_size@plt+0x9d58>
   11254:	ldrb	r3, [r4, #1]!
   11258:	lsl	r1, r3, #1
   1125c:	ldrh	r1, [r2, r1]
   11260:	tst	r1, #8192	; 0x2000
   11264:	bne	11254 <blkid_probe_get_size@plt+0x9d3c>
   11268:	cmp	r3, #0
   1126c:	beq	11294 <blkid_probe_get_size@plt+0x9d7c>
   11270:	cmp	r3, #61	; 0x3d
   11274:	beq	11350 <blkid_probe_get_size@plt+0x9e38>
   11278:	cmp	r3, #33	; 0x21
   1127c:	beq	115d4 <blkid_probe_get_size@plt+0xa0bc>
   11280:	cmp	r3, #43	; 0x2b
   11284:	bne	116e8 <blkid_probe_get_size@plt+0xa1d0>
   11288:	ldrb	r3, [r4, #1]
   1128c:	cmp	r3, #61	; 0x3d
   11290:	beq	117ec <blkid_probe_get_size@plt+0xa2d4>
   11294:	tst	r7, #1
   11298:	beq	112b0 <blkid_probe_get_size@plt+0x9d98>
   1129c:	ldrb	r5, [fp, #1]!
   112a0:	lsl	r3, r5, #1
   112a4:	ldrh	r3, [r2, r3]
   112a8:	tst	r3, #1
   112ac:	bne	1129c <blkid_probe_get_size@plt+0x9d84>
   112b0:	ldr	r0, [pc, #2952]	; 11e40 <blkid_probe_get_size@plt+0xa928>
   112b4:	mov	r1, r5
   112b8:	add	r0, pc, r0
   112bc:	bl	74c4 <strchr@plt>
   112c0:	add	r7, sp, #192	; 0xc0
   112c4:	subs	r2, r0, #0
   112c8:	beq	12238 <blkid_probe_get_size@plt+0xad20>
   112cc:	ldr	r3, [sp, #32]
   112d0:	sub	r1, r7, #20
   112d4:	sub	r3, r3, #792	; 0x318
   112d8:	ldr	r2, [r3, #784]	; 0x310
   112dc:	ldr	r0, [sp, #44]	; 0x2c
   112e0:	add	r2, r2, #1
   112e4:	strh	r2, [r3, #6]
   112e8:	bl	9f78 <blkid_probe_get_size@plt+0x2a60>
   112ec:	cmp	r0, #0
   112f0:	beq	11d30 <blkid_probe_get_size@plt+0xa818>
   112f4:	ldr	r3, [pc, #2888]	; 11e44 <blkid_probe_get_size@plt+0xa92c>
   112f8:	add	r3, pc, r3
   112fc:	ldr	r3, [r3, #4]
   11300:	cmp	r3, #2
   11304:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11308:	ldr	r3, [pc, #2872]	; 11e48 <blkid_probe_get_size@plt+0xa930>
   1130c:	ldr	r2, [pc, #2872]	; 11e4c <blkid_probe_get_size@plt+0xa934>
   11310:	add	r3, pc, r3
   11314:	add	r2, pc, r2
   11318:	ldr	r1, [sp, #24]
   1131c:	str	r2, [sp, #4]
   11320:	add	r3, r3, #1072	; 0x430
   11324:	ldr	r2, [pc, #2852]	; 11e50 <blkid_probe_get_size@plt+0xa938>
   11328:	add	r3, r3, #12
   1132c:	str	r1, [sp, #8]
   11330:	str	r3, [sp]
   11334:	str	r9, [sp, #12]
   11338:	ldr	r3, [pc, #2836]	; 11e54 <blkid_probe_get_size@plt+0xa93c>
   1133c:	add	r2, pc, r2
   11340:	mov	r1, #0
   11344:	ldr	r0, [pc, #3400]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11348:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1134c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11350:	ldrb	r3, [r4, #1]
   11354:	cmp	r3, #61	; 0x3d
   11358:	addeq	r4, r4, #2
   1135c:	moveq	r7, #1
   11360:	addne	r4, r4, #1
   11364:	movne	r7, #6
   11368:	mov	r3, #0
   1136c:	strb	r3, [r0, #1]
   11370:	ldrb	r3, [r4]
   11374:	lsl	r1, r3, #1
   11378:	ldrh	r1, [r2, r1]
   1137c:	tst	r1, #8192	; 0x2000
   11380:	beq	11398 <blkid_probe_get_size@plt+0x9e80>
   11384:	ldrb	r3, [r4, #1]!
   11388:	lsl	r1, r3, #1
   1138c:	ldrh	r1, [r2, r1]
   11390:	tst	r1, #8192	; 0x2000
   11394:	bne	11384 <blkid_probe_get_size@plt+0x9e6c>
   11398:	cmp	r3, #34	; 0x22
   1139c:	bne	11410 <blkid_probe_get_size@plt+0x9ef8>
   113a0:	ldrb	r3, [r4, #1]
   113a4:	add	r5, r4, #1
   113a8:	cmp	r3, #34	; 0x22
   113ac:	beq	1193c <blkid_probe_get_size@plt+0xa424>
   113b0:	cmp	r3, #0
   113b4:	beq	11410 <blkid_probe_get_size@plt+0x9ef8>
   113b8:	mov	r0, r4
   113bc:	mov	r1, #0
   113c0:	b	113e8 <blkid_probe_get_size@plt+0x9ed0>
   113c4:	ldrb	ip, [r5, r1]
   113c8:	mov	r1, r3
   113cc:	strb	ip, [r0, #1]!
   113d0:	ldrb	r3, [lr]
   113d4:	sub	ip, r0, r4
   113d8:	cmp	r3, #34	; 0x22
   113dc:	beq	11420 <blkid_probe_get_size@plt+0x9f08>
   113e0:	cmp	r3, #0
   113e4:	beq	11410 <blkid_probe_get_size@plt+0x9ef8>
   113e8:	cmp	r3, #92	; 0x5c
   113ec:	add	r3, r1, #1
   113f0:	add	lr, r5, r3
   113f4:	bne	113c4 <blkid_probe_get_size@plt+0x9eac>
   113f8:	ldrb	ip, [r5, r3]
   113fc:	cmp	ip, #34	; 0x22
   11400:	bne	113c4 <blkid_probe_get_size@plt+0x9eac>
   11404:	add	r1, r1, #2
   11408:	add	lr, r5, r1
   1140c:	b	113cc <blkid_probe_get_size@plt+0x9eb4>
   11410:	ldrb	r5, [fp]
   11414:	lsl	r3, r5, #1
   11418:	ldrh	r7, [r2, r3]
   1141c:	b	11294 <blkid_probe_get_size@plt+0x9d7c>
   11420:	add	ip, r5, ip
   11424:	add	fp, r1, #1
   11428:	ldr	r1, [pc, #2600]	; 11e58 <blkid_probe_get_size@plt+0xa940>
   1142c:	mov	r3, #0
   11430:	strb	r3, [ip]
   11434:	add	r1, pc, r1
   11438:	mov	r0, sl
   1143c:	bl	7314 <strcmp@plt>
   11440:	add	fp, r5, fp
   11444:	subs	r8, r0, #0
   11448:	bne	11484 <blkid_probe_get_size@plt+0x9f6c>
   1144c:	cmp	r7, #3
   11450:	bhi	11ba4 <blkid_probe_get_size@plt+0xa68c>
   11454:	str	r8, [sp]
   11458:	mov	r3, r5
   1145c:	mov	r2, r7
   11460:	mov	r1, #2
   11464:	add	r0, sp, #168	; 0xa8
   11468:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   1146c:	cmp	r0, #0
   11470:	blt	11c04 <blkid_probe_get_size@plt+0xa6ec>
   11474:	cmp	fp, #0
   11478:	bne	1112c <blkid_probe_get_size@plt+0x9c14>
   1147c:	ldrb	r3, [fp]
   11480:	udf	#0
   11484:	ldr	r1, [pc, #2512]	; 11e5c <blkid_probe_get_size@plt+0xa944>
   11488:	mov	r0, sl
   1148c:	add	r1, pc, r1
   11490:	bl	7314 <strcmp@plt>
   11494:	subs	r8, r0, #0
   11498:	bne	1152c <blkid_probe_get_size@plt+0xa014>
   1149c:	cmp	r7, #3
   114a0:	bhi	121d8 <blkid_probe_get_size@plt+0xacc0>
   114a4:	str	r8, [sp]
   114a8:	mov	r3, r5
   114ac:	mov	r2, r7
   114b0:	mov	r1, #3
   114b4:	add	r0, sp, #168	; 0xa8
   114b8:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   114bc:	cmp	r0, #0
   114c0:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   114c4:	ldr	r3, [pc, #2452]	; 11e60 <blkid_probe_get_size@plt+0xa948>
   114c8:	add	r3, pc, r3
   114cc:	ldr	r3, [r3, #4]
   114d0:	cmp	r3, #2
   114d4:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   114d8:	ldr	r2, [sp, #32]
   114dc:	ldr	r3, [pc, #2432]	; 11e64 <blkid_probe_get_size@plt+0xa94c>
   114e0:	ldr	r1, [sp, #24]
   114e4:	ldr	r0, [r2, #-8]
   114e8:	ldr	r2, [pc, #2424]	; 11e68 <blkid_probe_get_size@plt+0xa950>
   114ec:	add	r3, pc, r3
   114f0:	add	r2, pc, r2
   114f4:	str	r2, [sp, #4]
   114f8:	add	r3, r3, #1072	; 0x430
   114fc:	ldr	r2, [pc, #2408]	; 11e6c <blkid_probe_get_size@plt+0xa954>
   11500:	add	r3, r3, #12
   11504:	str	r1, [sp, #8]
   11508:	str	r3, [sp]
   1150c:	str	r0, [sp, #16]
   11510:	str	r9, [sp, #12]
   11514:	mov	r1, r8
   11518:	ldr	r3, [pc, #2384]	; 11e70 <blkid_probe_get_size@plt+0xa958>
   1151c:	add	r2, pc, r2
   11520:	ldr	r0, [pc, #2924]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11524:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11528:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1152c:	ldr	r1, [pc, #2368]	; 11e74 <blkid_probe_get_size@plt+0xa95c>
   11530:	mov	r0, sl
   11534:	add	r1, pc, r1
   11538:	bl	7314 <strcmp@plt>
   1153c:	subs	r8, r0, #0
   11540:	bne	115ec <blkid_probe_get_size@plt+0xa0d4>
   11544:	cmp	r7, #3
   11548:	bhi	1255c <blkid_probe_get_size@plt+0xb044>
   1154c:	str	r8, [sp]
   11550:	mov	r3, r5
   11554:	mov	r2, r7
   11558:	mov	r1, #4
   1155c:	add	r0, sp, #168	; 0xa8
   11560:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11564:	cmp	r0, #0
   11568:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   1156c:	ldr	r3, [pc, #2308]	; 11e78 <blkid_probe_get_size@plt+0xa960>
   11570:	add	r3, pc, r3
   11574:	ldr	r3, [r3, #4]
   11578:	cmp	r3, #2
   1157c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11580:	ldr	r2, [sp, #32]
   11584:	ldr	r3, [pc, #2288]	; 11e7c <blkid_probe_get_size@plt+0xa964>
   11588:	ldr	r1, [sp, #24]
   1158c:	ldr	r0, [r2, #-8]
   11590:	ldr	r2, [pc, #2280]	; 11e80 <blkid_probe_get_size@plt+0xa968>
   11594:	add	r3, pc, r3
   11598:	add	r2, pc, r2
   1159c:	str	r2, [sp, #4]
   115a0:	add	r3, r3, #1072	; 0x430
   115a4:	ldr	r2, [pc, #2264]	; 11e84 <blkid_probe_get_size@plt+0xa96c>
   115a8:	add	r3, r3, #12
   115ac:	str	r1, [sp, #8]
   115b0:	str	r3, [sp]
   115b4:	str	r0, [sp, #16]
   115b8:	str	r9, [sp, #12]
   115bc:	mov	r1, r8
   115c0:	ldr	r3, [pc, #2240]	; 11e88 <blkid_probe_get_size@plt+0xa970>
   115c4:	add	r2, pc, r2
   115c8:	ldr	r0, [pc, #2756]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   115cc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   115d0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   115d4:	ldrb	r3, [r4, #1]
   115d8:	cmp	r3, #61	; 0x3d
   115dc:	bne	11294 <blkid_probe_get_size@plt+0x9d7c>
   115e0:	add	r4, r4, #2
   115e4:	mov	r7, #2
   115e8:	b	11368 <blkid_probe_get_size@plt+0x9e50>
   115ec:	ldr	r1, [pc, #2200]	; 11e8c <blkid_probe_get_size@plt+0xa974>
   115f0:	mov	r0, sl
   115f4:	add	r1, pc, r1
   115f8:	bl	7314 <strcmp@plt>
   115fc:	subs	r3, r0, #0
   11600:	str	r3, [sp, #52]	; 0x34
   11604:	bne	11708 <blkid_probe_get_size@plt+0xa1f0>
   11608:	cmp	r7, #3
   1160c:	bhi	12708 <blkid_probe_get_size@plt+0xb1f0>
   11610:	ldr	r3, [pc, #2168]	; 11e90 <blkid_probe_get_size@plt+0xa978>
   11614:	ldr	r2, [sp, #32]
   11618:	add	r3, pc, r3
   1161c:	sub	ip, r2, #856	; 0x358
   11620:	ldm	r3, {r0, r1, r2, r3}
   11624:	add	r8, sp, #192	; 0xc0
   11628:	stm	ip, {r0, r1, r2, r3}
   1162c:	sub	r0, r8, #88	; 0x58
   11630:	mov	r1, r5
   11634:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   11638:	cmp	r0, #0
   1163c:	beq	11b88 <blkid_probe_get_size@plt+0xa670>
   11640:	ldr	r1, [pc, #2124]	; 11e94 <blkid_probe_get_size@plt+0xa97c>
   11644:	mov	r0, r5
   11648:	add	r1, pc, r1
   1164c:	bl	7314 <strcmp@plt>
   11650:	cmp	r0, #0
   11654:	bne	119d8 <blkid_probe_get_size@plt+0xa4c0>
   11658:	mov	r3, #0
   1165c:	str	r3, [sp]
   11660:	ldr	r3, [pc, #2096]	; 11e98 <blkid_probe_get_size@plt+0xa980>
   11664:	mov	r2, r7
   11668:	sub	r0, r8, #24
   1166c:	add	r3, pc, r3
   11670:	mov	r1, #9
   11674:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11678:	cmp	r0, #0
   1167c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   11680:	ldr	r3, [pc, #2068]	; 11e9c <blkid_probe_get_size@plt+0xa984>
   11684:	add	r3, pc, r3
   11688:	ldr	r3, [r3, #4]
   1168c:	cmp	r3, #2
   11690:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11694:	ldr	r2, [sp, #32]
   11698:	ldr	r3, [pc, #2048]	; 11ea0 <blkid_probe_get_size@plt+0xa988>
   1169c:	ldr	r0, [sp, #24]
   116a0:	ldr	r1, [r2, #-8]
   116a4:	ldr	r2, [pc, #2040]	; 11ea4 <blkid_probe_get_size@plt+0xa98c>
   116a8:	add	r3, pc, r3
   116ac:	add	r2, pc, r2
   116b0:	str	r2, [sp, #4]
   116b4:	add	r3, r3, #1072	; 0x430
   116b8:	ldr	r2, [pc, #2024]	; 11ea8 <blkid_probe_get_size@plt+0xa990>
   116bc:	add	r3, r3, #12
   116c0:	str	r0, [sp, #8]
   116c4:	str	r3, [sp]
   116c8:	str	r1, [sp, #16]
   116cc:	str	r9, [sp, #12]
   116d0:	ldr	r3, [pc, #2004]	; 11eac <blkid_probe_get_size@plt+0xa994>
   116d4:	add	r2, pc, r2
   116d8:	mov	r1, #0
   116dc:	ldr	r0, [pc, #2480]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   116e0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   116e4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   116e8:	cmp	r3, #45	; 0x2d
   116ec:	bne	12f04 <blkid_probe_get_size@plt+0xb9ec>
   116f0:	ldrb	r3, [r4, #1]
   116f4:	cmp	r3, #61	; 0x3d
   116f8:	bne	11294 <blkid_probe_get_size@plt+0x9d7c>
   116fc:	add	r4, r4, #2
   11700:	mov	r7, #5
   11704:	b	11368 <blkid_probe_get_size@plt+0x9e50>
   11708:	ldr	r1, [pc, #1952]	; 11eb0 <blkid_probe_get_size@plt+0xa998>
   1170c:	mov	r0, sl
   11710:	add	r1, pc, r1
   11714:	bl	7314 <strcmp@plt>
   11718:	subs	r8, r0, #0
   1171c:	beq	11948 <blkid_probe_get_size@plt+0xa430>
   11720:	ldr	r1, [pc, #1932]	; 11eb4 <blkid_probe_get_size@plt+0xa99c>
   11724:	mov	r2, #5
   11728:	add	r1, pc, r1
   1172c:	mov	r0, sl
   11730:	bl	6a5c <strncmp@plt>
   11734:	cmp	r0, #0
   11738:	bne	11abc <blkid_probe_get_size@plt+0xa5a4>
   1173c:	cmn	sl, #5
   11740:	beq	11abc <blkid_probe_get_size@plt+0xa5a4>
   11744:	add	r0, sl, #4
   11748:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   1174c:	cmp	r0, #0
   11750:	beq	12e9c <blkid_probe_get_size@plt+0xb984>
   11754:	cmp	r7, #5
   11758:	beq	12a70 <blkid_probe_get_size@plt+0xb558>
   1175c:	cmp	r7, #2
   11760:	str	r0, [sp]
   11764:	movls	r1, #12
   11768:	movhi	r1, #48	; 0x30
   1176c:	mov	r3, r5
   11770:	mov	r2, r7
   11774:	add	r0, sp, #168	; 0xa8
   11778:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   1177c:	cmp	r0, #0
   11780:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   11784:	ldr	r3, [pc, #1836]	; 11eb8 <blkid_probe_get_size@plt+0xa9a0>
   11788:	add	r3, pc, r3
   1178c:	ldr	r3, [r3, #4]
   11790:	cmp	r3, #2
   11794:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11798:	ldr	r2, [sp, #32]
   1179c:	ldr	r3, [pc, #1816]	; 11ebc <blkid_probe_get_size@plt+0xa9a4>
   117a0:	ldr	r0, [sp, #24]
   117a4:	ldr	r1, [r2, #-8]
   117a8:	ldr	r2, [pc, #1808]	; 11ec0 <blkid_probe_get_size@plt+0xa9a8>
   117ac:	add	r3, pc, r3
   117b0:	add	r2, pc, r2
   117b4:	str	r2, [sp, #4]
   117b8:	add	r3, r3, #1072	; 0x430
   117bc:	ldr	r2, [pc, #1792]	; 11ec4 <blkid_probe_get_size@plt+0xa9ac>
   117c0:	add	r3, r3, #12
   117c4:	str	r0, [sp, #8]
   117c8:	str	r3, [sp]
   117cc:	str	r1, [sp, #16]
   117d0:	str	r9, [sp, #12]
   117d4:	ldr	r3, [pc, #1772]	; 11ec8 <blkid_probe_get_size@plt+0xa9b0>
   117d8:	add	r2, pc, r2
   117dc:	mov	r1, #0
   117e0:	ldr	r0, [pc, #2220]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   117e4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   117e8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   117ec:	add	r4, r4, #2
   117f0:	mov	r7, #4
   117f4:	b	11368 <blkid_probe_get_size@plt+0x9e50>
   117f8:	ldr	r9, [sp, #44]	; 0x2c
   117fc:	ldr	r3, [sp, #56]	; 0x38
   11800:	ldr	r6, [r9, #16]
   11804:	add	r5, r3, #1
   11808:	cmp	r5, r6
   1180c:	bcs	10ec4 <blkid_probe_get_size@plt+0x99ac>
   11810:	ldr	sl, [pc, #1716]	; 11ecc <blkid_probe_get_size@plt+0xa9b4>
   11814:	ldr	r3, [pc, #1716]	; 11ed0 <blkid_probe_get_size@plt+0xa9b8>
   11818:	add	r4, r5, r5, lsl #1
   1181c:	add	r3, pc, r3
   11820:	add	sl, pc, sl
   11824:	str	r3, [sp, #32]
   11828:	add	r3, sl, #1072	; 0x430
   1182c:	lsl	r4, r4, #2
   11830:	str	r3, [sp, #36]	; 0x24
   11834:	b	11844 <blkid_probe_get_size@plt+0xa32c>
   11838:	cmp	r6, r5
   1183c:	add	r4, r4, #12
   11840:	bls	10ec4 <blkid_probe_get_size@plt+0x99ac>
   11844:	ldr	r3, [r9, #12]
   11848:	add	r5, r5, #1
   1184c:	add	r8, r3, r4
   11850:	ldrb	r3, [r3, r4]
   11854:	cmp	r3, #52	; 0x34
   11858:	bne	11838 <blkid_probe_get_size@plt+0xa320>
   1185c:	ldr	r2, [r9, #24]
   11860:	ldr	r3, [r8, #4]
   11864:	cmp	r6, r5
   11868:	ldr	r2, [r2]
   1186c:	add	sl, r2, r3
   11870:	bls	118c8 <blkid_probe_get_size@plt+0xa3b0>
   11874:	str	r4, [sp, #28]
   11878:	mov	r7, r8
   1187c:	mov	r4, sl
   11880:	mov	fp, r5
   11884:	mov	sl, r2
   11888:	ldrb	r3, [r7, #12]
   1188c:	cmp	r3, #1
   11890:	bne	11920 <blkid_probe_get_size@plt+0xa408>
   11894:	ldr	r1, [r7, #16]
   11898:	cmp	r1, #0
   1189c:	beq	11920 <blkid_probe_get_size@plt+0xa408>
   118a0:	add	r1, sl, r1
   118a4:	mov	r0, r4
   118a8:	bl	7314 <strcmp@plt>
   118ac:	cmp	r0, #0
   118b0:	bne	11920 <blkid_probe_get_size@plt+0xa408>
   118b4:	mov	sl, r4
   118b8:	str	fp, [r8, #8]
   118bc:	ldr	r4, [sp, #28]
   118c0:	ldr	r8, [r9, #12]
   118c4:	add	r8, r8, r4
   118c8:	ldr	r1, [r8, #8]
   118cc:	cmp	r1, #0
   118d0:	bne	11918 <blkid_probe_get_size@plt+0xa400>
   118d4:	ldr	r3, [sp, #32]
   118d8:	ldr	r2, [r3, #4]
   118dc:	cmp	r2, #2
   118e0:	ble	11918 <blkid_probe_get_size@plt+0xa400>
   118e4:	ldr	r2, [pc, #1512]	; 11ed4 <blkid_probe_get_size@plt+0xa9bc>
   118e8:	ldr	r3, [sp, #24]
   118ec:	add	r2, pc, r2
   118f0:	str	r3, [sp, #12]
   118f4:	str	r2, [sp, #4]
   118f8:	ldr	r3, [sp, #36]	; 0x24
   118fc:	ldr	r2, [pc, #1492]	; 11ed8 <blkid_probe_get_size@plt+0xa9c0>
   11900:	str	r3, [sp]
   11904:	str	sl, [sp, #8]
   11908:	ldr	r3, [pc, #1484]	; 11edc <blkid_probe_get_size@plt+0xa9c4>
   1190c:	add	r2, pc, r2
   11910:	ldr	r0, [pc, #1916]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11914:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11918:	ldr	r6, [r9, #16]
   1191c:	b	11838 <blkid_probe_get_size@plt+0xa320>
   11920:	add	fp, fp, #1
   11924:	cmp	fp, r6
   11928:	add	r7, r7, #12
   1192c:	bcc	11888 <blkid_probe_get_size@plt+0xa370>
   11930:	mov	sl, r4
   11934:	ldr	r4, [sp, #28]
   11938:	b	118c8 <blkid_probe_get_size@plt+0xa3b0>
   1193c:	mov	ip, r5
   11940:	mov	fp, #1
   11944:	b	11428 <blkid_probe_get_size@plt+0x9f10>
   11948:	cmp	r7, #3
   1194c:	bhi	12ad8 <blkid_probe_get_size@plt+0xb5c0>
   11950:	str	r8, [sp]
   11954:	mov	r3, r5
   11958:	mov	r2, r7
   1195c:	mov	r1, #10
   11960:	add	r0, sp, #168	; 0xa8
   11964:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11968:	cmp	r0, #0
   1196c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   11970:	ldr	r3, [pc, #1384]	; 11ee0 <blkid_probe_get_size@plt+0xa9c8>
   11974:	add	r3, pc, r3
   11978:	ldr	r3, [r3, #4]
   1197c:	cmp	r3, #2
   11980:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11984:	ldr	r2, [sp, #32]
   11988:	ldr	r3, [pc, #1364]	; 11ee4 <blkid_probe_get_size@plt+0xa9cc>
   1198c:	ldr	r1, [sp, #24]
   11990:	ldr	r0, [r2, #-8]
   11994:	ldr	r2, [pc, #1356]	; 11ee8 <blkid_probe_get_size@plt+0xa9d0>
   11998:	add	r3, pc, r3
   1199c:	add	r2, pc, r2
   119a0:	str	r2, [sp, #4]
   119a4:	add	r3, r3, #1072	; 0x430
   119a8:	ldr	r2, [pc, #1340]	; 11eec <blkid_probe_get_size@plt+0xa9d4>
   119ac:	add	r3, r3, #12
   119b0:	str	r1, [sp, #8]
   119b4:	str	r3, [sp]
   119b8:	str	r0, [sp, #16]
   119bc:	str	r9, [sp, #12]
   119c0:	mov	r1, r8
   119c4:	ldr	r3, [pc, #1316]	; 11ef0 <blkid_probe_get_size@plt+0xa9d8>
   119c8:	add	r2, pc, r2
   119cc:	ldr	r0, [pc, #1728]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   119d0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   119d4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   119d8:	ldr	r3, [pc, #1300]	; 11ef4 <blkid_probe_get_size@plt+0xa9dc>
   119dc:	add	r3, pc, r3
   119e0:	ldr	r3, [r3, #4]
   119e4:	cmp	r3, #3
   119e8:	ble	11658 <blkid_probe_get_size@plt+0xa140>
   119ec:	ldr	r3, [pc, #1284]	; 11ef8 <blkid_probe_get_size@plt+0xa9e0>
   119f0:	ldr	r2, [pc, #1284]	; 11efc <blkid_probe_get_size@plt+0xa9e4>
   119f4:	add	r3, pc, r3
   119f8:	add	r2, pc, r2
   119fc:	ldr	r1, [sp, #24]
   11a00:	str	r2, [sp, #4]
   11a04:	add	r3, r3, #1072	; 0x430
   11a08:	ldr	r2, [pc, #1264]	; 11f00 <blkid_probe_get_size@plt+0xa9e8>
   11a0c:	add	r3, r3, #12
   11a10:	str	r1, [sp, #8]
   11a14:	str	r3, [sp]
   11a18:	str	r5, [sp, #16]
   11a1c:	str	r9, [sp, #12]
   11a20:	ldr	r1, [sp, #52]	; 0x34
   11a24:	ldr	r3, [pc, #1240]	; 11f04 <blkid_probe_get_size@plt+0xa9ec>
   11a28:	add	r2, pc, r2
   11a2c:	ldr	r0, [pc, #1676]	; 120c0 <blkid_probe_get_size@plt+0xaba8>
   11a30:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11a34:	b	11658 <blkid_probe_get_size@plt+0xa140>
   11a38:	ldr	r2, [pc, #1224]	; 11f08 <blkid_probe_get_size@plt+0xa9f0>
   11a3c:	ldr	r3, [pc, #1224]	; 11f0c <blkid_probe_get_size@plt+0xa9f4>
   11a40:	add	r2, pc, r2
   11a44:	ldr	r1, [sp, #24]
   11a48:	str	r2, [sp, #4]
   11a4c:	add	r3, pc, r3
   11a50:	ldr	r2, [pc, #1208]	; 11f10 <blkid_probe_get_size@plt+0xa9f8>
   11a54:	add	r3, r3, #1072	; 0x430
   11a58:	str	r1, [sp, #8]
   11a5c:	str	r3, [sp]
   11a60:	add	r2, pc, r2
   11a64:	mov	r3, #1520	; 0x5f0
   11a68:	mov	r1, #0
   11a6c:	ldr	r0, [pc, #1184]	; 11f14 <blkid_probe_get_size@plt+0xa9fc>
   11a70:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11a74:	mov	r4, #0
   11a78:	b	10ec8 <blkid_probe_get_size@plt+0x99b0>
   11a7c:	ldr	r2, [pc, #1172]	; 11f18 <blkid_probe_get_size@plt+0xaa00>
   11a80:	ldr	r3, [pc, #1172]	; 11f1c <blkid_probe_get_size@plt+0xaa04>
   11a84:	add	r2, pc, r2
   11a88:	ldr	r1, [sp, #24]
   11a8c:	str	r2, [sp, #4]
   11a90:	add	r3, pc, r3
   11a94:	ldr	r2, [pc, #1156]	; 11f20 <blkid_probe_get_size@plt+0xaa08>
   11a98:	add	r3, r3, #1072	; 0x430
   11a9c:	str	r1, [sp, #8]
   11aa0:	str	r3, [sp]
   11aa4:	add	r2, pc, r2
   11aa8:	ldr	r3, [pc, #1140]	; 11f24 <blkid_probe_get_size@plt+0xaa0c>
   11aac:	mov	r1, r9
   11ab0:	ldr	r0, [pc, #1116]	; 11f14 <blkid_probe_get_size@plt+0xa9fc>
   11ab4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11ab8:	b	10f10 <blkid_probe_get_size@plt+0x99f8>
   11abc:	ldr	r1, [pc, #1124]	; 11f28 <blkid_probe_get_size@plt+0xaa10>
   11ac0:	mov	r2, #7
   11ac4:	add	r1, pc, r1
   11ac8:	mov	r0, sl
   11acc:	bl	6a5c <strncmp@plt>
   11ad0:	subs	r8, r0, #0
   11ad4:	bne	11c6c <blkid_probe_get_size@plt+0xa754>
   11ad8:	cmn	sl, #7
   11adc:	beq	11c6c <blkid_probe_get_size@plt+0xa754>
   11ae0:	add	r0, sl, #6
   11ae4:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   11ae8:	cmp	r0, #0
   11aec:	beq	12f8c <blkid_probe_get_size@plt+0xba74>
   11af0:	cmp	r7, #5
   11af4:	beq	12f24 <blkid_probe_get_size@plt+0xba0c>
   11af8:	cmp	r7, #2
   11afc:	str	r0, [sp]
   11b00:	movls	r1, #13
   11b04:	movhi	r1, #49	; 0x31
   11b08:	mov	r3, r5
   11b0c:	mov	r2, r7
   11b10:	add	r0, sp, #168	; 0xa8
   11b14:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11b18:	cmp	r0, #0
   11b1c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   11b20:	ldr	r3, [pc, #1028]	; 11f2c <blkid_probe_get_size@plt+0xaa14>
   11b24:	add	r3, pc, r3
   11b28:	ldr	r3, [r3, #4]
   11b2c:	cmp	r3, #2
   11b30:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11b34:	ldr	r2, [sp, #32]
   11b38:	ldr	r3, [pc, #1008]	; 11f30 <blkid_probe_get_size@plt+0xaa18>
   11b3c:	ldr	r0, [sp, #24]
   11b40:	ldr	r1, [r2, #-8]
   11b44:	ldr	r2, [pc, #1000]	; 11f34 <blkid_probe_get_size@plt+0xaa1c>
   11b48:	add	r3, pc, r3
   11b4c:	add	r2, pc, r2
   11b50:	str	r2, [sp, #4]
   11b54:	add	r3, r3, #1072	; 0x430
   11b58:	ldr	r2, [pc, #984]	; 11f38 <blkid_probe_get_size@plt+0xaa20>
   11b5c:	add	r3, r3, #12
   11b60:	str	r0, [sp, #8]
   11b64:	str	r3, [sp]
   11b68:	str	r1, [sp, #16]
   11b6c:	str	r9, [sp, #12]
   11b70:	ldr	r3, [pc, #964]	; 11f3c <blkid_probe_get_size@plt+0xaa24>
   11b74:	add	r2, pc, r2
   11b78:	mov	r1, #0
   11b7c:	ldr	r0, [pc, #1296]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11b80:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11b84:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11b88:	str	r0, [sp]
   11b8c:	mov	r3, r5
   11b90:	mov	r2, r7
   11b94:	sub	r0, r8, #24
   11b98:	mov	r1, #9
   11b9c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11ba0:	b	11678 <blkid_probe_get_size@plt+0xa160>
   11ba4:	ldr	r2, [pc, #916]	; 11f40 <blkid_probe_get_size@plt+0xaa28>
   11ba8:	add	r2, pc, r2
   11bac:	ldr	r2, [r2, #4]
   11bb0:	cmp	r2, #2
   11bb4:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11bb8:	ldr	r2, [pc, #900]	; 11f44 <blkid_probe_get_size@plt+0xaa2c>
   11bbc:	ldr	r0, [pc, #900]	; 11f48 <blkid_probe_get_size@plt+0xaa30>
   11bc0:	add	r2, pc, r2
   11bc4:	add	r2, r2, #1072	; 0x430
   11bc8:	add	r2, r2, #12
   11bcc:	ldr	r3, [sp, #24]
   11bd0:	str	r2, [sp]
   11bd4:	ldr	r2, [pc, #880]	; 11f4c <blkid_probe_get_size@plt+0xaa34>
   11bd8:	add	r0, pc, r0
   11bdc:	str	r3, [sp, #8]
   11be0:	str	r0, [sp, #4]
   11be4:	str	sl, [sp, #16]
   11be8:	str	r9, [sp, #12]
   11bec:	mov	r1, r8
   11bf0:	ldr	r3, [pc, #856]	; 11f50 <blkid_probe_get_size@plt+0xaa38>
   11bf4:	add	r2, pc, r2
   11bf8:	ldr	r0, [pc, #1172]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11bfc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11c00:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11c04:	ldr	r3, [pc, #840]	; 11f54 <blkid_probe_get_size@plt+0xaa3c>
   11c08:	add	r3, pc, r3
   11c0c:	ldr	r3, [r3, #4]
   11c10:	cmp	r3, #2
   11c14:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11c18:	ldr	r2, [sp, #32]
   11c1c:	ldr	r3, [pc, #820]	; 11f58 <blkid_probe_get_size@plt+0xaa40>
   11c20:	ldr	r1, [sp, #24]
   11c24:	ldr	r0, [r2, #-8]
   11c28:	ldr	r2, [pc, #812]	; 11f5c <blkid_probe_get_size@plt+0xaa44>
   11c2c:	add	r3, pc, r3
   11c30:	add	r2, pc, r2
   11c34:	str	r2, [sp, #4]
   11c38:	add	r3, r3, #1072	; 0x430
   11c3c:	ldr	r2, [pc, #796]	; 11f60 <blkid_probe_get_size@plt+0xaa48>
   11c40:	add	r3, r3, #12
   11c44:	str	r1, [sp, #8]
   11c48:	str	r3, [sp]
   11c4c:	str	r0, [sp, #16]
   11c50:	str	r9, [sp, #12]
   11c54:	mov	r1, r8
   11c58:	ldr	r3, [pc, #772]	; 11f64 <blkid_probe_get_size@plt+0xaa4c>
   11c5c:	add	r2, pc, r2
   11c60:	ldr	r0, [pc, #1068]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11c64:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11c68:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11c6c:	ldr	r1, [pc, #756]	; 11f68 <blkid_probe_get_size@plt+0xaa50>
   11c70:	mov	r2, #9
   11c74:	add	r1, pc, r1
   11c78:	mov	r0, sl
   11c7c:	bl	6a5c <strncmp@plt>
   11c80:	subs	r8, r0, #0
   11c84:	bne	125bc <blkid_probe_get_size@plt+0xb0a4>
   11c88:	cmn	sl, #9
   11c8c:	beq	125bc <blkid_probe_get_size@plt+0xb0a4>
   11c90:	add	r0, sl, #8
   11c94:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   11c98:	cmp	r0, #0
   11c9c:	beq	12dcc <blkid_probe_get_size@plt+0xb8b4>
   11ca0:	cmp	r7, #5
   11ca4:	beq	12e34 <blkid_probe_get_size@plt+0xb91c>
   11ca8:	str	r0, [sp]
   11cac:	mov	r3, r5
   11cb0:	mov	r2, r7
   11cb4:	mov	r1, #44	; 0x2c
   11cb8:	add	r0, sp, #168	; 0xa8
   11cbc:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   11cc0:	cmp	r0, #0
   11cc4:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   11cc8:	ldr	r3, [pc, #668]	; 11f6c <blkid_probe_get_size@plt+0xaa54>
   11ccc:	add	r3, pc, r3
   11cd0:	ldr	r3, [r3, #4]
   11cd4:	cmp	r3, #2
   11cd8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   11cdc:	ldr	r2, [sp, #32]
   11ce0:	ldr	r3, [pc, #648]	; 11f70 <blkid_probe_get_size@plt+0xaa58>
   11ce4:	ldr	r1, [sp, #24]
   11ce8:	ldr	r0, [r2, #-8]
   11cec:	ldr	r2, [pc, #640]	; 11f74 <blkid_probe_get_size@plt+0xaa5c>
   11cf0:	add	r3, pc, r3
   11cf4:	add	r2, pc, r2
   11cf8:	str	r2, [sp, #4]
   11cfc:	add	r3, r3, #1072	; 0x430
   11d00:	ldr	r2, [pc, #624]	; 11f78 <blkid_probe_get_size@plt+0xaa60>
   11d04:	add	r3, r3, #12
   11d08:	str	r1, [sp, #8]
   11d0c:	str	r3, [sp]
   11d10:	str	r0, [sp, #16]
   11d14:	str	r9, [sp, #12]
   11d18:	mov	r1, r8
   11d1c:	ldr	r3, [pc, #600]	; 11f7c <blkid_probe_get_size@plt+0xaa64>
   11d20:	add	r2, pc, r2
   11d24:	ldr	r0, [pc, #872]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   11d28:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   11d2c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11d30:	ldr	r3, [sp, #32]
   11d34:	ldr	r5, [r3, #-8]
   11d38:	cmp	r5, #0
   11d3c:	beq	10f7c <blkid_probe_get_size@plt+0x9a64>
   11d40:	ldr	fp, [sp, #44]	; 0x2c
   11d44:	ldr	sl, [sp, #32]
   11d48:	mov	r7, r0
   11d4c:	mov	r6, r0
   11d50:	add	r8, sp, #168	; 0xa8
   11d54:	cmp	r5, r6
   11d58:	movls	r1, #16
   11d5c:	movls	r4, #0
   11d60:	bls	11dbc <blkid_probe_get_size@plt+0xa8a4>
   11d64:	add	r2, r6, r6, lsl #1
   11d68:	mov	r4, #0
   11d6c:	add	r2, r8, r2, lsl #2
   11d70:	mov	r0, r4
   11d74:	mov	r3, r6
   11d78:	ldrb	r1, [r2, #16]
   11d7c:	cmp	r1, #0
   11d80:	beq	11da0 <blkid_probe_get_size@plt+0xa888>
   11d84:	cmp	r0, #0
   11d88:	moveq	r0, r1
   11d8c:	moveq	r4, r3
   11d90:	beq	11da0 <blkid_probe_get_size@plt+0xa888>
   11d94:	cmp	r0, r1
   11d98:	movhi	r4, r3
   11d9c:	movhi	r0, r1
   11da0:	add	r3, r3, #1
   11da4:	cmp	r5, r3
   11da8:	add	r2, r2, #12
   11dac:	bne	11d78 <blkid_probe_get_size@plt+0xa860>
   11db0:	add	r1, r4, r4, lsl #1
   11db4:	lsl	r1, r1, #2
   11db8:	add	r1, r1, #16
   11dbc:	add	r1, r8, r1
   11dc0:	mov	r0, fp
   11dc4:	bl	9f78 <blkid_probe_get_size@plt+0x2a60>
   11dc8:	cmp	r0, #0
   11dcc:	bne	112f4 <blkid_probe_get_size@plt+0x9ddc>
   11dd0:	add	r3, r4, r4, lsl #1
   11dd4:	cmp	r4, r6
   11dd8:	add	r3, sl, r3, lsl #2
   11ddc:	addeq	r6, r4, #1
   11de0:	strb	r0, [r3, #-776]	; 0xfffffcf8
   11de4:	addne	r2, r4, #1
   11de8:	moveq	r2, r6
   11dec:	ldr	r3, [sl, #-8]
   11df0:	cmp	r5, r2
   11df4:	add	r7, r7, #1
   11df8:	moveq	r5, r4
   11dfc:	cmp	r7, r3
   11e00:	bcc	11d54 <blkid_probe_get_size@plt+0xa83c>
   11e04:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   11e08:	andeq	r6, r8, r8, lsl #26
   11e0c:	andeq	r0, r0, ip, lsr r4
   11e10:	andeq	sp, r5, r4, lsl #10
   11e14:	andeq	r7, r8, r8, lsl #5
   11e18:	andeq	r7, r8, ip, lsr r2
   11e1c:	muleq	r5, r8, r6
   11e20:	andeq	r3, r5, r0, lsl #13
   11e24:	andeq	r4, r0, r2
   11e28:	andeq	r7, r8, r4, asr #1
   11e2c:	andeq	r5, r5, ip, lsr #24
   11e30:	andeq	r3, r5, r4, lsr r5
   11e34:	andeq	r3, r5, ip, asr #27
   11e38:	andeq	r0, r0, r5, lsl r6
   11e3c:	strdeq	pc, [r0], -lr
   11e40:	andeq	r4, r5, r0, ror #1
   11e44:	andeq	r6, r8, r4, asr #28
   11e48:	andeq	r3, r5, r0, asr #5
   11e4c:	andeq	r5, r5, ip, lsr pc
   11e50:	andeq	r3, r5, r8, asr #22
   11e54:	ldrdeq	r0, [r0], -ip
   11e58:	andeq	r4, r5, r4, ror #5
   11e5c:	andeq	r5, r5, r8, lsr r9
   11e60:	andeq	r6, r8, r4, ror ip
   11e64:	andeq	r3, r5, r4, ror #1
   11e68:	andeq	r5, r5, r4, lsl #17
   11e6c:	andeq	r3, r5, r8, ror #18
   11e70:	andeq	r0, r0, r2, lsr r4
   11e74:	andeq	r4, r5, r4, lsl #3
   11e78:	andeq	r6, r8, ip, asr #23
   11e7c:	andeq	r3, r5, ip, lsr r0
   11e80:	ldrdeq	r5, [r5], -ip
   11e84:	andeq	r3, r5, r0, asr #17
   11e88:	andeq	r0, r0, r9, lsr r4
   11e8c:	ldrdeq	r5, [r5], -r8
   11e90:	andeq	r6, r8, r8, ror #19
   11e94:	muleq	r5, r8, r1
   11e98:	andeq	r5, r5, r8, lsr #15
   11e9c:			; <UNDEFINED> instruction: 0x00086ab8
   11ea0:	andeq	r2, r5, r8, lsr #30
   11ea4:	andeq	r5, r5, r8, asr #13
   11ea8:			; <UNDEFINED> instruction: 0x000537b0
   11eac:	andeq	r0, r0, r8, asr #8
   11eb0:	andeq	r5, r5, r8, lsl r7
   11eb4:	andeq	r5, r5, r8, lsl #14
   11eb8:			; <UNDEFINED> instruction: 0x000869b4
   11ebc:	andeq	r2, r5, r4, lsr #28
   11ec0:	andeq	r5, r5, r4, asr #11
   11ec4:	andeq	r3, r5, ip, lsr #13
   11ec8:	andeq	r0, r0, lr, asr r4
   11ecc:			; <UNDEFINED> instruction: 0x00052db0
   11ed0:	andeq	r6, r8, r0, lsr #18
   11ed4:	andeq	r5, r5, r4, lsl #19
   11ed8:	andeq	r3, r5, r8, ror r5
   11edc:	andeq	r0, r0, ip, lsr #12
   11ee0:	andeq	r6, r8, r8, asr #15
   11ee4:	andeq	r2, r5, r8, lsr ip
   11ee8:	ldrdeq	r5, [r5], -r8
   11eec:			; <UNDEFINED> instruction: 0x000534bc
   11ef0:	andeq	r0, r0, pc, asr #8
   11ef4:	andeq	r6, r8, r0, ror #14
   11ef8:	ldrdeq	r2, [r5], -ip
   11efc:	andeq	r5, r5, r0, ror #7
   11f00:	andeq	r3, r5, ip, asr r4
   11f04:	andeq	r0, r0, r2, asr #8
   11f08:	andeq	r5, r5, ip, asr #4
   11f0c:	andeq	r2, r5, r4, lsl #23
   11f10:	andeq	r3, r5, r4, lsr #8
   11f14:	andeq	r0, r0, r7, lsl #8
   11f18:	andeq	r5, r5, r0, lsr #4
   11f1c:	andeq	r2, r5, r0, asr #22
   11f20:	andeq	r3, r5, r0, ror #7
   11f24:	strdeq	r0, [r0], -r3
   11f28:	muleq	r5, r8, r3
   11f2c:	andeq	r6, r8, r8, lsl r6
   11f30:	andeq	r2, r5, r8, lsl #21
   11f34:	andeq	r5, r5, r8, lsr #4
   11f38:	andeq	r3, r5, r0, lsl r3
   11f3c:	andeq	r0, r0, sp, ror #8
   11f40:	muleq	r8, r4, r5
   11f44:	andeq	r2, r5, r0, lsl sl
   11f48:	andeq	r5, r5, r0, lsl #3
   11f4c:	muleq	r5, r0, r2
   11f50:	andeq	r0, r0, r8, lsr #8
   11f54:	andeq	r6, r8, r4, lsr r5
   11f58:	andeq	r2, r5, r4, lsr #19
   11f5c:	andeq	r5, r5, r4, asr #2
   11f60:	andeq	r3, r5, r8, lsr #4
   11f64:	andeq	r0, r0, fp, lsr #8
   11f68:	strdeq	r5, [r5], -r0
   11f6c:	andeq	r6, r8, r0, ror r4
   11f70:	andeq	r2, r5, r0, ror #17
   11f74:	andeq	r5, r5, r0, lsl #1
   11f78:	andeq	r3, r5, r4, ror #2
   11f7c:	andeq	r0, r0, r8, ror r4
   11f80:	andeq	r5, r8, r0, ror #30
   11f84:	ldrdeq	r2, [r5], -ip
   11f88:	andeq	r4, r5, ip, asr #22
   11f8c:	andeq	r2, r5, ip, asr ip
   11f90:	andeq	r0, r0, pc, lsr #8
   11f94:	strdeq	r5, [r8], -ip
   11f98:	ldrdeq	r5, [r8], -ip
   11f9c:	andeq	r2, r5, r8, asr r0
   11fa0:	andeq	r4, r5, r8, asr #15
   11fa4:	ldrdeq	r2, [r5], -r8
   11fa8:	andeq	r0, r0, r6, lsr r4
   11fac:			; <UNDEFINED> instruction: 0x000548b8
   11fb0:	andeq	r5, r8, ip, lsr fp
   11fb4:	andeq	r1, r5, ip, lsr #31
   11fb8:	andeq	r4, r5, ip, asr #14
   11fbc:	andeq	r2, r5, r0, lsr r8
   11fc0:	andeq	r0, r0, pc, ror r4
   11fc4:	andeq	r1, r5, r0, ror #30
   11fc8:	strdeq	r2, [r5], -r8
   11fcc:	andeq	r4, r5, r4, asr r6
   11fd0:	andeq	r0, r0, pc, lsl r4
   11fd4:	andeq	r4, r5, r0, asr #12
   11fd8:	andeq	r0, r0, r1, lsr #8
   11fdc:	andeq	r5, r8, r0, lsr sl
   11fe0:	andeq	r1, r5, ip, lsr #29
   11fe4:	andeq	r4, r5, ip, lsl r6
   11fe8:	andeq	r2, r5, ip, lsr #14
   11fec:	andeq	r0, r0, sp, lsr r4
   11ff0:	andeq	r4, r5, r4, lsl r7
   11ff4:	muleq	r8, r0, r9
   11ff8:	andeq	r1, r5, r0, lsl #28
   11ffc:	andeq	r4, r5, r0, lsr #11
   12000:	andeq	r2, r5, r4, lsl #13
   12004:	andeq	r0, r0, r6, lsl #9
   12008:	andeq	r4, r5, r8, ror r6
   1200c:	andeq	r5, r8, r8, ror #17
   12010:	andeq	r1, r5, r8, asr sp
   12014:	strdeq	r4, [r5], -r8
   12018:	ldrdeq	r2, [r5], -ip
   1201c:	andeq	r0, r0, sp, lsl #9
   12020:	andeq	r5, r8, r0, lsl #17
   12024:	strdeq	r1, [r5], -ip
   12028:	andeq	r4, r5, ip, ror #8
   1202c:	andeq	r2, r5, ip, ror r5
   12030:	andeq	r0, r0, r3, lsl #9
   12034:	andeq	r5, r8, r0, lsr #16
   12038:	muleq	r5, ip, ip
   1203c:	andeq	r4, r5, ip, lsl #8
   12040:	andeq	r2, r5, ip, lsl r5
   12044:	andeq	r0, r0, sl, lsl #9
   12048:	andeq	r4, r5, r8, lsl r5
   1204c:	andeq	r4, r5, r4, ror #9
   12050:	andeq	r5, r8, r4, ror #14
   12054:	andeq	r5, r8, r0, lsr r7
   12058:	andeq	r1, r5, r0, lsr #23
   1205c:	andeq	r4, r5, r0, asr #6
   12060:	andeq	r2, r5, r8, lsr #8
   12064:	muleq	r0, ip, r4
   12068:	andeq	r5, r8, r8, asr #13
   1206c:	andeq	r1, r5, r4, asr #22
   12070:	andeq	r4, r5, r8, asr #5
   12074:	andeq	r3, r5, ip, asr sl
   12078:	andeq	r2, r5, r0, asr #7
   1207c:	andeq	r0, r0, r7, asr r4
   12080:	andeq	r5, r8, r0, ror #12
   12084:	ldrdeq	r1, [r5], -ip
   12088:	andeq	r4, r5, ip, asr #4
   1208c:	andeq	r2, r5, ip, asr r3
   12090:	andeq	r0, r0, ip, asr #8
   12094:	andeq	r0, r0, r3, lsl #8
   12098:	muleq	r5, r0, sl
   1209c:	andeq	r4, r5, r4, ror #6
   120a0:	andeq	r2, r5, r8, lsl r3
   120a4:	muleq	r0, r8, r4
   120a8:	andeq	r4, r5, ip, ror #6
   120ac:	andeq	r5, r8, r4, lsr #11
   120b0:	andeq	r1, r5, r0, lsr #20
   120b4:	andeq	r4, r5, r0, asr #6
   120b8:	andeq	r2, r5, r8, lsr #5
   120bc:	muleq	r0, sl, r4
   120c0:	andeq	r0, r0, r4, lsl #8
   120c4:	andeq	r5, r8, r8, asr #10
   120c8:	andeq	r1, r5, r4, asr #19
   120cc:	andeq	r4, r5, r8, lsr #4
   120d0:	andeq	r3, r5, r8, asr #18
   120d4:	andeq	r2, r5, ip, lsr r2
   120d8:	muleq	r0, r5, r4
   120dc:	ldrdeq	r5, [r8], -ip
   120e0:	andeq	r1, r5, r8, asr r9
   120e4:	ldrdeq	r4, [r5], -ip
   120e8:	ldrdeq	r3, [r5], -ip
   120ec:	ldrdeq	r2, [r5], -r4
   120f0:	muleq	r0, r1, r4
   120f4:	andeq	r4, r5, r8, lsl #5
   120f8:	andeq	r5, r8, r8, lsr r4
   120fc:	andeq	r1, r5, r8, lsr #17
   12100:	andeq	r4, r5, r8, asr #32
   12104:	andeq	r2, r5, ip, lsr #2
   12108:	andeq	r0, r0, r3, lsr #9
   1210c:	andeq	r5, r8, ip, asr #7
   12110:	andeq	r1, r5, r8, asr #16
   12114:			; <UNDEFINED> instruction: 0x00053fb8
   12118:	andeq	r2, r5, r8, asr #1
   1211c:	andeq	r0, r0, ip, ror r4
   12120:	andeq	r5, r8, r8, ror #6
   12124:	andeq	r1, r5, r4, ror #15
   12128:	andeq	r4, r5, r8, asr #32
   1212c:	andeq	r4, r5, r8, rrx
   12130:	andeq	r2, r5, r0, rrx
   12134:	andeq	r0, r0, r2, ror r4
   12138:	andeq	r5, r8, r4, lsl #6
   1213c:	andeq	r1, r5, r0, lsl #15
   12140:	andeq	r3, r5, r4, lsl #30
   12144:	andeq	r4, r5, r4
   12148:	strdeq	r1, [r5], -r8
   1214c:	andeq	r0, r0, r5, ror r4
   12150:	muleq	r8, r8, r2
   12154:	andeq	r1, r5, r4, lsl r7
   12158:	andeq	r3, r5, r8, ror pc
   1215c:	andeq	r3, r5, ip, lsr #12
   12160:	muleq	r5, r0, pc	; <UNPREDICTABLE>
   12164:	andeq	r0, r0, r4, asr r4
   12168:	andeq	r5, r8, r4, lsl r2
   1216c:	muleq	r5, r0, r6
   12170:	andeq	r3, r5, r4, lsl lr
   12174:	andeq	r3, r5, r8, lsr #11
   12178:	andeq	r1, r5, r8, lsl #30
   1217c:	andeq	r0, r0, r6, ror #8
   12180:	andeq	r5, r8, r8, lsr #3
   12184:	andeq	r1, r5, r4, lsr #12
   12188:	andeq	r3, r5, r8, lsl #29
   1218c:	andeq	r3, r5, ip, lsr r5
   12190:	andeq	r1, r5, r0, lsr #29
   12194:	andeq	r0, r0, r3, ror #8
   12198:	andeq	r5, r8, r4, asr #2
   1219c:	andeq	r1, r5, r0, asr #11
   121a0:	andeq	r3, r5, r0, lsr sp
   121a4:	andeq	r1, r5, r0, asr #28
   121a8:	strdeq	r3, [r5], -ip
   121ac:	andeq	r4, r8, r8, ror #30
   121b0:	andeq	r5, r8, r4, asr #32
   121b4:			; <UNDEFINED> instruction: 0x000514b4
   121b8:	andeq	r3, r5, r4, asr ip
   121bc:	andeq	r1, r5, ip, lsr sp
   121c0:	andeq	r0, r0, r1, asr #9
   121c4:	andeq	r0, r0, r3, lsl #8
   121c8:	andeq	r0, r6, r4, lsl #18
   121cc:	muleq	r8, ip, pc	; <UNPREDICTABLE>
   121d0:	andeq	r1, r5, ip, lsl #8
   121d4:	andeq	r3, r5, ip, lsr #23
   121d8:	ldr	r2, [pc, #-608]	; 11f80 <blkid_probe_get_size@plt+0xaa68>
   121dc:	add	r2, pc, r2
   121e0:	ldr	r2, [r2, #4]
   121e4:	cmp	r2, #2
   121e8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   121ec:	ldr	r2, [pc, #-624]	; 11f84 <blkid_probe_get_size@plt+0xaa6c>
   121f0:	ldr	r0, [pc, #-624]	; 11f88 <blkid_probe_get_size@plt+0xaa70>
   121f4:	add	r2, pc, r2
   121f8:	add	r2, r2, #1072	; 0x430
   121fc:	add	r2, r2, #12
   12200:	ldr	r3, [sp, #24]
   12204:	str	r2, [sp]
   12208:	ldr	r2, [pc, #-644]	; 11f8c <blkid_probe_get_size@plt+0xaa74>
   1220c:	add	r0, pc, r0
   12210:	str	r3, [sp, #8]
   12214:	str	r0, [sp, #4]
   12218:	str	sl, [sp, #16]
   1221c:	str	r9, [sp, #12]
   12220:	mov	r1, r8
   12224:	ldr	r3, [pc, #-668]	; 11f90 <blkid_probe_get_size@plt+0xaa78>
   12228:	add	r2, pc, r2
   1222c:	ldr	r0, [pc, #-416]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12230:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12234:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12238:	ldr	r1, [sp, #32]
   1223c:	sub	sl, r7, #92	; 0x5c
   12240:	sub	r3, r1, #860	; 0x35c
   12244:	mov	r0, sl
   12248:	strh	r2, [r3]
   1224c:	strb	r5, [r1, #-860]	; 0xfffffca4
   12250:	bl	723c <strlen@plt>
   12254:	mov	r8, r0
   12258:	lsl	r0, r0, #2
   1225c:	add	r0, r0, #1
   12260:	bl	7230 <malloc@plt>
   12264:	subs	r4, r0, #0
   12268:	beq	1253c <blkid_probe_get_size@plt+0xb024>
   1226c:	add	lr, sl, r8
   12270:	cmp	lr, sl
   12274:	movls	r3, r4
   12278:	bls	12534 <blkid_probe_get_size@plt+0xb01c>
   1227c:	mov	r1, sl
   12280:	sub	lr, lr, #1
   12284:	mov	r3, r4
   12288:	mov	r2, #92	; 0x5c
   1228c:	mov	r8, #39	; 0x27
   12290:	mov	sl, #98	; 0x62
   12294:	sub	r0, r5, #7
   12298:	cmp	r0, #85	; 0x55
   1229c:	addls	pc, pc, r0, lsl #2
   122a0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122a4:	b	124d4 <blkid_probe_get_size@plt+0xafbc>
   122a8:	b	124c0 <blkid_probe_get_size@plt+0xafa8>
   122ac:	b	124a8 <blkid_probe_get_size@plt+0xaf90>
   122b0:	b	12490 <blkid_probe_get_size@plt+0xaf78>
   122b4:	b	12478 <blkid_probe_get_size@plt+0xaf60>
   122b8:	b	12460 <blkid_probe_get_size@plt+0xaf48>
   122bc:	b	12448 <blkid_probe_get_size@plt+0xaf30>
   122c0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122c4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122c8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122cc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122d0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122d4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122d8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122dc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122e0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122e4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122e8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122ec:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122f0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122f4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122f8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   122fc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12300:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12304:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12308:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1230c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12310:	b	12430 <blkid_probe_get_size@plt+0xaf18>
   12314:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12318:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1231c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12320:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12324:	b	1241c <blkid_probe_get_size@plt+0xaf04>
   12328:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1232c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12330:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12334:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12338:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1233c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12340:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12344:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12348:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1234c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12350:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12354:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12358:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1235c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12360:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12364:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12368:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1236c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12370:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12374:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12378:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1237c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12380:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12384:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12388:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1238c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12390:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12394:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   12398:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   1239c:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123a0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123a4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123a8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123ac:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123b0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123b4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123b8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123bc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123c0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123c4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123c8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123cc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123d0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123d4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123d8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123dc:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123e0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123e4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123e8:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123ec:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123f0:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123f4:	b	124ec <blkid_probe_get_size@plt+0xafd4>
   123f8:	b	123fc <blkid_probe_get_size@plt+0xaee4>
   123fc:	mov	r0, r3
   12400:	strb	r2, [r0], #2
   12404:	strb	r2, [r3, #1]
   12408:	mov	r3, r0
   1240c:	cmp	lr, r1
   12410:	beq	12534 <blkid_probe_get_size@plt+0xb01c>
   12414:	ldrb	r5, [r1, #1]!
   12418:	b	12294 <blkid_probe_get_size@plt+0xad7c>
   1241c:	mov	r0, r3
   12420:	strb	r2, [r0], #2
   12424:	strb	r8, [r3, #1]
   12428:	mov	r3, r0
   1242c:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12430:	mov	r0, r3
   12434:	mov	ip, #34	; 0x22
   12438:	strb	r2, [r0], #2
   1243c:	strb	ip, [r3, #1]
   12440:	mov	r3, r0
   12444:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12448:	mov	r0, r3
   1244c:	mov	ip, #114	; 0x72
   12450:	strb	r2, [r0], #2
   12454:	strb	ip, [r3, #1]
   12458:	mov	r3, r0
   1245c:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12460:	mov	r0, r3
   12464:	mov	ip, #102	; 0x66
   12468:	strb	r2, [r0], #2
   1246c:	strb	ip, [r3, #1]
   12470:	mov	r3, r0
   12474:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12478:	mov	r0, r3
   1247c:	mov	ip, #118	; 0x76
   12480:	strb	r2, [r0], #2
   12484:	strb	ip, [r3, #1]
   12488:	mov	r3, r0
   1248c:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12490:	mov	r0, r3
   12494:	mov	ip, #110	; 0x6e
   12498:	strb	r2, [r0], #2
   1249c:	strb	ip, [r3, #1]
   124a0:	mov	r3, r0
   124a4:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   124a8:	mov	r0, r3
   124ac:	mov	ip, #116	; 0x74
   124b0:	strb	r2, [r0], #2
   124b4:	strb	ip, [r3, #1]
   124b8:	mov	r3, r0
   124bc:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   124c0:	mov	r0, r3
   124c4:	strb	r2, [r0], #2
   124c8:	strb	sl, [r3, #1]
   124cc:	mov	r3, r0
   124d0:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   124d4:	mov	r0, r3
   124d8:	mov	ip, #97	; 0x61
   124dc:	strb	r2, [r0], #2
   124e0:	strb	ip, [r3, #1]
   124e4:	mov	r3, r0
   124e8:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   124ec:	sub	r0, r5, #32
   124f0:	cmp	r0, #94	; 0x5e
   124f4:	strbls	r5, [r3]
   124f8:	addls	r3, r3, #1
   124fc:	bls	1240c <blkid_probe_get_size@plt+0xaef4>
   12500:	lsr	r0, r5, #3
   12504:	lsr	ip, r5, #6
   12508:	and	r0, r0, #7
   1250c:	and	r5, r5, #7
   12510:	add	r0, r0, #48	; 0x30
   12514:	add	ip, ip, #48	; 0x30
   12518:	add	r5, r5, #48	; 0x30
   1251c:	strb	r2, [r3]
   12520:	strb	r0, [r3, #2]
   12524:	strb	ip, [r3, #1]
   12528:	strb	r5, [r3, #3]
   1252c:	add	r3, r3, #4
   12530:	b	1240c <blkid_probe_get_size@plt+0xaef4>
   12534:	mov	r2, #0
   12538:	strb	r2, [r3]
   1253c:	ldr	r8, [pc, #-1456]	; 11f94 <blkid_probe_get_size@plt+0xaa7c>
   12540:	add	r8, pc, r8
   12544:	ldr	r3, [r8, #4]
   12548:	cmp	r3, #2
   1254c:	bgt	12664 <blkid_probe_get_size@plt+0xb14c>
   12550:	mov	r0, r4
   12554:	bl	69f0 <free@plt>
   12558:	b	112cc <blkid_probe_get_size@plt+0x9db4>
   1255c:	ldr	r2, [pc, #-1484]	; 11f98 <blkid_probe_get_size@plt+0xaa80>
   12560:	add	r2, pc, r2
   12564:	ldr	r2, [r2, #4]
   12568:	cmp	r2, #2
   1256c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12570:	ldr	r2, [pc, #-1500]	; 11f9c <blkid_probe_get_size@plt+0xaa84>
   12574:	ldr	r0, [pc, #-1500]	; 11fa0 <blkid_probe_get_size@plt+0xaa88>
   12578:	add	r2, pc, r2
   1257c:	add	r2, r2, #1072	; 0x430
   12580:	add	r2, r2, #12
   12584:	ldr	r3, [sp, #24]
   12588:	str	r2, [sp]
   1258c:	ldr	r2, [pc, #-1520]	; 11fa4 <blkid_probe_get_size@plt+0xaa8c>
   12590:	add	r0, pc, r0
   12594:	str	r3, [sp, #8]
   12598:	str	r0, [sp, #4]
   1259c:	str	sl, [sp, #16]
   125a0:	str	r9, [sp, #12]
   125a4:	mov	r1, r8
   125a8:	ldr	r3, [pc, #-1544]	; 11fa8 <blkid_probe_get_size@plt+0xaa90>
   125ac:	add	r2, pc, r2
   125b0:	ldr	r0, [pc, #-1316]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   125b4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   125b8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   125bc:	ldr	r1, [pc, #-1560]	; 11fac <blkid_probe_get_size@plt+0xaa94>
   125c0:	mov	r0, sl
   125c4:	add	r1, pc, r1
   125c8:	bl	7314 <strcmp@plt>
   125cc:	subs	r8, r0, #0
   125d0:	bne	12768 <blkid_probe_get_size@plt+0xb250>
   125d4:	cmp	r7, #3
   125d8:	bhi	12d6c <blkid_probe_get_size@plt+0xb854>
   125dc:	str	r8, [sp]
   125e0:	mov	r3, r5
   125e4:	mov	r2, r7
   125e8:	mov	r1, #15
   125ec:	add	r0, sp, #168	; 0xa8
   125f0:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   125f4:	cmp	r0, #0
   125f8:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   125fc:	ldr	r3, [pc, #-1620]	; 11fb0 <blkid_probe_get_size@plt+0xaa98>
   12600:	add	r3, pc, r3
   12604:	ldr	r3, [r3, #4]
   12608:	cmp	r3, #2
   1260c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12610:	ldr	r2, [sp, #32]
   12614:	ldr	r3, [pc, #-1640]	; 11fb4 <blkid_probe_get_size@plt+0xaa9c>
   12618:	ldr	r1, [sp, #24]
   1261c:	ldr	r0, [r2, #-8]
   12620:	ldr	r2, [pc, #-1648]	; 11fb8 <blkid_probe_get_size@plt+0xaaa0>
   12624:	add	r3, pc, r3
   12628:	add	r2, pc, r2
   1262c:	str	r2, [sp, #4]
   12630:	add	r3, r3, #1072	; 0x430
   12634:	ldr	r2, [pc, #-1664]	; 11fbc <blkid_probe_get_size@plt+0xaaa4>
   12638:	add	r3, r3, #12
   1263c:	str	r1, [sp, #8]
   12640:	str	r3, [sp]
   12644:	str	r0, [sp, #16]
   12648:	str	r9, [sp, #12]
   1264c:	mov	r1, r8
   12650:	ldr	r3, [pc, #-1688]	; 11fc0 <blkid_probe_get_size@plt+0xaaa8>
   12654:	add	r2, pc, r2
   12658:	ldr	r0, [pc, #-1484]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   1265c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12660:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12664:	ldr	r5, [pc, #-1704]	; 11fc4 <blkid_probe_get_size@plt+0xaaac>
   12668:	sub	r3, fp, r6
   1266c:	add	r3, r3, #1
   12670:	add	r5, pc, r5
   12674:	ldr	r6, [pc, #-1716]	; 11fc8 <blkid_probe_get_size@plt+0xaab0>
   12678:	ldr	r1, [pc, #-1716]	; 11fcc <blkid_probe_get_size@plt+0xaab4>
   1267c:	str	r3, [sp, #16]
   12680:	add	r5, r5, #1072	; 0x430
   12684:	ldr	r3, [sp, #24]
   12688:	add	r1, pc, r1
   1268c:	add	r6, pc, r6
   12690:	add	r5, r5, #12
   12694:	str	r3, [sp, #8]
   12698:	str	r1, [sp, #4]
   1269c:	ldr	r3, [pc, #-1748]	; 11fd0 <blkid_probe_get_size@plt+0xaab8>
   126a0:	str	r4, [sp, #20]
   126a4:	str	r9, [sp, #12]
   126a8:	str	r5, [sp]
   126ac:	mov	r2, r6
   126b0:	mov	r1, #0
   126b4:	ldr	r0, [pc, #-1576]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   126b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   126bc:	ldrb	r3, [fp]
   126c0:	cmp	r3, #35	; 0x23
   126c4:	bne	12550 <blkid_probe_get_size@plt+0xb038>
   126c8:	ldr	r3, [r8, #4]
   126cc:	cmp	r3, #2
   126d0:	ble	12550 <blkid_probe_get_size@plt+0xb038>
   126d4:	ldr	r3, [pc, #-1800]	; 11fd4 <blkid_probe_get_size@plt+0xaabc>
   126d8:	ldr	r2, [sp, #24]
   126dc:	add	r3, pc, r3
   126e0:	str	r2, [sp, #8]
   126e4:	str	r3, [sp, #4]
   126e8:	str	r9, [sp, #12]
   126ec:	str	r5, [sp]
   126f0:	mov	r2, r6
   126f4:	ldr	r3, [pc, #-1828]	; 11fd8 <blkid_probe_get_size@plt+0xaac0>
   126f8:	mov	r1, #0
   126fc:	ldr	r0, [pc, #-1648]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12700:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12704:	b	12550 <blkid_probe_get_size@plt+0xb038>
   12708:	ldr	r2, [pc, #-1844]	; 11fdc <blkid_probe_get_size@plt+0xaac4>
   1270c:	add	r2, pc, r2
   12710:	ldr	r2, [r2, #4]
   12714:	cmp	r2, #2
   12718:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1271c:	ldr	r2, [pc, #-1860]	; 11fe0 <blkid_probe_get_size@plt+0xaac8>
   12720:	ldr	r0, [pc, #-1860]	; 11fe4 <blkid_probe_get_size@plt+0xaacc>
   12724:	add	r2, pc, r2
   12728:	add	r2, r2, #1072	; 0x430
   1272c:	add	r2, r2, #12
   12730:	ldr	r3, [sp, #24]
   12734:	str	r2, [sp]
   12738:	ldr	r2, [pc, #-1880]	; 11fe8 <blkid_probe_get_size@plt+0xaad0>
   1273c:	add	r0, pc, r0
   12740:	str	r3, [sp, #8]
   12744:	str	r0, [sp, #4]
   12748:	str	sl, [sp, #16]
   1274c:	str	r9, [sp, #12]
   12750:	ldr	r1, [sp, #52]	; 0x34
   12754:	ldr	r3, [pc, #-1904]	; 11fec <blkid_probe_get_size@plt+0xaad4>
   12758:	add	r2, pc, r2
   1275c:	ldr	r0, [pc, #-1744]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12760:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12764:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12768:	ldr	r1, [pc, #-1920]	; 11ff0 <blkid_probe_get_size@plt+0xaad8>
   1276c:	mov	r0, sl
   12770:	add	r1, pc, r1
   12774:	bl	7314 <strcmp@plt>
   12778:	subs	r8, r0, #0
   1277c:	bne	12810 <blkid_probe_get_size@plt+0xb2f8>
   12780:	cmp	r7, #3
   12784:	bhi	128b8 <blkid_probe_get_size@plt+0xb3a0>
   12788:	str	r8, [sp]
   1278c:	mov	r3, r5
   12790:	mov	r2, r7
   12794:	mov	r1, #16
   12798:	add	r0, sp, #168	; 0xa8
   1279c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   127a0:	cmp	r0, #0
   127a4:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   127a8:	ldr	r3, [pc, #-1980]	; 11ff4 <blkid_probe_get_size@plt+0xaadc>
   127ac:	add	r3, pc, r3
   127b0:	ldr	r3, [r3, #4]
   127b4:	cmp	r3, #2
   127b8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   127bc:	ldr	r2, [sp, #32]
   127c0:	ldr	r3, [pc, #-2000]	; 11ff8 <blkid_probe_get_size@plt+0xaae0>
   127c4:	ldr	r1, [sp, #24]
   127c8:	ldr	r0, [r2, #-8]
   127cc:	ldr	r2, [pc, #-2008]	; 11ffc <blkid_probe_get_size@plt+0xaae4>
   127d0:	add	r3, pc, r3
   127d4:	add	r2, pc, r2
   127d8:	str	r2, [sp, #4]
   127dc:	add	r3, r3, #1072	; 0x430
   127e0:	ldr	r2, [pc, #-2024]	; 12000 <blkid_probe_get_size@plt+0xaae8>
   127e4:	add	r3, r3, #12
   127e8:	str	r1, [sp, #8]
   127ec:	str	r3, [sp]
   127f0:	str	r0, [sp, #16]
   127f4:	str	r9, [sp, #12]
   127f8:	mov	r1, r8
   127fc:	ldr	r3, [pc, #-2048]	; 12004 <blkid_probe_get_size@plt+0xaaec>
   12800:	add	r2, pc, r2
   12804:	ldr	r0, [pc, #-1912]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12808:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1280c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12810:	ldr	r1, [pc, #-2064]	; 12008 <blkid_probe_get_size@plt+0xaaf0>
   12814:	mov	r0, sl
   12818:	add	r1, pc, r1
   1281c:	bl	7314 <strcmp@plt>
   12820:	subs	r8, r0, #0
   12824:	bne	12978 <blkid_probe_get_size@plt+0xb460>
   12828:	cmp	r7, #3
   1282c:	bhi	12918 <blkid_probe_get_size@plt+0xb400>
   12830:	str	r8, [sp]
   12834:	mov	r3, r5
   12838:	mov	r2, r7
   1283c:	mov	r1, #17
   12840:	add	r0, sp, #168	; 0xa8
   12844:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   12848:	cmp	r0, #0
   1284c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   12850:	ldr	r3, [pc, #-2124]	; 1200c <blkid_probe_get_size@plt+0xaaf4>
   12854:	add	r3, pc, r3
   12858:	ldr	r3, [r3, #4]
   1285c:	cmp	r3, #2
   12860:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12864:	ldr	r2, [sp, #32]
   12868:	ldr	r3, [pc, #-2144]	; 12010 <blkid_probe_get_size@plt+0xaaf8>
   1286c:	ldr	r1, [sp, #24]
   12870:	ldr	r0, [r2, #-8]
   12874:	ldr	r2, [pc, #-2152]	; 12014 <blkid_probe_get_size@plt+0xaafc>
   12878:	add	r3, pc, r3
   1287c:	add	r2, pc, r2
   12880:	str	r2, [sp, #4]
   12884:	add	r3, r3, #1072	; 0x430
   12888:	ldr	r2, [pc, #-2168]	; 12018 <blkid_probe_get_size@plt+0xab00>
   1288c:	add	r3, r3, #12
   12890:	str	r1, [sp, #8]
   12894:	str	r3, [sp]
   12898:	str	r0, [sp, #16]
   1289c:	str	r9, [sp, #12]
   128a0:	mov	r1, r8
   128a4:	ldr	r3, [pc, #-2192]	; 1201c <blkid_probe_get_size@plt+0xab04>
   128a8:	add	r2, pc, r2
   128ac:	ldr	r0, [pc, #-2080]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   128b0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   128b4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   128b8:	ldr	r2, [pc, #-2208]	; 12020 <blkid_probe_get_size@plt+0xab08>
   128bc:	add	r2, pc, r2
   128c0:	ldr	r2, [r2, #4]
   128c4:	cmp	r2, #2
   128c8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   128cc:	ldr	r2, [pc, #-2224]	; 12024 <blkid_probe_get_size@plt+0xab0c>
   128d0:	ldr	r0, [pc, #-2224]	; 12028 <blkid_probe_get_size@plt+0xab10>
   128d4:	add	r2, pc, r2
   128d8:	add	r2, r2, #1072	; 0x430
   128dc:	add	r2, r2, #12
   128e0:	ldr	r3, [sp, #24]
   128e4:	str	r2, [sp]
   128e8:	ldr	r2, [pc, #-2244]	; 1202c <blkid_probe_get_size@plt+0xab14>
   128ec:	add	r0, pc, r0
   128f0:	str	r3, [sp, #8]
   128f4:	str	r0, [sp, #4]
   128f8:	str	sl, [sp, #16]
   128fc:	str	r9, [sp, #12]
   12900:	mov	r1, r8
   12904:	ldr	r3, [pc, #-2268]	; 12030 <blkid_probe_get_size@plt+0xab18>
   12908:	add	r2, pc, r2
   1290c:	ldr	r0, [pc, #-2176]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12910:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12914:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12918:	ldr	r2, [pc, #-2284]	; 12034 <blkid_probe_get_size@plt+0xab1c>
   1291c:	add	r2, pc, r2
   12920:	ldr	r2, [r2, #4]
   12924:	cmp	r2, #2
   12928:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1292c:	ldr	r2, [pc, #-2300]	; 12038 <blkid_probe_get_size@plt+0xab20>
   12930:	ldr	r0, [pc, #-2300]	; 1203c <blkid_probe_get_size@plt+0xab24>
   12934:	add	r2, pc, r2
   12938:	add	r2, r2, #1072	; 0x430
   1293c:	add	r2, r2, #12
   12940:	ldr	r3, [sp, #24]
   12944:	str	r2, [sp]
   12948:	ldr	r2, [pc, #-2320]	; 12040 <blkid_probe_get_size@plt+0xab28>
   1294c:	add	r0, pc, r0
   12950:	str	r3, [sp, #8]
   12954:	str	r0, [sp, #4]
   12958:	str	sl, [sp, #16]
   1295c:	str	r9, [sp, #12]
   12960:	mov	r1, r8
   12964:	ldr	r3, [pc, #-2344]	; 12044 <blkid_probe_get_size@plt+0xab2c>
   12968:	add	r2, pc, r2
   1296c:	ldr	r0, [pc, #-2272]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12970:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12974:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12978:	ldr	r1, [pc, #-2360]	; 12048 <blkid_probe_get_size@plt+0xab30>
   1297c:	mov	r2, #6
   12980:	add	r1, pc, r1
   12984:	mov	r0, sl
   12988:	bl	6a5c <strncmp@plt>
   1298c:	cmp	r0, #0
   12990:	bne	12cc0 <blkid_probe_get_size@plt+0xb7a8>
   12994:	cmn	sl, #6
   12998:	beq	12cc0 <blkid_probe_get_size@plt+0xb7a8>
   1299c:	cmp	r7, #3
   129a0:	bhi	12c58 <blkid_probe_get_size@plt+0xb740>
   129a4:	add	r0, sl, #5
   129a8:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   129ac:	subs	r4, r0, #0
   129b0:	beq	12bf0 <blkid_probe_get_size@plt+0xb6d8>
   129b4:	ldr	r1, [pc, #-2416]	; 1204c <blkid_probe_get_size@plt+0xab34>
   129b8:	mov	r2, #7
   129bc:	add	r1, pc, r1
   129c0:	bl	6a5c <strncmp@plt>
   129c4:	cmp	r0, #0
   129c8:	bne	12b7c <blkid_probe_get_size@plt+0xb664>
   129cc:	cmn	r4, #7
   129d0:	beq	12b7c <blkid_probe_get_size@plt+0xb664>
   129d4:	ldr	r3, [pc, #-2444]	; 12050 <blkid_probe_get_size@plt+0xab38>
   129d8:	add	r3, pc, r3
   129dc:	ldr	r3, [r3, #4]
   129e0:	cmp	r3, #3
   129e4:	bgt	12b38 <blkid_probe_get_size@plt+0xb620>
   129e8:	str	r4, [sp]
   129ec:	mov	r3, r5
   129f0:	mov	r2, r7
   129f4:	mov	r1, #18
   129f8:	add	r0, sp, #168	; 0xa8
   129fc:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   12a00:	cmp	r0, #0
   12a04:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   12a08:	ldr	r3, [pc, #-2492]	; 12054 <blkid_probe_get_size@plt+0xab3c>
   12a0c:	add	r3, pc, r3
   12a10:	ldr	r3, [r3, #4]
   12a14:	cmp	r3, #2
   12a18:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12a1c:	ldr	r2, [sp, #32]
   12a20:	ldr	r3, [pc, #-2512]	; 12058 <blkid_probe_get_size@plt+0xab40>
   12a24:	ldr	r0, [sp, #24]
   12a28:	ldr	r1, [r2, #-8]
   12a2c:	ldr	r2, [pc, #-2520]	; 1205c <blkid_probe_get_size@plt+0xab44>
   12a30:	add	r3, pc, r3
   12a34:	add	r2, pc, r2
   12a38:	str	r2, [sp, #4]
   12a3c:	add	r3, r3, #1072	; 0x430
   12a40:	ldr	r2, [pc, #-2536]	; 12060 <blkid_probe_get_size@plt+0xab48>
   12a44:	add	r3, r3, #12
   12a48:	str	r0, [sp, #8]
   12a4c:	str	r3, [sp]
   12a50:	str	r1, [sp, #16]
   12a54:	str	r9, [sp, #12]
   12a58:	ldr	r3, [pc, #-2556]	; 12064 <blkid_probe_get_size@plt+0xab4c>
   12a5c:	add	r2, pc, r2
   12a60:	mov	r1, #0
   12a64:	ldr	r0, [pc, #-2520]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12a68:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12a6c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12a70:	ldr	r3, [pc, #-2576]	; 12068 <blkid_probe_get_size@plt+0xab50>
   12a74:	add	r3, pc, r3
   12a78:	ldr	r3, [r3, #4]
   12a7c:	cmp	r3, #2
   12a80:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12a84:	ldr	r3, [pc, #-2592]	; 1206c <blkid_probe_get_size@plt+0xab54>
   12a88:	ldr	r2, [pc, #-2592]	; 12070 <blkid_probe_get_size@plt+0xab58>
   12a8c:	add	r3, pc, r3
   12a90:	add	r2, pc, r2
   12a94:	ldr	r1, [pc, #-2600]	; 12074 <blkid_probe_get_size@plt+0xab5c>
   12a98:	ldr	r0, [sp, #24]
   12a9c:	str	r2, [sp, #4]
   12aa0:	add	r3, r3, #1072	; 0x430
   12aa4:	ldr	r2, [pc, #-2612]	; 12078 <blkid_probe_get_size@plt+0xab60>
   12aa8:	add	r1, pc, r1
   12aac:	add	r3, r3, #12
   12ab0:	str	r0, [sp, #8]
   12ab4:	str	r3, [sp]
   12ab8:	str	r1, [sp, #16]
   12abc:	str	r9, [sp, #12]
   12ac0:	ldr	r3, [pc, #-2636]	; 1207c <blkid_probe_get_size@plt+0xab64>
   12ac4:	add	r2, pc, r2
   12ac8:	mov	r1, #0
   12acc:	ldr	r0, [pc, #-2624]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12ad0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12ad4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12ad8:	ldr	r2, [pc, #-2656]	; 12080 <blkid_probe_get_size@plt+0xab68>
   12adc:	add	r2, pc, r2
   12ae0:	ldr	r2, [r2, #4]
   12ae4:	cmp	r2, #2
   12ae8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12aec:	ldr	r2, [pc, #-2672]	; 12084 <blkid_probe_get_size@plt+0xab6c>
   12af0:	ldr	r0, [pc, #-2672]	; 12088 <blkid_probe_get_size@plt+0xab70>
   12af4:	add	r2, pc, r2
   12af8:	add	r2, r2, #1072	; 0x430
   12afc:	add	r2, r2, #12
   12b00:	ldr	r3, [sp, #24]
   12b04:	str	r2, [sp]
   12b08:	ldr	r2, [pc, #-2692]	; 1208c <blkid_probe_get_size@plt+0xab74>
   12b0c:	add	r0, pc, r0
   12b10:	str	r3, [sp, #8]
   12b14:	str	r0, [sp, #4]
   12b18:	str	sl, [sp, #16]
   12b1c:	str	r9, [sp, #12]
   12b20:	mov	r1, r8
   12b24:	ldr	r3, [pc, #-2716]	; 12090 <blkid_probe_get_size@plt+0xab78>
   12b28:	add	r2, pc, r2
   12b2c:	ldr	r0, [pc, #-2720]	; 12094 <blkid_probe_get_size@plt+0xab7c>
   12b30:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12b34:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12b38:	ldr	r3, [pc, #-2728]	; 12098 <blkid_probe_get_size@plt+0xab80>
   12b3c:	ldr	r2, [pc, #-2728]	; 1209c <blkid_probe_get_size@plt+0xab84>
   12b40:	add	r3, pc, r3
   12b44:	add	r2, pc, r2
   12b48:	ldr	r1, [sp, #24]
   12b4c:	add	r3, r3, #1072	; 0x430
   12b50:	str	r2, [sp, #4]
   12b54:	ldr	r2, [pc, #-2748]	; 120a0 <blkid_probe_get_size@plt+0xab88>
   12b58:	add	r3, r3, #12
   12b5c:	str	r1, [sp, #8]
   12b60:	str	r3, [sp]
   12b64:	str	r9, [sp, #12]
   12b68:	ldr	r3, [pc, #-2764]	; 120a4 <blkid_probe_get_size@plt+0xab8c>
   12b6c:	add	r2, pc, r2
   12b70:	mov	r1, #0
   12b74:	ldr	r0, [pc, #-2748]	; 120c0 <blkid_probe_get_size@plt+0xaba8>
   12b78:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12b7c:	ldr	r1, [pc, #-2780]	; 120a8 <blkid_probe_get_size@plt+0xab90>
   12b80:	mov	r0, r4
   12b84:	add	r1, pc, r1
   12b88:	bl	7050 <strstr@plt>
   12b8c:	cmp	r0, #0
   12b90:	beq	129e8 <blkid_probe_get_size@plt+0xb4d0>
   12b94:	ldr	r3, [pc, #-2800]	; 120ac <blkid_probe_get_size@plt+0xab94>
   12b98:	add	r3, pc, r3
   12b9c:	ldr	r3, [r3, #4]
   12ba0:	cmp	r3, #3
   12ba4:	ble	129e8 <blkid_probe_get_size@plt+0xb4d0>
   12ba8:	ldr	r3, [pc, #-2816]	; 120b0 <blkid_probe_get_size@plt+0xab98>
   12bac:	ldr	r2, [pc, #-2816]	; 120b4 <blkid_probe_get_size@plt+0xab9c>
   12bb0:	add	r3, pc, r3
   12bb4:	add	r2, pc, r2
   12bb8:	ldr	r1, [sp, #24]
   12bbc:	str	r2, [sp, #4]
   12bc0:	add	r3, r3, #1072	; 0x430
   12bc4:	ldr	r2, [pc, #-2836]	; 120b8 <blkid_probe_get_size@plt+0xaba0>
   12bc8:	add	r3, r3, #12
   12bcc:	str	r1, [sp, #8]
   12bd0:	str	r3, [sp]
   12bd4:	str	r9, [sp, #12]
   12bd8:	ldr	r3, [pc, #-2852]	; 120bc <blkid_probe_get_size@plt+0xaba4>
   12bdc:	add	r2, pc, r2
   12be0:	mov	r1, #0
   12be4:	ldr	r0, [pc, #-2860]	; 120c0 <blkid_probe_get_size@plt+0xaba8>
   12be8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12bec:	b	129e8 <blkid_probe_get_size@plt+0xb4d0>
   12bf0:	ldr	r3, [pc, #-2868]	; 120c4 <blkid_probe_get_size@plt+0xabac>
   12bf4:	add	r3, pc, r3
   12bf8:	ldr	r3, [r3, #4]
   12bfc:	cmp	r3, #2
   12c00:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12c04:	ldr	r3, [pc, #-2884]	; 120c8 <blkid_probe_get_size@plt+0xabb0>
   12c08:	ldr	r2, [pc, #-2884]	; 120cc <blkid_probe_get_size@plt+0xabb4>
   12c0c:	add	r3, pc, r3
   12c10:	add	r2, pc, r2
   12c14:	ldr	r0, [pc, #-2892]	; 120d0 <blkid_probe_get_size@plt+0xabb8>
   12c18:	ldr	r1, [sp, #24]
   12c1c:	str	r2, [sp, #4]
   12c20:	add	r3, r3, #1072	; 0x430
   12c24:	ldr	r2, [pc, #-2904]	; 120d4 <blkid_probe_get_size@plt+0xabbc>
   12c28:	add	r0, pc, r0
   12c2c:	add	r3, r3, #12
   12c30:	str	r1, [sp, #8]
   12c34:	str	r3, [sp]
   12c38:	str	r0, [sp, #16]
   12c3c:	str	r9, [sp, #12]
   12c40:	mov	r1, r4
   12c44:	ldr	r3, [pc, #-2932]	; 120d8 <blkid_probe_get_size@plt+0xabc0>
   12c48:	add	r2, pc, r2
   12c4c:	ldr	r0, [pc, #-2704]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12c50:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12c54:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12c58:	ldr	r3, [pc, #-2948]	; 120dc <blkid_probe_get_size@plt+0xabc4>
   12c5c:	mov	r1, r0
   12c60:	add	r3, pc, r3
   12c64:	ldr	r3, [r3, #4]
   12c68:	cmp	r3, #2
   12c6c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12c70:	ldr	r3, [pc, #-2968]	; 120e0 <blkid_probe_get_size@plt+0xabc8>
   12c74:	ldr	r2, [pc, #-2968]	; 120e4 <blkid_probe_get_size@plt+0xabcc>
   12c78:	add	r3, pc, r3
   12c7c:	add	r2, pc, r2
   12c80:	ldr	r0, [pc, #-2976]	; 120e8 <blkid_probe_get_size@plt+0xabd0>
   12c84:	ldr	ip, [sp, #24]
   12c88:	str	r2, [sp, #4]
   12c8c:	add	r3, r3, #1072	; 0x430
   12c90:	ldr	r2, [pc, #-2988]	; 120ec <blkid_probe_get_size@plt+0xabd4>
   12c94:	add	r0, pc, r0
   12c98:	add	r3, r3, #12
   12c9c:	str	r3, [sp]
   12ca0:	str	r0, [sp, #16]
   12ca4:	str	r9, [sp, #12]
   12ca8:	str	ip, [sp, #8]
   12cac:	ldr	r3, [pc, #-3012]	; 120f0 <blkid_probe_get_size@plt+0xabd8>
   12cb0:	add	r2, pc, r2
   12cb4:	ldr	r0, [pc, #-2808]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12cb8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12cbc:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12cc0:	ldr	r1, [pc, #-3028]	; 120f4 <blkid_probe_get_size@plt+0xabdc>
   12cc4:	mov	r0, sl
   12cc8:	add	r1, pc, r1
   12ccc:	bl	7314 <strcmp@plt>
   12cd0:	subs	r8, r0, #0
   12cd4:	bne	13054 <blkid_probe_get_size@plt+0xbb3c>
   12cd8:	cmp	r7, #3
   12cdc:	bhi	12ff4 <blkid_probe_get_size@plt+0xbadc>
   12ce0:	str	r8, [sp]
   12ce4:	mov	r3, r5
   12ce8:	mov	r2, r7
   12cec:	mov	r1, #19
   12cf0:	add	r0, sp, #168	; 0xa8
   12cf4:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   12cf8:	cmp	r0, #0
   12cfc:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   12d00:	ldr	r3, [pc, #-3088]	; 120f8 <blkid_probe_get_size@plt+0xabe0>
   12d04:	add	r3, pc, r3
   12d08:	ldr	r3, [r3, #4]
   12d0c:	cmp	r3, #2
   12d10:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12d14:	ldr	r2, [sp, #32]
   12d18:	ldr	r3, [pc, #-3108]	; 120fc <blkid_probe_get_size@plt+0xabe4>
   12d1c:	ldr	r1, [sp, #24]
   12d20:	ldr	r0, [r2, #-8]
   12d24:	ldr	r2, [pc, #-3116]	; 12100 <blkid_probe_get_size@plt+0xabe8>
   12d28:	add	r3, pc, r3
   12d2c:	add	r2, pc, r2
   12d30:	str	r2, [sp, #4]
   12d34:	add	r3, r3, #1072	; 0x430
   12d38:	ldr	r2, [pc, #-3132]	; 12104 <blkid_probe_get_size@plt+0xabec>
   12d3c:	add	r3, r3, #12
   12d40:	str	r1, [sp, #8]
   12d44:	str	r3, [sp]
   12d48:	str	r0, [sp, #16]
   12d4c:	str	r9, [sp, #12]
   12d50:	mov	r1, r8
   12d54:	ldr	r3, [pc, #-3156]	; 12108 <blkid_probe_get_size@plt+0xabf0>
   12d58:	add	r2, pc, r2
   12d5c:	ldr	r0, [pc, #-2976]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12d60:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12d64:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12d68:	bl	6fb4 <__stack_chk_fail@plt>
   12d6c:	ldr	r2, [pc, #-3176]	; 1210c <blkid_probe_get_size@plt+0xabf4>
   12d70:	add	r2, pc, r2
   12d74:	ldr	r2, [r2, #4]
   12d78:	cmp	r2, #2
   12d7c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12d80:	ldr	r2, [pc, #-3192]	; 12110 <blkid_probe_get_size@plt+0xabf8>
   12d84:	ldr	r0, [pc, #-3192]	; 12114 <blkid_probe_get_size@plt+0xabfc>
   12d88:	add	r2, pc, r2
   12d8c:	add	r2, r2, #1072	; 0x430
   12d90:	add	r2, r2, #12
   12d94:	ldr	r3, [sp, #24]
   12d98:	str	r2, [sp]
   12d9c:	ldr	r2, [pc, #-3212]	; 12118 <blkid_probe_get_size@plt+0xac00>
   12da0:	add	r0, pc, r0
   12da4:	str	r3, [sp, #8]
   12da8:	str	r0, [sp, #4]
   12dac:	str	sl, [sp, #16]
   12db0:	str	r9, [sp, #12]
   12db4:	mov	r1, r8
   12db8:	ldr	r3, [pc, #-3236]	; 1211c <blkid_probe_get_size@plt+0xac04>
   12dbc:	add	r2, pc, r2
   12dc0:	ldr	r0, [pc, #-3076]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12dc4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12dc8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12dcc:	ldr	r3, [pc, #-3252]	; 12120 <blkid_probe_get_size@plt+0xac08>
   12dd0:	mov	r1, r0
   12dd4:	add	r3, pc, r3
   12dd8:	ldr	r3, [r3, #4]
   12ddc:	cmp	r3, #2
   12de0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12de4:	ldr	r3, [pc, #-3272]	; 12124 <blkid_probe_get_size@plt+0xac0c>
   12de8:	ldr	r2, [pc, #-3272]	; 12128 <blkid_probe_get_size@plt+0xac10>
   12dec:	add	r3, pc, r3
   12df0:	add	r2, pc, r2
   12df4:	ldr	ip, [pc, #-3280]	; 1212c <blkid_probe_get_size@plt+0xac14>
   12df8:	ldr	r0, [sp, #24]
   12dfc:	str	r2, [sp, #4]
   12e00:	add	r3, r3, #1072	; 0x430
   12e04:	ldr	r2, [pc, #-3292]	; 12130 <blkid_probe_get_size@plt+0xac18>
   12e08:	add	ip, pc, ip
   12e0c:	add	r3, r3, #12
   12e10:	str	r0, [sp, #8]
   12e14:	str	r3, [sp]
   12e18:	str	r9, [sp, #12]
   12e1c:	str	ip, [sp, #16]
   12e20:	ldr	r3, [pc, #-3316]	; 12134 <blkid_probe_get_size@plt+0xac1c>
   12e24:	add	r2, pc, r2
   12e28:	ldr	r0, [pc, #-3180]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12e2c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12e30:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12e34:	ldr	r3, [pc, #-3332]	; 12138 <blkid_probe_get_size@plt+0xac20>
   12e38:	add	r3, pc, r3
   12e3c:	ldr	r3, [r3, #4]
   12e40:	cmp	r3, #2
   12e44:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12e48:	ldr	r3, [pc, #-3348]	; 1213c <blkid_probe_get_size@plt+0xac24>
   12e4c:	ldr	r2, [pc, #-3348]	; 12140 <blkid_probe_get_size@plt+0xac28>
   12e50:	add	r3, pc, r3
   12e54:	add	r2, pc, r2
   12e58:	ldr	r0, [pc, #-3356]	; 12144 <blkid_probe_get_size@plt+0xac2c>
   12e5c:	ldr	r1, [sp, #24]
   12e60:	str	r2, [sp, #4]
   12e64:	add	r3, r3, #1072	; 0x430
   12e68:	ldr	r2, [pc, #-3368]	; 12148 <blkid_probe_get_size@plt+0xac30>
   12e6c:	add	r0, pc, r0
   12e70:	add	r3, r3, #12
   12e74:	str	r1, [sp, #8]
   12e78:	str	r3, [sp]
   12e7c:	str	r0, [sp, #16]
   12e80:	str	r9, [sp, #12]
   12e84:	mov	r1, r8
   12e88:	ldr	r3, [pc, #-3396]	; 1214c <blkid_probe_get_size@plt+0xac34>
   12e8c:	add	r2, pc, r2
   12e90:	ldr	r0, [pc, #-3284]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12e94:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12e98:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12e9c:	ldr	r3, [pc, #-3412]	; 12150 <blkid_probe_get_size@plt+0xac38>
   12ea0:	mov	r1, r0
   12ea4:	add	r3, pc, r3
   12ea8:	ldr	r3, [r3, #4]
   12eac:	cmp	r3, #2
   12eb0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12eb4:	ldr	r3, [pc, #-3432]	; 12154 <blkid_probe_get_size@plt+0xac3c>
   12eb8:	ldr	r2, [pc, #-3432]	; 12158 <blkid_probe_get_size@plt+0xac40>
   12ebc:	add	r3, pc, r3
   12ec0:	add	r2, pc, r2
   12ec4:	ldr	ip, [pc, #-3440]	; 1215c <blkid_probe_get_size@plt+0xac44>
   12ec8:	ldr	r0, [sp, #24]
   12ecc:	str	r2, [sp, #4]
   12ed0:	add	r3, r3, #1072	; 0x430
   12ed4:	ldr	r2, [pc, #-3452]	; 12160 <blkid_probe_get_size@plt+0xac48>
   12ed8:	add	ip, pc, ip
   12edc:	add	r3, r3, #12
   12ee0:	str	r0, [sp, #8]
   12ee4:	str	r3, [sp]
   12ee8:	str	r9, [sp, #12]
   12eec:	str	ip, [sp, #16]
   12ef0:	ldr	r3, [pc, #-3476]	; 12164 <blkid_probe_get_size@plt+0xac4c>
   12ef4:	add	r2, pc, r2
   12ef8:	ldr	r0, [pc, #-3388]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12efc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12f00:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12f04:	cmp	r3, #58	; 0x3a
   12f08:	bne	11294 <blkid_probe_get_size@plt+0x9d7c>
   12f0c:	ldrb	r3, [r4, #1]
   12f10:	cmp	r3, #61	; 0x3d
   12f14:	bne	11294 <blkid_probe_get_size@plt+0x9d7c>
   12f18:	add	r4, r4, #2
   12f1c:	mov	r7, #7
   12f20:	b	11368 <blkid_probe_get_size@plt+0x9e50>
   12f24:	ldr	r3, [pc, #-3524]	; 12168 <blkid_probe_get_size@plt+0xac50>
   12f28:	add	r3, pc, r3
   12f2c:	ldr	r3, [r3, #4]
   12f30:	cmp	r3, #2
   12f34:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12f38:	ldr	r3, [pc, #-3540]	; 1216c <blkid_probe_get_size@plt+0xac54>
   12f3c:	ldr	r2, [pc, #-3540]	; 12170 <blkid_probe_get_size@plt+0xac58>
   12f40:	add	r3, pc, r3
   12f44:	add	r2, pc, r2
   12f48:	ldr	r0, [pc, #-3548]	; 12174 <blkid_probe_get_size@plt+0xac5c>
   12f4c:	ldr	r1, [sp, #24]
   12f50:	str	r2, [sp, #4]
   12f54:	add	r3, r3, #1072	; 0x430
   12f58:	ldr	r2, [pc, #-3560]	; 12178 <blkid_probe_get_size@plt+0xac60>
   12f5c:	add	r0, pc, r0
   12f60:	add	r3, r3, #12
   12f64:	str	r1, [sp, #8]
   12f68:	str	r3, [sp]
   12f6c:	str	r0, [sp, #16]
   12f70:	str	r9, [sp, #12]
   12f74:	mov	r1, r8
   12f78:	ldr	r3, [pc, #-3588]	; 1217c <blkid_probe_get_size@plt+0xac64>
   12f7c:	add	r2, pc, r2
   12f80:	ldr	r0, [pc, #-3524]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12f84:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12f88:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12f8c:	ldr	r3, [pc, #-3604]	; 12180 <blkid_probe_get_size@plt+0xac68>
   12f90:	mov	r1, r0
   12f94:	add	r3, pc, r3
   12f98:	ldr	r3, [r3, #4]
   12f9c:	cmp	r3, #2
   12fa0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   12fa4:	ldr	r3, [pc, #-3624]	; 12184 <blkid_probe_get_size@plt+0xac6c>
   12fa8:	ldr	r2, [pc, #-3624]	; 12188 <blkid_probe_get_size@plt+0xac70>
   12fac:	add	r3, pc, r3
   12fb0:	add	r2, pc, r2
   12fb4:	ldr	r0, [pc, #-3632]	; 1218c <blkid_probe_get_size@plt+0xac74>
   12fb8:	ldr	ip, [sp, #24]
   12fbc:	str	r2, [sp, #4]
   12fc0:	add	r3, r3, #1072	; 0x430
   12fc4:	ldr	r2, [pc, #-3644]	; 12190 <blkid_probe_get_size@plt+0xac78>
   12fc8:	add	r0, pc, r0
   12fcc:	add	r3, r3, #12
   12fd0:	str	r3, [sp]
   12fd4:	str	r0, [sp, #16]
   12fd8:	str	r9, [sp, #12]
   12fdc:	str	ip, [sp, #8]
   12fe0:	ldr	r3, [pc, #-3668]	; 12194 <blkid_probe_get_size@plt+0xac7c>
   12fe4:	add	r2, pc, r2
   12fe8:	ldr	r0, [pc, #-3628]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   12fec:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   12ff0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   12ff4:	ldr	r2, [pc, #-3684]	; 12198 <blkid_probe_get_size@plt+0xac80>
   12ff8:	add	r2, pc, r2
   12ffc:	ldr	r2, [r2, #4]
   13000:	cmp	r2, #2
   13004:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13008:	ldr	r2, [pc, #-3700]	; 1219c <blkid_probe_get_size@plt+0xac84>
   1300c:	ldr	r0, [pc, #-3700]	; 121a0 <blkid_probe_get_size@plt+0xac88>
   13010:	add	r2, pc, r2
   13014:	add	r2, r2, #1072	; 0x430
   13018:	add	r2, r2, #12
   1301c:	ldr	r3, [sp, #24]
   13020:	str	r2, [sp]
   13024:	ldr	r2, [pc, #-3720]	; 121a4 <blkid_probe_get_size@plt+0xac8c>
   13028:	add	r0, pc, r0
   1302c:	str	r3, [sp, #8]
   13030:	str	r0, [sp, #4]
   13034:	str	sl, [sp, #16]
   13038:	str	r9, [sp, #12]
   1303c:	mov	r1, r8
   13040:	mov	r3, #1184	; 0x4a0
   13044:	add	r2, pc, r2
   13048:	ldr	r0, [pc, #-3724]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   1304c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13050:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13054:	ldr	r1, [pc, #-3764]	; 121a8 <blkid_probe_get_size@plt+0xac90>
   13058:	mov	r0, sl
   1305c:	add	r1, pc, r1
   13060:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   13064:	subs	r3, r0, #0
   13068:	str	r3, [sp, #52]	; 0x34
   1306c:	beq	1315c <blkid_probe_get_size@plt+0xbc44>
   13070:	add	r0, sl, #3
   13074:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   13078:	subs	r4, r0, #0
   1307c:	beq	132cc <blkid_probe_get_size@plt+0xbdb4>
   13080:	cmp	r7, #5
   13084:	beq	13264 <blkid_probe_get_size@plt+0xbd4c>
   13088:	cmp	r7, #2
   1308c:	bls	13334 <blkid_probe_get_size@plt+0xbe1c>
   13090:	ldr	ip, [pc, #-3820]	; 121ac <blkid_probe_get_size@plt+0xac94>
   13094:	ldr	r3, [sp, #32]
   13098:	add	ip, pc, ip
   1309c:	add	ip, ip, #16
   130a0:	sub	lr, r3, #840	; 0x348
   130a4:	ldm	ip!, {r0, r1, r2, r3}
   130a8:	add	r8, sp, #192	; 0xc0
   130ac:	stmia	lr!, {r0, r1, r2, r3}
   130b0:	ldm	ip!, {r0, r1, r2, r3}
   130b4:	stmia	lr!, {r0, r1, r2, r3}
   130b8:	ldm	ip, {r0, r1, r2, r3}
   130bc:	stm	lr, {r0, r1, r2, r3}
   130c0:	sub	r0, r8, #72	; 0x48
   130c4:	mov	r1, r4
   130c8:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   130cc:	cmp	r0, #0
   130d0:	bne	13204 <blkid_probe_get_size@plt+0xbcec>
   130d4:	str	r4, [sp]
   130d8:	mov	r3, r5
   130dc:	mov	r2, r7
   130e0:	sub	r0, r8, #24
   130e4:	mov	r1, #45	; 0x2d
   130e8:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   130ec:	cmp	r0, #0
   130f0:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   130f4:	ldr	r3, [pc, #-3916]	; 121b0 <blkid_probe_get_size@plt+0xac98>
   130f8:	add	r3, pc, r3
   130fc:	ldr	r3, [r3, #4]
   13100:	cmp	r3, #2
   13104:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13108:	ldr	r2, [sp, #32]
   1310c:	ldr	r3, [pc, #-3936]	; 121b4 <blkid_probe_get_size@plt+0xac9c>
   13110:	ldr	r0, [sp, #24]
   13114:	ldr	r1, [r2, #-8]
   13118:	ldr	r2, [pc, #-3944]	; 121b8 <blkid_probe_get_size@plt+0xaca0>
   1311c:	add	r3, pc, r3
   13120:	add	r2, pc, r2
   13124:	str	r2, [sp, #4]
   13128:	add	r3, r3, #1072	; 0x430
   1312c:	ldr	r2, [pc, #-3960]	; 121bc <blkid_probe_get_size@plt+0xaca4>
   13130:	add	r3, r3, #12
   13134:	str	r0, [sp, #8]
   13138:	str	r3, [sp]
   1313c:	str	r1, [sp, #16]
   13140:	str	r9, [sp, #12]
   13144:	ldr	r3, [pc, #-3980]	; 121c0 <blkid_probe_get_size@plt+0xaca8>
   13148:	add	r2, pc, r2
   1314c:	mov	r1, #0
   13150:	ldr	r0, [pc, #-3988]	; 121c4 <blkid_probe_get_size@plt+0xacac>
   13154:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13158:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1315c:	ldr	r1, [pc, #-3996]	; 121c8 <blkid_probe_get_size@plt+0xacb0>
   13160:	mov	r0, sl
   13164:	add	r1, pc, r1
   13168:	bl	7314 <strcmp@plt>
   1316c:	cmp	r0, #0
   13170:	bne	13350 <blkid_probe_get_size@plt+0xbe38>
   13174:	cmp	r7, #2
   13178:	str	r0, [sp]
   1317c:	movls	r1, #8
   13180:	movhi	r1, #42	; 0x2a
   13184:	mov	r3, r5
   13188:	mov	r2, r7
   1318c:	add	r0, sp, #168	; 0xa8
   13190:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13194:	cmp	r0, #0
   13198:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   1319c:	ldr	r3, [pc, #-4056]	; 121cc <blkid_probe_get_size@plt+0xacb4>
   131a0:	add	r3, pc, r3
   131a4:	ldr	r3, [r3, #4]
   131a8:	cmp	r3, #2
   131ac:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   131b0:	ldr	r2, [sp, #32]
   131b4:	ldr	r3, [pc, #-4076]	; 121d0 <blkid_probe_get_size@plt+0xacb8>
   131b8:	ldr	r0, [sp, #24]
   131bc:	ldr	r1, [r2, #-8]
   131c0:	ldr	r2, [pc, #-4084]	; 121d4 <blkid_probe_get_size@plt+0xacbc>
   131c4:	add	r3, pc, r3
   131c8:	add	r2, pc, r2
   131cc:	str	r2, [sp, #4]
   131d0:	add	r3, r3, #1072	; 0x430
   131d4:	ldr	r2, [pc, #4000]	; 1417c <blkid_probe_get_size@plt+0xcc64>
   131d8:	add	r3, r3, #12
   131dc:	str	r0, [sp, #8]
   131e0:	str	r3, [sp]
   131e4:	str	r1, [sp, #16]
   131e8:	str	r9, [sp, #12]
   131ec:	ldr	r3, [pc, #3980]	; 14180 <blkid_probe_get_size@plt+0xcc68>
   131f0:	add	r2, pc, r2
   131f4:	mov	r1, #0
   131f8:	ldr	r0, [pc, #3972]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   131fc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13200:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13204:	ldr	r3, [pc, #3964]	; 14188 <blkid_probe_get_size@plt+0xcc70>
   13208:	add	r3, pc, r3
   1320c:	ldr	r3, [r3, #4]
   13210:	cmp	r3, #2
   13214:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13218:	ldr	r3, [pc, #3948]	; 1418c <blkid_probe_get_size@plt+0xcc74>
   1321c:	ldr	r2, [pc, #3948]	; 14190 <blkid_probe_get_size@plt+0xcc78>
   13220:	add	r3, pc, r3
   13224:	add	r2, pc, r2
   13228:	ldr	r1, [sp, #24]
   1322c:	str	r2, [sp, #4]
   13230:	add	r3, r3, #1072	; 0x430
   13234:	ldr	r2, [pc, #3928]	; 14194 <blkid_probe_get_size@plt+0xcc7c>
   13238:	add	r3, r3, #12
   1323c:	str	r1, [sp, #8]
   13240:	str	r3, [sp]
   13244:	str	r4, [sp, #16]
   13248:	str	r9, [sp, #12]
   1324c:	ldr	r3, [pc, #3908]	; 14198 <blkid_probe_get_size@plt+0xcc80>
   13250:	add	r2, pc, r2
   13254:	mov	r1, #0
   13258:	ldr	r0, [pc, #3876]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   1325c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13260:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13264:	ldr	r3, [pc, #3888]	; 1419c <blkid_probe_get_size@plt+0xcc84>
   13268:	add	r3, pc, r3
   1326c:	ldr	r3, [r3, #4]
   13270:	cmp	r3, #2
   13274:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13278:	ldr	r3, [pc, #3872]	; 141a0 <blkid_probe_get_size@plt+0xcc88>
   1327c:	ldr	r2, [pc, #3872]	; 141a4 <blkid_probe_get_size@plt+0xcc8c>
   13280:	add	r3, pc, r3
   13284:	add	r2, pc, r2
   13288:	ldr	r1, [pc, #3864]	; 141a8 <blkid_probe_get_size@plt+0xcc90>
   1328c:	ldr	r0, [sp, #24]
   13290:	str	r2, [sp, #4]
   13294:	add	r3, r3, #1072	; 0x430
   13298:	ldr	r2, [pc, #3852]	; 141ac <blkid_probe_get_size@plt+0xcc94>
   1329c:	add	r1, pc, r1
   132a0:	add	r3, r3, #12
   132a4:	str	r0, [sp, #8]
   132a8:	str	r3, [sp]
   132ac:	str	r1, [sp, #16]
   132b0:	str	r9, [sp, #12]
   132b4:	ldr	r3, [pc, #3828]	; 141b0 <blkid_probe_get_size@plt+0xcc98>
   132b8:	add	r2, pc, r2
   132bc:	mov	r1, #0
   132c0:	ldr	r0, [pc, #3772]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   132c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   132c8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   132cc:	ldr	r3, [pc, #3808]	; 141b4 <blkid_probe_get_size@plt+0xcc9c>
   132d0:	add	r3, pc, r3
   132d4:	ldr	r3, [r3, #4]
   132d8:	cmp	r3, #2
   132dc:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   132e0:	ldr	r3, [pc, #3792]	; 141b8 <blkid_probe_get_size@plt+0xcca0>
   132e4:	ldr	r2, [pc, #3792]	; 141bc <blkid_probe_get_size@plt+0xcca4>
   132e8:	add	r3, pc, r3
   132ec:	add	r2, pc, r2
   132f0:	ldr	r0, [pc, #3784]	; 141c0 <blkid_probe_get_size@plt+0xcca8>
   132f4:	ldr	r1, [sp, #24]
   132f8:	str	r2, [sp, #4]
   132fc:	add	r3, r3, #1072	; 0x430
   13300:	ldr	r2, [pc, #3772]	; 141c4 <blkid_probe_get_size@plt+0xccac>
   13304:	add	r0, pc, r0
   13308:	add	r3, r3, #12
   1330c:	str	r1, [sp, #8]
   13310:	str	r3, [sp]
   13314:	str	r0, [sp, #16]
   13318:	str	r9, [sp, #12]
   1331c:	mov	r1, r4
   13320:	ldr	r3, [pc, #3744]	; 141c8 <blkid_probe_get_size@plt+0xccb0>
   13324:	add	r2, pc, r2
   13328:	ldr	r0, [pc, #3668]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   1332c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13330:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13334:	str	r4, [sp]
   13338:	mov	r3, r5
   1333c:	mov	r2, r7
   13340:	mov	r1, #7
   13344:	add	r0, sp, #168	; 0xa8
   13348:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   1334c:	b	130ec <blkid_probe_get_size@plt+0xbbd4>
   13350:	ldr	r1, [pc, #3700]	; 141cc <blkid_probe_get_size@plt+0xccb4>
   13354:	mov	r0, sl
   13358:	add	r1, pc, r1
   1335c:	bl	7314 <strcmp@plt>
   13360:	subs	r8, r0, #0
   13364:	bne	133f8 <blkid_probe_get_size@plt+0xbee0>
   13368:	cmp	r7, #5
   1336c:	beq	134a0 <blkid_probe_get_size@plt+0xbf88>
   13370:	str	r8, [sp]
   13374:	mov	r3, r5
   13378:	mov	r2, r7
   1337c:	mov	r1, #22
   13380:	add	r0, sp, #168	; 0xa8
   13384:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13388:	cmp	r0, #0
   1338c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13390:	ldr	r3, [pc, #3640]	; 141d0 <blkid_probe_get_size@plt+0xccb8>
   13394:	add	r3, pc, r3
   13398:	ldr	r3, [r3, #4]
   1339c:	cmp	r3, #2
   133a0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   133a4:	ldr	r2, [sp, #32]
   133a8:	ldr	r3, [pc, #3620]	; 141d4 <blkid_probe_get_size@plt+0xccbc>
   133ac:	ldr	r1, [sp, #24]
   133b0:	ldr	r0, [r2, #-8]
   133b4:	ldr	r2, [pc, #3612]	; 141d8 <blkid_probe_get_size@plt+0xccc0>
   133b8:	add	r3, pc, r3
   133bc:	add	r2, pc, r2
   133c0:	str	r2, [sp, #4]
   133c4:	add	r3, r3, #1072	; 0x430
   133c8:	ldr	r2, [pc, #3596]	; 141dc <blkid_probe_get_size@plt+0xccc4>
   133cc:	add	r3, r3, #12
   133d0:	str	r1, [sp, #8]
   133d4:	str	r3, [sp]
   133d8:	str	r0, [sp, #16]
   133dc:	str	r9, [sp, #12]
   133e0:	mov	r1, r8
   133e4:	mov	r3, #1232	; 0x4d0
   133e8:	add	r2, pc, r2
   133ec:	ldr	r0, [pc, #3472]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   133f0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   133f4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   133f8:	ldr	r1, [pc, #3552]	; 141e0 <blkid_probe_get_size@plt+0xccc8>
   133fc:	mov	r0, sl
   13400:	add	r1, pc, r1
   13404:	bl	7314 <strcmp@plt>
   13408:	subs	r8, r0, #0
   1340c:	bne	13560 <blkid_probe_get_size@plt+0xc048>
   13410:	cmp	r7, #3
   13414:	bhi	13500 <blkid_probe_get_size@plt+0xbfe8>
   13418:	str	r8, [sp]
   1341c:	mov	r3, r5
   13420:	mov	r2, r7
   13424:	mov	r1, #29
   13428:	add	r0, sp, #168	; 0xa8
   1342c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13430:	cmp	r0, #0
   13434:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13438:	ldr	r3, [pc, #3492]	; 141e4 <blkid_probe_get_size@plt+0xcccc>
   1343c:	add	r3, pc, r3
   13440:	ldr	r3, [r3, #4]
   13444:	cmp	r3, #2
   13448:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1344c:	ldr	r2, [sp, #32]
   13450:	ldr	r3, [pc, #3472]	; 141e8 <blkid_probe_get_size@plt+0xccd0>
   13454:	ldr	r1, [sp, #24]
   13458:	ldr	r0, [r2, #-8]
   1345c:	ldr	r2, [pc, #3464]	; 141ec <blkid_probe_get_size@plt+0xccd4>
   13460:	add	r3, pc, r3
   13464:	add	r2, pc, r2
   13468:	str	r2, [sp, #4]
   1346c:	add	r3, r3, #1072	; 0x430
   13470:	ldr	r2, [pc, #3448]	; 141f0 <blkid_probe_get_size@plt+0xccd8>
   13474:	add	r3, r3, #12
   13478:	str	r1, [sp, #8]
   1347c:	str	r3, [sp]
   13480:	str	r0, [sp, #16]
   13484:	str	r9, [sp, #12]
   13488:	mov	r1, r8
   1348c:	ldr	r3, [pc, #3424]	; 141f4 <blkid_probe_get_size@plt+0xccdc>
   13490:	add	r2, pc, r2
   13494:	ldr	r0, [pc, #3304]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13498:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1349c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   134a0:	ldr	r2, [pc, #3408]	; 141f8 <blkid_probe_get_size@plt+0xcce0>
   134a4:	add	r2, pc, r2
   134a8:	ldr	r2, [r2, #4]
   134ac:	cmp	r2, #2
   134b0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   134b4:	ldr	r2, [pc, #3392]	; 141fc <blkid_probe_get_size@plt+0xcce4>
   134b8:	ldr	r0, [pc, #3392]	; 14200 <blkid_probe_get_size@plt+0xcce8>
   134bc:	add	r2, pc, r2
   134c0:	add	r2, r2, #1072	; 0x430
   134c4:	add	r2, r2, #12
   134c8:	ldr	r3, [sp, #24]
   134cc:	str	r2, [sp]
   134d0:	ldr	r2, [pc, #3372]	; 14204 <blkid_probe_get_size@plt+0xccec>
   134d4:	add	r0, pc, r0
   134d8:	str	r3, [sp, #8]
   134dc:	str	r0, [sp, #4]
   134e0:	str	sl, [sp, #16]
   134e4:	str	r9, [sp, #12]
   134e8:	mov	r1, r8
   134ec:	ldr	r3, [pc, #3348]	; 14208 <blkid_probe_get_size@plt+0xccf0>
   134f0:	add	r2, pc, r2
   134f4:	ldr	r0, [pc, #3208]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   134f8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   134fc:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13500:	ldr	r2, [pc, #3332]	; 1420c <blkid_probe_get_size@plt+0xccf4>
   13504:	add	r2, pc, r2
   13508:	ldr	r2, [r2, #4]
   1350c:	cmp	r2, #2
   13510:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13514:	ldr	r2, [pc, #3316]	; 14210 <blkid_probe_get_size@plt+0xccf8>
   13518:	ldr	r0, [pc, #3316]	; 14214 <blkid_probe_get_size@plt+0xccfc>
   1351c:	add	r2, pc, r2
   13520:	add	r2, r2, #1072	; 0x430
   13524:	add	r2, r2, #12
   13528:	ldr	r3, [sp, #24]
   1352c:	str	r2, [sp]
   13530:	ldr	r2, [pc, #3296]	; 14218 <blkid_probe_get_size@plt+0xcd00>
   13534:	add	r0, pc, r0
   13538:	str	r3, [sp, #8]
   1353c:	str	r0, [sp, #4]
   13540:	str	sl, [sp, #16]
   13544:	str	r9, [sp, #12]
   13548:	mov	r1, r8
   1354c:	ldr	r3, [pc, #3272]	; 1421c <blkid_probe_get_size@plt+0xcd04>
   13550:	add	r2, pc, r2
   13554:	ldr	r0, [pc, #3112]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13558:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1355c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13560:	ldr	r3, [pc, #3256]	; 14220 <blkid_probe_get_size@plt+0xcd08>
   13564:	mov	r0, sl
   13568:	add	r3, pc, r3
   1356c:	mov	r1, r3
   13570:	str	r3, [sp, #76]	; 0x4c
   13574:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   13578:	subs	r8, r0, #0
   1357c:	beq	13990 <blkid_probe_get_size@plt+0xc478>
   13580:	add	r0, sl, #6
   13584:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   13588:	subs	r8, r0, #0
   1358c:	beq	13934 <blkid_probe_get_size@plt+0xc41c>
   13590:	cmp	r7, #5
   13594:	beq	137d8 <blkid_probe_get_size@plt+0xc2c0>
   13598:	ldr	r1, [pc, #3204]	; 14224 <blkid_probe_get_size@plt+0xcd0c>
   1359c:	add	r1, pc, r1
   135a0:	bl	7314 <strcmp@plt>
   135a4:	cmp	r0, #0
   135a8:	bne	13744 <blkid_probe_get_size@plt+0xc22c>
   135ac:	ldrb	r3, [r4, #1]
   135b0:	cmp	r3, #47	; 0x2f
   135b4:	beq	136b8 <blkid_probe_get_size@plt+0xc1a0>
   135b8:	mov	r0, r5
   135bc:	bl	58f70 <blkid_probe_get_size@plt+0x51a58>
   135c0:	ldr	r3, [sp, #32]
   135c4:	cmp	r0, #0
   135c8:	str	r0, [r3, #-864]	; 0xfffffca0
   135cc:	blt	136b8 <blkid_probe_get_size@plt+0xc1a0>
   135d0:	ldr	r3, [pc, #3152]	; 14228 <blkid_probe_get_size@plt+0xcd10>
   135d4:	add	r3, pc, r3
   135d8:	ldr	r3, [r3, #4]
   135dc:	cmp	r3, #6
   135e0:	ble	1362c <blkid_probe_get_size@plt+0xc114>
   135e4:	ldr	r3, [pc, #3136]	; 1422c <blkid_probe_get_size@plt+0xcd14>
   135e8:	ldr	r2, [pc, #3136]	; 14230 <blkid_probe_get_size@plt+0xcd18>
   135ec:	add	r3, pc, r3
   135f0:	add	r2, pc, r2
   135f4:	ldr	r1, [sp, #24]
   135f8:	add	r3, r3, #1072	; 0x430
   135fc:	str	r2, [sp, #4]
   13600:	ldr	r2, [pc, #3116]	; 14234 <blkid_probe_get_size@plt+0xcd1c>
   13604:	add	r3, r3, #12
   13608:	str	r1, [sp, #8]
   1360c:	str	r3, [sp]
   13610:	str	r5, [sp, #16]
   13614:	str	r9, [sp, #12]
   13618:	ldr	r3, [pc, #3096]	; 14238 <blkid_probe_get_size@plt+0xcd20>
   1361c:	add	r2, pc, r2
   13620:	mov	r1, #0
   13624:	ldr	r0, [pc, #3088]	; 1423c <blkid_probe_get_size@plt+0xcd24>
   13628:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1362c:	add	r1, sp, #96	; 0x60
   13630:	str	r1, [sp]
   13634:	mov	r3, r5
   13638:	mov	r2, r7
   1363c:	add	r0, sp, #168	; 0xa8
   13640:	mov	r1, #25
   13644:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13648:	cmp	r0, #0
   1364c:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13650:	ldr	r3, [pc, #3048]	; 14240 <blkid_probe_get_size@plt+0xcd28>
   13654:	add	r3, pc, r3
   13658:	ldr	r3, [r3, #4]
   1365c:	cmp	r3, #2
   13660:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13664:	ldr	r2, [sp, #32]
   13668:	ldr	r3, [pc, #3028]	; 14244 <blkid_probe_get_size@plt+0xcd2c>
   1366c:	ldr	r0, [sp, #24]
   13670:	ldr	r1, [r2, #-8]
   13674:	ldr	r2, [pc, #3020]	; 14248 <blkid_probe_get_size@plt+0xcd30>
   13678:	add	r3, pc, r3
   1367c:	add	r2, pc, r2
   13680:	str	r2, [sp, #4]
   13684:	add	r3, r3, #1072	; 0x430
   13688:	ldr	r2, [pc, #3004]	; 1424c <blkid_probe_get_size@plt+0xcd34>
   1368c:	add	r3, r3, #12
   13690:	str	r0, [sp, #8]
   13694:	str	r3, [sp]
   13698:	str	r1, [sp, #16]
   1369c:	str	r9, [sp, #12]
   136a0:	ldr	r3, [pc, #2984]	; 14250 <blkid_probe_get_size@plt+0xcd38>
   136a4:	add	r2, pc, r2
   136a8:	mov	r1, #0
   136ac:	ldr	r0, [pc, #2768]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   136b0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   136b4:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   136b8:	mov	r1, #0
   136bc:	str	r1, [sp]
   136c0:	mov	r3, r5
   136c4:	mov	r2, r7
   136c8:	mov	r1, #24
   136cc:	add	r0, sp, #168	; 0xa8
   136d0:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   136d4:	cmp	r0, #0
   136d8:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   136dc:	ldr	r3, [pc, #2928]	; 14254 <blkid_probe_get_size@plt+0xcd3c>
   136e0:	add	r3, pc, r3
   136e4:	ldr	r3, [r3, #4]
   136e8:	cmp	r3, #2
   136ec:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   136f0:	ldr	r2, [sp, #32]
   136f4:	ldr	r3, [pc, #2908]	; 14258 <blkid_probe_get_size@plt+0xcd40>
   136f8:	ldr	r0, [sp, #24]
   136fc:	ldr	r1, [r2, #-8]
   13700:	ldr	r2, [pc, #2900]	; 1425c <blkid_probe_get_size@plt+0xcd44>
   13704:	add	r3, pc, r3
   13708:	add	r2, pc, r2
   1370c:	str	r2, [sp, #4]
   13710:	add	r3, r3, #1072	; 0x430
   13714:	ldr	r2, [pc, #2884]	; 14260 <blkid_probe_get_size@plt+0xcd48>
   13718:	add	r3, r3, #12
   1371c:	str	r0, [sp, #8]
   13720:	str	r3, [sp]
   13724:	str	r1, [sp, #16]
   13728:	str	r9, [sp, #12]
   1372c:	ldr	r3, [pc, #2864]	; 14264 <blkid_probe_get_size@plt+0xcd4c>
   13730:	add	r2, pc, r2
   13734:	mov	r1, #0
   13738:	ldr	r0, [pc, #2628]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   1373c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13740:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13744:	ldr	r1, [pc, #2844]	; 14268 <blkid_probe_get_size@plt+0xcd50>
   13748:	mov	r0, r8
   1374c:	add	r1, pc, r1
   13750:	bl	7314 <strcmp@plt>
   13754:	cmp	r0, #0
   13758:	beq	138fc <blkid_probe_get_size@plt+0xc3e4>
   1375c:	ldr	r1, [pc, #2824]	; 1426c <blkid_probe_get_size@plt+0xcd54>
   13760:	mov	r0, r8
   13764:	add	r1, pc, r1
   13768:	bl	7314 <strcmp@plt>
   1376c:	cmp	r0, #0
   13770:	beq	138e0 <blkid_probe_get_size@plt+0xc3c8>
   13774:	ldr	r1, [pc, #2804]	; 14270 <blkid_probe_get_size@plt+0xcd58>
   13778:	mov	r0, r8
   1377c:	add	r1, pc, r1
   13780:	bl	7314 <strcmp@plt>
   13784:	cmp	r0, #0
   13788:	beq	138c4 <blkid_probe_get_size@plt+0xc3ac>
   1378c:	ldr	r1, [pc, #2784]	; 14274 <blkid_probe_get_size@plt+0xcd5c>
   13790:	mov	r0, r8
   13794:	add	r1, pc, r1
   13798:	bl	7314 <strcmp@plt>
   1379c:	cmp	r0, #0
   137a0:	beq	138a8 <blkid_probe_get_size@plt+0xc390>
   137a4:	ldr	r1, [pc, #2764]	; 14278 <blkid_probe_get_size@plt+0xcd60>
   137a8:	mov	r0, r8
   137ac:	add	r1, pc, r1
   137b0:	bl	7314 <strcmp@plt>
   137b4:	cmp	r0, #0
   137b8:	bne	1383c <blkid_probe_get_size@plt+0xc324>
   137bc:	str	r0, [sp]
   137c0:	mov	r3, r5
   137c4:	mov	r2, r7
   137c8:	mov	r1, #28
   137cc:	add	r0, sp, #168	; 0xa8
   137d0:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   137d4:	b	136d4 <blkid_probe_get_size@plt+0xc1bc>
   137d8:	ldr	r3, [pc, #2716]	; 1427c <blkid_probe_get_size@plt+0xcd64>
   137dc:	add	r3, pc, r3
   137e0:	ldr	r3, [r3, #4]
   137e4:	cmp	r3, #2
   137e8:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   137ec:	ldr	r3, [pc, #2700]	; 14280 <blkid_probe_get_size@plt+0xcd68>
   137f0:	ldr	r2, [pc, #2700]	; 14284 <blkid_probe_get_size@plt+0xcd6c>
   137f4:	ldr	r1, [sp, #76]	; 0x4c
   137f8:	add	r2, pc, r2
   137fc:	add	r3, pc, r3
   13800:	str	r1, [sp, #16]
   13804:	str	r2, [sp, #4]
   13808:	ldr	r1, [sp, #24]
   1380c:	add	r3, r3, #1072	; 0x430
   13810:	ldr	r2, [pc, #2672]	; 14288 <blkid_probe_get_size@plt+0xcd70>
   13814:	add	r3, r3, #12
   13818:	str	r1, [sp, #8]
   1381c:	str	r3, [sp]
   13820:	str	r9, [sp, #12]
   13824:	ldr	r1, [sp, #52]	; 0x34
   13828:	mov	r3, #1248	; 0x4e0
   1382c:	add	r2, pc, r2
   13830:	ldr	r0, [pc, #2380]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13834:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13838:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1383c:	ldr	r3, [pc, #2632]	; 1428c <blkid_probe_get_size@plt+0xcd74>
   13840:	add	r3, pc, r3
   13844:	ldr	r3, [r3, #4]
   13848:	cmp	r3, #2
   1384c:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13850:	ldr	r3, [pc, #2616]	; 14290 <blkid_probe_get_size@plt+0xcd78>
   13854:	ldr	r2, [pc, #2616]	; 14294 <blkid_probe_get_size@plt+0xcd7c>
   13858:	add	r3, pc, r3
   1385c:	add	r2, pc, r2
   13860:	ldr	r1, [pc, #2608]	; 14298 <blkid_probe_get_size@plt+0xcd80>
   13864:	ldr	r0, [sp, #24]
   13868:	str	r2, [sp, #4]
   1386c:	add	r3, r3, #1072	; 0x430
   13870:	ldr	r2, [pc, #2596]	; 1429c <blkid_probe_get_size@plt+0xcd84>
   13874:	add	r1, pc, r1
   13878:	add	r3, r3, #12
   1387c:	str	r0, [sp, #8]
   13880:	str	r3, [sp]
   13884:	str	r1, [sp, #16]
   13888:	str	r8, [sp, #20]
   1388c:	str	r9, [sp, #12]
   13890:	mov	r3, #1280	; 0x500
   13894:	add	r2, pc, r2
   13898:	mov	r1, #0
   1389c:	ldr	r0, [pc, #2272]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   138a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   138a4:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   138a8:	str	r0, [sp]
   138ac:	mov	r3, r5
   138b0:	mov	r2, r7
   138b4:	mov	r1, #27
   138b8:	add	r0, sp, #168	; 0xa8
   138bc:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   138c0:	b	136d4 <blkid_probe_get_size@plt+0xc1bc>
   138c4:	str	r0, [sp]
   138c8:	mov	r3, r5
   138cc:	mov	r2, r7
   138d0:	mov	r1, #26
   138d4:	add	r0, sp, #168	; 0xa8
   138d8:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   138dc:	b	136d4 <blkid_probe_get_size@plt+0xc1bc>
   138e0:	str	r0, [sp]
   138e4:	mov	r3, r5
   138e8:	mov	r2, r7
   138ec:	mov	r1, #23
   138f0:	add	r0, sp, #168	; 0xa8
   138f4:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   138f8:	b	136d4 <blkid_probe_get_size@plt+0xc1bc>
   138fc:	mov	r0, r5
   13900:	bl	58f70 <blkid_probe_get_size@plt+0x51a58>
   13904:	ldr	r3, [sp, #32]
   13908:	cmp	r0, #0
   1390c:	str	r0, [r3, #-864]	; 0xfffffca0
   13910:	blt	13a70 <blkid_probe_get_size@plt+0xc558>
   13914:	add	r1, sp, #96	; 0x60
   13918:	str	r1, [sp]
   1391c:	mov	r3, r5
   13920:	mov	r2, r7
   13924:	add	r0, sp, #168	; 0xa8
   13928:	mov	r1, #25
   1392c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13930:	b	136d4 <blkid_probe_get_size@plt+0xc1bc>
   13934:	ldr	r3, [pc, #2404]	; 142a0 <blkid_probe_get_size@plt+0xcd88>
   13938:	add	r3, pc, r3
   1393c:	ldr	r3, [r3, #4]
   13940:	cmp	r3, #3
   13944:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13948:	ldr	r3, [pc, #2388]	; 142a4 <blkid_probe_get_size@plt+0xcd8c>
   1394c:	ldr	r2, [pc, #2388]	; 142a8 <blkid_probe_get_size@plt+0xcd90>
   13950:	add	r3, pc, r3
   13954:	add	r2, pc, r2
   13958:	ldr	r1, [sp, #24]
   1395c:	str	r2, [sp, #4]
   13960:	add	r3, r3, #1072	; 0x430
   13964:	ldr	r2, [pc, #2368]	; 142ac <blkid_probe_get_size@plt+0xcd94>
   13968:	add	r3, r3, #12
   1396c:	str	r1, [sp, #8]
   13970:	str	r3, [sp]
   13974:	str	r9, [sp, #12]
   13978:	mov	r1, r8
   1397c:	ldr	r3, [pc, #2348]	; 142b0 <blkid_probe_get_size@plt+0xcd98>
   13980:	add	r2, pc, r2
   13984:	ldr	r0, [pc, #2664]	; 143f4 <blkid_probe_get_size@plt+0xcedc>
   13988:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1398c:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   13990:	ldr	r3, [pc, #2332]	; 142b4 <blkid_probe_get_size@plt+0xcd9c>
   13994:	mov	r0, sl
   13998:	add	r3, pc, r3
   1399c:	mov	r1, r3
   139a0:	str	r3, [sp, #52]	; 0x34
   139a4:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   139a8:	cmp	r0, #0
   139ac:	beq	13b50 <blkid_probe_get_size@plt+0xc638>
   139b0:	ldr	r3, [sp, #32]
   139b4:	cmp	r7, #3
   139b8:	str	r8, [r3, #-864]	; 0xfffffca0
   139bc:	bhi	13aec <blkid_probe_get_size@plt+0xc5d4>
   139c0:	add	r0, sl, #4
   139c4:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   139c8:	subs	r3, r0, #0
   139cc:	beq	13ad0 <blkid_probe_get_size@plt+0xc5b8>
   139d0:	mov	r1, r8
   139d4:	mov	r2, #8
   139d8:	bl	69e4 <strtol@plt>
   139dc:	ldr	ip, [sp, #32]
   139e0:	add	r1, sp, #96	; 0x60
   139e4:	str	r1, [sp]
   139e8:	mov	r3, r5
   139ec:	mov	r2, r7
   139f0:	mov	r1, #21
   139f4:	str	r0, [ip, #-864]	; 0xfffffca0
   139f8:	add	r0, sp, #168	; 0xa8
   139fc:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13a00:	cmp	r0, #0
   13a04:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13a08:	ldr	r3, [pc, #2216]	; 142b8 <blkid_probe_get_size@plt+0xcda0>
   13a0c:	add	r3, pc, r3
   13a10:	ldr	r3, [r3, #4]
   13a14:	cmp	r3, #2
   13a18:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13a1c:	ldr	r2, [sp, #32]
   13a20:	ldr	r3, [pc, #2196]	; 142bc <blkid_probe_get_size@plt+0xcda4>
   13a24:	ldr	r0, [sp, #24]
   13a28:	ldr	r1, [r2, #-8]
   13a2c:	ldr	r2, [pc, #2188]	; 142c0 <blkid_probe_get_size@plt+0xcda8>
   13a30:	add	r3, pc, r3
   13a34:	add	r2, pc, r2
   13a38:	str	r2, [sp, #4]
   13a3c:	add	r3, r3, #1072	; 0x430
   13a40:	ldr	r2, [pc, #2172]	; 142c4 <blkid_probe_get_size@plt+0xcdac>
   13a44:	add	r3, r3, #12
   13a48:	str	r0, [sp, #8]
   13a4c:	str	r3, [sp]
   13a50:	str	r1, [sp, #16]
   13a54:	str	r9, [sp, #12]
   13a58:	ldr	r3, [pc, #2152]	; 142c8 <blkid_probe_get_size@plt+0xcdb0>
   13a5c:	add	r2, pc, r2
   13a60:	mov	r1, #0
   13a64:	ldr	r0, [pc, #1816]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13a68:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13a6c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13a70:	ldr	r3, [pc, #2132]	; 142cc <blkid_probe_get_size@plt+0xcdb4>
   13a74:	add	r3, pc, r3
   13a78:	ldr	r3, [r3, #4]
   13a7c:	cmp	r3, #3
   13a80:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13a84:	ldr	r3, [pc, #2116]	; 142d0 <blkid_probe_get_size@plt+0xcdb8>
   13a88:	ldr	r2, [pc, #2116]	; 142d4 <blkid_probe_get_size@plt+0xcdbc>
   13a8c:	add	r3, pc, r3
   13a90:	add	r2, pc, r2
   13a94:	ldr	r1, [sp, #24]
   13a98:	str	r2, [sp, #4]
   13a9c:	add	r3, r3, #1072	; 0x430
   13aa0:	ldr	r2, [pc, #2096]	; 142d8 <blkid_probe_get_size@plt+0xcdc0>
   13aa4:	add	r3, r3, #12
   13aa8:	str	r1, [sp, #8]
   13aac:	str	r3, [sp]
   13ab0:	str	r5, [sp, #16]
   13ab4:	str	r9, [sp, #12]
   13ab8:	ldr	r3, [pc, #2076]	; 142dc <blkid_probe_get_size@plt+0xcdc4>
   13abc:	add	r2, pc, r2
   13ac0:	mov	r1, #0
   13ac4:	ldr	r0, [pc, #2344]	; 143f4 <blkid_probe_get_size@plt+0xcedc>
   13ac8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13acc:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   13ad0:	str	r3, [sp]
   13ad4:	mov	r2, r7
   13ad8:	mov	r3, r5
   13adc:	mov	r1, #21
   13ae0:	add	r0, sp, #168	; 0xa8
   13ae4:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13ae8:	b	13a00 <blkid_probe_get_size@plt+0xc4e8>
   13aec:	ldr	r3, [pc, #2028]	; 142e0 <blkid_probe_get_size@plt+0xcdc8>
   13af0:	add	r3, pc, r3
   13af4:	ldr	r3, [r3, #4]
   13af8:	cmp	r3, #2
   13afc:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13b00:	ldr	r3, [pc, #2012]	; 142e4 <blkid_probe_get_size@plt+0xcdcc>
   13b04:	ldr	r2, [pc, #2012]	; 142e8 <blkid_probe_get_size@plt+0xcdd0>
   13b08:	ldr	r1, [sp, #52]	; 0x34
   13b0c:	add	r2, pc, r2
   13b10:	add	r3, pc, r3
   13b14:	str	r1, [sp, #16]
   13b18:	str	r2, [sp, #4]
   13b1c:	ldr	r1, [sp, #24]
   13b20:	add	r3, r3, #1072	; 0x430
   13b24:	ldr	r2, [pc, #1984]	; 142ec <blkid_probe_get_size@plt+0xcdd4>
   13b28:	add	r3, r3, #12
   13b2c:	str	r1, [sp, #8]
   13b30:	str	r3, [sp]
   13b34:	str	r9, [sp, #12]
   13b38:	mov	r1, r8
   13b3c:	ldr	r3, [pc, #1964]	; 142f0 <blkid_probe_get_size@plt+0xcdd8>
   13b40:	add	r2, pc, r2
   13b44:	ldr	r0, [pc, #1592]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13b48:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13b4c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13b50:	ldr	r1, [pc, #1948]	; 142f4 <blkid_probe_get_size@plt+0xcddc>
   13b54:	mov	r0, sl
   13b58:	add	r1, pc, r1
   13b5c:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   13b60:	cmp	r0, #0
   13b64:	beq	13c48 <blkid_probe_get_size@plt+0xc730>
   13b68:	add	r0, sl, #3
   13b6c:	bl	9a98 <blkid_probe_get_size@plt+0x2580>
   13b70:	subs	r4, r0, #0
   13b74:	beq	13d34 <blkid_probe_get_size@plt+0xc81c>
   13b78:	cmp	r7, #5
   13b7c:	beq	13d3c <blkid_probe_get_size@plt+0xc824>
   13b80:	ldr	r1, [pc, #1904]	; 142f8 <blkid_probe_get_size@plt+0xcde0>
   13b84:	mov	r0, r4
   13b88:	add	r1, pc, r1
   13b8c:	bl	7314 <strcmp@plt>
   13b90:	subs	r8, r0, #0
   13b94:	beq	13cfc <blkid_probe_get_size@plt+0xc7e4>
   13b98:	ldr	r1, [pc, #1884]	; 142fc <blkid_probe_get_size@plt+0xcde4>
   13b9c:	mov	r0, r4
   13ba0:	add	r1, pc, r1
   13ba4:	bl	7314 <strcmp@plt>
   13ba8:	cmp	r0, #0
   13bac:	bne	13c90 <blkid_probe_get_size@plt+0xc778>
   13bb0:	ldr	lr, [sp, #32]
   13bb4:	add	r1, sp, #96	; 0x60
   13bb8:	mov	ip, #11
   13bbc:	str	r1, [sp]
   13bc0:	mov	r3, r5
   13bc4:	mov	r2, r7
   13bc8:	add	r0, sp, #168	; 0xa8
   13bcc:	mov	r1, #51	; 0x33
   13bd0:	str	ip, [lr, #-864]	; 0xfffffca0
   13bd4:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13bd8:	cmp	r0, #0
   13bdc:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13be0:	ldr	r3, [pc, #1816]	; 14300 <blkid_probe_get_size@plt+0xcde8>
   13be4:	add	r3, pc, r3
   13be8:	ldr	r3, [r3, #4]
   13bec:	cmp	r3, #2
   13bf0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13bf4:	ldr	r2, [sp, #32]
   13bf8:	ldr	r3, [pc, #1796]	; 14304 <blkid_probe_get_size@plt+0xcdec>
   13bfc:	ldr	r0, [sp, #24]
   13c00:	ldr	r1, [r2, #-8]
   13c04:	ldr	r2, [pc, #1788]	; 14308 <blkid_probe_get_size@plt+0xcdf0>
   13c08:	add	r3, pc, r3
   13c0c:	add	r2, pc, r2
   13c10:	str	r2, [sp, #4]
   13c14:	add	r3, r3, #1072	; 0x430
   13c18:	ldr	r2, [pc, #1772]	; 1430c <blkid_probe_get_size@plt+0xcdf4>
   13c1c:	add	r3, r3, #12
   13c20:	str	r0, [sp, #8]
   13c24:	str	r3, [sp]
   13c28:	str	r1, [sp, #16]
   13c2c:	str	r9, [sp, #12]
   13c30:	ldr	r3, [pc, #1752]	; 14310 <blkid_probe_get_size@plt+0xcdf8>
   13c34:	add	r2, pc, r2
   13c38:	mov	r1, #0
   13c3c:	ldr	r0, [pc, #1344]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13c40:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13c44:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13c48:	ldr	r1, [pc, #1732]	; 14314 <blkid_probe_get_size@plt+0xcdfc>
   13c4c:	mov	r0, sl
   13c50:	add	r1, pc, r1
   13c54:	bl	7314 <strcmp@plt>
   13c58:	cmp	r0, #0
   13c5c:	bne	13e04 <blkid_probe_get_size@plt+0xc8ec>
   13c60:	cmp	r7, #5
   13c64:	beq	13da4 <blkid_probe_get_size@plt+0xc88c>
   13c68:	mov	r0, r5
   13c6c:	bl	723c <strlen@plt>
   13c70:	ldr	r3, [sp, #44]	; 0x2c
   13c74:	mov	r1, r5
   13c78:	mov	r2, r0
   13c7c:	ldr	r0, [r3, #24]
   13c80:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   13c84:	ldr	r3, [sp, #32]
   13c88:	str	r0, [r3, #-784]	; 0xfffffcf0
   13c8c:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   13c90:	ldr	r3, [pc, #1664]	; 14318 <blkid_probe_get_size@plt+0xce00>
   13c94:	add	r3, pc, r3
   13c98:	ldr	r3, [r3, #4]
   13c9c:	cmp	r3, #2
   13ca0:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13ca4:	ldr	r3, [pc, #1648]	; 1431c <blkid_probe_get_size@plt+0xce04>
   13ca8:	ldr	r2, [pc, #1648]	; 14320 <blkid_probe_get_size@plt+0xce08>
   13cac:	add	r3, pc, r3
   13cb0:	add	r2, pc, r2
   13cb4:	ldr	r1, [pc, #1640]	; 14324 <blkid_probe_get_size@plt+0xce0c>
   13cb8:	ldr	r0, [sp, #24]
   13cbc:	str	r2, [sp, #4]
   13cc0:	add	r3, r3, #1072	; 0x430
   13cc4:	ldr	r2, [pc, #1628]	; 14328 <blkid_probe_get_size@plt+0xce10>
   13cc8:	add	r1, pc, r1
   13ccc:	add	r3, r3, #12
   13cd0:	str	r0, [sp, #8]
   13cd4:	str	r3, [sp]
   13cd8:	str	r1, [sp, #16]
   13cdc:	str	r4, [sp, #20]
   13ce0:	str	r9, [sp, #12]
   13ce4:	ldr	r3, [pc, #1600]	; 1432c <blkid_probe_get_size@plt+0xce14>
   13ce8:	add	r2, pc, r2
   13cec:	mov	r1, #0
   13cf0:	ldr	r0, [pc, #1164]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13cf4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13cf8:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   13cfc:	mov	r0, r5
   13d00:	bl	58f70 <blkid_probe_get_size@plt+0x51a58>
   13d04:	ldr	r3, [sp, #32]
   13d08:	cmp	r0, #0
   13d0c:	str	r0, [r3, #-864]	; 0xfffffca0
   13d10:	blt	13eb0 <blkid_probe_get_size@plt+0xc998>
   13d14:	add	r1, sp, #96	; 0x60
   13d18:	str	r1, [sp]
   13d1c:	mov	r3, r5
   13d20:	mov	r2, r7
   13d24:	add	r0, sp, #168	; 0xa8
   13d28:	mov	r1, #50	; 0x32
   13d2c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13d30:	b	13bd8 <blkid_probe_get_size@plt+0xc6c0>
   13d34:	cmp	r7, #5
   13d38:	bne	13bb0 <blkid_probe_get_size@plt+0xc698>
   13d3c:	ldr	r3, [pc, #1516]	; 14330 <blkid_probe_get_size@plt+0xce18>
   13d40:	add	r3, pc, r3
   13d44:	ldr	r3, [r3, #4]
   13d48:	cmp	r3, #2
   13d4c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13d50:	ldr	r3, [pc, #1500]	; 14334 <blkid_probe_get_size@plt+0xce1c>
   13d54:	ldr	r2, [pc, #1500]	; 14338 <blkid_probe_get_size@plt+0xce20>
   13d58:	add	r3, pc, r3
   13d5c:	add	r2, pc, r2
   13d60:	ldr	r1, [pc, #1492]	; 1433c <blkid_probe_get_size@plt+0xce24>
   13d64:	ldr	r0, [sp, #24]
   13d68:	str	r2, [sp, #4]
   13d6c:	add	r3, r3, #1072	; 0x430
   13d70:	ldr	r2, [pc, #1480]	; 14340 <blkid_probe_get_size@plt+0xce28>
   13d74:	add	r1, pc, r1
   13d78:	add	r3, r3, #12
   13d7c:	str	r0, [sp, #8]
   13d80:	str	r3, [sp]
   13d84:	str	r1, [sp, #16]
   13d88:	str	r9, [sp, #12]
   13d8c:	ldr	r3, [pc, #1456]	; 14344 <blkid_probe_get_size@plt+0xce2c>
   13d90:	add	r2, pc, r2
   13d94:	mov	r1, #0
   13d98:	ldr	r0, [pc, #996]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13d9c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13da0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13da4:	ldr	r2, [pc, #1436]	; 14348 <blkid_probe_get_size@plt+0xce30>
   13da8:	add	r2, pc, r2
   13dac:	ldr	r2, [r2, #4]
   13db0:	cmp	r2, #2
   13db4:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13db8:	ldr	r2, [pc, #1420]	; 1434c <blkid_probe_get_size@plt+0xce34>
   13dbc:	ldr	r1, [pc, #1420]	; 14350 <blkid_probe_get_size@plt+0xce38>
   13dc0:	add	r2, pc, r2
   13dc4:	add	r2, r2, #1072	; 0x430
   13dc8:	add	r2, r2, #12
   13dcc:	ldr	r3, [sp, #24]
   13dd0:	str	r2, [sp]
   13dd4:	ldr	r2, [pc, #1400]	; 14354 <blkid_probe_get_size@plt+0xce3c>
   13dd8:	add	r1, pc, r1
   13ddc:	str	r3, [sp, #8]
   13de0:	str	r1, [sp, #4]
   13de4:	str	sl, [sp, #16]
   13de8:	str	r9, [sp, #12]
   13dec:	ldr	r3, [pc, #1380]	; 14358 <blkid_probe_get_size@plt+0xce40>
   13df0:	add	r2, pc, r2
   13df4:	mov	r1, #0
   13df8:	ldr	r0, [pc, #900]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13dfc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13e00:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13e04:	ldr	r1, [pc, #1360]	; 1435c <blkid_probe_get_size@plt+0xce44>
   13e08:	mov	r0, sl
   13e0c:	add	r1, pc, r1
   13e10:	bl	7314 <strcmp@plt>
   13e14:	cmp	r0, #0
   13e18:	bne	13f70 <blkid_probe_get_size@plt+0xca58>
   13e1c:	cmp	r7, #5
   13e20:	beq	13f10 <blkid_probe_get_size@plt+0xc9f8>
   13e24:	mov	r4, #0
   13e28:	mov	r3, r5
   13e2c:	str	r4, [sp]
   13e30:	mov	r2, r4
   13e34:	mov	r1, #52	; 0x34
   13e38:	add	r0, sp, #168	; 0xa8
   13e3c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   13e40:	cmp	r0, r4
   13e44:	bge	11474 <blkid_probe_get_size@plt+0x9f5c>
   13e48:	ldr	r3, [pc, #1296]	; 14360 <blkid_probe_get_size@plt+0xce48>
   13e4c:	add	r3, pc, r3
   13e50:	ldr	r3, [r3, #4]
   13e54:	cmp	r3, #2
   13e58:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13e5c:	ldr	r2, [sp, #32]
   13e60:	ldr	r3, [pc, #1276]	; 14364 <blkid_probe_get_size@plt+0xce4c>
   13e64:	ldr	r1, [sp, #24]
   13e68:	ldr	r0, [r2, #-8]
   13e6c:	ldr	r2, [pc, #1268]	; 14368 <blkid_probe_get_size@plt+0xce50>
   13e70:	add	r3, pc, r3
   13e74:	add	r2, pc, r2
   13e78:	str	r2, [sp, #4]
   13e7c:	add	r3, r3, #1072	; 0x430
   13e80:	ldr	r2, [pc, #1252]	; 1436c <blkid_probe_get_size@plt+0xce54>
   13e84:	add	r3, r3, #12
   13e88:	str	r1, [sp, #8]
   13e8c:	str	r3, [sp]
   13e90:	str	r0, [sp, #16]
   13e94:	str	r9, [sp, #12]
   13e98:	mov	r1, r4
   13e9c:	ldr	r3, [pc, #1228]	; 14370 <blkid_probe_get_size@plt+0xce58>
   13ea0:	add	r2, pc, r2
   13ea4:	ldr	r0, [pc, #728]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13ea8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13eac:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13eb0:	ldr	r3, [pc, #1212]	; 14374 <blkid_probe_get_size@plt+0xce5c>
   13eb4:	add	r3, pc, r3
   13eb8:	ldr	r3, [r3, #4]
   13ebc:	cmp	r3, #2
   13ec0:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13ec4:	ldr	r3, [pc, #1196]	; 14378 <blkid_probe_get_size@plt+0xce60>
   13ec8:	ldr	r2, [pc, #1196]	; 1437c <blkid_probe_get_size@plt+0xce64>
   13ecc:	add	r3, pc, r3
   13ed0:	add	r2, pc, r2
   13ed4:	ldr	r1, [sp, #24]
   13ed8:	str	r2, [sp, #4]
   13edc:	add	r3, r3, #1072	; 0x430
   13ee0:	ldr	r2, [pc, #1176]	; 14380 <blkid_probe_get_size@plt+0xce68>
   13ee4:	add	r3, r3, #12
   13ee8:	str	r1, [sp, #8]
   13eec:	str	r3, [sp]
   13ef0:	str	r5, [sp, #16]
   13ef4:	str	r9, [sp, #12]
   13ef8:	mov	r1, r8
   13efc:	mov	r3, #1312	; 0x520
   13f00:	add	r2, pc, r2
   13f04:	ldr	r0, [pc, #632]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13f08:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13f0c:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   13f10:	ldr	r2, [pc, #1132]	; 14384 <blkid_probe_get_size@plt+0xce6c>
   13f14:	add	r2, pc, r2
   13f18:	ldr	r2, [r2, #4]
   13f1c:	cmp	r2, #2
   13f20:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   13f24:	ldr	r2, [pc, #1116]	; 14388 <blkid_probe_get_size@plt+0xce70>
   13f28:	ldr	r1, [pc, #1116]	; 1438c <blkid_probe_get_size@plt+0xce74>
   13f2c:	add	r2, pc, r2
   13f30:	add	r2, r2, #1072	; 0x430
   13f34:	add	r2, r2, #12
   13f38:	ldr	r3, [sp, #24]
   13f3c:	str	r2, [sp]
   13f40:	ldr	r2, [pc, #1096]	; 14390 <blkid_probe_get_size@plt+0xce78>
   13f44:	add	r1, pc, r1
   13f48:	str	r3, [sp, #8]
   13f4c:	str	r1, [sp, #4]
   13f50:	str	sl, [sp, #16]
   13f54:	str	r9, [sp, #12]
   13f58:	ldr	r3, [pc, #1076]	; 14394 <blkid_probe_get_size@plt+0xce7c>
   13f5c:	add	r2, pc, r2
   13f60:	mov	r1, #0
   13f64:	ldr	r0, [pc, #536]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   13f68:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   13f6c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   13f70:	ldr	r1, [pc, #1056]	; 14398 <blkid_probe_get_size@plt+0xce80>
   13f74:	mov	r0, sl
   13f78:	add	r1, pc, r1
   13f7c:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   13f80:	subs	r8, r0, #0
   13f84:	beq	14014 <blkid_probe_get_size@plt+0xcafc>
   13f88:	cmp	r7, #5
   13f8c:	beq	1411c <blkid_probe_get_size@plt+0xcc04>
   13f90:	cmp	r7, #2
   13f94:	bls	140fc <blkid_probe_get_size@plt+0xcbe4>
   13f98:	ldr	r1, [pc, #1020]	; 1439c <blkid_probe_get_size@plt+0xce84>
   13f9c:	mov	r0, r5
   13fa0:	add	r1, pc, r1
   13fa4:	bl	7314 <strcmp@plt>
   13fa8:	subs	r1, r0, #0
   13fac:	beq	145b4 <blkid_probe_get_size@plt+0xd09c>
   13fb0:	ldrb	r1, [r4, #1]
   13fb4:	cmp	r1, #0
   13fb8:	bne	14070 <blkid_probe_get_size@plt+0xcb58>
   13fbc:	ldr	r3, [pc, #988]	; 143a0 <blkid_probe_get_size@plt+0xce88>
   13fc0:	add	r3, pc, r3
   13fc4:	ldr	r3, [r3, #4]
   13fc8:	cmp	r3, #6
   13fcc:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   13fd0:	ldr	r3, [pc, #972]	; 143a4 <blkid_probe_get_size@plt+0xce8c>
   13fd4:	ldr	r2, [pc, #972]	; 143a8 <blkid_probe_get_size@plt+0xce90>
   13fd8:	add	r3, pc, r3
   13fdc:	add	r2, pc, r2
   13fe0:	ldr	r0, [sp, #24]
   13fe4:	str	r2, [sp, #4]
   13fe8:	add	r3, r3, #1072	; 0x430
   13fec:	ldr	r2, [pc, #952]	; 143ac <blkid_probe_get_size@plt+0xce94>
   13ff0:	add	r3, r3, #12
   13ff4:	str	r0, [sp, #8]
   13ff8:	str	r3, [sp]
   13ffc:	str	r9, [sp, #12]
   14000:	ldr	r3, [pc, #936]	; 143b0 <blkid_probe_get_size@plt+0xce98>
   14004:	add	r2, pc, r2
   14008:	ldr	r0, [pc, #556]	; 1423c <blkid_probe_get_size@plt+0xcd24>
   1400c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14010:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   14014:	ldr	r1, [pc, #920]	; 143b4 <blkid_probe_get_size@plt+0xce9c>
   14018:	mov	r0, sl
   1401c:	add	r1, pc, r1
   14020:	bl	7314 <strcmp@plt>
   14024:	cmp	r0, #0
   14028:	bne	146d4 <blkid_probe_get_size@plt+0xd1bc>
   1402c:	cmp	r7, #5
   14030:	beq	14674 <blkid_probe_get_size@plt+0xd15c>
   14034:	cmp	r7, #2
   14038:	str	r0, [sp]
   1403c:	movls	r1, #5
   14040:	movhi	r1, #47	; 0x2f
   14044:	mov	r3, r5
   14048:	mov	r2, r7
   1404c:	add	r0, sp, #168	; 0xa8
   14050:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14054:	cmp	r0, #0
   14058:	blt	1460c <blkid_probe_get_size@plt+0xd0f4>
   1405c:	ldr	r2, [sp, #32]
   14060:	ldrb	r3, [r2, #-787]	; 0xfffffced
   14064:	orr	r3, r3, #1
   14068:	strb	r3, [r2, #-787]	; 0xfffffced
   1406c:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   14070:	mov	r1, #0
   14074:	str	r1, [sp]
   14078:	mov	r3, r5
   1407c:	mov	r2, r7
   14080:	mov	r1, #46	; 0x2e
   14084:	add	r0, sp, #168	; 0xa8
   14088:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   1408c:	cmp	r0, #0
   14090:	bge	1405c <blkid_probe_get_size@plt+0xcb44>
   14094:	ldr	r3, [pc, #796]	; 143b8 <blkid_probe_get_size@plt+0xcea0>
   14098:	add	r3, pc, r3
   1409c:	ldr	r3, [r3, #4]
   140a0:	cmp	r3, #2
   140a4:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   140a8:	ldr	r2, [sp, #32]
   140ac:	ldr	r3, [pc, #776]	; 143bc <blkid_probe_get_size@plt+0xcea4>
   140b0:	ldr	r0, [sp, #24]
   140b4:	ldr	r1, [r2, #-8]
   140b8:	ldr	r2, [pc, #768]	; 143c0 <blkid_probe_get_size@plt+0xcea8>
   140bc:	add	r3, pc, r3
   140c0:	add	r2, pc, r2
   140c4:	str	r2, [sp, #4]
   140c8:	add	r3, r3, #1072	; 0x430
   140cc:	ldr	r2, [pc, #752]	; 143c4 <blkid_probe_get_size@plt+0xceac>
   140d0:	add	r3, r3, #12
   140d4:	str	r0, [sp, #8]
   140d8:	str	r3, [sp]
   140dc:	str	r1, [sp, #16]
   140e0:	str	r9, [sp, #12]
   140e4:	ldr	r3, [pc, #732]	; 143c8 <blkid_probe_get_size@plt+0xceb0>
   140e8:	add	r2, pc, r2
   140ec:	mov	r1, #0
   140f0:	ldr	r0, [pc, #140]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   140f4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   140f8:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   140fc:	mov	r1, #0
   14100:	str	r1, [sp]
   14104:	mov	r3, r5
   14108:	mov	r2, r7
   1410c:	mov	r1, #6
   14110:	add	r0, sp, #168	; 0xa8
   14114:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14118:	b	1408c <blkid_probe_get_size@plt+0xcb74>
   1411c:	ldr	r2, [pc, #680]	; 143cc <blkid_probe_get_size@plt+0xceb4>
   14120:	add	r2, pc, r2
   14124:	ldr	r2, [r2, #4]
   14128:	cmp	r2, #2
   1412c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14130:	ldr	r2, [pc, #664]	; 143d0 <blkid_probe_get_size@plt+0xceb8>
   14134:	ldr	r1, [pc, #664]	; 143d4 <blkid_probe_get_size@plt+0xcebc>
   14138:	add	r2, pc, r2
   1413c:	add	r2, r2, #1072	; 0x430
   14140:	add	r2, r2, #12
   14144:	ldr	r3, [sp, #24]
   14148:	str	r2, [sp]
   1414c:	ldr	r2, [pc, #644]	; 143d8 <blkid_probe_get_size@plt+0xcec0>
   14150:	add	r1, pc, r1
   14154:	str	r3, [sp, #8]
   14158:	str	r1, [sp, #4]
   1415c:	str	sl, [sp, #16]
   14160:	str	r9, [sp, #12]
   14164:	ldr	r3, [pc, #624]	; 143dc <blkid_probe_get_size@plt+0xcec4>
   14168:	add	r2, pc, r2
   1416c:	mov	r1, #0
   14170:	ldr	r0, [pc, #12]	; 14184 <blkid_probe_get_size@plt+0xcc6c>
   14174:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14178:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1417c:	muleq	r5, r4, ip
   14180:	andeq	r0, r0, r9, asr #9
   14184:	andeq	r0, r0, r3, lsl #8
   14188:	andeq	r4, r8, r4, lsr pc
   1418c:			; <UNDEFINED> instruction: 0x000513b0
   14190:	andeq	r3, r5, r0, asr #26
   14194:	andeq	r1, r5, r4, lsr ip
   14198:			; <UNDEFINED> instruction: 0x000004bc
   1419c:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   141a0:	andeq	r1, r5, r0, asr r3
   141a4:	ldrdeq	r3, [r5], -r4
   141a8:	andeq	r3, r5, r4, asr #25
   141ac:	andeq	r1, r5, ip, asr #23
   141b0:	andeq	r0, r0, fp, lsr #9
   141b4:	andeq	r4, r8, ip, ror #28
   141b8:	andeq	r1, r5, r8, ror #5
   141bc:	andeq	r3, r5, ip, asr #22
   141c0:	andeq	r3, r5, ip, asr ip
   141c4:	andeq	r1, r5, r0, ror #22
   141c8:	andeq	r0, r0, r8, lsr #9
   141cc:	andeq	r3, r5, r0, asr #24
   141d0:	andeq	r4, r8, r8, lsr #27
   141d4:	andeq	r1, r5, r8, lsl r2
   141d8:			; <UNDEFINED> instruction: 0x000539b8
   141dc:	muleq	r5, ip, sl
   141e0:	andeq	r3, r5, r0, lsr #23
   141e4:	andeq	r4, r8, r0, lsl #26
   141e8:	andeq	r1, r5, r0, ror r1
   141ec:	andeq	r3, r5, r0, lsl r9
   141f0:	strdeq	r1, [r5], -r4
   141f4:	ldrdeq	r0, [r0], -r7
   141f8:	muleq	r8, r8, ip
   141fc:	andeq	r1, r5, r4, lsl r1
   14200:	andeq	r3, r5, r4, lsl #17
   14204:	muleq	r5, r4, r9
   14208:	andeq	r0, r0, sp, asr #9
   1420c:	andeq	r4, r8, r8, lsr ip
   14210:	strheq	r1, [r5], -r4
   14214:	andeq	r3, r5, r4, lsr #16
   14218:	andeq	r1, r5, r4, lsr r9
   1421c:	ldrdeq	r0, [r0], -r4
   14220:	andeq	r3, r5, r0, asr #20
   14224:	andeq	r1, r6, r8, lsr r3
   14228:	andeq	r4, r8, r8, ror #22
   1422c:	andeq	r0, r5, r4, ror #31
   14230:	andeq	r3, r5, ip, ror #19
   14234:	andeq	r1, r5, r8, ror #16
   14238:	andeq	r0, r0, r8, ror #9
   1423c:	andeq	r0, r0, r7, lsl #8
   14240:	andeq	r4, r8, r8, ror #21
   14244:	andeq	r0, r5, r8, asr pc
   14248:	strdeq	r3, [r5], -r8
   1424c:	andeq	r1, r5, r0, ror #15
   14250:	andeq	r0, r0, sl, ror #9
   14254:	andeq	r4, r8, ip, asr sl
   14258:	andeq	r0, r5, ip, asr #29
   1425c:	andeq	r3, r5, ip, ror #12
   14260:	andeq	r1, r5, r4, asr r7
   14264:	andeq	r0, r0, r4, lsl #10
   14268:			; <UNDEFINED> instruction: 0x000538bc
   1426c:	andeq	r1, r6, ip, lsl lr
   14270:	muleq	r5, r0, ip
   14274:	andeq	r3, r5, ip, lsr #17
   14278:	muleq	r5, ip, r8
   1427c:	andeq	r4, r8, r0, ror #18
   14280:	ldrdeq	r0, [r5], -r4
   14284:	andeq	r3, r5, r0, ror #10
   14288:	andeq	r1, r5, r8, asr r6
   1428c:	strdeq	r4, [r8], -ip
   14290:	andeq	r0, r5, r8, ror sp
   14294:	strdeq	r3, [r5], -r4
   14298:	andeq	r3, r5, r4, lsr r7
   1429c:	strdeq	r1, [r5], -r0
   142a0:	andeq	r4, r8, r4, lsl #16
   142a4:	andeq	r0, r5, r0, lsl #25
   142a8:	andeq	r3, r5, ip, asr r6
   142ac:	andeq	r1, r5, r4, lsl #10
   142b0:	ldrdeq	r0, [r0], -ip
   142b4:	andeq	r3, r5, r0, ror #13
   142b8:	andeq	r4, r8, r0, lsr r7
   142bc:	andeq	r0, r5, r0, lsr #23
   142c0:	andeq	r3, r5, r0, asr #6
   142c4:	andeq	r1, r5, r8, lsr #8
   142c8:	andeq	r0, r0, r3, lsl r5
   142cc:	andeq	r4, r8, r8, asr #13
   142d0:	andeq	r0, r5, r4, asr #22
   142d4:	andeq	r3, r5, r0, lsl #11
   142d8:	andeq	r1, r5, r8, asr #7
   142dc:	strdeq	r0, [r0], -r3
   142e0:	andeq	r4, r8, ip, asr #12
   142e4:	andeq	r0, r5, r0, asr #21
   142e8:	andeq	r3, r5, ip, asr #4
   142ec:	andeq	r1, r5, r4, asr #6
   142f0:	andeq	r0, r0, sl, lsl #10
   142f4:	andeq	r3, r5, r8, lsr #10
   142f8:	andeq	r3, r5, r0, lsl #9
   142fc:	andeq	r0, r6, r4, lsr sp
   14300:	andeq	r4, r8, r8, asr r5
   14304:	andeq	r0, r5, r8, asr #19
   14308:	andeq	r3, r5, r8, ror #2
   1430c:	andeq	r1, r5, r0, asr r2
   14310:	andeq	r0, r0, sp, lsr #10
   14314:	andeq	r3, r5, r0, ror #8
   14318:	andeq	r4, r8, r8, lsr #9
   1431c:	andeq	r0, r5, r4, lsr #18
   14320:	andeq	r3, r5, r0, lsr #7
   14324:			; <UNDEFINED> instruction: 0x000533b8
   14328:	muleq	r5, ip, r1
   1432c:	andeq	r0, r0, r9, lsr #10
   14330:	strdeq	r4, [r8], -ip
   14334:	andeq	r0, r5, r8, ror r8
   14338:	strdeq	r2, [r5], -ip
   1433c:	andeq	r3, r5, ip, lsl #6
   14340:	strdeq	r1, [r5], -r4
   14344:	andeq	r0, r0, sl, lsl r5
   14348:	muleq	r8, r4, r3
   1434c:	andeq	r0, r5, r0, lsl r8
   14350:	andeq	r2, r5, r0, lsl #31
   14354:	muleq	r5, r4, r0
   14358:	andeq	r0, r0, r1, lsr r5
   1435c:	andeq	r3, r5, ip, lsr #5
   14360:	strdeq	r4, [r8], -r0
   14364:	andeq	r0, r5, r0, ror #14
   14368:	andeq	r2, r5, r0, lsl #30
   1436c:	andeq	r0, r5, r4, ror #31
   14370:	andeq	r0, r0, sl, lsr r5
   14374:	andeq	r4, r8, r8, lsl #5
   14378:	andeq	r0, r5, r4, lsl #14
   1437c:			; <UNDEFINED> instruction: 0x000531b4
   14380:	andeq	r0, r5, r4, lsl #31
   14384:	andeq	r4, r8, r8, lsr #4
   14388:	andeq	r0, r5, r4, lsr #13
   1438c:	andeq	r2, r5, r4, lsl lr
   14390:	andeq	r0, r5, r8, lsr #30
   14394:	andeq	r0, r0, r7, lsr r5
   14398:	andeq	r3, r5, r8, asr #2
   1439c:	andeq	r3, r5, r8, lsr #2
   143a0:	andeq	r4, r8, ip, ror r1
   143a4:	strdeq	r0, [r5], -r8
   143a8:	andeq	r3, r5, r8, asr #2
   143ac:	andeq	r0, r5, r0, lsl #29
   143b0:	andeq	r0, r0, r8, asr #10
   143b4:	andeq	r3, r5, r0, ror #2
   143b8:	andeq	r4, r8, r4, lsr #1
   143bc:	andeq	r0, r5, r4, lsl r5
   143c0:			; <UNDEFINED> instruction: 0x00052cb4
   143c4:	muleq	r5, ip, sp
   143c8:	andeq	r0, r0, lr, asr #10
   143cc:	andeq	r4, r8, ip, lsl r0
   143d0:	muleq	r5, r8, r4
   143d4:	andeq	r2, r5, r8, lsl #24
   143d8:	andeq	r0, r5, ip, lsl sp
   143dc:	andeq	r0, r0, lr, lsr r5
   143e0:	andeq	r3, r8, r4, lsl #23
   143e4:	andeq	r0, r5, r0
   143e8:	strdeq	r2, [r5], -r8
   143ec:	andeq	r0, r5, r8, lsl #17
   143f0:	andeq	r0, r0, r4, asr #10
   143f4:	andeq	r0, r0, r4, lsl #8
   143f8:	andeq	r3, r8, ip, lsr #22
   143fc:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   14400:	andeq	r2, r5, ip, lsr r7
   14404:	andeq	r0, r5, r4, lsr #16
   14408:	andeq	r0, r0, sl, asr r5
   1440c:	andeq	r3, r8, r0, asr #21
   14410:	andeq	pc, r4, ip, lsr pc	; <UNPREDICTABLE>
   14414:	andeq	r2, r5, ip, lsr #13
   14418:	andeq	r0, r5, r0, asr #15
   1441c:	andeq	r0, r0, r3, asr r5
   14420:	muleq	r6, r0, pc	; <UNPREDICTABLE>
   14424:	ldrdeq	r3, [r8], -ip
   14428:	andeq	pc, r4, ip, asr #28
   1442c:	andeq	r2, r5, ip, ror #11
   14430:	ldrdeq	r0, [r5], -r4
   14434:	andeq	r0, r0, r1, ror r5
   14438:	andeq	r2, r5, r4, asr #19
   1443c:	andeq	r3, r8, ip, ror #17
   14440:	andeq	pc, r4, ip, asr sp	; <UNPREDICTABLE>
   14444:	strdeq	r2, [r5], -ip
   14448:	andeq	r0, r5, r4, ror #11
   1444c:	andeq	r0, r0, r9, lsl #11
   14450:	andeq	r3, r8, r4, lsl #17
   14454:	andeq	pc, r4, r0, lsl #26
   14458:	andeq	r2, r5, r4, lsl #9
   1445c:	andeq	r0, r5, r4, lsl #11
   14460:	andeq	r0, r0, sp, ror #10
   14464:	andeq	r3, r8, r8, lsl #16
   14468:	andeq	pc, r4, r4, lsl #25
   1446c:	strdeq	r2, [r5], -r4
   14470:	andeq	r0, r5, r8, lsl #10
   14474:	andeq	r0, r0, r2, ror #10
   14478:	strdeq	r2, [r5], -r0
   1447c:	andeq	r3, r8, ip, lsr #14
   14480:	andeq	pc, r4, r8, lsr #23
   14484:	andeq	r2, r5, ip, lsr #6
   14488:	andeq	r0, r5, ip, lsr #8
   1448c:	andeq	r0, r0, r5, lsl #11
   14490:			; <UNDEFINED> instruction: 0x000526b8
   14494:	andeq	r2, r5, r0, ror #11
   14498:			; <UNDEFINED> instruction: 0x000633b0
   1449c:	andeq	r3, r8, r4, asr #7
   144a0:	andeq	pc, r4, r0, asr #16
   144a4:			; <UNDEFINED> instruction: 0x00051fb0
   144a8:	andeq	r0, r5, r4, asr #1
   144ac:	andeq	r0, r0, sl, ror r5
   144b0:	andeq	r2, r5, r0, asr #7
   144b4:	andeq	r3, r8, ip, ror #5
   144b8:	andeq	pc, r4, ip, asr r7	; <UNPREDICTABLE>
   144bc:	strdeq	r1, [r5], -ip
   144c0:	andeq	pc, r4, r4, ror #31
   144c4:	muleq	r0, sl, r5
   144c8:	andeq	r2, r5, r4, ror #5
   144cc:	andeq	r2, r5, ip, asr #5
   144d0:	andeq	r2, r5, r8, lsl #5
   144d4:	ldrdeq	r7, [r5], -r8
   144d8:	andeq	r2, r5, r8, lsl #5
   144dc:	andeq	r2, r5, r8, asr r2
   144e0:	andeq	fp, r5, r0, lsr #24
   144e4:	andeq	r2, r5, r8, lsr #4
   144e8:	strdeq	r3, [r8], -r0
   144ec:	andeq	pc, r4, r0, ror #10
   144f0:	andeq	r1, r5, r0, lsl #26
   144f4:	andeq	pc, r4, r4, ror #27
   144f8:			; <UNDEFINED> instruction: 0x000005be
   144fc:	andeq	r3, r8, r8, lsl #1
   14500:	strdeq	pc, [r4], -r8
   14504:	muleq	r5, r8, ip
   14508:	andeq	pc, r4, ip, ror sp	; <UNPREDICTABLE>
   1450c:	ldrdeq	r0, [r0], -r1
   14510:	andeq	r3, r8, r0, lsr #32
   14514:	muleq	r4, r0, r4
   14518:	andeq	r1, r5, r0, lsr ip
   1451c:	andeq	pc, r4, r8, lsl sp	; <UNPREDICTABLE>
   14520:	andeq	r0, r0, r4, asr #11
   14524:	muleq	r5, r8, r0
   14528:	andeq	r2, r8, ip, ror pc
   1452c:	andeq	r1, r5, r0, lsl #23
   14530:	andeq	pc, r4, r4, ror ip	; <UNPREDICTABLE>
   14534:	andeq	r0, r0, sl, asr #11
   14538:	andeq	r2, r8, r8, lsl pc
   1453c:	andeq	pc, r4, r8, lsl #7
   14540:	andeq	r1, r5, r8, lsr #22
   14544:	andeq	pc, r4, r0, lsl ip	; <UNPREDICTABLE>
   14548:			; <UNDEFINED> instruction: 0x000005b8
   1454c:	andeq	r1, r5, r8, lsr pc
   14550:	andeq	r2, r8, ip, ror lr
   14554:	strdeq	pc, [r4], -r8
   14558:	andeq	r1, r5, r8, ror #20
   1455c:	andeq	pc, r4, r8, ror fp	; <UNPREDICTABLE>
   14560:	andeq	r0, r0, r2, lsr #11
   14564:	andeq	r2, r8, ip, lsl lr
   14568:	muleq	r4, r8, r2
   1456c:	andeq	r1, r5, r8, lsl #20
   14570:	andeq	pc, r4, r8, lsl fp	; <UNPREDICTABLE>
   14574:	muleq	r0, r2, r5
   14578:			; <UNDEFINED> instruction: 0x00082dbc
   1457c:	andeq	pc, r4, ip, lsr #4
   14580:	andeq	r1, r5, ip, asr #19
   14584:			; <UNDEFINED> instruction: 0x0004fab4
   14588:	andeq	r0, r0, r9, lsr #11
   1458c:	andeq	r2, r8, r4, asr sp
   14590:	ldrdeq	pc, [r4], -r0
   14594:	andeq	r1, r5, r0, lsr #28
   14598:	andeq	pc, r4, r0, asr sl	; <UNPREDICTABLE>
   1459c:	ldrdeq	r0, [r0], -r6
   145a0:	strdeq	r2, [r8], -r4
   145a4:	andeq	r1, r5, r8, ror #26
   145a8:	andeq	pc, r4, r4, lsl #20
   145ac:			; <UNDEFINED> instruction: 0x000005b4
   145b0:	andeq	r0, r0, r3, lsl #8
   145b4:	ldr	r3, [pc, #-476]	; 143e0 <blkid_probe_get_size@plt+0xcec8>
   145b8:	add	r3, pc, r3
   145bc:	ldr	r3, [r3, #4]
   145c0:	cmp	r3, #3
   145c4:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   145c8:	ldr	r3, [pc, #-492]	; 143e4 <blkid_probe_get_size@plt+0xcecc>
   145cc:	ldr	r2, [pc, #-492]	; 143e8 <blkid_probe_get_size@plt+0xced0>
   145d0:	add	r3, pc, r3
   145d4:	add	r2, pc, r2
   145d8:	ldr	r0, [sp, #24]
   145dc:	str	r2, [sp, #4]
   145e0:	add	r3, r3, #1072	; 0x430
   145e4:	ldr	r2, [pc, #-512]	; 143ec <blkid_probe_get_size@plt+0xced4>
   145e8:	add	r3, r3, #12
   145ec:	str	r0, [sp, #8]
   145f0:	str	r3, [sp]
   145f4:	str	r9, [sp, #12]
   145f8:	ldr	r3, [pc, #-528]	; 143f0 <blkid_probe_get_size@plt+0xced8>
   145fc:	add	r2, pc, r2
   14600:	ldr	r0, [pc, #-532]	; 143f4 <blkid_probe_get_size@plt+0xcedc>
   14604:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14608:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   1460c:	ldr	r3, [pc, #-540]	; 143f8 <blkid_probe_get_size@plt+0xcee0>
   14610:	add	r3, pc, r3
   14614:	ldr	r3, [r3, #4]
   14618:	cmp	r3, #2
   1461c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14620:	ldr	r2, [sp, #32]
   14624:	ldr	r3, [pc, #-560]	; 143fc <blkid_probe_get_size@plt+0xcee4>
   14628:	ldr	r0, [sp, #24]
   1462c:	ldr	r1, [r2, #-8]
   14630:	ldr	r2, [pc, #-568]	; 14400 <blkid_probe_get_size@plt+0xcee8>
   14634:	add	r3, pc, r3
   14638:	add	r2, pc, r2
   1463c:	str	r2, [sp, #4]
   14640:	add	r3, r3, #1072	; 0x430
   14644:	ldr	r2, [pc, #-584]	; 14404 <blkid_probe_get_size@plt+0xceec>
   14648:	add	r3, r3, #12
   1464c:	str	r0, [sp, #8]
   14650:	str	r3, [sp]
   14654:	str	r1, [sp, #16]
   14658:	str	r9, [sp, #12]
   1465c:	ldr	r3, [pc, #-604]	; 14408 <blkid_probe_get_size@plt+0xcef0>
   14660:	add	r2, pc, r2
   14664:	mov	r1, #0
   14668:	ldr	r0, [pc, #-192]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   1466c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14670:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   14674:	ldr	r2, [pc, #-624]	; 1440c <blkid_probe_get_size@plt+0xcef4>
   14678:	mov	r1, r0
   1467c:	add	r2, pc, r2
   14680:	ldr	r2, [r2, #4]
   14684:	cmp	r2, #2
   14688:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1468c:	ldr	r2, [pc, #-644]	; 14410 <blkid_probe_get_size@plt+0xcef8>
   14690:	ldr	ip, [pc, #-644]	; 14414 <blkid_probe_get_size@plt+0xcefc>
   14694:	add	r2, pc, r2
   14698:	add	r2, r2, #1072	; 0x430
   1469c:	add	r2, r2, #12
   146a0:	ldr	r3, [sp, #24]
   146a4:	str	r2, [sp]
   146a8:	ldr	r2, [pc, #-664]	; 14418 <blkid_probe_get_size@plt+0xcf00>
   146ac:	add	ip, pc, ip
   146b0:	str	r3, [sp, #8]
   146b4:	str	sl, [sp, #16]
   146b8:	str	r9, [sp, #12]
   146bc:	str	ip, [sp, #4]
   146c0:	ldr	r3, [pc, #-684]	; 1441c <blkid_probe_get_size@plt+0xcf04>
   146c4:	add	r2, pc, r2
   146c8:	ldr	r0, [pc, #-288]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   146cc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   146d0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   146d4:	ldr	r1, [pc, #-700]	; 14420 <blkid_probe_get_size@plt+0xcf08>
   146d8:	mov	r0, sl
   146dc:	add	r1, pc, r1
   146e0:	bl	7314 <strcmp@plt>
   146e4:	cmp	r0, #0
   146e8:	bne	147c4 <blkid_probe_get_size@plt+0xd2ac>
   146ec:	cmp	r7, #5
   146f0:	beq	1492c <blkid_probe_get_size@plt+0xd414>
   146f4:	add	r8, sp, #192	; 0xc0
   146f8:	mov	r2, #10
   146fc:	sub	r1, r8, #108	; 0x6c
   14700:	mov	r0, r5
   14704:	bl	6c54 <strtoul@plt>
   14708:	ldr	r2, [sp, #32]
   1470c:	ldr	r3, [r2, #-876]	; 0xfffffc94
   14710:	str	r0, [r2, #-880]	; 0xfffffc90
   14714:	ldrb	r3, [r3]
   14718:	cmp	r3, #0
   1471c:	beq	14910 <blkid_probe_get_size@plt+0xd3f8>
   14720:	ldr	r3, [sp, #44]	; 0x2c
   14724:	ldr	r1, [r3, #8]
   14728:	cmp	r1, #2
   1472c:	beq	1498c <blkid_probe_get_size@plt+0xd474>
   14730:	cmp	r1, #0
   14734:	beq	148b4 <blkid_probe_get_size@plt+0xd39c>
   14738:	mov	r1, #0
   1473c:	str	r1, [sp]
   14740:	mov	r3, r5
   14744:	mov	r2, r7
   14748:	sub	r0, r8, #24
   1474c:	mov	r1, #36	; 0x24
   14750:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14754:	cmp	r0, #0
   14758:	bge	1405c <blkid_probe_get_size@plt+0xcb44>
   1475c:	ldr	r3, [pc, #-832]	; 14424 <blkid_probe_get_size@plt+0xcf0c>
   14760:	add	r3, pc, r3
   14764:	ldr	r3, [r3, #4]
   14768:	cmp	r3, #2
   1476c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14770:	ldr	r2, [sp, #32]
   14774:	ldr	r3, [pc, #-852]	; 14428 <blkid_probe_get_size@plt+0xcf10>
   14778:	ldr	r0, [sp, #24]
   1477c:	ldr	r1, [r2, #-8]
   14780:	ldr	r2, [pc, #-860]	; 1442c <blkid_probe_get_size@plt+0xcf14>
   14784:	add	r3, pc, r3
   14788:	add	r2, pc, r2
   1478c:	str	r2, [sp, #4]
   14790:	add	r3, r3, #1072	; 0x430
   14794:	ldr	r2, [pc, #-876]	; 14430 <blkid_probe_get_size@plt+0xcf18>
   14798:	add	r3, r3, #12
   1479c:	str	r0, [sp, #8]
   147a0:	str	r3, [sp]
   147a4:	str	r1, [sp, #16]
   147a8:	str	r9, [sp, #12]
   147ac:	ldr	r3, [pc, #-896]	; 14434 <blkid_probe_get_size@plt+0xcf1c>
   147b0:	add	r2, pc, r2
   147b4:	mov	r1, #0
   147b8:	ldr	r0, [pc, #-528]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   147bc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   147c0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   147c4:	ldr	r1, [pc, #-916]	; 14438 <blkid_probe_get_size@plt+0xcf20>
   147c8:	mov	r0, sl
   147cc:	add	r1, pc, r1
   147d0:	bl	7314 <strcmp@plt>
   147d4:	cmp	r0, #0
   147d8:	bne	14dd0 <blkid_probe_get_size@plt+0xd8b8>
   147dc:	cmp	r7, #5
   147e0:	beq	14d70 <blkid_probe_get_size@plt+0xd858>
   147e4:	add	r8, sp, #192	; 0xc0
   147e8:	mov	r2, #10
   147ec:	sub	r1, r8, #108	; 0x6c
   147f0:	mov	r0, r5
   147f4:	bl	6c54 <strtoul@plt>
   147f8:	ldr	r2, [sp, #32]
   147fc:	ldr	r3, [r2, #-876]	; 0xfffffc94
   14800:	str	r0, [r2, #-880]	; 0xfffffc90
   14804:	ldrb	r3, [r3]
   14808:	cmp	r3, #0
   1480c:	beq	14c1c <blkid_probe_get_size@plt+0xd704>
   14810:	ldr	r3, [sp, #44]	; 0x2c
   14814:	ldr	r1, [r3, #8]
   14818:	cmp	r1, #2
   1481c:	beq	14b9c <blkid_probe_get_size@plt+0xd684>
   14820:	cmp	r1, #0
   14824:	beq	14a0c <blkid_probe_get_size@plt+0xd4f4>
   14828:	mov	r1, #0
   1482c:	str	r1, [sp]
   14830:	mov	r3, r5
   14834:	mov	r2, r7
   14838:	sub	r0, r8, #24
   1483c:	mov	r1, #37	; 0x25
   14840:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14844:	cmp	r0, #0
   14848:	bge	1405c <blkid_probe_get_size@plt+0xcb44>
   1484c:	ldr	r3, [pc, #-1048]	; 1443c <blkid_probe_get_size@plt+0xcf24>
   14850:	add	r3, pc, r3
   14854:	ldr	r3, [r3, #4]
   14858:	cmp	r3, #2
   1485c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14860:	ldr	r2, [sp, #32]
   14864:	ldr	r3, [pc, #-1068]	; 14440 <blkid_probe_get_size@plt+0xcf28>
   14868:	ldr	r0, [sp, #24]
   1486c:	ldr	r1, [r2, #-8]
   14870:	ldr	r2, [pc, #-1076]	; 14444 <blkid_probe_get_size@plt+0xcf2c>
   14874:	add	r3, pc, r3
   14878:	add	r2, pc, r2
   1487c:	str	r2, [sp, #4]
   14880:	add	r3, r3, #1072	; 0x430
   14884:	ldr	r2, [pc, #-1092]	; 14448 <blkid_probe_get_size@plt+0xcf30>
   14888:	add	r3, r3, #12
   1488c:	str	r0, [sp, #8]
   14890:	str	r3, [sp]
   14894:	str	r1, [sp, #16]
   14898:	str	r9, [sp, #12]
   1489c:	ldr	r3, [pc, #-1112]	; 1444c <blkid_probe_get_size@plt+0xcf34>
   148a0:	add	r2, pc, r2
   148a4:	mov	r1, #0
   148a8:	ldr	r0, [pc, #-768]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   148ac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   148b0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   148b4:	ldr	r3, [pc, #-1132]	; 14450 <blkid_probe_get_size@plt+0xcf38>
   148b8:	add	r3, pc, r3
   148bc:	ldr	r3, [r3, #4]
   148c0:	cmp	r3, #2
   148c4:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   148c8:	ldr	r3, [pc, #-1148]	; 14454 <blkid_probe_get_size@plt+0xcf3c>
   148cc:	ldr	r2, [pc, #-1148]	; 14458 <blkid_probe_get_size@plt+0xcf40>
   148d0:	add	r3, pc, r3
   148d4:	add	r2, pc, r2
   148d8:	ldr	r0, [sp, #24]
   148dc:	str	r2, [sp, #4]
   148e0:	add	r3, r3, #1072	; 0x430
   148e4:	ldr	r2, [pc, #-1168]	; 1445c <blkid_probe_get_size@plt+0xcf44>
   148e8:	add	r3, r3, #12
   148ec:	str	r0, [sp, #8]
   148f0:	str	r3, [sp]
   148f4:	str	sl, [sp, #16]
   148f8:	str	r9, [sp, #12]
   148fc:	ldr	r3, [pc, #-1188]	; 14460 <blkid_probe_get_size@plt+0xcf48>
   14900:	add	r2, pc, r2
   14904:	ldr	r0, [pc, #-860]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   14908:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1490c:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   14910:	sub	r1, r8, #112	; 0x70
   14914:	str	r1, [sp]
   14918:	mov	r2, r7
   1491c:	sub	r0, r8, #24
   14920:	mov	r1, #39	; 0x27
   14924:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14928:	b	14754 <blkid_probe_get_size@plt+0xd23c>
   1492c:	ldr	r2, [pc, #-1232]	; 14464 <blkid_probe_get_size@plt+0xcf4c>
   14930:	mov	r1, r0
   14934:	add	r2, pc, r2
   14938:	ldr	r2, [r2, #4]
   1493c:	cmp	r2, #2
   14940:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14944:	ldr	r2, [pc, #-1252]	; 14468 <blkid_probe_get_size@plt+0xcf50>
   14948:	ldr	ip, [pc, #-1252]	; 1446c <blkid_probe_get_size@plt+0xcf54>
   1494c:	add	r2, pc, r2
   14950:	add	r2, r2, #1072	; 0x430
   14954:	add	r2, r2, #12
   14958:	ldr	r3, [sp, #24]
   1495c:	str	r2, [sp]
   14960:	ldr	r2, [pc, #-1272]	; 14470 <blkid_probe_get_size@plt+0xcf58>
   14964:	add	ip, pc, ip
   14968:	str	r3, [sp, #8]
   1496c:	str	sl, [sp, #16]
   14970:	str	r9, [sp, #12]
   14974:	str	ip, [sp, #4]
   14978:	ldr	r3, [pc, #-1292]	; 14474 <blkid_probe_get_size@plt+0xcf5c>
   1497c:	add	r2, pc, r2
   14980:	ldr	r0, [pc, #-984]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   14984:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14988:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1498c:	ldr	r0, [pc, #-1308]	; 14478 <blkid_probe_get_size@plt+0xcf60>
   14990:	ldrb	r1, [r4, #1]
   14994:	add	r0, pc, r0
   14998:	bl	74c4 <strchr@plt>
   1499c:	cmp	r0, #0
   149a0:	bne	14738 <blkid_probe_get_size@plt+0xd220>
   149a4:	ldr	r3, [sp, #32]
   149a8:	ldr	r2, [sp, #44]	; 0x2c
   149ac:	str	r7, [sp, #52]	; 0x34
   149b0:	str	r5, [r3, #-872]	; 0xfffffc98
   149b4:	str	r0, [r3, #-864]	; 0xfffffca0
   149b8:	ldr	r3, [r2, #32]
   149bc:	str	r8, [sp, #76]	; 0x4c
   149c0:	mov	r4, r0
   149c4:	mov	r8, r6
   149c8:	mov	r7, r3
   149cc:	mov	r6, r5
   149d0:	mov	r5, r2
   149d4:	cmp	r4, r7
   149d8:	beq	14aa0 <blkid_probe_get_size@plt+0xd588>
   149dc:	ldr	r1, [r5, #28]
   149e0:	ldr	ip, [r5, #24]
   149e4:	add	sl, r1, r4, lsl #3
   149e8:	ldr	r0, [r1, r4, lsl #3]
   149ec:	ldr	ip, [ip]
   149f0:	mov	r1, r6
   149f4:	add	r0, ip, r0
   149f8:	bl	7314 <strcmp@plt>
   149fc:	cmp	r0, #0
   14a00:	beq	14a68 <blkid_probe_get_size@plt+0xd550>
   14a04:	add	r4, r4, #1
   14a08:	b	149d4 <blkid_probe_get_size@plt+0xd4bc>
   14a0c:	ldr	r3, [pc, #-1432]	; 1447c <blkid_probe_get_size@plt+0xcf64>
   14a10:	add	r3, pc, r3
   14a14:	ldr	r3, [r3, #4]
   14a18:	cmp	r3, #2
   14a1c:	ble	11474 <blkid_probe_get_size@plt+0x9f5c>
   14a20:	ldr	r3, [pc, #-1448]	; 14480 <blkid_probe_get_size@plt+0xcf68>
   14a24:	ldr	r2, [pc, #-1448]	; 14484 <blkid_probe_get_size@plt+0xcf6c>
   14a28:	add	r3, pc, r3
   14a2c:	add	r2, pc, r2
   14a30:	ldr	r0, [sp, #24]
   14a34:	str	r2, [sp, #4]
   14a38:	add	r3, r3, #1072	; 0x430
   14a3c:	ldr	r2, [pc, #-1468]	; 14488 <blkid_probe_get_size@plt+0xcf70>
   14a40:	add	r3, r3, #12
   14a44:	str	r0, [sp, #8]
   14a48:	str	r3, [sp]
   14a4c:	str	sl, [sp, #16]
   14a50:	str	r9, [sp, #12]
   14a54:	ldr	r3, [pc, #-1488]	; 1448c <blkid_probe_get_size@plt+0xcf74>
   14a58:	add	r2, pc, r2
   14a5c:	ldr	r0, [pc, #-1204]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   14a60:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14a64:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   14a68:	mov	r6, r8
   14a6c:	ldr	r7, [sp, #52]	; 0x34
   14a70:	ldr	r8, [sp, #76]	; 0x4c
   14a74:	ldr	ip, [sl, #4]
   14a78:	ldr	lr, [sp, #32]
   14a7c:	sub	r3, r8, #112	; 0x70
   14a80:	str	r3, [sp]
   14a84:	mov	r2, r7
   14a88:	sub	r0, r8, #24
   14a8c:	mov	r3, #0
   14a90:	mov	r1, #39	; 0x27
   14a94:	str	ip, [lr, #-880]	; 0xfffffc90
   14a98:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14a9c:	b	14754 <blkid_probe_get_size@plt+0xd23c>
   14aa0:	mov	r6, r8
   14aa4:	ldr	r8, [sp, #76]	; 0x4c
   14aa8:	ldr	r7, [sp, #52]	; 0x34
   14aac:	sub	r1, r8, #96	; 0x60
   14ab0:	sub	r0, r8, #104	; 0x68
   14ab4:	bl	4d3f4 <blkid_probe_get_size@plt+0x45edc>
   14ab8:	subs	r1, r0, #0
   14abc:	bge	14ad8 <blkid_probe_get_size@plt+0xd5c0>
   14ac0:	ldr	r3, [sp, #32]
   14ac4:	ldr	r2, [pc, #-1596]	; 14490 <blkid_probe_get_size@plt+0xcf78>
   14ac8:	mov	r0, #0
   14acc:	ldr	r3, [r3, #-872]	; 0xfffffc98
   14ad0:	add	r2, pc, r2
   14ad4:	bl	10c64 <blkid_probe_get_size@plt+0x974c>
   14ad8:	ldr	r0, [sp, #44]	; 0x2c
   14adc:	ldr	r2, [r0, #32]
   14ae0:	ldr	r1, [r0, #36]	; 0x24
   14ae4:	add	r3, r2, #1
   14ae8:	cmp	r3, r1
   14aec:	bcc	14b30 <blkid_probe_get_size@plt+0xd618>
   14af0:	cmp	r1, #0
   14af4:	movne	r4, r1
   14af8:	moveq	r4, #8
   14afc:	add	r1, r1, r4
   14b00:	mov	r2, #8
   14b04:	ldr	r0, [r0, #28]
   14b08:	bl	711c <reallocarray@plt>
   14b0c:	cmp	r0, #0
   14b10:	ldreq	r3, [sp, #32]
   14b14:	ldreq	ip, [r3, #-864]	; 0xfffffca0
   14b18:	beq	14a78 <blkid_probe_get_size@plt+0xd560>
   14b1c:	ldr	r1, [sp, #44]	; 0x2c
   14b20:	ldrd	r2, [r1, #32]
   14b24:	str	r0, [r1, #28]
   14b28:	add	r3, r3, r4
   14b2c:	str	r3, [r1, #36]	; 0x24
   14b30:	ldr	sl, [sp, #44]	; 0x2c
   14b34:	ldr	r5, [sp, #32]
   14b38:	ldr	r3, [sl, #28]
   14b3c:	ldr	r1, [r5, #-864]	; 0xfffffca0
   14b40:	add	r3, r3, r2, lsl #3
   14b44:	ldr	r4, [r5, #-872]	; 0xfffffc98
   14b48:	str	r1, [r3, #4]
   14b4c:	mov	r0, r4
   14b50:	bl	723c <strlen@plt>
   14b54:	mov	r1, r4
   14b58:	mov	r2, r0
   14b5c:	ldr	r0, [sl, #24]
   14b60:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   14b64:	cmp	r0, #0
   14b68:	ldreq	ip, [r5, #-864]	; 0xfffffca0
   14b6c:	beq	14a78 <blkid_probe_get_size@plt+0xd560>
   14b70:	ldr	r1, [sp, #44]	; 0x2c
   14b74:	ldr	r2, [r1, #32]
   14b78:	ldr	r3, [r1, #28]
   14b7c:	str	r0, [r3, r2, lsl #3]
   14b80:	mov	r2, r1
   14b84:	ldr	r3, [r1, #32]
   14b88:	ldr	r1, [sp, #32]
   14b8c:	add	r3, r3, #1
   14b90:	str	r3, [r2, #32]
   14b94:	ldr	ip, [r1, #-864]	; 0xfffffca0
   14b98:	b	14a78 <blkid_probe_get_size@plt+0xd560>
   14b9c:	ldr	r0, [pc, #-1808]	; 14494 <blkid_probe_get_size@plt+0xcf7c>
   14ba0:	ldrb	r1, [r4, #1]
   14ba4:	add	r0, pc, r0
   14ba8:	bl	74c4 <strchr@plt>
   14bac:	cmp	r0, #0
   14bb0:	bne	14828 <blkid_probe_get_size@plt+0xd310>
   14bb4:	ldr	r3, [sp, #32]
   14bb8:	ldr	r2, [sp, #44]	; 0x2c
   14bbc:	str	r7, [sp, #52]	; 0x34
   14bc0:	str	r5, [r3, #-868]	; 0xfffffc9c
   14bc4:	str	r0, [r3, #-864]	; 0xfffffca0
   14bc8:	ldr	r3, [r2, #44]	; 0x2c
   14bcc:	str	r8, [sp, #76]	; 0x4c
   14bd0:	mov	r4, r0
   14bd4:	mov	r8, r6
   14bd8:	mov	r7, r3
   14bdc:	mov	r6, r5
   14be0:	mov	r5, r2
   14be4:	cmp	r4, r7
   14be8:	beq	14c70 <blkid_probe_get_size@plt+0xd758>
   14bec:	ldr	r1, [r5, #40]	; 0x28
   14bf0:	ldr	ip, [r5, #24]
   14bf4:	add	sl, r1, r4, lsl #3
   14bf8:	ldr	r0, [r1, r4, lsl #3]
   14bfc:	ldr	ip, [ip]
   14c00:	mov	r1, r6
   14c04:	add	r0, ip, r0
   14c08:	bl	7314 <strcmp@plt>
   14c0c:	cmp	r0, #0
   14c10:	beq	14c38 <blkid_probe_get_size@plt+0xd720>
   14c14:	add	r4, r4, #1
   14c18:	b	14be4 <blkid_probe_get_size@plt+0xd6cc>
   14c1c:	sub	r1, r8, #112	; 0x70
   14c20:	str	r1, [sp]
   14c24:	mov	r2, r7
   14c28:	sub	r0, r8, #24
   14c2c:	mov	r1, #40	; 0x28
   14c30:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14c34:	b	14844 <blkid_probe_get_size@plt+0xd32c>
   14c38:	mov	r6, r8
   14c3c:	ldr	r7, [sp, #52]	; 0x34
   14c40:	ldr	r8, [sp, #76]	; 0x4c
   14c44:	ldr	ip, [sl, #4]
   14c48:	ldr	lr, [sp, #32]
   14c4c:	sub	r3, r8, #112	; 0x70
   14c50:	str	r3, [sp]
   14c54:	mov	r2, r7
   14c58:	sub	r0, r8, #24
   14c5c:	mov	r3, #0
   14c60:	mov	r1, #40	; 0x28
   14c64:	str	ip, [lr, #-880]	; 0xfffffc90
   14c68:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14c6c:	b	14844 <blkid_probe_get_size@plt+0xd32c>
   14c70:	mov	r6, r8
   14c74:	ldr	r8, [sp, #76]	; 0x4c
   14c78:	mov	r2, #2
   14c7c:	sub	r1, r8, #96	; 0x60
   14c80:	sub	r0, r8, #100	; 0x64
   14c84:	ldr	r7, [sp, #52]	; 0x34
   14c88:	bl	41338 <blkid_probe_get_size@plt+0x39e20>
   14c8c:	subs	r1, r0, #0
   14c90:	bge	14cac <blkid_probe_get_size@plt+0xd794>
   14c94:	ldr	r3, [sp, #32]
   14c98:	ldr	r2, [pc, #-2056]	; 14498 <blkid_probe_get_size@plt+0xcf80>
   14c9c:	mov	r0, #0
   14ca0:	ldr	r3, [r3, #-868]	; 0xfffffc9c
   14ca4:	add	r2, pc, r2
   14ca8:	bl	10c64 <blkid_probe_get_size@plt+0x974c>
   14cac:	ldr	r0, [sp, #44]	; 0x2c
   14cb0:	ldr	r2, [r0, #44]	; 0x2c
   14cb4:	ldr	r1, [r0, #48]	; 0x30
   14cb8:	add	r3, r2, #1
   14cbc:	cmp	r3, r1
   14cc0:	bcc	14d04 <blkid_probe_get_size@plt+0xd7ec>
   14cc4:	cmp	r1, #0
   14cc8:	movne	r4, r1
   14ccc:	moveq	r4, #8
   14cd0:	add	r1, r1, r4
   14cd4:	mov	r2, #8
   14cd8:	ldr	r0, [r0, #40]	; 0x28
   14cdc:	bl	711c <reallocarray@plt>
   14ce0:	cmp	r0, #0
   14ce4:	ldreq	r3, [sp, #32]
   14ce8:	ldreq	ip, [r3, #-864]	; 0xfffffca0
   14cec:	beq	14c48 <blkid_probe_get_size@plt+0xd730>
   14cf0:	ldr	r1, [sp, #44]	; 0x2c
   14cf4:	ldrd	r2, [r1, #44]	; 0x2c
   14cf8:	str	r0, [r1, #40]	; 0x28
   14cfc:	add	r3, r3, r4
   14d00:	str	r3, [r1, #48]	; 0x30
   14d04:	ldr	sl, [sp, #44]	; 0x2c
   14d08:	ldr	r5, [sp, #32]
   14d0c:	ldr	r3, [sl, #40]	; 0x28
   14d10:	ldr	r1, [r5, #-864]	; 0xfffffca0
   14d14:	add	r3, r3, r2, lsl #3
   14d18:	ldr	r4, [r5, #-868]	; 0xfffffc9c
   14d1c:	str	r1, [r3, #4]
   14d20:	mov	r0, r4
   14d24:	bl	723c <strlen@plt>
   14d28:	mov	r1, r4
   14d2c:	mov	r2, r0
   14d30:	ldr	r0, [sl, #24]
   14d34:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   14d38:	cmp	r0, #0
   14d3c:	ldreq	ip, [r5, #-864]	; 0xfffffca0
   14d40:	beq	14c48 <blkid_probe_get_size@plt+0xd730>
   14d44:	ldr	r1, [sp, #44]	; 0x2c
   14d48:	ldr	r2, [r1, #44]	; 0x2c
   14d4c:	ldr	r3, [r1, #40]	; 0x28
   14d50:	str	r0, [r3, r2, lsl #3]
   14d54:	mov	r2, r1
   14d58:	ldr	r3, [r1, #44]	; 0x2c
   14d5c:	ldr	r1, [sp, #32]
   14d60:	add	r3, r3, #1
   14d64:	str	r3, [r2, #44]	; 0x2c
   14d68:	ldr	ip, [r1, #-864]	; 0xfffffca0
   14d6c:	b	14c48 <blkid_probe_get_size@plt+0xd730>
   14d70:	ldr	r2, [pc, #-2268]	; 1449c <blkid_probe_get_size@plt+0xcf84>
   14d74:	mov	r1, r0
   14d78:	add	r2, pc, r2
   14d7c:	ldr	r2, [r2, #4]
   14d80:	cmp	r2, #2
   14d84:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14d88:	ldr	r2, [pc, #-2288]	; 144a0 <blkid_probe_get_size@plt+0xcf88>
   14d8c:	ldr	ip, [pc, #-2288]	; 144a4 <blkid_probe_get_size@plt+0xcf8c>
   14d90:	add	r2, pc, r2
   14d94:	add	r2, r2, #1072	; 0x430
   14d98:	add	r2, r2, #12
   14d9c:	ldr	r3, [sp, #24]
   14da0:	str	r2, [sp]
   14da4:	ldr	r2, [pc, #-2308]	; 144a8 <blkid_probe_get_size@plt+0xcf90>
   14da8:	add	ip, pc, ip
   14dac:	str	r3, [sp, #8]
   14db0:	str	sl, [sp, #16]
   14db4:	str	r9, [sp, #12]
   14db8:	str	ip, [sp, #4]
   14dbc:	ldr	r3, [pc, #-2328]	; 144ac <blkid_probe_get_size@plt+0xcf94>
   14dc0:	add	r2, pc, r2
   14dc4:	ldr	r0, [pc, #-2076]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   14dc8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14dcc:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   14dd0:	ldr	r1, [pc, #-2344]	; 144b0 <blkid_probe_get_size@plt+0xcf98>
   14dd4:	mov	r0, sl
   14dd8:	add	r1, pc, r1
   14ddc:	bl	7314 <strcmp@plt>
   14de0:	subs	r4, r0, #0
   14de4:	bne	14eb4 <blkid_probe_get_size@plt+0xd99c>
   14de8:	cmp	r7, #5
   14dec:	beq	1531c <blkid_probe_get_size@plt+0xde04>
   14df0:	add	r8, sp, #192	; 0xc0
   14df4:	sub	r1, r8, #96	; 0x60
   14df8:	mov	r2, #8
   14dfc:	mov	r0, r5
   14e00:	bl	69e4 <strtol@plt>
   14e04:	ldr	r2, [sp, #32]
   14e08:	ldr	r3, [r2, #-864]	; 0xfffffca0
   14e0c:	str	r0, [r2, #-876]	; 0xfffffc94
   14e10:	ldrb	r3, [r3]
   14e14:	cmp	r3, #0
   14e18:	subeq	r1, r8, #108	; 0x6c
   14e1c:	streq	r1, [sp]
   14e20:	moveq	r2, r7
   14e24:	subeq	r0, r8, #24
   14e28:	moveq	r1, #41	; 0x29
   14e2c:	strne	r4, [sp]
   14e30:	movne	r3, r5
   14e34:	movne	r2, r7
   14e38:	subne	r0, r8, #24
   14e3c:	movne	r1, #38	; 0x26
   14e40:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14e44:	cmp	r0, #0
   14e48:	bge	1405c <blkid_probe_get_size@plt+0xcb44>
   14e4c:	ldr	r3, [pc, #-2464]	; 144b4 <blkid_probe_get_size@plt+0xcf9c>
   14e50:	add	r3, pc, r3
   14e54:	ldr	r3, [r3, #4]
   14e58:	cmp	r3, #2
   14e5c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   14e60:	ldr	r2, [sp, #32]
   14e64:	ldr	r3, [pc, #-2484]	; 144b8 <blkid_probe_get_size@plt+0xcfa0>
   14e68:	ldr	r0, [sp, #24]
   14e6c:	ldr	r1, [r2, #-8]
   14e70:	ldr	r2, [pc, #-2492]	; 144bc <blkid_probe_get_size@plt+0xcfa4>
   14e74:	add	r3, pc, r3
   14e78:	add	r2, pc, r2
   14e7c:	str	r2, [sp, #4]
   14e80:	add	r3, r3, #1072	; 0x430
   14e84:	ldr	r2, [pc, #-2508]	; 144c0 <blkid_probe_get_size@plt+0xcfa8>
   14e88:	add	r3, r3, #12
   14e8c:	str	r0, [sp, #8]
   14e90:	str	r3, [sp]
   14e94:	str	r1, [sp, #16]
   14e98:	str	r9, [sp, #12]
   14e9c:	ldr	r3, [pc, #-2528]	; 144c4 <blkid_probe_get_size@plt+0xcfac>
   14ea0:	add	r2, pc, r2
   14ea4:	mov	r1, #0
   14ea8:	ldr	r0, [pc, #-2304]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   14eac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   14eb0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   14eb4:	ldr	r1, [pc, #-2548]	; 144c8 <blkid_probe_get_size@plt+0xcfb0>
   14eb8:	mov	r0, sl
   14ebc:	add	r1, pc, r1
   14ec0:	bl	7314 <strcmp@plt>
   14ec4:	subs	r4, r0, #0
   14ec8:	bne	153e4 <blkid_probe_get_size@plt+0xdecc>
   14ecc:	cmp	r7, #5
   14ed0:	beq	152bc <blkid_probe_get_size@plt+0xdda4>
   14ed4:	ldr	r1, [pc, #-2576]	; 144cc <blkid_probe_get_size@plt+0xcfb4>
   14ed8:	mov	r0, r5
   14edc:	add	r1, pc, r1
   14ee0:	bl	7050 <strstr@plt>
   14ee4:	cmp	r0, #0
   14ee8:	beq	14f28 <blkid_probe_get_size@plt+0xda10>
   14eec:	mov	r2, #10
   14ef0:	mov	r1, r4
   14ef4:	add	r0, r0, #14
   14ef8:	bl	69e4 <strtol@plt>
   14efc:	ldr	ip, [sp, #32]
   14f00:	add	r2, sp, #96	; 0x60
   14f04:	str	r2, [sp]
   14f08:	mov	r3, r4
   14f0c:	mov	r2, r7
   14f10:	mov	r1, #35	; 0x23
   14f14:	str	r0, [ip, #-864]	; 0xfffffca0
   14f18:	add	r0, sp, #168	; 0xa8
   14f1c:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14f20:	cmp	r0, #0
   14f24:	blt	1537c <blkid_probe_get_size@plt+0xde64>
   14f28:	ldr	r1, [pc, #-2656]	; 144d0 <blkid_probe_get_size@plt+0xcfb8>
   14f2c:	mov	r0, r5
   14f30:	add	r1, pc, r1
   14f34:	bl	7050 <strstr@plt>
   14f38:	cmp	r0, #0
   14f3c:	beq	14f7c <blkid_probe_get_size@plt+0xda64>
   14f40:	ldr	r1, [pc, #-2676]	; 144d4 <blkid_probe_get_size@plt+0xcfbc>
   14f44:	add	r4, r0, #14
   14f48:	mov	r0, r4
   14f4c:	add	r1, pc, r1
   14f50:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   14f54:	subs	r8, r0, #0
   14f58:	beq	15288 <blkid_probe_get_size@plt+0xdd70>
   14f5c:	mov	r3, #0
   14f60:	str	r3, [sp]
   14f64:	mov	r2, r7
   14f68:	mov	r1, #31
   14f6c:	add	r0, sp, #168	; 0xa8
   14f70:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14f74:	cmp	r0, #0
   14f78:	blt	15220 <blkid_probe_get_size@plt+0xdd08>
   14f7c:	ldr	r1, [pc, #-2732]	; 144d8 <blkid_probe_get_size@plt+0xcfc0>
   14f80:	mov	r0, r5
   14f84:	add	r1, pc, r1
   14f88:	bl	7050 <strstr@plt>
   14f8c:	cmp	r0, #0
   14f90:	beq	14fb8 <blkid_probe_get_size@plt+0xdaa0>
   14f94:	mov	r4, #0
   14f98:	str	r4, [sp]
   14f9c:	mov	r3, r4
   14fa0:	mov	r2, r7
   14fa4:	mov	r1, #33	; 0x21
   14fa8:	add	r0, sp, #168	; 0xa8
   14fac:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14fb0:	cmp	r0, r4
   14fb4:	blt	15048 <blkid_probe_get_size@plt+0xdb30>
   14fb8:	ldr	r1, [pc, #-2788]	; 144dc <blkid_probe_get_size@plt+0xcfc4>
   14fbc:	mov	r0, r5
   14fc0:	add	r1, pc, r1
   14fc4:	bl	7050 <strstr@plt>
   14fc8:	subs	r4, r0, #0
   14fcc:	beq	15180 <blkid_probe_get_size@plt+0xdc68>
   14fd0:	ldr	r2, [pc, #-2808]	; 144e0 <blkid_probe_get_size@plt+0xcfc8>
   14fd4:	mov	r3, #0
   14fd8:	add	r2, pc, r2
   14fdc:	str	r2, [sp]
   14fe0:	mov	r1, #34	; 0x22
   14fe4:	mov	r2, r7
   14fe8:	add	r0, sp, #168	; 0xa8
   14fec:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   14ff0:	cmp	r0, #0
   14ff4:	blt	15118 <blkid_probe_get_size@plt+0xdc00>
   14ff8:	ldr	r1, [pc, #-2844]	; 144e4 <blkid_probe_get_size@plt+0xcfcc>
   14ffc:	mov	r0, r5
   15000:	add	r1, pc, r1
   15004:	bl	7050 <strstr@plt>
   15008:	subs	r3, r0, #0
   1500c:	beq	11474 <blkid_probe_get_size@plt+0x9f5c>
   15010:	mov	r4, #0
   15014:	add	r3, r3, #12
   15018:	mov	r2, r7
   1501c:	str	r4, [sp]
   15020:	mov	r1, #43	; 0x2b
   15024:	add	r0, sp, #168	; 0xa8
   15028:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   1502c:	cmp	r0, r4
   15030:	blt	150b0 <blkid_probe_get_size@plt+0xdb98>
   15034:	ldr	r2, [sp, #32]
   15038:	ldrb	r3, [r2, #-787]	; 0xfffffced
   1503c:	orr	r3, r3, #2
   15040:	strb	r3, [r2, #-787]	; 0xfffffced
   15044:	b	11474 <blkid_probe_get_size@plt+0x9f5c>
   15048:	ldr	r3, [pc, #-2920]	; 144e8 <blkid_probe_get_size@plt+0xcfd0>
   1504c:	add	r3, pc, r3
   15050:	ldr	r3, [r3, #4]
   15054:	cmp	r3, #2
   15058:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1505c:	ldr	r2, [sp, #32]
   15060:	ldr	r3, [pc, #-2940]	; 144ec <blkid_probe_get_size@plt+0xcfd4>
   15064:	ldr	r1, [sp, #24]
   15068:	ldr	r0, [r2, #-8]
   1506c:	ldr	r2, [pc, #-2948]	; 144f0 <blkid_probe_get_size@plt+0xcfd8>
   15070:	add	r3, pc, r3
   15074:	add	r2, pc, r2
   15078:	str	r2, [sp, #4]
   1507c:	add	r3, r3, #1072	; 0x430
   15080:	ldr	r2, [pc, #-2964]	; 144f4 <blkid_probe_get_size@plt+0xcfdc>
   15084:	add	r3, r3, #12
   15088:	str	r1, [sp, #8]
   1508c:	str	r3, [sp]
   15090:	str	r0, [sp, #16]
   15094:	str	r9, [sp, #12]
   15098:	mov	r1, r4
   1509c:	ldr	r3, [pc, #-2988]	; 144f8 <blkid_probe_get_size@plt+0xcfe0>
   150a0:	add	r2, pc, r2
   150a4:	ldr	r0, [pc, #-2812]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   150a8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   150ac:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   150b0:	ldr	r3, [pc, #-3004]	; 144fc <blkid_probe_get_size@plt+0xcfe4>
   150b4:	add	r3, pc, r3
   150b8:	ldr	r3, [r3, #4]
   150bc:	cmp	r3, #2
   150c0:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   150c4:	ldr	r2, [sp, #32]
   150c8:	ldr	r3, [pc, #-3024]	; 14500 <blkid_probe_get_size@plt+0xcfe8>
   150cc:	ldr	r1, [sp, #24]
   150d0:	ldr	r0, [r2, #-8]
   150d4:	ldr	r2, [pc, #-3032]	; 14504 <blkid_probe_get_size@plt+0xcfec>
   150d8:	add	r3, pc, r3
   150dc:	add	r2, pc, r2
   150e0:	str	r2, [sp, #4]
   150e4:	add	r3, r3, #1072	; 0x430
   150e8:	ldr	r2, [pc, #-3048]	; 14508 <blkid_probe_get_size@plt+0xcff0>
   150ec:	add	r3, r3, #12
   150f0:	str	r1, [sp, #8]
   150f4:	str	r3, [sp]
   150f8:	str	r0, [sp, #16]
   150fc:	str	r9, [sp, #12]
   15100:	mov	r1, r4
   15104:	ldr	r3, [pc, #-3072]	; 1450c <blkid_probe_get_size@plt+0xcff4>
   15108:	add	r2, pc, r2
   1510c:	ldr	r0, [pc, #-2916]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15110:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   15114:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   15118:	ldr	r3, [pc, #-3088]	; 14510 <blkid_probe_get_size@plt+0xcff8>
   1511c:	add	r3, pc, r3
   15120:	ldr	r3, [r3, #4]
   15124:	cmp	r3, #2
   15128:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   1512c:	ldr	r2, [sp, #32]
   15130:	ldr	r3, [pc, #-3108]	; 14514 <blkid_probe_get_size@plt+0xcffc>
   15134:	ldr	r0, [sp, #24]
   15138:	ldr	r1, [r2, #-8]
   1513c:	ldr	r2, [pc, #-3116]	; 14518 <blkid_probe_get_size@plt+0xd000>
   15140:	add	r3, pc, r3
   15144:	add	r2, pc, r2
   15148:	str	r2, [sp, #4]
   1514c:	add	r3, r3, #1072	; 0x430
   15150:	ldr	r2, [pc, #-3132]	; 1451c <blkid_probe_get_size@plt+0xd004>
   15154:	add	r3, r3, #12
   15158:	str	r0, [sp, #8]
   1515c:	str	r3, [sp]
   15160:	str	r1, [sp, #16]
   15164:	str	r9, [sp, #12]
   15168:	ldr	r3, [pc, #-3152]	; 14520 <blkid_probe_get_size@plt+0xd008>
   1516c:	add	r2, pc, r2
   15170:	mov	r1, #0
   15174:	ldr	r0, [pc, #-3020]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15178:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1517c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   15180:	ldr	r1, [pc, #-3172]	; 14524 <blkid_probe_get_size@plt+0xd00c>
   15184:	mov	r0, r5
   15188:	add	r1, pc, r1
   1518c:	bl	7050 <strstr@plt>
   15190:	cmp	r0, #0
   15194:	beq	14ff8 <blkid_probe_get_size@plt+0xdae0>
   15198:	ldr	r3, [sp, #68]	; 0x44
   1519c:	mov	r2, r7
   151a0:	str	r3, [sp]
   151a4:	mov	r1, #34	; 0x22
   151a8:	mov	r3, r4
   151ac:	add	r0, sp, #168	; 0xa8
   151b0:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   151b4:	cmp	r0, #0
   151b8:	bge	14ff8 <blkid_probe_get_size@plt+0xdae0>
   151bc:	ldr	r3, [pc, #-3228]	; 14528 <blkid_probe_get_size@plt+0xd010>
   151c0:	add	r3, pc, r3
   151c4:	ldr	r3, [r3, #4]
   151c8:	cmp	r3, #2
   151cc:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   151d0:	ldr	r3, [sp, #64]	; 0x40
   151d4:	ldr	r1, [sp, #24]
   151d8:	add	r2, r3, #1072	; 0x430
   151dc:	ldr	r3, [sp, #32]
   151e0:	add	r2, r2, #12
   151e4:	ldr	r0, [r3, #-8]
   151e8:	ldr	r3, [pc, #-3268]	; 1452c <blkid_probe_get_size@plt+0xd014>
   151ec:	str	r2, [sp]
   151f0:	ldr	r2, [pc, #-3272]	; 14530 <blkid_probe_get_size@plt+0xd018>
   151f4:	add	r3, pc, r3
   151f8:	str	r1, [sp, #8]
   151fc:	str	r0, [sp, #16]
   15200:	str	r3, [sp, #4]
   15204:	str	r9, [sp, #12]
   15208:	mov	r1, r4
   1520c:	ldr	r3, [pc, #-3296]	; 14534 <blkid_probe_get_size@plt+0xd01c>
   15210:	add	r2, pc, r2
   15214:	ldr	r0, [pc, #-3180]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15218:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1521c:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   15220:	ldr	r3, [pc, #-3312]	; 14538 <blkid_probe_get_size@plt+0xd020>
   15224:	add	r3, pc, r3
   15228:	ldr	r3, [r3, #4]
   1522c:	cmp	r3, #2
   15230:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   15234:	ldr	r2, [sp, #32]
   15238:	ldr	r3, [pc, #-3332]	; 1453c <blkid_probe_get_size@plt+0xd024>
   1523c:	ldr	r0, [sp, #24]
   15240:	ldr	r1, [r2, #-8]
   15244:	ldr	r2, [pc, #-3340]	; 14540 <blkid_probe_get_size@plt+0xd028>
   15248:	add	r3, pc, r3
   1524c:	add	r2, pc, r2
   15250:	str	r2, [sp, #4]
   15254:	add	r3, r3, #1072	; 0x430
   15258:	ldr	r2, [pc, #-3356]	; 14544 <blkid_probe_get_size@plt+0xd02c>
   1525c:	add	r3, r3, #12
   15260:	str	r0, [sp, #8]
   15264:	str	r3, [sp]
   15268:	str	r1, [sp, #16]
   1526c:	str	r9, [sp, #12]
   15270:	ldr	r3, [pc, #-3376]	; 14548 <blkid_probe_get_size@plt+0xd030>
   15274:	add	r2, pc, r2
   15278:	mov	r1, #0
   1527c:	ldr	r0, [pc, #-3284]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15280:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   15284:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   15288:	ldr	r1, [pc, #-3396]	; 1454c <blkid_probe_get_size@plt+0xd034>
   1528c:	mov	r0, r4
   15290:	add	r1, pc, r1
   15294:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   15298:	subs	r1, r0, #0
   1529c:	beq	15444 <blkid_probe_get_size@plt+0xdf2c>
   152a0:	str	r8, [sp]
   152a4:	mov	r3, r8
   152a8:	mov	r2, r7
   152ac:	mov	r1, #32
   152b0:	add	r0, sp, #168	; 0xa8
   152b4:	bl	9b40 <blkid_probe_get_size@plt+0x2628>
   152b8:	b	14f74 <blkid_probe_get_size@plt+0xda5c>
   152bc:	ldr	r2, [pc, #-3444]	; 14550 <blkid_probe_get_size@plt+0xd038>
   152c0:	add	r2, pc, r2
   152c4:	ldr	r2, [r2, #4]
   152c8:	cmp	r2, #2
   152cc:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   152d0:	ldr	r2, [pc, #-3460]	; 14554 <blkid_probe_get_size@plt+0xd03c>
   152d4:	ldr	r0, [pc, #-3460]	; 14558 <blkid_probe_get_size@plt+0xd040>
   152d8:	add	r2, pc, r2
   152dc:	add	r2, r2, #1072	; 0x430
   152e0:	add	r2, r2, #12
   152e4:	ldr	r3, [sp, #24]
   152e8:	str	r2, [sp]
   152ec:	ldr	r2, [pc, #-3480]	; 1455c <blkid_probe_get_size@plt+0xd044>
   152f0:	add	r0, pc, r0
   152f4:	str	r3, [sp, #8]
   152f8:	str	r0, [sp, #4]
   152fc:	str	sl, [sp, #16]
   15300:	str	r9, [sp, #12]
   15304:	mov	r1, r4
   15308:	ldr	r3, [pc, #-3504]	; 14560 <blkid_probe_get_size@plt+0xd048>
   1530c:	add	r2, pc, r2
   15310:	ldr	r0, [pc, #-3432]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15314:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   15318:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1531c:	ldr	r2, [pc, #-3520]	; 14564 <blkid_probe_get_size@plt+0xd04c>
   15320:	add	r2, pc, r2
   15324:	ldr	r2, [r2, #4]
   15328:	cmp	r2, #2
   1532c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   15330:	ldr	r2, [pc, #-3536]	; 14568 <blkid_probe_get_size@plt+0xd050>
   15334:	ldr	r0, [pc, #-3536]	; 1456c <blkid_probe_get_size@plt+0xd054>
   15338:	add	r2, pc, r2
   1533c:	add	r2, r2, #1072	; 0x430
   15340:	add	r2, r2, #12
   15344:	ldr	r3, [sp, #24]
   15348:	str	r2, [sp]
   1534c:	ldr	r2, [pc, #-3556]	; 14570 <blkid_probe_get_size@plt+0xd058>
   15350:	add	r0, pc, r0
   15354:	str	r3, [sp, #8]
   15358:	str	r0, [sp, #4]
   1535c:	str	sl, [sp, #16]
   15360:	str	r9, [sp, #12]
   15364:	mov	r1, r4
   15368:	ldr	r3, [pc, #-3580]	; 14574 <blkid_probe_get_size@plt+0xd05c>
   1536c:	add	r2, pc, r2
   15370:	ldr	r0, [pc, #-3528]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15374:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   15378:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   1537c:	ldr	r3, [pc, #-3596]	; 14578 <blkid_probe_get_size@plt+0xd060>
   15380:	add	r3, pc, r3
   15384:	ldr	r3, [r3, #4]
   15388:	cmp	r3, #2
   1538c:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   15390:	ldr	r2, [sp, #32]
   15394:	ldr	r3, [pc, #-3616]	; 1457c <blkid_probe_get_size@plt+0xd064>
   15398:	ldr	r0, [sp, #24]
   1539c:	ldr	r1, [r2, #-8]
   153a0:	ldr	r2, [pc, #-3624]	; 14580 <blkid_probe_get_size@plt+0xd068>
   153a4:	add	r3, pc, r3
   153a8:	add	r2, pc, r2
   153ac:	str	r2, [sp, #4]
   153b0:	add	r3, r3, #1072	; 0x430
   153b4:	ldr	r2, [pc, #-3640]	; 14584 <blkid_probe_get_size@plt+0xd06c>
   153b8:	add	r3, r3, #12
   153bc:	str	r0, [sp, #8]
   153c0:	str	r3, [sp]
   153c4:	str	r1, [sp, #16]
   153c8:	str	r9, [sp, #12]
   153cc:	ldr	r3, [pc, #-3660]	; 14588 <blkid_probe_get_size@plt+0xd070>
   153d0:	add	r2, pc, r2
   153d4:	mov	r1, #0
   153d8:	ldr	r0, [pc, #-3632]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   153dc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   153e0:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   153e4:	ldr	r2, [pc, #-3680]	; 1458c <blkid_probe_get_size@plt+0xd074>
   153e8:	add	r2, pc, r2
   153ec:	ldr	r2, [r2, #4]
   153f0:	cmp	r2, #2
   153f4:	ble	10f7c <blkid_probe_get_size@plt+0x9a64>
   153f8:	ldr	r2, [pc, #-3696]	; 14590 <blkid_probe_get_size@plt+0xd078>
   153fc:	ldr	r0, [pc, #-3696]	; 14594 <blkid_probe_get_size@plt+0xd07c>
   15400:	add	r2, pc, r2
   15404:	add	r2, r2, #1072	; 0x430
   15408:	add	r2, r2, #12
   1540c:	ldr	r3, [sp, #24]
   15410:	str	r2, [sp]
   15414:	ldr	r2, [pc, #-3716]	; 14598 <blkid_probe_get_size@plt+0xd080>
   15418:	add	r0, pc, r0
   1541c:	str	r3, [sp, #8]
   15420:	str	r0, [sp, #4]
   15424:	str	sl, [sp, #16]
   15428:	str	r9, [sp, #12]
   1542c:	mov	r1, r8
   15430:	ldr	r3, [pc, #-3740]	; 1459c <blkid_probe_get_size@plt+0xd084>
   15434:	add	r2, pc, r2
   15438:	ldr	r0, [pc, #-3728]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   1543c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   15440:	b	10f7c <blkid_probe_get_size@plt+0x9a64>
   15444:	ldr	r3, [pc, #-3756]	; 145a0 <blkid_probe_get_size@plt+0xd088>
   15448:	add	r3, pc, r3
   1544c:	ldr	r3, [r3, #4]
   15450:	cmp	r3, #2
   15454:	ble	14f7c <blkid_probe_get_size@plt+0xda64>
   15458:	ldr	r2, [sp, #24]
   1545c:	ldr	r3, [pc, #-3776]	; 145a4 <blkid_probe_get_size@plt+0xd08c>
   15460:	str	r2, [sp, #8]
   15464:	ldr	r2, [sp, #72]	; 0x48
   15468:	add	r3, pc, r3
   1546c:	str	r4, [sp, #16]
   15470:	strd	r2, [sp]
   15474:	ldr	r2, [pc, #-3796]	; 145a8 <blkid_probe_get_size@plt+0xd090>
   15478:	str	r9, [sp, #12]
   1547c:	ldr	r3, [pc, #-3800]	; 145ac <blkid_probe_get_size@plt+0xd094>
   15480:	add	r2, pc, r2
   15484:	ldr	r0, [pc, #-3804]	; 145b0 <blkid_probe_get_size@plt+0xd098>
   15488:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1548c:	b	14f7c <blkid_probe_get_size@plt+0xda64>
   15490:	ldr	ip, [pc, #3348]	; 161ac <blkid_probe_get_size@plt+0xec94>
   15494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15498:	sub	sp, sp, #3168	; 0xc60
   1549c:	ldr	lr, [pc, #3340]	; 161b0 <blkid_probe_get_size@plt+0xec98>
   154a0:	sub	sp, sp, #12
   154a4:	add	ip, pc, ip
   154a8:	cmp	r0, #0
   154ac:	mov	r9, r2
   154b0:	strd	r0, [sp, #36]	; 0x24
   154b4:	ldr	r0, [ip, lr]
   154b8:	ldrb	r2, [sp, #3216]	; 0xc90
   154bc:	mov	r7, r3
   154c0:	ldr	r3, [r0]
   154c4:	mov	r1, ip
   154c8:	str	r0, [sp, #60]	; 0x3c
   154cc:	str	r2, [sp, #56]	; 0x38
   154d0:	str	r3, [sp, #3172]	; 0xc64
   154d4:	beq	158ac <blkid_probe_get_size@plt+0xe394>
   154d8:	ldr	r3, [sp, #36]	; 0x24
   154dc:	ldr	r3, [r3]
   154e0:	cmp	r3, #0
   154e4:	beq	158dc <blkid_probe_get_size@plt+0xe3c4>
   154e8:	ldr	r3, [sp, #40]	; 0x28
   154ec:	cmp	r3, #0
   154f0:	beq	1590c <blkid_probe_get_size@plt+0xe3f4>
   154f4:	ldr	r2, [pc, #3256]	; 161b4 <blkid_probe_get_size@plt+0xec9c>
   154f8:	ldr	r3, [pc, #3256]	; 161b8 <blkid_probe_get_size@plt+0xeca0>
   154fc:	add	r2, pc, r2
   15500:	add	r3, pc, r3
   15504:	ldr	r6, [sp, #40]	; 0x28
   15508:	add	r2, r2, #1120	; 0x460
   1550c:	add	r3, r3, #1120	; 0x460
   15510:	add	r2, r2, #4
   15514:	add	r3, r3, #4
   15518:	str	r2, [sp, #64]	; 0x40
   1551c:	str	r3, [sp, #68]	; 0x44
   15520:	ldrb	r3, [r6]
   15524:	cmp	r3, #0
   15528:	beq	157ec <blkid_probe_get_size@plt+0xe2d4>
   1552c:	ldr	r2, [pc, #3208]	; 161bc <blkid_probe_get_size@plt+0xeca4>
   15530:	add	r2, pc, r2
   15534:	str	r2, [sp, #52]	; 0x34
   15538:	ldr	r2, [pc, #3200]	; 161c0 <blkid_probe_get_size@plt+0xeca8>
   1553c:	add	r2, pc, r2
   15540:	str	r2, [sp, #44]	; 0x2c
   15544:	ldr	r2, [pc, #3192]	; 161c4 <blkid_probe_get_size@plt+0xecac>
   15548:	add	r2, pc, r2
   1554c:	str	r2, [sp, #48]	; 0x30
   15550:	cmp	r3, #36	; 0x24
   15554:	beq	155b4 <blkid_probe_get_size@plt+0xe09c>
   15558:	cmp	r3, #37	; 0x25
   1555c:	beq	156a4 <blkid_probe_get_size@plt+0xe18c>
   15560:	mov	r8, r6
   15564:	cmp	r7, #1
   15568:	bls	157ec <blkid_probe_get_size@plt+0xe2d4>
   1556c:	mov	r6, r8
   15570:	sub	r7, r7, #1
   15574:	ldrb	r3, [r6], #1
   15578:	strb	r3, [r9], #1
   1557c:	ldrb	r3, [r8, #1]
   15580:	cmp	r3, #0
   15584:	bne	15550 <blkid_probe_get_size@plt+0xe038>
   15588:	mov	r3, #0
   1558c:	strb	r3, [r9]
   15590:	ldr	r3, [sp, #60]	; 0x3c
   15594:	ldr	r2, [sp, #3172]	; 0xc64
   15598:	mov	r0, r7
   1559c:	ldr	r3, [r3]
   155a0:	cmp	r2, r3
   155a4:	bne	16178 <blkid_probe_get_size@plt+0xec60>
   155a8:	add	sp, sp, #3168	; 0xc60
   155ac:	add	sp, sp, #12
   155b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b4:	ldrb	r3, [r6, #1]
   155b8:	add	r8, r6, #1
   155bc:	cmp	r3, #36	; 0x24
   155c0:	beq	15564 <blkid_probe_get_size@plt+0xe04c>
   155c4:	ldr	r3, [sp, #44]	; 0x2c
   155c8:	mov	r4, #7
   155cc:	add	sl, r3, #624	; 0x270
   155d0:	ldr	fp, [sp, #48]	; 0x30
   155d4:	mov	r5, #0
   155d8:	b	155f8 <blkid_probe_get_size@plt+0xe0e0>
   155dc:	add	r5, r5, #1
   155e0:	cmp	r5, #18
   155e4:	beq	15560 <blkid_probe_get_size@plt+0xe048>
   155e8:	ldr	fp, [sl, #12]!
   155ec:	mov	r0, fp
   155f0:	bl	723c <strlen@plt>
   155f4:	mov	r4, r0
   155f8:	mov	r1, fp
   155fc:	mov	r2, r4
   15600:	mov	r0, r8
   15604:	bl	6a5c <strncmp@plt>
   15608:	cmp	r0, #0
   1560c:	bne	155dc <blkid_probe_get_size@plt+0xe0c4>
   15610:	adds	r4, r8, r4
   15614:	beq	155dc <blkid_probe_get_size@plt+0xe0c4>
   15618:	ldr	r3, [pc, #2984]	; 161c8 <blkid_probe_get_size@plt+0xecb0>
   1561c:	add	r5, r5, r5, lsl #1
   15620:	add	r3, pc, r3
   15624:	add	r3, r3, #624	; 0x270
   15628:	add	r5, r3, r5, lsl #2
   1562c:	mov	r3, #1
   15630:	str	r3, [sp, #44]	; 0x2c
   15634:	ldrb	r3, [r4]
   15638:	cmp	r3, #123	; 0x7b
   1563c:	beq	1570c <blkid_probe_get_size@plt+0xe1f4>
   15640:	mov	r2, #0
   15644:	str	r2, [sp, #80]	; 0x50
   15648:	ldr	r2, [sp, #36]	; 0x24
   1564c:	ldr	r3, [r5, #8]
   15650:	str	r9, [sp, #84]	; 0x54
   15654:	ldr	r8, [r2]
   15658:	cmp	r3, #15
   1565c:	addls	pc, pc, r3, lsl #2
   15660:	b	1617c <blkid_probe_get_size@plt+0xec64>
   15664:	b	15b54 <blkid_probe_get_size@plt+0xe63c>
   15668:	b	15dfc <blkid_probe_get_size@plt+0xe8e4>
   1566c:	b	15824 <blkid_probe_get_size@plt+0xe30c>
   15670:	b	15bb8 <blkid_probe_get_size@plt+0xe6a0>
   15674:	b	15b84 <blkid_probe_get_size@plt+0xe66c>
   15678:	b	15bf8 <blkid_probe_get_size@plt+0xe6e0>
   1567c:	b	15bd8 <blkid_probe_get_size@plt+0xe6c0>
   15680:	b	15b04 <blkid_probe_get_size@plt+0xe5ec>
   15684:	b	15a50 <blkid_probe_get_size@plt+0xe538>
   15688:	b	15a50 <blkid_probe_get_size@plt+0xe538>
   1568c:	b	15ca4 <blkid_probe_get_size@plt+0xe78c>
   15690:	b	15994 <blkid_probe_get_size@plt+0xe47c>
   15694:	b	15940 <blkid_probe_get_size@plt+0xe428>
   15698:	b	15c20 <blkid_probe_get_size@plt+0xe708>
   1569c:	b	15b34 <blkid_probe_get_size@plt+0xe61c>
   156a0:	b	15a40 <blkid_probe_get_size@plt+0xe528>
   156a4:	ldrb	r1, [r6, #1]
   156a8:	cmp	r1, #37	; 0x25
   156ac:	beq	157e0 <blkid_probe_get_size@plt+0xe2c8>
   156b0:	ldr	r3, [sp, #52]	; 0x34
   156b4:	mov	r2, #78	; 0x4e
   156b8:	add	r3, r3, #624	; 0x270
   156bc:	mov	r5, #0
   156c0:	b	156d8 <blkid_probe_get_size@plt+0xe1c0>
   156c4:	add	r5, r5, #1
   156c8:	cmp	r5, #18
   156cc:	add	r3, r3, #12
   156d0:	beq	15560 <blkid_probe_get_size@plt+0xe048>
   156d4:	ldrb	r2, [r3, #4]
   156d8:	cmp	r1, r2
   156dc:	bne	156c4 <blkid_probe_get_size@plt+0xe1ac>
   156e0:	ldr	r3, [pc, #2788]	; 161cc <blkid_probe_get_size@plt+0xecb4>
   156e4:	add	r5, r5, r5, lsl #1
   156e8:	add	r3, pc, r3
   156ec:	add	r3, r3, #624	; 0x270
   156f0:	add	r4, r6, #2
   156f4:	add	r5, r3, r5, lsl #2
   156f8:	mov	r3, #0
   156fc:	str	r3, [sp, #44]	; 0x2c
   15700:	ldrb	r3, [r4]
   15704:	cmp	r3, #123	; 0x7b
   15708:	bne	15640 <blkid_probe_get_size@plt+0xe128>
   1570c:	ldrb	r3, [r4, #1]
   15710:	add	r6, r4, #1
   15714:	cmp	r3, #125	; 0x7d
   15718:	beq	15ee0 <blkid_probe_get_size@plt+0xe9c8>
   1571c:	cmp	r3, #0
   15720:	beq	15854 <blkid_probe_get_size@plt+0xe33c>
   15724:	mov	r3, r6
   15728:	b	15734 <blkid_probe_get_size@plt+0xe21c>
   1572c:	cmp	r2, #0
   15730:	beq	15854 <blkid_probe_get_size@plt+0xe33c>
   15734:	sub	r8, r3, r4
   15738:	ldrb	r2, [r3, #1]!
   1573c:	cmp	r2, #125	; 0x7d
   15740:	bne	1572c <blkid_probe_get_size@plt+0xe214>
   15744:	cmp	r8, #1024	; 0x400
   15748:	bcs	157ec <blkid_probe_get_size@plt+0xe2d4>
   1574c:	add	sl, r8, #1
   15750:	add	r4, sp, #100	; 0x64
   15754:	mov	r2, r8
   15758:	mov	r1, r6
   1575c:	mov	r3, #1024	; 0x400
   15760:	mov	r0, r4
   15764:	bl	696c <__memcpy_chk@plt>
   15768:	add	r3, sp, #3168	; 0xc60
   1576c:	add	r3, r3, #8
   15770:	add	r8, r3, r8
   15774:	mov	r2, #0
   15778:	strb	r2, [r8, #-3076]	; 0xfffff3fc
   1577c:	str	r2, [sp, #80]	; 0x50
   15780:	ldr	r2, [sp, #36]	; 0x24
   15784:	ldr	r3, [r5, #8]
   15788:	add	r6, r6, sl
   1578c:	str	r9, [sp, #84]	; 0x54
   15790:	ldr	r8, [r2]
   15794:	cmp	r3, #15
   15798:	addls	pc, pc, r3, lsl #2
   1579c:	b	1617c <blkid_probe_get_size@plt+0xec64>
   157a0:	b	15b50 <blkid_probe_get_size@plt+0xe638>
   157a4:	b	15ccc <blkid_probe_get_size@plt+0xe7b4>
   157a8:	b	15e08 <blkid_probe_get_size@plt+0xe8f0>
   157ac:	b	15bb4 <blkid_probe_get_size@plt+0xe69c>
   157b0:	b	15b80 <blkid_probe_get_size@plt+0xe668>
   157b4:	b	15bf4 <blkid_probe_get_size@plt+0xe6dc>
   157b8:	b	15bd4 <blkid_probe_get_size@plt+0xe6bc>
   157bc:	b	15b00 <blkid_probe_get_size@plt+0xe5e8>
   157c0:	b	15a4c <blkid_probe_get_size@plt+0xe534>
   157c4:	b	15a4c <blkid_probe_get_size@plt+0xe534>
   157c8:	b	15e30 <blkid_probe_get_size@plt+0xe918>
   157cc:	b	15990 <blkid_probe_get_size@plt+0xe478>
   157d0:	b	1593c <blkid_probe_get_size@plt+0xe424>
   157d4:	b	15c24 <blkid_probe_get_size@plt+0xe70c>
   157d8:	b	15b30 <blkid_probe_get_size@plt+0xe618>
   157dc:	b	15a3c <blkid_probe_get_size@plt+0xe524>
   157e0:	cmp	r7, #1
   157e4:	add	r8, r6, #1
   157e8:	bhi	1556c <blkid_probe_get_size@plt+0xe054>
   157ec:	cmp	r7, #0
   157f0:	bne	15588 <blkid_probe_get_size@plt+0xe070>
   157f4:	ldr	r2, [pc, #2516]	; 161d0 <blkid_probe_get_size@plt+0xecb8>
   157f8:	ldr	r1, [pc, #2516]	; 161d4 <blkid_probe_get_size@plt+0xecbc>
   157fc:	add	r2, pc, r2
   15800:	add	r2, r2, #1088	; 0x440
   15804:	add	r2, r2, #12
   15808:	str	r2, [sp]
   1580c:	ldr	r2, [pc, #2500]	; 161d8 <blkid_probe_get_size@plt+0xecc0>
   15810:	ldr	r3, [pc, #2500]	; 161dc <blkid_probe_get_size@plt+0xecc4>
   15814:	add	r2, pc, r2
   15818:	add	r1, pc, r1
   1581c:	mov	r0, #1
   15820:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   15824:	ldr	r3, [sp, #56]	; 0x38
   15828:	mov	r6, r4
   1582c:	cmp	r3, #0
   15830:	movne	fp, #0
   15834:	beq	15520 <blkid_probe_get_size@plt+0xe008>
   15838:	mov	r1, r9
   1583c:	mov	r0, r9
   15840:	mov	r2, fp
   15844:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   15848:	add	r9, r9, r0
   1584c:	sub	r7, r7, r0
   15850:	b	15520 <blkid_probe_get_size@plt+0xe008>
   15854:	ldr	r3, [pc, #2436]	; 161e0 <blkid_probe_get_size@plt+0xecc8>
   15858:	add	r3, pc, r3
   1585c:	ldr	r3, [r3, #4]
   15860:	cmp	r3, #2
   15864:	ble	157ec <blkid_probe_get_size@plt+0xe2d4>
   15868:	ldr	r3, [pc, #2420]	; 161e4 <blkid_probe_get_size@plt+0xeccc>
   1586c:	ldr	r2, [pc, #2420]	; 161e8 <blkid_probe_get_size@plt+0xecd0>
   15870:	add	r3, pc, r3
   15874:	add	r2, pc, r2
   15878:	ldr	r1, [sp, #40]	; 0x28
   1587c:	str	r2, [sp, #4]
   15880:	add	r3, r3, #1120	; 0x460
   15884:	ldr	r2, [pc, #2400]	; 161ec <blkid_probe_get_size@plt+0xecd4>
   15888:	add	r3, r3, #4
   1588c:	str	r1, [sp, #8]
   15890:	str	r3, [sp]
   15894:	add	r2, pc, r2
   15898:	mov	r3, #392	; 0x188
   1589c:	mov	r1, #0
   158a0:	ldr	r0, [pc, #2376]	; 161f0 <blkid_probe_get_size@plt+0xecd8>
   158a4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   158a8:	b	157ec <blkid_probe_get_size@plt+0xe2d4>
   158ac:	ldr	r2, [pc, #2368]	; 161f4 <blkid_probe_get_size@plt+0xecdc>
   158b0:	ldr	r1, [pc, #2368]	; 161f8 <blkid_probe_get_size@plt+0xece0>
   158b4:	add	r2, pc, r2
   158b8:	add	r2, r2, #1088	; 0x440
   158bc:	add	r2, r2, #12
   158c0:	str	r2, [sp]
   158c4:	ldr	r2, [pc, #2352]	; 161fc <blkid_probe_get_size@plt+0xece4>
   158c8:	ldr	r3, [pc, #2352]	; 16200 <blkid_probe_get_size@plt+0xece8>
   158cc:	add	r2, pc, r2
   158d0:	add	r1, pc, r1
   158d4:	mov	r0, #1
   158d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   158dc:	ldr	r2, [pc, #2336]	; 16204 <blkid_probe_get_size@plt+0xecec>
   158e0:	ldr	r1, [pc, #2336]	; 16208 <blkid_probe_get_size@plt+0xecf0>
   158e4:	add	r2, pc, r2
   158e8:	add	r2, r2, #1088	; 0x440
   158ec:	add	r2, r2, #12
   158f0:	str	r2, [sp]
   158f4:	ldr	r2, [pc, #2320]	; 1620c <blkid_probe_get_size@plt+0xecf4>
   158f8:	ldr	r3, [pc, #2320]	; 16210 <blkid_probe_get_size@plt+0xecf8>
   158fc:	add	r2, pc, r2
   15900:	add	r1, pc, r1
   15904:	mov	r0, #1
   15908:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1590c:	ldr	r2, [pc, #2304]	; 16214 <blkid_probe_get_size@plt+0xecfc>
   15910:	ldr	r1, [pc, #2304]	; 16218 <blkid_probe_get_size@plt+0xed00>
   15914:	add	r2, pc, r2
   15918:	add	r2, r2, #1088	; 0x440
   1591c:	add	r2, r2, #12
   15920:	str	r2, [sp]
   15924:	ldr	r2, [pc, #2288]	; 1621c <blkid_probe_get_size@plt+0xed04>
   15928:	mov	r3, #324	; 0x144
   1592c:	add	r2, pc, r2
   15930:	add	r1, pc, r1
   15934:	mov	r0, #1
   15938:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1593c:	mov	r4, r6
   15940:	ldr	r3, [sp, #36]	; 0x24
   15944:	ldr	r2, [r3, #12]
   15948:	cmp	r2, #0
   1594c:	beq	15f24 <blkid_probe_get_size@plt+0xea0c>
   15950:	mov	r1, r7
   15954:	add	r0, sp, #84	; 0x54
   15958:	mov	r6, r4
   1595c:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15960:	ldr	fp, [sp, #84]	; 0x54
   15964:	subs	fp, fp, r9
   15968:	bmi	159b8 <blkid_probe_get_size@plt+0xe4a0>
   1596c:	ldr	r3, [sp, #56]	; 0x38
   15970:	cmp	r3, #0
   15974:	beq	15984 <blkid_probe_get_size@plt+0xe46c>
   15978:	ldr	r3, [r5, #8]
   1597c:	cmp	r3, #10
   15980:	bne	15838 <blkid_probe_get_size@plt+0xe320>
   15984:	add	r9, r9, fp
   15988:	sub	r7, r7, fp
   1598c:	b	15520 <blkid_probe_get_size@plt+0xe008>
   15990:	mov	r4, r6
   15994:	add	sl, sp, #88	; 0x58
   15998:	mov	r0, r8
   1599c:	sub	r1, sl, #12
   159a0:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   159a4:	subs	fp, r0, #0
   159a8:	bge	15ef4 <blkid_probe_get_size@plt+0xe9dc>
   159ac:	cmn	fp, #19
   159b0:	mov	r6, r4
   159b4:	beq	15b78 <blkid_probe_get_size@plt+0xe660>
   159b8:	ldr	r3, [sp, #36]	; 0x24
   159bc:	ldr	r8, [r3]
   159c0:	ldr	r3, [sp, #44]	; 0x2c
   159c4:	cmp	r3, #0
   159c8:	beq	15e6c <blkid_probe_get_size@plt+0xe954>
   159cc:	mov	r3, #0
   159d0:	cmp	r8, #0
   159d4:	str	r3, [sp, #88]	; 0x58
   159d8:	beq	15eec <blkid_probe_get_size@plt+0xe9d4>
   159dc:	ldr	r2, [pc, #2108]	; 16220 <blkid_probe_get_size@plt+0xed08>
   159e0:	add	r2, pc, r2
   159e4:	ldr	r2, [r2, #4]
   159e8:	cmp	r2, #3
   159ec:	movle	r8, r3
   159f0:	movle	r1, r8
   159f4:	bgt	1607c <blkid_probe_get_size@plt+0xeb64>
   159f8:	ldr	r2, [r5]
   159fc:	ldr	r3, [pc, #2080]	; 16224 <blkid_probe_get_size@plt+0xed0c>
   15a00:	str	r2, [sp, #24]
   15a04:	add	r3, pc, r3
   15a08:	mov	r2, #0
   15a0c:	stmib	sp, {r1, r8}
   15a10:	strd	r2, [sp, #16]
   15a14:	ldr	r1, [sp, #68]	; 0x44
   15a18:	str	r2, [sp, #12]
   15a1c:	ldr	r2, [pc, #2052]	; 16228 <blkid_probe_get_size@plt+0xed10>
   15a20:	str	r1, [sp]
   15a24:	mov	r3, #408	; 0x198
   15a28:	mov	r1, fp
   15a2c:	add	r2, pc, r2
   15a30:	mov	r0, #4
   15a34:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   15a38:	b	15520 <blkid_probe_get_size@plt+0xe008>
   15a3c:	mov	r4, r6
   15a40:	ldr	r2, [pc, #2020]	; 1622c <blkid_probe_get_size@plt+0xed14>
   15a44:	add	r2, pc, r2
   15a48:	b	15950 <blkid_probe_get_size@plt+0xe438>
   15a4c:	mov	r4, r6
   15a50:	add	sl, sp, #88	; 0x58
   15a54:	mov	r0, r8
   15a58:	mov	r1, sl
   15a5c:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   15a60:	adds	r3, r0, #2
   15a64:	movne	r3, #1
   15a68:	ands	r3, r3, r0, lsr #31
   15a6c:	mov	fp, r0
   15a70:	bne	15b28 <blkid_probe_get_size@plt+0xe610>
   15a74:	cmp	r0, #0
   15a78:	movlt	r2, r3
   15a7c:	blt	15ab4 <blkid_probe_get_size@plt+0xe59c>
   15a80:	ldr	r3, [r5, #8]
   15a84:	ldr	r2, [sl]
   15a88:	ldr	r1, [sl, #4]
   15a8c:	cmp	r3, #8
   15a90:	lsrne	r3, r2, #12
   15a94:	biceq	r1, r1, #4080	; 0xff0
   15a98:	orrne	r3, r3, r1, lsl #20
   15a9c:	lsleq	r2, r2, #12
   15aa0:	biceq	r1, r1, #15
   15aa4:	bicne	r3, r3, #255	; 0xff
   15aa8:	uxtbne	r2, r2
   15aac:	orreq	r2, r1, r2, lsr #20
   15ab0:	orrne	r2, r3, r2
   15ab4:	ldr	r1, [pc, #1908]	; 16230 <blkid_probe_get_size@plt+0xed18>
   15ab8:	add	r6, sp, #2144	; 0x860
   15abc:	add	r1, pc, r1
   15ac0:	mov	r3, #12
   15ac4:	add	r6, r6, #4
   15ac8:	str	r2, [sp, #4]
   15acc:	str	r1, [sp]
   15ad0:	mov	r0, r6
   15ad4:	mov	r1, r3
   15ad8:	mov	r2, #1
   15adc:	bl	7260 <__snprintf_chk@plt>
   15ae0:	cmp	r0, #11
   15ae4:	bhi	16124 <blkid_probe_get_size@plt+0xec0c>
   15ae8:	mov	r2, r6
   15aec:	sub	r0, sl, #4
   15af0:	mov	r1, r7
   15af4:	mov	r6, r4
   15af8:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15afc:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15b00:	mov	r4, r6
   15b04:	ldr	r3, [sp, #36]	; 0x24
   15b08:	ldr	r0, [r3, #4]
   15b0c:	cmp	r0, #0
   15b10:	beq	15824 <blkid_probe_get_size@plt+0xe30c>
   15b14:	add	r1, sp, #80	; 0x50
   15b18:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   15b1c:	add	sl, sp, #88	; 0x58
   15b20:	subs	fp, r0, #0
   15b24:	bge	15b9c <blkid_probe_get_size@plt+0xe684>
   15b28:	mov	r6, r4
   15b2c:	b	159b8 <blkid_probe_get_size@plt+0xe4a0>
   15b30:	mov	r4, r6
   15b34:	ldr	r2, [pc, #1784]	; 16234 <blkid_probe_get_size@plt+0xed1c>
   15b38:	mov	r1, r7
   15b3c:	add	r2, pc, r2
   15b40:	add	r0, sp, #84	; 0x54
   15b44:	mov	r6, r4
   15b48:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15b4c:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15b50:	mov	r4, r6
   15b54:	add	sl, sp, #88	; 0x58
   15b58:	mov	r0, r8
   15b5c:	sub	r1, sl, #8
   15b60:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   15b64:	subs	fp, r0, #0
   15b68:	bge	15b9c <blkid_probe_get_size@plt+0xe684>
   15b6c:	cmn	fp, #2
   15b70:	mov	r6, r4
   15b74:	bne	159b8 <blkid_probe_get_size@plt+0xe4a0>
   15b78:	mov	fp, #0
   15b7c:	b	1596c <blkid_probe_get_size@plt+0xe454>
   15b80:	mov	r4, r6
   15b84:	add	sl, sp, #88	; 0x58
   15b88:	mov	r0, r8
   15b8c:	sub	r1, sl, #8
   15b90:	bl	35c5c <blkid_probe_get_size@plt+0x2e744>
   15b94:	subs	fp, r0, #0
   15b98:	blt	15b6c <blkid_probe_get_size@plt+0xe654>
   15b9c:	sub	r0, sl, #4
   15ba0:	ldr	r2, [sp, #80]	; 0x50
   15ba4:	mov	r1, r7
   15ba8:	mov	r6, r4
   15bac:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15bb0:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15bb4:	mov	r4, r6
   15bb8:	mov	r0, r8
   15bbc:	add	r1, sp, #80	; 0x50
   15bc0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   15bc4:	add	sl, sp, #88	; 0x58
   15bc8:	subs	fp, r0, #0
   15bcc:	bge	15b9c <blkid_probe_get_size@plt+0xe684>
   15bd0:	b	15b28 <blkid_probe_get_size@plt+0xe610>
   15bd4:	mov	r4, r6
   15bd8:	mov	r0, r8
   15bdc:	add	r1, sp, #80	; 0x50
   15be0:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   15be4:	add	sl, sp, #88	; 0x58
   15be8:	subs	fp, r0, #0
   15bec:	bge	15b9c <blkid_probe_get_size@plt+0xe684>
   15bf0:	b	15b28 <blkid_probe_get_size@plt+0xe610>
   15bf4:	mov	r4, r6
   15bf8:	ldr	r3, [sp, #36]	; 0x24
   15bfc:	ldr	r0, [r3, #4]
   15c00:	cmp	r0, #0
   15c04:	beq	15824 <blkid_probe_get_size@plt+0xe30c>
   15c08:	add	sl, sp, #88	; 0x58
   15c0c:	sub	r1, sl, #8
   15c10:	bl	36fe8 <blkid_probe_get_size@plt+0x2fad0>
   15c14:	subs	fp, r0, #0
   15c18:	blt	15b6c <blkid_probe_get_size@plt+0xe654>
   15c1c:	b	15b9c <blkid_probe_get_size@plt+0xe684>
   15c20:	mov	r6, r4
   15c24:	mov	r0, r8
   15c28:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   15c2c:	cmp	r0, #0
   15c30:	str	r0, [sp, #80]	; 0x50
   15c34:	beq	15960 <blkid_probe_get_size@plt+0xe448>
   15c38:	ldr	fp, [pc, #1528]	; 16238 <blkid_probe_get_size@plt+0xed20>
   15c3c:	mov	sl, r7
   15c40:	add	fp, pc, fp
   15c44:	add	r4, sp, #84	; 0x54
   15c48:	b	15c7c <blkid_probe_get_size@plt+0xe764>
   15c4c:	mov	r2, #0
   15c50:	str	r2, [sp]
   15c54:	mov	r1, sl
   15c58:	mov	r2, fp
   15c5c:	mov	r0, r4
   15c60:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   15c64:	mov	sl, r0
   15c68:	mov	r0, r8
   15c6c:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   15c70:	cmp	r0, #0
   15c74:	str	r0, [sp, #80]	; 0x50
   15c78:	beq	15960 <blkid_probe_get_size@plt+0xe448>
   15c7c:	ldr	r2, [sp, #84]	; 0x54
   15c80:	add	r3, r0, #5
   15c84:	cmp	r9, r2
   15c88:	bne	15c4c <blkid_probe_get_size@plt+0xe734>
   15c8c:	mov	r1, sl
   15c90:	mov	r2, r3
   15c94:	mov	r0, r4
   15c98:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15c9c:	mov	sl, r0
   15ca0:	b	15c68 <blkid_probe_get_size@plt+0xe750>
   15ca4:	ldr	r3, [sp, #36]	; 0x24
   15ca8:	ldr	r2, [r3, #16]
   15cac:	cmp	r2, #0
   15cb0:	addne	sl, sp, #88	; 0x58
   15cb4:	beq	15f70 <blkid_probe_get_size@plt+0xea58>
   15cb8:	sub	r0, sl, #4
   15cbc:	mov	r1, r7
   15cc0:	mov	r6, r4
   15cc4:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15cc8:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15ccc:	add	fp, sp, #2144	; 0x860
   15cd0:	add	fp, fp, #4
   15cd4:	mov	r1, fp
   15cd8:	mov	r3, #1
   15cdc:	mov	r2, #512	; 0x200
   15ce0:	mov	r0, r4
   15ce4:	bl	3ce98 <blkid_probe_get_size@plt+0x35980>
   15ce8:	cmp	r0, #0
   15cec:	streq	fp, [sp, #80]	; 0x50
   15cf0:	addeq	sl, sp, #88	; 0x58
   15cf4:	beq	15d1c <blkid_probe_get_size@plt+0xe804>
   15cf8:	ldr	r2, [sp, #80]	; 0x50
   15cfc:	add	sl, sp, #88	; 0x58
   15d00:	cmp	r2, #0
   15d04:	beq	160c4 <blkid_probe_get_size@plt+0xebac>
   15d08:	cmp	r2, fp
   15d0c:	beq	15d1c <blkid_probe_get_size@plt+0xe804>
   15d10:	mov	r1, #512	; 0x200
   15d14:	mov	r0, fp
   15d18:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   15d1c:	mov	r0, fp
   15d20:	bl	723c <strlen@plt>
   15d24:	subs	r4, r0, #0
   15d28:	beq	15d60 <blkid_probe_get_size@plt+0xe848>
   15d2c:	bl	7104 <__ctype_b_loc@plt>
   15d30:	add	r3, fp, r4
   15d34:	mov	r1, #0
   15d38:	ldr	r0, [r0]
   15d3c:	b	15d4c <blkid_probe_get_size@plt+0xe834>
   15d40:	cmp	fp, r3
   15d44:	strb	r1, [r3]
   15d48:	beq	15d60 <blkid_probe_get_size@plt+0xe848>
   15d4c:	ldrb	r2, [r3, #-1]!
   15d50:	lsl	r2, r2, #1
   15d54:	ldrh	r2, [r0, r2]
   15d58:	tst	r2, #8192	; 0x2000
   15d5c:	bne	15d40 <blkid_probe_get_size@plt+0xe828>
   15d60:	ldr	r1, [pc, #1236]	; 1623c <blkid_probe_get_size@plt+0xed24>
   15d64:	mov	r0, fp
   15d68:	add	r1, pc, r1
   15d6c:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   15d70:	subs	r4, r0, #0
   15d74:	ble	15de8 <blkid_probe_get_size@plt+0xe8d0>
   15d78:	mov	r3, #0
   15d7c:	cmp	r8, #0
   15d80:	str	r3, [sp, #88]	; 0x58
   15d84:	beq	1611c <blkid_probe_get_size@plt+0xec04>
   15d88:	ldr	r2, [pc, #1200]	; 16240 <blkid_probe_get_size@plt+0xed28>
   15d8c:	add	r2, pc, r2
   15d90:	ldr	r2, [r2, #4]
   15d94:	cmp	r2, #6
   15d98:	movle	r8, r3
   15d9c:	movle	r2, r8
   15da0:	bgt	16154 <blkid_probe_get_size@plt+0xec3c>
   15da4:	ldr	r3, [pc, #1176]	; 16244 <blkid_probe_get_size@plt+0xed2c>
   15da8:	ldr	r0, [pc, #1176]	; 16248 <blkid_probe_get_size@plt+0xed30>
   15dac:	add	r3, pc, r3
   15db0:	stmib	sp, {r2, r8}
   15db4:	ldr	r2, [pc, #1168]	; 1624c <blkid_probe_get_size@plt+0xed34>
   15db8:	add	r0, pc, r0
   15dbc:	add	r3, r3, #1168	; 0x490
   15dc0:	mov	r1, #0
   15dc4:	str	r3, [sp]
   15dc8:	str	r0, [sp, #20]
   15dcc:	str	r4, [sp, #24]
   15dd0:	str	r1, [sp, #16]
   15dd4:	str	r1, [sp, #12]
   15dd8:	mov	r3, #256	; 0x100
   15ddc:	add	r2, pc, r2
   15de0:	mov	r0, #7
   15de4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   15de8:	mov	r2, fp
   15dec:	sub	r0, sl, #4
   15df0:	mov	r1, r7
   15df4:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15df8:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15dfc:	mov	r6, r4
   15e00:	mvn	fp, #21
   15e04:	b	159c0 <blkid_probe_get_size@plt+0xe4a8>
   15e08:	add	sl, sp, #88	; 0x58
   15e0c:	mov	r1, r4
   15e10:	mov	r0, r8
   15e14:	sub	r2, sl, #8
   15e18:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   15e1c:	subs	fp, r0, #0
   15e20:	bge	15f58 <blkid_probe_get_size@plt+0xea40>
   15e24:	cmn	fp, #2
   15e28:	bne	159b8 <blkid_probe_get_size@plt+0xe4a0>
   15e2c:	b	15b78 <blkid_probe_get_size@plt+0xe660>
   15e30:	ldr	r3, [sp, #36]	; 0x24
   15e34:	ldr	r3, [r3, #16]
   15e38:	cmp	r3, #0
   15e3c:	beq	15f6c <blkid_probe_get_size@plt+0xea54>
   15e40:	add	sl, sp, #88	; 0x58
   15e44:	mov	r0, r4
   15e48:	mov	r1, sl
   15e4c:	mov	r2, #10
   15e50:	bl	6c54 <strtoul@plt>
   15e54:	subs	r4, r0, #0
   15e58:	bgt	15f78 <blkid_probe_get_size@plt+0xea60>
   15e5c:	ldr	r3, [sp, #36]	; 0x24
   15e60:	mov	r4, r6
   15e64:	ldr	r2, [r3, #16]
   15e68:	b	15cb8 <blkid_probe_get_size@plt+0xe7a0>
   15e6c:	ldr	r3, [sp, #44]	; 0x2c
   15e70:	cmp	r8, #0
   15e74:	str	r3, [sp, #88]	; 0x58
   15e78:	beq	15e94 <blkid_probe_get_size@plt+0xe97c>
   15e7c:	ldr	r3, [pc, #972]	; 16250 <blkid_probe_get_size@plt+0xed38>
   15e80:	add	r3, pc, r3
   15e84:	ldr	r3, [r3, #4]
   15e88:	cmp	r3, #3
   15e8c:	ldrle	r8, [sp, #44]	; 0x2c
   15e90:	bgt	160a0 <blkid_probe_get_size@plt+0xeb88>
   15e94:	mov	r1, r8
   15e98:	ldr	r3, [pc, #948]	; 16254 <blkid_probe_get_size@plt+0xed3c>
   15e9c:	mov	r2, #0
   15ea0:	add	r3, pc, r3
   15ea4:	ldrb	r0, [r5, #4]
   15ea8:	strd	r2, [sp, #16]
   15eac:	str	r1, [sp, #4]
   15eb0:	str	r2, [sp, #12]
   15eb4:	ldr	r1, [sp, #64]	; 0x40
   15eb8:	ldr	r2, [pc, #920]	; 16258 <blkid_probe_get_size@plt+0xed40>
   15ebc:	str	r0, [sp, #24]
   15ec0:	str	r1, [sp]
   15ec4:	str	r8, [sp, #8]
   15ec8:	mov	r1, fp
   15ecc:	ldr	r3, [pc, #904]	; 1625c <blkid_probe_get_size@plt+0xed44>
   15ed0:	add	r2, pc, r2
   15ed4:	mov	r0, #4
   15ed8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   15edc:	b	15520 <blkid_probe_get_size@plt+0xe008>
   15ee0:	mov	sl, #1
   15ee4:	mov	r8, #0
   15ee8:	b	15750 <blkid_probe_get_size@plt+0xe238>
   15eec:	mov	r1, r8
   15ef0:	b	159f8 <blkid_probe_get_size@plt+0xe4e0>
   15ef4:	sub	r1, sl, #8
   15ef8:	ldr	r0, [sp, #76]	; 0x4c
   15efc:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   15f00:	subs	fp, r0, #0
   15f04:	blt	15b6c <blkid_probe_get_size@plt+0xe654>
   15f08:	ldr	r2, [sp, #80]	; 0x50
   15f0c:	sub	r0, sl, #4
   15f10:	add	r2, r2, #5
   15f14:	mov	r1, r7
   15f18:	mov	r6, r4
   15f1c:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15f20:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15f24:	add	sl, sp, #88	; 0x58
   15f28:	sub	r6, sl, #8
   15f2c:	mov	r1, r6
   15f30:	mov	r0, r8
   15f34:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   15f38:	cmp	r0, #0
   15f3c:	bge	15f08 <blkid_probe_get_size@plt+0xe9f0>
   15f40:	mov	r1, r6
   15f44:	mov	r0, r8
   15f48:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   15f4c:	subs	fp, r0, #0
   15f50:	bge	15b9c <blkid_probe_get_size@plt+0xe684>
   15f54:	b	15b28 <blkid_probe_get_size@plt+0xe610>
   15f58:	sub	r0, sl, #4
   15f5c:	ldr	r2, [sp, #80]	; 0x50
   15f60:	mov	r1, r7
   15f64:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   15f68:	b	15960 <blkid_probe_get_size@plt+0xe448>
   15f6c:	mov	r4, r6
   15f70:	mov	r6, r4
   15f74:	b	15520 <blkid_probe_get_size@plt+0xe008>
   15f78:	ldr	r3, [sp, #36]	; 0x24
   15f7c:	add	r0, sp, #1120	; 0x460
   15f80:	add	r0, r0, #4
   15f84:	ldr	r2, [r3, #16]
   15f88:	mov	r1, #1024	; 0x400
   15f8c:	mov	r8, r0
   15f90:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   15f94:	subs	r4, r4, #1
   15f98:	beq	1603c <blkid_probe_get_size@plt+0xeb24>
   15f9c:	bl	7104 <__ctype_b_loc@plt>
   15fa0:	ldrb	r1, [r8]
   15fa4:	cmp	r1, #0
   15fa8:	ldr	r3, [r0]
   15fac:	bne	15fc0 <blkid_probe_get_size@plt+0xeaa8>
   15fb0:	b	15fdc <blkid_probe_get_size@plt+0xeac4>
   15fb4:	ldrb	r1, [r8, #1]!
   15fb8:	cmp	r1, #0
   15fbc:	beq	15fdc <blkid_probe_get_size@plt+0xeac4>
   15fc0:	lsl	r1, r1, #1
   15fc4:	ldrh	r2, [r3, r1]
   15fc8:	tst	r2, #8192	; 0x2000
   15fcc:	beq	15fb4 <blkid_probe_get_size@plt+0xea9c>
   15fd0:	ldrb	r1, [r8]
   15fd4:	b	15fdc <blkid_probe_get_size@plt+0xeac4>
   15fd8:	ldrb	r1, [r8, #1]!
   15fdc:	lsl	r2, r1, #1
   15fe0:	ldrh	r2, [r3, r2]
   15fe4:	tst	r2, #8192	; 0x2000
   15fe8:	bne	15fd8 <blkid_probe_get_size@plt+0xeac0>
   15fec:	cmp	r1, #0
   15ff0:	bne	15f94 <blkid_probe_get_size@plt+0xea7c>
   15ff4:	ldr	r3, [pc, #612]	; 16260 <blkid_probe_get_size@plt+0xed48>
   15ff8:	add	r3, pc, r3
   15ffc:	ldr	r3, [r3, #4]
   16000:	cmp	r3, #2
   16004:	ble	15960 <blkid_probe_get_size@plt+0xe448>
   16008:	ldr	r2, [pc, #596]	; 16264 <blkid_probe_get_size@plt+0xed4c>
   1600c:	ldr	r3, [pc, #596]	; 16268 <blkid_probe_get_size@plt+0xed50>
   16010:	add	r2, pc, r2
   16014:	str	r2, [sp, #4]
   16018:	add	r3, pc, r3
   1601c:	ldr	r2, [pc, #584]	; 1626c <blkid_probe_get_size@plt+0xed54>
   16020:	add	r3, r3, #1168	; 0x490
   16024:	str	r3, [sp]
   16028:	add	r2, pc, r2
   1602c:	mov	r3, #210	; 0xd2
   16030:	ldr	r0, [pc, #440]	; 161f0 <blkid_probe_get_size@plt+0xecd8>
   16034:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   16038:	b	15960 <blkid_probe_get_size@plt+0xe448>
   1603c:	add	fp, sp, #2144	; 0x860
   16040:	add	fp, fp, #4
   16044:	mov	r2, r8
   16048:	mov	r0, fp
   1604c:	mov	r1, #1024	; 0x400
   16050:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   16054:	ldr	r3, [sp, #88]	; 0x58
   16058:	ldrb	r3, [r3]
   1605c:	cmp	r3, #43	; 0x2b
   16060:	beq	15de8 <blkid_probe_get_size@plt+0xe8d0>
   16064:	mov	r1, #32
   16068:	mov	r0, fp
   1606c:	bl	74c4 <strchr@plt>
   16070:	cmp	r0, #0
   16074:	strbne	r4, [r0]
   16078:	b	15de8 <blkid_probe_get_size@plt+0xe8d0>
   1607c:	mov	r0, r8
   16080:	add	r1, sp, #88	; 0x58
   16084:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   16088:	ldr	r8, [sp, #88]	; 0x58
   1608c:	cmp	r8, #0
   16090:	beq	15eec <blkid_probe_get_size@plt+0xe9d4>
   16094:	ldr	r1, [pc, #468]	; 16270 <blkid_probe_get_size@plt+0xed58>
   16098:	add	r1, pc, r1
   1609c:	b	159f8 <blkid_probe_get_size@plt+0xe4e0>
   160a0:	mov	r0, r8
   160a4:	add	r1, sp, #88	; 0x58
   160a8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   160ac:	ldr	r8, [sp, #88]	; 0x58
   160b0:	cmp	r8, #0
   160b4:	ldreq	r1, [sp, #44]	; 0x2c
   160b8:	ldrne	r1, [pc, #436]	; 16274 <blkid_probe_get_size@plt+0xed5c>
   160bc:	addne	r1, pc, r1
   160c0:	b	15e98 <blkid_probe_get_size@plt+0xe980>
   160c4:	sub	r3, sl, #8
   160c8:	mov	r2, r3
   160cc:	mov	r1, r4
   160d0:	mov	r0, r8
   160d4:	str	r3, [sp, #48]	; 0x30
   160d8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   160dc:	ldr	r2, [sp, #80]	; 0x50
   160e0:	cmp	r2, #0
   160e4:	bne	15d08 <blkid_probe_get_size@plt+0xe7f0>
   160e8:	ldr	r3, [sp, #36]	; 0x24
   160ec:	ldr	r0, [r3, #4]
   160f0:	ldr	r3, [sp, #48]	; 0x30
   160f4:	cmp	r0, #0
   160f8:	cmpne	r8, r0
   160fc:	beq	15b78 <blkid_probe_get_size@plt+0xe660>
   16100:	mov	r2, r3
   16104:	mov	r1, r4
   16108:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   1610c:	ldr	r2, [sp, #80]	; 0x50
   16110:	cmp	r2, #0
   16114:	beq	15b78 <blkid_probe_get_size@plt+0xe660>
   16118:	b	15d08 <blkid_probe_get_size@plt+0xe7f0>
   1611c:	mov	r2, r8
   16120:	b	15da4 <blkid_probe_get_size@plt+0xe88c>
   16124:	ldr	r2, [pc, #332]	; 16278 <blkid_probe_get_size@plt+0xed60>
   16128:	ldr	r1, [pc, #332]	; 1627c <blkid_probe_get_size@plt+0xed64>
   1612c:	add	r2, pc, r2
   16130:	add	r2, r2, #1136	; 0x470
   16134:	add	r2, r2, #12
   16138:	str	r2, [sp]
   1613c:	ldr	r2, [pc, #316]	; 16280 <blkid_probe_get_size@plt+0xed68>
   16140:	mov	r3, #181	; 0xb5
   16144:	add	r2, pc, r2
   16148:	add	r1, pc, r1
   1614c:	mov	r0, #1
   16150:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   16154:	mov	r0, r8
   16158:	mov	r1, sl
   1615c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   16160:	ldr	r8, [sp, #88]	; 0x58
   16164:	cmp	r8, #0
   16168:	beq	1611c <blkid_probe_get_size@plt+0xec04>
   1616c:	ldr	r2, [pc, #272]	; 16284 <blkid_probe_get_size@plt+0xed6c>
   16170:	add	r2, pc, r2
   16174:	b	15da4 <blkid_probe_get_size@plt+0xe88c>
   16178:	bl	6fb4 <__stack_chk_fail@plt>
   1617c:	ldr	r2, [pc, #260]	; 16288 <blkid_probe_get_size@plt+0xed70>
   16180:	ldr	r1, [pc, #260]	; 1628c <blkid_probe_get_size@plt+0xed74>
   16184:	add	r2, pc, r2
   16188:	add	r2, r2, #1136	; 0x470
   1618c:	add	r2, r2, #12
   16190:	str	r2, [sp]
   16194:	ldr	r2, [pc, #244]	; 16290 <blkid_probe_get_size@plt+0xed78>
   16198:	ldr	r3, [pc, #244]	; 16294 <blkid_probe_get_size@plt+0xed7c>
   1619c:	add	r2, pc, r2
   161a0:	add	r1, pc, r1
   161a4:	mov	r0, #1
   161a8:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   161ac:	andeq	r2, r8, r4, asr #13
   161b0:	andeq	r0, r0, ip, lsr r4
   161b4:	ldrdeq	pc, [r4], -r4
   161b8:	ldrdeq	pc, [r4], -r0
   161bc:	andeq	r3, r7, r0, ror #21
   161c0:	ldrdeq	r3, [r7], -r4
   161c4:	andeq	r1, r5, r4, asr sp
   161c8:	strdeq	r3, [r7], -r0
   161cc:	andeq	r3, r7, r8, lsr #18
   161d0:	ldrdeq	lr, [r4], -r4
   161d4:	andeq	r1, r5, r0, asr #23
   161d8:	andeq	pc, r4, r8, lsr #19
   161dc:	andeq	r0, r0, fp, lsr #3
   161e0:	andeq	r2, r8, r4, ror #17
   161e4:	andeq	lr, r4, r0, ror #26
   161e8:	andeq	r1, r5, ip, lsr sl
   161ec:	andeq	pc, r4, r8, lsr #18
   161f0:	andeq	r0, r0, r3, lsl #8
   161f4:	andeq	lr, r4, ip, lsl sp
   161f8:	andeq	r6, r5, r8, asr r3
   161fc:	strdeq	pc, [r4], -r0
   16200:	andeq	r0, r0, r2, asr #2
   16204:	andeq	lr, r4, ip, ror #25
   16208:	andeq	r1, r5, r4, lsr #19
   1620c:	andeq	pc, r4, r0, asr #17
   16210:	andeq	r0, r0, r3, asr #2
   16214:			; <UNDEFINED> instruction: 0x0004ecbc
   16218:	andeq	pc, r4, r0, lsl #16
   1621c:	muleq	r4, r0, r8
   16220:	andeq	r2, r8, ip, asr r7
   16224:	andeq	r1, r5, r4, ror r9
   16228:	muleq	r4, r0, r7
   1622c:			; <UNDEFINED> instruction: 0x0004fbb8
   16230:	andeq	r1, r6, r0, lsr #25
   16234:	andeq	r1, r5, r0, lsl r8
   16238:	muleq	r5, ip, r3
   1623c:	andeq	r1, r5, r0, asr #11
   16240:			; <UNDEFINED> instruction: 0x000823b0
   16244:	andeq	lr, r4, r4, lsr #16
   16248:	andeq	r1, r5, r8, ror r5
   1624c:	andeq	pc, r4, r0, ror #7
   16250:			; <UNDEFINED> instruction: 0x000822bc
   16254:	andeq	r1, r5, ip, lsl #10
   16258:	andeq	pc, r4, ip, ror #5
   1625c:	muleq	r0, sl, r1
   16260:	andeq	r2, r8, r4, asr #2
   16264:	andeq	r1, r5, ip, ror #5
   16268:			; <UNDEFINED> instruction: 0x0004e5b8
   1626c:	muleq	r4, r4, r1
   16270:	andeq	lr, r4, r0, lsr #29
   16274:	andeq	lr, r4, ip, ror lr
   16278:	andeq	lr, r4, r4, lsr #9
   1627c:	muleq	r5, r0, r1
   16280:	andeq	pc, r4, r8, ror r0	; <UNPREDICTABLE>
   16284:	andeq	lr, r4, r8, asr #27
   16288:	andeq	lr, r4, ip, asr #8
   1628c:			; <UNDEFINED> instruction: 0x000511b4
   16290:	andeq	pc, r4, r0, lsr #32
   16294:	andeq	r0, r0, r5, lsr r1
   16298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1629c:	sub	sp, sp, #1584	; 0x630
   162a0:	ldr	r5, [pc, #4052]	; 1727c <blkid_probe_get_size@plt+0xfd64>
   162a4:	ldr	r3, [pc, #4052]	; 17280 <blkid_probe_get_size@plt+0xfd68>
   162a8:	add	r5, pc, r5
   162ac:	sub	sp, sp, #4
   162b0:	ldr	fp, [r5, r3]
   162b4:	mov	r7, r0
   162b8:	mov	r6, r1
   162bc:	ldr	r3, [fp]
   162c0:	mov	r0, #1
   162c4:	mov	r1, #7
   162c8:	str	r3, [sp, #1580]	; 0x62c
   162cc:	ldr	r4, [pc, #4016]	; 17284 <blkid_probe_get_size@plt+0xfd6c>
   162d0:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
   162d4:	ldr	r0, [pc, #4012]	; 17288 <blkid_probe_get_size@plt+0xfd70>
   162d8:	add	r4, pc, r4
   162dc:	add	r0, pc, r0
   162e0:	add	r4, r4, #852	; 0x354
   162e4:	add	r8, r0, #840	; 0x348
   162e8:	ldr	r2, [pc, #3996]	; 1728c <blkid_probe_get_size@plt+0xfd74>
   162ec:	mov	r3, #0
   162f0:	str	r3, [sp]
   162f4:	add	r2, pc, r2
   162f8:	mov	r3, r4
   162fc:	mov	r1, r6
   16300:	mov	r0, r7
   16304:	bl	70a4 <getopt_long@plt>
   16308:	cmp	r0, #0
   1630c:	blt	1694c <blkid_probe_get_size@plt+0xf434>
   16310:	sub	r0, r0, #63	; 0x3f
   16314:	cmp	r0, #41	; 0x29
   16318:	addls	pc, pc, r0, lsl #2
   1631c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16320:	b	163c8 <blkid_probe_get_size@plt+0xeeb0>
   16324:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16328:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1632c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16330:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16334:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16338:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1633c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16340:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16344:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16348:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1634c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16350:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16354:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16358:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1635c:	b	16440 <blkid_probe_get_size@plt+0xef28>
   16360:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16364:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16368:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1636c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16370:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16374:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16378:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1637c:	b	1642c <blkid_probe_get_size@plt+0xef14>
   16380:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16384:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16388:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1638c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16390:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16394:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   16398:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   1639c:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163a0:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163a4:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163a8:	b	16410 <blkid_probe_get_size@plt+0xeef8>
   163ac:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163b0:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163b4:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163b8:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163bc:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163c0:	b	16710 <blkid_probe_get_size@plt+0xf1f8>
   163c4:	b	163ec <blkid_probe_get_size@plt+0xeed4>
   163c8:	mvn	r8, #21
   163cc:	ldr	r2, [sp, #1580]	; 0x62c
   163d0:	ldr	r3, [fp]
   163d4:	mov	r0, r8
   163d8:	cmp	r2, r3
   163dc:	bne	18120 <blkid_probe_get_size@plt+0x10c08>
   163e0:	add	sp, sp, #1584	; 0x630
   163e4:	add	sp, sp, #4
   163e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163ec:	ldr	r3, [pc, #3740]	; 17290 <blkid_probe_get_size@plt+0xfd78>
   163f0:	ldr	r1, [pc, #3740]	; 17294 <blkid_probe_get_size@plt+0xfd7c>
   163f4:	mov	r0, #1
   163f8:	ldr	r3, [r5, r3]
   163fc:	add	r1, pc, r1
   16400:	mov	r8, #0
   16404:	ldr	r2, [r3]
   16408:	bl	74f4 <__printf_chk@plt>
   1640c:	b	163cc <blkid_probe_get_size@plt+0xeeb4>
   16410:	ldr	r3, [pc, #3712]	; 17298 <blkid_probe_get_size@plt+0xfd80>
   16414:	ldr	r2, [pc, #3712]	; 1729c <blkid_probe_get_size@plt+0xfd84>
   16418:	ldr	r3, [r5, r3]
   1641c:	add	r2, pc, r2
   16420:	ldr	r3, [r3]
   16424:	str	r3, [r2]
   16428:	b	162e8 <blkid_probe_get_size@plt+0xedd0>
   1642c:	ldr	r0, [pc, #3692]	; 172a0 <blkid_probe_get_size@plt+0xfd88>
   16430:	mov	r8, #0
   16434:	add	r0, pc, r0
   16438:	bl	6b4c <puts@plt>
   1643c:	b	163cc <blkid_probe_get_size@plt+0xeeb4>
   16440:	ldr	r3, [pc, #3664]	; 17298 <blkid_probe_get_size@plt+0xfd80>
   16444:	mov	r1, #3
   16448:	mov	r0, r8
   1644c:	ldr	r3, [r5, r3]
   16450:	ldr	r2, [r3]
   16454:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   16458:	ldr	r3, [pc, #3652]	; 172a4 <blkid_probe_get_size@plt+0xfd8c>
   1645c:	add	r3, pc, r3
   16460:	cmp	r0, #0
   16464:	str	r0, [r3, #64]	; 0x40
   16468:	bge	162e8 <blkid_probe_get_size@plt+0xedd0>
   1646c:	ldr	r3, [pc, #3636]	; 172a8 <blkid_probe_get_size@plt+0xfd90>
   16470:	add	r3, pc, r3
   16474:	ldr	r3, [r3, #4]
   16478:	cmp	r3, #2
   1647c:	ble	163c8 <blkid_probe_get_size@plt+0xeeb0>
   16480:	ldr	r3, [pc, #3620]	; 172ac <blkid_probe_get_size@plt+0xfd94>
   16484:	ldr	r2, [pc, #3620]	; 172b0 <blkid_probe_get_size@plt+0xfd98>
   16488:	add	r3, pc, r3
   1648c:	add	r2, pc, r2
   16490:	str	r2, [sp, #4]
   16494:	add	r3, r3, #1184	; 0x4a0
   16498:	ldr	r2, [pc, #3604]	; 172b4 <blkid_probe_get_size@plt+0xfd9c>
   1649c:	add	r3, r3, #4
   164a0:	str	r3, [sp]
   164a4:	add	r2, pc, r2
   164a8:	mov	r3, #63	; 0x3f
   164ac:	mov	r1, #1073741846	; 0x40000016
   164b0:	ldr	r0, [pc, #3584]	; 172b8 <blkid_probe_get_size@plt+0xfda0>
   164b4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   164b8:	mov	r8, r0
   164bc:	cmp	r8, #0
   164c0:	ble	163cc <blkid_probe_get_size@plt+0xeeb4>
   164c4:	ldr	r0, [pc, #3568]	; 172bc <blkid_probe_get_size@plt+0xfda4>
   164c8:	add	sl, sp, #300	; 0x12c
   164cc:	add	r0, pc, r0
   164d0:	bl	6b4c <puts@plt>
   164d4:	mov	r2, sl
   164d8:	mov	r1, #0
   164dc:	mov	r0, #2
   164e0:	bl	74b8 <sigprocmask@plt>
   164e4:	cmp	r0, #0
   164e8:	blt	168b0 <blkid_probe_get_size@plt+0xf398>
   164ec:	bl	59124 <blkid_probe_get_size@plt+0x51c0c>
   164f0:	ldr	r3, [pc, #3528]	; 172c0 <blkid_probe_get_size@plt+0xfda8>
   164f4:	mov	r8, #0
   164f8:	add	r3, pc, r3
   164fc:	str	r8, [sp, #184]	; 0xb8
   16500:	ldr	r6, [r3, #64]	; 0x40
   16504:	cmp	r6, #2
   16508:	bhi	1691c <blkid_probe_get_size@plt+0xf404>
   1650c:	mov	r0, #56	; 0x38
   16510:	bl	7230 <malloc@plt>
   16514:	subs	r4, r0, #0
   16518:	beq	17220 <blkid_probe_get_size@plt+0xfd08>
   1651c:	mov	r2, #56	; 0x38
   16520:	mov	r1, r8
   16524:	bl	6c84 <memset@plt>
   16528:	str	r6, [r4, #8]
   1652c:	mov	r0, #24576	; 0x6000
   16530:	bl	7230 <malloc@plt>
   16534:	cmp	r0, #0
   16538:	str	r0, [r4, #12]
   1653c:	beq	17218 <blkid_probe_get_size@plt+0xfd00>
   16540:	mov	r3, #2048	; 0x800
   16544:	str	r3, [r4, #20]
   16548:	bl	39870 <blkid_probe_get_size@plt+0x32358>
   1654c:	cmp	r0, #0
   16550:	str	r0, [r4, #24]
   16554:	beq	17208 <blkid_probe_get_size@plt+0xfcf0>
   16558:	ldr	r6, [pc, #3428]	; 172c4 <blkid_probe_get_size@plt+0xfdac>
   1655c:	mov	r2, #1
   16560:	add	r6, pc, r6
   16564:	add	r6, r6, #932	; 0x3a4
   16568:	mov	r1, r4
   1656c:	mov	r0, r6
   16570:	bl	3fad4 <blkid_probe_get_size@plt+0x385bc>
   16574:	ldr	r1, [pc, #3404]	; 172c8 <blkid_probe_get_size@plt+0xfdb0>
   16578:	add	r7, sp, #192	; 0xc0
   1657c:	add	r1, pc, r1
   16580:	mov	r3, r6
   16584:	mov	r2, r8
   16588:	sub	r0, r7, #8
   1658c:	bl	4a7f8 <blkid_probe_get_size@plt+0x432e0>
   16590:	subs	r1, r0, #0
   16594:	blt	1673c <blkid_probe_get_size@plt+0xf224>
   16598:	ldr	r8, [sp, #184]	; 0xb8
   1659c:	cmp	r8, #0
   165a0:	beq	16620 <blkid_probe_get_size@plt+0xf108>
   165a4:	ldr	r6, [r8]
   165a8:	cmp	r6, #0
   165ac:	beq	16620 <blkid_probe_get_size@plt+0xf108>
   165b0:	add	r8, r8, #4
   165b4:	b	165c4 <blkid_probe_get_size@plt+0xf0ac>
   165b8:	ldr	r6, [r8], #4
   165bc:	cmp	r6, #0
   165c0:	beq	165e4 <blkid_probe_get_size@plt+0xf0cc>
   165c4:	mov	r0, r6
   165c8:	bl	723c <strlen@plt>
   165cc:	mov	r1, r6
   165d0:	mov	r2, r0
   165d4:	ldr	r0, [r4, #24]
   165d8:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   165dc:	cmp	r8, #0
   165e0:	bne	165b8 <blkid_probe_get_size@plt+0xf0a0>
   165e4:	ldr	r6, [sp, #184]	; 0xb8
   165e8:	cmp	r6, #0
   165ec:	beq	16620 <blkid_probe_get_size@plt+0xf108>
   165f0:	ldr	r1, [r6]
   165f4:	cmp	r1, #0
   165f8:	beq	16620 <blkid_probe_get_size@plt+0xf108>
   165fc:	add	r6, r6, #4
   16600:	b	16610 <blkid_probe_get_size@plt+0xf0f8>
   16604:	ldr	r1, [r6], #4
   16608:	cmp	r1, #0
   1660c:	beq	16620 <blkid_probe_get_size@plt+0xf108>
   16610:	mov	r0, r4
   16614:	bl	10e4c <blkid_probe_get_size@plt+0x9934>
   16618:	cmp	r6, #0
   1661c:	bne	16604 <blkid_probe_get_size@plt+0xf0ec>
   16620:	ldr	r8, [pc, #3236]	; 172cc <blkid_probe_get_size@plt+0xfdb4>
   16624:	mov	r6, #0
   16628:	add	r8, pc, r8
   1662c:	mov	r3, #53	; 0x35
   16630:	mov	r1, r7
   16634:	mov	r0, r4
   16638:	str	r6, [sp, #192]	; 0xc0
   1663c:	str	r6, [sp, #196]	; 0xc4
   16640:	strb	r3, [sp, #192]	; 0xc0
   16644:	str	r6, [sp, #200]	; 0xc8
   16648:	bl	9f78 <blkid_probe_get_size@plt+0x2a60>
   1664c:	ldr	r3, [r8, #4]
   16650:	cmp	r3, #6
   16654:	bgt	16798 <blkid_probe_get_size@plt+0xf280>
   16658:	ldr	r0, [r4, #24]
   1665c:	mov	r6, #0
   16660:	bl	3984c <blkid_probe_get_size@plt+0x32334>
   16664:	ldr	r0, [r4, #28]
   16668:	bl	69f0 <free@plt>
   1666c:	ldr	r0, [r4, #40]	; 0x28
   16670:	str	r6, [r4, #28]
   16674:	str	r6, [r4, #32]
   16678:	str	r6, [r4, #36]	; 0x24
   1667c:	bl	69f0 <free@plt>
   16680:	ldr	r0, [sp, #184]	; 0xb8
   16684:	str	r6, [r4, #40]	; 0x28
   16688:	cmp	r0, r6
   1668c:	str	r6, [r4, #44]	; 0x2c
   16690:	str	r6, [r4, #48]	; 0x30
   16694:	bne	16858 <blkid_probe_get_size@plt+0xf340>
   16698:	ldr	r3, [pc, #3120]	; 172d0 <blkid_probe_get_size@plt+0xfdb8>
   1669c:	mov	r2, #0
   166a0:	add	r3, pc, r3
   166a4:	str	r2, [sp, #192]	; 0xc0
   166a8:	ldr	r6, [r3]
   166ac:	cmp	r6, r2
   166b0:	beq	171d8 <blkid_probe_get_size@plt+0xfcc0>
   166b4:	ldr	r1, [pc, #3096]	; 172d4 <blkid_probe_get_size@plt+0xfdbc>
   166b8:	add	r7, sp, #192	; 0xc0
   166bc:	add	r1, pc, r1
   166c0:	add	r1, r1, #52	; 0x34
   166c4:	mov	r0, r7
   166c8:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   166cc:	subs	r8, r0, #0
   166d0:	ldr	r0, [sp, #192]	; 0xc0
   166d4:	bge	1689c <blkid_probe_get_size@plt+0xf384>
   166d8:	cmp	r0, #0
   166dc:	beq	166e4 <blkid_probe_get_size@plt+0xf1cc>
   166e0:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   166e4:	ldr	r3, [pc, #3052]	; 172d8 <blkid_probe_get_size@plt+0xfdc0>
   166e8:	add	r3, pc, r3
   166ec:	ldr	r3, [r3, #4]
   166f0:	cmp	r3, #2
   166f4:	bgt	16c4c <blkid_probe_get_size@plt+0xf734>
   166f8:	bl	590a8 <blkid_probe_get_size@plt+0x51b90>
   166fc:	cmp	r4, #0
   16700:	beq	163cc <blkid_probe_get_size@plt+0xeeb4>
   16704:	mov	r0, r4
   16708:	bl	59218 <blkid_probe_get_size@plt+0x51d00>
   1670c:	b	163cc <blkid_probe_get_size@plt+0xeeb4>
   16710:	ldr	r2, [pc, #3012]	; 172dc <blkid_probe_get_size@plt+0xfdc4>
   16714:	ldr	r1, [pc, #3012]	; 172e0 <blkid_probe_get_size@plt+0xfdc8>
   16718:	add	r2, pc, r2
   1671c:	add	r2, r2, #1200	; 0x4b0
   16720:	str	r2, [sp]
   16724:	ldr	r2, [pc, #3000]	; 172e4 <blkid_probe_get_size@plt+0xfdcc>
   16728:	mov	r3, #72	; 0x48
   1672c:	add	r2, pc, r2
   16730:	add	r1, pc, r1
   16734:	mov	r0, #1
   16738:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   1673c:	ldr	r3, [pc, #2980]	; 172e8 <blkid_probe_get_size@plt+0xfdd0>
   16740:	add	r3, pc, r3
   16744:	ldr	r3, [r3, #4]
   16748:	cmp	r3, #2
   1674c:	rsble	r8, r1, #0
   16750:	uxtble	r8, r8
   16754:	rsble	r8, r8, #0
   16758:	bgt	168e0 <blkid_probe_get_size@plt+0xf3c8>
   1675c:	ldr	r0, [sp, #184]	; 0xb8
   16760:	cmp	r0, #0
   16764:	beq	1676c <blkid_probe_get_size@plt+0xf254>
   16768:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   1676c:	mov	r0, r4
   16770:	bl	59218 <blkid_probe_get_size@plt+0x51d00>
   16774:	cmp	r8, #0
   16778:	bge	17640 <blkid_probe_get_size@plt+0x10128>
   1677c:	ldr	r3, [pc, #2920]	; 172ec <blkid_probe_get_size@plt+0xfdd4>
   16780:	add	r3, pc, r3
   16784:	ldr	r3, [r3, #4]
   16788:	cmp	r3, #2
   1678c:	bgt	16860 <blkid_probe_get_size@plt+0xf348>
   16790:	bl	590a8 <blkid_probe_get_size@plt+0x51b90>
   16794:	b	163cc <blkid_probe_get_size@plt+0xeeb4>
   16798:	ldrd	r2, [r4, #20]
   1679c:	ldr	r7, [pc, #2892]	; 172f0 <blkid_probe_get_size@plt+0xfdd8>
   167a0:	ldr	r9, [pc, #2892]	; 172f4 <blkid_probe_get_size@plt+0xfddc>
   167a4:	ldr	ip, [r3, #4]
   167a8:	add	r1, r2, r2, lsl #1
   167ac:	add	r7, pc, r7
   167b0:	ldr	r3, [pc, #2880]	; 172f8 <blkid_probe_get_size@plt+0xfde0>
   167b4:	add	r7, r7, #1232	; 0x4d0
   167b8:	add	r3, pc, r3
   167bc:	lsl	r1, r1, #2
   167c0:	mov	r0, #12
   167c4:	add	r9, pc, r9
   167c8:	add	r7, r7, #8
   167cc:	str	r1, [sp, #8]
   167d0:	str	r2, [sp, #12]
   167d4:	str	r3, [sp, #4]
   167d8:	str	r0, [sp, #16]
   167dc:	ldr	r3, [pc, #2840]	; 172fc <blkid_probe_get_size@plt+0xfde4>
   167e0:	str	ip, [sp, #20]
   167e4:	str	r7, [sp]
   167e8:	mov	r2, r9
   167ec:	mov	r1, r6
   167f0:	ldr	r0, [pc, #2824]	; 17300 <blkid_probe_get_size@plt+0xfde8>
   167f4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   167f8:	ldr	r3, [r8, #4]
   167fc:	cmp	r3, #6
   16800:	ble	16658 <blkid_probe_get_size@plt+0xf140>
   16804:	ldr	r3, [r4, #24]
   16808:	ldr	r0, [pc, #2804]	; 17304 <blkid_probe_get_size@plt+0xfdec>
   1680c:	mov	r2, r9
   16810:	ldr	ip, [r3, #12]
   16814:	add	r0, pc, r0
   16818:	str	ip, [sp, #24]
   1681c:	ldr	ip, [r3, #24]
   16820:	mov	r1, r6
   16824:	str	ip, [sp, #20]
   16828:	ldr	ip, [r3, #28]
   1682c:	str	ip, [sp, #16]
   16830:	ldr	ip, [r3, #20]
   16834:	str	ip, [sp, #12]
   16838:	ldr	r3, [r3, #16]
   1683c:	str	r0, [sp, #4]
   16840:	str	r3, [sp, #8]
   16844:	str	r7, [sp]
   16848:	ldr	r3, [pc, #2744]	; 17308 <blkid_probe_get_size@plt+0xfdf0>
   1684c:	ldr	r0, [pc, #2732]	; 17300 <blkid_probe_get_size@plt+0xfde8>
   16850:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   16854:	b	16658 <blkid_probe_get_size@plt+0xf140>
   16858:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   1685c:	b	16698 <blkid_probe_get_size@plt+0xf180>
   16860:	ldr	r3, [pc, #2724]	; 1730c <blkid_probe_get_size@plt+0xfdf4>
   16864:	ldr	r2, [pc, #2724]	; 17310 <blkid_probe_get_size@plt+0xfdf8>
   16868:	add	r3, pc, r3
   1686c:	add	r2, pc, r2
   16870:	str	r2, [sp, #4]
   16874:	add	r3, r3, #1248	; 0x4e0
   16878:	ldr	r2, [pc, #2708]	; 17314 <blkid_probe_get_size@plt+0xfdfc>
   1687c:	add	r3, r3, #8
   16880:	str	r3, [sp]
   16884:	add	r2, pc, r2
   16888:	mov	r3, #115	; 0x73
   1688c:	mov	r1, r8
   16890:	ldr	r0, [pc, #2592]	; 172b8 <blkid_probe_get_size@plt+0xfda0>
   16894:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   16898:	b	16790 <blkid_probe_get_size@plt+0xf278>
   1689c:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   168a0:	subs	r8, r0, #0
   168a4:	bge	169a4 <blkid_probe_get_size@plt+0xf48c>
   168a8:	ldr	r0, [sp, #192]	; 0xc0
   168ac:	b	166d8 <blkid_probe_get_size@plt+0xf1c0>
   168b0:	ldr	r2, [pc, #2656]	; 17318 <blkid_probe_get_size@plt+0xfe00>
   168b4:	ldr	r1, [pc, #2656]	; 1731c <blkid_probe_get_size@plt+0xfe04>
   168b8:	add	r2, pc, r2
   168bc:	add	r2, r2, #1200	; 0x4b0
   168c0:	add	r2, r2, #12
   168c4:	str	r2, [sp]
   168c8:	ldr	r2, [pc, #2640]	; 17320 <blkid_probe_get_size@plt+0xfe08>
   168cc:	mov	r3, #109	; 0x6d
   168d0:	add	r2, pc, r2
   168d4:	add	r1, pc, r1
   168d8:	mov	r0, #1
   168dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   168e0:	ldr	r3, [pc, #2620]	; 17324 <blkid_probe_get_size@plt+0xfe0c>
   168e4:	ldr	r2, [pc, #2620]	; 17328 <blkid_probe_get_size@plt+0xfe10>
   168e8:	add	r3, pc, r3
   168ec:	add	r2, pc, r2
   168f0:	str	r2, [sp, #4]
   168f4:	add	r3, r3, #1232	; 0x4d0
   168f8:	ldr	r2, [pc, #2604]	; 1732c <blkid_probe_get_size@plt+0xfe14>
   168fc:	add	r3, r3, #8
   16900:	str	r3, [sp]
   16904:	add	r2, pc, r2
   16908:	mov	r3, #1616	; 0x650
   1690c:	ldr	r0, [pc, #2468]	; 172b8 <blkid_probe_get_size@plt+0xfda0>
   16910:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   16914:	mov	r8, r0
   16918:	b	1675c <blkid_probe_get_size@plt+0xf244>
   1691c:	ldr	r2, [pc, #2572]	; 17330 <blkid_probe_get_size@plt+0xfe18>
   16920:	ldr	r1, [pc, #2572]	; 17334 <blkid_probe_get_size@plt+0xfe1c>
   16924:	add	r2, pc, r2
   16928:	add	r2, r2, #1216	; 0x4c0
   1692c:	add	r2, r2, #8
   16930:	str	r2, [sp]
   16934:	ldr	r2, [pc, #2556]	; 17338 <blkid_probe_get_size@plt+0xfe20>
   16938:	ldr	r3, [pc, #2556]	; 1733c <blkid_probe_get_size@plt+0xfe24>
   1693c:	add	r2, pc, r2
   16940:	add	r1, pc, r1
   16944:	mov	r0, #1
   16948:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1694c:	ldr	r3, [pc, #2540]	; 17340 <blkid_probe_get_size@plt+0xfe28>
   16950:	ldr	r3, [r5, r3]
   16954:	ldr	r3, [r3]
   16958:	ldr	r4, [r6, r3, lsl #2]
   1695c:	cmp	r4, #0
   16960:	beq	17228 <blkid_probe_get_size@plt+0xfd10>
   16964:	ldr	r1, [pc, #2520]	; 17344 <blkid_probe_get_size@plt+0xfe2c>
   16968:	mov	r2, #4
   1696c:	add	r1, pc, r1
   16970:	mov	r0, r4
   16974:	bl	6a5c <strncmp@plt>
   16978:	cmp	r0, #0
   1697c:	bne	17614 <blkid_probe_get_size@plt+0x100fc>
   16980:	cmn	r4, #4
   16984:	beq	17614 <blkid_probe_get_size@plt+0x100fc>
   16988:	ldr	r0, [pc, #2488]	; 17348 <blkid_probe_get_size@plt+0xfe30>
   1698c:	mov	r2, r4
   16990:	add	r0, pc, r0
   16994:	mov	r1, #1024	; 0x400
   16998:	add	r0, r0, #52	; 0x34
   1699c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   169a0:	b	164c4 <blkid_probe_get_size@plt+0xefac>
   169a4:	ldr	r1, [pc, #2464]	; 1734c <blkid_probe_get_size@plt+0xfe34>
   169a8:	mov	r2, r6
   169ac:	add	r1, pc, r1
   169b0:	ldr	r0, [sp, #192]	; 0xc0
   169b4:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   169b8:	subs	r8, r0, #0
   169bc:	blt	168a8 <blkid_probe_get_size@plt+0xf390>
   169c0:	ldr	r3, [sp, #192]	; 0xc0
   169c4:	cmp	r3, #0
   169c8:	str	r3, [sp, #52]	; 0x34
   169cc:	beq	176c0 <blkid_probe_get_size@plt+0x101a8>
   169d0:	ldr	r8, [sp, #52]	; 0x34
   169d4:	mov	r0, #80	; 0x50
   169d8:	ldrb	r3, [r8, #215]	; 0xd7
   169dc:	orr	r3, r3, #2
   169e0:	strb	r3, [r8, #215]	; 0xd7
   169e4:	bl	7230 <malloc@plt>
   169e8:	subs	r6, r0, #0
   169ec:	beq	16a24 <blkid_probe_get_size@plt+0xf50c>
   169f0:	mov	r0, r8
   169f4:	bl	253c4 <blkid_probe_get_size@plt+0x1deac>
   169f8:	mov	r8, r0
   169fc:	mov	r0, #1
   16a00:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   16a04:	mov	r2, #80	; 0x50
   16a08:	strd	r0, [sp, #56]	; 0x38
   16a0c:	mov	r1, #0
   16a10:	mov	r0, r6
   16a14:	bl	6c84 <memset@plt>
   16a18:	ldrd	r2, [sp, #56]	; 0x38
   16a1c:	str	r8, [r6]
   16a20:	strd	r2, [r6, #48]	; 0x30
   16a24:	add	r8, sp, #428	; 0x1ac
   16a28:	mov	r0, r8
   16a2c:	bl	6bc4 <sigfillset@plt>
   16a30:	cmp	r0, #0
   16a34:	blt	17858 <blkid_probe_get_size@plt+0x10340>
   16a38:	mov	r2, sl
   16a3c:	mov	r1, r8
   16a40:	mov	r0, #2
   16a44:	bl	74b8 <sigprocmask@plt>
   16a48:	lsrs	r3, r0, #31
   16a4c:	str	r3, [sp, #72]	; 0x48
   16a50:	bne	17888 <blkid_probe_get_size@plt+0x10370>
   16a54:	ldr	r3, [r6]
   16a58:	cmp	r4, #0
   16a5c:	str	r3, [sp, #64]	; 0x40
   16a60:	beq	178b8 <blkid_probe_get_size@plt+0x103a0>
   16a64:	ldr	r8, [sp, #64]	; 0x40
   16a68:	add	r3, sp, #144	; 0x90
   16a6c:	add	r1, sp, #132	; 0x84
   16a70:	mov	r0, r8
   16a74:	str	r3, [sp, #76]	; 0x4c
   16a78:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   16a7c:	subs	sl, r0, #0
   16a80:	bge	16c98 <blkid_probe_get_size@plt+0xf780>
   16a84:	ldr	r3, [sp, #72]	; 0x48
   16a88:	cmp	r8, #0
   16a8c:	str	r3, [sp, #192]	; 0xc0
   16a90:	beq	176f0 <blkid_probe_get_size@plt+0x101d8>
   16a94:	ldr	r3, [pc, #2228]	; 17350 <blkid_probe_get_size@plt+0xfe38>
   16a98:	add	r3, pc, r3
   16a9c:	ldr	r3, [r3, #4]
   16aa0:	cmp	r3, #2
   16aa4:	ldrle	r1, [sp, #72]	; 0x48
   16aa8:	movle	ip, r1
   16aac:	bgt	17b4c <blkid_probe_get_size@plt+0x10634>
   16ab0:	ldr	r3, [pc, #2204]	; 17354 <blkid_probe_get_size@plt+0xfe3c>
   16ab4:	ldr	r2, [pc, #2204]	; 17358 <blkid_probe_get_size@plt+0xfe40>
   16ab8:	add	r3, pc, r3
   16abc:	add	r2, pc, r2
   16ac0:	add	r3, r3, #1328	; 0x530
   16ac4:	add	r3, r3, #12
   16ac8:	str	r2, [sp, #20]
   16acc:	ldr	r2, [pc, #2184]	; 1735c <blkid_probe_get_size@plt+0xfe44>
   16ad0:	str	r3, [sp]
   16ad4:	ldr	r3, [pc, #2180]	; 17360 <blkid_probe_get_size@plt+0xfe48>
   16ad8:	str	r1, [sp, #8]
   16adc:	add	r2, pc, r2
   16ae0:	mov	r1, sl
   16ae4:	mov	r0, #0
   16ae8:	str	ip, [sp, #4]
   16aec:	str	r0, [sp, #16]
   16af0:	str	r0, [sp, #12]
   16af4:	mov	r0, #3
   16af8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   16afc:	add	sl, sp, #176	; 0xb0
   16b00:	add	r3, sp, #184	; 0xb8
   16b04:	str	r3, [sp, #68]	; 0x44
   16b08:	ldr	r9, [sp, #52]	; 0x34
   16b0c:	mov	r1, sl
   16b10:	mov	r0, r9
   16b14:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
   16b18:	subs	r2, r0, #0
   16b1c:	beq	16b50 <blkid_probe_get_size@plt+0xf638>
   16b20:	ldr	r8, [pc, #2108]	; 17364 <blkid_probe_get_size@plt+0xfe4c>
   16b24:	add	r8, pc, r8
   16b28:	ldr	r3, [sp, #176]	; 0xb0
   16b2c:	mov	r1, r8
   16b30:	mov	r0, #1
   16b34:	bl	74f4 <__printf_chk@plt>
   16b38:	mov	r1, sl
   16b3c:	mov	r0, r9
   16b40:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
   16b44:	subs	r2, r0, #0
   16b48:	bne	16b28 <blkid_probe_get_size@plt+0xf610>
   16b4c:	str	r9, [sp, #52]	; 0x34
   16b50:	mvn	r2, #1
   16b54:	mov	r3, #0
   16b58:	str	r4, [sp, #56]	; 0x38
   16b5c:	strd	r2, [sp, #192]	; 0xc0
   16b60:	ldr	r2, [pc, #2048]	; 17368 <blkid_probe_get_size@plt+0xfe50>
   16b64:	add	r3, sp, #172	; 0xac
   16b68:	add	r2, pc, r2
   16b6c:	str	r5, [sp, #64]	; 0x40
   16b70:	mov	r8, r7
   16b74:	add	sl, sp, #556	; 0x22c
   16b78:	ldr	r9, [sp, #52]	; 0x34
   16b7c:	mov	r4, r3
   16b80:	ldr	r7, [sp, #68]	; 0x44
   16b84:	mov	r5, r2
   16b88:	b	16bb8 <blkid_probe_get_size@plt+0xf6a0>
   16b8c:	mov	r3, #0
   16b90:	ldr	r1, [sp, #184]	; 0xb8
   16b94:	str	r3, [sp]
   16b98:	mov	r2, sl
   16b9c:	mov	r3, #1024	; 0x400
   16ba0:	mov	r0, r6
   16ba4:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   16ba8:	mov	r2, sl
   16bac:	mov	r1, r5
   16bb0:	mov	r0, #1
   16bb4:	bl	74f4 <__printf_chk@plt>
   16bb8:	mov	r3, r7
   16bbc:	mov	r2, r4
   16bc0:	mov	r1, r8
   16bc4:	ldr	r0, [r6, #36]	; 0x24
   16bc8:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   16bcc:	cmp	r0, #0
   16bd0:	bne	16b8c <blkid_probe_get_size@plt+0xf674>
   16bd4:	mov	r8, r0
   16bd8:	ldr	r5, [sp, #64]	; 0x40
   16bdc:	ldr	r4, [sp, #56]	; 0x38
   16be0:	str	r9, [sp, #52]	; 0x34
   16be4:	bl	590a8 <blkid_probe_get_size@plt+0x51b90>
   16be8:	ldr	r0, [sp, #52]	; 0x34
   16bec:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   16bf0:	ldr	r0, [r6]
   16bf4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   16bf8:	ldr	r0, [r6, #8]
   16bfc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   16c00:	ldr	r0, [r6, #56]	; 0x38
   16c04:	bl	344a0 <blkid_probe_get_size@plt+0x2cf88>
   16c08:	ldr	r3, [pc, #1884]	; 1736c <blkid_probe_get_size@plt+0xfe54>
   16c0c:	mov	r2, r8
   16c10:	ldr	r0, [r6, #36]	; 0x24
   16c14:	ldr	r5, [r5, r3]
   16c18:	mov	r1, r5
   16c1c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   16c20:	mov	r2, r5
   16c24:	mov	r1, r5
   16c28:	ldr	r0, [r6, #32]
   16c2c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   16c30:	ldr	r0, [r6, #16]
   16c34:	bl	69f0 <free@plt>
   16c38:	ldr	r0, [r6, #12]
   16c3c:	bl	69f0 <free@plt>
   16c40:	mov	r0, r6
   16c44:	bl	69f0 <free@plt>
   16c48:	b	16704 <blkid_probe_get_size@plt+0xf1ec>
   16c4c:	ldr	r2, [pc, #1820]	; 17370 <blkid_probe_get_size@plt+0xfe58>
   16c50:	ldr	r3, [pc, #1820]	; 17374 <blkid_probe_get_size@plt+0xfe5c>
   16c54:	add	r2, pc, r2
   16c58:	add	r2, r2, #52	; 0x34
   16c5c:	add	r3, pc, r3
   16c60:	ldr	r1, [pc, #1808]	; 17378 <blkid_probe_get_size@plt+0xfe60>
   16c64:	str	r2, [sp, #8]
   16c68:	add	r3, r3, #1248	; 0x4e0
   16c6c:	ldr	r2, [pc, #1800]	; 1737c <blkid_probe_get_size@plt+0xfe64>
   16c70:	add	r1, pc, r1
   16c74:	add	r3, r3, #8
   16c78:	str	r3, [sp]
   16c7c:	str	r1, [sp, #4]
   16c80:	mov	r3, #121	; 0x79
   16c84:	add	r2, pc, r2
   16c88:	mov	r1, r8
   16c8c:	ldr	r0, [pc, #1572]	; 172b8 <blkid_probe_get_size@plt+0xfda0>
   16c90:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   16c94:	b	166f8 <blkid_probe_get_size@plt+0xf1e0>
   16c98:	ldr	r3, [sp, #76]	; 0x4c
   16c9c:	ldr	r1, [pc, #1756]	; 17380 <blkid_probe_get_size@plt+0xfe68>
   16ca0:	sub	r2, r3, #8
   16ca4:	add	r1, pc, r1
   16ca8:	ldr	r0, [sp, #64]	; 0x40
   16cac:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   16cb0:	subs	sl, r0, #0
   16cb4:	blt	17648 <blkid_probe_get_size@plt+0x10130>
   16cb8:	ldr	r1, [pc, #1732]	; 17384 <blkid_probe_get_size@plt+0xfe6c>
   16cbc:	ldr	r0, [sp, #136]	; 0x88
   16cc0:	add	r1, pc, r1
   16cc4:	bl	7314 <strcmp@plt>
   16cc8:	subs	sl, r0, #0
   16ccc:	beq	176fc <blkid_probe_get_size@plt+0x101e4>
   16cd0:	ldr	r3, [sp, #64]	; 0x40
   16cd4:	cmp	r3, #0
   16cd8:	beq	17e44 <blkid_probe_get_size@plt+0x1092c>
   16cdc:	ldr	r8, [sp, #72]	; 0x48
   16ce0:	mov	r0, r7
   16ce4:	str	r8, [sp, #192]	; 0xc0
   16ce8:	bl	2552c <blkid_probe_get_size@plt+0x1e014>
   16cec:	subs	sl, r0, #0
   16cf0:	bge	17ad4 <blkid_probe_get_size@plt+0x105bc>
   16cf4:	ldr	r0, [sp, #192]	; 0xc0
   16cf8:	cmp	r0, #0
   16cfc:	bne	17fbc <blkid_probe_get_size@plt+0x10aa4>
   16d00:	ldr	r2, [pc, #1664]	; 17388 <blkid_probe_get_size@plt+0xfe70>
   16d04:	mov	r3, #0
   16d08:	add	r2, pc, r2
   16d0c:	str	r3, [sp, #192]	; 0xc0
   16d10:	ldr	r2, [r2, #4]
   16d14:	cmp	r2, #6
   16d18:	bgt	18574 <blkid_probe_get_size@plt+0x1105c>
   16d1c:	mov	r1, r3
   16d20:	ldr	r2, [pc, #1636]	; 1738c <blkid_probe_get_size@plt+0xfe74>
   16d24:	ldr	r0, [pc, #1636]	; 17390 <blkid_probe_get_size@plt+0xfe78>
   16d28:	add	r2, pc, r2
   16d2c:	add	r2, r2, #1328	; 0x530
   16d30:	add	r2, r2, #12
   16d34:	str	r2, [sp]
   16d38:	ldr	r2, [pc, #1620]	; 17394 <blkid_probe_get_size@plt+0xfe7c>
   16d3c:	add	r0, pc, r0
   16d40:	str	r3, [sp, #8]
   16d44:	mov	r3, #0
   16d48:	str	r1, [sp, #4]
   16d4c:	str	r0, [sp, #20]
   16d50:	str	r3, [sp, #16]
   16d54:	str	r3, [sp, #12]
   16d58:	mov	r1, sl
   16d5c:	mov	r3, #868	; 0x364
   16d60:	add	r2, pc, r2
   16d64:	mov	r0, #7
   16d68:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   16d6c:	ldr	r3, [r6, #8]
   16d70:	cmp	r3, #0
   16d74:	beq	16e18 <blkid_probe_get_size@plt+0xf900>
   16d78:	mov	r1, #0
   16d7c:	ldr	r0, [sp, #64]	; 0x40
   16d80:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   16d84:	subs	sl, r0, #0
   16d88:	bge	17ccc <blkid_probe_get_size@plt+0x107b4>
   16d8c:	cmn	sl, #2
   16d90:	beq	16e00 <blkid_probe_get_size@plt+0xf8e8>
   16d94:	ldr	r2, [pc, #1532]	; 17398 <blkid_probe_get_size@plt+0xfe80>
   16d98:	mov	r3, #0
   16d9c:	add	r2, pc, r2
   16da0:	str	r3, [sp, #192]	; 0xc0
   16da4:	ldr	r2, [r2, #4]
   16da8:	cmp	r2, #6
   16dac:	bgt	18754 <blkid_probe_get_size@plt+0x1123c>
   16db0:	mov	r1, r3
   16db4:	ldr	r2, [pc, #1504]	; 1739c <blkid_probe_get_size@plt+0xfe84>
   16db8:	ldr	r0, [pc, #1504]	; 173a0 <blkid_probe_get_size@plt+0xfe88>
   16dbc:	add	r2, pc, r2
   16dc0:	add	r2, r2, #1328	; 0x530
   16dc4:	add	r2, r2, #12
   16dc8:	str	r2, [sp]
   16dcc:	ldr	r2, [pc, #1488]	; 173a4 <blkid_probe_get_size@plt+0xfe8c>
   16dd0:	add	r0, pc, r0
   16dd4:	mov	ip, #0
   16dd8:	str	r3, [sp, #8]
   16ddc:	str	r1, [sp, #4]
   16de0:	str	r0, [sp, #20]
   16de4:	mov	r1, sl
   16de8:	str	ip, [sp, #16]
   16dec:	str	ip, [sp, #12]
   16df0:	ldr	r3, [pc, #1456]	; 173a8 <blkid_probe_get_size@plt+0xfe90>
   16df4:	add	r2, pc, r2
   16df8:	mov	r0, #7
   16dfc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   16e00:	ldr	r1, [pc, #1444]	; 173ac <blkid_probe_get_size@plt+0xfe94>
   16e04:	ldr	r0, [sp, #136]	; 0x88
   16e08:	add	r1, pc, r1
   16e0c:	bl	7314 <strcmp@plt>
   16e10:	subs	sl, r0, #0
   16e14:	beq	17fd0 <blkid_probe_get_size@plt+0x10ab8>
   16e18:	mov	r1, r6
   16e1c:	mov	r0, r4
   16e20:	bl	5dae8 <blkid_probe_get_size@plt+0x565d0>
   16e24:	ldr	r3, [r6, #12]
   16e28:	ldr	r0, [r6]
   16e2c:	cmp	r3, #0
   16e30:	str	r0, [sp, #56]	; 0x38
   16e34:	beq	16e6c <blkid_probe_get_size@plt+0xf954>
   16e38:	add	sl, sp, #176	; 0xb0
   16e3c:	sub	r1, sl, #4
   16e40:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   16e44:	subs	r3, r0, #0
   16e48:	mov	r8, r3
   16e4c:	blt	17dc0 <blkid_probe_get_size@plt+0x108a8>
   16e50:	ldr	r1, [sp, #172]	; 0xac
   16e54:	ldr	r0, [r6, #12]
   16e58:	bl	7314 <strcmp@plt>
   16e5c:	cmp	r0, #0
   16e60:	bne	17ed4 <blkid_probe_get_size@plt+0x109bc>
   16e64:	ldr	r3, [r6]
   16e68:	str	r3, [sp, #56]	; 0x38
   16e6c:	mov	r1, #0
   16e70:	ldr	r0, [sp, #56]	; 0x38
   16e74:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   16e78:	cmn	r0, #2
   16e7c:	mov	sl, r0
   16e80:	beq	1795c <blkid_probe_get_size@plt+0x10444>
   16e84:	cmp	r0, #0
   16e88:	blt	178e4 <blkid_probe_get_size@plt+0x103cc>
   16e8c:	ldr	r3, [r6, #8]
   16e90:	cmp	r3, #0
   16e94:	str	r3, [sp, #68]	; 0x44
   16e98:	beq	17cd8 <blkid_probe_get_size@plt+0x107c0>
   16e9c:	ldr	r3, [sp, #56]	; 0x38
   16ea0:	cmp	r3, #0
   16ea4:	beq	18238 <blkid_probe_get_size@plt+0x10d20>
   16ea8:	sub	r1, r7, #8
   16eac:	ldr	r0, [sp, #56]	; 0x38
   16eb0:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   16eb4:	subs	sl, r0, #0
   16eb8:	bge	1813c <blkid_probe_get_size@plt+0x10c24>
   16ebc:	ldr	r2, [pc, #1260]	; 173b0 <blkid_probe_get_size@plt+0xfe98>
   16ec0:	mov	r3, #0
   16ec4:	add	r2, pc, r2
   16ec8:	str	r3, [sp, #192]	; 0xc0
   16ecc:	ldr	r2, [r2, #4]
   16ed0:	cmp	r2, #6
   16ed4:	bgt	19470 <blkid_probe_get_size@plt+0x11f58>
   16ed8:	mov	r1, r3
   16edc:	ldr	r2, [pc, #1232]	; 173b4 <blkid_probe_get_size@plt+0xfe9c>
   16ee0:	ldr	r0, [pc, #1232]	; 173b8 <blkid_probe_get_size@plt+0xfea0>
   16ee4:	add	r2, pc, r2
   16ee8:	add	r2, r2, #1536	; 0x600
   16eec:	add	r2, r2, #12
   16ef0:	str	r2, [sp]
   16ef4:	ldr	r2, [pc, #1216]	; 173bc <blkid_probe_get_size@plt+0xfea4>
   16ef8:	add	r0, pc, r0
   16efc:	mov	ip, #0
   16f00:	str	r3, [sp, #8]
   16f04:	str	r1, [sp, #4]
   16f08:	str	r0, [sp, #20]
   16f0c:	mov	r1, sl
   16f10:	str	ip, [sp, #16]
   16f14:	str	ip, [sp, #12]
   16f18:	mov	r3, #248	; 0xf8
   16f1c:	add	r2, pc, r2
   16f20:	mov	r0, #7
   16f24:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   16f28:	ldrb	r3, [r6, #72]	; 0x48
   16f2c:	cmp	r3, #0
   16f30:	beq	17e7c <blkid_probe_get_size@plt+0x10964>
   16f34:	ldrb	r3, [r6, #70]	; 0x46
   16f38:	cmp	r3, #0
   16f3c:	beq	17cfc <blkid_probe_get_size@plt+0x107e4>
   16f40:	ldrb	r3, [r6, #74]	; 0x4a
   16f44:	cmp	r3, #0
   16f48:	bne	17d2c <blkid_probe_get_size@plt+0x10814>
   16f4c:	ldr	r3, [sp, #56]	; 0x38
   16f50:	cmp	r3, #0
   16f54:	beq	1932c <blkid_probe_get_size@plt+0x11e14>
   16f58:	ldr	r8, [sp, #56]	; 0x38
   16f5c:	mov	r1, #0
   16f60:	mov	r0, r8
   16f64:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   16f68:	subs	sl, r0, #0
   16f6c:	blt	185a4 <blkid_probe_get_size@plt+0x1108c>
   16f70:	ldr	r3, [r8, #200]	; 0xc8
   16f74:	cmn	r3, #1
   16f78:	beq	18714 <blkid_probe_get_size@plt+0x111fc>
   16f7c:	str	r3, [r6, #20]
   16f80:	ldr	r3, [sp, #76]	; 0x4c
   16f84:	ldr	r1, [pc, #1076]	; 173c0 <blkid_probe_get_size@plt+0xfea8>
   16f88:	sub	r2, r3, #4
   16f8c:	add	r1, pc, r1
   16f90:	ldr	r0, [sp, #56]	; 0x38
   16f94:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   16f98:	subs	sl, r0, #0
   16f9c:	blt	18598 <blkid_probe_get_size@plt+0x11080>
   16fa0:	ldr	r1, [pc, #1052]	; 173c4 <blkid_probe_get_size@plt+0xfeac>
   16fa4:	ldr	r0, [sp, #140]	; 0x8c
   16fa8:	add	r1, pc, r1
   16fac:	bl	7314 <strcmp@plt>
   16fb0:	cmp	r0, #0
   16fb4:	beq	17e70 <blkid_probe_get_size@plt+0x10958>
   16fb8:	ldrb	r3, [r6, #72]	; 0x48
   16fbc:	cmp	r3, #0
   16fc0:	bne	17e70 <blkid_probe_get_size@plt+0x10958>
   16fc4:	ldrb	r3, [r6, #70]	; 0x46
   16fc8:	cmp	r3, #0
   16fcc:	ldrbeq	r3, [r6, #74]	; 0x4a
   16fd0:	streq	r3, [sp, #84]	; 0x54
   16fd4:	bne	17e70 <blkid_probe_get_size@plt+0x10958>
   16fd8:	ldr	r3, [sp, #56]	; 0x38
   16fdc:	mov	sl, #0
   16fe0:	cmp	r3, #0
   16fe4:	ldr	r3, [r6, #20]
   16fe8:	str	sl, [sp, #148]	; 0x94
   16fec:	str	r3, [sp, #88]	; 0x58
   16ff0:	ldr	r3, [r6, #24]
   16ff4:	mov	r9, r3
   16ff8:	ldr	r3, [r6, #28]
   16ffc:	str	r3, [sp, #80]	; 0x50
   17000:	ldr	r3, [r6, #32]
   17004:	str	r3, [sp, #96]	; 0x60
   17008:	beq	19420 <blkid_probe_get_size@plt+0x11f08>
   1700c:	ldr	r1, [sp, #76]	; 0x4c
   17010:	ldr	r0, [sp, #56]	; 0x38
   17014:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   17018:	subs	r8, r0, #0
   1701c:	blt	186a0 <blkid_probe_get_size@plt+0x11188>
   17020:	ldr	r8, [pc, #928]	; 173c8 <blkid_probe_get_size@plt+0xfeb0>
   17024:	add	r8, pc, r8
   17028:	ldr	r3, [r8, #4]
   1702c:	cmp	r3, #6
   17030:	bgt	1935c <blkid_probe_get_size@plt+0x11e44>
   17034:	add	r3, sp, #184	; 0xb8
   17038:	str	r3, [sp, #68]	; 0x44
   1703c:	add	r3, sp, #1584	; 0x630
   17040:	mov	r8, #0
   17044:	str	r8, [r3, #-1424]!	; 0xfffffa70
   17048:	ldr	r0, [sp, #56]	; 0x38
   1704c:	sub	r1, r3, #8
   17050:	str	r3, [sp, #92]	; 0x5c
   17054:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   17058:	subs	sl, r0, #0
   1705c:	bge	182ac <blkid_probe_get_size@plt+0x10d94>
   17060:	ldr	r3, [pc, #868]	; 173cc <blkid_probe_get_size@plt+0xfeb4>
   17064:	str	r8, [sp, #192]	; 0xc0
   17068:	add	r3, pc, r3
   1706c:	ldr	r3, [r3, #4]
   17070:	cmp	r3, #6
   17074:	bgt	18778 <blkid_probe_get_size@plt+0x11260>
   17078:	mov	r1, r8
   1707c:	ldr	r2, [pc, #844]	; 173d0 <blkid_probe_get_size@plt+0xfeb8>
   17080:	ldr	r3, [pc, #844]	; 173d4 <blkid_probe_get_size@plt+0xfebc>
   17084:	add	r2, pc, r2
   17088:	str	r2, [sp, #20]
   1708c:	add	r3, pc, r3
   17090:	ldr	r2, [pc, #832]	; 173d8 <blkid_probe_get_size@plt+0xfec0>
   17094:	mov	r0, #0
   17098:	add	r3, r3, #1680	; 0x690
   1709c:	str	r1, [sp, #4]
   170a0:	str	r3, [sp]
   170a4:	mov	r1, sl
   170a8:	str	r0, [sp, #16]
   170ac:	str	r0, [sp, #12]
   170b0:	str	r8, [sp, #8]
   170b4:	ldr	r3, [pc, #800]	; 173dc <blkid_probe_get_size@plt+0xfec4>
   170b8:	add	r2, pc, r2
   170bc:	mov	r0, #7
   170c0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   170c4:	add	sl, sp, #176	; 0xb0
   170c8:	str	r0, [sp, #76]	; 0x4c
   170cc:	ldr	r3, [sp, #76]	; 0x4c
   170d0:	cmp	r3, #0
   170d4:	blt	17158 <blkid_probe_get_size@plt+0xfc40>
   170d8:	ldr	r3, [sp, #92]	; 0x5c
   170dc:	ldr	r0, [sp, #56]	; 0x38
   170e0:	sub	r1, r3, #12
   170e4:	bl	a04c <blkid_probe_get_size@plt+0x2b34>
   170e8:	subs	r8, r0, #0
   170ec:	bge	188b4 <blkid_probe_get_size@plt+0x1139c>
   170f0:	ldr	r2, [pc, #744]	; 173e0 <blkid_probe_get_size@plt+0xfec8>
   170f4:	mov	r3, #0
   170f8:	add	r2, pc, r2
   170fc:	str	r3, [sp, #192]	; 0xc0
   17100:	ldr	r2, [r2, #4]
   17104:	cmp	r2, #6
   17108:	bgt	18890 <blkid_probe_get_size@plt+0x11378>
   1710c:	mov	r1, r3
   17110:	ldr	r2, [pc, #716]	; 173e4 <blkid_probe_get_size@plt+0xfecc>
   17114:	ldr	r0, [pc, #716]	; 173e8 <blkid_probe_get_size@plt+0xfed0>
   17118:	add	r2, pc, r2
   1711c:	add	r2, r2, #1664	; 0x680
   17120:	str	r2, [sp]
   17124:	ldr	r2, [pc, #704]	; 173ec <blkid_probe_get_size@plt+0xfed4>
   17128:	add	r0, pc, r0
   1712c:	mov	ip, #0
   17130:	str	r3, [sp, #8]
   17134:	str	r1, [sp, #4]
   17138:	str	r0, [sp, #20]
   1713c:	mov	r1, r8
   17140:	str	ip, [sp, #16]
   17144:	str	ip, [sp, #12]
   17148:	ldr	r3, [pc, #672]	; 173f0 <blkid_probe_get_size@plt+0xfed8>
   1714c:	add	r2, pc, r2
   17150:	mov	r0, #7
   17154:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17158:	ldr	r0, [sp, #148]	; 0x94
   1715c:	bl	69f0 <free@plt>
   17160:	ldr	r3, [r6, #8]
   17164:	cmp	r3, #0
   17168:	beq	17178 <blkid_probe_get_size@plt+0xfc60>
   1716c:	ldrd	r2, [r3, #192]	; 0xc0
   17170:	orrs	r1, r2, r3
   17174:	bne	17188 <blkid_probe_get_size@plt+0xfc70>
   17178:	mov	r0, #1
   1717c:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   17180:	mov	r2, r0
   17184:	mov	r3, r1
   17188:	ldr	r0, [sp, #64]	; 0x40
   1718c:	bl	35964 <blkid_probe_get_size@plt+0x2e44c>
   17190:	subs	r8, r0, #0
   17194:	blt	17be0 <blkid_probe_get_size@plt+0x106c8>
   17198:	mov	r2, #1
   1719c:	ldr	r1, [r6, #8]
   171a0:	ldr	r0, [sp, #64]	; 0x40
   171a4:	bl	26bb4 <blkid_probe_get_size@plt+0x1f69c>
   171a8:	subs	r8, r0, #0
   171ac:	blt	17b70 <blkid_probe_get_size@plt+0x10658>
   171b0:	ldr	r0, [sp, #64]	; 0x40
   171b4:	bl	265bc <blkid_probe_get_size@plt+0x1f0a4>
   171b8:	subs	r8, r0, #0
   171bc:	blt	17c50 <blkid_probe_get_size@plt+0x10738>
   171c0:	ldr	r0, [sp, #64]	; 0x40
   171c4:	bl	26cfc <blkid_probe_get_size@plt+0x1f7e4>
   171c8:	ldr	r0, [r6, #8]
   171cc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   171d0:	str	r0, [r6, #8]
   171d4:	b	16b08 <blkid_probe_get_size@plt+0xf5f0>
   171d8:	ldr	r3, [pc, #532]	; 173f4 <blkid_probe_get_size@plt+0xfedc>
   171dc:	ldr	r2, [pc, #532]	; 173f8 <blkid_probe_get_size@plt+0xfee0>
   171e0:	add	r3, pc, r3
   171e4:	add	r3, r3, #1264	; 0x4f0
   171e8:	ldr	r1, [pc, #524]	; 173fc <blkid_probe_get_size@plt+0xfee4>
   171ec:	add	r3, r3, #4
   171f0:	str	r3, [sp]
   171f4:	mov	r0, r6
   171f8:	mov	r3, #668	; 0x29c
   171fc:	add	r2, pc, r2
   17200:	add	r1, pc, r1
   17204:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   17208:	ldr	r0, [sp, #184]	; 0xb8
   1720c:	cmp	r0, #0
   17210:	mvnne	r8, #11
   17214:	bne	16768 <blkid_probe_get_size@plt+0xf250>
   17218:	mov	r0, r4
   1721c:	bl	59218 <blkid_probe_get_size@plt+0x51d00>
   17220:	mvn	r8, #11
   17224:	b	1677c <blkid_probe_get_size@plt+0xf264>
   17228:	ldr	r3, [pc, #464]	; 17400 <blkid_probe_get_size@plt+0xfee8>
   1722c:	add	r3, pc, r3
   17230:	ldr	r3, [r3, #4]
   17234:	cmp	r3, #2
   17238:	ble	163c8 <blkid_probe_get_size@plt+0xeeb0>
   1723c:	ldr	r3, [pc, #448]	; 17404 <blkid_probe_get_size@plt+0xfeec>
   17240:	ldr	r2, [pc, #448]	; 17408 <blkid_probe_get_size@plt+0xfef0>
   17244:	add	r3, pc, r3
   17248:	add	r2, pc, r2
   1724c:	str	r2, [sp, #4]
   17250:	add	r3, r3, #1184	; 0x4a0
   17254:	ldr	r2, [pc, #432]	; 1740c <blkid_probe_get_size@plt+0xfef4>
   17258:	add	r3, r3, #4
   1725c:	str	r3, [sp]
   17260:	add	r2, pc, r2
   17264:	mov	r3, #77	; 0x4d
   17268:	mov	r1, #1073741846	; 0x40000016
   1726c:	ldr	r0, [pc, #68]	; 172b8 <blkid_probe_get_size@plt+0xfda0>
   17270:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   17274:	mov	r8, r0
   17278:	b	164bc <blkid_probe_get_size@plt+0xefa4>
   1727c:	andeq	r1, r8, r0, asr #17
   17280:	andeq	r0, r0, ip, lsr r4
   17284:	andeq	r2, r7, r8, lsr sp
   17288:	andeq	r2, r7, r4, lsr sp
   1728c:	andeq	r1, r5, r8, asr r2
   17290:	andeq	r0, r0, r0, lsl #9
   17294:	andeq	r1, r5, r8, lsr r0
   17298:	andeq	r0, r0, r8, asr r4
   1729c:	andeq	r1, r8, r0, asr ip
   172a0:	strdeq	lr, [r4], -r8
   172a4:	andeq	r1, r8, r4, lsr #23
   172a8:	andeq	r1, r8, ip, asr #25
   172ac:	andeq	lr, r4, r8, asr #2
   172b0:	andeq	r0, r5, r8, ror pc
   172b4:	andeq	r0, r5, r4, asr #30
   172b8:	andeq	r0, r0, r3, lsl #8
   172bc:	andeq	r1, r5, r4, lsr #1
   172c0:	andeq	r1, r8, r8, lsl #22
   172c4:			; <UNDEFINED> instruction: 0x00072ab0
   172c8:	andeq	r1, r5, r8, lsr r1
   172cc:	andeq	r1, r8, r4, lsl fp
   172d0:	andeq	r1, r8, ip, asr #19
   172d4:	andeq	r1, r8, r8, lsr #22
   172d8:	andeq	r1, r8, r4, asr sl
   172dc:			; <UNDEFINED> instruction: 0x0004deb8
   172e0:	andeq	lr, r4, ip, ror lr
   172e4:			; <UNDEFINED> instruction: 0x00050cbc
   172e8:	strdeq	r1, [r8], -ip
   172ec:			; <UNDEFINED> instruction: 0x000819bc
   172f0:	andeq	sp, r4, r4, lsr #28
   172f4:	andeq	lr, r4, r0, asr #13
   172f8:	andeq	r0, r5, r8, lsr #30
   172fc:	andeq	r0, r0, pc, asr r6
   17300:	andeq	r0, r0, r7, lsl #8
   17304:	andeq	r0, r5, r0, lsl pc
   17308:	andeq	r0, r0, r4, ror #12
   1730c:	andeq	sp, r4, r8, ror #26
   17310:	andeq	r0, r5, r4, lsl #30
   17314:	andeq	r0, r5, r4, ror #22
   17318:	andeq	sp, r4, r8, lsl sp
   1731c:	andeq	r0, r5, r0, ror #26
   17320:	andeq	r0, r5, r8, lsl fp
   17324:	andeq	sp, r4, r8, ror #25
   17328:	ldrdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   1732c:	andeq	lr, r4, r0, lsl #11
   17330:	andeq	sp, r4, ip, lsr #25
   17334:	andeq	r0, r5, r8, lsr #26
   17338:	andeq	lr, r4, r8, asr #10
   1733c:	andeq	r0, r0, r8, lsr r6
   17340:	andeq	r0, r0, r0, asr #8
   17344:	muleq	r4, r0, ip
   17348:	andeq	r1, r8, r4, asr r8
   1734c:	andeq	lr, r4, ip, ror #26
   17350:	andeq	r1, r8, r4, lsr #13
   17354:	andeq	sp, r4, r8, lsl fp
   17358:	andeq	r0, r5, r0, ror #26
   1735c:	andeq	lr, r4, r0, ror #13
   17360:	andeq	r0, r0, r7, asr r3
   17364:	andeq	lr, r4, r8, asr #24
   17368:	andeq	r1, r5, r4, asr #7
   1736c:	andeq	r0, r0, r8, lsr r4
   17370:	muleq	r8, r0, r5
   17374:	andeq	sp, r4, r4, ror r9
   17378:	muleq	r4, r4, r9
   1737c:	andeq	r0, r5, r4, ror #14
   17380:	andeq	lr, r4, r4, ror sl
   17384:	muleq	r5, ip, fp
   17388:	andeq	r1, r8, r4, lsr r4
   1738c:	andeq	sp, r4, r8, lsr #17
   17390:	strdeq	r0, [r5], -r4
   17394:	andeq	lr, r4, ip, asr r4
   17398:	andeq	r1, r8, r0, lsr #7
   1739c:	andeq	sp, r4, r4, lsl r8
   173a0:	muleq	r5, r0, fp
   173a4:	andeq	lr, r4, r8, asr #7
   173a8:	andeq	r0, r0, sl, ror #6
   173ac:	ldrdeq	lr, [r5], -r4
   173b0:	andeq	r1, r8, r8, ror r2
   173b4:	andeq	sp, r4, ip, ror #13
   173b8:	andeq	r0, r5, r8, lsl #24
   173bc:	ldrdeq	sp, [r4], -ip
   173c0:	andeq	lr, r4, ip, lsl #15
   173c4:	andeq	r0, r5, r0, asr #20
   173c8:	andeq	r1, r8, r8, lsl r1
   173cc:	ldrdeq	r1, [r8], -r4
   173d0:	andeq	r0, r5, r8, lsl #23
   173d4:	andeq	sp, r4, r4, asr #10
   173d8:	andeq	sp, r4, r0, asr #28
   173dc:	andeq	r0, r0, sp, lsl r1
   173e0:	andeq	r1, r8, r4, asr #32
   173e4:			; <UNDEFINED> instruction: 0x0004d4b8
   173e8:	andeq	pc, r4, r8, lsl r2	; <UNPREDICTABLE>
   173ec:	andeq	sp, r4, ip, lsr #27
   173f0:	muleq	r0, lr, r1
   173f4:	strdeq	sp, [r4], -r0
   173f8:	muleq	r5, r4, r5
   173fc:	andeq	r0, r5, r0, asr #11
   17400:	andeq	r0, r8, r0, lsl pc
   17404:	andeq	sp, r4, ip, lsl #7
   17408:	andeq	r0, r5, ip, lsl #6
   1740c:	andeq	r0, r5, r8, lsl #3
   17410:	andeq	r0, r8, r0, asr #23
   17414:	ldrdeq	sp, [r4], -r0
   17418:	ldrdeq	r0, [r8], -ip
   1741c:	andeq	ip, r4, r0, asr pc
   17420:	andeq	r0, r5, ip, lsr #3
   17424:	andeq	sp, r4, r4, lsl #22
   17428:	andeq	r0, r0, fp, asr r3
   1742c:	andeq	ip, r4, r8, lsl #30
   17430:	andeq	r0, r5, ip, lsr #1
   17434:	andeq	r3, r5, r8, ror r8
   17438:	andeq	r0, r0, r7, ror #2
   1743c:	andeq	r0, r8, r8, asr r9
   17440:	andeq	ip, r4, ip, asr #27
   17444:	andeq	lr, r4, r8, lsr #22
   17448:			; <UNDEFINED> instruction: 0x0004d6bc
   1744c:			; <UNDEFINED> instruction: 0x000001b7
   17450:	andeq	ip, r4, r0, ror sp
   17454:	andeq	pc, r4, ip, asr #30
   17458:	andeq	pc, r4, r0, ror fp	; <UNPREDICTABLE>
   1745c:	andeq	ip, r4, r0, asr #26
   17460:	andeq	pc, r4, r4, lsr pc	; <UNPREDICTABLE>
   17464:	andeq	pc, r4, r0, asr #22
   17468:	andeq	ip, r4, r0, lsl sp
   1746c:	andeq	pc, r4, ip, lsr pc	; <UNPREDICTABLE>
   17470:	andeq	sp, r4, r8, ror #17
   17474:	andeq	r0, r0, r3, asr r3
   17478:	andeq	r0, r8, r0, asr #16
   1747c:	andeq	r0, r5, r8, asr #3
   17480:			; <UNDEFINED> instruction: 0x0004ccb0
   17484:	andeq	sp, r4, ip, ror r8
   17488:			; <UNDEFINED> instruction: 0x000807bc
   1748c:	andeq	ip, r4, r4, lsr ip
   17490:	andeq	pc, r4, r4, lsr pc	; <UNPREDICTABLE>
   17494:	andeq	sp, r4, r8, ror #15
   17498:	andeq	r0, r0, pc, lsr r3
   1749c:	andeq	r0, r8, r4, asr #14
   174a0:			; <UNDEFINED> instruction: 0x0004cbbc
   174a4:	andeq	pc, r4, r0, ror lr	; <UNPREDICTABLE>
   174a8:	andeq	sp, r4, r0, ror r7
   174ac:	andeq	r0, r0, fp, lsr r3
   174b0:	ldrdeq	r0, [r8], -r0	; <UNPREDICTABLE>
   174b4:	andeq	ip, r4, r4, asr #22
   174b8:	ldrdeq	pc, [r4], -r4
   174bc:	strdeq	sp, [r4], -r8
   174c0:	andeq	r0, r0, r7, lsr r3
   174c4:	ldrdeq	sp, [r4], -r0
   174c8:	andeq	r0, r8, r4, asr #11
   174cc:	andeq	ip, r4, r8, lsr sl
   174d0:	andeq	r0, r5, r0, lsl #6
   174d4:	andeq	sp, r4, ip, ror #11
   174d8:	andeq	r0, r0, r3, lsl #7
   174dc:	andeq	r0, r8, r4, asr r5
   174e0:	andeq	ip, r4, r8, asr #19
   174e4:	andeq	r0, r5, r8, asr r2
   174e8:	andeq	sp, r4, ip, ror r5
   174ec:	andeq	r0, r0, lr, ror r3
   174f0:	andeq	r0, r8, r4, ror #9
   174f4:	andeq	ip, r4, r8, asr r9
   174f8:	andeq	r0, r5, ip, asr r2
   174fc:	andeq	sp, r4, ip, lsl #10
   17500:	andeq	r0, r0, r7, lsl #7
   17504:	andeq	sp, r4, r0, ror #19
   17508:	ldrdeq	r0, [r8], -r8
   1750c:	andeq	ip, r4, r4, asr #16
   17510:	muleq	r4, r8, sl
   17514:	andeq	sp, r4, r4, lsl #8
   17518:	andeq	r0, r0, r6, lsr #6
   1751c:	andeq	r0, r8, r4, ror #6
   17520:	ldrdeq	ip, [r4], -r4
   17524:	andeq	pc, r4, r4, asr #23
   17528:	muleq	r4, r0, r3
   1752c:			; <UNDEFINED> instruction: 0x000002b2
   17530:	andeq	ip, r4, r4, lsl #15
   17534:	andeq	pc, r4, ip, lsr #18
   17538:			; <UNDEFINED> instruction: 0x0004fabc
   1753c:	andeq	sp, r4, ip, rrx
   17540:	andeq	sp, r4, ip, lsr r8
   17544:	andeq	pc, r4, ip, ror #21
   17548:	strdeq	r0, [r8], -r8
   1754c:	andeq	ip, r4, r8, ror #12
   17550:	andeq	pc, r4, r8, ror sl	; <UNPREDICTABLE>
   17554:	andeq	sp, r4, r4, lsr #4
   17558:	andeq	r0, r0, r2, asr #5
   1755c:	andeq	ip, r4, r4, lsl r5
   17560:	andeq	sp, r4, ip, lsr #13
   17564:	andeq	ip, r4, r4, lsr #28
   17568:	andeq	r0, r0, pc, lsr #3
   1756c:	ldrdeq	ip, [r4], -r8
   17570:	andeq	pc, r4, ip, ror r6	; <UNPREDICTABLE>
   17574:	andeq	r2, r5, r8, asr #28
   17578:	andeq	ip, r4, ip, ror r4
   1757c:	andeq	pc, r7, r8, ror pc	; <UNPREDICTABLE>
   17580:	andeq	pc, r4, r8, lsr #18
   17584:	andeq	ip, r4, r0, ror #25
   17588:	andeq	r0, r0, sl, lsl #2
   1758c:	muleq	r4, r0, r3
   17590:	andeq	sp, r4, ip, lsr #10
   17594:	andeq	ip, r4, r4, lsr #25
   17598:			; <UNDEFINED> instruction: 0x0004ccb8
   1759c:	muleq	r4, r4, ip
   175a0:	andeq	pc, r7, r0, ror lr	; <UNPREDICTABLE>
   175a4:	andeq	pc, r4, r4, lsr r5	; <UNPREDICTABLE>
   175a8:	andeq	ip, r4, r0, ror #5
   175ac:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   175b0:	andeq	ip, r4, r8, ror #23
   175b4:	ldrdeq	pc, [r7], -r4
   175b8:	andeq	ip, r4, r8, asr #4
   175bc:			; <UNDEFINED> instruction: 0x0004f7b4
   175c0:	andeq	ip, r4, r0, lsl #28
   175c4:	andeq	r0, r0, sp, lsl #6
   175c8:	andeq	pc, r7, r8, ror #26
   175cc:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   175d0:	andeq	pc, r4, r4, lsl #11
   175d4:	muleq	r4, r0, sp
   175d8:	andeq	r0, r0, pc, ror #6
   175dc:	andeq	pc, r7, r8, ror #25
   175e0:	andeq	ip, r4, r8, asr r1
   175e4:			; <UNDEFINED> instruction: 0x0004f3b4
   175e8:	andeq	ip, r4, r4, lsl sp
   175ec:			; <UNDEFINED> instruction: 0x000002b9
   175f0:	andeq	ip, r4, ip, asr sl
   175f4:	andeq	ip, r4, r8, lsr sl
   175f8:	andeq	ip, r4, r4, lsl sl
   175fc:	strdeq	ip, [r4], -r0
   17600:	andeq	ip, r4, ip, asr #19
   17604:	andeq	ip, r4, r8, lsr #19
   17608:	andeq	pc, r7, r8, lsl #23
   1760c:	strdeq	fp, [r4], -ip
   17610:	andeq	pc, r4, r8, lsr #11
   17614:	mov	r2, #0
   17618:	ldr	r0, [pc, #-528]	; 17410 <blkid_probe_get_size@plt+0xfef8>
   1761c:	str	r2, [sp]
   17620:	ldr	r2, [pc, #-532]	; 17414 <blkid_probe_get_size@plt+0xfefc>
   17624:	add	r0, pc, r0
   17628:	mov	r3, r4
   1762c:	add	r2, pc, r2
   17630:	mov	r1, #1024	; 0x400
   17634:	add	r0, r0, #52	; 0x34
   17638:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   1763c:	b	164c4 <blkid_probe_get_size@plt+0xefac>
   17640:	mov	r4, #0
   17644:	b	16698 <blkid_probe_get_size@plt+0xf180>
   17648:	ldr	r3, [sp, #64]	; 0x40
   1764c:	cmp	r3, #0
   17650:	ldr	r3, [sp, #72]	; 0x48
   17654:	str	r3, [sp, #192]	; 0xc0
   17658:	beq	17b40 <blkid_probe_get_size@plt+0x10628>
   1765c:	ldr	r3, [pc, #-588]	; 17418 <blkid_probe_get_size@plt+0xff00>
   17660:	add	r3, pc, r3
   17664:	ldr	r3, [r3, #4]
   17668:	cmp	r3, #2
   1766c:	ldrle	r2, [sp, #72]	; 0x48
   17670:	movle	r1, r2
   17674:	bgt	17eb0 <blkid_probe_get_size@plt+0x10998>
   17678:	ldr	r3, [pc, #-612]	; 1741c <blkid_probe_get_size@plt+0xff04>
   1767c:	ldr	r0, [pc, #-612]	; 17420 <blkid_probe_get_size@plt+0xff08>
   17680:	add	r3, pc, r3
   17684:	add	r3, r3, #1328	; 0x530
   17688:	add	r3, r3, #12
   1768c:	add	r0, pc, r0
   17690:	str	r2, [sp, #8]
   17694:	str	r3, [sp]
   17698:	mov	r2, #0
   1769c:	mov	r3, r0
   176a0:	str	r2, [sp, #12]
   176a4:	strd	r2, [sp, #16]
   176a8:	ldr	r2, [pc, #-652]	; 17424 <blkid_probe_get_size@plt+0xff0c>
   176ac:	str	r1, [sp, #4]
   176b0:	ldr	r3, [pc, #-656]	; 17428 <blkid_probe_get_size@plt+0xff10>
   176b4:	mov	r1, sl
   176b8:	add	r2, pc, r2
   176bc:	b	16af4 <blkid_probe_get_size@plt+0xf5dc>
   176c0:	ldr	r3, [pc, #-668]	; 1742c <blkid_probe_get_size@plt+0xff14>
   176c4:	ldr	r2, [pc, #-668]	; 17430 <blkid_probe_get_size@plt+0xff18>
   176c8:	add	r3, pc, r3
   176cc:	add	r3, r3, #1296	; 0x510
   176d0:	ldr	r1, [pc, #-676]	; 17434 <blkid_probe_get_size@plt+0xff1c>
   176d4:	add	r3, r3, #4
   176d8:	str	r3, [sp]
   176dc:	ldr	r0, [sp, #52]	; 0x34
   176e0:	ldr	r3, [pc, #-688]	; 17438 <blkid_probe_get_size@plt+0xff20>
   176e4:	add	r2, pc, r2
   176e8:	add	r1, pc, r1
   176ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   176f0:	ldr	r1, [sp, #64]	; 0x40
   176f4:	mov	ip, r1
   176f8:	b	16ab0 <blkid_probe_get_size@plt+0xf598>
   176fc:	ldr	r8, [r6]
   17700:	mov	r1, #1
   17704:	mov	r0, r8
   17708:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   1770c:	subs	r3, r0, #0
   17710:	mov	r9, r3
   17714:	blt	17a5c <blkid_probe_get_size@plt+0x10544>
   17718:	mov	r2, #0
   1771c:	mov	r1, r2
   17720:	mov	r0, r8
   17724:	bl	26bb4 <blkid_probe_get_size@plt+0x1f69c>
   17728:	subs	sl, r0, #0
   1772c:	blt	179e4 <blkid_probe_get_size@plt+0x104cc>
   17730:	mov	r0, r8
   17734:	bl	26434 <blkid_probe_get_size@plt+0x1ef1c>
   17738:	subs	sl, r0, #0
   1773c:	blt	1796c <blkid_probe_get_size@plt+0x10454>
   17740:	mov	r1, #0
   17744:	mov	r0, r8
   17748:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   1774c:	cmp	r0, #0
   17750:	blt	1775c <blkid_probe_get_size@plt+0x10244>
   17754:	mov	r0, r8
   17758:	bl	591a0 <blkid_probe_get_size@plt+0x51c88>
   1775c:	mov	r1, r6
   17760:	mov	r0, r4
   17764:	bl	5dae8 <blkid_probe_get_size@plt+0x565d0>
   17768:	mov	r1, #0
   1776c:	mov	r0, r8
   17770:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   17774:	cmp	r0, #0
   17778:	blt	16afc <blkid_probe_get_size@plt+0xf5e4>
   1777c:	mov	r3, #0
   17780:	cmp	r8, #0
   17784:	str	r3, [sp, #184]	; 0xb8
   17788:	beq	180b4 <blkid_probe_get_size@plt+0x10b9c>
   1778c:	mov	r0, r8
   17790:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   17794:	subs	r1, r0, #0
   17798:	beq	177c0 <blkid_probe_get_size@plt+0x102a8>
   1779c:	ldr	r9, [sp, #52]	; 0x34
   177a0:	mov	r2, #0
   177a4:	mov	r0, r8
   177a8:	bl	abf4 <blkid_probe_get_size@plt+0x36dc>
   177ac:	mov	r0, r8
   177b0:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   177b4:	subs	r1, r0, #0
   177b8:	bne	177a0 <blkid_probe_get_size@plt+0x10288>
   177bc:	str	r9, [sp, #52]	; 0x34
   177c0:	sub	r3, r7, #8
   177c4:	mov	r1, r3
   177c8:	mov	r0, r8
   177cc:	str	r3, [sp, #68]	; 0x44
   177d0:	bl	a04c <blkid_probe_get_size@plt+0x2b34>
   177d4:	subs	sl, r0, #0
   177d8:	bge	17cc0 <blkid_probe_get_size@plt+0x107a8>
   177dc:	ldr	r2, [pc, #-936]	; 1743c <blkid_probe_get_size@plt+0xff24>
   177e0:	mov	r3, #0
   177e4:	add	r2, pc, r2
   177e8:	str	r3, [sp, #192]	; 0xc0
   177ec:	ldr	r2, [r2, #4]
   177f0:	cmp	r2, #6
   177f4:	bgt	184c0 <blkid_probe_get_size@plt+0x10fa8>
   177f8:	mov	r1, r3
   177fc:	ldr	r2, [pc, #-964]	; 17440 <blkid_probe_get_size@plt+0xff28>
   17800:	ldr	r0, [pc, #-964]	; 17444 <blkid_probe_get_size@plt+0xff2c>
   17804:	add	r2, pc, r2
   17808:	add	r2, r2, #1408	; 0x580
   1780c:	add	r2, r2, #12
   17810:	str	r2, [sp]
   17814:	ldr	r2, [pc, #-980]	; 17448 <blkid_probe_get_size@plt+0xff30>
   17818:	add	r0, pc, r0
   1781c:	mov	ip, #0
   17820:	str	r3, [sp, #8]
   17824:	str	r1, [sp, #4]
   17828:	str	r0, [sp, #20]
   1782c:	mov	r1, sl
   17830:	str	ip, [sp, #16]
   17834:	str	ip, [sp, #12]
   17838:	ldr	r3, [pc, #-1012]	; 1744c <blkid_probe_get_size@plt+0xff34>
   1783c:	add	r2, pc, r2
   17840:	mov	r0, #7
   17844:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17848:	ldr	r0, [sp, #184]	; 0xb8
   1784c:	bl	69f0 <free@plt>
   17850:	add	sl, sp, #176	; 0xb0
   17854:	b	16b08 <blkid_probe_get_size@plt+0xf5f0>
   17858:	ldr	r2, [pc, #-1040]	; 17450 <blkid_probe_get_size@plt+0xff38>
   1785c:	ldr	r1, [pc, #-1040]	; 17454 <blkid_probe_get_size@plt+0xff3c>
   17860:	add	r2, pc, r2
   17864:	add	r2, r2, #1200	; 0x4b0
   17868:	add	r2, r2, #12
   1786c:	str	r2, [sp]
   17870:	ldr	r2, [pc, #-1056]	; 17458 <blkid_probe_get_size@plt+0xff40>
   17874:	mov	r3, #130	; 0x82
   17878:	add	r2, pc, r2
   1787c:	add	r1, pc, r1
   17880:	mov	r0, #1
   17884:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   17888:	ldr	r2, [pc, #-1076]	; 1745c <blkid_probe_get_size@plt+0xff44>
   1788c:	ldr	r1, [pc, #-1076]	; 17460 <blkid_probe_get_size@plt+0xff48>
   17890:	add	r2, pc, r2
   17894:	add	r2, r2, #1200	; 0x4b0
   17898:	add	r2, r2, #12
   1789c:	str	r2, [sp]
   178a0:	ldr	r2, [pc, #-1092]	; 17464 <blkid_probe_get_size@plt+0xff4c>
   178a4:	mov	r3, #131	; 0x83
   178a8:	add	r2, pc, r2
   178ac:	add	r1, pc, r1
   178b0:	mov	r0, #1
   178b4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   178b8:	ldr	r2, [pc, #-1112]	; 17468 <blkid_probe_get_size@plt+0xff50>
   178bc:	ldr	r1, [pc, #-1112]	; 1746c <blkid_probe_get_size@plt+0xff54>
   178c0:	add	r2, pc, r2
   178c4:	add	r2, r2, #1312	; 0x520
   178c8:	str	r2, [sp]
   178cc:	ldr	r2, [pc, #-1124]	; 17470 <blkid_probe_get_size@plt+0xff58>
   178d0:	ldr	r3, [pc, #-1124]	; 17474 <blkid_probe_get_size@plt+0xff5c>
   178d4:	add	r2, pc, r2
   178d8:	add	r1, pc, r1
   178dc:	mov	r0, #1
   178e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   178e4:	ldr	r3, [sp, #56]	; 0x38
   178e8:	cmp	r3, #0
   178ec:	mov	r3, #0
   178f0:	str	r3, [sp, #192]	; 0xc0
   178f4:	beq	18130 <blkid_probe_get_size@plt+0x10c18>
   178f8:	ldr	r2, [pc, #-1160]	; 17478 <blkid_probe_get_size@plt+0xff60>
   178fc:	add	r2, pc, r2
   17900:	ldr	r2, [r2, #4]
   17904:	cmp	r2, #2
   17908:	movle	r0, r3
   1790c:	movle	r1, r0
   17910:	bgt	1886c <blkid_probe_get_size@plt+0x11354>
   17914:	ldr	r2, [pc, #-1184]	; 1747c <blkid_probe_get_size@plt+0xff64>
   17918:	ldr	r3, [pc, #-1184]	; 17480 <blkid_probe_get_size@plt+0xff68>
   1791c:	add	r2, pc, r2
   17920:	add	r3, pc, r3
   17924:	str	r2, [sp, #20]
   17928:	ldr	r2, [pc, #-1196]	; 17484 <blkid_probe_get_size@plt+0xff6c>
   1792c:	add	r3, r3, #1504	; 0x5e0
   17930:	str	r1, [sp, #4]
   17934:	str	r3, [sp]
   17938:	mov	r1, sl
   1793c:	mov	r3, #772	; 0x304
   17940:	add	r2, pc, r2
   17944:	str	r0, [sp, #8]
   17948:	mov	r0, #0
   1794c:	str	r0, [sp, #16]
   17950:	str	r0, [sp, #12]
   17954:	mov	r0, #3
   17958:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1795c:	add	r3, sp, #184	; 0xb8
   17960:	str	r3, [sp, #68]	; 0x44
   17964:	add	sl, sp, #176	; 0xb0
   17968:	b	17160 <blkid_probe_get_size@plt+0xfc48>
   1796c:	mov	r3, #0
   17970:	cmp	r8, #0
   17974:	str	r3, [sp, #192]	; 0xc0
   17978:	beq	17ea4 <blkid_probe_get_size@plt+0x1098c>
   1797c:	ldr	r2, [pc, #-1276]	; 17488 <blkid_probe_get_size@plt+0xff70>
   17980:	add	r2, pc, r2
   17984:	ldr	r2, [r2, #4]
   17988:	cmp	r2, #6
   1798c:	bgt	18334 <blkid_probe_get_size@plt+0x10e1c>
   17990:	mov	r1, r3
   17994:	ldr	r2, [pc, #-1296]	; 1748c <blkid_probe_get_size@plt+0xff74>
   17998:	ldr	r0, [pc, #-1296]	; 17490 <blkid_probe_get_size@plt+0xff78>
   1799c:	add	r2, pc, r2
   179a0:	add	r2, r2, #1360	; 0x550
   179a4:	add	r2, r2, #8
   179a8:	str	r2, [sp]
   179ac:	ldr	r2, [pc, #-1312]	; 17494 <blkid_probe_get_size@plt+0xff7c>
   179b0:	add	r0, pc, r0
   179b4:	str	r3, [sp, #8]
   179b8:	mov	r3, #0
   179bc:	str	r1, [sp, #4]
   179c0:	str	r0, [sp, #20]
   179c4:	str	r3, [sp, #16]
   179c8:	str	r3, [sp, #12]
   179cc:	mov	r1, sl
   179d0:	ldr	r3, [pc, #-1344]	; 17498 <blkid_probe_get_size@plt+0xff80>
   179d4:	add	r2, pc, r2
   179d8:	mov	r0, #7
   179dc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   179e0:	b	17740 <blkid_probe_get_size@plt+0x10228>
   179e4:	mov	r3, #0
   179e8:	cmp	r8, #0
   179ec:	str	r3, [sp, #192]	; 0xc0
   179f0:	beq	17fb0 <blkid_probe_get_size@plt+0x10a98>
   179f4:	ldr	r2, [pc, #-1376]	; 1749c <blkid_probe_get_size@plt+0xff84>
   179f8:	add	r2, pc, r2
   179fc:	ldr	r2, [r2, #4]
   17a00:	cmp	r2, #6
   17a04:	bgt	18550 <blkid_probe_get_size@plt+0x11038>
   17a08:	mov	r1, r3
   17a0c:	ldr	r2, [pc, #-1396]	; 174a0 <blkid_probe_get_size@plt+0xff88>
   17a10:	ldr	r0, [pc, #-1396]	; 174a4 <blkid_probe_get_size@plt+0xff8c>
   17a14:	add	r2, pc, r2
   17a18:	add	r2, r2, #1360	; 0x550
   17a1c:	add	r2, r2, #8
   17a20:	str	r2, [sp]
   17a24:	ldr	r2, [pc, #-1412]	; 174a8 <blkid_probe_get_size@plt+0xff90>
   17a28:	add	r0, pc, r0
   17a2c:	str	r3, [sp, #8]
   17a30:	mov	r3, #0
   17a34:	str	r1, [sp, #4]
   17a38:	str	r0, [sp, #20]
   17a3c:	str	r3, [sp, #16]
   17a40:	str	r3, [sp, #12]
   17a44:	mov	r1, sl
   17a48:	ldr	r3, [pc, #-1444]	; 174ac <blkid_probe_get_size@plt+0xff94>
   17a4c:	add	r2, pc, r2
   17a50:	mov	r0, #7
   17a54:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17a58:	b	17730 <blkid_probe_get_size@plt+0x10218>
   17a5c:	cmp	r8, #0
   17a60:	str	sl, [sp, #192]	; 0xc0
   17a64:	beq	17fc4 <blkid_probe_get_size@plt+0x10aac>
   17a68:	ldr	r3, [pc, #-1472]	; 174b0 <blkid_probe_get_size@plt+0xff98>
   17a6c:	add	r3, pc, r3
   17a70:	ldr	r3, [r3, #4]
   17a74:	cmp	r3, #6
   17a78:	movle	r0, sl
   17a7c:	movle	r1, r0
   17a80:	bgt	18508 <blkid_probe_get_size@plt+0x10ff0>
   17a84:	ldr	r3, [pc, #-1496]	; 174b4 <blkid_probe_get_size@plt+0xff9c>
   17a88:	ldr	r2, [pc, #-1496]	; 174b8 <blkid_probe_get_size@plt+0xffa0>
   17a8c:	add	r3, pc, r3
   17a90:	add	r2, pc, r2
   17a94:	str	r2, [sp, #20]
   17a98:	add	r3, r3, #1360	; 0x550
   17a9c:	ldr	r2, [pc, #-1512]	; 174bc <blkid_probe_get_size@plt+0xffa4>
   17aa0:	add	r3, r3, #8
   17aa4:	str	r0, [sp, #8]
   17aa8:	mov	r0, #0
   17aac:	str	r1, [sp, #4]
   17ab0:	str	r3, [sp]
   17ab4:	str	r0, [sp, #16]
   17ab8:	str	r0, [sp, #12]
   17abc:	mov	r1, r9
   17ac0:	ldr	r3, [pc, #-1544]	; 174c0 <blkid_probe_get_size@plt+0xffa8>
   17ac4:	add	r2, pc, r2
   17ac8:	mov	r0, #7
   17acc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17ad0:	b	17718 <blkid_probe_get_size@plt+0x10200>
   17ad4:	mov	r2, r8
   17ad8:	ldr	r8, [sp, #64]	; 0x40
   17adc:	ldr	r0, [sp, #192]	; 0xc0
   17ae0:	ldr	r1, [r8, #156]	; 0x9c
   17ae4:	bl	24cc0 <blkid_probe_get_size@plt+0x1d7a8>
   17ae8:	subs	sl, r0, #0
   17aec:	blt	16cf4 <blkid_probe_get_size@plt+0xf7dc>
   17af0:	ldr	r1, [r8, #172]	; 0xac
   17af4:	ldr	r0, [sp, #192]	; 0xc0
   17af8:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
   17afc:	subs	sl, r0, #0
   17b00:	blt	16cf4 <blkid_probe_get_size@plt+0xf7dc>
   17b04:	ldrd	r0, [r8, #136]	; 0x88
   17b08:	ldr	r2, [sp, #192]	; 0xc0
   17b0c:	mov	r8, r0
   17b10:	mov	r9, r1
   17b14:	mov	r0, r2
   17b18:	strd	r8, [r2, #136]	; 0x88
   17b1c:	mov	r1, #0
   17b20:	str	r2, [sp, #56]	; 0x38
   17b24:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   17b28:	ldr	r2, [sp, #56]	; 0x38
   17b2c:	subs	sl, r0, #0
   17b30:	bge	19494 <blkid_probe_get_size@plt+0x11f7c>
   17b34:	mov	r0, r2
   17b38:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   17b3c:	b	16d00 <blkid_probe_get_size@plt+0xf7e8>
   17b40:	ldr	r2, [sp, #64]	; 0x40
   17b44:	mov	r1, r2
   17b48:	b	17678 <blkid_probe_get_size@plt+0x10160>
   17b4c:	mov	r1, r7
   17b50:	ldr	r0, [sp, #64]	; 0x40
   17b54:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   17b58:	ldr	r1, [sp, #192]	; 0xc0
   17b5c:	cmp	r1, #0
   17b60:	moveq	ip, r1
   17b64:	ldrne	ip, [pc, #-1704]	; 174c4 <blkid_probe_get_size@plt+0xffac>
   17b68:	addne	ip, pc, ip
   17b6c:	b	16ab0 <blkid_probe_get_size@plt+0xf598>
   17b70:	ldr	r2, [pc, #-1712]	; 174c8 <blkid_probe_get_size@plt+0xffb0>
   17b74:	mov	r3, #0
   17b78:	add	r2, pc, r2
   17b7c:	str	r3, [sp, #192]	; 0xc0
   17b80:	ldr	r2, [r2, #4]
   17b84:	cmp	r2, #6
   17b88:	bgt	1867c <blkid_probe_get_size@plt+0x11164>
   17b8c:	mov	r1, r3
   17b90:	ldr	r2, [pc, #-1740]	; 174cc <blkid_probe_get_size@plt+0xffb4>
   17b94:	ldr	r0, [pc, #-1740]	; 174d0 <blkid_probe_get_size@plt+0xffb8>
   17b98:	add	r2, pc, r2
   17b9c:	add	r2, r2, #1328	; 0x530
   17ba0:	add	r2, r2, #12
   17ba4:	str	r2, [sp]
   17ba8:	ldr	r2, [pc, #-1756]	; 174d4 <blkid_probe_get_size@plt+0xffbc>
   17bac:	mov	ip, #0
   17bb0:	add	r0, pc, r0
   17bb4:	str	r3, [sp, #8]
   17bb8:	str	r1, [sp, #4]
   17bbc:	str	r0, [sp, #20]
   17bc0:	mov	r1, r8
   17bc4:	str	ip, [sp, #16]
   17bc8:	str	ip, [sp, #12]
   17bcc:	ldr	r3, [pc, #-1788]	; 174d8 <blkid_probe_get_size@plt+0xffc0>
   17bd0:	add	r2, pc, r2
   17bd4:	mov	r0, #7
   17bd8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17bdc:	b	171b0 <blkid_probe_get_size@plt+0xfc98>
   17be0:	ldr	r2, [pc, #-1804]	; 174dc <blkid_probe_get_size@plt+0xffc4>
   17be4:	mov	r3, #0
   17be8:	add	r2, pc, r2
   17bec:	str	r3, [sp, #192]	; 0xc0
   17bf0:	ldr	r2, [r2, #4]
   17bf4:	cmp	r2, #6
   17bf8:	bgt	18288 <blkid_probe_get_size@plt+0x10d70>
   17bfc:	mov	r1, r3
   17c00:	ldr	r2, [pc, #-1832]	; 174e0 <blkid_probe_get_size@plt+0xffc8>
   17c04:	ldr	r0, [pc, #-1832]	; 174e4 <blkid_probe_get_size@plt+0xffcc>
   17c08:	add	r2, pc, r2
   17c0c:	add	r2, r2, #1328	; 0x530
   17c10:	add	r2, r2, #12
   17c14:	str	r2, [sp]
   17c18:	ldr	r2, [pc, #-1848]	; 174e8 <blkid_probe_get_size@plt+0xffd0>
   17c1c:	mov	ip, #0
   17c20:	add	r0, pc, r0
   17c24:	str	r3, [sp, #8]
   17c28:	str	r1, [sp, #4]
   17c2c:	str	r0, [sp, #20]
   17c30:	mov	r1, r8
   17c34:	str	ip, [sp, #16]
   17c38:	str	ip, [sp, #12]
   17c3c:	ldr	r3, [pc, #-1880]	; 174ec <blkid_probe_get_size@plt+0xffd4>
   17c40:	add	r2, pc, r2
   17c44:	mov	r0, #7
   17c48:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17c4c:	b	17198 <blkid_probe_get_size@plt+0xfc80>
   17c50:	ldr	r2, [pc, #-1896]	; 174f0 <blkid_probe_get_size@plt+0xffd8>
   17c54:	mov	r3, #0
   17c58:	add	r2, pc, r2
   17c5c:	str	r3, [sp, #192]	; 0xc0
   17c60:	ldr	r2, [r2, #4]
   17c64:	cmp	r2, #6
   17c68:	bgt	184e4 <blkid_probe_get_size@plt+0x10fcc>
   17c6c:	mov	r1, r3
   17c70:	ldr	r2, [pc, #-1924]	; 174f4 <blkid_probe_get_size@plt+0xffdc>
   17c74:	ldr	r0, [pc, #-1924]	; 174f8 <blkid_probe_get_size@plt+0xffe0>
   17c78:	add	r2, pc, r2
   17c7c:	add	r2, r2, #1328	; 0x530
   17c80:	add	r2, r2, #12
   17c84:	str	r2, [sp]
   17c88:	ldr	r2, [pc, #-1940]	; 174fc <blkid_probe_get_size@plt+0xffe4>
   17c8c:	mov	ip, #0
   17c90:	add	r0, pc, r0
   17c94:	str	r3, [sp, #8]
   17c98:	str	r1, [sp, #4]
   17c9c:	str	r0, [sp, #20]
   17ca0:	mov	r1, r8
   17ca4:	str	ip, [sp, #16]
   17ca8:	str	ip, [sp, #12]
   17cac:	ldr	r3, [pc, #-1972]	; 17500 <blkid_probe_get_size@plt+0xffe8>
   17cb0:	add	r2, pc, r2
   17cb4:	mov	r0, #7
   17cb8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17cbc:	b	171c0 <blkid_probe_get_size@plt+0xfca8>
   17cc0:	ldr	r0, [sp, #184]	; 0xb8
   17cc4:	bl	6e28 <unlink@plt>
   17cc8:	b	17848 <blkid_probe_get_size@plt+0x10330>
   17ccc:	ldr	r0, [r6, #8]
   17cd0:	bl	591a0 <blkid_probe_get_size@plt+0x51c88>
   17cd4:	b	16e18 <blkid_probe_get_size@plt+0xf900>
   17cd8:	ldrb	r3, [r6, #72]	; 0x48
   17cdc:	cmp	r3, #0
   17ce0:	beq	180e4 <blkid_probe_get_size@plt+0x10bcc>
   17ce4:	ldrb	r3, [r6, #70]	; 0x46
   17ce8:	cmp	r3, #0
   17cec:	bne	16f40 <blkid_probe_get_size@plt+0xfa28>
   17cf0:	ldr	r3, [sp, #56]	; 0x38
   17cf4:	cmp	r3, #0
   17cf8:	beq	19cf0 <blkid_probe_get_size@plt+0x127d8>
   17cfc:	ldr	r8, [sp, #56]	; 0x38
   17d00:	mov	r1, #0
   17d04:	mov	r0, r8
   17d08:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   17d0c:	subs	sl, r0, #0
   17d10:	blt	18610 <blkid_probe_get_size@plt+0x110f8>
   17d14:	ldr	r3, [r8, #208]	; 0xd0
   17d18:	cmn	r3, #1
   17d1c:	strne	r3, [r6, #28]
   17d20:	ldrb	r3, [r6, #74]	; 0x4a
   17d24:	cmp	r3, #0
   17d28:	beq	16f58 <blkid_probe_get_size@plt+0xfa40>
   17d2c:	ldr	r3, [sp, #76]	; 0x4c
   17d30:	ldr	r1, [pc, #-2100]	; 17504 <blkid_probe_get_size@plt+0xffec>
   17d34:	sub	r2, r3, #4
   17d38:	add	r1, pc, r1
   17d3c:	ldr	r0, [sp, #56]	; 0x38
   17d40:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   17d44:	subs	sl, r0, #0
   17d48:	bge	16fa0 <blkid_probe_get_size@plt+0xfa88>
   17d4c:	ldr	r3, [sp, #56]	; 0x38
   17d50:	cmp	r3, #0
   17d54:	mov	r3, #0
   17d58:	str	r3, [sp, #192]	; 0xc0
   17d5c:	beq	17d74 <blkid_probe_get_size@plt+0x1085c>
   17d60:	ldr	r3, [pc, #-2144]	; 17508 <blkid_probe_get_size@plt+0xfff0>
   17d64:	add	r3, pc, r3
   17d68:	ldr	r3, [r3, #4]
   17d6c:	cmp	r3, #2
   17d70:	bgt	1852c <blkid_probe_get_size@plt+0x11014>
   17d74:	ldr	r2, [sp, #192]	; 0xc0
   17d78:	mov	r1, #0
   17d7c:	ldr	r3, [pc, #-2168]	; 1750c <blkid_probe_get_size@plt+0xfff4>
   17d80:	ldr	r0, [pc, #-2168]	; 17510 <blkid_probe_get_size@plt+0xfff8>
   17d84:	str	r2, [sp, #8]
   17d88:	mov	r2, #0
   17d8c:	add	r3, pc, r3
   17d90:	str	r2, [sp, #16]
   17d94:	str	r2, [sp, #12]
   17d98:	ldr	r2, [pc, #-2188]	; 17514 <blkid_probe_get_size@plt+0xfffc>
   17d9c:	add	r3, r3, #1504	; 0x5e0
   17da0:	add	r0, pc, r0
   17da4:	str	r1, [sp, #4]
   17da8:	str	r3, [sp]
   17dac:	mov	r1, sl
   17db0:	str	r0, [sp, #20]
   17db4:	ldr	r3, [pc, #-2212]	; 17518 <blkid_probe_get_size@plt+0x10000>
   17db8:	add	r2, pc, r2
   17dbc:	b	17954 <blkid_probe_get_size@plt+0x1043c>
   17dc0:	ldr	r3, [sp, #56]	; 0x38
   17dc4:	cmp	r3, #0
   17dc8:	mov	r3, #0
   17dcc:	str	r3, [sp, #192]	; 0xc0
   17dd0:	beq	18124 <blkid_probe_get_size@plt+0x10c0c>
   17dd4:	ldr	r2, [pc, #-2240]	; 1751c <blkid_probe_get_size@plt+0x10004>
   17dd8:	add	r2, pc, r2
   17ddc:	ldr	r2, [r2, #4]
   17de0:	cmp	r2, #2
   17de4:	movle	r1, r3
   17de8:	movle	r2, r1
   17dec:	bgt	18848 <blkid_probe_get_size@plt+0x11330>
   17df0:	ldr	r3, [pc, #-2264]	; 17520 <blkid_probe_get_size@plt+0x10008>
   17df4:	ldr	r0, [pc, #-2264]	; 17524 <blkid_probe_get_size@plt+0x1000c>
   17df8:	str	r2, [sp, #4]
   17dfc:	add	r3, pc, r3
   17e00:	ldr	r2, [pc, #-2272]	; 17528 <blkid_probe_get_size@plt+0x10010>
   17e04:	mov	ip, #0
   17e08:	add	r0, pc, r0
   17e0c:	add	r3, r3, #1488	; 0x5d0
   17e10:	str	r1, [sp, #8]
   17e14:	str	r3, [sp]
   17e18:	str	r0, [sp, #20]
   17e1c:	ldr	r3, [pc, #-2296]	; 1752c <blkid_probe_get_size@plt+0x10014>
   17e20:	mov	r1, r8
   17e24:	str	ip, [sp, #16]
   17e28:	str	ip, [sp, #12]
   17e2c:	add	r2, pc, r2
   17e30:	mov	r0, #3
   17e34:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17e38:	ldr	r3, [r6]
   17e3c:	str	r3, [sp, #56]	; 0x38
   17e40:	b	16e6c <blkid_probe_get_size@plt+0xf954>
   17e44:	ldr	r3, [pc, #-2332]	; 17530 <blkid_probe_get_size@plt+0x10018>
   17e48:	ldr	r2, [pc, #-2332]	; 17534 <blkid_probe_get_size@plt+0x1001c>
   17e4c:	add	r3, pc, r3
   17e50:	ldr	r1, [pc, #-2336]	; 17538 <blkid_probe_get_size@plt+0x10020>
   17e54:	add	r3, r3, #1440	; 0x5a0
   17e58:	str	r3, [sp]
   17e5c:	ldr	r0, [sp, #64]	; 0x40
   17e60:	mov	r3, #644	; 0x284
   17e64:	add	r2, pc, r2
   17e68:	add	r1, pc, r1
   17e6c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   17e70:	mov	r3, #1
   17e74:	str	r3, [sp, #84]	; 0x54
   17e78:	b	16fd8 <blkid_probe_get_size@plt+0xfac0>
   17e7c:	ldr	r8, [sp, #56]	; 0x38
   17e80:	mov	r1, #0
   17e84:	mov	r0, r8
   17e88:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   17e8c:	subs	sl, r0, #0
   17e90:	blt	18358 <blkid_probe_get_size@plt+0x10e40>
   17e94:	ldr	r3, [r8, #204]	; 0xcc
   17e98:	cmn	r3, #1
   17e9c:	strne	r3, [r6, #24]
   17ea0:	b	16f34 <blkid_probe_get_size@plt+0xfa1c>
   17ea4:	mov	r3, r8
   17ea8:	mov	r1, r8
   17eac:	b	17994 <blkid_probe_get_size@plt+0x1047c>
   17eb0:	mov	r1, r7
   17eb4:	ldr	r0, [sp, #64]	; 0x40
   17eb8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   17ebc:	ldr	r2, [sp, #192]	; 0xc0
   17ec0:	cmp	r2, #0
   17ec4:	moveq	r1, r2
   17ec8:	ldrne	r1, [pc, #-2452]	; 1753c <blkid_probe_get_size@plt+0x10024>
   17ecc:	addne	r1, pc, r1
   17ed0:	b	17678 <blkid_probe_get_size@plt+0x10160>
   17ed4:	ldr	r1, [pc, #-2460]	; 17540 <blkid_probe_get_size@plt+0x10028>
   17ed8:	sub	r2, sl, #8
   17edc:	add	r1, pc, r1
   17ee0:	ldr	r0, [sp, #56]	; 0x38
   17ee4:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   17ee8:	subs	r3, r0, #0
   17eec:	mov	r8, r3
   17ef0:	blt	1843c <blkid_probe_get_size@plt+0x10f24>
   17ef4:	ldr	r1, [pc, #-2488]	; 17544 <blkid_probe_get_size@plt+0x1002c>
   17ef8:	ldr	r0, [sp, #168]	; 0xa8
   17efc:	add	r1, pc, r1
   17f00:	bl	7314 <strcmp@plt>
   17f04:	subs	r3, r0, #0
   17f08:	mov	r9, r3
   17f0c:	bne	16e64 <blkid_probe_get_size@plt+0xf94c>
   17f10:	mov	r1, sl
   17f14:	ldr	r0, [sp, #56]	; 0x38
   17f18:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   17f1c:	cmn	r0, #2
   17f20:	mov	sl, r0
   17f24:	beq	16e64 <blkid_probe_get_size@plt+0xf94c>
   17f28:	cmp	r0, #0
   17f2c:	bge	1978c <blkid_probe_get_size@plt+0x12274>
   17f30:	ldr	r3, [sp, #56]	; 0x38
   17f34:	str	r9, [sp, #192]	; 0xc0
   17f38:	cmp	r3, #0
   17f3c:	beq	194fc <blkid_probe_get_size@plt+0x11fe4>
   17f40:	ldr	r3, [pc, #-2560]	; 17548 <blkid_probe_get_size@plt+0x10030>
   17f44:	add	r3, pc, r3
   17f48:	ldr	r3, [r3, #4]
   17f4c:	cmp	r3, #2
   17f50:	movle	r1, r9
   17f54:	movle	r2, r1
   17f58:	bgt	194d8 <blkid_probe_get_size@plt+0x11fc0>
   17f5c:	ldr	r3, [pc, #-2584]	; 1754c <blkid_probe_get_size@plt+0x10034>
   17f60:	ldr	r0, [pc, #-2584]	; 17550 <blkid_probe_get_size@plt+0x10038>
   17f64:	str	r2, [sp, #4]
   17f68:	add	r3, pc, r3
   17f6c:	ldr	r2, [pc, #-2592]	; 17554 <blkid_probe_get_size@plt+0x1003c>
   17f70:	mov	ip, #0
   17f74:	add	r0, pc, r0
   17f78:	add	r3, r3, #1488	; 0x5d0
   17f7c:	str	r1, [sp, #8]
   17f80:	str	r3, [sp]
   17f84:	str	r0, [sp, #20]
   17f88:	ldr	r3, [pc, #-2616]	; 17558 <blkid_probe_get_size@plt+0x10040>
   17f8c:	mov	r1, sl
   17f90:	str	ip, [sp, #16]
   17f94:	str	ip, [sp, #12]
   17f98:	add	r2, pc, r2
   17f9c:	mov	r0, #3
   17fa0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   17fa4:	ldr	r3, [r6]
   17fa8:	str	r3, [sp, #56]	; 0x38
   17fac:	b	16e6c <blkid_probe_get_size@plt+0xf954>
   17fb0:	mov	r3, r8
   17fb4:	mov	r1, r8
   17fb8:	b	17a0c <blkid_probe_get_size@plt+0x104f4>
   17fbc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   17fc0:	b	16d00 <blkid_probe_get_size@plt+0xf7e8>
   17fc4:	mov	r0, r8
   17fc8:	mov	r1, r8
   17fcc:	b	17a84 <blkid_probe_get_size@plt+0x1056c>
   17fd0:	ldr	r3, [r6, #8]
   17fd4:	cmp	r3, #0
   17fd8:	str	r3, [sp, #80]	; 0x50
   17fdc:	beq	19ca0 <blkid_probe_get_size@plt+0x12788>
   17fe0:	ldr	r0, [sp, #80]	; 0x50
   17fe4:	bl	386fc <blkid_probe_get_size@plt+0x311e4>
   17fe8:	subs	r3, r0, #0
   17fec:	str	r3, [sp, #56]	; 0x38
   17ff0:	blt	183cc <blkid_probe_get_size@plt+0x10eb4>
   17ff4:	mvn	r3, #1
   17ff8:	str	r3, [sp, #192]	; 0xc0
   17ffc:	add	r3, sp, #184	; 0xb8
   18000:	str	sl, [sp, #196]	; 0xc4
   18004:	str	r3, [sp, #68]	; 0x44
   18008:	add	sl, sp, #176	; 0xb0
   1800c:	ldr	r9, [sp, #52]	; 0x34
   18010:	ldr	r8, [sp, #76]	; 0x4c
   18014:	b	18038 <blkid_probe_get_size@plt+0x10b20>
   18018:	mov	r3, #1
   1801c:	ldr	r2, [sp, #184]	; 0xb8
   18020:	ldr	r1, [sp, #176]	; 0xb0
   18024:	ldr	r0, [sp, #64]	; 0x40
   18028:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   1802c:	subs	r3, r0, #0
   18030:	str	r3, [sp, #56]	; 0x38
   18034:	blt	183c4 <blkid_probe_get_size@plt+0x10eac>
   18038:	ldr	r0, [sp, #80]	; 0x50
   1803c:	mov	r3, sl
   18040:	ldr	r2, [sp, #68]	; 0x44
   18044:	mov	r1, r7
   18048:	ldr	r0, [r0, #40]	; 0x28
   1804c:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   18050:	cmp	r0, #0
   18054:	bne	18018 <blkid_probe_get_size@plt+0x10b00>
   18058:	mvn	r3, #1
   1805c:	str	r0, [sp, #196]	; 0xc4
   18060:	str	r3, [sp, #192]	; 0xc0
   18064:	b	18088 <blkid_probe_get_size@plt+0x10b70>
   18068:	mov	r3, #0
   1806c:	ldr	r2, [sp, #184]	; 0xb8
   18070:	ldr	r1, [sp, #176]	; 0xb0
   18074:	ldr	r0, [sp, #64]	; 0x40
   18078:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   1807c:	subs	r3, r0, #0
   18080:	str	r3, [sp, #56]	; 0x38
   18084:	blt	183c4 <blkid_probe_get_size@plt+0x10eac>
   18088:	ldr	r0, [sp, #80]	; 0x50
   1808c:	mov	r3, sl
   18090:	ldr	r2, [sp, #68]	; 0x44
   18094:	mov	r1, r7
   18098:	ldr	r0, [r0, #12]
   1809c:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   180a0:	cmp	r0, #0
   180a4:	bne	18068 <blkid_probe_get_size@plt+0x10b50>
   180a8:	str	r9, [sp, #52]	; 0x34
   180ac:	str	r8, [sp, #76]	; 0x4c
   180b0:	b	16e18 <blkid_probe_get_size@plt+0xf900>
   180b4:	ldr	r2, [pc, #-2912]	; 1755c <blkid_probe_get_size@plt+0x10044>
   180b8:	ldr	r1, [pc, #-2912]	; 17560 <blkid_probe_get_size@plt+0x10048>
   180bc:	add	r2, pc, r2
   180c0:	add	r2, r2, #1392	; 0x570
   180c4:	add	r2, r2, #8
   180c8:	str	r2, [sp]
   180cc:	ldr	r2, [pc, #-2928]	; 17564 <blkid_probe_get_size@plt+0x1004c>
   180d0:	ldr	r3, [pc, #-2928]	; 17568 <blkid_probe_get_size@plt+0x10050>
   180d4:	add	r2, pc, r2
   180d8:	add	r1, pc, r1
   180dc:	mov	r0, #1
   180e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   180e4:	ldr	r3, [sp, #56]	; 0x38
   180e8:	cmp	r3, #0
   180ec:	bne	17e7c <blkid_probe_get_size@plt+0x10964>
   180f0:	ldr	r3, [pc, #-2956]	; 1756c <blkid_probe_get_size@plt+0x10054>
   180f4:	ldr	r2, [pc, #-2956]	; 17570 <blkid_probe_get_size@plt+0x10058>
   180f8:	add	r3, pc, r3
   180fc:	add	r3, r3, #1568	; 0x620
   18100:	ldr	r1, [pc, #-2964]	; 17574 <blkid_probe_get_size@plt+0x1005c>
   18104:	add	r3, r3, #8
   18108:	str	r3, [sp]
   1810c:	ldr	r0, [sp, #56]	; 0x38
   18110:	mov	r3, #114	; 0x72
   18114:	add	r2, pc, r2
   18118:	add	r1, pc, r1
   1811c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   18120:	bl	6fb4 <__stack_chk_fail@plt>
   18124:	ldr	r1, [sp, #56]	; 0x38
   18128:	mov	r2, r1
   1812c:	b	17df0 <blkid_probe_get_size@plt+0x108d8>
   18130:	ldr	r0, [sp, #56]	; 0x38
   18134:	mov	r1, r0
   18138:	b	17914 <blkid_probe_get_size@plt+0x103fc>
   1813c:	ldr	r0, [sp, #68]	; 0x44
   18140:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   18144:	subs	sl, r0, #0
   18148:	beq	16f28 <blkid_probe_get_size@plt+0xfa10>
   1814c:	ldr	r3, [pc, #-3036]	; 17578 <blkid_probe_get_size@plt+0x10060>
   18150:	str	r4, [sp, #84]	; 0x54
   18154:	add	r3, pc, r3
   18158:	ldr	r4, [sp, #56]	; 0x38
   1815c:	ldr	r8, [sp, #76]	; 0x4c
   18160:	add	r3, r3, #1536	; 0x600
   18164:	add	r3, r3, #12
   18168:	str	r3, [sp, #80]	; 0x50
   1816c:	mov	r0, r4
   18170:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   18174:	subs	r1, r0, #0
   18178:	bne	18190 <blkid_probe_get_size@plt+0x10c78>
   1817c:	b	181bc <blkid_probe_get_size@plt+0x10ca4>
   18180:	mov	r0, r4
   18184:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   18188:	subs	r1, r0, #0
   1818c:	beq	181bc <blkid_probe_get_size@plt+0x10ca4>
   18190:	mov	r0, sl
   18194:	bl	7314 <strcmp@plt>
   18198:	cmp	r0, #0
   1819c:	bne	18180 <blkid_probe_get_size@plt+0x10c68>
   181a0:	ldr	r0, [sp, #68]	; 0x44
   181a4:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   181a8:	subs	sl, r0, #0
   181ac:	bne	1816c <blkid_probe_get_size@plt+0x10c54>
   181b0:	ldr	r4, [sp, #84]	; 0x54
   181b4:	str	r8, [sp, #76]	; 0x4c
   181b8:	b	16f28 <blkid_probe_get_size@plt+0xfa10>
   181bc:	ldr	r2, [pc, #-3144]	; 1757c <blkid_probe_get_size@plt+0x10064>
   181c0:	mov	r3, #0
   181c4:	add	r2, pc, r2
   181c8:	str	r3, [sp, #192]	; 0xc0
   181cc:	ldr	r2, [r2, #4]
   181d0:	cmp	r2, #6
   181d4:	bgt	18264 <blkid_probe_get_size@plt+0x10d4c>
   181d8:	mov	r2, r3
   181dc:	ldr	r1, [pc, #-3172]	; 17580 <blkid_probe_get_size@plt+0x10068>
   181e0:	ldr	r0, [sp, #184]	; 0xb8
   181e4:	strd	r2, [sp, #4]
   181e8:	ldr	r3, [sp, #80]	; 0x50
   181ec:	ldr	r2, [pc, #-3184]	; 17584 <blkid_probe_get_size@plt+0x1006c>
   181f0:	mov	r9, #0
   181f4:	add	r1, pc, r1
   181f8:	str	r3, [sp]
   181fc:	str	r0, [sp, #28]
   18200:	str	r1, [sp, #20]
   18204:	str	sl, [sp, #24]
   18208:	mov	r1, r9
   1820c:	str	r9, [sp, #16]
   18210:	str	r9, [sp, #12]
   18214:	ldr	r3, [pc, #-3220]	; 17588 <blkid_probe_get_size@plt+0x10070>
   18218:	add	r2, pc, r2
   1821c:	mov	r0, #7
   18220:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18224:	mov	r2, r9
   18228:	mov	r1, sl
   1822c:	mov	r0, r4
   18230:	bl	abf4 <blkid_probe_get_size@plt+0x36dc>
   18234:	b	181a0 <blkid_probe_get_size@plt+0x10c88>
   18238:	ldr	r2, [pc, #-3252]	; 1758c <blkid_probe_get_size@plt+0x10074>
   1823c:	ldr	r1, [pc, #-3252]	; 17590 <blkid_probe_get_size@plt+0x10078>
   18240:	add	r2, pc, r2
   18244:	add	r2, r2, #1520	; 0x5f0
   18248:	str	r2, [sp]
   1824c:	ldr	r2, [pc, #-3264]	; 17594 <blkid_probe_get_size@plt+0x1007c>
   18250:	mov	r3, #243	; 0xf3
   18254:	add	r2, pc, r2
   18258:	add	r1, pc, r1
   1825c:	mov	r0, #1
   18260:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   18264:	mov	r1, r7
   18268:	mov	r0, r4
   1826c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18270:	ldr	r3, [sp, #192]	; 0xc0
   18274:	cmp	r3, #0
   18278:	beq	181d8 <blkid_probe_get_size@plt+0x10cc0>
   1827c:	ldr	r2, [pc, #-3308]	; 17598 <blkid_probe_get_size@plt+0x10080>
   18280:	add	r2, pc, r2
   18284:	b	181dc <blkid_probe_get_size@plt+0x10cc4>
   18288:	mov	r1, r7
   1828c:	ldr	r0, [sp, #64]	; 0x40
   18290:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18294:	ldr	r3, [sp, #192]	; 0xc0
   18298:	cmp	r3, #0
   1829c:	beq	17bfc <blkid_probe_get_size@plt+0x106e4>
   182a0:	ldr	r1, [pc, #-3340]	; 1759c <blkid_probe_get_size@plt+0x10084>
   182a4:	add	r1, pc, r1
   182a8:	b	17c00 <blkid_probe_get_size@plt+0x106e8>
   182ac:	ldr	r3, [sp, #92]	; 0x5c
   182b0:	ldr	r0, [sp, #56]	; 0x38
   182b4:	sub	r1, r3, #4
   182b8:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   182bc:	subs	sl, r0, #0
   182c0:	bge	187c0 <blkid_probe_get_size@plt+0x112a8>
   182c4:	ldr	r3, [pc, #-3372]	; 175a0 <blkid_probe_get_size@plt+0x10088>
   182c8:	str	r8, [sp, #192]	; 0xc0
   182cc:	add	r3, pc, r3
   182d0:	ldr	r3, [r3, #4]
   182d4:	cmp	r3, #6
   182d8:	bgt	1879c <blkid_probe_get_size@plt+0x11284>
   182dc:	mov	r1, r8
   182e0:	ldr	r2, [pc, #-3396]	; 175a4 <blkid_probe_get_size@plt+0x1008c>
   182e4:	ldr	r3, [pc, #-3396]	; 175a8 <blkid_probe_get_size@plt+0x10090>
   182e8:	add	r2, pc, r2
   182ec:	str	r2, [sp, #20]
   182f0:	add	r3, pc, r3
   182f4:	ldr	r2, [pc, #-3408]	; 175ac <blkid_probe_get_size@plt+0x10094>
   182f8:	mov	r0, #0
   182fc:	add	r3, r3, #1680	; 0x690
   18300:	str	r1, [sp, #4]
   18304:	str	r3, [sp]
   18308:	mov	r1, sl
   1830c:	str	r0, [sp, #16]
   18310:	str	r0, [sp, #12]
   18314:	str	r8, [sp, #8]
   18318:	mov	r3, #288	; 0x120
   1831c:	add	r2, pc, r2
   18320:	mov	r0, #7
   18324:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18328:	add	sl, sp, #176	; 0xb0
   1832c:	str	r0, [sp, #76]	; 0x4c
   18330:	b	170cc <blkid_probe_get_size@plt+0xfbb4>
   18334:	mov	r1, r7
   18338:	mov	r0, r8
   1833c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18340:	ldr	r3, [sp, #192]	; 0xc0
   18344:	cmp	r3, #0
   18348:	beq	17990 <blkid_probe_get_size@plt+0x10478>
   1834c:	ldr	r1, [pc, #-3492]	; 175b0 <blkid_probe_get_size@plt+0x10098>
   18350:	add	r1, pc, r1
   18354:	b	17994 <blkid_probe_get_size@plt+0x1047c>
   18358:	cmn	sl, #2
   1835c:	beq	16f34 <blkid_probe_get_size@plt+0xfa1c>
   18360:	ldr	r2, [pc, #-3508]	; 175b4 <blkid_probe_get_size@plt+0x1009c>
   18364:	mov	r3, #0
   18368:	add	r2, pc, r2
   1836c:	str	r3, [sp, #192]	; 0xc0
   18370:	ldr	r2, [r2, #4]
   18374:	cmp	r2, #2
   18378:	bgt	19ccc <blkid_probe_get_size@plt+0x127b4>
   1837c:	mov	r1, r3
   18380:	ldr	r2, [pc, #-3536]	; 175b8 <blkid_probe_get_size@plt+0x100a0>
   18384:	ldr	r0, [pc, #-3536]	; 175bc <blkid_probe_get_size@plt+0x100a4>
   18388:	add	r2, pc, r2
   1838c:	add	r2, r2, #1504	; 0x5e0
   18390:	str	r2, [sp]
   18394:	ldr	r2, [pc, #-3548]	; 175c0 <blkid_probe_get_size@plt+0x100a8>
   18398:	mov	ip, #0
   1839c:	add	r0, pc, r0
   183a0:	str	r3, [sp, #8]
   183a4:	str	r1, [sp, #4]
   183a8:	str	r0, [sp, #20]
   183ac:	mov	r1, sl
   183b0:	str	ip, [sp, #16]
   183b4:	str	ip, [sp, #12]
   183b8:	ldr	r3, [pc, #-3580]	; 175c4 <blkid_probe_get_size@plt+0x100ac>
   183bc:	add	r2, pc, r2
   183c0:	b	17954 <blkid_probe_get_size@plt+0x1043c>
   183c4:	str	r9, [sp, #52]	; 0x34
   183c8:	str	r8, [sp, #76]	; 0x4c
   183cc:	ldr	r2, [pc, #-3596]	; 175c8 <blkid_probe_get_size@plt+0x100b0>
   183d0:	mov	r3, #0
   183d4:	add	r2, pc, r2
   183d8:	str	r3, [sp, #192]	; 0xc0
   183dc:	ldr	r2, [r2, #4]
   183e0:	cmp	r2, #6
   183e4:	bgt	1985c <blkid_probe_get_size@plt+0x12344>
   183e8:	mov	r1, r3
   183ec:	ldr	r2, [pc, #-3624]	; 175cc <blkid_probe_get_size@plt+0x100b4>
   183f0:	ldr	r0, [pc, #-3624]	; 175d0 <blkid_probe_get_size@plt+0x100b8>
   183f4:	add	r2, pc, r2
   183f8:	add	r2, r2, #1328	; 0x530
   183fc:	add	r2, r2, #12
   18400:	str	r2, [sp]
   18404:	ldr	r2, [pc, #-3640]	; 175d4 <blkid_probe_get_size@plt+0x100bc>
   18408:	mov	ip, #0
   1840c:	add	r0, pc, r0
   18410:	str	r3, [sp, #8]
   18414:	str	r1, [sp, #4]
   18418:	str	r0, [sp, #20]
   1841c:	ldr	r1, [sp, #56]	; 0x38
   18420:	str	ip, [sp, #16]
   18424:	str	ip, [sp, #12]
   18428:	ldr	r3, [pc, #-3672]	; 175d8 <blkid_probe_get_size@plt+0x100c0>
   1842c:	add	r2, pc, r2
   18430:	mov	r0, #7
   18434:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18438:	b	16e18 <blkid_probe_get_size@plt+0xf900>
   1843c:	ldr	r3, [sp, #56]	; 0x38
   18440:	cmp	r3, #0
   18444:	mov	r3, #0
   18448:	str	r3, [sp, #192]	; 0xc0
   1844c:	beq	194cc <blkid_probe_get_size@plt+0x11fb4>
   18450:	ldr	r2, [pc, #-3708]	; 175dc <blkid_probe_get_size@plt+0x100c4>
   18454:	add	r2, pc, r2
   18458:	ldr	r2, [r2, #4]
   1845c:	cmp	r2, #2
   18460:	movle	r1, r3
   18464:	movle	r2, r1
   18468:	bgt	194a8 <blkid_probe_get_size@plt+0x11f90>
   1846c:	ldr	r3, [pc, #-3732]	; 175e0 <blkid_probe_get_size@plt+0x100c8>
   18470:	ldr	r0, [pc, #-3732]	; 175e4 <blkid_probe_get_size@plt+0x100cc>
   18474:	str	r2, [sp, #4]
   18478:	add	r3, pc, r3
   1847c:	ldr	r2, [pc, #-3740]	; 175e8 <blkid_probe_get_size@plt+0x100d0>
   18480:	mov	ip, #0
   18484:	add	r0, pc, r0
   18488:	add	r3, r3, #1488	; 0x5d0
   1848c:	str	r1, [sp, #8]
   18490:	str	r3, [sp]
   18494:	str	r0, [sp, #20]
   18498:	ldr	r3, [pc, #-3764]	; 175ec <blkid_probe_get_size@plt+0x100d4>
   1849c:	mov	r1, r8
   184a0:	str	ip, [sp, #16]
   184a4:	str	ip, [sp, #12]
   184a8:	add	r2, pc, r2
   184ac:	mov	r0, #3
   184b0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   184b4:	ldr	r3, [r6]
   184b8:	str	r3, [sp, #56]	; 0x38
   184bc:	b	16e6c <blkid_probe_get_size@plt+0xf954>
   184c0:	mov	r0, r8
   184c4:	mov	r1, r7
   184c8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   184cc:	ldr	r3, [sp, #192]	; 0xc0
   184d0:	cmp	r3, #0
   184d4:	beq	177f8 <blkid_probe_get_size@plt+0x102e0>
   184d8:	ldr	r1, [pc, #-3824]	; 175f0 <blkid_probe_get_size@plt+0x100d8>
   184dc:	add	r1, pc, r1
   184e0:	b	177fc <blkid_probe_get_size@plt+0x102e4>
   184e4:	mov	r1, r7
   184e8:	ldr	r0, [sp, #64]	; 0x40
   184ec:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   184f0:	ldr	r3, [sp, #192]	; 0xc0
   184f4:	cmp	r3, #0
   184f8:	beq	17c6c <blkid_probe_get_size@plt+0x10754>
   184fc:	ldr	r1, [pc, #-3856]	; 175f4 <blkid_probe_get_size@plt+0x100dc>
   18500:	add	r1, pc, r1
   18504:	b	17c70 <blkid_probe_get_size@plt+0x10758>
   18508:	mov	r1, r7
   1850c:	mov	r0, r8
   18510:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18514:	ldr	r0, [sp, #192]	; 0xc0
   18518:	cmp	r0, #0
   1851c:	moveq	r1, #0
   18520:	ldrne	r1, [pc, #-3888]	; 175f8 <blkid_probe_get_size@plt+0x100e0>
   18524:	addne	r1, pc, r1
   18528:	b	17a84 <blkid_probe_get_size@plt+0x1056c>
   1852c:	mov	r1, r7
   18530:	ldr	r0, [sp, #56]	; 0x38
   18534:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18538:	ldr	r2, [sp, #192]	; 0xc0
   1853c:	cmp	r2, #0
   18540:	moveq	r1, r2
   18544:	ldrne	r1, [pc, #-3920]	; 175fc <blkid_probe_get_size@plt+0x100e4>
   18548:	addne	r1, pc, r1
   1854c:	b	17d7c <blkid_probe_get_size@plt+0x10864>
   18550:	mov	r1, r7
   18554:	mov	r0, r8
   18558:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1855c:	ldr	r3, [sp, #192]	; 0xc0
   18560:	cmp	r3, #0
   18564:	beq	17a08 <blkid_probe_get_size@plt+0x104f0>
   18568:	ldr	r1, [pc, #-3952]	; 17600 <blkid_probe_get_size@plt+0x100e8>
   1856c:	add	r1, pc, r1
   18570:	b	17a0c <blkid_probe_get_size@plt+0x104f4>
   18574:	mov	r1, r7
   18578:	ldr	r0, [sp, #64]	; 0x40
   1857c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18580:	ldr	r3, [sp, #192]	; 0xc0
   18584:	cmp	r3, #0
   18588:	beq	16d1c <blkid_probe_get_size@plt+0xf804>
   1858c:	ldr	r1, [pc, #-3984]	; 17604 <blkid_probe_get_size@plt+0x100ec>
   18590:	add	r1, pc, r1
   18594:	b	16d20 <blkid_probe_get_size@plt+0xf808>
   18598:	mov	r3, #0
   1859c:	str	r3, [sp, #192]	; 0xc0
   185a0:	b	17d60 <blkid_probe_get_size@plt+0x10848>
   185a4:	cmn	sl, #2
   185a8:	beq	18714 <blkid_probe_get_size@plt+0x111fc>
   185ac:	ldr	r2, [pc, #-4012]	; 17608 <blkid_probe_get_size@plt+0x100f0>
   185b0:	mov	r3, #0
   185b4:	add	r2, pc, r2
   185b8:	str	r3, [sp, #192]	; 0xc0
   185bc:	ldr	r2, [r2, #4]
   185c0:	cmp	r2, #2
   185c4:	bgt	19d1c <blkid_probe_get_size@plt+0x12804>
   185c8:	mov	r1, r3
   185cc:	ldr	r2, [pc, #-4040]	; 1760c <blkid_probe_get_size@plt+0x100f4>
   185d0:	ldr	r0, [pc, #-4040]	; 17610 <blkid_probe_get_size@plt+0x100f8>
   185d4:	add	r2, pc, r2
   185d8:	add	r2, r2, #1504	; 0x5e0
   185dc:	str	r2, [sp]
   185e0:	ldr	r2, [pc, #3872]	; 19508 <blkid_probe_get_size@plt+0x11ff0>
   185e4:	mov	ip, #0
   185e8:	add	r0, pc, r0
   185ec:	str	r3, [sp, #8]
   185f0:	str	r1, [sp, #4]
   185f4:	str	r0, [sp, #20]
   185f8:	mov	r1, sl
   185fc:	str	ip, [sp, #16]
   18600:	str	ip, [sp, #12]
   18604:	ldr	r3, [pc, #3840]	; 1950c <blkid_probe_get_size@plt+0x11ff4>
   18608:	add	r2, pc, r2
   1860c:	b	17954 <blkid_probe_get_size@plt+0x1043c>
   18610:	cmn	sl, #2
   18614:	beq	17d20 <blkid_probe_get_size@plt+0x10808>
   18618:	ldr	r2, [pc, #3824]	; 19510 <blkid_probe_get_size@plt+0x11ff8>
   1861c:	mov	r3, #0
   18620:	add	r2, pc, r2
   18624:	str	r3, [sp, #192]	; 0xc0
   18628:	ldr	r2, [r2, #4]
   1862c:	cmp	r2, #2
   18630:	bgt	1944c <blkid_probe_get_size@plt+0x11f34>
   18634:	mov	r1, r3
   18638:	ldr	r2, [pc, #3796]	; 19514 <blkid_probe_get_size@plt+0x11ffc>
   1863c:	ldr	r0, [pc, #3796]	; 19518 <blkid_probe_get_size@plt+0x12000>
   18640:	add	r2, pc, r2
   18644:	add	r2, r2, #1504	; 0x5e0
   18648:	str	r2, [sp]
   1864c:	ldr	r2, [pc, #3784]	; 1951c <blkid_probe_get_size@plt+0x12004>
   18650:	mov	ip, #0
   18654:	add	r0, pc, r0
   18658:	str	r3, [sp, #8]
   1865c:	str	r1, [sp, #4]
   18660:	str	r0, [sp, #20]
   18664:	mov	r1, sl
   18668:	str	ip, [sp, #16]
   1866c:	str	ip, [sp, #12]
   18670:	ldr	r3, [pc, #3752]	; 19520 <blkid_probe_get_size@plt+0x12008>
   18674:	add	r2, pc, r2
   18678:	b	17954 <blkid_probe_get_size@plt+0x1043c>
   1867c:	mov	r1, r7
   18680:	ldr	r0, [sp, #64]	; 0x40
   18684:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18688:	ldr	r3, [sp, #192]	; 0xc0
   1868c:	cmp	r3, #0
   18690:	beq	17b8c <blkid_probe_get_size@plt+0x10674>
   18694:	ldr	r1, [pc, #3720]	; 19524 <blkid_probe_get_size@plt+0x1200c>
   18698:	add	r1, pc, r1
   1869c:	b	17b90 <blkid_probe_get_size@plt+0x10678>
   186a0:	ldr	r3, [pc, #3712]	; 19528 <blkid_probe_get_size@plt+0x12010>
   186a4:	str	sl, [sp, #192]	; 0xc0
   186a8:	add	r3, pc, r3
   186ac:	ldr	r3, [r3, #4]
   186b0:	cmp	r3, #6
   186b4:	bgt	18730 <blkid_probe_get_size@plt+0x11218>
   186b8:	mov	r1, sl
   186bc:	ldr	r2, [pc, #3688]	; 1952c <blkid_probe_get_size@plt+0x12014>
   186c0:	ldr	r3, [pc, #3688]	; 19530 <blkid_probe_get_size@plt+0x12018>
   186c4:	add	r2, pc, r2
   186c8:	str	r2, [sp, #20]
   186cc:	add	r3, pc, r3
   186d0:	ldr	r2, [pc, #3676]	; 19534 <blkid_probe_get_size@plt+0x1201c>
   186d4:	mov	r0, #0
   186d8:	add	r3, r3, #1664	; 0x680
   186dc:	str	sl, [sp, #8]
   186e0:	str	r1, [sp, #4]
   186e4:	str	r3, [sp]
   186e8:	str	r0, [sp, #16]
   186ec:	str	r0, [sp, #12]
   186f0:	ldr	r3, [pc, #3648]	; 19538 <blkid_probe_get_size@plt+0x12020>
   186f4:	mov	r1, r8
   186f8:	add	r2, pc, r2
   186fc:	mov	r0, #7
   18700:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18704:	add	r3, sp, #184	; 0xb8
   18708:	str	r3, [sp, #68]	; 0x44
   1870c:	add	sl, sp, #176	; 0xb0
   18710:	b	17158 <blkid_probe_get_size@plt+0xfc40>
   18714:	ldr	r3, [r6, #28]
   18718:	cmp	r3, #0
   1871c:	moveq	r3, #384	; 0x180
   18720:	streq	r3, [r6, #20]
   18724:	beq	16f80 <blkid_probe_get_size@plt+0xfa68>
   18728:	mov	r3, #432	; 0x1b0
   1872c:	b	16f7c <blkid_probe_get_size@plt+0xfa64>
   18730:	ldr	r0, [sp, #56]	; 0x38
   18734:	mov	r1, r7
   18738:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1873c:	ldr	sl, [sp, #192]	; 0xc0
   18740:	cmp	sl, #0
   18744:	beq	186b8 <blkid_probe_get_size@plt+0x111a0>
   18748:	ldr	r1, [pc, #3564]	; 1953c <blkid_probe_get_size@plt+0x12024>
   1874c:	add	r1, pc, r1
   18750:	b	186bc <blkid_probe_get_size@plt+0x111a4>
   18754:	mov	r1, r7
   18758:	ldr	r0, [sp, #64]	; 0x40
   1875c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18760:	ldr	r3, [sp, #192]	; 0xc0
   18764:	cmp	r3, #0
   18768:	beq	16db0 <blkid_probe_get_size@plt+0xf898>
   1876c:	ldr	r1, [pc, #3532]	; 19540 <blkid_probe_get_size@plt+0x12028>
   18770:	add	r1, pc, r1
   18774:	b	16db4 <blkid_probe_get_size@plt+0xf89c>
   18778:	mov	r1, r7
   1877c:	ldr	r0, [sp, #56]	; 0x38
   18780:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18784:	ldr	r8, [sp, #192]	; 0xc0
   18788:	cmp	r8, #0
   1878c:	beq	17078 <blkid_probe_get_size@plt+0xfb60>
   18790:	ldr	r1, [pc, #3500]	; 19544 <blkid_probe_get_size@plt+0x1202c>
   18794:	add	r1, pc, r1
   18798:	b	1707c <blkid_probe_get_size@plt+0xfb64>
   1879c:	mov	r1, r7
   187a0:	ldr	r0, [sp, #56]	; 0x38
   187a4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   187a8:	ldr	r8, [sp, #192]	; 0xc0
   187ac:	cmp	r8, #0
   187b0:	beq	182dc <blkid_probe_get_size@plt+0x10dc4>
   187b4:	ldr	r1, [pc, #3468]	; 19548 <blkid_probe_get_size@plt+0x12030>
   187b8:	add	r1, pc, r1
   187bc:	b	182e0 <blkid_probe_get_size@plt+0x10dc8>
   187c0:	add	sl, sp, #176	; 0xb0
   187c4:	mov	r1, sl
   187c8:	ldr	r0, [sp, #56]	; 0x38
   187cc:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   187d0:	subs	r3, r0, #0
   187d4:	str	r3, [sp, #76]	; 0x4c
   187d8:	bge	18924 <blkid_probe_get_size@plt+0x1140c>
   187dc:	ldr	r3, [pc, #3432]	; 1954c <blkid_probe_get_size@plt+0x12034>
   187e0:	str	r8, [sp, #192]	; 0xc0
   187e4:	add	r3, pc, r3
   187e8:	ldr	r3, [r3, #4]
   187ec:	cmp	r3, #6
   187f0:	bgt	18900 <blkid_probe_get_size@plt+0x113e8>
   187f4:	mov	r1, r8
   187f8:	ldr	r2, [pc, #3408]	; 19550 <blkid_probe_get_size@plt+0x12038>
   187fc:	ldr	r3, [pc, #3408]	; 19554 <blkid_probe_get_size@plt+0x1203c>
   18800:	add	r2, pc, r2
   18804:	str	r2, [sp, #20]
   18808:	add	r3, pc, r3
   1880c:	ldr	r2, [pc, #3396]	; 19558 <blkid_probe_get_size@plt+0x12040>
   18810:	mov	r0, #0
   18814:	add	r3, r3, #1680	; 0x690
   18818:	str	r1, [sp, #4]
   1881c:	str	r3, [sp]
   18820:	str	r0, [sp, #16]
   18824:	str	r0, [sp, #12]
   18828:	str	r8, [sp, #8]
   1882c:	ldr	r1, [sp, #76]	; 0x4c
   18830:	ldr	r3, [pc, #3364]	; 1955c <blkid_probe_get_size@plt+0x12044>
   18834:	add	r2, pc, r2
   18838:	mov	r0, #7
   1883c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18840:	str	r0, [sp, #76]	; 0x4c
   18844:	b	170cc <blkid_probe_get_size@plt+0xfbb4>
   18848:	mov	r1, r7
   1884c:	ldr	r0, [sp, #56]	; 0x38
   18850:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18854:	ldr	r1, [sp, #192]	; 0xc0
   18858:	cmp	r1, #0
   1885c:	moveq	r2, r1
   18860:	ldrne	r2, [pc, #3320]	; 19560 <blkid_probe_get_size@plt+0x12048>
   18864:	addne	r2, pc, r2
   18868:	b	17df0 <blkid_probe_get_size@plt+0x108d8>
   1886c:	mov	r1, r7
   18870:	ldr	r0, [sp, #56]	; 0x38
   18874:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18878:	ldr	r0, [sp, #192]	; 0xc0
   1887c:	cmp	r0, #0
   18880:	moveq	r1, r0
   18884:	ldrne	r1, [pc, #3288]	; 19564 <blkid_probe_get_size@plt+0x1204c>
   18888:	addne	r1, pc, r1
   1888c:	b	17914 <blkid_probe_get_size@plt+0x103fc>
   18890:	ldr	r0, [sp, #56]	; 0x38
   18894:	mov	r1, r7
   18898:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1889c:	ldr	r3, [sp, #192]	; 0xc0
   188a0:	cmp	r3, #0
   188a4:	beq	1710c <blkid_probe_get_size@plt+0xfbf4>
   188a8:	ldr	r1, [pc, #3256]	; 19568 <blkid_probe_get_size@plt+0x12050>
   188ac:	add	r1, pc, r1
   188b0:	b	17110 <blkid_probe_get_size@plt+0xfbf8>
   188b4:	ldr	r8, [sp, #56]	; 0x38
   188b8:	ldr	r2, [sp, #148]	; 0x94
   188bc:	ldr	r1, [sp, #144]	; 0x90
   188c0:	mov	r0, r8
   188c4:	bl	a1ac <blkid_probe_get_size@plt+0x2c94>
   188c8:	mov	r0, r8
   188cc:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   188d0:	ldr	r9, [sp, #52]	; 0x34
   188d4:	b	188f0 <blkid_probe_get_size@plt+0x113d8>
   188d8:	mov	r1, r0
   188dc:	mov	r2, #1
   188e0:	mov	r0, r8
   188e4:	bl	abf4 <blkid_probe_get_size@plt+0x36dc>
   188e8:	mov	r0, r8
   188ec:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   188f0:	cmp	r0, #0
   188f4:	bne	188d8 <blkid_probe_get_size@plt+0x113c0>
   188f8:	str	r9, [sp, #52]	; 0x34
   188fc:	b	17158 <blkid_probe_get_size@plt+0xfc40>
   18900:	mov	r1, r7
   18904:	ldr	r0, [sp, #56]	; 0x38
   18908:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1890c:	ldr	r8, [sp, #192]	; 0xc0
   18910:	cmp	r8, #0
   18914:	beq	187f4 <blkid_probe_get_size@plt+0x112dc>
   18918:	ldr	r1, [pc, #3148]	; 1956c <blkid_probe_get_size@plt+0x12054>
   1891c:	add	r1, pc, r1
   18920:	b	187f8 <blkid_probe_get_size@plt+0x112e0>
   18924:	ldr	r1, [sp, #92]	; 0x5c
   18928:	ldr	r0, [sp, #56]	; 0x38
   1892c:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   18930:	ldr	r1, [pc, #3128]	; 19570 <blkid_probe_get_size@plt+0x12058>
   18934:	ldr	r0, [sp, #156]	; 0x9c
   18938:	add	r1, pc, r1
   1893c:	bl	7314 <strcmp@plt>
   18940:	ldr	r3, [sp, #88]	; 0x58
   18944:	mov	r2, r7
   18948:	ldr	r1, [sp, #152]	; 0x98
   1894c:	cmp	r0, #0
   18950:	mov	r0, #3
   18954:	orreq	r8, r3, #24576	; 0x6000
   18958:	orrne	r8, r3, #8192	; 0x2000
   1895c:	bl	7368 <__lxstat64@plt>
   18960:	cmp	r0, #0
   18964:	blt	18a0c <blkid_probe_get_size@plt+0x114f4>
   18968:	ldr	r3, [sp, #208]	; 0xd0
   1896c:	eor	ip, r8, r3
   18970:	tst	ip, #61440	; 0xf000
   18974:	bne	1898c <blkid_probe_get_size@plt+0x11474>
   18978:	ldrd	r0, [r7, #32]
   1897c:	ldrd	r2, [sl]
   18980:	cmp	r1, r3
   18984:	cmpeq	r0, r2
   18988:	beq	18ae0 <blkid_probe_get_size@plt+0x115c8>
   1898c:	ldr	r3, [pc, #3040]	; 19574 <blkid_probe_get_size@plt+0x1205c>
   18990:	mov	r2, #0
   18994:	add	r3, pc, r3
   18998:	str	r2, [sp, #184]	; 0xb8
   1899c:	ldr	r3, [r3, #4]
   189a0:	cmp	r3, #6
   189a4:	bgt	18a98 <blkid_probe_get_size@plt+0x11580>
   189a8:	mov	r1, r2
   189ac:	str	r2, [sp, #8]
   189b0:	ldr	r2, [pc, #3008]	; 19578 <blkid_probe_get_size@plt+0x12060>
   189b4:	ldr	r3, [pc, #3008]	; 1957c <blkid_probe_get_size@plt+0x12064>
   189b8:	add	r2, pc, r2
   189bc:	ldr	r0, [sp, #152]	; 0x98
   189c0:	ldr	ip, [sp, #160]	; 0xa0
   189c4:	str	r2, [sp, #20]
   189c8:	add	r3, pc, r3
   189cc:	ldr	r2, [pc, #2988]	; 19580 <blkid_probe_get_size@plt+0x12068>
   189d0:	add	r3, r3, #1680	; 0x690
   189d4:	str	r1, [sp, #4]
   189d8:	mov	r1, #0
   189dc:	str	r3, [sp]
   189e0:	str	r0, [sp, #24]
   189e4:	str	r1, [sp, #16]
   189e8:	str	r1, [sp, #12]
   189ec:	str	ip, [sp, #28]
   189f0:	mov	r3, #304	; 0x130
   189f4:	add	r2, pc, r2
   189f8:	mov	r1, #1073741841	; 0x40000011
   189fc:	mov	r0, #7
   18a00:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18a04:	str	r0, [sp, #76]	; 0x4c
   18a08:	b	170cc <blkid_probe_get_size@plt+0xfbb4>
   18a0c:	mov	r2, #0
   18a10:	str	r2, [sp, #184]	; 0xb8
   18a14:	str	r2, [sp, #72]	; 0x48
   18a18:	bl	732c <__errno_location@plt>
   18a1c:	ldr	r3, [pc, #2912]	; 19584 <blkid_probe_get_size@plt+0x1206c>
   18a20:	ldr	r2, [sp, #72]	; 0x48
   18a24:	add	r3, pc, r3
   18a28:	ldr	r3, [r3, #4]
   18a2c:	cmp	r3, #6
   18a30:	movle	r3, r2
   18a34:	movle	r1, r3
   18a38:	ldr	r8, [r0]
   18a3c:	bgt	18abc <blkid_probe_get_size@plt+0x115a4>
   18a40:	ldr	r2, [pc, #2880]	; 19588 <blkid_probe_get_size@plt+0x12070>
   18a44:	str	r3, [sp, #8]
   18a48:	add	r2, pc, r2
   18a4c:	add	r2, r2, #1680	; 0x690
   18a50:	ldr	r3, [pc, #2868]	; 1958c <blkid_probe_get_size@plt+0x12074>
   18a54:	ldr	ip, [sp, #152]	; 0x98
   18a58:	str	r2, [sp]
   18a5c:	ldr	r2, [pc, #2860]	; 19590 <blkid_probe_get_size@plt+0x12078>
   18a60:	mov	r0, #0
   18a64:	add	r3, pc, r3
   18a68:	str	r1, [sp, #4]
   18a6c:	str	r3, [sp, #20]
   18a70:	str	r0, [sp, #16]
   18a74:	str	r0, [sp, #12]
   18a78:	mov	r1, r8
   18a7c:	str	ip, [sp, #24]
   18a80:	mov	r3, #300	; 0x12c
   18a84:	add	r2, pc, r2
   18a88:	mov	r0, #7
   18a8c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18a90:	str	r0, [sp, #76]	; 0x4c
   18a94:	b	170cc <blkid_probe_get_size@plt+0xfbb4>
   18a98:	ldr	r1, [sp, #68]	; 0x44
   18a9c:	ldr	r0, [sp, #56]	; 0x38
   18aa0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18aa4:	ldr	r2, [sp, #184]	; 0xb8
   18aa8:	cmp	r2, #0
   18aac:	beq	189a8 <blkid_probe_get_size@plt+0x11490>
   18ab0:	ldr	r1, [pc, #2780]	; 19594 <blkid_probe_get_size@plt+0x1207c>
   18ab4:	add	r1, pc, r1
   18ab8:	b	189ac <blkid_probe_get_size@plt+0x11494>
   18abc:	ldr	r1, [sp, #68]	; 0x44
   18ac0:	ldr	r0, [sp, #56]	; 0x38
   18ac4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18ac8:	ldr	r3, [sp, #184]	; 0xb8
   18acc:	cmp	r3, #0
   18ad0:	moveq	r1, r3
   18ad4:	ldrne	r1, [pc, #2748]	; 19598 <blkid_probe_get_size@plt+0x12080>
   18ad8:	addne	r1, pc, r1
   18adc:	b	18a40 <blkid_probe_get_size@plt+0x11528>
   18ae0:	ldr	r3, [sp, #84]	; 0x54
   18ae4:	cmp	r3, #0
   18ae8:	beq	18d0c <blkid_probe_get_size@plt+0x117f4>
   18aec:	lsl	r3, ip, #23
   18af0:	ldr	r2, [pc, #2724]	; 1959c <blkid_probe_get_size@plt+0x12084>
   18af4:	lsr	r3, r3, #23
   18af8:	add	r2, pc, r2
   18afc:	cmp	r3, #0
   18b00:	ldr	r2, [r2, #4]
   18b04:	bne	18b14 <blkid_probe_get_size@plt+0x115fc>
   18b08:	ldr	r1, [sp, #216]	; 0xd8
   18b0c:	cmp	r9, r1
   18b10:	beq	18d24 <blkid_probe_get_size@plt+0x1180c>
   18b14:	mov	r3, #0
   18b18:	cmp	r2, #6
   18b1c:	str	r3, [sp, #184]	; 0xb8
   18b20:	bgt	1919c <blkid_probe_get_size@plt+0x11c84>
   18b24:	mov	r0, r3
   18b28:	ldr	r2, [pc, #2672]	; 195a0 <blkid_probe_get_size@plt+0x12088>
   18b2c:	ldr	r1, [pc, #2672]	; 195a4 <blkid_probe_get_size@plt+0x1208c>
   18b30:	add	r2, pc, r2
   18b34:	add	r2, r2, #1680	; 0x690
   18b38:	ldr	ip, [sp, #152]	; 0x98
   18b3c:	ldr	lr, [sp, #80]	; 0x50
   18b40:	str	r2, [sp]
   18b44:	ldr	r2, [pc, #2652]	; 195a8 <blkid_probe_get_size@plt+0x12090>
   18b48:	stmib	sp, {r0, r3}
   18b4c:	add	r1, pc, r1
   18b50:	mov	r3, #0
   18b54:	str	lr, [sp, #36]	; 0x24
   18b58:	str	ip, [sp, #24]
   18b5c:	str	r1, [sp, #20]
   18b60:	str	r3, [sp, #16]
   18b64:	mov	r1, r3
   18b68:	str	r3, [sp, #12]
   18b6c:	add	r2, pc, r2
   18b70:	mov	r3, #312	; 0x138
   18b74:	str	r9, [sp, #32]
   18b78:	str	r8, [sp, #28]
   18b7c:	mov	r0, #7
   18b80:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18b84:	mov	r1, r8
   18b88:	ldr	r0, [sp, #152]	; 0x98
   18b8c:	bl	6f24 <chmod@plt>
   18b90:	cmp	r0, #0
   18b94:	blt	19114 <blkid_probe_get_size@plt+0x11bfc>
   18b98:	ldr	r2, [sp, #80]	; 0x50
   18b9c:	mov	r1, r9
   18ba0:	ldr	r0, [sp, #152]	; 0x98
   18ba4:	bl	68e8 <chown@plt>
   18ba8:	cmp	r0, #0
   18bac:	blt	1907c <blkid_probe_get_size@plt+0x11b64>
   18bb0:	ldr	r3, [pc, #2548]	; 195ac <blkid_probe_get_size@plt+0x12094>
   18bb4:	ldr	r2, [pc, #2548]	; 195b0 <blkid_probe_get_size@plt+0x12098>
   18bb8:	add	r3, pc, r3
   18bbc:	add	r3, r3, #1680	; 0x690
   18bc0:	str	r3, [sp, #108]	; 0x6c
   18bc4:	add	r3, sp, #168	; 0xa8
   18bc8:	add	r2, pc, r2
   18bcc:	str	r3, [sp, #100]	; 0x64
   18bd0:	add	r3, sp, #164	; 0xa4
   18bd4:	add	r2, r2, #1712	; 0x6b0
   18bd8:	str	r3, [sp, #88]	; 0x58
   18bdc:	str	r4, [sp, #116]	; 0x74
   18be0:	ldr	r3, [pc, #2508]	; 195b4 <blkid_probe_get_size@plt+0x1209c>
   18be4:	ldr	r9, [sp, #52]	; 0x34
   18be8:	ldr	r4, [sp, #56]	; 0x38
   18bec:	mov	r0, r2
   18bf0:	mvn	r1, #1
   18bf4:	mov	r2, #0
   18bf8:	add	r0, r0, #12
   18bfc:	add	r3, pc, r3
   18c00:	str	r0, [sp, #112]	; 0x70
   18c04:	str	r1, [sp, #184]	; 0xb8
   18c08:	str	r2, [sp, #188]	; 0xbc
   18c0c:	str	r2, [sp, #80]	; 0x50
   18c10:	str	r3, [sp, #104]	; 0x68
   18c14:	str	r5, [sp, #120]	; 0x78
   18c18:	ldr	r3, [sp, #88]	; 0x58
   18c1c:	ldr	r2, [sp, #100]	; 0x64
   18c20:	ldr	r1, [sp, #68]	; 0x44
   18c24:	ldr	r0, [sp, #96]	; 0x60
   18c28:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   18c2c:	subs	r8, r0, #0
   18c30:	beq	18cd0 <blkid_probe_get_size@plt+0x117b8>
   18c34:	ldr	r5, [sp, #164]	; 0xa4
   18c38:	ldr	r1, [sp, #104]	; 0x68
   18c3c:	mov	r0, r5
   18c40:	bl	7314 <strcmp@plt>
   18c44:	cmp	r0, #0
   18c48:	beq	18e7c <blkid_probe_get_size@plt+0x11964>
   18c4c:	ldr	r1, [pc, #2404]	; 195b8 <blkid_probe_get_size@plt+0x120a0>
   18c50:	mov	r0, r5
   18c54:	add	r1, pc, r1
   18c58:	bl	7314 <strcmp@plt>
   18c5c:	subs	r3, r0, #0
   18c60:	beq	18df4 <blkid_probe_get_size@plt+0x118dc>
   18c64:	ldr	r1, [pc, #2384]	; 195bc <blkid_probe_get_size@plt+0x120a4>
   18c68:	mov	r3, #0
   18c6c:	add	r1, pc, r1
   18c70:	str	r3, [sp, #172]	; 0xac
   18c74:	ldr	r1, [r1, #4]
   18c78:	cmp	r1, #2
   18c7c:	bgt	18da0 <blkid_probe_get_size@plt+0x11888>
   18c80:	mov	ip, r3
   18c84:	ldr	r0, [pc, #2356]	; 195c0 <blkid_probe_get_size@plt+0x120a8>
   18c88:	ldr	lr, [sp, #168]	; 0xa8
   18c8c:	str	r3, [sp, #8]
   18c90:	ldr	r2, [pc, #2348]	; 195c4 <blkid_probe_get_size@plt+0x120ac>
   18c94:	ldr	r3, [sp, #108]	; 0x6c
   18c98:	mov	r1, #0
   18c9c:	add	r0, pc, r0
   18ca0:	str	r3, [sp]
   18ca4:	str	r0, [sp, #20]
   18ca8:	str	r5, [sp, #24]
   18cac:	str	ip, [sp, #4]
   18cb0:	str	lr, [sp, #28]
   18cb4:	str	r1, [sp, #16]
   18cb8:	str	r1, [sp, #12]
   18cbc:	ldr	r3, [pc, #2308]	; 195c8 <blkid_probe_get_size@plt+0x120b0>
   18cc0:	add	r2, pc, r2
   18cc4:	mov	r0, #3
   18cc8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18ccc:	b	18c18 <blkid_probe_get_size@plt+0x11700>
   18cd0:	ldr	r3, [sp, #72]	; 0x48
   18cd4:	ldr	r4, [sp, #116]	; 0x74
   18cd8:	cmp	r3, #0
   18cdc:	str	r9, [sp, #52]	; 0x34
   18ce0:	ldr	r5, [sp, #120]	; 0x78
   18ce4:	ldr	r0, [sp, #152]	; 0x98
   18ce8:	bne	18cf8 <blkid_probe_get_size@plt+0x117e0>
   18cec:	mov	r1, #1
   18cf0:	bl	3eadc <blkid_probe_get_size@plt+0x375c4>
   18cf4:	ldr	r0, [sp, #152]	; 0x98
   18cf8:	ldr	r3, [sp, #80]	; 0x50
   18cfc:	cmp	r3, #0
   18d00:	bne	18d0c <blkid_probe_get_size@plt+0x117f4>
   18d04:	mov	r1, r3
   18d08:	bl	4bee0 <blkid_probe_get_size@plt+0x449c8>
   18d0c:	mov	r3, #0
   18d10:	mov	r2, r3
   18d14:	ldr	r1, [sp, #152]	; 0x98
   18d18:	mvn	r0, #99	; 0x63
   18d1c:	bl	6b70 <utimensat@plt>
   18d20:	b	170cc <blkid_probe_get_size@plt+0xfbb4>
   18d24:	ldr	r1, [sp, #220]	; 0xdc
   18d28:	ldr	r0, [sp, #80]	; 0x50
   18d2c:	cmp	r0, r1
   18d30:	bne	18b14 <blkid_probe_get_size@plt+0x115fc>
   18d34:	cmp	r2, #6
   18d38:	str	r3, [sp, #184]	; 0xb8
   18d3c:	bgt	18dc8 <blkid_probe_get_size@plt+0x118b0>
   18d40:	mov	r0, r3
   18d44:	ldr	r2, [pc, #2176]	; 195cc <blkid_probe_get_size@plt+0x120b4>
   18d48:	ldr	r1, [sp, #80]	; 0x50
   18d4c:	add	r2, pc, r2
   18d50:	add	r2, r2, #1680	; 0x690
   18d54:	ldr	lr, [pc, #2164]	; 195d0 <blkid_probe_get_size@plt+0x120b8>
   18d58:	ldr	ip, [sp, #152]	; 0x98
   18d5c:	str	r2, [sp]
   18d60:	ldr	r2, [pc, #2156]	; 195d4 <blkid_probe_get_size@plt+0x120bc>
   18d64:	str	r1, [sp, #36]	; 0x24
   18d68:	add	lr, pc, lr
   18d6c:	mov	r1, #0
   18d70:	stmib	sp, {r0, r3}
   18d74:	str	r9, [sp, #32]
   18d78:	str	r8, [sp, #28]
   18d7c:	str	ip, [sp, #24]
   18d80:	str	lr, [sp, #20]
   18d84:	str	r1, [sp, #16]
   18d88:	str	r1, [sp, #12]
   18d8c:	ldr	r3, [pc, #2116]	; 195d8 <blkid_probe_get_size@plt+0x120c0>
   18d90:	add	r2, pc, r2
   18d94:	mov	r0, #7
   18d98:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18d9c:	b	18bb0 <blkid_probe_get_size@plt+0x11698>
   18da0:	sub	r1, sl, #4
   18da4:	mov	r0, r4
   18da8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18dac:	ldr	r3, [sp, #172]	; 0xac
   18db0:	cmp	r3, #0
   18db4:	beq	18dec <blkid_probe_get_size@plt+0x118d4>
   18db8:	ldr	ip, [pc, #2076]	; 195dc <blkid_probe_get_size@plt+0x120c4>
   18dbc:	ldr	r5, [sp, #164]	; 0xa4
   18dc0:	add	ip, pc, ip
   18dc4:	b	18c84 <blkid_probe_get_size@plt+0x1176c>
   18dc8:	ldr	r1, [sp, #68]	; 0x44
   18dcc:	ldr	r0, [sp, #56]	; 0x38
   18dd0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   18dd4:	ldr	r3, [sp, #184]	; 0xb8
   18dd8:	cmp	r3, #0
   18ddc:	beq	18d40 <blkid_probe_get_size@plt+0x11828>
   18de0:	ldr	r0, [pc, #2040]	; 195e0 <blkid_probe_get_size@plt+0x120c8>
   18de4:	add	r0, pc, r0
   18de8:	b	18d44 <blkid_probe_get_size@plt+0x1182c>
   18dec:	ldr	r5, [sp, #164]	; 0xa4
   18df0:	b	18c80 <blkid_probe_get_size@plt+0x11768>
   18df4:	ldr	r1, [sp, #168]	; 0xa8
   18df8:	ldr	r0, [sp, #152]	; 0x98
   18dfc:	str	r3, [sp, #52]	; 0x34
   18e00:	bl	4bee0 <blkid_probe_get_size@plt+0x449c8>
   18e04:	ldr	r3, [sp, #52]	; 0x34
   18e08:	subs	r5, r0, #0
   18e0c:	blt	19234 <blkid_probe_get_size@plt+0x11d1c>
   18e10:	ldr	r2, [pc, #1996]	; 195e4 <blkid_probe_get_size@plt+0x120cc>
   18e14:	str	r3, [sp, #172]	; 0xac
   18e18:	add	r2, pc, r2
   18e1c:	ldr	r2, [r2, #4]
   18e20:	cmp	r2, #6
   18e24:	bgt	19210 <blkid_probe_get_size@plt+0x11cf8>
   18e28:	mov	ip, r3
   18e2c:	ldr	r2, [pc, #1972]	; 195e8 <blkid_probe_get_size@plt+0x120d0>
   18e30:	ldr	r0, [pc, #1972]	; 195ec <blkid_probe_get_size@plt+0x120d4>
   18e34:	add	r2, pc, r2
   18e38:	add	r2, r2, #1680	; 0x690
   18e3c:	ldr	lr, [sp, #168]	; 0xa8
   18e40:	stm	sp, {r2, ip}
   18e44:	ldr	r2, [pc, #1956]	; 195f0 <blkid_probe_get_size@plt+0x120d8>
   18e48:	mov	r1, #0
   18e4c:	add	r0, pc, r0
   18e50:	str	r3, [sp, #8]
   18e54:	str	r0, [sp, #20]
   18e58:	str	lr, [sp, #24]
   18e5c:	str	r1, [sp, #16]
   18e60:	str	r1, [sp, #12]
   18e64:	mov	r3, #340	; 0x154
   18e68:	add	r2, pc, r2
   18e6c:	mov	r0, #7
   18e70:	str	r8, [sp, #80]	; 0x50
   18e74:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18e78:	b	18c18 <blkid_probe_get_size@plt+0x11700>
   18e7c:	ldr	r3, [sp, #168]	; 0xa8
   18e80:	ldr	r5, [sp, #152]	; 0x98
   18e84:	str	r3, [sp, #52]	; 0x34
   18e88:	str	r5, [sp, #84]	; 0x54
   18e8c:	bl	39990 <blkid_probe_get_size@plt+0x32478>
   18e90:	subs	r3, r0, #0
   18e94:	str	r3, [sp, #72]	; 0x48
   18e98:	beq	18ec4 <blkid_probe_get_size@plt+0x119ac>
   18e9c:	cmp	r5, #0
   18ea0:	beq	192d8 <blkid_probe_get_size@plt+0x11dc0>
   18ea4:	ldr	r3, [sp, #52]	; 0x34
   18ea8:	cmp	r3, #0
   18eac:	beq	192a8 <blkid_probe_get_size@plt+0x11d90>
   18eb0:	ldr	r1, [sp, #52]	; 0x34
   18eb4:	ldr	r0, [sp, #84]	; 0x54
   18eb8:	bl	6bf4 <setfilecon@plt>
   18ebc:	cmp	r0, #0
   18ec0:	blt	18f34 <blkid_probe_get_size@plt+0x11a1c>
   18ec4:	ldr	r2, [pc, #1832]	; 195f4 <blkid_probe_get_size@plt+0x120dc>
   18ec8:	mov	r3, #0
   18ecc:	add	r2, pc, r2
   18ed0:	str	r3, [sp, #172]	; 0xac
   18ed4:	ldr	r2, [r2, #4]
   18ed8:	cmp	r2, #6
   18edc:	bgt	19034 <blkid_probe_get_size@plt+0x11b1c>
   18ee0:	mov	ip, r3
   18ee4:	ldr	r2, [pc, #1804]	; 195f8 <blkid_probe_get_size@plt+0x120e0>
   18ee8:	ldr	r0, [pc, #1804]	; 195fc <blkid_probe_get_size@plt+0x120e4>
   18eec:	add	r2, pc, r2
   18ef0:	add	r2, r2, #1680	; 0x690
   18ef4:	ldr	lr, [sp, #168]	; 0xa8
   18ef8:	stm	sp, {r2, ip}
   18efc:	ldr	r2, [pc, #1788]	; 19600 <blkid_probe_get_size@plt+0x120e8>
   18f00:	mov	r1, #0
   18f04:	add	r0, pc, r0
   18f08:	str	r3, [sp, #8]
   18f0c:	str	r0, [sp, #20]
   18f10:	str	lr, [sp, #24]
   18f14:	str	r1, [sp, #16]
   18f18:	str	r1, [sp, #12]
   18f1c:	ldr	r3, [pc, #1760]	; 19604 <blkid_probe_get_size@plt+0x120ec>
   18f20:	add	r2, pc, r2
   18f24:	mov	r0, #7
   18f28:	str	r8, [sp, #72]	; 0x48
   18f2c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   18f30:	b	18c18 <blkid_probe_get_size@plt+0x11700>
   18f34:	bl	71a0 <security_getenforce@plt>
   18f38:	cmp	r0, #1
   18f3c:	movne	r2, #7
   18f40:	moveq	r2, #3
   18f44:	str	r2, [sp, #124]	; 0x7c
   18f48:	bl	732c <__errno_location@plt>
   18f4c:	ldr	r3, [pc, #1716]	; 19608 <blkid_probe_get_size@plt+0x120f0>
   18f50:	ldr	r2, [sp, #124]	; 0x7c
   18f54:	add	r3, pc, r3
   18f58:	ldr	r3, [r3]
   18f5c:	cmp	r2, r3
   18f60:	mov	r5, r0
   18f64:	ldr	r1, [r0]
   18f68:	bgt	18fa4 <blkid_probe_get_size@plt+0x11a8c>
   18f6c:	ldr	r0, [sp, #84]	; 0x54
   18f70:	ldr	r3, [pc, #1684]	; 1960c <blkid_probe_get_size@plt+0x120f4>
   18f74:	str	r0, [sp, #12]
   18f78:	ldr	r0, [sp, #52]	; 0x34
   18f7c:	add	r3, pc, r3
   18f80:	str	r0, [sp, #8]
   18f84:	ldr	r0, [sp, #112]	; 0x70
   18f88:	str	r3, [sp, #4]
   18f8c:	str	r0, [sp]
   18f90:	mov	r0, r2
   18f94:	ldr	r2, [pc, #1652]	; 19610 <blkid_probe_get_size@plt+0x120f8>
   18f98:	mov	r3, #187	; 0xbb
   18f9c:	add	r2, pc, r2
   18fa0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   18fa4:	bl	71a0 <security_getenforce@plt>
   18fa8:	cmp	r0, #0
   18fac:	ble	18ec4 <blkid_probe_get_size@plt+0x119ac>
   18fb0:	ldr	r3, [pc, #1628]	; 19614 <blkid_probe_get_size@plt+0x120fc>
   18fb4:	ldr	r2, [r5]
   18fb8:	add	r3, pc, r3
   18fbc:	cmp	r2, #0
   18fc0:	rsb	r5, r2, #0
   18fc4:	ldr	r3, [r3, #4]
   18fc8:	ble	18ec4 <blkid_probe_get_size@plt+0x119ac>
   18fcc:	cmp	r3, #2
   18fd0:	mov	r3, #0
   18fd4:	str	r3, [sp, #172]	; 0xac
   18fd8:	bgt	19058 <blkid_probe_get_size@plt+0x11b40>
   18fdc:	mov	r1, r3
   18fe0:	ldr	r0, [pc, #1584]	; 19618 <blkid_probe_get_size@plt+0x12100>
   18fe4:	str	r3, [sp, #8]
   18fe8:	ldr	r3, [pc, #1580]	; 1961c <blkid_probe_get_size@plt+0x12104>
   18fec:	ldr	lr, [sp, #168]	; 0xa8
   18ff0:	add	r0, pc, r0
   18ff4:	ldr	r2, [pc, #1572]	; 19620 <blkid_probe_get_size@plt+0x12108>
   18ff8:	mov	ip, #0
   18ffc:	add	r0, r0, #1680	; 0x690
   19000:	add	r3, pc, r3
   19004:	str	r1, [sp, #4]
   19008:	str	r0, [sp]
   1900c:	str	r3, [sp, #20]
   19010:	mov	r1, r5
   19014:	str	lr, [sp, #24]
   19018:	str	ip, [sp, #16]
   1901c:	str	ip, [sp, #12]
   19020:	ldr	r3, [pc, #1532]	; 19624 <blkid_probe_get_size@plt+0x1210c>
   19024:	add	r2, pc, r2
   19028:	mov	r0, #3
   1902c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   19030:	b	18c18 <blkid_probe_get_size@plt+0x11700>
   19034:	sub	r1, sl, #4
   19038:	mov	r0, r4
   1903c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19040:	ldr	r3, [sp, #172]	; 0xac
   19044:	cmp	r3, #0
   19048:	beq	18ee0 <blkid_probe_get_size@plt+0x119c8>
   1904c:	ldr	ip, [pc, #1492]	; 19628 <blkid_probe_get_size@plt+0x12110>
   19050:	add	ip, pc, ip
   19054:	b	18ee4 <blkid_probe_get_size@plt+0x119cc>
   19058:	sub	r1, sl, #4
   1905c:	mov	r0, r4
   19060:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19064:	ldr	r3, [sp, #172]	; 0xac
   19068:	cmp	r3, #0
   1906c:	beq	18fdc <blkid_probe_get_size@plt+0x11ac4>
   19070:	ldr	r1, [pc, #1460]	; 1962c <blkid_probe_get_size@plt+0x12114>
   19074:	add	r1, pc, r1
   19078:	b	18fe0 <blkid_probe_get_size@plt+0x11ac8>
   1907c:	mov	r3, #0
   19080:	str	r3, [sp, #184]	; 0xb8
   19084:	str	r3, [sp, #76]	; 0x4c
   19088:	bl	732c <__errno_location@plt>
   1908c:	ldr	r2, [pc, #1436]	; 19630 <blkid_probe_get_size@plt+0x12118>
   19090:	ldr	r3, [sp, #76]	; 0x4c
   19094:	add	r2, pc, r2
   19098:	ldr	r2, [r2, #4]
   1909c:	cmp	r2, #3
   190a0:	ldr	r8, [r0]
   190a4:	movle	r0, r3
   190a8:	movle	r1, r0
   190ac:	bgt	191c0 <blkid_probe_get_size@plt+0x11ca8>
   190b0:	ldr	r2, [sp, #80]	; 0x50
   190b4:	ldr	r3, [pc, #1400]	; 19634 <blkid_probe_get_size@plt+0x1211c>
   190b8:	str	r2, [sp, #32]
   190bc:	ldr	r2, [pc, #1396]	; 19638 <blkid_probe_get_size@plt+0x12120>
   190c0:	ldr	ip, [sp, #152]	; 0x98
   190c4:	add	r2, pc, r2
   190c8:	str	r2, [sp, #20]
   190cc:	add	r3, pc, r3
   190d0:	ldr	r2, [pc, #1380]	; 1963c <blkid_probe_get_size@plt+0x12124>
   190d4:	add	r3, r3, #1680	; 0x690
   190d8:	str	r0, [sp, #8]
   190dc:	mov	r0, #0
   190e0:	str	r1, [sp, #4]
   190e4:	str	r3, [sp]
   190e8:	str	r0, [sp, #16]
   190ec:	str	r0, [sp, #12]
   190f0:	str	r9, [sp, #28]
   190f4:	mov	r1, r8
   190f8:	str	ip, [sp, #24]
   190fc:	mov	r3, #316	; 0x13c
   19100:	add	r2, pc, r2
   19104:	mov	r0, #4
   19108:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1910c:	str	r0, [sp, #76]	; 0x4c
   19110:	b	18bb0 <blkid_probe_get_size@plt+0x11698>
   19114:	mov	r3, #0
   19118:	str	r3, [sp, #184]	; 0xb8
   1911c:	bl	732c <__errno_location@plt>
   19120:	ldr	r3, [pc, #1304]	; 19640 <blkid_probe_get_size@plt+0x12128>
   19124:	add	r3, pc, r3
   19128:	ldr	r3, [r3, #4]
   1912c:	cmp	r3, #3
   19130:	movle	r1, #0
   19134:	ldr	r2, [r0]
   19138:	movle	r0, r1
   1913c:	bgt	191e4 <blkid_probe_get_size@plt+0x11ccc>
   19140:	ldr	r3, [pc, #1276]	; 19644 <blkid_probe_get_size@plt+0x1212c>
   19144:	ldr	lr, [pc, #1276]	; 19648 <blkid_probe_get_size@plt+0x12130>
   19148:	ldr	ip, [sp, #152]	; 0x98
   1914c:	str	r1, [sp, #8]
   19150:	add	r3, pc, r3
   19154:	mov	r1, r2
   19158:	ldr	r2, [pc, #1260]	; 1964c <blkid_probe_get_size@plt+0x12134>
   1915c:	add	r3, r3, #1680	; 0x690
   19160:	add	lr, pc, lr
   19164:	str	r0, [sp, #4]
   19168:	mov	r0, #0
   1916c:	str	r3, [sp]
   19170:	str	r0, [sp, #16]
   19174:	str	r0, [sp, #12]
   19178:	str	r8, [sp, #28]
   1917c:	str	ip, [sp, #24]
   19180:	str	lr, [sp, #20]
   19184:	ldr	r3, [pc, #1220]	; 19650 <blkid_probe_get_size@plt+0x12138>
   19188:	add	r2, pc, r2
   1918c:	mov	r0, #4
   19190:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   19194:	str	r0, [sp, #76]	; 0x4c
   19198:	b	18b98 <blkid_probe_get_size@plt+0x11680>
   1919c:	ldr	r1, [sp, #68]	; 0x44
   191a0:	ldr	r0, [sp, #56]	; 0x38
   191a4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   191a8:	ldr	r3, [sp, #184]	; 0xb8
   191ac:	cmp	r3, #0
   191b0:	beq	18b24 <blkid_probe_get_size@plt+0x1160c>
   191b4:	ldr	r0, [pc, #1176]	; 19654 <blkid_probe_get_size@plt+0x1213c>
   191b8:	add	r0, pc, r0
   191bc:	b	18b28 <blkid_probe_get_size@plt+0x11610>
   191c0:	ldr	r1, [sp, #68]	; 0x44
   191c4:	ldr	r0, [sp, #56]	; 0x38
   191c8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   191cc:	ldr	r0, [sp, #184]	; 0xb8
   191d0:	cmp	r0, #0
   191d4:	moveq	r1, r0
   191d8:	ldrne	r1, [pc, #1144]	; 19658 <blkid_probe_get_size@plt+0x12140>
   191dc:	addne	r1, pc, r1
   191e0:	b	190b0 <blkid_probe_get_size@plt+0x11b98>
   191e4:	ldr	r1, [sp, #68]	; 0x44
   191e8:	ldr	r0, [sp, #56]	; 0x38
   191ec:	str	r2, [sp, #76]	; 0x4c
   191f0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   191f4:	ldr	r1, [sp, #184]	; 0xb8
   191f8:	ldr	r2, [sp, #76]	; 0x4c
   191fc:	cmp	r1, #0
   19200:	moveq	r0, r1
   19204:	ldrne	r0, [pc, #1104]	; 1965c <blkid_probe_get_size@plt+0x12144>
   19208:	addne	r0, pc, r0
   1920c:	b	19140 <blkid_probe_get_size@plt+0x11c28>
   19210:	sub	r1, sl, #4
   19214:	mov	r0, r4
   19218:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1921c:	ldr	r3, [sp, #172]	; 0xac
   19220:	cmp	r3, #0
   19224:	beq	18e28 <blkid_probe_get_size@plt+0x11910>
   19228:	ldr	ip, [pc, #1072]	; 19660 <blkid_probe_get_size@plt+0x12148>
   1922c:	add	ip, pc, ip
   19230:	b	18e2c <blkid_probe_get_size@plt+0x11914>
   19234:	ldr	r1, [pc, #1064]	; 19664 <blkid_probe_get_size@plt+0x1214c>
   19238:	str	r3, [sp, #172]	; 0xac
   1923c:	add	r1, pc, r1
   19240:	ldr	r1, [r1, #4]
   19244:	cmp	r1, #2
   19248:	bgt	19308 <blkid_probe_get_size@plt+0x11df0>
   1924c:	mov	r1, r3
   19250:	ldr	r0, [pc, #1040]	; 19668 <blkid_probe_get_size@plt+0x12150>
   19254:	str	r3, [sp, #8]
   19258:	ldr	r3, [pc, #1036]	; 1966c <blkid_probe_get_size@plt+0x12154>
   1925c:	ldr	lr, [sp, #168]	; 0xa8
   19260:	add	r0, pc, r0
   19264:	ldr	r2, [pc, #1028]	; 19670 <blkid_probe_get_size@plt+0x12158>
   19268:	mov	ip, #0
   1926c:	add	r0, r0, #1680	; 0x690
   19270:	add	r3, pc, r3
   19274:	str	r1, [sp, #4]
   19278:	str	r0, [sp]
   1927c:	str	r3, [sp, #20]
   19280:	mov	r1, r5
   19284:	str	lr, [sp, #24]
   19288:	str	ip, [sp, #16]
   1928c:	str	ip, [sp, #12]
   19290:	ldr	r3, [pc, #988]	; 19674 <blkid_probe_get_size@plt+0x1215c>
   19294:	add	r2, pc, r2
   19298:	mov	r0, #3
   1929c:	str	r8, [sp, #80]	; 0x50
   192a0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   192a4:	b	18c18 <blkid_probe_get_size@plt+0x11700>
   192a8:	ldr	r3, [pc, #968]	; 19678 <blkid_probe_get_size@plt+0x12160>
   192ac:	ldr	r2, [pc, #968]	; 1967c <blkid_probe_get_size@plt+0x12164>
   192b0:	add	r3, pc, r3
   192b4:	add	r3, r3, #1696	; 0x6a0
   192b8:	ldr	r1, [pc, #960]	; 19680 <blkid_probe_get_size@plt+0x12168>
   192bc:	add	r3, r3, #8
   192c0:	str	r3, [sp]
   192c4:	ldr	r0, [sp, #52]	; 0x34
   192c8:	mov	r3, #184	; 0xb8
   192cc:	add	r2, pc, r2
   192d0:	add	r1, pc, r1
   192d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   192d8:	ldr	r3, [pc, #932]	; 19684 <blkid_probe_get_size@plt+0x1216c>
   192dc:	ldr	r2, [pc, #932]	; 19688 <blkid_probe_get_size@plt+0x12170>
   192e0:	add	r3, pc, r3
   192e4:	add	r3, r3, #1696	; 0x6a0
   192e8:	ldr	r1, [pc, #924]	; 1968c <blkid_probe_get_size@plt+0x12174>
   192ec:	add	r3, r3, #8
   192f0:	str	r3, [sp]
   192f4:	ldr	r0, [sp, #84]	; 0x54
   192f8:	mov	r3, #183	; 0xb7
   192fc:	add	r2, pc, r2
   19300:	add	r1, pc, r1
   19304:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   19308:	sub	r1, sl, #4
   1930c:	mov	r0, r4
   19310:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19314:	ldr	r3, [sp, #172]	; 0xac
   19318:	cmp	r3, #0
   1931c:	beq	1924c <blkid_probe_get_size@plt+0x11d34>
   19320:	ldr	r1, [pc, #872]	; 19690 <blkid_probe_get_size@plt+0x12178>
   19324:	add	r1, pc, r1
   19328:	b	19250 <blkid_probe_get_size@plt+0x11d38>
   1932c:	ldr	r3, [pc, #864]	; 19694 <blkid_probe_get_size@plt+0x1217c>
   19330:	ldr	r2, [pc, #864]	; 19698 <blkid_probe_get_size@plt+0x12180>
   19334:	add	r3, pc, r3
   19338:	add	r3, r3, #1616	; 0x650
   1933c:	ldr	r1, [pc, #856]	; 1969c <blkid_probe_get_size@plt+0x12184>
   19340:	add	r3, r3, #8
   19344:	str	r3, [sp]
   19348:	ldr	r0, [sp, #56]	; 0x38
   1934c:	mov	r3, #96	; 0x60
   19350:	add	r2, pc, r2
   19354:	add	r1, pc, r1
   19358:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1935c:	sub	r3, r7, #8
   19360:	mov	r1, r3
   19364:	ldr	r0, [sp, #56]	; 0x38
   19368:	str	r3, [sp, #68]	; 0x44
   1936c:	str	sl, [sp, #184]	; 0xb8
   19370:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   19374:	ldr	r3, [r8, #4]
   19378:	str	sl, [sp, #192]	; 0xc0
   1937c:	cmp	r3, #6
   19380:	bgt	193fc <blkid_probe_get_size@plt+0x11ee4>
   19384:	mov	r0, sl
   19388:	ldr	r2, [sp, #184]	; 0xb8
   1938c:	ldr	r1, [sp, #144]	; 0x90
   19390:	cmp	r2, #0
   19394:	ldreq	r2, [pc, #772]	; 196a0 <blkid_probe_get_size@plt+0x12188>
   19398:	addeq	r2, pc, r2
   1939c:	str	r2, [sp, #28]
   193a0:	ldr	r2, [pc, #764]	; 196a4 <blkid_probe_get_size@plt+0x1218c>
   193a4:	ldr	ip, [sp, #80]	; 0x50
   193a8:	ldr	r3, [pc, #760]	; 196a8 <blkid_probe_get_size@plt+0x12190>
   193ac:	add	r2, pc, r2
   193b0:	str	ip, [sp, #40]	; 0x28
   193b4:	str	r2, [sp, #20]
   193b8:	ldr	ip, [sp, #88]	; 0x58
   193bc:	add	r3, pc, r3
   193c0:	ldr	r2, [pc, #740]	; 196ac <blkid_probe_get_size@plt+0x12194>
   193c4:	add	r3, r3, #1664	; 0x680
   193c8:	str	r1, [sp, #24]
   193cc:	mov	r1, #0
   193d0:	stmib	sp, {r0, sl}
   193d4:	str	r3, [sp]
   193d8:	str	r9, [sp, #36]	; 0x24
   193dc:	str	ip, [sp, #32]
   193e0:	str	r1, [sp, #16]
   193e4:	str	r1, [sp, #12]
   193e8:	ldr	r3, [pc, #704]	; 196b0 <blkid_probe_get_size@plt+0x12198>
   193ec:	add	r2, pc, r2
   193f0:	mov	r0, #7
   193f4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   193f8:	b	1703c <blkid_probe_get_size@plt+0xfb24>
   193fc:	mov	r1, r7
   19400:	ldr	r0, [sp, #56]	; 0x38
   19404:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19408:	ldr	sl, [sp, #192]	; 0xc0
   1940c:	cmp	sl, #0
   19410:	beq	19384 <blkid_probe_get_size@plt+0x11e6c>
   19414:	ldr	r0, [pc, #664]	; 196b4 <blkid_probe_get_size@plt+0x1219c>
   19418:	add	r0, pc, r0
   1941c:	b	19388 <blkid_probe_get_size@plt+0x11e70>
   19420:	ldr	r2, [pc, #656]	; 196b8 <blkid_probe_get_size@plt+0x121a0>
   19424:	ldr	r1, [pc, #656]	; 196bc <blkid_probe_get_size@plt+0x121a4>
   19428:	add	r2, pc, r2
   1942c:	add	r2, r2, #1648	; 0x670
   19430:	str	r2, [sp]
   19434:	ldr	r2, [pc, #644]	; 196c0 <blkid_probe_get_size@plt+0x121a8>
   19438:	ldr	r3, [pc, #644]	; 196c4 <blkid_probe_get_size@plt+0x121ac>
   1943c:	add	r2, pc, r2
   19440:	add	r1, pc, r1
   19444:	mov	r0, #1
   19448:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1944c:	ldr	r0, [sp, #56]	; 0x38
   19450:	mov	r1, r7
   19454:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19458:	ldr	r3, [sp, #192]	; 0xc0
   1945c:	cmp	r3, #0
   19460:	beq	18634 <blkid_probe_get_size@plt+0x1111c>
   19464:	ldr	r1, [pc, #604]	; 196c8 <blkid_probe_get_size@plt+0x121b0>
   19468:	add	r1, pc, r1
   1946c:	b	18638 <blkid_probe_get_size@plt+0x11120>
   19470:	mov	r1, r7
   19474:	ldr	r0, [sp, #56]	; 0x38
   19478:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1947c:	ldr	r3, [sp, #192]	; 0xc0
   19480:	cmp	r3, #0
   19484:	beq	16ed8 <blkid_probe_get_size@plt+0xf9c0>
   19488:	ldr	r1, [pc, #572]	; 196cc <blkid_probe_get_size@plt+0x121b4>
   1948c:	add	r1, pc, r1
   19490:	b	16edc <blkid_probe_get_size@plt+0xf9c4>
   19494:	ldrb	r3, [r2, #215]	; 0xd7
   19498:	orr	r3, r3, #2
   1949c:	strb	r3, [r2, #215]	; 0xd7
   194a0:	str	r2, [r6, #8]
   194a4:	b	16d78 <blkid_probe_get_size@plt+0xf860>
   194a8:	mov	r1, r7
   194ac:	ldr	r0, [sp, #56]	; 0x38
   194b0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   194b4:	ldr	r1, [sp, #192]	; 0xc0
   194b8:	cmp	r1, #0
   194bc:	moveq	r2, r1
   194c0:	ldrne	r2, [pc, #520]	; 196d0 <blkid_probe_get_size@plt+0x121b8>
   194c4:	addne	r2, pc, r2
   194c8:	b	1846c <blkid_probe_get_size@plt+0x10f54>
   194cc:	ldr	r1, [sp, #56]	; 0x38
   194d0:	mov	r2, r1
   194d4:	b	1846c <blkid_probe_get_size@plt+0x10f54>
   194d8:	mov	r1, r7
   194dc:	ldr	r0, [sp, #56]	; 0x38
   194e0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   194e4:	ldr	r1, [sp, #192]	; 0xc0
   194e8:	cmp	r1, #0
   194ec:	moveq	r2, #0
   194f0:	ldrne	r2, [pc, #476]	; 196d4 <blkid_probe_get_size@plt+0x121bc>
   194f4:	addne	r2, pc, r2
   194f8:	b	17f5c <blkid_probe_get_size@plt+0x10a44>
   194fc:	ldr	r1, [sp, #56]	; 0x38
   19500:	mov	r2, r1
   19504:	b	17f5c <blkid_probe_get_size@plt+0x10a44>
   19508:			; <UNDEFINED> instruction: 0x0004cbb4
   1950c:	andeq	r0, r0, r9, lsl r3
   19510:	andeq	pc, r7, ip, lsl fp	; <UNPREDICTABLE>
   19514:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   19518:	andeq	pc, r4, ip, lsl r5	; <UNPREDICTABLE>
   1951c:	andeq	ip, r4, r8, asr #22
   19520:	andeq	r0, r0, r3, lsl r3
   19524:	andeq	ip, r4, r0, lsr #17
   19528:	muleq	r7, r4, sl
   1952c:	andeq	pc, r4, ip, ror #9
   19530:	andeq	fp, r4, r4, lsl #30
   19534:	andeq	ip, r4, r0, lsl #16
   19538:	andeq	r0, r0, lr, lsl #3
   1953c:	andeq	ip, r4, ip, ror #15
   19540:	andeq	ip, r4, r8, asr #15
   19544:	andeq	ip, r4, r4, lsr #15
   19548:	andeq	ip, r4, r0, lsl #15
   1954c:	andeq	pc, r7, r8, asr r9	; <UNPREDICTABLE>
   19550:	andeq	pc, r4, r4, ror #5
   19554:	andeq	fp, r4, r8, asr #27
   19558:	andeq	ip, r4, r4, asr #13
   1955c:	andeq	r0, r0, r3, lsr #2
   19560:	ldrdeq	ip, [r4], -r4
   19564:			; <UNDEFINED> instruction: 0x0004c6b0
   19568:	andeq	ip, r4, ip, lsl #13
   1956c:	andeq	ip, r4, ip, lsl r6
   19570:	andeq	ip, r4, r0, lsr #11
   19574:	andeq	pc, r7, r8, lsr #15
   19578:	muleq	r4, r0, r2
   1957c:	andeq	fp, r4, r8, lsl #24
   19580:	andeq	ip, r4, r4, lsl #10
   19584:	andeq	pc, r7, r8, lsl r7	; <UNPREDICTABLE>
   19588:	andeq	fp, r4, r8, lsl #23
   1958c:	andeq	pc, r4, r4, asr #3
   19590:	andeq	ip, r4, r4, ror r4
   19594:	andeq	ip, r4, r4, lsl #9
   19598:	andeq	ip, r4, r0, ror #8
   1959c:	andeq	pc, r7, r4, asr #12
   195a0:	andeq	fp, r4, r0, lsr #21
   195a4:	andeq	pc, r4, r8, lsr r1	; <UNPREDICTABLE>
   195a8:	andeq	ip, r4, ip, lsl #7
   195ac:	andeq	fp, r4, r8, lsl sl
   195b0:	andeq	fp, r4, r8, lsl #20
   195b4:	andeq	pc, r4, r8, lsr r1	; <UNPREDICTABLE>
   195b8:	muleq	r4, ip, r1
   195bc:	ldrdeq	pc, [r7], -r0
   195c0:	andeq	pc, r4, ip, lsr #3
   195c4:	andeq	ip, r4, r8, lsr r2
   195c8:	andeq	r0, r0, r7, asr r1
   195cc:	andeq	fp, r4, r4, lsl #17
   195d0:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   195d4:	andeq	ip, r4, r8, ror #2
   195d8:	andeq	r0, r0, lr, lsr r1
   195dc:	andeq	ip, r4, r8, ror r1
   195e0:	andeq	ip, r4, r4, asr r1
   195e4:	andeq	pc, r7, r4, lsr #6
   195e8:	muleq	r4, ip, r7
   195ec:	ldrdeq	lr, [r4], -ip
   195f0:	muleq	r4, r0, r0
   195f4:	andeq	pc, r7, r0, ror r2	; <UNPREDICTABLE>
   195f8:	andeq	fp, r4, r4, ror #13
   195fc:	andeq	lr, r4, r8, asr #29
   19600:	ldrdeq	fp, [r4], -r8
   19604:	andeq	r0, r0, fp, asr #2
   19608:	andeq	pc, r7, r8, ror #3
   1960c:	andeq	lr, r4, r4, ror #27
   19610:	andeq	lr, r4, r0, lsr #27
   19614:	andeq	pc, r7, r4, lsl #3
   19618:	andeq	fp, r4, r0, ror #11
   1961c:	muleq	r4, ip, sp
   19620:	ldrdeq	fp, [r4], -r4
   19624:	andeq	r0, r0, r9, asr #2
   19628:	andeq	fp, r4, r8, ror #29
   1962c:	andeq	fp, r4, r4, asr #29
   19630:	andeq	pc, r7, r8, lsr #1
   19634:	andeq	fp, r4, r4, lsl #10
   19638:	andeq	lr, r4, r0, lsl ip
   1963c:	strdeq	fp, [r4], -r8
   19640:	andeq	pc, r7, r8, lsl r0	; <UNPREDICTABLE>
   19644:	andeq	fp, r4, r0, lsl #9
   19648:	andeq	lr, r4, r0, asr fp
   1964c:	andeq	fp, r4, r0, ror sp
   19650:	andeq	r0, r0, sl, lsr r1
   19654:	andeq	fp, r4, r0, lsl #27
   19658:	andeq	fp, r4, ip, asr sp
   1965c:	andeq	fp, r4, r0, lsr sp
   19660:	andeq	fp, r4, ip, lsl #26
   19664:	andeq	lr, r7, r0, lsl #30
   19668:	andeq	fp, r4, r0, ror r3
   1966c:	andeq	lr, r4, r8, lsl #23
   19670:	andeq	fp, r4, r4, ror #24
   19674:	andeq	r0, r0, r2, asr r1
   19678:	andeq	fp, r4, r0, lsr #6
   1967c:	andeq	lr, r4, r0, ror sl
   19680:	andeq	lr, r4, r8, lsl #21
   19684:	strdeq	fp, [r4], -r0
   19688:	andeq	lr, r4, r0, asr #20
   1968c:	andeq	r2, r5, r4, lsl r0
   19690:	andeq	fp, r4, r4, lsl ip
   19694:	muleq	r4, ip, r2
   19698:	andeq	lr, r4, r0, asr #8
   1969c:	andeq	r1, r5, ip, lsl #24
   196a0:	andeq	lr, r4, r8, asr #32
   196a4:	andeq	lr, r4, r0, lsr #16
   196a8:	andeq	fp, r4, r4, lsl r2
   196ac:	andeq	fp, r4, ip, lsl #22
   196b0:	muleq	r0, r5, r1
   196b4:	andeq	fp, r4, r0, lsr #22
   196b8:	andeq	fp, r4, r8, lsr #3
   196bc:	andeq	ip, r4, r4, asr #6
   196c0:			; <UNDEFINED> instruction: 0x0004babc
   196c4:	andeq	r0, r0, sl, lsl #3
   196c8:	ldrdeq	fp, [r4], -r0
   196cc:	andeq	fp, r4, ip, lsr #21
   196d0:	andeq	fp, r4, r4, ror sl
   196d4:	andeq	fp, r4, r4, asr #20
   196d8:	andeq	lr, r7, r8, asr r9
   196dc:	andeq	sl, r4, ip, asr #27
   196e0:	muleq	r4, ip, r2
   196e4:	andeq	fp, r4, r0, ror r9
   196e8:	strdeq	r0, [r0], -r6
   196ec:	andeq	fp, r4, r0, asr #13
   196f0:	muleq	r4, r4, r6
   196f4:	ldrdeq	lr, [r4], -r8
   196f8:	andeq	lr, r7, ip, lsr #16
   196fc:	andeq	sl, r4, r4, lsr #25
   19700:	andeq	lr, r4, r0, lsr #2
   19704:	andeq	fp, r4, r4, asr r8
   19708:	andeq	r0, r0, r8, lsl #14
   1970c:	rscseq	pc, sl, #128	; 0x80
   19710:	andeq	lr, r7, r4, lsl #14
   19714:	andeq	sl, r4, r8, ror fp
   19718:	strdeq	sp, [r4], -r4
   1971c:	andeq	fp, r4, r0, lsr #14
   19720:	andeq	lr, r7, r4, lsl #13
   19724:	strdeq	sl, [r4], -r4
   19728:	andeq	sp, r4, r0, lsr #30
   1972c:			; <UNDEFINED> instruction: 0x0004b6bc
   19730:	andeq	r0, r0, sl, asr #5
   19734:	andeq	fp, r4, r4, lsl #8
   19738:	andeq	lr, r7, r0, asr #11
   1973c:	andeq	sl, r4, r8, lsr #20
   19740:			; <UNDEFINED> instruction: 0x0004deb0
   19744:	ldrdeq	fp, [r4], -ip
   19748:	andeq	lr, r7, r8, asr #10
   1974c:			; <UNDEFINED> instruction: 0x0004a9b8
   19750:	andeq	sp, r4, r4, ror #27
   19754:	andeq	fp, r4, r0, lsl #11
   19758:	andeq	r0, r0, sl, ror #5
   1975c:	andeq	r0, r0, r4, lsl #8
   19760:	ldrdeq	fp, [r4], -r0
   19764:	andeq	fp, r4, ip, lsr #5
   19768:	andeq	sl, r4, r8, lsr #18
   1976c:	andeq	sp, r4, r0, asr #25
   19770:	ldrdeq	sp, [r4], -r0
   19774:	andeq	r0, r0, r5, asr #5
   19778:	andeq	fp, r4, r0, asr r2
   1977c:	ldrdeq	sl, [r4], -r8
   19780:	andeq	sp, r4, r0, lsl #21
   19784:	andeq	r1, r5, ip, asr #4
   19788:	andeq	fp, r4, r0, lsl #4
   1978c:	add	r3, r6, #56	; 0x38
   19790:	add	sl, sp, #556	; 0x22c
   19794:	mov	r8, r3
   19798:	ldr	r2, [r6, #12]
   1979c:	mov	r1, #16
   197a0:	mov	r0, sl
   197a4:	str	r3, [sp, #80]	; 0x50
   197a8:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   197ac:	mov	r2, sl
   197b0:	mov	r0, r8
   197b4:	ldr	r1, [sp, #176]	; 0xb0
   197b8:	bl	34d6c <blkid_probe_get_size@plt+0x2d854>
   197bc:	subs	r2, r0, #0
   197c0:	bge	19a10 <blkid_probe_get_size@plt+0x124f8>
   197c4:	cmn	r2, #17
   197c8:	beq	198b8 <blkid_probe_get_size@plt+0x123a0>
   197cc:	ldr	r3, [sp, #56]	; 0x38
   197d0:	cmp	r3, #0
   197d4:	mov	r3, #0
   197d8:	str	r3, [sp, #192]	; 0xc0
   197dc:	beq	198ac <blkid_probe_get_size@plt+0x12394>
   197e0:	ldr	r1, [pc, #-272]	; 196d8 <blkid_probe_get_size@plt+0x121c0>
   197e4:	add	r1, pc, r1
   197e8:	ldr	r1, [r1, #4]
   197ec:	cmp	r1, #2
   197f0:	movle	r0, r3
   197f4:	movle	r1, r0
   197f8:	bgt	19880 <blkid_probe_get_size@plt+0x12368>
   197fc:	ldr	r3, [pc, #-296]	; 196dc <blkid_probe_get_size@plt+0x121c4>
   19800:	ldr	lr, [pc, #-296]	; 196e0 <blkid_probe_get_size@plt+0x121c8>
   19804:	add	r3, pc, r3
   19808:	add	r3, r3, #1488	; 0x5d0
   1980c:	add	lr, pc, lr
   19810:	str	r1, [sp, #4]
   19814:	str	r3, [sp]
   19818:	mov	r1, r2
   1981c:	mov	r3, lr
   19820:	mov	r2, #0
   19824:	str	sl, [sp, #32]
   19828:	strd	r2, [sp, #16]
   1982c:	ldr	sl, [sp, #172]	; 0xac
   19830:	ldr	ip, [sp, #176]	; 0xb0
   19834:	str	r2, [sp, #12]
   19838:	ldr	r2, [pc, #-348]	; 196e4 <blkid_probe_get_size@plt+0x121cc>
   1983c:	str	r0, [sp, #8]
   19840:	str	sl, [sp, #28]
   19844:	str	ip, [sp, #24]
   19848:	ldr	r3, [pc, #-360]	; 196e8 <blkid_probe_get_size@plt+0x121d0>
   1984c:	add	r2, pc, r2
   19850:	mov	r0, #3
   19854:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   19858:	b	16e64 <blkid_probe_get_size@plt+0xf94c>
   1985c:	mov	r1, r7
   19860:	ldr	r0, [sp, #64]	; 0x40
   19864:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19868:	ldr	r3, [sp, #192]	; 0xc0
   1986c:	cmp	r3, #0
   19870:	beq	183e8 <blkid_probe_get_size@plt+0x10ed0>
   19874:	ldr	r1, [pc, #-400]	; 196ec <blkid_probe_get_size@plt+0x121d4>
   19878:	add	r1, pc, r1
   1987c:	b	183ec <blkid_probe_get_size@plt+0x10ed4>
   19880:	mov	r1, r7
   19884:	ldr	r0, [sp, #56]	; 0x38
   19888:	str	r2, [sp, #68]	; 0x44
   1988c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19890:	ldr	r0, [sp, #192]	; 0xc0
   19894:	ldr	r2, [sp, #68]	; 0x44
   19898:	cmp	r0, #0
   1989c:	moveq	r1, r0
   198a0:	ldrne	r1, [pc, #-440]	; 196f0 <blkid_probe_get_size@plt+0x121d8>
   198a4:	addne	r1, pc, r1
   198a8:	b	197fc <blkid_probe_get_size@plt+0x122e4>
   198ac:	ldr	r0, [sp, #56]	; 0x38
   198b0:	mov	r1, r0
   198b4:	b	197fc <blkid_probe_get_size@plt+0x122e4>
   198b8:	ldr	r2, [pc, #-460]	; 196f4 <blkid_probe_get_size@plt+0x121dc>
   198bc:	ldr	r1, [sp, #176]	; 0xb0
   198c0:	mov	r3, #16
   198c4:	add	r2, pc, r2
   198c8:	str	r1, [sp, #4]
   198cc:	str	r2, [sp]
   198d0:	mov	r1, r3
   198d4:	mov	r2, #1
   198d8:	mov	r0, sl
   198dc:	bl	7260 <__snprintf_chk@plt>
   198e0:	mov	r2, sl
   198e4:	ldr	r1, [sp, #176]	; 0xb0
   198e8:	ldr	r0, [sp, #80]	; 0x50
   198ec:	bl	34d6c <blkid_probe_get_size@plt+0x2d854>
   198f0:	subs	r2, r0, #0
   198f4:	blt	197cc <blkid_probe_get_size@plt+0x122b4>
   198f8:	ldr	r3, [sp, #56]	; 0x38
   198fc:	cmp	r3, #0
   19900:	mov	r3, #0
   19904:	str	r3, [sp, #192]	; 0xc0
   19908:	beq	19c94 <blkid_probe_get_size@plt+0x1277c>
   1990c:	ldr	r2, [pc, #-540]	; 196f8 <blkid_probe_get_size@plt+0x121e0>
   19910:	add	r2, pc, r2
   19914:	ldr	r2, [r2, #4]
   19918:	cmp	r2, #6
   1991c:	bgt	19c70 <blkid_probe_get_size@plt+0x12758>
   19920:	mov	r1, r3
   19924:	ldr	r2, [pc, #-560]	; 196fc <blkid_probe_get_size@plt+0x121e4>
   19928:	ldr	r0, [pc, #-560]	; 19700 <blkid_probe_get_size@plt+0x121e8>
   1992c:	add	r2, pc, r2
   19930:	add	r2, r2, #1488	; 0x5d0
   19934:	ldr	lr, [sp, #172]	; 0xac
   19938:	ldr	ip, [sp, #176]	; 0xb0
   1993c:	str	r2, [sp]
   19940:	ldr	r2, [pc, #-580]	; 19704 <blkid_probe_get_size@plt+0x121ec>
   19944:	stmib	sp, {r1, r3}
   19948:	add	r0, pc, r0
   1994c:	mov	r3, #0
   19950:	mov	r1, r3
   19954:	str	lr, [sp, #28]
   19958:	str	ip, [sp, #24]
   1995c:	str	r0, [sp, #20]
   19960:	str	r3, [sp, #16]
   19964:	str	r3, [sp, #12]
   19968:	add	r2, pc, r2
   1996c:	mov	r3, #732	; 0x2dc
   19970:	str	sl, [sp, #32]
   19974:	mov	r0, #7
   19978:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1997c:	ldr	r2, [r6, #12]
   19980:	mov	r1, #16
   19984:	mov	r0, sl
   19988:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   1998c:	ldr	r3, [pc, #-652]	; 19708 <blkid_probe_get_size@plt+0x121f0>
   19990:	str	fp, [sp, #68]	; 0x44
   19994:	ldr	r9, [sp, #52]	; 0x34
   19998:	ldr	fp, [sp, #76]	; 0x4c
   1999c:	mov	r8, r5
   199a0:	mov	r5, r4
   199a4:	mov	r4, r3
   199a8:	mov	r2, #0
   199ac:	str	r2, [sp, #84]	; 0x54
   199b0:	ldr	r3, [sp, #84]	; 0x54
   199b4:	mov	r1, #0
   199b8:	str	r3, [sp, #192]	; 0xc0
   199bc:	ldr	r3, [pc, #-696]	; 1970c <blkid_probe_get_size@plt+0x121f4>
   199c0:	mov	r0, r7
   199c4:	str	r3, [sp, #196]	; 0xc4
   199c8:	bl	6c60 <nanosleep@plt>
   199cc:	mov	r2, sl
   199d0:	ldr	r1, [sp, #176]	; 0xb0
   199d4:	ldr	r0, [sp, #80]	; 0x50
   199d8:	bl	34d6c <blkid_probe_get_size@plt+0x2d854>
   199dc:	cmp	r0, #0
   199e0:	bge	19b3c <blkid_probe_get_size@plt+0x12624>
   199e4:	cmn	r0, #17
   199e8:	bne	199f4 <blkid_probe_get_size@plt+0x124dc>
   199ec:	subs	r4, r4, #1
   199f0:	bne	199b0 <blkid_probe_get_size@plt+0x12498>
   199f4:	mov	r4, r5
   199f8:	str	fp, [sp, #76]	; 0x4c
   199fc:	str	r9, [sp, #52]	; 0x34
   19a00:	mov	r2, r0
   19a04:	mov	r5, r8
   19a08:	ldr	fp, [sp, #68]	; 0x44
   19a0c:	b	197cc <blkid_probe_get_size@plt+0x122b4>
   19a10:	ldr	r1, [r6, #12]
   19a14:	ldr	r0, [sp, #56]	; 0x38
   19a18:	bl	8400 <blkid_probe_get_size@plt+0xee8>
   19a1c:	subs	r1, r0, #0
   19a20:	blt	19ab4 <blkid_probe_get_size@plt+0x1259c>
   19a24:	ldr	r3, [sp, #56]	; 0x38
   19a28:	str	r9, [sp, #192]	; 0xc0
   19a2c:	cmp	r3, #0
   19a30:	beq	19a48 <blkid_probe_get_size@plt+0x12530>
   19a34:	ldr	r3, [pc, #-812]	; 19710 <blkid_probe_get_size@plt+0x121f8>
   19a38:	add	r3, pc, r3
   19a3c:	ldr	r3, [r3, #4]
   19a40:	cmp	r3, #6
   19a44:	bgt	19b18 <blkid_probe_get_size@plt+0x12600>
   19a48:	mov	r3, #0
   19a4c:	mov	r1, r3
   19a50:	ldr	r2, [pc, #-836]	; 19714 <blkid_probe_get_size@plt+0x121fc>
   19a54:	str	r3, [sp, #8]
   19a58:	add	r2, pc, r2
   19a5c:	add	r2, r2, #1488	; 0x5d0
   19a60:	ldr	r3, [pc, #-848]	; 19718 <blkid_probe_get_size@plt+0x12200>
   19a64:	ldr	r0, [sp, #176]	; 0xb0
   19a68:	ldr	ip, [sp, #172]	; 0xac
   19a6c:	str	r2, [sp]
   19a70:	ldr	r2, [pc, #-860]	; 1971c <blkid_probe_get_size@plt+0x12204>
   19a74:	add	r3, pc, r3
   19a78:	str	r1, [sp, #4]
   19a7c:	mov	r1, #0
   19a80:	str	r0, [sp, #24]
   19a84:	str	r3, [sp, #20]
   19a88:	str	sl, [sp, #32]
   19a8c:	mov	r3, #716	; 0x2cc
   19a90:	str	ip, [sp, #28]
   19a94:	str	r1, [sp, #16]
   19a98:	str	r1, [sp, #12]
   19a9c:	add	r2, pc, r2
   19aa0:	mov	r0, #7
   19aa4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   19aa8:	ldr	r3, [r6]
   19aac:	str	r3, [sp, #56]	; 0x38
   19ab0:	b	16e6c <blkid_probe_get_size@plt+0xf954>
   19ab4:	ldr	r3, [pc, #-924]	; 19720 <blkid_probe_get_size@plt+0x12208>
   19ab8:	add	r3, pc, r3
   19abc:	ldr	r3, [r3, #4]
   19ac0:	cmp	r3, #3
   19ac4:	ble	16e64 <blkid_probe_get_size@plt+0xf94c>
   19ac8:	ldr	r2, [sp, #176]	; 0xb0
   19acc:	ldr	r3, [pc, #-944]	; 19724 <blkid_probe_get_size@plt+0x1220c>
   19ad0:	ldr	r0, [pc, #-944]	; 19728 <blkid_probe_get_size@plt+0x12210>
   19ad4:	ldr	ip, [sp, #172]	; 0xac
   19ad8:	str	r2, [sp, #8]
   19adc:	add	r3, pc, r3
   19ae0:	ldr	r2, [pc, #-956]	; 1972c <blkid_probe_get_size@plt+0x12214>
   19ae4:	add	r3, r3, #1488	; 0x5d0
   19ae8:	add	r0, pc, r0
   19aec:	str	r3, [sp]
   19af0:	str	r0, [sp, #4]
   19af4:	ldr	r3, [pc, #-972]	; 19730 <blkid_probe_get_size@plt+0x12218>
   19af8:	str	sl, [sp, #16]
   19afc:	str	ip, [sp, #12]
   19b00:	add	r2, pc, r2
   19b04:	ldr	r0, [pc, #-944]	; 1975c <blkid_probe_get_size@plt+0x12244>
   19b08:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   19b0c:	ldr	r3, [r6]
   19b10:	str	r3, [sp, #56]	; 0x38
   19b14:	b	16e6c <blkid_probe_get_size@plt+0xf954>
   19b18:	mov	r1, r7
   19b1c:	ldr	r0, [sp, #56]	; 0x38
   19b20:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19b24:	ldr	r3, [sp, #192]	; 0xc0
   19b28:	cmp	r3, #0
   19b2c:	moveq	r1, r3
   19b30:	ldrne	r1, [pc, #-1028]	; 19734 <blkid_probe_get_size@plt+0x1221c>
   19b34:	addne	r1, pc, r1
   19b38:	b	19a50 <blkid_probe_get_size@plt+0x12538>
   19b3c:	ldr	r1, [r6, #12]
   19b40:	ldr	r0, [sp, #56]	; 0x38
   19b44:	str	fp, [sp, #76]	; 0x4c
   19b48:	str	r9, [sp, #52]	; 0x34
   19b4c:	ldr	fp, [sp, #68]	; 0x44
   19b50:	bl	8400 <blkid_probe_get_size@plt+0xee8>
   19b54:	mov	r4, r5
   19b58:	mov	r5, r8
   19b5c:	subs	r1, r0, #0
   19b60:	blt	19bf0 <blkid_probe_get_size@plt+0x126d8>
   19b64:	ldr	r3, [sp, #56]	; 0x38
   19b68:	cmp	r3, #0
   19b6c:	ldr	r3, [sp, #84]	; 0x54
   19b70:	str	r3, [sp, #184]	; 0xb8
   19b74:	beq	19b8c <blkid_probe_get_size@plt+0x12674>
   19b78:	ldr	r3, [pc, #-1096]	; 19738 <blkid_probe_get_size@plt+0x12220>
   19b7c:	add	r3, pc, r3
   19b80:	ldr	r3, [r3, #4]
   19b84:	cmp	r3, #6
   19b88:	bgt	19c4c <blkid_probe_get_size@plt+0x12734>
   19b8c:	mov	r1, #0
   19b90:	mov	r2, r1
   19b94:	ldr	r3, [pc, #-1120]	; 1973c <blkid_probe_get_size@plt+0x12224>
   19b98:	ldr	lr, [pc, #-1120]	; 19740 <blkid_probe_get_size@plt+0x12228>
   19b9c:	ldr	r0, [sp, #176]	; 0xb0
   19ba0:	ldr	ip, [sp, #172]	; 0xac
   19ba4:	str	r2, [sp, #4]
   19ba8:	add	r3, pc, r3
   19bac:	ldr	r2, [pc, #-1136]	; 19744 <blkid_probe_get_size@plt+0x1222c>
   19bb0:	add	r3, r3, #1488	; 0x5d0
   19bb4:	str	r1, [sp, #8]
   19bb8:	add	lr, pc, lr
   19bbc:	mov	r1, #0
   19bc0:	str	r3, [sp]
   19bc4:	str	r0, [sp, #24]
   19bc8:	str	sl, [sp, #32]
   19bcc:	str	ip, [sp, #28]
   19bd0:	str	lr, [sp, #20]
   19bd4:	str	r1, [sp, #16]
   19bd8:	str	r1, [sp, #12]
   19bdc:	mov	r3, #748	; 0x2ec
   19be0:	add	r2, pc, r2
   19be4:	mov	r0, #7
   19be8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   19bec:	b	16e64 <blkid_probe_get_size@plt+0xf94c>
   19bf0:	ldr	r3, [pc, #-1200]	; 19748 <blkid_probe_get_size@plt+0x12230>
   19bf4:	add	r3, pc, r3
   19bf8:	ldr	r3, [r3, #4]
   19bfc:	cmp	r3, #3
   19c00:	ble	16e64 <blkid_probe_get_size@plt+0xf94c>
   19c04:	ldr	r2, [sp, #176]	; 0xb0
   19c08:	ldr	r3, [pc, #-1220]	; 1974c <blkid_probe_get_size@plt+0x12234>
   19c0c:	ldr	r0, [pc, #-1220]	; 19750 <blkid_probe_get_size@plt+0x12238>
   19c10:	ldr	ip, [sp, #172]	; 0xac
   19c14:	str	r2, [sp, #8]
   19c18:	add	r3, pc, r3
   19c1c:	ldr	r2, [pc, #-1232]	; 19754 <blkid_probe_get_size@plt+0x1223c>
   19c20:	add	r3, r3, #1488	; 0x5d0
   19c24:	add	r0, pc, r0
   19c28:	str	r3, [sp]
   19c2c:	str	r0, [sp, #4]
   19c30:	str	sl, [sp, #16]
   19c34:	str	ip, [sp, #12]
   19c38:	ldr	r3, [pc, #-1256]	; 19758 <blkid_probe_get_size@plt+0x12240>
   19c3c:	add	r2, pc, r2
   19c40:	ldr	r0, [pc, #-1260]	; 1975c <blkid_probe_get_size@plt+0x12244>
   19c44:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   19c48:	b	16e64 <blkid_probe_get_size@plt+0xf94c>
   19c4c:	sub	r1, r7, #8
   19c50:	ldr	r0, [sp, #56]	; 0x38
   19c54:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19c58:	ldr	r1, [sp, #184]	; 0xb8
   19c5c:	cmp	r1, #0
   19c60:	moveq	r2, r1
   19c64:	ldrne	r2, [pc, #-1292]	; 19760 <blkid_probe_get_size@plt+0x12248>
   19c68:	addne	r2, pc, r2
   19c6c:	b	19b94 <blkid_probe_get_size@plt+0x1267c>
   19c70:	mov	r1, r7
   19c74:	ldr	r0, [sp, #56]	; 0x38
   19c78:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19c7c:	ldr	r3, [sp, #192]	; 0xc0
   19c80:	cmp	r3, #0
   19c84:	beq	19920 <blkid_probe_get_size@plt+0x12408>
   19c88:	ldr	r1, [pc, #-1324]	; 19764 <blkid_probe_get_size@plt+0x1224c>
   19c8c:	add	r1, pc, r1
   19c90:	b	19924 <blkid_probe_get_size@plt+0x1240c>
   19c94:	ldr	r1, [sp, #56]	; 0x38
   19c98:	mov	r3, r1
   19c9c:	b	19924 <blkid_probe_get_size@plt+0x1240c>
   19ca0:	ldr	r2, [pc, #-1344]	; 19768 <blkid_probe_get_size@plt+0x12250>
   19ca4:	ldr	r1, [pc, #-1344]	; 1976c <blkid_probe_get_size@plt+0x12254>
   19ca8:	add	r2, pc, r2
   19cac:	add	r2, r2, #1456	; 0x5b0
   19cb0:	add	r2, r2, #8
   19cb4:	str	r2, [sp]
   19cb8:	ldr	r2, [pc, #-1360]	; 19770 <blkid_probe_get_size@plt+0x12258>
   19cbc:	ldr	r3, [pc, #-1360]	; 19774 <blkid_probe_get_size@plt+0x1225c>
   19cc0:	add	r2, pc, r2
   19cc4:	add	r1, pc, r1
   19cc8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   19ccc:	ldr	r0, [sp, #56]	; 0x38
   19cd0:	mov	r1, r7
   19cd4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19cd8:	ldr	r3, [sp, #192]	; 0xc0
   19cdc:	cmp	r3, #0
   19ce0:	beq	1837c <blkid_probe_get_size@plt+0x10e64>
   19ce4:	ldr	r1, [pc, #-1396]	; 19778 <blkid_probe_get_size@plt+0x12260>
   19ce8:	add	r1, pc, r1
   19cec:	b	18380 <blkid_probe_get_size@plt+0x10e68>
   19cf0:	ldr	r3, [pc, #-1404]	; 1977c <blkid_probe_get_size@plt+0x12264>
   19cf4:	ldr	r2, [pc, #-1404]	; 19780 <blkid_probe_get_size@plt+0x12268>
   19cf8:	add	r3, pc, r3
   19cfc:	ldr	r1, [pc, #-1408]	; 19784 <blkid_probe_get_size@plt+0x1226c>
   19d00:	add	r3, r3, #1600	; 0x640
   19d04:	str	r3, [sp]
   19d08:	ldr	r0, [sp, #56]	; 0x38
   19d0c:	mov	r3, #152	; 0x98
   19d10:	add	r2, pc, r2
   19d14:	add	r1, pc, r1
   19d18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   19d1c:	ldr	r0, [sp, #56]	; 0x38
   19d20:	mov	r1, r7
   19d24:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   19d28:	ldr	r3, [sp, #192]	; 0xc0
   19d2c:	cmp	r3, #0
   19d30:	beq	185c8 <blkid_probe_get_size@plt+0x110b0>
   19d34:	ldr	r1, [pc, #-1460]	; 19788 <blkid_probe_get_size@plt+0x12270>
   19d38:	add	r1, pc, r1
   19d3c:	b	185cc <blkid_probe_get_size@plt+0x110b4>
   19d40:	push	{r4, lr}
   19d44:	subs	r4, r0, #0
   19d48:	sub	sp, sp, #8
   19d4c:	beq	19d7c <blkid_probe_get_size@plt+0x12864>
   19d50:	ldr	r3, [r4]
   19d54:	cmp	r3, #0
   19d58:	beq	19d88 <blkid_probe_get_size@plt+0x12870>
   19d5c:	sub	r3, r3, #1
   19d60:	cmp	r3, #0
   19d64:	str	r3, [r4]
   19d68:	bne	19d7c <blkid_probe_get_size@plt+0x12864>
   19d6c:	ldr	r0, [r4, #4]
   19d70:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   19d74:	mov	r0, r4
   19d78:	bl	69f0 <free@plt>
   19d7c:	mov	r0, #0
   19d80:	add	sp, sp, #8
   19d84:	pop	{r4, pc}
   19d88:	ldr	r2, [pc, #36]	; 19db4 <blkid_probe_get_size@plt+0x1289c>
   19d8c:	ldr	r1, [pc, #36]	; 19db8 <blkid_probe_get_size@plt+0x128a0>
   19d90:	add	r2, pc, r2
   19d94:	add	r2, r2, #1744	; 0x6d0
   19d98:	str	r2, [sp]
   19d9c:	ldr	r2, [pc, #24]	; 19dbc <blkid_probe_get_size@plt+0x128a4>
   19da0:	mov	r3, #149	; 0x95
   19da4:	add	r2, pc, r2
   19da8:	add	r1, pc, r1
   19dac:	mov	r0, #1
   19db0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   19db4:	andeq	sl, r4, r0, asr #16
   19db8:	andeq	lr, r4, r8, lsr #3
   19dbc:	muleq	r4, r4, r1
   19dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19dc4:	sub	sp, sp, #108	; 0x6c
   19dc8:	ldr	r4, [pc, #984]	; 1a1a8 <blkid_probe_get_size@plt+0x12c90>
   19dcc:	ldr	ip, [pc, #984]	; 1a1ac <blkid_probe_get_size@plt+0x12c94>
   19dd0:	add	r4, pc, r4
   19dd4:	add	r3, pc, #964	; 0x3c4
   19dd8:	ldrd	r2, [r3]
   19ddc:	ldr	r5, [r4, ip]
   19de0:	mov	r8, #0
   19de4:	strd	r2, [sp, #72]	; 0x48
   19de8:	ldr	r3, [r5]
   19dec:	mov	r7, r0
   19df0:	mov	r6, r1
   19df4:	str	r3, [sp, #100]	; 0x64
   19df8:	str	r8, [sp, #60]	; 0x3c
   19dfc:	str	r8, [sp, #56]	; 0x38
   19e00:	str	r8, [sp, #52]	; 0x34
   19e04:	bl	3bec8 <blkid_probe_get_size@plt+0x349b0>
   19e08:	cmp	r0, r8
   19e0c:	ble	19eb4 <blkid_probe_get_size@plt+0x1299c>
   19e10:	ldr	r3, [pc, #920]	; 1a1b0 <blkid_probe_get_size@plt+0x12c98>
   19e14:	add	r3, pc, r3
   19e18:	ldr	r3, [r3, #4]
   19e1c:	cmp	r3, #5
   19e20:	movle	r9, r8
   19e24:	bgt	19e78 <blkid_probe_get_size@plt+0x12960>
   19e28:	ldr	r6, [sp, #52]	; 0x34
   19e2c:	cmp	r6, #0
   19e30:	beq	19e3c <blkid_probe_get_size@plt+0x12924>
   19e34:	mov	r0, r6
   19e38:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   19e3c:	ldr	r0, [sp, #56]	; 0x38
   19e40:	cmp	r0, #0
   19e44:	beq	19e4c <blkid_probe_get_size@plt+0x12934>
   19e48:	bl	27edc <blkid_probe_get_size@plt+0x209c4>
   19e4c:	ldr	r0, [sp, #60]	; 0x3c
   19e50:	cmp	r0, #0
   19e54:	beq	19e5c <blkid_probe_get_size@plt+0x12944>
   19e58:	bl	29ddc <blkid_probe_get_size@plt+0x228c4>
   19e5c:	ldr	r2, [sp, #100]	; 0x64
   19e60:	ldr	r3, [r5]
   19e64:	mov	r0, r9
   19e68:	cmp	r2, r3
   19e6c:	bne	1b230 <blkid_probe_get_size@plt+0x13d18>
   19e70:	add	sp, sp, #108	; 0x6c
   19e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e78:	ldr	r2, [pc, #820]	; 1a1b4 <blkid_probe_get_size@plt+0x12c9c>
   19e7c:	ldr	r3, [pc, #820]	; 1a1b8 <blkid_probe_get_size@plt+0x12ca0>
   19e80:	add	r2, pc, r2
   19e84:	str	r2, [sp, #4]
   19e88:	add	r3, pc, r3
   19e8c:	ldr	r2, [pc, #808]	; 1a1bc <blkid_probe_get_size@plt+0x12ca4>
   19e90:	add	r3, r3, #1760	; 0x6e0
   19e94:	str	r3, [sp]
   19e98:	add	r2, pc, r2
   19e9c:	mov	r3, #170	; 0xaa
   19ea0:	mov	r1, r8
   19ea4:	ldr	r0, [pc, #788]	; 1a1c0 <blkid_probe_get_size@plt+0x12ca8>
   19ea8:	mov	r9, r8
   19eac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   19eb0:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   19eb4:	add	r0, sp, #60	; 0x3c
   19eb8:	bl	29f14 <blkid_probe_get_size@plt+0x229fc>
   19ebc:	subs	r9, r0, #0
   19ec0:	blt	19e28 <blkid_probe_get_size@plt+0x12910>
   19ec4:	ldr	r0, [sp, #60]	; 0x3c
   19ec8:	cmp	r0, #0
   19ecc:	beq	1a894 <blkid_probe_get_size@plt+0x1337c>
   19ed0:	ldr	r3, [pc, #748]	; 1a1c4 <blkid_probe_get_size@plt+0x12cac>
   19ed4:	ldr	r9, [pc, #748]	; 1a1c8 <blkid_probe_get_size@plt+0x12cb0>
   19ed8:	add	r3, pc, r3
   19edc:	add	r3, r3, #68	; 0x44
   19ee0:	ldr	r2, [pc, #740]	; 1a1cc <blkid_probe_get_size@plt+0x12cb4>
   19ee4:	ldr	fp, [pc, #740]	; 1a1d0 <blkid_probe_get_size@plt+0x12cb8>
   19ee8:	add	r9, pc, r9
   19eec:	str	r3, [sp, #32]
   19ef0:	ldr	r3, [pc, #732]	; 1a1d4 <blkid_probe_get_size@plt+0x12cbc>
   19ef4:	add	r2, pc, r2
   19ef8:	add	r9, r9, #948	; 0x3b4
   19efc:	add	fp, pc, fp
   19f00:	mov	r1, #1
   19f04:	add	r2, r2, #1760	; 0x6e0
   19f08:	add	r3, pc, r3
   19f0c:	str	r8, [sp, #20]
   19f10:	strb	r8, [r0, #24]
   19f14:	str	r8, [sp, #24]
   19f18:	str	r8, [sp, #28]
   19f1c:	str	r2, [sp, #40]	; 0x28
   19f20:	strb	r1, [r0, #60]	; 0x3c
   19f24:	str	r3, [sp, #36]	; 0x24
   19f28:	str	r5, [sp, #16]
   19f2c:	mov	r8, #0
   19f30:	str	r8, [sp]
   19f34:	mov	r3, r9
   19f38:	mov	r2, fp
   19f3c:	mov	r1, r6
   19f40:	mov	r0, r7
   19f44:	bl	70a4 <getopt_long@plt>
   19f48:	cmp	r0, #0
   19f4c:	blt	1a9e8 <blkid_probe_get_size@plt+0x134d0>
   19f50:	cmp	r0, #104	; 0x68
   19f54:	beq	1a68c <blkid_probe_get_size@plt+0x13174>
   19f58:	ble	19fcc <blkid_probe_get_size@plt+0x12ab4>
   19f5c:	cmp	r0, #118	; 0x76
   19f60:	beq	1a5a4 <blkid_probe_get_size@plt+0x1308c>
   19f64:	bgt	1a048 <blkid_probe_get_size@plt+0x12b30>
   19f68:	cmp	r0, #112	; 0x70
   19f6c:	beq	1a4c4 <blkid_probe_get_size@plt+0x12fac>
   19f70:	ble	1a0f4 <blkid_probe_get_size@plt+0x12bdc>
   19f74:	cmp	r0, #115	; 0x73
   19f78:	beq	1a7c0 <blkid_probe_get_size@plt+0x132a8>
   19f7c:	cmp	r0, #116	; 0x74
   19f80:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   19f84:	ldr	r3, [pc, #700]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   19f88:	ldr	r1, [pc, #584]	; 1a1d8 <blkid_probe_get_size@plt+0x12cc0>
   19f8c:	ldr	r3, [r4, r3]
   19f90:	add	r1, pc, r1
   19f94:	ldr	r8, [r3]
   19f98:	mov	r0, r8
   19f9c:	bl	7314 <strcmp@plt>
   19fa0:	cmp	r0, #0
   19fa4:	beq	1a98c <blkid_probe_get_size@plt+0x13474>
   19fa8:	ldr	r1, [pc, #556]	; 1a1dc <blkid_probe_get_size@plt+0x12cc4>
   19fac:	mov	r0, r8
   19fb0:	add	r1, pc, r1
   19fb4:	bl	7314 <strcmp@plt>
   19fb8:	subs	sl, r0, #0
   19fbc:	bne	1b2dc <blkid_probe_get_size@plt+0x13dc4>
   19fc0:	mov	r3, #1
   19fc4:	str	r3, [sp, #28]
   19fc8:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   19fcc:	cmp	r0, #86	; 0x56
   19fd0:	beq	1a670 <blkid_probe_get_size@plt+0x13158>
   19fd4:	ble	1a0a8 <blkid_probe_get_size@plt+0x12b90>
   19fd8:	cmp	r0, #98	; 0x62
   19fdc:	beq	1a61c <blkid_probe_get_size@plt+0x13104>
   19fe0:	ble	1a410 <blkid_probe_get_size@plt+0x12ef8>
   19fe4:	cmp	r0, #99	; 0x63
   19fe8:	beq	1a6b8 <blkid_probe_get_size@plt+0x131a0>
   19fec:	cmp	r0, #103	; 0x67
   19ff0:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   19ff4:	ldr	r3, [pc, #588]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   19ff8:	ldr	r8, [sp, #60]	; 0x3c
   19ffc:	ldr	r5, [r4, r3]
   1a000:	cmp	r8, #0
   1a004:	ldr	sl, [r5]
   1a008:	beq	1abb4 <blkid_probe_get_size@plt+0x1369c>
   1a00c:	cmp	sl, #0
   1a010:	beq	1acac <blkid_probe_get_size@plt+0x13794>
   1a014:	mov	r1, #0
   1a018:	add	r0, r8, #52	; 0x34
   1a01c:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   1a020:	cmp	r0, #0
   1a024:	blt	1a8c4 <blkid_probe_get_size@plt+0x133ac>
   1a028:	mov	r1, sl
   1a02c:	ldr	r0, [r8, #52]	; 0x34
   1a030:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   1a034:	cmp	r0, #0
   1a038:	blt	1a8c4 <blkid_probe_get_size@plt+0x133ac>
   1a03c:	mov	sl, #0
   1a040:	strb	sl, [r8, #24]
   1a044:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a048:	cmp	r0, #121	; 0x79
   1a04c:	beq	1a5bc <blkid_probe_get_size@plt+0x130a4>
   1a050:	ble	1a184 <blkid_probe_get_size@plt+0x12c6c>
   1a054:	cmp	r0, #256	; 0x100
   1a058:	beq	1a740 <blkid_probe_get_size@plt+0x13228>
   1a05c:	ldr	r3, [pc, #832]	; 1a3a4 <blkid_probe_get_size@plt+0x12e8c>
   1a060:	cmp	r0, r3
   1a064:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   1a068:	ldr	r3, [pc, #472]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a06c:	ldr	r5, [r4, r3]
   1a070:	ldr	sl, [r5]
   1a074:	cmp	sl, #0
   1a078:	beq	1a094 <blkid_probe_get_size@plt+0x12b7c>
   1a07c:	add	r1, sp, #72	; 0x48
   1a080:	mov	r0, sl
   1a084:	bl	48fdc <blkid_probe_get_size@plt+0x41ac4>
   1a088:	subs	r1, r0, #0
   1a08c:	blt	1ab58 <blkid_probe_get_size@plt+0x13640>
   1a090:	mov	sl, #0
   1a094:	mov	r3, #1
   1a098:	str	r3, [sp, #20]
   1a09c:	mov	r0, sl
   1a0a0:	bl	69f0 <free@plt>
   1a0a4:	b	19f2c <blkid_probe_get_size@plt+0x12a14>
   1a0a8:	cmp	r0, #65	; 0x41
   1a0ac:	beq	1a114 <blkid_probe_get_size@plt+0x12bfc>
   1a0b0:	cmp	r0, #83	; 0x53
   1a0b4:	beq	1a814 <blkid_probe_get_size@plt+0x132fc>
   1a0b8:	cmp	r0, #63	; 0x3f
   1a0bc:	ldr	r5, [sp, #16]
   1a0c0:	beq	1a4b8 <blkid_probe_get_size@plt+0x12fa0>
   1a0c4:	ldr	r2, [pc, #276]	; 1a1e0 <blkid_probe_get_size@plt+0x12cc8>
   1a0c8:	ldr	r1, [pc, #276]	; 1a1e4 <blkid_probe_get_size@plt+0x12ccc>
   1a0cc:	add	r2, pc, r2
   1a0d0:	add	r2, r2, #1888	; 0x760
   1a0d4:	add	r2, r2, #4
   1a0d8:	str	r2, [sp]
   1a0dc:	ldr	r2, [pc, #260]	; 1a1e8 <blkid_probe_get_size@plt+0x12cd0>
   1a0e0:	ldr	r3, [pc, #260]	; 1a1ec <blkid_probe_get_size@plt+0x12cd4>
   1a0e4:	add	r2, pc, r2
   1a0e8:	add	r1, pc, r1
   1a0ec:	mov	r0, #1
   1a0f0:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   1a0f4:	cmp	r0, #110	; 0x6e
   1a0f8:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   1a0fc:	ldr	r3, [pc, #236]	; 1a1f0 <blkid_probe_get_size@plt+0x12cd8>
   1a100:	mov	r2, #1
   1a104:	add	r3, pc, r3
   1a108:	mov	sl, r8
   1a10c:	strb	r2, [r3, #1076]	; 0x434
   1a110:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a114:	ldr	r3, [pc, #300]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a118:	add	r2, sp, #64	; 0x40
   1a11c:	add	r1, sp, #68	; 0x44
   1a120:	ldr	r3, [r4, r3]
   1a124:	ldr	r0, [r3]
   1a128:	bl	a010 <blkid_probe_get_size@plt+0x2af8>
   1a12c:	subs	sl, r0, #0
   1a130:	beq	1b134 <blkid_probe_get_size@plt+0x13c1c>
   1a134:	mov	r3, r8
   1a138:	ldr	r2, [sp, #64]	; 0x40
   1a13c:	ldr	r1, [sp, #68]	; 0x44
   1a140:	ldr	r0, [sp, #60]	; 0x3c
   1a144:	bl	29b84 <blkid_probe_get_size@plt+0x2266c>
   1a148:	cmp	r0, #0
   1a14c:	bge	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a150:	ldr	r3, [pc, #156]	; 1a1f4 <blkid_probe_get_size@plt+0x12cdc>
   1a154:	mov	r1, r0
   1a158:	add	r3, pc, r3
   1a15c:	ldr	r5, [sp, #16]
   1a160:	ldr	r3, [r3, #4]
   1a164:	cmp	r3, #2
   1a168:	bgt	1b57c <blkid_probe_get_size@plt+0x14064>
   1a16c:	rsb	r9, r1, #0
   1a170:	uxtb	r9, r9
   1a174:	rsb	r9, r9, #0
   1a178:	mov	r0, sl
   1a17c:	bl	69f0 <free@plt>
   1a180:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1a184:	cmp	r0, #119	; 0x77
   1a188:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   1a18c:	mov	r3, #1
   1a190:	mov	sl, r8
   1a194:	str	r3, [sp, #24]
   1a198:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a19c:	nop			; (mov r0, r0)
   1a1a0:	subeq	r4, ip, r0, asr #22
   1a1a4:	andeq	r0, r0, r0
   1a1a8:	muleq	r7, r8, sp
   1a1ac:	andeq	r0, r0, ip, lsr r4
   1a1b0:	andeq	lr, r7, r8, lsr #6
   1a1b4:	andeq	fp, r4, r4, lsl #24
   1a1b8:	andeq	sl, r4, r8, asr #14
   1a1bc:	muleq	r4, r8, r5
   1a1c0:	andeq	r0, r0, r6, lsl #8
   1a1c4:	andeq	lr, r7, r8, lsr #2
   1a1c8:	andeq	pc, r6, r8, lsr #2
   1a1cc:	ldrdeq	sl, [r4], -ip
   1a1d0:	andeq	lr, r4, r8, lsr #16
   1a1d4:	andeq	lr, r4, r8, asr r0
   1a1d8:	andeq	lr, r5, r4, asr #6
   1a1dc:			; <UNDEFINED> instruction: 0x0004dfb8
   1a1e0:	andeq	sl, r4, r4, lsl #10
   1a1e4:	andeq	fp, r4, r4, asr #9
   1a1e8:	andeq	fp, r4, ip, asr #6
   1a1ec:	andeq	r0, r0, sl, lsr #2
   1a1f0:	andeq	lr, r7, r0, ror #1
   1a1f4:	andeq	sp, r7, r4, ror #31
   1a1f8:	andeq	sp, r7, r0, ror #25
   1a1fc:	andeq	sp, r4, r0, lsl #23
   1a200:	andeq	sl, r4, r8, asr #2
   1a204:	andeq	sl, r4, ip, lsl #31
   1a208:	strdeq	sp, [r7], -r0
   1a20c:	strdeq	sp, [r4], -ip
   1a210:	andeq	sl, r4, ip, asr r0
   1a214:	andeq	sl, r4, r0, lsr #29
   1a218:	andeq	sp, r7, r8, lsr ip
   1a21c:	andeq	sl, r4, ip, asr #31
   1a220:			; <UNDEFINED> instruction: 0x0004adb4
   1a224:	andeq	r0, r0, r0, lsl #9
   1a228:			; <UNDEFINED> instruction: 0x0004dab8
   1a22c:	andeq	sp, r7, r8, asr #20
   1a230:	andeq	sp, r4, r0, lsl #17
   1a234:			; <UNDEFINED> instruction: 0x00049ebc
   1a238:	andeq	sl, r4, r4, lsl #26
   1a23c:	andeq	r1, r5, ip
   1a240:			; <UNDEFINED> instruction: 0x0007d9b8
   1a244:	andeq	sp, r7, r4, asr r9
   1a248:	andeq	r0, r0, r8, asr r4
   1a24c:	andeq	sp, r7, r0, lsl #18
   1a250:	andeq	sp, r4, r0, ror r7
   1a254:	andeq	r9, r4, r0, ror sp
   1a258:			; <UNDEFINED> instruction: 0x0004abb8
   1a25c:	andeq	r9, r4, r4, lsr sp
   1a260:	andeq	fp, r4, r8, ror r3
   1a264:	andeq	fp, r4, r0, lsr #7
   1a268:	andeq	sp, r7, r8, ror #16
   1a26c:	andeq	sp, r4, r0, lsr #15
   1a270:	ldrdeq	r9, [r4], -ip
   1a274:	andeq	sl, r4, r4, lsr #22
   1a278:	andeq	sp, r7, r4, lsl #16
   1a27c:	andeq	sp, r4, r0, ror #14
   1a280:	andeq	r9, r4, r8, ror ip
   1a284:	andeq	sl, r4, r0, asr #21
   1a288:	strdeq	sp, [r7], -r4
   1a28c:	strdeq	sp, [r7], -r0
   1a290:	ldrdeq	sp, [r4], -r0
   1a294:	andeq	r9, r4, r8, asr fp
   1a298:	andeq	sl, r4, r8, lsr #19
   1a29c:	andeq	r0, r0, sp, lsr r1
   1a2a0:	andeq	r0, r0, r0, asr #8
   1a2a4:	andeq	sp, r7, r4, lsl r6
   1a2a8:	andeq	sp, r7, r0, ror #11
   1a2ac:	andeq	sp, r4, r4, lsr #11
   1a2b0:	andeq	sl, r4, r0, lsr #17
   1a2b4:	andeq	r0, r0, lr, lsl r1
   1a2b8:	andeq	r9, r4, r4, lsl sl
   1a2bc:	andeq	fp, r4, r4, lsl #1
   1a2c0:	andeq	fp, r4, ip, asr #32
   1a2c4:	ldrdeq	r9, [r4], -r4
   1a2c8:	andeq	fp, r4, r8
   1a2cc:	andeq	fp, r4, r4, asr #32
   1a2d0:	muleq	r4, r4, r9
   1a2d4:	andeq	sl, r4, ip, asr #31
   1a2d8:	andeq	fp, r4, r4
   1a2dc:	andeq	r9, r4, ip, asr r9
   1a2e0:	andeq	r3, r5, ip, asr #19
   1a2e4:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   1a2e8:	andeq	r9, r4, ip, lsl r9
   1a2ec:	andeq	sl, r4, r0, asr pc
   1a2f0:	andeq	sl, r4, r4, asr fp
   1a2f4:	ldrdeq	r9, [r4], -r8
   1a2f8:	andeq	sl, r4, r4, lsl pc
   1a2fc:	andeq	sp, r4, ip, asr #6
   1a300:	andeq	sp, r4, ip, asr #20
   1a304:	andeq	sp, r4, r0, ror #20
   1a308:	andeq	sl, r4, ip, lsl #20
   1a30c:	andeq	sl, r4, r0, lsl #20
   1a310:	andeq	sp, r4, ip, ror #20
   1a314:	andeq	r2, r0, r0, lsl #17
   1a318:	andeq	sp, r7, r0, ror #5
   1a31c:	andeq	r0, r0, r8, lsr r4
   1a320:	andeq	sp, r7, r0, lsr #5
   1a324:	andeq	sp, r4, r4, asr #4
   1a328:	andeq	r9, r4, r0, lsl r7
   1a32c:	andeq	sl, r4, r0, asr r5
   1a330:	andeq	r0, r0, r9, asr #2
   1a334:			; <UNDEFINED> instruction: 0x000496b0
   1a338:	andeq	sl, r4, ip, asr #24
   1a33c:	andeq	sp, r7, r8, lsr r2
   1a340:	andeq	sp, r7, r4, lsr #4
   1a344:	andeq	sp, r7, r4, asr r1
   1a348:	strdeq	sp, [r4], -r0
   1a34c:	andeq	sl, r4, r8, lsl r4
   1a350:	andeq	r0, r0, r7, lsl #8
   1a354:	andeq	r9, r4, r0, lsr #11
   1a358:	strdeq	sl, [r4], -r4
   1a35c:	andeq	r0, r0, r9, lsr r1
   1a360:	andeq	r9, r4, r8, ror r5
   1a364:	andeq	sl, r4, r8, asr #7
   1a368:	andeq	r9, r4, r0, lsr #10
   1a36c:	andeq	sl, r4, r4, ror r3
   1a370:	andeq	sp, r7, r0, rrx
   1a374:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1a378:	andeq	r9, r4, ip, asr #9
   1a37c:	andeq	sl, r4, r4, lsl r3
   1a380:	andeq	r0, r0, r1, lsl r1
   1a384:	muleq	r4, r4, r4
   1a388:	andeq	sl, r4, r8, ror #5
   1a38c:	andeq	r9, r4, r8, ror #8
   1a390:			; <UNDEFINED> instruction: 0x0004a2bc
   1a394:	andeq	ip, r7, r8, lsr #31
   1a398:	andeq	ip, r4, r8, lsr #30
   1a39c:	andeq	r9, r4, r8, lsl r4
   1a3a0:	andeq	sl, r4, r0, ror #4
   1a3a4:	andeq	r0, r0, r1, lsl #2
   1a3a8:	andeq	ip, r4, r4, ror #29
   1a3ac:	ldrdeq	r9, [r4], -r4
   1a3b0:	andeq	sl, r4, r4, lsl r2
   1a3b4:	andeq	r0, r0, r5, asr #2
   1a3b8:	andeq	ip, r7, ip, ror #15
   1a3bc:	ldrdeq	ip, [r7], -ip	; <UNPREDICTABLE>
   1a3c0:			; <UNDEFINED> instruction: 0x0007ceb4
   1a3c4:	andeq	ip, r4, r8, asr lr
   1a3c8:	andeq	r9, r4, r4, lsr #6
   1a3cc:	andeq	sl, r4, ip, ror #2
   1a3d0:	andeq	r0, r0, r5, lsl #2
   1a3d4:	andeq	ip, r7, r8, asr lr
   1a3d8:	andeq	ip, r4, r8, ror ip
   1a3dc:	andeq	r9, r4, ip, asr #5
   1a3e0:	andeq	sl, r4, r4, lsl r1
   1a3e4:	andeq	ip, r7, r0, lsl #28
   1a3e8:	andeq	ip, r7, r8, asr #27
   1a3ec:	muleq	r4, r0, r5
   1a3f0:	andeq	r9, r4, ip, lsr r2
   1a3f4:	andeq	sl, r4, ip, lsl #1
   1a3f8:	andeq	r0, r0, r7, ror r1
   1a3fc:	andeq	sp, r4, r0, lsl #10
   1a400:	strdeq	r9, [r4], -r4
   1a404:	andeq	sl, r4, r4, asr #32
   1a408:	andeq	r0, r0, fp, ror #2
   1a40c:	andeq	r0, r0, r3, lsl #8
   1a410:	cmp	r0, #97	; 0x61
   1a414:	bne	1a0c4 <blkid_probe_get_size@plt+0x12bac>
   1a418:	ldr	r3, [pc, #-472]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a41c:	add	r2, sp, #64	; 0x40
   1a420:	add	r1, sp, #68	; 0x44
   1a424:	ldr	r3, [r4, r3]
   1a428:	ldr	r0, [r3]
   1a42c:	bl	a010 <blkid_probe_get_size@plt+0x2af8>
   1a430:	subs	sl, r0, #0
   1a434:	beq	1b160 <blkid_probe_get_size@plt+0x13c48>
   1a438:	mov	r3, #1
   1a43c:	ldr	r2, [sp, #64]	; 0x40
   1a440:	ldr	r1, [sp, #68]	; 0x44
   1a444:	ldr	r0, [sp, #60]	; 0x3c
   1a448:	bl	29b84 <blkid_probe_get_size@plt+0x2266c>
   1a44c:	cmp	r0, #0
   1a450:	bge	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a454:	ldr	r3, [pc, #-612]	; 1a1f8 <blkid_probe_get_size@plt+0x12ce0>
   1a458:	mov	r1, r0
   1a45c:	add	r3, pc, r3
   1a460:	ldr	r5, [sp, #16]
   1a464:	ldr	r3, [r3, #4]
   1a468:	cmp	r3, #2
   1a46c:	ble	1a16c <blkid_probe_get_size@plt+0x12c54>
   1a470:	ldr	r2, [pc, #-636]	; 1a1fc <blkid_probe_get_size@plt+0x12ce4>
   1a474:	ldr	r3, [pc, #-636]	; 1a200 <blkid_probe_get_size@plt+0x12ce8>
   1a478:	add	r2, pc, r2
   1a47c:	ldr	r0, [sp, #68]	; 0x44
   1a480:	ldr	ip, [sp, #64]	; 0x40
   1a484:	str	r2, [sp, #4]
   1a488:	add	r3, pc, r3
   1a48c:	ldr	r2, [pc, #-656]	; 1a204 <blkid_probe_get_size@plt+0x12cec>
   1a490:	add	r3, r3, #1760	; 0x6e0
   1a494:	str	r3, [sp]
   1a498:	str	r0, [sp, #8]
   1a49c:	str	ip, [sp, #12]
   1a4a0:	mov	r3, #224	; 0xe0
   1a4a4:	add	r2, pc, r2
   1a4a8:	ldr	r0, [pc, #-164]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a4ac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a4b0:	mov	r9, r0
   1a4b4:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a4b8:	mov	sl, #0
   1a4bc:	mvn	r9, #21
   1a4c0:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a4c4:	ldr	r3, [pc, #-644]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a4c8:	add	r2, sp, #64	; 0x40
   1a4cc:	add	r1, sp, #68	; 0x44
   1a4d0:	ldr	r3, [r4, r3]
   1a4d4:	ldr	r0, [r3]
   1a4d8:	bl	a010 <blkid_probe_get_size@plt+0x2af8>
   1a4dc:	subs	sl, r0, #0
   1a4e0:	beq	1b0a8 <blkid_probe_get_size@plt+0x13b90>
   1a4e4:	ldr	r5, [sp, #60]	; 0x3c
   1a4e8:	ldr	r3, [sp, #68]	; 0x44
   1a4ec:	cmp	r5, #0
   1a4f0:	beq	1ac34 <blkid_probe_get_size@plt+0x1371c>
   1a4f4:	cmp	r3, #0
   1a4f8:	beq	1acec <blkid_probe_get_size@plt+0x137d4>
   1a4fc:	mov	r2, r8
   1a500:	mov	r1, r8
   1a504:	add	r0, r5, #44	; 0x2c
   1a508:	str	r3, [sp, #44]	; 0x2c
   1a50c:	ldr	r8, [sp, #64]	; 0x40
   1a510:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   1a514:	ldr	r3, [sp, #44]	; 0x2c
   1a518:	cmp	r0, #0
   1a51c:	bge	1a998 <blkid_probe_get_size@plt+0x13480>
   1a520:	ldr	r5, [sp, #16]
   1a524:	mov	r1, r0
   1a528:	mov	r8, #0
   1a52c:	str	r8, [sp, #44]	; 0x2c
   1a530:	mov	r0, r8
   1a534:	str	r1, [sp, #16]
   1a538:	bl	69f0 <free@plt>
   1a53c:	ldr	r0, [sp, #44]	; 0x2c
   1a540:	bl	69f0 <free@plt>
   1a544:	ldr	r1, [sp, #16]
   1a548:	ldr	r3, [pc, #-840]	; 1a208 <blkid_probe_get_size@plt+0x12cf0>
   1a54c:	add	r3, pc, r3
   1a550:	ldr	r3, [r3, #4]
   1a554:	cmp	r3, #2
   1a558:	ble	1a16c <blkid_probe_get_size@plt+0x12c54>
   1a55c:	ldr	r2, [pc, #-856]	; 1a20c <blkid_probe_get_size@plt+0x12cf4>
   1a560:	ldr	r3, [pc, #-856]	; 1a210 <blkid_probe_get_size@plt+0x12cf8>
   1a564:	add	r2, pc, r2
   1a568:	ldr	r0, [sp, #68]	; 0x44
   1a56c:	ldr	ip, [sp, #64]	; 0x40
   1a570:	str	r2, [sp, #4]
   1a574:	add	r3, pc, r3
   1a578:	ldr	r2, [pc, #-876]	; 1a214 <blkid_probe_get_size@plt+0x12cfc>
   1a57c:	add	r3, r3, #1760	; 0x6e0
   1a580:	str	r3, [sp]
   1a584:	str	r0, [sp, #8]
   1a588:	str	ip, [sp, #12]
   1a58c:	mov	r3, #240	; 0xf0
   1a590:	add	r2, pc, r2
   1a594:	ldr	r0, [pc, #-400]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a598:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a59c:	mov	r9, r0
   1a5a0:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a5a4:	ldr	r3, [pc, #-916]	; 1a218 <blkid_probe_get_size@plt+0x12d00>
   1a5a8:	mov	r2, #1
   1a5ac:	add	r3, pc, r3
   1a5b0:	mov	sl, r8
   1a5b4:	strb	r2, [r3]
   1a5b8:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a5bc:	ldr	r3, [pc, #-892]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a5c0:	ldr	sl, [sp, #60]	; 0x3c
   1a5c4:	ldr	r5, [r4, r3]
   1a5c8:	cmp	sl, #0
   1a5cc:	ldr	r3, [r5]
   1a5d0:	beq	1abf4 <blkid_probe_get_size@plt+0x136dc>
   1a5d4:	cmp	r3, #0
   1a5d8:	beq	1ac6c <blkid_probe_get_size@plt+0x13754>
   1a5dc:	mov	r1, r8
   1a5e0:	add	r0, sl, #48	; 0x30
   1a5e4:	str	r3, [sp, #44]	; 0x2c
   1a5e8:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   1a5ec:	ldr	r3, [sp, #44]	; 0x2c
   1a5f0:	cmp	r0, #0
   1a5f4:	blt	1a928 <blkid_probe_get_size@plt+0x13410>
   1a5f8:	mov	r1, r3
   1a5fc:	ldr	r0, [sl, #48]	; 0x30
   1a600:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   1a604:	cmp	r0, #0
   1a608:	blt	1a928 <blkid_probe_get_size@plt+0x13410>
   1a60c:	mov	r0, #0
   1a610:	strb	r0, [sl, #24]
   1a614:	mov	sl, r0
   1a618:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a61c:	ldr	r3, [pc, #-988]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a620:	add	r2, sp, #104	; 0x68
   1a624:	ldr	r1, [pc, #-1040]	; 1a21c <blkid_probe_get_size@plt+0x12d04>
   1a628:	str	r8, [r2, #-36]!	; 0xffffffdc
   1a62c:	ldr	r8, [r4, r3]
   1a630:	add	r1, pc, r1
   1a634:	ldr	r0, [r8]
   1a638:	bl	bfac <blkid_probe_get_size@plt+0x4a94>
   1a63c:	cmp	r0, #0
   1a640:	blt	1b18c <blkid_probe_get_size@plt+0x13c74>
   1a644:	ldr	r1, [sp, #68]	; 0x44
   1a648:	ldr	r0, [sp, #60]	; 0x3c
   1a64c:	bl	29ab4 <blkid_probe_get_size@plt+0x2259c>
   1a650:	cmp	r0, #0
   1a654:	blt	1b280 <blkid_probe_get_size@plt+0x13d68>
   1a658:	ldr	r0, [sp, #68]	; 0x44
   1a65c:	cmp	r0, #0
   1a660:	beq	1a668 <blkid_probe_get_size@plt+0x13150>
   1a664:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   1a668:	mov	sl, #0
   1a66c:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a670:	ldr	r0, [pc, #-1112]	; 1a220 <blkid_probe_get_size@plt+0x12d08>
   1a674:	ldr	r5, [sp, #16]
   1a678:	add	r0, pc, r0
   1a67c:	mov	sl, r8
   1a680:	mov	r9, r8
   1a684:	bl	6b4c <puts@plt>
   1a688:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a68c:	ldr	r3, [pc, #-1136]	; 1a224 <blkid_probe_get_size@plt+0x12d0c>
   1a690:	ldr	r1, [pc, #-1136]	; 1a228 <blkid_probe_get_size@plt+0x12d10>
   1a694:	mov	r0, #1
   1a698:	ldr	r3, [r4, r3]
   1a69c:	add	r1, pc, r1
   1a6a0:	ldr	r5, [sp, #16]
   1a6a4:	ldr	r2, [r3]
   1a6a8:	mov	sl, r8
   1a6ac:	mov	r9, r8
   1a6b0:	bl	74f4 <__printf_chk@plt>
   1a6b4:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a6b8:	ldr	r3, [sp, #32]
   1a6bc:	ldr	lr, [pc, #-1148]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a6c0:	add	ip, sp, #84	; 0x54
   1a6c4:	ldm	r3, {r0, r1, r2, r3}
   1a6c8:	stm	ip, {r0, r1, r2, r3}
   1a6cc:	mov	r0, ip
   1a6d0:	ldr	r3, [r4, lr]
   1a6d4:	ldr	r5, [r3]
   1a6d8:	mov	r1, r5
   1a6dc:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   1a6e0:	subs	sl, r0, #0
   1a6e4:	strne	r5, [sp, #36]	; 0x24
   1a6e8:	movne	sl, r8
   1a6ec:	bne	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a6f0:	ldr	r3, [pc, #-1228]	; 1a22c <blkid_probe_get_size@plt+0x12d14>
   1a6f4:	add	r3, pc, r3
   1a6f8:	ldr	r3, [r3, #4]
   1a6fc:	cmp	r3, #2
   1a700:	ble	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a704:	ldr	r2, [pc, #-1244]	; 1a230 <blkid_probe_get_size@plt+0x12d18>
   1a708:	ldr	r3, [pc, #-1244]	; 1a234 <blkid_probe_get_size@plt+0x12d1c>
   1a70c:	add	r2, pc, r2
   1a710:	str	r2, [sp, #4]
   1a714:	add	r3, pc, r3
   1a718:	ldr	r2, [pc, #-1256]	; 1a238 <blkid_probe_get_size@plt+0x12d20>
   1a71c:	add	r3, r3, #1760	; 0x6e0
   1a720:	str	r3, [sp]
   1a724:	str	r5, [sp, #8]
   1a728:	mov	r3, #205	; 0xcd
   1a72c:	add	r2, pc, r2
   1a730:	mov	r1, #1073741846	; 0x40000016
   1a734:	ldr	r0, [pc, #-816]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a738:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a73c:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a740:	ldr	r3, [pc, #-1280]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a744:	add	r2, sp, #104	; 0x68
   1a748:	ldr	r1, [pc, #-1300]	; 1a23c <blkid_probe_get_size@plt+0x12d24>
   1a74c:	str	r8, [r2, #-36]!	; 0xffffffdc
   1a750:	ldr	r5, [r4, r3]
   1a754:	add	r1, pc, r1
   1a758:	ldr	r0, [r5]
   1a75c:	bl	bfac <blkid_probe_get_size@plt+0x4a94>
   1a760:	cmp	r0, #0
   1a764:	blt	1b0d4 <blkid_probe_get_size@plt+0x13bbc>
   1a768:	ldr	r1, [sp, #68]	; 0x44
   1a76c:	ldr	r0, [sp, #60]	; 0x3c
   1a770:	bl	29ab4 <blkid_probe_get_size@plt+0x2259c>
   1a774:	cmp	r0, #0
   1a778:	bge	1a658 <blkid_probe_get_size@plt+0x13140>
   1a77c:	ldr	r3, [pc, #-1348]	; 1a240 <blkid_probe_get_size@plt+0x12d28>
   1a780:	mov	r4, r5
   1a784:	add	r3, pc, r3
   1a788:	mov	r1, r0
   1a78c:	ldr	r3, [r3, #4]
   1a790:	ldr	r5, [sp, #16]
   1a794:	cmp	r3, #2
   1a798:	bgt	1b670 <blkid_probe_get_size@plt+0x14158>
   1a79c:	rsb	r9, r1, #0
   1a7a0:	uxtb	r9, r9
   1a7a4:	rsb	r9, r9, #0
   1a7a8:	ldr	r0, [sp, #68]	; 0x44
   1a7ac:	cmp	r0, #0
   1a7b0:	beq	1a7b8 <blkid_probe_get_size@plt+0x132a0>
   1a7b4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   1a7b8:	mov	sl, #0
   1a7bc:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a7c0:	ldr	r3, [pc, #-1408]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a7c4:	mov	r2, #1
   1a7c8:	ldr	r0, [sp, #60]	; 0x3c
   1a7cc:	ldr	r5, [r4, r3]
   1a7d0:	ldr	r1, [r5]
   1a7d4:	bl	29cec <blkid_probe_get_size@plt+0x227d4>
   1a7d8:	cmp	r0, #0
   1a7dc:	bge	1a668 <blkid_probe_get_size@plt+0x13150>
   1a7e0:	ldr	r3, [pc, #-1444]	; 1a244 <blkid_probe_get_size@plt+0x12d2c>
   1a7e4:	mov	r4, r5
   1a7e8:	add	r3, pc, r3
   1a7ec:	mov	r1, r0
   1a7f0:	ldr	r3, [r3, #4]
   1a7f4:	ldr	r5, [sp, #16]
   1a7f8:	cmp	r3, #2
   1a7fc:	bgt	1b5c4 <blkid_probe_get_size@plt+0x140ac>
   1a800:	rsb	r9, r1, #0
   1a804:	mov	sl, #0
   1a808:	uxtb	r9, r9
   1a80c:	rsb	r9, r9, #0
   1a810:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a814:	ldr	r3, [pc, #-1492]	; 1a248 <blkid_probe_get_size@plt+0x12d30>
   1a818:	mov	r2, r8
   1a81c:	ldr	r0, [sp, #60]	; 0x3c
   1a820:	ldr	sl, [r4, r3]
   1a824:	ldr	r1, [sl]
   1a828:	bl	29cec <blkid_probe_get_size@plt+0x227d4>
   1a82c:	cmp	r0, #0
   1a830:	bge	1a668 <blkid_probe_get_size@plt+0x13150>
   1a834:	ldr	r3, [pc, #-1520]	; 1a24c <blkid_probe_get_size@plt+0x12d34>
   1a838:	mov	r1, r0
   1a83c:	add	r3, pc, r3
   1a840:	ldr	r5, [sp, #16]
   1a844:	ldr	r3, [r3, #4]
   1a848:	cmp	r3, #2
   1a84c:	ble	1a800 <blkid_probe_get_size@plt+0x132e8>
   1a850:	ldr	r2, [pc, #-1544]	; 1a250 <blkid_probe_get_size@plt+0x12d38>
   1a854:	ldr	r3, [pc, #-1544]	; 1a254 <blkid_probe_get_size@plt+0x12d3c>
   1a858:	add	r2, pc, r2
   1a85c:	ldr	r0, [sl]
   1a860:	add	r3, pc, r3
   1a864:	str	r2, [sp, #4]
   1a868:	ldr	r2, [pc, #-1560]	; 1a258 <blkid_probe_get_size@plt+0x12d40>
   1a86c:	add	r3, r3, #1760	; 0x6e0
   1a870:	str	r0, [sp, #8]
   1a874:	str	r3, [sp]
   1a878:	add	r2, pc, r2
   1a87c:	mov	r3, #216	; 0xd8
   1a880:	ldr	r0, [pc, #-1148]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a884:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a888:	mov	sl, r8
   1a88c:	mov	r9, r0
   1a890:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a894:	ldr	r3, [pc, #-1600]	; 1a25c <blkid_probe_get_size@plt+0x12d44>
   1a898:	ldr	r2, [pc, #-1600]	; 1a260 <blkid_probe_get_size@plt+0x12d48>
   1a89c:	add	r3, pc, r3
   1a8a0:	ldr	r1, [pc, #-1604]	; 1a264 <blkid_probe_get_size@plt+0x12d4c>
   1a8a4:	add	r3, r3, #848	; 0x350
   1a8a8:	str	r3, [sp]
   1a8ac:	add	r2, pc, r2
   1a8b0:	mov	r3, #233	; 0xe9
   1a8b4:	add	r1, pc, r1
   1a8b8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1a8bc:	mvn	r9, #21
   1a8c0:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1a8c4:	mov	r4, r5
   1a8c8:	ldr	r5, [sp, #16]
   1a8cc:	mov	r1, r0
   1a8d0:	ldr	r3, [pc, #-1648]	; 1a268 <blkid_probe_get_size@plt+0x12d50>
   1a8d4:	add	r3, pc, r3
   1a8d8:	ldr	r3, [r3, #4]
   1a8dc:	cmp	r3, #2
   1a8e0:	ble	1a800 <blkid_probe_get_size@plt+0x132e8>
   1a8e4:	ldr	r2, [pc, #-1664]	; 1a26c <blkid_probe_get_size@plt+0x12d54>
   1a8e8:	ldr	r3, [pc, #-1664]	; 1a270 <blkid_probe_get_size@plt+0x12d58>
   1a8ec:	add	r2, pc, r2
   1a8f0:	ldr	r0, [r4]
   1a8f4:	add	r3, pc, r3
   1a8f8:	str	r2, [sp, #4]
   1a8fc:	ldr	r2, [pc, #-1680]	; 1a274 <blkid_probe_get_size@plt+0x12d5c>
   1a900:	add	r3, r3, #1760	; 0x6e0
   1a904:	str	r0, [sp, #8]
   1a908:	str	r3, [sp]
   1a90c:	add	r2, pc, r2
   1a910:	mov	r3, #245	; 0xf5
   1a914:	ldr	r0, [pc, #-1296]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a918:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a91c:	mov	sl, #0
   1a920:	mov	r9, r0
   1a924:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a928:	mov	r4, r5
   1a92c:	ldr	r5, [sp, #16]
   1a930:	mov	r1, r0
   1a934:	ldr	r3, [pc, #-1732]	; 1a278 <blkid_probe_get_size@plt+0x12d60>
   1a938:	add	r3, pc, r3
   1a93c:	ldr	r3, [r3, #4]
   1a940:	cmp	r3, #2
   1a944:	ble	1a800 <blkid_probe_get_size@plt+0x132e8>
   1a948:	ldr	r2, [pc, #-1748]	; 1a27c <blkid_probe_get_size@plt+0x12d64>
   1a94c:	ldr	r3, [pc, #-1748]	; 1a280 <blkid_probe_get_size@plt+0x12d68>
   1a950:	add	r2, pc, r2
   1a954:	ldr	r0, [r4]
   1a958:	add	r3, pc, r3
   1a95c:	str	r2, [sp, #4]
   1a960:	ldr	r2, [pc, #-1764]	; 1a284 <blkid_probe_get_size@plt+0x12d6c>
   1a964:	add	r3, r3, #1760	; 0x6e0
   1a968:	str	r0, [sp, #8]
   1a96c:	str	r3, [sp]
   1a970:	add	r2, pc, r2
   1a974:	mov	r3, #250	; 0xfa
   1a978:	ldr	r0, [pc, #-1396]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1a97c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1a980:	mov	sl, #0
   1a984:	mov	r9, r0
   1a988:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1a98c:	mov	sl, #0
   1a990:	str	sl, [sp, #28]
   1a994:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a998:	mov	r0, r3
   1a99c:	bl	74e8 <strdup@plt>
   1a9a0:	subs	r3, r0, #0
   1a9a4:	str	r3, [sp, #44]	; 0x2c
   1a9a8:	beq	1b608 <blkid_probe_get_size@plt+0x140f0>
   1a9ac:	cmp	r8, #0
   1a9b0:	beq	1a9c4 <blkid_probe_get_size@plt+0x134ac>
   1a9b4:	mov	r0, r8
   1a9b8:	bl	74e8 <strdup@plt>
   1a9bc:	subs	r8, r0, #0
   1a9c0:	beq	1b800 <blkid_probe_get_size@plt+0x142e8>
   1a9c4:	mov	r2, r8
   1a9c8:	ldr	r1, [sp, #44]	; 0x2c
   1a9cc:	ldr	r0, [r5, #44]	; 0x2c
   1a9d0:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   1a9d4:	cmp	r0, #0
   1a9d8:	blt	1aba8 <blkid_probe_get_size@plt+0x13690>
   1a9dc:	mov	r3, #0
   1a9e0:	strb	r3, [r5, #24]
   1a9e4:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1a9e8:	ldr	r3, [pc, #-1896]	; 1a288 <blkid_probe_get_size@plt+0x12d70>
   1a9ec:	ldr	sl, [sp, #20]
   1a9f0:	add	r3, pc, r3
   1a9f4:	ldr	r5, [sp, #16]
   1a9f8:	ldrb	r3, [r3, #1076]	; 0x434
   1a9fc:	eor	r3, r3, #1
   1aa00:	orrs	r3, sl, r3
   1aa04:	beq	1aab0 <blkid_probe_get_size@plt+0x13598>
   1aa08:	bl	3ac44 <blkid_probe_get_size@plt+0x3372c>
   1aa0c:	subs	r9, r0, #0
   1aa10:	blt	19e28 <blkid_probe_get_size@plt+0x12910>
   1aa14:	cmp	sl, r8
   1aa18:	beq	1aab0 <blkid_probe_get_size@plt+0x13598>
   1aa1c:	bl	494a0 <blkid_probe_get_size@plt+0x41f88>
   1aa20:	subs	sl, r0, #0
   1aa24:	beq	1b028 <blkid_probe_get_size@plt+0x13b10>
   1aa28:	mov	r3, r8
   1aa2c:	mov	r2, r8
   1aa30:	ldrd	r8, [sp, #72]	; 0x48
   1aa34:	mov	r1, #7
   1aa38:	strd	r8, [sp]
   1aa3c:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1aa40:	subs	r1, r0, #0
   1aa44:	bge	1aaa8 <blkid_probe_get_size@plt+0x13590>
   1aa48:	ldr	r3, [pc, #-1988]	; 1a28c <blkid_probe_get_size@plt+0x12d74>
   1aa4c:	add	r3, pc, r3
   1aa50:	ldr	r3, [r3, #4]
   1aa54:	cmp	r3, #2
   1aa58:	rsble	r9, r1, #0
   1aa5c:	uxtble	r9, r9
   1aa60:	rsble	r9, r9, #0
   1aa64:	ble	1aa9c <blkid_probe_get_size@plt+0x13584>
   1aa68:	ldr	r2, [pc, #-2016]	; 1a290 <blkid_probe_get_size@plt+0x12d78>
   1aa6c:	ldr	r3, [pc, #-2016]	; 1a294 <blkid_probe_get_size@plt+0x12d7c>
   1aa70:	add	r2, pc, r2
   1aa74:	str	r2, [sp, #4]
   1aa78:	add	r3, pc, r3
   1aa7c:	ldr	r2, [pc, #-2028]	; 1a298 <blkid_probe_get_size@plt+0x12d80>
   1aa80:	add	r3, r3, #1760	; 0x6e0
   1aa84:	str	r3, [sp]
   1aa88:	add	r2, pc, r2
   1aa8c:	ldr	r3, [pc, #-2040]	; 1a29c <blkid_probe_get_size@plt+0x12d84>
   1aa90:	ldr	r0, [pc, #-1676]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1aa94:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1aa98:	mov	r9, r0
   1aa9c:	mov	r0, sl
   1aaa0:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   1aaa4:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1aaa8:	mov	r0, sl
   1aaac:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   1aab0:	ldr	r3, [pc, #-2072]	; 1a2a0 <blkid_probe_get_size@plt+0x12d88>
   1aab4:	ldr	r8, [r4, r3]
   1aab8:	ldr	r3, [r8]
   1aabc:	cmp	r3, r7
   1aac0:	bge	1ad24 <blkid_probe_get_size@plt+0x1380c>
   1aac4:	add	r9, sp, #68	; 0x44
   1aac8:	mov	sl, #0
   1aacc:	b	1ab08 <blkid_probe_get_size@plt+0x135f0>
   1aad0:	ldr	r1, [sp, #68]	; 0x44
   1aad4:	ldr	r0, [sp, #60]	; 0x3c
   1aad8:	bl	29ab4 <blkid_probe_get_size@plt+0x2259c>
   1aadc:	cmp	r0, #0
   1aae0:	blt	1ae98 <blkid_probe_get_size@plt+0x13980>
   1aae4:	ldr	r0, [sp, #68]	; 0x44
   1aae8:	cmp	r0, #0
   1aaec:	beq	1aaf4 <blkid_probe_get_size@plt+0x135dc>
   1aaf0:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   1aaf4:	ldr	r3, [r8]
   1aaf8:	add	r3, r3, #1
   1aafc:	cmp	r3, r7
   1ab00:	str	r3, [r8]
   1ab04:	bge	1ad24 <blkid_probe_get_size@plt+0x1380c>
   1ab08:	ldr	r0, [r6, r3, lsl #2]
   1ab0c:	mov	r2, r9
   1ab10:	mov	r1, #0
   1ab14:	str	sl, [sp, #68]	; 0x44
   1ab18:	bl	bfac <blkid_probe_get_size@plt+0x4a94>
   1ab1c:	cmp	r0, #0
   1ab20:	bge	1aad0 <blkid_probe_get_size@plt+0x135b8>
   1ab24:	ldr	r3, [pc, #-2184]	; 1a2a4 <blkid_probe_get_size@plt+0x12d8c>
   1ab28:	add	r3, pc, r3
   1ab2c:	ldr	r3, [r3, #4]
   1ab30:	cmp	r3, #2
   1ab34:	bgt	1b1e8 <blkid_probe_get_size@plt+0x13cd0>
   1ab38:	rsb	r9, r0, #0
   1ab3c:	uxtb	r9, r9
   1ab40:	rsb	r9, r9, #0
   1ab44:	ldr	r0, [sp, #68]	; 0x44
   1ab48:	cmp	r0, #0
   1ab4c:	beq	19e28 <blkid_probe_get_size@plt+0x12910>
   1ab50:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   1ab54:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1ab58:	ldr	r3, [pc, #-2232]	; 1a2a8 <blkid_probe_get_size@plt+0x12d90>
   1ab5c:	add	r3, pc, r3
   1ab60:	ldr	r3, [r3, #4]
   1ab64:	cmp	r3, #2
   1ab68:	ble	1a090 <blkid_probe_get_size@plt+0x12b78>
   1ab6c:	ldr	r2, [r5]
   1ab70:	ldr	r3, [pc, #-2252]	; 1a2ac <blkid_probe_get_size@plt+0x12d94>
   1ab74:	str	r2, [sp, #8]
   1ab78:	ldr	r2, [sp, #40]	; 0x28
   1ab7c:	add	r3, pc, r3
   1ab80:	ldr	r0, [pc, #-1916]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1ab84:	strd	r2, [sp]
   1ab88:	ldr	r2, [pc, #-2272]	; 1a2b0 <blkid_probe_get_size@plt+0x12d98>
   1ab8c:	ldr	r3, [pc, #-2272]	; 1a2b4 <blkid_probe_get_size@plt+0x12d9c>
   1ab90:	add	r2, pc, r2
   1ab94:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1ab98:	mov	r3, #1
   1ab9c:	mov	sl, #0
   1aba0:	str	r3, [sp, #20]
   1aba4:	b	1a09c <blkid_probe_get_size@plt+0x12b84>
   1aba8:	mov	r1, r0
   1abac:	ldr	r5, [sp, #16]
   1abb0:	b	1a530 <blkid_probe_get_size@plt+0x13018>
   1abb4:	ldr	r2, [pc, #-2308]	; 1a2b8 <blkid_probe_get_size@plt+0x12da0>
   1abb8:	ldr	r1, [pc, #-2308]	; 1a2bc <blkid_probe_get_size@plt+0x12da4>
   1abbc:	add	r2, pc, r2
   1abc0:	add	r2, r2, #1808	; 0x710
   1abc4:	add	r2, r2, #8
   1abc8:	str	r2, [sp]
   1abcc:	ldr	r2, [pc, #-2324]	; 1a2c0 <blkid_probe_get_size@plt+0x12da8>
   1abd0:	add	r1, pc, r1
   1abd4:	mov	r3, #204	; 0xcc
   1abd8:	add	r2, pc, r2
   1abdc:	mov	r0, #0
   1abe0:	mov	r4, r5
   1abe4:	ldr	r5, [sp, #16]
   1abe8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1abec:	mvn	r1, #21
   1abf0:	b	1a8d0 <blkid_probe_get_size@plt+0x133b8>
   1abf4:	ldr	r3, [pc, #-2360]	; 1a2c4 <blkid_probe_get_size@plt+0x12dac>
   1abf8:	ldr	r2, [pc, #-2360]	; 1a2c8 <blkid_probe_get_size@plt+0x12db0>
   1abfc:	add	r3, pc, r3
   1ac00:	add	r3, r3, #1840	; 0x730
   1ac04:	ldr	r1, [pc, #-2368]	; 1a2cc <blkid_probe_get_size@plt+0x12db4>
   1ac08:	add	r3, r3, #12
   1ac0c:	str	r3, [sp]
   1ac10:	add	r1, pc, r1
   1ac14:	mov	r0, sl
   1ac18:	mov	r3, #185	; 0xb9
   1ac1c:	add	r2, pc, r2
   1ac20:	mov	r4, r5
   1ac24:	ldr	r5, [sp, #16]
   1ac28:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1ac2c:	mvn	r1, #21
   1ac30:	b	1a934 <blkid_probe_get_size@plt+0x1341c>
   1ac34:	ldr	r3, [pc, #-2412]	; 1a2d0 <blkid_probe_get_size@plt+0x12db8>
   1ac38:	ldr	r2, [pc, #-2412]	; 1a2d4 <blkid_probe_get_size@plt+0x12dbc>
   1ac3c:	add	r3, pc, r3
   1ac40:	ldr	r1, [pc, #-2416]	; 1a2d8 <blkid_probe_get_size@plt+0x12dc0>
   1ac44:	add	r3, r3, #1776	; 0x6f0
   1ac48:	mov	r0, r5
   1ac4c:	str	r3, [sp]
   1ac50:	add	r1, pc, r1
   1ac54:	mov	r3, #153	; 0x99
   1ac58:	add	r2, pc, r2
   1ac5c:	ldr	r5, [sp, #16]
   1ac60:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1ac64:	mvn	r1, #21
   1ac68:	b	1a548 <blkid_probe_get_size@plt+0x13030>
   1ac6c:	ldr	r2, [pc, #-2456]	; 1a2dc <blkid_probe_get_size@plt+0x12dc4>
   1ac70:	mov	r0, r3
   1ac74:	add	r2, pc, r2
   1ac78:	add	r3, r2, #1840	; 0x730
   1ac7c:	ldr	r1, [pc, #-2468]	; 1a2e0 <blkid_probe_get_size@plt+0x12dc8>
   1ac80:	ldr	r2, [pc, #-2468]	; 1a2e4 <blkid_probe_get_size@plt+0x12dcc>
   1ac84:	add	r3, r3, #12
   1ac88:	str	r3, [sp]
   1ac8c:	add	r1, pc, r1
   1ac90:	mov	r3, #186	; 0xba
   1ac94:	add	r2, pc, r2
   1ac98:	mov	r4, r5
   1ac9c:	ldr	r5, [sp, #16]
   1aca0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1aca4:	mvn	r1, #21
   1aca8:	b	1a934 <blkid_probe_get_size@plt+0x1341c>
   1acac:	ldr	r3, [pc, #-2508]	; 1a2e8 <blkid_probe_get_size@plt+0x12dd0>
   1acb0:	ldr	r2, [pc, #-2508]	; 1a2ec <blkid_probe_get_size@plt+0x12dd4>
   1acb4:	add	r3, pc, r3
   1acb8:	add	r3, r3, #1808	; 0x710
   1acbc:	ldr	r1, [pc, #-2516]	; 1a2f0 <blkid_probe_get_size@plt+0x12dd8>
   1acc0:	add	r3, r3, #8
   1acc4:	str	r3, [sp]
   1acc8:	add	r1, pc, r1
   1accc:	mov	r0, sl
   1acd0:	mov	r3, #205	; 0xcd
   1acd4:	add	r2, pc, r2
   1acd8:	mov	r4, r5
   1acdc:	ldr	r5, [sp, #16]
   1ace0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1ace4:	mvn	r1, #21
   1ace8:	b	1a8d0 <blkid_probe_get_size@plt+0x133b8>
   1acec:	mov	r0, r3
   1acf0:	ldr	r3, [pc, #-2564]	; 1a2f4 <blkid_probe_get_size@plt+0x12ddc>
   1acf4:	ldr	r2, [pc, #-2564]	; 1a2f8 <blkid_probe_get_size@plt+0x12de0>
   1acf8:	add	r3, pc, r3
   1acfc:	ldr	r1, [pc, #-2568]	; 1a2fc <blkid_probe_get_size@plt+0x12de4>
   1ad00:	add	r3, r3, #1776	; 0x6f0
   1ad04:	str	r3, [sp]
   1ad08:	add	r1, pc, r1
   1ad0c:	mov	r3, #154	; 0x9a
   1ad10:	add	r2, pc, r2
   1ad14:	ldr	r5, [sp, #16]
   1ad18:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1ad1c:	mvn	r1, #21
   1ad20:	b	1a548 <blkid_probe_get_size@plt+0x13030>
   1ad24:	ldr	r3, [sp, #24]
   1ad28:	cmp	r3, #0
   1ad2c:	ldreq	r7, [sp, #24]
   1ad30:	bne	1b234 <blkid_probe_get_size@plt+0x13d1c>
   1ad34:	ldr	r3, [sp, #28]
   1ad38:	ldr	r6, [sp, #60]	; 0x3c
   1ad3c:	cmp	r3, #1
   1ad40:	bne	1aef4 <blkid_probe_get_size@plt+0x139dc>
   1ad44:	cmp	r6, #0
   1ad48:	beq	1b7d0 <blkid_probe_get_size@plt+0x142b8>
   1ad4c:	ldrb	r3, [r6, #24]
   1ad50:	cmp	r3, #0
   1ad54:	beq	1ad64 <blkid_probe_get_size@plt+0x1384c>
   1ad58:	ldr	r3, [r6, #4]
   1ad5c:	cmp	r3, #1
   1ad60:	beq	1af08 <blkid_probe_get_size@plt+0x139f0>
   1ad64:	ldr	r3, [r6, #12]
   1ad68:	cmp	r3, #0
   1ad6c:	movne	r8, #0
   1ad70:	beq	1ad90 <blkid_probe_get_size@plt+0x13878>
   1ad74:	ldr	r3, [r6, #8]
   1ad78:	ldr	r0, [r3, r8, lsl #2]
   1ad7c:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   1ad80:	ldr	r3, [r6, #12]
   1ad84:	add	r8, r8, #1
   1ad88:	cmp	r8, r3
   1ad8c:	bcc	1ad74 <blkid_probe_get_size@plt+0x1385c>
   1ad90:	ldr	r9, [pc, #-2712]	; 1a300 <blkid_probe_get_size@plt+0x12de8>
   1ad94:	mov	r8, #0
   1ad98:	add	r9, pc, r9
   1ad9c:	mov	r1, r9
   1ada0:	str	r8, [r6, #12]
   1ada4:	mov	r0, r6
   1ada8:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   1adac:	cmp	r0, r8
   1adb0:	bne	1b510 <blkid_probe_get_size@plt+0x13ff8>
   1adb4:	mov	r8, #0
   1adb8:	ldr	r0, [pc, #-2748]	; 1a304 <blkid_probe_get_size@plt+0x12dec>
   1adbc:	mov	r1, #0
   1adc0:	add	r0, pc, r0
   1adc4:	bl	6ff0 <access@plt>
   1adc8:	cmp	r0, #0
   1adcc:	blt	1b504 <blkid_probe_get_size@plt+0x13fec>
   1add0:	ldr	r9, [pc, #-2768]	; 1a308 <blkid_probe_get_size@plt+0x12df0>
   1add4:	add	r9, pc, r9
   1add8:	ldr	r1, [pc, #-2772]	; 1a30c <blkid_probe_get_size@plt+0x12df4>
   1addc:	mov	r0, r6
   1ade0:	add	r1, pc, r1
   1ade4:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   1ade8:	cmp	r0, #0
   1adec:	bne	1b494 <blkid_probe_get_size@plt+0x13f7c>
   1adf0:	ldr	sl, [pc, #-2792]	; 1a310 <blkid_probe_get_size@plt+0x12df8>
   1adf4:	mov	r0, r6
   1adf8:	add	sl, pc, sl
   1adfc:	mov	r1, sl
   1ae00:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   1ae04:	cmp	r0, #0
   1ae08:	bne	1b404 <blkid_probe_get_size@plt+0x13eec>
   1ae0c:	ldr	r1, [r6, #12]
   1ae10:	cmp	r1, #1
   1ae14:	bls	1ae3c <blkid_probe_get_size@plt+0x13924>
   1ae18:	ldr	r0, [r6, #8]
   1ae1c:	mov	r9, r8
   1ae20:	cmp	r0, #0
   1ae24:	beq	1b814 <blkid_probe_get_size@plt+0x142fc>
   1ae28:	ldr	r3, [pc, #-2844]	; 1a314 <blkid_probe_get_size@plt+0x12dfc>
   1ae2c:	mov	r2, #4
   1ae30:	add	r3, pc, r3
   1ae34:	bl	6a44 <qsort@plt>
   1ae38:	mov	r8, r9
   1ae3c:	mov	r0, r6
   1ae40:	bl	284e8 <blkid_probe_get_size@plt+0x20fd0>
   1ae44:	mov	r3, #1
   1ae48:	cmp	r8, #0
   1ae4c:	strb	r3, [r6, #24]
   1ae50:	str	r3, [r6, #4]
   1ae54:	beq	1af04 <blkid_probe_get_size@plt+0x139ec>
   1ae58:	ldr	r3, [pc, #-2888]	; 1a318 <blkid_probe_get_size@plt+0x12e00>
   1ae5c:	add	r3, pc, r3
   1ae60:	ldr	r3, [r3, #4]
   1ae64:	cmp	r3, #2
   1ae68:	rsble	r9, r8, #0
   1ae6c:	uxtble	r9, r9
   1ae70:	rsble	r9, r9, #0
   1ae74:	bgt	1b8a8 <blkid_probe_get_size@plt+0x14390>
   1ae78:	cmp	r7, #0
   1ae7c:	beq	19e28 <blkid_probe_get_size@plt+0x12910>
   1ae80:	ldr	r3, [pc, #-2924]	; 1a31c <blkid_probe_get_size@plt+0x12e04>
   1ae84:	mov	r0, r7
   1ae88:	mov	r2, #0
   1ae8c:	ldr	r1, [r4, r3]
   1ae90:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   1ae94:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1ae98:	ldr	r3, [pc, #-2944]	; 1a320 <blkid_probe_get_size@plt+0x12e08>
   1ae9c:	add	r3, pc, r3
   1aea0:	ldr	r3, [r3, #4]
   1aea4:	cmp	r3, #2
   1aea8:	ble	1ab38 <blkid_probe_get_size@plt+0x13620>
   1aeac:	ldr	r1, [r8]
   1aeb0:	ldr	r2, [pc, #-2964]	; 1a324 <blkid_probe_get_size@plt+0x12e0c>
   1aeb4:	ldr	r3, [pc, #-2964]	; 1a328 <blkid_probe_get_size@plt+0x12e10>
   1aeb8:	add	r2, pc, r2
   1aebc:	ldr	r1, [r6, r1, lsl #2]
   1aec0:	add	r3, pc, r3
   1aec4:	str	r2, [sp, #4]
   1aec8:	ldr	r2, [pc, #-2980]	; 1a32c <blkid_probe_get_size@plt+0x12e14>
   1aecc:	add	r3, r3, #1760	; 0x6e0
   1aed0:	str	r1, [sp, #8]
   1aed4:	str	r3, [sp]
   1aed8:	mov	r1, r0
   1aedc:	ldr	r3, [pc, #-2996]	; 1a330 <blkid_probe_get_size@plt+0x12e18>
   1aee0:	add	r2, pc, r2
   1aee4:	ldr	r0, [pc, #-2784]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1aee8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1aeec:	mov	r9, r0
   1aef0:	b	1ab44 <blkid_probe_get_size@plt+0x1362c>
   1aef4:	mov	r0, r6
   1aef8:	bl	2967c <blkid_probe_get_size@plt+0x22164>
   1aefc:	subs	r1, r0, #0
   1af00:	blt	1b338 <blkid_probe_get_size@plt+0x13e20>
   1af04:	ldr	r6, [sp, #60]	; 0x3c
   1af08:	mov	r0, r6
   1af0c:	bl	28460 <blkid_probe_get_size@plt+0x20f48>
   1af10:	cmp	r0, #0
   1af14:	beq	1b07c <blkid_probe_get_size@plt+0x13b64>
   1af18:	ldr	sl, [pc, #-3052]	; 1a334 <blkid_probe_get_size@plt+0x12e1c>
   1af1c:	add	r9, sp, #68	; 0x44
   1af20:	add	sl, pc, sl
   1af24:	add	sl, sl, #1968	; 0x7b0
   1af28:	add	sl, sl, #12
   1af2c:	ldr	fp, [sp, #36]	; 0x24
   1af30:	b	1af98 <blkid_probe_get_size@plt+0x13a80>
   1af34:	ldr	r1, [pc, #-3076]	; 1a338 <blkid_probe_get_size@plt+0x12e20>
   1af38:	mvn	r2, #0
   1af3c:	add	r1, pc, r1
   1af40:	ldr	r0, [sp, #68]	; 0x44
   1af44:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
   1af48:	subs	r8, r0, #0
   1af4c:	beq	1b050 <blkid_probe_get_size@plt+0x13b38>
   1af50:	mov	r1, fp
   1af54:	mov	r2, #32
   1af58:	bl	60e8c <blkid_probe_get_size@plt+0x59974>
   1af5c:	subs	r1, r0, #0
   1af60:	blt	1afe4 <blkid_probe_get_size@plt+0x13acc>
   1af64:	cmp	r7, #0
   1af68:	beq	1af80 <blkid_probe_get_size@plt+0x13a68>
   1af6c:	ldr	r1, [sp, #68]	; 0x44
   1af70:	mov	r0, r7
   1af74:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   1af78:	cmp	r0, #0
   1af7c:	blt	1b614 <blkid_probe_get_size@plt+0x140fc>
   1af80:	mov	r0, r8
   1af84:	bl	69f0 <free@plt>
   1af88:	mov	r0, r6
   1af8c:	bl	283d4 <blkid_probe_get_size@plt+0x20ebc>
   1af90:	cmp	r0, #0
   1af94:	beq	1b07c <blkid_probe_get_size@plt+0x13b64>
   1af98:	mov	r1, r9
   1af9c:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   1afa0:	cmp	r0, #0
   1afa4:	blt	1afd0 <blkid_probe_get_size@plt+0x13ab8>
   1afa8:	ldr	r3, [pc, #-3188]	; 1a33c <blkid_probe_get_size@plt+0x12e24>
   1afac:	add	r3, pc, r3
   1afb0:	ldrb	r3, [r3]
   1afb4:	cmp	r3, #0
   1afb8:	bne	1afd8 <blkid_probe_get_size@plt+0x13ac0>
   1afbc:	ldr	r3, [pc, #-3204]	; 1a340 <blkid_probe_get_size@plt+0x12e28>
   1afc0:	add	r3, pc, r3
   1afc4:	ldrb	r3, [r3, #1076]	; 0x434
   1afc8:	cmp	r3, #0
   1afcc:	beq	1af34 <blkid_probe_get_size@plt+0x13a1c>
   1afd0:	mov	r8, #0
   1afd4:	b	1af80 <blkid_probe_get_size@plt+0x13a68>
   1afd8:	ldr	r0, [sp, #68]	; 0x44
   1afdc:	bl	6b4c <puts@plt>
   1afe0:	b	1afbc <blkid_probe_get_size@plt+0x13aa4>
   1afe4:	ldr	r3, [pc, #-3240]	; 1a344 <blkid_probe_get_size@plt+0x12e2c>
   1afe8:	add	r3, pc, r3
   1afec:	ldr	r3, [r3, #4]
   1aff0:	cmp	r3, #6
   1aff4:	ble	1af80 <blkid_probe_get_size@plt+0x13a68>
   1aff8:	ldr	r3, [pc, #-3256]	; 1a348 <blkid_probe_get_size@plt+0x12e30>
   1affc:	ldr	r2, [pc, #-3256]	; 1a34c <blkid_probe_get_size@plt+0x12e34>
   1b000:	add	r3, pc, r3
   1b004:	str	r3, [sp, #4]
   1b008:	str	r8, [sp, #12]
   1b00c:	str	fp, [sp, #8]
   1b010:	str	sl, [sp]
   1b014:	mov	r3, #47	; 0x2f
   1b018:	add	r2, pc, r2
   1b01c:	ldr	r0, [pc, #-3284]	; 1a350 <blkid_probe_get_size@plt+0x12e38>
   1b020:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b024:	b	1af80 <blkid_probe_get_size@plt+0x13a68>
   1b028:	ldr	r3, [pc, #-3292]	; 1a354 <blkid_probe_get_size@plt+0x12e3c>
   1b02c:	ldr	r1, [pc, #-3292]	; 1a358 <blkid_probe_get_size@plt+0x12e40>
   1b030:	add	r3, pc, r3
   1b034:	ldr	r2, [pc, #-3296]	; 1a35c <blkid_probe_get_size@plt+0x12e44>
   1b038:	add	r3, r3, #1760	; 0x6e0
   1b03c:	add	r1, pc, r1
   1b040:	mov	r0, #1
   1b044:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b048:	mov	r9, r0
   1b04c:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1b050:	ldr	r3, [pc, #-3320]	; 1a360 <blkid_probe_get_size@plt+0x12e48>
   1b054:	ldr	r1, [pc, #-3320]	; 1a364 <blkid_probe_get_size@plt+0x12e4c>
   1b058:	add	r3, pc, r3
   1b05c:	add	r3, r3, #1968	; 0x7b0
   1b060:	mov	r2, #43	; 0x2b
   1b064:	add	r3, r3, #12
   1b068:	add	r1, pc, r1
   1b06c:	mov	r0, #1
   1b070:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b074:	subs	r9, r0, #0
   1b078:	blt	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b07c:	ldr	r6, [sp, #52]	; 0x34
   1b080:	cmp	r6, #0
   1b084:	beq	1b3bc <blkid_probe_get_size@plt+0x13ea4>
   1b088:	mov	r0, r7
   1b08c:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1b090:	cmp	r0, #0
   1b094:	bne	1b35c <blkid_probe_get_size@plt+0x13e44>
   1b098:	cmp	r7, #0
   1b09c:	bne	1b668 <blkid_probe_get_size@plt+0x14150>
   1b0a0:	mov	r9, r7
   1b0a4:	b	19e34 <blkid_probe_get_size@plt+0x1291c>
   1b0a8:	ldr	r3, [pc, #-3400]	; 1a368 <blkid_probe_get_size@plt+0x12e50>
   1b0ac:	ldr	r1, [pc, #-3400]	; 1a36c <blkid_probe_get_size@plt+0x12e54>
   1b0b0:	add	r3, pc, r3
   1b0b4:	mov	r2, #237	; 0xed
   1b0b8:	add	r3, r3, #1760	; 0x6e0
   1b0bc:	add	r1, pc, r1
   1b0c0:	mov	r0, #1
   1b0c4:	ldr	r5, [sp, #16]
   1b0c8:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b0cc:	mov	r9, r0
   1b0d0:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b0d4:	ldr	r3, [pc, #-3436]	; 1a370 <blkid_probe_get_size@plt+0x12e58>
   1b0d8:	mov	r4, r5
   1b0dc:	add	r3, pc, r3
   1b0e0:	mov	r1, r0
   1b0e4:	ldr	r3, [r3, #4]
   1b0e8:	ldr	r5, [sp, #16]
   1b0ec:	cmp	r3, #2
   1b0f0:	ble	1a79c <blkid_probe_get_size@plt+0x13284>
   1b0f4:	ldr	r2, [pc, #-3464]	; 1a374 <blkid_probe_get_size@plt+0x12e5c>
   1b0f8:	ldr	r3, [pc, #-3464]	; 1a378 <blkid_probe_get_size@plt+0x12e60>
   1b0fc:	add	r2, pc, r2
   1b100:	ldr	r0, [r4]
   1b104:	add	r3, pc, r3
   1b108:	str	r2, [sp, #4]
   1b10c:	ldr	r2, [pc, #-3480]	; 1a37c <blkid_probe_get_size@plt+0x12e64>
   1b110:	add	r3, r3, #1760	; 0x6e0
   1b114:	str	r0, [sp, #8]
   1b118:	str	r3, [sp]
   1b11c:	add	r2, pc, r2
   1b120:	ldr	r3, [pc, #-3496]	; 1a380 <blkid_probe_get_size@plt+0x12e68>
   1b124:	ldr	r0, [pc, #-3360]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b128:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b12c:	mov	r9, r0
   1b130:	b	1a7a8 <blkid_probe_get_size@plt+0x13290>
   1b134:	ldr	r3, [pc, #-3512]	; 1a384 <blkid_probe_get_size@plt+0x12e6c>
   1b138:	ldr	r1, [pc, #-3512]	; 1a388 <blkid_probe_get_size@plt+0x12e70>
   1b13c:	add	r3, pc, r3
   1b140:	mov	r2, #229	; 0xe5
   1b144:	add	r3, r3, #1760	; 0x6e0
   1b148:	add	r1, pc, r1
   1b14c:	mov	r0, #1
   1b150:	ldr	r5, [sp, #16]
   1b154:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b158:	mov	r9, r0
   1b15c:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b160:	ldr	r3, [pc, #-3548]	; 1a38c <blkid_probe_get_size@plt+0x12e74>
   1b164:	ldr	r1, [pc, #-3548]	; 1a390 <blkid_probe_get_size@plt+0x12e78>
   1b168:	add	r3, pc, r3
   1b16c:	mov	r2, #221	; 0xdd
   1b170:	add	r3, r3, #1760	; 0x6e0
   1b174:	add	r1, pc, r1
   1b178:	mov	r0, #1
   1b17c:	ldr	r5, [sp, #16]
   1b180:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b184:	mov	r9, r0
   1b188:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b18c:	ldr	r3, [pc, #-3584]	; 1a394 <blkid_probe_get_size@plt+0x12e7c>
   1b190:	mov	r1, r0
   1b194:	add	r3, pc, r3
   1b198:	ldr	r5, [sp, #16]
   1b19c:	ldr	r3, [r3, #4]
   1b1a0:	cmp	r3, #2
   1b1a4:	ble	1a79c <blkid_probe_get_size@plt+0x13284>
   1b1a8:	ldr	r2, [pc, #-3608]	; 1a398 <blkid_probe_get_size@plt+0x12e80>
   1b1ac:	ldr	r3, [pc, #-3608]	; 1a39c <blkid_probe_get_size@plt+0x12e84>
   1b1b0:	add	r2, pc, r2
   1b1b4:	ldr	r0, [r8]
   1b1b8:	add	r3, pc, r3
   1b1bc:	str	r2, [sp, #4]
   1b1c0:	ldr	r2, [pc, #-3624]	; 1a3a0 <blkid_probe_get_size@plt+0x12e88>
   1b1c4:	add	r3, r3, #1760	; 0x6e0
   1b1c8:	str	r0, [sp, #8]
   1b1cc:	str	r3, [sp]
   1b1d0:	add	r2, pc, r2
   1b1d4:	ldr	r3, [pc, #-3640]	; 1a3a4 <blkid_probe_get_size@plt+0x12e8c>
   1b1d8:	ldr	r0, [pc, #-3540]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b1dc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b1e0:	mov	r9, r0
   1b1e4:	b	1a7a8 <blkid_probe_get_size@plt+0x13290>
   1b1e8:	ldr	r1, [r8]
   1b1ec:	ldr	r2, [pc, #-3660]	; 1a3a8 <blkid_probe_get_size@plt+0x12e90>
   1b1f0:	ldr	r3, [pc, #-3660]	; 1a3ac <blkid_probe_get_size@plt+0x12e94>
   1b1f4:	add	r2, pc, r2
   1b1f8:	ldr	r1, [r6, r1, lsl #2]
   1b1fc:	add	r3, pc, r3
   1b200:	str	r2, [sp, #4]
   1b204:	ldr	r2, [pc, #-3676]	; 1a3b0 <blkid_probe_get_size@plt+0x12e98>
   1b208:	add	r3, r3, #1760	; 0x6e0
   1b20c:	str	r1, [sp, #8]
   1b210:	str	r3, [sp]
   1b214:	mov	r1, r0
   1b218:	ldr	r3, [pc, #-3692]	; 1a3b4 <blkid_probe_get_size@plt+0x12e9c>
   1b21c:	add	r2, pc, r2
   1b220:	ldr	r0, [pc, #-3612]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b224:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b228:	mov	r9, r0
   1b22c:	b	1ab44 <blkid_probe_get_size@plt+0x1362c>
   1b230:	bl	6fb4 <__stack_chk_fail@plt>
   1b234:	ldr	r0, [pc, #-3716]	; 1a3b8 <blkid_probe_get_size@plt+0x12ea0>
   1b238:	mov	r1, #2
   1b23c:	add	r0, pc, r0
   1b240:	bl	43fb0 <blkid_probe_get_size@plt+0x3ca98>
   1b244:	subs	r7, r0, #0
   1b248:	beq	1b748 <blkid_probe_get_size@plt+0x14230>
   1b24c:	add	r0, sp, #52	; 0x34
   1b250:	bl	31f4c <blkid_probe_get_size@plt+0x2aa34>
   1b254:	subs	r1, r0, #0
   1b258:	bge	1b6e8 <blkid_probe_get_size@plt+0x141d0>
   1b25c:	ldr	r3, [pc, #-3752]	; 1a3bc <blkid_probe_get_size@plt+0x12ea4>
   1b260:	add	r3, pc, r3
   1b264:	ldr	r3, [r3, #4]
   1b268:	cmp	r3, #2
   1b26c:	bgt	1b6b0 <blkid_probe_get_size@plt+0x14198>
   1b270:	rsb	r9, r1, #0
   1b274:	uxtb	r9, r9
   1b278:	rsb	r9, r9, #0
   1b27c:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b280:	ldr	r3, [pc, #-3784]	; 1a3c0 <blkid_probe_get_size@plt+0x12ea8>
   1b284:	mov	r1, r0
   1b288:	add	r3, pc, r3
   1b28c:	ldr	r5, [sp, #16]
   1b290:	ldr	r3, [r3, #4]
   1b294:	cmp	r3, #2
   1b298:	ble	1a79c <blkid_probe_get_size@plt+0x13284>
   1b29c:	ldr	r2, [pc, #-3808]	; 1a3c4 <blkid_probe_get_size@plt+0x12eac>
   1b2a0:	ldr	r3, [pc, #-3808]	; 1a3c8 <blkid_probe_get_size@plt+0x12eb0>
   1b2a4:	add	r2, pc, r2
   1b2a8:	ldr	r0, [r8]
   1b2ac:	add	r3, pc, r3
   1b2b0:	str	r2, [sp, #4]
   1b2b4:	ldr	r2, [pc, #-3824]	; 1a3cc <blkid_probe_get_size@plt+0x12eb4>
   1b2b8:	add	r3, r3, #1760	; 0x6e0
   1b2bc:	str	r0, [sp, #8]
   1b2c0:	str	r3, [sp]
   1b2c4:	add	r2, pc, r2
   1b2c8:	ldr	r3, [pc, #-3840]	; 1a3d0 <blkid_probe_get_size@plt+0x12eb8>
   1b2cc:	ldr	r0, [pc, #-3784]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b2d0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b2d4:	mov	r9, r0
   1b2d8:	b	1a7a8 <blkid_probe_get_size@plt+0x13290>
   1b2dc:	ldr	r3, [pc, #-3856]	; 1a3d4 <blkid_probe_get_size@plt+0x12ebc>
   1b2e0:	ldr	r5, [sp, #16]
   1b2e4:	add	r3, pc, r3
   1b2e8:	ldr	r3, [r3, #4]
   1b2ec:	cmp	r3, #2
   1b2f0:	ble	1a4b8 <blkid_probe_get_size@plt+0x12fa0>
   1b2f4:	ldr	r2, [pc, #-3876]	; 1a3d8 <blkid_probe_get_size@plt+0x12ec0>
   1b2f8:	ldr	r3, [pc, #-3876]	; 1a3dc <blkid_probe_get_size@plt+0x12ec4>
   1b2fc:	add	r2, pc, r2
   1b300:	str	r2, [sp, #4]
   1b304:	add	r3, pc, r3
   1b308:	ldr	r2, [pc, #-3888]	; 1a3e0 <blkid_probe_get_size@plt+0x12ec8>
   1b30c:	add	r3, r3, #1760	; 0x6e0
   1b310:	str	r3, [sp]
   1b314:	str	r8, [sp, #8]
   1b318:	mov	r3, #199	; 0xc7
   1b31c:	add	r2, pc, r2
   1b320:	mov	r1, #1073741846	; 0x40000016
   1b324:	ldr	r0, [pc, #-3872]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b328:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b32c:	mov	sl, #0
   1b330:	mov	r9, r0
   1b334:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b338:	ldr	r3, [pc, #-3932]	; 1a3e4 <blkid_probe_get_size@plt+0x12ecc>
   1b33c:	add	r3, pc, r3
   1b340:	ldr	r3, [r3, #4]
   1b344:	cmp	r3, #2
   1b348:	bgt	1b3cc <blkid_probe_get_size@plt+0x13eb4>
   1b34c:	rsb	r9, r1, #0
   1b350:	uxtb	r9, r9
   1b354:	rsb	r9, r9, #0
   1b358:	b	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b35c:	mov	r0, r6
   1b360:	bl	3370c <blkid_probe_get_size@plt+0x2c1f4>
   1b364:	subs	r1, r0, #0
   1b368:	movge	r9, #0
   1b36c:	bge	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b370:	ldr	r3, [pc, #-3984]	; 1a3e8 <blkid_probe_get_size@plt+0x12ed0>
   1b374:	add	r3, pc, r3
   1b378:	ldr	r3, [r3, #4]
   1b37c:	cmp	r3, #2
   1b380:	ble	1b34c <blkid_probe_get_size@plt+0x13e34>
   1b384:	ldr	r2, [pc, #-4000]	; 1a3ec <blkid_probe_get_size@plt+0x12ed4>
   1b388:	ldr	r3, [pc, #-4000]	; 1a3f0 <blkid_probe_get_size@plt+0x12ed8>
   1b38c:	add	r2, pc, r2
   1b390:	str	r2, [sp, #4]
   1b394:	add	r3, pc, r3
   1b398:	ldr	r2, [pc, #-4012]	; 1a3f4 <blkid_probe_get_size@plt+0x12edc>
   1b39c:	add	r3, r3, #1760	; 0x6e0
   1b3a0:	str	r3, [sp]
   1b3a4:	add	r2, pc, r2
   1b3a8:	ldr	r3, [pc, #-4024]	; 1a3f8 <blkid_probe_get_size@plt+0x12ee0>
   1b3ac:	ldr	r0, [pc, #-4008]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b3b0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b3b4:	mov	r9, r0
   1b3b8:	b	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b3bc:	cmp	r7, #0
   1b3c0:	bne	1b8a0 <blkid_probe_get_size@plt+0x14388>
   1b3c4:	mov	r9, r7
   1b3c8:	b	19e3c <blkid_probe_get_size@plt+0x12924>
   1b3cc:	ldr	r2, [pc, #-4056]	; 1a3fc <blkid_probe_get_size@plt+0x12ee4>
   1b3d0:	ldr	r3, [pc, #-4056]	; 1a400 <blkid_probe_get_size@plt+0x12ee8>
   1b3d4:	add	r2, pc, r2
   1b3d8:	str	r2, [sp, #4]
   1b3dc:	add	r3, pc, r3
   1b3e0:	ldr	r2, [pc, #-4068]	; 1a404 <blkid_probe_get_size@plt+0x12eec>
   1b3e4:	add	r3, r3, #1760	; 0x6e0
   1b3e8:	str	r3, [sp]
   1b3ec:	add	r2, pc, r2
   1b3f0:	ldr	r3, [pc, #-4080]	; 1a408 <blkid_probe_get_size@plt+0x12ef0>
   1b3f4:	ldr	r0, [pc, #-4080]	; 1a40c <blkid_probe_get_size@plt+0x12ef4>
   1b3f8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b3fc:	mov	r9, r0
   1b400:	b	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b404:	mov	r1, r9
   1b408:	mov	r3, sl
   1b40c:	mov	r2, sl
   1b410:	mov	r0, r6
   1b414:	bl	2946c <blkid_probe_get_size@plt+0x21f54>
   1b418:	subs	r9, r0, #0
   1b41c:	bge	1ae0c <blkid_probe_get_size@plt+0x138f4>
   1b420:	ldr	r3, [pc, #1212]	; 1b8e4 <blkid_probe_get_size@plt+0x143cc>
   1b424:	add	r3, pc, r3
   1b428:	ldr	r3, [r3]
   1b42c:	cmp	r3, #6
   1b430:	ble	1b46c <blkid_probe_get_size@plt+0x13f54>
   1b434:	ldr	r3, [pc, #1196]	; 1b8e8 <blkid_probe_get_size@plt+0x143d0>
   1b438:	ldr	r2, [pc, #1196]	; 1b8ec <blkid_probe_get_size@plt+0x143d4>
   1b43c:	add	r3, pc, r3
   1b440:	add	r2, pc, r2
   1b444:	add	r3, r3, #1936	; 0x790
   1b448:	str	r2, [sp, #4]
   1b44c:	ldr	r2, [pc, #1180]	; 1b8f0 <blkid_probe_get_size@plt+0x143d8>
   1b450:	add	r3, r3, #8
   1b454:	str	r3, [sp]
   1b458:	add	r2, pc, r2
   1b45c:	ldr	r3, [pc, #1168]	; 1b8f4 <blkid_probe_get_size@plt+0x143dc>
   1b460:	mov	r1, r9
   1b464:	mov	r0, #7
   1b468:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b46c:	ldrd	r0, [r6, #8]
   1b470:	cmp	r1, #1
   1b474:	bhi	1ae20 <blkid_probe_get_size@plt+0x13908>
   1b478:	mov	r0, r6
   1b47c:	bl	284e8 <blkid_probe_get_size@plt+0x20fd0>
   1b480:	mov	r3, #1
   1b484:	mov	r8, r9
   1b488:	strb	r3, [r6, #24]
   1b48c:	str	r3, [r6, #4]
   1b490:	b	1ae58 <blkid_probe_get_size@plt+0x13940>
   1b494:	mov	r3, #0
   1b498:	mov	r1, r9
   1b49c:	mov	r2, r3
   1b4a0:	mov	r0, r6
   1b4a4:	bl	28e44 <blkid_probe_get_size@plt+0x2192c>
   1b4a8:	subs	r1, r0, #0
   1b4ac:	bge	1adf0 <blkid_probe_get_size@plt+0x138d8>
   1b4b0:	ldr	r3, [pc, #1088]	; 1b8f8 <blkid_probe_get_size@plt+0x143e0>
   1b4b4:	add	r3, pc, r3
   1b4b8:	ldr	r3, [r3]
   1b4bc:	cmp	r3, #6
   1b4c0:	movle	r8, r1
   1b4c4:	ble	1adf0 <blkid_probe_get_size@plt+0x138d8>
   1b4c8:	ldr	r3, [pc, #1068]	; 1b8fc <blkid_probe_get_size@plt+0x143e4>
   1b4cc:	ldr	r2, [pc, #1068]	; 1b900 <blkid_probe_get_size@plt+0x143e8>
   1b4d0:	add	r3, pc, r3
   1b4d4:	add	r2, pc, r2
   1b4d8:	str	r2, [sp, #4]
   1b4dc:	add	r3, r3, #1936	; 0x790
   1b4e0:	ldr	r2, [pc, #1052]	; 1b904 <blkid_probe_get_size@plt+0x143ec>
   1b4e4:	add	r3, r3, #8
   1b4e8:	str	r3, [sp]
   1b4ec:	add	r2, pc, r2
   1b4f0:	mov	r3, #920	; 0x398
   1b4f4:	mov	r0, #7
   1b4f8:	mov	r8, r1
   1b4fc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b500:	b	1adf0 <blkid_probe_get_size@plt+0x138d8>
   1b504:	ldr	r9, [pc, #1020]	; 1b908 <blkid_probe_get_size@plt+0x143f0>
   1b508:	add	r9, pc, r9
   1b50c:	b	1add8 <blkid_probe_get_size@plt+0x138c0>
   1b510:	mov	r3, r8
   1b514:	mov	r2, r8
   1b518:	mov	r1, r9
   1b51c:	mov	r0, r6
   1b520:	bl	28e44 <blkid_probe_get_size@plt+0x2192c>
   1b524:	subs	r8, r0, #0
   1b528:	bge	1adb4 <blkid_probe_get_size@plt+0x1389c>
   1b52c:	ldr	r3, [pc, #984]	; 1b90c <blkid_probe_get_size@plt+0x143f4>
   1b530:	add	r3, pc, r3
   1b534:	ldr	r3, [r3]
   1b538:	cmp	r3, #6
   1b53c:	ble	1adb8 <blkid_probe_get_size@plt+0x138a0>
   1b540:	ldr	r3, [pc, #968]	; 1b910 <blkid_probe_get_size@plt+0x143f8>
   1b544:	ldr	r2, [pc, #968]	; 1b914 <blkid_probe_get_size@plt+0x143fc>
   1b548:	add	r3, pc, r3
   1b54c:	add	r2, pc, r2
   1b550:	str	r2, [sp, #4]
   1b554:	add	r3, r3, #1936	; 0x790
   1b558:	ldr	r2, [pc, #952]	; 1b918 <blkid_probe_get_size@plt+0x14400>
   1b55c:	add	r3, r3, #8
   1b560:	str	r3, [sp]
   1b564:	add	r2, pc, r2
   1b568:	ldr	r3, [pc, #940]	; 1b91c <blkid_probe_get_size@plt+0x14404>
   1b56c:	mov	r1, r8
   1b570:	mov	r0, #7
   1b574:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b578:	b	1adb8 <blkid_probe_get_size@plt+0x138a0>
   1b57c:	ldr	r2, [pc, #924]	; 1b920 <blkid_probe_get_size@plt+0x14408>
   1b580:	ldr	r3, [pc, #924]	; 1b924 <blkid_probe_get_size@plt+0x1440c>
   1b584:	add	r2, pc, r2
   1b588:	ldr	r0, [sp, #68]	; 0x44
   1b58c:	ldr	ip, [sp, #64]	; 0x40
   1b590:	str	r2, [sp, #4]
   1b594:	add	r3, pc, r3
   1b598:	ldr	r2, [pc, #904]	; 1b928 <blkid_probe_get_size@plt+0x14410>
   1b59c:	add	r3, r3, #1760	; 0x6e0
   1b5a0:	str	r3, [sp]
   1b5a4:	str	r0, [sp, #8]
   1b5a8:	str	ip, [sp, #12]
   1b5ac:	mov	r3, #232	; 0xe8
   1b5b0:	add	r2, pc, r2
   1b5b4:	ldr	r0, [pc, #880]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b5b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b5bc:	mov	r9, r0
   1b5c0:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b5c4:	ldr	r2, [pc, #868]	; 1b930 <blkid_probe_get_size@plt+0x14418>
   1b5c8:	ldr	r3, [pc, #868]	; 1b934 <blkid_probe_get_size@plt+0x1441c>
   1b5cc:	add	r2, pc, r2
   1b5d0:	ldr	r0, [r4]
   1b5d4:	add	r3, pc, r3
   1b5d8:	str	r2, [sp, #4]
   1b5dc:	ldr	r2, [pc, #852]	; 1b938 <blkid_probe_get_size@plt+0x14420>
   1b5e0:	add	r3, r3, #1760	; 0x6e0
   1b5e4:	str	r0, [sp, #8]
   1b5e8:	str	r3, [sp]
   1b5ec:	add	r2, pc, r2
   1b5f0:	mov	r3, #211	; 0xd3
   1b5f4:	ldr	r0, [pc, #816]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b5f8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b5fc:	mov	sl, #0
   1b600:	mov	r9, r0
   1b604:	b	1a178 <blkid_probe_get_size@plt+0x12c60>
   1b608:	ldr	r5, [sp, #16]
   1b60c:	mvn	r1, #11
   1b610:	b	1a548 <blkid_probe_get_size@plt+0x13030>
   1b614:	ldr	r3, [pc, #800]	; 1b93c <blkid_probe_get_size@plt+0x14424>
   1b618:	ldr	r1, [pc, #800]	; 1b940 <blkid_probe_get_size@plt+0x14428>
   1b61c:	add	r3, pc, r3
   1b620:	add	r3, r3, #1968	; 0x7b0
   1b624:	mov	r2, #54	; 0x36
   1b628:	add	r3, r3, #12
   1b62c:	add	r1, pc, r1
   1b630:	mov	r0, #1
   1b634:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b638:	mov	r9, r0
   1b63c:	mov	r0, r8
   1b640:	bl	69f0 <free@plt>
   1b644:	cmp	r9, #0
   1b648:	blt	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b64c:	ldr	r6, [sp, #52]	; 0x34
   1b650:	cmp	r6, #0
   1b654:	beq	1b8a0 <blkid_probe_get_size@plt+0x14388>
   1b658:	mov	r0, r7
   1b65c:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1b660:	cmp	r0, #0
   1b664:	bne	1b35c <blkid_probe_get_size@plt+0x13e44>
   1b668:	mov	r9, r0
   1b66c:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b670:	ldr	r2, [pc, #716]	; 1b944 <blkid_probe_get_size@plt+0x1442c>
   1b674:	ldr	r3, [pc, #716]	; 1b948 <blkid_probe_get_size@plt+0x14430>
   1b678:	add	r2, pc, r2
   1b67c:	ldr	r0, [r4]
   1b680:	add	r3, pc, r3
   1b684:	str	r2, [sp, #4]
   1b688:	ldr	r2, [pc, #700]	; 1b94c <blkid_probe_get_size@plt+0x14434>
   1b68c:	add	r3, r3, #1760	; 0x6e0
   1b690:	str	r0, [sp, #8]
   1b694:	str	r3, [sp]
   1b698:	add	r2, pc, r2
   1b69c:	ldr	r3, [pc, #684]	; 1b950 <blkid_probe_get_size@plt+0x14438>
   1b6a0:	ldr	r0, [pc, #644]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b6a4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b6a8:	mov	r9, r0
   1b6ac:	b	1a7a8 <blkid_probe_get_size@plt+0x13290>
   1b6b0:	ldr	r2, [pc, #668]	; 1b954 <blkid_probe_get_size@plt+0x1443c>
   1b6b4:	ldr	r3, [pc, #668]	; 1b958 <blkid_probe_get_size@plt+0x14440>
   1b6b8:	add	r2, pc, r2
   1b6bc:	str	r2, [sp, #4]
   1b6c0:	add	r3, pc, r3
   1b6c4:	ldr	r2, [pc, #656]	; 1b95c <blkid_probe_get_size@plt+0x14444>
   1b6c8:	add	r3, r3, #1760	; 0x6e0
   1b6cc:	str	r3, [sp]
   1b6d0:	add	r2, pc, r2
   1b6d4:	ldr	r3, [pc, #644]	; 1b960 <blkid_probe_get_size@plt+0x14448>
   1b6d8:	ldr	r0, [pc, #588]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b6dc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b6e0:	mov	r9, r0
   1b6e4:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b6e8:	mov	r1, #2
   1b6ec:	add	r0, sp, #56	; 0x38
   1b6f0:	bl	4b1bc <blkid_probe_get_size@plt+0x43ca4>
   1b6f4:	subs	r1, r0, #0
   1b6f8:	bge	1b770 <blkid_probe_get_size@plt+0x14258>
   1b6fc:	ldr	r3, [pc, #608]	; 1b964 <blkid_probe_get_size@plt+0x1444c>
   1b700:	add	r3, pc, r3
   1b704:	ldr	r3, [r3, #4]
   1b708:	cmp	r3, #2
   1b70c:	ble	1b270 <blkid_probe_get_size@plt+0x13d58>
   1b710:	ldr	r2, [pc, #592]	; 1b968 <blkid_probe_get_size@plt+0x14450>
   1b714:	ldr	r3, [pc, #592]	; 1b96c <blkid_probe_get_size@plt+0x14454>
   1b718:	add	r2, pc, r2
   1b71c:	str	r2, [sp, #4]
   1b720:	add	r3, pc, r3
   1b724:	ldr	r2, [pc, #580]	; 1b970 <blkid_probe_get_size@plt+0x14458>
   1b728:	add	r3, r3, #1760	; 0x6e0
   1b72c:	str	r3, [sp]
   1b730:	add	r2, pc, r2
   1b734:	ldr	r3, [pc, #568]	; 1b974 <blkid_probe_get_size@plt+0x1445c>
   1b738:	ldr	r0, [pc, #492]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b73c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b740:	mov	r9, r0
   1b744:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b748:	ldr	r3, [pc, #552]	; 1b978 <blkid_probe_get_size@plt+0x14460>
   1b74c:	ldr	r1, [pc, #552]	; 1b97c <blkid_probe_get_size@plt+0x14464>
   1b750:	add	r3, pc, r3
   1b754:	ldr	r2, [pc, #548]	; 1b980 <blkid_probe_get_size@plt+0x14468>
   1b758:	add	r3, r3, #1760	; 0x6e0
   1b75c:	add	r1, pc, r1
   1b760:	mov	r0, #1
   1b764:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1b768:	mov	r9, r0
   1b76c:	b	19e28 <blkid_probe_get_size@plt+0x12910>
   1b770:	ldr	r1, [sp, #52]	; 0x34
   1b774:	ldr	r0, [sp, #56]	; 0x38
   1b778:	bl	27fb4 <blkid_probe_get_size@plt+0x20a9c>
   1b77c:	subs	r1, r0, #0
   1b780:	bge	1b838 <blkid_probe_get_size@plt+0x14320>
   1b784:	ldr	r3, [pc, #504]	; 1b984 <blkid_probe_get_size@plt+0x1446c>
   1b788:	add	r3, pc, r3
   1b78c:	ldr	r3, [r3, #4]
   1b790:	cmp	r3, #2
   1b794:	ble	1b270 <blkid_probe_get_size@plt+0x13d58>
   1b798:	ldr	r2, [pc, #488]	; 1b988 <blkid_probe_get_size@plt+0x14470>
   1b79c:	ldr	r3, [pc, #488]	; 1b98c <blkid_probe_get_size@plt+0x14474>
   1b7a0:	add	r2, pc, r2
   1b7a4:	str	r2, [sp, #4]
   1b7a8:	add	r3, pc, r3
   1b7ac:	ldr	r2, [pc, #476]	; 1b990 <blkid_probe_get_size@plt+0x14478>
   1b7b0:	add	r3, r3, #1760	; 0x6e0
   1b7b4:	str	r3, [sp]
   1b7b8:	add	r2, pc, r2
   1b7bc:	ldr	r3, [pc, #464]	; 1b994 <blkid_probe_get_size@plt+0x1447c>
   1b7c0:	ldr	r0, [pc, #356]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b7c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b7c8:	mov	r9, r0
   1b7cc:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b7d0:	ldr	r3, [pc, #448]	; 1b998 <blkid_probe_get_size@plt+0x14480>
   1b7d4:	ldr	r2, [pc, #448]	; 1b99c <blkid_probe_get_size@plt+0x14484>
   1b7d8:	add	r3, pc, r3
   1b7dc:	add	r3, r3, #1904	; 0x770
   1b7e0:	ldr	r1, [pc, #440]	; 1b9a0 <blkid_probe_get_size@plt+0x14488>
   1b7e4:	add	r3, r3, #4
   1b7e8:	str	r3, [sp]
   1b7ec:	mov	r0, r6
   1b7f0:	ldr	r3, [pc, #428]	; 1b9a4 <blkid_probe_get_size@plt+0x1448c>
   1b7f4:	add	r2, pc, r2
   1b7f8:	add	r1, pc, r1
   1b7fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1b800:	ldr	r0, [sp, #44]	; 0x2c
   1b804:	ldr	r5, [sp, #16]
   1b808:	bl	69f0 <free@plt>
   1b80c:	mvn	r1, #11
   1b810:	b	1a548 <blkid_probe_get_size@plt+0x13030>
   1b814:	ldr	r3, [pc, #396]	; 1b9a8 <blkid_probe_get_size@plt+0x14490>
   1b818:	ldr	r2, [pc, #396]	; 1b9ac <blkid_probe_get_size@plt+0x14494>
   1b81c:	ldr	r1, [pc, #396]	; 1b9b0 <blkid_probe_get_size@plt+0x14498>
   1b820:	add	r3, pc, r3
   1b824:	str	r3, [sp]
   1b828:	add	r2, pc, r2
   1b82c:	mov	r3, #107	; 0x6b
   1b830:	add	r1, pc, r1
   1b834:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1b838:	ldr	r1, [pc, #372]	; 1b9b4 <blkid_probe_get_size@plt+0x1449c>
   1b83c:	mov	r2, r7
   1b840:	add	r1, pc, r1
   1b844:	ldr	r0, [sp, #56]	; 0x38
   1b848:	bl	28094 <blkid_probe_get_size@plt+0x20b7c>
   1b84c:	subs	r1, r0, #0
   1b850:	bge	1ad34 <blkid_probe_get_size@plt+0x1381c>
   1b854:	ldr	r3, [pc, #348]	; 1b9b8 <blkid_probe_get_size@plt+0x144a0>
   1b858:	add	r3, pc, r3
   1b85c:	ldr	r3, [r3, #4]
   1b860:	cmp	r3, #2
   1b864:	ble	1b270 <blkid_probe_get_size@plt+0x13d58>
   1b868:	ldr	r2, [pc, #332]	; 1b9bc <blkid_probe_get_size@plt+0x144a4>
   1b86c:	ldr	r3, [pc, #332]	; 1b9c0 <blkid_probe_get_size@plt+0x144a8>
   1b870:	add	r2, pc, r2
   1b874:	str	r2, [sp, #4]
   1b878:	add	r3, pc, r3
   1b87c:	ldr	r2, [pc, #320]	; 1b9c4 <blkid_probe_get_size@plt+0x144ac>
   1b880:	add	r3, r3, #1760	; 0x6e0
   1b884:	str	r3, [sp]
   1b888:	add	r2, pc, r2
   1b88c:	ldr	r3, [pc, #308]	; 1b9c8 <blkid_probe_get_size@plt+0x144b0>
   1b890:	ldr	r0, [pc, #148]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b894:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b898:	mov	r9, r0
   1b89c:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b8a0:	mov	r9, r6
   1b8a4:	b	1ae80 <blkid_probe_get_size@plt+0x13968>
   1b8a8:	ldr	r2, [pc, #284]	; 1b9cc <blkid_probe_get_size@plt+0x144b4>
   1b8ac:	ldr	r3, [pc, #284]	; 1b9d0 <blkid_probe_get_size@plt+0x144b8>
   1b8b0:	add	r2, pc, r2
   1b8b4:	str	r2, [sp, #4]
   1b8b8:	add	r3, pc, r3
   1b8bc:	ldr	r2, [pc, #272]	; 1b9d4 <blkid_probe_get_size@plt+0x144bc>
   1b8c0:	add	r3, r3, #1760	; 0x6e0
   1b8c4:	str	r3, [sp]
   1b8c8:	mov	r1, r8
   1b8cc:	ldr	r3, [pc, #260]	; 1b9d8 <blkid_probe_get_size@plt+0x144c0>
   1b8d0:	add	r2, pc, r2
   1b8d4:	ldr	r0, [pc, #80]	; 1b92c <blkid_probe_get_size@plt+0x14414>
   1b8d8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1b8dc:	mov	r9, r0
   1b8e0:	b	1ae78 <blkid_probe_get_size@plt+0x13960>
   1b8e4:	andeq	ip, r7, r8, lsl sp
   1b8e8:	muleq	r4, r4, r1
   1b8ec:	andeq	sp, r4, ip, lsr #8
   1b8f0:	andeq	sl, r4, ip, asr #15
   1b8f4:	andeq	r0, r0, r1, lsr #7
   1b8f8:	andeq	ip, r7, r8, lsl #25
   1b8fc:	andeq	r9, r4, r0, lsl #2
   1b900:	andeq	sp, r4, ip, asr r3
   1b904:	andeq	sl, r4, r8, lsr r7
   1b908:	andeq	fp, r4, ip, lsl r9
   1b90c:	andeq	ip, r7, ip, lsl #24
   1b910:	andeq	r9, r4, r8, lsl #1
   1b914:	andeq	sp, r4, r0, lsr #5
   1b918:	andeq	sl, r4, r0, asr #13
   1b91c:	andeq	r0, r0, sl, lsl #7
   1b920:	muleq	r4, ip, sl
   1b924:	andeq	r9, r4, ip, lsr r0
   1b928:	andeq	r9, r4, r0, lsl #29
   1b92c:	andeq	r0, r0, r3, lsl #8
   1b930:	ldrdeq	ip, [r4], -r4
   1b934:	strdeq	r8, [r4], -ip
   1b938:	andeq	r9, r4, r4, asr #28
   1b93c:			; <UNDEFINED> instruction: 0x00048fb4
   1b940:	andeq	r9, r4, r4, lsl #28
   1b944:	andeq	ip, r4, r4, lsl #21
   1b948:	andeq	r8, r4, r0, asr pc
   1b94c:	muleq	r4, r8, sp
   1b950:	andeq	r0, r0, r5, lsl r1
   1b954:	strheq	sp, [r4], -r0
   1b958:	andeq	r8, r4, r0, lsl pc
   1b95c:	andeq	r9, r4, r0, ror #26
   1b960:	andeq	r0, r0, r3, asr r1
   1b964:	andeq	ip, r7, ip, lsr sl
   1b968:	andeq	sp, r4, r0, ror r0
   1b96c:			; <UNDEFINED> instruction: 0x00048eb0
   1b970:	andeq	r9, r4, r0, lsl #26
   1b974:	andeq	r0, r0, r7, asr r1
   1b978:	andeq	r8, r4, r0, lsl #29
   1b97c:	ldrdeq	r9, [r4], -r4
   1b980:	andeq	r0, r0, pc, asr #2
   1b984:			; <UNDEFINED> instruction: 0x0007c9b4
   1b988:	andeq	sp, r4, r4, lsl r0
   1b98c:	andeq	r8, r4, r8, lsr #28
   1b990:	andeq	r9, r4, r8, ror ip
   1b994:	andeq	r0, r0, fp, asr r1
   1b998:	strdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   1b99c:	andeq	sl, r4, r0, lsr r4
   1b9a0:	andeq	sl, r4, ip, asr r4
   1b9a4:	andeq	r0, r0, fp, ror r3
   1b9a8:	andeq	lr, r4, r8, lsl #16
   1b9ac:	andeq	sp, r4, r8, ror r0
   1b9b0:	andeq	r8, r5, ip, lsr #30
   1b9b4:			; <UNDEFINED> instruction: 0xffff0bf8
   1b9b8:	andeq	ip, r7, r4, ror #17
   1b9bc:	ldrdeq	r9, [r4], -r4
   1b9c0:	andeq	r8, r4, r8, asr sp
   1b9c4:	andeq	r9, r4, r8, lsr #23
   1b9c8:	andeq	r0, r0, pc, asr r1
   1b9cc:	andeq	sp, r4, r4
   1b9d0:	andeq	r8, r4, r8, lsl sp
   1b9d4:	andeq	r9, r4, r0, ror #22
   1b9d8:	andeq	r0, r0, r6, ror #2
   1b9dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9e0:	mov	r8, r0
   1b9e4:	ldr	r5, [pc, #1708]	; 1c098 <blkid_probe_get_size@plt+0x14b80>
   1b9e8:	ldr	r3, [pc, #1708]	; 1c09c <blkid_probe_get_size@plt+0x14b84>
   1b9ec:	add	r5, pc, r5
   1b9f0:	ldr	r4, [pc, #1704]	; 1c0a0 <blkid_probe_get_size@plt+0x14b88>
   1b9f4:	ldr	r6, [r5, r3]
   1b9f8:	ldr	r3, [pc, #1700]	; 1c0a4 <blkid_probe_get_size@plt+0x14b8c>
   1b9fc:	add	r4, pc, r4
   1ba00:	add	r3, pc, r3
   1ba04:	add	r4, r4, #1232	; 0x4d0
   1ba08:	sub	sp, sp, #36	; 0x24
   1ba0c:	ldr	r2, [r6]
   1ba10:	mov	r7, r1
   1ba14:	add	r4, r4, #4
   1ba18:	add	r9, r3, #88	; 0x58
   1ba1c:	str	r2, [sp, #28]
   1ba20:	ldr	r2, [pc, #1664]	; 1c0a8 <blkid_probe_get_size@plt+0x14b90>
   1ba24:	mov	r3, #0
   1ba28:	str	r3, [sp]
   1ba2c:	add	r2, pc, r2
   1ba30:	mov	r3, r4
   1ba34:	mov	r1, r7
   1ba38:	mov	r0, r8
   1ba3c:	bl	70a4 <getopt_long@plt>
   1ba40:	cmp	r0, #0
   1ba44:	blt	1bb8c <blkid_probe_get_size@plt+0x14674>
   1ba48:	sub	r3, r0, #63	; 0x3f
   1ba4c:	cmp	r3, #53	; 0x35
   1ba50:	addls	pc, pc, r3, lsl #2
   1ba54:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba58:	b	1bbcc <blkid_probe_get_size@plt+0x146b4>
   1ba5c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba60:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba64:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba68:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba6c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba70:	b	1bbe8 <blkid_probe_get_size@plt+0x146d0>
   1ba74:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba78:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba7c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba80:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba84:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba88:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba8c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba90:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba94:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba98:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1ba9c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baa0:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baa4:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baa8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baac:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bab0:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bab4:	b	1bbd4 <blkid_probe_get_size@plt+0x146bc>
   1bab8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1babc:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bac0:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bac4:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bac8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bacc:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bad0:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bad4:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bad8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1badc:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bae0:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bae4:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bae8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baec:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baf0:	b	1bb30 <blkid_probe_get_size@plt+0x14618>
   1baf4:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1baf8:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bafc:	b	1bc88 <blkid_probe_get_size@plt+0x14770>
   1bb00:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb04:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb08:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb0c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb10:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb14:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb18:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb1c:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb20:	b	1bb30 <blkid_probe_get_size@plt+0x14618>
   1bb24:	b	1bf28 <blkid_probe_get_size@plt+0x14a10>
   1bb28:	b	1bb30 <blkid_probe_get_size@plt+0x14618>
   1bb2c:	b	1bc04 <blkid_probe_get_size@plt+0x146ec>
   1bb30:	ldr	r3, [pc, #1396]	; 1c0ac <blkid_probe_get_size@plt+0x14b94>
   1bb34:	add	r3, pc, r3
   1bb38:	ldr	r3, [r3, #4]
   1bb3c:	cmp	r3, #5
   1bb40:	ble	1bbcc <blkid_probe_get_size@plt+0x146b4>
   1bb44:	ldr	r3, [pc, #1380]	; 1c0b0 <blkid_probe_get_size@plt+0x14b98>
   1bb48:	ldr	r2, [pc, #1380]	; 1c0b4 <blkid_probe_get_size@plt+0x14b9c>
   1bb4c:	add	r3, pc, r3
   1bb50:	add	r2, pc, r2
   1bb54:	str	r2, [sp, #4]
   1bb58:	add	r3, r3, #1984	; 0x7c0
   1bb5c:	ldr	r2, [pc, #1364]	; 1c0b8 <blkid_probe_get_size@plt+0x14ba0>
   1bb60:	add	r3, r3, #8
   1bb64:	str	r0, [sp, #8]
   1bb68:	str	r3, [sp]
   1bb6c:	add	r2, pc, r2
   1bb70:	mov	r3, #71	; 0x47
   1bb74:	mov	r1, #1073741846	; 0x40000016
   1bb78:	ldr	r0, [pc, #1340]	; 1c0bc <blkid_probe_get_size@plt+0x14ba4>
   1bb7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1bb80:	mov	r4, r0
   1bb84:	cmp	r4, #0
   1bb88:	ble	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bb8c:	bl	3bec8 <blkid_probe_get_size@plt+0x349b0>
   1bb90:	cmp	r0, #0
   1bb94:	ble	1bcac <blkid_probe_get_size@plt+0x14794>
   1bb98:	ldr	r3, [pc, #1312]	; 1c0c0 <blkid_probe_get_size@plt+0x14ba8>
   1bb9c:	add	r3, pc, r3
   1bba0:	ldr	r3, [r3, #4]
   1bba4:	cmp	r3, #5
   1bba8:	movle	r4, #0
   1bbac:	bgt	1beb4 <blkid_probe_get_size@plt+0x1499c>
   1bbb0:	ldr	r2, [sp, #28]
   1bbb4:	ldr	r3, [r6]
   1bbb8:	mov	r0, r4
   1bbbc:	cmp	r2, r3
   1bbc0:	bne	1c084 <blkid_probe_get_size@plt+0x14b6c>
   1bbc4:	add	sp, sp, #36	; 0x24
   1bbc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbcc:	mvn	r4, #21
   1bbd0:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bbd4:	ldr	r0, [pc, #1256]	; 1c0c4 <blkid_probe_get_size@plt+0x14bac>
   1bbd8:	mov	r4, #0
   1bbdc:	add	r0, pc, r0
   1bbe0:	bl	6b4c <puts@plt>
   1bbe4:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bbe8:	ldr	r3, [pc, #1240]	; 1c0c8 <blkid_probe_get_size@plt+0x14bb0>
   1bbec:	ldr	r2, [pc, #1240]	; 1c0cc <blkid_probe_get_size@plt+0x14bb4>
   1bbf0:	ldr	r3, [r5, r3]
   1bbf4:	add	r2, pc, r2
   1bbf8:	ldr	r3, [r3]
   1bbfc:	str	r3, [r2, #1080]	; 0x438
   1bc00:	b	1ba20 <blkid_probe_get_size@plt+0x14508>
   1bc04:	ldr	r3, [pc, #1212]	; 1c0c8 <blkid_probe_get_size@plt+0x14bb0>
   1bc08:	mov	r1, r9
   1bc0c:	ldr	sl, [r5, r3]
   1bc10:	ldr	r0, [sl]
   1bc14:	bl	48fdc <blkid_probe_get_size@plt+0x41ac4>
   1bc18:	cmp	r0, #0
   1bc1c:	bge	1ba20 <blkid_probe_get_size@plt+0x14508>
   1bc20:	ldr	r3, [pc, #1192]	; 1c0d0 <blkid_probe_get_size@plt+0x14bb8>
   1bc24:	add	r3, pc, r3
   1bc28:	ldr	r3, [r3, #4]
   1bc2c:	cmp	r3, #2
   1bc30:	rsble	r4, r0, #0
   1bc34:	uxtble	r4, r4
   1bc38:	rsble	r4, r4, #0
   1bc3c:	ble	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bc40:	ldr	r3, [pc, #1164]	; 1c0d4 <blkid_probe_get_size@plt+0x14bbc>
   1bc44:	ldr	r2, [pc, #1164]	; 1c0d8 <blkid_probe_get_size@plt+0x14bc0>
   1bc48:	add	r3, pc, r3
   1bc4c:	add	r2, pc, r2
   1bc50:	ldr	r1, [sl]
   1bc54:	add	r3, r3, #1984	; 0x7c0
   1bc58:	str	r2, [sp, #4]
   1bc5c:	ldr	r2, [pc, #1144]	; 1c0dc <blkid_probe_get_size@plt+0x14bc4>
   1bc60:	add	r3, r3, #8
   1bc64:	str	r1, [sp, #8]
   1bc68:	str	r3, [sp]
   1bc6c:	mov	r1, r0
   1bc70:	mov	r3, #57	; 0x39
   1bc74:	add	r2, pc, r2
   1bc78:	ldr	r0, [pc, #1120]	; 1c0e0 <blkid_probe_get_size@plt+0x14bc8>
   1bc7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1bc80:	mov	r4, r0
   1bc84:	b	1bb84 <blkid_probe_get_size@plt+0x1466c>
   1bc88:	ldr	r3, [pc, #1108]	; 1c0e4 <blkid_probe_get_size@plt+0x14bcc>
   1bc8c:	ldr	r1, [pc, #1108]	; 1c0e8 <blkid_probe_get_size@plt+0x14bd0>
   1bc90:	mov	r0, #1
   1bc94:	ldr	r3, [r5, r3]
   1bc98:	add	r1, pc, r1
   1bc9c:	mov	r4, #0
   1bca0:	ldr	r2, [r3]
   1bca4:	bl	74f4 <__printf_chk@plt>
   1bca8:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bcac:	mov	r0, #1
   1bcb0:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   1bcb4:	ldr	r7, [pc, #1072]	; 1c0ec <blkid_probe_get_size@plt+0x14bd4>
   1bcb8:	add	r7, pc, r7
   1bcbc:	ldrd	r8, [r7, #88]	; 0x58
   1bcc0:	mov	r4, r0
   1bcc4:	mov	r5, r1
   1bcc8:	bl	7110 <getuid@plt>
   1bccc:	cmp	r0, #0
   1bcd0:	bne	1bd24 <blkid_probe_get_size@plt+0x1480c>
   1bcd4:	bl	494a0 <blkid_probe_get_size@plt+0x41f88>
   1bcd8:	subs	sl, r0, #0
   1bcdc:	beq	1bd24 <blkid_probe_get_size@plt+0x1480c>
   1bce0:	ldrd	r0, [r7, #88]	; 0x58
   1bce4:	add	r3, pc, #932	; 0x3a4
   1bce8:	ldrd	r2, [r3]
   1bcec:	cmp	r1, r3
   1bcf0:	cmpeq	r0, r2
   1bcf4:	movcc	r0, r2
   1bcf8:	movcc	r1, r3
   1bcfc:	mov	r3, #0
   1bd00:	strd	r0, [sp]
   1bd04:	mov	r2, r3
   1bd08:	mov	r1, #7
   1bd0c:	mov	r0, sl
   1bd10:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1bd14:	subs	r1, r0, #0
   1bd18:	blt	1bfbc <blkid_probe_get_size@plt+0x14aa4>
   1bd1c:	mov	r0, sl
   1bd20:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   1bd24:	mov	r0, #12
   1bd28:	bl	7230 <malloc@plt>
   1bd2c:	subs	r7, r0, #0
   1bd30:	beq	1bf58 <blkid_probe_get_size@plt+0x14a40>
   1bd34:	mov	r2, #0
   1bd38:	mov	r3, #1
   1bd3c:	mvn	sl, #0
   1bd40:	mov	r0, #524288	; 0x80000
   1bd44:	stm	r7, {r2, r3, sl}
   1bd48:	bl	7338 <inotify_init1@plt>
   1bd4c:	subs	fp, r0, #0
   1bd50:	blt	1bef0 <blkid_probe_get_size@plt+0x149d8>
   1bd54:	ldr	r1, [pc, #916]	; 1c0f0 <blkid_probe_get_size@plt+0x14bd8>
   1bd58:	mov	r2, #512	; 0x200
   1bd5c:	add	r1, pc, r1
   1bd60:	bl	6b1c <inotify_add_watch@plt>
   1bd64:	cmp	r0, #0
   1bd68:	blt	1bef0 <blkid_probe_get_size@plt+0x149d8>
   1bd6c:	str	fp, [r7, #8]
   1bd70:	mov	r0, sl
   1bd74:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   1bd78:	adds	r2, r4, r8
   1bd7c:	ldr	sl, [pc, #880]	; 1c0f4 <blkid_probe_get_size@plt+0x14bdc>
   1bd80:	ldr	r8, [pc, #880]	; 1c0f8 <blkid_probe_get_size@plt+0x14be0>
   1bd84:	adc	r3, r5, r9
   1bd88:	add	sl, pc, sl
   1bd8c:	add	r8, pc, r8
   1bd90:	mov	r4, r2
   1bd94:	mov	r5, r3
   1bd98:	mov	r2, #0
   1bd9c:	mov	r3, #1
   1bda0:	str	fp, [sp, #20]
   1bda4:	strh	r2, [sp, #26]
   1bda8:	strh	r3, [sp, #24]
   1bdac:	ldr	r0, [sl, #1080]	; 0x438
   1bdb0:	cmp	r0, #0
   1bdb4:	beq	1bdc8 <blkid_probe_get_size@plt+0x148b0>
   1bdb8:	mov	r1, #0
   1bdbc:	bl	6ff0 <access@plt>
   1bdc0:	cmp	r0, #0
   1bdc4:	bge	1bfb4 <blkid_probe_get_size@plt+0x14a9c>
   1bdc8:	mov	r1, #0
   1bdcc:	mov	r0, r8
   1bdd0:	bl	6ff0 <access@plt>
   1bdd4:	cmp	r0, #0
   1bdd8:	blt	1bfb4 <blkid_probe_get_size@plt+0x14a9c>
   1bddc:	mov	r0, #1
   1bde0:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   1bde4:	cmp	r5, r1
   1bde8:	cmpeq	r4, r0
   1bdec:	bls	1c010 <blkid_probe_get_size@plt+0x14af8>
   1bdf0:	mov	r2, #1000	; 0x3e8
   1bdf4:	mov	r1, #1
   1bdf8:	add	r0, sp, #20
   1bdfc:	bl	6da4 <poll@plt>
   1be00:	cmp	r0, #0
   1be04:	ble	1bdac <blkid_probe_get_size@plt+0x14894>
   1be08:	ldrh	r3, [sp, #26]
   1be0c:	tst	r3, #1
   1be10:	beq	1bdac <blkid_probe_get_size@plt+0x14894>
   1be14:	ldr	r0, [r7, #8]
   1be18:	cmp	r0, #0
   1be1c:	blt	1c07c <blkid_probe_get_size@plt+0x14b64>
   1be20:	bl	42a84 <blkid_probe_get_size@plt+0x3b56c>
   1be24:	cmp	r0, #0
   1be28:	bge	1bdac <blkid_probe_get_size@plt+0x14894>
   1be2c:	ldr	r3, [pc, #712]	; 1c0fc <blkid_probe_get_size@plt+0x14be4>
   1be30:	add	r3, pc, r3
   1be34:	ldr	r3, [r3, #4]
   1be38:	cmp	r3, #2
   1be3c:	rsble	r4, r0, #0
   1be40:	uxtble	r4, r4
   1be44:	rsble	r4, r4, #0
   1be48:	ble	1be84 <blkid_probe_get_size@plt+0x1496c>
   1be4c:	ldr	r2, [pc, #684]	; 1c100 <blkid_probe_get_size@plt+0x14be8>
   1be50:	ldr	r3, [pc, #684]	; 1c104 <blkid_probe_get_size@plt+0x14bec>
   1be54:	add	r2, pc, r2
   1be58:	str	r2, [sp, #4]
   1be5c:	add	r3, pc, r3
   1be60:	ldr	r2, [pc, #672]	; 1c108 <blkid_probe_get_size@plt+0x14bf0>
   1be64:	add	r3, r3, #2016	; 0x7e0
   1be68:	mov	r1, r0
   1be6c:	str	r3, [sp]
   1be70:	add	r2, pc, r2
   1be74:	mov	r3, #143	; 0x8f
   1be78:	ldr	r0, [pc, #608]	; 1c0e0 <blkid_probe_get_size@plt+0x14bc8>
   1be7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1be80:	mov	r4, r0
   1be84:	ldr	r0, [r7, #4]
   1be88:	cmp	r0, #0
   1be8c:	beq	1c050 <blkid_probe_get_size@plt+0x14b38>
   1be90:	sub	r0, r0, #1
   1be94:	cmp	r0, #0
   1be98:	str	r0, [r7, #4]
   1be9c:	bne	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bea0:	ldr	r0, [r7, #8]
   1bea4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   1bea8:	mov	r0, r7
   1beac:	bl	69f0 <free@plt>
   1beb0:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1beb4:	ldr	r2, [pc, #592]	; 1c10c <blkid_probe_get_size@plt+0x14bf4>
   1beb8:	ldr	r3, [pc, #592]	; 1c110 <blkid_probe_get_size@plt+0x14bf8>
   1bebc:	add	r2, pc, r2
   1bec0:	str	r2, [sp, #4]
   1bec4:	add	r3, pc, r3
   1bec8:	ldr	r2, [pc, #580]	; 1c114 <blkid_probe_get_size@plt+0x14bfc>
   1becc:	add	r3, r3, #2016	; 0x7e0
   1bed0:	str	r3, [sp]
   1bed4:	add	r2, pc, r2
   1bed8:	mov	r3, #93	; 0x5d
   1bedc:	mov	r1, #0
   1bee0:	ldr	r0, [pc, #468]	; 1c0bc <blkid_probe_get_size@plt+0x14ba4>
   1bee4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1bee8:	mov	r4, #0
   1beec:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bef0:	bl	732c <__errno_location@plt>
   1bef4:	ldr	sl, [r0]
   1bef8:	mov	r0, fp
   1befc:	rsb	sl, sl, #0
   1bf00:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   1bf04:	cmp	sl, #0
   1bf08:	bge	1c088 <blkid_probe_get_size@plt+0x14b70>
   1bf0c:	ldr	r3, [pc, #516]	; 1c118 <blkid_probe_get_size@plt+0x14c00>
   1bf10:	add	r3, pc, r3
   1bf14:	ldr	r3, [r3, #4]
   1bf18:	cmp	r3, #6
   1bf1c:	bgt	1c018 <blkid_probe_get_size@plt+0x14b00>
   1bf20:	mov	r4, #0
   1bf24:	b	1bea0 <blkid_probe_get_size@plt+0x14988>
   1bf28:	ldr	r2, [pc, #492]	; 1c11c <blkid_probe_get_size@plt+0x14c04>
   1bf2c:	ldr	r1, [pc, #492]	; 1c120 <blkid_probe_get_size@plt+0x14c08>
   1bf30:	add	r2, pc, r2
   1bf34:	add	r2, r2, #2000	; 0x7d0
   1bf38:	add	r2, r2, #4
   1bf3c:	str	r2, [sp]
   1bf40:	ldr	r2, [pc, #476]	; 1c124 <blkid_probe_get_size@plt+0x14c0c>
   1bf44:	mov	r3, #75	; 0x4b
   1bf48:	add	r2, pc, r2
   1bf4c:	add	r1, pc, r1
   1bf50:	mov	r0, #1
   1bf54:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   1bf58:	bl	732c <__errno_location@plt>
   1bf5c:	ldr	r3, [pc, #452]	; 1c128 <blkid_probe_get_size@plt+0x14c10>
   1bf60:	mov	r1, #12
   1bf64:	add	r3, pc, r3
   1bf68:	str	r1, [r0]
   1bf6c:	ldr	r3, [r3, #4]
   1bf70:	cmp	r3, #2
   1bf74:	mvnle	r4, #11
   1bf78:	ble	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bf7c:	ldr	r2, [pc, #424]	; 1c12c <blkid_probe_get_size@plt+0x14c14>
   1bf80:	ldr	r3, [pc, #424]	; 1c130 <blkid_probe_get_size@plt+0x14c18>
   1bf84:	add	r2, pc, r2
   1bf88:	str	r2, [sp, #4]
   1bf8c:	add	r3, pc, r3
   1bf90:	ldr	r2, [pc, #412]	; 1c134 <blkid_probe_get_size@plt+0x14c1c>
   1bf94:	add	r3, r3, #2016	; 0x7e0
   1bf98:	str	r3, [sp]
   1bf9c:	add	r2, pc, r2
   1bfa0:	mov	r3, #115	; 0x73
   1bfa4:	ldr	r0, [pc, #308]	; 1c0e0 <blkid_probe_get_size@plt+0x14bc8>
   1bfa8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1bfac:	mov	r4, r0
   1bfb0:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1bfb4:	mov	r4, #0
   1bfb8:	b	1be84 <blkid_probe_get_size@plt+0x1496c>
   1bfbc:	ldr	r3, [pc, #372]	; 1c138 <blkid_probe_get_size@plt+0x14c20>
   1bfc0:	add	r3, pc, r3
   1bfc4:	ldr	r3, [r3, #4]
   1bfc8:	cmp	r3, #6
   1bfcc:	ble	1c000 <blkid_probe_get_size@plt+0x14ae8>
   1bfd0:	ldr	r2, [pc, #356]	; 1c13c <blkid_probe_get_size@plt+0x14c24>
   1bfd4:	ldr	r3, [pc, #356]	; 1c140 <blkid_probe_get_size@plt+0x14c28>
   1bfd8:	add	r2, pc, r2
   1bfdc:	add	r3, pc, r3
   1bfe0:	str	r2, [sp, #4]
   1bfe4:	ldr	r2, [pc, #344]	; 1c144 <blkid_probe_get_size@plt+0x14c2c>
   1bfe8:	add	r3, r3, #2016	; 0x7e0
   1bfec:	str	r3, [sp]
   1bff0:	add	r2, pc, r2
   1bff4:	mov	r3, #107	; 0x6b
   1bff8:	ldr	r0, [pc, #328]	; 1c148 <blkid_probe_get_size@plt+0x14c30>
   1bffc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c000:	mov	r0, sl
   1c004:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   1c008:	mov	r4, #0
   1c00c:	b	1bbb0 <blkid_probe_get_size@plt+0x14698>
   1c010:	mvn	r4, #109	; 0x6d
   1c014:	b	1be84 <blkid_probe_get_size@plt+0x1496c>
   1c018:	ldr	r2, [pc, #300]	; 1c14c <blkid_probe_get_size@plt+0x14c34>
   1c01c:	ldr	r3, [pc, #300]	; 1c150 <blkid_probe_get_size@plt+0x14c38>
   1c020:	add	r2, pc, r2
   1c024:	str	r2, [sp, #4]
   1c028:	add	r3, pc, r3
   1c02c:	ldr	r2, [pc, #288]	; 1c154 <blkid_probe_get_size@plt+0x14c3c>
   1c030:	add	r3, r3, #2016	; 0x7e0
   1c034:	str	r3, [sp]
   1c038:	mov	r1, sl
   1c03c:	mov	r3, #119	; 0x77
   1c040:	add	r2, pc, r2
   1c044:	ldr	r0, [pc, #252]	; 1c148 <blkid_probe_get_size@plt+0x14c30>
   1c048:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c04c:	b	1bf20 <blkid_probe_get_size@plt+0x14a08>
   1c050:	ldr	r3, [pc, #256]	; 1c158 <blkid_probe_get_size@plt+0x14c40>
   1c054:	ldr	r2, [pc, #256]	; 1c15c <blkid_probe_get_size@plt+0x14c44>
   1c058:	add	r3, pc, r3
   1c05c:	add	r3, r3, #2016	; 0x7e0
   1c060:	ldr	r1, [pc, #248]	; 1c160 <blkid_probe_get_size@plt+0x14c48>
   1c064:	add	r3, r3, #12
   1c068:	str	r3, [sp]
   1c06c:	add	r2, pc, r2
   1c070:	mov	r3, #86	; 0x56
   1c074:	add	r1, pc, r1
   1c078:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1c07c:	mvn	r0, #21
   1c080:	b	1be2c <blkid_probe_get_size@plt+0x14914>
   1c084:	bl	6fb4 <__stack_chk_fail@plt>
   1c088:	mov	fp, sl
   1c08c:	b	1bd78 <blkid_probe_get_size@plt+0x14860>
   1c090:	subeq	r4, ip, r0, asr #22
   1c094:	andeq	r0, r0, r0
   1c098:	andeq	ip, r7, ip, ror r1
   1c09c:	andeq	r0, r0, ip, lsr r4
   1c0a0:	andeq	sp, r6, r4, lsl r6
   1c0a4:	andeq	ip, r7, r0, lsl #12
   1c0a8:	andeq	sp, r4, r8, ror r0
   1c0ac:	andeq	ip, r7, r8, lsl #12
   1c0b0:	andeq	r8, r4, r4, lsl #21
   1c0b4:	andeq	ip, r4, r4, lsr pc
   1c0b8:	andeq	ip, r4, r8, asr #27
   1c0bc:	andeq	r0, r0, r6, lsl #8
   1c0c0:	andeq	ip, r7, r0, lsr #11
   1c0c4:	andeq	r9, r4, r0, asr r8
   1c0c8:	andeq	r0, r0, r8, asr r4
   1c0cc:	strdeq	ip, [r7], -r0
   1c0d0:	andeq	ip, r7, r8, lsl r5
   1c0d4:	andeq	r8, r4, r8, lsl #19
   1c0d8:	andeq	ip, r4, r8, lsl #26
   1c0dc:	andeq	ip, r4, r0, asr #25
   1c0e0:	andeq	r0, r0, r3, lsl #8
   1c0e4:	andeq	r0, r0, r0, lsl #9
   1c0e8:	andeq	ip, r4, r4, ror #25
   1c0ec:	andeq	ip, r7, r8, asr #6
   1c0f0:	andeq	ip, r4, r4, ror sp
   1c0f4:	andeq	ip, r7, ip, asr r4
   1c0f8:	andeq	ip, r4, r4, ror sp
   1c0fc:	andeq	ip, r7, ip, lsl #6
   1c100:			; <UNDEFINED> instruction: 0x0004ccbc
   1c104:	andeq	r8, r4, r4, ror r7
   1c108:	andeq	ip, r4, r4, asr #21
   1c10c:	andeq	r9, r4, r8, asr #23
   1c110:	andeq	r8, r4, ip, lsl #14
   1c114:	andeq	ip, r4, r0, ror #20
   1c118:	andeq	ip, r7, ip, lsr #4
   1c11c:	andeq	r8, r4, r0, lsr #13
   1c120:	andeq	r9, r4, ip, lsl fp
   1c124:	andeq	ip, r4, ip, ror #19
   1c128:	ldrdeq	ip, [r7], -r8
   1c12c:	andeq	ip, r4, ip, lsr #22
   1c130:	andeq	r8, r4, r4, asr #12
   1c134:	muleq	r4, r8, r9
   1c138:	andeq	ip, r7, ip, ror r1
   1c13c:	andeq	ip, r4, r8, ror #14
   1c140:	strdeq	r8, [r4], -r4
   1c144:	andeq	ip, r4, r4, asr #18
   1c148:	andeq	r0, r0, r7, lsl #8
   1c14c:			; <UNDEFINED> instruction: 0x0004cabc
   1c150:	andeq	r8, r4, r8, lsr #11
   1c154:	strdeq	ip, [r4], -r4
   1c158:	andeq	r8, r4, r8, ror r5
   1c15c:	andeq	ip, r4, r0, asr #21
   1c160:	ldrdeq	fp, [r4], -ip
   1c164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c168:	mov	r3, #0
   1c16c:	ldr	r4, [pc, #1636]	; 1c7d8 <blkid_probe_get_size@plt+0x152c0>
   1c170:	ldr	ip, [pc, #1636]	; 1c7dc <blkid_probe_get_size@plt+0x152c4>
   1c174:	add	r4, pc, r4
   1c178:	ldr	r2, [pc, #1632]	; 1c7e0 <blkid_probe_get_size@plt+0x152c8>
   1c17c:	ldr	r5, [r4, ip]
   1c180:	sub	sp, sp, #52	; 0x34
   1c184:	mov	r6, r0
   1c188:	strd	r2, [sp, #32]
   1c18c:	ldr	r3, [r5]
   1c190:	mov	r7, r1
   1c194:	str	r3, [sp, #44]	; 0x2c
   1c198:	bl	3ac44 <blkid_probe_get_size@plt+0x3372c>
   1c19c:	subs	r3, r0, #0
   1c1a0:	blt	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c1a4:	bl	3bec8 <blkid_probe_get_size@plt+0x349b0>
   1c1a8:	cmp	r0, #0
   1c1ac:	ble	1c1e4 <blkid_probe_get_size@plt+0x14ccc>
   1c1b0:	ldr	r3, [pc, #1580]	; 1c7e4 <blkid_probe_get_size@plt+0x152cc>
   1c1b4:	add	r3, pc, r3
   1c1b8:	ldr	r3, [r3, #4]
   1c1bc:	cmp	r3, #5
   1c1c0:	movle	r3, #0
   1c1c4:	bgt	1c23c <blkid_probe_get_size@plt+0x14d24>
   1c1c8:	ldr	r1, [sp, #44]	; 0x2c
   1c1cc:	ldr	r2, [r5]
   1c1d0:	mov	r0, r3
   1c1d4:	cmp	r1, r2
   1c1d8:	bne	1c67c <blkid_probe_get_size@plt+0x15164>
   1c1dc:	add	sp, sp, #52	; 0x34
   1c1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1e4:	cmp	r6, #1
   1c1e8:	bgt	1c278 <blkid_probe_get_size@plt+0x14d60>
   1c1ec:	ldr	r3, [pc, #1524]	; 1c7e8 <blkid_probe_get_size@plt+0x152d0>
   1c1f0:	add	r3, pc, r3
   1c1f4:	ldr	r3, [r3, #4]
   1c1f8:	cmp	r3, #2
   1c1fc:	ble	1c674 <blkid_probe_get_size@plt+0x1515c>
   1c200:	ldr	r2, [pc, #1508]	; 1c7ec <blkid_probe_get_size@plt+0x152d4>
   1c204:	ldr	r3, [pc, #1508]	; 1c7f0 <blkid_probe_get_size@plt+0x152d8>
   1c208:	add	r2, pc, r2
   1c20c:	str	r2, [sp, #4]
   1c210:	add	r3, pc, r3
   1c214:	ldr	r2, [pc, #1496]	; 1c7f4 <blkid_probe_get_size@plt+0x152dc>
   1c218:	add	r3, r3, #2048	; 0x800
   1c21c:	str	r3, [sp]
   1c220:	add	r2, pc, r2
   1c224:	mov	r3, #87	; 0x57
   1c228:	mov	r1, #1073741846	; 0x40000016
   1c22c:	ldr	r0, [pc, #1476]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c230:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c234:	mov	r3, r0
   1c238:	b	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c23c:	ldr	r2, [pc, #1464]	; 1c7fc <blkid_probe_get_size@plt+0x152e4>
   1c240:	ldr	r3, [pc, #1464]	; 1c800 <blkid_probe_get_size@plt+0x152e8>
   1c244:	add	r2, pc, r2
   1c248:	str	r2, [sp, #4]
   1c24c:	add	r3, pc, r3
   1c250:	ldr	r2, [pc, #1452]	; 1c804 <blkid_probe_get_size@plt+0x152ec>
   1c254:	add	r3, r3, #2048	; 0x800
   1c258:	str	r3, [sp]
   1c25c:	add	r2, pc, r2
   1c260:	mov	r3, #81	; 0x51
   1c264:	mov	r1, #0
   1c268:	ldr	r0, [pc, #1432]	; 1c808 <blkid_probe_get_size@plt+0x152f0>
   1c26c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c270:	mov	r3, #0
   1c274:	b	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c278:	bl	494a0 <blkid_probe_get_size@plt+0x41f88>
   1c27c:	subs	fp, r0, #0
   1c280:	beq	1c5dc <blkid_probe_get_size@plt+0x150c4>
   1c284:	ldr	r8, [pc, #1408]	; 1c80c <blkid_probe_get_size@plt+0x152f4>
   1c288:	ldr	sl, [pc, #1408]	; 1c810 <blkid_probe_get_size@plt+0x152f8>
   1c28c:	add	r8, pc, r8
   1c290:	add	r8, r8, #1360	; 0x550
   1c294:	add	sl, pc, sl
   1c298:	add	r8, r8, #4
   1c29c:	mov	r9, #0
   1c2a0:	str	r9, [sp]
   1c2a4:	mov	r3, r8
   1c2a8:	mov	r2, sl
   1c2ac:	mov	r1, r7
   1c2b0:	mov	r0, r6
   1c2b4:	bl	70a4 <getopt_long@plt>
   1c2b8:	cmp	r0, #0
   1c2bc:	blt	1c604 <blkid_probe_get_size@plt+0x150ec>
   1c2c0:	cmp	r0, #104	; 0x68
   1c2c4:	beq	1c49c <blkid_probe_get_size@plt+0x14f84>
   1c2c8:	ble	1c31c <blkid_probe_get_size@plt+0x14e04>
   1c2cc:	cmp	r0, #112	; 0x70
   1c2d0:	beq	1c450 <blkid_probe_get_size@plt+0x14f38>
   1c2d4:	ble	1c3ec <blkid_probe_get_size@plt+0x14ed4>
   1c2d8:	cmp	r0, #116	; 0x74
   1c2dc:	beq	1c3a8 <blkid_probe_get_size@plt+0x14e90>
   1c2e0:	cmp	r0, #256	; 0x100
   1c2e4:	beq	1c4f0 <blkid_probe_get_size@plt+0x14fd8>
   1c2e8:	cmp	r0, #115	; 0x73
   1c2ec:	beq	1c4c8 <blkid_probe_get_size@plt+0x14fb0>
   1c2f0:	ldr	r2, [pc, #1308]	; 1c814 <blkid_probe_get_size@plt+0x152fc>
   1c2f4:	ldr	r1, [pc, #1308]	; 1c818 <blkid_probe_get_size@plt+0x15300>
   1c2f8:	add	r2, pc, r2
   1c2fc:	add	r2, r2, #2064	; 0x810
   1c300:	str	r2, [sp]
   1c304:	ldr	r2, [pc, #1296]	; 1c81c <blkid_probe_get_size@plt+0x15304>
   1c308:	mov	r3, #161	; 0xa1
   1c30c:	add	r2, pc, r2
   1c310:	add	r1, pc, r1
   1c314:	mov	r0, #1
   1c318:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   1c31c:	cmp	r0, #83	; 0x53
   1c320:	beq	1c560 <blkid_probe_get_size@plt+0x15048>
   1c324:	bgt	1c370 <blkid_probe_get_size@plt+0x14e58>
   1c328:	cmp	r0, #63	; 0x3f
   1c32c:	beq	1c448 <blkid_probe_get_size@plt+0x14f30>
   1c330:	cmp	r0, #82	; 0x52
   1c334:	bne	1c2f0 <blkid_probe_get_size@plt+0x14dd8>
   1c338:	ldrd	r0, [sp, #32]
   1c33c:	mov	r3, #0
   1c340:	mov	r2, r3
   1c344:	strd	r0, [sp]
   1c348:	mov	r1, #4
   1c34c:	mov	r0, fp
   1c350:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c354:	subs	r3, r0, #0
   1c358:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c35c:	mov	r0, fp
   1c360:	str	r3, [sp, #20]
   1c364:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   1c368:	ldr	r3, [sp, #20]
   1c36c:	b	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c370:	cmp	r0, #86	; 0x56
   1c374:	beq	1c588 <blkid_probe_get_size@plt+0x15070>
   1c378:	cmp	r0, #101	; 0x65
   1c37c:	bne	1c2f0 <blkid_probe_get_size@plt+0x14dd8>
   1c380:	ldrd	r0, [sp, #32]
   1c384:	mov	r3, #0
   1c388:	mov	r2, r3
   1c38c:	strd	r0, [sp]
   1c390:	mov	r1, #8
   1c394:	mov	r0, fp
   1c398:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c39c:	subs	r3, r0, #0
   1c3a0:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c3a4:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c3a8:	ldr	r3, [pc, #1136]	; 1c820 <blkid_probe_get_size@plt+0x15308>
   1c3ac:	add	r1, sp, #32
   1c3b0:	ldr	r3, [r4, r3]
   1c3b4:	str	r3, [sp, #20]
   1c3b8:	ldr	r0, [r3]
   1c3bc:	bl	48fdc <blkid_probe_get_size@plt+0x41ac4>
   1c3c0:	subs	r1, r0, #0
   1c3c4:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c3c8:	ldr	r3, [pc, #1108]	; 1c824 <blkid_probe_get_size@plt+0x1530c>
   1c3cc:	add	r3, pc, r3
   1c3d0:	ldr	r3, [r3, #4]
   1c3d4:	cmp	r3, #2
   1c3d8:	bgt	1c794 <blkid_probe_get_size@plt+0x1527c>
   1c3dc:	rsb	r3, r1, #0
   1c3e0:	uxtb	r3, r3
   1c3e4:	rsb	r3, r3, #0
   1c3e8:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c3ec:	cmp	r0, #108	; 0x6c
   1c3f0:	beq	1c59c <blkid_probe_get_size@plt+0x15084>
   1c3f4:	cmp	r0, #109	; 0x6d
   1c3f8:	bne	1c2f0 <blkid_probe_get_size@plt+0x14dd8>
   1c3fc:	ldr	r3, [pc, #1052]	; 1c820 <blkid_probe_get_size@plt+0x15308>
   1c400:	mov	r1, #0
   1c404:	add	r2, sp, #28
   1c408:	ldr	r3, [r4, r3]
   1c40c:	str	r3, [sp, #20]
   1c410:	ldr	r0, [r3]
   1c414:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   1c418:	subs	r1, r0, #0
   1c41c:	blt	1c6d4 <blkid_probe_get_size@plt+0x151bc>
   1c420:	ldrd	r0, [sp, #32]
   1c424:	mov	r3, #0
   1c428:	ldr	r2, [sp, #28]
   1c42c:	strd	r0, [sp]
   1c430:	mov	r1, #6
   1c434:	mov	r0, fp
   1c438:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c43c:	subs	r3, r0, #0
   1c440:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c444:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c448:	mvn	r3, #21
   1c44c:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c450:	ldr	r3, [pc, #968]	; 1c820 <blkid_probe_get_size@plt+0x15308>
   1c454:	mov	r1, #61	; 0x3d
   1c458:	ldr	r3, [r4, r3]
   1c45c:	ldr	r3, [r3]
   1c460:	mov	r0, r3
   1c464:	str	r3, [sp, #20]
   1c468:	bl	74c4 <strchr@plt>
   1c46c:	ldr	r3, [sp, #20]
   1c470:	cmp	r0, #0
   1c474:	beq	1c680 <blkid_probe_get_size@plt+0x15168>
   1c478:	ldrd	r0, [sp, #32]
   1c47c:	mov	r2, #0
   1c480:	strd	r0, [sp]
   1c484:	mov	r1, #5
   1c488:	mov	r0, fp
   1c48c:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c490:	subs	r3, r0, #0
   1c494:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c498:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c49c:	ldr	r3, [pc, #900]	; 1c828 <blkid_probe_get_size@plt+0x15310>
   1c4a0:	ldr	r1, [pc, #900]	; 1c82c <blkid_probe_get_size@plt+0x15314>
   1c4a4:	mov	r0, #1
   1c4a8:	ldr	r2, [r4, r3]
   1c4ac:	add	r1, pc, r1
   1c4b0:	mov	r3, #0
   1c4b4:	ldr	r2, [r2]
   1c4b8:	str	r3, [sp, #20]
   1c4bc:	bl	74f4 <__printf_chk@plt>
   1c4c0:	ldr	r3, [sp, #20]
   1c4c4:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c4c8:	ldrd	r0, [sp, #32]
   1c4cc:	mov	r3, #0
   1c4d0:	mov	r2, r3
   1c4d4:	strd	r0, [sp]
   1c4d8:	mov	r1, #2
   1c4dc:	mov	r0, fp
   1c4e0:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c4e4:	subs	r3, r0, #0
   1c4e8:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c4ec:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c4f0:	ldrd	r0, [sp, #32]
   1c4f4:	mov	r3, #0
   1c4f8:	mov	r2, r3
   1c4fc:	strd	r0, [sp]
   1c500:	mov	r1, #7
   1c504:	mov	r0, fp
   1c508:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c50c:	subs	r1, r0, #0
   1c510:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c514:	ldr	r3, [pc, #788]	; 1c830 <blkid_probe_get_size@plt+0x15318>
   1c518:	add	r3, pc, r3
   1c51c:	ldr	r3, [r3, #4]
   1c520:	cmp	r3, #2
   1c524:	ble	1c3dc <blkid_probe_get_size@plt+0x14ec4>
   1c528:	ldr	r2, [pc, #772]	; 1c834 <blkid_probe_get_size@plt+0x1531c>
   1c52c:	ldr	r3, [pc, #772]	; 1c838 <blkid_probe_get_size@plt+0x15320>
   1c530:	add	r2, pc, r2
   1c534:	str	r2, [sp, #4]
   1c538:	add	r3, pc, r3
   1c53c:	ldr	r2, [pc, #760]	; 1c83c <blkid_probe_get_size@plt+0x15324>
   1c540:	add	r3, r3, #2048	; 0x800
   1c544:	str	r3, [sp]
   1c548:	add	r2, pc, r2
   1c54c:	mov	r3, #147	; 0x93
   1c550:	ldr	r0, [pc, #672]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c554:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c558:	mov	r3, r0
   1c55c:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c560:	ldrd	r0, [sp, #32]
   1c564:	mov	r3, #0
   1c568:	mov	r2, r3
   1c56c:	strd	r0, [sp]
   1c570:	mov	r1, #3
   1c574:	mov	r0, fp
   1c578:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c57c:	subs	r3, r0, #0
   1c580:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c584:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c588:	ldr	r0, [pc, #688]	; 1c840 <blkid_probe_get_size@plt+0x15328>
   1c58c:	add	r0, pc, r0
   1c590:	bl	6b4c <puts@plt>
   1c594:	mov	r3, #0
   1c598:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c59c:	ldr	r3, [pc, #636]	; 1c820 <blkid_probe_get_size@plt+0x15308>
   1c5a0:	ldr	r3, [r4, r3]
   1c5a4:	str	r3, [sp, #20]
   1c5a8:	ldr	r0, [r3]
   1c5ac:	bl	414d0 <blkid_probe_get_size@plt+0x39fb8>
   1c5b0:	subs	r2, r0, #0
   1c5b4:	blt	1c72c <blkid_probe_get_size@plt+0x15214>
   1c5b8:	ldrd	r0, [sp, #32]
   1c5bc:	mov	r3, #0
   1c5c0:	strd	r0, [sp]
   1c5c4:	mov	r1, #1
   1c5c8:	mov	r0, fp
   1c5cc:	bl	bdf8 <blkid_probe_get_size@plt+0x48e0>
   1c5d0:	subs	r3, r0, #0
   1c5d4:	bge	1c2a0 <blkid_probe_get_size@plt+0x14d88>
   1c5d8:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c5dc:	ldr	r3, [pc, #608]	; 1c844 <blkid_probe_get_size@plt+0x1532c>
   1c5e0:	ldr	r1, [pc, #608]	; 1c848 <blkid_probe_get_size@plt+0x15330>
   1c5e4:	add	r3, pc, r3
   1c5e8:	add	r3, r3, #2048	; 0x800
   1c5ec:	mov	r2, #91	; 0x5b
   1c5f0:	add	r1, pc, r1
   1c5f4:	mov	r0, #1
   1c5f8:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1c5fc:	mov	r3, r0
   1c600:	b	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c604:	ldr	r3, [pc, #576]	; 1c84c <blkid_probe_get_size@plt+0x15334>
   1c608:	ldr	r3, [r4, r3]
   1c60c:	ldr	r3, [r3]
   1c610:	cmp	r3, r6
   1c614:	movge	r3, #0
   1c618:	bge	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c61c:	ldr	r2, [pc, #556]	; 1c850 <blkid_probe_get_size@plt+0x15338>
   1c620:	add	r2, pc, r2
   1c624:	ldr	r2, [r2, #4]
   1c628:	cmp	r2, #2
   1c62c:	ble	1c448 <blkid_probe_get_size@plt+0x14f30>
   1c630:	ldr	r2, [pc, #540]	; 1c854 <blkid_probe_get_size@plt+0x1533c>
   1c634:	ldr	r1, [pc, #540]	; 1c858 <blkid_probe_get_size@plt+0x15340>
   1c638:	add	r2, pc, r2
   1c63c:	ldr	r0, [r7, r3, lsl #2]
   1c640:	add	r3, r2, #2048	; 0x800
   1c644:	ldr	r2, [pc, #528]	; 1c85c <blkid_probe_get_size@plt+0x15344>
   1c648:	add	r1, pc, r1
   1c64c:	str	r0, [sp, #8]
   1c650:	str	r3, [sp]
   1c654:	str	r1, [sp, #4]
   1c658:	mov	r3, #166	; 0xa6
   1c65c:	add	r2, pc, r2
   1c660:	mov	r1, #1073741846	; 0x40000016
   1c664:	ldr	r0, [pc, #396]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c668:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c66c:	mov	r3, r0
   1c670:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c674:	mvn	r3, #21
   1c678:	b	1c1c8 <blkid_probe_get_size@plt+0x14cb0>
   1c67c:	bl	6fb4 <__stack_chk_fail@plt>
   1c680:	ldr	r2, [pc, #472]	; 1c860 <blkid_probe_get_size@plt+0x15348>
   1c684:	add	r2, pc, r2
   1c688:	ldr	r2, [r2, #4]
   1c68c:	cmp	r2, #2
   1c690:	ble	1c448 <blkid_probe_get_size@plt+0x14f30>
   1c694:	ldr	r2, [pc, #456]	; 1c864 <blkid_probe_get_size@plt+0x1534c>
   1c698:	ldr	r1, [pc, #456]	; 1c868 <blkid_probe_get_size@plt+0x15350>
   1c69c:	add	r2, pc, r2
   1c6a0:	add	r2, r2, #2048	; 0x800
   1c6a4:	str	r2, [sp]
   1c6a8:	ldr	r2, [pc, #444]	; 1c86c <blkid_probe_get_size@plt+0x15354>
   1c6ac:	add	r1, pc, r1
   1c6b0:	str	r3, [sp, #8]
   1c6b4:	str	r1, [sp, #4]
   1c6b8:	mov	r3, #126	; 0x7e
   1c6bc:	add	r2, pc, r2
   1c6c0:	mov	r1, #1073741846	; 0x40000016
   1c6c4:	ldr	r0, [pc, #300]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c6c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c6cc:	mov	r3, r0
   1c6d0:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c6d4:	ldr	r3, [pc, #404]	; 1c870 <blkid_probe_get_size@plt+0x15358>
   1c6d8:	add	r3, pc, r3
   1c6dc:	ldr	r3, [r3, #4]
   1c6e0:	cmp	r3, #2
   1c6e4:	ble	1c3dc <blkid_probe_get_size@plt+0x14ec4>
   1c6e8:	ldr	r2, [sp, #20]
   1c6ec:	ldr	r3, [pc, #384]	; 1c874 <blkid_probe_get_size@plt+0x1535c>
   1c6f0:	ldr	r0, [r2]
   1c6f4:	ldr	r2, [pc, #380]	; 1c878 <blkid_probe_get_size@plt+0x15360>
   1c6f8:	add	r3, pc, r3
   1c6fc:	add	r2, pc, r2
   1c700:	str	r2, [sp, #4]
   1c704:	ldr	r2, [pc, #368]	; 1c87c <blkid_probe_get_size@plt+0x15364>
   1c708:	add	r3, r3, #2048	; 0x800
   1c70c:	str	r0, [sp, #8]
   1c710:	str	r3, [sp]
   1c714:	add	r2, pc, r2
   1c718:	mov	r3, #137	; 0x89
   1c71c:	ldr	r0, [pc, #212]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c720:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c724:	mov	r3, r0
   1c728:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c72c:	ldr	r3, [pc, #332]	; 1c880 <blkid_probe_get_size@plt+0x15368>
   1c730:	add	r3, pc, r3
   1c734:	ldr	r3, [r3, #4]
   1c738:	cmp	r3, #2
   1c73c:	rsble	r3, r2, #0
   1c740:	uxtble	r3, r3
   1c744:	rsble	r3, r3, #0
   1c748:	ble	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c74c:	ldr	r1, [sp, #20]
   1c750:	ldr	r3, [pc, #300]	; 1c884 <blkid_probe_get_size@plt+0x1536c>
   1c754:	ldr	r0, [pc, #300]	; 1c888 <blkid_probe_get_size@plt+0x15370>
   1c758:	ldr	r1, [r1]
   1c75c:	add	r3, pc, r3
   1c760:	str	r1, [sp, #8]
   1c764:	mov	r1, r2
   1c768:	ldr	r2, [pc, #284]	; 1c88c <blkid_probe_get_size@plt+0x15374>
   1c76c:	add	r0, pc, r0
   1c770:	add	r3, r3, #2048	; 0x800
   1c774:	str	r3, [sp]
   1c778:	str	r0, [sp, #4]
   1c77c:	mov	r3, #103	; 0x67
   1c780:	add	r2, pc, r2
   1c784:	ldr	r0, [pc, #108]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c788:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c78c:	mov	r3, r0
   1c790:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c794:	ldr	r2, [sp, #20]
   1c798:	ldr	r3, [pc, #240]	; 1c890 <blkid_probe_get_size@plt+0x15378>
   1c79c:	ldr	r0, [r2]
   1c7a0:	ldr	r2, [pc, #236]	; 1c894 <blkid_probe_get_size@plt+0x1537c>
   1c7a4:	add	r3, pc, r3
   1c7a8:	add	r2, pc, r2
   1c7ac:	str	r2, [sp, #4]
   1c7b0:	ldr	r2, [pc, #224]	; 1c898 <blkid_probe_get_size@plt+0x15380>
   1c7b4:	add	r3, r3, #2048	; 0x800
   1c7b8:	str	r0, [sp, #8]
   1c7bc:	str	r3, [sp]
   1c7c0:	add	r2, pc, r2
   1c7c4:	mov	r3, #152	; 0x98
   1c7c8:	ldr	r0, [pc, #40]	; 1c7f8 <blkid_probe_get_size@plt+0x152e0>
   1c7cc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   1c7d0:	mov	r3, r0
   1c7d4:	b	1c35c <blkid_probe_get_size@plt+0x14e44>
   1c7d8:	strdeq	fp, [r7], -r4
   1c7dc:	andeq	r0, r0, ip, lsr r4
   1c7e0:	orrseq	r8, r3, #0, 14
   1c7e4:	andeq	fp, r7, r8, lsl #31
   1c7e8:	andeq	fp, r7, ip, asr #30
   1c7ec:	andeq	ip, r4, r4, ror #18
   1c7f0:	andeq	r8, r4, r0, asr #7
   1c7f4:	andeq	ip, r4, ip, lsr #18
   1c7f8:	andeq	r0, r0, r3, lsl #8
   1c7fc:	andeq	r9, r4, r0, asr #16
   1c800:	andeq	r8, r4, r4, lsl #7
   1c804:	strdeq	ip, [r4], -r0
   1c808:	andeq	r0, r0, r6, lsl #8
   1c80c:	andeq	ip, r6, r4, lsl #27
   1c810:	andeq	ip, r4, r8, lsr ip
   1c814:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   1c818:	andeq	r9, r4, r8, asr r7
   1c81c:	andeq	ip, r4, r0, asr #16
   1c820:	andeq	r0, r0, r8, asr r4
   1c824:	andeq	fp, r7, r0, ror sp
   1c828:	andeq	r0, r0, r0, lsl #9
   1c82c:	andeq	ip, r4, r0, ror r7
   1c830:	andeq	fp, r7, r4, lsr #24
   1c834:	andeq	ip, r4, r0, lsl r2
   1c838:	muleq	r4, r8, r0
   1c83c:	andeq	ip, r4, r4, lsl #12
   1c840:	andeq	r8, r4, r0, lsr #29
   1c844:	andeq	r7, r4, ip, ror #31
   1c848:	andeq	ip, r4, ip, asr r5
   1c84c:	andeq	r0, r0, r0, asr #8
   1c850:	andeq	fp, r7, ip, lsl fp
   1c854:	muleq	r4, r8, pc	; <UNPREDICTABLE>
   1c858:	muleq	r4, r4, r8
   1c85c:	strdeq	ip, [r4], -r0
   1c860:			; <UNDEFINED> instruction: 0x0007bab8
   1c864:	andeq	r7, r4, r4, lsr pc
   1c868:	andeq	ip, r4, r4, lsl r5
   1c86c:	muleq	r4, r0, r4
   1c870:	andeq	fp, r7, r4, ror #20
   1c874:	ldrdeq	r7, [r4], -r8
   1c878:	andeq	ip, r4, ip, ror #9
   1c87c:	andeq	ip, r4, r8, lsr r4
   1c880:	andeq	fp, r7, ip, lsl #20
   1c884:	andeq	r7, r4, r4, ror lr
   1c888:	andeq	ip, r4, ip, lsr #8
   1c88c:	andeq	ip, r4, ip, asr #7
   1c890:	andeq	r7, r4, ip, lsr #28
   1c894:	andeq	ip, r4, ip, lsr #3
   1c898:	andeq	ip, r4, ip, lsl #7
   1c89c:	andeq	r0, r0, r0
   1c8a0:	sub	r3, r1, #9
   1c8a4:	cmp	r3, #22
   1c8a8:	bhi	1c920 <blkid_probe_get_size@plt+0x15408>
   1c8ac:	push	{r4, r5, r6, lr}
   1c8b0:	ldr	r3, [pc, #112]	; 1c928 <blkid_probe_get_size@plt+0x15410>
   1c8b4:	ldrb	ip, [r0, #6]
   1c8b8:	ldrb	r2, [r0, #5]
   1c8bc:	add	r3, pc, r3
   1c8c0:	ldrb	r4, [r3, ip]
   1c8c4:	ldrb	r3, [r3, r2]
   1c8c8:	add	r4, r4, r3
   1c8cc:	add	r4, r4, r1
   1c8d0:	cmp	r4, #55	; 0x37
   1c8d4:	bhi	1c918 <blkid_probe_get_size@plt+0x15400>
   1c8d8:	ldr	r5, [pc, #76]	; 1c92c <blkid_probe_get_size@plt+0x15414>
   1c8dc:	add	r5, pc, r5
   1c8e0:	ldr	r1, [r5, r4, lsl #4]
   1c8e4:	cmp	r1, #0
   1c8e8:	beq	1c918 <blkid_probe_get_size@plt+0x15400>
   1c8ec:	ldrb	r2, [r0]
   1c8f0:	ldrb	r3, [r1]
   1c8f4:	cmp	r2, r3
   1c8f8:	bne	1c918 <blkid_probe_get_size@plt+0x15400>
   1c8fc:	add	r1, r1, #1
   1c900:	add	r0, r0, #1
   1c904:	bl	7314 <strcmp@plt>
   1c908:	cmp	r0, #0
   1c90c:	bne	1c918 <blkid_probe_get_size@plt+0x15400>
   1c910:	add	r0, r5, r4, lsl #4
   1c914:	pop	{r4, r5, r6, pc}
   1c918:	mov	r0, #0
   1c91c:	pop	{r4, r5, r6, pc}
   1c920:	mov	r0, #0
   1c924:	bx	lr
   1c928:	andeq	ip, r4, ip, asr #26
   1c92c:	andeq	ip, r6, r4, lsl #29
   1c930:	ldr	r1, [pc, #152]	; 1c9d0 <blkid_probe_get_size@plt+0x154b8>
   1c934:	push	{r4, lr}
   1c938:	add	r1, pc, r1
   1c93c:	mov	r4, r0
   1c940:	bl	7314 <strcmp@plt>
   1c944:	cmp	r0, #0
   1c948:	beq	1c9a0 <blkid_probe_get_size@plt+0x15488>
   1c94c:	ldr	r0, [pc, #128]	; 1c9d4 <blkid_probe_get_size@plt+0x154bc>
   1c950:	mov	r1, r4
   1c954:	add	r0, pc, r0
   1c958:	bl	7314 <strcmp@plt>
   1c95c:	cmp	r0, #0
   1c960:	beq	1c9c8 <blkid_probe_get_size@plt+0x154b0>
   1c964:	ldr	r0, [pc, #108]	; 1c9d8 <blkid_probe_get_size@plt+0x154c0>
   1c968:	mov	r1, r4
   1c96c:	add	r0, pc, r0
   1c970:	bl	7314 <strcmp@plt>
   1c974:	cmp	r0, #0
   1c978:	beq	1c9b0 <blkid_probe_get_size@plt+0x15498>
   1c97c:	ldr	r0, [pc, #88]	; 1c9dc <blkid_probe_get_size@plt+0x154c4>
   1c980:	mov	r1, r4
   1c984:	add	r0, pc, r0
   1c988:	bl	7314 <strcmp@plt>
   1c98c:	cmp	r0, #0
   1c990:	moveq	r3, #2
   1c994:	beq	1c9b4 <blkid_probe_get_size@plt+0x1549c>
   1c998:	mov	r0, #0
   1c99c:	pop	{r4, pc}
   1c9a0:	ldr	r0, [pc, #56]	; 1c9e0 <blkid_probe_get_size@plt+0x154c8>
   1c9a4:	add	r0, pc, r0
   1c9a8:	add	r0, r0, #912	; 0x390
   1c9ac:	pop	{r4, pc}
   1c9b0:	mov	r3, #1
   1c9b4:	ldr	r0, [pc, #40]	; 1c9e4 <blkid_probe_get_size@plt+0x154cc>
   1c9b8:	add	r0, pc, r0
   1c9bc:	add	r0, r0, #896	; 0x380
   1c9c0:	add	r0, r0, r3, lsl #3
   1c9c4:	pop	{r4, pc}
   1c9c8:	mov	r3, r0
   1c9cc:	b	1c9b4 <blkid_probe_get_size@plt+0x1549c>
   1c9d0:	andeq	sp, r4, r0, lsr #16
   1c9d4:	andeq	sp, r4, ip, lsl #16
   1c9d8:	strdeq	sp, [r4], -ip
   1c9dc:	andeq	sp, r4, ip, ror #15
   1c9e0:			; <UNDEFINED> instruction: 0x0006cdbc
   1c9e4:	andeq	ip, r6, r8, lsr #27
   1c9e8:	push	{r4, lr}
   1c9ec:	mov	r4, r0
   1c9f0:	bl	723c <strlen@plt>
   1c9f4:	cmp	r0, #3
   1c9f8:	mov	lr, r0
   1c9fc:	bls	1ca40 <blkid_probe_get_size@plt+0x15528>
   1ca00:	sub	r1, r0, #4
   1ca04:	ldr	r2, [pc, #132]	; 1ca90 <blkid_probe_get_size@plt+0x15578>
   1ca08:	lsr	r1, r1, #2
   1ca0c:	add	ip, r1, #1
   1ca10:	add	ip, r4, ip, lsl #2
   1ca14:	ldr	r3, [r4], #4
   1ca18:	mul	r0, r2, r0
   1ca1c:	mul	r3, r2, r3
   1ca20:	cmp	r4, ip
   1ca24:	eor	r3, r3, r3, lsr #24
   1ca28:	mul	r3, r2, r3
   1ca2c:	eor	r0, r0, r3
   1ca30:	bne	1ca14 <blkid_probe_get_size@plt+0x154fc>
   1ca34:	rsb	r1, r1, r1, lsl #30
   1ca38:	sub	lr, lr, #4
   1ca3c:	add	lr, lr, r1, lsl #2
   1ca40:	cmp	lr, #2
   1ca44:	beq	1ca74 <blkid_probe_get_size@plt+0x1555c>
   1ca48:	cmp	lr, #3
   1ca4c:	beq	1ca6c <blkid_probe_get_size@plt+0x15554>
   1ca50:	cmp	lr, #1
   1ca54:	beq	1ca7c <blkid_probe_get_size@plt+0x15564>
   1ca58:	ldr	r3, [pc, #48]	; 1ca90 <blkid_probe_get_size@plt+0x15578>
   1ca5c:	eor	r0, r0, r0, lsr #13
   1ca60:	mul	r0, r3, r0
   1ca64:	eor	r0, r0, r0, lsr #15
   1ca68:	pop	{r4, pc}
   1ca6c:	ldrb	r3, [r4, #2]
   1ca70:	eor	r0, r0, r3, lsl #16
   1ca74:	ldrb	r3, [r4, #1]
   1ca78:	eor	r0, r0, r3, lsl #8
   1ca7c:	ldrb	r3, [r4]
   1ca80:	ldr	r2, [pc, #8]	; 1ca90 <blkid_probe_get_size@plt+0x15578>
   1ca84:	eor	r3, r3, r0
   1ca88:	mul	r0, r2, r3
   1ca8c:	b	1ca58 <blkid_probe_get_size@plt+0x15540>
   1ca90:	blpl	ff4970ec <blkid_probe_get_size@plt+0xff48fbd4>
   1ca94:	ldr	ip, [pc, #620]	; 1cd08 <blkid_probe_get_size@plt+0x157f0>
   1ca98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca9c:	add	ip, pc, ip
   1caa0:	ldr	lr, [pc, #612]	; 1cd0c <blkid_probe_get_size@plt+0x157f4>
   1caa4:	add	fp, sp, #32
   1caa8:	sub	sp, sp, #44	; 0x2c
   1caac:	ldr	lr, [ip, lr]
   1cab0:	mov	r9, r2
   1cab4:	subs	r8, r0, #0
   1cab8:	ldr	r2, [lr]
   1cabc:	str	lr, [fp, #-56]	; 0xffffffc8
   1cac0:	ldr	r6, [fp, #4]
   1cac4:	str	r2, [fp, #-40]	; 0xffffffd8
   1cac8:	ldr	r7, [fp, #8]
   1cacc:	ldr	r5, [fp, #12]
   1cad0:	beq	1cc00 <blkid_probe_get_size@plt+0x156e8>
   1cad4:	cmp	r9, #0
   1cad8:	beq	1cc28 <blkid_probe_get_size@plt+0x15710>
   1cadc:	cmp	r3, #0
   1cae0:	mov	r4, r3
   1cae4:	beq	1cc54 <blkid_probe_get_size@plt+0x1573c>
   1cae8:	cmp	r6, #0
   1caec:	beq	1cc80 <blkid_probe_get_size@plt+0x15768>
   1caf0:	cmp	r7, #0
   1caf4:	beq	1ccac <blkid_probe_get_size@plt+0x15794>
   1caf8:	cmp	r1, #0
   1cafc:	bne	1cb5c <blkid_probe_get_size@plt+0x15644>
   1cb00:	mov	r0, r9
   1cb04:	bl	723c <strlen@plt>
   1cb08:	mov	r1, r0
   1cb0c:	mov	r0, r9
   1cb10:	blx	r8
   1cb14:	cmp	r0, #0
   1cb18:	mov	r2, r0
   1cb1c:	ldrne	r1, [r0, #4]
   1cb20:	moveq	r0, r2
   1cb24:	strne	r1, [r4]
   1cb28:	ldrne	r3, [r2, #8]
   1cb2c:	movne	r0, #1
   1cb30:	strne	r3, [r6]
   1cb34:	ldrne	r3, [r2, #12]
   1cb38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb3c:	addne	r5, r5, r3
   1cb40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb44:	strne	r5, [r7]
   1cb48:	ldr	r3, [r3]
   1cb4c:	cmp	r2, r3
   1cb50:	bne	1cd04 <blkid_probe_get_size@plt+0x157ec>
   1cb54:	sub	sp, fp, #32
   1cb58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb5c:	mov	r2, #0
   1cb60:	ldr	ip, [pc, #424]	; 1cd10 <blkid_probe_get_size@plt+0x157f8>
   1cb64:	str	r9, [fp, #-44]	; 0xffffffd4
   1cb68:	mov	sl, r2
   1cb6c:	mov	r0, r1
   1cb70:	sub	r9, fp, #52	; 0x34
   1cb74:	add	ip, pc, ip
   1cb78:	str	r1, [fp, #-52]	; 0xffffffcc
   1cb7c:	str	ip, [fp, #-48]	; 0xffffffd0
   1cb80:	str	r1, [fp, #-64]	; 0xffffffc0
   1cb84:	str	r2, [fp, #-60]	; 0xffffffc4
   1cb88:	bl	723c <strlen@plt>
   1cb8c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cb90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cb94:	add	r2, r2, #1
   1cb98:	cmp	r2, #3
   1cb9c:	add	sl, sl, r0
   1cba0:	beq	1cbb0 <blkid_probe_get_size@plt+0x15698>
   1cba4:	ldr	r0, [r9, r2, lsl #2]
   1cba8:	cmp	r0, #0
   1cbac:	bne	1cb80 <blkid_probe_get_size@plt+0x15668>
   1cbb0:	add	r2, sl, #1
   1cbb4:	cmp	r2, #4194304	; 0x400000
   1cbb8:	bhi	1ccd8 <blkid_probe_get_size@plt+0x157c0>
   1cbbc:	add	sl, sl, #15
   1cbc0:	bic	sl, sl, #7
   1cbc4:	sub	sp, sp, sl
   1cbc8:	add	r9, sp, #8
   1cbcc:	mov	r0, r9
   1cbd0:	mov	sl, #0
   1cbd4:	sub	r3, fp, #52	; 0x34
   1cbd8:	str	r3, [fp, #-60]	; 0xffffffc4
   1cbdc:	add	sl, sl, #1
   1cbe0:	bl	6ae0 <stpcpy@plt>
   1cbe4:	cmp	sl, #3
   1cbe8:	beq	1cb00 <blkid_probe_get_size@plt+0x155e8>
   1cbec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cbf0:	ldr	r1, [r3, sl, lsl #2]
   1cbf4:	cmp	r1, #0
   1cbf8:	bne	1cbdc <blkid_probe_get_size@plt+0x156c4>
   1cbfc:	b	1cb00 <blkid_probe_get_size@plt+0x155e8>
   1cc00:	ldr	r2, [pc, #268]	; 1cd14 <blkid_probe_get_size@plt+0x157fc>
   1cc04:	ldr	r1, [pc, #268]	; 1cd18 <blkid_probe_get_size@plt+0x15800>
   1cc08:	add	r2, pc, r2
   1cc0c:	add	r2, r2, #256	; 0x100
   1cc10:	str	r2, [sp]
   1cc14:	ldr	r2, [pc, #256]	; 1cd1c <blkid_probe_get_size@plt+0x15804>
   1cc18:	mov	r3, #80	; 0x50
   1cc1c:	add	r2, pc, r2
   1cc20:	add	r1, pc, r1
   1cc24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cc28:	ldr	r3, [pc, #240]	; 1cd20 <blkid_probe_get_size@plt+0x15808>
   1cc2c:	ldr	r2, [pc, #240]	; 1cd24 <blkid_probe_get_size@plt+0x1580c>
   1cc30:	add	r3, pc, r3
   1cc34:	ldr	r1, [pc, #236]	; 1cd28 <blkid_probe_get_size@plt+0x15810>
   1cc38:	add	r3, r3, #256	; 0x100
   1cc3c:	str	r3, [sp]
   1cc40:	mov	r0, r9
   1cc44:	mov	r3, #81	; 0x51
   1cc48:	add	r2, pc, r2
   1cc4c:	add	r1, pc, r1
   1cc50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cc54:	ldr	r2, [pc, #208]	; 1cd2c <blkid_probe_get_size@plt+0x15814>
   1cc58:	mov	r0, r3
   1cc5c:	add	r2, pc, r2
   1cc60:	add	r3, r2, #256	; 0x100
   1cc64:	ldr	r1, [pc, #196]	; 1cd30 <blkid_probe_get_size@plt+0x15818>
   1cc68:	ldr	r2, [pc, #196]	; 1cd34 <blkid_probe_get_size@plt+0x1581c>
   1cc6c:	str	r3, [sp]
   1cc70:	add	r2, pc, r2
   1cc74:	mov	r3, #82	; 0x52
   1cc78:	add	r1, pc, r1
   1cc7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cc80:	ldr	r3, [pc, #176]	; 1cd38 <blkid_probe_get_size@plt+0x15820>
   1cc84:	ldr	r2, [pc, #176]	; 1cd3c <blkid_probe_get_size@plt+0x15824>
   1cc88:	add	r3, pc, r3
   1cc8c:	ldr	r1, [pc, #172]	; 1cd40 <blkid_probe_get_size@plt+0x15828>
   1cc90:	add	r3, r3, #256	; 0x100
   1cc94:	str	r3, [sp]
   1cc98:	mov	r0, r6
   1cc9c:	mov	r3, #83	; 0x53
   1cca0:	add	r2, pc, r2
   1cca4:	add	r1, pc, r1
   1cca8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ccac:	ldr	r3, [pc, #144]	; 1cd44 <blkid_probe_get_size@plt+0x1582c>
   1ccb0:	ldr	r2, [pc, #144]	; 1cd48 <blkid_probe_get_size@plt+0x15830>
   1ccb4:	add	r3, pc, r3
   1ccb8:	ldr	r1, [pc, #140]	; 1cd4c <blkid_probe_get_size@plt+0x15834>
   1ccbc:	add	r3, r3, #256	; 0x100
   1ccc0:	str	r3, [sp]
   1ccc4:	mov	r0, r7
   1ccc8:	mov	r3, #84	; 0x54
   1cccc:	add	r2, pc, r2
   1ccd0:	add	r1, pc, r1
   1ccd4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ccd8:	ldr	r2, [pc, #112]	; 1cd50 <blkid_probe_get_size@plt+0x15838>
   1ccdc:	ldr	r1, [pc, #112]	; 1cd54 <blkid_probe_get_size@plt+0x1583c>
   1cce0:	add	r2, pc, r2
   1cce4:	add	r2, r2, #256	; 0x100
   1cce8:	str	r2, [sp]
   1ccec:	ldr	r2, [pc, #100]	; 1cd58 <blkid_probe_get_size@plt+0x15840>
   1ccf0:	mov	r3, #89	; 0x59
   1ccf4:	add	r2, pc, r2
   1ccf8:	add	r1, pc, r1
   1ccfc:	mov	r0, #0
   1cd00:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cd04:	bl	6fb4 <__stack_chk_fail@plt>
   1cd08:	andeq	fp, r7, ip, asr #1
   1cd0c:	andeq	r0, r0, ip, lsr r4
   1cd10:	ldrdeq	r5, [r5], -r8
   1cd14:	andeq	ip, r4, r0, lsl #20
   1cd18:	andeq	sp, r4, r4, ror r5
   1cd1c:	andeq	sp, r4, ip, asr r5
   1cd20:	ldrdeq	ip, [r4], -r8
   1cd24:	andeq	sp, r4, r0, lsr r5
   1cd28:	andeq	sp, r4, r0, asr r5
   1cd2c:	andeq	ip, r4, ip, lsr #19
   1cd30:	andeq	sp, r4, ip, lsr #10
   1cd34:	andeq	sp, r4, r8, lsl #10
   1cd38:	andeq	ip, r4, r0, lsl #19
   1cd3c:	ldrdeq	sp, [r4], -r8
   1cd40:	andeq	sp, r4, r8, lsl #10
   1cd44:	andeq	ip, r4, r4, asr r9
   1cd48:	andeq	sp, r4, ip, lsr #9
   1cd4c:	andeq	r7, r5, ip, lsr #22
   1cd50:	andeq	ip, r4, r8, lsr #18
   1cd54:	andeq	r8, r4, r0, lsr #7
   1cd58:	andeq	sp, r4, r4, lsl #9
   1cd5c:	ldr	r3, [pc, #788]	; 1d078 <blkid_probe_get_size@plt+0x15b60>
   1cd60:	ldr	ip, [pc, #788]	; 1d07c <blkid_probe_get_size@plt+0x15b64>
   1cd64:	add	r3, pc, r3
   1cd68:	push	{r4, r5, r6, r7, r8, fp, lr}
   1cd6c:	add	fp, sp, #24
   1cd70:	sub	sp, sp, #52	; 0x34
   1cd74:	ldr	r6, [r3, ip]
   1cd78:	cmp	r0, #0
   1cd7c:	ldr	r3, [r6]
   1cd80:	str	r3, [fp, #-32]	; 0xffffffe0
   1cd84:	beq	1cf88 <blkid_probe_get_size@plt+0x15a70>
   1cd88:	cmp	r1, #0
   1cd8c:	mov	r8, r1
   1cd90:	beq	1cfb0 <blkid_probe_get_size@plt+0x15a98>
   1cd94:	sub	r1, fp, #64	; 0x40
   1cd98:	mov	r7, r2
   1cd9c:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   1cda0:	cmp	r0, #0
   1cda4:	blt	1ce74 <blkid_probe_get_size@plt+0x1595c>
   1cda8:	mov	r4, #0
   1cdac:	ldr	r2, [pc, #716]	; 1d080 <blkid_probe_get_size@plt+0x15b68>
   1cdb0:	ldr	r3, [pc, #716]	; 1d084 <blkid_probe_get_size@plt+0x15b6c>
   1cdb4:	mov	r5, r4
   1cdb8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1cdbc:	add	r4, r4, #1
   1cdc0:	add	r2, pc, r2
   1cdc4:	add	r3, pc, r3
   1cdc8:	mov	r0, #15
   1cdcc:	cmp	r4, #4
   1cdd0:	str	r8, [fp, #-56]	; 0xffffffc8
   1cdd4:	str	r2, [fp, #-60]	; 0xffffffc4
   1cdd8:	str	r3, [fp, #-52]	; 0xffffffcc
   1cddc:	sub	r8, fp, #60	; 0x3c
   1cde0:	str	r1, [fp, #-48]	; 0xffffffd0
   1cde4:	add	r5, r5, r0
   1cde8:	beq	1ce0c <blkid_probe_get_size@plt+0x158f4>
   1cdec:	ldr	r0, [r8, r4, lsl #2]
   1cdf0:	cmp	r0, #0
   1cdf4:	beq	1ce0c <blkid_probe_get_size@plt+0x158f4>
   1cdf8:	bl	723c <strlen@plt>
   1cdfc:	add	r4, r4, #1
   1ce00:	cmp	r4, #4
   1ce04:	add	r5, r5, r0
   1ce08:	bne	1cdec <blkid_probe_get_size@plt+0x158d4>
   1ce0c:	add	r3, r5, #1
   1ce10:	cmp	r3, #4194304	; 0x400000
   1ce14:	bhi	1cf5c <blkid_probe_get_size@plt+0x15a44>
   1ce18:	add	r5, r5, #15
   1ce1c:	bic	r5, r5, #7
   1ce20:	sub	sp, sp, r5
   1ce24:	ldr	r1, [pc, #604]	; 1d088 <blkid_probe_get_size@plt+0x15b70>
   1ce28:	add	r8, sp, #8
   1ce2c:	add	r1, pc, r1
   1ce30:	mov	r0, r8
   1ce34:	mov	r4, #0
   1ce38:	sub	r5, fp, #60	; 0x3c
   1ce3c:	add	r4, r4, #1
   1ce40:	bl	6ae0 <stpcpy@plt>
   1ce44:	cmp	r4, #4
   1ce48:	beq	1ce58 <blkid_probe_get_size@plt+0x15940>
   1ce4c:	ldr	r1, [r5, r4, lsl #2]
   1ce50:	cmp	r1, #0
   1ce54:	bne	1ce3c <blkid_probe_get_size@plt+0x15924>
   1ce58:	cmp	r7, #0
   1ce5c:	bne	1ce8c <blkid_probe_get_size@plt+0x15974>
   1ce60:	mov	r0, r8
   1ce64:	bl	6e28 <unlink@plt>
   1ce68:	cmp	r0, #0
   1ce6c:	blt	1cf44 <blkid_probe_get_size@plt+0x15a2c>
   1ce70:	mov	r0, #0
   1ce74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ce78:	ldr	r3, [r6]
   1ce7c:	cmp	r2, r3
   1ce80:	bne	1d074 <blkid_probe_get_size@plt+0x15b5c>
   1ce84:	sub	sp, fp, #24
   1ce88:	pop	{r4, r5, r6, r7, r8, fp, pc}
   1ce8c:	ldr	r1, [pc, #504]	; 1d08c <blkid_probe_get_size@plt+0x15b74>
   1ce90:	mov	r0, r8
   1ce94:	add	r1, pc, r1
   1ce98:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
   1ce9c:	mov	r1, #2654208	; 0x288000
   1cea0:	mov	r0, r8
   1cea4:	bl	6ec4 <open64@plt>
   1cea8:	subs	r5, r0, #0
   1ceac:	bge	1ced8 <blkid_probe_get_size@plt+0x159c0>
   1ceb0:	bl	732c <__errno_location@plt>
   1ceb4:	mov	r4, r0
   1ceb8:	ldr	r0, [r0]
   1cebc:	cmp	r0, #2
   1cec0:	beq	1cfe8 <blkid_probe_get_size@plt+0x15ad0>
   1cec4:	rsb	r4, r0, #0
   1cec8:	mov	r0, r5
   1cecc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   1ced0:	and	r0, r4, r4, asr #31
   1ced4:	b	1ce74 <blkid_probe_get_size@plt+0x1595c>
   1ced8:	ldr	r2, [pc, #432]	; 1d090 <blkid_probe_get_size@plt+0x15b78>
   1cedc:	mov	r3, #26
   1cee0:	add	r2, pc, r2
   1cee4:	sub	r4, fp, #60	; 0x3c
   1cee8:	stm	sp, {r2, r5}
   1ceec:	mov	r0, r4
   1cef0:	mov	r1, r3
   1cef4:	mov	r2, #1
   1cef8:	bl	7260 <__snprintf_chk@plt>
   1cefc:	cmp	r0, #25
   1cf00:	bhi	1d048 <blkid_probe_get_size@plt+0x15b30>
   1cf04:	mov	r1, #292	; 0x124
   1cf08:	mov	r0, r4
   1cf0c:	bl	6f24 <chmod@plt>
   1cf10:	cmp	r0, #0
   1cf14:	blt	1d00c <blkid_probe_get_size@plt+0x15af4>
   1cf18:	mov	r3, #0
   1cf1c:	mov	r1, r4
   1cf20:	mov	r2, r3
   1cf24:	mvn	r0, #99	; 0x63
   1cf28:	bl	6b70 <utimensat@plt>
   1cf2c:	cmp	r0, #0
   1cf30:	bge	1cfdc <blkid_probe_get_size@plt+0x15ac4>
   1cf34:	bl	732c <__errno_location@plt>
   1cf38:	mov	r7, r0
   1cf3c:	ldr	r0, [r7]
   1cf40:	b	1cec4 <blkid_probe_get_size@plt+0x159ac>
   1cf44:	bl	732c <__errno_location@plt>
   1cf48:	ldr	r0, [r0]
   1cf4c:	cmp	r0, #2
   1cf50:	rsbne	r0, r0, #0
   1cf54:	bne	1ce74 <blkid_probe_get_size@plt+0x1595c>
   1cf58:	b	1ce70 <blkid_probe_get_size@plt+0x15958>
   1cf5c:	ldr	r2, [pc, #304]	; 1d094 <blkid_probe_get_size@plt+0x15b7c>
   1cf60:	ldr	r1, [pc, #304]	; 1d098 <blkid_probe_get_size@plt+0x15b80>
   1cf64:	add	r2, pc, r2
   1cf68:	add	r2, r2, #280	; 0x118
   1cf6c:	str	r2, [sp]
   1cf70:	ldr	r2, [pc, #292]	; 1d09c <blkid_probe_get_size@plt+0x15b84>
   1cf74:	ldr	r3, [pc, #292]	; 1d0a0 <blkid_probe_get_size@plt+0x15b88>
   1cf78:	add	r2, pc, r2
   1cf7c:	add	r1, pc, r1
   1cf80:	mov	r0, #0
   1cf84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cf88:	ldr	r2, [pc, #276]	; 1d0a4 <blkid_probe_get_size@plt+0x15b8c>
   1cf8c:	ldr	r1, [pc, #276]	; 1d0a8 <blkid_probe_get_size@plt+0x15b90>
   1cf90:	add	r2, pc, r2
   1cf94:	add	r2, r2, #280	; 0x118
   1cf98:	str	r2, [sp]
   1cf9c:	ldr	r2, [pc, #264]	; 1d0ac <blkid_probe_get_size@plt+0x15b94>
   1cfa0:	ldr	r3, [pc, #264]	; 1d0b0 <blkid_probe_get_size@plt+0x15b98>
   1cfa4:	add	r2, pc, r2
   1cfa8:	add	r1, pc, r1
   1cfac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cfb0:	ldr	r3, [pc, #252]	; 1d0b4 <blkid_probe_get_size@plt+0x15b9c>
   1cfb4:	mov	r0, r1
   1cfb8:	add	r3, pc, r3
   1cfbc:	ldr	r2, [pc, #244]	; 1d0b8 <blkid_probe_get_size@plt+0x15ba0>
   1cfc0:	ldr	r1, [pc, #244]	; 1d0bc <blkid_probe_get_size@plt+0x15ba4>
   1cfc4:	add	r3, r3, #280	; 0x118
   1cfc8:	str	r3, [sp]
   1cfcc:	add	r2, pc, r2
   1cfd0:	ldr	r3, [pc, #232]	; 1d0c0 <blkid_probe_get_size@plt+0x15ba8>
   1cfd4:	add	r1, pc, r1
   1cfd8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1cfdc:	mov	r0, r5
   1cfe0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   1cfe4:	b	1ce70 <blkid_probe_get_size@plt+0x15958>
   1cfe8:	mov	r0, r8
   1cfec:	mov	r2, #292	; 0x124
   1cff0:	ldr	r1, [pc, #204]	; 1d0c4 <blkid_probe_get_size@plt+0x15bac>
   1cff4:	bl	6ec4 <open64@plt>
   1cff8:	subs	r5, r0, #0
   1cffc:	bge	1ced8 <blkid_probe_get_size@plt+0x159c0>
   1d000:	ldr	r0, [r4]
   1d004:	rsb	r4, r0, #0
   1d008:	b	1cec8 <blkid_probe_get_size@plt+0x159b0>
   1d00c:	bl	732c <__errno_location@plt>
   1d010:	mov	r3, #0
   1d014:	mov	r2, r3
   1d018:	mov	r1, r4
   1d01c:	mov	r7, r0
   1d020:	mvn	r0, #99	; 0x63
   1d024:	ldr	r4, [r7]
   1d028:	bl	6b70 <utimensat@plt>
   1d02c:	cmp	r4, #0
   1d030:	movgt	r3, #0
   1d034:	movle	r3, #1
   1d038:	ands	r3, r3, r0, lsr #31
   1d03c:	rsbeq	r4, r4, #0
   1d040:	bne	1cf3c <blkid_probe_get_size@plt+0x15a24>
   1d044:	b	1cec8 <blkid_probe_get_size@plt+0x159b0>
   1d048:	ldr	r2, [pc, #120]	; 1d0c8 <blkid_probe_get_size@plt+0x15bb0>
   1d04c:	ldr	r1, [pc, #120]	; 1d0cc <blkid_probe_get_size@plt+0x15bb4>
   1d050:	add	r2, pc, r2
   1d054:	add	r2, r2, #292	; 0x124
   1d058:	str	r2, [sp]
   1d05c:	ldr	r2, [pc, #108]	; 1d0d0 <blkid_probe_get_size@plt+0x15bb8>
   1d060:	ldr	r3, [pc, #108]	; 1d0d4 <blkid_probe_get_size@plt+0x15bbc>
   1d064:	add	r2, pc, r2
   1d068:	add	r1, pc, r1
   1d06c:	mov	r0, #0
   1d070:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1d074:	bl	6fb4 <__stack_chk_fail@plt>
   1d078:	andeq	sl, r7, r4, lsl #28
   1d07c:	andeq	r0, r0, ip, lsr r4
   1d080:	strdeq	sp, [r4], -r4
   1d084:	strdeq	fp, [r5], -ip
   1d088:	andeq	sp, r4, r8, lsl #7
   1d08c:	ldrdeq	ip, [r1], -r8
   1d090:	andeq	sp, r4, r4, ror #5
   1d094:	andeq	ip, r4, r4, lsr #13
   1d098:	andeq	r8, r4, ip, lsl r1
   1d09c:	andeq	sl, r4, r8, lsl r8
   1d0a0:	andeq	r0, r0, r1, lsl #6
   1d0a4:	andeq	ip, r4, r8, ror r6
   1d0a8:			; <UNDEFINED> instruction: 0x0004dfb8
   1d0ac:	andeq	sl, r4, ip, ror #15
   1d0b0:	strdeq	r0, [r0], -sl
   1d0b4:	andeq	ip, r4, r0, asr r6
   1d0b8:	andeq	sl, r4, r4, asr #15
   1d0bc:	andeq	r8, r4, r8, asr #16
   1d0c0:	strdeq	r0, [r0], -fp
   1d0c4:	andeq	r0, r8, r1, asr #1
   1d0c8:			; <UNDEFINED> instruction: 0x0004c5b8
   1d0cc:	andeq	sp, r4, r8, lsl #3
   1d0d0:	andeq	sp, r4, r4, ror r1
   1d0d4:	andeq	r0, r0, r3, ror #2
   1d0d8:	ldr	r3, [pc, #1272]	; 1d5d8 <blkid_probe_get_size@plt+0x160c0>
   1d0dc:	ldr	r2, [pc, #1272]	; 1d5dc <blkid_probe_get_size@plt+0x160c4>
   1d0e0:	add	r3, pc, r3
   1d0e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0e8:	sub	sp, sp, #4160	; 0x1040
   1d0ec:	ldr	r2, [r3, r2]
   1d0f0:	sub	sp, sp, #44	; 0x2c
   1d0f4:	mov	r1, r2
   1d0f8:	add	r3, sp, #4160	; 0x1040
   1d0fc:	ldr	ip, [r1]
   1d100:	add	r3, r3, #36	; 0x24
   1d104:	add	fp, sp, #104	; 0x68
   1d108:	mov	sl, r0
   1d10c:	str	r2, [sp, #52]	; 0x34
   1d110:	sub	r0, fp, #4
   1d114:	mov	r2, #4096	; 0x1000
   1d118:	mov	r1, #0
   1d11c:	str	ip, [r3]
   1d120:	bl	6c84 <memset@plt>
   1d124:	cmp	sl, #0
   1d128:	beq	1d5a0 <blkid_probe_get_size@plt+0x16088>
   1d12c:	ldrb	r3, [sl, #276]	; 0x114
   1d130:	cmp	r3, #0
   1d134:	movne	r0, #0
   1d138:	bne	1d350 <blkid_probe_get_size@plt+0x15e38>
   1d13c:	ldr	r4, [sl, #268]	; 0x10c
   1d140:	mov	r0, r4
   1d144:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1d148:	ldr	r5, [sl, #272]	; 0x110
   1d14c:	cmp	r0, #0
   1d150:	bne	1d164 <blkid_probe_get_size@plt+0x15c4c>
   1d154:	mov	r0, r5
   1d158:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1d15c:	cmp	r0, #0
   1d160:	beq	1d378 <blkid_probe_get_size@plt+0x15e60>
   1d164:	mov	r2, #8
   1d168:	mov	r3, #21
   1d16c:	ldr	r1, [pc, #1132]	; 1d5e0 <blkid_probe_get_size@plt+0x160c8>
   1d170:	mov	r6, #0
   1d174:	str	r2, [fp]
   1d178:	strh	r3, [fp, #4]
   1d17c:	mov	r2, #6
   1d180:	mvn	r3, #0
   1d184:	mov	r7, #32
   1d188:	mov	r8, #1
   1d18c:	strh	r6, [fp, #-2]
   1d190:	strh	r6, [fp, #14]
   1d194:	strh	r7, [fp, #-4]
   1d198:	strh	r2, [fp, #12]
   1d19c:	mov	r0, r5
   1d1a0:	str	r3, [fp, #16]
   1d1a4:	str	r1, [sp, #112]	; 0x70
   1d1a8:	strb	r8, [sp, #110]	; 0x6e
   1d1ac:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1d1b0:	cmp	r0, #0
   1d1b4:	bne	1d388 <blkid_probe_get_size@plt+0x15e70>
   1d1b8:	add	r5, fp, #20
   1d1bc:	mov	r8, #4
   1d1c0:	mov	r7, #3
   1d1c4:	mov	r0, r4
   1d1c8:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1d1cc:	cmp	r0, #0
   1d1d0:	addeq	r6, sp, #100	; 0x64
   1d1d4:	beq	1d300 <blkid_probe_get_size@plt+0x15de8>
   1d1d8:	mov	r3, #0
   1d1dc:	mvn	r2, #1
   1d1e0:	add	r6, sp, #100	; 0x64
   1d1e4:	strd	r2, [fp, #-20]	; 0xffffffec
   1d1e8:	add	r3, sp, #84	; 0x54
   1d1ec:	str	r3, [sp, #44]	; 0x2c
   1d1f0:	add	r3, sp, #80	; 0x50
   1d1f4:	str	r3, [sp, #16]
   1d1f8:	add	r3, sp, #76	; 0x4c
   1d1fc:	str	r3, [sp, #8]
   1d200:	mov	r0, r4
   1d204:	b	1d27c <blkid_probe_get_size@plt+0x15d64>
   1d208:	ldr	r2, [pc, #980]	; 1d5e4 <blkid_probe_get_size@plt+0x160cc>
   1d20c:	str	r0, [r5, #4]
   1d210:	str	r2, [r5]
   1d214:	mov	r2, #28
   1d218:	str	lr, [r6, r1]
   1d21c:	mov	r0, r8
   1d220:	strh	ip, [r6, r1]
   1d224:	str	r2, [r3, #4]
   1d228:	bl	1c9e8 <blkid_probe_get_size@plt+0x154d0>
   1d22c:	add	r1, r4, #24
   1d230:	add	r4, r4, #32
   1d234:	add	ip, r6, r1
   1d238:	ldr	lr, [pc, #936]	; 1d5e8 <blkid_probe_get_size@plt+0x160d0>
   1d23c:	add	r2, r7, #4
   1d240:	add	r3, r6, r4
   1d244:	str	lr, [r6, r1]
   1d248:	str	r0, [ip, #4]
   1d24c:	ldr	ip, [pc, #920]	; 1d5ec <blkid_probe_get_size@plt+0x160d4>
   1d250:	add	r0, r2, #2
   1d254:	mov	r1, #0
   1d258:	str	r1, [r3]
   1d25c:	cmp	r0, ip
   1d260:	mvn	r1, #0
   1d264:	mov	r0, #6
   1d268:	add	r7, r2, #1
   1d26c:	strh	r0, [r3]
   1d270:	str	r1, [r3, #4]
   1d274:	bhi	1d598 <blkid_probe_get_size@plt+0x16080>
   1d278:	ldr	r0, [sl, #268]	; 0x10c
   1d27c:	ldr	r3, [sp, #16]
   1d280:	ldr	r2, [sp, #8]
   1d284:	ldr	r1, [sp, #44]	; 0x2c
   1d288:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   1d28c:	lsl	r4, r7, #3
   1d290:	add	r5, r4, #8
   1d294:	add	r5, r6, r5
   1d298:	add	r9, r6, r4
   1d29c:	cmp	r0, #0
   1d2a0:	beq	1d2ec <blkid_probe_get_size@plt+0x15dd4>
   1d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	bl	1c9e8 <blkid_probe_get_size@plt+0x154d0>
   1d2ac:	ldr	r8, [fp, #-28]	; 0xffffffe4
   1d2b0:	mov	lr, #0
   1d2b4:	mov	r3, #24
   1d2b8:	mov	ip, #32
   1d2bc:	add	r1, r4, #16
   1d2c0:	cmp	r8, lr
   1d2c4:	str	lr, [r6, r7, lsl #3]
   1d2c8:	add	r2, r7, #2
   1d2cc:	strh	ip, [r6, r4]
   1d2d0:	str	r3, [r9, #4]
   1d2d4:	add	r3, r6, r1
   1d2d8:	bne	1d208 <blkid_probe_get_size@plt+0x15cf0>
   1d2dc:	ldr	r1, [pc, #772]	; 1d5e8 <blkid_probe_get_size@plt+0x160d0>
   1d2e0:	str	r0, [r5, #4]
   1d2e4:	str	r1, [r5]
   1d2e8:	b	1d24c <blkid_probe_get_size@plt+0x15d34>
   1d2ec:	add	r8, r7, #2
   1d2f0:	mov	r3, #6
   1d2f4:	str	r0, [r9]
   1d2f8:	str	r0, [r9, #4]
   1d2fc:	strh	r3, [r9]
   1d300:	mov	r3, #0
   1d304:	str	r3, [r5]
   1d308:	mov	r3, #6
   1d30c:	strh	r3, [r5]
   1d310:	mvn	r3, #0
   1d314:	str	r3, [r5, #4]
   1d318:	mov	r3, #8
   1d31c:	ldr	r0, [sl, #4]
   1d320:	strh	r8, [fp, #-12]
   1d324:	mov	r2, #26
   1d328:	str	r3, [sp]
   1d32c:	mov	r1, #1
   1d330:	sub	r3, fp, #12
   1d334:	str	r6, [fp, #-8]
   1d338:	bl	70b0 <setsockopt@plt>
   1d33c:	cmp	r0, #0
   1d340:	bge	1d378 <blkid_probe_get_size@plt+0x15e60>
   1d344:	bl	732c <__errno_location@plt>
   1d348:	ldr	r0, [r0]
   1d34c:	rsb	r0, r0, #0
   1d350:	add	r3, sp, #4160	; 0x1040
   1d354:	add	r3, r3, #36	; 0x24
   1d358:	ldr	r2, [r3]
   1d35c:	ldr	r3, [sp, #52]	; 0x34
   1d360:	ldr	r3, [r3]
   1d364:	cmp	r2, r3
   1d368:	bne	1d5d4 <blkid_probe_get_size@plt+0x160bc>
   1d36c:	add	sp, sp, #4160	; 0x1040
   1d370:	add	sp, sp, #44	; 0x2c
   1d374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d378:	mov	r3, #1
   1d37c:	strb	r3, [sl, #276]	; 0x114
   1d380:	mov	r0, #0
   1d384:	b	1d350 <blkid_probe_get_size@plt+0x15e38>
   1d388:	sub	r0, r0, #1
   1d38c:	mvn	r3, #1
   1d390:	add	r0, r0, r0, lsl r8
   1d394:	str	r3, [fp, #-20]	; 0xffffffec
   1d398:	lsl	r0, r0, r8
   1d39c:	add	r0, r0, r8
   1d3a0:	add	r3, sp, #72	; 0x48
   1d3a4:	uxtb	r2, r0
   1d3a8:	str	r3, [sp, #56]	; 0x38
   1d3ac:	add	r3, sp, #84	; 0x54
   1d3b0:	str	r7, [sp, #68]	; 0x44
   1d3b4:	str	r6, [fp, #-16]
   1d3b8:	str	r2, [sp, #48]	; 0x30
   1d3bc:	add	r9, fp, #28
   1d3c0:	mov	r7, #4
   1d3c4:	str	r3, [sp, #44]	; 0x2c
   1d3c8:	mov	r0, r5
   1d3cc:	strd	sl, [sp, #60]	; 0x3c
   1d3d0:	b	1d550 <blkid_probe_get_size@plt+0x16038>
   1d3d4:	ldr	r3, [sp, #64]	; 0x40
   1d3d8:	str	r2, [sp, #32]
   1d3dc:	ldr	r0, [r3, #-32]	; 0xffffffe0
   1d3e0:	bl	1c9e8 <blkid_probe_get_size@plt+0x154d0>
   1d3e4:	str	r6, [r9, #-8]
   1d3e8:	str	r6, [r5, #4]
   1d3ec:	mov	r5, #3
   1d3f0:	lsr	r1, r0, #6
   1d3f4:	and	r1, r1, #63	; 0x3f
   1d3f8:	sub	lr, r1, #32
   1d3fc:	lsr	r3, r0, #12
   1d400:	and	r3, r3, #63	; 0x3f
   1d404:	lsl	fp, r8, lr
   1d408:	sub	lr, r3, #32
   1d40c:	and	ip, r0, #63	; 0x3f
   1d410:	lsl	r2, r8, lr
   1d414:	sub	lr, ip, #32
   1d418:	str	r2, [sp, #12]
   1d41c:	ldr	r2, [sp, #32]
   1d420:	lsr	r0, r0, #18
   1d424:	mov	r7, r2
   1d428:	lsl	r2, r8, lr
   1d42c:	rsb	lr, r1, #32
   1d430:	str	r2, [sp, #20]
   1d434:	orr	fp, fp, r8, lsr lr
   1d438:	rsb	r2, r3, #32
   1d43c:	ldr	lr, [sp, #12]
   1d440:	and	r0, r0, #63	; 0x3f
   1d444:	orr	r2, lr, r8, lsr r2
   1d448:	str	r2, [sp, #12]
   1d44c:	sub	r2, r0, #32
   1d450:	lsl	r3, r8, r3
   1d454:	lsl	r2, r8, r2
   1d458:	str	r2, [sp, #28]
   1d45c:	str	r3, [sp, #8]
   1d460:	rsb	r2, r0, #32
   1d464:	ldr	r3, [sp, #28]
   1d468:	ldr	lr, [sp, #20]
   1d46c:	orr	r3, r3, r8, lsr r2
   1d470:	lsl	sl, r8, r1
   1d474:	str	r3, [sp, #28]
   1d478:	rsb	r1, ip, #32
   1d47c:	lsl	r3, r8, ip
   1d480:	orr	r1, lr, r8, lsr r1
   1d484:	str	r3, [sp, #16]
   1d488:	lsl	r3, r8, r0
   1d48c:	str	r1, [sp, #20]
   1d490:	str	r3, [sp, #24]
   1d494:	ldrd	r2, [sp, #8]
   1d498:	ldrd	r0, [sp, #16]
   1d49c:	mov	ip, #84	; 0x54
   1d4a0:	orr	r2, r2, sl
   1d4a4:	orr	r3, r3, fp
   1d4a8:	orr	r0, r0, r2
   1d4ac:	orr	r1, r1, r3
   1d4b0:	mov	r2, r0
   1d4b4:	mov	r3, r1
   1d4b8:	ldrd	r0, [sp, #24]
   1d4bc:	orr	r0, r0, r2
   1d4c0:	orr	r1, r1, r3
   1d4c4:	ldr	r2, [sp, #68]	; 0x44
   1d4c8:	strd	r0, [sp, #32]
   1d4cc:	ldr	r3, [sp, #36]	; 0x24
   1d4d0:	mov	r1, #21
   1d4d4:	strh	r2, [r4, #-56]	; 0xffffffc8
   1d4d8:	str	r2, [r4, #-52]	; 0xffffffcc
   1d4dc:	str	r6, [r9]
   1d4e0:	str	r6, [r9, #4]
   1d4e4:	str	r3, [r4, #-44]	; 0xffffffd4
   1d4e8:	str	r3, [r4, #-36]	; 0xffffffdc
   1d4ec:	strb	r6, [r4, #-38]	; 0xffffffda
   1d4f0:	strh	ip, [r4, #-48]	; 0xffffffd0
   1d4f4:	strh	r1, [r4, #-40]	; 0xffffffd8
   1d4f8:	strb	r5, [r4, #-37]	; 0xffffffdb
   1d4fc:	ldr	r5, [sp, #48]	; 0x30
   1d500:	str	r6, [r9, #16]
   1d504:	str	r6, [r9, #20]
   1d508:	sub	r3, r5, #6
   1d50c:	strh	r2, [r4, #-32]	; 0xffffffe0
   1d510:	ldr	r2, [sp, #60]	; 0x3c
   1d514:	mov	r0, #36	; 0x24
   1d518:	uxtb	r3, r3
   1d51c:	str	r0, [r4, #-28]	; 0xffffffe4
   1d520:	str	r3, [sp, #48]	; 0x30
   1d524:	ldr	r0, [r2, #272]	; 0x110
   1d528:	ldrd	r2, [sp, #32]
   1d52c:	str	r6, [r9, #24]
   1d530:	str	r6, [r9, #28]
   1d534:	mov	r9, r4
   1d538:	strb	r5, [r4, #-14]
   1d53c:	str	r2, [r4, #-20]	; 0xffffffec
   1d540:	str	r2, [r4, #-12]
   1d544:	strh	ip, [r4, #-24]	; 0xffffffe8
   1d548:	strh	r1, [r4, #-16]
   1d54c:	strb	r6, [r4, #-13]
   1d550:	ldr	r2, [sp, #56]	; 0x38
   1d554:	ldr	r1, [sp, #44]	; 0x2c
   1d558:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   1d55c:	sub	r5, r9, #8
   1d560:	add	r4, r9, #48	; 0x30
   1d564:	add	r2, r7, #6
   1d568:	cmp	r0, #0
   1d56c:	bne	1d3d4 <blkid_probe_get_size@plt+0x15ebc>
   1d570:	ldrd	sl, [sp, #60]	; 0x3c
   1d574:	mov	r2, r5
   1d578:	mov	r3, #6
   1d57c:	str	r0, [r2]
   1d580:	mov	r5, r9
   1d584:	str	r0, [r2, #4]
   1d588:	strh	r3, [r2]
   1d58c:	ldr	r4, [sl, #268]	; 0x10c
   1d590:	add	r8, r7, #1
   1d594:	b	1d1c4 <blkid_probe_get_size@plt+0x15cac>
   1d598:	mvn	r0, #6
   1d59c:	b	1d350 <blkid_probe_get_size@plt+0x15e38>
   1d5a0:	ldr	r3, [pc, #72]	; 1d5f0 <blkid_probe_get_size@plt+0x160d8>
   1d5a4:	ldr	r2, [pc, #72]	; 1d5f4 <blkid_probe_get_size@plt+0x160dc>
   1d5a8:	add	r3, pc, r3
   1d5ac:	ldr	r1, [pc, #68]	; 1d5f8 <blkid_probe_get_size@plt+0x160e0>
   1d5b0:	add	r3, r3, #304	; 0x130
   1d5b4:	mov	r0, sl
   1d5b8:	str	r3, [sp]
   1d5bc:	add	r2, pc, r2
   1d5c0:	mov	r3, #592	; 0x250
   1d5c4:	add	r1, pc, r1
   1d5c8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   1d5cc:	mvn	r0, #21
   1d5d0:	b	1d350 <blkid_probe_get_size@plt+0x15e38>
   1d5d4:	bl	6fb4 <__stack_chk_fail@plt>
   1d5d8:	andeq	sl, r7, r8, lsl #21
   1d5dc:	andeq	r0, r0, ip, lsr r4
   1d5e0:	mcr2	10, 7, ip, cr13, cr14, {7}	; <UNPREDICTABLE>
   1d5e4:	movweq	r0, #21
   1d5e8:	tsteq	r0, r5, lsl r0
   1d5ec:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1d5f0:	andeq	ip, r4, r0, rrx
   1d5f4:	andeq	r7, r4, r8, ror #29
   1d5f8:	andeq	r6, r5, ip, lsr #16
   1d5fc:	ldr	r3, [pc, #160]	; 1d6a4 <blkid_probe_get_size@plt+0x1618c>
   1d600:	ldr	r2, [pc, #160]	; 1d6a8 <blkid_probe_get_size@plt+0x16190>
   1d604:	add	r3, pc, r3
   1d608:	push	{r4, r5, lr}
   1d60c:	sub	sp, sp, #148	; 0x94
   1d610:	ldr	r4, [r3, r2]
   1d614:	subs	r5, r0, #0
   1d618:	ldr	r3, [r4]
   1d61c:	str	r3, [sp, #140]	; 0x8c
   1d620:	beq	1d678 <blkid_probe_get_size@plt+0x16160>
   1d624:	mov	r3, #12
   1d628:	add	r2, sp, #8
   1d62c:	add	r1, sp, r3
   1d630:	ldr	r0, [r5, #4]
   1d634:	str	r3, [sp, #8]
   1d638:	bl	7434 <getsockname@plt>
   1d63c:	cmp	r0, #0
   1d640:	blt	1d668 <blkid_probe_get_size@plt+0x16150>
   1d644:	ldr	r3, [sp, #16]
   1d648:	mov	r0, #0
   1d64c:	str	r3, [r5, #12]
   1d650:	ldr	r2, [sp, #140]	; 0x8c
   1d654:	ldr	r3, [r4]
   1d658:	cmp	r2, r3
   1d65c:	bne	1d6a0 <blkid_probe_get_size@plt+0x16188>
   1d660:	add	sp, sp, #148	; 0x94
   1d664:	pop	{r4, r5, pc}
   1d668:	bl	732c <__errno_location@plt>
   1d66c:	ldr	r0, [r0]
   1d670:	rsb	r0, r0, #0
   1d674:	b	1d650 <blkid_probe_get_size@plt+0x16138>
   1d678:	ldr	r2, [pc, #44]	; 1d6ac <blkid_probe_get_size@plt+0x16194>
   1d67c:	ldr	r1, [pc, #44]	; 1d6b0 <blkid_probe_get_size@plt+0x16198>
   1d680:	add	r2, pc, r2
   1d684:	add	r2, r2, #336	; 0x150
   1d688:	str	r2, [sp]
   1d68c:	ldr	r2, [pc, #32]	; 1d6b4 <blkid_probe_get_size@plt+0x1619c>
   1d690:	mov	r3, #70	; 0x46
   1d694:	add	r2, pc, r2
   1d698:	add	r1, pc, r1
   1d69c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1d6a0:	bl	6fb4 <__stack_chk_fail@plt>
   1d6a4:	andeq	sl, r7, r4, ror #10
   1d6a8:	andeq	r0, r0, ip, lsr r4
   1d6ac:	andeq	fp, r4, r8, lsl #31
   1d6b0:	andeq	r6, r5, r8, asr r7
   1d6b4:	andeq	r7, r4, r0, lsl lr
   1d6b8:	ldr	r3, [pc, #564]	; 1d8f4 <blkid_probe_get_size@plt+0x163dc>
   1d6bc:	ldr	r2, [pc, #564]	; 1d8f8 <blkid_probe_get_size@plt+0x163e0>
   1d6c0:	add	r3, pc, r3
   1d6c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d6c8:	sub	sp, sp, #28
   1d6cc:	ldr	r6, [r3, r2]
   1d6d0:	ldr	r4, [r1]
   1d6d4:	ldr	r0, [r0]
   1d6d8:	ldr	r3, [r6]
   1d6dc:	add	r1, sp, #16
   1d6e0:	str	r3, [sp, #20]
   1d6e4:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   1d6e8:	cmp	r0, #0
   1d6ec:	blt	1d870 <blkid_probe_get_size@plt+0x16358>
   1d6f0:	mov	r0, r4
   1d6f4:	add	r1, sp, #12
   1d6f8:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   1d6fc:	cmp	r0, #0
   1d700:	blt	1d89c <blkid_probe_get_size@plt+0x16384>
   1d704:	ldr	r5, [sp, #16]
   1d708:	ldr	r1, [pc, #492]	; 1d8fc <blkid_probe_get_size@plt+0x163e4>
   1d70c:	mov	r0, r5
   1d710:	add	r1, pc, r1
   1d714:	bl	7050 <strstr@plt>
   1d718:	ldr	r7, [sp, #12]
   1d71c:	cmp	r0, #0
   1d720:	beq	1d7a0 <blkid_probe_get_size@plt+0x16288>
   1d724:	add	r0, r0, #11
   1d728:	mov	r1, #47	; 0x2f
   1d72c:	bl	74c4 <strchr@plt>
   1d730:	subs	r8, r0, #0
   1d734:	beq	1d7a0 <blkid_probe_get_size@plt+0x16288>
   1d738:	sub	r4, r8, r5
   1d73c:	mov	r2, r4
   1d740:	mov	r1, r7
   1d744:	mov	r0, r5
   1d748:	bl	6a5c <strncmp@plt>
   1d74c:	cmp	r0, #0
   1d750:	bne	1d7a0 <blkid_probe_get_size@plt+0x16288>
   1d754:	ldr	r1, [pc, #420]	; 1d900 <blkid_probe_get_size@plt+0x163e8>
   1d758:	mov	r2, #9
   1d75c:	add	r1, pc, r1
   1d760:	mov	r0, r8
   1d764:	bl	6a5c <strncmp@plt>
   1d768:	add	r4, r7, r4
   1d76c:	cmp	r0, #0
   1d770:	bne	1d8c8 <blkid_probe_get_size@plt+0x163b0>
   1d774:	cmn	r8, #9
   1d778:	beq	1d8c8 <blkid_probe_get_size@plt+0x163b0>
   1d77c:	ldr	r1, [pc, #384]	; 1d904 <blkid_probe_get_size@plt+0x163ec>
   1d780:	mov	r2, #8
   1d784:	add	r1, pc, r1
   1d788:	mov	r0, r4
   1d78c:	bl	6a5c <strncmp@plt>
   1d790:	cmp	r0, #0
   1d794:	bne	1d844 <blkid_probe_get_size@plt+0x1632c>
   1d798:	cmn	r4, #8
   1d79c:	beq	1d844 <blkid_probe_get_size@plt+0x1632c>
   1d7a0:	ldr	r4, [pc, #352]	; 1d908 <blkid_probe_get_size@plt+0x163f0>
   1d7a4:	mov	r0, r5
   1d7a8:	add	r4, pc, r4
   1d7ac:	mov	r1, r4
   1d7b0:	bl	7050 <strstr@plt>
   1d7b4:	mov	r1, r4
   1d7b8:	mov	r8, r0
   1d7bc:	mov	r0, r7
   1d7c0:	bl	7050 <strstr@plt>
   1d7c4:	cmp	r8, #0
   1d7c8:	mov	r4, r0
   1d7cc:	beq	1d7fc <blkid_probe_get_size@plt+0x162e4>
   1d7d0:	cmp	r0, #0
   1d7d4:	beq	1d82c <blkid_probe_get_size@plt+0x16314>
   1d7d8:	mov	r1, r7
   1d7dc:	mov	r0, r5
   1d7e0:	bl	7314 <strcmp@plt>
   1d7e4:	ldr	r2, [sp, #20]
   1d7e8:	ldr	r3, [r6]
   1d7ec:	cmp	r2, r3
   1d7f0:	bne	1d8f0 <blkid_probe_get_size@plt+0x163d8>
   1d7f4:	add	sp, sp, #28
   1d7f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d7fc:	ldr	r9, [pc, #264]	; 1d90c <blkid_probe_get_size@plt+0x163f4>
   1d800:	mov	r0, r5
   1d804:	add	r9, pc, r9
   1d808:	mov	r1, r9
   1d80c:	bl	7050 <strstr@plt>
   1d810:	cmp	r4, #0
   1d814:	mov	r8, r0
   1d818:	beq	1d84c <blkid_probe_get_size@plt+0x16334>
   1d81c:	cmp	r8, #0
   1d820:	bne	1d7d8 <blkid_probe_get_size@plt+0x162c0>
   1d824:	mvn	r0, #0
   1d828:	b	1d7e4 <blkid_probe_get_size@plt+0x162cc>
   1d82c:	ldr	r1, [pc, #220]	; 1d910 <blkid_probe_get_size@plt+0x163f8>
   1d830:	mov	r0, r7
   1d834:	add	r1, pc, r1
   1d838:	bl	7050 <strstr@plt>
   1d83c:	cmp	r0, #0
   1d840:	bne	1d7d8 <blkid_probe_get_size@plt+0x162c0>
   1d844:	mov	r0, #1
   1d848:	b	1d7e4 <blkid_probe_get_size@plt+0x162cc>
   1d84c:	mov	r1, r9
   1d850:	mov	r0, r7
   1d854:	bl	7050 <strstr@plt>
   1d858:	cmp	r0, #0
   1d85c:	bne	1d81c <blkid_probe_get_size@plt+0x16304>
   1d860:	cmp	r8, #0
   1d864:	beq	1d7d8 <blkid_probe_get_size@plt+0x162c0>
   1d868:	mov	r0, #1
   1d86c:	b	1d7e4 <blkid_probe_get_size@plt+0x162cc>
   1d870:	ldr	r2, [pc, #156]	; 1d914 <blkid_probe_get_size@plt+0x163fc>
   1d874:	ldr	r1, [pc, #156]	; 1d918 <blkid_probe_get_size@plt+0x16400>
   1d878:	add	r2, pc, r2
   1d87c:	add	r2, r2, #360	; 0x168
   1d880:	str	r2, [sp]
   1d884:	ldr	r2, [pc, #144]	; 1d91c <blkid_probe_get_size@plt+0x16404>
   1d888:	ldr	r3, [pc, #144]	; 1d920 <blkid_probe_get_size@plt+0x16408>
   1d88c:	add	r2, pc, r2
   1d890:	add	r1, pc, r1
   1d894:	mov	r0, #0
   1d898:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1d89c:	ldr	r2, [pc, #128]	; 1d924 <blkid_probe_get_size@plt+0x1640c>
   1d8a0:	ldr	r1, [pc, #128]	; 1d928 <blkid_probe_get_size@plt+0x16410>
   1d8a4:	add	r2, pc, r2
   1d8a8:	add	r2, r2, #360	; 0x168
   1d8ac:	str	r2, [sp]
   1d8b0:	ldr	r2, [pc, #116]	; 1d92c <blkid_probe_get_size@plt+0x16414>
   1d8b4:	ldr	r3, [pc, #116]	; 1d930 <blkid_probe_get_size@plt+0x16418>
   1d8b8:	add	r2, pc, r2
   1d8bc:	add	r1, pc, r1
   1d8c0:	mov	r0, #0
   1d8c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1d8c8:	ldr	r1, [pc, #100]	; 1d934 <blkid_probe_get_size@plt+0x1641c>
   1d8cc:	mov	r2, #9
   1d8d0:	add	r1, pc, r1
   1d8d4:	mov	r0, r4
   1d8d8:	bl	6a5c <strncmp@plt>
   1d8dc:	cmp	r0, #0
   1d8e0:	bne	1d7a0 <blkid_probe_get_size@plt+0x16288>
   1d8e4:	cmn	r4, #9
   1d8e8:	beq	1d7a0 <blkid_probe_get_size@plt+0x16288>
   1d8ec:	b	1d824 <blkid_probe_get_size@plt+0x1630c>
   1d8f0:	bl	6fb4 <__stack_chk_fail@plt>
   1d8f4:	andeq	sl, r7, r8, lsr #9
   1d8f8:	andeq	r0, r0, ip, lsr r4
   1d8fc:	andeq	ip, r4, r0, ror #22
   1d900:	andeq	ip, r4, r0, lsr #22
   1d904:	andeq	ip, r4, r4, lsl #22
   1d908:	andeq	ip, r4, ip, ror #21
   1d90c:	muleq	r4, ip, sl
   1d910:	andeq	ip, r4, ip, ror #20
   1d914:	muleq	r4, r0, sp
   1d918:	andeq	ip, r4, r8, lsl #19
   1d91c:	muleq	r4, r8, r3
   1d920:	andeq	r0, r0, r2, lsl #2
   1d924:	andeq	fp, r4, r4, ror #26
   1d928:	andeq	ip, r4, r8, lsl #19
   1d92c:	andeq	r8, r4, ip, ror #6
   1d930:	andeq	r0, r0, r3, lsl #2
   1d934:	andeq	ip, r4, ip, lsr #19
   1d938:	ldr	r3, [pc, #360]	; 1daa8 <blkid_probe_get_size@plt+0x16590>
   1d93c:	ldr	r2, [pc, #360]	; 1daac <blkid_probe_get_size@plt+0x16594>
   1d940:	add	r3, pc, r3
   1d944:	push	{r4, r5, r6, r7, r8, lr}
   1d948:	sub	sp, sp, #24
   1d94c:	ldr	r4, [r3, r2]
   1d950:	subs	ip, r0, #0
   1d954:	ldr	r3, [r4]
   1d958:	str	r3, [sp, #20]
   1d95c:	beq	1d9f8 <blkid_probe_get_size@plt+0x164e0>
   1d960:	cmp	r1, #0
   1d964:	mov	r5, r1
   1d968:	beq	1da20 <blkid_probe_get_size@plt+0x16508>
   1d96c:	ldr	r0, [ip, #56]	; 0x38
   1d970:	cmp	r0, #0
   1d974:	beq	1d9f0 <blkid_probe_get_size@plt+0x164d8>
   1d978:	add	r1, sp, #16
   1d97c:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   1d980:	cmp	r0, #0
   1d984:	blt	1da4c <blkid_probe_get_size@plt+0x16534>
   1d988:	mov	r0, r5
   1d98c:	add	r1, sp, #12
   1d990:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   1d994:	lsrs	r5, r0, #31
   1d998:	bne	1da78 <blkid_probe_get_size@plt+0x16560>
   1d99c:	ldr	r6, [sp, #16]
   1d9a0:	ldr	r7, [sp, #12]
   1d9a4:	mov	r0, r6
   1d9a8:	bl	723c <strlen@plt>
   1d9ac:	mov	r1, r6
   1d9b0:	mov	r2, r0
   1d9b4:	mov	r8, r0
   1d9b8:	mov	r0, r7
   1d9bc:	bl	6a5c <strncmp@plt>
   1d9c0:	cmp	r0, #0
   1d9c4:	bne	1d9d4 <blkid_probe_get_size@plt+0x164bc>
   1d9c8:	cmn	r7, r8
   1d9cc:	movne	r5, #1
   1d9d0:	moveq	r5, #0
   1d9d4:	ldr	r2, [sp, #20]
   1d9d8:	ldr	r3, [r4]
   1d9dc:	mov	r0, r5
   1d9e0:	cmp	r2, r3
   1d9e4:	bne	1daa4 <blkid_probe_get_size@plt+0x1658c>
   1d9e8:	add	sp, sp, #24
   1d9ec:	pop	{r4, r5, r6, r7, r8, pc}
   1d9f0:	mov	r5, #1
   1d9f4:	b	1d9d4 <blkid_probe_get_size@plt+0x164bc>
   1d9f8:	ldr	r2, [pc, #176]	; 1dab0 <blkid_probe_get_size@plt+0x16598>
   1d9fc:	ldr	r1, [pc, #176]	; 1dab4 <blkid_probe_get_size@plt+0x1659c>
   1da00:	add	r2, pc, r2
   1da04:	add	r2, r2, #376	; 0x178
   1da08:	str	r2, [sp]
   1da0c:	ldr	r2, [pc, #164]	; 1dab8 <blkid_probe_get_size@plt+0x165a0>
   1da10:	ldr	r3, [pc, #164]	; 1dabc <blkid_probe_get_size@plt+0x165a4>
   1da14:	add	r2, pc, r2
   1da18:	add	r1, pc, r1
   1da1c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1da20:	ldr	r3, [pc, #152]	; 1dac0 <blkid_probe_get_size@plt+0x165a8>
   1da24:	mov	r0, r1
   1da28:	add	r3, pc, r3
   1da2c:	ldr	r2, [pc, #144]	; 1dac4 <blkid_probe_get_size@plt+0x165ac>
   1da30:	ldr	r1, [pc, #144]	; 1dac8 <blkid_probe_get_size@plt+0x165b0>
   1da34:	add	r3, r3, #376	; 0x178
   1da38:	str	r3, [sp]
   1da3c:	add	r2, pc, r2
   1da40:	ldr	r3, [pc, #132]	; 1dacc <blkid_probe_get_size@plt+0x165b4>
   1da44:	add	r1, pc, r1
   1da48:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1da4c:	ldr	r2, [pc, #124]	; 1dad0 <blkid_probe_get_size@plt+0x165b8>
   1da50:	ldr	r1, [pc, #124]	; 1dad4 <blkid_probe_get_size@plt+0x165bc>
   1da54:	add	r2, pc, r2
   1da58:	add	r2, r2, #376	; 0x178
   1da5c:	str	r2, [sp]
   1da60:	ldr	r2, [pc, #112]	; 1dad8 <blkid_probe_get_size@plt+0x165c0>
   1da64:	mov	r3, #412	; 0x19c
   1da68:	add	r2, pc, r2
   1da6c:	add	r1, pc, r1
   1da70:	mov	r0, #0
   1da74:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1da78:	ldr	r2, [pc, #92]	; 1dadc <blkid_probe_get_size@plt+0x165c4>
   1da7c:	ldr	r1, [pc, #92]	; 1dae0 <blkid_probe_get_size@plt+0x165c8>
   1da80:	add	r2, pc, r2
   1da84:	add	r2, r2, #376	; 0x178
   1da88:	str	r2, [sp]
   1da8c:	ldr	r2, [pc, #80]	; 1dae4 <blkid_probe_get_size@plt+0x165cc>
   1da90:	ldr	r3, [pc, #80]	; 1dae8 <blkid_probe_get_size@plt+0x165d0>
   1da94:	add	r2, pc, r2
   1da98:	add	r1, pc, r1
   1da9c:	mov	r0, #0
   1daa0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1daa4:	bl	6fb4 <__stack_chk_fail@plt>
   1daa8:	andeq	sl, r7, r8, lsr #4
   1daac:	andeq	r0, r0, ip, lsr r4
   1dab0:	andeq	fp, r4, r8, lsl #24
   1dab4:	andeq	r8, r4, ip, lsr r2
   1dab8:	andeq	r8, r4, r0, lsl r2
   1dabc:	muleq	r0, r5, r1
   1dac0:	andeq	fp, r4, r0, ror #23
   1dac4:	andeq	r8, r4, r8, ror #3
   1dac8:	andeq	sp, r4, ip, lsl r5
   1dacc:	muleq	r0, r6, r1
   1dad0:			; <UNDEFINED> instruction: 0x0004bbb4
   1dad4:	andeq	ip, r4, r0, asr #16
   1dad8:			; <UNDEFINED> instruction: 0x000481bc
   1dadc:	andeq	fp, r4, r8, lsl #23
   1dae0:	andeq	ip, r4, r4, lsl r8
   1dae4:	muleq	r4, r0, r1
   1dae8:	muleq	r0, pc, r1	; <UNPREDICTABLE>
   1daec:	ldr	r3, [pc, #256]	; 1dbf4 <blkid_probe_get_size@plt+0x166dc>
   1daf0:	ldr	r2, [pc, #256]	; 1dbf8 <blkid_probe_get_size@plt+0x166e0>
   1daf4:	add	r3, pc, r3
   1daf8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1dafc:	sub	sp, sp, #28
   1db00:	ldr	r9, [r3, r2]
   1db04:	subs	r6, r0, #0
   1db08:	ldr	r3, [r9]
   1db0c:	str	r3, [sp, #20]
   1db10:	beq	1db9c <blkid_probe_get_size@plt+0x16684>
   1db14:	cmp	r1, #0
   1db18:	mov	r5, r1
   1db1c:	beq	1dbc4 <blkid_probe_get_size@plt+0x166ac>
   1db20:	ldr	r4, [r6, #48]	; 0x30
   1db24:	mov	r0, r4
   1db28:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1db2c:	cmp	r0, #0
   1db30:	beq	1db80 <blkid_probe_get_size@plt+0x16668>
   1db34:	mvn	r2, #1
   1db38:	mov	r3, #0
   1db3c:	add	r8, sp, #8
   1db40:	strd	r2, [sp, #12]
   1db44:	add	r7, sp, #12
   1db48:	b	1db50 <blkid_probe_get_size@plt+0x16638>
   1db4c:	ldr	r4, [r6, #48]	; 0x30
   1db50:	mov	r0, r4
   1db54:	mov	r2, r8
   1db58:	mov	r1, r7
   1db5c:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   1db60:	cmp	r0, #0
   1db64:	beq	1db84 <blkid_probe_get_size@plt+0x1666c>
   1db68:	mov	r2, #0
   1db6c:	mov	r1, r5
   1db70:	ldr	r0, [sp, #8]
   1db74:	bl	693c <fnmatch@plt>
   1db78:	cmp	r0, #0
   1db7c:	bne	1db4c <blkid_probe_get_size@plt+0x16634>
   1db80:	mov	r0, #1
   1db84:	ldr	r2, [sp, #20]
   1db88:	ldr	r3, [r9]
   1db8c:	cmp	r2, r3
   1db90:	bne	1dbf0 <blkid_probe_get_size@plt+0x166d8>
   1db94:	add	sp, sp, #28
   1db98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1db9c:	ldr	r2, [pc, #88]	; 1dbfc <blkid_probe_get_size@plt+0x166e4>
   1dba0:	ldr	r1, [pc, #88]	; 1dc00 <blkid_probe_get_size@plt+0x166e8>
   1dba4:	add	r2, pc, r2
   1dba8:	add	r2, r2, #392	; 0x188
   1dbac:	str	r2, [sp]
   1dbb0:	ldr	r2, [pc, #76]	; 1dc04 <blkid_probe_get_size@plt+0x166ec>
   1dbb4:	mov	r3, #424	; 0x1a8
   1dbb8:	add	r2, pc, r2
   1dbbc:	add	r1, pc, r1
   1dbc0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dbc4:	ldr	r3, [pc, #60]	; 1dc08 <blkid_probe_get_size@plt+0x166f0>
   1dbc8:	mov	r0, r1
   1dbcc:	add	r3, pc, r3
   1dbd0:	ldr	r2, [pc, #52]	; 1dc0c <blkid_probe_get_size@plt+0x166f4>
   1dbd4:	ldr	r1, [pc, #52]	; 1dc10 <blkid_probe_get_size@plt+0x166f8>
   1dbd8:	add	r3, r3, #392	; 0x188
   1dbdc:	str	r3, [sp]
   1dbe0:	add	r2, pc, r2
   1dbe4:	ldr	r3, [pc, #40]	; 1dc14 <blkid_probe_get_size@plt+0x166fc>
   1dbe8:	add	r1, pc, r1
   1dbec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dbf0:	bl	6fb4 <__stack_chk_fail@plt>
   1dbf4:	andeq	sl, r7, r4, ror r0
   1dbf8:	andeq	r0, r0, ip, lsr r4
   1dbfc:	andeq	fp, r4, r4, ror #20
   1dc00:	muleq	r4, r8, r0
   1dc04:	andeq	r8, r4, ip, rrx
   1dc08:	andeq	fp, r4, ip, lsr sl
   1dc0c:	andeq	r8, r4, r4, asr #32
   1dc10:	andeq	r0, r5, r0, ror sl
   1dc14:	andeq	r0, r0, r9, lsr #3
   1dc18:	ldr	r3, [pc, #356]	; 1dd84 <blkid_probe_get_size@plt+0x1686c>
   1dc1c:	ldr	r2, [pc, #356]	; 1dd88 <blkid_probe_get_size@plt+0x16870>
   1dc20:	add	r3, pc, r3
   1dc24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dc28:	sub	sp, sp, #40	; 0x28
   1dc2c:	ldr	r6, [r3, r2]
   1dc30:	subs	r7, r0, #0
   1dc34:	ldr	r3, [r6]
   1dc38:	str	r3, [sp, #36]	; 0x24
   1dc3c:	beq	1dd2c <blkid_probe_get_size@plt+0x16814>
   1dc40:	cmp	r1, #0
   1dc44:	mov	r4, r1
   1dc48:	beq	1dd54 <blkid_probe_get_size@plt+0x1683c>
   1dc4c:	ldr	r8, [r7, #44]	; 0x2c
   1dc50:	mov	r0, r8
   1dc54:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   1dc58:	cmp	r0, #0
   1dc5c:	moveq	r8, #1
   1dc60:	beq	1dd08 <blkid_probe_get_size@plt+0x167f0>
   1dc64:	mvn	r2, #1
   1dc68:	mov	r3, #0
   1dc6c:	add	sl, sp, #16
   1dc70:	add	r9, sp, #28
   1dc74:	add	r5, sp, #24
   1dc78:	add	r1, sp, #20
   1dc7c:	str	r1, [sp, #12]
   1dc80:	strd	r2, [sp, #28]
   1dc84:	mov	r0, r8
   1dc88:	mov	r3, sl
   1dc8c:	ldr	r2, [sp, #12]
   1dc90:	mov	r1, r9
   1dc94:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   1dc98:	subs	r8, r0, #0
   1dc9c:	beq	1dd08 <blkid_probe_get_size@plt+0x167f0>
   1dca0:	mov	r1, r5
   1dca4:	mov	r0, r4
   1dca8:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
   1dcac:	subs	r1, r0, #0
   1dcb0:	bne	1dce0 <blkid_probe_get_size@plt+0x167c8>
   1dcb4:	b	1dd24 <blkid_probe_get_size@plt+0x1680c>
   1dcb8:	cmp	r1, #0
   1dcbc:	beq	1dccc <blkid_probe_get_size@plt+0x167b4>
   1dcc0:	bl	693c <fnmatch@plt>
   1dcc4:	cmp	r0, #0
   1dcc8:	beq	1dd08 <blkid_probe_get_size@plt+0x167f0>
   1dccc:	mov	r1, r5
   1dcd0:	mov	r0, r4
   1dcd4:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
   1dcd8:	subs	r1, r0, #0
   1dcdc:	beq	1dd24 <blkid_probe_get_size@plt+0x1680c>
   1dce0:	mov	r2, #0
   1dce4:	ldr	r0, [sp, #16]
   1dce8:	bl	693c <fnmatch@plt>
   1dcec:	subs	r2, r0, #0
   1dcf0:	bne	1dccc <blkid_probe_get_size@plt+0x167b4>
   1dcf4:	ldrd	r0, [sp, #20]
   1dcf8:	cmp	r0, #0
   1dcfc:	bne	1dcb8 <blkid_probe_get_size@plt+0x167a0>
   1dd00:	cmp	r1, #0
   1dd04:	bne	1dccc <blkid_probe_get_size@plt+0x167b4>
   1dd08:	ldr	r2, [sp, #36]	; 0x24
   1dd0c:	ldr	r3, [r6]
   1dd10:	mov	r0, r8
   1dd14:	cmp	r2, r3
   1dd18:	bne	1dd80 <blkid_probe_get_size@plt+0x16868>
   1dd1c:	add	sp, sp, #40	; 0x28
   1dd20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dd24:	ldr	r8, [r7, #44]	; 0x2c
   1dd28:	b	1dc84 <blkid_probe_get_size@plt+0x1676c>
   1dd2c:	ldr	r2, [pc, #88]	; 1dd8c <blkid_probe_get_size@plt+0x16874>
   1dd30:	ldr	r1, [pc, #88]	; 1dd90 <blkid_probe_get_size@plt+0x16878>
   1dd34:	add	r2, pc, r2
   1dd38:	add	r2, r2, #408	; 0x198
   1dd3c:	str	r2, [sp]
   1dd40:	ldr	r2, [pc, #76]	; 1dd94 <blkid_probe_get_size@plt+0x1687c>
   1dd44:	mov	r3, #360	; 0x168
   1dd48:	add	r2, pc, r2
   1dd4c:	add	r1, pc, r1
   1dd50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dd54:	ldr	r3, [pc, #60]	; 1dd98 <blkid_probe_get_size@plt+0x16880>
   1dd58:	mov	r0, r1
   1dd5c:	add	r3, pc, r3
   1dd60:	ldr	r2, [pc, #52]	; 1dd9c <blkid_probe_get_size@plt+0x16884>
   1dd64:	ldr	r1, [pc, #52]	; 1dda0 <blkid_probe_get_size@plt+0x16888>
   1dd68:	add	r3, r3, #408	; 0x198
   1dd6c:	str	r3, [sp]
   1dd70:	add	r2, pc, r2
   1dd74:	ldr	r3, [pc, #40]	; 1dda4 <blkid_probe_get_size@plt+0x1688c>
   1dd78:	add	r1, pc, r1
   1dd7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dd80:	bl	6fb4 <__stack_chk_fail@plt>
   1dd84:	andeq	r9, r7, r8, asr #30
   1dd88:	andeq	r0, r0, ip, lsr r4
   1dd8c:	ldrdeq	fp, [r4], -r4
   1dd90:	andeq	r7, r4, r8, lsl #30
   1dd94:	ldrdeq	r7, [r4], -ip
   1dd98:	andeq	fp, r4, ip, lsr #17
   1dd9c:			; <UNDEFINED> instruction: 0x00047eb4
   1dda0:	andeq	sp, r4, r8, ror #3
   1dda4:	andeq	r0, r0, r9, ror #2
   1dda8:	ldr	r3, [pc, #212]	; 1de84 <blkid_probe_get_size@plt+0x1696c>
   1ddac:	ldr	ip, [pc, #212]	; 1de88 <blkid_probe_get_size@plt+0x16970>
   1ddb0:	add	r3, pc, r3
   1ddb4:	push	{r4, r5, lr}
   1ddb8:	sub	sp, sp, #20
   1ddbc:	ldr	r4, [r3, ip]
   1ddc0:	cmp	r0, #0
   1ddc4:	ldr	r3, [r4]
   1ddc8:	str	r3, [sp, #12]
   1ddcc:	beq	1de2c <blkid_probe_get_size@plt+0x16914>
   1ddd0:	cmp	r1, #0
   1ddd4:	mov	r5, r2
   1ddd8:	beq	1de54 <blkid_probe_get_size@plt+0x1693c>
   1dddc:	add	r2, sp, #8
   1dde0:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   1dde4:	cmp	r0, #0
   1dde8:	movlt	r0, #0
   1ddec:	blt	1de14 <blkid_probe_get_size@plt+0x168fc>
   1ddf0:	cmp	r5, #0
   1ddf4:	moveq	r0, #1
   1ddf8:	beq	1de14 <blkid_probe_get_size@plt+0x168fc>
   1ddfc:	mov	r0, r5
   1de00:	mov	r2, #0
   1de04:	ldr	r1, [sp, #8]
   1de08:	bl	693c <fnmatch@plt>
   1de0c:	clz	r0, r0
   1de10:	lsr	r0, r0, #5
   1de14:	ldr	r2, [sp, #12]
   1de18:	ldr	r3, [r4]
   1de1c:	cmp	r2, r3
   1de20:	bne	1de80 <blkid_probe_get_size@plt+0x16968>
   1de24:	add	sp, sp, #20
   1de28:	pop	{r4, r5, pc}
   1de2c:	ldr	r2, [pc, #88]	; 1de8c <blkid_probe_get_size@plt+0x16974>
   1de30:	ldr	r1, [pc, #88]	; 1de90 <blkid_probe_get_size@plt+0x16978>
   1de34:	add	r2, pc, r2
   1de38:	add	r2, r2, #424	; 0x1a8
   1de3c:	str	r2, [sp]
   1de40:	ldr	r2, [pc, #76]	; 1de94 <blkid_probe_get_size@plt+0x1697c>
   1de44:	mov	r3, #320	; 0x140
   1de48:	add	r2, pc, r2
   1de4c:	add	r1, pc, r1
   1de50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1de54:	ldr	r3, [pc, #60]	; 1de98 <blkid_probe_get_size@plt+0x16980>
   1de58:	mov	r0, r1
   1de5c:	add	r3, pc, r3
   1de60:	ldr	r2, [pc, #52]	; 1de9c <blkid_probe_get_size@plt+0x16984>
   1de64:	ldr	r1, [pc, #52]	; 1dea0 <blkid_probe_get_size@plt+0x16988>
   1de68:	add	r3, r3, #424	; 0x1a8
   1de6c:	str	r3, [sp]
   1de70:	add	r2, pc, r2
   1de74:	ldr	r3, [pc, #40]	; 1dea4 <blkid_probe_get_size@plt+0x1698c>
   1de78:	add	r1, pc, r1
   1de7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1de80:	bl	6fb4 <__stack_chk_fail@plt>
   1de84:			; <UNDEFINED> instruction: 0x00079db8
   1de88:	andeq	r0, r0, ip, lsr r4
   1de8c:	ldrdeq	fp, [r4], -r4
   1de90:	andeq	sp, r4, r4, lsl r1
   1de94:	ldrdeq	r7, [r4], -ip
   1de98:	andeq	fp, r4, ip, lsr #15
   1de9c:			; <UNDEFINED> instruction: 0x00047db4
   1dea0:	andeq	ip, r4, ip, lsr r4
   1dea4:	andeq	r0, r0, r1, asr #2
   1dea8:	ldr	r3, [pc, #316]	; 1dfec <blkid_probe_get_size@plt+0x16ad4>
   1deac:	ldr	r2, [pc, #316]	; 1dff0 <blkid_probe_get_size@plt+0x16ad8>
   1deb0:	add	r3, pc, r3
   1deb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1deb8:	sub	sp, sp, #36	; 0x24
   1debc:	ldr	r9, [r3, r2]
   1dec0:	subs	r5, r0, #0
   1dec4:	ldr	r3, [r9]
   1dec8:	str	r3, [sp, #28]
   1decc:	beq	1df94 <blkid_probe_get_size@plt+0x16a7c>
   1ded0:	cmp	r1, #0
   1ded4:	mov	r4, r1
   1ded8:	beq	1dfbc <blkid_probe_get_size@plt+0x16aa4>
   1dedc:	mvn	r2, #1
   1dee0:	mov	r3, #0
   1dee4:	add	r7, sp, #16
   1dee8:	strd	r2, [sp, #20]
   1deec:	add	r6, sp, #12
   1def0:	add	r8, sp, #20
   1def4:	b	1df10 <blkid_probe_get_size@plt+0x169f8>
   1def8:	ldr	r2, [sp, #12]
   1defc:	ldr	r1, [sp, #16]
   1df00:	mov	r0, r4
   1df04:	bl	1dda8 <blkid_probe_get_size@plt+0x16890>
   1df08:	cmp	r0, #0
   1df0c:	bne	1df78 <blkid_probe_get_size@plt+0x16a60>
   1df10:	mov	r3, r7
   1df14:	mov	r2, r6
   1df18:	mov	r1, r8
   1df1c:	ldr	r0, [r5, #40]	; 0x28
   1df20:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   1df24:	cmp	r0, #0
   1df28:	bne	1def8 <blkid_probe_get_size@plt+0x169e0>
   1df2c:	mvn	r3, #1
   1df30:	str	r0, [sp, #24]
   1df34:	str	r3, [sp, #20]
   1df38:	b	1df54 <blkid_probe_get_size@plt+0x16a3c>
   1df3c:	ldr	r2, [sp, #12]
   1df40:	ldr	r1, [sp, #16]
   1df44:	mov	r0, r4
   1df48:	bl	1dda8 <blkid_probe_get_size@plt+0x16890>
   1df4c:	cmp	r0, #0
   1df50:	beq	1df78 <blkid_probe_get_size@plt+0x16a60>
   1df54:	mov	r3, r7
   1df58:	mov	r2, r6
   1df5c:	mov	r1, r8
   1df60:	ldr	r0, [r5, #36]	; 0x24
   1df64:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   1df68:	cmp	r0, #0
   1df6c:	bne	1df3c <blkid_probe_get_size@plt+0x16a24>
   1df70:	mov	r0, #1
   1df74:	b	1df7c <blkid_probe_get_size@plt+0x16a64>
   1df78:	mov	r0, #0
   1df7c:	ldr	r2, [sp, #28]
   1df80:	ldr	r3, [r9]
   1df84:	cmp	r2, r3
   1df88:	bne	1dfe8 <blkid_probe_get_size@plt+0x16ad0>
   1df8c:	add	sp, sp, #36	; 0x24
   1df90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1df94:	ldr	r2, [pc, #88]	; 1dff4 <blkid_probe_get_size@plt+0x16adc>
   1df98:	ldr	r1, [pc, #88]	; 1dff8 <blkid_probe_get_size@plt+0x16ae0>
   1df9c:	add	r2, pc, r2
   1dfa0:	add	r2, r2, #444	; 0x1bc
   1dfa4:	str	r2, [sp]
   1dfa8:	ldr	r2, [pc, #76]	; 1dffc <blkid_probe_get_size@plt+0x16ae4>
   1dfac:	ldr	r3, [pc, #76]	; 1e000 <blkid_probe_get_size@plt+0x16ae8>
   1dfb0:	add	r2, pc, r2
   1dfb4:	add	r1, pc, r1
   1dfb8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dfbc:	ldr	r3, [pc, #64]	; 1e004 <blkid_probe_get_size@plt+0x16aec>
   1dfc0:	mov	r0, r1
   1dfc4:	add	r3, pc, r3
   1dfc8:	ldr	r2, [pc, #56]	; 1e008 <blkid_probe_get_size@plt+0x16af0>
   1dfcc:	ldr	r1, [pc, #56]	; 1e00c <blkid_probe_get_size@plt+0x16af4>
   1dfd0:	add	r3, r3, #444	; 0x1bc
   1dfd4:	str	r3, [sp]
   1dfd8:	add	r2, pc, r2
   1dfdc:	ldr	r3, [pc, #44]	; 1e010 <blkid_probe_get_size@plt+0x16af8>
   1dfe0:	add	r1, pc, r1
   1dfe4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1dfe8:	bl	6fb4 <__stack_chk_fail@plt>
   1dfec:			; <UNDEFINED> instruction: 0x00079cb8
   1dff0:	andeq	r0, r0, ip, lsr r4
   1dff4:	andeq	fp, r4, ip, ror #12
   1dff8:	andeq	r7, r4, r0, lsr #25
   1dffc:	andeq	r7, r4, r4, ror ip
   1e000:	andeq	r0, r0, r5, asr r1
   1e004:	andeq	fp, r4, r4, asr #12
   1e008:	andeq	r7, r4, ip, asr #24
   1e00c:	andeq	ip, r4, r0, lsl #31
   1e010:	andeq	r0, r0, r6, asr r1
   1e014:	push	{r4, r5, lr}
   1e018:	sub	sp, sp, #28
   1e01c:	ldr	ip, [sp, #48]	; 0x30
   1e020:	cmp	ip, #1
   1e024:	beq	1e10c <blkid_probe_get_size@plt+0x16bf4>
   1e028:	cmp	ip, #2
   1e02c:	beq	1e0a4 <blkid_probe_get_size@plt+0x16b8c>
   1e030:	cmp	ip, #0
   1e034:	beq	1e044 <blkid_probe_get_size@plt+0x16b2c>
   1e038:	mov	r0, #0
   1e03c:	add	sp, sp, #28
   1e040:	pop	{r4, r5, pc}
   1e044:	ldr	r3, [pc, #292]	; 1e170 <blkid_probe_get_size@plt+0x16c58>
   1e048:	add	r3, pc, r3
   1e04c:	ldr	r3, [r3]
   1e050:	cmp	r3, #6
   1e054:	ble	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e058:	ldr	r3, [sp, #44]	; 0x2c
   1e05c:	ldr	lr, [pc, #272]	; 1e174 <blkid_probe_get_size@plt+0x16c5c>
   1e060:	str	r3, [sp, #20]
   1e064:	mov	r3, r2
   1e068:	mov	r2, r1
   1e06c:	ldr	r1, [pc, #260]	; 1e178 <blkid_probe_get_size@plt+0x16c60>
   1e070:	ldr	r5, [pc, #260]	; 1e17c <blkid_probe_get_size@plt+0x16c64>
   1e074:	ldr	r4, [pc, #260]	; 1e180 <blkid_probe_get_size@plt+0x16c68>
   1e078:	add	r1, pc, r1
   1e07c:	add	lr, pc, lr
   1e080:	add	r4, pc, r4
   1e084:	add	lr, lr, #460	; 0x1cc
   1e088:	stmib	sp, {r1, r5}
   1e08c:	str	ip, [sp]
   1e090:	str	lr, [sp, #12]
   1e094:	str	r4, [sp, #16]
   1e098:	mov	r1, #7
   1e09c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e0a0:	b	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e0a4:	ldr	r3, [pc, #216]	; 1e184 <blkid_probe_get_size@plt+0x16c6c>
   1e0a8:	add	r3, pc, r3
   1e0ac:	ldr	r3, [r3]
   1e0b0:	cmp	r3, #5
   1e0b4:	ble	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e0b8:	ldr	ip, [pc, #200]	; 1e188 <blkid_probe_get_size@plt+0x16c70>
   1e0bc:	ldr	lr, [pc, #200]	; 1e18c <blkid_probe_get_size@plt+0x16c74>
   1e0c0:	ldr	r3, [sp, #44]	; 0x2c
   1e0c4:	add	lr, pc, lr
   1e0c8:	add	ip, pc, ip
   1e0cc:	ldr	r4, [pc, #188]	; 1e190 <blkid_probe_get_size@plt+0x16c78>
   1e0d0:	add	ip, ip, #460	; 0x1cc
   1e0d4:	str	r3, [sp, #20]
   1e0d8:	mov	r5, #804	; 0x324
   1e0dc:	mov	r3, r2
   1e0e0:	mov	r2, r1
   1e0e4:	mov	r1, lr
   1e0e8:	add	r4, pc, r4
   1e0ec:	str	ip, [sp, #12]
   1e0f0:	mov	ip, #0
   1e0f4:	stmib	sp, {r1, r5}
   1e0f8:	str	r4, [sp, #16]
   1e0fc:	str	ip, [sp]
   1e100:	mov	r1, #6
   1e104:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e108:	b	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e10c:	ldr	r3, [pc, #128]	; 1e194 <blkid_probe_get_size@plt+0x16c7c>
   1e110:	add	r3, pc, r3
   1e114:	ldr	r3, [r3]
   1e118:	cmp	r3, #5
   1e11c:	ble	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e120:	ldr	r3, [sp, #44]	; 0x2c
   1e124:	ldr	ip, [pc, #108]	; 1e198 <blkid_probe_get_size@plt+0x16c80>
   1e128:	str	r3, [sp, #20]
   1e12c:	mov	r3, r2
   1e130:	mov	r2, r1
   1e134:	ldr	r1, [pc, #96]	; 1e19c <blkid_probe_get_size@plt+0x16c84>
   1e138:	ldr	r4, [pc, #96]	; 1e1a0 <blkid_probe_get_size@plt+0x16c88>
   1e13c:	add	ip, pc, ip
   1e140:	ldr	lr, [pc, #92]	; 1e1a4 <blkid_probe_get_size@plt+0x16c8c>
   1e144:	add	ip, ip, #460	; 0x1cc
   1e148:	add	r1, pc, r1
   1e14c:	add	lr, pc, lr
   1e150:	str	ip, [sp, #12]
   1e154:	mov	ip, #0
   1e158:	stmib	sp, {r1, r4}
   1e15c:	str	lr, [sp, #16]
   1e160:	str	ip, [sp]
   1e164:	mov	r1, #6
   1e168:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e16c:	b	1e038 <blkid_probe_get_size@plt+0x16b20>
   1e170:	strdeq	sl, [r7], -r4
   1e174:	andeq	fp, r4, ip, lsl #11
   1e178:	andeq	ip, r4, r0, lsl #2
   1e17c:	andeq	r0, r0, sl, lsl r3
   1e180:	andeq	ip, r4, ip, lsr r2
   1e184:	muleq	r7, r4, r0
   1e188:	andeq	fp, r4, r0, asr #10
   1e18c:	strheq	ip, [r4], -r4
   1e190:	andeq	ip, r4, ip, asr r2
   1e194:	andeq	sl, r7, ip, lsr #32
   1e198:	andeq	fp, r4, ip, asr #9
   1e19c:	andeq	ip, r4, r0, lsr r0
   1e1a0:	andeq	r0, r0, pc, lsl r3
   1e1a4:			; <UNDEFINED> instruction: 0x0004c1bc
   1e1a8:	ldr	ip, [pc, #728]	; 1e488 <blkid_probe_get_size@plt+0x16f70>
   1e1ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1b0:	add	ip, pc, ip
   1e1b4:	ldr	lr, [pc, #720]	; 1e48c <blkid_probe_get_size@plt+0x16f74>
   1e1b8:	sub	sp, sp, #44	; 0x2c
   1e1bc:	mov	sl, r2
   1e1c0:	ldr	r4, [ip, lr]
   1e1c4:	subs	r7, r1, #0
   1e1c8:	ldr	r8, [sp, #84]	; 0x54
   1e1cc:	ldr	r2, [r4]
   1e1d0:	mov	r1, ip
   1e1d4:	str	r2, [sp, #36]	; 0x24
   1e1d8:	ldr	r5, [sp, #92]	; 0x5c
   1e1dc:	ldr	r9, [sp, #96]	; 0x60
   1e1e0:	beq	1e378 <blkid_probe_get_size@plt+0x16e60>
   1e1e4:	cmp	r3, #0
   1e1e8:	beq	1e3a4 <blkid_probe_get_size@plt+0x16e8c>
   1e1ec:	cmp	r8, #0
   1e1f0:	beq	1e3e0 <blkid_probe_get_size@plt+0x16ec8>
   1e1f4:	cmp	r5, #0
   1e1f8:	beq	1e40c <blkid_probe_get_size@plt+0x16ef4>
   1e1fc:	cmp	r9, #0
   1e200:	beq	1e438 <blkid_probe_get_size@plt+0x16f20>
   1e204:	mov	r6, r0
   1e208:	add	r2, sp, #32
   1e20c:	mov	r1, #0
   1e210:	mov	r0, r5
   1e214:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   1e218:	cmp	r0, #0
   1e21c:	blt	1e2b0 <blkid_probe_get_size@plt+0x16d98>
   1e220:	ldr	fp, [sp, #32]
   1e224:	cmp	fp, #0
   1e228:	beq	1e310 <blkid_probe_get_size@plt+0x16df8>
   1e22c:	ldr	r1, [pc, #604]	; 1e490 <blkid_probe_get_size@plt+0x16f78>
   1e230:	mov	r0, r8
   1e234:	add	r1, pc, r1
   1e238:	bl	7314 <strcmp@plt>
   1e23c:	cmp	r0, #0
   1e240:	beq	1e3d0 <blkid_probe_get_size@plt+0x16eb8>
   1e244:	ldr	r1, [pc, #584]	; 1e494 <blkid_probe_get_size@plt+0x16f7c>
   1e248:	mov	r0, r8
   1e24c:	add	r1, pc, r1
   1e250:	bl	7314 <strcmp@plt>
   1e254:	cmp	r0, #0
   1e258:	beq	1e474 <blkid_probe_get_size@plt+0x16f5c>
   1e25c:	ldr	r1, [pc, #564]	; 1e498 <blkid_probe_get_size@plt+0x16f80>
   1e260:	mov	r0, r8
   1e264:	add	r1, pc, r1
   1e268:	bl	7314 <strcmp@plt>
   1e26c:	cmp	r0, #0
   1e270:	beq	1e464 <blkid_probe_get_size@plt+0x16f4c>
   1e274:	ldr	r1, [pc, #544]	; 1e49c <blkid_probe_get_size@plt+0x16f84>
   1e278:	mov	r0, r8
   1e27c:	add	r1, pc, r1
   1e280:	bl	7314 <strcmp@plt>
   1e284:	cmp	r0, #0
   1e288:	moveq	r3, #1
   1e28c:	streq	fp, [r9, #132]	; 0x84
   1e290:	strbeq	r3, [r9, #139]	; 0x8b
   1e294:	ldr	r2, [sp, #36]	; 0x24
   1e298:	ldr	r3, [r4]
   1e29c:	mov	r0, #0
   1e2a0:	cmp	r2, r3
   1e2a4:	bne	1e484 <blkid_probe_get_size@plt+0x16f6c>
   1e2a8:	add	sp, sp, #44	; 0x2c
   1e2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2b0:	ldr	r3, [pc, #488]	; 1e4a0 <blkid_probe_get_size@plt+0x16f88>
   1e2b4:	add	r3, pc, r3
   1e2b8:	ldr	r3, [r3, #4]
   1e2bc:	cmp	r3, #2
   1e2c0:	ble	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e2c4:	ldr	r1, [pc, #472]	; 1e4a4 <blkid_probe_get_size@plt+0x16f8c>
   1e2c8:	ldr	lr, [pc, #472]	; 1e4a8 <blkid_probe_get_size@plt+0x16f90>
   1e2cc:	add	r1, pc, r1
   1e2d0:	add	r1, r1, #512	; 0x200
   1e2d4:	str	r1, [sp, #12]
   1e2d8:	ldr	r1, [pc, #460]	; 1e4ac <blkid_probe_get_size@plt+0x16f94>
   1e2dc:	ldr	ip, [pc, #460]	; 1e4b0 <blkid_probe_get_size@plt+0x16f98>
   1e2e0:	add	r1, pc, r1
   1e2e4:	add	ip, pc, ip
   1e2e8:	str	r0, [sp]
   1e2ec:	stmib	sp, {r1, lr}
   1e2f0:	str	r5, [sp, #20]
   1e2f4:	mov	r3, sl
   1e2f8:	mov	r2, r7
   1e2fc:	mov	r0, r6
   1e300:	str	ip, [sp, #16]
   1e304:	mov	r1, #3
   1e308:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e30c:	b	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e310:	ldr	r3, [pc, #412]	; 1e4b4 <blkid_probe_get_size@plt+0x16f9c>
   1e314:	add	r3, pc, r3
   1e318:	ldr	r3, [r3, #4]
   1e31c:	cmp	r3, #2
   1e320:	ble	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e324:	ldr	r1, [pc, #396]	; 1e4b8 <blkid_probe_get_size@plt+0x16fa0>
   1e328:	ldr	ip, [pc, #396]	; 1e4bc <blkid_probe_get_size@plt+0x16fa4>
   1e32c:	add	r1, pc, r1
   1e330:	add	r1, r1, #512	; 0x200
   1e334:	str	r1, [sp, #12]
   1e338:	ldr	r1, [pc, #384]	; 1e4c0 <blkid_probe_get_size@plt+0x16fa8>
   1e33c:	ldr	lr, [pc, #384]	; 1e4c4 <blkid_probe_get_size@plt+0x16fac>
   1e340:	add	ip, pc, ip
   1e344:	add	r1, pc, r1
   1e348:	str	ip, [sp, #16]
   1e34c:	mvn	ip, #21
   1e350:	stmib	sp, {r1, lr}
   1e354:	str	r5, [sp, #24]
   1e358:	str	r8, [sp, #20]
   1e35c:	mov	r3, sl
   1e360:	mov	r2, r7
   1e364:	mov	r0, r6
   1e368:	str	ip, [sp]
   1e36c:	mov	r1, #3
   1e370:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e374:	b	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e378:	ldr	r2, [pc, #328]	; 1e4c8 <blkid_probe_get_size@plt+0x16fb0>
   1e37c:	ldr	r1, [pc, #328]	; 1e4cc <blkid_probe_get_size@plt+0x16fb4>
   1e380:	add	r2, pc, r2
   1e384:	add	r2, r2, #488	; 0x1e8
   1e388:	str	r2, [sp]
   1e38c:	ldr	r2, [pc, #316]	; 1e4d0 <blkid_probe_get_size@plt+0x16fb8>
   1e390:	ldr	r3, [pc, #316]	; 1e4d4 <blkid_probe_get_size@plt+0x16fbc>
   1e394:	add	r2, pc, r2
   1e398:	add	r1, pc, r1
   1e39c:	mov	r0, #1
   1e3a0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e3a4:	ldr	r2, [pc, #300]	; 1e4d8 <blkid_probe_get_size@plt+0x16fc0>
   1e3a8:	ldr	r1, [pc, #300]	; 1e4dc <blkid_probe_get_size@plt+0x16fc4>
   1e3ac:	add	r2, pc, r2
   1e3b0:	add	r2, r2, #488	; 0x1e8
   1e3b4:	str	r2, [sp]
   1e3b8:	ldr	r2, [pc, #288]	; 1e4e0 <blkid_probe_get_size@plt+0x16fc8>
   1e3bc:	ldr	r3, [pc, #288]	; 1e4e4 <blkid_probe_get_size@plt+0x16fcc>
   1e3c0:	add	r2, pc, r2
   1e3c4:	add	r1, pc, r1
   1e3c8:	mov	r0, #1
   1e3cc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e3d0:	mov	r3, #1
   1e3d4:	str	fp, [r9, #120]	; 0x78
   1e3d8:	strb	r3, [r9, #136]	; 0x88
   1e3dc:	b	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e3e0:	ldr	r2, [pc, #256]	; 1e4e8 <blkid_probe_get_size@plt+0x16fd0>
   1e3e4:	ldr	r1, [pc, #256]	; 1e4ec <blkid_probe_get_size@plt+0x16fd4>
   1e3e8:	add	r2, pc, r2
   1e3ec:	add	r2, r2, #488	; 0x1e8
   1e3f0:	str	r2, [sp]
   1e3f4:	ldr	r2, [pc, #244]	; 1e4f0 <blkid_probe_get_size@plt+0x16fd8>
   1e3f8:	ldr	r3, [pc, #244]	; 1e4f4 <blkid_probe_get_size@plt+0x16fdc>
   1e3fc:	add	r2, pc, r2
   1e400:	add	r1, pc, r1
   1e404:	mov	r0, #1
   1e408:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e40c:	ldr	r2, [pc, #228]	; 1e4f8 <blkid_probe_get_size@plt+0x16fe0>
   1e410:	ldr	r1, [pc, #228]	; 1e4fc <blkid_probe_get_size@plt+0x16fe4>
   1e414:	add	r2, pc, r2
   1e418:	add	r2, r2, #488	; 0x1e8
   1e41c:	str	r2, [sp]
   1e420:	ldr	r2, [pc, #216]	; 1e500 <blkid_probe_get_size@plt+0x16fe8>
   1e424:	mov	r3, #652	; 0x28c
   1e428:	add	r2, pc, r2
   1e42c:	add	r1, pc, r1
   1e430:	mov	r0, #1
   1e434:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e438:	ldr	r2, [pc, #196]	; 1e504 <blkid_probe_get_size@plt+0x16fec>
   1e43c:	ldr	r1, [pc, #196]	; 1e508 <blkid_probe_get_size@plt+0x16ff0>
   1e440:	add	r2, pc, r2
   1e444:	add	r2, r2, #488	; 0x1e8
   1e448:	str	r2, [sp]
   1e44c:	ldr	r2, [pc, #184]	; 1e50c <blkid_probe_get_size@plt+0x16ff4>
   1e450:	ldr	r3, [pc, #184]	; 1e510 <blkid_probe_get_size@plt+0x16ff8>
   1e454:	add	r2, pc, r2
   1e458:	add	r1, pc, r1
   1e45c:	mov	r0, #1
   1e460:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e464:	mov	r3, #1
   1e468:	str	fp, [r9, #128]	; 0x80
   1e46c:	strb	r3, [r9, #138]	; 0x8a
   1e470:	b	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e474:	mov	r3, #1
   1e478:	str	fp, [r9, #124]	; 0x7c
   1e47c:	strb	r3, [r9, #137]	; 0x89
   1e480:	b	1e294 <blkid_probe_get_size@plt+0x16d7c>
   1e484:	bl	6fb4 <__stack_chk_fail@plt>
   1e488:			; <UNDEFINED> instruction: 0x000799b8
   1e48c:	andeq	r0, r0, ip, lsr r4
   1e490:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1e494:	ldrdeq	ip, [r4], -r0
   1e498:	andeq	ip, r4, r4, asr #3
   1e49c:			; <UNDEFINED> instruction: 0x0004c1bc
   1e4a0:	andeq	r9, r7, r8, lsl #29
   1e4a4:	andeq	fp, r4, ip, lsr r3
   1e4a8:	muleq	r0, r1, r2
   1e4ac:	andeq	ip, r4, r8, lsr #1
   1e4b0:	andeq	ip, r4, r0, ror #1
   1e4b4:	andeq	r9, r7, r8, lsr #28
   1e4b8:	ldrdeq	fp, [r4], -ip
   1e4bc:	strheq	ip, [r4], -r0
   1e4c0:	andeq	ip, r4, r4, asr #32
   1e4c4:	muleq	r0, r6, r2
   1e4c8:	andeq	fp, r4, r8, lsl #5
   1e4cc:	andeq	ip, r4, r0, lsl r0
   1e4d0:	strdeq	fp, [r4], -r4
   1e4d4:	andeq	r0, r0, r9, lsl #5
   1e4d8:	andeq	fp, r4, ip, asr r2
   1e4dc:	strdeq	fp, [r4], -r0
   1e4e0:	andeq	fp, r4, r8, asr #31
   1e4e4:	andeq	r0, r0, sl, lsl #5
   1e4e8:	andeq	fp, r4, r0, lsr #4
   1e4ec:	muleq	r4, ip, sp
   1e4f0:	andeq	fp, r4, ip, lsl #31
   1e4f4:	andeq	r0, r0, fp, lsl #5
   1e4f8:	strdeq	fp, [r4], -r4
   1e4fc:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   1e500:	andeq	fp, r4, r0, ror #30
   1e504:	andeq	fp, r4, r8, asr #3
   1e508:	andeq	r6, r5, r4, lsr #7
   1e50c:	andeq	fp, r4, r4, lsr pc
   1e510:	andeq	r0, r0, sp, lsl #5
   1e514:	push	{r4, r5, r6, r7, lr}
   1e518:	sub	sp, sp, #28
   1e51c:	subs	r6, r1, #0
   1e520:	ldr	r4, [sp, #64]	; 0x40
   1e524:	beq	1e5ec <blkid_probe_get_size@plt+0x170d4>
   1e528:	ldr	r3, [sp, #52]	; 0x34
   1e52c:	cmp	r3, #0
   1e530:	beq	1e618 <blkid_probe_get_size@plt+0x17100>
   1e534:	ldr	r3, [sp, #60]	; 0x3c
   1e538:	cmp	r3, #0
   1e53c:	beq	1e644 <blkid_probe_get_size@plt+0x1712c>
   1e540:	cmp	r4, #0
   1e544:	beq	1e670 <blkid_probe_get_size@plt+0x17158>
   1e548:	mov	r5, r0
   1e54c:	ldr	r0, [pc, #328]	; 1e69c <blkid_probe_get_size@plt+0x17184>
   1e550:	mov	r7, r2
   1e554:	add	r0, pc, r0
   1e558:	ldr	r2, [sp, #60]	; 0x3c
   1e55c:	add	r0, r0, #920	; 0x398
   1e560:	mov	r1, #5
   1e564:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   1e568:	cmp	r0, #0
   1e56c:	strge	r0, [r4]
   1e570:	blt	1e580 <blkid_probe_get_size@plt+0x17068>
   1e574:	mov	r0, #0
   1e578:	add	sp, sp, #28
   1e57c:	pop	{r4, r5, r6, r7, pc}
   1e580:	ldr	r3, [pc, #280]	; 1e6a0 <blkid_probe_get_size@plt+0x17188>
   1e584:	add	r3, pc, r3
   1e588:	ldr	r3, [r3, #4]
   1e58c:	cmp	r3, #2
   1e590:	ble	1e574 <blkid_probe_get_size@plt+0x1705c>
   1e594:	ldr	r1, [pc, #264]	; 1e6a4 <blkid_probe_get_size@plt+0x1718c>
   1e598:	ldr	ip, [pc, #264]	; 1e6a8 <blkid_probe_get_size@plt+0x17190>
   1e59c:	add	r1, pc, r1
   1e5a0:	ldr	lr, [pc, #260]	; 1e6ac <blkid_probe_get_size@plt+0x17194>
   1e5a4:	add	ip, pc, ip
   1e5a8:	add	r1, r1, #556	; 0x22c
   1e5ac:	ldr	r3, [sp, #60]	; 0x3c
   1e5b0:	add	lr, pc, lr
   1e5b4:	str	r1, [sp, #12]
   1e5b8:	mov	r4, #49	; 0x31
   1e5bc:	mov	r1, ip
   1e5c0:	str	lr, [sp, #16]
   1e5c4:	mov	lr, #0
   1e5c8:	str	r3, [sp, #20]
   1e5cc:	stmib	sp, {r1, r4}
   1e5d0:	mov	r3, r7
   1e5d4:	mov	r2, r6
   1e5d8:	mov	r0, r5
   1e5dc:	str	lr, [sp]
   1e5e0:	mov	r1, #3
   1e5e4:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e5e8:	b	1e574 <blkid_probe_get_size@plt+0x1705c>
   1e5ec:	ldr	r2, [pc, #188]	; 1e6b0 <blkid_probe_get_size@plt+0x17198>
   1e5f0:	ldr	r1, [pc, #188]	; 1e6b4 <blkid_probe_get_size@plt+0x1719c>
   1e5f4:	add	r2, pc, r2
   1e5f8:	add	r2, r2, #536	; 0x218
   1e5fc:	str	r2, [sp]
   1e600:	ldr	r2, [pc, #176]	; 1e6b8 <blkid_probe_get_size@plt+0x171a0>
   1e604:	mov	r3, #49	; 0x31
   1e608:	add	r2, pc, r2
   1e60c:	add	r1, pc, r1
   1e610:	mov	r0, #1
   1e614:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e618:	ldr	r2, [pc, #156]	; 1e6bc <blkid_probe_get_size@plt+0x171a4>
   1e61c:	ldr	r1, [pc, #156]	; 1e6c0 <blkid_probe_get_size@plt+0x171a8>
   1e620:	add	r2, pc, r2
   1e624:	add	r2, r2, #536	; 0x218
   1e628:	str	r2, [sp]
   1e62c:	ldr	r2, [pc, #144]	; 1e6c4 <blkid_probe_get_size@plt+0x171ac>
   1e630:	mov	r3, #49	; 0x31
   1e634:	add	r2, pc, r2
   1e638:	add	r1, pc, r1
   1e63c:	mov	r0, #1
   1e640:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e644:	ldr	r2, [pc, #124]	; 1e6c8 <blkid_probe_get_size@plt+0x171b0>
   1e648:	ldr	r1, [pc, #124]	; 1e6cc <blkid_probe_get_size@plt+0x171b4>
   1e64c:	add	r2, pc, r2
   1e650:	add	r2, r2, #536	; 0x218
   1e654:	str	r2, [sp]
   1e658:	ldr	r2, [pc, #112]	; 1e6d0 <blkid_probe_get_size@plt+0x171b8>
   1e65c:	mov	r3, #49	; 0x31
   1e660:	add	r2, pc, r2
   1e664:	add	r1, pc, r1
   1e668:	mov	r0, #1
   1e66c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e670:	ldr	r2, [pc, #92]	; 1e6d4 <blkid_probe_get_size@plt+0x171bc>
   1e674:	ldr	r1, [pc, #92]	; 1e6d8 <blkid_probe_get_size@plt+0x171c0>
   1e678:	add	r2, pc, r2
   1e67c:	add	r2, r2, #536	; 0x218
   1e680:	str	r2, [sp]
   1e684:	ldr	r2, [pc, #80]	; 1e6dc <blkid_probe_get_size@plt+0x171c4>
   1e688:	mov	r3, #49	; 0x31
   1e68c:	add	r2, pc, r2
   1e690:	add	r1, pc, r1
   1e694:	mov	r0, #1
   1e698:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e69c:	andeq	fp, r6, ip, lsl #4
   1e6a0:			; <UNDEFINED> instruction: 0x00079bb8
   1e6a4:	andeq	fp, r4, ip, rrx
   1e6a8:	andeq	fp, r4, r4, ror #27
   1e6ac:	muleq	r4, ip, lr
   1e6b0:	andeq	fp, r4, r4, lsl r0
   1e6b4:	muleq	r4, ip, sp
   1e6b8:	andeq	fp, r4, r0, lsl #27
   1e6bc:	andeq	sl, r4, r8, ror #31
   1e6c0:	andeq	fp, r4, r4, ror #22
   1e6c4:	andeq	fp, r4, r4, asr sp
   1e6c8:			; <UNDEFINED> instruction: 0x0004afbc
   1e6cc:	andeq	fp, r4, r8, asr sp
   1e6d0:	andeq	fp, r4, r8, lsr #26
   1e6d4:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   1e6d8:	andeq	r6, r5, ip, ror #2
   1e6dc:	strdeq	fp, [r4], -ip
   1e6e0:	push	{r4, r5, r6, r7, lr}
   1e6e4:	sub	sp, sp, #28
   1e6e8:	subs	r6, r1, #0
   1e6ec:	ldr	r4, [sp, #64]	; 0x40
   1e6f0:	beq	1e7b8 <blkid_probe_get_size@plt+0x172a0>
   1e6f4:	ldr	r3, [sp, #52]	; 0x34
   1e6f8:	cmp	r3, #0
   1e6fc:	beq	1e7e4 <blkid_probe_get_size@plt+0x172cc>
   1e700:	ldr	r3, [sp, #60]	; 0x3c
   1e704:	cmp	r3, #0
   1e708:	beq	1e810 <blkid_probe_get_size@plt+0x172f8>
   1e70c:	cmp	r4, #0
   1e710:	beq	1e83c <blkid_probe_get_size@plt+0x17324>
   1e714:	mov	r5, r0
   1e718:	ldr	r0, [pc, #328]	; 1e868 <blkid_probe_get_size@plt+0x17350>
   1e71c:	mov	r7, r2
   1e720:	add	r0, pc, r0
   1e724:	ldr	r2, [sp, #60]	; 0x3c
   1e728:	add	r0, r0, #940	; 0x3ac
   1e72c:	mov	r1, #8
   1e730:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   1e734:	cmp	r0, #0
   1e738:	strge	r0, [r4]
   1e73c:	blt	1e74c <blkid_probe_get_size@plt+0x17234>
   1e740:	mov	r0, #0
   1e744:	add	sp, sp, #28
   1e748:	pop	{r4, r5, r6, r7, pc}
   1e74c:	ldr	r3, [pc, #280]	; 1e86c <blkid_probe_get_size@plt+0x17354>
   1e750:	add	r3, pc, r3
   1e754:	ldr	r3, [r3, #4]
   1e758:	cmp	r3, #2
   1e75c:	ble	1e740 <blkid_probe_get_size@plt+0x17228>
   1e760:	ldr	r1, [pc, #264]	; 1e870 <blkid_probe_get_size@plt+0x17358>
   1e764:	ldr	ip, [pc, #264]	; 1e874 <blkid_probe_get_size@plt+0x1735c>
   1e768:	add	r1, pc, r1
   1e76c:	ldr	lr, [pc, #260]	; 1e878 <blkid_probe_get_size@plt+0x17360>
   1e770:	add	ip, pc, ip
   1e774:	add	r1, r1, #596	; 0x254
   1e778:	ldr	r3, [sp, #60]	; 0x3c
   1e77c:	add	lr, pc, lr
   1e780:	str	r1, [sp, #12]
   1e784:	mov	r4, #38	; 0x26
   1e788:	mov	r1, ip
   1e78c:	str	lr, [sp, #16]
   1e790:	mov	lr, #0
   1e794:	str	r3, [sp, #20]
   1e798:	stmib	sp, {r1, r4}
   1e79c:	mov	r3, r7
   1e7a0:	mov	r2, r6
   1e7a4:	mov	r0, r5
   1e7a8:	str	lr, [sp]
   1e7ac:	mov	r1, #3
   1e7b0:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e7b4:	b	1e740 <blkid_probe_get_size@plt+0x17228>
   1e7b8:	ldr	r2, [pc, #188]	; 1e87c <blkid_probe_get_size@plt+0x17364>
   1e7bc:	ldr	r1, [pc, #188]	; 1e880 <blkid_probe_get_size@plt+0x17368>
   1e7c0:	add	r2, pc, r2
   1e7c4:	add	r2, r2, #576	; 0x240
   1e7c8:	str	r2, [sp]
   1e7cc:	ldr	r2, [pc, #176]	; 1e884 <blkid_probe_get_size@plt+0x1736c>
   1e7d0:	mov	r3, #38	; 0x26
   1e7d4:	add	r2, pc, r2
   1e7d8:	add	r1, pc, r1
   1e7dc:	mov	r0, #1
   1e7e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e7e4:	ldr	r2, [pc, #156]	; 1e888 <blkid_probe_get_size@plt+0x17370>
   1e7e8:	ldr	r1, [pc, #156]	; 1e88c <blkid_probe_get_size@plt+0x17374>
   1e7ec:	add	r2, pc, r2
   1e7f0:	add	r2, r2, #576	; 0x240
   1e7f4:	str	r2, [sp]
   1e7f8:	ldr	r2, [pc, #144]	; 1e890 <blkid_probe_get_size@plt+0x17378>
   1e7fc:	mov	r3, #38	; 0x26
   1e800:	add	r2, pc, r2
   1e804:	add	r1, pc, r1
   1e808:	mov	r0, #1
   1e80c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e810:	ldr	r2, [pc, #124]	; 1e894 <blkid_probe_get_size@plt+0x1737c>
   1e814:	ldr	r1, [pc, #124]	; 1e898 <blkid_probe_get_size@plt+0x17380>
   1e818:	add	r2, pc, r2
   1e81c:	add	r2, r2, #576	; 0x240
   1e820:	str	r2, [sp]
   1e824:	ldr	r2, [pc, #112]	; 1e89c <blkid_probe_get_size@plt+0x17384>
   1e828:	mov	r3, #38	; 0x26
   1e82c:	add	r2, pc, r2
   1e830:	add	r1, pc, r1
   1e834:	mov	r0, #1
   1e838:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e83c:	ldr	r2, [pc, #92]	; 1e8a0 <blkid_probe_get_size@plt+0x17388>
   1e840:	ldr	r1, [pc, #92]	; 1e8a4 <blkid_probe_get_size@plt+0x1738c>
   1e844:	add	r2, pc, r2
   1e848:	add	r2, r2, #576	; 0x240
   1e84c:	str	r2, [sp]
   1e850:	ldr	r2, [pc, #80]	; 1e8a8 <blkid_probe_get_size@plt+0x17390>
   1e854:	mov	r3, #38	; 0x26
   1e858:	add	r2, pc, r2
   1e85c:	add	r1, pc, r1
   1e860:	mov	r0, #1
   1e864:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e868:	andeq	fp, r6, r0, asr #32
   1e86c:	andeq	r9, r7, ip, ror #19
   1e870:	andeq	sl, r4, r0, lsr #29
   1e874:	andeq	fp, r4, r8, lsl ip
   1e878:	strdeq	fp, [r4], -ip
   1e87c:	andeq	sl, r4, r8, asr #28
   1e880:	ldrdeq	fp, [r4], -r0
   1e884:			; <UNDEFINED> instruction: 0x0004bbb4
   1e888:	andeq	sl, r4, ip, lsl lr
   1e88c:	muleq	r4, r8, r9
   1e890:	andeq	fp, r4, r8, lsl #23
   1e894:	strdeq	sl, [r4], -r0
   1e898:	andeq	fp, r4, ip, lsl #23
   1e89c:	andeq	fp, r4, ip, asr fp
   1e8a0:	andeq	sl, r4, r4, asr #27
   1e8a4:	andeq	r5, r5, r0, lsr #31
   1e8a8:	andeq	fp, r4, r0, lsr fp
   1e8ac:	push	{r4, r5, r6, r7, lr}
   1e8b0:	sub	sp, sp, #28
   1e8b4:	subs	r6, r1, #0
   1e8b8:	ldr	r4, [sp, #64]	; 0x40
   1e8bc:	beq	1e984 <blkid_probe_get_size@plt+0x1746c>
   1e8c0:	ldr	r3, [sp, #52]	; 0x34
   1e8c4:	cmp	r3, #0
   1e8c8:	beq	1e9b0 <blkid_probe_get_size@plt+0x17498>
   1e8cc:	ldr	r3, [sp, #60]	; 0x3c
   1e8d0:	cmp	r3, #0
   1e8d4:	beq	1e9dc <blkid_probe_get_size@plt+0x174c4>
   1e8d8:	cmp	r4, #0
   1e8dc:	beq	1ea08 <blkid_probe_get_size@plt+0x174f0>
   1e8e0:	mov	r5, r0
   1e8e4:	ldr	r0, [pc, #328]	; 1ea34 <blkid_probe_get_size@plt+0x1751c>
   1e8e8:	mov	r7, r2
   1e8ec:	add	r0, pc, r0
   1e8f0:	ldr	r2, [sp, #60]	; 0x3c
   1e8f4:	add	r0, r0, #972	; 0x3cc
   1e8f8:	mov	r1, #2
   1e8fc:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   1e900:	cmp	r0, #0
   1e904:	strge	r0, [r4]
   1e908:	blt	1e918 <blkid_probe_get_size@plt+0x17400>
   1e90c:	mov	r0, #0
   1e910:	add	sp, sp, #28
   1e914:	pop	{r4, r5, r6, r7, pc}
   1e918:	ldr	r3, [pc, #280]	; 1ea38 <blkid_probe_get_size@plt+0x17520>
   1e91c:	add	r3, pc, r3
   1e920:	ldr	r3, [r3, #4]
   1e924:	cmp	r3, #2
   1e928:	ble	1e90c <blkid_probe_get_size@plt+0x173f4>
   1e92c:	ldr	r1, [pc, #264]	; 1ea3c <blkid_probe_get_size@plt+0x17524>
   1e930:	ldr	ip, [pc, #264]	; 1ea40 <blkid_probe_get_size@plt+0x17528>
   1e934:	add	r1, pc, r1
   1e938:	ldr	lr, [pc, #260]	; 1ea44 <blkid_probe_get_size@plt+0x1752c>
   1e93c:	add	ip, pc, ip
   1e940:	add	r1, r1, #636	; 0x27c
   1e944:	ldr	r3, [sp, #60]	; 0x3c
   1e948:	add	lr, pc, lr
   1e94c:	str	r1, [sp, #12]
   1e950:	mov	r4, #24
   1e954:	mov	r1, ip
   1e958:	str	lr, [sp, #16]
   1e95c:	mov	lr, #0
   1e960:	str	r3, [sp, #20]
   1e964:	stmib	sp, {r1, r4}
   1e968:	mov	r3, r7
   1e96c:	mov	r2, r6
   1e970:	mov	r0, r5
   1e974:	str	lr, [sp]
   1e978:	mov	r1, #3
   1e97c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1e980:	b	1e90c <blkid_probe_get_size@plt+0x173f4>
   1e984:	ldr	r2, [pc, #188]	; 1ea48 <blkid_probe_get_size@plt+0x17530>
   1e988:	ldr	r1, [pc, #188]	; 1ea4c <blkid_probe_get_size@plt+0x17534>
   1e98c:	add	r2, pc, r2
   1e990:	add	r2, r2, #616	; 0x268
   1e994:	str	r2, [sp]
   1e998:	ldr	r2, [pc, #176]	; 1ea50 <blkid_probe_get_size@plt+0x17538>
   1e99c:	mov	r3, #24
   1e9a0:	add	r2, pc, r2
   1e9a4:	add	r1, pc, r1
   1e9a8:	mov	r0, #1
   1e9ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e9b0:	ldr	r2, [pc, #156]	; 1ea54 <blkid_probe_get_size@plt+0x1753c>
   1e9b4:	ldr	r1, [pc, #156]	; 1ea58 <blkid_probe_get_size@plt+0x17540>
   1e9b8:	add	r2, pc, r2
   1e9bc:	add	r2, r2, #616	; 0x268
   1e9c0:	str	r2, [sp]
   1e9c4:	ldr	r2, [pc, #144]	; 1ea5c <blkid_probe_get_size@plt+0x17544>
   1e9c8:	mov	r3, #24
   1e9cc:	add	r2, pc, r2
   1e9d0:	add	r1, pc, r1
   1e9d4:	mov	r0, #1
   1e9d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1e9dc:	ldr	r2, [pc, #124]	; 1ea60 <blkid_probe_get_size@plt+0x17548>
   1e9e0:	ldr	r1, [pc, #124]	; 1ea64 <blkid_probe_get_size@plt+0x1754c>
   1e9e4:	add	r2, pc, r2
   1e9e8:	add	r2, r2, #616	; 0x268
   1e9ec:	str	r2, [sp]
   1e9f0:	ldr	r2, [pc, #112]	; 1ea68 <blkid_probe_get_size@plt+0x17550>
   1e9f4:	mov	r3, #24
   1e9f8:	add	r2, pc, r2
   1e9fc:	add	r1, pc, r1
   1ea00:	mov	r0, #1
   1ea04:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ea08:	ldr	r2, [pc, #92]	; 1ea6c <blkid_probe_get_size@plt+0x17554>
   1ea0c:	ldr	r1, [pc, #92]	; 1ea70 <blkid_probe_get_size@plt+0x17558>
   1ea10:	add	r2, pc, r2
   1ea14:	add	r2, r2, #616	; 0x268
   1ea18:	str	r2, [sp]
   1ea1c:	ldr	r2, [pc, #80]	; 1ea74 <blkid_probe_get_size@plt+0x1755c>
   1ea20:	mov	r3, #24
   1ea24:	add	r2, pc, r2
   1ea28:	add	r1, pc, r1
   1ea2c:	mov	r0, #1
   1ea30:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ea34:	andeq	sl, r6, r4, ror lr
   1ea38:	andeq	r9, r7, r0, lsr #16
   1ea3c:	ldrdeq	sl, [r4], -r4
   1ea40:	andeq	fp, r4, ip, asr #20
   1ea44:	andeq	fp, r4, r0, ror #22
   1ea48:	andeq	sl, r4, ip, ror ip
   1ea4c:	andeq	fp, r4, r4, lsl #20
   1ea50:	andeq	fp, r4, r8, ror #19
   1ea54:	andeq	sl, r4, r0, asr ip
   1ea58:	andeq	fp, r4, ip, asr #15
   1ea5c:			; <UNDEFINED> instruction: 0x0004b9bc
   1ea60:	andeq	sl, r4, r4, lsr #24
   1ea64:	andeq	fp, r4, r0, asr #19
   1ea68:	muleq	r4, r0, r9
   1ea6c:	strdeq	sl, [r4], -r8
   1ea70:	ldrdeq	r5, [r5], -r4
   1ea74:	andeq	fp, r4, r4, ror #18
   1ea78:	push	{r4, r5, r6, r7, lr}
   1ea7c:	sub	sp, sp, #28
   1ea80:	subs	r6, r1, #0
   1ea84:	ldr	r4, [sp, #64]	; 0x40
   1ea88:	beq	1eb50 <blkid_probe_get_size@plt+0x17638>
   1ea8c:	ldr	r3, [sp, #52]	; 0x34
   1ea90:	cmp	r3, #0
   1ea94:	beq	1eb7c <blkid_probe_get_size@plt+0x17664>
   1ea98:	ldr	r3, [sp, #60]	; 0x3c
   1ea9c:	cmp	r3, #0
   1eaa0:	beq	1eba8 <blkid_probe_get_size@plt+0x17690>
   1eaa4:	cmp	r4, #0
   1eaa8:	beq	1ebd4 <blkid_probe_get_size@plt+0x176bc>
   1eaac:	mov	r5, r0
   1eab0:	ldr	r0, [pc, #328]	; 1ec00 <blkid_probe_get_size@plt+0x176e8>
   1eab4:	mov	r7, r2
   1eab8:	add	r0, pc, r0
   1eabc:	ldr	r2, [sp, #60]	; 0x3c
   1eac0:	add	r0, r0, #980	; 0x3d4
   1eac4:	mov	r1, #3
   1eac8:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   1eacc:	cmp	r0, #0
   1ead0:	strge	r0, [r4]
   1ead4:	blt	1eae4 <blkid_probe_get_size@plt+0x175cc>
   1ead8:	mov	r0, #0
   1eadc:	add	sp, sp, #28
   1eae0:	pop	{r4, r5, r6, r7, pc}
   1eae4:	ldr	r3, [pc, #280]	; 1ec04 <blkid_probe_get_size@plt+0x176ec>
   1eae8:	add	r3, pc, r3
   1eaec:	ldr	r3, [r3, #4]
   1eaf0:	cmp	r3, #2
   1eaf4:	ble	1ead8 <blkid_probe_get_size@plt+0x175c0>
   1eaf8:	ldr	r1, [pc, #264]	; 1ec08 <blkid_probe_get_size@plt+0x176f0>
   1eafc:	ldr	ip, [pc, #264]	; 1ec0c <blkid_probe_get_size@plt+0x176f4>
   1eb00:	add	r1, pc, r1
   1eb04:	ldr	lr, [pc, #260]	; 1ec10 <blkid_probe_get_size@plt+0x176f8>
   1eb08:	add	ip, pc, ip
   1eb0c:	add	r1, r1, #680	; 0x2a8
   1eb10:	ldr	r3, [sp, #60]	; 0x3c
   1eb14:	add	lr, pc, lr
   1eb18:	str	r1, [sp, #12]
   1eb1c:	mov	r4, #516	; 0x204
   1eb20:	mov	r1, ip
   1eb24:	str	lr, [sp, #16]
   1eb28:	mov	lr, #0
   1eb2c:	str	r3, [sp, #20]
   1eb30:	stmib	sp, {r1, r4}
   1eb34:	mov	r3, r7
   1eb38:	mov	r2, r6
   1eb3c:	mov	r0, r5
   1eb40:	str	lr, [sp]
   1eb44:	mov	r1, #3
   1eb48:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1eb4c:	b	1ead8 <blkid_probe_get_size@plt+0x175c0>
   1eb50:	ldr	r2, [pc, #188]	; 1ec14 <blkid_probe_get_size@plt+0x176fc>
   1eb54:	ldr	r1, [pc, #188]	; 1ec18 <blkid_probe_get_size@plt+0x17700>
   1eb58:	add	r2, pc, r2
   1eb5c:	add	r2, r2, #656	; 0x290
   1eb60:	str	r2, [sp]
   1eb64:	ldr	r2, [pc, #176]	; 1ec1c <blkid_probe_get_size@plt+0x17704>
   1eb68:	mov	r3, #516	; 0x204
   1eb6c:	add	r2, pc, r2
   1eb70:	add	r1, pc, r1
   1eb74:	mov	r0, #1
   1eb78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1eb7c:	ldr	r2, [pc, #156]	; 1ec20 <blkid_probe_get_size@plt+0x17708>
   1eb80:	ldr	r1, [pc, #156]	; 1ec24 <blkid_probe_get_size@plt+0x1770c>
   1eb84:	add	r2, pc, r2
   1eb88:	add	r2, r2, #656	; 0x290
   1eb8c:	str	r2, [sp]
   1eb90:	ldr	r2, [pc, #144]	; 1ec28 <blkid_probe_get_size@plt+0x17710>
   1eb94:	mov	r3, #516	; 0x204
   1eb98:	add	r2, pc, r2
   1eb9c:	add	r1, pc, r1
   1eba0:	mov	r0, #1
   1eba4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1eba8:	ldr	r2, [pc, #124]	; 1ec2c <blkid_probe_get_size@plt+0x17714>
   1ebac:	ldr	r1, [pc, #124]	; 1ec30 <blkid_probe_get_size@plt+0x17718>
   1ebb0:	add	r2, pc, r2
   1ebb4:	add	r2, r2, #656	; 0x290
   1ebb8:	str	r2, [sp]
   1ebbc:	ldr	r2, [pc, #112]	; 1ec34 <blkid_probe_get_size@plt+0x1771c>
   1ebc0:	mov	r3, #516	; 0x204
   1ebc4:	add	r2, pc, r2
   1ebc8:	add	r1, pc, r1
   1ebcc:	mov	r0, #1
   1ebd0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ebd4:	ldr	r2, [pc, #92]	; 1ec38 <blkid_probe_get_size@plt+0x17720>
   1ebd8:	ldr	r1, [pc, #92]	; 1ec3c <blkid_probe_get_size@plt+0x17724>
   1ebdc:	add	r2, pc, r2
   1ebe0:	add	r2, r2, #656	; 0x290
   1ebe4:	str	r2, [sp]
   1ebe8:	ldr	r2, [pc, #80]	; 1ec40 <blkid_probe_get_size@plt+0x17728>
   1ebec:	mov	r3, #516	; 0x204
   1ebf0:	add	r2, pc, r2
   1ebf4:	add	r1, pc, r1
   1ebf8:	mov	r0, #1
   1ebfc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ec00:	andeq	sl, r6, r8, lsr #25
   1ec04:	andeq	r9, r7, r4, asr r6
   1ec08:	andeq	sl, r4, r8, lsl #22
   1ec0c:	ldrdeq	fp, [r4], -r0
   1ec10:	andeq	fp, r4, r4, ror #19
   1ec14:			; <UNDEFINED> instruction: 0x0004aab0
   1ec18:	andeq	fp, r4, r8, lsr r8
   1ec1c:	andeq	fp, r4, ip, ror #18
   1ec20:	andeq	sl, r4, r4, lsl #21
   1ec24:	andeq	fp, r4, r0, lsl #12
   1ec28:	andeq	fp, r4, r0, asr #18
   1ec2c:	andeq	sl, r4, r8, asr sl
   1ec30:	strdeq	fp, [r4], -r4
   1ec34:	andeq	fp, r4, r4, lsl r9
   1ec38:	andeq	sl, r4, ip, lsr #20
   1ec3c:	andeq	r5, r5, r8, lsl #24
   1ec40:	andeq	fp, r4, r8, ror #17
   1ec44:	ldr	r3, [pc, #512]	; 1ee4c <blkid_probe_get_size@plt+0x17934>
   1ec48:	ldr	ip, [pc, #512]	; 1ee50 <blkid_probe_get_size@plt+0x17938>
   1ec4c:	add	r3, pc, r3
   1ec50:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ec54:	sub	sp, sp, #52	; 0x34
   1ec58:	ldr	r9, [r3, ip]
   1ec5c:	ldr	r4, [sp, #92]	; 0x5c
   1ec60:	mov	r8, r1
   1ec64:	ldr	r1, [r9]
   1ec68:	cmp	r4, #0
   1ec6c:	str	r1, [sp, #44]	; 0x2c
   1ec70:	ldr	r5, [sp, #96]	; 0x60
   1ec74:	beq	1edf0 <blkid_probe_get_size@plt+0x178d8>
   1ec78:	cmp	r5, #0
   1ec7c:	beq	1ee1c <blkid_probe_get_size@plt+0x17904>
   1ec80:	add	r3, sp, #32
   1ec84:	str	r3, [sp]
   1ec88:	mov	r6, r0
   1ec8c:	mov	r7, r2
   1ec90:	mov	r3, #0
   1ec94:	mov	r2, #1024	; 0x400
   1ec98:	mov	r0, r4
   1ec9c:	bl	416fc <blkid_probe_get_size@plt+0x3a1e4>
   1eca0:	cmp	r0, #0
   1eca4:	blt	1ed04 <blkid_probe_get_size@plt+0x177ec>
   1eca8:	ldrd	r2, [sp, #32]
   1ecac:	mov	r1, #0
   1ecb0:	mvn	r0, #0
   1ecb4:	cmp	r3, r1
   1ecb8:	cmpeq	r2, r0
   1ecbc:	bhi	1ed6c <blkid_probe_get_size@plt+0x17854>
   1ecc0:	ldr	r1, [sp, #88]	; 0x58
   1ecc4:	cmp	r1, #10
   1ecc8:	moveq	r0, #1280	; 0x500
   1eccc:	moveq	r1, #0
   1ecd0:	movne	r0, #68	; 0x44
   1ecd4:	movne	r1, #0
   1ecd8:	cmp	r3, r1
   1ecdc:	cmpeq	r2, r0
   1ece0:	strcs	r2, [r5]
   1ece4:	bcc	1ed6c <blkid_probe_get_size@plt+0x17854>
   1ece8:	ldr	r2, [sp, #44]	; 0x2c
   1ecec:	ldr	r3, [r9]
   1ecf0:	mov	r0, #0
   1ecf4:	cmp	r2, r3
   1ecf8:	bne	1ee48 <blkid_probe_get_size@plt+0x17930>
   1ecfc:	add	sp, sp, #52	; 0x34
   1ed00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ed04:	ldr	r3, [pc, #328]	; 1ee54 <blkid_probe_get_size@plt+0x1793c>
   1ed08:	cmn	r0, #34	; 0x22
   1ed0c:	add	r3, pc, r3
   1ed10:	ldr	r3, [r3]
   1ed14:	beq	1ed78 <blkid_probe_get_size@plt+0x17860>
   1ed18:	cmp	r3, #2
   1ed1c:	ble	1ece8 <blkid_probe_get_size@plt+0x177d0>
   1ed20:	ldr	r1, [pc, #304]	; 1ee58 <blkid_probe_get_size@plt+0x17940>
   1ed24:	ldr	lr, [pc, #304]	; 1ee5c <blkid_probe_get_size@plt+0x17944>
   1ed28:	add	r1, pc, r1
   1ed2c:	add	r1, r1, #724	; 0x2d4
   1ed30:	str	r1, [sp, #12]
   1ed34:	ldr	r1, [pc, #292]	; 1ee60 <blkid_probe_get_size@plt+0x17948>
   1ed38:	ldr	ip, [pc, #292]	; 1ee64 <blkid_probe_get_size@plt+0x1794c>
   1ed3c:	add	r1, pc, r1
   1ed40:	add	ip, pc, ip
   1ed44:	str	r0, [sp]
   1ed48:	stmib	sp, {r1, lr}
   1ed4c:	str	r4, [sp, #20]
   1ed50:	mov	r3, r7
   1ed54:	mov	r2, r8
   1ed58:	mov	r0, r6
   1ed5c:	str	ip, [sp, #16]
   1ed60:	mov	r1, #3
   1ed64:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1ed68:	b	1ece8 <blkid_probe_get_size@plt+0x177d0>
   1ed6c:	ldr	r3, [pc, #244]	; 1ee68 <blkid_probe_get_size@plt+0x17950>
   1ed70:	add	r3, pc, r3
   1ed74:	ldr	r3, [r3]
   1ed78:	cmp	r3, #2
   1ed7c:	ble	1ece8 <blkid_probe_get_size@plt+0x177d0>
   1ed80:	ldr	r3, [sp, #88]	; 0x58
   1ed84:	ldr	r1, [pc, #224]	; 1ee6c <blkid_probe_get_size@plt+0x17954>
   1ed88:	cmp	r3, #10
   1ed8c:	add	r1, pc, r1
   1ed90:	movne	ip, #68	; 0x44
   1ed94:	moveq	ip, #1280	; 0x500
   1ed98:	add	r1, r1, #724	; 0x2d4
   1ed9c:	str	ip, [sp, #20]
   1eda0:	str	r1, [sp, #12]
   1eda4:	ldr	ip, [pc, #196]	; 1ee70 <blkid_probe_get_size@plt+0x17958>
   1eda8:	ldr	r1, [pc, #196]	; 1ee74 <blkid_probe_get_size@plt+0x1795c>
   1edac:	add	ip, pc, ip
   1edb0:	ldr	lr, [pc, #192]	; 1ee78 <blkid_probe_get_size@plt+0x17960>
   1edb4:	add	r1, pc, r1
   1edb8:	str	ip, [sp, #16]
   1edbc:	str	r1, [sp, #4]
   1edc0:	mvn	ip, #0
   1edc4:	mvn	r1, #33	; 0x21
   1edc8:	str	r1, [sp]
   1edcc:	str	r4, [sp, #28]
   1edd0:	mov	r3, r7
   1edd4:	mov	r2, r8
   1edd8:	mov	r0, r6
   1eddc:	str	lr, [sp, #8]
   1ede0:	str	ip, [sp, #24]
   1ede4:	mov	r1, #3
   1ede8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1edec:	b	1ece8 <blkid_probe_get_size@plt+0x177d0>
   1edf0:	ldr	r3, [pc, #132]	; 1ee7c <blkid_probe_get_size@plt+0x17964>
   1edf4:	ldr	r2, [pc, #132]	; 1ee80 <blkid_probe_get_size@plt+0x17968>
   1edf8:	add	r3, pc, r3
   1edfc:	ldr	r1, [pc, #128]	; 1ee84 <blkid_probe_get_size@plt+0x1796c>
   1ee00:	add	r3, r3, #704	; 0x2c0
   1ee04:	str	r3, [sp]
   1ee08:	mov	r0, r4
   1ee0c:	ldr	r3, [pc, #116]	; 1ee88 <blkid_probe_get_size@plt+0x17970>
   1ee10:	add	r2, pc, r2
   1ee14:	add	r1, pc, r1
   1ee18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ee1c:	ldr	r3, [pc, #104]	; 1ee8c <blkid_probe_get_size@plt+0x17974>
   1ee20:	ldr	r2, [pc, #104]	; 1ee90 <blkid_probe_get_size@plt+0x17978>
   1ee24:	add	r3, pc, r3
   1ee28:	ldr	r1, [pc, #100]	; 1ee94 <blkid_probe_get_size@plt+0x1797c>
   1ee2c:	add	r3, r3, #704	; 0x2c0
   1ee30:	str	r3, [sp]
   1ee34:	mov	r0, r5
   1ee38:	ldr	r3, [pc, #88]	; 1ee98 <blkid_probe_get_size@plt+0x17980>
   1ee3c:	add	r2, pc, r2
   1ee40:	add	r1, pc, r1
   1ee44:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1ee48:	bl	6fb4 <__stack_chk_fail@plt>
   1ee4c:	andeq	r8, r7, ip, lsl pc
   1ee50:	andeq	r0, r0, ip, lsr r4
   1ee54:	andeq	r9, r7, r0, lsr r4
   1ee58:	andeq	sl, r4, r0, ror #17
   1ee5c:	andeq	r0, r0, lr, lsl #8
   1ee60:	andeq	fp, r4, ip, lsr r4
   1ee64:	andeq	fp, r4, ip, asr #16
   1ee68:	andeq	r9, r7, ip, asr #7
   1ee6c:	andeq	sl, r4, ip, ror r8
   1ee70:	andeq	fp, r4, r4, lsl #15
   1ee74:	andeq	fp, r4, r4, asr #7
   1ee78:	andeq	r0, r0, r9, lsl #8
   1ee7c:	andeq	sl, r4, r0, lsl r8
   1ee80:	andeq	fp, r4, r8, ror #6
   1ee84:	andeq	fp, r4, r8, lsr #11
   1ee88:	andeq	r0, r0, r1, lsl #8
   1ee8c:	andeq	sl, r4, r4, ror #15
   1ee90:	andeq	fp, r4, ip, lsr r3
   1ee94:	andeq	fp, r4, ip, ror #13
   1ee98:	andeq	r0, r0, r2, lsl #8
   1ee9c:	ldr	r3, [pc, #440]	; 1f05c <blkid_probe_get_size@plt+0x17b44>
   1eea0:	ldr	ip, [pc, #440]	; 1f060 <blkid_probe_get_size@plt+0x17b48>
   1eea4:	add	r3, pc, r3
   1eea8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1eeac:	sub	sp, sp, #44	; 0x2c
   1eeb0:	ldr	r9, [r3, ip]
   1eeb4:	subs	r5, r1, #0
   1eeb8:	mov	r6, r0
   1eebc:	ldr	r3, [r9]
   1eec0:	ldr	r0, [sp, #76]	; 0x4c
   1eec4:	ldr	r4, [sp, #84]	; 0x54
   1eec8:	str	r3, [sp, #36]	; 0x24
   1eecc:	ldr	r8, [sp, #88]	; 0x58
   1eed0:	beq	1efac <blkid_probe_get_size@plt+0x17a94>
   1eed4:	cmp	r0, #0
   1eed8:	beq	1efd8 <blkid_probe_get_size@plt+0x17ac0>
   1eedc:	cmp	r4, #0
   1eee0:	beq	1f000 <blkid_probe_get_size@plt+0x17ae8>
   1eee4:	cmp	r8, #0
   1eee8:	beq	1f02c <blkid_probe_get_size@plt+0x17b14>
   1eeec:	add	r3, sp, #24
   1eef0:	str	r3, [sp]
   1eef4:	mov	r7, r2
   1eef8:	mov	r3, #0
   1eefc:	mov	r2, #1000	; 0x3e8
   1ef00:	mov	r0, r4
   1ef04:	bl	416fc <blkid_probe_get_size@plt+0x3a1e4>
   1ef08:	cmp	r0, #0
   1ef0c:	blt	1ef2c <blkid_probe_get_size@plt+0x17a14>
   1ef10:	ldrd	r2, [sp, #24]
   1ef14:	mov	r1, #0
   1ef18:	cmp	r3, r1
   1ef1c:	cmpeq	r2, r2
   1ef20:	streq	r2, [r8]
   1ef24:	beq	1ef40 <blkid_probe_get_size@plt+0x17a28>
   1ef28:	mvn	r0, #33	; 0x21
   1ef2c:	ldr	r3, [pc, #304]	; 1f064 <blkid_probe_get_size@plt+0x17b4c>
   1ef30:	add	r3, pc, r3
   1ef34:	ldr	r3, [r3]
   1ef38:	cmp	r3, #2
   1ef3c:	bgt	1ef5c <blkid_probe_get_size@plt+0x17a44>
   1ef40:	ldr	r2, [sp, #36]	; 0x24
   1ef44:	ldr	r3, [r9]
   1ef48:	mov	r0, #0
   1ef4c:	cmp	r2, r3
   1ef50:	bne	1f058 <blkid_probe_get_size@plt+0x17b40>
   1ef54:	add	sp, sp, #44	; 0x2c
   1ef58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ef5c:	ldr	r1, [pc, #260]	; 1f068 <blkid_probe_get_size@plt+0x17b50>
   1ef60:	ldr	ip, [pc, #260]	; 1f06c <blkid_probe_get_size@plt+0x17b54>
   1ef64:	add	r1, pc, r1
   1ef68:	add	r1, r1, #768	; 0x300
   1ef6c:	add	ip, pc, ip
   1ef70:	ldr	lr, [pc, #248]	; 1f070 <blkid_probe_get_size@plt+0x17b58>
   1ef74:	str	r4, [sp, #20]
   1ef78:	str	r1, [sp, #12]
   1ef7c:	mov	r4, #568	; 0x238
   1ef80:	mov	r1, ip
   1ef84:	add	lr, pc, lr
   1ef88:	str	r0, [sp]
   1ef8c:	stmib	sp, {r1, r4}
   1ef90:	mov	r3, r7
   1ef94:	mov	r2, r5
   1ef98:	mov	r0, r6
   1ef9c:	str	lr, [sp, #16]
   1efa0:	mov	r1, #3
   1efa4:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1efa8:	b	1ef40 <blkid_probe_get_size@plt+0x17a28>
   1efac:	ldr	r3, [pc, #192]	; 1f074 <blkid_probe_get_size@plt+0x17b5c>
   1efb0:	ldr	r2, [pc, #192]	; 1f078 <blkid_probe_get_size@plt+0x17b60>
   1efb4:	add	r3, pc, r3
   1efb8:	ldr	r1, [pc, #188]	; 1f07c <blkid_probe_get_size@plt+0x17b64>
   1efbc:	add	r3, r3, #744	; 0x2e8
   1efc0:	str	r3, [sp]
   1efc4:	mov	r0, r5
   1efc8:	ldr	r3, [pc, #176]	; 1f080 <blkid_probe_get_size@plt+0x17b68>
   1efcc:	add	r2, pc, r2
   1efd0:	add	r1, pc, r1
   1efd4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1efd8:	ldr	r3, [pc, #164]	; 1f084 <blkid_probe_get_size@plt+0x17b6c>
   1efdc:	ldr	r2, [pc, #164]	; 1f088 <blkid_probe_get_size@plt+0x17b70>
   1efe0:	add	r3, pc, r3
   1efe4:	ldr	r1, [pc, #160]	; 1f08c <blkid_probe_get_size@plt+0x17b74>
   1efe8:	add	r3, r3, #744	; 0x2e8
   1efec:	str	r3, [sp]
   1eff0:	add	r2, pc, r2
   1eff4:	mov	r3, #560	; 0x230
   1eff8:	add	r1, pc, r1
   1effc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f000:	ldr	r3, [pc, #136]	; 1f090 <blkid_probe_get_size@plt+0x17b78>
   1f004:	ldr	r2, [pc, #136]	; 1f094 <blkid_probe_get_size@plt+0x17b7c>
   1f008:	add	r3, pc, r3
   1f00c:	ldr	r1, [pc, #132]	; 1f098 <blkid_probe_get_size@plt+0x17b80>
   1f010:	add	r3, r3, #744	; 0x2e8
   1f014:	str	r3, [sp]
   1f018:	mov	r0, r4
   1f01c:	ldr	r3, [pc, #120]	; 1f09c <blkid_probe_get_size@plt+0x17b84>
   1f020:	add	r2, pc, r2
   1f024:	add	r1, pc, r1
   1f028:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f02c:	ldr	r3, [pc, #108]	; 1f0a0 <blkid_probe_get_size@plt+0x17b88>
   1f030:	ldr	r2, [pc, #108]	; 1f0a4 <blkid_probe_get_size@plt+0x17b8c>
   1f034:	add	r3, pc, r3
   1f038:	ldr	r1, [pc, #104]	; 1f0a8 <blkid_probe_get_size@plt+0x17b90>
   1f03c:	add	r3, r3, #744	; 0x2e8
   1f040:	str	r3, [sp]
   1f044:	mov	r0, r8
   1f048:	ldr	r3, [pc, #92]	; 1f0ac <blkid_probe_get_size@plt+0x17b94>
   1f04c:	add	r2, pc, r2
   1f050:	add	r1, pc, r1
   1f054:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f058:	bl	6fb4 <__stack_chk_fail@plt>
   1f05c:	andeq	r8, r7, r4, asr #25
   1f060:	andeq	r0, r0, ip, lsr r4
   1f064:	andeq	r9, r7, ip, lsl #4
   1f068:	andeq	sl, r4, r4, lsr #13
   1f06c:	andeq	fp, r4, ip, lsl #4
   1f070:	andeq	fp, r4, r8, lsr r6
   1f074:	andeq	sl, r4, r4, asr r6
   1f078:	andeq	fp, r4, ip, lsr #3
   1f07c:	ldrdeq	fp, [r4], -r8
   1f080:	andeq	r0, r0, pc, lsr #4
   1f084:	andeq	sl, r4, r8, lsr #12
   1f088:	andeq	fp, r4, r8, lsl #3
   1f08c:	andeq	fp, r4, r4, lsr #3
   1f090:	andeq	sl, r4, r0, lsl #12
   1f094:	andeq	fp, r4, r8, asr r1
   1f098:	muleq	r4, r8, r3
   1f09c:	andeq	r0, r0, r1, lsr r2
   1f0a0:	ldrdeq	sl, [r4], -r4
   1f0a4:	andeq	fp, r4, ip, lsr #2
   1f0a8:	andeq	r5, r5, ip, lsr #15
   1f0ac:	andeq	r0, r0, r2, lsr r2
   1f0b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1f0b4:	sub	sp, sp, #12
   1f0b8:	cmp	r1, #0
   1f0bc:	ldr	r2, [sp, #20]
   1f0c0:	ldr	r3, [sp, #28]
   1f0c4:	ldr	r0, [sp, #32]
   1f0c8:	beq	1f134 <blkid_probe_get_size@plt+0x17c1c>
   1f0cc:	cmp	r2, #0
   1f0d0:	beq	1f160 <blkid_probe_get_size@plt+0x17c48>
   1f0d4:	cmp	r3, #0
   1f0d8:	beq	1f18c <blkid_probe_get_size@plt+0x17c74>
   1f0dc:	cmp	r0, #0
   1f0e0:	beq	1f1b8 <blkid_probe_get_size@plt+0x17ca0>
   1f0e4:	ldrb	r2, [r3]
   1f0e8:	cmp	r2, #0
   1f0ec:	movne	r1, r3
   1f0f0:	moveq	r1, #0
   1f0f4:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   1f0f8:	cmp	r0, #0
   1f0fc:	blt	1f10c <blkid_probe_get_size@plt+0x17bf4>
   1f100:	mov	r0, #0
   1f104:	add	sp, sp, #12
   1f108:	pop	{pc}		; (ldr pc, [sp], #4)
   1f10c:	ldr	r3, [pc, #204]	; 1f1e0 <blkid_probe_get_size@plt+0x17cc8>
   1f110:	ldr	r1, [pc, #204]	; 1f1e4 <blkid_probe_get_size@plt+0x17ccc>
   1f114:	add	r3, pc, r3
   1f118:	mov	r2, #688	; 0x2b0
   1f11c:	add	r3, r3, #812	; 0x32c
   1f120:	add	r1, pc, r1
   1f124:	mov	r0, #0
   1f128:	add	sp, sp, #12
   1f12c:	pop	{lr}		; (ldr lr, [sp], #4)
   1f130:	b	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1f134:	ldr	r3, [pc, #172]	; 1f1e8 <blkid_probe_get_size@plt+0x17cd0>
   1f138:	mov	r0, r1
   1f13c:	add	r3, pc, r3
   1f140:	ldr	r2, [pc, #164]	; 1f1ec <blkid_probe_get_size@plt+0x17cd4>
   1f144:	ldr	r1, [pc, #164]	; 1f1f0 <blkid_probe_get_size@plt+0x17cd8>
   1f148:	add	r3, r3, #792	; 0x318
   1f14c:	str	r3, [sp]
   1f150:	add	r2, pc, r2
   1f154:	ldr	r3, [pc, #152]	; 1f1f4 <blkid_probe_get_size@plt+0x17cdc>
   1f158:	add	r1, pc, r1
   1f15c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f160:	ldr	r3, [pc, #144]	; 1f1f8 <blkid_probe_get_size@plt+0x17ce0>
   1f164:	mov	r0, r2
   1f168:	add	r3, pc, r3
   1f16c:	ldr	r2, [pc, #136]	; 1f1fc <blkid_probe_get_size@plt+0x17ce4>
   1f170:	ldr	r1, [pc, #136]	; 1f200 <blkid_probe_get_size@plt+0x17ce8>
   1f174:	add	r3, r3, #792	; 0x318
   1f178:	str	r3, [sp]
   1f17c:	add	r2, pc, r2
   1f180:	ldr	r3, [pc, #124]	; 1f204 <blkid_probe_get_size@plt+0x17cec>
   1f184:	add	r1, pc, r1
   1f188:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f18c:	ldr	r2, [pc, #116]	; 1f208 <blkid_probe_get_size@plt+0x17cf0>
   1f190:	mov	r0, r3
   1f194:	add	r2, pc, r2
   1f198:	add	r3, r2, #792	; 0x318
   1f19c:	ldr	r1, [pc, #104]	; 1f20c <blkid_probe_get_size@plt+0x17cf4>
   1f1a0:	ldr	r2, [pc, #104]	; 1f210 <blkid_probe_get_size@plt+0x17cf8>
   1f1a4:	str	r3, [sp]
   1f1a8:	add	r2, pc, r2
   1f1ac:	mov	r3, #684	; 0x2ac
   1f1b0:	add	r1, pc, r1
   1f1b4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f1b8:	ldr	r3, [pc, #84]	; 1f214 <blkid_probe_get_size@plt+0x17cfc>
   1f1bc:	ldr	r2, [pc, #84]	; 1f218 <blkid_probe_get_size@plt+0x17d00>
   1f1c0:	add	r3, pc, r3
   1f1c4:	ldr	r1, [pc, #80]	; 1f21c <blkid_probe_get_size@plt+0x17d04>
   1f1c8:	add	r3, r3, #792	; 0x318
   1f1cc:	str	r3, [sp]
   1f1d0:	add	r2, pc, r2
   1f1d4:	ldr	r3, [pc, #68]	; 1f220 <blkid_probe_get_size@plt+0x17d08>
   1f1d8:	add	r1, pc, r1
   1f1dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f1e0:	strdeq	sl, [r4], -r4
   1f1e4:	andeq	fp, r4, r8, asr r0
   1f1e8:	andeq	sl, r4, ip, asr #9
   1f1ec:	andeq	fp, r4, r8, lsr #32
   1f1f0:	andeq	fp, r4, r0, asr r2
   1f1f4:	andeq	r0, r0, sl, lsr #5
   1f1f8:	andeq	sl, r4, r0, lsr #9
   1f1fc:	strdeq	sl, [r4], -ip
   1f200:	andeq	fp, r4, r8, lsl r0
   1f204:	andeq	r0, r0, fp, lsr #5
   1f208:	andeq	sl, r4, r4, ror r4
   1f20c:	andeq	fp, r4, ip, lsl #4
   1f210:	ldrdeq	sl, [r4], -r0
   1f214:	andeq	sl, r4, r8, asr #8
   1f218:	andeq	sl, r4, r8, lsr #31
   1f21c:	andeq	r5, r5, r4, lsr #12
   1f220:	andeq	r0, r0, sp, lsr #5
   1f224:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f228:	sub	sp, sp, #28
   1f22c:	subs	r7, r1, #0
   1f230:	mov	r8, r0
   1f234:	ldrd	r4, [sp, #68]	; 0x44
   1f238:	ldr	r0, [sp, #60]	; 0x3c
   1f23c:	beq	1f32c <blkid_probe_get_size@plt+0x17e14>
   1f240:	cmp	r0, #0
   1f244:	beq	1f358 <blkid_probe_get_size@plt+0x17e40>
   1f248:	cmp	r4, #0
   1f24c:	beq	1f380 <blkid_probe_get_size@plt+0x17e68>
   1f250:	cmp	r5, #0
   1f254:	beq	1f3ac <blkid_probe_get_size@plt+0x17e94>
   1f258:	ldrb	r6, [r4]
   1f25c:	cmp	r6, #0
   1f260:	bne	1f27c <blkid_probe_get_size@plt+0x17d64>
   1f264:	ldr	r0, [r5]
   1f268:	bl	69f0 <free@plt>
   1f26c:	str	r6, [r5]
   1f270:	mov	r0, #0
   1f274:	add	sp, sp, #28
   1f278:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f27c:	mov	r0, r4
   1f280:	mov	r9, r2
   1f284:	bl	39c50 <blkid_probe_get_size@plt+0x32738>
   1f288:	cmp	r0, #0
   1f28c:	bne	1f2f0 <blkid_probe_get_size@plt+0x17dd8>
   1f290:	ldr	r3, [pc, #320]	; 1f3d8 <blkid_probe_get_size@plt+0x17ec0>
   1f294:	add	r3, pc, r3
   1f298:	ldr	r3, [r3]
   1f29c:	cmp	r3, #2
   1f2a0:	ble	1f270 <blkid_probe_get_size@plt+0x17d58>
   1f2a4:	ldr	r1, [pc, #304]	; 1f3dc <blkid_probe_get_size@plt+0x17ec4>
   1f2a8:	ldr	lr, [pc, #304]	; 1f3e0 <blkid_probe_get_size@plt+0x17ec8>
   1f2ac:	add	r1, pc, r1
   1f2b0:	add	r1, r1, #852	; 0x354
   1f2b4:	str	r1, [sp, #12]
   1f2b8:	ldr	r1, [pc, #292]	; 1f3e4 <blkid_probe_get_size@plt+0x17ecc>
   1f2bc:	ldr	ip, [pc, #292]	; 1f3e8 <blkid_probe_get_size@plt+0x17ed0>
   1f2c0:	add	r1, pc, r1
   1f2c4:	add	ip, pc, ip
   1f2c8:	str	r0, [sp]
   1f2cc:	stmib	sp, {r1, lr}
   1f2d0:	str	r4, [sp, #20]
   1f2d4:	mov	r3, r9
   1f2d8:	mov	r2, r7
   1f2dc:	mov	r0, r8
   1f2e0:	str	ip, [sp, #16]
   1f2e4:	mov	r1, #3
   1f2e8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1f2ec:	b	1f270 <blkid_probe_get_size@plt+0x17d58>
   1f2f0:	mov	r1, r4
   1f2f4:	mov	r0, r5
   1f2f8:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   1f2fc:	cmp	r0, #0
   1f300:	bge	1f270 <blkid_probe_get_size@plt+0x17d58>
   1f304:	ldr	r3, [pc, #224]	; 1f3ec <blkid_probe_get_size@plt+0x17ed4>
   1f308:	ldr	r1, [pc, #224]	; 1f3f0 <blkid_probe_get_size@plt+0x17ed8>
   1f30c:	add	r3, pc, r3
   1f310:	mov	r2, #968	; 0x3c8
   1f314:	add	r3, r3, #852	; 0x354
   1f318:	add	r1, pc, r1
   1f31c:	mov	r0, #0
   1f320:	add	sp, sp, #28
   1f324:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1f328:	b	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1f32c:	ldr	r3, [pc, #192]	; 1f3f4 <blkid_probe_get_size@plt+0x17edc>
   1f330:	ldr	r2, [pc, #192]	; 1f3f8 <blkid_probe_get_size@plt+0x17ee0>
   1f334:	add	r3, pc, r3
   1f338:	ldr	r1, [pc, #188]	; 1f3fc <blkid_probe_get_size@plt+0x17ee4>
   1f33c:	add	r3, r3, #832	; 0x340
   1f340:	str	r3, [sp]
   1f344:	mov	r0, r7
   1f348:	ldr	r3, [pc, #176]	; 1f400 <blkid_probe_get_size@plt+0x17ee8>
   1f34c:	add	r2, pc, r2
   1f350:	add	r1, pc, r1
   1f354:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f358:	ldr	r3, [pc, #164]	; 1f404 <blkid_probe_get_size@plt+0x17eec>
   1f35c:	ldr	r2, [pc, #164]	; 1f408 <blkid_probe_get_size@plt+0x17ef0>
   1f360:	add	r3, pc, r3
   1f364:	ldr	r1, [pc, #160]	; 1f40c <blkid_probe_get_size@plt+0x17ef4>
   1f368:	add	r3, r3, #832	; 0x340
   1f36c:	str	r3, [sp]
   1f370:	add	r2, pc, r2
   1f374:	mov	r3, #952	; 0x3b8
   1f378:	add	r1, pc, r1
   1f37c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f380:	ldr	r3, [pc, #136]	; 1f410 <blkid_probe_get_size@plt+0x17ef8>
   1f384:	ldr	r2, [pc, #136]	; 1f414 <blkid_probe_get_size@plt+0x17efc>
   1f388:	add	r3, pc, r3
   1f38c:	ldr	r1, [pc, #132]	; 1f418 <blkid_probe_get_size@plt+0x17f00>
   1f390:	add	r3, r3, #832	; 0x340
   1f394:	str	r3, [sp]
   1f398:	mov	r0, r4
   1f39c:	ldr	r3, [pc, #120]	; 1f41c <blkid_probe_get_size@plt+0x17f04>
   1f3a0:	add	r2, pc, r2
   1f3a4:	add	r1, pc, r1
   1f3a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f3ac:	ldr	r3, [pc, #108]	; 1f420 <blkid_probe_get_size@plt+0x17f08>
   1f3b0:	ldr	r2, [pc, #108]	; 1f424 <blkid_probe_get_size@plt+0x17f0c>
   1f3b4:	add	r3, pc, r3
   1f3b8:	ldr	r1, [pc, #104]	; 1f428 <blkid_probe_get_size@plt+0x17f10>
   1f3bc:	add	r3, r3, #832	; 0x340
   1f3c0:	str	r3, [sp]
   1f3c4:	mov	r0, r5
   1f3c8:	ldr	r3, [pc, #92]	; 1f42c <blkid_probe_get_size@plt+0x17f14>
   1f3cc:	add	r2, pc, r2
   1f3d0:	add	r1, pc, r1
   1f3d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f3d8:	andeq	r8, r7, r8, lsr #29
   1f3dc:	andeq	sl, r4, ip, asr r3
   1f3e0:	andeq	r0, r0, r2, asr #7
   1f3e4:			; <UNDEFINED> instruction: 0x0004aeb8
   1f3e8:	andeq	fp, r4, r8, lsr #6
   1f3ec:	strdeq	sl, [r4], -ip
   1f3f0:	andeq	sl, r4, r0, ror #28
   1f3f4:	ldrdeq	sl, [r4], -r4
   1f3f8:	andeq	sl, r4, ip, lsr #28
   1f3fc:	andeq	fp, r4, r8, asr r0
   1f400:			; <UNDEFINED> instruction: 0x000003b7
   1f404:	andeq	sl, r4, r8, lsr #5
   1f408:	andeq	sl, r4, r8, lsl #28
   1f40c:	andeq	sl, r4, r4, lsr #28
   1f410:	andeq	sl, r4, r0, lsl #5
   1f414:	ldrdeq	sl, [r4], -r8
   1f418:	andeq	fp, r4, r8, lsl r0
   1f41c:			; <UNDEFINED> instruction: 0x000003b9
   1f420:	andeq	sl, r4, r4, asr r2
   1f424:	andeq	sl, r4, ip, lsr #27
   1f428:	andeq	r5, r5, ip, lsr #8
   1f42c:			; <UNDEFINED> instruction: 0x000003ba
   1f430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f434:	sub	sp, sp, #44	; 0x2c
   1f438:	ldr	r3, [pc, #568]	; 1f678 <blkid_probe_get_size@plt+0x18160>
   1f43c:	ldr	ip, [pc, #568]	; 1f67c <blkid_probe_get_size@plt+0x18164>
   1f440:	add	r3, pc, r3
   1f444:	ldr	lr, [sp, #92]	; 0x5c
   1f448:	mov	fp, r2
   1f44c:	str	lr, [sp, #28]
   1f450:	ldr	r8, [r3, ip]
   1f454:	subs	r9, r1, #0
   1f458:	mov	sl, r0
   1f45c:	ldr	r2, [r8]
   1f460:	ldr	r0, [sp, #84]	; 0x54
   1f464:	str	r2, [sp, #36]	; 0x24
   1f468:	ldr	r4, [sp, #96]	; 0x60
   1f46c:	beq	1f5c8 <blkid_probe_get_size@plt+0x180b0>
   1f470:	cmp	r0, #0
   1f474:	beq	1f5f4 <blkid_probe_get_size@plt+0x180dc>
   1f478:	cmp	lr, #0
   1f47c:	beq	1f61c <blkid_probe_get_size@plt+0x18104>
   1f480:	cmp	r4, #0
   1f484:	beq	1f648 <blkid_probe_get_size@plt+0x18130>
   1f488:	ldrb	r5, [lr]
   1f48c:	cmp	r5, #0
   1f490:	beq	1f4ec <blkid_probe_get_size@plt+0x17fd4>
   1f494:	add	r7, sp, #32
   1f498:	add	r6, sp, #28
   1f49c:	mov	r5, #0
   1f4a0:	b	1f4c8 <blkid_probe_get_size@plt+0x17fb0>
   1f4a4:	cmn	r0, #12
   1f4a8:	beq	1f514 <blkid_probe_get_size@plt+0x17ffc>
   1f4ac:	cmp	r0, #0
   1f4b0:	blt	1f53c <blkid_probe_get_size@plt+0x18024>
   1f4b4:	ldr	r1, [sp, #32]
   1f4b8:	mov	r0, r4
   1f4bc:	bl	39388 <blkid_probe_get_size@plt+0x31e70>
   1f4c0:	cmp	r0, #0
   1f4c4:	blt	1f5a0 <blkid_probe_get_size@plt+0x18088>
   1f4c8:	mov	r2, #40	; 0x28
   1f4cc:	mov	r1, r7
   1f4d0:	mov	r0, r6
   1f4d4:	str	r5, [sp, #32]
   1f4d8:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   1f4dc:	cmp	r0, #0
   1f4e0:	bne	1f4a4 <blkid_probe_get_size@plt+0x17f8c>
   1f4e4:	mov	r5, #0
   1f4e8:	b	1f4f8 <blkid_probe_get_size@plt+0x17fe0>
   1f4ec:	ldr	r0, [r4]
   1f4f0:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   1f4f4:	str	r0, [r4]
   1f4f8:	ldr	r1, [sp, #36]	; 0x24
   1f4fc:	ldr	r2, [r8]
   1f500:	mov	r0, r5
   1f504:	cmp	r1, r2
   1f508:	bne	1f674 <blkid_probe_get_size@plt+0x1815c>
   1f50c:	add	sp, sp, #44	; 0x2c
   1f510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f514:	ldr	r3, [pc, #356]	; 1f680 <blkid_probe_get_size@plt+0x18168>
   1f518:	ldr	r1, [pc, #356]	; 1f684 <blkid_probe_get_size@plt+0x1816c>
   1f51c:	add	r3, pc, r3
   1f520:	ldr	r2, [pc, #352]	; 1f688 <blkid_probe_get_size@plt+0x18170>
   1f524:	add	r3, r3, #892	; 0x37c
   1f528:	add	r1, pc, r1
   1f52c:	mov	r0, #0
   1f530:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1f534:	mov	r5, r0
   1f538:	b	1f4f8 <blkid_probe_get_size@plt+0x17fe0>
   1f53c:	ldr	r3, [pc, #328]	; 1f68c <blkid_probe_get_size@plt+0x18174>
   1f540:	add	r3, pc, r3
   1f544:	ldr	r3, [r3]
   1f548:	cmp	r3, #2
   1f54c:	ble	1f4e4 <blkid_probe_get_size@plt+0x17fcc>
   1f550:	ldr	r1, [pc, #312]	; 1f690 <blkid_probe_get_size@plt+0x18178>
   1f554:	ldr	ip, [pc, #312]	; 1f694 <blkid_probe_get_size@plt+0x1817c>
   1f558:	add	r1, pc, r1
   1f55c:	add	r1, r1, #892	; 0x37c
   1f560:	str	r1, [sp, #12]
   1f564:	ldr	r1, [pc, #300]	; 1f698 <blkid_probe_get_size@plt+0x18180>
   1f568:	add	ip, pc, ip
   1f56c:	ldr	lr, [sp, #28]
   1f570:	add	r1, pc, r1
   1f574:	str	ip, [sp, #16]
   1f578:	mov	ip, #764	; 0x2fc
   1f57c:	str	r0, [sp]
   1f580:	stmib	sp, {r1, ip}
   1f584:	mov	r3, fp
   1f588:	mov	r2, r9
   1f58c:	mov	r0, sl
   1f590:	str	lr, [sp, #20]
   1f594:	mov	r1, #3
   1f598:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1f59c:	b	1f4e4 <blkid_probe_get_size@plt+0x17fcc>
   1f5a0:	ldr	r3, [pc, #244]	; 1f69c <blkid_probe_get_size@plt+0x18184>
   1f5a4:	ldr	r1, [pc, #244]	; 1f6a0 <blkid_probe_get_size@plt+0x18188>
   1f5a8:	add	r3, pc, r3
   1f5ac:	ldr	r2, [pc, #240]	; 1f6a4 <blkid_probe_get_size@plt+0x1818c>
   1f5b0:	add	r3, r3, #892	; 0x37c
   1f5b4:	add	r1, pc, r1
   1f5b8:	mov	r0, #0
   1f5bc:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   1f5c0:	mov	r5, r0
   1f5c4:	b	1f4f8 <blkid_probe_get_size@plt+0x17fe0>
   1f5c8:	ldr	r3, [pc, #216]	; 1f6a8 <blkid_probe_get_size@plt+0x18190>
   1f5cc:	ldr	r2, [pc, #216]	; 1f6ac <blkid_probe_get_size@plt+0x18194>
   1f5d0:	add	r3, pc, r3
   1f5d4:	ldr	r1, [pc, #212]	; 1f6b0 <blkid_probe_get_size@plt+0x18198>
   1f5d8:	add	r3, r3, #872	; 0x368
   1f5dc:	str	r3, [sp]
   1f5e0:	mov	r0, r9
   1f5e4:	ldr	r3, [pc, #200]	; 1f6b4 <blkid_probe_get_size@plt+0x1819c>
   1f5e8:	add	r2, pc, r2
   1f5ec:	add	r1, pc, r1
   1f5f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f5f4:	ldr	r3, [pc, #188]	; 1f6b8 <blkid_probe_get_size@plt+0x181a0>
   1f5f8:	ldr	r2, [pc, #188]	; 1f6bc <blkid_probe_get_size@plt+0x181a4>
   1f5fc:	add	r3, pc, r3
   1f600:	ldr	r1, [pc, #184]	; 1f6c0 <blkid_probe_get_size@plt+0x181a8>
   1f604:	add	r3, r3, #872	; 0x368
   1f608:	str	r3, [sp]
   1f60c:	add	r2, pc, r2
   1f610:	ldr	r3, [pc, #172]	; 1f6c4 <blkid_probe_get_size@plt+0x181ac>
   1f614:	add	r1, pc, r1
   1f618:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f61c:	ldr	r3, [pc, #164]	; 1f6c8 <blkid_probe_get_size@plt+0x181b0>
   1f620:	ldr	r2, [pc, #164]	; 1f6cc <blkid_probe_get_size@plt+0x181b4>
   1f624:	add	r3, pc, r3
   1f628:	ldr	r1, [pc, #160]	; 1f6d0 <blkid_probe_get_size@plt+0x181b8>
   1f62c:	add	r3, r3, #872	; 0x368
   1f630:	str	r3, [sp]
   1f634:	mov	r0, lr
   1f638:	ldr	r3, [pc, #148]	; 1f6d4 <blkid_probe_get_size@plt+0x181bc>
   1f63c:	add	r2, pc, r2
   1f640:	add	r1, pc, r1
   1f644:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f648:	ldr	r3, [pc, #136]	; 1f6d8 <blkid_probe_get_size@plt+0x181c0>
   1f64c:	ldr	r2, [pc, #136]	; 1f6dc <blkid_probe_get_size@plt+0x181c4>
   1f650:	add	r3, pc, r3
   1f654:	ldr	r1, [pc, #132]	; 1f6e0 <blkid_probe_get_size@plt+0x181c8>
   1f658:	add	r3, r3, #872	; 0x368
   1f65c:	str	r3, [sp]
   1f660:	mov	r0, r4
   1f664:	mov	r3, #748	; 0x2ec
   1f668:	add	r2, pc, r2
   1f66c:	add	r1, pc, r1
   1f670:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f674:	bl	6fb4 <__stack_chk_fail@plt>
   1f678:	andeq	r8, r7, r8, lsr #14
   1f67c:	andeq	r0, r0, ip, lsr r4
   1f680:	andeq	sl, r4, ip, ror #1
   1f684:	andeq	sl, r4, r0, asr ip
   1f688:	strdeq	r0, [r0], -sl
   1f68c:	strdeq	r8, [r7], -ip
   1f690:	strheq	sl, [r4], -r0
   1f694:	andeq	fp, r4, r8, asr #1
   1f698:	andeq	sl, r4, r8, lsl #24
   1f69c:	andeq	sl, r4, r0, rrx
   1f6a0:	andeq	sl, r4, r4, asr #23
   1f6a4:	andeq	r0, r0, r2, lsl #6
   1f6a8:	andeq	sl, r4, r8, lsr r0
   1f6ac:	muleq	r4, r0, fp
   1f6b0:			; <UNDEFINED> instruction: 0x0004adbc
   1f6b4:	andeq	r0, r0, r9, ror #5
   1f6b8:	andeq	sl, r4, ip
   1f6bc:	andeq	sl, r4, ip, ror #22
   1f6c0:	andeq	sl, r4, r8, lsl #23
   1f6c4:	andeq	r0, r0, sl, ror #5
   1f6c8:	andeq	r9, r4, r4, ror #31
   1f6cc:	andeq	sl, r4, ip, lsr fp
   1f6d0:	andeq	sl, r4, ip, ror sp
   1f6d4:	andeq	r0, r0, fp, ror #5
   1f6d8:			; <UNDEFINED> instruction: 0x00049fb8
   1f6dc:	andeq	sl, r4, r0, lsl fp
   1f6e0:	muleq	r5, r0, r1
   1f6e4:	push	{r4, r5, r6, r7, lr}
   1f6e8:	sub	sp, sp, #28
   1f6ec:	subs	r5, r1, #0
   1f6f0:	ldr	r4, [sp, #64]	; 0x40
   1f6f4:	beq	1f7b0 <blkid_probe_get_size@plt+0x18298>
   1f6f8:	ldr	r3, [sp, #52]	; 0x34
   1f6fc:	cmp	r3, #0
   1f700:	beq	1f7dc <blkid_probe_get_size@plt+0x182c4>
   1f704:	ldr	r3, [sp, #60]	; 0x3c
   1f708:	cmp	r3, #0
   1f70c:	beq	1f808 <blkid_probe_get_size@plt+0x182f0>
   1f710:	cmp	r4, #0
   1f714:	beq	1f834 <blkid_probe_get_size@plt+0x1831c>
   1f718:	mov	r6, r0
   1f71c:	ldr	r0, [sp, #60]	; 0x3c
   1f720:	mov	r7, r2
   1f724:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   1f728:	cmp	r0, #0
   1f72c:	blt	1f748 <blkid_probe_get_size@plt+0x18230>
   1f730:	movne	r3, #1
   1f734:	moveq	r3, #0
   1f738:	str	r3, [r4]
   1f73c:	mov	r0, #0
   1f740:	add	sp, sp, #28
   1f744:	pop	{r4, r5, r6, r7, pc}
   1f748:	ldr	r3, [pc, #272]	; 1f860 <blkid_probe_get_size@plt+0x18348>
   1f74c:	add	r3, pc, r3
   1f750:	ldr	r3, [r3]
   1f754:	cmp	r3, #2
   1f758:	ble	1f73c <blkid_probe_get_size@plt+0x18224>
   1f75c:	ldr	r1, [pc, #256]	; 1f864 <blkid_probe_get_size@plt+0x1834c>
   1f760:	ldr	ip, [pc, #256]	; 1f868 <blkid_probe_get_size@plt+0x18350>
   1f764:	add	r1, pc, r1
   1f768:	add	r1, r1, #936	; 0x3a8
   1f76c:	add	ip, pc, ip
   1f770:	ldr	lr, [pc, #244]	; 1f86c <blkid_probe_get_size@plt+0x18354>
   1f774:	ldr	r3, [sp, #60]	; 0x3c
   1f778:	str	r1, [sp, #12]
   1f77c:	mov	r4, #660	; 0x294
   1f780:	mov	r1, ip
   1f784:	add	lr, pc, lr
   1f788:	str	r3, [sp, #20]
   1f78c:	str	r0, [sp]
   1f790:	stmib	sp, {r1, r4}
   1f794:	mov	r3, r7
   1f798:	mov	r2, r5
   1f79c:	mov	r0, r6
   1f7a0:	str	lr, [sp, #16]
   1f7a4:	mov	r1, #3
   1f7a8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   1f7ac:	b	1f73c <blkid_probe_get_size@plt+0x18224>
   1f7b0:	ldr	r3, [pc, #184]	; 1f870 <blkid_probe_get_size@plt+0x18358>
   1f7b4:	ldr	r2, [pc, #184]	; 1f874 <blkid_probe_get_size@plt+0x1835c>
   1f7b8:	add	r3, pc, r3
   1f7bc:	ldr	r1, [pc, #180]	; 1f878 <blkid_probe_get_size@plt+0x18360>
   1f7c0:	add	r3, r3, #912	; 0x390
   1f7c4:	str	r3, [sp]
   1f7c8:	mov	r0, r5
   1f7cc:	ldr	r3, [pc, #168]	; 1f87c <blkid_probe_get_size@plt+0x18364>
   1f7d0:	add	r2, pc, r2
   1f7d4:	add	r1, pc, r1
   1f7d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f7dc:	ldr	r2, [pc, #156]	; 1f880 <blkid_probe_get_size@plt+0x18368>
   1f7e0:	ldr	r1, [pc, #156]	; 1f884 <blkid_probe_get_size@plt+0x1836c>
   1f7e4:	add	r2, pc, r2
   1f7e8:	add	r2, r2, #912	; 0x390
   1f7ec:	str	r2, [sp]
   1f7f0:	ldr	r2, [pc, #144]	; 1f888 <blkid_probe_get_size@plt+0x18370>
   1f7f4:	ldr	r3, [pc, #144]	; 1f88c <blkid_probe_get_size@plt+0x18374>
   1f7f8:	add	r2, pc, r2
   1f7fc:	add	r1, pc, r1
   1f800:	ldr	r0, [sp, #52]	; 0x34
   1f804:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f808:	ldr	r2, [pc, #128]	; 1f890 <blkid_probe_get_size@plt+0x18378>
   1f80c:	ldr	r1, [pc, #128]	; 1f894 <blkid_probe_get_size@plt+0x1837c>
   1f810:	add	r2, pc, r2
   1f814:	add	r2, r2, #912	; 0x390
   1f818:	str	r2, [sp]
   1f81c:	ldr	r2, [pc, #116]	; 1f898 <blkid_probe_get_size@plt+0x18380>
   1f820:	ldr	r3, [pc, #116]	; 1f89c <blkid_probe_get_size@plt+0x18384>
   1f824:	add	r2, pc, r2
   1f828:	add	r1, pc, r1
   1f82c:	ldr	r0, [sp, #60]	; 0x3c
   1f830:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f834:	ldr	r3, [pc, #100]	; 1f8a0 <blkid_probe_get_size@plt+0x18388>
   1f838:	ldr	r2, [pc, #100]	; 1f8a4 <blkid_probe_get_size@plt+0x1838c>
   1f83c:	add	r3, pc, r3
   1f840:	ldr	r1, [pc, #96]	; 1f8a8 <blkid_probe_get_size@plt+0x18390>
   1f844:	add	r3, r3, #912	; 0x390
   1f848:	str	r3, [sp]
   1f84c:	mov	r0, r4
   1f850:	mov	r3, #652	; 0x28c
   1f854:	add	r2, pc, r2
   1f858:	add	r1, pc, r1
   1f85c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   1f860:	strdeq	r8, [r7], -r0
   1f864:	andeq	r9, r4, r4, lsr #29
   1f868:	andeq	sl, r4, ip, lsl #20
   1f86c:	andeq	sl, r4, ip, asr #29
   1f870:	andeq	r9, r4, r0, asr lr
   1f874:	andeq	sl, r4, r8, lsr #19
   1f878:	ldrdeq	sl, [r4], -r4
   1f87c:	andeq	r0, r0, r9, lsl #5
   1f880:	andeq	r9, r4, r4, lsr #28
   1f884:	andeq	sl, r4, r0, lsr #19
   1f888:	andeq	sl, r4, r0, lsl #19
   1f88c:	andeq	r0, r0, sl, lsl #5
   1f890:	strdeq	r9, [r4], -r8
   1f894:	muleq	r4, r4, fp
   1f898:	andeq	sl, r4, r4, asr r9
   1f89c:	andeq	r0, r0, fp, lsl #5
   1f8a0:	andeq	r9, r4, ip, asr #27
   1f8a4:	andeq	sl, r4, r4, lsr #18
   1f8a8:	andeq	r4, r5, r4, lsr #31
   1f8ac:	ldr	r3, [pc, #2220]	; 20160 <blkid_probe_get_size@plt+0x18c48>
   1f8b0:	ldr	r2, [pc, #2220]	; 20164 <blkid_probe_get_size@plt+0x18c4c>
   1f8b4:	add	r3, pc, r3
   1f8b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8bc:	add	fp, sp, #32
   1f8c0:	sub	sp, sp, #84	; 0x54
   1f8c4:	ldr	r4, [r3, r2]
   1f8c8:	mov	r7, #0
   1f8cc:	mov	r5, r0
   1f8d0:	ldr	r3, [r4]
   1f8d4:	mov	r0, #18
   1f8d8:	str	r3, [fp, #-40]	; 0xffffffd8
   1f8dc:	str	r7, [fp, #-64]	; 0xffffffc0
   1f8e0:	bl	71f4 <umask@plt>
   1f8e4:	ldr	r0, [pc, #2172]	; 20168 <blkid_probe_get_size@plt+0x18c50>
   1f8e8:	mov	r1, r7
   1f8ec:	add	r0, pc, r0
   1f8f0:	bl	6ff0 <access@plt>
   1f8f4:	cmp	r0, r7
   1f8f8:	blt	1fb14 <blkid_probe_get_size@plt+0x185fc>
   1f8fc:	sub	r1, fp, #64	; 0x40
   1f900:	mov	r0, r5
   1f904:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   1f908:	subs	r8, r0, #0
   1f90c:	bge	1fa24 <blkid_probe_get_size@plt+0x1850c>
   1f910:	cmp	r5, #0
   1f914:	str	r7, [fp, #-44]	; 0xffffffd4
   1f918:	beq	1fb4c <blkid_probe_get_size@plt+0x18634>
   1f91c:	ldr	r3, [pc, #2120]	; 2016c <blkid_probe_get_size@plt+0x18c54>
   1f920:	add	r3, pc, r3
   1f924:	ldr	r3, [r3, #4]
   1f928:	cmp	r3, #2
   1f92c:	bgt	1ff14 <blkid_probe_get_size@plt+0x189fc>
   1f930:	mov	r0, r7
   1f934:	ldr	r2, [pc, #2100]	; 20170 <blkid_probe_get_size@plt+0x18c58>
   1f938:	ldr	r3, [pc, #2100]	; 20174 <blkid_probe_get_size@plt+0x18c5c>
   1f93c:	add	r2, pc, r2
   1f940:	str	r2, [sp, #20]
   1f944:	add	r3, pc, r3
   1f948:	ldr	r2, [pc, #2088]	; 20178 <blkid_probe_get_size@plt+0x18c60>
   1f94c:	mov	r1, #0
   1f950:	add	r3, r3, #960	; 0x3c0
   1f954:	stmib	sp, {r0, r7}
   1f958:	str	r3, [sp]
   1f95c:	str	r1, [sp, #16]
   1f960:	str	r1, [sp, #12]
   1f964:	mov	r3, #33	; 0x21
   1f968:	add	r2, pc, r2
   1f96c:	mov	r1, r8
   1f970:	mov	r0, #3
   1f974:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1f978:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1f97c:	cmp	r0, #0
   1f980:	beq	1fb18 <blkid_probe_get_size@plt+0x18600>
   1f984:	mov	r2, #0
   1f988:	mov	r1, r2
   1f98c:	bl	62d7c <blkid_probe_get_size@plt+0x5b864>
   1f990:	subs	r6, r0, #0
   1f994:	bge	1fb18 <blkid_probe_get_size@plt+0x18600>
   1f998:	cmn	r6, #2
   1f99c:	mov	r3, #0
   1f9a0:	movne	r7, #3
   1f9a4:	moveq	r7, #7
   1f9a8:	cmp	r5, r3
   1f9ac:	str	r3, [fp, #-44]	; 0xffffffd4
   1f9b0:	beq	1ff0c <blkid_probe_get_size@plt+0x189f4>
   1f9b4:	ldr	r2, [pc, #1984]	; 2017c <blkid_probe_get_size@plt+0x18c64>
   1f9b8:	add	r2, pc, r2
   1f9bc:	ldr	r2, [r2, #4]
   1f9c0:	cmp	r7, r2
   1f9c4:	movgt	r5, r3
   1f9c8:	movgt	r1, r5
   1f9cc:	ble	20010 <blkid_probe_get_size@plt+0x18af8>
   1f9d0:	ldr	r2, [pc, #1960]	; 20180 <blkid_probe_get_size@plt+0x18c68>
   1f9d4:	ldr	r3, [pc, #1960]	; 20184 <blkid_probe_get_size@plt+0x18c6c>
   1f9d8:	add	r2, pc, r2
   1f9dc:	str	r2, [sp, #20]
   1f9e0:	add	r3, pc, r3
   1f9e4:	ldr	r2, [pc, #1948]	; 20188 <blkid_probe_get_size@plt+0x18c70>
   1f9e8:	mov	ip, #0
   1f9ec:	add	r3, r3, #960	; 0x3c0
   1f9f0:	str	r1, [sp, #4]
   1f9f4:	str	r3, [sp]
   1f9f8:	cmp	r8, ip
   1f9fc:	str	r5, [sp, #8]
   1fa00:	mov	r0, r7
   1fa04:	mov	r1, r6
   1fa08:	str	ip, [sp, #16]
   1fa0c:	str	ip, [sp, #12]
   1fa10:	mov	r3, #67	; 0x43
   1fa14:	add	r2, pc, r2
   1fa18:	moveq	r8, r6
   1fa1c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1fa20:	b	1fb18 <blkid_probe_get_size@plt+0x18600>
   1fa24:	ldr	r1, [pc, #1888]	; 2018c <blkid_probe_get_size@plt+0x18c74>
   1fa28:	sub	r2, fp, #68	; 0x44
   1fa2c:	add	r1, pc, r1
   1fa30:	mov	r0, r5
   1fa34:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   1fa38:	cmp	r0, #0
   1fa3c:	blt	1fb34 <blkid_probe_get_size@plt+0x1861c>
   1fa40:	ldr	r6, [fp, #-68]	; 0xffffffbc
   1fa44:	str	r7, [fp, #-60]	; 0xffffffc4
   1fa48:	cmp	r6, #0
   1fa4c:	str	r7, [fp, #-56]	; 0xffffffc8
   1fa50:	beq	1fb58 <blkid_probe_get_size@plt+0x18640>
   1fa54:	mov	r0, r6
   1fa58:	bl	39ce8 <blkid_probe_get_size@plt+0x327d0>
   1fa5c:	cmp	r0, #0
   1fa60:	beq	1ff78 <blkid_probe_get_size@plt+0x18a60>
   1fa64:	ldr	r0, [pc, #1828]	; 20190 <blkid_probe_get_size@plt+0x18c78>
   1fa68:	mov	r1, r6
   1fa6c:	add	r0, pc, r0
   1fa70:	bl	39594 <blkid_probe_get_size@plt+0x3207c>
   1fa74:	mov	r7, r0
   1fa78:	cmp	r7, #0
   1fa7c:	beq	200c8 <blkid_probe_get_size@plt+0x18bb0>
   1fa80:	ldr	r3, [pc, #1804]	; 20194 <blkid_probe_get_size@plt+0x18c7c>
   1fa84:	ldr	r2, [pc, #1804]	; 20198 <blkid_probe_get_size@plt+0x18c80>
   1fa88:	add	r3, pc, r3
   1fa8c:	mov	r6, #0
   1fa90:	str	r3, [sp]
   1fa94:	sub	r3, fp, #56	; 0x38
   1fa98:	str	r3, [sp, #4]
   1fa9c:	str	r6, [sp, #8]
   1faa0:	mov	r0, r6
   1faa4:	sub	r3, fp, #60	; 0x3c
   1faa8:	add	r2, pc, r2
   1faac:	mov	r1, r7
   1fab0:	bl	4943c <blkid_probe_get_size@plt+0x41f24>
   1fab4:	cmn	r0, #2
   1fab8:	mov	r8, r0
   1fabc:	beq	1fe4c <blkid_probe_get_size@plt+0x18934>
   1fac0:	cmp	r0, r6
   1fac4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fac8:	blt	1fce8 <blkid_probe_get_size@plt+0x187d0>
   1facc:	cmp	r0, r6
   1fad0:	beq	1fe4c <blkid_probe_get_size@plt+0x18934>
   1fad4:	sub	r1, fp, #48	; 0x30
   1fad8:	bl	41270 <blkid_probe_get_size@plt+0x39d58>
   1fadc:	subs	r8, r0, #0
   1fae0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fae4:	blt	1fce8 <blkid_probe_get_size@plt+0x187d0>
   1fae8:	bl	69f0 <free@plt>
   1faec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1faf0:	bl	69f0 <free@plt>
   1faf4:	mov	r0, r7
   1faf8:	bl	69f0 <free@plt>
   1fafc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fb00:	mov	r1, #1
   1fb04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1fb08:	bl	62d7c <blkid_probe_get_size@plt+0x5b864>
   1fb0c:	subs	r8, r0, #0
   1fb10:	blt	1fe78 <blkid_probe_get_size@plt+0x18960>
   1fb14:	mov	r8, #0
   1fb18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fb1c:	ldr	r3, [r4]
   1fb20:	mov	r0, r8
   1fb24:	cmp	r2, r3
   1fb28:	bne	200fc <blkid_probe_get_size@plt+0x18be4>
   1fb2c:	sub	sp, fp, #32
   1fb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb34:	ldr	r6, [pc, #1632]	; 2019c <blkid_probe_get_size@plt+0x18c84>
   1fb38:	str	r7, [fp, #-60]	; 0xffffffc4
   1fb3c:	add	r6, pc, r6
   1fb40:	str	r7, [fp, #-56]	; 0xffffffc8
   1fb44:	str	r6, [fp, #-68]	; 0xffffffbc
   1fb48:	b	1fa54 <blkid_probe_get_size@plt+0x1853c>
   1fb4c:	mov	r7, r5
   1fb50:	mov	r0, r5
   1fb54:	b	1f934 <blkid_probe_get_size@plt+0x1841c>
   1fb58:	sub	r1, fp, #36	; 0x24
   1fb5c:	mov	r0, r6
   1fb60:	str	r6, [r1, #-12]!
   1fb64:	str	r6, [fp, #-52]	; 0xffffffcc
   1fb68:	bl	630e8 <blkid_probe_get_size@plt+0x5bbd0>
   1fb6c:	subs	r8, r0, #0
   1fb70:	blt	1ff40 <blkid_probe_get_size@plt+0x18a28>
   1fb74:	ldr	r7, [fp, #-48]	; 0xffffffd0
   1fb78:	str	r6, [fp, #-44]	; 0xffffffd4
   1fb7c:	cmp	r7, #0
   1fb80:	beq	200d0 <blkid_probe_get_size@plt+0x18bb8>
   1fb84:	sub	sl, fp, #44	; 0x2c
   1fb88:	mov	r0, sl
   1fb8c:	bl	2eb50 <blkid_probe_get_size@plt+0x27638>
   1fb90:	subs	r8, r0, #0
   1fb94:	blt	1ff38 <blkid_probe_get_size@plt+0x18a20>
   1fb98:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1fb9c:	mov	r0, r7
   1fba0:	mov	r1, r6
   1fba4:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   1fba8:	cmp	r0, #0
   1fbac:	cmpne	r7, r0
   1fbb0:	mov	r3, r0
   1fbb4:	mov	r0, r6
   1fbb8:	bcc	20058 <blkid_probe_get_size@plt+0x18b40>
   1fbbc:	bl	69f0 <free@plt>
   1fbc0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1fbc4:	cmp	r7, r6
   1fbc8:	beq	1fbe8 <blkid_probe_get_size@plt+0x186d0>
   1fbcc:	mov	r0, r7
   1fbd0:	bl	74e8 <strdup@plt>
   1fbd4:	subs	r7, r0, #0
   1fbd8:	mov	r0, r6
   1fbdc:	beq	20128 <blkid_probe_get_size@plt+0x18c10>
   1fbe0:	bl	69f0 <free@plt>
   1fbe4:	mov	r6, r7
   1fbe8:	ldr	r9, [pc, #1456]	; 201a0 <blkid_probe_get_size@plt+0x18c88>
   1fbec:	ldr	r3, [pc, #1456]	; 201a4 <blkid_probe_get_size@plt+0x18c8c>
   1fbf0:	add	r9, pc, r9
   1fbf4:	mov	r7, r6
   1fbf8:	add	r3, pc, r3
   1fbfc:	str	r3, [fp, #-76]	; 0xffffffb4
   1fc00:	mov	r1, r9
   1fc04:	mov	r0, r7
   1fc08:	bl	6c9c <strspn@plt>
   1fc0c:	mov	r1, r9
   1fc10:	add	r7, r7, r0
   1fc14:	mov	r0, r7
   1fc18:	bl	6a8c <strcspn@plt>
   1fc1c:	cmp	r0, #6
   1fc20:	mov	r8, r0
   1fc24:	bls	1fc48 <blkid_probe_get_size@plt+0x18730>
   1fc28:	sub	r0, r0, #6
   1fc2c:	add	r0, r7, r0
   1fc30:	mov	r2, #6
   1fc34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1fc38:	bl	7398 <memcmp@plt>
   1fc3c:	subs	r3, r0, #0
   1fc40:	str	r3, [fp, #-72]	; 0xffffffb8
   1fc44:	beq	1ff90 <blkid_probe_get_size@plt+0x18a78>
   1fc48:	mov	r1, sl
   1fc4c:	mov	r0, r7
   1fc50:	bl	2ea30 <blkid_probe_get_size@plt+0x27518>
   1fc54:	subs	r8, r0, #0
   1fc58:	blt	1ff48 <blkid_probe_get_size@plt+0x18a30>
   1fc5c:	ldr	r8, [fp, #-44]	; 0xffffffd4
   1fc60:	ldr	r1, [pc, #1344]	; 201a8 <blkid_probe_get_size@plt+0x18c90>
   1fc64:	mov	r0, r8
   1fc68:	add	r1, pc, r1
   1fc6c:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   1fc70:	subs	r7, r0, #0
   1fc74:	bne	1fcb4 <blkid_probe_get_size@plt+0x1879c>
   1fc78:	ldr	r1, [pc, #1324]	; 201ac <blkid_probe_get_size@plt+0x18c94>
   1fc7c:	mov	r0, r8
   1fc80:	add	r1, pc, r1
   1fc84:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   1fc88:	subs	r9, r0, #0
   1fc8c:	beq	20144 <blkid_probe_get_size@plt+0x18c2c>
   1fc90:	ldr	r1, [pc, #1304]	; 201b0 <blkid_probe_get_size@plt+0x18c98>
   1fc94:	add	r1, pc, r1
   1fc98:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   1fc9c:	subs	sl, r0, #0
   1fca0:	beq	1fcb4 <blkid_probe_get_size@plt+0x1879c>
   1fca4:	strb	r7, [sl]
   1fca8:	ldrb	r3, [r9]
   1fcac:	cmp	r3, #0
   1fcb0:	bne	1fd94 <blkid_probe_get_size@plt+0x1887c>
   1fcb4:	mov	r0, r8
   1fcb8:	bl	69f0 <free@plt>
   1fcbc:	mov	r0, r6
   1fcc0:	bl	69f0 <free@plt>
   1fcc4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1fcc8:	mov	r9, #0
   1fccc:	mvn	r8, #60	; 0x3c
   1fcd0:	mov	r0, r6
   1fcd4:	bl	69f0 <free@plt>
   1fcd8:	mov	r0, r9
   1fcdc:	bl	69f0 <free@plt>
   1fce0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fce4:	mov	r7, #0
   1fce8:	bl	69f0 <free@plt>
   1fcec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1fcf0:	bl	69f0 <free@plt>
   1fcf4:	mov	r0, r7
   1fcf8:	bl	69f0 <free@plt>
   1fcfc:	cmn	r8, #61	; 0x3d
   1fd00:	beq	1fe64 <blkid_probe_get_size@plt+0x1894c>
   1fd04:	cmn	r8, #6
   1fd08:	beq	1fe64 <blkid_probe_get_size@plt+0x1894c>
   1fd0c:	mov	r2, #0
   1fd10:	cmp	r5, #0
   1fd14:	str	r2, [fp, #-44]	; 0xffffffd4
   1fd18:	beq	1ff00 <blkid_probe_get_size@plt+0x189e8>
   1fd1c:	ldr	r3, [pc, #1168]	; 201b4 <blkid_probe_get_size@plt+0x18c9c>
   1fd20:	add	r3, pc, r3
   1fd24:	ldr	r3, [r3, #4]
   1fd28:	cmp	r3, #2
   1fd2c:	bgt	1ffec <blkid_probe_get_size@plt+0x18ad4>
   1fd30:	mov	ip, r2
   1fd34:	ldr	r3, [pc, #1148]	; 201b8 <blkid_probe_get_size@plt+0x18ca0>
   1fd38:	ldr	r1, [pc, #1148]	; 201bc <blkid_probe_get_size@plt+0x18ca4>
   1fd3c:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1fd40:	add	r3, pc, r3
   1fd44:	str	r2, [sp, #8]
   1fd48:	ldr	r2, [pc, #1136]	; 201c0 <blkid_probe_get_size@plt+0x18ca8>
   1fd4c:	mov	r0, #0
   1fd50:	add	r1, pc, r1
   1fd54:	add	r3, r3, #960	; 0x3c0
   1fd58:	str	r3, [sp]
   1fd5c:	str	r1, [sp, #20]
   1fd60:	str	r0, [sp, #16]
   1fd64:	str	r0, [sp, #12]
   1fd68:	str	lr, [sp, #24]
   1fd6c:	str	ip, [sp, #4]
   1fd70:	mov	r3, #46	; 0x2e
   1fd74:	add	r2, pc, r2
   1fd78:	mov	r1, r8
   1fd7c:	mov	r0, #3
   1fd80:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1fd84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1fd88:	cmp	r0, #0
   1fd8c:	bne	1f984 <blkid_probe_get_size@plt+0x1846c>
   1fd90:	b	1fb18 <blkid_probe_get_size@plt+0x18600>
   1fd94:	ldr	r1, [pc, #1064]	; 201c4 <blkid_probe_get_size@plt+0x18cac>
   1fd98:	mov	r0, r9
   1fd9c:	add	r1, pc, r1
   1fda0:	bl	6c9c <strspn@plt>
   1fda4:	ldrb	r3, [r9, r0]
   1fda8:	cmp	r3, #0
   1fdac:	bne	1fcb4 <blkid_probe_get_size@plt+0x1879c>
   1fdb0:	mov	r0, r9
   1fdb4:	bl	74e8 <strdup@plt>
   1fdb8:	subs	sl, r0, #0
   1fdbc:	mov	r0, r8
   1fdc0:	beq	20120 <blkid_probe_get_size@plt+0x18c08>
   1fdc4:	bl	69f0 <free@plt>
   1fdc8:	mov	r0, r6
   1fdcc:	bl	69f0 <free@plt>
   1fdd0:	ldr	r0, [pc, #1008]	; 201c8 <blkid_probe_get_size@plt+0x18cb0>
   1fdd4:	mov	r1, sl
   1fdd8:	add	r0, pc, r0
   1fddc:	bl	39594 <blkid_probe_get_size@plt+0x3207c>
   1fde0:	mov	r9, r0
   1fde4:	mov	r0, sl
   1fde8:	bl	69f0 <free@plt>
   1fdec:	cmp	r9, #0
   1fdf0:	beq	20114 <blkid_probe_get_size@plt+0x18bfc>
   1fdf4:	ldr	r2, [pc, #976]	; 201cc <blkid_probe_get_size@plt+0x18cb4>
   1fdf8:	str	r7, [sp]
   1fdfc:	sub	r3, fp, #52	; 0x34
   1fe00:	add	r2, pc, r2
   1fe04:	mov	r1, r9
   1fe08:	mov	r0, r7
   1fe0c:	bl	4943c <blkid_probe_get_size@plt+0x41f24>
   1fe10:	cmn	r0, #2
   1fe14:	mov	r8, r0
   1fe18:	beq	20100 <blkid_probe_get_size@plt+0x18be8>
   1fe1c:	cmp	r0, #0
   1fe20:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1fe24:	blt	1fcd0 <blkid_probe_get_size@plt+0x187b8>
   1fe28:	cmp	r6, #0
   1fe2c:	beq	1fe3c <blkid_probe_get_size@plt+0x18924>
   1fe30:	ldrb	r3, [r6]
   1fe34:	cmp	r3, #0
   1fe38:	bne	200a0 <blkid_probe_get_size@plt+0x18b88>
   1fe3c:	mov	r0, r6
   1fe40:	bl	69f0 <free@plt>
   1fe44:	mov	r0, r9
   1fe48:	bl	69f0 <free@plt>
   1fe4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fe50:	bl	69f0 <free@plt>
   1fe54:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1fe58:	bl	69f0 <free@plt>
   1fe5c:	mov	r0, r7
   1fe60:	bl	69f0 <free@plt>
   1fe64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1fe68:	cmp	r0, #0
   1fe6c:	beq	1fb14 <blkid_probe_get_size@plt+0x185fc>
   1fe70:	mov	r8, #0
   1fe74:	b	1f984 <blkid_probe_get_size@plt+0x1846c>
   1fe78:	cmn	r8, #2
   1fe7c:	movne	r7, #3
   1fe80:	moveq	r7, #7
   1fe84:	cmp	r5, #0
   1fe88:	str	r6, [fp, #-44]	; 0xffffffd4
   1fe8c:	beq	1ff6c <blkid_probe_get_size@plt+0x18a54>
   1fe90:	ldr	r3, [pc, #824]	; 201d0 <blkid_probe_get_size@plt+0x18cb8>
   1fe94:	add	r3, pc, r3
   1fe98:	ldr	r3, [r3, #4]
   1fe9c:	cmp	r7, r3
   1fea0:	ble	20034 <blkid_probe_get_size@plt+0x18b1c>
   1fea4:	mov	r0, r6
   1fea8:	ldr	r2, [pc, #804]	; 201d4 <blkid_probe_get_size@plt+0x18cbc>
   1feac:	ldr	r3, [pc, #804]	; 201d8 <blkid_probe_get_size@plt+0x18cc0>
   1feb0:	add	r2, pc, r2
   1feb4:	str	r2, [sp, #20]
   1feb8:	add	r3, pc, r3
   1febc:	ldr	r2, [pc, #792]	; 201dc <blkid_probe_get_size@plt+0x18cc4>
   1fec0:	mov	r1, #0
   1fec4:	add	r3, r3, #960	; 0x3c0
   1fec8:	str	r0, [sp, #4]
   1fecc:	str	r3, [sp]
   1fed0:	str	r1, [sp, #16]
   1fed4:	str	r1, [sp, #12]
   1fed8:	str	r6, [sp, #8]
   1fedc:	mov	r0, r7
   1fee0:	mov	r3, #53	; 0x35
   1fee4:	add	r2, pc, r2
   1fee8:	mov	r1, r8
   1feec:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   1fef0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1fef4:	cmp	r0, #0
   1fef8:	bne	1f984 <blkid_probe_get_size@plt+0x1846c>
   1fefc:	b	1fb18 <blkid_probe_get_size@plt+0x18600>
   1ff00:	mov	r2, r5
   1ff04:	mov	ip, r5
   1ff08:	b	1fd34 <blkid_probe_get_size@plt+0x1881c>
   1ff0c:	mov	r1, r5
   1ff10:	b	1f9d0 <blkid_probe_get_size@plt+0x184b8>
   1ff14:	sub	r1, fp, #44	; 0x2c
   1ff18:	mov	r0, r5
   1ff1c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1ff20:	ldr	r7, [fp, #-44]	; 0xffffffd4
   1ff24:	cmp	r7, #0
   1ff28:	beq	1f930 <blkid_probe_get_size@plt+0x18418>
   1ff2c:	ldr	r0, [pc, #684]	; 201e0 <blkid_probe_get_size@plt+0x18cc8>
   1ff30:	add	r0, pc, r0
   1ff34:	b	1f934 <blkid_probe_get_size@plt+0x1841c>
   1ff38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ff3c:	bl	69f0 <free@plt>
   1ff40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ff44:	bl	69f0 <free@plt>
   1ff48:	mov	r0, r6
   1ff4c:	bl	69f0 <free@plt>
   1ff50:	cmn	r8, #123	; 0x7b
   1ff54:	beq	20134 <blkid_probe_get_size@plt+0x18c1c>
   1ff58:	cmn	r8, #6
   1ff5c:	beq	20134 <blkid_probe_get_size@plt+0x18c1c>
   1ff60:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1ff64:	mov	r9, #0
   1ff68:	b	1fcd0 <blkid_probe_get_size@plt+0x187b8>
   1ff6c:	mov	r6, r5
   1ff70:	mov	r0, r5
   1ff74:	b	1fea8 <blkid_probe_get_size@plt+0x18990>
   1ff78:	mvn	r8, #21
   1ff7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ff80:	bl	69f0 <free@plt>
   1ff84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ff88:	bl	69f0 <free@plt>
   1ff8c:	b	1fd0c <blkid_probe_get_size@plt+0x187f4>
   1ff90:	add	r3, r8, #8
   1ff94:	bic	r3, r3, #7
   1ff98:	str	sp, [fp, #-80]	; 0xffffffb0
   1ff9c:	sub	sp, sp, r3
   1ffa0:	add	r3, sp, #32
   1ffa4:	mov	r0, r3
   1ffa8:	mov	r2, r8
   1ffac:	mov	r1, r7
   1ffb0:	bl	71e8 <memcpy@plt>
   1ffb4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ffb8:	mov	r1, #1
   1ffbc:	strb	r2, [r0, r8]
   1ffc0:	ldrb	r2, [sp, #32]
   1ffc4:	mov	r3, r0
   1ffc8:	cmp	r2, #95	; 0x5f
   1ffcc:	addeq	r3, sp, #33	; 0x21
   1ffd0:	mov	r0, r3
   1ffd4:	bl	3c664 <blkid_probe_get_size@plt+0x3514c>
   1ffd8:	ldr	sp, [fp, #-80]	; 0xffffffb0
   1ffdc:	cmp	r0, #0
   1ffe0:	beq	1fc48 <blkid_probe_get_size@plt+0x18730>
   1ffe4:	add	r7, r7, r8
   1ffe8:	b	1fc00 <blkid_probe_get_size@plt+0x186e8>
   1ffec:	sub	r1, fp, #44	; 0x2c
   1fff0:	mov	r0, r5
   1fff4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   1fff8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fffc:	cmp	r2, #0
   20000:	beq	1fd30 <blkid_probe_get_size@plt+0x18818>
   20004:	ldr	ip, [pc, #472]	; 201e4 <blkid_probe_get_size@plt+0x18ccc>
   20008:	add	ip, pc, ip
   2000c:	b	1fd34 <blkid_probe_get_size@plt+0x1881c>
   20010:	mov	r0, r5
   20014:	sub	r1, fp, #44	; 0x2c
   20018:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   2001c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   20020:	cmp	r5, #0
   20024:	beq	1ff0c <blkid_probe_get_size@plt+0x189f4>
   20028:	ldr	r1, [pc, #440]	; 201e8 <blkid_probe_get_size@plt+0x18cd0>
   2002c:	add	r1, pc, r1
   20030:	b	1f9d0 <blkid_probe_get_size@plt+0x184b8>
   20034:	sub	r1, fp, #44	; 0x2c
   20038:	mov	r0, r5
   2003c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20040:	ldr	r6, [fp, #-44]	; 0xffffffd4
   20044:	cmp	r6, #0
   20048:	beq	1fea4 <blkid_probe_get_size@plt+0x1898c>
   2004c:	ldr	r0, [pc, #408]	; 201ec <blkid_probe_get_size@plt+0x18cd4>
   20050:	add	r0, pc, r0
   20054:	b	1fea8 <blkid_probe_get_size@plt+0x18990>
   20058:	sub	r7, r3, #1
   2005c:	bl	69f0 <free@plt>
   20060:	ldr	r6, [fp, #-48]	; 0xffffffd0
   20064:	cmp	r6, r7
   20068:	bne	1fbcc <blkid_probe_get_size@plt+0x186b4>
   2006c:	cmp	r6, #0
   20070:	bne	1fbe8 <blkid_probe_get_size@plt+0x186d0>
   20074:	ldr	r2, [pc, #372]	; 201f0 <blkid_probe_get_size@plt+0x18cd8>
   20078:	ldr	r1, [pc, #372]	; 201f4 <blkid_probe_get_size@plt+0x18cdc>
   2007c:	add	r2, pc, r2
   20080:	add	r2, r2, #992	; 0x3e0
   20084:	str	r2, [sp]
   20088:	ldr	r2, [pc, #360]	; 201f8 <blkid_probe_get_size@plt+0x18ce0>
   2008c:	ldr	r3, [pc, #360]	; 201fc <blkid_probe_get_size@plt+0x18ce4>
   20090:	add	r2, pc, r2
   20094:	add	r1, pc, r1
   20098:	mov	r0, #0
   2009c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   200a0:	mov	r0, r9
   200a4:	bl	69f0 <free@plt>
   200a8:	ldr	r0, [pc, #336]	; 20200 <blkid_probe_get_size@plt+0x18ce8>
   200ac:	mov	r1, r6
   200b0:	add	r0, pc, r0
   200b4:	bl	39594 <blkid_probe_get_size@plt+0x3207c>
   200b8:	mov	r7, r0
   200bc:	mov	r0, r6
   200c0:	bl	69f0 <free@plt>
   200c4:	b	1fa78 <blkid_probe_get_size@plt+0x18560>
   200c8:	mvn	r8, #11
   200cc:	b	1ff7c <blkid_probe_get_size@plt+0x18a64>
   200d0:	ldr	r3, [pc, #300]	; 20204 <blkid_probe_get_size@plt+0x18cec>
   200d4:	ldr	r2, [pc, #300]	; 20208 <blkid_probe_get_size@plt+0x18cf0>
   200d8:	add	r3, pc, r3
   200dc:	ldr	r1, [pc, #296]	; 2020c <blkid_probe_get_size@plt+0x18cf4>
   200e0:	add	r3, r3, #976	; 0x3d0
   200e4:	str	r3, [sp]
   200e8:	mov	r0, r7
   200ec:	ldr	r3, [pc, #284]	; 20210 <blkid_probe_get_size@plt+0x18cf8>
   200f0:	add	r2, pc, r2
   200f4:	add	r1, pc, r1
   200f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   200fc:	bl	6fb4 <__stack_chk_fail@plt>
   20100:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20104:	bl	69f0 <free@plt>
   20108:	mov	r0, r9
   2010c:	bl	69f0 <free@plt>
   20110:	b	1fe4c <blkid_probe_get_size@plt+0x18934>
   20114:	ldr	r6, [fp, #-52]	; 0xffffffcc
   20118:	mvn	r8, #11
   2011c:	b	1fcd0 <blkid_probe_get_size@plt+0x187b8>
   20120:	bl	69f0 <free@plt>
   20124:	mov	r0, r6
   20128:	bl	69f0 <free@plt>
   2012c:	mvn	r8, #11
   20130:	b	1ff60 <blkid_probe_get_size@plt+0x18a48>
   20134:	ldr	r6, [fp, #-52]	; 0xffffffcc
   20138:	mov	r9, #0
   2013c:	mvn	r8, #60	; 0x3c
   20140:	b	1fcd0 <blkid_probe_get_size@plt+0x187b8>
   20144:	mov	r0, r8
   20148:	bl	69f0 <free@plt>
   2014c:	mov	r0, r6
   20150:	bl	69f0 <free@plt>
   20154:	mvn	r8, #60	; 0x3c
   20158:	ldr	r6, [fp, #-52]	; 0xffffffcc
   2015c:	b	1fcd0 <blkid_probe_get_size@plt+0x187b8>
   20160:			; <UNDEFINED> instruction: 0x000782b4
   20164:	andeq	r0, r0, ip, lsr r4
   20168:	muleq	r4, r8, sp
   2016c:	andeq	r8, r7, ip, lsl r8
   20170:	andeq	sl, r4, r0, lsl #27
   20174:	andeq	r9, r4, r4, asr #25
   20178:	andeq	sl, r4, r0, lsr sp
   2017c:	andeq	r8, r7, r4, lsl #15
   20180:			; <UNDEFINED> instruction: 0x0004adb0
   20184:	andeq	r9, r4, r8, lsr #24
   20188:	andeq	sl, r4, r4, lsl #25
   2018c:			; <UNDEFINED> instruction: 0x0004acb0
   20190:	andeq	sl, r4, r8, lsl ip
   20194:	andeq	sl, r4, r4, asr #25
   20198:	muleq	r4, ip, ip
   2019c:	andeq	sl, r4, r0, asr #22
   201a0:	ldrdeq	r8, [r5], -r0
   201a4:	andeq	sl, r4, r0, lsl fp
   201a8:	andeq	sl, r4, r0, lsr #21
   201ac:	muleq	r4, r0, sl
   201b0:	andeq	sl, r4, r8, lsl #21
   201b4:	andeq	r8, r7, ip, lsl r4
   201b8:	andeq	r9, r4, r8, asr #17
   201bc:	andeq	sl, r4, r8, lsl #20
   201c0:	andeq	sl, r4, r4, lsr #18
   201c4:	andeq	sl, r4, r4, lsl #20
   201c8:	andeq	sl, r4, ip, asr #18
   201cc:	andeq	sl, r4, ip, lsr r9
   201d0:	andeq	r8, r7, r8, lsr #5
   201d4:	ldrdeq	sl, [r4], -r8
   201d8:	andeq	r9, r4, r0, asr r7
   201dc:			; <UNDEFINED> instruction: 0x0004a7b4
   201e0:	andeq	r5, r4, r8
   201e4:	andeq	r4, r4, r0, lsr pc
   201e8:	andeq	r4, r4, ip, lsl #30
   201ec:	andeq	r4, r4, r8, ror #29
   201f0:	andeq	r9, r4, ip, lsl #11
   201f4:	andeq	fp, r4, r0, lsl #5
   201f8:	andeq	sl, r4, r4, asr r6
   201fc:	muleq	r0, r8, r6
   20200:	ldrdeq	sl, [r4], -r4
   20204:	andeq	r9, r4, r0, lsr r5
   20208:	strdeq	sl, [r4], -r4
   2020c:	andeq	sl, r4, ip, lsl #12
   20210:	andeq	r0, r0, r4, ror #10
   20214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20218:	sub	sp, sp, #684	; 0x2ac
   2021c:	ldr	sl, [pc, #3988]	; 211b8 <blkid_probe_get_size@plt+0x19ca0>
   20220:	ldr	ip, [pc, #3988]	; 211bc <blkid_probe_get_size@plt+0x19ca4>
   20224:	add	sl, pc, sl
   20228:	ldr	r5, [pc, #3984]	; 211c0 <blkid_probe_get_size@plt+0x19ca8>
   2022c:	ldr	ip, [sl, ip]
   20230:	ldr	r6, [pc, #3980]	; 211c4 <blkid_probe_get_size@plt+0x19cac>
   20234:	mov	lr, #0
   20238:	add	r5, pc, r5
   2023c:	str	r0, [sp, #84]	; 0x54
   20240:	mov	r7, r2
   20244:	ldr	r0, [ip]
   20248:	str	r3, [sp, #88]	; 0x58
   2024c:	mov	r2, #0
   20250:	mov	r3, #0
   20254:	mov	fp, lr
   20258:	mov	r8, r1
   2025c:	mov	r4, lr
   20260:	add	r5, r5, #992	; 0x3e0
   20264:	add	r6, pc, r6
   20268:	str	ip, [sp, #76]	; 0x4c
   2026c:	str	r0, [sp, #676]	; 0x2a4
   20270:	str	lr, [sp, #140]	; 0x8c
   20274:	strd	r2, [sp, #56]	; 0x38
   20278:	str	r4, [sp]
   2027c:	mov	r3, r5
   20280:	mov	r2, r6
   20284:	mov	r1, r7
   20288:	mov	r0, r8
   2028c:	bl	70a4 <getopt_long@plt>
   20290:	cmn	r0, #1
   20294:	beq	2044c <blkid_probe_get_size@plt+0x18f34>
   20298:	cmp	r0, #82	; 0x52
   2029c:	beq	2038c <blkid_probe_get_size@plt+0x18e74>
   202a0:	cmp	r0, #111	; 0x6f
   202a4:	bne	20278 <blkid_probe_get_size@plt+0x18d60>
   202a8:	ldr	r3, [pc, #3864]	; 211c8 <blkid_probe_get_size@plt+0x19cb0>
   202ac:	ldr	r3, [sl, r3]
   202b0:	str	r4, [sp, #152]	; 0x98
   202b4:	str	r3, [sp, #72]	; 0x48
   202b8:	ldr	r9, [r3]
   202bc:	cmp	r9, #0
   202c0:	beq	20534 <blkid_probe_get_size@plt+0x1901c>
   202c4:	bl	732c <__errno_location@plt>
   202c8:	add	r1, sp, #152	; 0x98
   202cc:	mov	r2, #0
   202d0:	str	r1, [sp, #80]	; 0x50
   202d4:	str	r4, [r0]
   202d8:	str	r0, [sp, #68]	; 0x44
   202dc:	mov	r0, r9
   202e0:	bl	6b64 <strtoll@plt>
   202e4:	ldr	r3, [sp, #68]	; 0x44
   202e8:	strd	r0, [sp, #56]	; 0x38
   202ec:	ldr	r1, [r3]
   202f0:	cmp	r1, #0
   202f4:	ble	20394 <blkid_probe_get_size@plt+0x18e7c>
   202f8:	rsb	r4, r1, #0
   202fc:	ldr	r3, [sp, #84]	; 0x54
   20300:	mov	r2, #0
   20304:	cmp	r3, #0
   20308:	str	r2, [sp, #152]	; 0x98
   2030c:	beq	206a8 <blkid_probe_get_size@plt+0x19190>
   20310:	ldr	r3, [pc, #3764]	; 211cc <blkid_probe_get_size@plt+0x19cb4>
   20314:	add	r3, pc, r3
   20318:	ldr	r3, [r3, #4]
   2031c:	cmp	r3, #2
   20320:	bgt	20c8c <blkid_probe_get_size@plt+0x19774>
   20324:	mov	r1, r2
   20328:	ldr	r0, [sp, #72]	; 0x48
   2032c:	ldr	r3, [pc, #3740]	; 211d0 <blkid_probe_get_size@plt+0x19cb8>
   20330:	ldr	r0, [r0]
   20334:	add	r3, pc, r3
   20338:	str	r0, [sp, #24]
   2033c:	ldr	r0, [pc, #3728]	; 211d4 <blkid_probe_get_size@plt+0x19cbc>
   20340:	add	r3, r3, #1024	; 0x400
   20344:	add	r0, pc, r0
   20348:	str	r2, [sp, #8]
   2034c:	str	r3, [sp]
   20350:	mov	r2, #0
   20354:	mov	r3, r0
   20358:	str	r2, [sp, #12]
   2035c:	strd	r2, [sp, #16]
   20360:	ldr	r2, [pc, #3696]	; 211d8 <blkid_probe_get_size@plt+0x19cc0>
   20364:	str	r1, [sp, #4]
   20368:	mov	r3, #241	; 0xf1
   2036c:	mov	r1, r4
   20370:	add	r2, pc, r2
   20374:	mov	r0, #3
   20378:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   2037c:	mov	r4, r0
   20380:	mvn	r0, #0
   20384:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   20388:	b	20514 <blkid_probe_get_size@plt+0x18ffc>
   2038c:	mov	fp, #1
   20390:	b	20278 <blkid_probe_get_size@plt+0x18d60>
   20394:	ldr	r3, [sp, #152]	; 0x98
   20398:	cmp	r3, #0
   2039c:	beq	20838 <blkid_probe_get_size@plt+0x19320>
   203a0:	cmp	r9, r3
   203a4:	beq	20838 <blkid_probe_get_size@plt+0x19320>
   203a8:	ldrb	r3, [r3]
   203ac:	cmp	r3, #0
   203b0:	bne	20838 <blkid_probe_get_size@plt+0x19320>
   203b4:	ldrd	r0, [sp, #56]	; 0x38
   203b8:	cmp	r0, #0
   203bc:	sbcs	r2, r1, #0
   203c0:	bge	20278 <blkid_probe_get_size@plt+0x18d60>
   203c4:	ldr	r2, [sp, #84]	; 0x54
   203c8:	str	r3, [sp, #152]	; 0x98
   203cc:	cmp	r2, #0
   203d0:	beq	203e8 <blkid_probe_get_size@plt+0x18ed0>
   203d4:	ldr	r3, [pc, #3584]	; 211dc <blkid_probe_get_size@plt+0x19cc4>
   203d8:	add	r3, pc, r3
   203dc:	ldr	r3, [r3, #4]
   203e0:	cmp	r3, #2
   203e4:	bgt	20cb0 <blkid_probe_get_size@plt+0x19798>
   203e8:	mov	r0, #0
   203ec:	mov	ip, r0
   203f0:	ldr	r3, [pc, #3560]	; 211e0 <blkid_probe_get_size@plt+0x19cc8>
   203f4:	ldr	r2, [pc, #3560]	; 211e4 <blkid_probe_get_size@plt+0x19ccc>
   203f8:	ldrd	r4, [sp, #56]	; 0x38
   203fc:	add	r2, pc, r2
   20400:	add	r3, pc, r3
   20404:	str	r2, [sp, #20]
   20408:	add	r3, r3, #1024	; 0x400
   2040c:	ldr	r2, [pc, #3540]	; 211e8 <blkid_probe_get_size@plt+0x19cd0>
   20410:	mov	r1, #0
   20414:	strd	r4, [sp, #24]
   20418:	str	r0, [sp, #8]
   2041c:	stm	sp, {r3, ip}
   20420:	str	r1, [sp, #16]
   20424:	str	r1, [sp, #12]
   20428:	mov	r3, #243	; 0xf3
   2042c:	add	r2, pc, r2
   20430:	mov	r1, #1073741858	; 0x40000022
   20434:	mov	r0, #3
   20438:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   2043c:	mov	r4, r0
   20440:	mvn	r0, #0
   20444:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   20448:	b	20514 <blkid_probe_get_size@plt+0x18ffc>
   2044c:	mov	r9, r0
   20450:	bl	732c <__errno_location@plt>
   20454:	str	r4, [r0]
   20458:	mov	r5, r0
   2045c:	bl	6a50 <blkid_new_probe@plt>
   20460:	subs	r8, r0, #0
   20464:	beq	20560 <blkid_probe_get_size@plt+0x19048>
   20468:	ldr	r1, [pc, #3452]	; 211ec <blkid_probe_get_size@plt+0x19cd4>
   2046c:	bl	7200 <blkid_probe_set_superblocks_flags@plt>
   20470:	cmp	fp, #0
   20474:	bne	20688 <blkid_probe_get_size@plt+0x19170>
   20478:	ldr	r6, [sp, #84]	; 0x54
   2047c:	add	r1, sp, #144	; 0x90
   20480:	mov	r0, r6
   20484:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   20488:	subs	r4, r0, #0
   2048c:	bge	205ec <blkid_probe_get_size@plt+0x190d4>
   20490:	mov	r2, #0
   20494:	cmp	r6, #0
   20498:	str	r2, [sp, #152]	; 0x98
   2049c:	beq	2082c <blkid_probe_get_size@plt+0x19314>
   204a0:	ldr	r3, [pc, #3400]	; 211f0 <blkid_probe_get_size@plt+0x19cd8>
   204a4:	add	r3, pc, r3
   204a8:	ldr	r3, [r3, #4]
   204ac:	cmp	r3, #6
   204b0:	bgt	20c4c <blkid_probe_get_size@plt+0x19734>
   204b4:	mov	r1, r2
   204b8:	ldr	r3, [pc, #3380]	; 211f4 <blkid_probe_get_size@plt+0x19cdc>
   204bc:	ldr	r0, [pc, #3380]	; 211f8 <blkid_probe_get_size@plt+0x19ce0>
   204c0:	add	r3, pc, r3
   204c4:	add	r0, pc, r0
   204c8:	add	r3, r3, #1024	; 0x400
   204cc:	str	r2, [sp, #8]
   204d0:	str	r3, [sp]
   204d4:	mov	r2, #0
   204d8:	mov	r3, r0
   204dc:	str	r2, [sp, #12]
   204e0:	strd	r2, [sp, #16]
   204e4:	ldr	r2, [pc, #3344]	; 211fc <blkid_probe_get_size@plt+0x19ce4>
   204e8:	str	r1, [sp, #4]
   204ec:	ldr	r3, [pc, #3340]	; 21200 <blkid_probe_get_size@plt+0x19ce8>
   204f0:	mov	r1, r4
   204f4:	add	r2, pc, r2
   204f8:	mov	r0, #7
   204fc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   20500:	mov	r4, r0
   20504:	mov	r0, r9
   20508:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2050c:	mov	r0, r8
   20510:	bl	6dd4 <blkid_free_probe@plt>
   20514:	ldr	r3, [sp, #76]	; 0x4c
   20518:	ldr	r2, [sp, #676]	; 0x2a4
   2051c:	mov	r0, r4
   20520:	ldr	r3, [r3]
   20524:	cmp	r2, r3
   20528:	bne	2116c <blkid_probe_get_size@plt+0x19c54>
   2052c:	add	sp, sp, #684	; 0x2ac
   20530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20534:	ldr	r3, [pc, #3272]	; 21204 <blkid_probe_get_size@plt+0x19cec>
   20538:	ldr	r2, [pc, #3272]	; 21208 <blkid_probe_get_size@plt+0x19cf0>
   2053c:	add	r3, pc, r3
   20540:	ldr	r1, [pc, #3268]	; 2120c <blkid_probe_get_size@plt+0x19cf4>
   20544:	add	r3, r3, #1012	; 0x3f4
   20548:	str	r3, [sp]
   2054c:	mov	r0, r9
   20550:	ldr	r3, [pc, #3256]	; 21210 <blkid_probe_get_size@plt+0x19cf8>
   20554:	add	r2, pc, r2
   20558:	add	r1, pc, r1
   2055c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   20560:	ldr	r4, [r5]
   20564:	ldr	r3, [sp, #84]	; 0x54
   20568:	cmp	r4, #0
   2056c:	movle	r4, #12
   20570:	cmp	r3, #0
   20574:	str	r8, [sp, #152]	; 0x98
   20578:	beq	2069c <blkid_probe_get_size@plt+0x19184>
   2057c:	ldr	r3, [pc, #3216]	; 21214 <blkid_probe_get_size@plt+0x19cfc>
   20580:	add	r3, pc, r3
   20584:	ldr	r3, [r3, #4]
   20588:	cmp	r3, #6
   2058c:	bgt	20bb4 <blkid_probe_get_size@plt+0x1969c>
   20590:	mov	r1, r8
   20594:	ldr	r2, [pc, #3196]	; 21218 <blkid_probe_get_size@plt+0x19d00>
   20598:	ldr	r3, [pc, #3196]	; 2121c <blkid_probe_get_size@plt+0x19d04>
   2059c:	add	r2, pc, r2
   205a0:	str	r2, [sp, #20]
   205a4:	add	r3, pc, r3
   205a8:	ldr	r2, [pc, #3184]	; 21220 <blkid_probe_get_size@plt+0x19d08>
   205ac:	mov	r0, #0
   205b0:	add	r3, r3, #1024	; 0x400
   205b4:	str	r1, [sp, #4]
   205b8:	str	r3, [sp]
   205bc:	mov	r1, r4
   205c0:	str	r0, [sp, #16]
   205c4:	str	r0, [sp, #12]
   205c8:	str	r8, [sp, #8]
   205cc:	mov	r3, #254	; 0xfe
   205d0:	add	r2, pc, r2
   205d4:	mov	r0, #7
   205d8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   205dc:	mov	r4, r0
   205e0:	mvn	r0, #0
   205e4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   205e8:	b	20514 <blkid_probe_get_size@plt+0x18ffc>
   205ec:	mov	r1, #524288	; 0x80000
   205f0:	ldr	r0, [sp, #144]	; 0x90
   205f4:	bl	6ec4 <open64@plt>
   205f8:	subs	r9, r0, #0
   205fc:	bge	206c0 <blkid_probe_get_size@plt+0x191a8>
   20600:	ldr	r3, [sp, #84]	; 0x54
   20604:	ldr	r4, [r5]
   20608:	cmp	r3, #0
   2060c:	mov	r3, #0
   20610:	str	r3, [sp, #152]	; 0x98
   20614:	beq	206b4 <blkid_probe_get_size@plt+0x1919c>
   20618:	ldr	r2, [pc, #3076]	; 21224 <blkid_probe_get_size@plt+0x19d0c>
   2061c:	add	r2, pc, r2
   20620:	ldr	r2, [r2, #4]
   20624:	cmp	r2, #6
   20628:	bgt	20db4 <blkid_probe_get_size@plt+0x1989c>
   2062c:	mov	r1, r3
   20630:	ldr	r2, [pc, #3056]	; 21228 <blkid_probe_get_size@plt+0x19d10>
   20634:	str	r3, [sp, #8]
   20638:	add	r2, pc, r2
   2063c:	add	r2, r2, #1024	; 0x400
   20640:	ldr	r3, [pc, #3044]	; 2122c <blkid_probe_get_size@plt+0x19d14>
   20644:	ldr	ip, [sp, #144]	; 0x90
   20648:	str	r2, [sp]
   2064c:	ldr	r2, [pc, #3036]	; 21230 <blkid_probe_get_size@plt+0x19d18>
   20650:	mov	r0, #0
   20654:	add	r3, pc, r3
   20658:	str	r1, [sp, #4]
   2065c:	str	r3, [sp, #20]
   20660:	mov	r1, r4
   20664:	str	r0, [sp, #16]
   20668:	str	r0, [sp, #12]
   2066c:	str	ip, [sp, #24]
   20670:	ldr	r3, [pc, #3004]	; 21234 <blkid_probe_get_size@plt+0x19d1c>
   20674:	add	r2, pc, r2
   20678:	mov	r0, #7
   2067c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   20680:	mov	r4, r0
   20684:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   20688:	mov	r2, #4
   2068c:	mov	r1, #1
   20690:	mov	r0, r8
   20694:	bl	7308 <blkid_probe_filter_superblocks_usage@plt>
   20698:	b	20478 <blkid_probe_get_size@plt+0x18f60>
   2069c:	ldr	r8, [sp, #84]	; 0x54
   206a0:	mov	r1, r8
   206a4:	b	20594 <blkid_probe_get_size@plt+0x1907c>
   206a8:	ldr	r2, [sp, #84]	; 0x54
   206ac:	mov	r1, r2
   206b0:	b	20328 <blkid_probe_get_size@plt+0x18e10>
   206b4:	ldr	r3, [sp, #84]	; 0x54
   206b8:	mov	r1, r3
   206bc:	b	20630 <blkid_probe_get_size@plt+0x19118>
   206c0:	mov	r0, #0
   206c4:	mov	r1, #0
   206c8:	mov	r4, #0
   206cc:	str	r4, [r5]
   206d0:	ldrd	r2, [sp, #56]	; 0x38
   206d4:	strd	r0, [sp]
   206d8:	mov	r1, r9
   206dc:	mov	r0, r8
   206e0:	bl	6a80 <blkid_probe_set_device@plt>
   206e4:	cmp	r0, r4
   206e8:	blt	20840 <blkid_probe_get_size@plt+0x19328>
   206ec:	ldr	r3, [sp, #84]	; 0x54
   206f0:	str	r4, [sp, #152]	; 0x98
   206f4:	cmp	r3, #0
   206f8:	beq	20c38 <blkid_probe_get_size@plt+0x19720>
   206fc:	ldr	r3, [pc, #2868]	; 21238 <blkid_probe_get_size@plt+0x19d20>
   20700:	add	r3, pc, r3
   20704:	ldr	r3, [r3, #4]
   20708:	cmp	r3, #6
   2070c:	addle	r3, sp, #152	; 0x98
   20710:	movle	r2, r4
   20714:	strle	r3, [sp, #80]	; 0x50
   20718:	bgt	21020 <blkid_probe_get_size@plt+0x19b08>
   2071c:	cmp	fp, #0
   20720:	ldr	r0, [sp, #144]	; 0x90
   20724:	beq	208c4 <blkid_probe_get_size@plt+0x193ac>
   20728:	ldr	ip, [pc, #2828]	; 2123c <blkid_probe_get_size@plt+0x19d24>
   2072c:	add	ip, pc, ip
   20730:	ldr	r3, [pc, #2824]	; 21240 <blkid_probe_get_size@plt+0x19d28>
   20734:	ldrd	r6, [sp, #56]	; 0x38
   20738:	ldr	lr, [pc, #2820]	; 21244 <blkid_probe_get_size@plt+0x19d2c>
   2073c:	stmib	sp, {r2, r4}
   20740:	add	r3, pc, r3
   20744:	ldr	r2, [pc, #2812]	; 21248 <blkid_probe_get_size@plt+0x19d30>
   20748:	mov	r1, #0
   2074c:	add	lr, pc, lr
   20750:	add	r3, r3, #1024	; 0x400
   20754:	str	ip, [sp, #28]
   20758:	str	lr, [sp, #20]
   2075c:	str	r1, [sp, #16]
   20760:	str	r1, [sp, #12]
   20764:	add	r2, pc, r2
   20768:	str	r0, [sp, #24]
   2076c:	str	r3, [sp]
   20770:	strd	r6, [sp, #32]
   20774:	ldr	r3, [pc, #2768]	; 2124c <blkid_probe_get_size@plt+0x19d34>
   20778:	mov	r0, #7
   2077c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   20780:	mov	r0, r8
   20784:	bl	7194 <blkid_probe_get_fd@plt>
   20788:	ldr	r2, [sp, #80]	; 0x50
   2078c:	mov	r1, r0
   20790:	mov	r0, #3
   20794:	bl	6c90 <__fxstat64@plt>
   20798:	subs	r4, r0, #0
   2079c:	beq	20bd8 <blkid_probe_get_size@plt+0x196c0>
   207a0:	ldr	r6, [r5]
   207a4:	rsb	r6, r6, #0
   207a8:	cmp	r6, #0
   207ac:	bge	2091c <blkid_probe_get_size@plt+0x19404>
   207b0:	ldr	r3, [sp, #84]	; 0x54
   207b4:	cmp	r3, #0
   207b8:	mov	r3, #0
   207bc:	str	r3, [sp, #152]	; 0x98
   207c0:	beq	20d20 <blkid_probe_get_size@plt+0x19808>
   207c4:	ldr	r2, [pc, #2692]	; 21250 <blkid_probe_get_size@plt+0x19d38>
   207c8:	add	r2, pc, r2
   207cc:	ldr	r2, [r2, #4]
   207d0:	cmp	r2, #6
   207d4:	bgt	21194 <blkid_probe_get_size@plt+0x19c7c>
   207d8:	mov	r1, r3
   207dc:	ldr	r2, [pc, #2672]	; 21254 <blkid_probe_get_size@plt+0x19d3c>
   207e0:	ldr	r0, [pc, #2672]	; 21258 <blkid_probe_get_size@plt+0x19d40>
   207e4:	add	r2, pc, r2
   207e8:	add	r2, r2, #1024	; 0x400
   207ec:	str	r2, [sp]
   207f0:	ldr	r2, [pc, #2660]	; 2125c <blkid_probe_get_size@plt+0x19d44>
   207f4:	mov	ip, #0
   207f8:	add	r0, pc, r0
   207fc:	str	r3, [sp, #8]
   20800:	str	r1, [sp, #4]
   20804:	str	r0, [sp, #20]
   20808:	mov	r1, r6
   2080c:	str	ip, [sp, #16]
   20810:	str	ip, [sp, #12]
   20814:	ldr	r3, [pc, #2628]	; 21260 <blkid_probe_get_size@plt+0x19d48>
   20818:	add	r2, pc, r2
   2081c:	mov	r0, #7
   20820:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   20824:	mov	r4, r0
   20828:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   2082c:	ldr	r2, [sp, #84]	; 0x54
   20830:	mov	r1, r2
   20834:	b	204b8 <blkid_probe_get_size@plt+0x18fa0>
   20838:	mvn	r4, #21
   2083c:	b	202fc <blkid_probe_get_size@plt+0x18de4>
   20840:	ldr	r5, [r5]
   20844:	ldr	r3, [sp, #84]	; 0x54
   20848:	cmp	r5, r4
   2084c:	movle	r5, #12
   20850:	cmp	r3, r4
   20854:	str	r4, [sp, #152]	; 0x98
   20858:	beq	20d14 <blkid_probe_get_size@plt+0x197fc>
   2085c:	ldr	r3, [pc, #2560]	; 21264 <blkid_probe_get_size@plt+0x19d4c>
   20860:	add	r3, pc, r3
   20864:	ldr	r3, [r3, #4]
   20868:	cmp	r3, #6
   2086c:	bgt	21170 <blkid_probe_get_size@plt+0x19c58>
   20870:	mov	r1, r4
   20874:	ldr	r2, [pc, #2540]	; 21268 <blkid_probe_get_size@plt+0x19d50>
   20878:	ldr	r3, [pc, #2540]	; 2126c <blkid_probe_get_size@plt+0x19d54>
   2087c:	add	r2, pc, r2
   20880:	str	r2, [sp, #20]
   20884:	add	r3, pc, r3
   20888:	ldr	r2, [pc, #2528]	; 21270 <blkid_probe_get_size@plt+0x19d58>
   2088c:	mov	r0, #0
   20890:	add	r3, r3, #1024	; 0x400
   20894:	str	r4, [sp, #8]
   20898:	str	r1, [sp, #4]
   2089c:	str	r3, [sp]
   208a0:	str	r0, [sp, #16]
   208a4:	str	r0, [sp, #12]
   208a8:	mov	r1, r5
   208ac:	ldr	r3, [pc, #2496]	; 21274 <blkid_probe_get_size@plt+0x19d5c>
   208b0:	add	r2, pc, r2
   208b4:	mov	r0, #7
   208b8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   208bc:	mov	r4, r0
   208c0:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   208c4:	ldr	ip, [pc, #2476]	; 21278 <blkid_probe_get_size@plt+0x19d60>
   208c8:	add	ip, pc, ip
   208cc:	b	20730 <blkid_probe_get_size@plt+0x19218>
   208d0:	mov	r0, r8
   208d4:	bl	6b10 <blkid_probe_is_wholedisk@plt>
   208d8:	cmp	r0, #0
   208dc:	beq	20c10 <blkid_probe_get_size@plt+0x196f8>
   208e0:	mov	r1, r4
   208e4:	mov	r0, r8
   208e8:	bl	6edc <blkid_probe_enable_superblocks@plt>
   208ec:	mov	r0, r8
   208f0:	bl	6d50 <blkid_do_fullprobe@plt>
   208f4:	subs	r6, r0, #0
   208f8:	blt	207b0 <blkid_probe_get_size@plt+0x19298>
   208fc:	ldr	r1, [pc, #2424]	; 2127c <blkid_probe_get_size@plt+0x19d64>
   20900:	mov	r3, r4
   20904:	mov	r2, r4
   20908:	add	r1, pc, r1
   2090c:	mov	r0, r8
   20910:	bl	6bd0 <blkid_probe_lookup_value@plt>
   20914:	cmp	r0, #0
   20918:	bne	20c10 <blkid_probe_get_size@plt+0x196f8>
   2091c:	ldr	r1, [pc, #2396]	; 21280 <blkid_probe_get_size@plt+0x19d68>
   20920:	add	r2, sp, #140	; 0x8c
   20924:	add	r1, pc, r1
   20928:	ldr	r0, [sp, #84]	; 0x54
   2092c:	mov	sl, #0
   20930:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   20934:	str	sl, [r5]
   20938:	mov	r0, r8
   2093c:	bl	6ba0 <blkid_probe_numof_values@plt>
   20940:	subs	r4, r0, #0
   20944:	blt	20d2c <blkid_probe_get_size@plt+0x19814>
   20948:	beq	20504 <blkid_probe_get_size@plt+0x18fec>
   2094c:	ldr	r3, [pc, #2352]	; 21284 <blkid_probe_get_size@plt+0x19d6c>
   20950:	str	r9, [sp, #104]	; 0x68
   20954:	add	r3, pc, r3
   20958:	str	r3, [sp, #72]	; 0x48
   2095c:	ldr	r3, [pc, #2340]	; 21288 <blkid_probe_get_size@plt+0x19d70>
   20960:	str	sl, [sp, #56]	; 0x38
   20964:	add	r3, pc, r3
   20968:	str	r3, [sp, #92]	; 0x5c
   2096c:	ldr	r3, [pc, #2328]	; 2128c <blkid_probe_get_size@plt+0x19d74>
   20970:	add	fp, sp, #136	; 0x88
   20974:	add	r3, pc, r3
   20978:	str	r3, [sp, #96]	; 0x60
   2097c:	add	r3, sp, #132	; 0x84
   20980:	str	r3, [sp, #68]	; 0x44
   20984:	str	r5, [sp, #100]	; 0x64
   20988:	ldr	r7, [sp, #84]	; 0x54
   2098c:	ldr	r9, [sp, #88]	; 0x58
   20990:	b	20b50 <blkid_probe_get_size@plt+0x19638>
   20994:	ldr	r1, [pc, #2292]	; 21290 <blkid_probe_get_size@plt+0x19d78>
   20998:	mov	r0, r5
   2099c:	add	r1, pc, r1
   209a0:	bl	7314 <strcmp@plt>
   209a4:	cmp	r0, #0
   209a8:	beq	20cd4 <blkid_probe_get_size@plt+0x197bc>
   209ac:	ldr	r1, [pc, #2272]	; 21294 <blkid_probe_get_size@plt+0x19d7c>
   209b0:	mov	r0, r5
   209b4:	add	r1, pc, r1
   209b8:	bl	7314 <strcmp@plt>
   209bc:	cmp	r0, #0
   209c0:	beq	20cf4 <blkid_probe_get_size@plt+0x197dc>
   209c4:	ldr	r1, [pc, #2252]	; 21298 <blkid_probe_get_size@plt+0x19d80>
   209c8:	mov	r0, r5
   209cc:	add	r1, pc, r1
   209d0:	bl	7314 <strcmp@plt>
   209d4:	cmp	r0, #0
   209d8:	beq	20dd8 <blkid_probe_get_size@plt+0x198c0>
   209dc:	ldr	r1, [pc, #2232]	; 2129c <blkid_probe_get_size@plt+0x19d84>
   209e0:	mov	r0, r5
   209e4:	add	r1, pc, r1
   209e8:	bl	7314 <strcmp@plt>
   209ec:	cmp	r0, #0
   209f0:	beq	20e34 <blkid_probe_get_size@plt+0x1991c>
   209f4:	ldr	r1, [pc, #2212]	; 212a0 <blkid_probe_get_size@plt+0x19d88>
   209f8:	mov	r0, r5
   209fc:	add	r1, pc, r1
   20a00:	bl	7314 <strcmp@plt>
   20a04:	cmp	r0, #0
   20a08:	beq	21058 <blkid_probe_get_size@plt+0x19b40>
   20a0c:	ldr	r1, [pc, #2192]	; 212a4 <blkid_probe_get_size@plt+0x19d8c>
   20a10:	mov	r0, r5
   20a14:	add	r1, pc, r1
   20a18:	bl	7314 <strcmp@plt>
   20a1c:	cmp	r0, #0
   20a20:	beq	21144 <blkid_probe_get_size@plt+0x19c2c>
   20a24:	ldr	r1, [pc, #2172]	; 212a8 <blkid_probe_get_size@plt+0x19d90>
   20a28:	mov	r0, r5
   20a2c:	add	r1, pc, r1
   20a30:	bl	7314 <strcmp@plt>
   20a34:	cmp	r0, #0
   20a38:	beq	21480 <blkid_probe_get_size@plt+0x19f68>
   20a3c:	ldr	r1, [pc, #2152]	; 212ac <blkid_probe_get_size@plt+0x19d94>
   20a40:	mov	r0, r5
   20a44:	add	r1, pc, r1
   20a48:	bl	7314 <strcmp@plt>
   20a4c:	cmp	r0, #0
   20a50:	beq	2144c <blkid_probe_get_size@plt+0x19f34>
   20a54:	ldr	r1, [pc, #2132]	; 212b0 <blkid_probe_get_size@plt+0x19d98>
   20a58:	mov	r0, r5
   20a5c:	add	r1, pc, r1
   20a60:	bl	7314 <strcmp@plt>
   20a64:	cmp	r0, #0
   20a68:	beq	21418 <blkid_probe_get_size@plt+0x19f00>
   20a6c:	ldr	r1, [pc, #2112]	; 212b4 <blkid_probe_get_size@plt+0x19d9c>
   20a70:	mov	r0, r5
   20a74:	add	r1, pc, r1
   20a78:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   20a7c:	cmp	r0, #0
   20a80:	beq	21384 <blkid_probe_get_size@plt+0x19e6c>
   20a84:	mov	r2, #0
   20a88:	str	r2, [sp]
   20a8c:	ldr	r2, [pc, #2084]	; 212b8 <blkid_probe_get_size@plt+0x19da0>
   20a90:	mov	r3, r5
   20a94:	add	r5, sp, #420	; 0x1a4
   20a98:	mov	r0, r5
   20a9c:	add	r2, pc, r2
   20aa0:	mov	r1, #256	; 0x100
   20aa4:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   20aa8:	mov	r2, r5
   20aac:	mov	r3, r6
   20ab0:	mov	r1, r9
   20ab4:	mov	r0, r7
   20ab8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20abc:	ldr	r5, [sp, #132]	; 0x84
   20ac0:	ldr	r1, [sp, #92]	; 0x5c
   20ac4:	mov	r0, r5
   20ac8:	bl	7314 <strcmp@plt>
   20acc:	cmp	r0, #0
   20ad0:	bne	20af4 <blkid_probe_get_size@plt+0x195dc>
   20ad4:	ldr	r1, [pc, #2016]	; 212bc <blkid_probe_get_size@plt+0x19da4>
   20ad8:	ldr	r0, [sp, #136]	; 0x88
   20adc:	add	r1, pc, r1
   20ae0:	bl	7314 <strcmp@plt>
   20ae4:	ldr	r3, [sp, #56]	; 0x38
   20ae8:	cmp	r0, #0
   20aec:	moveq	r3, #1
   20af0:	str	r3, [sp, #56]	; 0x38
   20af4:	ldr	r6, [sp, #140]	; 0x8c
   20af8:	cmp	r6, #0
   20afc:	beq	20b44 <blkid_probe_get_size@plt+0x1962c>
   20b00:	mov	r0, r5
   20b04:	ldr	r1, [sp, #96]	; 0x60
   20b08:	bl	7314 <strcmp@plt>
   20b0c:	cmp	r0, #0
   20b10:	bne	20b44 <blkid_probe_get_size@plt+0x1962c>
   20b14:	mov	r1, r6
   20b18:	ldr	r0, [sp, #136]	; 0x88
   20b1c:	bl	7314 <strcmp@plt>
   20b20:	cmp	r0, #0
   20b24:	bne	20b44 <blkid_probe_get_size@plt+0x1962c>
   20b28:	ldr	r3, [pc, #1936]	; 212c0 <blkid_probe_get_size@plt+0x19da8>
   20b2c:	ldr	r2, [pc, #1936]	; 212c4 <blkid_probe_get_size@plt+0x19dac>
   20b30:	add	r3, pc, r3
   20b34:	add	r2, pc, r2
   20b38:	mov	r1, r9
   20b3c:	mov	r0, r7
   20b40:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20b44:	add	sl, sl, #1
   20b48:	cmp	r4, sl
   20b4c:	beq	20c70 <blkid_probe_get_size@plt+0x19758>
   20b50:	mov	r6, #0
   20b54:	str	r6, [sp]
   20b58:	mov	r3, fp
   20b5c:	ldr	r2, [sp, #68]	; 0x44
   20b60:	mov	r1, sl
   20b64:	mov	r0, r8
   20b68:	bl	6cfc <blkid_probe_get_value@plt>
   20b6c:	cmp	r0, r6
   20b70:	blt	20b44 <blkid_probe_get_size@plt+0x1962c>
   20b74:	ldr	r5, [sp, #132]	; 0x84
   20b78:	ldr	r1, [sp, #72]	; 0x48
   20b7c:	mov	r0, r5
   20b80:	strb	r6, [sp, #420]	; 0x1a4
   20b84:	bl	7314 <strcmp@plt>
   20b88:	ldr	r6, [sp, #136]	; 0x88
   20b8c:	cmp	r0, #0
   20b90:	bne	20994 <blkid_probe_get_size@plt+0x1947c>
   20b94:	ldr	r2, [pc, #1836]	; 212c8 <blkid_probe_get_size@plt+0x19db0>
   20b98:	mov	r3, r6
   20b9c:	add	r2, pc, r2
   20ba0:	mov	r1, r9
   20ba4:	mov	r0, r7
   20ba8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20bac:	ldr	r5, [sp, #132]	; 0x84
   20bb0:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   20bb4:	ldr	r0, [sp, #84]	; 0x54
   20bb8:	add	r1, sp, #152	; 0x98
   20bbc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20bc0:	ldr	r8, [sp, #152]	; 0x98
   20bc4:	cmp	r8, #0
   20bc8:	beq	20590 <blkid_probe_get_size@plt+0x19078>
   20bcc:	ldr	r1, [pc, #1784]	; 212cc <blkid_probe_get_size@plt+0x19db4>
   20bd0:	add	r1, pc, r1
   20bd4:	b	20594 <blkid_probe_get_size@plt+0x1907c>
   20bd8:	mov	r1, #1
   20bdc:	mov	r0, r8
   20be0:	bl	6bac <blkid_probe_enable_partitions@plt>
   20be4:	ldr	r3, [sp, #168]	; 0xa8
   20be8:	and	r3, r3, #61440	; 0xf000
   20bec:	cmp	r3, #8192	; 0x2000
   20bf0:	beq	20c10 <blkid_probe_get_size@plt+0x196f8>
   20bf4:	mov	r0, r8
   20bf8:	bl	7518 <blkid_probe_get_size@plt>
   20bfc:	mov	r2, #1474560	; 0x168000
   20c00:	mov	r3, #0
   20c04:	cmp	r2, r0
   20c08:	sbcs	r3, r3, r1
   20c0c:	bge	208d0 <blkid_probe_get_size@plt+0x193b8>
   20c10:	mov	r1, #4
   20c14:	mov	r0, r8
   20c18:	bl	70d4 <blkid_probe_set_partitions_flags@plt>
   20c1c:	mov	r1, #1
   20c20:	mov	r0, r8
   20c24:	bl	6edc <blkid_probe_enable_superblocks@plt>
   20c28:	mov	r0, r8
   20c2c:	bl	7020 <blkid_do_safeprobe@plt>
   20c30:	mov	r6, r0
   20c34:	b	207a8 <blkid_probe_get_size@plt+0x19290>
   20c38:	ldr	r2, [sp, #84]	; 0x54
   20c3c:	add	r3, sp, #152	; 0x98
   20c40:	mov	r4, r2
   20c44:	str	r3, [sp, #80]	; 0x50
   20c48:	b	2071c <blkid_probe_get_size@plt+0x19204>
   20c4c:	ldr	r0, [sp, #84]	; 0x54
   20c50:	add	r1, sp, #152	; 0x98
   20c54:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20c58:	ldr	r2, [sp, #152]	; 0x98
   20c5c:	cmp	r2, #0
   20c60:	beq	204b4 <blkid_probe_get_size@plt+0x18f9c>
   20c64:	ldr	r1, [pc, #1636]	; 212d0 <blkid_probe_get_size@plt+0x19db8>
   20c68:	add	r1, pc, r1
   20c6c:	b	204b8 <blkid_probe_get_size@plt+0x18fa0>
   20c70:	ldr	r3, [sp, #56]	; 0x38
   20c74:	ldr	r5, [sp, #100]	; 0x64
   20c78:	cmp	r3, #0
   20c7c:	ldr	r9, [sp, #104]	; 0x68
   20c80:	bne	20e90 <blkid_probe_get_size@plt+0x19978>
   20c84:	ldr	r4, [sp, #56]	; 0x38
   20c88:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   20c8c:	ldr	r1, [sp, #80]	; 0x50
   20c90:	ldr	r0, [sp, #84]	; 0x54
   20c94:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20c98:	ldr	r2, [sp, #152]	; 0x98
   20c9c:	cmp	r2, #0
   20ca0:	beq	20324 <blkid_probe_get_size@plt+0x18e0c>
   20ca4:	ldr	r1, [pc, #1576]	; 212d4 <blkid_probe_get_size@plt+0x19dbc>
   20ca8:	add	r1, pc, r1
   20cac:	b	20328 <blkid_probe_get_size@plt+0x18e10>
   20cb0:	ldr	r1, [sp, #80]	; 0x50
   20cb4:	mov	r0, r2
   20cb8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20cbc:	ldr	r0, [sp, #152]	; 0x98
   20cc0:	cmp	r0, #0
   20cc4:	moveq	ip, r0
   20cc8:	ldrne	ip, [pc, #1544]	; 212d8 <blkid_probe_get_size@plt+0x19dc0>
   20ccc:	addne	ip, pc, ip
   20cd0:	b	203f0 <blkid_probe_get_size@plt+0x18ed8>
   20cd4:	ldr	r2, [pc, #1536]	; 212dc <blkid_probe_get_size@plt+0x19dc4>
   20cd8:	mov	r3, r6
   20cdc:	add	r2, pc, r2
   20ce0:	mov	r1, r9
   20ce4:	mov	r0, r7
   20ce8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20cec:	ldr	r5, [sp, #132]	; 0x84
   20cf0:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   20cf4:	ldr	r2, [pc, #1508]	; 212e0 <blkid_probe_get_size@plt+0x19dc8>
   20cf8:	mov	r3, r6
   20cfc:	add	r2, pc, r2
   20d00:	mov	r1, r9
   20d04:	mov	r0, r7
   20d08:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20d0c:	ldr	r5, [sp, #132]	; 0x84
   20d10:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   20d14:	ldr	r4, [sp, #84]	; 0x54
   20d18:	mov	r1, r4
   20d1c:	b	20874 <blkid_probe_get_size@plt+0x1935c>
   20d20:	ldr	r3, [sp, #84]	; 0x54
   20d24:	mov	r1, r3
   20d28:	b	207dc <blkid_probe_get_size@plt+0x192c4>
   20d2c:	ldr	r4, [r5]
   20d30:	ldr	r3, [sp, #84]	; 0x54
   20d34:	cmp	r4, #0
   20d38:	movle	r4, #12
   20d3c:	cmp	r3, #0
   20d40:	str	sl, [sp, #152]	; 0x98
   20d44:	beq	2104c <blkid_probe_get_size@plt+0x19b34>
   20d48:	ldr	r3, [pc, #1428]	; 212e4 <blkid_probe_get_size@plt+0x19dcc>
   20d4c:	add	r3, pc, r3
   20d50:	ldr	r3, [r3, #4]
   20d54:	cmp	r3, #6
   20d58:	movle	r3, sl
   20d5c:	movle	r1, r3
   20d60:	bgt	217c0 <blkid_probe_get_size@plt+0x1a2a8>
   20d64:	ldr	r2, [pc, #1404]	; 212e8 <blkid_probe_get_size@plt+0x19dd0>
   20d68:	ldr	r0, [pc, #1404]	; 212ec <blkid_probe_get_size@plt+0x19dd4>
   20d6c:	add	r2, pc, r2
   20d70:	add	r2, r2, #1024	; 0x400
   20d74:	str	r2, [sp]
   20d78:	ldr	r2, [pc, #1392]	; 212f0 <blkid_probe_get_size@plt+0x19dd8>
   20d7c:	mov	ip, #0
   20d80:	add	r0, pc, r0
   20d84:	str	r3, [sp, #8]
   20d88:	str	r1, [sp, #4]
   20d8c:	str	r0, [sp, #20]
   20d90:	mov	r1, r4
   20d94:	str	ip, [sp, #16]
   20d98:	str	ip, [sp, #12]
   20d9c:	ldr	r3, [pc, #1360]	; 212f4 <blkid_probe_get_size@plt+0x19ddc>
   20da0:	add	r2, pc, r2
   20da4:	mov	r0, #7
   20da8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   20dac:	mov	r4, r0
   20db0:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   20db4:	ldr	r0, [sp, #84]	; 0x54
   20db8:	add	r1, sp, #152	; 0x98
   20dbc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   20dc0:	ldr	r3, [sp, #152]	; 0x98
   20dc4:	cmp	r3, #0
   20dc8:	beq	2062c <blkid_probe_get_size@plt+0x19114>
   20dcc:	ldr	r1, [pc, #1316]	; 212f8 <blkid_probe_get_size@plt+0x19de0>
   20dd0:	add	r1, pc, r1
   20dd4:	b	20630 <blkid_probe_get_size@plt+0x19118>
   20dd8:	add	r5, sp, #420	; 0x1a4
   20ddc:	mov	r1, r5
   20de0:	mov	r2, #256	; 0x100
   20de4:	mov	r0, r6
   20de8:	bl	6cc0 <blkid_safe_string@plt>
   20dec:	ldr	r2, [pc, #1288]	; 212fc <blkid_probe_get_size@plt+0x19de4>
   20df0:	mov	r3, r5
   20df4:	add	r2, pc, r2
   20df8:	mov	r1, r9
   20dfc:	mov	r0, r7
   20e00:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20e04:	mov	r1, r5
   20e08:	mov	r2, #256	; 0x100
   20e0c:	mov	r0, r6
   20e10:	bl	6f30 <blkid_encode_string@plt>
   20e14:	ldr	r2, [pc, #1252]	; 21300 <blkid_probe_get_size@plt+0x19de8>
   20e18:	mov	r3, r5
   20e1c:	add	r2, pc, r2
   20e20:	mov	r1, r9
   20e24:	mov	r0, r7
   20e28:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20e2c:	ldr	r5, [sp, #132]	; 0x84
   20e30:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   20e34:	add	r5, sp, #420	; 0x1a4
   20e38:	mov	r1, r5
   20e3c:	mov	r2, #256	; 0x100
   20e40:	mov	r0, r6
   20e44:	bl	6cc0 <blkid_safe_string@plt>
   20e48:	ldr	r2, [pc, #1204]	; 21304 <blkid_probe_get_size@plt+0x19dec>
   20e4c:	mov	r3, r5
   20e50:	add	r2, pc, r2
   20e54:	mov	r1, r9
   20e58:	mov	r0, r7
   20e5c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20e60:	mov	r1, r5
   20e64:	mov	r2, #256	; 0x100
   20e68:	mov	r0, r6
   20e6c:	bl	6f30 <blkid_encode_string@plt>
   20e70:	ldr	r2, [pc, #1168]	; 21308 <blkid_probe_get_size@plt+0x19df0>
   20e74:	mov	r3, r5
   20e78:	add	r2, pc, r2
   20e7c:	mov	r1, r9
   20e80:	mov	r0, r7
   20e84:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   20e88:	ldr	r5, [sp, #132]	; 0x84
   20e8c:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   20e90:	mov	r4, #0
   20e94:	str	r4, [r5]
   20e98:	mov	r0, r8
   20e9c:	bl	6b7c <blkid_probe_get_partitions@plt>
   20ea0:	subs	r3, r0, #0
   20ea4:	str	r3, [sp, #92]	; 0x5c
   20ea8:	beq	21164 <blkid_probe_get_size@plt+0x19c4c>
   20eac:	bl	6af8 <blkid_partlist_numof_partitions@plt>
   20eb0:	subs	r3, r0, #0
   20eb4:	str	r3, [sp, #96]	; 0x60
   20eb8:	ble	21164 <blkid_probe_get_size@plt+0x19c4c>
   20ebc:	ldr	r1, [pc, #1096]	; 2130c <blkid_probe_get_size@plt+0x19df4>
   20ec0:	ldr	r3, [pc, #1096]	; 21310 <blkid_probe_get_size@plt+0x19df8>
   20ec4:	add	r1, pc, r1
   20ec8:	ldr	r2, [pc, #1092]	; 21314 <blkid_probe_get_size@plt+0x19dfc>
   20ecc:	add	r3, pc, r3
   20ed0:	str	r1, [sp, #108]	; 0x6c
   20ed4:	ldr	r1, [pc, #1084]	; 21318 <blkid_probe_get_size@plt+0x19e00>
   20ed8:	add	r2, pc, r2
   20edc:	add	r3, r3, #1040	; 0x410
   20ee0:	add	r1, pc, r1
   20ee4:	str	r3, [sp, #104]	; 0x68
   20ee8:	add	r3, r2, #1056	; 0x420
   20eec:	str	r2, [sp, #116]	; 0x74
   20ef0:	str	r4, [sp, #100]	; 0x64
   20ef4:	str	r1, [sp, #112]	; 0x70
   20ef8:	mov	r7, r4
   20efc:	mov	fp, r4
   20f00:	str	r3, [sp, #120]	; 0x78
   20f04:	strd	r8, [sp, #68]	; 0x44
   20f08:	b	20f48 <blkid_probe_get_size@plt+0x19a30>
   20f0c:	ldm	r4, {r0, r1, r2, r3}
   20f10:	add	lr, sp, #384	; 0x180
   20f14:	ldr	ip, [sp, #108]	; 0x6c
   20f18:	add	ip, ip, #1088	; 0x440
   20f1c:	stm	lr, {r0, r1, r2, r3}
   20f20:	ldm	ip, {r0, r1, r2, r3}
   20f24:	ldr	ip, [sp, #384]	; 0x180
   20f28:	cmp	ip, r0
   20f2c:	add	ip, sp, #368	; 0x170
   20f30:	stm	ip, {r0, r1, r2, r3}
   20f34:	beq	210b4 <blkid_probe_get_size@plt+0x19b9c>
   20f38:	ldr	r3, [sp, #96]	; 0x60
   20f3c:	add	fp, fp, #1
   20f40:	cmp	r3, fp
   20f44:	beq	21114 <blkid_probe_get_size@plt+0x19bfc>
   20f48:	mov	r1, fp
   20f4c:	ldr	r0, [sp, #92]	; 0x5c
   20f50:	bl	741c <blkid_partlist_get_partition@plt>
   20f54:	subs	r6, r0, #0
   20f58:	beq	20f38 <blkid_probe_get_size@plt+0x19a20>
   20f5c:	bl	73f8 <blkid_partition_get_uuid@plt>
   20f60:	subs	r5, r0, #0
   20f64:	beq	20f38 <blkid_probe_get_size@plt+0x19a20>
   20f68:	mov	r0, r6
   20f6c:	bl	6f0c <blkid_partition_get_type_string@plt>
   20f70:	cmp	r0, #0
   20f74:	beq	20f38 <blkid_probe_get_size@plt+0x19a20>
   20f78:	add	r4, sp, #256	; 0x100
   20f7c:	mov	r1, r4
   20f80:	bl	3200c <blkid_probe_get_size@plt+0x2aaf4>
   20f84:	cmp	r0, #0
   20f88:	blt	20f38 <blkid_probe_get_size@plt+0x19a20>
   20f8c:	ldm	r4, {r0, r1, r2, r3}
   20f90:	add	ip, sp, #352	; 0x160
   20f94:	stm	ip, {r0, r1, r2, r3}
   20f98:	ldr	r3, [sp, #104]	; 0x68
   20f9c:	ldr	ip, [sp, #352]	; 0x160
   20fa0:	ldm	r3, {r0, r1, r2, r3}
   20fa4:	cmp	ip, r0
   20fa8:	add	ip, sp, #336	; 0x150
   20fac:	stm	ip, {r0, r1, r2, r3}
   20fb0:	bne	20f0c <blkid_probe_get_size@plt+0x199f4>
   20fb4:	ldr	r2, [sp, #356]	; 0x164
   20fb8:	ldr	r3, [sp, #340]	; 0x154
   20fbc:	cmp	r2, r3
   20fc0:	bne	20f0c <blkid_probe_get_size@plt+0x199f4>
   20fc4:	ldr	r2, [sp, #360]	; 0x168
   20fc8:	ldr	r3, [sp, #344]	; 0x158
   20fcc:	cmp	r2, r3
   20fd0:	bne	20f0c <blkid_probe_get_size@plt+0x199f4>
   20fd4:	ldr	r2, [sp, #364]	; 0x16c
   20fd8:	ldr	r3, [sp, #348]	; 0x15c
   20fdc:	cmp	r2, r3
   20fe0:	bne	20f0c <blkid_probe_get_size@plt+0x199f4>
   20fe4:	add	r8, sp, #272	; 0x110
   20fe8:	mov	r0, r5
   20fec:	mov	r1, r8
   20ff0:	bl	3200c <blkid_probe_get_size@plt+0x2aaf4>
   20ff4:	mov	r4, #0
   20ff8:	cmp	r0, r4
   20ffc:	blt	20f38 <blkid_probe_get_size@plt+0x19a20>
   21000:	bl	3a708 <blkid_probe_get_size@plt+0x331f0>
   21004:	cmp	r0, #0
   21008:	ble	2153c <blkid_probe_get_size@plt+0x1a024>
   2100c:	ldrd	r8, [sp, #68]	; 0x44
   21010:	mov	r0, r7
   21014:	bl	69f0 <free@plt>
   21018:	mov	r4, #0
   2101c:	b	20504 <blkid_probe_get_size@plt+0x18fec>
   21020:	add	r3, sp, #152	; 0x98
   21024:	mov	r1, r3
   21028:	ldr	r0, [sp, #84]	; 0x54
   2102c:	str	r3, [sp, #80]	; 0x50
   21030:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   21034:	ldr	r4, [sp, #152]	; 0x98
   21038:	cmp	r4, #0
   2103c:	moveq	r2, r4
   21040:	ldrne	r2, [pc, #724]	; 2131c <blkid_probe_get_size@plt+0x19e04>
   21044:	addne	r2, pc, r2
   21048:	b	2071c <blkid_probe_get_size@plt+0x19204>
   2104c:	ldr	r3, [sp, #84]	; 0x54
   21050:	mov	r1, r3
   21054:	b	20d64 <blkid_probe_get_size@plt+0x1984c>
   21058:	add	r5, sp, #420	; 0x1a4
   2105c:	mov	r1, r5
   21060:	mov	r2, #256	; 0x100
   21064:	mov	r0, r6
   21068:	bl	6cc0 <blkid_safe_string@plt>
   2106c:	ldr	r2, [pc, #684]	; 21320 <blkid_probe_get_size@plt+0x19e08>
   21070:	mov	r3, r5
   21074:	add	r2, pc, r2
   21078:	mov	r1, r9
   2107c:	mov	r0, r7
   21080:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21084:	mov	r1, r5
   21088:	mov	r2, #256	; 0x100
   2108c:	mov	r0, r6
   21090:	bl	6f30 <blkid_encode_string@plt>
   21094:	ldr	r2, [pc, #648]	; 21324 <blkid_probe_get_size@plt+0x19e0c>
   21098:	mov	r3, r5
   2109c:	add	r2, pc, r2
   210a0:	mov	r1, r9
   210a4:	mov	r0, r7
   210a8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   210ac:	ldr	r5, [sp, #132]	; 0x84
   210b0:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   210b4:	ldr	r2, [sp, #388]	; 0x184
   210b8:	ldr	r3, [sp, #372]	; 0x174
   210bc:	cmp	r2, r3
   210c0:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   210c4:	ldr	r2, [sp, #392]	; 0x188
   210c8:	ldr	r3, [sp, #376]	; 0x178
   210cc:	cmp	r2, r3
   210d0:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   210d4:	ldr	r2, [sp, #396]	; 0x18c
   210d8:	ldr	r3, [sp, #380]	; 0x17c
   210dc:	cmp	r2, r3
   210e0:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   210e4:	mov	r0, r6
   210e8:	bl	729c <blkid_partition_get_flags@plt>
   210ec:	cmp	r0, #0
   210f0:	sbcs	r3, r1, #0
   210f4:	blt	20f38 <blkid_probe_get_size@plt+0x19a20>
   210f8:	cmp	r7, #0
   210fc:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   21100:	mov	r0, r5
   21104:	bl	74e8 <strdup@plt>
   21108:	subs	r7, r0, #0
   2110c:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   21110:	b	2100c <blkid_probe_get_size@plt+0x19af4>
   21114:	ldr	r3, [sp, #100]	; 0x64
   21118:	ldrd	r8, [sp, #68]	; 0x44
   2111c:	cmp	r3, #0
   21120:	beq	21010 <blkid_probe_get_size@plt+0x19af8>
   21124:	cmp	r7, #0
   21128:	beq	21010 <blkid_probe_get_size@plt+0x19af8>
   2112c:	ldr	r2, [pc, #500]	; 21328 <blkid_probe_get_size@plt+0x19e10>
   21130:	ldrd	r0, [sp, #84]	; 0x54
   21134:	mov	r3, r7
   21138:	add	r2, pc, r2
   2113c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21140:	b	21010 <blkid_probe_get_size@plt+0x19af8>
   21144:	ldr	r2, [pc, #480]	; 2132c <blkid_probe_get_size@plt+0x19e14>
   21148:	mov	r3, r6
   2114c:	add	r2, pc, r2
   21150:	mov	r1, r9
   21154:	mov	r0, r7
   21158:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   2115c:	ldr	r5, [sp, #132]	; 0x84
   21160:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   21164:	mov	r7, #0
   21168:	b	21010 <blkid_probe_get_size@plt+0x19af8>
   2116c:	bl	6fb4 <__stack_chk_fail@plt>
   21170:	ldr	r0, [sp, #84]	; 0x54
   21174:	add	r1, sp, #152	; 0x98
   21178:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   2117c:	ldr	r4, [sp, #152]	; 0x98
   21180:	cmp	r4, #0
   21184:	beq	20870 <blkid_probe_get_size@plt+0x19358>
   21188:	ldr	r1, [pc, #416]	; 21330 <blkid_probe_get_size@plt+0x19e18>
   2118c:	add	r1, pc, r1
   21190:	b	20874 <blkid_probe_get_size@plt+0x1935c>
   21194:	ldr	r1, [sp, #80]	; 0x50
   21198:	ldr	r0, [sp, #84]	; 0x54
   2119c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   211a0:	ldr	r3, [sp, #152]	; 0x98
   211a4:	cmp	r3, #0
   211a8:	beq	207d8 <blkid_probe_get_size@plt+0x192c0>
   211ac:	ldr	r1, [pc, #384]	; 21334 <blkid_probe_get_size@plt+0x19e1c>
   211b0:	add	r1, pc, r1
   211b4:	b	207dc <blkid_probe_get_size@plt+0x192c4>
   211b8:	andeq	r7, r7, r4, asr #18
   211bc:	andeq	r0, r0, ip, lsr r4
   211c0:	andeq	r9, r6, r8, lsr #10
   211c4:	andeq	sl, r4, r0, lsl #11
   211c8:	andeq	r0, r0, r8, asr r4
   211cc:	andeq	r7, r7, r8, lsr #28
   211d0:	ldrdeq	r9, [r4], -r4
   211d4:	andeq	sl, r4, r4, ror #9
   211d8:	muleq	r4, r4, r4
   211dc:	andeq	r7, r7, r4, ror #26
   211e0:	andeq	r9, r4, r8, lsl #4
   211e4:	andeq	sl, r4, r4, asr r4
   211e8:	ldrdeq	sl, [r4], -r8
   211ec:	andeq	r0, r0, sl, ror #3
   211f0:	muleq	r7, r8, ip
   211f4:	andeq	r9, r4, r8, asr #2
   211f8:	strdeq	sl, [r4], -r8
   211fc:	andeq	sl, r4, r0, lsl r3
   21200:	andeq	r0, r0, sl, lsl #2
   21204:	andeq	r9, r4, ip, asr #1
   21208:	muleq	r4, r4, r2
   2120c:	andeq	pc, r4, r0, lsr #28
   21210:	andeq	r0, r0, pc, asr #3
   21214:			; <UNDEFINED> instruction: 0x00077bbc
   21218:	andeq	sl, r4, ip, asr #5
   2121c:	andeq	r9, r4, r4, rrx
   21220:	andeq	sl, r4, r4, lsr r2
   21224:	andeq	r7, r7, r0, lsr #22
   21228:	ldrdeq	r8, [r4], -r0
   2122c:	andeq	sl, r4, r8, lsr r2
   21230:	muleq	r4, r0, r1
   21234:	andeq	r0, r0, lr, lsl #2
   21238:	andeq	r7, r7, ip, lsr sl
   2123c:	strheq	sl, [r4], -r4
   21240:	andeq	r8, r4, r8, asr #29
   21244:	muleq	r4, r0, r1
   21248:	andeq	sl, r4, r0, lsr #1
   2124c:	andeq	r0, r0, r5, lsl r1
   21250:	andeq	r7, r7, r4, ror r9
   21254:	andeq	r8, r4, r4, lsr #28
   21258:	andeq	sl, r4, r4, lsl r1
   2125c:	andeq	r9, r4, ip, ror #31
   21260:	andeq	r0, r0, r9, lsl r1
   21264:	ldrdeq	r7, [r7], -ip
   21268:	andeq	sl, r4, r4, lsr r0
   2126c:	andeq	r8, r4, r4, lsl #27
   21270:	andeq	r9, r4, r4, asr pc
   21274:	andeq	r0, r0, r3, lsl r1
   21278:	andeq	r5, r4, r4, lsr #24
   2127c:	strdeq	r9, [r4], -ip
   21280:	andeq	sl, r4, r8
   21284:	andeq	sl, r4, r0, lsr #32
   21288:	andeq	r9, r4, r0, lsr #31
   2128c:			; <UNDEFINED> instruction: 0x0004a1bc
   21290:	andeq	r9, r4, ip, ror #31
   21294:	andeq	r6, r5, r0, ror #26
   21298:			; <UNDEFINED> instruction: 0x0004a1b0
   2129c:	andeq	r9, r4, r4, ror #31
   212a0:			; <UNDEFINED> instruction: 0x000466b4
   212a4:	strdeq	r9, [r4], -r0
   212a8:	strdeq	r9, [r4], -ip
   212ac:	andeq	sl, r4, r0
   212b0:	andeq	sl, r4, ip
   212b4:	andeq	sl, r4, r8, lsl r0
   212b8:	strdeq	r9, [r4], -ip
   212bc:	andeq	sl, r4, r0, asr r0
   212c0:	andeq	r5, r5, r4, lsr #16
   212c4:	andeq	sl, r4, ip
   212c8:	andeq	r9, r4, r0, ror #27
   212cc:	andeq	r4, r4, r8, ror #6
   212d0:	ldrdeq	r4, [r4], -r0
   212d4:	muleq	r4, r0, r2
   212d8:	andeq	r4, r4, ip, ror #4
   212dc:			; <UNDEFINED> instruction: 0x00049cb4
   212e0:	andeq	r9, r4, r0, lsr #25
   212e4:	strdeq	r7, [r7], -r0
   212e8:	muleq	r4, ip, r8
   212ec:	andeq	r9, r4, r8, asr #23
   212f0:	andeq	r9, r4, r4, ror #20
   212f4:	andeq	r0, r0, r1, lsr #2
   212f8:	andeq	r4, r4, r8, ror #2
   212fc:			; <UNDEFINED> instruction: 0x00049bb8
   21300:	muleq	r4, ip, fp
   21304:	andeq	r9, r4, r4, lsl #23
   21308:	andeq	r9, r4, ip, ror #22
   2130c:	andeq	r8, r4, r4, asr #14
   21310:	andeq	r8, r4, ip, lsr r7
   21314:	andeq	r8, r4, r0, lsr r7
   21318:	andeq	r9, r4, r8, ror ip
   2131c:	strdeq	r3, [r4], -r4
   21320:	andeq	r9, r4, r4, lsl #19
   21324:	andeq	r9, r4, r8, ror #18
   21328:	strdeq	r9, [r4], -r4
   2132c:	andeq	r9, r4, r8, asr #17
   21330:	andeq	r3, r4, ip, lsr #27
   21334:	andeq	r3, r4, r8, lsl #27
   21338:	andeq	r9, r4, r0, lsl r7
   2133c:	andeq	r9, r4, r4, lsl r7
   21340:	andeq	r9, r4, r0, lsr #14
   21344:	andeq	r9, r4, r0, lsr r7
   21348:	andeq	r9, r4, r4, lsl r7
   2134c:	andeq	r9, r4, r4, asr #12
   21350:	andeq	r9, r4, ip, ror #11
   21354:	andeq	r9, r4, r8, lsr #11
   21358:	andeq	r9, r4, r0, lsr r6
   2135c:	ldrdeq	r9, [r4], -r8
   21360:	andeq	r9, r4, r4, lsl #11
   21364:	andeq	r9, r4, ip, lsl #12
   21368:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2136c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   21370:	andeq	r9, r4, r4, lsr #9
   21374:	andeq	r3, r4, ip, asr r7
   21378:	andeq	lr, r4, r4, ror #22
   2137c:	andeq	r9, r4, r4, ror r3
   21380:	andeq	r0, r0, r1, asr #2
   21384:	ldr	r1, [pc, #-84]	; 21338 <blkid_probe_get_size@plt+0x19e20>
   21388:	mov	r0, r5
   2138c:	add	r1, pc, r1
   21390:	bl	7314 <strcmp@plt>
   21394:	cmp	r0, #0
   21398:	beq	21508 <blkid_probe_get_size@plt+0x19ff0>
   2139c:	ldr	r1, [pc, #-104]	; 2133c <blkid_probe_get_size@plt+0x19e24>
   213a0:	mov	r0, r5
   213a4:	add	r1, pc, r1
   213a8:	bl	7314 <strcmp@plt>
   213ac:	cmp	r0, #0
   213b0:	beq	214d4 <blkid_probe_get_size@plt+0x19fbc>
   213b4:	ldr	r1, [pc, #-124]	; 21340 <blkid_probe_get_size@plt+0x19e28>
   213b8:	mov	r0, r5
   213bc:	add	r1, pc, r1
   213c0:	bl	7314 <strcmp@plt>
   213c4:	cmp	r0, #0
   213c8:	beq	214a0 <blkid_probe_get_size@plt+0x19f88>
   213cc:	ldr	r1, [pc, #-144]	; 21344 <blkid_probe_get_size@plt+0x19e2c>
   213d0:	mov	r0, r5
   213d4:	add	r1, pc, r1
   213d8:	bl	7314 <strcmp@plt>
   213dc:	cmp	r0, #0
   213e0:	bne	20ac0 <blkid_probe_get_size@plt+0x195a8>
   213e4:	add	r5, sp, #420	; 0x1a4
   213e8:	mov	r1, r5
   213ec:	mov	r2, #256	; 0x100
   213f0:	mov	r0, r6
   213f4:	bl	6f30 <blkid_encode_string@plt>
   213f8:	ldr	r2, [pc, #-184]	; 21348 <blkid_probe_get_size@plt+0x19e30>
   213fc:	mov	r3, r5
   21400:	add	r2, pc, r2
   21404:	mov	r1, r9
   21408:	mov	r0, r7
   2140c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21410:	ldr	r5, [sp, #132]	; 0x84
   21414:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   21418:	add	r5, sp, #420	; 0x1a4
   2141c:	mov	r1, r5
   21420:	mov	r2, #256	; 0x100
   21424:	mov	r0, r6
   21428:	bl	6f30 <blkid_encode_string@plt>
   2142c:	ldr	r2, [pc, #-232]	; 2134c <blkid_probe_get_size@plt+0x19e34>
   21430:	mov	r3, r5
   21434:	add	r2, pc, r2
   21438:	mov	r1, r9
   2143c:	mov	r0, r7
   21440:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21444:	ldr	r5, [sp, #132]	; 0x84
   21448:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   2144c:	add	r5, sp, #420	; 0x1a4
   21450:	mov	r1, r5
   21454:	mov	r2, #256	; 0x100
   21458:	mov	r0, r6
   2145c:	bl	6f30 <blkid_encode_string@plt>
   21460:	ldr	r2, [pc, #-280]	; 21350 <blkid_probe_get_size@plt+0x19e38>
   21464:	mov	r3, r5
   21468:	add	r2, pc, r2
   2146c:	mov	r1, r9
   21470:	mov	r0, r7
   21474:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21478:	ldr	r5, [sp, #132]	; 0x84
   2147c:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   21480:	ldr	r2, [pc, #-308]	; 21354 <blkid_probe_get_size@plt+0x19e3c>
   21484:	mov	r3, r6
   21488:	add	r2, pc, r2
   2148c:	mov	r1, r9
   21490:	mov	r0, r7
   21494:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21498:	ldr	r5, [sp, #132]	; 0x84
   2149c:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   214a0:	add	r5, sp, #420	; 0x1a4
   214a4:	mov	r1, r5
   214a8:	mov	r2, #256	; 0x100
   214ac:	mov	r0, r6
   214b0:	bl	6f30 <blkid_encode_string@plt>
   214b4:	ldr	r2, [pc, #-356]	; 21358 <blkid_probe_get_size@plt+0x19e40>
   214b8:	mov	r3, r5
   214bc:	add	r2, pc, r2
   214c0:	mov	r1, r9
   214c4:	mov	r0, r7
   214c8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   214cc:	ldr	r5, [sp, #132]	; 0x84
   214d0:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   214d4:	add	r5, sp, #420	; 0x1a4
   214d8:	mov	r1, r5
   214dc:	mov	r2, #256	; 0x100
   214e0:	mov	r0, r6
   214e4:	bl	6f30 <blkid_encode_string@plt>
   214e8:	ldr	r2, [pc, #-404]	; 2135c <blkid_probe_get_size@plt+0x19e44>
   214ec:	mov	r3, r5
   214f0:	add	r2, pc, r2
   214f4:	mov	r1, r9
   214f8:	mov	r0, r7
   214fc:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21500:	ldr	r5, [sp, #132]	; 0x84
   21504:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   21508:	add	r5, sp, #420	; 0x1a4
   2150c:	mov	r1, r5
   21510:	mov	r2, #256	; 0x100
   21514:	mov	r0, r6
   21518:	bl	6f30 <blkid_encode_string@plt>
   2151c:	ldr	r2, [pc, #-452]	; 21360 <blkid_probe_get_size@plt+0x19e48>
   21520:	mov	r3, r5
   21524:	add	r2, pc, r2
   21528:	mov	r1, r9
   2152c:	mov	r0, r7
   21530:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   21534:	ldr	r5, [sp, #132]	; 0x84
   21538:	b	20ac0 <blkid_probe_get_size@plt+0x195a8>
   2153c:	mov	r1, #0
   21540:	ldr	r0, [sp, #112]	; 0x70
   21544:	bl	6ff0 <access@plt>
   21548:	cmp	r0, #0
   2154c:	blt	2100c <blkid_probe_get_size@plt+0x19af4>
   21550:	ldr	r3, [sp, #120]	; 0x78
   21554:	ldr	ip, [sp, #80]	; 0x50
   21558:	ldr	lr, [pc, #-508]	; 21364 <blkid_probe_get_size@plt+0x19e4c>
   2155c:	ldm	r3, {r0, r1, r2, r3}
   21560:	add	lr, pc, lr
   21564:	str	ip, [sp, #8]
   21568:	add	ip, sp, #400	; 0x190
   2156c:	str	r4, [sp, #148]	; 0x94
   21570:	stm	ip, {r0, r1, r2, r3}
   21574:	add	r3, sp, #148	; 0x94
   21578:	str	lr, [sp]
   2157c:	str	r3, [sp, #4]
   21580:	ldm	ip, {r0, r1, r2, r3}
   21584:	str	r4, [sp, #152]	; 0x98
   21588:	bl	626b0 <blkid_probe_get_size@plt+0x5b198>
   2158c:	cmp	r0, #0
   21590:	blt	217a0 <blkid_probe_get_size@plt+0x1a288>
   21594:	ldr	r6, [sp, #148]	; 0x94
   21598:	ldr	r4, [sp, #152]	; 0x98
   2159c:	cmp	r6, #0
   215a0:	beq	217f4 <blkid_probe_get_size@plt+0x1a2dc>
   215a4:	lsl	r0, r4, #1
   215a8:	cmp	r4, r0
   215ac:	bhi	217e4 <blkid_probe_get_size@plt+0x1a2cc>
   215b0:	add	r0, r0, #1
   215b4:	bl	7230 <malloc@plt>
   215b8:	subs	r5, r0, #0
   215bc:	beq	217e4 <blkid_probe_get_size@plt+0x1a2cc>
   215c0:	add	r4, r6, r4
   215c4:	mov	r9, r5
   215c8:	str	r5, [sp, #124]	; 0x7c
   215cc:	add	r2, r6, #1
   215d0:	mov	r5, r4
   215d4:	cmp	r5, r2
   215d8:	ldr	sl, [pc, #-632]	; 21368 <blkid_probe_get_size@plt+0x19e50>
   215dc:	bls	21664 <blkid_probe_get_size@plt+0x1a14c>
   215e0:	mov	r4, r6
   215e4:	ldrb	r2, [r6, #1]
   215e8:	ldrb	r1, [r4], #2
   215ec:	ldr	r3, [pc, #-648]	; 2136c <blkid_probe_get_size@plt+0x19e54>
   215f0:	orr	r1, r1, r2, lsl #8
   215f4:	add	r2, r1, #10240	; 0x2800
   215f8:	uxth	r2, r2
   215fc:	cmp	r2, r3
   21600:	bhi	21790 <blkid_probe_get_size@plt+0x1a278>
   21604:	add	r2, r1, #9216	; 0x2400
   21608:	uxth	r2, r2
   2160c:	cmp	r2, sl
   21610:	bls	21654 <blkid_probe_get_size@plt+0x1a13c>
   21614:	add	r2, r6, #3
   21618:	cmp	r5, r2
   2161c:	bls	21664 <blkid_probe_get_size@plt+0x1a14c>
   21620:	ldrb	r0, [r6, #3]
   21624:	ldrb	r2, [r6, #2]
   21628:	orr	r2, r2, r0, lsl #8
   2162c:	add	r2, r2, #9216	; 0x2400
   21630:	uxth	r0, r2
   21634:	cmp	r0, sl
   21638:	bhi	21654 <blkid_probe_get_size@plt+0x1a13c>
   2163c:	sub	r1, r1, #55296	; 0xd800
   21640:	mov	r0, r9
   21644:	add	r1, r2, r1, lsl #10
   21648:	bl	39150 <blkid_probe_get_size@plt+0x31c38>
   2164c:	add	r4, r6, #4
   21650:	add	r9, r9, r0
   21654:	mov	r6, r4
   21658:	add	r2, r6, #1
   2165c:	cmp	r5, r2
   21660:	bhi	215e0 <blkid_probe_get_size@plt+0x1a0c8>
   21664:	mov	r2, #0
   21668:	strb	r2, [r9]
   2166c:	ldr	r0, [sp, #148]	; 0x94
   21670:	ldr	r5, [sp, #124]	; 0x7c
   21674:	bl	69f0 <free@plt>
   21678:	add	r3, sp, #476	; 0x1dc
   2167c:	str	r3, [sp, #48]	; 0x30
   21680:	add	r3, sp, #472	; 0x1d8
   21684:	str	r3, [sp, #44]	; 0x2c
   21688:	add	r3, sp, #468	; 0x1d4
   2168c:	str	r3, [sp, #40]	; 0x28
   21690:	add	r3, sp, #464	; 0x1d0
   21694:	str	r3, [sp, #36]	; 0x24
   21698:	add	r3, sp, #460	; 0x1cc
   2169c:	str	r3, [sp, #32]
   216a0:	add	r3, sp, #456	; 0x1c8
   216a4:	str	r3, [sp, #28]
   216a8:	add	r3, sp, #452	; 0x1c4
   216ac:	str	r3, [sp, #24]
   216b0:	add	r3, sp, #448	; 0x1c0
   216b4:	str	r3, [sp, #20]
   216b8:	add	r3, sp, #444	; 0x1bc
   216bc:	str	r3, [sp, #16]
   216c0:	add	r3, sp, #440	; 0x1b8
   216c4:	str	r3, [sp, #12]
   216c8:	add	r3, sp, #436	; 0x1b4
   216cc:	str	r3, [sp, #8]
   216d0:	ldr	r1, [pc, #-872]	; 21370 <blkid_probe_get_size@plt+0x19e58>
   216d4:	add	r3, sp, #432	; 0x1b0
   216d8:	str	r3, [sp, #4]
   216dc:	add	r6, sp, #480	; 0x1e0
   216e0:	add	r3, sp, #428	; 0x1ac
   216e4:	str	r3, [sp]
   216e8:	str	r6, [sp, #52]	; 0x34
   216ec:	add	r3, sp, #424	; 0x1a8
   216f0:	add	r2, sp, #420	; 0x1a4
   216f4:	add	r1, pc, r1
   216f8:	mov	r0, r5
   216fc:	bl	735c <sscanf@plt>
   21700:	cmp	r0, #16
   21704:	bne	217b0 <blkid_probe_get_size@plt+0x1a298>
   21708:	add	r4, sp, #288	; 0x120
   2170c:	sub	r2, r4, #1
   21710:	add	r3, sp, #416	; 0x1a0
   21714:	ldr	r1, [r3, #4]!
   21718:	cmp	r6, r3
   2171c:	strb	r1, [r2, #1]!
   21720:	bne	21714 <blkid_probe_get_size@plt+0x1a1fc>
   21724:	mov	r0, r5
   21728:	bl	69f0 <free@plt>
   2172c:	ldm	r8, {r0, r1, r2, r3}
   21730:	add	ip, sp, #320	; 0x140
   21734:	stm	ip, {r0, r1, r2, r3}
   21738:	ldm	r4, {r0, r1, r2, r3}
   2173c:	ldr	ip, [sp, #320]	; 0x140
   21740:	cmp	ip, r0
   21744:	add	ip, sp, #304	; 0x130
   21748:	stm	ip, {r0, r1, r2, r3}
   2174c:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   21750:	ldr	r2, [sp, #324]	; 0x144
   21754:	ldr	r3, [sp, #308]	; 0x134
   21758:	cmp	r2, r3
   2175c:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   21760:	ldr	r2, [sp, #328]	; 0x148
   21764:	ldr	r3, [sp, #312]	; 0x138
   21768:	cmp	r2, r3
   2176c:	bne	20f38 <blkid_probe_get_size@plt+0x19a20>
   21770:	ldr	r2, [sp, #332]	; 0x14c
   21774:	ldr	r3, [sp, #316]	; 0x13c
   21778:	ldr	r0, [sp, #56]	; 0x38
   2177c:	ldr	r1, [sp, #100]	; 0x64
   21780:	cmp	r2, r3
   21784:	moveq	r1, r0
   21788:	str	r1, [sp, #100]	; 0x64
   2178c:	b	20f38 <blkid_probe_get_size@plt+0x19a20>
   21790:	mov	r0, r9
   21794:	bl	39150 <blkid_probe_get_size@plt+0x31c38>
   21798:	add	r9, r9, r0
   2179c:	b	21654 <blkid_probe_get_size@plt+0x1a13c>
   217a0:	ldr	r0, [sp, #148]	; 0x94
   217a4:	ldrd	r8, [sp, #68]	; 0x44
   217a8:	bl	69f0 <free@plt>
   217ac:	b	21010 <blkid_probe_get_size@plt+0x19af8>
   217b0:	mov	r0, r5
   217b4:	ldrd	r8, [sp, #68]	; 0x44
   217b8:	bl	69f0 <free@plt>
   217bc:	b	21010 <blkid_probe_get_size@plt+0x19af8>
   217c0:	ldr	r1, [sp, #80]	; 0x50
   217c4:	ldr	r0, [sp, #84]	; 0x54
   217c8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   217cc:	ldr	r3, [sp, #152]	; 0x98
   217d0:	cmp	r3, #0
   217d4:	moveq	r1, r3
   217d8:	ldrne	r1, [pc, #-1132]	; 21374 <blkid_probe_get_size@plt+0x19e5c>
   217dc:	addne	r1, pc, r1
   217e0:	b	20d64 <blkid_probe_get_size@plt+0x1984c>
   217e4:	mov	r0, r6
   217e8:	ldrd	r8, [sp, #68]	; 0x44
   217ec:	bl	69f0 <free@plt>
   217f0:	b	21010 <blkid_probe_get_size@plt+0x19af8>
   217f4:	ldr	r3, [sp, #116]	; 0x74
   217f8:	ldr	r1, [pc, #-1160]	; 21378 <blkid_probe_get_size@plt+0x19e60>
   217fc:	add	r2, r3, #1072	; 0x430
   21800:	str	r2, [sp]
   21804:	ldr	r2, [pc, #-1168]	; 2137c <blkid_probe_get_size@plt+0x19e64>
   21808:	mov	r0, r6
   2180c:	ldr	r3, [pc, #-1172]	; 21380 <blkid_probe_get_size@plt+0x19e68>
   21810:	add	r2, pc, r2
   21814:	add	r1, pc, r1
   21818:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2181c:	ldr	r3, [pc, #112]	; 21894 <blkid_probe_get_size@plt+0x1a37c>
   21820:	push	{lr}		; (str lr, [sp, #-4]!)
   21824:	add	r3, pc, r3
   21828:	sub	sp, sp, #12
   2182c:	ldr	r3, [r3, #4]
   21830:	cmp	r3, #6
   21834:	bgt	2185c <blkid_probe_get_size@plt+0x1a344>
   21838:	ldr	r3, [pc, #88]	; 21898 <blkid_probe_get_size@plt+0x1a380>
   2183c:	ldr	r0, [pc, r3]
   21840:	cmp	r0, #0
   21844:	beq	21854 <blkid_probe_get_size@plt+0x1a33c>
   21848:	bl	6f84 <kmod_validate_resources@plt>
   2184c:	adds	r0, r0, #0
   21850:	movne	r0, #1
   21854:	add	sp, sp, #12
   21858:	pop	{pc}		; (ldr pc, [sp], #4)
   2185c:	ldr	r2, [pc, #56]	; 2189c <blkid_probe_get_size@plt+0x1a384>
   21860:	ldr	r3, [pc, #56]	; 218a0 <blkid_probe_get_size@plt+0x1a388>
   21864:	add	r2, pc, r2
   21868:	str	r2, [sp, #4]
   2186c:	add	r3, pc, r3
   21870:	ldr	r2, [pc, #44]	; 218a4 <blkid_probe_get_size@plt+0x1a38c>
   21874:	add	r3, r3, #1104	; 0x450
   21878:	str	r3, [sp]
   2187c:	add	r2, pc, r2
   21880:	mov	r3, #63	; 0x3f
   21884:	mov	r1, #0
   21888:	ldr	r0, [pc, #24]	; 218a8 <blkid_probe_get_size@plt+0x1a390>
   2188c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21890:	b	21838 <blkid_probe_get_size@plt+0x1a320>
   21894:	andeq	r6, r7, r8, lsl r9
   21898:	strdeq	r6, [r7], -r8
   2189c:	muleq	r4, ip, r3
   218a0:	muleq	r4, ip, sp
   218a4:	andeq	r9, r4, r4, ror #6
   218a8:	andeq	r0, r0, r7, lsl #8
   218ac:	ldr	r3, [pc, #104]	; 2191c <blkid_probe_get_size@plt+0x1a404>
   218b0:	push	{r4, lr}
   218b4:	add	r3, pc, r3
   218b8:	sub	sp, sp, #8
   218bc:	ldr	r3, [r3, #4]
   218c0:	cmp	r3, #6
   218c4:	ble	21900 <blkid_probe_get_size@plt+0x1a3e8>
   218c8:	ldr	r3, [pc, #80]	; 21920 <blkid_probe_get_size@plt+0x1a408>
   218cc:	ldr	r2, [pc, #80]	; 21924 <blkid_probe_get_size@plt+0x1a40c>
   218d0:	add	r3, pc, r3
   218d4:	add	r2, pc, r2
   218d8:	add	r3, r3, #1120	; 0x460
   218dc:	str	r2, [sp, #4]
   218e0:	ldr	r2, [pc, #64]	; 21928 <blkid_probe_get_size@plt+0x1a410>
   218e4:	add	r3, r3, #8
   218e8:	str	r3, [sp]
   218ec:	add	r2, pc, r2
   218f0:	mov	r3, #57	; 0x39
   218f4:	mov	r1, #0
   218f8:	ldr	r0, [pc, #44]	; 2192c <blkid_probe_get_size@plt+0x1a414>
   218fc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21900:	ldr	r4, [pc, #40]	; 21930 <blkid_probe_get_size@plt+0x1a418>
   21904:	add	r4, pc, r4
   21908:	ldr	r0, [r4]
   2190c:	bl	6ee8 <kmod_unref@plt>
   21910:	str	r0, [r4]
   21914:	add	sp, sp, #8
   21918:	pop	{r4, pc}
   2191c:	andeq	r6, r7, r8, lsl #17
   21920:	andeq	r7, r4, r8, lsr sp
   21924:	andeq	r9, r4, r4, asr #6
   21928:	strdeq	r9, [r4], -r4
   2192c:	andeq	r0, r0, r7, lsl #8
   21930:	andeq	r6, r7, r0, lsr sp
   21934:	push	{r4, r5, lr}
   21938:	sub	sp, sp, #12
   2193c:	ldr	r5, [pc, #180]	; 219f8 <blkid_probe_get_size@plt+0x1a4e0>
   21940:	add	r5, pc, r5
   21944:	ldr	r4, [r5]
   21948:	cmp	r4, #0
   2194c:	movne	r0, #0
   21950:	beq	2195c <blkid_probe_get_size@plt+0x1a444>
   21954:	add	sp, sp, #12
   21958:	pop	{r4, r5, pc}
   2195c:	mov	r1, r4
   21960:	mov	r0, r4
   21964:	bl	6d5c <kmod_new@plt>
   21968:	cmp	r0, #0
   2196c:	str	r0, [r5]
   21970:	beq	219f0 <blkid_probe_get_size@plt+0x1a4d8>
   21974:	ldr	r3, [pc, #128]	; 219fc <blkid_probe_get_size@plt+0x1a4e4>
   21978:	add	r3, pc, r3
   2197c:	ldr	r3, [r3, #4]
   21980:	cmp	r3, #6
   21984:	bgt	219b0 <blkid_probe_get_size@plt+0x1a498>
   21988:	ldr	r1, [pc, #112]	; 21a00 <blkid_probe_get_size@plt+0x1a4e8>
   2198c:	mov	r2, #0
   21990:	add	r1, pc, r1
   21994:	bl	6930 <kmod_set_log_fn@plt>
   21998:	ldr	r3, [pc, #100]	; 21a04 <blkid_probe_get_size@plt+0x1a4ec>
   2199c:	ldr	r0, [pc, r3]
   219a0:	bl	6a20 <kmod_load_resources@plt>
   219a4:	mov	r0, #0
   219a8:	add	sp, sp, #12
   219ac:	pop	{r4, r5, pc}
   219b0:	ldr	r3, [pc, #80]	; 21a08 <blkid_probe_get_size@plt+0x1a4f0>
   219b4:	ldr	r2, [pc, #80]	; 21a0c <blkid_probe_get_size@plt+0x1a4f4>
   219b8:	add	r3, pc, r3
   219bc:	add	r2, pc, r2
   219c0:	str	r2, [sp, #4]
   219c4:	add	r3, r3, #1136	; 0x470
   219c8:	ldr	r2, [pc, #64]	; 21a10 <blkid_probe_get_size@plt+0x1a4f8>
   219cc:	add	r3, r3, #12
   219d0:	str	r3, [sp]
   219d4:	mov	r1, r4
   219d8:	mov	r3, #49	; 0x31
   219dc:	add	r2, pc, r2
   219e0:	ldr	r0, [pc, #44]	; 21a14 <blkid_probe_get_size@plt+0x1a4fc>
   219e4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   219e8:	ldr	r0, [r5]
   219ec:	b	21988 <blkid_probe_get_size@plt+0x1a470>
   219f0:	mvn	r0, #11
   219f4:	b	21954 <blkid_probe_get_size@plt+0x1a43c>
   219f8:	strdeq	r6, [r7], -r4
   219fc:	andeq	r6, r7, r4, asr #15
   21a00:	andeq	r0, r0, r0, lsl #1
   21a04:	muleq	r7, r8, ip
   21a08:	andeq	r7, r4, r0, asr ip
   21a0c:	andeq	r9, r4, r0, ror r2
   21a10:	andeq	r9, r4, r4, lsl #4
   21a14:	andeq	r0, r0, r7, lsl #8
   21a18:	orr	r0, r1, #1024	; 0x400
   21a1c:	mov	r1, #0
   21a20:	b	3a244 <blkid_probe_get_size@plt+0x32d2c>
   21a24:	ldr	r3, [pc, #1176]	; 21ec4 <blkid_probe_get_size@plt+0x1a9ac>
   21a28:	ldr	ip, [pc, #1176]	; 21ec8 <blkid_probe_get_size@plt+0x1a9b0>
   21a2c:	add	r3, pc, r3
   21a30:	ldr	r0, [pc, #1172]	; 21ecc <blkid_probe_get_size@plt+0x1a9b4>
   21a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a38:	add	r0, pc, r0
   21a3c:	ldr	r8, [r3, ip]
   21a40:	ldr	r4, [r0]
   21a44:	sub	sp, sp, #44	; 0x2c
   21a48:	mov	r7, r2
   21a4c:	ldr	r2, [r8]
   21a50:	cmp	r4, #0
   21a54:	str	r2, [sp, #36]	; 0x24
   21a58:	beq	21c4c <blkid_probe_get_size@plt+0x1a734>
   21a5c:	cmp	r1, #2
   21a60:	bgt	21acc <blkid_probe_get_size@plt+0x1a5b4>
   21a64:	ldr	r3, [pc, #1124]	; 21ed0 <blkid_probe_get_size@plt+0x1a9b8>
   21a68:	add	r3, pc, r3
   21a6c:	ldr	r3, [r3, #4]
   21a70:	cmp	r3, #2
   21a74:	ble	21eb8 <blkid_probe_get_size@plt+0x1a9a0>
   21a78:	ldr	r2, [pc, #1108]	; 21ed4 <blkid_probe_get_size@plt+0x1a9bc>
   21a7c:	ldr	r3, [pc, #1108]	; 21ed8 <blkid_probe_get_size@plt+0x1a9c0>
   21a80:	add	r2, pc, r2
   21a84:	ldr	r1, [r7]
   21a88:	add	r3, pc, r3
   21a8c:	str	r2, [sp, #4]
   21a90:	ldr	r2, [pc, #1092]	; 21edc <blkid_probe_get_size@plt+0x1a9c4>
   21a94:	add	r3, r3, #1216	; 0x4c0
   21a98:	str	r1, [sp, #8]
   21a9c:	str	r3, [sp]
   21aa0:	add	r2, pc, r2
   21aa4:	mov	r3, #32
   21aa8:	mov	r1, #1073741846	; 0x40000016
   21aac:	ldr	r0, [pc, #1068]	; 21ee0 <blkid_probe_get_size@plt+0x1a9c8>
   21ab0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21ab4:	ldr	r2, [sp, #36]	; 0x24
   21ab8:	ldr	r3, [r8]
   21abc:	cmp	r2, r3
   21ac0:	bne	21ec0 <blkid_probe_get_size@plt+0x1a9a8>
   21ac4:	add	sp, sp, #44	; 0x2c
   21ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21acc:	ldr	r1, [pc, #1040]	; 21ee4 <blkid_probe_get_size@plt+0x1a9cc>
   21ad0:	ldr	r0, [r7, #4]
   21ad4:	add	r1, pc, r1
   21ad8:	bl	7314 <strcmp@plt>
   21adc:	cmp	r0, #0
   21ae0:	bne	21a64 <blkid_probe_get_size@plt+0x1a54c>
   21ae4:	ldr	r5, [r7, #8]
   21ae8:	cmp	r5, #0
   21aec:	beq	21c4c <blkid_probe_get_size@plt+0x1a734>
   21af0:	ldr	r2, [pc, #1008]	; 21ee8 <blkid_probe_get_size@plt+0x1a9d0>
   21af4:	ldr	r3, [pc, #1008]	; 21eec <blkid_probe_get_size@plt+0x1a9d4>
   21af8:	add	r2, pc, r2
   21afc:	add	r3, pc, r3
   21b00:	add	r7, r7, #8
   21b04:	add	sl, sp, #32
   21b08:	add	r2, r2, #1168	; 0x490
   21b0c:	add	r3, r3, #1168	; 0x490
   21b10:	str	r2, [sp, #20]
   21b14:	str	r3, [sp, #24]
   21b18:	str	r8, [sp, #28]
   21b1c:	ldr	r3, [pc, #972]	; 21ef0 <blkid_probe_get_size@plt+0x1a9d8>
   21b20:	mov	r1, #0
   21b24:	add	r3, pc, r3
   21b28:	str	r1, [sp, #32]
   21b2c:	ldr	r3, [r3]
   21b30:	cmp	r3, #6
   21b34:	bgt	21dac <blkid_probe_get_size@plt+0x1a894>
   21b38:	mov	r1, r5
   21b3c:	mov	r0, r4
   21b40:	mov	r2, sl
   21b44:	bl	7248 <kmod_module_new_from_lookup@plt>
   21b48:	subs	r1, r0, #0
   21b4c:	blt	21c98 <blkid_probe_get_size@plt+0x1a780>
   21b50:	ldr	r4, [sp, #32]
   21b54:	cmp	r4, #0
   21b58:	beq	21e3c <blkid_probe_get_size@plt+0x1a924>
   21b5c:	ldr	r9, [pc, #912]	; 21ef4 <blkid_probe_get_size@plt+0x1a9dc>
   21b60:	ldr	fp, [pc, #912]	; 21ef8 <blkid_probe_get_size@plt+0x1a9e0>
   21b64:	add	r9, pc, r9
   21b68:	add	fp, pc, fp
   21b6c:	b	21ba8 <blkid_probe_get_size@plt+0x1a690>
   21b70:	ldr	r3, [pc, #900]	; 21efc <blkid_probe_get_size@plt+0x1a9e4>
   21b74:	add	r3, pc, r3
   21b78:	ldr	r3, [r3]
   21b7c:	cmp	r3, #6
   21b80:	bgt	21d68 <blkid_probe_get_size@plt+0x1a850>
   21b84:	cmp	r5, #0
   21b88:	beq	21b94 <blkid_probe_get_size@plt+0x1a67c>
   21b8c:	mov	r0, r5
   21b90:	bl	6bdc <kmod_module_unref@plt>
   21b94:	mov	r1, r4
   21b98:	ldr	r0, [sp, #32]
   21b9c:	bl	6918 <kmod_list_next@plt>
   21ba0:	subs	r4, r0, #0
   21ba4:	beq	21ce0 <blkid_probe_get_size@plt+0x1a7c8>
   21ba8:	mov	r0, r4
   21bac:	bl	6a38 <kmod_module_get_module@plt>
   21bb0:	mov	r5, r0
   21bb4:	bl	717c <kmod_module_get_initstate@plt>
   21bb8:	subs	r6, r0, #0
   21bbc:	beq	21c54 <blkid_probe_get_size@plt+0x1a73c>
   21bc0:	cmp	r6, #1
   21bc4:	beq	21b70 <blkid_probe_get_size@plt+0x1a658>
   21bc8:	mov	r6, #0
   21bcc:	str	r6, [sp, #4]
   21bd0:	str	r6, [sp]
   21bd4:	mov	r3, r6
   21bd8:	mov	r2, r6
   21bdc:	mov	r1, #131072	; 0x20000
   21be0:	mov	r0, r5
   21be4:	bl	6d80 <kmod_module_probe_insert_module@plt>
   21be8:	subs	r8, r0, #0
   21bec:	bne	21d08 <blkid_probe_get_size@plt+0x1a7f0>
   21bf0:	ldr	r3, [pc, #776]	; 21f00 <blkid_probe_get_size@plt+0x1a9e8>
   21bf4:	add	r3, pc, r3
   21bf8:	ldr	r3, [r3]
   21bfc:	cmp	r3, #6
   21c00:	ble	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21c04:	mov	r0, r5
   21c08:	bl	705c <kmod_module_get_name@plt>
   21c0c:	ldr	r2, [pc, #752]	; 21f04 <blkid_probe_get_size@plt+0x1a9ec>
   21c10:	ldr	r3, [pc, #752]	; 21f08 <blkid_probe_get_size@plt+0x1a9f0>
   21c14:	add	r2, pc, r2
   21c18:	str	r2, [sp, #4]
   21c1c:	add	r3, pc, r3
   21c20:	ldr	r2, [pc, #740]	; 21f0c <blkid_probe_get_size@plt+0x1a9f4>
   21c24:	add	r3, r3, #1168	; 0x490
   21c28:	str	r3, [sp]
   21c2c:	mov	r1, r8
   21c30:	mov	r3, #51	; 0x33
   21c34:	add	r2, pc, r2
   21c38:	str	r0, [sp, #8]
   21c3c:	mov	r0, #7
   21c40:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21c44:	b	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21c48:	ldr	r8, [sp, #28]
   21c4c:	mov	r0, #0
   21c50:	b	21ab4 <blkid_probe_get_size@plt+0x1a59c>
   21c54:	ldr	r3, [r9]
   21c58:	cmp	r3, #6
   21c5c:	ble	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21c60:	mov	r0, r5
   21c64:	bl	705c <kmod_module_get_name@plt>
   21c68:	ldr	r3, [pc, #672]	; 21f10 <blkid_probe_get_size@plt+0x1a9f8>
   21c6c:	ldr	r2, [sp, #20]
   21c70:	add	r3, pc, r3
   21c74:	str	r2, [sp]
   21c78:	str	r3, [sp, #4]
   21c7c:	mov	r1, r6
   21c80:	mov	r3, #39	; 0x27
   21c84:	mov	r2, fp
   21c88:	str	r0, [sp, #8]
   21c8c:	mov	r0, #7
   21c90:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21c94:	b	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21c98:	ldr	r3, [pc, #628]	; 21f14 <blkid_probe_get_size@plt+0x1a9fc>
   21c9c:	add	r3, pc, r3
   21ca0:	ldr	r3, [r3]
   21ca4:	cmp	r3, #6
   21ca8:	ble	21ce0 <blkid_probe_get_size@plt+0x1a7c8>
   21cac:	ldr	r2, [pc, #612]	; 21f18 <blkid_probe_get_size@plt+0x1aa00>
   21cb0:	ldr	r3, [pc, #612]	; 21f1c <blkid_probe_get_size@plt+0x1aa04>
   21cb4:	add	r2, pc, r2
   21cb8:	add	r3, pc, r3
   21cbc:	str	r2, [sp, #4]
   21cc0:	ldr	r2, [pc, #600]	; 21f20 <blkid_probe_get_size@plt+0x1aa08>
   21cc4:	add	r3, r3, #1168	; 0x490
   21cc8:	str	r3, [sp]
   21ccc:	str	r5, [sp, #8]
   21cd0:	mov	r3, #21
   21cd4:	add	r2, pc, r2
   21cd8:	mov	r0, #7
   21cdc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21ce0:	ldr	r0, [sp, #32]
   21ce4:	cmp	r0, #0
   21ce8:	beq	21cf0 <blkid_probe_get_size@plt+0x1a7d8>
   21cec:	bl	6eac <kmod_module_unref_list@plt>
   21cf0:	ldr	r5, [r7, #4]!
   21cf4:	cmp	r5, #0
   21cf8:	beq	21c48 <blkid_probe_get_size@plt+0x1a730>
   21cfc:	ldr	r3, [pc, #544]	; 21f24 <blkid_probe_get_size@plt+0x1aa0c>
   21d00:	ldr	r4, [pc, r3]
   21d04:	b	21b1c <blkid_probe_get_size@plt+0x1a604>
   21d08:	cmp	r8, #131072	; 0x20000
   21d0c:	beq	21de4 <blkid_probe_get_size@plt+0x1a8cc>
   21d10:	cmp	r8, #0
   21d14:	bge	21e88 <blkid_probe_get_size@plt+0x1a970>
   21d18:	ldr	r3, [pc, #520]	; 21f28 <blkid_probe_get_size@plt+0x1aa10>
   21d1c:	add	r3, pc, r3
   21d20:	ldr	r3, [r3]
   21d24:	cmp	r3, #6
   21d28:	ble	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21d2c:	mov	r0, r5
   21d30:	bl	705c <kmod_module_get_name@plt>
   21d34:	ldr	r2, [sp, #24]
   21d38:	ldr	r3, [pc, #492]	; 21f2c <blkid_probe_get_size@plt+0x1aa14>
   21d3c:	str	r2, [sp]
   21d40:	ldr	r2, [pc, #488]	; 21f30 <blkid_probe_get_size@plt+0x1aa18>
   21d44:	add	r3, pc, r3
   21d48:	str	r3, [sp, #4]
   21d4c:	mov	r1, r8
   21d50:	mov	r3, #64	; 0x40
   21d54:	add	r2, pc, r2
   21d58:	str	r0, [sp, #8]
   21d5c:	mov	r0, #7
   21d60:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21d64:	b	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21d68:	mov	r0, r5
   21d6c:	bl	705c <kmod_module_get_name@plt>
   21d70:	ldr	r2, [pc, #444]	; 21f34 <blkid_probe_get_size@plt+0x1aa1c>
   21d74:	ldr	r3, [pc, #444]	; 21f38 <blkid_probe_get_size@plt+0x1aa20>
   21d78:	add	r2, pc, r2
   21d7c:	str	r2, [sp, #4]
   21d80:	add	r3, pc, r3
   21d84:	ldr	r2, [pc, #432]	; 21f3c <blkid_probe_get_size@plt+0x1aa24>
   21d88:	add	r3, r3, #1168	; 0x490
   21d8c:	str	r3, [sp]
   21d90:	add	r2, pc, r2
   21d94:	mov	r3, #43	; 0x2b
   21d98:	mov	r1, #0
   21d9c:	str	r0, [sp, #8]
   21da0:	mov	r0, #7
   21da4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21da8:	b	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21dac:	ldr	r2, [pc, #396]	; 21f40 <blkid_probe_get_size@plt+0x1aa28>
   21db0:	ldr	r3, [pc, #396]	; 21f44 <blkid_probe_get_size@plt+0x1aa2c>
   21db4:	add	r2, pc, r2
   21db8:	str	r2, [sp, #4]
   21dbc:	add	r3, pc, r3
   21dc0:	ldr	r2, [pc, #384]	; 21f48 <blkid_probe_get_size@plt+0x1aa30>
   21dc4:	add	r3, r3, #1168	; 0x490
   21dc8:	str	r3, [sp]
   21dcc:	str	r5, [sp, #8]
   21dd0:	mov	r3, #16
   21dd4:	add	r2, pc, r2
   21dd8:	mov	r0, #7
   21ddc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21de0:	b	21b38 <blkid_probe_get_size@plt+0x1a620>
   21de4:	ldr	r3, [pc, #352]	; 21f4c <blkid_probe_get_size@plt+0x1aa34>
   21de8:	add	r3, pc, r3
   21dec:	ldr	r3, [r3]
   21df0:	cmp	r3, #6
   21df4:	ble	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21df8:	mov	r0, r5
   21dfc:	bl	705c <kmod_module_get_name@plt>
   21e00:	ldr	r2, [pc, #328]	; 21f50 <blkid_probe_get_size@plt+0x1aa38>
   21e04:	ldr	r3, [pc, #328]	; 21f54 <blkid_probe_get_size@plt+0x1aa3c>
   21e08:	add	r2, pc, r2
   21e0c:	str	r2, [sp, #4]
   21e10:	add	r3, pc, r3
   21e14:	ldr	r2, [pc, #316]	; 21f58 <blkid_probe_get_size@plt+0x1aa40>
   21e18:	add	r3, r3, #1168	; 0x490
   21e1c:	str	r3, [sp]
   21e20:	mov	r1, r6
   21e24:	mov	r3, #54	; 0x36
   21e28:	add	r2, pc, r2
   21e2c:	str	r0, [sp, #8]
   21e30:	mov	r0, #7
   21e34:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21e38:	b	21b84 <blkid_probe_get_size@plt+0x1a66c>
   21e3c:	ldr	r3, [pc, #280]	; 21f5c <blkid_probe_get_size@plt+0x1aa44>
   21e40:	add	r3, pc, r3
   21e44:	ldr	r3, [r3]
   21e48:	cmp	r3, #6
   21e4c:	ble	21cf0 <blkid_probe_get_size@plt+0x1a7d8>
   21e50:	ldr	r2, [pc, #264]	; 21f60 <blkid_probe_get_size@plt+0x1aa48>
   21e54:	ldr	r3, [pc, #264]	; 21f64 <blkid_probe_get_size@plt+0x1aa4c>
   21e58:	add	r2, pc, r2
   21e5c:	str	r2, [sp, #4]
   21e60:	add	r3, pc, r3
   21e64:	ldr	r2, [pc, #252]	; 21f68 <blkid_probe_get_size@plt+0x1aa50>
   21e68:	add	r3, r3, #1168	; 0x490
   21e6c:	str	r3, [sp]
   21e70:	str	r5, [sp, #8]
   21e74:	mov	r3, #25
   21e78:	add	r2, pc, r2
   21e7c:	mov	r0, #7
   21e80:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   21e84:	b	21ce0 <blkid_probe_get_size@plt+0x1a7c8>
   21e88:	ldr	r3, [pc, #220]	; 21f6c <blkid_probe_get_size@plt+0x1aa54>
   21e8c:	ldr	r2, [pc, #220]	; 21f70 <blkid_probe_get_size@plt+0x1aa58>
   21e90:	add	r3, pc, r3
   21e94:	add	r3, r3, #1184	; 0x4a0
   21e98:	ldr	r1, [pc, #212]	; 21f74 <blkid_probe_get_size@plt+0x1aa5c>
   21e9c:	add	r3, r3, #8
   21ea0:	str	r3, [sp]
   21ea4:	mov	r0, r6
   21ea8:	mov	r3, #56	; 0x38
   21eac:	add	r2, pc, r2
   21eb0:	add	r1, pc, r1
   21eb4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   21eb8:	mvn	r0, #21
   21ebc:	b	21ab4 <blkid_probe_get_size@plt+0x1a59c>
   21ec0:	bl	6fb4 <__stack_chk_fail@plt>
   21ec4:	andeq	r6, r7, ip, lsr r1
   21ec8:	andeq	r0, r0, ip, lsr r4
   21ecc:	strdeq	r6, [r7], -ip
   21ed0:	ldrdeq	r6, [r7], -r4
   21ed4:	andeq	r9, r4, ip, asr #5
   21ed8:	andeq	r7, r4, r0, lsl #23
   21edc:	andeq	r9, r4, r0, asr #2
   21ee0:	andeq	r0, r0, r3, lsl #8
   21ee4:	andeq	sl, r4, ip, ror #24
   21ee8:	andeq	r7, r4, r0, lsl fp
   21eec:	andeq	r7, r4, ip, lsl #22
   21ef0:	andeq	r6, r7, r8, lsl r6
   21ef4:	ldrdeq	r6, [r7], -r8
   21ef8:	ldrdeq	r9, [r4], -r8
   21efc:	andeq	r6, r7, r8, asr #11
   21f00:	andeq	r6, r7, r8, asr #10
   21f04:	ldrdeq	r9, [r4], -r8
   21f08:	andeq	r7, r4, ip, ror #19
   21f0c:	andeq	r9, r4, ip
   21f10:	andeq	r9, r4, r4, asr #32
   21f14:	andeq	r6, r7, r0, lsr #9
   21f18:			; <UNDEFINED> instruction: 0x00048fbc
   21f1c:	andeq	r7, r4, r0, asr r9
   21f20:	andeq	r8, r4, ip, ror #30
   21f24:	andeq	r6, r7, r4, lsr r9
   21f28:	andeq	r6, r7, r0, lsr #8
   21f2c:	andeq	r8, r4, r4, ror #31
   21f30:	andeq	r8, r4, ip, ror #29
   21f34:	andeq	r8, r4, r4, asr pc
   21f38:	andeq	r7, r4, r8, lsl #17
   21f3c:			; <UNDEFINED> instruction: 0x00048eb0
   21f40:	andeq	r8, r4, r8, lsr #29
   21f44:	andeq	r7, r4, ip, asr #16
   21f48:	andeq	r8, r4, ip, ror #28
   21f4c:	andeq	r6, r7, r4, asr r3
   21f50:	strdeq	r8, [r4], -ip
   21f54:	strdeq	r7, [r4], -r8
   21f58:	andeq	r8, r4, r8, lsl lr
   21f5c:	strdeq	r6, [r7], -ip
   21f60:	andeq	r8, r4, r0, asr #28
   21f64:	andeq	r7, r4, r8, lsr #15
   21f68:	andeq	r8, r4, r8, asr #27
   21f6c:	andeq	r7, r4, r8, ror r7
   21f70:	muleq	r4, r4, sp
   21f74:	andeq	r8, r4, r0, ror lr
   21f78:	ldr	ip, [pc, #668]	; 2221c <blkid_probe_get_size@plt+0x1ad04>
   21f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f80:	add	ip, pc, ip
   21f84:	ldr	lr, [pc, #660]	; 22220 <blkid_probe_get_size@plt+0x1ad08>
   21f88:	sub	sp, sp, #60	; 0x3c
   21f8c:	cmp	r1, #0
   21f90:	mov	fp, r2
   21f94:	strd	r0, [sp, #32]
   21f98:	ldr	r0, [ip, lr]
   21f9c:	mov	r1, ip
   21fa0:	str	r0, [sp, #28]
   21fa4:	ldr	r2, [r0]
   21fa8:	ldr	r9, [sp, #108]	; 0x6c
   21fac:	ldr	r1, [sp, #100]	; 0x64
   21fb0:	str	r2, [sp, #52]	; 0x34
   21fb4:	ldr	r5, [sp, #112]	; 0x70
   21fb8:	beq	2213c <blkid_probe_get_size@plt+0x1ac24>
   21fbc:	cmp	r3, #0
   21fc0:	beq	22168 <blkid_probe_get_size@plt+0x1ac50>
   21fc4:	cmp	r1, #0
   21fc8:	beq	22194 <blkid_probe_get_size@plt+0x1ac7c>
   21fcc:	cmp	r9, #0
   21fd0:	beq	221c0 <blkid_probe_get_size@plt+0x1aca8>
   21fd4:	cmp	r5, #0
   21fd8:	beq	221ec <blkid_probe_get_size@plt+0x1acd4>
   21fdc:	ldrb	r4, [r9]
   21fe0:	cmp	r4, #0
   21fe4:	beq	2209c <blkid_probe_get_size@plt+0x1ab84>
   21fe8:	ldr	r4, [pc, #564]	; 22224 <blkid_probe_get_size@plt+0x1ad0c>
   21fec:	str	r9, [sp, #44]	; 0x2c
   21ff0:	add	r4, pc, r4
   21ff4:	add	r4, r4, #1040	; 0x410
   21ff8:	add	r8, sp, #48	; 0x30
   21ffc:	add	r7, sp, #44	; 0x2c
   22000:	mov	r6, #0
   22004:	b	2204c <blkid_probe_get_size@plt+0x1ab34>
   22008:	cmp	r0, #0
   2200c:	blt	220c4 <blkid_probe_get_size@plt+0x1abac>
   22010:	ldr	sl, [sp, #48]	; 0x30
   22014:	beq	2212c <blkid_probe_get_size@plt+0x1ac14>
   22018:	mov	r2, sl
   2201c:	mov	r1, #52	; 0x34
   22020:	mov	r0, r4
   22024:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   22028:	mov	ip, #1
   2202c:	and	r1, r0, #31
   22030:	lsr	r0, r0, #5
   22034:	add	r3, r5, r0, lsl #2
   22038:	mov	r0, sl
   2203c:	ldr	r2, [r3, #84]	; 0x54
   22040:	orr	r2, r2, ip, lsl r1
   22044:	str	r2, [r3, #84]	; 0x54
   22048:	bl	69f0 <free@plt>
   2204c:	mov	r2, #0
   22050:	mov	r1, r8
   22054:	mov	r0, r7
   22058:	str	r6, [sp, #48]	; 0x30
   2205c:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   22060:	cmn	r0, #12
   22064:	bne	22008 <blkid_probe_get_size@plt+0x1aaf0>
   22068:	ldr	r3, [pc, #440]	; 22228 <blkid_probe_get_size@plt+0x1ad10>
   2206c:	ldr	r1, [pc, #440]	; 2222c <blkid_probe_get_size@plt+0x1ad14>
   22070:	add	r3, pc, r3
   22074:	add	r3, r3, #1248	; 0x4e0
   22078:	ldr	r2, [pc, #432]	; 22230 <blkid_probe_get_size@plt+0x1ad18>
   2207c:	add	r3, r3, #8
   22080:	add	r1, pc, r1
   22084:	mov	r0, #1
   22088:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   2208c:	mov	r4, r0
   22090:	ldr	r0, [sp, #48]	; 0x30
   22094:	bl	69f0 <free@plt>
   22098:	b	220a4 <blkid_probe_get_size@plt+0x1ab8c>
   2209c:	str	r4, [r5, #84]	; 0x54
   220a0:	str	r4, [r5, #88]	; 0x58
   220a4:	ldr	r3, [sp, #28]
   220a8:	ldr	r2, [sp, #52]	; 0x34
   220ac:	mov	r0, r4
   220b0:	ldr	r3, [r3]
   220b4:	cmp	r2, r3
   220b8:	bne	22218 <blkid_probe_get_size@plt+0x1ad00>
   220bc:	add	sp, sp, #60	; 0x3c
   220c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220c4:	ldr	r3, [pc, #360]	; 22234 <blkid_probe_get_size@plt+0x1ad1c>
   220c8:	add	r3, pc, r3
   220cc:	ldr	r3, [r3, #4]
   220d0:	cmp	r3, #2
   220d4:	ldrle	sl, [sp, #48]	; 0x30
   220d8:	ble	2212c <blkid_probe_get_size@plt+0x1ac14>
   220dc:	ldr	r1, [pc, #340]	; 22238 <blkid_probe_get_size@plt+0x1ad20>
   220e0:	ldr	lr, [pc, #340]	; 2223c <blkid_probe_get_size@plt+0x1ad24>
   220e4:	add	r1, pc, r1
   220e8:	add	r1, r1, #1248	; 0x4e0
   220ec:	add	r1, r1, #8
   220f0:	str	r1, [sp, #12]
   220f4:	ldr	r1, [pc, #324]	; 22240 <blkid_probe_get_size@plt+0x1ad28>
   220f8:	ldr	ip, [pc, #324]	; 22244 <blkid_probe_get_size@plt+0x1ad2c>
   220fc:	add	r1, pc, r1
   22100:	add	ip, pc, ip
   22104:	str	r0, [sp]
   22108:	stmib	sp, {r1, lr}
   2210c:	str	r9, [sp, #20]
   22110:	mov	r3, fp
   22114:	ldr	r2, [sp, #36]	; 0x24
   22118:	ldr	r0, [sp, #32]
   2211c:	str	ip, [sp, #16]
   22120:	mov	r1, #3
   22124:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   22128:	ldr	sl, [sp, #48]	; 0x30
   2212c:	mov	r0, sl
   22130:	bl	69f0 <free@plt>
   22134:	mov	r4, #0
   22138:	b	220a4 <blkid_probe_get_size@plt+0x1ab8c>
   2213c:	ldr	r2, [pc, #260]	; 22248 <blkid_probe_get_size@plt+0x1ad30>
   22140:	ldr	r1, [pc, #260]	; 2224c <blkid_probe_get_size@plt+0x1ad34>
   22144:	add	r2, pc, r2
   22148:	add	r2, r2, #1232	; 0x4d0
   2214c:	str	r2, [sp]
   22150:	ldr	r2, [pc, #248]	; 22250 <blkid_probe_get_size@plt+0x1ad38>
   22154:	ldr	r3, [pc, #248]	; 22254 <blkid_probe_get_size@plt+0x1ad3c>
   22158:	add	r2, pc, r2
   2215c:	add	r1, pc, r1
   22160:	mov	r0, #1
   22164:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22168:	ldr	r2, [pc, #232]	; 22258 <blkid_probe_get_size@plt+0x1ad40>
   2216c:	ldr	r1, [pc, #232]	; 2225c <blkid_probe_get_size@plt+0x1ad44>
   22170:	add	r2, pc, r2
   22174:	add	r2, r2, #1232	; 0x4d0
   22178:	str	r2, [sp]
   2217c:	ldr	r2, [pc, #220]	; 22260 <blkid_probe_get_size@plt+0x1ad48>
   22180:	mov	r3, #752	; 0x2f0
   22184:	add	r2, pc, r2
   22188:	add	r1, pc, r1
   2218c:	mov	r0, #1
   22190:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22194:	ldr	r2, [pc, #200]	; 22264 <blkid_probe_get_size@plt+0x1ad4c>
   22198:	ldr	r1, [pc, #200]	; 22268 <blkid_probe_get_size@plt+0x1ad50>
   2219c:	add	r2, pc, r2
   221a0:	add	r2, r2, #1232	; 0x4d0
   221a4:	str	r2, [sp]
   221a8:	ldr	r2, [pc, #188]	; 2226c <blkid_probe_get_size@plt+0x1ad54>
   221ac:	ldr	r3, [pc, #188]	; 22270 <blkid_probe_get_size@plt+0x1ad58>
   221b0:	add	r2, pc, r2
   221b4:	add	r1, pc, r1
   221b8:	mov	r0, #1
   221bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   221c0:	ldr	r2, [pc, #172]	; 22274 <blkid_probe_get_size@plt+0x1ad5c>
   221c4:	ldr	r1, [pc, #172]	; 22278 <blkid_probe_get_size@plt+0x1ad60>
   221c8:	add	r2, pc, r2
   221cc:	add	r2, r2, #1232	; 0x4d0
   221d0:	str	r2, [sp]
   221d4:	ldr	r2, [pc, #160]	; 2227c <blkid_probe_get_size@plt+0x1ad64>
   221d8:	ldr	r3, [pc, #160]	; 22280 <blkid_probe_get_size@plt+0x1ad68>
   221dc:	add	r2, pc, r2
   221e0:	add	r1, pc, r1
   221e4:	mov	r0, #1
   221e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   221ec:	ldr	r2, [pc, #144]	; 22284 <blkid_probe_get_size@plt+0x1ad6c>
   221f0:	ldr	r1, [pc, #144]	; 22288 <blkid_probe_get_size@plt+0x1ad70>
   221f4:	add	r2, pc, r2
   221f8:	add	r2, r2, #1232	; 0x4d0
   221fc:	str	r2, [sp]
   22200:	ldr	r2, [pc, #132]	; 2228c <blkid_probe_get_size@plt+0x1ad74>
   22204:	ldr	r3, [pc, #132]	; 22290 <blkid_probe_get_size@plt+0x1ad78>
   22208:	add	r2, pc, r2
   2220c:	add	r1, pc, r1
   22210:	mov	r0, #1
   22214:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22218:	bl	6fb4 <__stack_chk_fail@plt>
   2221c:	andeq	r5, r7, r8, ror #23
   22220:	andeq	r0, r0, ip, lsr r4
   22224:	andeq	r7, r6, r0, ror r7
   22228:	muleq	r4, r8, r5
   2222c:	andeq	r8, r4, r8, lsl #6
   22230:	andeq	r0, r0, r1, lsl #6
   22234:	andeq	r6, r7, r4, ror r0
   22238:	andeq	r7, r4, r4, lsr #10
   2223c:	andeq	r0, r0, r3, lsl #6
   22240:	andeq	r8, r4, ip, lsl #5
   22244:	andeq	r8, r4, r8, ror #24
   22248:	andeq	r7, r4, r4, asr #9
   2224c:	andeq	r8, r4, ip, asr #4
   22250:	andeq	r8, r4, r0, lsr r2
   22254:	andeq	r0, r0, pc, ror #5
   22258:	muleq	r4, r8, r4
   2225c:	andeq	r8, r4, ip, lsr #4
   22260:	andeq	r8, r4, r4, lsl #4
   22264:	andeq	r7, r4, ip, ror #8
   22268:	andeq	r7, r4, r8, ror #31
   2226c:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   22270:	strdeq	r0, [r0], -r1
   22274:	andeq	r7, r4, r0, asr #8
   22278:	ldrdeq	r8, [r4], -ip
   2227c:	andeq	r8, r4, ip, lsr #3
   22280:	strdeq	r0, [r0], -r2
   22284:	andeq	r7, r4, r4, lsl r4
   22288:	strdeq	r2, [r5], -r0
   2228c:	andeq	r8, r4, r0, lsl #3
   22290:	strdeq	r0, [r0], -r3
   22294:	ldr	r3, [pc, #816]	; 225cc <blkid_probe_get_size@plt+0x1b0b4>
   22298:	ldr	ip, [pc, #816]	; 225d0 <blkid_probe_get_size@plt+0x1b0b8>
   2229c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222a0:	add	r3, pc, r3
   222a4:	sub	sp, sp, #76	; 0x4c
   222a8:	cmp	r1, #0
   222ac:	ldr	r4, [sp, #124]	; 0x7c
   222b0:	strd	r0, [sp, #28]
   222b4:	ldr	r1, [r3, ip]
   222b8:	str	r2, [sp, #36]	; 0x24
   222bc:	str	r1, [sp, #48]	; 0x30
   222c0:	ldr	r3, [r1]
   222c4:	ldr	r2, [sp, #116]	; 0x74
   222c8:	str	r3, [sp, #68]	; 0x44
   222cc:	ldr	r3, [sp, #128]	; 0x80
   222d0:	str	r3, [sp, #44]	; 0x2c
   222d4:	beq	22510 <blkid_probe_get_size@plt+0x1aff8>
   222d8:	cmp	r2, #0
   222dc:	beq	2253c <blkid_probe_get_size@plt+0x1b024>
   222e0:	cmp	r4, #0
   222e4:	beq	22568 <blkid_probe_get_size@plt+0x1b050>
   222e8:	ldr	r3, [sp, #44]	; 0x2c
   222ec:	cmp	r3, #0
   222f0:	beq	22594 <blkid_probe_get_size@plt+0x1b07c>
   222f4:	mov	r1, #4
   222f8:	mov	r0, #1
   222fc:	bl	7164 <calloc@plt>
   22300:	subs	r5, r0, #0
   22304:	beq	225c0 <blkid_probe_get_size@plt+0x1b0a8>
   22308:	ldr	r2, [pc, #708]	; 225d4 <blkid_probe_get_size@plt+0x1b0bc>
   2230c:	mvn	r3, #0
   22310:	add	r8, sp, #60	; 0x3c
   22314:	add	r9, sp, #64	; 0x40
   22318:	str	r3, [r5]
   2231c:	mov	r1, r8
   22320:	mov	r0, r9
   22324:	mov	r3, #0
   22328:	add	r2, pc, r2
   2232c:	str	r4, [sp, #64]	; 0x40
   22330:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   22334:	cmp	r0, #0
   22338:	beq	223ec <blkid_probe_get_size@plt+0x1aed4>
   2233c:	ldr	r3, [pc, #660]	; 225d8 <blkid_probe_get_size@plt+0x1b0c0>
   22340:	ldr	r7, [pc, #660]	; 225dc <blkid_probe_get_size@plt+0x1b0c4>
   22344:	add	r3, pc, r3
   22348:	add	r7, pc, r7
   2234c:	add	r3, r3, #1296	; 0x510
   22350:	add	r3, r3, #12
   22354:	add	r2, r7, #1296	; 0x510
   22358:	mov	r6, #0
   2235c:	str	r3, [sp, #52]	; 0x34
   22360:	add	r3, r2, #12
   22364:	str	r3, [sp, #40]	; 0x28
   22368:	ldr	r1, [sp, #60]	; 0x3c
   2236c:	bl	68dc <strndup@plt>
   22370:	subs	r4, r0, #0
   22374:	beq	22500 <blkid_probe_get_size@plt+0x1afe8>
   22378:	ldr	r0, [pc, #608]	; 225e0 <blkid_probe_get_size@plt+0x1b0c8>
   2237c:	mov	r2, r4
   22380:	add	r0, pc, r0
   22384:	add	r0, r0, #1248	; 0x4e0
   22388:	mov	r1, #7
   2238c:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   22390:	cmp	r0, #0
   22394:	subge	r2, r5, #4
   22398:	blt	224a8 <blkid_probe_get_size@plt+0x1af90>
   2239c:	ldr	fp, [r2, #4]!
   223a0:	cmn	fp, #1
   223a4:	beq	22470 <blkid_probe_get_size@plt+0x1af58>
   223a8:	cmp	fp, r0
   223ac:	bne	2239c <blkid_probe_get_size@plt+0x1ae84>
   223b0:	ldr	r3, [pc, #556]	; 225e4 <blkid_probe_get_size@plt+0x1b0cc>
   223b4:	add	r3, pc, r3
   223b8:	ldr	r3, [r3, #4]
   223bc:	cmp	r3, #4
   223c0:	bgt	2242c <blkid_probe_get_size@plt+0x1af14>
   223c4:	mov	r0, r4
   223c8:	bl	69f0 <free@plt>
   223cc:	ldr	r2, [pc, #532]	; 225e8 <blkid_probe_get_size@plt+0x1b0d0>
   223d0:	mov	r3, #0
   223d4:	add	r2, pc, r2
   223d8:	mov	r1, r8
   223dc:	mov	r0, r9
   223e0:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   223e4:	cmp	r0, #0
   223e8:	bne	22368 <blkid_probe_get_size@plt+0x1ae50>
   223ec:	ldr	r4, [sp, #44]	; 0x2c
   223f0:	ldr	r0, [r4]
   223f4:	bl	69f0 <free@plt>
   223f8:	str	r5, [r4]
   223fc:	mov	r5, #0
   22400:	mov	r4, r5
   22404:	mov	r0, r5
   22408:	bl	69f0 <free@plt>
   2240c:	ldr	r3, [sp, #48]	; 0x30
   22410:	ldr	r2, [sp, #68]	; 0x44
   22414:	mov	r0, r4
   22418:	ldr	r3, [r3]
   2241c:	cmp	r2, r3
   22420:	bne	225c8 <blkid_probe_get_size@plt+0x1b0b0>
   22424:	add	sp, sp, #76	; 0x4c
   22428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2242c:	ldr	r3, [pc, #440]	; 225ec <blkid_probe_get_size@plt+0x1b0d4>
   22430:	ldr	r2, [pc, #440]	; 225f0 <blkid_probe_get_size@plt+0x1b0d8>
   22434:	ldr	r0, [pc, #440]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   22438:	add	r3, pc, r3
   2243c:	mov	r1, #0
   22440:	ldr	ip, [sp, #40]	; 0x28
   22444:	add	r2, pc, r2
   22448:	stm	sp, {r1, r3}
   2244c:	str	r2, [sp, #16]
   22450:	str	r0, [sp, #8]
   22454:	str	r4, [sp, #20]
   22458:	str	ip, [sp, #12]
   2245c:	ldrd	r2, [sp, #32]
   22460:	mov	r1, #5
   22464:	ldr	r0, [sp, #28]
   22468:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   2246c:	b	223c4 <blkid_probe_get_size@plt+0x1aeac>
   22470:	lsl	sl, r6, #2
   22474:	str	r0, [r5, r6, lsl #2]
   22478:	add	r1, sl, #8
   2247c:	mov	r0, r5
   22480:	bl	6e94 <realloc@plt>
   22484:	add	r6, r6, #1
   22488:	subs	r7, r0, #0
   2248c:	beq	22500 <blkid_probe_get_size@plt+0x1afe8>
   22490:	add	r2, r7, sl
   22494:	mov	r0, r4
   22498:	str	fp, [r2, #4]
   2249c:	bl	69f0 <free@plt>
   224a0:	mov	r5, r7
   224a4:	b	223cc <blkid_probe_get_size@plt+0x1aeb4>
   224a8:	ldr	r3, [pc, #328]	; 225f8 <blkid_probe_get_size@plt+0x1b0e0>
   224ac:	add	r3, pc, r3
   224b0:	ldr	r3, [r3, #4]
   224b4:	cmp	r3, #2
   224b8:	ble	223c4 <blkid_probe_get_size@plt+0x1aeac>
   224bc:	ldr	r3, [pc, #312]	; 225fc <blkid_probe_get_size@plt+0x1b0e4>
   224c0:	ldr	r2, [pc, #312]	; 22600 <blkid_probe_get_size@plt+0x1b0e8>
   224c4:	ldr	r0, [pc, #296]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   224c8:	add	r3, pc, r3
   224cc:	mov	r1, #0
   224d0:	ldr	ip, [sp, #52]	; 0x34
   224d4:	add	r2, pc, r2
   224d8:	stm	sp, {r1, r3}
   224dc:	str	r2, [sp, #16]
   224e0:	str	r0, [sp, #8]
   224e4:	str	r4, [sp, #20]
   224e8:	str	ip, [sp, #12]
   224ec:	ldrd	r2, [sp, #32]
   224f0:	mov	r1, #3
   224f4:	ldr	r0, [sp, #28]
   224f8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   224fc:	b	223c4 <blkid_probe_get_size@plt+0x1aeac>
   22500:	mov	r0, r4
   22504:	bl	69f0 <free@plt>
   22508:	mvn	r4, #11
   2250c:	b	22404 <blkid_probe_get_size@plt+0x1aeec>
   22510:	ldr	r2, [pc, #236]	; 22604 <blkid_probe_get_size@plt+0x1b0ec>
   22514:	ldr	r1, [pc, #236]	; 22608 <blkid_probe_get_size@plt+0x1b0f0>
   22518:	add	r2, pc, r2
   2251c:	add	r2, r2, #1280	; 0x500
   22520:	str	r2, [sp]
   22524:	ldr	r2, [pc, #224]	; 2260c <blkid_probe_get_size@plt+0x1b0f4>
   22528:	ldr	r3, [pc, #196]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   2252c:	add	r2, pc, r2
   22530:	add	r1, pc, r1
   22534:	mov	r0, #1
   22538:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2253c:	ldr	r2, [pc, #204]	; 22610 <blkid_probe_get_size@plt+0x1b0f8>
   22540:	ldr	r1, [pc, #204]	; 22614 <blkid_probe_get_size@plt+0x1b0fc>
   22544:	add	r2, pc, r2
   22548:	add	r2, r2, #1280	; 0x500
   2254c:	str	r2, [sp]
   22550:	ldr	r2, [pc, #192]	; 22618 <blkid_probe_get_size@plt+0x1b100>
   22554:	ldr	r3, [pc, #152]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   22558:	add	r2, pc, r2
   2255c:	add	r1, pc, r1
   22560:	mov	r0, #1
   22564:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22568:	ldr	r2, [pc, #172]	; 2261c <blkid_probe_get_size@plt+0x1b104>
   2256c:	ldr	r1, [pc, #172]	; 22620 <blkid_probe_get_size@plt+0x1b108>
   22570:	add	r2, pc, r2
   22574:	add	r2, r2, #1280	; 0x500
   22578:	str	r2, [sp]
   2257c:	ldr	r2, [pc, #160]	; 22624 <blkid_probe_get_size@plt+0x1b10c>
   22580:	ldr	r3, [pc, #108]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   22584:	add	r2, pc, r2
   22588:	add	r1, pc, r1
   2258c:	mov	r0, #1
   22590:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22594:	ldr	r2, [pc, #140]	; 22628 <blkid_probe_get_size@plt+0x1b110>
   22598:	ldr	r1, [pc, #140]	; 2262c <blkid_probe_get_size@plt+0x1b114>
   2259c:	add	r2, pc, r2
   225a0:	add	r2, r2, #1280	; 0x500
   225a4:	str	r2, [sp]
   225a8:	ldr	r2, [pc, #128]	; 22630 <blkid_probe_get_size@plt+0x1b118>
   225ac:	ldr	r3, [pc, #64]	; 225f4 <blkid_probe_get_size@plt+0x1b0dc>
   225b0:	add	r2, pc, r2
   225b4:	add	r1, pc, r1
   225b8:	mov	r0, #1
   225bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   225c0:	mvn	r4, #11
   225c4:	b	22404 <blkid_probe_get_size@plt+0x1aeec>
   225c8:	bl	6fb4 <__stack_chk_fail@plt>
   225cc:	andeq	r5, r7, r8, asr #17
   225d0:	andeq	r0, r0, ip, lsr r4
   225d4:	andeq	r8, r4, r4, ror sl
   225d8:	andeq	r7, r4, r4, asr #5
   225dc:	andeq	r7, r4, r0, asr #5
   225e0:	andeq	r7, r6, r0, ror #7
   225e4:	andeq	r5, r7, r8, lsl #27
   225e8:	andeq	r8, r4, r8, asr #19
   225ec:	andeq	r8, r4, r0, lsr #1
   225f0:	muleq	r4, r4, r9
   225f4:	andeq	r0, r0, r3, lsl r2
   225f8:	muleq	r7, r0, ip
   225fc:	andeq	r8, r4, r0, lsl r0
   22600:	ldrdeq	r8, [r4], -r0
   22604:	strdeq	r7, [r4], -r0
   22608:	andeq	r7, r4, r8, ror lr
   2260c:	andeq	r7, r4, ip, lsr #31
   22610:	andeq	r7, r4, r4, asr #1
   22614:	andeq	r7, r4, r0, asr #24
   22618:	andeq	r7, r4, r0, lsl #31
   2261c:	muleq	r4, r8, r0
   22620:	andeq	r7, r4, r4, lsr lr
   22624:	andeq	r7, r4, r4, asr pc
   22628:	andeq	r7, r4, ip, rrx
   2262c:	andeq	r2, r5, r8, asr #4
   22630:	andeq	r7, r4, r8, lsr #30
   22634:	ldr	ip, [pc, #4068]	; 23620 <blkid_probe_get_size@plt+0x1c108>
   22638:	ldr	r2, [pc, #4068]	; 23624 <blkid_probe_get_size@plt+0x1c10c>
   2263c:	add	ip, pc, ip
   22640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22644:	sub	sp, sp, #2256	; 0x8d0
   22648:	ldr	r2, [ip, r2]
   2264c:	sub	sp, sp, #12
   22650:	mov	sl, #0
   22654:	ldr	lr, [r2]
   22658:	add	r8, sp, #408	; 0x198
   2265c:	str	r2, [sp, #36]	; 0x24
   22660:	mov	r4, r0
   22664:	mov	r1, sl
   22668:	mov	r2, #60	; 0x3c
   2266c:	mov	r0, r8
   22670:	add	r7, sp, #344	; 0x158
   22674:	str	r3, [sp, #40]	; 0x28
   22678:	str	lr, [sp, #2260]	; 0x8d4
   2267c:	str	sl, [sp, #404]	; 0x194
   22680:	bl	6c84 <memset@plt>
   22684:	mov	r1, sl
   22688:	mov	r2, #60	; 0x3c
   2268c:	mov	r0, r7
   22690:	str	sl, [sp, #340]	; 0x154
   22694:	add	r5, sp, #1232	; 0x4d0
   22698:	bl	6c84 <memset@plt>
   2269c:	add	r0, sp, #1744	; 0x6d0
   226a0:	mov	r1, sl
   226a4:	mov	r2, #508	; 0x1fc
   226a8:	add	r5, r5, #8
   226ac:	add	r0, r0, #8
   226b0:	str	sl, [sp, #1748]	; 0x6d4
   226b4:	add	r9, sp, #280	; 0x118
   226b8:	bl	6c84 <memset@plt>
   226bc:	mov	r1, sl
   226c0:	mov	r2, #508	; 0x1fc
   226c4:	mov	r0, r5
   226c8:	str	sl, [sp, #1236]	; 0x4d4
   226cc:	add	fp, sp, #216	; 0xd8
   226d0:	bl	6c84 <memset@plt>
   226d4:	mov	r1, sl
   226d8:	mov	r2, #60	; 0x3c
   226dc:	mov	r0, r9
   226e0:	str	sl, [sp, #276]	; 0x114
   226e4:	add	r6, sp, #152	; 0x98
   226e8:	bl	6c84 <memset@plt>
   226ec:	mov	r1, sl
   226f0:	mov	r2, #60	; 0x3c
   226f4:	mov	r0, fp
   226f8:	str	sl, [sp, #212]	; 0xd4
   226fc:	bl	6c84 <memset@plt>
   22700:	mov	r1, sl
   22704:	mov	r0, r6
   22708:	mov	r2, #60	; 0x3c
   2270c:	str	sl, [sp, #148]	; 0x94
   22710:	bl	6c84 <memset@plt>
   22714:	cmp	r4, sl
   22718:	str	sl, [sp, #100]	; 0x64
   2271c:	str	sl, [sp, #96]	; 0x60
   22720:	beq	22840 <blkid_probe_get_size@plt+0x1b328>
   22724:	add	sl, sp, #88	; 0x58
   22728:	sub	r1, sl, #12
   2272c:	mov	r0, r4
   22730:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   22734:	cmp	r0, #0
   22738:	blt	22820 <blkid_probe_get_size@plt+0x1b308>
   2273c:	add	r3, sp, #72	; 0x48
   22740:	mov	r1, r3
   22744:	mov	r0, r4
   22748:	str	r3, [sp, #44]	; 0x2c
   2274c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   22750:	cmp	r0, #0
   22754:	blt	22820 <blkid_probe_get_size@plt+0x1b308>
   22758:	ldr	r3, [sp, #44]	; 0x2c
   2275c:	mov	r0, r4
   22760:	sub	r1, r3, #4
   22764:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   22768:	cmp	r0, #0
   2276c:	blt	22788 <blkid_probe_get_size@plt+0x1b270>
   22770:	ldr	r1, [pc, #3760]	; 23628 <blkid_probe_get_size@plt+0x1c110>
   22774:	ldr	r0, [sp, #68]	; 0x44
   22778:	add	r1, pc, r1
   2277c:	bl	7314 <strcmp@plt>
   22780:	cmp	r0, #0
   22784:	beq	22908 <blkid_probe_get_size@plt+0x1b3f0>
   22788:	ldr	r2, [pc, #3740]	; 2362c <blkid_probe_get_size@plt+0x1c114>
   2278c:	ldr	r1, [pc, #3740]	; 23630 <blkid_probe_get_size@plt+0x1c118>
   22790:	add	r3, sp, #104	; 0x68
   22794:	str	r3, [sp, #48]	; 0x30
   22798:	add	r2, pc, r2
   2279c:	add	r3, sp, #92	; 0x5c
   227a0:	add	r1, pc, r1
   227a4:	mov	r0, r4
   227a8:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   227ac:	subs	r2, r0, #0
   227b0:	bge	22870 <blkid_probe_get_size@plt+0x1b358>
   227b4:	ldr	r3, [pc, #3704]	; 23634 <blkid_probe_get_size@plt+0x1c11c>
   227b8:	mov	r1, #0
   227bc:	add	r3, pc, r3
   227c0:	str	r1, [sp, #144]	; 0x90
   227c4:	ldr	r3, [r3, #4]
   227c8:	cmp	r3, #6
   227cc:	bgt	22fdc <blkid_probe_get_size@plt+0x1bac4>
   227d0:	mov	lr, r1
   227d4:	ldr	r3, [pc, #3676]	; 23638 <blkid_probe_get_size@plt+0x1c120>
   227d8:	ldr	r0, [pc, #3676]	; 2363c <blkid_probe_get_size@plt+0x1c124>
   227dc:	add	r3, pc, r3
   227e0:	add	r3, r3, #1344	; 0x540
   227e4:	str	r1, [sp, #8]
   227e8:	mov	r1, r2
   227ec:	ldr	r2, [pc, #3660]	; 23640 <blkid_probe_get_size@plt+0x1c128>
   227f0:	add	r0, pc, r0
   227f4:	add	r3, r3, #8
   227f8:	mov	ip, #0
   227fc:	str	r3, [sp]
   22800:	str	r0, [sp, #20]
   22804:	str	lr, [sp, #4]
   22808:	str	ip, [sp, #16]
   2280c:	str	ip, [sp, #12]
   22810:	ldr	r3, [pc, #3628]	; 23644 <blkid_probe_get_size@plt+0x1c12c>
   22814:	add	r2, pc, r2
   22818:	mov	r0, #7
   2281c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22820:	ldr	r3, [sp, #36]	; 0x24
   22824:	ldr	r2, [sp, #2260]	; 0x8d4
   22828:	ldr	r3, [r3]
   2282c:	cmp	r2, r3
   22830:	bne	23534 <blkid_probe_get_size@plt+0x1c01c>
   22834:	add	sp, sp, #2256	; 0x8d0
   22838:	add	sp, sp, #12
   2283c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22840:	ldr	r2, [pc, #3584]	; 23648 <blkid_probe_get_size@plt+0x1c130>
   22844:	ldr	r1, [pc, #3584]	; 2364c <blkid_probe_get_size@plt+0x1c134>
   22848:	add	r2, pc, r2
   2284c:	add	r2, r2, #1328	; 0x530
   22850:	add	r2, r2, #8
   22854:	str	r2, [sp]
   22858:	ldr	r2, [pc, #3568]	; 23650 <blkid_probe_get_size@plt+0x1c138>
   2285c:	mov	r3, #254	; 0xfe
   22860:	add	r2, pc, r2
   22864:	add	r1, pc, r1
   22868:	mov	r0, #1
   2286c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   22870:	ldr	r3, [sp, #44]	; 0x2c
   22874:	ldr	r0, [sp, #92]	; 0x5c
   22878:	sub	r1, r3, #8
   2287c:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   22880:	subs	r3, r0, #0
   22884:	str	r3, [sp, #44]	; 0x2c
   22888:	bge	229bc <blkid_probe_get_size@plt+0x1b4a4>
   2288c:	ldr	r3, [sp, #92]	; 0x5c
   22890:	mov	r0, #0
   22894:	cmp	r3, r0
   22898:	str	r0, [sp, #144]	; 0x90
   2289c:	beq	22f48 <blkid_probe_get_size@plt+0x1ba30>
   228a0:	ldr	r2, [pc, #3500]	; 23654 <blkid_probe_get_size@plt+0x1c13c>
   228a4:	add	r2, pc, r2
   228a8:	ldr	r2, [r2, #4]
   228ac:	cmp	r2, #6
   228b0:	bgt	232ec <blkid_probe_get_size@plt+0x1bdd4>
   228b4:	mov	r1, r0
   228b8:	ldr	r3, [pc, #3480]	; 23658 <blkid_probe_get_size@plt+0x1c140>
   228bc:	ldr	r2, [pc, #3480]	; 2365c <blkid_probe_get_size@plt+0x1c144>
   228c0:	add	r3, pc, r3
   228c4:	add	r2, pc, r2
   228c8:	str	r2, [sp, #20]
   228cc:	add	r3, r3, #1344	; 0x540
   228d0:	ldr	r2, [pc, #3464]	; 23660 <blkid_probe_get_size@plt+0x1c148>
   228d4:	add	r3, r3, #8
   228d8:	str	r0, [sp, #8]
   228dc:	mov	r0, #0
   228e0:	str	r1, [sp, #4]
   228e4:	str	r3, [sp]
   228e8:	str	r0, [sp, #16]
   228ec:	str	r0, [sp, #12]
   228f0:	ldr	r1, [sp, #44]	; 0x2c
   228f4:	ldr	r3, [pc, #3432]	; 23664 <blkid_probe_get_size@plt+0x1c14c>
   228f8:	add	r2, pc, r2
   228fc:	mov	r0, #7
   22900:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22904:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   22908:	sub	r3, r5, #4
   2290c:	mov	r1, r3
   22910:	mov	r0, r4
   22914:	str	r3, [sp, #44]	; 0x2c
   22918:	add	r5, sp, #140	; 0x8c
   2291c:	bl	623c0 <blkid_probe_get_size@plt+0x5aea8>
   22920:	mov	r0, r4
   22924:	str	r4, [sp, #88]	; 0x58
   22928:	ldr	r1, [pc, #3384]	; 23668 <blkid_probe_get_size@plt+0x1c150>
   2292c:	mov	r2, r5
   22930:	add	r1, pc, r1
   22934:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   22938:	subs	r5, r0, #0
   2293c:	bge	22a88 <blkid_probe_get_size@plt+0x1b570>
   22940:	ldr	r3, [sp, #88]	; 0x58
   22944:	mov	r0, #0
   22948:	cmp	r3, r0
   2294c:	str	r0, [sp, #144]	; 0x90
   22950:	beq	22fd0 <blkid_probe_get_size@plt+0x1bab8>
   22954:	ldr	r2, [pc, #3344]	; 2366c <blkid_probe_get_size@plt+0x1c154>
   22958:	add	r2, pc, r2
   2295c:	ldr	r2, [r2, #4]
   22960:	cmp	r2, #6
   22964:	bgt	233ac <blkid_probe_get_size@plt+0x1be94>
   22968:	mov	r1, r0
   2296c:	ldr	r3, [pc, #3324]	; 23670 <blkid_probe_get_size@plt+0x1c158>
   22970:	ldr	r2, [pc, #3324]	; 23674 <blkid_probe_get_size@plt+0x1c15c>
   22974:	add	r3, pc, r3
   22978:	add	r2, pc, r2
   2297c:	str	r2, [sp, #20]
   22980:	add	r3, r3, #1344	; 0x540
   22984:	ldr	r2, [pc, #3308]	; 23678 <blkid_probe_get_size@plt+0x1c160>
   22988:	add	r3, r3, #8
   2298c:	str	r0, [sp, #8]
   22990:	mov	r0, #0
   22994:	str	r1, [sp, #4]
   22998:	str	r3, [sp]
   2299c:	str	r0, [sp, #16]
   229a0:	str	r0, [sp, #12]
   229a4:	mov	r1, r5
   229a8:	ldr	r3, [pc, #3276]	; 2367c <blkid_probe_get_size@plt+0x1c164>
   229ac:	add	r2, pc, r2
   229b0:	mov	r0, #7
   229b4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   229b8:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   229bc:	ldr	r3, [sp, #48]	; 0x30
   229c0:	ldr	r1, [pc, #3256]	; 23680 <blkid_probe_get_size@plt+0x1c168>
   229c4:	sub	r2, r3, #4
   229c8:	add	r1, pc, r1
   229cc:	ldr	r0, [sp, #92]	; 0x5c
   229d0:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   229d4:	ldr	r3, [sp, #48]	; 0x30
   229d8:	ldr	r1, [pc, #3236]	; 23684 <blkid_probe_get_size@plt+0x1c16c>
   229dc:	sub	r2, r3, #8
   229e0:	add	r1, pc, r1
   229e4:	ldr	r0, [sp, #92]	; 0x5c
   229e8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   229ec:	ldr	r1, [pc, #3220]	; 23688 <blkid_probe_get_size@plt+0x1c170>
   229f0:	sub	r2, sl, #4
   229f4:	add	r1, pc, r1
   229f8:	ldr	r0, [sp, #92]	; 0x5c
   229fc:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   22a00:	subs	r3, r0, #0
   22a04:	str	r3, [sp, #44]	; 0x2c
   22a08:	bge	22d44 <blkid_probe_get_size@plt+0x1b82c>
   22a0c:	ldr	r3, [sp, #92]	; 0x5c
   22a10:	mov	r0, #0
   22a14:	cmp	r3, r0
   22a18:	str	r0, [sp, #144]	; 0x90
   22a1c:	beq	231e4 <blkid_probe_get_size@plt+0x1bccc>
   22a20:	ldr	r2, [pc, #3172]	; 2368c <blkid_probe_get_size@plt+0x1c174>
   22a24:	add	r2, pc, r2
   22a28:	ldr	r2, [r2, #4]
   22a2c:	cmp	r2, #6
   22a30:	bgt	233d0 <blkid_probe_get_size@plt+0x1beb8>
   22a34:	mov	r1, r0
   22a38:	ldr	r3, [pc, #3152]	; 23690 <blkid_probe_get_size@plt+0x1c178>
   22a3c:	ldr	r2, [pc, #3152]	; 23694 <blkid_probe_get_size@plt+0x1c17c>
   22a40:	add	r3, pc, r3
   22a44:	add	r2, pc, r2
   22a48:	str	r2, [sp, #20]
   22a4c:	add	r3, r3, #1344	; 0x540
   22a50:	ldr	r2, [pc, #3136]	; 23698 <blkid_probe_get_size@plt+0x1c180>
   22a54:	add	r3, r3, #8
   22a58:	str	r0, [sp, #8]
   22a5c:	mov	r0, #0
   22a60:	str	r1, [sp, #4]
   22a64:	str	r3, [sp]
   22a68:	str	r0, [sp, #16]
   22a6c:	str	r0, [sp, #12]
   22a70:	ldr	r1, [sp, #44]	; 0x2c
   22a74:	mov	r3, #284	; 0x11c
   22a78:	add	r2, pc, r2
   22a7c:	mov	r0, #7
   22a80:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22a84:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   22a88:	ldr	r1, [pc, #3084]	; 2369c <blkid_probe_get_size@plt+0x1c184>
   22a8c:	add	r2, sp, #136	; 0x88
   22a90:	add	r1, pc, r1
   22a94:	ldr	r0, [sp, #88]	; 0x58
   22a98:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   22a9c:	subs	r5, r0, #0
   22aa0:	blt	22f54 <blkid_probe_get_size@plt+0x1ba3c>
   22aa4:	ldrb	r3, [sp, #404]	; 0x194
   22aa8:	cmp	r3, #0
   22aac:	beq	23098 <blkid_probe_get_size@plt+0x1bb80>
   22ab0:	add	r3, sp, #980	; 0x3d4
   22ab4:	add	sl, sp, #144	; 0x90
   22ab8:	str	r3, [sp, #60]	; 0x3c
   22abc:	add	r3, sp, #404	; 0x194
   22ac0:	str	r3, [sp, #52]	; 0x34
   22ac4:	ldrb	r3, [sp, #340]	; 0x154
   22ac8:	cmp	r3, #0
   22acc:	beq	2303c <blkid_probe_get_size@plt+0x1bb24>
   22ad0:	add	r3, sp, #724	; 0x2d4
   22ad4:	str	r3, [sp, #56]	; 0x38
   22ad8:	add	r3, sp, #340	; 0x154
   22adc:	str	r3, [sp, #48]	; 0x30
   22ae0:	ldrb	r5, [sp, #276]	; 0x114
   22ae4:	cmp	r5, #0
   22ae8:	beq	2319c <blkid_probe_get_size@plt+0x1bc84>
   22aec:	add	r3, sp, #276	; 0x114
   22af0:	mov	r9, r3
   22af4:	ldrb	r3, [sp, #1748]	; 0x6d4
   22af8:	cmp	r3, #0
   22afc:	beq	230f8 <blkid_probe_get_size@plt+0x1bbe0>
   22b00:	ldr	r7, [pc, #2968]	; 236a0 <blkid_probe_get_size@plt+0x1c188>
   22b04:	ldr	r3, [sp, #48]	; 0x30
   22b08:	mov	r8, #0
   22b0c:	add	r7, pc, r7
   22b10:	str	r3, [sp]
   22b14:	str	r8, [sp, #4]
   22b18:	mov	r3, r7
   22b1c:	add	r5, sp, #468	; 0x1d4
   22b20:	ldr	r2, [sp, #52]	; 0x34
   22b24:	mov	r1, #256	; 0x100
   22b28:	mov	r0, sl
   22b2c:	str	r5, [sp, #144]	; 0x90
   22b30:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   22b34:	ldrb	r3, [sp, #1748]	; 0x6d4
   22b38:	cmp	r3, r8
   22b3c:	beq	22b5c <blkid_probe_get_size@plt+0x1b644>
   22b40:	add	r3, sp, #1744	; 0x6d0
   22b44:	mov	r1, r0
   22b48:	str	r8, [sp]
   22b4c:	mov	r2, r7
   22b50:	add	r3, r3, #4
   22b54:	mov	r0, sl
   22b58:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   22b5c:	ldrb	r3, [sp, #148]	; 0x94
   22b60:	cmp	r3, #0
   22b64:	beq	22b88 <blkid_probe_get_size@plt+0x1b670>
   22b68:	ldr	r2, [pc, #2868]	; 236a4 <blkid_probe_get_size@plt+0x1c18c>
   22b6c:	mov	r3, #0
   22b70:	mov	r1, r0
   22b74:	str	r3, [sp]
   22b78:	mov	r0, sl
   22b7c:	sub	r3, r6, #4
   22b80:	add	r2, pc, r2
   22b84:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   22b88:	ldr	r7, [sp, #40]	; 0x28
   22b8c:	ldr	r2, [pc, #2836]	; 236a8 <blkid_probe_get_size@plt+0x1c190>
   22b90:	ldr	r3, [sp, #52]	; 0x34
   22b94:	add	r2, pc, r2
   22b98:	mov	r1, r7
   22b9c:	mov	r0, r4
   22ba0:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22ba4:	ldr	r2, [pc, #2816]	; 236ac <blkid_probe_get_size@plt+0x1c194>
   22ba8:	ldr	r3, [sp, #60]	; 0x3c
   22bac:	add	r2, pc, r2
   22bb0:	mov	r1, r7
   22bb4:	mov	r0, r4
   22bb8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22bbc:	ldr	r2, [pc, #2796]	; 236b0 <blkid_probe_get_size@plt+0x1c198>
   22bc0:	ldr	r3, [sp, #140]	; 0x8c
   22bc4:	add	r2, pc, r2
   22bc8:	mov	r1, r7
   22bcc:	mov	r0, r4
   22bd0:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22bd4:	ldr	r2, [pc, #2776]	; 236b4 <blkid_probe_get_size@plt+0x1c19c>
   22bd8:	ldr	r3, [sp, #48]	; 0x30
   22bdc:	add	r2, pc, r2
   22be0:	mov	r1, r7
   22be4:	mov	r0, r4
   22be8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22bec:	ldr	r2, [pc, #2756]	; 236b8 <blkid_probe_get_size@plt+0x1c1a0>
   22bf0:	ldr	r3, [sp, #56]	; 0x38
   22bf4:	add	r2, pc, r2
   22bf8:	mov	r1, r7
   22bfc:	mov	r0, r4
   22c00:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c04:	ldr	r2, [pc, #2736]	; 236bc <blkid_probe_get_size@plt+0x1c1a4>
   22c08:	ldr	r3, [sp, #136]	; 0x88
   22c0c:	add	r2, pc, r2
   22c10:	mov	r1, r7
   22c14:	mov	r0, r4
   22c18:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c1c:	ldr	r2, [pc, #2716]	; 236c0 <blkid_probe_get_size@plt+0x1c1a8>
   22c20:	mov	r3, r9
   22c24:	add	r2, pc, r2
   22c28:	mov	r1, r7
   22c2c:	mov	r0, r4
   22c30:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c34:	ldr	r2, [pc, #2696]	; 236c4 <blkid_probe_get_size@plt+0x1c1ac>
   22c38:	mov	r3, r5
   22c3c:	add	r2, pc, r2
   22c40:	mov	r1, r7
   22c44:	mov	r0, r4
   22c48:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c4c:	ldrb	r3, [sp, #1748]	; 0x6d4
   22c50:	cmp	r3, #0
   22c54:	beq	22c74 <blkid_probe_get_size@plt+0x1b75c>
   22c58:	ldr	r2, [pc, #2664]	; 236c8 <blkid_probe_get_size@plt+0x1c1b0>
   22c5c:	add	r3, sp, #1744	; 0x6d0
   22c60:	add	r3, r3, #4
   22c64:	add	r2, pc, r2
   22c68:	ldr	r1, [sp, #40]	; 0x28
   22c6c:	mov	r0, r4
   22c70:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c74:	ldrb	r3, [sp, #212]	; 0xd4
   22c78:	cmp	r3, #0
   22c7c:	beq	22c98 <blkid_probe_get_size@plt+0x1b780>
   22c80:	ldr	r2, [pc, #2628]	; 236cc <blkid_probe_get_size@plt+0x1c1b4>
   22c84:	sub	r3, fp, #4
   22c88:	add	r2, pc, r2
   22c8c:	ldr	r1, [sp, #40]	; 0x28
   22c90:	mov	r0, r4
   22c94:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22c98:	ldrb	r3, [sp, #148]	; 0x94
   22c9c:	cmp	r3, #0
   22ca0:	beq	22cbc <blkid_probe_get_size@plt+0x1b7a4>
   22ca4:	ldr	r2, [pc, #2596]	; 236d0 <blkid_probe_get_size@plt+0x1c1b8>
   22ca8:	sub	r3, r6, #4
   22cac:	add	r2, pc, r2
   22cb0:	ldr	r1, [sp, #40]	; 0x28
   22cb4:	mov	r0, r4
   22cb8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22cbc:	ldr	r3, [pc, #2576]	; 236d4 <blkid_probe_get_size@plt+0x1c1bc>
   22cc0:	ldr	r2, [pc, #2576]	; 236d8 <blkid_probe_get_size@plt+0x1c1c0>
   22cc4:	add	r3, pc, r3
   22cc8:	add	r2, pc, r2
   22ccc:	ldr	r1, [sp, #40]	; 0x28
   22cd0:	mov	r0, r4
   22cd4:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22cd8:	ldrb	r3, [sp, #1236]	; 0x4d4
   22cdc:	cmp	r3, #0
   22ce0:	beq	22cfc <blkid_probe_get_size@plt+0x1b7e4>
   22ce4:	ldr	r2, [pc, #2544]	; 236dc <blkid_probe_get_size@plt+0x1c1c4>
   22ce8:	ldr	r3, [sp, #44]	; 0x2c
   22cec:	add	r2, pc, r2
   22cf0:	ldr	r1, [sp, #40]	; 0x28
   22cf4:	mov	r0, r4
   22cf8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22cfc:	ldr	r3, [sp, #100]	; 0x64
   22d00:	cmp	r3, #0
   22d04:	beq	22d1c <blkid_probe_get_size@plt+0x1b804>
   22d08:	ldr	r2, [pc, #2512]	; 236e0 <blkid_probe_get_size@plt+0x1c1c8>
   22d0c:	ldr	r1, [sp, #40]	; 0x28
   22d10:	add	r2, pc, r2
   22d14:	mov	r0, r4
   22d18:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22d1c:	ldr	r3, [sp, #96]	; 0x60
   22d20:	cmp	r3, #0
   22d24:	beq	22d3c <blkid_probe_get_size@plt+0x1b824>
   22d28:	ldr	r2, [pc, #2484]	; 236e4 <blkid_probe_get_size@plt+0x1c1cc>
   22d2c:	ldr	r1, [sp, #40]	; 0x28
   22d30:	mov	r0, r4
   22d34:	add	r2, pc, r2
   22d38:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   22d3c:	mov	r0, #0
   22d40:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   22d44:	mov	r2, #16
   22d48:	mov	r1, #0
   22d4c:	ldr	r0, [sp, #84]	; 0x54
   22d50:	bl	6c54 <strtoul@plt>
   22d54:	cmp	r0, #8
   22d58:	mov	r3, r0
   22d5c:	beq	231f0 <blkid_probe_get_size@plt+0x1bcd8>
   22d60:	sub	r2, r0, #1
   22d64:	cmp	r2, #13
   22d68:	addls	pc, pc, r2, lsl #2
   22d6c:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d70:	b	22da8 <blkid_probe_get_size@plt+0x1b890>
   22d74:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d78:	b	22f24 <blkid_probe_get_size@plt+0x1ba0c>
   22d7c:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d80:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d84:	b	22f0c <blkid_probe_get_size@plt+0x1b9f4>
   22d88:	b	22f00 <blkid_probe_get_size@plt+0x1b9e8>
   22d8c:	b	22ef4 <blkid_probe_get_size@plt+0x1b9dc>
   22d90:	b	22f3c <blkid_probe_get_size@plt+0x1ba24>
   22d94:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d98:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22d9c:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22da0:	b	22f30 <blkid_probe_get_size@plt+0x1ba18>
   22da4:	b	22f18 <blkid_probe_get_size@plt+0x1ba00>
   22da8:	ldr	r1, [pc, #2360]	; 236e8 <blkid_probe_get_size@plt+0x1c1d0>
   22dac:	add	r1, pc, r1
   22db0:	mov	r2, #63	; 0x3f
   22db4:	sub	r0, fp, #4
   22db8:	str	r3, [sp, #44]	; 0x2c
   22dbc:	bl	7374 <strncpy@plt>
   22dc0:	ldr	r3, [sp, #44]	; 0x2c
   22dc4:	mov	r2, #0
   22dc8:	strb	r2, [sp, #274]	; 0x112
   22dcc:	str	r2, [sp, #52]	; 0x34
   22dd0:	ldr	r2, [sp, #92]	; 0x5c
   22dd4:	mov	r0, #0
   22dd8:	cmp	r2, r0
   22ddc:	str	r0, [sp, #144]	; 0x90
   22de0:	beq	232d4 <blkid_probe_get_size@plt+0x1bdbc>
   22de4:	ldr	r1, [pc, #2304]	; 236ec <blkid_probe_get_size@plt+0x1c1d4>
   22de8:	add	r1, pc, r1
   22dec:	ldr	r1, [r1, #4]
   22df0:	cmp	r1, #6
   22df4:	bgt	234b8 <blkid_probe_get_size@plt+0x1bfa0>
   22df8:	mov	ip, r0
   22dfc:	ldr	r2, [pc, #2284]	; 236f0 <blkid_probe_get_size@plt+0x1c1d8>
   22e00:	ldr	r1, [pc, #2284]	; 236f4 <blkid_probe_get_size@plt+0x1c1dc>
   22e04:	add	r2, pc, r2
   22e08:	add	r2, r2, #1344	; 0x540
   22e0c:	add	r2, r2, #8
   22e10:	ldr	lr, [sp, #52]	; 0x34
   22e14:	stm	sp, {r2, ip}
   22e18:	ldr	r2, [pc, #2264]	; 236f8 <blkid_probe_get_size@plt+0x1c1e0>
   22e1c:	add	r1, pc, r1
   22e20:	str	r3, [sp, #24]
   22e24:	mov	r3, #0
   22e28:	str	lr, [sp, #28]
   22e2c:	str	r0, [sp, #8]
   22e30:	str	r1, [sp, #20]
   22e34:	str	r3, [sp, #16]
   22e38:	mov	r1, r3
   22e3c:	str	r3, [sp, #12]
   22e40:	add	r2, pc, r2
   22e44:	ldr	r3, [pc, #2224]	; 236fc <blkid_probe_get_size@plt+0x1c1e4>
   22e48:	mov	r0, #7
   22e4c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22e50:	ldr	r2, [pc, #2216]	; 23700 <blkid_probe_get_size@plt+0x1c1e8>
   22e54:	ldr	r1, [pc, #2216]	; 23704 <blkid_probe_get_size@plt+0x1c1ec>
   22e58:	mov	r3, sl
   22e5c:	add	r2, pc, r2
   22e60:	add	r1, pc, r1
   22e64:	ldr	r0, [sp, #92]	; 0x5c
   22e68:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   22e6c:	subs	sl, r0, #0
   22e70:	bge	23008 <blkid_probe_get_size@plt+0x1baf0>
   22e74:	ldr	r0, [sp, #92]	; 0x5c
   22e78:	mov	r3, #0
   22e7c:	cmp	r0, r3
   22e80:	str	r3, [sp, #144]	; 0x90
   22e84:	beq	22e9c <blkid_probe_get_size@plt+0x1b984>
   22e88:	ldr	r3, [pc, #2168]	; 23708 <blkid_probe_get_size@plt+0x1c1f0>
   22e8c:	add	r3, pc, r3
   22e90:	ldr	r3, [r3, #4]
   22e94:	cmp	r3, #6
   22e98:	bgt	23508 <blkid_probe_get_size@plt+0x1bff0>
   22e9c:	mov	fp, #0
   22ea0:	mov	r1, fp
   22ea4:	ldr	r3, [pc, #2144]	; 2370c <blkid_probe_get_size@plt+0x1c1f4>
   22ea8:	ldr	r2, [pc, #2144]	; 23710 <blkid_probe_get_size@plt+0x1c1f8>
   22eac:	add	r3, pc, r3
   22eb0:	add	r2, pc, r2
   22eb4:	str	r2, [sp, #20]
   22eb8:	add	r3, r3, #1344	; 0x540
   22ebc:	ldr	r2, [pc, #2128]	; 23714 <blkid_probe_get_size@plt+0x1c1fc>
   22ec0:	mov	r0, #0
   22ec4:	add	r3, r3, #8
   22ec8:	str	r1, [sp, #4]
   22ecc:	str	r3, [sp]
   22ed0:	str	r0, [sp, #16]
   22ed4:	str	r0, [sp, #12]
   22ed8:	str	fp, [sp, #8]
   22edc:	mov	r1, sl
   22ee0:	ldr	r3, [pc, #2096]	; 23718 <blkid_probe_get_size@plt+0x1c200>
   22ee4:	add	r2, pc, r2
   22ee8:	mov	r0, #7
   22eec:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22ef0:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   22ef4:	ldr	r1, [pc, #2080]	; 2371c <blkid_probe_get_size@plt+0x1c204>
   22ef8:	add	r1, pc, r1
   22efc:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f00:	ldr	r1, [pc, #2072]	; 23720 <blkid_probe_get_size@plt+0x1c208>
   22f04:	add	r1, pc, r1
   22f08:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f0c:	ldr	r1, [pc, #2064]	; 23724 <blkid_probe_get_size@plt+0x1c20c>
   22f10:	add	r1, pc, r1
   22f14:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f18:	ldr	r1, [pc, #2056]	; 23728 <blkid_probe_get_size@plt+0x1c210>
   22f1c:	add	r1, pc, r1
   22f20:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f24:	ldr	r1, [pc, #2048]	; 2372c <blkid_probe_get_size@plt+0x1c214>
   22f28:	add	r1, pc, r1
   22f2c:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f30:	ldr	r1, [pc, #2040]	; 23730 <blkid_probe_get_size@plt+0x1c218>
   22f34:	add	r1, pc, r1
   22f38:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f3c:	ldr	r1, [pc, #2032]	; 23734 <blkid_probe_get_size@plt+0x1c21c>
   22f40:	add	r1, pc, r1
   22f44:	b	22db0 <blkid_probe_get_size@plt+0x1b898>
   22f48:	mov	r0, r3
   22f4c:	mov	r1, r3
   22f50:	b	228b8 <blkid_probe_get_size@plt+0x1b3a0>
   22f54:	ldr	r3, [sp, #88]	; 0x58
   22f58:	mov	r0, #0
   22f5c:	cmp	r3, r0
   22f60:	str	r0, [sp, #144]	; 0x90
   22f64:	beq	232e0 <blkid_probe_get_size@plt+0x1bdc8>
   22f68:	ldr	r2, [pc, #1992]	; 23738 <blkid_probe_get_size@plt+0x1c220>
   22f6c:	add	r2, pc, r2
   22f70:	ldr	r2, [r2, #4]
   22f74:	cmp	r2, #6
   22f78:	bgt	234e4 <blkid_probe_get_size@plt+0x1bfcc>
   22f7c:	mov	r1, r0
   22f80:	ldr	r3, [pc, #1972]	; 2373c <blkid_probe_get_size@plt+0x1c224>
   22f84:	ldr	r2, [pc, #1972]	; 23740 <blkid_probe_get_size@plt+0x1c228>
   22f88:	add	r3, pc, r3
   22f8c:	add	r2, pc, r2
   22f90:	str	r2, [sp, #20]
   22f94:	add	r3, r3, #1344	; 0x540
   22f98:	ldr	r2, [pc, #1956]	; 23744 <blkid_probe_get_size@plt+0x1c22c>
   22f9c:	add	r3, r3, #8
   22fa0:	str	r0, [sp, #8]
   22fa4:	mov	r0, #0
   22fa8:	str	r1, [sp, #4]
   22fac:	str	r3, [sp]
   22fb0:	str	r0, [sp, #16]
   22fb4:	str	r0, [sp, #12]
   22fb8:	mov	r1, r5
   22fbc:	ldr	r3, [pc, #1924]	; 23748 <blkid_probe_get_size@plt+0x1c230>
   22fc0:	add	r2, pc, r2
   22fc4:	mov	r0, #7
   22fc8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   22fcc:	b	22820 <blkid_probe_get_size@plt+0x1b308>
   22fd0:	mov	r0, r3
   22fd4:	mov	r1, r3
   22fd8:	b	2296c <blkid_probe_get_size@plt+0x1b454>
   22fdc:	sub	r1, r6, #8
   22fe0:	mov	r0, r4
   22fe4:	str	r2, [sp, #40]	; 0x28
   22fe8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   22fec:	ldr	r1, [sp, #144]	; 0x90
   22ff0:	ldr	r2, [sp, #40]	; 0x28
   22ff4:	cmp	r1, #0
   22ff8:	beq	227d0 <blkid_probe_get_size@plt+0x1b2b8>
   22ffc:	ldr	lr, [pc, #1864]	; 2374c <blkid_probe_get_size@plt+0x1c234>
   23000:	add	lr, pc, lr
   23004:	b	227d4 <blkid_probe_get_size@plt+0x1b2bc>
   23008:	sub	r3, r5, #4
   2300c:	mov	r1, r3
   23010:	ldr	r0, [sp, #88]	; 0x58
   23014:	str	r3, [sp, #44]	; 0x2c
   23018:	bl	623c0 <blkid_probe_get_size@plt+0x5aea8>
   2301c:	ldr	r3, [sp, #52]	; 0x34
   23020:	cmp	r3, #2
   23024:	beq	23310 <blkid_probe_get_size@plt+0x1bdf8>
   23028:	cmp	r3, #6
   2302c:	beq	23310 <blkid_probe_get_size@plt+0x1bdf8>
   23030:	ldr	r0, [sp, #88]	; 0x58
   23034:	add	r5, sp, #140	; 0x8c
   23038:	b	22928 <blkid_probe_get_size@plt+0x1b410>
   2303c:	ldr	r1, [pc, #1804]	; 23750 <blkid_probe_get_size@plt+0x1c238>
   23040:	mov	r2, sl
   23044:	add	r1, pc, r1
   23048:	ldr	r0, [sp, #88]	; 0x58
   2304c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   23050:	sub	r3, r7, #4
   23054:	mov	r5, r3
   23058:	add	r1, sp, #724	; 0x2d4
   2305c:	str	r1, [sp, #56]	; 0x38
   23060:	str	r3, [sp, #48]	; 0x30
   23064:	cmp	r0, #0
   23068:	ldrlt	r0, [sp, #136]	; 0x88
   2306c:	ldrge	r0, [sp, #144]	; 0x90
   23070:	strlt	r0, [sp, #144]	; 0x90
   23074:	bl	638e4 <blkid_probe_get_size@plt+0x5c3cc>
   23078:	mov	r1, r5
   2307c:	mov	r2, #63	; 0x3f
   23080:	ldr	r0, [sp, #144]	; 0x90
   23084:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   23088:	mov	r0, r5
   2308c:	mov	r1, #0
   23090:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   23094:	b	22ae0 <blkid_probe_get_size@plt+0x1b5c8>
   23098:	ldr	r1, [pc, #1716]	; 23754 <blkid_probe_get_size@plt+0x1c23c>
   2309c:	sub	sl, r6, #8
   230a0:	mov	r2, sl
   230a4:	add	r1, pc, r1
   230a8:	ldr	r0, [sp, #88]	; 0x58
   230ac:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   230b0:	sub	r3, r8, #4
   230b4:	mov	r5, r3
   230b8:	add	r1, sp, #980	; 0x3d4
   230bc:	str	r1, [sp, #60]	; 0x3c
   230c0:	str	r3, [sp, #52]	; 0x34
   230c4:	cmp	r0, #0
   230c8:	ldrlt	r0, [sp, #140]	; 0x8c
   230cc:	ldrge	r0, [sp, #144]	; 0x90
   230d0:	strlt	r0, [sp, #144]	; 0x90
   230d4:	bl	638e4 <blkid_probe_get_size@plt+0x5c3cc>
   230d8:	mov	r1, r5
   230dc:	mov	r2, #63	; 0x3f
   230e0:	ldr	r0, [sp, #144]	; 0x90
   230e4:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   230e8:	mov	r0, r5
   230ec:	mov	r1, #0
   230f0:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   230f4:	b	22ac4 <blkid_probe_get_size@plt+0x1b5ac>
   230f8:	ldr	r1, [pc, #1624]	; 23758 <blkid_probe_get_size@plt+0x1c240>
   230fc:	mov	r2, sl
   23100:	add	r1, pc, r1
   23104:	ldr	r0, [sp, #88]	; 0x58
   23108:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   2310c:	cmp	r0, #0
   23110:	blt	22b00 <blkid_probe_get_size@plt+0x1b5e8>
   23114:	ldr	r0, [sp, #144]	; 0x90
   23118:	ldrb	r3, [r0]
   2311c:	cmp	r3, #0
   23120:	beq	23178 <blkid_probe_get_size@plt+0x1bc60>
   23124:	sub	r2, r3, #32
   23128:	sub	r3, r3, #44	; 0x2c
   2312c:	clz	r3, r3
   23130:	lsr	r3, r3, #5
   23134:	cmp	r2, #95	; 0x5f
   23138:	orrhi	r3, r3, #1
   2313c:	cmp	r3, #0
   23140:	bne	22b00 <blkid_probe_get_size@plt+0x1b5e8>
   23144:	mov	r1, r0
   23148:	b	2316c <blkid_probe_get_size@plt+0x1bc54>
   2314c:	sub	r2, r3, #32
   23150:	sub	r3, r3, #44	; 0x2c
   23154:	clz	r3, r3
   23158:	lsr	r3, r3, #5
   2315c:	cmp	r2, #95	; 0x5f
   23160:	orrhi	r3, r3, #1
   23164:	cmp	r3, #0
   23168:	bne	22b00 <blkid_probe_get_size@plt+0x1b5e8>
   2316c:	ldrb	r3, [r1, #1]!
   23170:	cmp	r3, #0
   23174:	bne	2314c <blkid_probe_get_size@plt+0x1bc34>
   23178:	add	r5, sp, #1744	; 0x6d0
   2317c:	add	r5, r5, #4
   23180:	mov	r1, r5
   23184:	ldr	r2, [pc, #1488]	; 2375c <blkid_probe_get_size@plt+0x1c244>
   23188:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   2318c:	mov	r0, r5
   23190:	mov	r1, #0
   23194:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   23198:	b	22b00 <blkid_probe_get_size@plt+0x1b5e8>
   2319c:	ldr	r1, [pc, #1468]	; 23760 <blkid_probe_get_size@plt+0x1c248>
   231a0:	mov	r2, sl
   231a4:	add	r1, pc, r1
   231a8:	ldr	r0, [sp, #88]	; 0x58
   231ac:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   231b0:	cmp	r0, #0
   231b4:	blt	22aec <blkid_probe_get_size@plt+0x1b5d4>
   231b8:	sub	r3, r9, #4
   231bc:	mov	r7, r3
   231c0:	mov	r1, r3
   231c4:	mov	r2, #63	; 0x3f
   231c8:	ldr	r0, [sp, #144]	; 0x90
   231cc:	mov	r9, r3
   231d0:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   231d4:	mov	r1, r5
   231d8:	mov	r0, r7
   231dc:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   231e0:	b	22af4 <blkid_probe_get_size@plt+0x1b5dc>
   231e4:	mov	r0, r3
   231e8:	mov	r1, r3
   231ec:	b	22a38 <blkid_probe_get_size@plt+0x1b520>
   231f0:	ldr	r1, [pc, #1388]	; 23764 <blkid_probe_get_size@plt+0x1c24c>
   231f4:	sub	r2, sl, #8
   231f8:	str	r0, [sp, #44]	; 0x2c
   231fc:	add	r1, pc, r1
   23200:	ldr	r0, [sp, #92]	; 0x5c
   23204:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   23208:	ldr	r3, [sp, #44]	; 0x2c
   2320c:	cmp	r0, #0
   23210:	movlt	r2, #0
   23214:	strlt	r2, [sp, #52]	; 0x34
   23218:	blt	22dd0 <blkid_probe_get_size@plt+0x1b8b8>
   2321c:	str	r3, [sp, #56]	; 0x38
   23220:	ldr	r3, [sp, #80]	; 0x50
   23224:	mov	r2, #0
   23228:	mov	r0, r3
   2322c:	sub	r1, r6, #8
   23230:	str	r3, [sp, #44]	; 0x2c
   23234:	bl	6c54 <strtoul@plt>
   23238:	ldr	r3, [sp, #44]	; 0x2c
   2323c:	ldr	r2, [sp, #144]	; 0x90
   23240:	cmp	r3, r2
   23244:	ldr	r3, [sp, #56]	; 0x38
   23248:	str	r0, [sp, #52]	; 0x34
   2324c:	beq	23528 <blkid_probe_get_size@plt+0x1c010>
   23250:	sub	r2, r0, #1
   23254:	cmp	r2, #5
   23258:	addls	pc, pc, r2, lsl #2
   2325c:	b	232c8 <blkid_probe_get_size@plt+0x1bdb0>
   23260:	b	23278 <blkid_probe_get_size@plt+0x1bd60>
   23264:	b	232bc <blkid_probe_get_size@plt+0x1bda4>
   23268:	b	232b0 <blkid_probe_get_size@plt+0x1bd98>
   2326c:	b	232a4 <blkid_probe_get_size@plt+0x1bd8c>
   23270:	b	232c8 <blkid_probe_get_size@plt+0x1bdb0>
   23274:	b	23298 <blkid_probe_get_size@plt+0x1bd80>
   23278:	ldr	r2, [pc, #1256]	; 23768 <blkid_probe_get_size@plt+0x1c250>
   2327c:	add	r2, pc, r2
   23280:	mov	r1, #63	; 0x3f
   23284:	sub	r0, fp, #4
   23288:	str	r3, [sp, #44]	; 0x2c
   2328c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   23290:	ldr	r3, [sp, #44]	; 0x2c
   23294:	b	22dd0 <blkid_probe_get_size@plt+0x1b8b8>
   23298:	ldr	r2, [pc, #1228]	; 2376c <blkid_probe_get_size@plt+0x1c254>
   2329c:	add	r2, pc, r2
   232a0:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   232a4:	ldr	r2, [pc, #1220]	; 23770 <blkid_probe_get_size@plt+0x1c258>
   232a8:	add	r2, pc, r2
   232ac:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   232b0:	ldr	r2, [pc, #1212]	; 23774 <blkid_probe_get_size@plt+0x1c25c>
   232b4:	add	r2, pc, r2
   232b8:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   232bc:	ldr	r2, [pc, #1204]	; 23778 <blkid_probe_get_size@plt+0x1c260>
   232c0:	add	r2, pc, r2
   232c4:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   232c8:	ldr	r2, [pc, #1196]	; 2377c <blkid_probe_get_size@plt+0x1c264>
   232cc:	add	r2, pc, r2
   232d0:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   232d4:	mov	r0, r2
   232d8:	mov	ip, r2
   232dc:	b	22dfc <blkid_probe_get_size@plt+0x1b8e4>
   232e0:	mov	r0, r3
   232e4:	mov	r1, r3
   232e8:	b	22f80 <blkid_probe_get_size@plt+0x1ba68>
   232ec:	sub	r1, r6, #8
   232f0:	mov	r0, r3
   232f4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   232f8:	ldr	r0, [sp, #144]	; 0x90
   232fc:	cmp	r0, #0
   23300:	beq	228b4 <blkid_probe_get_size@plt+0x1b39c>
   23304:	ldr	r1, [pc, #1140]	; 23780 <blkid_probe_get_size@plt+0x1c268>
   23308:	add	r1, pc, r1
   2330c:	b	228b8 <blkid_probe_get_size@plt+0x1b3a0>
   23310:	ldr	r2, [pc, #1132]	; 23784 <blkid_probe_get_size@plt+0x1c26c>
   23314:	ldr	r1, [pc, #1132]	; 23788 <blkid_probe_get_size@plt+0x1c270>
   23318:	sub	r5, r6, #12
   2331c:	mov	r3, r5
   23320:	add	r2, pc, r2
   23324:	add	r1, pc, r1
   23328:	mov	r0, r4
   2332c:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   23330:	subs	sl, r0, #0
   23334:	bge	233f4 <blkid_probe_get_size@plt+0x1bedc>
   23338:	ldr	r2, [pc, #1100]	; 2378c <blkid_probe_get_size@plt+0x1c274>
   2333c:	mov	r3, #0
   23340:	add	r2, pc, r2
   23344:	str	r3, [sp, #144]	; 0x90
   23348:	ldr	r2, [r2, #4]
   2334c:	cmp	r2, #6
   23350:	bgt	235dc <blkid_probe_get_size@plt+0x1c0c4>
   23354:	mov	r1, r3
   23358:	ldr	r2, [pc, #1072]	; 23790 <blkid_probe_get_size@plt+0x1c278>
   2335c:	ldr	r0, [pc, #1072]	; 23794 <blkid_probe_get_size@plt+0x1c27c>
   23360:	add	r2, pc, r2
   23364:	add	r2, r2, #1344	; 0x540
   23368:	add	r2, r2, #8
   2336c:	str	r2, [sp]
   23370:	ldr	r2, [pc, #1056]	; 23798 <blkid_probe_get_size@plt+0x1c280>
   23374:	add	r0, pc, r0
   23378:	mov	ip, #0
   2337c:	str	r3, [sp, #8]
   23380:	str	r1, [sp, #4]
   23384:	str	r0, [sp, #20]
   23388:	mov	r1, sl
   2338c:	str	ip, [sp, #16]
   23390:	str	ip, [sp, #12]
   23394:	ldr	r3, [pc, #1024]	; 2379c <blkid_probe_get_size@plt+0x1c284>
   23398:	add	r2, pc, r2
   2339c:	mov	r0, #7
   233a0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   233a4:	ldr	r0, [sp, #88]	; 0x58
   233a8:	b	22928 <blkid_probe_get_size@plt+0x1b410>
   233ac:	sub	r1, r6, #8
   233b0:	mov	r0, r3
   233b4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   233b8:	ldr	r0, [sp, #144]	; 0x90
   233bc:	cmp	r0, #0
   233c0:	beq	22968 <blkid_probe_get_size@plt+0x1b450>
   233c4:	ldr	r1, [pc, #980]	; 237a0 <blkid_probe_get_size@plt+0x1c288>
   233c8:	add	r1, pc, r1
   233cc:	b	2296c <blkid_probe_get_size@plt+0x1b454>
   233d0:	sub	r1, r6, #8
   233d4:	mov	r0, r3
   233d8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   233dc:	ldr	r0, [sp, #144]	; 0x90
   233e0:	cmp	r0, #0
   233e4:	beq	22a34 <blkid_probe_get_size@plt+0x1b51c>
   233e8:	ldr	r1, [pc, #948]	; 237a4 <blkid_probe_get_size@plt+0x1c28c>
   233ec:	add	r1, pc, r1
   233f0:	b	22a38 <blkid_probe_get_size@plt+0x1b520>
   233f4:	add	sl, sp, #136	; 0x88
   233f8:	mov	r1, sl
   233fc:	ldr	r0, [sp, #140]	; 0x8c
   23400:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23404:	cmp	r0, #0
   23408:	blt	233a4 <blkid_probe_get_size@plt+0x1be8c>
   2340c:	ldr	r1, [sp, #48]	; 0x30
   23410:	add	r2, sp, #120	; 0x78
   23414:	str	r1, [sp, #4]
   23418:	ldr	r1, [pc, #904]	; 237a8 <blkid_probe_get_size@plt+0x1c290>
   2341c:	add	r3, sp, #108	; 0x6c
   23420:	str	r2, [sp, #52]	; 0x34
   23424:	str	r3, [sp]
   23428:	add	r2, sp, #116	; 0x74
   2342c:	add	r3, sp, #112	; 0x70
   23430:	add	r1, pc, r1
   23434:	ldr	r0, [sp, #136]	; 0x88
   23438:	bl	735c <sscanf@plt>
   2343c:	cmp	r0, #4
   23440:	beq	23540 <blkid_probe_get_size@plt+0x1c028>
   23444:	ldr	r0, [sp, #140]	; 0x8c
   23448:	mov	r3, #0
   2344c:	cmp	r0, r3
   23450:	str	r3, [sp, #144]	; 0x90
   23454:	beq	23538 <blkid_probe_get_size@plt+0x1c020>
   23458:	ldr	r2, [pc, #844]	; 237ac <blkid_probe_get_size@plt+0x1c294>
   2345c:	add	r2, pc, r2
   23460:	ldr	r2, [r2, #4]
   23464:	cmp	r2, #6
   23468:	bgt	23924 <blkid_probe_get_size@plt+0x1c40c>
   2346c:	mov	r0, r3
   23470:	ldr	r2, [pc, #824]	; 237b0 <blkid_probe_get_size@plt+0x1c298>
   23474:	ldr	ip, [pc, #824]	; 237b4 <blkid_probe_get_size@plt+0x1c29c>
   23478:	add	r2, pc, r2
   2347c:	add	r2, r2, #1344	; 0x540
   23480:	add	r2, r2, #8
   23484:	str	r2, [sp]
   23488:	ldr	r2, [pc, #808]	; 237b8 <blkid_probe_get_size@plt+0x1c2a0>
   2348c:	mov	r1, #0
   23490:	add	ip, pc, ip
   23494:	stmib	sp, {r0, r3}
   23498:	str	ip, [sp, #20]
   2349c:	str	r1, [sp, #16]
   234a0:	str	r1, [sp, #12]
   234a4:	ldr	r3, [pc, #784]	; 237bc <blkid_probe_get_size@plt+0x1c2a4>
   234a8:	add	r2, pc, r2
   234ac:	mov	r0, #7
   234b0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   234b4:	b	233a4 <blkid_probe_get_size@plt+0x1be8c>
   234b8:	mov	r0, r2
   234bc:	sub	r1, r6, #8
   234c0:	str	r3, [sp, #44]	; 0x2c
   234c4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   234c8:	ldr	r0, [sp, #144]	; 0x90
   234cc:	ldr	r3, [sp, #44]	; 0x2c
   234d0:	cmp	r0, #0
   234d4:	beq	22df8 <blkid_probe_get_size@plt+0x1b8e0>
   234d8:	ldr	ip, [pc, #736]	; 237c0 <blkid_probe_get_size@plt+0x1c2a8>
   234dc:	add	ip, pc, ip
   234e0:	b	22dfc <blkid_probe_get_size@plt+0x1b8e4>
   234e4:	sub	r1, r6, #8
   234e8:	mov	r0, r3
   234ec:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   234f0:	ldr	r0, [sp, #144]	; 0x90
   234f4:	cmp	r0, #0
   234f8:	beq	22f7c <blkid_probe_get_size@plt+0x1ba64>
   234fc:	ldr	r1, [pc, #704]	; 237c4 <blkid_probe_get_size@plt+0x1c2ac>
   23500:	add	r1, pc, r1
   23504:	b	22f80 <blkid_probe_get_size@plt+0x1ba68>
   23508:	sub	r1, r6, #8
   2350c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23510:	ldr	fp, [sp, #144]	; 0x90
   23514:	cmp	fp, #0
   23518:	moveq	r1, fp
   2351c:	ldrne	r1, [pc, #676]	; 237c8 <blkid_probe_get_size@plt+0x1c2b0>
   23520:	addne	r1, pc, r1
   23524:	b	22ea4 <blkid_probe_get_size@plt+0x1b98c>
   23528:	ldr	r2, [pc, #668]	; 237cc <blkid_probe_get_size@plt+0x1c2b4>
   2352c:	add	r2, pc, r2
   23530:	b	23280 <blkid_probe_get_size@plt+0x1bd68>
   23534:	bl	6fb4 <__stack_chk_fail@plt>
   23538:	mov	r3, r0
   2353c:	b	23470 <blkid_probe_get_size@plt+0x1bf58>
   23540:	ldr	r1, [pc, #648]	; 237d0 <blkid_probe_get_size@plt+0x1c2b8>
   23544:	sub	r2, sl, #8
   23548:	add	r1, pc, r1
   2354c:	ldr	r0, [sp, #140]	; 0x8c
   23550:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   23554:	subs	r3, r0, #0
   23558:	str	r3, [sp, #48]	; 0x30
   2355c:	bge	23860 <blkid_probe_get_size@plt+0x1c348>
   23560:	ldr	r0, [sp, #140]	; 0x8c
   23564:	mov	r3, #0
   23568:	cmp	r0, r3
   2356c:	str	r3, [sp, #144]	; 0x90
   23570:	beq	23944 <blkid_probe_get_size@plt+0x1c42c>
   23574:	ldr	r2, [pc, #600]	; 237d4 <blkid_probe_get_size@plt+0x1c2bc>
   23578:	add	r2, pc, r2
   2357c:	ldr	r2, [r2, #4]
   23580:	cmp	r2, #6
   23584:	bgt	23600 <blkid_probe_get_size@plt+0x1c0e8>
   23588:	mov	r1, r3
   2358c:	ldr	r2, [pc, #580]	; 237d8 <blkid_probe_get_size@plt+0x1c2c0>
   23590:	ldr	r0, [pc, #580]	; 237dc <blkid_probe_get_size@plt+0x1c2c4>
   23594:	add	r2, pc, r2
   23598:	add	r2, r2, #1344	; 0x540
   2359c:	add	r2, r2, #8
   235a0:	str	r2, [sp]
   235a4:	ldr	r2, [pc, #564]	; 237e0 <blkid_probe_get_size@plt+0x1c2c8>
   235a8:	add	r0, pc, r0
   235ac:	str	r3, [sp, #8]
   235b0:	mov	r3, #0
   235b4:	str	r1, [sp, #4]
   235b8:	str	r0, [sp, #20]
   235bc:	str	r3, [sp, #16]
   235c0:	str	r3, [sp, #12]
   235c4:	ldr	r1, [sp, #48]	; 0x30
   235c8:	ldr	r3, [pc, #532]	; 237e4 <blkid_probe_get_size@plt+0x1c2cc>
   235cc:	add	r2, pc, r2
   235d0:	mov	r0, #7
   235d4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   235d8:	b	233a4 <blkid_probe_get_size@plt+0x1be8c>
   235dc:	sub	r1, r6, #8
   235e0:	mov	r0, r4
   235e4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   235e8:	ldr	r3, [sp, #144]	; 0x90
   235ec:	cmp	r3, #0
   235f0:	beq	23354 <blkid_probe_get_size@plt+0x1be3c>
   235f4:	ldr	r1, [pc, #492]	; 237e8 <blkid_probe_get_size@plt+0x1c2d0>
   235f8:	add	r1, pc, r1
   235fc:	b	23358 <blkid_probe_get_size@plt+0x1be40>
   23600:	sub	r1, r6, #8
   23604:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23608:	ldr	r3, [sp, #144]	; 0x90
   2360c:	cmp	r3, #0
   23610:	beq	23588 <blkid_probe_get_size@plt+0x1c070>
   23614:	ldr	r1, [pc, #464]	; 237ec <blkid_probe_get_size@plt+0x1c2d4>
   23618:	add	r1, pc, r1
   2361c:	b	2358c <blkid_probe_get_size@plt+0x1c074>
   23620:	andeq	r5, r7, ip, lsr #10
   23624:	andeq	r0, r0, ip, lsr r4
   23628:	strdeq	r8, [r4], -r0
   2362c:	ldrdeq	r8, [r4], -ip
   23630:	andeq	r8, r4, r4, ror #13
   23634:	andeq	r5, r7, r0, lsl #19
   23638:	andeq	r6, r4, ip, lsr #28
   2363c:	muleq	r4, r8, r6
   23640:	andeq	r8, r4, r0, lsr r6
   23644:	andeq	r0, r0, r2, lsl r1
   23648:	andeq	r6, r4, r0, asr #27
   2364c:	andeq	r2, r4, r0, lsr #30
   23650:	andeq	r8, r4, r4, ror #11
   23654:	muleq	r7, r8, r8
   23658:	andeq	r6, r4, r8, asr #26
   2365c:	andeq	r8, r4, r8, ror #11
   23660:	andeq	r8, r4, ip, asr #10
   23664:	andeq	r0, r0, r6, lsl r1
   23668:	andeq	r8, r4, ip, lsr r7
   2366c:	andeq	r5, r7, r4, ror #15
   23670:	muleq	r4, r4, ip
   23674:	andeq	r8, r4, r0, lsl #14
   23678:	muleq	r4, r8, r4
   2367c:	andeq	r0, r0, pc, ror #2
   23680:	andeq	r8, r4, r0, lsl #10
   23684:	andeq	r6, r4, r4, lsl #20
   23688:	andeq	r8, r4, r8, ror #9
   2368c:	andeq	r5, r7, r8, lsl r7
   23690:	andeq	r6, r4, r8, asr #23
   23694:	andeq	r8, r4, r8, lsr #9
   23698:	andeq	r8, r4, ip, asr #7
   2369c:	andeq	r8, r4, r0, lsl r6
   236a0:	andeq	r3, r4, r4, ror #1
   236a4:	andeq	r2, r4, r4, lsl r5
   236a8:	andeq	r8, r4, ip, ror #10
   236ac:	andeq	r8, r4, r0, ror #10
   236b0:	andeq	r8, r4, r8, asr r5
   236b4:	andeq	r8, r4, r0, asr r5
   236b8:	andeq	r8, r4, r4, asr #10
   236bc:	andeq	r8, r4, ip, lsr r5
   236c0:	andeq	r8, r4, r0, lsr r5
   236c4:	andeq	r8, r4, r4, lsr #10
   236c8:	andeq	r8, r4, r8, lsr r5
   236cc:	andeq	r8, r4, r4, lsr #10
   236d0:	andeq	r8, r4, r8, lsl #10
   236d4:	andeq	r8, r4, r0, asr #3
   236d8:	andeq	r8, r4, r4, lsr #9
   236dc:	ldrdeq	r8, [r4], -r4
   236e0:	andeq	r8, r4, r4, ror #8
   236e4:	andeq	r8, r4, r8, asr r4
   236e8:	andeq	r2, r5, r0, asr #17
   236ec:	andeq	r5, r7, r4, asr r3
   236f0:	andeq	r6, r4, r4, lsl #16
   236f4:	andeq	r8, r4, r0, lsl r1
   236f8:	andeq	r8, r4, r4
   236fc:	andeq	r0, r0, r6, lsr #2
   23700:	andeq	r8, r4, ip
   23704:	andeq	r8, r4, r4, lsr #32
   23708:			; <UNDEFINED> instruction: 0x000752b0
   2370c:	andeq	r6, r4, ip, asr r7
   23710:	muleq	r4, r4, r0
   23714:	andeq	r7, r4, r0, ror #30
   23718:	andeq	r0, r0, fp, lsr #2
   2371c:	andeq	r7, r4, r0, lsr pc
   23720:	andeq	r7, r4, ip, lsl pc
   23724:	andeq	r1, r5, r4, asr #23
   23728:	andeq	r3, r5, r0, lsl r0
   2372c:	strdeq	r7, [r4], -r4
   23730:	andeq	r7, r4, r4, asr #29
   23734:	strdeq	r7, [r4], -r0
   23738:	ldrdeq	r5, [r7], -r0
   2373c:	andeq	r6, r4, r0, lsl #13
   23740:	andeq	r8, r4, r0, lsr #2
   23744:	andeq	r7, r4, r4, lsl #29
   23748:	andeq	r0, r0, r3, ror r1
   2374c:	andeq	r1, r4, r8, lsr pc
   23750:	andeq	r8, r4, r0, lsr #1
   23754:	andeq	r8, r4, r0, lsr r0
   23758:	strdeq	r7, [r4], -r8
   2375c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   23760:	andeq	r7, r4, r8, asr #30
   23764:	andeq	r7, r4, ip, lsl sp
   23768:	andeq	r7, r4, r4, lsl #23
   2376c:	andeq	r7, r4, r8, ror fp
   23770:	andeq	r7, r4, r4, ror #22
   23774:	andeq	r1, r5, r8, lsr r4
   23778:	andeq	r7, r4, r4, asr #22
   2377c:	andeq	r7, r4, ip, lsr #22
   23780:	andeq	r1, r4, r0, lsr ip
   23784:	andeq	r7, r4, r8, asr #24
   23788:	strdeq	r7, [r4], -r0
   2378c:	strdeq	r4, [r7], -ip
   23790:	andeq	r6, r4, r8, lsr #5
   23794:	andeq	r7, r4, r0, lsl #24
   23798:	andeq	r7, r4, ip, lsr #21
   2379c:	andeq	r0, r0, r9, lsr r1
   237a0:	andeq	r1, r4, r0, ror fp
   237a4:	andeq	r1, r4, ip, asr #22
   237a8:	andeq	r7, r4, r8, ror #22
   237ac:	andeq	r4, r7, r0, ror #25
   237b0:	muleq	r4, r0, r1
   237b4:	andeq	r7, r4, r4, lsl fp
   237b8:	muleq	r4, ip, r9
   237bc:	andeq	r0, r0, pc, lsr r1
   237c0:	andeq	r1, r4, ip, asr sl
   237c4:	andeq	r1, r4, r8, lsr sl
   237c8:	andeq	r1, r4, r8, lsl sl
   237cc:	andeq	r7, r4, ip, asr #17
   237d0:	andeq	r4, r5, r0, lsl lr
   237d4:	andeq	r4, r7, r4, asr #23
   237d8:	andeq	r6, r4, r4, ror r0
   237dc:	andeq	r7, r4, r0, lsl sl
   237e0:	andeq	r7, r4, r8, ror r8
   237e4:	andeq	r0, r0, r6, asr #2
   237e8:	andeq	r1, r4, r0, asr #18
   237ec:	andeq	r1, r4, r0, lsr #18
   237f0:	andeq	r7, r4, r0, asr r7
   237f4:	andeq	r4, r7, ip, ror r8
   237f8:	andeq	r5, r4, ip, lsr #26
   237fc:	strdeq	r7, [r4], -r8
   23800:	andeq	r7, r4, r0, lsr r5
   23804:	andeq	r0, r0, pc, asr #2
   23808:	strdeq	r1, [r4], -ip
   2380c:	ldrdeq	r1, [r4], -r0
   23810:	andeq	r3, r4, r4, asr #19
   23814:	andeq	r4, r7, r4, ror #14
   23818:	andeq	r5, r4, r4, lsl ip
   2381c:	andeq	r7, r4, r8, lsl #12
   23820:	andeq	r7, r4, r8, lsl r4
   23824:	andeq	r1, r4, ip, ror #8
   23828:	andeq	r0, r5, r8, lsl #27
   2382c:	strdeq	r2, [r5], -ip
   23830:	andeq	r4, r7, r0, lsl r6
   23834:	andeq	r5, r4, r0, asr #21
   23838:	ldrdeq	r7, [r4], -ip
   2383c:	andeq	r7, r4, r4, asr #5
   23840:	andeq	r0, r0, pc, asr r1
   23844:	andeq	r7, r4, r8, lsr #5
   23848:	andeq	r1, r4, r4, lsl #7
   2384c:	andeq	r7, r4, r0, ror #8
   23850:	ldrdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   23854:	andeq	r7, r4, ip, lsl #4
   23858:	andeq	r7, r4, r4, asr #3
   2385c:			; <UNDEFINED> instruction: 0x000471b8
   23860:	add	r1, sp, #980	; 0x3d4
   23864:	ldr	r0, [sp, #128]	; 0x80
   23868:	bl	638e4 <blkid_probe_get_size@plt+0x5c3cc>
   2386c:	mov	r2, #63	; 0x3f
   23870:	sub	r1, r8, #4
   23874:	ldr	r0, [sp, #128]	; 0x80
   23878:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   2387c:	mov	r1, #0
   23880:	sub	r0, r8, #4
   23884:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   23888:	ldr	r1, [pc, #-160]	; 237f0 <blkid_probe_get_size@plt+0x1c2d8>
   2388c:	sub	r2, sl, #4
   23890:	add	r1, pc, r1
   23894:	ldr	r0, [sp, #140]	; 0x8c
   23898:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   2389c:	subs	r3, r0, #0
   238a0:	str	r3, [sp, #48]	; 0x30
   238a4:	bge	2397c <blkid_probe_get_size@plt+0x1c464>
   238a8:	ldr	r0, [sp, #140]	; 0x8c
   238ac:	mov	r3, #0
   238b0:	cmp	r0, r3
   238b4:	str	r3, [sp, #144]	; 0x90
   238b8:	beq	23970 <blkid_probe_get_size@plt+0x1c458>
   238bc:	ldr	r2, [pc, #-208]	; 237f4 <blkid_probe_get_size@plt+0x1c2dc>
   238c0:	add	r2, pc, r2
   238c4:	ldr	r2, [r2, #4]
   238c8:	cmp	r2, #6
   238cc:	bgt	23950 <blkid_probe_get_size@plt+0x1c438>
   238d0:	mov	r1, r3
   238d4:	ldr	r2, [pc, #-228]	; 237f8 <blkid_probe_get_size@plt+0x1c2e0>
   238d8:	ldr	r0, [pc, #-228]	; 237fc <blkid_probe_get_size@plt+0x1c2e4>
   238dc:	add	r2, pc, r2
   238e0:	add	r2, r2, #1344	; 0x540
   238e4:	add	r2, r2, #8
   238e8:	str	r2, [sp]
   238ec:	ldr	r2, [pc, #-244]	; 23800 <blkid_probe_get_size@plt+0x1c2e8>
   238f0:	add	r0, pc, r0
   238f4:	str	r3, [sp, #8]
   238f8:	mov	r3, #0
   238fc:	str	r1, [sp, #4]
   23900:	str	r0, [sp, #20]
   23904:	str	r3, [sp, #16]
   23908:	str	r3, [sp, #12]
   2390c:	ldr	r1, [sp, #48]	; 0x30
   23910:	ldr	r3, [pc, #-276]	; 23804 <blkid_probe_get_size@plt+0x1c2ec>
   23914:	add	r2, pc, r2
   23918:	mov	r0, #7
   2391c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   23920:	b	233a4 <blkid_probe_get_size@plt+0x1be8c>
   23924:	sub	r1, r6, #8
   23928:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   2392c:	ldr	r3, [sp, #144]	; 0x90
   23930:	cmp	r3, #0
   23934:	beq	2346c <blkid_probe_get_size@plt+0x1bf54>
   23938:	ldr	r0, [pc, #-312]	; 23808 <blkid_probe_get_size@plt+0x1c2f0>
   2393c:	add	r0, pc, r0
   23940:	b	23470 <blkid_probe_get_size@plt+0x1bf58>
   23944:	mov	r3, r0
   23948:	mov	r1, r0
   2394c:	b	2358c <blkid_probe_get_size@plt+0x1c074>
   23950:	sub	r1, r6, #8
   23954:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23958:	ldr	r3, [sp, #144]	; 0x90
   2395c:	cmp	r3, #0
   23960:	beq	238d0 <blkid_probe_get_size@plt+0x1c3b8>
   23964:	ldr	r1, [pc, #-352]	; 2380c <blkid_probe_get_size@plt+0x1c2f4>
   23968:	add	r1, pc, r1
   2396c:	b	238d4 <blkid_probe_get_size@plt+0x1c3bc>
   23970:	mov	r3, r0
   23974:	mov	r1, r0
   23978:	b	238d4 <blkid_probe_get_size@plt+0x1c3bc>
   2397c:	add	r1, sp, #724	; 0x2d4
   23980:	ldr	r0, [sp, #132]	; 0x84
   23984:	bl	638e4 <blkid_probe_get_size@plt+0x5c3cc>
   23988:	mov	r2, #63	; 0x3f
   2398c:	sub	r1, r7, #4
   23990:	ldr	r0, [sp, #132]	; 0x84
   23994:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   23998:	mov	r1, #0
   2399c:	sub	r0, r7, #4
   239a0:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   239a4:	ldr	r1, [pc, #-412]	; 23810 <blkid_probe_get_size@plt+0x1c2f8>
   239a8:	sub	r2, sl, #12
   239ac:	add	r1, pc, r1
   239b0:	ldr	r0, [sp, #140]	; 0x8c
   239b4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   239b8:	subs	sl, r0, #0
   239bc:	bge	23a3c <blkid_probe_get_size@plt+0x1c524>
   239c0:	ldr	r0, [sp, #140]	; 0x8c
   239c4:	mov	r3, #0
   239c8:	cmp	r0, r3
   239cc:	str	r3, [sp, #144]	; 0x90
   239d0:	beq	23ad4 <blkid_probe_get_size@plt+0x1c5bc>
   239d4:	ldr	r2, [pc, #-456]	; 23814 <blkid_probe_get_size@plt+0x1c2fc>
   239d8:	add	r2, pc, r2
   239dc:	ldr	r2, [r2, #4]
   239e0:	cmp	r2, #6
   239e4:	bgt	23ab4 <blkid_probe_get_size@plt+0x1c59c>
   239e8:	mov	r1, r3
   239ec:	ldr	r2, [pc, #-476]	; 23818 <blkid_probe_get_size@plt+0x1c300>
   239f0:	ldr	r0, [pc, #-476]	; 2381c <blkid_probe_get_size@plt+0x1c304>
   239f4:	add	r2, pc, r2
   239f8:	add	r2, r2, #1344	; 0x540
   239fc:	add	r2, r2, #8
   23a00:	str	r2, [sp]
   23a04:	ldr	r2, [pc, #-492]	; 23820 <blkid_probe_get_size@plt+0x1c308>
   23a08:	add	r0, pc, r0
   23a0c:	str	r3, [sp, #8]
   23a10:	mov	r3, #0
   23a14:	str	r1, [sp, #4]
   23a18:	str	r0, [sp, #20]
   23a1c:	str	r3, [sp, #16]
   23a20:	str	r3, [sp, #12]
   23a24:	mov	r1, sl
   23a28:	mov	r3, #344	; 0x158
   23a2c:	add	r2, pc, r2
   23a30:	mov	r0, #7
   23a34:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   23a38:	b	233a4 <blkid_probe_get_size@plt+0x1be8c>
   23a3c:	ldr	r3, [sp, #124]	; 0x7c
   23a40:	sub	sl, r6, #8
   23a44:	mov	r0, r3
   23a48:	mov	r2, #0
   23a4c:	mov	r1, sl
   23a50:	str	r3, [sp, #48]	; 0x30
   23a54:	bl	6c54 <strtoul@plt>
   23a58:	ldr	r2, [sp, #144]	; 0x90
   23a5c:	ldr	r3, [sp, #48]	; 0x30
   23a60:	cmp	r3, r2
   23a64:	beq	23c3c <blkid_probe_get_size@plt+0x1c724>
   23a68:	cmp	r0, #15
   23a6c:	addls	pc, pc, r0, lsl #2
   23a70:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a74:	b	23c24 <blkid_probe_get_size@plt+0x1c70c>
   23a78:	b	23c18 <blkid_probe_get_size@plt+0x1c700>
   23a7c:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a80:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a84:	b	23b90 <blkid_probe_get_size@plt+0x1c678>
   23a88:	b	23ae0 <blkid_probe_get_size@plt+0x1c5c8>
   23a8c:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a90:	b	23b90 <blkid_probe_get_size@plt+0x1c678>
   23a94:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a98:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23a9c:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23aa0:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23aa4:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23aa8:	b	23c30 <blkid_probe_get_size@plt+0x1c718>
   23aac:	b	23c24 <blkid_probe_get_size@plt+0x1c70c>
   23ab0:	b	23b90 <blkid_probe_get_size@plt+0x1c678>
   23ab4:	sub	r1, r6, #8
   23ab8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23abc:	ldr	r3, [sp, #144]	; 0x90
   23ac0:	cmp	r3, #0
   23ac4:	beq	239e8 <blkid_probe_get_size@plt+0x1c4d0>
   23ac8:	ldr	r1, [pc, #-684]	; 23824 <blkid_probe_get_size@plt+0x1c30c>
   23acc:	add	r1, pc, r1
   23ad0:	b	239ec <blkid_probe_get_size@plt+0x1c4d4>
   23ad4:	mov	r3, r0
   23ad8:	mov	r1, r0
   23adc:	b	239ec <blkid_probe_get_size@plt+0x1c4d4>
   23ae0:	ldr	r2, [pc, #-704]	; 23828 <blkid_probe_get_size@plt+0x1c310>
   23ae4:	add	r2, pc, r2
   23ae8:	mov	r1, #63	; 0x3f
   23aec:	sub	r0, fp, #4
   23af0:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   23af4:	ldr	r1, [pc, #-720]	; 2382c <blkid_probe_get_size@plt+0x1c314>
   23af8:	ldr	r2, [sp, #52]	; 0x34
   23afc:	add	r1, pc, r1
   23b00:	ldr	r0, [sp, #140]	; 0x8c
   23b04:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   23b08:	subs	r3, r0, #0
   23b0c:	str	r3, [sp, #48]	; 0x30
   23b10:	bge	23bc8 <blkid_probe_get_size@plt+0x1c6b0>
   23b14:	ldr	r0, [sp, #140]	; 0x8c
   23b18:	mov	r3, #0
   23b1c:	cmp	r0, r3
   23b20:	str	r3, [sp, #144]	; 0x90
   23b24:	beq	23bbc <blkid_probe_get_size@plt+0x1c6a4>
   23b28:	ldr	r2, [pc, #-768]	; 23830 <blkid_probe_get_size@plt+0x1c318>
   23b2c:	add	r2, pc, r2
   23b30:	ldr	r2, [r2, #4]
   23b34:	cmp	r2, #6
   23b38:	bgt	23b9c <blkid_probe_get_size@plt+0x1c684>
   23b3c:	mov	r1, r3
   23b40:	ldr	r2, [pc, #-788]	; 23834 <blkid_probe_get_size@plt+0x1c31c>
   23b44:	ldr	r0, [pc, #-788]	; 23838 <blkid_probe_get_size@plt+0x1c320>
   23b48:	add	r2, pc, r2
   23b4c:	add	r2, r2, #1344	; 0x540
   23b50:	add	r2, r2, #8
   23b54:	str	r2, [sp]
   23b58:	ldr	r2, [pc, #-804]	; 2383c <blkid_probe_get_size@plt+0x1c324>
   23b5c:	add	r0, pc, r0
   23b60:	str	r3, [sp, #8]
   23b64:	mov	r3, #0
   23b68:	str	r1, [sp, #4]
   23b6c:	str	r0, [sp, #20]
   23b70:	str	r3, [sp, #16]
   23b74:	str	r3, [sp, #12]
   23b78:	ldr	r1, [sp, #48]	; 0x30
   23b7c:	ldr	r3, [pc, #-836]	; 23840 <blkid_probe_get_size@plt+0x1c328>
   23b80:	add	r2, pc, r2
   23b84:	mov	r0, #7
   23b88:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   23b8c:	b	233a4 <blkid_probe_get_size@plt+0x1be8c>
   23b90:	ldr	r2, [pc, #-852]	; 23844 <blkid_probe_get_size@plt+0x1c32c>
   23b94:	add	r2, pc, r2
   23b98:	b	23ae8 <blkid_probe_get_size@plt+0x1c5d0>
   23b9c:	mov	r1, sl
   23ba0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   23ba4:	ldr	r3, [sp, #144]	; 0x90
   23ba8:	cmp	r3, #0
   23bac:	beq	23b3c <blkid_probe_get_size@plt+0x1c624>
   23bb0:	ldr	r1, [pc, #-880]	; 23848 <blkid_probe_get_size@plt+0x1c330>
   23bb4:	add	r1, pc, r1
   23bb8:	b	23b40 <blkid_probe_get_size@plt+0x1c628>
   23bbc:	mov	r3, r0
   23bc0:	mov	r1, r0
   23bc4:	b	23b40 <blkid_probe_get_size@plt+0x1c628>
   23bc8:	sub	r3, r9, #4
   23bcc:	mov	sl, r3
   23bd0:	mov	r1, r3
   23bd4:	mov	r2, #63	; 0x3f
   23bd8:	ldr	r0, [sp, #120]	; 0x78
   23bdc:	bl	3b2c4 <blkid_probe_get_size@plt+0x33dac>
   23be0:	mov	r1, #0
   23be4:	mov	r0, sl
   23be8:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   23bec:	ldrd	r2, [sp, #104]	; 0x68
   23bf0:	mov	r1, #1
   23bf4:	sub	r0, r6, #4
   23bf8:	str	r3, [sp]
   23bfc:	ldr	r3, [pc, #-952]	; 2384c <blkid_probe_get_size@plt+0x1c334>
   23c00:	str	r2, [sp, #4]
   23c04:	add	r3, pc, r3
   23c08:	mov	r2, #64	; 0x40
   23c0c:	bl	7404 <__sprintf_chk@plt>
   23c10:	ldr	r0, [sp, #88]	; 0x58
   23c14:	b	22928 <blkid_probe_get_size@plt+0x1b410>
   23c18:	ldr	r2, [pc, #-976]	; 23850 <blkid_probe_get_size@plt+0x1c338>
   23c1c:	add	r2, pc, r2
   23c20:	b	23ae8 <blkid_probe_get_size@plt+0x1c5d0>
   23c24:	ldr	r2, [pc, #-984]	; 23854 <blkid_probe_get_size@plt+0x1c33c>
   23c28:	add	r2, pc, r2
   23c2c:	b	23ae8 <blkid_probe_get_size@plt+0x1c5d0>
   23c30:	ldr	r2, [pc, #-992]	; 23858 <blkid_probe_get_size@plt+0x1c340>
   23c34:	add	r2, pc, r2
   23c38:	b	23ae8 <blkid_probe_get_size@plt+0x1c5d0>
   23c3c:	ldr	r2, [pc, #-1000]	; 2385c <blkid_probe_get_size@plt+0x1c344>
   23c40:	add	r2, pc, r2
   23c44:	b	23ae8 <blkid_probe_get_size@plt+0x1c5d0>
   23c48:	ldr	ip, [pc, #472]	; 23e28 <blkid_probe_get_size@plt+0x1c910>
   23c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c50:	add	ip, pc, ip
   23c54:	ldr	lr, [pc, #464]	; 23e2c <blkid_probe_get_size@plt+0x1c914>
   23c58:	sub	sp, sp, #20
   23c5c:	mov	r8, r3
   23c60:	ldr	r4, [ip, lr]
   23c64:	subs	r7, r0, #0
   23c68:	mov	r5, r2
   23c6c:	ldr	r3, [r4]
   23c70:	mov	r2, ip
   23c74:	str	r3, [sp, #12]
   23c78:	beq	23dc8 <blkid_probe_get_size@plt+0x1c8b0>
   23c7c:	cmp	r1, #0
   23c80:	mov	r6, r1
   23c84:	beq	23df4 <blkid_probe_get_size@plt+0x1c8dc>
   23c88:	cmp	r8, #0
   23c8c:	addne	sl, r7, #40	; 0x28
   23c90:	addeq	sl, r7, #12
   23c94:	cmp	r5, #0
   23c98:	beq	23d14 <blkid_probe_get_size@plt+0x1c7fc>
   23c9c:	ldr	r1, [pc, #396]	; 23e30 <blkid_probe_get_size@plt+0x1c918>
   23ca0:	mov	r9, #0
   23ca4:	mov	r2, #1
   23ca8:	add	r1, pc, r1
   23cac:	mov	r0, sl
   23cb0:	str	r9, [sp, #8]
   23cb4:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   23cb8:	subs	fp, r0, #0
   23cbc:	blt	23d68 <blkid_probe_get_size@plt+0x1c850>
   23cc0:	mov	r0, r6
   23cc4:	bl	74e8 <strdup@plt>
   23cc8:	subs	r6, r0, #0
   23ccc:	beq	23db8 <blkid_probe_get_size@plt+0x1c8a0>
   23cd0:	mov	r0, r5
   23cd4:	bl	74e8 <strdup@plt>
   23cd8:	subs	r9, r0, #0
   23cdc:	beq	23dac <blkid_probe_get_size@plt+0x1c894>
   23ce0:	add	r2, sp, #8
   23ce4:	mov	r1, r6
   23ce8:	ldr	r0, [sl]
   23cec:	bl	43ad4 <blkid_probe_get_size@plt+0x3c5bc>
   23cf0:	mov	r2, r9
   23cf4:	mov	r1, r6
   23cf8:	mov	r5, r0
   23cfc:	ldr	r0, [sl]
   23d00:	bl	43bd0 <blkid_probe_get_size@plt+0x3c6b8>
   23d04:	subs	fp, r0, #0
   23d08:	blt	23d70 <blkid_probe_get_size@plt+0x1c858>
   23d0c:	mov	r0, r5
   23d10:	b	23d2c <blkid_probe_get_size@plt+0x1c814>
   23d14:	ldr	r0, [sl]
   23d18:	str	r5, [sp, #8]
   23d1c:	cmp	r0, #0
   23d20:	beq	23d0c <blkid_probe_get_size@plt+0x1c7f4>
   23d24:	add	r2, sp, #8
   23d28:	bl	42e7c <blkid_probe_get_size@plt+0x3b964>
   23d2c:	bl	69f0 <free@plt>
   23d30:	ldr	r0, [sp, #8]
   23d34:	bl	69f0 <free@plt>
   23d38:	cmp	r8, #0
   23d3c:	movne	fp, #0
   23d40:	bne	23d90 <blkid_probe_get_size@plt+0x1c878>
   23d44:	ldrd	r2, [r7, #24]
   23d48:	ldrb	r1, [r7, #212]	; 0xd4
   23d4c:	mov	fp, r8
   23d50:	adds	r8, r2, #1
   23d54:	adc	r9, r3, #0
   23d58:	orr	r3, r1, #16
   23d5c:	strd	r8, [r7, #24]
   23d60:	strb	r3, [r7, #212]	; 0xd4
   23d64:	b	23d90 <blkid_probe_get_size@plt+0x1c878>
   23d68:	mov	r5, r9
   23d6c:	mov	r6, r9
   23d70:	mov	r0, r5
   23d74:	bl	69f0 <free@plt>
   23d78:	ldr	r0, [sp, #8]
   23d7c:	bl	69f0 <free@plt>
   23d80:	mov	r0, r9
   23d84:	bl	69f0 <free@plt>
   23d88:	mov	r0, r6
   23d8c:	bl	69f0 <free@plt>
   23d90:	ldr	r2, [sp, #12]
   23d94:	ldr	r3, [r4]
   23d98:	mov	r0, fp
   23d9c:	cmp	r2, r3
   23da0:	bne	23e24 <blkid_probe_get_size@plt+0x1c90c>
   23da4:	add	sp, sp, #20
   23da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dac:	mov	r5, r9
   23db0:	mvn	fp, #11
   23db4:	b	23d70 <blkid_probe_get_size@plt+0x1c858>
   23db8:	mov	r5, r6
   23dbc:	mov	r9, r6
   23dc0:	mvn	fp, #11
   23dc4:	b	23d70 <blkid_probe_get_size@plt+0x1c858>
   23dc8:	ldr	r2, [pc, #100]	; 23e34 <blkid_probe_get_size@plt+0x1c91c>
   23dcc:	ldr	r1, [pc, #100]	; 23e38 <blkid_probe_get_size@plt+0x1c920>
   23dd0:	add	r2, pc, r2
   23dd4:	add	r2, r2, #1360	; 0x550
   23dd8:	add	r2, r2, #8
   23ddc:	str	r2, [sp]
   23de0:	ldr	r2, [pc, #84]	; 23e3c <blkid_probe_get_size@plt+0x1c924>
   23de4:	mov	r3, #82	; 0x52
   23de8:	add	r2, pc, r2
   23dec:	add	r1, pc, r1
   23df0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   23df4:	ldr	r3, [pc, #68]	; 23e40 <blkid_probe_get_size@plt+0x1c928>
   23df8:	mov	r0, r1
   23dfc:	add	r3, pc, r3
   23e00:	add	r3, r3, #1360	; 0x550
   23e04:	ldr	r2, [pc, #56]	; 23e44 <blkid_probe_get_size@plt+0x1c92c>
   23e08:	ldr	r1, [pc, #56]	; 23e48 <blkid_probe_get_size@plt+0x1c930>
   23e0c:	add	r3, r3, #8
   23e10:	str	r3, [sp]
   23e14:	add	r2, pc, r2
   23e18:	mov	r3, #83	; 0x53
   23e1c:	add	r1, pc, r1
   23e20:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   23e24:	bl	6fb4 <__stack_chk_fail@plt>
   23e28:	andeq	r3, r7, r8, lsl pc
   23e2c:	andeq	r0, r0, ip, lsr r4
   23e30:	andeq	r3, r7, r0, lsl #27
   23e34:	andeq	r5, r4, r8, lsr r8
   23e38:	andeq	r7, r4, r4, ror r1
   23e3c:	andeq	r1, r4, r8, asr #27
   23e40:	andeq	r5, r4, ip, lsl #16
   23e44:	muleq	r4, ip, sp
   23e48:			; <UNDEFINED> instruction: 0x000473b8
   23e4c:	mov	r3, #0
   23e50:	b	23c48 <blkid_probe_get_size@plt+0x1c730>
   23e54:	ldr	r3, [pc, #460]	; 24028 <blkid_probe_get_size@plt+0x1cb10>
   23e58:	ldr	ip, [pc, #460]	; 2402c <blkid_probe_get_size@plt+0x1cb14>
   23e5c:	add	r3, pc, r3
   23e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e64:	sub	sp, sp, #36	; 0x24
   23e68:	ldr	r4, [r3, ip]
   23e6c:	mov	r6, #0
   23e70:	subs	r5, r0, #0
   23e74:	ldr	r3, [r4]
   23e78:	str	r6, [sp, #24]
   23e7c:	str	r3, [sp, #28]
   23e80:	str	r6, [sp, #20]
   23e84:	beq	23fa4 <blkid_probe_get_size@plt+0x1ca8c>
   23e88:	cmp	r1, #0
   23e8c:	mov	r7, r1
   23e90:	beq	23fcc <blkid_probe_get_size@plt+0x1cab4>
   23e94:	mov	r8, r2
   23e98:	mov	r1, r6
   23e9c:	add	r2, sp, #24
   23ea0:	mov	r0, r7
   23ea4:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   23ea8:	cmp	r0, #0
   23eac:	blt	23f8c <blkid_probe_get_size@plt+0x1ca74>
   23eb0:	ldr	r0, [sp, #24]
   23eb4:	cmp	r0, #0
   23eb8:	beq	23f8c <blkid_probe_get_size@plt+0x1ca74>
   23ebc:	cmp	r8, #0
   23ec0:	beq	23ff8 <blkid_probe_get_size@plt+0x1cae0>
   23ec4:	mov	r1, r6
   23ec8:	add	r2, sp, #20
   23ecc:	mov	r0, r8
   23ed0:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   23ed4:	cmp	r0, #0
   23ed8:	blt	23f8c <blkid_probe_get_size@plt+0x1ca74>
   23edc:	ldr	r1, [pc, #332]	; 24030 <blkid_probe_get_size@plt+0x1cb18>
   23ee0:	mov	r2, r7
   23ee4:	add	r1, pc, r1
   23ee8:	mov	r0, r5
   23eec:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   23ef0:	cmp	r0, #0
   23ef4:	blt	23f8c <blkid_probe_get_size@plt+0x1ca74>
   23ef8:	ldr	r1, [pc, #308]	; 24034 <blkid_probe_get_size@plt+0x1cb1c>
   23efc:	mov	r2, r8
   23f00:	add	r1, pc, r1
   23f04:	mov	r0, r5
   23f08:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   23f0c:	cmp	r0, #0
   23f10:	blt	23f8c <blkid_probe_get_size@plt+0x1ca74>
   23f14:	ldr	ip, [sp, #24]
   23f18:	ldr	r8, [pc, #280]	; 24038 <blkid_probe_get_size@plt+0x1cb20>
   23f1c:	mov	r9, #0
   23f20:	lsr	r3, ip, #24
   23f24:	lsl	r2, ip, #8
   23f28:	and	r6, r8, r2
   23f2c:	and	r7, r9, r3
   23f30:	ldr	r3, [pc, #260]	; 2403c <blkid_probe_get_size@plt+0x1cb24>
   23f34:	strd	r6, [sp, #8]
   23f38:	ldrd	sl, [sp, #8]
   23f3c:	ldr	r1, [sp, #20]
   23f40:	mov	r2, #0
   23f44:	mov	r0, #0
   23f48:	and	r7, ip, r3
   23f4c:	and	r6, r0, r2
   23f50:	add	r3, pc, #200	; 0xc8
   23f54:	ldrd	r2, [r3]
   23f58:	orr	sl, sl, r6
   23f5c:	orr	fp, fp, r7
   23f60:	mov	r6, sl
   23f64:	mov	r7, fp
   23f68:	lsr	r9, r1, #20
   23f6c:	uxtb	ip, r1
   23f70:	lsl	r8, r1, #12
   23f74:	orr	r6, r6, ip
   23f78:	and	sl, r8, r2
   23f7c:	and	fp, r9, r3
   23f80:	orr	r6, r6, sl
   23f84:	orr	r7, r7, fp
   23f88:	strd	r6, [r5, #136]	; 0x88
   23f8c:	ldr	r2, [sp, #28]
   23f90:	ldr	r3, [r4]
   23f94:	cmp	r2, r3
   23f98:	bne	24018 <blkid_probe_get_size@plt+0x1cb00>
   23f9c:	add	sp, sp, #36	; 0x24
   23fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23fa4:	ldr	r2, [pc, #148]	; 24040 <blkid_probe_get_size@plt+0x1cb28>
   23fa8:	ldr	r1, [pc, #148]	; 24044 <blkid_probe_get_size@plt+0x1cb2c>
   23fac:	add	r2, pc, r2
   23fb0:	add	r2, r2, #1392	; 0x570
   23fb4:	str	r2, [sp]
   23fb8:	ldr	r2, [pc, #136]	; 24048 <blkid_probe_get_size@plt+0x1cb30>
   23fbc:	ldr	r3, [pc, #136]	; 2404c <blkid_probe_get_size@plt+0x1cb34>
   23fc0:	add	r2, pc, r2
   23fc4:	add	r1, pc, r1
   23fc8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   23fcc:	ldr	r3, [pc, #124]	; 24050 <blkid_probe_get_size@plt+0x1cb38>
   23fd0:	mov	r0, r1
   23fd4:	add	r3, pc, r3
   23fd8:	ldr	r2, [pc, #116]	; 24054 <blkid_probe_get_size@plt+0x1cb3c>
   23fdc:	ldr	r1, [pc, #116]	; 24058 <blkid_probe_get_size@plt+0x1cb40>
   23fe0:	add	r3, r3, #1392	; 0x570
   23fe4:	str	r3, [sp]
   23fe8:	add	r2, pc, r2
   23fec:	ldr	r3, [pc, #104]	; 2405c <blkid_probe_get_size@plt+0x1cb44>
   23ff0:	add	r1, pc, r1
   23ff4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   23ff8:	ldr	r1, [pc, #96]	; 24060 <blkid_probe_get_size@plt+0x1cb48>
   23ffc:	mov	r2, r7
   24000:	add	r1, pc, r1
   24004:	mov	r0, r5
   24008:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   2400c:	cmp	r0, #0
   24010:	bge	23f14 <blkid_probe_get_size@plt+0x1c9fc>
   24014:	b	23f8c <blkid_probe_get_size@plt+0x1ca74>
   24018:	bl	6fb4 <__stack_chk_fail@plt>
   2401c:	nop			; (mov r0, r0)
   24020:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   24024:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   24028:	andeq	r3, r7, ip, lsl #26
   2402c:	andeq	r0, r0, ip, lsr r4
   24030:	andeq	r5, r4, ip, ror #13
   24034:	ldrdeq	r5, [r4], -r8
   24038:	andeq	pc, pc, r0, lsl #30
   2403c:			; <UNDEFINED> instruction: 0xfffff000
   24040:	andeq	r5, r4, ip, asr r6
   24044:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   24048:	strdeq	r1, [r4], -r0
   2404c:	muleq	r0, sl, r1
   24050:	andeq	r5, r4, r4, lsr r6
   24054:	andeq	r1, r4, r8, asr #23
   24058:			; <UNDEFINED> instruction: 0x000455b4
   2405c:	muleq	r0, fp, r1
   24060:	ldrdeq	r5, [r4], -r0
   24064:	ldr	r3, [pc, #244]	; 24160 <blkid_probe_get_size@plt+0x1cc48>
   24068:	ldr	r2, [pc, #244]	; 24164 <blkid_probe_get_size@plt+0x1cc4c>
   2406c:	add	r3, pc, r3
   24070:	push	{r4, r5, r6, lr}
   24074:	sub	sp, sp, #16
   24078:	ldr	r5, [r3, r2]
   2407c:	subs	r6, r0, #0
   24080:	ldr	r3, [r5]
   24084:	str	r3, [sp, #12]
   24088:	beq	240f8 <blkid_probe_get_size@plt+0x1cbe0>
   2408c:	cmp	r1, #0
   24090:	mov	r4, r1
   24094:	beq	24124 <blkid_probe_get_size@plt+0x1cc0c>
   24098:	add	r2, sp, #8
   2409c:	mov	r1, #0
   240a0:	mov	r0, r4
   240a4:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   240a8:	cmp	r0, #0
   240ac:	blt	240e0 <blkid_probe_get_size@plt+0x1cbc8>
   240b0:	ldr	r3, [sp, #8]
   240b4:	cmp	r3, #4096	; 0x1000
   240b8:	bcs	24154 <blkid_probe_get_size@plt+0x1cc3c>
   240bc:	ldr	r1, [pc, #164]	; 24168 <blkid_probe_get_size@plt+0x1cc50>
   240c0:	mov	r2, r4
   240c4:	add	r1, pc, r1
   240c8:	mov	r0, r6
   240cc:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   240d0:	cmp	r0, #0
   240d4:	ldrge	r3, [sp, #8]
   240d8:	movge	r0, #0
   240dc:	strge	r3, [r6, #200]	; 0xc8
   240e0:	ldr	r2, [sp, #12]
   240e4:	ldr	r3, [r5]
   240e8:	cmp	r2, r3
   240ec:	bne	2415c <blkid_probe_get_size@plt+0x1cc44>
   240f0:	add	sp, sp, #16
   240f4:	pop	{r4, r5, r6, pc}
   240f8:	ldr	r2, [pc, #108]	; 2416c <blkid_probe_get_size@plt+0x1cc54>
   240fc:	ldr	r1, [pc, #108]	; 24170 <blkid_probe_get_size@plt+0x1cc58>
   24100:	add	r2, pc, r2
   24104:	add	r2, r2, #1408	; 0x580
   24108:	add	r2, r2, #4
   2410c:	str	r2, [sp]
   24110:	ldr	r2, [pc, #92]	; 24174 <blkid_probe_get_size@plt+0x1cc5c>
   24114:	ldr	r3, [pc, #92]	; 24178 <blkid_probe_get_size@plt+0x1cc60>
   24118:	add	r2, pc, r2
   2411c:	add	r1, pc, r1
   24120:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24124:	ldr	r3, [pc, #80]	; 2417c <blkid_probe_get_size@plt+0x1cc64>
   24128:	mov	r0, r1
   2412c:	add	r3, pc, r3
   24130:	add	r3, r3, #1408	; 0x580
   24134:	ldr	r2, [pc, #68]	; 24180 <blkid_probe_get_size@plt+0x1cc68>
   24138:	ldr	r1, [pc, #68]	; 24184 <blkid_probe_get_size@plt+0x1cc6c>
   2413c:	add	r3, r3, #4
   24140:	str	r3, [sp]
   24144:	add	r2, pc, r2
   24148:	mov	r3, #388	; 0x184
   2414c:	add	r1, pc, r1
   24150:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24154:	mvn	r0, #21
   24158:	b	240e0 <blkid_probe_get_size@plt+0x1cbc8>
   2415c:	bl	6fb4 <__stack_chk_fail@plt>
   24160:	strdeq	r3, [r7], -ip
   24164:	andeq	r0, r0, ip, lsr r4
   24168:	andeq	r7, r4, r4, lsr #2
   2416c:	andeq	r5, r4, r8, lsl #10
   24170:	andeq	r6, r4, r4, asr #28
   24174:	muleq	r4, r8, sl
   24178:	andeq	r0, r0, r3, lsl #3
   2417c:	ldrdeq	r5, [r4], -ip
   24180:	andeq	r1, r4, ip, ror #20
   24184:	muleq	r4, r0, r0
   24188:	ldr	r2, [pc, #312]	; 242c8 <blkid_probe_get_size@plt+0x1cdb0>
   2418c:	ldr	ip, [pc, #312]	; 242cc <blkid_probe_get_size@plt+0x1cdb4>
   24190:	add	r2, pc, r2
   24194:	push	{r4, r5, r6, lr}
   24198:	sub	sp, sp, #16
   2419c:	ldr	r4, [r2, ip]
   241a0:	mov	r3, #0
   241a4:	str	r3, [sp, #8]
   241a8:	ldr	r3, [r4]
   241ac:	subs	r5, r0, #0
   241b0:	str	r3, [sp, #12]
   241b4:	beq	24268 <blkid_probe_get_size@plt+0x1cd50>
   241b8:	cmp	r1, #0
   241bc:	beq	24294 <blkid_probe_get_size@plt+0x1cd7c>
   241c0:	ldrb	r3, [r1]
   241c4:	cmp	r3, #47	; 0x2f
   241c8:	beq	2424c <blkid_probe_get_size@plt+0x1cd34>
   241cc:	ldr	r2, [pc, #252]	; 242d0 <blkid_probe_get_size@plt+0x1cdb8>
   241d0:	mov	r3, r1
   241d4:	add	r2, pc, r2
   241d8:	mov	r1, #1
   241dc:	add	r0, sp, #8
   241e0:	bl	7080 <__asprintf_chk@plt>
   241e4:	cmp	r0, #0
   241e8:	ldr	r0, [sp, #8]
   241ec:	blt	24260 <blkid_probe_get_size@plt+0x1cd48>
   241f0:	ldr	r1, [pc, #220]	; 242d4 <blkid_probe_get_size@plt+0x1cdbc>
   241f4:	mov	r2, r0
   241f8:	add	r1, pc, r1
   241fc:	mov	r0, r5
   24200:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   24204:	subs	r6, r0, #0
   24208:	blt	24244 <blkid_probe_get_size@plt+0x1cd2c>
   2420c:	ldr	r0, [r5, #132]	; 0x84
   24210:	bl	69f0 <free@plt>
   24214:	mov	r0, #0
   24218:	ldr	r3, [sp, #8]
   2421c:	mov	r6, r0
   24220:	str	r3, [r5, #132]	; 0x84
   24224:	bl	69f0 <free@plt>
   24228:	ldr	r2, [sp, #12]
   2422c:	ldr	r3, [r4]
   24230:	mov	r0, r6
   24234:	cmp	r2, r3
   24238:	bne	242c4 <blkid_probe_get_size@plt+0x1cdac>
   2423c:	add	sp, sp, #16
   24240:	pop	{r4, r5, r6, pc}
   24244:	ldr	r0, [sp, #8]
   24248:	b	24224 <blkid_probe_get_size@plt+0x1cd0c>
   2424c:	mov	r0, r1
   24250:	bl	74e8 <strdup@plt>
   24254:	cmp	r0, #0
   24258:	str	r0, [sp, #8]
   2425c:	bne	241f0 <blkid_probe_get_size@plt+0x1ccd8>
   24260:	mvn	r6, #11
   24264:	b	24224 <blkid_probe_get_size@plt+0x1cd0c>
   24268:	ldr	r2, [pc, #104]	; 242d8 <blkid_probe_get_size@plt+0x1cdc0>
   2426c:	ldr	r1, [pc, #104]	; 242dc <blkid_probe_get_size@plt+0x1cdc4>
   24270:	add	r2, pc, r2
   24274:	add	r2, r2, #1424	; 0x590
   24278:	add	r2, r2, #8
   2427c:	str	r2, [sp]
   24280:	ldr	r2, [pc, #88]	; 242e0 <blkid_probe_get_size@plt+0x1cdc8>
   24284:	ldr	r3, [pc, #88]	; 242e4 <blkid_probe_get_size@plt+0x1cdcc>
   24288:	add	r2, pc, r2
   2428c:	add	r1, pc, r1
   24290:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24294:	ldr	r3, [pc, #76]	; 242e8 <blkid_probe_get_size@plt+0x1cdd0>
   24298:	mov	r0, r1
   2429c:	add	r3, pc, r3
   242a0:	add	r3, r3, #1424	; 0x590
   242a4:	ldr	r2, [pc, #64]	; 242ec <blkid_probe_get_size@plt+0x1cdd4>
   242a8:	ldr	r1, [pc, #64]	; 242f0 <blkid_probe_get_size@plt+0x1cdd8>
   242ac:	add	r3, r3, #8
   242b0:	str	r3, [sp]
   242b4:	add	r2, pc, r2
   242b8:	ldr	r3, [pc, #52]	; 242f4 <blkid_probe_get_size@plt+0x1cddc>
   242bc:	add	r1, pc, r1
   242c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   242c4:	bl	6fb4 <__stack_chk_fail@plt>
   242c8:	ldrdeq	r3, [r7], -r8
   242cc:	andeq	r0, r0, ip, lsr r4
   242d0:	andeq	r7, r4, r8, lsr #32
   242d4:	strdeq	r5, [r4], -r0
   242d8:	muleq	r4, r8, r3
   242dc:	ldrdeq	r6, [r4], -r4
   242e0:	andeq	r1, r4, r8, lsr #18
   242e4:	andeq	r0, r0, r9, ror #2
   242e8:	andeq	r5, r4, ip, ror #6
   242ec:	strdeq	r1, [r4], -ip
   242f0:	andeq	r6, r4, r4, lsr pc
   242f4:	andeq	r0, r0, sl, ror #2
   242f8:	ldr	r3, [pc, #232]	; 243e8 <blkid_probe_get_size@plt+0x1ced0>
   242fc:	ldr	ip, [pc, #232]	; 243ec <blkid_probe_get_size@plt+0x1ced4>
   24300:	add	r3, pc, r3
   24304:	push	{r4, r5, r6, r7, lr}
   24308:	sub	sp, sp, #20
   2430c:	ldr	r5, [r3, ip]
   24310:	subs	r6, r0, #0
   24314:	ldr	r3, [r5]
   24318:	str	r3, [sp, #12]
   2431c:	beq	24388 <blkid_probe_get_size@plt+0x1ce70>
   24320:	cmp	r1, #0
   24324:	mov	r4, r1
   24328:	beq	243b4 <blkid_probe_get_size@plt+0x1ce9c>
   2432c:	add	r1, sp, #8
   24330:	mov	r0, r4
   24334:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   24338:	cmp	r0, #0
   2433c:	blt	24370 <blkid_probe_get_size@plt+0x1ce58>
   24340:	ldr	r7, [sp, #8]
   24344:	cmp	r7, #0
   24348:	mvnle	r0, #21
   2434c:	ble	24370 <blkid_probe_get_size@plt+0x1ce58>
   24350:	ldr	r1, [pc, #152]	; 243f0 <blkid_probe_get_size@plt+0x1ced8>
   24354:	mov	r2, r4
   24358:	add	r1, pc, r1
   2435c:	mov	r0, r6
   24360:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   24364:	cmp	r0, #0
   24368:	movge	r0, #0
   2436c:	strge	r7, [r6, #124]	; 0x7c
   24370:	ldr	r2, [sp, #12]
   24374:	ldr	r3, [r5]
   24378:	cmp	r2, r3
   2437c:	bne	243e4 <blkid_probe_get_size@plt+0x1cecc>
   24380:	add	sp, sp, #20
   24384:	pop	{r4, r5, r6, r7, pc}
   24388:	ldr	r2, [pc, #100]	; 243f4 <blkid_probe_get_size@plt+0x1cedc>
   2438c:	ldr	r1, [pc, #100]	; 243f8 <blkid_probe_get_size@plt+0x1cee0>
   24390:	add	r2, pc, r2
   24394:	add	r2, r2, #1440	; 0x5a0
   24398:	add	r2, r2, #12
   2439c:	str	r2, [sp]
   243a0:	ldr	r2, [pc, #84]	; 243fc <blkid_probe_get_size@plt+0x1cee4>
   243a4:	ldr	r3, [pc, #84]	; 24400 <blkid_probe_get_size@plt+0x1cee8>
   243a8:	add	r2, pc, r2
   243ac:	add	r1, pc, r1
   243b0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   243b4:	ldr	r3, [pc, #72]	; 24404 <blkid_probe_get_size@plt+0x1ceec>
   243b8:	mov	r0, r1
   243bc:	add	r3, pc, r3
   243c0:	add	r3, r3, #1440	; 0x5a0
   243c4:	ldr	r2, [pc, #60]	; 24408 <blkid_probe_get_size@plt+0x1cef0>
   243c8:	ldr	r1, [pc, #60]	; 2440c <blkid_probe_get_size@plt+0x1cef4>
   243cc:	add	r3, r3, #12
   243d0:	str	r3, [sp]
   243d4:	add	r2, pc, r2
   243d8:	ldr	r3, [pc, #48]	; 24410 <blkid_probe_get_size@plt+0x1cef8>
   243dc:	add	r1, pc, r1
   243e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   243e4:	bl	6fb4 <__stack_chk_fail@plt>
   243e8:	andeq	r3, r7, r8, ror #16
   243ec:	andeq	r0, r0, ip, lsr r4
   243f0:	andeq	r5, r4, r8, lsl #5
   243f4:	andeq	r5, r4, r8, ror r2
   243f8:			; <UNDEFINED> instruction: 0x00046bb4
   243fc:	andeq	r1, r4, r8, lsl #16
   24400:	andeq	r0, r0, r5, asr r1
   24404:	andeq	r5, r4, ip, asr #4
   24408:	ldrdeq	r1, [r4], -ip
   2440c:	andeq	r6, r4, r8, lsr #28
   24410:	andeq	r0, r0, r6, asr r1
   24414:	push	{r4, r5, r6, lr}
   24418:	subs	r5, r0, #0
   2441c:	sub	sp, sp, #8
   24420:	beq	24480 <blkid_probe_get_size@plt+0x1cf68>
   24424:	cmp	r1, #0
   24428:	beq	244a8 <blkid_probe_get_size@plt+0x1cf90>
   2442c:	mov	r0, r1
   24430:	bl	74e8 <strdup@plt>
   24434:	subs	r4, r0, #0
   24438:	beq	244d4 <blkid_probe_get_size@plt+0x1cfbc>
   2443c:	ldr	r1, [pc, #152]	; 244dc <blkid_probe_get_size@plt+0x1cfc4>
   24440:	mov	r2, r4
   24444:	add	r1, pc, r1
   24448:	mov	r0, r5
   2444c:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   24450:	subs	r6, r0, #0
   24454:	blt	2446c <blkid_probe_get_size@plt+0x1cf54>
   24458:	ldr	r0, [r5, #128]	; 0x80
   2445c:	bl	69f0 <free@plt>
   24460:	str	r4, [r5, #128]	; 0x80
   24464:	mov	r4, #0
   24468:	mov	r6, r4
   2446c:	mov	r0, r4
   24470:	bl	69f0 <free@plt>
   24474:	mov	r0, r6
   24478:	add	sp, sp, #8
   2447c:	pop	{r4, r5, r6, pc}
   24480:	ldr	r2, [pc, #88]	; 244e0 <blkid_probe_get_size@plt+0x1cfc8>
   24484:	ldr	r1, [pc, #88]	; 244e4 <blkid_probe_get_size@plt+0x1cfcc>
   24488:	add	r2, pc, r2
   2448c:	add	r2, r2, #1472	; 0x5c0
   24490:	str	r2, [sp]
   24494:	ldr	r2, [pc, #76]	; 244e8 <blkid_probe_get_size@plt+0x1cfd0>
   24498:	ldr	r3, [pc, #76]	; 244ec <blkid_probe_get_size@plt+0x1cfd4>
   2449c:	add	r2, pc, r2
   244a0:	add	r1, pc, r1
   244a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   244a8:	ldr	r3, [pc, #64]	; 244f0 <blkid_probe_get_size@plt+0x1cfd8>
   244ac:	mov	r0, r1
   244b0:	add	r3, pc, r3
   244b4:	ldr	r2, [pc, #56]	; 244f4 <blkid_probe_get_size@plt+0x1cfdc>
   244b8:	ldr	r1, [pc, #56]	; 244f8 <blkid_probe_get_size@plt+0x1cfe0>
   244bc:	add	r3, r3, #1472	; 0x5c0
   244c0:	str	r3, [sp]
   244c4:	add	r2, pc, r2
   244c8:	ldr	r3, [pc, #44]	; 244fc <blkid_probe_get_size@plt+0x1cfe4>
   244cc:	add	r1, pc, r1
   244d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   244d4:	mvn	r6, #11
   244d8:	b	2446c <blkid_probe_get_size@plt+0x1cf54>
   244dc:	andeq	r5, r4, r4, lsl #3
   244e0:	andeq	r5, r4, r0, lsl #3
   244e4:	andeq	r6, r4, r0, asr #21
   244e8:	andeq	r1, r4, r4, lsl r7
   244ec:	andeq	r0, r0, r2, asr #2
   244f0:	andeq	r5, r4, r8, asr r1
   244f4:	andeq	r1, r4, ip, ror #13
   244f8:	andeq	r6, r4, r4, asr #26
   244fc:	andeq	r0, r0, r3, asr #2
   24500:	ldr	r3, [pc, #1800]	; 24c10 <blkid_probe_get_size@plt+0x1d6f8>
   24504:	ldr	r2, [pc, #1800]	; 24c14 <blkid_probe_get_size@plt+0x1d6fc>
   24508:	add	r3, pc, r3
   2450c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24510:	add	fp, sp, #32
   24514:	sub	sp, sp, #100	; 0x64
   24518:	ldr	sl, [r3, r2]
   2451c:	mov	r5, #0
   24520:	subs	r6, r0, #0
   24524:	ldr	r3, [sl]
   24528:	str	r5, [fp, #-48]	; 0xffffffd0
   2452c:	str	r3, [fp, #-40]	; 0xffffffd8
   24530:	beq	24754 <blkid_probe_get_size@plt+0x1d23c>
   24534:	ldr	r4, [pc, #1756]	; 24c18 <blkid_probe_get_size@plt+0x1d700>
   24538:	ldr	r3, [r6, #212]	; 0xd4
   2453c:	ands	r4, r4, r3
   24540:	bne	246a4 <blkid_probe_get_size@plt+0x1d18c>
   24544:	sub	r1, fp, #52	; 0x34
   24548:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   2454c:	subs	r8, r0, #0
   24550:	blt	2474c <blkid_probe_get_size@plt+0x1d234>
   24554:	ldr	r5, [fp, #-52]	; 0xffffffcc
   24558:	cmp	r5, #0
   2455c:	beq	24af4 <blkid_probe_get_size@plt+0x1d5dc>
   24560:	mov	r0, r5
   24564:	bl	723c <strlen@plt>
   24568:	add	r3, r0, #8
   2456c:	cmp	r3, #4194304	; 0x400000
   24570:	bhi	24a18 <blkid_probe_get_size@plt+0x1d500>
   24574:	add	r0, r0, #22
   24578:	bic	r0, r0, #7
   2457c:	sub	sp, sp, r0
   24580:	add	r7, sp, #40	; 0x28
   24584:	mov	r1, r5
   24588:	mov	r0, r7
   2458c:	bl	6ae0 <stpcpy@plt>
   24590:	ldr	r3, [pc, #1668]	; 24c1c <blkid_probe_get_size@plt+0x1d704>
   24594:	add	r3, pc, r3
   24598:	mov	r2, r0
   2459c:	add	ip, r0, #7
   245a0:	ldm	r3!, {r0, r1}
   245a4:	str	r0, [r2]
   245a8:	str	r1, [r2, #4]
   245ac:	mov	r8, #0
   245b0:	strb	r8, [ip]
   245b4:	sub	r2, fp, #56	; 0x38
   245b8:	sub	r1, fp, #48	; 0x30
   245bc:	mov	r0, r7
   245c0:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   245c4:	cmn	r0, #13
   245c8:	mov	r5, r0
   245cc:	beq	24780 <blkid_probe_get_size@plt+0x1d268>
   245d0:	cmn	r0, #2
   245d4:	beq	2474c <blkid_probe_get_size@plt+0x1d234>
   245d8:	cmp	r0, #0
   245dc:	blt	24790 <blkid_probe_get_size@plt+0x1d278>
   245e0:	ldrb	r3, [r6, #213]	; 0xd5
   245e4:	orr	r3, r3, #2
   245e8:	strb	r3, [r6, #213]	; 0xd5
   245ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   245f0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   245f4:	cmp	r3, #0
   245f8:	beq	2469c <blkid_probe_get_size@plt+0x1d184>
   245fc:	ldr	r1, [pc, #1564]	; 24c20 <blkid_probe_get_size@plt+0x1d708>
   24600:	ldr	r2, [pc, #1564]	; 24c24 <blkid_probe_get_size@plt+0x1d70c>
   24604:	add	r1, pc, r1
   24608:	add	r2, pc, r2
   2460c:	add	r1, r1, #1504	; 0x5e0
   24610:	add	r2, r2, #1504	; 0x5e0
   24614:	str	sl, [fp, #-84]	; 0xffffffac
   24618:	mov	sl, r3
   2461c:	add	r1, r1, #12
   24620:	add	r2, r2, #12
   24624:	str	r8, [fp, #-68]	; 0xffffffbc
   24628:	str	r1, [fp, #-72]	; 0xffffffb8
   2462c:	str	r2, [fp, #-88]	; 0xffffffa8
   24630:	str	r8, [fp, #-76]	; 0xffffffb4
   24634:	str	r7, [fp, #-80]	; 0xffffffb0
   24638:	ldr	r9, [pc, #1512]	; 24c28 <blkid_probe_get_size@plt+0x1d710>
   2463c:	add	r8, r5, r4
   24640:	add	r9, pc, r9
   24644:	ldrb	r1, [r8]
   24648:	mov	r0, r9
   2464c:	bl	74c4 <strchr@plt>
   24650:	mov	r7, r8
   24654:	add	r4, r4, #1
   24658:	add	r8, r8, #1
   2465c:	cmp	r0, #0
   24660:	beq	24828 <blkid_probe_get_size@plt+0x1d310>
   24664:	cmp	r4, sl
   24668:	bcc	24644 <blkid_probe_get_size@plt+0x1d12c>
   2466c:	ldr	r7, [fp, #-80]	; 0xffffffb0
   24670:	ldr	sl, [fp, #-84]	; 0xffffffac
   24674:	ldr	r3, [fp, #-68]	; 0xffffffbc
   24678:	cmp	r3, #0
   2467c:	beq	24b2c <blkid_probe_get_size@plt+0x1d614>
   24680:	ldr	r2, [fp, #-76]	; 0xffffffb4
   24684:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24688:	mov	r0, r6
   2468c:	bl	23e54 <blkid_probe_get_size@plt+0x1c93c>
   24690:	subs	r4, r0, #0
   24694:	blt	246cc <blkid_probe_get_size@plt+0x1d1b4>
   24698:	ldr	r5, [fp, #-48]	; 0xffffffd0
   2469c:	mov	r8, #0
   246a0:	b	246a8 <blkid_probe_get_size@plt+0x1d190>
   246a4:	mov	r8, r5
   246a8:	mov	r0, r5
   246ac:	bl	69f0 <free@plt>
   246b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246b4:	ldr	r3, [sl]
   246b8:	mov	r0, r8
   246bc:	cmp	r2, r3
   246c0:	bne	24bfc <blkid_probe_get_size@plt+0x1d6e4>
   246c4:	sub	sp, fp, #32
   246c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246cc:	ldr	r3, [pc, #1368]	; 24c2c <blkid_probe_get_size@plt+0x1d714>
   246d0:	mov	r2, #0
   246d4:	add	r3, pc, r3
   246d8:	str	r2, [fp, #-44]	; 0xffffffd4
   246dc:	ldr	r3, [r3]
   246e0:	cmp	r3, #6
   246e4:	bgt	24bc8 <blkid_probe_get_size@plt+0x1d6b0>
   246e8:	mov	r1, r2
   246ec:	ldr	r3, [pc, #1340]	; 24c30 <blkid_probe_get_size@plt+0x1d718>
   246f0:	ldr	ip, [fp, #-76]	; 0xffffffb4
   246f4:	add	r3, pc, r3
   246f8:	ldr	r0, [pc, #1332]	; 24c34 <blkid_probe_get_size@plt+0x1d71c>
   246fc:	stmib	sp, {r1, r2}
   24700:	add	r3, r3, #1504	; 0x5e0
   24704:	str	ip, [sp, #28]
   24708:	ldr	r2, [pc, #1320]	; 24c38 <blkid_probe_get_size@plt+0x1d720>
   2470c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   24710:	add	r0, pc, r0
   24714:	add	r3, r3, #12
   24718:	str	r7, [sp, #32]
   2471c:	mov	r7, #0
   24720:	str	r3, [sp]
   24724:	str	r0, [sp, #20]
   24728:	str	ip, [sp, #24]
   2472c:	mov	r1, r4
   24730:	str	r7, [sp, #16]
   24734:	str	r7, [sp, #12]
   24738:	ldr	r3, [pc, #1276]	; 24c3c <blkid_probe_get_size@plt+0x1d724>
   2473c:	add	r2, pc, r2
   24740:	mov	r0, #7
   24744:	mov	r8, r7
   24748:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   2474c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   24750:	b	246a8 <blkid_probe_get_size@plt+0x1d190>
   24754:	ldr	r2, [pc, #1252]	; 24c40 <blkid_probe_get_size@plt+0x1d728>
   24758:	ldr	r1, [pc, #1252]	; 24c44 <blkid_probe_get_size@plt+0x1d72c>
   2475c:	add	r2, pc, r2
   24760:	add	r2, r2, #1488	; 0x5d0
   24764:	add	r2, r2, #4
   24768:	str	r2, [sp]
   2476c:	ldr	r2, [pc, #1236]	; 24c48 <blkid_probe_get_size@plt+0x1d730>
   24770:	ldr	r3, [pc, #1236]	; 24c4c <blkid_probe_get_size@plt+0x1d734>
   24774:	add	r2, pc, r2
   24778:	add	r1, pc, r1
   2477c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24780:	ldrb	r3, [r6, #213]	; 0xd5
   24784:	orr	r3, r3, #2
   24788:	strb	r3, [r6, #213]	; 0xd5
   2478c:	b	2474c <blkid_probe_get_size@plt+0x1d234>
   24790:	ldr	r3, [pc, #1208]	; 24c50 <blkid_probe_get_size@plt+0x1d738>
   24794:	str	r8, [fp, #-44]	; 0xffffffd4
   24798:	add	r3, pc, r3
   2479c:	ldr	r3, [r3]
   247a0:	cmp	r3, #6
   247a4:	bgt	24804 <blkid_probe_get_size@plt+0x1d2ec>
   247a8:	mov	r1, r8
   247ac:	ldr	r2, [pc, #1184]	; 24c54 <blkid_probe_get_size@plt+0x1d73c>
   247b0:	ldr	r3, [pc, #1184]	; 24c58 <blkid_probe_get_size@plt+0x1d740>
   247b4:	add	r2, pc, r2
   247b8:	add	r2, r2, #1504	; 0x5e0
   247bc:	add	r2, r2, #12
   247c0:	str	r2, [sp]
   247c4:	ldr	r2, [pc, #1168]	; 24c5c <blkid_probe_get_size@plt+0x1d744>
   247c8:	mov	r0, #0
   247cc:	add	r3, pc, r3
   247d0:	stmib	sp, {r1, r8}
   247d4:	str	r3, [sp, #20]
   247d8:	mov	r1, r5
   247dc:	str	r0, [sp, #16]
   247e0:	str	r0, [sp, #12]
   247e4:	str	r7, [sp, #24]
   247e8:	ldr	r3, [pc, #1136]	; 24c60 <blkid_probe_get_size@plt+0x1d748>
   247ec:	add	r2, pc, r2
   247f0:	mov	r0, #7
   247f4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   247f8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   247fc:	mov	r8, r0
   24800:	b	246a8 <blkid_probe_get_size@plt+0x1d190>
   24804:	mov	r0, r6
   24808:	sub	r1, fp, #44	; 0x2c
   2480c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   24810:	ldr	r8, [fp, #-44]	; 0xffffffd4
   24814:	cmp	r8, #0
   24818:	beq	247a8 <blkid_probe_get_size@plt+0x1d290>
   2481c:	ldr	r1, [pc, #1088]	; 24c64 <blkid_probe_get_size@plt+0x1d74c>
   24820:	add	r1, pc, r1
   24824:	b	247ac <blkid_probe_get_size@plt+0x1d294>
   24828:	cmp	r4, sl
   2482c:	bcs	2466c <blkid_probe_get_size@plt+0x1d154>
   24830:	ldr	r9, [pc, #1072]	; 24c68 <blkid_probe_get_size@plt+0x1d750>
   24834:	add	r5, r5, r4
   24838:	add	r9, pc, r9
   2483c:	str	r4, [fp, #-64]	; 0xffffffc0
   24840:	mov	r8, r5
   24844:	ldrb	r1, [r5], #1
   24848:	add	r4, r4, #1
   2484c:	cmp	r1, #61	; 0x3d
   24850:	beq	248d8 <blkid_probe_get_size@plt+0x1d3c0>
   24854:	mov	r0, r9
   24858:	bl	74c4 <strchr@plt>
   2485c:	cmp	r0, #0
   24860:	beq	24b04 <blkid_probe_get_size@plt+0x1d5ec>
   24864:	ldr	r1, [pc, #1024]	; 24c6c <blkid_probe_get_size@plt+0x1d754>
   24868:	mov	r3, #0
   2486c:	add	r1, pc, r1
   24870:	strb	r3, [r8]
   24874:	ldr	r2, [r1]
   24878:	str	r3, [fp, #-44]	; 0xffffffd4
   2487c:	cmp	r2, #6
   24880:	bgt	24b64 <blkid_probe_get_size@plt+0x1d64c>
   24884:	mov	r0, r3
   24888:	ldr	r2, [pc, #992]	; 24c70 <blkid_probe_get_size@plt+0x1d758>
   2488c:	stmib	sp, {r0, r3}
   24890:	add	r2, pc, r2
   24894:	ldr	r3, [fp, #-72]	; 0xffffffb8
   24898:	str	r2, [sp, #20]
   2489c:	ldr	r2, [pc, #976]	; 24c74 <blkid_probe_get_size@plt+0x1d75c>
   248a0:	mov	r1, #0
   248a4:	str	r3, [sp]
   248a8:	str	r7, [sp, #24]
   248ac:	str	r1, [sp, #16]
   248b0:	str	r1, [sp, #12]
   248b4:	mov	r3, #536	; 0x218
   248b8:	add	r2, pc, r2
   248bc:	mov	r0, #7
   248c0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   248c4:	ldr	sl, [fp, #-56]	; 0xffffffc8
   248c8:	cmp	r4, sl
   248cc:	bcs	2466c <blkid_probe_get_size@plt+0x1d154>
   248d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   248d4:	b	24638 <blkid_probe_get_size@plt+0x1d120>
   248d8:	mov	r3, #0
   248dc:	strb	r3, [r8]
   248e0:	ldr	r9, [fp, #-56]	; 0xffffffc8
   248e4:	cmp	r4, r9
   248e8:	bcs	2466c <blkid_probe_get_size@plt+0x1d154>
   248ec:	ldr	r8, [fp, #-48]	; 0xffffffd0
   248f0:	ldr	sl, [pc, #896]	; 24c78 <blkid_probe_get_size@plt+0x1d760>
   248f4:	add	r5, r8, r4
   248f8:	add	sl, pc, sl
   248fc:	mov	r0, sl
   24900:	ldrb	r1, [r8, r4]
   24904:	bl	74c4 <strchr@plt>
   24908:	cmp	r0, #0
   2490c:	movne	sl, r5
   24910:	beq	249c4 <blkid_probe_get_size@plt+0x1d4ac>
   24914:	ldr	r1, [pc, #864]	; 24c7c <blkid_probe_get_size@plt+0x1d764>
   24918:	mov	r3, #0
   2491c:	strb	r3, [sl]
   24920:	add	r1, pc, r1
   24924:	mov	r0, r7
   24928:	bl	7314 <strcmp@plt>
   2492c:	add	r4, r4, #1
   24930:	cmp	r0, #0
   24934:	beq	24a48 <blkid_probe_get_size@plt+0x1d530>
   24938:	ldr	r1, [pc, #832]	; 24c80 <blkid_probe_get_size@plt+0x1d768>
   2493c:	mov	r0, r7
   24940:	add	r1, pc, r1
   24944:	bl	7314 <strcmp@plt>
   24948:	cmp	r0, #0
   2494c:	beq	24b14 <blkid_probe_get_size@plt+0x1d5fc>
   24950:	ldr	r1, [pc, #812]	; 24c84 <blkid_probe_get_size@plt+0x1d76c>
   24954:	mov	r0, r7
   24958:	add	r1, pc, r1
   2495c:	bl	7314 <strcmp@plt>
   24960:	cmp	r0, #0
   24964:	beq	24a6c <blkid_probe_get_size@plt+0x1d554>
   24968:	ldr	r1, [pc, #792]	; 24c88 <blkid_probe_get_size@plt+0x1d770>
   2496c:	mov	r0, r7
   24970:	add	r1, pc, r1
   24974:	bl	7314 <strcmp@plt>
   24978:	cmp	r0, #0
   2497c:	beq	24b38 <blkid_probe_get_size@plt+0x1d620>
   24980:	ldr	r1, [pc, #772]	; 24c8c <blkid_probe_get_size@plt+0x1d774>
   24984:	mov	r0, r7
   24988:	add	r1, pc, r1
   2498c:	bl	7314 <strcmp@plt>
   24990:	cmp	r0, #0
   24994:	beq	24b50 <blkid_probe_get_size@plt+0x1d638>
   24998:	ldr	r1, [pc, #752]	; 24c90 <blkid_probe_get_size@plt+0x1d778>
   2499c:	mov	r0, r7
   249a0:	add	r1, pc, r1
   249a4:	bl	7314 <strcmp@plt>
   249a8:	cmp	r0, #0
   249ac:	bne	24b88 <blkid_probe_get_size@plt+0x1d670>
   249b0:	ldr	sl, [fp, #-56]	; 0xffffffc8
   249b4:	cmp	r4, sl
   249b8:	bcs	24c00 <blkid_probe_get_size@plt+0x1d6e8>
   249bc:	str	r5, [fp, #-76]	; 0xffffffb4
   249c0:	b	248d0 <blkid_probe_get_size@plt+0x1d3b8>
   249c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   249c8:	add	r4, r3, #2
   249cc:	cmp	r4, r9
   249d0:	bcs	2466c <blkid_probe_get_size@plt+0x1d154>
   249d4:	mov	r3, r9
   249d8:	add	r8, r8, r4
   249dc:	mov	r9, r4
   249e0:	mov	r4, r3
   249e4:	str	sl, [fp, #-64]	; 0xffffffc0
   249e8:	ldrb	r1, [r8]
   249ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   249f0:	bl	74c4 <strchr@plt>
   249f4:	mov	sl, r8
   249f8:	add	r8, r8, #1
   249fc:	cmp	r0, #0
   24a00:	movne	r4, r9
   24a04:	bne	24914 <blkid_probe_get_size@plt+0x1d3fc>
   24a08:	add	r9, r9, #1
   24a0c:	cmp	r9, r4
   24a10:	bcc	249e8 <blkid_probe_get_size@plt+0x1d4d0>
   24a14:	b	2466c <blkid_probe_get_size@plt+0x1d154>
   24a18:	ldr	r3, [pc, #628]	; 24c94 <blkid_probe_get_size@plt+0x1d77c>
   24a1c:	ldr	r2, [pc, #628]	; 24c98 <blkid_probe_get_size@plt+0x1d780>
   24a20:	add	r3, pc, r3
   24a24:	add	r3, r3, #1488	; 0x5d0
   24a28:	ldr	r1, [pc, #620]	; 24c9c <blkid_probe_get_size@plt+0x1d784>
   24a2c:	add	r3, r3, #4
   24a30:	str	r3, [sp]
   24a34:	mov	r0, r4
   24a38:	ldr	r3, [pc, #608]	; 24ca0 <blkid_probe_get_size@plt+0x1d788>
   24a3c:	add	r2, pc, r2
   24a40:	add	r1, pc, r1
   24a44:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24a48:	mov	r1, r5
   24a4c:	mov	r0, r6
   24a50:	bl	24414 <blkid_probe_get_size@plt+0x1cefc>
   24a54:	subs	r8, r0, #0
   24a58:	blt	24a80 <blkid_probe_get_size@plt+0x1d568>
   24a5c:	ldr	sl, [fp, #-56]	; 0xffffffc8
   24a60:	cmp	r4, sl
   24a64:	bcc	248d0 <blkid_probe_get_size@plt+0x1d3b8>
   24a68:	b	2466c <blkid_probe_get_size@plt+0x1d154>
   24a6c:	mov	r1, r5
   24a70:	mov	r0, r6
   24a74:	bl	24188 <blkid_probe_get_size@plt+0x1cc70>
   24a78:	subs	r8, r0, #0
   24a7c:	bge	24a5c <blkid_probe_get_size@plt+0x1d544>
   24a80:	ldr	r2, [pc, #540]	; 24ca4 <blkid_probe_get_size@plt+0x1d78c>
   24a84:	mov	r3, #0
   24a88:	add	r2, pc, r2
   24a8c:	str	r3, [fp, #-44]	; 0xffffffd4
   24a90:	ldr	r2, [r2]
   24a94:	cmp	r2, #6
   24a98:	bgt	24ba4 <blkid_probe_get_size@plt+0x1d68c>
   24a9c:	mov	r1, r3
   24aa0:	ldr	r2, [pc, #512]	; 24ca8 <blkid_probe_get_size@plt+0x1d790>
   24aa4:	stmib	sp, {r1, r3}
   24aa8:	add	r2, pc, r2
   24aac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   24ab0:	str	r2, [sp, #20]
   24ab4:	ldr	r2, [pc, #496]	; 24cac <blkid_probe_get_size@plt+0x1d794>
   24ab8:	mov	r0, #0
   24abc:	str	r3, [sp]
   24ac0:	str	r0, [sp, #16]
   24ac4:	str	r0, [sp, #12]
   24ac8:	str	r5, [sp, #28]
   24acc:	str	r7, [sp, #24]
   24ad0:	mov	r1, r8
   24ad4:	ldr	r3, [pc, #468]	; 24cb0 <blkid_probe_get_size@plt+0x1d798>
   24ad8:	add	r2, pc, r2
   24adc:	mov	r0, #7
   24ae0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   24ae4:	ldr	sl, [fp, #-56]	; 0xffffffc8
   24ae8:	cmp	r4, sl
   24aec:	bcc	248d0 <blkid_probe_get_size@plt+0x1d3b8>
   24af0:	b	2466c <blkid_probe_get_size@plt+0x1d154>
   24af4:	sub	sp, sp, #8
   24af8:	add	ip, sp, #40	; 0x28
   24afc:	mov	r7, ip
   24b00:	b	245ac <blkid_probe_get_size@plt+0x1d094>
   24b04:	cmp	r4, sl
   24b08:	str	r4, [fp, #-64]	; 0xffffffc0
   24b0c:	bne	24840 <blkid_probe_get_size@plt+0x1d328>
   24b10:	b	2466c <blkid_probe_get_size@plt+0x1d154>
   24b14:	mov	r1, r5
   24b18:	mov	r0, r6
   24b1c:	bl	242f8 <blkid_probe_get_size@plt+0x1cde0>
   24b20:	subs	r8, r0, #0
   24b24:	bge	24a5c <blkid_probe_get_size@plt+0x1d544>
   24b28:	b	24a80 <blkid_probe_get_size@plt+0x1d568>
   24b2c:	mov	r8, r3
   24b30:	ldr	r5, [fp, #-48]	; 0xffffffd0
   24b34:	b	246a8 <blkid_probe_get_size@plt+0x1d190>
   24b38:	mov	r1, r5
   24b3c:	mov	r0, r6
   24b40:	bl	24064 <blkid_probe_get_size@plt+0x1cb4c>
   24b44:	subs	r8, r0, #0
   24b48:	bge	24a5c <blkid_probe_get_size@plt+0x1d544>
   24b4c:	b	24a80 <blkid_probe_get_size@plt+0x1d568>
   24b50:	ldr	sl, [fp, #-56]	; 0xffffffc8
   24b54:	cmp	r4, sl
   24b58:	bcs	24bec <blkid_probe_get_size@plt+0x1d6d4>
   24b5c:	str	r5, [fp, #-68]	; 0xffffffbc
   24b60:	b	248d0 <blkid_probe_get_size@plt+0x1d3b8>
   24b64:	sub	r1, fp, #44	; 0x2c
   24b68:	mov	r0, r6
   24b6c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   24b70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24b74:	cmp	r3, #0
   24b78:	beq	24884 <blkid_probe_get_size@plt+0x1d36c>
   24b7c:	ldr	r0, [pc, #304]	; 24cb4 <blkid_probe_get_size@plt+0x1d79c>
   24b80:	add	r0, pc, r0
   24b84:	b	24888 <blkid_probe_get_size@plt+0x1d370>
   24b88:	mov	r2, r5
   24b8c:	mov	r1, r7
   24b90:	mov	r0, r6
   24b94:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   24b98:	subs	r8, r0, #0
   24b9c:	bge	24a5c <blkid_probe_get_size@plt+0x1d544>
   24ba0:	b	24a80 <blkid_probe_get_size@plt+0x1d568>
   24ba4:	sub	r1, fp, #44	; 0x2c
   24ba8:	mov	r0, r6
   24bac:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   24bb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24bb4:	cmp	r3, #0
   24bb8:	beq	24a9c <blkid_probe_get_size@plt+0x1d584>
   24bbc:	ldr	r1, [pc, #244]	; 24cb8 <blkid_probe_get_size@plt+0x1d7a0>
   24bc0:	add	r1, pc, r1
   24bc4:	b	24aa0 <blkid_probe_get_size@plt+0x1d588>
   24bc8:	mov	r0, r6
   24bcc:	sub	r1, fp, #44	; 0x2c
   24bd0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   24bd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24bd8:	cmp	r2, #0
   24bdc:	beq	246e8 <blkid_probe_get_size@plt+0x1d1d0>
   24be0:	ldr	r1, [pc, #212]	; 24cbc <blkid_probe_get_size@plt+0x1d7a4>
   24be4:	add	r1, pc, r1
   24be8:	b	246ec <blkid_probe_get_size@plt+0x1d1d4>
   24bec:	ldr	r7, [fp, #-80]	; 0xffffffb0
   24bf0:	ldr	sl, [fp, #-84]	; 0xffffffac
   24bf4:	str	r5, [fp, #-68]	; 0xffffffbc
   24bf8:	b	24680 <blkid_probe_get_size@plt+0x1d168>
   24bfc:	bl	6fb4 <__stack_chk_fail@plt>
   24c00:	ldr	r7, [fp, #-80]	; 0xffffffb0
   24c04:	ldr	sl, [fp, #-84]	; 0xffffffac
   24c08:	str	r5, [fp, #-76]	; 0xffffffb4
   24c0c:	b	24674 <blkid_probe_get_size@plt+0x1d15c>
   24c10:	andeq	r3, r7, r0, ror #12
   24c14:	andeq	r0, r0, ip, lsr r4
   24c18:	andeq	r0, r0, #0, 4
   24c1c:	andeq	r6, r4, r4, ror sp
   24c20:	andeq	r5, r4, r4
   24c24:	andeq	r5, r4, r0
   24c28:	andeq	r0, r4, r8, asr sp
   24c2c:	andeq	r3, r7, r8, ror #20
   24c30:	andeq	r4, r4, r4, lsl pc
   24c34:	andeq	r6, r4, ip, lsr #23
   24c38:	andeq	r1, r4, r4, ror r4
   24c3c:	andeq	r0, r0, r6, lsr r2
   24c40:	andeq	r4, r4, ip, lsr #29
   24c44:	andeq	r6, r4, r8, ror #15
   24c48:	andeq	r1, r4, ip, lsr r4
   24c4c:	andeq	r0, r0, lr, ror #3
   24c50:	andeq	r3, r7, r4, lsr #19
   24c54:	andeq	r4, r4, r4, asr lr
   24c58:	andeq	r6, r4, r0, asr sl
   24c5c:	andeq	r1, r4, r4, asr #7
   24c60:	andeq	r0, r0, r3, lsl #4
   24c64:	andeq	r0, r4, r8, lsl r7
   24c68:	andeq	r0, r4, r0, ror #22
   24c6c:	ldrdeq	r3, [r7], -r0
   24c70:			; <UNDEFINED> instruction: 0x000469bc
   24c74:	strdeq	r1, [r4], -r8
   24c78:	andeq	r0, r4, r0, lsr #21
   24c7c:	andeq	r4, r4, r8, lsr #25
   24c80:	andeq	r4, r4, r0, lsr #25
   24c84:	muleq	r4, r0, ip
   24c88:	andeq	r6, r4, r8, ror r8
   24c8c:	andeq	r4, r4, r8, asr #24
   24c90:	andeq	r4, r4, r8, lsr ip
   24c94:	andeq	r4, r4, r8, ror #23
   24c98:	andeq	r1, r4, r4, ror r1
   24c9c:	andeq	r0, r4, r8, asr r6
   24ca0:	strdeq	r0, [r0], -r7
   24ca4:			; <UNDEFINED> instruction: 0x000736b4
   24ca8:	ldrdeq	r6, [r4], -r4
   24cac:	ldrdeq	r1, [r4], -r8
   24cb0:	andeq	r0, r0, r9, lsr #4
   24cb4:			; <UNDEFINED> instruction: 0x000403b8
   24cb8:	andeq	r0, r4, r8, ror r3
   24cbc:	andeq	r0, r4, r4, asr r3
   24cc0:	ldr	r3, [pc, #1316]	; 251ec <blkid_probe_get_size@plt+0x1dcd4>
   24cc4:	ldr	ip, [pc, #1316]	; 251f0 <blkid_probe_get_size@plt+0x1dcd8>
   24cc8:	add	r3, pc, r3
   24ccc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24cd0:	add	fp, sp, #28
   24cd4:	sub	sp, sp, #32
   24cd8:	ldr	r6, [r3, ip]
   24cdc:	mov	r5, #0
   24ce0:	subs	r7, r0, #0
   24ce4:	ldr	r3, [r6]
   24ce8:	str	r5, [fp, #-40]	; 0xffffffd8
   24cec:	str	r3, [fp, #-32]	; 0xffffffe0
   24cf0:	beq	24f04 <blkid_probe_get_size@plt+0x1d9ec>
   24cf4:	cmp	r1, #0
   24cf8:	mov	r4, r1
   24cfc:	beq	24f30 <blkid_probe_get_size@plt+0x1da18>
   24d00:	ldr	r8, [pc, #1260]	; 251f4 <blkid_probe_get_size@plt+0x1dcdc>
   24d04:	mov	r0, r1
   24d08:	add	r8, pc, r8
   24d0c:	mov	r1, r8
   24d10:	mov	r9, r2
   24d14:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   24d18:	subs	r3, r0, #0
   24d1c:	beq	24e78 <blkid_probe_get_size@plt+0x1d960>
   24d20:	cmp	r9, #0
   24d24:	beq	24e00 <blkid_probe_get_size@plt+0x1d8e8>
   24d28:	sub	r3, fp, #40	; 0x28
   24d2c:	mov	r0, r4
   24d30:	mov	r2, r5
   24d34:	mov	r1, r5
   24d38:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   24d3c:	cmn	r0, #2
   24d40:	mvneq	r4, #18
   24d44:	ldreq	r3, [fp, #-40]	; 0xffffffd8
   24d48:	beq	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24d4c:	cmp	r0, #0
   24d50:	blt	24edc <blkid_probe_get_size@plt+0x1d9c4>
   24d54:	ldr	r5, [pc, #1180]	; 251f8 <blkid_probe_get_size@plt+0x1dce0>
   24d58:	ldr	r4, [fp, #-40]	; 0xffffffd8
   24d5c:	add	r5, pc, r5
   24d60:	mov	r0, r4
   24d64:	mov	r1, r5
   24d68:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   24d6c:	subs	r9, r0, #0
   24d70:	beq	24fe4 <blkid_probe_get_size@plt+0x1dacc>
   24d74:	ldr	r1, [pc, #1152]	; 251fc <blkid_probe_get_size@plt+0x1dce4>
   24d78:	mov	r0, r4
   24d7c:	add	r1, pc, r1
   24d80:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   24d84:	subs	r1, r0, #0
   24d88:	beq	25058 <blkid_probe_get_size@plt+0x1db40>
   24d8c:	cmp	r4, #0
   24d90:	beq	25124 <blkid_probe_get_size@plt+0x1dc0c>
   24d94:	mov	r0, r4
   24d98:	bl	723c <strlen@plt>
   24d9c:	add	r3, r0, #8
   24da0:	cmp	r3, #4194304	; 0x400000
   24da4:	bhi	250b8 <blkid_probe_get_size@plt+0x1dba0>
   24da8:	add	r0, r0, #22
   24dac:	bic	r0, r0, #7
   24db0:	sub	sp, sp, r0
   24db4:	add	r5, sp, #16
   24db8:	mov	r1, r4
   24dbc:	mov	r0, r5
   24dc0:	bl	6ae0 <stpcpy@plt>
   24dc4:	ldr	r3, [pc, #1076]	; 25200 <blkid_probe_get_size@plt+0x1dce8>
   24dc8:	add	r3, pc, r3
   24dcc:	mov	r2, r0
   24dd0:	add	ip, r0, #7
   24dd4:	ldm	r3!, {r0, r1}
   24dd8:	str	r0, [r2]
   24ddc:	str	r1, [r2, #4]
   24de0:	mov	r1, #0
   24de4:	mov	r0, r5
   24de8:	strb	r1, [ip]
   24dec:	bl	6ff0 <access@plt>
   24df0:	cmp	r0, #0
   24df4:	blt	24f60 <blkid_probe_get_size@plt+0x1da48>
   24df8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24dfc:	b	24e18 <blkid_probe_get_size@plt+0x1d900>
   24e00:	mov	r0, r4
   24e04:	bl	74e8 <strdup@plt>
   24e08:	cmp	r0, #0
   24e0c:	mov	r3, r0
   24e10:	str	r0, [fp, #-40]	; 0xffffffd8
   24e14:	beq	251e0 <blkid_probe_get_size@plt+0x1dcc8>
   24e18:	ldr	r1, [pc, #996]	; 25204 <blkid_probe_get_size@plt+0x1dcec>
   24e1c:	add	r5, r3, #4
   24e20:	mov	r2, r5
   24e24:	add	r1, pc, r1
   24e28:	mov	r0, r7
   24e2c:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   24e30:	subs	r4, r0, #0
   24e34:	blt	24ed4 <blkid_probe_get_size@plt+0x1d9bc>
   24e38:	ldr	r0, [r7, #156]	; 0x9c
   24e3c:	bl	69f0 <free@plt>
   24e40:	mov	r3, #0
   24e44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e48:	mov	r4, r3
   24e4c:	str	r5, [r7, #160]	; 0xa0
   24e50:	str	r2, [r7, #156]	; 0x9c
   24e54:	mov	r0, r3
   24e58:	bl	69f0 <free@plt>
   24e5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24e60:	ldr	r3, [r6]
   24e64:	mov	r0, r4
   24e68:	cmp	r2, r3
   24e6c:	bne	251e8 <blkid_probe_get_size@plt+0x1dcd0>
   24e70:	sub	sp, fp, #28
   24e74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   24e78:	ldr	r2, [pc, #904]	; 25208 <blkid_probe_get_size@plt+0x1dcf0>
   24e7c:	add	r2, pc, r2
   24e80:	ldr	r2, [r2]
   24e84:	cmp	r2, #6
   24e88:	ble	2511c <blkid_probe_get_size@plt+0x1dc04>
   24e8c:	ldr	r3, [pc, #888]	; 2520c <blkid_probe_get_size@plt+0x1dcf4>
   24e90:	ldr	r2, [pc, #888]	; 25210 <blkid_probe_get_size@plt+0x1dcf8>
   24e94:	add	r3, pc, r3
   24e98:	add	r2, pc, r2
   24e9c:	str	r2, [sp, #4]
   24ea0:	add	r3, r3, #1552	; 0x610
   24ea4:	ldr	r2, [pc, #872]	; 25214 <blkid_probe_get_size@plt+0x1dcfc>
   24ea8:	add	r3, r3, #8
   24eac:	str	r4, [sp, #8]
   24eb0:	str	r3, [sp]
   24eb4:	add	r2, pc, r2
   24eb8:	mov	r3, #145	; 0x91
   24ebc:	mov	r1, #1073741846	; 0x40000016
   24ec0:	mov	r0, #7
   24ec4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   24ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ecc:	mov	r4, r0
   24ed0:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24ed4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ed8:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24edc:	ldr	r3, [pc, #820]	; 25218 <blkid_probe_get_size@plt+0x1dd00>
   24ee0:	add	r3, pc, r3
   24ee4:	ldr	r3, [r3]
   24ee8:	cmp	r3, #6
   24eec:	bgt	24f9c <blkid_probe_get_size@plt+0x1da84>
   24ef0:	rsb	r4, r0, #0
   24ef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ef8:	uxtb	r4, r4
   24efc:	rsb	r4, r4, #0
   24f00:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24f04:	ldr	r2, [pc, #784]	; 2521c <blkid_probe_get_size@plt+0x1dd04>
   24f08:	ldr	r1, [pc, #784]	; 25220 <blkid_probe_get_size@plt+0x1dd08>
   24f0c:	add	r2, pc, r2
   24f10:	add	r2, r2, #1536	; 0x600
   24f14:	add	r2, r2, #4
   24f18:	str	r2, [sp]
   24f1c:	ldr	r2, [pc, #768]	; 25224 <blkid_probe_get_size@plt+0x1dd0c>
   24f20:	mov	r3, #138	; 0x8a
   24f24:	add	r2, pc, r2
   24f28:	add	r1, pc, r1
   24f2c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24f30:	ldr	r3, [pc, #752]	; 25228 <blkid_probe_get_size@plt+0x1dd10>
   24f34:	mov	r0, r1
   24f38:	add	r3, pc, r3
   24f3c:	add	r3, r3, #1536	; 0x600
   24f40:	ldr	r2, [pc, #740]	; 2522c <blkid_probe_get_size@plt+0x1dd14>
   24f44:	ldr	r1, [pc, #740]	; 25230 <blkid_probe_get_size@plt+0x1dd18>
   24f48:	add	r3, r3, #4
   24f4c:	str	r3, [sp]
   24f50:	add	r2, pc, r2
   24f54:	mov	r3, #139	; 0x8b
   24f58:	add	r1, pc, r1
   24f5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   24f60:	bl	732c <__errno_location@plt>
   24f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24f68:	ldr	r1, [r0]
   24f6c:	cmp	r1, #2
   24f70:	beq	2506c <blkid_probe_get_size@plt+0x1db54>
   24f74:	ldr	r2, [pc, #696]	; 25234 <blkid_probe_get_size@plt+0x1dd1c>
   24f78:	add	r2, pc, r2
   24f7c:	ldr	r2, [r2]
   24f80:	cmp	r2, #6
   24f84:	bgt	25074 <blkid_probe_get_size@plt+0x1db5c>
   24f88:	eor	r4, r1, r1, asr #31
   24f8c:	sub	r4, r4, r1, asr #31
   24f90:	uxtb	r4, r4
   24f94:	rsb	r4, r4, #0
   24f98:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24f9c:	ldr	r3, [pc, #660]	; 25238 <blkid_probe_get_size@plt+0x1dd20>
   24fa0:	ldr	r2, [pc, #660]	; 2523c <blkid_probe_get_size@plt+0x1dd24>
   24fa4:	add	r3, pc, r3
   24fa8:	add	r2, pc, r2
   24fac:	str	r2, [sp, #4]
   24fb0:	add	r3, r3, #1552	; 0x610
   24fb4:	ldr	r2, [pc, #644]	; 25240 <blkid_probe_get_size@plt+0x1dd28>
   24fb8:	add	r3, r3, #8
   24fbc:	str	r4, [sp, #8]
   24fc0:	mov	r1, r0
   24fc4:	str	r3, [sp]
   24fc8:	add	r2, pc, r2
   24fcc:	mov	r3, #152	; 0x98
   24fd0:	mov	r0, #7
   24fd4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   24fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24fdc:	mov	r4, r0
   24fe0:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   24fe4:	sub	r3, fp, #28
   24fe8:	mov	r1, r9
   24fec:	mov	r0, r5
   24ff0:	str	r9, [r3, #-8]!
   24ff4:	mov	r2, r9
   24ff8:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   24ffc:	subs	r1, r0, #0
   25000:	blt	250e8 <blkid_probe_get_size@plt+0x1dbd0>
   25004:	ldrd	r4, [fp, #-40]	; 0xffffffd8
   25008:	mov	r1, r5
   2500c:	mov	r0, r4
   25010:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   25014:	subs	r1, r0, #0
   25018:	beq	25134 <blkid_probe_get_size@plt+0x1dc1c>
   2501c:	mov	r2, r9
   25020:	mov	r0, r8
   25024:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   25028:	subs	r4, r0, #0
   2502c:	beq	25194 <blkid_probe_get_size@plt+0x1dc7c>
   25030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25034:	bl	69f0 <free@plt>
   25038:	mov	r0, r4
   2503c:	mov	r1, #0
   25040:	str	r4, [fp, #-40]	; 0xffffffd8
   25044:	bl	3ff30 <blkid_probe_get_size@plt+0x38a18>
   25048:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2504c:	bl	69f0 <free@plt>
   25050:	ldr	r4, [fp, #-40]	; 0xffffffd8
   25054:	b	24d74 <blkid_probe_get_size@plt+0x1d85c>
   25058:	mov	r0, r4
   2505c:	bl	3e0c8 <blkid_probe_get_size@plt+0x36bb0>
   25060:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25064:	cmp	r0, #0
   25068:	bne	24e18 <blkid_probe_get_size@plt+0x1d900>
   2506c:	mvn	r4, #18
   25070:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   25074:	ldr	r2, [pc, #456]	; 25244 <blkid_probe_get_size@plt+0x1dd2c>
   25078:	ldr	r0, [pc, #456]	; 25248 <blkid_probe_get_size@plt+0x1dd30>
   2507c:	add	r2, pc, r2
   25080:	add	r2, r2, #1552	; 0x610
   25084:	add	r2, r2, #8
   25088:	str	r2, [sp]
   2508c:	ldr	r2, [pc, #440]	; 2524c <blkid_probe_get_size@plt+0x1dd34>
   25090:	add	r0, pc, r0
   25094:	str	r3, [sp, #8]
   25098:	str	r0, [sp, #4]
   2509c:	mov	r3, #188	; 0xbc
   250a0:	add	r2, pc, r2
   250a4:	mov	r0, #7
   250a8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   250ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   250b0:	mov	r4, r0
   250b4:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   250b8:	ldr	r2, [pc, #400]	; 25250 <blkid_probe_get_size@plt+0x1dd38>
   250bc:	ldr	r1, [pc, #400]	; 25254 <blkid_probe_get_size@plt+0x1dd3c>
   250c0:	add	r2, pc, r2
   250c4:	add	r2, r2, #1536	; 0x600
   250c8:	add	r2, r2, #4
   250cc:	str	r2, [sp]
   250d0:	ldr	r2, [pc, #384]	; 25258 <blkid_probe_get_size@plt+0x1dd40>
   250d4:	mov	r3, #181	; 0xb5
   250d8:	add	r2, pc, r2
   250dc:	add	r1, pc, r1
   250e0:	mov	r0, #0
   250e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   250e8:	ldr	r3, [pc, #364]	; 2525c <blkid_probe_get_size@plt+0x1dd44>
   250ec:	add	r3, pc, r3
   250f0:	ldr	r3, [r3]
   250f4:	cmp	r3, #6
   250f8:	bgt	251a0 <blkid_probe_get_size@plt+0x1dc88>
   250fc:	rsb	r4, r1, #0
   25100:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25104:	uxtb	r4, r4
   25108:	rsb	r4, r4, #0
   2510c:	mov	r0, r5
   25110:	bl	69f0 <free@plt>
   25114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25118:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   2511c:	mvn	r4, #21
   25120:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   25124:	sub	sp, sp, #8
   25128:	add	ip, sp, #16
   2512c:	mov	r5, ip
   25130:	b	24de0 <blkid_probe_get_size@plt+0x1d8c8>
   25134:	ldr	r3, [pc, #292]	; 25260 <blkid_probe_get_size@plt+0x1dd48>
   25138:	add	r3, pc, r3
   2513c:	ldr	r3, [r3]
   25140:	cmp	r3, #6
   25144:	mvnle	r4, #18
   25148:	ble	2510c <blkid_probe_get_size@plt+0x1dbf4>
   2514c:	ldr	r3, [pc, #272]	; 25264 <blkid_probe_get_size@plt+0x1dd4c>
   25150:	ldr	r2, [pc, #272]	; 25268 <blkid_probe_get_size@plt+0x1dd50>
   25154:	add	r3, pc, r3
   25158:	add	r2, pc, r2
   2515c:	str	r2, [sp, #4]
   25160:	add	r3, r3, #1552	; 0x610
   25164:	ldr	r2, [pc, #256]	; 2526c <blkid_probe_get_size@plt+0x1dd54>
   25168:	add	r3, r3, #8
   2516c:	strd	r4, [sp, #8]
   25170:	str	r3, [sp]
   25174:	add	r2, pc, r2
   25178:	mov	r3, #167	; 0xa7
   2517c:	mov	r1, #1073741843	; 0x40000013
   25180:	mov	r0, #7
   25184:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   25188:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2518c:	mov	r4, r0
   25190:	b	2510c <blkid_probe_get_size@plt+0x1dbf4>
   25194:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25198:	mvn	r4, #11
   2519c:	b	2510c <blkid_probe_get_size@plt+0x1dbf4>
   251a0:	ldr	r3, [pc, #200]	; 25270 <blkid_probe_get_size@plt+0x1dd58>
   251a4:	ldr	r2, [pc, #200]	; 25274 <blkid_probe_get_size@plt+0x1dd5c>
   251a8:	add	r3, pc, r3
   251ac:	add	r2, pc, r2
   251b0:	str	r2, [sp, #4]
   251b4:	add	r3, r3, #1552	; 0x610
   251b8:	ldr	r2, [pc, #184]	; 25278 <blkid_probe_get_size@plt+0x1dd60>
   251bc:	add	r3, r3, #8
   251c0:	str	r3, [sp]
   251c4:	add	r2, pc, r2
   251c8:	mov	r3, #161	; 0xa1
   251cc:	mov	r0, #7
   251d0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   251d4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   251d8:	mov	r4, r0
   251dc:	b	2510c <blkid_probe_get_size@plt+0x1dbf4>
   251e0:	mvn	r4, #11
   251e4:	b	24e54 <blkid_probe_get_size@plt+0x1d93c>
   251e8:	bl	6fb4 <__stack_chk_fail@plt>
   251ec:	andeq	r2, r7, r0, lsr #29
   251f0:	andeq	r0, r0, ip, lsr r4
   251f4:	andeq	r0, r4, ip, lsl r7
   251f8:	andeq	r0, r4, r0, lsr #17
   251fc:	andeq	r6, r4, r0, lsl #13
   25200:	andeq	r6, r4, r0, asr #10
   25204:	andeq	r1, r4, r0, lsr #31
   25208:	andeq	r3, r7, r0, asr #5
   2520c:	andeq	r4, r4, r4, ror r7
   25210:	andeq	r6, r4, r4, lsl #9
   25214:	strdeq	r0, [r4], -ip
   25218:	andeq	r3, r7, ip, asr r2
   2521c:	strdeq	r4, [r4], -ip
   25220:	andeq	r6, r4, r8, lsr r0
   25224:	andeq	r0, r4, ip, lsl #25
   25228:	ldrdeq	r4, [r4], -r0
   2522c:	andeq	r0, r4, r0, ror #24
   25230:			; <UNDEFINED> instruction: 0x000463b8
   25234:	andeq	r3, r7, r4, asr #3
   25238:	andeq	r4, r4, r4, ror #12
   2523c:	andeq	r6, r4, ip, lsr #7
   25240:	andeq	r0, r4, r8, ror #23
   25244:	andeq	r4, r4, ip, lsl #11
   25248:	andeq	r6, r4, ip, ror r3
   2524c:	andeq	r0, r4, r0, lsl fp
   25250:	andeq	r4, r4, r8, asr #10
   25254:			; <UNDEFINED> instruction: 0x0003ffbc
   25258:	ldrdeq	r0, [r4], -r8
   2525c:	andeq	r3, r7, r0, asr r0
   25260:	andeq	r3, r7, r4
   25264:			; <UNDEFINED> instruction: 0x000444b4
   25268:	andeq	r6, r4, r4, asr r2
   2526c:	andeq	r0, r4, ip, lsr sl
   25270:	andeq	r4, r4, r0, ror #8
   25274:	ldrdeq	r6, [r4], -r4
   25278:	andeq	r0, r4, ip, ror #19
   2527c:	push	{r4, r5, r6, lr}
   25280:	subs	r4, r0, #0
   25284:	ldr	r6, [pc, #292]	; 253b0 <blkid_probe_get_size@plt+0x1de98>
   25288:	sub	sp, sp, #8
   2528c:	add	r6, pc, r6
   25290:	beq	25378 <blkid_probe_get_size@plt+0x1de60>
   25294:	ldr	r0, [r4]
   25298:	cmp	r0, #0
   2529c:	beq	25384 <blkid_probe_get_size@plt+0x1de6c>
   252a0:	sub	r5, r0, #1
   252a4:	cmp	r5, #0
   252a8:	str	r5, [r4]
   252ac:	bne	25378 <blkid_probe_get_size@plt+0x1de60>
   252b0:	ldr	r0, [r4, #8]
   252b4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   252b8:	ldr	r0, [r4, #156]	; 0x9c
   252bc:	bl	69f0 <free@plt>
   252c0:	ldr	r0, [r4, #168]	; 0xa8
   252c4:	bl	69f0 <free@plt>
   252c8:	ldr	r0, [r4, #128]	; 0x80
   252cc:	bl	69f0 <free@plt>
   252d0:	ldr	r0, [r4, #132]	; 0x84
   252d4:	bl	69f0 <free@plt>
   252d8:	ldr	r0, [r4, #172]	; 0xac
   252dc:	bl	69f0 <free@plt>
   252e0:	ldr	r0, [r4, #176]	; 0xb0
   252e4:	bl	69f0 <free@plt>
   252e8:	ldr	r0, [r4, #180]	; 0xb4
   252ec:	bl	69f0 <free@plt>
   252f0:	ldr	r0, [r4, #184]	; 0xb8
   252f4:	bl	69f0 <free@plt>
   252f8:	ldr	r0, [r4, #144]	; 0x90
   252fc:	bl	69f0 <free@plt>
   25300:	ldr	r0, [r4, #148]	; 0x94
   25304:	bl	69f0 <free@plt>
   25308:	ldr	r3, [pc, #164]	; 253b4 <blkid_probe_get_size@plt+0x1de9c>
   2530c:	ldr	r0, [r4, #12]
   25310:	ldr	r6, [r6, r3]
   25314:	mov	r2, r6
   25318:	mov	r1, r6
   2531c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25320:	mov	r2, r6
   25324:	mov	r1, r6
   25328:	ldr	r0, [r4, #40]	; 0x28
   2532c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25330:	mov	r2, r6
   25334:	mov	r1, r6
   25338:	ldr	r0, [r4, #44]	; 0x2c
   2533c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25340:	mov	r2, r5
   25344:	mov	r1, r6
   25348:	ldr	r0, [r4, #48]	; 0x30
   2534c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25350:	mov	r2, r5
   25354:	mov	r1, r6
   25358:	ldr	r0, [r4, #60]	; 0x3c
   2535c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25360:	mov	r2, r5
   25364:	mov	r1, r6
   25368:	ldr	r0, [r4, #88]	; 0x58
   2536c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   25370:	mov	r0, r4
   25374:	bl	69f0 <free@plt>
   25378:	mov	r0, #0
   2537c:	add	sp, sp, #8
   25380:	pop	{r4, r5, r6, pc}
   25384:	ldr	r3, [pc, #44]	; 253b8 <blkid_probe_get_size@plt+0x1dea0>
   25388:	ldr	r2, [pc, #44]	; 253bc <blkid_probe_get_size@plt+0x1dea4>
   2538c:	add	r3, pc, r3
   25390:	add	r3, r3, #1600	; 0x640
   25394:	ldr	r1, [pc, #36]	; 253c0 <blkid_probe_get_size@plt+0x1dea8>
   25398:	add	r3, r3, #12
   2539c:	str	r3, [sp]
   253a0:	add	r2, pc, r2
   253a4:	mov	r3, #77	; 0x4d
   253a8:	add	r1, pc, r1
   253ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   253b0:	ldrdeq	r2, [r7], -ip
   253b4:	andeq	r0, r0, r8, lsr r4
   253b8:	andeq	r4, r4, ip, ror r2
   253bc:	andeq	r0, r4, r0, lsl r8
   253c0:	andeq	r2, r4, r8, lsr #23
   253c4:	cmp	r0, #0
   253c8:	bxeq	lr
   253cc:	ldr	r3, [r0]
   253d0:	cmp	r3, #0
   253d4:	beq	253e4 <blkid_probe_get_size@plt+0x1decc>
   253d8:	add	r3, r3, #1
   253dc:	str	r3, [r0]
   253e0:	bx	lr
   253e4:	ldr	r2, [pc, #48]	; 2541c <blkid_probe_get_size@plt+0x1df04>
   253e8:	push	{lr}		; (str lr, [sp, #-4]!)
   253ec:	add	r2, pc, r2
   253f0:	sub	sp, sp, #12
   253f4:	mov	r0, r3
   253f8:	ldr	r1, [pc, #32]	; 25420 <blkid_probe_get_size@plt+0x1df08>
   253fc:	add	r3, r2, #1616	; 0x650
   25400:	ldr	r2, [pc, #28]	; 25424 <blkid_probe_get_size@plt+0x1df0c>
   25404:	add	r3, r3, #12
   25408:	str	r3, [sp]
   2540c:	add	r2, pc, r2
   25410:	mov	r3, #77	; 0x4d
   25414:	add	r1, pc, r1
   25418:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2541c:	andeq	r4, r4, ip, lsl r2
   25420:	andeq	r2, r4, ip, lsr fp
   25424:	andeq	r0, r4, r4, lsr #15
   25428:	push	{r4, r5, r6, lr}
   2542c:	subs	r4, r0, #0
   25430:	sub	sp, sp, #8
   25434:	beq	25490 <blkid_probe_get_size@plt+0x1df78>
   25438:	cmp	r1, #0
   2543c:	mov	r5, r1
   25440:	beq	254cc <blkid_probe_get_size@plt+0x1dfb4>
   25444:	ldr	r2, [r4, #12]
   25448:	mov	r3, #4
   2544c:	add	r2, r2, #1
   25450:	add	r1, r4, #16
   25454:	add	r0, r4, #8
   25458:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   2545c:	cmp	r0, #0
   25460:	beq	25504 <blkid_probe_get_size@plt+0x1dfec>
   25464:	ldr	r6, [r4, #12]
   25468:	mov	r0, r5
   2546c:	add	r3, r6, #1
   25470:	str	r3, [r4, #12]
   25474:	ldr	r4, [r4, #8]
   25478:	bl	253c4 <blkid_probe_get_size@plt+0x1deac>
   2547c:	mov	r3, #0
   25480:	str	r0, [r4, r6, lsl #2]
   25484:	mov	r0, r3
   25488:	add	sp, sp, #8
   2548c:	pop	{r4, r5, r6, pc}
   25490:	ldr	r2, [pc, #116]	; 2550c <blkid_probe_get_size@plt+0x1dff4>
   25494:	ldr	r1, [pc, #116]	; 25510 <blkid_probe_get_size@plt+0x1dff8>
   25498:	add	r2, pc, r2
   2549c:	add	r2, r2, #1632	; 0x660
   254a0:	add	r2, r2, #12
   254a4:	str	r2, [sp]
   254a8:	ldr	r2, [pc, #100]	; 25514 <blkid_probe_get_size@plt+0x1dffc>
   254ac:	ldr	r3, [pc, #100]	; 25518 <blkid_probe_get_size@plt+0x1e000>
   254b0:	add	r2, pc, r2
   254b4:	add	r1, pc, r1
   254b8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   254bc:	mvn	r3, #21
   254c0:	mov	r0, r3
   254c4:	add	sp, sp, #8
   254c8:	pop	{r4, r5, r6, pc}
   254cc:	ldr	r3, [pc, #72]	; 2551c <blkid_probe_get_size@plt+0x1e004>
   254d0:	mov	r0, r1
   254d4:	add	r3, pc, r3
   254d8:	add	r3, r3, #1632	; 0x660
   254dc:	ldr	r2, [pc, #60]	; 25520 <blkid_probe_get_size@plt+0x1e008>
   254e0:	ldr	r1, [pc, #60]	; 25524 <blkid_probe_get_size@plt+0x1e00c>
   254e4:	add	r3, r3, #12
   254e8:	str	r3, [sp]
   254ec:	add	r2, pc, r2
   254f0:	ldr	r3, [pc, #48]	; 25528 <blkid_probe_get_size@plt+0x1e010>
   254f4:	add	r1, pc, r1
   254f8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   254fc:	mvn	r3, #21
   25500:	b	25484 <blkid_probe_get_size@plt+0x1df6c>
   25504:	mvn	r3, #11
   25508:	b	25484 <blkid_probe_get_size@plt+0x1df6c>
   2550c:	andeq	r4, r4, r0, ror r1
   25510:	andeq	r0, r4, r0, lsr #15
   25514:	andeq	r0, r4, r4, ror r7
   25518:	andeq	r0, r0, r1, lsr r1
   2551c:	andeq	r4, r4, r4, lsr r1
   25520:	andeq	r0, r4, r8, lsr r7
   25524:	andeq	r5, r4, ip, ror #20
   25528:	andeq	r0, r0, r2, lsr r1
   2552c:	push	{r4, r5, r6, lr}
   25530:	mov	r5, r0
   25534:	mov	r0, #216	; 0xd8
   25538:	bl	7230 <malloc@plt>
   2553c:	subs	r4, r0, #0
   25540:	beq	25574 <blkid_probe_get_size@plt+0x1e05c>
   25544:	mov	r2, #216	; 0xd8
   25548:	mov	r1, #0
   2554c:	bl	6c84 <memset@plt>
   25550:	mvn	r3, #0
   25554:	mov	r2, #1
   25558:	str	r4, [r5]
   2555c:	strd	r2, [r4]
   25560:	str	r3, [r4, #200]	; 0xc8
   25564:	str	r3, [r4, #204]	; 0xcc
   25568:	str	r3, [r4, #208]	; 0xd0
   2556c:	mov	r0, #0
   25570:	pop	{r4, r5, r6, pc}
   25574:	mvn	r0, #11
   25578:	pop	{r4, r5, r6, pc}
   2557c:	ldr	r3, [pc, #204]	; 25650 <blkid_probe_get_size@plt+0x1e138>
   25580:	ldr	r2, [pc, #204]	; 25654 <blkid_probe_get_size@plt+0x1e13c>
   25584:	add	r3, pc, r3
   25588:	push	{r4, r5, r6, r7, r8, lr}
   2558c:	sub	sp, sp, #16
   25590:	ldr	r4, [r3, r2]
   25594:	mov	r6, #0
   25598:	subs	r7, r1, #0
   2559c:	ldr	r3, [r4]
   255a0:	str	r6, [sp, #8]
   255a4:	str	r3, [sp, #12]
   255a8:	beq	25614 <blkid_probe_get_size@plt+0x1e0fc>
   255ac:	mov	r8, r0
   255b0:	add	r0, sp, #8
   255b4:	bl	2552c <blkid_probe_get_size@plt+0x1e014>
   255b8:	subs	r5, r0, #0
   255bc:	bge	255ec <blkid_probe_get_size@plt+0x1e0d4>
   255c0:	ldr	r0, [sp, #8]
   255c4:	cmp	r0, #0
   255c8:	beq	255d0 <blkid_probe_get_size@plt+0x1e0b8>
   255cc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   255d0:	ldr	r2, [sp, #12]
   255d4:	ldr	r3, [r4]
   255d8:	mov	r0, r5
   255dc:	cmp	r2, r3
   255e0:	bne	2564c <blkid_probe_get_size@plt+0x1e134>
   255e4:	add	sp, sp, #16
   255e8:	pop	{r4, r5, r6, r7, r8, pc}
   255ec:	mov	r1, r7
   255f0:	mov	r2, #1
   255f4:	ldr	r0, [sp, #8]
   255f8:	bl	24cc0 <blkid_probe_get_size@plt+0x1d7a8>
   255fc:	subs	r5, r0, #0
   25600:	blt	255c0 <blkid_probe_get_size@plt+0x1e0a8>
   25604:	ldr	r3, [sp, #8]
   25608:	mov	r5, r6
   2560c:	str	r3, [r8]
   25610:	b	255d0 <blkid_probe_get_size@plt+0x1e0b8>
   25614:	ldr	r3, [pc, #60]	; 25658 <blkid_probe_get_size@plt+0x1e140>
   25618:	ldr	r2, [pc, #60]	; 2565c <blkid_probe_get_size@plt+0x1e144>
   2561c:	add	r3, pc, r3
   25620:	add	r3, r3, #1664	; 0x680
   25624:	ldr	r1, [pc, #52]	; 25660 <blkid_probe_get_size@plt+0x1e148>
   25628:	add	r3, r3, #12
   2562c:	str	r3, [sp]
   25630:	mov	r0, r7
   25634:	mov	r3, #217	; 0xd9
   25638:	add	r2, pc, r2
   2563c:	add	r1, pc, r1
   25640:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   25644:	mvn	r5, #21
   25648:	b	255c0 <blkid_probe_get_size@plt+0x1e0a8>
   2564c:	bl	6fb4 <__stack_chk_fail@plt>
   25650:	andeq	r2, r7, r4, ror #11
   25654:	andeq	r0, r0, ip, lsr r4
   25658:	andeq	r3, r4, ip, ror #31
   2565c:	andeq	r0, r4, r8, ror r5
   25660:	andeq	r6, r4, r4, asr #1
   25664:	ldr	r3, [pc, #2728]	; 26114 <blkid_probe_get_size@plt+0x1ebfc>
   25668:	ldr	ip, [pc, #2728]	; 26118 <blkid_probe_get_size@plt+0x1ec00>
   2566c:	add	r3, pc, r3
   25670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25674:	add	fp, sp, #32
   25678:	sub	sp, sp, #4096	; 0x1000
   2567c:	sub	sp, sp, #52	; 0x34
   25680:	subs	r4, r2, #0
   25684:	ldr	r2, [r3, ip]
   25688:	mov	r7, r0
   2568c:	sub	r0, fp, #4160	; 0x1040
   25690:	ldr	r3, [r2]
   25694:	str	r2, [r0]
   25698:	str	r3, [fp, #-40]	; 0xffffffd8
   2569c:	beq	25ee0 <blkid_probe_get_size@plt+0x1e9c8>
   256a0:	mov	r5, r1
   256a4:	ldr	r1, [pc, #2672]	; 2611c <blkid_probe_get_size@plt+0x1ec04>
   256a8:	mov	r0, r5
   256ac:	add	r1, pc, r1
   256b0:	bl	7314 <strcmp@plt>
   256b4:	subs	r8, r0, #0
   256b8:	bne	25be0 <blkid_probe_get_size@plt+0x1e6c8>
   256bc:	mov	r0, r4
   256c0:	bl	723c <strlen@plt>
   256c4:	add	r3, r0, #16
   256c8:	cmp	r3, #4194304	; 0x400000
   256cc:	bhi	25f28 <blkid_probe_get_size@plt+0x1ea10>
   256d0:	ldr	r3, [pc, #2632]	; 26120 <blkid_probe_get_size@plt+0x1ec08>
   256d4:	add	r0, r0, #30
   256d8:	add	r3, pc, r3
   256dc:	bic	ip, r0, #7
   256e0:	ldm	r3, {r0, r1, r2, r3}
   256e4:	sub	sp, sp, ip
   256e8:	add	r6, sp, #8
   256ec:	stm	r6, {r0, r1, r2, r3}
   256f0:	mov	r1, r4
   256f4:	add	r0, r6, #15
   256f8:	bl	6ea0 <strcpy@plt>
   256fc:	mov	r1, r8
   25700:	mov	r0, r6
   25704:	bl	6ff0 <access@plt>
   25708:	cmp	r0, #0
   2570c:	bge	25c5c <blkid_probe_get_size@plt+0x1e744>
   25710:	mov	r0, r4
   25714:	bl	723c <strlen@plt>
   25718:	add	r3, r0, #10
   2571c:	cmp	r3, #4194304	; 0x400000
   25720:	bhi	25f88 <blkid_probe_get_size@plt+0x1ea70>
   25724:	ldr	r3, [pc, #2552]	; 26124 <blkid_probe_get_size@plt+0x1ec0c>
   25728:	add	r0, r0, #24
   2572c:	add	r3, pc, r3
   25730:	bic	r0, r0, #7
   25734:	sub	sp, sp, r0
   25738:	ldm	r3, {r0, r1, r2}
   2573c:	add	r6, sp, #8
   25740:	mov	r3, r6
   25744:	stmia	r3!, {r0, r1}
   25748:	mov	r1, r4
   2574c:	strb	r2, [r3]
   25750:	add	r0, sp, #17
   25754:	bl	6ea0 <strcpy@plt>
   25758:	mov	r1, r8
   2575c:	mov	r0, r6
   25760:	bl	6ff0 <access@plt>
   25764:	cmp	r0, #0
   25768:	bge	25c5c <blkid_probe_get_size@plt+0x1e744>
   2576c:	mov	r0, r4
   25770:	bl	723c <strlen@plt>
   25774:	add	r3, r0, #12
   25778:	cmp	r3, #4194304	; 0x400000
   2577c:	bhi	26018 <blkid_probe_get_size@plt+0x1eb00>
   25780:	ldr	r2, [pc, #2464]	; 26128 <blkid_probe_get_size@plt+0x1ec10>
   25784:	add	r0, r0, #26
   25788:	add	r2, pc, r2
   2578c:	bic	r3, r0, #7
   25790:	ldm	r2, {r0, r1, r2}
   25794:	sub	sp, sp, r3
   25798:	add	r6, sp, #8
   2579c:	stm	r6, {r0, r1, r2}
   257a0:	mov	r1, r4
   257a4:	add	r0, r6, #11
   257a8:	bl	6ea0 <strcpy@plt>
   257ac:	mov	r1, r8
   257b0:	mov	r0, r6
   257b4:	bl	6ff0 <access@plt>
   257b8:	cmp	r0, #0
   257bc:	bge	25c5c <blkid_probe_get_size@plt+0x1e744>
   257c0:	sub	r6, fp, #4096	; 0x1000
   257c4:	sub	r6, r6, #36	; 0x24
   257c8:	mov	r0, r4
   257cc:	bl	723c <strlen@plt>
   257d0:	mov	r1, r4
   257d4:	add	r3, r0, #15
   257d8:	bic	r3, r3, #7
   257dc:	sub	sp, sp, r3
   257e0:	add	r2, r0, #1
   257e4:	add	r0, sp, #8
   257e8:	bl	71e8 <memcpy@plt>
   257ec:	ldrb	r3, [r0]
   257f0:	mov	r8, r0
   257f4:	cmp	r3, #0
   257f8:	beq	25818 <blkid_probe_get_size@plt+0x1e300>
   257fc:	mov	r2, r0
   25800:	mov	r1, #33	; 0x21
   25804:	cmp	r3, #47	; 0x2f
   25808:	strbeq	r1, [r2]
   2580c:	ldrb	r3, [r2, #1]!
   25810:	cmp	r3, #0
   25814:	bne	25804 <blkid_probe_get_size@plt+0x1e2ec>
   25818:	ldr	r1, [pc, #2316]	; 2612c <blkid_probe_get_size@plt+0x1ec14>
   2581c:	sub	r0, fp, #4096	; 0x1000
   25820:	add	r1, pc, r1
   25824:	mov	r9, #0
   25828:	sub	r0, r0, #28
   2582c:	ldr	r2, [pc, #2300]	; 26130 <blkid_probe_get_size@plt+0x1ec18>
   25830:	str	r1, [r6, #-4]
   25834:	sub	r1, fp, #4096	; 0x1000
   25838:	mov	sl, r9
   2583c:	mov	r3, r6
   25840:	sub	r1, r1, #32
   25844:	add	r9, r9, #1
   25848:	add	r2, pc, r2
   2584c:	str	r8, [r0]
   25850:	cmp	r9, #4
   25854:	mov	r0, #15
   25858:	str	r5, [r3], #-4
   2585c:	str	r2, [r1]
   25860:	add	sl, sl, r0
   25864:	beq	258a0 <blkid_probe_get_size@plt+0x1e388>
   25868:	sub	r2, fp, #4160	; 0x1040
   2586c:	ldr	r0, [r3, r9, lsl #2]
   25870:	sub	r2, r2, #4
   25874:	cmp	r0, #0
   25878:	str	r3, [r2]
   2587c:	beq	258a0 <blkid_probe_get_size@plt+0x1e388>
   25880:	bl	723c <strlen@plt>
   25884:	sub	r3, fp, #4160	; 0x1040
   25888:	sub	r3, r3, #4
   2588c:	add	r9, r9, #1
   25890:	cmp	r9, #4
   25894:	ldr	r3, [r3]
   25898:	add	sl, sl, r0
   2589c:	bne	25868 <blkid_probe_get_size@plt+0x1e350>
   258a0:	add	r3, sl, #1
   258a4:	cmp	r3, #4194304	; 0x400000
   258a8:	bhi	25f58 <blkid_probe_get_size@plt+0x1ea40>
   258ac:	add	sl, sl, #15
   258b0:	bic	sl, sl, #7
   258b4:	sub	sp, sp, sl
   258b8:	ldr	r1, [pc, #2164]	; 26134 <blkid_probe_get_size@plt+0x1ec1c>
   258bc:	sub	r2, fp, #4160	; 0x1040
   258c0:	add	r9, sp, #8
   258c4:	sub	r2, r2, #4
   258c8:	add	r1, pc, r1
   258cc:	mov	r0, r9
   258d0:	mov	sl, #0
   258d4:	sub	r3, r6, #4
   258d8:	str	r3, [r2]
   258dc:	add	sl, sl, #1
   258e0:	bl	6ae0 <stpcpy@plt>
   258e4:	cmp	sl, #4
   258e8:	beq	25904 <blkid_probe_get_size@plt+0x1e3ec>
   258ec:	sub	r3, fp, #4160	; 0x1040
   258f0:	sub	r3, r3, #4
   258f4:	ldr	r3, [r3]
   258f8:	ldr	r1, [r3, sl, lsl #2]
   258fc:	cmp	r1, #0
   25900:	bne	258dc <blkid_probe_get_size@plt+0x1e3c4>
   25904:	mov	r1, #0
   25908:	mov	r0, r9
   2590c:	bl	6ff0 <access@plt>
   25910:	cmp	r0, #0
   25914:	bge	25ed0 <blkid_probe_get_size@plt+0x1e9b8>
   25918:	ldr	r1, [pc, #2072]	; 26138 <blkid_probe_get_size@plt+0x1ec20>
   2591c:	mov	r9, #0
   25920:	add	r1, pc, r1
   25924:	sub	r0, fp, #4096	; 0x1000
   25928:	mov	sl, r9
   2592c:	sub	r0, r0, #28
   25930:	ldr	r2, [pc, #2052]	; 2613c <blkid_probe_get_size@plt+0x1ec24>
   25934:	str	r1, [r6, #-4]
   25938:	sub	r1, fp, #4096	; 0x1000
   2593c:	mov	r3, r6
   25940:	sub	r1, r1, #32
   25944:	add	sl, sl, #1
   25948:	add	r2, pc, r2
   2594c:	str	r8, [r0]
   25950:	cmp	sl, #4
   25954:	mov	r0, #9
   25958:	str	r5, [r3], #-4
   2595c:	str	r2, [r1]
   25960:	add	r9, r9, r0
   25964:	beq	259a0 <blkid_probe_get_size@plt+0x1e488>
   25968:	sub	r2, fp, #4160	; 0x1040
   2596c:	ldr	r0, [r3, sl, lsl #2]
   25970:	sub	r2, r2, #4
   25974:	cmp	r0, #0
   25978:	str	r3, [r2]
   2597c:	beq	259a0 <blkid_probe_get_size@plt+0x1e488>
   25980:	bl	723c <strlen@plt>
   25984:	sub	r3, fp, #4160	; 0x1040
   25988:	sub	r3, r3, #4
   2598c:	add	sl, sl, #1
   25990:	cmp	sl, #4
   25994:	ldr	r3, [r3]
   25998:	add	r9, r9, r0
   2599c:	bne	25968 <blkid_probe_get_size@plt+0x1e450>
   259a0:	add	r3, r9, #1
   259a4:	cmp	r3, #4194304	; 0x400000
   259a8:	bhi	25fe8 <blkid_probe_get_size@plt+0x1ead0>
   259ac:	add	r9, r9, #15
   259b0:	bic	r9, r9, #7
   259b4:	sub	sp, sp, r9
   259b8:	ldr	r1, [pc, #1920]	; 26140 <blkid_probe_get_size@plt+0x1ec28>
   259bc:	sub	r2, fp, #4160	; 0x1040
   259c0:	add	sl, sp, #8
   259c4:	sub	r2, r2, #4
   259c8:	add	r1, pc, r1
   259cc:	mov	r0, sl
   259d0:	mov	r9, #0
   259d4:	sub	r3, r6, #4
   259d8:	str	r3, [r2]
   259dc:	add	r9, r9, #1
   259e0:	bl	6ae0 <stpcpy@plt>
   259e4:	cmp	r9, #4
   259e8:	beq	25a04 <blkid_probe_get_size@plt+0x1e4ec>
   259ec:	sub	r3, fp, #4160	; 0x1040
   259f0:	sub	r3, r3, #4
   259f4:	ldr	r3, [r3]
   259f8:	ldr	r1, [r3, r9, lsl #2]
   259fc:	cmp	r1, #0
   25a00:	bne	259dc <blkid_probe_get_size@plt+0x1e4c4>
   25a04:	mov	r1, #0
   25a08:	mov	r0, sl
   25a0c:	bl	6ff0 <access@plt>
   25a10:	cmp	r0, #0
   25a14:	bge	25f18 <blkid_probe_get_size@plt+0x1ea00>
   25a18:	sub	r2, fp, #4096	; 0x1000
   25a1c:	ldr	r1, [pc, #1824]	; 26144 <blkid_probe_get_size@plt+0x1ec2c>
   25a20:	sub	r2, r2, #28
   25a24:	mov	r9, #0
   25a28:	add	r1, pc, r1
   25a2c:	mov	sl, r9
   25a30:	str	r8, [r2]
   25a34:	str	r1, [r6, #-4]
   25a38:	ldr	r2, [pc, #1800]	; 26148 <blkid_probe_get_size@plt+0x1ec30>
   25a3c:	sub	r1, fp, #4096	; 0x1000
   25a40:	mov	r3, r6
   25a44:	sub	r1, r1, #32
   25a48:	add	sl, sl, #1
   25a4c:	add	r2, pc, r2
   25a50:	mov	r0, #11
   25a54:	cmp	sl, #4
   25a58:	str	r5, [r3], #-4
   25a5c:	str	r2, [r1]
   25a60:	add	r9, r9, r0
   25a64:	beq	25aa0 <blkid_probe_get_size@plt+0x1e588>
   25a68:	sub	r2, fp, #4160	; 0x1040
   25a6c:	ldr	r0, [r3, sl, lsl #2]
   25a70:	sub	r2, r2, #4
   25a74:	cmp	r0, #0
   25a78:	str	r3, [r2]
   25a7c:	beq	25aa0 <blkid_probe_get_size@plt+0x1e588>
   25a80:	bl	723c <strlen@plt>
   25a84:	sub	r3, fp, #4160	; 0x1040
   25a88:	sub	r3, r3, #4
   25a8c:	add	sl, sl, #1
   25a90:	cmp	sl, #4
   25a94:	ldr	r3, [r3]
   25a98:	add	r9, r9, r0
   25a9c:	bne	25a68 <blkid_probe_get_size@plt+0x1e550>
   25aa0:	add	r3, r9, #1
   25aa4:	cmp	r3, #4194304	; 0x400000
   25aa8:	bhi	26048 <blkid_probe_get_size@plt+0x1eb30>
   25aac:	add	r9, r9, #15
   25ab0:	bic	r9, r9, #7
   25ab4:	sub	sp, sp, r9
   25ab8:	ldr	r1, [pc, #1676]	; 2614c <blkid_probe_get_size@plt+0x1ec34>
   25abc:	add	r8, sp, #8
   25ac0:	add	r1, pc, r1
   25ac4:	mov	r0, r8
   25ac8:	mov	sl, #0
   25acc:	sub	r9, r6, #4
   25ad0:	add	sl, sl, #1
   25ad4:	bl	6ae0 <stpcpy@plt>
   25ad8:	cmp	sl, #4
   25adc:	beq	25aec <blkid_probe_get_size@plt+0x1e5d4>
   25ae0:	ldr	r1, [r9, sl, lsl #2]
   25ae4:	cmp	r1, #0
   25ae8:	bne	25ad0 <blkid_probe_get_size@plt+0x1e5b8>
   25aec:	mov	r1, #0
   25af0:	mov	r0, r8
   25af4:	bl	6ff0 <access@plt>
   25af8:	cmp	r0, #0
   25afc:	bge	25c4c <blkid_probe_get_size@plt+0x1e734>
   25b00:	sub	r2, fp, #4096	; 0x1000
   25b04:	ldr	r3, [pc, #1604]	; 26150 <blkid_probe_get_size@plt+0x1ec38>
   25b08:	sub	r2, r2, #28
   25b0c:	mov	r8, #0
   25b10:	add	r3, pc, r3
   25b14:	str	r4, [r2]
   25b18:	mov	r9, r8
   25b1c:	sub	r2, fp, #4096	; 0x1000
   25b20:	str	r3, [r6, #-4]
   25b24:	ldr	r3, [pc, #1576]	; 26154 <blkid_probe_get_size@plt+0x1ec3c>
   25b28:	mov	r4, r6
   25b2c:	sub	r2, r2, #32
   25b30:	add	r9, r9, #1
   25b34:	add	r3, pc, r3
   25b38:	mov	r0, #14
   25b3c:	cmp	r9, #4
   25b40:	str	r5, [r4], #-4
   25b44:	str	r3, [r2]
   25b48:	add	r8, r8, r0
   25b4c:	beq	25b70 <blkid_probe_get_size@plt+0x1e658>
   25b50:	ldr	r0, [r4, r9, lsl #2]
   25b54:	cmp	r0, #0
   25b58:	beq	25b70 <blkid_probe_get_size@plt+0x1e658>
   25b5c:	bl	723c <strlen@plt>
   25b60:	add	r9, r9, #1
   25b64:	cmp	r9, #4
   25b68:	add	r8, r8, r0
   25b6c:	bne	25b50 <blkid_probe_get_size@plt+0x1e638>
   25b70:	add	r3, r8, #1
   25b74:	cmp	r3, #4194304	; 0x400000
   25b78:	bhi	260a8 <blkid_probe_get_size@plt+0x1eb90>
   25b7c:	add	r8, r8, #15
   25b80:	bic	r8, r8, #7
   25b84:	sub	sp, sp, r8
   25b88:	ldr	r1, [pc, #1480]	; 26158 <blkid_probe_get_size@plt+0x1ec40>
   25b8c:	add	r5, sp, #8
   25b90:	add	r1, pc, r1
   25b94:	sub	r6, r6, #4
   25b98:	mov	r0, r5
   25b9c:	mov	r4, #0
   25ba0:	add	r4, r4, #1
   25ba4:	bl	6ae0 <stpcpy@plt>
   25ba8:	cmp	r4, #4
   25bac:	beq	25bbc <blkid_probe_get_size@plt+0x1e6a4>
   25bb0:	ldr	r1, [r6, r4, lsl #2]
   25bb4:	cmp	r1, #0
   25bb8:	bne	25ba0 <blkid_probe_get_size@plt+0x1e688>
   25bbc:	mov	r1, #0
   25bc0:	mov	r0, r5
   25bc4:	bl	6ff0 <access@plt>
   25bc8:	cmp	r0, #0
   25bcc:	blt	26108 <blkid_probe_get_size@plt+0x1ebf0>
   25bd0:	mov	r1, r5
   25bd4:	mov	r0, r7
   25bd8:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   25bdc:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   25be0:	ldr	r1, [pc, #1396]	; 2615c <blkid_probe_get_size@plt+0x1ec44>
   25be4:	mov	r0, r5
   25be8:	add	r1, pc, r1
   25bec:	bl	7314 <strcmp@plt>
   25bf0:	subs	r6, r0, #0
   25bf4:	bne	25c88 <blkid_probe_get_size@plt+0x1e770>
   25bf8:	mov	r0, r4
   25bfc:	bl	723c <strlen@plt>
   25c00:	add	r3, r0, #13
   25c04:	cmp	r3, #4194304	; 0x400000
   25c08:	bhi	25fb8 <blkid_probe_get_size@plt+0x1eaa0>
   25c0c:	ldr	r2, [pc, #1356]	; 26160 <blkid_probe_get_size@plt+0x1ec48>
   25c10:	add	r0, r0, #27
   25c14:	add	r2, pc, r2
   25c18:	bic	r3, r0, #7
   25c1c:	ldm	r2, {r0, r1, r2}
   25c20:	sub	sp, sp, r3
   25c24:	add	r8, sp, #8
   25c28:	stm	r8, {r0, r1, r2}
   25c2c:	mov	r1, r4
   25c30:	add	r0, r8, #12
   25c34:	bl	6ea0 <strcpy@plt>
   25c38:	mov	r1, r6
   25c3c:	mov	r0, r8
   25c40:	bl	6ff0 <access@plt>
   25c44:	cmp	r0, #0
   25c48:	blt	257c0 <blkid_probe_get_size@plt+0x1e2a8>
   25c4c:	mov	r1, r8
   25c50:	mov	r0, r7
   25c54:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   25c58:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   25c5c:	mov	r1, r6
   25c60:	mov	r0, r7
   25c64:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   25c68:	sub	r3, fp, #4160	; 0x1040
   25c6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25c70:	ldr	r3, [r3]
   25c74:	ldr	r3, [r3]
   25c78:	cmp	r2, r3
   25c7c:	bne	26110 <blkid_probe_get_size@plt+0x1ebf8>
   25c80:	sub	sp, fp, #32
   25c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c88:	ldr	r1, [pc, #1236]	; 26164 <blkid_probe_get_size@plt+0x1ec4c>
   25c8c:	mov	r0, r5
   25c90:	add	r1, pc, r1
   25c94:	bl	7314 <strcmp@plt>
   25c98:	sub	r6, fp, #4096	; 0x1000
   25c9c:	sub	r6, r6, #36	; 0x24
   25ca0:	subs	r9, r0, #0
   25ca4:	bne	257c8 <blkid_probe_get_size@plt+0x1e2b0>
   25ca8:	sub	r8, r6, #4
   25cac:	mov	r2, r4
   25cb0:	mov	r1, #4096	; 0x1000
   25cb4:	mov	r0, r8
   25cb8:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   25cbc:	mov	r0, r8
   25cc0:	mov	r1, #58	; 0x3a
   25cc4:	bl	74c4 <strchr@plt>
   25cc8:	subs	sl, r0, #0
   25ccc:	beq	257c8 <blkid_probe_get_size@plt+0x1e2b0>
   25cd0:	mov	r2, r9
   25cd4:	ldr	ip, [pc, #1164]	; 26168 <blkid_probe_get_size@plt+0x1ec50>
   25cd8:	ldr	r1, [pc, #1164]	; 2616c <blkid_probe_get_size@plt+0x1ec54>
   25cdc:	add	r2, r2, #1
   25ce0:	mov	r3, r9
   25ce4:	add	ip, pc, ip
   25ce8:	add	r1, pc, r1
   25cec:	mov	r0, #15
   25cf0:	cmp	r2, #4
   25cf4:	strb	r9, [sl], #1
   25cf8:	str	r8, [r6, #-16]
   25cfc:	str	sl, [r6, #-8]
   25d00:	str	ip, [r6, #-20]	; 0xffffffec
   25d04:	sub	r9, r6, #20
   25d08:	str	r1, [r6, #-12]
   25d0c:	add	r3, r3, r0
   25d10:	beq	25d64 <blkid_probe_get_size@plt+0x1e84c>
   25d14:	sub	r1, fp, #4160	; 0x1040
   25d18:	ldr	r0, [r9, r2, lsl #2]
   25d1c:	sub	r1, r1, #4
   25d20:	cmp	r0, #0
   25d24:	str	r2, [r1]
   25d28:	beq	25d64 <blkid_probe_get_size@plt+0x1e84c>
   25d2c:	sub	r2, fp, #4160	; 0x1040
   25d30:	sub	r2, r2, #8
   25d34:	str	r3, [r2]
   25d38:	bl	723c <strlen@plt>
   25d3c:	sub	r2, fp, #4160	; 0x1040
   25d40:	sub	r2, r2, #4
   25d44:	sub	r3, fp, #4160	; 0x1040
   25d48:	sub	r3, r3, #8
   25d4c:	ldr	r2, [r2]
   25d50:	ldr	r3, [r3]
   25d54:	add	r2, r2, #1
   25d58:	cmp	r2, #4
   25d5c:	add	r3, r3, r0
   25d60:	bne	25d14 <blkid_probe_get_size@plt+0x1e7fc>
   25d64:	add	r2, r3, #1
   25d68:	cmp	r2, #4194304	; 0x400000
   25d6c:	bhi	26078 <blkid_probe_get_size@plt+0x1eb60>
   25d70:	add	r3, r3, #15
   25d74:	bic	r3, r3, #7
   25d78:	sub	r2, fp, #4160	; 0x1040
   25d7c:	sub	r2, r2, #8
   25d80:	sub	sp, sp, r3
   25d84:	add	r3, sp, #8
   25d88:	ldr	r1, [pc, #992]	; 26170 <blkid_probe_get_size@plt+0x1ec58>
   25d8c:	str	r3, [r2]
   25d90:	sub	r2, fp, #4160	; 0x1040
   25d94:	sub	r2, r2, #4
   25d98:	add	r1, pc, r1
   25d9c:	mov	r9, #0
   25da0:	mov	r0, r3
   25da4:	sub	r3, r6, #20
   25da8:	str	r3, [r2]
   25dac:	add	r9, r9, #1
   25db0:	bl	6ae0 <stpcpy@plt>
   25db4:	cmp	r9, #4
   25db8:	beq	25dd4 <blkid_probe_get_size@plt+0x1e8bc>
   25dbc:	sub	r3, fp, #4160	; 0x1040
   25dc0:	sub	r3, r3, #4
   25dc4:	ldr	r3, [r3]
   25dc8:	ldr	r1, [r3, r9, lsl #2]
   25dcc:	cmp	r1, #0
   25dd0:	bne	25dac <blkid_probe_get_size@plt+0x1e894>
   25dd4:	sub	r3, fp, #4160	; 0x1040
   25dd8:	sub	r3, r3, #8
   25ddc:	ldr	r9, [r3]
   25de0:	mov	r1, #0
   25de4:	mov	r0, r9
   25de8:	bl	6ff0 <access@plt>
   25dec:	cmp	r0, #0
   25df0:	bge	25ed0 <blkid_probe_get_size@plt+0x1e9b8>
   25df4:	mov	r9, #0
   25df8:	mov	r3, r9
   25dfc:	ldr	r1, [pc, #880]	; 26174 <blkid_probe_get_size@plt+0x1ec5c>
   25e00:	ldr	r2, [pc, #880]	; 26178 <blkid_probe_get_size@plt+0x1ec60>
   25e04:	add	r3, r3, #1
   25e08:	add	r1, pc, r1
   25e0c:	add	r2, pc, r2
   25e10:	mov	r0, #9
   25e14:	cmp	r3, #4
   25e18:	str	r8, [r6, #-16]
   25e1c:	str	sl, [r6, #-8]
   25e20:	str	r1, [r6, #-20]	; 0xffffffec
   25e24:	sub	r8, r6, #20
   25e28:	str	r2, [r6, #-12]
   25e2c:	add	r9, r9, r0
   25e30:	beq	25e6c <blkid_probe_get_size@plt+0x1e954>
   25e34:	sub	r2, fp, #4160	; 0x1040
   25e38:	ldr	r0, [r8, r3, lsl #2]
   25e3c:	sub	r2, r2, #4
   25e40:	cmp	r0, #0
   25e44:	str	r3, [r2]
   25e48:	beq	25e6c <blkid_probe_get_size@plt+0x1e954>
   25e4c:	bl	723c <strlen@plt>
   25e50:	sub	r3, fp, #4160	; 0x1040
   25e54:	sub	r3, r3, #4
   25e58:	ldr	r3, [r3]
   25e5c:	add	r3, r3, #1
   25e60:	cmp	r3, #4
   25e64:	add	r9, r9, r0
   25e68:	bne	25e34 <blkid_probe_get_size@plt+0x1e91c>
   25e6c:	add	r3, r9, #1
   25e70:	cmp	r3, #4194304	; 0x400000
   25e74:	bhi	260d8 <blkid_probe_get_size@plt+0x1ebc0>
   25e78:	add	r3, r9, #15
   25e7c:	bic	r3, r3, #7
   25e80:	sub	sp, sp, r3
   25e84:	ldr	r1, [pc, #752]	; 2617c <blkid_probe_get_size@plt+0x1ec64>
   25e88:	add	r8, sp, #8
   25e8c:	add	r1, pc, r1
   25e90:	mov	r0, r8
   25e94:	mov	sl, #0
   25e98:	sub	r9, r6, #20
   25e9c:	add	sl, sl, #1
   25ea0:	bl	6ae0 <stpcpy@plt>
   25ea4:	cmp	sl, #4
   25ea8:	beq	25eb8 <blkid_probe_get_size@plt+0x1e9a0>
   25eac:	ldr	r1, [r9, sl, lsl #2]
   25eb0:	cmp	r1, #0
   25eb4:	bne	25e9c <blkid_probe_get_size@plt+0x1e984>
   25eb8:	mov	r1, #0
   25ebc:	mov	r0, r8
   25ec0:	bl	6ff0 <access@plt>
   25ec4:	cmp	r0, #0
   25ec8:	blt	257c8 <blkid_probe_get_size@plt+0x1e2b0>
   25ecc:	b	25c4c <blkid_probe_get_size@plt+0x1e734>
   25ed0:	mov	r1, r9
   25ed4:	mov	r0, r7
   25ed8:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   25edc:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   25ee0:	ldr	r3, [pc, #664]	; 26180 <blkid_probe_get_size@plt+0x1ec68>
   25ee4:	ldr	r2, [pc, #664]	; 26184 <blkid_probe_get_size@plt+0x1ec6c>
   25ee8:	add	r3, pc, r3
   25eec:	add	r3, r3, #1696	; 0x6a0
   25ef0:	ldr	r1, [pc, #656]	; 26188 <blkid_probe_get_size@plt+0x1ec70>
   25ef4:	add	r3, r3, #8
   25ef8:	mov	r0, r4
   25efc:	str	r3, [sp]
   25f00:	add	r2, pc, r2
   25f04:	mov	r3, #252	; 0xfc
   25f08:	add	r1, pc, r1
   25f0c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   25f10:	mvn	r0, #21
   25f14:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   25f18:	mov	r1, sl
   25f1c:	mov	r0, r7
   25f20:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   25f24:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   25f28:	ldr	r3, [pc, #604]	; 2618c <blkid_probe_get_size@plt+0x1ec74>
   25f2c:	ldr	r2, [pc, #604]	; 26190 <blkid_probe_get_size@plt+0x1ec78>
   25f30:	add	r3, pc, r3
   25f34:	add	r3, r3, #1696	; 0x6a0
   25f38:	ldr	r1, [pc, #596]	; 26194 <blkid_probe_get_size@plt+0x1ec7c>
   25f3c:	add	r3, r3, #8
   25f40:	str	r3, [sp]
   25f44:	mov	r0, r8
   25f48:	mov	r3, #255	; 0xff
   25f4c:	add	r2, pc, r2
   25f50:	add	r1, pc, r1
   25f54:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   25f58:	ldr	r2, [pc, #568]	; 26198 <blkid_probe_get_size@plt+0x1ec80>
   25f5c:	ldr	r1, [pc, #568]	; 2619c <blkid_probe_get_size@plt+0x1ec84>
   25f60:	add	r2, pc, r2
   25f64:	add	r2, r2, #1696	; 0x6a0
   25f68:	add	r2, r2, #8
   25f6c:	str	r2, [sp]
   25f70:	ldr	r2, [pc, #552]	; 261a0 <blkid_probe_get_size@plt+0x1ec88>
   25f74:	ldr	r3, [pc, #552]	; 261a4 <blkid_probe_get_size@plt+0x1ec8c>
   25f78:	add	r2, pc, r2
   25f7c:	add	r1, pc, r1
   25f80:	mov	r0, #0
   25f84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   25f88:	ldr	r3, [pc, #536]	; 261a8 <blkid_probe_get_size@plt+0x1ec90>
   25f8c:	ldr	r2, [pc, #536]	; 261ac <blkid_probe_get_size@plt+0x1ec94>
   25f90:	add	r3, pc, r3
   25f94:	add	r3, r3, #1696	; 0x6a0
   25f98:	ldr	r1, [pc, #528]	; 261b0 <blkid_probe_get_size@plt+0x1ec98>
   25f9c:	add	r3, r3, #8
   25fa0:	str	r3, [sp]
   25fa4:	mov	r0, r8
   25fa8:	ldr	r3, [pc, #516]	; 261b4 <blkid_probe_get_size@plt+0x1ec9c>
   25fac:	add	r2, pc, r2
   25fb0:	add	r1, pc, r1
   25fb4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   25fb8:	ldr	r3, [pc, #504]	; 261b8 <blkid_probe_get_size@plt+0x1eca0>
   25fbc:	ldr	r2, [pc, #504]	; 261bc <blkid_probe_get_size@plt+0x1eca4>
   25fc0:	add	r3, pc, r3
   25fc4:	add	r3, r3, #1696	; 0x6a0
   25fc8:	ldr	r1, [pc, #496]	; 261c0 <blkid_probe_get_size@plt+0x1eca8>
   25fcc:	add	r3, r3, #8
   25fd0:	str	r3, [sp]
   25fd4:	mov	r0, r6
   25fd8:	ldr	r3, [pc, #484]	; 261c4 <blkid_probe_get_size@plt+0x1ecac>
   25fdc:	add	r2, pc, r2
   25fe0:	add	r1, pc, r1
   25fe4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   25fe8:	ldr	r2, [pc, #472]	; 261c8 <blkid_probe_get_size@plt+0x1ecb0>
   25fec:	ldr	r1, [pc, #472]	; 261cc <blkid_probe_get_size@plt+0x1ecb4>
   25ff0:	add	r2, pc, r2
   25ff4:	add	r2, r2, #1696	; 0x6a0
   25ff8:	add	r2, r2, #8
   25ffc:	str	r2, [sp]
   26000:	ldr	r2, [pc, #456]	; 261d0 <blkid_probe_get_size@plt+0x1ecb8>
   26004:	ldr	r3, [pc, #456]	; 261d4 <blkid_probe_get_size@plt+0x1ecbc>
   26008:	add	r2, pc, r2
   2600c:	add	r1, pc, r1
   26010:	mov	r0, #0
   26014:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26018:	ldr	r3, [pc, #440]	; 261d8 <blkid_probe_get_size@plt+0x1ecc0>
   2601c:	ldr	r2, [pc, #440]	; 261dc <blkid_probe_get_size@plt+0x1ecc4>
   26020:	add	r3, pc, r3
   26024:	add	r3, r3, #1696	; 0x6a0
   26028:	ldr	r1, [pc, #432]	; 261e0 <blkid_probe_get_size@plt+0x1ecc8>
   2602c:	add	r3, r3, #8
   26030:	str	r3, [sp]
   26034:	mov	r0, r8
   26038:	ldr	r3, [pc, #420]	; 261e4 <blkid_probe_get_size@plt+0x1eccc>
   2603c:	add	r2, pc, r2
   26040:	add	r1, pc, r1
   26044:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26048:	ldr	r2, [pc, #408]	; 261e8 <blkid_probe_get_size@plt+0x1ecd0>
   2604c:	ldr	r1, [pc, #408]	; 261ec <blkid_probe_get_size@plt+0x1ecd4>
   26050:	add	r2, pc, r2
   26054:	add	r2, r2, #1696	; 0x6a0
   26058:	add	r2, r2, #8
   2605c:	str	r2, [sp]
   26060:	ldr	r2, [pc, #392]	; 261f0 <blkid_probe_get_size@plt+0x1ecd8>
   26064:	ldr	r3, [pc, #392]	; 261f4 <blkid_probe_get_size@plt+0x1ecdc>
   26068:	add	r2, pc, r2
   2606c:	add	r1, pc, r1
   26070:	mov	r0, #0
   26074:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26078:	ldr	r2, [pc, #376]	; 261f8 <blkid_probe_get_size@plt+0x1ece0>
   2607c:	ldr	r1, [pc, #376]	; 261fc <blkid_probe_get_size@plt+0x1ece4>
   26080:	add	r2, pc, r2
   26084:	add	r2, r2, #1696	; 0x6a0
   26088:	add	r2, r2, #8
   2608c:	str	r2, [sp]
   26090:	ldr	r2, [pc, #360]	; 26200 <blkid_probe_get_size@plt+0x1ece8>
   26094:	mov	r3, #280	; 0x118
   26098:	add	r2, pc, r2
   2609c:	add	r1, pc, r1
   260a0:	mov	r0, #0
   260a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   260a8:	ldr	r2, [pc, #340]	; 26204 <blkid_probe_get_size@plt+0x1ecec>
   260ac:	ldr	r1, [pc, #340]	; 26208 <blkid_probe_get_size@plt+0x1ecf0>
   260b0:	add	r2, pc, r2
   260b4:	add	r2, r2, #1696	; 0x6a0
   260b8:	add	r2, r2, #8
   260bc:	str	r2, [sp]
   260c0:	ldr	r2, [pc, #324]	; 2620c <blkid_probe_get_size@plt+0x1ecf4>
   260c4:	ldr	r3, [pc, #324]	; 26210 <blkid_probe_get_size@plt+0x1ecf8>
   260c8:	add	r2, pc, r2
   260cc:	add	r1, pc, r1
   260d0:	mov	r0, #0
   260d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   260d8:	ldr	r2, [pc, #308]	; 26214 <blkid_probe_get_size@plt+0x1ecfc>
   260dc:	ldr	r1, [pc, #308]	; 26218 <blkid_probe_get_size@plt+0x1ed00>
   260e0:	add	r2, pc, r2
   260e4:	add	r2, r2, #1696	; 0x6a0
   260e8:	add	r2, r2, #8
   260ec:	str	r2, [sp]
   260f0:	ldr	r2, [pc, #292]	; 2621c <blkid_probe_get_size@plt+0x1ed04>
   260f4:	mov	r3, #284	; 0x11c
   260f8:	add	r2, pc, r2
   260fc:	add	r1, pc, r1
   26100:	mov	r0, #0
   26104:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26108:	mvn	r0, #18
   2610c:	b	25c68 <blkid_probe_get_size@plt+0x1e750>
   26110:	bl	6fb4 <__stack_chk_fail@plt>
   26114:	strdeq	r2, [r7], -ip
   26118:	andeq	r0, r0, ip, lsr r4
   2611c:	andeq	r0, r4, r4, lsr r1
   26120:	andeq	r6, r4, r0, lsr r0
   26124:	andeq	r5, r4, ip, ror #31
   26128:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   2612c:	andeq	r5, r4, r8, ror #29
   26130:			; <UNDEFINED> instruction: 0x00045bb8
   26134:	andeq	r5, r4, r0, asr #28
   26138:	strdeq	r5, [r4], -r8
   2613c:			; <UNDEFINED> instruction: 0x00045ab8
   26140:	andeq	r5, r4, r0, asr sp
   26144:	strdeq	r5, [r4], -ip
   26148:	andeq	r2, r5, r4, ror r5
   2614c:	andeq	r5, r4, r4, ror #24
   26150:	andeq	r5, r4, r0, lsr #24
   26154:	andeq	r2, r5, ip, lsl #9
   26158:	andeq	r5, r4, r0, lsr #23
   2615c:	strdeq	r2, [r4], -ip
   26160:	andeq	r5, r4, ip, lsr #22
   26164:	ldrdeq	r2, [r4], -r4
   26168:	andeq	r5, r4, r4, lsr #20
   2616c:	andeq	r5, r4, r8, ror #20
   26170:	andeq	r5, r4, r0, ror r9
   26174:	andeq	r5, r4, r0, lsl r9
   26178:	andeq	r5, r4, r4, asr #18
   2617c:	andeq	r5, r4, ip, lsl #17
   26180:	andeq	r3, r4, r0, lsr #14
   26184:			; <UNDEFINED> instruction: 0x0003fcb0
   26188:	andeq	r8, r4, r0, asr r7
   2618c:	ldrdeq	r3, [r4], -r8
   26190:	andeq	pc, r3, r4, ror #24
   26194:	andeq	pc, r3, r8, asr #2
   26198:	andeq	r3, r4, r8, lsr #13
   2619c:	andeq	pc, r3, ip, lsl r1	; <UNPREDICTABLE>
   261a0:	andeq	pc, r3, r8, lsr ip	; <UNPREDICTABLE>
   261a4:	andeq	r0, r0, fp, lsr #2
   261a8:	andeq	r3, r4, r8, ror r6
   261ac:	andeq	pc, r3, r4, lsl #24
   261b0:	andeq	pc, r3, r8, ror #1
   261b4:	andeq	r0, r0, r3, lsl #2
   261b8:	andeq	r3, r4, r8, asr #12
   261bc:	ldrdeq	pc, [r3], -r4
   261c0:	strheq	pc, [r3], -r8	; <UNPREDICTABLE>
   261c4:	andeq	r0, r0, fp, lsl #2
   261c8:	andeq	r3, r4, r8, lsl r6
   261cc:	andeq	pc, r3, ip, lsl #1
   261d0:	andeq	pc, r3, r8, lsr #23
   261d4:	andeq	r0, r0, pc, lsr #2
   261d8:	andeq	r3, r4, r8, ror #11
   261dc:	andeq	pc, r3, r4, ror fp	; <UNPREDICTABLE>
   261e0:	andeq	pc, r3, r8, asr r0	; <UNPREDICTABLE>
   261e4:	andeq	r0, r0, r7, lsl #2
   261e8:			; <UNDEFINED> instruction: 0x000435b8
   261ec:	andeq	pc, r3, ip, lsr #32
   261f0:	andeq	pc, r3, r8, asr #22
   261f4:	andeq	r0, r0, r3, lsr r1
   261f8:	andeq	r3, r4, r8, lsl #11
   261fc:	strdeq	lr, [r3], -ip
   26200:	andeq	pc, r3, r8, lsl fp	; <UNPREDICTABLE>
   26204:	andeq	r3, r4, r8, asr r5
   26208:	andeq	lr, r3, ip, asr #31
   2620c:	andeq	pc, r3, r8, ror #21
   26210:	andeq	r0, r0, r7, lsr r1
   26214:	andeq	r3, r4, r8, lsr #10
   26218:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   2621c:			; <UNDEFINED> instruction: 0x0003fab8
   26220:	ldr	ip, [pc, #468]	; 263fc <blkid_probe_get_size@plt+0x1eee4>
   26224:	push	{r4, r5, r6, r7, r8, fp, lr}
   26228:	add	ip, pc, ip
   2622c:	ldr	lr, [pc, #460]	; 26400 <blkid_probe_get_size@plt+0x1eee8>
   26230:	add	fp, sp, #24
   26234:	sub	sp, sp, #68	; 0x44
   26238:	ldr	r6, [ip, lr]
   2623c:	mov	r4, r1
   26240:	mov	r7, r0
   26244:	sub	r0, r4, #98	; 0x62
   26248:	cmp	r0, #1
   2624c:	ldr	r0, [r6]
   26250:	mov	r1, ip
   26254:	str	r0, [fp, #-32]	; 0xffffffe0
   26258:	bls	262a4 <blkid_probe_get_size@plt+0x1ed8c>
   2625c:	ldr	r2, [pc, #416]	; 26404 <blkid_probe_get_size@plt+0x1eeec>
   26260:	ldr	r1, [pc, #416]	; 26408 <blkid_probe_get_size@plt+0x1eef0>
   26264:	add	r2, pc, r2
   26268:	add	r2, r2, #1744	; 0x6d0
   2626c:	str	r2, [sp]
   26270:	ldr	r2, [pc, #404]	; 2640c <blkid_probe_get_size@plt+0x1eef4>
   26274:	mov	r0, #0
   26278:	mov	r3, #236	; 0xec
   2627c:	add	r2, pc, r2
   26280:	add	r1, pc, r1
   26284:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   26288:	mvn	r0, #21
   2628c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26290:	ldr	r3, [r6]
   26294:	cmp	r2, r3
   26298:	bne	263f8 <blkid_probe_get_size@plt+0x1eee0>
   2629c:	sub	sp, fp, #24
   262a0:	pop	{r4, r5, r6, r7, r8, fp, pc}
   262a4:	lsr	r0, r2, #12
   262a8:	orr	r0, r0, r3, lsl #20
   262ac:	lsl	r1, r2, #12
   262b0:	bic	r3, r3, #4080	; 0xff0
   262b4:	ldr	ip, [pc, #340]	; 26410 <blkid_probe_get_size@plt+0x1eef8>
   262b8:	bic	r3, r3, #15
   262bc:	uxtb	r2, r2
   262c0:	bic	r0, r0, #255	; 0xff
   262c4:	orr	r0, r0, r2
   262c8:	orr	r1, r3, r1, lsr #20
   262cc:	add	ip, pc, ip
   262d0:	mov	r3, #25
   262d4:	sub	r8, fp, #60	; 0x3c
   262d8:	str	r0, [sp, #8]
   262dc:	str	r1, [sp, #4]
   262e0:	str	ip, [sp]
   262e4:	mov	r1, r3
   262e8:	mov	r0, r8
   262ec:	mov	r2, #1
   262f0:	bl	7260 <__snprintf_chk@plt>
   262f4:	ldr	r3, [pc, #280]	; 26414 <blkid_probe_get_size@plt+0x1eefc>
   262f8:	cmp	r4, #98	; 0x62
   262fc:	add	r3, pc, r3
   26300:	str	r3, [fp, #-76]	; 0xffffffb4
   26304:	beq	263c0 <blkid_probe_get_size@plt+0x1eea8>
   26308:	ldr	r2, [pc, #264]	; 26418 <blkid_probe_get_size@plt+0x1ef00>
   2630c:	add	r2, pc, r2
   26310:	mov	r4, #0
   26314:	ldr	r3, [pc, #256]	; 2641c <blkid_probe_get_size@plt+0x1ef04>
   26318:	mov	r5, r4
   2631c:	add	r4, r4, #1
   26320:	add	r3, pc, r3
   26324:	mov	r0, #9
   26328:	cmp	r4, #4
   2632c:	str	r8, [fp, #-64]	; 0xffffffc0
   26330:	str	r2, [fp, #-72]	; 0xffffffb8
   26334:	sub	r8, fp, #76	; 0x4c
   26338:	str	r3, [fp, #-68]	; 0xffffffbc
   2633c:	add	r5, r5, r0
   26340:	beq	26364 <blkid_probe_get_size@plt+0x1ee4c>
   26344:	ldr	r0, [r8, r4, lsl #2]
   26348:	cmp	r0, #0
   2634c:	beq	26364 <blkid_probe_get_size@plt+0x1ee4c>
   26350:	bl	723c <strlen@plt>
   26354:	add	r4, r4, #1
   26358:	cmp	r4, #4
   2635c:	add	r5, r5, r0
   26360:	bne	26344 <blkid_probe_get_size@plt+0x1ee2c>
   26364:	add	r3, r5, #1
   26368:	cmp	r3, #4194304	; 0x400000
   2636c:	bhi	263cc <blkid_probe_get_size@plt+0x1eeb4>
   26370:	add	r5, r5, #15
   26374:	bic	r5, r5, #7
   26378:	sub	sp, sp, r5
   2637c:	ldr	r1, [pc, #156]	; 26420 <blkid_probe_get_size@plt+0x1ef08>
   26380:	add	r8, sp, #16
   26384:	add	r1, pc, r1
   26388:	mov	r0, r8
   2638c:	mov	r4, #0
   26390:	sub	r5, fp, #76	; 0x4c
   26394:	add	r4, r4, #1
   26398:	bl	6ae0 <stpcpy@plt>
   2639c:	cmp	r4, #4
   263a0:	beq	263b0 <blkid_probe_get_size@plt+0x1ee98>
   263a4:	ldr	r1, [r5, r4, lsl #2]
   263a8:	cmp	r1, #0
   263ac:	bne	26394 <blkid_probe_get_size@plt+0x1ee7c>
   263b0:	mov	r1, r8
   263b4:	mov	r0, r7
   263b8:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   263bc:	b	2628c <blkid_probe_get_size@plt+0x1ed74>
   263c0:	ldr	r2, [pc, #92]	; 26424 <blkid_probe_get_size@plt+0x1ef0c>
   263c4:	add	r2, pc, r2
   263c8:	b	26310 <blkid_probe_get_size@plt+0x1edf8>
   263cc:	ldr	r2, [pc, #84]	; 26428 <blkid_probe_get_size@plt+0x1ef10>
   263d0:	ldr	r1, [pc, #84]	; 2642c <blkid_probe_get_size@plt+0x1ef14>
   263d4:	add	r2, pc, r2
   263d8:	add	r2, r2, #1744	; 0x6d0
   263dc:	str	r2, [sp]
   263e0:	ldr	r2, [pc, #72]	; 26430 <blkid_probe_get_size@plt+0x1ef18>
   263e4:	mov	r3, #241	; 0xf1
   263e8:	add	r2, pc, r2
   263ec:	add	r1, pc, r1
   263f0:	mov	r0, #0
   263f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   263f8:	bl	6fb4 <__stack_chk_fail@plt>
   263fc:	andeq	r1, r7, r0, asr #18
   26400:	andeq	r0, r0, ip, lsr r4
   26404:	andeq	r3, r4, r4, lsr #7
   26408:	andeq	r5, r4, r8, ror #9
   2640c:	andeq	pc, r3, r4, lsr r9	; <UNPREDICTABLE>
   26410:	andeq	lr, r3, r4, lsr #24
   26414:	andeq	r5, r4, r0, ror #8
   26418:	ldrdeq	lr, [r3], -r4
   2641c:	andeq	r1, r5, r0, lsr #25
   26420:	ldrdeq	r5, [r4], -r8
   26424:	andeq	lr, r3, r4, lsl fp
   26428:	andeq	r3, r4, r4, lsr r2
   2642c:	andeq	lr, r3, ip, lsr #25
   26430:	andeq	pc, r3, r8, asr #15
   26434:	ldr	r3, [pc, #336]	; 2658c <blkid_probe_get_size@plt+0x1f074>
   26438:	ldr	r2, [pc, #336]	; 26590 <blkid_probe_get_size@plt+0x1f078>
   2643c:	add	r3, pc, r3
   26440:	push	{r4, r5, r6, fp, lr}
   26444:	add	fp, sp, #16
   26448:	sub	sp, sp, #20
   2644c:	ldr	r6, [r3, r2]
   26450:	cmp	r0, #0
   26454:	ldr	r3, [r6]
   26458:	str	r3, [fp, #-24]	; 0xffffffe8
   2645c:	beq	2653c <blkid_probe_get_size@plt+0x1f024>
   26460:	sub	r1, fp, #28
   26464:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   26468:	cmp	r0, #0
   2646c:	blt	264dc <blkid_probe_get_size@plt+0x1efc4>
   26470:	ldr	r5, [fp, #-28]	; 0xffffffe4
   26474:	cmp	r5, #0
   26478:	beq	26568 <blkid_probe_get_size@plt+0x1f050>
   2647c:	mov	r0, r5
   26480:	bl	723c <strlen@plt>
   26484:	add	r3, r0, #16
   26488:	cmp	r3, #4194304	; 0x400000
   2648c:	bhi	2650c <blkid_probe_get_size@plt+0x1eff4>
   26490:	ldr	r3, [pc, #252]	; 26594 <blkid_probe_get_size@plt+0x1f07c>
   26494:	add	r0, r0, #30
   26498:	add	r3, pc, r3
   2649c:	bic	ip, r0, #7
   264a0:	ldm	r3, {r0, r1, r2, r3}
   264a4:	sub	sp, sp, ip
   264a8:	add	r4, sp, #8
   264ac:	stm	r4, {r0, r1, r2, r3}
   264b0:	mov	r1, r5
   264b4:	add	r0, r4, #15
   264b8:	bl	6ae0 <stpcpy@plt>
   264bc:	mov	ip, r0
   264c0:	mov	r5, #0
   264c4:	mov	r0, r4
   264c8:	strb	r5, [ip]
   264cc:	bl	6e28 <unlink@plt>
   264d0:	cmp	r0, r5
   264d4:	blt	264f4 <blkid_probe_get_size@plt+0x1efdc>
   264d8:	mov	r0, r5
   264dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   264e0:	ldr	r3, [r6]
   264e4:	cmp	r2, r3
   264e8:	bne	26588 <blkid_probe_get_size@plt+0x1f070>
   264ec:	sub	sp, fp, #16
   264f0:	pop	{r4, r5, r6, fp, pc}
   264f4:	bl	732c <__errno_location@plt>
   264f8:	ldr	r0, [r0]
   264fc:	cmp	r0, #2
   26500:	rsbne	r0, r0, #0
   26504:	bne	264dc <blkid_probe_get_size@plt+0x1efc4>
   26508:	b	264d8 <blkid_probe_get_size@plt+0x1efc0>
   2650c:	ldr	r2, [pc, #132]	; 26598 <blkid_probe_get_size@plt+0x1f080>
   26510:	ldr	r1, [pc, #132]	; 2659c <blkid_probe_get_size@plt+0x1f084>
   26514:	add	r2, pc, r2
   26518:	add	r2, r2, #1760	; 0x6e0
   2651c:	add	r2, r2, #12
   26520:	str	r2, [sp]
   26524:	ldr	r2, [pc, #116]	; 265a0 <blkid_probe_get_size@plt+0x1f088>
   26528:	ldr	r3, [pc, #116]	; 265a4 <blkid_probe_get_size@plt+0x1f08c>
   2652c:	add	r2, pc, r2
   26530:	add	r1, pc, r1
   26534:	mov	r0, #0
   26538:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2653c:	ldr	r2, [pc, #100]	; 265a8 <blkid_probe_get_size@plt+0x1f090>
   26540:	ldr	r1, [pc, #100]	; 265ac <blkid_probe_get_size@plt+0x1f094>
   26544:	add	r2, pc, r2
   26548:	add	r2, r2, #1760	; 0x6e0
   2654c:	add	r2, r2, #12
   26550:	str	r2, [sp]
   26554:	ldr	r2, [pc, #84]	; 265b0 <blkid_probe_get_size@plt+0x1f098>
   26558:	ldr	r3, [pc, #84]	; 265b4 <blkid_probe_get_size@plt+0x1f09c>
   2655c:	add	r2, pc, r2
   26560:	add	r1, pc, r1
   26564:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26568:	ldr	r3, [pc, #72]	; 265b8 <blkid_probe_get_size@plt+0x1f0a0>
   2656c:	sub	sp, sp, #24
   26570:	add	r3, pc, r3
   26574:	add	r4, sp, #8
   26578:	ldm	r3, {r0, r1, r2, r3}
   2657c:	add	ip, r4, #15
   26580:	stm	r4, {r0, r1, r2, r3}
   26584:	b	264c0 <blkid_probe_get_size@plt+0x1efa8>
   26588:	bl	6fb4 <__stack_chk_fail@plt>
   2658c:	andeq	r1, r7, ip, lsr #14
   26590:	andeq	r0, r0, ip, lsr r4
   26594:	andeq	r5, r4, r8, ror #5
   26598:	strdeq	r3, [r4], -r4
   2659c:	andeq	lr, r3, r8, ror #22
   265a0:	andeq	r1, r4, r4, ror #4
   265a4:			; <UNDEFINED> instruction: 0x000003b5
   265a8:	andeq	r3, r4, r4, asr #1
   265ac:	andeq	r4, r4, r0, lsl #20
   265b0:	andeq	r1, r4, r4, lsr r2
   265b4:	andeq	r0, r0, pc, lsr #7
   265b8:	andeq	r5, r4, r0, lsl r2
   265bc:	ldr	r3, [pc, #1380]	; 26b28 <blkid_probe_get_size@plt+0x1f610>
   265c0:	ldr	r2, [pc, #1380]	; 26b2c <blkid_probe_get_size@plt+0x1f614>
   265c4:	add	r3, pc, r3
   265c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265cc:	add	fp, sp, #32
   265d0:	sub	sp, sp, #84	; 0x54
   265d4:	ldr	r6, [r3, r2]
   265d8:	mov	r1, #0
   265dc:	subs	r4, r0, #0
   265e0:	ldr	r3, [r6]
   265e4:	str	r1, [fp, #-64]	; 0xffffffc0
   265e8:	str	r1, [fp, #-68]	; 0xffffffbc
   265ec:	str	r3, [fp, #-40]	; 0xffffffd8
   265f0:	beq	268dc <blkid_probe_get_size@plt+0x1f3c4>
   265f4:	ldr	r0, [r4, #88]	; 0x58
   265f8:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   265fc:	cmp	r0, #0
   26600:	bne	2663c <blkid_probe_get_size@plt+0x1f124>
   26604:	ldr	r3, [r4, #120]	; 0x78
   26608:	cmp	r3, #0
   2660c:	bne	2663c <blkid_probe_get_size@plt+0x1f124>
   26610:	ldr	r0, [r4, #40]	; 0x28
   26614:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   26618:	cmp	r0, #0
   2661c:	bne	2663c <blkid_probe_get_size@plt+0x1f124>
   26620:	ldr	r0, [r4, #60]	; 0x3c
   26624:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   26628:	cmp	r0, #0
   2662c:	ldreq	r7, [r4, #4]
   26630:	mvneq	r7, r7
   26634:	lsreq	r7, r7, #31
   26638:	beq	26640 <blkid_probe_get_size@plt+0x1f128>
   2663c:	mov	r7, #1
   26640:	sub	r1, fp, #60	; 0x3c
   26644:	mov	r0, r4
   26648:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   2664c:	subs	r8, r0, #0
   26650:	blt	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   26654:	ldr	r8, [fp, #-60]	; 0xffffffc4
   26658:	cmp	r8, #0
   2665c:	beq	26960 <blkid_probe_get_size@plt+0x1f448>
   26660:	mov	r0, r8
   26664:	bl	723c <strlen@plt>
   26668:	add	r3, r0, #16
   2666c:	cmp	r3, #4194304	; 0x400000
   26670:	bhi	26934 <blkid_probe_get_size@plt+0x1f41c>
   26674:	ldr	r3, [pc, #1204]	; 26b30 <blkid_probe_get_size@plt+0x1f618>
   26678:	add	r0, r0, #30
   2667c:	add	r3, pc, r3
   26680:	bic	ip, r0, #7
   26684:	ldm	r3, {r0, r1, r2, r3}
   26688:	sub	sp, sp, ip
   2668c:	add	r5, sp, #40	; 0x28
   26690:	stm	r5, {r0, r1, r2, r3}
   26694:	mov	r1, r8
   26698:	add	r0, r5, #15
   2669c:	bl	6ae0 <stpcpy@plt>
   266a0:	mov	ip, r0
   266a4:	mov	r3, #0
   266a8:	cmp	r7, #0
   266ac:	strb	r3, [ip]
   266b0:	bne	26714 <blkid_probe_get_size@plt+0x1f1fc>
   266b4:	ldrd	r2, [r4, #136]	; 0x88
   266b8:	lsl	r2, r2, #12
   266bc:	bic	r3, r3, #4080	; 0xff0
   266c0:	bic	r3, r3, #15
   266c4:	orrs	r3, r3, r2, lsr #20
   266c8:	bne	26714 <blkid_probe_get_size@plt+0x1f1fc>
   266cc:	ldr	r8, [r4, #124]	; 0x7c
   266d0:	cmp	r8, #0
   266d4:	bne	26714 <blkid_probe_get_size@plt+0x1f1fc>
   266d8:	mov	r0, r5
   266dc:	bl	6e28 <unlink@plt>
   266e0:	cmp	r0, #0
   266e4:	blt	26a20 <blkid_probe_get_size@plt+0x1f508>
   266e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   266ec:	bl	69f0 <free@plt>
   266f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   266f4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   266f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   266fc:	ldr	r3, [r6]
   26700:	mov	r0, r8
   26704:	cmp	r2, r3
   26708:	bne	26b24 <blkid_probe_get_size@plt+0x1f60c>
   2670c:	sub	sp, fp, #32
   26710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26714:	ldr	r1, [pc, #1048]	; 26b34 <blkid_probe_get_size@plt+0x1f61c>
   26718:	mov	r0, r5
   2671c:	add	r1, pc, r1
   26720:	bl	49a2c <blkid_probe_get_size@plt+0x42514>
   26724:	subs	r8, r0, #0
   26728:	blt	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   2672c:	sub	r2, fp, #68	; 0x44
   26730:	sub	r1, fp, #64	; 0x40
   26734:	mov	r0, r5
   26738:	bl	400b0 <blkid_probe_get_size@plt+0x38b98>
   2673c:	subs	r8, r0, #0
   26740:	blt	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   26744:	ldrb	r3, [r4, #215]	; 0xd7
   26748:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2674c:	tst	r3, #4
   26750:	beq	26904 <blkid_probe_get_size@plt+0x1f3ec>
   26754:	bl	6f90 <fileno@plt>
   26758:	mov	r1, #932	; 0x3a4
   2675c:	bl	6f00 <fchmod@plt>
   26760:	cmp	r0, #0
   26764:	blt	26918 <blkid_probe_get_size@plt+0x1f400>
   26768:	cmp	r7, #0
   2676c:	beq	2682c <blkid_probe_get_size@plt+0x1f314>
   26770:	ldrd	r2, [r4, #136]	; 0x88
   26774:	lsl	r2, r2, #12
   26778:	bic	r3, r3, #4080	; 0xff0
   2677c:	bic	r3, r3, #15
   26780:	orrs	r3, r3, r2, lsr #20
   26784:	bne	26a50 <blkid_probe_get_size@plt+0x1f538>
   26788:	ldrd	r2, [r4, #192]	; 0xc0
   2678c:	orrs	r1, r2, r3
   26790:	bne	26a34 <blkid_probe_get_size@plt+0x1f51c>
   26794:	mov	r3, #0
   26798:	mvn	r2, #1
   2679c:	sub	sl, fp, #52	; 0x34
   267a0:	strd	r2, [fp, #-48]	; 0xffffffd0
   267a4:	ldr	r3, [pc, #908]	; 26b38 <blkid_probe_get_size@plt+0x1f620>
   267a8:	sub	r9, fp, #56	; 0x38
   267ac:	add	r3, pc, r3
   267b0:	sub	r8, fp, #48	; 0x30
   267b4:	str	r3, [fp, #-72]	; 0xffffffb8
   267b8:	b	267d8 <blkid_probe_get_size@plt+0x1f2c0>
   267bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   267c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   267c4:	str	r2, [sp]
   267c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   267cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   267d0:	mov	r1, #1
   267d4:	bl	6c0c <__fprintf_chk@plt>
   267d8:	mov	r3, sl
   267dc:	mov	r2, r9
   267e0:	mov	r1, r8
   267e4:	ldr	r0, [r4, #40]	; 0x28
   267e8:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   267ec:	cmp	r0, #0
   267f0:	bne	267bc <blkid_probe_get_size@plt+0x1f2a4>
   267f4:	mov	r0, r4
   267f8:	bl	3863c <blkid_probe_get_size@plt+0x31124>
   267fc:	subs	r3, r0, #0
   26800:	beq	2682c <blkid_probe_get_size@plt+0x1f314>
   26804:	ldr	r8, [pc, #816]	; 26b3c <blkid_probe_get_size@plt+0x1f624>
   26808:	add	r8, pc, r8
   2680c:	mov	r2, r8
   26810:	mov	r1, #1
   26814:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26818:	bl	6c0c <__fprintf_chk@plt>
   2681c:	mov	r0, r4
   26820:	bl	3857c <blkid_probe_get_size@plt+0x31064>
   26824:	subs	r3, r0, #0
   26828:	bne	2680c <blkid_probe_get_size@plt+0x1f2f4>
   2682c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26830:	bl	2d034 <blkid_probe_get_size@plt+0x25b1c>
   26834:	subs	r8, r0, #0
   26838:	bge	26980 <blkid_probe_get_size@plt+0x1f468>
   2683c:	mov	r0, r5
   26840:	bl	6e28 <unlink@plt>
   26844:	ldr	r0, [fp, #-68]	; 0xffffffbc
   26848:	bl	6e28 <unlink@plt>
   2684c:	ldr	r3, [pc, #748]	; 26b40 <blkid_probe_get_size@plt+0x1f628>
   26850:	mov	r2, #0
   26854:	add	r3, pc, r3
   26858:	str	r2, [fp, #-48]	; 0xffffffd0
   2685c:	ldr	r3, [r3]
   26860:	cmp	r3, #6
   26864:	bgt	26adc <blkid_probe_get_size@plt+0x1f5c4>
   26868:	mov	r1, r2
   2686c:	cmp	r7, #0
   26870:	beq	26928 <blkid_probe_get_size@plt+0x1f410>
   26874:	ldr	lr, [pc, #712]	; 26b44 <blkid_probe_get_size@plt+0x1f62c>
   26878:	add	lr, pc, lr
   2687c:	ldr	r0, [r4, #160]	; 0xa0
   26880:	ldr	r3, [pc, #704]	; 26b48 <blkid_probe_get_size@plt+0x1f630>
   26884:	str	r0, [sp, #32]
   26888:	add	r3, pc, r3
   2688c:	ldr	r0, [pc, #696]	; 26b4c <blkid_probe_get_size@plt+0x1f634>
   26890:	stmib	sp, {r1, r2}
   26894:	add	r3, r3, #1808	; 0x710
   26898:	ldr	r2, [pc, #688]	; 26b50 <blkid_probe_get_size@plt+0x1f638>
   2689c:	mov	ip, #0
   268a0:	add	r3, r3, #4
   268a4:	add	r0, pc, r0
   268a8:	mov	r1, r8
   268ac:	str	r3, [sp]
   268b0:	str	r0, [sp, #20]
   268b4:	str	r5, [sp, #28]
   268b8:	str	lr, [sp, #24]
   268bc:	str	ip, [sp, #16]
   268c0:	str	ip, [sp, #12]
   268c4:	ldr	r3, [pc, #648]	; 26b54 <blkid_probe_get_size@plt+0x1f63c>
   268c8:	add	r2, pc, r2
   268cc:	mov	r0, #7
   268d0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   268d4:	mov	r8, r0
   268d8:	b	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   268dc:	ldr	r2, [pc, #628]	; 26b58 <blkid_probe_get_size@plt+0x1f640>
   268e0:	ldr	r1, [pc, #628]	; 26b5c <blkid_probe_get_size@plt+0x1f644>
   268e4:	add	r2, pc, r2
   268e8:	add	r2, r2, #1792	; 0x700
   268ec:	str	r2, [sp]
   268f0:	ldr	r2, [pc, #616]	; 26b60 <blkid_probe_get_size@plt+0x1f648>
   268f4:	ldr	r3, [pc, #616]	; 26b64 <blkid_probe_get_size@plt+0x1f64c>
   268f8:	add	r2, pc, r2
   268fc:	add	r1, pc, r1
   26900:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26904:	bl	6f90 <fileno@plt>
   26908:	mov	r1, #420	; 0x1a4
   2690c:	bl	6f00 <fchmod@plt>
   26910:	cmp	r0, #0
   26914:	bge	26768 <blkid_probe_get_size@plt+0x1f250>
   26918:	bl	732c <__errno_location@plt>
   2691c:	ldr	r8, [r0]
   26920:	rsb	r8, r8, #0
   26924:	b	2683c <blkid_probe_get_size@plt+0x1f324>
   26928:	ldr	lr, [pc, #568]	; 26b68 <blkid_probe_get_size@plt+0x1f650>
   2692c:	add	lr, pc, lr
   26930:	b	2687c <blkid_probe_get_size@plt+0x1f364>
   26934:	ldr	r2, [pc, #560]	; 26b6c <blkid_probe_get_size@plt+0x1f654>
   26938:	ldr	r1, [pc, #560]	; 26b70 <blkid_probe_get_size@plt+0x1f658>
   2693c:	add	r2, pc, r2
   26940:	add	r2, r2, #1792	; 0x700
   26944:	str	r2, [sp]
   26948:	ldr	r2, [pc, #548]	; 26b74 <blkid_probe_get_size@plt+0x1f65c>
   2694c:	ldr	r3, [pc, #548]	; 26b78 <blkid_probe_get_size@plt+0x1f660>
   26950:	add	r2, pc, r2
   26954:	add	r1, pc, r1
   26958:	mov	r0, #0
   2695c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26960:	ldr	r3, [pc, #532]	; 26b7c <blkid_probe_get_size@plt+0x1f664>
   26964:	sub	sp, sp, #24
   26968:	add	r3, pc, r3
   2696c:	add	r5, sp, #40	; 0x28
   26970:	ldm	r3, {r0, r1, r2, r3}
   26974:	add	ip, r5, #15
   26978:	stm	r5, {r0, r1, r2, r3}
   2697c:	b	266a4 <blkid_probe_get_size@plt+0x1f18c>
   26980:	mov	r1, r5
   26984:	ldr	r0, [fp, #-68]	; 0xffffffbc
   26988:	bl	7494 <rename@plt>
   2698c:	cmp	r0, #0
   26990:	blt	26918 <blkid_probe_get_size@plt+0x1f400>
   26994:	ldr	r3, [pc, #484]	; 26b80 <blkid_probe_get_size@plt+0x1f668>
   26998:	mov	r2, #0
   2699c:	add	r3, pc, r3
   269a0:	str	r2, [fp, #-48]	; 0xffffffd0
   269a4:	ldr	r3, [r3]
   269a8:	cmp	r3, #6
   269ac:	bgt	26b00 <blkid_probe_get_size@plt+0x1f5e8>
   269b0:	mov	ip, r2
   269b4:	cmp	r7, #0
   269b8:	bne	26ad0 <blkid_probe_get_size@plt+0x1f5b8>
   269bc:	ldr	lr, [pc, #448]	; 26b84 <blkid_probe_get_size@plt+0x1f66c>
   269c0:	add	lr, pc, lr
   269c4:	ldr	r3, [pc, #444]	; 26b88 <blkid_probe_get_size@plt+0x1f670>
   269c8:	ldr	r1, [r4, #160]	; 0xa0
   269cc:	add	r3, pc, r3
   269d0:	add	r3, r3, #1808	; 0x710
   269d4:	ldr	r0, [pc, #432]	; 26b8c <blkid_probe_get_size@plt+0x1f674>
   269d8:	add	r3, r3, #4
   269dc:	str	r2, [sp, #8]
   269e0:	ldr	r2, [pc, #424]	; 26b90 <blkid_probe_get_size@plt+0x1f678>
   269e4:	str	r1, [sp, #32]
   269e8:	add	r0, pc, r0
   269ec:	mov	r1, #0
   269f0:	stm	sp, {r3, ip}
   269f4:	str	r0, [sp, #20]
   269f8:	str	r5, [sp, #28]
   269fc:	str	lr, [sp, #24]
   26a00:	str	r1, [sp, #16]
   26a04:	str	r1, [sp, #12]
   26a08:	ldr	r3, [pc, #388]	; 26b94 <blkid_probe_get_size@plt+0x1f67c>
   26a0c:	add	r2, pc, r2
   26a10:	mov	r0, #7
   26a14:	mov	r8, r1
   26a18:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   26a1c:	b	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   26a20:	bl	732c <__errno_location@plt>
   26a24:	ldr	r3, [r0]
   26a28:	cmp	r3, #2
   26a2c:	rsbne	r8, r3, #0
   26a30:	b	266e8 <blkid_probe_get_size@plt+0x1f1d0>
   26a34:	strd	r2, [sp]
   26a38:	ldr	r2, [pc, #344]	; 26b98 <blkid_probe_get_size@plt+0x1f680>
   26a3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26a40:	add	r2, pc, r2
   26a44:	mov	r1, #1
   26a48:	bl	6c0c <__fprintf_chk@plt>
   26a4c:	b	26794 <blkid_probe_get_size@plt+0x1f27c>
   26a50:	mov	r0, r4
   26a54:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   26a58:	cmp	r0, #0
   26a5c:	beq	26a8c <blkid_probe_get_size@plt+0x1f574>
   26a60:	ldr	r8, [pc, #308]	; 26b9c <blkid_probe_get_size@plt+0x1f684>
   26a64:	add	r8, pc, r8
   26a68:	add	r3, r0, #5
   26a6c:	mov	r2, r8
   26a70:	mov	r1, #1
   26a74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26a78:	bl	6c0c <__fprintf_chk@plt>
   26a7c:	mov	r0, r4
   26a80:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   26a84:	cmp	r0, #0
   26a88:	bne	26a68 <blkid_probe_get_size@plt+0x1f550>
   26a8c:	ldr	r3, [r4, #120]	; 0x78
   26a90:	cmp	r3, #0
   26a94:	beq	26aac <blkid_probe_get_size@plt+0x1f594>
   26a98:	ldr	r2, [pc, #256]	; 26ba0 <blkid_probe_get_size@plt+0x1f688>
   26a9c:	mov	r1, #1
   26aa0:	add	r2, pc, r2
   26aa4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26aa8:	bl	6c0c <__fprintf_chk@plt>
   26aac:	ldr	r3, [r4, #4]
   26ab0:	cmp	r3, #0
   26ab4:	blt	26788 <blkid_probe_get_size@plt+0x1f270>
   26ab8:	ldr	r2, [pc, #228]	; 26ba4 <blkid_probe_get_size@plt+0x1f68c>
   26abc:	mov	r1, #1
   26ac0:	add	r2, pc, r2
   26ac4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26ac8:	bl	6c0c <__fprintf_chk@plt>
   26acc:	b	26788 <blkid_probe_get_size@plt+0x1f270>
   26ad0:	ldr	lr, [pc, #208]	; 26ba8 <blkid_probe_get_size@plt+0x1f690>
   26ad4:	add	lr, pc, lr
   26ad8:	b	269c4 <blkid_probe_get_size@plt+0x1f4ac>
   26adc:	sub	r1, fp, #48	; 0x30
   26ae0:	mov	r0, r4
   26ae4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   26ae8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26aec:	cmp	r2, #0
   26af0:	beq	26868 <blkid_probe_get_size@plt+0x1f350>
   26af4:	ldr	r1, [pc, #176]	; 26bac <blkid_probe_get_size@plt+0x1f694>
   26af8:	add	r1, pc, r1
   26afc:	b	2686c <blkid_probe_get_size@plt+0x1f354>
   26b00:	sub	r1, fp, #48	; 0x30
   26b04:	mov	r0, r4
   26b08:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   26b0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26b10:	cmp	r2, #0
   26b14:	beq	269b0 <blkid_probe_get_size@plt+0x1f498>
   26b18:	ldr	ip, [pc, #144]	; 26bb0 <blkid_probe_get_size@plt+0x1f698>
   26b1c:	add	ip, pc, ip
   26b20:	b	269b4 <blkid_probe_get_size@plt+0x1f49c>
   26b24:	bl	6fb4 <__stack_chk_fail@plt>
   26b28:	andeq	r1, r7, r4, lsr #11
   26b2c:	andeq	r0, r0, ip, lsr r4
   26b30:	andeq	r5, r4, r4, lsl #2
   26b34:	andeq	r2, r1, r0, asr r8
   26b38:	andeq	r5, r4, ip
   26b3c:			; <UNDEFINED> instruction: 0x00044fbc
   26b40:	andeq	r1, r7, r8, ror #17
   26b44:	muleq	r4, r4, fp
   26b48:	andeq	r2, r4, r0, lsl #27
   26b4c:	andeq	r4, r4, r4, asr pc
   26b50:	andeq	r0, r4, r8, asr #29
   26b54:	andeq	r0, r0, r7, lsr #7
   26b58:	andeq	r2, r4, r4, lsr #26
   26b5c:	andeq	r4, r4, r4, ror #12
   26b60:	muleq	r4, r8, lr
   26b64:	andeq	r0, r0, fp, asr #6
   26b68:	andeq	r4, r4, r4, ror #28
   26b6c:	andeq	r2, r4, ip, asr #25
   26b70:	andeq	lr, r3, r4, asr #14
   26b74:	andeq	r0, r4, r0, asr #28
   26b78:	andeq	r0, r0, r3, asr r3
   26b7c:	andeq	r4, r4, r8, lsl lr
   26b80:	andeq	r1, r7, r0, lsr #15
   26b84:	ldrdeq	r4, [r4], -r0
   26b88:	andeq	r2, r4, ip, lsr ip
   26b8c:	andeq	r4, r4, r4, ror #27
   26b90:	andeq	r0, r4, r4, lsl #27
   26b94:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   26b98:	andeq	r4, r4, r0, ror sp
   26b9c:	andeq	r4, r4, r4, lsr sp
   26ba0:	andeq	r4, r4, r0, lsl #26
   26ba4:	andeq	r4, r4, r8, ror #25
   26ba8:	andeq	r2, r4, r8, lsr r9
   26bac:	andeq	lr, r3, r0, asr #8
   26bb0:	andeq	lr, r3, ip, lsl r4
   26bb4:	cmp	r1, #0
   26bb8:	moveq	r3, #0
   26bbc:	andne	r3, r2, #1
   26bc0:	cmp	r3, #0
   26bc4:	push	{r4, r5, r6, r7, r8, lr}
   26bc8:	mov	r6, r2
   26bcc:	mov	r4, #0
   26bd0:	mov	r5, r0
   26bd4:	bne	26c28 <blkid_probe_get_size@plt+0x1f710>
   26bd8:	mov	r0, r5
   26bdc:	bl	3863c <blkid_probe_get_size@plt+0x31124>
   26be0:	subs	r1, r0, #0
   26be4:	beq	26c20 <blkid_probe_get_size@plt+0x1f708>
   26be8:	mov	r2, r6
   26bec:	mov	r0, r5
   26bf0:	bl	1cd5c <blkid_probe_get_size@plt+0x15844>
   26bf4:	mov	r2, r0
   26bf8:	mov	r0, r5
   26bfc:	lsr	r3, r2, #31
   26c00:	cmp	r4, #0
   26c04:	movlt	r3, #0
   26c08:	andge	r3, r3, #1
   26c0c:	cmp	r3, #0
   26c10:	movne	r4, r2
   26c14:	bl	3857c <blkid_probe_get_size@plt+0x31064>
   26c18:	subs	r1, r0, #0
   26c1c:	bne	26be8 <blkid_probe_get_size@plt+0x1f6d0>
   26c20:	mov	r0, r4
   26c24:	pop	{r4, r5, r6, r7, r8, pc}
   26c28:	mov	r0, r1
   26c2c:	mov	r8, r1
   26c30:	bl	3863c <blkid_probe_get_size@plt+0x31124>
   26c34:	subs	r7, r0, #0
   26c38:	bne	26c50 <blkid_probe_get_size@plt+0x1f738>
   26c3c:	b	26bd8 <blkid_probe_get_size@plt+0x1f6c0>
   26c40:	mov	r0, r8
   26c44:	bl	3857c <blkid_probe_get_size@plt+0x31064>
   26c48:	subs	r7, r0, #0
   26c4c:	beq	26bd8 <blkid_probe_get_size@plt+0x1f6c0>
   26c50:	mov	r1, r7
   26c54:	mov	r0, r5
   26c58:	bl	38330 <blkid_probe_get_size@plt+0x30e18>
   26c5c:	subs	r2, r0, #0
   26c60:	bne	26c40 <blkid_probe_get_size@plt+0x1f728>
   26c64:	mov	r1, r7
   26c68:	mov	r0, r8
   26c6c:	bl	1cd5c <blkid_probe_get_size@plt+0x15844>
   26c70:	lsr	r3, r0, #31
   26c74:	cmp	r4, #0
   26c78:	movlt	r3, #0
   26c7c:	andge	r3, r3, #1
   26c80:	cmp	r3, #0
   26c84:	movne	r4, r0
   26c88:	b	26c40 <blkid_probe_get_size@plt+0x1f728>
   26c8c:	push	{r4, r5, lr}
   26c90:	subs	r5, r0, #0
   26c94:	sub	sp, sp, #12
   26c98:	beq	26cc0 <blkid_probe_get_size@plt+0x1f7a8>
   26c9c:	mov	r4, r1
   26ca0:	mov	r1, #0
   26ca4:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   26ca8:	cmp	r0, #0
   26cac:	movge	r0, #0
   26cb0:	ldrge	r3, [r5, #120]	; 0x78
   26cb4:	strge	r3, [r4]
   26cb8:	add	sp, sp, #12
   26cbc:	pop	{r4, r5, pc}
   26cc0:	ldr	r2, [pc, #36]	; 26cec <blkid_probe_get_size@plt+0x1f7d4>
   26cc4:	ldr	r1, [pc, #36]	; 26cf0 <blkid_probe_get_size@plt+0x1f7d8>
   26cc8:	add	r2, pc, r2
   26ccc:	add	r2, r2, #1840	; 0x730
   26cd0:	add	r2, r2, #8
   26cd4:	str	r2, [sp]
   26cd8:	ldr	r2, [pc, #20]	; 26cf4 <blkid_probe_get_size@plt+0x1f7dc>
   26cdc:	ldr	r3, [pc, #20]	; 26cf8 <blkid_probe_get_size@plt+0x1f7e0>
   26ce0:	add	r2, pc, r2
   26ce4:	add	r1, pc, r1
   26ce8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26cec:	andeq	r2, r4, r0, asr #18
   26cf0:	andeq	r4, r4, ip, ror r2
   26cf4:			; <UNDEFINED> instruction: 0x00040ab0
   26cf8:	andeq	r0, r0, lr, lsl r2
   26cfc:	subs	r2, r0, #0
   26d00:	beq	26d14 <blkid_probe_get_size@plt+0x1f7fc>
   26d04:	ldrb	r3, [r2, #215]	; 0xd7
   26d08:	orr	r3, r3, #1
   26d0c:	strb	r3, [r2, #215]	; 0xd7
   26d10:	bx	lr
   26d14:	ldr	r2, [pc, #44]	; 26d48 <blkid_probe_get_size@plt+0x1f830>
   26d18:	push	{lr}		; (str lr, [sp, #-4]!)
   26d1c:	add	r2, pc, r2
   26d20:	sub	sp, sp, #12
   26d24:	add	r2, r2, #1872	; 0x750
   26d28:	add	r2, r2, #4
   26d2c:	str	r2, [sp]
   26d30:	ldr	r1, [pc, #20]	; 26d4c <blkid_probe_get_size@plt+0x1f834>
   26d34:	ldr	r2, [pc, #20]	; 26d50 <blkid_probe_get_size@plt+0x1f838>
   26d38:	mov	r3, #57	; 0x39
   26d3c:	add	r2, pc, r2
   26d40:	add	r1, pc, r1
   26d44:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   26d48:	andeq	r2, r4, ip, ror #17
   26d4c:	andeq	r4, r4, r0, lsr #4
   26d50:	andeq	r0, r4, r4, asr sl
   26d54:	ldr	r3, [pc, #3616]	; 27b7c <blkid_probe_get_size@plt+0x20664>
   26d58:	ldr	r2, [pc, #3616]	; 27b80 <blkid_probe_get_size@plt+0x20668>
   26d5c:	add	r3, pc, r3
   26d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d64:	sub	sp, sp, #8448	; 0x2100
   26d68:	ldr	r6, [r3, r2]
   26d6c:	sub	sp, sp, #60	; 0x3c
   26d70:	add	r3, sp, #8448	; 0x2100
   26d74:	ldr	r2, [r6]
   26d78:	add	r3, r3, #52	; 0x34
   26d7c:	add	r4, sp, #312	; 0x138
   26d80:	str	r2, [r3]
   26d84:	mov	r7, r0
   26d88:	mov	r2, #128	; 0x80
   26d8c:	add	r0, sp, #180	; 0xb4
   26d90:	add	r8, sp, #120	; 0x78
   26d94:	mov	ip, #0
   26d98:	sub	r3, r8, #8
   26d9c:	str	r0, [r4, #-184]	; 0xffffff48
   26da0:	str	r2, [r4, #-180]	; 0xffffff4c
   26da4:	mov	r0, #1
   26da8:	add	r2, sp, #156	; 0x9c
   26dac:	mov	lr, #8192	; 0x2000
   26db0:	str	r3, [r4, #-176]	; 0xffffff50
   26db4:	str	r0, [r4, #-172]	; 0xffffff54
   26db8:	mov	r3, #24
   26dbc:	str	r2, [r4, #-168]	; 0xffffff58
   26dc0:	mov	r9, r1
   26dc4:	ldr	r0, [r7, #4]
   26dc8:	add	r1, sp, #128	; 0x80
   26dcc:	sub	sl, r4, #4
   26dd0:	mov	r2, ip
   26dd4:	str	ip, [r4, #-160]	; 0xffffff60
   26dd8:	str	lr, [r4, #-196]	; 0xffffff3c
   26ddc:	str	r3, [r4, #-164]	; 0xffffff5c
   26de0:	str	sl, [r4, #-200]	; 0xffffff38
   26de4:	bl	6df8 <recvmsg@plt>
   26de8:	subs	fp, r0, #0
   26dec:	blt	26ee0 <blkid_probe_get_size@plt+0x1f9c8>
   26df0:	cmp	fp, #31
   26df4:	bgt	26e6c <blkid_probe_get_size@plt+0x1f954>
   26df8:	ldr	r3, [pc, #3460]	; 27b84 <blkid_probe_get_size@plt+0x2066c>
   26dfc:	add	r3, pc, r3
   26e00:	ldr	r3, [r3]
   26e04:	cmp	r3, #6
   26e08:	ble	27094 <blkid_probe_get_size@plt+0x1fb7c>
   26e0c:	ldr	r2, [pc, #3444]	; 27b88 <blkid_probe_get_size@plt+0x20670>
   26e10:	ldr	r3, [pc, #3444]	; 27b8c <blkid_probe_get_size@plt+0x20674>
   26e14:	add	r2, pc, r2
   26e18:	str	r2, [sp, #4]
   26e1c:	add	r3, pc, r3
   26e20:	ldr	r2, [pc, #3432]	; 27b90 <blkid_probe_get_size@plt+0x20678>
   26e24:	add	r3, r3, #1904	; 0x770
   26e28:	str	r3, [sp]
   26e2c:	add	r2, pc, r2
   26e30:	mov	r3, #392	; 0x188
   26e34:	mov	r1, #1073741846	; 0x40000016
   26e38:	mov	r0, #7
   26e3c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   26e40:	mov	r5, r0
   26e44:	add	r3, sp, #8448	; 0x2100
   26e48:	add	r3, r3, #52	; 0x34
   26e4c:	ldr	r2, [r3]
   26e50:	ldr	r3, [r6]
   26e54:	mov	r0, r5
   26e58:	cmp	r2, r3
   26e5c:	bne	273e0 <blkid_probe_get_size@plt+0x1fec8>
   26e60:	add	sp, sp, #8448	; 0x2100
   26e64:	add	sp, sp, #60	; 0x3c
   26e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e6c:	ldr	r5, [r4, #-160]	; 0xffffff60
   26e70:	ands	r5, r5, #32
   26e74:	bne	26df8 <blkid_probe_get_size@plt+0x1f8e0>
   26e78:	ldr	r3, [r4, #-124]	; 0xffffff84
   26e7c:	cmp	r3, #0
   26e80:	bne	26f48 <blkid_probe_get_size@plt+0x1fa30>
   26e84:	ldr	r3, [r7, #140]	; 0x8c
   26e88:	cmp	r3, #0
   26e8c:	bne	27024 <blkid_probe_get_size@plt+0x1fb0c>
   26e90:	ldr	r3, [pc, #3324]	; 27b94 <blkid_probe_get_size@plt+0x2067c>
   26e94:	add	r3, pc, r3
   26e98:	ldr	r3, [r3]
   26e9c:	cmp	r3, #6
   26ea0:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   26ea4:	ldr	r2, [pc, #3308]	; 27b98 <blkid_probe_get_size@plt+0x20680>
   26ea8:	ldr	r3, [pc, #3308]	; 27b9c <blkid_probe_get_size@plt+0x20684>
   26eac:	add	r2, pc, r2
   26eb0:	str	r2, [sp, #4]
   26eb4:	add	r3, pc, r3
   26eb8:	ldr	r2, [pc, #3296]	; 27ba0 <blkid_probe_get_size@plt+0x20688>
   26ebc:	add	r3, r3, #1904	; 0x770
   26ec0:	str	r3, [sp]
   26ec4:	add	r2, pc, r2
   26ec8:	ldr	r3, [pc, #3284]	; 27ba4 <blkid_probe_get_size@plt+0x2068c>
   26ecc:	mov	r1, #1073741835	; 0x4000000b
   26ed0:	mov	r0, #7
   26ed4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   26ed8:	mov	r5, r0
   26edc:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   26ee0:	bl	732c <__errno_location@plt>
   26ee4:	ldr	r1, [r0]
   26ee8:	mov	r4, r0
   26eec:	cmp	r1, #4
   26ef0:	beq	26f08 <blkid_probe_get_size@plt+0x1f9f0>
   26ef4:	ldr	r3, [pc, #3244]	; 27ba8 <blkid_probe_get_size@plt+0x20690>
   26ef8:	add	r3, pc, r3
   26efc:	ldr	r3, [r3]
   26f00:	cmp	r3, #6
   26f04:	bgt	26f10 <blkid_probe_get_size@plt+0x1f9f8>
   26f08:	rsb	r5, r1, #0
   26f0c:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   26f10:	ldr	r2, [pc, #3220]	; 27bac <blkid_probe_get_size@plt+0x20694>
   26f14:	ldr	r3, [pc, #3220]	; 27bb0 <blkid_probe_get_size@plt+0x20698>
   26f18:	add	r2, pc, r2
   26f1c:	str	r2, [sp, #4]
   26f20:	add	r3, pc, r3
   26f24:	ldr	r2, [pc, #3208]	; 27bb4 <blkid_probe_get_size@plt+0x2069c>
   26f28:	add	r3, r3, #1904	; 0x770
   26f2c:	str	r3, [sp]
   26f30:	add	r2, pc, r2
   26f34:	ldr	r3, [pc, #3196]	; 27bb8 <blkid_probe_get_size@plt+0x206a0>
   26f38:	mov	r0, #7
   26f3c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   26f40:	ldr	r1, [r4]
   26f44:	b	26f08 <blkid_probe_get_size@plt+0x1f9f0>
   26f48:	cmp	r3, #1
   26f4c:	beq	27034 <blkid_probe_get_size@plt+0x1fb1c>
   26f50:	ldr	r3, [r4, #-164]	; 0xffffff5c
   26f54:	cmp	r3, #11
   26f58:	bls	26fd4 <blkid_probe_get_size@plt+0x1fabc>
   26f5c:	ldr	r3, [r4, #-168]	; 0xffffff58
   26f60:	cmp	r3, #0
   26f64:	beq	26fd4 <blkid_probe_get_size@plt+0x1fabc>
   26f68:	ldr	r2, [r3, #8]
   26f6c:	cmp	r2, #2
   26f70:	bne	26fd4 <blkid_probe_get_size@plt+0x1fabc>
   26f74:	ldr	r2, [r3, #16]
   26f78:	cmp	r2, #0
   26f7c:	beq	270a4 <blkid_probe_get_size@plt+0x1fb8c>
   26f80:	ldr	r3, [pc, #3124]	; 27bbc <blkid_probe_get_size@plt+0x206a4>
   26f84:	add	r3, pc, r3
   26f88:	ldr	r3, [r3]
   26f8c:	cmp	r3, #6
   26f90:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   26f94:	ldr	r3, [pc, #3108]	; 27bc0 <blkid_probe_get_size@plt+0x206a8>
   26f98:	ldr	r1, [pc, #3108]	; 27bc4 <blkid_probe_get_size@plt+0x206ac>
   26f9c:	str	r2, [sp, #8]
   26fa0:	add	r3, pc, r3
   26fa4:	ldr	r2, [pc, #3100]	; 27bc8 <blkid_probe_get_size@plt+0x206b0>
   26fa8:	add	r1, pc, r1
   26fac:	add	r3, r3, #1904	; 0x770
   26fb0:	str	r3, [sp]
   26fb4:	str	r1, [sp, #4]
   26fb8:	ldr	r3, [pc, #3084]	; 27bcc <blkid_probe_get_size@plt+0x206b4>
   26fbc:	add	r2, pc, r2
   26fc0:	mov	r1, #1073741835	; 0x4000000b
   26fc4:	mov	r0, #7
   26fc8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   26fcc:	mov	r5, r0
   26fd0:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   26fd4:	ldr	r3, [pc, #3060]	; 27bd0 <blkid_probe_get_size@plt+0x206b8>
   26fd8:	add	r3, pc, r3
   26fdc:	ldr	r3, [r3]
   26fe0:	cmp	r3, #6
   26fe4:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   26fe8:	ldr	r2, [pc, #3044]	; 27bd4 <blkid_probe_get_size@plt+0x206bc>
   26fec:	ldr	r3, [pc, #3044]	; 27bd8 <blkid_probe_get_size@plt+0x206c0>
   26ff0:	add	r2, pc, r2
   26ff4:	str	r2, [sp, #4]
   26ff8:	add	r3, pc, r3
   26ffc:	ldr	r2, [pc, #3032]	; 27bdc <blkid_probe_get_size@plt+0x206c4>
   27000:	add	r3, r3, #1904	; 0x770
   27004:	str	r3, [sp]
   27008:	add	r2, pc, r2
   2700c:	ldr	r3, [pc, #3020]	; 27be0 <blkid_probe_get_size@plt+0x206c8>
   27010:	mov	r1, #1073741835	; 0x4000000b
   27014:	mov	r0, #7
   27018:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2701c:	mov	r5, r0
   27020:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27024:	ldr	r2, [r4, #-128]	; 0xffffff80
   27028:	cmp	r3, r2
   2702c:	bne	26e90 <blkid_probe_get_size@plt+0x1f978>
   27030:	b	26f50 <blkid_probe_get_size@plt+0x1fa38>
   27034:	ldr	r2, [r4, #-128]	; 0xffffff80
   27038:	cmp	r2, #0
   2703c:	beq	26f50 <blkid_probe_get_size@plt+0x1fa38>
   27040:	ldr	r3, [pc, #2972]	; 27be4 <blkid_probe_get_size@plt+0x206cc>
   27044:	add	r3, pc, r3
   27048:	ldr	r3, [r3]
   2704c:	cmp	r3, #6
   27050:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   27054:	ldr	r3, [pc, #2956]	; 27be8 <blkid_probe_get_size@plt+0x206d0>
   27058:	ldr	r1, [pc, #2956]	; 27bec <blkid_probe_get_size@plt+0x206d4>
   2705c:	str	r2, [sp, #8]
   27060:	add	r3, pc, r3
   27064:	ldr	r2, [pc, #2948]	; 27bf0 <blkid_probe_get_size@plt+0x206d8>
   27068:	add	r1, pc, r1
   2706c:	add	r3, r3, #1904	; 0x770
   27070:	str	r3, [sp]
   27074:	str	r1, [sp, #4]
   27078:	mov	r3, #404	; 0x194
   2707c:	add	r2, pc, r2
   27080:	mov	r1, #1073741835	; 0x4000000b
   27084:	mov	r0, #7
   27088:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2708c:	mov	r5, r0
   27090:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27094:	mvn	r5, #21
   27098:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   2709c:	mvn	r5, #10
   270a0:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   270a4:	ldr	r1, [pc, #2888]	; 27bf4 <blkid_probe_get_size@plt+0x206dc>
   270a8:	mov	r0, sl
   270ac:	add	r1, pc, r1
   270b0:	bl	7314 <strcmp@plt>
   270b4:	cmp	r0, #0
   270b8:	bne	27124 <blkid_probe_get_size@plt+0x1fc0c>
   270bc:	ldr	r2, [r4, #4]
   270c0:	ldr	r1, [pc, #2864]	; 27bf8 <blkid_probe_get_size@plt+0x206e0>
   270c4:	cmp	r2, r1
   270c8:	beq	27378 <blkid_probe_get_size@plt+0x1fe60>
   270cc:	ldr	r3, [pc, #2856]	; 27bfc <blkid_probe_get_size@plt+0x206e4>
   270d0:	add	r3, pc, r3
   270d4:	ldr	r3, [r3]
   270d8:	cmp	r3, #6
   270dc:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   270e0:	ldr	r3, [pc, #2840]	; 27c00 <blkid_probe_get_size@plt+0x206e8>
   270e4:	ldr	r0, [pc, #2840]	; 27c04 <blkid_probe_get_size@plt+0x206ec>
   270e8:	str	r2, [sp, #8]
   270ec:	add	r3, pc, r3
   270f0:	ldr	r2, [pc, #2832]	; 27c08 <blkid_probe_get_size@plt+0x206f0>
   270f4:	add	r0, pc, r0
   270f8:	add	r3, r3, #1904	; 0x770
   270fc:	str	r1, [sp, #12]
   27100:	str	r3, [sp]
   27104:	str	r0, [sp, #4]
   27108:	ldr	r3, [pc, #2812]	; 27c0c <blkid_probe_get_size@plt+0x206f4>
   2710c:	add	r2, pc, r2
   27110:	mov	r1, #1073741835	; 0x4000000b
   27114:	mov	r0, #7
   27118:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2711c:	mov	r5, r0
   27120:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27124:	mov	r0, sl
   27128:	bl	723c <strlen@plt>
   2712c:	add	r2, r0, #1
   27130:	cmp	fp, r2
   27134:	movgt	r3, #0
   27138:	movle	r3, #1
   2713c:	cmp	r2, #4
   27140:	orrls	r3, r3, #1
   27144:	cmp	r3, #0
   27148:	str	r2, [sp, #48]	; 0x30
   2714c:	str	r3, [sp, #44]	; 0x2c
   27150:	beq	271a4 <blkid_probe_get_size@plt+0x1fc8c>
   27154:	ldr	r3, [pc, #2740]	; 27c10 <blkid_probe_get_size@plt+0x206f8>
   27158:	add	r3, pc, r3
   2715c:	ldr	r3, [r3]
   27160:	cmp	r3, #6
   27164:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   27168:	ldr	r2, [pc, #2724]	; 27c14 <blkid_probe_get_size@plt+0x206fc>
   2716c:	ldr	r3, [pc, #2724]	; 27c18 <blkid_probe_get_size@plt+0x20700>
   27170:	add	r2, pc, r2
   27174:	str	r2, [sp, #4]
   27178:	add	r3, pc, r3
   2717c:	ldr	r2, [pc, #2712]	; 27c1c <blkid_probe_get_size@plt+0x20704>
   27180:	add	r3, r3, #1904	; 0x770
   27184:	str	r3, [sp]
   27188:	add	r2, pc, r2
   2718c:	ldr	r3, [pc, #2700]	; 27c20 <blkid_probe_get_size@plt+0x20708>
   27190:	mov	r1, #1073741835	; 0x4000000b
   27194:	mov	r0, #7
   27198:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2719c:	mov	r5, r0
   271a0:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   271a4:	ldr	r1, [pc, #2680]	; 27c24 <blkid_probe_get_size@plt+0x2070c>
   271a8:	mov	r0, sl
   271ac:	add	r1, pc, r1
   271b0:	bl	7050 <strstr@plt>
   271b4:	cmp	r0, #0
   271b8:	beq	273f4 <blkid_probe_get_size@plt+0x1fedc>
   271bc:	ldr	r3, [sp, #48]	; 0x30
   271c0:	subs	r3, fp, r3
   271c4:	mov	fp, #0
   271c8:	str	r3, [sp, #60]	; 0x3c
   271cc:	str	fp, [r4, #-208]	; 0xffffff30
   271d0:	beq	27718 <blkid_probe_get_size@plt+0x20200>
   271d4:	sub	r3, r8, #16
   271d8:	mov	r0, r3
   271dc:	str	r3, [sp, #76]	; 0x4c
   271e0:	bl	2552c <blkid_probe_get_size@plt+0x1e014>
   271e4:	subs	r1, r0, #0
   271e8:	blt	27314 <blkid_probe_get_size@plt+0x1fdfc>
   271ec:	ldr	r3, [pc, #2612]	; 27c28 <blkid_probe_get_size@plt+0x20710>
   271f0:	str	r6, [sp, #32]
   271f4:	add	r3, pc, r3
   271f8:	add	r3, r3, #1264	; 0x4f0
   271fc:	mov	r6, fp
   27200:	add	r3, r3, #12
   27204:	mvn	r2, #0
   27208:	str	fp, [sp, #64]	; 0x40
   2720c:	str	r3, [sp, #80]	; 0x50
   27210:	str	fp, [sp, #68]	; 0x44
   27214:	str	fp, [sp, #56]	; 0x38
   27218:	str	fp, [sp, #52]	; 0x34
   2721c:	str	r2, [sp, #72]	; 0x48
   27220:	str	r5, [sp, #84]	; 0x54
   27224:	ldr	r3, [sp, #48]	; 0x30
   27228:	mov	r1, #0
   2722c:	add	r5, r3, r6
   27230:	ldr	r3, [sp, #60]	; 0x3c
   27234:	add	r5, sl, r5
   27238:	sub	r2, r3, r6
   2723c:	mov	r0, r5
   27240:	bl	7350 <memchr@plt>
   27244:	ldr	r3, [r4, #-208]	; 0xffffff30
   27248:	str	r3, [sp, #40]	; 0x28
   2724c:	subs	r3, r0, #0
   27250:	str	r3, [sp, #36]	; 0x24
   27254:	beq	27908 <blkid_probe_get_size@plt+0x203f0>
   27258:	ldr	r1, [sp, #40]	; 0x28
   2725c:	mov	r2, #0
   27260:	mov	r3, #0
   27264:	cmp	r1, #0
   27268:	strd	r2, [r8]
   2726c:	beq	27814 <blkid_probe_get_size@plt+0x202fc>
   27270:	mov	r1, #61	; 0x3d
   27274:	mov	r0, r5
   27278:	bl	74c4 <strchr@plt>
   2727c:	cmp	r0, #0
   27280:	beq	27a90 <blkid_probe_get_size@plt+0x20578>
   27284:	mov	fp, r0
   27288:	ldr	r1, [pc, #2460]	; 27c2c <blkid_probe_get_size@plt+0x20714>
   2728c:	mov	r3, #0
   27290:	strb	r3, [fp], #1
   27294:	add	r1, pc, r1
   27298:	mov	r0, r5
   2729c:	bl	7314 <strcmp@plt>
   272a0:	cmp	r0, #0
   272a4:	beq	27580 <blkid_probe_get_size@plt+0x20068>
   272a8:	ldr	r1, [pc, #2432]	; 27c30 <blkid_probe_get_size@plt+0x20718>
   272ac:	mov	r0, r5
   272b0:	add	r1, pc, r1
   272b4:	bl	7314 <strcmp@plt>
   272b8:	cmp	r0, #0
   272bc:	beq	27884 <blkid_probe_get_size@plt+0x2036c>
   272c0:	ldr	r1, [pc, #2412]	; 27c34 <blkid_probe_get_size@plt+0x2071c>
   272c4:	mov	r0, r5
   272c8:	add	r1, pc, r1
   272cc:	bl	7314 <strcmp@plt>
   272d0:	cmp	r0, #0
   272d4:	bne	27840 <blkid_probe_get_size@plt+0x20328>
   272d8:	mov	r2, fp
   272dc:	mov	r1, #8
   272e0:	ldr	r0, [sp, #80]	; 0x50
   272e4:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   272e8:	cmn	r0, #1
   272ec:	str	r0, [sp, #72]	; 0x48
   272f0:	beq	27878 <blkid_probe_get_size@plt+0x20360>
   272f4:	mov	r2, fp
   272f8:	ldr	r0, [sp, #40]	; 0x28
   272fc:	mov	r1, r5
   27300:	bl	7528 <blkid_probe_get_size@plt+0x10>
   27304:	cmp	r0, #0
   27308:	bge	277f0 <blkid_probe_get_size@plt+0x202d8>
   2730c:	ldr	r6, [sp, #32]
   27310:	mov	r1, r0
   27314:	ldr	r0, [r4, #-208]	; 0xffffff30
   27318:	cmp	r0, #0
   2731c:	bne	274d8 <blkid_probe_get_size@plt+0x1ffc0>
   27320:	ldr	r3, [pc, #2320]	; 27c38 <blkid_probe_get_size@plt+0x20720>
   27324:	add	r3, pc, r3
   27328:	ldr	r3, [r3]
   2732c:	cmp	r3, #6
   27330:	rsble	r5, r1, #0
   27334:	uxtble	r5, r5
   27338:	rsble	r5, r5, #0
   2733c:	ble	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27340:	ldr	r2, [pc, #2292]	; 27c3c <blkid_probe_get_size@plt+0x20724>
   27344:	ldr	r3, [pc, #2292]	; 27c40 <blkid_probe_get_size@plt+0x20728>
   27348:	add	r2, pc, r2
   2734c:	str	r2, [sp, #4]
   27350:	add	r3, pc, r3
   27354:	ldr	r2, [pc, #2280]	; 27c44 <blkid_probe_get_size@plt+0x2072c>
   27358:	add	r3, r3, #1904	; 0x770
   2735c:	str	r3, [sp]
   27360:	add	r2, pc, r2
   27364:	ldr	r3, [pc, #2268]	; 27c48 <blkid_probe_get_size@plt+0x20730>
   27368:	mov	r0, #7
   2736c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   27370:	mov	r5, r0
   27374:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27378:	ldr	r3, [r4, #12]
   2737c:	add	r1, r3, #32
   27380:	cmp	r1, fp
   27384:	bls	273e4 <blkid_probe_get_size@plt+0x1fecc>
   27388:	ldr	r3, [pc, #2236]	; 27c4c <blkid_probe_get_size@plt+0x20734>
   2738c:	add	r3, pc, r3
   27390:	ldr	r3, [r3]
   27394:	cmp	r3, #6
   27398:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   2739c:	ldr	r2, [pc, #2220]	; 27c50 <blkid_probe_get_size@plt+0x20738>
   273a0:	ldr	r3, [pc, #2220]	; 27c54 <blkid_probe_get_size@plt+0x2073c>
   273a4:	add	r2, pc, r2
   273a8:	str	r2, [sp, #4]
   273ac:	add	r3, pc, r3
   273b0:	ldr	r2, [pc, #2208]	; 27c58 <blkid_probe_get_size@plt+0x20740>
   273b4:	add	r3, r3, #1904	; 0x770
   273b8:	str	r1, [sp, #8]
   273bc:	str	r3, [sp]
   273c0:	str	fp, [sp, #12]
   273c4:	ldr	r3, [pc, #2192]	; 27c5c <blkid_probe_get_size@plt+0x20744>
   273c8:	add	r2, pc, r2
   273cc:	mov	r1, #1073741835	; 0x4000000b
   273d0:	mov	r0, #7
   273d4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   273d8:	mov	r5, r0
   273dc:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   273e0:	bl	6fb4 <__stack_chk_fail@plt>
   273e4:	str	r3, [sp, #48]	; 0x30
   273e8:	mov	r3, #1
   273ec:	str	r3, [sp, #44]	; 0x2c
   273f0:	b	271bc <blkid_probe_get_size@plt+0x1fca4>
   273f4:	ldr	r3, [pc, #2148]	; 27c60 <blkid_probe_get_size@plt+0x20748>
   273f8:	add	r3, pc, r3
   273fc:	ldr	r3, [r3]
   27400:	cmp	r3, #6
   27404:	ble	2709c <blkid_probe_get_size@plt+0x1fb84>
   27408:	ldr	r2, [pc, #2132]	; 27c64 <blkid_probe_get_size@plt+0x2074c>
   2740c:	ldr	r3, [pc, #2132]	; 27c68 <blkid_probe_get_size@plt+0x20750>
   27410:	add	r2, pc, r2
   27414:	str	r2, [sp, #4]
   27418:	add	r3, pc, r3
   2741c:	ldr	r2, [pc, #2120]	; 27c6c <blkid_probe_get_size@plt+0x20754>
   27420:	add	r3, r3, #1904	; 0x770
   27424:	str	r3, [sp]
   27428:	add	r2, pc, r2
   2742c:	mov	r3, #444	; 0x1bc
   27430:	mov	r1, #1073741835	; 0x4000000b
   27434:	mov	r0, #7
   27438:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2743c:	mov	r5, r0
   27440:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27444:	ldr	r0, [r4, #-208]	; 0xffffff30
   27448:	mov	r3, #0
   2744c:	cmp	r0, r3
   27450:	str	r3, [r4, #-192]	; 0xffffff40
   27454:	beq	279cc <blkid_probe_get_size@plt+0x204b4>
   27458:	ldr	r2, [pc, #2064]	; 27c70 <blkid_probe_get_size@plt+0x20758>
   2745c:	add	r2, pc, r2
   27460:	ldr	r2, [r2]
   27464:	cmp	r2, #6
   27468:	bgt	279ac <blkid_probe_get_size@plt+0x20494>
   2746c:	mov	r1, r3
   27470:	ldr	r2, [pc, #2044]	; 27c74 <blkid_probe_get_size@plt+0x2075c>
   27474:	ldr	r0, [sp, #56]	; 0x38
   27478:	add	r2, pc, r2
   2747c:	add	r2, r2, #1952	; 0x7a0
   27480:	ldr	ip, [sp, #52]	; 0x34
   27484:	str	r0, [sp, #28]
   27488:	add	r2, r2, #8
   2748c:	ldr	r0, [pc, #2020]	; 27c78 <blkid_probe_get_size@plt+0x20760>
   27490:	str	r2, [sp]
   27494:	ldr	r2, [pc, #2016]	; 27c7c <blkid_probe_get_size@plt+0x20764>
   27498:	add	r0, pc, r0
   2749c:	str	ip, [sp, #24]
   274a0:	mov	ip, #0
   274a4:	stmib	sp, {r1, r3}
   274a8:	str	r0, [sp, #20]
   274ac:	mov	r1, sl
   274b0:	str	ip, [sp, #16]
   274b4:	str	ip, [sp, #12]
   274b8:	ldr	r3, [pc, #1928]	; 27c48 <blkid_probe_get_size@plt+0x20730>
   274bc:	add	r2, pc, r2
   274c0:	mov	r0, #7
   274c4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   274c8:	mov	r1, r0
   274cc:	ldr	r0, [r4, #-208]	; 0xffffff30
   274d0:	cmp	r0, #0
   274d4:	beq	274e4 <blkid_probe_get_size@plt+0x1ffcc>
   274d8:	str	r1, [sp, #32]
   274dc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   274e0:	ldr	r1, [sp, #32]
   274e4:	cmp	r1, #0
   274e8:	blt	27320 <blkid_probe_get_size@plt+0x1fe08>
   274ec:	ldr	r3, [sp, #44]	; 0x2c
   274f0:	cmp	r3, #0
   274f4:	beq	27b00 <blkid_probe_get_size@plt+0x205e8>
   274f8:	mov	r0, #0
   274fc:	bl	26cfc <blkid_probe_get_size@plt+0x1f7e4>
   27500:	mov	r3, #0
   27504:	str	r3, [r4, #-204]	; 0xffffff34
   27508:	ldr	r5, [pc, #1904]	; 27c80 <blkid_probe_get_size@plt+0x20768>
   2750c:	ldr	r7, [pc, #1904]	; 27c84 <blkid_probe_get_size@plt+0x2076c>
   27510:	add	r5, pc, r5
   27514:	ldr	r1, [pc, #1900]	; 27c88 <blkid_probe_get_size@plt+0x20770>
   27518:	add	r3, r5, #2048	; 0x800
   2751c:	add	r7, pc, r7
   27520:	str	r3, [sp]
   27524:	mov	r2, r7
   27528:	ldr	r3, [pc, #1884]	; 27c8c <blkid_probe_get_size@plt+0x20774>
   2752c:	add	r1, pc, r1
   27530:	mov	r0, #0
   27534:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   27538:	ldr	r3, [pc, #1872]	; 27c90 <blkid_probe_get_size@plt+0x20778>
   2753c:	mov	ip, #0
   27540:	add	r3, pc, r3
   27544:	add	r5, r5, #1904	; 0x770
   27548:	str	r5, [sp]
   2754c:	str	r3, [sp, #20]
   27550:	str	ip, [sp, #16]
   27554:	str	ip, [sp, #12]
   27558:	str	ip, [sp, #8]
   2755c:	str	ip, [sp, #4]
   27560:	mov	r2, r7
   27564:	ldr	r3, [pc, #1832]	; 27c94 <blkid_probe_get_size@plt+0x2077c>
   27568:	mvn	r1, #21
   2756c:	mov	r0, #7
   27570:	str	ip, [r4, #-192]	; 0xffffff40
   27574:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   27578:	mov	r5, r0
   2757c:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27580:	ldr	r3, [sp, #52]	; 0x34
   27584:	cmp	fp, #0
   27588:	movne	r3, fp
   2758c:	str	r3, [sp, #52]	; 0x34
   27590:	ldr	r3, [sp, #36]	; 0x24
   27594:	sub	r3, r3, r5
   27598:	add	r3, r3, #1
   2759c:	add	r6, r6, r3
   275a0:	ldr	r3, [sp, #60]	; 0x3c
   275a4:	cmp	r3, r6
   275a8:	bhi	27224 <blkid_probe_get_size@plt+0x1fd0c>
   275ac:	ldr	r1, [sp, #52]	; 0x34
   275b0:	ldr	r5, [sp, #84]	; 0x54
   275b4:	cmp	r1, #0
   275b8:	ldr	r6, [sp, #32]
   275bc:	ldr	r0, [r4, #-208]	; 0xffffff30
   275c0:	beq	275d4 <blkid_probe_get_size@plt+0x200bc>
   275c4:	ldr	r2, [sp, #56]	; 0x38
   275c8:	bl	23e54 <blkid_probe_get_size@plt+0x1c93c>
   275cc:	subs	sl, r0, #0
   275d0:	blt	27444 <blkid_probe_get_size@plt+0x1ff2c>
   275d4:	ldr	sl, [r4, #-208]	; 0xffffff30
   275d8:	cmp	sl, #0
   275dc:	beq	27a40 <blkid_probe_get_size@plt+0x20528>
   275e0:	ldr	r3, [sl, #160]	; 0xa0
   275e4:	cmp	r3, #0
   275e8:	beq	279d8 <blkid_probe_get_size@plt+0x204c0>
   275ec:	ldr	r3, [sl, #172]	; 0xac
   275f0:	cmp	r3, #0
   275f4:	beq	279d8 <blkid_probe_get_size@plt+0x204c0>
   275f8:	ldr	r3, [sp, #72]	; 0x48
   275fc:	ldr	r2, [sp, #68]	; 0x44
   27600:	cmn	r3, #1
   27604:	ldr	r3, [sp, #64]	; 0x40
   27608:	movne	fp, #0
   2760c:	moveq	fp, #1
   27610:	orrs	r3, r3, r2
   27614:	moveq	fp, #1
   27618:	cmp	fp, #0
   2761c:	bne	279d8 <blkid_probe_get_size@plt+0x204c0>
   27620:	ldrb	r3, [sl, #215]	; 0xd7
   27624:	ldr	r2, [sp, #44]	; 0x2c
   27628:	cmp	r2, #0
   2762c:	orr	r3, r3, #2
   27630:	strb	r3, [sl, #215]	; 0xd7
   27634:	ldreq	r3, [sp, #44]	; 0x2c
   27638:	streq	r3, [r4, #-204]	; 0xffffff34
   2763c:	beq	2764c <blkid_probe_get_size@plt+0x20134>
   27640:	mov	r0, sl
   27644:	bl	26cfc <blkid_probe_get_size@plt+0x1f7e4>
   27648:	str	fp, [r4, #-204]	; 0xffffff34
   2764c:	ldr	r0, [r7, #268]	; 0x10c
   27650:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   27654:	cmp	r0, #0
   27658:	bne	27750 <blkid_probe_get_size@plt+0x20238>
   2765c:	ldr	r0, [r7, #272]	; 0x110
   27660:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   27664:	cmp	r0, #0
   27668:	beq	27744 <blkid_probe_get_size@plt+0x2022c>
   2766c:	mvn	r2, #1
   27670:	mov	r3, #0
   27674:	add	fp, sp, #92	; 0x5c
   27678:	strd	r2, [r4, #-192]	; 0xffffff40
   2767c:	b	27694 <blkid_probe_get_size@plt+0x2017c>
   27680:	ldr	r1, [r4, #-220]	; 0xffffff24
   27684:	mov	r0, sl
   27688:	bl	38330 <blkid_probe_get_size@plt+0x30e18>
   2768c:	cmp	r0, #0
   27690:	bgt	27744 <blkid_probe_get_size@plt+0x2022c>
   27694:	mov	r2, fp
   27698:	mov	r1, r8
   2769c:	ldr	r0, [r7, #272]	; 0x110
   276a0:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   276a4:	cmp	r0, #0
   276a8:	bne	27680 <blkid_probe_get_size@plt+0x20168>
   276ac:	ldr	r2, [pc, #1508]	; 27c98 <blkid_probe_get_size@plt+0x20780>
   276b0:	mov	r3, #0
   276b4:	add	r2, pc, r2
   276b8:	str	r3, [r4, #-192]	; 0xffffff40
   276bc:	ldr	r2, [r2]
   276c0:	cmp	r2, #6
   276c4:	bgt	27988 <blkid_probe_get_size@plt+0x20470>
   276c8:	mov	r0, r3
   276cc:	ldr	r2, [pc, #1480]	; 27c9c <blkid_probe_get_size@plt+0x20784>
   276d0:	ldr	ip, [pc, #1480]	; 27ca0 <blkid_probe_get_size@plt+0x20788>
   276d4:	add	r2, pc, r2
   276d8:	add	r2, r2, #1904	; 0x770
   276dc:	str	r2, [sp]
   276e0:	ldr	r2, [pc, #1468]	; 27ca4 <blkid_probe_get_size@plt+0x2078c>
   276e4:	mov	r1, #0
   276e8:	add	ip, pc, ip
   276ec:	stmib	sp, {r0, r3}
   276f0:	str	ip, [sp, #20]
   276f4:	str	r1, [sp, #16]
   276f8:	str	r1, [sp, #12]
   276fc:	ldr	r3, [pc, #1444]	; 27ca8 <blkid_probe_get_size@plt+0x20790>
   27700:	add	r2, pc, r2
   27704:	mov	r0, #7
   27708:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   2770c:	mov	r0, sl
   27710:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   27714:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27718:	ldr	r3, [pc, #1420]	; 27cac <blkid_probe_get_size@plt+0x20794>
   2771c:	ldr	r2, [pc, #1420]	; 27cb0 <blkid_probe_get_size@plt+0x20798>
   27720:	add	r3, pc, r3
   27724:	ldr	r1, [pc, #1416]	; 27cb4 <blkid_probe_get_size@plt+0x2079c>
   27728:	add	r3, r3, #1936	; 0x790
   2772c:	str	r3, [sp]
   27730:	ldr	r0, [sp, #60]	; 0x3c
   27734:	ldr	r3, [pc, #1404]	; 27cb8 <blkid_probe_get_size@plt+0x207a0>
   27738:	add	r2, pc, r2
   2773c:	add	r1, pc, r1
   27740:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27744:	str	sl, [r9]
   27748:	mov	r5, #1
   2774c:	b	26e44 <blkid_probe_get_size@plt+0x1f92c>
   27750:	ldr	r1, [sp, #76]	; 0x4c
   27754:	mov	r0, sl
   27758:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   2775c:	subs	fp, r0, #0
   27760:	blt	27898 <blkid_probe_get_size@plt+0x20380>
   27764:	sub	r1, r8, #12
   27768:	mov	r0, sl
   2776c:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   27770:	adds	r3, r0, #2
   27774:	movne	r3, #1
   27778:	ands	r3, r3, r0, lsr #31
   2777c:	mov	fp, r0
   27780:	bne	27898 <blkid_probe_get_size@plt+0x20380>
   27784:	mvn	r2, #1
   27788:	add	fp, sp, #96	; 0x60
   2778c:	strd	r2, [r4, #-192]	; 0xffffff40
   27790:	add	r3, sp, #100	; 0x64
   27794:	str	r3, [sp, #32]
   27798:	mov	r3, fp
   2779c:	ldr	r2, [sp, #32]
   277a0:	mov	r1, r8
   277a4:	ldr	r0, [r7, #268]	; 0x10c
   277a8:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   277ac:	cmp	r0, #0
   277b0:	beq	276ac <blkid_probe_get_size@plt+0x20194>
   277b4:	ldr	r1, [r4, #-216]	; 0xffffff28
   277b8:	ldr	r0, [r4, #-208]	; 0xffffff30
   277bc:	bl	7314 <strcmp@plt>
   277c0:	cmp	r0, #0
   277c4:	bne	27798 <blkid_probe_get_size@plt+0x20280>
   277c8:	ldr	r1, [r4, #-212]	; 0xffffff2c
   277cc:	cmp	r1, #0
   277d0:	beq	2765c <blkid_probe_get_size@plt+0x20144>
   277d4:	ldr	r0, [r4, #-204]	; 0xffffff34
   277d8:	cmp	r0, #0
   277dc:	beq	27798 <blkid_probe_get_size@plt+0x20280>
   277e0:	bl	7314 <strcmp@plt>
   277e4:	cmp	r0, #0
   277e8:	bne	27798 <blkid_probe_get_size@plt+0x20280>
   277ec:	b	2765c <blkid_probe_get_size@plt+0x20144>
   277f0:	ldrd	r2, [r8]
   277f4:	orrs	r1, r2, r3
   277f8:	ldr	r1, [sp, #64]	; 0x40
   277fc:	movne	r1, r2
   27800:	str	r1, [sp, #64]	; 0x40
   27804:	ldr	r1, [sp, #68]	; 0x44
   27808:	movne	r1, r3
   2780c:	str	r1, [sp, #68]	; 0x44
   27810:	b	27590 <blkid_probe_get_size@plt+0x20078>
   27814:	ldr	r3, [pc, #1184]	; 27cbc <blkid_probe_get_size@plt+0x207a4>
   27818:	mov	r0, r1
   2781c:	add	r3, pc, r3
   27820:	ldr	r2, [pc, #1176]	; 27cc0 <blkid_probe_get_size@plt+0x207a8>
   27824:	ldr	r1, [pc, #1176]	; 27cc4 <blkid_probe_get_size@plt+0x207ac>
   27828:	add	r3, r3, #1984	; 0x7c0
   2782c:	str	r3, [sp]
   27830:	add	r2, pc, r2
   27834:	ldr	r3, [pc, #1164]	; 27cc8 <blkid_probe_get_size@plt+0x207b0>
   27838:	add	r1, pc, r1
   2783c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27840:	ldr	r1, [pc, #1156]	; 27ccc <blkid_probe_get_size@plt+0x207b4>
   27844:	mov	r0, r5
   27848:	add	r1, pc, r1
   2784c:	bl	7314 <strcmp@plt>
   27850:	cmp	r0, #0
   27854:	bne	272f4 <blkid_probe_get_size@plt+0x1fddc>
   27858:	mov	r1, r8
   2785c:	mov	r0, fp
   27860:	bl	40ec0 <blkid_probe_get_size@plt+0x399a8>
   27864:	cmp	r0, #0
   27868:	blt	2730c <blkid_probe_get_size@plt+0x1fdf4>
   2786c:	ldrd	r2, [r8]
   27870:	orrs	r3, r2, r3
   27874:	bne	272f4 <blkid_probe_get_size@plt+0x1fddc>
   27878:	ldr	r6, [sp, #32]
   2787c:	mvn	r1, #21
   27880:	b	27314 <blkid_probe_get_size@plt+0x1fdfc>
   27884:	ldr	r3, [sp, #56]	; 0x38
   27888:	cmp	fp, #0
   2788c:	movne	r3, fp
   27890:	str	r3, [sp, #56]	; 0x38
   27894:	b	27590 <blkid_probe_get_size@plt+0x20078>
   27898:	ldr	r2, [pc, #1072]	; 27cd0 <blkid_probe_get_size@plt+0x207b8>
   2789c:	mov	r3, #0
   278a0:	add	r2, pc, r2
   278a4:	str	r3, [r4, #-192]	; 0xffffff40
   278a8:	ldr	r2, [r2]
   278ac:	cmp	r2, #6
   278b0:	bgt	27b30 <blkid_probe_get_size@plt+0x20618>
   278b4:	mov	r1, r3
   278b8:	ldr	r2, [pc, #1044]	; 27cd4 <blkid_probe_get_size@plt+0x207bc>
   278bc:	ldr	r0, [pc, #1044]	; 27cd8 <blkid_probe_get_size@plt+0x207c0>
   278c0:	add	r2, pc, r2
   278c4:	add	r2, r2, #1904	; 0x770
   278c8:	str	r2, [sp]
   278cc:	ldr	r2, [pc, #1032]	; 27cdc <blkid_probe_get_size@plt+0x207c4>
   278d0:	mov	ip, #0
   278d4:	add	r0, pc, r0
   278d8:	str	r3, [sp, #8]
   278dc:	str	r1, [sp, #4]
   278e0:	str	r0, [sp, #20]
   278e4:	mov	r1, fp
   278e8:	str	ip, [sp, #16]
   278ec:	str	ip, [sp, #12]
   278f0:	ldr	r3, [pc, #924]	; 27c94 <blkid_probe_get_size@plt+0x2077c>
   278f4:	add	r2, pc, r2
   278f8:	mov	r0, #7
   278fc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   27900:	mov	r5, r0
   27904:	b	2770c <blkid_probe_get_size@plt+0x201f4>
   27908:	ldr	r3, [sp, #40]	; 0x28
   2790c:	ldr	r6, [sp, #32]
   27910:	cmp	r3, #0
   27914:	str	r0, [r4, #-192]	; 0xffffff40
   27918:	beq	27930 <blkid_probe_get_size@plt+0x20418>
   2791c:	ldr	r3, [pc, #956]	; 27ce0 <blkid_probe_get_size@plt+0x207c8>
   27920:	add	r3, pc, r3
   27924:	ldr	r3, [r3]
   27928:	cmp	r3, #6
   2792c:	bgt	27b54 <blkid_probe_get_size@plt+0x2063c>
   27930:	ldr	r2, [sp, #36]	; 0x24
   27934:	ldr	r3, [pc, #936]	; 27ce4 <blkid_probe_get_size@plt+0x207cc>
   27938:	str	r2, [sp, #8]
   2793c:	ldr	r2, [sp, #36]	; 0x24
   27940:	add	r3, pc, r3
   27944:	ldr	r0, [pc, #924]	; 27ce8 <blkid_probe_get_size@plt+0x207d0>
   27948:	str	r2, [sp, #4]
   2794c:	add	r3, r3, #1952	; 0x7a0
   27950:	ldr	r2, [pc, #916]	; 27cec <blkid_probe_get_size@plt+0x207d4>
   27954:	mov	r1, #0
   27958:	add	r0, pc, r0
   2795c:	add	r3, r3, #8
   27960:	str	r3, [sp]
   27964:	str	r0, [sp, #20]
   27968:	str	r1, [sp, #16]
   2796c:	str	r1, [sp, #12]
   27970:	mov	r3, #436	; 0x1b4
   27974:	add	r2, pc, r2
   27978:	mov	r0, #7
   2797c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   27980:	mvn	r1, #21
   27984:	b	27314 <blkid_probe_get_size@plt+0x1fdfc>
   27988:	mov	r1, r8
   2798c:	mov	r0, sl
   27990:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   27994:	ldr	r3, [r4, #-192]	; 0xffffff40
   27998:	cmp	r3, #0
   2799c:	beq	276c8 <blkid_probe_get_size@plt+0x201b0>
   279a0:	ldr	r0, [pc, #840]	; 27cf0 <blkid_probe_get_size@plt+0x207d8>
   279a4:	add	r0, pc, r0
   279a8:	b	276cc <blkid_probe_get_size@plt+0x201b4>
   279ac:	mov	r1, r8
   279b0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   279b4:	ldr	r3, [r4, #-192]	; 0xffffff40
   279b8:	cmp	r3, #0
   279bc:	beq	2746c <blkid_probe_get_size@plt+0x1ff54>
   279c0:	ldr	r1, [pc, #812]	; 27cf4 <blkid_probe_get_size@plt+0x207dc>
   279c4:	add	r1, pc, r1
   279c8:	b	27470 <blkid_probe_get_size@plt+0x1ff58>
   279cc:	mov	r3, r0
   279d0:	mov	r1, r0
   279d4:	b	27470 <blkid_probe_get_size@plt+0x1ff58>
   279d8:	ldr	r2, [pc, #792]	; 27cf8 <blkid_probe_get_size@plt+0x207e0>
   279dc:	mov	r3, #0
   279e0:	add	r2, pc, r2
   279e4:	str	r3, [r4, #-192]	; 0xffffff40
   279e8:	ldr	r2, [r2]
   279ec:	cmp	r2, #6
   279f0:	bgt	27a6c <blkid_probe_get_size@plt+0x20554>
   279f4:	mov	ip, r3
   279f8:	ldr	r2, [pc, #764]	; 27cfc <blkid_probe_get_size@plt+0x207e4>
   279fc:	ldr	r0, [pc, #764]	; 27d00 <blkid_probe_get_size@plt+0x207e8>
   27a00:	add	r2, pc, r2
   27a04:	add	r2, r2, #2032	; 0x7f0
   27a08:	mov	r1, #0
   27a0c:	stm	sp, {r2, ip}
   27a10:	ldr	r2, [pc, #748]	; 27d04 <blkid_probe_get_size@plt+0x207ec>
   27a14:	add	r0, pc, r0
   27a18:	str	r3, [sp, #8]
   27a1c:	str	r0, [sp, #20]
   27a20:	str	r1, [sp, #16]
   27a24:	str	r1, [sp, #12]
   27a28:	mov	r3, #368	; 0x170
   27a2c:	add	r2, pc, r2
   27a30:	mov	r0, #7
   27a34:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   27a38:	mvn	r1, #21
   27a3c:	b	27314 <blkid_probe_get_size@plt+0x1fdfc>
   27a40:	ldr	r3, [pc, #704]	; 27d08 <blkid_probe_get_size@plt+0x207f0>
   27a44:	ldr	r2, [pc, #704]	; 27d0c <blkid_probe_get_size@plt+0x207f4>
   27a48:	add	r3, pc, r3
   27a4c:	ldr	r1, [pc, #700]	; 27d10 <blkid_probe_get_size@plt+0x207f8>
   27a50:	add	r3, r3, #2016	; 0x7e0
   27a54:	str	r3, [sp]
   27a58:	mov	r0, sl
   27a5c:	ldr	r3, [pc, #688]	; 27d14 <blkid_probe_get_size@plt+0x207fc>
   27a60:	add	r2, pc, r2
   27a64:	add	r1, pc, r1
   27a68:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27a6c:	mov	r1, r8
   27a70:	mov	r0, sl
   27a74:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   27a78:	ldr	r3, [r4, #-192]	; 0xffffff40
   27a7c:	cmp	r3, #0
   27a80:	beq	279f4 <blkid_probe_get_size@plt+0x204dc>
   27a84:	ldr	ip, [pc, #652]	; 27d18 <blkid_probe_get_size@plt+0x20800>
   27a88:	add	ip, pc, ip
   27a8c:	b	279f8 <blkid_probe_get_size@plt+0x204e0>
   27a90:	ldr	r2, [pc, #644]	; 27d1c <blkid_probe_get_size@plt+0x20804>
   27a94:	mov	r3, r0
   27a98:	add	r2, pc, r2
   27a9c:	ldr	r6, [sp, #32]
   27aa0:	ldr	r2, [r2]
   27aa4:	str	r0, [r4, #-204]	; 0xffffff34
   27aa8:	cmp	r2, #6
   27aac:	bgt	27b0c <blkid_probe_get_size@plt+0x205f4>
   27ab0:	mov	ip, r3
   27ab4:	ldr	r2, [pc, #612]	; 27d20 <blkid_probe_get_size@plt+0x20808>
   27ab8:	ldr	r0, [pc, #612]	; 27d24 <blkid_probe_get_size@plt+0x2080c>
   27abc:	add	r2, pc, r2
   27ac0:	add	r2, r2, #2000	; 0x7d0
   27ac4:	mov	r1, #0
   27ac8:	stm	sp, {r2, ip}
   27acc:	ldr	r2, [pc, #596]	; 27d28 <blkid_probe_get_size@plt+0x20810>
   27ad0:	add	r0, pc, r0
   27ad4:	str	r3, [sp, #8]
   27ad8:	str	r0, [sp, #20]
   27adc:	str	r1, [sp, #16]
   27ae0:	str	r1, [sp, #12]
   27ae4:	str	r5, [sp, #24]
   27ae8:	mov	r3, #312	; 0x138
   27aec:	add	r2, pc, r2
   27af0:	mov	r0, #7
   27af4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   27af8:	mvn	r1, #21
   27afc:	b	27314 <blkid_probe_get_size@plt+0x1fdfc>
   27b00:	ldr	r3, [sp, #44]	; 0x2c
   27b04:	str	r3, [r4, #-204]	; 0xffffff34
   27b08:	b	27508 <blkid_probe_get_size@plt+0x1fff0>
   27b0c:	sub	r1, r8, #12
   27b10:	ldr	r0, [sp, #40]	; 0x28
   27b14:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   27b18:	ldr	r3, [r4, #-204]	; 0xffffff34
   27b1c:	cmp	r3, #0
   27b20:	beq	27ab0 <blkid_probe_get_size@plt+0x20598>
   27b24:	ldr	ip, [pc, #512]	; 27d2c <blkid_probe_get_size@plt+0x20814>
   27b28:	add	ip, pc, ip
   27b2c:	b	27ab4 <blkid_probe_get_size@plt+0x2059c>
   27b30:	mov	r1, r8
   27b34:	mov	r0, sl
   27b38:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   27b3c:	ldr	r3, [r4, #-192]	; 0xffffff40
   27b40:	ldr	r1, [pc, #488]	; 27d30 <blkid_probe_get_size@plt+0x20818>
   27b44:	cmp	r3, #0
   27b48:	add	r1, pc, r1
   27b4c:	bne	278b8 <blkid_probe_get_size@plt+0x203a0>
   27b50:	b	278b4 <blkid_probe_get_size@plt+0x2039c>
   27b54:	mov	r1, r8
   27b58:	ldr	r0, [sp, #40]	; 0x28
   27b5c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   27b60:	ldr	r2, [r4, #-192]	; 0xffffff40
   27b64:	cmp	r2, #0
   27b68:	streq	r2, [sp, #36]	; 0x24
   27b6c:	ldrne	r3, [pc, #448]	; 27d34 <blkid_probe_get_size@plt+0x2081c>
   27b70:	addne	r3, pc, r3
   27b74:	strne	r3, [sp, #36]	; 0x24
   27b78:	b	27934 <blkid_probe_get_size@plt+0x2041c>
   27b7c:	andeq	r0, r7, ip, lsl #28
   27b80:	andeq	r0, r0, ip, lsr r4
   27b84:	andeq	r1, r7, r0, asr #6
   27b88:	andeq	r4, r4, r8, ror #20
   27b8c:	andeq	r2, r4, ip, ror #15
   27b90:	andeq	lr, r3, r8, ror r6
   27b94:	andeq	r1, r7, r8, lsr #5
   27b98:	strdeq	r4, [r4], -ip
   27b9c:	andeq	r2, r4, r4, asr r7
   27ba0:	andeq	lr, r3, r0, ror #11
   27ba4:	andeq	r0, r0, pc, lsl #3
   27ba8:	andeq	r1, r7, r4, asr #4
   27bac:	andeq	r4, r4, r0, lsr r9
   27bb0:	andeq	r2, r4, r8, ror #13
   27bb4:	andeq	lr, r3, r4, ror r5
   27bb8:	andeq	r0, r0, r2, lsl #3
   27bbc:			; <UNDEFINED> instruction: 0x000711b8
   27bc0:	andeq	r2, r4, r8, ror #12
   27bc4:	andeq	r4, r4, r4, asr #19
   27bc8:	andeq	lr, r3, r8, ror #9
   27bcc:	muleq	r0, pc, r1	; <UNPREDICTABLE>
   27bd0:	andeq	r1, r7, r4, ror #2
   27bd4:	andeq	r4, r4, r8, lsr r9
   27bd8:	andeq	r2, r4, r0, lsl r6
   27bdc:	muleq	r3, ip, r4
   27be0:	muleq	r0, sl, r1
   27be4:	strdeq	r1, [r7], -r8
   27be8:	andeq	r2, r4, r8, lsr #11
   27bec:	andeq	r4, r4, r4, ror r8
   27bf0:	andeq	lr, r3, r8, lsr #8
   27bf4:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   27bf8:	vsudot.u8	q15, q13, d14[1]
   27bfc:	andeq	r1, r7, ip, rrx
   27c00:	andeq	r2, r4, ip, lsl r5
   27c04:			; <UNDEFINED> instruction: 0x000448b4
   27c08:	muleq	r3, r8, r3
   27c0c:	andeq	r0, r0, r6, lsr #3
   27c10:	andeq	r0, r7, r4, ror #31
   27c14:	andeq	r4, r4, r8, lsr #17
   27c18:	muleq	r4, r0, r4
   27c1c:	andeq	lr, r3, ip, lsl r3
   27c20:			; <UNDEFINED> instruction: 0x000001b7
   27c24:	muleq	r4, r8, r8
   27c28:	andeq	r2, r6, ip, ror #10
   27c2c:	andeq	r2, r4, ip, lsr r3
   27c30:	andeq	r2, r4, r8, lsr #6
   27c34:	andeq	lr, r3, r0, asr r4
   27c38:	andeq	r0, r7, r8, lsl lr
   27c3c:	andeq	r4, r4, r8, lsl #16
   27c40:			; <UNDEFINED> instruction: 0x000422b8
   27c44:	andeq	lr, r3, r4, asr #2
   27c48:	andeq	r0, r0, r1, asr #3
   27c4c:			; <UNDEFINED> instruction: 0x00070db0
   27c50:	andeq	r4, r4, ip, lsr r6
   27c54:	andeq	r2, r4, ip, asr r2
   27c58:	ldrdeq	lr, [r3], -ip
   27c5c:	andeq	r0, r0, fp, lsr #3
   27c60:	andeq	r0, r7, r4, asr #26
   27c64:	andeq	r4, r4, r8, lsr r6
   27c68:	strdeq	r2, [r4], -r0
   27c6c:	andeq	lr, r3, ip, ror r0
   27c70:	andeq	r0, r7, r0, ror #25
   27c74:	muleq	r4, r0, r1
   27c78:	andeq	r4, r4, r0, lsr r6
   27c7c:	ldrdeq	r0, [r4], -r4
   27c80:	strdeq	r2, [r4], -r8
   27c84:	andeq	sp, r3, r8, lsl #31
   27c88:	andeq	r3, r4, r4, lsr sl
   27c8c:	andeq	r0, r0, fp, lsr r1
   27c90:	andeq	r4, r4, r8, asr r6
   27c94:	andeq	r0, r0, r9, asr #3
   27c98:	andeq	r0, r7, r8, lsl #21
   27c9c:	andeq	r1, r4, r4, lsr pc
   27ca0:	strdeq	r4, [r4], -r8
   27ca4:	andeq	sp, r3, r4, lsr #27
   27ca8:	andeq	r0, r0, fp, asr #3
   27cac:	andeq	r1, r4, r8, ror #29
   27cb0:	andeq	r0, r4, r8, asr r0
   27cb4:	muleq	r4, r0, r5
   27cb8:	andeq	r0, r0, r7, lsr #3
   27cbc:	andeq	r1, r4, ip, ror #27
   27cc0:	andeq	pc, r3, r0, ror #30
   27cc4:	andeq	r3, r4, r8, lsr #14
   27cc8:	andeq	r0, r0, pc, lsr #2
   27ccc:	andeq	r4, r4, r8, ror r2
   27cd0:	muleq	r7, ip, r8
   27cd4:	andeq	r1, r4, r8, asr #26
   27cd8:	andeq	r4, r4, r4, asr #5
   27cdc:			; <UNDEFINED> instruction: 0x0003dbb0
   27ce0:	andeq	r0, r7, ip, lsl r8
   27ce4:	andeq	r1, r4, r8, asr #25
   27ce8:	andeq	r4, r4, ip, lsl r1
   27cec:	andeq	pc, r3, ip, lsl lr	; <UNPREDICTABLE>
   27cf0:	muleq	r3, r4, r5
   27cf4:	andeq	sp, r3, r4, ror r5
   27cf8:	andeq	r0, r7, ip, asr r7
   27cfc:	andeq	r1, r4, r8, lsl #24
   27d00:	andeq	r4, r4, r0, ror #1
   27d04:	andeq	pc, r3, r4, ror #26
   27d08:	andeq	r1, r4, r0, asr #23
   27d0c:	andeq	pc, r3, r0, lsr sp	; <UNPREDICTABLE>
   27d10:	strdeq	r3, [r4], -ip
   27d14:	andeq	r0, r0, sp, ror #2
   27d18:			; <UNDEFINED> instruction: 0x0003d4b0
   27d1c:	andeq	r0, r7, r4, lsr #13
   27d20:	andeq	r1, r4, ip, asr #22
   27d24:	andeq	r3, r4, r8, asr #31
   27d28:	andeq	pc, r3, r4, lsr #25
   27d2c:	andeq	sp, r3, r0, lsl r4
   27d30:	strdeq	sp, [r3], -r0
   27d34:	andeq	sp, r3, r8, asr #7
   27d38:	ldr	r2, [pc, #188]	; 27dfc <blkid_probe_get_size@plt+0x208e4>
   27d3c:	ldr	r1, [pc, #188]	; 27e00 <blkid_probe_get_size@plt+0x208e8>
   27d40:	add	r2, pc, r2
   27d44:	push	{r4, r5, r6, lr}
   27d48:	subs	r5, r3, #0
   27d4c:	ldr	r6, [r2, r1]
   27d50:	sub	sp, sp, #16
   27d54:	mov	r4, #0
   27d58:	ldr	r3, [r6]
   27d5c:	str	r4, [sp, #8]
   27d60:	str	r3, [sp, #12]
   27d64:	beq	27dcc <blkid_probe_get_size@plt+0x208b4>
   27d68:	add	r1, sp, #8
   27d6c:	mov	r0, r5
   27d70:	bl	26d54 <blkid_probe_get_size@plt+0x1f83c>
   27d74:	cmp	r0, #0
   27d78:	ble	27d9c <blkid_probe_get_size@plt+0x20884>
   27d7c:	ldr	r4, [r5, #288]	; 0x120
   27d80:	ldr	r1, [sp, #8]
   27d84:	cmp	r4, #0
   27d88:	beq	27da0 <blkid_probe_get_size@plt+0x20888>
   27d8c:	ldr	r2, [r5, #292]	; 0x124
   27d90:	mov	r0, r5
   27d94:	blx	r4
   27d98:	mov	r4, r0
   27d9c:	ldr	r1, [sp, #8]
   27da0:	cmp	r1, #0
   27da4:	beq	27db0 <blkid_probe_get_size@plt+0x20898>
   27da8:	mov	r0, r1
   27dac:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   27db0:	ldr	r2, [sp, #12]
   27db4:	ldr	r3, [r6]
   27db8:	mov	r0, r4
   27dbc:	cmp	r2, r3
   27dc0:	bne	27df8 <blkid_probe_get_size@plt+0x208e0>
   27dc4:	add	sp, sp, #16
   27dc8:	pop	{r4, r5, r6, pc}
   27dcc:	ldr	r3, [pc, #48]	; 27e04 <blkid_probe_get_size@plt+0x208ec>
   27dd0:	ldr	r2, [pc, #48]	; 27e08 <blkid_probe_get_size@plt+0x208f0>
   27dd4:	add	r3, pc, r3
   27dd8:	ldr	r1, [pc, #44]	; 27e0c <blkid_probe_get_size@plt+0x208f4>
   27ddc:	add	r3, r3, #2064	; 0x810
   27de0:	str	r3, [sp]
   27de4:	mov	r0, r5
   27de8:	mov	r3, #192	; 0xc0
   27dec:	add	r2, pc, r2
   27df0:	add	r1, pc, r1
   27df4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27df8:	bl	6fb4 <__stack_chk_fail@plt>
   27dfc:	andeq	pc, r6, r8, lsr #28
   27e00:	andeq	r0, r0, ip, lsr r4
   27e04:	andeq	r1, r4, r4, lsr r8
   27e08:			; <UNDEFINED> instruction: 0x0003d6b8
   27e0c:	andeq	ip, r4, r0
   27e10:	push	{r4, r5, r6, lr}
   27e14:	subs	r5, r0, #0
   27e18:	sub	sp, sp, #8
   27e1c:	beq	27e70 <blkid_probe_get_size@plt+0x20958>
   27e20:	cmp	r1, #0
   27e24:	mov	r4, r1
   27e28:	beq	27e98 <blkid_probe_get_size@plt+0x20980>
   27e2c:	mov	r3, #0
   27e30:	mov	r6, r2
   27e34:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   27e38:	cmp	r0, #0
   27e3c:	blt	27e68 <blkid_probe_get_size@plt+0x20950>
   27e40:	ldrb	r3, [r4]
   27e44:	cmp	r3, #46	; 0x2e
   27e48:	moveq	r0, #0
   27e4c:	beq	27e68 <blkid_probe_get_size@plt+0x20950>
   27e50:	mov	r2, r6
   27e54:	mov	r1, r4
   27e58:	mov	r0, r5
   27e5c:	mov	r3, #1
   27e60:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   27e64:	and	r0, r0, r0, asr #31
   27e68:	add	sp, sp, #8
   27e6c:	pop	{r4, r5, r6, pc}
   27e70:	ldr	r2, [pc, #76]	; 27ec4 <blkid_probe_get_size@plt+0x209ac>
   27e74:	ldr	r1, [pc, #76]	; 27ec8 <blkid_probe_get_size@plt+0x209b0>
   27e78:	add	r2, pc, r2
   27e7c:	add	r2, r2, #2096	; 0x830
   27e80:	str	r2, [sp]
   27e84:	ldr	r2, [pc, #64]	; 27ecc <blkid_probe_get_size@plt+0x209b4>
   27e88:	mov	r3, #34	; 0x22
   27e8c:	add	r2, pc, r2
   27e90:	add	r1, pc, r1
   27e94:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27e98:	ldr	r3, [pc, #48]	; 27ed0 <blkid_probe_get_size@plt+0x209b8>
   27e9c:	mov	r0, r1
   27ea0:	add	r3, pc, r3
   27ea4:	ldr	r2, [pc, #40]	; 27ed4 <blkid_probe_get_size@plt+0x209bc>
   27ea8:	ldr	r1, [pc, #40]	; 27ed8 <blkid_probe_get_size@plt+0x209c0>
   27eac:	add	r3, r3, #2096	; 0x830
   27eb0:	str	r3, [sp]
   27eb4:	add	r2, pc, r2
   27eb8:	mov	r3, #35	; 0x23
   27ebc:	add	r1, pc, r1
   27ec0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27ec4:	muleq	r4, r0, r7
   27ec8:	ldrdeq	r3, [r4], -r0
   27ecc:	andeq	pc, r3, r4, lsl #18
   27ed0:	andeq	r1, r4, r8, ror #14
   27ed4:	ldrdeq	pc, [r3], -ip
   27ed8:	andeq	r3, r4, r0, lsl #11
   27edc:	push	{r4, r5, r6, lr}
   27ee0:	subs	r4, r0, #0
   27ee4:	ldr	r6, [pc, #176]	; 27f9c <blkid_probe_get_size@plt+0x20a84>
   27ee8:	sub	sp, sp, #8
   27eec:	add	r6, pc, r6
   27ef0:	beq	27f64 <blkid_probe_get_size@plt+0x20a4c>
   27ef4:	ldr	r0, [r4]
   27ef8:	cmp	r0, #0
   27efc:	beq	27f70 <blkid_probe_get_size@plt+0x20a58>
   27f00:	sub	r5, r0, #1
   27f04:	cmp	r5, #0
   27f08:	str	r5, [r4]
   27f0c:	bne	27f64 <blkid_probe_get_size@plt+0x20a4c>
   27f10:	ldr	r0, [r4, #284]	; 0x11c
   27f14:	bl	31a14 <blkid_probe_get_size@plt+0x2a4fc>
   27f18:	str	r0, [r4, #284]	; 0x11c
   27f1c:	ldr	r0, [r4, #4]
   27f20:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   27f24:	str	r0, [r4, #4]
   27f28:	ldr	r0, [r4, #280]	; 0x118
   27f2c:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   27f30:	ldr	r3, [pc, #104]	; 27fa0 <blkid_probe_get_size@plt+0x20a88>
   27f34:	str	r0, [r4, #280]	; 0x118
   27f38:	ldr	r6, [r6, r3]
   27f3c:	ldr	r0, [r4, #268]	; 0x10c
   27f40:	mov	r2, r6
   27f44:	mov	r1, r6
   27f48:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   27f4c:	mov	r2, r5
   27f50:	mov	r1, r6
   27f54:	ldr	r0, [r4, #272]	; 0x110
   27f58:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   27f5c:	mov	r0, r4
   27f60:	bl	69f0 <free@plt>
   27f64:	mov	r0, #0
   27f68:	add	sp, sp, #8
   27f6c:	pop	{r4, r5, r6, pc}
   27f70:	ldr	r3, [pc, #44]	; 27fa4 <blkid_probe_get_size@plt+0x20a8c>
   27f74:	ldr	r2, [pc, #44]	; 27fa8 <blkid_probe_get_size@plt+0x20a90>
   27f78:	add	r3, pc, r3
   27f7c:	add	r3, r3, #2112	; 0x840
   27f80:	ldr	r1, [pc, #36]	; 27fac <blkid_probe_get_size@plt+0x20a94>
   27f84:	add	r3, r3, #4
   27f88:	str	r3, [sp]
   27f8c:	add	r2, pc, r2
   27f90:	ldr	r3, [pc, #24]	; 27fb0 <blkid_probe_get_size@plt+0x20a98>
   27f94:	add	r1, pc, r1
   27f98:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   27f9c:	andeq	pc, r6, ip, ror ip	; <UNPREDICTABLE>
   27fa0:	andeq	r0, r0, r8, lsr r4
   27fa4:	muleq	r4, r0, r6
   27fa8:	andeq	sp, r3, r8, lsl r5
   27fac:			; <UNDEFINED> instruction: 0x0003ffbc
   27fb0:	andeq	r0, r0, r3, lsr r1
   27fb4:	push	{r4, r5, lr}
   27fb8:	subs	r5, r0, #0
   27fbc:	sub	sp, sp, #12
   27fc0:	beq	28008 <blkid_probe_get_size@plt+0x20af0>
   27fc4:	ldr	r4, [r5, #280]	; 0x118
   27fc8:	cmp	r4, #0
   27fcc:	bne	28044 <blkid_probe_get_size@plt+0x20b2c>
   27fd0:	cmp	r1, #0
   27fd4:	beq	27ff0 <blkid_probe_get_size@plt+0x20ad8>
   27fd8:	mov	r0, r1
   27fdc:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   27fe0:	str	r0, [r5, #280]	; 0x118
   27fe4:	mov	r0, r4
   27fe8:	add	sp, sp, #12
   27fec:	pop	{r4, r5, pc}
   27ff0:	add	r0, r5, #280	; 0x118
   27ff4:	bl	31f4c <blkid_probe_get_size@plt+0x2aa34>
   27ff8:	and	r4, r0, r0, asr #31
   27ffc:	mov	r0, r4
   28000:	add	sp, sp, #12
   28004:	pop	{r4, r5, pc}
   28008:	ldr	r2, [pc, #108]	; 2807c <blkid_probe_get_size@plt+0x20b64>
   2800c:	ldr	r1, [pc, #108]	; 28080 <blkid_probe_get_size@plt+0x20b68>
   28010:	add	r2, pc, r2
   28014:	add	r2, r2, #2128	; 0x850
   28018:	add	r2, r2, #12
   2801c:	str	r2, [sp]
   28020:	ldr	r2, [pc, #92]	; 28084 <blkid_probe_get_size@plt+0x20b6c>
   28024:	mov	r3, #242	; 0xf2
   28028:	add	r2, pc, r2
   2802c:	add	r1, pc, r1
   28030:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   28034:	mvn	r4, #21
   28038:	mov	r0, r4
   2803c:	add	sp, sp, #12
   28040:	pop	{r4, r5, pc}
   28044:	ldr	r2, [pc, #60]	; 28088 <blkid_probe_get_size@plt+0x20b70>
   28048:	ldr	r1, [pc, #60]	; 2808c <blkid_probe_get_size@plt+0x20b74>
   2804c:	add	r2, pc, r2
   28050:	add	r2, r2, #2128	; 0x850
   28054:	add	r2, r2, #12
   28058:	str	r2, [sp]
   2805c:	ldr	r2, [pc, #44]	; 28090 <blkid_probe_get_size@plt+0x20b78>
   28060:	mov	r3, #243	; 0xf3
   28064:	add	r2, pc, r2
   28068:	add	r1, pc, r1
   2806c:	mov	r0, #0
   28070:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   28074:	mvn	r4, #15
   28078:	b	27fe4 <blkid_probe_get_size@plt+0x20acc>
   2807c:	strdeq	r1, [r4], -r8
   28080:	andeq	fp, r4, r4, asr #27
   28084:	andeq	sp, r3, ip, ror r4
   28088:			; <UNDEFINED> instruction: 0x000415bc
   2808c:			; <UNDEFINED> instruction: 0x00043bbc
   28090:	andeq	sp, r3, r0, asr #8
   28094:	ldr	r3, [pc, #720]	; 2836c <blkid_probe_get_size@plt+0x20e54>
   28098:	ldr	ip, [pc, #720]	; 28370 <blkid_probe_get_size@plt+0x20e58>
   2809c:	add	r3, pc, r3
   280a0:	push	{r4, r5, r6, r7, lr}
   280a4:	sub	sp, sp, #20
   280a8:	ldr	r5, [r3, ip]
   280ac:	subs	r4, r0, #0
   280b0:	ldr	r3, [r5]
   280b4:	str	r3, [sp, #12]
   280b8:	beq	28238 <blkid_probe_get_size@plt+0x20d20>
   280bc:	mov	r7, r1
   280c0:	ldr	r1, [r4, #280]	; 0x118
   280c4:	mov	r6, r2
   280c8:	cmp	r1, #0
   280cc:	beq	28144 <blkid_probe_get_size@plt+0x20c2c>
   280d0:	mov	r0, r4
   280d4:	bl	1d0d8 <blkid_probe_get_size@plt+0x15bc0>
   280d8:	subs	r1, r0, #0
   280dc:	blt	28160 <blkid_probe_get_size@plt+0x20c48>
   280e0:	ldrb	r3, [r4, #264]	; 0x108
   280e4:	ldr	r2, [r4, #4]
   280e8:	cmp	r3, #0
   280ec:	beq	28190 <blkid_probe_get_size@plt+0x20c78>
   280f0:	ldr	r3, [pc, #636]	; 28374 <blkid_probe_get_size@plt+0x20e5c>
   280f4:	ldr	r0, [r4, #280]	; 0x118
   280f8:	str	r7, [r4, #288]	; 0x120
   280fc:	str	r6, [r4, #292]	; 0x124
   28100:	add	r3, pc, r3
   28104:	str	r4, [sp]
   28108:	add	r1, r4, #284	; 0x11c
   2810c:	bl	4aeb4 <blkid_probe_get_size@plt+0x4399c>
   28110:	cmp	r0, #0
   28114:	blt	2812c <blkid_probe_get_size@plt+0x20c14>
   28118:	ldr	r1, [pc, #600]	; 28378 <blkid_probe_get_size@plt+0x20e60>
   2811c:	ldr	r0, [r4, #284]	; 0x11c
   28120:	add	r1, pc, r1
   28124:	bl	2ff04 <blkid_probe_get_size@plt+0x289ec>
   28128:	mov	r0, #0
   2812c:	ldr	r2, [sp, #12]
   28130:	ldr	r3, [r5]
   28134:	cmp	r2, r3
   28138:	bne	28368 <blkid_probe_get_size@plt+0x20e50>
   2813c:	add	sp, sp, #20
   28140:	pop	{r4, r5, r6, r7, pc}
   28144:	bl	27fb4 <blkid_probe_get_size@plt+0x20a9c>
   28148:	cmp	r0, #0
   2814c:	blt	2812c <blkid_probe_get_size@plt+0x20c14>
   28150:	mov	r0, r4
   28154:	bl	1d0d8 <blkid_probe_get_size@plt+0x15bc0>
   28158:	subs	r1, r0, #0
   2815c:	bge	280e0 <blkid_probe_get_size@plt+0x20bc8>
   28160:	ldr	r3, [pc, #532]	; 2837c <blkid_probe_get_size@plt+0x20e64>
   28164:	add	r3, pc, r3
   28168:	ldr	r3, [r3]
   2816c:	cmp	r3, #6
   28170:	bgt	28200 <blkid_probe_get_size@plt+0x20ce8>
   28174:	rsb	r0, r1, #0
   28178:	uxtb	r0, r0
   2817c:	rsb	r0, r0, #0
   28180:	cmp	r0, #0
   28184:	blt	2812c <blkid_probe_get_size@plt+0x20c14>
   28188:	ldr	r2, [r4, #4]
   2818c:	b	280f0 <blkid_probe_get_size@plt+0x20bd8>
   28190:	add	r3, sp, #16
   28194:	mov	r1, #1
   28198:	mov	ip, #4
   2819c:	mov	r0, r2
   281a0:	str	r1, [r3, #-8]!
   281a4:	mov	r2, #16
   281a8:	str	ip, [sp]
   281ac:	bl	70b0 <setsockopt@plt>
   281b0:	cmp	r0, #0
   281b4:	blt	2826c <blkid_probe_get_size@plt+0x20d54>
   281b8:	mov	r2, #12
   281bc:	add	r1, r4, #8
   281c0:	ldr	r0, [r4, #4]
   281c4:	bl	6ef4 <bind@plt>
   281c8:	cmp	r0, #0
   281cc:	bge	282cc <blkid_probe_get_size@plt+0x20db4>
   281d0:	bl	732c <__errno_location@plt>
   281d4:	ldr	r3, [pc, #420]	; 28380 <blkid_probe_get_size@plt+0x20e68>
   281d8:	add	r3, pc, r3
   281dc:	ldr	r3, [r3]
   281e0:	cmp	r3, #6
   281e4:	ldr	r1, [r0]
   281e8:	bgt	28330 <blkid_probe_get_size@plt+0x20e18>
   281ec:	eor	r0, r1, r1, asr #31
   281f0:	sub	r0, r0, r1, asr #31
   281f4:	uxtb	r0, r0
   281f8:	rsb	r0, r0, #0
   281fc:	b	28180 <blkid_probe_get_size@plt+0x20c68>
   28200:	ldr	r3, [pc, #380]	; 28384 <blkid_probe_get_size@plt+0x20e6c>
   28204:	ldr	r2, [pc, #380]	; 28388 <blkid_probe_get_size@plt+0x20e70>
   28208:	add	r3, pc, r3
   2820c:	add	r2, pc, r2
   28210:	str	r2, [sp, #4]
   28214:	add	r3, r3, #2192	; 0x890
   28218:	ldr	r2, [pc, #364]	; 2838c <blkid_probe_get_size@plt+0x20e74>
   2821c:	add	r3, r3, #4
   28220:	str	r3, [sp]
   28224:	add	r2, pc, r2
   28228:	ldr	r3, [pc, #352]	; 28390 <blkid_probe_get_size@plt+0x20e78>
   2822c:	mov	r0, #7
   28230:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   28234:	b	28180 <blkid_probe_get_size@plt+0x20c68>
   28238:	ldr	r2, [pc, #340]	; 28394 <blkid_probe_get_size@plt+0x20e7c>
   2823c:	ldr	r1, [pc, #340]	; 28398 <blkid_probe_get_size@plt+0x20e80>
   28240:	add	r2, pc, r2
   28244:	add	r2, r2, #2160	; 0x870
   28248:	add	r2, r2, #12
   2824c:	str	r2, [sp]
   28250:	ldr	r2, [pc, #324]	; 2839c <blkid_probe_get_size@plt+0x20e84>
   28254:	mov	r3, #206	; 0xce
   28258:	add	r2, pc, r2
   2825c:	add	r1, pc, r1
   28260:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   28264:	mvn	r0, #21
   28268:	b	2812c <blkid_probe_get_size@plt+0x20c14>
   2826c:	bl	732c <__errno_location@plt>
   28270:	ldr	r0, [r0]
   28274:	cmp	r0, #0
   28278:	ble	281b8 <blkid_probe_get_size@plt+0x20ca0>
   2827c:	ldr	r3, [pc, #284]	; 283a0 <blkid_probe_get_size@plt+0x20e88>
   28280:	add	r3, pc, r3
   28284:	ldr	r3, [r3]
   28288:	cmp	r3, #6
   2828c:	ble	28178 <blkid_probe_get_size@plt+0x20c60>
   28290:	ldr	r3, [pc, #268]	; 283a4 <blkid_probe_get_size@plt+0x20e8c>
   28294:	ldr	r2, [pc, #268]	; 283a8 <blkid_probe_get_size@plt+0x20e90>
   28298:	add	r3, pc, r3
   2829c:	add	r2, pc, r2
   282a0:	str	r2, [sp, #4]
   282a4:	add	r3, r3, #2192	; 0x890
   282a8:	ldr	r2, [pc, #252]	; 283ac <blkid_probe_get_size@plt+0x20e94>
   282ac:	add	r3, r3, #4
   282b0:	rsb	r1, r0, #0
   282b4:	str	r3, [sp]
   282b8:	add	r2, pc, r2
   282bc:	ldr	r3, [pc, #236]	; 283b0 <blkid_probe_get_size@plt+0x20e98>
   282c0:	mov	r0, #7
   282c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   282c8:	b	28180 <blkid_probe_get_size@plt+0x20c68>
   282cc:	mov	r3, #1
   282d0:	strb	r3, [r4, #264]	; 0x108
   282d4:	mov	r0, r4
   282d8:	bl	1d5fc <blkid_probe_get_size@plt+0x160e4>
   282dc:	subs	r1, r0, #0
   282e0:	bge	28188 <blkid_probe_get_size@plt+0x20c70>
   282e4:	ldr	r3, [pc, #200]	; 283b4 <blkid_probe_get_size@plt+0x20e9c>
   282e8:	add	r3, pc, r3
   282ec:	ldr	r3, [r3]
   282f0:	cmp	r3, #6
   282f4:	ble	28174 <blkid_probe_get_size@plt+0x20c5c>
   282f8:	ldr	r3, [pc, #184]	; 283b8 <blkid_probe_get_size@plt+0x20ea0>
   282fc:	ldr	r2, [pc, #184]	; 283bc <blkid_probe_get_size@plt+0x20ea4>
   28300:	add	r3, pc, r3
   28304:	add	r2, pc, r2
   28308:	str	r2, [sp, #4]
   2830c:	add	r3, r3, #2192	; 0x890
   28310:	ldr	r2, [pc, #168]	; 283c0 <blkid_probe_get_size@plt+0x20ea8>
   28314:	add	r3, r3, #4
   28318:	str	r3, [sp]
   2831c:	add	r2, pc, r2
   28320:	ldr	r3, [pc, #156]	; 283c4 <blkid_probe_get_size@plt+0x20eac>
   28324:	mov	r0, #7
   28328:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2832c:	b	28180 <blkid_probe_get_size@plt+0x20c68>
   28330:	ldr	r3, [pc, #144]	; 283c8 <blkid_probe_get_size@plt+0x20eb0>
   28334:	ldr	r2, [pc, #144]	; 283cc <blkid_probe_get_size@plt+0x20eb4>
   28338:	add	r3, pc, r3
   2833c:	add	r2, pc, r2
   28340:	str	r2, [sp, #4]
   28344:	add	r3, r3, #2192	; 0x890
   28348:	ldr	r2, [pc, #128]	; 283d0 <blkid_probe_get_size@plt+0x20eb8>
   2834c:	add	r3, r3, #4
   28350:	str	r3, [sp]
   28354:	add	r2, pc, r2
   28358:	mov	r3, #284	; 0x11c
   2835c:	mov	r0, #7
   28360:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   28364:	b	28180 <blkid_probe_get_size@plt+0x20c68>
   28368:	bl	6fb4 <__stack_chk_fail@plt>
   2836c:	andeq	pc, r6, ip, asr #21
   28370:	andeq	r0, r0, ip, lsr r4
   28374:			; <UNDEFINED> instruction: 0xfffffc30
   28378:	andeq	r3, r4, r8, ror #23
   2837c:	ldrdeq	pc, [r6], -r8
   28380:	andeq	pc, r6, r4, ror #30
   28384:	andeq	r1, r4, r0, lsl #8
   28388:	andeq	r3, r4, r4, lsr #20
   2838c:	andeq	sp, r3, r0, lsl #5
   28390:	andeq	r0, r0, r3, lsl r1
   28394:	andeq	r1, r4, r8, asr #7
   28398:	muleq	r4, r4, fp
   2839c:	andeq	sp, r3, ip, asr #4
   283a0:			; <UNDEFINED> instruction: 0x0006febc
   283a4:	andeq	r1, r4, r0, ror r3
   283a8:	andeq	r3, r4, r4, asr #19
   283ac:	andeq	sp, r3, ip, ror #3
   283b0:	andeq	r0, r0, r9, lsl r1
   283b4:	andeq	pc, r6, r4, asr lr	; <UNPREDICTABLE>
   283b8:	andeq	r1, r4, r8, lsl #6
   283bc:	ldrdeq	r3, [r4], -r4
   283c0:	andeq	sp, r3, r8, lsl #3
   283c4:	andeq	r0, r0, r2, lsr #2
   283c8:	ldrdeq	r1, [r4], -r0
   283cc:	andeq	r3, r4, r4, ror #18
   283d0:	andeq	sp, r3, r0, asr r1
   283d4:	subs	r3, r0, #0
   283d8:	beq	2840c <blkid_probe_get_size@plt+0x20ef4>
   283dc:	ldrb	r0, [r3, #24]
   283e0:	cmp	r0, #0
   283e4:	bxeq	lr
   283e8:	ldr	r2, [r3, #20]
   283ec:	ldr	r1, [r3, #12]
   283f0:	add	r2, r2, #1
   283f4:	cmp	r2, r1
   283f8:	strcc	r2, [r3, #20]
   283fc:	ldrcc	r1, [r3, #8]
   28400:	ldrcc	r0, [r1, r2, lsl #2]
   28404:	movcs	r0, #0
   28408:	bx	lr
   2840c:	ldr	r2, [pc, #60]	; 28450 <blkid_probe_get_size@plt+0x20f38>
   28410:	push	{r4, lr}
   28414:	add	r2, pc, r2
   28418:	sub	sp, sp, #8
   2841c:	add	r2, r2, #2224	; 0x8b0
   28420:	add	r2, r2, #4
   28424:	str	r2, [sp]
   28428:	ldr	r1, [pc, #36]	; 28454 <blkid_probe_get_size@plt+0x20f3c>
   2842c:	ldr	r2, [pc, #36]	; 28458 <blkid_probe_get_size@plt+0x20f40>
   28430:	mov	r4, r3
   28434:	add	r2, pc, r2
   28438:	ldr	r3, [pc, #28]	; 2845c <blkid_probe_get_size@plt+0x20f44>
   2843c:	add	r1, pc, r1
   28440:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   28444:	mov	r0, r4
   28448:	add	sp, sp, #8
   2844c:	pop	{r4, pc}
   28450:	strdeq	r1, [r4], -r4
   28454:	andeq	sp, r3, r8, lsl r8
   28458:	strdeq	sp, [r3], -r0
   2845c:	ldrdeq	r0, [r0], -sl
   28460:	subs	r3, r0, #0
   28464:	beq	2849c <blkid_probe_get_size@plt+0x20f84>
   28468:	ldrb	r2, [r3, #24]
   2846c:	cmp	r2, #0
   28470:	beq	28494 <blkid_probe_get_size@plt+0x20f7c>
   28474:	ldr	r1, [r3, #12]
   28478:	mov	r2, #0
   2847c:	cmp	r1, r2
   28480:	str	r2, [r3, #20]
   28484:	beq	28494 <blkid_probe_get_size@plt+0x20f7c>
   28488:	ldr	r3, [r3, #8]
   2848c:	ldr	r0, [r3]
   28490:	bx	lr
   28494:	mov	r0, #0
   28498:	bx	lr
   2849c:	ldr	r2, [pc, #56]	; 284dc <blkid_probe_get_size@plt+0x20fc4>
   284a0:	push	{r4, lr}
   284a4:	add	r2, pc, r2
   284a8:	sub	sp, sp, #8
   284ac:	add	r2, r2, #2256	; 0x8d0
   284b0:	str	r2, [sp]
   284b4:	ldr	r1, [pc, #36]	; 284e0 <blkid_probe_get_size@plt+0x20fc8>
   284b8:	ldr	r2, [pc, #36]	; 284e4 <blkid_probe_get_size@plt+0x20fcc>
   284bc:	mov	r4, r3
   284c0:	add	r2, pc, r2
   284c4:	mov	r3, #972	; 0x3cc
   284c8:	add	r1, pc, r1
   284cc:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   284d0:	mov	r0, r4
   284d4:	add	sp, sp, #8
   284d8:	pop	{r4, pc}
   284dc:	andeq	r1, r4, r4, ror #2
   284e0:	andeq	sp, r3, ip, lsl #15
   284e4:	andeq	sp, r3, r4, ror #14
   284e8:	ldr	r3, [pc, #360]	; 28658 <blkid_probe_get_size@plt+0x21140>
   284ec:	ldr	r2, [pc, #360]	; 2865c <blkid_probe_get_size@plt+0x21144>
   284f0:	add	r3, pc, r3
   284f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   284f8:	sub	sp, sp, #24
   284fc:	ldr	r6, [r3, r2]
   28500:	subs	r7, r0, #0
   28504:	ldr	r3, [r6]
   28508:	str	r3, [sp, #20]
   2850c:	beq	28620 <blkid_probe_get_size@plt+0x21108>
   28510:	ldr	r8, [r7, #12]
   28514:	cmp	r8, #1
   28518:	bls	2859c <blkid_probe_get_size@plt+0x21084>
   2851c:	ldr	r5, [r7, #8]
   28520:	add	r8, r5, r8, lsl #2
   28524:	add	r4, r5, #4
   28528:	cmp	r4, r8
   2852c:	bcs	2864c <blkid_probe_get_size@plt+0x21134>
   28530:	add	r9, sp, #16
   28534:	add	sl, sp, #12
   28538:	mov	r1, r9
   2853c:	ldr	r0, [r4], #4
   28540:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   28544:	cmp	r0, #0
   28548:	blt	285c0 <blkid_probe_get_size@plt+0x210a8>
   2854c:	mov	r1, sl
   28550:	ldr	r0, [r5]
   28554:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   28558:	cmp	r0, #0
   2855c:	blt	285f0 <blkid_probe_get_size@plt+0x210d8>
   28560:	ldr	r1, [sp, #12]
   28564:	ldr	r0, [sp, #16]
   28568:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   2856c:	ldr	r3, [r4, #-4]
   28570:	cmp	r0, #0
   28574:	strne	r3, [r5, #4]
   28578:	addne	r5, r5, #4
   2857c:	beq	285b4 <blkid_probe_get_size@plt+0x2109c>
   28580:	cmp	r8, r4
   28584:	bhi	28538 <blkid_probe_get_size@plt+0x21020>
   28588:	ldr	r3, [r7, #8]
   2858c:	sub	r3, r5, r3
   28590:	asr	r3, r3, #2
   28594:	add	r3, r3, #1
   28598:	str	r3, [r7, #12]
   2859c:	ldr	r2, [sp, #20]
   285a0:	ldr	r3, [r6]
   285a4:	cmp	r2, r3
   285a8:	bne	28654 <blkid_probe_get_size@plt+0x2113c>
   285ac:	add	sp, sp, #24
   285b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   285b4:	mov	r0, r3
   285b8:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   285bc:	b	28580 <blkid_probe_get_size@plt+0x21068>
   285c0:	ldr	r2, [pc, #152]	; 28660 <blkid_probe_get_size@plt+0x21148>
   285c4:	ldr	r1, [pc, #152]	; 28664 <blkid_probe_get_size@plt+0x2114c>
   285c8:	add	r2, pc, r2
   285cc:	add	r2, r2, #2272	; 0x8e0
   285d0:	add	r2, r2, #12
   285d4:	str	r2, [sp]
   285d8:	ldr	r2, [pc, #136]	; 28668 <blkid_probe_get_size@plt+0x21150>
   285dc:	mov	r3, #808	; 0x328
   285e0:	add	r2, pc, r2
   285e4:	add	r1, pc, r1
   285e8:	mov	r0, #0
   285ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   285f0:	ldr	r2, [pc, #116]	; 2866c <blkid_probe_get_size@plt+0x21154>
   285f4:	ldr	r1, [pc, #116]	; 28670 <blkid_probe_get_size@plt+0x21158>
   285f8:	add	r2, pc, r2
   285fc:	add	r2, r2, #2272	; 0x8e0
   28600:	add	r2, r2, #12
   28604:	str	r2, [sp]
   28608:	ldr	r2, [pc, #100]	; 28674 <blkid_probe_get_size@plt+0x2115c>
   2860c:	ldr	r3, [pc, #100]	; 28678 <blkid_probe_get_size@plt+0x21160>
   28610:	add	r2, pc, r2
   28614:	add	r1, pc, r1
   28618:	mov	r0, #0
   2861c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   28620:	ldr	r2, [pc, #84]	; 2867c <blkid_probe_get_size@plt+0x21164>
   28624:	ldr	r1, [pc, #84]	; 28680 <blkid_probe_get_size@plt+0x21168>
   28628:	add	r2, pc, r2
   2862c:	add	r2, r2, #2272	; 0x8e0
   28630:	add	r2, r2, #12
   28634:	str	r2, [sp]
   28638:	ldr	r2, [pc, #68]	; 28684 <blkid_probe_get_size@plt+0x2116c>
   2863c:	mov	r3, #796	; 0x31c
   28640:	add	r2, pc, r2
   28644:	add	r1, pc, r1
   28648:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2864c:	mov	r3, #1
   28650:	b	28598 <blkid_probe_get_size@plt+0x21080>
   28654:	bl	6fb4 <__stack_chk_fail@plt>
   28658:	andeq	pc, r6, r8, ror r6	; <UNPREDICTABLE>
   2865c:	andeq	r0, r0, ip, lsr r4
   28660:	andeq	r1, r4, r0, asr #32
   28664:	andeq	r3, r4, r8, lsr r7
   28668:	andeq	sp, r3, r4, asr #12
   2866c:	andeq	r1, r4, r0, lsl r0
   28670:	andeq	r3, r4, r4, lsr r7
   28674:	andeq	sp, r3, r4, lsl r6
   28678:	andeq	r0, r0, r9, lsr #6
   2867c:	andeq	r0, r4, r0, ror #31
   28680:	andeq	sp, r3, r0, lsl r6
   28684:	andeq	sp, r3, r4, ror #11
   28688:	ldr	r3, [pc, #292]	; 287b4 <blkid_probe_get_size@plt+0x2129c>
   2868c:	ldr	r2, [pc, #292]	; 287b8 <blkid_probe_get_size@plt+0x212a0>
   28690:	add	r3, pc, r3
   28694:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28698:	sub	sp, sp, #24
   2869c:	ldr	r9, [r3, r2]
   286a0:	subs	r5, r0, #0
   286a4:	ldr	r3, [r9]
   286a8:	str	r3, [sp, #20]
   286ac:	beq	28784 <blkid_probe_get_size@plt+0x2126c>
   286b0:	cmp	r1, #0
   286b4:	mov	r4, r1
   286b8:	moveq	r0, r1
   286bc:	beq	28764 <blkid_probe_get_size@plt+0x2124c>
   286c0:	mvn	r2, #1
   286c4:	mov	r3, #0
   286c8:	add	r6, sp, #8
   286cc:	strd	r2, [sp, #12]
   286d0:	add	r7, sp, #12
   286d4:	b	286f0 <blkid_probe_get_size@plt+0x211d8>
   286d8:	mov	r2, #0
   286dc:	mov	r1, r4
   286e0:	ldr	r0, [sp, #8]
   286e4:	bl	693c <fnmatch@plt>
   286e8:	cmp	r0, #0
   286ec:	beq	28760 <blkid_probe_get_size@plt+0x21248>
   286f0:	mov	r2, r6
   286f4:	mov	r1, r7
   286f8:	ldr	r0, [r5, #32]
   286fc:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   28700:	subs	r8, r0, #0
   28704:	bne	286d8 <blkid_probe_get_size@plt+0x211c0>
   28708:	ldr	sl, [r5, #28]
   2870c:	mov	r0, sl
   28710:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   28714:	cmp	r0, #0
   28718:	beq	2877c <blkid_probe_get_size@plt+0x21264>
   2871c:	mvn	r3, #1
   28720:	str	r8, [sp, #16]
   28724:	str	r3, [sp, #12]
   28728:	b	28748 <blkid_probe_get_size@plt+0x21230>
   2872c:	mov	r2, #0
   28730:	mov	r1, r4
   28734:	ldr	r0, [sp, #8]
   28738:	bl	693c <fnmatch@plt>
   2873c:	cmp	r0, #0
   28740:	beq	2877c <blkid_probe_get_size@plt+0x21264>
   28744:	ldr	sl, [r5, #28]
   28748:	mov	r0, sl
   2874c:	mov	r2, r6
   28750:	mov	r1, r7
   28754:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   28758:	cmp	r0, #0
   2875c:	bne	2872c <blkid_probe_get_size@plt+0x21214>
   28760:	mov	r0, #0
   28764:	ldr	r2, [sp, #20]
   28768:	ldr	r3, [r9]
   2876c:	cmp	r2, r3
   28770:	bne	287b0 <blkid_probe_get_size@plt+0x21298>
   28774:	add	sp, sp, #24
   28778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2877c:	mov	r0, #1
   28780:	b	28764 <blkid_probe_get_size@plt+0x2124c>
   28784:	ldr	r2, [pc, #48]	; 287bc <blkid_probe_get_size@plt+0x212a4>
   28788:	ldr	r1, [pc, #48]	; 287c0 <blkid_probe_get_size@plt+0x212a8>
   2878c:	add	r2, pc, r2
   28790:	add	r2, r2, #2304	; 0x900
   28794:	add	r2, r2, #12
   28798:	str	r2, [sp]
   2879c:	ldr	r2, [pc, #32]	; 287c4 <blkid_probe_get_size@plt+0x212ac>
   287a0:	ldr	r3, [pc, #32]	; 287c8 <blkid_probe_get_size@plt+0x212b0>
   287a4:	add	r2, pc, r2
   287a8:	add	r1, pc, r1
   287ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   287b0:	bl	6fb4 <__stack_chk_fail@plt>
   287b4:	ldrdeq	pc, [r6], -r8
   287b8:	andeq	r0, r0, ip, lsr r4
   287bc:	andeq	r0, r4, ip, ror lr
   287c0:	andeq	sp, r3, ip, lsr #9
   287c4:	andeq	sp, r3, r0, lsl #9
   287c8:	andeq	r0, r0, lr, lsl #4
   287cc:	ldr	r3, [pc, #296]	; 288fc <blkid_probe_get_size@plt+0x213e4>
   287d0:	ldr	ip, [pc, #296]	; 28900 <blkid_probe_get_size@plt+0x213e8>
   287d4:	add	r3, pc, r3
   287d8:	push	{r4, r5, r6, r7, lr}
   287dc:	sub	sp, sp, #20
   287e0:	ldr	r6, [r3, ip]
   287e4:	add	r2, sp, #16
   287e8:	mov	r7, #0
   287ec:	ldr	r3, [r6]
   287f0:	str	r7, [r2, #-8]!
   287f4:	mov	r5, r0
   287f8:	mov	r0, r2
   287fc:	str	r3, [sp, #12]
   28800:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   28804:	cmn	r0, #19
   28808:	beq	28868 <blkid_probe_get_size@plt+0x21350>
   2880c:	cmp	r0, #0
   28810:	mov	r4, r0
   28814:	ldr	r0, [sp, #8]
   28818:	bge	28844 <blkid_probe_get_size@plt+0x2132c>
   2881c:	cmp	r0, #0
   28820:	beq	28828 <blkid_probe_get_size@plt+0x21310>
   28824:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   28828:	ldr	r2, [sp, #12]
   2882c:	ldr	r3, [r6]
   28830:	mov	r0, r4
   28834:	cmp	r2, r3
   28838:	bne	288f8 <blkid_probe_get_size@plt+0x213e0>
   2883c:	add	sp, sp, #20
   28840:	pop	{r4, r5, r6, r7, pc}
   28844:	add	r1, sp, #4
   28848:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   2884c:	cmn	r0, #2
   28850:	mov	r4, r0
   28854:	beq	28868 <blkid_probe_get_size@plt+0x21350>
   28858:	cmp	r0, #0
   2885c:	bge	28874 <blkid_probe_get_size@plt+0x2135c>
   28860:	ldr	r0, [sp, #8]
   28864:	b	2881c <blkid_probe_get_size@plt+0x21304>
   28868:	mov	r4, r7
   2886c:	ldr	r0, [sp, #8]
   28870:	b	2881c <blkid_probe_get_size@plt+0x21304>
   28874:	ldr	r1, [sp, #4]
   28878:	mov	r0, r5
   2887c:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   28880:	subs	r4, r0, #0
   28884:	beq	28860 <blkid_probe_get_size@plt+0x21348>
   28888:	mov	r1, sp
   2888c:	ldr	r0, [sp, #8]
   28890:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   28894:	subs	r4, r0, #0
   28898:	blt	28860 <blkid_probe_get_size@plt+0x21348>
   2889c:	ldr	r1, [sp]
   288a0:	mov	r0, r5
   288a4:	bl	1daec <blkid_probe_get_size@plt+0x165d4>
   288a8:	subs	r4, r0, #0
   288ac:	beq	28860 <blkid_probe_get_size@plt+0x21348>
   288b0:	ldr	r1, [sp, #8]
   288b4:	mov	r0, r5
   288b8:	bl	1dc18 <blkid_probe_get_size@plt+0x16700>
   288bc:	subs	r4, r0, #0
   288c0:	beq	28860 <blkid_probe_get_size@plt+0x21348>
   288c4:	ldr	r1, [sp, #8]
   288c8:	mov	r0, r5
   288cc:	bl	1dea8 <blkid_probe_get_size@plt+0x16990>
   288d0:	cmp	r0, #0
   288d4:	moveq	r4, r0
   288d8:	beq	28860 <blkid_probe_get_size@plt+0x21348>
   288dc:	mov	r0, r5
   288e0:	ldr	r1, [sp, #8]
   288e4:	bl	25428 <blkid_probe_get_size@plt+0x1df10>
   288e8:	subs	r4, r0, #0
   288ec:	movge	r4, #1
   288f0:	ldr	r0, [sp, #8]
   288f4:	b	2881c <blkid_probe_get_size@plt+0x21304>
   288f8:	bl	6fb4 <__stack_chk_fail@plt>
   288fc:	muleq	r6, r4, r3
   28900:	andeq	r0, r0, ip, lsr r4
   28904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28908:	mov	sl, r0
   2890c:	sub	sp, sp, #20
   28910:	mov	r0, r1
   28914:	mov	r8, r1
   28918:	mov	r9, r2
   2891c:	bl	6ca8 <opendir@plt>
   28920:	mov	r5, r0
   28924:	bl	732c <__errno_location@plt>
   28928:	cmp	r5, #0
   2892c:	mov	r6, r0
   28930:	beq	289ec <blkid_probe_get_size@plt+0x214d4>
   28934:	mov	r4, #0
   28938:	str	r4, [r0]
   2893c:	mov	r0, r5
   28940:	bl	6bb8 <readdir64@plt>
   28944:	cmp	r0, #0
   28948:	beq	28a20 <blkid_probe_get_size@plt+0x21508>
   2894c:	ldr	r7, [pc, #388]	; 28ad8 <blkid_probe_get_size@plt+0x215c0>
   28950:	add	r7, pc, r7
   28954:	add	r7, r7, #2320	; 0x910
   28958:	add	r7, r7, #12
   2895c:	b	28978 <blkid_probe_get_size@plt+0x21460>
   28960:	mov	r3, #0
   28964:	str	r3, [r6]
   28968:	mov	r0, r5
   2896c:	bl	6bb8 <readdir64@plt>
   28970:	cmp	r0, #0
   28974:	beq	28a24 <blkid_probe_get_size@plt+0x2150c>
   28978:	ldrb	r3, [r0, #19]
   2897c:	cmp	r3, #46	; 0x2e
   28980:	beq	28960 <blkid_probe_get_size@plt+0x21448>
   28984:	ldrb	r3, [r0, #18]
   28988:	cmp	r3, #4
   2898c:	bne	28960 <blkid_probe_get_size@plt+0x21448>
   28990:	ldr	r1, [pc, #324]	; 28adc <blkid_probe_get_size@plt+0x215c4>
   28994:	add	r2, r0, #19
   28998:	add	r1, pc, r1
   2899c:	mov	r3, #0
   289a0:	mov	r0, r8
   289a4:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   289a8:	subs	fp, r0, #0
   289ac:	mov	r1, fp
   289b0:	mov	r0, sl
   289b4:	beq	28abc <blkid_probe_get_size@plt+0x215a4>
   289b8:	bl	287cc <blkid_probe_get_size@plt+0x212b4>
   289bc:	ldr	r3, [pc, #284]	; 28ae0 <blkid_probe_get_size@plt+0x215c8>
   289c0:	add	r3, pc, r3
   289c4:	cmp	r0, #0
   289c8:	movlt	r4, r0
   289cc:	cmp	r9, #0
   289d0:	bne	28ac4 <blkid_probe_get_size@plt+0x215ac>
   289d4:	ldr	r3, [r3]
   289d8:	cmp	r3, #6
   289dc:	bgt	28a44 <blkid_probe_get_size@plt+0x2152c>
   289e0:	mov	r0, fp
   289e4:	bl	69f0 <free@plt>
   289e8:	b	28960 <blkid_probe_get_size@plt+0x21448>
   289ec:	ldr	r3, [pc, #240]	; 28ae4 <blkid_probe_get_size@plt+0x215cc>
   289f0:	ldr	r1, [r0]
   289f4:	add	r3, pc, r3
   289f8:	ldr	r3, [r3]
   289fc:	cmp	r3, #6
   28a00:	bgt	28a74 <blkid_probe_get_size@plt+0x2155c>
   28a04:	eor	r4, r1, r1, asr #31
   28a08:	sub	r4, r4, r1, asr #31
   28a0c:	uxtb	r4, r4
   28a10:	rsb	r4, r4, #0
   28a14:	mov	r0, r4
   28a18:	add	sp, sp, #20
   28a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a20:	mov	r4, r0
   28a24:	ldr	r3, [r6]
   28a28:	cmp	r3, #0
   28a2c:	rsbgt	r4, r3, #0
   28a30:	mov	r0, r5
   28a34:	bl	6aa4 <closedir@plt>
   28a38:	mov	r0, r4
   28a3c:	add	sp, sp, #20
   28a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a44:	ldr	r3, [pc, #156]	; 28ae8 <blkid_probe_get_size@plt+0x215d0>
   28a48:	ldr	r2, [pc, #156]	; 28aec <blkid_probe_get_size@plt+0x215d4>
   28a4c:	add	r3, pc, r3
   28a50:	str	r3, [sp, #4]
   28a54:	str	fp, [sp, #8]
   28a58:	str	r7, [sp]
   28a5c:	ldr	r3, [pc, #140]	; 28af0 <blkid_probe_get_size@plt+0x215d8>
   28a60:	add	r2, pc, r2
   28a64:	mov	r1, r9
   28a68:	mov	r0, #7
   28a6c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   28a70:	b	289e0 <blkid_probe_get_size@plt+0x214c8>
   28a74:	ldr	r3, [pc, #120]	; 28af4 <blkid_probe_get_size@plt+0x215dc>
   28a78:	ldr	r2, [pc, #120]	; 28af8 <blkid_probe_get_size@plt+0x215e0>
   28a7c:	add	r3, pc, r3
   28a80:	add	r2, pc, r2
   28a84:	str	r2, [sp, #4]
   28a88:	add	r3, r3, #2320	; 0x910
   28a8c:	ldr	r2, [pc, #104]	; 28afc <blkid_probe_get_size@plt+0x215e4>
   28a90:	add	r3, r3, #12
   28a94:	str	r3, [sp]
   28a98:	str	r8, [sp, #8]
   28a9c:	mov	r3, #716	; 0x2cc
   28aa0:	add	r2, pc, r2
   28aa4:	mov	r0, #7
   28aa8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   28aac:	mov	r4, r0
   28ab0:	mov	r0, r4
   28ab4:	add	sp, sp, #20
   28ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28abc:	mvn	r4, #11
   28ac0:	b	28a30 <blkid_probe_get_size@plt+0x21518>
   28ac4:	sub	r2, r9, #1
   28ac8:	mov	r1, fp
   28acc:	mov	r0, sl
   28ad0:	bl	28904 <blkid_probe_get_size@plt+0x213ec>
   28ad4:	b	289e0 <blkid_probe_get_size@plt+0x214c8>
   28ad8:			; <UNDEFINED> instruction: 0x00040cb8
   28adc:	andeq	pc, r4, r8, lsr #12
   28ae0:	andeq	pc, r6, ip, ror r7	; <UNPREDICTABLE>
   28ae4:	andeq	pc, r6, r8, asr #14
   28ae8:	andeq	r3, r4, r8, ror #6
   28aec:	andeq	sp, r3, r4, asr #3
   28af0:	andeq	r0, r0, r3, ror #5
   28af4:	andeq	r0, r4, ip, lsl #23
   28af8:	strdeq	r3, [r4], -r4
   28afc:	andeq	sp, r3, r4, lsl #3
   28b00:	ldr	r3, [pc, #748]	; 28df4 <blkid_probe_get_size@plt+0x218dc>
   28b04:	ldr	r2, [pc, #748]	; 28df8 <blkid_probe_get_size@plt+0x218e0>
   28b08:	add	r3, pc, r3
   28b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28b10:	add	fp, sp, #32
   28b14:	sub	sp, sp, #44	; 0x2c
   28b18:	ldr	r2, [r3, r2]
   28b1c:	subs	r8, r0, #0
   28b20:	str	r2, [fp, #-56]	; 0xffffffc8
   28b24:	ldr	r3, [r2]
   28b28:	str	r3, [fp, #-40]	; 0xffffffd8
   28b2c:	beq	28d5c <blkid_probe_get_size@plt+0x21844>
   28b30:	cmp	r1, #0
   28b34:	mov	r5, r1
   28b38:	beq	28d88 <blkid_probe_get_size@plt+0x21870>
   28b3c:	mov	r0, r1
   28b40:	bl	723c <strlen@plt>
   28b44:	add	r3, r0, #16
   28b48:	cmp	r3, #4194304	; 0x400000
   28b4c:	bhi	28db8 <blkid_probe_get_size@plt+0x218a0>
   28b50:	ldr	r3, [pc, #676]	; 28dfc <blkid_probe_get_size@plt+0x218e4>
   28b54:	add	r0, r0, #30
   28b58:	add	r3, pc, r3
   28b5c:	bic	ip, r0, #7
   28b60:	ldm	r3, {r0, r1, r2, r3}
   28b64:	sub	sp, sp, ip
   28b68:	add	r4, sp, #16
   28b6c:	stm	r4, {r0, r1, r2, r3}
   28b70:	mov	r1, r5
   28b74:	add	r0, r4, #15
   28b78:	bl	6ea0 <strcpy@plt>
   28b7c:	mov	r0, r4
   28b80:	bl	6ca8 <opendir@plt>
   28b84:	mov	r6, r0
   28b88:	bl	732c <__errno_location@plt>
   28b8c:	cmp	r6, #0
   28b90:	mov	r7, r0
   28b94:	beq	28cdc <blkid_probe_get_size@plt+0x217c4>
   28b98:	mov	r4, #0
   28b9c:	str	r4, [r0]
   28ba0:	mov	r0, r6
   28ba4:	bl	6bb8 <readdir64@plt>
   28ba8:	cmp	r0, #0
   28bac:	movne	r5, r4
   28bb0:	subne	r9, fp, #44	; 0x2c
   28bb4:	subne	sl, fp, #48	; 0x30
   28bb8:	beq	28de8 <blkid_probe_get_size@plt+0x218d0>
   28bbc:	ldrb	r3, [r0, #19]
   28bc0:	str	r5, [fp, #-44]	; 0xffffffd4
   28bc4:	cmp	r3, #46	; 0x2e
   28bc8:	beq	28c94 <blkid_probe_get_size@plt+0x2177c>
   28bcc:	add	r1, r0, #19
   28bd0:	mov	r0, r9
   28bd4:	bl	38c30 <blkid_probe_get_size@plt+0x31718>
   28bd8:	cmp	r0, #0
   28bdc:	blt	28d14 <blkid_probe_get_size@plt+0x217fc>
   28be0:	mov	r1, sl
   28be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28be8:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   28bec:	cmp	r0, #0
   28bf0:	blt	28c80 <blkid_probe_get_size@plt+0x21768>
   28bf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   28bf8:	mov	r0, r8
   28bfc:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   28c00:	cmp	r0, #0
   28c04:	beq	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c08:	sub	r1, fp, #52	; 0x34
   28c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28c10:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   28c14:	cmp	r0, #0
   28c18:	blt	28c80 <blkid_probe_get_size@plt+0x21768>
   28c1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   28c20:	mov	r0, r8
   28c24:	bl	1daec <blkid_probe_get_size@plt+0x165d4>
   28c28:	cmp	r0, #0
   28c2c:	beq	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28c34:	mov	r0, r8
   28c38:	bl	1d938 <blkid_probe_get_size@plt+0x16420>
   28c3c:	cmp	r0, #0
   28c40:	beq	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28c48:	mov	r0, r8
   28c4c:	bl	1dc18 <blkid_probe_get_size@plt+0x16700>
   28c50:	cmp	r0, #0
   28c54:	beq	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28c5c:	mov	r0, r8
   28c60:	bl	1dea8 <blkid_probe_get_size@plt+0x16990>
   28c64:	cmp	r0, #0
   28c68:	beq	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28c70:	mov	r0, r8
   28c74:	bl	25428 <blkid_probe_get_size@plt+0x1df10>
   28c78:	cmp	r0, #0
   28c7c:	bge	28c84 <blkid_probe_get_size@plt+0x2176c>
   28c80:	mov	r4, r0
   28c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28c88:	cmp	r0, #0
   28c8c:	beq	28c94 <blkid_probe_get_size@plt+0x2177c>
   28c90:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   28c94:	str	r5, [r7]
   28c98:	mov	r0, r6
   28c9c:	bl	6bb8 <readdir64@plt>
   28ca0:	cmp	r0, #0
   28ca4:	bne	28bbc <blkid_probe_get_size@plt+0x216a4>
   28ca8:	ldr	r3, [r7]
   28cac:	mov	r0, r6
   28cb0:	cmp	r3, #0
   28cb4:	rsbgt	r4, r3, #0
   28cb8:	bl	6aa4 <closedir@plt>
   28cbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28cc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28cc4:	mov	r0, r4
   28cc8:	ldr	r3, [r3]
   28ccc:	cmp	r2, r3
   28cd0:	bne	28df0 <blkid_probe_get_size@plt+0x218d8>
   28cd4:	sub	sp, fp, #32
   28cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28cdc:	ldr	r1, [r0]
   28ce0:	cmp	r1, #2
   28ce4:	moveq	r4, r6
   28ce8:	beq	28cbc <blkid_probe_get_size@plt+0x217a4>
   28cec:	ldr	r3, [pc, #268]	; 28e00 <blkid_probe_get_size@plt+0x218e8>
   28cf0:	add	r3, pc, r3
   28cf4:	ldr	r3, [r3]
   28cf8:	cmp	r3, #6
   28cfc:	bgt	28d20 <blkid_probe_get_size@plt+0x21808>
   28d00:	eor	r4, r1, r1, asr #31
   28d04:	sub	r4, r4, r1, asr #31
   28d08:	uxtb	r4, r4
   28d0c:	rsb	r4, r4, #0
   28d10:	b	28cbc <blkid_probe_get_size@plt+0x217a4>
   28d14:	cmn	r0, #19
   28d18:	movne	r4, r0
   28d1c:	b	28c84 <blkid_probe_get_size@plt+0x2176c>
   28d20:	ldr	r2, [pc, #220]	; 28e04 <blkid_probe_get_size@plt+0x218ec>
   28d24:	ldr	r3, [pc, #220]	; 28e08 <blkid_probe_get_size@plt+0x218f0>
   28d28:	add	r2, pc, r2
   28d2c:	str	r2, [sp, #4]
   28d30:	add	r3, pc, r3
   28d34:	ldr	r2, [pc, #208]	; 28e0c <blkid_probe_get_size@plt+0x218f4>
   28d38:	add	r3, r3, #2384	; 0x950
   28d3c:	str	r4, [sp, #8]
   28d40:	str	r3, [sp]
   28d44:	add	r2, pc, r2
   28d48:	ldr	r3, [pc, #192]	; 28e10 <blkid_probe_get_size@plt+0x218f8>
   28d4c:	mov	r0, #7
   28d50:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   28d54:	mov	r4, r0
   28d58:	b	28cbc <blkid_probe_get_size@plt+0x217a4>
   28d5c:	ldr	r2, [pc, #176]	; 28e14 <blkid_probe_get_size@plt+0x218fc>
   28d60:	ldr	r1, [pc, #176]	; 28e18 <blkid_probe_get_size@plt+0x21900>
   28d64:	add	r2, pc, r2
   28d68:	add	r2, r2, #2352	; 0x930
   28d6c:	add	r2, r2, #4
   28d70:	str	r2, [sp]
   28d74:	ldr	r2, [pc, #160]	; 28e1c <blkid_probe_get_size@plt+0x21904>
   28d78:	ldr	r3, [pc, #160]	; 28e20 <blkid_probe_get_size@plt+0x21908>
   28d7c:	add	r2, pc, r2
   28d80:	add	r1, pc, r1
   28d84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   28d88:	ldr	r3, [pc, #148]	; 28e24 <blkid_probe_get_size@plt+0x2190c>
   28d8c:	mov	r0, r1
   28d90:	add	r3, pc, r3
   28d94:	add	r3, r3, #2352	; 0x930
   28d98:	ldr	r2, [pc, #136]	; 28e28 <blkid_probe_get_size@plt+0x21910>
   28d9c:	ldr	r1, [pc, #136]	; 28e2c <blkid_probe_get_size@plt+0x21914>
   28da0:	add	r3, r3, #4
   28da4:	str	r3, [sp]
   28da8:	add	r2, pc, r2
   28dac:	ldr	r3, [pc, #124]	; 28e30 <blkid_probe_get_size@plt+0x21918>
   28db0:	add	r1, pc, r1
   28db4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   28db8:	ldr	r2, [pc, #116]	; 28e34 <blkid_probe_get_size@plt+0x2191c>
   28dbc:	ldr	r1, [pc, #116]	; 28e38 <blkid_probe_get_size@plt+0x21920>
   28dc0:	add	r2, pc, r2
   28dc4:	add	r2, r2, #2352	; 0x930
   28dc8:	add	r2, r2, #4
   28dcc:	str	r2, [sp]
   28dd0:	ldr	r2, [pc, #100]	; 28e3c <blkid_probe_get_size@plt+0x21924>
   28dd4:	ldr	r3, [pc, #100]	; 28e40 <blkid_probe_get_size@plt+0x21928>
   28dd8:	add	r2, pc, r2
   28ddc:	add	r1, pc, r1
   28de0:	mov	r0, #0
   28de4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   28de8:	mov	r4, r0
   28dec:	b	28ca8 <blkid_probe_get_size@plt+0x21790>
   28df0:	bl	6fb4 <__stack_chk_fail@plt>
   28df4:	andeq	pc, r6, r0, rrx
   28df8:	andeq	r0, r0, ip, lsr r4
   28dfc:	andeq	r1, r4, ip, asr r6
   28e00:	andeq	pc, r6, ip, asr #8
   28e04:	andeq	r3, r4, ip, asr #1
   28e08:	ldrdeq	r0, [r4], -r8
   28e0c:	andeq	ip, r3, r0, ror #29
   28e10:	andeq	r0, r0, lr, asr #4
   28e14:	andeq	r0, r4, r4, lsr #17
   28e18:	ldrdeq	ip, [r3], -r4
   28e1c:	andeq	ip, r3, r8, lsr #29
   28e20:	andeq	r0, r0, r6, asr #4
   28e24:	andeq	r0, r4, r8, ror r8
   28e28:	andeq	ip, r3, ip, ror lr
   28e2c:	andeq	ip, r3, ip, ror #20
   28e30:	andeq	r0, r0, r7, asr #4
   28e34:	andeq	r0, r4, r8, asr #16
   28e38:			; <UNDEFINED> instruction: 0x0003c2bc
   28e3c:	andeq	ip, r3, ip, asr #28
   28e40:	andeq	r0, r0, r9, asr #4
   28e44:	ldr	ip, [pc, #1452]	; 293f8 <blkid_probe_get_size@plt+0x21ee0>
   28e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28e4c:	add	ip, pc, ip
   28e50:	ldr	lr, [pc, #1444]	; 293fc <blkid_probe_get_size@plt+0x21ee4>
   28e54:	add	fp, sp, #32
   28e58:	mov	r7, r2
   28e5c:	sub	sp, sp, #68	; 0x44
   28e60:	mov	r2, ip
   28e64:	ldr	ip, [ip, lr]
   28e68:	mov	r6, r3
   28e6c:	subs	r9, r0, #0
   28e70:	ldr	r3, [ip]
   28e74:	str	ip, [fp, #-80]	; 0xffffffb0
   28e78:	str	r3, [fp, #-40]	; 0xffffffd8
   28e7c:	beq	2928c <blkid_probe_get_size@plt+0x21d74>
   28e80:	ldr	r4, [pc, #1400]	; 29400 <blkid_probe_get_size@plt+0x21ee8>
   28e84:	ldr	r3, [pc, #1400]	; 29404 <blkid_probe_get_size@plt+0x21eec>
   28e88:	add	r4, pc, r4
   28e8c:	add	r3, pc, r3
   28e90:	mov	r0, r1
   28e94:	str	r3, [fp, #-44]	; 0xffffffd4
   28e98:	str	r1, [fp, #-48]	; 0xffffffd0
   28e9c:	str	r4, [fp, #-52]	; 0xffffffcc
   28ea0:	bl	723c <strlen@plt>
   28ea4:	add	r3, r0, #7
   28ea8:	cmp	r3, #4194304	; 0x400000
   28eac:	bhi	292b8 <blkid_probe_get_size@plt+0x21da0>
   28eb0:	add	r0, r0, #21
   28eb4:	bic	r0, r0, #7
   28eb8:	sub	sp, sp, r0
   28ebc:	add	r5, sp, #8
   28ec0:	mov	r1, r4
   28ec4:	mov	r0, r5
   28ec8:	mov	r8, #0
   28ecc:	sub	r4, fp, #52	; 0x34
   28ed0:	add	r8, r8, #1
   28ed4:	bl	6ae0 <stpcpy@plt>
   28ed8:	cmp	r8, #3
   28edc:	beq	28eec <blkid_probe_get_size@plt+0x219d4>
   28ee0:	ldr	r1, [r4, r8, lsl #2]
   28ee4:	cmp	r1, #0
   28ee8:	bne	28ed0 <blkid_probe_get_size@plt+0x219b8>
   28eec:	cmp	r7, #0
   28ef0:	beq	2922c <blkid_probe_get_size@plt+0x21d14>
   28ef4:	mov	r8, #0
   28ef8:	ldr	r3, [pc, #1288]	; 29408 <blkid_probe_get_size@plt+0x21ef0>
   28efc:	str	r7, [fp, #-48]	; 0xffffffd0
   28f00:	mov	r4, r8
   28f04:	mov	r0, r5
   28f08:	sub	r7, fp, #52	; 0x34
   28f0c:	add	r3, pc, r3
   28f10:	str	r5, [fp, #-52]	; 0xffffffcc
   28f14:	str	r3, [fp, #-44]	; 0xffffffd4
   28f18:	bl	723c <strlen@plt>
   28f1c:	add	r8, r8, #1
   28f20:	cmp	r8, #3
   28f24:	add	r4, r4, r0
   28f28:	beq	28f38 <blkid_probe_get_size@plt+0x21a20>
   28f2c:	ldr	r0, [r7, r8, lsl #2]
   28f30:	cmp	r0, #0
   28f34:	bne	28f18 <blkid_probe_get_size@plt+0x21a00>
   28f38:	add	r3, r4, #1
   28f3c:	cmp	r3, #4194304	; 0x400000
   28f40:	bhi	29254 <blkid_probe_get_size@plt+0x21d3c>
   28f44:	add	r4, r4, #15
   28f48:	bic	r4, r4, #7
   28f4c:	sub	sp, sp, r4
   28f50:	add	r7, sp, #8
   28f54:	mov	r0, r7
   28f58:	mov	r4, #0
   28f5c:	sub	r8, fp, #52	; 0x34
   28f60:	mov	r1, r5
   28f64:	add	r4, r4, #1
   28f68:	bl	6ae0 <stpcpy@plt>
   28f6c:	cmp	r4, #3
   28f70:	beq	28f80 <blkid_probe_get_size@plt+0x21a68>
   28f74:	ldr	r1, [r8, r4, lsl #2]
   28f78:	cmp	r1, #0
   28f7c:	bne	28f64 <blkid_probe_get_size@plt+0x21a4c>
   28f80:	mov	r3, #0
   28f84:	cmp	r6, #0
   28f88:	strb	r3, [r0]
   28f8c:	beq	29238 <blkid_probe_get_size@plt+0x21d20>
   28f90:	mov	r5, #0
   28f94:	ldr	r3, [pc, #1136]	; 2940c <blkid_probe_get_size@plt+0x21ef4>
   28f98:	str	r6, [fp, #-48]	; 0xffffffd0
   28f9c:	mov	r4, r5
   28fa0:	mov	r0, r7
   28fa4:	sub	r6, fp, #52	; 0x34
   28fa8:	add	r3, pc, r3
   28fac:	str	r7, [fp, #-52]	; 0xffffffcc
   28fb0:	str	r3, [fp, #-44]	; 0xffffffd4
   28fb4:	bl	723c <strlen@plt>
   28fb8:	add	r5, r5, #1
   28fbc:	cmp	r5, #3
   28fc0:	add	r4, r4, r0
   28fc4:	beq	28fd4 <blkid_probe_get_size@plt+0x21abc>
   28fc8:	ldr	r0, [r6, r5, lsl #2]
   28fcc:	cmp	r0, #0
   28fd0:	bne	28fb4 <blkid_probe_get_size@plt+0x21a9c>
   28fd4:	add	r3, r4, #1
   28fd8:	cmp	r3, #4194304	; 0x400000
   28fdc:	bhi	29318 <blkid_probe_get_size@plt+0x21e00>
   28fe0:	add	r4, r4, #15
   28fe4:	bic	r4, r4, #7
   28fe8:	sub	sp, sp, r4
   28fec:	add	r5, sp, #8
   28ff0:	mov	r0, r5
   28ff4:	mov	r4, #0
   28ff8:	sub	r6, fp, #52	; 0x34
   28ffc:	mov	r1, r7
   29000:	add	r4, r4, #1
   29004:	bl	6ae0 <stpcpy@plt>
   29008:	cmp	r4, #3
   2900c:	beq	2901c <blkid_probe_get_size@plt+0x21b04>
   29010:	ldr	r1, [r6, r4, lsl #2]
   29014:	cmp	r1, #0
   29018:	bne	29000 <blkid_probe_get_size@plt+0x21ae8>
   2901c:	mov	r3, #0
   29020:	strb	r3, [r0]
   29024:	mov	r0, r5
   29028:	bl	6ca8 <opendir@plt>
   2902c:	mov	r7, r0
   29030:	bl	732c <__errno_location@plt>
   29034:	cmp	r7, #0
   29038:	str	r0, [fp, #-72]	; 0xffffffb8
   2903c:	beq	2921c <blkid_probe_get_size@plt+0x21d04>
   29040:	ldr	r3, [fp, #-72]	; 0xffffffb8
   29044:	mov	r4, #0
   29048:	mov	r0, r7
   2904c:	str	r4, [r3]
   29050:	bl	6bb8 <readdir64@plt>
   29054:	subs	r8, r0, #0
   29058:	beq	29348 <blkid_probe_get_size@plt+0x21e30>
   2905c:	ldr	r3, [pc, #940]	; 29410 <blkid_probe_get_size@plt+0x21ef8>
   29060:	ldr	r2, [pc, #940]	; 29414 <blkid_probe_get_size@plt+0x21efc>
   29064:	add	r3, pc, r3
   29068:	add	r2, pc, r2
   2906c:	add	r3, r3, #2448	; 0x990
   29070:	str	r2, [fp, #-84]	; 0xffffffac
   29074:	str	r4, [fp, #-76]	; 0xffffffb4
   29078:	str	r3, [fp, #-88]	; 0xffffffa8
   2907c:	mov	r6, #0
   29080:	mov	r0, r5
   29084:	str	r6, [fp, #-68]	; 0xffffffbc
   29088:	bl	723c <strlen@plt>
   2908c:	add	r4, r8, #19
   29090:	mov	sl, r0
   29094:	mov	r0, r4
   29098:	bl	723c <strlen@plt>
   2909c:	ldrb	r3, [r8, #19]
   290a0:	mov	r8, sp
   290a4:	cmp	r3, #46	; 0x2e
   290a8:	add	r0, sl, r0
   290ac:	add	r0, r0, #9
   290b0:	bic	r0, r0, #7
   290b4:	sub	sp, sp, r0
   290b8:	add	sl, sp, #8
   290bc:	beq	291c0 <blkid_probe_get_size@plt+0x21ca8>
   290c0:	mov	r1, r4
   290c4:	mov	r0, r9
   290c8:	bl	1daec <blkid_probe_get_size@plt+0x165d4>
   290cc:	cmp	r0, r6
   290d0:	beq	291b0 <blkid_probe_get_size@plt+0x21c98>
   290d4:	str	r4, [sp, #4]
   290d8:	str	r5, [sp]
   290dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   290e0:	mvn	r2, #0
   290e4:	mov	r1, #1
   290e8:	mov	r0, sl
   290ec:	bl	7404 <__sprintf_chk@plt>
   290f0:	mov	r1, sl
   290f4:	sub	r0, fp, #68	; 0x44
   290f8:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   290fc:	cmp	r0, #0
   29100:	blt	29240 <blkid_probe_get_size@plt+0x21d28>
   29104:	ldr	r4, [fp, #-68]	; 0xffffffbc
   29108:	cmp	r4, #0
   2910c:	beq	29398 <blkid_probe_get_size@plt+0x21e80>
   29110:	mov	r1, r6
   29114:	mov	r0, r4
   29118:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   2911c:	cmp	r0, #0
   29120:	blt	29284 <blkid_probe_get_size@plt+0x21d6c>
   29124:	ldrb	r3, [r4, #215]	; 0xd7
   29128:	ldrb	r2, [r9, #60]	; 0x3c
   2912c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29130:	and	r3, r3, #1
   29134:	orrs	r4, r2, r3
   29138:	beq	292e8 <blkid_probe_get_size@plt+0x21dd0>
   2913c:	mov	r0, r9
   29140:	bl	1d938 <blkid_probe_get_size@plt+0x16420>
   29144:	cmp	r0, #0
   29148:	beq	291b0 <blkid_probe_get_size@plt+0x21c98>
   2914c:	ldr	sl, [fp, #-68]	; 0xffffffbc
   29150:	cmp	sl, #0
   29154:	beq	293c8 <blkid_probe_get_size@plt+0x21eb0>
   29158:	mvn	r2, #1
   2915c:	mov	r3, #0
   29160:	sub	r6, fp, #64	; 0x40
   29164:	strd	r2, [fp, #-60]	; 0xffffffc4
   29168:	sub	r4, fp, #60	; 0x3c
   2916c:	b	29184 <blkid_probe_get_size@plt+0x21c6c>
   29170:	ldr	r1, [fp, #-64]	; 0xffffffc0
   29174:	mov	r0, sl
   29178:	bl	38330 <blkid_probe_get_size@plt+0x30e18>
   2917c:	cmp	r0, #0
   29180:	beq	291b0 <blkid_probe_get_size@plt+0x21c98>
   29184:	mov	r2, r6
   29188:	mov	r1, r4
   2918c:	ldr	r0, [r9, #52]	; 0x34
   29190:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   29194:	cmp	r0, #0
   29198:	bne	29170 <blkid_probe_get_size@plt+0x21c58>
   2919c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   291a0:	mov	r0, r9
   291a4:	bl	1dc18 <blkid_probe_get_size@plt+0x16700>
   291a8:	cmp	r0, #0
   291ac:	bne	29350 <blkid_probe_get_size@plt+0x21e38>
   291b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   291b4:	cmp	r0, #0
   291b8:	beq	291c0 <blkid_probe_get_size@plt+0x21ca8>
   291bc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   291c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   291c4:	mov	r3, #0
   291c8:	mov	sp, r8
   291cc:	str	r3, [r2]
   291d0:	mov	r0, r7
   291d4:	bl	6bb8 <readdir64@plt>
   291d8:	subs	r8, r0, #0
   291dc:	bne	2907c <blkid_probe_get_size@plt+0x21b64>
   291e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   291e4:	ldr	r3, [r3]
   291e8:	cmp	r3, #0
   291ec:	rsbgt	r3, r3, #0
   291f0:	strgt	r3, [fp, #-76]	; 0xffffffb4
   291f4:	mov	r0, r7
   291f8:	bl	6aa4 <closedir@plt>
   291fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   29200:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29204:	ldr	r0, [fp, #-76]	; 0xffffffb4
   29208:	ldr	r3, [r3]
   2920c:	cmp	r2, r3
   29210:	bne	293f4 <blkid_probe_get_size@plt+0x21edc>
   29214:	sub	sp, fp, #32
   29218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2921c:	ldr	r3, [r0]
   29220:	rsb	r3, r3, #0
   29224:	str	r3, [fp, #-76]	; 0xffffffb4
   29228:	b	291fc <blkid_probe_get_size@plt+0x21ce4>
   2922c:	cmp	r6, #0
   29230:	mov	r7, r5
   29234:	bne	28f90 <blkid_probe_get_size@plt+0x21a78>
   29238:	mov	r5, r7
   2923c:	b	29024 <blkid_probe_get_size@plt+0x21b0c>
   29240:	ldr	r3, [fp, #-76]	; 0xffffffb4
   29244:	cmn	r0, #19
   29248:	movne	r3, r0
   2924c:	str	r3, [fp, #-76]	; 0xffffffb4
   29250:	b	291b0 <blkid_probe_get_size@plt+0x21c98>
   29254:	ldr	r2, [pc, #444]	; 29418 <blkid_probe_get_size@plt+0x21f00>
   29258:	ldr	r1, [pc, #444]	; 2941c <blkid_probe_get_size@plt+0x21f04>
   2925c:	add	r2, pc, r2
   29260:	add	r2, r2, #2400	; 0x960
   29264:	add	r2, r2, #12
   29268:	str	r2, [sp]
   2926c:	ldr	r2, [pc, #428]	; 29420 <blkid_probe_get_size@plt+0x21f08>
   29270:	ldr	r3, [pc, #428]	; 29424 <blkid_probe_get_size@plt+0x21f0c>
   29274:	add	r2, pc, r2
   29278:	add	r1, pc, r1
   2927c:	mov	r0, #0
   29280:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   29284:	str	r0, [fp, #-76]	; 0xffffffb4
   29288:	b	291b0 <blkid_probe_get_size@plt+0x21c98>
   2928c:	ldr	r2, [pc, #404]	; 29428 <blkid_probe_get_size@plt+0x21f10>
   29290:	ldr	r1, [pc, #404]	; 2942c <blkid_probe_get_size@plt+0x21f14>
   29294:	add	r2, pc, r2
   29298:	add	r2, r2, #2400	; 0x960
   2929c:	add	r2, r2, #12
   292a0:	str	r2, [sp]
   292a4:	ldr	r2, [pc, #388]	; 29430 <blkid_probe_get_size@plt+0x21f18>
   292a8:	ldr	r3, [pc, #388]	; 29434 <blkid_probe_get_size@plt+0x21f1c>
   292ac:	add	r2, pc, r2
   292b0:	add	r1, pc, r1
   292b4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   292b8:	ldr	r2, [pc, #376]	; 29438 <blkid_probe_get_size@plt+0x21f20>
   292bc:	ldr	r1, [pc, #376]	; 2943c <blkid_probe_get_size@plt+0x21f24>
   292c0:	add	r2, pc, r2
   292c4:	add	r2, r2, #2400	; 0x960
   292c8:	add	r2, r2, #12
   292cc:	str	r2, [sp]
   292d0:	ldr	r2, [pc, #360]	; 29440 <blkid_probe_get_size@plt+0x21f28>
   292d4:	ldr	r3, [pc, #360]	; 29444 <blkid_probe_get_size@plt+0x21f2c>
   292d8:	add	r2, pc, r2
   292dc:	add	r1, pc, r1
   292e0:	mov	r0, #0
   292e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   292e8:	mov	r0, r1
   292ec:	mov	r1, r4
   292f0:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   292f4:	cmp	r0, #0
   292f8:	bge	291b0 <blkid_probe_get_size@plt+0x21c98>
   292fc:	mov	r1, r4
   29300:	ldr	r0, [fp, #-68]	; 0xffffffbc
   29304:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   29308:	cmp	r0, #0
   2930c:	bge	291b0 <blkid_probe_get_size@plt+0x21c98>
   29310:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29314:	b	2913c <blkid_probe_get_size@plt+0x21c24>
   29318:	ldr	r2, [pc, #296]	; 29448 <blkid_probe_get_size@plt+0x21f30>
   2931c:	ldr	r1, [pc, #296]	; 2944c <blkid_probe_get_size@plt+0x21f34>
   29320:	add	r2, pc, r2
   29324:	add	r2, r2, #2400	; 0x960
   29328:	add	r2, r2, #12
   2932c:	str	r2, [sp]
   29330:	ldr	r2, [pc, #280]	; 29450 <blkid_probe_get_size@plt+0x21f38>
   29334:	mov	r3, #452	; 0x1c4
   29338:	add	r2, pc, r2
   2933c:	add	r1, pc, r1
   29340:	mov	r0, #0
   29344:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   29348:	str	r8, [fp, #-76]	; 0xffffffb4
   2934c:	b	291e0 <blkid_probe_get_size@plt+0x21cc8>
   29350:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29354:	mov	r0, r9
   29358:	bl	1dea8 <blkid_probe_get_size@plt+0x16990>
   2935c:	cmp	r0, #0
   29360:	beq	291b0 <blkid_probe_get_size@plt+0x21c98>
   29364:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29368:	mov	r0, r9
   2936c:	bl	25428 <blkid_probe_get_size@plt+0x1df10>
   29370:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29374:	ldr	r2, [fp, #-76]	; 0xffffffb4
   29378:	cmp	r0, #0
   2937c:	movlt	r2, r0
   29380:	cmp	r3, #0
   29384:	str	r2, [fp, #-76]	; 0xffffffb4
   29388:	beq	291c0 <blkid_probe_get_size@plt+0x21ca8>
   2938c:	mov	r0, r3
   29390:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   29394:	b	291c0 <blkid_probe_get_size@plt+0x21ca8>
   29398:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2939c:	ldr	r2, [pc, #176]	; 29454 <blkid_probe_get_size@plt+0x21f3c>
   293a0:	ldr	r1, [pc, #176]	; 29458 <blkid_probe_get_size@plt+0x21f40>
   293a4:	str	r3, [sp]
   293a8:	mov	r0, r4
   293ac:	ldr	r3, [pc, #168]	; 2945c <blkid_probe_get_size@plt+0x21f44>
   293b0:	add	r2, pc, r2
   293b4:	add	r1, pc, r1
   293b8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   293bc:	mvn	r3, #21
   293c0:	str	r3, [fp, #-76]	; 0xffffffb4
   293c4:	b	291b0 <blkid_probe_get_size@plt+0x21c98>
   293c8:	ldr	r3, [pc, #144]	; 29460 <blkid_probe_get_size@plt+0x21f48>
   293cc:	ldr	r2, [pc, #144]	; 29464 <blkid_probe_get_size@plt+0x21f4c>
   293d0:	add	r3, pc, r3
   293d4:	ldr	r1, [pc, #140]	; 29468 <blkid_probe_get_size@plt+0x21f50>
   293d8:	add	r3, r3, #2480	; 0x9b0
   293dc:	str	r3, [sp]
   293e0:	mov	r0, sl
   293e4:	mov	r3, #392	; 0x188
   293e8:	add	r2, pc, r2
   293ec:	add	r1, pc, r1
   293f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   293f4:	bl	6fb4 <__stack_chk_fail@plt>
   293f8:	andeq	lr, r6, ip, lsl sp
   293fc:	andeq	r0, r0, ip, lsr r4
   29400:	muleq	r3, ip, r5
   29404:	andeq	pc, r4, r4, lsr r1	; <UNPREDICTABLE>
   29408:	strheq	pc, [r4], -r4	; <UNPREDICTABLE>
   2940c:	andeq	pc, r4, r8, lsl r0	; <UNPREDICTABLE>
   29410:	andeq	r0, r4, r4, lsr #11
   29414:	ldrdeq	sp, [r3], -r0
   29418:	andeq	r0, r4, ip, lsr #7
   2941c:	andeq	fp, r3, r0, lsr #28
   29420:			; <UNDEFINED> instruction: 0x0003c9b0
   29424:	andeq	r0, r0, r1, asr #3
   29428:	andeq	r0, r4, r4, ror r3
   2942c:	andeq	ip, r3, r4, lsr #19
   29430:	andeq	ip, r3, r8, ror r9
   29434:			; <UNDEFINED> instruction: 0x000001bb
   29438:	andeq	r0, r4, r8, asr #6
   2943c:			; <UNDEFINED> instruction: 0x0003bdbc
   29440:	andeq	ip, r3, ip, asr #18
   29444:			; <UNDEFINED> instruction: 0x000001be
   29448:	andeq	r0, r4, r8, ror #5
   2944c:	andeq	fp, r3, ip, asr sp
   29450:	andeq	ip, r3, ip, ror #17
   29454:	andeq	ip, r3, r0, lsl #16
   29458:	andeq	r1, r4, ip, lsr #23
   2945c:	andeq	r0, r0, ip, asr r5
   29460:	andeq	r0, r4, r8, lsr r2
   29464:	andeq	ip, r3, ip, lsr r8
   29468:	andeq	r1, r4, r4, ror fp
   2946c:	ldr	ip, [pc, #472]	; 2964c <blkid_probe_get_size@plt+0x22134>
   29470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29474:	add	ip, pc, ip
   29478:	ldr	lr, [pc, #464]	; 29650 <blkid_probe_get_size@plt+0x22138>
   2947c:	add	fp, sp, #32
   29480:	mov	r8, r0
   29484:	sub	sp, sp, #36	; 0x24
   29488:	ldr	r0, [ip, lr]
   2948c:	mov	r9, r1
   29490:	mov	r1, ip
   29494:	mov	ip, r0
   29498:	str	r2, [fp, #-48]	; 0xffffffd0
   2949c:	ldr	r2, [ip]
   294a0:	str	r0, [fp, #-52]	; 0xffffffcc
   294a4:	mov	r0, r9
   294a8:	mov	r7, r3
   294ac:	str	r2, [fp, #-40]	; 0xffffffd8
   294b0:	bl	723c <strlen@plt>
   294b4:	add	r3, r0, #6
   294b8:	cmp	r3, #4194304	; 0x400000
   294bc:	bhi	29610 <blkid_probe_get_size@plt+0x220f8>
   294c0:	ldr	r3, [pc, #396]	; 29654 <blkid_probe_get_size@plt+0x2213c>
   294c4:	add	r0, r0, #20
   294c8:	add	r3, pc, r3
   294cc:	bic	r0, r0, #7
   294d0:	sub	sp, sp, r0
   294d4:	ldm	r3, {r0, r1}
   294d8:	add	r4, sp, #16
   294dc:	str	r0, [r4]
   294e0:	strb	r1, [r4, #4]
   294e4:	add	r0, r4, #5
   294e8:	mov	r1, r9
   294ec:	bl	6ea0 <strcpy@plt>
   294f0:	mov	r0, r4
   294f4:	bl	6ca8 <opendir@plt>
   294f8:	mov	r5, r0
   294fc:	bl	732c <__errno_location@plt>
   29500:	cmp	r5, #0
   29504:	mov	r6, r0
   29508:	beq	29604 <blkid_probe_get_size@plt+0x220ec>
   2950c:	ldr	r3, [pc, #324]	; 29658 <blkid_probe_get_size@plt+0x22140>
   29510:	add	r3, pc, r3
   29514:	ldr	r3, [r3]
   29518:	cmp	r3, #6
   2951c:	bgt	295c8 <blkid_probe_get_size@plt+0x220b0>
   29520:	mov	r4, #0
   29524:	str	r4, [r6]
   29528:	mov	r0, r5
   2952c:	bl	6bb8 <readdir64@plt>
   29530:	subs	sl, r0, #0
   29534:	beq	29640 <blkid_probe_get_size@plt+0x22128>
   29538:	ldrb	r3, [sl, #19]
   2953c:	cmp	r3, #46	; 0x2e
   29540:	beq	2957c <blkid_probe_get_size@plt+0x22064>
   29544:	cmp	r7, #0
   29548:	addeq	r1, sl, #19
   2954c:	movne	r1, r7
   29550:	mov	r0, r8
   29554:	bl	28688 <blkid_probe_get_size@plt+0x21170>
   29558:	cmp	r0, #0
   2955c:	beq	2957c <blkid_probe_get_size@plt+0x22064>
   29560:	add	r2, sl, #19
   29564:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29568:	mov	r1, r9
   2956c:	mov	r0, r8
   29570:	bl	28e44 <blkid_probe_get_size@plt+0x2192c>
   29574:	cmp	r0, #0
   29578:	movlt	r4, r0
   2957c:	mov	r3, #0
   29580:	str	r3, [r6]
   29584:	mov	r0, r5
   29588:	bl	6bb8 <readdir64@plt>
   2958c:	subs	sl, r0, #0
   29590:	bne	29538 <blkid_probe_get_size@plt+0x22020>
   29594:	ldr	r3, [r6]
   29598:	mov	r0, r5
   2959c:	cmp	r3, #0
   295a0:	rsbgt	r4, r3, #0
   295a4:	bl	6aa4 <closedir@plt>
   295a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   295ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   295b0:	mov	r0, r4
   295b4:	ldr	r3, [r3]
   295b8:	cmp	r2, r3
   295bc:	bne	29648 <blkid_probe_get_size@plt+0x22130>
   295c0:	sub	sp, fp, #32
   295c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   295c8:	ldr	r2, [pc, #140]	; 2965c <blkid_probe_get_size@plt+0x22144>
   295cc:	ldr	r3, [pc, #140]	; 29660 <blkid_probe_get_size@plt+0x22148>
   295d0:	add	r2, pc, r2
   295d4:	str	r2, [sp, #4]
   295d8:	add	r3, pc, r3
   295dc:	ldr	r2, [pc, #128]	; 29664 <blkid_probe_get_size@plt+0x2214c>
   295e0:	add	r3, r3, #2512	; 0x9d0
   295e4:	str	r3, [sp]
   295e8:	str	r4, [sp, #8]
   295ec:	ldr	r3, [pc, #116]	; 29668 <blkid_probe_get_size@plt+0x22150>
   295f0:	add	r2, pc, r2
   295f4:	mov	r1, #0
   295f8:	mov	r0, #7
   295fc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   29600:	b	29520 <blkid_probe_get_size@plt+0x22008>
   29604:	ldr	r4, [r6]
   29608:	rsb	r4, r4, #0
   2960c:	b	295a8 <blkid_probe_get_size@plt+0x22090>
   29610:	ldr	r2, [pc, #84]	; 2966c <blkid_probe_get_size@plt+0x22154>
   29614:	ldr	r1, [pc, #84]	; 29670 <blkid_probe_get_size@plt+0x22158>
   29618:	add	r2, pc, r2
   2961c:	add	r2, r2, #2480	; 0x9b0
   29620:	add	r2, r2, #12
   29624:	str	r2, [sp]
   29628:	ldr	r2, [pc, #68]	; 29674 <blkid_probe_get_size@plt+0x2215c>
   2962c:	ldr	r3, [pc, #68]	; 29678 <blkid_probe_get_size@plt+0x22160>
   29630:	add	r2, pc, r2
   29634:	add	r1, pc, r1
   29638:	mov	r0, #0
   2963c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   29640:	mov	r4, sl
   29644:	b	29594 <blkid_probe_get_size@plt+0x2207c>
   29648:	bl	6fb4 <__stack_chk_fail@plt>
   2964c:	strdeq	lr, [r6], -r4
   29650:	andeq	r0, r0, ip, lsr r4
   29654:	andeq	fp, r3, ip, asr pc
   29658:	andeq	lr, r6, ip, lsr #24
   2965c:	andeq	r2, r4, r0, ror #16
   29660:	andeq	r0, r4, r0, lsr r0
   29664:	andeq	ip, r3, r4, lsr r6
   29668:	andeq	r0, r0, sp, lsr #4
   2966c:	strdeq	pc, [r3], -r0
   29670:	andeq	fp, r3, r4, ror #20
   29674:	strdeq	ip, [r3], -r4
   29678:	andeq	r0, r0, r7, lsr #4
   2967c:	ldr	r3, [pc, #932]	; 29a28 <blkid_probe_get_size@plt+0x22510>
   29680:	ldr	r2, [pc, #932]	; 29a2c <blkid_probe_get_size@plt+0x22514>
   29684:	add	r3, pc, r3
   29688:	push	{r4, r5, r6, r7, r8, r9, lr}
   2968c:	sub	sp, sp, #28
   29690:	ldr	r7, [r3, r2]
   29694:	subs	r4, r0, #0
   29698:	ldr	r3, [r7]
   2969c:	str	r3, [sp, #20]
   296a0:	beq	298b0 <blkid_probe_get_size@plt+0x22398>
   296a4:	ldrb	r3, [r4, #24]
   296a8:	cmp	r3, #0
   296ac:	beq	296d8 <blkid_probe_get_size@plt+0x221c0>
   296b0:	ldr	r5, [r4, #4]
   296b4:	cmp	r5, #0
   296b8:	bne	296d8 <blkid_probe_get_size@plt+0x221c0>
   296bc:	ldr	r2, [sp, #20]
   296c0:	ldr	r3, [r7]
   296c4:	mov	r0, r5
   296c8:	cmp	r2, r3
   296cc:	bne	29a24 <blkid_probe_get_size@plt+0x2250c>
   296d0:	add	sp, sp, #28
   296d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   296d8:	ldr	r3, [r4, #12]
   296dc:	cmp	r3, #0
   296e0:	movne	r5, #0
   296e4:	beq	29704 <blkid_probe_get_size@plt+0x221ec>
   296e8:	ldr	r3, [r4, #8]
   296ec:	ldr	r0, [r3, r5, lsl #2]
   296f0:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   296f4:	ldr	r3, [r4, #12]
   296f8:	add	r5, r5, #1
   296fc:	cmp	r5, r3
   29700:	bcc	296e8 <blkid_probe_get_size@plt+0x221d0>
   29704:	ldr	r6, [r4, #52]	; 0x34
   29708:	mov	r5, #0
   2970c:	mov	r0, r6
   29710:	str	r5, [r4, #12]
   29714:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   29718:	cmp	r0, r5
   2971c:	bne	297b4 <blkid_probe_get_size@plt+0x2229c>
   29720:	ldr	r0, [r4, #56]	; 0x38
   29724:	cmp	r0, #0
   29728:	beq	29800 <blkid_probe_get_size@plt+0x222e8>
   2972c:	add	r1, sp, #12
   29730:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   29734:	subs	r5, r0, #0
   29738:	blt	29770 <blkid_probe_get_size@plt+0x22258>
   2973c:	ldr	r1, [sp, #12]
   29740:	mov	r0, r4
   29744:	bl	287cc <blkid_probe_get_size@plt+0x212b4>
   29748:	mov	r2, #256	; 0x100
   2974c:	ldr	r1, [sp, #12]
   29750:	cmp	r0, #0
   29754:	movlt	r6, r0
   29758:	mov	r0, r4
   2975c:	movge	r6, r5
   29760:	bl	28904 <blkid_probe_get_size@plt+0x213ec>
   29764:	subs	r5, r0, #0
   29768:	blt	29770 <blkid_probe_get_size@plt+0x22258>
   2976c:	and	r5, r6, r6, asr #31
   29770:	ldr	r1, [r4, #12]
   29774:	cmp	r1, #1
   29778:	bls	29798 <blkid_probe_get_size@plt+0x22280>
   2977c:	ldr	r0, [r4, #8]
   29780:	cmp	r0, #0
   29784:	beq	299fc <blkid_probe_get_size@plt+0x224e4>
   29788:	ldr	r3, [pc, #672]	; 29a30 <blkid_probe_get_size@plt+0x22518>
   2978c:	mov	r2, #4
   29790:	add	r3, pc, r3
   29794:	bl	6a44 <qsort@plt>
   29798:	mov	r0, r4
   2979c:	bl	284e8 <blkid_probe_get_size@plt+0x20fd0>
   297a0:	mov	r2, #1
   297a4:	mov	r3, #0
   297a8:	strb	r2, [r4, #24]
   297ac:	str	r3, [r4, #4]
   297b0:	b	296bc <blkid_probe_get_size@plt+0x221a4>
   297b4:	mvn	r3, #1
   297b8:	str	r5, [sp, #16]
   297bc:	str	r3, [sp, #12]
   297c0:	add	r9, sp, #8
   297c4:	add	r8, sp, #12
   297c8:	b	297e4 <blkid_probe_get_size@plt+0x222cc>
   297cc:	ldr	r1, [sp, #8]
   297d0:	mov	r0, r4
   297d4:	bl	28b00 <blkid_probe_get_size@plt+0x215e8>
   297d8:	ldr	r6, [r4, #52]	; 0x34
   297dc:	cmp	r0, #0
   297e0:	movlt	r5, r0
   297e4:	mov	r0, r6
   297e8:	mov	r2, r9
   297ec:	mov	r1, r8
   297f0:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   297f4:	cmp	r0, #0
   297f8:	bne	297cc <blkid_probe_get_size@plt+0x222b4>
   297fc:	b	29770 <blkid_probe_get_size@plt+0x22258>
   29800:	ldr	r3, [pc, #556]	; 29a34 <blkid_probe_get_size@plt+0x2251c>
   29804:	add	r3, pc, r3
   29808:	ldr	r3, [r3]
   2980c:	cmp	r3, #6
   29810:	bgt	299c0 <blkid_probe_get_size@plt+0x224a8>
   29814:	ldr	r0, [pc, #540]	; 29a38 <blkid_probe_get_size@plt+0x22520>
   29818:	mov	r1, #0
   2981c:	add	r0, pc, r0
   29820:	bl	6ff0 <access@plt>
   29824:	mov	r3, #0
   29828:	cmp	r0, #0
   2982c:	blt	298dc <blkid_probe_get_size@plt+0x223c4>
   29830:	ldr	r2, [pc, #516]	; 29a3c <blkid_probe_get_size@plt+0x22524>
   29834:	ldr	r1, [pc, #516]	; 29a40 <blkid_probe_get_size@plt+0x22528>
   29838:	add	r2, pc, r2
   2983c:	add	r1, pc, r1
   29840:	mov	r0, r4
   29844:	bl	2946c <blkid_probe_get_size@plt+0x21f54>
   29848:	subs	r1, r0, #0
   2984c:	movge	r5, #0
   29850:	bge	29770 <blkid_probe_get_size@plt+0x22258>
   29854:	ldr	r3, [pc, #488]	; 29a44 <blkid_probe_get_size@plt+0x2252c>
   29858:	add	r3, pc, r3
   2985c:	ldr	r3, [r3]
   29860:	cmp	r3, #6
   29864:	rsble	r6, r1, #0
   29868:	uxtble	r6, r6
   2986c:	rsble	r6, r6, #0
   29870:	ble	2976c <blkid_probe_get_size@plt+0x22254>
   29874:	ldr	r3, [pc, #460]	; 29a48 <blkid_probe_get_size@plt+0x22530>
   29878:	ldr	r2, [pc, #460]	; 29a4c <blkid_probe_get_size@plt+0x22534>
   2987c:	add	r3, pc, r3
   29880:	add	r2, pc, r2
   29884:	str	r2, [sp, #4]
   29888:	add	r3, r3, #2560	; 0xa00
   2988c:	ldr	r2, [pc, #444]	; 29a50 <blkid_probe_get_size@plt+0x22538>
   29890:	add	r3, r3, #4
   29894:	str	r3, [sp]
   29898:	add	r2, pc, r2
   2989c:	ldr	r3, [pc, #432]	; 29a54 <blkid_probe_get_size@plt+0x2253c>
   298a0:	mov	r0, #7
   298a4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   298a8:	mov	r6, r0
   298ac:	b	2976c <blkid_probe_get_size@plt+0x22254>
   298b0:	ldr	r2, [pc, #416]	; 29a58 <blkid_probe_get_size@plt+0x22540>
   298b4:	ldr	r1, [pc, #416]	; 29a5c <blkid_probe_get_size@plt+0x22544>
   298b8:	add	r2, pc, r2
   298bc:	add	r2, r2, #2528	; 0x9e0
   298c0:	add	r2, r2, #4
   298c4:	str	r2, [sp]
   298c8:	ldr	r2, [pc, #400]	; 29a60 <blkid_probe_get_size@plt+0x22548>
   298cc:	mov	r3, #824	; 0x338
   298d0:	add	r2, pc, r2
   298d4:	add	r1, pc, r1
   298d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   298dc:	ldr	r2, [pc, #384]	; 29a64 <blkid_probe_get_size@plt+0x2254c>
   298e0:	ldr	r1, [pc, #384]	; 29a68 <blkid_probe_get_size@plt+0x22550>
   298e4:	add	r2, pc, r2
   298e8:	add	r1, pc, r1
   298ec:	mov	r0, r4
   298f0:	bl	2946c <blkid_probe_get_size@plt+0x21f54>
   298f4:	subs	r6, r0, #0
   298f8:	movge	r6, #0
   298fc:	blt	29970 <blkid_probe_get_size@plt+0x22458>
   29900:	ldr	r1, [pc, #356]	; 29a6c <blkid_probe_get_size@plt+0x22554>
   29904:	mov	r3, #0
   29908:	mov	r2, r3
   2990c:	add	r1, pc, r1
   29910:	mov	r0, r4
   29914:	bl	2946c <blkid_probe_get_size@plt+0x21f54>
   29918:	subs	r5, r0, #0
   2991c:	bge	2976c <blkid_probe_get_size@plt+0x22254>
   29920:	ldr	r3, [pc, #328]	; 29a70 <blkid_probe_get_size@plt+0x22558>
   29924:	add	r3, pc, r3
   29928:	ldr	r3, [r3]
   2992c:	cmp	r3, #6
   29930:	ble	29770 <blkid_probe_get_size@plt+0x22258>
   29934:	ldr	r3, [pc, #312]	; 29a74 <blkid_probe_get_size@plt+0x2255c>
   29938:	ldr	r2, [pc, #312]	; 29a78 <blkid_probe_get_size@plt+0x22560>
   2993c:	add	r3, pc, r3
   29940:	add	r2, pc, r2
   29944:	str	r2, [sp, #4]
   29948:	add	r3, r3, #2560	; 0xa00
   2994c:	ldr	r2, [pc, #296]	; 29a7c <blkid_probe_get_size@plt+0x22564>
   29950:	add	r3, r3, #4
   29954:	str	r3, [sp]
   29958:	add	r2, pc, r2
   2995c:	ldr	r3, [pc, #284]	; 29a80 <blkid_probe_get_size@plt+0x22568>
   29960:	mov	r1, r5
   29964:	mov	r0, #7
   29968:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2996c:	b	29770 <blkid_probe_get_size@plt+0x22258>
   29970:	ldr	r3, [pc, #268]	; 29a84 <blkid_probe_get_size@plt+0x2256c>
   29974:	add	r3, pc, r3
   29978:	ldr	r3, [r3]
   2997c:	cmp	r3, #6
   29980:	ble	29900 <blkid_probe_get_size@plt+0x223e8>
   29984:	ldr	r3, [pc, #252]	; 29a88 <blkid_probe_get_size@plt+0x22570>
   29988:	ldr	r2, [pc, #252]	; 29a8c <blkid_probe_get_size@plt+0x22574>
   2998c:	add	r3, pc, r3
   29990:	add	r2, pc, r2
   29994:	str	r2, [sp, #4]
   29998:	add	r3, r3, #2560	; 0xa00
   2999c:	ldr	r2, [pc, #236]	; 29a90 <blkid_probe_get_size@plt+0x22578>
   299a0:	add	r3, r3, #4
   299a4:	str	r3, [sp]
   299a8:	add	r2, pc, r2
   299ac:	ldr	r3, [pc, #224]	; 29a94 <blkid_probe_get_size@plt+0x2257c>
   299b0:	mov	r1, r6
   299b4:	mov	r0, #7
   299b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   299bc:	b	29900 <blkid_probe_get_size@plt+0x223e8>
   299c0:	ldr	r3, [pc, #208]	; 29a98 <blkid_probe_get_size@plt+0x22580>
   299c4:	ldr	r2, [pc, #208]	; 29a9c <blkid_probe_get_size@plt+0x22584>
   299c8:	add	r3, pc, r3
   299cc:	add	r2, pc, r2
   299d0:	str	r2, [sp, #4]
   299d4:	add	r3, r3, #2560	; 0xa00
   299d8:	ldr	r2, [pc, #192]	; 29aa0 <blkid_probe_get_size@plt+0x22588>
   299dc:	add	r3, r3, #4
   299e0:	mov	r1, r0
   299e4:	str	r3, [sp]
   299e8:	add	r2, pc, r2
   299ec:	ldr	r3, [pc, #176]	; 29aa4 <blkid_probe_get_size@plt+0x2258c>
   299f0:	mov	r0, #7
   299f4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   299f8:	b	29814 <blkid_probe_get_size@plt+0x222fc>
   299fc:	ldr	r3, [pc, #164]	; 29aa8 <blkid_probe_get_size@plt+0x22590>
   29a00:	ldr	r2, [pc, #164]	; 29aac <blkid_probe_get_size@plt+0x22594>
   29a04:	add	r3, pc, r3
   29a08:	ldr	r1, [pc, #160]	; 29ab0 <blkid_probe_get_size@plt+0x22598>
   29a0c:	add	r3, r3, #2592	; 0xa20
   29a10:	str	r3, [sp]
   29a14:	add	r2, pc, r2
   29a18:	mov	r3, #107	; 0x6b
   29a1c:	add	r1, pc, r1
   29a20:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   29a24:	bl	6fb4 <__stack_chk_fail@plt>
   29a28:	andeq	lr, r6, r4, ror #9
   29a2c:	andeq	r0, r0, ip, lsr r4
   29a30:			; <UNDEFINED> instruction: 0xffff3f20
   29a34:	andeq	lr, r6, r8, lsr r9
   29a38:	andeq	pc, r3, r4
   29a3c:	muleq	r4, ip, sl
   29a40:	andeq	fp, r3, r4, lsr #31
   29a44:	andeq	lr, r6, r4, ror #17
   29a48:	andeq	pc, r3, ip, lsl #27
   29a4c:	strdeq	r2, [r4], -r8
   29a50:	andeq	ip, r3, ip, lsl #7
   29a54:	andeq	r0, r0, r5, lsl #6
   29a58:	andeq	pc, r3, r0, asr sp	; <UNPREDICTABLE>
   29a5c:	andeq	ip, r3, r0, lsl #7
   29a60:	andeq	ip, r3, r4, asr r3
   29a64:	strdeq	lr, [r4], -r0
   29a68:	andeq	sp, r3, ip, lsr r5
   29a6c:	strdeq	pc, [r3], -r0
   29a70:	andeq	lr, r6, r8, lsl r8
   29a74:	andeq	pc, r3, ip, asr #25
   29a78:	andeq	r2, r4, r4, lsr #11
   29a7c:	andeq	ip, r3, ip, asr #5
   29a80:	andeq	r0, r0, r1, lsl r3
   29a84:	andeq	lr, r6, r8, asr #15
   29a88:	andeq	pc, r3, ip, ror ip	; <UNPREDICTABLE>
   29a8c:	andeq	r2, r4, r0, lsr #10
   29a90:	andeq	ip, r3, ip, ror r2
   29a94:	andeq	r0, r0, fp, lsl #6
   29a98:	andeq	pc, r3, r0, asr #24
   29a9c:	andeq	r2, r4, r8, lsl #9
   29aa0:	andeq	ip, r3, ip, lsr r2
   29aa4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   29aa8:	andeq	pc, r3, r4, lsl #24
   29aac:	andeq	lr, r3, ip, lsl #29
   29ab0:	andeq	sl, r4, r0, asr #26
   29ab4:	push	{r4, r5, lr}
   29ab8:	subs	r4, r0, #0
   29abc:	sub	sp, sp, #12
   29ac0:	beq	29af8 <blkid_probe_get_size@plt+0x225e0>
   29ac4:	cmp	r1, #0
   29ac8:	mov	r5, r1
   29acc:	beq	29b34 <blkid_probe_get_size@plt+0x2261c>
   29ad0:	ldr	r0, [r4, #56]	; 0x38
   29ad4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   29ad8:	mov	r0, r5
   29adc:	bl	253c4 <blkid_probe_get_size@plt+0x1deac>
   29ae0:	mov	r3, #0
   29ae4:	strb	r3, [r4, #24]
   29ae8:	str	r0, [r4, #56]	; 0x38
   29aec:	mov	r0, r3
   29af0:	add	sp, sp, #12
   29af4:	pop	{r4, r5, pc}
   29af8:	ldr	r2, [pc, #108]	; 29b6c <blkid_probe_get_size@plt+0x22654>
   29afc:	ldr	r1, [pc, #108]	; 29b70 <blkid_probe_get_size@plt+0x22658>
   29b00:	add	r2, pc, r2
   29b04:	add	r2, r2, #2592	; 0xa20
   29b08:	add	r2, r2, #12
   29b0c:	str	r2, [sp]
   29b10:	ldr	r2, [pc, #92]	; 29b74 <blkid_probe_get_size@plt+0x2265c>
   29b14:	mov	r3, #221	; 0xdd
   29b18:	add	r2, pc, r2
   29b1c:	add	r1, pc, r1
   29b20:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29b24:	mvn	r3, #21
   29b28:	mov	r0, r3
   29b2c:	add	sp, sp, #12
   29b30:	pop	{r4, r5, pc}
   29b34:	ldr	r3, [pc, #60]	; 29b78 <blkid_probe_get_size@plt+0x22660>
   29b38:	mov	r0, r1
   29b3c:	add	r3, pc, r3
   29b40:	add	r3, r3, #2592	; 0xa20
   29b44:	ldr	r2, [pc, #48]	; 29b7c <blkid_probe_get_size@plt+0x22664>
   29b48:	ldr	r1, [pc, #48]	; 29b80 <blkid_probe_get_size@plt+0x22668>
   29b4c:	add	r3, r3, #12
   29b50:	str	r3, [sp]
   29b54:	add	r2, pc, r2
   29b58:	mov	r3, #222	; 0xde
   29b5c:	add	r1, pc, r1
   29b60:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29b64:	mvn	r3, #21
   29b68:	b	29aec <blkid_probe_get_size@plt+0x225d4>
   29b6c:	andeq	pc, r3, r8, lsl #22
   29b70:	andeq	ip, r3, r8, lsr r1
   29b74:	andeq	ip, r3, ip, lsl #2
   29b78:	andeq	pc, r3, ip, asr #21
   29b7c:	ldrdeq	ip, [r3], -r0
   29b80:	andeq	sp, r3, ip, ror #9
   29b84:	push	{r4, r5, r6, r7, r8, lr}
   29b88:	subs	r8, r0, #0
   29b8c:	sub	sp, sp, #8
   29b90:	beq	29c48 <blkid_probe_get_size@plt+0x22730>
   29b94:	cmp	r1, #0
   29b98:	mov	r6, r1
   29b9c:	beq	29c84 <blkid_probe_get_size@plt+0x2276c>
   29ba0:	cmp	r3, #0
   29ba4:	mov	r4, r2
   29ba8:	addne	r7, r8, #36	; 0x24
   29bac:	beq	29c40 <blkid_probe_get_size@plt+0x22728>
   29bb0:	mov	r2, #0
   29bb4:	mov	r1, r2
   29bb8:	mov	r0, r7
   29bbc:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   29bc0:	subs	r5, r0, #0
   29bc4:	movlt	r4, #0
   29bc8:	movlt	r6, r4
   29bcc:	blt	29c24 <blkid_probe_get_size@plt+0x2270c>
   29bd0:	mov	r0, r6
   29bd4:	bl	74e8 <strdup@plt>
   29bd8:	subs	r6, r0, #0
   29bdc:	beq	29cc0 <blkid_probe_get_size@plt+0x227a8>
   29be0:	cmp	r4, #0
   29be4:	beq	29bf8 <blkid_probe_get_size@plt+0x226e0>
   29be8:	mov	r0, r4
   29bec:	bl	74e8 <strdup@plt>
   29bf0:	subs	r4, r0, #0
   29bf4:	beq	29ccc <blkid_probe_get_size@plt+0x227b4>
   29bf8:	ldr	r0, [r7]
   29bfc:	mov	r2, r4
   29c00:	mov	r1, r6
   29c04:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   29c08:	subs	r5, r0, #0
   29c0c:	blt	29c24 <blkid_probe_get_size@plt+0x2270c>
   29c10:	mov	r3, #0
   29c14:	mov	r4, r3
   29c18:	mov	r6, r3
   29c1c:	mov	r5, r3
   29c20:	strb	r3, [r8, #24]
   29c24:	mov	r0, r4
   29c28:	bl	69f0 <free@plt>
   29c2c:	mov	r0, r6
   29c30:	bl	69f0 <free@plt>
   29c34:	mov	r0, r5
   29c38:	add	sp, sp, #8
   29c3c:	pop	{r4, r5, r6, r7, r8, pc}
   29c40:	add	r7, r8, #40	; 0x28
   29c44:	b	29bb0 <blkid_probe_get_size@plt+0x22698>
   29c48:	ldr	r3, [pc, #132]	; 29cd4 <blkid_probe_get_size@plt+0x227bc>
   29c4c:	ldr	r2, [pc, #132]	; 29cd8 <blkid_probe_get_size@plt+0x227c0>
   29c50:	add	r3, pc, r3
   29c54:	add	r3, r3, #2640	; 0xa50
   29c58:	ldr	r1, [pc, #124]	; 29cdc <blkid_probe_get_size@plt+0x227c4>
   29c5c:	add	r3, r3, #4
   29c60:	str	r3, [sp]
   29c64:	add	r2, pc, r2
   29c68:	mov	r3, #115	; 0x73
   29c6c:	add	r1, pc, r1
   29c70:	mov	r4, r8
   29c74:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29c78:	mov	r6, r8
   29c7c:	mvn	r5, #21
   29c80:	b	29c24 <blkid_probe_get_size@plt+0x2270c>
   29c84:	ldr	r2, [pc, #84]	; 29ce0 <blkid_probe_get_size@plt+0x227c8>
   29c88:	ldr	r1, [pc, #84]	; 29ce4 <blkid_probe_get_size@plt+0x227cc>
   29c8c:	add	r2, pc, r2
   29c90:	add	r2, r2, #2640	; 0xa50
   29c94:	add	r2, r2, #4
   29c98:	str	r2, [sp]
   29c9c:	ldr	r2, [pc, #68]	; 29ce8 <blkid_probe_get_size@plt+0x227d0>
   29ca0:	mov	r3, #116	; 0x74
   29ca4:	add	r2, pc, r2
   29ca8:	add	r1, pc, r1
   29cac:	mov	r0, r6
   29cb0:	mov	r4, r6
   29cb4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29cb8:	mvn	r5, #21
   29cbc:	b	29c24 <blkid_probe_get_size@plt+0x2270c>
   29cc0:	mov	r4, r6
   29cc4:	mvn	r5, #11
   29cc8:	b	29c24 <blkid_probe_get_size@plt+0x2270c>
   29ccc:	mvn	r5, #11
   29cd0:	b	29c24 <blkid_probe_get_size@plt+0x2270c>
   29cd4:			; <UNDEFINED> instruction: 0x0003f9b8
   29cd8:	andeq	fp, r3, r0, asr #31
   29cdc:	andeq	fp, r3, r8, ror #31
   29ce0:	andeq	pc, r3, ip, ror r9	; <UNPREDICTABLE>
   29ce4:	andeq	r2, r4, r0, ror r2
   29ce8:	andeq	fp, r3, r0, lsl #31
   29cec:	push	{r4, r5, r6, lr}
   29cf0:	subs	r5, r0, #0
   29cf4:	sub	sp, sp, #8
   29cf8:	beq	29d54 <blkid_probe_get_size@plt+0x2283c>
   29cfc:	cmp	r1, #0
   29d00:	mov	r4, r1
   29d04:	beq	29d8c <blkid_probe_get_size@plt+0x22874>
   29d08:	cmp	r2, #0
   29d0c:	addne	r6, r5, #28
   29d10:	beq	29d4c <blkid_probe_get_size@plt+0x22834>
   29d14:	mov	r1, #0
   29d18:	mov	r0, r6
   29d1c:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   29d20:	cmp	r0, #0
   29d24:	blt	29d44 <blkid_probe_get_size@plt+0x2282c>
   29d28:	mov	r1, r4
   29d2c:	ldr	r0, [r6]
   29d30:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   29d34:	cmp	r0, #0
   29d38:	movge	r3, #0
   29d3c:	movge	r0, r3
   29d40:	strbge	r3, [r5, #24]
   29d44:	add	sp, sp, #8
   29d48:	pop	{r4, r5, r6, pc}
   29d4c:	add	r6, r5, #32
   29d50:	b	29d14 <blkid_probe_get_size@plt+0x227fc>
   29d54:	ldr	r2, [pc, #104]	; 29dc4 <blkid_probe_get_size@plt+0x228ac>
   29d58:	ldr	r1, [pc, #104]	; 29dc8 <blkid_probe_get_size@plt+0x228b0>
   29d5c:	add	r2, pc, r2
   29d60:	add	r2, r2, #2672	; 0xa70
   29d64:	add	r2, r2, #12
   29d68:	str	r2, [sp]
   29d6c:	ldr	r2, [pc, #88]	; 29dcc <blkid_probe_get_size@plt+0x228b4>
   29d70:	mov	r3, #89	; 0x59
   29d74:	add	r2, pc, r2
   29d78:	add	r1, pc, r1
   29d7c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29d80:	mvn	r0, #21
   29d84:	add	sp, sp, #8
   29d88:	pop	{r4, r5, r6, pc}
   29d8c:	ldr	r3, [pc, #60]	; 29dd0 <blkid_probe_get_size@plt+0x228b8>
   29d90:	mov	r0, r1
   29d94:	add	r3, pc, r3
   29d98:	add	r3, r3, #2672	; 0xa70
   29d9c:	ldr	r2, [pc, #48]	; 29dd4 <blkid_probe_get_size@plt+0x228bc>
   29da0:	ldr	r1, [pc, #48]	; 29dd8 <blkid_probe_get_size@plt+0x228c0>
   29da4:	add	r3, r3, #12
   29da8:	str	r3, [sp]
   29dac:	add	r2, pc, r2
   29db0:	mov	r3, #90	; 0x5a
   29db4:	add	r1, pc, r1
   29db8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   29dbc:	mvn	r0, #21
   29dc0:	b	29d44 <blkid_probe_get_size@plt+0x2282c>
   29dc4:	andeq	pc, r3, ip, lsr #17
   29dc8:	ldrdeq	fp, [r3], -ip
   29dcc:			; <UNDEFINED> instruction: 0x0003beb0
   29dd0:	andeq	pc, r3, r4, ror r8	; <UNPREDICTABLE>
   29dd4:	andeq	fp, r3, r8, ror lr
   29dd8:	andeq	fp, r3, ip, lsr #20
   29ddc:	push	{r4, r5, r6, lr}
   29de0:	subs	r5, r0, #0
   29de4:	ldr	r6, [pc, #276]	; 29f00 <blkid_probe_get_size@plt+0x229e8>
   29de8:	sub	sp, sp, #8
   29dec:	add	r6, pc, r6
   29df0:	beq	29ec8 <blkid_probe_get_size@plt+0x229b0>
   29df4:	ldr	r0, [r5]
   29df8:	cmp	r0, #0
   29dfc:	beq	29ed4 <blkid_probe_get_size@plt+0x229bc>
   29e00:	sub	r4, r0, #1
   29e04:	cmp	r4, #0
   29e08:	str	r4, [r5]
   29e0c:	bne	29ec8 <blkid_probe_get_size@plt+0x229b0>
   29e10:	ldr	r3, [r5, #12]
   29e14:	cmp	r3, #0
   29e18:	beq	29e38 <blkid_probe_get_size@plt+0x22920>
   29e1c:	ldr	r3, [r5, #8]
   29e20:	ldr	r0, [r3, r4, lsl #2]
   29e24:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   29e28:	ldr	r3, [r5, #12]
   29e2c:	add	r4, r4, #1
   29e30:	cmp	r4, r3
   29e34:	bcc	29e1c <blkid_probe_get_size@plt+0x22904>
   29e38:	ldr	r0, [r5, #8]
   29e3c:	bl	69f0 <free@plt>
   29e40:	ldr	r3, [pc, #188]	; 29f04 <blkid_probe_get_size@plt+0x229ec>
   29e44:	mov	r2, #0
   29e48:	ldr	r0, [r5, #28]
   29e4c:	ldr	r4, [r6, r3]
   29e50:	mov	r1, r4
   29e54:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29e58:	mov	r1, r4
   29e5c:	mov	r2, #0
   29e60:	ldr	r0, [r5, #32]
   29e64:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29e68:	mov	r2, r4
   29e6c:	mov	r1, r4
   29e70:	ldr	r0, [r5, #36]	; 0x24
   29e74:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29e78:	mov	r2, r4
   29e7c:	mov	r1, r4
   29e80:	ldr	r0, [r5, #40]	; 0x28
   29e84:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29e88:	mov	r2, r4
   29e8c:	mov	r1, r4
   29e90:	ldr	r0, [r5, #44]	; 0x2c
   29e94:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29e98:	mov	r1, r4
   29e9c:	mov	r2, #0
   29ea0:	ldr	r0, [r5, #48]	; 0x30
   29ea4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29ea8:	mov	r1, r4
   29eac:	mov	r2, #0
   29eb0:	ldr	r0, [r5, #52]	; 0x34
   29eb4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   29eb8:	ldr	r0, [r5, #56]	; 0x38
   29ebc:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   29ec0:	mov	r0, r5
   29ec4:	bl	69f0 <free@plt>
   29ec8:	mov	r0, #0
   29ecc:	add	sp, sp, #8
   29ed0:	pop	{r4, r5, r6, pc}
   29ed4:	ldr	r3, [pc, #44]	; 29f08 <blkid_probe_get_size@plt+0x229f0>
   29ed8:	ldr	r2, [pc, #44]	; 29f0c <blkid_probe_get_size@plt+0x229f4>
   29edc:	add	r3, pc, r3
   29ee0:	add	r3, r3, #2720	; 0xaa0
   29ee4:	ldr	r1, [pc, #36]	; 29f10 <blkid_probe_get_size@plt+0x229f8>
   29ee8:	add	r3, r3, #8
   29eec:	str	r3, [sp]
   29ef0:	add	r2, pc, r2
   29ef4:	mov	r3, #83	; 0x53
   29ef8:	add	r1, pc, r1
   29efc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   29f00:	andeq	sp, r6, ip, ror sp
   29f04:	andeq	r0, r0, r8, lsr r4
   29f08:	andeq	pc, r3, ip, lsr #14
   29f0c:	andeq	fp, r3, r4, lsr sp
   29f10:	andeq	lr, r3, r8, asr r0
   29f14:	push	{r4, r5, r6, lr}
   29f18:	mov	r5, r0
   29f1c:	mov	r0, #64	; 0x40
   29f20:	bl	7230 <malloc@plt>
   29f24:	subs	r4, r0, #0
   29f28:	beq	29f50 <blkid_probe_get_size@plt+0x22a38>
   29f2c:	mov	r2, #64	; 0x40
   29f30:	mov	r1, #0
   29f34:	bl	6c84 <memset@plt>
   29f38:	mov	r2, #1
   29f3c:	mvn	r3, #0
   29f40:	str	r4, [r5]
   29f44:	strd	r2, [r4]
   29f48:	mov	r0, #0
   29f4c:	pop	{r4, r5, r6, pc}
   29f50:	mvn	r0, #11
   29f54:	pop	{r4, r5, r6, pc}
   29f58:	ldr	r3, [pc, #196]	; 2a024 <blkid_probe_get_size@plt+0x22b0c>
   29f5c:	ldr	r2, [pc, #196]	; 2a028 <blkid_probe_get_size@plt+0x22b10>
   29f60:	add	r3, pc, r3
   29f64:	push	{r4, r5, r6, r7, fp, lr}
   29f68:	add	fp, sp, #20
   29f6c:	sub	sp, sp, #16
   29f70:	ldr	r6, [r3, r2]
   29f74:	mov	r4, r1
   29f78:	mov	r5, r0
   29f7c:	ldr	r3, [r6]
   29f80:	str	r3, [fp, #-24]	; 0xffffffe8
   29f84:	bl	723c <strlen@plt>
   29f88:	add	r3, r0, #11
   29f8c:	cmp	r3, #4194304	; 0x400000
   29f90:	bhi	29ff0 <blkid_probe_get_size@plt+0x22ad8>
   29f94:	ldr	r3, [pc, #144]	; 2a02c <blkid_probe_get_size@plt+0x22b14>
   29f98:	add	r0, r0, #25
   29f9c:	add	r3, pc, r3
   29fa0:	bic	r0, r0, #7
   29fa4:	sub	sp, sp, r0
   29fa8:	ldm	r3, {r0, r1, r2}
   29fac:	add	r7, sp, #8
   29fb0:	mov	r3, r7
   29fb4:	stmia	r3!, {r0, r1}
   29fb8:	mov	r1, r5
   29fbc:	strh	r2, [r3]
   29fc0:	add	r0, sp, #18
   29fc4:	bl	6ea0 <strcpy@plt>
   29fc8:	mov	r2, #0
   29fcc:	mov	r0, r7
   29fd0:	mov	r1, r4
   29fd4:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   29fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29fdc:	ldr	r3, [r6]
   29fe0:	cmp	r2, r3
   29fe4:	bne	2a020 <blkid_probe_get_size@plt+0x22b08>
   29fe8:	sub	sp, fp, #20
   29fec:	pop	{r4, r5, r6, r7, fp, pc}
   29ff0:	ldr	r2, [pc, #56]	; 2a030 <blkid_probe_get_size@plt+0x22b18>
   29ff4:	ldr	r1, [pc, #56]	; 2a034 <blkid_probe_get_size@plt+0x22b1c>
   29ff8:	add	r2, pc, r2
   29ffc:	add	r2, r2, #2752	; 0xac0
   2a000:	add	r2, r2, #4
   2a004:	str	r2, [sp]
   2a008:	ldr	r2, [pc, #40]	; 2a038 <blkid_probe_get_size@plt+0x22b20>
   2a00c:	mov	r3, #69	; 0x45
   2a010:	add	r2, pc, r2
   2a014:	add	r1, pc, r1
   2a018:	mov	r0, #0
   2a01c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2a020:	bl	6fb4 <__stack_chk_fail@plt>
   2a024:	andeq	sp, r6, r8, lsl #24
   2a028:	andeq	r0, r0, ip, lsr r4
   2a02c:	andeq	r1, r4, r4, lsr #31
   2a030:	andeq	pc, r3, r0, lsl r6	; <UNPREDICTABLE>
   2a034:	andeq	fp, r3, r4, lsl #1
   2a038:	andeq	r1, r4, r4, lsl pc
   2a03c:	ldr	r3, [pc, #508]	; 2a240 <blkid_probe_get_size@plt+0x22d28>
   2a040:	ldr	ip, [pc, #508]	; 2a244 <blkid_probe_get_size@plt+0x22d2c>
   2a044:	add	r3, pc, r3
   2a048:	ldr	r2, [pc, #504]	; 2a248 <blkid_probe_get_size@plt+0x22d30>
   2a04c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a050:	add	r2, pc, r2
   2a054:	add	fp, sp, #28
   2a058:	sub	sp, sp, #32
   2a05c:	ldr	r6, [r3, ip]
   2a060:	mov	r5, r0
   2a064:	ldr	r0, [r2]
   2a068:	ldr	r2, [r6]
   2a06c:	cmp	r0, #6
   2a070:	mov	r4, r1
   2a074:	str	r2, [fp, #-32]	; 0xffffffe0
   2a078:	bgt	2a154 <blkid_probe_get_size@plt+0x22c3c>
   2a07c:	mov	r0, r5
   2a080:	bl	723c <strlen@plt>
   2a084:	add	r3, r0, #11
   2a088:	cmp	r3, #4194304	; 0x400000
   2a08c:	bhi	2a1e4 <blkid_probe_get_size@plt+0x22ccc>
   2a090:	ldr	r3, [pc, #436]	; 2a24c <blkid_probe_get_size@plt+0x22d34>
   2a094:	add	r0, r0, #25
   2a098:	add	r3, pc, r3
   2a09c:	bic	r0, r0, #7
   2a0a0:	sub	sp, sp, r0
   2a0a4:	ldm	r3, {r0, r1, r2}
   2a0a8:	add	r7, sp, #24
   2a0ac:	mov	r3, r7
   2a0b0:	stmia	r3!, {r0, r1}
   2a0b4:	mov	r1, r5
   2a0b8:	strh	r2, [r3]
   2a0bc:	add	r0, sp, #34	; 0x22
   2a0c0:	bl	6ea0 <strcpy@plt>
   2a0c4:	mov	r0, r7
   2a0c8:	ldr	r1, [pc, #384]	; 2a250 <blkid_probe_get_size@plt+0x22d38>
   2a0cc:	bl	6ec4 <open64@plt>
   2a0d0:	subs	r5, r0, #0
   2a0d4:	blt	2a144 <blkid_probe_get_size@plt+0x22c2c>
   2a0d8:	ldr	r8, [pc, #372]	; 2a254 <blkid_probe_get_size@plt+0x22d3c>
   2a0dc:	mov	r0, r4
   2a0e0:	add	r8, pc, r8
   2a0e4:	mov	r1, r8
   2a0e8:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   2a0ec:	mov	r9, r0
   2a0f0:	mov	r0, r4
   2a0f4:	bl	723c <strlen@plt>
   2a0f8:	cmp	r9, #0
   2a0fc:	mov	r7, r0
   2a100:	beq	2a1a8 <blkid_probe_get_size@plt+0x22c90>
   2a104:	mov	r1, r4
   2a108:	mov	r2, r7
   2a10c:	mov	r0, r5
   2a110:	bl	7290 <write@plt>
   2a114:	cmp	r0, #0
   2a118:	movge	r4, #0
   2a11c:	blt	2a144 <blkid_probe_get_size@plt+0x22c2c>
   2a120:	mov	r0, r5
   2a124:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2a128:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a12c:	ldr	r3, [r6]
   2a130:	mov	r0, r4
   2a134:	cmp	r2, r3
   2a138:	bne	2a23c <blkid_probe_get_size@plt+0x22d24>
   2a13c:	sub	sp, fp, #28
   2a140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a144:	bl	732c <__errno_location@plt>
   2a148:	ldr	r4, [r0]
   2a14c:	rsb	r4, r4, #0
   2a150:	b	2a120 <blkid_probe_get_size@plt+0x22c08>
   2a154:	ldr	r1, [pc, #252]	; 2a258 <blkid_probe_get_size@plt+0x22d40>
   2a158:	mov	r0, r4
   2a15c:	add	r1, pc, r1
   2a160:	bl	6a8c <strcspn@plt>
   2a164:	ldr	r2, [pc, #240]	; 2a25c <blkid_probe_get_size@plt+0x22d44>
   2a168:	ldr	r3, [pc, #240]	; 2a260 <blkid_probe_get_size@plt+0x22d48>
   2a16c:	add	r2, pc, r2
   2a170:	str	r2, [sp, #4]
   2a174:	add	r3, pc, r3
   2a178:	ldr	r2, [pc, #228]	; 2a264 <blkid_probe_get_size@plt+0x22d4c>
   2a17c:	add	r3, r3, #2768	; 0xad0
   2a180:	str	r3, [sp]
   2a184:	str	r4, [sp, #16]
   2a188:	str	r5, [sp, #8]
   2a18c:	mov	r3, #47	; 0x2f
   2a190:	add	r2, pc, r2
   2a194:	mov	r1, #0
   2a198:	str	r0, [sp, #12]
   2a19c:	mov	r0, #7
   2a1a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2a1a4:	b	2a07c <blkid_probe_get_size@plt+0x22b64>
   2a1a8:	add	r3, r0, #2
   2a1ac:	cmp	r3, #4194304	; 0x400000
   2a1b0:	bhi	2a210 <blkid_probe_get_size@plt+0x22cf8>
   2a1b4:	add	r3, r0, #16
   2a1b8:	bic	r3, r3, #7
   2a1bc:	sub	sp, sp, r3
   2a1c0:	add	r9, sp, #24
   2a1c4:	mov	r1, r4
   2a1c8:	mov	r0, r9
   2a1cc:	bl	6ae0 <stpcpy@plt>
   2a1d0:	ldrh	r3, [r8]
   2a1d4:	add	r7, r7, #1
   2a1d8:	mov	r4, r9
   2a1dc:	strh	r3, [r0]
   2a1e0:	b	2a104 <blkid_probe_get_size@plt+0x22bec>
   2a1e4:	ldr	r2, [pc, #124]	; 2a268 <blkid_probe_get_size@plt+0x22d50>
   2a1e8:	ldr	r1, [pc, #124]	; 2a26c <blkid_probe_get_size@plt+0x22d54>
   2a1ec:	add	r2, pc, r2
   2a1f0:	add	r2, r2, #2784	; 0xae0
   2a1f4:	str	r2, [sp]
   2a1f8:	ldr	r2, [pc, #112]	; 2a270 <blkid_probe_get_size@plt+0x22d58>
   2a1fc:	mov	r3, #49	; 0x31
   2a200:	add	r2, pc, r2
   2a204:	add	r1, pc, r1
   2a208:	mov	r0, #0
   2a20c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2a210:	ldr	r3, [pc, #92]	; 2a274 <blkid_probe_get_size@plt+0x22d5c>
   2a214:	ldr	r2, [pc, #92]	; 2a278 <blkid_probe_get_size@plt+0x22d60>
   2a218:	add	r3, pc, r3
   2a21c:	ldr	r1, [pc, #88]	; 2a27c <blkid_probe_get_size@plt+0x22d64>
   2a220:	add	r3, r3, #2784	; 0xae0
   2a224:	str	r3, [sp]
   2a228:	mov	r0, r9
   2a22c:	mov	r3, #55	; 0x37
   2a230:	add	r2, pc, r2
   2a234:	add	r1, pc, r1
   2a238:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2a23c:	bl	6fb4 <__stack_chk_fail@plt>
   2a240:	andeq	sp, r6, r4, lsr #22
   2a244:	andeq	r0, r0, ip, lsr r4
   2a248:	andeq	lr, r6, ip, ror #1
   2a24c:	andeq	r1, r4, r8, lsr #29
   2a250:	andeq	r0, r8, r1
   2a254:	strdeq	ip, [r3], -r4
   2a258:	andeq	fp, r3, ip, lsr r2
   2a25c:	andeq	r1, r4, r0, ror #27
   2a260:	muleq	r3, r4, r4
   2a264:	muleq	r4, r4, sp
   2a268:	andeq	pc, r3, ip, lsl r4	; <UNPREDICTABLE>
   2a26c:	muleq	r3, r4, lr
   2a270:	andeq	r1, r4, r4, lsr #26
   2a274:	strdeq	pc, [r3], -r0
   2a278:	strdeq	r1, [r4], -r4
   2a27c:	andeq	sl, r3, r4, ror #28
   2a280:	push	{r4, r5, r6, r7, r8, lr}
   2a284:	mov	r6, r0
   2a288:	ldr	r4, [pc, #88]	; 2a2e8 <blkid_probe_get_size@plt+0x22dd0>
   2a28c:	add	r4, pc, r4
   2a290:	mov	r1, r4
   2a294:	bl	6e10 <strpbrk@plt>
   2a298:	cmp	r0, #0
   2a29c:	beq	2a2e0 <blkid_probe_get_size@plt+0x22dc8>
   2a2a0:	ldrb	r3, [r0]
   2a2a4:	cmp	r3, #47	; 0x2f
   2a2a8:	beq	2a2e0 <blkid_probe_get_size@plt+0x22dc8>
   2a2ac:	mov	r7, #46	; 0x2e
   2a2b0:	mov	r5, #47	; 0x2f
   2a2b4:	b	2a2bc <blkid_probe_get_size@plt+0x22da4>
   2a2b8:	ldrb	r3, [r0]
   2a2bc:	cmp	r3, #46	; 0x2e
   2a2c0:	movne	r3, r7
   2a2c4:	moveq	r3, r5
   2a2c8:	strb	r3, [r0]
   2a2cc:	mov	r1, r4
   2a2d0:	add	r0, r0, #1
   2a2d4:	bl	6e10 <strpbrk@plt>
   2a2d8:	cmp	r0, #0
   2a2dc:	bne	2a2b8 <blkid_probe_get_size@plt+0x22da0>
   2a2e0:	mov	r0, r6
   2a2e4:	pop	{r4, r5, r6, r7, r8, pc}
   2a2e8:	ldrdeq	r1, [r4], -r8
   2a2ec:	ldr	r3, [pc, #540]	; 2a510 <blkid_probe_get_size@plt+0x22ff8>
   2a2f0:	ldr	r1, [pc, #540]	; 2a514 <blkid_probe_get_size@plt+0x22ffc>
   2a2f4:	add	r3, pc, r3
   2a2f8:	ldr	r2, [pc, #536]	; 2a518 <blkid_probe_get_size@plt+0x23000>
   2a2fc:	push	{r4, r5, r6, r7, lr}
   2a300:	add	r2, pc, r2
   2a304:	ldr	r5, [r3, r1]
   2a308:	ldr	r4, [r2, #4]
   2a30c:	sub	sp, sp, #28
   2a310:	mov	r0, #0
   2a314:	ldr	r3, [r5]
   2a318:	cmp	r4, r0
   2a31c:	str	r0, [sp, #16]
   2a320:	str	r3, [sp, #20]
   2a324:	beq	2a348 <blkid_probe_get_size@plt+0x22e30>
   2a328:	bl	69f0 <free@plt>
   2a32c:	ldr	r2, [sp, #20]
   2a330:	ldr	r3, [r5]
   2a334:	mov	r0, r4
   2a338:	cmp	r2, r3
   2a33c:	bne	2a50c <blkid_probe_get_size@plt+0x22ff4>
   2a340:	add	sp, sp, #28
   2a344:	pop	{r4, r5, r6, r7, pc}
   2a348:	ldr	r0, [pc, #460]	; 2a51c <blkid_probe_get_size@plt+0x23004>
   2a34c:	mov	r1, r4
   2a350:	add	r2, sp, #16
   2a354:	add	r0, pc, r0
   2a358:	bl	3efd0 <blkid_probe_get_size@plt+0x37ab8>
   2a35c:	ldr	r0, [pc, #444]	; 2a520 <blkid_probe_get_size@plt+0x23008>
   2a360:	add	r0, pc, r0
   2a364:	bl	7464 <getenv@plt>
   2a368:	subs	r6, r0, #0
   2a36c:	beq	2a494 <blkid_probe_get_size@plt+0x22f7c>
   2a370:	ldrb	r3, [r6]
   2a374:	cmp	r3, #58	; 0x3a
   2a378:	beq	2a3f8 <blkid_probe_get_size@plt+0x22ee0>
   2a37c:	mov	r0, r6
   2a380:	bl	1c930 <blkid_probe_get_size@plt+0x15418>
   2a384:	ldr	r7, [pc, #408]	; 2a524 <blkid_probe_get_size@plt+0x2300c>
   2a388:	ldr	r3, [pc, #408]	; 2a528 <blkid_probe_get_size@plt+0x23010>
   2a38c:	add	r7, pc, r7
   2a390:	add	r3, pc, r3
   2a394:	ldr	r3, [r3, #4]
   2a398:	cmp	r0, #0
   2a39c:	mov	r4, r0
   2a3a0:	str	r0, [r7, #4]
   2a3a4:	beq	2a410 <blkid_probe_get_size@plt+0x22ef8>
   2a3a8:	cmp	r3, #5
   2a3ac:	ble	2a3f0 <blkid_probe_get_size@plt+0x22ed8>
   2a3b0:	ldr	r2, [pc, #372]	; 2a52c <blkid_probe_get_size@plt+0x23014>
   2a3b4:	ldr	r3, [pc, #372]	; 2a530 <blkid_probe_get_size@plt+0x23018>
   2a3b8:	add	r2, pc, r2
   2a3bc:	ldr	r1, [r0]
   2a3c0:	add	r3, pc, r3
   2a3c4:	str	r2, [sp, #4]
   2a3c8:	ldr	r2, [pc, #356]	; 2a534 <blkid_probe_get_size@plt+0x2301c>
   2a3cc:	add	r3, r3, #2800	; 0xaf0
   2a3d0:	str	r1, [sp, #8]
   2a3d4:	str	r3, [sp]
   2a3d8:	add	r2, pc, r2
   2a3dc:	mov	r3, #52	; 0x34
   2a3e0:	mov	r1, #0
   2a3e4:	ldr	r0, [pc, #332]	; 2a538 <blkid_probe_get_size@plt+0x23020>
   2a3e8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2a3ec:	ldr	r4, [r7, #4]
   2a3f0:	ldr	r0, [sp, #16]
   2a3f4:	b	2a328 <blkid_probe_get_size@plt+0x22e10>
   2a3f8:	ldr	r3, [sp, #16]
   2a3fc:	cmp	r3, #0
   2a400:	addeq	r6, r6, #1
   2a404:	beq	2a498 <blkid_probe_get_size@plt+0x22f80>
   2a408:	mov	r6, r3
   2a40c:	b	2a37c <blkid_probe_get_size@plt+0x22e64>
   2a410:	cmp	r3, #3
   2a414:	bgt	2a4a4 <blkid_probe_get_size@plt+0x22f8c>
   2a418:	ldr	r0, [pc, #284]	; 2a53c <blkid_probe_get_size@plt+0x23024>
   2a41c:	ldr	r6, [pc, #284]	; 2a540 <blkid_probe_get_size@plt+0x23028>
   2a420:	add	r0, pc, r0
   2a424:	bl	1c930 <blkid_probe_get_size@plt+0x15418>
   2a428:	add	r6, pc, r6
   2a42c:	cmp	r0, #0
   2a430:	mov	r4, r0
   2a434:	str	r0, [r6, #4]
   2a438:	beq	2a4e0 <blkid_probe_get_size@plt+0x22fc8>
   2a43c:	ldr	r3, [pc, #256]	; 2a544 <blkid_probe_get_size@plt+0x2302c>
   2a440:	add	r3, pc, r3
   2a444:	ldr	r3, [r3, #4]
   2a448:	cmp	r3, #5
   2a44c:	ble	2a3f0 <blkid_probe_get_size@plt+0x22ed8>
   2a450:	ldr	r2, [pc, #240]	; 2a548 <blkid_probe_get_size@plt+0x23030>
   2a454:	ldr	r3, [pc, #240]	; 2a54c <blkid_probe_get_size@plt+0x23034>
   2a458:	add	r2, pc, r2
   2a45c:	ldr	r1, [r0]
   2a460:	add	r3, pc, r3
   2a464:	str	r2, [sp, #4]
   2a468:	ldr	r2, [pc, #224]	; 2a550 <blkid_probe_get_size@plt+0x23038>
   2a46c:	add	r3, r3, #2800	; 0xaf0
   2a470:	str	r1, [sp, #8]
   2a474:	str	r3, [sp]
   2a478:	add	r2, pc, r2
   2a47c:	mov	r3, #61	; 0x3d
   2a480:	mov	r1, #0
   2a484:	ldr	r0, [pc, #172]	; 2a538 <blkid_probe_get_size@plt+0x23020>
   2a488:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2a48c:	ldr	r4, [r6, #4]
   2a490:	b	2a3f0 <blkid_probe_get_size@plt+0x22ed8>
   2a494:	ldr	r6, [sp, #16]
   2a498:	cmp	r6, #0
   2a49c:	beq	2a418 <blkid_probe_get_size@plt+0x22f00>
   2a4a0:	b	2a37c <blkid_probe_get_size@plt+0x22e64>
   2a4a4:	ldr	r2, [pc, #168]	; 2a554 <blkid_probe_get_size@plt+0x2303c>
   2a4a8:	ldr	r3, [pc, #168]	; 2a558 <blkid_probe_get_size@plt+0x23040>
   2a4ac:	add	r2, pc, r2
   2a4b0:	str	r2, [sp, #4]
   2a4b4:	add	r3, pc, r3
   2a4b8:	ldr	r2, [pc, #156]	; 2a55c <blkid_probe_get_size@plt+0x23044>
   2a4bc:	add	r3, r3, #2800	; 0xaf0
   2a4c0:	mov	r1, r0
   2a4c4:	str	r3, [sp]
   2a4c8:	str	r6, [sp, #8]
   2a4cc:	mov	r3, #56	; 0x38
   2a4d0:	add	r2, pc, r2
   2a4d4:	ldr	r0, [pc, #132]	; 2a560 <blkid_probe_get_size@plt+0x23048>
   2a4d8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2a4dc:	b	2a418 <blkid_probe_get_size@plt+0x22f00>
   2a4e0:	ldr	r2, [pc, #124]	; 2a564 <blkid_probe_get_size@plt+0x2304c>
   2a4e4:	ldr	r1, [pc, #124]	; 2a568 <blkid_probe_get_size@plt+0x23050>
   2a4e8:	add	r2, pc, r2
   2a4ec:	add	r2, r2, #2816	; 0xb00
   2a4f0:	str	r2, [sp]
   2a4f4:	ldr	r2, [pc, #112]	; 2a56c <blkid_probe_get_size@plt+0x23054>
   2a4f8:	mov	r3, #60	; 0x3c
   2a4fc:	add	r2, pc, r2
   2a500:	add	r1, pc, r1
   2a504:	mov	r0, #1
   2a508:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2a50c:	bl	6fb4 <__stack_chk_fail@plt>
   2a510:	andeq	sp, r6, r4, ror r8
   2a514:	andeq	r0, r0, ip, lsr r4
   2a518:	andeq	lr, r6, r4, lsr r3
   2a51c:	andeq	r1, r4, r4, lsl ip
   2a520:	andeq	r1, r4, ip, lsl ip
   2a524:	andeq	lr, r6, r8, lsr #5
   2a528:	andeq	sp, r6, ip, lsr #27
   2a52c:	strdeq	r1, [r4], -r8
   2a530:	andeq	pc, r3, r8, asr #4
   2a534:			; <UNDEFINED> instruction: 0x00041bb8
   2a538:	andeq	r0, r0, r6, lsl #8
   2a53c:	andeq	pc, r3, r8, lsr sp	; <UNPREDICTABLE>
   2a540:	andeq	lr, r6, ip, lsl #4
   2a544:	strdeq	sp, [r6], -ip
   2a548:	andeq	r1, r4, r0, asr #23
   2a54c:	andeq	pc, r3, r8, lsr #3
   2a550:	andeq	r1, r4, r8, lsl fp
   2a554:	andeq	r1, r4, r8, lsr #22
   2a558:	andeq	pc, r3, r4, asr r1	; <UNPREDICTABLE>
   2a55c:	andeq	r1, r4, r0, asr #21
   2a560:	andeq	r0, r0, r4, lsl #8
   2a564:	andeq	pc, r3, r0, lsr #2
   2a568:	andeq	r1, r4, r0, lsl fp
   2a56c:	muleq	r4, r4, sl
   2a570:	ldr	r3, [pc, #300]	; 2a6a4 <blkid_probe_get_size@plt+0x2318c>
   2a574:	ldr	ip, [pc, #300]	; 2a6a8 <blkid_probe_get_size@plt+0x23190>
   2a578:	add	r3, pc, r3
   2a57c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a580:	mov	r4, r2
   2a584:	ldr	r2, [r3, ip]
   2a588:	sub	sp, sp, #1584	; 0x630
   2a58c:	sub	sp, sp, #4
   2a590:	ldr	ip, [r2]
   2a594:	add	r5, sp, #8
   2a598:	str	r2, [sp, #4]
   2a59c:	mov	fp, r0
   2a5a0:	mov	r9, r1
   2a5a4:	mov	r0, r5
   2a5a8:	ldr	r2, [pc, #252]	; 2a6ac <blkid_probe_get_size@plt+0x23194>
   2a5ac:	mov	r1, #0
   2a5b0:	str	ip, [sp, #1580]	; 0x62c
   2a5b4:	bl	6c84 <memset@plt>
   2a5b8:	ldr	r3, [r4]
   2a5bc:	cmp	r3, #76	; 0x4c
   2a5c0:	bne	2a698 <blkid_probe_get_size@plt+0x23180>
   2a5c4:	ldrsb	r6, [r4, #15]
   2a5c8:	cmp	r6, #0
   2a5cc:	ble	2a698 <blkid_probe_get_size@plt+0x23180>
   2a5d0:	mov	lr, r4
   2a5d4:	mov	ip, r5
   2a5d8:	ldm	lr!, {r0, r1, r2, r3}
   2a5dc:	mov	r7, #4
   2a5e0:	mov	sl, #77	; 0x4d
   2a5e4:	add	r8, sp, #16
   2a5e8:	stmia	ip!, {r0, r1, r2, r3}
   2a5ec:	ldm	lr!, {r0, r1, r2, r3}
   2a5f0:	str	sl, [sp, #8]
   2a5f4:	smulbb	sl, r6, r7
   2a5f8:	stmia	ip!, {r0, r1, r2, r3}
   2a5fc:	ldm	lr, {r0, r1, r2, r3}
   2a600:	stm	ip, {r0, r1, r2, r3}
   2a604:	mov	r2, sl
   2a608:	ldr	r3, [pc, #160]	; 2a6b0 <blkid_probe_get_size@plt+0x23198>
   2a60c:	add	r1, r4, #48	; 0x30
   2a610:	add	r0, r8, #40	; 0x28
   2a614:	bl	696c <__memcpy_chk@plt>
   2a618:	mla	r0, r7, r6, r5
   2a61c:	mov	r2, sl
   2a620:	add	r1, r4, #556	; 0x22c
   2a624:	add	r0, r0, #48	; 0x30
   2a628:	bl	71e8 <memcpy@plt>
   2a62c:	ldrsb	r2, [sp, #23]
   2a630:	add	r1, r4, #1056	; 0x420
   2a634:	add	r1, r1, #8
   2a638:	add	r0, r2, #12
   2a63c:	add	r0, r0, r6
   2a640:	lsl	r2, r2, #2
   2a644:	add	r0, r5, r0, lsl #2
   2a648:	bl	71e8 <memcpy@plt>
   2a64c:	str	r5, [r9, #16]
   2a650:	mov	r2, r9
   2a654:	mov	r0, fp
   2a658:	ldr	r1, [pc, #84]	; 2a6b4 <blkid_probe_get_size@plt+0x2319c>
   2a65c:	bl	6e70 <ioctl@plt>
   2a660:	cmp	r0, #0
   2a664:	movge	r0, #0
   2a668:	bge	2a678 <blkid_probe_get_size@plt+0x23160>
   2a66c:	bl	732c <__errno_location@plt>
   2a670:	ldr	r0, [r0]
   2a674:	rsb	r0, r0, #0
   2a678:	ldr	r3, [sp, #4]
   2a67c:	ldr	r2, [sp, #1580]	; 0x62c
   2a680:	ldr	r3, [r3]
   2a684:	cmp	r2, r3
   2a688:	bne	2a6a0 <blkid_probe_get_size@plt+0x23188>
   2a68c:	add	sp, sp, #1584	; 0x630
   2a690:	add	sp, sp, #4
   2a694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a698:	mvn	r0, #21
   2a69c:	b	2a678 <blkid_probe_get_size@plt+0x23160>
   2a6a0:	bl	6fb4 <__stack_chk_fail@plt>
   2a6a4:	strdeq	sp, [r6], -r0
   2a6a8:	andeq	r0, r0, ip, lsr r4
   2a6ac:	andeq	r0, r0, r4, lsr #12
   2a6b0:	strdeq	r0, [r0], -r4
   2a6b4:	andeq	r8, r0, r6, asr #18
   2a6b8:	ldr	r3, [pc, #392]	; 2a848 <blkid_probe_get_size@plt+0x23330>
   2a6bc:	ldr	ip, [pc, #392]	; 2a84c <blkid_probe_get_size@plt+0x23334>
   2a6c0:	add	r3, pc, r3
   2a6c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a6c8:	sub	sp, sp, #1568	; 0x620
   2a6cc:	ldr	r5, [r3, ip]
   2a6d0:	sub	sp, sp, #12
   2a6d4:	add	r6, sp, #8
   2a6d8:	mov	r7, r1
   2a6dc:	ldr	ip, [r5]
   2a6e0:	sub	r4, r6, #8
   2a6e4:	mov	r8, r0
   2a6e8:	mov	r1, #0
   2a6ec:	mov	fp, r2
   2a6f0:	mov	r0, r4
   2a6f4:	ldr	r2, [pc, #340]	; 2a850 <blkid_probe_get_size@plt+0x23338>
   2a6f8:	str	ip, [sp, #1572]	; 0x624
   2a6fc:	bl	6c84 <memset@plt>
   2a700:	mov	r3, #76	; 0x4c
   2a704:	str	r4, [r7, #16]
   2a708:	mov	r2, r7
   2a70c:	mov	r0, r8
   2a710:	ldr	r1, [pc, #316]	; 2a854 <blkid_probe_get_size@plt+0x2333c>
   2a714:	str	r3, [sp]
   2a718:	bl	6e70 <ioctl@plt>
   2a71c:	cmp	r0, #0
   2a720:	blt	2a80c <blkid_probe_get_size@plt+0x232f4>
   2a724:	ldrsb	r3, [sp, #15]
   2a728:	add	r9, sp, #15
   2a72c:	cmp	r3, #0
   2a730:	bge	2a834 <blkid_probe_get_size@plt+0x2331c>
   2a734:	ldr	r2, [sp]
   2a738:	cmp	r2, #76	; 0x4c
   2a73c:	bne	2a834 <blkid_probe_get_size@plt+0x2331c>
   2a740:	rsb	r3, r3, #0
   2a744:	str	r4, [r7, #16]
   2a748:	mov	r2, r7
   2a74c:	mov	r0, r8
   2a750:	ldr	r1, [pc, #252]	; 2a854 <blkid_probe_get_size@plt+0x2333c>
   2a754:	strb	r3, [sp, #15]
   2a758:	bl	6e70 <ioctl@plt>
   2a75c:	cmp	r0, #0
   2a760:	blt	2a80c <blkid_probe_get_size@plt+0x232f4>
   2a764:	ldrsb	r8, [r9]
   2a768:	cmp	r8, #0
   2a76c:	ble	2a834 <blkid_probe_get_size@plt+0x2331c>
   2a770:	ldr	r3, [sp]
   2a774:	cmp	r3, #76	; 0x4c
   2a778:	bne	2a834 <blkid_probe_get_size@plt+0x2331c>
   2a77c:	ldr	r1, [pc, #204]	; 2a850 <blkid_probe_get_size@plt+0x23338>
   2a780:	mov	r0, #1
   2a784:	bl	7164 <calloc@plt>
   2a788:	subs	r7, r0, #0
   2a78c:	beq	2a83c <blkid_probe_get_size@plt+0x23324>
   2a790:	mov	lr, r4
   2a794:	mov	ip, r7
   2a798:	ldm	lr!, {r0, r1, r2, r3}
   2a79c:	mov	r9, #4
   2a7a0:	smulbb	sl, r8, r9
   2a7a4:	stmia	ip!, {r0, r1, r2, r3}
   2a7a8:	ldm	lr!, {r0, r1, r2, r3}
   2a7ac:	stmia	ip!, {r0, r1, r2, r3}
   2a7b0:	ldm	lr, {r0, r1, r2, r3}
   2a7b4:	stm	ip, {r0, r1, r2, r3}
   2a7b8:	add	r1, r6, #40	; 0x28
   2a7bc:	mov	r2, sl
   2a7c0:	ldr	r3, [pc, #144]	; 2a858 <blkid_probe_get_size@plt+0x23340>
   2a7c4:	add	r0, r7, #48	; 0x30
   2a7c8:	bl	696c <__memcpy_chk@plt>
   2a7cc:	mla	r1, r9, r8, r4
   2a7d0:	mov	r2, sl
   2a7d4:	add	r1, r1, #48	; 0x30
   2a7d8:	mov	r3, #1016	; 0x3f8
   2a7dc:	add	r0, r7, #556	; 0x22c
   2a7e0:	bl	696c <__memcpy_chk@plt>
   2a7e4:	add	r1, r4, r8, lsl #3
   2a7e8:	add	r0, r7, #1056	; 0x420
   2a7ec:	mov	r2, sl
   2a7f0:	add	r1, r1, #48	; 0x30
   2a7f4:	add	r0, r0, #8
   2a7f8:	mov	r3, #508	; 0x1fc
   2a7fc:	bl	696c <__memcpy_chk@plt>
   2a800:	str	r7, [fp]
   2a804:	mov	r0, #0
   2a808:	b	2a818 <blkid_probe_get_size@plt+0x23300>
   2a80c:	bl	732c <__errno_location@plt>
   2a810:	ldr	r0, [r0]
   2a814:	rsb	r0, r0, #0
   2a818:	ldr	r2, [sp, #1572]	; 0x624
   2a81c:	ldr	r3, [r5]
   2a820:	cmp	r2, r3
   2a824:	bne	2a844 <blkid_probe_get_size@plt+0x2332c>
   2a828:	add	sp, sp, #1568	; 0x620
   2a82c:	add	sp, sp, #12
   2a830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a834:	mvn	r0, #94	; 0x5e
   2a838:	b	2a818 <blkid_probe_get_size@plt+0x23300>
   2a83c:	mvn	r0, #11
   2a840:	b	2a818 <blkid_probe_get_size@plt+0x23300>
   2a844:	bl	6fb4 <__stack_chk_fail@plt>
   2a848:	andeq	sp, r6, r8, lsr #9
   2a84c:	andeq	r0, r0, ip, lsr r4
   2a850:	andeq	r0, r0, r4, lsr #12
   2a854:	andeq	r8, r0, r6, asr #18
   2a858:	strdeq	r0, [r0], -r4
   2a85c:	push	{r4, lr}
   2a860:	subs	r4, r0, #0
   2a864:	sub	sp, sp, #8
   2a868:	beq	2a884 <blkid_probe_get_size@plt+0x2336c>
   2a86c:	bl	398f8 <blkid_probe_get_size@plt+0x323e0>
   2a870:	cmp	r0, #0
   2a874:	strge	r0, [r4]
   2a878:	movge	r0, #0
   2a87c:	add	sp, sp, #8
   2a880:	pop	{r4, pc}
   2a884:	ldr	r2, [pc, #48]	; 2a8bc <blkid_probe_get_size@plt+0x233a4>
   2a888:	ldr	r1, [pc, #48]	; 2a8c0 <blkid_probe_get_size@plt+0x233a8>
   2a88c:	add	r2, pc, r2
   2a890:	add	r2, r2, #2832	; 0xb10
   2a894:	str	r2, [sp]
   2a898:	ldr	r2, [pc, #36]	; 2a8c4 <blkid_probe_get_size@plt+0x233ac>
   2a89c:	mov	r3, #121	; 0x79
   2a8a0:	add	r2, pc, r2
   2a8a4:	add	r1, pc, r1
   2a8a8:	mov	r0, #1
   2a8ac:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2a8b0:	mvn	r0, #21
   2a8b4:	add	sp, sp, #8
   2a8b8:	pop	{r4, pc}
   2a8bc:	andeq	lr, r3, ip, ror sp
   2a8c0:	andeq	r1, r4, r0, lsr #15
   2a8c4:	andeq	pc, r3, r8, ror #21
   2a8c8:	ldr	r3, [pc, #1156]	; 2ad54 <blkid_probe_get_size@plt+0x2383c>
   2a8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a8d0:	add	fp, sp, #32
   2a8d4:	ldr	ip, [pc, #1148]	; 2ad58 <blkid_probe_get_size@plt+0x23840>
   2a8d8:	add	r3, pc, r3
   2a8dc:	sub	sp, sp, #124	; 0x7c
   2a8e0:	mov	r4, r0
   2a8e4:	str	r0, [fp, #-108]	; 0xffffff94
   2a8e8:	sub	r0, fp, #72	; 0x48
   2a8ec:	str	r0, [fp, #-104]	; 0xffffff98
   2a8f0:	ldr	ip, [r3, ip]
   2a8f4:	mov	r8, r2
   2a8f8:	str	ip, [fp, #-124]	; 0xffffff84
   2a8fc:	ldr	ip, [ip]
   2a900:	str	r1, [fp, #-116]	; 0xffffff8c
   2a904:	mov	r2, #32
   2a908:	mov	r1, #0
   2a90c:	str	ip, [fp, #-40]	; 0xffffffd8
   2a910:	bl	6c84 <memset@plt>
   2a914:	ldr	r3, [r4]
   2a918:	cmp	r3, #0
   2a91c:	blt	2abc0 <blkid_probe_get_size@plt+0x236a8>
   2a920:	ldr	r9, [fp, #-104]	; 0xffffff98
   2a924:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2a928:	mov	r1, #16
   2a92c:	mov	r0, r9
   2a930:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   2a934:	ldr	r3, [fp, #-108]	; 0xffffff94
   2a938:	mov	r6, #16
   2a93c:	mov	r7, #0
   2a940:	ldr	r5, [r3]
   2a944:	mov	r3, #55	; 0x37
   2a948:	mov	r4, #0
   2a94c:	str	r3, [fp, #-100]	; 0xffffff9c
   2a950:	mov	r0, r5
   2a954:	sub	r3, fp, #100	; 0x64
   2a958:	mov	r2, r9
   2a95c:	ldr	r1, [pc, #1016]	; 2ad5c <blkid_probe_get_size@plt+0x23844>
   2a960:	str	r4, [fp, #-84]	; 0xffffffac
   2a964:	str	r4, [fp, #-96]	; 0xffffffa0
   2a968:	str	r4, [fp, #-80]	; 0xffffffb0
   2a96c:	strd	r6, [fp, #-92]	; 0xffffffa4
   2a970:	str	r3, [fp, #-56]	; 0xffffffc8
   2a974:	bl	6e70 <ioctl@plt>
   2a978:	cmp	r0, r4
   2a97c:	blt	2abf8 <blkid_probe_get_size@plt+0x236e0>
   2a980:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   2a984:	orrs	r3, r2, r3
   2a988:	mvneq	r4, #21
   2a98c:	beq	2ac18 <blkid_probe_get_size@plt+0x23700>
   2a990:	ldr	r6, [fp, #-84]	; 0xffffffac
   2a994:	mov	r0, #1
   2a998:	lsl	r1, r6, #5
   2a99c:	add	r1, r1, #12
   2a9a0:	bl	7164 <calloc@plt>
   2a9a4:	subs	r7, r0, #0
   2a9a8:	mvneq	r4, #11
   2a9ac:	beq	2ac18 <blkid_probe_get_size@plt+0x23700>
   2a9b0:	mov	r2, #27
   2a9b4:	mov	r3, #4
   2a9b8:	str	r6, [r7, #8]
   2a9bc:	strd	r2, [r7]
   2a9c0:	mov	r0, r5
   2a9c4:	ldr	r2, [fp, #-104]	; 0xffffff98
   2a9c8:	ldr	r1, [pc, #908]	; 2ad5c <blkid_probe_get_size@plt+0x23844>
   2a9cc:	str	r7, [fp, #-56]	; 0xffffffc8
   2a9d0:	bl	6e70 <ioctl@plt>
   2a9d4:	cmp	r0, #0
   2a9d8:	blt	2ac8c <blkid_probe_get_size@plt+0x23774>
   2a9dc:	ldr	r3, [r7, #8]
   2a9e0:	ands	r5, r3, #31
   2a9e4:	movne	r5, #1
   2a9e8:	add	r5, r5, r3, lsr #5
   2a9ec:	add	r2, r5, #1
   2a9f0:	lsl	r2, r2, #3
   2a9f4:	cmp	r2, #4194304	; 0x400000
   2a9f8:	bhi	2ace4 <blkid_probe_get_size@plt+0x237cc>
   2a9fc:	add	r3, r2, #8
   2aa00:	sub	sp, sp, r3
   2aa04:	mov	r1, r4
   2aa08:	add	r0, sp, #16
   2aa0c:	bl	6c84 <memset@plt>
   2aa10:	ldr	r2, [pc, #840]	; 2ad60 <blkid_probe_get_size@plt+0x23848>
   2aa14:	ldr	r3, [pc, #840]	; 2ad64 <blkid_probe_get_size@plt+0x2384c>
   2aa18:	add	r2, pc, r2
   2aa1c:	add	r3, pc, r3
   2aa20:	ldr	r1, [pc, #832]	; 2ad68 <blkid_probe_get_size@plt+0x23850>
   2aa24:	add	r3, r3, #2848	; 0xb20
   2aa28:	add	r2, r2, #1296	; 0x510
   2aa2c:	sub	r9, r8, #4
   2aa30:	add	r1, pc, r1
   2aa34:	add	r2, r2, #12
   2aa38:	str	r3, [fp, #-136]	; 0xffffff78
   2aa3c:	mov	r3, #59	; 0x3b
   2aa40:	str	r1, [fp, #-132]	; 0xffffff7c
   2aa44:	str	r2, [fp, #-128]	; 0xffffff80
   2aa48:	str	r7, [fp, #-112]	; 0xffffff90
   2aa4c:	str	r0, [fp, #-120]	; 0xffffff88
   2aa50:	str	r5, [r0, #4]
   2aa54:	str	r3, [r0]
   2aa58:	ldr	r8, [r9, #4]!
   2aa5c:	cmn	r8, #1
   2aa60:	beq	2aae4 <blkid_probe_get_size@plt+0x235cc>
   2aa64:	ldr	r3, [fp, #-112]	; 0xffffff90
   2aa68:	ldr	r2, [fp, #-128]	; 0xffffff80
   2aa6c:	ldr	r5, [r3, #8]
   2aa70:	ldr	r6, [r2, r4, lsl #2]
   2aa74:	cmp	r5, #0
   2aa78:	beq	2ac4c <blkid_probe_get_size@plt+0x23734>
   2aa7c:	add	r7, r3, #12
   2aa80:	mov	sl, #0
   2aa84:	b	2aa98 <blkid_probe_get_size@plt+0x23580>
   2aa88:	add	sl, sl, #1
   2aa8c:	cmp	sl, r5
   2aa90:	add	r7, r7, #32
   2aa94:	beq	2ac4c <blkid_probe_get_size@plt+0x23734>
   2aa98:	mov	r1, r6
   2aa9c:	mov	r0, r7
   2aaa0:	bl	7314 <strcmp@plt>
   2aaa4:	cmp	r0, #0
   2aaa8:	bne	2aa88 <blkid_probe_get_size@plt+0x23570>
   2aaac:	ldr	r1, [fp, #-120]	; 0xffffff88
   2aab0:	asr	r2, sl, #5
   2aab4:	and	r3, sl, #31
   2aab8:	add	r2, r1, r2, lsl #3
   2aabc:	mov	r1, #1
   2aac0:	cmp	r8, #0
   2aac4:	lsl	r3, r1, r3
   2aac8:	ldr	r1, [r2, #8]
   2aacc:	orr	r1, r1, r3
   2aad0:	str	r1, [r2, #8]
   2aad4:	beq	2ab44 <blkid_probe_get_size@plt+0x2362c>
   2aad8:	ldr	r1, [r2, #12]
   2aadc:	orr	r3, r1, r3
   2aae0:	str	r3, [r2, #12]
   2aae4:	add	r4, r4, #1
   2aae8:	cmp	r4, #5
   2aaec:	bne	2aa58 <blkid_probe_get_size@plt+0x23540>
   2aaf0:	ldr	r3, [fp, #-108]	; 0xffffff94
   2aaf4:	ldr	r1, [pc, #608]	; 2ad5c <blkid_probe_get_size@plt+0x23844>
   2aaf8:	ldr	r2, [fp, #-104]	; 0xffffff98
   2aafc:	ldr	r0, [r3]
   2ab00:	ldr	r3, [fp, #-120]	; 0xffffff88
   2ab04:	ldr	r7, [fp, #-112]	; 0xffffff90
   2ab08:	str	r3, [fp, #-56]	; 0xffffffc8
   2ab0c:	bl	6e70 <ioctl@plt>
   2ab10:	subs	r1, r0, #0
   2ab14:	movge	r4, #0
   2ab18:	blt	2ab60 <blkid_probe_get_size@plt+0x23648>
   2ab1c:	mov	r0, r7
   2ab20:	bl	69f0 <free@plt>
   2ab24:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ab28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ab2c:	mov	r0, r4
   2ab30:	ldr	r3, [r3]
   2ab34:	cmp	r2, r3
   2ab38:	bne	2ad50 <blkid_probe_get_size@plt+0x23838>
   2ab3c:	sub	sp, fp, #32
   2ab40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab44:	ldr	r1, [r2, #12]
   2ab48:	add	r4, r4, #1
   2ab4c:	bic	r3, r1, r3
   2ab50:	cmp	r4, #5
   2ab54:	str	r3, [r2, #12]
   2ab58:	bne	2aa58 <blkid_probe_get_size@plt+0x23540>
   2ab5c:	b	2aaf0 <blkid_probe_get_size@plt+0x235d8>
   2ab60:	ldr	r3, [pc, #516]	; 2ad6c <blkid_probe_get_size@plt+0x23854>
   2ab64:	add	r3, pc, r3
   2ab68:	ldr	r3, [r3, #4]
   2ab6c:	cmp	r3, #3
   2ab70:	rsble	r4, r1, #0
   2ab74:	uxtble	r4, r4
   2ab78:	rsble	r4, r4, #0
   2ab7c:	ble	2ab1c <blkid_probe_get_size@plt+0x23604>
   2ab80:	ldr	r2, [pc, #488]	; 2ad70 <blkid_probe_get_size@plt+0x23858>
   2ab84:	ldr	r3, [pc, #488]	; 2ad74 <blkid_probe_get_size@plt+0x2385c>
   2ab88:	add	r2, pc, r2
   2ab8c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   2ab90:	str	r2, [sp, #4]
   2ab94:	add	r3, pc, r3
   2ab98:	ldr	r2, [pc, #472]	; 2ad78 <blkid_probe_get_size@plt+0x23860>
   2ab9c:	add	r3, r3, #2848	; 0xb20
   2aba0:	str	r0, [sp, #8]
   2aba4:	str	r3, [sp]
   2aba8:	add	r2, pc, r2
   2abac:	mov	r3, #412	; 0x19c
   2abb0:	ldr	r0, [pc, #452]	; 2ad7c <blkid_probe_get_size@plt+0x23864>
   2abb4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2abb8:	mov	r4, r0
   2abbc:	b	2ab1c <blkid_probe_get_size@plt+0x23604>
   2abc0:	ldr	r0, [fp, #-108]	; 0xffffff94
   2abc4:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   2abc8:	subs	r1, r0, #0
   2abcc:	bge	2a920 <blkid_probe_get_size@plt+0x23408>
   2abd0:	ldr	r3, [pc, #424]	; 2ad80 <blkid_probe_get_size@plt+0x23868>
   2abd4:	add	r3, pc, r3
   2abd8:	ldr	r3, [r3, #4]
   2abdc:	cmp	r3, #3
   2abe0:	bgt	2ad14 <blkid_probe_get_size@plt+0x237fc>
   2abe4:	rsb	r4, r1, #0
   2abe8:	mov	r7, #0
   2abec:	uxtb	r4, r4
   2abf0:	rsb	r4, r4, #0
   2abf4:	b	2ab1c <blkid_probe_get_size@plt+0x23604>
   2abf8:	bl	732c <__errno_location@plt>
   2abfc:	mov	r7, r4
   2ac00:	ldr	r4, [r0]
   2ac04:	rsb	r4, r4, #0
   2ac08:	mov	r0, r7
   2ac0c:	bl	69f0 <free@plt>
   2ac10:	cmp	r4, #0
   2ac14:	bge	2ac40 <blkid_probe_get_size@plt+0x23728>
   2ac18:	ldr	r3, [pc, #356]	; 2ad84 <blkid_probe_get_size@plt+0x2386c>
   2ac1c:	add	r3, pc, r3
   2ac20:	ldr	r3, [r3, #4]
   2ac24:	cmp	r3, #3
   2ac28:	bgt	2ac9c <blkid_probe_get_size@plt+0x23784>
   2ac2c:	rsb	r4, r4, #0
   2ac30:	mov	r7, #0
   2ac34:	uxtb	r4, r4
   2ac38:	rsb	r4, r4, #0
   2ac3c:	b	2ab1c <blkid_probe_get_size@plt+0x23604>
   2ac40:	mov	r3, #0
   2ac44:	ldr	r3, [r3, #8]
   2ac48:	udf	#0
   2ac4c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2ac50:	ldr	r3, [r3, #4]
   2ac54:	cmp	r3, #3
   2ac58:	ble	2aae4 <blkid_probe_get_size@plt+0x235cc>
   2ac5c:	ldr	r3, [pc, #292]	; 2ad88 <blkid_probe_get_size@plt+0x23870>
   2ac60:	ldr	r2, [fp, #-136]	; 0xffffff78
   2ac64:	add	r3, pc, r3
   2ac68:	str	r6, [sp, #8]
   2ac6c:	strd	r2, [sp]
   2ac70:	ldr	r2, [pc, #276]	; 2ad8c <blkid_probe_get_size@plt+0x23874>
   2ac74:	mov	r3, #392	; 0x188
   2ac78:	add	r2, pc, r2
   2ac7c:	mvn	r1, #0
   2ac80:	ldr	r0, [pc, #244]	; 2ad7c <blkid_probe_get_size@plt+0x23864>
   2ac84:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2ac88:	b	2aae4 <blkid_probe_get_size@plt+0x235cc>
   2ac8c:	bl	732c <__errno_location@plt>
   2ac90:	ldr	r4, [r0]
   2ac94:	rsb	r4, r4, #0
   2ac98:	b	2ac08 <blkid_probe_get_size@plt+0x236f0>
   2ac9c:	ldr	r2, [pc, #236]	; 2ad90 <blkid_probe_get_size@plt+0x23878>
   2aca0:	ldr	r3, [pc, #236]	; 2ad94 <blkid_probe_get_size@plt+0x2387c>
   2aca4:	add	r2, pc, r2
   2aca8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2acac:	str	r2, [sp, #4]
   2acb0:	add	r3, pc, r3
   2acb4:	ldr	r2, [pc, #220]	; 2ad98 <blkid_probe_get_size@plt+0x23880>
   2acb8:	add	r3, r3, #2848	; 0xb20
   2acbc:	str	r1, [sp, #8]
   2acc0:	str	r3, [sp]
   2acc4:	mov	r1, r4
   2acc8:	mov	r3, #380	; 0x17c
   2accc:	add	r2, pc, r2
   2acd0:	ldr	r0, [pc, #164]	; 2ad7c <blkid_probe_get_size@plt+0x23864>
   2acd4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2acd8:	mov	r7, #0
   2acdc:	mov	r4, r0
   2ace0:	b	2ab1c <blkid_probe_get_size@plt+0x23604>
   2ace4:	ldr	r2, [pc, #176]	; 2ad9c <blkid_probe_get_size@plt+0x23884>
   2ace8:	ldr	r1, [pc, #176]	; 2ada0 <blkid_probe_get_size@plt+0x23888>
   2acec:	add	r2, pc, r2
   2acf0:	add	r2, r2, #2864	; 0xb30
   2acf4:	add	r2, r2, #8
   2acf8:	str	r2, [sp]
   2acfc:	ldr	r2, [pc, #160]	; 2ada4 <blkid_probe_get_size@plt+0x2388c>
   2ad00:	ldr	r3, [pc, #160]	; 2ada8 <blkid_probe_get_size@plt+0x23890>
   2ad04:	add	r2, pc, r2
   2ad08:	add	r1, pc, r1
   2ad0c:	mov	r0, #1
   2ad10:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2ad14:	ldr	r2, [pc, #144]	; 2adac <blkid_probe_get_size@plt+0x23894>
   2ad18:	ldr	r3, [pc, #144]	; 2adb0 <blkid_probe_get_size@plt+0x23898>
   2ad1c:	add	r2, pc, r2
   2ad20:	str	r2, [sp, #4]
   2ad24:	add	r3, pc, r3
   2ad28:	ldr	r2, [pc, #132]	; 2adb4 <blkid_probe_get_size@plt+0x2389c>
   2ad2c:	add	r3, r3, #2848	; 0xb20
   2ad30:	str	r3, [sp]
   2ad34:	add	r2, pc, r2
   2ad38:	ldr	r3, [pc, #120]	; 2adb8 <blkid_probe_get_size@plt+0x238a0>
   2ad3c:	ldr	r0, [pc, #56]	; 2ad7c <blkid_probe_get_size@plt+0x23864>
   2ad40:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2ad44:	mov	r7, #0
   2ad48:	mov	r4, r0
   2ad4c:	b	2ab1c <blkid_probe_get_size@plt+0x23604>
   2ad50:	bl	6fb4 <__stack_chk_fail@plt>
   2ad54:	muleq	r6, r0, r2
   2ad58:	andeq	r0, r0, ip, lsr r4
   2ad5c:	andeq	r8, r0, r6, asr #18
   2ad60:	andeq	lr, r5, r8, asr #26
   2ad64:	andeq	lr, r3, ip, ror #23
   2ad68:	andeq	sp, r6, ip, lsl #14
   2ad6c:	ldrdeq	sp, [r6], -r8
   2ad70:	andeq	r1, r4, r0, ror #10
   2ad74:	andeq	lr, r3, r4, ror sl
   2ad78:	andeq	pc, r3, r0, ror #15
   2ad7c:	andeq	r0, r0, r4, lsl #8
   2ad80:	andeq	sp, r6, r8, ror #10
   2ad84:	andeq	sp, r6, r0, lsr #10
   2ad88:	andeq	r1, r4, ip, asr r4
   2ad8c:	andeq	pc, r3, r0, lsl r7	; <UNPREDICTABLE>
   2ad90:	ldrdeq	r1, [r4], -r4
   2ad94:	andeq	lr, r3, r8, asr r9
   2ad98:			; <UNDEFINED> instruction: 0x0003f6bc
   2ad9c:	andeq	lr, r3, ip, lsl r9
   2ada0:	andeq	r1, r4, r4, lsr #7
   2ada4:	andeq	pc, r3, r4, lsl #13
   2ada8:	andeq	r0, r0, lr, ror r1
   2adac:	andeq	r1, r4, ip, lsr #6
   2adb0:	andeq	lr, r3, r4, ror #17
   2adb4:	andeq	pc, r3, r4, asr r6	; <UNPREDICTABLE>
   2adb8:	andeq	r0, r0, r5, ror r1
   2adbc:	push	{r4, r5, r6, lr}
   2adc0:	mov	r4, r0
   2adc4:	ldr	r5, [pc, #156]	; 2ae68 <blkid_probe_get_size@plt+0x23950>
   2adc8:	ldr	r0, [r0]
   2adcc:	bl	69f0 <free@plt>
   2add0:	ldr	r1, [pc, #148]	; 2ae6c <blkid_probe_get_size@plt+0x23954>
   2add4:	add	r5, pc, r5
   2add8:	mov	r2, #0
   2addc:	ldr	r1, [r5, r1]
   2ade0:	ldr	r0, [r4, #4]
   2ade4:	mov	r3, r5
   2ade8:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   2adec:	ldr	r0, [r4, #8]
   2adf0:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   2adf4:	ldr	r0, [r4, #12]
   2adf8:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   2adfc:	ldr	r0, [r4, #16]
   2ae00:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   2ae04:	ldr	r0, [r4, #20]
   2ae08:	bl	69f0 <free@plt>
   2ae0c:	ldr	r0, [r4, #24]
   2ae10:	bl	69f0 <free@plt>
   2ae14:	ldr	r0, [r4, #28]
   2ae18:	bl	69f0 <free@plt>
   2ae1c:	ldr	r0, [r4, #32]
   2ae20:	bl	69f0 <free@plt>
   2ae24:	ldr	r0, [r4, #36]	; 0x24
   2ae28:	bl	69f0 <free@plt>
   2ae2c:	ldr	r0, [r4, #40]	; 0x28
   2ae30:	bl	69f0 <free@plt>
   2ae34:	ldr	r0, [r4, #44]	; 0x2c
   2ae38:	bl	69f0 <free@plt>
   2ae3c:	ldr	r0, [r4, #48]	; 0x30
   2ae40:	bl	69f0 <free@plt>
   2ae44:	ldr	r0, [r4, #56]	; 0x38
   2ae48:	bl	69f0 <free@plt>
   2ae4c:	ldr	r0, [r4, #60]	; 0x3c
   2ae50:	bl	69f0 <free@plt>
   2ae54:	ldr	r0, [r4, #64]	; 0x40
   2ae58:	bl	69f0 <free@plt>
   2ae5c:	mov	r0, r4
   2ae60:	pop	{r4, r5, r6, lr}
   2ae64:	b	69f0 <free@plt>
   2ae68:	muleq	r6, r4, sp
   2ae6c:	andeq	r0, r0, r8, lsr r4
   2ae70:	ldr	r3, [pc, #124]	; 2aef4 <blkid_probe_get_size@plt+0x239dc>
   2ae74:	ldr	ip, [pc, #124]	; 2aef8 <blkid_probe_get_size@plt+0x239e0>
   2ae78:	add	r3, pc, r3
   2ae7c:	push	{r4, lr}
   2ae80:	sub	sp, sp, #16
   2ae84:	ldr	r4, [r3, ip]
   2ae88:	ldr	r1, [pc, #108]	; 2aefc <blkid_probe_get_size@plt+0x239e4>
   2ae8c:	add	r2, sp, #8
   2ae90:	ldr	r3, [r4]
   2ae94:	add	r1, pc, r1
   2ae98:	str	r3, [sp, #12]
   2ae9c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   2aea0:	cmp	r0, #0
   2aea4:	blt	2aed4 <blkid_probe_get_size@plt+0x239bc>
   2aea8:	add	r2, sp, #4
   2aeac:	mov	r1, #0
   2aeb0:	ldr	r0, [sp, #8]
   2aeb4:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   2aeb8:	cmp	r0, #0
   2aebc:	blt	2aed4 <blkid_probe_get_size@plt+0x239bc>
   2aec0:	ldr	r0, [sp, #4]
   2aec4:	sub	r0, r0, #1
   2aec8:	clz	r0, r0
   2aecc:	lsr	r0, r0, #5
   2aed0:	b	2aed8 <blkid_probe_get_size@plt+0x239c0>
   2aed4:	mov	r0, #0
   2aed8:	ldr	r2, [sp, #12]
   2aedc:	ldr	r3, [r4]
   2aee0:	cmp	r2, r3
   2aee4:	bne	2aef0 <blkid_probe_get_size@plt+0x239d8>
   2aee8:	add	sp, sp, #16
   2aeec:	pop	{r4, pc}
   2aef0:	bl	6fb4 <__stack_chk_fail@plt>
   2aef4:	strdeq	ip, [r6], -r0
   2aef8:	andeq	r0, r0, ip, lsr r4
   2aefc:	andeq	r1, r4, r8, lsl #5
   2af00:	ldrd	r2, [r1]
   2af04:	push	{r4, r5}
   2af08:	ldrd	r4, [r0]
   2af0c:	cmp	r5, r3
   2af10:	cmpeq	r4, r2
   2af14:	bcc	2af28 <blkid_probe_get_size@plt+0x23a10>
   2af18:	movhi	r0, #1
   2af1c:	movls	r0, #0
   2af20:	pop	{r4, r5}
   2af24:	bx	lr
   2af28:	mvn	r0, #0
   2af2c:	b	2af20 <blkid_probe_get_size@plt+0x23a08>
   2af30:	cmp	r0, r1
   2af34:	bcc	2af44 <blkid_probe_get_size@plt+0x23a2c>
   2af38:	movhi	r0, #1
   2af3c:	movls	r0, #0
   2af40:	bx	lr
   2af44:	mvn	r0, #0
   2af48:	bx	lr
   2af4c:	push	{r4, r5, r6, r7, r8, lr}
   2af50:	ldr	r0, [r0, #112]	; 0x70
   2af54:	ldrb	r8, [r1, #8]
   2af58:	ldrb	ip, [r0, #33]	; 0x21
   2af5c:	ldrb	r3, [r0, #41]	; 0x29
   2af60:	ldrb	r6, [r0, #32]
   2af64:	ldrb	r5, [r0, #40]	; 0x28
   2af68:	ldrb	r4, [r0, #34]	; 0x22
   2af6c:	ldrb	lr, [r0, #42]	; 0x2a
   2af70:	orr	r6, r6, ip, lsl #8
   2af74:	orr	r5, r5, r3, lsl #8
   2af78:	ldrb	ip, [r0, #35]	; 0x23
   2af7c:	ldrb	r3, [r0, #43]	; 0x2b
   2af80:	orr	r6, r6, r4, lsl #16
   2af84:	orr	r5, r5, lr, lsl #16
   2af88:	orr	r6, r6, ip, lsl #24
   2af8c:	orr	r5, r5, r3, lsl #24
   2af90:	mov	r4, #0
   2af94:	cmp	r8, r4
   2af98:	bls	2afec <blkid_probe_get_size@plt+0x23ad4>
   2af9c:	add	lr, r8, r4
   2afa0:	lsr	lr, lr, #1
   2afa4:	mla	r3, lr, r5, r6
   2afa8:	add	r7, r1, r3
   2afac:	ldrb	ip, [r1, r3]
   2afb0:	subs	ip, r2, ip
   2afb4:	movpl	r3, lr
   2afb8:	movpl	lr, r8
   2afbc:	bmi	2afdc <blkid_probe_get_size@plt+0x23ac4>
   2afc0:	b	2aff4 <blkid_probe_get_size@plt+0x23adc>
   2afc4:	mla	ip, r3, r5, r6
   2afc8:	add	r7, r1, ip
   2afcc:	ldrb	ip, [r1, ip]
   2afd0:	subs	ip, r2, ip
   2afd4:	bpl	2aff4 <blkid_probe_get_size@plt+0x23adc>
   2afd8:	mov	lr, r3
   2afdc:	add	r3, r4, lr
   2afe0:	cmp	r4, lr
   2afe4:	lsr	r3, r3, #1
   2afe8:	bcc	2afc4 <blkid_probe_get_size@plt+0x23aac>
   2afec:	mov	r0, #0
   2aff0:	pop	{r4, r5, r6, r7, r8, pc}
   2aff4:	cmp	ip, #0
   2aff8:	addne	r4, r3, #1
   2affc:	movne	r8, lr
   2b000:	bne	2af94 <blkid_probe_get_size@plt+0x23a7c>
   2b004:	ldrb	ip, [r7, #9]
   2b008:	ldrb	r3, [r7, #8]
   2b00c:	ldrb	r1, [r7, #10]
   2b010:	ldrb	r2, [r7, #11]
   2b014:	orr	r3, r3, ip, lsl #8
   2b018:	orr	r3, r3, r1, lsl #16
   2b01c:	orr	r3, r3, r2, lsl #24
   2b020:	add	r0, r0, r3
   2b024:	pop	{r4, r5, r6, r7, r8, pc}
   2b028:	ldrb	r2, [r0]
   2b02c:	ldrb	r3, [r1]
   2b030:	cmp	r2, r3
   2b034:	bcc	2b044 <blkid_probe_get_size@plt+0x23b2c>
   2b038:	movhi	r0, #1
   2b03c:	movls	r0, #0
   2b040:	bx	lr
   2b044:	mvn	r0, #0
   2b048:	bx	lr
   2b04c:	ldr	r3, [r2, #4]
   2b050:	ldr	r1, [r1]
   2b054:	ldr	r0, [r0]
   2b058:	ldr	r3, [r3]
   2b05c:	add	r1, r3, r1
   2b060:	add	r0, r3, r0
   2b064:	b	7314 <strcmp@plt>
   2b068:	ldr	r2, [pc, #40]	; 2b098 <blkid_probe_get_size@plt+0x23b80>
   2b06c:	push	{lr}		; (str lr, [sp, #-4]!)
   2b070:	sub	sp, sp, #12
   2b074:	add	r2, pc, r2
   2b078:	str	r2, [sp]
   2b07c:	ldr	r1, [pc, #24]	; 2b09c <blkid_probe_get_size@plt+0x23b84>
   2b080:	ldr	r2, [pc, #24]	; 2b0a0 <blkid_probe_get_size@plt+0x23b88>
   2b084:	mov	r3, #74	; 0x4a
   2b088:	add	r2, pc, r2
   2b08c:	add	r1, pc, r1
   2b090:	mov	r0, #0
   2b094:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b098:	andeq	r1, r4, r4, lsl #15
   2b09c:	andeq	r2, r4, ip, lsl r4
   2b0a0:	strdeq	r2, [r4], -ip
   2b0a4:	push	{r4, r5, lr}
   2b0a8:	sub	sp, sp, #12
   2b0ac:	ldrb	r3, [r0, #25]
   2b0b0:	ands	r3, r3, #1
   2b0b4:	beq	2b138 <blkid_probe_get_size@plt+0x23c20>
   2b0b8:	ldrb	r3, [r1, #25]
   2b0bc:	ands	r3, r3, #1
   2b0c0:	beq	2b164 <blkid_probe_get_size@plt+0x23c4c>
   2b0c4:	ldrb	r2, [r0, #24]
   2b0c8:	ldrb	r3, [r1, #24]
   2b0cc:	tst	r2, #224	; 0xe0
   2b0d0:	and	r3, r3, #224	; 0xe0
   2b0d4:	beq	2b124 <blkid_probe_get_size@plt+0x23c0c>
   2b0d8:	cmp	r3, #0
   2b0dc:	beq	2b190 <blkid_probe_get_size@plt+0x23c78>
   2b0e0:	ldrd	r2, [r0, #32]
   2b0e4:	ldrd	r4, [r1, #32]
   2b0e8:	cmp	r2, r4
   2b0ec:	sbcs	ip, r3, r5
   2b0f0:	blt	2b190 <blkid_probe_get_size@plt+0x23c78>
   2b0f4:	cmp	r4, r2
   2b0f8:	sbcs	r3, r5, r3
   2b0fc:	blt	2b12c <blkid_probe_get_size@plt+0x23c14>
   2b100:	ldrd	r4, [r0, #48]	; 0x30
   2b104:	ldrd	r2, [r1, #48]	; 0x30
   2b108:	cmp	r5, r3
   2b10c:	cmpeq	r4, r2
   2b110:	bcc	2b190 <blkid_probe_get_size@plt+0x23c78>
   2b114:	movhi	r0, #1
   2b118:	movls	r0, #0
   2b11c:	add	sp, sp, #12
   2b120:	pop	{r4, r5, pc}
   2b124:	cmp	r3, #0
   2b128:	beq	2b0e0 <blkid_probe_get_size@plt+0x23bc8>
   2b12c:	mov	r0, #1
   2b130:	add	sp, sp, #12
   2b134:	pop	{r4, r5, pc}
   2b138:	ldr	r2, [pc, #88]	; 2b198 <blkid_probe_get_size@plt+0x23c80>
   2b13c:	mov	r0, r3
   2b140:	add	r2, pc, r2
   2b144:	add	r3, r2, #12
   2b148:	ldr	r1, [pc, #76]	; 2b19c <blkid_probe_get_size@plt+0x23c84>
   2b14c:	ldr	r2, [pc, #76]	; 2b1a0 <blkid_probe_get_size@plt+0x23c88>
   2b150:	str	r3, [sp]
   2b154:	add	r2, pc, r2
   2b158:	mov	r3, #127	; 0x7f
   2b15c:	add	r1, pc, r1
   2b160:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b164:	ldr	r2, [pc, #56]	; 2b1a4 <blkid_probe_get_size@plt+0x23c8c>
   2b168:	mov	r0, r3
   2b16c:	add	r2, pc, r2
   2b170:	add	r3, r2, #12
   2b174:	ldr	r1, [pc, #44]	; 2b1a8 <blkid_probe_get_size@plt+0x23c90>
   2b178:	ldr	r2, [pc, #44]	; 2b1ac <blkid_probe_get_size@plt+0x23c94>
   2b17c:	str	r3, [sp]
   2b180:	add	r2, pc, r2
   2b184:	mov	r3, #128	; 0x80
   2b188:	add	r1, pc, r1
   2b18c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b190:	mvn	r0, #0
   2b194:	b	2b11c <blkid_probe_get_size@plt+0x23c04>
   2b198:			; <UNDEFINED> instruction: 0x000416b8
   2b19c:	andeq	r2, r4, r8, lsl #7
   2b1a0:	andeq	r2, r4, r8, ror #6
   2b1a4:	andeq	r1, r4, ip, lsl #13
   2b1a8:	andeq	r2, r4, r8, ror #6
   2b1ac:	andeq	r2, r4, ip, lsr r3
   2b1b0:	push	{r4, r5, r6, r7, lr}
   2b1b4:	sub	sp, sp, #12
   2b1b8:	ldrb	r2, [r0, #24]
   2b1bc:	lsl	r3, r2, #27
   2b1c0:	asr	r3, r3, #27
   2b1c4:	sub	r3, r3, #1
   2b1c8:	cmp	r3, #4
   2b1cc:	bls	2b1fc <blkid_probe_get_size@plt+0x23ce4>
   2b1d0:	ldr	r2, [pc, #356]	; 2b33c <blkid_probe_get_size@plt+0x23e24>
   2b1d4:	ldr	r1, [pc, #356]	; 2b340 <blkid_probe_get_size@plt+0x23e28>
   2b1d8:	add	r2, pc, r2
   2b1dc:	add	r2, r2, #36	; 0x24
   2b1e0:	str	r2, [sp]
   2b1e4:	ldr	r2, [pc, #344]	; 2b344 <blkid_probe_get_size@plt+0x23e2c>
   2b1e8:	mov	r3, #198	; 0xc6
   2b1ec:	add	r2, pc, r2
   2b1f0:	add	r1, pc, r1
   2b1f4:	mov	r0, #0
   2b1f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b1fc:	ldrb	r3, [r1, #24]
   2b200:	eor	ip, r2, r3
   2b204:	tst	ip, #31
   2b208:	bne	2b308 <blkid_probe_get_size@plt+0x23df0>
   2b20c:	tst	r2, #224	; 0xe0
   2b210:	and	r3, r3, #224	; 0xe0
   2b214:	beq	2b2d4 <blkid_probe_get_size@plt+0x23dbc>
   2b218:	cmp	r3, #0
   2b21c:	beq	2b334 <blkid_probe_get_size@plt+0x23e1c>
   2b220:	ldrb	r3, [r0, #25]
   2b224:	tst	r3, #1
   2b228:	bne	2b238 <blkid_probe_get_size@plt+0x23d20>
   2b22c:	ldrb	r2, [r1, #25]
   2b230:	tst	r2, #1
   2b234:	bne	2b334 <blkid_probe_get_size@plt+0x23e1c>
   2b238:	tst	r3, #1
   2b23c:	beq	2b24c <blkid_probe_get_size@plt+0x23d34>
   2b240:	ldrb	r3, [r1, #25]
   2b244:	tst	r3, #1
   2b248:	beq	2b2dc <blkid_probe_get_size@plt+0x23dc4>
   2b24c:	ldrd	r4, [r0, #88]	; 0x58
   2b250:	ldrd	r2, [r0, #96]	; 0x60
   2b254:	mov	r0, #0
   2b258:	mov	ip, r0
   2b25c:	adds	r6, r4, r2
   2b260:	adcs	r7, r5, r3
   2b264:	ldrd	r4, [r1, #96]	; 0x60
   2b268:	ldrd	r2, [r1, #88]	; 0x58
   2b26c:	movcs	r0, #1
   2b270:	orrs	r1, ip, r0
   2b274:	movne	ip, #1
   2b278:	moveq	ip, #0
   2b27c:	adds	r0, r4, r2
   2b280:	adcs	r1, r5, r3
   2b284:	mov	r3, #0
   2b288:	mov	r2, r3
   2b28c:	movcs	r3, #1
   2b290:	orrs	r3, r2, r3
   2b294:	movne	r3, #1
   2b298:	moveq	r3, #0
   2b29c:	cmp	ip, #0
   2b2a0:	mov	r4, r0
   2b2a4:	mov	r5, r1
   2b2a8:	bne	2b2e8 <blkid_probe_get_size@plt+0x23dd0>
   2b2ac:	cmp	r3, #0
   2b2b0:	mvnne	r5, #0
   2b2b4:	mvnne	r4, #0
   2b2b8:	cmp	r5, r7
   2b2bc:	cmpeq	r4, r6
   2b2c0:	bhi	2b334 <blkid_probe_get_size@plt+0x23e1c>
   2b2c4:	movcc	r0, #1
   2b2c8:	movcs	r0, #0
   2b2cc:	add	sp, sp, #12
   2b2d0:	pop	{r4, r5, r6, r7, pc}
   2b2d4:	cmp	r3, #0
   2b2d8:	beq	2b220 <blkid_probe_get_size@plt+0x23d08>
   2b2dc:	mov	r0, #1
   2b2e0:	add	sp, sp, #12
   2b2e4:	pop	{r4, r5, r6, r7, pc}
   2b2e8:	cmp	r3, #0
   2b2ec:	movne	r0, #0
   2b2f0:	bne	2b2e0 <blkid_probe_get_size@plt+0x23dc8>
   2b2f4:	and	r0, r0, r1
   2b2f8:	adds	r0, r0, #1
   2b2fc:	movne	r0, #1
   2b300:	add	sp, sp, #12
   2b304:	pop	{r4, r5, r6, r7, pc}
   2b308:	ldr	r2, [pc, #56]	; 2b348 <blkid_probe_get_size@plt+0x23e30>
   2b30c:	ldr	r1, [pc, #56]	; 2b34c <blkid_probe_get_size@plt+0x23e34>
   2b310:	add	r2, pc, r2
   2b314:	add	r2, r2, #36	; 0x24
   2b318:	str	r2, [sp]
   2b31c:	ldr	r2, [pc, #44]	; 2b350 <blkid_probe_get_size@plt+0x23e38>
   2b320:	mov	r3, #199	; 0xc7
   2b324:	add	r2, pc, r2
   2b328:	add	r1, pc, r1
   2b32c:	mov	r0, #0
   2b330:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b334:	mvn	r0, #0
   2b338:	b	2b2e0 <blkid_probe_get_size@plt+0x23dc8>
   2b33c:	andeq	r1, r4, r0, lsr #12
   2b340:	andeq	r2, r4, ip, lsl #6
   2b344:	ldrdeq	r2, [r4], -r0
   2b348:	andeq	r1, r4, r8, ror #9
   2b34c:	strdeq	r2, [r4], -r4
   2b350:	muleq	r4, r8, r1
   2b354:	push	{r4, r5, lr}
   2b358:	sub	sp, sp, #12
   2b35c:	ldrb	r2, [r0, #24]
   2b360:	lsl	r3, r2, #27
   2b364:	asr	r3, r3, #27
   2b368:	sub	r3, r3, #1
   2b36c:	cmp	r3, #4
   2b370:	bls	2b3a0 <blkid_probe_get_size@plt+0x23e88>
   2b374:	ldr	r2, [pc, #224]	; 2b45c <blkid_probe_get_size@plt+0x23f44>
   2b378:	ldr	r1, [pc, #224]	; 2b460 <blkid_probe_get_size@plt+0x23f48>
   2b37c:	add	r2, pc, r2
   2b380:	add	r2, r2, #64	; 0x40
   2b384:	str	r2, [sp]
   2b388:	ldr	r2, [pc, #212]	; 2b464 <blkid_probe_get_size@plt+0x23f4c>
   2b38c:	mov	r3, #172	; 0xac
   2b390:	add	r2, pc, r2
   2b394:	add	r1, pc, r1
   2b398:	mov	r0, #0
   2b39c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b3a0:	ldrb	r3, [r1, #24]
   2b3a4:	eor	ip, r2, r3
   2b3a8:	tst	ip, #31
   2b3ac:	bne	2b428 <blkid_probe_get_size@plt+0x23f10>
   2b3b0:	tst	r2, #224	; 0xe0
   2b3b4:	and	r3, r3, #224	; 0xe0
   2b3b8:	beq	2b414 <blkid_probe_get_size@plt+0x23efc>
   2b3bc:	cmp	r3, #0
   2b3c0:	beq	2b454 <blkid_probe_get_size@plt+0x23f3c>
   2b3c4:	ldrb	r3, [r0, #25]
   2b3c8:	tst	r3, #1
   2b3cc:	bne	2b3dc <blkid_probe_get_size@plt+0x23ec4>
   2b3d0:	ldrb	r2, [r1, #25]
   2b3d4:	tst	r2, #1
   2b3d8:	bne	2b454 <blkid_probe_get_size@plt+0x23f3c>
   2b3dc:	tst	r3, #1
   2b3e0:	beq	2b3f0 <blkid_probe_get_size@plt+0x23ed8>
   2b3e4:	ldrb	r3, [r1, #25]
   2b3e8:	tst	r3, #1
   2b3ec:	beq	2b41c <blkid_probe_get_size@plt+0x23f04>
   2b3f0:	ldrd	r4, [r0, #88]	; 0x58
   2b3f4:	ldrd	r2, [r1, #88]	; 0x58
   2b3f8:	cmp	r5, r3
   2b3fc:	cmpeq	r4, r2
   2b400:	bcc	2b454 <blkid_probe_get_size@plt+0x23f3c>
   2b404:	movhi	r0, #1
   2b408:	movls	r0, #0
   2b40c:	add	sp, sp, #12
   2b410:	pop	{r4, r5, pc}
   2b414:	cmp	r3, #0
   2b418:	beq	2b3c4 <blkid_probe_get_size@plt+0x23eac>
   2b41c:	mov	r0, #1
   2b420:	add	sp, sp, #12
   2b424:	pop	{r4, r5, pc}
   2b428:	ldr	r2, [pc, #56]	; 2b468 <blkid_probe_get_size@plt+0x23f50>
   2b42c:	ldr	r1, [pc, #56]	; 2b46c <blkid_probe_get_size@plt+0x23f54>
   2b430:	add	r2, pc, r2
   2b434:	add	r2, r2, #64	; 0x40
   2b438:	str	r2, [sp]
   2b43c:	ldr	r2, [pc, #44]	; 2b470 <blkid_probe_get_size@plt+0x23f58>
   2b440:	mov	r3, #173	; 0xad
   2b444:	add	r2, pc, r2
   2b448:	add	r1, pc, r1
   2b44c:	mov	r0, #0
   2b450:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b454:	mvn	r0, #0
   2b458:	b	2b420 <blkid_probe_get_size@plt+0x23f08>
   2b45c:	andeq	r1, r4, ip, ror r4
   2b460:	andeq	r2, r4, r8, ror #2
   2b464:	andeq	r2, r4, ip, lsr #2
   2b468:	andeq	r1, r4, r8, asr #7
   2b46c:	ldrdeq	r2, [r4], -r4
   2b470:	andeq	r2, r4, r8, ror r0
   2b474:	cmn	r2, #5
   2b478:	bhi	2b4a8 <blkid_probe_get_size@plt+0x23f90>
   2b47c:	ldrb	r3, [r0, #39]	; 0x27
   2b480:	tst	r3, #4
   2b484:	addeq	r1, r0, #4
   2b488:	ldrne	r1, [r0, #4]
   2b48c:	ldr	r0, [pc, #92]	; 2b4f0 <blkid_probe_get_size@plt+0x23fd8>
   2b490:	and	r3, r3, #3
   2b494:	add	r0, pc, r0
   2b498:	add	r3, r0, r3, lsl #4
   2b49c:	ldr	r0, [r3, #4]
   2b4a0:	mla	r0, r0, r2, r1
   2b4a4:	bx	lr
   2b4a8:	cmn	r2, #3
   2b4ac:	bhi	2b4bc <blkid_probe_get_size@plt+0x23fa4>
   2b4b0:	add	r0, r2, #4
   2b4b4:	add	r0, r1, r0, lsl #4
   2b4b8:	bx	lr
   2b4bc:	ldr	r2, [pc, #48]	; 2b4f4 <blkid_probe_get_size@plt+0x23fdc>
   2b4c0:	push	{lr}		; (str lr, [sp, #-4]!)
   2b4c4:	add	r2, pc, r2
   2b4c8:	sub	sp, sp, #12
   2b4cc:	add	r2, r2, #92	; 0x5c
   2b4d0:	str	r2, [sp]
   2b4d4:	ldr	r1, [pc, #28]	; 2b4f8 <blkid_probe_get_size@plt+0x23fe0>
   2b4d8:	ldr	r2, [pc, #28]	; 2b4fc <blkid_probe_get_size@plt+0x23fe4>
   2b4dc:	ldr	r3, [pc, #28]	; 2b500 <blkid_probe_get_size@plt+0x23fe8>
   2b4e0:	add	r2, pc, r2
   2b4e4:	add	r1, pc, r1
   2b4e8:	mov	r0, #0
   2b4ec:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   2b4f0:	andeq	lr, r5, ip, ror lr
   2b4f4:	andeq	r1, r4, r4, lsr r3
   2b4f8:	andeq	r2, r4, r4, rrx
   2b4fc:	andeq	r2, r4, r0, asr r0
   2b500:	muleq	r0, r3, r1
   2b504:	mov	r2, r1
   2b508:	mov	r1, #8
   2b50c:	b	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b510:	push	{lr}		; (str lr, [sp, #-4]!)
   2b514:	sub	sp, sp, #12
   2b518:	add	r3, sp, #8
   2b51c:	mov	r2, r1
   2b520:	str	r0, [r3, #-4]!
   2b524:	mov	r1, #4
   2b528:	mov	r0, r3
   2b52c:	bl	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b530:	add	sp, sp, #12
   2b534:	pop	{pc}		; (ldr pc, [sp], #4)
   2b538:	b	3fc38 <blkid_probe_get_size@plt+0x38720>
   2b53c:	push	{r4, r5, r6, r7, lr}
   2b540:	subs	r5, r0, #0
   2b544:	sub	sp, sp, #12
   2b548:	beq	2b5e8 <blkid_probe_get_size@plt+0x240d0>
   2b54c:	cmp	r1, #0
   2b550:	mov	r6, r1
   2b554:	beq	2b610 <blkid_probe_get_size@plt+0x240f8>
   2b558:	ldr	r1, [pc, #220]	; 2b63c <blkid_probe_get_size@plt+0x24124>
   2b55c:	add	r1, pc, r1
   2b560:	bl	6c9c <strspn@plt>
   2b564:	subs	r4, r0, #0
   2b568:	bne	2b5d0 <blkid_probe_get_size@plt+0x240b8>
   2b56c:	ldr	r7, [pc, #204]	; 2b640 <blkid_probe_get_size@plt+0x24128>
   2b570:	add	r7, pc, r7
   2b574:	b	2b5b4 <blkid_probe_get_size@plt+0x2409c>
   2b578:	add	r4, r5, r1
   2b57c:	mov	r0, r5
   2b580:	mov	r2, r6
   2b584:	bl	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b588:	mov	r0, r4
   2b58c:	mov	r1, r7
   2b590:	bl	6c9c <strspn@plt>
   2b594:	ldrb	r3, [r4, r0]
   2b598:	add	r5, r4, r0
   2b59c:	cmp	r3, #0
   2b5a0:	beq	2b5c8 <blkid_probe_get_size@plt+0x240b0>
   2b5a4:	mov	r0, r4
   2b5a8:	mov	r2, r6
   2b5ac:	mov	r1, #1
   2b5b0:	bl	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b5b4:	mov	r1, r7
   2b5b8:	mov	r0, r5
   2b5bc:	bl	6a8c <strcspn@plt>
   2b5c0:	subs	r1, r0, #0
   2b5c4:	bne	2b578 <blkid_probe_get_size@plt+0x24060>
   2b5c8:	add	sp, sp, #12
   2b5cc:	pop	{r4, r5, r6, r7, pc}
   2b5d0:	mov	r0, r5
   2b5d4:	mov	r2, r6
   2b5d8:	mov	r1, #1
   2b5dc:	bl	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b5e0:	add	r5, r5, r4
   2b5e4:	b	2b56c <blkid_probe_get_size@plt+0x24054>
   2b5e8:	ldr	r2, [pc, #84]	; 2b644 <blkid_probe_get_size@plt+0x2412c>
   2b5ec:	ldr	r1, [pc, #84]	; 2b648 <blkid_probe_get_size@plt+0x24130>
   2b5f0:	add	r2, pc, r2
   2b5f4:	add	r2, r2, #112	; 0x70
   2b5f8:	str	r2, [sp]
   2b5fc:	ldr	r2, [pc, #72]	; 2b64c <blkid_probe_get_size@plt+0x24134>
   2b600:	mov	r3, #17
   2b604:	add	r2, pc, r2
   2b608:	add	r1, pc, r1
   2b60c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b610:	ldr	r3, [pc, #56]	; 2b650 <blkid_probe_get_size@plt+0x24138>
   2b614:	mov	r0, r1
   2b618:	add	r3, pc, r3
   2b61c:	ldr	r2, [pc, #48]	; 2b654 <blkid_probe_get_size@plt+0x2413c>
   2b620:	ldr	r1, [pc, #48]	; 2b658 <blkid_probe_get_size@plt+0x24140>
   2b624:	add	r3, r3, #112	; 0x70
   2b628:	str	r3, [sp]
   2b62c:	add	r2, pc, r2
   2b630:	mov	r3, #18
   2b634:	add	r1, pc, r1
   2b638:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b63c:	andeq	ip, r4, r4, ror #20
   2b640:	andeq	ip, r4, r0, asr sl
   2b644:	andeq	r1, r4, r8, lsl #4
   2b648:	muleq	r4, r8, fp
   2b64c:	andeq	r1, r4, r4, asr pc
   2b650:	andeq	r1, r4, r0, ror #3
   2b654:	andeq	r1, r4, ip, lsr #30
   2b658:	andeq	r1, r4, r0, asr #30
   2b65c:	push	{r4, r5, r6, lr}
   2b660:	mov	r5, r1
   2b664:	mov	r4, r0
   2b668:	bl	723c <strlen@plt>
   2b66c:	mov	r2, r5
   2b670:	add	r1, r0, #1
   2b674:	mov	r0, r4
   2b678:	pop	{r4, r5, r6, lr}
   2b67c:	b	3e47c <blkid_probe_get_size@plt+0x36f64>
   2b680:	push	{r4, r5, r6, lr}
   2b684:	mov	r5, r1
   2b688:	ldr	r0, [r0]
   2b68c:	bl	708c <basename@plt>
   2b690:	mov	r4, r0
   2b694:	ldr	r0, [r5]
   2b698:	bl	708c <basename@plt>
   2b69c:	mov	r1, r0
   2b6a0:	mov	r0, r4
   2b6a4:	pop	{r4, r5, r6, lr}
   2b6a8:	b	7314 <strcmp@plt>
   2b6ac:	ldr	r3, [pc, #208]	; 2b784 <blkid_probe_get_size@plt+0x2426c>
   2b6b0:	ldr	r2, [pc, #208]	; 2b788 <blkid_probe_get_size@plt+0x24270>
   2b6b4:	add	r3, pc, r3
   2b6b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b6bc:	sub	sp, sp, #792	; 0x318
   2b6c0:	ldr	sl, [r3, r2]
   2b6c4:	ldr	r8, [pc, #192]	; 2b78c <blkid_probe_get_size@plt+0x24274>
   2b6c8:	ldr	r9, [pc, #192]	; 2b790 <blkid_probe_get_size@plt+0x24278>
   2b6cc:	ldr	r2, [sl]
   2b6d0:	add	r8, pc, r8
   2b6d4:	add	r5, r0, #324	; 0x144
   2b6d8:	add	r6, r0, #580	; 0x244
   2b6dc:	mov	r4, #0
   2b6e0:	add	r7, sp, #16
   2b6e4:	str	r2, [sp, #788]	; 0x314
   2b6e8:	ldr	r3, [r5, #4]!
   2b6ec:	sub	r1, r9, r4
   2b6f0:	str	r3, [sp, #4]
   2b6f4:	add	r0, r7, r4
   2b6f8:	str	r8, [sp]
   2b6fc:	mvn	r3, #0
   2b700:	mov	r2, #1
   2b704:	bl	7260 <__snprintf_chk@plt>
   2b708:	mov	r1, #0
   2b70c:	cmp	r5, r6
   2b710:	str	r1, [r5]
   2b714:	add	r4, r4, r0
   2b718:	bne	2b6e8 <blkid_probe_get_size@plt+0x241d0>
   2b71c:	ldr	r3, [pc, #112]	; 2b794 <blkid_probe_get_size@plt+0x2427c>
   2b720:	add	r3, pc, r3
   2b724:	ldr	r3, [r3]
   2b728:	cmp	r3, #6
   2b72c:	ble	2b768 <blkid_probe_get_size@plt+0x24250>
   2b730:	ldr	r2, [pc, #96]	; 2b798 <blkid_probe_get_size@plt+0x24280>
   2b734:	ldr	r3, [pc, #96]	; 2b79c <blkid_probe_get_size@plt+0x24284>
   2b738:	add	r2, pc, r2
   2b73c:	add	r3, pc, r3
   2b740:	str	r2, [sp, #4]
   2b744:	ldr	r2, [pc, #84]	; 2b7a0 <blkid_probe_get_size@plt+0x24288>
   2b748:	add	r3, r3, #128	; 0x80
   2b74c:	str	r3, [sp]
   2b750:	str	r7, [sp, #12]
   2b754:	str	r4, [sp, #8]
   2b758:	ldr	r3, [pc, #68]	; 2b7a4 <blkid_probe_get_size@plt+0x2428c>
   2b75c:	add	r2, pc, r2
   2b760:	mov	r0, #7
   2b764:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2b768:	ldr	r2, [sp, #788]	; 0x314
   2b76c:	ldr	r3, [sl]
   2b770:	cmp	r2, r3
   2b774:	bne	2b780 <blkid_probe_get_size@plt+0x24268>
   2b778:	add	sp, sp, #792	; 0x318
   2b77c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b780:	bl	6fb4 <__stack_chk_fail@plt>
   2b784:			; <UNDEFINED> instruction: 0x0006c4b4
   2b788:	andeq	r0, r0, ip, lsr r4
   2b78c:	andeq	r1, r4, ip, lsr #29
   2b790:	andeq	r0, r0, r1, lsl #6
   2b794:	andeq	ip, r6, ip, lsl sl
   2b798:	andeq	r1, r4, r8, asr #28
   2b79c:	strheq	r1, [r4], -ip
   2b7a0:	andeq	r1, r4, r0, ror #26
   2b7a4:			; <UNDEFINED> instruction: 0x00000cb5
   2b7a8:	push	{r4, r5, r6, lr}
   2b7ac:	mov	r5, r0
   2b7b0:	mov	r0, r5
   2b7b4:	bl	6bb8 <readdir64@plt>
   2b7b8:	subs	r4, r0, #0
   2b7bc:	add	r0, r4, #19
   2b7c0:	beq	2b7d0 <blkid_probe_get_size@plt+0x242b8>
   2b7c4:	bl	39c08 <blkid_probe_get_size@plt+0x326f0>
   2b7c8:	cmp	r0, #0
   2b7cc:	bne	2b7b0 <blkid_probe_get_size@plt+0x24298>
   2b7d0:	mov	r0, r4
   2b7d4:	pop	{r4, r5, r6, pc}
   2b7d8:	mov	r2, r0
   2b7dc:	ldr	r0, [pc, #8]	; 2b7ec <blkid_probe_get_size@plt+0x242d4>
   2b7e0:	mov	r1, #26
   2b7e4:	add	r0, pc, r0
   2b7e8:	b	39804 <blkid_probe_get_size@plt+0x322ec>
   2b7ec:	andeq	lr, r5, ip, lsr #9
   2b7f0:	ldr	r3, [pc, #324]	; 2b93c <blkid_probe_get_size@plt+0x24424>
   2b7f4:	ldr	r2, [pc, #324]	; 2b940 <blkid_probe_get_size@plt+0x24428>
   2b7f8:	add	r3, pc, r3
   2b7fc:	push	{r4, r5, r6, r7, lr}
   2b800:	sub	sp, sp, #20
   2b804:	ldr	r6, [r3, r2]
   2b808:	subs	r5, r0, #0
   2b80c:	ldr	r3, [r6]
   2b810:	str	r3, [sp, #12]
   2b814:	beq	2b8bc <blkid_probe_get_size@plt+0x243a4>
   2b818:	ldr	r0, [r5, #28]
   2b81c:	mov	r7, r1
   2b820:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   2b824:	subs	r4, r0, #0
   2b828:	beq	2b8e4 <blkid_probe_get_size@plt+0x243cc>
   2b82c:	sub	r4, r4, #1
   2b830:	mov	r2, r4
   2b834:	mov	r1, r7
   2b838:	ldr	r0, [r5, #28]
   2b83c:	bl	43bd0 <blkid_probe_get_size@plt+0x3c6b8>
   2b840:	cmp	r0, #0
   2b844:	blt	2b854 <blkid_probe_get_size@plt+0x2433c>
   2b848:	cmp	r4, #0
   2b84c:	beq	2b86c <blkid_probe_get_size@plt+0x24354>
   2b850:	mov	r0, #0
   2b854:	ldr	r2, [sp, #12]
   2b858:	ldr	r3, [r6]
   2b85c:	cmp	r2, r3
   2b860:	bne	2b938 <blkid_probe_get_size@plt+0x24420>
   2b864:	add	sp, sp, #20
   2b868:	pop	{r4, r5, r6, r7, pc}
   2b86c:	ldr	r0, [r5, #4]
   2b870:	str	r7, [sp, #8]
   2b874:	cmp	r0, #0
   2b878:	blt	2b90c <blkid_probe_get_size@plt+0x243f4>
   2b87c:	ldrb	r3, [r5, #32]
   2b880:	tst	r3, #1
   2b884:	bne	2b850 <blkid_probe_get_size@plt+0x24338>
   2b888:	mov	r3, #4
   2b88c:	str	r3, [sp]
   2b890:	mov	r2, #2
   2b894:	add	r3, sp, #8
   2b898:	ldr	r1, [pc, #164]	; 2b944 <blkid_probe_get_size@plt+0x2442c>
   2b89c:	bl	70b0 <setsockopt@plt>
   2b8a0:	cmp	r0, #0
   2b8a4:	bge	2b850 <blkid_probe_get_size@plt+0x24338>
   2b8a8:	bl	732c <__errno_location@plt>
   2b8ac:	ldr	r0, [r0]
   2b8b0:	rsb	r0, r0, #0
   2b8b4:	and	r0, r0, r0, asr #31
   2b8b8:	b	2b854 <blkid_probe_get_size@plt+0x2433c>
   2b8bc:	ldr	r2, [pc, #132]	; 2b948 <blkid_probe_get_size@plt+0x24430>
   2b8c0:	ldr	r1, [pc, #132]	; 2b94c <blkid_probe_get_size@plt+0x24434>
   2b8c4:	add	r2, pc, r2
   2b8c8:	add	r2, r2, #148	; 0x94
   2b8cc:	str	r2, [sp]
   2b8d0:	ldr	r2, [pc, #120]	; 2b950 <blkid_probe_get_size@plt+0x24438>
   2b8d4:	mov	r3, #198	; 0xc6
   2b8d8:	add	r2, pc, r2
   2b8dc:	add	r1, pc, r1
   2b8e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b8e4:	ldr	r2, [pc, #104]	; 2b954 <blkid_probe_get_size@plt+0x2443c>
   2b8e8:	ldr	r1, [pc, #104]	; 2b958 <blkid_probe_get_size@plt+0x24440>
   2b8ec:	add	r2, pc, r2
   2b8f0:	add	r2, r2, #148	; 0x94
   2b8f4:	str	r2, [sp]
   2b8f8:	ldr	r2, [pc, #92]	; 2b95c <blkid_probe_get_size@plt+0x24444>
   2b8fc:	mov	r3, #202	; 0xca
   2b900:	add	r2, pc, r2
   2b904:	add	r1, pc, r1
   2b908:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b90c:	ldr	r3, [pc, #76]	; 2b960 <blkid_probe_get_size@plt+0x24448>
   2b910:	ldr	r2, [pc, #76]	; 2b964 <blkid_probe_get_size@plt+0x2444c>
   2b914:	add	r3, pc, r3
   2b918:	ldr	r1, [pc, #72]	; 2b968 <blkid_probe_get_size@plt+0x24450>
   2b91c:	add	r3, r3, #180	; 0xb4
   2b920:	str	r3, [sp]
   2b924:	mov	r0, r4
   2b928:	mov	r3, #181	; 0xb5
   2b92c:	add	r2, pc, r2
   2b930:	add	r1, pc, r1
   2b934:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b938:	bl	6fb4 <__stack_chk_fail@plt>
   2b93c:	andeq	ip, r6, r0, ror r3
   2b940:	andeq	r0, r0, ip, lsr r4
   2b944:	andeq	r0, r0, lr, lsl #2
   2b948:	andeq	r0, r4, r4, lsr pc
   2b94c:	strheq	r3, [r4], -r8
   2b950:	andeq	r1, r4, r4, asr #25
   2b954:	andeq	r0, r4, ip, lsl #30
   2b958:	andeq	r1, r4, r8, asr #25
   2b95c:	muleq	r4, ip, ip
   2b960:	andeq	r0, r4, r4, ror #29
   2b964:	andeq	r1, r4, r0, ror ip
   2b968:	andeq	r1, r4, r8, lsr #25
   2b96c:	subs	r3, r0, #0
   2b970:	push	{lr}		; (str lr, [sp, #-4]!)
   2b974:	sub	sp, sp, #12
   2b978:	beq	2b9a0 <blkid_probe_get_size@plt+0x24488>
   2b97c:	ldr	r0, [r3, #12]
   2b980:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   2b984:	cmp	r0, #0
   2b988:	beq	2b998 <blkid_probe_get_size@plt+0x24480>
   2b98c:	ldrb	r3, [r0, #24]
   2b990:	tst	r3, #224	; 0xe0
   2b994:	moveq	r0, #0
   2b998:	add	sp, sp, #12
   2b99c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b9a0:	ldr	r2, [pc, #32]	; 2b9c8 <blkid_probe_get_size@plt+0x244b0>
   2b9a4:	ldr	r1, [pc, #32]	; 2b9cc <blkid_probe_get_size@plt+0x244b4>
   2b9a8:	add	r2, pc, r2
   2b9ac:	add	r2, r2, #204	; 0xcc
   2b9b0:	str	r2, [sp]
   2b9b4:	ldr	r2, [pc, #20]	; 2b9d0 <blkid_probe_get_size@plt+0x244b8>
   2b9b8:	ldr	r3, [pc, #20]	; 2b9d4 <blkid_probe_get_size@plt+0x244bc>
   2b9bc:	add	r2, pc, r2
   2b9c0:	add	r1, pc, r1
   2b9c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2b9c8:	andeq	r0, r4, r0, asr lr
   2b9cc:			; <UNDEFINED> instruction: 0x00048cb0
   2b9d0:	andeq	r1, r4, r0, lsl #22
   2b9d4:	muleq	r0, r4, fp
   2b9d8:	ldr	ip, [pc, #316]	; 2bb1c <blkid_probe_get_size@plt+0x24604>
   2b9dc:	push	{r4, r5, lr}
   2b9e0:	add	ip, pc, ip
   2b9e4:	ldr	lr, [pc, #308]	; 2bb20 <blkid_probe_get_size@plt+0x24608>
   2b9e8:	sub	sp, sp, #28
   2b9ec:	cmp	r0, #0
   2b9f0:	ldr	r4, [ip, lr]
   2b9f4:	ldr	lr, [r4]
   2b9f8:	str	lr, [sp, #20]
   2b9fc:	beq	2ba88 <blkid_probe_get_size@plt+0x24570>
   2ba00:	cmp	r1, #0
   2ba04:	blt	2bab0 <blkid_probe_get_size@plt+0x24598>
   2ba08:	cmp	r2, #1
   2ba0c:	bne	2badc <blkid_probe_get_size@plt+0x245c4>
   2ba10:	mov	r2, #8
   2ba14:	mov	r0, r1
   2ba18:	add	r1, sp, r2
   2ba1c:	mov	r5, r3
   2ba20:	bl	6d74 <read@plt>
   2ba24:	cmp	r0, #0
   2ba28:	blt	2ba64 <blkid_probe_get_size@plt+0x2454c>
   2ba2c:	cmp	r0, #8
   2ba30:	bne	2bb10 <blkid_probe_get_size@plt+0x245f8>
   2ba34:	cmp	r5, #0
   2ba38:	moveq	r0, r5
   2ba3c:	mvnne	r2, #0
   2ba40:	mvnne	r3, #0
   2ba44:	movne	r0, #0
   2ba48:	strdne	r2, [r5]
   2ba4c:	ldr	r2, [sp, #20]
   2ba50:	ldr	r3, [r4]
   2ba54:	cmp	r2, r3
   2ba58:	bne	2bb18 <blkid_probe_get_size@plt+0x24600>
   2ba5c:	add	sp, sp, #28
   2ba60:	pop	{r4, r5, pc}
   2ba64:	bl	732c <__errno_location@plt>
   2ba68:	ldr	r0, [r0]
   2ba6c:	cmp	r0, #4
   2ba70:	beq	2ba80 <blkid_probe_get_size@plt+0x24568>
   2ba74:	cmp	r0, #11
   2ba78:	rsbne	r0, r0, #0
   2ba7c:	bne	2ba4c <blkid_probe_get_size@plt+0x24534>
   2ba80:	mov	r0, #0
   2ba84:	b	2ba4c <blkid_probe_get_size@plt+0x24534>
   2ba88:	ldr	r2, [pc, #148]	; 2bb24 <blkid_probe_get_size@plt+0x2460c>
   2ba8c:	ldr	r1, [pc, #148]	; 2bb28 <blkid_probe_get_size@plt+0x24610>
   2ba90:	add	r2, pc, r2
   2ba94:	add	r2, r2, #224	; 0xe0
   2ba98:	str	r2, [sp]
   2ba9c:	ldr	r2, [pc, #136]	; 2bb2c <blkid_probe_get_size@plt+0x24614>
   2baa0:	ldr	r3, [pc, #136]	; 2bb30 <blkid_probe_get_size@plt+0x24618>
   2baa4:	add	r2, pc, r2
   2baa8:	add	r1, pc, r1
   2baac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bab0:	ldr	r2, [pc, #124]	; 2bb34 <blkid_probe_get_size@plt+0x2461c>
   2bab4:	ldr	r1, [pc, #124]	; 2bb38 <blkid_probe_get_size@plt+0x24620>
   2bab8:	add	r2, pc, r2
   2babc:	add	r2, r2, #224	; 0xe0
   2bac0:	str	r2, [sp]
   2bac4:	ldr	r2, [pc, #112]	; 2bb3c <blkid_probe_get_size@plt+0x24624>
   2bac8:	ldr	r3, [pc, #112]	; 2bb40 <blkid_probe_get_size@plt+0x24628>
   2bacc:	add	r2, pc, r2
   2bad0:	add	r1, pc, r1
   2bad4:	mov	r0, #0
   2bad8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2badc:	ldr	r2, [pc, #96]	; 2bb44 <blkid_probe_get_size@plt+0x2462c>
   2bae0:	ldr	r1, [pc, #96]	; 2bb48 <blkid_probe_get_size@plt+0x24630>
   2bae4:	add	r2, pc, r2
   2bae8:	add	r2, r2, #224	; 0xe0
   2baec:	str	r2, [sp]
   2baf0:	ldr	r2, [pc, #84]	; 2bb4c <blkid_probe_get_size@plt+0x24634>
   2baf4:	mov	r0, #0
   2baf8:	ldr	r3, [pc, #80]	; 2bb50 <blkid_probe_get_size@plt+0x24638>
   2bafc:	add	r2, pc, r2
   2bb00:	add	r1, pc, r1
   2bb04:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2bb08:	mvn	r0, #4
   2bb0c:	b	2ba4c <blkid_probe_get_size@plt+0x24534>
   2bb10:	mvn	r0, #4
   2bb14:	b	2ba4c <blkid_probe_get_size@plt+0x24534>
   2bb18:	bl	6fb4 <__stack_chk_fail@plt>
   2bb1c:	andeq	ip, r6, r8, lsl #3
   2bb20:	andeq	r0, r0, ip, lsr r4
   2bb24:	andeq	r0, r4, r8, ror #26
   2bb28:	andeq	r8, r4, r8, asr #23
   2bb2c:	andeq	r1, r4, r8, lsl sl
   2bb30:	andeq	r0, r0, fp, lsl #19
   2bb34:	andeq	r0, r4, r0, asr #26
   2bb38:	andeq	r1, r4, ip, lsl #22
   2bb3c:	strdeq	r1, [r4], -r0
   2bb40:	andeq	r0, r0, ip, lsl #19
   2bb44:	andeq	r0, r4, r4, lsl sp
   2bb48:	andeq	r1, r4, r4, ror #21
   2bb4c:	andeq	r1, r4, r0, asr #19
   2bb50:	andeq	r0, r0, lr, lsl #19
   2bb54:	push	{r4, r5, r6, lr}
   2bb58:	subs	r6, r0, #0
   2bb5c:	sub	sp, sp, #8
   2bb60:	beq	2bbec <blkid_probe_get_size@plt+0x246d4>
   2bb64:	cmp	r1, #0
   2bb68:	mov	r4, r1
   2bb6c:	beq	2bc14 <blkid_probe_get_size@plt+0x246fc>
   2bb70:	mov	r5, r2
   2bb74:	ldr	r2, [r1, #296]	; 0x128
   2bb78:	cmp	r2, r5
   2bb7c:	bcc	2bc40 <blkid_probe_get_size@plt+0x24728>
   2bb80:	cmp	r5, #0
   2bb84:	bne	2bb90 <blkid_probe_get_size@plt+0x24678>
   2bb88:	add	sp, sp, #8
   2bb8c:	pop	{r4, r5, r6, pc}
   2bb90:	add	r0, r1, #24
   2bb94:	sub	r2, r2, r5
   2bb98:	add	r1, r0, r5
   2bb9c:	bl	6e04 <memmove@plt>
   2bba0:	ldr	r3, [r4, #296]	; 0x128
   2bba4:	sub	r5, r3, r5
   2bba8:	cmp	r5, #0
   2bbac:	str	r5, [r4, #296]	; 0x128
   2bbb0:	bne	2bb88 <blkid_probe_get_size@plt+0x24670>
   2bbb4:	ldr	r3, [r4, #304]	; 0x130
   2bbb8:	ldr	r0, [r4, #308]	; 0x134
   2bbbc:	cmp	r3, #0
   2bbc0:	strne	r0, [r3, #308]	; 0x134
   2bbc4:	ldrne	r0, [r4, #308]	; 0x134
   2bbc8:	cmp	r0, #0
   2bbcc:	beq	2bc6c <blkid_probe_get_size@plt+0x24754>
   2bbd0:	ldr	r3, [r4, #304]	; 0x130
   2bbd4:	str	r3, [r0, #304]	; 0x130
   2bbd8:	mov	r3, #0
   2bbdc:	str	r3, [r4, #308]	; 0x134
   2bbe0:	str	r3, [r4, #304]	; 0x130
   2bbe4:	add	sp, sp, #8
   2bbe8:	pop	{r4, r5, r6, pc}
   2bbec:	ldr	r2, [pc, #180]	; 2bca8 <blkid_probe_get_size@plt+0x24790>
   2bbf0:	ldr	r1, [pc, #180]	; 2bcac <blkid_probe_get_size@plt+0x24794>
   2bbf4:	add	r2, pc, r2
   2bbf8:	add	r2, r2, #236	; 0xec
   2bbfc:	str	r2, [sp]
   2bc00:	ldr	r2, [pc, #168]	; 2bcb0 <blkid_probe_get_size@plt+0x24798>
   2bc04:	ldr	r3, [pc, #168]	; 2bcb4 <blkid_probe_get_size@plt+0x2479c>
   2bc08:	add	r2, pc, r2
   2bc0c:	add	r1, pc, r1
   2bc10:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bc14:	ldr	r3, [pc, #156]	; 2bcb8 <blkid_probe_get_size@plt+0x247a0>
   2bc18:	mov	r0, r1
   2bc1c:	add	r3, pc, r3
   2bc20:	ldr	r2, [pc, #148]	; 2bcbc <blkid_probe_get_size@plt+0x247a4>
   2bc24:	ldr	r1, [pc, #148]	; 2bcc0 <blkid_probe_get_size@plt+0x247a8>
   2bc28:	add	r3, r3, #236	; 0xec
   2bc2c:	str	r3, [sp]
   2bc30:	add	r2, pc, r2
   2bc34:	ldr	r3, [pc, #136]	; 2bcc4 <blkid_probe_get_size@plt+0x247ac>
   2bc38:	add	r1, pc, r1
   2bc3c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bc40:	ldr	r2, [pc, #128]	; 2bcc8 <blkid_probe_get_size@plt+0x247b0>
   2bc44:	ldr	r1, [pc, #128]	; 2bccc <blkid_probe_get_size@plt+0x247b4>
   2bc48:	add	r2, pc, r2
   2bc4c:	add	r2, r2, #236	; 0xec
   2bc50:	str	r2, [sp]
   2bc54:	ldr	r2, [pc, #116]	; 2bcd0 <blkid_probe_get_size@plt+0x247b8>
   2bc58:	mov	r3, #2656	; 0xa60
   2bc5c:	add	r2, pc, r2
   2bc60:	add	r1, pc, r1
   2bc64:	mov	r0, #0
   2bc68:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bc6c:	ldr	r3, [r6, #224]	; 0xe0
   2bc70:	cmp	r3, r4
   2bc74:	ldreq	r3, [r4, #304]	; 0x130
   2bc78:	streq	r3, [r6, #224]	; 0xe0
   2bc7c:	beq	2bbd8 <blkid_probe_get_size@plt+0x246c0>
   2bc80:	ldr	r3, [pc, #76]	; 2bcd4 <blkid_probe_get_size@plt+0x247bc>
   2bc84:	ldr	r2, [pc, #76]	; 2bcd8 <blkid_probe_get_size@plt+0x247c0>
   2bc88:	add	r3, pc, r3
   2bc8c:	ldr	r1, [pc, #72]	; 2bcdc <blkid_probe_get_size@plt+0x247c4>
   2bc90:	add	r3, r3, #236	; 0xec
   2bc94:	str	r3, [sp]
   2bc98:	add	r2, pc, r2
   2bc9c:	ldr	r3, [pc, #60]	; 2bce0 <blkid_probe_get_size@plt+0x247c8>
   2bca0:	add	r1, pc, r1
   2bca4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bca8:	andeq	r0, r4, r4, lsl #24
   2bcac:	andeq	r8, r4, r4, ror #20
   2bcb0:			; <UNDEFINED> instruction: 0x000418b4
   2bcb4:	andeq	r0, r0, lr, asr sl
   2bcb8:	ldrdeq	r0, [r4], -ip
   2bcbc:	andeq	r1, r4, ip, lsl #17
   2bcc0:	andeq	pc, r3, r0, lsr r4	; <UNPREDICTABLE>
   2bcc4:	andeq	r0, r0, pc, asr sl
   2bcc8:			; <UNDEFINED> instruction: 0x00040bb0
   2bccc:	muleq	r4, r8, r9
   2bcd0:	andeq	r1, r4, r0, ror #16
   2bcd4:	andeq	r0, r4, r0, ror fp
   2bcd8:	andeq	r1, r4, r4, lsr #16
   2bcdc:	andeq	r1, r4, r0, ror r9
   2bce0:	andeq	r0, r0, sl, ror #20
   2bce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bce8:	subs	r5, r0, #0
   2bcec:	sub	sp, sp, #28
   2bcf0:	beq	2be78 <blkid_probe_get_size@plt+0x24960>
   2bcf4:	ldrb	r2, [r1, #1]
   2bcf8:	ldrb	r3, [r1]
   2bcfc:	ldrb	r0, [r1, #2]
   2bd00:	mov	r4, r1
   2bd04:	ldrb	r1, [r1, #3]
   2bd08:	orr	r3, r3, r2, lsl #8
   2bd0c:	orr	r3, r3, r0, lsl #16
   2bd10:	ldr	r2, [r5, #112]	; 0x70
   2bd14:	orr	r3, r3, r1, lsl #24
   2bd18:	add	r6, r2, r3
   2bd1c:	ldrb	r3, [r2, r3]
   2bd20:	cmp	r3, #32
   2bd24:	beq	2bd34 <blkid_probe_get_size@plt+0x2481c>
   2bd28:	mov	r0, #0
   2bd2c:	add	sp, sp, #28
   2bd30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bd34:	ldrb	r3, [r2, #49]	; 0x31
   2bd38:	ldrb	r1, [r2, #48]	; 0x30
   2bd3c:	ldrb	r0, [r2, #53]	; 0x35
   2bd40:	ldrb	r7, [r2, #54]	; 0x36
   2bd44:	orr	r1, r1, r3, lsl #8
   2bd48:	ldrb	r3, [r2, #52]	; 0x34
   2bd4c:	ldrb	ip, [r2, #55]	; 0x37
   2bd50:	ldrb	r8, [r2, #50]	; 0x32
   2bd54:	ldrb	lr, [r2, #51]	; 0x33
   2bd58:	orr	r3, r3, r0, lsl #8
   2bd5c:	orr	r3, r3, r7, lsl #16
   2bd60:	orr	r2, r1, r8, lsl #16
   2bd64:	orr	r1, r3, ip, lsl #24
   2bd68:	orr	r0, r2, lr, lsl #24
   2bd6c:	cmp	r1, #0
   2bd70:	cmpeq	r0, #31
   2bd74:	add	r6, r6, #1
   2bd78:	bls	2be34 <blkid_probe_get_size@plt+0x2491c>
   2bd7c:	mov	r1, r6
   2bd80:	ldr	r0, [r5, #116]	; 0x74
   2bd84:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   2bd88:	cmp	r0, #0
   2bd8c:	beq	2be34 <blkid_probe_get_size@plt+0x2491c>
   2bd90:	ldrb	r2, [r4, #29]
   2bd94:	ldrb	r3, [r4, #28]
   2bd98:	orrs	r3, r3, r2, lsl #8
   2bd9c:	bne	2bea0 <blkid_probe_get_size@plt+0x24988>
   2bda0:	ldrb	r8, [r4, #17]
   2bda4:	ldrb	r7, [r4, #18]
   2bda8:	ldrb	ip, [r4, #16]
   2bdac:	ldrb	r2, [r0, #17]
   2bdb0:	ldrb	r1, [r0, #16]
   2bdb4:	orr	ip, ip, r8, lsl #8
   2bdb8:	ldrb	r8, [r4, #19]
   2bdbc:	ldrb	lr, [r4, #21]
   2bdc0:	ldrb	r3, [r0, #18]
   2bdc4:	orr	ip, ip, r7, lsl #16
   2bdc8:	ldrb	r7, [r4, #22]
   2bdcc:	orr	r1, r1, r2, lsl #8
   2bdd0:	ldrb	r2, [r4, #20]
   2bdd4:	ldrb	r9, [r0, #21]
   2bdd8:	orr	ip, ip, r8, lsl #24
   2bddc:	str	r7, [sp, #20]
   2bde0:	orr	r1, r1, r3, lsl #16
   2bde4:	ldrb	r7, [r0, #19]
   2bde8:	ldrb	r3, [r0, #20]
   2bdec:	orr	r2, r2, lr, lsl #8
   2bdf0:	ldrb	lr, [r0, #22]
   2bdf4:	str	ip, [sp, #8]
   2bdf8:	ldr	ip, [sp, #20]
   2bdfc:	orr	sl, r1, r7, lsl #24
   2be00:	ldrb	r1, [r0, #23]
   2be04:	orr	r2, r2, ip, lsl #16
   2be08:	ldrb	ip, [r4, #23]
   2be0c:	orr	r3, r3, r9, lsl #8
   2be10:	orr	r3, r3, lr, lsl #16
   2be14:	orr	fp, r3, r1, lsl #24
   2be18:	orr	r2, r2, ip, lsl #24
   2be1c:	str	r2, [sp, #12]
   2be20:	ldrd	r2, [sp, #8]
   2be24:	cmp	r3, fp
   2be28:	cmpeq	r2, sl
   2be2c:	bcc	2bd28 <blkid_probe_get_size@plt+0x24810>
   2be30:	beq	2beb8 <blkid_probe_get_size@plt+0x249a0>
   2be34:	ldr	r1, [pc, #192]	; 2befc <blkid_probe_get_size@plt+0x249e4>
   2be38:	mov	r2, #1
   2be3c:	add	r1, pc, r1
   2be40:	add	r0, r5, #116	; 0x74
   2be44:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   2be48:	cmp	r0, #0
   2be4c:	blt	2bd2c <blkid_probe_get_size@plt+0x24814>
   2be50:	mov	r2, r4
   2be54:	mov	r1, r6
   2be58:	ldr	r0, [r5, #116]	; 0x74
   2be5c:	bl	43bd0 <blkid_probe_get_size@plt+0x3c6b8>
   2be60:	cmp	r0, #0
   2be64:	movge	r3, #1
   2be68:	movge	r0, #0
   2be6c:	strbge	r3, [r5, #128]	; 0x80
   2be70:	add	sp, sp, #28
   2be74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be78:	ldr	r2, [pc, #128]	; 2bf00 <blkid_probe_get_size@plt+0x249e8>
   2be7c:	ldr	r1, [pc, #128]	; 2bf04 <blkid_probe_get_size@plt+0x249ec>
   2be80:	add	r2, pc, r2
   2be84:	add	r2, r2, #260	; 0x104
   2be88:	str	r2, [sp]
   2be8c:	ldr	r2, [pc, #116]	; 2bf08 <blkid_probe_get_size@plt+0x249f0>
   2be90:	mov	r3, #130	; 0x82
   2be94:	add	r2, pc, r2
   2be98:	add	r1, pc, r1
   2be9c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2bea0:	ldrb	r1, [r0, #29]
   2bea4:	ldrb	r2, [r0, #28]
   2bea8:	orr	r2, r2, r1, lsl #8
   2beac:	cmp	r3, r2
   2beb0:	bcc	2bd28 <blkid_probe_get_size@plt+0x24810>
   2beb4:	bne	2be34 <blkid_probe_get_size@plt+0x2491c>
   2beb8:	ldrb	ip, [r4, #25]
   2bebc:	ldrb	r1, [r0, #25]
   2bec0:	ldrb	r2, [r4, #24]
   2bec4:	ldrb	r3, [r0, #24]
   2bec8:	ldrb	lr, [r4, #26]
   2becc:	orr	r2, r2, ip, lsl #8
   2bed0:	ldrb	ip, [r0, #26]
   2bed4:	orr	r3, r3, r1, lsl #8
   2bed8:	ldrb	r0, [r0, #27]
   2bedc:	ldrb	r1, [r4, #27]
   2bee0:	orr	r2, r2, lr, lsl #16
   2bee4:	orr	r3, r3, ip, lsl #16
   2bee8:	orr	r3, r3, r0, lsl #24
   2beec:	orr	r2, r2, r1, lsl #24
   2bef0:	cmp	r2, r3
   2bef4:	bcc	2bd28 <blkid_probe_get_size@plt+0x24810>
   2bef8:	b	2be34 <blkid_probe_get_size@plt+0x2491c>
   2befc:	andeq	fp, r6, ip, ror #23
   2bf00:	andeq	r0, r4, r8, ror r9
   2bf04:	andeq	sp, r3, r4, lsl #9
   2bf08:	strdeq	r1, [r4], -r0
   2bf0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf10:	mov	r6, r1
   2bf14:	ldrb	lr, [r1, #1]
   2bf18:	ldrb	ip, [r6, #2]
   2bf1c:	ldrb	r1, [r1]
   2bf20:	mov	r8, r0
   2bf24:	ldrb	r0, [r6, #3]
   2bf28:	orr	r1, r1, lr, lsl #8
   2bf2c:	orr	r1, r1, ip, lsl #16
   2bf30:	ldr	r4, [r8, #112]	; 0x70
   2bf34:	orr	r1, r1, r0, lsl #24
   2bf38:	add	r1, r2, r1
   2bf3c:	add	r4, r4, r1
   2bf40:	sub	sp, sp, #28
   2bf44:	mov	r0, r4
   2bf48:	mov	r7, r3
   2bf4c:	bl	723c <strlen@plt>
   2bf50:	ldr	sl, [r7, #2052]	; 0x804
   2bf54:	add	r3, r0, sl
   2bf58:	cmp	r3, #2048	; 0x800
   2bf5c:	str	r0, [sp, #20]
   2bf60:	bcs	2bf84 <blkid_probe_get_size@plt+0x24a6c>
   2bf64:	mov	r1, r4
   2bf68:	ldr	r4, [sp, #20]
   2bf6c:	add	r0, r7, sl
   2bf70:	mov	r2, r4
   2bf74:	bl	71e8 <memcpy@plt>
   2bf78:	ldr	sl, [r7, #2052]	; 0x804
   2bf7c:	add	sl, r4, sl
   2bf80:	str	sl, [r7, #2052]	; 0x804
   2bf84:	ldrb	r3, [r6, #8]
   2bf88:	cmp	r3, #0
   2bf8c:	beq	2c070 <blkid_probe_get_size@plt+0x24b58>
   2bf90:	mov	r4, #0
   2bf94:	mov	r5, #0
   2bf98:	ldr	r0, [r8, #112]	; 0x70
   2bf9c:	ldr	r3, [pc, #640]	; 2c224 <blkid_probe_get_size@plt+0x24d0c>
   2bfa0:	add	ip, sl, #1
   2bfa4:	ldrb	lr, [r0, #41]	; 0x29
   2bfa8:	ldrb	r1, [r0, #42]	; 0x2a
   2bfac:	ldrb	r2, [r0, #40]	; 0x28
   2bfb0:	cmp	ip, r3
   2bfb4:	ldrb	r3, [r0, #43]	; 0x2b
   2bfb8:	orr	r2, r2, lr, lsl #8
   2bfbc:	orr	r2, r2, r1, lsl #16
   2bfc0:	ldrb	r9, [r0, #33]	; 0x21
   2bfc4:	orr	r2, r2, r3, lsl #24
   2bfc8:	ldrb	r1, [r0, #32]
   2bfcc:	umull	r2, r3, r2, r4
   2bfd0:	ldrb	fp, [r0, #34]	; 0x22
   2bfd4:	strd	r2, [sp, #8]
   2bfd8:	ldrb	lr, [r0, #35]	; 0x23
   2bfdc:	orr	r3, r1, r9, lsl #8
   2bfe0:	ldr	r2, [sp, #8]
   2bfe4:	orr	r3, r3, fp, lsl #16
   2bfe8:	orr	r3, r3, lr, lsl #24
   2bfec:	add	r2, r2, r3
   2bff0:	add	lr, r6, r2
   2bff4:	ldrbls	r3, [r6, r2]
   2bff8:	strls	ip, [r7, #2052]	; 0x804
   2bffc:	strbls	r3, [r7, sl]
   2c000:	ldrb	ip, [lr, #9]
   2c004:	ldrb	r2, [lr, #10]
   2c008:	ldrb	r1, [lr, #8]
   2c00c:	ldrb	r3, [lr, #11]
   2c010:	ldrls	r0, [r8, #112]	; 0x70
   2c014:	orr	r1, r1, ip, lsl #8
   2c018:	orr	r1, r1, r2, lsl #16
   2c01c:	ldr	ip, [sp, #64]	; 0x40
   2c020:	orr	r1, r1, r3, lsl #24
   2c024:	add	r1, r0, r1
   2c028:	str	ip, [sp]
   2c02c:	mov	r3, r7
   2c030:	mov	r2, #0
   2c034:	mov	r0, r8
   2c038:	bl	2bf0c <blkid_probe_get_size@plt+0x249f4>
   2c03c:	cmp	r0, #0
   2c040:	blt	2c1f4 <blkid_probe_get_size@plt+0x24cdc>
   2c044:	ldr	sl, [r7, #2052]	; 0x804
   2c048:	cmp	sl, #0
   2c04c:	beq	2c220 <blkid_probe_get_size@plt+0x24d08>
   2c050:	sub	sl, sl, #1
   2c054:	str	sl, [r7, #2052]	; 0x804
   2c058:	ldrb	r2, [r6, #8]
   2c05c:	add	r3, r4, #1
   2c060:	adds	r4, r4, #1
   2c064:	adc	r5, r5, #0
   2c068:	cmp	r2, r3
   2c06c:	bhi	2bf98 <blkid_probe_get_size@plt+0x24a80>
   2c070:	ldrb	r1, [r6, #17]
   2c074:	ldrb	r0, [r6, #16]
   2c078:	ldrb	r3, [r6, #21]
   2c07c:	ldrb	r2, [r6, #18]
   2c080:	orr	r0, r0, r1, lsl #8
   2c084:	ldrb	lr, [r6, #22]
   2c088:	ldrb	r1, [r6, #20]
   2c08c:	ldrb	ip, [r6, #19]
   2c090:	ldrb	r4, [r6, #23]
   2c094:	orr	r1, r1, r3, lsl #8
   2c098:	orr	r0, r0, r2, lsl #16
   2c09c:	orr	r1, r1, lr, lsl #16
   2c0a0:	orr	r2, r0, ip, lsl #24
   2c0a4:	orr	r3, r1, r4, lsl #24
   2c0a8:	orrs	r3, r2, r3
   2c0ac:	beq	2c200 <blkid_probe_get_size@plt+0x24ce8>
   2c0b0:	add	r3, sl, #1
   2c0b4:	cmp	r3, #2048	; 0x800
   2c0b8:	movcc	r3, #0
   2c0bc:	strbcc	r3, [r7, sl]
   2c0c0:	movcc	r0, r7
   2c0c4:	movcs	r0, #0
   2c0c8:	ldr	r1, [sp, #64]	; 0x40
   2c0cc:	mov	r2, #0
   2c0d0:	bl	693c <fnmatch@plt>
   2c0d4:	subs	r9, r0, #0
   2c0d8:	bne	2c1fc <blkid_probe_get_size@plt+0x24ce4>
   2c0dc:	ldrb	r3, [r6, #17]
   2c0e0:	ldrb	r2, [r6, #16]
   2c0e4:	ldrb	r0, [r6, #21]
   2c0e8:	ldrb	lr, [r6, #18]
   2c0ec:	orr	r2, r2, r3, lsl #8
   2c0f0:	ldrb	r3, [r6, #20]
   2c0f4:	ldrb	ip, [r6, #22]
   2c0f8:	ldrb	r1, [r6, #19]
   2c0fc:	orr	r3, r3, r0, lsl #8
   2c100:	ldrb	r0, [r6, #23]
   2c104:	orr	r3, r3, ip, lsl #16
   2c108:	orr	r2, r2, lr, lsl #16
   2c10c:	orr	r4, r2, r1, lsl #24
   2c110:	orr	r5, r3, r0, lsl #24
   2c114:	orrs	r3, r4, r5
   2c118:	beq	2c1fc <blkid_probe_get_size@plt+0x24ce4>
   2c11c:	mov	sl, #0
   2c120:	b	2c174 <blkid_probe_get_size@plt+0x24c5c>
   2c124:	ldrb	r1, [r6, #17]
   2c128:	ldrb	r0, [r6, #16]
   2c12c:	ldrb	r3, [r6, #21]
   2c130:	ldrb	lr, [r6, #22]
   2c134:	orr	r0, r0, r1, lsl #8
   2c138:	ldrb	r1, [r6, #20]
   2c13c:	ldrb	r2, [r6, #18]
   2c140:	ldrb	ip, [r6, #23]
   2c144:	ldrb	r4, [r6, #19]
   2c148:	orr	r1, r1, r3, lsl #8
   2c14c:	orr	r1, r1, lr, lsl #16
   2c150:	orr	r0, r0, r2, lsl #16
   2c154:	orr	r3, r1, ip, lsl #24
   2c158:	mov	fp, #0
   2c15c:	add	r9, r9, #1
   2c160:	orr	r2, r0, r4, lsl #24
   2c164:	cmp	fp, r3
   2c168:	cmpeq	r9, r2
   2c16c:	mov	sl, r9
   2c170:	bcs	2c1fc <blkid_probe_get_size@plt+0x24ce4>
   2c174:	ldr	r3, [r8, #112]	; 0x70
   2c178:	mov	r0, r8
   2c17c:	ldrb	lr, [r3, #49]	; 0x31
   2c180:	ldrb	r2, [r3, #50]	; 0x32
   2c184:	ldrb	r1, [r3, #48]	; 0x30
   2c188:	ldrb	r4, [r3, #51]	; 0x33
   2c18c:	ldrb	ip, [r3, #41]	; 0x29
   2c190:	orr	r1, r1, lr, lsl #8
   2c194:	orr	r1, r1, r2, lsl #16
   2c198:	orr	r1, r1, r4, lsl #24
   2c19c:	ldrb	r2, [r3, #40]	; 0x28
   2c1a0:	ldrb	r4, [r3, #33]	; 0x21
   2c1a4:	ldrb	lr, [r3, #42]	; 0x2a
   2c1a8:	umull	sl, fp, r1, sl
   2c1ac:	ldrb	r1, [r3, #32]
   2c1b0:	orr	r2, r2, ip, lsl #8
   2c1b4:	ldrb	ip, [r3, #43]	; 0x2b
   2c1b8:	orr	r1, r1, r4, lsl #8
   2c1bc:	ldrb	r4, [r6, #8]
   2c1c0:	orr	r2, r2, lr, lsl #16
   2c1c4:	ldrb	lr, [r3, #34]	; 0x22
   2c1c8:	orr	r2, r2, ip, lsl #24
   2c1cc:	ldrb	ip, [r3, #35]	; 0x23
   2c1d0:	umull	r2, r3, r2, r4
   2c1d4:	orr	r1, r1, lr, lsl #16
   2c1d8:	orr	r1, r1, ip, lsl #24
   2c1dc:	add	r1, sl, r1
   2c1e0:	add	r1, r1, r2
   2c1e4:	add	r1, r6, r1
   2c1e8:	bl	2bce4 <blkid_probe_get_size@plt+0x247cc>
   2c1ec:	cmp	r0, #0
   2c1f0:	bge	2c124 <blkid_probe_get_size@plt+0x24c0c>
   2c1f4:	add	sp, sp, #28
   2c1f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c1fc:	ldr	sl, [r7, #2052]	; 0x804
   2c200:	ldr	r3, [sp, #20]
   2c204:	cmp	r3, sl
   2c208:	bhi	2c220 <blkid_probe_get_size@plt+0x24d08>
   2c20c:	sub	sl, sl, r3
   2c210:	mov	r0, #0
   2c214:	str	sl, [r7, #2052]	; 0x804
   2c218:	add	sp, sp, #28
   2c21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c220:	bl	2b068 <blkid_probe_get_size@plt+0x23b50>
   2c224:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2c228:	ldr	r2, [pc, #968]	; 2c5f8 <blkid_probe_get_size@plt+0x250e0>
   2c22c:	ldr	r3, [pc, #968]	; 2c5fc <blkid_probe_get_size@plt+0x250e4>
   2c230:	add	r2, pc, r2
   2c234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c238:	sub	sp, sp, #2080	; 0x820
   2c23c:	ldr	r3, [r2, r3]
   2c240:	sub	sp, sp, #4
   2c244:	ldr	r4, [r0, #112]	; 0x70
   2c248:	str	r3, [sp, #12]
   2c24c:	ldr	r3, [r3]
   2c250:	mov	r6, #0
   2c254:	str	r6, [sp, #2068]	; 0x814
   2c258:	str	r6, [sp, #2072]	; 0x818
   2c25c:	str	r3, [sp, #2076]	; 0x81c
   2c260:	ldrb	ip, [r4, #57]	; 0x39
   2c264:	ldrb	r3, [r4, #56]	; 0x38
   2c268:	mov	r5, r0
   2c26c:	ldrb	r0, [r4, #58]	; 0x3a
   2c270:	mov	r9, r1
   2c274:	ldrb	r1, [r4, #59]	; 0x3b
   2c278:	orr	r3, r3, ip, lsl #8
   2c27c:	orr	r3, r3, r0, lsl #16
   2c280:	orr	r3, r3, r1, lsl #24
   2c284:	adds	r4, r4, r3
   2c288:	beq	2c32c <blkid_probe_get_size@plt+0x24e14>
   2c28c:	ldr	r8, [pc, #876]	; 2c600 <blkid_probe_get_size@plt+0x250e8>
   2c290:	add	r7, sp, #20
   2c294:	ldrb	r3, [r4, #1]
   2c298:	ldrb	r2, [r4]
   2c29c:	ldrb	r1, [r4, #5]
   2c2a0:	ldrb	lr, [r4, #2]
   2c2a4:	orr	r2, r2, r3, lsl #8
   2c2a8:	ldrb	r3, [r4, #4]
   2c2ac:	ldrb	ip, [r4, #6]
   2c2b0:	ldrb	r0, [r4, #3]
   2c2b4:	orr	r3, r3, r1, lsl #8
   2c2b8:	ldrb	r1, [r4, #7]
   2c2bc:	orr	r3, r3, ip, lsl #16
   2c2c0:	orr	r2, r2, lr, lsl #16
   2c2c4:	orr	sl, r2, r0, lsl #24
   2c2c8:	orr	fp, r3, r1, lsl #24
   2c2cc:	orrs	r3, sl, fp
   2c2d0:	beq	2c354 <blkid_probe_get_size@plt+0x24e3c>
   2c2d4:	ldr	r0, [r5, #112]	; 0x70
   2c2d8:	add	r0, r0, sl
   2c2dc:	ldrb	r3, [r0]
   2c2e0:	cmp	r3, #0
   2c2e4:	beq	2c354 <blkid_probe_get_size@plt+0x24e3c>
   2c2e8:	add	r1, r9, r6
   2c2ec:	mov	r2, #0
   2c2f0:	b	2c304 <blkid_probe_get_size@plt+0x24dec>
   2c2f4:	ldrb	r3, [r0, #1]!
   2c2f8:	add	r2, r2, #1
   2c2fc:	cmp	r3, #0
   2c300:	beq	2c350 <blkid_probe_get_size@plt+0x24e38>
   2c304:	cmp	r3, #63	; 0x3f
   2c308:	beq	2c4b8 <blkid_probe_get_size@plt+0x24fa0>
   2c30c:	cmp	r3, #91	; 0x5b
   2c310:	beq	2c4b8 <blkid_probe_get_size@plt+0x24fa0>
   2c314:	cmp	r3, #42	; 0x2a
   2c318:	beq	2c4b8 <blkid_probe_get_size@plt+0x24fa0>
   2c31c:	ldrb	ip, [r1]
   2c320:	add	r1, r1, #1
   2c324:	cmp	ip, r3
   2c328:	beq	2c2f4 <blkid_probe_get_size@plt+0x24ddc>
   2c32c:	mov	r0, #0
   2c330:	ldr	r3, [sp, #12]
   2c334:	ldr	r2, [sp, #2076]	; 0x81c
   2c338:	ldr	r3, [r3]
   2c33c:	cmp	r2, r3
   2c340:	bne	2c5f4 <blkid_probe_get_size@plt+0x250dc>
   2c344:	add	sp, sp, #2080	; 0x820
   2c348:	add	sp, sp, #4
   2c34c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c350:	add	r6, r6, r2
   2c354:	mov	r1, r4
   2c358:	mov	r2, #42	; 0x2a
   2c35c:	mov	r0, r5
   2c360:	bl	2af4c <blkid_probe_get_size@plt+0x23a34>
   2c364:	add	fp, r9, r6
   2c368:	subs	r1, r0, #0
   2c36c:	beq	2c3c0 <blkid_probe_get_size@plt+0x24ea8>
   2c370:	ldr	r3, [sp, #2072]	; 0x818
   2c374:	add	r2, r3, #1
   2c378:	cmp	r2, r8
   2c37c:	addls	r0, sp, #2080	; 0x820
   2c380:	addls	r3, r0, r3
   2c384:	movls	r0, #42	; 0x2a
   2c388:	strbls	r0, [r3, #-2060]	; 0xfffff7f4
   2c38c:	strls	r2, [sp, #2072]	; 0x818
   2c390:	str	fp, [sp]
   2c394:	mov	r3, r7
   2c398:	mov	r2, #0
   2c39c:	mov	r0, r5
   2c3a0:	bl	2bf0c <blkid_probe_get_size@plt+0x249f4>
   2c3a4:	cmp	r0, #0
   2c3a8:	blt	2c330 <blkid_probe_get_size@plt+0x24e18>
   2c3ac:	ldr	r3, [sp, #2072]	; 0x818
   2c3b0:	cmp	r3, #0
   2c3b4:	beq	2c4d0 <blkid_probe_get_size@plt+0x24fb8>
   2c3b8:	sub	r3, r3, #1
   2c3bc:	str	r3, [sp, #2072]	; 0x818
   2c3c0:	mov	r1, r4
   2c3c4:	mov	r2, #63	; 0x3f
   2c3c8:	mov	r0, r5
   2c3cc:	bl	2af4c <blkid_probe_get_size@plt+0x23a34>
   2c3d0:	subs	r1, r0, #0
   2c3d4:	beq	2c428 <blkid_probe_get_size@plt+0x24f10>
   2c3d8:	ldr	r3, [sp, #2072]	; 0x818
   2c3dc:	add	r2, r3, #1
   2c3e0:	cmp	r2, r8
   2c3e4:	addls	r0, sp, #2080	; 0x820
   2c3e8:	addls	r3, r0, r3
   2c3ec:	movls	r0, #63	; 0x3f
   2c3f0:	strbls	r0, [r3, #-2060]	; 0xfffff7f4
   2c3f4:	strls	r2, [sp, #2072]	; 0x818
   2c3f8:	str	fp, [sp]
   2c3fc:	mov	r3, r7
   2c400:	mov	r2, #0
   2c404:	mov	r0, r5
   2c408:	bl	2bf0c <blkid_probe_get_size@plt+0x249f4>
   2c40c:	cmp	r0, #0
   2c410:	blt	2c330 <blkid_probe_get_size@plt+0x24e18>
   2c414:	ldr	r3, [sp, #2072]	; 0x818
   2c418:	cmp	r3, #0
   2c41c:	beq	2c4d0 <blkid_probe_get_size@plt+0x24fb8>
   2c420:	sub	r3, r3, #1
   2c424:	str	r3, [sp, #2072]	; 0x818
   2c428:	mov	r1, r4
   2c42c:	mov	r2, #91	; 0x5b
   2c430:	mov	r0, r5
   2c434:	bl	2af4c <blkid_probe_get_size@plt+0x23a34>
   2c438:	subs	r1, r0, #0
   2c43c:	beq	2c490 <blkid_probe_get_size@plt+0x24f78>
   2c440:	ldr	r3, [sp, #2072]	; 0x818
   2c444:	add	r2, r3, #1
   2c448:	cmp	r2, r8
   2c44c:	addls	r0, sp, #2080	; 0x820
   2c450:	addls	r3, r0, r3
   2c454:	movls	r0, #91	; 0x5b
   2c458:	strbls	r0, [r3, #-2060]	; 0xfffff7f4
   2c45c:	strls	r2, [sp, #2072]	; 0x818
   2c460:	str	fp, [sp]
   2c464:	mov	r3, r7
   2c468:	mov	r2, #0
   2c46c:	mov	r0, r5
   2c470:	bl	2bf0c <blkid_probe_get_size@plt+0x249f4>
   2c474:	cmp	r0, #0
   2c478:	blt	2c330 <blkid_probe_get_size@plt+0x24e18>
   2c47c:	ldr	r3, [sp, #2072]	; 0x818
   2c480:	cmp	r3, #0
   2c484:	beq	2c4d0 <blkid_probe_get_size@plt+0x24fb8>
   2c488:	sub	r3, r3, #1
   2c48c:	str	r3, [sp, #2072]	; 0x818
   2c490:	ldrb	r2, [fp]
   2c494:	cmp	r2, #0
   2c498:	beq	2c4d4 <blkid_probe_get_size@plt+0x24fbc>
   2c49c:	mov	r1, r4
   2c4a0:	mov	r0, r5
   2c4a4:	bl	2af4c <blkid_probe_get_size@plt+0x23a34>
   2c4a8:	add	r6, r6, #1
   2c4ac:	subs	r4, r0, #0
   2c4b0:	bne	2c294 <blkid_probe_get_size@plt+0x24d7c>
   2c4b4:	b	2c32c <blkid_probe_get_size@plt+0x24e14>
   2c4b8:	str	r1, [sp]
   2c4bc:	mov	r0, r5
   2c4c0:	mov	r1, r4
   2c4c4:	add	r3, sp, #20
   2c4c8:	bl	2bf0c <blkid_probe_get_size@plt+0x249f4>
   2c4cc:	b	2c330 <blkid_probe_get_size@plt+0x24e18>
   2c4d0:	bl	2b068 <blkid_probe_get_size@plt+0x23b50>
   2c4d4:	ldrb	r3, [r4, #17]
   2c4d8:	ldrb	ip, [r4, #16]
   2c4dc:	ldrb	r1, [r4, #21]
   2c4e0:	ldrb	r0, [r4, #18]
   2c4e4:	orr	ip, ip, r3, lsl #8
   2c4e8:	ldrb	r7, [r4, #22]
   2c4ec:	ldrb	r3, [r4, #20]
   2c4f0:	ldrb	r6, [r4, #19]
   2c4f4:	ldrb	lr, [r4, #23]
   2c4f8:	orr	r3, r3, r1, lsl #8
   2c4fc:	orr	r3, r3, r7, lsl #16
   2c500:	orr	ip, ip, r0, lsl #16
   2c504:	orr	r0, ip, r6, lsl #24
   2c508:	orr	r1, r3, lr, lsl #24
   2c50c:	orrs	r3, r0, r1
   2c510:	beq	2c32c <blkid_probe_get_size@plt+0x24e14>
   2c514:	mov	r6, r2
   2c518:	mov	sl, #0
   2c51c:	b	2c570 <blkid_probe_get_size@plt+0x25058>
   2c520:	ldrb	r3, [r4, #17]
   2c524:	ldrb	r2, [r4, #16]
   2c528:	ldrb	r1, [r4, #21]
   2c52c:	ldrb	lr, [r4, #22]
   2c530:	orr	r2, r2, r3, lsl #8
   2c534:	ldrb	r3, [r4, #20]
   2c538:	ldrb	r0, [r4, #18]
   2c53c:	ldrb	ip, [r4, #23]
   2c540:	ldrb	r7, [r4, #19]
   2c544:	orr	r3, r3, r1, lsl #8
   2c548:	orr	r3, r3, lr, lsl #16
   2c54c:	orr	r2, r2, r0, lsl #16
   2c550:	orr	r1, r3, ip, lsl #24
   2c554:	mov	fp, #0
   2c558:	add	r6, r6, #1
   2c55c:	orr	r0, r2, r7, lsl #24
   2c560:	cmp	fp, r1
   2c564:	cmpeq	r6, r0
   2c568:	mov	sl, r6
   2c56c:	bcs	2c32c <blkid_probe_get_size@plt+0x24e14>
   2c570:	ldr	r1, [r5, #112]	; 0x70
   2c574:	mov	r0, r5
   2c578:	ldrb	r7, [r1, #49]	; 0x31
   2c57c:	ldrb	ip, [r1, #50]	; 0x32
   2c580:	ldrb	r3, [r1, #48]	; 0x30
   2c584:	ldrb	lr, [r1, #41]	; 0x29
   2c588:	ldrb	r8, [r1, #40]	; 0x28
   2c58c:	orr	r3, r3, r7, lsl #8
   2c590:	orr	r3, r3, ip, lsl #16
   2c594:	ldrb	r7, [r1, #51]	; 0x33
   2c598:	ldrb	ip, [r1, #42]	; 0x2a
   2c59c:	orr	r8, r8, lr, lsl #8
   2c5a0:	ldrb	lr, [r1, #43]	; 0x2b
   2c5a4:	orr	r3, r3, r7, lsl #24
   2c5a8:	orr	r8, r8, ip, lsl #16
   2c5ac:	ldrb	r9, [r1, #33]	; 0x21
   2c5b0:	orr	lr, r8, lr, lsl #24
   2c5b4:	ldrb	r8, [r4, #8]
   2c5b8:	ldrb	r7, [r1, #34]	; 0x22
   2c5bc:	umull	sl, fp, r3, sl
   2c5c0:	ldrb	r3, [r1, #32]
   2c5c4:	ldrb	ip, [r1, #35]	; 0x23
   2c5c8:	orr	r3, r3, r9, lsl #8
   2c5cc:	umull	r8, r9, lr, r8
   2c5d0:	orr	r3, r3, r7, lsl #16
   2c5d4:	orr	r3, r3, ip, lsl #24
   2c5d8:	add	r2, sl, r3
   2c5dc:	add	r1, r2, r8
   2c5e0:	add	r1, r4, r1
   2c5e4:	bl	2bce4 <blkid_probe_get_size@plt+0x247cc>
   2c5e8:	cmp	r0, #0
   2c5ec:	bge	2c520 <blkid_probe_get_size@plt+0x25008>
   2c5f0:	b	2c330 <blkid_probe_get_size@plt+0x24e18>
   2c5f4:	bl	6fb4 <__stack_chk_fail@plt>
   2c5f8:	andeq	fp, r6, r8, lsr r9
   2c5fc:	andeq	r0, r0, ip, lsr r4
   2c600:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2c604:	ldr	r3, [pc, #316]	; 2c748 <blkid_probe_get_size@plt+0x25230>
   2c608:	ldr	ip, [pc, #316]	; 2c74c <blkid_probe_get_size@plt+0x25234>
   2c60c:	add	r3, pc, r3
   2c610:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c614:	sub	sp, sp, #20
   2c618:	ldr	r7, [r3, ip]
   2c61c:	mov	r4, #0
   2c620:	subs	r9, r0, #0
   2c624:	ldr	r3, [r7]
   2c628:	str	r4, [sp, #8]
   2c62c:	str	r3, [sp, #12]
   2c630:	beq	2c6f0 <blkid_probe_get_size@plt+0x251d8>
   2c634:	cmp	r1, #0
   2c638:	mov	r6, r1
   2c63c:	beq	2c718 <blkid_probe_get_size@plt+0x25200>
   2c640:	ldr	r1, [pc, #264]	; 2c750 <blkid_probe_get_size@plt+0x25238>
   2c644:	mov	r8, r2
   2c648:	add	r1, pc, r1
   2c64c:	mov	r2, r4
   2c650:	add	r0, r9, #44	; 0x2c
   2c654:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   2c658:	subs	r5, r0, #0
   2c65c:	blt	2c6a0 <blkid_probe_get_size@plt+0x25188>
   2c660:	ldr	r0, [r9, #44]	; 0x2c
   2c664:	cmp	r0, #0
   2c668:	beq	2c6cc <blkid_probe_get_size@plt+0x251b4>
   2c66c:	mov	r1, r6
   2c670:	add	r2, sp, #8
   2c674:	bl	42e7c <blkid_probe_get_size@plt+0x3b964>
   2c678:	ldr	r1, [sp, #8]
   2c67c:	cmp	r1, #0
   2c680:	mov	r4, r0
   2c684:	beq	2c6d0 <blkid_probe_get_size@plt+0x251b8>
   2c688:	mov	r2, r8
   2c68c:	ldr	r0, [r9, #44]	; 0x2c
   2c690:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   2c694:	subs	r5, r0, #0
   2c698:	movge	r5, #0
   2c69c:	strge	r5, [sp, #8]
   2c6a0:	mov	r0, r4
   2c6a4:	bl	69f0 <free@plt>
   2c6a8:	ldr	r0, [sp, #8]
   2c6ac:	bl	69f0 <free@plt>
   2c6b0:	ldr	r2, [sp, #12]
   2c6b4:	ldr	r3, [r7]
   2c6b8:	mov	r0, r5
   2c6bc:	cmp	r2, r3
   2c6c0:	bne	2c744 <blkid_probe_get_size@plt+0x2522c>
   2c6c4:	add	sp, sp, #20
   2c6c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c6cc:	mov	r4, r0
   2c6d0:	mov	r0, r6
   2c6d4:	bl	74e8 <strdup@plt>
   2c6d8:	cmp	r0, #0
   2c6dc:	mov	r1, r0
   2c6e0:	str	r0, [sp, #8]
   2c6e4:	bne	2c688 <blkid_probe_get_size@plt+0x25170>
   2c6e8:	mvn	r5, #11
   2c6ec:	b	2c6a0 <blkid_probe_get_size@plt+0x25188>
   2c6f0:	ldr	r2, [pc, #92]	; 2c754 <blkid_probe_get_size@plt+0x2523c>
   2c6f4:	ldr	r1, [pc, #92]	; 2c758 <blkid_probe_get_size@plt+0x25240>
   2c6f8:	add	r2, pc, r2
   2c6fc:	add	r2, r2, #280	; 0x118
   2c700:	str	r2, [sp]
   2c704:	ldr	r2, [pc, #80]	; 2c75c <blkid_probe_get_size@plt+0x25244>
   2c708:	ldr	r3, [pc, #80]	; 2c760 <blkid_probe_get_size@plt+0x25248>
   2c70c:	add	r2, pc, r2
   2c710:	add	r1, pc, r1
   2c714:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2c718:	ldr	r3, [pc, #68]	; 2c764 <blkid_probe_get_size@plt+0x2524c>
   2c71c:	mov	r0, r1
   2c720:	add	r3, pc, r3
   2c724:	ldr	r2, [pc, #60]	; 2c768 <blkid_probe_get_size@plt+0x25250>
   2c728:	ldr	r1, [pc, #60]	; 2c76c <blkid_probe_get_size@plt+0x25254>
   2c72c:	add	r3, r3, #280	; 0x118
   2c730:	str	r3, [sp]
   2c734:	add	r2, pc, r2
   2c738:	ldr	r3, [pc, #48]	; 2c770 <blkid_probe_get_size@plt+0x25258>
   2c73c:	add	r1, pc, r1
   2c740:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2c744:	bl	6fb4 <__stack_chk_fail@plt>
   2c748:	andeq	fp, r6, ip, asr r5
   2c74c:	andeq	r0, r0, ip, lsr r4
   2c750:	andeq	fp, r6, r0, ror #7
   2c754:	andeq	r0, r4, r0, lsl #2
   2c758:	andeq	lr, r3, r0, asr r8
   2c75c:	andeq	r9, r3, r4, lsr #9
   2c760:	muleq	r0, r6, r6
   2c764:	ldrdeq	r0, [r4], -r8
   2c768:	andeq	r9, r3, ip, ror r4
   2c76c:	muleq	r3, r8, sl
   2c770:	muleq	r0, r7, r6
   2c774:	push	{r4, r5, r6, r7, r8, lr}
   2c778:	ldr	r4, [r0, #160]	; 0xa0
   2c77c:	cmp	r4, #0
   2c780:	beq	2c86c <blkid_probe_get_size@plt+0x25354>
   2c784:	mov	r7, r0
   2c788:	mov	r1, #47	; 0x2f
   2c78c:	mov	r0, r4
   2c790:	bl	7410 <strrchr@plt>
   2c794:	cmp	r0, #0
   2c798:	beq	2c86c <blkid_probe_get_size@plt+0x25354>
   2c79c:	ldrb	r3, [r0, #1]
   2c7a0:	add	r0, r0, #1
   2c7a4:	cmp	r4, r0
   2c7a8:	movcc	r4, #0
   2c7ac:	movcs	r4, #1
   2c7b0:	cmp	r3, #0
   2c7b4:	moveq	r4, #1
   2c7b8:	cmp	r4, #0
   2c7bc:	bne	2c86c <blkid_probe_get_size@plt+0x25354>
   2c7c0:	bl	74e8 <strdup@plt>
   2c7c4:	subs	r8, r0, #0
   2c7c8:	beq	2c874 <blkid_probe_get_size@plt+0x2535c>
   2c7cc:	ldrb	r6, [r8]
   2c7d0:	cmp	r6, #0
   2c7d4:	beq	2c844 <blkid_probe_get_size@plt+0x2532c>
   2c7d8:	mov	r3, r8
   2c7dc:	mov	r2, #47	; 0x2f
   2c7e0:	b	2c7e8 <blkid_probe_get_size@plt+0x252d0>
   2c7e4:	mov	r4, r5
   2c7e8:	cmp	r6, #33	; 0x21
   2c7ec:	strbeq	r2, [r3]
   2c7f0:	ldrb	r6, [r3, #1]!
   2c7f4:	add	r5, r4, #1
   2c7f8:	cmp	r6, #0
   2c7fc:	bne	2c7e4 <blkid_probe_get_size@plt+0x252cc>
   2c800:	bl	7104 <__ctype_b_loc@plt>
   2c804:	add	r3, r8, r4
   2c808:	ldr	r0, [r0]
   2c80c:	b	2c81c <blkid_probe_get_size@plt+0x25304>
   2c810:	cmp	r5, #0
   2c814:	mov	r6, r1
   2c818:	beq	2c844 <blkid_probe_get_size@plt+0x2532c>
   2c81c:	ldrb	r2, [r3]
   2c820:	mov	r1, r3
   2c824:	sub	r5, r5, #1
   2c828:	sub	r3, r3, #1
   2c82c:	lsl	r2, r2, #1
   2c830:	ldrh	r2, [r0, r2]
   2c834:	tst	r2, #2048	; 0x800
   2c838:	bne	2c810 <blkid_probe_get_size@plt+0x252f8>
   2c83c:	cmp	r5, #0
   2c840:	bne	2c848 <blkid_probe_get_size@plt+0x25330>
   2c844:	mov	r6, #0
   2c848:	ldrb	r3, [r7, #212]	; 0xd4
   2c84c:	ldr	r0, [r7, #168]	; 0xa8
   2c850:	str	r6, [r7, #164]	; 0xa4
   2c854:	orr	r3, r3, #32
   2c858:	strb	r3, [r7, #212]	; 0xd4
   2c85c:	bl	69f0 <free@plt>
   2c860:	str	r8, [r7, #168]	; 0xa8
   2c864:	mov	r0, #0
   2c868:	pop	{r4, r5, r6, r7, r8, pc}
   2c86c:	mvn	r0, #21
   2c870:	pop	{r4, r5, r6, r7, r8, pc}
   2c874:	mvn	r0, #11
   2c878:	pop	{r4, r5, r6, r7, r8, pc}
   2c87c:	cmp	r2, r3
   2c880:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c884:	sub	sp, sp, #12
   2c888:	beq	2c95c <blkid_probe_get_size@plt+0x25444>
   2c88c:	mov	r5, r3
   2c890:	mov	r4, r0
   2c894:	mov	r8, r2
   2c898:	mov	r6, r1
   2c89c:	bl	2b474 <blkid_probe_get_size@plt+0x23f5c>
   2c8a0:	mov	r2, r5
   2c8a4:	mov	r1, r6
   2c8a8:	mov	r9, r0
   2c8ac:	mov	r0, r4
   2c8b0:	bl	2b474 <blkid_probe_get_size@plt+0x23f5c>
   2c8b4:	ldrb	r2, [r4, #39]	; 0x27
   2c8b8:	ldr	r3, [pc, #200]	; 2c988 <blkid_probe_get_size@plt+0x25470>
   2c8bc:	mov	r1, r9
   2c8c0:	and	r2, r2, #3
   2c8c4:	add	r3, pc, r3
   2c8c8:	add	r3, r3, r2, lsl #4
   2c8cc:	ldr	r2, [r3, #4]
   2c8d0:	mov	r7, r0
   2c8d4:	bl	71e8 <memcpy@plt>
   2c8d8:	ldrb	r3, [r4, #39]	; 0x27
   2c8dc:	and	r3, r3, #3
   2c8e0:	cmp	r3, #1
   2c8e4:	beq	2c8f0 <blkid_probe_get_size@plt+0x253d8>
   2c8e8:	add	sp, sp, #12
   2c8ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c8f0:	ldr	r2, [r7, #8]
   2c8f4:	cmn	r2, #1
   2c8f8:	bne	2c93c <blkid_probe_get_size@plt+0x25424>
   2c8fc:	ldr	r2, [r7, #12]
   2c900:	cmn	r2, #1
   2c904:	bne	2c928 <blkid_probe_get_size@plt+0x25410>
   2c908:	ldr	r3, [r4, #44]	; 0x2c
   2c90c:	cmp	r3, r8
   2c910:	ldr	r3, [r4, #48]	; 0x30
   2c914:	streq	r5, [r4, #44]	; 0x2c
   2c918:	cmp	r3, r8
   2c91c:	streq	r5, [r4, #48]	; 0x30
   2c920:	add	sp, sp, #12
   2c924:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c928:	mov	r1, r6
   2c92c:	mov	r0, r4
   2c930:	bl	2b474 <blkid_probe_get_size@plt+0x23f5c>
   2c934:	str	r5, [r0, #8]
   2c938:	b	2c908 <blkid_probe_get_size@plt+0x253f0>
   2c93c:	mov	r1, r6
   2c940:	mov	r0, r4
   2c944:	bl	2b474 <blkid_probe_get_size@plt+0x23f5c>
   2c948:	str	r5, [r0, #12]
   2c94c:	ldr	r2, [r7, #12]
   2c950:	cmn	r2, #1
   2c954:	beq	2c908 <blkid_probe_get_size@plt+0x253f0>
   2c958:	b	2c928 <blkid_probe_get_size@plt+0x25410>
   2c95c:	ldr	r2, [pc, #40]	; 2c98c <blkid_probe_get_size@plt+0x25474>
   2c960:	ldr	r1, [pc, #40]	; 2c990 <blkid_probe_get_size@plt+0x25478>
   2c964:	add	r2, pc, r2
   2c968:	add	r2, r2, #308	; 0x134
   2c96c:	str	r2, [sp]
   2c970:	ldr	r2, [pc, #28]	; 2c994 <blkid_probe_get_size@plt+0x2547c>
   2c974:	mov	r3, #464	; 0x1d0
   2c978:	add	r2, pc, r2
   2c97c:	add	r1, pc, r1
   2c980:	mov	r0, #0
   2c984:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2c988:	andeq	sp, r5, ip, asr #20
   2c98c:	muleq	r3, r4, lr
   2c990:	andeq	r0, r4, r4, lsr #25
   2c994:			; <UNDEFINED> instruction: 0x00040bb8
   2c998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c99c:	sub	sp, sp, #28
   2c9a0:	ldrb	r7, [r0, #39]	; 0x27
   2c9a4:	ldr	r3, [pc, #984]	; 2cd84 <blkid_probe_get_size@plt+0x2586c>
   2c9a8:	mov	r5, r0
   2c9ac:	and	sl, r7, #3
   2c9b0:	add	r3, pc, r3
   2c9b4:	add	r3, r3, sl, lsl #4
   2c9b8:	ands	r2, r7, #4
   2c9bc:	str	r2, [sp, #16]
   2c9c0:	ldr	r2, [r3, #4]
   2c9c4:	ldreq	r9, [r3, #12]
   2c9c8:	str	r2, [sp, #12]
   2c9cc:	ldrne	r9, [r0, #28]
   2c9d0:	ldr	r3, [sp, #12]
   2c9d4:	ldrne	fp, [r0, #4]
   2c9d8:	addeq	fp, r0, #4
   2c9dc:	mla	r8, r3, r9, fp
   2c9e0:	mov	r6, r1
   2c9e4:	ldrb	r3, [r8, r1]
   2c9e8:	cmp	r3, #255	; 0xff
   2c9ec:	beq	2cd34 <blkid_probe_get_size@plt+0x2581c>
   2c9f0:	add	r3, r1, #1
   2c9f4:	mov	r0, r3
   2c9f8:	mov	r1, r9
   2c9fc:	str	r3, [sp, #20]
   2ca00:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   2ca04:	b	2ca14 <blkid_probe_get_size@plt+0x254fc>
   2ca08:	add	r0, r1, #1
   2ca0c:	mov	r1, r9
   2ca10:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   2ca14:	ldrb	r3, [r8, r1]
   2ca18:	cmp	r3, #0
   2ca1c:	beq	2ca5c <blkid_probe_get_size@plt+0x25544>
   2ca20:	cmp	r3, #255	; 0xff
   2ca24:	beq	2ca5c <blkid_probe_get_size@plt+0x25544>
   2ca28:	cmp	r1, r6
   2ca2c:	bne	2ca08 <blkid_probe_get_size@plt+0x254f0>
   2ca30:	ldr	r2, [pc, #848]	; 2cd88 <blkid_probe_get_size@plt+0x25870>
   2ca34:	ldr	r1, [pc, #848]	; 2cd8c <blkid_probe_get_size@plt+0x25874>
   2ca38:	add	r2, pc, r2
   2ca3c:	add	r2, r2, #328	; 0x148
   2ca40:	str	r2, [sp]
   2ca44:	ldr	r2, [pc, #836]	; 2cd90 <blkid_probe_get_size@plt+0x25878>
   2ca48:	ldr	r3, [pc, #836]	; 2cd94 <blkid_probe_get_size@plt+0x2587c>
   2ca4c:	add	r2, pc, r2
   2ca50:	add	r1, pc, r1
   2ca54:	mov	r0, #0
   2ca58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2ca5c:	cmp	sl, #1
   2ca60:	mov	r4, r1
   2ca64:	beq	2ccbc <blkid_probe_get_size@plt+0x257a4>
   2ca68:	ldr	r3, [sp, #16]
   2ca6c:	cmp	r3, #0
   2ca70:	beq	2cb98 <blkid_probe_get_size@plt+0x25680>
   2ca74:	ldr	r0, [sp, #20]
   2ca78:	ldr	r1, [r5, #28]
   2ca7c:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   2ca80:	cmp	r1, r4
   2ca84:	mov	r9, r1
   2ca88:	beq	2cd68 <blkid_probe_get_size@plt+0x25850>
   2ca8c:	ldr	r3, [pc, #772]	; 2cd98 <blkid_probe_get_size@plt+0x25880>
   2ca90:	ldr	fp, [pc, #772]	; 2cd9c <blkid_probe_get_size@plt+0x25884>
   2ca94:	add	r3, pc, r3
   2ca98:	str	r3, [sp, #12]
   2ca9c:	ldr	r3, [pc, #764]	; 2cda0 <blkid_probe_get_size@plt+0x25888>
   2caa0:	add	fp, pc, fp
   2caa4:	add	r3, pc, r3
   2caa8:	str	r3, [sp, #16]
   2caac:	b	2cb04 <blkid_probe_get_size@plt+0x255ec>
   2cab0:	ldr	r2, [sp, #12]
   2cab4:	and	r3, r3, #3
   2cab8:	ldr	r1, [r5, #4]
   2cabc:	add	r3, r2, r3, lsl #4
   2cac0:	ldr	r2, [r5, #28]
   2cac4:	ldr	r0, [r3, #4]
   2cac8:	mla	r3, r0, r2, r1
   2cacc:	add	r0, r9, #1
   2cad0:	strb	r7, [r3, r6]
   2cad4:	ldrb	sl, [r5, #39]	; 0x27
   2cad8:	mov	r6, r9
   2cadc:	ands	r7, sl, #4
   2cae0:	andeq	r2, sl, #3
   2cae4:	ldreq	r3, [sp, #16]
   2cae8:	ldrne	r1, [r5, #28]
   2caec:	addeq	r2, r3, r2, lsl #4
   2caf0:	ldreq	r1, [r2, #12]
   2caf4:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   2caf8:	cmp	r4, r1
   2cafc:	beq	2cbf0 <blkid_probe_get_size@plt+0x256d8>
   2cb00:	mov	r9, r1
   2cb04:	ldrb	r0, [r8, r9]
   2cb08:	cmp	r0, #255	; 0xff
   2cb0c:	beq	2cb68 <blkid_probe_get_size@plt+0x25650>
   2cb10:	cmp	r0, #252	; 0xfc
   2cb14:	bhi	2ccac <blkid_probe_get_size@plt+0x25794>
   2cb18:	cmp	r0, #0
   2cb1c:	beq	2cb70 <blkid_probe_get_size@plt+0x25658>
   2cb20:	sub	r7, r0, #1
   2cb24:	cmp	r7, #253	; 0xfd
   2cb28:	movcs	r7, #253	; 0xfd
   2cb2c:	uxtb	r7, r7
   2cb30:	mov	r3, r6
   2cb34:	mov	r2, r9
   2cb38:	mov	r1, #0
   2cb3c:	mov	r0, r5
   2cb40:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   2cb44:	ldrb	r3, [r5, #39]	; 0x27
   2cb48:	tst	r3, #4
   2cb4c:	bne	2cab0 <blkid_probe_get_size@plt+0x25598>
   2cb50:	and	r3, r3, #3
   2cb54:	add	r1, r5, #4
   2cb58:	add	r3, fp, r3, lsl #4
   2cb5c:	ldr	r0, [r3, #4]
   2cb60:	ldr	r2, [r3, #12]
   2cb64:	b	2cac8 <blkid_probe_get_size@plt+0x255b0>
   2cb68:	mov	r7, #253	; 0xfd
   2cb6c:	b	2cb30 <blkid_probe_get_size@plt+0x25618>
   2cb70:	ldr	r3, [pc, #556]	; 2cda4 <blkid_probe_get_size@plt+0x2588c>
   2cb74:	ldr	r2, [pc, #556]	; 2cda8 <blkid_probe_get_size@plt+0x25890>
   2cb78:	add	r3, pc, r3
   2cb7c:	ldr	r1, [pc, #552]	; 2cdac <blkid_probe_get_size@plt+0x25894>
   2cb80:	add	r3, r3, #328	; 0x148
   2cb84:	str	r3, [sp]
   2cb88:	add	r2, pc, r2
   2cb8c:	ldr	r3, [pc, #540]	; 2cdb0 <blkid_probe_get_size@plt+0x25898>
   2cb90:	add	r1, pc, r1
   2cb94:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2cb98:	ldr	sl, [pc, #532]	; 2cdb4 <blkid_probe_get_size@plt+0x2589c>
   2cb9c:	and	r3, r7, #3
   2cba0:	add	sl, pc, sl
   2cba4:	add	sl, sl, r3, lsl #4
   2cba8:	ldr	r0, [sp, #20]
   2cbac:	ldr	r1, [sl, #12]
   2cbb0:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   2cbb4:	cmp	r1, r4
   2cbb8:	mov	r9, r1
   2cbbc:	bne	2ca8c <blkid_probe_get_size@plt+0x25574>
   2cbc0:	ldr	r2, [sl, #4]
   2cbc4:	mov	r9, r6
   2cbc8:	cmp	r2, #0
   2cbcc:	add	r0, r5, #4
   2cbd0:	bne	2cc28 <blkid_probe_get_size@plt+0x25710>
   2cbd4:	ldr	r3, [pc, #476]	; 2cdb8 <blkid_probe_get_size@plt+0x258a0>
   2cbd8:	and	r7, r7, #3
   2cbdc:	add	r3, pc, r3
   2cbe0:	add	r7, r3, r7, lsl #4
   2cbe4:	ldr	r2, [r7, #4]
   2cbe8:	ldr	r3, [r7, #12]
   2cbec:	b	2cc60 <blkid_probe_get_size@plt+0x25748>
   2cbf0:	mov	r3, sl
   2cbf4:	mov	sl, r7
   2cbf8:	mov	r7, r3
   2cbfc:	ldr	r3, [pc, #440]	; 2cdbc <blkid_probe_get_size@plt+0x258a4>
   2cc00:	and	r1, r7, #3
   2cc04:	add	r3, pc, r3
   2cc08:	mov	r2, r3
   2cc0c:	add	r3, r2, r1, lsl #4
   2cc10:	cmp	sl, #0
   2cc14:	ldr	r2, [r3, #4]
   2cc18:	beq	2cbc8 <blkid_probe_get_size@plt+0x256b0>
   2cc1c:	cmp	r2, #0
   2cc20:	ldr	r0, [r5, #4]
   2cc24:	beq	2cc48 <blkid_probe_get_size@plt+0x25730>
   2cc28:	mla	r0, r9, r2, r0
   2cc2c:	mov	r1, #0
   2cc30:	bl	6c84 <memset@plt>
   2cc34:	ldrb	r7, [r5, #39]	; 0x27
   2cc38:	tst	r7, #4
   2cc3c:	addeq	r0, r5, #4
   2cc40:	beq	2cbd4 <blkid_probe_get_size@plt+0x256bc>
   2cc44:	ldr	r0, [r5, #4]
   2cc48:	and	r2, r7, #3
   2cc4c:	ldr	r7, [pc, #364]	; 2cdc0 <blkid_probe_get_size@plt+0x258a8>
   2cc50:	ldr	r3, [r5, #28]
   2cc54:	add	r7, pc, r7
   2cc58:	add	r7, r7, r2, lsl #4
   2cc5c:	ldr	r2, [r7, #4]
   2cc60:	mla	r3, r2, r3, r0
   2cc64:	mvn	r2, #0
   2cc68:	strb	r2, [r3, r9]
   2cc6c:	ldrb	r3, [r5, #39]	; 0x27
   2cc70:	tst	r3, #4
   2cc74:	lsreq	r2, r3, #3
   2cc78:	addeq	r2, r2, #7
   2cc7c:	ldrne	r3, [r5, #24]
   2cc80:	andeq	r2, r2, #7
   2cc84:	biceq	r3, r3, #56	; 0x38
   2cc88:	addne	r3, r3, r2
   2cc8c:	orreq	r3, r3, r2, lsl #3
   2cc90:	strbeq	r3, [r5, #39]	; 0x27
   2cc94:	strne	r3, [r5, #24]
   2cc98:	ldrb	r3, [r5, #39]	; 0x27
   2cc9c:	orr	r3, r3, #128	; 0x80
   2cca0:	strb	r3, [r5, #39]	; 0x27
   2cca4:	add	sp, sp, #28
   2cca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ccac:	mov	r1, r9
   2ccb0:	mov	r0, r5
   2ccb4:	bl	42c8c <blkid_probe_get_size@plt+0x3b774>
   2ccb8:	b	2cb18 <blkid_probe_get_size@plt+0x25600>
   2ccbc:	ldr	r0, [sp, #12]
   2ccc0:	mla	r3, r0, r6, fp
   2ccc4:	ldr	r2, [r3, #8]
   2ccc8:	ldr	r1, [r3, #12]
   2cccc:	cmn	r2, #1
   2ccd0:	mlane	r2, r0, r2, fp
   2ccd4:	streq	r1, [r5, #48]	; 0x30
   2ccd8:	strne	r1, [r2, #12]
   2ccdc:	ldrbne	r7, [r5, #39]	; 0x27
   2cce0:	ldr	r1, [r3, #8]
   2cce4:	andne	r2, r7, #4
   2cce8:	strne	r2, [sp, #16]
   2ccec:	ldr	r2, [r3, #12]
   2ccf0:	cmn	r2, #1
   2ccf4:	beq	2cd60 <blkid_probe_get_size@plt+0x25848>
   2ccf8:	ldr	r3, [sp, #16]
   2ccfc:	and	r7, r7, #3
   2cd00:	cmp	r3, #0
   2cd04:	ldr	r3, [pc, #184]	; 2cdc4 <blkid_probe_get_size@plt+0x258ac>
   2cd08:	ldrne	r0, [r5, #4]
   2cd0c:	add	r3, pc, r3
   2cd10:	add	r7, r3, r7, lsl #4
   2cd14:	addeq	r0, r5, #4
   2cd18:	ldr	r3, [r7, #4]
   2cd1c:	mla	r2, r3, r2, r0
   2cd20:	str	r1, [r2, #8]
   2cd24:	ldrb	r7, [r5, #39]	; 0x27
   2cd28:	and	r3, r7, #4
   2cd2c:	str	r3, [sp, #16]
   2cd30:	b	2ca68 <blkid_probe_get_size@plt+0x25550>
   2cd34:	ldr	r2, [pc, #140]	; 2cdc8 <blkid_probe_get_size@plt+0x258b0>
   2cd38:	ldr	r1, [pc, #140]	; 2cdcc <blkid_probe_get_size@plt+0x258b4>
   2cd3c:	add	r2, pc, r2
   2cd40:	add	r2, r2, #328	; 0x148
   2cd44:	str	r2, [sp]
   2cd48:	ldr	r2, [pc, #128]	; 2cdd0 <blkid_probe_get_size@plt+0x258b8>
   2cd4c:	mov	r3, #524	; 0x20c
   2cd50:	add	r2, pc, r2
   2cd54:	add	r1, pc, r1
   2cd58:	mov	r0, #0
   2cd5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2cd60:	str	r1, [r5, #44]	; 0x2c
   2cd64:	b	2ca68 <blkid_probe_get_size@plt+0x25550>
   2cd68:	ldr	r3, [pc, #100]	; 2cdd4 <blkid_probe_get_size@plt+0x258bc>
   2cd6c:	and	r2, r7, #3
   2cd70:	add	r3, pc, r3
   2cd74:	add	r3, r3, r2, lsl #4
   2cd78:	mov	r9, r6
   2cd7c:	ldr	r2, [r3, #4]
   2cd80:	b	2cc1c <blkid_probe_get_size@plt+0x25704>
   2cd84:	andeq	sp, r5, r0, ror #18
   2cd88:	andeq	pc, r3, r0, asr #27
   2cd8c:	strdeq	r0, [r4], -r8
   2cd90:	andeq	r0, r4, r4, ror #21
   2cd94:	andeq	r0, r0, sp, lsl r2
   2cd98:	andeq	sp, r5, ip, ror r8
   2cd9c:	andeq	sp, r5, r0, ror r8
   2cda0:	andeq	sp, r5, ip, ror #16
   2cda4:	andeq	pc, r3, r0, lsl #25
   2cda8:	andeq	r0, r4, r8, lsr #19
   2cdac:	andeq	r0, r4, r8, asr #21
   2cdb0:	andeq	r0, r0, r3, lsr r2
   2cdb4:	andeq	sp, r5, r0, ror r7
   2cdb8:	andeq	sp, r5, r4, lsr r7
   2cdbc:	andeq	sp, r5, ip, lsl #14
   2cdc0:			; <UNDEFINED> instruction: 0x0005d6bc
   2cdc4:	andeq	sp, r5, r4, lsl #12
   2cdc8:			; <UNDEFINED> instruction: 0x0003fabc
   2cdcc:	ldrdeq	r0, [r4], -r8
   2cdd0:	andeq	r0, r4, r0, ror #15
   2cdd4:	andeq	sp, r5, r0, lsr #11
   2cdd8:	ldr	r3, [pc, #172]	; 2ce8c <blkid_probe_get_size@plt+0x25974>
   2cddc:	ldr	r2, [pc, #172]	; 2ce90 <blkid_probe_get_size@plt+0x25978>
   2cde0:	add	r3, pc, r3
   2cde4:	push	{r4, r5, r6, r7, lr}
   2cde8:	sub	sp, sp, #60	; 0x3c
   2cdec:	ldr	r6, [r3, r2]
   2cdf0:	ldrb	r2, [r0, #39]	; 0x27
   2cdf4:	mov	r7, r1
   2cdf8:	ldr	r3, [r6]
   2cdfc:	tst	r2, #4
   2ce00:	mov	r5, r0
   2ce04:	str	r3, [sp, #52]	; 0x34
   2ce08:	addne	r1, r0, #8
   2ce0c:	ldreq	r1, [pc, #128]	; 2ce94 <blkid_probe_get_size@plt+0x2597c>
   2ce10:	addeq	r1, pc, r1
   2ce14:	mov	r4, sp
   2ce18:	mov	r0, r4
   2ce1c:	bl	3e198 <blkid_probe_get_size@plt+0x36c80>
   2ce20:	ldr	r3, [r5]
   2ce24:	mov	r0, r7
   2ce28:	mov	r1, r4
   2ce2c:	ldr	r3, [r3]
   2ce30:	blx	r3
   2ce34:	mov	r0, r4
   2ce38:	bl	3e3d4 <blkid_probe_get_size@plt+0x36ebc>
   2ce3c:	ldrb	r3, [r5, #39]	; 0x27
   2ce40:	tst	r3, #4
   2ce44:	bne	2ce80 <blkid_probe_get_size@plt+0x25968>
   2ce48:	ldr	r2, [pc, #72]	; 2ce98 <blkid_probe_get_size@plt+0x25980>
   2ce4c:	and	r3, r3, #3
   2ce50:	add	r2, pc, r2
   2ce54:	add	r3, r2, r3, lsl #4
   2ce58:	ldr	r2, [r3, #12]
   2ce5c:	mov	r3, #0
   2ce60:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   2ce64:	mov	r0, r2
   2ce68:	ldr	r2, [sp, #52]	; 0x34
   2ce6c:	ldr	r3, [r6]
   2ce70:	cmp	r2, r3
   2ce74:	bne	2ce88 <blkid_probe_get_size@plt+0x25970>
   2ce78:	add	sp, sp, #60	; 0x3c
   2ce7c:	pop	{r4, r5, r6, r7, pc}
   2ce80:	ldr	r2, [r5, #28]
   2ce84:	b	2ce5c <blkid_probe_get_size@plt+0x25944>
   2ce88:	bl	6fb4 <__stack_chk_fail@plt>
   2ce8c:	andeq	sl, r6, r8, lsl #27
   2ce90:	andeq	r0, r0, ip, lsr r4
   2ce94:	andeq	ip, r6, ip, asr #32
   2ce98:	andeq	sp, r5, r0, asr #9
   2ce9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2cea0:	subs	r7, r1, #0
   2cea4:	sub	sp, sp, #12
   2cea8:	beq	2cf50 <blkid_probe_get_size@plt+0x25a38>
   2ceac:	ldr	r4, [pc, #200]	; 2cf7c <blkid_probe_get_size@plt+0x25a64>
   2ceb0:	mov	r8, r0
   2ceb4:	mov	r9, r2
   2ceb8:	mov	r0, r4
   2cebc:	b	2cefc <blkid_probe_get_size@plt+0x259e4>
   2cec0:	sub	r6, r4, #1
   2cec4:	mov	r3, r6
   2cec8:	mov	r2, r5
   2cecc:	mov	r1, r7
   2ced0:	mov	r0, r8
   2ced4:	bl	699c <readlinkat@plt>
   2ced8:	cmp	r0, #0
   2cedc:	blt	2cf18 <blkid_probe_get_size@plt+0x25a00>
   2cee0:	cmp	r6, r0
   2cee4:	bhi	2cf38 <blkid_probe_get_size@plt+0x25a20>
   2cee8:	mov	r0, r5
   2ceec:	bl	69f0 <free@plt>
   2cef0:	lsls	r4, r4, #1
   2cef4:	movne	r0, r4
   2cef8:	moveq	r0, #1
   2cefc:	bl	7230 <malloc@plt>
   2cf00:	subs	r5, r0, #0
   2cf04:	bne	2cec0 <blkid_probe_get_size@plt+0x259a8>
   2cf08:	mvn	r4, #11
   2cf0c:	mov	r0, r4
   2cf10:	add	sp, sp, #12
   2cf14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cf18:	bl	732c <__errno_location@plt>
   2cf1c:	ldr	r4, [r0]
   2cf20:	mov	r0, r5
   2cf24:	bl	69f0 <free@plt>
   2cf28:	rsb	r4, r4, #0
   2cf2c:	mov	r0, r4
   2cf30:	add	sp, sp, #12
   2cf34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cf38:	mov	r4, #0
   2cf3c:	strb	r4, [r5, r0]
   2cf40:	str	r5, [r9]
   2cf44:	mov	r0, r4
   2cf48:	add	sp, sp, #12
   2cf4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cf50:	ldr	r3, [pc, #40]	; 2cf80 <blkid_probe_get_size@plt+0x25a68>
   2cf54:	ldr	r2, [pc, #40]	; 2cf84 <blkid_probe_get_size@plt+0x25a6c>
   2cf58:	add	r3, pc, r3
   2cf5c:	ldr	r1, [pc, #36]	; 2cf88 <blkid_probe_get_size@plt+0x25a70>
   2cf60:	add	r3, r3, #348	; 0x15c
   2cf64:	str	r3, [sp]
   2cf68:	mov	r0, r7
   2cf6c:	mov	r3, #139	; 0x8b
   2cf70:	add	r2, pc, r2
   2cf74:	add	r1, pc, r1
   2cf78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2cf7c:	andeq	r1, r0, r1
   2cf80:	andeq	pc, r3, r0, lsr #17
   2cf84:	andeq	sp, r3, r8, ror #4
   2cf88:	andeq	r7, r4, r4, lsl #15
   2cf8c:	ldr	r3, [pc, #152]	; 2d02c <blkid_probe_get_size@plt+0x25b14>
   2cf90:	ldr	ip, [pc, #152]	; 2d030 <blkid_probe_get_size@plt+0x25b18>
   2cf94:	add	r3, pc, r3
   2cf98:	push	{r4, r5, r6, r7, lr}
   2cf9c:	sub	sp, sp, #12
   2cfa0:	ldr	r4, [r3, ip]
   2cfa4:	add	r2, sp, #8
   2cfa8:	mov	r6, #0
   2cfac:	ldr	ip, [r4]
   2cfb0:	mov	r7, r1
   2cfb4:	str	r6, [r2, #-8]!
   2cfb8:	mov	r1, r0
   2cfbc:	mvn	r0, #99	; 0x63
   2cfc0:	str	ip, [sp, #4]
   2cfc4:	bl	2ce9c <blkid_probe_get_size@plt+0x25984>
   2cfc8:	subs	r5, r0, #0
   2cfcc:	blt	2cff4 <blkid_probe_get_size@plt+0x25adc>
   2cfd0:	ldr	r0, [sp]
   2cfd4:	bl	708c <basename@plt>
   2cfd8:	cmp	r0, r6
   2cfdc:	beq	2d018 <blkid_probe_get_size@plt+0x25b00>
   2cfe0:	bl	74e8 <strdup@plt>
   2cfe4:	cmp	r0, #0
   2cfe8:	beq	2d020 <blkid_probe_get_size@plt+0x25b08>
   2cfec:	mov	r5, r6
   2cff0:	str	r0, [r7]
   2cff4:	ldr	r0, [sp]
   2cff8:	bl	69f0 <free@plt>
   2cffc:	ldr	r2, [sp, #4]
   2d000:	ldr	r3, [r4]
   2d004:	mov	r0, r5
   2d008:	cmp	r2, r3
   2d00c:	bne	2d028 <blkid_probe_get_size@plt+0x25b10>
   2d010:	add	sp, sp, #12
   2d014:	pop	{r4, r5, r6, r7, pc}
   2d018:	mvn	r5, #1
   2d01c:	b	2cff4 <blkid_probe_get_size@plt+0x25adc>
   2d020:	mvn	r5, #11
   2d024:	b	2cff4 <blkid_probe_get_size@plt+0x25adc>
   2d028:	bl	6fb4 <__stack_chk_fail@plt>
   2d02c:	ldrdeq	sl, [r6], -r4
   2d030:	andeq	r0, r0, ip, lsr r4
   2d034:	push	{r4, r5, lr}
   2d038:	subs	r4, r0, #0
   2d03c:	sub	sp, sp, #12
   2d040:	beq	2d084 <blkid_probe_get_size@plt+0x25b6c>
   2d044:	bl	732c <__errno_location@plt>
   2d048:	mov	r3, #0
   2d04c:	str	r3, [r0]
   2d050:	mov	r5, r0
   2d054:	mov	r0, r4
   2d058:	bl	7380 <fflush@plt>
   2d05c:	mov	r0, r4
   2d060:	bl	7188 <ferror@plt>
   2d064:	cmp	r0, #0
   2d068:	beq	2d07c <blkid_probe_get_size@plt+0x25b64>
   2d06c:	ldr	r0, [r5]
   2d070:	cmp	r0, #0
   2d074:	rsbgt	r0, r0, #0
   2d078:	mvnle	r0, #4
   2d07c:	add	sp, sp, #12
   2d080:	pop	{r4, r5, pc}
   2d084:	ldr	r2, [pc, #32]	; 2d0ac <blkid_probe_get_size@plt+0x25b94>
   2d088:	ldr	r1, [pc, #32]	; 2d0b0 <blkid_probe_get_size@plt+0x25b98>
   2d08c:	add	r2, pc, r2
   2d090:	add	r2, r2, #368	; 0x170
   2d094:	str	r2, [sp]
   2d098:	ldr	r2, [pc, #20]	; 2d0b4 <blkid_probe_get_size@plt+0x25b9c>
   2d09c:	ldr	r3, [pc, #20]	; 2d0b8 <blkid_probe_get_size@plt+0x25ba0>
   2d0a0:	add	r2, pc, r2
   2d0a4:	add	r1, pc, r1
   2d0a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d0ac:	andeq	pc, r3, ip, ror #14
   2d0b0:	andeq	r7, r4, r0, lsl #19
   2d0b4:	andeq	r0, r4, r4, asr #11
   2d0b8:	andeq	r0, r0, r1, asr #4
   2d0bc:	ldr	r2, [pc, #44]	; 2d0f0 <blkid_probe_get_size@plt+0x25bd8>
   2d0c0:	push	{lr}		; (str lr, [sp, #-4]!)
   2d0c4:	add	r2, pc, r2
   2d0c8:	sub	sp, sp, #12
   2d0cc:	add	r2, r2, #388	; 0x184
   2d0d0:	str	r2, [sp]
   2d0d4:	ldr	r1, [pc, #24]	; 2d0f4 <blkid_probe_get_size@plt+0x25bdc>
   2d0d8:	ldr	r2, [pc, #24]	; 2d0f8 <blkid_probe_get_size@plt+0x25be0>
   2d0dc:	mov	r3, #183	; 0xb7
   2d0e0:	add	r2, pc, r2
   2d0e4:	add	r1, pc, r1
   2d0e8:	mov	r0, #0
   2d0ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d0f0:	andeq	pc, r3, r4, lsr r7	; <UNPREDICTABLE>
   2d0f4:			; <UNDEFINED> instruction: 0x000405b0
   2d0f8:	muleq	r4, ip, r5
   2d0fc:	push	{r4, r5, r6, r7, lr}
   2d100:	sub	sp, sp, #12
   2d104:	mov	r4, r0
   2d108:	bl	732c <__errno_location@plt>
   2d10c:	cmp	r4, #2
   2d110:	mov	r5, r0
   2d114:	ldr	r6, [r0]
   2d118:	bls	2d134 <blkid_probe_get_size@plt+0x25c1c>
   2d11c:	mov	r7, r4
   2d120:	cmp	r6, #0
   2d124:	mov	r0, r7
   2d128:	strge	r6, [r5]
   2d12c:	add	sp, sp, #12
   2d130:	pop	{r4, r5, r6, r7, pc}
   2d134:	mov	r2, #0
   2d138:	mov	r1, #1
   2d13c:	mov	r0, r4
   2d140:	bl	72cc <fcntl64@plt>
   2d144:	cmp	r0, #0
   2d148:	blt	2d11c <blkid_probe_get_size@plt+0x25c04>
   2d14c:	ands	r1, r0, #1
   2d150:	mov	r2, #3
   2d154:	ldrne	r1, [pc, #80]	; 2d1ac <blkid_probe_get_size@plt+0x25c94>
   2d158:	mov	r0, r4
   2d15c:	bl	72cc <fcntl64@plt>
   2d160:	cmp	r0, #0
   2d164:	mov	r7, r0
   2d168:	blt	2d11c <blkid_probe_get_size@plt+0x25c04>
   2d16c:	cmp	r0, #2
   2d170:	ble	2d180 <blkid_probe_get_size@plt+0x25c68>
   2d174:	mov	r0, r4
   2d178:	bl	6d44 <close@plt>
   2d17c:	b	2d120 <blkid_probe_get_size@plt+0x25c08>
   2d180:	ldr	r2, [pc, #40]	; 2d1b0 <blkid_probe_get_size@plt+0x25c98>
   2d184:	ldr	r1, [pc, #40]	; 2d1b4 <blkid_probe_get_size@plt+0x25c9c>
   2d188:	add	r2, pc, r2
   2d18c:	add	r2, r2, #400	; 0x190
   2d190:	str	r2, [sp]
   2d194:	ldr	r2, [pc, #28]	; 2d1b8 <blkid_probe_get_size@plt+0x25ca0>
   2d198:	ldr	r3, [pc, #28]	; 2d1bc <blkid_probe_get_size@plt+0x25ca4>
   2d19c:	add	r2, pc, r2
   2d1a0:	add	r1, pc, r1
   2d1a4:	mov	r0, #0
   2d1a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d1ac:	andeq	r0, r0, r6, lsl #8
   2d1b0:	andeq	pc, r3, r0, ror r6	; <UNPREDICTABLE>
   2d1b4:	andeq	r0, r4, ip, lsl #10
   2d1b8:	andeq	r0, r4, r0, ror #9
   2d1bc:	andeq	r0, r0, r5, lsr #6
   2d1c0:	ldr	r2, [pc, #236]	; 2d2b4 <blkid_probe_get_size@plt+0x25d9c>
   2d1c4:	ldr	r3, [pc, #236]	; 2d2b8 <blkid_probe_get_size@plt+0x25da0>
   2d1c8:	add	r2, pc, r2
   2d1cc:	push	{r4, r5, r6, lr}
   2d1d0:	sub	sp, sp, #40	; 0x28
   2d1d4:	ldr	r4, [r2, r3]
   2d1d8:	ldr	ip, [pc, #220]	; 2d2bc <blkid_probe_get_size@plt+0x25da4>
   2d1dc:	mov	r3, #26
   2d1e0:	ldr	lr, [r4]
   2d1e4:	add	ip, pc, ip
   2d1e8:	add	r5, sp, #8
   2d1ec:	str	r0, [sp, #4]
   2d1f0:	mov	r6, r1
   2d1f4:	str	ip, [sp]
   2d1f8:	mov	r0, r5
   2d1fc:	mov	r1, r3
   2d200:	mov	r2, #1
   2d204:	str	lr, [sp, #36]	; 0x24
   2d208:	bl	7260 <__snprintf_chk@plt>
   2d20c:	cmp	r0, #25
   2d210:	bhi	2d274 <blkid_probe_get_size@plt+0x25d5c>
   2d214:	mov	r2, r6
   2d218:	mov	r1, r5
   2d21c:	mvn	r0, #99	; 0x63
   2d220:	bl	2ce9c <blkid_probe_get_size@plt+0x25984>
   2d224:	cmn	r0, #2
   2d228:	beq	2d244 <blkid_probe_get_size@plt+0x25d2c>
   2d22c:	ldr	r2, [sp, #36]	; 0x24
   2d230:	ldr	r3, [r4]
   2d234:	cmp	r2, r3
   2d238:	bne	2d2b0 <blkid_probe_get_size@plt+0x25d98>
   2d23c:	add	sp, sp, #40	; 0x28
   2d240:	pop	{r4, r5, r6, pc}
   2d244:	ldr	r0, [pc, #116]	; 2d2c0 <blkid_probe_get_size@plt+0x25da8>
   2d248:	mov	r1, #0
   2d24c:	add	r0, pc, r0
   2d250:	bl	6ff0 <access@plt>
   2d254:	cmp	r0, #0
   2d258:	bge	2d2a0 <blkid_probe_get_size@plt+0x25d88>
   2d25c:	bl	732c <__errno_location@plt>
   2d260:	ldr	r0, [r0]
   2d264:	cmp	r0, #2
   2d268:	beq	2d2a8 <blkid_probe_get_size@plt+0x25d90>
   2d26c:	rsb	r0, r0, #0
   2d270:	b	2d22c <blkid_probe_get_size@plt+0x25d14>
   2d274:	ldr	r2, [pc, #72]	; 2d2c4 <blkid_probe_get_size@plt+0x25dac>
   2d278:	ldr	r1, [pc, #72]	; 2d2c8 <blkid_probe_get_size@plt+0x25db0>
   2d27c:	add	r2, pc, r2
   2d280:	add	r2, r2, #420	; 0x1a4
   2d284:	str	r2, [sp]
   2d288:	ldr	r2, [pc, #60]	; 2d2cc <blkid_probe_get_size@plt+0x25db4>
   2d28c:	ldr	r3, [pc, #60]	; 2d2d0 <blkid_probe_get_size@plt+0x25db8>
   2d290:	add	r2, pc, r2
   2d294:	add	r1, pc, r1
   2d298:	mov	r0, #0
   2d29c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d2a0:	mvn	r0, #8
   2d2a4:	b	2d22c <blkid_probe_get_size@plt+0x25d14>
   2d2a8:	mvn	r0, #94	; 0x5e
   2d2ac:	b	2d22c <blkid_probe_get_size@plt+0x25d14>
   2d2b0:	bl	6fb4 <__stack_chk_fail@plt>
   2d2b4:	andeq	sl, r6, r0, lsr #19
   2d2b8:	andeq	r0, r0, ip, lsr r4
   2d2bc:	andeq	ip, r3, r0, ror #31
   2d2c0:	muleq	r4, r8, r4
   2d2c4:	andeq	pc, r3, ip, ror r5	; <UNPREDICTABLE>
   2d2c8:	andeq	r0, r4, r4, lsr #8
   2d2cc:	andeq	r0, r4, ip, ror #7
   2d2d0:	andeq	r0, r0, r7, ror r1
   2d2d4:	mvn	r0, #66	; 0x42
   2d2d8:	bx	lr
   2d2dc:	push	{r4, r5, lr}
   2d2e0:	subs	r4, r0, #0
   2d2e4:	sub	sp, sp, #12
   2d2e8:	beq	2d348 <blkid_probe_get_size@plt+0x25e30>
   2d2ec:	bl	732c <__errno_location@plt>
   2d2f0:	mov	r5, r0
   2d2f4:	mov	r0, r4
   2d2f8:	ldr	r4, [r5]
   2d2fc:	bl	7284 <fclose@plt>
   2d300:	cmp	r0, #0
   2d304:	beq	2d340 <blkid_probe_get_size@plt+0x25e28>
   2d308:	ldr	r3, [r5]
   2d30c:	cmp	r3, #9
   2d310:	bne	2d340 <blkid_probe_get_size@plt+0x25e28>
   2d314:	ldr	r2, [pc, #56]	; 2d354 <blkid_probe_get_size@plt+0x25e3c>
   2d318:	ldr	r1, [pc, #56]	; 2d358 <blkid_probe_get_size@plt+0x25e40>
   2d31c:	add	r2, pc, r2
   2d320:	add	r2, r2, #432	; 0x1b0
   2d324:	str	r2, [sp]
   2d328:	ldr	r2, [pc, #44]	; 2d35c <blkid_probe_get_size@plt+0x25e44>
   2d32c:	mov	r3, #117	; 0x75
   2d330:	add	r2, pc, r2
   2d334:	add	r1, pc, r1
   2d338:	mov	r0, #0
   2d33c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d340:	cmp	r4, #0
   2d344:	strge	r4, [r5]
   2d348:	mov	r0, #0
   2d34c:	add	sp, sp, #12
   2d350:	pop	{r4, r5, pc}
   2d354:	ldrdeq	pc, [r3], -ip
   2d358:	andeq	r0, r4, r0, asr #7
   2d35c:	andeq	r0, r4, ip, asr #6
   2d360:	ldr	r3, [pc, #640]	; 2d5e8 <blkid_probe_get_size@plt+0x260d0>
   2d364:	ldr	ip, [pc, #640]	; 2d5ec <blkid_probe_get_size@plt+0x260d4>
   2d368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d36c:	add	r3, pc, r3
   2d370:	sub	sp, sp, #140	; 0x8c
   2d374:	cmp	r0, #0
   2d378:	str	r1, [sp, #20]
   2d37c:	ldr	r1, [r3, ip]
   2d380:	str	r2, [sp, #16]
   2d384:	str	r1, [sp, #12]
   2d388:	ldr	r3, [r1]
   2d38c:	str	r3, [sp, #132]	; 0x84
   2d390:	beq	2d510 <blkid_probe_get_size@plt+0x25ff8>
   2d394:	ldr	r1, [pc, #596]	; 2d5f0 <blkid_probe_get_size@plt+0x260d8>
   2d398:	add	r1, pc, r1
   2d39c:	bl	738c <fopen64@plt>
   2d3a0:	subs	r6, r0, #0
   2d3a4:	beq	2d458 <blkid_probe_get_size@plt+0x25f40>
   2d3a8:	mov	r1, #2
   2d3ac:	bl	68f4 <__fsetlocking@plt>
   2d3b0:	mov	r0, r6
   2d3b4:	bl	6f90 <fileno@plt>
   2d3b8:	cmp	r0, #0
   2d3bc:	bge	2d48c <blkid_probe_get_size@plt+0x25f74>
   2d3c0:	mov	r4, #2048	; 0x800
   2d3c4:	mov	r8, #0
   2d3c8:	ldr	sl, [pc, #548]	; 2d5f4 <blkid_probe_get_size@plt+0x260dc>
   2d3cc:	mov	r5, r8
   2d3d0:	mov	fp, r8
   2d3d4:	add	r1, r4, #1
   2d3d8:	mov	r0, r8
   2d3dc:	bl	6e94 <realloc@plt>
   2d3e0:	subs	r7, r0, #0
   2d3e4:	beq	2d554 <blkid_probe_get_size@plt+0x2603c>
   2d3e8:	bl	732c <__errno_location@plt>
   2d3ec:	sub	r2, r4, r5
   2d3f0:	mov	r3, r6
   2d3f4:	mov	r1, #1
   2d3f8:	str	fp, [r0]
   2d3fc:	mov	r9, r0
   2d400:	add	r0, r7, r5
   2d404:	bl	6f60 <fread@plt>
   2d408:	add	r5, r5, r0
   2d40c:	mov	r0, r6
   2d410:	bl	7188 <ferror@plt>
   2d414:	subs	r8, r0, #0
   2d418:	bne	2d560 <blkid_probe_get_size@plt+0x26048>
   2d41c:	mov	r0, r6
   2d420:	bl	6b40 <feof@plt>
   2d424:	cmp	r0, #0
   2d428:	bne	2d574 <blkid_probe_get_size@plt+0x2605c>
   2d42c:	cmp	r4, r5
   2d430:	bne	2d4e8 <blkid_probe_get_size@plt+0x25fd0>
   2d434:	cmp	r4, sl
   2d438:	bhi	2d59c <blkid_probe_get_size@plt+0x26084>
   2d43c:	lsl	r3, r4, #1
   2d440:	cmp	r3, sl
   2d444:	mov	r5, r4
   2d448:	mov	r8, r7
   2d44c:	movls	r4, r3
   2d450:	movhi	r4, #4194304	; 0x400000
   2d454:	b	2d3d4 <blkid_probe_get_size@plt+0x25ebc>
   2d458:	bl	732c <__errno_location@plt>
   2d45c:	ldr	r8, [r0]
   2d460:	rsb	r8, r8, #0
   2d464:	mov	r0, r6
   2d468:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   2d46c:	ldr	r3, [sp, #12]
   2d470:	ldr	r2, [sp, #132]	; 0x84
   2d474:	mov	r0, r8
   2d478:	ldr	r3, [r3]
   2d47c:	cmp	r2, r3
   2d480:	bne	2d5e4 <blkid_probe_get_size@plt+0x260cc>
   2d484:	add	sp, sp, #140	; 0x8c
   2d488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d48c:	mov	r0, r6
   2d490:	bl	6f90 <fileno@plt>
   2d494:	add	r2, sp, #24
   2d498:	mov	r1, r0
   2d49c:	mov	r0, #3
   2d4a0:	bl	6c90 <__fxstat64@plt>
   2d4a4:	cmp	r0, #0
   2d4a8:	blt	2d538 <blkid_probe_get_size@plt+0x26020>
   2d4ac:	ldr	r3, [sp, #40]	; 0x28
   2d4b0:	and	r3, r3, #61440	; 0xf000
   2d4b4:	cmp	r3, #32768	; 0x8000
   2d4b8:	bne	2d3c0 <blkid_probe_get_size@plt+0x25ea8>
   2d4bc:	ldrd	r4, [sp, #72]	; 0x48
   2d4c0:	mov	r2, #4194304	; 0x400000
   2d4c4:	mov	r3, #0
   2d4c8:	cmp	r2, r4
   2d4cc:	sbcs	r3, r3, r5
   2d4d0:	blt	2d5d0 <blkid_probe_get_size@plt+0x260b8>
   2d4d4:	cmp	r4, #1
   2d4d8:	sbcs	r3, r5, #0
   2d4dc:	addge	r4, r4, #1
   2d4e0:	bge	2d3c4 <blkid_probe_get_size@plt+0x25eac>
   2d4e4:	b	2d3c0 <blkid_probe_get_size@plt+0x25ea8>
   2d4e8:	ldr	r2, [pc, #264]	; 2d5f8 <blkid_probe_get_size@plt+0x260e0>
   2d4ec:	ldr	r1, [pc, #264]	; 2d5fc <blkid_probe_get_size@plt+0x260e4>
   2d4f0:	add	r2, pc, r2
   2d4f4:	add	r2, r2, #460	; 0x1cc
   2d4f8:	str	r2, [sp]
   2d4fc:	ldr	r2, [pc, #252]	; 2d600 <blkid_probe_get_size@plt+0x260e8>
   2d500:	ldr	r3, [pc, #252]	; 2d604 <blkid_probe_get_size@plt+0x260ec>
   2d504:	add	r2, pc, r2
   2d508:	add	r1, pc, r1
   2d50c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d510:	ldr	r2, [pc, #240]	; 2d608 <blkid_probe_get_size@plt+0x260f0>
   2d514:	ldr	r1, [pc, #240]	; 2d60c <blkid_probe_get_size@plt+0x260f4>
   2d518:	add	r2, pc, r2
   2d51c:	add	r2, r2, #444	; 0x1bc
   2d520:	str	r2, [sp]
   2d524:	ldr	r2, [pc, #228]	; 2d610 <blkid_probe_get_size@plt+0x260f8>
   2d528:	ldr	r3, [pc, #228]	; 2d614 <blkid_probe_get_size@plt+0x260fc>
   2d52c:	add	r2, pc, r2
   2d530:	add	r1, pc, r1
   2d534:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d538:	bl	732c <__errno_location@plt>
   2d53c:	mov	r7, #0
   2d540:	ldr	r8, [r0]
   2d544:	rsb	r8, r8, #0
   2d548:	mov	r0, r7
   2d54c:	bl	69f0 <free@plt>
   2d550:	b	2d464 <blkid_probe_get_size@plt+0x25f4c>
   2d554:	mov	r7, r8
   2d558:	mvn	r8, #11
   2d55c:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d560:	ldr	r8, [r9]
   2d564:	cmp	r8, #0
   2d568:	ble	2d5dc <blkid_probe_get_size@plt+0x260c4>
   2d56c:	rsb	r8, r8, #0
   2d570:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d574:	ldr	r3, [sp, #16]
   2d578:	cmp	r3, #0
   2d57c:	beq	2d5a4 <blkid_probe_get_size@plt+0x2608c>
   2d580:	ldr	r3, [sp, #20]
   2d584:	strb	r8, [r7, r5]
   2d588:	str	r7, [r3]
   2d58c:	ldr	r3, [sp, #16]
   2d590:	mov	r7, r8
   2d594:	str	r5, [r3]
   2d598:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d59c:	mvn	r8, #6
   2d5a0:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d5a4:	mov	r1, r8
   2d5a8:	mov	r2, r5
   2d5ac:	mov	r0, r7
   2d5b0:	bl	7350 <memchr@plt>
   2d5b4:	cmp	r0, #0
   2d5b8:	mvnne	r8, #73	; 0x49
   2d5bc:	ldreq	r3, [sp, #20]
   2d5c0:	strbeq	r8, [r7, r5]
   2d5c4:	streq	r7, [r3]
   2d5c8:	moveq	r7, r8
   2d5cc:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d5d0:	mov	r7, #0
   2d5d4:	mvn	r8, #6
   2d5d8:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d5dc:	mvn	r8, #4
   2d5e0:	b	2d548 <blkid_probe_get_size@plt+0x26030>
   2d5e4:	bl	6fb4 <__stack_chk_fail@plt>
   2d5e8:	strdeq	sl, [r6], -ip
   2d5ec:	andeq	r0, r0, ip, lsr r4
   2d5f0:	strdeq	r0, [r4], -r4
   2d5f4:	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
   2d5f8:	andeq	pc, r3, r8, lsl #6
   2d5fc:	andeq	r0, r4, r8, lsl #4
   2d600:	andeq	r0, r4, r0, ror #2
   2d604:	andeq	r0, r0, r9, asr #2
   2d608:	andeq	pc, r3, r0, ror #5
   2d60c:	andeq	r7, r4, r8, ror #12
   2d610:	andeq	r0, r4, r8, lsr r1
   2d614:	andeq	r0, r0, r7, ror #2
   2d618:	cmp	r0, #0
   2d61c:	push	{r4, r5, lr}
   2d620:	sub	sp, sp, #12
   2d624:	beq	2d680 <blkid_probe_get_size@plt+0x26168>
   2d628:	mov	r4, r1
   2d62c:	ldr	r1, [pc, #116]	; 2d6a8 <blkid_probe_get_size@plt+0x26190>
   2d630:	add	r1, pc, r1
   2d634:	bl	738c <fopen64@plt>
   2d638:	subs	r5, r0, #0
   2d63c:	beq	2d670 <blkid_probe_get_size@plt+0x26158>
   2d640:	mov	r1, #2
   2d644:	bl	68f4 <__fsetlocking@plt>
   2d648:	mov	r2, r4
   2d64c:	mov	r1, #0
   2d650:	mov	r0, r5
   2d654:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   2d658:	and	r4, r0, r0, asr #31
   2d65c:	mov	r0, r5
   2d660:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   2d664:	mov	r0, r4
   2d668:	add	sp, sp, #12
   2d66c:	pop	{r4, r5, pc}
   2d670:	bl	732c <__errno_location@plt>
   2d674:	ldr	r4, [r0]
   2d678:	rsb	r4, r4, #0
   2d67c:	b	2d65c <blkid_probe_get_size@plt+0x26144>
   2d680:	ldr	r2, [pc, #36]	; 2d6ac <blkid_probe_get_size@plt+0x26194>
   2d684:	ldr	r1, [pc, #36]	; 2d6b0 <blkid_probe_get_size@plt+0x26198>
   2d688:	add	r2, pc, r2
   2d68c:	add	r2, r2, #480	; 0x1e0
   2d690:	str	r2, [sp]
   2d694:	ldr	r2, [pc, #24]	; 2d6b4 <blkid_probe_get_size@plt+0x2619c>
   2d698:	mov	r3, #217	; 0xd9
   2d69c:	add	r2, pc, r2
   2d6a0:	add	r1, pc, r1
   2d6a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d6a8:	andeq	r0, r4, ip, asr sp
   2d6ac:	andeq	pc, r3, r0, ror r1	; <UNPREDICTABLE>
   2d6b0:	strdeq	r7, [r4], -r8
   2d6b4:	andeq	pc, r3, r8, asr #31
   2d6b8:	cmp	r0, #0
   2d6bc:	push	{lr}		; (str lr, [sp, #-4]!)
   2d6c0:	sub	sp, sp, #12
   2d6c4:	blt	2d6fc <blkid_probe_get_size@plt+0x261e4>
   2d6c8:	bl	6d44 <close@plt>
   2d6cc:	cmp	r0, #0
   2d6d0:	blt	2d6e0 <blkid_probe_get_size@plt+0x261c8>
   2d6d4:	mov	r0, #0
   2d6d8:	add	sp, sp, #12
   2d6dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6e0:	bl	732c <__errno_location@plt>
   2d6e4:	ldr	r0, [r0]
   2d6e8:	cmp	r0, #4
   2d6ec:	rsbne	r0, r0, #0
   2d6f0:	beq	2d6d4 <blkid_probe_get_size@plt+0x261bc>
   2d6f4:	add	sp, sp, #12
   2d6f8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6fc:	ldr	r2, [pc, #36]	; 2d728 <blkid_probe_get_size@plt+0x26210>
   2d700:	ldr	r1, [pc, #36]	; 2d72c <blkid_probe_get_size@plt+0x26214>
   2d704:	add	r2, pc, r2
   2d708:	add	r2, r2, #500	; 0x1f4
   2d70c:	str	r2, [sp]
   2d710:	ldr	r2, [pc, #24]	; 2d730 <blkid_probe_get_size@plt+0x26218>
   2d714:	mov	r3, #29
   2d718:	add	r2, pc, r2
   2d71c:	add	r1, pc, r1
   2d720:	mov	r0, #0
   2d724:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d728:	strdeq	pc, [r3], -r4
   2d72c:	andeq	pc, r3, r0, asr #29
   2d730:	andeq	pc, r3, r4, ror #30
   2d734:	push	{r4, r5, lr}
   2d738:	subs	r4, r0, #0
   2d73c:	sub	sp, sp, #12
   2d740:	blt	2d768 <blkid_probe_get_size@plt+0x26250>
   2d744:	bl	732c <__errno_location@plt>
   2d748:	mov	r5, r0
   2d74c:	mov	r0, r4
   2d750:	ldr	r4, [r5]
   2d754:	bl	2d6b8 <blkid_probe_get_size@plt+0x261a0>
   2d758:	cmn	r0, #9
   2d75c:	beq	2d774 <blkid_probe_get_size@plt+0x2625c>
   2d760:	cmp	r4, #0
   2d764:	strge	r4, [r5]
   2d768:	mvn	r0, #0
   2d76c:	add	sp, sp, #12
   2d770:	pop	{r4, r5, pc}
   2d774:	ldr	r2, [pc, #36]	; 2d7a0 <blkid_probe_get_size@plt+0x26288>
   2d778:	ldr	r1, [pc, #36]	; 2d7a4 <blkid_probe_get_size@plt+0x2628c>
   2d77c:	add	r2, pc, r2
   2d780:	add	r2, r2, #516	; 0x204
   2d784:	str	r2, [sp]
   2d788:	ldr	r2, [pc, #24]	; 2d7a8 <blkid_probe_get_size@plt+0x26290>
   2d78c:	mov	r3, #67	; 0x43
   2d790:	add	r2, pc, r2
   2d794:	add	r1, pc, r1
   2d798:	mov	r0, #0
   2d79c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2d7a0:	andeq	pc, r3, ip, ror r0	; <UNPREDICTABLE>
   2d7a4:	andeq	pc, r3, r4, lsl #31
   2d7a8:	andeq	pc, r3, ip, ror #29
   2d7ac:	ldr	ip, [pc, #1396]	; 2dd28 <blkid_probe_get_size@plt+0x26810>
   2d7b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d7b4:	add	ip, pc, ip
   2d7b8:	ldr	lr, [pc, #1388]	; 2dd2c <blkid_probe_get_size@plt+0x26814>
   2d7bc:	sub	sp, sp, #164	; 0xa4
   2d7c0:	mov	r4, r1
   2d7c4:	str	r2, [sp, #16]
   2d7c8:	ldr	r1, [ip, lr]
   2d7cc:	mov	sl, r3
   2d7d0:	mov	r2, ip
   2d7d4:	ldr	r3, [r1]
   2d7d8:	mov	ip, #0
   2d7dc:	subs	r5, r0, #0
   2d7e0:	str	r1, [sp, #12]
   2d7e4:	str	ip, [sp, #40]	; 0x28
   2d7e8:	str	r3, [sp, #156]	; 0x9c
   2d7ec:	str	ip, [sp, #36]	; 0x24
   2d7f0:	str	ip, [sp, #32]
   2d7f4:	beq	2db04 <blkid_probe_get_size@plt+0x265ec>
   2d7f8:	ldrb	r3, [r5]
   2d7fc:	cmp	r3, #0
   2d800:	mvneq	r8, #0
   2d804:	mvneq	r7, #21
   2d808:	bne	2d84c <blkid_probe_get_size@plt+0x26334>
   2d80c:	mov	r0, r8
   2d810:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2d814:	ldr	r0, [sp, #32]
   2d818:	bl	69f0 <free@plt>
   2d81c:	ldr	r0, [sp, #36]	; 0x24
   2d820:	bl	69f0 <free@plt>
   2d824:	ldr	r0, [sp, #40]	; 0x28
   2d828:	bl	69f0 <free@plt>
   2d82c:	ldr	r3, [sp, #12]
   2d830:	ldr	r2, [sp, #156]	; 0x9c
   2d834:	mov	r0, r7
   2d838:	ldr	r3, [r3]
   2d83c:	cmp	r2, r3
   2d840:	bne	2dd24 <blkid_probe_get_size@plt+0x2680c>
   2d844:	add	sp, sp, #164	; 0xa4
   2d848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d84c:	mov	r0, r4
   2d850:	bl	39bd0 <blkid_probe_get_size@plt+0x326b8>
   2d854:	eor	r0, r0, #1
   2d858:	cmp	r4, #0
   2d85c:	moveq	r0, #0
   2d860:	andne	r0, r0, #1
   2d864:	cmp	r0, #0
   2d868:	bne	2d930 <blkid_probe_get_size@plt+0x26418>
   2d86c:	mov	r0, r5
   2d870:	add	r1, sp, #40	; 0x28
   2d874:	bl	40644 <blkid_probe_get_size@plt+0x3912c>
   2d878:	subs	r7, r0, #0
   2d87c:	blt	2d944 <blkid_probe_get_size@plt+0x2642c>
   2d880:	ldr	r6, [pc, #1192]	; 2dd30 <blkid_probe_get_size@plt+0x26818>
   2d884:	mov	r1, #2654208	; 0x288000
   2d888:	add	r6, pc, r6
   2d88c:	mov	r0, r6
   2d890:	bl	6ec4 <open64@plt>
   2d894:	subs	r8, r0, #0
   2d898:	blt	2d94c <blkid_probe_get_size@plt+0x26434>
   2d89c:	ldr	fp, [pc, #1168]	; 2dd34 <blkid_probe_get_size@plt+0x2681c>
   2d8a0:	ldr	r3, [pc, #1168]	; 2dd38 <blkid_probe_get_size@plt+0x26820>
   2d8a4:	ldr	r5, [sp, #40]	; 0x28
   2d8a8:	add	r3, pc, r3
   2d8ac:	add	fp, pc, fp
   2d8b0:	str	r3, [sp, #20]
   2d8b4:	mov	r3, #32
   2d8b8:	str	r3, [sp, #24]
   2d8bc:	mov	r1, r6
   2d8c0:	mov	r0, r5
   2d8c4:	bl	6c9c <strspn@plt>
   2d8c8:	mov	r1, r6
   2d8cc:	mov	r7, r0
   2d8d0:	add	r0, r5, r0
   2d8d4:	bl	6a8c <strcspn@plt>
   2d8d8:	add	r9, r0, r7
   2d8dc:	mov	r1, r9
   2d8e0:	mov	r0, r5
   2d8e4:	bl	68dc <strndup@plt>
   2d8e8:	subs	r4, r0, #0
   2d8ec:	beq	2dc74 <blkid_probe_get_size@plt+0x2675c>
   2d8f0:	ldrb	r3, [r4]
   2d8f4:	add	r5, r5, r9
   2d8f8:	cmp	r3, #0
   2d8fc:	bne	2d95c <blkid_probe_get_size@plt+0x26444>
   2d900:	mvn	r0, #0
   2d904:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2d908:	mov	r0, r4
   2d90c:	bl	69f0 <free@plt>
   2d910:	ldr	r0, [sp, #36]	; 0x24
   2d914:	cmp	r0, #0
   2d918:	beq	2dc9c <blkid_probe_get_size@plt+0x26784>
   2d91c:	mov	r3, #0
   2d920:	str	r0, [sl]
   2d924:	str	r3, [sp, #36]	; 0x24
   2d928:	mov	r7, #1
   2d92c:	b	2d80c <blkid_probe_get_size@plt+0x262f4>
   2d930:	mov	r0, r4
   2d934:	add	r1, sp, #32
   2d938:	bl	40644 <blkid_probe_get_size@plt+0x3912c>
   2d93c:	subs	r7, r0, #0
   2d940:	bge	2d86c <blkid_probe_get_size@plt+0x26354>
   2d944:	mvn	r8, #0
   2d948:	b	2d80c <blkid_probe_get_size@plt+0x262f4>
   2d94c:	bl	732c <__errno_location@plt>
   2d950:	ldr	r7, [r0]
   2d954:	rsb	r7, r7, #0
   2d958:	b	2d80c <blkid_probe_get_size@plt+0x262f4>
   2d95c:	mov	r1, r6
   2d960:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   2d964:	cmp	r0, #0
   2d968:	beq	2dc4c <blkid_probe_get_size@plt+0x26734>
   2d96c:	mov	r1, fp
   2d970:	mov	r0, r4
   2d974:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   2d978:	cmp	r0, #0
   2d97c:	beq	2daf4 <blkid_probe_get_size@plt+0x265dc>
   2d980:	ldr	r1, [sp, #20]
   2d984:	mov	r0, r4
   2d988:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   2d98c:	subs	r9, r0, #0
   2d990:	bne	2da50 <blkid_probe_get_size@plt+0x26538>
   2d994:	ldr	r7, [sp, #36]	; 0x24
   2d998:	mov	r0, r7
   2d99c:	bl	39bd0 <blkid_probe_get_size@plt+0x326b8>
   2d9a0:	cmp	r0, #0
   2d9a4:	bne	2dafc <blkid_probe_get_size@plt+0x265e4>
   2d9a8:	mov	r0, r7
   2d9ac:	bl	3fa14 <blkid_probe_get_size@plt+0x384fc>
   2d9b0:	subs	r7, r0, #0
   2d9b4:	beq	2dcbc <blkid_probe_get_size@plt+0x267a4>
   2d9b8:	ldr	r3, [sp, #32]
   2d9bc:	ldr	r9, [sp, #36]	; 0x24
   2d9c0:	cmp	r3, #0
   2d9c4:	beq	2d9f8 <blkid_probe_get_size@plt+0x264e0>
   2d9c8:	mov	r1, r3
   2d9cc:	mov	r0, r9
   2d9d0:	str	r3, [sp, #28]
   2d9d4:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   2d9d8:	cmp	r0, #0
   2d9dc:	beq	2d9f8 <blkid_probe_get_size@plt+0x264e0>
   2d9e0:	ldr	r3, [sp, #28]
   2d9e4:	mov	r0, r7
   2d9e8:	mov	r1, r3
   2d9ec:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   2d9f0:	cmp	r0, #0
   2d9f4:	beq	2da30 <blkid_probe_get_size@plt+0x26518>
   2d9f8:	mov	r0, r9
   2d9fc:	bl	69f0 <free@plt>
   2da00:	ldr	r1, [pc, #820]	; 2dd3c <blkid_probe_get_size@plt+0x26824>
   2da04:	mov	r2, #2654208	; 0x288000
   2da08:	add	r1, pc, r1
   2da0c:	mov	r0, r8
   2da10:	str	r7, [sp, #36]	; 0x24
   2da14:	bl	6ed0 <openat64@plt>
   2da18:	subs	r9, r0, #0
   2da1c:	blt	2dcdc <blkid_probe_get_size@plt+0x267c4>
   2da20:	mov	r0, r8
   2da24:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2da28:	mov	r8, r9
   2da2c:	mov	r7, #0
   2da30:	mov	r0, r7
   2da34:	bl	69f0 <free@plt>
   2da38:	mvn	r9, #0
   2da3c:	mov	r0, r9
   2da40:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2da44:	mov	r0, r4
   2da48:	bl	69f0 <free@plt>
   2da4c:	b	2d8bc <blkid_probe_get_size@plt+0x263a4>
   2da50:	add	r7, r4, r7
   2da54:	mov	r1, r7
   2da58:	mov	r2, #2654208	; 0x288000
   2da5c:	mov	r0, r8
   2da60:	bl	6ed0 <openat64@plt>
   2da64:	subs	r9, r0, #0
   2da68:	blt	2dc80 <blkid_probe_get_size@plt+0x26768>
   2da6c:	add	r2, sp, #48	; 0x30
   2da70:	mov	r1, r9
   2da74:	mov	r0, #3
   2da78:	bl	6c90 <__fxstat64@plt>
   2da7c:	cmp	r0, #0
   2da80:	blt	2dc80 <blkid_probe_get_size@plt+0x26768>
   2da84:	ldr	r3, [sp, #64]	; 0x40
   2da88:	and	r3, r3, #61440	; 0xf000
   2da8c:	cmp	r3, #40960	; 0xa000
   2da90:	beq	2db2c <blkid_probe_get_size@plt+0x26614>
   2da94:	ldr	r7, [sp, #36]	; 0x24
   2da98:	cmp	r7, #0
   2da9c:	streq	r4, [sp, #36]	; 0x24
   2daa0:	moveq	r4, r7
   2daa4:	beq	2dadc <blkid_probe_get_size@plt+0x265c4>
   2daa8:	mov	r1, r6
   2daac:	mov	r0, r7
   2dab0:	bl	7314 <strcmp@plt>
   2dab4:	mov	r2, r4
   2dab8:	cmp	r0, #0
   2dabc:	moveq	r3, #0
   2dac0:	strbeq	r3, [r7]
   2dac4:	mov	r3, #0
   2dac8:	mov	r1, r3
   2dacc:	add	r0, sp, #36	; 0x24
   2dad0:	bl	4a69c <blkid_probe_get_size@plt+0x43184>
   2dad4:	cmp	r0, #0
   2dad8:	beq	2dcd4 <blkid_probe_get_size@plt+0x267bc>
   2dadc:	mov	r0, r8
   2dae0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dae4:	mov	r0, r4
   2dae8:	bl	69f0 <free@plt>
   2daec:	mov	r8, r9
   2daf0:	b	2d8bc <blkid_probe_get_size@plt+0x263a4>
   2daf4:	mvn	r9, #0
   2daf8:	b	2da3c <blkid_probe_get_size@plt+0x26524>
   2dafc:	mov	r7, r9
   2db00:	b	2da30 <blkid_probe_get_size@plt+0x26518>
   2db04:	ldr	r2, [pc, #564]	; 2dd40 <blkid_probe_get_size@plt+0x26828>
   2db08:	ldr	r1, [pc, #564]	; 2dd44 <blkid_probe_get_size@plt+0x2682c>
   2db0c:	add	r2, pc, r2
   2db10:	add	r2, r2, #528	; 0x210
   2db14:	str	r2, [sp]
   2db18:	ldr	r2, [pc, #552]	; 2dd48 <blkid_probe_get_size@plt+0x26830>
   2db1c:	ldr	r3, [pc, #552]	; 2dd4c <blkid_probe_get_size@plt+0x26834>
   2db20:	add	r2, pc, r2
   2db24:	add	r1, pc, r1
   2db28:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2db2c:	ldr	r3, [sp, #24]
   2db30:	subs	r3, r3, #1
   2db34:	str	r3, [sp, #24]
   2db38:	mov	r3, #0
   2db3c:	str	r3, [sp, #44]	; 0x2c
   2db40:	beq	2dd04 <blkid_probe_get_size@plt+0x267ec>
   2db44:	mov	r1, r7
   2db48:	add	r2, sp, #44	; 0x2c
   2db4c:	mov	r0, r8
   2db50:	bl	2ce9c <blkid_probe_get_size@plt+0x25984>
   2db54:	cmp	r0, #0
   2db58:	blt	2dcf8 <blkid_probe_get_size@plt+0x267e0>
   2db5c:	ldr	r1, [sp, #44]	; 0x2c
   2db60:	cmp	r1, #0
   2db64:	beq	2db74 <blkid_probe_get_size@plt+0x2665c>
   2db68:	ldrb	r3, [r1]
   2db6c:	cmp	r3, #0
   2db70:	bne	2db94 <blkid_probe_get_size@plt+0x2667c>
   2db74:	mvn	r7, #21
   2db78:	mov	r0, r1
   2db7c:	bl	69f0 <free@plt>
   2db80:	mov	r0, r9
   2db84:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2db88:	mov	r0, r4
   2db8c:	bl	69f0 <free@plt>
   2db90:	b	2d80c <blkid_probe_get_size@plt+0x262f4>
   2db94:	cmp	r3, #47	; 0x2f
   2db98:	bne	2dc24 <blkid_probe_get_size@plt+0x2670c>
   2db9c:	mov	r0, r8
   2dba0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dba4:	ldr	r0, [sp, #32]
   2dba8:	cmp	r0, #0
   2dbac:	beq	2dc90 <blkid_probe_get_size@plt+0x26778>
   2dbb0:	mov	r1, #2654208	; 0x288000
   2dbb4:	bl	6ec4 <open64@plt>
   2dbb8:	subs	r8, r0, #0
   2dbbc:	blt	2dd10 <blkid_probe_get_size@plt+0x267f8>
   2dbc0:	ldr	r0, [sp, #36]	; 0x24
   2dbc4:	bl	69f0 <free@plt>
   2dbc8:	ldr	r0, [sp, #32]
   2dbcc:	cmp	r0, #0
   2dbd0:	beq	2dc40 <blkid_probe_get_size@plt+0x26728>
   2dbd4:	ldrb	r3, [r0]
   2dbd8:	cmp	r3, #0
   2dbdc:	beq	2dc40 <blkid_probe_get_size@plt+0x26728>
   2dbe0:	bl	74e8 <strdup@plt>
   2dbe4:	cmp	r0, #0
   2dbe8:	str	r0, [sp, #36]	; 0x24
   2dbec:	beq	2dcec <blkid_probe_get_size@plt+0x267d4>
   2dbf0:	mov	r1, r5
   2dbf4:	mov	r2, #0
   2dbf8:	ldr	r0, [sp, #44]	; 0x2c
   2dbfc:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   2dc00:	mov	r5, r0
   2dc04:	cmp	r5, #0
   2dc08:	beq	2dcec <blkid_probe_get_size@plt+0x267d4>
   2dc0c:	ldr	r0, [sp, #40]	; 0x28
   2dc10:	bl	69f0 <free@plt>
   2dc14:	ldr	r0, [sp, #44]	; 0x2c
   2dc18:	str	r5, [sp, #40]	; 0x28
   2dc1c:	bl	69f0 <free@plt>
   2dc20:	b	2da3c <blkid_probe_get_size@plt+0x26524>
   2dc24:	ldr	r0, [pc, #292]	; 2dd50 <blkid_probe_get_size@plt+0x26838>
   2dc28:	mov	r2, r5
   2dc2c:	mov	r3, #0
   2dc30:	add	r0, pc, r0
   2dc34:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   2dc38:	mov	r5, r0
   2dc3c:	b	2dc04 <blkid_probe_get_size@plt+0x266ec>
   2dc40:	mov	r3, #0
   2dc44:	str	r3, [sp, #36]	; 0x24
   2dc48:	b	2dbf0 <blkid_probe_get_size@plt+0x266d8>
   2dc4c:	ldr	r3, [sp, #16]
   2dc50:	cmp	r3, #0
   2dc54:	beq	2d900 <blkid_probe_get_size@plt+0x263e8>
   2dc58:	mov	r3, r0
   2dc5c:	mov	r1, r0
   2dc60:	mov	r2, r6
   2dc64:	add	r0, sp, #36	; 0x24
   2dc68:	bl	4a69c <blkid_probe_get_size@plt+0x43184>
   2dc6c:	cmp	r0, #0
   2dc70:	bne	2d900 <blkid_probe_get_size@plt+0x263e8>
   2dc74:	mvn	r9, #0
   2dc78:	mvn	r7, #11
   2dc7c:	b	2db80 <blkid_probe_get_size@plt+0x26668>
   2dc80:	bl	732c <__errno_location@plt>
   2dc84:	ldr	r7, [r0]
   2dc88:	rsb	r7, r7, #0
   2dc8c:	b	2db80 <blkid_probe_get_size@plt+0x26668>
   2dc90:	ldr	r0, [pc, #188]	; 2dd54 <blkid_probe_get_size@plt+0x2683c>
   2dc94:	add	r0, pc, r0
   2dc98:	b	2dbb0 <blkid_probe_get_size@plt+0x26698>
   2dc9c:	ldr	r0, [pc, #180]	; 2dd58 <blkid_probe_get_size@plt+0x26840>
   2dca0:	add	r0, pc, r0
   2dca4:	bl	74e8 <strdup@plt>
   2dca8:	cmp	r0, #0
   2dcac:	str	r0, [sp, #36]	; 0x24
   2dcb0:	mvneq	r7, #11
   2dcb4:	bne	2d91c <blkid_probe_get_size@plt+0x26404>
   2dcb8:	b	2d80c <blkid_probe_get_size@plt+0x262f4>
   2dcbc:	mvn	r9, #0
   2dcc0:	mvn	r7, #11
   2dcc4:	mov	r0, r9
   2dcc8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dccc:	mvn	r9, #0
   2dcd0:	b	2db80 <blkid_probe_get_size@plt+0x26668>
   2dcd4:	mvn	r7, #11
   2dcd8:	b	2db80 <blkid_probe_get_size@plt+0x26668>
   2dcdc:	bl	732c <__errno_location@plt>
   2dce0:	ldr	r7, [r0]
   2dce4:	rsb	r7, r7, #0
   2dce8:	b	2dcc4 <blkid_probe_get_size@plt+0x267ac>
   2dcec:	ldr	r1, [sp, #44]	; 0x2c
   2dcf0:	mvn	r7, #11
   2dcf4:	b	2db78 <blkid_probe_get_size@plt+0x26660>
   2dcf8:	mov	r7, r0
   2dcfc:	ldr	r1, [sp, #44]	; 0x2c
   2dd00:	b	2db78 <blkid_probe_get_size@plt+0x26660>
   2dd04:	ldr	r1, [sp, #24]
   2dd08:	mvn	r7, #39	; 0x27
   2dd0c:	b	2db78 <blkid_probe_get_size@plt+0x26660>
   2dd10:	bl	732c <__errno_location@plt>
   2dd14:	ldr	r1, [sp, #44]	; 0x2c
   2dd18:	ldr	r7, [r0]
   2dd1c:	rsb	r7, r7, #0
   2dd20:	b	2db78 <blkid_probe_get_size@plt+0x26660>
   2dd24:	bl	6fb4 <__stack_chk_fail@plt>
   2dd28:			; <UNDEFINED> instruction: 0x0006a3b4
   2dd2c:	andeq	r0, r0, ip, lsr r4
   2dd30:	andeq	sl, r4, r8, lsr r7
   2dd34:			; <UNDEFINED> instruction: 0x0003e6b8
   2dd38:	andeq	pc, r3, ip, lsl #29
   2dd3c:	andeq	pc, r3, r0, lsr sp	; <UNPREDICTABLE>
   2dd40:	andeq	lr, r3, ip, ror #25
   2dd44:	strdeq	sp, [r3], -r0
   2dd48:			; <UNDEFINED> instruction: 0x0003c6b8
   2dd4c:	andeq	r0, r0, sl, asr #5
   2dd50:	muleq	r4, r0, r3
   2dd54:	andeq	sl, r4, ip, lsr #6
   2dd58:	andeq	sl, r4, r0, lsr #6
   2dd5c:	push	{r4, lr}
   2dd60:	mov	r4, r0
   2dd64:	ldr	r0, [r0]
   2dd68:	ldr	r3, [r4, #4]
   2dd6c:	cmp	r0, r3
   2dd70:	beq	2dd8c <blkid_probe_get_size@plt+0x26874>
   2dd74:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dd78:	str	r0, [r4]
   2dd7c:	ldr	r0, [r4, #4]
   2dd80:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dd84:	str	r0, [r4, #4]
   2dd88:	pop	{r4, pc}
   2dd8c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2dd90:	str	r0, [r4, #4]
   2dd94:	str	r0, [r4]
   2dd98:	pop	{r4, pc}
   2dd9c:	subs	r3, r0, #0
   2dda0:	push	{r4, lr}
   2dda4:	sub	sp, sp, #8
   2dda8:	beq	2dde4 <blkid_probe_get_size@plt+0x268cc>
   2ddac:	cmp	r1, #0
   2ddb0:	mov	r4, r1
   2ddb4:	beq	2dddc <blkid_probe_get_size@plt+0x268c4>
   2ddb8:	ldr	r0, [r3, #196]	; 0xc4
   2ddbc:	add	r1, r1, #8
   2ddc0:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   2ddc4:	ldr	r0, [r4, #4]
   2ddc8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2ddcc:	mov	r0, r4
   2ddd0:	add	sp, sp, #8
   2ddd4:	pop	{r4, lr}
   2ddd8:	b	69f0 <free@plt>
   2dddc:	add	sp, sp, #8
   2dde0:	pop	{r4, pc}
   2dde4:	ldr	r2, [pc, #32]	; 2de0c <blkid_probe_get_size@plt+0x268f4>
   2dde8:	ldr	r1, [pc, #32]	; 2de10 <blkid_probe_get_size@plt+0x268f8>
   2ddec:	add	r2, pc, r2
   2ddf0:	add	r2, r2, #544	; 0x220
   2ddf4:	str	r2, [sp]
   2ddf8:	ldr	r2, [pc, #20]	; 2de14 <blkid_probe_get_size@plt+0x268fc>
   2ddfc:	ldr	r3, [pc, #20]	; 2de18 <blkid_probe_get_size@plt+0x26900>
   2de00:	add	r2, pc, r2
   2de04:	add	r1, pc, r1
   2de08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2de0c:	andeq	lr, r3, ip, lsl #20
   2de10:	andeq	r6, r4, ip, ror #16
   2de14:			; <UNDEFINED> instruction: 0x0003f6bc
   2de18:	ldrdeq	r0, [r0], -sl
   2de1c:	push	{r4, r5, r6, r7, lr}
   2de20:	subs	r7, r0, #0
   2de24:	sub	sp, sp, #12
   2de28:	beq	2df08 <blkid_probe_get_size@plt+0x269f0>
   2de2c:	cmp	r1, #0
   2de30:	mov	r4, r1
   2de34:	beq	2df30 <blkid_probe_get_size@plt+0x26a18>
   2de38:	add	r5, r1, #16
   2de3c:	mov	r0, r5
   2de40:	mov	r1, r2
   2de44:	mov	r6, r2
   2de48:	bl	72b4 <sigismember@plt>
   2de4c:	cmp	r0, #0
   2de50:	bne	2de5c <blkid_probe_get_size@plt+0x26944>
   2de54:	add	sp, sp, #12
   2de58:	pop	{r4, r5, r6, r7, pc}
   2de5c:	mov	r1, r6
   2de60:	mov	r0, r5
   2de64:	bl	7014 <sigdelset@plt>
   2de68:	cmp	r0, #0
   2de6c:	blt	2df5c <blkid_probe_get_size@plt+0x26a44>
   2de70:	mov	r0, r5
   2de74:	bl	7074 <sigisemptyset@plt>
   2de78:	cmp	r0, #0
   2de7c:	bne	2def4 <blkid_probe_get_size@plt+0x269dc>
   2de80:	ldr	r3, [r4, #4]
   2de84:	cmp	r3, #0
   2de88:	blt	2df88 <blkid_probe_get_size@plt+0x26a70>
   2de8c:	mov	r1, r5
   2de90:	mov	r0, r3
   2de94:	ldr	r2, [pc, #276]	; 2dfb0 <blkid_probe_get_size@plt+0x26a98>
   2de98:	bl	6b34 <signalfd@plt>
   2de9c:	cmp	r0, #0
   2dea0:	bge	2de54 <blkid_probe_get_size@plt+0x2693c>
   2dea4:	bl	732c <__errno_location@plt>
   2dea8:	ldr	r3, [pc, #260]	; 2dfb4 <blkid_probe_get_size@plt+0x26a9c>
   2deac:	add	r3, pc, r3
   2deb0:	ldr	r3, [r3]
   2deb4:	cmp	r3, #6
   2deb8:	ble	2de54 <blkid_probe_get_size@plt+0x2693c>
   2debc:	ldr	r2, [pc, #244]	; 2dfb8 <blkid_probe_get_size@plt+0x26aa0>
   2dec0:	ldr	r3, [pc, #244]	; 2dfbc <blkid_probe_get_size@plt+0x26aa4>
   2dec4:	add	r2, pc, r2
   2dec8:	ldr	r1, [r0]
   2decc:	add	r3, pc, r3
   2ded0:	str	r2, [sp, #4]
   2ded4:	ldr	r2, [pc, #228]	; 2dfc0 <blkid_probe_get_size@plt+0x26aa8>
   2ded8:	add	r3, r3, #596	; 0x254
   2dedc:	str	r3, [sp]
   2dee0:	add	r2, pc, r2
   2dee4:	ldr	r3, [pc, #216]	; 2dfc4 <blkid_probe_get_size@plt+0x26aac>
   2dee8:	mov	r0, #7
   2deec:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2def0:	b	2de54 <blkid_probe_get_size@plt+0x2693c>
   2def4:	mov	r1, r4
   2def8:	mov	r0, r7
   2defc:	add	sp, sp, #12
   2df00:	pop	{r4, r5, r6, r7, lr}
   2df04:	b	2dd9c <blkid_probe_get_size@plt+0x26884>
   2df08:	ldr	r2, [pc, #184]	; 2dfc8 <blkid_probe_get_size@plt+0x26ab0>
   2df0c:	ldr	r1, [pc, #184]	; 2dfcc <blkid_probe_get_size@plt+0x26ab4>
   2df10:	add	r2, pc, r2
   2df14:	add	r2, r2, #568	; 0x238
   2df18:	str	r2, [sp]
   2df1c:	ldr	r2, [pc, #172]	; 2dfd0 <blkid_probe_get_size@plt+0x26ab8>
   2df20:	mov	r3, #580	; 0x244
   2df24:	add	r2, pc, r2
   2df28:	add	r1, pc, r1
   2df2c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2df30:	ldr	r3, [pc, #156]	; 2dfd4 <blkid_probe_get_size@plt+0x26abc>
   2df34:	mov	r0, r1
   2df38:	add	r3, pc, r3
   2df3c:	ldr	r2, [pc, #148]	; 2dfd8 <blkid_probe_get_size@plt+0x26ac0>
   2df40:	ldr	r1, [pc, #148]	; 2dfdc <blkid_probe_get_size@plt+0x26ac4>
   2df44:	add	r3, r3, #568	; 0x238
   2df48:	str	r3, [sp]
   2df4c:	add	r2, pc, r2
   2df50:	ldr	r3, [pc, #136]	; 2dfe0 <blkid_probe_get_size@plt+0x26ac8>
   2df54:	add	r1, pc, r1
   2df58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2df5c:	ldr	r2, [pc, #128]	; 2dfe4 <blkid_probe_get_size@plt+0x26acc>
   2df60:	ldr	r1, [pc, #128]	; 2dfe8 <blkid_probe_get_size@plt+0x26ad0>
   2df64:	add	r2, pc, r2
   2df68:	add	r2, r2, #568	; 0x238
   2df6c:	str	r2, [sp]
   2df70:	ldr	r2, [pc, #116]	; 2dfec <blkid_probe_get_size@plt+0x26ad4>
   2df74:	ldr	r3, [pc, #116]	; 2dff0 <blkid_probe_get_size@plt+0x26ad8>
   2df78:	add	r2, pc, r2
   2df7c:	add	r1, pc, r1
   2df80:	mov	r0, #0
   2df84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2df88:	ldr	r2, [pc, #100]	; 2dff4 <blkid_probe_get_size@plt+0x26adc>
   2df8c:	ldr	r1, [pc, #100]	; 2dff8 <blkid_probe_get_size@plt+0x26ae0>
   2df90:	add	r2, pc, r2
   2df94:	add	r2, r2, #568	; 0x238
   2df98:	str	r2, [sp]
   2df9c:	ldr	r2, [pc, #88]	; 2dffc <blkid_probe_get_size@plt+0x26ae4>
   2dfa0:	ldr	r3, [pc, #88]	; 2e000 <blkid_probe_get_size@plt+0x26ae8>
   2dfa4:	add	r2, pc, r2
   2dfa8:	add	r1, pc, r1
   2dfac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2dfb0:	andeq	r0, r8, r0, lsl #16
   2dfb4:	muleq	r6, r0, r2
   2dfb8:	andeq	pc, r3, r4, lsr #17
   2dfbc:	andeq	lr, r3, ip, lsr #18
   2dfc0:	ldrdeq	pc, [r3], -ip
   2dfc4:	andeq	r0, r0, r9, asr r2
   2dfc8:	andeq	lr, r3, r8, ror #17
   2dfcc:	andeq	r6, r4, r8, asr #14
   2dfd0:	muleq	r3, r8, r5
   2dfd4:	andeq	lr, r3, r0, asr #17
   2dfd8:	andeq	pc, r3, r0, ror r5	; <UNPREDICTABLE>
   2dfdc:	andeq	sp, r3, r4, lsl r1
   2dfe0:	andeq	r0, r0, r5, asr #4
   2dfe4:	muleq	r3, r4, r8
   2dfe8:	andeq	pc, r3, r0, asr #15
   2dfec:	andeq	pc, r3, r4, asr #10
   2dff0:	andeq	r0, r0, lr, asr #4
   2dff4:	andeq	lr, r3, r8, ror #16
   2dff8:			; <UNDEFINED> instruction: 0x0003f7b4
   2dffc:	andeq	pc, r3, r8, lsl r5	; <UNPREDICTABLE>
   2e000:	andeq	r0, r0, r6, asr r2
   2e004:	push	{r4, lr}
   2e008:	subs	r4, r0, #0
   2e00c:	sub	sp, sp, #8
   2e010:	beq	2e040 <blkid_probe_get_size@plt+0x26b28>
   2e014:	ldr	r3, [r4]
   2e018:	cmp	r3, #2
   2e01c:	bne	2e068 <blkid_probe_get_size@plt+0x26b50>
   2e020:	ldr	r0, [r4, #4]
   2e024:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   2e028:	ldr	r0, [r4, #8]
   2e02c:	bl	39bac <blkid_probe_get_size@plt+0x32694>
   2e030:	ldr	r0, [r4, #12]
   2e034:	add	sp, sp, #8
   2e038:	pop	{r4, lr}
   2e03c:	b	39bac <blkid_probe_get_size@plt+0x32694>
   2e040:	ldr	r2, [pc, #76]	; 2e094 <blkid_probe_get_size@plt+0x26b7c>
   2e044:	ldr	r1, [pc, #76]	; 2e098 <blkid_probe_get_size@plt+0x26b80>
   2e048:	add	r2, pc, r2
   2e04c:	add	r2, r2, #624	; 0x270
   2e050:	str	r2, [sp]
   2e054:	ldr	r2, [pc, #64]	; 2e09c <blkid_probe_get_size@plt+0x26b84>
   2e058:	mov	r3, #234	; 0xea
   2e05c:	add	r2, pc, r2
   2e060:	add	r1, pc, r1
   2e064:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2e068:	ldr	r2, [pc, #48]	; 2e0a0 <blkid_probe_get_size@plt+0x26b88>
   2e06c:	ldr	r1, [pc, #48]	; 2e0a4 <blkid_probe_get_size@plt+0x26b8c>
   2e070:	add	r2, pc, r2
   2e074:	add	r2, r2, #624	; 0x270
   2e078:	str	r2, [sp]
   2e07c:	ldr	r2, [pc, #36]	; 2e0a8 <blkid_probe_get_size@plt+0x26b90>
   2e080:	mov	r3, #235	; 0xeb
   2e084:	add	r2, pc, r2
   2e088:	add	r1, pc, r1
   2e08c:	mov	r0, #0
   2e090:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2e094:			; <UNDEFINED> instruction: 0x0003e7b0
   2e098:	andeq	sp, r3, r8
   2e09c:	andeq	pc, r3, r0, ror #8
   2e0a0:	andeq	lr, r3, r8, lsl #15
   2e0a4:	andeq	pc, r3, ip, lsl #14
   2e0a8:	andeq	pc, r3, r8, lsr r4	; <UNPREDICTABLE>
   2e0ac:	push	{r4, lr}
   2e0b0:	bl	7464 <getenv@plt>
   2e0b4:	cmp	r0, #0
   2e0b8:	beq	2e0c4 <blkid_probe_get_size@plt+0x26bac>
   2e0bc:	pop	{r4, lr}
   2e0c0:	b	39d54 <blkid_probe_get_size@plt+0x3283c>
   2e0c4:	mvn	r0, #5
   2e0c8:	pop	{r4, pc}
   2e0cc:	ldr	ip, [pc, #532]	; 2e2e8 <blkid_probe_get_size@plt+0x26dd0>
   2e0d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0d4:	add	ip, pc, ip
   2e0d8:	ldr	lr, [pc, #524]	; 2e2ec <blkid_probe_get_size@plt+0x26dd4>
   2e0dc:	sub	sp, sp, #44	; 0x2c
   2e0e0:	mov	r5, r2
   2e0e4:	ldr	r7, [ip, lr]
   2e0e8:	mov	sl, r1
   2e0ec:	mov	r9, r0
   2e0f0:	ldr	r1, [r7]
   2e0f4:	mov	r0, r5
   2e0f8:	mov	r2, ip
   2e0fc:	mov	r6, r3
   2e100:	str	r1, [sp, #36]	; 0x24
   2e104:	bl	3c41c <blkid_probe_get_size@plt+0x34f04>
   2e108:	ldr	r4, [sp, #80]	; 0x50
   2e10c:	ldr	r8, [sp, #84]	; 0x54
   2e110:	cmp	r0, #0
   2e114:	beq	2e24c <blkid_probe_get_size@plt+0x26d34>
   2e118:	cmp	r6, #0
   2e11c:	beq	2e130 <blkid_probe_get_size@plt+0x26c18>
   2e120:	mov	r0, r6
   2e124:	bl	3c41c <blkid_probe_get_size@plt+0x34f04>
   2e128:	cmp	r0, #0
   2e12c:	beq	2e1c8 <blkid_probe_get_size@plt+0x26cb0>
   2e130:	ldr	sl, [r4]
   2e134:	add	r4, sl, #4
   2e138:	b	2e15c <blkid_probe_get_size@plt+0x26c44>
   2e13c:	add	r9, sl, #8
   2e140:	mov	r0, r5
   2e144:	str	r9, [sp, #32]
   2e148:	bl	7314 <strcmp@plt>
   2e14c:	add	r4, r4, #8
   2e150:	cmp	r0, #0
   2e154:	beq	2e19c <blkid_probe_get_size@plt+0x26c84>
   2e158:	mov	sl, r9
   2e15c:	str	r4, [sp, #32]
   2e160:	ldr	r1, [r4, #-4]
   2e164:	cmp	r1, #0
   2e168:	bne	2e13c <blkid_probe_get_size@plt+0x26c24>
   2e16c:	mov	r0, r6
   2e170:	str	r1, [sp, #28]
   2e174:	bl	69f0 <free@plt>
   2e178:	ldr	r1, [sp, #28]
   2e17c:	mov	r9, r1
   2e180:	ldr	r2, [sp, #36]	; 0x24
   2e184:	ldr	r3, [r7]
   2e188:	mov	r0, r9
   2e18c:	cmp	r2, r3
   2e190:	bne	2e2e4 <blkid_probe_get_size@plt+0x26dcc>
   2e194:	add	sp, sp, #44	; 0x2c
   2e198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e19c:	ldr	r4, [sl, #4]
   2e1a0:	ldr	r0, [r4]
   2e1a4:	bl	69f0 <free@plt>
   2e1a8:	cmp	r8, #0
   2e1ac:	str	r6, [r4]
   2e1b0:	moveq	r9, #1
   2e1b4:	ldrne	r3, [r8]
   2e1b8:	movne	r9, #1
   2e1bc:	addne	r3, r3, r9
   2e1c0:	strne	r3, [r8]
   2e1c4:	b	2e180 <blkid_probe_get_size@plt+0x26c68>
   2e1c8:	mov	r0, r6
   2e1cc:	bl	3c350 <blkid_probe_get_size@plt+0x34e38>
   2e1d0:	ldr	r3, [pc, #280]	; 2e2f0 <blkid_probe_get_size@plt+0x26dd8>
   2e1d4:	add	r3, pc, r3
   2e1d8:	ldr	r3, [r3]
   2e1dc:	cmp	r3, #2
   2e1e0:	mov	fp, r0
   2e1e4:	ble	2e2c0 <blkid_probe_get_size@plt+0x26da8>
   2e1e8:	cmp	r9, #0
   2e1ec:	beq	2e2cc <blkid_probe_get_size@plt+0x26db4>
   2e1f0:	ldr	r2, [pc, #252]	; 2e2f4 <blkid_probe_get_size@plt+0x26ddc>
   2e1f4:	ldr	r3, [pc, #252]	; 2e2f8 <blkid_probe_get_size@plt+0x26de0>
   2e1f8:	add	r2, pc, r2
   2e1fc:	str	r2, [sp, #4]
   2e200:	add	r3, pc, r3
   2e204:	ldr	r2, [pc, #240]	; 2e2fc <blkid_probe_get_size@plt+0x26de4>
   2e208:	add	r3, r3, #640	; 0x280
   2e20c:	str	r9, [sp, #8]
   2e210:	str	r3, [sp]
   2e214:	str	fp, [sp, #20]
   2e218:	str	r5, [sp, #16]
   2e21c:	str	sl, [sp, #12]
   2e220:	mov	r3, #292	; 0x124
   2e224:	add	r2, pc, r2
   2e228:	mov	r1, #1073741846	; 0x40000016
   2e22c:	mov	r0, #3
   2e230:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e234:	mov	r9, r0
   2e238:	mov	r0, fp
   2e23c:	bl	69f0 <free@plt>
   2e240:	cmp	r9, #0
   2e244:	blt	2e180 <blkid_probe_get_size@plt+0x26c68>
   2e248:	b	2e130 <blkid_probe_get_size@plt+0x26c18>
   2e24c:	mov	r0, r5
   2e250:	bl	3c350 <blkid_probe_get_size@plt+0x34e38>
   2e254:	ldr	r3, [pc, #164]	; 2e300 <blkid_probe_get_size@plt+0x26de8>
   2e258:	add	r3, pc, r3
   2e25c:	ldr	r3, [r3]
   2e260:	cmp	r3, #2
   2e264:	mov	fp, r0
   2e268:	ble	2e2c0 <blkid_probe_get_size@plt+0x26da8>
   2e26c:	cmp	r9, #0
   2e270:	beq	2e2d8 <blkid_probe_get_size@plt+0x26dc0>
   2e274:	ldr	r2, [pc, #136]	; 2e304 <blkid_probe_get_size@plt+0x26dec>
   2e278:	ldr	r3, [pc, #136]	; 2e308 <blkid_probe_get_size@plt+0x26df0>
   2e27c:	add	r2, pc, r2
   2e280:	str	r2, [sp, #4]
   2e284:	add	r3, pc, r3
   2e288:	ldr	r2, [pc, #124]	; 2e30c <blkid_probe_get_size@plt+0x26df4>
   2e28c:	add	r3, r3, #640	; 0x280
   2e290:	str	r9, [sp, #8]
   2e294:	str	r3, [sp]
   2e298:	strd	sl, [sp, #12]
   2e29c:	ldr	r3, [pc, #108]	; 2e310 <blkid_probe_get_size@plt+0x26df8>
   2e2a0:	add	r2, pc, r2
   2e2a4:	mov	r1, #1073741846	; 0x40000016
   2e2a8:	mov	r0, #3
   2e2ac:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e2b0:	mov	r9, r0
   2e2b4:	mov	r0, fp
   2e2b8:	bl	69f0 <free@plt>
   2e2bc:	b	2e240 <blkid_probe_get_size@plt+0x26d28>
   2e2c0:	bl	69f0 <free@plt>
   2e2c4:	mvn	r9, #21
   2e2c8:	b	2e180 <blkid_probe_get_size@plt+0x26c68>
   2e2cc:	ldr	r9, [pc, #64]	; 2e314 <blkid_probe_get_size@plt+0x26dfc>
   2e2d0:	add	r9, pc, r9
   2e2d4:	b	2e1f0 <blkid_probe_get_size@plt+0x26cd8>
   2e2d8:	ldr	r9, [pc, #56]	; 2e318 <blkid_probe_get_size@plt+0x26e00>
   2e2dc:	add	r9, pc, r9
   2e2e0:	b	2e274 <blkid_probe_get_size@plt+0x26d5c>
   2e2e4:	bl	6fb4 <__stack_chk_fail@plt>
   2e2e8:	muleq	r6, r4, sl
   2e2ec:	andeq	r0, r0, ip, lsr r4
   2e2f0:	andeq	r9, r6, r8, ror #30
   2e2f4:	andeq	pc, r3, r4, lsl #12
   2e2f8:	strdeq	lr, [r3], -r8
   2e2fc:	muleq	r3, r4, r5
   2e300:	andeq	r9, r6, r4, ror #29
   2e304:	andeq	pc, r3, r4, asr r5	; <UNPREDICTABLE>
   2e308:	andeq	lr, r3, r4, ror r5
   2e30c:	andeq	pc, r3, r8, lsl r5	; <UNPREDICTABLE>
   2e310:	andeq	r0, r0, fp, lsl r1
   2e314:	andeq	pc, r3, r4, ror #9
   2e318:	ldrdeq	pc, [r3], -r8
   2e31c:	ldr	r2, [pc, #44]	; 2e350 <blkid_probe_get_size@plt+0x26e38>
   2e320:	push	{lr}		; (str lr, [sp, #-4]!)
   2e324:	add	r2, pc, r2
   2e328:	sub	sp, sp, #12
   2e32c:	add	r2, r2, #664	; 0x298
   2e330:	str	r2, [sp]
   2e334:	ldr	r1, [pc, #24]	; 2e354 <blkid_probe_get_size@plt+0x26e3c>
   2e338:	ldr	r2, [pc, #24]	; 2e358 <blkid_probe_get_size@plt+0x26e40>
   2e33c:	ldr	r3, [pc, #24]	; 2e35c <blkid_probe_get_size@plt+0x26e44>
   2e340:	add	r2, pc, r2
   2e344:	add	r1, pc, r1
   2e348:	mov	r0, #0
   2e34c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2e350:	ldrdeq	lr, [r3], -r4
   2e354:			; <UNDEFINED> instruction: 0x000463b4
   2e358:	andeq	ip, r3, r4, lsr #7
   2e35c:	andeq	r0, r0, r2, ror #14
   2e360:	ldr	r3, [pc, #976]	; 2e738 <blkid_probe_get_size@plt+0x27220>
   2e364:	ldr	r2, [pc, #976]	; 2e73c <blkid_probe_get_size@plt+0x27224>
   2e368:	add	r3, pc, r3
   2e36c:	push	{r4, r5, r6, r7, lr}
   2e370:	sub	sp, sp, #116	; 0x74
   2e374:	ldr	r5, [r3, r2]
   2e378:	ldr	r0, [pc, #960]	; 2e740 <blkid_probe_get_size@plt+0x27228>
   2e37c:	add	r6, sp, #16
   2e380:	ldr	r3, [r5]
   2e384:	mov	r1, r6
   2e388:	add	r0, pc, r0
   2e38c:	str	r3, [sp, #108]	; 0x6c
   2e390:	bl	6ce4 <statfs64@plt>
   2e394:	cmp	r0, #0
   2e398:	blt	2e45c <blkid_probe_get_size@plt+0x26f44>
   2e39c:	ldr	r2, [sp, #16]
   2e3a0:	ldr	r7, [pc, #924]	; 2e744 <blkid_probe_get_size@plt+0x2722c>
   2e3a4:	cmp	r2, r7
   2e3a8:	beq	2e428 <blkid_probe_get_size@plt+0x26f10>
   2e3ac:	ldr	r3, [pc, #916]	; 2e748 <blkid_probe_get_size@plt+0x27230>
   2e3b0:	cmp	r2, r3
   2e3b4:	beq	2e4fc <blkid_probe_get_size@plt+0x26fe4>
   2e3b8:	ldr	r3, [pc, #908]	; 2e74c <blkid_probe_get_size@plt+0x27234>
   2e3bc:	add	r3, pc, r3
   2e3c0:	ldr	r3, [r3]
   2e3c4:	cmp	r3, #6
   2e3c8:	ble	2e6ec <blkid_probe_get_size@plt+0x271d4>
   2e3cc:	asr	r3, r2, #31
   2e3d0:	ldr	r1, [pc, #888]	; 2e750 <blkid_probe_get_size@plt+0x27238>
   2e3d4:	ldr	r0, [pc, #888]	; 2e754 <blkid_probe_get_size@plt+0x2723c>
   2e3d8:	strd	r2, [sp, #8]
   2e3dc:	add	r1, pc, r1
   2e3e0:	ldr	r2, [pc, #880]	; 2e758 <blkid_probe_get_size@plt+0x27240>
   2e3e4:	add	r0, pc, r0
   2e3e8:	add	r1, r1, #676	; 0x2a4
   2e3ec:	str	r1, [sp]
   2e3f0:	str	r0, [sp, #4]
   2e3f4:	ldr	r3, [pc, #864]	; 2e75c <blkid_probe_get_size@plt+0x27244>
   2e3f8:	add	r2, pc, r2
   2e3fc:	ldr	r1, [pc, #860]	; 2e760 <blkid_probe_get_size@plt+0x27248>
   2e400:	mov	r0, #7
   2e404:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e408:	mov	r4, r0
   2e40c:	ldr	r2, [sp, #108]	; 0x6c
   2e410:	ldr	r3, [r5]
   2e414:	mov	r0, r4
   2e418:	cmp	r2, r3
   2e41c:	bne	2e734 <blkid_probe_get_size@plt+0x2721c>
   2e420:	add	sp, sp, #116	; 0x74
   2e424:	pop	{r4, r5, r6, r7, pc}
   2e428:	ldr	r3, [pc, #820]	; 2e764 <blkid_probe_get_size@plt+0x2724c>
   2e42c:	add	r3, pc, r3
   2e430:	ldr	r3, [r3]
   2e434:	cmp	r3, #6
   2e438:	bgt	2e48c <blkid_probe_get_size@plt+0x26f74>
   2e43c:	ldr	r0, [pc, #804]	; 2e768 <blkid_probe_get_size@plt+0x27250>
   2e440:	mov	r4, #0
   2e444:	add	r0, pc, r0
   2e448:	bl	74dc <__tls_get_addr@plt>
   2e44c:	ldr	r3, [pc, #792]	; 2e76c <blkid_probe_get_size@plt+0x27254>
   2e450:	mov	r2, #2
   2e454:	str	r2, [r3, r0]
   2e458:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e45c:	bl	732c <__errno_location@plt>
   2e460:	ldr	r3, [pc, #776]	; 2e770 <blkid_probe_get_size@plt+0x27258>
   2e464:	add	r3, pc, r3
   2e468:	ldr	r3, [r3]
   2e46c:	cmp	r3, #6
   2e470:	ldr	r1, [r0]
   2e474:	bgt	2e4c4 <blkid_probe_get_size@plt+0x26fac>
   2e478:	eor	r4, r1, r1, asr #31
   2e47c:	sub	r4, r4, r1, asr #31
   2e480:	uxtb	r4, r4
   2e484:	rsb	r4, r4, #0
   2e488:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e48c:	ldr	r2, [pc, #736]	; 2e774 <blkid_probe_get_size@plt+0x2725c>
   2e490:	ldr	r3, [pc, #736]	; 2e778 <blkid_probe_get_size@plt+0x27260>
   2e494:	add	r2, pc, r2
   2e498:	str	r2, [sp, #4]
   2e49c:	add	r3, pc, r3
   2e4a0:	ldr	r2, [pc, #724]	; 2e77c <blkid_probe_get_size@plt+0x27264>
   2e4a4:	add	r3, r3, #676	; 0x2a4
   2e4a8:	str	r3, [sp]
   2e4ac:	add	r2, pc, r2
   2e4b0:	ldr	r3, [pc, #712]	; 2e780 <blkid_probe_get_size@plt+0x27268>
   2e4b4:	mov	r1, #0
   2e4b8:	mov	r0, #7
   2e4bc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e4c0:	b	2e43c <blkid_probe_get_size@plt+0x26f24>
   2e4c4:	ldr	r2, [pc, #696]	; 2e784 <blkid_probe_get_size@plt+0x2726c>
   2e4c8:	ldr	r3, [pc, #696]	; 2e788 <blkid_probe_get_size@plt+0x27270>
   2e4cc:	add	r2, pc, r2
   2e4d0:	str	r2, [sp, #4]
   2e4d4:	add	r3, pc, r3
   2e4d8:	ldr	r2, [pc, #684]	; 2e78c <blkid_probe_get_size@plt+0x27274>
   2e4dc:	add	r3, r3, #676	; 0x2a4
   2e4e0:	str	r3, [sp]
   2e4e4:	add	r2, pc, r2
   2e4e8:	ldr	r3, [pc, #672]	; 2e790 <blkid_probe_get_size@plt+0x27278>
   2e4ec:	mov	r0, #7
   2e4f0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e4f4:	mov	r4, r0
   2e4f8:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e4fc:	ldr	r0, [pc, #656]	; 2e794 <blkid_probe_get_size@plt+0x2727c>
   2e500:	mov	r1, r6
   2e504:	add	r0, pc, r0
   2e508:	bl	6ce4 <statfs64@plt>
   2e50c:	subs	r4, r0, #0
   2e510:	bne	2e520 <blkid_probe_get_size@plt+0x27008>
   2e514:	ldr	r3, [sp, #16]
   2e518:	cmp	r3, r7
   2e51c:	beq	2e618 <blkid_probe_get_size@plt+0x27100>
   2e520:	ldr	r0, [pc, #624]	; 2e798 <blkid_probe_get_size@plt+0x27280>
   2e524:	mov	r1, r6
   2e528:	add	r0, pc, r0
   2e52c:	bl	6ce4 <statfs64@plt>
   2e530:	cmp	r0, #0
   2e534:	blt	2e5c4 <blkid_probe_get_size@plt+0x270ac>
   2e538:	ldr	r3, [pc, #604]	; 2e79c <blkid_probe_get_size@plt+0x27284>
   2e53c:	ldr	r2, [sp, #16]
   2e540:	ldr	r1, [pc, #508]	; 2e744 <blkid_probe_get_size@plt+0x2722c>
   2e544:	add	r3, pc, r3
   2e548:	cmp	r2, r1
   2e54c:	ldr	r3, [r3]
   2e550:	beq	2e688 <blkid_probe_get_size@plt+0x27170>
   2e554:	ldr	r1, [pc, #580]	; 2e7a0 <blkid_probe_get_size@plt+0x27288>
   2e558:	cmp	r2, r1
   2e55c:	beq	2e6f4 <blkid_probe_get_size@plt+0x271dc>
   2e560:	cmp	r3, #6
   2e564:	ble	2e5a4 <blkid_probe_get_size@plt+0x2708c>
   2e568:	asr	r3, r2, #31
   2e56c:	ldr	r1, [pc, #560]	; 2e7a4 <blkid_probe_get_size@plt+0x2728c>
   2e570:	ldr	r0, [pc, #560]	; 2e7a8 <blkid_probe_get_size@plt+0x27290>
   2e574:	strd	r2, [sp, #8]
   2e578:	add	r1, pc, r1
   2e57c:	ldr	r2, [pc, #552]	; 2e7ac <blkid_probe_get_size@plt+0x27294>
   2e580:	add	r0, pc, r0
   2e584:	add	r1, r1, #676	; 0x2a4
   2e588:	str	r1, [sp]
   2e58c:	str	r0, [sp, #4]
   2e590:	ldr	r3, [pc, #536]	; 2e7b0 <blkid_probe_get_size@plt+0x27298>
   2e594:	add	r2, pc, r2
   2e598:	mov	r1, #0
   2e59c:	mov	r0, #7
   2e5a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e5a4:	ldr	r0, [pc, #520]	; 2e7b4 <blkid_probe_get_size@plt+0x2729c>
   2e5a8:	add	r0, pc, r0
   2e5ac:	bl	74dc <__tls_get_addr@plt>
   2e5b0:	ldr	r2, [pc, #436]	; 2e76c <blkid_probe_get_size@plt+0x27254>
   2e5b4:	mov	r3, #0
   2e5b8:	mov	r4, r3
   2e5bc:	str	r3, [r0, r2]
   2e5c0:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e5c4:	bl	732c <__errno_location@plt>
   2e5c8:	ldr	r3, [pc, #488]	; 2e7b8 <blkid_probe_get_size@plt+0x272a0>
   2e5cc:	add	r3, pc, r3
   2e5d0:	ldr	r3, [r3]
   2e5d4:	cmp	r3, #6
   2e5d8:	ldr	r1, [r0]
   2e5dc:	ble	2e478 <blkid_probe_get_size@plt+0x26f60>
   2e5e0:	ldr	r2, [pc, #468]	; 2e7bc <blkid_probe_get_size@plt+0x272a4>
   2e5e4:	ldr	r3, [pc, #468]	; 2e7c0 <blkid_probe_get_size@plt+0x272a8>
   2e5e8:	add	r2, pc, r2
   2e5ec:	str	r2, [sp, #4]
   2e5f0:	add	r3, pc, r3
   2e5f4:	ldr	r2, [pc, #456]	; 2e7c4 <blkid_probe_get_size@plt+0x272ac>
   2e5f8:	add	r3, r3, #676	; 0x2a4
   2e5fc:	str	r3, [sp]
   2e600:	add	r2, pc, r2
   2e604:	ldr	r3, [pc, #444]	; 2e7c8 <blkid_probe_get_size@plt+0x272b0>
   2e608:	mov	r0, #7
   2e60c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e610:	mov	r4, r0
   2e614:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e618:	ldr	r3, [pc, #428]	; 2e7cc <blkid_probe_get_size@plt+0x272b4>
   2e61c:	add	r3, pc, r3
   2e620:	ldr	r3, [r3]
   2e624:	cmp	r3, #6
   2e628:	ble	2e660 <blkid_probe_get_size@plt+0x27148>
   2e62c:	ldr	r2, [pc, #412]	; 2e7d0 <blkid_probe_get_size@plt+0x272b8>
   2e630:	ldr	r3, [pc, #412]	; 2e7d4 <blkid_probe_get_size@plt+0x272bc>
   2e634:	add	r2, pc, r2
   2e638:	add	r3, pc, r3
   2e63c:	str	r2, [sp, #4]
   2e640:	ldr	r2, [pc, #400]	; 2e7d8 <blkid_probe_get_size@plt+0x272c0>
   2e644:	add	r3, r3, #676	; 0x2a4
   2e648:	str	r3, [sp]
   2e64c:	add	r2, pc, r2
   2e650:	ldr	r3, [pc, #388]	; 2e7dc <blkid_probe_get_size@plt+0x272c4>
   2e654:	mov	r1, r4
   2e658:	mov	r0, #7
   2e65c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e660:	ldr	r0, [pc, #376]	; 2e7e0 <blkid_probe_get_size@plt+0x272c8>
   2e664:	add	r0, pc, r0
   2e668:	bl	74dc <__tls_get_addr@plt>
   2e66c:	ldr	r2, [pc, #248]	; 2e76c <blkid_probe_get_size@plt+0x27254>
   2e670:	ldr	r3, [pc, #364]	; 2e7e4 <blkid_probe_get_size@plt+0x272cc>
   2e674:	mov	r1, #1
   2e678:	str	r1, [r0, r2]
   2e67c:	mov	r2, #0
   2e680:	strb	r2, [r0, r3]
   2e684:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e688:	cmp	r3, #6
   2e68c:	ble	2e6c4 <blkid_probe_get_size@plt+0x271ac>
   2e690:	ldr	r2, [pc, #336]	; 2e7e8 <blkid_probe_get_size@plt+0x272d0>
   2e694:	ldr	r3, [pc, #336]	; 2e7ec <blkid_probe_get_size@plt+0x272d4>
   2e698:	add	r2, pc, r2
   2e69c:	add	r3, pc, r3
   2e6a0:	str	r2, [sp, #4]
   2e6a4:	ldr	r2, [pc, #324]	; 2e7f0 <blkid_probe_get_size@plt+0x272d8>
   2e6a8:	add	r3, r3, #676	; 0x2a4
   2e6ac:	str	r3, [sp]
   2e6b0:	add	r2, pc, r2
   2e6b4:	ldr	r3, [pc, #312]	; 2e7f4 <blkid_probe_get_size@plt+0x272dc>
   2e6b8:	mov	r1, #0
   2e6bc:	mov	r0, #7
   2e6c0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e6c4:	ldr	r0, [pc, #300]	; 2e7f8 <blkid_probe_get_size@plt+0x272e0>
   2e6c8:	mov	r4, #0
   2e6cc:	add	r0, pc, r0
   2e6d0:	bl	74dc <__tls_get_addr@plt>
   2e6d4:	ldr	r1, [pc, #144]	; 2e76c <blkid_probe_get_size@plt+0x27254>
   2e6d8:	ldr	r2, [pc, #260]	; 2e7e4 <blkid_probe_get_size@plt+0x272cc>
   2e6dc:	mov	r3, #1
   2e6e0:	str	r3, [r0, r1]
   2e6e4:	strb	r3, [r0, r2]
   2e6e8:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e6ec:	mvn	r4, #122	; 0x7a
   2e6f0:	b	2e40c <blkid_probe_get_size@plt+0x26ef4>
   2e6f4:	cmp	r3, #6
   2e6f8:	ble	2e5a4 <blkid_probe_get_size@plt+0x2708c>
   2e6fc:	ldr	r2, [pc, #248]	; 2e7fc <blkid_probe_get_size@plt+0x272e4>
   2e700:	ldr	r3, [pc, #248]	; 2e800 <blkid_probe_get_size@plt+0x272e8>
   2e704:	add	r2, pc, r2
   2e708:	str	r2, [sp, #4]
   2e70c:	add	r3, pc, r3
   2e710:	ldr	r2, [pc, #236]	; 2e804 <blkid_probe_get_size@plt+0x272ec>
   2e714:	add	r3, r3, #676	; 0x2a4
   2e718:	str	r3, [sp]
   2e71c:	add	r2, pc, r2
   2e720:	ldr	r3, [pc, #224]	; 2e808 <blkid_probe_get_size@plt+0x272f0>
   2e724:	mov	r1, #0
   2e728:	mov	r0, #7
   2e72c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2e730:	b	2e5a4 <blkid_probe_get_size@plt+0x2708c>
   2e734:	bl	6fb4 <__stack_chk_fail@plt>
   2e738:	andeq	r9, r6, r0, lsl #16
   2e73c:	andeq	r0, r0, ip, lsr r4
   2e740:	andeq	pc, r3, ip, lsr #9
   2e744:	cmnvs	r7, #112, 4
   2e748:			; <UNDEFINED> instruction: 0x01021994
   2e74c:	andeq	r9, r6, r0, lsl #27
   2e750:	andeq	lr, r3, ip, lsl r4
   2e754:	andeq	pc, r3, r4, ror r6	; <UNPREDICTABLE>
   2e758:	andeq	ip, r3, ip, ror #5
   2e75c:	strdeq	r0, [r0], -r5
   2e760:	andmi	r0, r0, fp, ror r0
   2e764:	andeq	r9, r6, r0, lsl sp
   2e768:	andeq	r9, r6, r4, asr fp
   2e76c:	andeq	r0, r0, r8
   2e770:	ldrdeq	r9, [r6], -r8
   2e774:	ldrdeq	pc, [r3], -r8
   2e778:	andeq	lr, r3, ip, asr r3
   2e77c:	andeq	ip, r3, r8, lsr r2
   2e780:	ldrdeq	r0, [r0], -r9
   2e784:	andeq	pc, r3, r8, ror r3	; <UNPREDICTABLE>
   2e788:	andeq	lr, r3, r4, lsr #6
   2e78c:	andeq	ip, r3, r0, lsl #4
   2e790:	ldrdeq	r0, [r0], -r6
   2e794:	andeq	pc, r3, r4, lsr #7
   2e798:	andeq	pc, r3, ip, ror #7
   2e79c:	strdeq	r9, [r6], -r8
   2e7a0:	eoreq	lr, r7, fp, ror #1
   2e7a4:	andeq	lr, r3, r0, lsl #5
   2e7a8:	andeq	pc, r3, r8, ror r4	; <UNPREDICTABLE>
   2e7ac:	andeq	ip, r3, r0, asr r1
   2e7b0:	andeq	r0, r0, lr, ror #19
   2e7b4:	strdeq	r9, [r6], -r0
   2e7b8:	andeq	r9, r6, r0, ror fp
   2e7bc:	andeq	pc, r3, r4, asr #6
   2e7c0:	andeq	lr, r3, r8, lsl #4
   2e7c4:	andeq	ip, r3, r4, ror #1
   2e7c8:	andeq	r0, r0, r3, ror #19
   2e7cc:	andeq	r9, r6, r0, lsr #22
   2e7d0:	andeq	pc, r3, ip, lsl #5
   2e7d4:	andeq	lr, r3, r0, asr #3
   2e7d8:	muleq	r3, r8, r0
   2e7dc:	ldrdeq	r0, [r0], -lr
   2e7e0:	andeq	r9, r6, r4, lsr r9
   2e7e4:	andeq	r0, r0, r0, lsl r0
   2e7e8:	andeq	pc, r3, r0, asr #5
   2e7ec:	andeq	lr, r3, ip, asr r1
   2e7f0:	andeq	ip, r3, r4, lsr r0
   2e7f4:	andeq	r0, r0, r6, ror #19
   2e7f8:	andeq	r9, r6, ip, asr #17
   2e7fc:			; <UNDEFINED> instruction: 0x0003f2b8
   2e800:	andeq	lr, r3, ip, ror #1
   2e804:	andeq	fp, r3, r8, asr #31
   2e808:	andeq	r0, r0, sl, ror #19
   2e80c:	ldr	r0, [pc, #64]	; 2e854 <blkid_probe_get_size@plt+0x2733c>
   2e810:	push	{r4, r5, r6, lr}
   2e814:	add	r0, pc, r0
   2e818:	bl	74dc <__tls_get_addr@plt>
   2e81c:	ldr	r4, [pc, #52]	; 2e858 <blkid_probe_get_size@plt+0x27340>
   2e820:	mov	r5, r0
   2e824:	ldr	r0, [r0, r4]
   2e828:	cmp	r0, #0
   2e82c:	blt	2e840 <blkid_probe_get_size@plt+0x27328>
   2e830:	cmp	r0, #1
   2e834:	movle	r0, #0
   2e838:	movgt	r0, #1
   2e83c:	pop	{r4, r5, r6, pc}
   2e840:	bl	2e360 <blkid_probe_get_size@plt+0x26e48>
   2e844:	cmp	r0, #0
   2e848:	poplt	{r4, r5, r6, pc}
   2e84c:	ldr	r0, [r5, r4]
   2e850:	b	2e830 <blkid_probe_get_size@plt+0x27318>
   2e854:	andeq	r9, r6, r4, lsl #15
   2e858:	andeq	r0, r0, r8
   2e85c:	ldr	r3, [pc, #248]	; 2e95c <blkid_probe_get_size@plt+0x27444>
   2e860:	ldr	r2, [pc, #248]	; 2e960 <blkid_probe_get_size@plt+0x27448>
   2e864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e868:	add	r3, pc, r3
   2e86c:	sub	sp, sp, #28
   2e870:	cmp	r0, #0
   2e874:	str	r0, [sp, #12]
   2e878:	ldr	r2, [r3, r2]
   2e87c:	str	r2, [sp, #8]
   2e880:	ldr	r3, [r2]
   2e884:	str	r3, [sp, #20]
   2e888:	beq	2e930 <blkid_probe_get_size@plt+0x27418>
   2e88c:	ldr	r9, [pc, #208]	; 2e964 <blkid_probe_get_size@plt+0x2744c>
   2e890:	mov	r5, #0
   2e894:	mov	fp, r1
   2e898:	add	r9, pc, r9
   2e89c:	mov	r8, r5
   2e8a0:	add	r7, sp, #16
   2e8a4:	add	r6, sp, #12
   2e8a8:	b	2e8dc <blkid_probe_get_size@plt+0x273c4>
   2e8ac:	ldr	r4, [sp, #16]
   2e8b0:	beq	2e920 <blkid_probe_get_size@plt+0x27408>
   2e8b4:	mov	r2, r4
   2e8b8:	mov	r1, #9
   2e8bc:	mov	r0, r9
   2e8c0:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   2e8c4:	subs	r3, r0, #0
   2e8c8:	movge	r2, #1
   2e8cc:	movlt	r0, r4
   2e8d0:	movge	r0, r4
   2e8d4:	orrge	r5, r5, r2, lsl r3
   2e8d8:	bl	69f0 <free@plt>
   2e8dc:	mov	r2, #0
   2e8e0:	mov	r1, r7
   2e8e4:	mov	r0, r6
   2e8e8:	str	r8, [sp, #16]
   2e8ec:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   2e8f0:	subs	sl, r0, #0
   2e8f4:	bge	2e8ac <blkid_probe_get_size@plt+0x27394>
   2e8f8:	ldr	r0, [sp, #16]
   2e8fc:	bl	69f0 <free@plt>
   2e900:	ldr	r3, [sp, #8]
   2e904:	ldr	r1, [sp, #20]
   2e908:	mov	r0, sl
   2e90c:	ldr	r2, [r3]
   2e910:	cmp	r1, r2
   2e914:	bne	2e958 <blkid_probe_get_size@plt+0x27440>
   2e918:	add	sp, sp, #28
   2e91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e920:	mov	r0, r4
   2e924:	bl	69f0 <free@plt>
   2e928:	str	r5, [fp]
   2e92c:	b	2e900 <blkid_probe_get_size@plt+0x273e8>
   2e930:	ldr	r2, [pc, #48]	; 2e968 <blkid_probe_get_size@plt+0x27450>
   2e934:	ldr	r1, [pc, #48]	; 2e96c <blkid_probe_get_size@plt+0x27454>
   2e938:	add	r2, pc, r2
   2e93c:	add	r2, r2, #696	; 0x2b8
   2e940:	str	r2, [sp]
   2e944:	ldr	r2, [pc, #36]	; 2e970 <blkid_probe_get_size@plt+0x27458>
   2e948:	ldr	r3, [pc, #36]	; 2e974 <blkid_probe_get_size@plt+0x2745c>
   2e94c:	add	r2, pc, r2
   2e950:	add	r1, pc, r1
   2e954:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2e958:	bl	6fb4 <__stack_chk_fail@plt>
   2e95c:	andeq	r9, r6, r0, lsl #6
   2e960:	andeq	r0, r0, ip, lsr r4
   2e964:	andeq	r9, r6, r4, lsr #18
   2e968:	andeq	sp, r3, r0, asr #29
   2e96c:	strdeq	ip, [r3], -r0
   2e970:	muleq	r3, r8, sp
   2e974:	andeq	r0, r0, r5, lsr #18
   2e978:	push	{r4, r5, r6, lr}
   2e97c:	subs	r4, r0, #0
   2e980:	beq	2ea14 <blkid_probe_get_size@plt+0x274fc>
   2e984:	ldr	r1, [pc, #152]	; 2ea24 <blkid_probe_get_size@plt+0x2750c>
   2e988:	add	r1, pc, r1
   2e98c:	bl	7314 <strcmp@plt>
   2e990:	cmp	r0, #0
   2e994:	beq	2ea0c <blkid_probe_get_size@plt+0x274f4>
   2e998:	ldr	r1, [pc, #136]	; 2ea28 <blkid_probe_get_size@plt+0x27510>
   2e99c:	mov	r2, #5
   2e9a0:	add	r1, pc, r1
   2e9a4:	mov	r0, r4
   2e9a8:	bl	6a5c <strncmp@plt>
   2e9ac:	cmp	r0, #0
   2e9b0:	bne	2ea1c <blkid_probe_get_size@plt+0x27504>
   2e9b4:	adds	r5, r4, #5
   2e9b8:	moveq	r5, r4
   2e9bc:	ldrb	r1, [r5]
   2e9c0:	cmp	r1, #0
   2e9c4:	beq	2ea14 <blkid_probe_get_size@plt+0x274fc>
   2e9c8:	cmp	r1, #95	; 0x5f
   2e9cc:	beq	2ea14 <blkid_probe_get_size@plt+0x274fc>
   2e9d0:	ldr	r6, [pc, #84]	; 2ea2c <blkid_probe_get_size@plt+0x27514>
   2e9d4:	mov	r4, r5
   2e9d8:	add	r6, pc, r6
   2e9dc:	mov	r0, r6
   2e9e0:	bl	74c4 <strchr@plt>
   2e9e4:	cmp	r0, #0
   2e9e8:	popeq	{r4, r5, r6, pc}
   2e9ec:	ldrb	r1, [r4, #1]!
   2e9f0:	cmp	r1, #0
   2e9f4:	bne	2e9dc <blkid_probe_get_size@plt+0x274c4>
   2e9f8:	sub	r0, r4, r5
   2e9fc:	cmp	r0, #4096	; 0x1000
   2ea00:	movgt	r0, #0
   2ea04:	movle	r0, #1
   2ea08:	pop	{r4, r5, r6, pc}
   2ea0c:	mov	r0, #1
   2ea10:	pop	{r4, r5, r6, pc}
   2ea14:	mov	r0, #0
   2ea18:	pop	{r4, r5, r6, pc}
   2ea1c:	mov	r5, r4
   2ea20:	b	2e9bc <blkid_probe_get_size@plt+0x274a4>
   2ea24:	andeq	pc, r3, r8, lsl #2
   2ea28:	strdeq	pc, [r3], -ip
   2ea2c:	andeq	pc, r3, ip, asr #1
   2ea30:	ldr	r3, [pc, #252]	; 2eb34 <blkid_probe_get_size@plt+0x2761c>
   2ea34:	ldr	r2, [pc, #252]	; 2eb38 <blkid_probe_get_size@plt+0x27620>
   2ea38:	add	r3, pc, r3
   2ea3c:	push	{r4, r5, r6, fp, lr}
   2ea40:	add	fp, sp, #16
   2ea44:	sub	sp, sp, #20
   2ea48:	ldr	r6, [r3, r2]
   2ea4c:	subs	r4, r0, #0
   2ea50:	ldr	r3, [r6]
   2ea54:	str	r3, [fp, #-24]	; 0xffffffe8
   2ea58:	beq	2eb00 <blkid_probe_get_size@plt+0x275e8>
   2ea5c:	mov	r5, r1
   2ea60:	ldr	r1, [pc, #212]	; 2eb3c <blkid_probe_get_size@plt+0x27624>
   2ea64:	add	r1, pc, r1
   2ea68:	bl	6a8c <strcspn@plt>
   2ea6c:	cmp	r0, #2
   2ea70:	bls	2eb28 <blkid_probe_get_size@plt+0x27610>
   2ea74:	mov	r1, r0
   2ea78:	mov	r0, r4
   2ea7c:	bl	69cc <strnlen@plt>
   2ea80:	mov	r1, r4
   2ea84:	add	r3, r0, #15
   2ea88:	bic	r3, r3, #7
   2ea8c:	sub	sp, sp, r3
   2ea90:	mov	r2, r0
   2ea94:	add	r0, sp, #15
   2ea98:	mov	r3, #0
   2ea9c:	lsr	r0, r0, #3
   2eaa0:	strb	r3, [r2, r0, lsl #3]
   2eaa4:	lsl	r0, r0, #3
   2eaa8:	bl	71e8 <memcpy@plt>
   2eaac:	mov	r1, #3
   2eab0:	ldrb	r3, [r0]
   2eab4:	mov	r4, r0
   2eab8:	cmp	r3, #95	; 0x5f
   2eabc:	addeq	r4, r0, #1
   2eac0:	mov	r0, r4
   2eac4:	bl	3c664 <blkid_probe_get_size@plt+0x3514c>
   2eac8:	cmp	r0, #0
   2eacc:	beq	2eb28 <blkid_probe_get_size@plt+0x27610>
   2ead0:	mov	r0, r4
   2ead4:	bl	74e8 <strdup@plt>
   2ead8:	cmp	r0, #0
   2eadc:	strne	r0, [r5]
   2eae0:	mvneq	r0, #11
   2eae4:	movne	r0, #0
   2eae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eaec:	ldr	r3, [r6]
   2eaf0:	cmp	r2, r3
   2eaf4:	bne	2eb30 <blkid_probe_get_size@plt+0x27618>
   2eaf8:	sub	sp, fp, #16
   2eafc:	pop	{r4, r5, r6, fp, pc}
   2eb00:	ldr	r2, [pc, #56]	; 2eb40 <blkid_probe_get_size@plt+0x27628>
   2eb04:	ldr	r1, [pc, #56]	; 2eb44 <blkid_probe_get_size@plt+0x2762c>
   2eb08:	add	r2, pc, r2
   2eb0c:	add	r2, r2, #716	; 0x2cc
   2eb10:	str	r2, [sp]
   2eb14:	ldr	r2, [pc, #44]	; 2eb48 <blkid_probe_get_size@plt+0x27630>
   2eb18:	ldr	r3, [pc, #44]	; 2eb4c <blkid_probe_get_size@plt+0x27634>
   2eb1c:	add	r2, pc, r2
   2eb20:	add	r1, pc, r1
   2eb24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2eb28:	mvn	r0, #5
   2eb2c:	b	2eae8 <blkid_probe_get_size@plt+0x275d0>
   2eb30:	bl	6fb4 <__stack_chk_fail@plt>
   2eb34:	andeq	r9, r6, r0, lsr r1
   2eb38:	andeq	r0, r0, ip, lsr r4
   2eb3c:	andeq	r9, r4, ip, asr r5
   2eb40:	strdeq	sp, [r3], -r0
   2eb44:	andeq	fp, r3, r0, ror #23
   2eb48:	andeq	fp, r3, r8, asr #23
   2eb4c:	muleq	r0, lr, r5
   2eb50:	ldr	r3, [pc, #176]	; 2ec08 <blkid_probe_get_size@plt+0x276f0>
   2eb54:	ldr	r2, [pc, #176]	; 2ec0c <blkid_probe_get_size@plt+0x276f4>
   2eb58:	add	r3, pc, r3
   2eb5c:	push	{r4, r5, r6, lr}
   2eb60:	sub	sp, sp, #8
   2eb64:	ldr	r4, [r3, r2]
   2eb68:	mov	r6, r0
   2eb6c:	mov	r1, sp
   2eb70:	ldr	r3, [r4]
   2eb74:	mov	r0, #1
   2eb78:	str	r3, [sp, #4]
   2eb7c:	bl	630e8 <blkid_probe_get_size@plt+0x5bbd0>
   2eb80:	cmp	r0, #0
   2eb84:	blt	2ebb8 <blkid_probe_get_size@plt+0x276a0>
   2eb88:	ldr	r5, [sp]
   2eb8c:	ldr	r1, [pc, #124]	; 2ec10 <blkid_probe_get_size@plt+0x276f8>
   2eb90:	mov	r0, r5
   2eb94:	add	r1, pc, r1
   2eb98:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   2eb9c:	cmp	r0, #0
   2eba0:	beq	2ebd0 <blkid_probe_get_size@plt+0x276b8>
   2eba4:	mov	r3, #0
   2eba8:	strb	r3, [r0]
   2ebac:	ldr	r5, [sp]
   2ebb0:	mov	r0, #0
   2ebb4:	str	r5, [r6]
   2ebb8:	ldr	r2, [sp, #4]
   2ebbc:	ldr	r3, [r4]
   2ebc0:	cmp	r2, r3
   2ebc4:	bne	2ec04 <blkid_probe_get_size@plt+0x276ec>
   2ebc8:	add	sp, sp, #8
   2ebcc:	pop	{r4, r5, r6, pc}
   2ebd0:	ldr	r1, [pc, #60]	; 2ec14 <blkid_probe_get_size@plt+0x276fc>
   2ebd4:	mov	r0, r5
   2ebd8:	add	r1, pc, r1
   2ebdc:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   2ebe0:	cmp	r0, #0
   2ebe4:	bne	2eba4 <blkid_probe_get_size@plt+0x2768c>
   2ebe8:	ldr	r1, [pc, #40]	; 2ec18 <blkid_probe_get_size@plt+0x27700>
   2ebec:	mov	r0, r5
   2ebf0:	add	r1, pc, r1
   2ebf4:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   2ebf8:	cmp	r0, #0
   2ebfc:	beq	2ebb0 <blkid_probe_get_size@plt+0x27698>
   2ec00:	b	2eba4 <blkid_probe_get_size@plt+0x2768c>
   2ec04:	bl	6fb4 <__stack_chk_fail@plt>
   2ec08:	andeq	r9, r6, r0, lsl r0
   2ec0c:	andeq	r0, r0, ip, lsr r4
   2ec10:	andeq	lr, r3, r0, asr pc
   2ec14:	andeq	lr, r3, r8, lsl pc
   2ec18:	andeq	lr, r3, r0, lsl pc
   2ec1c:	push	{r4, r5, lr}
   2ec20:	subs	r4, r0, #0
   2ec24:	sub	sp, sp, #12
   2ec28:	beq	2ecd0 <blkid_probe_get_size@plt+0x277b8>
   2ec2c:	ldr	r1, [pc, #224]	; 2ed14 <blkid_probe_get_size@plt+0x277fc>
   2ec30:	add	r1, pc, r1
   2ec34:	bl	7314 <strcmp@plt>
   2ec38:	cmp	r0, #0
   2ec3c:	beq	2ec6c <blkid_probe_get_size@plt+0x27754>
   2ec40:	ldr	r1, [pc, #208]	; 2ed18 <blkid_probe_get_size@plt+0x27800>
   2ec44:	mov	r2, #5
   2ec48:	add	r1, pc, r1
   2ec4c:	mov	r0, r4
   2ec50:	bl	6a5c <strncmp@plt>
   2ec54:	cmp	r0, #0
   2ec58:	bne	2ecf8 <blkid_probe_get_size@plt+0x277e0>
   2ec5c:	adds	r0, r4, #5
   2ec60:	moveq	r0, r4
   2ec64:	add	sp, sp, #12
   2ec68:	pop	{r4, r5, pc}
   2ec6c:	ldr	r0, [pc, #168]	; 2ed1c <blkid_probe_get_size@plt+0x27804>
   2ec70:	ldr	r4, [pc, #168]	; 2ed20 <blkid_probe_get_size@plt+0x27808>
   2ec74:	add	r0, pc, r0
   2ec78:	bl	74dc <__tls_get_addr@plt>
   2ec7c:	ldr	r3, [r0, r4]
   2ec80:	mov	r5, r0
   2ec84:	cmp	r3, #0
   2ec88:	blt	2ed00 <blkid_probe_get_size@plt+0x277e8>
   2ec8c:	cmp	r3, #1
   2ec90:	beq	2eca8 <blkid_probe_get_size@plt+0x27790>
   2ec94:	ldr	r0, [pc, #136]	; 2ed24 <blkid_probe_get_size@plt+0x2780c>
   2ec98:	add	r0, pc, r0
   2ec9c:	add	r0, r0, #5
   2eca0:	add	sp, sp, #12
   2eca4:	pop	{r4, r5, pc}
   2eca8:	ldr	r0, [pc, #120]	; 2ed28 <blkid_probe_get_size@plt+0x27810>
   2ecac:	add	r0, pc, r0
   2ecb0:	bl	74dc <__tls_get_addr@plt>
   2ecb4:	ldr	r3, [pc, #112]	; 2ed2c <blkid_probe_get_size@plt+0x27814>
   2ecb8:	ldrb	r3, [r3, r0]
   2ecbc:	cmp	r3, #0
   2ecc0:	bne	2ec94 <blkid_probe_get_size@plt+0x2777c>
   2ecc4:	ldr	r0, [pc, #100]	; 2ed30 <blkid_probe_get_size@plt+0x27818>
   2ecc8:	add	r0, pc, r0
   2eccc:	b	2ec9c <blkid_probe_get_size@plt+0x27784>
   2ecd0:	ldr	r2, [pc, #92]	; 2ed34 <blkid_probe_get_size@plt+0x2781c>
   2ecd4:	ldr	r1, [pc, #92]	; 2ed38 <blkid_probe_get_size@plt+0x27820>
   2ecd8:	add	r2, pc, r2
   2ecdc:	add	r2, r2, #736	; 0x2e0
   2ece0:	str	r2, [sp]
   2ece4:	ldr	r2, [pc, #80]	; 2ed3c <blkid_probe_get_size@plt+0x27824>
   2ece8:	ldr	r3, [pc, #80]	; 2ed40 <blkid_probe_get_size@plt+0x27828>
   2ecec:	add	r2, pc, r2
   2ecf0:	add	r1, pc, r1
   2ecf4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2ecf8:	mov	r0, r4
   2ecfc:	b	2ec64 <blkid_probe_get_size@plt+0x2774c>
   2ed00:	bl	2e360 <blkid_probe_get_size@plt+0x26e48>
   2ed04:	cmp	r0, #0
   2ed08:	blt	2ec94 <blkid_probe_get_size@plt+0x2777c>
   2ed0c:	ldr	r3, [r5, r4]
   2ed10:	b	2ec8c <blkid_probe_get_size@plt+0x27774>
   2ed14:	andeq	lr, r3, r0, ror #28
   2ed18:	andeq	lr, r3, r4, asr lr
   2ed1c:	andeq	r9, r6, r4, lsr #6
   2ed20:	andeq	r0, r0, r8
   2ed24:	andeq	lr, r3, r0, ror lr
   2ed28:	andeq	r9, r6, ip, ror #5
   2ed2c:	andeq	r0, r0, r0, lsl r0
   2ed30:	andeq	lr, r3, r0, asr lr
   2ed34:	andeq	sp, r3, r0, lsr #22
   2ed38:	andeq	lr, r3, r8, lsr lr
   2ed3c:	strdeq	fp, [r3], -r8
   2ed40:	andeq	r0, r0, fp, lsl r2
   2ed44:	ldr	r3, [pc, #420]	; 2eef0 <blkid_probe_get_size@plt+0x279d8>
   2ed48:	ldr	r2, [pc, #420]	; 2eef4 <blkid_probe_get_size@plt+0x279dc>
   2ed4c:	add	r3, pc, r3
   2ed50:	push	{r4, r5, r6, fp, lr}
   2ed54:	add	fp, sp, #16
   2ed58:	sub	sp, sp, #20
   2ed5c:	ldr	r4, [r3, r2]
   2ed60:	subs	r6, r0, #0
   2ed64:	ldr	r3, [r4]
   2ed68:	str	r3, [fp, #-24]	; 0xffffffe8
   2ed6c:	beq	2ee68 <blkid_probe_get_size@plt+0x27950>
   2ed70:	bl	2e978 <blkid_probe_get_size@plt+0x27460>
   2ed74:	cmp	r0, #0
   2ed78:	beq	2ee90 <blkid_probe_get_size@plt+0x27978>
   2ed7c:	bl	2e80c <blkid_probe_get_size@plt+0x272f4>
   2ed80:	subs	r5, r0, #0
   2ed84:	blt	2edcc <blkid_probe_get_size@plt+0x278b4>
   2ed88:	beq	2ede8 <blkid_probe_get_size@plt+0x278d0>
   2ed8c:	ldr	r1, [pc, #356]	; 2eef8 <blkid_probe_get_size@plt+0x279e0>
   2ed90:	mov	r0, r6
   2ed94:	add	r1, pc, r1
   2ed98:	bl	7314 <strcmp@plt>
   2ed9c:	cmp	r0, #0
   2eda0:	beq	2edc8 <blkid_probe_get_size@plt+0x278b0>
   2eda4:	ldr	r1, [pc, #336]	; 2eefc <blkid_probe_get_size@plt+0x279e4>
   2eda8:	mov	r2, #5
   2edac:	add	r1, pc, r1
   2edb0:	mov	r0, r6
   2edb4:	bl	6a5c <strncmp@plt>
   2edb8:	cmp	r0, #0
   2edbc:	bne	2edc8 <blkid_probe_get_size@plt+0x278b0>
   2edc0:	cmn	r6, #5
   2edc4:	bne	2eee4 <blkid_probe_get_size@plt+0x279cc>
   2edc8:	mov	r5, #0
   2edcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2edd0:	ldr	r3, [r4]
   2edd4:	mov	r0, r5
   2edd8:	cmp	r2, r3
   2eddc:	bne	2eeec <blkid_probe_get_size@plt+0x279d4>
   2ede0:	sub	sp, fp, #16
   2ede4:	pop	{r4, r5, r6, fp, pc}
   2ede8:	mov	r0, r6
   2edec:	bl	2ec1c <blkid_probe_get_size@plt+0x27704>
   2edf0:	subs	r6, r0, #0
   2edf4:	beq	2eec4 <blkid_probe_get_size@plt+0x279ac>
   2edf8:	bl	723c <strlen@plt>
   2edfc:	add	r3, r0, #16
   2ee00:	cmp	r3, #4194304	; 0x400000
   2ee04:	bhi	2ee98 <blkid_probe_get_size@plt+0x27980>
   2ee08:	ldr	r3, [pc, #240]	; 2ef00 <blkid_probe_get_size@plt+0x279e8>
   2ee0c:	add	r0, r0, #30
   2ee10:	add	r3, pc, r3
   2ee14:	bic	ip, r0, #7
   2ee18:	ldm	r3, {r0, r1, r2, r3}
   2ee1c:	sub	sp, sp, ip
   2ee20:	add	r5, sp, #8
   2ee24:	stm	r5, {r0, r1, r2, r3}
   2ee28:	mov	r1, r6
   2ee2c:	add	r0, r5, #15
   2ee30:	bl	6ae0 <stpcpy@plt>
   2ee34:	mov	ip, r0
   2ee38:	mov	r2, #0
   2ee3c:	mov	r1, r5
   2ee40:	strb	r2, [ip]
   2ee44:	mov	r3, #256	; 0x100
   2ee48:	mvn	r0, #99	; 0x63
   2ee4c:	bl	72d8 <faccessat@plt>
   2ee50:	cmp	r0, #0
   2ee54:	bge	2edc8 <blkid_probe_get_size@plt+0x278b0>
   2ee58:	bl	732c <__errno_location@plt>
   2ee5c:	ldr	r5, [r0]
   2ee60:	rsb	r5, r5, #0
   2ee64:	b	2edcc <blkid_probe_get_size@plt+0x278b4>
   2ee68:	ldr	r2, [pc, #148]	; 2ef04 <blkid_probe_get_size@plt+0x279ec>
   2ee6c:	ldr	r1, [pc, #148]	; 2ef08 <blkid_probe_get_size@plt+0x279f0>
   2ee70:	add	r2, pc, r2
   2ee74:	add	r2, r2, #760	; 0x2f8
   2ee78:	str	r2, [sp]
   2ee7c:	ldr	r2, [pc, #136]	; 2ef0c <blkid_probe_get_size@plt+0x279f4>
   2ee80:	ldr	r3, [pc, #136]	; 2ef10 <blkid_probe_get_size@plt+0x279f8>
   2ee84:	add	r2, pc, r2
   2ee88:	add	r1, pc, r1
   2ee8c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2ee90:	mvn	r5, #21
   2ee94:	b	2edcc <blkid_probe_get_size@plt+0x278b4>
   2ee98:	ldr	r3, [pc, #116]	; 2ef14 <blkid_probe_get_size@plt+0x279fc>
   2ee9c:	ldr	r2, [pc, #116]	; 2ef18 <blkid_probe_get_size@plt+0x27a00>
   2eea0:	add	r3, pc, r3
   2eea4:	ldr	r1, [pc, #112]	; 2ef1c <blkid_probe_get_size@plt+0x27a04>
   2eea8:	add	r3, r3, #760	; 0x2f8
   2eeac:	str	r3, [sp]
   2eeb0:	mov	r0, r5
   2eeb4:	ldr	r3, [pc, #100]	; 2ef20 <blkid_probe_get_size@plt+0x27a08>
   2eeb8:	add	r2, pc, r2
   2eebc:	add	r1, pc, r1
   2eec0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2eec4:	ldr	r3, [pc, #88]	; 2ef24 <blkid_probe_get_size@plt+0x27a0c>
   2eec8:	sub	sp, sp, #24
   2eecc:	add	r3, pc, r3
   2eed0:	add	r5, sp, #8
   2eed4:	ldm	r3, {r0, r1, r2, r3}
   2eed8:	add	ip, r5, #15
   2eedc:	stm	r5, {r0, r1, r2, r3}
   2eee0:	b	2ee38 <blkid_probe_get_size@plt+0x27920>
   2eee4:	mvn	r5, #94	; 0x5e
   2eee8:	b	2edcc <blkid_probe_get_size@plt+0x278b4>
   2eeec:	bl	6fb4 <__stack_chk_fail@plt>
   2eef0:	andeq	r8, r6, ip, lsl lr
   2eef4:	andeq	r0, r0, ip, lsr r4
   2eef8:	strdeq	lr, [r3], -ip
   2eefc:	strdeq	lr, [r3], -r0
   2ef00:	andeq	lr, r3, r4, lsr #20
   2ef04:	andeq	sp, r3, r8, lsl #19
   2ef08:	andeq	lr, r3, r0, lsr #25
   2ef0c:	andeq	fp, r3, r0, ror #16
   2ef10:	andeq	r0, r0, fp, lsl #5
   2ef14:	andeq	sp, r3, r8, asr r9
   2ef18:	andeq	fp, r3, ip, lsr #16
   2ef1c:	ldrdeq	r6, [r3], -ip
   2ef20:	andeq	r0, r0, r6, lsr #5
   2ef24:	andeq	lr, r3, r8, ror #18
   2ef28:	push	{r4, r5, r6, r7, r8, lr}
   2ef2c:	subs	r8, r0, #0
   2ef30:	sub	sp, sp, #8
   2ef34:	beq	2efb0 <blkid_probe_get_size@plt+0x27a98>
   2ef38:	cmp	r1, #0
   2ef3c:	mov	r6, r1
   2ef40:	beq	2efd8 <blkid_probe_get_size@plt+0x27ac0>
   2ef44:	mov	r5, r3
   2ef48:	ldr	r3, [r1]
   2ef4c:	mov	r4, r2
   2ef50:	cmp	r3, r2
   2ef54:	bcs	2efa4 <blkid_probe_get_size@plt+0x27a8c>
   2ef58:	mov	r1, r5
   2ef5c:	mov	r0, #64	; 0x40
   2ef60:	bl	63b44 <blkid_probe_get_size@plt+0x5c62c>
   2ef64:	lsl	r3, r4, #1
   2ef68:	mul	r4, r5, r4
   2ef6c:	cmp	r3, r0
   2ef70:	movcc	r7, r0
   2ef74:	movcs	r7, r3
   2ef78:	mul	r1, r7, r5
   2ef7c:	cmp	r4, r1
   2ef80:	movhi	r0, #0
   2ef84:	bhi	2ef9c <blkid_probe_get_size@plt+0x27a84>
   2ef88:	ldr	r0, [r8]
   2ef8c:	bl	6e94 <realloc@plt>
   2ef90:	cmp	r0, #0
   2ef94:	strne	r0, [r8]
   2ef98:	strne	r7, [r6]
   2ef9c:	add	sp, sp, #8
   2efa0:	pop	{r4, r5, r6, r7, r8, pc}
   2efa4:	ldr	r0, [r8]
   2efa8:	add	sp, sp, #8
   2efac:	pop	{r4, r5, r6, r7, r8, pc}
   2efb0:	ldr	r2, [pc, #76]	; 2f004 <blkid_probe_get_size@plt+0x27aec>
   2efb4:	ldr	r1, [pc, #76]	; 2f008 <blkid_probe_get_size@plt+0x27af0>
   2efb8:	add	r2, pc, r2
   2efbc:	add	r2, r2, #788	; 0x314
   2efc0:	str	r2, [sp]
   2efc4:	ldr	r2, [pc, #64]	; 2f00c <blkid_probe_get_size@plt+0x27af4>
   2efc8:	mov	r3, #42	; 0x2a
   2efcc:	add	r2, pc, r2
   2efd0:	add	r1, pc, r1
   2efd4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2efd8:	ldr	r3, [pc, #48]	; 2f010 <blkid_probe_get_size@plt+0x27af8>
   2efdc:	mov	r0, r1
   2efe0:	add	r3, pc, r3
   2efe4:	ldr	r2, [pc, #40]	; 2f014 <blkid_probe_get_size@plt+0x27afc>
   2efe8:	ldr	r1, [pc, #40]	; 2f018 <blkid_probe_get_size@plt+0x27b00>
   2efec:	add	r3, r3, #788	; 0x314
   2eff0:	str	r3, [sp]
   2eff4:	add	r2, pc, r2
   2eff8:	mov	r3, #43	; 0x2b
   2effc:	add	r1, pc, r1
   2f000:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f004:	andeq	sp, r3, r0, asr #16
   2f008:	andeq	r5, r4, r8, lsr #14
   2f00c:	andeq	lr, r3, r8, ror #22
   2f010:	andeq	sp, r3, r8, lsl r8
   2f014:	andeq	lr, r3, r0, asr #22
   2f018:	andeq	lr, r3, r4, asr fp
   2f01c:	ldr	r2, [pc, #44]	; 2f050 <blkid_probe_get_size@plt+0x27b38>
   2f020:	push	{lr}		; (str lr, [sp, #-4]!)
   2f024:	add	r2, pc, r2
   2f028:	sub	sp, sp, #12
   2f02c:	add	r2, r2, #804	; 0x324
   2f030:	str	r2, [sp]
   2f034:	ldr	r1, [pc, #24]	; 2f054 <blkid_probe_get_size@plt+0x27b3c>
   2f038:	ldr	r2, [pc, #24]	; 2f058 <blkid_probe_get_size@plt+0x27b40>
   2f03c:	ldr	r3, [pc, #24]	; 2f05c <blkid_probe_get_size@plt+0x27b44>
   2f040:	add	r2, pc, r2
   2f044:	add	r1, pc, r1
   2f048:	mov	r0, #0
   2f04c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f050:	ldrdeq	sp, [r3], -r4
   2f054:	andeq	r8, r3, ip, lsr #6
   2f058:	andeq	lr, r3, ip, lsl fp
   2f05c:	andeq	r0, r0, sl, lsr r3
   2f060:	ldr	r2, [pc, #44]	; 2f094 <blkid_probe_get_size@plt+0x27b7c>
   2f064:	push	{lr}		; (str lr, [sp, #-4]!)
   2f068:	add	r2, pc, r2
   2f06c:	sub	sp, sp, #12
   2f070:	add	r2, r2, #820	; 0x334
   2f074:	str	r2, [sp]
   2f078:	ldr	r1, [pc, #24]	; 2f098 <blkid_probe_get_size@plt+0x27b80>
   2f07c:	ldr	r2, [pc, #24]	; 2f09c <blkid_probe_get_size@plt+0x27b84>
   2f080:	ldr	r3, [pc, #24]	; 2f0a0 <blkid_probe_get_size@plt+0x27b88>
   2f084:	add	r2, pc, r2
   2f088:	add	r1, pc, r1
   2f08c:	mov	r0, #0
   2f090:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f094:	muleq	r3, r0, r7
   2f098:	andeq	r8, r3, r8, ror #5
   2f09c:	ldrdeq	lr, [r3], -r8
   2f0a0:	andeq	r0, r0, r5, lsr r3
   2f0a4:	subs	r3, r0, #0
   2f0a8:	push	{lr}		; (str lr, [sp, #-4]!)
   2f0ac:	sub	sp, sp, #12
   2f0b0:	beq	2f0f0 <blkid_probe_get_size@plt+0x27bd8>
   2f0b4:	ldr	r0, [r3, #4]
   2f0b8:	cmp	r0, #0
   2f0bc:	beq	2f118 <blkid_probe_get_size@plt+0x27c00>
   2f0c0:	ldrh	r3, [r3]
   2f0c4:	cmp	r3, r2
   2f0c8:	bls	2f140 <blkid_probe_get_size@plt+0x27c28>
   2f0cc:	lsl	r2, r2, #4
   2f0d0:	add	ip, r0, r2
   2f0d4:	ldrh	r3, [r0, r2]
   2f0d8:	cmp	r3, #0
   2f0dc:	beq	2f140 <blkid_probe_get_size@plt+0x27c28>
   2f0e0:	mov	r0, #0
   2f0e4:	str	ip, [r1]
   2f0e8:	add	sp, sp, #12
   2f0ec:	pop	{pc}		; (ldr pc, [sp], #4)
   2f0f0:	ldr	r2, [pc, #80]	; 2f148 <blkid_probe_get_size@plt+0x27c30>
   2f0f4:	ldr	r1, [pc, #80]	; 2f14c <blkid_probe_get_size@plt+0x27c34>
   2f0f8:	add	r2, pc, r2
   2f0fc:	add	r2, r2, #836	; 0x344
   2f100:	str	r2, [sp]
   2f104:	ldr	r2, [pc, #68]	; 2f150 <blkid_probe_get_size@plt+0x27c38>
   2f108:	ldr	r3, [pc, #68]	; 2f154 <blkid_probe_get_size@plt+0x27c3c>
   2f10c:	add	r2, pc, r2
   2f110:	add	r1, pc, r1
   2f114:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f118:	ldr	r3, [pc, #56]	; 2f158 <blkid_probe_get_size@plt+0x27c40>
   2f11c:	ldr	r2, [pc, #56]	; 2f15c <blkid_probe_get_size@plt+0x27c44>
   2f120:	add	r3, pc, r3
   2f124:	ldr	r1, [pc, #52]	; 2f160 <blkid_probe_get_size@plt+0x27c48>
   2f128:	add	r3, r3, #836	; 0x344
   2f12c:	str	r3, [sp]
   2f130:	add	r2, pc, r2
   2f134:	ldr	r3, [pc, #40]	; 2f164 <blkid_probe_get_size@plt+0x27c4c>
   2f138:	add	r1, pc, r1
   2f13c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f140:	mvn	r0, #94	; 0x5e
   2f144:	b	2f0e8 <blkid_probe_get_size@plt+0x27bd0>
   2f148:	andeq	sp, r3, r0, lsl #14
   2f14c:	andeq	lr, r3, ip, ror sl
   2f150:	andeq	lr, r3, r0, asr sl
   2f154:	andeq	r0, r0, r2, ror #6
   2f158:	ldrdeq	sp, [r3], -r8
   2f15c:	andeq	lr, r3, ip, lsr #20
   2f160:	andeq	lr, r3, r0, ror #20
   2f164:	andeq	r0, r0, r3, ror #6
   2f168:	subs	r3, r0, #0
   2f16c:	push	{lr}		; (str lr, [sp, #-4]!)
   2f170:	sub	sp, sp, #12
   2f174:	beq	2f19c <blkid_probe_get_size@plt+0x27c84>
   2f178:	ldrh	r2, [r3]
   2f17c:	cmp	r2, #10
   2f180:	bne	2f1c4 <blkid_probe_get_size@plt+0x27cac>
   2f184:	ldr	r0, [r3, #8]
   2f188:	cmp	r0, #0
   2f18c:	beq	2f1f0 <blkid_probe_get_size@plt+0x27cd8>
   2f190:	str	r0, [r1]
   2f194:	add	sp, sp, #12
   2f198:	pop	{pc}		; (ldr pc, [sp], #4)
   2f19c:	ldr	r2, [pc, #116]	; 2f218 <blkid_probe_get_size@plt+0x27d00>
   2f1a0:	ldr	r1, [pc, #116]	; 2f21c <blkid_probe_get_size@plt+0x27d04>
   2f1a4:	add	r2, pc, r2
   2f1a8:	add	r2, r2, #860	; 0x35c
   2f1ac:	str	r2, [sp]
   2f1b0:	ldr	r2, [pc, #104]	; 2f220 <blkid_probe_get_size@plt+0x27d08>
   2f1b4:	ldr	r3, [pc, #104]	; 2f224 <blkid_probe_get_size@plt+0x27d0c>
   2f1b8:	add	r2, pc, r2
   2f1bc:	add	r1, pc, r1
   2f1c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f1c4:	ldr	r2, [pc, #92]	; 2f228 <blkid_probe_get_size@plt+0x27d10>
   2f1c8:	ldr	r1, [pc, #92]	; 2f22c <blkid_probe_get_size@plt+0x27d14>
   2f1cc:	add	r2, pc, r2
   2f1d0:	add	r2, r2, #860	; 0x35c
   2f1d4:	str	r2, [sp]
   2f1d8:	ldr	r2, [pc, #80]	; 2f230 <blkid_probe_get_size@plt+0x27d18>
   2f1dc:	ldr	r3, [pc, #80]	; 2f234 <blkid_probe_get_size@plt+0x27d1c>
   2f1e0:	add	r2, pc, r2
   2f1e4:	add	r1, pc, r1
   2f1e8:	mov	r0, #0
   2f1ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f1f0:	ldr	r3, [pc, #64]	; 2f238 <blkid_probe_get_size@plt+0x27d20>
   2f1f4:	ldr	r2, [pc, #64]	; 2f23c <blkid_probe_get_size@plt+0x27d24>
   2f1f8:	add	r3, pc, r3
   2f1fc:	ldr	r1, [pc, #60]	; 2f240 <blkid_probe_get_size@plt+0x27d28>
   2f200:	add	r3, r3, #860	; 0x35c
   2f204:	str	r3, [sp]
   2f208:	add	r2, pc, r2
   2f20c:	ldr	r3, [pc, #48]	; 2f244 <blkid_probe_get_size@plt+0x27d2c>
   2f210:	add	r1, pc, r1
   2f214:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f218:	andeq	sp, r3, r4, asr r6
   2f21c:	strdeq	lr, [r3], -r0
   2f220:	andeq	lr, r3, r4, lsr #19
   2f224:	andeq	r0, r0, pc, lsr r3
   2f228:	andeq	sp, r3, ip, lsr #12
   2f22c:	ldrdeq	lr, [r3], -r0
   2f230:	andeq	lr, r3, ip, ror r9
   2f234:	andeq	r0, r0, r1, asr #6
   2f238:	andeq	sp, r3, r0, lsl #12
   2f23c:	andeq	lr, r3, r4, asr r9
   2f240:	andeq	lr, r3, ip, asr #19
   2f244:	andeq	r0, r0, r2, asr #6
   2f248:	ldr	ip, [pc, #704]	; 2f510 <blkid_probe_get_size@plt+0x27ff8>
   2f24c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f250:	add	ip, pc, ip
   2f254:	ldr	lr, [pc, #696]	; 2f514 <blkid_probe_get_size@plt+0x27ffc>
   2f258:	sub	sp, sp, #196	; 0xc4
   2f25c:	mov	r5, r3
   2f260:	ldr	r6, [ip, lr]
   2f264:	mov	r3, ip
   2f268:	mov	r4, r2
   2f26c:	ldr	r3, [r6]
   2f270:	mov	r2, #128	; 0x80
   2f274:	str	r3, [sp, #188]	; 0xbc
   2f278:	add	r3, sp, #44	; 0x2c
   2f27c:	str	r3, [sp, #16]
   2f280:	mov	r3, #1
   2f284:	mov	r7, #0
   2f288:	str	r2, [sp, #20]
   2f28c:	str	r3, [sp, #28]
   2f290:	mov	r2, #16
   2f294:	add	r3, sp, #172	; 0xac
   2f298:	subs	r9, r0, #0
   2f29c:	str	r1, [sp, #24]
   2f2a0:	str	r7, [sp, #40]	; 0x28
   2f2a4:	str	r3, [sp, #32]
   2f2a8:	str	r2, [sp, #36]	; 0x24
   2f2ac:	blt	2f490 <blkid_probe_get_size@plt+0x27f78>
   2f2b0:	cmp	r5, #0
   2f2b4:	add	r8, sp, #16
   2f2b8:	moveq	r2, #32
   2f2bc:	movne	r2, #34	; 0x22
   2f2c0:	mov	r1, r8
   2f2c4:	bl	6df8 <recvmsg@plt>
   2f2c8:	cmp	r0, #0
   2f2cc:	blt	2f390 <blkid_probe_get_size@plt+0x27e78>
   2f2d0:	ldr	ip, [sp, #48]	; 0x30
   2f2d4:	cmp	ip, #0
   2f2d8:	beq	2f314 <blkid_probe_get_size@plt+0x27dfc>
   2f2dc:	ldr	r3, [pc, #564]	; 2f518 <blkid_probe_get_size@plt+0x28000>
   2f2e0:	add	r3, pc, r3
   2f2e4:	ldr	r3, [r3]
   2f2e8:	cmp	r3, #6
   2f2ec:	bgt	2f438 <blkid_probe_get_size@plt+0x27f20>
   2f2f0:	cmp	r5, #0
   2f2f4:	bne	2f414 <blkid_probe_get_size@plt+0x27efc>
   2f2f8:	mov	r0, #0
   2f2fc:	ldr	r2, [sp, #188]	; 0xbc
   2f300:	ldr	r3, [r6]
   2f304:	cmp	r2, r3
   2f308:	bne	2f50c <blkid_probe_get_size@plt+0x27ff4>
   2f30c:	add	sp, sp, #196	; 0xc4
   2f310:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f314:	ldr	lr, [sp, #36]	; 0x24
   2f318:	cmp	lr, #11
   2f31c:	bls	2f384 <blkid_probe_get_size@plt+0x27e6c>
   2f320:	ldr	r3, [sp, #32]
   2f324:	cmp	r3, #0
   2f328:	moveq	ip, r3
   2f32c:	beq	2f384 <blkid_probe_get_size@plt+0x27e6c>
   2f330:	mov	r2, r3
   2f334:	ldr	r5, [pc, #480]	; 2f51c <blkid_probe_get_size@plt+0x28004>
   2f338:	ldr	r3, [r3]
   2f33c:	add	lr, r2, lr
   2f340:	ldr	r1, [r2, #4]
   2f344:	cmp	r1, r5
   2f348:	beq	2f474 <blkid_probe_get_size@plt+0x27f5c>
   2f34c:	cmp	r3, #11
   2f350:	bls	2f384 <blkid_probe_get_size@plt+0x27e6c>
   2f354:	add	r3, r3, #3
   2f358:	bic	r3, r3, #3
   2f35c:	add	r2, r2, r3
   2f360:	add	r3, r2, #12
   2f364:	cmp	lr, r3
   2f368:	bcc	2f384 <blkid_probe_get_size@plt+0x27e6c>
   2f36c:	ldr	r3, [r2]
   2f370:	add	r1, r3, #3
   2f374:	bic	r1, r1, #3
   2f378:	add	r1, r2, r1
   2f37c:	cmp	lr, r1
   2f380:	bcs	2f340 <blkid_probe_get_size@plt+0x27e28>
   2f384:	cmp	r4, #0
   2f388:	strne	ip, [r4]
   2f38c:	b	2f2fc <blkid_probe_get_size@plt+0x27de4>
   2f390:	bl	732c <__errno_location@plt>
   2f394:	mov	r4, r0
   2f398:	ldr	r0, [r0]
   2f39c:	cmp	r0, #105	; 0x69
   2f3a0:	beq	2f3c4 <blkid_probe_get_size@plt+0x27eac>
   2f3a4:	cmp	r0, #11
   2f3a8:	beq	2f4bc <blkid_probe_get_size@plt+0x27fa4>
   2f3ac:	cmp	r0, #4
   2f3b0:	beq	2f2f8 <blkid_probe_get_size@plt+0x27de0>
   2f3b4:	cmp	r0, #11
   2f3b8:	beq	2f2f8 <blkid_probe_get_size@plt+0x27de0>
   2f3bc:	rsb	r0, r0, #0
   2f3c0:	b	2f2fc <blkid_probe_get_size@plt+0x27de4>
   2f3c4:	ldr	r3, [pc, #340]	; 2f520 <blkid_probe_get_size@plt+0x28008>
   2f3c8:	add	r3, pc, r3
   2f3cc:	ldr	r3, [r3]
   2f3d0:	cmp	r3, #6
   2f3d4:	ble	2f3bc <blkid_probe_get_size@plt+0x27ea4>
   2f3d8:	ldr	r2, [pc, #324]	; 2f524 <blkid_probe_get_size@plt+0x2800c>
   2f3dc:	ldr	r3, [pc, #324]	; 2f528 <blkid_probe_get_size@plt+0x28010>
   2f3e0:	add	r2, pc, r2
   2f3e4:	str	r2, [sp, #4]
   2f3e8:	add	r3, pc, r3
   2f3ec:	ldr	r2, [pc, #312]	; 2f52c <blkid_probe_get_size@plt+0x28014>
   2f3f0:	add	r3, r3, #904	; 0x388
   2f3f4:	str	r3, [sp]
   2f3f8:	mov	r1, r7
   2f3fc:	ldr	r3, [pc, #300]	; 2f530 <blkid_probe_get_size@plt+0x28018>
   2f400:	add	r2, pc, r2
   2f404:	mov	r0, #7
   2f408:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2f40c:	ldr	r0, [r4]
   2f410:	b	2f3ac <blkid_probe_get_size@plt+0x27e94>
   2f414:	mov	r1, r8
   2f418:	mov	r0, r9
   2f41c:	mov	r2, #0
   2f420:	bl	6df8 <recvmsg@plt>
   2f424:	cmp	r0, #0
   2f428:	bge	2f2f8 <blkid_probe_get_size@plt+0x27de0>
   2f42c:	bl	732c <__errno_location@plt>
   2f430:	ldr	r0, [r0]
   2f434:	b	2f3ac <blkid_probe_get_size@plt+0x27e94>
   2f438:	ldr	r2, [pc, #244]	; 2f534 <blkid_probe_get_size@plt+0x2801c>
   2f43c:	ldr	r3, [pc, #244]	; 2f538 <blkid_probe_get_size@plt+0x28020>
   2f440:	add	r2, pc, r2
   2f444:	str	r2, [sp, #4]
   2f448:	add	r3, pc, r3
   2f44c:	ldr	r2, [pc, #232]	; 2f53c <blkid_probe_get_size@plt+0x28024>
   2f450:	add	r3, r3, #904	; 0x388
   2f454:	str	r3, [sp]
   2f458:	str	ip, [sp, #8]
   2f45c:	mov	r1, r7
   2f460:	ldr	r3, [pc, #216]	; 2f540 <blkid_probe_get_size@plt+0x28028>
   2f464:	add	r2, pc, r2
   2f468:	mov	r0, #7
   2f46c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2f470:	b	2f2f0 <blkid_probe_get_size@plt+0x27dd8>
   2f474:	ldr	r1, [r2, #8]
   2f478:	cmp	r1, #3
   2f47c:	bne	2f34c <blkid_probe_get_size@plt+0x27e34>
   2f480:	cmp	r3, #16
   2f484:	ldreq	ip, [r2, #12]
   2f488:	bne	2f34c <blkid_probe_get_size@plt+0x27e34>
   2f48c:	b	2f354 <blkid_probe_get_size@plt+0x27e3c>
   2f490:	ldr	r3, [pc, #172]	; 2f544 <blkid_probe_get_size@plt+0x2802c>
   2f494:	ldr	r2, [pc, #172]	; 2f548 <blkid_probe_get_size@plt+0x28030>
   2f498:	add	r3, pc, r3
   2f49c:	ldr	r1, [pc, #168]	; 2f54c <blkid_probe_get_size@plt+0x28034>
   2f4a0:	add	r3, r3, #884	; 0x374
   2f4a4:	str	r3, [sp]
   2f4a8:	mov	r0, r7
   2f4ac:	ldr	r3, [pc, #156]	; 2f550 <blkid_probe_get_size@plt+0x28038>
   2f4b0:	add	r2, pc, r2
   2f4b4:	add	r1, pc, r1
   2f4b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f4bc:	ldr	r3, [pc, #144]	; 2f554 <blkid_probe_get_size@plt+0x2803c>
   2f4c0:	add	r3, pc, r3
   2f4c4:	ldr	r3, [r3]
   2f4c8:	cmp	r3, #6
   2f4cc:	ble	2f2f8 <blkid_probe_get_size@plt+0x27de0>
   2f4d0:	ldr	r2, [pc, #128]	; 2f558 <blkid_probe_get_size@plt+0x28040>
   2f4d4:	ldr	r3, [pc, #128]	; 2f55c <blkid_probe_get_size@plt+0x28044>
   2f4d8:	add	r2, pc, r2
   2f4dc:	str	r2, [sp, #4]
   2f4e0:	add	r3, pc, r3
   2f4e4:	ldr	r2, [pc, #116]	; 2f560 <blkid_probe_get_size@plt+0x28048>
   2f4e8:	add	r3, r3, #904	; 0x388
   2f4ec:	str	r3, [sp]
   2f4f0:	mov	r1, r7
   2f4f4:	ldr	r3, [pc, #104]	; 2f564 <blkid_probe_get_size@plt+0x2804c>
   2f4f8:	add	r2, pc, r2
   2f4fc:	mov	r0, #7
   2f500:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   2f504:	ldr	r0, [r4]
   2f508:	b	2f3ac <blkid_probe_get_size@plt+0x27e94>
   2f50c:	bl	6fb4 <__stack_chk_fail@plt>
   2f510:	andeq	r8, r6, r8, lsl r9
   2f514:	andeq	r0, r0, ip, lsr r4
   2f518:	andeq	r8, r6, ip, asr lr
   2f51c:	andeq	r0, r0, lr, lsl #2
   2f520:	andeq	r8, r6, r4, ror sp
   2f524:	andeq	lr, r3, r4, lsl r8
   2f528:	andeq	sp, r3, r0, lsl r4
   2f52c:	muleq	r3, ip, r1
   2f530:	andeq	r0, r0, r9, lsl #2
   2f534:	strdeq	lr, [r3], -r0
   2f538:			; <UNDEFINED> instruction: 0x0003d3b0
   2f53c:	andeq	lr, r3, r8, lsr r1
   2f540:	andeq	r0, r0, r2, lsl r1
   2f544:	andeq	sp, r3, r0, ror #6
   2f548:	andeq	lr, r3, ip, ror #1
   2f54c:	andeq	lr, r3, r8, lsr #2
   2f550:	andeq	r0, r0, r2, lsl #2
   2f554:	andeq	r8, r6, ip, ror ip
   2f558:	andeq	lr, r3, r0, asr #14
   2f55c:	andeq	sp, r3, r8, lsl r3
   2f560:	andeq	lr, r3, r4, lsr #1
   2f564:	andeq	r0, r0, fp, lsl #2
   2f568:	subs	r2, r0, #0
   2f56c:	push	{lr}		; (str lr, [sp, #-4]!)
   2f570:	sub	sp, sp, #12
   2f574:	beq	2f594 <blkid_probe_get_size@plt+0x2807c>
   2f578:	ldrb	r3, [r2, #532]	; 0x214
   2f57c:	tst	r3, #1
   2f580:	bne	2f5bc <blkid_probe_get_size@plt+0x280a4>
   2f584:	orr	r3, r3, #1
   2f588:	strb	r3, [r2, #532]	; 0x214
   2f58c:	add	sp, sp, #12
   2f590:	pop	{pc}		; (ldr pc, [sp], #4)
   2f594:	ldr	r2, [pc, #76]	; 2f5e8 <blkid_probe_get_size@plt+0x280d0>
   2f598:	ldr	r1, [pc, #76]	; 2f5ec <blkid_probe_get_size@plt+0x280d4>
   2f59c:	add	r2, pc, r2
   2f5a0:	add	r2, r2, #924	; 0x39c
   2f5a4:	str	r2, [sp]
   2f5a8:	ldr	r2, [pc, #64]	; 2f5f0 <blkid_probe_get_size@plt+0x280d8>
   2f5ac:	ldr	r3, [pc, #64]	; 2f5f4 <blkid_probe_get_size@plt+0x280dc>
   2f5b0:	add	r2, pc, r2
   2f5b4:	add	r1, pc, r1
   2f5b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f5bc:	ldr	r2, [pc, #52]	; 2f5f8 <blkid_probe_get_size@plt+0x280e0>
   2f5c0:	ldr	r1, [pc, #52]	; 2f5fc <blkid_probe_get_size@plt+0x280e4>
   2f5c4:	add	r2, pc, r2
   2f5c8:	add	r2, r2, #924	; 0x39c
   2f5cc:	str	r2, [sp]
   2f5d0:	ldr	r2, [pc, #40]	; 2f600 <blkid_probe_get_size@plt+0x280e8>
   2f5d4:	ldr	r3, [pc, #40]	; 2f604 <blkid_probe_get_size@plt+0x280ec>
   2f5d8:	add	r2, pc, r2
   2f5dc:	add	r1, pc, r1
   2f5e0:	mov	r0, #0
   2f5e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f5e8:	andeq	sp, r3, ip, asr r2
   2f5ec:	andeq	r4, r4, ip, lsr r8
   2f5f0:	andeq	lr, r3, r8, lsr #13
   2f5f4:	andeq	r0, r0, r8, lsl #8
   2f5f8:	andeq	sp, r3, r4, lsr r2
   2f5fc:	andeq	lr, r3, ip, lsr #13
   2f600:	andeq	lr, r3, r0, lsl #13
   2f604:	andeq	r0, r0, r9, lsl #8
   2f608:	subs	r3, r0, #0
   2f60c:	push	{lr}		; (str lr, [sp, #-4]!)
   2f610:	sub	sp, sp, #12
   2f614:	beq	2f630 <blkid_probe_get_size@plt+0x28118>
   2f618:	ldr	r0, [r3, #12]
   2f61c:	cmp	r0, #0
   2f620:	beq	2f658 <blkid_probe_get_size@plt+0x28140>
   2f624:	ldr	r0, [r0, #8]
   2f628:	add	sp, sp, #12
   2f62c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f630:	ldr	r2, [pc, #72]	; 2f680 <blkid_probe_get_size@plt+0x28168>
   2f634:	ldr	r1, [pc, #72]	; 2f684 <blkid_probe_get_size@plt+0x2816c>
   2f638:	add	r2, pc, r2
   2f63c:	add	r2, r2, #944	; 0x3b0
   2f640:	str	r2, [sp]
   2f644:	ldr	r2, [pc, #60]	; 2f688 <blkid_probe_get_size@plt+0x28170>
   2f648:	ldr	r3, [pc, #60]	; 2f68c <blkid_probe_get_size@plt+0x28174>
   2f64c:	add	r2, pc, r2
   2f650:	add	r1, pc, r1
   2f654:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f658:	ldr	r3, [pc, #48]	; 2f690 <blkid_probe_get_size@plt+0x28178>
   2f65c:	ldr	r2, [pc, #48]	; 2f694 <blkid_probe_get_size@plt+0x2817c>
   2f660:	add	r3, pc, r3
   2f664:	ldr	r1, [pc, #44]	; 2f698 <blkid_probe_get_size@plt+0x28180>
   2f668:	add	r3, r3, #944	; 0x3b0
   2f66c:	str	r3, [sp]
   2f670:	add	r2, pc, r2
   2f674:	mov	r3, #952	; 0x3b8
   2f678:	add	r1, pc, r1
   2f67c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f680:	andeq	sp, r3, r0, asr #3
   2f684:	andeq	r4, r4, r0, lsr #15
   2f688:	andeq	lr, r3, ip, lsl #12
   2f68c:			; <UNDEFINED> instruction: 0x000003b7
   2f690:	muleq	r3, r8, r1
   2f694:	andeq	lr, r3, r8, ror #11
   2f698:	andeq	lr, r3, ip, lsl r6
   2f69c:	ldr	ip, [pc, #196]	; 2f768 <blkid_probe_get_size@plt+0x28250>
   2f6a0:	push	{r4, r5, r6, lr}
   2f6a4:	add	ip, pc, ip
   2f6a8:	ldr	lr, [pc, #188]	; 2f76c <blkid_probe_get_size@plt+0x28254>
   2f6ac:	sub	sp, sp, #16
   2f6b0:	mov	r5, r1
   2f6b4:	ldr	r4, [ip, lr]
   2f6b8:	mov	r1, ip
   2f6bc:	mov	r6, r3
   2f6c0:	ldr	r1, [r4]
   2f6c4:	subs	r3, r0, #0
   2f6c8:	str	r1, [sp, #12]
   2f6cc:	beq	2f730 <blkid_probe_get_size@plt+0x28218>
   2f6d0:	ldr	r0, [r3, #528]	; 0x210
   2f6d4:	add	r1, sp, #8
   2f6d8:	add	r0, r0, #1
   2f6dc:	ldr	r0, [r3, r0, lsl #4]
   2f6e0:	bl	2f0a4 <blkid_probe_get_size@plt+0x27b8c>
   2f6e4:	cmp	r0, #0
   2f6e8:	blt	2f718 <blkid_probe_get_size@plt+0x28200>
   2f6ec:	ldr	r3, [sp, #8]
   2f6f0:	cmp	r3, #0
   2f6f4:	beq	2f758 <blkid_probe_get_size@plt+0x28240>
   2f6f8:	ldrh	r2, [r3]
   2f6fc:	cmp	r2, r6
   2f700:	bne	2f75c <blkid_probe_get_size@plt+0x28244>
   2f704:	cmp	r5, #0
   2f708:	moveq	r0, r5
   2f70c:	ldrne	r3, [r3, #4]
   2f710:	movne	r0, #0
   2f714:	strne	r3, [r5]
   2f718:	ldr	r2, [sp, #12]
   2f71c:	ldr	r3, [r4]
   2f720:	cmp	r2, r3
   2f724:	bne	2f764 <blkid_probe_get_size@plt+0x2824c>
   2f728:	add	sp, sp, #16
   2f72c:	pop	{r4, r5, r6, pc}
   2f730:	ldr	r2, [pc, #56]	; 2f770 <blkid_probe_get_size@plt+0x28258>
   2f734:	ldr	r1, [pc, #56]	; 2f774 <blkid_probe_get_size@plt+0x2825c>
   2f738:	add	r2, pc, r2
   2f73c:	add	r2, r2, #968	; 0x3c8
   2f740:	str	r2, [sp]
   2f744:	ldr	r2, [pc, #44]	; 2f778 <blkid_probe_get_size@plt+0x28260>
   2f748:	mov	r3, #215	; 0xd7
   2f74c:	add	r2, pc, r2
   2f750:	add	r1, pc, r1
   2f754:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f758:	bl	2f060 <blkid_probe_get_size@plt+0x27b48>
   2f75c:	mvn	r0, #21
   2f760:	b	2f718 <blkid_probe_get_size@plt+0x28200>
   2f764:	bl	6fb4 <__stack_chk_fail@plt>
   2f768:	andeq	r8, r6, r4, asr #9
   2f76c:	andeq	r0, r0, ip, lsr r4
   2f770:	andeq	sp, r3, r0, asr #1
   2f774:	andeq	r4, r4, r0, lsr #13
   2f778:	andeq	lr, r3, ip, lsl #10
   2f77c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f780:	subs	r5, r0, #0
   2f784:	sub	sp, sp, #20
   2f788:	beq	2f8bc <blkid_probe_get_size@plt+0x283a4>
   2f78c:	mov	r9, r2
   2f790:	ldr	r2, [r5, #12]
   2f794:	cmp	r2, #0
   2f798:	beq	2f8e4 <blkid_probe_get_size@plt+0x283cc>
   2f79c:	ldrb	r0, [r5, #532]	; 0x214
   2f7a0:	ands	r0, r0, #1
   2f7a4:	bne	2f910 <blkid_probe_get_size@plt+0x283f8>
   2f7a8:	ldr	r7, [r2]
   2f7ac:	mov	r8, r3
   2f7b0:	add	r3, r7, #3
   2f7b4:	bic	r3, r3, #3
   2f7b8:	cmp	r7, r3
   2f7bc:	bne	2f93c <blkid_probe_get_size@plt+0x28424>
   2f7c0:	cmp	r9, #0
   2f7c4:	clz	r4, r8
   2f7c8:	lsr	r4, r4, #5
   2f7cc:	moveq	r4, #0
   2f7d0:	cmp	r4, #0
   2f7d4:	bne	2f964 <blkid_probe_get_size@plt+0x2844c>
   2f7d8:	mov	sl, r1
   2f7dc:	str	r2, [sp, #8]
   2f7e0:	bl	3bfd0 <blkid_probe_get_size@plt+0x34ab8>
   2f7e4:	add	r6, r8, #7
   2f7e8:	bic	r6, r6, #3
   2f7ec:	add	fp, r7, r6
   2f7f0:	add	r3, r8, #4
   2f7f4:	str	r3, [sp, #12]
   2f7f8:	cmp	r0, #8192	; 0x2000
   2f7fc:	movcs	r0, #8192	; 0x2000
   2f800:	cmp	r0, fp
   2f804:	bcc	2f98c <blkid_probe_get_size@plt+0x28474>
   2f808:	ldr	r2, [sp, #8]
   2f80c:	mov	r1, fp
   2f810:	mov	r0, r2
   2f814:	bl	6e94 <realloc@plt>
   2f818:	cmp	r0, #0
   2f81c:	beq	2f994 <blkid_probe_get_size@plt+0x2847c>
   2f820:	ldr	r2, [r5, #528]	; 0x210
   2f824:	str	r0, [r5, #12]
   2f828:	cmp	r2, #0
   2f82c:	add	ip, r0, r7
   2f830:	ldr	r3, [sp, #12]
   2f834:	beq	2f86c <blkid_probe_get_size@plt+0x28354>
   2f838:	uxth	r6, r6
   2f83c:	mov	r2, r5
   2f840:	b	2f848 <blkid_probe_get_size@plt+0x28330>
   2f844:	ldr	r0, [r5, #12]
   2f848:	ldr	lr, [r2, #20]
   2f84c:	add	r4, r4, #1
   2f850:	add	r2, r2, #16
   2f854:	ldrh	r1, [r0, lr]
   2f858:	add	r1, r6, r1
   2f85c:	strh	r1, [r0, lr]
   2f860:	ldr	r1, [r5, #528]	; 0x210
   2f864:	cmp	r1, r4
   2f868:	bhi	2f844 <blkid_probe_get_size@plt+0x2832c>
   2f86c:	mov	r0, ip
   2f870:	cmp	r9, #0
   2f874:	strh	sl, [ip, #2]
   2f878:	strh	r3, [r0], #4
   2f87c:	beq	2f88c <blkid_probe_get_size@plt+0x28374>
   2f880:	mov	r2, r8
   2f884:	mov	r1, r9
   2f888:	bl	72c0 <mempcpy@plt>
   2f88c:	ldr	r3, [r5, #12]
   2f890:	add	r2, r3, fp
   2f894:	subs	r2, r2, r0
   2f898:	bne	2f8ac <blkid_probe_get_size@plt+0x28394>
   2f89c:	str	fp, [r3]
   2f8a0:	mov	r0, r7
   2f8a4:	add	sp, sp, #20
   2f8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f8ac:	mov	r1, #0
   2f8b0:	bl	6c84 <memset@plt>
   2f8b4:	ldr	r3, [r5, #12]
   2f8b8:	b	2f89c <blkid_probe_get_size@plt+0x28384>
   2f8bc:	ldr	r2, [pc, #216]	; 2f99c <blkid_probe_get_size@plt+0x28484>
   2f8c0:	ldr	r1, [pc, #216]	; 2f9a0 <blkid_probe_get_size@plt+0x28488>
   2f8c4:	add	r2, pc, r2
   2f8c8:	add	r2, r2, #996	; 0x3e4
   2f8cc:	str	r2, [sp]
   2f8d0:	ldr	r2, [pc, #204]	; 2f9a4 <blkid_probe_get_size@plt+0x2848c>
   2f8d4:	mov	r3, #155	; 0x9b
   2f8d8:	add	r2, pc, r2
   2f8dc:	add	r1, pc, r1
   2f8e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f8e4:	ldr	r3, [pc, #188]	; 2f9a8 <blkid_probe_get_size@plt+0x28490>
   2f8e8:	mov	r0, r2
   2f8ec:	add	r3, pc, r3
   2f8f0:	ldr	r2, [pc, #180]	; 2f9ac <blkid_probe_get_size@plt+0x28494>
   2f8f4:	ldr	r1, [pc, #180]	; 2f9b0 <blkid_probe_get_size@plt+0x28498>
   2f8f8:	add	r3, r3, #996	; 0x3e4
   2f8fc:	str	r3, [sp]
   2f900:	add	r2, pc, r2
   2f904:	mov	r3, #156	; 0x9c
   2f908:	add	r1, pc, r1
   2f90c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f910:	ldr	r2, [pc, #156]	; 2f9b4 <blkid_probe_get_size@plt+0x2849c>
   2f914:	ldr	r1, [pc, #156]	; 2f9b8 <blkid_probe_get_size@plt+0x284a0>
   2f918:	add	r2, pc, r2
   2f91c:	add	r2, r2, #996	; 0x3e4
   2f920:	str	r2, [sp]
   2f924:	ldr	r2, [pc, #144]	; 2f9bc <blkid_probe_get_size@plt+0x284a4>
   2f928:	mov	r3, #157	; 0x9d
   2f92c:	add	r2, pc, r2
   2f930:	add	r1, pc, r1
   2f934:	mov	r0, #0
   2f938:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f93c:	ldr	r3, [pc, #124]	; 2f9c0 <blkid_probe_get_size@plt+0x284a8>
   2f940:	ldr	r2, [pc, #124]	; 2f9c4 <blkid_probe_get_size@plt+0x284ac>
   2f944:	add	r3, pc, r3
   2f948:	ldr	r1, [pc, #120]	; 2f9c8 <blkid_probe_get_size@plt+0x284b0>
   2f94c:	add	r3, r3, #996	; 0x3e4
   2f950:	str	r3, [sp]
   2f954:	add	r2, pc, r2
   2f958:	mov	r3, #158	; 0x9e
   2f95c:	add	r1, pc, r1
   2f960:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f964:	ldr	r3, [pc, #96]	; 2f9cc <blkid_probe_get_size@plt+0x284b4>
   2f968:	ldr	r2, [pc, #96]	; 2f9d0 <blkid_probe_get_size@plt+0x284b8>
   2f96c:	add	r3, pc, r3
   2f970:	ldr	r1, [pc, #92]	; 2f9d4 <blkid_probe_get_size@plt+0x284bc>
   2f974:	add	r3, r3, #996	; 0x3e4
   2f978:	str	r3, [sp]
   2f97c:	add	r2, pc, r2
   2f980:	mov	r3, #159	; 0x9f
   2f984:	add	r1, pc, r1
   2f988:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2f98c:	mvn	r7, #104	; 0x68
   2f990:	b	2f8a0 <blkid_probe_get_size@plt+0x28388>
   2f994:	mvn	r7, #11
   2f998:	b	2f8a0 <blkid_probe_get_size@plt+0x28388>
   2f99c:	andeq	ip, r3, r4, lsr pc
   2f9a0:	andeq	r4, r4, r4, lsl r5
   2f9a4:	andeq	lr, r3, r0, lsl #7
   2f9a8:	andeq	ip, r3, ip, lsl #30
   2f9ac:	andeq	lr, r3, r8, asr r3
   2f9b0:	andeq	lr, r3, ip, lsl #7
   2f9b4:	andeq	ip, r3, r0, ror #29
   2f9b8:	andeq	lr, r3, r8, asr r3
   2f9bc:	andeq	lr, r3, ip, lsr #6
   2f9c0:			; <UNDEFINED> instruction: 0x0003ceb4
   2f9c4:	andeq	lr, r3, r4, lsl #6
   2f9c8:	andeq	lr, r3, r0, asr #6
   2f9cc:	andeq	ip, r3, ip, lsl #29
   2f9d0:	ldrdeq	lr, [r3], -ip
   2f9d4:	andeq	lr, r3, ip, asr #6
   2f9d8:	ldr	r3, [pc, #340]	; 2fb34 <blkid_probe_get_size@plt+0x2861c>
   2f9dc:	ldr	ip, [pc, #340]	; 2fb38 <blkid_probe_get_size@plt+0x28620>
   2f9e0:	add	r3, pc, r3
   2f9e4:	push	{r4, r5, r6, r7, r8, lr}
   2f9e8:	sub	sp, sp, #16
   2f9ec:	ldr	r4, [r3, ip]
   2f9f0:	subs	r7, r0, #0
   2f9f4:	ldr	r3, [r4]
   2f9f8:	str	r3, [sp, #12]
   2f9fc:	beq	2fa90 <blkid_probe_get_size@plt+0x28578>
   2fa00:	ldrb	r3, [r7, #532]	; 0x214
   2fa04:	tst	r3, #1
   2fa08:	bne	2fac0 <blkid_probe_get_size@plt+0x285a8>
   2fa0c:	cmp	r2, #0
   2fa10:	mov	r5, r2
   2fa14:	beq	2faf4 <blkid_probe_get_size@plt+0x285dc>
   2fa18:	mov	r2, r1
   2fa1c:	mov	r6, r1
   2fa20:	mov	r3, #5
   2fa24:	add	r1, sp, #8
   2fa28:	bl	2f69c <blkid_probe_get_size@plt+0x28184>
   2fa2c:	cmp	r0, #0
   2fa30:	blt	2fa6c <blkid_probe_get_size@plt+0x28554>
   2fa34:	ldr	r8, [sp, #8]
   2fa38:	cmp	r8, #0
   2fa3c:	beq	2fa84 <blkid_probe_get_size@plt+0x2856c>
   2fa40:	add	r1, r8, #1
   2fa44:	mov	r0, r5
   2fa48:	bl	69cc <strnlen@plt>
   2fa4c:	cmp	r8, r0
   2fa50:	bcc	2fb28 <blkid_probe_get_size@plt+0x28610>
   2fa54:	add	r3, r0, #1
   2fa58:	mov	r2, r5
   2fa5c:	mov	r1, r6
   2fa60:	mov	r0, r7
   2fa64:	bl	2f77c <blkid_probe_get_size@plt+0x28264>
   2fa68:	and	r0, r0, r0, asr #31
   2fa6c:	ldr	r2, [sp, #12]
   2fa70:	ldr	r3, [r4]
   2fa74:	cmp	r2, r3
   2fa78:	bne	2fb30 <blkid_probe_get_size@plt+0x28618>
   2fa7c:	add	sp, sp, #16
   2fa80:	pop	{r4, r5, r6, r7, r8, pc}
   2fa84:	mov	r0, r5
   2fa88:	bl	723c <strlen@plt>
   2fa8c:	b	2fa54 <blkid_probe_get_size@plt+0x2853c>
   2fa90:	ldr	r2, [pc, #164]	; 2fb3c <blkid_probe_get_size@plt+0x28624>
   2fa94:	ldr	r1, [pc, #164]	; 2fb40 <blkid_probe_get_size@plt+0x28628>
   2fa98:	add	r2, pc, r2
   2fa9c:	add	r2, r2, #1008	; 0x3f0
   2faa0:	str	r2, [sp]
   2faa4:	ldr	r2, [pc, #152]	; 2fb44 <blkid_probe_get_size@plt+0x2862c>
   2faa8:	mov	r3, #233	; 0xe9
   2faac:	add	r2, pc, r2
   2fab0:	add	r1, pc, r1
   2fab4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fab8:	mvn	r0, #21
   2fabc:	b	2fa6c <blkid_probe_get_size@plt+0x28554>
   2fac0:	ldr	r2, [pc, #128]	; 2fb48 <blkid_probe_get_size@plt+0x28630>
   2fac4:	ldr	r1, [pc, #128]	; 2fb4c <blkid_probe_get_size@plt+0x28634>
   2fac8:	add	r2, pc, r2
   2facc:	add	r2, r2, #1008	; 0x3f0
   2fad0:	str	r2, [sp]
   2fad4:	ldr	r2, [pc, #116]	; 2fb50 <blkid_probe_get_size@plt+0x28638>
   2fad8:	mov	r0, #0
   2fadc:	mov	r3, #234	; 0xea
   2fae0:	add	r2, pc, r2
   2fae4:	add	r1, pc, r1
   2fae8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2faec:	mvn	r0, #0
   2faf0:	b	2fa6c <blkid_probe_get_size@plt+0x28554>
   2faf4:	ldr	r3, [pc, #88]	; 2fb54 <blkid_probe_get_size@plt+0x2863c>
   2faf8:	mov	r0, r2
   2fafc:	add	r3, pc, r3
   2fb00:	ldr	r2, [pc, #80]	; 2fb58 <blkid_probe_get_size@plt+0x28640>
   2fb04:	ldr	r1, [pc, #80]	; 2fb5c <blkid_probe_get_size@plt+0x28644>
   2fb08:	add	r3, r3, #1008	; 0x3f0
   2fb0c:	str	r3, [sp]
   2fb10:	add	r2, pc, r2
   2fb14:	mov	r3, #235	; 0xeb
   2fb18:	add	r1, pc, r1
   2fb1c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fb20:	mvn	r0, #21
   2fb24:	b	2fa6c <blkid_probe_get_size@plt+0x28554>
   2fb28:	mvn	r0, #21
   2fb2c:	b	2fa6c <blkid_probe_get_size@plt+0x28554>
   2fb30:	bl	6fb4 <__stack_chk_fail@plt>
   2fb34:	andeq	r8, r6, r8, lsl #3
   2fb38:	andeq	r0, r0, ip, lsr r4
   2fb3c:	andeq	ip, r3, r0, ror #26
   2fb40:	andeq	r4, r4, r0, asr #6
   2fb44:	andeq	lr, r3, ip, lsr #3
   2fb48:	andeq	ip, r3, r0, lsr sp
   2fb4c:	andeq	lr, r3, r4, lsr #3
   2fb50:	andeq	lr, r3, r8, ror r1
   2fb54:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   2fb58:	andeq	lr, r3, r8, asr #2
   2fb5c:	andeq	r4, r4, r4, ror #25
   2fb60:	push	{r4, r5, r6, lr}
   2fb64:	subs	r6, r0, #0
   2fb68:	beq	2fbd0 <blkid_probe_get_size@plt+0x286b8>
   2fb6c:	mcr	15, 0, r0, cr7, cr10, {5}
   2fb70:	ldrex	r4, [r6]
   2fb74:	sub	r4, r4, #1
   2fb78:	strex	r3, r4, [r6]
   2fb7c:	cmp	r3, #0
   2fb80:	bne	2fb70 <blkid_probe_get_size@plt+0x28658>
   2fb84:	cmp	r4, #0
   2fb88:	mcr	15, 0, r0, cr7, cr10, {5}
   2fb8c:	bne	2fbd0 <blkid_probe_get_size@plt+0x286b8>
   2fb90:	ldr	r0, [r6, #12]
   2fb94:	bl	69f0 <free@plt>
   2fb98:	mov	r5, r6
   2fb9c:	ldr	r0, [r5, #24]
   2fba0:	bl	69f0 <free@plt>
   2fba4:	ldr	r3, [r6, #528]	; 0x210
   2fba8:	add	r4, r4, #1
   2fbac:	cmp	r3, r4
   2fbb0:	add	r5, r5, #16
   2fbb4:	bcs	2fb9c <blkid_probe_get_size@plt+0x28684>
   2fbb8:	ldr	r4, [r6, #536]	; 0x218
   2fbbc:	mov	r0, r6
   2fbc0:	bl	69f0 <free@plt>
   2fbc4:	cmp	r4, #0
   2fbc8:	movne	r6, r4
   2fbcc:	bne	2fb6c <blkid_probe_get_size@plt+0x28654>
   2fbd0:	mov	r0, #0
   2fbd4:	pop	{r4, r5, r6, pc}
   2fbd8:	push	{r4, r5, r6, lr}
   2fbdc:	mov	r5, r0
   2fbe0:	mov	r4, r1
   2fbe4:	mov	r0, #1
   2fbe8:	mov	r1, #540	; 0x21c
   2fbec:	bl	7164 <calloc@plt>
   2fbf0:	cmp	r0, #0
   2fbf4:	movne	r2, #1
   2fbf8:	ldrbne	r3, [r0, #532]	; 0x214
   2fbfc:	ldrne	r1, [r5, #24]
   2fc00:	strne	r2, [r0]
   2fc04:	bicne	r3, r3, #1
   2fc08:	strne	r1, [r0, #8]
   2fc0c:	strne	r0, [r4]
   2fc10:	strbne	r3, [r0, #532]	; 0x214
   2fc14:	movne	r0, #0
   2fc18:	mvneq	r0, #11
   2fc1c:	pop	{r4, r5, r6, pc}
   2fc20:	ldr	r2, [pc, #60]	; 2fc64 <blkid_probe_get_size@plt+0x2874c>
   2fc24:	push	{lr}		; (str lr, [sp, #-4]!)
   2fc28:	add	r2, pc, r2
   2fc2c:	sub	sp, sp, #12
   2fc30:	add	r2, r2, #1040	; 0x410
   2fc34:	add	r2, r2, #4
   2fc38:	str	r2, [sp]
   2fc3c:	ldr	r1, [pc, #36]	; 2fc68 <blkid_probe_get_size@plt+0x28750>
   2fc40:	ldr	r2, [pc, #36]	; 2fc6c <blkid_probe_get_size@plt+0x28754>
   2fc44:	ldr	r3, [pc, #36]	; 2fc70 <blkid_probe_get_size@plt+0x28758>
   2fc48:	add	r2, pc, r2
   2fc4c:	add	r1, pc, r1
   2fc50:	mov	r0, #0
   2fc54:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fc58:	mov	r0, #0
   2fc5c:	add	sp, sp, #12
   2fc60:	pop	{pc}		; (ldr pc, [sp], #4)
   2fc64:	ldrdeq	ip, [r3], -r0
   2fc68:	andeq	r0, r4, ip, lsr #14
   2fc6c:	andeq	sp, r3, r4, ror r8
   2fc70:	andeq	r0, r0, fp, lsr #13
   2fc74:	ldr	r2, [pc, #44]	; 2fca8 <blkid_probe_get_size@plt+0x28790>
   2fc78:	push	{lr}		; (str lr, [sp, #-4]!)
   2fc7c:	add	r2, pc, r2
   2fc80:	sub	sp, sp, #12
   2fc84:	add	r2, r2, #1072	; 0x430
   2fc88:	str	r2, [sp]
   2fc8c:	ldr	r1, [pc, #24]	; 2fcac <blkid_probe_get_size@plt+0x28794>
   2fc90:	ldr	r2, [pc, #24]	; 2fcb0 <blkid_probe_get_size@plt+0x28798>
   2fc94:	ldr	r3, [pc, #24]	; 2fcb4 <blkid_probe_get_size@plt+0x2879c>
   2fc98:	add	r2, pc, r2
   2fc9c:	add	r1, pc, r1
   2fca0:	mov	r0, #0
   2fca4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2fca8:	andeq	ip, r3, ip, ror fp
   2fcac:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   2fcb0:	andeq	sp, r3, r4, lsr #16
   2fcb4:	andeq	r0, r0, r7, asr r1
   2fcb8:	push	{r4, r5, r6, lr}
   2fcbc:	subs	r4, r0, #0
   2fcc0:	sub	sp, sp, #8
   2fcc4:	beq	2fd60 <blkid_probe_get_size@plt+0x28848>
   2fcc8:	cmp	r4, #1
   2fccc:	mov	r5, r1
   2fcd0:	beq	2fd0c <blkid_probe_get_size@plt+0x287f4>
   2fcd4:	ldr	r3, [r4, #264]	; 0x108
   2fcd8:	cmp	r3, #5
   2fcdc:	beq	2fd98 <blkid_probe_get_size@plt+0x28880>
   2fce0:	ldr	r6, [r4, #228]	; 0xe4
   2fce4:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   2fce8:	cmp	r6, r0
   2fcec:	bne	2fdd0 <blkid_probe_get_size@plt+0x288b8>
   2fcf0:	ldrb	r3, [r4, #268]	; 0x10c
   2fcf4:	mov	r0, #0
   2fcf8:	str	r5, [r4, #272]	; 0x110
   2fcfc:	orr	r3, r3, #1
   2fd00:	strb	r3, [r4, #268]	; 0x10c
   2fd04:	add	sp, sp, #8
   2fd08:	pop	{r4, r5, r6, pc}
   2fd0c:	ldr	r0, [pc, #244]	; 2fe08 <blkid_probe_get_size@plt+0x288f0>
   2fd10:	add	r0, pc, r0
   2fd14:	bl	74dc <__tls_get_addr@plt>
   2fd18:	ldr	r3, [pc, #236]	; 2fe0c <blkid_probe_get_size@plt+0x288f4>
   2fd1c:	ldr	r4, [r3, r0]
   2fd20:	cmp	r4, #0
   2fd24:	bne	2fcd4 <blkid_probe_get_size@plt+0x287bc>
   2fd28:	ldr	r3, [pc, #224]	; 2fe10 <blkid_probe_get_size@plt+0x288f8>
   2fd2c:	ldr	r2, [pc, #224]	; 2fe14 <blkid_probe_get_size@plt+0x288fc>
   2fd30:	add	r3, pc, r3
   2fd34:	add	r3, r3, #1088	; 0x440
   2fd38:	ldr	r1, [pc, #216]	; 2fe18 <blkid_probe_get_size@plt+0x28900>
   2fd3c:	add	r3, r3, #4
   2fd40:	mov	r0, r4
   2fd44:	str	r3, [sp]
   2fd48:	add	r2, pc, r2
   2fd4c:	ldr	r3, [pc, #200]	; 2fe1c <blkid_probe_get_size@plt+0x28904>
   2fd50:	add	r1, pc, r1
   2fd54:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fd58:	mvn	r0, #64	; 0x40
   2fd5c:	b	2fd04 <blkid_probe_get_size@plt+0x287ec>
   2fd60:	ldr	r2, [pc, #184]	; 2fe20 <blkid_probe_get_size@plt+0x28908>
   2fd64:	ldr	r1, [pc, #184]	; 2fe24 <blkid_probe_get_size@plt+0x2890c>
   2fd68:	add	r2, pc, r2
   2fd6c:	add	r2, r2, #1088	; 0x440
   2fd70:	add	r2, r2, #4
   2fd74:	str	r2, [sp]
   2fd78:	ldr	r2, [pc, #168]	; 2fe28 <blkid_probe_get_size@plt+0x28910>
   2fd7c:	ldr	r3, [pc, #168]	; 2fe2c <blkid_probe_get_size@plt+0x28914>
   2fd80:	add	r2, pc, r2
   2fd84:	add	r1, pc, r1
   2fd88:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fd8c:	mvn	r0, #21
   2fd90:	add	sp, sp, #8
   2fd94:	pop	{r4, r5, r6, pc}
   2fd98:	ldr	r2, [pc, #144]	; 2fe30 <blkid_probe_get_size@plt+0x28918>
   2fd9c:	ldr	r1, [pc, #144]	; 2fe34 <blkid_probe_get_size@plt+0x2891c>
   2fda0:	add	r2, pc, r2
   2fda4:	add	r2, r2, #1088	; 0x440
   2fda8:	add	r2, r2, #4
   2fdac:	str	r2, [sp]
   2fdb0:	ldr	r2, [pc, #128]	; 2fe38 <blkid_probe_get_size@plt+0x28920>
   2fdb4:	mov	r0, #0
   2fdb8:	ldr	r3, [pc, #124]	; 2fe3c <blkid_probe_get_size@plt+0x28924>
   2fdbc:	add	r2, pc, r2
   2fdc0:	add	r1, pc, r1
   2fdc4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fdc8:	mvn	r0, #115	; 0x73
   2fdcc:	b	2fd04 <blkid_probe_get_size@plt+0x287ec>
   2fdd0:	ldr	r2, [pc, #104]	; 2fe40 <blkid_probe_get_size@plt+0x28928>
   2fdd4:	ldr	r1, [pc, #104]	; 2fe44 <blkid_probe_get_size@plt+0x2892c>
   2fdd8:	add	r2, pc, r2
   2fddc:	add	r2, r2, #1088	; 0x440
   2fde0:	add	r2, r2, #4
   2fde4:	str	r2, [sp]
   2fde8:	ldr	r2, [pc, #88]	; 2fe48 <blkid_probe_get_size@plt+0x28930>
   2fdec:	mov	r0, #0
   2fdf0:	ldr	r3, [pc, #84]	; 2fe4c <blkid_probe_get_size@plt+0x28934>
   2fdf4:	add	r2, pc, r2
   2fdf8:	add	r1, pc, r1
   2fdfc:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2fe00:	mvn	r0, #9
   2fe04:	b	2fd04 <blkid_probe_get_size@plt+0x287ec>
   2fe08:	andeq	r8, r6, r8, lsl #5
   2fe0c:	andeq	r0, r0, r4, asr r0
   2fe10:	andeq	ip, r3, r8, asr #21
   2fe14:	andeq	sp, r3, r4, ror r7
   2fe18:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   2fe1c:	andeq	r0, r0, r9, lsl sp
   2fe20:	muleq	r3, r0, sl
   2fe24:	andeq	r4, r4, ip, ror #17
   2fe28:	andeq	sp, r3, ip, lsr r7
   2fe2c:	andeq	r0, r0, r8, lsl sp
   2fe30:	andeq	ip, r3, r8, asr sl
   2fe34:	andeq	sp, r3, r0, asr #30
   2fe38:	andeq	sp, r3, r0, lsl #14
   2fe3c:	andeq	r0, r0, sl, lsl sp
   2fe40:	andeq	ip, r3, r0, lsr #20
   2fe44:	andeq	sp, r3, r8, lsr #30
   2fe48:	andeq	sp, r3, r8, asr #13
   2fe4c:	andeq	r0, r0, fp, lsl sp
   2fe50:	subs	r3, r0, #0
   2fe54:	beq	2fe64 <blkid_probe_get_size@plt+0x2894c>
   2fe58:	mov	r1, r2
   2fe5c:	ldr	r0, [r3, #8]
   2fe60:	b	2fcb8 <blkid_probe_get_size@plt+0x287a0>
   2fe64:	ldr	r2, [pc, #44]	; 2fe98 <blkid_probe_get_size@plt+0x28980>
   2fe68:	push	{lr}		; (str lr, [sp, #-4]!)
   2fe6c:	add	r2, pc, r2
   2fe70:	sub	sp, sp, #12
   2fe74:	add	r2, r2, #1104	; 0x450
   2fe78:	add	r2, r2, #4
   2fe7c:	str	r2, [sp]
   2fe80:	ldr	r1, [pc, #20]	; 2fe9c <blkid_probe_get_size@plt+0x28984>
   2fe84:	ldr	r2, [pc, #20]	; 2fea0 <blkid_probe_get_size@plt+0x28988>
   2fe88:	ldr	r3, [pc, #20]	; 2fea4 <blkid_probe_get_size@plt+0x2898c>
   2fe8c:	add	r2, pc, r2
   2fe90:	add	r1, pc, r1
   2fe94:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2fe98:	andeq	ip, r3, ip, lsl #19
   2fe9c:	andeq	r0, r4, r8, ror #9
   2fea0:	andeq	sp, r3, r0, lsr r6
   2fea4:	andeq	r0, r0, sp, lsl r4
   2fea8:	push	{lr}		; (str lr, [sp, #-4]!)
   2feac:	sub	sp, sp, #12
   2feb0:	subs	r3, r0, #0
   2feb4:	ldr	r1, [sp, #16]
   2feb8:	beq	2fecc <blkid_probe_get_size@plt+0x289b4>
   2febc:	ldr	r0, [r3, #8]
   2fec0:	add	sp, sp, #12
   2fec4:	pop	{lr}		; (ldr lr, [sp], #4)
   2fec8:	b	2fcb8 <blkid_probe_get_size@plt+0x287a0>
   2fecc:	ldr	r2, [pc, #36]	; 2fef8 <blkid_probe_get_size@plt+0x289e0>
   2fed0:	ldr	r1, [pc, #36]	; 2fefc <blkid_probe_get_size@plt+0x289e4>
   2fed4:	add	r2, pc, r2
   2fed8:	add	r2, r2, #1120	; 0x460
   2fedc:	add	r2, r2, #12
   2fee0:	str	r2, [sp]
   2fee4:	ldr	r2, [pc, #20]	; 2ff00 <blkid_probe_get_size@plt+0x289e8>
   2fee8:	mov	r3, #972	; 0x3cc
   2feec:	add	r2, pc, r2
   2fef0:	add	r1, pc, r1
   2fef4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   2fef8:	andeq	ip, r3, r4, lsr #18
   2fefc:	andeq	r0, r4, r8, lsl #9
   2ff00:	ldrdeq	sp, [r3], -r0
   2ff04:	push	{r4, r5, r6, lr}
   2ff08:	subs	r4, r0, #0
   2ff0c:	sub	sp, sp, #8
   2ff10:	beq	2ff48 <blkid_probe_get_size@plt+0x28a30>
   2ff14:	ldr	r3, [r4, #8]
   2ff18:	cmp	r3, #0
   2ff1c:	beq	2ff7c <blkid_probe_get_size@plt+0x28a64>
   2ff20:	ldr	r6, [r3, #228]	; 0xe4
   2ff24:	mov	r5, r1
   2ff28:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   2ff2c:	cmp	r6, r0
   2ff30:	bne	2ff80 <blkid_probe_get_size@plt+0x28a68>
   2ff34:	mov	r1, r5
   2ff38:	add	r0, r4, #20
   2ff3c:	add	sp, sp, #8
   2ff40:	pop	{r4, r5, r6, lr}
   2ff44:	b	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   2ff48:	ldr	r2, [pc, #100]	; 2ffb4 <blkid_probe_get_size@plt+0x28a9c>
   2ff4c:	ldr	r1, [pc, #100]	; 2ffb8 <blkid_probe_get_size@plt+0x28aa0>
   2ff50:	add	r2, pc, r2
   2ff54:	add	r2, r2, #1152	; 0x480
   2ff58:	str	r2, [sp]
   2ff5c:	ldr	r2, [pc, #88]	; 2ffbc <blkid_probe_get_size@plt+0x28aa4>
   2ff60:	ldr	r3, [pc, #88]	; 2ffc0 <blkid_probe_get_size@plt+0x28aa8>
   2ff64:	add	r2, pc, r2
   2ff68:	add	r1, pc, r1
   2ff6c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2ff70:	mvn	r0, #21
   2ff74:	add	sp, sp, #8
   2ff78:	pop	{r4, r5, r6, pc}
   2ff7c:	bl	2fc74 <blkid_probe_get_size@plt+0x2875c>
   2ff80:	ldr	r2, [pc, #60]	; 2ffc4 <blkid_probe_get_size@plt+0x28aac>
   2ff84:	ldr	r1, [pc, #60]	; 2ffc8 <blkid_probe_get_size@plt+0x28ab0>
   2ff88:	add	r2, pc, r2
   2ff8c:	add	r2, r2, #1152	; 0x480
   2ff90:	str	r2, [sp]
   2ff94:	ldr	r2, [pc, #48]	; 2ffcc <blkid_probe_get_size@plt+0x28ab4>
   2ff98:	mov	r0, #0
   2ff9c:	ldr	r3, [pc, #44]	; 2ffd0 <blkid_probe_get_size@plt+0x28ab8>
   2ffa0:	add	r2, pc, r2
   2ffa4:	add	r1, pc, r1
   2ffa8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   2ffac:	mvn	r0, #9
   2ffb0:	b	2ff74 <blkid_probe_get_size@plt+0x28a5c>
   2ffb4:	andeq	ip, r3, r8, lsr #17
   2ffb8:	andeq	r0, r4, r0, lsl r4
   2ffbc:	andeq	sp, r3, r8, asr r5
   2ffc0:	muleq	r0, r8, r6
   2ffc4:	andeq	ip, r3, r0, ror r8
   2ffc8:	muleq	r3, r4, sp
   2ffcc:	andeq	sp, r3, ip, lsl r5
   2ffd0:	muleq	r0, r9, r6
   2ffd4:	push	{r4, r5, lr}
   2ffd8:	subs	r4, r0, #0
   2ffdc:	sub	sp, sp, #12
   2ffe0:	beq	300b0 <blkid_probe_get_size@plt+0x28b98>
   2ffe4:	cmp	r2, #17
   2ffe8:	mov	r5, r2
   2ffec:	beq	3009c <blkid_probe_get_size@plt+0x28b84>
   2fff0:	ldr	r3, [r4, #192]	; 0xc0
   2fff4:	cmp	r3, #0
   2fff8:	beq	30014 <blkid_probe_get_size@plt+0x28afc>
   2fffc:	ldr	r3, [r3, r5, lsl #2]
   30000:	cmp	r3, #0
   30004:	beq	30014 <blkid_probe_get_size@plt+0x28afc>
   30008:	ldrb	r3, [r3, #24]
   3000c:	tst	r3, #224	; 0xe0
   30010:	bne	300a8 <blkid_probe_get_size@plt+0x28b90>
   30014:	ldr	r0, [r4, #196]	; 0xc4
   30018:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   3001c:	subs	r1, r0, #0
   30020:	beq	30030 <blkid_probe_get_size@plt+0x28b18>
   30024:	mov	r2, r5
   30028:	mov	r0, r4
   3002c:	bl	2de1c <blkid_probe_get_size@plt+0x26904>
   30030:	ldr	r3, [r4, #192]	; 0xc0
   30034:	ldr	r0, [r4, #196]	; 0xc4
   30038:	cmp	r3, #0
   3003c:	beq	3006c <blkid_probe_get_size@plt+0x28b54>
   30040:	ldr	r1, [r3, r5, lsl #2]
   30044:	cmp	r1, #0
   30048:	beq	3006c <blkid_probe_get_size@plt+0x28b54>
   3004c:	add	r1, r1, #32
   30050:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   30054:	subs	r1, r0, #0
   30058:	beq	30068 <blkid_probe_get_size@plt+0x28b50>
   3005c:	mov	r2, r5
   30060:	mov	r0, r4
   30064:	bl	2de1c <blkid_probe_get_size@plt+0x26904>
   30068:	ldr	r0, [r4, #196]	; 0xc4
   3006c:	ldr	r1, [pc, #100]	; 300d8 <blkid_probe_get_size@plt+0x28bc0>
   30070:	add	r1, pc, r1
   30074:	add	r1, r1, #1200	; 0x4b0
   30078:	add	r1, r1, #8
   3007c:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   30080:	subs	r1, r0, #0
   30084:	beq	300a8 <blkid_probe_get_size@plt+0x28b90>
   30088:	mov	r2, r5
   3008c:	mov	r0, r4
   30090:	add	sp, sp, #12
   30094:	pop	{r4, r5, lr}
   30098:	b	2de1c <blkid_probe_get_size@plt+0x26904>
   3009c:	ldr	r3, [r4, #204]	; 0xcc
   300a0:	cmp	r3, #0
   300a4:	beq	2fff0 <blkid_probe_get_size@plt+0x28ad8>
   300a8:	add	sp, sp, #12
   300ac:	pop	{r4, r5, pc}
   300b0:	ldr	r2, [pc, #36]	; 300dc <blkid_probe_get_size@plt+0x28bc4>
   300b4:	ldr	r1, [pc, #36]	; 300e0 <blkid_probe_get_size@plt+0x28bc8>
   300b8:	add	r2, pc, r2
   300bc:	add	r2, r2, #1184	; 0x4a0
   300c0:	str	r2, [sp]
   300c4:	ldr	r2, [pc, #24]	; 300e4 <blkid_probe_get_size@plt+0x28bcc>
   300c8:	mov	r3, #608	; 0x260
   300cc:	add	r2, pc, r2
   300d0:	add	r1, pc, r1
   300d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   300d8:	andeq	ip, r3, r8, lsl #15
   300dc:	andeq	ip, r3, r0, asr #14
   300e0:	andeq	r4, r4, r0, lsr #11
   300e4:	strdeq	sp, [r3], -r0
   300e8:	ldr	r3, [pc, #628]	; 30364 <blkid_probe_get_size@plt+0x28e4c>
   300ec:	ldr	ip, [pc, #628]	; 30368 <blkid_probe_get_size@plt+0x28e50>
   300f0:	add	r3, pc, r3
   300f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   300f8:	sub	sp, sp, #172	; 0xac
   300fc:	ldr	sl, [r3, ip]
   30100:	subs	r4, r0, #0
   30104:	ldr	r3, [sl]
   30108:	str	r3, [sp, #164]	; 0xa4
   3010c:	beq	302fc <blkid_probe_get_size@plt+0x28de4>
   30110:	ldr	r7, [r4, #228]	; 0xe4
   30114:	mov	r5, r1
   30118:	mov	r6, r2
   3011c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   30120:	cmp	r7, r0
   30124:	bne	30324 <blkid_probe_get_size@plt+0x28e0c>
   30128:	ldr	r3, [r4, #192]	; 0xc0
   3012c:	cmp	r3, #0
   30130:	beq	3019c <blkid_probe_get_size@plt+0x28c84>
   30134:	ldr	r3, [r3, r5, lsl #2]
   30138:	cmp	r3, #0
   3013c:	beq	3019c <blkid_probe_get_size@plt+0x28c84>
   30140:	ldrd	r2, [r3, #32]
   30144:	strd	r2, [sp, #8]
   30148:	add	r1, sp, #8
   3014c:	ldr	r0, [r4, #196]	; 0xc4
   30150:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   30154:	subs	r7, r0, #0
   30158:	beq	301ac <blkid_probe_get_size@plt+0x28c94>
   3015c:	add	r8, r7, #16
   30160:	mov	r0, r8
   30164:	mov	r1, r5
   30168:	bl	72b4 <sigismember@plt>
   3016c:	cmp	r0, #0
   30170:	ble	30228 <blkid_probe_get_size@plt+0x28d10>
   30174:	cmp	r6, #0
   30178:	strne	r7, [r6]
   3017c:	mov	r8, #0
   30180:	ldr	r2, [sp, #164]	; 0xa4
   30184:	ldr	r3, [sl]
   30188:	mov	r0, r8
   3018c:	cmp	r2, r3
   30190:	bne	30360 <blkid_probe_get_size@plt+0x28e48>
   30194:	add	sp, sp, #172	; 0xac
   30198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3019c:	mov	r2, #0
   301a0:	mov	r3, #0
   301a4:	strd	r2, [sp, #8]
   301a8:	b	30148 <blkid_probe_get_size@plt+0x28c30>
   301ac:	ldr	r1, [pc, #440]	; 3036c <blkid_probe_get_size@plt+0x28e54>
   301b0:	mov	r2, r7
   301b4:	add	r1, pc, r1
   301b8:	add	r1, r1, #104	; 0x68
   301bc:	add	r0, r4, #196	; 0xc4
   301c0:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   301c4:	subs	r8, r0, #0
   301c8:	blt	30180 <blkid_probe_get_size@plt+0x28c68>
   301cc:	mov	r0, #152	; 0x98
   301d0:	bl	7230 <malloc@plt>
   301d4:	subs	r7, r0, #0
   301d8:	beq	30358 <blkid_probe_get_size@plt+0x28e40>
   301dc:	ldrd	r8, [sp, #8]
   301e0:	mov	r2, #152	; 0x98
   301e4:	mov	r1, #0
   301e8:	bl	6c84 <memset@plt>
   301ec:	mov	r1, r7
   301f0:	mov	r2, #3
   301f4:	mvn	r3, #0
   301f8:	ldr	r0, [r4, #196]	; 0xc4
   301fc:	strd	r2, [r7]
   30200:	strd	r8, [r1, #8]!
   30204:	mov	r2, r7
   30208:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   3020c:	subs	r8, r0, #0
   30210:	movge	r9, #1
   30214:	addge	r8, r7, #16
   30218:	bge	3022c <blkid_probe_get_size@plt+0x28d14>
   3021c:	mov	r0, r7
   30220:	bl	69f0 <free@plt>
   30224:	b	30180 <blkid_probe_get_size@plt+0x28c68>
   30228:	mov	r9, #0
   3022c:	add	fp, sp, #36	; 0x24
   30230:	mov	r2, #128	; 0x80
   30234:	mov	r1, r8
   30238:	mov	r0, fp
   3023c:	bl	71e8 <memcpy@plt>
   30240:	mov	r1, r5
   30244:	mov	r0, fp
   30248:	bl	6d20 <sigaddset@plt>
   3024c:	cmp	r0, #0
   30250:	blt	3032c <blkid_probe_get_size@plt+0x28e14>
   30254:	ldr	r2, [pc, #276]	; 30370 <blkid_probe_get_size@plt+0x28e58>
   30258:	mov	r1, fp
   3025c:	ldr	r0, [r7, #4]
   30260:	bl	6b34 <signalfd@plt>
   30264:	subs	r5, r0, #0
   30268:	blt	302d8 <blkid_probe_get_size@plt+0x28dc0>
   3026c:	mov	r1, fp
   30270:	mov	r0, r8
   30274:	mov	r2, #128	; 0x80
   30278:	bl	71e8 <memcpy@plt>
   3027c:	ldr	r3, [r7, #4]
   30280:	cmp	r3, #0
   30284:	bge	30174 <blkid_probe_get_size@plt+0x28c5c>
   30288:	mov	r0, r5
   3028c:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   30290:	mov	r8, #0
   30294:	mov	r2, #1
   30298:	mov	r1, r2
   3029c:	str	r2, [sp, #16]
   302a0:	add	r3, sp, #16
   302a4:	str	r0, [r7, #4]
   302a8:	str	r7, [sp, #24]
   302ac:	str	r8, [sp, #28]
   302b0:	str	r8, [sp, #20]
   302b4:	ldr	r0, [r4, #4]
   302b8:	ldr	r2, [r7, #4]
   302bc:	bl	6cb4 <epoll_ctl@plt>
   302c0:	cmp	r0, r8
   302c4:	blt	302d8 <blkid_probe_get_size@plt+0x28dc0>
   302c8:	cmp	r6, #0
   302cc:	strne	r7, [r6]
   302d0:	bne	30180 <blkid_probe_get_size@plt+0x28c68>
   302d4:	b	3017c <blkid_probe_get_size@plt+0x28c64>
   302d8:	bl	732c <__errno_location@plt>
   302dc:	cmp	r9, #0
   302e0:	ldr	r8, [r0]
   302e4:	rsb	r8, r8, #0
   302e8:	beq	30180 <blkid_probe_get_size@plt+0x28c68>
   302ec:	mov	r1, r7
   302f0:	mov	r0, r4
   302f4:	bl	2dd9c <blkid_probe_get_size@plt+0x26884>
   302f8:	b	30180 <blkid_probe_get_size@plt+0x28c68>
   302fc:	ldr	r2, [pc, #112]	; 30374 <blkid_probe_get_size@plt+0x28e5c>
   30300:	ldr	r1, [pc, #112]	; 30378 <blkid_probe_get_size@plt+0x28e60>
   30304:	add	r2, pc, r2
   30308:	add	r2, r2, #1216	; 0x4c0
   3030c:	str	r2, [sp]
   30310:	ldr	r2, [pc, #100]	; 3037c <blkid_probe_get_size@plt+0x28e64>
   30314:	mov	r3, #496	; 0x1f0
   30318:	add	r2, pc, r2
   3031c:	add	r1, pc, r1
   30320:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30324:	mvn	r8, #9
   30328:	b	30180 <blkid_probe_get_size@plt+0x28c68>
   3032c:	ldr	r2, [pc, #76]	; 30380 <blkid_probe_get_size@plt+0x28e68>
   30330:	ldr	r1, [pc, #76]	; 30384 <blkid_probe_get_size@plt+0x28e6c>
   30334:	add	r2, pc, r2
   30338:	add	r2, r2, #1216	; 0x4c0
   3033c:	str	r2, [sp]
   30340:	ldr	r2, [pc, #64]	; 30388 <blkid_probe_get_size@plt+0x28e70>
   30344:	ldr	r3, [pc, #64]	; 3038c <blkid_probe_get_size@plt+0x28e74>
   30348:	add	r2, pc, r2
   3034c:	add	r1, pc, r1
   30350:	mov	r0, #0
   30354:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30358:	mvn	r8, #11
   3035c:	b	30180 <blkid_probe_get_size@plt+0x28c68>
   30360:	bl	6fb4 <__stack_chk_fail@plt>
   30364:	andeq	r7, r6, r8, ror sl
   30368:	andeq	r0, r0, ip, lsr r4
   3036c:	ldrdeq	r9, [r5], -ip
   30370:	andeq	r0, r8, r0, lsl #16
   30374:	strdeq	ip, [r3], -r4
   30378:	andeq	r4, r4, r4, asr r3
   3037c:	andeq	sp, r3, r4, lsr #3
   30380:	andeq	ip, r3, r4, asr #9
   30384:	andeq	sp, r3, ip, lsl #20
   30388:	andeq	sp, r3, r4, ror r1
   3038c:	andeq	r0, r0, sl, lsl r2
   30390:	subs	r3, r0, #0
   30394:	beq	303e4 <blkid_probe_get_size@plt+0x28ecc>
   30398:	sub	r1, r1, #1
   3039c:	cmp	r1, #4
   303a0:	addls	pc, pc, r1, lsl #2
   303a4:	b	30418 <blkid_probe_get_size@plt+0x28f00>
   303a8:	b	303c4 <blkid_probe_get_size@plt+0x28eac>
   303ac:	b	303cc <blkid_probe_get_size@plt+0x28eb4>
   303b0:	b	303d4 <blkid_probe_get_size@plt+0x28ebc>
   303b4:	b	303dc <blkid_probe_get_size@plt+0x28ec4>
   303b8:	b	303bc <blkid_probe_get_size@plt+0x28ea4>
   303bc:	add	r0, r3, #152	; 0x98
   303c0:	bx	lr
   303c4:	add	r0, r3, #24
   303c8:	bx	lr
   303cc:	add	r0, r3, #56	; 0x38
   303d0:	bx	lr
   303d4:	add	r0, r3, #88	; 0x58
   303d8:	bx	lr
   303dc:	add	r0, r3, #120	; 0x78
   303e0:	bx	lr
   303e4:	ldr	r2, [pc, #52]	; 30420 <blkid_probe_get_size@plt+0x28f08>
   303e8:	push	{lr}		; (str lr, [sp, #-4]!)
   303ec:	add	r2, pc, r2
   303f0:	sub	sp, sp, #12
   303f4:	add	r2, r2, #1232	; 0x4d0
   303f8:	add	r2, r2, #8
   303fc:	str	r2, [sp]
   30400:	ldr	r1, [pc, #28]	; 30424 <blkid_probe_get_size@plt+0x28f0c>
   30404:	ldr	r2, [pc, #28]	; 30428 <blkid_probe_get_size@plt+0x28f10>
   30408:	ldr	r3, [pc, #28]	; 3042c <blkid_probe_get_size@plt+0x28f14>
   3040c:	add	r2, pc, r2
   30410:	add	r1, pc, r1
   30414:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30418:	mov	r0, #0
   3041c:	bx	lr
   30420:	andeq	ip, r3, ip, lsl #8
   30424:	andeq	r4, r4, r0, ror #4
   30428:	strheq	sp, [r3], -r0
   3042c:	andeq	r0, r0, r1, asr #3
   30430:	push	{r4, r5, r6, r7, lr}
   30434:	subs	r4, r0, #0
   30438:	sub	sp, sp, #12
   3043c:	beq	305d4 <blkid_probe_get_size@plt+0x290bc>
   30440:	ldrb	r3, [r4, #24]
   30444:	and	r3, r3, #31
   30448:	cmp	r3, #10
   3044c:	beq	305fc <blkid_probe_get_size@plt+0x290e4>
   30450:	ldrb	r3, [r4, #25]
   30454:	mov	r5, r1
   30458:	and	r2, r3, #1
   3045c:	cmp	r2, r1
   30460:	beq	304d0 <blkid_probe_get_size@plt+0x28fb8>
   30464:	bic	r2, r3, #1
   30468:	and	r3, r1, #1
   3046c:	orr	r3, r3, r2
   30470:	cmp	r1, #0
   30474:	strb	r3, [r4, #25]
   30478:	add	r2, r4, #40	; 0x28
   3047c:	ldr	r3, [r4, #8]
   30480:	bne	304dc <blkid_probe_get_size@plt+0x28fc4>
   30484:	ldr	r0, [r3, #12]
   30488:	mov	r1, r4
   3048c:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30490:	cmp	r0, #0
   30494:	beq	30660 <blkid_probe_get_size@plt+0x29148>
   30498:	ldrb	r3, [r4, #24]
   3049c:	lsl	r1, r3, #27
   304a0:	asr	r1, r1, #27
   304a4:	sub	r2, r1, #1
   304a8:	cmp	r2, #4
   304ac:	bls	30590 <blkid_probe_get_size@plt+0x29078>
   304b0:	and	r3, r3, #31
   304b4:	cmp	r3, #6
   304b8:	moveq	r6, r5
   304bc:	orrne	r6, r5, #1
   304c0:	cmp	r6, #0
   304c4:	beq	30634 <blkid_probe_get_size@plt+0x2911c>
   304c8:	cmp	r3, #12
   304cc:	beq	3051c <blkid_probe_get_size@plt+0x29004>
   304d0:	mov	r0, #0
   304d4:	add	sp, sp, #12
   304d8:	pop	{r4, r5, r6, r7, pc}
   304dc:	ldrd	r6, [r3, #232]	; 0xe8
   304e0:	mov	r1, r4
   304e4:	strd	r6, [r4, #48]	; 0x30
   304e8:	ldr	r0, [r3, #12]
   304ec:	bl	3f7a0 <blkid_probe_get_size@plt+0x38288>
   304f0:	cmp	r0, #0
   304f4:	blt	30580 <blkid_probe_get_size@plt+0x29068>
   304f8:	ldrb	r3, [r4, #24]
   304fc:	lsl	r1, r3, #27
   30500:	asr	r1, r1, #27
   30504:	sub	r2, r1, #1
   30508:	cmp	r2, #4
   3050c:	bls	30590 <blkid_probe_get_size@plt+0x29078>
   30510:	and	r3, r3, #31
   30514:	cmp	r3, #12
   30518:	bne	304d0 <blkid_probe_get_size@plt+0x28fb8>
   3051c:	ldr	r0, [r4, #88]	; 0x58
   30520:	cmp	r0, #0
   30524:	beq	30688 <blkid_probe_get_size@plt+0x29170>
   30528:	ldr	r0, [r0, #32]
   3052c:	cmp	r0, #0
   30530:	beq	306d8 <blkid_probe_get_size@plt+0x291c0>
   30534:	cmp	r5, #0
   30538:	ldr	r3, [r0, #300]	; 0x12c
   3053c:	bne	30628 <blkid_probe_get_size@plt+0x29110>
   30540:	cmp	r3, #0
   30544:	subne	r3, r3, #1
   30548:	strne	r3, [r0, #300]	; 0x12c
   3054c:	movne	r0, r5
   30550:	bne	304d4 <blkid_probe_get_size@plt+0x28fbc>
   30554:	ldr	r3, [pc, #420]	; 30700 <blkid_probe_get_size@plt+0x291e8>
   30558:	ldr	r2, [pc, #420]	; 30704 <blkid_probe_get_size@plt+0x291ec>
   3055c:	add	r3, pc, r3
   30560:	ldr	r1, [pc, #416]	; 30708 <blkid_probe_get_size@plt+0x291f0>
   30564:	add	r3, r3, #1264	; 0x4f0
   30568:	str	r3, [sp]
   3056c:	mov	r0, r5
   30570:	ldr	r3, [pc, #404]	; 3070c <blkid_probe_get_size@plt+0x291f4>
   30574:	add	r2, pc, r2
   30578:	add	r1, pc, r1
   3057c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30580:	ldrb	r3, [r4, #25]
   30584:	bic	r3, r3, #1
   30588:	strb	r3, [r4, #25]
   3058c:	b	304d4 <blkid_probe_get_size@plt+0x28fbc>
   30590:	ldr	r0, [r4, #8]
   30594:	bl	30390 <blkid_probe_get_size@plt+0x28e78>
   30598:	subs	r6, r0, #0
   3059c:	beq	306b0 <blkid_probe_get_size@plt+0x29198>
   305a0:	add	r2, r4, #104	; 0x68
   305a4:	mov	r1, r4
   305a8:	ldr	r0, [r6, #8]
   305ac:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   305b0:	add	r2, r4, #108	; 0x6c
   305b4:	mov	r1, r4
   305b8:	ldr	r0, [r6, #12]
   305bc:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   305c0:	ldrb	r3, [r6, #24]
   305c4:	orr	r3, r3, #1
   305c8:	strb	r3, [r6, #24]
   305cc:	ldrb	r3, [r4, #24]
   305d0:	b	304b0 <blkid_probe_get_size@plt+0x28f98>
   305d4:	ldr	r2, [pc, #308]	; 30710 <blkid_probe_get_size@plt+0x291f8>
   305d8:	ldr	r1, [pc, #308]	; 30714 <blkid_probe_get_size@plt+0x291fc>
   305dc:	add	r2, pc, r2
   305e0:	add	r2, r2, #1264	; 0x4f0
   305e4:	str	r2, [sp]
   305e8:	ldr	r2, [pc, #296]	; 30718 <blkid_probe_get_size@plt+0x29200>
   305ec:	ldr	r3, [pc, #296]	; 3071c <blkid_probe_get_size@plt+0x29204>
   305f0:	add	r2, pc, r2
   305f4:	add	r1, pc, r1
   305f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   305fc:	ldr	r2, [pc, #284]	; 30720 <blkid_probe_get_size@plt+0x29208>
   30600:	ldr	r1, [pc, #284]	; 30724 <blkid_probe_get_size@plt+0x2920c>
   30604:	add	r2, pc, r2
   30608:	add	r2, r2, #1264	; 0x4f0
   3060c:	str	r2, [sp]
   30610:	ldr	r2, [pc, #272]	; 30728 <blkid_probe_get_size@plt+0x29210>
   30614:	mov	r3, #796	; 0x31c
   30618:	add	r2, pc, r2
   3061c:	add	r1, pc, r1
   30620:	mov	r0, #0
   30624:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30628:	add	r3, r3, #1
   3062c:	str	r3, [r0, #300]	; 0x12c
   30630:	b	304d0 <blkid_probe_get_size@plt+0x28fb8>
   30634:	ldr	r3, [r4, #8]
   30638:	add	r1, r4, #32
   3063c:	ldr	r0, [r3, #196]	; 0xc4
   30640:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   30644:	cmp	r0, #0
   30648:	beq	30658 <blkid_probe_get_size@plt+0x29140>
   3064c:	ldr	r3, [r0, #144]	; 0x90
   30650:	cmp	r4, r3
   30654:	streq	r6, [r0, #144]	; 0x90
   30658:	ldrb	r3, [r4, #24]
   3065c:	b	30510 <blkid_probe_get_size@plt+0x28ff8>
   30660:	ldr	r2, [pc, #196]	; 3072c <blkid_probe_get_size@plt+0x29214>
   30664:	ldr	r1, [pc, #196]	; 30730 <blkid_probe_get_size@plt+0x29218>
   30668:	add	r2, pc, r2
   3066c:	add	r2, r2, #1264	; 0x4f0
   30670:	str	r2, [sp]
   30674:	ldr	r2, [pc, #184]	; 30734 <blkid_probe_get_size@plt+0x2921c>
   30678:	mov	r3, #812	; 0x32c
   3067c:	add	r2, pc, r2
   30680:	add	r1, pc, r1
   30684:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30688:	ldr	r3, [pc, #168]	; 30738 <blkid_probe_get_size@plt+0x29220>
   3068c:	ldr	r2, [pc, #168]	; 3073c <blkid_probe_get_size@plt+0x29224>
   30690:	add	r3, pc, r3
   30694:	ldr	r1, [pc, #164]	; 30740 <blkid_probe_get_size@plt+0x29228>
   30698:	add	r3, r3, #1264	; 0x4f0
   3069c:	str	r3, [sp]
   306a0:	add	r2, pc, r2
   306a4:	ldr	r3, [pc, #152]	; 30744 <blkid_probe_get_size@plt+0x2922c>
   306a8:	add	r1, pc, r1
   306ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   306b0:	ldr	r2, [pc, #144]	; 30748 <blkid_probe_get_size@plt+0x29230>
   306b4:	ldr	r1, [pc, #144]	; 3074c <blkid_probe_get_size@plt+0x29234>
   306b8:	add	r2, pc, r2
   306bc:	add	r2, r2, #1264	; 0x4f0
   306c0:	str	r2, [sp]
   306c4:	ldr	r2, [pc, #132]	; 30750 <blkid_probe_get_size@plt+0x29238>
   306c8:	ldr	r3, [pc, #132]	; 30754 <blkid_probe_get_size@plt+0x2923c>
   306cc:	add	r2, pc, r2
   306d0:	add	r1, pc, r1
   306d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   306d8:	ldr	r3, [pc, #120]	; 30758 <blkid_probe_get_size@plt+0x29240>
   306dc:	ldr	r2, [pc, #120]	; 3075c <blkid_probe_get_size@plt+0x29244>
   306e0:	add	r3, pc, r3
   306e4:	ldr	r1, [pc, #116]	; 30760 <blkid_probe_get_size@plt+0x29248>
   306e8:	add	r3, r3, #1264	; 0x4f0
   306ec:	str	r3, [sp]
   306f0:	add	r2, pc, r2
   306f4:	mov	r3, #836	; 0x344
   306f8:	add	r1, pc, r1
   306fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30700:	muleq	r3, ip, r2
   30704:	andeq	ip, r3, r8, asr #30
   30708:	andeq	sp, r3, r8, ror #16
   3070c:	andeq	r0, r0, r9, asr #6
   30710:	andeq	ip, r3, ip, lsl r2
   30714:	andeq	pc, r3, r4, lsl #27
   30718:	andeq	ip, r3, ip, asr #29
   3071c:	andeq	r0, r0, fp, lsl r3
   30720:	strdeq	ip, [r3], -r4
   30724:	andeq	sp, r3, ip, asr r7
   30728:	andeq	ip, r3, r4, lsr #29
   3072c:	muleq	r3, r0, r1
   30730:	andeq	sp, r3, r0, lsl r7
   30734:	andeq	ip, r3, r0, asr #28
   30738:	andeq	ip, r3, r8, ror #2
   3073c:	andeq	ip, r3, ip, lsl lr
   30740:	andeq	sp, r3, r0, lsr #14
   30744:	andeq	r0, r0, r3, asr #6
   30748:	andeq	ip, r3, r0, asr #2
   3074c:	muleq	r3, r8, r9
   30750:	strdeq	ip, [r3], -r0
   30754:	andeq	r0, r0, r2, lsr r3
   30758:	andeq	ip, r3, r8, lsl r1
   3075c:	andeq	ip, r3, ip, asr #27
   30760:	andeq	sp, r3, r0, ror #18
   30764:	push	{r4, r5, r6, r7, lr}
   30768:	sub	sp, sp, #12
   3076c:	cmp	r0, #0
   30770:	ldr	r5, [sp, #32]
   30774:	movne	r6, r2
   30778:	movne	r7, r3
   3077c:	bne	307e8 <blkid_probe_get_size@plt+0x292d0>
   30780:	b	30804 <blkid_probe_get_size@plt+0x292ec>
   30784:	ldrd	r2, [r4, #88]	; 0x58
   30788:	cmp	r7, r3
   3078c:	cmpeq	r6, r2
   30790:	bcc	307f8 <blkid_probe_get_size@plt+0x292e0>
   30794:	ldrb	r3, [r4, #24]
   30798:	ands	r3, r3, #224	; 0xe0
   3079c:	beq	307f8 <blkid_probe_get_size@plt+0x292e0>
   307a0:	ldrb	r3, [r4, #25]
   307a4:	tst	r3, #1
   307a8:	bne	307f8 <blkid_probe_get_size@plt+0x292e0>
   307ac:	mov	r1, #1
   307b0:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   307b4:	cmp	r0, #0
   307b8:	blt	307fc <blkid_probe_get_size@plt+0x292e4>
   307bc:	add	r2, r4, #104	; 0x68
   307c0:	mov	r1, r4
   307c4:	ldr	r0, [r5, #8]
   307c8:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   307cc:	add	r2, r4, #108	; 0x6c
   307d0:	mov	r1, r4
   307d4:	ldr	r0, [r5, #12]
   307d8:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   307dc:	ldrb	r3, [r5, #24]
   307e0:	orr	r3, r3, #1
   307e4:	strb	r3, [r5, #24]
   307e8:	ldr	r0, [r5, #8]
   307ec:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   307f0:	subs	r4, r0, #0
   307f4:	bne	30784 <blkid_probe_get_size@plt+0x2926c>
   307f8:	mov	r0, #0
   307fc:	add	sp, sp, #12
   30800:	pop	{r4, r5, r6, r7, pc}
   30804:	ldr	r2, [pc, #36]	; 30830 <blkid_probe_get_size@plt+0x29318>
   30808:	ldr	r1, [pc, #36]	; 30834 <blkid_probe_get_size@plt+0x2931c>
   3080c:	add	r2, pc, r2
   30810:	add	r2, r2, #1280	; 0x500
   30814:	add	r2, r2, #4
   30818:	str	r2, [sp]
   3081c:	ldr	r2, [pc, #20]	; 30838 <blkid_probe_get_size@plt+0x29320>
   30820:	ldr	r3, [pc, #20]	; 3083c <blkid_probe_get_size@plt+0x29324>
   30824:	add	r2, pc, r2
   30828:	add	r1, pc, r1
   3082c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30830:	andeq	fp, r3, ip, ror #31
   30834:	andeq	r3, r4, r8, asr #28
   30838:	muleq	r3, r8, ip
   3083c:	andeq	r0, r0, r9, lsr #19
   30840:	push	{r4, r5, r6, lr}
   30844:	subs	r5, r0, #0
   30848:	sub	sp, sp, #16
   3084c:	beq	308c0 <blkid_probe_get_size@plt+0x293a8>
   30850:	ldrb	r3, [r5, #24]
   30854:	ands	r4, r3, #31
   30858:	bne	308ec <blkid_probe_get_size@plt+0x293d4>
   3085c:	ldr	r3, [r5, #8]
   30860:	cmp	r3, #0
   30864:	beq	3091c <blkid_probe_get_size@plt+0x29404>
   30868:	ldr	r6, [r3, #228]	; 0xe4
   3086c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   30870:	cmp	r6, r0
   30874:	beq	30880 <blkid_probe_get_size@plt+0x29368>
   30878:	add	sp, sp, #16
   3087c:	pop	{r4, r5, r6, pc}
   30880:	ldrb	r3, [r5, #96]	; 0x60
   30884:	tst	r3, #1
   30888:	beq	30878 <blkid_probe_get_size@plt+0x29360>
   3088c:	ldr	r1, [r5, #8]
   30890:	mov	r3, r4
   30894:	ldr	r2, [r5, #84]	; 0x54
   30898:	ldr	r0, [r1, #4]
   3089c:	mov	r1, #2
   308a0:	bl	6cb4 <epoll_ctl@plt>
   308a4:	cmp	r0, #0
   308a8:	blt	30920 <blkid_probe_get_size@plt+0x29408>
   308ac:	ldrb	r3, [r5, #96]	; 0x60
   308b0:	bic	r3, r3, #1
   308b4:	strb	r3, [r5, #96]	; 0x60
   308b8:	add	sp, sp, #16
   308bc:	pop	{r4, r5, r6, pc}
   308c0:	ldr	r2, [pc, #240]	; 309b8 <blkid_probe_get_size@plt+0x294a0>
   308c4:	ldr	r1, [pc, #240]	; 309bc <blkid_probe_get_size@plt+0x294a4>
   308c8:	add	r2, pc, r2
   308cc:	add	r2, r2, #1296	; 0x510
   308d0:	add	r2, r2, #4
   308d4:	str	r2, [sp]
   308d8:	ldr	r2, [pc, #224]	; 309c0 <blkid_probe_get_size@plt+0x294a8>
   308dc:	ldr	r3, [pc, #224]	; 309c4 <blkid_probe_get_size@plt+0x294ac>
   308e0:	add	r2, pc, r2
   308e4:	add	r1, pc, r1
   308e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   308ec:	ldr	r2, [pc, #212]	; 309c8 <blkid_probe_get_size@plt+0x294b0>
   308f0:	ldr	r1, [pc, #212]	; 309cc <blkid_probe_get_size@plt+0x294b4>
   308f4:	add	r2, pc, r2
   308f8:	add	r2, r2, #1296	; 0x510
   308fc:	add	r2, r2, #4
   30900:	str	r2, [sp]
   30904:	ldr	r2, [pc, #196]	; 309d0 <blkid_probe_get_size@plt+0x294b8>
   30908:	ldr	r3, [pc, #196]	; 309d4 <blkid_probe_get_size@plt+0x294bc>
   3090c:	add	r2, pc, r2
   30910:	add	r1, pc, r1
   30914:	mov	r0, #0
   30918:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3091c:	bl	2fc74 <blkid_probe_get_size@plt+0x2875c>
   30920:	bl	732c <__errno_location@plt>
   30924:	ldr	r3, [pc, #172]	; 309d8 <blkid_probe_get_size@plt+0x294c0>
   30928:	add	r3, pc, r3
   3092c:	ldr	r3, [r3]
   30930:	cmp	r3, #6
   30934:	ble	308ac <blkid_probe_get_size@plt+0x29394>
   30938:	ldr	ip, [r5, #20]
   3093c:	cmp	ip, #0
   30940:	beq	309ac <blkid_probe_get_size@plt+0x29494>
   30944:	ldrb	r3, [r5, #24]
   30948:	lsl	r3, r3, #27
   3094c:	asr	r3, r3, #27
   30950:	cmp	r3, #12
   30954:	movhi	lr, #0
   30958:	ldrls	r2, [pc, #124]	; 309dc <blkid_probe_get_size@plt+0x294c4>
   3095c:	addls	r2, pc, r2
   30960:	addls	r3, r2, r3, lsl #2
   30964:	ldrls	lr, [r3, #120]	; 0x78
   30968:	ldr	r3, [pc, #112]	; 309e0 <blkid_probe_get_size@plt+0x294c8>
   3096c:	ldr	r2, [pc, #112]	; 309e4 <blkid_probe_get_size@plt+0x294cc>
   30970:	add	r3, pc, r3
   30974:	add	r2, pc, r2
   30978:	ldr	r1, [r0]
   3097c:	add	r3, r3, #1312	; 0x520
   30980:	str	r2, [sp, #4]
   30984:	ldr	r2, [pc, #92]	; 309e8 <blkid_probe_get_size@plt+0x294d0>
   30988:	add	r3, r3, #12
   3098c:	str	r3, [sp]
   30990:	str	lr, [sp, #12]
   30994:	str	ip, [sp, #8]
   30998:	ldr	r3, [pc, #76]	; 309ec <blkid_probe_get_size@plt+0x294d4>
   3099c:	add	r2, pc, r2
   309a0:	mov	r0, #7
   309a4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   309a8:	b	308ac <blkid_probe_get_size@plt+0x29394>
   309ac:	ldr	ip, [pc, #60]	; 309f0 <blkid_probe_get_size@plt+0x294d8>
   309b0:	add	ip, pc, ip
   309b4:	b	30944 <blkid_probe_get_size@plt+0x2942c>
   309b8:	andeq	fp, r3, r0, lsr pc
   309bc:	muleq	r3, r4, sl
   309c0:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   309c4:	andeq	r0, r0, r2, ror #2
   309c8:	andeq	fp, r3, r4, lsl #30
   309cc:	andeq	sp, r3, r4, lsl #10
   309d0:			; <UNDEFINED> instruction: 0x0003cbb0
   309d4:	andeq	r0, r0, r3, ror #2
   309d8:	andeq	r7, r6, r4, lsl r8
   309dc:	andeq	r9, r5, r4, lsr r3
   309e0:	andeq	fp, r3, r8, lsl #29
   309e4:			; <UNDEFINED> instruction: 0x0003d4b8
   309e8:	andeq	ip, r3, r0, lsr #22
   309ec:	andeq	r0, r0, lr, ror #2
   309f0:	andeq	ip, r3, r4, lsl #28
   309f4:	subs	r2, r0, #0
   309f8:	beq	30a1c <blkid_probe_get_size@plt+0x29504>
   309fc:	ldr	r3, [r2]
   30a00:	cmp	r3, #0
   30a04:	beq	30a24 <blkid_probe_get_size@plt+0x2950c>
   30a08:	sub	r3, r3, #1
   30a0c:	cmp	r3, #0
   30a10:	str	r3, [r2]
   30a14:	bne	30a1c <blkid_probe_get_size@plt+0x29504>
   30a18:	b	31ac0 <blkid_probe_get_size@plt+0x2a5a8>
   30a1c:	mov	r0, #0
   30a20:	bx	lr
   30a24:	ldr	r2, [pc, #48]	; 30a5c <blkid_probe_get_size@plt+0x29544>
   30a28:	push	{lr}		; (str lr, [sp, #-4]!)
   30a2c:	add	r2, pc, r2
   30a30:	sub	sp, sp, #12
   30a34:	mov	r0, r3
   30a38:	ldr	r1, [pc, #32]	; 30a60 <blkid_probe_get_size@plt+0x29548>
   30a3c:	add	r3, r2, #1344	; 0x540
   30a40:	ldr	r2, [pc, #28]	; 30a64 <blkid_probe_get_size@plt+0x2954c>
   30a44:	add	r3, r3, #4
   30a48:	str	r3, [sp]
   30a4c:	add	r2, pc, r2
   30a50:	mov	r3, #340	; 0x154
   30a54:	add	r1, pc, r1
   30a58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30a5c:	andeq	fp, r3, ip, asr #27
   30a60:	strdeq	r7, [r3], -ip
   30a64:	andeq	ip, r3, r0, ror sl
   30a68:	push	{r4, r5, r6, r7, lr}
   30a6c:	subs	r4, r0, #0
   30a70:	sub	sp, sp, #20
   30a74:	beq	30e34 <blkid_probe_get_size@plt+0x2991c>
   30a78:	ldr	r5, [r4, #8]
   30a7c:	cmp	r5, #0
   30a80:	beq	30cb4 <blkid_probe_get_size@plt+0x2979c>
   30a84:	ldr	r0, [r5, #304]	; 0x130
   30a88:	cmp	r0, #0
   30a8c:	beq	30e60 <blkid_probe_get_size@plt+0x29948>
   30a90:	ldrb	r3, [r4, #24]
   30a94:	lsl	r1, r3, #27
   30a98:	asr	r1, r1, #27
   30a9c:	cmp	r1, #12
   30aa0:	addls	pc, pc, r1, lsl #2
   30aa4:	b	30eb8 <blkid_probe_get_size@plt+0x299a0>
   30aa8:	b	30d4c <blkid_probe_get_size@plt+0x29834>
   30aac:	b	30d68 <blkid_probe_get_size@plt+0x29850>
   30ab0:	b	30d68 <blkid_probe_get_size@plt+0x29850>
   30ab4:	b	30d68 <blkid_probe_get_size@plt+0x29850>
   30ab8:	b	30d68 <blkid_probe_get_size@plt+0x29850>
   30abc:	b	30d68 <blkid_probe_get_size@plt+0x29850>
   30ac0:	b	30dac <blkid_probe_get_size@plt+0x29894>
   30ac4:	b	30de4 <blkid_probe_get_size@plt+0x298cc>
   30ac8:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30acc:	b	30d38 <blkid_probe_get_size@plt+0x29820>
   30ad0:	b	30d20 <blkid_probe_get_size@plt+0x29808>
   30ad4:	b	30eb8 <blkid_probe_get_size@plt+0x299a0>
   30ad8:	b	30adc <blkid_probe_get_size@plt+0x295c4>
   30adc:	ldr	r6, [r4, #88]	; 0x58
   30ae0:	cmp	r6, #0
   30ae4:	beq	30c1c <blkid_probe_get_size@plt+0x29704>
   30ae8:	ldr	r0, [r6, #32]
   30aec:	cmp	r0, #0
   30af0:	beq	30e8c <blkid_probe_get_size@plt+0x29974>
   30af4:	ldrd	r2, [r4, #92]	; 0x5c
   30af8:	cmp	r2, #0
   30afc:	strne	r3, [r2, #96]	; 0x60
   30b00:	ldrne	r3, [r4, #96]	; 0x60
   30b04:	cmp	r3, #0
   30b08:	beq	30ee8 <blkid_probe_get_size@plt+0x299d0>
   30b0c:	ldr	r2, [r4, #92]	; 0x5c
   30b10:	str	r2, [r3, #92]	; 0x5c
   30b14:	ldrb	r2, [r4, #25]
   30b18:	mov	r3, #0
   30b1c:	str	r3, [r4, #96]	; 0x60
   30b20:	tst	r2, #1
   30b24:	str	r3, [r4, #92]	; 0x5c
   30b28:	str	r3, [r4, #88]	; 0x58
   30b2c:	beq	30b44 <blkid_probe_get_size@plt+0x2962c>
   30b30:	ldr	r3, [r0, #300]	; 0x12c
   30b34:	cmp	r3, #0
   30b38:	subne	r3, r3, #1
   30b3c:	strne	r3, [r0, #300]	; 0x12c
   30b40:	beq	30fb4 <blkid_probe_get_size@plt+0x29a9c>
   30b44:	ldr	r5, [r4, #8]
   30b48:	cmp	r5, #0
   30b4c:	beq	30f58 <blkid_probe_get_size@plt+0x29a40>
   30b50:	ldr	r3, [r6, #28]
   30b54:	cmp	r3, #0
   30b58:	bne	30c1c <blkid_probe_get_size@plt+0x29704>
   30b5c:	ldr	r3, [r6, #16]
   30b60:	ldr	r7, [r6, #32]
   30b64:	cmp	r3, #0
   30b68:	mov	r3, r7
   30b6c:	blt	30fe4 <blkid_probe_get_size@plt+0x29acc>
   30b70:	ldr	r3, [r6, #36]	; 0x24
   30b74:	cmp	r3, #0
   30b78:	ldrne	r2, [r6, #40]	; 0x28
   30b7c:	strne	r2, [r3, #40]	; 0x28
   30b80:	ldr	r0, [r6, #40]	; 0x28
   30b84:	cmp	r0, #0
   30b88:	beq	3109c <blkid_probe_get_size@plt+0x29b84>
   30b8c:	ldr	r3, [r6, #36]	; 0x24
   30b90:	str	r3, [r0, #36]	; 0x24
   30b94:	mov	r3, #0
   30b98:	str	r3, [r6, #40]	; 0x28
   30b9c:	str	r3, [r6, #36]	; 0x24
   30ba0:	ldr	r0, [r6, #16]
   30ba4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   30ba8:	ldr	r3, [r6, #32]
   30bac:	mov	r2, r3
   30bb0:	cmp	r3, #0
   30bb4:	beq	30bf8 <blkid_probe_get_size@plt+0x296e0>
   30bb8:	ldr	r1, [r6, #20]
   30bbc:	cmp	r1, #0
   30bc0:	blt	30be4 <blkid_probe_get_size@plt+0x296cc>
   30bc4:	ldr	r0, [r3, #4]
   30bc8:	cmp	r0, #0
   30bcc:	bge	30fec <blkid_probe_get_size@plt+0x29ad4>
   30bd0:	ldr	r0, [r2, #20]
   30bd4:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   30bd8:	cmp	r6, r0
   30bdc:	bne	3113c <blkid_probe_get_size@plt+0x29c24>
   30be0:	ldr	r3, [r6, #32]
   30be4:	ldr	r0, [r3, #16]
   30be8:	mov	r1, r6
   30bec:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   30bf0:	cmp	r6, r0
   30bf4:	bne	3110c <blkid_probe_get_size@plt+0x29bf4>
   30bf8:	mov	r0, r6
   30bfc:	bl	69f0 <free@plt>
   30c00:	cmp	r7, #0
   30c04:	beq	30c18 <blkid_probe_get_size@plt+0x29700>
   30c08:	ldr	r0, [r7, #16]
   30c0c:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   30c10:	subs	r6, r0, #0
   30c14:	beq	31004 <blkid_probe_get_size@plt+0x29aec>
   30c18:	ldr	r5, [r4, #8]
   30c1c:	ldrb	r3, [r4, #25]
   30c20:	tst	r3, #1
   30c24:	bne	30cbc <blkid_probe_get_size@plt+0x297a4>
   30c28:	ldr	r3, [r4, #16]
   30c2c:	cmp	r3, #0
   30c30:	beq	30c48 <blkid_probe_get_size@plt+0x29730>
   30c34:	ldr	r0, [r5, #16]
   30c38:	add	r2, r4, #44	; 0x2c
   30c3c:	mov	r1, r4
   30c40:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30c44:	ldr	r5, [r4, #8]
   30c48:	ldrb	r3, [r4, #24]
   30c4c:	ldr	r2, [r4, #68]	; 0x44
   30c50:	mov	r1, #0
   30c54:	cmp	r2, r1
   30c58:	ldr	r0, [r4, #72]	; 0x48
   30c5c:	orr	r3, r3, #31
   30c60:	strb	r3, [r4, #24]
   30c64:	str	r1, [r4, #8]
   30c68:	strne	r0, [r2, #72]	; 0x48
   30c6c:	ldrne	r0, [r4, #72]	; 0x48
   30c70:	cmp	r0, #0
   30c74:	beq	30ce0 <blkid_probe_get_size@plt+0x297c8>
   30c78:	ldr	r3, [r4, #68]	; 0x44
   30c7c:	str	r3, [r0, #68]	; 0x44
   30c80:	mov	r3, #0
   30c84:	str	r3, [r4, #72]	; 0x48
   30c88:	str	r3, [r4, #68]	; 0x44
   30c8c:	ldr	r3, [r5, #304]	; 0x130
   30c90:	sub	r3, r3, #1
   30c94:	str	r3, [r5, #304]	; 0x130
   30c98:	ldrb	r3, [r4, #25]
   30c9c:	tst	r3, #4
   30ca0:	bne	30cb4 <blkid_probe_get_size@plt+0x2979c>
   30ca4:	mov	r0, r5
   30ca8:	add	sp, sp, #20
   30cac:	pop	{r4, r5, r6, r7, lr}
   30cb0:	b	309f4 <blkid_probe_get_size@plt+0x294dc>
   30cb4:	add	sp, sp, #20
   30cb8:	pop	{r4, r5, r6, r7, pc}
   30cbc:	ldr	r0, [r5, #12]
   30cc0:	add	r2, r4, #40	; 0x28
   30cc4:	mov	r1, r4
   30cc8:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30ccc:	ldr	r3, [r4, #16]
   30cd0:	ldr	r5, [r4, #8]
   30cd4:	cmp	r3, #0
   30cd8:	bne	30c34 <blkid_probe_get_size@plt+0x2971c>
   30cdc:	b	30c48 <blkid_probe_get_size@plt+0x29730>
   30ce0:	ldr	r3, [r5, #308]	; 0x134
   30ce4:	cmp	r3, r4
   30ce8:	ldreq	r3, [r4, #68]	; 0x44
   30cec:	streq	r3, [r5, #308]	; 0x134
   30cf0:	beq	30c80 <blkid_probe_get_size@plt+0x29768>
   30cf4:	ldr	r3, [pc, #1480]	; 312c4 <blkid_probe_get_size@plt+0x29dac>
   30cf8:	ldr	r2, [pc, #1480]	; 312c8 <blkid_probe_get_size@plt+0x29db0>
   30cfc:	add	r3, pc, r3
   30d00:	add	r3, r3, #1360	; 0x550
   30d04:	ldr	r1, [pc, #1472]	; 312cc <blkid_probe_get_size@plt+0x29db4>
   30d08:	add	r3, r3, #4
   30d0c:	str	r3, [sp]
   30d10:	add	r2, pc, r2
   30d14:	ldr	r3, [pc, #1460]	; 312d0 <blkid_probe_get_size@plt+0x29db8>
   30d18:	add	r1, pc, r1
   30d1c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30d20:	ldr	r0, [r5, #212]	; 0xd4
   30d24:	add	r2, r4, #84	; 0x54
   30d28:	mov	r1, r4
   30d2c:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30d30:	ldr	r5, [r4, #8]
   30d34:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30d38:	ldr	r0, [r5, #208]	; 0xd0
   30d3c:	mov	r1, r4
   30d40:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   30d44:	ldr	r5, [r4, #8]
   30d48:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30d4c:	ldr	r3, [r4, #84]	; 0x54
   30d50:	cmp	r3, #0
   30d54:	blt	30c1c <blkid_probe_get_size@plt+0x29704>
   30d58:	mov	r0, r4
   30d5c:	bl	30840 <blkid_probe_get_size@plt+0x29328>
   30d60:	ldr	r5, [r4, #8]
   30d64:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30d68:	mov	r0, r5
   30d6c:	bl	30390 <blkid_probe_get_size@plt+0x28e78>
   30d70:	subs	r5, r0, #0
   30d74:	beq	30f2c <blkid_probe_get_size@plt+0x29a14>
   30d78:	add	r2, r4, #104	; 0x68
   30d7c:	mov	r1, r4
   30d80:	ldr	r0, [r5, #8]
   30d84:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30d88:	ldr	r0, [r5, #12]
   30d8c:	add	r2, r4, #108	; 0x6c
   30d90:	mov	r1, r4
   30d94:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   30d98:	ldrb	r3, [r5, #24]
   30d9c:	orr	r3, r3, #1
   30da0:	strb	r3, [r5, #24]
   30da4:	ldr	r5, [r4, #8]
   30da8:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30dac:	ldr	r2, [r4, #216]	; 0xd8
   30db0:	cmp	r2, #0
   30db4:	ble	30c1c <blkid_probe_get_size@plt+0x29704>
   30db8:	ldr	r3, [r5, #192]	; 0xc0
   30dbc:	cmp	r3, #0
   30dc0:	movne	r1, #0
   30dc4:	strne	r1, [r3, r2, lsl #2]
   30dc8:	ldrne	r5, [r4, #8]
   30dcc:	ldrne	r2, [r4, #216]	; 0xd8
   30dd0:	mov	r0, r5
   30dd4:	add	r1, r4, #32
   30dd8:	bl	2ffd4 <blkid_probe_get_size@plt+0x28abc>
   30ddc:	ldr	r5, [r4, #8]
   30de0:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30de4:	ldr	r1, [r4, #212]	; 0xd4
   30de8:	cmp	r1, #0
   30dec:	ble	30c1c <blkid_probe_get_size@plt+0x29704>
   30df0:	tst	r3, #224	; 0xe0
   30df4:	beq	30e14 <blkid_probe_get_size@plt+0x298fc>
   30df8:	ldr	r0, [r5, #204]	; 0xcc
   30dfc:	cmp	r0, #0
   30e00:	beq	30f88 <blkid_probe_get_size@plt+0x29a70>
   30e04:	sub	r0, r0, #1
   30e08:	str	r0, [r5, #204]	; 0xcc
   30e0c:	ldr	r5, [r4, #8]
   30e10:	ldr	r1, [r4, #212]	; 0xd4
   30e14:	ldr	r0, [r5, #200]	; 0xc8
   30e18:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   30e1c:	mov	r2, #17
   30e20:	add	r1, r4, #32
   30e24:	ldr	r0, [r4, #8]
   30e28:	bl	2ffd4 <blkid_probe_get_size@plt+0x28abc>
   30e2c:	ldr	r5, [r4, #8]
   30e30:	b	30c1c <blkid_probe_get_size@plt+0x29704>
   30e34:	ldr	r2, [pc, #1176]	; 312d4 <blkid_probe_get_size@plt+0x29dbc>
   30e38:	ldr	r1, [pc, #1176]	; 312d8 <blkid_probe_get_size@plt+0x29dc0>
   30e3c:	add	r2, pc, r2
   30e40:	add	r2, r2, #1360	; 0x550
   30e44:	add	r2, r2, #4
   30e48:	str	r2, [sp]
   30e4c:	ldr	r2, [pc, #1160]	; 312dc <blkid_probe_get_size@plt+0x29dc4>
   30e50:	ldr	r3, [pc, #1160]	; 312e0 <blkid_probe_get_size@plt+0x29dc8>
   30e54:	add	r2, pc, r2
   30e58:	add	r1, pc, r1
   30e5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30e60:	ldr	r3, [pc, #1148]	; 312e4 <blkid_probe_get_size@plt+0x29dcc>
   30e64:	ldr	r2, [pc, #1148]	; 312e8 <blkid_probe_get_size@plt+0x29dd0>
   30e68:	add	r3, pc, r3
   30e6c:	add	r3, r3, #1360	; 0x550
   30e70:	ldr	r1, [pc, #1140]	; 312ec <blkid_probe_get_size@plt+0x29dd4>
   30e74:	add	r3, r3, #4
   30e78:	str	r3, [sp]
   30e7c:	add	r2, pc, r2
   30e80:	ldr	r3, [pc, #1128]	; 312f0 <blkid_probe_get_size@plt+0x29dd8>
   30e84:	add	r1, pc, r1
   30e88:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30e8c:	ldr	r3, [pc, #1120]	; 312f4 <blkid_probe_get_size@plt+0x29ddc>
   30e90:	ldr	r2, [pc, #1120]	; 312f8 <blkid_probe_get_size@plt+0x29de0>
   30e94:	add	r3, pc, r3
   30e98:	add	r3, r3, #1360	; 0x550
   30e9c:	ldr	r1, [pc, #1112]	; 312fc <blkid_probe_get_size@plt+0x29de4>
   30ea0:	add	r3, r3, #4
   30ea4:	str	r3, [sp]
   30ea8:	add	r2, pc, r2
   30eac:	ldr	r3, [pc, #1100]	; 31300 <blkid_probe_get_size@plt+0x29de8>
   30eb0:	add	r1, pc, r1
   30eb4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30eb8:	ldr	r2, [pc, #1092]	; 31304 <blkid_probe_get_size@plt+0x29dec>
   30ebc:	ldr	r1, [pc, #1092]	; 31308 <blkid_probe_get_size@plt+0x29df0>
   30ec0:	add	r2, pc, r2
   30ec4:	add	r2, r2, #1360	; 0x550
   30ec8:	add	r2, r2, #4
   30ecc:	str	r2, [sp]
   30ed0:	ldr	r2, [pc, #1076]	; 3130c <blkid_probe_get_size@plt+0x29df4>
   30ed4:	mov	r3, #756	; 0x2f4
   30ed8:	add	r2, pc, r2
   30edc:	add	r1, pc, r1
   30ee0:	mov	r0, #0
   30ee4:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   30ee8:	ldr	r2, [r6, #28]
   30eec:	cmp	r2, r4
   30ef0:	ldreq	r3, [r4, #92]	; 0x5c
   30ef4:	streq	r3, [r6, #28]
   30ef8:	beq	30b14 <blkid_probe_get_size@plt+0x295fc>
   30efc:	ldr	r2, [pc, #1036]	; 31310 <blkid_probe_get_size@plt+0x29df8>
   30f00:	mov	r0, r3
   30f04:	add	r2, pc, r2
   30f08:	add	r3, r2, #1360	; 0x550
   30f0c:	ldr	r1, [pc, #1024]	; 31314 <blkid_probe_get_size@plt+0x29dfc>
   30f10:	ldr	r2, [pc, #1024]	; 31318 <blkid_probe_get_size@plt+0x29e00>
   30f14:	add	r3, r3, #4
   30f18:	str	r3, [sp]
   30f1c:	add	r2, pc, r2
   30f20:	ldr	r3, [pc, #1012]	; 3131c <blkid_probe_get_size@plt+0x29e04>
   30f24:	add	r1, pc, r1
   30f28:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30f2c:	ldr	r2, [pc, #1004]	; 31320 <blkid_probe_get_size@plt+0x29e08>
   30f30:	ldr	r1, [pc, #1004]	; 31324 <blkid_probe_get_size@plt+0x29e0c>
   30f34:	add	r2, pc, r2
   30f38:	add	r2, r2, #1360	; 0x550
   30f3c:	add	r2, r2, #4
   30f40:	str	r2, [sp]
   30f44:	ldr	r2, [pc, #988]	; 31328 <blkid_probe_get_size@plt+0x29e10>
   30f48:	mov	r3, #676	; 0x2a4
   30f4c:	add	r2, pc, r2
   30f50:	add	r1, pc, r1
   30f54:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30f58:	ldr	r3, [pc, #972]	; 3132c <blkid_probe_get_size@plt+0x29e14>
   30f5c:	ldr	r2, [pc, #972]	; 31330 <blkid_probe_get_size@plt+0x29e18>
   30f60:	add	r3, pc, r3
   30f64:	add	r3, r3, #1376	; 0x560
   30f68:	ldr	r1, [pc, #964]	; 31334 <blkid_probe_get_size@plt+0x29e1c>
   30f6c:	add	r3, r3, #8
   30f70:	str	r3, [sp]
   30f74:	mov	r0, r5
   30f78:	ldr	r3, [pc, #952]	; 31338 <blkid_probe_get_size@plt+0x29e20>
   30f7c:	add	r2, pc, r2
   30f80:	add	r1, pc, r1
   30f84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30f88:	ldr	r3, [pc, #940]	; 3133c <blkid_probe_get_size@plt+0x29e24>
   30f8c:	ldr	r2, [pc, #940]	; 31340 <blkid_probe_get_size@plt+0x29e28>
   30f90:	add	r3, pc, r3
   30f94:	add	r3, r3, #1360	; 0x550
   30f98:	ldr	r1, [pc, #932]	; 31344 <blkid_probe_get_size@plt+0x29e2c>
   30f9c:	add	r3, r3, #4
   30fa0:	str	r3, [sp]
   30fa4:	add	r2, pc, r2
   30fa8:	ldr	r3, [pc, #920]	; 31348 <blkid_probe_get_size@plt+0x29e30>
   30fac:	add	r1, pc, r1
   30fb0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30fb4:	ldr	r2, [pc, #912]	; 3134c <blkid_probe_get_size@plt+0x29e34>
   30fb8:	mov	r0, r3
   30fbc:	add	r2, pc, r2
   30fc0:	add	r3, r2, #1360	; 0x550
   30fc4:	ldr	r1, [pc, #900]	; 31350 <blkid_probe_get_size@plt+0x29e38>
   30fc8:	ldr	r2, [pc, #900]	; 31354 <blkid_probe_get_size@plt+0x29e3c>
   30fcc:	add	r3, r3, #4
   30fd0:	str	r3, [sp]
   30fd4:	add	r2, pc, r2
   30fd8:	ldr	r3, [pc, #888]	; 31358 <blkid_probe_get_size@plt+0x29e40>
   30fdc:	add	r1, pc, r1
   30fe0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   30fe4:	mov	r2, r7
   30fe8:	b	30bb0 <blkid_probe_get_size@plt+0x29698>
   30fec:	bl	6a98 <inotify_rm_watch@plt>
   30ff0:	cmp	r0, #0
   30ff4:	blt	310dc <blkid_probe_get_size@plt+0x29bc4>
   30ff8:	ldr	r2, [r6, #32]
   30ffc:	ldr	r1, [r6, #20]
   31000:	b	30bd0 <blkid_probe_get_size@plt+0x296b8>
   31004:	ldr	r0, [r7, #20]
   31008:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   3100c:	cmp	r0, #0
   31010:	bne	311d0 <blkid_probe_get_size@plt+0x29cb8>
   31014:	ldr	r3, [r7, #296]	; 0x128
   31018:	cmp	r3, #0
   3101c:	beq	31050 <blkid_probe_get_size@plt+0x29b38>
   31020:	ldr	r3, [r7, #304]	; 0x130
   31024:	cmp	r3, #0
   31028:	ldrne	r2, [r7, #308]	; 0x134
   3102c:	strne	r2, [r3, #308]	; 0x134
   31030:	ldr	r0, [r7, #308]	; 0x134
   31034:	cmp	r0, #0
   31038:	beq	31200 <blkid_probe_get_size@plt+0x29ce8>
   3103c:	ldr	r3, [r7, #304]	; 0x130
   31040:	str	r3, [r0, #304]	; 0x130
   31044:	mov	r3, #0
   31048:	str	r3, [r7, #308]	; 0x134
   3104c:	str	r3, [r7, #304]	; 0x130
   31050:	mov	r2, #0
   31054:	mov	r1, r2
   31058:	ldr	r0, [r7, #16]
   3105c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31060:	mov	r2, #0
   31064:	mov	r1, r2
   31068:	ldr	r0, [r7, #20]
   3106c:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31070:	add	r1, r7, #8
   31074:	ldr	r0, [r5, #216]	; 0xd8
   31078:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   3107c:	cmp	r7, r0
   31080:	bne	31240 <blkid_probe_get_size@plt+0x29d28>
   31084:	ldr	r2, [r7, #4]
   31088:	cmp	r2, #0
   3108c:	bge	3116c <blkid_probe_get_size@plt+0x29c54>
   31090:	mov	r0, r7
   31094:	bl	69f0 <free@plt>
   31098:	b	30c18 <blkid_probe_get_size@plt+0x29700>
   3109c:	ldr	r3, [r5, #220]	; 0xdc
   310a0:	cmp	r6, r3
   310a4:	ldreq	r3, [r6, #36]	; 0x24
   310a8:	streq	r3, [r5, #220]	; 0xdc
   310ac:	beq	30b94 <blkid_probe_get_size@plt+0x2967c>
   310b0:	ldr	r3, [pc, #676]	; 3135c <blkid_probe_get_size@plt+0x29e44>
   310b4:	ldr	r2, [pc, #676]	; 31360 <blkid_probe_get_size@plt+0x29e48>
   310b8:	add	r3, pc, r3
   310bc:	add	r3, r3, #1392	; 0x570
   310c0:	ldr	r1, [pc, #668]	; 31364 <blkid_probe_get_size@plt+0x29e4c>
   310c4:	add	r3, r3, #12
   310c8:	str	r3, [sp]
   310cc:	add	r2, pc, r2
   310d0:	ldr	r3, [pc, #656]	; 31368 <blkid_probe_get_size@plt+0x29e50>
   310d4:	add	r1, pc, r1
   310d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   310dc:	bl	732c <__errno_location@plt>
   310e0:	ldr	r1, [r6, #20]
   310e4:	ldr	r0, [r0]
   310e8:	cmp	r0, #22
   310ec:	beq	31104 <blkid_probe_get_size@plt+0x29bec>
   310f0:	ldr	r3, [pc, #628]	; 3136c <blkid_probe_get_size@plt+0x29e54>
   310f4:	add	r3, pc, r3
   310f8:	ldr	r3, [r3]
   310fc:	cmp	r3, #6
   31100:	bgt	31190 <blkid_probe_get_size@plt+0x29c78>
   31104:	ldr	r2, [r6, #32]
   31108:	b	30bd0 <blkid_probe_get_size@plt+0x296b8>
   3110c:	ldr	r2, [pc, #604]	; 31370 <blkid_probe_get_size@plt+0x29e58>
   31110:	ldr	r1, [pc, #604]	; 31374 <blkid_probe_get_size@plt+0x29e5c>
   31114:	add	r2, pc, r2
   31118:	add	r2, r2, #1392	; 0x570
   3111c:	add	r2, r2, #12
   31120:	str	r2, [sp]
   31124:	ldr	r2, [pc, #588]	; 31378 <blkid_probe_get_size@plt+0x29e60>
   31128:	ldr	r3, [pc, #588]	; 3137c <blkid_probe_get_size@plt+0x29e64>
   3112c:	add	r2, pc, r2
   31130:	add	r1, pc, r1
   31134:	mov	r0, #0
   31138:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3113c:	ldr	r2, [pc, #572]	; 31380 <blkid_probe_get_size@plt+0x29e68>
   31140:	ldr	r1, [pc, #572]	; 31384 <blkid_probe_get_size@plt+0x29e6c>
   31144:	add	r2, pc, r2
   31148:	add	r2, r2, #1392	; 0x570
   3114c:	add	r2, r2, #12
   31150:	str	r2, [sp]
   31154:	ldr	r2, [pc, #556]	; 31388 <blkid_probe_get_size@plt+0x29e70>
   31158:	ldr	r3, [pc, #556]	; 3138c <blkid_probe_get_size@plt+0x29e74>
   3115c:	add	r2, pc, r2
   31160:	add	r1, pc, r1
   31164:	mov	r0, #0
   31168:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3116c:	ldr	r0, [r5, #4]
   31170:	mov	r3, #0
   31174:	mov	r1, #2
   31178:	bl	6cb4 <epoll_ctl@plt>
   3117c:	cmp	r0, #0
   31180:	blt	31270 <blkid_probe_get_size@plt+0x29d58>
   31184:	ldr	r0, [r7, #4]
   31188:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3118c:	b	31090 <blkid_probe_get_size@plt+0x29b78>
   31190:	ldr	r3, [pc, #504]	; 31390 <blkid_probe_get_size@plt+0x29e78>
   31194:	ldr	r2, [pc, #504]	; 31394 <blkid_probe_get_size@plt+0x29e7c>
   31198:	add	r3, pc, r3
   3119c:	add	r2, pc, r2
   311a0:	str	r2, [sp, #4]
   311a4:	add	r3, r3, #1424	; 0x590
   311a8:	ldr	r2, [pc, #488]	; 31398 <blkid_probe_get_size@plt+0x29e80>
   311ac:	add	r3, r3, #4
   311b0:	str	r1, [sp, #8]
   311b4:	str	r3, [sp]
   311b8:	mov	r1, r0
   311bc:	ldr	r3, [pc, #472]	; 3139c <blkid_probe_get_size@plt+0x29e84>
   311c0:	add	r2, pc, r2
   311c4:	mov	r0, #7
   311c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   311cc:	b	30ff8 <blkid_probe_get_size@plt+0x29ae0>
   311d0:	ldr	r3, [pc, #456]	; 313a0 <blkid_probe_get_size@plt+0x29e88>
   311d4:	ldr	r2, [pc, #456]	; 313a4 <blkid_probe_get_size@plt+0x29e8c>
   311d8:	add	r3, pc, r3
   311dc:	add	r3, r3, #1440	; 0x5a0
   311e0:	ldr	r1, [pc, #448]	; 313a8 <blkid_probe_get_size@plt+0x29e90>
   311e4:	add	r3, r3, #12
   311e8:	str	r3, [sp]
   311ec:	mov	r0, r6
   311f0:	ldr	r3, [pc, #436]	; 313ac <blkid_probe_get_size@plt+0x29e94>
   311f4:	add	r2, pc, r2
   311f8:	add	r1, pc, r1
   311fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31200:	ldr	r3, [r5, #224]	; 0xe0
   31204:	cmp	r7, r3
   31208:	ldreq	r3, [r7, #304]	; 0x130
   3120c:	streq	r3, [r5, #224]	; 0xe0
   31210:	beq	31044 <blkid_probe_get_size@plt+0x29b2c>
   31214:	ldr	r3, [pc, #404]	; 313b0 <blkid_probe_get_size@plt+0x29e98>
   31218:	ldr	r2, [pc, #404]	; 313b4 <blkid_probe_get_size@plt+0x29e9c>
   3121c:	add	r3, pc, r3
   31220:	add	r3, r3, #1440	; 0x5a0
   31224:	ldr	r1, [pc, #396]	; 313b8 <blkid_probe_get_size@plt+0x29ea0>
   31228:	add	r3, r3, #12
   3122c:	str	r3, [sp]
   31230:	add	r2, pc, r2
   31234:	ldr	r3, [pc, #384]	; 313bc <blkid_probe_get_size@plt+0x29ea4>
   31238:	add	r1, pc, r1
   3123c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31240:	ldr	r2, [pc, #376]	; 313c0 <blkid_probe_get_size@plt+0x29ea8>
   31244:	ldr	r1, [pc, #376]	; 313c4 <blkid_probe_get_size@plt+0x29eac>
   31248:	add	r2, pc, r2
   3124c:	add	r2, r2, #1440	; 0x5a0
   31250:	add	r2, r2, #12
   31254:	str	r2, [sp]
   31258:	ldr	r2, [pc, #360]	; 313c8 <blkid_probe_get_size@plt+0x29eb0>
   3125c:	ldr	r3, [pc, #360]	; 313cc <blkid_probe_get_size@plt+0x29eb4>
   31260:	add	r2, pc, r2
   31264:	add	r1, pc, r1
   31268:	mov	r0, #0
   3126c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31270:	bl	732c <__errno_location@plt>
   31274:	ldr	r3, [pc, #340]	; 313d0 <blkid_probe_get_size@plt+0x29eb8>
   31278:	add	r3, pc, r3
   3127c:	ldr	r3, [r3]
   31280:	cmp	r3, #6
   31284:	ble	31184 <blkid_probe_get_size@plt+0x29c6c>
   31288:	ldr	r3, [pc, #324]	; 313d4 <blkid_probe_get_size@plt+0x29ebc>
   3128c:	ldr	r2, [pc, #324]	; 313d8 <blkid_probe_get_size@plt+0x29ec0>
   31290:	add	r3, pc, r3
   31294:	add	r2, pc, r2
   31298:	str	r2, [sp, #4]
   3129c:	add	r3, r3, #1472	; 0x5c0
   312a0:	ldr	r2, [pc, #308]	; 313dc <blkid_probe_get_size@plt+0x29ec4>
   312a4:	add	r3, r3, #4
   312a8:	str	r3, [sp]
   312ac:	add	r2, pc, r2
   312b0:	ldr	r1, [r0]
   312b4:	ldr	r3, [pc, #292]	; 313e0 <blkid_probe_get_size@plt+0x29ec8>
   312b8:	mov	r0, #7
   312bc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   312c0:	b	31184 <blkid_probe_get_size@plt+0x29c6c>
   312c4:	strdeq	fp, [r3], -ip
   312c8:	andeq	ip, r3, ip, lsr #15
   312cc:	strdeq	ip, [r3], -r8
   312d0:	andeq	r0, r0, r1, lsl #6
   312d4:			; <UNDEFINED> instruction: 0x0003b9bc
   312d8:	andeq	pc, r3, r0, lsr #10
   312dc:	andeq	ip, r3, r8, ror #12
   312e0:	andeq	r0, r0, sp, lsl #5
   312e4:	muleq	r3, r0, r9
   312e8:	andeq	ip, r3, r0, asr #12
   312ec:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   312f0:	muleq	r0, r2, r2
   312f4:	andeq	fp, r3, r4, ror #18
   312f8:	andeq	ip, r3, r4, lsl r6
   312fc:	strdeq	ip, [r3], -r0
   31300:	ldrdeq	r0, [r0], -r6
   31304:	andeq	fp, r3, r8, lsr r9
   31308:	andeq	sp, r3, r8, lsr r1
   3130c:	andeq	ip, r3, r4, ror #11
   31310:	strdeq	fp, [r3], -r4
   31314:	andeq	ip, r3, ip, ror #13
   31318:	andeq	ip, r3, r0, lsr #11
   3131c:	ldrdeq	r0, [r0], -r9
   31320:	andeq	fp, r3, r4, asr #17
   31324:	andeq	sl, r3, r8, lsl r1
   31328:	andeq	ip, r3, r0, ror r5
   3132c:	muleq	r3, r8, r8
   31330:	andeq	ip, r3, r0, asr #10
   31334:	strdeq	r3, [r4], -r0
   31338:	andeq	r0, r0, r5, lsr #11
   3133c:	andeq	fp, r3, r8, ror #16
   31340:	andeq	ip, r3, r8, lsl r5
   31344:	andeq	ip, r3, ip, asr #29
   31348:			; <UNDEFINED> instruction: 0x000002ba
   3134c:	andeq	fp, r3, ip, lsr r8
   31350:	andeq	ip, r3, ip, ror #29
   31354:	andeq	ip, r3, r8, ror #9
   31358:	ldrdeq	r0, [r0], -sp
   3135c:	andeq	fp, r3, r0, asr #14
   31360:	strdeq	ip, [r3], -r0
   31364:	andeq	ip, r3, ip, lsr r5
   31368:	andeq	r0, r0, r5, lsl #11
   3136c:	andeq	r7, r6, r8, asr #32
   31370:	andeq	fp, r3, r4, ror #13
   31374:	andeq	ip, r3, r0, lsr lr
   31378:	muleq	r3, r0, r3
   3137c:	muleq	r0, r9, r5
   31380:			; <UNDEFINED> instruction: 0x0003b6b4
   31384:	andeq	ip, r3, r4, asr #27
   31388:	andeq	ip, r3, r0, ror #6
   3138c:	muleq	r0, r6, r5
   31390:	andeq	fp, r3, r0, ror #12
   31394:	andeq	ip, r3, r8, asr #26
   31398:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3139c:	muleq	r0, r3, r5
   313a0:	andeq	fp, r3, r0, lsr #12
   313a4:	andeq	ip, r3, r8, asr #5
   313a8:	muleq	r3, r8, sp
   313ac:	andeq	r0, r0, lr, lsl #10
   313b0:	ldrdeq	fp, [r3], -ip
   313b4:	andeq	ip, r3, ip, lsl #5
   313b8:	ldrdeq	ip, [r3], -r8
   313bc:	andeq	r0, r0, r1, lsl r5
   313c0:			; <UNDEFINED> instruction: 0x0003b5b0
   313c4:	andeq	ip, r3, r4, asr #26
   313c8:	andeq	ip, r3, ip, asr r2
   313cc:	andeq	r0, r0, r6, lsl r5
   313d0:	andeq	r6, r6, r4, asr #29
   313d4:	andeq	fp, r3, r8, ror #10
   313d8:	andeq	ip, r3, r8, asr #26
   313dc:	andeq	ip, r3, r0, lsl r2
   313e0:	andeq	r0, r0, sl, lsl r5
   313e4:	push	{r4, lr}
   313e8:	subs	r4, r0, #0
   313ec:	sub	sp, sp, #8
   313f0:	beq	3144c <blkid_probe_get_size@plt+0x29f34>
   313f4:	bl	30a68 <blkid_probe_get_size@plt+0x29550>
   313f8:	ldrb	r3, [r4, #24]
   313fc:	tst	r3, #31
   31400:	beq	31430 <blkid_probe_get_size@plt+0x29f18>
   31404:	ldr	r3, [r4, #64]	; 0x40
   31408:	cmp	r3, #0
   3140c:	beq	31418 <blkid_probe_get_size@plt+0x29f00>
   31410:	ldr	r0, [r4, #12]
   31414:	blx	r3
   31418:	ldr	r0, [r4, #20]
   3141c:	bl	69f0 <free@plt>
   31420:	mov	r0, r4
   31424:	add	sp, sp, #8
   31428:	pop	{r4, lr}
   3142c:	b	69f0 <free@plt>
   31430:	ldrb	r3, [r4, #96]	; 0x60
   31434:	tst	r3, #2
   31438:	beq	31404 <blkid_probe_get_size@plt+0x29eec>
   3143c:	ldr	r0, [r4, #84]	; 0x54
   31440:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   31444:	str	r0, [r4, #84]	; 0x54
   31448:	b	31404 <blkid_probe_get_size@plt+0x29eec>
   3144c:	ldr	r2, [pc, #36]	; 31478 <blkid_probe_get_size@plt+0x29f60>
   31450:	ldr	r1, [pc, #36]	; 3147c <blkid_probe_get_size@plt+0x29f64>
   31454:	add	r2, pc, r2
   31458:	add	r2, r2, #1488	; 0x5d0
   3145c:	add	r2, r2, #12
   31460:	str	r2, [sp]
   31464:	ldr	r2, [pc, #20]	; 31480 <blkid_probe_get_size@plt+0x29f68>
   31468:	ldr	r3, [pc, #20]	; 31484 <blkid_probe_get_size@plt+0x29f6c>
   3146c:	add	r2, pc, r2
   31470:	add	r1, pc, r1
   31474:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31478:	andeq	fp, r3, r4, lsr #7
   3147c:	andeq	lr, r3, r8, lsl #30
   31480:	andeq	ip, r3, r0, asr r0
   31484:	andeq	r0, r0, r9, lsl #6
   31488:	ldr	r3, [pc, #1264]	; 31980 <blkid_probe_get_size@plt+0x2a468>
   3148c:	ldr	r2, [pc, #1264]	; 31984 <blkid_probe_get_size@plt+0x2a46c>
   31490:	add	r3, pc, r3
   31494:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31498:	sub	sp, sp, #32
   3149c:	ldr	r6, [r3, r2]
   314a0:	subs	r4, r0, #0
   314a4:	ldr	r3, [r6]
   314a8:	str	r3, [sp, #28]
   314ac:	beq	317fc <blkid_probe_get_size@plt+0x2a2e4>
   314b0:	ldrb	r0, [r4, #25]
   314b4:	ands	r0, r0, #1
   314b8:	beq	315bc <blkid_probe_get_size@plt+0x2a0a4>
   314bc:	ldrb	r3, [r4, #24]
   314c0:	lsl	r5, r3, #27
   314c4:	asr	r5, r5, #27
   314c8:	cmp	r5, #8
   314cc:	beq	314d8 <blkid_probe_get_size@plt+0x29fc0>
   314d0:	cmp	r5, #10
   314d4:	bne	315e4 <blkid_probe_get_size@plt+0x2a0cc>
   314d8:	and	r2, r3, #31
   314dc:	cmp	r2, #9
   314e0:	beq	31550 <blkid_probe_get_size@plt+0x2a038>
   314e4:	mvn	r2, #1
   314e8:	mov	r3, #0
   314ec:	add	r8, sp, #16
   314f0:	add	r7, sp, #20
   314f4:	strd	r2, [sp, #20]
   314f8:	ldr	r3, [r4, #8]
   314fc:	mov	r2, r8
   31500:	mov	r1, r7
   31504:	ldr	r0, [r3, #208]	; 0xd0
   31508:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   3150c:	cmp	r0, #0
   31510:	beq	3154c <blkid_probe_get_size@plt+0x2a034>
   31514:	ldr	r0, [sp, #16]
   31518:	ldrb	r3, [r0, #24]
   3151c:	tst	r3, #224	; 0xe0
   31520:	beq	314f8 <blkid_probe_get_size@plt+0x29fe0>
   31524:	mov	r1, #1
   31528:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   3152c:	cmp	r0, #0
   31530:	bge	314f8 <blkid_probe_get_size@plt+0x29fe0>
   31534:	ldr	r2, [sp, #28]
   31538:	ldr	r3, [r6]
   3153c:	cmp	r2, r3
   31540:	bne	3197c <blkid_probe_get_size@plt+0x2a464>
   31544:	add	sp, sp, #32
   31548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3154c:	ldrb	r3, [r4, #24]
   31550:	and	r2, r3, #224	; 0xe0
   31554:	cmp	r2, #224	; 0xe0
   31558:	beq	317e4 <blkid_probe_get_size@plt+0x2a2cc>
   3155c:	ldrb	r2, [r4, #25]
   31560:	lsl	r3, r3, #27
   31564:	asr	r3, r3, #27
   31568:	orr	r2, r2, #2
   3156c:	add	r3, r3, #1
   31570:	strb	r2, [r4, #25]
   31574:	cmp	r3, #14
   31578:	addls	pc, pc, r3, lsl #2
   3157c:	b	31828 <blkid_probe_get_size@plt+0x2a310>
   31580:	b	31888 <blkid_probe_get_size@plt+0x2a370>
   31584:	b	31654 <blkid_probe_get_size@plt+0x2a13c>
   31588:	b	31674 <blkid_probe_get_size@plt+0x2a15c>
   3158c:	b	31674 <blkid_probe_get_size@plt+0x2a15c>
   31590:	b	31674 <blkid_probe_get_size@plt+0x2a15c>
   31594:	b	31674 <blkid_probe_get_size@plt+0x2a15c>
   31598:	b	31674 <blkid_probe_get_size@plt+0x2a15c>
   3159c:	b	31694 <blkid_probe_get_size@plt+0x2a17c>
   315a0:	b	316b0 <blkid_probe_get_size@plt+0x2a198>
   315a4:	b	3160c <blkid_probe_get_size@plt+0x2a0f4>
   315a8:	b	3160c <blkid_probe_get_size@plt+0x2a0f4>
   315ac:	b	3160c <blkid_probe_get_size@plt+0x2a0f4>
   315b0:	b	31888 <blkid_probe_get_size@plt+0x2a370>
   315b4:	b	316e0 <blkid_probe_get_size@plt+0x2a1c8>
   315b8:	b	31888 <blkid_probe_get_size@plt+0x2a370>
   315bc:	ldrb	r5, [r4, #24]
   315c0:	and	r3, r5, #31
   315c4:	cmp	r3, #10
   315c8:	bne	318c4 <blkid_probe_get_size@plt+0x2a3ac>
   315cc:	lsl	r5, r5, #27
   315d0:	asr	r5, r5, #27
   315d4:	cmp	r5, #8
   315d8:	beq	314e4 <blkid_probe_get_size@plt+0x29fcc>
   315dc:	cmp	r5, #10
   315e0:	beq	314e4 <blkid_probe_get_size@plt+0x29fcc>
   315e4:	mov	r1, #0
   315e8:	mov	r0, r4
   315ec:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   315f0:	cmp	r0, #0
   315f4:	blt	31534 <blkid_probe_get_size@plt+0x2a01c>
   315f8:	ldrb	r3, [r4, #24]
   315fc:	and	r2, r3, #31
   31600:	cmp	r2, #9
   31604:	bne	314e4 <blkid_probe_get_size@plt+0x29fcc>
   31608:	b	31550 <blkid_probe_get_size@plt+0x2a038>
   3160c:	ldr	r3, [r4, #80]	; 0x50
   31610:	ldr	r1, [r4, #12]
   31614:	mov	r0, r4
   31618:	blx	r3
   3161c:	mov	r7, r0
   31620:	ldrb	r3, [r4, #25]
   31624:	cmp	r7, #0
   31628:	bic	r3, r3, #2
   3162c:	strb	r3, [r4, #25]
   31630:	blt	31750 <blkid_probe_get_size@plt+0x2a238>
   31634:	ldr	r3, [r4, #4]
   31638:	cmp	r3, #0
   3163c:	movne	r0, #1
   31640:	bne	31534 <blkid_probe_get_size@plt+0x2a01c>
   31644:	mov	r0, r4
   31648:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   3164c:	mov	r0, #1
   31650:	b	31534 <blkid_probe_get_size@plt+0x2a01c>
   31654:	ldr	r7, [r4, #80]	; 0x50
   31658:	ldr	r3, [r4, #12]
   3165c:	ldr	r2, [r4, #92]	; 0x5c
   31660:	ldr	r1, [r4, #84]	; 0x54
   31664:	mov	r0, r4
   31668:	blx	r7
   3166c:	mov	r7, r0
   31670:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   31674:	ldr	r1, [r4, #12]
   31678:	ldrd	r2, [r4, #88]	; 0x58
   3167c:	mov	r0, r4
   31680:	str	r1, [sp]
   31684:	ldr	r1, [r4, #80]	; 0x50
   31688:	blx	r1
   3168c:	mov	r7, r0
   31690:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   31694:	ldr	r3, [r4, #80]	; 0x50
   31698:	ldr	r2, [r4, #12]
   3169c:	add	r1, r4, #88	; 0x58
   316a0:	mov	r0, r4
   316a4:	blx	r3
   316a8:	mov	r7, r0
   316ac:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   316b0:	ldr	r3, [r4, #92]	; 0x5c
   316b4:	add	r8, r4, #84	; 0x54
   316b8:	sub	r3, r3, #1
   316bc:	cmp	r3, #2
   316c0:	ldr	r7, [r4, #80]	; 0x50
   316c4:	ldr	r2, [r4, #12]
   316c8:	mov	r1, r8
   316cc:	mov	r0, r4
   316d0:	bls	31838 <blkid_probe_get_size@plt+0x2a320>
   316d4:	blx	r7
   316d8:	mov	r7, r0
   316dc:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   316e0:	ldr	r0, [r4, #88]	; 0x58
   316e4:	cmp	r0, #0
   316e8:	beq	318f0 <blkid_probe_get_size@plt+0x2a3d8>
   316ec:	ldr	r8, [r0, #32]
   316f0:	cmp	r8, #0
   316f4:	beq	3191c <blkid_probe_get_size@plt+0x2a404>
   316f8:	ldr	r3, [r8, #296]	; 0x128
   316fc:	cmp	r3, #15
   31700:	bls	31858 <blkid_probe_get_size@plt+0x2a340>
   31704:	ldr	r9, [r8, #36]	; 0x24
   31708:	add	r9, r9, #16
   3170c:	cmp	r3, r9
   31710:	bcc	3194c <blkid_probe_get_size@plt+0x2a434>
   31714:	ldr	r3, [r4, #80]	; 0x50
   31718:	ldr	r2, [r4, #12]
   3171c:	add	r1, r8, #24
   31720:	mov	r0, r4
   31724:	ldr	sl, [r4, #8]
   31728:	blx	r3
   3172c:	ldr	r3, [r8, #300]	; 0x12c
   31730:	cmp	r3, #0
   31734:	mov	r7, r0
   31738:	bne	31620 <blkid_probe_get_size@plt+0x2a108>
   3173c:	mov	r2, r9
   31740:	mov	r1, r8
   31744:	mov	r0, sl
   31748:	bl	2bb54 <blkid_probe_get_size@plt+0x2463c>
   3174c:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   31750:	ldr	r3, [pc, #560]	; 31988 <blkid_probe_get_size@plt+0x2a470>
   31754:	add	r3, pc, r3
   31758:	ldr	r3, [r3]
   3175c:	cmp	r3, #6
   31760:	ble	317c8 <blkid_probe_get_size@plt+0x2a2b0>
   31764:	ldr	r1, [r4, #20]
   31768:	cmp	r1, #0
   3176c:	beq	318b8 <blkid_probe_get_size@plt+0x2a3a0>
   31770:	cmp	r5, #12
   31774:	movhi	r0, #0
   31778:	ldrls	r3, [pc, #524]	; 3198c <blkid_probe_get_size@plt+0x2a474>
   3177c:	addls	r3, pc, r3
   31780:	addls	r5, r3, r5, lsl #2
   31784:	ldrls	r0, [r5, #120]	; 0x78
   31788:	ldr	r3, [pc, #512]	; 31990 <blkid_probe_get_size@plt+0x2a478>
   3178c:	ldr	r2, [pc, #512]	; 31994 <blkid_probe_get_size@plt+0x2a47c>
   31790:	add	r3, pc, r3
   31794:	add	r2, pc, r2
   31798:	add	r3, r3, #1520	; 0x5f0
   3179c:	str	r2, [sp, #4]
   317a0:	ldr	r2, [pc, #496]	; 31998 <blkid_probe_get_size@plt+0x2a480>
   317a4:	add	r3, r3, #8
   317a8:	str	r0, [sp, #12]
   317ac:	str	r1, [sp, #8]
   317b0:	str	r3, [sp]
   317b4:	mov	r1, r7
   317b8:	ldr	r3, [pc, #476]	; 3199c <blkid_probe_get_size@plt+0x2a484>
   317bc:	add	r2, pc, r2
   317c0:	mov	r0, #7
   317c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   317c8:	ldr	r3, [r4, #4]
   317cc:	cmp	r3, #0
   317d0:	beq	31644 <blkid_probe_get_size@plt+0x2a12c>
   317d4:	mov	r0, r4
   317d8:	bl	4b53c <blkid_probe_get_size@plt+0x44024>
   317dc:	mov	r0, #1
   317e0:	b	31534 <blkid_probe_get_size@plt+0x2a01c>
   317e4:	mov	r0, r4
   317e8:	bl	4b53c <blkid_probe_get_size@plt+0x44024>
   317ec:	cmp	r0, #0
   317f0:	blt	31534 <blkid_probe_get_size@plt+0x2a01c>
   317f4:	ldrb	r3, [r4, #24]
   317f8:	b	3155c <blkid_probe_get_size@plt+0x2a044>
   317fc:	ldr	r2, [pc, #412]	; 319a0 <blkid_probe_get_size@plt+0x2a488>
   31800:	ldr	r1, [pc, #412]	; 319a4 <blkid_probe_get_size@plt+0x2a48c>
   31804:	add	r2, pc, r2
   31808:	add	r2, r2, #1504	; 0x5e0
   3180c:	add	r2, r2, #8
   31810:	str	r2, [sp]
   31814:	ldr	r2, [pc, #396]	; 319a8 <blkid_probe_get_size@plt+0x2a490>
   31818:	ldr	r3, [pc, #396]	; 319ac <blkid_probe_get_size@plt+0x2a494>
   3181c:	add	r2, pc, r2
   31820:	add	r1, pc, r1
   31824:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31828:	ldrb	r3, [r4, #25]
   3182c:	bic	r3, r3, #2
   31830:	strb	r3, [r4, #25]
   31834:	b	31634 <blkid_probe_get_size@plt+0x2a11c>
   31838:	blx	r7
   3183c:	mov	r2, r8
   31840:	mov	r3, #5
   31844:	ldr	r1, [r4, #212]	; 0xd4
   31848:	mov	r7, r0
   3184c:	mov	r0, #1
   31850:	bl	6f48 <waitid@plt>
   31854:	b	31620 <blkid_probe_get_size@plt+0x2a108>
   31858:	ldr	r2, [pc, #336]	; 319b0 <blkid_probe_get_size@plt+0x2a498>
   3185c:	ldr	r1, [pc, #336]	; 319b4 <blkid_probe_get_size@plt+0x2a49c>
   31860:	add	r2, pc, r2
   31864:	add	r2, r2, #1504	; 0x5e0
   31868:	add	r2, r2, #8
   3186c:	str	r2, [sp]
   31870:	ldr	r2, [pc, #320]	; 319b8 <blkid_probe_get_size@plt+0x2a4a0>
   31874:	ldr	r3, [pc, #320]	; 319bc <blkid_probe_get_size@plt+0x2a4a4>
   31878:	add	r2, pc, r2
   3187c:	add	r1, pc, r1
   31880:	mov	r0, #0
   31884:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31888:	ldr	r2, [pc, #304]	; 319c0 <blkid_probe_get_size@plt+0x2a4a8>
   3188c:	ldr	r1, [pc, #304]	; 319c4 <blkid_probe_get_size@plt+0x2a4ac>
   31890:	add	r2, pc, r2
   31894:	add	r2, r2, #1504	; 0x5e0
   31898:	add	r2, r2, #8
   3189c:	str	r2, [sp]
   318a0:	ldr	r2, [pc, #288]	; 319c8 <blkid_probe_get_size@plt+0x2a4b0>
   318a4:	ldr	r3, [pc, #288]	; 319cc <blkid_probe_get_size@plt+0x2a4b4>
   318a8:	add	r2, pc, r2
   318ac:	add	r1, pc, r1
   318b0:	mov	r0, #0
   318b4:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   318b8:	ldr	r1, [pc, #272]	; 319d0 <blkid_probe_get_size@plt+0x2a4b8>
   318bc:	add	r1, pc, r1
   318c0:	b	31770 <blkid_probe_get_size@plt+0x2a258>
   318c4:	ldr	r3, [pc, #264]	; 319d4 <blkid_probe_get_size@plt+0x2a4bc>
   318c8:	ldr	r2, [pc, #264]	; 319d8 <blkid_probe_get_size@plt+0x2a4c0>
   318cc:	add	r3, pc, r3
   318d0:	add	r3, r3, #1504	; 0x5e0
   318d4:	ldr	r1, [pc, #256]	; 319dc <blkid_probe_get_size@plt+0x2a4c4>
   318d8:	add	r3, r3, #8
   318dc:	str	r3, [sp]
   318e0:	add	r2, pc, r2
   318e4:	ldr	r3, [pc, #244]	; 319e0 <blkid_probe_get_size@plt+0x2a4c8>
   318e8:	add	r1, pc, r1
   318ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   318f0:	ldr	r3, [pc, #236]	; 319e4 <blkid_probe_get_size@plt+0x2a4cc>
   318f4:	ldr	r2, [pc, #236]	; 319e8 <blkid_probe_get_size@plt+0x2a4d0>
   318f8:	add	r3, pc, r3
   318fc:	add	r3, r3, #1504	; 0x5e0
   31900:	ldr	r1, [pc, #228]	; 319ec <blkid_probe_get_size@plt+0x2a4d4>
   31904:	add	r3, r3, #8
   31908:	str	r3, [sp]
   3190c:	add	r2, pc, r2
   31910:	ldr	r3, [pc, #216]	; 319f0 <blkid_probe_get_size@plt+0x2a4d8>
   31914:	add	r1, pc, r1
   31918:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3191c:	ldr	r3, [pc, #208]	; 319f4 <blkid_probe_get_size@plt+0x2a4dc>
   31920:	ldr	r2, [pc, #208]	; 319f8 <blkid_probe_get_size@plt+0x2a4e0>
   31924:	add	r3, pc, r3
   31928:	add	r3, r3, #1504	; 0x5e0
   3192c:	ldr	r1, [pc, #200]	; 319fc <blkid_probe_get_size@plt+0x2a4e4>
   31930:	add	r3, r3, #8
   31934:	str	r3, [sp]
   31938:	mov	r0, r8
   3193c:	ldr	r3, [pc, #188]	; 31a00 <blkid_probe_get_size@plt+0x2a4e8>
   31940:	add	r2, pc, r2
   31944:	add	r1, pc, r1
   31948:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3194c:	ldr	r2, [pc, #176]	; 31a04 <blkid_probe_get_size@plt+0x2a4ec>
   31950:	ldr	r1, [pc, #176]	; 31a08 <blkid_probe_get_size@plt+0x2a4f0>
   31954:	add	r2, pc, r2
   31958:	add	r2, r2, #1504	; 0x5e0
   3195c:	add	r2, r2, #8
   31960:	str	r2, [sp]
   31964:	ldr	r2, [pc, #160]	; 31a0c <blkid_probe_get_size@plt+0x2a4f4>
   31968:	ldr	r3, [pc, #160]	; 31a10 <blkid_probe_get_size@plt+0x2a4f8>
   3196c:	add	r2, pc, r2
   31970:	add	r1, pc, r1
   31974:	mov	r0, #0
   31978:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3197c:	bl	6fb4 <__stack_chk_fail@plt>
   31980:	ldrdeq	r6, [r6], -r8
   31984:	andeq	r0, r0, ip, lsr r4
   31988:	andeq	r6, r6, r8, ror #19
   3198c:	andeq	r8, r5, r4, lsl r5
   31990:	andeq	fp, r3, r8, rrx
   31994:	andeq	ip, r3, ip, lsr r9
   31998:	andeq	fp, r3, r0, lsl #26
   3199c:	andeq	r0, r0, lr, asr #22
   319a0:	strdeq	sl, [r3], -r4
   319a4:	andeq	lr, r3, r8, asr fp
   319a8:	andeq	fp, r3, r0, lsr #25
   319ac:	ldrdeq	r0, [r0], -ip
   319b0:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   319b4:	andeq	ip, r3, r0, lsl #16
   319b8:	andeq	fp, r3, r4, asr #24
   319bc:	andeq	r0, r0, r6, lsr fp
   319c0:	andeq	sl, r3, r8, ror #30
   319c4:	andeq	ip, r3, r8, ror #14
   319c8:	andeq	fp, r3, r4, lsl ip
   319cc:	andeq	r0, r0, r7, asr #22
   319d0:	strdeq	fp, [r3], -r8
   319d4:	andeq	sl, r3, ip, lsr #30
   319d8:	ldrdeq	fp, [r3], -ip
   319dc:	andeq	ip, r3, r4, asr #14
   319e0:	ldrdeq	r0, [r0], -sp
   319e4:	andeq	sl, r3, r0, lsl #30
   319e8:			; <UNDEFINED> instruction: 0x0003bbb0
   319ec:			; <UNDEFINED> instruction: 0x0003c4b4
   319f0:	andeq	r0, r0, r3, lsr fp
   319f4:	ldrdeq	sl, [r3], -r4
   319f8:	andeq	fp, r3, ip, ror fp
   319fc:	andeq	ip, r3, r0, lsl r7
   31a00:	andeq	r0, r0, r4, lsr fp
   31a04:	andeq	sl, r3, r4, lsr #29
   31a08:	andeq	ip, r3, r8, asr #14
   31a0c:	andeq	fp, r3, r0, asr fp
   31a10:	andeq	r0, r0, r8, lsr fp
   31a14:	push	{r4, lr}
   31a18:	subs	r4, r0, #0
   31a1c:	sub	sp, sp, #8
   31a20:	beq	31a64 <blkid_probe_get_size@plt+0x2a54c>
   31a24:	ldr	r3, [r4, #4]
   31a28:	cmp	r3, #0
   31a2c:	beq	31a80 <blkid_probe_get_size@plt+0x2a568>
   31a30:	sub	r3, r3, #1
   31a34:	cmp	r3, #0
   31a38:	str	r3, [r4, #4]
   31a3c:	bne	31a64 <blkid_probe_get_size@plt+0x2a54c>
   31a40:	ldrb	r3, [r4, #25]
   31a44:	tst	r3, #2
   31a48:	beq	31a70 <blkid_probe_get_size@plt+0x2a558>
   31a4c:	ldrb	r3, [r4, #24]
   31a50:	tst	r3, #31
   31a54:	bne	31a5c <blkid_probe_get_size@plt+0x2a544>
   31a58:	bl	30840 <blkid_probe_get_size@plt+0x29328>
   31a5c:	mov	r0, r4
   31a60:	bl	30a68 <blkid_probe_get_size@plt+0x29550>
   31a64:	mov	r0, #0
   31a68:	add	sp, sp, #8
   31a6c:	pop	{r4, pc}
   31a70:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   31a74:	mov	r0, #0
   31a78:	add	sp, sp, #8
   31a7c:	pop	{r4, pc}
   31a80:	ldr	r2, [pc, #40]	; 31ab0 <blkid_probe_get_size@plt+0x2a598>
   31a84:	mov	r0, r3
   31a88:	add	r2, pc, r2
   31a8c:	add	r3, r2, #1536	; 0x600
   31a90:	ldr	r1, [pc, #28]	; 31ab4 <blkid_probe_get_size@plt+0x2a59c>
   31a94:	ldr	r2, [pc, #28]	; 31ab8 <blkid_probe_get_size@plt+0x2a5a0>
   31a98:	add	r3, r3, #8
   31a9c:	str	r3, [sp]
   31aa0:	add	r2, pc, r2
   31aa4:	ldr	r3, [pc, #16]	; 31abc <blkid_probe_get_size@plt+0x2a5a4>
   31aa8:	add	r1, pc, r1
   31aac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31ab0:	andeq	sl, r3, r0, ror sp
   31ab4:	andeq	r6, r3, r8, lsr #9
   31ab8:	andeq	fp, r3, ip, lsl sl
   31abc:	muleq	r0, r5, r6
   31ac0:	push	{r4, r5, lr}
   31ac4:	subs	r5, r0, #0
   31ac8:	sub	sp, sp, #12
   31acc:	bne	31ae4 <blkid_probe_get_size@plt+0x2a5cc>
   31ad0:	b	31bec <blkid_probe_get_size@plt+0x2a6d4>
   31ad4:	mov	r0, r4
   31ad8:	bl	30a68 <blkid_probe_get_size@plt+0x29550>
   31adc:	mov	r0, r4
   31ae0:	bl	31a14 <blkid_probe_get_size@plt+0x2a4fc>
   31ae4:	ldr	r4, [r5, #308]	; 0x134
   31ae8:	cmp	r4, #0
   31aec:	beq	31b28 <blkid_probe_get_size@plt+0x2a610>
   31af0:	ldrb	r3, [r4, #25]
   31af4:	tst	r3, #4
   31af8:	bne	31ad4 <blkid_probe_get_size@plt+0x2a5bc>
   31afc:	ldr	r2, [pc, #316]	; 31c40 <blkid_probe_get_size@plt+0x2a728>
   31b00:	ldr	r1, [pc, #316]	; 31c44 <blkid_probe_get_size@plt+0x2a72c>
   31b04:	add	r2, pc, r2
   31b08:	add	r2, r2, #1568	; 0x620
   31b0c:	str	r2, [sp]
   31b10:	ldr	r2, [pc, #304]	; 31c48 <blkid_probe_get_size@plt+0x2a730>
   31b14:	mov	r3, #248	; 0xf8
   31b18:	add	r2, pc, r2
   31b1c:	add	r1, pc, r1
   31b20:	mov	r0, #0
   31b24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31b28:	ldr	r3, [r5, #304]	; 0x130
   31b2c:	cmp	r3, #0
   31b30:	bne	31c14 <blkid_probe_get_size@plt+0x2a6fc>
   31b34:	ldr	r2, [r5, #280]	; 0x118
   31b38:	cmp	r2, #0
   31b3c:	strne	r3, [r2]
   31b40:	ldr	r0, [r5, #4]
   31b44:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   31b48:	ldr	r0, [r5, #8]
   31b4c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   31b50:	add	r0, r5, #24
   31b54:	bl	2e004 <blkid_probe_get_size@plt+0x26aec>
   31b58:	add	r0, r5, #56	; 0x38
   31b5c:	bl	2e004 <blkid_probe_get_size@plt+0x26aec>
   31b60:	add	r0, r5, #88	; 0x58
   31b64:	bl	2e004 <blkid_probe_get_size@plt+0x26aec>
   31b68:	add	r0, r5, #120	; 0x78
   31b6c:	bl	2e004 <blkid_probe_get_size@plt+0x26aec>
   31b70:	add	r0, r5, #152	; 0x98
   31b74:	bl	2e004 <blkid_probe_get_size@plt+0x26aec>
   31b78:	ldr	r0, [r5, #12]
   31b7c:	bl	39bac <blkid_probe_get_size@plt+0x32694>
   31b80:	ldr	r0, [r5, #16]
   31b84:	bl	39bac <blkid_probe_get_size@plt+0x32694>
   31b88:	ldr	r0, [r5, #212]	; 0xd4
   31b8c:	bl	39bac <blkid_probe_get_size@plt+0x32694>
   31b90:	ldr	r0, [r5, #192]	; 0xc0
   31b94:	bl	69f0 <free@plt>
   31b98:	mov	r2, #0
   31b9c:	mov	r1, r2
   31ba0:	ldr	r0, [r5, #196]	; 0xc4
   31ba4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31ba8:	mov	r2, #0
   31bac:	mov	r1, r2
   31bb0:	ldr	r0, [r5, #216]	; 0xd8
   31bb4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31bb8:	mov	r2, #0
   31bbc:	mov	r1, r2
   31bc0:	ldr	r0, [r5, #200]	; 0xc8
   31bc4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31bc8:	mov	r2, #0
   31bcc:	mov	r1, r2
   31bd0:	ldr	r0, [r5, #208]	; 0xd0
   31bd4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   31bd8:	mov	r0, r5
   31bdc:	bl	69f0 <free@plt>
   31be0:	mov	r0, #0
   31be4:	add	sp, sp, #12
   31be8:	pop	{r4, r5, pc}
   31bec:	ldr	r2, [pc, #88]	; 31c4c <blkid_probe_get_size@plt+0x2a734>
   31bf0:	ldr	r1, [pc, #88]	; 31c50 <blkid_probe_get_size@plt+0x2a738>
   31bf4:	add	r2, pc, r2
   31bf8:	add	r2, r2, #1568	; 0x620
   31bfc:	str	r2, [sp]
   31c00:	ldr	r2, [pc, #76]	; 31c54 <blkid_probe_get_size@plt+0x2a73c>
   31c04:	mov	r3, #245	; 0xf5
   31c08:	add	r2, pc, r2
   31c0c:	add	r1, pc, r1
   31c10:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31c14:	ldr	r2, [pc, #60]	; 31c58 <blkid_probe_get_size@plt+0x2a740>
   31c18:	ldr	r1, [pc, #60]	; 31c5c <blkid_probe_get_size@plt+0x2a744>
   31c1c:	add	r2, pc, r2
   31c20:	add	r2, r2, #1568	; 0x620
   31c24:	str	r2, [sp]
   31c28:	ldr	r2, [pc, #48]	; 31c60 <blkid_probe_get_size@plt+0x2a748>
   31c2c:	mov	r3, #253	; 0xfd
   31c30:	add	r2, pc, r2
   31c34:	add	r1, pc, r1
   31c38:	mov	r0, #0
   31c3c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31c40:	strdeq	sl, [r3], -r4
   31c44:	andeq	ip, r3, ip, ror #11
   31c48:	andeq	fp, r3, r4, lsr #19
   31c4c:	andeq	sl, r3, r4, lsl #24
   31c50:	andeq	r2, r4, r4, ror #20
   31c54:			; <UNDEFINED> instruction: 0x0003b8b4
   31c58:	ldrdeq	sl, [r3], -ip
   31c5c:	andeq	ip, r3, r0, ror #9
   31c60:	andeq	fp, r3, ip, lsl #17
   31c64:	cmp	r0, #0
   31c68:	bxeq	lr
   31c6c:	ldr	r3, [r0]
   31c70:	cmp	r3, #0
   31c74:	beq	31c84 <blkid_probe_get_size@plt+0x2a76c>
   31c78:	add	r3, r3, #1
   31c7c:	str	r3, [r0]
   31c80:	bx	lr
   31c84:	ldr	r2, [pc, #48]	; 31cbc <blkid_probe_get_size@plt+0x2a7a4>
   31c88:	push	{lr}		; (str lr, [sp, #-4]!)
   31c8c:	add	r2, pc, r2
   31c90:	sub	sp, sp, #12
   31c94:	mov	r0, r3
   31c98:	ldr	r1, [pc, #32]	; 31cc0 <blkid_probe_get_size@plt+0x2a7a8>
   31c9c:	add	r3, r2, #1568	; 0x620
   31ca0:	ldr	r2, [pc, #28]	; 31cc4 <blkid_probe_get_size@plt+0x2a7ac>
   31ca4:	add	r3, r3, #12
   31ca8:	str	r3, [sp]
   31cac:	add	r2, pc, r2
   31cb0:	mov	r3, #340	; 0x154
   31cb4:	add	r1, pc, r1
   31cb8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31cbc:	andeq	sl, r3, ip, ror #22
   31cc0:	muleq	r3, ip, r2
   31cc4:	andeq	fp, r3, r0, lsl r8
   31cc8:	push	{r4, r5, r6, r7, lr}
   31ccc:	subs	r5, r0, #0
   31cd0:	sub	sp, sp, #12
   31cd4:	beq	31d84 <blkid_probe_get_size@plt+0x2a86c>
   31cd8:	mov	r0, #224	; 0xe0
   31cdc:	mov	r7, r1
   31ce0:	mov	r6, r2
   31ce4:	bl	7230 <malloc@plt>
   31ce8:	subs	r4, r0, #0
   31cec:	beq	31d6c <blkid_probe_get_size@plt+0x2a854>
   31cf0:	mov	r2, #224	; 0xe0
   31cf4:	mov	r1, #0
   31cf8:	bl	6c84 <memset@plt>
   31cfc:	ldrb	r2, [r4, #24]
   31d00:	ldrb	r3, [r4, #25]
   31d04:	and	r1, r7, #1
   31d08:	bic	r2, r2, #31
   31d0c:	and	r6, r6, #31
   31d10:	bic	r3, r3, #4
   31d14:	orr	r6, r6, r2
   31d18:	orr	r3, r3, r1, lsl #2
   31d1c:	mvn	r2, #0
   31d20:	mov	r1, #1
   31d24:	cmp	r7, #0
   31d28:	str	r5, [r4, #8]
   31d2c:	strb	r6, [r4, #24]
   31d30:	strb	r3, [r4, #25]
   31d34:	str	r1, [r4, #4]
   31d38:	str	r2, [r4, #40]	; 0x28
   31d3c:	str	r2, [r4, #44]	; 0x2c
   31d40:	beq	31d78 <blkid_probe_get_size@plt+0x2a860>
   31d44:	ldr	r3, [r5, #308]	; 0x134
   31d48:	mov	r2, #0
   31d4c:	cmp	r3, #0
   31d50:	str	r3, [r4, #68]	; 0x44
   31d54:	strne	r4, [r3, #72]	; 0x48
   31d58:	ldr	r3, [r5, #304]	; 0x130
   31d5c:	str	r4, [r5, #308]	; 0x134
   31d60:	add	r3, r3, #1
   31d64:	str	r3, [r5, #304]	; 0x130
   31d68:	str	r2, [r4, #72]	; 0x48
   31d6c:	mov	r0, r4
   31d70:	add	sp, sp, #12
   31d74:	pop	{r4, r5, r6, r7, pc}
   31d78:	mov	r0, r5
   31d7c:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   31d80:	b	31d44 <blkid_probe_get_size@plt+0x2a82c>
   31d84:	ldr	r2, [pc, #36]	; 31db0 <blkid_probe_get_size@plt+0x2a898>
   31d88:	ldr	r1, [pc, #36]	; 31db4 <blkid_probe_get_size@plt+0x2a89c>
   31d8c:	add	r2, pc, r2
   31d90:	add	r2, r2, #1584	; 0x630
   31d94:	add	r2, r2, #12
   31d98:	str	r2, [sp]
   31d9c:	ldr	r2, [pc, #20]	; 31db8 <blkid_probe_get_size@plt+0x2a8a0>
   31da0:	mov	r3, #852	; 0x354
   31da4:	add	r2, pc, r2
   31da8:	add	r1, pc, r1
   31dac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   31db0:	andeq	sl, r3, ip, ror #20
   31db4:	andeq	r2, r4, r8, asr #17
   31db8:	andeq	fp, r3, r8, lsl r7
   31dbc:	push	{r4, r5, r6, lr}
   31dc0:	mov	r6, r0
   31dc4:	sub	sp, sp, #8
   31dc8:	mov	r0, #584	; 0x248
   31dcc:	bl	7230 <malloc@plt>
   31dd0:	subs	r4, r0, #0
   31dd4:	beq	31f2c <blkid_probe_get_size@plt+0x2aa14>
   31dd8:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   31ddc:	mov	r2, #584	; 0x248
   31de0:	mov	r1, #0
   31de4:	mov	r5, r0
   31de8:	mov	r0, r4
   31dec:	bl	6c84 <memset@plt>
   31df0:	mvn	r0, #0
   31df4:	mvn	r1, #0
   31df8:	mvn	r3, #0
   31dfc:	strd	r0, [r4, #40]	; 0x28
   31e00:	strd	r0, [r4, #72]	; 0x48
   31e04:	strd	r0, [r4, #104]	; 0x68
   31e08:	strd	r0, [r4, #136]	; 0x88
   31e0c:	strd	r0, [r4, #168]	; 0xa8
   31e10:	strd	r0, [r4, #184]	; 0xb8
   31e14:	ldr	r1, [pc, #280]	; 31f34 <blkid_probe_get_size@plt+0x2aa1c>
   31e18:	mov	r2, #2
   31e1c:	mov	ip, #1
   31e20:	str	r5, [r4, #228]	; 0xe4
   31e24:	str	ip, [r4]
   31e28:	str	r3, [r4, #4]
   31e2c:	str	r3, [r4, #8]
   31e30:	str	r3, [r4, #28]
   31e34:	str	r3, [r4, #60]	; 0x3c
   31e38:	str	r3, [r4, #92]	; 0x5c
   31e3c:	str	r3, [r4, #124]	; 0x7c
   31e40:	str	r3, [r4, #156]	; 0x9c
   31e44:	str	r2, [r4, #24]
   31e48:	str	r2, [r4, #56]	; 0x38
   31e4c:	str	r2, [r4, #88]	; 0x58
   31e50:	str	r2, [r4, #120]	; 0x78
   31e54:	str	r2, [r4, #152]	; 0x98
   31e58:	add	r1, pc, r1
   31e5c:	add	r0, r4, #12
   31e60:	bl	3f868 <blkid_probe_get_size@plt+0x38350>
   31e64:	subs	r5, r0, #0
   31e68:	blt	31e8c <blkid_probe_get_size@plt+0x2a974>
   31e6c:	mov	r0, #524288	; 0x80000
   31e70:	bl	70c8 <epoll_create1@plt>
   31e74:	cmp	r0, #0
   31e78:	str	r0, [r4, #4]
   31e7c:	bge	31ea0 <blkid_probe_get_size@plt+0x2a988>
   31e80:	bl	732c <__errno_location@plt>
   31e84:	ldr	r5, [r0]
   31e88:	rsb	r5, r5, #0
   31e8c:	mov	r0, r4
   31e90:	bl	31ac0 <blkid_probe_get_size@plt+0x2a5a8>
   31e94:	mov	r0, r5
   31e98:	add	sp, sp, #8
   31e9c:	pop	{r4, r5, r6, pc}
   31ea0:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   31ea4:	str	r0, [r4, #4]
   31ea8:	ldr	r0, [pc, #136]	; 31f38 <blkid_probe_get_size@plt+0x2aa20>
   31eac:	add	r0, pc, r0
   31eb0:	bl	744c <secure_getenv@plt>
   31eb4:	cmp	r0, #0
   31eb8:	beq	31edc <blkid_probe_get_size@plt+0x2a9c4>
   31ebc:	ldr	r3, [pc, #120]	; 31f3c <blkid_probe_get_size@plt+0x2aa24>
   31ec0:	add	r3, pc, r3
   31ec4:	ldr	r3, [r3]
   31ec8:	cmp	r3, #6
   31ecc:	bgt	31ef0 <blkid_probe_get_size@plt+0x2a9d8>
   31ed0:	ldrb	r3, [r4, #268]	; 0x10c
   31ed4:	orr	r3, r3, #8
   31ed8:	strb	r3, [r4, #268]	; 0x10c
   31edc:	mov	r5, #0
   31ee0:	mov	r0, r5
   31ee4:	str	r4, [r6]
   31ee8:	add	sp, sp, #8
   31eec:	pop	{r4, r5, r6, pc}
   31ef0:	ldr	r3, [pc, #72]	; 31f40 <blkid_probe_get_size@plt+0x2aa28>
   31ef4:	ldr	r2, [pc, #72]	; 31f44 <blkid_probe_get_size@plt+0x2aa2c>
   31ef8:	add	r3, pc, r3
   31efc:	add	r2, pc, r2
   31f00:	str	r2, [sp, #4]
   31f04:	add	r3, r3, #1600	; 0x640
   31f08:	ldr	r2, [pc, #56]	; 31f48 <blkid_probe_get_size@plt+0x2aa30>
   31f0c:	add	r3, r3, #8
   31f10:	str	r3, [sp]
   31f14:	add	r2, pc, r2
   31f18:	mov	r3, #328	; 0x148
   31f1c:	mov	r1, #0
   31f20:	mov	r0, #7
   31f24:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   31f28:	b	31ed0 <blkid_probe_get_size@plt+0x2a9b8>
   31f2c:	mvn	r5, #11
   31f30:	b	31e94 <blkid_probe_get_size@plt+0x2a97c>
   31f34:			; <UNDEFINED> instruction: 0xffff9244
   31f38:	andeq	ip, r3, ip, ror r2
   31f3c:	andeq	r6, r6, ip, ror r2
   31f40:	andeq	sl, r3, r0, lsl #18
   31f44:	andeq	ip, r3, r4, asr #4
   31f48:	andeq	fp, r3, r8, lsr #11
   31f4c:	ldr	r3, [pc, #168]	; 31ffc <blkid_probe_get_size@plt+0x2aae4>
   31f50:	ldr	r2, [pc, #168]	; 32000 <blkid_probe_get_size@plt+0x2aae8>
   31f54:	add	r3, pc, r3
   31f58:	push	{r4, r5, r6, r7, r8, r9, lr}
   31f5c:	sub	sp, sp, #12
   31f60:	ldr	r5, [r3, r2]
   31f64:	ldr	r1, [pc, #152]	; 32004 <blkid_probe_get_size@plt+0x2aaec>
   31f68:	mov	r4, #0
   31f6c:	ldr	r2, [r5]
   31f70:	mov	r6, r0
   31f74:	add	r0, pc, r1
   31f78:	str	r2, [sp, #4]
   31f7c:	str	r4, [sp]
   31f80:	bl	74dc <__tls_get_addr@plt>
   31f84:	ldr	r7, [pc, #124]	; 32008 <blkid_probe_get_size@plt+0x2aaf0>
   31f88:	mov	r8, r0
   31f8c:	ldr	r0, [r0, r7]
   31f90:	cmp	r0, r4
   31f94:	beq	31fbc <blkid_probe_get_size@plt+0x2aaa4>
   31f98:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   31f9c:	str	r0, [r6]
   31fa0:	ldr	r2, [sp, #4]
   31fa4:	ldr	r3, [r5]
   31fa8:	mov	r0, r4
   31fac:	cmp	r2, r3
   31fb0:	bne	31ff8 <blkid_probe_get_size@plt+0x2aae0>
   31fb4:	add	sp, sp, #12
   31fb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31fbc:	mov	r0, sp
   31fc0:	bl	31dbc <blkid_probe_get_size@plt+0x2a8a4>
   31fc4:	subs	r4, r0, #0
   31fc8:	blt	31fa0 <blkid_probe_get_size@plt+0x2aa88>
   31fcc:	ldr	r9, [sp]
   31fd0:	add	r3, r8, r7
   31fd4:	mov	r0, #224	; 0xe0
   31fd8:	str	r3, [r9, #280]	; 0x118
   31fdc:	bl	6b94 <syscall@plt>
   31fe0:	ldr	r3, [sp]
   31fe4:	mov	r4, #1
   31fe8:	str	r3, [r8, r7]
   31fec:	str	r0, [r9, #276]	; 0x114
   31ff0:	str	r3, [r6]
   31ff4:	b	31fa0 <blkid_probe_get_size@plt+0x2aa88>
   31ff8:	bl	6fb4 <__stack_chk_fail@plt>
   31ffc:	andeq	r5, r6, r4, lsl ip
   32000:	andeq	r0, r0, ip, lsr r4
   32004:	andeq	r6, r6, r4, lsr #32
   32008:	andeq	r0, r0, r4, asr r0
   3200c:	ldr	r3, [pc, #320]	; 32154 <blkid_probe_get_size@plt+0x2ac3c>
   32010:	ldr	r2, [pc, #320]	; 32158 <blkid_probe_get_size@plt+0x2ac40>
   32014:	add	r3, pc, r3
   32018:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3201c:	subs	r6, r0, #0
   32020:	ldr	r8, [r3, r2]
   32024:	sub	sp, sp, #32
   32028:	movne	r5, #0
   3202c:	ldr	r3, [r8]
   32030:	movne	r9, r1
   32034:	str	r3, [sp, #28]
   32038:	movne	r7, r5
   3203c:	movne	r4, r5
   32040:	bne	32088 <blkid_probe_get_size@plt+0x2ab70>
   32044:	b	3211c <blkid_probe_get_size@plt+0x2ac04>
   32048:	bl	42c4c <blkid_probe_get_size@plt+0x3b734>
   3204c:	add	r3, r4, #1
   32050:	subs	sl, r0, #0
   32054:	blt	320b4 <blkid_probe_get_size@plt+0x2ab9c>
   32058:	ldrb	r0, [r6, r3]
   3205c:	bl	42c4c <blkid_probe_get_size@plt+0x3b734>
   32060:	add	r4, r4, #2
   32064:	cmp	r0, #0
   32068:	blt	320b4 <blkid_probe_get_size@plt+0x2ab9c>
   3206c:	add	r3, sp, #32
   32070:	add	r3, r3, r5
   32074:	add	r5, r5, #1
   32078:	orr	r0, r0, sl, lsl #4
   3207c:	cmp	r5, #16
   32080:	strb	r0, [r3, #-24]	; 0xffffffe8
   32084:	beq	320ec <blkid_probe_get_size@plt+0x2abd4>
   32088:	ldrb	r0, [r6, r4]
   3208c:	cmp	r0, #45	; 0x2d
   32090:	bne	32048 <blkid_probe_get_size@plt+0x2ab30>
   32094:	cmp	r4, #8
   32098:	beq	320dc <blkid_probe_get_size@plt+0x2abc4>
   3209c:	cmp	r4, #18
   320a0:	beq	320d4 <blkid_probe_get_size@plt+0x2abbc>
   320a4:	cmp	r4, #23
   320a8:	beq	320d4 <blkid_probe_get_size@plt+0x2abbc>
   320ac:	cmp	r4, #13
   320b0:	beq	320d4 <blkid_probe_get_size@plt+0x2abbc>
   320b4:	mvn	ip, #21
   320b8:	ldr	r2, [sp, #28]
   320bc:	ldr	r3, [r8]
   320c0:	mov	r0, ip
   320c4:	cmp	r2, r3
   320c8:	bne	32150 <blkid_probe_get_size@plt+0x2ac38>
   320cc:	add	sp, sp, #32
   320d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   320d4:	cmp	r7, #0
   320d8:	beq	320b4 <blkid_probe_get_size@plt+0x2ab9c>
   320dc:	cmp	r5, #16
   320e0:	add	r4, r4, #1
   320e4:	mov	r7, #1
   320e8:	bne	32088 <blkid_probe_get_size@plt+0x2ab70>
   320ec:	cmp	r7, #0
   320f0:	movne	r3, #36	; 0x24
   320f4:	moveq	r3, #32
   320f8:	cmp	r3, r4
   320fc:	bne	320b4 <blkid_probe_get_size@plt+0x2ab9c>
   32100:	ldrb	ip, [r6, r4]
   32104:	cmp	ip, #0
   32108:	bne	320b4 <blkid_probe_get_size@plt+0x2ab9c>
   3210c:	add	r3, sp, #8
   32110:	ldm	r3, {r0, r1, r2, r3}
   32114:	stm	r9, {r0, r1, r2, r3}
   32118:	b	320b8 <blkid_probe_get_size@plt+0x2aba0>
   3211c:	ldr	r2, [pc, #56]	; 3215c <blkid_probe_get_size@plt+0x2ac44>
   32120:	ldr	r1, [pc, #56]	; 32160 <blkid_probe_get_size@plt+0x2ac48>
   32124:	add	r2, pc, r2
   32128:	add	r2, r2, #1616	; 0x650
   3212c:	add	r2, r2, #8
   32130:	str	r2, [sp]
   32134:	ldr	r2, [pc, #40]	; 32164 <blkid_probe_get_size@plt+0x2ac4c>
   32138:	mov	r3, #41	; 0x29
   3213c:	add	r2, pc, r2
   32140:	add	r1, pc, r1
   32144:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32148:	mvn	ip, #21
   3214c:	b	320b8 <blkid_probe_get_size@plt+0x2aba0>
   32150:	bl	6fb4 <__stack_chk_fail@plt>
   32154:	andeq	r5, r6, r4, asr fp
   32158:	andeq	r0, r0, ip, lsr r4
   3215c:	ldrdeq	sl, [r3], -r4
   32160:	andeq	lr, r3, r8, lsr r2
   32164:	andeq	ip, r3, r8, lsl #1
   32168:	ldr	r3, [pc, #264]	; 32278 <blkid_probe_get_size@plt+0x2ad60>
   3216c:	ldr	ip, [pc, #264]	; 3227c <blkid_probe_get_size@plt+0x2ad64>
   32170:	add	r3, pc, r3
   32174:	push	{r4, r5, r6, r7, r8, r9, lr}
   32178:	sub	sp, sp, #52	; 0x34
   3217c:	ldr	r7, [r3, ip]
   32180:	mov	r5, r1
   32184:	ldr	r1, [pc, #244]	; 32280 <blkid_probe_get_size@plt+0x2ad68>
   32188:	ldr	r3, [r7]
   3218c:	mov	r6, r2
   32190:	str	r3, [sp, #44]	; 0x2c
   32194:	bl	6ec4 <open64@plt>
   32198:	subs	r8, r0, #0
   3219c:	blt	32238 <blkid_probe_get_size@plt+0x2ad20>
   321a0:	add	r9, sp, #4
   321a4:	mov	r1, r9
   321a8:	mov	r3, #0
   321ac:	mov	r2, #38	; 0x26
   321b0:	bl	4272c <blkid_probe_get_size@plt+0x3b214>
   321b4:	subs	r4, r0, #0
   321b8:	blt	32214 <blkid_probe_get_size@plt+0x2acfc>
   321bc:	beq	3226c <blkid_probe_get_size@plt+0x2ad54>
   321c0:	sub	r4, r4, #32
   321c4:	cmp	r4, #5
   321c8:	addls	pc, pc, r4, lsl #2
   321cc:	b	32264 <blkid_probe_get_size@plt+0x2ad4c>
   321d0:	b	32254 <blkid_probe_get_size@plt+0x2ad3c>
   321d4:	b	32248 <blkid_probe_get_size@plt+0x2ad30>
   321d8:	b	32264 <blkid_probe_get_size@plt+0x2ad4c>
   321dc:	b	32264 <blkid_probe_get_size@plt+0x2ad4c>
   321e0:	b	321f4 <blkid_probe_get_size@plt+0x2acdc>
   321e4:	b	321e8 <blkid_probe_get_size@plt+0x2acd0>
   321e8:	ldrb	r3, [sp, #40]	; 0x28
   321ec:	cmp	r3, #10
   321f0:	bne	32264 <blkid_probe_get_size@plt+0x2ad4c>
   321f4:	cmp	r5, #1
   321f8:	beq	32264 <blkid_probe_get_size@plt+0x2ad4c>
   321fc:	mov	r3, #0
   32200:	strb	r3, [sp, #40]	; 0x28
   32204:	mov	r1, r6
   32208:	mov	r0, r9
   3220c:	bl	3200c <blkid_probe_get_size@plt+0x2aaf4>
   32210:	mov	r4, r0
   32214:	mov	r0, r8
   32218:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3221c:	ldr	r2, [sp, #44]	; 0x2c
   32220:	ldr	r3, [r7]
   32224:	mov	r0, r4
   32228:	cmp	r2, r3
   3222c:	bne	32274 <blkid_probe_get_size@plt+0x2ad5c>
   32230:	add	sp, sp, #52	; 0x34
   32234:	pop	{r4, r5, r6, r7, r8, r9, pc}
   32238:	bl	732c <__errno_location@plt>
   3223c:	ldr	r4, [r0]
   32240:	rsb	r4, r4, #0
   32244:	b	32214 <blkid_probe_get_size@plt+0x2acfc>
   32248:	ldrb	r3, [sp, #36]	; 0x24
   3224c:	cmp	r3, #10
   32250:	bne	32264 <blkid_probe_get_size@plt+0x2ad4c>
   32254:	cmp	r5, #2
   32258:	movne	r3, #0
   3225c:	strbne	r3, [sp, #36]	; 0x24
   32260:	bne	32204 <blkid_probe_get_size@plt+0x2acec>
   32264:	mvn	r4, #21
   32268:	b	32214 <blkid_probe_get_size@plt+0x2acfc>
   3226c:	mvn	r4, #122	; 0x7a
   32270:	b	32214 <blkid_probe_get_size@plt+0x2acfc>
   32274:	bl	6fb4 <__stack_chk_fail@plt>
   32278:	strdeq	r5, [r6], -r8
   3227c:	andeq	r0, r0, ip, lsr r4
   32280:	andeq	r0, r8, r0, lsl #2
   32284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32288:	sub	sp, sp, #12
   3228c:	subs	r6, r0, #0
   32290:	ldrd	r8, [sp, #48]	; 0x30
   32294:	beq	32570 <blkid_probe_get_size@plt+0x2b058>
   32298:	cmp	r3, r9
   3229c:	cmpeq	r2, r8
   322a0:	mov	r4, r2
   322a4:	mov	r5, r3
   322a8:	bhi	32598 <blkid_probe_get_size@plt+0x2b080>
   322ac:	orrs	r3, r4, r5
   322b0:	beq	322dc <blkid_probe_get_size@plt+0x2adc4>
   322b4:	mvn	r3, #0
   322b8:	mvn	r2, #0
   322bc:	cmp	r5, r3
   322c0:	cmpeq	r4, r2
   322c4:	beq	322dc <blkid_probe_get_size@plt+0x2adc4>
   322c8:	adds	r0, r4, #1
   322cc:	adc	r1, r5, #0
   322d0:	cmp	r1, r9
   322d4:	cmpeq	r0, r8
   322d8:	bcc	322ec <blkid_probe_get_size@plt+0x2add4>
   322dc:	mov	r0, r4
   322e0:	mov	r1, r5
   322e4:	add	sp, sp, #12
   322e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   322ec:	ldrd	sl, [r6, #184]	; 0xb8
   322f0:	cmp	fp, r3
   322f4:	cmpeq	sl, r2
   322f8:	beq	325dc <blkid_probe_get_size@plt+0x2b0c4>
   322fc:	ldr	r2, [pc, #932]	; 326a8 <blkid_probe_get_size@plt+0x2b190>
   32300:	mov	r3, #0
   32304:	mov	r0, r8
   32308:	mov	r1, r9
   3230c:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32310:	ldr	ip, [pc, #912]	; 326a8 <blkid_probe_get_size@plt+0x2b190>
   32314:	umull	r2, r3, r0, ip
   32318:	mla	r3, ip, r1, r3
   3231c:	adds	r6, r2, sl
   32320:	adc	r7, r3, fp
   32324:	cmp	r9, r7
   32328:	cmpeq	r8, r6
   3232c:	bhi	32354 <blkid_probe_get_size@plt+0x2ae3c>
   32330:	add	r1, pc, #824	; 0x338
   32334:	ldrd	r0, [r1]
   32338:	cmp	r7, r1
   3233c:	cmpeq	r6, r0
   32340:	bls	32564 <blkid_probe_get_size@plt+0x2b04c>
   32344:	add	r1, pc, #812	; 0x32c
   32348:	ldrd	r0, [r1]
   3234c:	adds	r6, r6, r0
   32350:	adc	r7, r7, r1
   32354:	cmp	r5, r7
   32358:	cmpeq	r4, r6
   3235c:	bls	325c4 <blkid_probe_get_size@plt+0x2b0ac>
   32360:	add	r3, pc, #792	; 0x318
   32364:	ldrd	r2, [r3]
   32368:	mov	r0, r8
   3236c:	mov	r1, r9
   32370:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32374:	ldr	ip, [pc, #816]	; 326ac <blkid_probe_get_size@plt+0x2b194>
   32378:	add	r3, pc, #768	; 0x300
   3237c:	ldrd	r2, [r3]
   32380:	umull	r6, r7, r0, ip
   32384:	mov	r0, sl
   32388:	mla	r7, ip, r1, r7
   3238c:	mov	r1, fp
   32390:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32394:	adds	r0, r2, r6
   32398:	adc	r1, r3, r7
   3239c:	cmp	r9, r1
   323a0:	cmpeq	r8, r0
   323a4:	mov	r2, r0
   323a8:	mov	r3, r1
   323ac:	bhi	323d4 <blkid_probe_get_size@plt+0x2aebc>
   323b0:	add	r1, pc, #720	; 0x2d0
   323b4:	ldrd	r0, [r1]
   323b8:	cmp	r3, r1
   323bc:	cmpeq	r2, r0
   323c0:	bls	32564 <blkid_probe_get_size@plt+0x2b04c>
   323c4:	add	r1, pc, #708	; 0x2c4
   323c8:	ldrd	r0, [r1]
   323cc:	adds	r2, r2, r0
   323d0:	adc	r3, r3, r1
   323d4:	cmp	r5, r3
   323d8:	cmpeq	r4, r2
   323dc:	bls	325d0 <blkid_probe_get_size@plt+0x2b0b8>
   323e0:	ldr	r2, [pc, #712]	; 326b0 <blkid_probe_get_size@plt+0x2b198>
   323e4:	mov	r3, #0
   323e8:	mov	r0, r8
   323ec:	mov	r1, r9
   323f0:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   323f4:	lsl	r3, r1, #5
   323f8:	lsl	r6, r0, #5
   323fc:	subs	r6, r6, r0
   32400:	orr	r7, r3, r0, lsr #27
   32404:	sbc	r7, r7, r1
   32408:	lsl	lr, r6, #9
   3240c:	lsl	ip, r7, #9
   32410:	orr	ip, ip, r6, lsr #23
   32414:	adds	r6, lr, r0
   32418:	adc	r7, ip, r1
   3241c:	lsl	r2, r6, #6
   32420:	lsl	r3, r7, #6
   32424:	subs	r2, r2, r6
   32428:	orr	r3, r3, r6, lsr #26
   3242c:	sbc	r3, r3, r7
   32430:	mov	r6, r2
   32434:	adds	r6, r6, r0
   32438:	mov	r7, r3
   3243c:	adc	r7, r7, r1
   32440:	ldr	r2, [pc, #616]	; 326b0 <blkid_probe_get_size@plt+0x2b198>
   32444:	mov	r3, #0
   32448:	mov	r0, sl
   3244c:	mov	r1, fp
   32450:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32454:	adds	r0, r2, r6
   32458:	adc	r1, r3, r7
   3245c:	cmp	r9, r1
   32460:	cmpeq	r8, r0
   32464:	mov	r2, r0
   32468:	mov	r3, r1
   3246c:	bhi	32494 <blkid_probe_get_size@plt+0x2af7c>
   32470:	add	r1, pc, #544	; 0x220
   32474:	ldrd	r0, [r1]
   32478:	cmp	r3, r1
   3247c:	cmpeq	r2, r0
   32480:	bls	32564 <blkid_probe_get_size@plt+0x2b04c>
   32484:	add	r1, pc, #532	; 0x214
   32488:	ldrd	r0, [r1]
   3248c:	adds	r2, r2, r0
   32490:	adc	r3, r3, r1
   32494:	cmp	r5, r3
   32498:	cmpeq	r4, r2
   3249c:	bls	325d0 <blkid_probe_get_size@plt+0x2b0b8>
   324a0:	ldr	r2, [pc, #524]	; 326b4 <blkid_probe_get_size@plt+0x2b19c>
   324a4:	mov	r3, #0
   324a8:	mov	r0, r8
   324ac:	mov	r1, r9
   324b0:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   324b4:	mov	r6, r0
   324b8:	mov	r7, r1
   324bc:	lsl	r2, r0, #5
   324c0:	lsl	r1, r1, #5
   324c4:	subs	r2, r2, r6
   324c8:	orr	r3, r1, r6, lsr #27
   324cc:	sbc	r3, r3, r7
   324d0:	lsl	r0, r2, #6
   324d4:	lsl	r1, r3, #6
   324d8:	orr	r1, r1, r2, lsr #26
   324dc:	subs	r2, r0, r2
   324e0:	sbc	r3, r1, r3
   324e4:	lsl	lr, r2, #3
   324e8:	lsl	ip, r3, #3
   324ec:	orr	ip, ip, r2, lsr #29
   324f0:	mov	r0, sl
   324f4:	adds	sl, r6, lr
   324f8:	mov	r1, fp
   324fc:	adc	fp, r7, ip
   32500:	lsl	lr, sl, #4
   32504:	lsl	ip, fp, #4
   32508:	orr	ip, ip, sl, lsr #28
   3250c:	ldr	r2, [pc, #416]	; 326b4 <blkid_probe_get_size@plt+0x2b19c>
   32510:	mov	r3, #0
   32514:	mov	sl, lr
   32518:	mov	fp, ip
   3251c:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32520:	adds	r6, r2, sl
   32524:	adc	r7, r3, fp
   32528:	cmp	r9, r7
   3252c:	cmpeq	r8, r6
   32530:	bhi	32558 <blkid_probe_get_size@plt+0x2b040>
   32534:	ldr	r0, [pc, #380]	; 326b8 <blkid_probe_get_size@plt+0x2b1a0>
   32538:	mov	r1, #0
   3253c:	cmp	r7, r1
   32540:	cmpeq	r6, r0
   32544:	bls	32564 <blkid_probe_get_size@plt+0x2b04c>
   32548:	ldr	r0, [pc, #364]	; 326bc <blkid_probe_get_size@plt+0x2b1a4>
   3254c:	mvn	r1, #0
   32550:	adds	r6, r6, r0
   32554:	adc	r7, r7, r1
   32558:	cmp	r5, r7
   3255c:	cmpeq	r4, r6
   32560:	bls	325c4 <blkid_probe_get_size@plt+0x2b0ac>
   32564:	mov	r4, r8
   32568:	mov	r5, r9
   3256c:	b	322dc <blkid_probe_get_size@plt+0x2adc4>
   32570:	ldr	r2, [pc, #328]	; 326c0 <blkid_probe_get_size@plt+0x2b1a8>
   32574:	ldr	r1, [pc, #328]	; 326c4 <blkid_probe_get_size@plt+0x2b1ac>
   32578:	add	r2, pc, r2
   3257c:	add	r2, r2, #1648	; 0x670
   32580:	str	r2, [sp]
   32584:	ldr	r2, [pc, #316]	; 326c8 <blkid_probe_get_size@plt+0x2b1b0>
   32588:	ldr	r3, [pc, #316]	; 326cc <blkid_probe_get_size@plt+0x2b1b4>
   3258c:	add	r2, pc, r2
   32590:	add	r1, pc, r1
   32594:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   32598:	ldr	r2, [pc, #304]	; 326d0 <blkid_probe_get_size@plt+0x2b1b8>
   3259c:	ldr	r1, [pc, #304]	; 326d4 <blkid_probe_get_size@plt+0x2b1bc>
   325a0:	add	r2, pc, r2
   325a4:	add	r2, r2, #1648	; 0x670
   325a8:	str	r2, [sp]
   325ac:	ldr	r2, [pc, #292]	; 326d8 <blkid_probe_get_size@plt+0x2b1c0>
   325b0:	ldr	r3, [pc, #292]	; 326dc <blkid_probe_get_size@plt+0x2b1c4>
   325b4:	add	r2, pc, r2
   325b8:	add	r1, pc, r1
   325bc:	mov	r0, #0
   325c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   325c4:	mov	r4, r6
   325c8:	mov	r5, r7
   325cc:	b	322dc <blkid_probe_get_size@plt+0x2adc4>
   325d0:	mov	r4, r2
   325d4:	mov	r5, r3
   325d8:	b	322dc <blkid_probe_get_size@plt+0x2adc4>
   325dc:	ldr	r0, [pc, #252]	; 326e0 <blkid_probe_get_size@plt+0x2b1c8>
   325e0:	ldr	r7, [pc, #252]	; 326e4 <blkid_probe_get_size@plt+0x2b1cc>
   325e4:	add	r0, pc, r0
   325e8:	bl	74dc <__tls_get_addr@plt>
   325ec:	add	r7, r7, r0
   325f0:	ldrd	r2, [r7, #8]
   325f4:	ldrd	sl, [r7, #16]
   325f8:	mov	r0, r2
   325fc:	mov	r1, r3
   32600:	orr	r2, r2, sl
   32604:	orr	r3, r3, fp
   32608:	orrs	r3, r2, r3
   3260c:	beq	32634 <blkid_probe_get_size@plt+0x2b11c>
   32610:	eor	r0, r0, sl
   32614:	eor	r1, r1, fp
   32618:	ldr	r2, [pc, #136]	; 326a8 <blkid_probe_get_size@plt+0x2b190>
   3261c:	mov	r3, #0
   32620:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32624:	mov	sl, r2
   32628:	mov	fp, r3
   3262c:	strd	sl, [r6, #184]	; 0xb8
   32630:	b	322fc <blkid_probe_get_size@plt+0x2ade4>
   32634:	ldr	r0, [pc, #172]	; 326e8 <blkid_probe_get_size@plt+0x2b1d0>
   32638:	add	r2, r7, #8
   3263c:	mov	r1, #2
   32640:	add	r0, pc, r0
   32644:	bl	32168 <blkid_probe_get_size@plt+0x2ac50>
   32648:	cmp	r0, #0
   3264c:	blt	32664 <blkid_probe_get_size@plt+0x2b14c>
   32650:	ldrd	r2, [r7, #8]
   32654:	ldrd	sl, [r7, #16]
   32658:	mov	r0, r2
   3265c:	mov	r1, r3
   32660:	b	32610 <blkid_probe_get_size@plt+0x2b0f8>
   32664:	ldrd	sl, [r6, #184]	; 0xb8
   32668:	b	322fc <blkid_probe_get_size@plt+0x2ade4>
   3266c:	nop			; (mov r0, r0)
   32670:	orrseq	r8, r3, #267386880	; 0xff00000
   32674:	andeq	r0, r0, r0
   32678:	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
   3267c:			; <UNDEFINED> instruction: 0xffffffff
   32680:	addseq	r9, r8, r0, lsl #13
   32684:	andeq	r0, r0, r0
   32688:	addseq	r9, r8, pc, ror r6
   3268c:	andeq	r0, r0, r0
   32690:			; <UNDEFINED> instruction: 0xff676980
   32694:			; <UNDEFINED> instruction: 0xffffffff
   32698:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   3269c:	andeq	r0, r0, r0
   326a0:			; <UNDEFINED> instruction: 0xfff0bdc0
   326a4:			; <UNDEFINED> instruction: 0xffffffff
   326a8:	orrseq	r8, r3, #0, 14
   326ac:	addseq	r9, r8, r0, lsl #13
   326b0:	andeq	r4, pc, r0, asr #4
   326b4:	muleq	r3, r0, r0
   326b8:	andeq	sp, r3, pc, lsl #1
   326bc:			; <UNDEFINED> instruction: 0xfffc2f70
   326c0:	andeq	sl, r3, r0, lsl #5
   326c4:	andeq	r2, r4, r0, ror #1
   326c8:	andeq	sl, r3, r0, lsr pc
   326cc:	andeq	r0, r0, fp, ror #17
   326d0:	andeq	sl, r3, r8, asr r2
   326d4:	andeq	fp, r3, r4, lsr ip
   326d8:	andeq	sl, r3, r8, lsl #30
   326dc:	andeq	r0, r0, ip, ror #17
   326e0:			; <UNDEFINED> instruction: 0x000659b4
   326e4:	andeq	r0, r0, r0, lsl r0
   326e8:			; <UNDEFINED> instruction: 0x0003bbb4
   326ec:	ldr	r1, [pc, #3092]	; 33308 <blkid_probe_get_size@plt+0x2bdf0>
   326f0:	ldr	ip, [pc, #3092]	; 3330c <blkid_probe_get_size@plt+0x2bdf4>
   326f4:	add	r1, pc, r1
   326f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   326fc:	add	fp, sp, #32
   32700:	sub	sp, sp, #204	; 0xcc
   32704:	ldr	r8, [r1, ip]
   32708:	mov	r7, r3
   3270c:	subs	r4, r0, #0
   32710:	ldr	r3, [r8]
   32714:	mov	r6, r2
   32718:	str	r3, [fp, #-40]	; 0xffffffd8
   3271c:	mov	r2, r1
   32720:	beq	32864 <blkid_probe_get_size@plt+0x2b34c>
   32724:	cmp	r4, #1
   32728:	beq	32808 <blkid_probe_get_size@plt+0x2b2f0>
   3272c:	ldr	r5, [r4, #228]	; 0xe4
   32730:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   32734:	cmp	r5, r0
   32738:	bne	32ca0 <blkid_probe_get_size@plt+0x2b788>
   3273c:	ldr	r5, [r4, #264]	; 0x108
   32740:	cmp	r5, #5
   32744:	beq	32d04 <blkid_probe_get_size@plt+0x2b7ec>
   32748:	cmp	r5, #1
   3274c:	bne	32d38 <blkid_probe_get_size@plt+0x2b820>
   32750:	ldrb	r0, [r4, #268]	; 0x10c
   32754:	ands	r0, r0, #1
   32758:	bne	327e4 <blkid_probe_get_size@plt+0x2b2cc>
   3275c:	ldr	r2, [r4, #304]	; 0x130
   32760:	cmp	r2, #1
   32764:	bls	32858 <blkid_probe_get_size@plt+0x2b340>
   32768:	lsrs	r1, r2, #28
   3276c:	bne	331f4 <blkid_probe_get_size@plt+0x2bcdc>
   32770:	lsl	r3, r2, #4
   32774:	cmp	r3, #4194304	; 0x400000
   32778:	bhi	32d84 <blkid_probe_get_size@plt+0x2b86c>
   3277c:	ldr	r1, [r4, #224]	; 0xe0
   32780:	add	r3, r3, #8
   32784:	sub	sp, sp, r3
   32788:	cmp	r1, #0
   3278c:	add	sl, sp, #8
   32790:	ldr	r0, [r4, #4]
   32794:	movne	r3, #0
   32798:	beq	32cec <blkid_probe_get_size@plt+0x2b7d4>
   3279c:	mov	r1, sl
   327a0:	bl	7170 <epoll_wait@plt>
   327a4:	subs	r3, r0, #0
   327a8:	mov	r7, r3
   327ac:	bge	32894 <blkid_probe_get_size@plt+0x2b37c>
   327b0:	bl	732c <__errno_location@plt>
   327b4:	ldr	r3, [r0]
   327b8:	cmp	r3, #4
   327bc:	rsbne	r5, r3, #0
   327c0:	beq	327e4 <blkid_probe_get_size@plt+0x2b2cc>
   327c4:	mov	r3, #0
   327c8:	str	r3, [r4, #264]	; 0x108
   327cc:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   327d0:	mov	r0, r4
   327d4:	bl	2b96c <blkid_probe_get_size@plt+0x24454>
   327d8:	cmp	r0, #0
   327dc:	moveq	r5, r6
   327e0:	beq	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   327e4:	mov	r3, #2
   327e8:	str	r3, [r4, #264]	; 0x108
   327ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   327f0:	ldr	r3, [r8]
   327f4:	mov	r0, r5
   327f8:	cmp	r2, r3
   327fc:	bne	33090 <blkid_probe_get_size@plt+0x2bb78>
   32800:	sub	sp, fp, #32
   32804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32808:	ldr	r0, [pc, #2816]	; 33310 <blkid_probe_get_size@plt+0x2bdf8>
   3280c:	add	r0, pc, r0
   32810:	bl	74dc <__tls_get_addr@plt>
   32814:	ldr	r3, [pc, #2808]	; 33314 <blkid_probe_get_size@plt+0x2bdfc>
   32818:	ldr	r4, [r3, r0]
   3281c:	cmp	r4, #0
   32820:	bne	3272c <blkid_probe_get_size@plt+0x2b214>
   32824:	ldr	r3, [pc, #2796]	; 33318 <blkid_probe_get_size@plt+0x2be00>
   32828:	ldr	r2, [pc, #2796]	; 3331c <blkid_probe_get_size@plt+0x2be04>
   3282c:	add	r3, pc, r3
   32830:	ldr	r1, [pc, #2792]	; 33320 <blkid_probe_get_size@plt+0x2be08>
   32834:	add	r3, r3, #1664	; 0x680
   32838:	str	r3, [sp]
   3283c:	mov	r0, r4
   32840:	ldr	r3, [pc, #2780]	; 33324 <blkid_probe_get_size@plt+0x2be0c>
   32844:	add	r2, pc, r2
   32848:	add	r1, pc, r1
   3284c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32850:	mvn	r5, #64	; 0x40
   32854:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   32858:	mov	r2, r5
   3285c:	mov	r3, #16
   32860:	b	3277c <blkid_probe_get_size@plt+0x2b264>
   32864:	ldr	r2, [pc, #2748]	; 33328 <blkid_probe_get_size@plt+0x2be10>
   32868:	ldr	r1, [pc, #2748]	; 3332c <blkid_probe_get_size@plt+0x2be14>
   3286c:	add	r2, pc, r2
   32870:	add	r2, r2, #1664	; 0x680
   32874:	str	r2, [sp]
   32878:	ldr	r2, [pc, #2736]	; 33330 <blkid_probe_get_size@plt+0x2be18>
   3287c:	ldr	r3, [pc, #2736]	; 33334 <blkid_probe_get_size@plt+0x2be1c>
   32880:	add	r2, pc, r2
   32884:	add	r1, pc, r1
   32888:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3288c:	mvn	r5, #21
   32890:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   32894:	mov	r0, #0
   32898:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   3289c:	ldr	r6, [pc, #2708]	; 33338 <blkid_probe_get_size@plt+0x2be20>
   328a0:	add	r6, pc, r6
   328a4:	strd	r0, [r4, #240]	; 0xf0
   328a8:	mov	r0, #1
   328ac:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   328b0:	ldr	r3, [r6]
   328b4:	cmp	r3, #0
   328b8:	strd	r0, [r4, #248]	; 0xf8
   328bc:	blt	32db0 <blkid_probe_get_size@plt+0x2b898>
   328c0:	mvneq	r0, #0
   328c4:	mvneq	r1, #0
   328c8:	bne	32d78 <blkid_probe_get_size@plt+0x2b860>
   328cc:	add	r3, r4, #256	; 0x100
   328d0:	cmp	r7, #0
   328d4:	str	r3, [fp, #-208]	; 0xffffff30
   328d8:	mov	r2, r7
   328dc:	strd	r0, [r3]
   328e0:	beq	32a84 <blkid_probe_get_size@plt+0x2b56c>
   328e4:	str	r5, [fp, #-204]	; 0xffffff34
   328e8:	mov	r9, sl
   328ec:	mov	r7, #0
   328f0:	mov	r5, r2
   328f4:	ldr	r6, [r9, #8]
   328f8:	cmp	r6, #11
   328fc:	beq	32cd4 <blkid_probe_get_size@plt+0x2b7bc>
   32900:	ldr	r3, [r6]
   32904:	sub	r3, r3, #1
   32908:	cmp	r3, #3
   3290c:	addls	pc, pc, r3, lsl #2
   32910:	b	3321c <blkid_probe_get_size@plt+0x2bd04>
   32914:	b	32c6c <blkid_probe_get_size@plt+0x2b754>
   32918:	b	32a54 <blkid_probe_get_size@plt+0x2b53c>
   3291c:	b	32988 <blkid_probe_get_size@plt+0x2b470>
   32920:	b	32924 <blkid_probe_get_size@plt+0x2b40c>
   32924:	ldr	r3, [sl, r7, lsl #4]
   32928:	cmp	r3, #1
   3292c:	bne	32de4 <blkid_probe_get_size@plt+0x2b8cc>
   32930:	ldr	r3, [r6, #300]	; 0x12c
   32934:	cmp	r3, #0
   32938:	bne	32a70 <blkid_probe_get_size@plt+0x2b558>
   3293c:	ldr	r3, [r6, #296]	; 0x128
   32940:	cmp	r3, #0
   32944:	bne	32a70 <blkid_probe_get_size@plt+0x2b558>
   32948:	mov	r2, #272	; 0x110
   3294c:	add	r1, r6, #24
   32950:	ldr	r0, [r6, #4]
   32954:	bl	6d74 <read@plt>
   32958:	subs	r3, r0, #0
   3295c:	blt	32e80 <blkid_probe_get_size@plt+0x2b968>
   32960:	beq	33064 <blkid_probe_get_size@plt+0x2bb4c>
   32964:	str	r3, [r6, #296]	; 0x128
   32968:	ldr	r3, [r4, #224]	; 0xe0
   3296c:	cmp	r3, #0
   32970:	str	r3, [r6, #304]	; 0x130
   32974:	strne	r6, [r3, #308]	; 0x134
   32978:	mov	r3, #0
   3297c:	str	r3, [r6, #308]	; 0x134
   32980:	str	r6, [r4, #224]	; 0xe0
   32984:	b	32a70 <blkid_probe_get_size@plt+0x2b558>
   32988:	ldr	r3, [sl, r7, lsl #4]
   3298c:	cmp	r3, #1
   32990:	bne	32e1c <blkid_probe_get_size@plt+0x2b904>
   32994:	mov	r1, #17
   32998:	add	r0, r6, #16
   3299c:	bl	72b4 <sigismember@plt>
   329a0:	cmp	r0, #0
   329a4:	ldrbne	r3, [r4, #268]	; 0x10c
   329a8:	orrne	r3, r3, #2
   329ac:	strbne	r3, [r4, #268]	; 0x10c
   329b0:	ldr	r3, [r6, #144]	; 0x90
   329b4:	cmp	r3, #0
   329b8:	bne	32a70 <blkid_probe_get_size@plt+0x2b558>
   329bc:	str	r3, [fp, #-228]	; 0xffffff1c
   329c0:	sub	r3, fp, #172	; 0xac
   329c4:	str	r3, [fp, #-220]	; 0xffffff24
   329c8:	mov	r2, #128	; 0x80
   329cc:	ldr	r1, [fp, #-220]	; 0xffffff24
   329d0:	ldr	r0, [r6, #4]
   329d4:	bl	6d74 <read@plt>
   329d8:	cmp	r0, #0
   329dc:	blt	33034 <blkid_probe_get_size@plt+0x2bb1c>
   329e0:	cmp	r0, #128	; 0x80
   329e4:	bne	32ea0 <blkid_probe_get_size@plt+0x2b988>
   329e8:	ldr	r3, [fp, #-172]	; 0xffffff54
   329ec:	sub	r1, r3, #1
   329f0:	cmp	r1, #63	; 0x3f
   329f4:	bhi	33004 <blkid_probe_get_size@plt+0x2baec>
   329f8:	ldr	r1, [r4, #192]	; 0xc0
   329fc:	cmp	r1, #0
   32a00:	beq	32dd8 <blkid_probe_get_size@plt+0x2b8c0>
   32a04:	ldr	r3, [r1, r3, lsl #2]
   32a08:	cmp	r3, #0
   32a0c:	beq	32dd8 <blkid_probe_get_size@plt+0x2b8c0>
   32a10:	ldrb	r1, [r3, #25]
   32a14:	tst	r1, #1
   32a18:	bne	32dd8 <blkid_probe_get_size@plt+0x2b8c0>
   32a1c:	mov	r2, r0
   32a20:	ldr	r1, [fp, #-220]	; 0xffffff24
   32a24:	add	r0, r3, #88	; 0x58
   32a28:	str	r3, [fp, #-220]	; 0xffffff24
   32a2c:	bl	71e8 <memcpy@plt>
   32a30:	ldr	r3, [fp, #-220]	; 0xffffff24
   32a34:	mov	r1, #1
   32a38:	str	r3, [r6, #144]	; 0x90
   32a3c:	mov	r0, r3
   32a40:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   32a44:	cmp	r0, #0
   32a48:	bge	32a70 <blkid_probe_get_size@plt+0x2b558>
   32a4c:	mov	r5, r0
   32a50:	b	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   32a54:	add	r3, r6, #16
   32a58:	ldr	r1, [r6, #4]
   32a5c:	ldr	r2, [sl, r7, lsl #4]
   32a60:	mov	r0, r4
   32a64:	bl	2b9d8 <blkid_probe_get_size@plt+0x244c0>
   32a68:	cmp	r0, #0
   32a6c:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32a70:	add	r7, r7, #1
   32a74:	cmp	r7, r5
   32a78:	add	r9, r9, #16
   32a7c:	bne	328f4 <blkid_probe_get_size@plt+0x2b3dc>
   32a80:	ldr	r5, [fp, #-204]	; 0xffffff34
   32a84:	ldrb	r3, [r4, #268]	; 0x10c
   32a88:	tst	r3, #4
   32a8c:	beq	32ad0 <blkid_probe_get_size@plt+0x2b5b8>
   32a90:	add	r6, r4, #304	; 0x130
   32a94:	add	r7, r4, #288	; 0x120
   32a98:	ldmdb	r6, {r1, ip}
   32a9c:	lsr	r3, r1, #2
   32aa0:	orr	r3, r3, ip, lsl #30
   32aa4:	str	r3, [fp, #-204]	; 0xffffff34
   32aa8:	lsr	r3, ip, #2
   32aac:	str	r3, [fp, #-200]	; 0xffffff38
   32ab0:	ldrd	r0, [r7]
   32ab4:	ldrd	r2, [fp, #-204]	; 0xffffff34
   32ab8:	adds	r2, r2, r0
   32abc:	adc	r3, r3, r1
   32ac0:	ldrd	r0, [r4, #248]	; 0xf8
   32ac4:	cmp	r3, r1
   32ac8:	cmpeq	r2, r0
   32acc:	bls	32ea8 <blkid_probe_get_size@plt+0x2b990>
   32ad0:	add	r1, r4, #24
   32ad4:	ldrd	r2, [r4, #240]	; 0xf0
   32ad8:	mov	r0, r4
   32adc:	str	r1, [sp]
   32ae0:	bl	30764 <blkid_probe_get_size@plt+0x2924c>
   32ae4:	cmp	r0, #0
   32ae8:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32aec:	ldr	r6, [fp, #-208]	; 0xffffff30
   32af0:	add	r1, r4, #56	; 0x38
   32af4:	mov	r0, r4
   32af8:	ldrd	r2, [r6]
   32afc:	str	r1, [sp]
   32b00:	bl	30764 <blkid_probe_get_size@plt+0x2924c>
   32b04:	cmp	r0, #0
   32b08:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32b0c:	add	r1, r4, #88	; 0x58
   32b10:	ldrd	r2, [r4, #248]	; 0xf8
   32b14:	mov	r0, r4
   32b18:	str	r1, [sp]
   32b1c:	bl	30764 <blkid_probe_get_size@plt+0x2924c>
   32b20:	cmp	r0, #0
   32b24:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32b28:	add	r1, r4, #120	; 0x78
   32b2c:	ldrd	r2, [r4, #240]	; 0xf0
   32b30:	mov	r0, r4
   32b34:	str	r1, [sp]
   32b38:	bl	30764 <blkid_probe_get_size@plt+0x2924c>
   32b3c:	cmp	r0, #0
   32b40:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32b44:	add	r3, r4, #152	; 0x98
   32b48:	str	r3, [sp]
   32b4c:	mov	r0, r4
   32b50:	ldrd	r2, [r6]
   32b54:	bl	30764 <blkid_probe_get_size@plt+0x2924c>
   32b58:	cmp	r0, #0
   32b5c:	blt	32a4c <blkid_probe_get_size@plt+0x2b534>
   32b60:	ldrb	r3, [r4, #268]	; 0x10c
   32b64:	tst	r3, #2
   32b68:	beq	330d4 <blkid_probe_get_size@plt+0x2bbbc>
   32b6c:	sub	sl, fp, #188	; 0xbc
   32b70:	sub	r6, fp, #192	; 0xc0
   32b74:	bic	r3, r3, #2
   32b78:	mvn	r1, #1
   32b7c:	mov	r2, #0
   32b80:	strb	r3, [r4, #268]	; 0x10c
   32b84:	str	r1, [fp, #-188]	; 0xffffff44
   32b88:	str	r2, [fp, #-184]	; 0xffffff48
   32b8c:	mov	r3, #0
   32b90:	mov	r2, r6
   32b94:	mov	r1, sl
   32b98:	ldr	r0, [r4, #200]	; 0xc8
   32b9c:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   32ba0:	cmp	r0, #0
   32ba4:	beq	330d4 <blkid_probe_get_size@plt+0x2bbbc>
   32ba8:	ldr	r7, [fp, #-192]	; 0xffffff40
   32bac:	ldrb	r2, [r7, #24]
   32bb0:	and	r3, r2, #31
   32bb4:	cmp	r3, #7
   32bb8:	bne	331c4 <blkid_probe_get_size@plt+0x2bcac>
   32bbc:	ldrb	r3, [r7, #25]
   32bc0:	ands	r1, r3, #1
   32bc4:	bne	32b8c <blkid_probe_get_size@plt+0x2b674>
   32bc8:	tst	r2, #224	; 0xe0
   32bcc:	beq	32b8c <blkid_probe_get_size@plt+0x2b674>
   32bd0:	add	r9, r7, #84	; 0x54
   32bd4:	mov	r2, #128	; 0x80
   32bd8:	mov	r0, r9
   32bdc:	bl	6c84 <memset@plt>
   32be0:	ldr	r1, [r7, #216]	; 0xd8
   32be4:	mov	r2, r9
   32be8:	orr	r0, r1, #1
   32bec:	lsl	r1, r1, #22
   32bf0:	and	r3, r1, #16777216	; 0x1000000
   32bf4:	orr	r3, r3, r0
   32bf8:	ldr	r1, [r7, #212]	; 0xd4
   32bfc:	mov	r0, #1
   32c00:	bl	6f48 <waitid@plt>
   32c04:	cmp	r0, #0
   32c08:	blt	330c0 <blkid_probe_get_size@plt+0x2bba8>
   32c0c:	ldr	r1, [fp, #-192]	; 0xffffff40
   32c10:	ldr	r3, [r1, #96]	; 0x60
   32c14:	cmp	r3, #0
   32c18:	beq	32b8c <blkid_probe_get_size@plt+0x2b674>
   32c1c:	ldr	r3, [r1, #92]	; 0x5c
   32c20:	sub	r3, r3, #1
   32c24:	cmp	r3, #2
   32c28:	bls	32c54 <blkid_probe_get_size@plt+0x2b73c>
   32c2c:	ldr	r3, [r1, #216]	; 0xd8
   32c30:	tst	r3, #4
   32c34:	beq	32c54 <blkid_probe_get_size@plt+0x2b73c>
   32c38:	ands	r3, r3, #10
   32c3c:	beq	332cc <blkid_probe_get_size@plt+0x2bdb4>
   32c40:	add	r2, r1, #84	; 0x54
   32c44:	orr	r3, r3, #1
   32c48:	ldr	r1, [r1, #212]	; 0xd4
   32c4c:	mov	r0, #1
   32c50:	bl	6f48 <waitid@plt>
   32c54:	mov	r1, #1
   32c58:	ldr	r0, [fp, #-192]	; 0xffffff40
   32c5c:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   32c60:	cmp	r0, #0
   32c64:	bge	32b8c <blkid_probe_get_size@plt+0x2b674>
   32c68:	b	32a4c <blkid_probe_get_size@plt+0x2b534>
   32c6c:	ldrb	r3, [r6, #24]
   32c70:	tst	r3, #31
   32c74:	bne	32e54 <blkid_probe_get_size@plt+0x2b93c>
   32c78:	ldrb	r2, [r6, #25]
   32c7c:	ldr	r3, [sl, r7, lsl #4]
   32c80:	mov	r0, r6
   32c84:	tst	r2, #1
   32c88:	mov	r1, #1
   32c8c:	ldrne	r2, [r6, #92]	; 0x5c
   32c90:	orrne	r3, r2, r3
   32c94:	str	r3, [r6, #92]	; 0x5c
   32c98:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   32c9c:	b	32a68 <blkid_probe_get_size@plt+0x2b550>
   32ca0:	ldr	r2, [pc, #1684]	; 3333c <blkid_probe_get_size@plt+0x2be24>
   32ca4:	ldr	r1, [pc, #1684]	; 33340 <blkid_probe_get_size@plt+0x2be28>
   32ca8:	add	r2, pc, r2
   32cac:	add	r2, r2, #1664	; 0x680
   32cb0:	str	r2, [sp]
   32cb4:	ldr	r2, [pc, #1672]	; 33344 <blkid_probe_get_size@plt+0x2be2c>
   32cb8:	ldr	r3, [pc, #1672]	; 33348 <blkid_probe_get_size@plt+0x2be30>
   32cbc:	add	r2, pc, r2
   32cc0:	add	r1, pc, r1
   32cc4:	mov	r0, #0
   32cc8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32ccc:	mvn	r5, #9
   32cd0:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   32cd4:	mov	r3, #0
   32cd8:	ldr	r2, [sl, r7, lsl #4]
   32cdc:	ldr	r1, [r4, #8]
   32ce0:	mov	r0, r4
   32ce4:	bl	2b9d8 <blkid_probe_get_size@plt+0x244c0>
   32ce8:	b	32a68 <blkid_probe_get_size@plt+0x2b550>
   32cec:	and	r3, r6, r7
   32cf0:	cmn	r3, #1
   32cf4:	movne	r3, #0
   32cf8:	moveq	r3, #1
   32cfc:	rsb	r3, r3, #0
   32d00:	b	3279c <blkid_probe_get_size@plt+0x2b284>
   32d04:	ldr	r2, [pc, #1600]	; 3334c <blkid_probe_get_size@plt+0x2be34>
   32d08:	ldr	r1, [pc, #1600]	; 33350 <blkid_probe_get_size@plt+0x2be38>
   32d0c:	add	r2, pc, r2
   32d10:	add	r2, r2, #1664	; 0x680
   32d14:	str	r2, [sp]
   32d18:	ldr	r2, [pc, #1588]	; 33354 <blkid_probe_get_size@plt+0x2be3c>
   32d1c:	ldr	r3, [pc, #1588]	; 33358 <blkid_probe_get_size@plt+0x2be40>
   32d20:	add	r2, pc, r2
   32d24:	add	r1, pc, r1
   32d28:	mov	r0, #0
   32d2c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32d30:	mvn	r5, #115	; 0x73
   32d34:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   32d38:	ldr	r2, [pc, #1564]	; 3335c <blkid_probe_get_size@plt+0x2be44>
   32d3c:	ldr	r1, [pc, #1564]	; 33360 <blkid_probe_get_size@plt+0x2be48>
   32d40:	add	r2, pc, r2
   32d44:	add	r2, r2, #1664	; 0x680
   32d48:	str	r2, [sp]
   32d4c:	ldr	r2, [pc, #1552]	; 33364 <blkid_probe_get_size@plt+0x2be4c>
   32d50:	mov	r3, #3104	; 0xc20
   32d54:	add	r2, pc, r2
   32d58:	add	r1, pc, r1
   32d5c:	mov	r0, #0
   32d60:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32d64:	mvn	r5, #15
   32d68:	b	327ec <blkid_probe_get_size@plt+0x2b2d4>
   32d6c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   32d70:	mov	r3, #1
   32d74:	str	r3, [r6]
   32d78:	mov	r0, #7
   32d7c:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   32d80:	b	328cc <blkid_probe_get_size@plt+0x2b3b4>
   32d84:	ldr	r3, [pc, #1500]	; 33368 <blkid_probe_get_size@plt+0x2be50>
   32d88:	mov	r0, r1
   32d8c:	add	r3, pc, r3
   32d90:	ldr	r2, [pc, #1492]	; 3336c <blkid_probe_get_size@plt+0x2be54>
   32d94:	ldr	r1, [pc, #1492]	; 33370 <blkid_probe_get_size@plt+0x2be58>
   32d98:	add	r3, r3, #1664	; 0x680
   32d9c:	str	r3, [sp]
   32da0:	add	r2, pc, r2
   32da4:	ldr	r3, [pc, #1480]	; 33374 <blkid_probe_get_size@plt+0x2be5c>
   32da8:	add	r1, pc, r1
   32dac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   32db0:	ldr	r1, [pc, #1472]	; 33378 <blkid_probe_get_size@plt+0x2be60>
   32db4:	mov	r0, #7
   32db8:	bl	73a4 <timerfd_create@plt>
   32dbc:	cmp	r0, #0
   32dc0:	bge	32d6c <blkid_probe_get_size@plt+0x2b854>
   32dc4:	mov	r3, #0
   32dc8:	str	r3, [r6]
   32dcc:	mvn	r0, #0
   32dd0:	mvn	r1, #0
   32dd4:	b	328cc <blkid_probe_get_size@plt+0x2b3b4>
   32dd8:	mov	r3, #1
   32ddc:	str	r3, [fp, #-228]	; 0xffffff1c
   32de0:	b	329c8 <blkid_probe_get_size@plt+0x2b4b0>
   32de4:	ldr	r2, [pc, #1424]	; 3337c <blkid_probe_get_size@plt+0x2be64>
   32de8:	ldr	r1, [pc, #1424]	; 33380 <blkid_probe_get_size@plt+0x2be68>
   32dec:	add	r2, pc, r2
   32df0:	add	r2, r2, #1696	; 0x6a0
   32df4:	add	r2, r2, #12
   32df8:	str	r2, [sp]
   32dfc:	ldr	r2, [pc, #1408]	; 33384 <blkid_probe_get_size@plt+0x2be6c>
   32e00:	ldr	r3, [pc, #1408]	; 33388 <blkid_probe_get_size@plt+0x2be70>
   32e04:	add	r2, pc, r2
   32e08:	add	r1, pc, r1
   32e0c:	mov	r0, #0
   32e10:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32e14:	mvn	r5, #4
   32e18:	b	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   32e1c:	ldr	r2, [pc, #1384]	; 3338c <blkid_probe_get_size@plt+0x2be74>
   32e20:	ldr	r1, [pc, #1384]	; 33390 <blkid_probe_get_size@plt+0x2be78>
   32e24:	add	r2, pc, r2
   32e28:	add	r2, r2, #1680	; 0x690
   32e2c:	add	r2, r2, #12
   32e30:	str	r2, [sp]
   32e34:	ldr	r2, [pc, #1368]	; 33394 <blkid_probe_get_size@plt+0x2be7c>
   32e38:	ldr	r3, [pc, #1368]	; 33398 <blkid_probe_get_size@plt+0x2be80>
   32e3c:	add	r2, pc, r2
   32e40:	add	r1, pc, r1
   32e44:	mov	r0, #0
   32e48:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   32e4c:	mvn	r5, #4
   32e50:	b	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   32e54:	ldr	r2, [pc, #1344]	; 3339c <blkid_probe_get_size@plt+0x2be84>
   32e58:	ldr	r1, [pc, #1344]	; 333a0 <blkid_probe_get_size@plt+0x2be88>
   32e5c:	add	r2, pc, r2
   32e60:	add	r2, r2, #1680	; 0x690
   32e64:	str	r2, [sp]
   32e68:	ldr	r2, [pc, #1332]	; 333a4 <blkid_probe_get_size@plt+0x2be8c>
   32e6c:	ldr	r3, [pc, #1332]	; 333a8 <blkid_probe_get_size@plt+0x2be90>
   32e70:	add	r2, pc, r2
   32e74:	add	r1, pc, r1
   32e78:	mov	r0, #0
   32e7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   32e80:	bl	732c <__errno_location@plt>
   32e84:	ldr	r0, [r0]
   32e88:	cmp	r0, #4
   32e8c:	beq	32a70 <blkid_probe_get_size@plt+0x2b558>
   32e90:	cmp	r0, #11
   32e94:	beq	32a70 <blkid_probe_get_size@plt+0x2b558>
   32e98:	rsb	r0, r0, #0
   32e9c:	b	32a68 <blkid_probe_get_size@plt+0x2b550>
   32ea0:	mvn	r0, #4
   32ea4:	b	32a4c <blkid_probe_get_size@plt+0x2b534>
   32ea8:	bl	4b894 <blkid_probe_get_size@plt+0x4437c>
   32eac:	ldrd	r2, [r4, #248]	; 0xf8
   32eb0:	sub	sl, fp, #188	; 0xbc
   32eb4:	mov	r0, #0
   32eb8:	strd	r2, [r7]
   32ebc:	strd	r2, [fp, #-220]	; 0xffffff24
   32ec0:	str	r0, [sl, #4]
   32ec4:	str	r0, [fp, #-188]	; 0xffffff44
   32ec8:	str	r0, [sl, #8]
   32ecc:	str	r0, [sl, #12]
   32ed0:	ldr	r3, [r4, #8]
   32ed4:	cmp	r3, r0
   32ed8:	blt	33094 <blkid_probe_get_size@plt+0x2bb7c>
   32edc:	ldrd	r2, [r6, #-8]
   32ee0:	mov	r0, r4
   32ee4:	mov	r6, r2
   32ee8:	mov	r7, r3
   32eec:	adds	r2, r2, r2
   32ef0:	strd	r6, [fp, #-228]	; 0xffffff1c
   32ef4:	adc	r3, r3, r3
   32ef8:	adds	r6, r6, r2
   32efc:	adc	r7, r7, r3
   32f00:	mov	r2, r6
   32f04:	mov	r3, r7
   32f08:	ldrd	r6, [fp, #-228]	; 0xffffff1c
   32f0c:	lsr	r1, r2, #2
   32f10:	orr	r1, r1, r3, lsl #30
   32f14:	lsrs	r7, r7, #1
   32f18:	rrx	r6, r6
   32f1c:	lsr	r3, r3, #2
   32f20:	str	r1, [fp, #-204]	; 0xffffff34
   32f24:	str	r3, [fp, #-200]	; 0xffffff38
   32f28:	strd	r6, [fp, #-228]	; 0xffffff1c
   32f2c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   32f30:	ldrd	r6, [fp, #-220]	; 0xffffff24
   32f34:	adds	r2, r2, r6
   32f38:	adc	r3, r3, r7
   32f3c:	mov	r6, r2
   32f40:	mov	r7, r3
   32f44:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   32f48:	strd	r6, [sp]
   32f4c:	ldrd	r6, [fp, #-220]	; 0xffffff24
   32f50:	adds	r6, r6, r2
   32f54:	adc	r7, r7, r3
   32f58:	mov	r2, r6
   32f5c:	mov	r3, r7
   32f60:	bl	32284 <blkid_probe_get_size@plt+0x2ad6c>
   32f64:	add	r3, pc, #916	; 0x394
   32f68:	ldrd	r2, [r3]
   32f6c:	cmp	r1, r3
   32f70:	cmpeq	r0, r2
   32f74:	mov	r6, r0
   32f78:	mov	r7, r1
   32f7c:	bhi	33054 <blkid_probe_get_size@plt+0x2bb3c>
   32f80:	ldr	r2, [pc, #1060]	; 333ac <blkid_probe_get_size@plt+0x2be94>
   32f84:	mov	r3, #0
   32f88:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32f8c:	ldr	r2, [pc, #1048]	; 333ac <blkid_probe_get_size@plt+0x2be94>
   32f90:	mov	r3, #0
   32f94:	mov	r1, r7
   32f98:	mov	r9, r0
   32f9c:	mov	r0, r6
   32fa0:	str	r9, [fp, #-180]	; 0xffffff4c
   32fa4:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   32fa8:	cmp	r9, #0
   32fac:	rsb	r3, r2, r2, lsl #5
   32fb0:	add	r3, r2, r3, lsl #2
   32fb4:	lsl	r3, r3, #3
   32fb8:	str	r3, [fp, #-176]	; 0xffffff50
   32fbc:	bne	32fcc <blkid_probe_get_size@plt+0x2bab4>
   32fc0:	cmp	r3, #0
   32fc4:	moveq	r3, #1
   32fc8:	streq	r3, [fp, #-176]	; 0xffffff50
   32fcc:	mov	r2, sl
   32fd0:	mov	r3, #0
   32fd4:	mov	r1, #1
   32fd8:	ldr	r0, [r4, #8]
   32fdc:	bl	6d2c <timerfd_settime@plt>
   32fe0:	cmp	r0, #0
   32fe4:	bge	32ad0 <blkid_probe_get_size@plt+0x2b5b8>
   32fe8:	bl	732c <__errno_location@plt>
   32fec:	ldr	r3, [r0]
   32ff0:	cmp	r3, #0
   32ff4:	rsb	r3, r3, #0
   32ff8:	ble	32ad0 <blkid_probe_get_size@plt+0x2b5b8>
   32ffc:	mov	r5, r3
   33000:	b	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   33004:	ldr	r2, [pc, #932]	; 333b0 <blkid_probe_get_size@plt+0x2be98>
   33008:	ldr	r1, [pc, #932]	; 333b4 <blkid_probe_get_size@plt+0x2be9c>
   3300c:	add	r2, pc, r2
   33010:	add	r2, r2, #1680	; 0x690
   33014:	add	r2, r2, #12
   33018:	str	r2, [sp]
   3301c:	ldr	r2, [pc, #916]	; 333b8 <blkid_probe_get_size@plt+0x2bea0>
   33020:	ldr	r3, [pc, #916]	; 333bc <blkid_probe_get_size@plt+0x2bea4>
   33024:	add	r2, pc, r2
   33028:	add	r1, pc, r1
   3302c:	mov	r0, #0
   33030:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   33034:	bl	732c <__errno_location@plt>
   33038:	ldr	r0, [r0]
   3303c:	cmp	r0, #4
   33040:	beq	3304c <blkid_probe_get_size@plt+0x2bb34>
   33044:	cmp	r0, #11
   33048:	bne	32e98 <blkid_probe_get_size@plt+0x2b980>
   3304c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   33050:	b	32a68 <blkid_probe_get_size@plt+0x2b550>
   33054:	mvn	r3, #0
   33058:	str	r3, [fp, #-180]	; 0xffffff4c
   3305c:	str	r3, [fp, #-176]	; 0xffffff50
   33060:	b	32fcc <blkid_probe_get_size@plt+0x2bab4>
   33064:	ldr	r2, [pc, #852]	; 333c0 <blkid_probe_get_size@plt+0x2bea8>
   33068:	ldr	r1, [pc, #852]	; 333c4 <blkid_probe_get_size@plt+0x2beac>
   3306c:	add	r2, pc, r2
   33070:	add	r2, r2, #1696	; 0x6a0
   33074:	add	r2, r2, #12
   33078:	str	r2, [sp]
   3307c:	ldr	r2, [pc, #836]	; 333c8 <blkid_probe_get_size@plt+0x2beb0>
   33080:	ldr	r3, [pc, #836]	; 333cc <blkid_probe_get_size@plt+0x2beb4>
   33084:	add	r2, pc, r2
   33088:	add	r1, pc, r1
   3308c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   33090:	bl	6fb4 <__stack_chk_fail@plt>
   33094:	ldr	r3, [pc, #820]	; 333d0 <blkid_probe_get_size@plt+0x2beb8>
   33098:	ldr	r2, [pc, #820]	; 333d4 <blkid_probe_get_size@plt+0x2bebc>
   3309c:	add	r3, pc, r3
   330a0:	add	r3, r3, #1728	; 0x6c0
   330a4:	ldr	r1, [pc, #812]	; 333d8 <blkid_probe_get_size@plt+0x2bec0>
   330a8:	add	r3, r3, #4
   330ac:	str	r3, [sp]
   330b0:	add	r2, pc, r2
   330b4:	ldr	r3, [pc, #800]	; 333dc <blkid_probe_get_size@plt+0x2bec4>
   330b8:	add	r1, pc, r1
   330bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   330c0:	bl	732c <__errno_location@plt>
   330c4:	ldr	r3, [r0]
   330c8:	cmp	r3, #0
   330cc:	rsb	r3, r3, #0
   330d0:	bgt	32ffc <blkid_probe_get_size@plt+0x2bae4>
   330d4:	ldr	r6, [r4, #224]	; 0xe0
   330d8:	ldr	r7, [pc, #768]	; 333e0 <blkid_probe_get_size@plt+0x2bec8>
   330dc:	cmp	r6, #0
   330e0:	beq	327d0 <blkid_probe_get_size@plt+0x2b2b8>
   330e4:	ldr	r3, [r6, #300]	; 0x12c
   330e8:	cmp	r3, #0
   330ec:	bne	3319c <blkid_probe_get_size@plt+0x2bc84>
   330f0:	ldr	r3, [r6, #296]	; 0x128
   330f4:	cmp	r3, #0
   330f8:	beq	3319c <blkid_probe_get_size@plt+0x2bc84>
   330fc:	cmp	r3, #15
   33100:	bls	332c4 <blkid_probe_get_size@plt+0x2bdac>
   33104:	ldr	r9, [r6, #36]	; 0x24
   33108:	add	r9, r9, #16
   3310c:	cmp	r3, r9
   33110:	bcc	332c4 <blkid_probe_get_size@plt+0x2bdac>
   33114:	ldr	r3, [r6, #28]
   33118:	tst	r3, #16384	; 0x4000
   3311c:	bne	33248 <blkid_probe_get_size@plt+0x2bd30>
   33120:	tst	r3, #32768	; 0x8000
   33124:	ldrd	r0, [r6, #20]
   33128:	beq	331a4 <blkid_probe_get_size@plt+0x2bc8c>
   3312c:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   33130:	cmp	r0, #0
   33134:	beq	331b0 <blkid_probe_get_size@plt+0x2bc98>
   33138:	mvn	r3, #0
   3313c:	str	r3, [r0, #20]
   33140:	ldr	r9, [r0, #28]
   33144:	cmp	r9, #0
   33148:	bne	3315c <blkid_probe_get_size@plt+0x2bc44>
   3314c:	b	330e4 <blkid_probe_get_size@plt+0x2bbcc>
   33150:	ldr	r9, [r9, #92]	; 0x5c
   33154:	cmp	r9, #0
   33158:	beq	330e4 <blkid_probe_get_size@plt+0x2bbcc>
   3315c:	ldrb	r3, [r9, #24]
   33160:	tst	r3, #224	; 0xe0
   33164:	beq	33150 <blkid_probe_get_size@plt+0x2bc38>
   33168:	ldr	r3, [r6, #28]
   3316c:	tst	r3, #40960	; 0xa000
   33170:	bne	33184 <blkid_probe_get_size@plt+0x2bc6c>
   33174:	ldr	r2, [r9, #84]	; 0x54
   33178:	and	r3, r3, r7
   3317c:	tst	r3, r2
   33180:	beq	33150 <blkid_probe_get_size@plt+0x2bc38>
   33184:	mov	r1, #1
   33188:	mov	r0, r9
   3318c:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   33190:	cmp	r0, #0
   33194:	bge	33150 <blkid_probe_get_size@plt+0x2bc38>
   33198:	b	32a4c <blkid_probe_get_size@plt+0x2b534>
   3319c:	ldr	r6, [r6, #304]	; 0x130
   331a0:	b	330dc <blkid_probe_get_size@plt+0x2bbc4>
   331a4:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   331a8:	cmp	r0, #0
   331ac:	bne	33140 <blkid_probe_get_size@plt+0x2bc28>
   331b0:	mov	r2, r9
   331b4:	mov	r1, r6
   331b8:	mov	r0, r4
   331bc:	bl	2bb54 <blkid_probe_get_size@plt+0x2463c>
   331c0:	b	330f0 <blkid_probe_get_size@plt+0x2bbd8>
   331c4:	ldr	r2, [pc, #536]	; 333e4 <blkid_probe_get_size@plt+0x2becc>
   331c8:	ldr	r1, [pc, #536]	; 333e8 <blkid_probe_get_size@plt+0x2bed0>
   331cc:	add	r2, pc, r2
   331d0:	add	r2, r2, #1744	; 0x6d0
   331d4:	add	r2, r2, #4
   331d8:	str	r2, [sp]
   331dc:	ldr	r2, [pc, #520]	; 333ec <blkid_probe_get_size@plt+0x2bed4>
   331e0:	ldr	r3, [pc, #520]	; 333f0 <blkid_probe_get_size@plt+0x2bed8>
   331e4:	add	r2, pc, r2
   331e8:	add	r1, pc, r1
   331ec:	mov	r0, #0
   331f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   331f4:	ldr	r3, [pc, #504]	; 333f4 <blkid_probe_get_size@plt+0x2bedc>
   331f8:	ldr	r2, [pc, #504]	; 333f8 <blkid_probe_get_size@plt+0x2bee0>
   331fc:	add	r3, pc, r3
   33200:	ldr	r1, [pc, #500]	; 333fc <blkid_probe_get_size@plt+0x2bee4>
   33204:	add	r3, r3, #1664	; 0x680
   33208:	str	r3, [sp]
   3320c:	add	r2, pc, r2
   33210:	ldr	r3, [pc, #348]	; 33374 <blkid_probe_get_size@plt+0x2be5c>
   33214:	add	r1, pc, r1
   33218:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3321c:	ldr	r2, [pc, #476]	; 33400 <blkid_probe_get_size@plt+0x2bee8>
   33220:	ldr	r1, [pc, #476]	; 33404 <blkid_probe_get_size@plt+0x2beec>
   33224:	add	r2, pc, r2
   33228:	add	r2, r2, #1664	; 0x680
   3322c:	str	r2, [sp]
   33230:	ldr	r2, [pc, #464]	; 33408 <blkid_probe_get_size@plt+0x2bef0>
   33234:	ldr	r3, [pc, #464]	; 3340c <blkid_probe_get_size@plt+0x2bef4>
   33238:	add	r2, pc, r2
   3323c:	add	r1, pc, r1
   33240:	mov	r0, #0
   33244:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   33248:	mvn	r2, #1
   3324c:	mov	r3, #0
   33250:	sub	sl, fp, #188	; 0xbc
   33254:	sub	r9, fp, #192	; 0xc0
   33258:	strd	r2, [fp, #-188]	; 0xffffff44
   3325c:	mov	r3, #0
   33260:	mov	r2, r9
   33264:	mov	r1, sl
   33268:	ldr	r0, [r6, #16]
   3326c:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   33270:	cmp	r0, #0
   33274:	beq	330e4 <blkid_probe_get_size@plt+0x2bbcc>
   33278:	ldr	r3, [fp, #-192]	; 0xffffff40
   3327c:	ldr	r3, [r3, #28]
   33280:	cmp	r3, #0
   33284:	bne	33298 <blkid_probe_get_size@plt+0x2bd80>
   33288:	b	3325c <blkid_probe_get_size@plt+0x2bd44>
   3328c:	ldr	r3, [r3, #92]	; 0x5c
   33290:	cmp	r3, #0
   33294:	beq	3325c <blkid_probe_get_size@plt+0x2bd44>
   33298:	ldrb	r2, [r3, #24]
   3329c:	tst	r2, #224	; 0xe0
   332a0:	beq	3328c <blkid_probe_get_size@plt+0x2bd74>
   332a4:	mov	r0, r3
   332a8:	mov	r1, #1
   332ac:	str	r3, [fp, #-204]	; 0xffffff34
   332b0:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   332b4:	ldr	r3, [fp, #-204]	; 0xffffff34
   332b8:	cmp	r0, #0
   332bc:	bge	3328c <blkid_probe_get_size@plt+0x2bd74>
   332c0:	b	32a4c <blkid_probe_get_size@plt+0x2b534>
   332c4:	mvn	r5, #4
   332c8:	b	327c4 <blkid_probe_get_size@plt+0x2b2ac>
   332cc:	mov	r0, r3
   332d0:	ldr	r3, [pc, #312]	; 33410 <blkid_probe_get_size@plt+0x2bef8>
   332d4:	ldr	r2, [pc, #312]	; 33414 <blkid_probe_get_size@plt+0x2befc>
   332d8:	add	r3, pc, r3
   332dc:	add	r3, r3, #1744	; 0x6d0
   332e0:	ldr	r1, [pc, #304]	; 33418 <blkid_probe_get_size@plt+0x2bf00>
   332e4:	add	r3, r3, #4
   332e8:	str	r3, [sp]
   332ec:	add	r2, pc, r2
   332f0:	ldr	r3, [pc, #292]	; 3341c <blkid_probe_get_size@plt+0x2bf04>
   332f4:	add	r1, pc, r1
   332f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   332fc:	nop			; (mov r0, r0)
   33300:			; <UNDEFINED> instruction: 0xfff0bdbf
   33304:	andeq	sl, r7, pc, lsl r1
   33308:	andeq	r5, r6, r4, ror r4
   3330c:	andeq	r0, r0, ip, lsr r4
   33310:	andeq	r5, r6, ip, lsl #15
   33314:	andeq	r0, r0, r4, asr r0
   33318:	andeq	r9, r3, ip, asr #31
   3331c:	andeq	sl, r3, r8, ror ip
   33320:	andeq	fp, r3, r0, lsr #9
   33324:	andeq	r0, r0, sp, lsl ip
   33328:	andeq	r9, r3, ip, lsl #31
   3332c:	andeq	r1, r4, ip, ror #27
   33330:	andeq	sl, r3, ip, lsr ip
   33334:	andeq	r0, r0, ip, lsl ip
   33338:	ldrdeq	r5, [r6], -r0
   3333c:	andeq	r9, r3, r0, asr fp
   33340:	andeq	fp, r3, r0, rrx
   33344:	andeq	sl, r3, r0, lsl #16
   33348:	andeq	r0, r0, lr, lsl ip
   3334c:	andeq	r9, r3, ip, ror #21
   33350:	ldrdeq	sl, [r3], -ip
   33354:	muleq	r3, ip, r7
   33358:	andeq	r0, r0, pc, lsl ip
   3335c:			; <UNDEFINED> instruction: 0x00039ab8
   33360:			; <UNDEFINED> instruction: 0x0003b4bc
   33364:	andeq	sl, r3, r8, ror #14
   33368:	andeq	r9, r3, ip, ror #20
   3336c:	andeq	sl, r3, ip, lsl r7
   33370:	andeq	fp, r3, r4, asr #9
   33374:	andeq	r0, r0, r8, lsr #24
   33378:	andeq	r0, r8, r0, lsl #16
   3337c:	andeq	r9, r3, ip, lsl #20
   33380:			; <UNDEFINED> instruction: 0x0003b4b0
   33384:			; <UNDEFINED> instruction: 0x0003a6b8
   33388:	andeq	r0, r0, r4, asr #20
   3338c:	ldrdeq	r9, [r3], -r4
   33390:	andeq	sl, r3, r4, lsr #15
   33394:	andeq	sl, r3, r0, lsl #13
   33398:	andeq	r0, r0, r6, lsl #20
   3339c:	muleq	r3, ip, r9
   333a0:	andeq	sl, r3, r0, lsr #31
   333a4:	andeq	sl, r3, ip, asr #12
   333a8:	andeq	r0, r0, r7, ror r9
   333ac:	andeq	r4, pc, r0, asr #4
   333b0:	andeq	r9, r3, ip, ror #15
   333b4:	andeq	fp, r3, r4, ror r2
   333b8:	muleq	r3, r8, r4
   333bc:	andeq	r0, r0, r8, lsr #20
   333c0:	andeq	r9, r3, ip, lsl #15
   333c4:	andeq	fp, r3, r4, asr #4
   333c8:	andeq	sl, r3, r8, lsr r4
   333cc:	andeq	r0, r0, r6, asr sl
   333d0:	andeq	r9, r3, ip, asr r7
   333d4:	andeq	sl, r3, ip, lsl #8
   333d8:	andeq	fp, r3, r4, lsr r2
   333dc:	andeq	r0, r0, r6, lsr #23
   333e0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   333e4:	andeq	r9, r3, ip, lsr #12
   333e8:	andeq	fp, r3, r8, lsl r1
   333ec:	ldrdeq	sl, [r3], -r8
   333f0:	ldrdeq	r0, [r0], -ip
   333f4:	strdeq	r9, [r3], -ip
   333f8:			; <UNDEFINED> instruction: 0x0003a2b0
   333fc:	andeq	fp, r3, ip, lsl r0
   33400:	ldrdeq	r9, [r3], -r4
   33404:	muleq	r3, r8, r0
   33408:	andeq	sl, r3, r4, lsl #5
   3340c:	andeq	r0, r0, r8, asr ip
   33410:	andeq	r9, r3, r0, lsr #10
   33414:	ldrdeq	sl, [r3], -r0
   33418:	andeq	fp, r3, r4, lsr #32
   3341c:	strdeq	r0, [r0], -r3
   33420:	ldr	r2, [pc, #680]	; 336d0 <blkid_probe_get_size@plt+0x2c1b8>
   33424:	ldr	r3, [pc, #680]	; 336d4 <blkid_probe_get_size@plt+0x2c1bc>
   33428:	add	r2, pc, r2
   3342c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33430:	sub	sp, sp, #36	; 0x24
   33434:	ldr	r6, [r2, r3]
   33438:	add	r4, sp, #12
   3343c:	mov	r3, #0
   33440:	ldr	r2, [r6]
   33444:	subs	r7, r0, #0
   33448:	str	r3, [r4, #4]
   3344c:	str	r3, [sp, #12]
   33450:	str	r2, [sp, #28]
   33454:	str	r3, [r4, #8]
   33458:	str	r3, [r4, #12]
   3345c:	beq	335c8 <blkid_probe_get_size@plt+0x2c0b0>
   33460:	ldrb	r3, [r1, #24]
   33464:	mov	r5, r1
   33468:	tst	r3, #1
   3346c:	beq	335ac <blkid_probe_get_size@plt+0x2c094>
   33470:	bic	r3, r3, #1
   33474:	strb	r3, [r1, #24]
   33478:	ldr	r0, [r1, #8]
   3347c:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   33480:	cmp	r0, #0
   33484:	beq	3356c <blkid_probe_get_size@plt+0x2c054>
   33488:	ldrb	r3, [r0, #24]
   3348c:	tst	r3, #224	; 0xe0
   33490:	beq	3356c <blkid_probe_get_size@plt+0x2c054>
   33494:	ldrd	r8, [r0, #88]	; 0x58
   33498:	mvn	r3, #0
   3349c:	mvn	r2, #0
   334a0:	cmp	r9, r3
   334a4:	cmpeq	r8, r2
   334a8:	beq	3356c <blkid_probe_get_size@plt+0x2c054>
   334ac:	ldr	r0, [r5, #12]
   334b0:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   334b4:	cmp	r0, #0
   334b8:	beq	33640 <blkid_probe_get_size@plt+0x2c128>
   334bc:	ldrb	r3, [r0, #24]
   334c0:	tst	r3, #224	; 0xe0
   334c4:	beq	33640 <blkid_probe_get_size@plt+0x2c128>
   334c8:	ldrd	r2, [r0, #96]	; 0x60
   334cc:	ldrd	sl, [r0, #88]	; 0x58
   334d0:	mov	ip, #0
   334d4:	adds	r0, sl, r2
   334d8:	adcs	r1, fp, r3
   334dc:	mov	r3, ip
   334e0:	movcs	ip, #1
   334e4:	orrs	r3, r3, ip
   334e8:	mov	r2, r0
   334ec:	mvnne	r2, #0
   334f0:	mov	r3, r1
   334f4:	movne	r3, r2
   334f8:	mov	r0, r7
   334fc:	strd	r2, [sp]
   33500:	mov	r2, r8
   33504:	mov	r3, r9
   33508:	bl	32284 <blkid_probe_get_size@plt+0x2ad6c>
   3350c:	ldrd	r2, [r5, #16]
   33510:	cmp	r3, r1
   33514:	cmpeq	r2, r0
   33518:	mov	r8, r0
   3351c:	mov	r9, r1
   33520:	beq	335ac <blkid_probe_get_size@plt+0x2c094>
   33524:	ldr	r7, [r5, #4]
   33528:	cmp	r7, #0
   3352c:	blt	33690 <blkid_probe_get_size@plt+0x2c178>
   33530:	orrs	r3, r8, r9
   33534:	bne	335f4 <blkid_probe_get_size@plt+0x2c0dc>
   33538:	mov	r2, #0
   3353c:	mov	r3, #1
   33540:	strd	r2, [sp, #20]
   33544:	mov	r2, r4
   33548:	mov	r0, r7
   3354c:	mov	r3, #0
   33550:	mov	r1, #1
   33554:	bl	6d2c <timerfd_settime@plt>
   33558:	cmp	r0, #0
   3355c:	blt	33670 <blkid_probe_get_size@plt+0x2c158>
   33560:	mov	r0, #0
   33564:	strd	r8, [r5, #16]
   33568:	b	335b0 <blkid_probe_get_size@plt+0x2c098>
   3356c:	ldr	r0, [r5, #4]
   33570:	cmp	r0, #0
   33574:	blt	335ac <blkid_probe_get_size@plt+0x2c094>
   33578:	ldrd	r2, [r5, #16]
   3357c:	mvn	r9, #0
   33580:	mvn	r8, #0
   33584:	cmp	r3, r9
   33588:	cmpeq	r2, r8
   3358c:	beq	335ac <blkid_probe_get_size@plt+0x2c094>
   33590:	mov	r2, r4
   33594:	mov	r3, #0
   33598:	mov	r1, #1
   3359c:	bl	6d2c <timerfd_settime@plt>
   335a0:	cmp	r0, #0
   335a4:	blt	335b0 <blkid_probe_get_size@plt+0x2c098>
   335a8:	strd	r8, [r5, #16]
   335ac:	mov	r0, #0
   335b0:	ldr	r2, [sp, #28]
   335b4:	ldr	r3, [r6]
   335b8:	cmp	r2, r3
   335bc:	bne	336c0 <blkid_probe_get_size@plt+0x2c1a8>
   335c0:	add	sp, sp, #36	; 0x24
   335c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   335c8:	ldr	r2, [pc, #264]	; 336d8 <blkid_probe_get_size@plt+0x2c1c0>
   335cc:	ldr	r1, [pc, #264]	; 336dc <blkid_probe_get_size@plt+0x2c1c4>
   335d0:	add	r2, pc, r2
   335d4:	add	r2, r2, #1760	; 0x6e0
   335d8:	add	r2, r2, #4
   335dc:	str	r2, [sp]
   335e0:	ldr	r2, [pc, #248]	; 336e0 <blkid_probe_get_size@plt+0x2c1c8>
   335e4:	ldr	r3, [pc, #248]	; 336e4 <blkid_probe_get_size@plt+0x2c1cc>
   335e8:	add	r2, pc, r2
   335ec:	add	r1, pc, r1
   335f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   335f4:	add	r3, pc, #204	; 0xcc
   335f8:	ldrd	r2, [r3]
   335fc:	cmp	r1, r3
   33600:	cmpeq	r0, r2
   33604:	bhi	33680 <blkid_probe_get_size@plt+0x2c168>
   33608:	ldr	r2, [pc, #216]	; 336e8 <blkid_probe_get_size@plt+0x2c1d0>
   3360c:	mov	r3, #0
   33610:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   33614:	ldr	r2, [pc, #204]	; 336e8 <blkid_probe_get_size@plt+0x2c1d0>
   33618:	mov	r3, #0
   3361c:	mov	r1, r9
   33620:	str	r0, [sp, #20]
   33624:	mov	r0, r8
   33628:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   3362c:	rsb	r3, r2, r2, lsl #5
   33630:	add	r3, r2, r3, lsl #2
   33634:	lsl	r3, r3, #3
   33638:	str	r3, [sp, #24]
   3363c:	b	33544 <blkid_probe_get_size@plt+0x2c02c>
   33640:	ldr	r2, [pc, #164]	; 336ec <blkid_probe_get_size@plt+0x2c1d4>
   33644:	ldr	r1, [pc, #164]	; 336f0 <blkid_probe_get_size@plt+0x2c1d8>
   33648:	add	r2, pc, r2
   3364c:	add	r2, r2, #1760	; 0x6e0
   33650:	add	r2, r2, #4
   33654:	str	r2, [sp]
   33658:	ldr	r2, [pc, #148]	; 336f4 <blkid_probe_get_size@plt+0x2c1dc>
   3365c:	ldr	r3, [pc, #148]	; 336f8 <blkid_probe_get_size@plt+0x2c1e0>
   33660:	add	r2, pc, r2
   33664:	add	r1, pc, r1
   33668:	mov	r0, #0
   3366c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   33670:	bl	732c <__errno_location@plt>
   33674:	ldr	r0, [r0]
   33678:	rsb	r0, r0, #0
   3367c:	b	335b0 <blkid_probe_get_size@plt+0x2c098>
   33680:	mvn	r3, #0
   33684:	str	r3, [sp, #20]
   33688:	str	r3, [sp, #24]
   3368c:	b	33544 <blkid_probe_get_size@plt+0x2c02c>
   33690:	ldr	r2, [pc, #100]	; 336fc <blkid_probe_get_size@plt+0x2c1e4>
   33694:	ldr	r1, [pc, #100]	; 33700 <blkid_probe_get_size@plt+0x2c1e8>
   33698:	add	r2, pc, r2
   3369c:	add	r2, r2, #1760	; 0x6e0
   336a0:	add	r2, r2, #4
   336a4:	str	r2, [sp]
   336a8:	ldr	r2, [pc, #84]	; 33704 <blkid_probe_get_size@plt+0x2c1ec>
   336ac:	ldr	r3, [pc, #84]	; 33708 <blkid_probe_get_size@plt+0x2c1f0>
   336b0:	add	r2, pc, r2
   336b4:	add	r1, pc, r1
   336b8:	mov	r0, #0
   336bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   336c0:	bl	6fb4 <__stack_chk_fail@plt>
   336c4:	nop			; (mov r0, r0)
   336c8:			; <UNDEFINED> instruction: 0xfff0bdbf
   336cc:	andeq	sl, r7, pc, lsl r1
   336d0:	andeq	r4, r6, r0, asr #14
   336d4:	andeq	r0, r0, ip, lsr r4
   336d8:	andeq	r9, r3, r8, lsr #4
   336dc:	andeq	r1, r4, r4, lsl #1
   336e0:	ldrdeq	r9, [r3], -r4
   336e4:	andeq	r0, r0, r2, asr #18
   336e8:	andeq	r4, pc, r0, asr #4
   336ec:			; <UNDEFINED> instruction: 0x000391b0
   336f0:	andeq	sl, r3, r0, ror #25
   336f4:	andeq	r9, r3, ip, asr lr
   336f8:	andeq	r0, r0, sp, asr r9
   336fc:	andeq	r9, r3, r0, ror #2
   33700:	andeq	sl, r3, r8, lsr #1
   33704:	andeq	r9, r3, ip, lsl #28
   33708:	andeq	r0, r0, r3, ror #18
   3370c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33710:	subs	r6, r0, #0
   33714:	sub	sp, sp, #36	; 0x24
   33718:	beq	33eb0 <blkid_probe_get_size@plt+0x2c998>
   3371c:	cmp	r6, #1
   33720:	beq	339d8 <blkid_probe_get_size@plt+0x2c4c0>
   33724:	ldr	r4, [r6, #228]	; 0xe4
   33728:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3372c:	cmp	r4, r0
   33730:	bne	340c0 <blkid_probe_get_size@plt+0x2cba8>
   33734:	ldr	r3, [r6, #264]	; 0x108
   33738:	cmp	r3, #0
   3373c:	bne	340f8 <blkid_probe_get_size@plt+0x2cbe0>
   33740:	mov	r0, r6
   33744:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   33748:	ldr	sl, [pc, #1480]	; 33d18 <blkid_probe_get_size@plt+0x2c800>
   3374c:	ldr	r8, [pc, #1480]	; 33d1c <blkid_probe_get_size@plt+0x2c804>
   33750:	add	sl, pc, sl
   33754:	str	sl, [sp, #20]
   33758:	mov	r9, r0
   3375c:	ldr	r3, [r6, #264]	; 0x108
   33760:	cmp	r3, #5
   33764:	beq	33a5c <blkid_probe_get_size@plt+0x2c544>
   33768:	cmp	r6, #1
   3376c:	movne	r5, r6
   33770:	beq	33980 <blkid_probe_get_size@plt+0x2c468>
   33774:	ldr	r4, [r5, #228]	; 0xe4
   33778:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3377c:	cmp	r4, r0
   33780:	bne	33cd8 <blkid_probe_get_size@plt+0x2c7c0>
   33784:	ldr	r4, [r5, #264]	; 0x108
   33788:	cmp	r4, #5
   3378c:	beq	33e78 <blkid_probe_get_size@plt+0x2c960>
   33790:	cmp	r4, #0
   33794:	bne	33eec <blkid_probe_get_size@plt+0x2c9d4>
   33798:	ldrb	r3, [r5, #268]	; 0x10c
   3379c:	tst	r3, #8
   337a0:	bne	338dc <blkid_probe_get_size@plt+0x2c3c4>
   337a4:	cmp	r5, #1
   337a8:	movne	r7, r5
   337ac:	beq	33a6c <blkid_probe_get_size@plt+0x2c554>
   337b0:	ldr	r4, [r7, #228]	; 0xe4
   337b4:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   337b8:	cmp	r4, r0
   337bc:	bne	34130 <blkid_probe_get_size@plt+0x2cc18>
   337c0:	ldr	r3, [r7, #264]	; 0x108
   337c4:	cmp	r3, #5
   337c8:	beq	34188 <blkid_probe_get_size@plt+0x2cc70>
   337cc:	cmp	r3, #0
   337d0:	bne	33c64 <blkid_probe_get_size@plt+0x2c74c>
   337d4:	ldrb	r3, [r7, #268]	; 0x10c
   337d8:	tst	r3, #1
   337dc:	beq	33b10 <blkid_probe_get_size@plt+0x2c5f8>
   337e0:	mov	r4, #1
   337e4:	mov	r3, #0
   337e8:	str	r4, [r7, #264]	; 0x108
   337ec:	mov	r2, #0
   337f0:	mov	r0, r7
   337f4:	bl	326ec <blkid_probe_get_size@plt+0x2b1d4>
   337f8:	subs	r3, r0, #0
   337fc:	bne	33818 <blkid_probe_get_size@plt+0x2c300>
   33800:	str	r4, [r7, #264]	; 0x108
   33804:	mvn	r3, #0
   33808:	mvn	r2, #0
   3380c:	mov	r0, r5
   33810:	bl	326ec <blkid_probe_get_size@plt+0x2b1d4>
   33814:	mov	r3, r0
   33818:	ldrb	r2, [r5, #268]	; 0x10c
   3381c:	tst	r2, #8
   33820:	bne	33cbc <blkid_probe_get_size@plt+0x2c7a4>
   33824:	cmp	r3, #0
   33828:	ble	33a48 <blkid_probe_get_size@plt+0x2c530>
   3382c:	cmp	r5, #1
   33830:	beq	33f24 <blkid_probe_get_size@plt+0x2ca0c>
   33834:	ldr	r4, [r5, #228]	; 0xe4
   33838:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3383c:	cmp	r4, r0
   33840:	bne	34288 <blkid_probe_get_size@plt+0x2cd70>
   33844:	ldr	r3, [r5, #264]	; 0x108
   33848:	cmp	r3, #5
   3384c:	beq	342c0 <blkid_probe_get_size@plt+0x2cda8>
   33850:	cmp	r3, #2
   33854:	bne	3423c <blkid_probe_get_size@plt+0x2cd24>
   33858:	ldrb	r3, [r5, #268]	; 0x10c
   3385c:	ands	r4, r3, #1
   33860:	bne	34098 <blkid_probe_get_size@plt+0x2cb80>
   33864:	mov	r0, r5
   33868:	bl	2b96c <blkid_probe_get_size@plt+0x24454>
   3386c:	subs	r7, r0, #0
   33870:	beq	34274 <blkid_probe_get_size@plt+0x2cd5c>
   33874:	mov	r0, r5
   33878:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   3387c:	mov	r3, #3
   33880:	str	r3, [r5, #264]	; 0x108
   33884:	mov	fp, r0
   33888:	mov	r0, r7
   3388c:	bl	31488 <blkid_probe_get_size@plt+0x29f70>
   33890:	cmp	fp, #0
   33894:	str	r4, [r5, #264]	; 0x108
   33898:	mov	r3, r0
   3389c:	beq	338b0 <blkid_probe_get_size@plt+0x2c398>
   338a0:	str	r0, [sp, #24]
   338a4:	mov	r0, fp
   338a8:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   338ac:	ldr	r3, [sp, #24]
   338b0:	cmp	r3, #0
   338b4:	bge	3375c <blkid_probe_get_size@plt+0x2c244>
   338b8:	cmp	r9, #0
   338bc:	beq	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   338c0:	mov	r0, r9
   338c4:	str	r3, [sp, #20]
   338c8:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   338cc:	ldr	r3, [sp, #20]
   338d0:	mov	r0, r3
   338d4:	add	sp, sp, #36	; 0x24
   338d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338dc:	add	r7, r5, #320	; 0x140
   338e0:	ldrd	r2, [r7, #-8]
   338e4:	orrs	r3, r2, r3
   338e8:	beq	337a4 <blkid_probe_get_size@plt+0x2c28c>
   338ec:	mov	r0, #1
   338f0:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   338f4:	mov	sl, r0
   338f8:	mov	fp, r1
   338fc:	ldrd	r0, [r7, #-8]
   33900:	subs	r0, sl, r0
   33904:	sbc	r1, fp, r1
   33908:	cmp	r1, #0
   3390c:	cmpeq	r0, #1
   33910:	bls	33930 <blkid_probe_get_size@plt+0x2c418>
   33914:	cmp	r1, #0
   33918:	mov	r3, r1
   3391c:	moveq	r3, r0
   33920:	clzeq	r4, r3
   33924:	addeq	r4, r4, #32
   33928:	clzne	r4, r1
   3392c:	eor	r4, r4, #63	; 0x3f
   33930:	add	r4, r5, r4, lsl #2
   33934:	ldr	r1, [r4, #328]	; 0x148
   33938:	add	r1, r1, #1
   3393c:	str	r1, [r4, #328]	; 0x148
   33940:	ldrd	r0, [r7]
   33944:	subs	r0, sl, r0
   33948:	sbc	r1, fp, r1
   3394c:	mov	r2, r0
   33950:	mov	r3, r1
   33954:	add	r1, pc, #948	; 0x3b4
   33958:	ldrd	r0, [r1]
   3395c:	cmp	r3, r1
   33960:	cmpeq	r2, r0
   33964:	bls	337a4 <blkid_probe_get_size@plt+0x2c28c>
   33968:	mov	r0, r5
   3396c:	strd	sl, [sp, #24]
   33970:	bl	2b6ac <blkid_probe_get_size@plt+0x24194>
   33974:	ldrd	sl, [sp, #24]
   33978:	strd	sl, [r7]
   3397c:	b	337a4 <blkid_probe_get_size@plt+0x2c28c>
   33980:	ldr	r0, [pc, #920]	; 33d20 <blkid_probe_get_size@plt+0x2c808>
   33984:	add	r0, pc, r0
   33988:	bl	74dc <__tls_get_addr@plt>
   3398c:	ldr	r5, [r8, r0]
   33990:	cmp	r5, #0
   33994:	bne	33774 <blkid_probe_get_size@plt+0x2c25c>
   33998:	ldr	r3, [pc, #900]	; 33d24 <blkid_probe_get_size@plt+0x2c80c>
   3399c:	ldr	r2, [pc, #900]	; 33d28 <blkid_probe_get_size@plt+0x2c810>
   339a0:	add	r3, pc, r3
   339a4:	add	r3, r3, #1792	; 0x700
   339a8:	ldr	r1, [pc, #892]	; 33d2c <blkid_probe_get_size@plt+0x2c814>
   339ac:	add	r3, r3, #4
   339b0:	str	r3, [sp]
   339b4:	mov	r0, r5
   339b8:	ldr	r3, [pc, #880]	; 33d30 <blkid_probe_get_size@plt+0x2c818>
   339bc:	add	r2, pc, r2
   339c0:	add	r1, pc, r1
   339c4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   339c8:	cmp	r9, #0
   339cc:	mvn	r3, #64	; 0x40
   339d0:	bne	338c0 <blkid_probe_get_size@plt+0x2c3a8>
   339d4:	b	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   339d8:	ldr	r0, [pc, #852]	; 33d34 <blkid_probe_get_size@plt+0x2c81c>
   339dc:	add	r0, pc, r0
   339e0:	bl	74dc <__tls_get_addr@plt>
   339e4:	ldr	r3, [pc, #816]	; 33d1c <blkid_probe_get_size@plt+0x2c804>
   339e8:	ldr	r6, [r3, r0]
   339ec:	cmp	r6, #0
   339f0:	bne	33724 <blkid_probe_get_size@plt+0x2c20c>
   339f4:	ldr	r3, [pc, #828]	; 33d38 <blkid_probe_get_size@plt+0x2c820>
   339f8:	ldr	r2, [pc, #828]	; 33d3c <blkid_probe_get_size@plt+0x2c824>
   339fc:	add	r3, pc, r3
   33a00:	add	r3, r3, #1776	; 0x6f0
   33a04:	ldr	r1, [pc, #820]	; 33d40 <blkid_probe_get_size@plt+0x2c828>
   33a08:	add	r3, r3, #4
   33a0c:	str	r3, [sp]
   33a10:	mov	r0, r6
   33a14:	ldr	r3, [pc, #808]	; 33d44 <blkid_probe_get_size@plt+0x2c82c>
   33a18:	add	r2, pc, r2
   33a1c:	add	r1, pc, r1
   33a20:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33a24:	mvn	r3, #64	; 0x40
   33a28:	b	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   33a2c:	mov	r2, #0
   33a30:	str	r2, [r7, #264]	; 0x108
   33a34:	ldrb	r2, [r5, #268]	; 0x10c
   33a38:	mov	r3, r0
   33a3c:	str	sl, [sp, #20]
   33a40:	tst	r2, #8
   33a44:	bne	33cbc <blkid_probe_get_size@plt+0x2c7a4>
   33a48:	cmp	r3, #0
   33a4c:	bne	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33a50:	ldr	r3, [r6, #264]	; 0x108
   33a54:	cmp	r3, #5
   33a58:	bne	33768 <blkid_probe_get_size@plt+0x2c250>
   33a5c:	cmp	r9, #0
   33a60:	ldr	r3, [r6, #272]	; 0x110
   33a64:	bne	338c0 <blkid_probe_get_size@plt+0x2c3a8>
   33a68:	b	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   33a6c:	ldr	r0, [pc, #724]	; 33d48 <blkid_probe_get_size@plt+0x2c830>
   33a70:	add	r0, pc, r0
   33a74:	bl	74dc <__tls_get_addr@plt>
   33a78:	ldr	r7, [r8, r0]
   33a7c:	cmp	r7, #0
   33a80:	bne	337b0 <blkid_probe_get_size@plt+0x2c298>
   33a84:	ldr	r2, [pc, #704]	; 33d4c <blkid_probe_get_size@plt+0x2c834>
   33a88:	ldr	r1, [pc, #704]	; 33d50 <blkid_probe_get_size@plt+0x2c838>
   33a8c:	add	r2, pc, r2
   33a90:	add	r2, r2, #1808	; 0x710
   33a94:	add	r2, r2, #4
   33a98:	str	r2, [sp]
   33a9c:	ldr	r2, [pc, #688]	; 33d54 <blkid_probe_get_size@plt+0x2c83c>
   33aa0:	ldr	r3, [pc, #688]	; 33d58 <blkid_probe_get_size@plt+0x2c840>
   33aa4:	add	r2, pc, r2
   33aa8:	add	r1, pc, r1
   33aac:	mov	r0, r7
   33ab0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33ab4:	ldrb	r3, [r7, #269]	; 0x10d
   33ab8:	tst	r3, #8
   33abc:	mvneq	r3, #64	; 0x40
   33ac0:	beq	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33ac4:	mov	r0, r5
   33ac8:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   33acc:	mov	r3, #320	; 0x140
   33ad0:	lsr	ip, r0, #8
   33ad4:	lsr	r2, r0, #16
   33ad8:	strb	ip, [r3, #-6]
   33adc:	strb	r0, [r3, #-7]
   33ae0:	lsr	ip, r0, #24
   33ae4:	strb	r1, [r3, #-3]
   33ae8:	lsr	r0, r1, #8
   33aec:	strb	r2, [r3, #-5]
   33af0:	lsr	r2, r1, #16
   33af4:	lsr	r1, r1, #24
   33af8:	strb	ip, [r3, #-4]
   33afc:	strb	r0, [r3, #-2]
   33b00:	strb	r2, [r3, #-1]
   33b04:	strb	r1, [r3]
   33b08:	mvn	r3, #64	; 0x40
   33b0c:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33b10:	ldrd	r2, [r7, #232]	; 0xe8
   33b14:	ldr	r1, [sp, #20]
   33b18:	ldr	sl, [sp, #20]
   33b1c:	adds	r0, r2, #1
   33b20:	add	fp, r1, #1840	; 0x730
   33b24:	adc	r1, r3, #0
   33b28:	mov	r3, r1
   33b2c:	mov	r2, r0
   33b30:	add	fp, fp, #8
   33b34:	mov	r1, #6
   33b38:	strd	r2, [r7, #232]	; 0xe8
   33b3c:	str	r1, [r7, #264]	; 0x108
   33b40:	ldr	r0, [r7, #16]
   33b44:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   33b48:	subs	r4, r0, #0
   33b4c:	beq	33fa4 <blkid_probe_get_size@plt+0x2ca8c>
   33b50:	ldrd	r0, [r7, #232]	; 0xe8
   33b54:	ldrd	r2, [r4, #56]	; 0x38
   33b58:	cmp	r3, r1
   33b5c:	cmpeq	r2, r0
   33b60:	beq	33fa4 <blkid_probe_get_size@plt+0x2ca8c>
   33b64:	ldrb	r3, [r4, #24]
   33b68:	tst	r3, #224	; 0xe0
   33b6c:	beq	33fa4 <blkid_probe_get_size@plt+0x2ca8c>
   33b70:	strd	r0, [r4, #56]	; 0x38
   33b74:	add	r2, r4, #44	; 0x2c
   33b78:	ldr	r0, [r7, #16]
   33b7c:	mov	r1, r4
   33b80:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   33b84:	cmp	r0, #0
   33b88:	blt	33a2c <blkid_probe_get_size@plt+0x2c514>
   33b8c:	ldr	r2, [r4, #16]
   33b90:	cmp	r2, #0
   33b94:	beq	33f74 <blkid_probe_get_size@plt+0x2ca5c>
   33b98:	ldrb	r3, [r4, #25]
   33b9c:	ldr	r1, [r4, #12]
   33ba0:	mov	r0, r4
   33ba4:	orr	r3, r3, #2
   33ba8:	strb	r3, [r4, #25]
   33bac:	blx	r2
   33bb0:	ldrb	r3, [r4, #25]
   33bb4:	bic	r3, r3, #2
   33bb8:	strb	r3, [r4, #25]
   33bbc:	subs	r1, r0, #0
   33bc0:	blt	33bdc <blkid_probe_get_size@plt+0x2c6c4>
   33bc4:	ldr	r3, [r4, #4]
   33bc8:	cmp	r3, #0
   33bcc:	bne	33b40 <blkid_probe_get_size@plt+0x2c628>
   33bd0:	mov	r0, r4
   33bd4:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   33bd8:	b	33b40 <blkid_probe_get_size@plt+0x2c628>
   33bdc:	ldr	r3, [pc, #376]	; 33d5c <blkid_probe_get_size@plt+0x2c844>
   33be0:	add	r3, pc, r3
   33be4:	ldr	r3, [r3]
   33be8:	cmp	r3, #6
   33bec:	ble	33c4c <blkid_probe_get_size@plt+0x2c734>
   33bf0:	ldr	r2, [r4, #20]
   33bf4:	cmp	r2, #0
   33bf8:	beq	3427c <blkid_probe_get_size@plt+0x2cd64>
   33bfc:	ldrb	r3, [r4, #24]
   33c00:	lsl	r3, r3, #27
   33c04:	asr	r3, r3, #27
   33c08:	cmp	r3, #12
   33c0c:	movhi	r0, #0
   33c10:	ldrls	r0, [pc, #328]	; 33d60 <blkid_probe_get_size@plt+0x2c848>
   33c14:	addls	r0, pc, r0
   33c18:	addls	r3, r0, r3, lsl #2
   33c1c:	ldrls	r0, [r3, #120]	; 0x78
   33c20:	ldr	r3, [pc, #316]	; 33d64 <blkid_probe_get_size@plt+0x2c84c>
   33c24:	str	r2, [sp, #8]
   33c28:	ldr	r2, [pc, #312]	; 33d68 <blkid_probe_get_size@plt+0x2c850>
   33c2c:	add	r3, pc, r3
   33c30:	str	r0, [sp, #12]
   33c34:	str	r3, [sp, #4]
   33c38:	str	fp, [sp]
   33c3c:	ldr	r3, [pc, #296]	; 33d6c <blkid_probe_get_size@plt+0x2c854>
   33c40:	add	r2, pc, r2
   33c44:	mov	r0, #7
   33c48:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   33c4c:	ldr	r3, [r4, #4]
   33c50:	cmp	r3, #0
   33c54:	beq	33bd0 <blkid_probe_get_size@plt+0x2c6b8>
   33c58:	mov	r0, r4
   33c5c:	bl	4b53c <blkid_probe_get_size@plt+0x44024>
   33c60:	b	33b40 <blkid_probe_get_size@plt+0x2c628>
   33c64:	ldr	r2, [pc, #260]	; 33d70 <blkid_probe_get_size@plt+0x2c858>
   33c68:	ldr	r1, [pc, #260]	; 33d74 <blkid_probe_get_size@plt+0x2c85c>
   33c6c:	add	r2, pc, r2
   33c70:	add	r2, r2, #1808	; 0x710
   33c74:	add	r2, r2, #4
   33c78:	str	r2, [sp]
   33c7c:	ldr	r2, [pc, #244]	; 33d78 <blkid_probe_get_size@plt+0x2c860>
   33c80:	ldr	r3, [pc, #244]	; 33d7c <blkid_probe_get_size@plt+0x2c864>
   33c84:	add	r2, pc, r2
   33c88:	add	r1, pc, r1
   33c8c:	mov	r0, #0
   33c90:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33c94:	ldrb	r3, [r5, #268]	; 0x10c
   33c98:	tst	r3, #8
   33c9c:	mvneq	r3, #15
   33ca0:	beq	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33ca4:	mov	r0, #1
   33ca8:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   33cac:	add	r5, r5, #320	; 0x140
   33cb0:	mvn	r3, #15
   33cb4:	strd	r0, [r5, #-8]
   33cb8:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33cbc:	mov	r0, #1
   33cc0:	str	r3, [sp, #24]
   33cc4:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   33cc8:	add	r2, r5, #320	; 0x140
   33ccc:	ldr	r3, [sp, #24]
   33cd0:	strd	r0, [r2, #-8]
   33cd4:	b	33824 <blkid_probe_get_size@plt+0x2c30c>
   33cd8:	ldr	r2, [pc, #160]	; 33d80 <blkid_probe_get_size@plt+0x2c868>
   33cdc:	ldr	r1, [pc, #160]	; 33d84 <blkid_probe_get_size@plt+0x2c86c>
   33ce0:	add	r2, pc, r2
   33ce4:	add	r2, r2, #1792	; 0x700
   33ce8:	add	r2, r2, #4
   33cec:	str	r2, [sp]
   33cf0:	ldr	r2, [pc, #144]	; 33d88 <blkid_probe_get_size@plt+0x2c870>
   33cf4:	ldr	r3, [pc, #144]	; 33d8c <blkid_probe_get_size@plt+0x2c874>
   33cf8:	add	r2, pc, r2
   33cfc:	add	r1, pc, r1
   33d00:	mov	r0, #0
   33d04:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33d08:	mvn	r3, #9
   33d0c:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33d10:	subeq	r4, ip, pc, lsr fp
   33d14:	andeq	r0, r0, r0
   33d18:	andeq	r9, r3, r8, lsr #1
   33d1c:	andeq	r0, r0, r4, asr r0
   33d20:	andeq	r4, r6, r4, lsl r6
   33d24:	andeq	r8, r3, r8, asr lr
   33d28:	andeq	r9, r3, r0, lsl #22
   33d2c:	andeq	sl, r3, r8, lsr #6
   33d30:			; <UNDEFINED> instruction: 0x00000cbc
   33d34:			; <UNDEFINED> instruction: 0x000645bc
   33d38:	strdeq	r8, [r3], -ip
   33d3c:	andeq	r9, r3, r4, lsr #21
   33d40:	andeq	sl, r3, ip, asr #5
   33d44:	andeq	r0, r0, sl, ror #25
   33d48:	andeq	r4, r6, r8, lsr #10
   33d4c:	andeq	r8, r3, ip, ror #26
   33d50:	andeq	sl, r3, r0, asr #4
   33d54:	andeq	r9, r3, r8, lsl sl
   33d58:	andeq	r0, r0, r1, ror #23
   33d5c:	andeq	r4, r6, ip, asr r5
   33d60:	andeq	r6, r5, ip, ror r0
   33d64:	andeq	sl, r3, r4, ror #14
   33d68:	andeq	r9, r3, ip, ror r8
   33d6c:	andeq	r0, r0, r1, ror fp
   33d70:	andeq	r8, r3, ip, lsl #23
   33d74:	ldrdeq	sl, [r3], -ip
   33d78:	andeq	r9, r3, r8, lsr r8
   33d7c:	andeq	r0, r0, r4, ror #23
   33d80:	andeq	r8, r3, r8, lsl fp
   33d84:	andeq	sl, r3, r4, lsr #32
   33d88:	andeq	r9, r3, r4, asr #15
   33d8c:			; <UNDEFINED> instruction: 0x00000cbd
   33d90:	andeq	r8, r3, r8, ror r9
   33d94:	andeq	r9, r3, r4, ror #28
   33d98:	andeq	r9, r3, r4, lsr #12
   33d9c:			; <UNDEFINED> instruction: 0x00000cbe
   33da0:	andeq	r8, r3, r0, asr #18
   33da4:	muleq	r4, ip, r7
   33da8:	andeq	r9, r3, ip, ror #11
   33dac:	andeq	r0, r0, r9, ror #25
   33db0:	andeq	r8, r3, r4, lsl #18
   33db4:	andeq	sl, r3, r4, asr r4
   33db8:			; <UNDEFINED> instruction: 0x000395b0
   33dbc:			; <UNDEFINED> instruction: 0x00000cbf
   33dc0:	andeq	r4, r6, r0, ror r0
   33dc4:			; <UNDEFINED> instruction: 0x000388b4
   33dc8:	andeq	r9, r3, ip, asr r5
   33dcc:	andeq	r9, r3, r4, lsl #27
   33dd0:	muleq	r0, r4, ip
   33dd4:	andeq	r8, r3, ip, ror r8
   33dd8:	andeq	r9, r3, r8, lsr #10
   33ddc:	andeq	sl, r3, r8, ror #7
   33de0:	andeq	r0, r0, r9, ror #22
   33de4:	andeq	r8, r3, r0, lsr r7
   33de8:	andeq	r9, r3, ip, lsr ip
   33dec:	ldrdeq	r9, [r3], -ip
   33df0:	andeq	r0, r0, fp, ror #25
   33df4:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   33df8:	andeq	sl, r3, r8, asr #4
   33dfc:	andeq	r9, r3, r4, lsr #7
   33e00:	andeq	r0, r0, ip, ror #25
   33e04:	andeq	r8, r3, r0, asr #13
   33e08:	andeq	r9, r3, ip, asr #23
   33e0c:	andeq	r9, r3, ip, ror #6
   33e10:	andeq	r0, r0, r2, ror #23
   33e14:	andeq	r8, r3, r8, ror #12
   33e18:	andeq	r9, r3, r4, asr fp
   33e1c:	andeq	r9, r3, r4, lsl r3
   33e20:	andeq	r0, r0, r3, ror #23
   33e24:			; <UNDEFINED> instruction: 0x000385b4
   33e28:	andeq	sl, r3, ip, ror r1
   33e2c:	andeq	r9, r3, r0, ror #4
   33e30:	muleq	r0, r7, ip
   33e34:	andeq	r9, r3, r4, lsr r5
   33e38:	andeq	r8, r3, r8, ror #10
   33e3c:	andeq	r9, r3, r4, ror sl
   33e40:	andeq	r9, r3, r4, lsl r2
   33e44:	muleq	r0, r5, ip
   33e48:	andeq	r8, r3, r0, lsr r5
   33e4c:	andeq	r9, r3, ip, lsl sl
   33e50:	ldrdeq	r9, [r3], -ip
   33e54:	muleq	r0, r6, ip
   33e58:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   33e5c:	andeq	r9, r3, r0, asr #8
   33e60:	andeq	r9, r3, r4, lsr #3
   33e64:	ldrdeq	r0, [r0], -r6
   33e68:	muleq	r3, ip, r4
   33e6c:	andeq	r9, r3, ip, asr #2
   33e70:	muleq	r3, r8, r2
   33e74:	ldrdeq	r0, [r0], -r9
   33e78:	ldr	r2, [pc, #-240]	; 33d90 <blkid_probe_get_size@plt+0x2c878>
   33e7c:	ldr	r1, [pc, #-240]	; 33d94 <blkid_probe_get_size@plt+0x2c87c>
   33e80:	add	r2, pc, r2
   33e84:	add	r2, r2, #1792	; 0x700
   33e88:	add	r2, r2, #4
   33e8c:	str	r2, [sp]
   33e90:	ldr	r2, [pc, #-256]	; 33d98 <blkid_probe_get_size@plt+0x2c880>
   33e94:	ldr	r3, [pc, #-256]	; 33d9c <blkid_probe_get_size@plt+0x2c884>
   33e98:	add	r2, pc, r2
   33e9c:	add	r1, pc, r1
   33ea0:	mov	r0, #0
   33ea4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33ea8:	mvn	r3, #115	; 0x73
   33eac:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33eb0:	ldr	r2, [pc, #-280]	; 33da0 <blkid_probe_get_size@plt+0x2c888>
   33eb4:	ldr	r1, [pc, #-280]	; 33da4 <blkid_probe_get_size@plt+0x2c88c>
   33eb8:	add	r2, pc, r2
   33ebc:	add	r2, r2, #1776	; 0x6f0
   33ec0:	add	r2, r2, #4
   33ec4:	str	r2, [sp]
   33ec8:	ldr	r2, [pc, #-296]	; 33da8 <blkid_probe_get_size@plt+0x2c890>
   33ecc:	ldr	r3, [pc, #-296]	; 33dac <blkid_probe_get_size@plt+0x2c894>
   33ed0:	add	r2, pc, r2
   33ed4:	add	r1, pc, r1
   33ed8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33edc:	mvn	r3, #21
   33ee0:	mov	r0, r3
   33ee4:	add	sp, sp, #36	; 0x24
   33ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33eec:	ldr	r2, [pc, #-324]	; 33db0 <blkid_probe_get_size@plt+0x2c898>
   33ef0:	ldr	r1, [pc, #-324]	; 33db4 <blkid_probe_get_size@plt+0x2c89c>
   33ef4:	add	r2, pc, r2
   33ef8:	add	r2, r2, #1792	; 0x700
   33efc:	add	r2, r2, #4
   33f00:	str	r2, [sp]
   33f04:	ldr	r2, [pc, #-340]	; 33db8 <blkid_probe_get_size@plt+0x2c8a0>
   33f08:	ldr	r3, [pc, #-340]	; 33dbc <blkid_probe_get_size@plt+0x2c8a4>
   33f0c:	add	r2, pc, r2
   33f10:	add	r1, pc, r1
   33f14:	mov	r0, #0
   33f18:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33f1c:	mvn	r3, #15
   33f20:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33f24:	ldr	r0, [pc, #-364]	; 33dc0 <blkid_probe_get_size@plt+0x2c8a8>
   33f28:	add	r0, pc, r0
   33f2c:	bl	74dc <__tls_get_addr@plt>
   33f30:	ldr	r5, [r8, r0]
   33f34:	cmp	r5, #0
   33f38:	bne	33834 <blkid_probe_get_size@plt+0x2c31c>
   33f3c:	ldr	r3, [pc, #-384]	; 33dc4 <blkid_probe_get_size@plt+0x2c8ac>
   33f40:	ldr	r2, [pc, #-384]	; 33dc8 <blkid_probe_get_size@plt+0x2c8b0>
   33f44:	add	r3, pc, r3
   33f48:	add	r3, r3, #1888	; 0x760
   33f4c:	ldr	r1, [pc, #-392]	; 33dcc <blkid_probe_get_size@plt+0x2c8b4>
   33f50:	add	r3, r3, #4
   33f54:	str	r3, [sp]
   33f58:	mov	r0, r5
   33f5c:	ldr	r3, [pc, #-404]	; 33dd0 <blkid_probe_get_size@plt+0x2c8b8>
   33f60:	add	r2, pc, r2
   33f64:	add	r1, pc, r1
   33f68:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   33f6c:	mvn	r3, #64	; 0x40
   33f70:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   33f74:	ldr	r3, [pc, #-424]	; 33dd4 <blkid_probe_get_size@plt+0x2c8bc>
   33f78:	mov	r0, r2
   33f7c:	add	r3, pc, r3
   33f80:	add	r3, r3, #1824	; 0x720
   33f84:	ldr	r2, [pc, #-436]	; 33dd8 <blkid_probe_get_size@plt+0x2c8c0>
   33f88:	ldr	r1, [pc, #-436]	; 33ddc <blkid_probe_get_size@plt+0x2c8c4>
   33f8c:	add	r3, r3, #8
   33f90:	str	r3, [sp]
   33f94:	add	r2, pc, r2
   33f98:	ldr	r3, [pc, #-448]	; 33de0 <blkid_probe_get_size@plt+0x2c8c8>
   33f9c:	add	r1, pc, r1
   33fa0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   33fa4:	mov	r4, #0
   33fa8:	str	r4, [r7, #264]	; 0x108
   33fac:	add	r1, r7, #24
   33fb0:	mov	r0, r7
   33fb4:	str	sl, [sp, #20]
   33fb8:	bl	33420 <blkid_probe_get_size@plt+0x2bf08>
   33fbc:	subs	r3, r0, #0
   33fc0:	blt	33818 <blkid_probe_get_size@plt+0x2c300>
   33fc4:	add	r1, r7, #56	; 0x38
   33fc8:	mov	r0, r7
   33fcc:	bl	33420 <blkid_probe_get_size@plt+0x2bf08>
   33fd0:	subs	r3, r0, #0
   33fd4:	blt	33818 <blkid_probe_get_size@plt+0x2c300>
   33fd8:	add	r1, r7, #88	; 0x58
   33fdc:	mov	r0, r7
   33fe0:	bl	33420 <blkid_probe_get_size@plt+0x2bf08>
   33fe4:	subs	r3, r0, #0
   33fe8:	blt	33818 <blkid_probe_get_size@plt+0x2c300>
   33fec:	add	r1, r7, #120	; 0x78
   33ff0:	mov	r0, r7
   33ff4:	bl	33420 <blkid_probe_get_size@plt+0x2bf08>
   33ff8:	subs	r3, r0, #0
   33ffc:	blt	33818 <blkid_probe_get_size@plt+0x2c300>
   34000:	add	r1, r7, #152	; 0x98
   34004:	mov	r0, r7
   34008:	bl	33420 <blkid_probe_get_size@plt+0x2bf08>
   3400c:	subs	r3, r0, #0
   34010:	blt	33818 <blkid_probe_get_size@plt+0x2c300>
   34014:	ldr	fp, [r7, #220]	; 0xdc
   34018:	cmp	fp, #0
   3401c:	beq	3432c <blkid_probe_get_size@plt+0x2ce14>
   34020:	ldr	r0, [fp, #16]
   34024:	cmp	r0, #0
   34028:	blt	342f8 <blkid_probe_get_size@plt+0x2cde0>
   3402c:	ldr	sl, [sp, #20]
   34030:	b	3405c <blkid_probe_get_size@plt+0x2cb44>
   34034:	ldr	r3, [fp, #36]	; 0x24
   34038:	str	r3, [r0, #36]	; 0x24
   3403c:	str	r4, [fp, #40]	; 0x28
   34040:	str	r4, [fp, #36]	; 0x24
   34044:	ldr	fp, [r7, #220]	; 0xdc
   34048:	cmp	fp, #0
   3404c:	beq	34328 <blkid_probe_get_size@plt+0x2ce10>
   34050:	ldr	r0, [fp, #16]
   34054:	cmp	r0, #0
   34058:	blt	342f8 <blkid_probe_get_size@plt+0x2cde0>
   3405c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   34060:	ldr	r3, [fp, #36]	; 0x24
   34064:	cmp	r3, #0
   34068:	ldrne	r2, [fp, #40]	; 0x28
   3406c:	str	r0, [fp, #16]
   34070:	strne	r2, [r3, #40]	; 0x28
   34074:	ldr	r0, [fp, #40]	; 0x28
   34078:	cmp	r0, #0
   3407c:	bne	34034 <blkid_probe_get_size@plt+0x2cb1c>
   34080:	ldr	r3, [r7, #220]	; 0xdc
   34084:	cmp	r3, fp
   34088:	bne	34354 <blkid_probe_get_size@plt+0x2ce3c>
   3408c:	ldr	r3, [fp, #36]	; 0x24
   34090:	str	r3, [r7, #220]	; 0xdc
   34094:	b	3403c <blkid_probe_get_size@plt+0x2cb24>
   34098:	ldr	r0, [r5, #212]	; 0xd4
   3409c:	bl	4b874 <blkid_probe_get_size@plt+0x4435c>
   340a0:	subs	r4, r0, #0
   340a4:	beq	340b4 <blkid_probe_get_size@plt+0x2cb9c>
   340a8:	ldrb	r3, [r4, #24]
   340ac:	tst	r3, #224	; 0xe0
   340b0:	bne	341e0 <blkid_probe_get_size@plt+0x2ccc8>
   340b4:	mov	r3, #5
   340b8:	str	r3, [r5, #264]	; 0x108
   340bc:	b	3375c <blkid_probe_get_size@plt+0x2c244>
   340c0:	ldr	r2, [pc, #-740]	; 33de4 <blkid_probe_get_size@plt+0x2c8cc>
   340c4:	ldr	r1, [pc, #-740]	; 33de8 <blkid_probe_get_size@plt+0x2c8d0>
   340c8:	add	r2, pc, r2
   340cc:	add	r2, r2, #1776	; 0x6f0
   340d0:	add	r2, r2, #4
   340d4:	str	r2, [sp]
   340d8:	ldr	r2, [pc, #-756]	; 33dec <blkid_probe_get_size@plt+0x2c8d4>
   340dc:	ldr	r3, [pc, #-756]	; 33df0 <blkid_probe_get_size@plt+0x2c8d8>
   340e0:	add	r2, pc, r2
   340e4:	add	r1, pc, r1
   340e8:	mov	r0, #0
   340ec:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   340f0:	mvn	r3, #9
   340f4:	b	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   340f8:	ldr	r2, [pc, #-780]	; 33df4 <blkid_probe_get_size@plt+0x2c8dc>
   340fc:	ldr	r1, [pc, #-780]	; 33df8 <blkid_probe_get_size@plt+0x2c8e0>
   34100:	add	r2, pc, r2
   34104:	add	r2, r2, #1776	; 0x6f0
   34108:	add	r2, r2, #4
   3410c:	str	r2, [sp]
   34110:	ldr	r2, [pc, #-796]	; 33dfc <blkid_probe_get_size@plt+0x2c8e4>
   34114:	ldr	r3, [pc, #-796]	; 33e00 <blkid_probe_get_size@plt+0x2c8e8>
   34118:	add	r2, pc, r2
   3411c:	add	r1, pc, r1
   34120:	mov	r0, #0
   34124:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   34128:	mvn	r3, #15
   3412c:	b	338d0 <blkid_probe_get_size@plt+0x2c3b8>
   34130:	ldr	r2, [pc, #-820]	; 33e04 <blkid_probe_get_size@plt+0x2c8ec>
   34134:	ldr	r1, [pc, #-820]	; 33e08 <blkid_probe_get_size@plt+0x2c8f0>
   34138:	add	r2, pc, r2
   3413c:	add	r2, r2, #1808	; 0x710
   34140:	add	r2, r2, #4
   34144:	str	r2, [sp]
   34148:	ldr	r2, [pc, #-836]	; 33e0c <blkid_probe_get_size@plt+0x2c8f4>
   3414c:	ldr	r3, [pc, #-836]	; 33e10 <blkid_probe_get_size@plt+0x2c8f8>
   34150:	add	r2, pc, r2
   34154:	add	r1, pc, r1
   34158:	mov	r0, #0
   3415c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   34160:	ldrb	r3, [r5, #268]	; 0x10c
   34164:	tst	r3, #8
   34168:	mvneq	r3, #9
   3416c:	beq	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   34170:	mov	r0, #1
   34174:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   34178:	add	r5, r5, #320	; 0x140
   3417c:	mvn	r3, #9
   34180:	strd	r0, [r5, #-8]
   34184:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   34188:	ldr	r2, [pc, #-892]	; 33e14 <blkid_probe_get_size@plt+0x2c8fc>
   3418c:	ldr	r1, [pc, #-892]	; 33e18 <blkid_probe_get_size@plt+0x2c900>
   34190:	add	r2, pc, r2
   34194:	add	r2, r2, #1808	; 0x710
   34198:	add	r2, r2, #4
   3419c:	str	r2, [sp]
   341a0:	ldr	r2, [pc, #-908]	; 33e1c <blkid_probe_get_size@plt+0x2c904>
   341a4:	ldr	r3, [pc, #-908]	; 33e20 <blkid_probe_get_size@plt+0x2c908>
   341a8:	add	r2, pc, r2
   341ac:	add	r1, pc, r1
   341b0:	mov	r0, #0
   341b4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   341b8:	ldrb	r3, [r5, #268]	; 0x10c
   341bc:	tst	r3, #8
   341c0:	mvneq	r3, #115	; 0x73
   341c4:	beq	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   341c8:	mov	r0, #1
   341cc:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   341d0:	add	r5, r5, #320	; 0x140
   341d4:	mvn	r3, #115	; 0x73
   341d8:	strd	r0, [r5, #-8]
   341dc:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   341e0:	mov	r0, r5
   341e4:	bl	31c64 <blkid_probe_get_size@plt+0x2a74c>
   341e8:	ldrd	r2, [r5, #232]	; 0xe8
   341ec:	mov	r1, #4
   341f0:	str	r1, [r5, #264]	; 0x108
   341f4:	adds	sl, r2, #1
   341f8:	adc	fp, r3, #0
   341fc:	mov	r2, sl
   34200:	mov	r3, fp
   34204:	strd	r2, [r5, #232]	; 0xe8
   34208:	mov	r7, r0
   3420c:	mov	r0, r4
   34210:	bl	31488 <blkid_probe_get_size@plt+0x29f70>
   34214:	mov	r2, #0
   34218:	cmp	r7, #0
   3421c:	str	r2, [r5, #264]	; 0x108
   34220:	mov	r3, r0
   34224:	beq	338b0 <blkid_probe_get_size@plt+0x2c398>
   34228:	str	r0, [sp, #24]
   3422c:	mov	r0, r7
   34230:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   34234:	ldr	r3, [sp, #24]
   34238:	b	338b0 <blkid_probe_get_size@plt+0x2c398>
   3423c:	ldr	r2, [pc, #-1056]	; 33e24 <blkid_probe_get_size@plt+0x2c90c>
   34240:	ldr	r1, [pc, #-1056]	; 33e28 <blkid_probe_get_size@plt+0x2c910>
   34244:	add	r2, pc, r2
   34248:	add	r2, r2, #1888	; 0x760
   3424c:	add	r2, r2, #4
   34250:	str	r2, [sp]
   34254:	ldr	r2, [pc, #-1072]	; 33e2c <blkid_probe_get_size@plt+0x2c914>
   34258:	ldr	r3, [pc, #-1072]	; 33e30 <blkid_probe_get_size@plt+0x2c918>
   3425c:	add	r2, pc, r2
   34260:	add	r1, pc, r1
   34264:	mov	r0, #0
   34268:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3426c:	mvn	r3, #15
   34270:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   34274:	str	r7, [r5, #264]	; 0x108
   34278:	b	3375c <blkid_probe_get_size@plt+0x2c244>
   3427c:	ldr	r2, [pc, #-1104]	; 33e34 <blkid_probe_get_size@plt+0x2c91c>
   34280:	add	r2, pc, r2
   34284:	b	33bfc <blkid_probe_get_size@plt+0x2c6e4>
   34288:	ldr	r2, [pc, #-1112]	; 33e38 <blkid_probe_get_size@plt+0x2c920>
   3428c:	ldr	r1, [pc, #-1112]	; 33e3c <blkid_probe_get_size@plt+0x2c924>
   34290:	add	r2, pc, r2
   34294:	add	r2, r2, #1888	; 0x760
   34298:	add	r2, r2, #4
   3429c:	str	r2, [sp]
   342a0:	ldr	r2, [pc, #-1128]	; 33e40 <blkid_probe_get_size@plt+0x2c928>
   342a4:	ldr	r3, [pc, #-1128]	; 33e44 <blkid_probe_get_size@plt+0x2c92c>
   342a8:	add	r2, pc, r2
   342ac:	add	r1, pc, r1
   342b0:	mov	r0, #0
   342b4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   342b8:	mvn	r3, #9
   342bc:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   342c0:	ldr	r2, [pc, #-1152]	; 33e48 <blkid_probe_get_size@plt+0x2c930>
   342c4:	ldr	r1, [pc, #-1152]	; 33e4c <blkid_probe_get_size@plt+0x2c934>
   342c8:	add	r2, pc, r2
   342cc:	add	r2, r2, #1888	; 0x760
   342d0:	add	r2, r2, #4
   342d4:	str	r2, [sp]
   342d8:	ldr	r2, [pc, #-1168]	; 33e50 <blkid_probe_get_size@plt+0x2c938>
   342dc:	ldr	r3, [pc, #-1168]	; 33e54 <blkid_probe_get_size@plt+0x2c93c>
   342e0:	add	r2, pc, r2
   342e4:	add	r1, pc, r1
   342e8:	mov	r0, #0
   342ec:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   342f0:	mvn	r3, #115	; 0x73
   342f4:	b	338b8 <blkid_probe_get_size@plt+0x2c3a0>
   342f8:	ldr	r2, [pc, #-1192]	; 33e58 <blkid_probe_get_size@plt+0x2c940>
   342fc:	ldr	r1, [pc, #-1192]	; 33e5c <blkid_probe_get_size@plt+0x2c944>
   34300:	add	r2, pc, r2
   34304:	add	r2, r2, #1856	; 0x740
   34308:	add	r2, r2, #8
   3430c:	str	r2, [sp]
   34310:	ldr	r2, [pc, #-1208]	; 33e60 <blkid_probe_get_size@plt+0x2c948>
   34314:	ldr	r3, [pc, #-1208]	; 33e64 <blkid_probe_get_size@plt+0x2c94c>
   34318:	add	r2, pc, r2
   3431c:	add	r1, pc, r1
   34320:	mov	r0, #0
   34324:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34328:	str	sl, [sp, #20]
   3432c:	mov	r0, r7
   34330:	bl	2b96c <blkid_probe_get_size@plt+0x24454>
   34334:	cmp	r0, #0
   34338:	bne	337e0 <blkid_probe_get_size@plt+0x2c2c8>
   3433c:	ldrb	r3, [r7, #268]	; 0x10c
   34340:	tst	r3, #2
   34344:	moveq	r3, #1
   34348:	streq	r3, [r7, #264]	; 0x108
   3434c:	bne	337e0 <blkid_probe_get_size@plt+0x2c2c8>
   34350:	b	33804 <blkid_probe_get_size@plt+0x2c2ec>
   34354:	ldr	r3, [pc, #-1268]	; 33e68 <blkid_probe_get_size@plt+0x2c950>
   34358:	ldr	r2, [pc, #-1268]	; 33e6c <blkid_probe_get_size@plt+0x2c954>
   3435c:	add	r3, pc, r3
   34360:	add	r3, r3, #1856	; 0x740
   34364:	ldr	r1, [pc, #-1276]	; 33e70 <blkid_probe_get_size@plt+0x2c958>
   34368:	add	r3, r3, #8
   3436c:	str	r3, [sp]
   34370:	add	r2, pc, r2
   34374:	ldr	r3, [pc, #-1288]	; 33e74 <blkid_probe_get_size@plt+0x2c95c>
   34378:	add	r1, pc, r1
   3437c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34380:	ldr	r3, [pc, #188]	; 34444 <blkid_probe_get_size@plt+0x2cf2c>
   34384:	push	{r4, r5, r6, r7, r8, lr}
   34388:	mov	r5, r0
   3438c:	add	r0, pc, r3
   34390:	bl	74dc <__tls_get_addr@plt>
   34394:	ldr	r4, [pc, #172]	; 34448 <blkid_probe_get_size@plt+0x2cf30>
   34398:	add	r0, r4, r0
   3439c:	ldrd	r2, [r0, #32]
   343a0:	ldrd	r0, [r0, #24]
   343a4:	orr	r6, r2, r0
   343a8:	orr	r7, r3, r1
   343ac:	orrs	r3, r6, r7
   343b0:	beq	343dc <blkid_probe_get_size@plt+0x2cec4>
   343b4:	ldr	r0, [pc, #144]	; 3444c <blkid_probe_get_size@plt+0x2cf34>
   343b8:	add	r0, pc, r0
   343bc:	bl	74dc <__tls_get_addr@plt>
   343c0:	mov	ip, #0
   343c4:	add	r0, r4, r0
   343c8:	add	r0, r0, #24
   343cc:	ldm	r0, {r0, r1, r2, r3}
   343d0:	stm	r5, {r0, r1, r2, r3}
   343d4:	mov	r0, ip
   343d8:	pop	{r4, r5, r6, r7, r8, pc}
   343dc:	ldr	r0, [pc, #108]	; 34450 <blkid_probe_get_size@plt+0x2cf38>
   343e0:	add	r0, pc, r0
   343e4:	bl	7464 <getenv@plt>
   343e8:	subs	r7, r0, #0
   343ec:	beq	34438 <blkid_probe_get_size@plt+0x2cf20>
   343f0:	ldr	r0, [pc, #92]	; 34454 <blkid_probe_get_size@plt+0x2cf3c>
   343f4:	add	r0, pc, r0
   343f8:	bl	74dc <__tls_get_addr@plt>
   343fc:	mov	r1, #1
   34400:	add	r6, r4, r0
   34404:	add	r2, r6, #24
   34408:	mov	r0, r7
   3440c:	bl	32168 <blkid_probe_get_size@plt+0x2ac50>
   34410:	subs	ip, r0, #0
   34414:	blt	343d4 <blkid_probe_get_size@plt+0x2cebc>
   34418:	ldrd	r2, [r6, #32]
   3441c:	ldrd	r0, [r6, #24]
   34420:	orr	r6, r2, r0
   34424:	orr	r7, r3, r1
   34428:	orrs	r3, r6, r7
   3442c:	bne	343b4 <blkid_probe_get_size@plt+0x2ce9c>
   34430:	mvn	ip, #122	; 0x7a
   34434:	b	343d4 <blkid_probe_get_size@plt+0x2cebc>
   34438:	ldr	r7, [pc, #24]	; 34458 <blkid_probe_get_size@plt+0x2cf40>
   3443c:	add	r7, pc, r7
   34440:	b	343f0 <blkid_probe_get_size@plt+0x2ced8>
   34444:	andeq	r3, r6, ip, lsl #24
   34448:	andeq	r0, r0, r0, lsl r0
   3444c:	andeq	r3, r6, r0, ror #23
   34450:	andeq	sl, r3, ip, lsr #32
   34454:	andeq	r3, r6, r4, lsr #23
   34458:	andeq	r9, r3, r0, asr #31
   3445c:	ldr	r2, [pc, #48]	; 34494 <blkid_probe_get_size@plt+0x2cf7c>
   34460:	push	{lr}		; (str lr, [sp, #-4]!)
   34464:	add	r2, pc, r2
   34468:	sub	sp, sp, #12
   3446c:	add	r2, r2, #1904	; 0x770
   34470:	add	r2, r2, #8
   34474:	str	r2, [sp]
   34478:	ldr	r1, [pc, #24]	; 34498 <blkid_probe_get_size@plt+0x2cf80>
   3447c:	ldr	r2, [pc, #24]	; 3449c <blkid_probe_get_size@plt+0x2cf84>
   34480:	mov	r3, #83	; 0x53
   34484:	add	r2, pc, r2
   34488:	add	r1, pc, r1
   3448c:	mov	r0, #0
   34490:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34494:	muleq	r3, r4, r3
   34498:	andeq	r9, r3, r8, asr #31
   3449c:	andeq	r9, r3, r0, lsr #31
   344a0:	push	{r4, r5, r6, lr}
   344a4:	subs	r4, r0, #0
   344a8:	sub	sp, sp, #8
   344ac:	beq	345f0 <blkid_probe_get_size@plt+0x2d0d8>
   344b0:	mcr	15, 0, r0, cr7, cr10, {5}
   344b4:	ldrex	r5, [r4]
   344b8:	sub	r5, r5, #1
   344bc:	strex	r3, r5, [r4]
   344c0:	cmp	r3, #0
   344c4:	bne	344b4 <blkid_probe_get_size@plt+0x2cf9c>
   344c8:	cmp	r5, #0
   344cc:	mcr	15, 0, r0, cr7, cr10, {5}
   344d0:	bne	345f0 <blkid_probe_get_size@plt+0x2d0d8>
   344d4:	ldr	r3, [r4, #40]	; 0x28
   344d8:	cmp	r3, #0
   344dc:	beq	34500 <blkid_probe_get_size@plt+0x2cfe8>
   344e0:	mov	r6, r5
   344e4:	ldr	r3, [r4, #36]	; 0x24
   344e8:	ldr	r0, [r3, r6, lsl #2]
   344ec:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   344f0:	ldr	r3, [r4, #40]	; 0x28
   344f4:	add	r6, r6, #1
   344f8:	cmp	r6, r3
   344fc:	bcc	344e4 <blkid_probe_get_size@plt+0x2cfcc>
   34500:	ldr	r0, [r4, #36]	; 0x24
   34504:	bl	69f0 <free@plt>
   34508:	ldr	r3, [r4, #52]	; 0x34
   3450c:	cmp	r3, #0
   34510:	beq	34530 <blkid_probe_get_size@plt+0x2d018>
   34514:	ldr	r3, [r4, #48]	; 0x30
   34518:	ldr	r0, [r3, r5, lsl #2]
   3451c:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   34520:	ldr	r3, [r4, #52]	; 0x34
   34524:	add	r5, r5, #1
   34528:	cmp	r5, r3
   3452c:	bcc	34514 <blkid_probe_get_size@plt+0x2cffc>
   34530:	ldr	r0, [r4, #48]	; 0x30
   34534:	bl	69f0 <free@plt>
   34538:	ldr	r0, [r4, #60]	; 0x3c
   3453c:	bl	69f0 <free@plt>
   34540:	ldr	r0, [r4, #88]	; 0x58
   34544:	cmp	r0, #0
   34548:	bne	34564 <blkid_probe_get_size@plt+0x2d04c>
   3454c:	b	345a0 <blkid_probe_get_size@plt+0x2d088>
   34550:	mov	r1, #1
   34554:	bl	34608 <blkid_probe_get_size@plt+0x2d0f0>
   34558:	ldr	r0, [r4, #88]	; 0x58
   3455c:	cmp	r0, #0
   34560:	beq	345a0 <blkid_probe_get_size@plt+0x2d088>
   34564:	ldrb	r3, [r0, #16]
   34568:	tst	r3, #4
   3456c:	bne	34550 <blkid_probe_get_size@plt+0x2d038>
   34570:	ldr	r2, [pc, #132]	; 345fc <blkid_probe_get_size@plt+0x2d0e4>
   34574:	ldr	r1, [pc, #132]	; 34600 <blkid_probe_get_size@plt+0x2d0e8>
   34578:	add	r2, pc, r2
   3457c:	add	r2, r2, #1920	; 0x780
   34580:	add	r2, r2, #12
   34584:	str	r2, [sp]
   34588:	ldr	r2, [pc, #116]	; 34604 <blkid_probe_get_size@plt+0x2d0ec>
   3458c:	mov	r3, #169	; 0xa9
   34590:	add	r2, pc, r2
   34594:	add	r1, pc, r1
   34598:	mov	r0, #0
   3459c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   345a0:	mov	r2, #0
   345a4:	mov	r1, r2
   345a8:	ldr	r0, [r4, #80]	; 0x50
   345ac:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   345b0:	ldr	r0, [r4, #76]	; 0x4c
   345b4:	bl	39bac <blkid_probe_get_size@plt+0x32694>
   345b8:	ldr	r0, [r4, #96]	; 0x60
   345bc:	bl	31a14 <blkid_probe_get_size@plt+0x2a4fc>
   345c0:	ldr	r0, [r4, #100]	; 0x64
   345c4:	bl	31a14 <blkid_probe_get_size@plt+0x2a4fc>
   345c8:	ldr	r0, [r4, #108]	; 0x6c
   345cc:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   345d0:	mov	r2, #0
   345d4:	mov	r1, r2
   345d8:	ldr	r0, [r4, #28]
   345dc:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   345e0:	ldr	r0, [r4, #4]
   345e4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   345e8:	mov	r0, r4
   345ec:	bl	69f0 <free@plt>
   345f0:	mov	r0, #0
   345f4:	add	sp, sp, #8
   345f8:	pop	{r4, r5, r6, pc}
   345fc:	andeq	r8, r3, r0, lsl #5
   34600:	andeq	r9, r3, r4, ror fp
   34604:	muleq	r3, r4, lr
   34608:	push	{r4, r5, r6, lr}
   3460c:	subs	r4, r0, #0
   34610:	sub	sp, sp, #8
   34614:	beq	34820 <blkid_probe_get_size@plt+0x2d308>
   34618:	ldr	r5, [r4, #4]
   3461c:	cmp	r5, #0
   34620:	beq	3471c <blkid_probe_get_size@plt+0x2d204>
   34624:	ldrb	r3, [r4, #16]
   34628:	mov	r6, r1
   3462c:	lsl	r3, r3, #30
   34630:	asrs	r3, r3, #30
   34634:	beq	346ac <blkid_probe_get_size@plt+0x2d194>
   34638:	cmp	r3, #1
   3463c:	bne	348bc <blkid_probe_get_size@plt+0x2d3a4>
   34640:	ldr	r3, [r4, #40]	; 0x28
   34644:	ldr	r0, [r4, #44]	; 0x2c
   34648:	cmp	r3, #0
   3464c:	strne	r0, [r3, #12]
   34650:	ldrne	r0, [r4, #44]	; 0x2c
   34654:	cmp	r0, #0
   34658:	beq	3484c <blkid_probe_get_size@plt+0x2d334>
   3465c:	ldr	r3, [r4, #40]	; 0x28
   34660:	str	r3, [r0, #8]
   34664:	ldrh	r3, [r4, #36]	; 0x24
   34668:	mov	r2, #0
   3466c:	str	r2, [r4, #44]	; 0x2c
   34670:	sub	r3, r3, #16
   34674:	str	r2, [r4, #40]	; 0x28
   34678:	cmp	r3, #9
   3467c:	addls	pc, pc, r3, lsl #2
   34680:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   34684:	b	347ac <blkid_probe_get_size@plt+0x2d294>
   34688:	b	347ac <blkid_probe_get_size@plt+0x2d294>
   3468c:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   34690:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   34694:	b	34790 <blkid_probe_get_size@plt+0x2d278>
   34698:	b	34790 <blkid_probe_get_size@plt+0x2d278>
   3469c:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   346a0:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   346a4:	b	34774 <blkid_probe_get_size@plt+0x2d25c>
   346a8:	b	34774 <blkid_probe_get_size@plt+0x2d25c>
   346ac:	add	r1, r4, #48	; 0x30
   346b0:	ldr	r0, [r5, #80]	; 0x50
   346b4:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   346b8:	ldrd	r2, [r4, #40]	; 0x28
   346bc:	orrs	r3, r2, r3
   346c0:	bne	3480c <blkid_probe_get_size@plt+0x2d2f4>
   346c4:	ldrb	r3, [r4, #16]
   346c8:	ldr	r2, [r4, #24]
   346cc:	mov	r1, #0
   346d0:	cmp	r2, r1
   346d4:	ldr	r0, [r4, #28]
   346d8:	orr	r3, r3, #3
   346dc:	strb	r3, [r4, #16]
   346e0:	str	r1, [r4, #4]
   346e4:	strne	r0, [r2, #28]
   346e8:	ldrne	r0, [r4, #28]
   346ec:	cmp	r0, #0
   346f0:	beq	347bc <blkid_probe_get_size@plt+0x2d2a4>
   346f4:	ldr	r3, [r4, #24]
   346f8:	str	r3, [r0, #24]
   346fc:	ldrb	r2, [r4, #16]
   34700:	mov	r3, #0
   34704:	str	r3, [r4, #28]
   34708:	tst	r2, #4
   3470c:	str	r3, [r4, #24]
   34710:	beq	347fc <blkid_probe_get_size@plt+0x2d2e4>
   34714:	cmp	r6, #0
   34718:	bne	34724 <blkid_probe_get_size@plt+0x2d20c>
   3471c:	add	sp, sp, #8
   34720:	pop	{r4, r5, r6, pc}
   34724:	ldr	r0, [r4]
   34728:	cmp	r0, #0
   3472c:	beq	34890 <blkid_probe_get_size@plt+0x2d378>
   34730:	sub	r1, r0, #1
   34734:	cmp	r1, #0
   34738:	str	r1, [r4]
   3473c:	bne	3471c <blkid_probe_get_size@plt+0x2d204>
   34740:	mov	r0, r4
   34744:	bl	34608 <blkid_probe_get_size@plt+0x2d0f0>
   34748:	ldr	r3, [r4, #12]
   3474c:	cmp	r3, #0
   34750:	beq	3475c <blkid_probe_get_size@plt+0x2d244>
   34754:	ldr	r0, [r4, #8]
   34758:	blx	r3
   3475c:	ldr	r0, [r4, #20]
   34760:	bl	69f0 <free@plt>
   34764:	mov	r0, r4
   34768:	add	sp, sp, #8
   3476c:	pop	{r4, r5, r6, lr}
   34770:	b	69f0 <free@plt>
   34774:	mov	r1, #7
   34778:	mov	r0, r5
   3477c:	bl	2b7f0 <blkid_probe_get_size@plt+0x242d8>
   34780:	mov	r1, #11
   34784:	mov	r0, r5
   34788:	bl	2b7f0 <blkid_probe_get_size@plt+0x242d8>
   3478c:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   34790:	mov	r1, #5
   34794:	mov	r0, r5
   34798:	bl	2b7f0 <blkid_probe_get_size@plt+0x242d8>
   3479c:	mov	r1, #9
   347a0:	mov	r0, r5
   347a4:	bl	2b7f0 <blkid_probe_get_size@plt+0x242d8>
   347a8:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   347ac:	mov	r1, #1
   347b0:	mov	r0, r5
   347b4:	bl	2b7f0 <blkid_probe_get_size@plt+0x242d8>
   347b8:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   347bc:	ldr	r3, [r5, #88]	; 0x58
   347c0:	cmp	r3, r4
   347c4:	ldreq	r3, [r4, #24]
   347c8:	streq	r3, [r5, #88]	; 0x58
   347cc:	beq	346fc <blkid_probe_get_size@plt+0x2d1e4>
   347d0:	ldr	r3, [pc, #276]	; 348ec <blkid_probe_get_size@plt+0x2d3d4>
   347d4:	ldr	r2, [pc, #276]	; 348f0 <blkid_probe_get_size@plt+0x2d3d8>
   347d8:	add	r3, pc, r3
   347dc:	add	r3, r3, #1936	; 0x790
   347e0:	ldr	r1, [pc, #268]	; 348f4 <blkid_probe_get_size@plt+0x2d3dc>
   347e4:	add	r3, r3, #12
   347e8:	str	r3, [sp]
   347ec:	add	r2, pc, r2
   347f0:	mov	r3, #100	; 0x64
   347f4:	add	r1, pc, r1
   347f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   347fc:	mov	r0, r5
   34800:	add	sp, sp, #8
   34804:	pop	{r4, r5, r6, lr}
   34808:	b	344a0 <blkid_probe_get_size@plt+0x2cf88>
   3480c:	add	r2, r4, #56	; 0x38
   34810:	add	r1, r4, #32
   34814:	ldr	r0, [r5, #76]	; 0x4c
   34818:	bl	3f710 <blkid_probe_get_size@plt+0x381f8>
   3481c:	b	346c4 <blkid_probe_get_size@plt+0x2d1ac>
   34820:	ldr	r2, [pc, #208]	; 348f8 <blkid_probe_get_size@plt+0x2d3e0>
   34824:	ldr	r1, [pc, #208]	; 348fc <blkid_probe_get_size@plt+0x2d3e4>
   34828:	add	r2, pc, r2
   3482c:	add	r2, r2, #1936	; 0x790
   34830:	add	r2, r2, #12
   34834:	str	r2, [sp]
   34838:	ldr	r2, [pc, #192]	; 34900 <blkid_probe_get_size@plt+0x2d3e8>
   3483c:	mov	r3, #55	; 0x37
   34840:	add	r2, pc, r2
   34844:	add	r1, pc, r1
   34848:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3484c:	ldr	r2, [r5, #84]	; 0x54
   34850:	add	r3, r4, #32
   34854:	cmp	r2, r3
   34858:	ldreq	r3, [r4, #40]	; 0x28
   3485c:	streq	r3, [r5, #84]	; 0x54
   34860:	beq	34664 <blkid_probe_get_size@plt+0x2d14c>
   34864:	ldr	r3, [pc, #152]	; 34904 <blkid_probe_get_size@plt+0x2d3ec>
   34868:	ldr	r2, [pc, #152]	; 34908 <blkid_probe_get_size@plt+0x2d3f0>
   3486c:	add	r3, pc, r3
   34870:	add	r3, r3, #1936	; 0x790
   34874:	ldr	r1, [pc, #144]	; 3490c <blkid_probe_get_size@plt+0x2d3f4>
   34878:	add	r3, r3, #12
   3487c:	str	r3, [sp]
   34880:	add	r2, pc, r2
   34884:	mov	r3, #71	; 0x47
   34888:	add	r1, pc, r1
   3488c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34890:	ldr	r3, [pc, #120]	; 34910 <blkid_probe_get_size@plt+0x2d3f8>
   34894:	ldr	r2, [pc, #120]	; 34914 <blkid_probe_get_size@plt+0x2d3fc>
   34898:	add	r3, pc, r3
   3489c:	add	r3, r3, #1968	; 0x7b0
   348a0:	ldr	r1, [pc, #112]	; 34918 <blkid_probe_get_size@plt+0x2d400>
   348a4:	add	r3, r3, #4
   348a8:	str	r3, [sp]
   348ac:	add	r2, pc, r2
   348b0:	mov	r3, #120	; 0x78
   348b4:	add	r1, pc, r1
   348b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   348bc:	ldr	r2, [pc, #88]	; 3491c <blkid_probe_get_size@plt+0x2d404>
   348c0:	ldr	r1, [pc, #88]	; 34920 <blkid_probe_get_size@plt+0x2d408>
   348c4:	add	r2, pc, r2
   348c8:	add	r2, r2, #1936	; 0x790
   348cc:	add	r2, r2, #12
   348d0:	str	r2, [sp]
   348d4:	ldr	r2, [pc, #72]	; 34924 <blkid_probe_get_size@plt+0x2d40c>
   348d8:	mov	r3, #95	; 0x5f
   348dc:	add	r2, pc, r2
   348e0:	add	r1, pc, r1
   348e4:	mov	r0, #0
   348e8:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   348ec:	andeq	r8, r3, r0, lsr #32
   348f0:	andeq	r9, r3, ip, ror #24
   348f4:	andeq	r8, r3, ip, lsl lr
   348f8:	ldrdeq	r7, [r3], -r0
   348fc:	andeq	r7, r3, r0, lsl r9
   34900:	andeq	r9, r3, r8, lsl ip
   34904:	andeq	r7, r3, ip, lsl #31
   34908:	ldrdeq	r9, [r3], -r8
   3490c:	andeq	r8, r3, r8, lsl #27
   34910:	andeq	r7, r3, r0, ror #30
   34914:	andeq	r9, r3, ip, lsr #23
   34918:	muleq	r3, ip, r6
   3491c:	andeq	r7, r3, r4, lsr pc
   34920:	andeq	r9, r3, r4, lsr #23
   34924:	andeq	r9, r3, ip, ror fp
   34928:	ldr	r3, [pc, #1044]	; 34d44 <blkid_probe_get_size@plt+0x2d82c>
   3492c:	ldr	r1, [pc, #1044]	; 34d48 <blkid_probe_get_size@plt+0x2d830>
   34930:	add	r3, pc, r3
   34934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34938:	sub	sp, sp, #44	; 0x2c
   3493c:	ldr	r6, [r3, r1]
   34940:	mov	r8, r0
   34944:	mov	r2, #0
   34948:	ldr	r3, [r6]
   3494c:	ldr	r1, [pc, #1016]	; 34d4c <blkid_probe_get_size@plt+0x2d834>
   34950:	mov	r0, #16
   34954:	str	r3, [sp, #36]	; 0x24
   34958:	bl	6fd8 <socket@plt>
   3495c:	cmp	r0, #0
   34960:	blt	34a40 <blkid_probe_get_size@plt+0x2d528>
   34964:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   34968:	mov	r4, r0
   3496c:	cmp	r4, #0
   34970:	blt	34a18 <blkid_probe_get_size@plt+0x2d500>
   34974:	cmp	r8, #0
   34978:	beq	34a58 <blkid_probe_get_size@plt+0x2d540>
   3497c:	mov	r0, #112	; 0x70
   34980:	bl	7230 <malloc@plt>
   34984:	subs	r5, r0, #0
   34988:	beq	34a50 <blkid_probe_get_size@plt+0x2d538>
   3498c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   34990:	mov	r2, #112	; 0x70
   34994:	mov	r1, #0
   34998:	mov	r9, #1
   3499c:	mov	r7, r0
   349a0:	mov	r0, r5
   349a4:	bl	6c84 <memset@plt>
   349a8:	mvn	r1, #0
   349ac:	mov	r2, #16
   349b0:	str	r1, [r5, #4]
   349b4:	str	r1, [r5, #24]
   349b8:	str	r7, [r5, #92]	; 0x5c
   349bc:	str	r9, [r5]
   349c0:	str	r9, [r5, #72]	; 0x48
   349c4:	mov	r3, r9
   349c8:	strh	r2, [r5, #8]
   349cc:	add	r1, r5, #64	; 0x40
   349d0:	add	r0, r5, #60	; 0x3c
   349d4:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   349d8:	cmp	r0, #0
   349dc:	beq	34a90 <blkid_probe_get_size@plt+0x2d578>
   349e0:	add	r3, sp, #20
   349e4:	str	r3, [sp]
   349e8:	mov	sl, #4
   349ec:	add	r3, sp, #16
   349f0:	mov	r2, #38	; 0x26
   349f4:	mov	r1, r9
   349f8:	mov	r0, r4
   349fc:	str	sl, [sp, #20]
   34a00:	bl	69b4 <getsockopt@plt>
   34a04:	subs	r7, r0, #0
   34a08:	bge	34aa0 <blkid_probe_get_size@plt+0x2d588>
   34a0c:	mov	r0, r5
   34a10:	bl	344a0 <blkid_probe_get_size@plt+0x2cf88>
   34a14:	b	34a1c <blkid_probe_get_size@plt+0x2d504>
   34a18:	mov	r7, r4
   34a1c:	mov	r0, r4
   34a20:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   34a24:	ldr	r2, [sp, #36]	; 0x24
   34a28:	ldr	r3, [r6]
   34a2c:	mov	r0, r7
   34a30:	cmp	r2, r3
   34a34:	bne	34d28 <blkid_probe_get_size@plt+0x2d810>
   34a38:	add	sp, sp, #44	; 0x2c
   34a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a40:	bl	732c <__errno_location@plt>
   34a44:	ldr	r4, [r0]
   34a48:	rsb	r4, r4, #0
   34a4c:	b	3496c <blkid_probe_get_size@plt+0x2d454>
   34a50:	mvn	r7, #11
   34a54:	b	34a1c <blkid_probe_get_size@plt+0x2d504>
   34a58:	ldr	r3, [pc, #752]	; 34d50 <blkid_probe_get_size@plt+0x2d838>
   34a5c:	ldr	r2, [pc, #752]	; 34d54 <blkid_probe_get_size@plt+0x2d83c>
   34a60:	add	r3, pc, r3
   34a64:	add	r3, r3, #1984	; 0x7c0
   34a68:	ldr	r1, [pc, #744]	; 34d58 <blkid_probe_get_size@plt+0x2d840>
   34a6c:	add	r3, r3, #12
   34a70:	str	r3, [sp]
   34a74:	mov	r0, r8
   34a78:	mov	r3, #97	; 0x61
   34a7c:	add	r2, pc, r2
   34a80:	add	r1, pc, r1
   34a84:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   34a88:	mvn	r7, #21
   34a8c:	b	34a1c <blkid_probe_get_size@plt+0x2d504>
   34a90:	mov	r0, r5
   34a94:	bl	344a0 <blkid_probe_get_size@plt+0x2cf88>
   34a98:	mvn	r7, #11
   34a9c:	b	34a1c <blkid_probe_get_size@plt+0x2d504>
   34aa0:	ldr	r2, [sp, #16]
   34aa4:	add	r3, sp, #40	; 0x28
   34aa8:	str	r2, [r5, #24]
   34aac:	str	r4, [r5, #4]
   34ab0:	str	r9, [r3, #-16]!
   34ab4:	mov	r2, #3
   34ab8:	str	sl, [sp]
   34abc:	ldr	r1, [pc, #664]	; 34d5c <blkid_probe_get_size@plt+0x2d844>
   34ac0:	mov	r0, r4
   34ac4:	bl	70b0 <setsockopt@plt>
   34ac8:	cmp	r0, #0
   34acc:	blt	34b7c <blkid_probe_get_size@plt+0x2d664>
   34ad0:	mov	r3, #16
   34ad4:	add	r9, r5, #8
   34ad8:	mov	r2, r3
   34adc:	mov	r1, r9
   34ae0:	ldr	r0, [r5, #4]
   34ae4:	str	r3, [sp, #28]
   34ae8:	bl	6ef4 <bind@plt>
   34aec:	cmp	r0, #0
   34af0:	bge	34b20 <blkid_probe_get_size@plt+0x2d608>
   34af4:	bl	732c <__errno_location@plt>
   34af8:	ldr	r7, [r0]
   34afc:	cmp	r7, #22
   34b00:	beq	34b20 <blkid_probe_get_size@plt+0x2d608>
   34b04:	rsb	r7, r7, #0
   34b08:	cmp	r7, #0
   34b0c:	bge	34b6c <blkid_probe_get_size@plt+0x2d654>
   34b10:	mvn	r3, #0
   34b14:	str	r3, [r5, #4]
   34b18:	str	r3, [r5, #24]
   34b1c:	b	34a0c <blkid_probe_get_size@plt+0x2d4f4>
   34b20:	mov	r1, r9
   34b24:	add	r2, sp, #28
   34b28:	ldr	r0, [r5, #4]
   34b2c:	bl	7434 <getsockname@plt>
   34b30:	cmp	r0, #0
   34b34:	bge	34b94 <blkid_probe_get_size@plt+0x2d67c>
   34b38:	bl	732c <__errno_location@plt>
   34b3c:	ldr	r7, [r0]
   34b40:	b	34b04 <blkid_probe_get_size@plt+0x2d5ec>
   34b44:	ldr	r3, [sp, #12]
   34b48:	ldr	r2, [sp, #32]
   34b4c:	add	r3, r3, #1
   34b50:	cmp	r3, r2
   34b54:	str	r3, [sp, #12]
   34b58:	add	r6, r6, #4
   34b5c:	bcc	34c54 <blkid_probe_get_size@plt+0x2d73c>
   34b60:	mov	r6, sl
   34b64:	ldr	r0, [sp, #8]
   34b68:	bl	69f0 <free@plt>
   34b6c:	str	r5, [r8]
   34b70:	mvn	r4, #0
   34b74:	mov	r7, #0
   34b78:	b	34a1c <blkid_probe_get_size@plt+0x2d504>
   34b7c:	bl	732c <__errno_location@plt>
   34b80:	ldr	r7, [r0]
   34b84:	cmp	r7, #0
   34b88:	rsbgt	r7, r7, #0
   34b8c:	ble	34ad0 <blkid_probe_get_size@plt+0x2d5b8>
   34b90:	b	34b10 <blkid_probe_get_size@plt+0x2d5f8>
   34b94:	ldr	r0, [r5, #4]
   34b98:	mov	r9, #0
   34b9c:	cmp	r0, r9
   34ba0:	str	r9, [sp, #32]
   34ba4:	blt	34cec <blkid_probe_get_size@plt+0x2d7d4>
   34ba8:	add	r7, sp, #32
   34bac:	str	r7, [sp]
   34bb0:	mov	r3, r9
   34bb4:	mov	r2, #9
   34bb8:	ldr	r1, [pc, #412]	; 34d5c <blkid_probe_get_size@plt+0x2d844>
   34bbc:	bl	69b4 <getsockopt@plt>
   34bc0:	cmp	r0, #0
   34bc4:	blt	34cb0 <blkid_probe_get_size@plt+0x2d798>
   34bc8:	ldr	sl, [sp, #32]
   34bcc:	cmp	sl, #0
   34bd0:	beq	34b6c <blkid_probe_get_size@plt+0x2d654>
   34bd4:	mov	r1, #4
   34bd8:	mov	r0, sl
   34bdc:	bl	7164 <calloc@plt>
   34be0:	subs	r3, r0, #0
   34be4:	str	r3, [sp, #8]
   34be8:	beq	34d3c <blkid_probe_get_size@plt+0x2d824>
   34bec:	ldr	r0, [r5, #4]
   34bf0:	mov	r2, #9
   34bf4:	str	r7, [sp]
   34bf8:	ldr	r1, [pc, #348]	; 34d5c <blkid_probe_get_size@plt+0x2d844>
   34bfc:	bl	69b4 <getsockopt@plt>
   34c00:	cmp	r0, #0
   34c04:	blt	34d18 <blkid_probe_get_size@plt+0x2d800>
   34c08:	ldr	r3, [sp, #32]
   34c0c:	cmp	sl, r3
   34c10:	bne	34d2c <blkid_probe_get_size@plt+0x2d814>
   34c14:	mov	r2, r9
   34c18:	mov	r1, r9
   34c1c:	add	r0, r5, #28
   34c20:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   34c24:	subs	r7, r0, #0
   34c28:	blt	34ca4 <blkid_probe_get_size@plt+0x2d78c>
   34c2c:	ldr	r3, [sp, #32]
   34c30:	cmp	r3, #0
   34c34:	beq	34b64 <blkid_probe_get_size@plt+0x2d64c>
   34c38:	ldr	sl, [sp, #8]
   34c3c:	mov	r3, r6
   34c40:	mov	fp, #1
   34c44:	mov	r6, sl
   34c48:	mov	r7, r4
   34c4c:	mov	sl, r3
   34c50:	str	r9, [sp, #12]
   34c54:	ldr	r3, [sp, #12]
   34c58:	mov	r9, #0
   34c5c:	lsl	r4, r3, #5
   34c60:	add	r4, r4, #1
   34c64:	b	34c74 <blkid_probe_get_size@plt+0x2d75c>
   34c68:	add	r9, r9, #1
   34c6c:	cmp	r9, #32
   34c70:	beq	34b44 <blkid_probe_get_size@plt+0x2d62c>
   34c74:	ldr	r3, [r6]
   34c78:	ands	r3, r3, fp, lsl r9
   34c7c:	beq	34c68 <blkid_probe_get_size@plt+0x2d750>
   34c80:	mov	r2, #1
   34c84:	add	r1, r4, r9
   34c88:	ldr	r0, [r5, #28]
   34c8c:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   34c90:	cmp	r0, #0
   34c94:	bge	34c68 <blkid_probe_get_size@plt+0x2d750>
   34c98:	mov	r4, r7
   34c9c:	mov	r6, sl
   34ca0:	mov	r7, r0
   34ca4:	ldr	r0, [sp, #8]
   34ca8:	bl	69f0 <free@plt>
   34cac:	b	34b10 <blkid_probe_get_size@plt+0x2d5f8>
   34cb0:	bl	732c <__errno_location@plt>
   34cb4:	ldr	r7, [r0]
   34cb8:	cmp	r7, #92	; 0x5c
   34cbc:	rsbne	r7, r7, #0
   34cc0:	strne	r9, [sp, #8]
   34cc4:	beq	34cdc <blkid_probe_get_size@plt+0x2d7c4>
   34cc8:	ldr	r0, [sp, #8]
   34ccc:	bl	69f0 <free@plt>
   34cd0:	cmp	r7, #0
   34cd4:	bge	34b6c <blkid_probe_get_size@plt+0x2d654>
   34cd8:	b	34b10 <blkid_probe_get_size@plt+0x2d5f8>
   34cdc:	ldrb	r3, [r5, #32]
   34ce0:	orr	r3, r3, #1
   34ce4:	strb	r3, [r5, #32]
   34ce8:	b	34b6c <blkid_probe_get_size@plt+0x2d654>
   34cec:	ldr	r3, [pc, #108]	; 34d60 <blkid_probe_get_size@plt+0x2d848>
   34cf0:	ldr	r2, [pc, #108]	; 34d64 <blkid_probe_get_size@plt+0x2d84c>
   34cf4:	add	r3, pc, r3
   34cf8:	ldr	r1, [pc, #104]	; 34d68 <blkid_probe_get_size@plt+0x2d850>
   34cfc:	add	r3, r3, #2016	; 0x7e0
   34d00:	str	r3, [sp]
   34d04:	mov	r0, r9
   34d08:	mov	r3, #38	; 0x26
   34d0c:	add	r2, pc, r2
   34d10:	add	r1, pc, r1
   34d14:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34d18:	bl	732c <__errno_location@plt>
   34d1c:	ldr	r7, [r0]
   34d20:	rsb	r7, r7, #0
   34d24:	b	34cc8 <blkid_probe_get_size@plt+0x2d7b0>
   34d28:	bl	6fb4 <__stack_chk_fail@plt>
   34d2c:	ldr	r0, [sp, #8]
   34d30:	bl	69f0 <free@plt>
   34d34:	mvn	r7, #4
   34d38:	b	34b10 <blkid_probe_get_size@plt+0x2d5f8>
   34d3c:	mvn	r7, #11
   34d40:	b	34b10 <blkid_probe_get_size@plt+0x2d5f8>
   34d44:	andeq	r3, r6, r8, lsr r2
   34d48:	andeq	r0, r0, ip, lsr r4
   34d4c:	andeq	r0, r8, r3, lsl #16
   34d50:	muleq	r3, r8, sp
   34d54:	andeq	r9, r3, r8, lsr #19
   34d58:	andeq	r7, r3, r4, asr #11
   34d5c:	andeq	r0, r0, lr, lsl #2
   34d60:	andeq	r7, r3, r4, lsl #22
   34d64:	muleq	r3, r0, r8
   34d68:	andeq	r8, r3, r8, asr #17
   34d6c:	ldr	r3, [pc, #256]	; 34e74 <blkid_probe_get_size@plt+0x2d95c>
   34d70:	ldr	ip, [pc, #256]	; 34e78 <blkid_probe_get_size@plt+0x2d960>
   34d74:	add	r3, pc, r3
   34d78:	push	{r4, r5, r6, r7, r8, lr}
   34d7c:	sub	sp, sp, #16
   34d80:	ldr	r4, [r3, ip]
   34d84:	mov	lr, #0
   34d88:	subs	r7, r1, #0
   34d8c:	ldr	r3, [r4]
   34d90:	str	lr, [sp, #8]
   34d94:	str	r3, [sp, #12]
   34d98:	ble	34e40 <blkid_probe_get_size@plt+0x2d928>
   34d9c:	ldr	r3, [r0]
   34da0:	mov	r8, r2
   34da4:	cmp	r3, #0
   34da8:	mov	r6, r0
   34dac:	beq	34e2c <blkid_probe_get_size@plt+0x2d914>
   34db0:	mov	r2, r7
   34db4:	mov	r0, r3
   34db8:	add	r1, sp, #8
   34dbc:	bl	4d03c <blkid_probe_get_size@plt+0x45b24>
   34dc0:	subs	r5, r0, #0
   34dc4:	bge	34df4 <blkid_probe_get_size@plt+0x2d8dc>
   34dc8:	ldr	r0, [sp, #8]
   34dcc:	cmp	r0, #0
   34dd0:	beq	34dd8 <blkid_probe_get_size@plt+0x2d8c0>
   34dd4:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   34dd8:	ldr	r2, [sp, #12]
   34ddc:	ldr	r3, [r4]
   34de0:	mov	r0, r5
   34de4:	cmp	r2, r3
   34de8:	bne	34e70 <blkid_probe_get_size@plt+0x2d958>
   34dec:	add	sp, sp, #16
   34df0:	pop	{r4, r5, r6, r7, r8, pc}
   34df4:	mov	r2, r8
   34df8:	mov	r1, #3
   34dfc:	ldr	r0, [sp, #8]
   34e00:	bl	2f9d8 <blkid_probe_get_size@plt+0x284c0>
   34e04:	subs	r5, r0, #0
   34e08:	blt	34dc8 <blkid_probe_get_size@plt+0x2d8b0>
   34e0c:	ldr	r0, [r6]
   34e10:	ldr	r1, [sp, #8]
   34e14:	bl	4bfa8 <blkid_probe_get_size@plt+0x44a90>
   34e18:	and	r5, r0, r0, asr #31
   34e1c:	ldr	r0, [sp, #8]
   34e20:	cmp	r0, #0
   34e24:	bne	34dd4 <blkid_probe_get_size@plt+0x2d8bc>
   34e28:	b	34dd8 <blkid_probe_get_size@plt+0x2d8c0>
   34e2c:	bl	34928 <blkid_probe_get_size@plt+0x2d410>
   34e30:	subs	r5, r0, #0
   34e34:	blt	34dc8 <blkid_probe_get_size@plt+0x2d8b0>
   34e38:	ldr	r3, [r6]
   34e3c:	b	34db0 <blkid_probe_get_size@plt+0x2d898>
   34e40:	ldr	r3, [pc, #52]	; 34e7c <blkid_probe_get_size@plt+0x2d964>
   34e44:	ldr	r2, [pc, #52]	; 34e80 <blkid_probe_get_size@plt+0x2d968>
   34e48:	add	r3, pc, r3
   34e4c:	add	r3, r3, #2032	; 0x7f0
   34e50:	ldr	r1, [pc, #44]	; 34e84 <blkid_probe_get_size@plt+0x2d96c>
   34e54:	add	r3, r3, #8
   34e58:	str	r3, [sp]
   34e5c:	mov	r0, lr
   34e60:	mov	r3, #13
   34e64:	add	r2, pc, r2
   34e68:	add	r1, pc, r1
   34e6c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   34e70:	bl	6fb4 <__stack_chk_fail@plt>
   34e74:	strdeq	r2, [r6], -r4
   34e78:	andeq	r0, r0, ip, lsr r4
   34e7c:			; <UNDEFINED> instruction: 0x000379b0
   34e80:	andeq	r9, r3, r8, lsr r6
   34e84:	andeq	r9, r3, r0, ror #12
   34e88:	ldr	r3, [pc, #224]	; 34f70 <blkid_probe_get_size@plt+0x2da58>
   34e8c:	ldr	ip, [pc, #224]	; 34f74 <blkid_probe_get_size@plt+0x2da5c>
   34e90:	add	r3, pc, r3
   34e94:	push	{r4, r5, r6, r7, lr}
   34e98:	sub	sp, sp, #28
   34e9c:	ldr	r5, [r3, ip]
   34ea0:	subs	r7, r0, #0
   34ea4:	ldr	r3, [r5]
   34ea8:	str	r3, [sp, #20]
   34eac:	beq	34f30 <blkid_probe_get_size@plt+0x2da18>
   34eb0:	ldrb	r3, [r7, #128]	; 0x80
   34eb4:	cmp	r3, #0
   34eb8:	bne	34f64 <blkid_probe_get_size@plt+0x2da4c>
   34ebc:	mov	r6, r1
   34ec0:	mov	r4, r2
   34ec4:	add	r3, sp, #12
   34ec8:	add	r2, sp, #16
   34ecc:	add	r1, r7, #120	; 0x78
   34ed0:	ldr	r0, [r7, #116]	; 0x74
   34ed4:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   34ed8:	ldr	r0, [sp, #12]
   34edc:	cmp	r0, #0
   34ee0:	beq	34f18 <blkid_probe_get_size@plt+0x2da00>
   34ee4:	ldr	r2, [sp, #16]
   34ee8:	str	r0, [r6]
   34eec:	ldr	r1, [r7, #112]	; 0x70
   34ef0:	ldrb	r0, [r2, #9]
   34ef4:	ldrb	r3, [r2, #8]
   34ef8:	ldrb	ip, [r2, #10]
   34efc:	ldrb	r2, [r2, #11]
   34f00:	orr	r3, r3, r0, lsl #8
   34f04:	mov	r0, #1
   34f08:	orr	r3, r3, ip, lsl #16
   34f0c:	orr	r3, r3, r2, lsl #24
   34f10:	add	r3, r1, r3
   34f14:	str	r3, [r4]
   34f18:	ldr	r2, [sp, #20]
   34f1c:	ldr	r3, [r5]
   34f20:	cmp	r2, r3
   34f24:	bne	34f6c <blkid_probe_get_size@plt+0x2da54>
   34f28:	add	sp, sp, #28
   34f2c:	pop	{r4, r5, r6, r7, pc}
   34f30:	ldr	r2, [pc, #64]	; 34f78 <blkid_probe_get_size@plt+0x2da60>
   34f34:	ldr	r1, [pc, #64]	; 34f7c <blkid_probe_get_size@plt+0x2da64>
   34f38:	add	r2, pc, r2
   34f3c:	add	r2, r2, #2048	; 0x800
   34f40:	add	r2, r2, #12
   34f44:	str	r2, [sp]
   34f48:	ldr	r2, [pc, #48]	; 34f80 <blkid_probe_get_size@plt+0x2da68>
   34f4c:	ldr	r3, [pc, #48]	; 34f84 <blkid_probe_get_size@plt+0x2da6c>
   34f50:	add	r2, pc, r2
   34f54:	add	r1, pc, r1
   34f58:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   34f5c:	mvn	r0, #21
   34f60:	b	34f18 <blkid_probe_get_size@plt+0x2da00>
   34f64:	mvn	r0, #10
   34f68:	b	34f18 <blkid_probe_get_size@plt+0x2da00>
   34f6c:	bl	6fb4 <__stack_chk_fail@plt>
   34f70:	ldrdeq	r2, [r6], -r8
   34f74:	andeq	r0, r0, ip, lsr r4
   34f78:	andeq	r7, r3, r0, asr #17
   34f7c:	andeq	r4, r3, r8, asr #7
   34f80:	andeq	r8, r3, r4, lsr r5
   34f84:	andeq	r0, r0, r5, asr #3
   34f88:	push	{r4, r5, lr}
   34f8c:	subs	r4, r0, #0
   34f90:	sub	sp, sp, #12
   34f94:	beq	34ff8 <blkid_probe_get_size@plt+0x2dae0>
   34f98:	ldr	r0, [r4, #4]
   34f9c:	cmp	r0, #0
   34fa0:	beq	3502c <blkid_probe_get_size@plt+0x2db14>
   34fa4:	cmp	r1, #0
   34fa8:	mov	r5, r1
   34fac:	beq	3505c <blkid_probe_get_size@plt+0x2db44>
   34fb0:	mov	r2, #0
   34fb4:	mov	r1, r2
   34fb8:	ldr	r0, [r4, #116]	; 0x74
   34fbc:	bl	44740 <blkid_probe_get_size@plt+0x3d228>
   34fc0:	mov	r3, #1
   34fc4:	mov	r1, r5
   34fc8:	strb	r3, [r4, #128]	; 0x80
   34fcc:	mov	r0, r4
   34fd0:	bl	2c228 <blkid_probe_get_size@plt+0x24d10>
   34fd4:	cmp	r0, #0
   34fd8:	blt	34ff0 <blkid_probe_get_size@plt+0x2dad8>
   34fdc:	mov	r3, #0
   34fe0:	mvn	r2, #1
   34fe4:	mov	r0, r3
   34fe8:	strb	r3, [r4, #128]	; 0x80
   34fec:	strd	r2, [r4, #120]	; 0x78
   34ff0:	add	sp, sp, #12
   34ff4:	pop	{r4, r5, pc}
   34ff8:	ldr	r2, [pc, #144]	; 35090 <blkid_probe_get_size@plt+0x2db78>
   34ffc:	ldr	r1, [pc, #144]	; 35094 <blkid_probe_get_size@plt+0x2db7c>
   35000:	add	r2, pc, r2
   35004:	add	r2, r2, #2080	; 0x820
   35008:	str	r2, [sp]
   3500c:	ldr	r2, [pc, #132]	; 35098 <blkid_probe_get_size@plt+0x2db80>
   35010:	ldr	r3, [pc, #132]	; 3509c <blkid_probe_get_size@plt+0x2db84>
   35014:	add	r2, pc, r2
   35018:	add	r1, pc, r1
   3501c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35020:	mvn	r0, #21
   35024:	add	sp, sp, #12
   35028:	pop	{r4, r5, pc}
   3502c:	ldr	r3, [pc, #108]	; 350a0 <blkid_probe_get_size@plt+0x2db88>
   35030:	ldr	r2, [pc, #108]	; 350a4 <blkid_probe_get_size@plt+0x2db8c>
   35034:	add	r3, pc, r3
   35038:	ldr	r1, [pc, #104]	; 350a8 <blkid_probe_get_size@plt+0x2db90>
   3503c:	add	r3, r3, #2080	; 0x820
   35040:	str	r3, [sp]
   35044:	add	r2, pc, r2
   35048:	mov	r3, #436	; 0x1b4
   3504c:	add	r1, pc, r1
   35050:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35054:	mvn	r0, #21
   35058:	b	34ff0 <blkid_probe_get_size@plt+0x2dad8>
   3505c:	ldr	r3, [pc, #72]	; 350ac <blkid_probe_get_size@plt+0x2db94>
   35060:	mov	r0, r1
   35064:	add	r3, pc, r3
   35068:	ldr	r2, [pc, #64]	; 350b0 <blkid_probe_get_size@plt+0x2db98>
   3506c:	ldr	r1, [pc, #64]	; 350b4 <blkid_probe_get_size@plt+0x2db9c>
   35070:	add	r3, r3, #2080	; 0x820
   35074:	str	r3, [sp]
   35078:	add	r2, pc, r2
   3507c:	ldr	r3, [pc, #52]	; 350b8 <blkid_probe_get_size@plt+0x2dba0>
   35080:	add	r1, pc, r1
   35084:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35088:	mvn	r0, #21
   3508c:	b	34ff0 <blkid_probe_get_size@plt+0x2dad8>
   35090:	strdeq	r7, [r3], -r8
   35094:	andeq	r4, r3, r4, lsl #6
   35098:	andeq	r8, r3, r0, ror r4
   3509c:			; <UNDEFINED> instruction: 0x000001b3
   350a0:	andeq	r7, r3, r4, asr #15
   350a4:	andeq	r8, r3, r0, asr #8
   350a8:	andeq	r9, r3, r8, lsl #9
   350ac:	muleq	r3, r4, r7
   350b0:	andeq	r8, r3, ip, lsl #8
   350b4:	andeq	r4, r3, ip, asr #6
   350b8:			; <UNDEFINED> instruction: 0x000001b5
   350bc:	push	{r4, lr}
   350c0:	subs	r4, r0, #0
   350c4:	beq	35120 <blkid_probe_get_size@plt+0x2dc08>
   350c8:	mcr	15, 0, r0, cr7, cr10, {5}
   350cc:	ldrex	r3, [r4]
   350d0:	sub	r3, r3, #1
   350d4:	strex	r2, r3, [r4]
   350d8:	cmp	r2, #0
   350dc:	bne	350cc <blkid_probe_get_size@plt+0x2dbb4>
   350e0:	cmp	r3, #0
   350e4:	mcr	15, 0, r0, cr7, cr10, {5}
   350e8:	bne	35120 <blkid_probe_get_size@plt+0x2dc08>
   350ec:	ldr	r0, [r4, #112]	; 0x70
   350f0:	cmp	r0, #0
   350f4:	beq	35100 <blkid_probe_get_size@plt+0x2dbe8>
   350f8:	ldr	r1, [r4, #56]	; 0x38
   350fc:	bl	726c <munmap@plt>
   35100:	ldr	r0, [r4, #4]
   35104:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   35108:	mov	r2, #0
   3510c:	mov	r1, r2
   35110:	ldr	r0, [r4, #116]	; 0x74
   35114:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   35118:	mov	r0, r4
   3511c:	bl	69f0 <free@plt>
   35120:	mov	r0, #0
   35124:	pop	{r4, pc}
   35128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3512c:	mov	r8, r0
   35130:	ldr	r5, [pc, #1564]	; 35754 <blkid_probe_get_size@plt+0x2e23c>
   35134:	ldr	r3, [pc, #1564]	; 35758 <blkid_probe_get_size@plt+0x2e240>
   35138:	ldr	r1, [pc, #1564]	; 3575c <blkid_probe_get_size@plt+0x2e244>
   3513c:	add	r5, pc, r5
   35140:	add	r3, pc, r3
   35144:	add	r2, r5, #2208	; 0x8a0
   35148:	add	r2, r2, #12
   3514c:	ldr	r7, [r3, r1]
   35150:	sub	sp, sp, #52	; 0x34
   35154:	ldm	r2, {r0, r1}
   35158:	add	r4, sp, #36	; 0x24
   3515c:	ldr	r3, [r7]
   35160:	stm	r4, {r0, r1}
   35164:	mov	r1, #136	; 0x88
   35168:	mov	r0, #1
   3516c:	str	r3, [sp, #44]	; 0x2c
   35170:	bl	7164 <calloc@plt>
   35174:	subs	r6, r0, #0
   35178:	mvneq	r4, #11
   3517c:	beq	351e8 <blkid_probe_get_size@plt+0x2dcd0>
   35180:	ldr	r9, [pc, #1496]	; 35760 <blkid_probe_get_size@plt+0x2e248>
   35184:	add	r5, r5, #2096	; 0x830
   35188:	add	r9, pc, r9
   3518c:	mov	r3, #1
   35190:	str	r3, [r6]
   35194:	mov	r1, r9
   35198:	mov	r0, r5
   3519c:	bl	738c <fopen64@plt>
   351a0:	cmp	r0, #0
   351a4:	str	r0, [r6, #4]
   351a8:	bne	352bc <blkid_probe_get_size@plt+0x2dda4>
   351ac:	bl	732c <__errno_location@plt>
   351b0:	ldr	r1, [r0]
   351b4:	cmp	r1, #2
   351b8:	beq	35244 <blkid_probe_get_size@plt+0x2dd2c>
   351bc:	ldr	r3, [pc, #1440]	; 35764 <blkid_probe_get_size@plt+0x2e24c>
   351c0:	add	r3, pc, r3
   351c4:	ldr	r3, [r3]
   351c8:	cmp	r3, #6
   351cc:	bgt	35204 <blkid_probe_get_size@plt+0x2dcec>
   351d0:	eor	r4, r1, r1, asr #31
   351d4:	sub	r4, r4, r1, asr #31
   351d8:	uxtb	r4, r4
   351dc:	rsb	r4, r4, #0
   351e0:	mov	r0, r6
   351e4:	bl	350bc <blkid_probe_get_size@plt+0x2dba4>
   351e8:	ldr	r2, [sp, #44]	; 0x2c
   351ec:	ldr	r3, [r7]
   351f0:	mov	r0, r4
   351f4:	cmp	r2, r3
   351f8:	bne	354d0 <blkid_probe_get_size@plt+0x2dfb8>
   351fc:	add	sp, sp, #52	; 0x34
   35200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35204:	ldr	r3, [pc, #1372]	; 35768 <blkid_probe_get_size@plt+0x2e250>
   35208:	ldr	r2, [pc, #1372]	; 3576c <blkid_probe_get_size@plt+0x2e254>
   3520c:	add	r3, pc, r3
   35210:	add	r2, pc, r2
   35214:	str	r2, [sp, #4]
   35218:	add	r3, r3, #2224	; 0x8b0
   3521c:	ldr	r2, [pc, #1356]	; 35770 <blkid_probe_get_size@plt+0x2e258>
   35220:	add	r3, r3, #4
   35224:	str	r3, [sp]
   35228:	str	r5, [sp, #8]
   3522c:	ldr	r3, [pc, #1344]	; 35774 <blkid_probe_get_size@plt+0x2e25c>
   35230:	add	r2, pc, r2
   35234:	mov	r0, #7
   35238:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3523c:	mov	r4, r0
   35240:	b	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   35244:	mov	r0, r5
   35248:	bl	723c <strlen@plt>
   3524c:	add	r0, r0, #1
   35250:	adds	r5, r5, r0
   35254:	beq	35264 <blkid_probe_get_size@plt+0x2dd4c>
   35258:	ldrb	r3, [r5]
   3525c:	cmp	r3, #0
   35260:	bne	35194 <blkid_probe_get_size@plt+0x2dc7c>
   35264:	ldr	r3, [pc, #1292]	; 35778 <blkid_probe_get_size@plt+0x2e260>
   35268:	add	r3, pc, r3
   3526c:	ldr	r3, [r3]
   35270:	cmp	r3, #6
   35274:	mvnle	r4, #1
   35278:	ble	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   3527c:	ldr	r3, [pc, #1272]	; 3577c <blkid_probe_get_size@plt+0x2e264>
   35280:	ldr	r2, [pc, #1272]	; 35780 <blkid_probe_get_size@plt+0x2e268>
   35284:	add	r3, pc, r3
   35288:	add	r2, pc, r2
   3528c:	str	r2, [sp, #4]
   35290:	add	r3, r3, #2224	; 0x8b0
   35294:	ldr	r2, [pc, #1256]	; 35784 <blkid_probe_get_size@plt+0x2e26c>
   35298:	add	r3, r3, #4
   3529c:	str	r3, [sp]
   352a0:	add	r2, pc, r2
   352a4:	ldr	r3, [pc, #1244]	; 35788 <blkid_probe_get_size@plt+0x2e270>
   352a8:	mov	r1, #0
   352ac:	mov	r0, #7
   352b0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   352b4:	mvn	r4, #1
   352b8:	b	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   352bc:	bl	6f90 <fileno@plt>
   352c0:	add	r2, r6, #8
   352c4:	mov	r1, r0
   352c8:	mov	r0, #3
   352cc:	bl	6c90 <__fxstat64@plt>
   352d0:	cmp	r0, #0
   352d4:	blt	352e4 <blkid_probe_get_size@plt+0x2ddcc>
   352d8:	ldr	r9, [r6, #56]	; 0x38
   352dc:	cmp	r9, #79	; 0x4f
   352e0:	bhi	35340 <blkid_probe_get_size@plt+0x2de28>
   352e4:	bl	732c <__errno_location@plt>
   352e8:	ldr	r3, [pc, #1180]	; 3578c <blkid_probe_get_size@plt+0x2e274>
   352ec:	add	r3, pc, r3
   352f0:	ldr	r3, [r3]
   352f4:	cmp	r3, #6
   352f8:	ldr	r1, [r0]
   352fc:	ble	351d0 <blkid_probe_get_size@plt+0x2dcb8>
   35300:	ldr	r3, [pc, #1160]	; 35790 <blkid_probe_get_size@plt+0x2e278>
   35304:	ldr	r2, [pc, #1160]	; 35794 <blkid_probe_get_size@plt+0x2e27c>
   35308:	add	r3, pc, r3
   3530c:	add	r2, pc, r2
   35310:	str	r2, [sp, #4]
   35314:	add	r3, r3, #2224	; 0x8b0
   35318:	ldr	r2, [pc, #1144]	; 35798 <blkid_probe_get_size@plt+0x2e280>
   3531c:	add	r3, r3, #4
   35320:	str	r3, [sp]
   35324:	str	r5, [sp, #8]
   35328:	ldr	r3, [pc, #1132]	; 3579c <blkid_probe_get_size@plt+0x2e284>
   3532c:	add	r2, pc, r2
   35330:	mov	r0, #7
   35334:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35338:	mov	r4, r0
   3533c:	b	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   35340:	ldr	r0, [r6, #4]
   35344:	bl	6f90 <fileno@plt>
   35348:	mov	sl, #0
   3534c:	mov	fp, #0
   35350:	mov	r3, #1
   35354:	mov	r1, r9
   35358:	strd	sl, [sp, #8]
   3535c:	mov	r2, r3
   35360:	str	r0, [sp]
   35364:	mov	r0, #0
   35368:	bl	6d14 <mmap64@plt>
   3536c:	cmn	r0, #1
   35370:	mov	r9, r0
   35374:	str	r0, [r6, #112]	; 0x70
   35378:	beq	3544c <blkid_probe_get_size@plt+0x2df34>
   3537c:	mov	r1, r4
   35380:	mov	r2, #8
   35384:	bl	7398 <memcmp@plt>
   35388:	ldr	sl, [pc, #1040]	; 357a0 <blkid_probe_get_size@plt+0x2e288>
   3538c:	add	sl, pc, sl
   35390:	ldr	r3, [sl]
   35394:	str	r3, [sp, #20]
   35398:	subs	r4, r0, #0
   3539c:	bne	353f8 <blkid_probe_get_size@plt+0x2dee0>
   353a0:	ldrb	r3, [r9, #17]
   353a4:	ldrb	r2, [r9, #16]
   353a8:	ldrb	fp, [r9, #18]
   353ac:	ldrb	lr, [r9, #21]
   353b0:	ldrb	r0, [r9, #19]
   353b4:	ldrb	ip, [r9, #22]
   353b8:	orr	r2, r2, r3, lsl #8
   353bc:	ldrb	r3, [r9, #20]
   353c0:	ldrb	r9, [r9, #23]
   353c4:	orr	r2, r2, fp, lsl #16
   353c8:	orr	r3, r3, lr, lsl #8
   353cc:	orr	ip, r3, ip, lsl #16
   353d0:	orr	r3, r2, r0, lsl #24
   353d4:	str	r3, [sp, #24]
   353d8:	orr	r3, ip, r9, lsl #24
   353dc:	str	r3, [sp, #28]
   353e0:	ldrd	r0, [sp, #24]
   353e4:	ldrd	r2, [r6, #56]	; 0x38
   353e8:	mov	r3, #0
   353ec:	cmp	r3, r1
   353f0:	cmpeq	r2, r0
   353f4:	beq	354a8 <blkid_probe_get_size@plt+0x2df90>
   353f8:	ldr	r3, [sp, #20]
   353fc:	cmp	r3, #6
   35400:	mvnle	r4, #21
   35404:	ble	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   35408:	ldr	r3, [pc, #916]	; 357a4 <blkid_probe_get_size@plt+0x2e28c>
   3540c:	ldr	r2, [pc, #916]	; 357a8 <blkid_probe_get_size@plt+0x2e290>
   35410:	add	r3, pc, r3
   35414:	add	r2, pc, r2
   35418:	str	r2, [sp, #4]
   3541c:	add	r3, r3, #2224	; 0x8b0
   35420:	ldr	r2, [pc, #900]	; 357ac <blkid_probe_get_size@plt+0x2e294>
   35424:	add	r3, r3, #4
   35428:	str	r3, [sp]
   3542c:	str	r5, [sp, #8]
   35430:	ldr	r3, [pc, #888]	; 357b0 <blkid_probe_get_size@plt+0x2e298>
   35434:	add	r2, pc, r2
   35438:	mov	r1, #0
   3543c:	mov	r0, #7
   35440:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35444:	mvn	r4, #21
   35448:	b	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   3544c:	bl	732c <__errno_location@plt>
   35450:	ldr	r3, [pc, #860]	; 357b4 <blkid_probe_get_size@plt+0x2e29c>
   35454:	add	r3, pc, r3
   35458:	ldr	r3, [r3]
   3545c:	cmp	r3, #6
   35460:	ldr	r1, [r0]
   35464:	ble	351d0 <blkid_probe_get_size@plt+0x2dcb8>
   35468:	ldr	r3, [pc, #840]	; 357b8 <blkid_probe_get_size@plt+0x2e2a0>
   3546c:	ldr	r2, [pc, #840]	; 357bc <blkid_probe_get_size@plt+0x2e2a4>
   35470:	add	r3, pc, r3
   35474:	add	r2, pc, r2
   35478:	str	r2, [sp, #4]
   3547c:	add	r3, r3, #2224	; 0x8b0
   35480:	ldr	r2, [pc, #824]	; 357c0 <blkid_probe_get_size@plt+0x2e2a8>
   35484:	add	r3, r3, #4
   35488:	str	r3, [sp]
   3548c:	str	r5, [sp, #8]
   35490:	ldr	r3, [pc, #812]	; 357c4 <blkid_probe_get_size@plt+0x2e2ac>
   35494:	add	r2, pc, r2
   35498:	mov	r0, #7
   3549c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   354a0:	mov	r4, r0
   354a4:	b	351e0 <blkid_probe_get_size@plt+0x2dcc8>
   354a8:	ldr	r3, [sp, #20]
   354ac:	cmp	r3, #6
   354b0:	bgt	355e4 <blkid_probe_get_size@plt+0x2e0cc>
   354b4:	ldr	r3, [pc, #780]	; 357c8 <blkid_probe_get_size@plt+0x2e2b0>
   354b8:	add	r3, pc, r3
   354bc:	ldr	r3, [r3]
   354c0:	cmp	r3, #6
   354c4:	bgt	354d4 <blkid_probe_get_size@plt+0x2dfbc>
   354c8:	str	r6, [r8]
   354cc:	b	351e8 <blkid_probe_get_size@plt+0x2dcd0>
   354d0:	bl	6fb4 <__stack_chk_fail@plt>
   354d4:	ldr	r3, [r6, #112]	; 0x70
   354d8:	ldr	r2, [pc, #748]	; 357cc <blkid_probe_get_size@plt+0x2e2b4>
   354dc:	ldrb	r5, [r3, #73]	; 0x49
   354e0:	ldrb	lr, [r3, #77]	; 0x4d
   354e4:	ldrb	ip, [r3, #74]	; 0x4a
   354e8:	ldrb	r0, [r3, #72]	; 0x48
   354ec:	ldrb	r1, [r3, #76]	; 0x4c
   354f0:	add	r2, pc, r2
   354f4:	orr	r0, r0, r5, lsl #8
   354f8:	ldrb	r5, [r3, #78]	; 0x4e
   354fc:	orr	r1, r1, lr, lsl #8
   35500:	orr	r0, r0, ip, lsl #16
   35504:	ldrb	lr, [r3, #79]	; 0x4f
   35508:	ldrb	ip, [r3, #75]	; 0x4b
   3550c:	orr	r1, r1, r5, lsl #16
   35510:	add	r3, r2, #2224	; 0x8b0
   35514:	orr	r2, r1, lr, lsl #24
   35518:	orr	r0, r0, ip, lsl #24
   3551c:	ldr	ip, [pc, #684]	; 357d0 <blkid_probe_get_size@plt+0x2e2b8>
   35520:	str	r2, [sp, #12]
   35524:	ldr	r2, [pc, #680]	; 357d4 <blkid_probe_get_size@plt+0x2e2bc>
   35528:	add	r3, r3, #4
   3552c:	add	ip, pc, ip
   35530:	str	r0, [sp, #8]
   35534:	str	r3, [sp]
   35538:	str	ip, [sp, #4]
   3553c:	ldr	r3, [pc, #660]	; 357d8 <blkid_probe_get_size@plt+0x2e2c0>
   35540:	add	r2, pc, r2
   35544:	mov	r1, #0
   35548:	mov	r0, #7
   3554c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35550:	ldr	r3, [pc, #644]	; 357dc <blkid_probe_get_size@plt+0x2e2c4>
   35554:	add	r3, pc, r3
   35558:	ldr	r3, [r3]
   3555c:	cmp	r3, #6
   35560:	ble	354c8 <blkid_probe_get_size@plt+0x2dfb0>
   35564:	ldr	r3, [r6, #112]	; 0x70
   35568:	ldr	r2, [pc, #624]	; 357e0 <blkid_probe_get_size@plt+0x2e2c8>
   3556c:	ldrb	r5, [r3, #65]	; 0x41
   35570:	ldrb	lr, [r3, #69]	; 0x45
   35574:	ldrb	ip, [r3, #66]	; 0x42
   35578:	ldrb	r0, [r3, #64]	; 0x40
   3557c:	ldrb	r1, [r3, #68]	; 0x44
   35580:	add	r2, pc, r2
   35584:	orr	r0, r0, r5, lsl #8
   35588:	ldrb	r5, [r3, #70]	; 0x46
   3558c:	orr	r1, r1, lr, lsl #8
   35590:	orr	r0, r0, ip, lsl #16
   35594:	ldrb	lr, [r3, #71]	; 0x47
   35598:	ldrb	ip, [r3, #67]	; 0x43
   3559c:	orr	r1, r1, r5, lsl #16
   355a0:	add	r3, r2, #2224	; 0x8b0
   355a4:	orr	r2, r1, lr, lsl #24
   355a8:	orr	r0, r0, ip, lsl #24
   355ac:	ldr	ip, [pc, #560]	; 357e4 <blkid_probe_get_size@plt+0x2e2cc>
   355b0:	str	r2, [sp, #12]
   355b4:	ldr	r2, [pc, #556]	; 357e8 <blkid_probe_get_size@plt+0x2e2d0>
   355b8:	add	ip, pc, ip
   355bc:	add	r3, r3, #4
   355c0:	str	r0, [sp, #8]
   355c4:	str	r3, [sp]
   355c8:	str	ip, [sp, #4]
   355cc:	mov	r3, #356	; 0x164
   355d0:	add	r2, pc, r2
   355d4:	mov	r1, #0
   355d8:	mov	r0, #7
   355dc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   355e0:	b	354c8 <blkid_probe_get_size@plt+0x2dfb0>
   355e4:	ldr	r5, [pc, #512]	; 357ec <blkid_probe_get_size@plt+0x2e2d4>
   355e8:	ldr	r9, [pc, #512]	; 357f0 <blkid_probe_get_size@plt+0x2e2d8>
   355ec:	add	r5, pc, r5
   355f0:	ldr	r3, [pc, #508]	; 357f4 <blkid_probe_get_size@plt+0x2e2dc>
   355f4:	add	r5, r5, #2224	; 0x8b0
   355f8:	add	r3, pc, r3
   355fc:	add	r9, pc, r9
   35600:	add	r5, r5, #4
   35604:	str	r3, [sp, #4]
   35608:	str	r5, [sp]
   3560c:	ldr	r3, [pc, #484]	; 357f8 <blkid_probe_get_size@plt+0x2e2e0>
   35610:	mov	r2, r9
   35614:	mov	r1, r4
   35618:	mov	r0, #7
   3561c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35620:	ldr	r3, [sl]
   35624:	cmp	r3, #6
   35628:	ble	35550 <blkid_probe_get_size@plt+0x2e038>
   3562c:	ldr	r3, [r6, #112]	; 0x70
   35630:	ldr	r0, [pc, #452]	; 357fc <blkid_probe_get_size@plt+0x2e2e4>
   35634:	ldrb	fp, [r3, #9]
   35638:	ldrb	lr, [r3, #13]
   3563c:	ldrb	ip, [r3, #10]
   35640:	ldrb	r1, [r3, #8]
   35644:	ldrb	r2, [r3, #12]
   35648:	add	r0, pc, r0
   3564c:	orr	r1, r1, fp, lsl #8
   35650:	ldrb	fp, [r3, #14]
   35654:	orr	r2, r2, lr, lsl #8
   35658:	orr	r1, r1, ip, lsl #16
   3565c:	ldrb	lr, [r3, #11]
   35660:	ldrb	ip, [r3, #15]
   35664:	orr	r3, r2, fp, lsl #16
   35668:	str	r0, [sp, #4]
   3566c:	orr	r2, r1, lr, lsl #24
   35670:	orr	r3, r3, ip, lsl #24
   35674:	str	r5, [sp]
   35678:	strd	r2, [sp, #8]
   3567c:	mov	r1, r4
   35680:	mov	r3, #352	; 0x160
   35684:	mov	r2, r9
   35688:	mov	r0, #7
   3568c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35690:	ldr	r3, [sl]
   35694:	cmp	r3, #6
   35698:	ble	354c8 <blkid_probe_get_size@plt+0x2dfb0>
   3569c:	ldrd	r0, [r6, #56]	; 0x38
   356a0:	ldr	r3, [pc, #344]	; 35800 <blkid_probe_get_size@plt+0x2e2e8>
   356a4:	mov	r2, r9
   356a8:	add	r3, pc, r3
   356ac:	strd	r0, [sp, #8]
   356b0:	str	r3, [sp, #4]
   356b4:	str	r5, [sp]
   356b8:	ldr	r3, [pc, #324]	; 35804 <blkid_probe_get_size@plt+0x2e2ec>
   356bc:	mov	r1, r4
   356c0:	mov	r0, #7
   356c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   356c8:	ldr	r3, [sl]
   356cc:	cmp	r3, #6
   356d0:	ble	354c8 <blkid_probe_get_size@plt+0x2dfb0>
   356d4:	ldr	r3, [r6, #112]	; 0x70
   356d8:	ldr	r2, [pc, #296]	; 35808 <blkid_probe_get_size@plt+0x2e2f0>
   356dc:	ldrb	r5, [r3, #25]
   356e0:	ldrb	lr, [r3, #29]
   356e4:	ldrb	ip, [r3, #26]
   356e8:	ldrb	r0, [r3, #24]
   356ec:	ldrb	r1, [r3, #28]
   356f0:	add	r2, pc, r2
   356f4:	orr	r0, r0, r5, lsl #8
   356f8:	ldrb	r5, [r3, #30]
   356fc:	orr	r1, r1, lr, lsl #8
   35700:	orr	r0, r0, ip, lsl #16
   35704:	ldrb	lr, [r3, #31]
   35708:	ldrb	ip, [r3, #27]
   3570c:	orr	r1, r1, r5, lsl #16
   35710:	add	r3, r2, #2224	; 0x8b0
   35714:	orr	r2, r1, lr, lsl #24
   35718:	orr	r0, r0, ip, lsl #24
   3571c:	ldr	ip, [pc, #232]	; 3580c <blkid_probe_get_size@plt+0x2e2f4>
   35720:	str	r2, [sp, #12]
   35724:	ldr	r2, [pc, #228]	; 35810 <blkid_probe_get_size@plt+0x2e2f8>
   35728:	add	ip, pc, ip
   3572c:	add	r3, r3, #4
   35730:	str	r0, [sp, #8]
   35734:	str	r3, [sp]
   35738:	str	ip, [sp, #4]
   3573c:	ldr	r3, [pc, #208]	; 35814 <blkid_probe_get_size@plt+0x2e2fc>
   35740:	add	r2, pc, r2
   35744:	mov	r1, #0
   35748:	mov	r0, #7
   3574c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   35750:	b	354b4 <blkid_probe_get_size@plt+0x2df9c>
   35754:			; <UNDEFINED> instruction: 0x000376bc
   35758:	andeq	r2, r6, r8, lsr #20
   3575c:	andeq	r0, r0, ip, lsr r4
   35760:	andeq	r9, r3, r4, lsl #4
   35764:	andeq	r2, r6, ip, ror pc
   35768:	andeq	r7, r3, ip, ror #11
   3576c:	andeq	r9, r3, ip, asr #5
   35770:	andeq	r8, r3, r4, asr r2
   35774:	andeq	r0, r0, r9, asr #2
   35778:	ldrdeq	r2, [r6], -r4
   3577c:	andeq	r7, r3, r4, ror r5
   35780:	andeq	r9, r3, ip, ror #4
   35784:	andeq	r8, r3, r4, ror #3
   35788:	andeq	r0, r0, sp, asr #2
   3578c:	andeq	r2, r6, r0, asr lr
   35790:	strdeq	r7, [r3], -r0
   35794:	andeq	r9, r3, r4, lsr #4
   35798:	andeq	r8, r3, r8, asr r1
   3579c:	andeq	r0, r0, r3, asr r1
   357a0:			; <UNDEFINED> instruction: 0x00062db0
   357a4:	andeq	r7, r3, r8, ror #7
   357a8:	andeq	r9, r3, ip, asr #2
   357ac:	andeq	r8, r3, r0, asr r0
   357b0:	andeq	r0, r0, fp, asr r1
   357b4:	andeq	r2, r6, r8, ror #25
   357b8:	andeq	r7, r3, r8, lsl #7
   357bc:	ldrdeq	r9, [r3], -r4
   357c0:	strdeq	r7, [r3], -r0
   357c4:	andeq	r0, r0, r7, asr r1
   357c8:	andeq	r2, r6, r4, lsl #25
   357cc:	andeq	r7, r3, r8, lsl #6
   357d0:	strheq	r9, [r3], -r8
   357d4:	andeq	r7, r3, r4, asr #30
   357d8:	andeq	r0, r0, r3, ror #2
   357dc:	andeq	r2, r6, r8, ror #23
   357e0:	andeq	r7, r3, r8, ror r2
   357e4:	andeq	r9, r3, ip, asr #32
   357e8:			; <UNDEFINED> instruction: 0x00037eb4
   357ec:	andeq	r7, r3, ip, lsl #4
   357f0:	andeq	r7, r3, r8, lsl #29
   357f4:	andeq	r1, r3, r8, lsr #8
   357f8:	andeq	r0, r0, pc, asr r1
   357fc:	andeq	r8, r3, r0, asr #30
   35800:	strdeq	r8, [r3], -ip
   35804:	andeq	r0, r0, r1, ror #2
   35808:	andeq	r7, r3, r8, lsl #2
   3580c:	muleq	r3, ip, lr
   35810:	andeq	r7, r3, r4, asr #26
   35814:	andeq	r0, r0, r2, ror #2
   35818:	push	{r4, r5, r6, r7, r8, lr}
   3581c:	mov	r4, r3
   35820:	ldrb	r3, [r3]
   35824:	sub	sp, sp, #8
   35828:	mov	r5, r2
   3582c:	mov	r6, r0
   35830:	mov	r7, r1
   35834:	ldr	r0, [r2]
   35838:	add	r1, r3, #1
   3583c:	mov	r2, #8
   35840:	ldrb	r8, [sp, #36]	; 0x24
   35844:	bl	711c <reallocarray@plt>
   35848:	cmp	r0, #0
   3584c:	beq	358f4 <blkid_probe_get_size@plt+0x2e3dc>
   35850:	str	r0, [r5]
   35854:	ldr	r3, [r7]
   35858:	add	r3, r3, #1
   3585c:	str	r3, [r7]
   35860:	ldrb	r2, [r4]
   35864:	ldr	r3, [r5]
   35868:	strb	r8, [r3, r2, lsl #3]
   3586c:	ldrb	r2, [r4]
   35870:	ldr	r3, [r5]
   35874:	add	r3, r3, r2, lsl #3
   35878:	ldr	r2, [sp, #32]
   3587c:	str	r2, [r3, #4]
   35880:	ldrb	r1, [r4]
   35884:	add	r1, r1, #1
   35888:	uxtb	r1, r1
   3588c:	cmp	r1, #1
   35890:	strb	r1, [r4]
   35894:	bls	358b4 <blkid_probe_get_size@plt+0x2e39c>
   35898:	ldr	r0, [r5]
   3589c:	cmp	r0, #0
   358a0:	beq	358cc <blkid_probe_get_size@plt+0x2e3b4>
   358a4:	ldr	r3, [pc, #80]	; 358fc <blkid_probe_get_size@plt+0x2e3e4>
   358a8:	mov	r2, #8
   358ac:	add	r3, pc, r3
   358b0:	bl	6a44 <qsort@plt>
   358b4:	ldr	r3, [r6]
   358b8:	mov	r0, #0
   358bc:	add	r3, r3, #1
   358c0:	str	r3, [r6]
   358c4:	add	sp, sp, #8
   358c8:	pop	{r4, r5, r6, r7, r8, pc}
   358cc:	ldr	r3, [pc, #44]	; 35900 <blkid_probe_get_size@plt+0x2e3e8>
   358d0:	ldr	r2, [pc, #44]	; 35904 <blkid_probe_get_size@plt+0x2e3ec>
   358d4:	add	r3, pc, r3
   358d8:	ldr	r1, [pc, #40]	; 35908 <blkid_probe_get_size@plt+0x2e3f0>
   358dc:	add	r3, r3, #2240	; 0x8c0
   358e0:	str	r3, [sp]
   358e4:	add	r2, pc, r2
   358e8:	mov	r3, #107	; 0x6b
   358ec:	add	r1, pc, r1
   358f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   358f4:	mvn	r0, #11
   358f8:	b	358c4 <blkid_probe_get_size@plt+0x2e3ac>
   358fc:			; <UNDEFINED> instruction: 0xffff5774
   35900:	andeq	r6, r3, r4, lsr #30
   35904:			; <UNDEFINED> instruction: 0x00032fbc
   35908:	andeq	lr, r3, r0, ror lr
   3590c:	push	{r4, r5, r6, lr}
   35910:	subs	r4, r0, #0
   35914:	popeq	{r4, r5, r6, pc}
   35918:	ldrb	r3, [r4, #8]
   3591c:	cmp	r3, #0
   35920:	beq	35948 <blkid_probe_get_size@plt+0x2e430>
   35924:	mov	r5, #0
   35928:	ldr	r3, [r4, #4]
   3592c:	add	r3, r3, r5, lsl #3
   35930:	add	r5, r5, #1
   35934:	ldr	r0, [r3, #4]
   35938:	bl	3590c <blkid_probe_get_size@plt+0x2e3f4>
   3593c:	ldrb	r3, [r4, #8]
   35940:	cmp	r3, r5
   35944:	bhi	35928 <blkid_probe_get_size@plt+0x2e410>
   35948:	ldr	r0, [r4, #4]
   3594c:	bl	69f0 <free@plt>
   35950:	ldr	r0, [r4, #12]
   35954:	bl	69f0 <free@plt>
   35958:	mov	r0, r4
   3595c:	pop	{r4, r5, r6, lr}
   35960:	b	69f0 <free@plt>
   35964:	ldr	r1, [pc, #244]	; 35a60 <blkid_probe_get_size@plt+0x2e548>
   35968:	ldr	ip, [pc, #244]	; 35a64 <blkid_probe_get_size@plt+0x2e54c>
   3596c:	add	r1, pc, r1
   35970:	push	{r4, r5, r6, r7, r8, lr}
   35974:	mov	r5, r3
   35978:	ldr	r7, [r1, ip]
   3597c:	mov	r3, r1
   35980:	sub	sp, sp, #48	; 0x30
   35984:	ldr	r3, [r7]
   35988:	subs	r6, r0, #0
   3598c:	str	r3, [sp, #44]	; 0x2c
   35990:	beq	35a00 <blkid_probe_get_size@plt+0x2e4e8>
   35994:	mov	r4, r2
   35998:	ldr	r2, [pc, #200]	; 35a68 <blkid_probe_get_size@plt+0x2e550>
   3599c:	mov	r3, #22
   359a0:	add	r2, pc, r2
   359a4:	add	r8, sp, #20
   359a8:	str	r2, [sp]
   359ac:	strd	r4, [sp, #8]
   359b0:	mov	r0, r8
   359b4:	mov	r1, r3
   359b8:	mov	r2, #1
   359bc:	bl	7260 <__snprintf_chk@plt>
   359c0:	cmp	r0, #21
   359c4:	bhi	35a2c <blkid_probe_get_size@plt+0x2e514>
   359c8:	ldr	r1, [pc, #156]	; 35a6c <blkid_probe_get_size@plt+0x2e554>
   359cc:	mov	r2, r8
   359d0:	add	r1, pc, r1
   359d4:	mov	r0, r6
   359d8:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   359dc:	cmp	r0, #0
   359e0:	movge	r0, #0
   359e4:	strdge	r4, [r6, #192]	; 0xc0
   359e8:	ldr	r2, [sp, #44]	; 0x2c
   359ec:	ldr	r3, [r7]
   359f0:	cmp	r2, r3
   359f4:	bne	35a5c <blkid_probe_get_size@plt+0x2e544>
   359f8:	add	sp, sp, #48	; 0x30
   359fc:	pop	{r4, r5, r6, r7, r8, pc}
   35a00:	ldr	r2, [pc, #104]	; 35a70 <blkid_probe_get_size@plt+0x2e558>
   35a04:	ldr	r1, [pc, #104]	; 35a74 <blkid_probe_get_size@plt+0x2e55c>
   35a08:	add	r2, pc, r2
   35a0c:	add	r2, r2, #2240	; 0x8c0
   35a10:	add	r2, r2, #12
   35a14:	str	r2, [sp]
   35a18:	ldr	r2, [pc, #88]	; 35a78 <blkid_probe_get_size@plt+0x2e560>
   35a1c:	ldr	r3, [pc, #88]	; 35a7c <blkid_probe_get_size@plt+0x2e564>
   35a20:	add	r2, pc, r2
   35a24:	add	r1, pc, r1
   35a28:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   35a2c:	ldr	r2, [pc, #76]	; 35a80 <blkid_probe_get_size@plt+0x2e568>
   35a30:	ldr	r1, [pc, #76]	; 35a84 <blkid_probe_get_size@plt+0x2e56c>
   35a34:	add	r2, pc, r2
   35a38:	add	r2, r2, #2240	; 0x8c0
   35a3c:	add	r2, r2, #12
   35a40:	str	r2, [sp]
   35a44:	ldr	r2, [pc, #60]	; 35a88 <blkid_probe_get_size@plt+0x2e570>
   35a48:	ldr	r3, [pc, #60]	; 35a8c <blkid_probe_get_size@plt+0x2e574>
   35a4c:	add	r2, pc, r2
   35a50:	add	r1, pc, r1
   35a54:	mov	r0, #0
   35a58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   35a5c:	bl	6fb4 <__stack_chk_fail@plt>
   35a60:	strdeq	r2, [r6], -ip
   35a64:	andeq	r0, r0, ip, lsr r4
   35a68:	andeq	r8, r3, r4, lsl #25
   35a6c:	andeq	r5, r3, r8, lsr fp
   35a70:	strdeq	r6, [r3], -r0
   35a74:	andeq	r5, r3, ip, lsr r5
   35a78:	muleq	r3, r0, r1
   35a7c:	andeq	r0, r0, r8, ror r4
   35a80:	andeq	r6, r3, r4, asr #27
   35a84:	ldrdeq	r8, [r3], -ip
   35a88:	andeq	r0, r3, r4, ror #2
   35a8c:	andeq	r0, r0, sl, ror r4
   35a90:	push	{r4, r5, r6, r7, r8, r9, lr}
   35a94:	subs	r4, r0, #0
   35a98:	sub	sp, sp, #12
   35a9c:	beq	35af8 <blkid_probe_get_size@plt+0x2e5e0>
   35aa0:	mov	r5, r1
   35aa4:	ldr	r1, [pc, #120]	; 35b24 <blkid_probe_get_size@plt+0x2e60c>
   35aa8:	add	r0, r4, #88	; 0x58
   35aac:	add	r1, pc, r1
   35ab0:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   35ab4:	cmp	r0, #0
   35ab8:	blt	35af0 <blkid_probe_get_size@plt+0x2e5d8>
   35abc:	mov	r1, r5
   35ac0:	ldr	r0, [r4, #88]	; 0x58
   35ac4:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   35ac8:	cmp	r0, #0
   35acc:	blt	35af0 <blkid_probe_get_size@plt+0x2e5d8>
   35ad0:	ldrd	r6, [r4, #104]	; 0x68
   35ad4:	ldrb	r1, [r4, #212]	; 0xd4
   35ad8:	mov	r0, #0
   35adc:	adds	r8, r6, #1
   35ae0:	adc	r9, r7, #0
   35ae4:	orr	r3, r1, #8
   35ae8:	strd	r8, [r4, #104]	; 0x68
   35aec:	strb	r3, [r4, #212]	; 0xd4
   35af0:	add	sp, sp, #12
   35af4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   35af8:	ldr	r2, [pc, #40]	; 35b28 <blkid_probe_get_size@plt+0x2e610>
   35afc:	ldr	r1, [pc, #40]	; 35b2c <blkid_probe_get_size@plt+0x2e614>
   35b00:	add	r2, pc, r2
   35b04:	add	r2, r2, #2272	; 0x8e0
   35b08:	add	r2, r2, #8
   35b0c:	str	r2, [sp]
   35b10:	ldr	r2, [pc, #24]	; 35b30 <blkid_probe_get_size@plt+0x2e618>
   35b14:	ldr	r3, [pc, #24]	; 35b34 <blkid_probe_get_size@plt+0x2e61c>
   35b18:	add	r2, pc, r2
   35b1c:	add	r1, pc, r1
   35b20:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   35b24:	andeq	r1, r6, ip, ror pc
   35b28:	strdeq	r6, [r3], -r8
   35b2c:	andeq	r5, r3, r4, asr #8
   35b30:	muleq	r3, r8, r0
   35b34:	andeq	r0, r0, r5, asr #8
   35b38:	push	{r4, r5, r6, r7, lr}
   35b3c:	subs	r5, r0, #0
   35b40:	sub	sp, sp, #12
   35b44:	beq	35bdc <blkid_probe_get_size@plt+0x2e6c4>
   35b48:	cmp	r1, #0
   35b4c:	mov	r4, r1
   35b50:	beq	35c08 <blkid_probe_get_size@plt+0x2e6f0>
   35b54:	mov	r1, #58	; 0x3a
   35b58:	mov	r0, r4
   35b5c:	bl	74c4 <strchr@plt>
   35b60:	cmp	r0, #0
   35b64:	beq	35b74 <blkid_probe_get_size@plt+0x2e65c>
   35b68:	mvn	r0, #21
   35b6c:	add	sp, sp, #12
   35b70:	pop	{r4, r5, r6, r7, pc}
   35b74:	mov	r1, #32
   35b78:	mov	r0, r4
   35b7c:	bl	74c4 <strchr@plt>
   35b80:	subs	r6, r0, #0
   35b84:	bne	35b68 <blkid_probe_get_size@plt+0x2e650>
   35b88:	ldr	r1, [pc, #168]	; 35c38 <blkid_probe_get_size@plt+0x2e720>
   35b8c:	add	r0, r5, #60	; 0x3c
   35b90:	add	r1, pc, r1
   35b94:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   35b98:	cmp	r0, #0
   35b9c:	blt	35b6c <blkid_probe_get_size@plt+0x2e654>
   35ba0:	mov	r1, r4
   35ba4:	ldr	r0, [r5, #60]	; 0x3c
   35ba8:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   35bac:	cmp	r0, #0
   35bb0:	blt	35b6c <blkid_probe_get_size@plt+0x2e654>
   35bb4:	ldrd	r2, [r5, #72]	; 0x48
   35bb8:	ldrb	r1, [r5, #212]	; 0xd4
   35bbc:	mov	r0, r6
   35bc0:	adds	r6, r2, #1
   35bc4:	adc	r7, r3, #0
   35bc8:	orr	r3, r1, #4
   35bcc:	strd	r6, [r5, #72]	; 0x48
   35bd0:	strb	r3, [r5, #212]	; 0xd4
   35bd4:	add	sp, sp, #12
   35bd8:	pop	{r4, r5, r6, r7, pc}
   35bdc:	ldr	r2, [pc, #88]	; 35c3c <blkid_probe_get_size@plt+0x2e724>
   35be0:	ldr	r1, [pc, #88]	; 35c40 <blkid_probe_get_size@plt+0x2e728>
   35be4:	add	r2, pc, r2
   35be8:	add	r2, r2, #2288	; 0x8f0
   35bec:	add	r2, r2, #12
   35bf0:	str	r2, [sp]
   35bf4:	ldr	r2, [pc, #72]	; 35c44 <blkid_probe_get_size@plt+0x2e72c>
   35bf8:	ldr	r3, [pc, #72]	; 35c48 <blkid_probe_get_size@plt+0x2e730>
   35bfc:	add	r2, pc, r2
   35c00:	add	r1, pc, r1
   35c04:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   35c08:	ldr	r3, [pc, #60]	; 35c4c <blkid_probe_get_size@plt+0x2e734>
   35c0c:	mov	r0, r1
   35c10:	add	r3, pc, r3
   35c14:	add	r3, r3, #2288	; 0x8f0
   35c18:	ldr	r2, [pc, #48]	; 35c50 <blkid_probe_get_size@plt+0x2e738>
   35c1c:	ldr	r1, [pc, #48]	; 35c54 <blkid_probe_get_size@plt+0x2e73c>
   35c20:	add	r3, r3, #12
   35c24:	str	r3, [sp]
   35c28:	add	r2, pc, r2
   35c2c:	ldr	r3, [pc, #36]	; 35c58 <blkid_probe_get_size@plt+0x2e740>
   35c30:	add	r1, pc, r1
   35c34:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   35c38:	muleq	r6, r8, lr
   35c3c:	andeq	r6, r3, r4, lsl ip
   35c40:	andeq	r5, r3, r0, ror #6
   35c44:			; <UNDEFINED> instruction: 0x0002ffb4
   35c48:	andeq	r0, r0, lr, lsr #8
   35c4c:	andeq	r6, r3, r8, ror #23
   35c50:	andeq	pc, r2, r8, lsl #31
   35c54:	andeq	pc, r2, ip, ror #23
   35c58:	andeq	r0, r0, pc, lsr #8
   35c5c:	push	{r4, r5, lr}
   35c60:	subs	r4, r0, #0
   35c64:	sub	sp, sp, #12
   35c68:	beq	35ca8 <blkid_probe_get_size@plt+0x2e790>
   35c6c:	ldrb	r3, [r4, #212]	; 0xd4
   35c70:	mov	r5, r1
   35c74:	tst	r3, #32
   35c78:	beq	35c98 <blkid_probe_get_size@plt+0x2e780>
   35c7c:	ldr	r3, [r4, #164]	; 0xa4
   35c80:	cmp	r3, #0
   35c84:	strne	r3, [r5]
   35c88:	movne	r0, #0
   35c8c:	beq	35ce0 <blkid_probe_get_size@plt+0x2e7c8>
   35c90:	add	sp, sp, #12
   35c94:	pop	{r4, r5, pc}
   35c98:	bl	2c774 <blkid_probe_get_size@plt+0x2525c>
   35c9c:	cmp	r0, #0
   35ca0:	bge	35c7c <blkid_probe_get_size@plt+0x2e764>
   35ca4:	b	35c90 <blkid_probe_get_size@plt+0x2e778>
   35ca8:	ldr	r2, [pc, #56]	; 35ce8 <blkid_probe_get_size@plt+0x2e7d0>
   35cac:	ldr	r1, [pc, #56]	; 35cec <blkid_probe_get_size@plt+0x2e7d4>
   35cb0:	add	r2, pc, r2
   35cb4:	add	r2, r2, #2304	; 0x900
   35cb8:	add	r2, r2, #12
   35cbc:	str	r2, [sp]
   35cc0:	ldr	r2, [pc, #40]	; 35cf0 <blkid_probe_get_size@plt+0x2e7d8>
   35cc4:	ldr	r3, [pc, #40]	; 35cf4 <blkid_probe_get_size@plt+0x2e7dc>
   35cc8:	add	r2, pc, r2
   35ccc:	add	r1, pc, r1
   35cd0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35cd4:	mvn	r0, #21
   35cd8:	add	sp, sp, #12
   35cdc:	pop	{r4, r5, pc}
   35ce0:	mvn	r0, #1
   35ce4:	b	35c90 <blkid_probe_get_size@plt+0x2e778>
   35ce8:	andeq	r6, r3, r8, asr #22
   35cec:	muleq	r3, r4, r2
   35cf0:	andeq	pc, r2, r8, ror #29
   35cf4:	andeq	r0, r0, r5, lsl r4
   35cf8:	push	{r4, r5, lr}
   35cfc:	subs	r4, r0, #0
   35d00:	sub	sp, sp, #12
   35d04:	beq	35d44 <blkid_probe_get_size@plt+0x2e82c>
   35d08:	ldrb	r3, [r4, #212]	; 0xd4
   35d0c:	mov	r5, r1
   35d10:	tst	r3, #32
   35d14:	beq	35d34 <blkid_probe_get_size@plt+0x2e81c>
   35d18:	ldr	r0, [r4, #168]	; 0xa8
   35d1c:	cmp	r0, #0
   35d20:	strne	r0, [r5]
   35d24:	movne	r0, #0
   35d28:	beq	35d7c <blkid_probe_get_size@plt+0x2e864>
   35d2c:	add	sp, sp, #12
   35d30:	pop	{r4, r5, pc}
   35d34:	bl	2c774 <blkid_probe_get_size@plt+0x2525c>
   35d38:	cmp	r0, #0
   35d3c:	bge	35d18 <blkid_probe_get_size@plt+0x2e800>
   35d40:	b	35d2c <blkid_probe_get_size@plt+0x2e814>
   35d44:	ldr	r2, [pc, #100]	; 35db0 <blkid_probe_get_size@plt+0x2e898>
   35d48:	ldr	r1, [pc, #100]	; 35db4 <blkid_probe_get_size@plt+0x2e89c>
   35d4c:	add	r2, pc, r2
   35d50:	add	r2, r2, #2336	; 0x920
   35d54:	add	r2, r2, #4
   35d58:	str	r2, [sp]
   35d5c:	ldr	r2, [pc, #84]	; 35db8 <blkid_probe_get_size@plt+0x2e8a0>
   35d60:	ldr	r3, [pc, #84]	; 35dbc <blkid_probe_get_size@plt+0x2e8a4>
   35d64:	add	r2, pc, r2
   35d68:	add	r1, pc, r1
   35d6c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35d70:	mvn	r0, #21
   35d74:	add	sp, sp, #12
   35d78:	pop	{r4, r5, pc}
   35d7c:	ldr	r3, [pc, #60]	; 35dc0 <blkid_probe_get_size@plt+0x2e8a8>
   35d80:	ldr	r2, [pc, #60]	; 35dc4 <blkid_probe_get_size@plt+0x2e8ac>
   35d84:	add	r3, pc, r3
   35d88:	add	r3, r3, #2336	; 0x920
   35d8c:	ldr	r1, [pc, #52]	; 35dc8 <blkid_probe_get_size@plt+0x2e8b0>
   35d90:	add	r3, r3, #4
   35d94:	str	r3, [sp]
   35d98:	add	r2, pc, r2
   35d9c:	ldr	r3, [pc, #40]	; 35dcc <blkid_probe_get_size@plt+0x2e8b4>
   35da0:	add	r1, pc, r1
   35da4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   35da8:	mvn	r0, #1
   35dac:	b	35d2c <blkid_probe_get_size@plt+0x2e814>
   35db0:	andeq	r6, r3, ip, lsr #21
   35db4:	strdeq	r5, [r3], -r8
   35db8:	andeq	pc, r2, ip, asr #28
   35dbc:	andeq	r0, r0, r3, lsl #8
   35dc0:	andeq	r6, r3, r4, ror sl
   35dc4:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   35dc8:			; <UNDEFINED> instruction: 0x000388b0
   35dcc:	andeq	r0, r0, ip, lsl #8
   35dd0:	ldr	r3, [pc, #820]	; 3610c <blkid_probe_get_size@plt+0x2ebf4>
   35dd4:	ldr	ip, [pc, #820]	; 36110 <blkid_probe_get_size@plt+0x2ebf8>
   35dd8:	add	r3, pc, r3
   35ddc:	push	{r4, r5, r6, r7, r8, fp, lr}
   35de0:	add	fp, sp, #24
   35de4:	sub	sp, sp, #60	; 0x3c
   35de8:	ldr	r4, [r3, ip]
   35dec:	subs	r5, r0, #0
   35df0:	ldr	r3, [r4]
   35df4:	str	r3, [fp, #-32]	; 0xffffffe0
   35df8:	beq	36034 <blkid_probe_get_size@plt+0x2eb1c>
   35dfc:	cmp	r2, #0
   35e00:	beq	36060 <blkid_probe_get_size@plt+0x2eb48>
   35e04:	sub	r3, r1, #69	; 0x45
   35e08:	mov	r6, r1
   35e0c:	cmp	r3, #18
   35e10:	addls	pc, pc, r3, lsl #2
   35e14:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e18:	b	35f40 <blkid_probe_get_size@plt+0x2ea28>
   35e1c:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e20:	b	35e90 <blkid_probe_get_size@plt+0x2e978>
   35e24:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e28:	b	35ea4 <blkid_probe_get_size@plt+0x2e98c>
   35e2c:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e30:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e34:	b	35ecc <blkid_probe_get_size@plt+0x2e9b4>
   35e38:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e3c:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e40:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e44:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e48:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e4c:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e50:	b	35ee0 <blkid_probe_get_size@plt+0x2e9c8>
   35e54:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e58:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e5c:	b	35fc4 <blkid_probe_get_size@plt+0x2eaac>
   35e60:	b	35e64 <blkid_probe_get_size@plt+0x2e94c>
   35e64:	add	r1, r5, #4
   35e68:	mov	r0, r2
   35e6c:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   35e70:	and	r6, r0, r0, asr #31
   35e74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   35e78:	ldr	r3, [r4]
   35e7c:	mov	r0, r6
   35e80:	cmp	r2, r3
   35e84:	bne	36108 <blkid_probe_get_size@plt+0x2ebf0>
   35e88:	sub	sp, fp, #24
   35e8c:	pop	{r4, r5, r6, r7, r8, fp, pc}
   35e90:	mov	r1, r2
   35e94:	mov	r0, r5
   35e98:	bl	35b38 <blkid_probe_get_size@plt+0x2e620>
   35e9c:	and	r6, r0, r0, asr #31
   35ea0:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35ea4:	mov	r0, r2
   35ea8:	sub	r1, fp, #44	; 0x2c
   35eac:	bl	40ec0 <blkid_probe_get_size@plt+0x399a8>
   35eb0:	subs	r6, r0, #0
   35eb4:	blt	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35eb8:	mov	r0, r5
   35ebc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   35ec0:	bl	35964 <blkid_probe_get_size@plt+0x2e44c>
   35ec4:	and	r6, r0, r0, asr #31
   35ec8:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35ecc:	add	r1, r5, #120	; 0x78
   35ed0:	mov	r0, r2
   35ed4:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   35ed8:	and	r6, r0, r0, asr #31
   35edc:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35ee0:	mov	r0, r2
   35ee4:	str	r2, [fp, #-48]	; 0xffffffd0
   35ee8:	bl	723c <strlen@plt>
   35eec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35ef0:	add	r3, r0, #6
   35ef4:	cmp	r3, #4194304	; 0x400000
   35ef8:	bhi	3609c <blkid_probe_get_size@plt+0x2eb84>
   35efc:	ldr	r3, [pc, #528]	; 36114 <blkid_probe_get_size@plt+0x2ebfc>
   35f00:	add	r0, r0, #20
   35f04:	add	r3, pc, r3
   35f08:	bic	r0, r0, #7
   35f0c:	sub	sp, sp, r0
   35f10:	ldm	r3, {r0, r1}
   35f14:	add	r6, sp, #32
   35f18:	str	r0, [sp, #32]
   35f1c:	strb	r1, [sp, #36]	; 0x24
   35f20:	add	r0, sp, #37	; 0x25
   35f24:	mov	r1, r2
   35f28:	bl	6ea0 <strcpy@plt>
   35f2c:	mov	r1, r6
   35f30:	mov	r0, r5
   35f34:	bl	35a90 <blkid_probe_get_size@plt+0x2e578>
   35f38:	and	r6, r0, r0, asr #31
   35f3c:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35f40:	mov	r0, r2
   35f44:	bl	74e8 <strdup@plt>
   35f48:	subs	r8, r0, #0
   35f4c:	beq	36100 <blkid_probe_get_size@plt+0x2ebe8>
   35f50:	mov	r1, #61	; 0x3d
   35f54:	bl	74c4 <strchr@plt>
   35f58:	cmp	r0, #0
   35f5c:	beq	360f0 <blkid_probe_get_size@plt+0x2ebd8>
   35f60:	mov	r7, r0
   35f64:	mov	r3, #0
   35f68:	strb	r3, [r7], #1
   35f6c:	cmp	r7, r3
   35f70:	beq	35f80 <blkid_probe_get_size@plt+0x2ea68>
   35f74:	ldrb	r3, [r0, #1]
   35f78:	cmp	r3, #0
   35f7c:	moveq	r7, #0
   35f80:	mov	r3, #0
   35f84:	mov	r2, r7
   35f88:	mov	r1, r8
   35f8c:	mov	r0, r5
   35f90:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   35f94:	subs	r6, r0, #0
   35f98:	blt	36090 <blkid_probe_get_size@plt+0x2eb78>
   35f9c:	mov	r2, r7
   35fa0:	mov	r0, r5
   35fa4:	mov	r3, #1
   35fa8:	mov	r1, r8
   35fac:	bl	23c48 <blkid_probe_get_size@plt+0x1c730>
   35fb0:	mov	r6, r0
   35fb4:	mov	r0, r8
   35fb8:	and	r6, r6, r6, asr #31
   35fbc:	bl	69f0 <free@plt>
   35fc0:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   35fc4:	ldr	r3, [pc, #332]	; 36118 <blkid_probe_get_size@plt+0x2ec00>
   35fc8:	mov	r2, #0
   35fcc:	add	r3, pc, r3
   35fd0:	str	r2, [fp, #-44]	; 0xffffffd4
   35fd4:	ldr	r3, [r3]
   35fd8:	cmp	r3, #6
   35fdc:	bgt	360cc <blkid_probe_get_size@plt+0x2ebb4>
   35fe0:	mov	ip, r2
   35fe4:	ldr	r3, [pc, #304]	; 3611c <blkid_probe_get_size@plt+0x2ec04>
   35fe8:	ldr	r0, [pc, #304]	; 36120 <blkid_probe_get_size@plt+0x2ec08>
   35fec:	add	r3, pc, r3
   35ff0:	add	r3, r3, #2368	; 0x940
   35ff4:	add	r3, r3, #12
   35ff8:	str	r2, [sp, #8]
   35ffc:	ldr	r2, [pc, #288]	; 36124 <blkid_probe_get_size@plt+0x2ec0c>
   36000:	mov	r1, #0
   36004:	add	r0, pc, r0
   36008:	str	r6, [sp, #24]
   3600c:	stm	sp, {r3, ip}
   36010:	str	r0, [sp, #20]
   36014:	str	r1, [sp, #16]
   36018:	str	r1, [sp, #12]
   3601c:	ldr	r3, [pc, #260]	; 36128 <blkid_probe_get_size@plt+0x2ec10>
   36020:	add	r2, pc, r2
   36024:	mov	r0, #7
   36028:	mov	r6, r1
   3602c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   36030:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   36034:	ldr	r2, [pc, #240]	; 3612c <blkid_probe_get_size@plt+0x2ec14>
   36038:	ldr	r1, [pc, #240]	; 36130 <blkid_probe_get_size@plt+0x2ec18>
   3603c:	add	r2, pc, r2
   36040:	add	r2, r2, #2352	; 0x930
   36044:	add	r2, r2, #12
   36048:	str	r2, [sp]
   3604c:	ldr	r2, [pc, #224]	; 36134 <blkid_probe_get_size@plt+0x2ec1c>
   36050:	ldr	r3, [pc, #224]	; 36138 <blkid_probe_get_size@plt+0x2ec20>
   36054:	add	r2, pc, r2
   36058:	add	r1, pc, r1
   3605c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36060:	ldr	r3, [pc, #212]	; 3613c <blkid_probe_get_size@plt+0x2ec24>
   36064:	mov	r0, r2
   36068:	add	r3, pc, r3
   3606c:	add	r3, r3, #2352	; 0x930
   36070:	ldr	r2, [pc, #200]	; 36140 <blkid_probe_get_size@plt+0x2ec28>
   36074:	ldr	r1, [pc, #200]	; 36144 <blkid_probe_get_size@plt+0x2ec2c>
   36078:	add	r3, r3, #12
   3607c:	str	r3, [sp]
   36080:	add	r2, pc, r2
   36084:	ldr	r3, [pc, #188]	; 36148 <blkid_probe_get_size@plt+0x2ec30>
   36088:	add	r1, pc, r1
   3608c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36090:	mov	r0, r8
   36094:	bl	69f0 <free@plt>
   36098:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   3609c:	ldr	r2, [pc, #168]	; 3614c <blkid_probe_get_size@plt+0x2ec34>
   360a0:	ldr	r1, [pc, #168]	; 36150 <blkid_probe_get_size@plt+0x2ec38>
   360a4:	add	r2, pc, r2
   360a8:	add	r2, r2, #2352	; 0x930
   360ac:	add	r2, r2, #12
   360b0:	str	r2, [sp]
   360b4:	ldr	r2, [pc, #152]	; 36154 <blkid_probe_get_size@plt+0x2ec3c>
   360b8:	ldr	r3, [pc, #152]	; 36158 <blkid_probe_get_size@plt+0x2ec40>
   360bc:	add	r2, pc, r2
   360c0:	add	r1, pc, r1
   360c4:	mov	r0, #0
   360c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   360cc:	mov	r0, r5
   360d0:	sub	r1, fp, #44	; 0x2c
   360d4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   360d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   360dc:	cmp	r2, #0
   360e0:	beq	35fe0 <blkid_probe_get_size@plt+0x2eac8>
   360e4:	ldr	ip, [pc, #112]	; 3615c <blkid_probe_get_size@plt+0x2ec44>
   360e8:	add	ip, pc, ip
   360ec:	b	35fe4 <blkid_probe_get_size@plt+0x2eacc>
   360f0:	mov	r0, r8
   360f4:	bl	69f0 <free@plt>
   360f8:	mvn	r6, #21
   360fc:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   36100:	mvn	r6, #11
   36104:	b	35e74 <blkid_probe_get_size@plt+0x2e95c>
   36108:	bl	6fb4 <__stack_chk_fail@plt>
   3610c:	muleq	r6, r0, sp
   36110:	andeq	r0, r0, ip, lsr r4
   36114:	andeq	r5, r3, ip, asr r8
   36118:	andeq	r2, r6, r0, ror r1
   3611c:	andeq	r6, r3, ip, lsl #16
   36120:	andeq	r8, r3, ip, asr r6
   36124:	muleq	r2, r0, fp
   36128:			; <UNDEFINED> instruction: 0x000004b9
   3612c:			; <UNDEFINED> instruction: 0x000367bc
   36130:	andeq	r4, r3, r8, lsl #30
   36134:	andeq	pc, r2, ip, asr fp	; <UNPREDICTABLE>
   36138:	andeq	r0, r0, r8, lsl #9
   3613c:	muleq	r3, r0, r7
   36140:	andeq	pc, r2, r0, lsr fp	; <UNPREDICTABLE>
   36144:			; <UNDEFINED> instruction: 0x000353b8
   36148:	andeq	r0, r0, r9, lsl #9
   3614c:	andeq	r6, r3, r4, asr r7
   36150:	ldrdeq	lr, [r2], -r8
   36154:	strdeq	pc, [r2], -r4
   36158:	muleq	r0, r3, r4
   3615c:	andeq	lr, r2, r0, asr lr
   36160:	push	{r4, r5, lr}
   36164:	subs	r4, r0, #0
   36168:	sub	sp, sp, #12
   3616c:	beq	361e0 <blkid_probe_get_size@plt+0x2ecc8>
   36170:	mov	r5, r1
   36174:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   36178:	cmp	r0, #0
   3617c:	blt	361ac <blkid_probe_get_size@plt+0x2ec94>
   36180:	ldr	r4, [r4, #132]	; 0x84
   36184:	cmp	r4, #0
   36188:	beq	36218 <blkid_probe_get_size@plt+0x2ed00>
   3618c:	ldr	r1, [pc, #140]	; 36220 <blkid_probe_get_size@plt+0x2ed08>
   36190:	mov	r0, r4
   36194:	add	r1, pc, r1
   36198:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   3619c:	cmp	r0, #0
   361a0:	strne	r4, [r5]
   361a4:	movne	r0, #0
   361a8:	beq	361b4 <blkid_probe_get_size@plt+0x2ec9c>
   361ac:	add	sp, sp, #12
   361b0:	pop	{r4, r5, pc}
   361b4:	ldr	r2, [pc, #104]	; 36224 <blkid_probe_get_size@plt+0x2ed0c>
   361b8:	ldr	r1, [pc, #104]	; 36228 <blkid_probe_get_size@plt+0x2ed10>
   361bc:	add	r2, pc, r2
   361c0:	add	r2, r2, #2384	; 0x950
   361c4:	add	r2, r2, #12
   361c8:	str	r2, [sp]
   361cc:	ldr	r2, [pc, #88]	; 3622c <blkid_probe_get_size@plt+0x2ed14>
   361d0:	mov	r3, #976	; 0x3d0
   361d4:	add	r2, pc, r2
   361d8:	add	r1, pc, r1
   361dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   361e0:	ldr	r2, [pc, #72]	; 36230 <blkid_probe_get_size@plt+0x2ed18>
   361e4:	ldr	r1, [pc, #72]	; 36234 <blkid_probe_get_size@plt+0x2ed1c>
   361e8:	add	r2, pc, r2
   361ec:	add	r2, r2, #2384	; 0x950
   361f0:	add	r2, r2, #12
   361f4:	str	r2, [sp]
   361f8:	ldr	r2, [pc, #56]	; 36238 <blkid_probe_get_size@plt+0x2ed20>
   361fc:	ldr	r3, [pc, #56]	; 3623c <blkid_probe_get_size@plt+0x2ed24>
   36200:	add	r2, pc, r2
   36204:	add	r1, pc, r1
   36208:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3620c:	mvn	r0, #21
   36210:	add	sp, sp, #12
   36214:	pop	{r4, r5, pc}
   36218:	mvn	r0, #1
   3621c:	b	361ac <blkid_probe_get_size@plt+0x2ec94>
   36220:	andeq	r5, r3, ip, asr #11
   36224:	andeq	r6, r3, ip, lsr r6
   36228:			; <UNDEFINED> instruction: 0x000384bc
   3622c:	ldrdeq	pc, [r2], -ip
   36230:	andeq	r6, r3, r0, lsl r6
   36234:	andeq	r4, r3, ip, asr sp
   36238:			; <UNDEFINED> instruction: 0x0002f9b0
   3623c:	andeq	r0, r0, r6, asr #7
   36240:	subs	r3, r0, #0
   36244:	push	{lr}		; (str lr, [sp, #-4]!)
   36248:	sub	sp, sp, #12
   3624c:	beq	36278 <blkid_probe_get_size@plt+0x2ed60>
   36250:	ldr	r3, [r3, #160]	; 0xa0
   36254:	cmp	r3, #0
   36258:	beq	362b0 <blkid_probe_get_size@plt+0x2ed98>
   3625c:	ldrb	r2, [r3]
   36260:	cmp	r2, #47	; 0x2f
   36264:	moveq	r0, #0
   36268:	streq	r3, [r1]
   3626c:	bne	362e0 <blkid_probe_get_size@plt+0x2edc8>
   36270:	add	sp, sp, #12
   36274:	pop	{pc}		; (ldr pc, [sp], #4)
   36278:	ldr	r2, [pc, #144]	; 36310 <blkid_probe_get_size@plt+0x2edf8>
   3627c:	ldr	r1, [pc, #144]	; 36314 <blkid_probe_get_size@plt+0x2edfc>
   36280:	add	r2, pc, r2
   36284:	add	r2, r2, #2416	; 0x970
   36288:	add	r2, r2, #4
   3628c:	str	r2, [sp]
   36290:	ldr	r2, [pc, #128]	; 36318 <blkid_probe_get_size@plt+0x2ee00>
   36294:	ldr	r3, [pc, #128]	; 3631c <blkid_probe_get_size@plt+0x2ee04>
   36298:	add	r2, pc, r2
   3629c:	add	r1, pc, r1
   362a0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   362a4:	mvn	r0, #21
   362a8:	add	sp, sp, #12
   362ac:	pop	{pc}		; (ldr pc, [sp], #4)
   362b0:	ldr	r2, [pc, #104]	; 36320 <blkid_probe_get_size@plt+0x2ee08>
   362b4:	mov	r0, r3
   362b8:	add	r2, pc, r2
   362bc:	add	r3, r2, #2416	; 0x970
   362c0:	ldr	r1, [pc, #92]	; 36324 <blkid_probe_get_size@plt+0x2ee0c>
   362c4:	ldr	r2, [pc, #92]	; 36328 <blkid_probe_get_size@plt+0x2ee10>
   362c8:	add	r3, r3, #4
   362cc:	str	r3, [sp]
   362d0:	add	r2, pc, r2
   362d4:	mov	r3, #956	; 0x3bc
   362d8:	add	r1, pc, r1
   362dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   362e0:	ldr	r2, [pc, #68]	; 3632c <blkid_probe_get_size@plt+0x2ee14>
   362e4:	ldr	r1, [pc, #68]	; 36330 <blkid_probe_get_size@plt+0x2ee18>
   362e8:	add	r2, pc, r2
   362ec:	add	r2, r2, #2416	; 0x970
   362f0:	add	r2, r2, #4
   362f4:	str	r2, [sp]
   362f8:	ldr	r2, [pc, #52]	; 36334 <blkid_probe_get_size@plt+0x2ee1c>
   362fc:	ldr	r3, [pc, #52]	; 36338 <blkid_probe_get_size@plt+0x2ee20>
   36300:	add	r2, pc, r2
   36304:	add	r1, pc, r1
   36308:	mov	r0, #0
   3630c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36310:	andeq	r6, r3, r8, ror r5
   36314:	andeq	r4, r3, r4, asr #25
   36318:	andeq	pc, r2, r8, lsl r9	; <UNPREDICTABLE>
   3631c:			; <UNDEFINED> instruction: 0x000003b9
   36320:	andeq	r6, r3, r0, asr #10
   36324:	andeq	r8, r3, r8, ror #7
   36328:	andeq	pc, r2, r0, ror #17
   3632c:	andeq	r6, r3, r0, lsl r5
   36330:	andeq	r8, r3, ip, asr #7
   36334:			; <UNDEFINED> instruction: 0x0002f8b0
   36338:			; <UNDEFINED> instruction: 0x000003bd
   3633c:	push	{r4, r5, r6, lr}
   36340:	subs	r5, r0, #0
   36344:	sub	sp, sp, #8
   36348:	beq	363b4 <blkid_probe_get_size@plt+0x2ee9c>
   3634c:	cmp	r1, #0
   36350:	beq	363e0 <blkid_probe_get_size@plt+0x2eec8>
   36354:	mov	r0, r1
   36358:	bl	74e8 <strdup@plt>
   3635c:	subs	r4, r0, #0
   36360:	beq	36410 <blkid_probe_get_size@plt+0x2eef8>
   36364:	ldr	r1, [pc, #172]	; 36418 <blkid_probe_get_size@plt+0x2ef00>
   36368:	mov	r2, r4
   3636c:	add	r1, pc, r1
   36370:	mov	r0, r5
   36374:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   36378:	subs	r6, r0, #0
   3637c:	blt	363a0 <blkid_probe_get_size@plt+0x2ee88>
   36380:	ldrb	r3, [r5, #213]	; 0xd5
   36384:	ldr	r0, [r5, #180]	; 0xb4
   36388:	orr	r3, r3, #1
   3638c:	strb	r3, [r5, #213]	; 0xd5
   36390:	bl	69f0 <free@plt>
   36394:	str	r4, [r5, #180]	; 0xb4
   36398:	mov	r4, #0
   3639c:	mov	r6, r4
   363a0:	mov	r0, r4
   363a4:	bl	69f0 <free@plt>
   363a8:	mov	r0, r6
   363ac:	add	sp, sp, #8
   363b0:	pop	{r4, r5, r6, pc}
   363b4:	ldr	r2, [pc, #96]	; 3641c <blkid_probe_get_size@plt+0x2ef04>
   363b8:	ldr	r1, [pc, #96]	; 36420 <blkid_probe_get_size@plt+0x2ef08>
   363bc:	add	r2, pc, r2
   363c0:	add	r2, r2, #2432	; 0x980
   363c4:	add	r2, r2, #12
   363c8:	str	r2, [sp]
   363cc:	ldr	r2, [pc, #80]	; 36424 <blkid_probe_get_size@plt+0x2ef0c>
   363d0:	mov	r3, #904	; 0x388
   363d4:	add	r2, pc, r2
   363d8:	add	r1, pc, r1
   363dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   363e0:	ldr	r3, [pc, #64]	; 36428 <blkid_probe_get_size@plt+0x2ef10>
   363e4:	mov	r0, r1
   363e8:	add	r3, pc, r3
   363ec:	add	r3, r3, #2432	; 0x980
   363f0:	ldr	r2, [pc, #52]	; 3642c <blkid_probe_get_size@plt+0x2ef14>
   363f4:	ldr	r1, [pc, #52]	; 36430 <blkid_probe_get_size@plt+0x2ef18>
   363f8:	add	r3, r3, #12
   363fc:	str	r3, [sp]
   36400:	add	r2, pc, r2
   36404:	ldr	r3, [pc, #40]	; 36434 <blkid_probe_get_size@plt+0x2ef1c>
   36408:	add	r1, pc, r1
   3640c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36410:	mvn	r6, #11
   36414:	b	363a0 <blkid_probe_get_size@plt+0x2ee88>
   36418:			; <UNDEFINED> instruction: 0x00030abc
   3641c:	andeq	r6, r3, ip, lsr r4
   36420:	andeq	r4, r3, r8, lsl #23
   36424:	ldrdeq	pc, [r2], -ip
   36428:	andeq	r6, r3, r0, lsl r4
   3642c:			; <UNDEFINED> instruction: 0x0002f7b0
   36430:	andeq	r8, r3, r4, ror #5
   36434:	andeq	r0, r0, r9, lsl #7
   36438:	push	{r4, r5, lr}
   3643c:	subs	r5, r0, #0
   36440:	sub	sp, sp, #12
   36444:	beq	3648c <blkid_probe_get_size@plt+0x2ef74>
   36448:	mov	r4, r1
   3644c:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   36450:	cmp	r0, #0
   36454:	blt	36484 <blkid_probe_get_size@plt+0x2ef6c>
   36458:	ldr	r1, [r5, #136]	; 0x88
   3645c:	ldr	r2, [r5, #140]	; 0x8c
   36460:	lsl	r0, r1, #12
   36464:	bic	r3, r2, #4080	; 0xff0
   36468:	bic	r3, r3, #15
   3646c:	orrs	r3, r3, r0, lsr #20
   36470:	beq	364c0 <blkid_probe_get_size@plt+0x2efa8>
   36474:	cmp	r4, #0
   36478:	moveq	r0, r4
   3647c:	movne	r0, #0
   36480:	stmne	r4, {r1, r2}
   36484:	add	sp, sp, #12
   36488:	pop	{r4, r5, pc}
   3648c:	ldr	r2, [pc, #52]	; 364c8 <blkid_probe_get_size@plt+0x2efb0>
   36490:	ldr	r1, [pc, #52]	; 364cc <blkid_probe_get_size@plt+0x2efb4>
   36494:	add	r2, pc, r2
   36498:	add	r2, r2, #2464	; 0x9a0
   3649c:	str	r2, [sp]
   364a0:	ldr	r2, [pc, #40]	; 364d0 <blkid_probe_get_size@plt+0x2efb8>
   364a4:	ldr	r3, [pc, #40]	; 364d4 <blkid_probe_get_size@plt+0x2efbc>
   364a8:	add	r2, pc, r2
   364ac:	add	r1, pc, r1
   364b0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   364b4:	mvn	r0, #21
   364b8:	add	sp, sp, #12
   364bc:	pop	{r4, r5, pc}
   364c0:	mvn	r0, #1
   364c4:	b	36484 <blkid_probe_get_size@plt+0x2ef6c>
   364c8:	andeq	r6, r3, r4, ror #6
   364cc:			; <UNDEFINED> instruction: 0x00034ab4
   364d0:	andeq	pc, r2, r8, lsl #14
   364d4:	andeq	r0, r0, r5, ror r3
   364d8:	push	{r4, r5, lr}
   364dc:	subs	r4, r0, #0
   364e0:	sub	sp, sp, #12
   364e4:	beq	36514 <blkid_probe_get_size@plt+0x2effc>
   364e8:	mov	r5, r1
   364ec:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   364f0:	cmp	r0, #0
   364f4:	blt	3650c <blkid_probe_get_size@plt+0x2eff4>
   364f8:	ldr	r3, [r4, #128]	; 0x80
   364fc:	cmp	r3, #0
   36500:	movne	r0, #0
   36504:	mvneq	r0, #1
   36508:	strne	r3, [r5]
   3650c:	add	sp, sp, #12
   36510:	pop	{r4, r5, pc}
   36514:	ldr	r2, [pc, #36]	; 36540 <blkid_probe_get_size@plt+0x2f028>
   36518:	ldr	r1, [pc, #36]	; 36544 <blkid_probe_get_size@plt+0x2f02c>
   3651c:	add	r2, pc, r2
   36520:	add	r2, r2, #2480	; 0x9b0
   36524:	add	r2, r2, #8
   36528:	str	r2, [sp]
   3652c:	ldr	r2, [pc, #20]	; 36548 <blkid_probe_get_size@plt+0x2f030>
   36530:	ldr	r3, [pc, #20]	; 3654c <blkid_probe_get_size@plt+0x2f034>
   36534:	add	r2, pc, r2
   36538:	add	r1, pc, r1
   3653c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36540:	ldrdeq	r6, [r3], -ip
   36544:	andeq	r4, r3, r8, lsr #20
   36548:	andeq	pc, r2, ip, ror r6	; <UNPREDICTABLE>
   3654c:	andeq	r0, r0, r5, asr #6
   36550:	push	{r4, r5, r6, lr}
   36554:	subs	r5, r0, #0
   36558:	sub	sp, sp, #8
   3655c:	beq	365c8 <blkid_probe_get_size@plt+0x2f0b0>
   36560:	cmp	r1, #0
   36564:	beq	365f0 <blkid_probe_get_size@plt+0x2f0d8>
   36568:	mov	r0, r1
   3656c:	bl	74e8 <strdup@plt>
   36570:	subs	r4, r0, #0
   36574:	beq	3661c <blkid_probe_get_size@plt+0x2f104>
   36578:	ldr	r1, [pc, #164]	; 36624 <blkid_probe_get_size@plt+0x2f10c>
   3657c:	mov	r2, r4
   36580:	add	r1, pc, r1
   36584:	mov	r0, r5
   36588:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   3658c:	subs	r6, r0, #0
   36590:	blt	365b4 <blkid_probe_get_size@plt+0x2f09c>
   36594:	ldrb	r3, [r5, #212]	; 0xd4
   36598:	ldr	r0, [r5, #172]	; 0xac
   3659c:	orr	r3, r3, #64	; 0x40
   365a0:	strb	r3, [r5, #212]	; 0xd4
   365a4:	bl	69f0 <free@plt>
   365a8:	str	r4, [r5, #172]	; 0xac
   365ac:	mov	r4, #0
   365b0:	mov	r6, r4
   365b4:	mov	r0, r4
   365b8:	bl	69f0 <free@plt>
   365bc:	mov	r0, r6
   365c0:	add	sp, sp, #8
   365c4:	pop	{r4, r5, r6, pc}
   365c8:	ldr	r2, [pc, #88]	; 36628 <blkid_probe_get_size@plt+0x2f110>
   365cc:	ldr	r1, [pc, #88]	; 3662c <blkid_probe_get_size@plt+0x2f114>
   365d0:	add	r2, pc, r2
   365d4:	add	r2, r2, #2512	; 0x9d0
   365d8:	str	r2, [sp]
   365dc:	ldr	r2, [pc, #76]	; 36630 <blkid_probe_get_size@plt+0x2f118>
   365e0:	ldr	r3, [pc, #76]	; 36634 <blkid_probe_get_size@plt+0x2f11c>
   365e4:	add	r2, pc, r2
   365e8:	add	r1, pc, r1
   365ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   365f0:	ldr	r3, [pc, #64]	; 36638 <blkid_probe_get_size@plt+0x2f120>
   365f4:	mov	r0, r1
   365f8:	add	r3, pc, r3
   365fc:	ldr	r2, [pc, #56]	; 3663c <blkid_probe_get_size@plt+0x2f124>
   36600:	ldr	r1, [pc, #56]	; 36640 <blkid_probe_get_size@plt+0x2f128>
   36604:	add	r3, r3, #2512	; 0x9d0
   36608:	str	r3, [sp]
   3660c:	add	r2, pc, r2
   36610:	ldr	r3, [pc, #44]	; 36644 <blkid_probe_get_size@plt+0x2f12c>
   36614:	add	r1, pc, r1
   36618:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3661c:	mvn	r6, #11
   36620:	b	365b4 <blkid_probe_get_size@plt+0x2f09c>
   36624:	andeq	r0, r3, ip, asr #16
   36628:	andeq	r6, r3, r8, lsr #4
   3662c:	andeq	r4, r3, r8, ror r9
   36630:	andeq	pc, r2, ip, asr #11
   36634:	ldrdeq	r0, [r0], -lr
   36638:	andeq	r6, r3, r0, lsl #4
   3663c:	andeq	pc, r2, r4, lsr #11
   36640:	andeq	r8, r3, r0, ror #1
   36644:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   36648:	subs	r3, r0, #0
   3664c:	push	{r4, r5, lr}
   36650:	sub	sp, sp, #12
   36654:	beq	36688 <blkid_probe_get_size@plt+0x2f170>
   36658:	ldr	r4, [r3, #156]	; 0x9c
   3665c:	mov	r5, r1
   36660:	ldr	r1, [pc, #132]	; 366ec <blkid_probe_get_size@plt+0x2f1d4>
   36664:	mov	r0, r4
   36668:	add	r1, pc, r1
   3666c:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   36670:	cmp	r0, #0
   36674:	movne	r0, #0
   36678:	strne	r4, [r5]
   3667c:	beq	366c0 <blkid_probe_get_size@plt+0x2f1a8>
   36680:	add	sp, sp, #12
   36684:	pop	{r4, r5, pc}
   36688:	ldr	r2, [pc, #96]	; 366f0 <blkid_probe_get_size@plt+0x2f1d8>
   3668c:	ldr	r1, [pc, #96]	; 366f4 <blkid_probe_get_size@plt+0x2f1dc>
   36690:	add	r2, pc, r2
   36694:	add	r2, r2, #2528	; 0x9e0
   36698:	add	r2, r2, #8
   3669c:	str	r2, [sp]
   366a0:	ldr	r2, [pc, #80]	; 366f8 <blkid_probe_get_size@plt+0x2f1e0>
   366a4:	ldr	r3, [pc, #80]	; 366fc <blkid_probe_get_size@plt+0x2f1e4>
   366a8:	add	r2, pc, r2
   366ac:	add	r1, pc, r1
   366b0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   366b4:	mvn	r0, #21
   366b8:	add	sp, sp, #12
   366bc:	pop	{r4, r5, pc}
   366c0:	ldr	r2, [pc, #56]	; 36700 <blkid_probe_get_size@plt+0x2f1e8>
   366c4:	ldr	r1, [pc, #56]	; 36704 <blkid_probe_get_size@plt+0x2f1ec>
   366c8:	add	r2, pc, r2
   366cc:	add	r2, r2, #2528	; 0x9e0
   366d0:	add	r2, r2, #8
   366d4:	str	r2, [sp]
   366d8:	ldr	r2, [pc, #40]	; 36708 <blkid_probe_get_size@plt+0x2f1f0>
   366dc:	ldr	r3, [pc, #40]	; 3670c <blkid_probe_get_size@plt+0x2f1f4>
   366e0:	add	r2, pc, r2
   366e4:	add	r1, pc, r1
   366e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   366ec:			; <UNDEFINED> instruction: 0x0002edbc
   366f0:	andeq	r6, r3, r8, ror #2
   366f4:			; <UNDEFINED> instruction: 0x000348b4
   366f8:	andeq	pc, r2, r8, lsl #10
   366fc:	muleq	r0, sl, r2
   36700:	andeq	r6, r3, r0, lsr r1
   36704:	andeq	r8, r3, ip, lsl r0
   36708:	ldrdeq	pc, [r2], -r0
   3670c:	muleq	r0, sp, r2
   36710:	ldr	r3, [pc, #636]	; 36994 <blkid_probe_get_size@plt+0x2f47c>
   36714:	ldr	ip, [pc, #636]	; 36998 <blkid_probe_get_size@plt+0x2f480>
   36718:	add	r3, pc, r3
   3671c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36720:	mov	r6, r1
   36724:	add	fp, sp, #32
   36728:	sub	sp, sp, #44	; 0x2c
   3672c:	ldr	r1, [r3, ip]
   36730:	mov	r4, #0
   36734:	subs	r7, r0, #0
   36738:	ldr	r3, [r1]
   3673c:	str	r1, [fp, #-64]	; 0xffffffc0
   36740:	str	r4, [fp, #-56]	; 0xffffffc8
   36744:	str	r3, [fp, #-40]	; 0xffffffd8
   36748:	beq	36920 <blkid_probe_get_size@plt+0x2f408>
   3674c:	sub	r1, fp, #60	; 0x3c
   36750:	mov	r5, r2
   36754:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   36758:	subs	r9, r0, #0
   3675c:	blt	368e0 <blkid_probe_get_size@plt+0x2f3c8>
   36760:	ldr	r9, [fp, #-60]	; 0xffffffc4
   36764:	ldr	r2, [pc, #560]	; 3699c <blkid_probe_get_size@plt+0x2f484>
   36768:	mov	r0, r9
   3676c:	add	r2, pc, r2
   36770:	cmp	r0, #0
   36774:	str	r6, [fp, #-44]	; 0xffffffd4
   36778:	mov	r8, r4
   3677c:	str	r9, [fp, #-52]	; 0xffffffcc
   36780:	str	r2, [fp, #-48]	; 0xffffffd0
   36784:	sub	sl, fp, #52	; 0x34
   36788:	beq	367ac <blkid_probe_get_size@plt+0x2f294>
   3678c:	bl	723c <strlen@plt>
   36790:	add	r4, r4, #1
   36794:	cmp	r4, #3
   36798:	add	r8, r8, r0
   3679c:	beq	367ac <blkid_probe_get_size@plt+0x2f294>
   367a0:	ldr	r0, [sl, r4, lsl #2]
   367a4:	cmp	r0, #0
   367a8:	bne	3678c <blkid_probe_get_size@plt+0x2f274>
   367ac:	add	r3, r8, #1
   367b0:	cmp	r3, #4194304	; 0x400000
   367b4:	bhi	36954 <blkid_probe_get_size@plt+0x2f43c>
   367b8:	add	r8, r8, #15
   367bc:	bic	r8, r8, #7
   367c0:	sub	sp, sp, r8
   367c4:	add	r8, sp, #8
   367c8:	cmp	r9, #0
   367cc:	mov	r0, r8
   367d0:	mov	sl, #0
   367d4:	sub	r4, fp, #52	; 0x34
   367d8:	beq	367fc <blkid_probe_get_size@plt+0x2f2e4>
   367dc:	mov	r1, r9
   367e0:	add	sl, sl, #1
   367e4:	bl	6ae0 <stpcpy@plt>
   367e8:	cmp	sl, #3
   367ec:	beq	367fc <blkid_probe_get_size@plt+0x2f2e4>
   367f0:	ldr	r9, [r4, sl, lsl #2]
   367f4:	cmp	r9, #0
   367f8:	bne	367dc <blkid_probe_get_size@plt+0x2f2c4>
   367fc:	mov	r3, #0
   36800:	strb	r3, [r0]
   36804:	mov	r0, r5
   36808:	bl	723c <strlen@plt>
   3680c:	cmp	r0, #0
   36810:	beq	36980 <blkid_probe_get_size@plt+0x2f468>
   36814:	sub	r1, r0, #1
   36818:	add	r3, r5, r1
   3681c:	ldrb	r2, [r5, r1]
   36820:	cmp	r2, #10
   36824:	beq	36840 <blkid_probe_get_size@plt+0x2f328>
   36828:	b	36908 <blkid_probe_get_size@plt+0x2f3f0>
   3682c:	ldrb	r2, [r3, #-1]!
   36830:	sub	r0, r1, #1
   36834:	cmp	r2, #10
   36838:	bne	3690c <blkid_probe_get_size@plt+0x2f3f4>
   3683c:	mov	r1, r0
   36840:	cmp	r1, #0
   36844:	bne	3682c <blkid_probe_get_size@plt+0x2f314>
   36848:	mov	r0, r5
   3684c:	bl	68dc <strndup@plt>
   36850:	cmp	r0, #0
   36854:	str	r0, [fp, #-56]	; 0xffffffc8
   36858:	beq	36988 <blkid_probe_get_size@plt+0x2f470>
   3685c:	mov	r1, r0
   36860:	mov	r2, #96	; 0x60
   36864:	mov	r0, r8
   36868:	bl	60e8c <blkid_probe_get_size@plt+0x59974>
   3686c:	subs	r9, r0, #0
   36870:	bge	368c0 <blkid_probe_get_size@plt+0x2f3a8>
   36874:	cmn	r9, #40	; 0x28
   36878:	beq	36914 <blkid_probe_get_size@plt+0x2f3fc>
   3687c:	cmn	r9, #21
   36880:	beq	368e0 <blkid_probe_get_size@plt+0x2f3c8>
   36884:	ldr	r1, [pc, #276]	; 369a0 <blkid_probe_get_size@plt+0x2f488>
   36888:	sub	r0, fp, #56	; 0x38
   3688c:	add	r1, pc, r1
   36890:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   36894:	subs	r9, r0, #0
   36898:	blt	368e0 <blkid_probe_get_size@plt+0x2f3c8>
   3689c:	mov	r1, r6
   368a0:	mov	r0, r7
   368a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   368a8:	bl	2c604 <blkid_probe_get_size@plt+0x250ec>
   368ac:	subs	r9, r0, #0
   368b0:	blt	368e0 <blkid_probe_get_size@plt+0x2f3c8>
   368b4:	mov	r0, #0
   368b8:	mvn	r9, #5
   368bc:	b	368e4 <blkid_probe_get_size@plt+0x2f3cc>
   368c0:	mov	r1, r6
   368c4:	mov	r0, r7
   368c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   368cc:	bl	2c604 <blkid_probe_get_size@plt+0x250ec>
   368d0:	subs	r9, r0, #0
   368d4:	movge	r0, #0
   368d8:	movge	r9, r0
   368dc:	bge	368e4 <blkid_probe_get_size@plt+0x2f3cc>
   368e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   368e4:	bl	69f0 <free@plt>
   368e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   368ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   368f0:	mov	r0, r9
   368f4:	ldr	r3, [r3]
   368f8:	cmp	r2, r3
   368fc:	bne	36990 <blkid_probe_get_size@plt+0x2f478>
   36900:	sub	sp, fp, #32
   36904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36908:	mov	r1, r0
   3690c:	cmp	r1, #4096	; 0x1000
   36910:	bls	36848 <blkid_probe_get_size@plt+0x2f330>
   36914:	ldr	r0, [fp, #-56]	; 0xffffffc8
   36918:	mvn	r9, #21
   3691c:	b	368e4 <blkid_probe_get_size@plt+0x2f3cc>
   36920:	ldr	r2, [pc, #124]	; 369a4 <blkid_probe_get_size@plt+0x2f48c>
   36924:	ldr	r1, [pc, #124]	; 369a8 <blkid_probe_get_size@plt+0x2f490>
   36928:	add	r2, pc, r2
   3692c:	add	r2, r2, #2560	; 0xa00
   36930:	str	r2, [sp]
   36934:	ldr	r2, [pc, #112]	; 369ac <blkid_probe_get_size@plt+0x2f494>
   36938:	ldr	r3, [pc, #112]	; 369b0 <blkid_probe_get_size@plt+0x2f498>
   3693c:	add	r2, pc, r2
   36940:	add	r1, pc, r1
   36944:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   36948:	mvn	r9, #21
   3694c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   36950:	b	368e4 <blkid_probe_get_size@plt+0x2f3cc>
   36954:	ldr	r2, [pc, #88]	; 369b4 <blkid_probe_get_size@plt+0x2f49c>
   36958:	ldr	r1, [pc, #88]	; 369b8 <blkid_probe_get_size@plt+0x2f4a0>
   3695c:	add	r2, pc, r2
   36960:	add	r2, r2, #2560	; 0xa00
   36964:	str	r2, [sp]
   36968:	ldr	r2, [pc, #76]	; 369bc <blkid_probe_get_size@plt+0x2f4a4>
   3696c:	ldr	r3, [pc, #76]	; 369c0 <blkid_probe_get_size@plt+0x2f4a8>
   36970:	add	r2, pc, r2
   36974:	add	r1, pc, r1
   36978:	mov	r0, #0
   3697c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36980:	mov	r1, r0
   36984:	b	36848 <blkid_probe_get_size@plt+0x2f330>
   36988:	mvn	r9, #11
   3698c:	b	368e4 <blkid_probe_get_size@plt+0x2f3cc>
   36990:	bl	6fb4 <__stack_chk_fail@plt>
   36994:	andeq	r1, r6, r0, asr r4
   36998:	andeq	r0, r0, ip, lsr r4
   3699c:	andeq	r1, r4, r4, asr r8
   369a0:	andeq	pc, r2, r0, ror #24
   369a4:	ldrdeq	r5, [r3], -r0
   369a8:	andeq	r4, r3, r0, lsr #12
   369ac:	andeq	pc, r2, r4, ror r2	; <UNPREDICTABLE>
   369b0:	andeq	r0, r0, sl, lsl r7
   369b4:	muleq	r3, ip, lr
   369b8:	andeq	lr, r2, r4, lsr #14
   369bc:	andeq	pc, r2, r0, asr #4
   369c0:	andeq	r0, r0, r6, lsr #14
   369c4:	ldr	r3, [pc, #824]	; 36d04 <blkid_probe_get_size@plt+0x2f7ec>
   369c8:	ldr	ip, [pc, #824]	; 36d08 <blkid_probe_get_size@plt+0x2f7f0>
   369cc:	add	r3, pc, r3
   369d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   369d4:	add	fp, sp, #32
   369d8:	sub	sp, sp, #164	; 0xa4
   369dc:	ldr	r7, [r3, ip]
   369e0:	mov	r4, #0
   369e4:	subs	r6, r0, #0
   369e8:	ldr	r3, [r7]
   369ec:	str	r4, [fp, #-172]	; 0xffffff54
   369f0:	str	r3, [fp, #-40]	; 0xffffffd8
   369f4:	beq	36bc0 <blkid_probe_get_size@plt+0x2f6a8>
   369f8:	cmp	r1, #0
   369fc:	mov	sl, r1
   36a00:	beq	36bf8 <blkid_probe_get_size@plt+0x2f6e0>
   36a04:	sub	r5, fp, #36	; 0x24
   36a08:	mov	r9, r2
   36a0c:	str	r4, [r5, #-128]!	; 0xffffff80
   36a10:	ldr	r0, [r6, #44]	; 0x2c
   36a14:	mov	r2, r5
   36a18:	bl	43ad4 <blkid_probe_get_size@plt+0x3c5bc>
   36a1c:	ldr	r8, [fp, #-164]	; 0xffffff5c
   36a20:	cmp	r8, #0
   36a24:	beq	36a5c <blkid_probe_get_size@plt+0x2f544>
   36a28:	cmp	r0, #0
   36a2c:	mvneq	r4, #1
   36a30:	ldreq	r0, [fp, #-172]	; 0xffffff54
   36a34:	strne	r0, [r9]
   36a38:	ldrne	r0, [fp, #-172]	; 0xffffff54
   36a3c:	bl	69f0 <free@plt>
   36a40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36a44:	ldr	r3, [r7]
   36a48:	mov	r0, r4
   36a4c:	cmp	r2, r3
   36a50:	bne	36d00 <blkid_probe_get_size@plt+0x2f7e8>
   36a54:	sub	sp, fp, #32
   36a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a5c:	sub	r1, fp, #176	; 0xb0
   36a60:	mov	r0, r6
   36a64:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   36a68:	subs	r4, r0, #0
   36a6c:	blt	36c34 <blkid_probe_get_size@plt+0x2f71c>
   36a70:	ldr	r1, [fp, #-176]	; 0xffffff50
   36a74:	ldr	r2, [pc, #656]	; 36d0c <blkid_probe_get_size@plt+0x2f7f4>
   36a78:	mov	r0, r1
   36a7c:	add	r2, pc, r2
   36a80:	sub	r3, fp, #56	; 0x38
   36a84:	cmp	r0, #0
   36a88:	mov	r4, r8
   36a8c:	str	sl, [fp, #-48]	; 0xffffffd0
   36a90:	str	r1, [fp, #-56]	; 0xffffffc8
   36a94:	str	r2, [fp, #-52]	; 0xffffffcc
   36a98:	str	r3, [fp, #-188]	; 0xffffff44
   36a9c:	beq	36acc <blkid_probe_get_size@plt+0x2f5b4>
   36aa0:	str	r1, [fp, #-184]	; 0xffffff48
   36aa4:	bl	723c <strlen@plt>
   36aa8:	add	r4, r4, #1
   36aac:	cmp	r4, #3
   36ab0:	ldr	r1, [fp, #-184]	; 0xffffff48
   36ab4:	add	r8, r8, r0
   36ab8:	beq	36acc <blkid_probe_get_size@plt+0x2f5b4>
   36abc:	ldr	r3, [fp, #-188]	; 0xffffff44
   36ac0:	ldr	r0, [r3, r4, lsl #2]
   36ac4:	cmp	r0, #0
   36ac8:	bne	36aa0 <blkid_probe_get_size@plt+0x2f588>
   36acc:	add	r3, r8, #1
   36ad0:	cmp	r3, #4194304	; 0x400000
   36ad4:	bhi	36cc4 <blkid_probe_get_size@plt+0x2f7ac>
   36ad8:	add	r8, r8, #15
   36adc:	bic	r8, r8, #7
   36ae0:	sub	sp, sp, r8
   36ae4:	add	r4, sp, #8
   36ae8:	sub	r3, fp, #56	; 0x38
   36aec:	cmp	r1, #0
   36af0:	mov	r0, r4
   36af4:	mov	r8, #0
   36af8:	str	r3, [fp, #-184]	; 0xffffff48
   36afc:	beq	36b20 <blkid_probe_get_size@plt+0x2f608>
   36b00:	add	r8, r8, #1
   36b04:	bl	6ae0 <stpcpy@plt>
   36b08:	cmp	r8, #3
   36b0c:	beq	36b20 <blkid_probe_get_size@plt+0x2f608>
   36b10:	ldr	r3, [fp, #-184]	; 0xffffff48
   36b14:	ldr	r1, [r3, r8, lsl #2]
   36b18:	cmp	r1, #0
   36b1c:	bne	36b00 <blkid_probe_get_size@plt+0x2f5e8>
   36b20:	mov	r8, #0
   36b24:	strb	r8, [r0]
   36b28:	mov	r2, r5
   36b2c:	mov	r1, r4
   36b30:	mov	r0, #3
   36b34:	bl	7368 <__lxstat64@plt>
   36b38:	cmp	r0, r8
   36b3c:	blt	36ca4 <blkid_probe_get_size@plt+0x2f78c>
   36b40:	ldr	r3, [fp, #-148]	; 0xffffff6c
   36b44:	and	r2, r3, #61440	; 0xf000
   36b48:	cmp	r2, #40960	; 0xa000
   36b4c:	beq	36c3c <blkid_probe_get_size@plt+0x2f724>
   36b50:	cmp	r2, #16384	; 0x4000
   36b54:	beq	36cf4 <blkid_probe_get_size@plt+0x2f7dc>
   36b58:	tst	r3, #256	; 0x100
   36b5c:	mvneq	r4, #0
   36b60:	ldreq	r0, [fp, #-172]	; 0xffffff54
   36b64:	beq	36a3c <blkid_probe_get_size@plt+0x2f524>
   36b68:	mov	r0, r4
   36b6c:	sub	r2, fp, #168	; 0xa8
   36b70:	sub	r1, fp, #172	; 0xac
   36b74:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   36b78:	subs	r4, r0, #0
   36b7c:	blt	36c34 <blkid_probe_get_size@plt+0x2f71c>
   36b80:	ldrd	r2, [fp, #-172]	; 0xffffff54
   36b84:	cmp	r3, #0
   36b88:	bne	36ba4 <blkid_probe_get_size@plt+0x2f68c>
   36b8c:	b	36c7c <blkid_probe_get_size@plt+0x2f764>
   36b90:	strb	r8, [r3]
   36b94:	ldr	r3, [fp, #-168]	; 0xffffff58
   36b98:	cmp	r3, #0
   36b9c:	beq	36c78 <blkid_probe_get_size@plt+0x2f760>
   36ba0:	ldr	r2, [fp, #-172]	; 0xffffff54
   36ba4:	sub	r3, r3, #1
   36ba8:	str	r3, [fp, #-168]	; 0xffffff58
   36bac:	ldrb	r1, [r2, r3]
   36bb0:	add	r3, r2, r3
   36bb4:	cmp	r1, #10
   36bb8:	beq	36b90 <blkid_probe_get_size@plt+0x2f678>
   36bbc:	b	36c7c <blkid_probe_get_size@plt+0x2f764>
   36bc0:	ldr	r2, [pc, #328]	; 36d10 <blkid_probe_get_size@plt+0x2f7f8>
   36bc4:	ldr	r1, [pc, #328]	; 36d14 <blkid_probe_get_size@plt+0x2f7fc>
   36bc8:	add	r2, pc, r2
   36bcc:	add	r2, r2, #2576	; 0xa10
   36bd0:	add	r2, r2, #12
   36bd4:	str	r2, [sp]
   36bd8:	ldr	r2, [pc, #312]	; 36d18 <blkid_probe_get_size@plt+0x2f800>
   36bdc:	ldr	r3, [pc, #312]	; 36d1c <blkid_probe_get_size@plt+0x2f804>
   36be0:	add	r2, pc, r2
   36be4:	add	r1, pc, r1
   36be8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   36bec:	mvn	r4, #21
   36bf0:	ldr	r0, [fp, #-172]	; 0xffffff54
   36bf4:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36bf8:	ldr	r3, [pc, #288]	; 36d20 <blkid_probe_get_size@plt+0x2f808>
   36bfc:	mov	r0, r1
   36c00:	add	r3, pc, r3
   36c04:	add	r3, r3, #2576	; 0xa10
   36c08:	ldr	r2, [pc, #276]	; 36d24 <blkid_probe_get_size@plt+0x2f80c>
   36c0c:	ldr	r1, [pc, #276]	; 36d28 <blkid_probe_get_size@plt+0x2f810>
   36c10:	add	r3, r3, #12
   36c14:	str	r3, [sp]
   36c18:	add	r2, pc, r2
   36c1c:	ldr	r3, [pc, #264]	; 36d2c <blkid_probe_get_size@plt+0x2f814>
   36c20:	add	r1, pc, r1
   36c24:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   36c28:	mvn	r4, #21
   36c2c:	ldr	r0, [fp, #-172]	; 0xffffff54
   36c30:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36c34:	ldr	r0, [fp, #-172]	; 0xffffff54
   36c38:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36c3c:	ldr	r3, [pc, #236]	; 36d30 <blkid_probe_get_size@plt+0x2f818>
   36c40:	sub	ip, fp, #56	; 0x38
   36c44:	add	r3, pc, r3
   36c48:	ldmib	r3, {r0, r1, r2, r3}
   36c4c:	stm	ip, {r0, r1, r2, r3}
   36c50:	mov	r0, ip
   36c54:	mov	r1, sl
   36c58:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   36c5c:	cmp	r0, #0
   36c60:	beq	36cf4 <blkid_probe_get_size@plt+0x2f7dc>
   36c64:	mov	r0, r4
   36c68:	sub	r1, fp, #172	; 0xac
   36c6c:	bl	2cf8c <blkid_probe_get_size@plt+0x25a74>
   36c70:	subs	r4, r0, #0
   36c74:	blt	36c34 <blkid_probe_get_size@plt+0x2f71c>
   36c78:	ldr	r2, [fp, #-172]	; 0xffffff54
   36c7c:	mov	r1, sl
   36c80:	mov	r0, r6
   36c84:	bl	2c604 <blkid_probe_get_size@plt+0x250ec>
   36c88:	subs	r4, r0, #0
   36c8c:	blt	36c34 <blkid_probe_get_size@plt+0x2f71c>
   36c90:	ldr	r3, [fp, #-172]	; 0xffffff54
   36c94:	mov	r0, #0
   36c98:	mov	r4, r0
   36c9c:	str	r3, [r9]
   36ca0:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36ca4:	mov	r2, r8
   36ca8:	mov	r1, sl
   36cac:	mov	r0, r6
   36cb0:	bl	2c604 <blkid_probe_get_size@plt+0x250ec>
   36cb4:	subs	r4, r0, #0
   36cb8:	mvnge	r4, #1
   36cbc:	ldr	r0, [fp, #-172]	; 0xffffff54
   36cc0:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36cc4:	ldr	r2, [pc, #104]	; 36d34 <blkid_probe_get_size@plt+0x2f81c>
   36cc8:	ldr	r1, [pc, #104]	; 36d38 <blkid_probe_get_size@plt+0x2f820>
   36ccc:	add	r2, pc, r2
   36cd0:	add	r2, r2, #2576	; 0xa10
   36cd4:	add	r2, r2, #12
   36cd8:	str	r2, [sp]
   36cdc:	ldr	r2, [pc, #88]	; 36d3c <blkid_probe_get_size@plt+0x2f824>
   36ce0:	ldr	r3, [pc, #88]	; 36d40 <blkid_probe_get_size@plt+0x2f828>
   36ce4:	add	r2, pc, r2
   36ce8:	add	r1, pc, r1
   36cec:	mov	r0, #0
   36cf0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36cf4:	ldr	r0, [fp, #-172]	; 0xffffff54
   36cf8:	mvn	r4, #21
   36cfc:	b	36a3c <blkid_probe_get_size@plt+0x2f524>
   36d00:	bl	6fb4 <__stack_chk_fail@plt>
   36d04:	muleq	r6, ip, r1
   36d08:	andeq	r0, r0, ip, lsr r4
   36d0c:	andeq	r1, r4, r4, asr #10
   36d10:	andeq	r5, r3, r0, lsr ip
   36d14:	andeq	r4, r3, ip, ror r3
   36d18:	ldrdeq	lr, [r2], -r0
   36d1c:	andeq	r0, r0, r4, asr #13
   36d20:	strdeq	r5, [r3], -r8
   36d24:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   36d28:	muleq	r3, r4, r6
   36d2c:	andeq	r0, r0, r5, asr #13
   36d30:	andeq	r1, r6, ip, lsr #8
   36d34:	andeq	r5, r3, ip, lsr #22
   36d38:			; <UNDEFINED> instruction: 0x0002e3b0
   36d3c:	andeq	lr, r2, ip, asr #29
   36d40:	ldrdeq	r0, [r0], -fp
   36d44:	ldr	r3, [pc, #620]	; 36fb8 <blkid_probe_get_size@plt+0x2faa0>
   36d48:	ldr	r2, [pc, #620]	; 36fbc <blkid_probe_get_size@plt+0x2faa4>
   36d4c:	add	r3, pc, r3
   36d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d54:	add	fp, sp, #32
   36d58:	sub	sp, sp, #156	; 0x9c
   36d5c:	ldr	r4, [r3, r2]
   36d60:	subs	r5, r0, #0
   36d64:	ldr	r3, [r4]
   36d68:	str	r3, [fp, #-40]	; 0xffffffd8
   36d6c:	beq	36de0 <blkid_probe_get_size@plt+0x2f8c8>
   36d70:	ldrb	r3, [r5, #212]	; 0xd4
   36d74:	ands	r6, r3, #2
   36d78:	movne	r9, #0
   36d7c:	beq	36d9c <blkid_probe_get_size@plt+0x2f884>
   36d80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36d84:	ldr	r3, [r4]
   36d88:	mov	r0, r9
   36d8c:	cmp	r2, r3
   36d90:	bne	36fb4 <blkid_probe_get_size@plt+0x2fa9c>
   36d94:	sub	sp, fp, #32
   36d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d9c:	sub	r1, fp, #160	; 0xa0
   36da0:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   36da4:	subs	r9, r0, #0
   36da8:	blt	36d80 <blkid_probe_get_size@plt+0x2f868>
   36dac:	ldr	r0, [fp, #-160]	; 0xffffff60
   36db0:	bl	6ca8 <opendir@plt>
   36db4:	subs	r7, r0, #0
   36db8:	beq	36e0c <blkid_probe_get_size@plt+0x2f8f4>
   36dbc:	ldr	r1, [pc, #508]	; 36fc0 <blkid_probe_get_size@plt+0x2faa8>
   36dc0:	add	r0, r5, #48	; 0x30
   36dc4:	add	r1, pc, r1
   36dc8:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   36dcc:	subs	r9, r0, #0
   36dd0:	bge	36e1c <blkid_probe_get_size@plt+0x2f904>
   36dd4:	mov	r0, r7
   36dd8:	bl	6aa4 <closedir@plt>
   36ddc:	b	36d80 <blkid_probe_get_size@plt+0x2f868>
   36de0:	ldr	r2, [pc, #476]	; 36fc4 <blkid_probe_get_size@plt+0x2faac>
   36de4:	ldr	r1, [pc, #476]	; 36fc8 <blkid_probe_get_size@plt+0x2fab0>
   36de8:	add	r2, pc, r2
   36dec:	add	r2, r2, #2608	; 0xa30
   36df0:	add	r2, r2, #8
   36df4:	str	r2, [sp]
   36df8:	ldr	r2, [pc, #460]	; 36fcc <blkid_probe_get_size@plt+0x2fab4>
   36dfc:	ldr	r3, [pc, #460]	; 36fd0 <blkid_probe_get_size@plt+0x2fab8>
   36e00:	add	r2, pc, r2
   36e04:	add	r1, pc, r1
   36e08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36e0c:	bl	732c <__errno_location@plt>
   36e10:	ldr	r9, [r0]
   36e14:	rsb	r9, r9, #0
   36e18:	b	36d80 <blkid_probe_get_size@plt+0x2f868>
   36e1c:	bl	732c <__errno_location@plt>
   36e20:	mov	r3, r0
   36e24:	str	r0, [fp, #-168]	; 0xffffff58
   36e28:	str	r6, [r3]
   36e2c:	mov	r0, r7
   36e30:	bl	6bb8 <readdir64@plt>
   36e34:	cmp	r0, #0
   36e38:	beq	36f60 <blkid_probe_get_size@plt+0x2fa48>
   36e3c:	ldr	r3, [pc, #400]	; 36fd4 <blkid_probe_get_size@plt+0x2fabc>
   36e40:	sub	r8, fp, #52	; 0x34
   36e44:	add	r3, pc, r3
   36e48:	str	r3, [fp, #-176]	; 0xffffff50
   36e4c:	b	36e74 <blkid_probe_get_size@plt+0x2f95c>
   36e50:	cmp	r3, #10
   36e54:	beq	36e80 <blkid_probe_get_size@plt+0x2f968>
   36e58:	ldr	r2, [fp, #-168]	; 0xffffff58
   36e5c:	mov	r3, #0
   36e60:	mov	r0, r7
   36e64:	str	r3, [r2]
   36e68:	bl	6bb8 <readdir64@plt>
   36e6c:	cmp	r0, #0
   36e70:	beq	36f60 <blkid_probe_get_size@plt+0x2fa48>
   36e74:	ldrb	r3, [r0, #18]
   36e78:	cmp	r3, #8
   36e7c:	bne	36e50 <blkid_probe_get_size@plt+0x2f938>
   36e80:	ldr	sl, [fp, #-160]	; 0xffffff60
   36e84:	add	r3, r0, #19
   36e88:	str	r3, [fp, #-172]	; 0xffffff54
   36e8c:	str	r3, [fp, #-44]	; 0xffffffd4
   36e90:	mov	r0, sl
   36e94:	ldr	r3, [fp, #-176]	; 0xffffff50
   36e98:	mov	r6, #0
   36e9c:	cmp	r0, #0
   36ea0:	str	r3, [fp, #-48]	; 0xffffffd0
   36ea4:	str	sl, [fp, #-52]	; 0xffffffcc
   36ea8:	mov	r9, r6
   36eac:	beq	36ed0 <blkid_probe_get_size@plt+0x2f9b8>
   36eb0:	bl	723c <strlen@plt>
   36eb4:	add	r6, r6, #1
   36eb8:	cmp	r6, #3
   36ebc:	add	r9, r9, r0
   36ec0:	beq	36ed0 <blkid_probe_get_size@plt+0x2f9b8>
   36ec4:	ldr	r0, [r8, r6, lsl #2]
   36ec8:	cmp	r0, #0
   36ecc:	bne	36eb0 <blkid_probe_get_size@plt+0x2f998>
   36ed0:	add	r3, r9, #1
   36ed4:	cmp	r3, #4194304	; 0x400000
   36ed8:	bhi	36f84 <blkid_probe_get_size@plt+0x2fa6c>
   36edc:	add	r9, r9, #15
   36ee0:	bic	r9, r9, #7
   36ee4:	sub	sp, sp, r9
   36ee8:	add	r9, sp, #8
   36eec:	cmp	sl, #0
   36ef0:	mov	r0, r9
   36ef4:	mov	r6, #0
   36ef8:	beq	36f1c <blkid_probe_get_size@plt+0x2fa04>
   36efc:	mov	r1, sl
   36f00:	add	r6, r6, #1
   36f04:	bl	6ae0 <stpcpy@plt>
   36f08:	cmp	r6, #3
   36f0c:	beq	36f1c <blkid_probe_get_size@plt+0x2fa04>
   36f10:	ldr	sl, [r8, r6, lsl #2]
   36f14:	cmp	sl, #0
   36f18:	bne	36efc <blkid_probe_get_size@plt+0x2f9e4>
   36f1c:	mov	r3, #0
   36f20:	strb	r3, [r0]
   36f24:	mov	r1, r9
   36f28:	sub	r2, fp, #156	; 0x9c
   36f2c:	mov	r0, #3
   36f30:	bl	7368 <__lxstat64@plt>
   36f34:	cmp	r0, #0
   36f38:	bne	36e58 <blkid_probe_get_size@plt+0x2f940>
   36f3c:	ldr	r3, [fp, #-140]	; 0xffffff74
   36f40:	tst	r3, #256	; 0x100
   36f44:	beq	36e58 <blkid_probe_get_size@plt+0x2f940>
   36f48:	ldr	r1, [fp, #-172]	; 0xffffff54
   36f4c:	ldr	r0, [r5, #48]	; 0x30
   36f50:	bl	43db8 <blkid_probe_get_size@plt+0x3c8a0>
   36f54:	subs	r9, r0, #0
   36f58:	bge	36e58 <blkid_probe_get_size@plt+0x2f940>
   36f5c:	b	36dd4 <blkid_probe_get_size@plt+0x2f8bc>
   36f60:	ldr	r3, [fp, #-168]	; 0xffffff58
   36f64:	ldr	r9, [r3]
   36f68:	cmp	r9, #0
   36f6c:	rsbgt	r9, r9, #0
   36f70:	ldrble	r3, [r5, #212]	; 0xd4
   36f74:	movle	r9, #0
   36f78:	orrle	r3, r3, #2
   36f7c:	strble	r3, [r5, #212]	; 0xd4
   36f80:	b	36dd4 <blkid_probe_get_size@plt+0x2f8bc>
   36f84:	ldr	r2, [pc, #76]	; 36fd8 <blkid_probe_get_size@plt+0x2fac0>
   36f88:	ldr	r1, [pc, #76]	; 36fdc <blkid_probe_get_size@plt+0x2fac4>
   36f8c:	add	r2, pc, r2
   36f90:	add	r2, r2, #2608	; 0xa30
   36f94:	add	r2, r2, #8
   36f98:	str	r2, [sp]
   36f9c:	ldr	r2, [pc, #60]	; 36fe0 <blkid_probe_get_size@plt+0x2fac8>
   36fa0:	ldr	r3, [pc, #60]	; 36fe4 <blkid_probe_get_size@plt+0x2facc>
   36fa4:	add	r2, pc, r2
   36fa8:	add	r1, pc, r1
   36fac:	mov	r0, #0
   36fb0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   36fb4:	bl	6fb4 <__stack_chk_fail@plt>
   36fb8:	andeq	r0, r6, ip, lsl lr
   36fbc:	andeq	r0, r0, ip, lsr r4
   36fc0:	andeq	r0, r6, r4, ror #24
   36fc4:	andeq	r5, r3, r0, lsl sl
   36fc8:	andeq	r4, r3, ip, asr r1
   36fcc:			; <UNDEFINED> instruction: 0x0002edb0
   36fd0:	andeq	r0, r0, r8, lsr #12
   36fd4:	andeq	r1, r4, ip, ror r1
   36fd8:	andeq	r5, r3, ip, ror #16
   36fdc:	strdeq	lr, [r2], -r0
   36fe0:	andeq	lr, r2, ip, lsl #24
   36fe4:	andeq	r0, r0, r1, asr #12
   36fe8:	ldr	r3, [pc, #724]	; 372c4 <blkid_probe_get_size@plt+0x2fdac>
   36fec:	ldr	r2, [pc, #724]	; 372c8 <blkid_probe_get_size@plt+0x2fdb0>
   36ff0:	add	r3, pc, r3
   36ff4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36ff8:	add	fp, sp, #28
   36ffc:	sub	sp, sp, #48	; 0x30
   37000:	ldr	r6, [r3, r2]
   37004:	subs	r7, r0, #0
   37008:	ldr	r3, [r6]
   3700c:	str	r3, [fp, #-32]	; 0xffffffe0
   37010:	beq	37160 <blkid_probe_get_size@plt+0x2fc48>
   37014:	ldrb	r3, [r7, #213]	; 0xd5
   37018:	mov	r5, r1
   3701c:	ands	r4, r3, #1
   37020:	beq	37054 <blkid_probe_get_size@plt+0x2fb3c>
   37024:	ldr	r3, [r7, #180]	; 0xb4
   37028:	cmp	r3, #0
   3702c:	movne	r8, #0
   37030:	mvneq	r8, #1
   37034:	strne	r3, [r5]
   37038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3703c:	ldr	r3, [r6]
   37040:	mov	r0, r8
   37044:	cmp	r2, r3
   37048:	bne	372c0 <blkid_probe_get_size@plt+0x2fda8>
   3704c:	sub	sp, fp, #28
   37050:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37054:	sub	r1, fp, #44	; 0x2c
   37058:	str	r4, [fp, #-40]	; 0xffffffd8
   3705c:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   37060:	subs	r8, r0, #0
   37064:	blt	37154 <blkid_probe_get_size@plt+0x2fc3c>
   37068:	ldr	r8, [fp, #-44]	; 0xffffffd4
   3706c:	cmp	r8, #0
   37070:	beq	37268 <blkid_probe_get_size@plt+0x2fd50>
   37074:	mov	r0, r8
   37078:	bl	723c <strlen@plt>
   3707c:	add	r3, r0, #8
   37080:	cmp	r3, #4194304	; 0x400000
   37084:	bhi	371b4 <blkid_probe_get_size@plt+0x2fc9c>
   37088:	add	r0, r0, #22
   3708c:	bic	r0, r0, #7
   37090:	sub	sp, sp, r0
   37094:	add	r9, sp, #32
   37098:	mov	r1, r8
   3709c:	mov	r0, r9
   370a0:	bl	6ae0 <stpcpy@plt>
   370a4:	ldr	r3, [pc, #544]	; 372cc <blkid_probe_get_size@plt+0x2fdb4>
   370a8:	add	r3, pc, r3
   370ac:	mov	r2, r0
   370b0:	add	ip, r0, #7
   370b4:	ldm	r3!, {r0, r1}
   370b8:	str	r0, [r2]
   370bc:	str	r1, [r2, #4]
   370c0:	mov	r4, #0
   370c4:	mov	r0, r9
   370c8:	strb	r4, [ip]
   370cc:	sub	r1, fp, #40	; 0x28
   370d0:	bl	2cf8c <blkid_probe_get_size@plt+0x25a74>
   370d4:	subs	r8, r0, #0
   370d8:	bge	37194 <blkid_probe_get_size@plt+0x2fc7c>
   370dc:	cmn	r8, #2
   370e0:	beq	371e4 <blkid_probe_get_size@plt+0x2fccc>
   370e4:	ldr	r3, [pc, #484]	; 372d0 <blkid_probe_get_size@plt+0x2fdb8>
   370e8:	str	r4, [fp, #-36]	; 0xffffffdc
   370ec:	add	r3, pc, r3
   370f0:	ldr	r3, [r3]
   370f4:	cmp	r3, #6
   370f8:	bgt	37278 <blkid_probe_get_size@plt+0x2fd60>
   370fc:	mov	r1, r4
   37100:	ldr	r3, [pc, #460]	; 372d4 <blkid_probe_get_size@plt+0x2fdbc>
   37104:	ldr	r2, [pc, #460]	; 372d8 <blkid_probe_get_size@plt+0x2fdc0>
   37108:	ldr	r0, [r7, #160]	; 0xa0
   3710c:	add	r2, pc, r2
   37110:	add	r3, pc, r3
   37114:	str	r2, [sp, #20]
   37118:	add	r3, r3, #2656	; 0xa60
   3711c:	ldr	r2, [pc, #440]	; 372dc <blkid_probe_get_size@plt+0x2fdc4>
   37120:	add	r3, r3, #12
   37124:	str	r0, [sp, #24]
   37128:	mov	r0, #0
   3712c:	stmib	sp, {r1, r4}
   37130:	str	r3, [sp]
   37134:	mov	r1, r8
   37138:	str	r0, [sp, #16]
   3713c:	str	r0, [sp, #12]
   37140:	ldr	r3, [pc, #408]	; 372e0 <blkid_probe_get_size@plt+0x2fdc8>
   37144:	add	r2, pc, r2
   37148:	mov	r0, #7
   3714c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   37150:	mov	r8, r0
   37154:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37158:	bl	69f0 <free@plt>
   3715c:	b	37038 <blkid_probe_get_size@plt+0x2fb20>
   37160:	ldr	r2, [pc, #380]	; 372e4 <blkid_probe_get_size@plt+0x2fdcc>
   37164:	ldr	r1, [pc, #380]	; 372e8 <blkid_probe_get_size@plt+0x2fdd0>
   37168:	add	r2, pc, r2
   3716c:	add	r2, r2, #2640	; 0xa50
   37170:	add	r2, r2, #4
   37174:	str	r2, [sp]
   37178:	ldr	r2, [pc, #364]	; 372ec <blkid_probe_get_size@plt+0x2fdd4>
   3717c:	mov	r3, #920	; 0x398
   37180:	add	r2, pc, r2
   37184:	add	r1, pc, r1
   37188:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3718c:	mvn	r8, #21
   37190:	b	37038 <blkid_probe_get_size@plt+0x2fb20>
   37194:	ldr	r1, [fp, #-40]	; 0xffffffd8
   37198:	mov	r0, r7
   3719c:	bl	3633c <blkid_probe_get_size@plt+0x2ee24>
   371a0:	subs	r8, r0, #0
   371a4:	blt	371f4 <blkid_probe_get_size@plt+0x2fcdc>
   371a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   371ac:	bl	69f0 <free@plt>
   371b0:	b	37024 <blkid_probe_get_size@plt+0x2fb0c>
   371b4:	ldr	r3, [pc, #308]	; 372f0 <blkid_probe_get_size@plt+0x2fdd8>
   371b8:	ldr	r2, [pc, #308]	; 372f4 <blkid_probe_get_size@plt+0x2fddc>
   371bc:	add	r3, pc, r3
   371c0:	add	r3, r3, #2640	; 0xa50
   371c4:	ldr	r1, [pc, #300]	; 372f8 <blkid_probe_get_size@plt+0x2fde0>
   371c8:	add	r3, r3, #4
   371cc:	str	r3, [sp]
   371d0:	mov	r0, r4
   371d4:	ldr	r3, [pc, #288]	; 372fc <blkid_probe_get_size@plt+0x2fde4>
   371d8:	add	r2, pc, r2
   371dc:	add	r1, pc, r1
   371e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   371e4:	ldrb	r3, [r7, #213]	; 0xd5
   371e8:	orr	r3, r3, #1
   371ec:	strb	r3, [r7, #213]	; 0xd5
   371f0:	b	371a8 <blkid_probe_get_size@plt+0x2fc90>
   371f4:	ldr	r3, [pc, #260]	; 37300 <blkid_probe_get_size@plt+0x2fde8>
   371f8:	str	r4, [fp, #-36]	; 0xffffffdc
   371fc:	add	r3, pc, r3
   37200:	ldr	r3, [r3]
   37204:	cmp	r3, #6
   37208:	bgt	3729c <blkid_probe_get_size@plt+0x2fd84>
   3720c:	mov	r1, r4
   37210:	ldr	r3, [pc, #236]	; 37304 <blkid_probe_get_size@plt+0x2fdec>
   37214:	ldr	r2, [pc, #236]	; 37308 <blkid_probe_get_size@plt+0x2fdf0>
   37218:	ldr	r0, [r7, #160]	; 0xa0
   3721c:	add	r2, pc, r2
   37220:	add	r3, pc, r3
   37224:	str	r2, [sp, #20]
   37228:	add	r3, r3, #2656	; 0xa60
   3722c:	ldr	r2, [pc, #216]	; 3730c <blkid_probe_get_size@plt+0x2fdf4>
   37230:	add	r3, r3, #12
   37234:	str	r0, [sp, #24]
   37238:	mov	r0, #0
   3723c:	stmib	sp, {r1, r4}
   37240:	str	r3, [sp]
   37244:	mov	r1, r8
   37248:	str	r0, [sp, #16]
   3724c:	str	r0, [sp, #12]
   37250:	ldr	r3, [pc, #184]	; 37310 <blkid_probe_get_size@plt+0x2fdf8>
   37254:	add	r2, pc, r2
   37258:	mov	r0, #7
   3725c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   37260:	mov	r8, r0
   37264:	b	37154 <blkid_probe_get_size@plt+0x2fc3c>
   37268:	sub	sp, sp, #8
   3726c:	add	ip, sp, #32
   37270:	mov	r9, ip
   37274:	b	370c0 <blkid_probe_get_size@plt+0x2fba8>
   37278:	sub	r1, fp, #36	; 0x24
   3727c:	mov	r0, r7
   37280:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   37284:	ldr	r4, [fp, #-36]	; 0xffffffdc
   37288:	cmp	r4, #0
   3728c:	beq	370fc <blkid_probe_get_size@plt+0x2fbe4>
   37290:	ldr	r1, [pc, #124]	; 37314 <blkid_probe_get_size@plt+0x2fdfc>
   37294:	add	r1, pc, r1
   37298:	b	37100 <blkid_probe_get_size@plt+0x2fbe8>
   3729c:	sub	r1, fp, #36	; 0x24
   372a0:	mov	r0, r7
   372a4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   372a8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   372ac:	cmp	r4, #0
   372b0:	beq	3720c <blkid_probe_get_size@plt+0x2fcf4>
   372b4:	ldr	r1, [pc, #92]	; 37318 <blkid_probe_get_size@plt+0x2fe00>
   372b8:	add	r1, pc, r1
   372bc:	b	37210 <blkid_probe_get_size@plt+0x2fcf8>
   372c0:	bl	6fb4 <__stack_chk_fail@plt>
   372c4:	andeq	r0, r6, r8, ror fp
   372c8:	andeq	r0, r0, ip, lsr r4
   372cc:			; <UNDEFINED> instruction: 0x000376b0
   372d0:	andeq	r1, r6, r0, asr r0
   372d4:	andeq	r5, r3, r8, ror #13
   372d8:	andeq	r7, r3, r0, lsr #12
   372dc:	andeq	lr, r2, ip, ror #20
   372e0:	andeq	r0, r0, lr, lsr #7
   372e4:	muleq	r3, r0, r6
   372e8:	ldrdeq	r3, [r3], -ip
   372ec:	andeq	lr, r2, r0, lsr sl
   372f0:	andeq	r5, r3, ip, lsr r6
   372f4:	ldrdeq	lr, [r2], -r8
   372f8:			; <UNDEFINED> instruction: 0x0002debc
   372fc:	andeq	r0, r0, r5, lsr #7
   37300:	andeq	r0, r6, r0, asr #30
   37304:	ldrdeq	r5, [r3], -r8
   37308:	andeq	r7, r3, r0, lsl r5
   3730c:	andeq	lr, r2, ip, asr r9
   37310:	andeq	r0, r0, sl, lsr #7
   37314:	andeq	sp, r2, r4, lsr #25
   37318:	andeq	sp, r2, r0, lsl #25
   3731c:	ldr	r3, [pc, #1228]	; 377f0 <blkid_probe_get_size@plt+0x302d8>
   37320:	ldr	r2, [pc, #1228]	; 377f4 <blkid_probe_get_size@plt+0x302dc>
   37324:	add	r3, pc, r3
   37328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3732c:	add	fp, sp, #32
   37330:	sub	sp, sp, #68	; 0x44
   37334:	ldr	r4, [r3, r2]
   37338:	subs	r5, r0, #0
   3733c:	ldr	r3, [r4]
   37340:	str	r3, [fp, #-40]	; 0xffffffd8
   37344:	beq	37598 <blkid_probe_get_size@plt+0x30080>
   37348:	mov	r6, r1
   3734c:	sub	r1, fp, #68	; 0x44
   37350:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   37354:	subs	r7, r0, #0
   37358:	blt	374b0 <blkid_probe_get_size@plt+0x2ff98>
   3735c:	ldrb	r3, [r5, #212]	; 0xd4
   37360:	lsr	r0, r3, #6
   37364:	ands	r7, r0, #1
   37368:	bne	374cc <blkid_probe_get_size@plt+0x2ffb4>
   3736c:	ldr	r8, [fp, #-68]	; 0xffffffbc
   37370:	str	r7, [fp, #-64]	; 0xffffffc0
   37374:	cmp	r8, #0
   37378:	beq	37724 <blkid_probe_get_size@plt+0x3020c>
   3737c:	mov	r0, r8
   37380:	bl	723c <strlen@plt>
   37384:	add	r3, r0, #11
   37388:	cmp	r3, #4194304	; 0x400000
   3738c:	bhi	376f4 <blkid_probe_get_size@plt+0x301dc>
   37390:	add	r0, r0, #25
   37394:	bic	r0, r0, #7
   37398:	sub	sp, sp, r0
   3739c:	add	r7, sp, #32
   373a0:	mov	r1, r8
   373a4:	mov	r0, r7
   373a8:	bl	6ae0 <stpcpy@plt>
   373ac:	ldr	r3, [pc, #1092]	; 377f8 <blkid_probe_get_size@plt+0x302e0>
   373b0:	add	r3, pc, r3
   373b4:	mov	r2, r0
   373b8:	mov	ip, r0
   373bc:	ldm	r3!, {r0, r1}
   373c0:	ldrh	lr, [r3]
   373c4:	ldrb	r3, [r3, #2]
   373c8:	str	r0, [r2]
   373cc:	str	r1, [r2, #4]
   373d0:	strh	lr, [r2, #8]
   373d4:	strb	r3, [ip, #10]!
   373d8:	mov	r8, #0
   373dc:	mov	r0, r7
   373e0:	strb	r8, [ip]
   373e4:	sub	r1, fp, #64	; 0x40
   373e8:	bl	2cf8c <blkid_probe_get_size@plt+0x25a74>
   373ec:	subs	r7, r0, #0
   373f0:	bge	37584 <blkid_probe_get_size@plt+0x3006c>
   373f4:	ldr	r9, [r5, #160]	; 0xa0
   373f8:	ldr	r1, [pc, #1020]	; 377fc <blkid_probe_get_size@plt+0x302e4>
   373fc:	mov	r0, r9
   37400:	add	r1, pc, r1
   37404:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   37408:	cmp	r0, #0
   3740c:	beq	375f0 <blkid_probe_get_size@plt+0x300d8>
   37410:	ldr	r1, [pc, #1000]	; 37800 <blkid_probe_get_size@plt+0x302e8>
   37414:	mov	r0, r5
   37418:	add	r1, pc, r1
   3741c:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
   37420:	mov	r7, r0
   37424:	adds	r3, r7, #2
   37428:	movne	r3, #1
   3742c:	ands	r3, r3, r7, lsr #31
   37430:	beq	375cc <blkid_probe_get_size@plt+0x300b4>
   37434:	ldr	r3, [pc, #968]	; 37804 <blkid_probe_get_size@plt+0x302ec>
   37438:	mov	r2, #0
   3743c:	add	r3, pc, r3
   37440:	str	r2, [fp, #-60]	; 0xffffffc4
   37444:	ldr	r3, [r3]
   37448:	cmp	r3, #6
   3744c:	bgt	37734 <blkid_probe_get_size@plt+0x3021c>
   37450:	mov	r1, r2
   37454:	ldr	r3, [pc, #940]	; 37808 <blkid_probe_get_size@plt+0x302f0>
   37458:	ldr	ip, [r5, #160]	; 0xa0
   3745c:	add	r3, pc, r3
   37460:	ldr	r0, [pc, #932]	; 3780c <blkid_probe_get_size@plt+0x302f4>
   37464:	stmib	sp, {r1, r2}
   37468:	add	r3, r3, #2704	; 0xa90
   3746c:	ldr	r2, [pc, #924]	; 37810 <blkid_probe_get_size@plt+0x302f8>
   37470:	add	r0, pc, r0
   37474:	add	r3, r3, #12
   37478:	str	ip, [sp, #24]
   3747c:	mov	ip, #0
   37480:	mov	r1, r7
   37484:	str	r3, [sp]
   37488:	str	r0, [sp, #20]
   3748c:	str	ip, [sp, #16]
   37490:	str	ip, [sp, #12]
   37494:	ldr	r3, [pc, #888]	; 37814 <blkid_probe_get_size@plt+0x302fc>
   37498:	add	r2, pc, r2
   3749c:	mov	r0, #7
   374a0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   374a4:	mov	r7, r0
   374a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   374ac:	bl	69f0 <free@plt>
   374b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   374b4:	ldr	r3, [r4]
   374b8:	mov	r0, r7
   374bc:	cmp	r2, r3
   374c0:	bne	377ec <blkid_probe_get_size@plt+0x302d4>
   374c4:	sub	sp, fp, #32
   374c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   374cc:	lsrs	r3, r3, #7
   374d0:	bne	3756c <blkid_probe_get_size@plt+0x30054>
   374d4:	ldr	r1, [pc, #828]	; 37818 <blkid_probe_get_size@plt+0x30300>
   374d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   374dc:	add	r1, pc, r1
   374e0:	bl	7050 <strstr@plt>
   374e4:	mov	r8, r0
   374e8:	cmp	r8, #0
   374ec:	beq	37560 <blkid_probe_get_size@plt+0x30048>
   374f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   374f4:	sub	r1, r8, r0
   374f8:	bl	68dc <strndup@plt>
   374fc:	subs	r8, r0, #0
   37500:	beq	376ec <blkid_probe_get_size@plt+0x301d4>
   37504:	mov	r1, #47	; 0x2f
   37508:	bl	7410 <strrchr@plt>
   3750c:	subs	r3, r0, #0
   37510:	beq	37664 <blkid_probe_get_size@plt+0x3014c>
   37514:	adds	r0, r3, #1
   37518:	beq	37790 <blkid_probe_get_size@plt+0x30278>
   3751c:	ldrb	r3, [r3, #1]
   37520:	cmp	r3, #0
   37524:	beq	377bc <blkid_probe_get_size@plt+0x302a4>
   37528:	bl	74e8 <strdup@plt>
   3752c:	subs	r9, r0, #0
   37530:	beq	376ec <blkid_probe_get_size@plt+0x301d4>
   37534:	ldr	r1, [pc, #736]	; 3781c <blkid_probe_get_size@plt+0x30304>
   37538:	mov	r0, r5
   3753c:	add	r1, pc, r1
   37540:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
   37544:	subs	r7, r0, #0
   37548:	blt	37758 <blkid_probe_get_size@plt+0x30240>
   3754c:	ldr	r0, [r5, #176]	; 0xb0
   37550:	bl	69f0 <free@plt>
   37554:	str	r9, [r5, #176]	; 0xb0
   37558:	mov	r0, r8
   3755c:	bl	69f0 <free@plt>
   37560:	ldrb	r3, [r5, #212]	; 0xd4
   37564:	orr	r3, r3, #128	; 0x80
   37568:	strb	r3, [r5, #212]	; 0xd4
   3756c:	ldr	r3, [r5, #172]	; 0xac
   37570:	cmp	r3, #0
   37574:	strne	r3, [r6]
   37578:	movne	r7, #0
   3757c:	mvneq	r7, #1
   37580:	b	374b0 <blkid_probe_get_size@plt+0x2ff98>
   37584:	ldr	r1, [fp, #-64]	; 0xffffffc0
   37588:	mov	r0, r5
   3758c:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
   37590:	mov	r7, r0
   37594:	b	37424 <blkid_probe_get_size@plt+0x2ff0c>
   37598:	ldr	r2, [pc, #640]	; 37820 <blkid_probe_get_size@plt+0x30308>
   3759c:	ldr	r1, [pc, #640]	; 37824 <blkid_probe_get_size@plt+0x3030c>
   375a0:	add	r2, pc, r2
   375a4:	add	r2, r2, #2688	; 0xa80
   375a8:	add	r2, r2, #4
   375ac:	str	r2, [sp]
   375b0:	ldr	r2, [pc, #624]	; 37828 <blkid_probe_get_size@plt+0x30310>
   375b4:	ldr	r3, [pc, #624]	; 3782c <blkid_probe_get_size@plt+0x30314>
   375b8:	add	r2, pc, r2
   375bc:	add	r1, pc, r1
   375c0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   375c4:	mvn	r7, #21
   375c8:	b	374b0 <blkid_probe_get_size@plt+0x2ff98>
   375cc:	ldrb	r3, [r5, #212]	; 0xd4
   375d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   375d4:	orr	r3, r3, #64	; 0x40
   375d8:	strb	r3, [r5, #212]	; 0xd4
   375dc:	bl	69f0 <free@plt>
   375e0:	ldrb	r3, [r5, #212]	; 0xd4
   375e4:	lsrs	r3, r3, #7
   375e8:	bne	3756c <blkid_probe_get_size@plt+0x30054>
   375ec:	b	374e8 <blkid_probe_get_size@plt+0x2ffd0>
   375f0:	ldr	r1, [pc, #568]	; 37830 <blkid_probe_get_size@plt+0x30318>
   375f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   375f8:	add	r1, pc, r1
   375fc:	bl	7050 <strstr@plt>
   37600:	subs	r8, r0, #0
   37604:	bne	37424 <blkid_probe_get_size@plt+0x2ff0c>
   37608:	ldr	r3, [pc, #548]	; 37834 <blkid_probe_get_size@plt+0x3031c>
   3760c:	sub	sl, fp, #56	; 0x38
   37610:	add	r3, pc, r3
   37614:	add	r3, r3, #20
   37618:	ldm	r3, {r0, r1, r2, r3}
   3761c:	cmp	r0, #0
   37620:	stm	sl, {r0, r1, r2, r3}
   37624:	mov	r1, r0
   37628:	bne	3763c <blkid_probe_get_size@plt+0x30124>
   3762c:	b	37424 <blkid_probe_get_size@plt+0x2ff0c>
   37630:	ldr	r1, [sl, #4]!
   37634:	cmp	r1, #0
   37638:	beq	37424 <blkid_probe_get_size@plt+0x2ff0c>
   3763c:	mov	r0, r9
   37640:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   37644:	cmp	r0, #0
   37648:	beq	37630 <blkid_probe_get_size@plt+0x30118>
   3764c:	ldr	r1, [pc, #484]	; 37838 <blkid_probe_get_size@plt+0x30320>
   37650:	mov	r0, r5
   37654:	add	r1, pc, r1
   37658:	bl	36550 <blkid_probe_get_size@plt+0x2f038>
   3765c:	mov	r7, r0
   37660:	b	37424 <blkid_probe_get_size@plt+0x2ff0c>
   37664:	mvn	r7, #21
   37668:	ldr	r3, [pc, #460]	; 3783c <blkid_probe_get_size@plt+0x30324>
   3766c:	mov	r2, #0
   37670:	add	r3, pc, r3
   37674:	str	r2, [fp, #-60]	; 0xffffffc4
   37678:	ldr	r3, [r3]
   3767c:	cmp	r3, #6
   37680:	bgt	3776c <blkid_probe_get_size@plt+0x30254>
   37684:	mov	r1, r2
   37688:	ldr	r0, [r5, #160]	; 0xa0
   3768c:	ldr	r3, [pc, #428]	; 37840 <blkid_probe_get_size@plt+0x30328>
   37690:	str	r0, [sp, #24]
   37694:	add	r3, pc, r3
   37698:	ldr	r0, [pc, #420]	; 37844 <blkid_probe_get_size@plt+0x3032c>
   3769c:	add	r3, r3, #2704	; 0xa90
   376a0:	add	r3, r3, #12
   376a4:	add	r0, pc, r0
   376a8:	str	r2, [sp, #8]
   376ac:	str	r3, [sp]
   376b0:	mov	r2, #0
   376b4:	mov	r3, r0
   376b8:	str	r2, [sp, #12]
   376bc:	strd	r2, [sp, #16]
   376c0:	ldr	r2, [pc, #384]	; 37848 <blkid_probe_get_size@plt+0x30330>
   376c4:	str	r1, [sp, #4]
   376c8:	mov	r3, #820	; 0x334
   376cc:	mov	r1, r7
   376d0:	add	r2, pc, r2
   376d4:	mov	r0, #7
   376d8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   376dc:	mov	r7, r0
   376e0:	mov	r0, r8
   376e4:	bl	69f0 <free@plt>
   376e8:	b	374b0 <blkid_probe_get_size@plt+0x2ff98>
   376ec:	mvn	r7, #11
   376f0:	b	37668 <blkid_probe_get_size@plt+0x30150>
   376f4:	ldr	r3, [pc, #336]	; 3784c <blkid_probe_get_size@plt+0x30334>
   376f8:	ldr	r2, [pc, #336]	; 37850 <blkid_probe_get_size@plt+0x30338>
   376fc:	add	r3, pc, r3
   37700:	add	r3, r3, #2688	; 0xa80
   37704:	ldr	r1, [pc, #328]	; 37854 <blkid_probe_get_size@plt+0x3033c>
   37708:	add	r3, r3, #4
   3770c:	str	r3, [sp]
   37710:	mov	r0, r7
   37714:	mov	r3, #784	; 0x310
   37718:	add	r2, pc, r2
   3771c:	add	r1, pc, r1
   37720:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   37724:	sub	sp, sp, #8
   37728:	add	ip, sp, #32
   3772c:	mov	r7, ip
   37730:	b	373d8 <blkid_probe_get_size@plt+0x2fec0>
   37734:	sub	r1, fp, #60	; 0x3c
   37738:	mov	r0, r5
   3773c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   37740:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37744:	cmp	r2, #0
   37748:	beq	37450 <blkid_probe_get_size@plt+0x2ff38>
   3774c:	ldr	r1, [pc, #260]	; 37858 <blkid_probe_get_size@plt+0x30340>
   37750:	add	r1, pc, r1
   37754:	b	37454 <blkid_probe_get_size@plt+0x2ff3c>
   37758:	mov	r0, r9
   3775c:	bl	69f0 <free@plt>
   37760:	cmn	r7, #2
   37764:	beq	37558 <blkid_probe_get_size@plt+0x30040>
   37768:	b	37668 <blkid_probe_get_size@plt+0x30150>
   3776c:	sub	r1, fp, #60	; 0x3c
   37770:	mov	r0, r5
   37774:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   37778:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3777c:	cmp	r2, #0
   37780:	beq	37684 <blkid_probe_get_size@plt+0x3016c>
   37784:	ldr	r1, [pc, #208]	; 3785c <blkid_probe_get_size@plt+0x30344>
   37788:	add	r1, pc, r1
   3778c:	b	37688 <blkid_probe_get_size@plt+0x30170>
   37790:	ldr	r3, [pc, #200]	; 37860 <blkid_probe_get_size@plt+0x30348>
   37794:	ldr	r2, [pc, #200]	; 37864 <blkid_probe_get_size@plt+0x3034c>
   37798:	add	r3, pc, r3
   3779c:	add	r3, r3, #2736	; 0xab0
   377a0:	ldr	r1, [pc, #192]	; 37868 <blkid_probe_get_size@plt+0x30350>
   377a4:	add	r3, r3, #4
   377a8:	str	r3, [sp]
   377ac:	add	r2, pc, r2
   377b0:	ldr	r3, [pc, #180]	; 3786c <blkid_probe_get_size@plt+0x30354>
   377b4:	add	r1, pc, r1
   377b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   377bc:	ldr	r2, [pc, #172]	; 37870 <blkid_probe_get_size@plt+0x30358>
   377c0:	mov	r0, r3
   377c4:	add	r2, pc, r2
   377c8:	add	r3, r2, #2736	; 0xab0
   377cc:	ldr	r1, [pc, #160]	; 37874 <blkid_probe_get_size@plt+0x3035c>
   377d0:	ldr	r2, [pc, #160]	; 37878 <blkid_probe_get_size@plt+0x30360>
   377d4:	add	r3, r3, #4
   377d8:	str	r3, [sp]
   377dc:	add	r2, pc, r2
   377e0:	ldr	r3, [pc, #148]	; 3787c <blkid_probe_get_size@plt+0x30364>
   377e4:	add	r1, pc, r1
   377e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   377ec:	bl	6fb4 <__stack_chk_fail@plt>
   377f0:	andeq	r0, r6, r4, asr #16
   377f4:	andeq	r0, r0, ip, lsr r4
   377f8:	andeq	r1, r3, r4, ror r4
   377fc:	andeq	r4, r3, r4, asr #6
   37800:	andeq	r1, r3, ip, asr #7
   37804:	andeq	r0, r6, r0, lsl #26
   37808:	muleq	r3, ip, r3
   3780c:	strdeq	r7, [r3], -r0
   37810:	andeq	lr, r2, r8, lsl r7
   37814:	andeq	r0, r0, sp, lsl r3
   37818:	andeq	r4, r3, r4, ror r2
   3781c:	andeq	r1, r3, r8, lsr #6
   37820:	andeq	r5, r3, r8, asr r2
   37824:	andeq	r3, r3, r4, lsr #19
   37828:	strdeq	lr, [r2], -r8
   3782c:	andeq	r0, r0, r5, lsl #6
   37830:	andeq	r4, r3, r8, asr r1
   37834:	andeq	r0, r6, r0, ror #20
   37838:	andeq	lr, r2, ip, lsl #3
   3783c:	andeq	r0, r6, ip, asr #21
   37840:	andeq	r5, r3, r4, ror #2
   37844:	strdeq	r7, [r3], -r8
   37848:	andeq	lr, r2, r0, ror #9
   3784c:	strdeq	r5, [r3], -ip
   37850:	muleq	r2, r8, r4
   37854:	andeq	sp, r2, ip, ror r9
   37858:	andeq	sp, r2, r8, ror #15
   3785c:			; <UNDEFINED> instruction: 0x0002d7b0
   37860:	andeq	r5, r3, r0, rrx
   37864:	andeq	lr, r2, r4, lsl #8
   37868:	andeq	r6, r3, r0, asr #30
   3786c:	strdeq	r0, [r0], -r2
   37870:	andeq	r5, r3, r4, lsr r0
   37874:	andeq	r6, r3, ip, lsr #31
   37878:	ldrdeq	lr, [r2], -r4
   3787c:	strdeq	r0, [r0], -r3
   37880:	ldr	r3, [pc, #268]	; 37994 <blkid_probe_get_size@plt+0x3047c>
   37884:	ldr	r2, [pc, #268]	; 37998 <blkid_probe_get_size@plt+0x30480>
   37888:	add	r3, pc, r3
   3788c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   37890:	sub	sp, sp, #16
   37894:	ldr	r4, [r3, r2]
   37898:	subs	r5, r0, #0
   3789c:	ldr	r3, [r4]
   378a0:	str	r3, [sp, #12]
   378a4:	beq	3795c <blkid_probe_get_size@plt+0x30444>
   378a8:	ldrb	r3, [r5, #212]	; 0xd4
   378ac:	mov	r6, r1
   378b0:	ands	r7, r3, #1
   378b4:	beq	378e4 <blkid_probe_get_size@plt+0x303cc>
   378b8:	ldr	r3, [r5, #8]
   378bc:	cmp	r3, #0
   378c0:	movne	r0, #0
   378c4:	mvneq	r0, #1
   378c8:	strne	r3, [r6]
   378cc:	ldr	r2, [sp, #12]
   378d0:	ldr	r3, [r4]
   378d4:	cmp	r2, r3
   378d8:	bne	37990 <blkid_probe_get_size@plt+0x30478>
   378dc:	add	sp, sp, #16
   378e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   378e4:	orr	r3, r3, #1
   378e8:	strb	r3, [r5, #212]	; 0xd4
   378ec:	add	r1, sp, #8
   378f0:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   378f4:	cmp	r0, #0
   378f8:	blt	37954 <blkid_probe_get_size@plt+0x3043c>
   378fc:	ldr	r0, [sp, #8]
   37900:	bl	74e8 <strdup@plt>
   37904:	subs	r8, r0, #0
   37908:	beq	37954 <blkid_probe_get_size@plt+0x3043c>
   3790c:	add	r9, r8, #4
   37910:	add	sl, r8, #6
   37914:	mov	r1, #47	; 0x2f
   37918:	mov	r0, r9
   3791c:	bl	7410 <strrchr@plt>
   37920:	cmp	r0, #0
   37924:	beq	37948 <blkid_probe_get_size@plt+0x30430>
   37928:	cmp	r0, sl
   3792c:	bcc	37948 <blkid_probe_get_size@plt+0x30430>
   37930:	strb	r7, [r0]
   37934:	mov	r1, r8
   37938:	add	r0, r5, #8
   3793c:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   37940:	cmp	r0, #0
   37944:	blt	37914 <blkid_probe_get_size@plt+0x303fc>
   37948:	mov	r0, r8
   3794c:	bl	69f0 <free@plt>
   37950:	b	378b8 <blkid_probe_get_size@plt+0x303a0>
   37954:	mov	r8, #0
   37958:	b	37948 <blkid_probe_get_size@plt+0x30430>
   3795c:	ldr	r2, [pc, #56]	; 3799c <blkid_probe_get_size@plt+0x30484>
   37960:	ldr	r1, [pc, #56]	; 379a0 <blkid_probe_get_size@plt+0x30488>
   37964:	add	r2, pc, r2
   37968:	add	r2, r2, #2768	; 0xad0
   3796c:	add	r2, r2, #4
   37970:	str	r2, [sp]
   37974:	ldr	r2, [pc, #40]	; 379a4 <blkid_probe_get_size@plt+0x3048c>
   37978:	ldr	r3, [pc, #40]	; 379a8 <blkid_probe_get_size@plt+0x30490>
   3797c:	add	r2, pc, r2
   37980:	add	r1, pc, r1
   37984:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   37988:	mvn	r0, #21
   3798c:	b	378cc <blkid_probe_get_size@plt+0x303b4>
   37990:	bl	6fb4 <__stack_chk_fail@plt>
   37994:	andeq	r0, r6, r0, ror #5
   37998:	andeq	r0, r0, ip, lsr r4
   3799c:	muleq	r3, r4, lr
   379a0:	andeq	r6, r3, r4, asr lr
   379a4:	andeq	lr, r2, r4, lsr r2
   379a8:	andeq	r0, r0, fp, asr #5
   379ac:	ldr	ip, [pc, #288]	; 37ad4 <blkid_probe_get_size@plt+0x305bc>
   379b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379b4:	add	ip, pc, ip
   379b8:	ldr	lr, [pc, #280]	; 37ad8 <blkid_probe_get_size@plt+0x305c0>
   379bc:	mov	r7, r1
   379c0:	mov	r1, ip
   379c4:	ldr	ip, [ip, lr]
   379c8:	sub	sp, sp, #36	; 0x24
   379cc:	mov	fp, r3
   379d0:	ldr	r3, [ip]
   379d4:	mov	r4, #0
   379d8:	cmp	r0, #0
   379dc:	str	ip, [sp, #12]
   379e0:	str	r4, [sp, #16]
   379e4:	str	r3, [sp, #28]
   379e8:	beq	37a9c <blkid_probe_get_size@plt+0x30584>
   379ec:	add	r6, sp, #16
   379f0:	mov	r1, r6
   379f4:	mov	r5, r2
   379f8:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   379fc:	subs	sl, r0, #0
   37a00:	blt	37a70 <blkid_probe_get_size@plt+0x30558>
   37a04:	add	r8, sp, #24
   37a08:	add	r9, sp, #20
   37a0c:	mov	r1, r8
   37a10:	ldr	r0, [sp, #16]
   37a14:	str	r4, [sp, #24]
   37a18:	str	r4, [sp, #20]
   37a1c:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   37a20:	mov	r1, r7
   37a24:	ldr	r0, [sp, #24]
   37a28:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   37a2c:	subs	sl, r0, #0
   37a30:	bne	37a5c <blkid_probe_get_size@plt+0x30544>
   37a34:	cmp	r5, #0
   37a38:	ldr	r0, [sp, #16]
   37a3c:	beq	37a94 <blkid_probe_get_size@plt+0x3057c>
   37a40:	mov	r1, r9
   37a44:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   37a48:	mov	r1, r5
   37a4c:	ldr	r0, [sp, #20]
   37a50:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   37a54:	cmp	r0, #0
   37a58:	beq	37a90 <blkid_probe_get_size@plt+0x30578>
   37a5c:	mov	r1, r6
   37a60:	ldr	r0, [sp, #16]
   37a64:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   37a68:	subs	sl, r0, #0
   37a6c:	bge	37a0c <blkid_probe_get_size@plt+0x304f4>
   37a70:	ldr	r3, [sp, #12]
   37a74:	ldr	r1, [sp, #28]
   37a78:	mov	r0, sl
   37a7c:	ldr	r2, [r3]
   37a80:	cmp	r1, r2
   37a84:	bne	37ad0 <blkid_probe_get_size@plt+0x305b8>
   37a88:	add	sp, sp, #36	; 0x24
   37a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37a90:	ldr	r0, [sp, #16]
   37a94:	str	r0, [fp]
   37a98:	b	37a70 <blkid_probe_get_size@plt+0x30558>
   37a9c:	ldr	r2, [pc, #56]	; 37adc <blkid_probe_get_size@plt+0x305c4>
   37aa0:	ldr	r1, [pc, #56]	; 37ae0 <blkid_probe_get_size@plt+0x305c8>
   37aa4:	add	r2, pc, r2
   37aa8:	add	r2, r2, #2784	; 0xae0
   37aac:	add	r2, r2, #12
   37ab0:	str	r2, [sp]
   37ab4:	ldr	r2, [pc, #40]	; 37ae4 <blkid_probe_get_size@plt+0x305cc>
   37ab8:	ldr	r3, [pc, #40]	; 37ae8 <blkid_probe_get_size@plt+0x305d0>
   37abc:	add	r2, pc, r2
   37ac0:	add	r1, pc, r1
   37ac4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   37ac8:	mvn	sl, #21
   37acc:	b	37a70 <blkid_probe_get_size@plt+0x30558>
   37ad0:	bl	6fb4 <__stack_chk_fail@plt>
   37ad4:			; <UNDEFINED> instruction: 0x000601b4
   37ad8:	andeq	r0, r0, ip, lsr r4
   37adc:	andeq	r4, r3, r4, asr sp
   37ae0:	andeq	r6, r3, r4, lsl sp
   37ae4:	strdeq	lr, [r2], -r4
   37ae8:	andeq	r0, r0, r7, asr r3
   37aec:	push	{r4, r5, lr}
   37af0:	subs	r5, r0, #0
   37af4:	sub	sp, sp, #12
   37af8:	beq	37b30 <blkid_probe_get_size@plt+0x30618>
   37afc:	mov	r4, r1
   37b00:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   37b04:	cmp	r0, #0
   37b08:	blt	37b28 <blkid_probe_get_size@plt+0x30610>
   37b0c:	ldr	r3, [r5, #124]	; 0x7c
   37b10:	cmp	r3, #0
   37b14:	ble	37b68 <blkid_probe_get_size@plt+0x30650>
   37b18:	cmp	r4, #0
   37b1c:	moveq	r0, r4
   37b20:	movne	r0, #0
   37b24:	strne	r3, [r4]
   37b28:	add	sp, sp, #12
   37b2c:	pop	{r4, r5, pc}
   37b30:	ldr	r2, [pc, #56]	; 37b70 <blkid_probe_get_size@plt+0x30658>
   37b34:	ldr	r1, [pc, #56]	; 37b74 <blkid_probe_get_size@plt+0x3065c>
   37b38:	add	r2, pc, r2
   37b3c:	add	r2, r2, #2832	; 0xb10
   37b40:	add	r2, r2, #8
   37b44:	str	r2, [sp]
   37b48:	ldr	r2, [pc, #40]	; 37b78 <blkid_probe_get_size@plt+0x30660>
   37b4c:	ldr	r3, [pc, #40]	; 37b7c <blkid_probe_get_size@plt+0x30664>
   37b50:	add	r2, pc, r2
   37b54:	add	r1, pc, r1
   37b58:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   37b5c:	mvn	r0, #21
   37b60:	add	sp, sp, #12
   37b64:	pop	{r4, r5, pc}
   37b68:	mvn	r0, #1
   37b6c:	b	37b28 <blkid_probe_get_size@plt+0x30610>
   37b70:	andeq	r4, r3, r0, asr #25
   37b74:	andeq	r3, r3, ip, lsl #8
   37b78:	andeq	lr, r2, r0, rrx
   37b7c:	andeq	r0, r0, pc, lsr r2
   37b80:	ldr	r3, [pc, #524]	; 37d94 <blkid_probe_get_size@plt+0x3087c>
   37b84:	ldr	r2, [pc, #524]	; 37d98 <blkid_probe_get_size@plt+0x30880>
   37b88:	add	r3, pc, r3
   37b8c:	push	{r4, r5, r6, r7, r8, lr}
   37b90:	sub	sp, sp, #40	; 0x28
   37b94:	ldr	r4, [r3, r2]
   37b98:	subs	r5, r0, #0
   37b9c:	ldr	r3, [r4]
   37ba0:	str	r3, [sp, #36]	; 0x24
   37ba4:	beq	37c84 <blkid_probe_get_size@plt+0x3076c>
   37ba8:	ldr	r3, [r5, #184]	; 0xb8
   37bac:	mov	r6, r1
   37bb0:	cmp	r3, #0
   37bb4:	beq	37bdc <blkid_probe_get_size@plt+0x306c4>
   37bb8:	mov	r7, #0
   37bbc:	str	r3, [r6]
   37bc0:	ldr	r2, [sp, #36]	; 0x24
   37bc4:	ldr	r3, [r4]
   37bc8:	mov	r0, r7
   37bcc:	cmp	r2, r3
   37bd0:	bne	37d90 <blkid_probe_get_size@plt+0x30878>
   37bd4:	add	sp, sp, #40	; 0x28
   37bd8:	pop	{r4, r5, r6, r7, r8, pc}
   37bdc:	add	r1, sp, #16
   37be0:	str	r3, [sp, #20]
   37be4:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   37be8:	subs	r7, r0, #0
   37bec:	blt	37d08 <blkid_probe_get_size@plt+0x307f0>
   37bf0:	add	r1, sp, #24
   37bf4:	mov	r0, r5
   37bf8:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   37bfc:	cmp	r0, #0
   37c00:	blt	37d14 <blkid_probe_get_size@plt+0x307fc>
   37c04:	ldr	r0, [sp, #16]
   37c08:	cmp	r0, #0
   37c0c:	beq	37d4c <blkid_probe_get_size@plt+0x30834>
   37c10:	ldr	r1, [pc, #388]	; 37d9c <blkid_probe_get_size@plt+0x30884>
   37c14:	add	r1, pc, r1
   37c18:	bl	7314 <strcmp@plt>
   37c1c:	ldr	ip, [sp, #24]
   37c20:	ldr	r3, [sp, #28]
   37c24:	ldr	r2, [pc, #372]	; 37da0 <blkid_probe_get_size@plt+0x30888>
   37c28:	lsr	r1, ip, #12
   37c2c:	lsl	lr, ip, #12
   37c30:	orr	r1, r1, r3, lsl #20
   37c34:	bic	r3, r3, #4080	; 0xff0
   37c38:	uxtb	ip, ip
   37c3c:	bic	r1, r1, #255	; 0xff
   37c40:	bic	r3, r3, #15
   37c44:	orr	r3, r3, lr, lsr #20
   37c48:	orr	r1, r1, ip
   37c4c:	str	r3, [sp]
   37c50:	str	r1, [sp, #4]
   37c54:	add	r2, pc, r2
   37c58:	mov	r1, #1
   37c5c:	cmp	r0, #0
   37c60:	movne	r3, #99	; 0x63
   37c64:	moveq	r3, #98	; 0x62
   37c68:	add	r0, sp, #20
   37c6c:	bl	7080 <__asprintf_chk@plt>
   37c70:	cmp	r0, #0
   37c74:	blt	37d04 <blkid_probe_get_size@plt+0x307ec>
   37c78:	ldr	r3, [sp, #20]
   37c7c:	str	r3, [r5, #184]	; 0xb8
   37c80:	b	37bb8 <blkid_probe_get_size@plt+0x306a0>
   37c84:	ldr	r2, [pc, #280]	; 37da4 <blkid_probe_get_size@plt+0x3088c>
   37c88:	ldr	r1, [pc, #280]	; 37da8 <blkid_probe_get_size@plt+0x30890>
   37c8c:	add	r2, pc, r2
   37c90:	add	r2, r2, #2864	; 0xb30
   37c94:	str	r2, [sp]
   37c98:	ldr	r2, [pc, #268]	; 37dac <blkid_probe_get_size@plt+0x30894>
   37c9c:	mov	r3, #1216	; 0x4c0
   37ca0:	add	r2, pc, r2
   37ca4:	add	r1, pc, r1
   37ca8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   37cac:	ldr	r0, [r5, #160]	; 0xa0
   37cb0:	bl	708c <basename@plt>
   37cb4:	subs	r8, r0, #0
   37cb8:	beq	37d74 <blkid_probe_get_size@plt+0x3085c>
   37cbc:	ldr	r7, [sp, #16]
   37cc0:	cmp	r7, #0
   37cc4:	beq	37d74 <blkid_probe_get_size@plt+0x3085c>
   37cc8:	ldr	r1, [pc, #224]	; 37db0 <blkid_probe_get_size@plt+0x30898>
   37ccc:	mov	r0, r7
   37cd0:	add	r1, pc, r1
   37cd4:	bl	7314 <strcmp@plt>
   37cd8:	cmp	r0, #0
   37cdc:	bne	37d7c <blkid_probe_get_size@plt+0x30864>
   37ce0:	ldr	r2, [pc, #204]	; 37db4 <blkid_probe_get_size@plt+0x3089c>
   37ce4:	ldr	r3, [r5, #176]	; 0xb0
   37ce8:	add	r2, pc, r2
   37cec:	str	r8, [sp]
   37cf0:	mov	r1, #1
   37cf4:	add	r0, sp, #20
   37cf8:	bl	7080 <__asprintf_chk@plt>
   37cfc:	cmp	r0, #0
   37d00:	bge	37c78 <blkid_probe_get_size@plt+0x30760>
   37d04:	mvn	r7, #11
   37d08:	ldr	r0, [sp, #20]
   37d0c:	bl	69f0 <free@plt>
   37d10:	b	37bc0 <blkid_probe_get_size@plt+0x306a8>
   37d14:	add	r1, sp, #12
   37d18:	mov	r0, r5
   37d1c:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   37d20:	cmp	r0, #0
   37d24:	blt	37cac <blkid_probe_get_size@plt+0x30794>
   37d28:	ldr	r2, [pc, #136]	; 37db8 <blkid_probe_get_size@plt+0x308a0>
   37d2c:	ldr	r3, [sp, #12]
   37d30:	add	r2, pc, r2
   37d34:	mov	r1, #1
   37d38:	add	r0, sp, #20
   37d3c:	bl	7080 <__asprintf_chk@plt>
   37d40:	cmp	r0, #0
   37d44:	bge	37c78 <blkid_probe_get_size@plt+0x30760>
   37d48:	b	37d04 <blkid_probe_get_size@plt+0x307ec>
   37d4c:	ldr	r3, [pc, #104]	; 37dbc <blkid_probe_get_size@plt+0x308a4>
   37d50:	ldr	r2, [pc, #104]	; 37dc0 <blkid_probe_get_size@plt+0x308a8>
   37d54:	add	r3, pc, r3
   37d58:	ldr	r1, [pc, #100]	; 37dc4 <blkid_probe_get_size@plt+0x308ac>
   37d5c:	add	r3, r3, #2864	; 0xb30
   37d60:	str	r3, [sp]
   37d64:	add	r2, pc, r2
   37d68:	ldr	r3, [pc, #88]	; 37dc8 <blkid_probe_get_size@plt+0x308b0>
   37d6c:	add	r1, pc, r1
   37d70:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   37d74:	mvn	r7, #21
   37d78:	b	37d08 <blkid_probe_get_size@plt+0x307f0>
   37d7c:	ldr	r2, [pc, #72]	; 37dcc <blkid_probe_get_size@plt+0x308b4>
   37d80:	str	r8, [sp]
   37d84:	mov	r3, r7
   37d88:	add	r2, pc, r2
   37d8c:	b	37cf0 <blkid_probe_get_size@plt+0x307d8>
   37d90:	bl	6fb4 <__stack_chk_fail@plt>
   37d94:	andeq	pc, r5, r0, ror #31
   37d98:	andeq	r0, r0, ip, lsr r4
   37d9c:	andeq	sp, r2, r4, asr #5
   37da0:	andeq	r6, r3, r8, lsl #23
   37da4:	andeq	r4, r3, ip, ror #22
   37da8:			; <UNDEFINED> instruction: 0x000332bc
   37dac:	andeq	sp, r2, r0, lsl pc
   37db0:	muleq	r3, r4, fp
   37db4:	andeq	r6, r3, r0, lsl #22
   37db8:			; <UNDEFINED> instruction: 0x00036ab4
   37dbc:	andeq	r4, r3, r4, lsr #21
   37dc0:	andeq	sp, r2, ip, asr #28
   37dc4:	andeq	sp, r2, r4, ror sl
   37dc8:	andeq	r0, r0, lr, asr #9
   37dcc:	andeq	r6, r3, r0, ror sl
   37dd0:	ldr	r3, [pc, #1236]	; 382ac <blkid_probe_get_size@plt+0x30d94>
   37dd4:	ldr	r2, [pc, #1236]	; 382b0 <blkid_probe_get_size@plt+0x30d98>
   37dd8:	add	r3, pc, r3
   37ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37de0:	add	fp, sp, #32
   37de4:	sub	sp, sp, #84	; 0x54
   37de8:	ldr	r2, [r3, r2]
   37dec:	mov	r5, #0
   37df0:	subs	r7, r0, #0
   37df4:	ldr	r3, [r2]
   37df8:	str	r2, [fp, #-64]	; 0xffffffc0
   37dfc:	str	r5, [fp, #-48]	; 0xffffffd0
   37e00:	str	r3, [fp, #-40]	; 0xffffffd8
   37e04:	beq	38140 <blkid_probe_get_size@plt+0x30c28>
   37e08:	ldrb	r3, [r7, #214]	; 0xd6
   37e0c:	cmp	r3, #0
   37e10:	bne	37f38 <blkid_probe_get_size@plt+0x30a20>
   37e14:	cmp	r1, #0
   37e18:	bne	37e28 <blkid_probe_get_size@plt+0x30910>
   37e1c:	ldrb	r3, [r7, #215]	; 0xd7
   37e20:	tst	r3, #2
   37e24:	bne	37fdc <blkid_probe_get_size@plt+0x30ac4>
   37e28:	sub	r1, fp, #52	; 0x34
   37e2c:	mov	r0, r7
   37e30:	bl	37b80 <blkid_probe_get_size@plt+0x30668>
   37e34:	subs	r4, r0, #0
   37e38:	blt	37fd4 <blkid_probe_get_size@plt+0x30abc>
   37e3c:	ldr	r4, [fp, #-52]	; 0xffffffcc
   37e40:	cmp	r4, #0
   37e44:	beq	38210 <blkid_probe_get_size@plt+0x30cf8>
   37e48:	mov	r0, r4
   37e4c:	bl	723c <strlen@plt>
   37e50:	add	r3, r0, #16
   37e54:	cmp	r3, #4194304	; 0x400000
   37e58:	bhi	381e0 <blkid_probe_get_size@plt+0x30cc8>
   37e5c:	ldr	r3, [pc, #1104]	; 382b4 <blkid_probe_get_size@plt+0x30d9c>
   37e60:	add	r0, r0, #30
   37e64:	add	r3, pc, r3
   37e68:	bic	ip, r0, #7
   37e6c:	ldm	r3, {r0, r1, r2, r3}
   37e70:	sub	sp, sp, ip
   37e74:	add	sl, sp, #32
   37e78:	stm	sl, {r0, r1, r2, r3}
   37e7c:	mov	r1, r4
   37e80:	add	r0, sl, #15
   37e84:	bl	6ae0 <stpcpy@plt>
   37e88:	mov	ip, r0
   37e8c:	mov	r4, #0
   37e90:	strb	r4, [ip]
   37e94:	sub	r2, fp, #56	; 0x38
   37e98:	sub	r1, fp, #48	; 0x30
   37e9c:	mov	r0, sl
   37ea0:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   37ea4:	subs	r5, r0, #0
   37ea8:	blt	37f64 <blkid_probe_get_size@plt+0x30a4c>
   37eac:	ldrb	r2, [r7, #215]	; 0xd7
   37eb0:	ldr	r8, [fp, #-56]	; 0xffffffc8
   37eb4:	mov	r1, #1
   37eb8:	orr	r2, r2, r1
   37ebc:	cmp	r8, #0
   37ec0:	strb	r2, [r7, #215]	; 0xd7
   37ec4:	strb	r1, [r7, #214]	; 0xd6
   37ec8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   37ecc:	beq	37f38 <blkid_probe_get_size@plt+0x30a20>
   37ed0:	ldr	r3, [pc, #992]	; 382b8 <blkid_probe_get_size@plt+0x30da0>
   37ed4:	ldr	r1, [pc, #992]	; 382bc <blkid_probe_get_size@plt+0x30da4>
   37ed8:	add	r3, pc, r3
   37edc:	str	r3, [fp, #-72]	; 0xffffffb8
   37ee0:	ldr	r3, [pc, #984]	; 382c0 <blkid_probe_get_size@plt+0x30da8>
   37ee4:	ldr	r2, [pc, #984]	; 382c4 <blkid_probe_get_size@plt+0x30dac>
   37ee8:	add	r3, pc, r3
   37eec:	add	r1, pc, r1
   37ef0:	add	r2, pc, r2
   37ef4:	str	r3, [fp, #-76]	; 0xffffffb4
   37ef8:	add	r3, r1, #2912	; 0xb60
   37efc:	str	r3, [fp, #-84]	; 0xffffffac
   37f00:	add	r3, r2, #2912	; 0xb60
   37f04:	str	r3, [fp, #-80]	; 0xffffffb0
   37f08:	sub	r9, r4, #1
   37f0c:	add	r9, r5, r9
   37f10:	ldrb	sl, [r9, #1]!
   37f14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   37f18:	add	r6, r4, #1
   37f1c:	mov	r1, sl
   37f20:	bl	74c4 <strchr@plt>
   37f24:	cmp	r0, #0
   37f28:	beq	37fe8 <blkid_probe_get_size@plt+0x30ad0>
   37f2c:	cmp	r6, r8
   37f30:	mov	r4, r6
   37f34:	bcc	37f10 <blkid_probe_get_size@plt+0x309f8>
   37f38:	mov	r4, #0
   37f3c:	mov	r0, r5
   37f40:	bl	69f0 <free@plt>
   37f44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37f48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   37f4c:	mov	r0, r4
   37f50:	ldr	r3, [r3]
   37f54:	cmp	r2, r3
   37f58:	bne	382a8 <blkid_probe_get_size@plt+0x30d90>
   37f5c:	sub	sp, fp, #32
   37f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f64:	cmn	r5, #2
   37f68:	beq	37fd4 <blkid_probe_get_size@plt+0x30abc>
   37f6c:	ldr	r3, [pc, #852]	; 382c8 <blkid_probe_get_size@plt+0x30db0>
   37f70:	str	r4, [fp, #-44]	; 0xffffffd4
   37f74:	add	r3, pc, r3
   37f78:	ldr	r3, [r3]
   37f7c:	cmp	r3, #6
   37f80:	bgt	38278 <blkid_probe_get_size@plt+0x30d60>
   37f84:	mov	r1, r4
   37f88:	ldr	r2, [pc, #828]	; 382cc <blkid_probe_get_size@plt+0x30db4>
   37f8c:	ldr	r3, [pc, #828]	; 382d0 <blkid_probe_get_size@plt+0x30db8>
   37f90:	add	r2, pc, r2
   37f94:	add	r2, r2, #2912	; 0xb60
   37f98:	str	r2, [sp]
   37f9c:	ldr	r2, [pc, #816]	; 382d4 <blkid_probe_get_size@plt+0x30dbc>
   37fa0:	add	r3, pc, r3
   37fa4:	mov	ip, #0
   37fa8:	stmib	sp, {r1, r4}
   37fac:	str	r3, [sp, #20]
   37fb0:	str	sl, [sp, #24]
   37fb4:	mov	r1, r5
   37fb8:	str	ip, [sp, #16]
   37fbc:	str	ip, [sp, #12]
   37fc0:	ldr	r3, [pc, #784]	; 382d8 <blkid_probe_get_size@plt+0x30dc0>
   37fc4:	add	r2, pc, r2
   37fc8:	mov	r0, #7
   37fcc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   37fd0:	mov	r4, r0
   37fd4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   37fd8:	b	37f3c <blkid_probe_get_size@plt+0x30a24>
   37fdc:	mov	r5, r1
   37fe0:	mov	r4, r1
   37fe4:	b	37f3c <blkid_probe_get_size@plt+0x30a24>
   37fe8:	cmp	r6, r8
   37fec:	bcs	37f38 <blkid_probe_get_size@plt+0x30a20>
   37ff0:	ldrb	r3, [r5, r6]
   37ff4:	add	r9, r4, #2
   37ff8:	cmp	r3, #58	; 0x3a
   37ffc:	beq	380a4 <blkid_probe_get_size@plt+0x30b8c>
   38000:	ldr	r3, [pc, #724]	; 382dc <blkid_probe_get_size@plt+0x30dc4>
   38004:	str	r0, [fp, #-44]	; 0xffffffd4
   38008:	add	r3, pc, r3
   3800c:	ldr	r3, [r3]
   38010:	cmp	r3, #6
   38014:	bgt	38230 <blkid_probe_get_size@plt+0x30d18>
   38018:	mov	r2, r0
   3801c:	str	r2, [sp, #4]
   38020:	ldr	r2, [fp, #-80]	; 0xffffffb0
   38024:	ldr	r3, [pc, #692]	; 382e0 <blkid_probe_get_size@plt+0x30dc8>
   38028:	str	r2, [sp]
   3802c:	ldr	r2, [pc, #688]	; 382e4 <blkid_probe_get_size@plt+0x30dcc>
   38030:	mov	r4, #0
   38034:	add	r3, pc, r3
   38038:	str	r0, [sp, #8]
   3803c:	str	r3, [sp, #20]
   38040:	str	sl, [sp, #24]
   38044:	str	r4, [sp, #16]
   38048:	str	r4, [sp, #12]
   3804c:	mov	r1, r4
   38050:	ldr	r3, [pc, #656]	; 382e8 <blkid_probe_get_size@plt+0x30dd0>
   38054:	add	r2, pc, r2
   38058:	mov	r0, #7
   3805c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   38060:	ldr	r8, [fp, #-56]	; 0xffffffc8
   38064:	ldr	r5, [fp, #-48]	; 0xffffffd0
   38068:	cmp	r9, r8
   3806c:	bcs	37f3c <blkid_probe_get_size@plt+0x30a24>
   38070:	ldr	sl, [pc, #628]	; 382ec <blkid_probe_get_size@plt+0x30dd4>
   38074:	add	r6, r5, r6
   38078:	add	sl, pc, sl
   3807c:	mov	r4, r9
   38080:	ldrb	r1, [r6, #1]!
   38084:	mov	r0, sl
   38088:	bl	74c4 <strchr@plt>
   3808c:	add	r4, r4, #1
   38090:	cmp	r0, #0
   38094:	beq	38134 <blkid_probe_get_size@plt+0x30c1c>
   38098:	cmp	r4, r8
   3809c:	bcc	37f08 <blkid_probe_get_size@plt+0x309f0>
   380a0:	b	37f38 <blkid_probe_get_size@plt+0x30a20>
   380a4:	strb	r0, [r5, r6]
   380a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   380ac:	cmp	r9, r3
   380b0:	bcs	37fd0 <blkid_probe_get_size@plt+0x30ab8>
   380b4:	add	r4, r4, #3
   380b8:	cmp	r4, r3
   380bc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   380c0:	bcs	37f38 <blkid_probe_get_size@plt+0x30a20>
   380c4:	add	r6, r5, r4
   380c8:	str	r3, [fp, #-68]	; 0xffffffbc
   380cc:	ldrb	r1, [r6]
   380d0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   380d4:	bl	74c4 <strchr@plt>
   380d8:	mov	r8, r6
   380dc:	add	r4, r4, #1
   380e0:	add	r6, r6, #1
   380e4:	cmp	r0, #0
   380e8:	beq	38124 <blkid_probe_get_size@plt+0x30c0c>
   380ec:	add	r5, r5, r9
   380f0:	mov	r9, #0
   380f4:	strb	r9, [r8]
   380f8:	mov	r2, r5
   380fc:	mov	r1, sl
   38100:	mov	r0, r7
   38104:	bl	35dd0 <blkid_probe_get_size@plt+0x2e8b8>
   38108:	subs	r8, r0, #0
   3810c:	blt	3816c <blkid_probe_get_size@plt+0x30c54>
   38110:	ldr	r8, [fp, #-56]	; 0xffffffc8
   38114:	ldr	r5, [fp, #-48]	; 0xffffffd0
   38118:	cmp	r4, r8
   3811c:	bcc	37f08 <blkid_probe_get_size@plt+0x309f0>
   38120:	b	37f38 <blkid_probe_get_size@plt+0x30a20>
   38124:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38128:	cmp	r4, r3
   3812c:	bcc	380cc <blkid_probe_get_size@plt+0x30bb4>
   38130:	b	37f38 <blkid_probe_get_size@plt+0x30a20>
   38134:	cmp	r4, r8
   38138:	bcc	38080 <blkid_probe_get_size@plt+0x30b68>
   3813c:	b	37f38 <blkid_probe_get_size@plt+0x30a20>
   38140:	ldr	r2, [pc, #424]	; 382f0 <blkid_probe_get_size@plt+0x30dd8>
   38144:	ldr	r1, [pc, #424]	; 382f4 <blkid_probe_get_size@plt+0x30ddc>
   38148:	add	r2, pc, r2
   3814c:	add	r2, r2, #2880	; 0xb40
   38150:	add	r2, r2, #8
   38154:	str	r2, [sp]
   38158:	ldr	r2, [pc, #408]	; 382f8 <blkid_probe_get_size@plt+0x30de0>
   3815c:	ldr	r3, [pc, #408]	; 382fc <blkid_probe_get_size@plt+0x30de4>
   38160:	add	r2, pc, r2
   38164:	add	r1, pc, r1
   38168:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3816c:	ldr	r3, [pc, #396]	; 38300 <blkid_probe_get_size@plt+0x30de8>
   38170:	str	r9, [fp, #-44]	; 0xffffffd4
   38174:	add	r3, pc, r3
   38178:	ldr	r3, [r3]
   3817c:	cmp	r3, #6
   38180:	bgt	38254 <blkid_probe_get_size@plt+0x30d3c>
   38184:	mov	r2, r9
   38188:	stmib	sp, {r2, r9}
   3818c:	ldr	r2, [fp, #-84]	; 0xffffffac
   38190:	ldr	r3, [pc, #364]	; 38304 <blkid_probe_get_size@plt+0x30dec>
   38194:	str	r2, [sp]
   38198:	ldr	r2, [pc, #360]	; 38308 <blkid_probe_get_size@plt+0x30df0>
   3819c:	add	r3, pc, r3
   381a0:	mov	r6, #0
   381a4:	mov	r1, r8
   381a8:	str	r3, [sp, #20]
   381ac:	str	r5, [sp, #28]
   381b0:	str	sl, [sp, #24]
   381b4:	str	r6, [sp, #16]
   381b8:	str	r6, [sp, #12]
   381bc:	ldr	r3, [pc, #328]	; 3830c <blkid_probe_get_size@plt+0x30df4>
   381c0:	add	r2, pc, r2
   381c4:	mov	r0, #7
   381c8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   381cc:	ldr	r8, [fp, #-56]	; 0xffffffc8
   381d0:	cmp	r4, r8
   381d4:	bcs	3829c <blkid_probe_get_size@plt+0x30d84>
   381d8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   381dc:	b	37f08 <blkid_probe_get_size@plt+0x309f0>
   381e0:	ldr	r2, [pc, #296]	; 38310 <blkid_probe_get_size@plt+0x30df8>
   381e4:	ldr	r1, [pc, #296]	; 38314 <blkid_probe_get_size@plt+0x30dfc>
   381e8:	add	r2, pc, r2
   381ec:	add	r2, r2, #2880	; 0xb40
   381f0:	add	r2, r2, #8
   381f4:	str	r2, [sp]
   381f8:	ldr	r2, [pc, #280]	; 38318 <blkid_probe_get_size@plt+0x30e00>
   381fc:	ldr	r3, [pc, #280]	; 3831c <blkid_probe_get_size@plt+0x30e04>
   38200:	add	r2, pc, r2
   38204:	add	r1, pc, r1
   38208:	mov	r0, #0
   3820c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   38210:	ldr	r3, [pc, #264]	; 38320 <blkid_probe_get_size@plt+0x30e08>
   38214:	sub	sp, sp, #24
   38218:	add	r3, pc, r3
   3821c:	add	sl, sp, #32
   38220:	ldm	r3, {r0, r1, r2, r3}
   38224:	add	ip, sl, #15
   38228:	stm	sl, {r0, r1, r2, r3}
   3822c:	b	37e8c <blkid_probe_get_size@plt+0x30974>
   38230:	sub	r1, fp, #44	; 0x2c
   38234:	mov	r0, r7
   38238:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   3823c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38240:	cmp	r0, #0
   38244:	beq	38018 <blkid_probe_get_size@plt+0x30b00>
   38248:	ldr	r2, [pc, #212]	; 38324 <blkid_probe_get_size@plt+0x30e0c>
   3824c:	add	r2, pc, r2
   38250:	b	3801c <blkid_probe_get_size@plt+0x30b04>
   38254:	sub	r1, fp, #44	; 0x2c
   38258:	mov	r0, r7
   3825c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   38260:	ldr	r9, [fp, #-44]	; 0xffffffd4
   38264:	cmp	r9, #0
   38268:	beq	38184 <blkid_probe_get_size@plt+0x30c6c>
   3826c:	ldr	r2, [pc, #180]	; 38328 <blkid_probe_get_size@plt+0x30e10>
   38270:	add	r2, pc, r2
   38274:	b	38188 <blkid_probe_get_size@plt+0x30c70>
   38278:	mov	r0, r7
   3827c:	sub	r1, fp, #44	; 0x2c
   38280:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   38284:	ldr	r4, [fp, #-44]	; 0xffffffd4
   38288:	cmp	r4, #0
   3828c:	beq	37f84 <blkid_probe_get_size@plt+0x30a6c>
   38290:	ldr	r1, [pc, #148]	; 3832c <blkid_probe_get_size@plt+0x30e14>
   38294:	add	r1, pc, r1
   38298:	b	37f88 <blkid_probe_get_size@plt+0x30a70>
   3829c:	mov	r4, r6
   382a0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   382a4:	b	37f3c <blkid_probe_get_size@plt+0x30a24>
   382a8:	bl	6fb4 <__stack_chk_fail@plt>
   382ac:	muleq	r5, r0, sp
   382b0:	andeq	r0, r0, ip, lsr r4
   382b4:	andeq	r3, r3, ip, lsl r9
   382b8:	andeq	sp, r2, r0, asr #9
   382bc:	andeq	r4, r3, ip, lsl #18
   382c0:			; <UNDEFINED> instruction: 0x0002d4b0
   382c4:	andeq	r4, r3, r8, lsl #18
   382c8:	andeq	r0, r6, r8, asr #3
   382cc:	andeq	r4, r3, r8, ror #16
   382d0:	andeq	r6, r3, r0, ror #16
   382d4:	andeq	sp, r2, ip, ror #23
   382d8:	andeq	r0, r0, sp, lsl r5
   382dc:	andeq	r0, r6, r4, lsr r1
   382e0:	strdeq	r6, [r3], -r4
   382e4:	andeq	sp, r2, ip, asr fp
   382e8:	andeq	r0, r0, r1, lsr r5
   382ec:	andeq	sp, r2, r0, lsr #6
   382f0:			; <UNDEFINED> instruction: 0x000346b0
   382f4:	strdeq	r2, [r3], -ip
   382f8:	andeq	sp, r2, r0, asr sl
   382fc:	andeq	r0, r0, sp, lsl #10
   38300:	andeq	pc, r5, r8, asr #31
   38304:	andeq	r6, r3, r0, asr #13
   38308:	strdeq	sp, [r2], -r0
   3830c:	andeq	r0, r0, fp, asr #10
   38310:	andeq	r4, r3, r0, lsl r6
   38314:	muleq	r2, r4, lr
   38318:			; <UNDEFINED> instruction: 0x0002d9b0
   3831c:	andeq	r0, r0, r6, lsl r5
   38320:	andeq	r3, r3, r8, ror #10
   38324:	andeq	ip, r2, ip, ror #25
   38328:	andeq	ip, r2, r8, asr #25
   3832c:	andeq	ip, r2, r4, lsr #25
   38330:	push	{r4, r5, lr}
   38334:	subs	r5, r0, #0
   38338:	sub	sp, sp, #12
   3833c:	beq	38368 <blkid_probe_get_size@plt+0x30e50>
   38340:	cmp	r1, #0
   38344:	mov	r4, r1
   38348:	beq	383a0 <blkid_probe_get_size@plt+0x30e88>
   3834c:	mov	r1, #0
   38350:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   38354:	mov	r1, r4
   38358:	ldr	r0, [r5, #60]	; 0x3c
   3835c:	bl	43a98 <blkid_probe_get_size@plt+0x3c580>
   38360:	add	sp, sp, #12
   38364:	pop	{r4, r5, pc}
   38368:	ldr	r2, [pc, #104]	; 383d8 <blkid_probe_get_size@plt+0x30ec0>
   3836c:	ldr	r1, [pc, #104]	; 383dc <blkid_probe_get_size@plt+0x30ec4>
   38370:	add	r2, pc, r2
   38374:	add	r2, r2, #2928	; 0xb70
   38378:	add	r2, r2, #8
   3837c:	str	r2, [sp]
   38380:	ldr	r2, [pc, #88]	; 383e0 <blkid_probe_get_size@plt+0x30ec8>
   38384:	ldr	r3, [pc, #88]	; 383e4 <blkid_probe_get_size@plt+0x30ecc>
   38388:	add	r2, pc, r2
   3838c:	add	r1, pc, r1
   38390:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38394:	mvn	r0, #21
   38398:	add	sp, sp, #12
   3839c:	pop	{r4, r5, pc}
   383a0:	ldr	r3, [pc, #64]	; 383e8 <blkid_probe_get_size@plt+0x30ed0>
   383a4:	mov	r0, r1
   383a8:	add	r3, pc, r3
   383ac:	add	r3, r3, #2928	; 0xb70
   383b0:	ldr	r2, [pc, #52]	; 383ec <blkid_probe_get_size@plt+0x30ed4>
   383b4:	ldr	r1, [pc, #52]	; 383f0 <blkid_probe_get_size@plt+0x30ed8>
   383b8:	add	r3, r3, #8
   383bc:	str	r3, [sp]
   383c0:	add	r2, pc, r2
   383c4:	ldr	r3, [pc, #40]	; 383f4 <blkid_probe_get_size@plt+0x30edc>
   383c8:	add	r1, pc, r1
   383cc:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   383d0:	mvn	r0, #21
   383d4:	b	38360 <blkid_probe_get_size@plt+0x30e48>
   383d8:	andeq	r4, r3, r8, lsl #9
   383dc:	ldrdeq	r2, [r3], -r4
   383e0:	andeq	sp, r2, r8, lsr #16
   383e4:	andeq	r0, r0, r4, ror r6
   383e8:	andeq	r4, r3, r0, asr r4
   383ec:	strdeq	sp, [r2], -r0
   383f0:	andeq	sp, r2, r4, asr r4
   383f4:	andeq	r0, r0, r5, ror r6
   383f8:	ldr	r3, [pc, #164]	; 384a4 <blkid_probe_get_size@plt+0x30f8c>
   383fc:	ldr	r2, [pc, #164]	; 384a8 <blkid_probe_get_size@plt+0x30f90>
   38400:	add	r3, pc, r3
   38404:	push	{r4, r5, lr}
   38408:	sub	sp, sp, #20
   3840c:	ldr	r5, [r3, r2]
   38410:	subs	r4, r0, #0
   38414:	ldr	r3, [r5]
   38418:	str	r3, [sp, #12]
   3841c:	beq	3846c <blkid_probe_get_size@plt+0x30f54>
   38420:	mov	r1, #0
   38424:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   38428:	ldrd	r0, [r4, #112]	; 0x70
   3842c:	ldrd	r2, [r4, #104]	; 0x68
   38430:	cmp	r1, r3
   38434:	cmpeq	r0, r2
   38438:	movne	r0, #0
   3843c:	bne	38454 <blkid_probe_get_size@plt+0x30f3c>
   38440:	add	r2, sp, #8
   38444:	add	r1, r4, #92	; 0x5c
   38448:	ldr	r0, [r4, #88]	; 0x58
   3844c:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   38450:	ldr	r0, [sp, #8]
   38454:	ldr	r2, [sp, #12]
   38458:	ldr	r3, [r5]
   3845c:	cmp	r2, r3
   38460:	bne	384a0 <blkid_probe_get_size@plt+0x30f88>
   38464:	add	sp, sp, #20
   38468:	pop	{r4, r5, pc}
   3846c:	ldr	r2, [pc, #56]	; 384ac <blkid_probe_get_size@plt+0x30f94>
   38470:	ldr	r1, [pc, #56]	; 384b0 <blkid_probe_get_size@plt+0x30f98>
   38474:	add	r2, pc, r2
   38478:	add	r2, r2, #2944	; 0xb80
   3847c:	add	r2, r2, #12
   38480:	str	r2, [sp]
   38484:	ldr	r2, [pc, #40]	; 384b4 <blkid_probe_get_size@plt+0x30f9c>
   38488:	ldr	r3, [pc, #40]	; 384b8 <blkid_probe_get_size@plt+0x30fa0>
   3848c:	add	r2, pc, r2
   38490:	add	r1, pc, r1
   38494:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38498:	mov	r0, r4
   3849c:	b	38454 <blkid_probe_get_size@plt+0x30f3c>
   384a0:	bl	6fb4 <__stack_chk_fail@plt>
   384a4:	andeq	pc, r5, r8, ror #14
   384a8:	andeq	r0, r0, ip, lsr r4
   384ac:	andeq	r4, r3, r4, lsl #7
   384b0:	ldrdeq	r2, [r3], -r0
   384b4:	andeq	sp, r2, r4, lsr #14
   384b8:	andeq	r0, r0, ip, lsr #11
   384bc:	ldr	r3, [pc, #160]	; 38564 <blkid_probe_get_size@plt+0x3104c>
   384c0:	ldr	r2, [pc, #160]	; 38568 <blkid_probe_get_size@plt+0x31050>
   384c4:	add	r3, pc, r3
   384c8:	push	{r4, r5, lr}
   384cc:	sub	sp, sp, #20
   384d0:	ldr	r5, [r3, r2]
   384d4:	subs	r4, r0, #0
   384d8:	ldr	r3, [r5]
   384dc:	str	r3, [sp, #12]
   384e0:	beq	3852c <blkid_probe_get_size@plt+0x31014>
   384e4:	mov	r1, #0
   384e8:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   384ec:	ldrd	r2, [r4, #104]	; 0x68
   384f0:	mvn	r0, #1
   384f4:	mov	r1, #0
   384f8:	strd	r2, [r4, #112]	; 0x70
   384fc:	strd	r0, [r4, #92]	; 0x5c
   38500:	add	r2, sp, #8
   38504:	add	r1, r4, #92	; 0x5c
   38508:	ldr	r0, [r4, #88]	; 0x58
   3850c:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   38510:	ldr	r0, [sp, #8]
   38514:	ldr	r2, [sp, #12]
   38518:	ldr	r3, [r5]
   3851c:	cmp	r2, r3
   38520:	bne	38560 <blkid_probe_get_size@plt+0x31048>
   38524:	add	sp, sp, #20
   38528:	pop	{r4, r5, pc}
   3852c:	ldr	r2, [pc, #56]	; 3856c <blkid_probe_get_size@plt+0x31054>
   38530:	ldr	r1, [pc, #56]	; 38570 <blkid_probe_get_size@plt+0x31058>
   38534:	add	r2, pc, r2
   38538:	add	r2, r2, #2976	; 0xba0
   3853c:	add	r2, r2, #8
   38540:	str	r2, [sp]
   38544:	ldr	r2, [pc, #40]	; 38574 <blkid_probe_get_size@plt+0x3105c>
   38548:	ldr	r3, [pc, #40]	; 38578 <blkid_probe_get_size@plt+0x31060>
   3854c:	add	r2, pc, r2
   38550:	add	r1, pc, r1
   38554:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38558:	mov	r0, r4
   3855c:	b	38514 <blkid_probe_get_size@plt+0x30ffc>
   38560:	bl	6fb4 <__stack_chk_fail@plt>
   38564:	andeq	pc, r5, r4, lsr #13
   38568:	andeq	r0, r0, ip, lsr r4
   3856c:	andeq	r4, r3, r4, asr #5
   38570:	andeq	r2, r3, r0, lsl sl
   38574:	andeq	sp, r2, r4, ror #12
   38578:	muleq	r0, lr, r5
   3857c:	ldr	r3, [pc, #164]	; 38628 <blkid_probe_get_size@plt+0x31110>
   38580:	ldr	r2, [pc, #164]	; 3862c <blkid_probe_get_size@plt+0x31114>
   38584:	add	r3, pc, r3
   38588:	push	{r4, r5, lr}
   3858c:	sub	sp, sp, #20
   38590:	ldr	r5, [r3, r2]
   38594:	subs	r4, r0, #0
   38598:	ldr	r3, [r5]
   3859c:	str	r3, [sp, #12]
   385a0:	beq	385f0 <blkid_probe_get_size@plt+0x310d8>
   385a4:	mov	r1, #0
   385a8:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   385ac:	ldrd	r0, [r4, #80]	; 0x50
   385b0:	ldrd	r2, [r4, #72]	; 0x48
   385b4:	cmp	r1, r3
   385b8:	cmpeq	r0, r2
   385bc:	movne	r0, #0
   385c0:	bne	385d8 <blkid_probe_get_size@plt+0x310c0>
   385c4:	add	r2, sp, #8
   385c8:	add	r1, r4, #64	; 0x40
   385cc:	ldr	r0, [r4, #60]	; 0x3c
   385d0:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   385d4:	ldr	r0, [sp, #8]
   385d8:	ldr	r2, [sp, #12]
   385dc:	ldr	r3, [r5]
   385e0:	cmp	r2, r3
   385e4:	bne	38624 <blkid_probe_get_size@plt+0x3110c>
   385e8:	add	sp, sp, #20
   385ec:	pop	{r4, r5, pc}
   385f0:	ldr	r2, [pc, #56]	; 38630 <blkid_probe_get_size@plt+0x31118>
   385f4:	ldr	r1, [pc, #56]	; 38634 <blkid_probe_get_size@plt+0x3111c>
   385f8:	add	r2, pc, r2
   385fc:	add	r2, r2, #3008	; 0xbc0
   38600:	add	r2, r2, #4
   38604:	str	r2, [sp]
   38608:	ldr	r2, [pc, #40]	; 38638 <blkid_probe_get_size@plt+0x31120>
   3860c:	mov	r3, #1424	; 0x590
   38610:	add	r2, pc, r2
   38614:	add	r1, pc, r1
   38618:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3861c:	mov	r0, r4
   38620:	b	385d8 <blkid_probe_get_size@plt+0x310c0>
   38624:	bl	6fb4 <__stack_chk_fail@plt>
   38628:	andeq	pc, r5, r4, ror #11
   3862c:	andeq	r0, r0, ip, lsr r4
   38630:	andeq	r4, r3, r0, lsl #4
   38634:	andeq	r2, r3, ip, asr #18
   38638:	andeq	sp, r2, r0, lsr #11
   3863c:	ldr	r3, [pc, #160]	; 386e4 <blkid_probe_get_size@plt+0x311cc>
   38640:	ldr	r2, [pc, #160]	; 386e8 <blkid_probe_get_size@plt+0x311d0>
   38644:	add	r3, pc, r3
   38648:	push	{r4, r5, lr}
   3864c:	sub	sp, sp, #20
   38650:	ldr	r5, [r3, r2]
   38654:	subs	r4, r0, #0
   38658:	ldr	r3, [r5]
   3865c:	str	r3, [sp, #12]
   38660:	beq	386ac <blkid_probe_get_size@plt+0x31194>
   38664:	mov	r1, #0
   38668:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   3866c:	ldrd	r2, [r4, #72]	; 0x48
   38670:	mvn	r0, #1
   38674:	mov	r1, #0
   38678:	strd	r2, [r4, #80]	; 0x50
   3867c:	strd	r0, [r4, #64]	; 0x40
   38680:	add	r2, sp, #8
   38684:	add	r1, r4, #64	; 0x40
   38688:	ldr	r0, [r4, #60]	; 0x3c
   3868c:	bl	4523c <blkid_probe_get_size@plt+0x3dd24>
   38690:	ldr	r0, [sp, #8]
   38694:	ldr	r2, [sp, #12]
   38698:	ldr	r3, [r5]
   3869c:	cmp	r2, r3
   386a0:	bne	386e0 <blkid_probe_get_size@plt+0x311c8>
   386a4:	add	sp, sp, #20
   386a8:	pop	{r4, r5, pc}
   386ac:	ldr	r2, [pc, #56]	; 386ec <blkid_probe_get_size@plt+0x311d4>
   386b0:	ldr	r1, [pc, #56]	; 386f0 <blkid_probe_get_size@plt+0x311d8>
   386b4:	add	r2, pc, r2
   386b8:	add	r2, r2, #3024	; 0xbd0
   386bc:	add	r2, r2, #12
   386c0:	str	r2, [sp]
   386c4:	ldr	r2, [pc, #40]	; 386f4 <blkid_probe_get_size@plt+0x311dc>
   386c8:	ldr	r3, [pc, #40]	; 386f8 <blkid_probe_get_size@plt+0x311e0>
   386cc:	add	r2, pc, r2
   386d0:	add	r1, pc, r1
   386d4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   386d8:	mov	r0, r4
   386dc:	b	38694 <blkid_probe_get_size@plt+0x3117c>
   386e0:	bl	6fb4 <__stack_chk_fail@plt>
   386e4:	andeq	pc, r5, r4, lsr #10
   386e8:	andeq	r0, r0, ip, lsr r4
   386ec:	andeq	r4, r3, r4, asr #2
   386f0:	muleq	r3, r0, r8
   386f4:	andeq	sp, r2, r4, ror #9
   386f8:	andeq	r0, r0, r2, lsl #11
   386fc:	ldr	r3, [pc, #632]	; 3897c <blkid_probe_get_size@plt+0x31464>
   38700:	ldr	r2, [pc, #632]	; 38980 <blkid_probe_get_size@plt+0x31468>
   38704:	add	r3, pc, r3
   38708:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3870c:	sub	sp, sp, #24
   38710:	ldr	r6, [r3, r2]
   38714:	subs	r5, r0, #0
   38718:	ldr	r3, [r6]
   3871c:	str	r3, [sp, #20]
   38720:	beq	388dc <blkid_probe_get_size@plt+0x313c4>
   38724:	bl	24500 <blkid_probe_get_size@plt+0x1cfe8>
   38728:	subs	r4, r0, #0
   3872c:	blt	38758 <blkid_probe_get_size@plt+0x31240>
   38730:	mov	r1, #0
   38734:	mov	r0, r5
   38738:	bl	37dd0 <blkid_probe_get_size@plt+0x308b8>
   3873c:	subs	r4, r0, #0
   38740:	blt	38758 <blkid_probe_get_size@plt+0x31240>
   38744:	ldrb	r4, [r5, #212]	; 0xd4
   38748:	tst	r4, #8
   3874c:	bne	38844 <blkid_probe_get_size@plt+0x3132c>
   38750:	ands	r4, r4, #4
   38754:	bne	38774 <blkid_probe_get_size@plt+0x3125c>
   38758:	ldr	r2, [sp, #20]
   3875c:	ldr	r3, [r6]
   38760:	mov	r0, r4
   38764:	cmp	r2, r3
   38768:	bne	38978 <blkid_probe_get_size@plt+0x31460>
   3876c:	add	sp, sp, #24
   38770:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38774:	add	r7, sp, #24
   38778:	mov	ip, #0
   3877c:	add	r8, sp, #12
   38780:	str	ip, [r7, #-8]!
   38784:	mov	r0, r8
   38788:	mov	r1, r7
   3878c:	mov	r3, #1
   38790:	mov	r2, #2
   38794:	str	ip, [sp, #12]
   38798:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   3879c:	cmp	r0, #0
   387a0:	beq	38834 <blkid_probe_get_size@plt+0x3131c>
   387a4:	ldr	r3, [pc, #472]	; 38984 <blkid_probe_get_size@plt+0x3146c>
   387a8:	ldr	r2, [sp, #12]
   387ac:	add	r3, pc, r3
   387b0:	mov	r0, r5
   387b4:	ldrh	r3, [r3]
   387b8:	strh	r3, [r2]
   387bc:	bl	3863c <blkid_probe_get_size@plt+0x31124>
   387c0:	subs	sl, r0, #0
   387c4:	beq	38940 <blkid_probe_get_size@plt+0x31428>
   387c8:	ldr	r9, [pc, #440]	; 38988 <blkid_probe_get_size@plt+0x31470>
   387cc:	mov	r4, #1
   387d0:	add	r9, pc, r9
   387d4:	b	3880c <blkid_probe_get_size@plt+0x312f4>
   387d8:	ldr	r0, [sp, #12]
   387dc:	mov	r1, sl
   387e0:	add	r0, r0, r4
   387e4:	bl	6ae0 <stpcpy@plt>
   387e8:	ldrh	r2, [r9]
   387ec:	mov	r3, r0
   387f0:	mov	r0, r5
   387f4:	strh	r2, [r3], #1
   387f8:	ldr	r4, [sp, #12]
   387fc:	sub	r4, r3, r4
   38800:	bl	3857c <blkid_probe_get_size@plt+0x31064>
   38804:	subs	sl, r0, #0
   38808:	beq	38940 <blkid_probe_get_size@plt+0x31428>
   3880c:	mov	r0, sl
   38810:	bl	723c <strlen@plt>
   38814:	mov	r3, #1
   38818:	mov	r1, r7
   3881c:	add	r2, r0, r4
   38820:	add	r2, r2, #2
   38824:	mov	r0, r8
   38828:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   3882c:	cmp	r0, #0
   38830:	bne	387d8 <blkid_probe_get_size@plt+0x312c0>
   38834:	mvn	r4, #11
   38838:	ldr	r0, [sp, #12]
   3883c:	bl	69f0 <free@plt>
   38840:	b	38758 <blkid_probe_get_size@plt+0x31240>
   38844:	mov	r4, #0
   38848:	mov	r0, r5
   3884c:	str	r4, [sp, #12]
   38850:	str	r4, [sp, #16]
   38854:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   38858:	subs	r9, r0, #0
   3885c:	beq	38908 <blkid_probe_get_size@plt+0x313f0>
   38860:	ldr	sl, [pc, #292]	; 3898c <blkid_probe_get_size@plt+0x31474>
   38864:	add	r7, sp, #16
   38868:	add	sl, pc, sl
   3886c:	add	r8, sp, #12
   38870:	b	388b0 <blkid_probe_get_size@plt+0x31398>
   38874:	cmp	r4, #0
   38878:	ldr	r0, [sp, #12]
   3887c:	ldrhne	r3, [sl]
   38880:	mov	r1, r9
   38884:	strhne	r3, [r0, r4]
   38888:	ldrne	r0, [sp, #12]
   3888c:	addne	r4, r4, #1
   38890:	add	r0, r0, r4
   38894:	bl	6ae0 <stpcpy@plt>
   38898:	ldr	r4, [sp, #12]
   3889c:	sub	r4, r0, r4
   388a0:	mov	r0, r5
   388a4:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   388a8:	subs	r9, r0, #0
   388ac:	beq	38908 <blkid_probe_get_size@plt+0x313f0>
   388b0:	mov	r0, r9
   388b4:	bl	723c <strlen@plt>
   388b8:	mov	r3, #1
   388bc:	mov	r1, r7
   388c0:	add	r2, r0, r4
   388c4:	add	r2, r2, #2
   388c8:	mov	r0, r8
   388cc:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   388d0:	cmp	r0, #0
   388d4:	bne	38874 <blkid_probe_get_size@plt+0x3135c>
   388d8:	b	38834 <blkid_probe_get_size@plt+0x3131c>
   388dc:	ldr	r2, [pc, #172]	; 38990 <blkid_probe_get_size@plt+0x31478>
   388e0:	ldr	r1, [pc, #172]	; 38994 <blkid_probe_get_size@plt+0x3147c>
   388e4:	add	r2, pc, r2
   388e8:	add	r2, r2, #3056	; 0xbf0
   388ec:	add	r2, r2, #4
   388f0:	str	r2, [sp]
   388f4:	ldr	r2, [pc, #156]	; 38998 <blkid_probe_get_size@plt+0x31480>
   388f8:	ldr	r3, [pc, #156]	; 3899c <blkid_probe_get_size@plt+0x31484>
   388fc:	add	r2, pc, r2
   38900:	add	r1, pc, r1
   38904:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   38908:	ldr	r1, [pc, #144]	; 389a0 <blkid_probe_get_size@plt+0x31488>
   3890c:	ldr	r2, [sp, #12]
   38910:	add	r1, pc, r1
   38914:	mov	r0, r5
   38918:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   3891c:	subs	r4, r0, #0
   38920:	blt	38838 <blkid_probe_get_size@plt+0x31320>
   38924:	ldrb	r3, [r5, #212]	; 0xd4
   38928:	ldr	r0, [sp, #12]
   3892c:	bic	r3, r3, #8
   38930:	strb	r3, [r5, #212]	; 0xd4
   38934:	bl	69f0 <free@plt>
   38938:	ldrb	r4, [r5, #212]	; 0xd4
   3893c:	b	38750 <blkid_probe_get_size@plt+0x31238>
   38940:	ldr	r1, [pc, #92]	; 389a4 <blkid_probe_get_size@plt+0x3148c>
   38944:	ldr	r2, [sp, #12]
   38948:	add	r1, pc, r1
   3894c:	mov	r0, r5
   38950:	bl	23e4c <blkid_probe_get_size@plt+0x1c934>
   38954:	subs	r4, r0, #0
   38958:	blt	38838 <blkid_probe_get_size@plt+0x31320>
   3895c:	ldrb	r3, [r5, #212]	; 0xd4
   38960:	ldr	r0, [sp, #12]
   38964:	mov	r4, #0
   38968:	bic	r3, r3, #4
   3896c:	strb	r3, [r5, #212]	; 0xd4
   38970:	bl	69f0 <free@plt>
   38974:	b	38758 <blkid_probe_get_size@plt+0x31240>
   38978:	bl	6fb4 <__stack_chk_fail@plt>
   3897c:	andeq	pc, r5, r4, ror #8
   38980:	andeq	r0, r0, ip, lsr r4
   38984:	strdeq	r2, [r3], -r8
   38988:	ldrdeq	r2, [r3], -r4
   3898c:	andeq	r9, r3, r4, ror r7
   38990:	andeq	r3, r3, r4, lsl pc
   38994:	andeq	r2, r3, r0, ror #12
   38998:			; <UNDEFINED> instruction: 0x0002d2b4
   3899c:			; <UNDEFINED> instruction: 0x000005ba
   389a0:	andeq	r0, r3, r0, ror #25
   389a4:	andeq	lr, r2, r8, lsl #12
   389a8:	push	{r4, r5, r6, lr}
   389ac:	subs	r5, r0, #0
   389b0:	sub	sp, sp, #8
   389b4:	beq	389f8 <blkid_probe_get_size@plt+0x314e0>
   389b8:	cmp	r1, #0
   389bc:	mov	r4, r1
   389c0:	beq	38a2c <blkid_probe_get_size@plt+0x31514>
   389c4:	mov	r6, r2
   389c8:	bl	386fc <blkid_probe_get_size@plt+0x311e4>
   389cc:	cmp	r0, #0
   389d0:	blt	389f0 <blkid_probe_get_size@plt+0x314d8>
   389d4:	mov	r1, r4
   389d8:	ldr	r0, [r5, #12]
   389dc:	bl	43b4c <blkid_probe_get_size@plt+0x3c634>
   389e0:	cmp	r0, #0
   389e4:	strne	r0, [r6]
   389e8:	mvneq	r0, #1
   389ec:	movne	r0, #0
   389f0:	add	sp, sp, #8
   389f4:	pop	{r4, r5, r6, pc}
   389f8:	ldr	r2, [pc, #96]	; 38a60 <blkid_probe_get_size@plt+0x31548>
   389fc:	ldr	r1, [pc, #96]	; 38a64 <blkid_probe_get_size@plt+0x3154c>
   38a00:	add	r2, pc, r2
   38a04:	add	r2, r2, #3088	; 0xc10
   38a08:	str	r2, [sp]
   38a0c:	ldr	r2, [pc, #84]	; 38a68 <blkid_probe_get_size@plt+0x31550>
   38a10:	mov	r3, #1664	; 0x680
   38a14:	add	r2, pc, r2
   38a18:	add	r1, pc, r1
   38a1c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38a20:	mvn	r0, #21
   38a24:	add	sp, sp, #8
   38a28:	pop	{r4, r5, r6, pc}
   38a2c:	ldr	r3, [pc, #56]	; 38a6c <blkid_probe_get_size@plt+0x31554>
   38a30:	mov	r0, r1
   38a34:	add	r3, pc, r3
   38a38:	ldr	r2, [pc, #48]	; 38a70 <blkid_probe_get_size@plt+0x31558>
   38a3c:	ldr	r1, [pc, #48]	; 38a74 <blkid_probe_get_size@plt+0x3155c>
   38a40:	add	r3, r3, #3088	; 0xc10
   38a44:	str	r3, [sp]
   38a48:	add	r2, pc, r2
   38a4c:	ldr	r3, [pc, #36]	; 38a78 <blkid_probe_get_size@plt+0x31560>
   38a50:	add	r1, pc, r1
   38a54:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38a58:	mvn	r0, #21
   38a5c:	b	389f0 <blkid_probe_get_size@plt+0x314d8>
   38a60:	strdeq	r3, [r3], -r8
   38a64:	andeq	r2, r3, r8, asr #10
   38a68:	muleq	r2, ip, r1
   38a6c:	andeq	r3, r3, r4, asr #27
   38a70:	andeq	sp, r2, r8, ror #2
   38a74:	andeq	r2, r3, ip, ror #19
   38a78:	andeq	r0, r0, r1, lsl #13
   38a7c:	ldr	r3, [pc, #184]	; 38b3c <blkid_probe_get_size@plt+0x31624>
   38a80:	ldr	r2, [pc, #184]	; 38b40 <blkid_probe_get_size@plt+0x31628>
   38a84:	add	r3, pc, r3
   38a88:	push	{r4, r5, r6, lr}
   38a8c:	sub	sp, sp, #24
   38a90:	ldr	r5, [r3, r2]
   38a94:	subs	r4, r0, #0
   38a98:	ldr	r3, [r5]
   38a9c:	str	r3, [sp, #20]
   38aa0:	beq	38b08 <blkid_probe_get_size@plt+0x315f0>
   38aa4:	mov	r6, r1
   38aa8:	bl	386fc <blkid_probe_get_size@plt+0x311e4>
   38aac:	cmp	r0, #0
   38ab0:	blt	38b00 <blkid_probe_get_size@plt+0x315e8>
   38ab4:	ldrd	r0, [r4, #32]
   38ab8:	ldrd	r2, [r4, #24]
   38abc:	cmp	r1, r3
   38ac0:	cmpeq	r0, r2
   38ac4:	bne	38b00 <blkid_probe_get_size@plt+0x315e8>
   38ac8:	add	r3, sp, #16
   38acc:	add	r2, sp, #12
   38ad0:	add	r1, r4, #16
   38ad4:	ldr	r0, [r4, #12]
   38ad8:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   38adc:	ldr	r0, [sp, #16]
   38ae0:	ldr	r3, [sp, #12]
   38ae4:	str	r3, [r6]
   38ae8:	ldr	r2, [sp, #20]
   38aec:	ldr	r3, [r5]
   38af0:	cmp	r2, r3
   38af4:	bne	38b38 <blkid_probe_get_size@plt+0x31620>
   38af8:	add	sp, sp, #24
   38afc:	pop	{r4, r5, r6, pc}
   38b00:	mov	r0, #0
   38b04:	b	38ae8 <blkid_probe_get_size@plt+0x315d0>
   38b08:	ldr	r2, [pc, #52]	; 38b44 <blkid_probe_get_size@plt+0x3162c>
   38b0c:	ldr	r1, [pc, #52]	; 38b48 <blkid_probe_get_size@plt+0x31630>
   38b10:	add	r2, pc, r2
   38b14:	add	r2, r2, #3120	; 0xc30
   38b18:	str	r2, [sp]
   38b1c:	ldr	r2, [pc, #40]	; 38b4c <blkid_probe_get_size@plt+0x31634>
   38b20:	ldr	r3, [pc, #40]	; 38b50 <blkid_probe_get_size@plt+0x31638>
   38b24:	add	r2, pc, r2
   38b28:	add	r1, pc, r1
   38b2c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38b30:	mov	r0, r4
   38b34:	b	38ae8 <blkid_probe_get_size@plt+0x315d0>
   38b38:	bl	6fb4 <__stack_chk_fail@plt>
   38b3c:	andeq	pc, r5, r4, ror #1
   38b40:	andeq	r0, r0, ip, lsr r4
   38b44:	andeq	r3, r3, r8, ror #25
   38b48:	andeq	r2, r3, r8, lsr r4
   38b4c:	andeq	sp, r2, ip, lsl #1
   38b50:	andeq	r0, r0, r2, lsl r6
   38b54:	ldr	r3, [pc, #188]	; 38c18 <blkid_probe_get_size@plt+0x31700>
   38b58:	ldr	r2, [pc, #188]	; 38c1c <blkid_probe_get_size@plt+0x31704>
   38b5c:	add	r3, pc, r3
   38b60:	push	{r4, r5, r6, lr}
   38b64:	sub	sp, sp, #24
   38b68:	ldr	r5, [r3, r2]
   38b6c:	subs	r4, r0, #0
   38b70:	ldr	r3, [r5]
   38b74:	str	r3, [sp, #20]
   38b78:	beq	38bd8 <blkid_probe_get_size@plt+0x316c0>
   38b7c:	mov	r6, r1
   38b80:	bl	386fc <blkid_probe_get_size@plt+0x311e4>
   38b84:	cmp	r0, #0
   38b88:	blt	38c0c <blkid_probe_get_size@plt+0x316f4>
   38b8c:	ldrd	r2, [r4, #24]
   38b90:	mvn	r0, #1
   38b94:	mov	r1, #0
   38b98:	strd	r2, [r4, #32]
   38b9c:	strd	r0, [r4, #16]
   38ba0:	add	r3, sp, #16
   38ba4:	add	r2, sp, #12
   38ba8:	add	r1, r4, #16
   38bac:	ldr	r0, [r4, #12]
   38bb0:	bl	45188 <blkid_probe_get_size@plt+0x3dc70>
   38bb4:	ldr	r0, [sp, #16]
   38bb8:	ldr	r3, [sp, #12]
   38bbc:	str	r3, [r6]
   38bc0:	ldr	r2, [sp, #20]
   38bc4:	ldr	r3, [r5]
   38bc8:	cmp	r2, r3
   38bcc:	bne	38c14 <blkid_probe_get_size@plt+0x316fc>
   38bd0:	add	sp, sp, #24
   38bd4:	pop	{r4, r5, r6, pc}
   38bd8:	ldr	r2, [pc, #64]	; 38c20 <blkid_probe_get_size@plt+0x31708>
   38bdc:	ldr	r1, [pc, #64]	; 38c24 <blkid_probe_get_size@plt+0x3170c>
   38be0:	add	r2, pc, r2
   38be4:	add	r2, r2, #3136	; 0xc40
   38be8:	add	r2, r2, #12
   38bec:	str	r2, [sp]
   38bf0:	ldr	r2, [pc, #48]	; 38c28 <blkid_probe_get_size@plt+0x31710>
   38bf4:	ldr	r3, [pc, #48]	; 38c2c <blkid_probe_get_size@plt+0x31714>
   38bf8:	add	r2, pc, r2
   38bfc:	add	r1, pc, r1
   38c00:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38c04:	mov	r0, r4
   38c08:	b	38bc0 <blkid_probe_get_size@plt+0x316a8>
   38c0c:	mov	r0, #0
   38c10:	b	38bc0 <blkid_probe_get_size@plt+0x316a8>
   38c14:	bl	6fb4 <__stack_chk_fail@plt>
   38c18:	andeq	pc, r5, ip
   38c1c:	andeq	r0, r0, ip, lsr r4
   38c20:	andeq	r3, r3, r8, lsl ip
   38c24:	andeq	r2, r3, r4, ror #6
   38c28:			; <UNDEFINED> instruction: 0x0002cfb8
   38c2c:	strdeq	r0, [r0], -sp
   38c30:	ldr	r3, [pc, #548]	; 38e5c <blkid_probe_get_size@plt+0x31944>
   38c34:	ldr	r2, [pc, #548]	; 38e60 <blkid_probe_get_size@plt+0x31948>
   38c38:	add	r3, pc, r3
   38c3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38c40:	sub	sp, sp, #4096	; 0x1000
   38c44:	ldr	r4, [r3, r2]
   38c48:	sub	sp, sp, #32
   38c4c:	add	r2, sp, #4096	; 0x1000
   38c50:	add	r2, r2, #28
   38c54:	ldr	r3, [r4]
   38c58:	subs	r5, r1, #0
   38c5c:	str	r3, [r2]
   38c60:	beq	38dcc <blkid_probe_get_size@plt+0x318b4>
   38c64:	ldrb	r3, [r5]
   38c68:	mov	r6, r0
   38c6c:	cmp	r3, #99	; 0x63
   38c70:	bhi	38cf4 <blkid_probe_get_size@plt+0x317dc>
   38c74:	cmp	r3, #98	; 0x62
   38c78:	bcs	38d9c <blkid_probe_get_size@plt+0x31884>
   38c7c:	cmp	r3, #43	; 0x2b
   38c80:	bne	38cc8 <blkid_probe_get_size@plt+0x317b0>
   38c84:	add	r7, sp, #28
   38c88:	add	r2, r5, #1
   38c8c:	mov	r1, #4096	; 0x1000
   38c90:	mov	r0, r7
   38c94:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   38c98:	mov	r0, r7
   38c9c:	mov	r1, #58	; 0x3a
   38ca0:	bl	74c4 <strchr@plt>
   38ca4:	subs	r2, r0, #0
   38ca8:	beq	38cc8 <blkid_probe_get_size@plt+0x317b0>
   38cac:	mov	r3, #0
   38cb0:	mov	r1, r7
   38cb4:	mov	r0, r6
   38cb8:	strb	r3, [r2], #1
   38cbc:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   38cc0:	mov	r7, r0
   38cc4:	b	38ccc <blkid_probe_get_size@plt+0x317b4>
   38cc8:	mvn	r7, #21
   38ccc:	add	r3, sp, #4096	; 0x1000
   38cd0:	add	r3, r3, #28
   38cd4:	ldr	r2, [r3]
   38cd8:	ldr	r3, [r4]
   38cdc:	mov	r0, r7
   38ce0:	cmp	r2, r3
   38ce4:	bne	38e58 <blkid_probe_get_size@plt+0x31940>
   38ce8:	add	sp, sp, #4096	; 0x1000
   38cec:	add	sp, sp, #32
   38cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38cf4:	cmp	r3, #110	; 0x6e
   38cf8:	bne	38cc8 <blkid_probe_get_size@plt+0x317b0>
   38cfc:	add	r8, sp, #32
   38d00:	mov	r3, #0
   38d04:	sub	r9, r8, #4
   38d08:	mov	r1, r3
   38d0c:	mov	r2, #32
   38d10:	mov	r0, r9
   38d14:	sub	sl, r8, #16
   38d18:	str	r3, [r8, #-20]	; 0xffffffec
   38d1c:	bl	6c84 <memset@plt>
   38d20:	add	r0, r5, #1
   38d24:	mov	r1, sl
   38d28:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   38d2c:	subs	r7, r0, #0
   38d30:	mvnlt	r5, #0
   38d34:	blt	38d80 <blkid_probe_get_size@plt+0x31868>
   38d38:	ldr	r3, [r8, #-16]
   38d3c:	cmp	r3, #0
   38d40:	mvnle	r5, #0
   38d44:	mvnle	r7, #21
   38d48:	ble	38d80 <blkid_probe_get_size@plt+0x31868>
   38d4c:	str	r3, [r8, #12]
   38d50:	bl	398f8 <blkid_probe_get_size@plt+0x323e0>
   38d54:	subs	r5, r0, #0
   38d58:	movlt	r7, r5
   38d5c:	blt	38d80 <blkid_probe_get_size@plt+0x31868>
   38d60:	mov	r2, r9
   38d64:	ldr	r1, [pc, #248]	; 38e64 <blkid_probe_get_size@plt+0x3194c>
   38d68:	bl	6e70 <ioctl@plt>
   38d6c:	cmp	r0, #0
   38d70:	bge	38e04 <blkid_probe_get_size@plt+0x318ec>
   38d74:	bl	732c <__errno_location@plt>
   38d78:	ldr	r7, [r0]
   38d7c:	rsb	r7, r7, #0
   38d80:	mov	r0, r5
   38d84:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   38d88:	ldr	r0, [r8, #-20]	; 0xffffffec
   38d8c:	cmp	r0, #0
   38d90:	beq	38ccc <blkid_probe_get_size@plt+0x317b4>
   38d94:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   38d98:	b	38ccc <blkid_probe_get_size@plt+0x317b4>
   38d9c:	add	r1, sp, #16
   38da0:	add	r0, r5, #1
   38da4:	bl	41594 <blkid_probe_get_size@plt+0x3a07c>
   38da8:	add	r8, sp, #32
   38dac:	subs	r7, r0, #0
   38db0:	blt	38ccc <blkid_probe_get_size@plt+0x317b4>
   38db4:	ldrb	r1, [r5]
   38db8:	mov	r0, r6
   38dbc:	ldrd	r2, [r8, #-16]
   38dc0:	bl	26220 <blkid_probe_get_size@plt+0x1ed08>
   38dc4:	mov	r7, r0
   38dc8:	b	38ccc <blkid_probe_get_size@plt+0x317b4>
   38dcc:	ldr	r3, [pc, #148]	; 38e68 <blkid_probe_get_size@plt+0x31950>
   38dd0:	ldr	r2, [pc, #148]	; 38e6c <blkid_probe_get_size@plt+0x31954>
   38dd4:	add	r3, pc, r3
   38dd8:	add	r3, r3, #3168	; 0xc60
   38ddc:	ldr	r1, [pc, #140]	; 38e70 <blkid_probe_get_size@plt+0x31958>
   38de0:	add	r3, r3, #12
   38de4:	str	r3, [sp]
   38de8:	mov	r0, r5
   38dec:	ldr	r3, [pc, #128]	; 38e74 <blkid_probe_get_size@plt+0x3195c>
   38df0:	add	r2, pc, r2
   38df4:	add	r1, pc, r1
   38df8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   38dfc:	mvn	r7, #21
   38e00:	b	38ccc <blkid_probe_get_size@plt+0x317b4>
   38e04:	ldr	r1, [pc, #108]	; 38e78 <blkid_probe_get_size@plt+0x31960>
   38e08:	mov	r2, r9
   38e0c:	add	r1, pc, r1
   38e10:	sub	r0, r8, #20
   38e14:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   38e18:	subs	r7, r0, #0
   38e1c:	blt	38d80 <blkid_probe_get_size@plt+0x31868>
   38e20:	mov	r1, sl
   38e24:	ldr	r0, [r8, #-20]	; 0xffffffec
   38e28:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   38e2c:	subs	r7, r0, #0
   38e30:	blt	38d80 <blkid_probe_get_size@plt+0x31868>
   38e34:	ldr	r3, [r8, #-16]
   38e38:	ldr	r2, [r8, #12]
   38e3c:	cmp	r2, r3
   38e40:	moveq	r7, #0
   38e44:	ldreq	r3, [r8, #-20]	; 0xffffffec
   38e48:	mvnne	r7, #18
   38e4c:	streq	r3, [r6]
   38e50:	streq	r7, [r8, #-20]	; 0xffffffec
   38e54:	b	38d80 <blkid_probe_get_size@plt+0x31868>
   38e58:	bl	6fb4 <__stack_chk_fail@plt>
   38e5c:	andeq	lr, r5, r0, lsr pc
   38e60:	andeq	r0, r0, ip, lsr r4
   38e64:	andeq	r8, r0, r0, lsl r9
   38e68:	andeq	r3, r3, r4, lsr #20
   38e6c:	andeq	ip, r2, r0, asr #27
   38e70:	andeq	pc, r3, r4, asr #6
   38e74:	andeq	r0, r0, r2, asr r2
   38e78:	andeq	r5, r3, ip, lsl #21
   38e7c:	andeq	r0, r0, r0
   38e80:	push	{r4, r5, r6, lr}
   38e84:	mov	r5, r0
   38e88:	ldrb	r3, [r0, #12]
   38e8c:	cmp	r3, #0
   38e90:	beq	38eb8 <blkid_probe_get_size@plt+0x319a0>
   38e94:	mov	r4, #0
   38e98:	ldr	r3, [r5, #8]
   38e9c:	add	r3, r3, r4, lsl #3
   38ea0:	add	r4, r4, #1
   38ea4:	ldr	r0, [r3, #4]
   38ea8:	bl	38e80 <blkid_probe_get_size@plt+0x31968>
   38eac:	ldrb	r3, [r5, #12]
   38eb0:	cmp	r3, r4
   38eb4:	bhi	38e98 <blkid_probe_get_size@plt+0x31980>
   38eb8:	ldr	r0, [r5, #8]
   38ebc:	bl	69f0 <free@plt>
   38ec0:	mov	r0, r5
   38ec4:	bl	69f0 <free@plt>
   38ec8:	mov	r0, #0
   38ecc:	pop	{r4, r5, r6, pc}
   38ed0:	ldr	r3, [pc, #12]	; 38ee4 <blkid_probe_get_size@plt+0x319cc>
   38ed4:	mov	r2, #0
   38ed8:	add	r3, pc, r3
   38edc:	str	r2, [r3]
   38ee0:	bx	lr
   38ee4:	andeq	pc, r5, r8, lsr #31
   38ee8:	push	{r4, r5, r6, r7, r8, lr}
   38eec:	mov	r7, r1
   38ef0:	ldrb	r1, [r0]
   38ef4:	cmp	r1, #0
   38ef8:	movne	r5, r0
   38efc:	movne	r4, #0
   38f00:	beq	38f68 <blkid_probe_get_size@plt+0x31a50>
   38f04:	cmp	r1, #92	; 0x5c
   38f08:	addne	r6, r5, r4
   38f0c:	beq	38f38 <blkid_probe_get_size@plt+0x31a20>
   38f10:	mov	r0, r7
   38f14:	bl	74c4 <strchr@plt>
   38f18:	cmp	r0, #0
   38f1c:	bne	38f60 <blkid_probe_get_size@plt+0x31a48>
   38f20:	ldrb	r1, [r6, #1]!
   38f24:	add	r4, r4, #1
   38f28:	cmp	r1, #0
   38f2c:	beq	38f60 <blkid_probe_get_size@plt+0x31a48>
   38f30:	cmp	r1, #92	; 0x5c
   38f34:	bne	38f10 <blkid_probe_get_size@plt+0x319f8>
   38f38:	add	r3, r5, r4
   38f3c:	ldrb	r3, [r3, #1]
   38f40:	cmp	r3, #0
   38f44:	beq	38f60 <blkid_probe_get_size@plt+0x31a48>
   38f48:	add	r4, r4, #2
   38f4c:	mov	r0, r4
   38f50:	ldrb	r1, [r5, r4]
   38f54:	cmp	r1, #0
   38f58:	bne	38f04 <blkid_probe_get_size@plt+0x319ec>
   38f5c:	pop	{r4, r5, r6, r7, r8, pc}
   38f60:	mov	r0, r4
   38f64:	pop	{r4, r5, r6, r7, r8, pc}
   38f68:	mov	r0, r1
   38f6c:	pop	{r4, r5, r6, r7, r8, pc}
   38f70:	b	6aa4 <closedir@plt>
   38f74:	push	{r4, lr}
   38f78:	bl	702c <mkdir@plt>
   38f7c:	cmp	r0, #0
   38f80:	blt	38f8c <blkid_probe_get_size@plt+0x31a74>
   38f84:	mov	r0, #0
   38f88:	pop	{r4, pc}
   38f8c:	bl	732c <__errno_location@plt>
   38f90:	ldr	r0, [r0]
   38f94:	rsb	r0, r0, #0
   38f98:	pop	{r4, pc}
   38f9c:	push	{r4, r5, r6, r7, r8, lr}
   38fa0:	sub	sp, sp, #24
   38fa4:	ldr	r4, [pc, #104]	; 39014 <blkid_probe_get_size@plt+0x31afc>
   38fa8:	ldr	r7, [sp, #48]	; 0x30
   38fac:	ldr	ip, [sp, #52]	; 0x34
   38fb0:	mov	r6, r3
   38fb4:	add	r4, pc, r4
   38fb8:	mov	r3, #2048	; 0x800
   38fbc:	mov	r5, r2
   38fc0:	str	r2, [sp, #8]
   38fc4:	mov	r8, r0
   38fc8:	str	r1, [sp, #4]
   38fcc:	str	ip, [sp]
   38fd0:	mov	r1, r3
   38fd4:	str	r6, [sp, #12]
   38fd8:	str	r7, [sp, #16]
   38fdc:	mov	r0, r4
   38fe0:	mov	r2, #1
   38fe4:	bl	7260 <__snprintf_chk@plt>
   38fe8:	mov	r1, #0
   38fec:	str	r4, [sp, #12]
   38ff0:	str	r7, [sp]
   38ff4:	mov	r3, r6
   38ff8:	mov	r2, r5
   38ffc:	mov	r0, r8
   39000:	str	r1, [sp, #8]
   39004:	str	r1, [sp, #4]
   39008:	bl	471a4 <blkid_probe_get_size@plt+0x3fc8c>
   3900c:	add	sp, sp, #24
   39010:	pop	{r4, r5, r6, r7, r8, pc}
   39014:	andeq	pc, r5, r8, lsl #13
   39018:	push	{r4, r5, r6, r7, r8, lr}
   3901c:	mov	r5, #21
   39020:	ldr	r7, [pc, #208]	; 390f8 <blkid_probe_get_size@plt+0x31be0>
   39024:	ldr	r6, [pc, #208]	; 390fc <blkid_probe_get_size@plt+0x31be4>
   39028:	ldr	r8, [pc, #208]	; 39100 <blkid_probe_get_size@plt+0x31be8>
   3902c:	add	r7, pc, r7
   39030:	mov	r2, #0
   39034:	mov	r1, r6
   39038:	mov	r0, r7
   3903c:	bl	6ec4 <open64@plt>
   39040:	subs	r4, r0, #0
   39044:	bge	3908c <blkid_probe_get_size@plt+0x31b74>
   39048:	bl	732c <__errno_location@plt>
   3904c:	ldr	r4, [r0]
   39050:	mov	r0, r8
   39054:	cmp	r4, #5
   39058:	bne	3906c <blkid_probe_get_size@plt+0x31b54>
   3905c:	subs	r5, r5, #1
   39060:	beq	390c0 <blkid_probe_get_size@plt+0x31ba8>
   39064:	bl	7278 <usleep@plt>
   39068:	b	39030 <blkid_probe_get_size@plt+0x31b18>
   3906c:	ldr	r3, [pc, #144]	; 39104 <blkid_probe_get_size@plt+0x31bec>
   39070:	cmp	r4, #0
   39074:	add	r3, pc, r3
   39078:	rsb	r4, r4, #0
   3907c:	str	r4, [r3]
   39080:	ble	390a4 <blkid_probe_get_size@plt+0x31b8c>
   39084:	mov	r0, r4
   39088:	pop	{r4, r5, r6, r7, r8, pc}
   3908c:	bl	6ffc <isatty@plt>
   39090:	cmp	r0, #0
   39094:	ble	390d8 <blkid_probe_get_size@plt+0x31bc0>
   39098:	ldr	r3, [pc, #104]	; 39108 <blkid_probe_get_size@plt+0x31bf0>
   3909c:	add	r3, pc, r3
   390a0:	str	r4, [r3]
   390a4:	mov	r0, r4
   390a8:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   390ac:	ldr	r3, [pc, #88]	; 3910c <blkid_probe_get_size@plt+0x31bf4>
   390b0:	mov	r4, #0
   390b4:	add	r3, pc, r3
   390b8:	str	r0, [r3]
   390bc:	b	39084 <blkid_probe_get_size@plt+0x31b6c>
   390c0:	ldr	r3, [pc, #72]	; 39110 <blkid_probe_get_size@plt+0x31bf8>
   390c4:	mvn	r2, #4
   390c8:	add	r3, pc, r3
   390cc:	mov	r4, r2
   390d0:	str	r2, [r3]
   390d4:	b	39084 <blkid_probe_get_size@plt+0x31b6c>
   390d8:	mov	r0, r4
   390dc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   390e0:	ldr	r3, [pc, #44]	; 39114 <blkid_probe_get_size@plt+0x31bfc>
   390e4:	mvn	r2, #24
   390e8:	add	r3, pc, r3
   390ec:	mov	r4, r2
   390f0:	str	r2, [r3]
   390f4:	b	39084 <blkid_probe_get_size@plt+0x31b6c>
   390f8:	muleq	r3, r0, r2
   390fc:	andeq	r0, r8, r1, lsl #2
   39100:	andeq	ip, r0, r0, asr r3
   39104:	andeq	pc, r5, r0, lsr #32
   39108:	strdeq	lr, [r5], -r8
   3910c:	andeq	lr, r5, r0, ror #31
   39110:	andeq	lr, r5, ip, asr #31
   39114:	andeq	lr, r5, ip, lsr #31
   39118:	push	{r4, r5, r6, lr}
   3911c:	mov	r4, r0
   39120:	mov	r0, r1
   39124:	mov	r5, r1
   39128:	bl	723c <strlen@plt>
   3912c:	mov	r1, r5
   39130:	mov	r6, r0
   39134:	mov	r2, r0
   39138:	mov	r0, r4
   3913c:	bl	6a5c <strncmp@plt>
   39140:	cmp	r0, #0
   39144:	addeq	r0, r4, r6
   39148:	movne	r0, #0
   3914c:	pop	{r4, r5, r6, pc}
   39150:	cmp	r1, #127	; 0x7f
   39154:	bhi	3916c <blkid_probe_get_size@plt+0x31c54>
   39158:	cmp	r0, #0
   3915c:	beq	391e4 <blkid_probe_get_size@plt+0x31ccc>
   39160:	strb	r1, [r0]
   39164:	mov	r0, #1
   39168:	bx	lr
   3916c:	cmp	r1, #2048	; 0x800
   39170:	bcs	391a0 <blkid_probe_get_size@plt+0x31c88>
   39174:	cmp	r0, #0
   39178:	beq	39238 <blkid_probe_get_size@plt+0x31d20>
   3917c:	and	r3, r1, #63	; 0x3f
   39180:	mvn	r2, #63	; 0x3f
   39184:	mvn	r3, r3, lsl #25
   39188:	orr	r1, r2, r1, lsr #6
   3918c:	mvn	r3, r3, lsr #25
   39190:	strb	r3, [r0, #1]
   39194:	strb	r1, [r0]
   39198:	mov	r0, #2
   3919c:	bx	lr
   391a0:	cmp	r1, #65536	; 0x10000
   391a4:	push	{lr}		; (str lr, [sp, #-4]!)
   391a8:	bcs	391ec <blkid_probe_get_size@plt+0x31cd4>
   391ac:	cmp	r0, #0
   391b0:	beq	39250 <blkid_probe_get_size@plt+0x31d38>
   391b4:	lsl	ip, r1, #20
   391b8:	and	lr, r1, #63	; 0x3f
   391bc:	mvn	r3, #127	; 0x7f
   391c0:	mvn	r2, #31
   391c4:	orr	ip, r3, ip, lsr #26
   391c8:	orr	r1, r2, r1, lsr #12
   391cc:	orr	r3, r3, lr
   391d0:	strb	ip, [r0, #1]
   391d4:	strb	r3, [r0, #2]
   391d8:	strb	r1, [r0]
   391dc:	mov	r0, #3
   391e0:	pop	{pc}		; (ldr pc, [sp], #4)
   391e4:	mov	r0, #1
   391e8:	bx	lr
   391ec:	cmp	r1, #2097152	; 0x200000
   391f0:	bcs	39240 <blkid_probe_get_size@plt+0x31d28>
   391f4:	cmp	r0, #0
   391f8:	beq	39248 <blkid_probe_get_size@plt+0x31d30>
   391fc:	lsl	lr, r1, #14
   39200:	lsl	ip, r1, #20
   39204:	mvn	r3, #127	; 0x7f
   39208:	and	r2, r1, #63	; 0x3f
   3920c:	orr	lr, r3, lr, lsr #26
   39210:	orr	ip, r3, ip, lsr #26
   39214:	orr	r3, r3, r2
   39218:	mvn	r2, #15
   3921c:	orr	r1, r2, r1, lsr #18
   39220:	strb	lr, [r0, #1]
   39224:	strb	ip, [r0, #2]
   39228:	strb	r3, [r0, #3]
   3922c:	strb	r1, [r0]
   39230:	mov	r0, #4
   39234:	pop	{pc}		; (ldr pc, [sp], #4)
   39238:	mov	r0, #2
   3923c:	bx	lr
   39240:	mov	r0, #0
   39244:	pop	{pc}		; (ldr pc, [sp], #4)
   39248:	mov	r0, #4
   3924c:	pop	{pc}		; (ldr pc, [sp], #4)
   39250:	mov	r0, #3
   39254:	pop	{pc}		; (ldr pc, [sp], #4)
   39258:	cmp	r0, #1114112	; 0x110000
   3925c:	bcs	39294 <blkid_probe_get_size@plt+0x31d7c>
   39260:	bic	r3, r0, #2032	; 0x7f0
   39264:	bic	r3, r3, #15
   39268:	cmp	r3, #55296	; 0xd800
   3926c:	beq	39294 <blkid_probe_get_size@plt+0x31d7c>
   39270:	sub	r3, r0, #64768	; 0xfd00
   39274:	sub	r3, r3, #208	; 0xd0
   39278:	cmp	r3, #31
   3927c:	bls	39294 <blkid_probe_get_size@plt+0x31d7c>
   39280:	ldr	r3, [pc, #20]	; 3929c <blkid_probe_get_size@plt+0x31d84>
   39284:	bics	r3, r3, r0
   39288:	movne	r0, #1
   3928c:	moveq	r0, #0
   39290:	bx	lr
   39294:	mov	r0, #0
   39298:	bx	lr
   3929c:	strdeq	pc, [r0], -lr
   392a0:	push	{r4, lr}
   392a4:	ldr	r4, [pc, #52]	; 392e0 <blkid_probe_get_size@plt+0x31dc8>
   392a8:	add	r4, pc, r4
   392ac:	ldr	r0, [r4, #4]
   392b0:	cmp	r0, #0
   392b4:	blt	392c4 <blkid_probe_get_size@plt+0x31dac>
   392b8:	adds	r0, r0, #0
   392bc:	movne	r0, #1
   392c0:	pop	{r4, pc}
   392c4:	ldr	r0, [pc, #24]	; 392e4 <blkid_probe_get_size@plt+0x31dcc>
   392c8:	mov	r1, #0
   392cc:	add	r0, pc, r0
   392d0:	bl	6ff0 <access@plt>
   392d4:	lsr	r0, r0, #31
   392d8:	str	r0, [r4, #4]
   392dc:	b	392b8 <blkid_probe_get_size@plt+0x31da0>
   392e0:	andeq	lr, r5, ip, ror #27
   392e4:	andeq	r6, r3, r0
   392e8:	subs	r3, r0, #0
   392ec:	beq	39314 <blkid_probe_get_size@plt+0x31dfc>
   392f0:	ldr	r0, [r3]
   392f4:	cmp	r0, #0
   392f8:	bxeq	lr
   392fc:	mov	r0, #0
   39300:	ldr	r2, [r3, #4]!
   39304:	add	r0, r0, #1
   39308:	cmp	r2, #0
   3930c:	bne	39300 <blkid_probe_get_size@plt+0x31de8>
   39310:	bx	lr
   39314:	mov	r0, r3
   39318:	bx	lr
   3931c:	push	{r4, r5, r6, r7, r8, lr}
   39320:	subs	r4, r1, #0
   39324:	beq	39378 <blkid_probe_get_size@plt+0x31e60>
   39328:	ldr	r8, [r0]
   3932c:	mov	r6, r0
   39330:	mov	r0, r8
   39334:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
   39338:	mov	r1, #2
   3933c:	mov	r7, #0
   39340:	adds	r1, r0, r1
   39344:	mov	r5, r0
   39348:	bcs	39380 <blkid_probe_get_size@plt+0x31e68>
   3934c:	mov	r0, r8
   39350:	mov	r2, #4
   39354:	bl	711c <reallocarray@plt>
   39358:	subs	r3, r0, #0
   3935c:	beq	39380 <blkid_probe_get_size@plt+0x31e68>
   39360:	add	r2, r3, r5, lsl #2
   39364:	str	r4, [r3, r5, lsl #2]
   39368:	mov	r0, r7
   3936c:	str	r7, [r2, #4]
   39370:	str	r3, [r6]
   39374:	pop	{r4, r5, r6, r7, r8, pc}
   39378:	mov	r0, r4
   3937c:	pop	{r4, r5, r6, r7, r8, pc}
   39380:	mvn	r0, #11
   39384:	pop	{r4, r5, r6, r7, r8, pc}
   39388:	push	{r4, r5, r6, lr}
   3938c:	mov	r5, r1
   39390:	bl	3931c <blkid_probe_get_size@plt+0x31e04>
   39394:	subs	r4, r0, #0
   39398:	blt	393a4 <blkid_probe_get_size@plt+0x31e8c>
   3939c:	mov	r0, r4
   393a0:	pop	{r4, r5, r6, pc}
   393a4:	mov	r0, r5
   393a8:	bl	69f0 <free@plt>
   393ac:	mov	r0, r4
   393b0:	pop	{r4, r5, r6, pc}
   393b4:	push	{r4, r5, r6, lr}
   393b8:	subs	r5, r0, #0
   393bc:	popeq	{r4, r5, r6, pc}
   393c0:	ldr	r0, [r5]
   393c4:	cmp	r0, #0
   393c8:	beq	393e0 <blkid_probe_get_size@plt+0x31ec8>
   393cc:	mov	r4, r5
   393d0:	bl	69f0 <free@plt>
   393d4:	ldr	r0, [r4, #4]!
   393d8:	cmp	r0, #0
   393dc:	bne	393d0 <blkid_probe_get_size@plt+0x31eb8>
   393e0:	mov	r3, #0
   393e4:	str	r3, [r5]
   393e8:	pop	{r4, r5, r6, pc}
   393ec:	push	{r4, lr}
   393f0:	mov	r4, r0
   393f4:	bl	393b4 <blkid_probe_get_size@plt+0x31e9c>
   393f8:	mov	r0, r4
   393fc:	bl	69f0 <free@plt>
   39400:	mov	r0, #0
   39404:	pop	{r4, pc}
   39408:	push	{r4, r5, r6, r7, r8, lr}
   3940c:	subs	r4, r0, #0
   39410:	beq	39470 <blkid_probe_get_size@plt+0x31f58>
   39414:	ldr	r6, [pc, #92]	; 39478 <blkid_probe_get_size@plt+0x31f60>
   39418:	add	r6, pc, r6
   3941c:	mov	r1, r6
   39420:	bl	6c9c <strspn@plt>
   39424:	adds	r7, r4, r0
   39428:	beq	39468 <blkid_probe_get_size@plt+0x31f50>
   3942c:	ldrb	r1, [r4, r0]
   39430:	cmp	r1, #0
   39434:	moveq	r5, r7
   39438:	beq	39460 <blkid_probe_get_size@plt+0x31f48>
   3943c:	add	r4, r7, #1
   39440:	mov	r5, r7
   39444:	mov	r0, r6
   39448:	bl	74c4 <strchr@plt>
   3944c:	cmp	r0, #0
   39450:	moveq	r5, r4
   39454:	ldrb	r1, [r4], #1
   39458:	cmp	r1, #0
   3945c:	bne	39444 <blkid_probe_get_size@plt+0x31f2c>
   39460:	mov	r3, #0
   39464:	strb	r3, [r5]
   39468:	mov	r0, r7
   3946c:	pop	{r4, r5, r6, r7, r8, pc}
   39470:	mov	r7, r4
   39474:	b	39468 <blkid_probe_get_size@plt+0x31f50>
   39478:	andeq	r1, r3, r4, lsl #19
   3947c:	push	{r0, r1, r2, r3}
   39480:	ldr	r3, [pc, #260]	; 3958c <blkid_probe_get_size@plt+0x32074>
   39484:	ldr	r2, [pc, #260]	; 39590 <blkid_probe_get_size@plt+0x32078>
   39488:	add	r3, pc, r3
   3948c:	push	{r4, r5, r6, r7, lr}
   39490:	sub	sp, sp, #12
   39494:	ldr	r7, [r3, r2]
   39498:	ldr	r6, [sp, #32]
   3949c:	add	r1, sp, #36	; 0x24
   394a0:	ldr	r3, [r7]
   394a4:	cmp	r6, #0
   394a8:	str	r1, [sp]
   394ac:	str	r3, [sp, #4]
   394b0:	beq	39574 <blkid_probe_get_size@plt+0x3205c>
   394b4:	mov	r0, r6
   394b8:	bl	723c <strlen@plt>
   394bc:	add	r5, sp, #40	; 0x28
   394c0:	str	r5, [sp]
   394c4:	mov	r4, r0
   394c8:	ldr	r0, [sp, #36]	; 0x24
   394cc:	cmp	r0, #0
   394d0:	bne	394f4 <blkid_probe_get_size@plt+0x31fdc>
   394d4:	b	3952c <blkid_probe_get_size@plt+0x32014>
   394d8:	ldr	r3, [sp]
   394dc:	add	r4, r4, r0
   394e0:	add	r2, r3, #4
   394e4:	ldr	r0, [r3]
   394e8:	str	r2, [sp]
   394ec:	cmp	r0, #0
   394f0:	beq	3952c <blkid_probe_get_size@plt+0x32014>
   394f4:	bl	723c <strlen@plt>
   394f8:	mvn	r3, r4
   394fc:	cmp	r3, r0
   39500:	bcs	394d8 <blkid_probe_get_size@plt+0x31fc0>
   39504:	mov	r4, #0
   39508:	ldr	r2, [sp, #4]
   3950c:	ldr	r3, [r7]
   39510:	mov	r0, r4
   39514:	cmp	r2, r3
   39518:	bne	39588 <blkid_probe_get_size@plt+0x32070>
   3951c:	add	sp, sp, #12
   39520:	pop	{r4, r5, r6, r7, lr}
   39524:	add	sp, sp, #16
   39528:	bx	lr
   3952c:	adds	r0, r4, #1
   39530:	moveq	r0, #1
   39534:	bl	7230 <malloc@plt>
   39538:	subs	r4, r0, #0
   3953c:	beq	39508 <blkid_probe_get_size@plt+0x31ff0>
   39540:	mov	r1, r6
   39544:	bl	6ae0 <stpcpy@plt>
   39548:	ldr	r1, [sp, #36]	; 0x24
   3954c:	str	r5, [sp]
   39550:	cmp	r1, #0
   39554:	beq	39508 <blkid_probe_get_size@plt+0x31ff0>
   39558:	add	r5, r5, #4
   3955c:	bl	6ae0 <stpcpy@plt>
   39560:	ldr	r1, [r5, #-4]
   39564:	str	r5, [sp]
   39568:	cmp	r1, #0
   3956c:	bne	39558 <blkid_probe_get_size@plt+0x32040>
   39570:	b	39508 <blkid_probe_get_size@plt+0x31ff0>
   39574:	mov	r0, #1
   39578:	bl	7230 <malloc@plt>
   3957c:	subs	r4, r0, #0
   39580:	strbne	r6, [r4]
   39584:	b	39508 <blkid_probe_get_size@plt+0x31ff0>
   39588:	bl	6fb4 <__stack_chk_fail@plt>
   3958c:	andeq	lr, r5, r0, ror #13
   39590:	andeq	r0, r0, ip, lsr r4
   39594:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   39598:	subs	r4, r1, #0
   3959c:	beq	395fc <blkid_probe_get_size@plt+0x320e4>
   395a0:	mov	r5, r0
   395a4:	mov	r0, r4
   395a8:	bl	723c <strlen@plt>
   395ac:	mov	r9, r0
   395b0:	mov	r0, r5
   395b4:	bl	723c <strlen@plt>
   395b8:	add	r8, r9, r0
   395bc:	mov	r7, r0
   395c0:	add	r0, r8, #1
   395c4:	bl	7230 <malloc@plt>
   395c8:	subs	r6, r0, #0
   395cc:	beq	395f4 <blkid_probe_get_size@plt+0x320dc>
   395d0:	mov	r1, r5
   395d4:	mov	r2, r7
   395d8:	bl	71e8 <memcpy@plt>
   395dc:	mov	r2, r9
   395e0:	mov	r1, r4
   395e4:	add	r0, r6, r7
   395e8:	bl	71e8 <memcpy@plt>
   395ec:	mov	r3, #0
   395f0:	strb	r3, [r6, r8]
   395f4:	mov	r0, r6
   395f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   395fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   39600:	b	74e8 <strdup@plt>
   39604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39608:	mov	r7, r0
   3960c:	ldr	r0, [pc, #408]	; 397ac <blkid_probe_get_size@plt+0x32294>
   39610:	ldr	ip, [pc, #408]	; 397b0 <blkid_probe_get_size@plt+0x32298>
   39614:	add	r0, pc, r0
   39618:	ldr	r5, [r7]
   3961c:	ldr	r6, [r0, ip]
   39620:	sub	sp, sp, #20
   39624:	ldrb	r4, [r5]
   39628:	mov	sl, r2
   3962c:	ldr	r2, [r6]
   39630:	cmp	r4, #0
   39634:	mov	r9, r1
   39638:	str	r2, [sp, #12]
   3963c:	mov	r1, r0
   39640:	beq	396f0 <blkid_probe_get_size@plt+0x321d8>
   39644:	mov	r0, r5
   39648:	mov	r1, sl
   3964c:	mov	r8, r3
   39650:	bl	6c9c <strspn@plt>
   39654:	add	r4, r5, r0
   39658:	ldrb	r5, [r5, r0]
   3965c:	cmp	r5, #0
   39660:	streq	r4, [r7]
   39664:	moveq	r4, r5
   39668:	beq	396f0 <blkid_probe_get_size@plt+0x321d8>
   3966c:	tst	r8, #1
   39670:	beq	3970c <blkid_probe_get_size@plt+0x321f4>
   39674:	ldr	r0, [pc, #312]	; 397b4 <blkid_probe_get_size@plt+0x3229c>
   39678:	mov	r1, r5
   3967c:	add	r0, pc, r0
   39680:	bl	74c4 <strchr@plt>
   39684:	cmp	r0, #0
   39688:	beq	39728 <blkid_probe_get_size@plt+0x32210>
   3968c:	add	r3, r4, #1
   39690:	mov	r0, r3
   39694:	mov	r2, #0
   39698:	add	r1, sp, #8
   3969c:	str	r3, [sp, #4]
   396a0:	strb	r5, [sp, #8]
   396a4:	strb	r2, [sp, #9]
   396a8:	bl	38ee8 <blkid_probe_get_size@plt+0x319d0>
   396ac:	ldr	r3, [sp, #4]
   396b0:	add	fp, r0, #1
   396b4:	str	r0, [r9]
   396b8:	ldrb	r9, [r4, fp]
   396bc:	subs	r5, r5, r9
   396c0:	movne	r5, #1
   396c4:	cmp	r9, #0
   396c8:	moveq	r5, #1
   396cc:	cmp	r5, #0
   396d0:	beq	39774 <blkid_probe_get_size@plt+0x3225c>
   396d4:	ands	r8, r8, #2
   396d8:	beq	39768 <blkid_probe_get_size@plt+0x32250>
   396dc:	cmp	r9, #0
   396e0:	addne	fp, fp, #1
   396e4:	add	r4, r4, fp
   396e8:	str	r4, [r7]
   396ec:	mov	r4, r3
   396f0:	ldr	r2, [sp, #12]
   396f4:	ldr	r3, [r6]
   396f8:	mov	r0, r4
   396fc:	cmp	r2, r3
   39700:	bne	397a8 <blkid_probe_get_size@plt+0x32290>
   39704:	add	sp, sp, #20
   39708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3970c:	mov	r1, sl
   39710:	mov	r0, r4
   39714:	bl	6a8c <strcspn@plt>
   39718:	add	r3, r4, r0
   3971c:	str	r0, [r9]
   39720:	str	r3, [r7]
   39724:	b	396f0 <blkid_probe_get_size@plt+0x321d8>
   39728:	mov	r1, sl
   3972c:	mov	r0, r4
   39730:	bl	38ee8 <blkid_probe_get_size@plt+0x319d0>
   39734:	str	r0, [r9]
   39738:	ldrb	r1, [r4, r0]
   3973c:	add	r5, r4, r0
   39740:	cmp	r1, #0
   39744:	beq	39758 <blkid_probe_get_size@plt+0x32240>
   39748:	mov	r0, sl
   3974c:	bl	74c4 <strchr@plt>
   39750:	cmp	r0, #0
   39754:	beq	39760 <blkid_probe_get_size@plt+0x32248>
   39758:	str	r5, [r7]
   3975c:	b	396f0 <blkid_probe_get_size@plt+0x321d8>
   39760:	ands	r8, r8, #2
   39764:	bne	39758 <blkid_probe_get_size@plt+0x32240>
   39768:	str	r4, [r7]
   3976c:	mov	r4, r8
   39770:	b	396f0 <blkid_probe_get_size@plt+0x321d8>
   39774:	add	r0, r0, #2
   39778:	add	r5, r4, r0
   3977c:	ldrb	r1, [r4, r0]
   39780:	cmp	r1, #0
   39784:	beq	3979c <blkid_probe_get_size@plt+0x32284>
   39788:	mov	r0, sl
   3978c:	bl	74c4 <strchr@plt>
   39790:	ldr	r3, [sp, #4]
   39794:	cmp	r0, #0
   39798:	beq	396d4 <blkid_probe_get_size@plt+0x321bc>
   3979c:	str	r5, [r7]
   397a0:	mov	r4, r3
   397a4:	b	396f0 <blkid_probe_get_size@plt+0x321d8>
   397a8:	bl	6fb4 <__stack_chk_fail@plt>
   397ac:	andeq	lr, r5, r4, asr r5
   397b0:	andeq	r0, r0, ip, lsr r4
   397b4:	andeq	r5, r3, r4, lsl #25
   397b8:	adds	r2, r0, #0
   397bc:	movne	r2, #1
   397c0:	adds	r3, r1, #0
   397c4:	movne	r3, #1
   397c8:	tst	r2, r3
   397cc:	bne	397f8 <blkid_probe_get_size@plt+0x322e0>
   397d0:	cmp	r0, #0
   397d4:	movne	r3, #0
   397d8:	cmp	r3, #0
   397dc:	bne	397fc <blkid_probe_get_size@plt+0x322e4>
   397e0:	cmp	r1, #0
   397e4:	push	{lr}		; (str lr, [sp, #-4]!)
   397e8:	moveq	r0, r2
   397ec:	mov	lr, r1
   397f0:	movne	r0, #0
   397f4:	pop	{pc}		; (ldr pc, [sp], #4)
   397f8:	b	7314 <strcmp@plt>
   397fc:	mvn	r0, #0
   39800:	bx	lr
   39804:	push	{r4, r5, r6, r7, r8, lr}
   39808:	subs	r6, r2, #0
   3980c:	beq	3983c <blkid_probe_get_size@plt+0x32324>
   39810:	mov	r7, r1
   39814:	sub	r5, r0, #4
   39818:	mov	r4, #0
   3981c:	mov	r1, r6
   39820:	ldr	r0, [r5, #4]!
   39824:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   39828:	cmp	r0, #0
   3982c:	beq	39844 <blkid_probe_get_size@plt+0x3232c>
   39830:	add	r4, r4, #1
   39834:	cmp	r7, r4
   39838:	bne	3981c <blkid_probe_get_size@plt+0x32304>
   3983c:	mvn	r0, #0
   39840:	pop	{r4, r5, r6, r7, r8, pc}
   39844:	mov	r0, r4
   39848:	pop	{r4, r5, r6, r7, r8, pc}
   3984c:	push	{r4, lr}
   39850:	subs	r4, r0, #0
   39854:	popeq	{r4, pc}
   39858:	ldr	r0, [r4, #8]
   3985c:	cmp	r0, #0
   39860:	popeq	{r4, pc}
   39864:	bl	38e80 <blkid_probe_get_size@plt+0x31968>
   39868:	str	r0, [r4, #8]
   3986c:	pop	{r4, pc}
   39870:	push	{r4, r5, r6, lr}
   39874:	mov	r0, #32
   39878:	bl	7230 <malloc@plt>
   3987c:	subs	r4, r0, #0
   39880:	beq	398d0 <blkid_probe_get_size@plt+0x323b8>
   39884:	mov	r1, #1
   39888:	mov	r0, r1
   3988c:	bl	7164 <calloc@plt>
   39890:	mov	r1, #16
   39894:	mov	r6, r0
   39898:	mov	r0, #1
   3989c:	bl	7164 <calloc@plt>
   398a0:	mov	r2, #32
   398a4:	mov	r1, #0
   398a8:	mov	r5, r0
   398ac:	mov	r0, r4
   398b0:	bl	6c84 <memset@plt>
   398b4:	mov	r3, #1
   398b8:	cmp	r5, #0
   398bc:	cmpne	r6, #0
   398c0:	str	r6, [r4]
   398c4:	stmib	r4, {r3, r5}
   398c8:	str	r3, [r4, #12]
   398cc:	beq	398d8 <blkid_probe_get_size@plt+0x323c0>
   398d0:	mov	r0, r4
   398d4:	pop	{r4, r5, r6, pc}
   398d8:	mov	r0, r6
   398dc:	bl	69f0 <free@plt>
   398e0:	mov	r0, r5
   398e4:	bl	69f0 <free@plt>
   398e8:	mov	r0, r4
   398ec:	bl	69f0 <free@plt>
   398f0:	mov	r4, #0
   398f4:	b	398d0 <blkid_probe_get_size@plt+0x323b8>
   398f8:	push	{r4, lr}
   398fc:	mov	r2, #0
   39900:	ldr	r1, [pc, #52]	; 3993c <blkid_probe_get_size@plt+0x32424>
   39904:	mov	r0, #2
   39908:	bl	6fd8 <socket@plt>
   3990c:	cmp	r0, #0
   39910:	popge	{r4, pc}
   39914:	mov	r2, #16
   39918:	mov	r0, r2
   3991c:	ldr	r1, [pc, #28]	; 39940 <blkid_probe_get_size@plt+0x32428>
   39920:	bl	6fd8 <socket@plt>
   39924:	cmp	r0, #0
   39928:	popge	{r4, pc}
   3992c:	bl	732c <__errno_location@plt>
   39930:	ldr	r0, [r0]
   39934:	rsb	r0, r0, #0
   39938:	pop	{r4, pc}
   3993c:	andeq	r0, r8, r2
   39940:	andeq	r0, r8, r3
   39944:	push	{r4, lr}
   39948:	ldr	r4, [pc, #56]	; 39988 <blkid_probe_get_size@plt+0x32470>
   3994c:	add	r4, pc, r4
   39950:	ldr	r0, [r4, #8]
   39954:	cmp	r0, #0
   39958:	blt	39968 <blkid_probe_get_size@plt+0x32450>
   3995c:	adds	r0, r0, #0
   39960:	movne	r0, #1
   39964:	pop	{r4, pc}
   39968:	ldr	r0, [pc, #28]	; 3998c <blkid_probe_get_size@plt+0x32474>
   3996c:	mov	r1, #0
   39970:	add	r0, pc, r0
   39974:	bl	6ff0 <access@plt>
   39978:	mvn	r0, r0
   3997c:	lsr	r0, r0, #31
   39980:	str	r0, [r4, #8]
   39984:	b	3995c <blkid_probe_get_size@plt+0x32444>
   39988:	andeq	lr, r5, r8, asr #14
   3998c:	muleq	r3, r4, r9
   39990:	push	{r4, lr}
   39994:	ldr	r4, [pc, #48]	; 399cc <blkid_probe_get_size@plt+0x324b4>
   39998:	add	r4, pc, r4
   3999c:	ldr	r0, [r4, #12]
   399a0:	cmp	r0, #0
   399a4:	blt	399b4 <blkid_probe_get_size@plt+0x3249c>
   399a8:	adds	r0, r0, #0
   399ac:	movne	r0, #1
   399b0:	pop	{r4, pc}
   399b4:	bl	6d68 <is_selinux_enabled@plt>
   399b8:	cmp	r0, #0
   399bc:	movle	r0, #0
   399c0:	movgt	r0, #1
   399c4:	str	r0, [r4, #12]
   399c8:	b	399a8 <blkid_probe_get_size@plt+0x32490>
   399cc:	strdeq	lr, [r5], -ip
   399d0:	push	{r4, r5, r6, lr}
   399d4:	bl	732c <__errno_location@plt>
   399d8:	mov	r4, r0
   399dc:	ldr	r5, [r0]
   399e0:	bl	39990 <blkid_probe_get_size@plt+0x32478>
   399e4:	cmp	r0, #0
   399e8:	bne	399f8 <blkid_probe_get_size@plt+0x324e0>
   399ec:	cmp	r5, #0
   399f0:	strge	r5, [r4]
   399f4:	pop	{r4, r5, r6, pc}
   399f8:	mov	r0, #0
   399fc:	bl	6c48 <setfscreatecon_raw@plt>
   39a00:	cmp	r5, #0
   39a04:	strge	r5, [r4]
   39a08:	pop	{r4, r5, r6, pc}
   39a0c:	push	{r4, r5, r6, r7, r8, lr}
   39a10:	mvn	r3, #0
   39a14:	ldr	r5, [pc, #176]	; 39acc <blkid_probe_get_size@plt+0x325b4>
   39a18:	ldr	r6, [pc, #176]	; 39ad0 <blkid_probe_get_size@plt+0x325b8>
   39a1c:	add	r5, pc, r5
   39a20:	add	r6, pc, r6
   39a24:	mcr	15, 0, r0, cr7, cr10, {5}
   39a28:	ldrex	r4, [r5]
   39a2c:	cmp	r4, #0
   39a30:	bne	39a40 <blkid_probe_get_size@plt+0x32528>
   39a34:	strex	r2, r3, [r5]
   39a38:	cmp	r2, #0
   39a3c:	bne	39a28 <blkid_probe_get_size@plt+0x32510>
   39a40:	cmp	r4, r3
   39a44:	mcr	15, 0, r0, cr7, cr10, {5}
   39a48:	beq	39a88 <blkid_probe_get_size@plt+0x32570>
   39a4c:	cmp	r4, #0
   39a50:	bne	39a80 <blkid_probe_get_size@plt+0x32568>
   39a54:	mov	r0, #20
   39a58:	bl	6b94 <syscall@plt>
   39a5c:	ldr	r8, [pc, #112]	; 39ad4 <blkid_probe_get_size@plt+0x325bc>
   39a60:	add	r8, pc, r8
   39a64:	ldrb	r7, [r8, #2048]	; 0x800
   39a68:	cmp	r7, #0
   39a6c:	mov	r4, r0
   39a70:	beq	39a94 <blkid_probe_get_size@plt+0x3257c>
   39a74:	ldr	r3, [pc, #92]	; 39ad8 <blkid_probe_get_size@plt+0x325c0>
   39a78:	add	r3, pc, r3
   39a7c:	str	r4, [r3]
   39a80:	mov	r0, r4
   39a84:	pop	{r4, r5, r6, r7, r8, pc}
   39a88:	mov	r0, #20
   39a8c:	pop	{r4, r5, r6, r7, r8, lr}
   39a90:	b	6b94 <syscall@plt>
   39a94:	ldr	r3, [pc, #64]	; 39adc <blkid_probe_get_size@plt+0x325c4>
   39a98:	ldr	r2, [pc, #64]	; 39ae0 <blkid_probe_get_size@plt+0x325c8>
   39a9c:	mov	r1, r7
   39aa0:	ldr	r3, [r6, r3]
   39aa4:	add	r2, pc, r2
   39aa8:	mov	r0, r7
   39aac:	ldr	r3, [r3]
   39ab0:	bl	7068 <__register_atfork@plt>
   39ab4:	cmp	r0, #0
   39ab8:	strne	r7, [r5]
   39abc:	bne	39a80 <blkid_probe_get_size@plt+0x32568>
   39ac0:	mov	r3, #1
   39ac4:	strb	r3, [r8, #2048]	; 0x800
   39ac8:	b	39a74 <blkid_probe_get_size@plt+0x3255c>
   39acc:	andeq	pc, r5, r4, ror #8
   39ad0:	andeq	lr, r5, r8, asr #2
   39ad4:	ldrdeq	lr, [r5], -ip
   39ad8:	andeq	pc, r5, r8, lsl #8
   39adc:	andeq	r0, r0, r8, asr #8
   39ae0:			; <UNDEFINED> instruction: 0xfffff424
   39ae4:	ldr	r0, [pc, #96]	; 39b4c <blkid_probe_get_size@plt+0x32634>
   39ae8:	push	{r4, r5, r6, lr}
   39aec:	add	r0, pc, r0
   39af0:	bl	74dc <__tls_get_addr@plt>
   39af4:	ldr	r5, [pc, #84]	; 39b50 <blkid_probe_get_size@plt+0x32638>
   39af8:	ldr	r4, [r5, r0]
   39afc:	cmp	r4, #0
   39b00:	beq	39b14 <blkid_probe_get_size@plt+0x325fc>
   39b04:	movgt	r4, #1
   39b08:	movle	r4, #0
   39b0c:	mov	r0, r4
   39b10:	pop	{r4, r5, r6, pc}
   39b14:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   39b18:	mov	r6, r0
   39b1c:	mov	r0, #224	; 0xe0
   39b20:	bl	6b94 <syscall@plt>
   39b24:	cmp	r6, r0
   39b28:	ldr	r0, [pc, #36]	; 39b54 <blkid_probe_get_size@plt+0x3263c>
   39b2c:	moveq	r4, #1
   39b30:	add	r0, pc, r0
   39b34:	moveq	r6, r4
   39b38:	mvnne	r6, #0
   39b3c:	bl	74dc <__tls_get_addr@plt>
   39b40:	str	r6, [r5, r0]
   39b44:	mov	r0, r4
   39b48:	pop	{r4, r5, r6, pc}
   39b4c:	andeq	lr, r5, ip, lsr #9
   39b50:	andeq	r0, r0, r8, lsr r0
   39b54:	andeq	lr, r5, r8, ror #8
   39b58:	push	{r4, r5, r6, lr}
   39b5c:	mov	r6, r0
   39b60:	mov	r5, r1
   39b64:	bl	6e64 <kill@plt>
   39b68:	cmp	r0, #0
   39b6c:	movge	r4, #0
   39b70:	blt	39b90 <blkid_probe_get_size@plt+0x32678>
   39b74:	cmp	r5, #9
   39b78:	beq	39b88 <blkid_probe_get_size@plt+0x32670>
   39b7c:	mov	r0, r6
   39b80:	mov	r1, #18
   39b84:	bl	6e64 <kill@plt>
   39b88:	mov	r0, r4
   39b8c:	pop	{r4, r5, r6, pc}
   39b90:	bl	732c <__errno_location@plt>
   39b94:	ldr	r4, [r0]
   39b98:	cmp	r4, #0
   39b9c:	rsb	r4, r4, #0
   39ba0:	ble	39b74 <blkid_probe_get_size@plt+0x3265c>
   39ba4:	mov	r0, r4
   39ba8:	pop	{r4, r5, r6, pc}
   39bac:	push	{r4, lr}
   39bb0:	subs	r4, r0, #0
   39bb4:	beq	39bc8 <blkid_probe_get_size@plt+0x326b0>
   39bb8:	ldr	r0, [r4, #12]
   39bbc:	bl	69f0 <free@plt>
   39bc0:	mov	r0, r4
   39bc4:	bl	69f0 <free@plt>
   39bc8:	mov	r0, #0
   39bcc:	pop	{r4, pc}
   39bd0:	subs	r3, r0, #0
   39bd4:	beq	39bfc <blkid_probe_get_size@plt+0x326e4>
   39bd8:	ldr	r1, [pc, #36]	; 39c04 <blkid_probe_get_size@plt+0x326ec>
   39bdc:	push	{r4, lr}
   39be0:	add	r1, pc, r1
   39be4:	mov	r4, r3
   39be8:	bl	6c9c <strspn@plt>
   39bec:	ldrb	r0, [r4, r0]
   39bf0:	clz	r0, r0
   39bf4:	lsr	r0, r0, #5
   39bf8:	pop	{r4, pc}
   39bfc:	mov	r0, #1
   39c00:	bx	lr
   39c04:	andeq	lr, r3, r0, ror #7
   39c08:	cmp	r0, #0
   39c0c:	bxeq	lr
   39c10:	ldrb	r3, [r0]
   39c14:	cmp	r3, #46	; 0x2e
   39c18:	beq	39c24 <blkid_probe_get_size@plt+0x3270c>
   39c1c:	mov	r0, #0
   39c20:	bx	lr
   39c24:	ldrb	r3, [r0, #1]
   39c28:	cmp	r3, #0
   39c2c:	beq	39c48 <blkid_probe_get_size@plt+0x32730>
   39c30:	cmp	r3, #46	; 0x2e
   39c34:	bne	39c1c <blkid_probe_get_size@plt+0x32704>
   39c38:	ldrb	r0, [r0, #2]
   39c3c:	clz	r0, r0
   39c40:	lsr	r0, r0, #5
   39c44:	bx	lr
   39c48:	mov	r0, #1
   39c4c:	bx	lr
   39c50:	push	{r4, r5, r6, lr}
   39c54:	subs	r5, r0, #0
   39c58:	beq	39c68 <blkid_probe_get_size@plt+0x32750>
   39c5c:	ldrb	r4, [r5]
   39c60:	cmp	r4, #0
   39c64:	bne	39c70 <blkid_probe_get_size@plt+0x32758>
   39c68:	mov	r0, #0
   39c6c:	pop	{r4, r5, r6, pc}
   39c70:	bl	723c <strlen@plt>
   39c74:	cmp	r0, #15
   39c78:	bhi	39c68 <blkid_probe_get_size@plt+0x32750>
   39c7c:	mov	r0, r5
   39c80:	bl	39c08 <blkid_probe_get_size@plt+0x326f0>
   39c84:	cmp	r0, #0
   39c88:	bne	39c68 <blkid_probe_get_size@plt+0x32750>
   39c8c:	sub	r3, r4, #33	; 0x21
   39c90:	cmp	r3, #93	; 0x5d
   39c94:	pophi	{r4, r5, r6, pc}
   39c98:	mov	r2, #1
   39c9c:	b	39ca8 <blkid_probe_get_size@plt+0x32790>
   39ca0:	cmp	r3, #93	; 0x5d
   39ca4:	pophi	{r4, r5, r6, pc}
   39ca8:	cmp	r4, #47	; 0x2f
   39cac:	sub	r3, r4, #48	; 0x30
   39cb0:	popeq	{r4, r5, r6, pc}
   39cb4:	cmp	r4, #58	; 0x3a
   39cb8:	popeq	{r4, r5, r6, pc}
   39cbc:	cmp	r2, #0
   39cc0:	beq	39cd0 <blkid_probe_get_size@plt+0x327b8>
   39cc4:	cmp	r3, #9
   39cc8:	movhi	r2, #0
   39ccc:	movls	r2, #1
   39cd0:	ldrb	r4, [r5, #1]!
   39cd4:	cmp	r4, #0
   39cd8:	sub	r3, r4, #33	; 0x21
   39cdc:	bne	39ca0 <blkid_probe_get_size@plt+0x32788>
   39ce0:	eor	r0, r2, #1
   39ce4:	pop	{r4, r5, r6, pc}
   39ce8:	subs	r3, r0, #0
   39cec:	push	{r4, r5, r6, lr}
   39cf0:	beq	39d48 <blkid_probe_get_size@plt+0x32830>
   39cf4:	ldrb	r4, [r3]
   39cf8:	cmp	r4, #0
   39cfc:	bne	39d08 <blkid_probe_get_size@plt+0x327f0>
   39d00:	mov	r0, r4
   39d04:	pop	{r4, r5, r6, pc}
   39d08:	mov	r5, r3
   39d0c:	bl	39c08 <blkid_probe_get_size@plt+0x326f0>
   39d10:	subs	r4, r0, #0
   39d14:	bne	39d48 <blkid_probe_get_size@plt+0x32830>
   39d18:	mov	r1, #47	; 0x2f
   39d1c:	mov	r0, r5
   39d20:	bl	6fe4 <strchrnul@plt>
   39d24:	ldrb	r3, [r0]
   39d28:	cmp	r3, #0
   39d2c:	bne	39d00 <blkid_probe_get_size@plt+0x327e8>
   39d30:	sub	r4, r0, r5
   39d34:	cmp	r4, #4096	; 0x1000
   39d38:	movgt	r4, #0
   39d3c:	movle	r4, #1
   39d40:	mov	r0, r4
   39d44:	pop	{r4, r5, r6, pc}
   39d48:	mov	r4, #0
   39d4c:	mov	r0, r4
   39d50:	pop	{r4, r5, r6, pc}
   39d54:	push	{r4, lr}
   39d58:	subs	r4, r0, #0
   39d5c:	beq	39e88 <blkid_probe_get_size@plt+0x32970>
   39d60:	ldr	r1, [pc, #296]	; 39e90 <blkid_probe_get_size@plt+0x32978>
   39d64:	add	r1, pc, r1
   39d68:	bl	7314 <strcmp@plt>
   39d6c:	cmp	r0, #0
   39d70:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39d74:	ldr	r1, [pc, #280]	; 39e94 <blkid_probe_get_size@plt+0x3297c>
   39d78:	mov	r0, r4
   39d7c:	add	r1, pc, r1
   39d80:	bl	69c0 <strcasecmp@plt>
   39d84:	cmp	r0, #0
   39d88:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39d8c:	ldr	r1, [pc, #260]	; 39e98 <blkid_probe_get_size@plt+0x32980>
   39d90:	mov	r0, r4
   39d94:	add	r1, pc, r1
   39d98:	bl	69c0 <strcasecmp@plt>
   39d9c:	cmp	r0, #0
   39da0:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39da4:	ldr	r1, [pc, #240]	; 39e9c <blkid_probe_get_size@plt+0x32984>
   39da8:	mov	r0, r4
   39dac:	add	r1, pc, r1
   39db0:	bl	69c0 <strcasecmp@plt>
   39db4:	cmp	r0, #0
   39db8:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39dbc:	ldr	r1, [pc, #220]	; 39ea0 <blkid_probe_get_size@plt+0x32988>
   39dc0:	mov	r0, r4
   39dc4:	add	r1, pc, r1
   39dc8:	bl	69c0 <strcasecmp@plt>
   39dcc:	cmp	r0, #0
   39dd0:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39dd4:	ldr	r1, [pc, #200]	; 39ea4 <blkid_probe_get_size@plt+0x3298c>
   39dd8:	mov	r0, r4
   39ddc:	add	r1, pc, r1
   39de0:	bl	69c0 <strcasecmp@plt>
   39de4:	cmp	r0, #0
   39de8:	beq	39e80 <blkid_probe_get_size@plt+0x32968>
   39dec:	ldr	r1, [pc, #180]	; 39ea8 <blkid_probe_get_size@plt+0x32990>
   39df0:	mov	r0, r4
   39df4:	add	r1, pc, r1
   39df8:	bl	7314 <strcmp@plt>
   39dfc:	cmp	r0, #0
   39e00:	popeq	{r4, pc}
   39e04:	ldr	r1, [pc, #160]	; 39eac <blkid_probe_get_size@plt+0x32994>
   39e08:	mov	r0, r4
   39e0c:	add	r1, pc, r1
   39e10:	bl	69c0 <strcasecmp@plt>
   39e14:	cmp	r0, #0
   39e18:	popeq	{r4, pc}
   39e1c:	ldr	r1, [pc, #140]	; 39eb0 <blkid_probe_get_size@plt+0x32998>
   39e20:	mov	r0, r4
   39e24:	add	r1, pc, r1
   39e28:	bl	69c0 <strcasecmp@plt>
   39e2c:	cmp	r0, #0
   39e30:	popeq	{r4, pc}
   39e34:	ldr	r1, [pc, #120]	; 39eb4 <blkid_probe_get_size@plt+0x3299c>
   39e38:	mov	r0, r4
   39e3c:	add	r1, pc, r1
   39e40:	bl	69c0 <strcasecmp@plt>
   39e44:	cmp	r0, #0
   39e48:	popeq	{r4, pc}
   39e4c:	ldr	r1, [pc, #100]	; 39eb8 <blkid_probe_get_size@plt+0x329a0>
   39e50:	mov	r0, r4
   39e54:	add	r1, pc, r1
   39e58:	bl	69c0 <strcasecmp@plt>
   39e5c:	cmp	r0, #0
   39e60:	popeq	{r4, pc}
   39e64:	ldr	r1, [pc, #80]	; 39ebc <blkid_probe_get_size@plt+0x329a4>
   39e68:	mov	r0, r4
   39e6c:	add	r1, pc, r1
   39e70:	bl	69c0 <strcasecmp@plt>
   39e74:	cmp	r0, #0
   39e78:	mvnne	r0, #21
   39e7c:	pop	{r4, pc}
   39e80:	mov	r0, #1
   39e84:	pop	{r4, pc}
   39e88:	mvn	r0, #21
   39e8c:	pop	{r4, pc}
   39e90:	strdeq	ip, [r3], -r0
   39e94:	muleq	r3, ip, r5
   39e98:	andeq	fp, r3, r8, lsl #4
   39e9c:	andeq	r5, r3, r0, ror r5
   39ea0:	andeq	sl, r3, ip, asr #17
   39ea4:	andeq	sp, r2, r8, ror #19
   39ea8:	andeq	r4, r3, r0, lsr r3
   39eac:	ldrdeq	r0, [r3], -r4
   39eb0:	andeq	sl, r3, r0, lsr pc
   39eb4:	andeq	r6, r3, ip, lsr #8
   39eb8:	ldrdeq	sl, [r3], -r0
   39ebc:	andeq	fp, r3, r8, lsr fp
   39ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39ec4:	sub	sp, sp, #28
   39ec8:	ldr	lr, [pc, #300]	; 39ffc <blkid_probe_get_size@plt+0x32ae4>
   39ecc:	ldr	ip, [pc, #300]	; 3a000 <blkid_probe_get_size@plt+0x32ae8>
   39ed0:	add	lr, pc, lr
   39ed4:	mov	sl, r0
   39ed8:	ldr	ip, [lr, ip]
   39edc:	str	r3, [sp, #12]
   39ee0:	mov	r0, lr
   39ee4:	ldr	r3, [ip]
   39ee8:	str	ip, [sp, #8]
   39eec:	mov	r9, r1
   39ef0:	mov	r6, r2
   39ef4:	mov	r4, #128	; 0x80
   39ef8:	mvn	r7, #0
   39efc:	add	r8, sp, #16
   39f00:	str	r3, [sp, #20]
   39f04:	b	39f14 <blkid_probe_get_size@plt+0x329fc>
   39f08:	mov	r0, r5
   39f0c:	bl	69f0 <free@plt>
   39f10:	mov	r4, fp
   39f14:	add	r1, r4, #8
   39f18:	mov	r0, #1
   39f1c:	str	r7, [sp, #16]
   39f20:	bl	7164 <calloc@plt>
   39f24:	subs	r5, r0, #0
   39f28:	beq	39fe8 <blkid_probe_get_size@plt+0x32ad0>
   39f2c:	ldr	r2, [sp, #64]	; 0x40
   39f30:	str	r4, [r5]
   39f34:	mov	r3, r8
   39f38:	str	r2, [sp]
   39f3c:	mov	r1, r9
   39f40:	mov	r2, r5
   39f44:	mov	r0, sl
   39f48:	bl	7038 <name_to_handle_at@plt>
   39f4c:	cmp	r0, #0
   39f50:	bge	39fc8 <blkid_probe_get_size@plt+0x32ab0>
   39f54:	bl	732c <__errno_location@plt>
   39f58:	ldr	r0, [r0]
   39f5c:	cmp	r0, #75	; 0x4b
   39f60:	bne	39ff0 <blkid_probe_get_size@plt+0x32ad8>
   39f64:	cmp	r6, #0
   39f68:	bne	39f78 <blkid_probe_get_size@plt+0x32a60>
   39f6c:	ldr	r3, [sp, #16]
   39f70:	cmp	r3, #0
   39f74:	bge	39fdc <blkid_probe_get_size@plt+0x32ac4>
   39f78:	ldr	fp, [r5]
   39f7c:	cmn	fp, #9
   39f80:	movls	r3, #0
   39f84:	movhi	r3, #1
   39f88:	cmp	fp, r4
   39f8c:	movhi	r4, r3
   39f90:	orrls	r4, r3, #1
   39f94:	cmp	r4, #0
   39f98:	beq	39f08 <blkid_probe_get_size@plt+0x329f0>
   39f9c:	mvn	r6, #74	; 0x4a
   39fa0:	mov	r0, r5
   39fa4:	bl	69f0 <free@plt>
   39fa8:	ldr	r3, [sp, #8]
   39fac:	ldr	r2, [sp, #20]
   39fb0:	mov	r0, r6
   39fb4:	ldr	r3, [r3]
   39fb8:	cmp	r2, r3
   39fbc:	bne	39ff8 <blkid_probe_get_size@plt+0x32ae0>
   39fc0:	add	sp, sp, #28
   39fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39fc8:	cmp	r6, #0
   39fcc:	strne	r5, [r6]
   39fd0:	movne	r5, #0
   39fd4:	ldr	r3, [sp, #16]
   39fd8:	mov	r6, #0
   39fdc:	ldr	r2, [sp, #12]
   39fe0:	str	r3, [r2]
   39fe4:	b	39fa0 <blkid_probe_get_size@plt+0x32a88>
   39fe8:	mvn	r6, #11
   39fec:	b	39fa0 <blkid_probe_get_size@plt+0x32a88>
   39ff0:	rsb	r6, r0, #0
   39ff4:	b	39fa0 <blkid_probe_get_size@plt+0x32a88>
   39ff8:	bl	6fb4 <__stack_chk_fail@plt>
   39ffc:	muleq	r5, r8, ip
   3a000:	andeq	r0, r0, ip, lsr r4
   3a004:	ldr	ip, [pc, #388]	; 3a190 <blkid_probe_get_size@plt+0x32c78>
   3a008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a00c:	add	ip, pc, ip
   3a010:	ldr	lr, [pc, #380]	; 3a194 <blkid_probe_get_size@plt+0x32c7c>
   3a014:	mov	r7, r0
   3a018:	sub	sp, sp, #2112	; 0x840
   3a01c:	ldr	r0, [ip, lr]
   3a020:	sub	sp, sp, #12
   3a024:	mov	r9, r3
   3a028:	ldr	r3, [r0]
   3a02c:	mov	r6, r1
   3a030:	mov	r8, r2
   3a034:	mov	r1, ip
   3a038:	str	r3, [sp, #2116]	; 0x844
   3a03c:	str	r0, [sp, #56]	; 0x38
   3a040:	bl	732c <__errno_location@plt>
   3a044:	ldr	r3, [pc, #332]	; 3a198 <blkid_probe_get_size@plt+0x32c80>
   3a048:	ldr	sl, [sp, #2164]	; 0x874
   3a04c:	add	r3, pc, r3
   3a050:	ldr	fp, [sp, #2172]	; 0x87c
   3a054:	ldr	r3, [r3]
   3a058:	ldr	r2, [sp, #2176]	; 0x880
   3a05c:	cmp	r3, r6
   3a060:	mov	r4, r0
   3a064:	ldr	r5, [r0]
   3a068:	bge	3a0a8 <blkid_probe_get_size@plt+0x32b90>
   3a06c:	ldr	r0, [sp, #2160]	; 0x870
   3a070:	cmp	r0, #0
   3a074:	rsblt	r0, r0, #0
   3a078:	uxtb	r0, r0
   3a07c:	rsb	r0, r0, #0
   3a080:	ldr	r3, [sp, #56]	; 0x38
   3a084:	cmp	r5, #0
   3a088:	strge	r5, [r4]
   3a08c:	ldr	r2, [sp, #2116]	; 0x844
   3a090:	ldr	r3, [r3]
   3a094:	cmp	r2, r3
   3a098:	bne	3a18c <blkid_probe_get_size@plt+0x32c74>
   3a09c:	add	sp, sp, #2112	; 0x840
   3a0a0:	add	sp, sp, #12
   3a0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a0a8:	ldr	r3, [pc, #236]	; 3a19c <blkid_probe_get_size@plt+0x32c84>
   3a0ac:	add	r3, pc, r3
   3a0b0:	ldr	r3, [r3]
   3a0b4:	cmp	r3, #8
   3a0b8:	beq	3a06c <blkid_probe_get_size@plt+0x32b54>
   3a0bc:	add	ip, sp, #2176	; 0x880
   3a0c0:	add	ip, ip, #4
   3a0c4:	add	r3, sp, #68	; 0x44
   3a0c8:	ldr	r1, [sp, #2160]	; 0x870
   3a0cc:	mov	r0, r3
   3a0d0:	str	r3, [sp, #60]	; 0x3c
   3a0d4:	mov	r3, #2048	; 0x800
   3a0d8:	str	r1, [r4]
   3a0dc:	stm	sp, {r2, ip}
   3a0e0:	mov	r1, r3
   3a0e4:	mov	r2, #1
   3a0e8:	str	ip, [sp, #64]	; 0x40
   3a0ec:	bl	6b04 <__vsnprintf_chk@plt>
   3a0f0:	cmp	r7, #0
   3a0f4:	moveq	r3, r7
   3a0f8:	beq	3a110 <blkid_probe_get_size@plt+0x32bf8>
   3a0fc:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3a100:	cmp	r0, #1
   3a104:	beq	3a180 <blkid_probe_get_size@plt+0x32c68>
   3a108:	ldr	r3, [pc, #144]	; 3a1a0 <blkid_probe_get_size@plt+0x32c88>
   3a10c:	add	r3, pc, r3
   3a110:	str	r7, [sp, #44]	; 0x2c
   3a114:	str	r3, [sp, #40]	; 0x28
   3a118:	ldr	lr, [pc, #132]	; 3a1a4 <blkid_probe_get_size@plt+0x32c8c>
   3a11c:	ldr	ip, [pc, #132]	; 3a1a8 <blkid_probe_get_size@plt+0x32c90>
   3a120:	ldr	r3, [pc, #132]	; 3a1ac <blkid_probe_get_size@plt+0x32c94>
   3a124:	ldr	r7, [pc, #132]	; 3a1b0 <blkid_probe_get_size@plt+0x32c98>
   3a128:	ldr	r2, [sp, #60]	; 0x3c
   3a12c:	add	lr, pc, lr
   3a130:	add	ip, pc, ip
   3a134:	add	r3, pc, r3
   3a138:	add	r7, pc, r7
   3a13c:	strd	r8, [sp, #28]
   3a140:	str	r9, [sp, #20]
   3a144:	mov	r9, #0
   3a148:	str	r2, [sp, #36]	; 0x24
   3a14c:	str	r3, [sp, #8]
   3a150:	str	r8, [sp, #12]
   3a154:	str	fp, [sp]
   3a158:	mov	r2, sl
   3a15c:	ldr	r1, [sp, #2160]	; 0x870
   3a160:	mov	r0, r6
   3a164:	str	lr, [sp, #24]
   3a168:	str	ip, [sp, #16]
   3a16c:	str	r7, [sp, #4]
   3a170:	str	r9, [sp, #48]	; 0x30
   3a174:	ldr	r3, [sp, #2168]	; 0x878
   3a178:	bl	49c34 <blkid_probe_get_size@plt+0x4271c>
   3a17c:	b	3a080 <blkid_probe_get_size@plt+0x32b68>
   3a180:	ldr	r3, [pc, #44]	; 3a1b4 <blkid_probe_get_size@plt+0x32c9c>
   3a184:	add	r3, pc, r3
   3a188:	b	3a110 <blkid_probe_get_size@plt+0x32bf8>
   3a18c:	bl	6fb4 <__stack_chk_fail@plt>
   3a190:	andeq	sp, r5, ip, asr fp
   3a194:	andeq	r0, r0, ip, lsr r4
   3a198:	strdeq	lr, [r5], -r0
   3a19c:	andeq	lr, r5, r0, asr #27
   3a1a0:	andeq	r5, r3, r0, lsr #4
   3a1a4:	andeq	r5, r3, r0, lsl r2
   3a1a8:	andeq	r5, r3, r0, lsr #4
   3a1ac:	andeq	r5, r3, ip, lsr #4
   3a1b0:	andeq	r5, r3, r8, lsr r2
   3a1b4:	andeq	r5, r3, r0, lsr #3
   3a1b8:	push	{r4, r5, r6, r7, r8, lr}
   3a1bc:	sub	sp, sp, #8
   3a1c0:	mov	r4, r0
   3a1c4:	mov	r8, r3
   3a1c8:	mov	r6, r1
   3a1cc:	mov	r7, r2
   3a1d0:	bl	732c <__errno_location@plt>
   3a1d4:	ldr	r3, [pc, #96]	; 3a23c <blkid_probe_get_size@plt+0x32d24>
   3a1d8:	add	r3, pc, r3
   3a1dc:	mov	r5, r0
   3a1e0:	lsl	r0, r4, #10
   3a1e4:	orr	r0, r0, #7
   3a1e8:	ldr	r4, [r5]
   3a1ec:	ldr	r3, [r3, r0, asr #8]
   3a1f0:	cmp	r3, #6
   3a1f4:	bgt	3a208 <blkid_probe_get_size@plt+0x32cf0>
   3a1f8:	cmp	r4, #0
   3a1fc:	strge	r4, [r5]
   3a200:	add	sp, sp, #8
   3a204:	pop	{r4, r5, r6, r7, r8, pc}
   3a208:	ldr	ip, [pc, #48]	; 3a240 <blkid_probe_get_size@plt+0x32d28>
   3a20c:	ldr	r3, [sp, #32]
   3a210:	add	ip, pc, ip
   3a214:	str	r3, [sp]
   3a218:	mov	r2, r7
   3a21c:	mov	r3, r8
   3a220:	mov	r1, r6
   3a224:	str	ip, [sp, #4]
   3a228:	bl	38f9c <blkid_probe_get_size@plt+0x31a84>
   3a22c:	cmp	r4, #0
   3a230:	strge	r4, [r5]
   3a234:	add	sp, sp, #8
   3a238:	pop	{r4, r5, r6, r7, r8, pc}
   3a23c:	andeq	sp, r5, r4, ror #30
   3a240:	andeq	r5, r3, ip, lsl #3
   3a244:	ldr	ip, [pc, #240]	; 3a33c <blkid_probe_get_size@plt+0x32e24>
   3a248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a24c:	add	ip, pc, ip
   3a250:	ldr	lr, [pc, #232]	; 3a340 <blkid_probe_get_size@plt+0x32e28>
   3a254:	sub	sp, sp, #2080	; 0x820
   3a258:	sub	sp, sp, #4
   3a25c:	ldr	r5, [ip, lr]
   3a260:	mov	sl, r3
   3a264:	mov	r4, r0
   3a268:	ldr	r3, [r5]
   3a26c:	mov	r8, r1
   3a270:	mov	r9, r2
   3a274:	mov	r1, ip
   3a278:	str	r3, [sp, #2076]	; 0x81c
   3a27c:	bl	732c <__errno_location@plt>
   3a280:	ldr	r3, [pc, #188]	; 3a344 <blkid_probe_get_size@plt+0x32e2c>
   3a284:	asr	r2, r4, #10
   3a288:	add	r3, pc, r3
   3a28c:	ldr	fp, [sp, #2120]	; 0x848
   3a290:	ldr	r3, [r3, r2, lsl #2]
   3a294:	and	r2, r4, #7
   3a298:	cmp	r2, r3
   3a29c:	ldr	r2, [sp, #2124]	; 0x84c
   3a2a0:	mov	r6, r0
   3a2a4:	eor	r0, r8, r8, asr #31
   3a2a8:	sub	r0, r0, r8, asr #31
   3a2ac:	ldr	r7, [r6]
   3a2b0:	uxtb	r0, r0
   3a2b4:	ble	3a2e0 <blkid_probe_get_size@plt+0x32dc8>
   3a2b8:	rsb	r0, r0, #0
   3a2bc:	cmp	r7, #0
   3a2c0:	strge	r7, [r6]
   3a2c4:	ldr	r2, [sp, #2076]	; 0x81c
   3a2c8:	ldr	r3, [r5]
   3a2cc:	cmp	r2, r3
   3a2d0:	bne	3a338 <blkid_probe_get_size@plt+0x32e20>
   3a2d4:	add	sp, sp, #2080	; 0x820
   3a2d8:	add	sp, sp, #4
   3a2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a2e0:	ldr	ip, [sp, #2128]	; 0x850
   3a2e4:	add	r1, sp, #28
   3a2e8:	mov	r3, #2048	; 0x800
   3a2ec:	str	r0, [r6]
   3a2f0:	str	r1, [sp, #20]
   3a2f4:	stm	sp, {r2, ip}
   3a2f8:	mov	r0, r1
   3a2fc:	mov	r2, #1
   3a300:	mov	r1, r3
   3a304:	bl	6b04 <__vsnprintf_chk@plt>
   3a308:	ldr	r1, [sp, #20]
   3a30c:	mov	ip, #0
   3a310:	str	r1, [sp, #12]
   3a314:	str	fp, [sp]
   3a318:	mov	r3, sl
   3a31c:	mov	r2, r9
   3a320:	mov	r1, r8
   3a324:	mov	r0, r4
   3a328:	str	ip, [sp, #8]
   3a32c:	str	ip, [sp, #4]
   3a330:	bl	471a4 <blkid_probe_get_size@plt+0x3fc8c>
   3a334:	b	3a2bc <blkid_probe_get_size@plt+0x32da4>
   3a338:	bl	6fb4 <__stack_chk_fail@plt>
   3a33c:	andeq	sp, r5, ip, lsl r9
   3a340:	andeq	r0, r0, ip, lsr r4
   3a344:			; <UNDEFINED> instruction: 0x0005deb4
   3a348:	ldr	ip, [pc, #84]	; 3a3a4 <blkid_probe_get_size@plt+0x32e8c>
   3a34c:	push	{r4, r5, lr}
   3a350:	add	ip, pc, ip
   3a354:	ldr	lr, [pc, #76]	; 3a3a8 <blkid_probe_get_size@plt+0x32e90>
   3a358:	sub	sp, sp, #28
   3a35c:	ldr	r4, [ip, lr]
   3a360:	ldr	r5, [sp, #40]	; 0x28
   3a364:	ldr	ip, [sp, #44]	; 0x2c
   3a368:	str	r5, [sp]
   3a36c:	ldr	lr, [r4]
   3a370:	str	ip, [sp, #4]
   3a374:	add	ip, sp, #48	; 0x30
   3a378:	str	ip, [sp, #8]
   3a37c:	str	lr, [sp, #20]
   3a380:	str	ip, [sp, #16]
   3a384:	bl	3a244 <blkid_probe_get_size@plt+0x32d2c>
   3a388:	ldr	r2, [sp, #20]
   3a38c:	ldr	r3, [r4]
   3a390:	cmp	r2, r3
   3a394:	bne	3a3a0 <blkid_probe_get_size@plt+0x32e88>
   3a398:	add	sp, sp, #28
   3a39c:	pop	{r4, r5, pc}
   3a3a0:	bl	6fb4 <__stack_chk_fail@plt>
   3a3a4:	andeq	sp, r5, r8, lsl r8
   3a3a8:	andeq	r0, r0, ip, lsr r4
   3a3ac:	ldr	r3, [pc, #732]	; 3a690 <blkid_probe_get_size@plt+0x33178>
   3a3b0:	ldr	r2, [pc, #732]	; 3a694 <blkid_probe_get_size@plt+0x3317c>
   3a3b4:	add	r3, pc, r3
   3a3b8:	push	{r4, r5, r6, r7, lr}
   3a3bc:	sub	sp, sp, #44	; 0x2c
   3a3c0:	ldr	r5, [r3, r2]
   3a3c4:	ldr	r1, [pc, #716]	; 3a698 <blkid_probe_get_size@plt+0x33180>
   3a3c8:	mov	r4, #0
   3a3cc:	ldr	r3, [r5]
   3a3d0:	add	r1, pc, r1
   3a3d4:	str	r4, [sp, #32]
   3a3d8:	str	r4, [sp, #28]
   3a3dc:	mov	r7, r0
   3a3e0:	str	r3, [sp, #36]	; 0x24
   3a3e4:	bl	738c <fopen64@plt>
   3a3e8:	subs	r6, r0, #0
   3a3ec:	beq	3a464 <blkid_probe_get_size@plt+0x32f4c>
   3a3f0:	mov	r3, r6
   3a3f4:	mov	r2, #10
   3a3f8:	add	r1, sp, #28
   3a3fc:	add	r0, sp, #32
   3a400:	bl	69fc <__getdelim@plt>
   3a404:	cmp	r0, #0
   3a408:	blt	3a4bc <blkid_probe_get_size@plt+0x32fa4>
   3a40c:	ldr	r1, [pc, #648]	; 3a69c <blkid_probe_get_size@plt+0x33184>
   3a410:	add	r3, sp, #16
   3a414:	str	r3, [sp]
   3a418:	ldr	r0, [sp, #32]
   3a41c:	add	r3, sp, #20
   3a420:	add	r2, sp, #24
   3a424:	add	r1, pc, r1
   3a428:	bl	735c <sscanf@plt>
   3a42c:	cmp	r0, #2
   3a430:	bgt	3a4e8 <blkid_probe_get_size@plt+0x32fd0>
   3a434:	bl	732c <__errno_location@plt>
   3a438:	ldr	r3, [pc, #608]	; 3a6a0 <blkid_probe_get_size@plt+0x33188>
   3a43c:	add	r3, pc, r3
   3a440:	ldr	r3, [r3]
   3a444:	cmp	r3, #6
   3a448:	ldr	r1, [r0]
   3a44c:	bgt	3a61c <blkid_probe_get_size@plt+0x33104>
   3a450:	eor	r4, r1, r1, asr #31
   3a454:	sub	r4, r4, r1, asr #31
   3a458:	uxtb	r4, r4
   3a45c:	rsb	r4, r4, #0
   3a460:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a464:	bl	732c <__errno_location@plt>
   3a468:	ldr	r3, [pc, #564]	; 3a6a4 <blkid_probe_get_size@plt+0x3318c>
   3a46c:	add	r3, pc, r3
   3a470:	ldr	r3, [r3]
   3a474:	cmp	r3, #6
   3a478:	mov	r4, r0
   3a47c:	ldr	r1, [r0]
   3a480:	bgt	3a598 <blkid_probe_get_size@plt+0x33080>
   3a484:	cmp	r1, #2
   3a488:	rsbne	r4, r1, #0
   3a48c:	beq	3a590 <blkid_probe_get_size@plt+0x33078>
   3a490:	ldr	r0, [sp, #32]
   3a494:	bl	69f0 <free@plt>
   3a498:	mov	r0, r6
   3a49c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   3a4a0:	ldr	r2, [sp, #36]	; 0x24
   3a4a4:	ldr	r3, [r5]
   3a4a8:	mov	r0, r4
   3a4ac:	cmp	r2, r3
   3a4b0:	bne	3a68c <blkid_probe_get_size@plt+0x33174>
   3a4b4:	add	sp, sp, #44	; 0x2c
   3a4b8:	pop	{r4, r5, r6, r7, pc}
   3a4bc:	mov	r0, r6
   3a4c0:	bl	6b40 <feof@plt>
   3a4c4:	cmp	r0, #0
   3a4c8:	beq	3a5cc <blkid_probe_get_size@plt+0x330b4>
   3a4cc:	ldr	r3, [pc, #468]	; 3a6a8 <blkid_probe_get_size@plt+0x33190>
   3a4d0:	add	r3, pc, r3
   3a4d4:	ldr	r3, [r3]
   3a4d8:	cmp	r3, #6
   3a4dc:	bgt	3a650 <blkid_probe_get_size@plt+0x33138>
   3a4e0:	mov	r4, #1
   3a4e4:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a4e8:	ldr	r3, [pc, #444]	; 3a6ac <blkid_probe_get_size@plt+0x33194>
   3a4ec:	ldr	r2, [sp, #24]
   3a4f0:	add	r3, pc, r3
   3a4f4:	cmp	r2, #0
   3a4f8:	ldr	r3, [r3]
   3a4fc:	bne	3a554 <blkid_probe_get_size@plt+0x3303c>
   3a500:	ldr	r1, [sp, #20]
   3a504:	cmp	r1, #0
   3a508:	bne	3a554 <blkid_probe_get_size@plt+0x3303c>
   3a50c:	ldr	r2, [sp, #16]
   3a510:	cmn	r2, #1
   3a514:	bne	3a554 <blkid_probe_get_size@plt+0x3303c>
   3a518:	cmp	r3, #6
   3a51c:	ble	3a590 <blkid_probe_get_size@plt+0x33078>
   3a520:	ldr	r2, [pc, #392]	; 3a6b0 <blkid_probe_get_size@plt+0x33198>
   3a524:	ldr	r3, [pc, #392]	; 3a6b4 <blkid_probe_get_size@plt+0x3319c>
   3a528:	add	r2, pc, r2
   3a52c:	add	r3, pc, r3
   3a530:	stmib	sp, {r2, r7}
   3a534:	ldr	r2, [pc, #380]	; 3a6b8 <blkid_probe_get_size@plt+0x331a0>
   3a538:	str	r3, [sp]
   3a53c:	add	r2, pc, r2
   3a540:	mov	r3, #564	; 0x234
   3a544:	mov	r0, #7
   3a548:	mov	r4, r1
   3a54c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a550:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a554:	cmp	r3, #6
   3a558:	ble	3a4e0 <blkid_probe_get_size@plt+0x32fc8>
   3a55c:	ldr	r2, [pc, #344]	; 3a6bc <blkid_probe_get_size@plt+0x331a4>
   3a560:	ldr	r3, [pc, #344]	; 3a6c0 <blkid_probe_get_size@plt+0x331a8>
   3a564:	add	r2, pc, r2
   3a568:	add	r3, pc, r3
   3a56c:	stmib	sp, {r2, r7}
   3a570:	ldr	r2, [pc, #332]	; 3a6c4 <blkid_probe_get_size@plt+0x331ac>
   3a574:	str	r3, [sp]
   3a578:	add	r2, pc, r2
   3a57c:	ldr	r3, [pc, #324]	; 3a6c8 <blkid_probe_get_size@plt+0x331b0>
   3a580:	mov	r1, #0
   3a584:	mov	r0, #7
   3a588:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a58c:	b	3a4e0 <blkid_probe_get_size@plt+0x32fc8>
   3a590:	mov	r4, #0
   3a594:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a598:	ldr	r2, [pc, #300]	; 3a6cc <blkid_probe_get_size@plt+0x331b4>
   3a59c:	ldr	r3, [pc, #300]	; 3a6d0 <blkid_probe_get_size@plt+0x331b8>
   3a5a0:	add	r2, pc, r2
   3a5a4:	add	r3, pc, r3
   3a5a8:	stmib	sp, {r2, r7}
   3a5ac:	ldr	r2, [pc, #288]	; 3a6d4 <blkid_probe_get_size@plt+0x331bc>
   3a5b0:	str	r3, [sp]
   3a5b4:	add	r2, pc, r2
   3a5b8:	mov	r3, #544	; 0x220
   3a5bc:	mov	r0, #7
   3a5c0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a5c4:	ldr	r1, [r4]
   3a5c8:	b	3a484 <blkid_probe_get_size@plt+0x32f6c>
   3a5cc:	bl	732c <__errno_location@plt>
   3a5d0:	ldr	r3, [pc, #256]	; 3a6d8 <blkid_probe_get_size@plt+0x331c0>
   3a5d4:	add	r3, pc, r3
   3a5d8:	ldr	r3, [r3]
   3a5dc:	cmp	r3, #6
   3a5e0:	ldr	r1, [r0]
   3a5e4:	ble	3a450 <blkid_probe_get_size@plt+0x32f38>
   3a5e8:	ldr	r2, [pc, #236]	; 3a6dc <blkid_probe_get_size@plt+0x331c4>
   3a5ec:	ldr	r3, [pc, #236]	; 3a6e0 <blkid_probe_get_size@plt+0x331c8>
   3a5f0:	add	r2, pc, r2
   3a5f4:	add	r3, pc, r3
   3a5f8:	stmib	sp, {r2, r7}
   3a5fc:	ldr	r2, [pc, #224]	; 3a6e4 <blkid_probe_get_size@plt+0x331cc>
   3a600:	str	r3, [sp]
   3a604:	add	r2, pc, r2
   3a608:	ldr	r3, [pc, #216]	; 3a6e8 <blkid_probe_get_size@plt+0x331d0>
   3a60c:	mov	r0, #7
   3a610:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a614:	mov	r4, r0
   3a618:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a61c:	ldr	r2, [pc, #200]	; 3a6ec <blkid_probe_get_size@plt+0x331d4>
   3a620:	ldr	r3, [pc, #200]	; 3a6f0 <blkid_probe_get_size@plt+0x331d8>
   3a624:	add	r2, pc, r2
   3a628:	add	r3, pc, r3
   3a62c:	stmib	sp, {r2, r7}
   3a630:	ldr	r2, [pc, #188]	; 3a6f4 <blkid_probe_get_size@plt+0x331dc>
   3a634:	str	r3, [sp]
   3a638:	add	r2, pc, r2
   3a63c:	mov	r3, #560	; 0x230
   3a640:	mov	r0, #7
   3a644:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a648:	mov	r4, r0
   3a64c:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a650:	ldr	r2, [pc, #160]	; 3a6f8 <blkid_probe_get_size@plt+0x331e0>
   3a654:	ldr	r3, [pc, #160]	; 3a6fc <blkid_probe_get_size@plt+0x331e4>
   3a658:	add	r2, pc, r2
   3a65c:	str	r2, [sp, #4]
   3a660:	ldr	r2, [pc, #152]	; 3a700 <blkid_probe_get_size@plt+0x331e8>
   3a664:	add	r3, pc, r3
   3a668:	mov	r1, r4
   3a66c:	str	r3, [sp]
   3a670:	str	r7, [sp, #8]
   3a674:	ldr	r3, [pc, #136]	; 3a704 <blkid_probe_get_size@plt+0x331ec>
   3a678:	add	r2, pc, r2
   3a67c:	mov	r0, #7
   3a680:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a684:	mov	r4, #1
   3a688:	b	3a490 <blkid_probe_get_size@plt+0x32f78>
   3a68c:	bl	6fb4 <__stack_chk_fail@plt>
   3a690:			; <UNDEFINED> instruction: 0x0005d7b4
   3a694:	andeq	r0, r0, ip, lsr r4
   3a698:			; <UNDEFINED> instruction: 0x00033fbc
   3a69c:	andeq	r5, r3, r0
   3a6a0:	andeq	sp, r5, r0, lsl #26
   3a6a4:	ldrdeq	sp, [r5], -r0
   3a6a8:	andeq	sp, r5, ip, ror #24
   3a6ac:	andeq	sp, r5, ip, asr #24
   3a6b0:	andeq	r4, r3, r0, lsr #30
   3a6b4:	andeq	r4, r3, r4, lsr #9
   3a6b8:	muleq	r3, ip, lr
   3a6bc:	andeq	r4, r3, r0, lsl #30
   3a6c0:	andeq	r4, r3, r8, ror #8
   3a6c4:	andeq	r4, r3, r0, ror #28
   3a6c8:	andeq	r0, r0, r9, lsr r2
   3a6cc:	andeq	r3, r3, ip, lsr pc
   3a6d0:	andeq	r4, r3, ip, lsr #8
   3a6d4:	andeq	r4, r3, r4, lsr #28
   3a6d8:	andeq	sp, r5, r8, ror #22
   3a6dc:	andeq	r3, r3, r0, asr #30
   3a6e0:	ldrdeq	r4, [r3], -ip
   3a6e4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   3a6e8:	andeq	r0, r0, fp, lsr #4
   3a6ec:	andeq	r4, r3, ip, lsl #28
   3a6f0:	andeq	r4, r3, r8, lsr #7
   3a6f4:	andeq	r4, r3, r0, lsr #27
   3a6f8:	muleq	r3, r4, sp
   3a6fc:	andeq	r4, r3, ip, ror #6
   3a700:	andeq	r4, r3, r0, ror #26
   3a704:	andeq	r0, r0, r7, lsr #4
   3a708:	ldr	r3, [pc, #824]	; 3aa48 <blkid_probe_get_size@plt+0x33530>
   3a70c:	ldr	r2, [pc, #824]	; 3aa4c <blkid_probe_get_size@plt+0x33534>
   3a710:	add	r3, pc, r3
   3a714:	push	{r4, r5, r6, r7, r8, lr}
   3a718:	sub	sp, sp, #24
   3a71c:	ldr	r6, [r3, r2]
   3a720:	ldr	r0, [pc, #808]	; 3aa50 <blkid_probe_get_size@plt+0x33538>
   3a724:	mov	r4, #0
   3a728:	ldr	r3, [r6]
   3a72c:	add	r0, pc, r0
   3a730:	str	r4, [sp, #16]
   3a734:	str	r3, [sp, #20]
   3a738:	bl	74dc <__tls_get_addr@plt>
   3a73c:	ldr	r7, [pc, #784]	; 3aa54 <blkid_probe_get_size@plt+0x3353c>
   3a740:	ldr	r5, [r7, r0]
   3a744:	cmp	r5, r4
   3a748:	blt	3a770 <blkid_probe_get_size@plt+0x33258>
   3a74c:	mov	r0, r4
   3a750:	bl	69f0 <free@plt>
   3a754:	ldr	r2, [sp, #20]
   3a758:	ldr	r3, [r6]
   3a75c:	mov	r0, r5
   3a760:	cmp	r2, r3
   3a764:	bne	3aa3c <blkid_probe_get_size@plt+0x33524>
   3a768:	add	sp, sp, #24
   3a76c:	pop	{r4, r5, r6, r7, r8, pc}
   3a770:	ldr	r0, [pc, #736]	; 3aa58 <blkid_probe_get_size@plt+0x33540>
   3a774:	mov	r1, r4
   3a778:	add	r0, pc, r0
   3a77c:	bl	6ff0 <access@plt>
   3a780:	cmp	r0, r4
   3a784:	blt	3a7a0 <blkid_probe_get_size@plt+0x33288>
   3a788:	ldr	r0, [pc, #716]	; 3aa5c <blkid_probe_get_size@plt+0x33544>
   3a78c:	mov	r1, r4
   3a790:	add	r0, pc, r0
   3a794:	bl	6ff0 <access@plt>
   3a798:	cmp	r0, #0
   3a79c:	blt	3a95c <blkid_probe_get_size@plt+0x33444>
   3a7a0:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3a7a4:	cmp	r0, #1
   3a7a8:	beq	3a8dc <blkid_probe_get_size@plt+0x333c4>
   3a7ac:	ldr	r0, [pc, #684]	; 3aa60 <blkid_probe_get_size@plt+0x33548>
   3a7b0:	add	r4, sp, #16
   3a7b4:	mov	r1, r4
   3a7b8:	add	r0, pc, r0
   3a7bc:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   3a7c0:	subs	r1, r0, #0
   3a7c4:	blt	3a974 <blkid_probe_get_size@plt+0x3345c>
   3a7c8:	ldr	r5, [sp, #16]
   3a7cc:	ldr	r1, [pc, #656]	; 3aa64 <blkid_probe_get_size@plt+0x3354c>
   3a7d0:	mov	r0, r5
   3a7d4:	add	r1, pc, r1
   3a7d8:	bl	7314 <strcmp@plt>
   3a7dc:	ldr	r8, [pc, #644]	; 3aa68 <blkid_probe_get_size@plt+0x33550>
   3a7e0:	mov	r4, #0
   3a7e4:	add	r8, pc, r8
   3a7e8:	cmp	r0, #0
   3a7ec:	beq	3a810 <blkid_probe_get_size@plt+0x332f8>
   3a7f0:	add	r4, r4, #1
   3a7f4:	cmp	r4, #5
   3a7f8:	beq	3a8ac <blkid_probe_get_size@plt+0x33394>
   3a7fc:	ldr	r1, [r8, r4, lsl #3]
   3a800:	mov	r0, r5
   3a804:	bl	7314 <strcmp@plt>
   3a808:	cmp	r0, #0
   3a80c:	bne	3a7f0 <blkid_probe_get_size@plt+0x332d8>
   3a810:	ldr	r2, [pc, #596]	; 3aa6c <blkid_probe_get_size@plt+0x33554>
   3a814:	ldr	r3, [pc, #596]	; 3aa70 <blkid_probe_get_size@plt+0x33558>
   3a818:	add	r2, pc, r2
   3a81c:	add	r3, pc, r3
   3a820:	ldr	r2, [r2]
   3a824:	add	r4, r3, r4, lsl #3
   3a828:	cmp	r2, #6
   3a82c:	ldr	r5, [r4, #4]
   3a830:	ble	3a8c4 <blkid_probe_get_size@plt+0x333ac>
   3a834:	cmp	r5, #20
   3a838:	ldrls	r3, [pc, #564]	; 3aa74 <blkid_probe_get_size@plt+0x3355c>
   3a83c:	addls	r3, pc, r3
   3a840:	ldrls	r0, [r3, r5, lsl #2]
   3a844:	b	3a920 <blkid_probe_get_size@plt+0x33408>
   3a848:	mov	r0, r4
   3a84c:	bl	48d10 <blkid_probe_get_size@plt+0x417f8>
   3a850:	subs	r1, r0, #0
   3a854:	bgt	3a7c8 <blkid_probe_get_size@plt+0x332b0>
   3a858:	bne	3a9e0 <blkid_probe_get_size@plt+0x334c8>
   3a85c:	ldr	r0, [pc, #532]	; 3aa78 <blkid_probe_get_size@plt+0x33560>
   3a860:	mov	r1, r4
   3a864:	add	r0, pc, r0
   3a868:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   3a86c:	subs	r5, r0, #0
   3a870:	blt	3aa28 <blkid_probe_get_size@plt+0x33510>
   3a874:	ldr	r4, [sp, #16]
   3a878:	mov	r1, #40	; 0x28
   3a87c:	mov	r0, r4
   3a880:	bl	7410 <strrchr@plt>
   3a884:	subs	r8, r0, #0
   3a888:	beq	3aa40 <blkid_probe_get_size@plt+0x33528>
   3a88c:	ldr	r1, [pc, #488]	; 3aa7c <blkid_probe_get_size@plt+0x33564>
   3a890:	mov	r2, #3
   3a894:	add	r1, pc, r1
   3a898:	bl	6a5c <strncmp@plt>
   3a89c:	subs	r5, r0, #0
   3a8a0:	bne	3a8ac <blkid_probe_get_size@plt+0x33394>
   3a8a4:	cmn	r8, #3
   3a8a8:	bne	3a8b0 <blkid_probe_get_size@plt+0x33398>
   3a8ac:	mov	r5, #20
   3a8b0:	ldr	r3, [pc, #456]	; 3aa80 <blkid_probe_get_size@plt+0x33568>
   3a8b4:	add	r3, pc, r3
   3a8b8:	ldr	r3, [r3]
   3a8bc:	cmp	r3, #6
   3a8c0:	bgt	3a964 <blkid_probe_get_size@plt+0x3344c>
   3a8c4:	ldr	r0, [pc, #440]	; 3aa84 <blkid_probe_get_size@plt+0x3356c>
   3a8c8:	add	r0, pc, r0
   3a8cc:	bl	74dc <__tls_get_addr@plt>
   3a8d0:	ldr	r4, [sp, #16]
   3a8d4:	str	r5, [r7, r0]
   3a8d8:	b	3a74c <blkid_probe_get_size@plt+0x33234>
   3a8dc:	ldr	r0, [pc, #420]	; 3aa88 <blkid_probe_get_size@plt+0x33570>
   3a8e0:	add	r0, pc, r0
   3a8e4:	bl	7464 <getenv@plt>
   3a8e8:	subs	r5, r0, #0
   3a8ec:	beq	3a8fc <blkid_probe_get_size@plt+0x333e4>
   3a8f0:	ldrb	r3, [r5]
   3a8f4:	cmp	r3, #0
   3a8f8:	bne	3a7cc <blkid_probe_get_size@plt+0x332b4>
   3a8fc:	ldr	r3, [pc, #392]	; 3aa8c <blkid_probe_get_size@plt+0x33574>
   3a900:	add	r3, pc, r3
   3a904:	ldr	r3, [r3]
   3a908:	cmp	r3, #6
   3a90c:	movle	r5, #0
   3a910:	ble	3a8c4 <blkid_probe_get_size@plt+0x333ac>
   3a914:	ldr	r0, [pc, #372]	; 3aa90 <blkid_probe_get_size@plt+0x33578>
   3a918:	mov	r5, #0
   3a91c:	add	r0, pc, r0
   3a920:	ldr	r2, [pc, #364]	; 3aa94 <blkid_probe_get_size@plt+0x3357c>
   3a924:	ldr	r3, [pc, #364]	; 3aa98 <blkid_probe_get_size@plt+0x33580>
   3a928:	add	r2, pc, r2
   3a92c:	str	r2, [sp, #4]
   3a930:	add	r3, pc, r3
   3a934:	ldr	r2, [pc, #352]	; 3aa9c <blkid_probe_get_size@plt+0x33584>
   3a938:	add	r3, r3, #20
   3a93c:	str	r0, [sp, #8]
   3a940:	str	r3, [sp]
   3a944:	add	r2, pc, r2
   3a948:	ldr	r3, [pc, #336]	; 3aaa0 <blkid_probe_get_size@plt+0x33588>
   3a94c:	mov	r1, #0
   3a950:	mov	r0, #7
   3a954:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a958:	b	3a8c4 <blkid_probe_get_size@plt+0x333ac>
   3a95c:	mov	r5, #17
   3a960:	b	3a8b0 <blkid_probe_get_size@plt+0x33398>
   3a964:	ldr	r3, [pc, #312]	; 3aaa4 <blkid_probe_get_size@plt+0x3358c>
   3a968:	add	r3, pc, r3
   3a96c:	ldr	r0, [r3, r5, lsl #2]
   3a970:	b	3a920 <blkid_probe_get_size@plt+0x33408>
   3a974:	cmn	r1, #2
   3a978:	beq	3a848 <blkid_probe_get_size@plt+0x33330>
   3a97c:	ldr	r3, [pc, #292]	; 3aaa8 <blkid_probe_get_size@plt+0x33590>
   3a980:	add	r3, pc, r3
   3a984:	ldr	r3, [r3]
   3a988:	cmp	r3, #6
   3a98c:	bgt	3a9a4 <blkid_probe_get_size@plt+0x3348c>
   3a990:	rsb	r5, r1, #0
   3a994:	ldr	r4, [sp, #16]
   3a998:	uxtb	r5, r5
   3a99c:	rsb	r5, r5, #0
   3a9a0:	b	3a74c <blkid_probe_get_size@plt+0x33234>
   3a9a4:	ldr	r2, [pc, #256]	; 3aaac <blkid_probe_get_size@plt+0x33594>
   3a9a8:	ldr	r3, [pc, #256]	; 3aab0 <blkid_probe_get_size@plt+0x33598>
   3a9ac:	add	r2, pc, r2
   3a9b0:	str	r2, [sp, #4]
   3a9b4:	add	r3, pc, r3
   3a9b8:	ldr	r2, [pc, #244]	; 3aab4 <blkid_probe_get_size@plt+0x3359c>
   3a9bc:	add	r3, r3, #20
   3a9c0:	str	r3, [sp]
   3a9c4:	add	r2, pc, r2
   3a9c8:	ldr	r3, [pc, #232]	; 3aab8 <blkid_probe_get_size@plt+0x335a0>
   3a9cc:	mov	r0, #7
   3a9d0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3a9d4:	ldr	r4, [sp, #16]
   3a9d8:	mov	r5, r0
   3a9dc:	b	3a74c <blkid_probe_get_size@plt+0x33234>
   3a9e0:	ldr	r3, [pc, #212]	; 3aabc <blkid_probe_get_size@plt+0x335a4>
   3a9e4:	add	r3, pc, r3
   3a9e8:	ldr	r3, [r3]
   3a9ec:	cmp	r3, #6
   3a9f0:	ble	3a85c <blkid_probe_get_size@plt+0x33344>
   3a9f4:	ldr	r2, [pc, #196]	; 3aac0 <blkid_probe_get_size@plt+0x335a8>
   3a9f8:	ldr	r3, [pc, #196]	; 3aac4 <blkid_probe_get_size@plt+0x335ac>
   3a9fc:	add	r2, pc, r2
   3aa00:	str	r2, [sp, #4]
   3aa04:	add	r3, pc, r3
   3aa08:	ldr	r2, [pc, #184]	; 3aac8 <blkid_probe_get_size@plt+0x335b0>
   3aa0c:	add	r3, r3, #20
   3aa10:	str	r3, [sp]
   3aa14:	add	r2, pc, r2
   3aa18:	ldr	r3, [pc, #172]	; 3aacc <blkid_probe_get_size@plt+0x335b4>
   3aa1c:	mov	r0, #7
   3aa20:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3aa24:	b	3a85c <blkid_probe_get_size@plt+0x33344>
   3aa28:	cmn	r5, #2
   3aa2c:	ldrne	r4, [sp, #16]
   3aa30:	bne	3a74c <blkid_probe_get_size@plt+0x33234>
   3aa34:	mov	r5, #0
   3aa38:	b	3a8b0 <blkid_probe_get_size@plt+0x33398>
   3aa3c:	bl	6fb4 <__stack_chk_fail@plt>
   3aa40:	mvn	r5, #4
   3aa44:	b	3a74c <blkid_probe_get_size@plt+0x33234>
   3aa48:	andeq	sp, r5, r8, asr r4
   3aa4c:	andeq	r0, r0, ip, lsr r4
   3aa50:	andeq	sp, r5, ip, ror #16
   3aa54:	andeq	r0, r0, r0
   3aa58:	andeq	r4, r3, r0, lsr #26
   3aa5c:	andeq	r4, r3, r4, lsl sp
   3aa60:	andeq	r4, r3, r4, lsl #26
   3aa64:	andeq	r4, r3, r0, asr #25
   3aa68:	andeq	pc, r4, ip, asr r5	; <UNPREDICTABLE>
   3aa6c:	andeq	sp, r5, r4, lsr #18
   3aa70:	andeq	pc, r4, r4, lsr #10
   3aa74:	andeq	ip, r5, r8, asr #31
   3aa78:	ldrdeq	r4, [r3], -r0
   3aa7c:			; <UNDEFINED> instruction: 0x00034cb0
   3aa80:	andeq	sp, r5, r8, lsl #17
   3aa84:	ldrdeq	sp, [r5], -r0
   3aa88:	ldrdeq	r4, [r3], -r0
   3aa8c:	andeq	sp, r5, ip, lsr r8
   3aa90:	andeq	r1, r3, r8, lsl #24
   3aa94:	andeq	r4, r3, r0, lsr #24
   3aa98:	andeq	r4, r3, r0, lsr #1
   3aa9c:	muleq	r3, r4, sl
   3aaa0:	andeq	r0, r0, r7, lsl #4
   3aaa4:	muleq	r5, ip, lr
   3aaa8:			; <UNDEFINED> instruction: 0x0005d7bc
   3aaac:	andeq	r4, r3, r8, lsr #22
   3aab0:	andeq	r4, r3, ip, lsl r0
   3aab4:	andeq	r4, r3, r4, lsl sl
   3aab8:	ldrdeq	r0, [r0], -sp
   3aabc:	andeq	sp, r5, r8, asr r7
   3aac0:	andeq	r4, r3, r4, lsl #22
   3aac4:	andeq	r3, r3, ip, asr #31
   3aac8:	andeq	r4, r3, r4, asr #19
   3aacc:	andeq	r0, r0, r6, ror #3
   3aad0:	ldr	r3, [pc, #320]	; 3ac18 <blkid_probe_get_size@plt+0x33700>
   3aad4:	ldr	r2, [pc, #320]	; 3ac1c <blkid_probe_get_size@plt+0x33704>
   3aad8:	add	r3, pc, r3
   3aadc:	push	{r4, r5, lr}
   3aae0:	sub	sp, sp, #44	; 0x2c
   3aae4:	ldr	r4, [r3, r2]
   3aae8:	add	r5, sp, #16
   3aaec:	mov	r1, r5
   3aaf0:	ldr	r3, [r4]
   3aaf4:	mov	r0, #7
   3aaf8:	str	r3, [sp, #36]	; 0x24
   3aafc:	bl	6f6c <getrlimit64@plt>
   3ab00:	cmp	r0, #0
   3ab04:	blt	3abb0 <blkid_probe_get_size@plt+0x33698>
   3ab08:	ldrd	r2, [sp, #16]
   3ab0c:	cmp	r3, #0
   3ab10:	cmpeq	r2, #1024	; 0x400
   3ab14:	movls	r0, #0
   3ab18:	bhi	3ab34 <blkid_probe_get_size@plt+0x3361c>
   3ab1c:	ldr	r2, [sp, #36]	; 0x24
   3ab20:	ldr	r3, [r4]
   3ab24:	cmp	r2, r3
   3ab28:	bne	3ac14 <blkid_probe_get_size@plt+0x336fc>
   3ab2c:	add	sp, sp, #44	; 0x2c
   3ab30:	pop	{r4, r5, pc}
   3ab34:	mov	r2, #1024	; 0x400
   3ab38:	mov	r3, #0
   3ab3c:	mov	r1, r5
   3ab40:	mov	r0, #7
   3ab44:	strd	r2, [sp, #16]
   3ab48:	bl	6c24 <setrlimit64@plt>
   3ab4c:	cmp	r0, #0
   3ab50:	movge	r0, #1
   3ab54:	bge	3ab1c <blkid_probe_get_size@plt+0x33604>
   3ab58:	bl	732c <__errno_location@plt>
   3ab5c:	ldr	r3, [pc, #188]	; 3ac20 <blkid_probe_get_size@plt+0x33708>
   3ab60:	add	r3, pc, r3
   3ab64:	ldr	r3, [r3]
   3ab68:	cmp	r3, #6
   3ab6c:	ldr	r1, [r0]
   3ab70:	ble	3abcc <blkid_probe_get_size@plt+0x336b4>
   3ab74:	ldrd	r2, [sp, #16]
   3ab78:	ldr	r0, [pc, #164]	; 3ac24 <blkid_probe_get_size@plt+0x3370c>
   3ab7c:	ldr	ip, [pc, #164]	; 3ac28 <blkid_probe_get_size@plt+0x33710>
   3ab80:	strd	r2, [sp, #8]
   3ab84:	add	r0, pc, r0
   3ab88:	ldr	r2, [pc, #156]	; 3ac2c <blkid_probe_get_size@plt+0x33714>
   3ab8c:	add	ip, pc, ip
   3ab90:	add	r0, r0, #40	; 0x28
   3ab94:	str	r0, [sp]
   3ab98:	str	ip, [sp, #4]
   3ab9c:	ldr	r3, [pc, #140]	; 3ac30 <blkid_probe_get_size@plt+0x33718>
   3aba0:	add	r2, pc, r2
   3aba4:	mov	r0, #7
   3aba8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3abac:	b	3ab1c <blkid_probe_get_size@plt+0x33604>
   3abb0:	bl	732c <__errno_location@plt>
   3abb4:	ldr	r3, [pc, #120]	; 3ac34 <blkid_probe_get_size@plt+0x3371c>
   3abb8:	add	r3, pc, r3
   3abbc:	ldr	r3, [r3]
   3abc0:	cmp	r3, #6
   3abc4:	ldr	r1, [r0]
   3abc8:	bgt	3abe0 <blkid_probe_get_size@plt+0x336c8>
   3abcc:	eor	r0, r1, r1, asr #31
   3abd0:	sub	r0, r0, r1, asr #31
   3abd4:	uxtb	r0, r0
   3abd8:	rsb	r0, r0, #0
   3abdc:	b	3ab1c <blkid_probe_get_size@plt+0x33604>
   3abe0:	ldr	r2, [pc, #80]	; 3ac38 <blkid_probe_get_size@plt+0x33720>
   3abe4:	ldr	r3, [pc, #80]	; 3ac3c <blkid_probe_get_size@plt+0x33724>
   3abe8:	add	r2, pc, r2
   3abec:	str	r2, [sp, #4]
   3abf0:	add	r3, pc, r3
   3abf4:	ldr	r2, [pc, #68]	; 3ac40 <blkid_probe_get_size@plt+0x33728>
   3abf8:	add	r3, r3, #40	; 0x28
   3abfc:	str	r3, [sp]
   3ac00:	add	r2, pc, r2
   3ac04:	mov	r3, #400	; 0x190
   3ac08:	mov	r0, #7
   3ac0c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3ac10:	b	3ab1c <blkid_probe_get_size@plt+0x33604>
   3ac14:	bl	6fb4 <__stack_chk_fail@plt>
   3ac18:	muleq	r5, r0, r0
   3ac1c:	andeq	r0, r0, ip, lsr r4
   3ac20:	ldrdeq	sp, [r5], -ip
   3ac24:	andeq	r3, r3, ip, asr #28
   3ac28:	andeq	r4, r3, r0, lsr #20
   3ac2c:	andeq	r4, r3, ip, asr #19
   3ac30:	muleq	r0, r7, r1
   3ac34:	andeq	sp, r5, r4, lsl #11
   3ac38:	andeq	r4, r3, r0, lsr #19
   3ac3c:	andeq	r3, r3, r0, ror #27
   3ac40:	andeq	r4, r3, ip, ror #18
   3ac44:	push	{lr}		; (str lr, [sp, #-4]!)
   3ac48:	sub	sp, sp, #12
   3ac4c:	bl	7218 <geteuid@plt>
   3ac50:	cmp	r0, #0
   3ac54:	beq	3aca0 <blkid_probe_get_size@plt+0x33788>
   3ac58:	ldr	r3, [pc, #80]	; 3acb0 <blkid_probe_get_size@plt+0x33798>
   3ac5c:	add	r3, pc, r3
   3ac60:	ldr	r3, [r3]
   3ac64:	cmp	r3, #2
   3ac68:	ble	3aca8 <blkid_probe_get_size@plt+0x33790>
   3ac6c:	ldr	r2, [pc, #64]	; 3acb4 <blkid_probe_get_size@plt+0x3379c>
   3ac70:	ldr	r3, [pc, #64]	; 3acb8 <blkid_probe_get_size@plt+0x337a0>
   3ac74:	add	r2, pc, r2
   3ac78:	add	r3, pc, r3
   3ac7c:	str	r2, [sp, #4]
   3ac80:	ldr	r2, [pc, #52]	; 3acbc <blkid_probe_get_size@plt+0x337a4>
   3ac84:	add	r3, r3, #60	; 0x3c
   3ac88:	str	r3, [sp]
   3ac8c:	add	r2, pc, r2
   3ac90:	ldr	r3, [pc, #40]	; 3acc0 <blkid_probe_get_size@plt+0x337a8>
   3ac94:	mov	r1, #1073741825	; 0x40000001
   3ac98:	mov	r0, #3
   3ac9c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3aca0:	add	sp, sp, #12
   3aca4:	pop	{pc}		; (ldr pc, [sp], #4)
   3aca8:	mvn	r0, #0
   3acac:	b	3aca0 <blkid_probe_get_size@plt+0x33788>
   3acb0:	andeq	sp, r5, r0, ror #9
   3acb4:	andeq	r4, r3, ip, lsl #19
   3acb8:	andeq	r3, r3, r8, asr sp
   3acbc:	andeq	r4, r3, r8, asr r9
   3acc0:	andeq	r0, r0, r6, asr #9
   3acc4:	ldr	ip, [pc, #48]	; 3acfc <blkid_probe_get_size@plt+0x337e4>
   3acc8:	push	{lr}		; (str lr, [sp, #-4]!)
   3accc:	sub	sp, sp, #12
   3acd0:	add	ip, pc, ip
   3acd4:	lsl	r0, r0, #10
   3acd8:	str	r3, [sp]
   3acdc:	str	ip, [sp, #4]
   3ace0:	mov	r3, r2
   3ace4:	orr	r0, r0, #3
   3ace8:	mov	r2, r1
   3acec:	mov	r1, #12
   3acf0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3acf4:	add	sp, sp, #12
   3acf8:	pop	{pc}		; (ldr pc, [sp], #4)
   3acfc:	andeq	r4, r3, r4, asr #18
   3ad00:	push	{r4, r5, r6, lr}
   3ad04:	ldr	r6, [pc, #100]	; 3ad70 <blkid_probe_get_size@plt+0x33858>
   3ad08:	ldr	r5, [pc, #100]	; 3ad74 <blkid_probe_get_size@plt+0x3385c>
   3ad0c:	add	r6, pc, r6
   3ad10:	add	r5, pc, r5
   3ad14:	ldr	r0, [r6]
   3ad18:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ad1c:	ldr	r4, [pc, #84]	; 3ad78 <blkid_probe_get_size@plt+0x33860>
   3ad20:	add	r4, pc, r4
   3ad24:	str	r0, [r6]
   3ad28:	ldr	r0, [r5]
   3ad2c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ad30:	str	r0, [r5]
   3ad34:	ldr	r0, [r4]
   3ad38:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ad3c:	ldr	r3, [pc, #56]	; 3ad7c <blkid_probe_get_size@plt+0x33864>
   3ad40:	add	r3, pc, r3
   3ad44:	ldr	r3, [r3]
   3ad48:	cmp	r3, #2
   3ad4c:	str	r0, [r4]
   3ad50:	mvnle	r0, #0
   3ad54:	ble	3ad60 <blkid_probe_get_size@plt+0x33848>
   3ad58:	mov	r0, r3
   3ad5c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ad60:	ldr	r3, [pc, #24]	; 3ad80 <blkid_probe_get_size@plt+0x33868>
   3ad64:	add	r3, pc, r3
   3ad68:	str	r0, [r3]
   3ad6c:	pop	{r4, r5, r6, pc}
   3ad70:	andeq	sp, r5, ip, lsl r4
   3ad74:	andeq	sp, r5, ip, asr #8
   3ad78:	andeq	sp, r5, r0, asr #8
   3ad7c:	andeq	sp, r5, r4, asr r3
   3ad80:	andeq	sp, r5, r0, lsr r3
   3ad84:	push	{r4, lr}
   3ad88:	ldr	r4, [pc, #92]	; 3adec <blkid_probe_get_size@plt+0x338d4>
   3ad8c:	add	r4, pc, r4
   3ad90:	ldr	r3, [r4]
   3ad94:	cmp	r3, #0
   3ad98:	movge	r3, #0
   3ad9c:	blt	3ada8 <blkid_probe_get_size@plt+0x33890>
   3ada0:	mov	r0, r3
   3ada4:	pop	{r4, pc}
   3ada8:	ldr	r0, [pc, #64]	; 3adf0 <blkid_probe_get_size@plt+0x338d8>
   3adac:	ldr	r1, [pc, #64]	; 3adf4 <blkid_probe_get_size@plt+0x338dc>
   3adb0:	add	r0, pc, r0
   3adb4:	bl	6ec4 <open64@plt>
   3adb8:	cmp	r0, #0
   3adbc:	str	r0, [r4]
   3adc0:	blt	3add8 <blkid_probe_get_size@plt+0x338c0>
   3adc4:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   3adc8:	mov	r3, #0
   3adcc:	str	r0, [r4]
   3add0:	mov	r0, r3
   3add4:	pop	{r4, pc}
   3add8:	bl	732c <__errno_location@plt>
   3addc:	ldr	r3, [r0]
   3ade0:	rsb	r3, r3, #0
   3ade4:	mov	r0, r3
   3ade8:	pop	{r4, pc}
   3adec:	ldrdeq	sp, [r5], -r4
   3adf0:	andeq	r4, r3, r4, ror r8
   3adf4:	andeq	r0, r8, r1, lsl #2
   3adf8:	push	{r4, r5, r6, r7, r8, lr}
   3adfc:	ldr	r4, [pc, #892]	; 3b180 <blkid_probe_get_size@plt+0x33c68>
   3ae00:	add	r4, pc, r4
   3ae04:	ldr	r3, [r4]
   3ae08:	cmp	r3, #8
   3ae0c:	beq	3af3c <blkid_probe_get_size@plt+0x33a24>
   3ae10:	cmp	r3, #7
   3ae14:	beq	3aedc <blkid_probe_get_size@plt+0x339c4>
   3ae18:	cmp	r3, #3
   3ae1c:	blt	3aea8 <blkid_probe_get_size@plt+0x33990>
   3ae20:	cmp	r3, #4
   3ae24:	ble	3ae30 <blkid_probe_get_size@plt+0x33918>
   3ae28:	cmp	r3, #7
   3ae2c:	bne	3aea8 <blkid_probe_get_size@plt+0x33990>
   3ae30:	ldr	r3, [pc, #844]	; 3b184 <blkid_probe_get_size@plt+0x33c6c>
   3ae34:	add	r3, pc, r3
   3ae38:	ldr	r3, [r3]
   3ae3c:	cmp	r3, #0
   3ae40:	movge	r6, #0
   3ae44:	blt	3ae90 <blkid_probe_get_size@plt+0x33978>
   3ae48:	ldr	r4, [pc, #824]	; 3b188 <blkid_probe_get_size@plt+0x33c70>
   3ae4c:	add	r4, pc, r4
   3ae50:	ldr	r0, [r4]
   3ae54:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ae58:	ldr	r3, [pc, #812]	; 3b18c <blkid_probe_get_size@plt+0x33c74>
   3ae5c:	add	r3, pc, r3
   3ae60:	ldr	r3, [r3]
   3ae64:	cmp	r3, #2
   3ae68:	str	r0, [r4]
   3ae6c:	mvnle	r0, #0
   3ae70:	ble	3ae7c <blkid_probe_get_size@plt+0x33964>
   3ae74:	mov	r0, r3
   3ae78:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3ae7c:	ldr	r3, [pc, #780]	; 3b190 <blkid_probe_get_size@plt+0x33c78>
   3ae80:	add	r3, pc, r3
   3ae84:	str	r0, [r3]
   3ae88:	mov	r0, r6
   3ae8c:	pop	{r4, r5, r6, r7, r8, pc}
   3ae90:	bl	3c8c8 <blkid_probe_get_size@plt+0x353b0>
   3ae94:	subs	r6, r0, #0
   3ae98:	bge	3ae48 <blkid_probe_get_size@plt+0x33930>
   3ae9c:	ldr	r3, [pc, #752]	; 3b194 <blkid_probe_get_size@plt+0x33c7c>
   3aea0:	add	r3, pc, r3
   3aea4:	ldr	r3, [r3]
   3aea8:	sub	r2, r3, #5
   3aeac:	cmp	r2, #1
   3aeb0:	bls	3aff8 <blkid_probe_get_size@plt+0x33ae0>
   3aeb4:	sub	r3, r3, #2
   3aeb8:	cmp	r3, #5
   3aebc:	addls	pc, pc, r3, lsl #2
   3aec0:	b	3aef8 <blkid_probe_get_size@plt+0x339e0>
   3aec4:	b	3af94 <blkid_probe_get_size@plt+0x33a7c>
   3aec8:	b	3aef8 <blkid_probe_get_size@plt+0x339e0>
   3aecc:	b	3af94 <blkid_probe_get_size@plt+0x33a7c>
   3aed0:	b	3aef8 <blkid_probe_get_size@plt+0x339e0>
   3aed4:	b	3af94 <blkid_probe_get_size@plt+0x33a7c>
   3aed8:	b	3af94 <blkid_probe_get_size@plt+0x33a7c>
   3aedc:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3aee0:	cmp	r0, #1
   3aee4:	beq	3b058 <blkid_probe_get_size@plt+0x33b40>
   3aee8:	mov	r0, #2
   3aeec:	bl	6ffc <isatty@plt>
   3aef0:	cmp	r0, #0
   3aef4:	ble	3b058 <blkid_probe_get_size@plt+0x33b40>
   3aef8:	ldr	r5, [pc, #664]	; 3b198 <blkid_probe_get_size@plt+0x33c80>
   3aefc:	ldr	r4, [pc, #664]	; 3b19c <blkid_probe_get_size@plt+0x33c84>
   3af00:	add	r5, pc, r5
   3af04:	add	r4, pc, r4
   3af08:	ldr	r0, [r5]
   3af0c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3af10:	mov	r6, #0
   3af14:	str	r0, [r5]
   3af18:	ldr	r0, [r4]
   3af1c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3af20:	ldr	r3, [pc, #632]	; 3b1a0 <blkid_probe_get_size@plt+0x33c88>
   3af24:	mov	r2, #2
   3af28:	add	r3, pc, r3
   3af2c:	str	r2, [r3]
   3af30:	str	r0, [r4]
   3af34:	mov	r0, r6
   3af38:	pop	{r4, r5, r6, r7, r8, pc}
   3af3c:	ldr	r5, [pc, #608]	; 3b1a4 <blkid_probe_get_size@plt+0x33c8c>
   3af40:	ldr	r4, [pc, #608]	; 3b1a8 <blkid_probe_get_size@plt+0x33c90>
   3af44:	add	r5, pc, r5
   3af48:	add	r4, pc, r4
   3af4c:	ldr	r0, [r5]
   3af50:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3af54:	str	r0, [r5]
   3af58:	ldr	r0, [r4]
   3af5c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3af60:	ldr	r3, [pc, #580]	; 3b1ac <blkid_probe_get_size@plt+0x33c94>
   3af64:	add	r3, pc, r3
   3af68:	ldr	r3, [r3]
   3af6c:	cmp	r3, #2
   3af70:	str	r0, [r4]
   3af74:	mvnle	r0, #0
   3af78:	bgt	3b04c <blkid_probe_get_size@plt+0x33b34>
   3af7c:	ldr	r3, [pc, #556]	; 3b1b0 <blkid_probe_get_size@plt+0x33c98>
   3af80:	mov	r6, #0
   3af84:	add	r3, pc, r3
   3af88:	str	r0, [r3]
   3af8c:	mov	r0, r6
   3af90:	pop	{r4, r5, r6, r7, r8, pc}
   3af94:	bl	3ad84 <blkid_probe_get_size@plt+0x3386c>
   3af98:	subs	r6, r0, #0
   3af9c:	blt	3aef8 <blkid_probe_get_size@plt+0x339e0>
   3afa0:	ldr	r5, [pc, #524]	; 3b1b4 <blkid_probe_get_size@plt+0x33c9c>
   3afa4:	ldr	r4, [pc, #524]	; 3b1b8 <blkid_probe_get_size@plt+0x33ca0>
   3afa8:	add	r5, pc, r5
   3afac:	add	r4, pc, r4
   3afb0:	ldr	r0, [r5]
   3afb4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3afb8:	str	r0, [r5]
   3afbc:	ldr	r0, [r4]
   3afc0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3afc4:	ldr	r3, [pc, #496]	; 3b1bc <blkid_probe_get_size@plt+0x33ca4>
   3afc8:	add	r3, pc, r3
   3afcc:	ldr	r3, [r3]
   3afd0:	cmp	r3, #2
   3afd4:	str	r0, [r4]
   3afd8:	mvnle	r0, #0
   3afdc:	ble	3afe8 <blkid_probe_get_size@plt+0x33ad0>
   3afe0:	mov	r0, r3
   3afe4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3afe8:	ldr	r3, [pc, #464]	; 3b1c0 <blkid_probe_get_size@plt+0x33ca8>
   3afec:	add	r3, pc, r3
   3aff0:	str	r0, [r3]
   3aff4:	b	3af34 <blkid_probe_get_size@plt+0x33a1c>
   3aff8:	ldr	r4, [pc, #452]	; 3b1c4 <blkid_probe_get_size@plt+0x33cac>
   3affc:	add	r4, pc, r4
   3b000:	ldr	r3, [r4]
   3b004:	cmp	r3, #0
   3b008:	movge	r6, #0
   3b00c:	blt	3b06c <blkid_probe_get_size@plt+0x33b54>
   3b010:	ldr	r4, [pc, #432]	; 3b1c8 <blkid_probe_get_size@plt+0x33cb0>
   3b014:	add	r4, pc, r4
   3b018:	ldr	r0, [r4]
   3b01c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b020:	ldr	r3, [pc, #420]	; 3b1cc <blkid_probe_get_size@plt+0x33cb4>
   3b024:	add	r3, pc, r3
   3b028:	ldr	r3, [r3]
   3b02c:	cmp	r3, #2
   3b030:	str	r0, [r4]
   3b034:	mvnle	r0, #0
   3b038:	bgt	3b060 <blkid_probe_get_size@plt+0x33b48>
   3b03c:	ldr	r3, [pc, #396]	; 3b1d0 <blkid_probe_get_size@plt+0x33cb8>
   3b040:	add	r3, pc, r3
   3b044:	str	r0, [r3]
   3b048:	b	3af34 <blkid_probe_get_size@plt+0x33a1c>
   3b04c:	mov	r0, r3
   3b050:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b054:	b	3af7c <blkid_probe_get_size@plt+0x33a64>
   3b058:	ldr	r3, [r4]
   3b05c:	b	3ae18 <blkid_probe_get_size@plt+0x33900>
   3b060:	mov	r0, r3
   3b064:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b068:	b	3b03c <blkid_probe_get_size@plt+0x33b24>
   3b06c:	mov	r0, #2
   3b070:	bl	3c810 <blkid_probe_get_size@plt+0x352f8>
   3b074:	cmp	r0, #0
   3b078:	mov	r6, r0
   3b07c:	str	r0, [r4]
   3b080:	blt	3b0d0 <blkid_probe_get_size@plt+0x33bb8>
   3b084:	ldr	r3, [pc, #328]	; 3b1d4 <blkid_probe_get_size@plt+0x33cbc>
   3b088:	mov	r1, #108	; 0x6c
   3b08c:	add	r3, pc, r3
   3b090:	add	r7, r3, #78	; 0x4e
   3b094:	mov	r0, r7
   3b098:	add	r5, r3, #76	; 0x4c
   3b09c:	bl	69cc <strnlen@plt>
   3b0a0:	mov	r1, r5
   3b0a4:	add	r2, r0, #3
   3b0a8:	mov	r0, r6
   3b0ac:	bl	7134 <connect@plt>
   3b0b0:	cmp	r0, #0
   3b0b4:	blt	3b0f4 <blkid_probe_get_size@plt+0x33bdc>
   3b0b8:	ldr	r3, [pc, #280]	; 3b1d8 <blkid_probe_get_size@plt+0x33cc0>
   3b0bc:	mov	r2, #0
   3b0c0:	add	r3, pc, r3
   3b0c4:	mov	r6, r2
   3b0c8:	strb	r2, [r3]
   3b0cc:	b	3b010 <blkid_probe_get_size@plt+0x33af8>
   3b0d0:	mov	r0, r6
   3b0d4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b0d8:	ldr	r2, [pc, #252]	; 3b1dc <blkid_probe_get_size@plt+0x33cc4>
   3b0dc:	ldr	r3, [pc, #252]	; 3b1e0 <blkid_probe_get_size@plt+0x33cc8>
   3b0e0:	add	r2, pc, r2
   3b0e4:	add	r3, pc, r3
   3b0e8:	ldr	r3, [r3]
   3b0ec:	str	r0, [r2]
   3b0f0:	b	3aeb4 <blkid_probe_get_size@plt+0x3399c>
   3b0f4:	ldr	r0, [r4]
   3b0f8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b0fc:	mov	r0, #1
   3b100:	bl	3c810 <blkid_probe_get_size@plt+0x352f8>
   3b104:	cmp	r0, #0
   3b108:	mov	r6, r0
   3b10c:	str	r0, [r4]
   3b110:	blt	3b0d0 <blkid_probe_get_size@plt+0x33bb8>
   3b114:	mov	r1, #108	; 0x6c
   3b118:	mov	r0, r7
   3b11c:	bl	69cc <strnlen@plt>
   3b120:	mov	r1, r5
   3b124:	add	r2, r0, #3
   3b128:	mov	r0, r6
   3b12c:	bl	7134 <connect@plt>
   3b130:	cmp	r0, #0
   3b134:	blt	3b150 <blkid_probe_get_size@plt+0x33c38>
   3b138:	ldr	r3, [pc, #164]	; 3b1e4 <blkid_probe_get_size@plt+0x33ccc>
   3b13c:	mov	r2, #1
   3b140:	add	r3, pc, r3
   3b144:	mov	r6, #0
   3b148:	strb	r2, [r3]
   3b14c:	b	3b010 <blkid_probe_get_size@plt+0x33af8>
   3b150:	bl	732c <__errno_location@plt>
   3b154:	ldr	r6, [r0]
   3b158:	ldr	r0, [r4]
   3b15c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3b160:	cmp	r6, #0
   3b164:	rsble	r6, r6, #0
   3b168:	str	r0, [r4]
   3b16c:	ble	3b010 <blkid_probe_get_size@plt+0x33af8>
   3b170:	ldr	r3, [pc, #112]	; 3b1e8 <blkid_probe_get_size@plt+0x33cd0>
   3b174:	add	r3, pc, r3
   3b178:	ldr	r3, [r3]
   3b17c:	b	3aeb4 <blkid_probe_get_size@plt+0x3399c>
   3b180:	andeq	lr, r5, ip, rrx
   3b184:	strdeq	sp, [r5], -r4
   3b188:	andeq	sp, r5, r0, lsl r3
   3b18c:	andeq	sp, r5, r8, lsr r2
   3b190:	andeq	sp, r5, r4, lsl r2
   3b194:	andeq	sp, r5, ip, asr #31
   3b198:	andeq	sp, r5, r8, lsr #4
   3b19c:	andeq	sp, r5, r8, asr r2
   3b1a0:	andeq	sp, r5, ip, ror #2
   3b1a4:	andeq	sp, r5, r4, ror #3
   3b1a8:	andeq	sp, r5, r4, lsl r2
   3b1ac:	andeq	sp, r5, r0, lsr r1
   3b1b0:	andeq	sp, r5, r0, lsl r1
   3b1b4:	andeq	sp, r5, r0, lsl #3
   3b1b8:			; <UNDEFINED> instruction: 0x0005d1b0
   3b1bc:	andeq	sp, r5, ip, asr #1
   3b1c0:	andeq	sp, r5, r8, lsr #1
   3b1c4:	andeq	sp, r5, r0, ror #2
   3b1c8:	andeq	sp, r5, r4, lsl r1
   3b1cc:	andeq	sp, r5, r0, ror r0
   3b1d0:	andeq	sp, r5, r4, asr r0
   3b1d4:	andeq	r3, r3, r4, asr #18
   3b1d8:			; <UNDEFINED> instruction: 0x0005ddb1
   3b1dc:	andeq	sp, r5, ip, ror r0
   3b1e0:	andeq	sp, r5, r8, lsl #27
   3b1e4:	andeq	sp, r5, r1, lsr sp
   3b1e8:	strdeq	sp, [r5], -r8
   3b1ec:	push	{r7, lr}
   3b1f0:	mov	r4, r0
   3b1f4:	sub	sp, sp, #8
   3b1f8:	mov	r7, r3
   3b1fc:	mov	r5, r1
   3b200:	mov	r6, r2
   3b204:	bl	3adf8 <blkid_probe_get_size@plt+0x338e0>
   3b208:	ldr	r3, [pc, #64]	; 3b250 <blkid_probe_get_size@plt+0x33d38>
   3b20c:	lsl	r0, r4, #10
   3b210:	add	r3, pc, r3
   3b214:	orr	r0, r0, #2
   3b218:	ldr	r3, [r3, r0, asr #8]
   3b21c:	cmp	r3, #1
   3b220:	bgt	3b228 <blkid_probe_get_size@plt+0x33d10>
   3b224:	bl	6d98 <abort@plt>
   3b228:	ldr	ip, [pc, #36]	; 3b254 <blkid_probe_get_size@plt+0x33d3c>
   3b22c:	ldr	r3, [sp, #16]
   3b230:	add	ip, pc, ip
   3b234:	str	r3, [sp]
   3b238:	mov	r2, r6
   3b23c:	mov	r3, r7
   3b240:	mov	r1, r5
   3b244:	str	ip, [sp, #4]
   3b248:	bl	38f9c <blkid_probe_get_size@plt+0x31a84>
   3b24c:	b	3b224 <blkid_probe_get_size@plt+0x33d0c>
   3b250:	andeq	ip, r5, ip, lsr #30
   3b254:	andeq	r4, r3, r0, lsl #8
   3b258:	push	{r7, lr}
   3b25c:	mov	r4, r0
   3b260:	sub	sp, sp, #8
   3b264:	mov	r7, r3
   3b268:	mov	r5, r1
   3b26c:	mov	r6, r2
   3b270:	bl	3adf8 <blkid_probe_get_size@plt+0x338e0>
   3b274:	ldr	r3, [pc, #64]	; 3b2bc <blkid_probe_get_size@plt+0x33da4>
   3b278:	lsl	r0, r4, #10
   3b27c:	add	r3, pc, r3
   3b280:	orr	r0, r0, #2
   3b284:	ldr	r3, [r3, r0, asr #8]
   3b288:	cmp	r3, #1
   3b28c:	bgt	3b294 <blkid_probe_get_size@plt+0x33d7c>
   3b290:	bl	6d98 <abort@plt>
   3b294:	ldr	ip, [pc, #36]	; 3b2c0 <blkid_probe_get_size@plt+0x33da8>
   3b298:	ldr	r3, [sp, #16]
   3b29c:	add	ip, pc, ip
   3b2a0:	str	r3, [sp]
   3b2a4:	mov	r2, r6
   3b2a8:	mov	r3, r7
   3b2ac:	mov	r1, r5
   3b2b0:	str	ip, [sp, #4]
   3b2b4:	bl	38f9c <blkid_probe_get_size@plt+0x31a84>
   3b2b8:	b	3b290 <blkid_probe_get_size@plt+0x33d78>
   3b2bc:	andeq	ip, r5, r0, asr #29
   3b2c0:	ldrdeq	r4, [r3], -r8
   3b2c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   3b2c8:	subs	r7, r0, #0
   3b2cc:	sub	sp, sp, #12
   3b2d0:	beq	3b3b8 <blkid_probe_get_size@plt+0x33ea0>
   3b2d4:	cmp	r1, #0
   3b2d8:	mov	r6, r1
   3b2dc:	beq	3b3e0 <blkid_probe_get_size@plt+0x33ec8>
   3b2e0:	ldr	r1, [pc, #304]	; 3b418 <blkid_probe_get_size@plt+0x33f00>
   3b2e4:	mov	r8, r2
   3b2e8:	add	r1, pc, r1
   3b2ec:	bl	6c9c <strspn@plt>
   3b2f0:	cmp	r0, r8
   3b2f4:	mov	r5, r0
   3b2f8:	bcs	3b40c <blkid_probe_get_size@plt+0x33ef4>
   3b2fc:	ldrb	r4, [r7, r0]
   3b300:	add	r9, r7, r0
   3b304:	cmp	r4, #0
   3b308:	beq	3b3a0 <blkid_probe_get_size@plt+0x33e88>
   3b30c:	bl	7104 <__ctype_b_loc@plt>
   3b310:	mov	r2, r9
   3b314:	mov	r9, #95	; 0x5f
   3b318:	mov	lr, r0
   3b31c:	mov	r0, #0
   3b320:	mov	ip, r0
   3b324:	b	3b380 <blkid_probe_get_size@plt+0x33e68>
   3b328:	cmp	ip, #0
   3b32c:	add	r3, r0, #1
   3b330:	beq	3b348 <blkid_probe_get_size@plt+0x33e30>
   3b334:	cmp	r8, r3
   3b338:	bls	3b3a8 <blkid_probe_get_size@plt+0x33e90>
   3b33c:	strb	r9, [r1]
   3b340:	add	r1, r6, r3
   3b344:	add	r3, r0, #2
   3b348:	ldrb	r4, [r7, r5]
   3b34c:	mov	r0, r3
   3b350:	mov	ip, #0
   3b354:	strb	r4, [r1]
   3b358:	add	r1, r6, r3
   3b35c:	add	r5, r5, #1
   3b360:	cmp	r0, r5
   3b364:	movcs	r3, r0
   3b368:	movcc	r3, r5
   3b36c:	cmp	r3, r8
   3b370:	bcs	3b3a8 <blkid_probe_get_size@plt+0x33e90>
   3b374:	ldrb	r4, [r2, #1]!
   3b378:	cmp	r4, #0
   3b37c:	beq	3b3a8 <blkid_probe_get_size@plt+0x33e90>
   3b380:	ldr	r3, [lr]
   3b384:	lsl	r4, r4, #1
   3b388:	add	r1, r6, r0
   3b38c:	ldrh	r3, [r3, r4]
   3b390:	tst	r3, #8192	; 0x2000
   3b394:	beq	3b328 <blkid_probe_get_size@plt+0x33e10>
   3b398:	mov	ip, #1
   3b39c:	b	3b35c <blkid_probe_get_size@plt+0x33e44>
   3b3a0:	mov	r1, r6
   3b3a4:	mov	r0, r4
   3b3a8:	mov	r3, #0
   3b3ac:	strb	r3, [r1]
   3b3b0:	add	sp, sp, #12
   3b3b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3b3b8:	ldr	r2, [pc, #92]	; 3b41c <blkid_probe_get_size@plt+0x33f04>
   3b3bc:	ldr	r1, [pc, #92]	; 3b420 <blkid_probe_get_size@plt+0x33f08>
   3b3c0:	add	r2, pc, r2
   3b3c4:	add	r2, r2, #204	; 0xcc
   3b3c8:	str	r2, [sp]
   3b3cc:	ldr	r2, [pc, #80]	; 3b424 <blkid_probe_get_size@plt+0x33f0c>
   3b3d0:	mov	r3, #132	; 0x84
   3b3d4:	add	r2, pc, r2
   3b3d8:	add	r1, pc, r1
   3b3dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b3e0:	ldr	r3, [pc, #64]	; 3b428 <blkid_probe_get_size@plt+0x33f10>
   3b3e4:	mov	r0, r1
   3b3e8:	add	r3, pc, r3
   3b3ec:	ldr	r2, [pc, #56]	; 3b42c <blkid_probe_get_size@plt+0x33f14>
   3b3f0:	ldr	r1, [pc, #56]	; 3b430 <blkid_probe_get_size@plt+0x33f18>
   3b3f4:	add	r3, r3, #204	; 0xcc
   3b3f8:	str	r3, [sp]
   3b3fc:	add	r2, pc, r2
   3b400:	mov	r3, #133	; 0x85
   3b404:	add	r1, pc, r1
   3b408:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b40c:	mov	r1, r6
   3b410:	mov	r0, #0
   3b414:	b	3b3a8 <blkid_probe_get_size@plt+0x33e90>
   3b418:			; <UNDEFINED> instruction: 0x0002fab4
   3b41c:	andeq	r3, r3, r0, lsl r6
   3b420:	ldrdeq	r4, [r3], -r8
   3b424:	andeq	r9, r2, ip, lsr sp
   3b428:	andeq	r3, r3, r8, ror #11
   3b42c:	andeq	r9, r2, r4, lsl sp
   3b430:	andeq	r2, r3, r4, lsr #4
   3b434:	push	{r4, r5, r6, r7, r8, lr}
   3b438:	sub	sp, sp, #24
   3b43c:	subs	r6, r1, #0
   3b440:	ldr	r5, [sp, #64]	; 0x40
   3b444:	beq	3b554 <blkid_probe_get_size@plt+0x3403c>
   3b448:	ldr	r3, [sp, #52]	; 0x34
   3b44c:	cmp	r3, #0
   3b450:	beq	3b580 <blkid_probe_get_size@plt+0x34068>
   3b454:	ldr	r3, [sp, #60]	; 0x3c
   3b458:	cmp	r3, #0
   3b45c:	beq	3b5ac <blkid_probe_get_size@plt+0x34094>
   3b460:	cmp	r5, #0
   3b464:	beq	3b5d8 <blkid_probe_get_size@plt+0x340c0>
   3b468:	mov	r7, r0
   3b46c:	mov	r1, #6
   3b470:	mov	r0, #1
   3b474:	mov	r8, r2
   3b478:	bl	7164 <calloc@plt>
   3b47c:	subs	r4, r0, #0
   3b480:	beq	3b4dc <blkid_probe_get_size@plt+0x33fc4>
   3b484:	mov	r1, r4
   3b488:	ldr	r0, [sp, #60]	; 0x3c
   3b48c:	bl	6343c <blkid_probe_get_size@plt+0x5bf24>
   3b490:	cmp	r0, #0
   3b494:	bge	3b4c4 <blkid_probe_get_size@plt+0x33fac>
   3b498:	ldr	r3, [pc, #356]	; 3b604 <blkid_probe_get_size@plt+0x340ec>
   3b49c:	add	r3, pc, r3
   3b4a0:	ldr	r3, [r3]
   3b4a4:	cmp	r3, #2
   3b4a8:	movle	r5, #0
   3b4ac:	bgt	3b500 <blkid_probe_get_size@plt+0x33fe8>
   3b4b0:	mov	r0, r4
   3b4b4:	bl	69f0 <free@plt>
   3b4b8:	mov	r0, r5
   3b4bc:	add	sp, sp, #24
   3b4c0:	pop	{r4, r5, r6, r7, r8, pc}
   3b4c4:	ldr	r0, [r5]
   3b4c8:	bl	69f0 <free@plt>
   3b4cc:	str	r4, [r5]
   3b4d0:	mov	r4, #0
   3b4d4:	mov	r5, r4
   3b4d8:	b	3b4b0 <blkid_probe_get_size@plt+0x33f98>
   3b4dc:	ldr	r3, [pc, #292]	; 3b608 <blkid_probe_get_size@plt+0x340f0>
   3b4e0:	ldr	r1, [pc, #292]	; 3b60c <blkid_probe_get_size@plt+0x340f4>
   3b4e4:	add	r3, pc, r3
   3b4e8:	ldr	r2, [pc, #288]	; 3b610 <blkid_probe_get_size@plt+0x340f8>
   3b4ec:	add	r3, r3, #248	; 0xf8
   3b4f0:	add	r1, pc, r1
   3b4f4:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   3b4f8:	mov	r5, r0
   3b4fc:	b	3b4b0 <blkid_probe_get_size@plt+0x33f98>
   3b500:	ldr	r1, [pc, #268]	; 3b614 <blkid_probe_get_size@plt+0x340fc>
   3b504:	ldr	lr, [pc, #268]	; 3b618 <blkid_probe_get_size@plt+0x34100>
   3b508:	add	r1, pc, r1
   3b50c:	add	r1, r1, #248	; 0xf8
   3b510:	str	r1, [sp, #12]
   3b514:	ldr	r1, [pc, #256]	; 3b61c <blkid_probe_get_size@plt+0x34104>
   3b518:	ldr	ip, [pc, #256]	; 3b620 <blkid_probe_get_size@plt+0x34108>
   3b51c:	ldr	r3, [sp, #60]	; 0x3c
   3b520:	add	r1, pc, r1
   3b524:	add	ip, pc, ip
   3b528:	str	r3, [sp, #20]
   3b52c:	str	r0, [sp]
   3b530:	stmib	sp, {r1, lr}
   3b534:	mov	r3, r8
   3b538:	mov	r2, r6
   3b53c:	mov	r0, r7
   3b540:	str	ip, [sp, #16]
   3b544:	mov	r1, #3
   3b548:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   3b54c:	mov	r5, #0
   3b550:	b	3b4b0 <blkid_probe_get_size@plt+0x33f98>
   3b554:	ldr	r3, [pc, #200]	; 3b624 <blkid_probe_get_size@plt+0x3410c>
   3b558:	ldr	r2, [pc, #200]	; 3b628 <blkid_probe_get_size@plt+0x34110>
   3b55c:	add	r3, pc, r3
   3b560:	ldr	r1, [pc, #196]	; 3b62c <blkid_probe_get_size@plt+0x34114>
   3b564:	add	r3, r3, #228	; 0xe4
   3b568:	str	r3, [sp]
   3b56c:	mov	r0, r6
   3b570:	mov	r3, #280	; 0x118
   3b574:	add	r2, pc, r2
   3b578:	add	r1, pc, r1
   3b57c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b580:	ldr	r2, [pc, #168]	; 3b630 <blkid_probe_get_size@plt+0x34118>
   3b584:	ldr	r1, [pc, #168]	; 3b634 <blkid_probe_get_size@plt+0x3411c>
   3b588:	add	r2, pc, r2
   3b58c:	add	r2, r2, #228	; 0xe4
   3b590:	str	r2, [sp]
   3b594:	ldr	r2, [pc, #156]	; 3b638 <blkid_probe_get_size@plt+0x34120>
   3b598:	ldr	r3, [pc, #156]	; 3b63c <blkid_probe_get_size@plt+0x34124>
   3b59c:	add	r2, pc, r2
   3b5a0:	add	r1, pc, r1
   3b5a4:	ldr	r0, [sp, #52]	; 0x34
   3b5a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b5ac:	ldr	r2, [pc, #140]	; 3b640 <blkid_probe_get_size@plt+0x34128>
   3b5b0:	ldr	r1, [pc, #140]	; 3b644 <blkid_probe_get_size@plt+0x3412c>
   3b5b4:	add	r2, pc, r2
   3b5b8:	add	r2, r2, #228	; 0xe4
   3b5bc:	str	r2, [sp]
   3b5c0:	ldr	r2, [pc, #128]	; 3b648 <blkid_probe_get_size@plt+0x34130>
   3b5c4:	ldr	r3, [pc, #128]	; 3b64c <blkid_probe_get_size@plt+0x34134>
   3b5c8:	add	r2, pc, r2
   3b5cc:	add	r1, pc, r1
   3b5d0:	ldr	r0, [sp, #60]	; 0x3c
   3b5d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b5d8:	ldr	r3, [pc, #112]	; 3b650 <blkid_probe_get_size@plt+0x34138>
   3b5dc:	ldr	r2, [pc, #112]	; 3b654 <blkid_probe_get_size@plt+0x3413c>
   3b5e0:	add	r3, pc, r3
   3b5e4:	ldr	r1, [pc, #108]	; 3b658 <blkid_probe_get_size@plt+0x34140>
   3b5e8:	add	r3, r3, #228	; 0xe4
   3b5ec:	str	r3, [sp]
   3b5f0:	mov	r0, r5
   3b5f4:	ldr	r3, [pc, #96]	; 3b65c <blkid_probe_get_size@plt+0x34144>
   3b5f8:	add	r2, pc, r2
   3b5fc:	add	r1, pc, r1
   3b600:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b604:	andeq	ip, r5, r0, lsr #25
   3b608:	andeq	r3, r3, ip, ror #9
   3b60c:	andeq	r4, r3, r4, asr #3
   3b610:	andeq	r0, r0, pc, lsl r1
   3b614:	andeq	r3, r3, r8, asr #9
   3b618:	andeq	r0, r0, r3, lsr #2
   3b61c:	muleq	r3, r4, r1
   3b620:	andeq	r4, r3, r0, asr #3
   3b624:	andeq	r3, r3, r4, ror r4
   3b628:	andeq	r4, r3, r0, asr #2
   3b62c:	andeq	lr, r2, r0, lsr lr
   3b630:	andeq	r3, r3, r8, asr #8
   3b634:	strdeq	lr, [r2], -ip
   3b638:	andeq	r4, r3, r8, lsl r1
   3b63c:	andeq	r0, r0, r9, lsl r1
   3b640:	andeq	r3, r3, ip, lsl r4
   3b644:	strdeq	lr, [r2], -r0
   3b648:	andeq	r4, r3, ip, ror #1
   3b64c:	andeq	r0, r0, sl, lsl r1
   3b650:	strdeq	r3, [r3], -r0
   3b654:	strheq	r4, [r3], -ip
   3b658:	andeq	r9, r3, r0, lsl #4
   3b65c:	andeq	r0, r0, fp, lsl r1
   3b660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3b664:	sub	sp, sp, #24
   3b668:	subs	r8, r1, #0
   3b66c:	ldr	r6, [sp, #72]	; 0x48
   3b670:	beq	3b7a8 <blkid_probe_get_size@plt+0x34290>
   3b674:	ldr	r3, [sp, #60]	; 0x3c
   3b678:	cmp	r3, #0
   3b67c:	beq	3b7d4 <blkid_probe_get_size@plt+0x342bc>
   3b680:	ldr	r3, [sp, #68]	; 0x44
   3b684:	cmp	r3, #0
   3b688:	beq	3b800 <blkid_probe_get_size@plt+0x342e8>
   3b68c:	cmp	r6, #0
   3b690:	beq	3b82c <blkid_probe_get_size@plt+0x34314>
   3b694:	mov	r9, r0
   3b698:	ldr	r0, [sp, #68]	; 0x44
   3b69c:	mov	sl, r2
   3b6a0:	bl	74e8 <strdup@plt>
   3b6a4:	subs	r5, r0, #0
   3b6a8:	beq	3b784 <blkid_probe_get_size@plt+0x3426c>
   3b6ac:	ldrb	r7, [r5]
   3b6b0:	cmp	r7, #0
   3b6b4:	beq	3b858 <blkid_probe_get_size@plt+0x34340>
   3b6b8:	tst	r7, #128	; 0x80
   3b6bc:	bne	3b6ec <blkid_probe_get_size@plt+0x341d4>
   3b6c0:	mov	r3, r5
   3b6c4:	b	3b6d0 <blkid_probe_get_size@plt+0x341b8>
   3b6c8:	tst	r4, #128	; 0x80
   3b6cc:	bne	3b6ec <blkid_probe_get_size@plt+0x341d4>
   3b6d0:	ldrb	r4, [r3, #1]!
   3b6d4:	cmp	r4, #0
   3b6d8:	bne	3b6c8 <blkid_probe_get_size@plt+0x341b0>
   3b6dc:	mov	r0, r5
   3b6e0:	bl	723c <strlen@plt>
   3b6e4:	cmp	r0, #255	; 0xff
   3b6e8:	bls	3b718 <blkid_probe_get_size@plt+0x34200>
   3b6ec:	ldr	r3, [pc, #388]	; 3b878 <blkid_probe_get_size@plt+0x34360>
   3b6f0:	add	r3, pc, r3
   3b6f4:	ldr	r3, [r3]
   3b6f8:	cmp	r3, #2
   3b6fc:	movle	r4, #0
   3b700:	bgt	3b72c <blkid_probe_get_size@plt+0x34214>
   3b704:	mov	r0, r5
   3b708:	bl	69f0 <free@plt>
   3b70c:	mov	r0, r4
   3b710:	add	sp, sp, #24
   3b714:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3b718:	ldr	r0, [r6]
   3b71c:	bl	69f0 <free@plt>
   3b720:	str	r5, [r6]
   3b724:	mov	r5, r4
   3b728:	b	3b704 <blkid_probe_get_size@plt+0x341ec>
   3b72c:	ldr	r1, [pc, #328]	; 3b87c <blkid_probe_get_size@plt+0x34364>
   3b730:	ldr	ip, [pc, #328]	; 3b880 <blkid_probe_get_size@plt+0x34368>
   3b734:	add	r1, pc, r1
   3b738:	add	ip, pc, ip
   3b73c:	add	r1, r1, #292	; 0x124
   3b740:	ldr	lr, [pc, #316]	; 3b884 <blkid_probe_get_size@plt+0x3436c>
   3b744:	ldr	r3, [sp, #68]	; 0x44
   3b748:	str	r1, [sp, #12]
   3b74c:	mov	r6, #253	; 0xfd
   3b750:	mov	r1, ip
   3b754:	add	lr, pc, lr
   3b758:	mov	r4, #0
   3b75c:	str	r3, [sp, #20]
   3b760:	stmib	sp, {r1, r6}
   3b764:	mov	r3, sl
   3b768:	mov	r2, r8
   3b76c:	mov	r0, r9
   3b770:	str	lr, [sp, #16]
   3b774:	str	r4, [sp]
   3b778:	mov	r1, #3
   3b77c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   3b780:	b	3b704 <blkid_probe_get_size@plt+0x341ec>
   3b784:	ldr	r3, [pc, #252]	; 3b888 <blkid_probe_get_size@plt+0x34370>
   3b788:	ldr	r1, [pc, #252]	; 3b88c <blkid_probe_get_size@plt+0x34374>
   3b78c:	add	r3, pc, r3
   3b790:	mov	r2, #250	; 0xfa
   3b794:	add	r3, r3, #292	; 0x124
   3b798:	add	r1, pc, r1
   3b79c:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   3b7a0:	mov	r4, r0
   3b7a4:	b	3b704 <blkid_probe_get_size@plt+0x341ec>
   3b7a8:	ldr	r3, [pc, #224]	; 3b890 <blkid_probe_get_size@plt+0x34378>
   3b7ac:	ldr	r2, [pc, #224]	; 3b894 <blkid_probe_get_size@plt+0x3437c>
   3b7b0:	add	r3, pc, r3
   3b7b4:	ldr	r1, [pc, #220]	; 3b898 <blkid_probe_get_size@plt+0x34380>
   3b7b8:	add	r3, r3, #268	; 0x10c
   3b7bc:	str	r3, [sp]
   3b7c0:	mov	r0, r8
   3b7c4:	mov	r3, #243	; 0xf3
   3b7c8:	add	r2, pc, r2
   3b7cc:	add	r1, pc, r1
   3b7d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b7d4:	ldr	r2, [pc, #192]	; 3b89c <blkid_probe_get_size@plt+0x34384>
   3b7d8:	ldr	r1, [pc, #192]	; 3b8a0 <blkid_probe_get_size@plt+0x34388>
   3b7dc:	add	r2, pc, r2
   3b7e0:	add	r2, r2, #268	; 0x10c
   3b7e4:	str	r2, [sp]
   3b7e8:	ldr	r2, [pc, #180]	; 3b8a4 <blkid_probe_get_size@plt+0x3438c>
   3b7ec:	mov	r3, #244	; 0xf4
   3b7f0:	add	r2, pc, r2
   3b7f4:	add	r1, pc, r1
   3b7f8:	ldr	r0, [sp, #60]	; 0x3c
   3b7fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b800:	ldr	r2, [pc, #160]	; 3b8a8 <blkid_probe_get_size@plt+0x34390>
   3b804:	ldr	r1, [pc, #160]	; 3b8ac <blkid_probe_get_size@plt+0x34394>
   3b808:	add	r2, pc, r2
   3b80c:	add	r2, r2, #268	; 0x10c
   3b810:	str	r2, [sp]
   3b814:	ldr	r2, [pc, #148]	; 3b8b0 <blkid_probe_get_size@plt+0x34398>
   3b818:	mov	r3, #245	; 0xf5
   3b81c:	add	r2, pc, r2
   3b820:	add	r1, pc, r1
   3b824:	ldr	r0, [sp, #68]	; 0x44
   3b828:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b82c:	ldr	r3, [pc, #128]	; 3b8b4 <blkid_probe_get_size@plt+0x3439c>
   3b830:	ldr	r2, [pc, #128]	; 3b8b8 <blkid_probe_get_size@plt+0x343a0>
   3b834:	add	r3, pc, r3
   3b838:	ldr	r1, [pc, #124]	; 3b8bc <blkid_probe_get_size@plt+0x343a4>
   3b83c:	add	r3, r3, #268	; 0x10c
   3b840:	str	r3, [sp]
   3b844:	mov	r0, r6
   3b848:	mov	r3, #246	; 0xf6
   3b84c:	add	r2, pc, r2
   3b850:	add	r1, pc, r1
   3b854:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3b858:	bl	723c <strlen@plt>
   3b85c:	cmp	r0, #255	; 0xff
   3b860:	bhi	3b6ec <blkid_probe_get_size@plt+0x341d4>
   3b864:	ldr	r0, [r6]
   3b868:	bl	69f0 <free@plt>
   3b86c:	mov	r4, r7
   3b870:	str	r7, [r6]
   3b874:	b	3b704 <blkid_probe_get_size@plt+0x341ec>
   3b878:	andeq	ip, r5, ip, asr #20
   3b87c:	muleq	r3, ip, r2
   3b880:	andeq	r3, r3, ip, ror pc
   3b884:	andeq	r3, r3, r4, asr #31
   3b888:	andeq	r3, r3, r4, asr #4
   3b88c:	andeq	r3, r3, ip, lsl pc
   3b890:	andeq	r3, r3, r0, lsr #4
   3b894:	andeq	r3, r3, ip, ror #29
   3b898:	ldrdeq	lr, [r2], -ip
   3b89c:	strdeq	r3, [r3], -r4
   3b8a0:	andeq	lr, r2, r8, lsr #19
   3b8a4:	andeq	r3, r3, r4, asr #29
   3b8a8:	andeq	r3, r3, r8, asr #3
   3b8ac:	muleq	r2, ip, fp
   3b8b0:	muleq	r3, r8, lr
   3b8b4:	muleq	r3, ip, r1
   3b8b8:	andeq	r3, r3, r8, ror #28
   3b8bc:	andeq	r8, r3, ip, lsr #31
   3b8c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b8c4:	sub	sp, sp, #52	; 0x34
   3b8c8:	ldr	r3, [pc, #652]	; 3bb5c <blkid_probe_get_size@plt+0x34644>
   3b8cc:	ldr	ip, [pc, #652]	; 3bb60 <blkid_probe_get_size@plt+0x34648>
   3b8d0:	add	r3, pc, r3
   3b8d4:	ldr	lr, [sp, #100]	; 0x64
   3b8d8:	subs	r9, r1, #0
   3b8dc:	str	lr, [sp, #36]	; 0x24
   3b8e0:	ldr	r1, [r3, ip]
   3b8e4:	mov	fp, r2
   3b8e8:	str	r0, [sp, #32]
   3b8ec:	ldr	r2, [r1]
   3b8f0:	str	r1, [sp, #28]
   3b8f4:	ldr	r0, [sp, #92]	; 0x5c
   3b8f8:	str	r2, [sp, #44]	; 0x2c
   3b8fc:	ldr	r5, [sp, #104]	; 0x68
   3b900:	beq	3ba54 <blkid_probe_get_size@plt+0x3453c>
   3b904:	cmp	r0, #0
   3b908:	beq	3ba80 <blkid_probe_get_size@plt+0x34568>
   3b90c:	cmp	lr, #0
   3b910:	beq	3baa8 <blkid_probe_get_size@plt+0x34590>
   3b914:	cmp	r5, #0
   3b918:	beq	3bad4 <blkid_probe_get_size@plt+0x345bc>
   3b91c:	add	r8, sp, #40	; 0x28
   3b920:	add	r7, sp, #36	; 0x24
   3b924:	mov	r6, #0
   3b928:	b	3b958 <blkid_probe_get_size@plt+0x34440>
   3b92c:	ldr	sl, [sp, #40]	; 0x28
   3b930:	mov	r0, sl
   3b934:	beq	3b9b8 <blkid_probe_get_size@plt+0x344a0>
   3b938:	bl	39c50 <blkid_probe_get_size@plt+0x32738>
   3b93c:	subs	r4, r0, #0
   3b940:	beq	3b9c0 <blkid_probe_get_size@plt+0x344a8>
   3b944:	mov	r1, sl
   3b948:	mov	r0, r5
   3b94c:	bl	3931c <blkid_probe_get_size@plt+0x31e04>
   3b950:	cmp	r0, #0
   3b954:	blt	3ba28 <blkid_probe_get_size@plt+0x34510>
   3b958:	mov	r2, #0
   3b95c:	mov	r1, r8
   3b960:	mov	r0, r7
   3b964:	str	r6, [sp, #40]	; 0x28
   3b968:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   3b96c:	subs	r4, r0, #0
   3b970:	bge	3b92c <blkid_probe_get_size@plt+0x34414>
   3b974:	ldr	r3, [pc, #488]	; 3bb64 <blkid_probe_get_size@plt+0x3464c>
   3b978:	add	r3, pc, r3
   3b97c:	ldr	r3, [r3]
   3b980:	cmp	r3, #2
   3b984:	bgt	3bb00 <blkid_probe_get_size@plt+0x345e8>
   3b988:	ldr	sl, [sp, #40]	; 0x28
   3b98c:	mov	r4, #0
   3b990:	mov	r0, sl
   3b994:	bl	69f0 <free@plt>
   3b998:	ldr	r3, [sp, #28]
   3b99c:	ldr	r2, [sp, #44]	; 0x2c
   3b9a0:	mov	r0, r4
   3b9a4:	ldr	r3, [r3]
   3b9a8:	cmp	r2, r3
   3b9ac:	bne	3bb58 <blkid_probe_get_size@plt+0x34640>
   3b9b0:	add	sp, sp, #52	; 0x34
   3b9b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b9b8:	bl	69f0 <free@plt>
   3b9bc:	b	3b998 <blkid_probe_get_size@plt+0x34480>
   3b9c0:	ldr	r3, [pc, #416]	; 3bb68 <blkid_probe_get_size@plt+0x34650>
   3b9c4:	add	r3, pc, r3
   3b9c8:	ldr	r3, [r3]
   3b9cc:	cmp	r3, #2
   3b9d0:	ble	3b990 <blkid_probe_get_size@plt+0x34478>
   3b9d4:	ldr	r1, [pc, #400]	; 3bb6c <blkid_probe_get_size@plt+0x34654>
   3b9d8:	ldr	ip, [pc, #400]	; 3bb70 <blkid_probe_get_size@plt+0x34658>
   3b9dc:	add	r1, pc, r1
   3b9e0:	add	r1, r1, #340	; 0x154
   3b9e4:	str	r1, [sp, #12]
   3b9e8:	ldr	r1, [pc, #388]	; 3bb74 <blkid_probe_get_size@plt+0x3465c>
   3b9ec:	add	ip, pc, ip
   3b9f0:	ldr	lr, [sp, #36]	; 0x24
   3b9f4:	add	r1, pc, r1
   3b9f8:	str	ip, [sp, #16]
   3b9fc:	mov	ip, #215	; 0xd7
   3ba00:	str	r4, [sp]
   3ba04:	stmib	sp, {r1, ip}
   3ba08:	mov	r3, fp
   3ba0c:	mov	r2, r9
   3ba10:	ldr	r0, [sp, #32]
   3ba14:	str	lr, [sp, #20]
   3ba18:	mov	r1, #3
   3ba1c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   3ba20:	ldr	sl, [sp, #40]	; 0x28
   3ba24:	b	3b990 <blkid_probe_get_size@plt+0x34478>
   3ba28:	ldr	r3, [pc, #328]	; 3bb78 <blkid_probe_get_size@plt+0x34660>
   3ba2c:	ldr	r1, [pc, #328]	; 3bb7c <blkid_probe_get_size@plt+0x34664>
   3ba30:	add	r3, pc, r3
   3ba34:	mov	r2, #221	; 0xdd
   3ba38:	add	r3, r3, #340	; 0x154
   3ba3c:	add	r1, pc, r1
   3ba40:	mov	r0, #0
   3ba44:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   3ba48:	ldr	sl, [sp, #40]	; 0x28
   3ba4c:	mov	r4, r0
   3ba50:	b	3b990 <blkid_probe_get_size@plt+0x34478>
   3ba54:	ldr	r3, [pc, #292]	; 3bb80 <blkid_probe_get_size@plt+0x34668>
   3ba58:	ldr	r2, [pc, #292]	; 3bb84 <blkid_probe_get_size@plt+0x3466c>
   3ba5c:	add	r3, pc, r3
   3ba60:	ldr	r1, [pc, #288]	; 3bb88 <blkid_probe_get_size@plt+0x34670>
   3ba64:	add	r3, r3, #316	; 0x13c
   3ba68:	str	r3, [sp]
   3ba6c:	mov	r0, r9
   3ba70:	mov	r3, #198	; 0xc6
   3ba74:	add	r2, pc, r2
   3ba78:	add	r1, pc, r1
   3ba7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ba80:	ldr	r3, [pc, #260]	; 3bb8c <blkid_probe_get_size@plt+0x34674>
   3ba84:	ldr	r2, [pc, #260]	; 3bb90 <blkid_probe_get_size@plt+0x34678>
   3ba88:	add	r3, pc, r3
   3ba8c:	ldr	r1, [pc, #256]	; 3bb94 <blkid_probe_get_size@plt+0x3467c>
   3ba90:	add	r3, r3, #316	; 0x13c
   3ba94:	str	r3, [sp]
   3ba98:	add	r2, pc, r2
   3ba9c:	mov	r3, #199	; 0xc7
   3baa0:	add	r1, pc, r1
   3baa4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3baa8:	ldr	r3, [pc, #232]	; 3bb98 <blkid_probe_get_size@plt+0x34680>
   3baac:	ldr	r2, [pc, #232]	; 3bb9c <blkid_probe_get_size@plt+0x34684>
   3bab0:	add	r3, pc, r3
   3bab4:	ldr	r1, [pc, #228]	; 3bba0 <blkid_probe_get_size@plt+0x34688>
   3bab8:	add	r3, r3, #316	; 0x13c
   3babc:	str	r3, [sp]
   3bac0:	mov	r0, lr
   3bac4:	mov	r3, #200	; 0xc8
   3bac8:	add	r2, pc, r2
   3bacc:	add	r1, pc, r1
   3bad0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3bad4:	ldr	r3, [pc, #200]	; 3bba4 <blkid_probe_get_size@plt+0x3468c>
   3bad8:	ldr	r2, [pc, #200]	; 3bba8 <blkid_probe_get_size@plt+0x34690>
   3badc:	add	r3, pc, r3
   3bae0:	ldr	r1, [pc, #196]	; 3bbac <blkid_probe_get_size@plt+0x34694>
   3bae4:	add	r3, r3, #316	; 0x13c
   3bae8:	str	r3, [sp]
   3baec:	mov	r0, r5
   3baf0:	mov	r3, #201	; 0xc9
   3baf4:	add	r2, pc, r2
   3baf8:	add	r1, pc, r1
   3bafc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3bb00:	ldr	r1, [pc, #168]	; 3bbb0 <blkid_probe_get_size@plt+0x34698>
   3bb04:	ldr	ip, [pc, #168]	; 3bbb4 <blkid_probe_get_size@plt+0x3469c>
   3bb08:	add	r1, pc, r1
   3bb0c:	add	r1, r1, #340	; 0x154
   3bb10:	str	r1, [sp, #12]
   3bb14:	ldr	r1, [pc, #156]	; 3bbb8 <blkid_probe_get_size@plt+0x346a0>
   3bb18:	add	ip, pc, ip
   3bb1c:	ldr	lr, [sp, #36]	; 0x24
   3bb20:	add	r1, pc, r1
   3bb24:	str	ip, [sp, #16]
   3bb28:	mov	ip, #208	; 0xd0
   3bb2c:	str	r6, [sp]
   3bb30:	stmib	sp, {r1, ip}
   3bb34:	mov	r3, fp
   3bb38:	mov	r2, r9
   3bb3c:	ldr	r0, [sp, #32]
   3bb40:	str	lr, [sp, #20]
   3bb44:	mov	r1, #3
   3bb48:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   3bb4c:	mov	r4, #0
   3bb50:	ldr	sl, [sp, #40]	; 0x28
   3bb54:	b	3b990 <blkid_probe_get_size@plt+0x34478>
   3bb58:	bl	6fb4 <__stack_chk_fail@plt>
   3bb5c:	muleq	r5, r8, r2
   3bb60:	andeq	r0, r0, ip, lsr r4
   3bb64:	andeq	ip, r5, r4, asr #15
   3bb68:	andeq	ip, r5, r8, ror r7
   3bb6c:	strdeq	r2, [r3], -r4
   3bb70:	andeq	lr, r2, r0, lsl #24
   3bb74:	andeq	r3, r3, r0, asr #25
   3bb78:	andeq	r2, r3, r0, lsr #31
   3bb7c:	andeq	r3, r3, r8, ror ip
   3bb80:	andeq	r2, r3, r4, ror pc
   3bb84:	andeq	r3, r3, r0, asr #24
   3bb88:	andeq	lr, r2, r0, lsr r9
   3bb8c:	andeq	r2, r3, r8, asr #30
   3bb90:	andeq	r3, r3, ip, lsl ip
   3bb94:	strdeq	lr, [r2], -ip
   3bb98:	andeq	r2, r3, r0, lsr #30
   3bb9c:	andeq	r3, r3, ip, ror #23
   3bba0:	strdeq	lr, [r2], -r0
   3bba4:	strdeq	r2, [r3], -r4
   3bba8:	andeq	r3, r3, r0, asr #23
   3bbac:	andeq	r8, r3, r4, lsl #26
   3bbb0:	andeq	r2, r3, r8, asr #29
   3bbb4:	andeq	r3, r3, ip, asr #24
   3bbb8:	muleq	r3, r4, fp
   3bbbc:	ldr	r3, [pc, #408]	; 3bd5c <blkid_probe_get_size@plt+0x34844>
   3bbc0:	ldr	r2, [pc, #408]	; 3bd60 <blkid_probe_get_size@plt+0x34848>
   3bbc4:	add	r3, pc, r3
   3bbc8:	push	{r4, r5, r6, fp, lr}
   3bbcc:	add	fp, sp, #16
   3bbd0:	sub	sp, sp, #20
   3bbd4:	ldr	r6, [r3, r2]
   3bbd8:	subs	r5, r0, #0
   3bbdc:	ldr	r3, [r6]
   3bbe0:	str	r3, [fp, #-24]	; 0xffffffe8
   3bbe4:	beq	3bc64 <blkid_probe_get_size@plt+0x3474c>
   3bbe8:	mov	r4, r1
   3bbec:	ldr	r1, [r5]
   3bbf0:	cmp	r1, #0
   3bbf4:	beq	3bc64 <blkid_probe_get_size@plt+0x3474c>
   3bbf8:	ldrb	r3, [r1]
   3bbfc:	cmp	r3, #33	; 0x21
   3bc00:	beq	3bc18 <blkid_probe_get_size@plt+0x34700>
   3bc04:	cmp	r4, #0
   3bc08:	addne	r5, r5, #4
   3bc0c:	bne	3bc8c <blkid_probe_get_size@plt+0x34774>
   3bc10:	mov	r0, #0
   3bc14:	b	3bc68 <blkid_probe_get_size@plt+0x34750>
   3bc18:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
   3bc1c:	adds	r2, r0, #1
   3bc20:	addeq	r1, r1, #1
   3bc24:	streq	r1, [sp, #8]
   3bc28:	addeq	r3, sp, #8
   3bc2c:	bne	3bcb0 <blkid_probe_get_size@plt+0x34798>
   3bc30:	cmp	r4, #0
   3bc34:	movne	r5, r3
   3bc38:	beq	3bc64 <blkid_probe_get_size@plt+0x3474c>
   3bc3c:	ldr	r0, [r5], #4
   3bc40:	cmp	r0, #0
   3bc44:	beq	3bc64 <blkid_probe_get_size@plt+0x3474c>
   3bc48:	mov	r2, #0
   3bc4c:	mov	r1, r4
   3bc50:	bl	693c <fnmatch@plt>
   3bc54:	cmp	r0, #0
   3bc58:	beq	3bc68 <blkid_probe_get_size@plt+0x34750>
   3bc5c:	cmp	r5, #0
   3bc60:	bne	3bc3c <blkid_probe_get_size@plt+0x34724>
   3bc64:	mov	r0, #1
   3bc68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bc6c:	ldr	r3, [r6]
   3bc70:	cmp	r2, r3
   3bc74:	bne	3bcf0 <blkid_probe_get_size@plt+0x347d8>
   3bc78:	sub	sp, fp, #16
   3bc7c:	pop	{r4, r5, r6, fp, pc}
   3bc80:	ldr	r1, [r5], #4
   3bc84:	cmp	r1, #0
   3bc88:	beq	3bc10 <blkid_probe_get_size@plt+0x346f8>
   3bc8c:	mov	r0, r1
   3bc90:	mov	r2, #0
   3bc94:	mov	r1, r4
   3bc98:	bl	693c <fnmatch@plt>
   3bc9c:	cmp	r0, #0
   3bca0:	beq	3bc64 <blkid_probe_get_size@plt+0x3474c>
   3bca4:	cmp	r5, #0
   3bca8:	bne	3bc80 <blkid_probe_get_size@plt+0x34768>
   3bcac:	b	3bc10 <blkid_probe_get_size@plt+0x346f8>
   3bcb0:	lsrs	ip, r2, #30
   3bcb4:	bne	3bd30 <blkid_probe_get_size@plt+0x34818>
   3bcb8:	lsl	r3, r2, #2
   3bcbc:	cmp	r3, #4194304	; 0x400000
   3bcc0:	bls	3bcf4 <blkid_probe_get_size@plt+0x347dc>
   3bcc4:	ldr	r3, [pc, #152]	; 3bd64 <blkid_probe_get_size@plt+0x3484c>
   3bcc8:	ldr	r2, [pc, #152]	; 3bd68 <blkid_probe_get_size@plt+0x34850>
   3bccc:	add	r3, pc, r3
   3bcd0:	ldr	r1, [pc, #148]	; 3bd6c <blkid_probe_get_size@plt+0x34854>
   3bcd4:	add	r3, r3, #364	; 0x16c
   3bcd8:	str	r3, [sp]
   3bcdc:	mov	r0, ip
   3bce0:	mov	r3, #82	; 0x52
   3bce4:	add	r2, pc, r2
   3bce8:	add	r1, pc, r1
   3bcec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3bcf0:	bl	6fb4 <__stack_chk_fail@plt>
   3bcf4:	add	r3, r3, #14
   3bcf8:	bic	r3, r3, #7
   3bcfc:	sub	sp, sp, r3
   3bd00:	add	r3, sp, #8
   3bd04:	add	r1, r1, #1
   3bd08:	cmp	r2, #1
   3bd0c:	str	r1, [r3]
   3bd10:	beq	3bc30 <blkid_probe_get_size@plt+0x34718>
   3bd14:	add	r0, r5, r0, lsl #2
   3bd18:	mov	r2, r3
   3bd1c:	ldr	r1, [r5, #4]!
   3bd20:	cmp	r0, r5
   3bd24:	str	r1, [r2, #4]!
   3bd28:	bne	3bd1c <blkid_probe_get_size@plt+0x34804>
   3bd2c:	b	3bc30 <blkid_probe_get_size@plt+0x34718>
   3bd30:	ldr	r2, [pc, #56]	; 3bd70 <blkid_probe_get_size@plt+0x34858>
   3bd34:	ldr	r1, [pc, #56]	; 3bd74 <blkid_probe_get_size@plt+0x3485c>
   3bd38:	add	r2, pc, r2
   3bd3c:	add	r2, r2, #364	; 0x16c
   3bd40:	str	r2, [sp]
   3bd44:	ldr	r2, [pc, #44]	; 3bd78 <blkid_probe_get_size@plt+0x34860>
   3bd48:	mov	r3, #82	; 0x52
   3bd4c:	add	r2, pc, r2
   3bd50:	add	r1, pc, r1
   3bd54:	mov	r0, #0
   3bd58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3bd5c:	andeq	fp, r5, r4, lsr #31
   3bd60:	andeq	r0, r0, ip, lsr r4
   3bd64:	andeq	r2, r3, r4, lsl #26
   3bd68:	ldrdeq	r3, [r3], -r0
   3bd6c:	ldrdeq	r3, [r3], -r0
   3bd70:	muleq	r3, r8, ip
   3bd74:	andeq	r3, r3, ip, lsr sl
   3bd78:	andeq	r3, r3, r8, ror #18
   3bd7c:	ldr	r3, [pc, #272]	; 3be94 <blkid_probe_get_size@plt+0x3497c>
   3bd80:	ldr	r1, [pc, #272]	; 3be98 <blkid_probe_get_size@plt+0x34980>
   3bd84:	add	r3, pc, r3
   3bd88:	ldr	r2, [pc, #268]	; 3be9c <blkid_probe_get_size@plt+0x34984>
   3bd8c:	push	{r4, r5, r6, r7, lr}
   3bd90:	add	r2, pc, r2
   3bd94:	ldr	r5, [r3, r1]
   3bd98:	ldr	r0, [r2, #16]
   3bd9c:	sub	sp, sp, #412	; 0x19c
   3bda0:	ldr	r3, [r5]
   3bda4:	cmn	r0, #1
   3bda8:	str	r3, [sp, #404]	; 0x194
   3bdac:	beq	3bdc8 <blkid_probe_get_size@plt+0x348b0>
   3bdb0:	ldr	r2, [sp, #404]	; 0x194
   3bdb4:	ldr	r3, [r5]
   3bdb8:	cmp	r2, r3
   3bdbc:	bne	3be90 <blkid_probe_get_size@plt+0x34978>
   3bdc0:	add	sp, sp, #412	; 0x19c
   3bdc4:	pop	{r4, r5, r6, r7, pc}
   3bdc8:	add	r0, sp, #12
   3bdcc:	bl	6aec <uname@plt>
   3bdd0:	cmp	r0, #0
   3bdd4:	blt	3be64 <blkid_probe_get_size@plt+0x3494c>
   3bdd8:	ldr	r6, [pc, #192]	; 3bea0 <blkid_probe_get_size@plt+0x34988>
   3bddc:	ldr	r0, [pc, #192]	; 3bea4 <blkid_probe_get_size@plt+0x3498c>
   3bde0:	add	r6, pc, r6
   3bde4:	add	r0, pc, r0
   3bde8:	add	r6, r6, #40	; 0x28
   3bdec:	mov	r4, #0
   3bdf0:	add	r7, sp, #272	; 0x110
   3bdf4:	b	3be08 <blkid_probe_get_size@plt+0x348f0>
   3bdf8:	add	r4, r4, #1
   3bdfc:	cmp	r4, #36	; 0x24
   3be00:	beq	3be38 <blkid_probe_get_size@plt+0x34920>
   3be04:	ldr	r0, [r6, r4, lsl #3]
   3be08:	mov	r1, r7
   3be0c:	bl	7314 <strcmp@plt>
   3be10:	cmp	r0, #0
   3be14:	bne	3bdf8 <blkid_probe_get_size@plt+0x348e0>
   3be18:	ldr	r3, [pc, #136]	; 3bea8 <blkid_probe_get_size@plt+0x34990>
   3be1c:	ldr	r2, [pc, #136]	; 3beac <blkid_probe_get_size@plt+0x34994>
   3be20:	add	r3, pc, r3
   3be24:	add	r4, r3, r4, lsl #3
   3be28:	add	r2, pc, r2
   3be2c:	ldr	r0, [r4, #44]	; 0x2c
   3be30:	str	r0, [r2, #16]
   3be34:	b	3bdb0 <blkid_probe_get_size@plt+0x34898>
   3be38:	ldr	r2, [pc, #112]	; 3beb0 <blkid_probe_get_size@plt+0x34998>
   3be3c:	ldr	r1, [pc, #112]	; 3beb4 <blkid_probe_get_size@plt+0x3499c>
   3be40:	add	r2, pc, r2
   3be44:	add	r2, r2, #388	; 0x184
   3be48:	str	r2, [sp]
   3be4c:	ldr	r2, [pc, #100]	; 3beb8 <blkid_probe_get_size@plt+0x349a0>
   3be50:	mov	r3, #139	; 0x8b
   3be54:	add	r2, pc, r2
   3be58:	add	r1, pc, r1
   3be5c:	mov	r0, #0
   3be60:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   3be64:	ldr	r2, [pc, #80]	; 3bebc <blkid_probe_get_size@plt+0x349a4>
   3be68:	ldr	r1, [pc, #80]	; 3bec0 <blkid_probe_get_size@plt+0x349a8>
   3be6c:	add	r2, pc, r2
   3be70:	add	r2, r2, #388	; 0x184
   3be74:	str	r2, [sp]
   3be78:	ldr	r2, [pc, #68]	; 3bec4 <blkid_probe_get_size@plt+0x349ac>
   3be7c:	mov	r3, #133	; 0x85
   3be80:	add	r2, pc, r2
   3be84:	add	r1, pc, r1
   3be88:	mov	r0, #0
   3be8c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3be90:	bl	6fb4 <__stack_chk_fail@plt>
   3be94:	andeq	fp, r5, r4, ror #27
   3be98:	andeq	r0, r0, ip, lsr r4
   3be9c:	andeq	ip, r5, r4, lsl #6
   3bea0:	andeq	sp, r4, r0, ror #30
   3bea4:	strdeq	r3, [r3], -r4
   3bea8:	andeq	sp, r4, r0, lsr #30
   3beac:	andeq	ip, r5, ip, ror #4
   3beb0:	muleq	r3, r0, fp
   3beb4:			; <UNDEFINED> instruction: 0x000339b4
   3beb8:	andeq	r3, r3, ip, lsl #19
   3bebc:	andeq	r2, r3, r4, ror #22
   3bec0:	andeq	r3, r3, r8, ror r9
   3bec4:	andeq	r3, r3, r0, ror #18
   3bec8:	ldr	r3, [pc, #236]	; 3bfbc <blkid_probe_get_size@plt+0x34aa4>
   3becc:	ldr	r2, [pc, #236]	; 3bfc0 <blkid_probe_get_size@plt+0x34aa8>
   3bed0:	add	r3, pc, r3
   3bed4:	push	{r4, r5, lr}
   3bed8:	sub	sp, sp, #228	; 0xe4
   3bedc:	ldr	r4, [r3, r2]
   3bee0:	ldr	r0, [pc, #220]	; 3bfc4 <blkid_probe_get_size@plt+0x34aac>
   3bee4:	ldr	r3, [r4]
   3bee8:	add	r0, pc, r0
   3beec:	str	r3, [sp, #220]	; 0xdc
   3bef0:	bl	2e0ac <blkid_probe_get_size@plt+0x26b94>
   3bef4:	cmp	r0, #0
   3bef8:	ble	3bf18 <blkid_probe_get_size@plt+0x34a00>
   3befc:	mov	r0, #0
   3bf00:	ldr	r2, [sp, #220]	; 0xdc
   3bf04:	ldr	r3, [r4]
   3bf08:	cmp	r2, r3
   3bf0c:	bne	3bfb8 <blkid_probe_get_size@plt+0x34aa0>
   3bf10:	add	sp, sp, #228	; 0xe4
   3bf14:	pop	{r4, r5, pc}
   3bf18:	ldr	r2, [pc, #168]	; 3bfc8 <blkid_probe_get_size@plt+0x34ab0>
   3bf1c:	mov	r5, #0
   3bf20:	str	r5, [sp]
   3bf24:	add	r3, sp, #8
   3bf28:	add	r2, pc, r2
   3bf2c:	mvn	r1, #99	; 0x63
   3bf30:	mov	r0, #3
   3bf34:	bl	720c <__fxstatat64@plt>
   3bf38:	cmp	r0, r5
   3bf3c:	blt	3bf80 <blkid_probe_get_size@plt+0x34a68>
   3bf40:	ldr	r2, [pc, #132]	; 3bfcc <blkid_probe_get_size@plt+0x34ab4>
   3bf44:	str	r5, [sp]
   3bf48:	add	r3, sp, #112	; 0x70
   3bf4c:	add	r2, pc, r2
   3bf50:	mvn	r1, #99	; 0x63
   3bf54:	mov	r0, #3
   3bf58:	bl	720c <__fxstatat64@plt>
   3bf5c:	cmp	r0, #0
   3bf60:	blt	3bf80 <blkid_probe_get_size@plt+0x34a68>
   3bf64:	ldrd	r0, [sp, #8]
   3bf68:	ldrd	r2, [sp, #112]	; 0x70
   3bf6c:	cmp	r1, r3
   3bf70:	cmpeq	r0, r2
   3bf74:	beq	3bfa0 <blkid_probe_get_size@plt+0x34a88>
   3bf78:	mov	r0, #1
   3bf7c:	b	3bf00 <blkid_probe_get_size@plt+0x349e8>
   3bf80:	bl	732c <__errno_location@plt>
   3bf84:	ldr	r0, [r0]
   3bf88:	rsb	r0, r0, #0
   3bf8c:	cmp	r0, #0
   3bf90:	blt	3bf00 <blkid_probe_get_size@plt+0x349e8>
   3bf94:	moveq	r0, #1
   3bf98:	movne	r0, #0
   3bf9c:	b	3bf00 <blkid_probe_get_size@plt+0x349e8>
   3bfa0:	ldrd	r0, [sp, #104]	; 0x68
   3bfa4:	ldrd	r2, [sp, #208]	; 0xd0
   3bfa8:	cmp	r1, r3
   3bfac:	cmpeq	r0, r2
   3bfb0:	bne	3bf78 <blkid_probe_get_size@plt+0x34a60>
   3bfb4:	b	3befc <blkid_probe_get_size@plt+0x349e4>
   3bfb8:	bl	6fb4 <__stack_chk_fail@plt>
   3bfbc:	muleq	r5, r8, ip
   3bfc0:	andeq	r0, r0, ip, lsr r4
   3bfc4:	andeq	r3, r3, r0, ror #18
   3bfc8:	andeq	r3, r3, r8, lsr r9
   3bfcc:	andeq	ip, r3, r4, ror r0
   3bfd0:	ldr	r0, [pc, #112]	; 3c048 <blkid_probe_get_size@plt+0x34b30>
   3bfd4:	push	{r4, r5, lr}
   3bfd8:	add	r0, pc, r0
   3bfdc:	sub	sp, sp, #12
   3bfe0:	bl	74dc <__tls_get_addr@plt>
   3bfe4:	ldr	r4, [pc, #96]	; 3c04c <blkid_probe_get_size@plt+0x34b34>
   3bfe8:	add	r4, r4, r0
   3bfec:	ldr	r5, [r4, #4]
   3bff0:	cmp	r5, #0
   3bff4:	beq	3c004 <blkid_probe_get_size@plt+0x34aec>
   3bff8:	mov	r0, r5
   3bffc:	add	sp, sp, #12
   3c000:	pop	{r4, r5, pc}
   3c004:	mov	r0, #30
   3c008:	bl	7158 <sysconf@plt>
   3c00c:	cmp	r0, #0
   3c010:	movgt	r5, r0
   3c014:	strgt	r5, [r4, #4]
   3c018:	bgt	3bff8 <blkid_probe_get_size@plt+0x34ae0>
   3c01c:	ldr	r3, [pc, #44]	; 3c050 <blkid_probe_get_size@plt+0x34b38>
   3c020:	ldr	r2, [pc, #44]	; 3c054 <blkid_probe_get_size@plt+0x34b3c>
   3c024:	add	r3, pc, r3
   3c028:	ldr	r1, [pc, #40]	; 3c058 <blkid_probe_get_size@plt+0x34b40>
   3c02c:	add	r3, r3, #408	; 0x198
   3c030:	str	r3, [sp]
   3c034:	mov	r0, r5
   3c038:	mov	r3, #63	; 0x3f
   3c03c:	add	r2, pc, r2
   3c040:	add	r1, pc, r1
   3c044:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c048:	andeq	fp, r5, r0, asr #31
   3c04c:	andeq	r0, r0, r8, lsr r0
   3c050:	andeq	r2, r3, ip, lsr #19
   3c054:	andeq	r3, r3, r4, lsr r8
   3c058:	andeq	r3, r3, r4, asr #16
   3c05c:	subs	r3, r0, #0
   3c060:	beq	3c0bc <blkid_probe_get_size@plt+0x34ba4>
   3c064:	ldrb	r3, [r3]
   3c068:	tst	r3, #128	; 0x80
   3c06c:	bne	3c078 <blkid_probe_get_size@plt+0x34b60>
   3c070:	mov	r0, #1
   3c074:	bx	lr
   3c078:	and	r2, r3, #224	; 0xe0
   3c07c:	cmp	r2, #192	; 0xc0
   3c080:	beq	3c0ec <blkid_probe_get_size@plt+0x34bd4>
   3c084:	and	r2, r3, #240	; 0xf0
   3c088:	cmp	r2, #224	; 0xe0
   3c08c:	beq	3c0f4 <blkid_probe_get_size@plt+0x34bdc>
   3c090:	and	r2, r3, #248	; 0xf8
   3c094:	cmp	r2, #240	; 0xf0
   3c098:	beq	3c0fc <blkid_probe_get_size@plt+0x34be4>
   3c09c:	and	r2, r3, #252	; 0xfc
   3c0a0:	cmp	r2, #248	; 0xf8
   3c0a4:	beq	3c104 <blkid_probe_get_size@plt+0x34bec>
   3c0a8:	and	r3, r3, #254	; 0xfe
   3c0ac:	cmp	r3, #252	; 0xfc
   3c0b0:	moveq	r0, #6
   3c0b4:	movne	r0, #0
   3c0b8:	bx	lr
   3c0bc:	ldr	r2, [pc, #72]	; 3c10c <blkid_probe_get_size@plt+0x34bf4>
   3c0c0:	push	{lr}		; (str lr, [sp, #-4]!)
   3c0c4:	add	r2, pc, r2
   3c0c8:	sub	sp, sp, #12
   3c0cc:	add	r2, r2, #420	; 0x1a4
   3c0d0:	str	r2, [sp]
   3c0d4:	ldr	r1, [pc, #52]	; 3c110 <blkid_probe_get_size@plt+0x34bf8>
   3c0d8:	ldr	r2, [pc, #52]	; 3c114 <blkid_probe_get_size@plt+0x34bfc>
   3c0dc:	mov	r3, #67	; 0x43
   3c0e0:	add	r2, pc, r2
   3c0e4:	add	r1, pc, r1
   3c0e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c0ec:	mov	r0, #2
   3c0f0:	bx	lr
   3c0f4:	mov	r0, #3
   3c0f8:	bx	lr
   3c0fc:	mov	r0, #4
   3c100:	bx	lr
   3c104:	mov	r0, #5
   3c108:	bx	lr
   3c10c:	andeq	r2, r3, ip, lsl #18
   3c110:	andeq	r3, r3, ip, asr #11
   3c114:	andeq	lr, r2, r4, lsr #21
   3c118:	push	{r4, lr}
   3c11c:	subs	r4, r0, #0
   3c120:	sub	sp, sp, #8
   3c124:	beq	3c218 <blkid_probe_get_size@plt+0x34d00>
   3c128:	bl	3c05c <blkid_probe_get_size@plt+0x34b44>
   3c12c:	subs	ip, r0, #0
   3c130:	beq	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c134:	cmp	ip, #1
   3c138:	moveq	r2, ip
   3c13c:	beq	3c1fc <blkid_probe_get_size@plt+0x34ce4>
   3c140:	sub	r3, r4, #1
   3c144:	add	r1, r3, ip
   3c148:	ldrsb	r2, [r3, #1]!
   3c14c:	cmp	r2, #0
   3c150:	bge	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c154:	cmp	r1, r3
   3c158:	bne	3c148 <blkid_probe_get_size@plt+0x34c30>
   3c15c:	sub	r3, ip, #2
   3c160:	cmp	r3, #4
   3c164:	addls	pc, pc, r3, lsl #2
   3c168:	b	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c16c:	b	3c24c <blkid_probe_get_size@plt+0x34d34>
   3c170:	b	3c258 <blkid_probe_get_size@plt+0x34d40>
   3c174:	b	3c264 <blkid_probe_get_size@plt+0x34d4c>
   3c178:	b	3c180 <blkid_probe_get_size@plt+0x34c68>
   3c17c:	b	3c240 <blkid_probe_get_size@plt+0x34d28>
   3c180:	ldrb	r0, [r4]
   3c184:	and	r0, r0, #3
   3c188:	add	r1, r4, #1
   3c18c:	ldrb	r3, [r1], #1
   3c190:	and	r2, r3, #192	; 0xc0
   3c194:	cmp	r2, #128	; 0x80
   3c198:	bne	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c19c:	sub	r2, r1, r4
   3c1a0:	and	r3, r3, #63	; 0x3f
   3c1a4:	cmp	ip, r2
   3c1a8:	orr	r0, r3, r0, lsl #6
   3c1ac:	bhi	3c18c <blkid_probe_get_size@plt+0x34c74>
   3c1b0:	cmp	r0, #127	; 0x7f
   3c1b4:	bls	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c1b8:	cmp	r0, #2048	; 0x800
   3c1bc:	movcc	r2, #2
   3c1c0:	bcc	3c1e8 <blkid_probe_get_size@plt+0x34cd0>
   3c1c4:	cmp	r0, #65536	; 0x10000
   3c1c8:	movcc	r2, #3
   3c1cc:	bcc	3c1e8 <blkid_probe_get_size@plt+0x34cd0>
   3c1d0:	cmp	r0, #2097152	; 0x200000
   3c1d4:	movcc	r2, #4
   3c1d8:	bcc	3c1e8 <blkid_probe_get_size@plt+0x34cd0>
   3c1dc:	cmp	r0, #67108864	; 0x4000000
   3c1e0:	movcc	r2, #5
   3c1e4:	movcs	r2, #6
   3c1e8:	cmp	ip, r2
   3c1ec:	bne	3c208 <blkid_probe_get_size@plt+0x34cf0>
   3c1f0:	bl	39258 <blkid_probe_get_size@plt+0x31d40>
   3c1f4:	cmp	r0, #0
   3c1f8:	mvneq	r2, #21
   3c1fc:	mov	r0, r2
   3c200:	add	sp, sp, #8
   3c204:	pop	{r4, pc}
   3c208:	mvn	r2, #21
   3c20c:	mov	r0, r2
   3c210:	add	sp, sp, #8
   3c214:	pop	{r4, pc}
   3c218:	ldr	r2, [pc, #80]	; 3c270 <blkid_probe_get_size@plt+0x34d58>
   3c21c:	ldr	r1, [pc, #80]	; 3c274 <blkid_probe_get_size@plt+0x34d5c>
   3c220:	add	r2, pc, r2
   3c224:	add	r2, r2, #448	; 0x1c0
   3c228:	str	r2, [sp]
   3c22c:	ldr	r2, [pc, #68]	; 3c278 <blkid_probe_get_size@plt+0x34d60>
   3c230:	ldr	r3, [pc, #68]	; 3c27c <blkid_probe_get_size@plt+0x34d64>
   3c234:	add	r2, pc, r2
   3c238:	add	r1, pc, r1
   3c23c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c240:	ldrb	r0, [r4]
   3c244:	and	r0, r0, #1
   3c248:	b	3c188 <blkid_probe_get_size@plt+0x34c70>
   3c24c:	ldrb	r0, [r4]
   3c250:	and	r0, r0, #31
   3c254:	b	3c188 <blkid_probe_get_size@plt+0x34c70>
   3c258:	ldrb	r0, [r4]
   3c25c:	and	r0, r0, #15
   3c260:	b	3c188 <blkid_probe_get_size@plt+0x34c70>
   3c264:	ldrb	r0, [r4]
   3c268:	and	r0, r0, #7
   3c26c:	b	3c188 <blkid_probe_get_size@plt+0x34c70>
   3c270:			; <UNDEFINED> instruction: 0x000327b0
   3c274:	andeq	r3, r3, r8, ror r4
   3c278:	andeq	lr, r2, r0, asr r9
   3c27c:	ldrdeq	r0, [r0], -r1
   3c280:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c284:	mov	r8, #0
   3c288:	mov	r5, r0
   3c28c:	mov	r7, r1
   3c290:	mov	fp, r8
   3c294:	mov	r9, #95	; 0x5f
   3c298:	mov	sl, #32
   3c29c:	ldrb	r4, [r5, fp]
   3c2a0:	add	r6, r5, fp
   3c2a4:	cmp	r4, #0
   3c2a8:	beq	3c32c <blkid_probe_get_size@plt+0x34e14>
   3c2ac:	mov	r1, r7
   3c2b0:	mov	r0, r4
   3c2b4:	bl	63864 <blkid_probe_get_size@plt+0x5c34c>
   3c2b8:	cmp	r0, #0
   3c2bc:	addne	fp, fp, #1
   3c2c0:	bne	3c29c <blkid_probe_get_size@plt+0x34d84>
   3c2c4:	cmp	r4, #92	; 0x5c
   3c2c8:	bne	3c2dc <blkid_probe_get_size@plt+0x34dc4>
   3c2cc:	ldrb	r3, [r6, #1]
   3c2d0:	cmp	r3, #120	; 0x78
   3c2d4:	addeq	fp, fp, #2
   3c2d8:	beq	3c29c <blkid_probe_get_size@plt+0x34d84>
   3c2dc:	mov	r0, r6
   3c2e0:	bl	3c118 <blkid_probe_get_size@plt+0x34c00>
   3c2e4:	cmp	r0, #1
   3c2e8:	addgt	fp, fp, r0
   3c2ec:	bgt	3c29c <blkid_probe_get_size@plt+0x34d84>
   3c2f0:	bl	7104 <__ctype_b_loc@plt>
   3c2f4:	lsl	r4, r4, #1
   3c2f8:	adds	r3, r7, #0
   3c2fc:	movne	r3, #1
   3c300:	add	fp, fp, #1
   3c304:	add	r8, r8, #1
   3c308:	ldr	r2, [r0]
   3c30c:	ldrh	r2, [r2, r4]
   3c310:	ands	r3, r3, r2, lsr #13
   3c314:	bne	3c334 <blkid_probe_get_size@plt+0x34e1c>
   3c318:	strb	r9, [r6]
   3c31c:	ldrb	r4, [r5, fp]
   3c320:	add	r6, r5, fp
   3c324:	cmp	r4, #0
   3c328:	bne	3c2ac <blkid_probe_get_size@plt+0x34d94>
   3c32c:	mov	r0, r8
   3c330:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c334:	mov	r1, #32
   3c338:	mov	r0, r7
   3c33c:	bl	74c4 <strchr@plt>
   3c340:	cmp	r0, #0
   3c344:	strbne	sl, [r6]
   3c348:	bne	3c29c <blkid_probe_get_size@plt+0x34d84>
   3c34c:	b	3c318 <blkid_probe_get_size@plt+0x34e00>
   3c350:	push	{r4, r5, r6, r7, r8, lr}
   3c354:	subs	r4, r0, #0
   3c358:	sub	sp, sp, #8
   3c35c:	beq	3c3e4 <blkid_probe_get_size@plt+0x34ecc>
   3c360:	bl	723c <strlen@plt>
   3c364:	lsl	r0, r0, #2
   3c368:	add	r0, r0, #1
   3c36c:	bl	7230 <malloc@plt>
   3c370:	subs	r7, r0, #0
   3c374:	beq	3c3c8 <blkid_probe_get_size@plt+0x34eb0>
   3c378:	ldr	r8, [pc, #140]	; 3c40c <blkid_probe_get_size@plt+0x34ef4>
   3c37c:	mov	r5, r7
   3c380:	add	r8, pc, r8
   3c384:	ldrb	r3, [r4]
   3c388:	cmp	r3, #0
   3c38c:	beq	3c3c4 <blkid_probe_get_size@plt+0x34eac>
   3c390:	mov	r0, r4
   3c394:	bl	3c118 <blkid_probe_get_size@plt+0x34c00>
   3c398:	subs	r6, r0, #0
   3c39c:	ble	3c3d4 <blkid_probe_get_size@plt+0x34ebc>
   3c3a0:	mov	r0, r5
   3c3a4:	mov	r1, r4
   3c3a8:	mov	r2, r6
   3c3ac:	bl	72c0 <mempcpy@plt>
   3c3b0:	add	r4, r4, r6
   3c3b4:	ldrb	r3, [r4]
   3c3b8:	cmp	r3, #0
   3c3bc:	mov	r5, r0
   3c3c0:	bne	3c390 <blkid_probe_get_size@plt+0x34e78>
   3c3c4:	strb	r3, [r5]
   3c3c8:	mov	r0, r7
   3c3cc:	add	sp, sp, #8
   3c3d0:	pop	{r4, r5, r6, r7, r8, pc}
   3c3d4:	ldr	r0, [r8]
   3c3d8:	add	r4, r4, #1
   3c3dc:	str	r0, [r5], #3
   3c3e0:	b	3c384 <blkid_probe_get_size@plt+0x34e6c>
   3c3e4:	ldr	r2, [pc, #36]	; 3c410 <blkid_probe_get_size@plt+0x34ef8>
   3c3e8:	ldr	r1, [pc, #36]	; 3c414 <blkid_probe_get_size@plt+0x34efc>
   3c3ec:	add	r2, pc, r2
   3c3f0:	add	r2, r2, #476	; 0x1dc
   3c3f4:	str	r2, [sp]
   3c3f8:	ldr	r2, [pc, #24]	; 3c418 <blkid_probe_get_size@plt+0x34f00>
   3c3fc:	mov	r3, #180	; 0xb4
   3c400:	add	r2, pc, r2
   3c404:	add	r1, pc, r1
   3c408:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c40c:	andeq	r3, r3, ip, lsl #10
   3c410:	andeq	r2, r3, r4, ror #11
   3c414:	andeq	r3, r3, ip, lsr #5
   3c418:	andeq	lr, r2, r4, lsl #15
   3c41c:	push	{r4, r5, lr}
   3c420:	subs	r5, r0, #0
   3c424:	sub	sp, sp, #12
   3c428:	beq	3c46c <blkid_probe_get_size@plt+0x34f54>
   3c42c:	ldrb	r3, [r5]
   3c430:	cmp	r3, #0
   3c434:	movne	r4, r5
   3c438:	bne	3c44c <blkid_probe_get_size@plt+0x34f34>
   3c43c:	b	3c460 <blkid_probe_get_size@plt+0x34f48>
   3c440:	ldrb	r3, [r4, r0]!
   3c444:	cmp	r3, #0
   3c448:	beq	3c460 <blkid_probe_get_size@plt+0x34f48>
   3c44c:	mov	r0, r4
   3c450:	bl	3c118 <blkid_probe_get_size@plt+0x34c00>
   3c454:	cmp	r0, #0
   3c458:	bge	3c440 <blkid_probe_get_size@plt+0x34f28>
   3c45c:	mov	r5, #0
   3c460:	mov	r0, r5
   3c464:	add	sp, sp, #12
   3c468:	pop	{r4, r5, pc}
   3c46c:	ldr	r2, [pc, #32]	; 3c494 <blkid_probe_get_size@plt+0x34f7c>
   3c470:	ldr	r1, [pc, #32]	; 3c498 <blkid_probe_get_size@plt+0x34f80>
   3c474:	add	r2, pc, r2
   3c478:	add	r2, r2, #496	; 0x1f0
   3c47c:	str	r2, [sp]
   3c480:	ldr	r2, [pc, #20]	; 3c49c <blkid_probe_get_size@plt+0x34f84>
   3c484:	mov	r3, #161	; 0xa1
   3c488:	add	r2, pc, r2
   3c48c:	add	r1, pc, r1
   3c490:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c494:	andeq	r2, r3, ip, asr r5
   3c498:	andeq	r3, r3, r4, lsr #4
   3c49c:	strdeq	lr, [r2], -ip
   3c4a0:	ldr	r3, [pc, #392]	; 3c630 <blkid_probe_get_size@plt+0x35118>
   3c4a4:	ldr	r2, [pc, #392]	; 3c634 <blkid_probe_get_size@plt+0x3511c>
   3c4a8:	add	r3, pc, r3
   3c4ac:	push	{r4, r5, r6, r7, fp, lr}
   3c4b0:	add	fp, sp, #20
   3c4b4:	sub	sp, sp, #16
   3c4b8:	ldr	r5, [r3, r2]
   3c4bc:	mov	r4, r0
   3c4c0:	ldr	r3, [r5]
   3c4c4:	str	r3, [fp, #-24]	; 0xffffffe8
   3c4c8:	bl	7224 <getgid@plt>
   3c4cc:	cmp	r0, r4
   3c4d0:	beq	3c57c <blkid_probe_get_size@plt+0x35064>
   3c4d4:	bl	6ac8 <getegid@plt>
   3c4d8:	cmp	r0, r4
   3c4dc:	beq	3c57c <blkid_probe_get_size@plt+0x35064>
   3c4e0:	ldr	r0, [pc, #336]	; 3c638 <blkid_probe_get_size@plt+0x35120>
   3c4e4:	cmn	r4, #1
   3c4e8:	cmpne	r4, r0
   3c4ec:	moveq	r7, #1
   3c4f0:	movne	r7, #0
   3c4f4:	mvneq	r0, #21
   3c4f8:	beq	3c580 <blkid_probe_get_size@plt+0x35068>
   3c4fc:	mov	r0, #3
   3c500:	bl	7158 <sysconf@plt>
   3c504:	subs	r3, r0, #0
   3c508:	ble	3c5a8 <blkid_probe_get_size@plt+0x35090>
   3c50c:	lsrs	r6, r3, #30
   3c510:	bne	3c604 <blkid_probe_get_size@plt+0x350ec>
   3c514:	lsl	r3, r3, #2
   3c518:	cmp	r3, #4194304	; 0x400000
   3c51c:	bhi	3c5d4 <blkid_probe_get_size@plt+0x350bc>
   3c520:	add	r3, r3, #14
   3c524:	bic	r3, r3, #7
   3c528:	sub	sp, sp, r3
   3c52c:	add	r7, sp, #8
   3c530:	mov	r1, r7
   3c534:	bl	6cf0 <getgroups@plt>
   3c538:	cmp	r0, #0
   3c53c:	blt	3c598 <blkid_probe_get_size@plt+0x35080>
   3c540:	beq	3c580 <blkid_probe_get_size@plt+0x35068>
   3c544:	ldr	r3, [r7]
   3c548:	cmp	r4, r3
   3c54c:	beq	3c57c <blkid_probe_get_size@plt+0x35064>
   3c550:	mov	r1, r7
   3c554:	mov	r3, r6
   3c558:	b	3c568 <blkid_probe_get_size@plt+0x35050>
   3c55c:	ldr	r2, [r1, #4]!
   3c560:	cmp	r2, r4
   3c564:	beq	3c57c <blkid_probe_get_size@plt+0x35064>
   3c568:	add	r3, r3, #1
   3c56c:	cmp	r3, r0
   3c570:	bne	3c55c <blkid_probe_get_size@plt+0x35044>
   3c574:	mov	r0, #0
   3c578:	b	3c580 <blkid_probe_get_size@plt+0x35068>
   3c57c:	mov	r0, #1
   3c580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c584:	ldr	r3, [r5]
   3c588:	cmp	r2, r3
   3c58c:	bne	3c600 <blkid_probe_get_size@plt+0x350e8>
   3c590:	sub	sp, fp, #20
   3c594:	pop	{r4, r5, r6, r7, fp, pc}
   3c598:	bl	732c <__errno_location@plt>
   3c59c:	ldr	r0, [r0]
   3c5a0:	rsb	r0, r0, #0
   3c5a4:	b	3c580 <blkid_probe_get_size@plt+0x35068>
   3c5a8:	ldr	r3, [pc, #140]	; 3c63c <blkid_probe_get_size@plt+0x35124>
   3c5ac:	ldr	r2, [pc, #140]	; 3c640 <blkid_probe_get_size@plt+0x35128>
   3c5b0:	add	r3, pc, r3
   3c5b4:	ldr	r1, [pc, #136]	; 3c644 <blkid_probe_get_size@plt+0x3512c>
   3c5b8:	add	r3, r3, #512	; 0x200
   3c5bc:	str	r3, [sp]
   3c5c0:	mov	r0, r7
   3c5c4:	mov	r3, #412	; 0x19c
   3c5c8:	add	r2, pc, r2
   3c5cc:	add	r1, pc, r1
   3c5d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c5d4:	ldr	r3, [pc, #108]	; 3c648 <blkid_probe_get_size@plt+0x35130>
   3c5d8:	ldr	r2, [pc, #108]	; 3c64c <blkid_probe_get_size@plt+0x35134>
   3c5dc:	add	r3, pc, r3
   3c5e0:	ldr	r1, [pc, #104]	; 3c650 <blkid_probe_get_size@plt+0x35138>
   3c5e4:	add	r3, r3, #512	; 0x200
   3c5e8:	str	r3, [sp]
   3c5ec:	mov	r0, r6
   3c5f0:	ldr	r3, [pc, #92]	; 3c654 <blkid_probe_get_size@plt+0x3513c>
   3c5f4:	add	r2, pc, r2
   3c5f8:	add	r1, pc, r1
   3c5fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c600:	bl	6fb4 <__stack_chk_fail@plt>
   3c604:	ldr	r3, [pc, #76]	; 3c658 <blkid_probe_get_size@plt+0x35140>
   3c608:	ldr	r2, [pc, #76]	; 3c65c <blkid_probe_get_size@plt+0x35144>
   3c60c:	add	r3, pc, r3
   3c610:	ldr	r1, [pc, #72]	; 3c660 <blkid_probe_get_size@plt+0x35148>
   3c614:	add	r3, r3, #512	; 0x200
   3c618:	str	r3, [sp]
   3c61c:	mov	r0, r7
   3c620:	ldr	r3, [pc, #44]	; 3c654 <blkid_probe_get_size@plt+0x3513c>
   3c624:	add	r2, pc, r2
   3c628:	add	r1, pc, r1
   3c62c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c630:	andeq	fp, r5, r0, asr #13
   3c634:	andeq	r0, r0, ip, lsr r4
   3c638:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   3c63c:	andeq	r2, r3, r0, lsr #8
   3c640:	andeq	r3, r3, r8, asr #5
   3c644:	andeq	r3, r3, r0, ror #5
   3c648:	strdeq	r2, [r3], -r4
   3c64c:	muleq	r3, ip, r2
   3c650:	strdeq	r3, [r3], -r0
   3c654:	muleq	r0, lr, r1
   3c658:	andeq	r2, r3, r4, asr #7
   3c65c:	andeq	r3, r3, ip, ror #4
   3c660:	muleq	r3, r4, r2
   3c664:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c668:	subs	r4, r0, #0
   3c66c:	beq	3c680 <blkid_probe_get_size@plt+0x35168>
   3c670:	ldrb	r5, [r4]
   3c674:	cmp	r5, #0
   3c678:	bne	3c688 <blkid_probe_get_size@plt+0x35170>
   3c67c:	mov	r4, #0
   3c680:	mov	r0, r4
   3c684:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c688:	mov	r7, r1
   3c68c:	bl	723c <strlen@plt>
   3c690:	mov	r8, r4
   3c694:	cmp	r0, #255	; 0xff
   3c698:	bhi	3c67c <blkid_probe_get_size@plt+0x35164>
   3c69c:	mov	r1, #46	; 0x2e
   3c6a0:	mov	r0, r8
   3c6a4:	bl	7410 <strrchr@plt>
   3c6a8:	cmp	r0, #0
   3c6ac:	sub	r4, r8, r0
   3c6b0:	clz	r4, r4
   3c6b4:	lsr	r4, r4, #5
   3c6b8:	moveq	r4, #1
   3c6bc:	cmp	r4, #0
   3c6c0:	mov	r9, r0
   3c6c4:	bne	3c67c <blkid_probe_get_size@plt+0x35164>
   3c6c8:	ldr	r0, [pc, #248]	; 3c7c8 <blkid_probe_get_size@plt+0x352b0>
   3c6cc:	add	r2, r9, #1
   3c6d0:	add	r0, pc, r0
   3c6d4:	add	r0, r0, #328	; 0x148
   3c6d8:	mov	r1, #11
   3c6dc:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   3c6e0:	cmp	r0, #0
   3c6e4:	blt	3c680 <blkid_probe_get_size@plt+0x35168>
   3c6e8:	cmp	r8, r9
   3c6ec:	bcs	3c7b8 <blkid_probe_get_size@plt+0x352a0>
   3c6f0:	ldr	sl, [pc, #212]	; 3c7cc <blkid_probe_get_size@plt+0x352b4>
   3c6f4:	mov	r6, r8
   3c6f8:	sub	fp, r9, #1
   3c6fc:	mov	r3, r4
   3c700:	add	sl, pc, sl
   3c704:	b	3c70c <blkid_probe_get_size@plt+0x351f4>
   3c708:	ldrb	r5, [r6, #1]!
   3c70c:	cmp	r3, #0
   3c710:	cmpeq	r5, #64	; 0x40
   3c714:	mov	r1, r5
   3c718:	mov	r0, sl
   3c71c:	moveq	r5, r6
   3c720:	movne	r5, r3
   3c724:	bl	74c4 <strchr@plt>
   3c728:	mov	r3, r5
   3c72c:	cmp	r0, #0
   3c730:	beq	3c680 <blkid_probe_get_size@plt+0x35168>
   3c734:	cmp	fp, r6
   3c738:	bne	3c708 <blkid_probe_get_size@plt+0x351f0>
   3c73c:	cmp	r8, r5
   3c740:	beq	3c680 <blkid_probe_get_size@plt+0x35168>
   3c744:	tst	r7, #1
   3c748:	beq	3c788 <blkid_probe_get_size@plt+0x35270>
   3c74c:	cmp	r5, #0
   3c750:	beq	3c7c0 <blkid_probe_get_size@plt+0x352a8>
   3c754:	tst	r7, #2
   3c758:	lsreq	r7, r7, #2
   3c75c:	andeq	r7, r7, #1
   3c760:	beq	3c7a8 <blkid_probe_get_size@plt+0x35290>
   3c764:	add	r5, r5, #1
   3c768:	cmp	r9, r5
   3c76c:	bhi	3c7c0 <blkid_probe_get_size@plt+0x352a8>
   3c770:	tst	r7, #4
   3c774:	beq	3c680 <blkid_probe_get_size@plt+0x35168>
   3c778:	sub	r4, r9, r5
   3c77c:	clz	r4, r4
   3c780:	lsr	r4, r4, #5
   3c784:	b	3c680 <blkid_probe_get_size@plt+0x35168>
   3c788:	tst	r7, #2
   3c78c:	beq	3c79c <blkid_probe_get_size@plt+0x35284>
   3c790:	cmp	r5, #0
   3c794:	bne	3c764 <blkid_probe_get_size@plt+0x3524c>
   3c798:	b	3c680 <blkid_probe_get_size@plt+0x35168>
   3c79c:	adds	r3, r5, #0
   3c7a0:	movne	r3, #1
   3c7a4:	and	r7, r3, r7, lsr #2
   3c7a8:	cmp	r7, #0
   3c7ac:	beq	3c680 <blkid_probe_get_size@plt+0x35168>
   3c7b0:	add	r5, r5, #1
   3c7b4:	b	3c778 <blkid_probe_get_size@plt+0x35260>
   3c7b8:	and	r4, r7, #1
   3c7bc:	b	3c680 <blkid_probe_get_size@plt+0x35168>
   3c7c0:	mov	r4, #1
   3c7c4:	b	3c680 <blkid_probe_get_size@plt+0x35168>
   3c7c8:	andeq	sp, r4, r0, ror r6
   3c7cc:	andeq	r3, r3, r8, lsl #4
   3c7d0:	ldr	r2, [pc, #44]	; 3c804 <blkid_probe_get_size@plt+0x352ec>
   3c7d4:	push	{lr}		; (str lr, [sp, #-4]!)
   3c7d8:	add	r2, pc, r2
   3c7dc:	sub	sp, sp, #12
   3c7e0:	add	r2, r2, #520	; 0x208
   3c7e4:	str	r2, [sp]
   3c7e8:	ldr	r1, [pc, #24]	; 3c808 <blkid_probe_get_size@plt+0x352f0>
   3c7ec:	ldr	r2, [pc, #24]	; 3c80c <blkid_probe_get_size@plt+0x352f4>
   3c7f0:	mov	r3, #231	; 0xe7
   3c7f4:	add	r2, pc, r2
   3c7f8:	add	r1, pc, r1
   3c7fc:	mov	r0, #0
   3c800:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c804:	strdeq	r2, [r3], -r8
   3c808:	andeq	r9, r3, r4, asr #18
   3c80c:	andeq	r3, r3, ip, asr r1
   3c810:	ldr	r3, [pc, #164]	; 3c8bc <blkid_probe_get_size@plt+0x353a4>
   3c814:	ldr	ip, [pc, #164]	; 3c8c0 <blkid_probe_get_size@plt+0x353a8>
   3c818:	add	r3, pc, r3
   3c81c:	push	{r4, r5, lr}
   3c820:	sub	sp, sp, #28
   3c824:	ldr	r5, [r3, ip]
   3c828:	orr	r1, r0, #524288	; 0x80000
   3c82c:	mov	r2, #0
   3c830:	ldr	r3, [r5]
   3c834:	mov	r0, #1
   3c838:	str	r3, [sp, #20]
   3c83c:	bl	6fd8 <socket@plt>
   3c840:	cmp	r0, #0
   3c844:	blt	3c8a8 <blkid_probe_get_size@plt+0x35390>
   3c848:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   3c84c:	mov	r4, r0
   3c850:	bl	47098 <blkid_probe_get_size@plt+0x3fb80>
   3c854:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   3c858:	mov	r1, #1
   3c85c:	cmp	r0, #1
   3c860:	moveq	r2, #0
   3c864:	ldreq	r3, [pc, #88]	; 3c8c4 <blkid_probe_get_size@plt+0x353ac>
   3c868:	movne	r2, #10
   3c86c:	movne	r3, #0
   3c870:	mov	r0, r4
   3c874:	strd	r2, [sp, #12]
   3c878:	mov	r3, #8
   3c87c:	str	r3, [sp]
   3c880:	mov	r2, #21
   3c884:	add	r3, sp, #12
   3c888:	bl	70b0 <setsockopt@plt>
   3c88c:	ldr	r2, [sp, #20]
   3c890:	ldr	r3, [r5]
   3c894:	mov	r0, r4
   3c898:	cmp	r2, r3
   3c89c:	bne	3c8b8 <blkid_probe_get_size@plt+0x353a0>
   3c8a0:	add	sp, sp, #28
   3c8a4:	pop	{r4, r5, pc}
   3c8a8:	bl	732c <__errno_location@plt>
   3c8ac:	ldr	r4, [r0]
   3c8b0:	rsb	r4, r4, #0
   3c8b4:	b	3c88c <blkid_probe_get_size@plt+0x35374>
   3c8b8:	bl	6fb4 <__stack_chk_fail@plt>
   3c8bc:	andeq	fp, r5, r0, asr r3
   3c8c0:	andeq	r0, r0, ip, lsr r4
   3c8c4:	andeq	r2, r0, r0, lsl r7
   3c8c8:	push	{r4, r5, r6, lr}
   3c8cc:	mov	r0, #2
   3c8d0:	bl	3c810 <blkid_probe_get_size@plt+0x352f8>
   3c8d4:	ldr	r6, [pc, #124]	; 3c958 <blkid_probe_get_size@plt+0x35440>
   3c8d8:	add	r6, pc, r6
   3c8dc:	subs	r4, r0, #0
   3c8e0:	str	r0, [r6]
   3c8e4:	blt	3c950 <blkid_probe_get_size@plt+0x35438>
   3c8e8:	ldr	r5, [pc, #108]	; 3c95c <blkid_probe_get_size@plt+0x35444>
   3c8ec:	mov	r1, #108	; 0x6c
   3c8f0:	add	r5, pc, r5
   3c8f4:	add	r5, r5, #536	; 0x218
   3c8f8:	add	r0, r5, #2
   3c8fc:	bl	69cc <strnlen@plt>
   3c900:	mov	r1, r5
   3c904:	add	r2, r0, #3
   3c908:	mov	r0, r4
   3c90c:	bl	7134 <connect@plt>
   3c910:	cmp	r0, #0
   3c914:	movge	r4, #0
   3c918:	blt	3c924 <blkid_probe_get_size@plt+0x3540c>
   3c91c:	mov	r0, r4
   3c920:	pop	{r4, r5, r6, pc}
   3c924:	bl	732c <__errno_location@plt>
   3c928:	ldr	r3, [r6]
   3c92c:	ldr	r4, [r0]
   3c930:	rsb	r4, r4, #0
   3c934:	mov	r0, r3
   3c938:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3c93c:	ldr	r3, [pc, #28]	; 3c960 <blkid_probe_get_size@plt+0x35448>
   3c940:	add	r3, pc, r3
   3c944:	str	r0, [r3]
   3c948:	mov	r0, r4
   3c94c:	pop	{r4, r5, r6, pc}
   3c950:	mov	r3, r4
   3c954:	b	3c934 <blkid_probe_get_size@plt+0x3541c>
   3c958:	andeq	fp, r5, r0, asr r8
   3c95c:	andeq	r2, r3, r0, ror #1
   3c960:	andeq	fp, r5, r8, ror #15
   3c964:	ldr	r2, [pc, #44]	; 3c998 <blkid_probe_get_size@plt+0x35480>
   3c968:	push	{lr}		; (str lr, [sp, #-4]!)
   3c96c:	add	r2, pc, r2
   3c970:	sub	sp, sp, #12
   3c974:	add	r2, r2, #664	; 0x298
   3c978:	str	r2, [sp]
   3c97c:	ldr	r1, [pc, #24]	; 3c99c <blkid_probe_get_size@plt+0x35484>
   3c980:	ldr	r2, [pc, #24]	; 3c9a0 <blkid_probe_get_size@plt+0x35488>
   3c984:	mov	r3, #201	; 0xc9
   3c988:	add	r2, pc, r2
   3c98c:	add	r1, pc, r1
   3c990:	mov	r0, #0
   3c994:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3c998:	andeq	r2, r3, r4, rrx
   3c99c:	andeq	r9, r3, r4, lsr #1
   3c9a0:	andeq	r2, r3, r8, asr #31
   3c9a4:	subs	r3, r0, #0
   3c9a8:	push	{r4, lr}
   3c9ac:	sub	sp, sp, #8
   3c9b0:	beq	3c9fc <blkid_probe_get_size@plt+0x354e4>
   3c9b4:	ldr	r4, [r3]
   3c9b8:	cmp	r4, #0
   3c9bc:	blt	3c9ec <blkid_probe_get_size@plt+0x354d4>
   3c9c0:	ldr	r0, [r3, #4]
   3c9c4:	cmp	r0, #0
   3c9c8:	blt	3c9ec <blkid_probe_get_size@plt+0x354d4>
   3c9cc:	mov	r2, #1000	; 0x3e8
   3c9d0:	mov	r3, #0
   3c9d4:	asr	r1, r0, #31
   3c9d8:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   3c9dc:	ldr	r3, [pc, #64]	; 3ca24 <blkid_probe_get_size@plt+0x3550c>
   3c9e0:	smlal	r0, r1, r3, r4
   3c9e4:	add	sp, sp, #8
   3c9e8:	pop	{r4, pc}
   3c9ec:	mvn	r0, #0
   3c9f0:	mvn	r1, #0
   3c9f4:	add	sp, sp, #8
   3c9f8:	pop	{r4, pc}
   3c9fc:	ldr	r2, [pc, #36]	; 3ca28 <blkid_probe_get_size@plt+0x35510>
   3ca00:	ldr	r1, [pc, #36]	; 3ca2c <blkid_probe_get_size@plt+0x35514>
   3ca04:	add	r2, pc, r2
   3ca08:	add	r2, r2, #680	; 0x2a8
   3ca0c:	str	r2, [sp]
   3ca10:	ldr	r2, [pc, #24]	; 3ca30 <blkid_probe_get_size@plt+0x35518>
   3ca14:	mov	r3, #175	; 0xaf
   3ca18:	add	r2, pc, r2
   3ca1c:	add	r1, pc, r1
   3ca20:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ca24:	andeq	r4, pc, r0, asr #4
   3ca28:	andeq	r1, r3, ip, asr #31
   3ca2c:	andeq	r9, r3, r4, lsl r0
   3ca30:	andeq	r2, r3, r8, lsr pc
   3ca34:	ldr	r3, [pc, #124]	; 3cab8 <blkid_probe_get_size@plt+0x355a0>
   3ca38:	ldr	r2, [pc, #124]	; 3cabc <blkid_probe_get_size@plt+0x355a4>
   3ca3c:	add	r3, pc, r3
   3ca40:	push	{r4, r5, lr}
   3ca44:	sub	sp, sp, #28
   3ca48:	ldr	r4, [r3, r2]
   3ca4c:	add	r5, sp, #12
   3ca50:	mov	r1, r5
   3ca54:	ldr	r3, [r4]
   3ca58:	str	r3, [sp, #20]
   3ca5c:	bl	6e88 <clock_gettime@plt>
   3ca60:	cmp	r0, #0
   3ca64:	bne	3ca88 <blkid_probe_get_size@plt+0x35570>
   3ca68:	mov	r0, r5
   3ca6c:	bl	3c9a4 <blkid_probe_get_size@plt+0x3548c>
   3ca70:	ldr	r2, [sp, #20]
   3ca74:	ldr	r3, [r4]
   3ca78:	cmp	r2, r3
   3ca7c:	bne	3cab4 <blkid_probe_get_size@plt+0x3559c>
   3ca80:	add	sp, sp, #28
   3ca84:	pop	{r4, r5, pc}
   3ca88:	ldr	r2, [pc, #48]	; 3cac0 <blkid_probe_get_size@plt+0x355a8>
   3ca8c:	ldr	r1, [pc, #48]	; 3cac4 <blkid_probe_get_size@plt+0x355ac>
   3ca90:	add	r2, pc, r2
   3ca94:	add	r2, r2, #696	; 0x2b8
   3ca98:	str	r2, [sp]
   3ca9c:	ldr	r2, [pc, #36]	; 3cac8 <blkid_probe_get_size@plt+0x355b0>
   3caa0:	mov	r3, #55	; 0x37
   3caa4:	add	r2, pc, r2
   3caa8:	add	r1, pc, r1
   3caac:	mov	r0, #0
   3cab0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3cab4:	bl	6fb4 <__stack_chk_fail@plt>
   3cab8:	andeq	fp, r5, ip, lsr #2
   3cabc:	andeq	r0, r0, ip, lsr r4
   3cac0:	andeq	r1, r3, r0, asr #30
   3cac4:	andeq	r2, r3, r4, asr #29
   3cac8:	andeq	r2, r3, ip, lsr #29
   3cacc:	ldr	r3, [pc, #164]	; 3cb78 <blkid_probe_get_size@plt+0x35660>
   3cad0:	push	{r4, r5, r6, r7, r8, lr}
   3cad4:	add	r3, pc, r3
   3cad8:	mov	r4, r0
   3cadc:	ldrb	r3, [r3, #2049]	; 0x801
   3cae0:	mov	r5, r1
   3cae4:	cmp	r3, #0
   3cae8:	beq	3cb34 <blkid_probe_get_size@plt+0x3561c>
   3caec:	add	r6, r4, r5
   3caf0:	cmp	r4, r6
   3caf4:	popcs	{r4, r5, r6, r7, r8, pc}
   3caf8:	mov	r7, r4
   3cafc:	bl	6954 <rand@plt>
   3cb00:	sub	r3, r4, r7
   3cb04:	add	r2, r3, #2
   3cb08:	cmp	r2, r5
   3cb0c:	add	r3, r3, #1
   3cb10:	lsr	r1, r0, #16
   3cb14:	strbcc	r1, [r4, #2]
   3cb18:	lsr	r2, r0, #8
   3cb1c:	cmp	r3, r5
   3cb20:	strbcc	r2, [r4, #1]
   3cb24:	strb	r0, [r4], #3
   3cb28:	cmp	r4, r6
   3cb2c:	bcc	3cafc <blkid_probe_get_size@plt+0x355e4>
   3cb30:	pop	{r4, r5, r6, r7, r8, pc}
   3cb34:	mov	r0, #25
   3cb38:	bl	73b0 <getauxval@plt>
   3cb3c:	subs	r7, r0, #0
   3cb40:	mov	r0, #0
   3cb44:	ldrne	r7, [r7]
   3cb48:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   3cb4c:	mov	r6, r0
   3cb50:	mov	r0, #224	; 0xe0
   3cb54:	bl	6b94 <syscall@plt>
   3cb58:	eor	r0, r0, r6
   3cb5c:	eor	r0, r0, r7
   3cb60:	bl	74ac <srand@plt>
   3cb64:	ldr	r3, [pc, #16]	; 3cb7c <blkid_probe_get_size@plt+0x35664>
   3cb68:	mov	r2, #1
   3cb6c:	add	r3, pc, r3
   3cb70:	strb	r2, [r3, #2049]	; 0x801
   3cb74:	b	3caec <blkid_probe_get_size@plt+0x355d4>
   3cb78:	andeq	fp, r5, r8, ror #22
   3cb7c:	ldrdeq	fp, [r5], -r0
   3cb80:	push	{r2, r3}
   3cb84:	ldr	r3, [pc, #136]	; 3cc14 <blkid_probe_get_size@plt+0x356fc>
   3cb88:	ldr	r2, [pc, #136]	; 3cc18 <blkid_probe_get_size@plt+0x35700>
   3cb8c:	add	r3, pc, r3
   3cb90:	push	{r4, r5, r6, lr}
   3cb94:	sub	sp, sp, #16
   3cb98:	ldr	r4, [r3, r2]
   3cb9c:	subs	r5, r1, #0
   3cba0:	ldr	r2, [sp, #32]
   3cba4:	ldr	r3, [r4]
   3cba8:	str	r3, [sp, #12]
   3cbac:	bne	3cbd4 <blkid_probe_get_size@plt+0x356bc>
   3cbb0:	ldr	r2, [sp, #12]
   3cbb4:	ldr	r3, [r4]
   3cbb8:	mov	r0, r5
   3cbbc:	cmp	r2, r3
   3cbc0:	bne	3cc10 <blkid_probe_get_size@plt+0x356f8>
   3cbc4:	add	sp, sp, #16
   3cbc8:	pop	{r4, r5, r6, lr}
   3cbcc:	add	sp, sp, #8
   3cbd0:	bx	lr
   3cbd4:	add	ip, sp, #36	; 0x24
   3cbd8:	mov	r6, r0
   3cbdc:	mvn	r3, #0
   3cbe0:	ldr	r0, [r0]
   3cbe4:	stm	sp, {r2, ip}
   3cbe8:	mov	r2, #1
   3cbec:	str	ip, [sp, #8]
   3cbf0:	bl	6b04 <__vsnprintf_chk@plt>
   3cbf4:	cmp	r5, r0
   3cbf8:	subgt	r5, r5, r0
   3cbfc:	ldrgt	r3, [r6]
   3cc00:	movle	r5, #0
   3cc04:	addgt	r0, r3, r0
   3cc08:	strgt	r0, [r6]
   3cc0c:	b	3cbb0 <blkid_probe_get_size@plt+0x35698>
   3cc10:	bl	6fb4 <__stack_chk_fail@plt>
   3cc14:	ldrdeq	sl, [r5], -ip
   3cc18:	andeq	r0, r0, ip, lsr r4
   3cc1c:	push	{r4, r5, r6, r7, lr}
   3cc20:	subs	r5, r2, #0
   3cc24:	sub	sp, sp, #12
   3cc28:	beq	3ccc8 <blkid_probe_get_size@plt+0x357b0>
   3cc2c:	cmp	r1, #0
   3cc30:	mov	r4, r1
   3cc34:	moveq	r0, r1
   3cc38:	beq	3cc6c <blkid_probe_get_size@plt+0x35754>
   3cc3c:	mov	r6, r0
   3cc40:	mov	r0, r5
   3cc44:	bl	723c <strlen@plt>
   3cc48:	ldr	r3, [r6]
   3cc4c:	cmp	r4, r0
   3cc50:	mov	r7, r0
   3cc54:	bhi	3cc74 <blkid_probe_get_size@plt+0x3575c>
   3cc58:	cmp	r4, #1
   3cc5c:	moveq	r0, #0
   3cc60:	bne	3cca0 <blkid_probe_get_size@plt+0x35788>
   3cc64:	mov	r2, #0
   3cc68:	strb	r2, [r3]
   3cc6c:	add	sp, sp, #12
   3cc70:	pop	{r4, r5, r6, r7, pc}
   3cc74:	cmp	r0, #0
   3cc78:	moveq	r0, r4
   3cc7c:	beq	3cc64 <blkid_probe_get_size@plt+0x3574c>
   3cc80:	mov	r0, r3
   3cc84:	mov	r1, r5
   3cc88:	mov	r2, r7
   3cc8c:	bl	72c0 <mempcpy@plt>
   3cc90:	mov	r3, r0
   3cc94:	str	r0, [r6]
   3cc98:	sub	r0, r4, r7
   3cc9c:	b	3cc64 <blkid_probe_get_size@plt+0x3574c>
   3cca0:	sub	r2, r4, #1
   3cca4:	mov	r0, r3
   3cca8:	mov	r1, r5
   3ccac:	bl	72c0 <mempcpy@plt>
   3ccb0:	mov	r2, #0
   3ccb4:	mov	r3, r0
   3ccb8:	str	r0, [r6]
   3ccbc:	mov	r0, #0
   3ccc0:	strb	r2, [r3]
   3ccc4:	b	3cc6c <blkid_probe_get_size@plt+0x35754>
   3ccc8:	ldr	r3, [pc, #36]	; 3ccf4 <blkid_probe_get_size@plt+0x357dc>
   3cccc:	ldr	r2, [pc, #36]	; 3ccf8 <blkid_probe_get_size@plt+0x357e0>
   3ccd0:	add	r3, pc, r3
   3ccd4:	ldr	r1, [pc, #32]	; 3ccfc <blkid_probe_get_size@plt+0x357e4>
   3ccd8:	add	r3, r3, #700	; 0x2bc
   3ccdc:	str	r3, [sp]
   3cce0:	mov	r0, r5
   3cce4:	mov	r3, #24
   3cce8:	add	r2, pc, r2
   3ccec:	add	r1, pc, r1
   3ccf0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ccf4:	andeq	r1, r3, r0, lsl #26
   3ccf8:			; <UNDEFINED> instruction: 0x00032cb4
   3ccfc:	andeq	r8, r2, r4, asr #8
   3cd00:	push	{r2, r3}
   3cd04:	subs	ip, r0, #0
   3cd08:	ldr	r3, [pc, #212]	; 3cde4 <blkid_probe_get_size@plt+0x358cc>
   3cd0c:	ldr	r2, [pc, #212]	; 3cde8 <blkid_probe_get_size@plt+0x358d0>
   3cd10:	add	r3, pc, r3
   3cd14:	push	{r4, r5, r6, lr}
   3cd18:	sub	sp, sp, #24
   3cd1c:	ldr	r6, [r3, r2]
   3cd20:	ldr	r2, [sp, #40]	; 0x28
   3cd24:	ldr	r3, [r6]
   3cd28:	str	r3, [sp, #20]
   3cd2c:	beq	3cd8c <blkid_probe_get_size@plt+0x35874>
   3cd30:	cmp	r2, #0
   3cd34:	beq	3cdb4 <blkid_probe_get_size@plt+0x3589c>
   3cd38:	add	r3, sp, #44	; 0x2c
   3cd3c:	add	r5, sp, #24
   3cd40:	mov	r4, r3
   3cd44:	str	r3, [sp, #16]
   3cd48:	str	ip, [r5, #-12]!
   3cd4c:	mov	r0, r5
   3cd50:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   3cd54:	add	r4, r4, #4
   3cd58:	ldr	r2, [r4, #-4]
   3cd5c:	str	r4, [sp, #16]
   3cd60:	cmp	r2, #0
   3cd64:	mov	r1, r0
   3cd68:	bne	3cd4c <blkid_probe_get_size@plt+0x35834>
   3cd6c:	ldr	r2, [sp, #20]
   3cd70:	ldr	r3, [r6]
   3cd74:	cmp	r2, r3
   3cd78:	bne	3cde0 <blkid_probe_get_size@plt+0x358c8>
   3cd7c:	add	sp, sp, #24
   3cd80:	pop	{r4, r5, r6, lr}
   3cd84:	add	sp, sp, #8
   3cd88:	bx	lr
   3cd8c:	ldr	r2, [pc, #88]	; 3cdec <blkid_probe_get_size@plt+0x358d4>
   3cd90:	ldr	r1, [pc, #88]	; 3cdf0 <blkid_probe_get_size@plt+0x358d8>
   3cd94:	add	r2, pc, r2
   3cd98:	add	r2, r2, #708	; 0x2c4
   3cd9c:	str	r2, [sp]
   3cda0:	ldr	r2, [pc, #76]	; 3cdf4 <blkid_probe_get_size@plt+0x358dc>
   3cda4:	mov	r3, #93	; 0x5d
   3cda8:	add	r2, pc, r2
   3cdac:	add	r1, pc, r1
   3cdb0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3cdb4:	ldr	r3, [pc, #60]	; 3cdf8 <blkid_probe_get_size@plt+0x358e0>
   3cdb8:	mov	r0, r2
   3cdbc:	add	r3, pc, r3
   3cdc0:	ldr	r2, [pc, #52]	; 3cdfc <blkid_probe_get_size@plt+0x358e4>
   3cdc4:	ldr	r1, [pc, #52]	; 3ce00 <blkid_probe_get_size@plt+0x358e8>
   3cdc8:	add	r3, r3, #708	; 0x2c4
   3cdcc:	str	r3, [sp]
   3cdd0:	add	r2, pc, r2
   3cdd4:	mov	r3, #94	; 0x5e
   3cdd8:	add	r1, pc, r1
   3cddc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3cde0:	bl	6fb4 <__stack_chk_fail@plt>
   3cde4:	andeq	sl, r5, r8, asr lr
   3cde8:	andeq	r0, r0, ip, lsr r4
   3cdec:	andeq	r1, r3, ip, lsr ip
   3cdf0:	andeq	r2, r3, r8, lsl #24
   3cdf4:	strdeq	r2, [r3], -r4
   3cdf8:	andeq	r1, r3, r4, lsl ip
   3cdfc:	andeq	r2, r3, ip, asr #23
   3ce00:	andeq	r8, r2, r8, asr r3
   3ce04:	ldr	r3, [pc, #120]	; 3ce84 <blkid_probe_get_size@plt+0x3596c>
   3ce08:	ldr	ip, [pc, #120]	; 3ce88 <blkid_probe_get_size@plt+0x35970>
   3ce0c:	add	r3, pc, r3
   3ce10:	push	{r4, lr}
   3ce14:	sub	sp, sp, #16
   3ce18:	ldr	r4, [r3, ip]
   3ce1c:	subs	lr, r2, #0
   3ce20:	ldr	r3, [r4]
   3ce24:	str	r3, [sp, #12]
   3ce28:	beq	3ce54 <blkid_probe_get_size@plt+0x3593c>
   3ce2c:	add	r3, sp, #16
   3ce30:	str	r0, [r3, #-8]!
   3ce34:	mov	r0, r3
   3ce38:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   3ce3c:	ldr	r2, [sp, #12]
   3ce40:	ldr	r3, [r4]
   3ce44:	cmp	r2, r3
   3ce48:	bne	3ce80 <blkid_probe_get_size@plt+0x35968>
   3ce4c:	add	sp, sp, #16
   3ce50:	pop	{r4, pc}
   3ce54:	ldr	r3, [pc, #48]	; 3ce8c <blkid_probe_get_size@plt+0x35974>
   3ce58:	ldr	r2, [pc, #48]	; 3ce90 <blkid_probe_get_size@plt+0x35978>
   3ce5c:	add	r3, pc, r3
   3ce60:	ldr	r1, [pc, #44]	; 3ce94 <blkid_probe_get_size@plt+0x3597c>
   3ce64:	add	r3, r3, #720	; 0x2d0
   3ce68:	str	r3, [sp]
   3ce6c:	mov	r0, lr
   3ce70:	mov	r3, #83	; 0x53
   3ce74:	add	r2, pc, r2
   3ce78:	add	r1, pc, r1
   3ce7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ce80:	bl	6fb4 <__stack_chk_fail@plt>
   3ce84:	andeq	sl, r5, ip, asr sp
   3ce88:	andeq	r0, r0, ip, lsr r4
   3ce8c:	andeq	r1, r3, r4, ror fp
   3ce90:	andeq	r2, r3, r8, lsr #22
   3ce94:			; <UNDEFINED> instruction: 0x000282b8
   3ce98:	ldr	ip, [pc, #684]	; 3d14c <blkid_probe_get_size@plt+0x35c34>
   3ce9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cea0:	add	ip, pc, ip
   3cea4:	ldr	lr, [pc, #676]	; 3d150 <blkid_probe_get_size@plt+0x35c38>
   3cea8:	mov	r6, r1
   3ceac:	mov	r1, ip
   3ceb0:	ldr	r7, [ip, lr]
   3ceb4:	ldrb	ip, [r0]
   3ceb8:	sub	sp, sp, #1056	; 0x420
   3cebc:	sub	sp, sp, #12
   3cec0:	mov	r8, r3
   3cec4:	ldr	r3, [r7]
   3cec8:	mov	r5, #0
   3cecc:	cmp	ip, #91	; 0x5b
   3ced0:	str	r3, [sp, #1060]	; 0x424
   3ced4:	str	r5, [sp, #32]
   3ced8:	bne	3d024 <blkid_probe_get_size@plt+0x35b0c>
   3cedc:	add	sl, sp, #40	; 0x28
   3cee0:	mov	r1, #1024	; 0x400
   3cee4:	mov	r9, r2
   3cee8:	mov	r2, r0
   3ceec:	sub	r0, sl, #4
   3cef0:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   3cef4:	sub	r0, sl, #3
   3cef8:	mov	r1, #47	; 0x2f
   3cefc:	bl	74c4 <strchr@plt>
   3cf00:	subs	r4, r0, #0
   3cf04:	beq	3d0a8 <blkid_probe_get_size@plt+0x35b90>
   3cf08:	strb	r5, [r4], #1
   3cf0c:	mov	r1, #93	; 0x5d
   3cf10:	mov	r0, r4
   3cf14:	bl	74c4 <strchr@plt>
   3cf18:	cmp	r0, #0
   3cf1c:	beq	3d0a8 <blkid_probe_get_size@plt+0x35b90>
   3cf20:	ldrb	r3, [r0, #1]
   3cf24:	strb	r5, [r0]
   3cf28:	cmp	r3, #47	; 0x2f
   3cf2c:	addne	r5, r0, #1
   3cf30:	ldrbeq	r3, [r0, #2]
   3cf34:	addeq	r5, r0, #2
   3cf38:	cmp	r3, #0
   3cf3c:	bne	3cfa8 <blkid_probe_get_size@plt+0x35a90>
   3cf40:	cmp	r8, #0
   3cf44:	bne	3d0a8 <blkid_probe_get_size@plt+0x35b90>
   3cf48:	mov	r2, r4
   3cf4c:	sub	r1, sl, #3
   3cf50:	sub	r0, sl, #8
   3cf54:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   3cf58:	subs	fp, r0, #0
   3cf5c:	blt	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3cf60:	sub	r1, sl, #12
   3cf64:	ldr	r0, [sp, #32]
   3cf68:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   3cf6c:	subs	fp, r0, #0
   3cf70:	ldrge	r2, [sp, #28]
   3cf74:	bge	3d02c <blkid_probe_get_size@plt+0x35b14>
   3cf78:	ldr	r0, [sp, #32]
   3cf7c:	cmp	r0, #0
   3cf80:	beq	3cf88 <blkid_probe_get_size@plt+0x35a70>
   3cf84:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   3cf88:	ldr	r2, [sp, #1060]	; 0x424
   3cf8c:	ldr	r3, [r7]
   3cf90:	mov	r0, fp
   3cf94:	cmp	r2, r3
   3cf98:	bne	3d148 <blkid_probe_get_size@plt+0x35c30>
   3cf9c:	add	sp, sp, #1056	; 0x420
   3cfa0:	add	sp, sp, #12
   3cfa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cfa8:	mov	r2, r4
   3cfac:	sub	r1, sl, #3
   3cfb0:	sub	r0, sl, #8
   3cfb4:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   3cfb8:	subs	fp, r0, #0
   3cfbc:	blt	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3cfc0:	cmp	r8, #0
   3cfc4:	ldr	r0, [sp, #32]
   3cfc8:	beq	3d0fc <blkid_probe_get_size@plt+0x35be4>
   3cfcc:	sub	r2, sl, #12
   3cfd0:	mov	r1, r5
   3cfd4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   3cfd8:	adds	r3, r0, #2
   3cfdc:	movne	r3, #1
   3cfe0:	ands	r3, r3, r0, lsr #31
   3cfe4:	mov	fp, r0
   3cfe8:	bne	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3cfec:	cmn	r0, #2
   3cff0:	strbeq	r3, [r6]
   3cff4:	beq	3d008 <blkid_probe_get_size@plt+0x35af0>
   3cff8:	mov	r1, r9
   3cffc:	ldr	r2, [sp, #28]
   3d000:	mov	r0, r6
   3d004:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   3d008:	ldr	r3, [pc, #324]	; 3d154 <blkid_probe_get_size@plt+0x35c3c>
   3d00c:	add	r3, pc, r3
   3d010:	ldr	r3, [r3]
   3d014:	cmp	r3, #6
   3d018:	bgt	3d0b0 <blkid_probe_get_size@plt+0x35b98>
   3d01c:	mov	fp, #0
   3d020:	b	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3d024:	mvn	fp, #21
   3d028:	b	3cf88 <blkid_probe_get_size@plt+0x35a70>
   3d02c:	mov	r3, #0
   3d030:	str	r3, [sp, #4]
   3d034:	str	r3, [sp]
   3d038:	mov	r1, r9
   3d03c:	mov	r0, r6
   3d040:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   3d044:	ldr	r3, [pc, #268]	; 3d158 <blkid_probe_get_size@plt+0x35c40>
   3d048:	add	r3, pc, r3
   3d04c:	ldr	r3, [r3]
   3d050:	cmp	r3, #6
   3d054:	ble	3d01c <blkid_probe_get_size@plt+0x35b04>
   3d058:	ldr	r5, [pc, #252]	; 3d15c <blkid_probe_get_size@plt+0x35c44>
   3d05c:	add	r5, pc, r5
   3d060:	ldr	r2, [pc, #248]	; 3d160 <blkid_probe_get_size@plt+0x35c48>
   3d064:	ldr	r3, [pc, #248]	; 3d164 <blkid_probe_get_size@plt+0x35c4c>
   3d068:	add	r2, pc, r2
   3d06c:	str	r2, [sp, #4]
   3d070:	add	r3, pc, r3
   3d074:	ldr	r2, [pc, #236]	; 3d168 <blkid_probe_get_size@plt+0x35c50>
   3d078:	sub	sl, sl, #3
   3d07c:	add	r3, r3, #728	; 0x2d8
   3d080:	str	r3, [sp]
   3d084:	str	sl, [sp, #8]
   3d088:	str	r6, [sp, #20]
   3d08c:	strd	r4, [sp, #12]
   3d090:	mov	r3, #73	; 0x49
   3d094:	add	r2, pc, r2
   3d098:	mov	r1, #0
   3d09c:	mov	r0, #7
   3d0a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3d0a4:	b	3d01c <blkid_probe_get_size@plt+0x35b04>
   3d0a8:	mvn	fp, #21
   3d0ac:	b	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3d0b0:	ldr	r2, [pc, #180]	; 3d16c <blkid_probe_get_size@plt+0x35c54>
   3d0b4:	ldr	r3, [pc, #180]	; 3d170 <blkid_probe_get_size@plt+0x35c58>
   3d0b8:	add	r2, pc, r2
   3d0bc:	str	r2, [sp, #4]
   3d0c0:	add	r3, pc, r3
   3d0c4:	ldr	r2, [pc, #168]	; 3d174 <blkid_probe_get_size@plt+0x35c5c>
   3d0c8:	add	r3, r3, #728	; 0x2d8
   3d0cc:	sub	sl, sl, #3
   3d0d0:	str	r3, [sp]
   3d0d4:	str	sl, [sp, #8]
   3d0d8:	str	r6, [sp, #20]
   3d0dc:	strd	r4, [sp, #12]
   3d0e0:	mov	r3, #66	; 0x42
   3d0e4:	add	r2, pc, r2
   3d0e8:	mov	r1, #0
   3d0ec:	mov	r0, #7
   3d0f0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3d0f4:	mov	fp, #0
   3d0f8:	b	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3d0fc:	sub	r1, sl, #12
   3d100:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   3d104:	subs	fp, r0, #0
   3d108:	blt	3cf78 <blkid_probe_get_size@plt+0x35a60>
   3d10c:	cmp	r5, #0
   3d110:	ldr	r2, [sp, #28]
   3d114:	beq	3d02c <blkid_probe_get_size@plt+0x35b14>
   3d118:	ldr	r3, [pc, #88]	; 3d178 <blkid_probe_get_size@plt+0x35c60>
   3d11c:	stm	sp, {r5, r8}
   3d120:	add	r3, pc, r3
   3d124:	mov	r1, r9
   3d128:	mov	r0, r6
   3d12c:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   3d130:	ldr	r3, [pc, #68]	; 3d17c <blkid_probe_get_size@plt+0x35c64>
   3d134:	add	r3, pc, r3
   3d138:	ldr	r3, [r3]
   3d13c:	cmp	r3, #6
   3d140:	ble	3d01c <blkid_probe_get_size@plt+0x35b04>
   3d144:	b	3d060 <blkid_probe_get_size@plt+0x35b48>
   3d148:	bl	6fb4 <__stack_chk_fail@plt>
   3d14c:	andeq	sl, r5, r8, asr #25
   3d150:	andeq	r0, r0, ip, lsr r4
   3d154:	andeq	fp, r5, r0, lsr r1
   3d158:	strdeq	fp, [r5], -r4
   3d15c:	muleq	r2, r0, r4
   3d160:	andeq	r2, r3, r0, ror r9
   3d164:	andeq	r1, r3, r0, ror #18
   3d168:	andeq	r8, r2, ip, ror r0
   3d16c:	andeq	r2, r3, r4, lsl #18
   3d170:	andeq	r1, r3, r0, lsl r9
   3d174:	andeq	r8, r2, ip, lsr #32
   3d178:	andeq	sl, r3, r0, lsr #29
   3d17c:	andeq	fp, r5, r8
   3d180:	push	{r2, r3}
   3d184:	ldr	r3, [pc, #112]	; 3d1fc <blkid_probe_get_size@plt+0x35ce4>
   3d188:	ldr	r2, [pc, #112]	; 3d200 <blkid_probe_get_size@plt+0x35ce8>
   3d18c:	add	r3, pc, r3
   3d190:	push	{r4, r5, r6, lr}
   3d194:	sub	sp, sp, #8
   3d198:	ldr	r6, [r3, r2]
   3d19c:	add	ip, sp, #28
   3d1a0:	ldr	r2, [sp, #24]
   3d1a4:	mov	r5, r0
   3d1a8:	ldr	r3, [r6]
   3d1ac:	mov	r4, ip
   3d1b0:	str	r3, [sp, #4]
   3d1b4:	str	ip, [sp]
   3d1b8:	mov	r0, r5
   3d1bc:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   3d1c0:	add	r4, r4, #4
   3d1c4:	ldr	r2, [r4, #-4]
   3d1c8:	str	r4, [sp]
   3d1cc:	cmp	r2, #0
   3d1d0:	mov	r1, r0
   3d1d4:	bne	3d1b8 <blkid_probe_get_size@plt+0x35ca0>
   3d1d8:	ldr	r2, [sp, #4]
   3d1dc:	ldr	r3, [r6]
   3d1e0:	cmp	r2, r3
   3d1e4:	bne	3d1f8 <blkid_probe_get_size@plt+0x35ce0>
   3d1e8:	add	sp, sp, #8
   3d1ec:	pop	{r4, r5, r6, lr}
   3d1f0:	add	sp, sp, #8
   3d1f4:	bx	lr
   3d1f8:	bl	6fb4 <__stack_chk_fail@plt>
   3d1fc:	ldrdeq	sl, [r5], -ip
   3d200:	andeq	r0, r0, ip, lsr r4
   3d204:	ldr	r3, [pc, #480]	; 3d3ec <blkid_probe_get_size@plt+0x35ed4>
   3d208:	ldr	ip, [pc, #480]	; 3d3f0 <blkid_probe_get_size@plt+0x35ed8>
   3d20c:	add	r3, pc, r3
   3d210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d214:	sub	sp, sp, #36	; 0x24
   3d218:	ldr	sl, [r3, ip]
   3d21c:	subs	r6, r0, #0
   3d220:	ldr	r3, [sl]
   3d224:	str	r3, [sp, #28]
   3d228:	beq	3d39c <blkid_probe_get_size@plt+0x35e84>
   3d22c:	cmp	r1, #0
   3d230:	mov	r4, r1
   3d234:	mov	r5, r2
   3d238:	beq	3d380 <blkid_probe_get_size@plt+0x35e68>
   3d23c:	mov	r1, r4
   3d240:	mov	r0, r6
   3d244:	bl	6c9c <strspn@plt>
   3d248:	adds	r9, r6, r0
   3d24c:	beq	3d35c <blkid_probe_get_size@plt+0x35e44>
   3d250:	ldrb	r3, [r6, r0]
   3d254:	cmp	r3, #0
   3d258:	beq	3d35c <blkid_probe_get_size@plt+0x35e44>
   3d25c:	add	r6, sp, #20
   3d260:	add	r7, sp, #24
   3d264:	mov	r1, r6
   3d268:	mov	r0, r7
   3d26c:	mov	r3, r5
   3d270:	mov	r2, r4
   3d274:	str	r9, [sp, #24]
   3d278:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   3d27c:	cmp	r0, #0
   3d280:	moveq	r0, #4
   3d284:	beq	3d2c0 <blkid_probe_get_size@plt+0x35da8>
   3d288:	mov	r8, #0
   3d28c:	b	3d294 <blkid_probe_get_size@plt+0x35d7c>
   3d290:	mov	r8, r3
   3d294:	mov	r3, r5
   3d298:	mov	r2, r4
   3d29c:	mov	r1, r6
   3d2a0:	mov	r0, r7
   3d2a4:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   3d2a8:	add	r3, r8, #1
   3d2ac:	cmp	r0, #0
   3d2b0:	bne	3d290 <blkid_probe_get_size@plt+0x35d78>
   3d2b4:	adds	r8, r8, #2
   3d2b8:	moveq	r0, #1
   3d2bc:	bne	3d3d8 <blkid_probe_get_size@plt+0x35ec0>
   3d2c0:	bl	7230 <malloc@plt>
   3d2c4:	subs	fp, r0, #0
   3d2c8:	beq	3d3cc <blkid_probe_get_size@plt+0x35eb4>
   3d2cc:	mov	r3, r5
   3d2d0:	mov	r2, r4
   3d2d4:	mov	r1, r6
   3d2d8:	mov	r0, r7
   3d2dc:	str	r9, [sp, #24]
   3d2e0:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   3d2e4:	cmp	r0, #0
   3d2e8:	beq	3d3c4 <blkid_probe_get_size@plt+0x35eac>
   3d2ec:	sub	r9, fp, #4
   3d2f0:	mov	r8, #0
   3d2f4:	b	3d318 <blkid_probe_get_size@plt+0x35e00>
   3d2f8:	mov	r3, r5
   3d2fc:	mov	r2, r4
   3d300:	mov	r1, r6
   3d304:	mov	r0, r7
   3d308:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   3d30c:	add	r8, r8, #1
   3d310:	cmp	r0, #0
   3d314:	beq	3d38c <blkid_probe_get_size@plt+0x35e74>
   3d318:	ldr	r1, [sp, #20]
   3d31c:	bl	68dc <strndup@plt>
   3d320:	cmp	r0, #0
   3d324:	str	r0, [r9, #4]!
   3d328:	bne	3d2f8 <blkid_probe_get_size@plt+0x35de0>
   3d32c:	str	r0, [sp, #12]
   3d330:	mov	r0, fp
   3d334:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   3d338:	ldr	r3, [sp, #12]
   3d33c:	mov	fp, r3
   3d340:	ldr	r2, [sp, #28]
   3d344:	ldr	r3, [sl]
   3d348:	mov	r0, fp
   3d34c:	cmp	r2, r3
   3d350:	bne	3d3d4 <blkid_probe_get_size@plt+0x35ebc>
   3d354:	add	sp, sp, #36	; 0x24
   3d358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d35c:	ldr	r2, [sp, #28]
   3d360:	ldr	r3, [sl]
   3d364:	cmp	r2, r3
   3d368:	bne	3d3d4 <blkid_probe_get_size@plt+0x35ebc>
   3d36c:	mov	r1, #4
   3d370:	mov	r0, #1
   3d374:	add	sp, sp, #36	; 0x24
   3d378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d37c:	b	7164 <calloc@plt>
   3d380:	ldr	r4, [pc, #108]	; 3d3f4 <blkid_probe_get_size@plt+0x35edc>
   3d384:	add	r4, pc, r4
   3d388:	b	3d23c <blkid_probe_get_size@plt+0x35d24>
   3d38c:	add	r8, fp, r8, lsl #2
   3d390:	mov	r3, #0
   3d394:	str	r3, [r8]
   3d398:	b	3d340 <blkid_probe_get_size@plt+0x35e28>
   3d39c:	ldr	r2, [pc, #84]	; 3d3f8 <blkid_probe_get_size@plt+0x35ee0>
   3d3a0:	ldr	r1, [pc, #84]	; 3d3fc <blkid_probe_get_size@plt+0x35ee4>
   3d3a4:	add	r2, pc, r2
   3d3a8:	add	r2, r2, #756	; 0x2f4
   3d3ac:	str	r2, [sp]
   3d3b0:	ldr	r2, [pc, #72]	; 3d400 <blkid_probe_get_size@plt+0x35ee8>
   3d3b4:	mov	r3, #254	; 0xfe
   3d3b8:	add	r2, pc, r2
   3d3bc:	add	r1, pc, r1
   3d3c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d3c4:	mov	r8, fp
   3d3c8:	b	3d390 <blkid_probe_get_size@plt+0x35e78>
   3d3cc:	mov	fp, #0
   3d3d0:	b	3d340 <blkid_probe_get_size@plt+0x35e28>
   3d3d4:	bl	6fb4 <__stack_chk_fail@plt>
   3d3d8:	lsrs	r3, r8, #30
   3d3dc:	bne	3d3cc <blkid_probe_get_size@plt+0x35eb4>
   3d3e0:	lsls	r0, r8, #2
   3d3e4:	moveq	r0, #1
   3d3e8:	b	3d2c0 <blkid_probe_get_size@plt+0x35da8>
   3d3ec:	andeq	sl, r5, ip, asr r9
   3d3f0:	andeq	r0, r0, ip, lsr r4
   3d3f4:	andeq	sp, r2, r8, lsl sl
   3d3f8:	andeq	r1, r3, ip, lsr #12
   3d3fc:			; <UNDEFINED> instruction: 0x00032fbc
   3d400:	andeq	r7, r2, ip, asr #31
   3d404:	push	{r4, r5, r6, lr}
   3d408:	subs	r6, r1, #0
   3d40c:	sub	sp, sp, #8
   3d410:	beq	3d474 <blkid_probe_get_size@plt+0x35f5c>
   3d414:	cmp	r0, #0
   3d418:	beq	3d4a0 <blkid_probe_get_size@plt+0x35f88>
   3d41c:	ldr	r5, [r0]
   3d420:	cmp	r5, #0
   3d424:	addne	r4, r0, #4
   3d428:	bne	3d444 <blkid_probe_get_size@plt+0x35f2c>
   3d42c:	b	3d458 <blkid_probe_get_size@plt+0x35f40>
   3d430:	cmp	r4, #0
   3d434:	beq	3d464 <blkid_probe_get_size@plt+0x35f4c>
   3d438:	ldr	r5, [r4], #4
   3d43c:	cmp	r5, #0
   3d440:	beq	3d458 <blkid_probe_get_size@plt+0x35f40>
   3d444:	mov	r1, r6
   3d448:	mov	r0, r5
   3d44c:	bl	7314 <strcmp@plt>
   3d450:	cmp	r0, #0
   3d454:	bne	3d430 <blkid_probe_get_size@plt+0x35f18>
   3d458:	mov	r0, r5
   3d45c:	add	sp, sp, #8
   3d460:	pop	{r4, r5, r6, pc}
   3d464:	mov	r5, r4
   3d468:	mov	r0, r5
   3d46c:	add	sp, sp, #8
   3d470:	pop	{r4, r5, r6, pc}
   3d474:	ldr	r3, [pc, #44]	; 3d4a8 <blkid_probe_get_size@plt+0x35f90>
   3d478:	ldr	r2, [pc, #44]	; 3d4ac <blkid_probe_get_size@plt+0x35f94>
   3d47c:	add	r3, pc, r3
   3d480:	ldr	r1, [pc, #40]	; 3d4b0 <blkid_probe_get_size@plt+0x35f98>
   3d484:	add	r3, r3, #772	; 0x304
   3d488:	str	r3, [sp]
   3d48c:	mov	r0, r6
   3d490:	mov	r3, #21
   3d494:	add	r2, pc, r2
   3d498:	add	r1, pc, r1
   3d49c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d4a0:	mov	r5, r0
   3d4a4:	b	3d458 <blkid_probe_get_size@plt+0x35f40>
   3d4a8:	andeq	r1, r3, r4, asr r5
   3d4ac:	strdeq	r7, [r2], -r0
   3d4b0:	andeq	r6, r3, ip, lsl #23
   3d4b4:	push	{r4, r5, r6, lr}
   3d4b8:	subs	r5, r0, #0
   3d4bc:	sub	sp, sp, #8
   3d4c0:	beq	3d50c <blkid_probe_get_size@plt+0x35ff4>
   3d4c4:	ldr	r6, [r5]
   3d4c8:	mov	r4, r1
   3d4cc:	mov	r0, r6
   3d4d0:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   3d4d4:	cmp	r0, #0
   3d4d8:	beq	3d504 <blkid_probe_get_size@plt+0x35fec>
   3d4dc:	cmp	r4, #0
   3d4e0:	beq	3d4f4 <blkid_probe_get_size@plt+0x35fdc>
   3d4e4:	mov	r0, r4
   3d4e8:	bl	74e8 <strdup@plt>
   3d4ec:	subs	r4, r0, #0
   3d4f0:	beq	3d534 <blkid_probe_get_size@plt+0x3601c>
   3d4f4:	mov	r0, r6
   3d4f8:	bl	69f0 <free@plt>
   3d4fc:	mov	r0, #1
   3d500:	str	r4, [r5]
   3d504:	add	sp, sp, #8
   3d508:	pop	{r4, r5, r6, pc}
   3d50c:	ldr	r2, [pc, #40]	; 3d53c <blkid_probe_get_size@plt+0x36024>
   3d510:	ldr	r1, [pc, #40]	; 3d540 <blkid_probe_get_size@plt+0x36028>
   3d514:	add	r2, pc, r2
   3d518:	add	r2, r2, #784	; 0x310
   3d51c:	str	r2, [sp]
   3d520:	ldr	r2, [pc, #28]	; 3d544 <blkid_probe_get_size@plt+0x3602c>
   3d524:	mov	r3, #1004	; 0x3ec
   3d528:	add	r2, pc, r2
   3d52c:	add	r1, pc, r1
   3d530:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d534:	mvn	r0, #11
   3d538:	b	3d504 <blkid_probe_get_size@plt+0x35fec>
   3d53c:			; <UNDEFINED> instruction: 0x000314bc
   3d540:	andeq	r7, r3, ip, asr #3
   3d544:	andeq	r2, r3, ip, asr #9
   3d548:	push	{r4, r5, r6, r7, r8, lr}
   3d54c:	sub	sp, sp, #8
   3d550:	cmp	r1, #0
   3d554:	ldr	r4, [sp, #40]	; 0x28
   3d558:	ldr	r0, [sp, #44]	; 0x2c
   3d55c:	ldr	r5, [sp, #48]	; 0x30
   3d560:	beq	3d654 <blkid_probe_get_size@plt+0x3613c>
   3d564:	ldr	r3, [sp, #36]	; 0x24
   3d568:	cmp	r3, #0
   3d56c:	beq	3d680 <blkid_probe_get_size@plt+0x36168>
   3d570:	cmp	r0, #0
   3d574:	beq	3d6ac <blkid_probe_get_size@plt+0x36194>
   3d578:	cmp	r5, #0
   3d57c:	beq	3d6d4 <blkid_probe_get_size@plt+0x361bc>
   3d580:	ldrb	r6, [r0]
   3d584:	cmp	r6, #33	; 0x21
   3d588:	addeq	r0, r0, #1
   3d58c:	bl	74e8 <strdup@plt>
   3d590:	subs	r7, r0, #0
   3d594:	beq	3d630 <blkid_probe_get_size@plt+0x36118>
   3d598:	cmp	r4, #0
   3d59c:	blt	3d730 <blkid_probe_get_size@plt+0x36218>
   3d5a0:	cmp	r4, #22
   3d5a4:	bgt	3d75c <blkid_probe_get_size@plt+0x36244>
   3d5a8:	cmp	r4, #19
   3d5ac:	beq	3d788 <blkid_probe_get_size@plt+0x36270>
   3d5b0:	mov	r1, #16
   3d5b4:	mov	r0, #1
   3d5b8:	bl	7164 <calloc@plt>
   3d5bc:	subs	r8, r0, #0
   3d5c0:	beq	3d708 <blkid_probe_get_size@plt+0x361f0>
   3d5c4:	ldrb	r3, [r8, #1]
   3d5c8:	sub	r6, r6, #33	; 0x21
   3d5cc:	clz	r6, r6
   3d5d0:	lsr	r6, r6, #5
   3d5d4:	and	r3, r3, #252	; 0xfc
   3d5d8:	orr	r6, r3, r6, lsl #1
   3d5dc:	strb	r4, [r8]
   3d5e0:	strb	r6, [r8, #1]
   3d5e4:	mov	r1, r7
   3d5e8:	add	r0, r8, #4
   3d5ec:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   3d5f0:	cmp	r0, #0
   3d5f4:	blt	3d700 <blkid_probe_get_size@plt+0x361e8>
   3d5f8:	ldr	r4, [r5]
   3d5fc:	cmp	r4, #0
   3d600:	beq	3d614 <blkid_probe_get_size@plt+0x360fc>
   3d604:	ldr	r0, [r4, #4]
   3d608:	bl	69f0 <free@plt>
   3d60c:	mov	r0, r4
   3d610:	bl	69f0 <free@plt>
   3d614:	mov	r4, #0
   3d618:	str	r8, [r5]
   3d61c:	mov	r0, r7
   3d620:	bl	69f0 <free@plt>
   3d624:	mov	r0, r4
   3d628:	add	sp, sp, #8
   3d62c:	pop	{r4, r5, r6, r7, r8, pc}
   3d630:	ldr	r3, [pc, #380]	; 3d7b4 <blkid_probe_get_size@plt+0x3629c>
   3d634:	ldr	r1, [pc, #380]	; 3d7b8 <blkid_probe_get_size@plt+0x362a0>
   3d638:	add	r3, pc, r3
   3d63c:	mov	r2, #170	; 0xaa
   3d640:	add	r3, r3, #828	; 0x33c
   3d644:	add	r1, pc, r1
   3d648:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   3d64c:	mov	r4, r0
   3d650:	b	3d61c <blkid_probe_get_size@plt+0x36104>
   3d654:	ldr	r3, [pc, #352]	; 3d7bc <blkid_probe_get_size@plt+0x362a4>
   3d658:	mov	r0, r1
   3d65c:	add	r3, pc, r3
   3d660:	ldr	r2, [pc, #344]	; 3d7c0 <blkid_probe_get_size@plt+0x362a8>
   3d664:	ldr	r1, [pc, #344]	; 3d7c4 <blkid_probe_get_size@plt+0x362ac>
   3d668:	add	r3, r3, #800	; 0x320
   3d66c:	str	r3, [sp]
   3d670:	add	r2, pc, r2
   3d674:	mov	r3, #159	; 0x9f
   3d678:	add	r1, pc, r1
   3d67c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d680:	ldr	r2, [pc, #320]	; 3d7c8 <blkid_probe_get_size@plt+0x362b0>
   3d684:	ldr	r1, [pc, #320]	; 3d7cc <blkid_probe_get_size@plt+0x362b4>
   3d688:	add	r2, pc, r2
   3d68c:	add	r2, r2, #800	; 0x320
   3d690:	str	r2, [sp]
   3d694:	ldr	r2, [pc, #308]	; 3d7d0 <blkid_probe_get_size@plt+0x362b8>
   3d698:	mov	r3, #160	; 0xa0
   3d69c:	add	r2, pc, r2
   3d6a0:	add	r1, pc, r1
   3d6a4:	ldr	r0, [sp, #36]	; 0x24
   3d6a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d6ac:	ldr	r3, [pc, #288]	; 3d7d4 <blkid_probe_get_size@plt+0x362bc>
   3d6b0:	ldr	r2, [pc, #288]	; 3d7d8 <blkid_probe_get_size@plt+0x362c0>
   3d6b4:	add	r3, pc, r3
   3d6b8:	ldr	r1, [pc, #284]	; 3d7dc <blkid_probe_get_size@plt+0x362c4>
   3d6bc:	add	r3, r3, #800	; 0x320
   3d6c0:	str	r3, [sp]
   3d6c4:	add	r2, pc, r2
   3d6c8:	mov	r3, #161	; 0xa1
   3d6cc:	add	r1, pc, r1
   3d6d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d6d4:	ldr	r3, [pc, #260]	; 3d7e0 <blkid_probe_get_size@plt+0x362c8>
   3d6d8:	ldr	r2, [pc, #260]	; 3d7e4 <blkid_probe_get_size@plt+0x362cc>
   3d6dc:	add	r3, pc, r3
   3d6e0:	ldr	r1, [pc, #256]	; 3d7e8 <blkid_probe_get_size@plt+0x362d0>
   3d6e4:	add	r3, r3, #800	; 0x320
   3d6e8:	str	r3, [sp]
   3d6ec:	mov	r0, r5
   3d6f0:	mov	r3, #162	; 0xa2
   3d6f4:	add	r2, pc, r2
   3d6f8:	add	r1, pc, r1
   3d6fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d700:	mov	r0, r8
   3d704:	bl	69f0 <free@plt>
   3d708:	ldr	r3, [pc, #220]	; 3d7ec <blkid_probe_get_size@plt+0x362d4>
   3d70c:	ldr	r1, [pc, #220]	; 3d7f0 <blkid_probe_get_size@plt+0x362d8>
   3d710:	add	r3, pc, r3
   3d714:	mov	r2, #174	; 0xae
   3d718:	add	r3, r3, #828	; 0x33c
   3d71c:	add	r1, pc, r1
   3d720:	mov	r0, #0
   3d724:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   3d728:	mov	r4, r0
   3d72c:	b	3d61c <blkid_probe_get_size@plt+0x36104>
   3d730:	ldr	r2, [pc, #188]	; 3d7f4 <blkid_probe_get_size@plt+0x362dc>
   3d734:	ldr	r1, [pc, #188]	; 3d7f8 <blkid_probe_get_size@plt+0x362e0>
   3d738:	add	r2, pc, r2
   3d73c:	add	r2, r2, #856	; 0x358
   3d740:	str	r2, [sp]
   3d744:	ldr	r2, [pc, #176]	; 3d7fc <blkid_probe_get_size@plt+0x362e4>
   3d748:	mov	r3, #53	; 0x35
   3d74c:	add	r2, pc, r2
   3d750:	add	r1, pc, r1
   3d754:	mov	r0, #0
   3d758:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d75c:	ldr	r2, [pc, #156]	; 3d800 <blkid_probe_get_size@plt+0x362e8>
   3d760:	ldr	r1, [pc, #156]	; 3d804 <blkid_probe_get_size@plt+0x362ec>
   3d764:	add	r2, pc, r2
   3d768:	add	r2, r2, #856	; 0x358
   3d76c:	str	r2, [sp]
   3d770:	ldr	r2, [pc, #144]	; 3d808 <blkid_probe_get_size@plt+0x362f0>
   3d774:	mov	r3, #54	; 0x36
   3d778:	add	r2, pc, r2
   3d77c:	add	r1, pc, r1
   3d780:	mov	r0, #0
   3d784:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d788:	ldr	r2, [pc, #124]	; 3d80c <blkid_probe_get_size@plt+0x362f4>
   3d78c:	ldr	r1, [pc, #124]	; 3d810 <blkid_probe_get_size@plt+0x362f8>
   3d790:	add	r2, pc, r2
   3d794:	add	r2, r2, #856	; 0x358
   3d798:	str	r2, [sp]
   3d79c:	ldr	r2, [pc, #112]	; 3d814 <blkid_probe_get_size@plt+0x362fc>
   3d7a0:	mov	r3, #55	; 0x37
   3d7a4:	add	r2, pc, r2
   3d7a8:	add	r1, pc, r1
   3d7ac:	mov	r0, #0
   3d7b0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d7b4:	muleq	r3, r8, r3
   3d7b8:	andeq	r2, r3, r0, ror r0
   3d7bc:	andeq	r1, r3, r4, ror r3
   3d7c0:	andeq	r2, r3, r4, asr #32
   3d7c4:	andeq	ip, r2, r0, lsr sp
   3d7c8:	andeq	r1, r3, r8, asr #6
   3d7cc:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   3d7d0:	andeq	r2, r3, r8, lsl r0
   3d7d4:	andeq	r1, r3, ip, lsl r3
   3d7d8:	strdeq	r1, [r3], -r0
   3d7dc:	strdeq	ip, [r2], -r0
   3d7e0:	strdeq	r1, [r3], -r4
   3d7e4:	andeq	r1, r3, r0, asr #31
   3d7e8:	andeq	r7, r3, r4, lsl #2
   3d7ec:	andeq	r1, r3, r0, asr #5
   3d7f0:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   3d7f4:	muleq	r3, r8, r2
   3d7f8:	ldrdeq	r2, [r3], -ip
   3d7fc:	andeq	r2, r3, r4, asr #5
   3d800:	andeq	r1, r3, ip, ror #4
   3d804:			; <UNDEFINED> instruction: 0x000322bc
   3d808:	muleq	r3, r8, r2
   3d80c:	andeq	r1, r3, r0, asr #4
   3d810:	andeq	r2, r3, ip, lsr #5
   3d814:	andeq	r2, r3, ip, ror #4
   3d818:	push	{r4, r5, r6, lr}
   3d81c:	subs	r4, r0, #0
   3d820:	sub	sp, sp, #8
   3d824:	beq	3d878 <blkid_probe_get_size@plt+0x36360>
   3d828:	mov	r6, r1
   3d82c:	bl	723c <strlen@plt>
   3d830:	mov	r5, r0
   3d834:	mov	r0, r6
   3d838:	bl	723c <strlen@plt>
   3d83c:	subs	r2, r0, #0
   3d840:	addeq	r4, r4, r5
   3d844:	beq	3d86c <blkid_probe_get_size@plt+0x36354>
   3d848:	cmp	r5, r2
   3d84c:	bcc	3d8a0 <blkid_probe_get_size@plt+0x36388>
   3d850:	sub	r5, r5, r2
   3d854:	add	r4, r4, r5
   3d858:	mov	r0, r4
   3d85c:	mov	r1, r6
   3d860:	bl	7398 <memcmp@plt>
   3d864:	cmp	r0, #0
   3d868:	movne	r4, #0
   3d86c:	mov	r0, r4
   3d870:	add	sp, sp, #8
   3d874:	pop	{r4, r5, r6, pc}
   3d878:	ldr	r2, [pc, #40]	; 3d8a8 <blkid_probe_get_size@plt+0x36390>
   3d87c:	ldr	r1, [pc, #40]	; 3d8ac <blkid_probe_get_size@plt+0x36394>
   3d880:	add	r2, pc, r2
   3d884:	add	r2, r2, #872	; 0x368
   3d888:	str	r2, [sp]
   3d88c:	ldr	r2, [pc, #28]	; 3d8b0 <blkid_probe_get_size@plt+0x36398>
   3d890:	mov	r3, #40	; 0x28
   3d894:	add	r2, pc, r2
   3d898:	add	r1, pc, r1
   3d89c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3d8a0:	mov	r4, #0
   3d8a4:	b	3d86c <blkid_probe_get_size@plt+0x36354>
   3d8a8:	andeq	r1, r3, r0, asr r1
   3d8ac:	andeq	r2, r3, r0, ror #21
   3d8b0:	andeq	r2, r3, r0, ror #2
   3d8b4:	push	{r0, r1, r2, r3}
   3d8b8:	ldr	r3, [pc, #372]	; 3da34 <blkid_probe_get_size@plt+0x3651c>
   3d8bc:	ldr	r2, [pc, #372]	; 3da38 <blkid_probe_get_size@plt+0x36520>
   3d8c0:	add	r3, pc, r3
   3d8c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3d8c8:	sub	sp, sp, #8
   3d8cc:	ldr	r7, [r3, r2]
   3d8d0:	ldr	r9, [sp, #40]	; 0x28
   3d8d4:	ldr	r3, [r7]
   3d8d8:	subs	r0, r9, #0
   3d8dc:	str	r3, [sp, #4]
   3d8e0:	beq	3d8e8 <blkid_probe_get_size@plt+0x363d0>
   3d8e4:	bl	723c <strlen@plt>
   3d8e8:	add	r6, sp, #44	; 0x2c
   3d8ec:	add	r5, r0, #1
   3d8f0:	mov	r4, r6
   3d8f4:	add	r4, r4, #4
   3d8f8:	ldr	r0, [r4, #-4]
   3d8fc:	str	r4, [sp]
   3d900:	cmn	r0, #1
   3d904:	beq	3d92c <blkid_probe_get_size@plt+0x36414>
   3d908:	cmp	r0, #0
   3d90c:	beq	3d8f4 <blkid_probe_get_size@plt+0x363dc>
   3d910:	ldrb	r3, [r0]
   3d914:	cmp	r3, #0
   3d918:	beq	3d8f4 <blkid_probe_get_size@plt+0x363dc>
   3d91c:	bl	723c <strlen@plt>
   3d920:	add	r0, r0, r5
   3d924:	add	r5, r0, #1
   3d928:	b	3d8f4 <blkid_probe_get_size@plt+0x363dc>
   3d92c:	cmp	r5, #0
   3d930:	movne	r0, r5
   3d934:	moveq	r0, #1
   3d938:	bl	7230 <malloc@plt>
   3d93c:	subs	sl, r0, #0
   3d940:	beq	3d9e4 <blkid_probe_get_size@plt+0x364cc>
   3d944:	cmp	r9, #0
   3d948:	beq	3d958 <blkid_probe_get_size@plt+0x36440>
   3d94c:	ldrb	r3, [r9]
   3d950:	cmp	r3, #0
   3d954:	bne	3da08 <blkid_probe_get_size@plt+0x364f0>
   3d958:	mov	r8, sl
   3d95c:	mov	r0, #1
   3d960:	mov	r3, #0
   3d964:	strb	r3, [sl]
   3d968:	str	r6, [sp]
   3d96c:	mov	r5, r6
   3d970:	ldr	r6, [pc, #196]	; 3da3c <blkid_probe_get_size@plt+0x36524>
   3d974:	mov	r9, #47	; 0x2f
   3d978:	add	r6, pc, r6
   3d97c:	ldr	r4, [r5], #4
   3d980:	cmn	r4, #1
   3d984:	beq	3d9e4 <blkid_probe_get_size@plt+0x364cc>
   3d988:	cmp	r4, #0
   3d98c:	beq	3d97c <blkid_probe_get_size@plt+0x36464>
   3d990:	ldrb	r3, [r4]
   3d994:	cmp	r3, #0
   3d998:	beq	3d97c <blkid_probe_get_size@plt+0x36464>
   3d99c:	cmp	r0, #0
   3d9a0:	str	r5, [sp]
   3d9a4:	bne	3d9b4 <blkid_probe_get_size@plt+0x3649c>
   3d9a8:	cmp	r3, #47	; 0x2f
   3d9ac:	strbne	r9, [r8]
   3d9b0:	addne	r8, r8, #1
   3d9b4:	mov	r1, r4
   3d9b8:	mov	r0, r8
   3d9bc:	bl	6ae0 <stpcpy@plt>
   3d9c0:	mov	r1, r6
   3d9c4:	mov	r8, r0
   3d9c8:	mov	r0, r4
   3d9cc:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   3d9d0:	ldr	r4, [r5], #4
   3d9d4:	adds	r0, r0, #0
   3d9d8:	movne	r0, #1
   3d9dc:	cmn	r4, #1
   3d9e0:	bne	3d988 <blkid_probe_get_size@plt+0x36470>
   3d9e4:	ldr	r2, [sp, #4]
   3d9e8:	ldr	r3, [r7]
   3d9ec:	mov	r0, sl
   3d9f0:	cmp	r2, r3
   3d9f4:	bne	3da30 <blkid_probe_get_size@plt+0x36518>
   3d9f8:	add	sp, sp, #8
   3d9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3da00:	add	sp, sp, #16
   3da04:	bx	lr
   3da08:	mov	r1, r9
   3da0c:	bl	6ae0 <stpcpy@plt>
   3da10:	ldr	r1, [pc, #40]	; 3da40 <blkid_probe_get_size@plt+0x36528>
   3da14:	add	r1, pc, r1
   3da18:	mov	r8, r0
   3da1c:	mov	r0, r9
   3da20:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   3da24:	adds	r0, r0, #0
   3da28:	movne	r0, #1
   3da2c:	b	3d968 <blkid_probe_get_size@plt+0x36450>
   3da30:	bl	6fb4 <__stack_chk_fail@plt>
   3da34:	andeq	sl, r5, r8, lsr #5
   3da38:	andeq	r0, r0, ip, lsr r4
   3da3c:	andeq	sl, r3, r8, asr #12
   3da40:	andeq	sl, r3, ip, lsr #11
   3da44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da48:	sub	sp, sp, #12
   3da4c:	ldr	r5, [r0, #8]
   3da50:	cmp	r5, #0
   3da54:	beq	3dd28 <blkid_probe_get_size@plt+0x36810>
   3da58:	ldr	r3, [r0, #16]
   3da5c:	cmp	r2, #0
   3da60:	add	r3, r3, #1
   3da64:	str	r3, [r0, #16]
   3da68:	beq	3dcd0 <blkid_probe_get_size@plt+0x367b8>
   3da6c:	ldr	r3, [r0, #20]
   3da70:	mov	r6, r2
   3da74:	add	r3, r3, r2
   3da78:	add	r9, r1, r2
   3da7c:	str	r3, [r0, #20]
   3da80:	ldr	r2, [r5, #4]
   3da84:	ldr	r3, [r5]
   3da88:	mov	sl, r1
   3da8c:	add	r3, r2, r3
   3da90:	sub	r3, r3, r6
   3da94:	mov	r7, r0
   3da98:	mov	r8, r9
   3da9c:	mov	fp, r3
   3daa0:	cmp	r6, r2
   3daa4:	bhi	3dac4 <blkid_probe_get_size@plt+0x365ac>
   3daa8:	ldr	r0, [r7]
   3daac:	mov	r2, r6
   3dab0:	add	r0, r0, r3
   3dab4:	mov	r1, sl
   3dab8:	bl	7398 <memcmp@plt>
   3dabc:	cmp	r0, #0
   3dac0:	beq	3db70 <blkid_probe_get_size@plt+0x36658>
   3dac4:	ldrb	r1, [r5, #12]
   3dac8:	ldrb	r4, [r8, #-1]!
   3dacc:	ldr	r0, [r5, #8]
   3dad0:	cmp	r1, #0
   3dad4:	beq	3db9c <blkid_probe_get_size@plt+0x36684>
   3dad8:	cmp	r0, #0
   3dadc:	beq	3dcec <blkid_probe_get_size@plt+0x367d4>
   3dae0:	mov	r2, #0
   3dae4:	b	3dafc <blkid_probe_get_size@plt+0x365e4>
   3dae8:	cmp	ip, #0
   3daec:	beq	3db44 <blkid_probe_get_size@plt+0x3662c>
   3daf0:	add	r2, r3, #1
   3daf4:	cmp	r1, r2
   3daf8:	bls	3db9c <blkid_probe_get_size@plt+0x36684>
   3dafc:	add	r3, r1, r2
   3db00:	lsr	r3, r3, #1
   3db04:	ldrb	ip, [r0, r3, lsl #3]
   3db08:	add	lr, r0, r3, lsl #3
   3db0c:	subs	ip, r4, ip
   3db10:	bpl	3dae8 <blkid_probe_get_size@plt+0x365d0>
   3db14:	cmp	r3, r2
   3db18:	bls	3db9c <blkid_probe_get_size@plt+0x36684>
   3db1c:	add	fp, r3, r2
   3db20:	lsr	fp, fp, #1
   3db24:	ldrb	ip, [r0, fp, lsl #3]
   3db28:	add	lr, r0, fp, lsl #3
   3db2c:	subs	ip, r4, ip
   3db30:	bmi	3db90 <blkid_probe_get_size@plt+0x36678>
   3db34:	cmp	ip, #0
   3db38:	mov	r1, r3
   3db3c:	mov	r3, fp
   3db40:	bne	3daf0 <blkid_probe_get_size@plt+0x365d8>
   3db44:	sub	r3, r9, r8
   3db48:	cmp	r6, r3
   3db4c:	ldr	r5, [lr, #4]
   3db50:	bcc	3db9c <blkid_probe_get_size@plt+0x36684>
   3db54:	ldr	r2, [r5, #4]
   3db58:	ldr	r3, [r5]
   3db5c:	cmp	r8, sl
   3db60:	add	r3, r2, r3
   3db64:	sub	r3, r3, r6
   3db68:	mov	fp, r3
   3db6c:	bne	3daa0 <blkid_probe_get_size@plt+0x36588>
   3db70:	ldrd	r2, [r7, #24]
   3db74:	mov	r0, fp
   3db78:	add	r6, r2, r6
   3db7c:	add	r3, r3, #1
   3db80:	str	r6, [r7, #24]
   3db84:	str	r3, [r7, #28]
   3db88:	add	sp, sp, #12
   3db8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3db90:	mov	r3, fp
   3db94:	cmp	r3, r2
   3db98:	bhi	3db1c <blkid_probe_get_size@plt+0x36604>
   3db9c:	ldr	r3, [r7, #4]
   3dba0:	add	r1, r6, #1
   3dba4:	add	r1, r1, r3
   3dba8:	ldr	r0, [r7]
   3dbac:	bl	6e94 <realloc@plt>
   3dbb0:	cmp	r0, #0
   3dbb4:	beq	3dd38 <blkid_probe_get_size@plt+0x36820>
   3dbb8:	ldr	fp, [r7, #4]
   3dbbc:	str	r0, [r7]
   3dbc0:	mov	r1, sl
   3dbc4:	mov	r2, r6
   3dbc8:	add	r0, r0, fp
   3dbcc:	bl	71e8 <memcpy@plt>
   3dbd0:	ldrd	r2, [r7]
   3dbd4:	mov	r9, #0
   3dbd8:	mov	r0, #16
   3dbdc:	add	r3, r6, r3
   3dbe0:	add	r1, r3, #1
   3dbe4:	str	r1, [r7, #4]
   3dbe8:	strb	r9, [r2, r3]
   3dbec:	bl	7230 <malloc@plt>
   3dbf0:	subs	r8, r0, #0
   3dbf4:	beq	3dd38 <blkid_probe_get_size@plt+0x36820>
   3dbf8:	str	r9, [r8, #8]
   3dbfc:	str	r9, [r8, #12]
   3dc00:	str	fp, [r8]
   3dc04:	str	r6, [r8, #4]
   3dc08:	ldrb	r1, [r5, #12]
   3dc0c:	ldr	r0, [r5, #8]
   3dc10:	mov	r2, #8
   3dc14:	add	r1, r1, #1
   3dc18:	bl	711c <reallocarray@plt>
   3dc1c:	subs	r1, r0, #0
   3dc20:	beq	3dd30 <blkid_probe_get_size@plt+0x36818>
   3dc24:	ldr	r3, [r7, #12]
   3dc28:	mov	ip, r9
   3dc2c:	add	r3, r3, #1
   3dc30:	str	r3, [r7, #12]
   3dc34:	ldrb	lr, [r5, #12]
   3dc38:	str	r1, [r5, #8]
   3dc3c:	mov	r2, lr
   3dc40:	cmp	ip, r2
   3dc44:	bge	3dc88 <blkid_probe_get_size@plt+0x36770>
   3dc48:	add	r0, ip, r2
   3dc4c:	asr	r0, r0, #1
   3dc50:	ldrb	r3, [r1, r0, lsl #3]
   3dc54:	sub	r3, r3, r4
   3dc58:	cmp	r3, #0
   3dc5c:	bgt	3dc80 <blkid_probe_get_size@plt+0x36768>
   3dc60:	b	3dd14 <blkid_probe_get_size@plt+0x367fc>
   3dc64:	add	r3, ip, r0
   3dc68:	asr	r3, r3, #1
   3dc6c:	ldrb	r2, [r1, r3, lsl #3]
   3dc70:	sub	r2, r2, r4
   3dc74:	cmp	r2, #0
   3dc78:	ble	3dd1c <blkid_probe_get_size@plt+0x36804>
   3dc7c:	mov	r0, r3
   3dc80:	cmp	ip, r0
   3dc84:	blt	3dc64 <blkid_probe_get_size@plt+0x3674c>
   3dc88:	add	r0, ip, #1
   3dc8c:	sub	r2, lr, ip
   3dc90:	lsl	r0, r0, #3
   3dc94:	sub	r6, r0, #8
   3dc98:	lsl	r2, r2, #3
   3dc9c:	add	r0, r1, r0
   3dca0:	add	r1, r1, r6
   3dca4:	bl	6e04 <memmove@plt>
   3dca8:	ldr	r3, [r5, #8]
   3dcac:	mov	r0, fp
   3dcb0:	add	r2, r3, r6
   3dcb4:	strb	r4, [r3, r6]
   3dcb8:	str	r8, [r2, #4]
   3dcbc:	ldrb	r3, [r5, #12]
   3dcc0:	add	r3, r3, #1
   3dcc4:	strb	r3, [r5, #12]
   3dcc8:	add	sp, sp, #12
   3dccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dcd0:	ldr	r3, [r0, #28]
   3dcd4:	mov	fp, r2
   3dcd8:	add	r3, r3, #1
   3dcdc:	str	r3, [r0, #28]
   3dce0:	mov	r0, fp
   3dce4:	add	sp, sp, #12
   3dce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dcec:	ldr	r3, [pc, #76]	; 3dd40 <blkid_probe_get_size@plt+0x36828>
   3dcf0:	ldr	r2, [pc, #76]	; 3dd44 <blkid_probe_get_size@plt+0x3682c>
   3dcf4:	add	r3, pc, r3
   3dcf8:	ldr	r1, [pc, #72]	; 3dd48 <blkid_probe_get_size@plt+0x36830>
   3dcfc:	add	r3, r3, #884	; 0x374
   3dd00:	str	r3, [sp]
   3dd04:	add	r2, pc, r2
   3dd08:	mov	r3, #88	; 0x58
   3dd0c:	add	r1, pc, r1
   3dd10:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3dd14:	mov	r3, r0
   3dd18:	mov	r0, r2
   3dd1c:	add	ip, r3, #1
   3dd20:	mov	r2, r0
   3dd24:	b	3dc40 <blkid_probe_get_size@plt+0x36728>
   3dd28:	mvn	fp, #21
   3dd2c:	b	3dce0 <blkid_probe_get_size@plt+0x367c8>
   3dd30:	mov	r0, r8
   3dd34:	bl	69f0 <free@plt>
   3dd38:	mvn	fp, #11
   3dd3c:	b	3dce0 <blkid_probe_get_size@plt+0x367c8>
   3dd40:	ldrdeq	r0, [r3], -ip
   3dd44:	muleq	r2, ip, fp
   3dd48:	andeq	r6, r3, r0, asr sl
   3dd4c:	ldr	r2, [pc, #44]	; 3dd80 <blkid_probe_get_size@plt+0x36868>
   3dd50:	push	{lr}		; (str lr, [sp, #-4]!)
   3dd54:	add	r2, pc, r2
   3dd58:	sub	sp, sp, #12
   3dd5c:	add	r2, r2, #900	; 0x384
   3dd60:	str	r2, [sp]
   3dd64:	ldr	r1, [pc, #24]	; 3dd84 <blkid_probe_get_size@plt+0x3686c>
   3dd68:	ldr	r2, [pc, #24]	; 3dd88 <blkid_probe_get_size@plt+0x36870>
   3dd6c:	mov	r3, #167	; 0xa7
   3dd70:	add	r2, pc, r2
   3dd74:	add	r1, pc, r1
   3dd78:	mov	r0, #0
   3dd7c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3dd80:	andeq	r0, r3, ip, ror ip
   3dd84:	andeq	r2, r3, r4, lsl #12
   3dd88:	andeq	r1, r3, r4, lsr #26
   3dd8c:	ldr	r3, [pc, #304]	; 3dec4 <blkid_probe_get_size@plt+0x369ac>
   3dd90:	ldr	r2, [pc, #304]	; 3dec8 <blkid_probe_get_size@plt+0x369b0>
   3dd94:	add	r3, pc, r3
   3dd98:	push	{r4, lr}
   3dd9c:	sub	sp, sp, #104	; 0x68
   3dda0:	ldr	r4, [r3, r2]
   3dda4:	ldr	r0, [pc, #288]	; 3decc <blkid_probe_get_size@plt+0x369b4>
   3dda8:	ldr	r3, [r4]
   3ddac:	add	r0, pc, r0
   3ddb0:	str	r3, [sp, #100]	; 0x64
   3ddb4:	bl	744c <secure_getenv@plt>
   3ddb8:	cmp	r0, #0
   3ddbc:	beq	3dde8 <blkid_probe_get_size@plt+0x368d0>
   3ddc0:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   3ddc4:	adds	r3, r0, #6
   3ddc8:	movne	r3, #1
   3ddcc:	ands	r3, r3, r0, lsr #31
   3ddd0:	beq	3de18 <blkid_probe_get_size@plt+0x36900>
   3ddd4:	ldr	r3, [pc, #244]	; 3ded0 <blkid_probe_get_size@plt+0x369b8>
   3ddd8:	add	r3, pc, r3
   3dddc:	ldr	r3, [r3]
   3dde0:	cmp	r3, #6
   3dde4:	bgt	3de4c <blkid_probe_get_size@plt+0x36934>
   3dde8:	ldr	r0, [pc, #228]	; 3ded4 <blkid_probe_get_size@plt+0x369bc>
   3ddec:	mov	r1, #0
   3ddf0:	add	r0, pc, r0
   3ddf4:	bl	6ff0 <access@plt>
   3ddf8:	cmp	r0, #0
   3ddfc:	bge	3de84 <blkid_probe_get_size@plt+0x3696c>
   3de00:	mov	r0, #0
   3de04:	mov	r3, r0
   3de08:	ldr	r2, [pc, #200]	; 3ded8 <blkid_probe_get_size@plt+0x369c0>
   3de0c:	add	r2, pc, r2
   3de10:	str	r3, [r2]
   3de14:	b	3de34 <blkid_probe_get_size@plt+0x3691c>
   3de18:	cmp	r0, #0
   3de1c:	blt	3dde8 <blkid_probe_get_size@plt+0x368d0>
   3de20:	ldr	r3, [pc, #180]	; 3dedc <blkid_probe_get_size@plt+0x369c4>
   3de24:	movgt	r0, #1
   3de28:	add	r3, pc, r3
   3de2c:	movle	r0, #0
   3de30:	str	r0, [r3]
   3de34:	ldr	r2, [sp, #100]	; 0x64
   3de38:	ldr	r3, [r4]
   3de3c:	cmp	r2, r3
   3de40:	bne	3dec0 <blkid_probe_get_size@plt+0x369a8>
   3de44:	add	sp, sp, #104	; 0x68
   3de48:	pop	{r4, pc}
   3de4c:	ldr	r2, [pc, #140]	; 3dee0 <blkid_probe_get_size@plt+0x369c8>
   3de50:	ldr	r3, [pc, #140]	; 3dee4 <blkid_probe_get_size@plt+0x369cc>
   3de54:	add	r2, pc, r2
   3de58:	str	r2, [sp, #4]
   3de5c:	add	r3, pc, r3
   3de60:	ldr	r2, [pc, #128]	; 3dee8 <blkid_probe_get_size@plt+0x369d0>
   3de64:	add	r3, r3, #912	; 0x390
   3de68:	mov	r1, r0
   3de6c:	str	r3, [sp]
   3de70:	add	r2, pc, r2
   3de74:	mov	r3, #128	; 0x80
   3de78:	mov	r0, #7
   3de7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3de80:	b	3dde8 <blkid_probe_get_size@plt+0x368d0>
   3de84:	ldr	r0, [pc, #96]	; 3deec <blkid_probe_get_size@plt+0x369d4>
   3de88:	add	r1, sp, #8
   3de8c:	add	r0, pc, r0
   3de90:	bl	6ce4 <statfs64@plt>
   3de94:	cmp	r0, #0
   3de98:	blt	3de00 <blkid_probe_get_size@plt+0x368e8>
   3de9c:	ldr	r0, [sp, #8]
   3dea0:	ldr	r3, [pc, #72]	; 3def0 <blkid_probe_get_size@plt+0x369d8>
   3dea4:	ldr	r2, [pc, #72]	; 3def4 <blkid_probe_get_size@plt+0x369dc>
   3dea8:	cmp	r0, r3
   3deac:	cmpne	r0, r2
   3deb0:	moveq	r0, #1
   3deb4:	movne	r0, #0
   3deb8:	mov	r3, r0
   3debc:	b	3de08 <blkid_probe_get_size@plt+0x368f0>
   3dec0:	bl	6fb4 <__stack_chk_fail@plt>
   3dec4:	ldrdeq	r9, [r5], -r4
   3dec8:	andeq	r0, r0, ip, lsr r4
   3decc:	andeq	r1, r3, r4, lsl #26
   3ded0:	andeq	sl, r5, r4, ror #6
   3ded4:	andeq	r1, r3, r8, lsl #26
   3ded8:	andeq	sl, r5, r4, ror #6
   3dedc:	andeq	sl, r5, r8, asr #6
   3dee0:	andeq	r1, r3, r0, ror ip
   3dee4:	andeq	r0, r3, r4, ror fp
   3dee8:	andeq	r1, r3, r0, lsl #20
   3deec:	andeq	sl, r3, r4, lsr r1
   3def0:	strhi	r5, [r4, #2294]	; 0x8f6
   3def4:			; <UNDEFINED> instruction: 0x01021994
   3def8:	ldr	r3, [pc, #196]	; 3dfc4 <blkid_probe_get_size@plt+0x36aac>
   3defc:	ldr	r2, [pc, #196]	; 3dfc8 <blkid_probe_get_size@plt+0x36ab0>
   3df00:	add	r3, pc, r3
   3df04:	push	{r4, r5, r6, lr}
   3df08:	sub	sp, sp, #112	; 0x70
   3df0c:	ldr	r5, [r3, r2]
   3df10:	subs	r6, r0, #0
   3df14:	ldr	r3, [r5]
   3df18:	str	r3, [sp, #108]	; 0x6c
   3df1c:	beq	3df98 <blkid_probe_get_size@plt+0x36a80>
   3df20:	add	r1, sp, #8
   3df24:	bl	6fcc <statvfs64@plt>
   3df28:	cmp	r0, #0
   3df2c:	blt	3df74 <blkid_probe_get_size@plt+0x36a5c>
   3df30:	ldr	r0, [sp, #72]	; 0x48
   3df34:	ands	r4, r0, #1
   3df38:	beq	3df58 <blkid_probe_get_size@plt+0x36a40>
   3df3c:	mov	r0, #1
   3df40:	ldr	r2, [sp, #108]	; 0x6c
   3df44:	ldr	r3, [r5]
   3df48:	cmp	r2, r3
   3df4c:	bne	3dfc0 <blkid_probe_get_size@plt+0x36aa8>
   3df50:	add	sp, sp, #112	; 0x70
   3df54:	pop	{r4, r5, r6, pc}
   3df58:	mov	r0, r6
   3df5c:	mov	r1, #2
   3df60:	bl	6ff0 <access@plt>
   3df64:	cmp	r0, #0
   3df68:	blt	3df84 <blkid_probe_get_size@plt+0x36a6c>
   3df6c:	mov	r0, r4
   3df70:	b	3df40 <blkid_probe_get_size@plt+0x36a28>
   3df74:	bl	732c <__errno_location@plt>
   3df78:	ldr	r0, [r0]
   3df7c:	rsb	r0, r0, #0
   3df80:	b	3df40 <blkid_probe_get_size@plt+0x36a28>
   3df84:	bl	732c <__errno_location@plt>
   3df88:	ldr	r3, [r0]
   3df8c:	cmp	r3, #30
   3df90:	bne	3df6c <blkid_probe_get_size@plt+0x36a54>
   3df94:	b	3df3c <blkid_probe_get_size@plt+0x36a24>
   3df98:	ldr	r2, [pc, #44]	; 3dfcc <blkid_probe_get_size@plt+0x36ab4>
   3df9c:	ldr	r1, [pc, #44]	; 3dfd0 <blkid_probe_get_size@plt+0x36ab8>
   3dfa0:	add	r2, pc, r2
   3dfa4:	add	r2, r2, #924	; 0x39c
   3dfa8:	str	r2, [sp]
   3dfac:	ldr	r2, [pc, #32]	; 3dfd4 <blkid_probe_get_size@plt+0x36abc>
   3dfb0:	mov	r3, #133	; 0x85
   3dfb4:	add	r2, pc, r2
   3dfb8:	add	r1, pc, r1
   3dfbc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3dfc0:	bl	6fb4 <__stack_chk_fail@plt>
   3dfc4:	andeq	r9, r5, r8, ror #24
   3dfc8:	andeq	r0, r0, ip, lsr r4
   3dfcc:	andeq	r0, r3, r0, lsr sl
   3dfd0:	andeq	sp, r2, ip, asr r3
   3dfd4:	andeq	r1, r3, r0, ror #21
   3dfd8:	ldr	r3, [r0, #16]
   3dfdc:	and	r2, r3, #61440	; 0xf000
   3dfe0:	cmp	r2, #32768	; 0x8000
   3dfe4:	beq	3dffc <blkid_probe_get_size@plt+0x36ae4>
   3dfe8:	and	r0, r3, #45056	; 0xb000
   3dfec:	sub	r0, r0, #8192	; 0x2000
   3dff0:	clz	r0, r0
   3dff4:	lsr	r0, r0, #5
   3dff8:	bx	lr
   3dffc:	ldrd	r2, [r0, #48]	; 0x30
   3e000:	cmp	r2, #1
   3e004:	sbcs	r3, r3, #0
   3e008:	movlt	r0, #1
   3e00c:	movge	r0, #0
   3e010:	bx	lr
   3e014:	ldr	r3, [pc, #152]	; 3e0b4 <blkid_probe_get_size@plt+0x36b9c>
   3e018:	ldr	r2, [pc, #152]	; 3e0b8 <blkid_probe_get_size@plt+0x36ba0>
   3e01c:	add	r3, pc, r3
   3e020:	push	{r4, r5, lr}
   3e024:	sub	sp, sp, #124	; 0x7c
   3e028:	ldr	r4, [r3, r2]
   3e02c:	subs	r1, r0, #0
   3e030:	ldr	r3, [r4]
   3e034:	str	r3, [sp, #116]	; 0x74
   3e038:	blt	3e084 <blkid_probe_get_size@plt+0x36b6c>
   3e03c:	add	r5, sp, #8
   3e040:	mov	r2, r5
   3e044:	mov	r0, #3
   3e048:	bl	6c90 <__fxstat64@plt>
   3e04c:	cmp	r0, #0
   3e050:	blt	3e074 <blkid_probe_get_size@plt+0x36b5c>
   3e054:	mov	r0, r5
   3e058:	bl	3dfd8 <blkid_probe_get_size@plt+0x36ac0>
   3e05c:	ldr	r2, [sp, #116]	; 0x74
   3e060:	ldr	r3, [r4]
   3e064:	cmp	r2, r3
   3e068:	bne	3e0b0 <blkid_probe_get_size@plt+0x36b98>
   3e06c:	add	sp, sp, #124	; 0x7c
   3e070:	pop	{r4, r5, pc}
   3e074:	bl	732c <__errno_location@plt>
   3e078:	ldr	r0, [r0]
   3e07c:	rsb	r0, r0, #0
   3e080:	b	3e05c <blkid_probe_get_size@plt+0x36b44>
   3e084:	ldr	r2, [pc, #48]	; 3e0bc <blkid_probe_get_size@plt+0x36ba4>
   3e088:	ldr	r1, [pc, #48]	; 3e0c0 <blkid_probe_get_size@plt+0x36ba8>
   3e08c:	add	r2, pc, r2
   3e090:	add	r2, r2, #948	; 0x3b4
   3e094:	str	r2, [sp]
   3e098:	ldr	r2, [pc, #36]	; 3e0c4 <blkid_probe_get_size@plt+0x36bac>
   3e09c:	mov	r3, #122	; 0x7a
   3e0a0:	add	r2, pc, r2
   3e0a4:	add	r1, pc, r1
   3e0a8:	mov	r0, #0
   3e0ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e0b0:	bl	6fb4 <__stack_chk_fail@plt>
   3e0b4:	andeq	r9, r5, ip, asr #22
   3e0b8:	andeq	r0, r0, ip, lsr r4
   3e0bc:	andeq	r0, r3, r4, asr #18
   3e0c0:	andeq	pc, r2, r8, lsr r5	; <UNPREDICTABLE>
   3e0c4:	strdeq	r1, [r3], -r4
   3e0c8:	ldr	r3, [pc, #180]	; 3e184 <blkid_probe_get_size@plt+0x36c6c>
   3e0cc:	ldr	r2, [pc, #180]	; 3e188 <blkid_probe_get_size@plt+0x36c70>
   3e0d0:	add	r3, pc, r3
   3e0d4:	push	{r4, lr}
   3e0d8:	sub	sp, sp, #120	; 0x78
   3e0dc:	ldr	r4, [r3, r2]
   3e0e0:	subs	ip, r0, #0
   3e0e4:	ldr	r3, [r4]
   3e0e8:	str	r3, [sp, #116]	; 0x74
   3e0ec:	beq	3e158 <blkid_probe_get_size@plt+0x36c40>
   3e0f0:	cmp	r1, #0
   3e0f4:	add	r2, sp, #8
   3e0f8:	mov	r1, ip
   3e0fc:	mov	r0, #3
   3e100:	bne	3e13c <blkid_probe_get_size@plt+0x36c24>
   3e104:	bl	7368 <__lxstat64@plt>
   3e108:	cmp	r0, #0
   3e10c:	blt	3e148 <blkid_probe_get_size@plt+0x36c30>
   3e110:	ldr	r0, [sp, #24]
   3e114:	and	r0, r0, #61440	; 0xf000
   3e118:	sub	r0, r0, #16384	; 0x4000
   3e11c:	clz	r0, r0
   3e120:	lsr	r0, r0, #5
   3e124:	ldr	r2, [sp, #116]	; 0x74
   3e128:	ldr	r3, [r4]
   3e12c:	cmp	r2, r3
   3e130:	bne	3e180 <blkid_probe_get_size@plt+0x36c68>
   3e134:	add	sp, sp, #120	; 0x78
   3e138:	pop	{r4, pc}
   3e13c:	bl	6a2c <__xstat64@plt>
   3e140:	cmp	r0, #0
   3e144:	bge	3e110 <blkid_probe_get_size@plt+0x36bf8>
   3e148:	bl	732c <__errno_location@plt>
   3e14c:	ldr	r0, [r0]
   3e150:	rsb	r0, r0, #0
   3e154:	b	3e124 <blkid_probe_get_size@plt+0x36c0c>
   3e158:	ldr	r2, [pc, #44]	; 3e18c <blkid_probe_get_size@plt+0x36c74>
   3e15c:	ldr	r1, [pc, #44]	; 3e190 <blkid_probe_get_size@plt+0x36c78>
   3e160:	add	r2, pc, r2
   3e164:	add	r2, r2, #968	; 0x3c8
   3e168:	str	r2, [sp]
   3e16c:	ldr	r2, [pc, #32]	; 3e194 <blkid_probe_get_size@plt+0x36c7c>
   3e170:	mov	r3, #38	; 0x26
   3e174:	add	r2, pc, r2
   3e178:	add	r1, pc, r1
   3e17c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e180:	bl	6fb4 <__stack_chk_fail@plt>
   3e184:	muleq	r5, r8, sl
   3e188:	andeq	r0, r0, ip, lsr r4
   3e18c:	andeq	r0, r3, r0, ror r8
   3e190:	muleq	r2, ip, r1
   3e194:	andeq	r1, r3, r0, lsr #18
   3e198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e19c:	sub	sp, sp, #20
   3e1a0:	ldrb	lr, [r1, #9]
   3e1a4:	ldrb	fp, [r1, #1]
   3e1a8:	ldrb	ip, [r1, #10]
   3e1ac:	ldrb	r6, [r1, #8]
   3e1b0:	ldrb	r7, [r1]
   3e1b4:	ldrb	sl, [r1, #2]
   3e1b8:	ldrb	r8, [r1, #5]
   3e1bc:	ldrb	r9, [r1, #13]
   3e1c0:	orr	r6, r6, lr, lsl #8
   3e1c4:	orr	r6, r6, ip, lsl #16
   3e1c8:	ldrb	lr, [r1, #4]
   3e1cc:	ldrb	ip, [r1, #12]
   3e1d0:	orr	r7, r7, fp, lsl #8
   3e1d4:	ldrb	fp, [r1, #3]
   3e1d8:	orr	r7, r7, sl, lsl #16
   3e1dc:	ldrb	sl, [r1, #6]
   3e1e0:	orr	ip, ip, r9, lsl #8
   3e1e4:	orr	lr, lr, r8, lsl #8
   3e1e8:	ldrb	r9, [r1, #14]
   3e1ec:	ldrb	r8, [r1, #11]
   3e1f0:	orr	r4, r7, fp, lsl #24
   3e1f4:	ldrb	r7, [r1, #15]
   3e1f8:	orr	lr, lr, sl, lsl #16
   3e1fc:	ldrb	sl, [r1, #7]
   3e200:	orr	r3, r6, r8, lsl #24
   3e204:	orr	r1, ip, r9, lsl #16
   3e208:	str	r3, [sp]
   3e20c:	add	r9, pc, #140	; 0x8c
   3e210:	ldrd	r8, [r9]
   3e214:	orr	r3, r1, r7, lsl #24
   3e218:	add	r7, pc, #136	; 0x88
   3e21c:	ldrd	r6, [r7]
   3e220:	orr	r5, lr, sl, lsl #24
   3e224:	eor	r2, r8, r4
   3e228:	str	r3, [sp, #4]
   3e22c:	eor	r8, r6, r4
   3e230:	eor	r3, r9, r5
   3e234:	eor	r9, r7, r5
   3e238:	add	r5, pc, #112	; 0x70
   3e23c:	ldrd	r4, [r5]
   3e240:	strd	r8, [sp, #8]
   3e244:	ldrd	r8, [sp]
   3e248:	add	fp, pc, #104	; 0x68
   3e24c:	ldrd	sl, [fp]
   3e250:	strd	r2, [r0]
   3e254:	mov	r2, r8
   3e258:	mov	r3, r9
   3e25c:	eor	r2, r2, r4
   3e260:	eor	r3, r3, r5
   3e264:	mov	r6, r8
   3e268:	mov	r7, r9
   3e26c:	ldrd	r4, [sp, #8]
   3e270:	eor	r6, r6, sl
   3e274:	eor	r7, r7, fp
   3e278:	mov	r8, #0
   3e27c:	mov	r9, #0
   3e280:	mov	r1, #0
   3e284:	strd	r4, [r0, #16]
   3e288:	strd	r6, [r0, #8]
   3e28c:	strd	r2, [r0, #24]
   3e290:	strd	r8, [r0, #32]
   3e294:	str	r1, [r0, #40]	; 0x28
   3e298:	add	sp, sp, #20
   3e29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e2a0:	rsbsvc	r6, r3, r5, ror r5
   3e2a4:	cmnvc	pc, #6464	; 0x1940
   3e2a8:	cdpvs	2, 6, cr7, cr5, cr1, {3}
   3e2ac:	ldclvs	7, cr6, [r9], #-404	; 0xfffffe6c
   3e2b0:	ldmdbvc	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
   3e2b4:	strbtvc	r6, [r5], #-1122	; 0xfffffb9e
   3e2b8:	cdpvs	15, 6, cr6, cr4, cr13, {3}
   3e2bc:	strbtvs	r7, [pc], #-609	; 3e2c4 <blkid_probe_get_size@plt+0x36dac>
   3e2c0:	subs	ip, r0, #0
   3e2c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e2c8:	sub	sp, sp, #20
   3e2cc:	beq	3e3a0 <blkid_probe_get_size@plt+0x36e88>
   3e2d0:	ldrd	r8, [ip, #8]
   3e2d4:	ldrd	r2, [ip]
   3e2d8:	ldrd	r6, [ip, #24]
   3e2dc:	ldrd	sl, [ip, #16]
   3e2e0:	adds	r4, r8, r2
   3e2e4:	lsl	lr, r9, #13
   3e2e8:	adc	r5, r9, r3
   3e2ec:	orr	r1, lr, r8, lsr #19
   3e2f0:	adds	r2, sl, r6
   3e2f4:	lsl	lr, r8, #13
   3e2f8:	orr	r0, lr, r9, lsr #19
   3e2fc:	adc	r3, fp, r7
   3e300:	eor	r9, r1, r5
   3e304:	lsl	lr, r7, #16
   3e308:	eor	r8, r0, r4
   3e30c:	mov	fp, r3
   3e310:	orr	r3, lr, r6, lsr #16
   3e314:	lsl	lr, r6, #16
   3e318:	mov	sl, r2
   3e31c:	mov	r1, fp
   3e320:	orr	r2, lr, r7, lsr #16
   3e324:	lsl	lr, r9, #17
   3e328:	eor	r1, r1, r3
   3e32c:	orr	r3, lr, r8, lsr #15
   3e330:	lsl	lr, r8, #17
   3e334:	str	r3, [sp, #12]
   3e338:	mov	r0, sl
   3e33c:	orr	r3, lr, r9, lsr #15
   3e340:	adds	sl, sl, r8
   3e344:	eor	r0, r0, r2
   3e348:	str	r3, [sp, #8]
   3e34c:	adc	fp, fp, r9
   3e350:	mov	r6, r5
   3e354:	lsl	lr, r1, #21
   3e358:	ldrd	r8, [sp, #8]
   3e35c:	orr	r5, lr, r0, lsr #11
   3e360:	adds	r2, r0, r6
   3e364:	mov	r7, r4
   3e368:	lsl	lr, r0, #21
   3e36c:	orr	r4, lr, r1, lsr #11
   3e370:	adc	r3, r1, r7
   3e374:	eor	r8, r8, sl
   3e378:	eor	r9, r9, fp
   3e37c:	eor	r0, r4, r2
   3e380:	eor	r1, r5, r3
   3e384:	strd	r8, [ip, #8]
   3e388:	str	fp, [ip, #16]
   3e38c:	str	sl, [ip, #20]
   3e390:	strd	r0, [ip, #24]
   3e394:	strd	r2, [ip]
   3e398:	add	sp, sp, #20
   3e39c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e3a0:	ldr	r2, [pc, #32]	; 3e3c8 <blkid_probe_get_size@plt+0x36eb0>
   3e3a4:	ldr	r1, [pc, #32]	; 3e3cc <blkid_probe_get_size@plt+0x36eb4>
   3e3a8:	add	r2, pc, r2
   3e3ac:	add	r2, r2, #976	; 0x3d0
   3e3b0:	str	r2, [sp]
   3e3b4:	ldr	r2, [pc, #20]	; 3e3d0 <blkid_probe_get_size@plt+0x36eb8>
   3e3b8:	mov	r3, #33	; 0x21
   3e3bc:	add	r2, pc, r2
   3e3c0:	add	r1, pc, r1
   3e3c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e3c8:	andeq	r0, r3, r8, lsr #12
   3e3cc:			; <UNDEFINED> instruction: 0x0002f1b4
   3e3d0:	andeq	r1, r3, r0, asr r7
   3e3d4:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   3e3d8:	mov	r8, #0
   3e3dc:	ldr	r3, [r0, #40]	; 0x28
   3e3e0:	ldrd	r4, [r0, #32]
   3e3e4:	mov	r6, r0
   3e3e8:	lsl	r9, r3, #24
   3e3ec:	ldrd	r2, [r0, #24]
   3e3f0:	orr	sl, r4, r8
   3e3f4:	orr	fp, r5, r9
   3e3f8:	eor	r4, r2, sl
   3e3fc:	eor	r5, r3, fp
   3e400:	strd	r4, [r0, #24]
   3e404:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e408:	mov	r0, r6
   3e40c:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e410:	ldrd	r2, [r6, #16]
   3e414:	ldrd	r0, [r6]
   3e418:	eor	r4, r0, sl
   3e41c:	eor	r5, r1, fp
   3e420:	eor	r0, r2, #255	; 0xff
   3e424:	mov	r1, r3
   3e428:	strd	r4, [r6]
   3e42c:	strd	r0, [r6, #16]
   3e430:	mov	r0, r6
   3e434:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e438:	mov	r0, r6
   3e43c:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e440:	mov	r0, r6
   3e444:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e448:	mov	r0, r6
   3e44c:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e450:	ldrd	r2, [r6]
   3e454:	ldrd	r8, [r6, #8]
   3e458:	ldrd	r4, [r6, #16]
   3e45c:	ldrd	sl, [r6, #24]
   3e460:	eor	r0, r2, r8
   3e464:	eor	r1, r3, r9
   3e468:	eor	r2, r0, r4
   3e46c:	eor	r3, r1, r5
   3e470:	eor	r0, sl, r2
   3e474:	eor	r1, fp, r3
   3e478:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   3e47c:	cmp	r0, #0
   3e480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e484:	add	sl, r0, r1
   3e488:	sub	sp, sp, #20
   3e48c:	ldr	r3, [r2, #40]	; 0x28
   3e490:	beq	3e754 <blkid_probe_get_size@plt+0x3723c>
   3e494:	and	ip, r3, #7
   3e498:	add	lr, r3, r1
   3e49c:	cmp	ip, #0
   3e4a0:	mov	r8, r2
   3e4a4:	mov	r9, r0
   3e4a8:	str	lr, [r2, #40]	; 0x28
   3e4ac:	beq	3e590 <blkid_probe_get_size@plt+0x37078>
   3e4b0:	cmp	r0, sl
   3e4b4:	movcs	r1, #1
   3e4b8:	bcs	3e52c <blkid_probe_get_size@plt+0x37014>
   3e4bc:	ldrd	r2, [r2, #32]
   3e4c0:	sub	r6, ip, r0
   3e4c4:	mov	lr, r0
   3e4c8:	lsl	ip, ip, #3
   3e4cc:	ldrb	r0, [lr], #1
   3e4d0:	mov	r1, #0
   3e4d4:	strd	r0, [sp, #8]
   3e4d8:	ldr	r7, [sp, #8]
   3e4dc:	sub	r1, ip, #32
   3e4e0:	ldr	r9, [sp, #8]
   3e4e4:	lsl	r5, r7, r1
   3e4e8:	rsb	r7, ip, #32
   3e4ec:	add	r1, r6, lr
   3e4f0:	cmp	r1, #7
   3e4f4:	lsl	r4, r9, ip
   3e4f8:	orr	r5, r5, r9, lsr r7
   3e4fc:	movhi	r1, #0
   3e500:	movls	r1, #1
   3e504:	orr	r2, r2, r4
   3e508:	orr	r3, r3, r5
   3e50c:	cmp	sl, lr
   3e510:	movls	r0, #0
   3e514:	andhi	r0, r1, #1
   3e518:	cmp	r0, #0
   3e51c:	strd	r2, [r8, #32]
   3e520:	add	ip, ip, #8
   3e524:	mov	r9, lr
   3e528:	bne	3e4cc <blkid_probe_get_size@plt+0x36fb4>
   3e52c:	cmp	sl, r9
   3e530:	movne	r1, #0
   3e534:	andeq	r1, r1, #1
   3e538:	cmp	r1, #0
   3e53c:	beq	3e548 <blkid_probe_get_size@plt+0x37030>
   3e540:	add	sp, sp, #20
   3e544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e548:	ldrd	r4, [r8, #24]
   3e54c:	ldrd	r6, [r8, #32]
   3e550:	mov	r0, r8
   3e554:	eor	r2, r4, r6
   3e558:	eor	r3, r5, r7
   3e55c:	strd	r2, [r8, #24]
   3e560:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e564:	mov	r0, r8
   3e568:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e56c:	ldrd	r0, [r8, #32]
   3e570:	ldrd	r2, [r8]
   3e574:	ldr	lr, [r8, #40]	; 0x28
   3e578:	eor	r4, r2, r0
   3e57c:	eor	r5, r3, r1
   3e580:	mov	r0, #0
   3e584:	mov	r1, #0
   3e588:	strd	r4, [r8]
   3e58c:	strd	r0, [r8, #32]
   3e590:	and	r1, lr, #7
   3e594:	sub	r5, sl, r1
   3e598:	cmp	r9, r5
   3e59c:	bcs	3e64c <blkid_probe_get_size@plt+0x37134>
   3e5a0:	mov	r4, r9
   3e5a4:	ldrb	r6, [r4, #1]
   3e5a8:	ldrb	r3, [r4, #5]
   3e5ac:	ldrb	r2, [r4, #2]
   3e5b0:	ldrb	sl, [r4, #6]
   3e5b4:	ldrb	r0, [r4]
   3e5b8:	ldrb	r1, [r4, #4]
   3e5bc:	ldrb	lr, [r4, #3]
   3e5c0:	ldrb	ip, [r4, #7]
   3e5c4:	orr	r0, r0, r6, lsl #8
   3e5c8:	orr	r1, r1, r3, lsl #8
   3e5cc:	orr	r0, r0, r2, lsl #16
   3e5d0:	orr	r1, r1, sl, lsl #16
   3e5d4:	ldrd	r2, [r8, #24]
   3e5d8:	orr	r0, r0, lr, lsl #24
   3e5dc:	orr	r1, r1, ip, lsl #24
   3e5e0:	mov	r7, r1
   3e5e4:	mov	r6, r0
   3e5e8:	eor	r6, r6, r2
   3e5ec:	eor	r7, r7, r3
   3e5f0:	mov	sl, r0
   3e5f4:	strd	r6, [r8, #24]
   3e5f8:	mov	r0, r8
   3e5fc:	mov	fp, r1
   3e600:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e604:	mov	r0, r8
   3e608:	bl	3e2c0 <blkid_probe_get_size@plt+0x36da8>
   3e60c:	ldrd	r2, [r8]
   3e610:	mov	r6, sl
   3e614:	mov	r7, fp
   3e618:	add	r4, r4, #8
   3e61c:	eor	r6, r6, r2
   3e620:	eor	r7, r7, r3
   3e624:	cmp	r5, r4
   3e628:	strd	r6, [r8]
   3e62c:	bhi	3e5a4 <blkid_probe_get_size@plt+0x3708c>
   3e630:	mvn	r3, r9
   3e634:	add	r5, r5, r3
   3e638:	bic	r5, r5, #7
   3e63c:	ldr	r1, [r8, #40]	; 0x28
   3e640:	add	r5, r5, #8
   3e644:	add	r9, r9, r5
   3e648:	and	r1, r1, #7
   3e64c:	sub	r1, r1, #1
   3e650:	cmp	r1, #6
   3e654:	addls	pc, pc, r1, lsl #2
   3e658:	b	3e540 <blkid_probe_get_size@plt+0x37028>
   3e65c:	b	3e678 <blkid_probe_get_size@plt+0x37160>
   3e660:	b	3e698 <blkid_probe_get_size@plt+0x37180>
   3e664:	b	3e6b8 <blkid_probe_get_size@plt+0x371a0>
   3e668:	b	3e6d8 <blkid_probe_get_size@plt+0x371c0>
   3e66c:	b	3e6f8 <blkid_probe_get_size@plt+0x371e0>
   3e670:	b	3e714 <blkid_probe_get_size@plt+0x371fc>
   3e674:	b	3e734 <blkid_probe_get_size@plt+0x3721c>
   3e678:	ldrd	r4, [r8, #32]
   3e67c:	ldrb	r0, [r9]
   3e680:	mov	r1, #0
   3e684:	orr	r3, r5, r1
   3e688:	orr	r2, r4, r0
   3e68c:	strd	r2, [r8, #32]
   3e690:	add	sp, sp, #20
   3e694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e698:	ldrd	r0, [r8, #32]
   3e69c:	ldrb	r4, [r9, #1]
   3e6a0:	lsr	r3, r4, #24
   3e6a4:	lsl	r2, r4, #8
   3e6a8:	orr	r4, r2, r0
   3e6ac:	orr	r5, r3, r1
   3e6b0:	strd	r4, [r8, #32]
   3e6b4:	b	3e67c <blkid_probe_get_size@plt+0x37164>
   3e6b8:	ldrd	r6, [r8, #32]
   3e6bc:	ldrb	r4, [r9, #2]
   3e6c0:	lsr	r3, r4, #16
   3e6c4:	lsl	r2, r4, #16
   3e6c8:	orr	r0, r6, r2
   3e6cc:	orr	r1, r7, r3
   3e6d0:	strd	r0, [r8, #32]
   3e6d4:	b	3e69c <blkid_probe_get_size@plt+0x37184>
   3e6d8:	ldrd	r0, [r8, #32]
   3e6dc:	ldrb	r4, [r9, #3]
   3e6e0:	lsr	r3, r4, #8
   3e6e4:	lsl	r2, r4, #24
   3e6e8:	orr	r6, r0, r2
   3e6ec:	orr	r7, r1, r3
   3e6f0:	strd	r6, [r8, #32]
   3e6f4:	b	3e6bc <blkid_probe_get_size@plt+0x371a4>
   3e6f8:	ldrd	r4, [r8, #32]
   3e6fc:	ldrb	r3, [r9, #4]
   3e700:	mov	r2, #0
   3e704:	orr	r0, r4, r2
   3e708:	orr	r1, r5, r3
   3e70c:	strd	r0, [r8, #32]
   3e710:	b	3e6dc <blkid_probe_get_size@plt+0x371c4>
   3e714:	ldrd	r6, [r8, #32]
   3e718:	ldrb	r4, [r9, #5]
   3e71c:	mov	r0, #0
   3e720:	lsl	r1, r4, #8
   3e724:	orr	r5, r1, r7
   3e728:	orr	r4, r0, r6
   3e72c:	strd	r4, [r8, #32]
   3e730:	b	3e6fc <blkid_probe_get_size@plt+0x371e4>
   3e734:	ldrb	r2, [r9, #6]
   3e738:	mov	r0, #0
   3e73c:	lsl	r1, r2, #16
   3e740:	ldrd	r2, [r8, #32]
   3e744:	orr	r6, r2, r0
   3e748:	orr	r7, r3, r1
   3e74c:	strd	r6, [r8, #32]
   3e750:	b	3e718 <blkid_probe_get_size@plt+0x37200>
   3e754:	ldr	r2, [pc, #32]	; 3e77c <blkid_probe_get_size@plt+0x37264>
   3e758:	ldr	r1, [pc, #32]	; 3e780 <blkid_probe_get_size@plt+0x37268>
   3e75c:	add	r2, pc, r2
   3e760:	add	r2, r2, #988	; 0x3dc
   3e764:	str	r2, [sp]
   3e768:	ldr	r2, [pc, #20]	; 3e784 <blkid_probe_get_size@plt+0x3726c>
   3e76c:	mov	r3, #78	; 0x4e
   3e770:	add	r2, pc, r2
   3e774:	add	r1, pc, r1
   3e778:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e77c:	andeq	r0, r3, r4, ror r2
   3e780:			; <UNDEFINED> instruction: 0x000388b0
   3e784:	muleq	r3, ip, r3
   3e788:	ldr	r3, [pc, #416]	; 3e930 <blkid_probe_get_size@plt+0x37418>
   3e78c:	ldr	r2, [pc, #416]	; 3e934 <blkid_probe_get_size@plt+0x3741c>
   3e790:	add	r3, pc, r3
   3e794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e798:	add	fp, sp, #32
   3e79c:	sub	sp, sp, #100	; 0x64
   3e7a0:	ldr	r8, [r3, r2]
   3e7a4:	subs	r6, r0, #0
   3e7a8:	ldr	r3, [r8]
   3e7ac:	str	r3, [fp, #-40]	; 0xffffffd8
   3e7b0:	beq	3e8d8 <blkid_probe_get_size@plt+0x373c0>
   3e7b4:	ldr	r3, [pc, #380]	; 3e938 <blkid_probe_get_size@plt+0x37420>
   3e7b8:	mov	r7, r1
   3e7bc:	add	r3, pc, r3
   3e7c0:	mov	r1, r3
   3e7c4:	str	r3, [fp, #-60]	; 0xffffffc4
   3e7c8:	ldr	r3, [pc, #364]	; 3e93c <blkid_probe_get_size@plt+0x37424>
   3e7cc:	ldr	r0, [pc, #364]	; 3e940 <blkid_probe_get_size@plt+0x37428>
   3e7d0:	ldr	r2, [pc, #364]	; 3e944 <blkid_probe_get_size@plt+0x3742c>
   3e7d4:	add	r3, pc, r3
   3e7d8:	sub	r4, fp, #60	; 0x3c
   3e7dc:	sub	r5, fp, #124	; 0x7c
   3e7e0:	add	r0, pc, r0
   3e7e4:	add	r2, pc, r2
   3e7e8:	str	r3, [fp, #-48]	; 0xffffffd0
   3e7ec:	mov	r3, #0
   3e7f0:	str	r0, [fp, #-56]	; 0xffffffc8
   3e7f4:	str	r2, [fp, #-52]	; 0xffffffcc
   3e7f8:	str	r3, [fp, #-44]	; 0xffffffd4
   3e7fc:	mov	r2, r5
   3e800:	mov	r0, r6
   3e804:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   3e808:	cmp	r0, #0
   3e80c:	bge	3e83c <blkid_probe_get_size@plt+0x37324>
   3e810:	ldr	r1, [r4, #4]!
   3e814:	cmp	r1, #0
   3e818:	bne	3e7fc <blkid_probe_get_size@plt+0x372e4>
   3e81c:	mvn	r3, #1
   3e820:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3e824:	ldr	r2, [r8]
   3e828:	mov	r0, r3
   3e82c:	cmp	r1, r2
   3e830:	bne	3e92c <blkid_probe_get_size@plt+0x37414>
   3e834:	sub	sp, fp, #32
   3e838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e83c:	ldr	r9, [fp, #-124]	; 0xffffff84
   3e840:	cmp	r9, #0
   3e844:	beq	3e81c <blkid_probe_get_size@plt+0x37304>
   3e848:	mov	r0, r9
   3e84c:	bl	723c <strlen@plt>
   3e850:	add	r6, r0, #16
   3e854:	cmp	r6, #4194304	; 0x400000
   3e858:	mov	sl, r0
   3e85c:	bhi	3e900 <blkid_probe_get_size@plt+0x373e8>
   3e860:	add	r3, r0, #30
   3e864:	bic	r3, r3, #7
   3e868:	sub	sp, sp, r3
   3e86c:	add	r4, sp, #8
   3e870:	mov	r0, r4
   3e874:	bl	34380 <blkid_probe_get_size@plt+0x2ce68>
   3e878:	subs	r3, r0, #0
   3e87c:	blt	3e820 <blkid_probe_get_size@plt+0x37308>
   3e880:	mov	r2, sl
   3e884:	mov	r1, r9
   3e888:	add	r0, r4, #16
   3e88c:	bl	71e8 <memcpy@plt>
   3e890:	ldr	r3, [pc, #176]	; 3e948 <blkid_probe_get_size@plt+0x37430>
   3e894:	sub	ip, fp, #76	; 0x4c
   3e898:	add	r3, pc, r3
   3e89c:	add	r3, r3, #1040	; 0x410
   3e8a0:	ldm	r3, {r0, r1, r2, r3}
   3e8a4:	stm	ip, {r0, r1, r2, r3}
   3e8a8:	mov	r1, ip
   3e8ac:	mov	r0, r5
   3e8b0:	bl	3e198 <blkid_probe_get_size@plt+0x36c80>
   3e8b4:	mov	r2, r5
   3e8b8:	mov	r1, r6
   3e8bc:	mov	r0, r4
   3e8c0:	bl	3e47c <blkid_probe_get_size@plt+0x36f64>
   3e8c4:	mov	r0, r5
   3e8c8:	bl	3e3d4 <blkid_probe_get_size@plt+0x36ebc>
   3e8cc:	mov	r3, #0
   3e8d0:	strd	r0, [r7]
   3e8d4:	b	3e820 <blkid_probe_get_size@plt+0x37308>
   3e8d8:	ldr	r2, [pc, #108]	; 3e94c <blkid_probe_get_size@plt+0x37434>
   3e8dc:	ldr	r1, [pc, #108]	; 3e950 <blkid_probe_get_size@plt+0x37438>
   3e8e0:	add	r2, pc, r2
   3e8e4:	add	r2, r2, #1008	; 0x3f0
   3e8e8:	str	r2, [sp]
   3e8ec:	ldr	r2, [pc, #96]	; 3e954 <blkid_probe_get_size@plt+0x3743c>
   3e8f0:	mov	r3, #47	; 0x2f
   3e8f4:	add	r2, pc, r2
   3e8f8:	add	r1, pc, r1
   3e8fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e900:	ldr	r2, [pc, #80]	; 3e958 <blkid_probe_get_size@plt+0x37440>
   3e904:	ldr	r1, [pc, #80]	; 3e95c <blkid_probe_get_size@plt+0x37444>
   3e908:	add	r2, pc, r2
   3e90c:	add	r2, r2, #1008	; 0x3f0
   3e910:	str	r2, [sp]
   3e914:	ldr	r2, [pc, #68]	; 3e960 <blkid_probe_get_size@plt+0x37448>
   3e918:	mov	r3, #55	; 0x37
   3e91c:	add	r2, pc, r2
   3e920:	add	r1, pc, r1
   3e924:	mov	r0, #0
   3e928:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3e92c:	bl	6fb4 <__stack_chk_fail@plt>
   3e930:	ldrdeq	r9, [r5], -r8
   3e934:	andeq	r0, r0, ip, lsr r4
   3e938:	andeq	r1, r3, ip, ror #6
   3e93c:	muleq	r3, r0, r3
   3e940:	andeq	r1, r3, ip, asr r3
   3e944:	andeq	r1, r3, ip, ror #6
   3e948:	andeq	r0, r3, r8, lsr r1
   3e94c:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   3e950:	andeq	ip, r2, r8, ror #12
   3e954:	andeq	r0, r3, r0, asr #27
   3e958:	andeq	r0, r3, r8, asr #1
   3e95c:	andeq	r1, r3, r4, asr r2
   3e960:	muleq	r3, r8, sp
   3e964:	cmp	r0, #31
   3e968:	push	{r4, r5, r6, lr}
   3e96c:	mov	r4, r0
   3e970:	sub	sp, sp, #8
   3e974:	bhi	3e998 <blkid_probe_get_size@plt+0x37480>
   3e978:	ldr	r2, [pc, #296]	; 3eaa8 <blkid_probe_get_size@plt+0x37590>
   3e97c:	add	r2, pc, r2
   3e980:	add	r2, r2, r0, lsl #2
   3e984:	ldr	r0, [r2, #372]	; 0x174
   3e988:	cmp	r0, #0
   3e98c:	beq	3e998 <blkid_probe_get_size@plt+0x37480>
   3e990:	add	sp, sp, #8
   3e994:	pop	{r4, r5, r6, pc}
   3e998:	bl	6e58 <__libc_current_sigrtmin@plt>
   3e99c:	cmp	r0, r4
   3e9a0:	ble	3e9fc <blkid_probe_get_size@plt+0x374e4>
   3e9a4:	ldr	r0, [pc, #256]	; 3eaac <blkid_probe_get_size@plt+0x37594>
   3e9a8:	ldr	r5, [pc, #256]	; 3eab0 <blkid_probe_get_size@plt+0x37598>
   3e9ac:	add	r0, pc, r0
   3e9b0:	bl	74dc <__tls_get_addr@plt>
   3e9b4:	ldr	r2, [pc, #248]	; 3eab4 <blkid_probe_get_size@plt+0x3759c>
   3e9b8:	mov	r3, #19
   3e9bc:	add	r2, pc, r2
   3e9c0:	mov	r1, r3
   3e9c4:	stm	sp, {r2, r4}
   3e9c8:	mov	r2, #1
   3e9cc:	add	r0, r5, r0
   3e9d0:	add	r0, r0, #8
   3e9d4:	bl	7260 <__snprintf_chk@plt>
   3e9d8:	cmp	r0, #18
   3e9dc:	bhi	3ea7c <blkid_probe_get_size@plt+0x37564>
   3e9e0:	ldr	r0, [pc, #208]	; 3eab8 <blkid_probe_get_size@plt+0x375a0>
   3e9e4:	add	r0, pc, r0
   3e9e8:	bl	74dc <__tls_get_addr@plt>
   3e9ec:	add	r0, r5, r0
   3e9f0:	add	r0, r0, #8
   3e9f4:	add	sp, sp, #8
   3e9f8:	pop	{r4, r5, r6, pc}
   3e9fc:	bl	73bc <__libc_current_sigrtmax@plt>
   3ea00:	cmp	r0, r4
   3ea04:	blt	3e9a4 <blkid_probe_get_size@plt+0x3748c>
   3ea08:	bl	6e58 <__libc_current_sigrtmin@plt>
   3ea0c:	ldr	r5, [pc, #156]	; 3eab0 <blkid_probe_get_size@plt+0x37598>
   3ea10:	mov	r6, r0
   3ea14:	ldr	r0, [pc, #160]	; 3eabc <blkid_probe_get_size@plt+0x375a4>
   3ea18:	sub	r4, r4, r6
   3ea1c:	add	r0, pc, r0
   3ea20:	bl	74dc <__tls_get_addr@plt>
   3ea24:	ldr	r2, [pc, #148]	; 3eac0 <blkid_probe_get_size@plt+0x375a8>
   3ea28:	mov	r3, #19
   3ea2c:	add	r2, pc, r2
   3ea30:	mov	r1, r3
   3ea34:	stm	sp, {r2, r4}
   3ea38:	mov	r2, #1
   3ea3c:	add	r0, r5, r0
   3ea40:	add	r0, r0, #8
   3ea44:	bl	7260 <__snprintf_chk@plt>
   3ea48:	cmp	r0, #18
   3ea4c:	bls	3e9e0 <blkid_probe_get_size@plt+0x374c8>
   3ea50:	ldr	r2, [pc, #108]	; 3eac4 <blkid_probe_get_size@plt+0x375ac>
   3ea54:	ldr	r1, [pc, #108]	; 3eac8 <blkid_probe_get_size@plt+0x375b0>
   3ea58:	add	r2, pc, r2
   3ea5c:	add	r2, r2, #1056	; 0x420
   3ea60:	str	r2, [sp]
   3ea64:	ldr	r2, [pc, #96]	; 3eacc <blkid_probe_get_size@plt+0x375b4>
   3ea68:	mov	r3, #219	; 0xdb
   3ea6c:	add	r2, pc, r2
   3ea70:	add	r1, pc, r1
   3ea74:	mov	r0, #0
   3ea78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ea7c:	ldr	r2, [pc, #76]	; 3ead0 <blkid_probe_get_size@plt+0x375b8>
   3ea80:	ldr	r1, [pc, #76]	; 3ead4 <blkid_probe_get_size@plt+0x375bc>
   3ea84:	add	r2, pc, r2
   3ea88:	add	r2, r2, #1056	; 0x420
   3ea8c:	str	r2, [sp]
   3ea90:	ldr	r2, [pc, #64]	; 3ead8 <blkid_probe_get_size@plt+0x375c0>
   3ea94:	mov	r3, #221	; 0xdd
   3ea98:	add	r2, pc, r2
   3ea9c:	add	r1, pc, r1
   3eaa0:	mov	r0, #0
   3eaa4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3eaa8:	andeq	fp, r4, r4, asr #7
   3eaac:	andeq	r9, r5, ip, ror #11
   3eab0:	andeq	r0, r0, r8, lsr r0
   3eab4:	andeq	r5, r3, r4, asr r4
   3eab8:			; <UNDEFINED> instruction: 0x000595b4
   3eabc:	andeq	r9, r5, ip, ror r5
   3eac0:	andeq	r1, r3, ip, ror #2
   3eac4:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   3eac8:	andeq	r8, r2, r8, ror #16
   3eacc:	andeq	r1, r3, r8, lsr r1
   3ead0:	andeq	pc, r2, ip, asr #30
   3ead4:	andeq	r8, r2, ip, lsr r8
   3ead8:	andeq	r1, r3, ip, lsl #2
   3eadc:	ldr	r3, [pc, #644]	; 3ed68 <blkid_probe_get_size@plt+0x37850>
   3eae0:	ldr	r2, [pc, #644]	; 3ed6c <blkid_probe_get_size@plt+0x37854>
   3eae4:	add	r3, pc, r3
   3eae8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3eaec:	sub	sp, sp, #172	; 0xac
   3eaf0:	ldr	r5, [r3, r2]
   3eaf4:	mov	r4, #0
   3eaf8:	subs	r7, r0, #0
   3eafc:	ldr	r3, [r5]
   3eb00:	str	r4, [sp, #24]
   3eb04:	str	r3, [sp, #164]	; 0xa4
   3eb08:	beq	3ec1c <blkid_probe_get_size@plt+0x37704>
   3eb0c:	ldr	r8, [pc, #604]	; 3ed70 <blkid_probe_get_size@plt+0x37858>
   3eb10:	mov	r6, r1
   3eb14:	add	r8, pc, r8
   3eb18:	ldr	r1, [r8, #2052]	; 0x804
   3eb1c:	cmp	r1, #0
   3eb20:	beq	3eba0 <blkid_probe_get_size@plt+0x37688>
   3eb24:	mov	r1, #2654208	; 0x288000
   3eb28:	bl	6ec4 <open64@plt>
   3eb2c:	subs	r9, r0, #0
   3eb30:	bge	3eb7c <blkid_probe_get_size@plt+0x37664>
   3eb34:	bl	732c <__errno_location@plt>
   3eb38:	cmp	r6, #0
   3eb3c:	ldr	r1, [r0]
   3eb40:	bne	3ebac <blkid_probe_get_size@plt+0x37694>
   3eb44:	rsb	r4, r1, #0
   3eb48:	mov	r0, r9
   3eb4c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   3eb50:	ldr	r0, [sp, #24]
   3eb54:	cmp	r0, #0
   3eb58:	beq	3eb60 <blkid_probe_get_size@plt+0x37648>
   3eb5c:	bl	7254 <freecon@plt>
   3eb60:	ldr	r2, [sp, #164]	; 0xa4
   3eb64:	ldr	r3, [r5]
   3eb68:	mov	r0, r4
   3eb6c:	cmp	r2, r3
   3eb70:	bne	3ed64 <blkid_probe_get_size@plt+0x3784c>
   3eb74:	add	sp, sp, #172	; 0xac
   3eb78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3eb7c:	add	r2, sp, #32
   3eb80:	mov	r1, r9
   3eb84:	mov	r0, #3
   3eb88:	bl	6c90 <__fxstat64@plt>
   3eb8c:	cmp	r0, #0
   3eb90:	bge	3ebb8 <blkid_probe_get_size@plt+0x376a0>
   3eb94:	bl	732c <__errno_location@plt>
   3eb98:	ldr	r1, [r0]
   3eb9c:	b	3eb44 <blkid_probe_get_size@plt+0x3762c>
   3eba0:	mov	r4, r1
   3eba4:	mvn	r9, #0
   3eba8:	b	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ebac:	cmp	r1, #2
   3ebb0:	bne	3eb44 <blkid_probe_get_size@plt+0x3762c>
   3ebb4:	b	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ebb8:	ldr	r0, [r8, #2052]	; 0x804
   3ebbc:	ldr	r3, [sp, #48]	; 0x30
   3ebc0:	mov	r2, r7
   3ebc4:	add	r1, sp, #24
   3ebc8:	bl	68d0 <selabel_lookup_raw@plt>
   3ebcc:	cmp	r0, #0
   3ebd0:	bge	3ec48 <blkid_probe_get_size@plt+0x37730>
   3ebd4:	bl	732c <__errno_location@plt>
   3ebd8:	ldr	r1, [r0]
   3ebdc:	cmp	r1, #2
   3ebe0:	rsbne	r4, r1, #0
   3ebe4:	beq	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ebe8:	bl	71a0 <security_getenforce@plt>
   3ebec:	ldr	r3, [pc, #384]	; 3ed74 <blkid_probe_get_size@plt+0x3785c>
   3ebf0:	add	r3, pc, r3
   3ebf4:	ldr	r3, [r3]
   3ebf8:	cmp	r0, #1
   3ebfc:	movne	r0, #7
   3ec00:	moveq	r0, #3
   3ec04:	cmp	r0, r3
   3ec08:	ble	3ecdc <blkid_probe_get_size@plt+0x377c4>
   3ec0c:	bl	71a0 <security_getenforce@plt>
   3ec10:	cmp	r0, #1
   3ec14:	movne	r4, #0
   3ec18:	b	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ec1c:	ldr	r2, [pc, #340]	; 3ed78 <blkid_probe_get_size@plt+0x37860>
   3ec20:	ldr	r1, [pc, #340]	; 3ed7c <blkid_probe_get_size@plt+0x37864>
   3ec24:	add	r2, pc, r2
   3ec28:	add	r2, r2, #1072	; 0x430
   3ec2c:	add	r2, r2, #4
   3ec30:	str	r2, [sp]
   3ec34:	ldr	r2, [pc, #324]	; 3ed80 <blkid_probe_get_size@plt+0x37868>
   3ec38:	mov	r3, #117	; 0x75
   3ec3c:	add	r2, pc, r2
   3ec40:	add	r1, pc, r1
   3ec44:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ec48:	ldr	r2, [pc, #308]	; 3ed84 <blkid_probe_get_size@plt+0x3786c>
   3ec4c:	add	r3, sp, #136	; 0x88
   3ec50:	str	r3, [sp, #20]
   3ec54:	add	r2, pc, r2
   3ec58:	mov	r3, #26
   3ec5c:	str	r2, [sp]
   3ec60:	str	r9, [sp, #4]
   3ec64:	ldr	r0, [sp, #20]
   3ec68:	mov	r1, r3
   3ec6c:	mov	r2, #1
   3ec70:	bl	7260 <__snprintf_chk@plt>
   3ec74:	cmp	r0, #25
   3ec78:	bhi	3ed28 <blkid_probe_get_size@plt+0x37810>
   3ec7c:	ldrd	r0, [sp, #20]
   3ec80:	bl	72a8 <setfilecon_raw@plt>
   3ec84:	cmp	r0, #0
   3ec88:	bge	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ec8c:	str	r4, [sp, #28]
   3ec90:	bl	732c <__errno_location@plt>
   3ec94:	ldr	r4, [r0]
   3ec98:	cmp	r4, #95	; 0x5f
   3ec9c:	beq	3ed20 <blkid_probe_get_size@plt+0x37808>
   3eca0:	add	r1, sp, #28
   3eca4:	ldr	r0, [sp, #20]
   3eca8:	bl	68b8 <getfilecon_raw@plt>
   3ecac:	ldr	r6, [sp, #28]
   3ecb0:	cmp	r0, #0
   3ecb4:	blt	3ed58 <blkid_probe_get_size@plt+0x37840>
   3ecb8:	ldr	r0, [sp, #24]
   3ecbc:	mov	r1, r6
   3ecc0:	bl	7314 <strcmp@plt>
   3ecc4:	cmp	r0, #0
   3ecc8:	beq	3ed18 <blkid_probe_get_size@plt+0x37800>
   3eccc:	mov	r0, r6
   3ecd0:	bl	7254 <freecon@plt>
   3ecd4:	rsb	r4, r4, #0
   3ecd8:	b	3ebe8 <blkid_probe_get_size@plt+0x376d0>
   3ecdc:	ldr	r3, [pc, #164]	; 3ed88 <blkid_probe_get_size@plt+0x37870>
   3ece0:	ldr	r2, [pc, #164]	; 3ed8c <blkid_probe_get_size@plt+0x37874>
   3ece4:	add	r3, pc, r3
   3ece8:	add	r2, pc, r2
   3ecec:	str	r2, [sp, #4]
   3ecf0:	add	r3, r3, #1088	; 0x440
   3ecf4:	ldr	r2, [pc, #148]	; 3ed90 <blkid_probe_get_size@plt+0x37878>
   3ecf8:	add	r3, r3, #4
   3ecfc:	str	r3, [sp]
   3ed00:	str	r7, [sp, #8]
   3ed04:	mov	r3, #169	; 0xa9
   3ed08:	add	r2, pc, r2
   3ed0c:	mov	r1, r4
   3ed10:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3ed14:	b	3ec0c <blkid_probe_get_size@plt+0x376f4>
   3ed18:	mov	r0, r6
   3ed1c:	bl	7254 <freecon@plt>
   3ed20:	mov	r4, #0
   3ed24:	b	3eb48 <blkid_probe_get_size@plt+0x37630>
   3ed28:	ldr	r3, [pc, #100]	; 3ed94 <blkid_probe_get_size@plt+0x3787c>
   3ed2c:	ldr	r2, [pc, #100]	; 3ed98 <blkid_probe_get_size@plt+0x37880>
   3ed30:	add	r3, pc, r3
   3ed34:	add	r3, r3, #1072	; 0x430
   3ed38:	ldr	r1, [pc, #92]	; 3ed9c <blkid_probe_get_size@plt+0x37884>
   3ed3c:	add	r3, r3, #4
   3ed40:	str	r3, [sp]
   3ed44:	mov	r0, r4
   3ed48:	mov	r3, #145	; 0x91
   3ed4c:	add	r2, pc, r2
   3ed50:	add	r1, pc, r1
   3ed54:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ed58:	cmp	r6, #0
   3ed5c:	beq	3ecd4 <blkid_probe_get_size@plt+0x377bc>
   3ed60:	b	3eccc <blkid_probe_get_size@plt+0x377b4>
   3ed64:	bl	6fb4 <__stack_chk_fail@plt>
   3ed68:	andeq	r9, r5, r4, lsl #1
   3ed6c:	andeq	r0, r0, ip, lsr r4
   3ed70:	andeq	r9, r5, r8, lsr #22
   3ed74:	andeq	r9, r5, ip, asr #10
   3ed78:	andeq	pc, r2, ip, lsr #27
   3ed7c:	ldrdeq	ip, [r2], -r4
   3ed80:	andeq	r9, r2, r0, lsl #2
   3ed84:	andeq	fp, r2, r0, ror r5
   3ed88:	andeq	pc, r2, ip, ror #25
   3ed8c:	ldrdeq	r0, [r3], -r8
   3ed90:	andeq	r9, r2, r4, lsr r0
   3ed94:	andeq	pc, r2, r0, lsr #25
   3ed98:	strdeq	r8, [r2], -r0
   3ed9c:	andeq	lr, r2, r8, ror #18
   3eda0:	ldr	r3, [pc, #256]	; 3eea8 <blkid_probe_get_size@plt+0x37990>
   3eda4:	ldr	r2, [pc, #256]	; 3eeac <blkid_probe_get_size@plt+0x37994>
   3eda8:	add	r3, pc, r3
   3edac:	push	{r4, r5, r6, lr}
   3edb0:	sub	sp, sp, #144	; 0x90
   3edb4:	ldr	r5, [r3, r2]
   3edb8:	subs	r6, r0, #0
   3edbc:	ldr	r3, [r5]
   3edc0:	str	r3, [sp, #140]	; 0x8c
   3edc4:	ble	3ee34 <blkid_probe_get_size@plt+0x3791c>
   3edc8:	cmp	r1, #0
   3edcc:	mov	r4, r1
   3edd0:	addeq	r4, sp, #12
   3edd4:	mov	r2, #128	; 0x80
   3edd8:	mov	r1, #0
   3eddc:	mov	r0, r4
   3ede0:	bl	6c84 <memset@plt>
   3ede4:	mov	r3, #4
   3ede8:	mov	r2, r4
   3edec:	mov	r1, r6
   3edf0:	mov	r0, #1
   3edf4:	bl	6f48 <waitid@plt>
   3edf8:	cmp	r0, #0
   3edfc:	bge	3ee64 <blkid_probe_get_size@plt+0x3794c>
   3ee00:	bl	732c <__errno_location@plt>
   3ee04:	ldr	r0, [r0]
   3ee08:	cmp	r0, #4
   3ee0c:	beq	3edd4 <blkid_probe_get_size@plt+0x378bc>
   3ee10:	cmp	r0, #0
   3ee14:	rsbgt	r0, r0, #0
   3ee18:	ble	3ee6c <blkid_probe_get_size@plt+0x37954>
   3ee1c:	ldr	r2, [sp, #140]	; 0x8c
   3ee20:	ldr	r3, [r5]
   3ee24:	cmp	r2, r3
   3ee28:	bne	3eea4 <blkid_probe_get_size@plt+0x3798c>
   3ee2c:	add	sp, sp, #144	; 0x90
   3ee30:	pop	{r4, r5, r6, pc}
   3ee34:	ldr	r2, [pc, #116]	; 3eeb0 <blkid_probe_get_size@plt+0x37998>
   3ee38:	ldr	r1, [pc, #116]	; 3eeb4 <blkid_probe_get_size@plt+0x3799c>
   3ee3c:	add	r2, pc, r2
   3ee40:	add	r2, r2, #1104	; 0x450
   3ee44:	add	r2, r2, #4
   3ee48:	str	r2, [sp]
   3ee4c:	ldr	r2, [pc, #100]	; 3eeb8 <blkid_probe_get_size@plt+0x379a0>
   3ee50:	mov	r3, #688	; 0x2b0
   3ee54:	add	r2, pc, r2
   3ee58:	add	r1, pc, r1
   3ee5c:	mov	r0, #0
   3ee60:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ee64:	mov	r0, #0
   3ee68:	b	3ee1c <blkid_probe_get_size@plt+0x37904>
   3ee6c:	ldr	r2, [pc, #72]	; 3eebc <blkid_probe_get_size@plt+0x379a4>
   3ee70:	ldr	r1, [pc, #72]	; 3eec0 <blkid_probe_get_size@plt+0x379a8>
   3ee74:	add	r2, pc, r2
   3ee78:	add	r2, r2, #1120	; 0x460
   3ee7c:	add	r2, r2, #8
   3ee80:	str	r2, [sp]
   3ee84:	ldr	r2, [pc, #56]	; 3eec4 <blkid_probe_get_size@plt+0x379ac>
   3ee88:	mov	r0, #0
   3ee8c:	mov	r3, #197	; 0xc5
   3ee90:	add	r2, pc, r2
   3ee94:	add	r1, pc, r1
   3ee98:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   3ee9c:	mvn	r0, #21
   3eea0:	b	3ee1c <blkid_probe_get_size@plt+0x37904>
   3eea4:	bl	6fb4 <__stack_chk_fail@plt>
   3eea8:	andeq	r8, r5, r0, asr #27
   3eeac:	andeq	r0, r0, ip, lsr r4
   3eeb0:	muleq	r2, r4, fp
   3eeb4:	muleq	r3, ip, sp
   3eeb8:	muleq	r3, r0, r7
   3eebc:	andeq	pc, r2, ip, asr fp	; <UNPREDICTABLE>
   3eec0:	andeq	r0, r3, ip, ror #26
   3eec4:	andeq	r9, r2, r0, lsl sl
   3eec8:	subs	r2, r0, #0
   3eecc:	beq	3ef20 <blkid_probe_get_size@plt+0x37a08>
   3eed0:	sub	r2, r2, #1
   3eed4:	sub	r1, r1, #1
   3eed8:	ldrb	r3, [r2, #1]!
   3eedc:	ldrb	r0, [r1, #1]!
   3eee0:	cmp	r3, #0
   3eee4:	bne	3eef4 <blkid_probe_get_size@plt+0x379dc>
   3eee8:	clz	r0, r0
   3eeec:	lsr	r0, r0, #5
   3eef0:	bx	lr
   3eef4:	cmp	r0, r3
   3eef8:	beq	3eed8 <blkid_probe_get_size@plt+0x379c0>
   3eefc:	cmp	r3, #95	; 0x5f
   3ef00:	cmpeq	r0, #45	; 0x2d
   3ef04:	beq	3eed8 <blkid_probe_get_size@plt+0x379c0>
   3ef08:	cmp	r3, #45	; 0x2d
   3ef0c:	cmpeq	r0, #95	; 0x5f
   3ef10:	moveq	r0, #1
   3ef14:	movne	r0, #0
   3ef18:	beq	3eed8 <blkid_probe_get_size@plt+0x379c0>
   3ef1c:	bx	lr
   3ef20:	ldr	r2, [pc, #44]	; 3ef54 <blkid_probe_get_size@plt+0x37a3c>
   3ef24:	push	{lr}		; (str lr, [sp, #-4]!)
   3ef28:	add	r2, pc, r2
   3ef2c:	sub	sp, sp, #12
   3ef30:	add	r2, r2, #1136	; 0x470
   3ef34:	add	r2, r2, #8
   3ef38:	str	r2, [sp]
   3ef3c:	ldr	r1, [pc, #20]	; 3ef58 <blkid_probe_get_size@plt+0x37a40>
   3ef40:	ldr	r2, [pc, #20]	; 3ef5c <blkid_probe_get_size@plt+0x37a44>
   3ef44:	mov	r3, #147	; 0x93
   3ef48:	add	r2, pc, r2
   3ef4c:	add	r1, pc, r1
   3ef50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ef54:	andeq	pc, r2, r8, lsr #21
   3ef58:	andeq	r5, r3, ip, ror #7
   3ef5c:	andeq	r0, r3, r4, asr #25
   3ef60:	push	{r4, lr}
   3ef64:	mov	r4, r0
   3ef68:	ldr	r0, [pc, #88]	; 3efc8 <blkid_probe_get_size@plt+0x37ab0>
   3ef6c:	add	r0, pc, r0
   3ef70:	bl	744c <secure_getenv@plt>
   3ef74:	cmp	r0, #0
   3ef78:	beq	3ef94 <blkid_probe_get_size@plt+0x37a7c>
   3ef7c:	bl	74e8 <strdup@plt>
   3ef80:	cmp	r0, #0
   3ef84:	beq	3efc0 <blkid_probe_get_size@plt+0x37aa8>
   3ef88:	str	r0, [r4]
   3ef8c:	mov	r0, #0
   3ef90:	pop	{r4, pc}
   3ef94:	bl	3a708 <blkid_probe_get_size@plt+0x331f0>
   3ef98:	cmp	r0, #0
   3ef9c:	ble	3efac <blkid_probe_get_size@plt+0x37a94>
   3efa0:	mov	r0, r4
   3efa4:	pop	{r4, lr}
   3efa8:	b	48a58 <blkid_probe_get_size@plt+0x41540>
   3efac:	ldr	r0, [pc, #24]	; 3efcc <blkid_probe_get_size@plt+0x37ab4>
   3efb0:	mov	r1, r4
   3efb4:	add	r0, pc, r0
   3efb8:	pop	{r4, lr}
   3efbc:	b	2d618 <blkid_probe_get_size@plt+0x26100>
   3efc0:	mvn	r0, #11
   3efc4:	pop	{r4, pc}
   3efc8:			; <UNDEFINED> instruction: 0x00030cbc
   3efcc:	andeq	r0, r3, ip, lsl #25
   3efd0:	ldr	r3, [pc, #468]	; 3f1ac <blkid_probe_get_size@plt+0x37c94>
   3efd4:	ldr	ip, [pc, #468]	; 3f1b0 <blkid_probe_get_size@plt+0x37c98>
   3efd8:	add	r3, pc, r3
   3efdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3efe0:	mov	r5, r1
   3efe4:	ldr	r1, [r3, ip]
   3efe8:	sub	sp, sp, #44	; 0x2c
   3efec:	mov	r4, #0
   3eff0:	ldr	r3, [r1]
   3eff4:	subs	r6, r0, #0
   3eff8:	str	r1, [sp, #8]
   3effc:	str	r4, [sp, #28]
   3f000:	str	r3, [sp, #36]	; 0x24
   3f004:	str	r4, [sp, #24]
   3f008:	beq	3f12c <blkid_probe_get_size@plt+0x37c14>
   3f00c:	ldrb	r0, [r6]
   3f010:	cmp	r0, r4
   3f014:	beq	3f0fc <blkid_probe_get_size@plt+0x37be4>
   3f018:	add	r0, sp, #28
   3f01c:	mov	sl, r2
   3f020:	bl	3ef60 <blkid_probe_get_size@plt+0x37a48>
   3f024:	subs	fp, r0, #0
   3f028:	ldrlt	r0, [sp, #24]
   3f02c:	blt	3f100 <blkid_probe_get_size@plt+0x37be8>
   3f030:	ldr	r3, [sp, #28]
   3f034:	add	r2, sp, #24
   3f038:	mov	r9, r4
   3f03c:	add	r8, sp, #32
   3f040:	add	r7, sp, #20
   3f044:	str	r2, [sp, #12]
   3f048:	str	r3, [sp, #20]
   3f04c:	b	3f06c <blkid_probe_get_size@plt+0x37b54>
   3f050:	cmp	r1, #95	; 0x5f
   3f054:	cmpeq	r3, #45	; 0x2d
   3f058:	beq	3f0bc <blkid_probe_get_size@plt+0x37ba4>
   3f05c:	cmp	r1, #45	; 0x2d
   3f060:	cmpeq	r3, #95	; 0x5f
   3f064:	beq	3f0bc <blkid_probe_get_size@plt+0x37ba4>
   3f068:	bl	69f0 <free@plt>
   3f06c:	mov	r2, r5
   3f070:	mov	r1, r8
   3f074:	mov	r0, r7
   3f078:	str	r9, [sp, #32]
   3f07c:	bl	4868c <blkid_probe_get_size@plt+0x41174>
   3f080:	subs	fp, r0, #0
   3f084:	blt	3f198 <blkid_probe_get_size@plt+0x37c80>
   3f088:	ldr	r0, [sp, #32]
   3f08c:	beq	3f158 <blkid_probe_get_size@plt+0x37c40>
   3f090:	cmp	r0, #0
   3f094:	beq	3f170 <blkid_probe_get_size@plt+0x37c58>
   3f098:	ldrb	r3, [r6]
   3f09c:	cmp	r3, #0
   3f0a0:	moveq	r1, r0
   3f0a4:	beq	3f0d4 <blkid_probe_get_size@plt+0x37bbc>
   3f0a8:	mov	r2, r0
   3f0ac:	mov	ip, r6
   3f0b0:	ldrb	r1, [r2], #1
   3f0b4:	cmp	r3, r1
   3f0b8:	bne	3f050 <blkid_probe_get_size@plt+0x37b38>
   3f0bc:	ldrb	r3, [ip, #1]!
   3f0c0:	mov	r1, r2
   3f0c4:	cmp	r3, #0
   3f0c8:	bne	3f0b0 <blkid_probe_get_size@plt+0x37b98>
   3f0cc:	cmp	r1, #0
   3f0d0:	beq	3f068 <blkid_probe_get_size@plt+0x37b50>
   3f0d4:	ldrb	r2, [r1]
   3f0d8:	cmp	r2, #61	; 0x3d
   3f0dc:	beq	3f138 <blkid_probe_get_size@plt+0x37c20>
   3f0e0:	adds	r3, r5, #0
   3f0e4:	movne	r3, #1
   3f0e8:	cmp	r2, #0
   3f0ec:	movne	r3, #0
   3f0f0:	cmp	r3, #0
   3f0f4:	movne	r4, #1
   3f0f8:	b	3f068 <blkid_probe_get_size@plt+0x37b50>
   3f0fc:	mvn	fp, #21
   3f100:	bl	69f0 <free@plt>
   3f104:	ldr	r0, [sp, #28]
   3f108:	bl	69f0 <free@plt>
   3f10c:	ldr	r3, [sp, #8]
   3f110:	ldr	r2, [sp, #36]	; 0x24
   3f114:	mov	r0, fp
   3f118:	ldr	r3, [r3]
   3f11c:	cmp	r2, r3
   3f120:	bne	3f1a8 <blkid_probe_get_size@plt+0x37c90>
   3f124:	add	sp, sp, #44	; 0x2c
   3f128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f12c:	mov	r0, r6
   3f130:	mvn	fp, #21
   3f134:	b	3f100 <blkid_probe_get_size@plt+0x37be8>
   3f138:	add	r1, r1, #1
   3f13c:	ldr	r0, [sp, #12]
   3f140:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   3f144:	subs	fp, r0, #0
   3f148:	blt	3f198 <blkid_probe_get_size@plt+0x37c80>
   3f14c:	ldr	r0, [sp, #32]
   3f150:	mov	r4, #1
   3f154:	b	3f068 <blkid_probe_get_size@plt+0x37b50>
   3f158:	bl	69f0 <free@plt>
   3f15c:	ldr	r2, [sp, #24]
   3f160:	mov	fp, r4
   3f164:	str	r2, [sl]
   3f168:	mov	r0, #0
   3f16c:	b	3f100 <blkid_probe_get_size@plt+0x37be8>
   3f170:	ldr	r3, [pc, #60]	; 3f1b4 <blkid_probe_get_size@plt+0x37c9c>
   3f174:	ldr	r2, [pc, #60]	; 3f1b8 <blkid_probe_get_size@plt+0x37ca0>
   3f178:	add	r3, pc, r3
   3f17c:	ldr	r1, [pc, #56]	; 3f1bc <blkid_probe_get_size@plt+0x37ca4>
   3f180:	add	r3, r3, #1168	; 0x490
   3f184:	str	r3, [sp]
   3f188:	add	r2, pc, r2
   3f18c:	mov	r3, #134	; 0x86
   3f190:	add	r1, pc, r1
   3f194:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f198:	ldr	r0, [sp, #32]
   3f19c:	bl	69f0 <free@plt>
   3f1a0:	ldr	r0, [sp, #24]
   3f1a4:	b	3f100 <blkid_probe_get_size@plt+0x37be8>
   3f1a8:	bl	6fb4 <__stack_chk_fail@plt>
   3f1ac:	muleq	r5, r0, fp
   3f1b0:	andeq	r0, r0, ip, lsr r4
   3f1b4:	andeq	pc, r2, r8, asr r8	; <UNPREDICTABLE>
   3f1b8:	andeq	r0, r3, r4, lsl #21
   3f1bc:	andeq	r1, r3, r8, ror #3
   3f1c0:	subs	ip, r0, #0
   3f1c4:	beq	3f244 <blkid_probe_get_size@plt+0x37d2c>
   3f1c8:	ldr	r3, [ip, #4]
   3f1cc:	cmp	r3, #0
   3f1d0:	beq	3f23c <blkid_probe_get_size@plt+0x37d24>
   3f1d4:	cmp	r2, #0
   3f1d8:	beq	3f204 <blkid_probe_get_size@plt+0x37cec>
   3f1dc:	ldr	r2, [r2]
   3f1e0:	cmn	r2, #1
   3f1e4:	cmpne	r3, r2
   3f1e8:	bls	3f23c <blkid_probe_get_size@plt+0x37d24>
   3f1ec:	ldr	r3, [ip, #12]
   3f1f0:	add	r0, r3, r2, lsl #3
   3f1f4:	ldr	r3, [r3, r2, lsl #3]
   3f1f8:	cmp	r3, r1
   3f1fc:	movne	r0, #0
   3f200:	bx	lr
   3f204:	ldr	r0, [ip, #12]
   3f208:	add	r3, r0, r3, lsl #3
   3f20c:	cmp	r0, r3
   3f210:	bcs	3f23c <blkid_probe_get_size@plt+0x37d24>
   3f214:	ldr	r2, [r0]
   3f218:	cmp	r1, r2
   3f21c:	bne	3f230 <blkid_probe_get_size@plt+0x37d18>
   3f220:	bx	lr
   3f224:	ldr	r2, [r0]
   3f228:	cmp	r2, r1
   3f22c:	bxeq	lr
   3f230:	add	r0, r0, #8
   3f234:	cmp	r0, r3
   3f238:	bcc	3f224 <blkid_probe_get_size@plt+0x37d0c>
   3f23c:	mov	r0, #0
   3f240:	bx	lr
   3f244:	ldr	r2, [pc, #44]	; 3f278 <blkid_probe_get_size@plt+0x37d60>
   3f248:	push	{lr}		; (str lr, [sp, #-4]!)
   3f24c:	add	r2, pc, r2
   3f250:	sub	sp, sp, #12
   3f254:	add	r2, r2, #1184	; 0x4a0
   3f258:	add	r2, r2, #12
   3f25c:	str	r2, [sp]
   3f260:	ldr	r1, [pc, #20]	; 3f27c <blkid_probe_get_size@plt+0x37d64>
   3f264:	ldr	r2, [pc, #20]	; 3f280 <blkid_probe_get_size@plt+0x37d68>
   3f268:	mov	r3, #209	; 0xd1
   3f26c:	add	r2, pc, r2
   3f270:	add	r1, pc, r1
   3f274:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f278:	andeq	pc, r2, r4, lsl #15
   3f27c:	andeq	r6, r3, r0, lsr pc
   3f280:	andeq	r0, r3, r4, ror #19
   3f284:	subs	r3, r0, #0
   3f288:	push	{r4, r5, lr}
   3f28c:	sub	sp, sp, #12
   3f290:	beq	3f33c <blkid_probe_get_size@plt+0x37e24>
   3f294:	ldr	r0, [r3, #4]
   3f298:	cmp	r0, r1
   3f29c:	bls	3f368 <blkid_probe_get_size@plt+0x37e50>
   3f2a0:	cmp	r0, r2
   3f2a4:	bls	3f398 <blkid_probe_get_size@plt+0x37e80>
   3f2a8:	ldr	r0, [r3, #12]
   3f2ac:	lsl	ip, r1, #3
   3f2b0:	add	lr, r0, ip
   3f2b4:	ldr	lr, [lr, #4]
   3f2b8:	cmp	lr, #0
   3f2bc:	bne	3f3c8 <blkid_probe_get_size@plt+0x37eb0>
   3f2c0:	lsl	lr, r2, #3
   3f2c4:	add	r4, r0, lr
   3f2c8:	ldr	r4, [r4, #4]
   3f2cc:	cmp	r4, #0
   3f2d0:	bne	3f404 <blkid_probe_get_size@plt+0x37eec>
   3f2d4:	ldr	r5, [r0, r2, lsl #3]
   3f2d8:	ldr	r4, [r0, r1, lsl #3]
   3f2dc:	str	r5, [r0, r1, lsl #3]
   3f2e0:	ldr	r0, [r3, #12]
   3f2e4:	str	r4, [r0, r2, lsl #3]
   3f2e8:	ldr	r0, [r3, #12]
   3f2ec:	add	r4, r0, lr
   3f2f0:	add	r0, r0, ip
   3f2f4:	ldr	r5, [r4, #4]
   3f2f8:	ldr	r4, [r0, #4]
   3f2fc:	str	r5, [r0, #4]
   3f300:	ldr	r0, [r3, #12]
   3f304:	add	r0, r0, lr
   3f308:	str	r4, [r0, #4]
   3f30c:	ldr	r0, [r3, #12]
   3f310:	add	ip, r0, ip
   3f314:	ldr	ip, [ip, #4]
   3f318:	cmp	ip, #0
   3f31c:	strne	r1, [ip]
   3f320:	ldrne	r0, [r3, #12]
   3f324:	add	r0, r0, lr
   3f328:	ldr	r3, [r0, #4]
   3f32c:	cmp	r3, #0
   3f330:	strne	r2, [r3]
   3f334:	add	sp, sp, #12
   3f338:	pop	{r4, r5, pc}
   3f33c:	ldr	r2, [pc, #252]	; 3f440 <blkid_probe_get_size@plt+0x37f28>
   3f340:	ldr	r1, [pc, #252]	; 3f444 <blkid_probe_get_size@plt+0x37f2c>
   3f344:	add	r2, pc, r2
   3f348:	add	r2, r2, #1200	; 0x4b0
   3f34c:	add	r2, r2, #8
   3f350:	str	r2, [sp]
   3f354:	ldr	r2, [pc, #236]	; 3f448 <blkid_probe_get_size@plt+0x37f30>
   3f358:	mov	r3, #68	; 0x44
   3f35c:	add	r2, pc, r2
   3f360:	add	r1, pc, r1
   3f364:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f368:	ldr	r2, [pc, #220]	; 3f44c <blkid_probe_get_size@plt+0x37f34>
   3f36c:	ldr	r1, [pc, #220]	; 3f450 <blkid_probe_get_size@plt+0x37f38>
   3f370:	add	r2, pc, r2
   3f374:	add	r2, r2, #1200	; 0x4b0
   3f378:	add	r2, r2, #8
   3f37c:	str	r2, [sp]
   3f380:	ldr	r2, [pc, #204]	; 3f454 <blkid_probe_get_size@plt+0x37f3c>
   3f384:	mov	r3, #69	; 0x45
   3f388:	add	r2, pc, r2
   3f38c:	add	r1, pc, r1
   3f390:	mov	r0, #0
   3f394:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f398:	ldr	r2, [pc, #184]	; 3f458 <blkid_probe_get_size@plt+0x37f40>
   3f39c:	ldr	r1, [pc, #184]	; 3f45c <blkid_probe_get_size@plt+0x37f44>
   3f3a0:	add	r2, pc, r2
   3f3a4:	add	r2, r2, #1200	; 0x4b0
   3f3a8:	add	r2, r2, #8
   3f3ac:	str	r2, [sp]
   3f3b0:	ldr	r2, [pc, #168]	; 3f460 <blkid_probe_get_size@plt+0x37f48>
   3f3b4:	mov	r3, #70	; 0x46
   3f3b8:	add	r2, pc, r2
   3f3bc:	add	r1, pc, r1
   3f3c0:	mov	r0, #0
   3f3c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f3c8:	ldr	lr, [lr]
   3f3cc:	cmp	lr, r1
   3f3d0:	beq	3f2c0 <blkid_probe_get_size@plt+0x37da8>
   3f3d4:	ldr	r2, [pc, #136]	; 3f464 <blkid_probe_get_size@plt+0x37f4c>
   3f3d8:	ldr	r1, [pc, #136]	; 3f468 <blkid_probe_get_size@plt+0x37f50>
   3f3dc:	add	r2, pc, r2
   3f3e0:	add	r2, r2, #1200	; 0x4b0
   3f3e4:	add	r2, r2, #8
   3f3e8:	str	r2, [sp]
   3f3ec:	ldr	r2, [pc, #120]	; 3f46c <blkid_probe_get_size@plt+0x37f54>
   3f3f0:	mov	r3, #72	; 0x48
   3f3f4:	add	r2, pc, r2
   3f3f8:	add	r1, pc, r1
   3f3fc:	mov	r0, #0
   3f400:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f404:	ldr	r4, [r4]
   3f408:	cmp	r4, r2
   3f40c:	beq	3f2d4 <blkid_probe_get_size@plt+0x37dbc>
   3f410:	ldr	r2, [pc, #88]	; 3f470 <blkid_probe_get_size@plt+0x37f58>
   3f414:	ldr	r1, [pc, #88]	; 3f474 <blkid_probe_get_size@plt+0x37f5c>
   3f418:	add	r2, pc, r2
   3f41c:	add	r2, r2, #1200	; 0x4b0
   3f420:	add	r2, r2, #8
   3f424:	str	r2, [sp]
   3f428:	ldr	r2, [pc, #72]	; 3f478 <blkid_probe_get_size@plt+0x37f60>
   3f42c:	mov	r3, #73	; 0x49
   3f430:	add	r2, pc, r2
   3f434:	add	r1, pc, r1
   3f438:	mov	r0, #0
   3f43c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f440:	andeq	pc, r2, ip, lsl #13
   3f444:	andeq	r6, r3, r0, asr #28
   3f448:	strdeq	r0, [r3], -r4
   3f44c:	andeq	pc, r2, r0, ror #12
   3f450:	ldrdeq	r0, [r3], -ip
   3f454:	andeq	r0, r3, r8, asr #17
   3f458:	andeq	pc, r2, r0, lsr r6	; <UNPREDICTABLE>
   3f45c:			; <UNDEFINED> instruction: 0x000308bc
   3f460:	muleq	r3, r8, r8
   3f464:	strdeq	pc, [r2], -r4
   3f468:	muleq	r3, r0, r8
   3f46c:	andeq	r0, r3, ip, asr r8
   3f470:			; <UNDEFINED> instruction: 0x0002f5b8
   3f474:	andeq	r0, r3, r0, lsl #17
   3f478:	andeq	r0, r3, r0, lsr #16
   3f47c:	push	{r4, r5, r6, r7, r8, lr}
   3f480:	subs	r8, r0, #0
   3f484:	sub	sp, sp, #8
   3f488:	beq	3f56c <blkid_probe_get_size@plt+0x38054>
   3f48c:	add	r4, r1, #1
   3f490:	ldr	r3, [r8, #4]
   3f494:	lsl	r4, r4, #1
   3f498:	sub	r7, r4, #1
   3f49c:	cmp	r3, r7
   3f4a0:	mov	r5, r1
   3f4a4:	bhi	3f508 <blkid_probe_get_size@plt+0x37ff0>
   3f4a8:	b	3f55c <blkid_probe_get_size@plt+0x38044>
   3f4ac:	cmp	r4, r3
   3f4b0:	bcs	3f55c <blkid_probe_get_size@plt+0x38044>
   3f4b4:	ldr	r3, [r8, #12]
   3f4b8:	ldr	r6, [r8]
   3f4bc:	ldr	r1, [r3, r2]
   3f4c0:	ldr	r0, [r3, r4, lsl #3]
   3f4c4:	blx	r6
   3f4c8:	cmp	r0, #0
   3f4cc:	bge	3f55c <blkid_probe_get_size@plt+0x38044>
   3f4d0:	mov	r6, r4
   3f4d4:	cmp	r5, r6
   3f4d8:	beq	3f55c <blkid_probe_get_size@plt+0x38044>
   3f4dc:	add	r4, r6, #1
   3f4e0:	mov	r1, r5
   3f4e4:	mov	r2, r6
   3f4e8:	mov	r0, r8
   3f4ec:	bl	3f284 <blkid_probe_get_size@plt+0x37d6c>
   3f4f0:	lsl	r4, r4, #1
   3f4f4:	ldr	r3, [r8, #4]
   3f4f8:	sub	r7, r4, #1
   3f4fc:	cmp	r7, r3
   3f500:	mov	r5, r6
   3f504:	bcs	3f560 <blkid_probe_get_size@plt+0x38048>
   3f508:	ldr	r3, [r8, #12]
   3f50c:	ldr	r2, [r8]
   3f510:	lsl	r6, r7, #3
   3f514:	ldr	r1, [r3, r5, lsl #3]
   3f518:	ldr	r0, [r3, r7, lsl #3]
   3f51c:	blx	r2
   3f520:	lsl	r2, r5, #3
   3f524:	ldr	r3, [r8, #4]
   3f528:	cmp	r0, #0
   3f52c:	bge	3f4ac <blkid_probe_get_size@plt+0x37f94>
   3f530:	cmp	r3, r4
   3f534:	bls	3f554 <blkid_probe_get_size@plt+0x3803c>
   3f538:	ldr	r3, [r8, #12]
   3f53c:	ldr	r2, [r8]
   3f540:	ldr	r1, [r3, r6]
   3f544:	ldr	r0, [r3, r4, lsl #3]
   3f548:	blx	r2
   3f54c:	cmp	r0, #0
   3f550:	blt	3f4d0 <blkid_probe_get_size@plt+0x37fb8>
   3f554:	mov	r6, r7
   3f558:	b	3f4d4 <blkid_probe_get_size@plt+0x37fbc>
   3f55c:	mov	r6, r5
   3f560:	mov	r0, r6
   3f564:	add	sp, sp, #8
   3f568:	pop	{r4, r5, r6, r7, r8, pc}
   3f56c:	ldr	r2, [pc, #32]	; 3f594 <blkid_probe_get_size@plt+0x3807c>
   3f570:	ldr	r1, [pc, #32]	; 3f598 <blkid_probe_get_size@plt+0x38080>
   3f574:	add	r2, pc, r2
   3f578:	add	r2, r2, #1216	; 0x4c0
   3f57c:	str	r2, [sp]
   3f580:	ldr	r2, [pc, #20]	; 3f59c <blkid_probe_get_size@plt+0x38084>
   3f584:	mov	r3, #105	; 0x69
   3f588:	add	r2, pc, r2
   3f58c:	add	r1, pc, r1
   3f590:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f594:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   3f598:	andeq	r6, r3, r4, lsl ip
   3f59c:	andeq	r0, r3, r8, asr #13
   3f5a0:	push	{r4, r5, r6, lr}
   3f5a4:	subs	r6, r0, #0
   3f5a8:	sub	sp, sp, #8
   3f5ac:	beq	3f620 <blkid_probe_get_size@plt+0x38108>
   3f5b0:	ldr	r3, [r6, #4]
   3f5b4:	mov	r5, r1
   3f5b8:	cmp	r3, r1
   3f5bc:	bls	3f648 <blkid_probe_get_size@plt+0x38130>
   3f5c0:	cmp	r1, #0
   3f5c4:	bne	3f5e4 <blkid_probe_get_size@plt+0x380cc>
   3f5c8:	b	3f614 <blkid_probe_get_size@plt+0x380fc>
   3f5cc:	mov	r1, r5
   3f5d0:	mov	r2, r4
   3f5d4:	mov	r0, r6
   3f5d8:	bl	3f284 <blkid_probe_get_size@plt+0x37d6c>
   3f5dc:	subs	r5, r4, #0
   3f5e0:	beq	3f614 <blkid_probe_get_size@plt+0x380fc>
   3f5e4:	sub	r4, r5, #1
   3f5e8:	ldr	r3, [r6, #12]
   3f5ec:	lsr	r4, r4, #1
   3f5f0:	ldr	r2, [r6]
   3f5f4:	ldr	r0, [r3, r4, lsl #3]
   3f5f8:	ldr	r1, [r3, r5, lsl #3]
   3f5fc:	blx	r2
   3f600:	cmp	r0, #0
   3f604:	bgt	3f5cc <blkid_probe_get_size@plt+0x380b4>
   3f608:	mov	r0, r5
   3f60c:	add	sp, sp, #8
   3f610:	pop	{r4, r5, r6, pc}
   3f614:	mov	r0, #0
   3f618:	add	sp, sp, #8
   3f61c:	pop	{r4, r5, r6, pc}
   3f620:	ldr	r2, [pc, #76]	; 3f674 <blkid_probe_get_size@plt+0x3815c>
   3f624:	ldr	r1, [pc, #76]	; 3f678 <blkid_probe_get_size@plt+0x38160>
   3f628:	add	r2, pc, r2
   3f62c:	add	r2, r2, #1232	; 0x4d0
   3f630:	str	r2, [sp]
   3f634:	ldr	r2, [pc, #64]	; 3f67c <blkid_probe_get_size@plt+0x38164>
   3f638:	mov	r3, #86	; 0x56
   3f63c:	add	r2, pc, r2
   3f640:	add	r1, pc, r1
   3f644:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f648:	ldr	r2, [pc, #48]	; 3f680 <blkid_probe_get_size@plt+0x38168>
   3f64c:	ldr	r1, [pc, #48]	; 3f684 <blkid_probe_get_size@plt+0x3816c>
   3f650:	add	r2, pc, r2
   3f654:	add	r2, r2, #1232	; 0x4d0
   3f658:	str	r2, [sp]
   3f65c:	ldr	r2, [pc, #36]	; 3f688 <blkid_probe_get_size@plt+0x38170>
   3f660:	mov	r3, #87	; 0x57
   3f664:	add	r2, pc, r2
   3f668:	add	r1, pc, r1
   3f66c:	mov	r0, #0
   3f670:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f674:	andeq	pc, r2, r8, lsr #7
   3f678:	andeq	r6, r3, r0, ror #22
   3f67c:	andeq	r0, r3, r4, lsl r6
   3f680:	andeq	pc, r2, r0, lsl #7
   3f684:	andeq	r0, r3, r8, ror r6
   3f688:	andeq	r0, r3, ip, ror #11
   3f68c:	push	{r4, lr}
   3f690:	subs	r4, r0, #0
   3f694:	sub	sp, sp, #8
   3f698:	beq	3f6d8 <blkid_probe_get_size@plt+0x381c0>
   3f69c:	bl	3f1c0 <blkid_probe_get_size@plt+0x37ca8>
   3f6a0:	subs	r1, r0, #0
   3f6a4:	moveq	r0, r1
   3f6a8:	beq	3f6d0 <blkid_probe_get_size@plt+0x381b8>
   3f6ac:	ldr	r3, [r4, #12]
   3f6b0:	mov	r0, r4
   3f6b4:	sub	r1, r1, r3
   3f6b8:	asr	r1, r1, #3
   3f6bc:	bl	3f47c <blkid_probe_get_size@plt+0x37f64>
   3f6c0:	mov	r1, r0
   3f6c4:	mov	r0, r4
   3f6c8:	bl	3f5a0 <blkid_probe_get_size@plt+0x38088>
   3f6cc:	mov	r0, #1
   3f6d0:	add	sp, sp, #8
   3f6d4:	pop	{r4, pc}
   3f6d8:	ldr	r2, [pc, #36]	; 3f704 <blkid_probe_get_size@plt+0x381ec>
   3f6dc:	ldr	r1, [pc, #36]	; 3f708 <blkid_probe_get_size@plt+0x381f0>
   3f6e0:	add	r2, pc, r2
   3f6e4:	add	r2, r2, #1232	; 0x4d0
   3f6e8:	add	r2, r2, #12
   3f6ec:	str	r2, [sp]
   3f6f0:	ldr	r2, [pc, #20]	; 3f70c <blkid_probe_get_size@plt+0x381f4>
   3f6f4:	mov	r3, #250	; 0xfa
   3f6f8:	add	r2, pc, r2
   3f6fc:	add	r1, pc, r1
   3f700:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f704:	strdeq	pc, [r2], -r0
   3f708:	andeq	r6, r3, r4, lsr #21
   3f70c:	andeq	r0, r3, r8, asr r5
   3f710:	push	{r4, lr}
   3f714:	subs	r4, r0, #0
   3f718:	beq	3f788 <blkid_probe_get_size@plt+0x38270>
   3f71c:	bl	3f1c0 <blkid_probe_get_size@plt+0x37ca8>
   3f720:	cmp	r0, #0
   3f724:	popeq	{r4, pc}
   3f728:	ldr	r3, [r4, #4]
   3f72c:	ldr	r1, [r4, #12]
   3f730:	sub	ip, r3, #-536870911	; 0xe0000001
   3f734:	add	r2, r1, ip, lsl #3
   3f738:	cmp	r0, r2
   3f73c:	beq	3f790 <blkid_probe_get_size@plt+0x38278>
   3f740:	ldr	r3, [r1, ip, lsl #3]
   3f744:	sub	r1, r0, r1
   3f748:	str	r3, [r0]
   3f74c:	ldr	r3, [r2, #4]
   3f750:	asr	r1, r1, #3
   3f754:	cmp	r3, #0
   3f758:	str	r3, [r0, #4]
   3f75c:	strne	r1, [r3]
   3f760:	ldr	r3, [r4, #4]
   3f764:	mov	r0, r4
   3f768:	sub	r3, r3, #1
   3f76c:	str	r3, [r4, #4]
   3f770:	bl	3f47c <blkid_probe_get_size@plt+0x37f64>
   3f774:	mov	r1, r0
   3f778:	mov	r0, r4
   3f77c:	bl	3f5a0 <blkid_probe_get_size@plt+0x38088>
   3f780:	mov	r0, #1
   3f784:	pop	{r4, pc}
   3f788:	mov	r0, r4
   3f78c:	pop	{r4, pc}
   3f790:	sub	r3, r3, #1
   3f794:	str	r3, [r4, #4]
   3f798:	mov	r0, #1
   3f79c:	pop	{r4, pc}
   3f7a0:	push	{r4, r5, r6, r7, lr}
   3f7a4:	subs	r4, r0, #0
   3f7a8:	sub	sp, sp, #12
   3f7ac:	beq	3f828 <blkid_probe_get_size@plt+0x38310>
   3f7b0:	mov	r7, r1
   3f7b4:	mov	r5, r2
   3f7b8:	ldmib	r4, {r1, r2}
   3f7bc:	ldr	r0, [r4, #12]
   3f7c0:	cmp	r1, r2
   3f7c4:	add	r3, r1, #1
   3f7c8:	bcc	3f7fc <blkid_probe_get_size@plt+0x382e4>
   3f7cc:	lsl	r6, r3, #1
   3f7d0:	cmp	r6, #16
   3f7d4:	movcc	r6, #16
   3f7d8:	mov	r1, r6
   3f7dc:	mov	r2, #8
   3f7e0:	bl	711c <reallocarray@plt>
   3f7e4:	cmp	r0, #0
   3f7e8:	beq	3f854 <blkid_probe_get_size@plt+0x3833c>
   3f7ec:	ldr	r1, [r4, #4]
   3f7f0:	str	r0, [r4, #12]
   3f7f4:	add	r3, r1, #1
   3f7f8:	str	r6, [r4, #8]
   3f7fc:	add	r2, r0, r1, lsl #3
   3f800:	cmp	r5, #0
   3f804:	str	r3, [r4, #4]
   3f808:	str	r7, [r0, r1, lsl #3]
   3f80c:	str	r5, [r2, #4]
   3f810:	mov	r0, r4
   3f814:	strne	r1, [r5]
   3f818:	bl	3f5a0 <blkid_probe_get_size@plt+0x38088>
   3f81c:	mov	r0, #0
   3f820:	add	sp, sp, #12
   3f824:	pop	{r4, r5, r6, r7, pc}
   3f828:	ldr	r2, [pc, #44]	; 3f85c <blkid_probe_get_size@plt+0x38344>
   3f82c:	ldr	r1, [pc, #44]	; 3f860 <blkid_probe_get_size@plt+0x38348>
   3f830:	add	r2, pc, r2
   3f834:	add	r2, r2, #1248	; 0x4e0
   3f838:	add	r2, r2, #12
   3f83c:	str	r2, [sp]
   3f840:	ldr	r2, [pc, #28]	; 3f864 <blkid_probe_get_size@plt+0x3834c>
   3f844:	mov	r3, #148	; 0x94
   3f848:	add	r2, pc, r2
   3f84c:	add	r1, pc, r1
   3f850:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f854:	mvn	r0, #11
   3f858:	b	3f820 <blkid_probe_get_size@plt+0x38308>
   3f85c:	andeq	pc, r2, r0, lsr #3
   3f860:	andeq	r6, r3, r4, asr r9
   3f864:	andeq	r0, r3, r8, lsl #8
   3f868:	push	{r4, r5, lr}
   3f86c:	subs	r5, r0, #0
   3f870:	sub	sp, sp, #20
   3f874:	beq	3f8cc <blkid_probe_get_size@plt+0x383b4>
   3f878:	ldr	r4, [r5]
   3f87c:	cmp	r4, #0
   3f880:	movne	r0, #0
   3f884:	beq	3f890 <blkid_probe_get_size@plt+0x38378>
   3f888:	add	sp, sp, #20
   3f88c:	pop	{r4, r5, pc}
   3f890:	mov	r0, #16
   3f894:	str	r1, [sp, #12]
   3f898:	bl	7230 <malloc@plt>
   3f89c:	subs	r3, r0, #0
   3f8a0:	movne	r0, r4
   3f8a4:	ldrne	r1, [sp, #12]
   3f8a8:	mvneq	r0, #11
   3f8ac:	strne	r4, [r3, #4]
   3f8b0:	strne	r4, [r3, #8]
   3f8b4:	strne	r4, [r3, #12]
   3f8b8:	strne	r1, [r3]
   3f8bc:	strne	r3, [r5]
   3f8c0:	streq	r3, [r5]
   3f8c4:	add	sp, sp, #20
   3f8c8:	pop	{r4, r5, pc}
   3f8cc:	ldr	r2, [pc, #36]	; 3f8f8 <blkid_probe_get_size@plt+0x383e0>
   3f8d0:	ldr	r1, [pc, #36]	; 3f8fc <blkid_probe_get_size@plt+0x383e4>
   3f8d4:	add	r2, pc, r2
   3f8d8:	add	r2, r2, #1264	; 0x4f0
   3f8dc:	add	r2, r2, #8
   3f8e0:	str	r2, [sp]
   3f8e4:	ldr	r2, [pc, #20]	; 3f900 <blkid_probe_get_size@plt+0x383e8>
   3f8e8:	mov	r3, #55	; 0x37
   3f8ec:	add	r2, pc, r2
   3f8f0:	add	r1, pc, r1
   3f8f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3f8f8:	strdeq	pc, [r2], -ip
   3f8fc:			; <UNDEFINED> instruction: 0x000368b0
   3f900:	andeq	r0, r3, r4, ror #6
   3f904:	ldr	r3, [pc, #236]	; 3f9f8 <blkid_probe_get_size@plt+0x384e0>
   3f908:	ldr	r2, [pc, #236]	; 3f9fc <blkid_probe_get_size@plt+0x384e4>
   3f90c:	add	r3, pc, r3
   3f910:	push	{r4, r5, lr}
   3f914:	sub	sp, sp, #84	; 0x54
   3f918:	ldr	r4, [r3, r2]
   3f91c:	ldrb	r2, [r0]
   3f920:	ldr	r3, [r4]
   3f924:	cmp	r2, #46	; 0x2e
   3f928:	str	r3, [sp, #76]	; 0x4c
   3f92c:	beq	3f990 <blkid_probe_get_size@plt+0x38478>
   3f930:	ldr	r1, [pc, #200]	; 3fa00 <blkid_probe_get_size@plt+0x384e8>
   3f934:	mov	r5, r0
   3f938:	add	r1, pc, r1
   3f93c:	bl	7314 <strcmp@plt>
   3f940:	cmp	r0, #0
   3f944:	beq	3f990 <blkid_probe_get_size@plt+0x38478>
   3f948:	ldr	r1, [pc, #180]	; 3fa04 <blkid_probe_get_size@plt+0x384ec>
   3f94c:	mov	r0, r5
   3f950:	add	r1, pc, r1
   3f954:	bl	7314 <strcmp@plt>
   3f958:	cmp	r0, #0
   3f95c:	beq	3f990 <blkid_probe_get_size@plt+0x38478>
   3f960:	ldr	r1, [pc, #160]	; 3fa08 <blkid_probe_get_size@plt+0x384f0>
   3f964:	mov	r0, r5
   3f968:	add	r1, pc, r1
   3f96c:	bl	7314 <strcmp@plt>
   3f970:	cmp	r0, #0
   3f974:	beq	3f990 <blkid_probe_get_size@plt+0x38478>
   3f978:	ldr	r1, [pc, #140]	; 3fa0c <blkid_probe_get_size@plt+0x384f4>
   3f97c:	mov	r0, r5
   3f980:	add	r1, pc, r1
   3f984:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   3f988:	cmp	r0, #0
   3f98c:	beq	3f9ac <blkid_probe_get_size@plt+0x38494>
   3f990:	mov	r0, #1
   3f994:	ldr	r2, [sp, #76]	; 0x4c
   3f998:	ldr	r3, [r4]
   3f99c:	cmp	r2, r3
   3f9a0:	bne	3f9f4 <blkid_probe_get_size@plt+0x384dc>
   3f9a4:	add	sp, sp, #84	; 0x54
   3f9a8:	pop	{r4, r5, pc}
   3f9ac:	mov	r0, r5
   3f9b0:	mov	r1, #46	; 0x2e
   3f9b4:	bl	7410 <strrchr@plt>
   3f9b8:	subs	r5, r0, #0
   3f9bc:	moveq	r0, r5
   3f9c0:	beq	3f994 <blkid_probe_get_size@plt+0x3847c>
   3f9c4:	ldr	r1, [pc, #68]	; 3fa10 <blkid_probe_get_size@plt+0x384f8>
   3f9c8:	add	r3, sp, #4
   3f9cc:	add	r1, pc, r1
   3f9d0:	add	r1, r1, #20
   3f9d4:	mov	r0, r3
   3f9d8:	mov	r2, #72	; 0x48
   3f9dc:	bl	71e8 <memcpy@plt>
   3f9e0:	add	r1, r5, #1
   3f9e4:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   3f9e8:	adds	r0, r0, #0
   3f9ec:	movne	r0, #1
   3f9f0:	b	3f994 <blkid_probe_get_size@plt+0x3847c>
   3f9f4:	bl	6fb4 <__stack_chk_fail@plt>
   3f9f8:	andeq	r8, r5, ip, asr r2
   3f9fc:	andeq	r0, r0, ip, lsr r4
   3fa00:			; <UNDEFINED> instruction: 0x000303bc
   3fa04:			; <UNDEFINED> instruction: 0x000303b0
   3fa08:	andeq	r0, r3, r4, lsr #7
   3fa0c:	muleq	r3, ip, r3
   3fa10:	andeq	r8, r5, r8, asr #13
   3fa14:	cmp	r0, #0
   3fa18:	push	{r4, r5, lr}
   3fa1c:	sub	sp, sp, #12
   3fa20:	beq	3fa60 <blkid_probe_get_size@plt+0x38548>
   3fa24:	bl	74e8 <strdup@plt>
   3fa28:	subs	r5, r0, #0
   3fa2c:	beq	3fab0 <blkid_probe_get_size@plt+0x38598>
   3fa30:	bl	6ad4 <dirname@plt>
   3fa34:	subs	r4, r0, #0
   3fa38:	beq	3fa88 <blkid_probe_get_size@plt+0x38570>
   3fa3c:	cmp	r5, r4
   3fa40:	beq	3fa54 <blkid_probe_get_size@plt+0x3853c>
   3fa44:	bl	74e8 <strdup@plt>
   3fa48:	mov	r4, r0
   3fa4c:	mov	r0, r5
   3fa50:	bl	69f0 <free@plt>
   3fa54:	mov	r0, r4
   3fa58:	add	sp, sp, #12
   3fa5c:	pop	{r4, r5, pc}
   3fa60:	ldr	r2, [pc, #80]	; 3fab8 <blkid_probe_get_size@plt+0x385a0>
   3fa64:	ldr	r1, [pc, #80]	; 3fabc <blkid_probe_get_size@plt+0x385a4>
   3fa68:	add	r2, pc, r2
   3fa6c:	add	r2, r2, #1296	; 0x510
   3fa70:	str	r2, [sp]
   3fa74:	ldr	r2, [pc, #68]	; 3fac0 <blkid_probe_get_size@plt+0x385a8>
   3fa78:	ldr	r3, [pc, #68]	; 3fac4 <blkid_probe_get_size@plt+0x385ac>
   3fa7c:	add	r2, pc, r2
   3fa80:	add	r1, pc, r1
   3fa84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fa88:	ldr	r2, [pc, #56]	; 3fac8 <blkid_probe_get_size@plt+0x385b0>
   3fa8c:	ldr	r1, [pc, #56]	; 3facc <blkid_probe_get_size@plt+0x385b4>
   3fa90:	add	r2, pc, r2
   3fa94:	add	r2, r2, #1296	; 0x510
   3fa98:	str	r2, [sp]
   3fa9c:	ldr	r2, [pc, #44]	; 3fad0 <blkid_probe_get_size@plt+0x385b8>
   3faa0:	mov	r3, #764	; 0x2fc
   3faa4:	add	r2, pc, r2
   3faa8:	add	r1, pc, r1
   3faac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fab0:	mov	r4, r5
   3fab4:	b	3fa54 <blkid_probe_get_size@plt+0x3853c>
   3fab8:	andeq	lr, r2, r8, ror #30
   3fabc:	muleq	r2, r4, r8
   3fac0:	andeq	r0, r3, r4, lsr #5
   3fac4:	strdeq	r0, [r0], -r5
   3fac8:	andeq	lr, r2, r0, asr #30
   3facc:	andeq	r2, r3, r8, lsl r7
   3fad0:	andeq	r0, r3, ip, ror r2
   3fad4:	ldr	r3, [pc, #308]	; 3fc10 <blkid_probe_get_size@plt+0x386f8>
   3fad8:	ldr	ip, [pc, #308]	; 3fc14 <blkid_probe_get_size@plt+0x386fc>
   3fadc:	add	r3, pc, r3
   3fae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fae4:	sub	sp, sp, #132	; 0x84
   3fae8:	ldr	fp, [r3, ip]
   3faec:	subs	r5, r1, #0
   3faf0:	ldr	r3, [fp]
   3faf4:	str	r3, [sp, #124]	; 0x7c
   3faf8:	beq	3fbe0 <blkid_probe_get_size@plt+0x386c8>
   3fafc:	ldr	r8, [pc, #276]	; 3fc18 <blkid_probe_get_size@plt+0x38700>
   3fb00:	mov	r9, r2
   3fb04:	add	r8, pc, r8
   3fb08:	add	r8, r8, #1328	; 0x530
   3fb0c:	mov	r4, r0
   3fb10:	add	r8, r8, #8
   3fb14:	mov	sl, #0
   3fb18:	b	3fb34 <blkid_probe_get_size@plt+0x3861c>
   3fb1c:	cmp	r9, #0
   3fb20:	beq	3fbc0 <blkid_probe_get_size@plt+0x386a8>
   3fb24:	mov	sl, r9
   3fb28:	strd	r6, [r5]
   3fb2c:	cmp	r4, #0
   3fb30:	beq	3fbc4 <blkid_probe_get_size@plt+0x386ac>
   3fb34:	ldr	r1, [r4], #4
   3fb38:	cmp	r1, #0
   3fb3c:	beq	3fbc4 <blkid_probe_get_size@plt+0x386ac>
   3fb40:	add	r2, sp, #16
   3fb44:	mov	r0, #3
   3fb48:	bl	6a2c <__xstat64@plt>
   3fb4c:	cmp	r0, #0
   3fb50:	blt	3fb2c <blkid_probe_get_size@plt+0x38614>
   3fb54:	add	r0, sp, #96	; 0x60
   3fb58:	bl	3c9a4 <blkid_probe_get_size@plt+0x3548c>
   3fb5c:	ldrd	r2, [r5]
   3fb60:	cmp	r1, r3
   3fb64:	cmpeq	r0, r2
   3fb68:	mov	r6, r0
   3fb6c:	mov	r7, r1
   3fb70:	bls	3fb2c <blkid_probe_get_size@plt+0x38614>
   3fb74:	ldr	r3, [pc, #160]	; 3fc1c <blkid_probe_get_size@plt+0x38704>
   3fb78:	add	r3, pc, r3
   3fb7c:	ldr	r3, [r3]
   3fb80:	cmp	r3, #6
   3fb84:	ble	3fb1c <blkid_probe_get_size@plt+0x38604>
   3fb88:	ldr	r2, [r4, #-4]
   3fb8c:	ldr	r3, [pc, #140]	; 3fc20 <blkid_probe_get_size@plt+0x38708>
   3fb90:	str	r2, [sp, #8]
   3fb94:	ldr	r2, [pc, #136]	; 3fc24 <blkid_probe_get_size@plt+0x3870c>
   3fb98:	add	r3, pc, r3
   3fb9c:	str	r3, [sp, #4]
   3fba0:	str	r8, [sp]
   3fba4:	ldr	r3, [pc, #124]	; 3fc28 <blkid_probe_get_size@plt+0x38710>
   3fba8:	add	r2, pc, r2
   3fbac:	mov	r1, #0
   3fbb0:	mov	r0, #7
   3fbb4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   3fbb8:	cmp	r9, #0
   3fbbc:	bne	3fb24 <blkid_probe_get_size@plt+0x3860c>
   3fbc0:	mov	sl, #1
   3fbc4:	ldr	r2, [sp, #124]	; 0x7c
   3fbc8:	ldr	r3, [fp]
   3fbcc:	mov	r0, sl
   3fbd0:	cmp	r2, r3
   3fbd4:	bne	3fc0c <blkid_probe_get_size@plt+0x386f4>
   3fbd8:	add	sp, sp, #132	; 0x84
   3fbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fbe0:	ldr	r3, [pc, #68]	; 3fc2c <blkid_probe_get_size@plt+0x38714>
   3fbe4:	ldr	r2, [pc, #68]	; 3fc30 <blkid_probe_get_size@plt+0x38718>
   3fbe8:	add	r3, pc, r3
   3fbec:	ldr	r1, [pc, #64]	; 3fc34 <blkid_probe_get_size@plt+0x3871c>
   3fbf0:	add	r3, r3, #1312	; 0x520
   3fbf4:	str	r3, [sp]
   3fbf8:	mov	r0, r5
   3fbfc:	mov	r3, #608	; 0x260
   3fc00:	add	r2, pc, r2
   3fc04:	add	r1, pc, r1
   3fc08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fc0c:	bl	6fb4 <__stack_chk_fail@plt>
   3fc10:	andeq	r8, r5, ip, lsl #1
   3fc14:	andeq	r0, r0, ip, lsr r4
   3fc18:	andeq	lr, r2, ip, asr #29
   3fc1c:	andeq	r8, r5, r4, asr #11
   3fc20:			; <UNDEFINED> instruction: 0x000301b0
   3fc24:	andeq	r0, r3, r8, ror r1
   3fc28:	andeq	r0, r0, r2, ror r2
   3fc2c:	andeq	lr, r2, r8, ror #27
   3fc30:	andeq	r0, r3, r0, lsr #2
   3fc34:	andeq	r0, r3, r8, lsr r1
   3fc38:	push	{r4, r5, r6, r7, r8, lr}
   3fc3c:	subs	r5, r0, #0
   3fc40:	sub	sp, sp, #8
   3fc44:	beq	3fd40 <blkid_probe_get_size@plt+0x38828>
   3fc48:	cmp	r1, #0
   3fc4c:	mov	r4, r1
   3fc50:	beq	3fd80 <blkid_probe_get_size@plt+0x38868>
   3fc54:	ldrb	r3, [r1]
   3fc58:	ldrb	r0, [r5]
   3fc5c:	sub	r3, r3, #47	; 0x2f
   3fc60:	clz	r3, r3
   3fc64:	lsr	r3, r3, #5
   3fc68:	cmp	r0, #47	; 0x2f
   3fc6c:	rsbne	r0, r3, #0
   3fc70:	rsbeq	r0, r3, #1
   3fc74:	cmp	r0, #0
   3fc78:	bne	3fcc4 <blkid_probe_get_size@plt+0x387ac>
   3fc7c:	ldr	r6, [pc, #296]	; 3fdac <blkid_probe_get_size@plt+0x38894>
   3fc80:	add	r6, pc, r6
   3fc84:	mov	r1, r6
   3fc88:	mov	r0, r5
   3fc8c:	bl	6c9c <strspn@plt>
   3fc90:	mov	r1, r6
   3fc94:	mov	r8, r0
   3fc98:	mov	r0, r4
   3fc9c:	bl	6c9c <strspn@plt>
   3fca0:	ldrb	r3, [r5, r8]
   3fca4:	add	r8, r5, r8
   3fca8:	cmp	r3, #0
   3fcac:	add	r7, r4, r0
   3fcb0:	ldrb	r3, [r4, r0]
   3fcb4:	bne	3fccc <blkid_probe_get_size@plt+0x387b4>
   3fcb8:	adds	r0, r3, #0
   3fcbc:	movne	r0, #1
   3fcc0:	rsb	r0, r0, #0
   3fcc4:	add	sp, sp, #8
   3fcc8:	pop	{r4, r5, r6, r7, r8, pc}
   3fccc:	cmp	r3, #0
   3fcd0:	beq	3fd68 <blkid_probe_get_size@plt+0x38850>
   3fcd4:	mov	r1, r6
   3fcd8:	mov	r0, r8
   3fcdc:	bl	6a8c <strcspn@plt>
   3fce0:	mov	r1, r6
   3fce4:	mov	r5, r0
   3fce8:	mov	r0, r7
   3fcec:	bl	6a8c <strcspn@plt>
   3fcf0:	mov	r1, r7
   3fcf4:	cmp	r5, r0
   3fcf8:	movcs	r2, r0
   3fcfc:	movcc	r2, r5
   3fd00:	mov	r4, r0
   3fd04:	mov	r0, r8
   3fd08:	bl	7398 <memcmp@plt>
   3fd0c:	cmp	r0, #0
   3fd10:	bne	3fd70 <blkid_probe_get_size@plt+0x38858>
   3fd14:	cmp	r5, r4
   3fd18:	movcs	r0, #0
   3fd1c:	movcc	r0, #1
   3fd20:	cmp	r5, r4
   3fd24:	rsbls	r0, r0, #0
   3fd28:	rsbhi	r0, r0, #1
   3fd2c:	cmp	r0, #0
   3fd30:	bne	3fcc4 <blkid_probe_get_size@plt+0x387ac>
   3fd34:	add	r5, r8, r5
   3fd38:	add	r4, r7, r4
   3fd3c:	b	3fc84 <blkid_probe_get_size@plt+0x3876c>
   3fd40:	ldr	r2, [pc, #104]	; 3fdb0 <blkid_probe_get_size@plt+0x38898>
   3fd44:	ldr	r1, [pc, #104]	; 3fdb4 <blkid_probe_get_size@plt+0x3889c>
   3fd48:	add	r2, pc, r2
   3fd4c:	add	r2, r2, #1360	; 0x550
   3fd50:	str	r2, [sp]
   3fd54:	ldr	r2, [pc, #92]	; 3fdb8 <blkid_probe_get_size@plt+0x388a0>
   3fd58:	ldr	r3, [pc, #92]	; 3fdbc <blkid_probe_get_size@plt+0x388a4>
   3fd5c:	add	r2, pc, r2
   3fd60:	add	r1, pc, r1
   3fd64:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fd68:	mov	r0, #1
   3fd6c:	b	3fcc4 <blkid_probe_get_size@plt+0x387ac>
   3fd70:	movgt	r3, #1
   3fd74:	movle	r3, #0
   3fd78:	sub	r0, r3, r0, lsr #31
   3fd7c:	b	3fcc4 <blkid_probe_get_size@plt+0x387ac>
   3fd80:	ldr	r3, [pc, #56]	; 3fdc0 <blkid_probe_get_size@plt+0x388a8>
   3fd84:	mov	r0, r1
   3fd88:	add	r3, pc, r3
   3fd8c:	ldr	r2, [pc, #48]	; 3fdc4 <blkid_probe_get_size@plt+0x388ac>
   3fd90:	ldr	r1, [pc, #48]	; 3fdc8 <blkid_probe_get_size@plt+0x388b0>
   3fd94:	add	r3, r3, #1360	; 0x550
   3fd98:	str	r3, [sp]
   3fd9c:	add	r2, pc, r2
   3fda0:	ldr	r3, [pc, #36]	; 3fdcc <blkid_probe_get_size@plt+0x388b4>
   3fda4:	add	r1, pc, r1
   3fda8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fdac:	andeq	r8, r3, r0, asr #6
   3fdb0:	andeq	lr, r2, r8, lsl #25
   3fdb4:			; <UNDEFINED> instruction: 0x000364b0
   3fdb8:	andeq	pc, r2, r4, asr #31
   3fdbc:			; <UNDEFINED> instruction: 0x000001b1
   3fdc0:	andeq	lr, r2, r8, asr #24
   3fdc4:	andeq	pc, r2, r4, lsl #31
   3fdc8:	andeq	r6, r3, ip, asr r4
   3fdcc:			; <UNDEFINED> instruction: 0x000001b2
   3fdd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   3fdd4:	subs	r5, r0, #0
   3fdd8:	sub	sp, sp, #12
   3fddc:	beq	3febc <blkid_probe_get_size@plt+0x389a4>
   3fde0:	cmp	r1, #0
   3fde4:	mov	r4, r1
   3fde8:	beq	3fee4 <blkid_probe_get_size@plt+0x389cc>
   3fdec:	ldrb	r2, [r5]
   3fdf0:	ldrb	r3, [r1]
   3fdf4:	sub	r2, r2, #47	; 0x2f
   3fdf8:	sub	r3, r3, #47	; 0x2f
   3fdfc:	clz	r2, r2
   3fe00:	clz	r3, r3
   3fe04:	lsr	r2, r2, #5
   3fe08:	lsr	r3, r3, #5
   3fe0c:	cmp	r2, r3
   3fe10:	bne	3feac <blkid_probe_get_size@plt+0x38994>
   3fe14:	ldr	r7, [pc, #244]	; 3ff10 <blkid_probe_get_size@plt+0x389f8>
   3fe18:	add	r7, pc, r7
   3fe1c:	b	3fe70 <blkid_probe_get_size@plt+0x38958>
   3fe20:	ldrb	r3, [r5, r9]
   3fe24:	cmp	r3, #0
   3fe28:	beq	3feac <blkid_probe_get_size@plt+0x38994>
   3fe2c:	mov	r1, r7
   3fe30:	mov	r0, r6
   3fe34:	bl	6a8c <strcspn@plt>
   3fe38:	mov	r1, r7
   3fe3c:	mov	r4, r0
   3fe40:	mov	r0, r8
   3fe44:	bl	6a8c <strcspn@plt>
   3fe48:	cmp	r4, r0
   3fe4c:	bne	3feac <blkid_probe_get_size@plt+0x38994>
   3fe50:	mov	r2, r4
   3fe54:	mov	r1, r8
   3fe58:	mov	r0, r6
   3fe5c:	bl	7398 <memcmp@plt>
   3fe60:	cmp	r0, #0
   3fe64:	bne	3feac <blkid_probe_get_size@plt+0x38994>
   3fe68:	add	r5, r6, r4
   3fe6c:	add	r4, r8, r4
   3fe70:	mov	r1, r7
   3fe74:	mov	r0, r5
   3fe78:	bl	6c9c <strspn@plt>
   3fe7c:	mov	r1, r7
   3fe80:	mov	r9, r0
   3fe84:	mov	r0, r4
   3fe88:	bl	6c9c <strspn@plt>
   3fe8c:	add	r6, r5, r9
   3fe90:	ldrb	r3, [r4, r0]
   3fe94:	add	r8, r4, r0
   3fe98:	cmp	r3, #0
   3fe9c:	bne	3fe20 <blkid_probe_get_size@plt+0x38908>
   3fea0:	mov	r0, r6
   3fea4:	add	sp, sp, #12
   3fea8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3feac:	mov	r6, #0
   3feb0:	mov	r0, r6
   3feb4:	add	sp, sp, #12
   3feb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3febc:	ldr	r2, [pc, #80]	; 3ff14 <blkid_probe_get_size@plt+0x389fc>
   3fec0:	ldr	r1, [pc, #80]	; 3ff18 <blkid_probe_get_size@plt+0x38a00>
   3fec4:	add	r2, pc, r2
   3fec8:	add	r2, r2, #1376	; 0x560
   3fecc:	str	r2, [sp]
   3fed0:	ldr	r2, [pc, #68]	; 3ff1c <blkid_probe_get_size@plt+0x38a04>
   3fed4:	mov	r3, #388	; 0x184
   3fed8:	add	r2, pc, r2
   3fedc:	add	r1, pc, r1
   3fee0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3fee4:	ldr	r3, [pc, #52]	; 3ff20 <blkid_probe_get_size@plt+0x38a08>
   3fee8:	mov	r0, r1
   3feec:	add	r3, pc, r3
   3fef0:	ldr	r2, [pc, #44]	; 3ff24 <blkid_probe_get_size@plt+0x38a0c>
   3fef4:	ldr	r1, [pc, #44]	; 3ff28 <blkid_probe_get_size@plt+0x38a10>
   3fef8:	add	r3, r3, #1376	; 0x560
   3fefc:	str	r3, [sp]
   3ff00:	add	r2, pc, r2
   3ff04:	ldr	r3, [pc, #32]	; 3ff2c <blkid_probe_get_size@plt+0x38a14>
   3ff08:	add	r1, pc, r1
   3ff0c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   3ff10:	andeq	r8, r3, r8, lsr #3
   3ff14:	andeq	lr, r2, ip, lsl #22
   3ff18:	andeq	fp, r2, r8, lsr r4
   3ff1c:	andeq	pc, r2, r8, asr #28
   3ff20:	andeq	lr, r2, r4, ror #21
   3ff24:	andeq	pc, r2, r0, lsr #28
   3ff28:	andeq	pc, r2, ip, asr lr	; <UNPREDICTABLE>
   3ff2c:	andeq	r0, r0, r5, lsl #3
   3ff30:	push	{r4, r5, r6, r7, lr}
   3ff34:	subs	r4, r0, #0
   3ff38:	sub	sp, sp, #12
   3ff3c:	beq	40040 <blkid_probe_get_size@plt+0x38b28>
   3ff40:	ldrb	r6, [r4]
   3ff44:	cmp	r6, #0
   3ff48:	beq	40000 <blkid_probe_get_size@plt+0x38ae8>
   3ff4c:	cmp	r6, #46	; 0x2e
   3ff50:	movne	r5, #0
   3ff54:	andeq	r5, r1, #1
   3ff58:	cmp	r5, #0
   3ff5c:	bne	40068 <blkid_probe_get_size@plt+0x38b50>
   3ff60:	mov	r2, r4
   3ff64:	mov	r3, r6
   3ff68:	mov	r0, r4
   3ff6c:	mov	lr, #0
   3ff70:	mov	r7, #47	; 0x2f
   3ff74:	b	3ffd4 <blkid_probe_get_size@plt+0x38abc>
   3ff78:	cmp	lr, #0
   3ff7c:	addeq	ip, r0, #1
   3ff80:	beq	3ffb4 <blkid_probe_get_size@plt+0x38a9c>
   3ff84:	cmp	r3, #46	; 0x2e
   3ff88:	movne	r3, #0
   3ff8c:	andeq	r3, r1, #1
   3ff90:	cmp	r3, #0
   3ff94:	bne	4000c <blkid_probe_get_size@plt+0x38af4>
   3ff98:	cmp	r5, #0
   3ff9c:	moveq	r3, r0
   3ffa0:	add	ip, r0, #1
   3ffa4:	moveq	r0, ip
   3ffa8:	strbeq	r7, [r3], #2
   3ffac:	movne	r5, #0
   3ffb0:	moveq	ip, r3
   3ffb4:	ldrb	r3, [r2]
   3ffb8:	mov	lr, #0
   3ffbc:	strb	r3, [r0]
   3ffc0:	ldrb	r3, [r2, #1]
   3ffc4:	mov	r0, ip
   3ffc8:	cmp	r3, #0
   3ffcc:	add	r2, r2, #1
   3ffd0:	beq	3fff0 <blkid_probe_get_size@plt+0x38ad8>
   3ffd4:	cmp	r3, #47	; 0x2f
   3ffd8:	bne	3ff78 <blkid_probe_get_size@plt+0x38a60>
   3ffdc:	ldrb	r3, [r2, #1]
   3ffe0:	mov	lr, #1
   3ffe4:	add	r2, r2, #1
   3ffe8:	cmp	r3, #0
   3ffec:	bne	3ffd4 <blkid_probe_get_size@plt+0x38abc>
   3fff0:	cmp	r4, r0
   3fff4:	beq	40024 <blkid_probe_get_size@plt+0x38b0c>
   3fff8:	mov	r3, #0
   3fffc:	strb	r3, [r0]
   40000:	mov	r0, r4
   40004:	add	sp, sp, #12
   40008:	pop	{r4, r5, r6, r7, pc}
   4000c:	ldrb	r3, [r2, #1]
   40010:	cmp	r3, #0
   40014:	beq	3ffc8 <blkid_probe_get_size@plt+0x38ab0>
   40018:	cmp	r3, #47	; 0x2f
   4001c:	bne	3ff98 <blkid_probe_get_size@plt+0x38a80>
   40020:	b	3ffc8 <blkid_probe_get_size@plt+0x38ab0>
   40024:	cmp	r6, #47	; 0x2f
   40028:	add	r0, r4, #1
   4002c:	strbeq	r6, [r4]
   40030:	beq	3fff8 <blkid_probe_get_size@plt+0x38ae0>
   40034:	mov	r3, #46	; 0x2e
   40038:	strb	r3, [r4]
   4003c:	b	3fff8 <blkid_probe_get_size@plt+0x38ae0>
   40040:	ldr	r2, [pc, #88]	; 400a0 <blkid_probe_get_size@plt+0x38b88>
   40044:	ldr	r1, [pc, #88]	; 400a4 <blkid_probe_get_size@plt+0x38b8c>
   40048:	add	r2, pc, r2
   4004c:	add	r2, r2, #1392	; 0x570
   40050:	str	r2, [sp]
   40054:	ldr	r2, [pc, #76]	; 400a8 <blkid_probe_get_size@plt+0x38b90>
   40058:	ldr	r3, [pc, #76]	; 400ac <blkid_probe_get_size@plt+0x38b94>
   4005c:	add	r2, pc, r2
   40060:	add	r1, pc, r1
   40064:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40068:	ldrb	r3, [r4, #1]
   4006c:	cmp	r3, #0
   40070:	beq	40088 <blkid_probe_get_size@plt+0x38b70>
   40074:	cmp	r3, #47	; 0x2f
   40078:	movne	r2, r4
   4007c:	movne	r5, #0
   40080:	movne	r3, #46	; 0x2e
   40084:	bne	3ff68 <blkid_probe_get_size@plt+0x38a50>
   40088:	cmp	r3, #0
   4008c:	add	r2, r4, #1
   40090:	moveq	r0, r2
   40094:	beq	40034 <blkid_probe_get_size@plt+0x38b1c>
   40098:	mov	r5, #1
   4009c:	b	3ff68 <blkid_probe_get_size@plt+0x38a50>
   400a0:	andeq	lr, r2, r8, lsl #19
   400a4:			; <UNDEFINED> instruction: 0x0002b2b4
   400a8:	andeq	pc, r2, r4, asr #25
   400ac:	andeq	r0, r0, fp, asr #2
   400b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   400b4:	subs	r4, r0, #0
   400b8:	sub	sp, sp, #12
   400bc:	beq	40234 <blkid_probe_get_size@plt+0x38d1c>
   400c0:	ldrb	r3, [r4]
   400c4:	cmp	r3, #0
   400c8:	beq	401f8 <blkid_probe_get_size@plt+0x38ce0>
   400cc:	mov	r5, r1
   400d0:	ldr	r1, [pc, #444]	; 40294 <blkid_probe_get_size@plt+0x38d7c>
   400d4:	mov	r6, r2
   400d8:	add	r1, pc, r1
   400dc:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   400e0:	cmp	r0, #0
   400e4:	beq	401f8 <blkid_probe_get_size@plt+0x38ce0>
   400e8:	mov	r0, r4
   400ec:	bl	708c <basename@plt>
   400f0:	mov	r8, r0
   400f4:	bl	39ce8 <blkid_probe_get_size@plt+0x327d0>
   400f8:	cmp	r0, #0
   400fc:	beq	401f8 <blkid_probe_get_size@plt+0x38ce0>
   40100:	mov	r0, r4
   40104:	bl	723c <strlen@plt>
   40108:	add	r0, r0, #9
   4010c:	bl	7230 <malloc@plt>
   40110:	subs	r7, r0, #0
   40114:	beq	4028c <blkid_probe_get_size@plt+0x38d74>
   40118:	sub	r2, r8, r4
   4011c:	mov	r1, r4
   40120:	bl	72c0 <mempcpy@plt>
   40124:	ldr	r3, [pc, #364]	; 40298 <blkid_probe_get_size@plt+0x38d80>
   40128:	mov	r1, r8
   4012c:	add	r3, pc, r3
   40130:	ldrh	r3, [r3]
   40134:	strh	r3, [r0], #2
   40138:	bl	6ae0 <stpcpy@plt>
   4013c:	ldr	r3, [pc, #344]	; 4029c <blkid_probe_get_size@plt+0x38d84>
   40140:	mov	r1, #0
   40144:	add	r3, pc, r3
   40148:	ldrh	ip, [r3, #4]
   4014c:	mov	r2, r0
   40150:	ldr	r0, [r3]
   40154:	ldrb	r3, [r3, #6]
   40158:	str	r0, [r2]
   4015c:	strh	ip, [r2, #4]
   40160:	mov	r0, r7
   40164:	strb	r3, [r2, #6]
   40168:	bl	3ff30 <blkid_probe_get_size@plt+0x38a18>
   4016c:	subs	r4, r0, #0
   40170:	beq	4025c <blkid_probe_get_size@plt+0x38d44>
   40174:	mov	r0, #63	; 0x3f
   40178:	bl	71f4 <umask@plt>
   4017c:	mov	r1, #524288	; 0x80000
   40180:	mov	r8, r0
   40184:	mov	r0, r4
   40188:	bl	6e4c <mkostemp64@plt>
   4018c:	subs	r7, r0, #0
   40190:	blt	40204 <blkid_probe_get_size@plt+0x38cec>
   40194:	mov	r0, r8
   40198:	bl	71f4 <umask@plt>
   4019c:	ldr	r1, [pc, #252]	; 402a0 <blkid_probe_get_size@plt+0x38d88>
   401a0:	mov	r0, r7
   401a4:	add	r1, pc, r1
   401a8:	bl	69d8 <fdopen@plt>
   401ac:	cmp	r0, #0
   401b0:	strne	r0, [r5]
   401b4:	movne	r0, #0
   401b8:	strne	r4, [r6]
   401bc:	bne	401fc <blkid_probe_get_size@plt+0x38ce4>
   401c0:	bl	732c <__errno_location@plt>
   401c4:	mov	r5, r0
   401c8:	mov	r0, r4
   401cc:	ldr	r6, [r5]
   401d0:	bl	6e28 <unlink@plt>
   401d4:	cmp	r6, #0
   401d8:	strge	r6, [r5]
   401dc:	mov	r0, r4
   401e0:	bl	69f0 <free@plt>
   401e4:	mov	r0, r7
   401e8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   401ec:	ldr	r0, [r5]
   401f0:	rsb	r0, r0, #0
   401f4:	b	401fc <blkid_probe_get_size@plt+0x38ce4>
   401f8:	mvn	r0, #21
   401fc:	add	sp, sp, #12
   40200:	pop	{r4, r5, r6, r7, r8, r9, pc}
   40204:	bl	732c <__errno_location@plt>
   40208:	mov	r9, r0
   4020c:	mov	r0, r8
   40210:	ldr	r7, [r9]
   40214:	bl	71f4 <umask@plt>
   40218:	cmp	r7, #0
   4021c:	ble	40284 <blkid_probe_get_size@plt+0x38d6c>
   40220:	mov	r0, r4
   40224:	bl	69f0 <free@plt>
   40228:	ldr	r0, [r9]
   4022c:	rsb	r0, r0, #0
   40230:	b	401fc <blkid_probe_get_size@plt+0x38ce4>
   40234:	ldr	r2, [pc, #104]	; 402a4 <blkid_probe_get_size@plt+0x38d8c>
   40238:	ldr	r1, [pc, #104]	; 402a8 <blkid_probe_get_size@plt+0x38d90>
   4023c:	add	r2, pc, r2
   40240:	add	r2, r2, #1408	; 0x580
   40244:	str	r2, [sp]
   40248:	ldr	r2, [pc, #92]	; 402ac <blkid_probe_get_size@plt+0x38d94>
   4024c:	mov	r3, #26
   40250:	add	r2, pc, r2
   40254:	add	r1, pc, r1
   40258:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4025c:	ldr	r2, [pc, #76]	; 402b0 <blkid_probe_get_size@plt+0x38d98>
   40260:	ldr	r1, [pc, #76]	; 402b4 <blkid_probe_get_size@plt+0x38d9c>
   40264:	add	r2, pc, r2
   40268:	add	r2, r2, #1424	; 0x590
   4026c:	str	r2, [sp]
   40270:	ldr	r2, [pc, #64]	; 402b8 <blkid_probe_get_size@plt+0x38da0>
   40274:	mov	r3, #59	; 0x3b
   40278:	add	r2, pc, r2
   4027c:	add	r1, pc, r1
   40280:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40284:	rsb	r7, r7, #0
   40288:	b	4019c <blkid_probe_get_size@plt+0x38c84>
   4028c:	mvn	r0, #11
   40290:	b	401fc <blkid_probe_get_size@plt+0x38ce4>
   40294:	andeq	r7, r3, r8, ror #29
   40298:	andeq	pc, r2, ip, asr ip	; <UNPREDICTABLE>
   4029c:	andeq	pc, r2, r8, asr #24
   402a0:	andeq	r6, r3, r4, ror r0
   402a4:	muleq	r2, r4, r7
   402a8:	andeq	fp, r2, r0, asr #1
   402ac:	andeq	pc, r2, ip, lsl fp	; <UNPREDICTABLE>
   402b0:	andeq	lr, r2, ip, ror #14
   402b4:	andeq	pc, r2, r8, lsl fp	; <UNPREDICTABLE>
   402b8:	strdeq	pc, [r2], -r4
   402bc:	ldr	r3, [pc, #844]	; 40610 <blkid_probe_get_size@plt+0x390f8>
   402c0:	ldr	ip, [pc, #844]	; 40614 <blkid_probe_get_size@plt+0x390fc>
   402c4:	add	r3, pc, r3
   402c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   402cc:	mov	r4, r1
   402d0:	add	fp, sp, #32
   402d4:	sub	sp, sp, #28
   402d8:	ldr	r1, [r3, ip]
   402dc:	subs	r5, r0, #0
   402e0:	str	r1, [fp, #-48]	; 0xffffffd0
   402e4:	ldr	r3, [r1]
   402e8:	str	r2, [fp, #-52]	; 0xffffffcc
   402ec:	str	r3, [fp, #-40]	; 0xffffffd8
   402f0:	beq	405a4 <blkid_probe_get_size@plt+0x3908c>
   402f4:	cmp	r4, #0
   402f8:	beq	405d8 <blkid_probe_get_size@plt+0x390c0>
   402fc:	ldrb	r3, [r5]
   40300:	cmp	r3, #47	; 0x2f
   40304:	bne	404b8 <blkid_probe_get_size@plt+0x38fa0>
   40308:	ldrb	r3, [r4]
   4030c:	cmp	r3, #47	; 0x2f
   40310:	bne	404b8 <blkid_probe_get_size@plt+0x38fa0>
   40314:	bl	723c <strlen@plt>
   40318:	mov	r1, r5
   4031c:	add	r3, r0, #15
   40320:	bic	r3, r3, #7
   40324:	sub	sp, sp, r3
   40328:	add	r2, r0, #1
   4032c:	add	r0, sp, #8
   40330:	bl	71e8 <memcpy@plt>
   40334:	mov	sl, r0
   40338:	mov	r0, r4
   4033c:	bl	723c <strlen@plt>
   40340:	mov	r1, r4
   40344:	add	r3, r0, #15
   40348:	bic	r3, r3, #7
   4034c:	sub	sp, sp, r3
   40350:	add	r2, r0, #1
   40354:	add	r0, sp, #8
   40358:	bl	71e8 <memcpy@plt>
   4035c:	mov	r1, #1
   40360:	mov	r5, r0
   40364:	mov	r0, sl
   40368:	bl	3ff30 <blkid_probe_get_size@plt+0x38a18>
   4036c:	mov	r0, r5
   40370:	mov	r1, #1
   40374:	bl	3ff30 <blkid_probe_get_size@plt+0x38a18>
   40378:	ldrb	r3, [sl]
   4037c:	ldrb	r1, [r5]
   40380:	sub	r3, r3, #47	; 0x2f
   40384:	clz	r3, r3
   40388:	lsr	r3, r3, #5
   4038c:	sub	r1, r1, #47	; 0x2f
   40390:	ldrb	r6, [sl, r3]
   40394:	clz	r1, r1
   40398:	lsr	r1, r1, #5
   4039c:	cmp	r6, #0
   403a0:	add	r4, r5, r1
   403a4:	add	sl, sl, r3
   403a8:	ldrb	r5, [r5, r1]
   403ac:	beq	4054c <blkid_probe_get_size@plt+0x39034>
   403b0:	cmp	r5, #0
   403b4:	beq	40578 <blkid_probe_get_size@plt+0x39060>
   403b8:	ldr	r9, [pc, #600]	; 40618 <blkid_probe_get_size@plt+0x39100>
   403bc:	add	r9, pc, r9
   403c0:	b	40424 <blkid_probe_get_size@plt+0x38f0c>
   403c4:	mov	r2, r7
   403c8:	mov	r1, r4
   403cc:	mov	r0, sl
   403d0:	bl	7398 <memcmp@plt>
   403d4:	cmp	r0, #0
   403d8:	bne	40448 <blkid_probe_get_size@plt+0x38f30>
   403dc:	ldrb	r1, [sl, r7]
   403e0:	add	sl, sl, r7
   403e4:	ldrb	r3, [r4, r7]
   403e8:	sub	r1, r1, #47	; 0x2f
   403ec:	clz	r1, r1
   403f0:	lsr	r1, r1, #5
   403f4:	add	r7, r4, r7
   403f8:	ldrb	r6, [sl, r1]
   403fc:	sub	r3, r3, #47	; 0x2f
   40400:	clz	r3, r3
   40404:	lsr	r3, r3, #5
   40408:	cmp	r6, #0
   4040c:	add	sl, sl, r1
   40410:	add	r4, r7, r3
   40414:	ldrb	r5, [r7, r3]
   40418:	beq	4054c <blkid_probe_get_size@plt+0x39034>
   4041c:	cmp	r5, #0
   40420:	beq	40578 <blkid_probe_get_size@plt+0x39060>
   40424:	mov	r1, r9
   40428:	mov	r0, sl
   4042c:	bl	6a8c <strcspn@plt>
   40430:	mov	r1, r9
   40434:	mov	r7, r0
   40438:	mov	r0, r4
   4043c:	bl	6a8c <strcspn@plt>
   40440:	cmp	r7, r0
   40444:	beq	403c4 <blkid_probe_get_size@plt+0x38eac>
   40448:	ldrb	r6, [sl]
   4044c:	cmp	r6, #0
   40450:	moveq	r8, r6
   40454:	beq	404c4 <blkid_probe_get_size@plt+0x38fac>
   40458:	ldr	r9, [pc, #444]	; 4061c <blkid_probe_get_size@plt+0x39104>
   4045c:	mov	r8, #0
   40460:	add	r9, pc, r9
   40464:	b	404a0 <blkid_probe_get_size@plt+0x38f88>
   40468:	ldrb	r2, [sl, r7]
   4046c:	add	r7, sl, r7
   40470:	add	r8, r8, #1
   40474:	sub	r2, r2, #47	; 0x2f
   40478:	clz	r2, r2
   4047c:	lsr	r2, r2, #5
   40480:	add	sl, r7, r2
   40484:	ldrb	r6, [r7, r2]
   40488:	cmp	r6, #0
   4048c:	beq	404c0 <blkid_probe_get_size@plt+0x38fa8>
   40490:	mov	r1, r9
   40494:	mov	r0, sl
   40498:	bl	6a8c <strcspn@plt>
   4049c:	mov	r7, r0
   404a0:	cmp	r6, #46	; 0x2e
   404a4:	cmpeq	r7, #2
   404a8:	bne	40468 <blkid_probe_get_size@plt+0x38f50>
   404ac:	ldrb	r2, [sl, #1]
   404b0:	cmp	r2, #46	; 0x2e
   404b4:	bne	40468 <blkid_probe_get_size@plt+0x38f50>
   404b8:	mvn	r0, #21
   404bc:	b	40530 <blkid_probe_get_size@plt+0x39018>
   404c0:	add	r6, r8, r8, lsl #1
   404c4:	mov	r0, r4
   404c8:	bl	723c <strlen@plt>
   404cc:	add	r2, r0, r6
   404d0:	adds	r2, r2, #1
   404d4:	mov	sl, r0
   404d8:	movne	r0, r2
   404dc:	moveq	r0, #1
   404e0:	bl	7230 <malloc@plt>
   404e4:	subs	r9, r0, #0
   404e8:	beq	40604 <blkid_probe_get_size@plt+0x390ec>
   404ec:	cmp	r8, #0
   404f0:	moveq	r0, r9
   404f4:	beq	40518 <blkid_probe_get_size@plt+0x39000>
   404f8:	ldr	r7, [pc, #288]	; 40620 <blkid_probe_get_size@plt+0x39108>
   404fc:	mov	r0, r9
   40500:	add	r7, pc, r7
   40504:	mov	r2, #3
   40508:	mov	r1, r7
   4050c:	bl	72c0 <mempcpy@plt>
   40510:	subs	r8, r8, #1
   40514:	bne	40504 <blkid_probe_get_size@plt+0x38fec>
   40518:	cmp	r5, #0
   4051c:	strbeq	r5, [r0, #-1]
   40520:	bne	40594 <blkid_probe_get_size@plt+0x3907c>
   40524:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40528:	mov	r0, #0
   4052c:	str	r9, [r3]
   40530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40534:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40538:	ldr	r3, [r3]
   4053c:	cmp	r2, r3
   40540:	bne	4060c <blkid_probe_get_size@plt+0x390f4>
   40544:	sub	sp, fp, #32
   40548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4054c:	cmp	r5, #0
   40550:	bne	405cc <blkid_probe_get_size@plt+0x390b4>
   40554:	ldr	r0, [pc, #200]	; 40624 <blkid_probe_get_size@plt+0x3910c>
   40558:	add	r0, pc, r0
   4055c:	bl	74e8 <strdup@plt>
   40560:	cmp	r0, #0
   40564:	beq	40604 <blkid_probe_get_size@plt+0x390ec>
   40568:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4056c:	str	r0, [r3]
   40570:	mov	r0, #0
   40574:	b	40530 <blkid_probe_get_size@plt+0x39018>
   40578:	ldr	r1, [pc, #168]	; 40628 <blkid_probe_get_size@plt+0x39110>
   4057c:	mov	r0, sl
   40580:	add	r1, pc, r1
   40584:	bl	6a8c <strcspn@plt>
   40588:	mov	r5, #0
   4058c:	mov	r7, r0
   40590:	b	40458 <blkid_probe_get_size@plt+0x38f40>
   40594:	add	r2, sl, #1
   40598:	mov	r1, r4
   4059c:	bl	71e8 <memcpy@plt>
   405a0:	b	40524 <blkid_probe_get_size@plt+0x3900c>
   405a4:	ldr	r2, [pc, #128]	; 4062c <blkid_probe_get_size@plt+0x39114>
   405a8:	ldr	r1, [pc, #128]	; 40630 <blkid_probe_get_size@plt+0x39118>
   405ac:	add	r2, pc, r2
   405b0:	add	r2, r2, #1440	; 0x5a0
   405b4:	str	r2, [sp]
   405b8:	ldr	r2, [pc, #116]	; 40634 <blkid_probe_get_size@plt+0x3911c>
   405bc:	mov	r3, #126	; 0x7e
   405c0:	add	r2, pc, r2
   405c4:	add	r1, pc, r1
   405c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   405cc:	mov	r0, r4
   405d0:	bl	74e8 <strdup@plt>
   405d4:	b	40560 <blkid_probe_get_size@plt+0x39048>
   405d8:	ldr	r3, [pc, #88]	; 40638 <blkid_probe_get_size@plt+0x39120>
   405dc:	ldr	r2, [pc, #88]	; 4063c <blkid_probe_get_size@plt+0x39124>
   405e0:	add	r3, pc, r3
   405e4:	ldr	r1, [pc, #84]	; 40640 <blkid_probe_get_size@plt+0x39128>
   405e8:	add	r3, r3, #1440	; 0x5a0
   405ec:	str	r3, [sp]
   405f0:	mov	r0, r4
   405f4:	mov	r3, #127	; 0x7f
   405f8:	add	r2, pc, r2
   405fc:	add	r1, pc, r1
   40600:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40604:	mvn	r0, #11
   40608:	b	40530 <blkid_probe_get_size@plt+0x39018>
   4060c:	bl	6fb4 <__stack_chk_fail@plt>
   40610:	andeq	r7, r5, r4, lsr #17
   40614:	andeq	r0, r0, ip, lsr r4
   40618:	andeq	r7, r3, r4, lsl #24
   4061c:	andeq	r7, r3, r0, ror #22
   40620:	strdeq	r6, [r2], -r0
   40624:	strdeq	r1, [r3], -r4
   40628:	andeq	r7, r3, r0, asr #20
   4062c:	andeq	lr, r2, r4, lsr #8
   40630:	ldrdeq	pc, [r2], -r8
   40634:	andeq	pc, r2, r0, ror #14
   40638:	strdeq	lr, [r2], -r0
   4063c:	andeq	pc, r2, r8, lsr #14
   40640:	andeq	pc, r2, ip, lsr #15
   40644:	push	{r4, r5, r6, lr}
   40648:	subs	r4, r0, #0
   4064c:	sub	sp, sp, #8
   40650:	beq	406b8 <blkid_probe_get_size@plt+0x391a0>
   40654:	ldrb	r3, [r4]
   40658:	mov	r5, r1
   4065c:	cmp	r3, #47	; 0x2f
   40660:	beq	406ac <blkid_probe_get_size@plt+0x39194>
   40664:	bl	6fa8 <get_current_dir_name@plt>
   40668:	subs	r6, r0, #0
   4066c:	beq	406e4 <blkid_probe_get_size@plt+0x391cc>
   40670:	ldrb	r3, [r6]
   40674:	cmp	r3, #47	; 0x2f
   40678:	bne	40730 <blkid_probe_get_size@plt+0x39218>
   4067c:	mov	r1, r4
   40680:	mvn	r2, #0
   40684:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
   40688:	mov	r4, r0
   4068c:	mov	r0, r6
   40690:	bl	69f0 <free@plt>
   40694:	cmp	r4, #0
   40698:	movne	r0, #0
   4069c:	mvneq	r0, #11
   406a0:	strne	r4, [r5]
   406a4:	add	sp, sp, #8
   406a8:	pop	{r4, r5, r6, pc}
   406ac:	bl	74e8 <strdup@plt>
   406b0:	mov	r4, r0
   406b4:	b	40694 <blkid_probe_get_size@plt+0x3917c>
   406b8:	ldr	r2, [pc, #124]	; 4073c <blkid_probe_get_size@plt+0x39224>
   406bc:	ldr	r1, [pc, #124]	; 40740 <blkid_probe_get_size@plt+0x39228>
   406c0:	add	r2, pc, r2
   406c4:	add	r2, r2, #1456	; 0x5b0
   406c8:	add	r2, r2, #4
   406cc:	str	r2, [sp]
   406d0:	ldr	r2, [pc, #108]	; 40744 <blkid_probe_get_size@plt+0x3922c>
   406d4:	mov	r3, #98	; 0x62
   406d8:	add	r2, pc, r2
   406dc:	add	r1, pc, r1
   406e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   406e4:	bl	732c <__errno_location@plt>
   406e8:	ldr	r0, [r0]
   406ec:	cmp	r0, #0
   406f0:	rsbgt	r0, r0, #0
   406f4:	bgt	406a4 <blkid_probe_get_size@plt+0x3918c>
   406f8:	ldr	r3, [pc, #72]	; 40748 <blkid_probe_get_size@plt+0x39230>
   406fc:	ldr	r2, [pc, #72]	; 4074c <blkid_probe_get_size@plt+0x39234>
   40700:	add	r3, pc, r3
   40704:	add	r3, r3, #1472	; 0x5c0
   40708:	ldr	r1, [pc, #64]	; 40750 <blkid_probe_get_size@plt+0x39238>
   4070c:	add	r3, r3, #12
   40710:	mov	r0, r6
   40714:	str	r3, [sp]
   40718:	add	r2, pc, r2
   4071c:	mov	r3, #197	; 0xc5
   40720:	add	r1, pc, r1
   40724:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   40728:	mvn	r0, #21
   4072c:	b	406a4 <blkid_probe_get_size@plt+0x3918c>
   40730:	bl	69f0 <free@plt>
   40734:	mvn	r0, #122	; 0x7a
   40738:	b	406a4 <blkid_probe_get_size@plt+0x3918c>
   4073c:	andeq	lr, r2, r0, lsl r3
   40740:	andeq	r4, r3, ip, lsl r0
   40744:	andeq	pc, r2, r8, asr #12
   40748:	ldrdeq	lr, [r2], -r0
   4074c:	andeq	r8, r2, r8, lsl #3
   40750:	andeq	pc, r2, r0, ror #9
   40754:	ldr	r3, [pc, #1072]	; 40b8c <blkid_probe_get_size@plt+0x39674>
   40758:	ldr	r2, [pc, #1072]	; 40b90 <blkid_probe_get_size@plt+0x39678>
   4075c:	add	r3, pc, r3
   40760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40764:	sub	sp, sp, #188	; 0xbc
   40768:	ldr	r4, [r3, r2]
   4076c:	mov	r7, #0
   40770:	subs	r5, r0, #0
   40774:	ldr	r3, [r4]
   40778:	str	r7, [sp, #44]	; 0x2c
   4077c:	str	r3, [sp, #180]	; 0xb4
   40780:	beq	40810 <blkid_probe_get_size@plt+0x392f8>
   40784:	mov	r6, r1
   40788:	bl	39944 <blkid_probe_get_size@plt+0x3242c>
   4078c:	subs	r8, r0, #0
   40790:	bne	407c4 <blkid_probe_get_size@plt+0x392ac>
   40794:	mvn	r5, #0
   40798:	mov	r0, r5
   4079c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   407a0:	ldr	r0, [sp, #44]	; 0x2c
   407a4:	bl	69f0 <free@plt>
   407a8:	ldr	r2, [sp, #180]	; 0xb4
   407ac:	ldr	r3, [r4]
   407b0:	mov	r0, r8
   407b4:	cmp	r2, r3
   407b8:	bne	40b88 <blkid_probe_get_size@plt+0x39670>
   407bc:	add	sp, sp, #188	; 0xbc
   407c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   407c4:	mov	r0, r5
   407c8:	add	r1, sp, #44	; 0x2c
   407cc:	bl	40644 <blkid_probe_get_size@plt+0x3912c>
   407d0:	subs	r8, r0, #0
   407d4:	blt	40794 <blkid_probe_get_size@plt+0x3927c>
   407d8:	mov	r1, #2654208	; 0x288000
   407dc:	ldr	r0, [sp, #44]	; 0x2c
   407e0:	bl	6ec4 <open64@plt>
   407e4:	subs	r5, r0, #0
   407e8:	bge	4083c <blkid_probe_get_size@plt+0x39324>
   407ec:	bl	732c <__errno_location@plt>
   407f0:	cmp	r6, #0
   407f4:	ldr	r8, [r0]
   407f8:	beq	40808 <blkid_probe_get_size@plt+0x392f0>
   407fc:	cmp	r8, #2
   40800:	moveq	r8, r7
   40804:	beq	40798 <blkid_probe_get_size@plt+0x39280>
   40808:	rsb	r8, r8, #0
   4080c:	b	40798 <blkid_probe_get_size@plt+0x39280>
   40810:	ldr	r2, [pc, #892]	; 40b94 <blkid_probe_get_size@plt+0x3967c>
   40814:	ldr	r1, [pc, #892]	; 40b98 <blkid_probe_get_size@plt+0x39680>
   40818:	add	r2, pc, r2
   4081c:	add	r2, r2, #1488	; 0x5d0
   40820:	add	r2, r2, #12
   40824:	str	r2, [sp]
   40828:	ldr	r2, [pc, #876]	; 40b9c <blkid_probe_get_size@plt+0x39684>
   4082c:	mov	r3, #215	; 0xd7
   40830:	add	r2, pc, r2
   40834:	add	r1, pc, r1
   40838:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4083c:	ldr	r6, [sp, #44]	; 0x2c
   40840:	cmp	r6, #0
   40844:	beq	408b8 <blkid_probe_get_size@plt+0x393a0>
   40848:	ldrb	r3, [r6]
   4084c:	cmp	r3, #47	; 0x2f
   40850:	bne	408e8 <blkid_probe_get_size@plt+0x393d0>
   40854:	ldr	r1, [pc, #836]	; 40ba0 <blkid_probe_get_size@plt+0x39688>
   40858:	mov	r0, r6
   4085c:	add	r1, pc, r1
   40860:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   40864:	subs	r8, r0, #0
   40868:	beq	40798 <blkid_probe_get_size@plt+0x39280>
   4086c:	add	r2, sp, #48	; 0x30
   40870:	mov	r1, r5
   40874:	mov	r0, #3
   40878:	bl	6c90 <__fxstat64@plt>
   4087c:	cmp	r0, #0
   40880:	blt	408ac <blkid_probe_get_size@plt+0x39394>
   40884:	ldr	r3, [sp, #64]	; 0x40
   40888:	and	r3, r3, #61440	; 0xf000
   4088c:	cmp	r3, #16384	; 0x4000
   40890:	beq	40aa8 <blkid_probe_get_size@plt+0x39590>
   40894:	cmp	r3, #40960	; 0xa000
   40898:	beq	40918 <blkid_probe_get_size@plt+0x39400>
   4089c:	cmp	r3, #8192	; 0x2000
   408a0:	beq	40ab4 <blkid_probe_get_size@plt+0x3959c>
   408a4:	mov	r8, #0
   408a8:	b	40798 <blkid_probe_get_size@plt+0x39280>
   408ac:	bl	732c <__errno_location@plt>
   408b0:	ldr	r8, [r0]
   408b4:	b	40808 <blkid_probe_get_size@plt+0x392f0>
   408b8:	ldr	r3, [pc, #740]	; 40ba4 <blkid_probe_get_size@plt+0x3968c>
   408bc:	ldr	r2, [pc, #740]	; 40ba8 <blkid_probe_get_size@plt+0x39690>
   408c0:	add	r3, pc, r3
   408c4:	add	r3, r3, #1504	; 0x5e0
   408c8:	ldr	r1, [pc, #732]	; 40bac <blkid_probe_get_size@plt+0x39694>
   408cc:	add	r3, r3, #12
   408d0:	str	r3, [sp]
   408d4:	mov	r0, r6
   408d8:	mov	r3, #132	; 0x84
   408dc:	add	r2, pc, r2
   408e0:	add	r1, pc, r1
   408e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   408e8:	ldr	r3, [pc, #704]	; 40bb0 <blkid_probe_get_size@plt+0x39698>
   408ec:	ldr	r2, [pc, #704]	; 40bb4 <blkid_probe_get_size@plt+0x3969c>
   408f0:	add	r3, pc, r3
   408f4:	add	r3, r3, #1504	; 0x5e0
   408f8:	ldr	r1, [pc, #696]	; 40bb8 <blkid_probe_get_size@plt+0x396a0>
   408fc:	add	r3, r3, #12
   40900:	str	r3, [sp]
   40904:	mov	r0, r7
   40908:	mov	r3, #133	; 0x85
   4090c:	add	r2, pc, r2
   40910:	add	r1, pc, r1
   40914:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40918:	ldr	fp, [pc, #668]	; 40bbc <blkid_probe_get_size@plt+0x396a4>
   4091c:	add	fp, pc, fp
   40920:	ldr	r2, [pc, #664]	; 40bc0 <blkid_probe_get_size@plt+0x396a8>
   40924:	mov	r3, #26
   40928:	add	r2, pc, r2
   4092c:	add	r9, sp, #152	; 0x98
   40930:	stm	sp, {r2, r5}
   40934:	mov	r0, r9
   40938:	mov	r1, r3
   4093c:	mov	r2, #1
   40940:	bl	7260 <__snprintf_chk@plt>
   40944:	cmp	r0, #25
   40948:	bhi	40acc <blkid_probe_get_size@plt+0x395b4>
   4094c:	ldr	r1, [pc, #624]	; 40bc4 <blkid_probe_get_size@plt+0x396ac>
   40950:	mov	sl, #0
   40954:	str	sl, [sp]
   40958:	mov	r3, #1
   4095c:	mov	r2, fp
   40960:	add	r1, pc, r1
   40964:	mov	r0, r9
   40968:	bl	6c30 <setxattr@plt>
   4096c:	cmp	r0, sl
   40970:	bge	408a4 <blkid_probe_get_size@plt+0x3938c>
   40974:	bl	732c <__errno_location@plt>
   40978:	ldr	r3, [r0]
   4097c:	str	r0, [sp, #20]
   40980:	cmp	r3, #95	; 0x5f
   40984:	str	r3, [sp, #24]
   40988:	beq	40ac0 <blkid_probe_get_size@plt+0x395a8>
   4098c:	ldr	r3, [pc, #564]	; 40bc8 <blkid_probe_get_size@plt+0x396b0>
   40990:	ldr	r2, [pc, #564]	; 40bcc <blkid_probe_get_size@plt+0x396b4>
   40994:	add	r3, pc, r3
   40998:	add	r2, pc, r2
   4099c:	str	fp, [sp, #36]	; 0x24
   409a0:	str	r4, [sp, #32]
   409a4:	mov	r7, #100	; 0x64
   409a8:	str	r5, [sp, #28]
   409ac:	mov	r4, r3
   409b0:	mov	fp, r2
   409b4:	b	409d8 <blkid_probe_get_size@plt+0x394c0>
   409b8:	mov	r3, #0
   409bc:	mov	r2, r3
   409c0:	mov	r1, fp
   409c4:	mov	r0, r9
   409c8:	bl	6eb8 <getxattr@plt>
   409cc:	cmp	r0, #0
   409d0:	blt	40b24 <blkid_probe_get_size@plt+0x3960c>
   409d4:	add	r7, r0, #1
   409d8:	mov	r1, #1
   409dc:	mov	r0, r7
   409e0:	bl	7164 <calloc@plt>
   409e4:	cmp	r0, #0
   409e8:	mov	r8, r0
   409ec:	beq	40afc <blkid_probe_get_size@plt+0x395e4>
   409f0:	mov	r2, r0
   409f4:	mov	r3, r7
   409f8:	mov	r1, r4
   409fc:	mov	r0, r9
   40a00:	bl	6eb8 <getxattr@plt>
   40a04:	mvn	r2, r0
   40a08:	cmp	r7, r0
   40a0c:	lsr	r2, r2, #31
   40a10:	movls	r2, #0
   40a14:	cmp	r2, #0
   40a18:	mov	r5, r0
   40a1c:	bne	40b10 <blkid_probe_get_size@plt+0x395f8>
   40a20:	mov	r0, r8
   40a24:	bl	69f0 <free@plt>
   40a28:	cmp	r5, #0
   40a2c:	bge	409b8 <blkid_probe_get_size@plt+0x394a0>
   40a30:	ldr	r3, [sp, #20]
   40a34:	ldr	r3, [r3]
   40a38:	cmp	r3, #34	; 0x22
   40a3c:	beq	409b8 <blkid_probe_get_size@plt+0x394a0>
   40a40:	ldr	r5, [sp, #28]
   40a44:	ldr	fp, [sp, #36]	; 0x24
   40a48:	ldr	r4, [sp, #32]
   40a4c:	rsb	r3, r3, #0
   40a50:	cmp	r3, #0
   40a54:	blt	40b04 <blkid_probe_get_size@plt+0x395ec>
   40a58:	mov	r3, #0
   40a5c:	mov	r7, r3
   40a60:	mov	r1, fp
   40a64:	mov	r0, r7
   40a68:	bl	7314 <strcmp@plt>
   40a6c:	subs	r8, r0, #0
   40a70:	beq	40a9c <blkid_probe_get_size@plt+0x39584>
   40a74:	ldr	r3, [pc, #340]	; 40bd0 <blkid_probe_get_size@plt+0x396b8>
   40a78:	add	r3, pc, r3
   40a7c:	ldr	r3, [r3]
   40a80:	cmp	r3, #6
   40a84:	bgt	40b40 <blkid_probe_get_size@plt+0x39628>
   40a88:	ldr	r8, [sp, #24]
   40a8c:	cmp	r8, #0
   40a90:	rsblt	r8, r8, #0
   40a94:	uxtb	r8, r8
   40a98:	rsb	r8, r8, #0
   40a9c:	mov	r0, r7
   40aa0:	bl	69f0 <free@plt>
   40aa4:	b	40798 <blkid_probe_get_size@plt+0x39280>
   40aa8:	ldr	fp, [pc, #292]	; 40bd4 <blkid_probe_get_size@plt+0x396bc>
   40aac:	add	fp, pc, fp
   40ab0:	b	40920 <blkid_probe_get_size@plt+0x39408>
   40ab4:	ldr	fp, [pc, #284]	; 40bd8 <blkid_probe_get_size@plt+0x396c0>
   40ab8:	add	fp, pc, fp
   40abc:	b	40920 <blkid_probe_get_size@plt+0x39408>
   40ac0:	mov	r8, sl
   40ac4:	mov	r7, sl
   40ac8:	b	40a9c <blkid_probe_get_size@plt+0x39584>
   40acc:	ldr	r2, [pc, #264]	; 40bdc <blkid_probe_get_size@plt+0x396c4>
   40ad0:	ldr	r1, [pc, #264]	; 40be0 <blkid_probe_get_size@plt+0x396c8>
   40ad4:	add	r2, pc, r2
   40ad8:	add	r2, r2, #1504	; 0x5e0
   40adc:	add	r2, r2, #12
   40ae0:	str	r2, [sp]
   40ae4:	ldr	r2, [pc, #248]	; 40be4 <blkid_probe_get_size@plt+0x396cc>
   40ae8:	mov	r3, #157	; 0x9d
   40aec:	add	r2, pc, r2
   40af0:	add	r1, pc, r1
   40af4:	mov	r0, #0
   40af8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40afc:	ldr	r5, [sp, #28]
   40b00:	ldr	r4, [sp, #32]
   40b04:	mov	r3, #0
   40b08:	mov	r7, r3
   40b0c:	b	40a74 <blkid_probe_get_size@plt+0x3955c>
   40b10:	ldr	r5, [sp, #28]
   40b14:	ldr	fp, [sp, #36]	; 0x24
   40b18:	mov	r7, r8
   40b1c:	ldr	r4, [sp, #32]
   40b20:	b	40a60 <blkid_probe_get_size@plt+0x39548>
   40b24:	ldr	r3, [sp, #20]
   40b28:	ldr	r5, [sp, #28]
   40b2c:	ldr	fp, [sp, #36]	; 0x24
   40b30:	ldr	r3, [r3]
   40b34:	ldr	r4, [sp, #32]
   40b38:	rsb	r3, r3, #0
   40b3c:	b	40a50 <blkid_probe_get_size@plt+0x39538>
   40b40:	ldr	r3, [pc, #160]	; 40be8 <blkid_probe_get_size@plt+0x396d0>
   40b44:	ldr	r2, [pc, #160]	; 40bec <blkid_probe_get_size@plt+0x396d4>
   40b48:	add	r3, pc, r3
   40b4c:	add	r2, pc, r2
   40b50:	ldr	r1, [sp, #24]
   40b54:	str	r2, [sp, #4]
   40b58:	add	r3, r3, #1520	; 0x5f0
   40b5c:	ldr	r2, [pc, #140]	; 40bf0 <blkid_probe_get_size@plt+0x396d8>
   40b60:	add	r3, r3, #12
   40b64:	str	r3, [sp]
   40b68:	str	r6, [sp, #8]
   40b6c:	rsb	r1, r1, #0
   40b70:	mov	r3, #176	; 0xb0
   40b74:	add	r2, pc, r2
   40b78:	mov	r0, #7
   40b7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   40b80:	mov	r8, r0
   40b84:	b	40a9c <blkid_probe_get_size@plt+0x39584>
   40b88:	bl	6fb4 <__stack_chk_fail@plt>
   40b8c:	andeq	r7, r5, ip, lsl #8
   40b90:	andeq	r0, r0, ip, lsr r4
   40b94:			; <UNDEFINED> instruction: 0x0002e1b8
   40b98:	andeq	sl, r2, r0, ror #21
   40b9c:	andeq	pc, r2, r4, lsl #11
   40ba0:	strdeq	r6, [r2], -r0
   40ba4:	andeq	lr, r2, r0, lsl r1
   40ba8:	ldrdeq	pc, [r2], -r8
   40bac:	strdeq	pc, [r2], -r0
   40bb0:	andeq	lr, r2, r0, ror #1
   40bb4:	andeq	pc, r2, r8, lsr #9
   40bb8:	andeq	pc, r2, r8, asr #9
   40bbc:	ldrdeq	r5, [r2], -r4
   40bc0:	muleq	r2, ip, r8
   40bc4:	muleq	r2, r4, r4
   40bc8:	andeq	pc, r2, r0, ror #8
   40bcc:	andeq	pc, r2, ip, asr r4	; <UNPREDICTABLE>
   40bd0:	andeq	r7, r5, r4, asr #13
   40bd4:	andeq	pc, r2, r4, lsl #6
   40bd8:	strdeq	pc, [r2], -r8
   40bdc:	strdeq	sp, [r2], -ip
   40be0:	andeq	ip, r2, r8, asr #23
   40be4:	andeq	pc, r2, r8, asr #5
   40be8:	andeq	sp, r2, r8, lsl #29
   40bec:			; <UNDEFINED> instruction: 0x0002f2bc
   40bf0:	andeq	pc, r2, r0, asr #4
   40bf4:	ldr	r2, [pc, #612]	; 40e60 <blkid_probe_get_size@plt+0x39948>
   40bf8:	ldr	r3, [pc, #612]	; 40e64 <blkid_probe_get_size@plt+0x3994c>
   40bfc:	add	r2, pc, r2
   40c00:	push	{r4, r5, r6, r7, r8, lr}
   40c04:	sub	sp, sp, #32
   40c08:	ldr	r4, [r2, r3]
   40c0c:	mov	r5, #0
   40c10:	cmp	r0, #0
   40c14:	ldr	r2, [r4]
   40c18:	str	r5, [sp, #20]
   40c1c:	str	r2, [sp, #28]
   40c20:	beq	40d2c <blkid_probe_get_size@plt+0x39814>
   40c24:	ldr	r7, [pc, #572]	; 40e68 <blkid_probe_get_size@plt+0x39950>
   40c28:	add	r7, pc, r7
   40c2c:	ldr	r2, [r7, #2052]	; 0x804
   40c30:	cmp	r2, #0
   40c34:	beq	40d20 <blkid_probe_get_size@plt+0x39808>
   40c38:	mov	r8, r1
   40c3c:	add	r1, sp, #20
   40c40:	bl	40644 <blkid_probe_get_size@plt+0x3912c>
   40c44:	subs	r6, r0, #0
   40c48:	blt	40cfc <blkid_probe_get_size@plt+0x397e4>
   40c4c:	ldr	r6, [sp, #20]
   40c50:	str	r5, [sp, #24]
   40c54:	cmp	r6, #0
   40c58:	beq	40d90 <blkid_probe_get_size@plt+0x39878>
   40c5c:	ldrb	r3, [r6]
   40c60:	cmp	r3, #47	; 0x2f
   40c64:	bne	40dc0 <blkid_probe_get_size@plt+0x398a8>
   40c68:	mov	r3, r8
   40c6c:	ldr	r0, [r7, #2052]	; 0x804
   40c70:	mov	r2, r6
   40c74:	add	r1, sp, #24
   40c78:	bl	68d0 <selabel_lookup_raw@plt>
   40c7c:	cmp	r0, #0
   40c80:	bge	40cd8 <blkid_probe_get_size@plt+0x397c0>
   40c84:	bl	732c <__errno_location@plt>
   40c88:	ldr	r3, [r0]
   40c8c:	mov	r5, r0
   40c90:	cmp	r3, #2
   40c94:	beq	40ce8 <blkid_probe_get_size@plt+0x397d0>
   40c98:	bl	71a0 <security_getenforce@plt>
   40c9c:	ldr	r3, [pc, #456]	; 40e6c <blkid_probe_get_size@plt+0x39954>
   40ca0:	add	r3, pc, r3
   40ca4:	ldr	r3, [r3]
   40ca8:	cmp	r0, #1
   40cac:	movne	r0, #7
   40cb0:	moveq	r0, #3
   40cb4:	cmp	r0, r3
   40cb8:	ble	40d58 <blkid_probe_get_size@plt+0x39840>
   40cbc:	bl	71a0 <security_getenforce@plt>
   40cc0:	cmp	r0, #0
   40cc4:	ble	40ce8 <blkid_probe_get_size@plt+0x397d0>
   40cc8:	bl	732c <__errno_location@plt>
   40ccc:	ldr	r6, [r0]
   40cd0:	rsb	r6, r6, #0
   40cd4:	b	40cec <blkid_probe_get_size@plt+0x397d4>
   40cd8:	ldr	r0, [sp, #24]
   40cdc:	bl	6c48 <setfscreatecon_raw@plt>
   40ce0:	cmp	r0, #0
   40ce4:	blt	40df0 <blkid_probe_get_size@plt+0x398d8>
   40ce8:	mov	r6, #0
   40cec:	ldr	r0, [sp, #24]
   40cf0:	cmp	r0, #0
   40cf4:	beq	40cfc <blkid_probe_get_size@plt+0x397e4>
   40cf8:	bl	7254 <freecon@plt>
   40cfc:	ldr	r0, [sp, #20]
   40d00:	bl	69f0 <free@plt>
   40d04:	ldr	r2, [sp, #28]
   40d08:	ldr	r3, [r4]
   40d0c:	mov	r0, r6
   40d10:	cmp	r2, r3
   40d14:	bne	40e5c <blkid_probe_get_size@plt+0x39944>
   40d18:	add	sp, sp, #32
   40d1c:	pop	{r4, r5, r6, r7, r8, pc}
   40d20:	mov	r0, r2
   40d24:	mov	r6, r2
   40d28:	b	40d00 <blkid_probe_get_size@plt+0x397e8>
   40d2c:	ldr	r2, [pc, #316]	; 40e70 <blkid_probe_get_size@plt+0x39958>
   40d30:	ldr	r1, [pc, #316]	; 40e74 <blkid_probe_get_size@plt+0x3995c>
   40d34:	add	r2, pc, r2
   40d38:	add	r2, r2, #1536	; 0x600
   40d3c:	add	r2, r2, #12
   40d40:	str	r2, [sp]
   40d44:	ldr	r2, [pc, #300]	; 40e78 <blkid_probe_get_size@plt+0x39960>
   40d48:	ldr	r3, [pc, #300]	; 40e7c <blkid_probe_get_size@plt+0x39964>
   40d4c:	add	r2, pc, r2
   40d50:	add	r1, pc, r1
   40d54:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40d58:	ldr	r2, [pc, #288]	; 40e80 <blkid_probe_get_size@plt+0x39968>
   40d5c:	ldr	r3, [pc, #288]	; 40e84 <blkid_probe_get_size@plt+0x3996c>
   40d60:	add	r2, pc, r2
   40d64:	ldr	r1, [r5]
   40d68:	add	r3, pc, r3
   40d6c:	str	r2, [sp, #4]
   40d70:	ldr	r2, [pc, #272]	; 40e88 <blkid_probe_get_size@plt+0x39970>
   40d74:	add	r3, r3, #1616	; 0x650
   40d78:	str	r3, [sp]
   40d7c:	str	r6, [sp, #8]
   40d80:	ldr	r3, [pc, #260]	; 40e8c <blkid_probe_get_size@plt+0x39974>
   40d84:	add	r2, pc, r2
   40d88:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   40d8c:	b	40cbc <blkid_probe_get_size@plt+0x397a4>
   40d90:	ldr	r3, [pc, #248]	; 40e90 <blkid_probe_get_size@plt+0x39978>
   40d94:	ldr	r2, [pc, #248]	; 40e94 <blkid_probe_get_size@plt+0x3997c>
   40d98:	add	r3, pc, r3
   40d9c:	add	r3, r3, #1568	; 0x620
   40da0:	ldr	r1, [pc, #240]	; 40e98 <blkid_probe_get_size@plt+0x39980>
   40da4:	add	r3, r3, #12
   40da8:	str	r3, [sp]
   40dac:	mov	r0, r6
   40db0:	mov	r3, #324	; 0x144
   40db4:	add	r2, pc, r2
   40db8:	add	r1, pc, r1
   40dbc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40dc0:	ldr	r3, [pc, #212]	; 40e9c <blkid_probe_get_size@plt+0x39984>
   40dc4:	ldr	r2, [pc, #212]	; 40ea0 <blkid_probe_get_size@plt+0x39988>
   40dc8:	add	r3, pc, r3
   40dcc:	add	r3, r3, #1568	; 0x620
   40dd0:	ldr	r1, [pc, #204]	; 40ea4 <blkid_probe_get_size@plt+0x3998c>
   40dd4:	add	r3, r3, #12
   40dd8:	str	r3, [sp]
   40ddc:	mov	r0, r5
   40de0:	ldr	r3, [pc, #192]	; 40ea8 <blkid_probe_get_size@plt+0x39990>
   40de4:	add	r2, pc, r2
   40de8:	add	r1, pc, r1
   40dec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40df0:	bl	71a0 <security_getenforce@plt>
   40df4:	cmp	r0, #1
   40df8:	movne	r5, #7
   40dfc:	moveq	r5, #3
   40e00:	bl	732c <__errno_location@plt>
   40e04:	ldr	r3, [pc, #160]	; 40eac <blkid_probe_get_size@plt+0x39994>
   40e08:	add	r3, pc, r3
   40e0c:	ldr	r3, [r3]
   40e10:	cmp	r5, r3
   40e14:	bgt	40cbc <blkid_probe_get_size@plt+0x397a4>
   40e18:	ldr	r2, [pc, #144]	; 40eb0 <blkid_probe_get_size@plt+0x39998>
   40e1c:	ldr	r3, [pc, #144]	; 40eb4 <blkid_probe_get_size@plt+0x3999c>
   40e20:	add	r2, pc, r2
   40e24:	ldr	r1, [r0]
   40e28:	ldr	ip, [sp, #24]
   40e2c:	str	r2, [sp, #4]
   40e30:	add	r3, pc, r3
   40e34:	ldr	r2, [pc, #124]	; 40eb8 <blkid_probe_get_size@plt+0x399a0>
   40e38:	add	r3, r3, #1616	; 0x650
   40e3c:	str	r3, [sp]
   40e40:	str	r6, [sp, #12]
   40e44:	mov	r0, r5
   40e48:	str	ip, [sp, #8]
   40e4c:	ldr	r3, [pc, #104]	; 40ebc <blkid_probe_get_size@plt+0x399a4>
   40e50:	add	r2, pc, r2
   40e54:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   40e58:	b	40cbc <blkid_probe_get_size@plt+0x397a4>
   40e5c:	bl	6fb4 <__stack_chk_fail@plt>
   40e60:	andeq	r6, r5, ip, ror #30
   40e64:	andeq	r0, r0, ip, lsr r4
   40e68:	andeq	r7, r5, r4, lsl sl
   40e6c:	muleq	r5, ip, r4
   40e70:	muleq	r2, ip, ip
   40e74:	andeq	sl, r2, r4, asr #11
   40e78:	strdeq	r6, [r2], -r0
   40e7c:	andeq	r0, r0, r1, lsl #3
   40e80:	andeq	pc, r2, ip, asr #1
   40e84:	andeq	sp, r2, r8, ror #24
   40e88:			; <UNDEFINED> instruction: 0x00026fb8
   40e8c:	andeq	r0, r0, sp, asr #2
   40e90:	andeq	sp, r2, r8, lsr ip
   40e94:	andeq	r6, r2, r8, lsl #31
   40e98:	andeq	pc, r2, r8, lsl r0	; <UNPREDICTABLE>
   40e9c:	andeq	sp, r2, r8, lsl #24
   40ea0:	andeq	r6, r2, r8, asr pc
   40ea4:	strdeq	lr, [r2], -r0
   40ea8:	andeq	r0, r0, r5, asr #2
   40eac:	andeq	r7, r5, r4, lsr r3
   40eb0:	andeq	pc, r2, r4, asr #32
   40eb4:	andeq	sp, r2, r0, lsr #23
   40eb8:	andeq	r6, r2, ip, ror #29
   40ebc:	andeq	r0, r0, r2, asr r1
   40ec0:	ldr	r3, [pc, #248]	; 40fc0 <blkid_probe_get_size@plt+0x39aa8>
   40ec4:	ldr	ip, [pc, #248]	; 40fc4 <blkid_probe_get_size@plt+0x39aac>
   40ec8:	add	r3, pc, r3
   40ecc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   40ed0:	sub	sp, sp, #16
   40ed4:	ldr	r4, [r3, ip]
   40ed8:	mov	r8, #0
   40edc:	subs	r6, r0, #0
   40ee0:	ldr	r3, [r4]
   40ee4:	str	r8, [sp, #8]
   40ee8:	str	r3, [sp, #12]
   40eec:	beq	40f80 <blkid_probe_get_size@plt+0x39a68>
   40ef0:	mov	r5, r1
   40ef4:	ldr	r1, [pc, #204]	; 40fc8 <blkid_probe_get_size@plt+0x39ab0>
   40ef8:	add	r1, pc, r1
   40efc:	bl	6c9c <strspn@plt>
   40f00:	mov	r7, r0
   40f04:	bl	732c <__errno_location@plt>
   40f08:	add	r9, r6, r7
   40f0c:	mov	r2, r8
   40f10:	add	r1, sp, #8
   40f14:	mov	sl, r0
   40f18:	str	r8, [r0]
   40f1c:	mov	r0, r9
   40f20:	bl	7128 <strtoull@plt>
   40f24:	ldr	r3, [sl]
   40f28:	cmp	r3, #0
   40f2c:	rsbgt	r0, r3, #0
   40f30:	ble	40f4c <blkid_probe_get_size@plt+0x39a34>
   40f34:	ldr	r2, [sp, #12]
   40f38:	ldr	r3, [r4]
   40f3c:	cmp	r2, r3
   40f40:	bne	40fbc <blkid_probe_get_size@plt+0x39aa4>
   40f44:	add	sp, sp, #16
   40f48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40f4c:	ldr	r3, [sp, #8]
   40f50:	cmp	r3, #0
   40f54:	cmpne	r3, r9
   40f58:	beq	40fac <blkid_probe_get_size@plt+0x39a94>
   40f5c:	ldrb	r3, [r3]
   40f60:	cmp	r3, #0
   40f64:	bne	40fac <blkid_probe_get_size@plt+0x39a94>
   40f68:	ldrb	r2, [r6, r7]
   40f6c:	cmp	r2, #45	; 0x2d
   40f70:	beq	40fb4 <blkid_probe_get_size@plt+0x39a9c>
   40f74:	strd	r0, [r5]
   40f78:	mov	r0, r3
   40f7c:	b	40f34 <blkid_probe_get_size@plt+0x39a1c>
   40f80:	ldr	r2, [pc, #68]	; 40fcc <blkid_probe_get_size@plt+0x39ab4>
   40f84:	ldr	r1, [pc, #68]	; 40fd0 <blkid_probe_get_size@plt+0x39ab8>
   40f88:	add	r2, pc, r2
   40f8c:	add	r2, r2, #1648	; 0x670
   40f90:	add	r2, r2, #4
   40f94:	str	r2, [sp]
   40f98:	ldr	r2, [pc, #52]	; 40fd4 <blkid_probe_get_size@plt+0x39abc>
   40f9c:	ldr	r3, [pc, #52]	; 40fd8 <blkid_probe_get_size@plt+0x39ac0>
   40fa0:	add	r2, pc, r2
   40fa4:	add	r1, pc, r1
   40fa8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   40fac:	mvn	r0, #21
   40fb0:	b	40f34 <blkid_probe_get_size@plt+0x39a1c>
   40fb4:	mvn	r0, #33	; 0x21
   40fb8:	b	40f34 <blkid_probe_get_size@plt+0x39a1c>
   40fbc:	bl	6fb4 <__stack_chk_fail@plt>
   40fc0:	andeq	r6, r5, r0, lsr #25
   40fc4:	andeq	r0, r0, ip, lsr r4
   40fc8:	andeq	r9, r2, r4, lsr #29
   40fcc:	andeq	sp, r2, r8, asr #20
   40fd0:	ldrdeq	pc, [r2], -r4
   40fd4:	andeq	r9, r2, r8, asr #16
   40fd8:			; <UNDEFINED> instruction: 0x000001b9
   40fdc:	ldr	r3, [pc, #256]	; 410e4 <blkid_probe_get_size@plt+0x39bcc>
   40fe0:	ldr	r2, [pc, #256]	; 410e8 <blkid_probe_get_size@plt+0x39bd0>
   40fe4:	add	r3, pc, r3
   40fe8:	push	{r4, r5, r6, r7, r8, lr}
   40fec:	sub	sp, sp, #16
   40ff0:	ldr	r5, [r3, r2]
   40ff4:	mov	r4, #0
   40ff8:	subs	r8, r0, #0
   40ffc:	ldr	r3, [r5]
   41000:	str	r4, [sp, #8]
   41004:	str	r3, [sp, #12]
   41008:	beq	41084 <blkid_probe_get_size@plt+0x39b6c>
   4100c:	cmp	r1, #0
   41010:	mov	r6, r1
   41014:	beq	410ac <blkid_probe_get_size@plt+0x39b94>
   41018:	bl	732c <__errno_location@plt>
   4101c:	mov	r2, r4
   41020:	add	r1, sp, #8
   41024:	mov	r7, r0
   41028:	str	r4, [r0]
   4102c:	mov	r0, r8
   41030:	bl	69e4 <strtol@plt>
   41034:	ldr	r3, [r7]
   41038:	cmp	r3, #0
   4103c:	rsbgt	r0, r3, #0
   41040:	ble	4105c <blkid_probe_get_size@plt+0x39b44>
   41044:	ldr	r2, [sp, #12]
   41048:	ldr	r3, [r5]
   4104c:	cmp	r2, r3
   41050:	bne	410e0 <blkid_probe_get_size@plt+0x39bc8>
   41054:	add	sp, sp, #16
   41058:	pop	{r4, r5, r6, r7, r8, pc}
   4105c:	ldr	r3, [sp, #8]
   41060:	cmp	r3, #0
   41064:	cmpne	r3, r8
   41068:	beq	410d8 <blkid_probe_get_size@plt+0x39bc0>
   4106c:	ldrb	r3, [r3]
   41070:	cmp	r3, #0
   41074:	bne	410d8 <blkid_probe_get_size@plt+0x39bc0>
   41078:	str	r0, [r6]
   4107c:	mov	r0, r3
   41080:	b	41044 <blkid_probe_get_size@plt+0x39b2c>
   41084:	ldr	r2, [pc, #96]	; 410ec <blkid_probe_get_size@plt+0x39bd4>
   41088:	ldr	r1, [pc, #96]	; 410f0 <blkid_probe_get_size@plt+0x39bd8>
   4108c:	add	r2, pc, r2
   41090:	add	r2, r2, #1664	; 0x680
   41094:	str	r2, [sp]
   41098:	ldr	r2, [pc, #84]	; 410f4 <blkid_probe_get_size@plt+0x39bdc>
   4109c:	ldr	r3, [pc, #84]	; 410f8 <blkid_probe_get_size@plt+0x39be0>
   410a0:	add	r2, pc, r2
   410a4:	add	r1, pc, r1
   410a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   410ac:	ldr	r3, [pc, #72]	; 410fc <blkid_probe_get_size@plt+0x39be4>
   410b0:	mov	r0, r1
   410b4:	add	r3, pc, r3
   410b8:	ldr	r2, [pc, #64]	; 41100 <blkid_probe_get_size@plt+0x39be8>
   410bc:	ldr	r1, [pc, #64]	; 41104 <blkid_probe_get_size@plt+0x39bec>
   410c0:	add	r3, r3, #1664	; 0x680
   410c4:	str	r3, [sp]
   410c8:	add	r2, pc, r2
   410cc:	ldr	r3, [pc, #52]	; 41108 <blkid_probe_get_size@plt+0x39bf0>
   410d0:	add	r1, pc, r1
   410d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   410d8:	mvn	r0, #21
   410dc:	b	41044 <blkid_probe_get_size@plt+0x39b2c>
   410e0:	bl	6fb4 <__stack_chk_fail@plt>
   410e4:	andeq	r6, r5, r4, lsl #23
   410e8:	andeq	r0, r0, ip, lsr r4
   410ec:	andeq	sp, r2, r4, asr #18
   410f0:	ldrdeq	pc, [r2], -r4
   410f4:	andeq	r9, r2, r8, asr #14
   410f8:	andeq	r0, r0, r5, lsr #3
   410fc:	andeq	sp, r2, ip, lsl r9
   41100:	andeq	r9, r2, r0, lsr #14
   41104:	andeq	lr, r2, ip, asr #27
   41108:	andeq	r0, r0, r6, lsr #3
   4110c:	ldr	r3, [pc, #308]	; 41248 <blkid_probe_get_size@plt+0x39d30>
   41110:	ldr	ip, [pc, #308]	; 4124c <blkid_probe_get_size@plt+0x39d34>
   41114:	add	r3, pc, r3
   41118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4111c:	sub	sp, sp, #20
   41120:	ldr	r4, [r3, ip]
   41124:	mov	r5, #0
   41128:	subs	r7, r0, #0
   4112c:	ldr	r3, [r4]
   41130:	str	r5, [sp, #8]
   41134:	str	r3, [sp, #12]
   41138:	beq	411d8 <blkid_probe_get_size@plt+0x39cc0>
   4113c:	cmp	r2, #0
   41140:	mov	r6, r2
   41144:	beq	41204 <blkid_probe_get_size@plt+0x39cec>
   41148:	mov	r8, r1
   4114c:	ldr	r1, [pc, #252]	; 41250 <blkid_probe_get_size@plt+0x39d38>
   41150:	add	r1, pc, r1
   41154:	bl	6c9c <strspn@plt>
   41158:	mov	r9, r0
   4115c:	bl	732c <__errno_location@plt>
   41160:	add	fp, r7, r9
   41164:	mov	r2, r8
   41168:	add	r1, sp, #8
   4116c:	mov	sl, r0
   41170:	str	r5, [r0]
   41174:	mov	r0, fp
   41178:	bl	6c54 <strtoul@plt>
   4117c:	ldr	r3, [sl]
   41180:	cmp	r3, #0
   41184:	rsbgt	r0, r3, #0
   41188:	ble	411a4 <blkid_probe_get_size@plt+0x39c8c>
   4118c:	ldr	r2, [sp, #12]
   41190:	ldr	r3, [r4]
   41194:	cmp	r2, r3
   41198:	bne	41244 <blkid_probe_get_size@plt+0x39d2c>
   4119c:	add	sp, sp, #20
   411a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   411a4:	ldr	r3, [sp, #8]
   411a8:	cmp	r3, #0
   411ac:	cmpne	r3, fp
   411b0:	beq	41234 <blkid_probe_get_size@plt+0x39d1c>
   411b4:	ldrb	r3, [r3]
   411b8:	cmp	r3, #0
   411bc:	bne	41234 <blkid_probe_get_size@plt+0x39d1c>
   411c0:	ldrb	r2, [r7, r9]
   411c4:	cmp	r2, #45	; 0x2d
   411c8:	beq	4123c <blkid_probe_get_size@plt+0x39d24>
   411cc:	str	r0, [r6]
   411d0:	mov	r0, r3
   411d4:	b	4118c <blkid_probe_get_size@plt+0x39c74>
   411d8:	ldr	r2, [pc, #116]	; 41254 <blkid_probe_get_size@plt+0x39d3c>
   411dc:	ldr	r1, [pc, #116]	; 41258 <blkid_probe_get_size@plt+0x39d40>
   411e0:	add	r2, pc, r2
   411e4:	add	r2, r2, #1664	; 0x680
   411e8:	add	r2, r2, #12
   411ec:	str	r2, [sp]
   411f0:	ldr	r2, [pc, #100]	; 4125c <blkid_probe_get_size@plt+0x39d44>
   411f4:	mov	r3, #388	; 0x184
   411f8:	add	r2, pc, r2
   411fc:	add	r1, pc, r1
   41200:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41204:	ldr	r3, [pc, #84]	; 41260 <blkid_probe_get_size@plt+0x39d48>
   41208:	mov	r0, r2
   4120c:	add	r3, pc, r3
   41210:	add	r3, r3, #1664	; 0x680
   41214:	ldr	r2, [pc, #72]	; 41264 <blkid_probe_get_size@plt+0x39d4c>
   41218:	ldr	r1, [pc, #72]	; 41268 <blkid_probe_get_size@plt+0x39d50>
   4121c:	add	r3, r3, #12
   41220:	str	r3, [sp]
   41224:	add	r2, pc, r2
   41228:	ldr	r3, [pc, #60]	; 4126c <blkid_probe_get_size@plt+0x39d54>
   4122c:	add	r1, pc, r1
   41230:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41234:	mvn	r0, #21
   41238:	b	4118c <blkid_probe_get_size@plt+0x39c74>
   4123c:	mvn	r0, #33	; 0x21
   41240:	b	4118c <blkid_probe_get_size@plt+0x39c74>
   41244:	bl	6fb4 <__stack_chk_fail@plt>
   41248:	andeq	r6, r5, r4, asr sl
   4124c:	andeq	r0, r0, ip, lsr r4
   41250:	andeq	r9, r2, ip, asr #24
   41254:	strdeq	sp, [r2], -r0
   41258:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   4125c:	strdeq	r9, [r2], -r0
   41260:	andeq	sp, r2, r4, asr #15
   41264:	andeq	r9, r2, r4, asr #11
   41268:	andeq	lr, r2, r8, ror ip
   4126c:	andeq	r0, r0, r5, lsl #3
   41270:	ldr	r3, [pc, #168]	; 41320 <blkid_probe_get_size@plt+0x39e08>
   41274:	ldr	r2, [pc, #168]	; 41324 <blkid_probe_get_size@plt+0x39e0c>
   41278:	add	r3, pc, r3
   4127c:	push	{r4, r5, lr}
   41280:	sub	sp, sp, #20
   41284:	ldr	r4, [r3, r2]
   41288:	mov	ip, #0
   4128c:	cmp	r0, #0
   41290:	ldr	r3, [r4]
   41294:	str	ip, [sp, #8]
   41298:	str	r3, [sp, #12]
   4129c:	beq	412f0 <blkid_probe_get_size@plt+0x39dd8>
   412a0:	mov	r5, r1
   412a4:	add	r2, sp, #8
   412a8:	mov	r1, ip
   412ac:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   412b0:	cmp	r0, #0
   412b4:	blt	412d8 <blkid_probe_get_size@plt+0x39dc0>
   412b8:	ldr	r0, [pc, #104]	; 41328 <blkid_probe_get_size@plt+0x39e10>
   412bc:	ldr	r3, [sp, #8]
   412c0:	cmn	r3, #1
   412c4:	cmpne	r3, r0
   412c8:	moveq	r0, #1
   412cc:	movne	r0, #0
   412d0:	mvneq	r0, #5
   412d4:	strne	r3, [r5]
   412d8:	ldr	r2, [sp, #12]
   412dc:	ldr	r3, [r4]
   412e0:	cmp	r2, r3
   412e4:	bne	4131c <blkid_probe_get_size@plt+0x39e04>
   412e8:	add	sp, sp, #20
   412ec:	pop	{r4, r5, pc}
   412f0:	ldr	r2, [pc, #52]	; 4132c <blkid_probe_get_size@plt+0x39e14>
   412f4:	ldr	r1, [pc, #52]	; 41330 <blkid_probe_get_size@plt+0x39e18>
   412f8:	add	r2, pc, r2
   412fc:	add	r2, r2, #1680	; 0x690
   41300:	add	r2, r2, #12
   41304:	str	r2, [sp]
   41308:	ldr	r2, [pc, #36]	; 41334 <blkid_probe_get_size@plt+0x39e1c>
   4130c:	mov	r3, #49	; 0x31
   41310:	add	r2, pc, r2
   41314:	add	r1, pc, r1
   41318:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4131c:	bl	6fb4 <__stack_chk_fail@plt>
   41320:	strdeq	r6, [r5], -r0
   41324:	andeq	r0, r0, ip, lsr r4
   41328:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   4132c:	ldrdeq	sp, [r2], -r8
   41330:	andeq	pc, r2, r4, rrx
   41334:	andeq	lr, r2, r0, lsl #11
   41338:	push	{r4, r5, r6, r7, r8, r9, lr}
   4133c:	mov	r7, r0
   41340:	ldr	r4, [pc, #364]	; 414b4 <blkid_probe_get_size@plt+0x39f9c>
   41344:	ldr	r3, [pc, #364]	; 414b8 <blkid_probe_get_size@plt+0x39fa0>
   41348:	ldr	lr, [pc, #364]	; 414bc <blkid_probe_get_size@plt+0x39fa4>
   4134c:	add	r4, pc, r4
   41350:	add	r3, pc, r3
   41354:	add	ip, r4, #92	; 0x5c
   41358:	ldr	r8, [r3, lr]
   4135c:	mov	r5, r1
   41360:	mov	r6, r2
   41364:	ldm	ip, {r0, r1, r2}
   41368:	sub	sp, sp, #36	; 0x24
   4136c:	add	r3, sp, #4
   41370:	ldr	ip, [r8]
   41374:	stm	r3, {r0, r1, r2}
   41378:	mov	r0, r3
   4137c:	ldr	r1, [r7]
   41380:	str	ip, [sp, #28]
   41384:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   41388:	subs	r9, r0, #0
   4138c:	beq	413c0 <blkid_probe_get_size@plt+0x39ea8>
   41390:	mov	r2, #0
   41394:	ldr	r3, [pc, #292]	; 414c0 <blkid_probe_get_size@plt+0x39fa8>
   41398:	mov	r0, r2
   4139c:	add	r3, pc, r3
   413a0:	str	r3, [r7]
   413a4:	str	r2, [r5]
   413a8:	ldr	r2, [sp, #28]
   413ac:	ldr	r3, [r8]
   413b0:	cmp	r2, r3
   413b4:	bne	414b0 <blkid_probe_get_size@plt+0x39f98>
   413b8:	add	sp, sp, #36	; 0x24
   413bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   413c0:	bl	392a0 <blkid_probe_get_size@plt+0x31d88>
   413c4:	cmp	r0, #0
   413c8:	beq	41410 <blkid_probe_get_size@plt+0x39ef8>
   413cc:	add	r4, r4, #104	; 0x68
   413d0:	add	r3, sp, #16
   413d4:	ldm	r4, {r0, r1, r2}
   413d8:	ldr	r4, [r7]
   413dc:	stm	r3, {r0, r1, r2}
   413e0:	mov	r0, r3
   413e4:	mov	r1, r4
   413e8:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   413ec:	cmp	r0, #0
   413f0:	beq	41414 <blkid_probe_get_size@plt+0x39efc>
   413f4:	ldr	r3, [pc, #200]	; 414c4 <blkid_probe_get_size@plt+0x39fac>
   413f8:	ldr	r2, [pc, #200]	; 414c8 <blkid_probe_get_size@plt+0x39fb0>
   413fc:	add	r3, pc, r3
   41400:	str	r3, [r7]
   41404:	mov	r0, r9
   41408:	str	r2, [r5]
   4140c:	b	413a8 <blkid_probe_get_size@plt+0x39e90>
   41410:	ldr	r4, [r7]
   41414:	mov	r0, r4
   41418:	mov	r1, sp
   4141c:	bl	41270 <blkid_probe_get_size@plt+0x39d58>
   41420:	mov	r9, r0
   41424:	bl	732c <__errno_location@plt>
   41428:	mov	r3, #0
   4142c:	cmp	r9, #0
   41430:	mov	r4, r0
   41434:	str	r3, [r0]
   41438:	blt	4148c <blkid_probe_get_size@plt+0x39f74>
   4143c:	ldr	r0, [sp]
   41440:	bl	6b58 <getgrgid@plt>
   41444:	cmp	r0, #0
   41448:	beq	41478 <blkid_probe_get_size@plt+0x39f60>
   4144c:	ldr	r3, [r0]
   41450:	str	r3, [r7]
   41454:	ldr	r3, [r0, #8]
   41458:	ldr	r0, [pc, #108]	; 414cc <blkid_probe_get_size@plt+0x39fb4>
   4145c:	cmn	r3, #1
   41460:	cmpne	r3, r0
   41464:	moveq	r0, #1
   41468:	movne	r0, #0
   4146c:	strne	r3, [r5]
   41470:	mvneq	r0, #73	; 0x49
   41474:	b	413a8 <blkid_probe_get_size@plt+0x39e90>
   41478:	cmp	r6, #0
   4147c:	beq	4149c <blkid_probe_get_size@plt+0x39f84>
   41480:	ldr	r3, [sp]
   41484:	str	r3, [r5]
   41488:	b	413a8 <blkid_probe_get_size@plt+0x39e90>
   4148c:	ldr	r0, [r7]
   41490:	bl	74a0 <getgrnam@plt>
   41494:	cmp	r0, #0
   41498:	bne	41454 <blkid_probe_get_size@plt+0x39f3c>
   4149c:	ldr	r0, [r4]
   414a0:	cmp	r0, #0
   414a4:	mvnle	r0, #2
   414a8:	rsbgt	r0, r0, #0
   414ac:	b	413a8 <blkid_probe_get_size@plt+0x39e90>
   414b0:	bl	6fb4 <__stack_chk_fail@plt>
   414b4:	andeq	r6, r5, r8, asr #26
   414b8:	andeq	r6, r5, r8, lsl r8
   414bc:	andeq	r0, r0, ip, lsr r4
   414c0:	andeq	lr, r2, ip, asr #9
   414c4:			; <UNDEFINED> instruction: 0x0002eab0
   414c8:	strdeq	pc, [r0], -lr
   414cc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   414d0:	ldr	r3, [pc, #172]	; 41584 <blkid_probe_get_size@plt+0x3a06c>
   414d4:	ldr	r2, [pc, #172]	; 41588 <blkid_probe_get_size@plt+0x3a070>
   414d8:	add	r3, pc, r3
   414dc:	push	{r4, r5, r6, r7, lr}
   414e0:	sub	sp, sp, #12
   414e4:	ldr	r6, [r3, r2]
   414e8:	mov	r4, #0
   414ec:	subs	r7, r0, #0
   414f0:	ldr	r3, [r6]
   414f4:	str	r4, [sp]
   414f8:	str	r3, [sp, #4]
   414fc:	beq	41578 <blkid_probe_get_size@plt+0x3a060>
   41500:	ldr	r5, [pc, #132]	; 4158c <blkid_probe_get_size@plt+0x3a074>
   41504:	ldr	r0, [pc, #132]	; 41590 <blkid_probe_get_size@plt+0x3a078>
   41508:	add	r5, pc, r5
   4150c:	add	r0, pc, r0
   41510:	add	r5, r5, #500	; 0x1f4
   41514:	b	4151c <blkid_probe_get_size@plt+0x3a004>
   41518:	ldr	r0, [r5, r4, lsl #2]
   4151c:	mov	r1, r7
   41520:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   41524:	cmp	r0, #0
   41528:	beq	4155c <blkid_probe_get_size@plt+0x3a044>
   4152c:	add	r4, r4, #1
   41530:	cmp	r4, #8
   41534:	bne	41518 <blkid_probe_get_size@plt+0x3a000>
   41538:	mov	r0, r7
   4153c:	mov	r2, sp
   41540:	mov	r1, #0
   41544:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   41548:	cmp	r0, #0
   4154c:	blt	41578 <blkid_probe_get_size@plt+0x3a060>
   41550:	ldr	r4, [sp]
   41554:	cmp	r4, #7
   41558:	bhi	41578 <blkid_probe_get_size@plt+0x3a060>
   4155c:	ldr	r2, [sp, #4]
   41560:	ldr	r3, [r6]
   41564:	mov	r0, r4
   41568:	cmp	r2, r3
   4156c:	bne	41580 <blkid_probe_get_size@plt+0x3a068>
   41570:	add	sp, sp, #12
   41574:	pop	{r4, r5, r6, r7, pc}
   41578:	mvn	r4, #0
   4157c:	b	4155c <blkid_probe_get_size@plt+0x3a044>
   41580:	bl	6fb4 <__stack_chk_fail@plt>
   41584:	muleq	r5, r0, r6
   41588:	andeq	r0, r0, ip, lsr r4
   4158c:	andeq	r8, r4, r8, lsr r8
   41590:	andeq	lr, r2, r8, lsr #19
   41594:	ldr	r3, [pc, #340]	; 416f0 <blkid_probe_get_size@plt+0x3a1d8>
   41598:	ldr	r2, [pc, #340]	; 416f4 <blkid_probe_get_size@plt+0x3a1dc>
   4159c:	add	r3, pc, r3
   415a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   415a4:	add	fp, sp, #28
   415a8:	sub	sp, sp, #24
   415ac:	ldr	r5, [r3, r2]
   415b0:	mov	r6, r1
   415b4:	ldr	r1, [pc, #316]	; 416f8 <blkid_probe_get_size@plt+0x3a1e0>
   415b8:	ldr	r3, [r5]
   415bc:	add	r1, pc, r1
   415c0:	mov	r8, r0
   415c4:	str	r3, [fp, #-32]	; 0xffffffe0
   415c8:	bl	6c9c <strspn@plt>
   415cc:	subs	r7, r0, #0
   415d0:	beq	416d4 <blkid_probe_get_size@plt+0x3a1bc>
   415d4:	ldrb	r3, [r8, r7]
   415d8:	cmp	r3, #58	; 0x3a
   415dc:	bne	416d4 <blkid_probe_get_size@plt+0x3a1bc>
   415e0:	mov	r1, r7
   415e4:	mov	r0, r8
   415e8:	bl	69cc <strnlen@plt>
   415ec:	mov	r4, #0
   415f0:	mov	r1, r8
   415f4:	add	r3, r0, #15
   415f8:	bic	r3, r3, #7
   415fc:	sub	sp, sp, r3
   41600:	mov	r3, sp
   41604:	mov	r2, r0
   41608:	lsr	r3, r3, #3
   4160c:	strb	r4, [r0, r3, lsl #3]
   41610:	lsl	r0, r3, #3
   41614:	bl	71e8 <memcpy@plt>
   41618:	mov	r1, r4
   4161c:	sub	r2, fp, #36	; 0x24
   41620:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   41624:	cmp	r0, #0
   41628:	blt	416bc <blkid_probe_get_size@plt+0x3a1a4>
   4162c:	add	r0, r7, #1
   41630:	add	r0, r8, r0
   41634:	sub	r2, fp, #40	; 0x28
   41638:	mov	r1, r4
   4163c:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   41640:	cmp	r0, #0
   41644:	blt	416bc <blkid_probe_get_size@plt+0x3a1a4>
   41648:	ldr	lr, [fp, #-36]	; 0xffffffdc
   4164c:	cmp	lr, #4096	; 0x1000
   41650:	bcs	416dc <blkid_probe_get_size@plt+0x3a1c4>
   41654:	ldr	ip, [fp, #-40]	; 0xffffffd8
   41658:	cmp	ip, #1048576	; 0x100000
   4165c:	bcs	416dc <blkid_probe_get_size@plt+0x3a1c4>
   41660:	lsr	r1, lr, #24
   41664:	str	r1, [fp, #-48]	; 0xffffffd0
   41668:	lsl	r1, lr, #8
   4166c:	str	r1, [fp, #-52]	; 0xffffffcc
   41670:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   41674:	add	r9, pc, #108	; 0x6c
   41678:	ldrd	r8, [r9]
   4167c:	uxtb	lr, ip
   41680:	orr	r0, r0, lr
   41684:	lsr	r3, ip, #20
   41688:	lsl	r2, ip, #12
   4168c:	strd	r0, [fp, #-52]	; 0xffffffcc
   41690:	and	r0, r2, r8
   41694:	and	r1, r3, r9
   41698:	mov	r2, r0
   4169c:	mov	r3, r1
   416a0:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   416a4:	orr	r0, r0, r2
   416a8:	orr	r1, r1, r3
   416ac:	mov	r2, r0
   416b0:	mov	r3, r1
   416b4:	mov	r0, r4
   416b8:	strd	r2, [r6]
   416bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   416c0:	ldr	r3, [r5]
   416c4:	cmp	r2, r3
   416c8:	bne	416e4 <blkid_probe_get_size@plt+0x3a1cc>
   416cc:	sub	sp, fp, #28
   416d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   416d4:	mvn	r0, #21
   416d8:	b	416bc <blkid_probe_get_size@plt+0x3a1a4>
   416dc:	mvn	r0, #33	; 0x21
   416e0:	b	416bc <blkid_probe_get_size@plt+0x3a1a4>
   416e4:	bl	6fb4 <__stack_chk_fail@plt>
   416e8:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   416ec:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   416f0:	andeq	r6, r5, ip, asr #11
   416f4:	andeq	r0, r0, ip, lsr r4
   416f8:	andeq	r9, r2, r8, lsl r2
   416fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41700:	vpush	{d8-d9}
   41704:	ldr	r1, [pc, #956]	; 41ac8 <blkid_probe_get_size@plt+0x3a5b0>
   41708:	ldr	ip, [pc, #956]	; 41acc <blkid_probe_get_size@plt+0x3a5b4>
   4170c:	add	r1, pc, r1
   41710:	sub	sp, sp, #84	; 0x54
   41714:	mov	r4, r2
   41718:	ldr	r2, [r1, ip]
   4171c:	mov	r5, r3
   41720:	mov	r3, r1
   41724:	ldr	r3, [sp, #136]	; 0x88
   41728:	subs	fp, r0, #0
   4172c:	str	r3, [sp, #60]	; 0x3c
   41730:	ldr	r3, [r2]
   41734:	str	r2, [sp, #56]	; 0x38
   41738:	str	r3, [sp, #76]	; 0x4c
   4173c:	beq	41a88 <blkid_probe_get_size@plt+0x3a570>
   41740:	cmp	r5, #0
   41744:	cmpeq	r4, #1000	; 0x3e8
   41748:	beq	41a70 <blkid_probe_get_size@plt+0x3a558>
   4174c:	cmp	r5, #0
   41750:	cmpeq	r4, #1024	; 0x400
   41754:	beq	41788 <blkid_probe_get_size@plt+0x3a270>
   41758:	ldr	r2, [pc, #880]	; 41ad0 <blkid_probe_get_size@plt+0x3a5b8>
   4175c:	ldr	r1, [pc, #880]	; 41ad4 <blkid_probe_get_size@plt+0x3a5bc>
   41760:	add	r2, pc, r2
   41764:	add	r2, r2, #1696	; 0x6a0
   41768:	add	r2, r2, #8
   4176c:	str	r2, [sp]
   41770:	ldr	r2, [pc, #864]	; 41ad8 <blkid_probe_get_size@plt+0x3a5c0>
   41774:	mov	r3, #169	; 0xa9
   41778:	add	r2, pc, r2
   4177c:	add	r1, pc, r1
   41780:	mov	r0, #0
   41784:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41788:	ldr	r3, [pc, #844]	; 41adc <blkid_probe_get_size@plt+0x3a5c4>
   4178c:	add	r3, pc, r3
   41790:	add	r4, r3, #664	; 0x298
   41794:	ldr	r3, [pc, #836]	; 41ae0 <blkid_probe_get_size@plt+0x3a5c8>
   41798:	vldr	d9, [pc, #792]	; 41ab8 <blkid_probe_get_size@plt+0x3a5a0>
   4179c:	add	r3, pc, r3
   417a0:	str	r3, [sp, #40]	; 0x28
   417a4:	ldr	r3, [pc, #824]	; 41ae4 <blkid_probe_get_size@plt+0x3a5cc>
   417a8:	mov	sl, #0
   417ac:	add	r3, pc, r3
   417b0:	str	r3, [sp, #48]	; 0x30
   417b4:	bl	732c <__errno_location@plt>
   417b8:	mov	r3, #0
   417bc:	mov	r2, #0
   417c0:	mov	r8, r4
   417c4:	strd	r2, [sp, #16]
   417c8:	add	r3, sp, #68	; 0x44
   417cc:	str	r3, [sp, #44]	; 0x2c
   417d0:	str	r0, [sp, #36]	; 0x24
   417d4:	ldr	r1, [sp, #40]	; 0x28
   417d8:	mov	r0, fp
   417dc:	bl	6c9c <strspn@plt>
   417e0:	ldr	r4, [sp, #36]	; 0x24
   417e4:	mov	r5, #0
   417e8:	mov	r2, #10
   417ec:	str	r5, [r4]
   417f0:	ldr	r1, [sp, #44]	; 0x2c
   417f4:	add	fp, fp, r0
   417f8:	mov	r0, fp
   417fc:	bl	7128 <strtoull@plt>
   41800:	ldr	r3, [r4]
   41804:	cmp	r3, r5
   41808:	strd	r0, [sp, #8]
   4180c:	bgt	41a80 <blkid_probe_get_size@plt+0x3a568>
   41810:	ldr	r4, [sp, #68]	; 0x44
   41814:	cmp	r4, fp
   41818:	beq	41988 <blkid_probe_get_size@plt+0x3a470>
   4181c:	ldrb	r3, [fp]
   41820:	cmp	r3, #45	; 0x2d
   41824:	beq	41a14 <blkid_probe_get_size@plt+0x3a4fc>
   41828:	ldrb	r3, [r4]
   4182c:	cmp	r3, #46	; 0x2e
   41830:	beq	419b0 <blkid_probe_get_size@plt+0x3a498>
   41834:	vldr	d8, [pc, #644]	; 41ac0 <blkid_probe_get_size@plt+0x3a5a8>
   41838:	mov	r0, r4
   4183c:	ldr	r1, [sp, #48]	; 0x30
   41840:	bl	6c9c <strspn@plt>
   41844:	cmp	sl, #7
   41848:	add	r4, r4, r0
   4184c:	str	r4, [sp, #68]	; 0x44
   41850:	bhi	41988 <blkid_probe_get_size@plt+0x3a470>
   41854:	add	r6, r8, sl, lsl #4
   41858:	b	4186c <blkid_probe_get_size@plt+0x3a354>
   4185c:	add	sl, sl, #1
   41860:	cmp	sl, #8
   41864:	add	r6, r6, #16
   41868:	beq	41988 <blkid_probe_get_size@plt+0x3a470>
   4186c:	ldr	r5, [r8, sl, lsl #4]
   41870:	mov	r0, r5
   41874:	bl	723c <strlen@plt>
   41878:	mov	r1, r5
   4187c:	mov	r2, r0
   41880:	mov	fp, r0
   41884:	mov	r0, r4
   41888:	bl	6a5c <strncmp@plt>
   4188c:	cmp	r0, #0
   41890:	bne	4185c <blkid_probe_get_size@plt+0x3a344>
   41894:	adds	fp, r4, fp
   41898:	beq	4185c <blkid_probe_get_size@plt+0x3a344>
   4189c:	vcmpe.f64	d8, #0.0
   418a0:	mov	r3, #0
   418a4:	str	r0, [sp, #52]	; 0x34
   418a8:	mov	r2, #0
   418ac:	vmrs	APSR_nzcv, fpscr
   418b0:	ldrd	r0, [sp, #8]
   418b4:	strd	r2, [sp, #24]
   418b8:	ldr	r9, [r6, #8]
   418bc:	movgt	r3, #1
   418c0:	movle	r3, #0
   418c4:	adds	r0, r0, r3
   418c8:	adc	r1, r1, #0
   418cc:	cmp	r1, #0
   418d0:	ldr	r4, [r6, #12]
   418d4:	bne	419d4 <blkid_probe_get_size@plt+0x3a4bc>
   418d8:	cmp	r4, #0
   418dc:	movne	r3, r4
   418e0:	movne	r2, r0
   418e4:	bne	419e4 <blkid_probe_get_size@plt+0x3a4cc>
   418e8:	ldrd	r2, [sp, #24]
   418ec:	orrs	r3, r2, r3
   418f0:	bne	41a14 <blkid_probe_get_size@plt+0x3a4fc>
   418f4:	mov	r1, r4
   418f8:	mov	r0, r9
   418fc:	bl	642dc <blkid_probe_get_size@plt+0x5cdc4>
   41900:	vmov	d7, r0, r1
   41904:	vmul.f64	d7, d7, d8
   41908:	vmov	r0, r1, d7
   4190c:	bl	643a0 <blkid_probe_get_size@plt+0x5ce88>
   41910:	ldrd	r6, [sp, #8]
   41914:	mul	ip, r9, r7
   41918:	umull	r2, r3, r9, r6
   4191c:	mla	r4, r4, r6, ip
   41920:	mov	lr, r6
   41924:	ldrd	r6, [sp, #16]
   41928:	add	r3, r4, r3
   4192c:	mvn	r7, r7
   41930:	mvn	r6, r6
   41934:	adds	r4, r0, r2
   41938:	adc	r5, r1, r3
   4193c:	cmp	r7, r5
   41940:	cmpeq	r6, r4
   41944:	bcc	41a14 <blkid_probe_get_size@plt+0x3a4fc>
   41948:	ldrd	r6, [sp, #16]
   4194c:	ldrb	r3, [fp]
   41950:	add	sl, sl, #1
   41954:	adds	r0, r4, r6
   41958:	adc	r1, r5, r7
   4195c:	mov	r6, r0
   41960:	mov	r7, r1
   41964:	cmp	r3, #0
   41968:	strd	r6, [sp, #16]
   4196c:	bne	417d4 <blkid_probe_get_size@plt+0x3a2bc>
   41970:	ldr	r1, [sp, #60]	; 0x3c
   41974:	mov	r2, r0
   41978:	mov	r3, r7
   4197c:	ldr	r5, [sp, #52]	; 0x34
   41980:	strd	r2, [r1]
   41984:	b	4198c <blkid_probe_get_size@plt+0x3a474>
   41988:	mvn	r5, #21
   4198c:	ldr	r3, [sp, #56]	; 0x38
   41990:	ldr	r2, [sp, #76]	; 0x4c
   41994:	mov	r0, r5
   41998:	ldr	r3, [r3]
   4199c:	cmp	r2, r3
   419a0:	bne	41ab4 <blkid_probe_get_size@plt+0x3a59c>
   419a4:	add	sp, sp, #84	; 0x54
   419a8:	vpop	{d8-d9}
   419ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   419b0:	add	r0, r4, #1
   419b4:	str	r0, [sp, #68]	; 0x44
   419b8:	ldrb	r3, [r4, #1]
   419bc:	sub	r3, r3, #48	; 0x30
   419c0:	cmp	r3, #9
   419c4:	bls	41a1c <blkid_probe_get_size@plt+0x3a504>
   419c8:	vldr	d8, [pc, #240]	; 41ac0 <blkid_probe_get_size@plt+0x3a5a8>
   419cc:	mov	r4, r0
   419d0:	b	41838 <blkid_probe_get_size@plt+0x3a320>
   419d4:	cmp	r4, #0
   419d8:	bne	419fc <blkid_probe_get_size@plt+0x3a4e4>
   419dc:	mov	r3, r1
   419e0:	mov	r2, r9
   419e4:	umull	r0, r1, r0, r9
   419e8:	mov	r7, #0
   419ec:	mov	r6, r1
   419f0:	umlal	r6, r7, r3, r2
   419f4:	cmp	r7, #0
   419f8:	beq	418e8 <blkid_probe_get_size@plt+0x3a3d0>
   419fc:	mov	r2, #1
   41a00:	mov	r3, #0
   41a04:	strd	r2, [sp, #24]
   41a08:	ldrd	r2, [sp, #24]
   41a0c:	orrs	r3, r2, r3
   41a10:	beq	418f4 <blkid_probe_get_size@plt+0x3a3dc>
   41a14:	mvn	r5, #33	; 0x21
   41a18:	b	4198c <blkid_probe_get_size@plt+0x3a474>
   41a1c:	mov	r2, #10
   41a20:	add	r1, sp, #72	; 0x48
   41a24:	bl	7128 <strtoull@plt>
   41a28:	ldr	r3, [sp, #36]	; 0x24
   41a2c:	ldr	r3, [r3]
   41a30:	cmp	r3, #0
   41a34:	bgt	41a80 <blkid_probe_get_size@plt+0x3a568>
   41a38:	bl	642dc <blkid_probe_get_size@plt+0x5cdc4>
   41a3c:	ldr	r4, [sp, #68]	; 0x44
   41a40:	ldr	r3, [sp, #72]	; 0x48
   41a44:	cmp	r4, r3
   41a48:	vmov	d8, r0, r1
   41a4c:	bcs	41838 <blkid_probe_get_size@plt+0x3a320>
   41a50:	sub	r4, r3, r4
   41a54:	add	r5, r5, #1
   41a58:	cmp	r5, r4
   41a5c:	vmul.f64	d8, d8, d9
   41a60:	bne	41a54 <blkid_probe_get_size@plt+0x3a53c>
   41a64:	mov	r4, r3
   41a68:	str	r3, [sp, #68]	; 0x44
   41a6c:	b	41838 <blkid_probe_get_size@plt+0x3a320>
   41a70:	ldr	r3, [pc, #112]	; 41ae8 <blkid_probe_get_size@plt+0x3a5d0>
   41a74:	add	r3, pc, r3
   41a78:	add	r4, r3, #536	; 0x218
   41a7c:	b	41794 <blkid_probe_get_size@plt+0x3a27c>
   41a80:	rsb	r5, r3, #0
   41a84:	b	4198c <blkid_probe_get_size@plt+0x3a474>
   41a88:	ldr	r2, [pc, #92]	; 41aec <blkid_probe_get_size@plt+0x3a5d4>
   41a8c:	ldr	r1, [pc, #92]	; 41af0 <blkid_probe_get_size@plt+0x3a5d8>
   41a90:	add	r2, pc, r2
   41a94:	add	r2, r2, #1696	; 0x6a0
   41a98:	add	r2, r2, #8
   41a9c:	str	r2, [sp]
   41aa0:	ldr	r2, [pc, #76]	; 41af4 <blkid_probe_get_size@plt+0x3a5dc>
   41aa4:	mov	r3, #168	; 0xa8
   41aa8:	add	r2, pc, r2
   41aac:	add	r1, pc, r1
   41ab0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41ab4:	bl	6fb4 <__stack_chk_fail@plt>
   41ab8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   41abc:	svccc	0x00b99999
	...
   41ac8:	andeq	r6, r5, ip, asr r4
   41acc:	andeq	r0, r0, ip, lsr r4
   41ad0:	andeq	sp, r2, r0, ror r2
   41ad4:	andeq	lr, r2, r0, asr #14
   41ad8:	andeq	r9, r2, r0, ror r0
   41adc:			; <UNDEFINED> instruction: 0x000485b4
   41ae0:	andeq	r9, r2, r0, lsl #12
   41ae4:	strdeq	r9, [r2], -r0
   41ae8:	andeq	r8, r4, ip, asr #5
   41aec:	andeq	ip, r2, r0, asr #30
   41af0:	andeq	r2, r3, r4, ror #23
   41af4:	andeq	r8, r2, r0, asr #26
   41af8:	ldr	ip, [pc, #524]	; 41d0c <blkid_probe_get_size@plt+0x3a7f4>
   41afc:	push	{r4, r5, r6, r7, r8, lr}
   41b00:	add	ip, pc, ip
   41b04:	ldr	lr, [pc, #516]	; 41d10 <blkid_probe_get_size@plt+0x3a7f8>
   41b08:	sub	sp, sp, #48	; 0x30
   41b0c:	mov	r6, r3
   41b10:	ldr	r5, [ip, lr]
   41b14:	tst	r2, #4096	; 0x1000
   41b18:	mov	lr, #0
   41b1c:	ldr	r3, [r5]
   41b20:	str	lr, [sp, #8]
   41b24:	str	r3, [sp, #44]	; 0x2c
   41b28:	beq	41b78 <blkid_probe_get_size@plt+0x3a660>
   41b2c:	cmp	r1, lr
   41b30:	beq	41b40 <blkid_probe_get_size@plt+0x3a628>
   41b34:	ldrb	r3, [r1]
   41b38:	cmp	r3, lr
   41b3c:	bne	41b78 <blkid_probe_get_size@plt+0x3a660>
   41b40:	ldr	r2, [pc, #460]	; 41d14 <blkid_probe_get_size@plt+0x3a7fc>
   41b44:	mov	r3, #30
   41b48:	add	r2, pc, r2
   41b4c:	add	r4, sp, #12
   41b50:	str	r0, [sp, #4]
   41b54:	str	r2, [sp]
   41b58:	mov	r0, r4
   41b5c:	mov	r1, r3
   41b60:	mov	r2, #1
   41b64:	bl	7260 <__snprintf_chk@plt>
   41b68:	cmp	r0, #29
   41b6c:	bhi	41cd0 <blkid_probe_get_size@plt+0x3a7b8>
   41b70:	mvn	r7, #0
   41b74:	b	41bbc <blkid_probe_get_size@plt+0x3a6a4>
   41b78:	tst	r2, #1024	; 0x400
   41b7c:	movne	r2, #2621440	; 0x280000
   41b80:	moveq	r2, #2654208	; 0x288000
   41b84:	bl	750c <__openat64_2@plt>
   41b88:	subs	r7, r0, #0
   41b8c:	blt	41c48 <blkid_probe_get_size@plt+0x3a730>
   41b90:	ldr	r2, [pc, #384]	; 41d18 <blkid_probe_get_size@plt+0x3a800>
   41b94:	mov	r3, #30
   41b98:	add	r2, pc, r2
   41b9c:	add	r4, sp, #12
   41ba0:	stm	sp, {r2, r7}
   41ba4:	mov	r0, r4
   41ba8:	mov	r1, r3
   41bac:	mov	r2, #1
   41bb0:	bl	7260 <__snprintf_chk@plt>
   41bb4:	cmp	r0, #29
   41bb8:	bhi	41ca0 <blkid_probe_get_size@plt+0x3a788>
   41bbc:	mov	r0, r4
   41bc0:	mov	r2, #0
   41bc4:	add	r1, sp, #8
   41bc8:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   41bcc:	cmn	r0, #2
   41bd0:	mov	r4, r0
   41bd4:	beq	41d00 <blkid_probe_get_size@plt+0x3a7e8>
   41bd8:	cmp	r0, #0
   41bdc:	blt	41c54 <blkid_probe_get_size@plt+0x3a73c>
   41be0:	ldr	r8, [sp, #8]
   41be4:	ldr	r1, [pc, #304]	; 41d1c <blkid_probe_get_size@plt+0x3a804>
   41be8:	mov	r2, #7
   41bec:	mov	r0, r8
   41bf0:	add	r1, pc, r1
   41bf4:	bl	6a5c <strncmp@plt>
   41bf8:	cmp	r0, #0
   41bfc:	bne	41c80 <blkid_probe_get_size@plt+0x3a768>
   41c00:	adds	r4, r8, #7
   41c04:	beq	41c80 <blkid_probe_get_size@plt+0x3a768>
   41c08:	ldr	r8, [pc, #272]	; 41d20 <blkid_probe_get_size@plt+0x3a808>
   41c0c:	mov	r0, r4
   41c10:	add	r8, pc, r8
   41c14:	mov	r1, r8
   41c18:	bl	6c9c <strspn@plt>
   41c1c:	mov	r1, r8
   41c20:	add	r4, r4, r0
   41c24:	mov	r0, r4
   41c28:	bl	6a8c <strcspn@plt>
   41c2c:	mov	r3, #0
   41c30:	mov	r1, r6
   41c34:	strb	r3, [r4, r0]
   41c38:	mov	r0, r4
   41c3c:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   41c40:	mov	r4, r0
   41c44:	b	41c54 <blkid_probe_get_size@plt+0x3a73c>
   41c48:	bl	732c <__errno_location@plt>
   41c4c:	ldr	r4, [r0]
   41c50:	rsb	r4, r4, #0
   41c54:	mov	r0, r7
   41c58:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   41c5c:	ldr	r0, [sp, #8]
   41c60:	bl	69f0 <free@plt>
   41c64:	ldr	r2, [sp, #44]	; 0x2c
   41c68:	ldr	r3, [r5]
   41c6c:	mov	r0, r4
   41c70:	cmp	r2, r3
   41c74:	bne	41d08 <blkid_probe_get_size@plt+0x3a7f0>
   41c78:	add	sp, sp, #48	; 0x30
   41c7c:	pop	{r4, r5, r6, r7, r8, pc}
   41c80:	ldr	r1, [pc, #156]	; 41d24 <blkid_probe_get_size@plt+0x3a80c>
   41c84:	mov	r0, r8
   41c88:	add	r1, pc, r1
   41c8c:	bl	7050 <strstr@plt>
   41c90:	subs	r4, r0, #0
   41c94:	beq	41d00 <blkid_probe_get_size@plt+0x3a7e8>
   41c98:	add	r4, r4, #8
   41c9c:	b	41c08 <blkid_probe_get_size@plt+0x3a6f0>
   41ca0:	ldr	r2, [pc, #128]	; 41d28 <blkid_probe_get_size@plt+0x3a810>
   41ca4:	ldr	r1, [pc, #128]	; 41d2c <blkid_probe_get_size@plt+0x3a814>
   41ca8:	add	r2, pc, r2
   41cac:	add	r2, r2, #1712	; 0x6b0
   41cb0:	add	r2, r2, #4
   41cb4:	str	r2, [sp]
   41cb8:	ldr	r2, [pc, #112]	; 41d30 <blkid_probe_get_size@plt+0x3a818>
   41cbc:	mov	r3, #105	; 0x69
   41cc0:	add	r2, pc, r2
   41cc4:	add	r1, pc, r1
   41cc8:	mov	r0, #0
   41ccc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41cd0:	ldr	r2, [pc, #92]	; 41d34 <blkid_probe_get_size@plt+0x3a81c>
   41cd4:	ldr	r1, [pc, #92]	; 41d38 <blkid_probe_get_size@plt+0x3a820>
   41cd8:	add	r2, pc, r2
   41cdc:	add	r2, r2, #1712	; 0x6b0
   41ce0:	add	r2, r2, #4
   41ce4:	str	r2, [sp]
   41ce8:	ldr	r2, [pc, #76]	; 41d3c <blkid_probe_get_size@plt+0x3a824>
   41cec:	mov	r3, #99	; 0x63
   41cf0:	add	r2, pc, r2
   41cf4:	add	r1, pc, r1
   41cf8:	mov	r0, #0
   41cfc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41d00:	mvn	r4, #94	; 0x5e
   41d04:	b	41c54 <blkid_probe_get_size@plt+0x3a73c>
   41d08:	bl	6fb4 <__stack_chk_fail@plt>
   41d0c:	andeq	r6, r5, r8, rrx
   41d10:	andeq	r0, r0, ip, lsr r4
   41d14:	ldrdeq	lr, [r2], -r4
   41d18:	andeq	lr, r2, r4, lsl #7
   41d1c:	andeq	lr, r2, r4, asr #6
   41d20:	andeq	r9, r2, ip, lsl #3
   41d24:			; <UNDEFINED> instruction: 0x0002e2b4
   41d28:	andeq	ip, r2, r8, lsr #26
   41d2c:	andeq	lr, r2, r4, lsr r2
   41d30:	andeq	lr, r2, r8, lsl r2
   41d34:	strdeq	ip, [r2], -r8
   41d38:	andeq	lr, r2, r4, lsl #4
   41d3c:	andeq	lr, r2, r8, ror #3
   41d40:	push	{r4, r5, r6, lr}
   41d44:	subs	r5, r0, #0
   41d48:	sub	sp, sp, #8
   41d4c:	beq	41da0 <blkid_probe_get_size@plt+0x3a888>
   41d50:	mov	r6, r1
   41d54:	mov	r1, #16384	; 0x4000
   41d58:	bl	40bf4 <blkid_probe_get_size@plt+0x396dc>
   41d5c:	subs	r4, r0, #0
   41d60:	blt	41d94 <blkid_probe_get_size@plt+0x3a87c>
   41d64:	mov	r1, r6
   41d68:	mov	r0, r5
   41d6c:	bl	38f74 <blkid_probe_get_size@plt+0x31a5c>
   41d70:	mov	r4, r0
   41d74:	bl	399d0 <blkid_probe_get_size@plt+0x324b8>
   41d78:	cmp	r4, #0
   41d7c:	blt	41d94 <blkid_probe_get_size@plt+0x3a87c>
   41d80:	mov	r0, r5
   41d84:	mov	r1, #0
   41d88:	add	sp, sp, #8
   41d8c:	pop	{r4, r5, r6, lr}
   41d90:	b	40754 <blkid_probe_get_size@plt+0x3923c>
   41d94:	mov	r0, r4
   41d98:	add	sp, sp, #8
   41d9c:	pop	{r4, r5, r6, pc}
   41da0:	ldr	r2, [pc, #36]	; 41dcc <blkid_probe_get_size@plt+0x3a8b4>
   41da4:	ldr	r1, [pc, #36]	; 41dd0 <blkid_probe_get_size@plt+0x3a8b8>
   41da8:	add	r2, pc, r2
   41dac:	add	r2, r2, #1728	; 0x6c0
   41db0:	add	r2, r2, #8
   41db4:	str	r2, [sp]
   41db8:	ldr	r2, [pc, #20]	; 41dd4 <blkid_probe_get_size@plt+0x3a8bc>
   41dbc:	mov	r3, #17
   41dc0:	add	r2, pc, r2
   41dc4:	add	r1, pc, r1
   41dc8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41dcc:	andeq	ip, r2, r8, lsr #24
   41dd0:	andeq	r9, r2, r0, asr r5
   41dd4:	andeq	lr, r2, r8, lsl #3
   41dd8:	ldr	r3, [pc, #120]	; 41e58 <blkid_probe_get_size@plt+0x3a940>
   41ddc:	mov	r2, r0
   41de0:	add	r3, pc, r3
   41de4:	push	{lr}		; (str lr, [sp, #-4]!)
   41de8:	mov	r1, #9
   41dec:	sub	sp, sp, #12
   41df0:	add	r0, r3, #792	; 0x318
   41df4:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   41df8:	subs	r2, r0, #0
   41dfc:	blt	41e50 <blkid_probe_get_size@plt+0x3a938>
   41e00:	cmp	r2, #8
   41e04:	bgt	41e20 <blkid_probe_get_size@plt+0x3a908>
   41e08:	ldr	r3, [pc, #76]	; 41e5c <blkid_probe_get_size@plt+0x3a944>
   41e0c:	mov	r0, #0
   41e10:	add	r3, pc, r3
   41e14:	str	r2, [r3]
   41e18:	add	sp, sp, #12
   41e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   41e20:	ldr	r2, [pc, #56]	; 41e60 <blkid_probe_get_size@plt+0x3a948>
   41e24:	ldr	r1, [pc, #56]	; 41e64 <blkid_probe_get_size@plt+0x3a94c>
   41e28:	add	r2, pc, r2
   41e2c:	add	r2, r2, #1744	; 0x6d0
   41e30:	add	r2, r2, #4
   41e34:	str	r2, [sp]
   41e38:	ldr	r2, [pc, #40]	; 41e68 <blkid_probe_get_size@plt+0x3a950>
   41e3c:	ldr	r3, [pc, #40]	; 41e6c <blkid_probe_get_size@plt+0x3a954>
   41e40:	add	r2, pc, r2
   41e44:	add	r1, pc, r1
   41e48:	mov	r0, #0
   41e4c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41e50:	mvn	r0, #21
   41e54:	b	41e18 <blkid_probe_get_size@plt+0x3a900>
   41e58:	andeq	r7, r4, r0, ror #30
   41e5c:	andeq	r7, r5, ip, asr r0
   41e60:	andeq	ip, r2, r8, lsr #23
   41e64:	andeq	lr, r2, r0, lsr #2
   41e68:	andeq	r7, r2, r8, lsl #3
   41e6c:	andeq	r0, r0, r3, lsr #2
   41e70:	bics	r3, r1, #7
   41e74:	bne	41e8c <blkid_probe_get_size@plt+0x3a974>
   41e78:	ldr	r3, [pc, #68]	; 41ec4 <blkid_probe_get_size@plt+0x3a9ac>
   41e7c:	and	r1, r1, #7
   41e80:	add	r3, pc, r3
   41e84:	str	r1, [r3, r0, lsl #2]
   41e88:	bx	lr
   41e8c:	ldr	r2, [pc, #52]	; 41ec8 <blkid_probe_get_size@plt+0x3a9b0>
   41e90:	push	{lr}		; (str lr, [sp, #-4]!)
   41e94:	add	r2, pc, r2
   41e98:	sub	sp, sp, #12
   41e9c:	add	r2, r2, #1760	; 0x6e0
   41ea0:	add	r2, r2, #4
   41ea4:	str	r2, [sp]
   41ea8:	ldr	r1, [pc, #28]	; 41ecc <blkid_probe_get_size@plt+0x3a9b4>
   41eac:	ldr	r2, [pc, #28]	; 41ed0 <blkid_probe_get_size@plt+0x3a9b8>
   41eb0:	ldr	r3, [pc, #28]	; 41ed4 <blkid_probe_get_size@plt+0x3a9bc>
   41eb4:	add	r2, pc, r2
   41eb8:	add	r1, pc, r1
   41ebc:	mov	r0, #0
   41ec0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   41ec4:			; <UNDEFINED> instruction: 0x000562bc
   41ec8:	andeq	ip, r2, ip, lsr fp
   41ecc:	andeq	lr, r2, r8, asr #1
   41ed0:	andeq	r7, r2, r4, lsl r1
   41ed4:	andeq	r0, r0, pc, lsr r1
   41ed8:	push	{r4, lr}
   41edc:	mov	r4, r0
   41ee0:	mov	r0, r1
   41ee4:	bl	414d0 <blkid_probe_get_size@plt+0x39fb8>
   41ee8:	subs	r1, r0, #0
   41eec:	blt	41f00 <blkid_probe_get_size@plt+0x3a9e8>
   41ef0:	mov	r0, r4
   41ef4:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
   41ef8:	mov	r0, #0
   41efc:	pop	{r4, pc}
   41f00:	mvn	r0, #21
   41f04:	pop	{r4, pc}
   41f08:	push	{r4, r5, lr}
   41f0c:	mov	r5, r1
   41f10:	ldr	r1, [pc, #848]	; 42268 <blkid_probe_get_size@plt+0x3ad50>
   41f14:	sub	sp, sp, #20
   41f18:	add	r1, pc, r1
   41f1c:	mov	r4, r0
   41f20:	bl	7314 <strcmp@plt>
   41f24:	cmp	r0, #0
   41f28:	bne	41fc0 <blkid_probe_get_size@plt+0x3aaa8>
   41f2c:	cmp	r5, #0
   41f30:	beq	42114 <blkid_probe_get_size@plt+0x3abfc>
   41f34:	ldr	r1, [pc, #816]	; 4226c <blkid_probe_get_size@plt+0x3ad54>
   41f38:	mov	r0, r4
   41f3c:	add	r1, pc, r1
   41f40:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   41f44:	cmp	r0, #0
   41f48:	beq	41f68 <blkid_probe_get_size@plt+0x3aa50>
   41f4c:	mov	r0, r5
   41f50:	bl	41dd8 <blkid_probe_get_size@plt+0x3a8c0>
   41f54:	cmp	r0, #0
   41f58:	blt	420c0 <blkid_probe_get_size@plt+0x3aba8>
   41f5c:	mov	r0, #0
   41f60:	add	sp, sp, #20
   41f64:	pop	{r4, r5, pc}
   41f68:	ldr	r1, [pc, #768]	; 42270 <blkid_probe_get_size@plt+0x3ad58>
   41f6c:	mov	r0, r4
   41f70:	add	r1, pc, r1
   41f74:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   41f78:	cmp	r0, #0
   41f7c:	bne	42058 <blkid_probe_get_size@plt+0x3ab40>
   41f80:	ldr	r1, [pc, #748]	; 42274 <blkid_probe_get_size@plt+0x3ad5c>
   41f84:	mov	r0, r4
   41f88:	add	r1, pc, r1
   41f8c:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   41f90:	cmp	r0, #0
   41f94:	beq	421a8 <blkid_probe_get_size@plt+0x3ac90>
   41f98:	mov	r0, r5
   41f9c:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   41fa0:	cmp	r0, #0
   41fa4:	blt	42154 <blkid_probe_get_size@plt+0x3ac3c>
   41fa8:	ldr	r3, [pc, #712]	; 42278 <blkid_probe_get_size@plt+0x3ad60>
   41fac:	movne	r2, #1
   41fb0:	add	r3, pc, r3
   41fb4:	moveq	r2, #0
   41fb8:	strb	r2, [r3, #2056]	; 0x808
   41fbc:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   41fc0:	ldr	r1, [pc, #692]	; 4227c <blkid_probe_get_size@plt+0x3ad64>
   41fc4:	mov	r0, r4
   41fc8:	add	r1, pc, r1
   41fcc:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   41fd0:	cmp	r0, #0
   41fd4:	bne	4204c <blkid_probe_get_size@plt+0x3ab34>
   41fd8:	ldr	r1, [pc, #672]	; 42280 <blkid_probe_get_size@plt+0x3ad68>
   41fdc:	mov	r0, r4
   41fe0:	add	r1, pc, r1
   41fe4:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   41fe8:	cmp	r0, #0
   41fec:	beq	42128 <blkid_probe_get_size@plt+0x3ac10>
   41ff0:	cmp	r5, #0
   41ff4:	bne	42058 <blkid_probe_get_size@plt+0x3ab40>
   41ff8:	ldr	r3, [pc, #644]	; 42284 <blkid_probe_get_size@plt+0x3ad6c>
   41ffc:	add	r3, pc, r3
   42000:	ldr	r3, [r3]
   42004:	cmp	r3, #3
   42008:	ble	41f5c <blkid_probe_get_size@plt+0x3aa44>
   4200c:	ldr	r3, [pc, #628]	; 42288 <blkid_probe_get_size@plt+0x3ad70>
   42010:	ldr	r2, [pc, #628]	; 4228c <blkid_probe_get_size@plt+0x3ad74>
   42014:	add	r3, pc, r3
   42018:	add	r2, pc, r2
   4201c:	str	r2, [sp, #4]
   42020:	add	r3, r3, #1776	; 0x6f0
   42024:	ldr	r2, [pc, #612]	; 42290 <blkid_probe_get_size@plt+0x3ad78>
   42028:	add	r3, r3, #12
   4202c:	str	r3, [sp]
   42030:	str	r4, [sp, #8]
   42034:	mov	r3, #36	; 0x24
   42038:	add	r2, pc, r2
   4203c:	mov	r1, #0
   42040:	mov	r0, #4
   42044:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   42048:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   4204c:	cmp	r5, #0
   42050:	beq	41ff8 <blkid_probe_get_size@plt+0x3aae0>
   42054:	b	41f4c <blkid_probe_get_size@plt+0x3aa34>
   42058:	mov	r1, r5
   4205c:	mov	r0, #0
   42060:	bl	41ed8 <blkid_probe_get_size@plt+0x3a9c0>
   42064:	cmp	r0, #0
   42068:	bge	41f5c <blkid_probe_get_size@plt+0x3aa44>
   4206c:	ldr	r3, [pc, #544]	; 42294 <blkid_probe_get_size@plt+0x3ad7c>
   42070:	add	r3, pc, r3
   42074:	ldr	r3, [r3]
   42078:	cmp	r3, #3
   4207c:	ble	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42080:	ldr	r3, [pc, #528]	; 42298 <blkid_probe_get_size@plt+0x3ad80>
   42084:	ldr	r2, [pc, #528]	; 4229c <blkid_probe_get_size@plt+0x3ad84>
   42088:	add	r3, pc, r3
   4208c:	add	r2, pc, r2
   42090:	str	r2, [sp, #4]
   42094:	add	r3, r3, #1808	; 0x710
   42098:	ldr	r2, [pc, #512]	; 422a0 <blkid_probe_get_size@plt+0x3ad88>
   4209c:	add	r3, r3, #8
   420a0:	str	r3, [sp]
   420a4:	str	r5, [sp, #8]
   420a8:	ldr	r3, [pc, #500]	; 422a4 <blkid_probe_get_size@plt+0x3ad8c>
   420ac:	add	r2, pc, r2
   420b0:	mov	r1, #0
   420b4:	mov	r0, #4
   420b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   420bc:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   420c0:	ldr	r3, [pc, #480]	; 422a8 <blkid_probe_get_size@plt+0x3ad90>
   420c4:	add	r3, pc, r3
   420c8:	ldr	r3, [r3]
   420cc:	cmp	r3, #3
   420d0:	ble	41f5c <blkid_probe_get_size@plt+0x3aa44>
   420d4:	ldr	r3, [pc, #464]	; 422ac <blkid_probe_get_size@plt+0x3ad94>
   420d8:	ldr	r2, [pc, #464]	; 422b0 <blkid_probe_get_size@plt+0x3ad98>
   420dc:	add	r3, pc, r3
   420e0:	add	r2, pc, r2
   420e4:	str	r2, [sp, #4]
   420e8:	add	r3, r3, #1808	; 0x710
   420ec:	ldr	r2, [pc, #448]	; 422b4 <blkid_probe_get_size@plt+0x3ad9c>
   420f0:	add	r3, r3, #8
   420f4:	str	r3, [sp]
   420f8:	str	r5, [sp, #8]
   420fc:	ldr	r3, [pc, #436]	; 422b8 <blkid_probe_get_size@plt+0x3ada0>
   42100:	add	r2, pc, r2
   42104:	mov	r1, #0
   42108:	mov	r0, #4
   4210c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   42110:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42114:	mov	r1, #7
   42118:	bl	41e70 <blkid_probe_get_size@plt+0x3a958>
   4211c:	mov	r0, #0
   42120:	add	sp, sp, #20
   42124:	pop	{r4, r5, pc}
   42128:	ldr	r1, [pc, #396]	; 422bc <blkid_probe_get_size@plt+0x3ada4>
   4212c:	mov	r0, r4
   42130:	add	r1, pc, r1
   42134:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   42138:	cmp	r0, #0
   4213c:	beq	421e8 <blkid_probe_get_size@plt+0x3acd0>
   42140:	cmp	r5, #0
   42144:	bne	41f98 <blkid_probe_get_size@plt+0x3aa80>
   42148:	ldr	r0, [pc, #368]	; 422c0 <blkid_probe_get_size@plt+0x3ada8>
   4214c:	add	r0, pc, r0
   42150:	b	41f9c <blkid_probe_get_size@plt+0x3aa84>
   42154:	ldr	r3, [pc, #360]	; 422c4 <blkid_probe_get_size@plt+0x3adac>
   42158:	add	r3, pc, r3
   4215c:	ldr	r3, [r3]
   42160:	cmp	r3, #3
   42164:	ble	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42168:	ldr	r3, [pc, #344]	; 422c8 <blkid_probe_get_size@plt+0x3adb0>
   4216c:	ldr	r2, [pc, #344]	; 422cc <blkid_probe_get_size@plt+0x3adb4>
   42170:	add	r3, pc, r3
   42174:	add	r2, pc, r2
   42178:	str	r2, [sp, #4]
   4217c:	add	r3, r3, #1808	; 0x710
   42180:	ldr	r2, [pc, #328]	; 422d0 <blkid_probe_get_size@plt+0x3adb8>
   42184:	add	r3, r3, #8
   42188:	str	r3, [sp]
   4218c:	str	r5, [sp, #8]
   42190:	ldr	r3, [pc, #316]	; 422d4 <blkid_probe_get_size@plt+0x3adbc>
   42194:	add	r2, pc, r2
   42198:	mov	r1, #0
   4219c:	mov	r0, #4
   421a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   421a4:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   421a8:	ldr	r1, [pc, #296]	; 422d8 <blkid_probe_get_size@plt+0x3adc0>
   421ac:	mov	r0, r4
   421b0:	add	r1, pc, r1
   421b4:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   421b8:	cmp	r0, #0
   421bc:	beq	41f5c <blkid_probe_get_size@plt+0x3aa44>
   421c0:	mov	r0, r5
   421c4:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   421c8:	cmp	r0, #0
   421cc:	blt	42214 <blkid_probe_get_size@plt+0x3acfc>
   421d0:	ldr	r3, [pc, #260]	; 422dc <blkid_probe_get_size@plt+0x3adc4>
   421d4:	movne	r2, #1
   421d8:	add	r3, pc, r3
   421dc:	moveq	r2, #0
   421e0:	strb	r2, [r3, #2057]	; 0x809
   421e4:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   421e8:	ldr	r1, [pc, #240]	; 422e0 <blkid_probe_get_size@plt+0x3adc8>
   421ec:	mov	r0, r4
   421f0:	add	r1, pc, r1
   421f4:	bl	3eec8 <blkid_probe_get_size@plt+0x379b0>
   421f8:	cmp	r0, #0
   421fc:	beq	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42200:	cmp	r5, #0
   42204:	bne	421c0 <blkid_probe_get_size@plt+0x3aca8>
   42208:	ldr	r0, [pc, #212]	; 422e4 <blkid_probe_get_size@plt+0x3adcc>
   4220c:	add	r0, pc, r0
   42210:	b	421c4 <blkid_probe_get_size@plt+0x3acac>
   42214:	ldr	r3, [pc, #204]	; 422e8 <blkid_probe_get_size@plt+0x3add0>
   42218:	add	r3, pc, r3
   4221c:	ldr	r3, [r3]
   42220:	cmp	r3, #3
   42224:	ble	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42228:	ldr	r3, [pc, #188]	; 422ec <blkid_probe_get_size@plt+0x3add4>
   4222c:	ldr	r2, [pc, #188]	; 422f0 <blkid_probe_get_size@plt+0x3add8>
   42230:	add	r3, pc, r3
   42234:	add	r2, pc, r2
   42238:	str	r2, [sp, #4]
   4223c:	add	r3, r3, #1808	; 0x710
   42240:	ldr	r2, [pc, #172]	; 422f4 <blkid_probe_get_size@plt+0x3addc>
   42244:	add	r3, r3, #8
   42248:	str	r3, [sp]
   4224c:	str	r5, [sp, #8]
   42250:	ldr	r3, [pc, #160]	; 422f8 <blkid_probe_get_size@plt+0x3ade0>
   42254:	add	r2, pc, r2
   42258:	mov	r1, #0
   4225c:	mov	r0, #4
   42260:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   42264:	b	41f5c <blkid_probe_get_size@plt+0x3aa44>
   42268:	strdeq	r7, [r2], -ip
   4226c:	andeq	lr, r2, r4, rrx
   42270:	andeq	lr, r2, r0, lsr #1
   42274:	muleq	r2, ip, r0
   42278:	andeq	r6, r5, ip, lsl #13
   4227c:	ldrdeq	sp, [r2], -r8
   42280:	andeq	lr, r2, r0, lsr r0
   42284:	andeq	r6, r5, r0, asr #2
   42288:			; <UNDEFINED> instruction: 0x0002c9bc
   4228c:			; <UNDEFINED> instruction: 0x0002dfb8
   42290:	andeq	sp, r2, ip, ror pc
   42294:	andeq	r6, r5, ip, asr #1
   42298:	andeq	ip, r2, r8, asr #18
   4229c:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   422a0:	andeq	r6, r2, ip, lsl pc
   422a4:	andeq	r0, r0, r5, lsr r4
   422a8:	andeq	r6, r5, r8, ror r0
   422ac:	strdeq	ip, [r2], -r4
   422b0:	strdeq	r6, [r2], -ip
   422b4:	andeq	r6, r2, r8, asr #29
   422b8:	andeq	r0, r0, sp, lsr #8
   422bc:	strdeq	sp, [r2], -r4
   422c0:	andeq	r4, r3, r8, lsl #4
   422c4:	andeq	r5, r5, r4, ror #31
   422c8:	andeq	ip, r2, r0, ror #16
   422cc:	andeq	sp, r2, r4, asr #29
   422d0:	andeq	r6, r2, r4, lsr lr
   422d4:	andeq	r0, r0, sl, lsr r4
   422d8:			; <UNDEFINED> instruction: 0x0002debc
   422dc:	andeq	r6, r5, r4, ror #8
   422e0:	andeq	sp, r2, ip, ror lr
   422e4:	andeq	r4, r3, r8, asr #2
   422e8:	andeq	r5, r5, r4, lsr #30
   422ec:	andeq	ip, r2, r0, lsr #15
   422f0:	andeq	sp, r2, r0, asr lr
   422f4:	andeq	r6, r2, r4, ror sp
   422f8:	andeq	r0, r0, pc, lsr r4
   422fc:	push	{r4, r5, r6, lr}
   42300:	sub	sp, sp, #8
   42304:	ldrb	r3, [r0, #39]	; 0x27
   42308:	ands	r1, r3, #4
   4230c:	bne	42354 <blkid_probe_get_size@plt+0x3ae3c>
   42310:	and	r2, r3, #3
   42314:	ldr	r3, [pc, #100]	; 42380 <blkid_probe_get_size@plt+0x3ae68>
   42318:	add	r4, r0, #4
   4231c:	add	r3, pc, r3
   42320:	add	r3, r3, r2, lsl #4
   42324:	mov	r0, r4
   42328:	ldr	r6, [r3, #12]
   4232c:	ldr	r5, [r3, #4]
   42330:	mul	r5, r5, r6
   42334:	mov	r2, r5
   42338:	bl	6c84 <memset@plt>
   4233c:	mov	r2, r6
   42340:	add	r0, r4, r5
   42344:	mov	r1, #255	; 0xff
   42348:	add	sp, sp, #8
   4234c:	pop	{r4, r5, r6, lr}
   42350:	b	6c84 <memset@plt>
   42354:	ldr	r2, [pc, #40]	; 42384 <blkid_probe_get_size@plt+0x3ae6c>
   42358:	ldr	r1, [pc, #40]	; 42388 <blkid_probe_get_size@plt+0x3ae70>
   4235c:	add	r2, pc, r2
   42360:	add	r2, r2, #1840	; 0x730
   42364:	str	r2, [sp]
   42368:	ldr	r2, [pc, #28]	; 4238c <blkid_probe_get_size@plt+0x3ae74>
   4236c:	ldr	r3, [pc, #28]	; 42390 <blkid_probe_get_size@plt+0x3ae78>
   42370:	add	r2, pc, r2
   42374:	add	r1, pc, r1
   42378:	mov	r0, #0
   4237c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42380:	strdeq	r7, [r4], -r4
   42384:	andeq	ip, r2, r4, ror r6
   42388:	andeq	sp, r2, r8, asr #26
   4238c:	andeq	fp, r2, r0, asr #3
   42390:	strdeq	r0, [r0], -fp
   42394:	ldr	r3, [pc, #16]	; 423ac <blkid_probe_get_size@plt+0x3ae94>
   42398:	mov	r2, #2
   4239c:	add	r3, pc, r3
   423a0:	mov	r0, #0
   423a4:	str	r2, [r3]
   423a8:	bx	lr
   423ac:	strdeq	r5, [r5], -r8
   423b0:	ldr	ip, [pc, #776]	; 426c0 <blkid_probe_get_size@plt+0x3b1a8>
   423b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   423b8:	add	ip, pc, ip
   423bc:	ldr	lr, [pc, #768]	; 426c4 <blkid_probe_get_size@plt+0x3b1ac>
   423c0:	sub	sp, sp, #348	; 0x15c
   423c4:	add	r7, sp, #36	; 0x24
   423c8:	ldr	r6, [ip, lr]
   423cc:	mov	r5, r0
   423d0:	mov	r9, r1
   423d4:	ldr	lr, [r6]
   423d8:	mov	sl, r2
   423dc:	mov	r0, r7
   423e0:	mov	r2, #48	; 0x30
   423e4:	mov	r1, #0
   423e8:	mov	r8, r3
   423ec:	str	lr, [sp, #340]	; 0x154
   423f0:	bl	6c84 <memset@plt>
   423f4:	ldr	r3, [pc, #716]	; 426c8 <blkid_probe_get_size@plt+0x3b1b0>
   423f8:	add	r3, pc, r3
   423fc:	ldr	r3, [r3]
   42400:	cmp	r3, #0
   42404:	blt	42518 <blkid_probe_get_size@plt+0x3b000>
   42408:	ldr	r3, [pc, #700]	; 426cc <blkid_probe_get_size@plt+0x3b1b4>
   4240c:	ldr	r4, [pc, r3]
   42410:	cmp	r4, #1
   42414:	movne	fp, #1
   42418:	movne	r4, #0
   4241c:	beq	4259c <blkid_probe_get_size@plt+0x3b084>
   42420:	ldr	r3, [pc, #680]	; 426d0 <blkid_probe_get_size@plt+0x3b1b8>
   42424:	and	r5, r5, #7
   42428:	add	r3, pc, r3
   4242c:	cmp	r5, #3
   42430:	ldrb	r2, [r3, #2057]	; 0x809
   42434:	ble	424b0 <blkid_probe_get_size@plt+0x3af98>
   42438:	cmp	r2, #0
   4243c:	bne	4253c <blkid_probe_get_size@plt+0x3b024>
   42440:	mov	r0, r8
   42444:	bl	723c <strlen@plt>
   42448:	add	r3, sp, #344	; 0x158
   4244c:	add	r4, r3, r4, lsl #3
   42450:	str	r8, [r4, #-308]	; 0xfffffecc
   42454:	str	r0, [r4, #-304]	; 0xfffffed0
   42458:	ldr	r4, [pc, #628]	; 426d4 <blkid_probe_get_size@plt+0x3b1bc>
   4245c:	add	r3, sp, #344	; 0x158
   42460:	add	r4, pc, r4
   42464:	add	r2, r4, #132	; 0x84
   42468:	add	r3, r3, fp, lsl #3
   4246c:	ldm	r2, {r0, r1}
   42470:	sub	r3, r3, #308	; 0x134
   42474:	add	fp, fp, #1
   42478:	stm	r3, {r0, r1}
   4247c:	mov	r2, fp
   42480:	ldr	r0, [r4]
   42484:	mov	r1, r7
   42488:	bl	73c8 <writev@plt>
   4248c:	cmp	r0, #0
   42490:	blt	42520 <blkid_probe_get_size@plt+0x3b008>
   42494:	mov	r0, #1
   42498:	ldr	r2, [sp, #340]	; 0x154
   4249c:	ldr	r3, [r6]
   424a0:	cmp	r2, r3
   424a4:	bne	42674 <blkid_probe_get_size@plt+0x3b15c>
   424a8:	add	sp, sp, #348	; 0x15c
   424ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   424b0:	ldrb	r3, [r3, #2056]	; 0x808
   424b4:	cmp	r3, #0
   424b8:	beq	42438 <blkid_probe_get_size@plt+0x3af20>
   424bc:	cmp	r2, #0
   424c0:	bne	42678 <blkid_probe_get_size@plt+0x3b160>
   424c4:	ldr	r5, [pc, #524]	; 426d8 <blkid_probe_get_size@plt+0x3b1c0>
   424c8:	add	r3, sp, #344	; 0x158
   424cc:	add	r5, pc, r5
   424d0:	add	r2, r5, #116	; 0x74
   424d4:	add	r3, r3, r4, lsl #3
   424d8:	ldm	r2, {r0, r1}
   424dc:	sub	r3, r3, #308	; 0x134
   424e0:	add	r5, r5, #124	; 0x7c
   424e4:	stm	r3, {r0, r1}
   424e8:	mov	r0, r8
   424ec:	bl	723c <strlen@plt>
   424f0:	add	r3, sp, #344	; 0x158
   424f4:	add	r2, r3, fp, lsl #3
   424f8:	add	r3, r3, r4, lsl #3
   424fc:	sub	r3, r3, #292	; 0x124
   42500:	str	r8, [r2, #-308]	; 0xfffffecc
   42504:	add	fp, r4, #3
   42508:	str	r0, [r2, #-304]	; 0xfffffed0
   4250c:	ldm	r5, {r0, r1}
   42510:	stm	r3, {r0, r1}
   42514:	b	42458 <blkid_probe_get_size@plt+0x3af40>
   42518:	mov	r0, #0
   4251c:	b	42498 <blkid_probe_get_size@plt+0x3af80>
   42520:	bl	732c <__errno_location@plt>
   42524:	mov	r5, r0
   42528:	ldr	r0, [r0]
   4252c:	cmp	r0, #5
   42530:	beq	425e0 <blkid_probe_get_size@plt+0x3b0c8>
   42534:	rsb	r0, r0, #0
   42538:	b	42498 <blkid_probe_get_size@plt+0x3af80>
   4253c:	ldr	r2, [pc, #408]	; 426dc <blkid_probe_get_size@plt+0x3b1c4>
   42540:	mov	r3, #256	; 0x100
   42544:	add	r2, pc, r2
   42548:	add	r5, sp, #84	; 0x54
   4254c:	mov	r1, r3
   42550:	stm	sp, {r2, r9, sl}
   42554:	mov	r0, r5
   42558:	mov	r2, #1
   4255c:	bl	7260 <__snprintf_chk@plt>
   42560:	mov	r0, r5
   42564:	bl	723c <strlen@plt>
   42568:	add	r3, sp, #344	; 0x158
   4256c:	add	r3, r3, r4, lsl #3
   42570:	add	r4, r4, #2
   42574:	str	r5, [r3, #-308]	; 0xfffffecc
   42578:	str	r0, [r3, #-304]	; 0xfffffed0
   4257c:	mov	r0, r8
   42580:	bl	723c <strlen@plt>
   42584:	add	r3, sp, #344	; 0x158
   42588:	add	r3, r3, fp, lsl #3
   4258c:	mov	fp, r4
   42590:	str	r8, [r3, #-308]	; 0xfffffecc
   42594:	str	r0, [r3, #-304]	; 0xfffffed0
   42598:	b	42458 <blkid_probe_get_size@plt+0x3af40>
   4259c:	ldr	r2, [pc, #316]	; 426e0 <blkid_probe_get_size@plt+0x3b1c8>
   425a0:	mov	r3, #15
   425a4:	add	r2, pc, r2
   425a8:	add	fp, sp, #20
   425ac:	stm	sp, {r2, r5}
   425b0:	mov	r0, fp
   425b4:	mov	r1, r3
   425b8:	mov	r2, r4
   425bc:	bl	7260 <__snprintf_chk@plt>
   425c0:	cmp	r0, #14
   425c4:	bhi	4263c <blkid_probe_get_size@plt+0x3b124>
   425c8:	mov	r0, fp
   425cc:	bl	723c <strlen@plt>
   425d0:	str	fp, [sp, #36]	; 0x24
   425d4:	mov	fp, #2
   425d8:	str	r0, [sp, #40]	; 0x28
   425dc:	b	42420 <blkid_probe_get_size@plt+0x3af08>
   425e0:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   425e4:	cmp	r0, #1
   425e8:	ldrne	r0, [r5]
   425ec:	bne	42534 <blkid_probe_get_size@plt+0x3b01c>
   425f0:	ldr	r0, [r4]
   425f4:	cmp	r0, #2
   425f8:	mvnle	r0, #0
   425fc:	bgt	4266c <blkid_probe_get_size@plt+0x3b154>
   42600:	ldr	r1, [pc, #220]	; 426e4 <blkid_probe_get_size@plt+0x3b1cc>
   42604:	add	r1, pc, r1
   42608:	str	r0, [r1]
   4260c:	bl	42394 <blkid_probe_get_size@plt+0x3ae7c>
   42610:	ldr	r0, [r1]
   42614:	cmp	r0, #0
   42618:	blt	42518 <blkid_probe_get_size@plt+0x3b000>
   4261c:	mov	r2, fp
   42620:	mov	r1, r7
   42624:	bl	73c8 <writev@plt>
   42628:	cmp	r0, #0
   4262c:	bge	42494 <blkid_probe_get_size@plt+0x3af7c>
   42630:	ldr	r0, [r5]
   42634:	rsb	r0, r0, #0
   42638:	b	42498 <blkid_probe_get_size@plt+0x3af80>
   4263c:	ldr	r2, [pc, #164]	; 426e8 <blkid_probe_get_size@plt+0x3b1d0>
   42640:	ldr	r1, [pc, #164]	; 426ec <blkid_probe_get_size@plt+0x3b1d4>
   42644:	add	r2, pc, r2
   42648:	add	r2, r2, #1856	; 0x740
   4264c:	add	r2, r2, #8
   42650:	str	r2, [sp]
   42654:	ldr	r2, [pc, #148]	; 426f0 <blkid_probe_get_size@plt+0x3b1d8>
   42658:	ldr	r3, [pc, #148]	; 426f4 <blkid_probe_get_size@plt+0x3b1dc>
   4265c:	add	r2, pc, r2
   42660:	add	r1, pc, r1
   42664:	mov	r0, #0
   42668:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4266c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   42670:	b	42600 <blkid_probe_get_size@plt+0x3b0e8>
   42674:	bl	6fb4 <__stack_chk_fail@plt>
   42678:	ldr	r2, [pc, #120]	; 426f8 <blkid_probe_get_size@plt+0x3b1e0>
   4267c:	mov	r3, #256	; 0x100
   42680:	add	r2, pc, r2
   42684:	add	r5, sp, #84	; 0x54
   42688:	mov	r1, r3
   4268c:	stm	sp, {r2, r9, sl}
   42690:	mov	r0, r5
   42694:	mov	r2, #1
   42698:	bl	7260 <__snprintf_chk@plt>
   4269c:	mov	r0, r5
   426a0:	bl	723c <strlen@plt>
   426a4:	add	r3, sp, #344	; 0x158
   426a8:	add	r3, r3, r4, lsl #3
   426ac:	mov	r4, fp
   426b0:	str	r5, [r3, #-308]	; 0xfffffecc
   426b4:	add	fp, fp, #1
   426b8:	str	r0, [r3, #-304]	; 0xfffffed0
   426bc:	b	424c4 <blkid_probe_get_size@plt+0x3afac>
   426c0:			; <UNDEFINED> instruction: 0x000557b0
   426c4:	andeq	r0, r0, ip, lsr r4
   426c8:	muleq	r5, ip, ip
   426cc:	andeq	r6, r5, r0, ror #20
   426d0:	andeq	r6, r5, r4, lsl r2
   426d4:	andeq	r5, r5, r4, lsr ip
   426d8:	andeq	r5, r5, r8, asr #23
   426dc:			; <UNDEFINED> instruction: 0x0002dbbc
   426e0:	andeq	sp, r2, ip, lsr #22
   426e4:	muleq	r5, r0, sl
   426e8:	andeq	ip, r2, ip, lsl #7
   426ec:	andeq	sp, r2, r8, ror sl
   426f0:	andeq	r6, r2, ip, ror #18
   426f4:	andeq	r0, r0, sl, asr r1
   426f8:	andeq	sp, r2, r0, lsl #21
   426fc:	push	{r4, r5, r6, lr}
   42700:	mov	r5, r0
   42704:	mov	r6, r1
   42708:	bl	3eadc <blkid_probe_get_size@plt+0x375c4>
   4270c:	mov	r1, r6
   42710:	mov	r4, r0
   42714:	mov	r0, r5
   42718:	bl	40754 <blkid_probe_get_size@plt+0x3923c>
   4271c:	cmp	r4, #0
   42720:	andge	r4, r0, r0, asr #31
   42724:	mov	r0, r4
   42728:	pop	{r4, r5, r6, pc}
   4272c:	ldr	ip, [pc, #400]	; 428c4 <blkid_probe_get_size@plt+0x3b3ac>
   42730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42734:	add	ip, pc, ip
   42738:	ldr	lr, [pc, #392]	; 428c8 <blkid_probe_get_size@plt+0x3b3b0>
   4273c:	sub	sp, sp, #28
   42740:	mov	r9, r3
   42744:	ldr	r8, [ip, lr]
   42748:	subs	r7, r0, #0
   4274c:	mov	r5, r1
   42750:	ldr	r3, [r8]
   42754:	mov	r1, ip
   42758:	str	r3, [sp, #20]
   4275c:	blt	42858 <blkid_probe_get_size@plt+0x3b340>
   42760:	cmp	r5, #0
   42764:	beq	42888 <blkid_probe_get_size@plt+0x3b370>
   42768:	cmp	r2, #0
   4276c:	mov	r4, r2
   42770:	blt	428b8 <blkid_probe_get_size@plt+0x3b3a0>
   42774:	mov	r6, #0
   42778:	mov	fp, r6
   4277c:	add	sl, sp, #12
   42780:	mov	r2, r4
   42784:	mov	r1, r5
   42788:	mov	r0, r7
   4278c:	bl	6d74 <read@plt>
   42790:	cmp	r0, #0
   42794:	blt	427d4 <blkid_probe_get_size@plt+0x3b2bc>
   42798:	beq	427b8 <blkid_probe_get_size@plt+0x3b2a0>
   4279c:	cmp	r4, r0
   427a0:	bcc	42800 <blkid_probe_get_size@plt+0x3b2e8>
   427a4:	add	r5, r5, r0
   427a8:	sub	r4, r4, r0
   427ac:	add	r6, r6, r0
   427b0:	cmp	r4, #0
   427b4:	bne	42780 <blkid_probe_get_size@plt+0x3b268>
   427b8:	ldr	r2, [sp, #20]
   427bc:	ldr	r3, [r8]
   427c0:	mov	r0, r6
   427c4:	cmp	r2, r3
   427c8:	bne	428c0 <blkid_probe_get_size@plt+0x3b3a8>
   427cc:	add	sp, sp, #28
   427d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   427d4:	bl	732c <__errno_location@plt>
   427d8:	ldr	r3, [r0]
   427dc:	cmp	r3, #4
   427e0:	beq	427b0 <blkid_probe_get_size@plt+0x3b298>
   427e4:	cmp	r3, #11
   427e8:	bne	427f4 <blkid_probe_get_size@plt+0x3b2dc>
   427ec:	cmp	r9, #0
   427f0:	bne	42830 <blkid_probe_get_size@plt+0x3b318>
   427f4:	cmp	r6, #0
   427f8:	rsbeq	r6, r3, #0
   427fc:	b	427b8 <blkid_probe_get_size@plt+0x3b2a0>
   42800:	ldr	r2, [pc, #196]	; 428cc <blkid_probe_get_size@plt+0x3b3b4>
   42804:	ldr	r1, [pc, #196]	; 428d0 <blkid_probe_get_size@plt+0x3b3b8>
   42808:	add	r2, pc, r2
   4280c:	add	r2, r2, #1872	; 0x750
   42810:	add	r2, r2, #12
   42814:	str	r2, [sp]
   42818:	ldr	r2, [pc, #180]	; 428d4 <blkid_probe_get_size@plt+0x3b3bc>
   4281c:	mov	r3, #95	; 0x5f
   42820:	add	r2, pc, r2
   42824:	add	r1, pc, r1
   42828:	mov	r0, #0
   4282c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42830:	mov	r3, #0
   42834:	mov	ip, #1
   42838:	mov	r2, r3
   4283c:	mov	r1, #1
   42840:	mov	r0, sl
   42844:	strh	fp, [sp, #18]
   42848:	str	r7, [sp, #12]
   4284c:	strh	ip, [sp, #16]
   42850:	bl	68c4 <ppoll@plt>
   42854:	b	427b0 <blkid_probe_get_size@plt+0x3b298>
   42858:	ldr	r2, [pc, #120]	; 428d8 <blkid_probe_get_size@plt+0x3b3c0>
   4285c:	ldr	r1, [pc, #120]	; 428dc <blkid_probe_get_size@plt+0x3b3c4>
   42860:	add	r2, pc, r2
   42864:	add	r2, r2, #1872	; 0x750
   42868:	add	r2, r2, #12
   4286c:	str	r2, [sp]
   42870:	ldr	r2, [pc, #104]	; 428e0 <blkid_probe_get_size@plt+0x3b3c8>
   42874:	mov	r3, #62	; 0x3e
   42878:	add	r2, pc, r2
   4287c:	add	r1, pc, r1
   42880:	mov	r0, #0
   42884:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42888:	ldr	r3, [pc, #84]	; 428e4 <blkid_probe_get_size@plt+0x3b3cc>
   4288c:	ldr	r2, [pc, #84]	; 428e8 <blkid_probe_get_size@plt+0x3b3d0>
   42890:	add	r3, pc, r3
   42894:	add	r3, r3, #1872	; 0x750
   42898:	ldr	r1, [pc, #76]	; 428ec <blkid_probe_get_size@plt+0x3b3d4>
   4289c:	add	r3, r3, #12
   428a0:	str	r3, [sp]
   428a4:	mov	r0, r5
   428a8:	mov	r3, #63	; 0x3f
   428ac:	add	r2, pc, r2
   428b0:	add	r1, pc, r1
   428b4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   428b8:	mvn	r6, #21
   428bc:	b	427b8 <blkid_probe_get_size@plt+0x3b2a0>
   428c0:	bl	6fb4 <__stack_chk_fail@plt>
   428c4:	andeq	r5, r5, r4, lsr r4
   428c8:	andeq	r0, r0, ip, lsr r4
   428cc:	andeq	ip, r2, r8, asr #3
   428d0:	andeq	sp, r2, r4, lsl #18
   428d4:	andeq	sp, r2, ip, ror #17
   428d8:	andeq	ip, r2, r0, ror r1
   428dc:	andeq	sl, r2, r0, ror #26
   428e0:	muleq	r2, r4, r8
   428e4:	andeq	ip, r2, r0, asr #2
   428e8:	andeq	sp, r2, r0, ror #16
   428ec:	andeq	sp, r2, r4, ror r8
   428f0:	push	{r4, r5, r6, r7, lr}
   428f4:	mov	r6, r0
   428f8:	ldr	r4, [pc, #360]	; 42a68 <blkid_probe_get_size@plt+0x3b550>
   428fc:	sub	sp, sp, #12
   42900:	add	r4, pc, r4
   42904:	mov	r5, r1
   42908:	ldr	r3, [r4, #140]	; 0x8c
   4290c:	cmp	r3, #0
   42910:	beq	42954 <blkid_probe_get_size@plt+0x3b43c>
   42914:	mov	r2, #1
   42918:	bl	6a14 <getrandom@plt>
   4291c:	cmp	r0, #0
   42920:	ble	429e8 <blkid_probe_get_size@plt+0x3b4d0>
   42924:	mov	r3, #1
   42928:	cmp	r5, r0
   4292c:	str	r3, [r4, #140]	; 0x8c
   42930:	beq	42a60 <blkid_probe_get_size@plt+0x3b548>
   42934:	bls	42a30 <blkid_probe_get_size@plt+0x3b518>
   42938:	sub	r1, r5, r0
   4293c:	add	r0, r6, r0
   42940:	bl	3cacc <blkid_probe_get_size@plt+0x355b4>
   42944:	mvn	r0, #0
   42948:	add	sp, sp, #12
   4294c:	pop	{r4, r5, r6, r7, lr}
   42950:	b	2d734 <blkid_probe_get_size@plt+0x2621c>
   42954:	ldr	r0, [pc, #272]	; 42a6c <blkid_probe_get_size@plt+0x3b554>
   42958:	ldr	r1, [pc, #272]	; 42a70 <blkid_probe_get_size@plt+0x3b558>
   4295c:	add	r0, pc, r0
   42960:	bl	6ec4 <open64@plt>
   42964:	subs	r7, r0, #0
   42968:	bge	429ac <blkid_probe_get_size@plt+0x3b494>
   4296c:	bl	732c <__errno_location@plt>
   42970:	ldr	r3, [r0]
   42974:	cmp	r3, #2
   42978:	beq	429dc <blkid_probe_get_size@plt+0x3b4c4>
   4297c:	rsb	r4, r3, #0
   42980:	mov	r0, r7
   42984:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   42988:	cmp	r4, #0
   4298c:	bge	429a4 <blkid_probe_get_size@plt+0x3b48c>
   42990:	mov	r1, r5
   42994:	mov	r0, r6
   42998:	add	sp, sp, #12
   4299c:	pop	{r4, r5, r6, r7, lr}
   429a0:	b	3cacc <blkid_probe_get_size@plt+0x355b4>
   429a4:	add	sp, sp, #12
   429a8:	pop	{r4, r5, r6, r7, pc}
   429ac:	mov	r3, #1
   429b0:	mov	r2, r5
   429b4:	mov	r1, r6
   429b8:	bl	4272c <blkid_probe_get_size@plt+0x3b214>
   429bc:	cmp	r0, #0
   429c0:	blt	429dc <blkid_probe_get_size@plt+0x3b4c4>
   429c4:	cmp	r5, r0
   429c8:	mov	r0, r7
   429cc:	bne	429e0 <blkid_probe_get_size@plt+0x3b4c8>
   429d0:	add	sp, sp, #12
   429d4:	pop	{r4, r5, r6, r7, lr}
   429d8:	b	2d734 <blkid_probe_get_size@plt+0x2621c>
   429dc:	mov	r0, r7
   429e0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   429e4:	b	42990 <blkid_probe_get_size@plt+0x3b478>
   429e8:	beq	42a14 <blkid_probe_get_size@plt+0x3b4fc>
   429ec:	bl	732c <__errno_location@plt>
   429f0:	ldr	r3, [r0]
   429f4:	cmp	r3, #38	; 0x26
   429f8:	moveq	r3, #0
   429fc:	streq	r3, [r4, #140]	; 0x8c
   42a00:	beq	42954 <blkid_probe_get_size@plt+0x3b43c>
   42a04:	cmp	r3, #11
   42a08:	rsbne	r4, r3, #0
   42a0c:	mvnne	r7, #0
   42a10:	bne	42980 <blkid_probe_get_size@plt+0x3b468>
   42a14:	ldr	r3, [pc, #88]	; 42a74 <blkid_probe_get_size@plt+0x3b55c>
   42a18:	mov	r2, #1
   42a1c:	add	r3, pc, r3
   42a20:	mvn	r0, #0
   42a24:	str	r2, [r3, #140]	; 0x8c
   42a28:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   42a2c:	b	42990 <blkid_probe_get_size@plt+0x3b478>
   42a30:	ldr	r2, [pc, #64]	; 42a78 <blkid_probe_get_size@plt+0x3b560>
   42a34:	ldr	r1, [pc, #64]	; 42a7c <blkid_probe_get_size@plt+0x3b564>
   42a38:	add	r2, pc, r2
   42a3c:	add	r2, r2, #1888	; 0x760
   42a40:	add	r2, r2, #8
   42a44:	str	r2, [sp]
   42a48:	ldr	r2, [pc, #48]	; 42a80 <blkid_probe_get_size@plt+0x3b568>
   42a4c:	mov	r3, #147	; 0x93
   42a50:	add	r2, pc, r2
   42a54:	add	r1, pc, r1
   42a58:	mov	r0, #0
   42a5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42a60:	mvn	r0, #0
   42a64:	b	42948 <blkid_probe_get_size@plt+0x3b430>
   42a68:	muleq	r5, r4, r7
   42a6c:	andeq	sp, r2, r0, lsl r8
   42a70:	andeq	r0, r8, r0, lsl #2
   42a74:	andeq	r5, r5, r8, ror r6
   42a78:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   42a7c:	andeq	sp, r2, r8, lsl #14
   42a80:	strdeq	sp, [r2], -r0
   42a84:	ldr	r2, [pc, #204]	; 42b58 <blkid_probe_get_size@plt+0x3b640>
   42a88:	ldr	r3, [pc, #204]	; 42b5c <blkid_probe_get_size@plt+0x3b644>
   42a8c:	add	r2, pc, r2
   42a90:	push	{r4, r5, r6, r7, r8, lr}
   42a94:	mov	r1, #0
   42a98:	ldr	r7, [r2, r3]
   42a9c:	sub	sp, sp, #2064	; 0x810
   42aa0:	add	r4, sp, #2064	; 0x810
   42aa4:	ldr	r2, [r7]
   42aa8:	add	r8, sp, #12
   42aac:	mov	r6, r0
   42ab0:	mov	r5, r1
   42ab4:	str	r2, [sp, #2060]	; 0x80c
   42ab8:	mov	r2, #1
   42abc:	str	r0, [r4, #-2060]!	; 0xfffff7f4
   42ac0:	strh	r2, [sp, #8]
   42ac4:	strh	r1, [sp, #10]
   42ac8:	mov	r2, #0
   42acc:	mov	r1, #1
   42ad0:	mov	r0, r4
   42ad4:	bl	6da4 <poll@plt>
   42ad8:	cmp	r0, #0
   42adc:	blt	42b08 <blkid_probe_get_size@plt+0x3b5f0>
   42ae0:	beq	42b1c <blkid_probe_get_size@plt+0x3b604>
   42ae4:	mov	r2, #2048	; 0x800
   42ae8:	mov	r1, r8
   42aec:	mov	r0, r6
   42af0:	bl	6d74 <read@plt>
   42af4:	cmp	r0, #0
   42af8:	blt	42b38 <blkid_probe_get_size@plt+0x3b620>
   42afc:	beq	42b1c <blkid_probe_get_size@plt+0x3b604>
   42b00:	add	r5, r5, r0
   42b04:	b	42ac8 <blkid_probe_get_size@plt+0x3b5b0>
   42b08:	bl	732c <__errno_location@plt>
   42b0c:	ldr	r3, [r0]
   42b10:	cmp	r3, #4
   42b14:	beq	42ac8 <blkid_probe_get_size@plt+0x3b5b0>
   42b18:	rsb	r5, r3, #0
   42b1c:	ldr	r2, [sp, #2060]	; 0x80c
   42b20:	ldr	r3, [r7]
   42b24:	mov	r0, r5
   42b28:	cmp	r2, r3
   42b2c:	bne	42b54 <blkid_probe_get_size@plt+0x3b63c>
   42b30:	add	sp, sp, #2064	; 0x810
   42b34:	pop	{r4, r5, r6, r7, r8, pc}
   42b38:	bl	732c <__errno_location@plt>
   42b3c:	ldr	r3, [r0]
   42b40:	cmp	r3, #4
   42b44:	beq	42ac8 <blkid_probe_get_size@plt+0x3b5b0>
   42b48:	cmp	r3, #11
   42b4c:	bne	42b18 <blkid_probe_get_size@plt+0x3b600>
   42b50:	b	42b1c <blkid_probe_get_size@plt+0x3b604>
   42b54:	bl	6fb4 <__stack_chk_fail@plt>
   42b58:	ldrdeq	r5, [r5], -ip
   42b5c:	andeq	r0, r0, ip, lsr r4
   42b60:	ldr	r3, [pc, #200]	; 42c30 <blkid_probe_get_size@plt+0x3b718>
   42b64:	ldr	r2, [pc, #200]	; 42c34 <blkid_probe_get_size@plt+0x3b71c>
   42b68:	add	r3, pc, r3
   42b6c:	push	{r4, r5, lr}
   42b70:	sub	sp, sp, #412	; 0x19c
   42b74:	ldr	r5, [r3, r2]
   42b78:	add	r4, sp, #12
   42b7c:	mov	r0, r4
   42b80:	ldr	r3, [r5]
   42b84:	str	r3, [sp, #404]	; 0x194
   42b88:	bl	6aec <uname@plt>
   42b8c:	cmp	r0, #0
   42b90:	blt	42c00 <blkid_probe_get_size@plt+0x3b6e8>
   42b94:	ldrb	r3, [sp, #77]	; 0x4d
   42b98:	cmp	r3, #0
   42b9c:	bne	42bc4 <blkid_probe_get_size@plt+0x3b6ac>
   42ba0:	ldr	r2, [sp, #404]	; 0x194
   42ba4:	ldr	r3, [r5]
   42ba8:	cmp	r2, r3
   42bac:	bne	42c2c <blkid_probe_get_size@plt+0x3b714>
   42bb0:	ldr	r0, [pc, #128]	; 42c38 <blkid_probe_get_size@plt+0x3b720>
   42bb4:	add	r0, pc, r0
   42bb8:	add	sp, sp, #412	; 0x19c
   42bbc:	pop	{r4, r5, lr}
   42bc0:	b	74e8 <strdup@plt>
   42bc4:	ldr	r1, [pc, #112]	; 42c3c <blkid_probe_get_size@plt+0x3b724>
   42bc8:	add	r4, r4, #65	; 0x41
   42bcc:	mov	r0, r4
   42bd0:	add	r1, pc, r1
   42bd4:	bl	7314 <strcmp@plt>
   42bd8:	cmp	r0, #0
   42bdc:	beq	42ba0 <blkid_probe_get_size@plt+0x3b688>
   42be0:	mov	r0, r4
   42be4:	bl	74e8 <strdup@plt>
   42be8:	ldr	r2, [sp, #404]	; 0x194
   42bec:	ldr	r3, [r5]
   42bf0:	cmp	r2, r3
   42bf4:	bne	42c2c <blkid_probe_get_size@plt+0x3b714>
   42bf8:	add	sp, sp, #412	; 0x19c
   42bfc:	pop	{r4, r5, pc}
   42c00:	ldr	r2, [pc, #56]	; 42c40 <blkid_probe_get_size@plt+0x3b728>
   42c04:	ldr	r1, [pc, #56]	; 42c44 <blkid_probe_get_size@plt+0x3b72c>
   42c08:	add	r2, pc, r2
   42c0c:	add	r2, r2, #1920	; 0x780
   42c10:	str	r2, [sp]
   42c14:	ldr	r2, [pc, #44]	; 42c48 <blkid_probe_get_size@plt+0x3b730>
   42c18:	mov	r3, #39	; 0x27
   42c1c:	add	r2, pc, r2
   42c20:	add	r1, pc, r1
   42c24:	mov	r0, #0
   42c28:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42c2c:	bl	6fb4 <__stack_chk_fail@plt>
   42c30:	andeq	r5, r5, r0
   42c34:	andeq	r0, r0, ip, lsr r4
   42c38:	andeq	sp, r2, r8, ror #11
   42c3c:	ldrdeq	sp, [r2], -r8
   42c40:	andeq	fp, r2, r8, asr #27
   42c44:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   42c48:	andeq	sp, r2, r0, ror #10
   42c4c:	sub	r3, r0, #48	; 0x30
   42c50:	uxtb	r2, r3
   42c54:	cmp	r2, #9
   42c58:	bls	42c84 <blkid_probe_get_size@plt+0x3b76c>
   42c5c:	sub	r3, r0, #97	; 0x61
   42c60:	cmp	r3, #5
   42c64:	bls	42c7c <blkid_probe_get_size@plt+0x3b764>
   42c68:	sub	r3, r0, #65	; 0x41
   42c6c:	cmp	r3, #5
   42c70:	subls	r0, r0, #55	; 0x37
   42c74:	mvnhi	r0, #21
   42c78:	bx	lr
   42c7c:	sub	r0, r0, #87	; 0x57
   42c80:	bx	lr
   42c84:	mov	r0, r3
   42c88:	bx	lr
   42c8c:	push	{r4, r5, r6, lr}
   42c90:	mov	r4, r1
   42c94:	ldrb	r3, [r0, #39]	; 0x27
   42c98:	ldr	r6, [pc, #92]	; 42cfc <blkid_probe_get_size@plt+0x3b7e4>
   42c9c:	mov	r5, r0
   42ca0:	tst	r3, #4
   42ca4:	and	r3, r3, #3
   42ca8:	add	r6, pc, r6
   42cac:	add	r3, r6, r3, lsl #4
   42cb0:	ldrne	r2, [r0, #4]
   42cb4:	ldr	r3, [r3, #4]
   42cb8:	addeq	r2, r0, #4
   42cbc:	mul	r3, r3, r1
   42cc0:	ldr	r1, [r2, r3]
   42cc4:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   42cc8:	cmp	r4, r0
   42ccc:	bcs	42cf4 <blkid_probe_get_size@plt+0x3b7dc>
   42cd0:	ldrb	r3, [r5, #39]	; 0x27
   42cd4:	sub	r0, r4, r0
   42cd8:	tst	r3, #4
   42cdc:	andeq	r3, r3, #3
   42ce0:	ldrne	r3, [r5, #28]
   42ce4:	addeq	r6, r6, r3, lsl #4
   42ce8:	ldreq	r3, [r6, #12]
   42cec:	add	r0, r0, r3
   42cf0:	pop	{r4, r5, r6, pc}
   42cf4:	sub	r0, r4, r0
   42cf8:	pop	{r4, r5, r6, pc}
   42cfc:	andeq	r7, r4, r8, ror #12
   42d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42d04:	mov	r9, r0
   42d08:	ldrb	r0, [r0, #39]	; 0x27
   42d0c:	ldr	r3, [pc, #332]	; 42e60 <blkid_probe_get_size@plt+0x3b948>
   42d10:	mov	r6, r2
   42d14:	and	r2, r0, #3
   42d18:	add	r3, pc, r3
   42d1c:	tst	r0, #4
   42d20:	add	r3, r3, r2, lsl #4
   42d24:	ldrne	r4, [r9, #28]
   42d28:	ldr	r2, [r3, #4]
   42d2c:	ldreq	r4, [r3, #12]
   42d30:	ldrne	r3, [r9, #4]
   42d34:	addeq	r3, r9, #4
   42d38:	cmp	r1, r4
   42d3c:	sub	sp, sp, #12
   42d40:	mov	fp, r1
   42d44:	mul	r2, r2, r4
   42d48:	bcs	42e30 <blkid_probe_get_size@plt+0x3b918>
   42d4c:	add	r4, r3, r2
   42d50:	ldrb	r0, [r4, r1]
   42d54:	cmp	r0, #255	; 0xff
   42d58:	beq	42e08 <blkid_probe_get_size@plt+0x3b8f0>
   42d5c:	ldr	r7, [pc, #256]	; 42e64 <blkid_probe_get_size@plt+0x3b94c>
   42d60:	ldr	r5, [pc, #256]	; 42e68 <blkid_probe_get_size@plt+0x3b950>
   42d64:	add	r7, pc, r7
   42d68:	add	r5, pc, r5
   42d6c:	mov	sl, #0
   42d70:	add	r8, r9, #4
   42d74:	b	42da8 <blkid_probe_get_size@plt+0x3b890>
   42d78:	cmp	r2, #0
   42d7c:	andeq	r3, r3, #3
   42d80:	add	r0, fp, #1
   42d84:	addeq	r3, r5, r3, lsl #4
   42d88:	ldrne	r1, [r9, #28]
   42d8c:	ldreq	r1, [r3, #12]
   42d90:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   42d94:	add	sl, sl, #1
   42d98:	ldrb	r0, [r4, r1]
   42d9c:	mov	fp, r1
   42da0:	cmp	r0, #255	; 0xff
   42da4:	beq	42e08 <blkid_probe_get_size@plt+0x3b8f0>
   42da8:	cmp	r0, #252	; 0xfc
   42dac:	bhi	42e14 <blkid_probe_get_size@plt+0x3b8fc>
   42db0:	cmp	sl, r0
   42db4:	bhi	42e08 <blkid_probe_get_size@plt+0x3b8f0>
   42db8:	ldrb	r3, [r9, #39]	; 0x27
   42dbc:	and	r2, r3, #4
   42dc0:	bne	42d78 <blkid_probe_get_size@plt+0x3b860>
   42dc4:	and	r3, r3, #3
   42dc8:	cmp	r2, #0
   42dcc:	add	r3, r7, r3, lsl #4
   42dd0:	ldrne	r2, [r9, #4]
   42dd4:	ldr	r0, [r3, #4]
   42dd8:	ldr	ip, [r9]
   42ddc:	moveq	r2, r8
   42de0:	mul	r0, r0, fp
   42de4:	mov	r1, r6
   42de8:	ldr	r3, [ip, #4]
   42dec:	ldr	r0, [r2, r0]
   42df0:	blx	r3
   42df4:	cmp	r0, #0
   42df8:	beq	42e24 <blkid_probe_get_size@plt+0x3b90c>
   42dfc:	ldrb	r3, [r9, #39]	; 0x27
   42e00:	and	r2, r3, #4
   42e04:	b	42d78 <blkid_probe_get_size@plt+0x3b860>
   42e08:	mvn	r0, #0
   42e0c:	add	sp, sp, #12
   42e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42e14:	mov	r1, fp
   42e18:	mov	r0, r9
   42e1c:	bl	42c8c <blkid_probe_get_size@plt+0x3b774>
   42e20:	b	42db0 <blkid_probe_get_size@plt+0x3b898>
   42e24:	mov	r0, fp
   42e28:	add	sp, sp, #12
   42e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42e30:	ldr	r2, [pc, #52]	; 42e6c <blkid_probe_get_size@plt+0x3b954>
   42e34:	ldr	r1, [pc, #52]	; 42e70 <blkid_probe_get_size@plt+0x3b958>
   42e38:	add	r2, pc, r2
   42e3c:	add	r2, r2, #1936	; 0x790
   42e40:	add	r2, r2, #4
   42e44:	str	r2, [sp]
   42e48:	ldr	r2, [pc, #36]	; 42e74 <blkid_probe_get_size@plt+0x3b95c>
   42e4c:	ldr	r3, [pc, #36]	; 42e78 <blkid_probe_get_size@plt+0x3b960>
   42e50:	add	r2, pc, r2
   42e54:	add	r1, pc, r1
   42e58:	mov	r0, #0
   42e5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   42e60:	strdeq	r7, [r4], -r8
   42e64:	andeq	r7, r4, ip, lsr #11
   42e68:	andeq	r7, r4, r8, lsr #11
   42e6c:	muleq	r2, r8, fp
   42e70:	andeq	sp, r2, ip, asr r3
   42e74:	andeq	sl, r2, r0, ror #13
   42e78:	andeq	r0, r0, r4, lsr #9
   42e7c:	push	{r4, r5, r6, lr}
   42e80:	mov	r4, r0
   42e84:	mov	r6, r1
   42e88:	mov	r5, r2
   42e8c:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   42e90:	mov	r2, r6
   42e94:	mov	r1, r0
   42e98:	mov	r0, r4
   42e9c:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   42ea0:	cmn	r0, #1
   42ea4:	moveq	r4, #0
   42ea8:	streq	r4, [r5]
   42eac:	beq	42ef8 <blkid_probe_get_size@plt+0x3b9e0>
   42eb0:	ldrb	r3, [r4, #39]	; 0x27
   42eb4:	mov	r2, r0
   42eb8:	mov	r0, r4
   42ebc:	tst	r3, #4
   42ec0:	and	r1, r3, #3
   42ec4:	ldr	r3, [pc, #52]	; 42f00 <blkid_probe_get_size@plt+0x3b9e8>
   42ec8:	ldrne	ip, [r4, #4]
   42ecc:	add	r3, pc, r3
   42ed0:	add	r3, r3, r1, lsl #4
   42ed4:	mov	r1, r2
   42ed8:	ldr	r3, [r3, #4]
   42edc:	addeq	ip, r4, #4
   42ee0:	mul	r2, r3, r2
   42ee4:	add	lr, ip, r2
   42ee8:	ldr	r3, [ip, r2]
   42eec:	ldr	r4, [lr, #4]
   42ef0:	str	r3, [r5]
   42ef4:	bl	2c998 <blkid_probe_get_size@plt+0x25480>
   42ef8:	mov	r0, r4
   42efc:	pop	{r4, r5, r6, pc}
   42f00:	andeq	r7, r4, r4, asr #8
   42f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42f08:	mov	r7, r0
   42f0c:	ldr	r0, [pc, #564]	; 43148 <blkid_probe_get_size@plt+0x3bc30>
   42f10:	ldrb	sl, [r7, #39]	; 0x27
   42f14:	mov	r8, r2
   42f18:	add	r0, pc, r0
   42f1c:	and	r2, sl, #3
   42f20:	tst	sl, #4
   42f24:	add	r2, r0, r2, lsl #4
   42f28:	mov	r4, r1
   42f2c:	ldreq	r9, [r2, #12]
   42f30:	ldr	r1, [r2, #4]
   42f34:	ldrne	r9, [r7, #28]
   42f38:	ldr	r3, [pc, #524]	; 4314c <blkid_probe_get_size@plt+0x3bc34>
   42f3c:	sub	sp, sp, #12
   42f40:	ldrne	r2, [r7, #4]
   42f44:	ldr	fp, [pc, #516]	; 43150 <blkid_probe_get_size@plt+0x3bc38>
   42f48:	addeq	r2, r7, #4
   42f4c:	add	r3, pc, r3
   42f50:	mla	r9, r1, r9, r2
   42f54:	add	fp, pc, fp
   42f58:	str	r3, [sp, #4]
   42f5c:	mov	r6, #0
   42f60:	b	43020 <blkid_probe_get_size@plt+0x3bb08>
   42f64:	cmp	r5, #253	; 0xfd
   42f68:	beq	430f4 <blkid_probe_get_size@plt+0x3bbdc>
   42f6c:	cmp	r6, r5
   42f70:	movls	r5, r6
   42f74:	bls	42ff8 <blkid_probe_get_size@plt+0x3bae0>
   42f78:	cmn	r6, #1
   42f7c:	moveq	r6, #255	; 0xff
   42f80:	beq	42f90 <blkid_probe_get_size@plt+0x3ba78>
   42f84:	cmp	r6, #253	; 0xfd
   42f88:	movcs	r6, #253	; 0xfd
   42f8c:	uxtb	r6, r6
   42f90:	and	r2, sl, #3
   42f94:	tst	sl, #4
   42f98:	add	r3, fp, r2, lsl #4
   42f9c:	ldrne	r1, [r7, #28]
   42fa0:	ldr	r2, [r3, #4]
   42fa4:	ldreq	r1, [r3, #12]
   42fa8:	ldrne	r3, [r7, #4]
   42fac:	addeq	r3, r7, #4
   42fb0:	mla	r1, r2, r1, r3
   42fb4:	mov	r0, r7
   42fb8:	mvn	r3, #2
   42fbc:	mov	r2, r4
   42fc0:	strb	r6, [r1, r4]
   42fc4:	mov	r1, r8
   42fc8:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   42fcc:	mov	r3, r4
   42fd0:	mvn	r2, #3
   42fd4:	mov	r1, r8
   42fd8:	mov	r0, r7
   42fdc:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   42fe0:	mvn	r3, #3
   42fe4:	mvn	r2, #2
   42fe8:	mov	r1, r8
   42fec:	mov	r0, r7
   42ff0:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   42ff4:	ldrb	sl, [r7, #39]	; 0x27
   42ff8:	tst	sl, #4
   42ffc:	andeq	r2, sl, #3
   43000:	ldreq	r3, [sp, #4]
   43004:	add	r0, r4, #1
   43008:	addeq	r2, r3, r2, lsl #4
   4300c:	ldrne	r1, [r7, #28]
   43010:	ldreq	r1, [r2, #12]
   43014:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   43018:	add	r6, r5, #1
   4301c:	mov	r4, r1
   43020:	ldrb	r5, [r9, r4]
   43024:	cmp	r5, #254	; 0xfe
   43028:	bcc	42f64 <blkid_probe_get_size@plt+0x3ba4c>
   4302c:	beq	4310c <blkid_probe_get_size@plt+0x3bbf4>
   43030:	tst	sl, #4
   43034:	beq	4307c <blkid_probe_get_size@plt+0x3bb64>
   43038:	ldr	r2, [r7, #32]
   4303c:	cmp	r2, r4
   43040:	bls	430e4 <blkid_probe_get_size@plt+0x3bbcc>
   43044:	cmn	r6, #1
   43048:	str	r4, [r7, #32]
   4304c:	beq	430ec <blkid_probe_get_size@plt+0x3bbd4>
   43050:	cmp	r6, #253	; 0xfd
   43054:	movcs	r6, #253	; 0xfd
   43058:	uxtb	r6, r6
   4305c:	ldr	r3, [pc, #240]	; 43154 <blkid_probe_get_size@plt+0x3bc3c>
   43060:	and	r1, sl, #3
   43064:	add	r3, pc, r3
   43068:	add	r3, r3, r1, lsl #4
   4306c:	ldr	r2, [r7, #4]
   43070:	ldr	r1, [r7, #28]
   43074:	ldr	r0, [r3, #4]
   43078:	b	430a4 <blkid_probe_get_size@plt+0x3bb8c>
   4307c:	cmn	r6, #1
   43080:	moveq	r6, #255	; 0xff
   43084:	bne	430d4 <blkid_probe_get_size@plt+0x3bbbc>
   43088:	ldr	r3, [pc, #200]	; 43158 <blkid_probe_get_size@plt+0x3bc40>
   4308c:	and	r1, sl, #3
   43090:	add	r3, pc, r3
   43094:	add	r3, r3, r1, lsl #4
   43098:	add	r2, r7, #4
   4309c:	ldr	r0, [r3, #4]
   430a0:	ldr	r1, [r3, #12]
   430a4:	mla	r1, r0, r1, r2
   430a8:	mov	r3, r4
   430ac:	mov	r0, r7
   430b0:	strb	r6, [r1, r4]
   430b4:	mvn	r2, #3
   430b8:	mov	r1, r8
   430bc:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   430c0:	cmp	r5, #254	; 0xfe
   430c4:	movne	r0, #0
   430c8:	beq	43128 <blkid_probe_get_size@plt+0x3bc10>
   430cc:	add	sp, sp, #12
   430d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   430d4:	cmp	r6, #253	; 0xfd
   430d8:	movcs	r6, #253	; 0xfd
   430dc:	uxtb	r6, r6
   430e0:	b	43088 <blkid_probe_get_size@plt+0x3bb70>
   430e4:	cmn	r6, #1
   430e8:	bne	43050 <blkid_probe_get_size@plt+0x3bb38>
   430ec:	mov	r6, #255	; 0xff
   430f0:	b	4305c <blkid_probe_get_size@plt+0x3bb44>
   430f4:	mov	r1, r4
   430f8:	mov	r0, r7
   430fc:	bl	42c8c <blkid_probe_get_size@plt+0x3b774>
   43100:	ldrb	sl, [r7, #39]	; 0x27
   43104:	mov	r5, r0
   43108:	b	42f6c <blkid_probe_get_size@plt+0x3ba54>
   4310c:	mvn	r3, #2
   43110:	mov	r2, r4
   43114:	mov	r1, r8
   43118:	mov	r0, r7
   4311c:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   43120:	ldrb	sl, [r7, #39]	; 0x27
   43124:	b	43030 <blkid_probe_get_size@plt+0x3bb18>
   43128:	mov	r0, r7
   4312c:	mov	r1, r8
   43130:	mvn	r3, #3
   43134:	mvn	r2, #2
   43138:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   4313c:	mov	r0, #1
   43140:	add	sp, sp, #12
   43144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43148:	strdeq	r7, [r4], -r8
   4314c:	andeq	r7, r4, r4, asr #7
   43150:			; <UNDEFINED> instruction: 0x000473bc
   43154:	andeq	r7, r4, ip, lsr #5
   43158:	andeq	r7, r4, r0, lsl #5
   4315c:	ldr	r3, [pc, #1332]	; 43698 <blkid_probe_get_size@plt+0x3c180>
   43160:	ldr	r2, [pc, #1332]	; 4369c <blkid_probe_get_size@plt+0x3c184>
   43164:	add	r3, pc, r3
   43168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4316c:	sub	sp, sp, #68	; 0x44
   43170:	ldr	r5, [r3, r2]
   43174:	subs	r4, r0, #0
   43178:	ldr	r3, [r5]
   4317c:	str	r3, [sp, #60]	; 0x3c
   43180:	beq	4339c <blkid_probe_get_size@plt+0x3be84>
   43184:	ldrb	r3, [r4, #39]	; 0x27
   43188:	ands	r0, r3, #4
   4318c:	lsreq	r2, r3, #3
   43190:	ldrne	r2, [r4, #24]
   43194:	andeq	r2, r2, #7
   43198:	adds	r1, r1, r2
   4319c:	and	lr, r3, #3
   431a0:	bcs	43394 <blkid_probe_get_size@plt+0x3be7c>
   431a4:	lsr	r3, r3, #2
   431a8:	ands	r3, r3, #1
   431ac:	beq	43210 <blkid_probe_get_size@plt+0x3bcf8>
   431b0:	lsr	r2, r1, #2
   431b4:	adds	r1, r2, r1
   431b8:	bcs	43394 <blkid_probe_get_size@plt+0x3be7c>
   431bc:	ldr	ip, [pc, #1244]	; 436a0 <blkid_probe_get_size@plt+0x3c188>
   431c0:	add	ip, pc, ip
   431c4:	add	ip, ip, lr, lsl #4
   431c8:	ldr	r7, [ip, #4]
   431cc:	add	r8, r7, #1
   431d0:	umull	r2, r3, r1, r8
   431d4:	adds	r6, r3, #0
   431d8:	movne	r6, #1
   431dc:	cmp	r6, #0
   431e0:	bne	43394 <blkid_probe_get_size@plt+0x3be7c>
   431e4:	cmp	r0, #0
   431e8:	bne	43230 <blkid_probe_get_size@plt+0x3bd18>
   431ec:	ldr	r9, [ip, #12]
   431f0:	cmp	r1, r9
   431f4:	bhi	433c8 <blkid_probe_get_size@plt+0x3beb0>
   431f8:	ldr	r2, [sp, #60]	; 0x3c
   431fc:	ldr	r3, [r5]
   43200:	cmp	r2, r3
   43204:	bne	43678 <blkid_probe_get_size@plt+0x3c160>
   43208:	add	sp, sp, #68	; 0x44
   4320c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43210:	ldr	r2, [pc, #1164]	; 436a4 <blkid_probe_get_size@plt+0x3c18c>
   43214:	add	r2, pc, r2
   43218:	add	r2, r2, lr, lsl #4
   4321c:	ldr	r2, [r2, #12]
   43220:	cmp	r2, r1
   43224:	bcc	431b0 <blkid_probe_get_size@plt+0x3bc98>
   43228:	mov	r0, r3
   4322c:	b	431f8 <blkid_probe_get_size@plt+0x3bce0>
   43230:	ldr	r9, [r4, #28]
   43234:	cmp	r1, r9
   43238:	movls	r0, r6
   4323c:	bls	431f8 <blkid_probe_get_size@plt+0x3bce0>
   43240:	mul	r1, r1, r8
   43244:	ldr	r0, [r4, #4]
   43248:	cmp	r1, #70	; 0x46
   4324c:	movcc	r1, #70	; 0x46
   43250:	sub	r1, r1, #1
   43254:	mov	fp, #1
   43258:	clz	r3, r1
   4325c:	rsb	r3, r3, #32
   43260:	lsl	fp, fp, r3
   43264:	mov	r1, fp
   43268:	bl	6e94 <realloc@plt>
   4326c:	subs	sl, r0, #0
   43270:	beq	43394 <blkid_probe_get_size@plt+0x3be7c>
   43274:	ldrb	r3, [r4, #39]	; 0x27
   43278:	lsr	r3, r3, #2
   4327c:	ands	r3, r3, #1
   43280:	beq	435f0 <blkid_probe_get_size@plt+0x3c0d8>
   43284:	ldr	r3, [pc, #1052]	; 436a8 <blkid_probe_get_size@plt+0x3c190>
   43288:	mov	r1, #16
   4328c:	add	r3, pc, r3
   43290:	add	r0, r3, #2048	; 0x800
   43294:	add	r0, r0, #12
   43298:	str	r3, [sp, #12]
   4329c:	bl	428f0 <blkid_probe_get_size@plt+0x3b3d8>
   432a0:	ldr	r3, [sp, #12]
   432a4:	mov	r2, #1
   432a8:	strb	r2, [r3, #2058]	; 0x80a
   432ac:	ldr	ip, [pc, #1016]	; 436ac <blkid_probe_get_size@plt+0x3c194>
   432b0:	add	ip, pc, ip
   432b4:	add	ip, ip, #2048	; 0x800
   432b8:	add	ip, ip, #12
   432bc:	ldm	ip!, {r0, r1, r2, r3}
   432c0:	str	sl, [r4, #4]
   432c4:	str	r3, [r4, #20]
   432c8:	ldrb	r3, [r4, #39]	; 0x27
   432cc:	str	r0, [r4, #8]
   432d0:	str	r1, [r4, #12]
   432d4:	orr	r3, r3, #4
   432d8:	str	r2, [r4, #16]
   432dc:	strb	r3, [r4, #39]	; 0x27
   432e0:	mov	r0, fp
   432e4:	mov	r1, r8
   432e8:	bl	63b44 <blkid_probe_get_size@plt+0x5c62c>
   432ec:	ldrb	r3, [r4, #39]	; 0x27
   432f0:	mul	r2, r9, r7
   432f4:	tst	r3, #4
   432f8:	and	r3, r3, #3
   432fc:	str	r0, [r4, #28]
   43300:	bne	433d4 <blkid_probe_get_size@plt+0x3bebc>
   43304:	ldr	r1, [pc, #932]	; 436b0 <blkid_probe_get_size@plt+0x3c198>
   43308:	add	r0, r4, #4
   4330c:	add	r1, pc, r1
   43310:	add	r3, r1, r3, lsl #4
   43314:	cmp	r9, #0
   43318:	ldr	r1, [r3, #4]
   4331c:	ldr	r3, [r3, #12]
   43320:	mla	r8, r1, r3, r0
   43324:	beq	435d4 <blkid_probe_get_size@plt+0x3c0bc>
   43328:	ldrb	r3, [sl, r2]
   4332c:	add	sl, sl, r2
   43330:	cmp	r3, #254	; 0xfe
   43334:	subne	r1, r8, #1
   43338:	movne	r2, #0
   4333c:	beq	43364 <blkid_probe_get_size@plt+0x3be4c>
   43340:	cmp	r3, #255	; 0xff
   43344:	add	r2, r2, #1
   43348:	movne	r3, #254	; 0xfe
   4334c:	cmp	r2, r9
   43350:	strb	r3, [r1, #1]!
   43354:	bcs	435ac <blkid_probe_get_size@plt+0x3c094>
   43358:	ldrb	r3, [sl, #1]!
   4335c:	cmp	r3, #254	; 0xfe
   43360:	bne	43340 <blkid_probe_get_size@plt+0x3be28>
   43364:	ldr	r2, [pc, #840]	; 436b4 <blkid_probe_get_size@plt+0x3c19c>
   43368:	ldr	r1, [pc, #840]	; 436b8 <blkid_probe_get_size@plt+0x3c1a0>
   4336c:	add	r2, pc, r2
   43370:	add	r2, r2, #1952	; 0x7a0
   43374:	add	r2, r2, #8
   43378:	str	r2, [sp]
   4337c:	ldr	r2, [pc, #824]	; 436bc <blkid_probe_get_size@plt+0x3c1a4>
   43380:	ldr	r3, [pc, #824]	; 436c0 <blkid_probe_get_size@plt+0x3c1a8>
   43384:	add	r2, pc, r2
   43388:	add	r1, pc, r1
   4338c:	mov	r0, #0
   43390:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43394:	mvn	r0, #11
   43398:	b	431f8 <blkid_probe_get_size@plt+0x3bce0>
   4339c:	ldr	r2, [pc, #800]	; 436c4 <blkid_probe_get_size@plt+0x3c1ac>
   433a0:	ldr	r1, [pc, #800]	; 436c8 <blkid_probe_get_size@plt+0x3c1b0>
   433a4:	add	r2, pc, r2
   433a8:	add	r2, r2, #1952	; 0x7a0
   433ac:	add	r2, r2, #8
   433b0:	str	r2, [sp]
   433b4:	ldr	r2, [pc, #784]	; 436cc <blkid_probe_get_size@plt+0x3c1b4>
   433b8:	ldr	r3, [pc, #784]	; 436d0 <blkid_probe_get_size@plt+0x3c1b8>
   433bc:	add	r2, pc, r2
   433c0:	add	r1, pc, r1
   433c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   433c8:	mul	r1, r1, r8
   433cc:	mov	r0, r6
   433d0:	b	43248 <blkid_probe_get_size@plt+0x3bd30>
   433d4:	ldr	r1, [pc, #760]	; 436d4 <blkid_probe_get_size@plt+0x3c1bc>
   433d8:	cmp	r9, #0
   433dc:	add	r1, pc, r1
   433e0:	add	r3, r1, r3, lsl #4
   433e4:	ldr	r1, [r3, #4]
   433e8:	mla	r8, r1, r0, sl
   433ec:	bne	43328 <blkid_probe_get_size@plt+0x3be10>
   433f0:	ldr	r2, [r4, #28]
   433f4:	add	sl, r8, r9
   433f8:	sub	r2, r2, r9
   433fc:	mul	r3, r2, r7
   43400:	cmp	r3, #0
   43404:	beq	43430 <blkid_probe_get_size@plt+0x3bf18>
   43408:	ldr	r0, [r4, #4]
   4340c:	mla	r0, r1, r9, r0
   43410:	mov	r2, r3
   43414:	mov	r1, #0
   43418:	bl	6c84 <memset@plt>
   4341c:	ldrb	r3, [r4, #39]	; 0x27
   43420:	tst	r3, #4
   43424:	beq	4367c <blkid_probe_get_size@plt+0x3c164>
   43428:	ldr	r2, [r4, #28]
   4342c:	sub	r2, r2, r9
   43430:	mov	r0, sl
   43434:	mov	r1, #255	; 0xff
   43438:	bl	6c84 <memset@plt>
   4343c:	cmp	r9, #0
   43440:	ldrb	r3, [r4, #39]	; 0x27
   43444:	beq	4366c <blkid_probe_get_size@plt+0x3c154>
   43448:	ldr	r2, [pc, #648]	; 436d8 <blkid_probe_get_size@plt+0x3c1c0>
   4344c:	sub	r9, r9, #1
   43450:	add	r2, pc, r2
   43454:	str	r2, [sp, #12]
   43458:	ldr	r2, [pc, #636]	; 436dc <blkid_probe_get_size@plt+0x3c1c4>
   4345c:	add	fp, r8, r9
   43460:	add	r2, pc, r2
   43464:	str	r2, [sp, #20]
   43468:	sub	r8, r8, #1
   4346c:	and	r2, r3, #4
   43470:	mov	r9, #0
   43474:	str	r5, [sp, #16]
   43478:	b	434a0 <blkid_probe_get_size@plt+0x3bf88>
   4347c:	mov	r3, #0
   43480:	strb	r3, [r8]
   43484:	ldrb	r3, [r4, #39]	; 0x27
   43488:	add	r6, r6, #1
   4348c:	and	r2, r3, #4
   43490:	uxtb	r1, r2
   43494:	cmp	fp, r8
   43498:	add	r9, r9, #1
   4349c:	beq	4355c <blkid_probe_get_size@plt+0x3c044>
   434a0:	ldrb	r0, [r8, #1]!
   434a4:	uxtb	r1, r2
   434a8:	cmp	r0, #254	; 0xfe
   434ac:	bne	43494 <blkid_probe_get_size@plt+0x3bf7c>
   434b0:	cmp	r1, #0
   434b4:	and	r3, r3, #3
   434b8:	ldr	r1, [sp, #12]
   434bc:	ldrne	r2, [r4, #4]
   434c0:	add	r3, r1, r3, lsl #4
   434c4:	addeq	r2, r4, #4
   434c8:	ldr	r3, [r3, #4]
   434cc:	mov	r0, r4
   434d0:	mul	r3, r3, r9
   434d4:	ldr	r1, [r2, r3]
   434d8:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   434dc:	cmp	r9, r0
   434e0:	mov	r5, r0
   434e4:	beq	4347c <blkid_probe_get_size@plt+0x3bf64>
   434e8:	mvn	r3, #0
   434ec:	add	sl, sp, #28
   434f0:	mov	r0, r4
   434f4:	strb	r3, [r8]
   434f8:	mov	r1, sl
   434fc:	mvn	r3, #3
   43500:	mov	r2, r9
   43504:	bl	2c87c <blkid_probe_get_size@plt+0x25364>
   43508:	ldrb	r3, [r4, #39]	; 0x27
   4350c:	tst	r3, #4
   43510:	addeq	r0, r4, #4
   43514:	ldrne	r0, [r4, #4]
   43518:	cmp	r7, #0
   4351c:	moveq	r1, r5
   43520:	bne	43644 <blkid_probe_get_size@plt+0x3c12c>
   43524:	mov	r2, sl
   43528:	mov	r0, r4
   4352c:	bl	42f04 <blkid_probe_get_size@plt+0x3b9ec>
   43530:	add	r6, r6, #1
   43534:	cmp	r0, #0
   43538:	ldrbeq	r3, [r4, #39]	; 0x27
   4353c:	andeq	r2, r3, #4
   43540:	uxtbeq	r1, r2
   43544:	beq	43494 <blkid_probe_get_size@plt+0x3bf7c>
   43548:	ldr	r1, [sp, #28]
   4354c:	mov	r0, r4
   43550:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43554:	mov	r1, r0
   43558:	b	43524 <blkid_probe_get_size@plt+0x3c00c>
   4355c:	ldr	r5, [sp, #16]
   43560:	cmp	r1, #0
   43564:	lsreq	r3, r3, #3
   43568:	ldrne	r3, [r4, #24]
   4356c:	andeq	r3, r3, #7
   43570:	cmp	r6, r3
   43574:	moveq	r0, #1
   43578:	beq	431f8 <blkid_probe_get_size@plt+0x3bce0>
   4357c:	ldr	r2, [pc, #348]	; 436e0 <blkid_probe_get_size@plt+0x3c1c8>
   43580:	ldr	r1, [pc, #348]	; 436e4 <blkid_probe_get_size@plt+0x3c1cc>
   43584:	add	r2, pc, r2
   43588:	add	r2, r2, #1952	; 0x7a0
   4358c:	add	r2, r2, #8
   43590:	str	r2, [sp]
   43594:	ldr	r2, [pc, #332]	; 436e8 <blkid_probe_get_size@plt+0x3c1d0>
   43598:	ldr	r3, [pc, #332]	; 436ec <blkid_probe_get_size@plt+0x3c1d4>
   4359c:	add	r2, pc, r2
   435a0:	add	r1, pc, r1
   435a4:	mov	r0, #0
   435a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   435ac:	ldrb	r2, [r4, #39]	; 0x27
   435b0:	ldr	r3, [pc, #312]	; 436f0 <blkid_probe_get_size@plt+0x3c1d8>
   435b4:	and	r1, r2, #3
   435b8:	add	r3, pc, r3
   435bc:	add	r3, r3, r1, lsl #4
   435c0:	tst	r2, #4
   435c4:	ldr	r1, [r3, #4]
   435c8:	bne	433f0 <blkid_probe_get_size@plt+0x3bed8>
   435cc:	ldr	r3, [r3, #12]
   435d0:	add	r0, r4, #4
   435d4:	sub	r2, r3, r9
   435d8:	add	sl, r8, r9
   435dc:	mul	r3, r2, r7
   435e0:	cmp	r3, #0
   435e4:	beq	43430 <blkid_probe_get_size@plt+0x3bf18>
   435e8:	mla	r0, r1, r9, r0
   435ec:	b	43410 <blkid_probe_get_size@plt+0x3bef8>
   435f0:	mul	r2, r9, r8
   435f4:	add	r1, r4, #4
   435f8:	str	r3, [sp, #12]
   435fc:	bl	71e8 <memcpy@plt>
   43600:	ldr	r0, [pc, #236]	; 436f4 <blkid_probe_get_size@plt+0x3c1dc>
   43604:	ldrb	r2, [r4, #39]	; 0x27
   43608:	add	r0, pc, r0
   4360c:	ldr	r3, [sp, #12]
   43610:	bic	r1, r2, #56	; 0x38
   43614:	ldrb	r0, [r0, #2058]	; 0x80a
   43618:	lsl	ip, r1, #29
   4361c:	str	r3, [r4, #32]
   43620:	lsr	r3, r2, #3
   43624:	eor	r2, r0, #1
   43628:	orr	r2, r2, ip, lsr #31
   4362c:	and	r3, r3, #7
   43630:	tst	r2, #255	; 0xff
   43634:	str	r3, [r4, #24]
   43638:	strb	r1, [r4, #39]	; 0x27
   4363c:	beq	432ac <blkid_probe_get_size@plt+0x3bd94>
   43640:	b	43284 <blkid_probe_get_size@plt+0x3bd6c>
   43644:	ldr	r1, [sp, #20]
   43648:	and	r3, r3, #3
   4364c:	mov	r2, r7
   43650:	add	r3, r1, r3, lsl #4
   43654:	mov	r1, #0
   43658:	ldr	r3, [r3, #4]
   4365c:	mla	r0, r3, r9, r0
   43660:	bl	6c84 <memset@plt>
   43664:	mov	r1, r5
   43668:	b	43524 <blkid_probe_get_size@plt+0x3c00c>
   4366c:	mov	r6, r9
   43670:	and	r1, r3, #4
   43674:	b	43560 <blkid_probe_get_size@plt+0x3c048>
   43678:	bl	6fb4 <__stack_chk_fail@plt>
   4367c:	ldr	r2, [pc, #116]	; 436f8 <blkid_probe_get_size@plt+0x3c1e0>
   43680:	and	r3, r3, #3
   43684:	add	r2, pc, r2
   43688:	add	r3, r2, r3, lsl #4
   4368c:	ldr	r2, [r3, #12]
   43690:	sub	r2, r2, r9
   43694:	b	43430 <blkid_probe_get_size@plt+0x3bf18>
   43698:	andeq	r4, r5, r4, lsl #20
   4369c:	andeq	r0, r0, ip, lsr r4
   436a0:	andeq	r7, r4, r0, asr r1
   436a4:	strdeq	r7, [r4], -ip
   436a8:			; <UNDEFINED> instruction: 0x000553b0
   436ac:	andeq	r5, r5, ip, lsl #7
   436b0:	andeq	r7, r4, r4
   436b4:	andeq	fp, r2, r4, ror #12
   436b8:	andeq	ip, r2, ip, lsr lr
   436bc:	andeq	sl, r2, ip, lsr #3
   436c0:	andeq	r0, r0, r4, ror #8
   436c4:	andeq	fp, r2, ip, lsr #12
   436c8:	andeq	r5, r2, ip, ror r3
   436cc:	andeq	sl, r2, r4, ror r1
   436d0:	andeq	r0, r0, pc, lsl r4
   436d4:	andeq	r6, r4, r4, lsr pc
   436d8:	andeq	r6, r4, r0, asr #29
   436dc:			; <UNDEFINED> instruction: 0x00046eb0
   436e0:	andeq	fp, r2, ip, asr #8
   436e4:	andeq	ip, r2, r4, asr #24
   436e8:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   436ec:	muleq	r0, r6, r4
   436f0:	andeq	r6, r4, r8, asr sp
   436f4:	andeq	r5, r5, r4, lsr r0
   436f8:	andeq	r6, r4, ip, lsl #25
   436fc:	push	{r4, r5, r6, lr}
   43700:	mov	r5, r1
   43704:	ldrb	r1, [r0, #39]	; 0x27
   43708:	mov	r6, r2
   4370c:	sub	sp, sp, #8
   43710:	ands	r2, r1, #4
   43714:	mov	r4, r0
   43718:	beq	43830 <blkid_probe_get_size@plt+0x3c318>
   4371c:	ldr	r0, [r0, #28]
   43720:	cmp	r5, r0
   43724:	bcs	4384c <blkid_probe_get_size@plt+0x3c334>
   43728:	cmp	r3, #0
   4372c:	bne	43888 <blkid_probe_get_size@plt+0x3c370>
   43730:	cmp	r2, #0
   43734:	bne	4387c <blkid_probe_get_size@plt+0x3c364>
   43738:	ldr	r0, [pc, #528]	; 43950 <blkid_probe_get_size@plt+0x3c438>
   4373c:	and	r2, r1, #3
   43740:	add	r0, pc, r0
   43744:	add	r2, r0, r2, lsl #4
   43748:	lsr	r3, r1, #3
   4374c:	ldr	r2, [r2, #12]
   43750:	and	r3, r3, #7
   43754:	cmp	r2, r3
   43758:	bls	438c0 <blkid_probe_get_size@plt+0x3c3a8>
   4375c:	and	r1, r1, #3
   43760:	cmp	r1, #1
   43764:	bne	437d4 <blkid_probe_get_size@plt+0x3c2bc>
   43768:	mvn	r3, #0
   4376c:	str	r3, [r6, #8]
   43770:	ldr	r3, [r4, #48]	; 0x30
   43774:	str	r3, [r6, #12]
   43778:	ldr	r3, [r4, #48]	; 0x30
   4377c:	cmn	r3, #1
   43780:	beq	437c0 <blkid_probe_get_size@plt+0x3c2a8>
   43784:	ldrb	r1, [r4, #39]	; 0x27
   43788:	ldr	r2, [pc, #452]	; 43954 <blkid_probe_get_size@plt+0x3c43c>
   4378c:	tst	r1, #4
   43790:	and	r1, r1, #3
   43794:	add	r2, pc, r2
   43798:	add	r1, r2, r1, lsl #4
   4379c:	ldrne	r0, [r4, #4]
   437a0:	ldr	r2, [r1, #4]
   437a4:	addeq	r0, r4, #4
   437a8:	mla	r3, r2, r3, r0
   437ac:	ldr	r2, [r3, #8]
   437b0:	cmn	r2, #1
   437b4:	mvneq	r2, #3
   437b8:	streq	r2, [r3, #8]
   437bc:	bne	43920 <blkid_probe_get_size@plt+0x3c408>
   437c0:	ldr	r2, [r4, #44]	; 0x2c
   437c4:	mvn	r3, #3
   437c8:	cmn	r2, #1
   437cc:	str	r3, [r4, #48]	; 0x30
   437d0:	streq	r3, [r4, #44]	; 0x2c
   437d4:	mov	r2, r6
   437d8:	mov	r1, r5
   437dc:	mov	r0, r4
   437e0:	bl	42f04 <blkid_probe_get_size@plt+0x3b9ec>
   437e4:	cmp	r0, #0
   437e8:	bne	438f0 <blkid_probe_get_size@plt+0x3c3d8>
   437ec:	ldrb	r3, [r4, #39]	; 0x27
   437f0:	mov	r0, #1
   437f4:	tst	r3, #4
   437f8:	lsreq	r2, r3, #3
   437fc:	addeq	r2, r2, #1
   43800:	ldrne	r3, [r4, #24]
   43804:	andeq	r2, r2, #7
   43808:	biceq	r3, r3, #56	; 0x38
   4380c:	addne	r3, r3, #1
   43810:	orreq	r3, r3, r2, lsl #3
   43814:	strbeq	r3, [r4, #39]	; 0x27
   43818:	strne	r3, [r4, #24]
   4381c:	ldrb	r3, [r4, #39]	; 0x27
   43820:	orr	r3, r3, #128	; 0x80
   43824:	strb	r3, [r4, #39]	; 0x27
   43828:	add	sp, sp, #8
   4382c:	pop	{r4, r5, r6, pc}
   43830:	ldr	r0, [pc, #288]	; 43958 <blkid_probe_get_size@plt+0x3c440>
   43834:	and	ip, r1, #3
   43838:	add	r0, pc, r0
   4383c:	add	r0, r0, ip, lsl #4
   43840:	ldr	r0, [r0, #12]
   43844:	cmp	r5, r0
   43848:	bcc	43728 <blkid_probe_get_size@plt+0x3c210>
   4384c:	ldr	r2, [pc, #264]	; 4395c <blkid_probe_get_size@plt+0x3c444>
   43850:	ldr	r1, [pc, #264]	; 43960 <blkid_probe_get_size@plt+0x3c448>
   43854:	add	r2, pc, r2
   43858:	add	r2, r2, #1968	; 0x7b0
   4385c:	add	r2, r2, #8
   43860:	str	r2, [sp]
   43864:	ldr	r2, [pc, #248]	; 43964 <blkid_probe_get_size@plt+0x3c44c>
   43868:	ldr	r3, [pc, #248]	; 43968 <blkid_probe_get_size@plt+0x3c450>
   4386c:	add	r2, pc, r2
   43870:	add	r1, pc, r1
   43874:	mov	r0, #0
   43878:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4387c:	ldr	r3, [r4, #24]
   43880:	ldr	r2, [r4, #28]
   43884:	b	43754 <blkid_probe_get_size@plt+0x3c23c>
   43888:	mov	r1, #1
   4388c:	mov	r0, r4
   43890:	bl	4315c <blkid_probe_get_size@plt+0x3bc44>
   43894:	cmp	r0, #0
   43898:	blt	43828 <blkid_probe_get_size@plt+0x3c310>
   4389c:	bne	438ac <blkid_probe_get_size@plt+0x3c394>
   438a0:	ldrb	r1, [r4, #39]	; 0x27
   438a4:	and	r2, r1, #4
   438a8:	b	43730 <blkid_probe_get_size@plt+0x3c218>
   438ac:	ldr	r1, [r6]
   438b0:	mov	r0, r4
   438b4:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   438b8:	mov	r5, r0
   438bc:	b	438a0 <blkid_probe_get_size@plt+0x3c388>
   438c0:	ldr	r2, [pc, #164]	; 4396c <blkid_probe_get_size@plt+0x3c454>
   438c4:	ldr	r1, [pc, #164]	; 43970 <blkid_probe_get_size@plt+0x3c458>
   438c8:	add	r2, pc, r2
   438cc:	add	r2, r2, #1968	; 0x7b0
   438d0:	add	r2, r2, #8
   438d4:	str	r2, [sp]
   438d8:	ldr	r2, [pc, #148]	; 43974 <blkid_probe_get_size@plt+0x3c45c>
   438dc:	ldr	r3, [pc, #148]	; 43978 <blkid_probe_get_size@plt+0x3c460>
   438e0:	add	r2, pc, r2
   438e4:	add	r1, pc, r1
   438e8:	mov	r0, #0
   438ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   438f0:	ldr	r2, [pc, #132]	; 4397c <blkid_probe_get_size@plt+0x3c464>
   438f4:	ldr	r1, [pc, #132]	; 43980 <blkid_probe_get_size@plt+0x3c468>
   438f8:	add	r2, pc, r2
   438fc:	add	r2, r2, #1968	; 0x7b0
   43900:	add	r2, r2, #8
   43904:	str	r2, [sp]
   43908:	ldr	r2, [pc, #116]	; 43984 <blkid_probe_get_size@plt+0x3c46c>
   4390c:	ldr	r3, [pc, #116]	; 43988 <blkid_probe_get_size@plt+0x3c470>
   43910:	add	r2, pc, r2
   43914:	add	r1, pc, r1
   43918:	mov	r0, #0
   4391c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43920:	ldr	r2, [pc, #100]	; 4398c <blkid_probe_get_size@plt+0x3c474>
   43924:	ldr	r1, [pc, #100]	; 43990 <blkid_probe_get_size@plt+0x3c478>
   43928:	add	r2, pc, r2
   4392c:	add	r2, r2, #1968	; 0x7b0
   43930:	add	r2, r2, #8
   43934:	str	r2, [sp]
   43938:	ldr	r2, [pc, #84]	; 43994 <blkid_probe_get_size@plt+0x3c47c>
   4393c:	ldr	r3, [pc, #84]	; 43998 <blkid_probe_get_size@plt+0x3c480>
   43940:	add	r2, pc, r2
   43944:	add	r1, pc, r1
   43948:	mov	r0, #0
   4394c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43950:	ldrdeq	r6, [r4], -r0
   43954:	andeq	r6, r4, ip, ror fp
   43958:	ldrdeq	r6, [r4], -r8
   4395c:	andeq	fp, r2, ip, ror r1
   43960:	andeq	ip, r2, r0, asr #18
   43964:	andeq	r9, r2, r4, asr #25
   43968:	andeq	r0, r0, r2, ror #7
   4396c:	andeq	fp, r2, r8, lsl #2
   43970:	andeq	ip, r2, ip, lsl r9
   43974:	andeq	r9, r2, r0, asr ip
   43978:	andeq	r0, r0, sp, ror #7
   4397c:	ldrdeq	fp, [r2], -r8
   43980:	andeq	ip, r2, ip, lsr #18
   43984:	andeq	r9, r2, r0, lsr #24
   43988:	andeq	r0, r0, r2, lsl #8
   4398c:	andeq	fp, r2, r8, lsr #1
   43990:	ldrdeq	ip, [r2], -r8
   43994:	strdeq	r9, [r2], -r0
   43998:	strdeq	r0, [r0], -r9
   4399c:	ldr	r2, [pc, #44]	; 439d0 <blkid_probe_get_size@plt+0x3c4b8>
   439a0:	push	{lr}		; (str lr, [sp, #-4]!)
   439a4:	add	r2, pc, r2
   439a8:	sub	sp, sp, #12
   439ac:	add	r2, r2, #2000	; 0x7d0
   439b0:	str	r2, [sp]
   439b4:	ldr	r1, [pc, #24]	; 439d4 <blkid_probe_get_size@plt+0x3c4bc>
   439b8:	ldr	r2, [pc, #24]	; 439d8 <blkid_probe_get_size@plt+0x3c4c0>
   439bc:	ldr	r3, [pc, #24]	; 439dc <blkid_probe_get_size@plt+0x3c4c4>
   439c0:	add	r2, pc, r2
   439c4:	add	r1, pc, r1
   439c8:	mov	r0, #0
   439cc:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   439d0:	andeq	fp, r2, ip, lsr #32
   439d4:	andeq	ip, r2, ip, lsr #17
   439d8:	andeq	r9, r2, r0, ror fp
   439dc:	andeq	r0, r0, r3, lsl #4
   439e0:	cmp	r0, #0
   439e4:	bxeq	lr
   439e8:	ldrb	r3, [r0, #39]	; 0x27
   439ec:	tst	r3, #4
   439f0:	ldrne	r0, [r0, #24]
   439f4:	lsreq	r0, r3, #3
   439f8:	andeq	r0, r0, #7
   439fc:	bx	lr
   43a00:	push	{r4, r5, r6, lr}
   43a04:	subs	r4, r0, #0
   43a08:	beq	43a84 <blkid_probe_get_size@plt+0x3c56c>
   43a0c:	mov	r5, r1
   43a10:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43a14:	mov	r2, r5
   43a18:	mov	r1, r0
   43a1c:	mov	r0, r4
   43a20:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43a24:	cmn	r0, #1
   43a28:	beq	43a84 <blkid_probe_get_size@plt+0x3c56c>
   43a2c:	ldrb	r3, [r4, #39]	; 0x27
   43a30:	ldr	r2, [pc, #92]	; 43a94 <blkid_probe_get_size@plt+0x3c57c>
   43a34:	tst	r3, #4
   43a38:	and	r3, r3, #3
   43a3c:	add	r2, pc, r2
   43a40:	add	r2, r2, r3, lsl #4
   43a44:	ldrne	r1, [r4, #4]
   43a48:	ldr	r2, [r2, #4]
   43a4c:	addeq	r1, r4, #4
   43a50:	cmp	r3, #1
   43a54:	mla	r2, r2, r0, r1
   43a58:	bls	43a7c <blkid_probe_get_size@plt+0x3c564>
   43a5c:	cmp	r3, #2
   43a60:	ldreq	r5, [r2]
   43a64:	bne	43a90 <blkid_probe_get_size@plt+0x3c578>
   43a68:	mov	r1, r0
   43a6c:	mov	r0, r4
   43a70:	bl	2c998 <blkid_probe_get_size@plt+0x25480>
   43a74:	mov	r0, r5
   43a78:	pop	{r4, r5, r6, pc}
   43a7c:	ldr	r5, [r2, #4]
   43a80:	b	43a68 <blkid_probe_get_size@plt+0x3c550>
   43a84:	mov	r5, #0
   43a88:	mov	r0, r5
   43a8c:	pop	{r4, r5, r6, pc}
   43a90:	bl	4399c <blkid_probe_get_size@plt+0x3c484>
   43a94:	ldrdeq	r6, [r4], -r4
   43a98:	subs	r3, r0, #0
   43a9c:	beq	43acc <blkid_probe_get_size@plt+0x3c5b4>
   43aa0:	push	{r4, r5, r6, lr}
   43aa4:	mov	r5, r1
   43aa8:	mov	r4, r3
   43aac:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43ab0:	mov	r2, r5
   43ab4:	mov	r1, r0
   43ab8:	mov	r0, r4
   43abc:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43ac0:	adds	r0, r0, #1
   43ac4:	movne	r0, #1
   43ac8:	pop	{r4, r5, r6, pc}
   43acc:	mov	r0, r3
   43ad0:	bx	lr
   43ad4:	push	{r4, r5, r6, lr}
   43ad8:	subs	r4, r0, #0
   43adc:	beq	43b40 <blkid_probe_get_size@plt+0x3c628>
   43ae0:	mov	r6, r1
   43ae4:	mov	r5, r2
   43ae8:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43aec:	mov	r2, r6
   43af0:	mov	r1, r0
   43af4:	mov	r0, r4
   43af8:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43afc:	cmn	r0, #1
   43b00:	beq	43b40 <blkid_probe_get_size@plt+0x3c628>
   43b04:	ldrb	r3, [r4, #39]	; 0x27
   43b08:	ldr	r2, [pc, #56]	; 43b48 <blkid_probe_get_size@plt+0x3c630>
   43b0c:	tst	r3, #4
   43b10:	and	r3, r3, #3
   43b14:	add	r2, pc, r2
   43b18:	add	r3, r2, r3, lsl #4
   43b1c:	ldrne	r4, [r4, #4]
   43b20:	ldr	r3, [r3, #4]
   43b24:	addeq	r4, r4, #4
   43b28:	mul	r0, r3, r0
   43b2c:	add	r3, r4, r0
   43b30:	ldr	r2, [r4, r0]
   43b34:	str	r2, [r5]
   43b38:	ldr	r0, [r3, #4]
   43b3c:	pop	{r4, r5, r6, pc}
   43b40:	mov	r0, #0
   43b44:	pop	{r4, r5, r6, pc}
   43b48:	strdeq	r6, [r4], -ip
   43b4c:	push	{r4, r5, r6, lr}
   43b50:	subs	r4, r0, #0
   43b54:	beq	43bc0 <blkid_probe_get_size@plt+0x3c6a8>
   43b58:	mov	r5, r1
   43b5c:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43b60:	mov	r2, r5
   43b64:	mov	r1, r0
   43b68:	mov	r0, r4
   43b6c:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43b70:	cmn	r0, #1
   43b74:	beq	43bc0 <blkid_probe_get_size@plt+0x3c6a8>
   43b78:	ldrb	r3, [r4, #39]	; 0x27
   43b7c:	ldr	r2, [pc, #72]	; 43bcc <blkid_probe_get_size@plt+0x3c6b4>
   43b80:	tst	r3, #4
   43b84:	and	r3, r3, #3
   43b88:	add	r2, pc, r2
   43b8c:	add	r2, r2, r3, lsl #4
   43b90:	ldrne	r4, [r4, #4]
   43b94:	ldr	r2, [r2, #4]
   43b98:	addeq	r4, r4, #4
   43b9c:	cmp	r3, #1
   43ba0:	mla	r4, r2, r0, r4
   43ba4:	bls	43bb8 <blkid_probe_get_size@plt+0x3c6a0>
   43ba8:	cmp	r3, #2
   43bac:	bne	43bc8 <blkid_probe_get_size@plt+0x3c6b0>
   43bb0:	ldr	r0, [r4]
   43bb4:	pop	{r4, r5, r6, pc}
   43bb8:	ldr	r0, [r4, #4]
   43bbc:	pop	{r4, r5, r6, pc}
   43bc0:	mov	r0, #0
   43bc4:	pop	{r4, r5, r6, pc}
   43bc8:	bl	4399c <blkid_probe_get_size@plt+0x3c484>
   43bcc:	andeq	r6, r4, r8, lsl #15
   43bd0:	ldr	r3, [pc, #248]	; 43cd0 <blkid_probe_get_size@plt+0x3c7b8>
   43bd4:	ldr	ip, [pc, #248]	; 43cd4 <blkid_probe_get_size@plt+0x3c7bc>
   43bd8:	add	r3, pc, r3
   43bdc:	push	{r4, r5, r6, r7, r8, lr}
   43be0:	sub	sp, sp, #48	; 0x30
   43be4:	ldr	r6, [r3, ip]
   43be8:	subs	r4, r0, #0
   43bec:	ldr	r3, [r6]
   43bf0:	str	r3, [sp, #44]	; 0x2c
   43bf4:	beq	43ca0 <blkid_probe_get_size@plt+0x3c788>
   43bf8:	mov	r7, r1
   43bfc:	mov	r5, r2
   43c00:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43c04:	mov	r2, r7
   43c08:	mov	r1, r0
   43c0c:	mov	r8, r0
   43c10:	mov	r0, r4
   43c14:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43c18:	cmn	r0, #1
   43c1c:	mov	r1, r0
   43c20:	beq	43c80 <blkid_probe_get_size@plt+0x3c768>
   43c24:	ldrb	r3, [r4, #39]	; 0x27
   43c28:	mov	r0, #0
   43c2c:	tst	r3, #4
   43c30:	and	r2, r3, #3
   43c34:	ldr	r3, [pc, #156]	; 43cd8 <blkid_probe_get_size@plt+0x3c7c0>
   43c38:	ldrne	ip, [r4, #4]
   43c3c:	add	r3, pc, r3
   43c40:	add	r3, r3, r2, lsl #4
   43c44:	addeq	ip, r4, #4
   43c48:	ldr	r3, [r3, #4]
   43c4c:	mul	r3, r3, r1
   43c50:	add	r2, ip, r3
   43c54:	str	r7, [ip, r3]
   43c58:	str	r5, [r2, #4]
   43c5c:	ldrb	r3, [r4, #39]	; 0x27
   43c60:	orr	r3, r3, #128	; 0x80
   43c64:	strb	r3, [r4, #39]	; 0x27
   43c68:	ldr	r2, [sp, #44]	; 0x2c
   43c6c:	ldr	r3, [r6]
   43c70:	cmp	r2, r3
   43c74:	bne	43ccc <blkid_probe_get_size@plt+0x3c7b4>
   43c78:	add	sp, sp, #48	; 0x30
   43c7c:	pop	{r4, r5, r6, r7, r8, pc}
   43c80:	mov	r1, r8
   43c84:	mov	r0, r4
   43c88:	mov	r3, #1
   43c8c:	add	r2, sp, #12
   43c90:	str	r7, [sp, #12]
   43c94:	str	r5, [sp, #16]
   43c98:	bl	436fc <blkid_probe_get_size@plt+0x3c1e4>
   43c9c:	b	43c68 <blkid_probe_get_size@plt+0x3c750>
   43ca0:	ldr	r2, [pc, #52]	; 43cdc <blkid_probe_get_size@plt+0x3c7c4>
   43ca4:	ldr	r1, [pc, #52]	; 43ce0 <blkid_probe_get_size@plt+0x3c7c8>
   43ca8:	add	r2, pc, r2
   43cac:	add	r2, r2, #2000	; 0x7d0
   43cb0:	add	r2, r2, #12
   43cb4:	str	r2, [sp]
   43cb8:	ldr	r2, [pc, #36]	; 43ce4 <blkid_probe_get_size@plt+0x3c7cc>
   43cbc:	ldr	r3, [pc, #36]	; 43ce8 <blkid_probe_get_size@plt+0x3c7d0>
   43cc0:	add	r2, pc, r2
   43cc4:	add	r1, pc, r1
   43cc8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43ccc:	bl	6fb4 <__stack_chk_fail@plt>
   43cd0:	muleq	r5, r0, pc	; <UNPREDICTABLE>
   43cd4:	andeq	r0, r0, ip, lsr r4
   43cd8:	ldrdeq	r6, [r4], -r4
   43cdc:	andeq	sl, r2, r8, lsr #26
   43ce0:	andeq	r4, r2, r8, ror sl
   43ce4:	andeq	r9, r2, r0, ror r8
   43ce8:	andeq	r0, r0, r5, ror #9
   43cec:	ldr	r3, [pc, #172]	; 43da0 <blkid_probe_get_size@plt+0x3c888>
   43cf0:	ldr	r2, [pc, #172]	; 43da4 <blkid_probe_get_size@plt+0x3c88c>
   43cf4:	add	r3, pc, r3
   43cf8:	push	{r4, r5, r6, r7, lr}
   43cfc:	sub	sp, sp, #52	; 0x34
   43d00:	ldr	r4, [r3, r2]
   43d04:	subs	r6, r0, #0
   43d08:	ldr	r3, [r4]
   43d0c:	str	r3, [sp, #44]	; 0x2c
   43d10:	beq	43d70 <blkid_probe_get_size@plt+0x3c858>
   43d14:	mov	r5, r1
   43d18:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43d1c:	mov	r2, r5
   43d20:	mov	r1, r0
   43d24:	mov	r7, r0
   43d28:	mov	r0, r6
   43d2c:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43d30:	cmn	r0, #1
   43d34:	movne	r0, #0
   43d38:	beq	43d54 <blkid_probe_get_size@plt+0x3c83c>
   43d3c:	ldr	r2, [sp, #44]	; 0x2c
   43d40:	ldr	r3, [r4]
   43d44:	cmp	r2, r3
   43d48:	bne	43d9c <blkid_probe_get_size@plt+0x3c884>
   43d4c:	add	sp, sp, #52	; 0x34
   43d50:	pop	{r4, r5, r6, r7, pc}
   43d54:	add	r2, sp, #48	; 0x30
   43d58:	mov	r1, r7
   43d5c:	mov	r0, r6
   43d60:	str	r5, [r2, #-36]!	; 0xffffffdc
   43d64:	mov	r3, #1
   43d68:	bl	436fc <blkid_probe_get_size@plt+0x3c1e4>
   43d6c:	b	43d3c <blkid_probe_get_size@plt+0x3c824>
   43d70:	ldr	r2, [pc, #48]	; 43da8 <blkid_probe_get_size@plt+0x3c890>
   43d74:	ldr	r1, [pc, #48]	; 43dac <blkid_probe_get_size@plt+0x3c894>
   43d78:	add	r2, pc, r2
   43d7c:	add	r2, r2, #2016	; 0x7e0
   43d80:	add	r2, r2, #12
   43d84:	str	r2, [sp]
   43d88:	ldr	r2, [pc, #32]	; 43db0 <blkid_probe_get_size@plt+0x3c898>
   43d8c:	ldr	r3, [pc, #32]	; 43db4 <blkid_probe_get_size@plt+0x3c89c>
   43d90:	add	r2, pc, r2
   43d94:	add	r1, pc, r1
   43d98:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43d9c:	bl	6fb4 <__stack_chk_fail@plt>
   43da0:	andeq	r3, r5, r4, ror lr
   43da4:	andeq	r0, r0, ip, lsr r4
   43da8:	andeq	sl, r2, r8, asr ip
   43dac:	andeq	ip, r2, r4, ror #11
   43db0:	andeq	r9, r2, r0, lsr #15
   43db4:	ldrdeq	r0, [r0], -r4
   43db8:	push	{r4, r5, r6, lr}
   43dbc:	subs	r5, r0, #0
   43dc0:	sub	sp, sp, #8
   43dc4:	beq	43e20 <blkid_probe_get_size@plt+0x3c908>
   43dc8:	cmp	r1, #0
   43dcc:	mov	r4, r1
   43dd0:	beq	43e4c <blkid_probe_get_size@plt+0x3c934>
   43dd4:	bl	43a98 <blkid_probe_get_size@plt+0x3c580>
   43dd8:	cmp	r0, #0
   43ddc:	movne	r4, #0
   43de0:	beq	43df0 <blkid_probe_get_size@plt+0x3c8d8>
   43de4:	mov	r0, r4
   43de8:	add	sp, sp, #8
   43dec:	pop	{r4, r5, r6, pc}
   43df0:	mov	r0, r4
   43df4:	bl	74e8 <strdup@plt>
   43df8:	subs	r6, r0, #0
   43dfc:	beq	43e7c <blkid_probe_get_size@plt+0x3c964>
   43e00:	mov	r0, r5
   43e04:	mov	r1, r6
   43e08:	bl	43cec <blkid_probe_get_size@plt+0x3c7d4>
   43e0c:	subs	r4, r0, #0
   43e10:	bgt	43de4 <blkid_probe_get_size@plt+0x3c8cc>
   43e14:	mov	r0, r6
   43e18:	bl	69f0 <free@plt>
   43e1c:	b	43de4 <blkid_probe_get_size@plt+0x3c8cc>
   43e20:	ldr	r2, [pc, #92]	; 43e84 <blkid_probe_get_size@plt+0x3c96c>
   43e24:	ldr	r1, [pc, #92]	; 43e88 <blkid_probe_get_size@plt+0x3c970>
   43e28:	add	r2, pc, r2
   43e2c:	add	r2, r2, #2032	; 0x7f0
   43e30:	add	r2, r2, #4
   43e34:	str	r2, [sp]
   43e38:	ldr	r2, [pc, #76]	; 43e8c <blkid_probe_get_size@plt+0x3c974>
   43e3c:	ldr	r3, [pc, #76]	; 43e90 <blkid_probe_get_size@plt+0x3c978>
   43e40:	add	r2, pc, r2
   43e44:	add	r1, pc, r1
   43e48:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43e4c:	ldr	r3, [pc, #64]	; 43e94 <blkid_probe_get_size@plt+0x3c97c>
   43e50:	mov	r0, r1
   43e54:	add	r3, pc, r3
   43e58:	add	r3, r3, #2032	; 0x7f0
   43e5c:	ldr	r2, [pc, #52]	; 43e98 <blkid_probe_get_size@plt+0x3c980>
   43e60:	ldr	r1, [pc, #52]	; 43e9c <blkid_probe_get_size@plt+0x3c984>
   43e64:	add	r3, r3, #4
   43e68:	str	r3, [sp]
   43e6c:	add	r2, pc, r2
   43e70:	ldr	r3, [pc, #40]	; 43ea0 <blkid_probe_get_size@plt+0x3c988>
   43e74:	add	r1, pc, r1
   43e78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43e7c:	mvn	r4, #11
   43e80:	b	43de4 <blkid_probe_get_size@plt+0x3c8cc>
   43e84:	andeq	sl, r2, r8, lsr #23
   43e88:	andeq	ip, r2, r4, lsr r5
   43e8c:	strdeq	r9, [r2], -r0
   43e90:	andeq	r0, r0, fp, ror #13
   43e94:	andeq	sl, r2, ip, ror fp
   43e98:	andeq	r9, r2, r4, asr #13
   43e9c:	andeq	r0, r3, r4, lsl #17
   43ea0:	andeq	r0, r0, ip, ror #13
   43ea4:	ldr	r3, [pc, #232]	; 43f94 <blkid_probe_get_size@plt+0x3ca7c>
   43ea8:	ldr	ip, [pc, #232]	; 43f98 <blkid_probe_get_size@plt+0x3ca80>
   43eac:	add	r3, pc, r3
   43eb0:	push	{r4, r5, r6, r7, r8, lr}
   43eb4:	sub	sp, sp, #48	; 0x30
   43eb8:	ldr	r6, [r3, ip]
   43ebc:	subs	r4, r0, #0
   43ec0:	ldr	r3, [r6]
   43ec4:	str	r3, [sp, #44]	; 0x2c
   43ec8:	beq	43f64 <blkid_probe_get_size@plt+0x3ca4c>
   43ecc:	mov	r7, r1
   43ed0:	mov	r5, r2
   43ed4:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   43ed8:	mov	r2, r7
   43edc:	mov	r1, r0
   43ee0:	mov	r8, r0
   43ee4:	mov	r0, r4
   43ee8:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   43eec:	cmn	r0, #1
   43ef0:	beq	43f44 <blkid_probe_get_size@plt+0x3ca2c>
   43ef4:	ldrb	r3, [r4, #39]	; 0x27
   43ef8:	ldr	r2, [pc, #156]	; 43f9c <blkid_probe_get_size@plt+0x3ca84>
   43efc:	tst	r3, #4
   43f00:	and	r3, r3, #3
   43f04:	add	r2, pc, r2
   43f08:	add	r3, r2, r3, lsl #4
   43f0c:	ldrne	r4, [r4, #4]
   43f10:	ldr	r3, [r3, #4]
   43f14:	addeq	r4, r4, #4
   43f18:	mla	r0, r3, r0, r4
   43f1c:	ldr	r3, [r0, #4]
   43f20:	cmp	r3, r5
   43f24:	moveq	r0, #0
   43f28:	mvnne	r0, #16
   43f2c:	ldr	r2, [sp, #44]	; 0x2c
   43f30:	ldr	r3, [r6]
   43f34:	cmp	r2, r3
   43f38:	bne	43f90 <blkid_probe_get_size@plt+0x3ca78>
   43f3c:	add	sp, sp, #48	; 0x30
   43f40:	pop	{r4, r5, r6, r7, r8, pc}
   43f44:	mov	r1, r8
   43f48:	mov	r0, r4
   43f4c:	mov	r3, #1
   43f50:	add	r2, sp, #12
   43f54:	str	r7, [sp, #12]
   43f58:	str	r5, [sp, #16]
   43f5c:	bl	436fc <blkid_probe_get_size@plt+0x3c1e4>
   43f60:	b	43f2c <blkid_probe_get_size@plt+0x3ca14>
   43f64:	ldr	r2, [pc, #52]	; 43fa0 <blkid_probe_get_size@plt+0x3ca88>
   43f68:	ldr	r1, [pc, #52]	; 43fa4 <blkid_probe_get_size@plt+0x3ca8c>
   43f6c:	add	r2, pc, r2
   43f70:	add	r2, r2, #2048	; 0x800
   43f74:	add	r2, r2, #4
   43f78:	str	r2, [sp]
   43f7c:	ldr	r2, [pc, #36]	; 43fa8 <blkid_probe_get_size@plt+0x3ca90>
   43f80:	ldr	r3, [pc, #36]	; 43fac <blkid_probe_get_size@plt+0x3ca94>
   43f84:	add	r2, pc, r2
   43f88:	add	r1, pc, r1
   43f8c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   43f90:	bl	6fb4 <__stack_chk_fail@plt>
   43f94:			; <UNDEFINED> instruction: 0x00053cbc
   43f98:	andeq	r0, r0, ip, lsr r4
   43f9c:	andeq	r6, r4, ip, lsl #8
   43fa0:	andeq	sl, r2, r4, ror #20
   43fa4:			; <UNDEFINED> instruction: 0x000247b4
   43fa8:	andeq	r9, r2, ip, lsr #11
   43fac:			; <UNDEFINED> instruction: 0x000004be
   43fb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43fb4:	sub	sp, sp, #8
   43fb8:	mov	r7, r0
   43fbc:	mov	r6, r1
   43fc0:	bl	39ae4 <blkid_probe_get_size@plt+0x325cc>
   43fc4:	subs	r5, r0, #0
   43fc8:	beq	44038 <blkid_probe_get_size@plt+0x3cb20>
   43fcc:	ldr	r4, [pc, #568]	; 4420c <blkid_probe_get_size@plt+0x3ccf4>
   43fd0:	add	r4, pc, r4
   43fd4:	ldr	r0, [r4, #144]	; 0x90
   43fd8:	cmp	r0, #0
   43fdc:	blt	440dc <blkid_probe_get_size@plt+0x3cbc4>
   43fe0:	cmp	r0, #0
   43fe4:	beq	44038 <blkid_probe_get_size@plt+0x3cb20>
   43fe8:	ldr	r3, [pc, #544]	; 44210 <blkid_probe_get_size@plt+0x3ccf8>
   43fec:	add	r3, pc, r3
   43ff0:	add	r3, r3, r6, lsl #4
   43ff4:	ldr	r8, [r3, #8]
   43ff8:	ldr	r9, [r8, #8]
   43ffc:	cmp	r9, #3
   44000:	bls	44100 <blkid_probe_get_size@plt+0x3cbe8>
   44004:	ldr	r0, [r8, #12]
   44008:	cmp	r0, #0
   4400c:	beq	44174 <blkid_probe_get_size@plt+0x3cc5c>
   44010:	ldr	r4, [r8, #4]
   44014:	cmp	r4, #0
   44018:	beq	4412c <blkid_probe_get_size@plt+0x3cc14>
   4401c:	ldr	r3, [r4]
   44020:	str	r3, [r8, #4]
   44024:	mov	r2, r9
   44028:	mov	r1, #0
   4402c:	mov	r0, r4
   44030:	bl	6c84 <memset@plt>
   44034:	b	44058 <blkid_probe_get_size@plt+0x3cb40>
   44038:	ldr	r3, [pc, #468]	; 44214 <blkid_probe_get_size@plt+0x3ccfc>
   4403c:	mov	r0, #1
   44040:	add	r3, pc, r3
   44044:	ldr	r1, [r3, r6, lsl #4]
   44048:	bl	7164 <calloc@plt>
   4404c:	subs	r4, r0, #0
   44050:	beq	44164 <blkid_probe_get_size@plt+0x3cc4c>
   44054:	mov	r5, #0
   44058:	ldrb	r2, [r4, #39]	; 0x27
   4405c:	and	r5, r5, #1
   44060:	and	r3, r6, #3
   44064:	and	r2, r2, #188	; 0xbc
   44068:	orr	r3, r2, r3
   4406c:	orr	r3, r3, r5, lsl #6
   44070:	cmp	r7, #0
   44074:	strb	r3, [r4, #39]	; 0x27
   44078:	beq	440cc <blkid_probe_get_size@plt+0x3cbb4>
   4407c:	ldr	r5, [pc, #404]	; 44218 <blkid_probe_get_size@plt+0x3cd00>
   44080:	cmp	r6, #1
   44084:	mvneq	r3, #0
   44088:	add	r5, pc, r5
   4408c:	streq	r3, [r4, #48]	; 0x30
   44090:	streq	r3, [r4, #44]	; 0x2c
   44094:	str	r7, [r4]
   44098:	mov	r0, r4
   4409c:	bl	422fc <blkid_probe_get_size@plt+0x3ade4>
   440a0:	ldrb	r3, [r5, #2076]	; 0x81c
   440a4:	cmp	r3, #0
   440a8:	bne	440c0 <blkid_probe_get_size@plt+0x3cba8>
   440ac:	mov	r1, #16
   440b0:	add	r0, r5, #2080	; 0x820
   440b4:	bl	428f0 <blkid_probe_get_size@plt+0x3b3d8>
   440b8:	mov	r3, #1
   440bc:	strb	r3, [r5, #2076]	; 0x81c
   440c0:	mov	r0, r4
   440c4:	add	sp, sp, #8
   440c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   440cc:	ldr	r7, [pc, #328]	; 4421c <blkid_probe_get_size@plt+0x3cd04>
   440d0:	add	r7, pc, r7
   440d4:	add	r7, r7, #828	; 0x33c
   440d8:	b	4407c <blkid_probe_get_size@plt+0x3cb64>
   440dc:	ldr	r0, [pc, #316]	; 44220 <blkid_probe_get_size@plt+0x3cd08>
   440e0:	add	r0, pc, r0
   440e4:	bl	2e0ac <blkid_probe_get_size@plt+0x26b94>
   440e8:	adds	r0, r0, #0
   440ec:	movne	r0, #1
   440f0:	cmp	r0, #0
   440f4:	str	r0, [r4, #144]	; 0x90
   440f8:	bne	43fe8 <blkid_probe_get_size@plt+0x3cad0>
   440fc:	b	44038 <blkid_probe_get_size@plt+0x3cb20>
   44100:	ldr	r2, [pc, #284]	; 44224 <blkid_probe_get_size@plt+0x3cd0c>
   44104:	ldr	r1, [pc, #284]	; 44228 <blkid_probe_get_size@plt+0x3cd10>
   44108:	add	r2, pc, r2
   4410c:	add	r2, r2, #2064	; 0x810
   44110:	str	r2, [sp]
   44114:	ldr	r2, [pc, #272]	; 4422c <blkid_probe_get_size@plt+0x3cd14>
   44118:	mov	r3, #24
   4411c:	add	r2, pc, r2
   44120:	add	r1, pc, r1
   44124:	mov	r0, #0
   44128:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4412c:	ldr	sl, [r8]
   44130:	cmp	sl, #0
   44134:	beq	441b4 <blkid_probe_get_size@plt+0x3cc9c>
   44138:	ldrd	r2, [sl, #4]
   4413c:	cmp	r3, r2
   44140:	bcs	441a8 <blkid_probe_get_size@plt+0x3cc90>
   44144:	add	r2, r3, #1
   44148:	str	r2, [sl, #8]
   4414c:	ldr	r9, [r8, #8]
   44150:	ldr	r4, [r8]
   44154:	mul	r3, r9, r3
   44158:	add	r3, r3, #12
   4415c:	adds	r4, r4, r3
   44160:	bne	4419c <blkid_probe_get_size@plt+0x3cc84>
   44164:	mov	r4, #0
   44168:	mov	r0, r4
   4416c:	add	sp, sp, #8
   44170:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   44174:	ldr	r3, [pc, #180]	; 44230 <blkid_probe_get_size@plt+0x3cd18>
   44178:	ldr	r2, [pc, #180]	; 44234 <blkid_probe_get_size@plt+0x3cd1c>
   4417c:	add	r3, pc, r3
   44180:	ldr	r1, [pc, #176]	; 44238 <blkid_probe_get_size@plt+0x3cd20>
   44184:	add	r3, r3, #2064	; 0x810
   44188:	str	r3, [sp]
   4418c:	add	r2, pc, r2
   44190:	mov	r3, #25
   44194:	add	r1, pc, r1
   44198:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4419c:	cmp	r9, #0
   441a0:	beq	44058 <blkid_probe_get_size@plt+0x3cb40>
   441a4:	b	44024 <blkid_probe_get_size@plt+0x3cb0c>
   441a8:	lsl	r2, r2, #1
   441ac:	cmp	r0, r2
   441b0:	movcc	r0, r2
   441b4:	mul	r4, r0, r9
   441b8:	bl	3bfd0 <blkid_probe_get_size@plt+0x34ab8>
   441bc:	mov	r1, r9
   441c0:	add	r3, r0, #11
   441c4:	add	r4, r3, r4
   441c8:	rsb	r0, r0, #0
   441cc:	and	r4, r4, r0
   441d0:	sub	r0, r4, #12
   441d4:	bl	63b44 <blkid_probe_get_size@plt+0x5c62c>
   441d8:	mov	r9, r0
   441dc:	mov	r0, r4
   441e0:	bl	7230 <malloc@plt>
   441e4:	cmp	r0, #0
   441e8:	beq	44164 <blkid_probe_get_size@plt+0x3cc4c>
   441ec:	mov	r3, #0
   441f0:	str	sl, [r0]
   441f4:	str	r3, [r0, #8]
   441f8:	str	r9, [r0, #4]
   441fc:	mov	sl, r0
   44200:	str	r0, [r8]
   44204:	ldr	r3, [r0, #8]
   44208:	b	44144 <blkid_probe_get_size@plt+0x3cc2c>
   4420c:	andeq	r4, r5, r4, asr #1
   44210:	andeq	r6, r4, r4, lsr #6
   44214:	ldrdeq	r6, [r4], -r0
   44218:			; <UNDEFINED> instruction: 0x000545b4
   4421c:	andeq	r5, r4, r0, ror ip
   44220:	andeq	ip, r2, r8, lsr #3
   44224:	andeq	sl, r2, r8, asr #17
   44228:	muleq	r2, r0, r1
   4422c:	andeq	ip, r2, ip, ror r1
   44230:	andeq	sl, r2, r4, asr r8
   44234:	andeq	ip, r2, ip, lsl #2
   44238:	andeq	ip, r2, ip, lsr r1
   4423c:	push	{r4, r5, lr}
   44240:	subs	r5, r0, #0
   44244:	sub	sp, sp, #12
   44248:	beq	4428c <blkid_probe_get_size@plt+0x3cd74>
   4424c:	ldr	r4, [r5]
   44250:	cmp	r4, #0
   44254:	movne	r0, #0
   44258:	beq	44264 <blkid_probe_get_size@plt+0x3cd4c>
   4425c:	add	sp, sp, #12
   44260:	pop	{r4, r5, pc}
   44264:	mov	r3, r1
   44268:	mov	r0, r3
   4426c:	mov	r1, r2
   44270:	bl	43fb0 <blkid_probe_get_size@plt+0x3ca98>
   44274:	cmp	r0, #0
   44278:	strne	r0, [r5]
   4427c:	mvneq	r0, #11
   44280:	movne	r0, r4
   44284:	add	sp, sp, #12
   44288:	pop	{r4, r5, pc}
   4428c:	ldr	r2, [pc, #36]	; 442b8 <blkid_probe_get_size@plt+0x3cda0>
   44290:	ldr	r1, [pc, #36]	; 442bc <blkid_probe_get_size@plt+0x3cda4>
   44294:	add	r2, pc, r2
   44298:	add	r2, r2, #2080	; 0x820
   4429c:	add	r2, r2, #4
   442a0:	str	r2, [sp]
   442a4:	ldr	r2, [pc, #20]	; 442c0 <blkid_probe_get_size@plt+0x3cda8>
   442a8:	mov	r3, #824	; 0x338
   442ac:	add	r2, pc, r2
   442b0:	add	r1, pc, r1
   442b4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   442b8:	andeq	sl, r2, ip, lsr r7
   442bc:	andeq	r4, r2, ip, lsl #9
   442c0:	andeq	r9, r2, r4, lsl #5
   442c4:	mov	r2, #2
   442c8:	b	4423c <blkid_probe_get_size@plt+0x3cd24>
   442cc:	push	{r4, r5, r6, r7, r8, lr}
   442d0:	subs	r5, r0, #0
   442d4:	mvneq	r2, #0
   442d8:	sub	sp, sp, #8
   442dc:	streq	r2, [r1]
   442e0:	moveq	r0, r2
   442e4:	beq	443cc <blkid_probe_get_size@plt+0x3ceb4>
   442e8:	ldrb	r2, [r5, #39]	; 0x27
   442ec:	mov	r4, r1
   442f0:	ldr	r3, [r1]
   442f4:	and	r1, r2, #3
   442f8:	cmp	r1, #1
   442fc:	beq	443d4 <blkid_probe_get_size@plt+0x3cebc>
   44300:	cmn	r3, #1
   44304:	beq	44494 <blkid_probe_get_size@plt+0x3cf7c>
   44308:	cmn	r3, #2
   4430c:	beq	4451c <blkid_probe_get_size@plt+0x3d004>
   44310:	cmp	r3, #0
   44314:	beq	44660 <blkid_probe_get_size@plt+0x3d148>
   44318:	ands	lr, r2, #4
   4431c:	ldr	r6, [pc, #972]	; 446f0 <blkid_probe_get_size@plt+0x3d1d8>
   44320:	and	r2, r2, #3
   44324:	add	r6, pc, r6
   44328:	lsl	r2, r2, #4
   4432c:	add	r1, r6, r2
   44330:	ldrne	ip, [r5, #4]
   44334:	ldr	r1, [r1, #4]
   44338:	addeq	ip, r5, #4
   4433c:	ldr	r7, [r4, #4]
   44340:	mul	r0, r1, r3
   44344:	ldr	r0, [ip, r0]
   44348:	cmp	r0, r7
   4434c:	beq	444a8 <blkid_probe_get_size@plt+0x3cf90>
   44350:	sub	r0, r3, #1
   44354:	str	r0, [r4]
   44358:	ldrb	r2, [r5, #39]	; 0x27
   4435c:	tst	r2, #4
   44360:	beq	444e4 <blkid_probe_get_size@plt+0x3cfcc>
   44364:	and	ip, r2, #3
   44368:	ldr	lr, [r5, #4]
   4436c:	add	ip, r6, ip, lsl #4
   44370:	ldr	r1, [ip, #4]
   44374:	mul	r2, r1, r0
   44378:	ldr	r2, [lr, r2]
   4437c:	cmp	r7, r2
   44380:	bne	44690 <blkid_probe_get_size@plt+0x3d178>
   44384:	ldr	ip, [r5, #28]
   44388:	cmp	ip, r3
   4438c:	mul	r1, ip, r1
   44390:	bls	443c4 <blkid_probe_get_size@plt+0x3ceac>
   44394:	add	r1, r1, r3
   44398:	add	r2, lr, r1
   4439c:	ldrb	r1, [lr, r1]
   443a0:	cmp	r1, #255	; 0xff
   443a4:	beq	443b8 <blkid_probe_get_size@plt+0x3cea0>
   443a8:	b	444c0 <blkid_probe_get_size@plt+0x3cfa8>
   443ac:	ldrb	r1, [r2, #1]!
   443b0:	cmp	r1, #255	; 0xff
   443b4:	bne	444c0 <blkid_probe_get_size@plt+0x3cfa8>
   443b8:	add	r3, r3, #1
   443bc:	cmp	ip, r3
   443c0:	bhi	443ac <blkid_probe_get_size@plt+0x3ce94>
   443c4:	mvn	r3, #0
   443c8:	str	r3, [r4]
   443cc:	add	sp, sp, #8
   443d0:	pop	{r4, r5, r6, r7, r8, pc}
   443d4:	cmn	r3, #1
   443d8:	beq	44494 <blkid_probe_get_size@plt+0x3cf7c>
   443dc:	cmn	r3, #2
   443e0:	beq	44488 <blkid_probe_get_size@plt+0x3cf70>
   443e4:	ldr	r1, [pc, #776]	; 446f4 <blkid_probe_get_size@plt+0x3d1dc>
   443e8:	tst	r2, #4
   443ec:	add	r1, pc, r1
   443f0:	add	r2, r1, #16
   443f4:	ldr	r6, [r2, #4]
   443f8:	ldr	r8, [r4, #4]
   443fc:	mul	r0, r6, r3
   44400:	beq	44640 <blkid_probe_get_size@plt+0x3d128>
   44404:	ldr	r7, [r5, #4]
   44408:	add	r1, r7, r0
   4440c:	ldr	r2, [r7, r0]
   44410:	cmp	r8, r2
   44414:	ldrne	r1, [r5, #28]
   44418:	beq	44658 <blkid_probe_get_size@plt+0x3d140>
   4441c:	sub	r0, r3, #1
   44420:	add	r0, r0, r1
   44424:	bl	63d30 <blkid_probe_get_size@plt+0x5c818>
   44428:	mul	r6, r6, r1
   4442c:	mov	r0, r1
   44430:	add	r1, r7, r6
   44434:	ldr	r3, [r7, r6]
   44438:	cmp	r3, r8
   4443c:	bne	446c0 <blkid_probe_get_size@plt+0x3d1a8>
   44440:	ldr	r3, [r1, #8]
   44444:	cmn	r3, #1
   44448:	str	r3, [r4]
   4444c:	beq	443cc <blkid_probe_get_size@plt+0x3ceb4>
   44450:	ldrb	r2, [r5, #39]	; 0x27
   44454:	ldr	r1, [pc, #668]	; 446f8 <blkid_probe_get_size@plt+0x3d1e0>
   44458:	tst	r2, #4
   4445c:	addeq	r5, r5, #4
   44460:	ldrne	r5, [r5, #4]
   44464:	and	r2, r2, #3
   44468:	add	r1, pc, r1
   4446c:	add	r2, r1, r2, lsl #4
   44470:	ldr	r2, [r2, #4]
   44474:	mul	r3, r2, r3
   44478:	ldr	r3, [r5, r3]
   4447c:	str	r3, [r4, #4]
   44480:	add	sp, sp, #8
   44484:	pop	{r4, r5, r6, r7, r8, pc}
   44488:	ldr	r0, [r5, #44]	; 0x2c
   4448c:	cmn	r0, #1
   44490:	bne	44618 <blkid_probe_get_size@plt+0x3d100>
   44494:	mvn	r2, #0
   44498:	mov	r0, r2
   4449c:	str	r2, [r4]
   444a0:	add	sp, sp, #8
   444a4:	pop	{r4, r5, r6, r7, r8, pc}
   444a8:	mov	r0, r3
   444ac:	cmp	lr, #0
   444b0:	add	r3, r0, #1
   444b4:	beq	44504 <blkid_probe_get_size@plt+0x3cfec>
   444b8:	ldr	lr, [r5, #4]
   444bc:	b	44384 <blkid_probe_get_size@plt+0x3ce6c>
   444c0:	str	r3, [r4]
   444c4:	ldrb	r2, [r5, #39]	; 0x27
   444c8:	tst	r2, #4
   444cc:	beq	445b8 <blkid_probe_get_size@plt+0x3d0a0>
   444d0:	ldr	r5, [r5, #4]
   444d4:	ldr	r1, [pc, #544]	; 446fc <blkid_probe_get_size@plt+0x3d1e4>
   444d8:	and	r2, r2, #3
   444dc:	add	r1, pc, r1
   444e0:	b	4446c <blkid_probe_get_size@plt+0x3cf54>
   444e4:	and	r2, r2, #3
   444e8:	lsl	r2, r2, #4
   444ec:	add	ip, r6, r2
   444f0:	ldr	r1, [ip, #4]
   444f4:	mla	ip, r1, r0, r5
   444f8:	ldr	ip, [ip, #4]
   444fc:	cmp	r7, ip
   44500:	bne	44690 <blkid_probe_get_size@plt+0x3d178>
   44504:	ldr	ip, [pc, #500]	; 44700 <blkid_probe_get_size@plt+0x3d1e8>
   44508:	add	lr, r5, #4
   4450c:	add	ip, pc, ip
   44510:	add	r2, ip, r2
   44514:	ldr	ip, [r2, #12]
   44518:	b	44388 <blkid_probe_get_size@plt+0x3ce70>
   4451c:	ldr	r3, [pc, #480]	; 44704 <blkid_probe_get_size@plt+0x3d1ec>
   44520:	ands	r2, r2, #4
   44524:	add	r3, pc, r3
   44528:	add	r1, r3, r1, lsl #4
   4452c:	ldr	r0, [r1, #4]
   44530:	beq	445c0 <blkid_probe_get_size@plt+0x3d0a8>
   44534:	ldr	ip, [r5, #28]
   44538:	ldr	r3, [r5, #32]
   4453c:	ldr	r1, [r5, #4]
   44540:	cmp	r3, ip
   44544:	mul	r0, ip, r0
   44548:	bcs	4457c <blkid_probe_get_size@plt+0x3d064>
   4454c:	add	r0, r3, r0
   44550:	add	r2, r1, r0
   44554:	ldrb	r1, [r1, r0]
   44558:	cmp	r1, #255	; 0xff
   4455c:	beq	44570 <blkid_probe_get_size@plt+0x3d058>
   44560:	b	44580 <blkid_probe_get_size@plt+0x3d068>
   44564:	ldrb	r1, [r2, #1]!
   44568:	cmp	r1, #255	; 0xff
   4456c:	bne	44580 <blkid_probe_get_size@plt+0x3d068>
   44570:	add	r3, r3, #1
   44574:	cmp	ip, r3
   44578:	bne	44564 <blkid_probe_get_size@plt+0x3d04c>
   4457c:	mvn	r3, #0
   44580:	str	r3, [r4]
   44584:	str	r3, [r5, #32]
   44588:	ldr	r0, [r4]
   4458c:	cmn	r0, #1
   44590:	beq	44494 <blkid_probe_get_size@plt+0x3cf7c>
   44594:	ldrb	lr, [r5, #39]	; 0x27
   44598:	ldr	r3, [pc, #360]	; 44708 <blkid_probe_get_size@plt+0x3d1f0>
   4459c:	and	r2, lr, #3
   445a0:	add	r3, pc, r3
   445a4:	lsl	r2, r2, #4
   445a8:	add	r3, r3, r2
   445ac:	and	lr, lr, #4
   445b0:	ldr	r1, [r3, #4]
   445b4:	b	444ac <blkid_probe_get_size@plt+0x3cf94>
   445b8:	add	r5, r5, #4
   445bc:	b	444d4 <blkid_probe_get_size@plt+0x3cfbc>
   445c0:	ldr	r1, [r1, #12]
   445c4:	add	r3, r5, #4
   445c8:	cmp	r1, #0
   445cc:	mul	r0, r1, r0
   445d0:	beq	44494 <blkid_probe_get_size@plt+0x3cf7c>
   445d4:	ldrb	ip, [r3, r0]
   445d8:	add	r3, r3, r0
   445dc:	cmp	ip, #255	; 0xff
   445e0:	strne	r2, [r4]
   445e4:	movne	r0, r2
   445e8:	bne	44594 <blkid_probe_get_size@plt+0x3d07c>
   445ec:	mov	r0, r2
   445f0:	b	44600 <blkid_probe_get_size@plt+0x3d0e8>
   445f4:	ldrb	r2, [r3, #1]!
   445f8:	cmp	r2, #255	; 0xff
   445fc:	bne	44610 <blkid_probe_get_size@plt+0x3d0f8>
   44600:	add	r0, r0, #1
   44604:	cmp	r1, r0
   44608:	bne	445f4 <blkid_probe_get_size@plt+0x3d0dc>
   4460c:	mvn	r0, #0
   44610:	str	r0, [r4]
   44614:	b	4458c <blkid_probe_get_size@plt+0x3d074>
   44618:	tst	r2, #4
   4461c:	and	r3, r2, #3
   44620:	ldr	r2, [pc, #228]	; 4470c <blkid_probe_get_size@plt+0x3d1f4>
   44624:	ldrne	ip, [r5, #4]
   44628:	add	r2, pc, r2
   4462c:	add	r2, r2, r3, lsl #4
   44630:	addeq	ip, r5, #4
   44634:	ldr	r1, [r2, #4]
   44638:	mla	r1, r1, r0, ip
   4463c:	b	44440 <blkid_probe_get_size@plt+0x3cf28>
   44640:	add	r7, r5, #4
   44644:	add	r1, r7, r0
   44648:	ldr	r0, [r7, r0]
   4464c:	cmp	r8, r0
   44650:	ldrne	r1, [r2, #12]
   44654:	bne	4441c <blkid_probe_get_size@plt+0x3cf04>
   44658:	mov	r0, r3
   4465c:	b	44440 <blkid_probe_get_size@plt+0x3cf28>
   44660:	ldr	r2, [pc, #168]	; 44710 <blkid_probe_get_size@plt+0x3d1f8>
   44664:	mov	r0, r3
   44668:	add	r2, pc, r2
   4466c:	add	r3, r2, #2144	; 0x860
   44670:	ldr	r1, [pc, #156]	; 44714 <blkid_probe_get_size@plt+0x3d1fc>
   44674:	ldr	r2, [pc, #156]	; 44718 <blkid_probe_get_size@plt+0x3d200>
   44678:	add	r3, r3, #8
   4467c:	str	r3, [sp]
   44680:	add	r2, pc, r2
   44684:	ldr	r3, [pc, #144]	; 4471c <blkid_probe_get_size@plt+0x3d204>
   44688:	add	r1, pc, r1
   4468c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44690:	ldr	r2, [pc, #136]	; 44720 <blkid_probe_get_size@plt+0x3d208>
   44694:	ldr	r1, [pc, #136]	; 44724 <blkid_probe_get_size@plt+0x3d20c>
   44698:	add	r2, pc, r2
   4469c:	add	r2, r2, #2144	; 0x860
   446a0:	add	r2, r2, #8
   446a4:	str	r2, [sp]
   446a8:	ldr	r2, [pc, #120]	; 44728 <blkid_probe_get_size@plt+0x3d210>
   446ac:	ldr	r3, [pc, #120]	; 4472c <blkid_probe_get_size@plt+0x3d214>
   446b0:	add	r2, pc, r2
   446b4:	add	r1, pc, r1
   446b8:	mov	r0, #0
   446bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   446c0:	ldr	r2, [pc, #104]	; 44730 <blkid_probe_get_size@plt+0x3d218>
   446c4:	ldr	r1, [pc, #104]	; 44734 <blkid_probe_get_size@plt+0x3d21c>
   446c8:	add	r2, pc, r2
   446cc:	add	r2, r2, #2112	; 0x840
   446d0:	add	r2, r2, #4
   446d4:	str	r2, [sp]
   446d8:	ldr	r2, [pc, #88]	; 44738 <blkid_probe_get_size@plt+0x3d220>
   446dc:	ldr	r3, [pc, #88]	; 4473c <blkid_probe_get_size@plt+0x3d224>
   446e0:	add	r2, pc, r2
   446e4:	add	r1, pc, r1
   446e8:	mov	r0, #0
   446ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   446f0:	andeq	r5, r4, ip, ror #31
   446f4:	andeq	r5, r4, r4, lsr #30
   446f8:	andeq	r5, r4, r8, lsr #29
   446fc:	andeq	r5, r4, r4, lsr lr
   44700:	andeq	r5, r4, r4, lsl #28
   44704:	andeq	r5, r4, ip, ror #27
   44708:	andeq	r5, r4, r0, ror sp
   4470c:	andeq	r5, r4, r8, ror #25
   44710:	andeq	sl, r2, r8, ror #6
   44714:	andeq	fp, r2, r8, ror ip
   44718:			; <UNDEFINED> instruction: 0x00028eb0
   4471c:	andeq	r0, r0, r7, lsl #5
   44720:	andeq	sl, r2, r8, lsr r3
   44724:	andeq	fp, r2, r8, asr ip
   44728:	andeq	r8, r2, r0, lsl #29
   4472c:	muleq	r0, r3, r2
   44730:	andeq	sl, r2, r8, lsl #6
   44734:	andeq	fp, r2, r0, lsl #24
   44738:	andeq	r8, r2, r0, asr lr
   4473c:	andeq	r0, r0, fp, asr r2
   44740:	ldr	r3, [pc, #460]	; 44914 <blkid_probe_get_size@plt+0x3d3fc>
   44744:	ldr	ip, [pc, #460]	; 44918 <blkid_probe_get_size@plt+0x3d400>
   44748:	add	r3, pc, r3
   4474c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44750:	subs	r5, r0, #0
   44754:	ldr	r0, [r3, ip]
   44758:	sub	sp, sp, #28
   4475c:	ldr	r3, [r0]
   44760:	str	r0, [sp, #4]
   44764:	str	r3, [sp, #20]
   44768:	beq	448cc <blkid_probe_get_size@plt+0x3d3b4>
   4476c:	ldr	r3, [r5]
   44770:	ldrb	r4, [r5, #39]	; 0x27
   44774:	ldr	r7, [r3, #8]
   44778:	ldr	r6, [r3, #12]
   4477c:	cmp	r7, #0
   44780:	beq	44860 <blkid_probe_get_size@plt+0x3d348>
   44784:	cmp	r6, #0
   44788:	moveq	r6, r2
   4478c:	ldr	fp, [pc, #392]	; 4491c <blkid_probe_get_size@plt+0x3d404>
   44790:	mvn	sl, #1
   44794:	add	fp, pc, fp
   44798:	b	447c8 <blkid_probe_get_size@plt+0x3d2b0>
   4479c:	mov	r9, #0
   447a0:	mov	r4, r9
   447a4:	cmp	r7, #0
   447a8:	beq	447b4 <blkid_probe_get_size@plt+0x3d29c>
   447ac:	mov	r0, r9
   447b0:	blx	r7
   447b4:	cmp	r6, #0
   447b8:	beq	448f0 <blkid_probe_get_size@plt+0x3d3d8>
   447bc:	mov	r0, r4
   447c0:	blx	r6
   447c4:	ldrb	r4, [r5, #39]	; 0x27
   447c8:	mov	r8, #0
   447cc:	mov	r0, r5
   447d0:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   447d4:	and	r3, r4, #4
   447d8:	cmp	r0, #0
   447dc:	beq	44878 <blkid_probe_get_size@plt+0x3d360>
   447e0:	cmp	r3, #0
   447e4:	lsreq	r4, r4, #3
   447e8:	ldrne	r0, [r5, #24]
   447ec:	andeq	r0, r4, #7
   447f0:	cmp	r0, #0
   447f4:	str	sl, [sp, #12]
   447f8:	str	r8, [sp, #16]
   447fc:	beq	4479c <blkid_probe_get_size@plt+0x3d284>
   44800:	add	r1, sp, #12
   44804:	mov	r0, r5
   44808:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   4480c:	cmn	r0, #1
   44810:	mov	r1, r0
   44814:	beq	4479c <blkid_probe_get_size@plt+0x3d284>
   44818:	ldrb	r4, [r5, #39]	; 0x27
   4481c:	tst	r4, #4
   44820:	and	r4, r4, #3
   44824:	ldrne	r2, [r5, #4]
   44828:	add	r3, fp, r4, lsl #4
   4482c:	addeq	r2, r5, #4
   44830:	ldr	r3, [r3, #4]
   44834:	cmp	r4, #1
   44838:	mul	r3, r3, r0
   4483c:	add	r0, r2, r3
   44840:	ldr	r9, [r2, r3]
   44844:	bls	448e8 <blkid_probe_get_size@plt+0x3d3d0>
   44848:	cmp	r4, #2
   4484c:	bne	448f8 <blkid_probe_get_size@plt+0x3d3e0>
   44850:	mov	r4, r9
   44854:	mov	r0, r5
   44858:	bl	2c998 <blkid_probe_get_size@plt+0x25480>
   4485c:	b	447a4 <blkid_probe_get_size@plt+0x3d28c>
   44860:	cmp	r6, #0
   44864:	bne	44900 <blkid_probe_get_size@plt+0x3d3e8>
   44868:	cmp	r2, #0
   4486c:	cmpeq	r1, #0
   44870:	bne	44908 <blkid_probe_get_size@plt+0x3d3f0>
   44874:	and	r3, r4, #4
   44878:	cmp	r3, #0
   4487c:	beq	44894 <blkid_probe_get_size@plt+0x3d37c>
   44880:	ldr	r0, [r5, #4]
   44884:	bl	69f0 <free@plt>
   44888:	ldrb	r3, [r5, #39]	; 0x27
   4488c:	bic	r3, r3, #4
   44890:	strb	r3, [r5, #39]	; 0x27
   44894:	ldrb	r3, [r5, #39]	; 0x27
   44898:	mov	r0, r5
   4489c:	bic	r3, r3, #56	; 0x38
   448a0:	strb	r3, [r5, #39]	; 0x27
   448a4:	bl	422fc <blkid_probe_get_size@plt+0x3ade4>
   448a8:	ldrb	r3, [r5, #39]	; 0x27
   448ac:	and	r3, r3, #3
   448b0:	cmp	r3, #1
   448b4:	mvneq	r3, #0
   448b8:	streq	r3, [r5, #48]	; 0x30
   448bc:	streq	r3, [r5, #44]	; 0x2c
   448c0:	ldrb	r3, [r5, #39]	; 0x27
   448c4:	orr	r3, r3, #128	; 0x80
   448c8:	strb	r3, [r5, #39]	; 0x27
   448cc:	ldr	r3, [sp, #4]
   448d0:	ldr	r2, [sp, #20]
   448d4:	ldr	r3, [r3]
   448d8:	cmp	r2, r3
   448dc:	bne	448fc <blkid_probe_get_size@plt+0x3d3e4>
   448e0:	add	sp, sp, #28
   448e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   448e8:	ldr	r4, [r0, #4]
   448ec:	b	44854 <blkid_probe_get_size@plt+0x3d33c>
   448f0:	ldrb	r4, [r5, #39]	; 0x27
   448f4:	b	447cc <blkid_probe_get_size@plt+0x3d2b4>
   448f8:	bl	4399c <blkid_probe_get_size@plt+0x3c484>
   448fc:	bl	6fb4 <__stack_chk_fail@plt>
   44900:	mov	r7, r1
   44904:	b	4478c <blkid_probe_get_size@plt+0x3d274>
   44908:	mov	r7, r1
   4490c:	mov	r6, r2
   44910:	b	4478c <blkid_probe_get_size@plt+0x3d274>
   44914:	andeq	r3, r5, r0, lsr #8
   44918:	andeq	r0, r0, ip, lsr r4
   4491c:	andeq	r5, r4, ip, ror fp
   44920:	push	{r4, lr}
   44924:	subs	r4, r0, #0
   44928:	sub	sp, sp, #8
   4492c:	beq	44980 <blkid_probe_get_size@plt+0x3d468>
   44930:	bl	44740 <blkid_probe_get_size@plt+0x3d228>
   44934:	ldrb	r3, [r4, #39]	; 0x27
   44938:	ands	r0, r3, #4
   4493c:	bne	449cc <blkid_probe_get_size@plt+0x3d4b4>
   44940:	tst	r3, #56	; 0x38
   44944:	bne	449a0 <blkid_probe_get_size@plt+0x3d488>
   44948:	tst	r3, #64	; 0x40
   4494c:	beq	4498c <blkid_probe_get_size@plt+0x3d474>
   44950:	bl	39ae4 <blkid_probe_get_size@plt+0x325cc>
   44954:	cmp	r0, #0
   44958:	beq	449fc <blkid_probe_get_size@plt+0x3d4e4>
   4495c:	ldrb	r2, [r4, #39]	; 0x27
   44960:	ldr	r3, [pc, #192]	; 44a28 <blkid_probe_get_size@plt+0x3d510>
   44964:	and	r2, r2, #3
   44968:	add	r3, pc, r3
   4496c:	add	r3, r3, r2, lsl #4
   44970:	ldr	r3, [r3, #8]
   44974:	ldr	r2, [r3, #4]
   44978:	str	r2, [r4]
   4497c:	str	r4, [r3, #4]
   44980:	mov	r0, #0
   44984:	add	sp, sp, #8
   44988:	pop	{r4, pc}
   4498c:	mov	r0, r4
   44990:	bl	69f0 <free@plt>
   44994:	mov	r0, #0
   44998:	add	sp, sp, #8
   4499c:	pop	{r4, pc}
   449a0:	ldr	r3, [pc, #132]	; 44a2c <blkid_probe_get_size@plt+0x3d514>
   449a4:	ldr	r2, [pc, #132]	; 44a30 <blkid_probe_get_size@plt+0x3d518>
   449a8:	add	r3, pc, r3
   449ac:	add	r3, r3, #2176	; 0x880
   449b0:	ldr	r1, [pc, #124]	; 44a34 <blkid_probe_get_size@plt+0x3d51c>
   449b4:	add	r3, r3, #12
   449b8:	str	r3, [sp]
   449bc:	add	r2, pc, r2
   449c0:	ldr	r3, [pc, #112]	; 44a38 <blkid_probe_get_size@plt+0x3d520>
   449c4:	add	r1, pc, r1
   449c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   449cc:	ldr	r2, [pc, #104]	; 44a3c <blkid_probe_get_size@plt+0x3d524>
   449d0:	ldr	r1, [pc, #104]	; 44a40 <blkid_probe_get_size@plt+0x3d528>
   449d4:	add	r2, pc, r2
   449d8:	add	r2, r2, #2176	; 0x880
   449dc:	add	r2, r2, #12
   449e0:	str	r2, [sp]
   449e4:	ldr	r2, [pc, #88]	; 44a44 <blkid_probe_get_size@plt+0x3d52c>
   449e8:	ldr	r3, [pc, #88]	; 44a48 <blkid_probe_get_size@plt+0x3d530>
   449ec:	add	r2, pc, r2
   449f0:	add	r1, pc, r1
   449f4:	mov	r0, #0
   449f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   449fc:	ldr	r2, [pc, #72]	; 44a4c <blkid_probe_get_size@plt+0x3d534>
   44a00:	ldr	r1, [pc, #72]	; 44a50 <blkid_probe_get_size@plt+0x3d538>
   44a04:	add	r2, pc, r2
   44a08:	add	r2, r2, #2176	; 0x880
   44a0c:	add	r2, r2, #12
   44a10:	str	r2, [sp]
   44a14:	ldr	r2, [pc, #56]	; 44a54 <blkid_probe_get_size@plt+0x3d53c>
   44a18:	ldr	r3, [pc, #56]	; 44a58 <blkid_probe_get_size@plt+0x3d540>
   44a1c:	add	r2, pc, r2
   44a20:	add	r1, pc, r1
   44a24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44a28:	andeq	r5, r4, r8, lsr #19
   44a2c:	andeq	sl, r2, r8, lsr #32
   44a30:	andeq	r8, r2, r4, ror fp
   44a34:	andeq	fp, r2, r0, ror #18
   44a38:	andeq	r0, r0, r3, asr r3
   44a3c:	strdeq	r9, [r2], -ip
   44a40:	andeq	fp, r2, ip, asr #13
   44a44:	andeq	r8, r2, r4, asr #22
   44a48:	andeq	r0, r0, r2, asr r3
   44a4c:	andeq	r9, r2, ip, asr #31
   44a50:	andeq	fp, r2, r0, lsr #18
   44a54:	andeq	r8, r2, r4, lsl fp
   44a58:	andeq	r0, r0, sp, asr r3
   44a5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44a60:	sub	sp, sp, #108	; 0x6c
   44a64:	ldr	r7, [pc, #1584]	; 4509c <blkid_probe_get_size@plt+0x3db84>
   44a68:	ldr	r3, [pc, #1584]	; 450a0 <blkid_probe_get_size@plt+0x3db88>
   44a6c:	add	r7, pc, r7
   44a70:	cmp	r1, #0
   44a74:	str	r1, [sp, #36]	; 0x24
   44a78:	ldr	r3, [r7, r3]
   44a7c:	ldr	r8, [sp, #156]	; 0x9c
   44a80:	str	r3, [sp, #28]
   44a84:	ldr	r3, [r3]
   44a88:	str	r0, [sp, #40]	; 0x28
   44a8c:	str	r2, [sp, #44]	; 0x2c
   44a90:	str	r8, [sp, #56]	; 0x38
   44a94:	str	r3, [sp, #100]	; 0x64
   44a98:	ldr	r0, [sp, #148]	; 0x94
   44a9c:	ldr	fp, [sp, #160]	; 0xa0
   44aa0:	beq	44c34 <blkid_probe_get_size@plt+0x3d71c>
   44aa4:	cmp	r0, #0
   44aa8:	beq	44c64 <blkid_probe_get_size@plt+0x3d74c>
   44aac:	cmp	r8, #0
   44ab0:	beq	44c90 <blkid_probe_get_size@plt+0x3d778>
   44ab4:	cmp	fp, #0
   44ab8:	beq	44cc0 <blkid_probe_get_size@plt+0x3d7a8>
   44abc:	ldrb	r2, [r8]
   44ac0:	cmp	r2, #0
   44ac4:	beq	44b84 <blkid_probe_get_size@plt+0x3d66c>
   44ac8:	ldr	r0, [pc, #1492]	; 450a4 <blkid_probe_get_size@plt+0x3db8c>
   44acc:	mov	r1, #2
   44ad0:	add	r0, pc, r0
   44ad4:	add	r0, r0, #844	; 0x34c
   44ad8:	bl	43fb0 <blkid_probe_get_size@plt+0x3ca98>
   44adc:	subs	r3, r0, #0
   44ae0:	str	r3, [sp, #32]
   44ae4:	beq	44f34 <blkid_probe_get_size@plt+0x3da1c>
   44ae8:	ldr	r3, [pc, #1464]	; 450a8 <blkid_probe_get_size@plt+0x3db90>
   44aec:	add	r9, sp, #60	; 0x3c
   44af0:	add	r3, pc, r3
   44af4:	add	r3, r3, #2224	; 0x8b0
   44af8:	add	sl, sp, #56	; 0x38
   44afc:	add	r3, r3, #12
   44b00:	str	r3, [sp, #48]	; 0x30
   44b04:	mov	r6, #0
   44b08:	mov	r2, r6
   44b0c:	mov	r1, r9
   44b10:	mov	r0, sl
   44b14:	str	r6, [sp, #60]	; 0x3c
   44b18:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   44b1c:	cmp	r0, #0
   44b20:	beq	44cf0 <blkid_probe_get_size@plt+0x3d7d8>
   44b24:	cmn	r0, #12
   44b28:	beq	44e68 <blkid_probe_get_size@plt+0x3d950>
   44b2c:	cmp	r0, #0
   44b30:	blt	44ebc <blkid_probe_get_size@plt+0x3d9a4>
   44b34:	mov	r0, #6
   44b38:	bl	7230 <malloc@plt>
   44b3c:	subs	r4, r0, #0
   44b40:	beq	44f5c <blkid_probe_get_size@plt+0x3da44>
   44b44:	mov	r1, r4
   44b48:	ldr	r0, [sp, #60]	; 0x3c
   44b4c:	bl	6343c <blkid_probe_get_size@plt+0x5bf24>
   44b50:	cmp	r0, #0
   44b54:	blt	44bbc <blkid_probe_get_size@plt+0x3d6a4>
   44b58:	mov	r1, r4
   44b5c:	ldr	r0, [sp, #32]
   44b60:	bl	43cec <blkid_probe_get_size@plt+0x3c7d4>
   44b64:	cmp	r0, #0
   44b68:	blt	44fb0 <blkid_probe_get_size@plt+0x3da98>
   44b6c:	movne	r4, r6
   44b70:	mov	r0, r4
   44b74:	bl	69f0 <free@plt>
   44b78:	ldr	r0, [sp, #60]	; 0x3c
   44b7c:	bl	69f0 <free@plt>
   44b80:	b	44b04 <blkid_probe_get_size@plt+0x3d5ec>
   44b84:	ldr	r3, [pc, #1312]	; 450ac <blkid_probe_get_size@plt+0x3db94>
   44b88:	ldr	r0, [fp]
   44b8c:	mov	r5, r2
   44b90:	ldr	r1, [r7, r3]
   44b94:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   44b98:	str	r0, [fp]
   44b9c:	ldr	r3, [sp, #28]
   44ba0:	ldr	r2, [sp, #100]	; 0x64
   44ba4:	mov	r0, r5
   44ba8:	ldr	r3, [r3]
   44bac:	cmp	r2, r3
   44bb0:	bne	45098 <blkid_probe_get_size@plt+0x3db80>
   44bb4:	add	sp, sp, #108	; 0x6c
   44bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44bbc:	ldr	r3, [pc, #1260]	; 450b0 <blkid_probe_get_size@plt+0x3db98>
   44bc0:	ldr	r5, [sp, #60]	; 0x3c
   44bc4:	add	r3, pc, r3
   44bc8:	ldr	r3, [r3]
   44bcc:	cmp	r3, #2
   44bd0:	bgt	44be8 <blkid_probe_get_size@plt+0x3d6d0>
   44bd4:	mov	r0, r4
   44bd8:	bl	69f0 <free@plt>
   44bdc:	mov	r0, r5
   44be0:	bl	69f0 <free@plt>
   44be4:	b	44b04 <blkid_probe_get_size@plt+0x3d5ec>
   44be8:	ldr	r2, [pc, #1220]	; 450b4 <blkid_probe_get_size@plt+0x3db9c>
   44bec:	ldr	r3, [pc, #1220]	; 450b8 <blkid_probe_get_size@plt+0x3dba0>
   44bf0:	ldr	r0, [sp, #48]	; 0x30
   44bf4:	ldr	r1, [pc, #1216]	; 450bc <blkid_probe_get_size@plt+0x3dba4>
   44bf8:	add	r2, pc, r2
   44bfc:	add	r3, pc, r3
   44c00:	str	r5, [sp, #20]
   44c04:	str	r0, [sp, #12]
   44c08:	str	r2, [sp, #16]
   44c0c:	str	r1, [sp, #8]
   44c10:	str	r3, [sp, #4]
   44c14:	str	r6, [sp]
   44c18:	ldr	r3, [sp, #44]	; 0x2c
   44c1c:	ldr	r2, [sp, #36]	; 0x24
   44c20:	mov	r1, #3
   44c24:	ldr	r0, [sp, #40]	; 0x28
   44c28:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   44c2c:	ldr	r5, [sp, #60]	; 0x3c
   44c30:	b	44bd4 <blkid_probe_get_size@plt+0x3d6bc>
   44c34:	ldr	r3, [pc, #1156]	; 450c0 <blkid_probe_get_size@plt+0x3dba8>
   44c38:	mov	r0, r1
   44c3c:	add	r3, pc, r3
   44c40:	add	r3, r3, #2208	; 0x8a0
   44c44:	ldr	r2, [pc, #1144]	; 450c4 <blkid_probe_get_size@plt+0x3dbac>
   44c48:	ldr	r1, [pc, #1144]	; 450c8 <blkid_probe_get_size@plt+0x3dbb0>
   44c4c:	add	r3, r3, #4
   44c50:	str	r3, [sp]
   44c54:	add	r2, pc, r2
   44c58:	mov	r3, #316	; 0x13c
   44c5c:	add	r1, pc, r1
   44c60:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44c64:	ldr	r3, [pc, #1120]	; 450cc <blkid_probe_get_size@plt+0x3dbb4>
   44c68:	ldr	r2, [pc, #1120]	; 450d0 <blkid_probe_get_size@plt+0x3dbb8>
   44c6c:	add	r3, pc, r3
   44c70:	add	r3, r3, #2208	; 0x8a0
   44c74:	ldr	r1, [pc, #1112]	; 450d4 <blkid_probe_get_size@plt+0x3dbbc>
   44c78:	add	r3, r3, #4
   44c7c:	str	r3, [sp]
   44c80:	add	r2, pc, r2
   44c84:	ldr	r3, [pc, #1100]	; 450d8 <blkid_probe_get_size@plt+0x3dbc0>
   44c88:	add	r1, pc, r1
   44c8c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44c90:	ldr	r3, [pc, #1092]	; 450dc <blkid_probe_get_size@plt+0x3dbc4>
   44c94:	ldr	r2, [pc, #1092]	; 450e0 <blkid_probe_get_size@plt+0x3dbc8>
   44c98:	add	r3, pc, r3
   44c9c:	add	r3, r3, #2208	; 0x8a0
   44ca0:	ldr	r1, [pc, #1084]	; 450e4 <blkid_probe_get_size@plt+0x3dbcc>
   44ca4:	add	r3, r3, #4
   44ca8:	str	r3, [sp]
   44cac:	mov	r0, r8
   44cb0:	ldr	r3, [pc, #1072]	; 450e8 <blkid_probe_get_size@plt+0x3dbd0>
   44cb4:	add	r2, pc, r2
   44cb8:	add	r1, pc, r1
   44cbc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44cc0:	ldr	r3, [pc, #1060]	; 450ec <blkid_probe_get_size@plt+0x3dbd4>
   44cc4:	ldr	r2, [pc, #1060]	; 450f0 <blkid_probe_get_size@plt+0x3dbd8>
   44cc8:	add	r3, pc, r3
   44ccc:	add	r3, r3, #2208	; 0x8a0
   44cd0:	ldr	r1, [pc, #1052]	; 450f4 <blkid_probe_get_size@plt+0x3dbdc>
   44cd4:	add	r3, r3, #4
   44cd8:	str	r3, [sp]
   44cdc:	mov	r0, fp
   44ce0:	ldr	r3, [pc, #1040]	; 450f8 <blkid_probe_get_size@plt+0x3dbe0>
   44ce4:	add	r2, pc, r2
   44ce8:	add	r1, pc, r1
   44cec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   44cf0:	mov	r5, r0
   44cf4:	ldr	r0, [sp, #60]	; 0x3c
   44cf8:	bl	69f0 <free@plt>
   44cfc:	ldr	r1, [pc, #1016]	; 450fc <blkid_probe_get_size@plt+0x3dbe4>
   44d00:	mov	r0, fp
   44d04:	add	r1, pc, r1
   44d08:	add	r1, r1, #844	; 0x34c
   44d0c:	bl	442c4 <blkid_probe_get_size@plt+0x3cdac>
   44d10:	cmp	r0, #0
   44d14:	blt	44f84 <blkid_probe_get_size@plt+0x3da6c>
   44d18:	ldr	r8, [fp]
   44d1c:	cmp	r8, #0
   44d20:	beq	45038 <blkid_probe_get_size@plt+0x3db20>
   44d24:	ldr	r3, [sp, #32]
   44d28:	ldrb	r2, [r8, #39]	; 0x27
   44d2c:	ldrb	r3, [r3, #39]	; 0x27
   44d30:	eor	r2, r2, r3
   44d34:	tst	r2, #3
   44d38:	bne	45068 <blkid_probe_get_size@plt+0x3db50>
   44d3c:	tst	r3, #4
   44d40:	lsreq	r3, r3, #3
   44d44:	ldrne	r3, [sp, #32]
   44d48:	andeq	r1, r3, #7
   44d4c:	mov	r0, r8
   44d50:	ldrne	r1, [r3, #24]
   44d54:	bl	4315c <blkid_probe_get_size@plt+0x3bc44>
   44d58:	cmp	r0, #0
   44d5c:	blt	44fdc <blkid_probe_get_size@plt+0x3dac4>
   44d60:	ldr	r6, [sp, #32]
   44d64:	mvn	r2, #1
   44d68:	mov	r3, #0
   44d6c:	mov	r1, r9
   44d70:	mov	r0, r6
   44d74:	str	r2, [sp, #60]	; 0x3c
   44d78:	str	r3, [sp, #64]	; 0x40
   44d7c:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   44d80:	cmn	r0, #1
   44d84:	mov	sl, r0
   44d88:	beq	44ea4 <blkid_probe_get_size@plt+0x3d98c>
   44d8c:	ldr	r3, [pc, #876]	; 45100 <blkid_probe_get_size@plt+0x3dbe8>
   44d90:	str	r5, [sp, #48]	; 0x30
   44d94:	add	r3, pc, r3
   44d98:	str	r3, [sp, #36]	; 0x24
   44d9c:	add	r3, r6, #4
   44da0:	str	r3, [sp, #44]	; 0x2c
   44da4:	add	r3, sp, #68	; 0x44
   44da8:	str	r3, [sp, #40]	; 0x28
   44dac:	str	r7, [sp, #52]	; 0x34
   44db0:	ldrb	r3, [r6, #39]	; 0x27
   44db4:	ldr	r2, [sp, #36]	; 0x24
   44db8:	mov	r0, r8
   44dbc:	tst	r3, #4
   44dc0:	and	r3, r3, #3
   44dc4:	ldrne	r5, [r6, #4]
   44dc8:	add	r3, r2, r3, lsl #4
   44dcc:	ldreq	r5, [sp, #44]	; 0x2c
   44dd0:	ldr	r4, [r3, #4]
   44dd4:	mul	r4, r4, sl
   44dd8:	add	r7, r5, r4
   44ddc:	ldr	r1, [r5, r4]
   44de0:	bl	2cdd8 <blkid_probe_get_size@plt+0x258c0>
   44de4:	ldr	r2, [r5, r4]
   44de8:	mov	r1, r0
   44dec:	mov	fp, r0
   44df0:	mov	r0, r8
   44df4:	bl	42d00 <blkid_probe_get_size@plt+0x3b7e8>
   44df8:	cmn	r0, #1
   44dfc:	bne	44e44 <blkid_probe_get_size@plt+0x3d92c>
   44e00:	ldrb	r2, [r8, #39]	; 0x27
   44e04:	ldr	r1, [r5, r4]
   44e08:	mov	r3, #0
   44e0c:	and	r2, r2, #3
   44e10:	cmp	r2, #2
   44e14:	str	r1, [sp, #68]	; 0x44
   44e18:	ldrne	r2, [r7, #4]
   44e1c:	mov	r1, fp
   44e20:	strne	r2, [sp, #72]	; 0x48
   44e24:	mov	r0, r8
   44e28:	ldr	r2, [sp, #40]	; 0x28
   44e2c:	bl	436fc <blkid_probe_get_size@plt+0x3c1e4>
   44e30:	cmp	r0, #1
   44e34:	bne	45008 <blkid_probe_get_size@plt+0x3daf0>
   44e38:	mov	r1, sl
   44e3c:	mov	r0, r6
   44e40:	bl	2c998 <blkid_probe_get_size@plt+0x25480>
   44e44:	mov	r1, r9
   44e48:	mov	r0, r6
   44e4c:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   44e50:	cmn	r0, #1
   44e54:	mov	sl, r0
   44e58:	bne	44db0 <blkid_probe_get_size@plt+0x3d898>
   44e5c:	ldr	r5, [sp, #48]	; 0x30
   44e60:	ldr	r7, [sp, #52]	; 0x34
   44e64:	b	44ea4 <blkid_probe_get_size@plt+0x3d98c>
   44e68:	ldr	r3, [pc, #660]	; 45104 <blkid_probe_get_size@plt+0x3dbec>
   44e6c:	ldr	r1, [pc, #660]	; 45108 <blkid_probe_get_size@plt+0x3dbf0>
   44e70:	add	r3, pc, r3
   44e74:	add	r3, r3, #2224	; 0x8b0
   44e78:	ldr	r2, [pc, #652]	; 4510c <blkid_probe_get_size@plt+0x3dbf4>
   44e7c:	add	r3, r3, #12
   44e80:	add	r1, pc, r1
   44e84:	mov	r0, r6
   44e88:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   44e8c:	mov	r4, r6
   44e90:	mov	r5, r0
   44e94:	mov	r0, r4
   44e98:	bl	69f0 <free@plt>
   44e9c:	ldr	r0, [sp, #60]	; 0x3c
   44ea0:	bl	69f0 <free@plt>
   44ea4:	ldr	r3, [pc, #512]	; 450ac <blkid_probe_get_size@plt+0x3db94>
   44ea8:	ldr	r0, [sp, #32]
   44eac:	mov	r2, #0
   44eb0:	ldr	r1, [r7, r3]
   44eb4:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   44eb8:	b	44b9c <blkid_probe_get_size@plt+0x3d684>
   44ebc:	ldr	r3, [pc, #588]	; 45110 <blkid_probe_get_size@plt+0x3dbf8>
   44ec0:	mov	r5, r0
   44ec4:	add	r3, pc, r3
   44ec8:	ldr	r3, [r3]
   44ecc:	cmp	r3, #3
   44ed0:	movle	r4, r6
   44ed4:	movle	r5, r4
   44ed8:	ble	44e94 <blkid_probe_get_size@plt+0x3d97c>
   44edc:	ldr	r1, [pc, #560]	; 45114 <blkid_probe_get_size@plt+0x3dbfc>
   44ee0:	ldr	lr, [pc, #560]	; 45118 <blkid_probe_get_size@plt+0x3dc00>
   44ee4:	add	r1, pc, r1
   44ee8:	add	r1, r1, #2224	; 0x8b0
   44eec:	add	r1, r1, #12
   44ef0:	str	r1, [sp, #12]
   44ef4:	ldr	r1, [pc, #544]	; 4511c <blkid_probe_get_size@plt+0x3dc04>
   44ef8:	ldr	ip, [pc, #544]	; 45120 <blkid_probe_get_size@plt+0x3dc08>
   44efc:	add	r1, pc, r1
   44f00:	add	ip, pc, ip
   44f04:	str	r5, [sp]
   44f08:	stmib	sp, {r1, lr}
   44f0c:	str	r8, [sp, #20]
   44f10:	ldr	r3, [sp, #44]	; 0x2c
   44f14:	ldr	r2, [sp, #36]	; 0x24
   44f18:	ldr	r0, [sp, #40]	; 0x28
   44f1c:	str	ip, [sp, #16]
   44f20:	mov	r1, #4
   44f24:	mov	r5, r6
   44f28:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   44f2c:	mov	r4, r6
   44f30:	b	44e94 <blkid_probe_get_size@plt+0x3d97c>
   44f34:	ldr	r3, [pc, #488]	; 45124 <blkid_probe_get_size@plt+0x3dc0c>
   44f38:	ldr	r1, [pc, #488]	; 45128 <blkid_probe_get_size@plt+0x3dc10>
   44f3c:	add	r3, pc, r3
   44f40:	add	r3, r3, #2224	; 0x8b0
   44f44:	ldr	r2, [pc, #480]	; 4512c <blkid_probe_get_size@plt+0x3dc14>
   44f48:	add	r3, r3, #12
   44f4c:	add	r1, pc, r1
   44f50:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   44f54:	mov	r5, r0
   44f58:	b	44b9c <blkid_probe_get_size@plt+0x3d684>
   44f5c:	ldr	r3, [pc, #460]	; 45130 <blkid_probe_get_size@plt+0x3dc18>
   44f60:	ldr	r1, [pc, #460]	; 45134 <blkid_probe_get_size@plt+0x3dc1c>
   44f64:	add	r3, pc, r3
   44f68:	add	r3, r3, #2224	; 0x8b0
   44f6c:	ldr	r2, [pc, #452]	; 45138 <blkid_probe_get_size@plt+0x3dc20>
   44f70:	add	r3, r3, #12
   44f74:	add	r1, pc, r1
   44f78:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   44f7c:	mov	r5, r0
   44f80:	b	44e94 <blkid_probe_get_size@plt+0x3d97c>
   44f84:	ldr	r3, [pc, #432]	; 4513c <blkid_probe_get_size@plt+0x3dc24>
   44f88:	ldr	r1, [pc, #432]	; 45140 <blkid_probe_get_size@plt+0x3dc28>
   44f8c:	add	r3, pc, r3
   44f90:	add	r3, r3, #2224	; 0x8b0
   44f94:	mov	r0, r5
   44f98:	add	r3, r3, #12
   44f9c:	mov	r2, #364	; 0x16c
   44fa0:	add	r1, pc, r1
   44fa4:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   44fa8:	mov	r5, r0
   44fac:	b	44ea4 <blkid_probe_get_size@plt+0x3d98c>
   44fb0:	ldr	r3, [pc, #396]	; 45144 <blkid_probe_get_size@plt+0x3dc2c>
   44fb4:	ldr	r1, [pc, #396]	; 45148 <blkid_probe_get_size@plt+0x3dc30>
   44fb8:	add	r3, pc, r3
   44fbc:	add	r3, r3, #2224	; 0x8b0
   44fc0:	mov	r0, r6
   44fc4:	add	r3, r3, #12
   44fc8:	ldr	r2, [pc, #380]	; 4514c <blkid_probe_get_size@plt+0x3dc34>
   44fcc:	add	r1, pc, r1
   44fd0:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   44fd4:	mov	r5, r0
   44fd8:	b	44e94 <blkid_probe_get_size@plt+0x3d97c>
   44fdc:	ldr	r3, [pc, #364]	; 45150 <blkid_probe_get_size@plt+0x3dc38>
   44fe0:	ldr	r1, [pc, #364]	; 45154 <blkid_probe_get_size@plt+0x3dc3c>
   44fe4:	add	r3, pc, r3
   44fe8:	add	r3, r3, #2224	; 0x8b0
   44fec:	mov	r2, #368	; 0x170
   44ff0:	add	r3, r3, #12
   44ff4:	add	r1, pc, r1
   44ff8:	mov	r0, #0
   44ffc:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   45000:	mov	r5, r0
   45004:	b	44ea4 <blkid_probe_get_size@plt+0x3d98c>
   45008:	ldr	r2, [pc, #328]	; 45158 <blkid_probe_get_size@plt+0x3dc40>
   4500c:	ldr	r1, [pc, #328]	; 4515c <blkid_probe_get_size@plt+0x3dc44>
   45010:	add	r2, pc, r2
   45014:	add	r2, r2, #2256	; 0x8d0
   45018:	add	r2, r2, #4
   4501c:	str	r2, [sp]
   45020:	ldr	r2, [pc, #312]	; 45160 <blkid_probe_get_size@plt+0x3dc48>
   45024:	ldr	r3, [pc, #312]	; 45164 <blkid_probe_get_size@plt+0x3dc4c>
   45028:	add	r2, pc, r2
   4502c:	add	r1, pc, r1
   45030:	mov	r0, #0
   45034:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   45038:	ldr	r3, [pc, #296]	; 45168 <blkid_probe_get_size@plt+0x3dc50>
   4503c:	ldr	r2, [pc, #296]	; 4516c <blkid_probe_get_size@plt+0x3dc54>
   45040:	add	r3, pc, r3
   45044:	add	r3, r3, #2256	; 0x8d0
   45048:	ldr	r1, [pc, #288]	; 45170 <blkid_probe_get_size@plt+0x3dc58>
   4504c:	add	r3, r3, #4
   45050:	str	r3, [sp]
   45054:	mov	r0, r8
   45058:	ldr	r3, [pc, #276]	; 45174 <blkid_probe_get_size@plt+0x3dc5c>
   4505c:	add	r2, pc, r2
   45060:	add	r1, pc, r1
   45064:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   45068:	ldr	r3, [pc, #264]	; 45178 <blkid_probe_get_size@plt+0x3dc60>
   4506c:	ldr	r2, [pc, #264]	; 4517c <blkid_probe_get_size@plt+0x3dc64>
   45070:	add	r3, pc, r3
   45074:	add	r3, r3, #2256	; 0x8d0
   45078:	ldr	r1, [pc, #256]	; 45180 <blkid_probe_get_size@plt+0x3dc68>
   4507c:	add	r3, r3, #4
   45080:	str	r3, [sp]
   45084:	mov	r0, r5
   45088:	ldr	r3, [pc, #244]	; 45184 <blkid_probe_get_size@plt+0x3dc6c>
   4508c:	add	r2, pc, r2
   45090:	add	r1, pc, r1
   45094:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   45098:	bl	6fb4 <__stack_chk_fail@plt>
   4509c:	strdeq	r3, [r5], -ip
   450a0:	andeq	r0, r0, ip, lsr r4
   450a4:	andeq	r5, r4, r0, ror r2
   450a8:	andeq	r9, r2, r0, ror #29
   450ac:	andeq	r0, r0, r8, lsr r4
   450b0:	andeq	r3, r5, r8, ror r5
   450b4:	andeq	fp, r2, ip, asr r7
   450b8:			; <UNDEFINED> instruction: 0x0002aab8
   450bc:	andeq	r0, r0, pc, asr r1
   450c0:	muleq	r2, r4, sp
   450c4:	andeq	sl, r2, r0, ror #20
   450c8:	andeq	r5, r2, ip, asr #14
   450cc:	andeq	r9, r2, r4, ror #26
   450d0:	andeq	sl, r2, r4, lsr sl
   450d4:	andeq	r5, r2, r4, lsl r5
   450d8:	andeq	r0, r0, sp, lsr r1
   450dc:	andeq	r9, r2, r8, lsr sp
   450e0:	andeq	sl, r2, r0, lsl #20
   450e4:	andeq	r5, r2, r4, lsl #14
   450e8:	andeq	r0, r0, lr, lsr r1
   450ec:	andeq	r9, r2, r8, lsl #26
   450f0:	ldrdeq	sl, [r2], -r0
   450f4:	andeq	pc, r2, r4, lsl fp	; <UNPREDICTABLE>
   450f8:	andeq	r0, r0, pc, lsr r1
   450fc:	andeq	r5, r4, ip, lsr r0
   45100:	andeq	r5, r4, ip, ror r5
   45104:	andeq	r9, r2, r0, ror #22
   45108:	andeq	sl, r2, r4, lsr r8
   4510c:	andeq	r0, r0, r3, asr r1
   45110:	andeq	r3, r5, r8, ror r2
   45114:	andeq	r9, r2, ip, ror #21
   45118:	andeq	r0, r0, r5, asr r1
   4511c:			; <UNDEFINED> instruction: 0x0002a7b8
   45120:	andeq	r5, r2, r0, lsr r7
   45124:	muleq	r2, r4, sl
   45128:	andeq	sl, r2, r8, ror #14
   4512c:	andeq	r0, r0, r9, asr #2
   45130:	andeq	r9, r2, ip, ror #20
   45134:	andeq	sl, r2, r0, asr #14
   45138:	andeq	r0, r0, fp, asr r1
   4513c:	andeq	r9, r2, r4, asr #20
   45140:	andeq	sl, r2, r4, lsl r7
   45144:	andeq	r9, r2, r8, lsl sl
   45148:	andeq	sl, r2, r8, ror #13
   4514c:	andeq	r0, r0, r5, ror #2
   45150:	andeq	r9, r2, ip, ror #19
   45154:	andeq	sl, r2, r0, asr #13
   45158:	andeq	r9, r2, r0, asr #19
   4515c:	andeq	fp, r2, r8, ror #6
   45160:	andeq	r8, r2, r8, lsl #10
   45164:	andeq	r0, r0, sp, ror #12
   45168:	muleq	r2, r0, r9
   4516c:	ldrdeq	r8, [r2], -r4
   45170:	ldrdeq	r3, [r2], -ip
   45174:	andeq	r0, r0, pc, asr #12
   45178:	andeq	r9, r2, r0, ror #18
   4517c:	andeq	r8, r2, r4, lsr #9
   45180:	andeq	fp, r2, ip, ror #5
   45184:	andeq	r0, r0, r4, asr r6
   45188:	push	{r4, r5, r6, lr}
   4518c:	mov	r5, r2
   45190:	mov	r6, r3
   45194:	mov	r4, r0
   45198:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   4519c:	cmn	r0, #1
   451a0:	beq	45214 <blkid_probe_get_size@plt+0x3dcfc>
   451a4:	ldrb	r1, [r4, #39]	; 0x27
   451a8:	ldr	ip, [pc, #136]	; 45238 <blkid_probe_get_size@plt+0x3dd20>
   451ac:	tst	r1, #4
   451b0:	and	r1, r1, #3
   451b4:	add	ip, pc, ip
   451b8:	add	ip, ip, r1, lsl #4
   451bc:	ldrne	r4, [r4, #4]
   451c0:	ldr	r3, [ip, #4]
   451c4:	addeq	r4, r4, #4
   451c8:	cmp	r1, #1
   451cc:	mla	r0, r3, r0, r4
   451d0:	bls	451fc <blkid_probe_get_size@plt+0x3dce4>
   451d4:	cmp	r1, #2
   451d8:	ldreq	r3, [r0]
   451dc:	bne	45234 <blkid_probe_get_size@plt+0x3dd1c>
   451e0:	cmp	r6, #0
   451e4:	str	r3, [r5]
   451e8:	beq	4520c <blkid_probe_get_size@plt+0x3dcf4>
   451ec:	ldr	r3, [r0]
   451f0:	mov	r0, #1
   451f4:	str	r3, [r6]
   451f8:	pop	{r4, r5, r6, pc}
   451fc:	ldr	r3, [r0, #4]
   45200:	cmp	r6, #0
   45204:	str	r3, [r5]
   45208:	bne	451ec <blkid_probe_get_size@plt+0x3dcd4>
   4520c:	mov	r0, #1
   45210:	pop	{r4, r5, r6, pc}
   45214:	mov	r0, #0
   45218:	cmp	r6, #0
   4521c:	str	r0, [r5]
   45220:	beq	4522c <blkid_probe_get_size@plt+0x3dd14>
   45224:	str	r0, [r6]
   45228:	pop	{r4, r5, r6, pc}
   4522c:	mov	r0, r6
   45230:	pop	{r4, r5, r6, pc}
   45234:	bl	4399c <blkid_probe_get_size@plt+0x3c484>
   45238:	andeq	r5, r4, ip, asr r1
   4523c:	mov	r3, #0
   45240:	b	45188 <blkid_probe_get_size@plt+0x3dc70>
   45244:	andeq	r0, r0, r0
   45248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4524c:	sub	sp, sp, #132	; 0x84
   45250:	ldr	r6, [pc, #636]	; 454d4 <blkid_probe_get_size@plt+0x3dfbc>
   45254:	tst	r2, #1073741824	; 0x40000000
   45258:	add	r6, pc, r6
   4525c:	ldr	r4, [sp, #172]	; 0xac
   45260:	ldr	r5, [sp, #180]	; 0xb4
   45264:	movne	ip, #0
   45268:	bne	45278 <blkid_probe_get_size@plt+0x3dd60>
   4526c:	cmp	r2, #0
   45270:	rsblt	r2, r2, #0
   45274:	uxtb	ip, r2
   45278:	asr	r2, r1, #3
   4527c:	and	r2, r2, #127	; 0x7f
   45280:	str	r2, [sp, #104]	; 0x68
   45284:	cmp	r3, #0
   45288:	and	r2, r1, #7
   4528c:	str	r2, [sp, #100]	; 0x64
   45290:	beq	4549c <blkid_probe_get_size@plt+0x3df84>
   45294:	ldrb	r2, [r3]
   45298:	cmp	r2, #0
   4529c:	beq	453f4 <blkid_probe_get_size@plt+0x3dedc>
   452a0:	ldr	lr, [pc, #560]	; 454d8 <blkid_probe_get_size@plt+0x3dfc0>
   452a4:	ldr	r2, [pc, #560]	; 454dc <blkid_probe_get_size@plt+0x3dfc4>
   452a8:	add	lr, pc, lr
   452ac:	add	r2, pc, r2
   452b0:	str	r2, [sp, #120]	; 0x78
   452b4:	ldr	r2, [sp, #168]	; 0xa8
   452b8:	cmp	r2, #0
   452bc:	bne	45410 <blkid_probe_get_size@plt+0x3def8>
   452c0:	ldr	r7, [pc, #536]	; 454e0 <blkid_probe_get_size@plt+0x3dfc8>
   452c4:	cmp	r4, #0
   452c8:	add	r7, pc, r7
   452cc:	str	r2, [sp, #124]	; 0x7c
   452d0:	str	r7, [sp, #108]	; 0x6c
   452d4:	beq	45434 <blkid_probe_get_size@plt+0x3df1c>
   452d8:	ldrb	r2, [r4]
   452dc:	cmp	r2, #0
   452e0:	beq	45488 <blkid_probe_get_size@plt+0x3df70>
   452e4:	ldr	r2, [pc, #504]	; 454e4 <blkid_probe_get_size@plt+0x3dfcc>
   452e8:	add	r2, pc, r2
   452ec:	str	r2, [sp, #116]	; 0x74
   452f0:	ldr	r2, [pc, #496]	; 454e8 <blkid_probe_get_size@plt+0x3dfd0>
   452f4:	add	r2, pc, r2
   452f8:	str	r2, [sp, #112]	; 0x70
   452fc:	cmp	ip, #0
   45300:	bne	4544c <blkid_probe_get_size@plt+0x3df34>
   45304:	ldr	r8, [pc, #480]	; 454ec <blkid_probe_get_size@plt+0x3dfd4>
   45308:	cmp	r5, #0
   4530c:	add	r8, pc, r8
   45310:	mov	r9, ip
   45314:	mov	sl, r8
   45318:	beq	45468 <blkid_probe_get_size@plt+0x3df50>
   4531c:	ldrb	r2, [r5]
   45320:	cmp	r2, #0
   45324:	bne	4547c <blkid_probe_get_size@plt+0x3df64>
   45328:	ldr	r5, [pc, #448]	; 454f0 <blkid_probe_get_size@plt+0x3dfd8>
   4532c:	add	r5, pc, r5
   45330:	mov	fp, r5
   45334:	str	r5, [sp, #176]	; 0xb0
   45338:	ldr	r1, [pc, #436]	; 454f4 <blkid_probe_get_size@plt+0x3dfdc>
   4533c:	ldr	r2, [pc, #436]	; 454f8 <blkid_probe_get_size@plt+0x3dfe0>
   45340:	ldr	r1, [r6, r1]
   45344:	str	lr, [sp, #20]
   45348:	add	r2, pc, r2
   4534c:	ldr	r1, [r1]
   45350:	str	ip, [sp, #60]	; 0x3c
   45354:	ldr	ip, [sp, #112]	; 0x70
   45358:	str	r3, [sp, #16]
   4535c:	str	ip, [sp, #48]	; 0x30
   45360:	ldr	r3, [sp, #120]	; 0x78
   45364:	ldr	ip, [sp, #116]	; 0x74
   45368:	str	r3, [sp, #12]
   4536c:	str	ip, [sp, #40]	; 0x28
   45370:	ldr	r3, [sp, #104]	; 0x68
   45374:	ldr	ip, [sp, #108]	; 0x6c
   45378:	str	r3, [sp, #8]
   4537c:	str	ip, [sp, #36]	; 0x24
   45380:	ldr	r3, [sp, #100]	; 0x64
   45384:	ldr	ip, [sp, #168]	; 0xa8
   45388:	ldr	lr, [pc, #364]	; 454fc <blkid_probe_get_size@plt+0x3dfe4>
   4538c:	str	r5, [sp, #72]	; 0x48
   45390:	str	ip, [sp, #32]
   45394:	ldr	r5, [sp, #176]	; 0xb0
   45398:	ldr	ip, [sp, #124]	; 0x7c
   4539c:	add	lr, pc, lr
   453a0:	strd	r2, [sp]
   453a4:	str	r1, [sp, #92]	; 0x5c
   453a8:	mvn	r3, #0
   453ac:	mov	r2, #1
   453b0:	mov	r1, #2048	; 0x800
   453b4:	str	ip, [sp, #28]
   453b8:	str	lr, [sp, #88]	; 0x58
   453bc:	str	lr, [sp, #84]	; 0x54
   453c0:	str	fp, [sp, #76]	; 0x4c
   453c4:	str	r5, [sp, #68]	; 0x44
   453c8:	str	sl, [sp, #64]	; 0x40
   453cc:	strd	r8, [sp, #52]	; 0x34
   453d0:	str	r4, [sp, #44]	; 0x2c
   453d4:	str	r7, [sp, #24]
   453d8:	str	lr, [sp, #80]	; 0x50
   453dc:	bl	7260 <__snprintf_chk@plt>
   453e0:	cmp	r0, #2048	; 0x800
   453e4:	bcs	454b0 <blkid_probe_get_size@plt+0x3df98>
   453e8:	mov	r0, #0
   453ec:	add	sp, sp, #132	; 0x84
   453f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   453f4:	ldr	r3, [pc, #260]	; 45500 <blkid_probe_get_size@plt+0x3dfe8>
   453f8:	ldr	r2, [sp, #168]	; 0xa8
   453fc:	add	r3, pc, r3
   45400:	cmp	r2, #0
   45404:	str	r3, [sp, #120]	; 0x78
   45408:	mov	lr, r3
   4540c:	beq	452c0 <blkid_probe_get_size@plt+0x3dda8>
   45410:	ldr	r2, [pc, #236]	; 45504 <blkid_probe_get_size@plt+0x3dfec>
   45414:	ldr	r7, [pc, #236]	; 45508 <blkid_probe_get_size@plt+0x3dff0>
   45418:	add	r2, pc, r2
   4541c:	str	r2, [sp, #108]	; 0x6c
   45420:	cmp	r4, #0
   45424:	mov	r2, #1
   45428:	add	r7, pc, r7
   4542c:	str	r2, [sp, #124]	; 0x7c
   45430:	bne	452d8 <blkid_probe_get_size@plt+0x3ddc0>
   45434:	ldr	r4, [pc, #208]	; 4550c <blkid_probe_get_size@plt+0x3dff4>
   45438:	cmp	ip, #0
   4543c:	add	r4, pc, r4
   45440:	str	r4, [sp, #116]	; 0x74
   45444:	str	r4, [sp, #112]	; 0x70
   45448:	beq	45304 <blkid_probe_get_size@plt+0x3ddec>
   4544c:	ldr	r8, [pc, #188]	; 45510 <blkid_probe_get_size@plt+0x3dff8>
   45450:	ldr	sl, [pc, #188]	; 45514 <blkid_probe_get_size@plt+0x3dffc>
   45454:	cmp	r5, #0
   45458:	add	r8, pc, r8
   4545c:	add	sl, pc, sl
   45460:	mov	r9, #1
   45464:	bne	4531c <blkid_probe_get_size@plt+0x3de04>
   45468:	ldr	r5, [pc, #168]	; 45518 <blkid_probe_get_size@plt+0x3e000>
   4546c:	add	r5, pc, r5
   45470:	str	r5, [sp, #176]	; 0xb0
   45474:	mov	fp, r5
   45478:	b	45338 <blkid_probe_get_size@plt+0x3de20>
   4547c:	ldr	fp, [pc, #152]	; 4551c <blkid_probe_get_size@plt+0x3e004>
   45480:	add	fp, pc, fp
   45484:	b	45338 <blkid_probe_get_size@plt+0x3de20>
   45488:	ldr	r4, [pc, #144]	; 45520 <blkid_probe_get_size@plt+0x3e008>
   4548c:	add	r4, pc, r4
   45490:	str	r4, [sp, #116]	; 0x74
   45494:	str	r4, [sp, #112]	; 0x70
   45498:	b	452fc <blkid_probe_get_size@plt+0x3dde4>
   4549c:	ldr	r3, [pc, #128]	; 45524 <blkid_probe_get_size@plt+0x3e00c>
   454a0:	add	r3, pc, r3
   454a4:	str	r3, [sp, #120]	; 0x78
   454a8:	mov	lr, r3
   454ac:	b	452b4 <blkid_probe_get_size@plt+0x3dd9c>
   454b0:	ldr	r3, [pc, #112]	; 45528 <blkid_probe_get_size@plt+0x3e010>
   454b4:	ldr	r0, [pc, #112]	; 4552c <blkid_probe_get_size@plt+0x3e014>
   454b8:	mov	r2, #18
   454bc:	ldr	r3, [r6, r3]
   454c0:	mov	r1, #1
   454c4:	add	r0, pc, r0
   454c8:	ldr	r3, [r3]
   454cc:	bl	71dc <fwrite@plt>
   454d0:	bl	6d98 <abort@plt>
   454d4:	andeq	r2, r5, r0, lsl r9
   454d8:	andeq	r1, r2, ip, lsr #4
   454dc:	andeq	ip, r2, r4, lsr #22
   454e0:	andeq	r1, r2, r4, lsr #4
   454e4:	andeq	ip, r2, r0, lsl #22
   454e8:	andeq	r1, r2, r0, ror #3
   454ec:	andeq	r1, r2, r0, ror #3
   454f0:	andeq	r1, r2, r0, asr #3
   454f4:	andeq	r0, r0, r0, lsl #9
   454f8:			; <UNDEFINED> instruction: 0x0002cab4
   454fc:	andeq	r1, r2, r0, asr r1
   45500:	strdeq	r1, [r2], -r0
   45504:	strheq	r1, [r2], -ip
   45508:			; <UNDEFINED> instruction: 0x0002c9b4
   4550c:	strheq	r1, [r2], -r0
   45510:	muleq	r2, ip, r9
   45514:	andeq	r1, r2, r8, ror r0
   45518:	andeq	r1, r2, r0, lsl #1
   4551c:	andeq	r1, r2, r4, asr r0
   45520:	andeq	r1, r2, r0, rrx
   45524:	andeq	r1, r2, ip, asr #32
   45528:	andeq	r0, r0, ip, asr r4
   4552c:	andeq	ip, r2, ip, lsr #19
   45530:	ldr	ip, [pc, #356]	; 4569c <blkid_probe_get_size@plt+0x3e184>
   45534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45538:	sub	sp, sp, #2144	; 0x860
   4553c:	ldr	lr, [pc, #348]	; 456a0 <blkid_probe_get_size@plt+0x3e188>
   45540:	sub	sp, sp, #12
   45544:	add	ip, pc, ip
   45548:	str	r0, [sp, #24]
   4554c:	ldr	lr, [ip, lr]
   45550:	ldr	r5, [pc, #332]	; 456a4 <blkid_probe_get_size@plt+0x3e18c>
   45554:	str	lr, [sp, #20]
   45558:	ldr	lr, [lr]
   4555c:	add	r7, sp, #68	; 0x44
   45560:	str	lr, [sp, #2148]	; 0x864
   45564:	add	r5, pc, r5
   45568:	ldr	lr, [sp, #2196]	; 0x894
   4556c:	ldr	ip, [sp, #2192]	; 0x890
   45570:	mov	sl, r1
   45574:	mov	fp, r2
   45578:	mov	r0, r7
   4557c:	mov	r2, #32
   45580:	mov	r1, #0
   45584:	str	r3, [sp, #28]
   45588:	str	ip, [sp, #32]
   4558c:	str	lr, [sp, #36]	; 0x24
   45590:	ldr	r4, [sp, #2200]	; 0x898
   45594:	ldr	r9, [sp, #2204]	; 0x89c
   45598:	bl	6c84 <memset@plt>
   4559c:	ldr	r3, [r5]
   455a0:	mov	r0, #0
   455a4:	cmp	r3, #0
   455a8:	str	r0, [sp, #56]	; 0x38
   455ac:	str	r0, [sp, #40]	; 0x28
   455b0:	str	r0, [sp, #44]	; 0x2c
   455b4:	str	r0, [sp, #48]	; 0x30
   455b8:	str	r0, [sp, #52]	; 0x34
   455bc:	str	r0, [sp, #60]	; 0x3c
   455c0:	str	r0, [sp, #64]	; 0x40
   455c4:	blt	45668 <blkid_probe_get_size@plt+0x3e150>
   455c8:	ldr	lr, [sp, #36]	; 0x24
   455cc:	ldr	ip, [sp, #32]
   455d0:	ldr	r3, [sp, #28]
   455d4:	add	r8, sp, #100	; 0x64
   455d8:	str	lr, [sp, #8]
   455dc:	str	ip, [sp, #4]
   455e0:	mov	r2, sl
   455e4:	ldr	r1, [sp, #24]
   455e8:	str	r4, [sp, #12]
   455ec:	str	r3, [sp]
   455f0:	mov	r0, r8
   455f4:	mov	r3, fp
   455f8:	bl	45248 <blkid_probe_get_size@plt+0x3dd30>
   455fc:	mov	r0, r8
   45600:	bl	723c <strlen@plt>
   45604:	add	r3, sp, #76	; 0x4c
   45608:	str	r8, [sp, #68]	; 0x44
   4560c:	add	r4, sp, #104	; 0x68
   45610:	sub	r4, r4, #12
   45614:	add	r6, sp, #40	; 0x28
   45618:	str	r0, [sp, #72]	; 0x48
   4561c:	ldmib	r5, {r0, r1}
   45620:	stm	r3, {r0, r1}
   45624:	mov	r0, r9
   45628:	bl	723c <strlen@plt>
   4562c:	add	r3, r5, #12
   45630:	mov	r1, #4
   45634:	str	r1, [sp, #52]	; 0x34
   45638:	mov	r2, #16384	; 0x4000
   4563c:	str	r9, [sp, #84]	; 0x54
   45640:	str	r7, [sp, #48]	; 0x30
   45644:	str	r0, [sp, #88]	; 0x58
   45648:	ldm	r3, {r0, r1}
   4564c:	stm	r4, {r0, r1}
   45650:	mov	r1, r6
   45654:	ldr	r0, [r5]
   45658:	bl	73e0 <sendmsg@plt>
   4565c:	cmp	r0, #0
   45660:	movge	r0, #1
   45664:	blt	45688 <blkid_probe_get_size@plt+0x3e170>
   45668:	ldr	r3, [sp, #20]
   4566c:	ldr	r2, [sp, #2148]	; 0x864
   45670:	ldr	r3, [r3]
   45674:	cmp	r2, r3
   45678:	bne	45698 <blkid_probe_get_size@plt+0x3e180>
   4567c:	add	sp, sp, #2144	; 0x860
   45680:	add	sp, sp, #12
   45684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45688:	bl	732c <__errno_location@plt>
   4568c:	ldr	r0, [r0]
   45690:	rsb	r0, r0, #0
   45694:	b	45668 <blkid_probe_get_size@plt+0x3e150>
   45698:	bl	6fb4 <__stack_chk_fail@plt>
   4569c:	andeq	r2, r5, r4, lsr #12
   456a0:	andeq	r0, r0, ip, lsr r4
   456a4:	andeq	r2, r5, r4, asr #23
   456a8:	ldr	ip, [pc, #1932]	; 45e3c <blkid_probe_get_size@plt+0x3e924>
   456ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   456b0:	add	ip, pc, ip
   456b4:	ldr	lr, [pc, #1924]	; 45e40 <blkid_probe_get_size@plt+0x3e928>
   456b8:	sub	sp, sp, #76	; 0x4c
   456bc:	mov	r3, #0
   456c0:	ldr	ip, [ip, lr]
   456c4:	mov	r2, r3
   456c8:	str	ip, [sp, #24]
   456cc:	ldr	ip, [ip]
   456d0:	str	r1, [sp, #44]	; 0x2c
   456d4:	add	r1, sp, #56	; 0x38
   456d8:	str	r3, [sp, #40]	; 0x28
   456dc:	str	ip, [sp, #68]	; 0x44
   456e0:	str	r3, [sp, #48]	; 0x30
   456e4:	str	r3, [sp, #52]	; 0x34
   456e8:	str	r3, [sp, #56]	; 0x38
   456ec:	str	r3, [sp, #60]	; 0x3c
   456f0:	str	r3, [sp, #64]	; 0x40
   456f4:	str	r0, [sp, #12]
   456f8:	bl	2d360 <blkid_probe_get_size@plt+0x25e48>
   456fc:	subs	r5, r0, #0
   45700:	blt	45824 <blkid_probe_get_size@plt+0x3e30c>
   45704:	ldr	r4, [sp, #56]	; 0x38
   45708:	ldrb	r6, [r4]
   4570c:	cmp	r6, #0
   45710:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   45714:	ldr	r3, [pc, #1832]	; 45e44 <blkid_probe_get_size@plt+0x3e92c>
   45718:	mov	sl, #1
   4571c:	add	r3, pc, r3
   45720:	str	r3, [sp, #32]
   45724:	ldr	r3, [pc, #1820]	; 45e48 <blkid_probe_get_size@plt+0x3e930>
   45728:	add	r3, pc, r3
   4572c:	str	r3, [sp, #36]	; 0x24
   45730:	ldr	r5, [pc, #1812]	; 45e4c <blkid_probe_get_size@plt+0x3e934>
   45734:	ldr	r7, [pc, #1812]	; 45e50 <blkid_probe_get_size@plt+0x3e938>
   45738:	add	r5, pc, r5
   4573c:	add	r7, pc, r7
   45740:	mov	r1, r6
   45744:	mov	r0, r5
   45748:	bl	74c4 <strchr@plt>
   4574c:	cmp	r0, #0
   45750:	beq	457c0 <blkid_probe_get_size@plt+0x3e2a8>
   45754:	ldrb	r1, [r4, #1]
   45758:	add	r4, r4, #1
   4575c:	cmp	r1, #0
   45760:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   45764:	ldr	r5, [pc, #1768]	; 45e54 <blkid_probe_get_size@plt+0x3e93c>
   45768:	add	r5, pc, r5
   4576c:	cmp	r1, #92	; 0x5c
   45770:	ldrb	r6, [r4, #1]
   45774:	beq	457e4 <blkid_probe_get_size@plt+0x3e2cc>
   45778:	mov	r0, r5
   4577c:	bl	74c4 <strchr@plt>
   45780:	add	r4, r4, #1
   45784:	cmp	r0, #0
   45788:	beq	4585c <blkid_probe_get_size@plt+0x3e344>
   4578c:	cmp	r6, #0
   45790:	add	sl, sl, #1
   45794:	bne	45730 <blkid_probe_get_size@plt+0x3e218>
   45798:	ldr	r3, [sp, #64]	; 0x40
   4579c:	str	r3, [sp, #28]
   457a0:	ldr	r0, [sp, #28]
   457a4:	bl	69f0 <free@plt>
   457a8:	ldr	r0, [sp, #60]	; 0x3c
   457ac:	bl	69f0 <free@plt>
   457b0:	ldr	r0, [sp, #56]	; 0x38
   457b4:	bl	69f0 <free@plt>
   457b8:	ldr	r5, [sp, #40]	; 0x28
   457bc:	b	4583c <blkid_probe_get_size@plt+0x3e324>
   457c0:	mov	r1, r6
   457c4:	mov	r0, r7
   457c8:	bl	74c4 <strchr@plt>
   457cc:	cmp	r0, #0
   457d0:	beq	4586c <blkid_probe_get_size@plt+0x3e354>
   457d4:	ldrb	r6, [r4, #1]!
   457d8:	cmp	r6, #0
   457dc:	bne	45740 <blkid_probe_get_size@plt+0x3e228>
   457e0:	b	45798 <blkid_probe_get_size@plt+0x3e280>
   457e4:	cmp	r6, #0
   457e8:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   457ec:	ldrb	r1, [r4, #2]
   457f0:	add	r4, r4, #2
   457f4:	cmp	r1, #0
   457f8:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   457fc:	cmp	r1, #92	; 0x5c
   45800:	ldrb	r6, [r4, #1]
   45804:	bne	45778 <blkid_probe_get_size@plt+0x3e260>
   45808:	cmp	r6, #0
   4580c:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   45810:	ldrb	r1, [r4, #2]!
   45814:	cmp	r1, #0
   45818:	bne	457fc <blkid_probe_get_size@plt+0x3e2e4>
   4581c:	b	45798 <blkid_probe_get_size@plt+0x3e280>
   45820:	mvn	r5, #11
   45824:	ldr	r0, [sp, #64]	; 0x40
   45828:	bl	69f0 <free@plt>
   4582c:	ldr	r0, [sp, #60]	; 0x3c
   45830:	bl	69f0 <free@plt>
   45834:	ldr	r0, [sp, #56]	; 0x38
   45838:	bl	69f0 <free@plt>
   4583c:	ldr	r3, [sp, #24]
   45840:	ldr	r2, [sp, #68]	; 0x44
   45844:	mov	r0, r5
   45848:	ldr	r3, [r3]
   4584c:	cmp	r2, r3
   45850:	bne	45e38 <blkid_probe_get_size@plt+0x3e920>
   45854:	add	sp, sp, #76	; 0x4c
   45858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4585c:	cmp	r6, #0
   45860:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   45864:	mov	r1, r6
   45868:	b	4576c <blkid_probe_get_size@plt+0x3e254>
   4586c:	add	r9, sp, #48	; 0x30
   45870:	add	r8, sp, #60	; 0x3c
   45874:	mov	r1, r9
   45878:	mov	r0, r8
   4587c:	mov	r3, #1
   45880:	mov	r2, #2
   45884:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45888:	cmp	r0, #0
   4588c:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45890:	ldr	r3, [sp, #60]	; 0x3c
   45894:	add	r7, r4, #1
   45898:	strb	r6, [r3]
   4589c:	ldrb	r6, [r4, #1]
   458a0:	cmp	r6, #0
   458a4:	beq	45798 <blkid_probe_get_size@plt+0x3e280>
   458a8:	ldr	r5, [pc, #1448]	; 45e58 <blkid_probe_get_size@plt+0x3e940>
   458ac:	ldr	r3, [pc, #1448]	; 45e5c <blkid_probe_get_size@plt+0x3e944>
   458b0:	add	r5, pc, r5
   458b4:	add	r3, pc, r3
   458b8:	mvn	fp, #0
   458bc:	str	r3, [sp, #16]
   458c0:	rsb	r3, r4, #2
   458c4:	str	r3, [sp, #20]
   458c8:	str	r9, [sp, #28]
   458cc:	mov	r1, r6
   458d0:	mov	r0, r5
   458d4:	bl	74c4 <strchr@plt>
   458d8:	sub	r9, r7, r4
   458dc:	cmp	r0, #0
   458e0:	beq	458fc <blkid_probe_get_size@plt+0x3e3e4>
   458e4:	ldrb	r6, [r7, #1]
   458e8:	add	sl, sl, #1
   458ec:	add	r4, r7, #1
   458f0:	cmp	r6, #0
   458f4:	bne	45730 <blkid_probe_get_size@plt+0x3e218>
   458f8:	b	45798 <blkid_probe_get_size@plt+0x3e280>
   458fc:	cmp	r6, #61	; 0x3d
   45900:	beq	4595c <blkid_probe_get_size@plt+0x3e444>
   45904:	mov	r1, r6
   45908:	ldr	r0, [sp, #16]
   4590c:	bl	74c4 <strchr@plt>
   45910:	cmp	r0, #0
   45914:	mvneq	fp, #0
   45918:	beq	45924 <blkid_probe_get_size@plt+0x3e40c>
   4591c:	cmn	fp, #1
   45920:	moveq	fp, r9
   45924:	ldr	r2, [sp, #20]
   45928:	mov	r3, #1
   4592c:	add	r2, r7, r2
   45930:	ldr	r1, [sp, #28]
   45934:	mov	r0, r8
   45938:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4593c:	cmp	r0, #0
   45940:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45944:	ldr	r3, [sp, #60]	; 0x3c
   45948:	strb	r6, [r3, r9]
   4594c:	ldrb	r6, [r7, #1]!
   45950:	cmp	r6, #0
   45954:	bne	458cc <blkid_probe_get_size@plt+0x3e3b4>
   45958:	b	45798 <blkid_probe_get_size@plt+0x3e280>
   4595c:	ldrb	r8, [r7, #1]
   45960:	str	r9, [sp, #16]
   45964:	str	r0, [sp, #28]
   45968:	cmp	r8, #0
   4596c:	add	r4, r7, #1
   45970:	beq	45e30 <blkid_probe_get_size@plt+0x3e918>
   45974:	ldr	r7, [sp, #28]
   45978:	add	r6, sp, #52	; 0x34
   4597c:	mov	r1, r8
   45980:	mov	r0, r5
   45984:	bl	74c4 <strchr@plt>
   45988:	cmp	r0, #0
   4598c:	beq	45a0c <blkid_probe_get_size@plt+0x3e4f4>
   45990:	ldr	r3, [sp, #60]	; 0x3c
   45994:	ldr	r1, [sp, #16]
   45998:	mov	r2, #0
   4599c:	add	sl, sl, #1
   459a0:	strb	r2, [r3, r1]
   459a4:	ldr	r3, [sp, #64]	; 0x40
   459a8:	cmp	r3, r2
   459ac:	strbne	r2, [r3, r7]
   459b0:	ldr	r2, [sp, #60]	; 0x3c
   459b4:	cmn	fp, #1
   459b8:	movne	r3, #0
   459bc:	add	r1, sp, #40	; 0x28
   459c0:	strbne	r3, [r2, fp]
   459c4:	str	r1, [sp, #4]
   459c8:	add	r1, sp, #44	; 0x2c
   459cc:	ldrne	r2, [sp, #60]	; 0x3c
   459d0:	str	r1, [sp]
   459d4:	ldr	r3, [sp, #64]	; 0x40
   459d8:	mov	r1, sl
   459dc:	ldr	r0, [sp, #12]
   459e0:	bl	2e0cc <blkid_probe_get_size@plt+0x26bb4>
   459e4:	cmp	r0, #0
   459e8:	blt	45dd8 <blkid_probe_get_size@plt+0x3e8c0>
   459ec:	mov	r3, #0
   459f0:	str	r3, [sp, #64]	; 0x40
   459f4:	str	r3, [sp, #52]	; 0x34
   459f8:	ldrb	r6, [r4, #1]
   459fc:	add	r4, r4, #1
   45a00:	cmp	r6, r3
   45a04:	bne	45730 <blkid_probe_get_size@plt+0x3e218>
   45a08:	b	457a0 <blkid_probe_get_size@plt+0x3e288>
   45a0c:	cmp	r8, #39	; 0x27
   45a10:	beq	45ba8 <blkid_probe_get_size@plt+0x3e690>
   45a14:	cmp	r8, #34	; 0x22
   45a18:	beq	45c8c <blkid_probe_get_size@plt+0x3e774>
   45a1c:	cmp	r8, #92	; 0x5c
   45a20:	beq	45a68 <blkid_probe_get_size@plt+0x3e550>
   45a24:	mov	r1, r8
   45a28:	ldr	r0, [sp, #32]
   45a2c:	bl	74c4 <strchr@plt>
   45a30:	cmp	r0, #0
   45a34:	beq	45de0 <blkid_probe_get_size@plt+0x3e8c8>
   45a38:	ldrb	r8, [r4, #1]!
   45a3c:	cmp	r8, #0
   45a40:	bne	4597c <blkid_probe_get_size@plt+0x3e464>
   45a44:	mvn	r5, #0
   45a48:	ldr	r3, [sp, #60]	; 0x3c
   45a4c:	ldr	r1, [sp, #16]
   45a50:	mov	r2, #0
   45a54:	strb	r2, [r3, r1]
   45a58:	ldr	r3, [sp, #64]	; 0x40
   45a5c:	cmp	r3, r2
   45a60:	bne	45c34 <blkid_probe_get_size@plt+0x3e71c>
   45a64:	b	45c3c <blkid_probe_get_size@plt+0x3e724>
   45a68:	ldrb	r5, [r4, #1]
   45a6c:	add	r4, r4, #1
   45a70:	cmp	r5, #0
   45a74:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45a78:	ldr	r0, [pc, #992]	; 45e60 <blkid_probe_get_size@plt+0x3e948>
   45a7c:	mov	r1, r5
   45a80:	add	r0, pc, r0
   45a84:	bl	74c4 <strchr@plt>
   45a88:	cmp	r0, #0
   45a8c:	beq	45b68 <blkid_probe_get_size@plt+0x3e650>
   45a90:	ldrb	r6, [r4, #1]
   45a94:	add	r4, r4, #1
   45a98:	cmp	r6, #0
   45a9c:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45aa0:	ldr	r8, [pc, #956]	; 45e64 <blkid_probe_get_size@plt+0x3e94c>
   45aa4:	ldr	r3, [pc, #956]	; 45e68 <blkid_probe_get_size@plt+0x3e950>
   45aa8:	mvn	r5, #0
   45aac:	add	r8, pc, r8
   45ab0:	add	r9, sp, #52	; 0x34
   45ab4:	add	r3, pc, r3
   45ab8:	str	r3, [sp, #20]
   45abc:	mov	r1, r6
   45ac0:	mov	r0, r8
   45ac4:	bl	74c4 <strchr@plt>
   45ac8:	cmp	r0, #0
   45acc:	beq	45b04 <blkid_probe_get_size@plt+0x3e5ec>
   45ad0:	ldr	r3, [sp, #60]	; 0x3c
   45ad4:	ldr	r1, [sp, #16]
   45ad8:	mov	r2, #0
   45adc:	add	sl, sl, #1
   45ae0:	strb	r2, [r3, r1]
   45ae4:	ldr	r3, [sp, #64]	; 0x40
   45ae8:	cmp	r3, r2
   45aec:	strbne	r2, [r3, r7]
   45af0:	cmn	r5, #1
   45af4:	movne	r2, #0
   45af8:	ldrne	r3, [sp, #64]	; 0x40
   45afc:	strbne	r2, [r3, r5]
   45b00:	b	459b0 <blkid_probe_get_size@plt+0x3e498>
   45b04:	cmp	r6, #92	; 0x5c
   45b08:	beq	45a68 <blkid_probe_get_size@plt+0x3e550>
   45b0c:	mov	r1, r6
   45b10:	ldr	r0, [sp, #20]
   45b14:	bl	74c4 <strchr@plt>
   45b18:	cmp	r0, #0
   45b1c:	mvneq	r5, #0
   45b20:	beq	45b2c <blkid_probe_get_size@plt+0x3e614>
   45b24:	cmn	r5, #1
   45b28:	moveq	r5, r7
   45b2c:	mov	r3, #1
   45b30:	add	r2, r7, #2
   45b34:	mov	r1, r9
   45b38:	add	r0, sp, #64	; 0x40
   45b3c:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45b40:	cmp	r0, #0
   45b44:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45b48:	ldr	r2, [sp, #64]	; 0x40
   45b4c:	add	r3, r7, #1
   45b50:	strb	r6, [r2, r7]
   45b54:	ldrb	r6, [r4, #1]!
   45b58:	cmp	r6, #0
   45b5c:	beq	45e20 <blkid_probe_get_size@plt+0x3e908>
   45b60:	mov	r7, r3
   45b64:	b	45abc <blkid_probe_get_size@plt+0x3e5a4>
   45b68:	mov	r3, #1
   45b6c:	add	r2, r7, #2
   45b70:	add	r1, sp, #52	; 0x34
   45b74:	add	r0, sp, #64	; 0x40
   45b78:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45b7c:	cmp	r0, #0
   45b80:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45b84:	ldr	r2, [sp, #64]	; 0x40
   45b88:	add	r3, r7, #1
   45b8c:	add	r4, r4, #1
   45b90:	strb	r5, [r2, r7]
   45b94:	ldrb	r6, [r4]
   45b98:	cmp	r6, #0
   45b9c:	beq	45e18 <blkid_probe_get_size@plt+0x3e900>
   45ba0:	mov	r7, r3
   45ba4:	b	45aa0 <blkid_probe_get_size@plt+0x3e588>
   45ba8:	ldrb	r8, [r4, #1]
   45bac:	add	r4, r4, #1
   45bb0:	cmp	r8, #0
   45bb4:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45bb8:	cmp	r8, #39	; 0x27
   45bbc:	add	r9, sp, #64	; 0x40
   45bc0:	beq	45c04 <blkid_probe_get_size@plt+0x3e6ec>
   45bc4:	mov	r3, #1
   45bc8:	add	r2, r7, #2
   45bcc:	mov	r1, r6
   45bd0:	mov	r0, r9
   45bd4:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45bd8:	cmp	r0, #0
   45bdc:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45be0:	ldr	r2, [sp, #64]	; 0x40
   45be4:	add	r3, r7, #1
   45be8:	strb	r8, [r2, r7]
   45bec:	ldrb	r8, [r4, #1]!
   45bf0:	mov	r7, r3
   45bf4:	cmp	r8, #0
   45bf8:	beq	45a44 <blkid_probe_get_size@plt+0x3e52c>
   45bfc:	cmp	r8, #39	; 0x27
   45c00:	bne	45bc4 <blkid_probe_get_size@plt+0x3e6ac>
   45c04:	ldrb	r8, [r4, #1]
   45c08:	add	r4, r4, #1
   45c0c:	cmp	r8, #0
   45c10:	bne	4597c <blkid_probe_get_size@plt+0x3e464>
   45c14:	ldr	r3, [sp, #60]	; 0x3c
   45c18:	ldr	r2, [sp, #16]
   45c1c:	mov	r8, #0
   45c20:	strb	r8, [r3, r2]
   45c24:	ldr	r3, [sp, #64]	; 0x40
   45c28:	cmp	r3, r8
   45c2c:	mvnne	r5, #0
   45c30:	beq	45c4c <blkid_probe_get_size@plt+0x3e734>
   45c34:	mov	r2, #0
   45c38:	strb	r2, [r3, r7]
   45c3c:	cmp	r8, #0
   45c40:	movne	r2, #0
   45c44:	ldrne	r3, [sp, #64]	; 0x40
   45c48:	strbne	r2, [r3, r5]
   45c4c:	ldr	r2, [sp, #60]	; 0x3c
   45c50:	cmn	fp, #1
   45c54:	movne	r3, #0
   45c58:	add	ip, sp, #40	; 0x28
   45c5c:	strbne	r3, [r2, fp]
   45c60:	str	ip, [sp, #4]
   45c64:	add	ip, sp, #44	; 0x2c
   45c68:	ldrne	r2, [sp, #60]	; 0x3c
   45c6c:	ldr	r3, [sp, #64]	; 0x40
   45c70:	mov	r1, sl
   45c74:	ldr	r0, [sp, #12]
   45c78:	str	ip, [sp]
   45c7c:	bl	2e0cc <blkid_probe_get_size@plt+0x26bb4>
   45c80:	subs	r5, r0, #0
   45c84:	bge	457a8 <blkid_probe_get_size@plt+0x3e290>
   45c88:	b	45824 <blkid_probe_get_size@plt+0x3e30c>
   45c8c:	ldrb	r8, [r4, #1]
   45c90:	add	r4, r4, #1
   45c94:	cmp	r8, #0
   45c98:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45c9c:	str	r5, [sp, #20]
   45ca0:	ldr	r5, [sp, #36]	; 0x24
   45ca4:	cmp	r8, #34	; 0x22
   45ca8:	add	r9, sp, #64	; 0x40
   45cac:	beq	45cf8 <blkid_probe_get_size@plt+0x3e7e0>
   45cb0:	cmp	r8, #92	; 0x5c
   45cb4:	beq	45d10 <blkid_probe_get_size@plt+0x3e7f8>
   45cb8:	mov	r3, #1
   45cbc:	add	r2, r7, #2
   45cc0:	mov	r1, r6
   45cc4:	mov	r0, r9
   45cc8:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45ccc:	cmp	r0, #0
   45cd0:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45cd4:	ldr	r2, [sp, #64]	; 0x40
   45cd8:	add	r3, r7, #1
   45cdc:	strb	r8, [r2, r7]
   45ce0:	ldrb	r8, [r4, #1]!
   45ce4:	mov	r7, r3
   45ce8:	cmp	r8, #0
   45cec:	beq	45a44 <blkid_probe_get_size@plt+0x3e52c>
   45cf0:	cmp	r8, #34	; 0x22
   45cf4:	bne	45cb0 <blkid_probe_get_size@plt+0x3e798>
   45cf8:	ldrb	r8, [r4, #1]
   45cfc:	ldr	r5, [sp, #20]
   45d00:	add	r4, r4, #1
   45d04:	cmp	r8, #0
   45d08:	bne	4597c <blkid_probe_get_size@plt+0x3e464>
   45d0c:	b	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45d10:	ldrb	r9, [r4, #1]
   45d14:	cmp	r9, #0
   45d18:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45d1c:	cmp	r9, #34	; 0x22
   45d20:	beq	45d50 <blkid_probe_get_size@plt+0x3e838>
   45d24:	mov	r1, r9
   45d28:	mov	r0, r5
   45d2c:	bl	74c4 <strchr@plt>
   45d30:	cmp	r0, #0
   45d34:	beq	45d90 <blkid_probe_get_size@plt+0x3e878>
   45d38:	ldrb	r8, [r4, #2]
   45d3c:	add	r3, r4, #2
   45d40:	cmp	r8, #0
   45d44:	beq	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45d48:	mov	r4, r3
   45d4c:	b	45ca4 <blkid_probe_get_size@plt+0x3e78c>
   45d50:	mov	r3, #1
   45d54:	add	r2, r7, #2
   45d58:	mov	r1, r6
   45d5c:	add	r0, sp, #64	; 0x40
   45d60:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45d64:	cmp	r0, #0
   45d68:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45d6c:	ldr	r3, [sp, #64]	; 0x40
   45d70:	add	r2, r7, #1
   45d74:	strb	r9, [r3, r7]
   45d78:	ldrb	r8, [r4, #2]
   45d7c:	add	r3, r4, #2
   45d80:	mov	r7, r2
   45d84:	cmp	r8, #0
   45d88:	bne	45d48 <blkid_probe_get_size@plt+0x3e830>
   45d8c:	b	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45d90:	mov	r3, #1
   45d94:	add	r2, r7, #3
   45d98:	mov	r1, r6
   45d9c:	add	r0, sp, #64	; 0x40
   45da0:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45da4:	cmp	r0, #0
   45da8:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45dac:	ldr	r3, [sp, #64]	; 0x40
   45db0:	add	r2, r7, #1
   45db4:	strb	r8, [r3, r7]
   45db8:	ldr	r1, [sp, #64]	; 0x40
   45dbc:	add	r3, r4, #2
   45dc0:	add	r7, r7, #2
   45dc4:	strb	r9, [r1, r2]
   45dc8:	ldrb	r8, [r4, #2]
   45dcc:	cmp	r8, #0
   45dd0:	bne	45d48 <blkid_probe_get_size@plt+0x3e830>
   45dd4:	b	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45dd8:	mov	r5, r0
   45ddc:	b	45824 <blkid_probe_get_size@plt+0x3e30c>
   45de0:	mov	r3, #1
   45de4:	add	r2, r7, #2
   45de8:	add	r1, sp, #52	; 0x34
   45dec:	add	r0, sp, #64	; 0x40
   45df0:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   45df4:	cmp	r0, #0
   45df8:	beq	45820 <blkid_probe_get_size@plt+0x3e308>
   45dfc:	ldr	r2, [sp, #64]	; 0x40
   45e00:	add	r3, r7, #1
   45e04:	add	r4, r4, #1
   45e08:	strb	r8, [r2, r7]
   45e0c:	ldrb	r6, [r4]
   45e10:	cmp	r6, #0
   45e14:	bne	45ba0 <blkid_probe_get_size@plt+0x3e688>
   45e18:	mov	r7, r3
   45e1c:	b	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45e20:	adds	r8, r5, #1
   45e24:	mov	r7, r3
   45e28:	movne	r8, #1
   45e2c:	b	45a48 <blkid_probe_get_size@plt+0x3e530>
   45e30:	mov	r7, r8
   45e34:	b	45c14 <blkid_probe_get_size@plt+0x3e6fc>
   45e38:	bl	6fb4 <__stack_chk_fail@plt>
   45e3c:			; <UNDEFINED> instruction: 0x000524b8
   45e40:	andeq	r0, r0, ip, lsr r4
   45e44:	andeq	r5, r2, r0, lsl #13
   45e48:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>
   45e4c:	andeq	ip, r2, ip, asr #14
   45e50:	andeq	r5, r2, r0, ror #12
   45e54:	andeq	pc, r1, r0, lsr ip	; <UNPREDICTABLE>
   45e58:	andeq	pc, r1, r8, ror #21
   45e5c:	andeq	r5, r2, r8, ror #9
   45e60:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   45e64:	andeq	pc, r1, ip, ror #17
   45e68:	andeq	r5, r2, r8, ror #5
   45e6c:	ldr	r3, [pc, #516]	; 46078 <blkid_probe_get_size@plt+0x3eb60>
   45e70:	ldr	r1, [pc, #516]	; 4607c <blkid_probe_get_size@plt+0x3eb64>
   45e74:	add	r3, pc, r3
   45e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45e7c:	mov	r4, r2
   45e80:	sub	sp, sp, #548	; 0x224
   45e84:	ldr	r2, [r3, r1]
   45e88:	ldr	fp, [pc, #496]	; 46080 <blkid_probe_get_size@plt+0x3eb68>
   45e8c:	ldr	r8, [pc, #496]	; 46084 <blkid_probe_get_size@plt+0x3eb6c>
   45e90:	ldr	r7, [sp, #584]	; 0x248
   45e94:	ldr	r3, [r4]
   45e98:	ldr	sl, [sp, #592]	; 0x250
   45e9c:	ldr	r5, [pc, #484]	; 46088 <blkid_probe_get_size@plt+0x3eb70>
   45ea0:	str	r2, [sp, #12]
   45ea4:	mov	r6, r0
   45ea8:	ldr	r2, [r2]
   45eac:	add	fp, pc, fp
   45eb0:	add	r8, pc, r8
   45eb4:	str	r2, [sp, #540]	; 0x21c
   45eb8:	add	r3, r3, #1
   45ebc:	cmp	r3, #16
   45ec0:	bhi	46018 <blkid_probe_get_size@plt+0x3eb00>
   45ec4:	bl	732c <__errno_location@plt>
   45ec8:	eor	ip, r7, r7, asr #31
   45ecc:	sub	ip, ip, r7, asr #31
   45ed0:	mov	r3, sl
   45ed4:	uxtb	ip, ip
   45ed8:	mov	r2, fp
   45edc:	mov	r1, #1
   45ee0:	str	sl, [sp, #20]
   45ee4:	str	ip, [r0]
   45ee8:	add	r0, sp, #24
   45eec:	bl	7428 <__vasprintf_chk@plt>
   45ef0:	cmp	r0, #0
   45ef4:	blt	4606c <blkid_probe_get_size@plt+0x3eb54>
   45ef8:	add	r9, sp, #28
   45efc:	mov	r0, fp
   45f00:	mov	r2, r9
   45f04:	mov	r1, #128	; 0x80
   45f08:	bl	6960 <parse_printf_format@plt>
   45f0c:	cmp	r0, #127	; 0x7f
   45f10:	bhi	46044 <blkid_probe_get_size@plt+0x3eb2c>
   45f14:	cmp	r0, #0
   45f18:	moveq	fp, sl
   45f1c:	beq	45fc4 <blkid_probe_get_size@plt+0x3eaac>
   45f20:	mov	r2, r9
   45f24:	add	r0, r9, r0, lsl #2
   45f28:	mov	fp, sl
   45f2c:	b	45f50 <blkid_probe_get_size@plt+0x3ea38>
   45f30:	cmp	r3, #6
   45f34:	bge	45fb0 <blkid_probe_get_size@plt+0x3ea98>
   45f38:	cmp	r3, #2
   45f3c:	beq	45f44 <blkid_probe_get_size@plt+0x3ea2c>
   45f40:	ble	46038 <blkid_probe_get_size@plt+0x3eb20>
   45f44:	cmp	r2, r0
   45f48:	add	fp, fp, #4
   45f4c:	beq	45fc4 <blkid_probe_get_size@plt+0x3eaac>
   45f50:	ldr	r3, [r2], #4
   45f54:	tst	r3, #2048	; 0x800
   45f58:	bne	45f44 <blkid_probe_get_size@plt+0x3ea2c>
   45f5c:	cmp	r3, #7
   45f60:	ble	45f30 <blkid_probe_get_size@plt+0x3ea18>
   45f64:	cmp	r3, r5
   45f68:	beq	45fb0 <blkid_probe_get_size@plt+0x3ea98>
   45f6c:	ble	45fa8 <blkid_probe_get_size@plt+0x3ea90>
   45f70:	cmp	r3, #512	; 0x200
   45f74:	beq	45f44 <blkid_probe_get_size@plt+0x3ea2c>
   45f78:	cmp	r3, #1024	; 0x400
   45f7c:	beq	45f44 <blkid_probe_get_size@plt+0x3ea2c>
   45f80:	ldr	r2, [pc, #260]	; 4608c <blkid_probe_get_size@plt+0x3eb74>
   45f84:	ldr	r1, [pc, #260]	; 46090 <blkid_probe_get_size@plt+0x3eb78>
   45f88:	add	r2, pc, r2
   45f8c:	str	r2, [sp]
   45f90:	ldr	r2, [pc, #252]	; 46094 <blkid_probe_get_size@plt+0x3eb7c>
   45f94:	mov	r3, #856	; 0x358
   45f98:	add	r2, pc, r2
   45f9c:	add	r1, pc, r1
   45fa0:	mov	r0, #0
   45fa4:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   45fa8:	cmp	r3, #256	; 0x100
   45fac:	bne	45f80 <blkid_probe_get_size@plt+0x3ea68>
   45fb0:	add	fp, fp, #7
   45fb4:	bic	fp, fp, #7
   45fb8:	cmp	r2, r0
   45fbc:	add	fp, fp, #8
   45fc0:	bne	45f50 <blkid_probe_get_size@plt+0x3ea38>
   45fc4:	ldr	sl, [r4]
   45fc8:	ldr	r9, [sp, #24]
   45fcc:	add	r2, sl, #1
   45fd0:	str	r2, [r4]
   45fd4:	mov	r0, r9
   45fd8:	bl	723c <strlen@plt>
   45fdc:	add	r2, r6, sl, lsl #3
   45fe0:	str	r9, [r6, sl, lsl #3]
   45fe4:	mov	r1, #1
   45fe8:	add	sl, fp, #4
   45fec:	str	r0, [r2, #4]
   45ff0:	ldr	r3, [r4]
   45ff4:	add	r2, r6, r3, lsl #3
   45ff8:	str	r8, [r6, r3, lsl #3]
   45ffc:	str	r1, [r2, #4]
   46000:	ldr	r3, [r4]
   46004:	add	r3, r3, r1
   46008:	str	r3, [r4]
   4600c:	ldr	fp, [fp]
   46010:	cmp	fp, #0
   46014:	bne	45eb8 <blkid_probe_get_size@plt+0x3e9a0>
   46018:	mov	r0, #0
   4601c:	ldr	r3, [sp, #12]
   46020:	ldr	r2, [sp, #540]	; 0x21c
   46024:	ldr	r3, [r3]
   46028:	cmp	r2, r3
   4602c:	bne	46074 <blkid_probe_get_size@plt+0x3eb5c>
   46030:	add	sp, sp, #548	; 0x224
   46034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46038:	cmp	r3, #0
   4603c:	bge	45f44 <blkid_probe_get_size@plt+0x3ea2c>
   46040:	b	45f80 <blkid_probe_get_size@plt+0x3ea68>
   46044:	ldr	r2, [pc, #76]	; 46098 <blkid_probe_get_size@plt+0x3eb80>
   46048:	ldr	r1, [pc, #76]	; 4609c <blkid_probe_get_size@plt+0x3eb84>
   4604c:	add	r2, pc, r2
   46050:	str	r2, [sp]
   46054:	ldr	r2, [pc, #68]	; 460a0 <blkid_probe_get_size@plt+0x3eb88>
   46058:	mov	r3, #856	; 0x358
   4605c:	add	r2, pc, r2
   46060:	add	r1, pc, r1
   46064:	mov	r0, #0
   46068:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4606c:	mvn	r0, #21
   46070:	b	4601c <blkid_probe_get_size@plt+0x3eb04>
   46074:	bl	6fb4 <__stack_chk_fail@plt>
   46078:	strdeq	r1, [r5], -r4
   4607c:	andeq	r0, r0, ip, lsr r4
   46080:	andeq	r9, r2, r4, asr #9
   46084:	andeq	fp, r2, ip, lsl pc
   46088:	andeq	r0, r0, r7, lsl #2
   4608c:	andeq	sl, r2, r8, lsr r7
   46090:	andeq	fp, r2, r8, lsl #30
   46094:	andeq	r3, r2, r0, lsr r0
   46098:	andeq	sl, r2, r4, ror r6
   4609c:	andeq	fp, r2, r8, lsr #28
   460a0:	andeq	r2, r2, ip, ror #30
   460a4:	ldr	ip, [pc, #628]	; 46320 <blkid_probe_get_size@plt+0x3ee08>
   460a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   460ac:	add	ip, pc, ip
   460b0:	ldr	lr, [pc, #620]	; 46324 <blkid_probe_get_size@plt+0x3ee0c>
   460b4:	mov	r4, r3
   460b8:	sub	sp, sp, #60	; 0x3c
   460bc:	ldr	r3, [ip, lr]
   460c0:	mov	r6, r0
   460c4:	str	r3, [sp, #8]
   460c8:	ldr	r3, [r3]
   460cc:	mov	r0, r4
   460d0:	mov	r5, r1
   460d4:	str	r1, [sp, #16]
   460d8:	mov	r9, r2
   460dc:	str	r3, [sp, #52]	; 0x34
   460e0:	bl	723c <strlen@plt>
   460e4:	ldrh	r3, [sp, #104]	; 0x68
   460e8:	mov	r1, r4
   460ec:	ldr	r4, [sp, #96]	; 0x60
   460f0:	str	r3, [sp, #12]
   460f4:	mov	r2, r0
   460f8:	ldr	r0, [r6, #4]
   460fc:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   46100:	subs	r8, r0, #0
   46104:	blt	4625c <blkid_probe_get_size@plt+0x3ed44>
   46108:	mov	r0, r4
   4610c:	bl	723c <strlen@plt>
   46110:	mov	r1, r4
   46114:	mov	r2, r0
   46118:	ldr	r0, [r6, #4]
   4611c:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   46120:	subs	r1, r0, #0
   46124:	str	r1, [sp, #20]
   46128:	blt	4627c <blkid_probe_get_size@plt+0x3ed64>
   4612c:	ldr	fp, [r9]
   46130:	ldr	sl, [r5]
   46134:	cmp	fp, #0
   46138:	str	fp, [sp, #24]
   4613c:	beq	461c0 <blkid_probe_get_size@plt+0x3eca8>
   46140:	mov	r2, #20
   46144:	mov	r0, #0
   46148:	umull	r2, r3, fp, r2
   4614c:	str	r8, [sp, #32]
   46150:	cmp	r3, #0
   46154:	str	r1, [sp, #36]	; 0x24
   46158:	str	r0, [sp, #44]	; 0x2c
   4615c:	str	r0, [sp, #40]	; 0x28
   46160:	str	r0, [sp, #48]	; 0x30
   46164:	bne	462f8 <blkid_probe_get_size@plt+0x3ede0>
   46168:	mov	r7, r3
   4616c:	add	r3, sp, #32
   46170:	str	r8, [sp, #28]
   46174:	mov	r8, fp
   46178:	mov	fp, r3
   4617c:	cmp	r8, r7
   46180:	bls	461bc <blkid_probe_get_size@plt+0x3eca4>
   46184:	add	r4, r8, r7
   46188:	mov	r2, r6
   4618c:	lsr	r4, r4, #1
   46190:	mov	r0, fp
   46194:	add	r5, r4, r4, lsl #2
   46198:	add	r5, sl, r5, lsl #2
   4619c:	mov	r1, r5
   461a0:	bl	2b04c <blkid_probe_get_size@plt+0x23b34>
   461a4:	cmp	r0, #0
   461a8:	blt	4628c <blkid_probe_get_size@plt+0x3ed74>
   461ac:	beq	46294 <blkid_probe_get_size@plt+0x3ed7c>
   461b0:	add	r7, r4, #1
   461b4:	cmp	r8, r7
   461b8:	bhi	46184 <blkid_probe_get_size@plt+0x3ec6c>
   461bc:	ldr	r8, [sp, #28]
   461c0:	ldr	r3, [sp, #24]
   461c4:	mov	r0, sl
   461c8:	add	r1, r3, #1
   461cc:	mov	r2, #20
   461d0:	bl	711c <reallocarray@plt>
   461d4:	cmp	r0, #0
   461d8:	beq	462ec <blkid_probe_get_size@plt+0x3edd4>
   461dc:	ldr	r3, [r6, #16]
   461e0:	ldr	lr, [sp, #16]
   461e4:	add	r3, r3, #1
   461e8:	str	r3, [r6, #16]
   461ec:	str	r0, [lr]
   461f0:	ldr	r3, [r9]
   461f4:	mov	ip, #0
   461f8:	add	r3, r3, r3, lsl #2
   461fc:	lsl	r3, r3, #2
   46200:	add	r2, r0, r3
   46204:	str	r8, [r0, r3]
   46208:	ldr	r3, [sp, #20]
   4620c:	str	ip, [r2, #8]
   46210:	str	r3, [r2, #4]
   46214:	ldr	r3, [sp, #108]	; 0x6c
   46218:	str	r3, [r2, #12]
   4621c:	ldr	r3, [sp, #12]
   46220:	strh	r3, [r2, #16]
   46224:	ldr	r1, [r9]
   46228:	add	r1, r1, #1
   4622c:	cmp	r1, #1
   46230:	str	r1, [r9]
   46234:	bls	46284 <blkid_probe_get_size@plt+0x3ed6c>
   46238:	ldr	r0, [lr]
   4623c:	cmp	r0, ip
   46240:	beq	462c4 <blkid_probe_get_size@plt+0x3edac>
   46244:	ldr	r3, [pc, #220]	; 46328 <blkid_probe_get_size@plt+0x3ee10>
   46248:	str	r6, [sp]
   4624c:	add	r3, pc, r3
   46250:	mov	r2, #20
   46254:	mov	r8, ip
   46258:	bl	72e4 <qsort_r@plt>
   4625c:	ldr	r3, [sp, #8]
   46260:	ldr	r2, [sp, #52]	; 0x34
   46264:	mov	r0, r8
   46268:	ldr	r3, [r3]
   4626c:	cmp	r2, r3
   46270:	bne	462f4 <blkid_probe_get_size@plt+0x3eddc>
   46274:	add	sp, sp, #60	; 0x3c
   46278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4627c:	ldr	r8, [sp, #20]
   46280:	b	4625c <blkid_probe_get_size@plt+0x3ed44>
   46284:	mov	r8, ip
   46288:	b	4625c <blkid_probe_get_size@plt+0x3ed44>
   4628c:	mov	r8, r4
   46290:	b	4617c <blkid_probe_get_size@plt+0x3ec64>
   46294:	cmp	r5, #0
   46298:	ldr	r8, [sp, #28]
   4629c:	beq	461c0 <blkid_probe_get_size@plt+0x3eca8>
   462a0:	ldr	r3, [sp, #20]
   462a4:	str	r0, [r5, #8]
   462a8:	str	r3, [r5, #4]
   462ac:	ldr	r3, [sp, #12]
   462b0:	mov	r8, r0
   462b4:	strh	r3, [r5, #16]
   462b8:	ldr	r3, [sp, #108]	; 0x6c
   462bc:	str	r3, [r5, #12]
   462c0:	b	4625c <blkid_probe_get_size@plt+0x3ed44>
   462c4:	ldr	r3, [pc, #96]	; 4632c <blkid_probe_get_size@plt+0x3ee14>
   462c8:	ldr	r2, [pc, #96]	; 46330 <blkid_probe_get_size@plt+0x3ee18>
   462cc:	add	r3, pc, r3
   462d0:	ldr	r1, [pc, #92]	; 46334 <blkid_probe_get_size@plt+0x3ee1c>
   462d4:	add	r3, r3, #32
   462d8:	str	r3, [sp]
   462dc:	add	r2, pc, r2
   462e0:	mov	r3, #123	; 0x7b
   462e4:	add	r1, pc, r1
   462e8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   462ec:	mvn	r8, #11
   462f0:	b	4625c <blkid_probe_get_size@plt+0x3ed44>
   462f4:	bl	6fb4 <__stack_chk_fail@plt>
   462f8:	ldr	r3, [pc, #56]	; 46338 <blkid_probe_get_size@plt+0x3ee20>
   462fc:	ldr	r2, [pc, #56]	; 4633c <blkid_probe_get_size@plt+0x3ee24>
   46300:	add	r3, pc, r3
   46304:	ldr	r1, [pc, #52]	; 46340 <blkid_probe_get_size@plt+0x3ee28>
   46308:	add	r3, r3, #20
   4630c:	str	r3, [sp]
   46310:	add	r2, pc, r2
   46314:	mov	r3, #151	; 0x97
   46318:	add	r1, pc, r1
   4631c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   46320:			; <UNDEFINED> instruction: 0x00051abc
   46324:	andeq	r0, r0, ip, lsr r4
   46328:			; <UNDEFINED> instruction: 0xfffe4df8
   4632c:	strdeq	sl, [r2], -r4
   46330:	andeq	r2, r2, r4, asr #11
   46334:	andeq	lr, r2, r8, ror r4
   46338:	andeq	sl, r2, r0, asr #7
   4633c:	andeq	r9, r2, r0, ror #10
   46340:	andeq	fp, r2, ip, lsr #23
   46344:	ldr	r1, [pc, #1052]	; 46768 <blkid_probe_get_size@plt+0x3f250>
   46348:	ldr	ip, [pc, #1052]	; 4676c <blkid_probe_get_size@plt+0x3f254>
   4634c:	add	r1, pc, r1
   46350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46354:	mov	sl, r2
   46358:	add	fp, sp, #32
   4635c:	mov	r2, r1
   46360:	sub	sp, sp, #44	; 0x2c
   46364:	ldr	r1, [r1, ip]
   46368:	mov	r8, r3
   4636c:	subs	r9, r0, #0
   46370:	ldr	r3, [r1]
   46374:	str	r1, [fp, #-52]	; 0xffffffcc
   46378:	ldr	r5, [fp, #4]
   4637c:	str	r3, [fp, #-40]	; 0xffffffd8
   46380:	beq	46680 <blkid_probe_get_size@plt+0x3f168>
   46384:	cmp	r5, #0
   46388:	beq	466a8 <blkid_probe_get_size@plt+0x3f190>
   4638c:	ldrb	r3, [r5]
   46390:	cmp	r3, #47	; 0x2f
   46394:	bne	46678 <blkid_probe_get_size@plt+0x3f160>
   46398:	ldrb	r4, [r5, #1]
   4639c:	cmp	r4, #47	; 0x2f
   463a0:	addeq	r5, r5, #1
   463a4:	moveq	r2, r5
   463a8:	beq	463b4 <blkid_probe_get_size@plt+0x3ee9c>
   463ac:	b	46678 <blkid_probe_get_size@plt+0x3f160>
   463b0:	mov	r5, r2
   463b4:	ldrb	r3, [r2, #1]!
   463b8:	cmp	r3, #47	; 0x2f
   463bc:	beq	463b0 <blkid_probe_get_size@plt+0x3ee98>
   463c0:	mov	r0, r8
   463c4:	bl	39bd0 <blkid_probe_get_size@plt+0x326b8>
   463c8:	subs	r3, r0, #0
   463cc:	str	r3, [fp, #-48]	; 0xffffffd0
   463d0:	bne	46470 <blkid_probe_get_size@plt+0x3ef58>
   463d4:	mov	r0, r8
   463d8:	bl	723c <strlen@plt>
   463dc:	mov	r6, r0
   463e0:	mov	r0, r5
   463e4:	bl	723c <strlen@plt>
   463e8:	mov	r7, r0
   463ec:	add	r0, r6, r0
   463f0:	add	r3, r0, #2
   463f4:	cmp	r3, #4194304	; 0x400000
   463f8:	bhi	4662c <blkid_probe_get_size@plt+0x3f114>
   463fc:	add	r0, r0, #16
   46400:	bic	r0, r0, #7
   46404:	sub	sp, sp, r0
   46408:	add	r6, sp, #16
   4640c:	mov	r1, r8
   46410:	mov	r0, r6
   46414:	bl	6ae0 <stpcpy@plt>
   46418:	cmp	r6, r0
   4641c:	mov	r3, r0
   46420:	bcs	46450 <blkid_probe_get_size@plt+0x3ef38>
   46424:	ldrb	r2, [r0, #-1]
   46428:	cmp	r2, #47	; 0x2f
   4642c:	bne	46450 <blkid_probe_get_size@plt+0x3ef38>
   46430:	sub	r3, r0, #1
   46434:	b	46444 <blkid_probe_get_size@plt+0x3ef2c>
   46438:	ldrb	r2, [r3, #-1]!
   4643c:	cmp	r2, #47	; 0x2f
   46440:	bne	46450 <blkid_probe_get_size@plt+0x3ef38>
   46444:	cmp	r3, r6
   46448:	mov	r0, r3
   4644c:	bne	46438 <blkid_probe_get_size@plt+0x3ef20>
   46450:	cmp	r4, #47	; 0x2f
   46454:	movne	r3, #47	; 0x2f
   46458:	strbne	r3, [r0]
   4645c:	mov	r1, r5
   46460:	addne	r0, r0, #1
   46464:	add	r2, r7, #1
   46468:	bl	71e8 <memcpy@plt>
   4646c:	mov	r5, r6
   46470:	mov	r0, r5
   46474:	bl	6ca8 <opendir@plt>
   46478:	mov	r6, r0
   4647c:	bl	732c <__errno_location@plt>
   46480:	cmp	r6, #0
   46484:	mov	r7, r0
   46488:	beq	4659c <blkid_probe_get_size@plt+0x3f084>
   4648c:	mov	r3, #0
   46490:	str	r3, [r0]
   46494:	mov	r0, r6
   46498:	bl	6bb8 <readdir64@plt>
   4649c:	cmp	r0, #0
   464a0:	beq	46658 <blkid_probe_get_size@plt+0x3f140>
   464a4:	ldr	r3, [pc, #708]	; 46770 <blkid_probe_get_size@plt+0x3f258>
   464a8:	ldr	r2, [pc, #708]	; 46774 <blkid_probe_get_size@plt+0x3f25c>
   464ac:	add	r3, pc, r3
   464b0:	add	r2, pc, r2
   464b4:	add	r3, r3, #60	; 0x3c
   464b8:	str	r2, [fp, #-48]	; 0xffffffd0
   464bc:	str	r3, [fp, #-56]	; 0xffffffc8
   464c0:	b	46514 <blkid_probe_get_size@plt+0x3effc>
   464c4:	mov	r2, r4
   464c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   464cc:	mov	r0, r5
   464d0:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   464d4:	subs	r4, r0, #0
   464d8:	beq	466fc <blkid_probe_get_size@plt+0x3f1e4>
   464dc:	bl	708c <basename@plt>
   464e0:	mov	r2, r4
   464e4:	mov	r1, r0
   464e8:	mov	r0, r9
   464ec:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   464f0:	subs	r8, r0, #0
   464f4:	blt	46704 <blkid_probe_get_size@plt+0x3f1ec>
   464f8:	beq	466d4 <blkid_probe_get_size@plt+0x3f1bc>
   464fc:	mov	r3, #0
   46500:	str	r3, [r7]
   46504:	mov	r0, r6
   46508:	bl	6bb8 <readdir64@plt>
   4650c:	cmp	r0, #0
   46510:	beq	46658 <blkid_probe_get_size@plt+0x3f140>
   46514:	add	r4, r0, #19
   46518:	mov	r0, r4
   4651c:	bl	3f904 <blkid_probe_get_size@plt+0x383ec>
   46520:	subs	r8, r0, #0
   46524:	bne	464fc <blkid_probe_get_size@plt+0x3efe4>
   46528:	mov	r1, sl
   4652c:	mov	r0, r4
   46530:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   46534:	cmp	r0, #0
   46538:	beq	464fc <blkid_probe_get_size@plt+0x3efe4>
   4653c:	mov	r1, r4
   46540:	mov	r0, r9
   46544:	bl	43a98 <blkid_probe_get_size@plt+0x3c580>
   46548:	subs	r3, r0, #0
   4654c:	beq	464c4 <blkid_probe_get_size@plt+0x3efac>
   46550:	ldr	r3, [pc, #544]	; 46778 <blkid_probe_get_size@plt+0x3f260>
   46554:	add	r3, pc, r3
   46558:	ldr	r3, [r3, #20]
   4655c:	cmp	r3, #6
   46560:	ble	464fc <blkid_probe_get_size@plt+0x3efe4>
   46564:	ldr	r2, [fp, #-56]	; 0xffffffc8
   46568:	ldr	r3, [pc, #524]	; 4677c <blkid_probe_get_size@plt+0x3f264>
   4656c:	str	r2, [sp]
   46570:	ldr	r2, [pc, #520]	; 46780 <blkid_probe_get_size@plt+0x3f268>
   46574:	add	r3, pc, r3
   46578:	str	r3, [sp, #4]
   4657c:	str	r4, [sp, #12]
   46580:	str	r5, [sp, #8]
   46584:	mov	r1, r8
   46588:	mov	r3, #63	; 0x3f
   4658c:	add	r2, pc, r2
   46590:	mov	r0, #7
   46594:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   46598:	b	464fc <blkid_probe_get_size@plt+0x3efe4>
   4659c:	ldr	r1, [r0]
   465a0:	cmp	r1, #2
   465a4:	moveq	r4, r6
   465a8:	beq	465d0 <blkid_probe_get_size@plt+0x3f0b8>
   465ac:	ldr	r3, [pc, #464]	; 46784 <blkid_probe_get_size@plt+0x3f26c>
   465b0:	add	r3, pc, r3
   465b4:	ldr	r3, [r3, #20]
   465b8:	cmp	r3, #6
   465bc:	bgt	465f0 <blkid_probe_get_size@plt+0x3f0d8>
   465c0:	eor	r4, r1, r1, asr #31
   465c4:	sub	r4, r4, r1, asr #31
   465c8:	uxtb	r4, r4
   465cc:	rsb	r4, r4, #0
   465d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   465d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   465d8:	mov	r0, r4
   465dc:	ldr	r3, [r3]
   465e0:	cmp	r2, r3
   465e4:	bne	46764 <blkid_probe_get_size@plt+0x3f24c>
   465e8:	sub	sp, fp, #32
   465ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   465f0:	ldr	r2, [pc, #400]	; 46788 <blkid_probe_get_size@plt+0x3f270>
   465f4:	ldr	r3, [pc, #400]	; 4678c <blkid_probe_get_size@plt+0x3f274>
   465f8:	add	r2, pc, r2
   465fc:	str	r2, [sp, #4]
   46600:	add	r3, pc, r3
   46604:	ldr	r2, [pc, #388]	; 46790 <blkid_probe_get_size@plt+0x3f278>
   46608:	add	r3, r3, #60	; 0x3c
   4660c:	str	r3, [sp]
   46610:	str	r5, [sp, #8]
   46614:	mov	r3, #50	; 0x32
   46618:	add	r2, pc, r2
   4661c:	mov	r0, #7
   46620:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   46624:	mov	r4, r0
   46628:	b	465d0 <blkid_probe_get_size@plt+0x3f0b8>
   4662c:	ldr	r3, [pc, #352]	; 46794 <blkid_probe_get_size@plt+0x3f27c>
   46630:	ldr	r2, [pc, #352]	; 46798 <blkid_probe_get_size@plt+0x3f280>
   46634:	add	r3, pc, r3
   46638:	ldr	r1, [pc, #348]	; 4679c <blkid_probe_get_size@plt+0x3f284>
   4663c:	add	r3, r3, #48	; 0x30
   46640:	str	r3, [sp]
   46644:	ldr	r0, [fp, #-48]	; 0xffffffd0
   46648:	mov	r3, #43	; 0x2b
   4664c:	add	r2, pc, r2
   46650:	add	r1, pc, r1
   46654:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   46658:	ldr	r4, [r7]
   4665c:	cmp	r4, #0
   46660:	movle	r4, #0
   46664:	ble	4666c <blkid_probe_get_size@plt+0x3f154>
   46668:	rsb	r4, r4, #0
   4666c:	mov	r0, r6
   46670:	bl	6aa4 <closedir@plt>
   46674:	b	465d0 <blkid_probe_get_size@plt+0x3f0b8>
   46678:	mov	r4, r3
   4667c:	b	463c0 <blkid_probe_get_size@plt+0x3eea8>
   46680:	ldr	r2, [pc, #280]	; 467a0 <blkid_probe_get_size@plt+0x3f288>
   46684:	ldr	r1, [pc, #280]	; 467a4 <blkid_probe_get_size@plt+0x3f28c>
   46688:	add	r2, pc, r2
   4668c:	add	r2, r2, #48	; 0x30
   46690:	str	r2, [sp]
   46694:	ldr	r2, [pc, #268]	; 467a8 <blkid_probe_get_size@plt+0x3f290>
   46698:	mov	r3, #39	; 0x27
   4669c:	add	r2, pc, r2
   466a0:	add	r1, pc, r1
   466a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   466a8:	ldr	r3, [pc, #252]	; 467ac <blkid_probe_get_size@plt+0x3f294>
   466ac:	ldr	r2, [pc, #252]	; 467b0 <blkid_probe_get_size@plt+0x3f298>
   466b0:	add	r3, pc, r3
   466b4:	ldr	r1, [pc, #248]	; 467b4 <blkid_probe_get_size@plt+0x3f29c>
   466b8:	add	r3, r3, #48	; 0x30
   466bc:	str	r3, [sp]
   466c0:	mov	r0, r5
   466c4:	mov	r3, #41	; 0x29
   466c8:	add	r2, pc, r2
   466cc:	add	r1, pc, r1
   466d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   466d4:	ldr	r2, [pc, #220]	; 467b8 <blkid_probe_get_size@plt+0x3f2a0>
   466d8:	ldr	r1, [pc, #220]	; 467bc <blkid_probe_get_size@plt+0x3f2a4>
   466dc:	add	r2, pc, r2
   466e0:	add	r2, r2, #48	; 0x30
   466e4:	str	r2, [sp]
   466e8:	ldr	r2, [pc, #208]	; 467c0 <blkid_probe_get_size@plt+0x3f2a8>
   466ec:	mov	r3, #131	; 0x83
   466f0:	add	r2, pc, r2
   466f4:	add	r1, pc, r1
   466f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   466fc:	mvn	r4, #11
   46700:	b	4666c <blkid_probe_get_size@plt+0x3f154>
   46704:	mov	r0, r4
   46708:	bl	69f0 <free@plt>
   4670c:	ldr	r3, [pc, #176]	; 467c4 <blkid_probe_get_size@plt+0x3f2ac>
   46710:	add	r3, pc, r3
   46714:	ldr	r3, [r3, #20]
   46718:	cmp	r3, #6
   4671c:	rsble	r4, r8, #0
   46720:	uxtble	r4, r4
   46724:	ble	46668 <blkid_probe_get_size@plt+0x3f150>
   46728:	ldr	r2, [pc, #152]	; 467c8 <blkid_probe_get_size@plt+0x3f2b0>
   4672c:	ldr	r3, [pc, #152]	; 467cc <blkid_probe_get_size@plt+0x3f2b4>
   46730:	add	r2, pc, r2
   46734:	str	r2, [sp, #4]
   46738:	add	r3, pc, r3
   4673c:	ldr	r2, [pc, #140]	; 467d0 <blkid_probe_get_size@plt+0x3f2b8>
   46740:	add	r3, r3, #60	; 0x3c
   46744:	str	r3, [sp]
   46748:	mov	r1, r8
   4674c:	mov	r3, #128	; 0x80
   46750:	add	r2, pc, r2
   46754:	mov	r0, #7
   46758:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4675c:	mov	r4, r0
   46760:	b	4666c <blkid_probe_get_size@plt+0x3f154>
   46764:	bl	6fb4 <__stack_chk_fail@plt>
   46768:	andeq	r1, r5, ip, lsl r8
   4676c:	andeq	r0, r0, ip, lsr r4
   46770:	andeq	sl, r2, r4, lsl r2
   46774:	andeq	r1, r3, r0, lsl fp
   46778:	ldrdeq	r1, [r5], -r4
   4677c:			; <UNDEFINED> instruction: 0x0002b9b8
   46780:	andeq	fp, r2, r0, ror #18
   46784:	andeq	r1, r5, r8, ror fp
   46788:	andeq	fp, r2, r0, lsl r9
   4678c:	andeq	sl, r2, r0, asr #1
   46790:	ldrdeq	fp, [r2], -r4
   46794:	andeq	sl, r2, ip, lsl #1
   46798:	andeq	fp, r2, r0, lsr #17
   4679c:	andeq	lr, r1, r8, asr #20
   467a0:	andeq	sl, r2, r8, lsr r0
   467a4:	muleq	r2, ip, r0
   467a8:	andeq	fp, r2, r0, asr r8
   467ac:	andeq	sl, r2, r0, lsl r0
   467b0:	andeq	fp, r2, r4, lsr #16
   467b4:	andeq	r4, r2, r8, asr #24
   467b8:	andeq	r9, r2, r4, ror #31
   467bc:	muleq	r2, r0, r1
   467c0:	strdeq	fp, [r2], -ip
   467c4:	andeq	r1, r5, r8, lsl sl
   467c8:	andeq	fp, r2, r0, lsr #16
   467cc:	andeq	r9, r2, r8, lsl #31
   467d0:	muleq	r2, ip, r7
   467d4:	push	{r4, r5, r6, r7, r8, lr}
   467d8:	mov	r6, r0
   467dc:	ldr	r4, [pc, #204]	; 468b0 <blkid_probe_get_size@plt+0x3f398>
   467e0:	ldr	r3, [pc, #204]	; 468b4 <blkid_probe_get_size@plt+0x3f39c>
   467e4:	ldr	ip, [pc, #204]	; 468b8 <blkid_probe_get_size@plt+0x3f3a0>
   467e8:	add	r4, pc, r4
   467ec:	add	r3, pc, r3
   467f0:	add	r2, r4, #28
   467f4:	ldr	r7, [r3, ip]
   467f8:	mov	r5, r1
   467fc:	ldm	r2, {r0, r1, r2}
   46800:	sub	sp, sp, #32
   46804:	add	r3, sp, #4
   46808:	ldr	ip, [r7]
   4680c:	stm	r3, {r0, r1, r2}
   46810:	mov	r0, r3
   46814:	ldr	r1, [r6]
   46818:	str	ip, [sp, #28]
   4681c:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   46820:	subs	r8, r0, #0
   46824:	beq	46858 <blkid_probe_get_size@plt+0x3f340>
   46828:	mov	r2, #0
   4682c:	ldr	r3, [pc, #136]	; 468bc <blkid_probe_get_size@plt+0x3f3a4>
   46830:	mov	r0, r2
   46834:	add	r3, pc, r3
   46838:	str	r3, [r6]
   4683c:	str	r2, [r5]
   46840:	ldr	r2, [sp, #28]
   46844:	ldr	r3, [r7]
   46848:	cmp	r2, r3
   4684c:	bne	468ac <blkid_probe_get_size@plt+0x3f394>
   46850:	add	sp, sp, #32
   46854:	pop	{r4, r5, r6, r7, r8, pc}
   46858:	bl	392a0 <blkid_probe_get_size@plt+0x31d88>
   4685c:	cmp	r0, #0
   46860:	beq	468a4 <blkid_probe_get_size@plt+0x3f38c>
   46864:	add	r4, r4, #40	; 0x28
   46868:	add	r3, sp, #16
   4686c:	ldm	r4, {r0, r1, r2}
   46870:	stm	r3, {r0, r1, r2}
   46874:	mov	r0, r3
   46878:	ldr	r1, [r6]
   4687c:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   46880:	cmp	r0, #0
   46884:	beq	468a4 <blkid_probe_get_size@plt+0x3f38c>
   46888:	ldr	r3, [pc, #48]	; 468c0 <blkid_probe_get_size@plt+0x3f3a8>
   4688c:	ldr	r2, [pc, #48]	; 468c4 <blkid_probe_get_size@plt+0x3f3ac>
   46890:	add	r3, pc, r3
   46894:	str	r3, [r6]
   46898:	mov	r0, r8
   4689c:	str	r2, [r5]
   468a0:	b	46840 <blkid_probe_get_size@plt+0x3f328>
   468a4:	mvn	r0, #122	; 0x7a
   468a8:	b	46840 <blkid_probe_get_size@plt+0x3f328>
   468ac:	bl	6fb4 <__stack_chk_fail@plt>
   468b0:	andeq	r1, r5, r0, asr #18
   468b4:	andeq	r1, r5, ip, ror r3
   468b8:	andeq	r0, r0, ip, lsr r4
   468bc:	andeq	r9, r2, r4, lsr r0
   468c0:	andeq	fp, r2, r4, ror #13
   468c4:	strdeq	pc, [r0], -lr
   468c8:	ldr	r1, [pc, #740]	; 46bb4 <blkid_probe_get_size@plt+0x3f69c>
   468cc:	ldr	ip, [pc, #740]	; 46bb8 <blkid_probe_get_size@plt+0x3f6a0>
   468d0:	add	r1, pc, r1
   468d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   468d8:	mov	r7, r3
   468dc:	ldr	r5, [r1, ip]
   468e0:	sub	sp, sp, #36	; 0x24
   468e4:	mov	r3, r1
   468e8:	ldr	r3, [r5]
   468ec:	subs	r4, r0, #0
   468f0:	ldr	fp, [sp, #72]	; 0x48
   468f4:	ldr	sl, [sp, #76]	; 0x4c
   468f8:	str	r3, [sp, #28]
   468fc:	beq	46a5c <blkid_probe_get_size@plt+0x3f544>
   46900:	cmp	r4, #1
   46904:	mov	r6, r2
   46908:	beq	46a0c <blkid_probe_get_size@plt+0x3f4f4>
   4690c:	ldr	r3, [r4, #264]	; 0x108
   46910:	cmp	r3, #5
   46914:	beq	46a8c <blkid_probe_get_size@plt+0x3f574>
   46918:	ldr	r8, [r4, #228]	; 0xe4
   4691c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   46920:	cmp	r8, r0
   46924:	bne	46ac0 <blkid_probe_get_size@plt+0x3f5a8>
   46928:	mov	r1, #3
   4692c:	mov	r0, r4
   46930:	bl	30390 <blkid_probe_get_size@plt+0x28e78>
   46934:	subs	r9, r0, #0
   46938:	beq	46af4 <blkid_probe_get_size@plt+0x3f5dc>
   4693c:	ldr	r1, [pc, #632]	; 46bbc <blkid_probe_get_size@plt+0x3f6a4>
   46940:	add	r0, r9, #8
   46944:	add	r1, pc, r1
   46948:	bl	3f868 <blkid_probe_get_size@plt+0x38350>
   4694c:	subs	r8, r0, #0
   46950:	blt	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46954:	ldr	r1, [pc, #612]	; 46bc0 <blkid_probe_get_size@plt+0x3f6a8>
   46958:	add	r0, r9, #12
   4695c:	add	r1, pc, r1
   46960:	bl	3f868 <blkid_probe_get_size@plt+0x38350>
   46964:	subs	r8, r0, #0
   46968:	blt	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   4696c:	ldr	r3, [r9, #4]
   46970:	cmp	r3, #0
   46974:	blt	46b3c <blkid_probe_get_size@plt+0x3f624>
   46978:	mov	r0, r4
   4697c:	mov	r2, #3
   46980:	mov	r1, #1
   46984:	bl	31cc8 <blkid_probe_get_size@plt+0x2a7b0>
   46988:	subs	r4, r0, #0
   4698c:	mvneq	r8, #11
   46990:	beq	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46994:	ldrb	r1, [r4, #24]
   46998:	ldr	r2, [pc, #548]	; 46bc4 <blkid_probe_get_size@plt+0x3f6ac>
   4699c:	mov	r3, #0
   469a0:	mvn	r0, #0
   469a4:	orr	r1, r1, #224	; 0xe0
   469a8:	strb	r1, [r4, #24]
   469ac:	strd	r2, [r4, #96]	; 0x60
   469b0:	strd	r6, [r4, #88]	; 0x58
   469b4:	str	fp, [r4, #80]	; 0x50
   469b8:	str	sl, [r4, #12]
   469bc:	str	r0, [r4, #108]	; 0x6c
   469c0:	str	r0, [r4, #104]	; 0x68
   469c4:	ldrb	r3, [r9, #24]
   469c8:	ldr	r0, [r9, #8]
   469cc:	add	r2, r4, #104	; 0x68
   469d0:	orr	r3, r3, #1
   469d4:	strb	r3, [r9, #24]
   469d8:	mov	r1, r4
   469dc:	bl	3f7a0 <blkid_probe_get_size@plt+0x38288>
   469e0:	subs	r8, r0, #0
   469e4:	bge	46b1c <blkid_probe_get_size@plt+0x3f604>
   469e8:	mov	r0, r4
   469ec:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   469f0:	ldr	r2, [sp, #28]
   469f4:	ldr	r3, [r5]
   469f8:	mov	r0, r8
   469fc:	cmp	r2, r3
   46a00:	bne	46bb0 <blkid_probe_get_size@plt+0x3f698>
   46a04:	add	sp, sp, #36	; 0x24
   46a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46a0c:	ldr	r0, [pc, #436]	; 46bc8 <blkid_probe_get_size@plt+0x3f6b0>
   46a10:	add	r0, pc, r0
   46a14:	bl	74dc <__tls_get_addr@plt>
   46a18:	ldr	r3, [pc, #428]	; 46bcc <blkid_probe_get_size@plt+0x3f6b4>
   46a1c:	ldr	r4, [r3, r0]
   46a20:	cmp	r4, #0
   46a24:	bne	4690c <blkid_probe_get_size@plt+0x3f3f4>
   46a28:	ldr	r3, [pc, #416]	; 46bd0 <blkid_probe_get_size@plt+0x3f6b8>
   46a2c:	ldr	r2, [pc, #416]	; 46bd4 <blkid_probe_get_size@plt+0x3f6bc>
   46a30:	add	r3, pc, r3
   46a34:	ldr	r1, [pc, #412]	; 46bd8 <blkid_probe_get_size@plt+0x3f6c0>
   46a38:	add	r3, r3, #72	; 0x48
   46a3c:	str	r3, [sp]
   46a40:	mov	r0, r4
   46a44:	mov	r3, #992	; 0x3e0
   46a48:	add	r2, pc, r2
   46a4c:	add	r1, pc, r1
   46a50:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   46a54:	mvn	r8, #64	; 0x40
   46a58:	b	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46a5c:	ldr	r2, [pc, #376]	; 46bdc <blkid_probe_get_size@plt+0x3f6c4>
   46a60:	ldr	r1, [pc, #376]	; 46be0 <blkid_probe_get_size@plt+0x3f6c8>
   46a64:	add	r2, pc, r2
   46a68:	add	r2, r2, #72	; 0x48
   46a6c:	str	r2, [sp]
   46a70:	ldr	r2, [pc, #364]	; 46be4 <blkid_probe_get_size@plt+0x3f6cc>
   46a74:	ldr	r3, [pc, #364]	; 46be8 <blkid_probe_get_size@plt+0x3f6d0>
   46a78:	add	r2, pc, r2
   46a7c:	add	r1, pc, r1
   46a80:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   46a84:	mvn	r8, #21
   46a88:	b	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46a8c:	ldr	r2, [pc, #344]	; 46bec <blkid_probe_get_size@plt+0x3f6d4>
   46a90:	ldr	r1, [pc, #344]	; 46bf0 <blkid_probe_get_size@plt+0x3f6d8>
   46a94:	add	r2, pc, r2
   46a98:	add	r2, r2, #72	; 0x48
   46a9c:	str	r2, [sp]
   46aa0:	ldr	r2, [pc, #332]	; 46bf4 <blkid_probe_get_size@plt+0x3f6dc>
   46aa4:	ldr	r3, [pc, #332]	; 46bf8 <blkid_probe_get_size@plt+0x3f6e0>
   46aa8:	add	r2, pc, r2
   46aac:	add	r1, pc, r1
   46ab0:	mov	r0, #0
   46ab4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   46ab8:	mvn	r8, #115	; 0x73
   46abc:	b	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46ac0:	ldr	r2, [pc, #308]	; 46bfc <blkid_probe_get_size@plt+0x3f6e4>
   46ac4:	ldr	r1, [pc, #308]	; 46c00 <blkid_probe_get_size@plt+0x3f6e8>
   46ac8:	add	r2, pc, r2
   46acc:	add	r2, r2, #72	; 0x48
   46ad0:	str	r2, [sp]
   46ad4:	ldr	r2, [pc, #296]	; 46c04 <blkid_probe_get_size@plt+0x3f6ec>
   46ad8:	ldr	r3, [pc, #296]	; 46c08 <blkid_probe_get_size@plt+0x3f6f0>
   46adc:	add	r2, pc, r2
   46ae0:	add	r1, pc, r1
   46ae4:	mov	r0, #0
   46ae8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   46aec:	mvn	r8, #9
   46af0:	b	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46af4:	ldr	r2, [pc, #272]	; 46c0c <blkid_probe_get_size@plt+0x3f6f4>
   46af8:	ldr	r1, [pc, #272]	; 46c10 <blkid_probe_get_size@plt+0x3f6f8>
   46afc:	add	r2, pc, r2
   46b00:	add	r2, r2, #72	; 0x48
   46b04:	str	r2, [sp]
   46b08:	ldr	r2, [pc, #260]	; 46c14 <blkid_probe_get_size@plt+0x3f6fc>
   46b0c:	mov	r3, #1008	; 0x3f0
   46b10:	add	r2, pc, r2
   46b14:	add	r1, pc, r1
   46b18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   46b1c:	ldr	r0, [r9, #12]
   46b20:	add	r2, r4, #108	; 0x6c
   46b24:	mov	r1, r4
   46b28:	bl	3f7a0 <blkid_probe_get_size@plt+0x38288>
   46b2c:	subs	r8, r0, #0
   46b30:	movge	r8, #0
   46b34:	bge	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46b38:	b	469e8 <blkid_probe_get_size@plt+0x3f4d0>
   46b3c:	ldr	r1, [pc, #212]	; 46c18 <blkid_probe_get_size@plt+0x3f700>
   46b40:	mov	r0, #1
   46b44:	bl	73a4 <timerfd_create@plt>
   46b48:	cmp	r0, #0
   46b4c:	blt	46b98 <blkid_probe_get_size@plt+0x3f680>
   46b50:	bl	2d0fc <blkid_probe_get_size@plt+0x25be4>
   46b54:	mov	r2, #0
   46b58:	mov	ip, #1
   46b5c:	str	r2, [sp, #20]
   46b60:	str	r2, [sp, #12]
   46b64:	str	r9, [sp, #16]
   46b68:	mov	r1, ip
   46b6c:	add	r3, sp, #8
   46b70:	str	ip, [sp, #8]
   46b74:	mov	r8, r0
   46b78:	mov	r2, r0
   46b7c:	ldr	r0, [r4, #4]
   46b80:	bl	6cb4 <epoll_ctl@plt>
   46b84:	cmp	r0, #0
   46b88:	strge	r8, [r9, #4]
   46b8c:	bge	46978 <blkid_probe_get_size@plt+0x3f460>
   46b90:	mov	r0, r8
   46b94:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46b98:	bl	732c <__errno_location@plt>
   46b9c:	ldr	r8, [r0]
   46ba0:	rsb	r8, r8, #0
   46ba4:	cmp	r8, #0
   46ba8:	bge	46978 <blkid_probe_get_size@plt+0x3f460>
   46bac:	b	469f0 <blkid_probe_get_size@plt+0x3f4d8>
   46bb0:	bl	6fb4 <__stack_chk_fail@plt>
   46bb4:	muleq	r5, r8, r2
   46bb8:	andeq	r0, r0, ip, lsr r4
   46bbc:			; <UNDEFINED> instruction: 0xfffe4a08
   46bc0:			; <UNDEFINED> instruction: 0xfffe484c
   46bc4:	andeq	r4, pc, r0, asr #4
   46bc8:	andeq	r1, r5, r8, lsl #11
   46bcc:	andeq	r0, r0, r4, asr r0
   46bd0:	muleq	r2, r0, ip
   46bd4:	andeq	r6, r2, r4, ror sl
   46bd8:	muleq	r2, ip, r2
   46bdc:	andeq	r9, r2, ip, asr ip
   46be0:	strdeq	sp, [r2], -r4
   46be4:	andeq	r6, r2, r4, asr #20
   46be8:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   46bec:	andeq	r9, r2, ip, lsr #24
   46bf0:	andeq	r7, r2, r4, asr r2
   46bf4:	andeq	r6, r2, r4, lsl sl
   46bf8:	andeq	r0, r0, r2, ror #7
   46bfc:	strdeq	r9, [r2], -r8
   46c00:	andeq	r7, r2, r0, asr #4
   46c04:	andeq	r6, r2, r0, ror #19
   46c08:	andeq	r0, r0, r3, ror #7
   46c0c:	andeq	r9, r2, r4, asr #23
   46c10:	andeq	r4, r2, r4, asr r5
   46c14:	andeq	r6, r2, ip, lsr #19
   46c18:	andeq	r0, r8, r0, lsl #16
   46c1c:	ldr	r3, [pc, #472]	; 46dfc <blkid_probe_get_size@plt+0x3f8e4>
   46c20:	ldr	r2, [pc, #472]	; 46e00 <blkid_probe_get_size@plt+0x3f8e8>
   46c24:	add	r3, pc, r3
   46c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46c2c:	sub	sp, sp, #28
   46c30:	ldr	r9, [r3, r2]
   46c34:	ldr	r0, [pc, #456]	; 46e04 <blkid_probe_get_size@plt+0x3f8ec>
   46c38:	ldr	r3, [r9]
   46c3c:	add	r0, pc, r0
   46c40:	str	r3, [sp, #20]
   46c44:	bl	6ca8 <opendir@plt>
   46c48:	subs	r6, r0, #0
   46c4c:	beq	46d30 <blkid_probe_get_size@plt+0x3f818>
   46c50:	bl	732c <__errno_location@plt>
   46c54:	mov	r5, #0
   46c58:	str	r5, [r0]
   46c5c:	mov	r7, r0
   46c60:	mov	r0, r6
   46c64:	bl	6bb8 <readdir64@plt>
   46c68:	cmp	r0, #0
   46c6c:	movne	r8, r5
   46c70:	mvnne	fp, #0
   46c74:	movne	sl, sp
   46c78:	beq	46df0 <blkid_probe_get_size@plt+0x3f8d8>
   46c7c:	add	r4, r0, #19
   46c80:	mov	r0, r4
   46c84:	bl	3f904 <blkid_probe_get_size@plt+0x383ec>
   46c88:	cmp	r0, #0
   46c8c:	bne	46cec <blkid_probe_get_size@plt+0x3f7d4>
   46c90:	mov	r0, r4
   46c94:	mov	r1, sl
   46c98:	str	fp, [sp]
   46c9c:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   46ca0:	cmp	r0, #0
   46ca4:	blt	46cec <blkid_probe_get_size@plt+0x3f7d4>
   46ca8:	ldr	r3, [sp]
   46cac:	cmp	r3, #2
   46cb0:	ble	46cec <blkid_probe_get_size@plt+0x3f7d4>
   46cb4:	mov	r0, r6
   46cb8:	bl	6984 <dirfd@plt>
   46cbc:	ldr	r3, [sp]
   46cc0:	cmp	r0, r3
   46cc4:	beq	46cec <blkid_probe_get_size@plt+0x3f7d4>
   46cc8:	mov	r0, r3
   46ccc:	bl	2d6b8 <blkid_probe_get_size@plt+0x261a0>
   46cd0:	adds	r3, r0, #9
   46cd4:	movne	r3, #1
   46cd8:	cmp	r5, #0
   46cdc:	and	r3, r3, r0, lsr #31
   46ce0:	movne	r3, #0
   46ce4:	cmp	r3, #0
   46ce8:	movne	r5, r0
   46cec:	str	r8, [r7]
   46cf0:	mov	r0, r6
   46cf4:	bl	6bb8 <readdir64@plt>
   46cf8:	cmp	r0, #0
   46cfc:	bne	46c7c <blkid_probe_get_size@plt+0x3f764>
   46d00:	ldr	r3, [r7]
   46d04:	mov	r0, r6
   46d08:	cmp	r3, #0
   46d0c:	rsbgt	r5, r3, #0
   46d10:	bl	6aa4 <closedir@plt>
   46d14:	ldr	r2, [sp, #20]
   46d18:	ldr	r3, [r9]
   46d1c:	mov	r0, r5
   46d20:	cmp	r2, r3
   46d24:	bne	46df8 <blkid_probe_get_size@plt+0x3f8e0>
   46d28:	add	sp, sp, #28
   46d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46d30:	mov	r1, sp
   46d34:	mov	r0, #7
   46d38:	bl	6f6c <getrlimit64@plt>
   46d3c:	cmp	r0, #0
   46d40:	blt	46dd4 <blkid_probe_get_size@plt+0x3f8bc>
   46d44:	ldrd	r4, [sp]
   46d48:	ldrd	r0, [sp, #8]
   46d4c:	cmp	r5, r1
   46d50:	cmpeq	r4, r0
   46d54:	movcc	r4, r0
   46d58:	movcc	r5, r1
   46d5c:	ldr	r0, [pc, #164]	; 46e08 <blkid_probe_get_size@plt+0x3f8f0>
   46d60:	mov	r1, #0
   46d64:	cmp	r5, r1
   46d68:	cmpeq	r4, r0
   46d6c:	ldrls	r4, [pc, #148]	; 46e08 <blkid_probe_get_size@plt+0x3f8f0>
   46d70:	bls	46d8c <blkid_probe_get_size@plt+0x3f874>
   46d74:	mov	r1, #0
   46d78:	cmp	r5, r1
   46d7c:	mvn	r0, #-2147483648	; 0x80000000
   46d80:	cmpeq	r4, r0
   46d84:	subls	r4, r4, #1
   46d88:	mvnhi	r4, #-2147483648	; 0x80000000
   46d8c:	mov	r7, #0
   46d90:	mov	r6, #3
   46d94:	b	46da0 <blkid_probe_get_size@plt+0x3f888>
   46d98:	add	r6, r6, #1
   46d9c:	mov	r7, r5
   46da0:	mov	r0, r6
   46da4:	bl	2d6b8 <blkid_probe_get_size@plt+0x261a0>
   46da8:	adds	r3, r0, #9
   46dac:	movne	r3, #1
   46db0:	cmp	r7, #0
   46db4:	and	r3, r3, r0, lsr #31
   46db8:	movne	r3, #0
   46dbc:	cmp	r3, #0
   46dc0:	mov	r5, r0
   46dc4:	moveq	r5, r7
   46dc8:	cmp	r4, r6
   46dcc:	ble	46d14 <blkid_probe_get_size@plt+0x3f7fc>
   46dd0:	b	46d98 <blkid_probe_get_size@plt+0x3f880>
   46dd4:	bl	732c <__errno_location@plt>
   46dd8:	ldr	r5, [r0]
   46ddc:	cmp	r5, #0
   46de0:	rsb	r5, r5, #0
   46de4:	movle	r4, r5
   46de8:	bgt	46d14 <blkid_probe_get_size@plt+0x3f7fc>
   46dec:	b	46d8c <blkid_probe_get_size@plt+0x3f874>
   46df0:	mov	r5, r0
   46df4:	b	46d00 <blkid_probe_get_size@plt+0x3f7e8>
   46df8:	bl	6fb4 <__stack_chk_fail@plt>
   46dfc:	andeq	r0, r5, r4, asr #30
   46e00:	andeq	r0, r0, ip, lsr r4
   46e04:	andeq	fp, r2, r0, asr #6
   46e08:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   46e0c:	ldr	r3, [pc, #608]	; 47074 <blkid_probe_get_size@plt+0x3fb5c>
   46e10:	ldr	ip, [pc, #608]	; 47078 <blkid_probe_get_size@plt+0x3fb60>
   46e14:	ldr	r2, [pc, #608]	; 4707c <blkid_probe_get_size@plt+0x3fb64>
   46e18:	add	r3, pc, r3
   46e1c:	add	ip, pc, ip
   46e20:	add	r3, r3, #92	; 0x5c
   46e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46e28:	mov	r5, r0
   46e2c:	ldr	r8, [ip, r2]
   46e30:	mov	r6, r1
   46e34:	ldm	r3, {r0, r1, r2}
   46e38:	sub	sp, sp, #44	; 0x2c
   46e3c:	add	r9, sp, #24
   46e40:	ldr	lr, [pc, #568]	; 47080 <blkid_probe_get_size@plt+0x3fb68>
   46e44:	stm	r9, {r0, r1, r2}
   46e48:	orrs	r3, r5, r6
   46e4c:	ldr	r0, [pc, #560]	; 47084 <blkid_probe_get_size@plt+0x3fb6c>
   46e50:	ldr	r2, [r8]
   46e54:	mvn	r3, #0
   46e58:	movmi	r1, lr
   46e5c:	movpl	r1, #524288	; 0x80000
   46e60:	add	r0, pc, r0
   46e64:	str	r5, [sp, #16]
   46e68:	str	r6, [sp, #20]
   46e6c:	str	r2, [sp, #36]	; 0x24
   46e70:	str	r3, [sp, #12]
   46e74:	bl	6990 <__open64_2@plt>
   46e78:	subs	r7, r0, #0
   46e7c:	blt	46fb8 <blkid_probe_get_size@plt+0x3faa0>
   46e80:	cmp	r7, #2
   46e84:	ble	46fa4 <blkid_probe_get_size@plt+0x3fa8c>
   46e88:	mvn	r0, #0
   46e8c:	mov	r4, #0
   46e90:	add	sl, sp, #12
   46e94:	cmp	r0, #0
   46e98:	ldr	fp, [pc, #488]	; 47088 <blkid_probe_get_size@plt+0x3fb70>
   46e9c:	strlt	r7, [sl, r4, lsl #2]
   46ea0:	blt	46ebc <blkid_probe_get_size@plt+0x3f9a4>
   46ea4:	subs	r3, r0, r4
   46ea8:	movne	r3, #1
   46eac:	cmp	r0, #2
   46eb0:	movgt	r3, #0
   46eb4:	cmp	r3, #0
   46eb8:	bne	46f84 <blkid_probe_get_size@plt+0x3fa6c>
   46ebc:	add	r4, r4, #1
   46ec0:	cmp	r4, #3
   46ec4:	beq	46edc <blkid_probe_get_size@plt+0x3f9c4>
   46ec8:	ldr	r0, [sl, r4, lsl #2]
   46ecc:	cmp	r0, #0
   46ed0:	strlt	r7, [sl, r4, lsl #2]
   46ed4:	bge	46ea4 <blkid_probe_get_size@plt+0x3f98c>
   46ed8:	b	46ebc <blkid_probe_get_size@plt+0x3f9a4>
   46edc:	mov	r9, #0
   46ee0:	ldr	r0, [sl, r9, lsl #2]
   46ee4:	cmp	r0, r9
   46ee8:	beq	46fd8 <blkid_probe_get_size@plt+0x3fac0>
   46eec:	cmp	r0, #2
   46ef0:	ble	47034 <blkid_probe_get_size@plt+0x3fb1c>
   46ef4:	mov	r1, r9
   46ef8:	bl	6e7c <dup2@plt>
   46efc:	cmp	r0, #0
   46f00:	blt	46fb8 <blkid_probe_get_size@plt+0x3faa0>
   46f04:	add	r9, r9, #1
   46f08:	cmp	r9, #3
   46f0c:	bne	46ee0 <blkid_probe_get_size@plt+0x3f9c8>
   46f10:	mov	r4, #0
   46f14:	cmp	r5, #2
   46f18:	bgt	46fcc <blkid_probe_get_size@plt+0x3fab4>
   46f1c:	cmp	r5, r6
   46f20:	cmnne	r6, #1
   46f24:	movne	r5, #1
   46f28:	moveq	r5, #0
   46f2c:	eor	r5, r5, #1
   46f30:	cmp	r6, #2
   46f34:	orrle	r5, r5, #1
   46f38:	cmp	r5, #0
   46f3c:	beq	47028 <blkid_probe_get_size@plt+0x3fb10>
   46f40:	ldr	r0, [sp, #24]
   46f44:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46f48:	ldr	r0, [sp, #28]
   46f4c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46f50:	ldr	r0, [sp, #32]
   46f54:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46f58:	cmp	r7, #2
   46f5c:	ble	46f68 <blkid_probe_get_size@plt+0x3fa50>
   46f60:	mov	r0, r7
   46f64:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46f68:	ldr	r2, [sp, #36]	; 0x24
   46f6c:	ldr	r3, [r8]
   46f70:	mov	r0, r4
   46f74:	cmp	r2, r3
   46f78:	bne	47070 <blkid_probe_get_size@plt+0x3fb58>
   46f7c:	add	sp, sp, #44	; 0x2c
   46f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46f84:	mov	r2, #3
   46f88:	mov	r1, fp
   46f8c:	bl	72cc <fcntl64@plt>
   46f90:	cmp	r0, #0
   46f94:	str	r0, [r9, r4, lsl #2]
   46f98:	blt	46fb8 <blkid_probe_get_size@plt+0x3faa0>
   46f9c:	str	r0, [sl, r4, lsl #2]
   46fa0:	b	46ebc <blkid_probe_get_size@plt+0x3f9a4>
   46fa4:	mov	r2, #3
   46fa8:	ldr	r1, [pc, #216]	; 47088 <blkid_probe_get_size@plt+0x3fb70>
   46fac:	bl	72cc <fcntl64@plt>
   46fb0:	subs	r4, r0, #0
   46fb4:	bge	47060 <blkid_probe_get_size@plt+0x3fb48>
   46fb8:	bl	732c <__errno_location@plt>
   46fbc:	cmp	r5, #2
   46fc0:	ldr	r4, [r0]
   46fc4:	rsb	r4, r4, #0
   46fc8:	ble	46f1c <blkid_probe_get_size@plt+0x3fa04>
   46fcc:	mov	r0, r5
   46fd0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   46fd4:	b	46f1c <blkid_probe_get_size@plt+0x3fa04>
   46fd8:	mov	r2, #0
   46fdc:	mov	r1, #1
   46fe0:	mov	r0, r9
   46fe4:	bl	72cc <fcntl64@plt>
   46fe8:	cmp	r0, #0
   46fec:	blt	47010 <blkid_probe_get_size@plt+0x3faf8>
   46ff0:	bic	r2, r0, #1
   46ff4:	cmp	r0, r2
   46ff8:	beq	46f04 <blkid_probe_get_size@plt+0x3f9ec>
   46ffc:	mov	r1, #2
   47000:	mov	r0, r9
   47004:	bl	72cc <fcntl64@plt>
   47008:	cmp	r0, #0
   4700c:	bge	46f04 <blkid_probe_get_size@plt+0x3f9ec>
   47010:	bl	732c <__errno_location@plt>
   47014:	ldr	r4, [r0]
   47018:	rsb	r4, r4, #0
   4701c:	cmp	r4, #0
   47020:	bge	46f04 <blkid_probe_get_size@plt+0x3f9ec>
   47024:	b	46f14 <blkid_probe_get_size@plt+0x3f9fc>
   47028:	mov	r0, r6
   4702c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   47030:	b	46f40 <blkid_probe_get_size@plt+0x3fa28>
   47034:	ldr	r2, [pc, #80]	; 4708c <blkid_probe_get_size@plt+0x3fb74>
   47038:	ldr	r1, [pc, #80]	; 47090 <blkid_probe_get_size@plt+0x3fb78>
   4703c:	add	r2, pc, r2
   47040:	add	r2, r2, #104	; 0x68
   47044:	str	r2, [sp]
   47048:	ldr	r2, [pc, #68]	; 47094 <blkid_probe_get_size@plt+0x3fb7c>
   4704c:	mov	r3, #896	; 0x380
   47050:	add	r2, pc, r2
   47054:	add	r1, pc, r1
   47058:	mov	r0, #0
   4705c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   47060:	mov	r0, r7
   47064:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   47068:	mov	r7, r4
   4706c:	b	46e88 <blkid_probe_get_size@plt+0x3f970>
   47070:	bl	6fb4 <__stack_chk_fail@plt>
   47074:	andeq	r9, r2, r8, lsr #17
   47078:	andeq	r0, r5, ip, asr #26
   4707c:	andeq	r0, r0, ip, lsr r4
   47080:	andeq	r0, r8, r2
   47084:	andeq	fp, r2, ip, lsr #2
   47088:	andeq	r0, r0, r6, lsl #8
   4708c:	andeq	r9, r2, r4, lsl #13
   47090:	andeq	sl, r2, r4, asr #30
   47094:	andeq	r6, r2, ip, lsr #12
   47098:	ldr	r1, [pc, #252]	; 4719c <blkid_probe_get_size@plt+0x3fc84>
   4709c:	ldr	r3, [pc, #252]	; 471a0 <blkid_probe_get_size@plt+0x3fc88>
   470a0:	add	r1, pc, r1
   470a4:	push	{r4, r5, r6, r7, r8, lr}
   470a8:	sub	sp, sp, #32
   470ac:	ldr	r4, [r1, r3]
   470b0:	add	r2, sp, #16
   470b4:	str	r2, [sp]
   470b8:	ldr	lr, [r4]
   470bc:	mov	ip, #4
   470c0:	add	r3, sp, #12
   470c4:	mov	r2, #7
   470c8:	mov	r1, #1
   470cc:	str	lr, [sp, #28]
   470d0:	str	ip, [sp, #16]
   470d4:	mov	r5, r0
   470d8:	bl	69b4 <getsockopt@plt>
   470dc:	cmp	r0, #0
   470e0:	blt	470f0 <blkid_probe_get_size@plt+0x3fbd8>
   470e4:	ldr	r3, [sp, #16]
   470e8:	cmp	r3, #4
   470ec:	beq	47184 <blkid_probe_get_size@plt+0x3fc6c>
   470f0:	add	r3, sp, #32
   470f4:	mov	r6, #8388608	; 0x800000
   470f8:	mov	r7, #4
   470fc:	str	r6, [r3, #-12]!
   47100:	mov	r2, #7
   47104:	str	r7, [sp]
   47108:	mov	r1, #1
   4710c:	mov	r0, r5
   47110:	bl	70b0 <setsockopt@plt>
   47114:	cmp	r0, #0
   47118:	blt	47138 <blkid_probe_get_size@plt+0x3fc20>
   4711c:	mov	r0, #1
   47120:	ldr	r2, [sp, #28]
   47124:	ldr	r3, [r4]
   47128:	cmp	r2, r3
   4712c:	bne	47198 <blkid_probe_get_size@plt+0x3fc80>
   47130:	add	sp, sp, #32
   47134:	pop	{r4, r5, r6, r7, r8, pc}
   47138:	bl	732c <__errno_location@plt>
   4713c:	ldr	r3, [r0]
   47140:	mov	r8, r0
   47144:	cmp	r3, #0
   47148:	ble	4711c <blkid_probe_get_size@plt+0x3fc04>
   4714c:	add	r3, sp, #32
   47150:	str	r7, [sp]
   47154:	mov	r0, r5
   47158:	str	r6, [r3, #-8]!
   4715c:	mov	r2, #32
   47160:	mov	r1, #1
   47164:	bl	70b0 <setsockopt@plt>
   47168:	cmp	r0, #0
   4716c:	bge	4711c <blkid_probe_get_size@plt+0x3fc04>
   47170:	ldr	r0, [r8]
   47174:	cmp	r0, #0
   47178:	rsbgt	r0, r0, #0
   4717c:	bgt	47120 <blkid_probe_get_size@plt+0x3fc08>
   47180:	b	4711c <blkid_probe_get_size@plt+0x3fc04>
   47184:	ldr	r3, [sp, #12]
   47188:	cmp	r3, #16777216	; 0x1000000
   4718c:	movcs	r0, #0
   47190:	bcc	470f0 <blkid_probe_get_size@plt+0x3fbd8>
   47194:	b	47120 <blkid_probe_get_size@plt+0x3fc08>
   47198:	bl	6fb4 <__stack_chk_fail@plt>
   4719c:	andeq	r0, r5, r8, asr #21
   471a0:	andeq	r0, r0, ip, lsr r4
   471a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   471a8:	sub	sp, sp, #300	; 0x12c
   471ac:	ldr	r9, [pc, #1816]	; 478cc <blkid_probe_get_size@plt+0x403b4>
   471b0:	ldr	lr, [pc, #1816]	; 478d0 <blkid_probe_get_size@plt+0x403b8>
   471b4:	add	r9, pc, r9
   471b8:	ldr	ip, [pc, #1812]	; 478d4 <blkid_probe_get_size@plt+0x403bc>
   471bc:	ldr	lr, [r9, lr]
   471c0:	strd	r2, [sp, #28]
   471c4:	ldr	r3, [sp, #336]	; 0x150
   471c8:	add	ip, pc, ip
   471cc:	str	r3, [sp, #36]	; 0x24
   471d0:	ldr	r3, [sp, #340]	; 0x154
   471d4:	mov	fp, r0
   471d8:	ldr	r0, [ip]
   471dc:	str	r1, [sp, #24]
   471e0:	str	r3, [sp, #40]	; 0x28
   471e4:	ldr	r1, [lr]
   471e8:	ldr	r3, [sp, #344]	; 0x158
   471ec:	cmp	r0, #8
   471f0:	str	lr, [sp, #48]	; 0x30
   471f4:	str	r1, [sp, #292]	; 0x124
   471f8:	str	r3, [sp, #44]	; 0x2c
   471fc:	ldr	r4, [sp, #348]	; 0x15c
   47200:	beq	47588 <blkid_probe_get_size@plt+0x40070>
   47204:	ldr	r3, [pc, #1740]	; 478d8 <blkid_probe_get_size@plt+0x403c0>
   47208:	tst	fp, #1016	; 0x3f8
   4720c:	add	r3, pc, r3
   47210:	orreq	fp, fp, #24
   47214:	ldrb	r3, [r3, #4]
   47218:	cmp	r3, #0
   4721c:	bne	47738 <blkid_probe_get_size@plt+0x40220>
   47220:	ldr	sl, [pc, #1716]	; 478dc <blkid_probe_get_size@plt+0x403c4>
   47224:	ldr	r3, [pc, #1716]	; 478e0 <blkid_probe_get_size@plt+0x403c8>
   47228:	add	sl, pc, sl
   4722c:	ldr	r2, [pc, #1712]	; 478e4 <blkid_probe_get_size@plt+0x403cc>
   47230:	add	r3, pc, r3
   47234:	str	r9, [sp, #56]	; 0x38
   47238:	mov	r9, sl
   4723c:	mov	sl, fp
   47240:	str	r3, [sp, #52]	; 0x34
   47244:	add	r2, pc, r2
   47248:	add	r3, r3, #12
   4724c:	str	r2, [sp, #20]
   47250:	str	r3, [sp, #68]	; 0x44
   47254:	mov	r1, r9
   47258:	mov	r0, r4
   4725c:	bl	6c9c <strspn@plt>
   47260:	ldrb	r3, [r4, r0]
   47264:	add	r5, r4, r0
   47268:	cmp	r3, #0
   4726c:	beq	47574 <blkid_probe_get_size@plt+0x4005c>
   47270:	mov	r1, r9
   47274:	mov	r0, r5
   47278:	bl	6e10 <strpbrk@plt>
   4727c:	subs	r4, r0, #0
   47280:	movne	r3, #0
   47284:	strbne	r3, [r4]
   47288:	ldr	r3, [pc, #1624]	; 478e8 <blkid_probe_get_size@plt+0x403d0>
   4728c:	addne	r4, r4, #1
   47290:	add	r3, pc, r3
   47294:	ldr	r3, [r3]
   47298:	cmp	r3, #3
   4729c:	blt	472b0 <blkid_probe_get_size@plt+0x3fd98>
   472a0:	cmp	r3, #4
   472a4:	ble	47510 <blkid_probe_get_size@plt+0x3fff8>
   472a8:	cmp	r3, #7
   472ac:	beq	47510 <blkid_probe_get_size@plt+0x3fff8>
   472b0:	sub	r3, r3, #5
   472b4:	cmp	r3, #1
   472b8:	bhi	4780c <blkid_probe_get_size@plt+0x402f4>
   472bc:	add	r8, sp, #188	; 0xbc
   472c0:	mov	r2, #40	; 0x28
   472c4:	mov	r0, r8
   472c8:	mov	r1, #0
   472cc:	bl	6c84 <memset@plt>
   472d0:	ldr	r3, [pc, #1556]	; 478ec <blkid_probe_get_size@plt+0x403d4>
   472d4:	mov	r7, #0
   472d8:	add	r3, pc, r3
   472dc:	add	r6, sp, #80	; 0x50
   472e0:	ldr	r2, [r3, #52]	; 0x34
   472e4:	mov	r3, #5
   472e8:	cmp	r2, r7
   472ec:	str	r8, [sp, #88]	; 0x58
   472f0:	str	r7, [r6, #4]
   472f4:	str	r7, [sp, #80]	; 0x50
   472f8:	str	r7, [r6, #16]
   472fc:	str	r7, [r6, #20]
   47300:	str	r7, [r6, #24]
   47304:	str	r3, [sp, #92]	; 0x5c
   47308:	blt	475b8 <blkid_probe_get_size@plt+0x400a0>
   4730c:	ldr	r2, [pc, #1500]	; 478f0 <blkid_probe_get_size@plt+0x403d8>
   47310:	mov	r3, #15
   47314:	add	r2, pc, r2
   47318:	add	r0, sp, #152	; 0x98
   4731c:	stm	sp, {r2, sl}
   47320:	mov	r1, r3
   47324:	mov	r2, #1
   47328:	str	r0, [sp, #60]	; 0x3c
   4732c:	bl	7260 <__snprintf_chk@plt>
   47330:	cmp	r0, #14
   47334:	bhi	477e0 <blkid_probe_get_size@plt+0x402c8>
   47338:	mov	r0, r7
   4733c:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   47340:	ldr	r2, [pc, #1452]	; 478f4 <blkid_probe_get_size@plt+0x403dc>
   47344:	mov	r3, #0
   47348:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4734c:	add	fp, sp, #108	; 0x6c
   47350:	mov	r1, fp
   47354:	str	r0, [sp, #76]	; 0x4c
   47358:	add	r0, sp, #76	; 0x4c
   4735c:	bl	6924 <localtime_r@plt>
   47360:	cmp	r0, #0
   47364:	beq	477ac <blkid_probe_get_size@plt+0x40294>
   47368:	ldr	r2, [pc, #1416]	; 478f8 <blkid_probe_get_size@plt+0x403e0>
   4736c:	add	r3, sp, #228	; 0xe4
   47370:	mov	r0, r3
   47374:	str	r3, [sp, #64]	; 0x40
   47378:	add	r2, pc, r2
   4737c:	mov	r3, fp
   47380:	mov	r1, #64	; 0x40
   47384:	bl	6c6c <strftime@plt>
   47388:	cmp	r0, #0
   4738c:	beq	477ac <blkid_probe_get_size@plt+0x40294>
   47390:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   47394:	ldr	r2, [pc, #1376]	; 478fc <blkid_probe_get_size@plt+0x403e4>
   47398:	mov	r3, #17
   4739c:	add	r2, pc, r2
   473a0:	add	fp, sp, #168	; 0xa8
   473a4:	str	r2, [sp]
   473a8:	mov	r1, r3
   473ac:	mov	r2, #1
   473b0:	str	r0, [sp, #4]
   473b4:	mov	r0, fp
   473b8:	bl	7260 <__snprintf_chk@plt>
   473bc:	cmp	r0, #16
   473c0:	bhi	47844 <blkid_probe_get_size@plt+0x4032c>
   473c4:	ldr	r7, [sp, #60]	; 0x3c
   473c8:	mov	r0, r7
   473cc:	bl	723c <strlen@plt>
   473d0:	str	r7, [sp, #188]	; 0xbc
   473d4:	ldr	r7, [sp, #64]	; 0x40
   473d8:	str	r0, [sp, #192]	; 0xc0
   473dc:	mov	r0, r7
   473e0:	bl	723c <strlen@plt>
   473e4:	ldr	r2, [sp, #56]	; 0x38
   473e8:	ldr	r3, [pc, #1296]	; 47900 <blkid_probe_get_size@plt+0x403e8>
   473ec:	str	r7, [sp, #196]	; 0xc4
   473f0:	str	r0, [sp, #200]	; 0xc8
   473f4:	ldr	r3, [r2, r3]
   473f8:	ldr	r7, [r3]
   473fc:	mov	r0, r7
   47400:	bl	723c <strlen@plt>
   47404:	str	r7, [sp, #204]	; 0xcc
   47408:	ldr	r7, [pc, #1268]	; 47904 <blkid_probe_get_size@plt+0x403ec>
   4740c:	add	r7, pc, r7
   47410:	str	r0, [sp, #208]	; 0xd0
   47414:	mov	r0, fp
   47418:	bl	723c <strlen@plt>
   4741c:	str	fp, [sp, #212]	; 0xd4
   47420:	str	r0, [sp, #216]	; 0xd8
   47424:	mov	r0, r5
   47428:	bl	723c <strlen@plt>
   4742c:	ldr	r3, [pc, #1236]	; 47908 <blkid_probe_get_size@plt+0x403f0>
   47430:	str	r5, [sp, #220]	; 0xdc
   47434:	add	r3, pc, r3
   47438:	ldrb	r3, [r3, #5]
   4743c:	cmp	r3, #0
   47440:	str	r0, [sp, #224]	; 0xe0
   47444:	addne	r0, r0, #1
   47448:	strne	r0, [sp, #224]	; 0xe0
   4744c:	mov	r2, #16384	; 0x4000
   47450:	mov	r1, r6
   47454:	ldr	r0, [r7, #52]	; 0x34
   47458:	bl	73e0 <sendmsg@plt>
   4745c:	cmp	r0, #0
   47460:	blt	47794 <blkid_probe_get_size@plt+0x4027c>
   47464:	ldr	r3, [sp, #20]
   47468:	ldrb	r3, [r3, #5]
   4746c:	cmp	r3, #0
   47470:	beq	4756c <blkid_probe_get_size@plt+0x40054>
   47474:	ldr	r2, [sp, #192]	; 0xc0
   47478:	ldr	r3, [sp, #200]	; 0xc8
   4747c:	ldr	r1, [sp, #208]	; 0xd0
   47480:	add	r3, r2, r3
   47484:	ldr	ip, [sp, #216]	; 0xd8
   47488:	add	r3, r3, r1
   4748c:	ldr	r1, [sp, #224]	; 0xe0
   47490:	add	r3, r3, ip
   47494:	add	r3, r3, r1
   47498:	cmp	r0, r3
   4749c:	bcs	4756c <blkid_probe_get_size@plt+0x40054>
   474a0:	cmp	r0, #0
   474a4:	beq	4744c <blkid_probe_get_size@plt+0x3ff34>
   474a8:	cmp	r0, r2
   474ac:	ldr	r3, [sp, #188]	; 0xbc
   474b0:	movcc	r1, r0
   474b4:	movcs	r1, r2
   474b8:	add	r3, r3, r1
   474bc:	str	r3, [sp, #188]	; 0xbc
   474c0:	sub	r0, r0, r1
   474c4:	mov	r3, r8
   474c8:	add	lr, sp, #220	; 0xdc
   474cc:	sub	r2, r2, r1
   474d0:	str	r2, [sp, #192]	; 0xc0
   474d4:	cmp	r0, #0
   474d8:	beq	4744c <blkid_probe_get_size@plt+0x3ff34>
   474dc:	ldr	r2, [r3, #12]
   474e0:	ldr	ip, [r3, #8]
   474e4:	cmp	r2, r0
   474e8:	movcc	r1, r2
   474ec:	movcs	r1, r0
   474f0:	sub	r2, r2, r1
   474f4:	add	ip, ip, r1
   474f8:	str	r2, [r3, #12]
   474fc:	str	ip, [r3, #8]!
   47500:	cmp	r3, lr
   47504:	sub	r0, r0, r1
   47508:	bne	474d4 <blkid_probe_get_size@plt+0x3ffbc>
   4750c:	b	4744c <blkid_probe_get_size@plt+0x3ff34>
   47510:	ldr	r3, [sp, #44]	; 0x2c
   47514:	str	r5, [sp, #12]
   47518:	str	r3, [sp, #8]
   4751c:	ldr	r3, [sp, #40]	; 0x28
   47520:	ldr	r1, [sp, #24]
   47524:	str	r3, [sp, #4]
   47528:	ldr	r3, [sp, #36]	; 0x24
   4752c:	mov	r0, sl
   47530:	str	r3, [sp]
   47534:	ldrd	r2, [sp, #28]
   47538:	bl	45530 <blkid_probe_get_size@plt+0x3e018>
   4753c:	adds	r3, r0, #11
   47540:	movne	r3, #1
   47544:	ands	r3, r3, r0, lsr #31
   47548:	bne	47740 <blkid_probe_get_size@plt+0x40228>
   4754c:	ldr	r3, [pc, #952]	; 4790c <blkid_probe_get_size@plt+0x403f4>
   47550:	add	r3, pc, r3
   47554:	ldr	r3, [r3]
   47558:	sub	r3, r3, #5
   4755c:	cmp	r3, #1
   47560:	bls	472bc <blkid_probe_get_size@plt+0x3fda4>
   47564:	cmp	r0, #0
   47568:	ble	47810 <blkid_probe_get_size@plt+0x402f8>
   4756c:	cmp	r4, #0
   47570:	bne	47254 <blkid_probe_get_size@plt+0x3fd3c>
   47574:	ldr	r3, [pc, #916]	; 47910 <blkid_probe_get_size@plt+0x403f8>
   47578:	add	r3, pc, r3
   4757c:	ldrb	r3, [r3, #4]
   47580:	cmp	r3, #0
   47584:	bne	477d8 <blkid_probe_get_size@plt+0x402c0>
   47588:	ldr	r0, [sp, #24]
   4758c:	ldr	r3, [sp, #48]	; 0x30
   47590:	cmp	r0, #0
   47594:	rsblt	r0, r0, #0
   47598:	ldr	r2, [sp, #292]	; 0x124
   4759c:	ldr	r3, [r3]
   475a0:	uxtb	r0, r0
   475a4:	cmp	r2, r3
   475a8:	rsb	r0, r0, #0
   475ac:	bne	478c8 <blkid_probe_get_size@plt+0x403b0>
   475b0:	add	sp, sp, #300	; 0x12c
   475b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   475b8:	ldr	r3, [pc, #852]	; 47914 <blkid_probe_get_size@plt+0x403fc>
   475bc:	add	r3, pc, r3
   475c0:	ldr	r3, [r3]
   475c4:	sub	r3, r3, #2
   475c8:	cmp	r3, #5
   475cc:	addls	pc, pc, r3, lsl #2
   475d0:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   475d4:	b	47620 <blkid_probe_get_size@plt+0x40108>
   475d8:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   475dc:	b	47620 <blkid_probe_get_size@plt+0x40108>
   475e0:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   475e4:	b	47620 <blkid_probe_get_size@plt+0x40108>
   475e8:	b	47620 <blkid_probe_get_size@plt+0x40108>
   475ec:	ldr	r6, [sp, #52]	; 0x34
   475f0:	ldr	r0, [r6, #56]	; 0x38
   475f4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   475f8:	str	r0, [r6, #56]	; 0x38
   475fc:	bl	42394 <blkid_probe_get_size@plt+0x3ae7c>
   47600:	mov	r3, r5
   47604:	ldr	r2, [sp, #32]
   47608:	ldr	r1, [sp, #28]
   4760c:	mov	r0, sl
   47610:	bl	423b0 <blkid_probe_get_size@plt+0x3ae98>
   47614:	b	4756c <blkid_probe_get_size@plt+0x40054>
   47618:	cmp	r0, #0
   4761c:	bne	477d0 <blkid_probe_get_size@plt+0x402b8>
   47620:	add	r6, sp, #228	; 0xe4
   47624:	mov	r0, r6
   47628:	mov	r2, #40	; 0x28
   4762c:	mov	r1, #0
   47630:	bl	6c84 <memset@plt>
   47634:	ldr	r3, [sp, #52]	; 0x34
   47638:	ldr	r3, [r3, #56]	; 0x38
   4763c:	cmp	r3, #0
   47640:	blt	47600 <blkid_probe_get_size@plt+0x400e8>
   47644:	ldr	r2, [pc, #716]	; 47918 <blkid_probe_get_size@plt+0x40400>
   47648:	mov	r3, #15
   4764c:	add	r2, pc, r2
   47650:	add	r7, sp, #168	; 0xa8
   47654:	stm	sp, {r2, sl}
   47658:	mov	r0, r7
   4765c:	mov	r1, r3
   47660:	mov	r2, #1
   47664:	bl	7260 <__snprintf_chk@plt>
   47668:	cmp	r0, #14
   4766c:	bhi	47870 <blkid_probe_get_size@plt+0x40358>
   47670:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   47674:	ldr	r2, [pc, #672]	; 4791c <blkid_probe_get_size@plt+0x40404>
   47678:	mov	r3, #17
   4767c:	add	r2, pc, r2
   47680:	add	r8, sp, #188	; 0xbc
   47684:	str	r2, [sp]
   47688:	mov	r1, r3
   4768c:	mov	r2, #1
   47690:	str	r0, [sp, #4]
   47694:	mov	r0, r8
   47698:	bl	7260 <__snprintf_chk@plt>
   4769c:	cmp	r0, #16
   476a0:	bhi	4789c <blkid_probe_get_size@plt+0x40384>
   476a4:	mov	r0, r7
   476a8:	bl	723c <strlen@plt>
   476ac:	ldr	r2, [sp, #56]	; 0x38
   476b0:	ldr	r3, [pc, #584]	; 47900 <blkid_probe_get_size@plt+0x403e8>
   476b4:	str	r7, [sp, #228]	; 0xe4
   476b8:	str	r0, [sp, #232]	; 0xe8
   476bc:	ldr	r3, [r2, r3]
   476c0:	ldr	r7, [r3]
   476c4:	mov	r0, r7
   476c8:	bl	723c <strlen@plt>
   476cc:	str	r7, [sp, #236]	; 0xec
   476d0:	str	r0, [sp, #240]	; 0xf0
   476d4:	mov	r0, r8
   476d8:	bl	723c <strlen@plt>
   476dc:	str	r8, [sp, #244]	; 0xf4
   476e0:	str	r0, [sp, #248]	; 0xf8
   476e4:	mov	r0, r5
   476e8:	bl	723c <strlen@plt>
   476ec:	ldr	r3, [sp, #68]	; 0x44
   476f0:	str	r5, [sp, #252]	; 0xfc
   476f4:	mov	r2, #5
   476f8:	str	r0, [sp, #256]	; 0x100
   476fc:	ldm	r3, {r0, r1}
   47700:	add	r3, sp, #260	; 0x104
   47704:	stm	r3, {r0, r1}
   47708:	ldr	r3, [sp, #52]	; 0x34
   4770c:	mov	r1, r6
   47710:	ldr	r0, [r3, #56]	; 0x38
   47714:	bl	73c8 <writev@plt>
   47718:	cmp	r0, #0
   4771c:	bge	4756c <blkid_probe_get_size@plt+0x40054>
   47720:	bl	732c <__errno_location@plt>
   47724:	ldr	r3, [r0]
   47728:	cmp	r3, #0
   4772c:	bgt	475ec <blkid_probe_get_size@plt+0x400d4>
   47730:	bne	4756c <blkid_probe_get_size@plt+0x40054>
   47734:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   47738:	bl	3adf8 <blkid_probe_get_size@plt+0x338e0>
   4773c:	b	47220 <blkid_probe_get_size@plt+0x3fd08>
   47740:	ldr	r6, [pc, #472]	; 47920 <blkid_probe_get_size@plt+0x40408>
   47744:	add	r6, pc, r6
   47748:	ldr	r0, [r6]
   4774c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   47750:	ldr	r3, [pc, #460]	; 47924 <blkid_probe_get_size@plt+0x4040c>
   47754:	add	r3, pc, r3
   47758:	ldr	r3, [r3]
   4775c:	sub	r2, r3, #5
   47760:	cmp	r2, #1
   47764:	str	r0, [r6]
   47768:	bls	472bc <blkid_probe_get_size@plt+0x3fda4>
   4776c:	sub	r3, r3, #2
   47770:	cmp	r3, #5
   47774:	addls	pc, pc, r3, lsl #2
   47778:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   4777c:	b	477d0 <blkid_probe_get_size@plt+0x402b8>
   47780:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   47784:	b	477d0 <blkid_probe_get_size@plt+0x402b8>
   47788:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   4778c:	b	477d0 <blkid_probe_get_size@plt+0x402b8>
   47790:	b	477d0 <blkid_probe_get_size@plt+0x402b8>
   47794:	bl	732c <__errno_location@plt>
   47798:	ldr	r0, [r0]
   4779c:	cmp	r0, #11
   477a0:	cmpne	r0, #0
   477a4:	rsb	r0, r0, #0
   477a8:	ble	47564 <blkid_probe_get_size@plt+0x4004c>
   477ac:	ldr	r6, [pc, #372]	; 47928 <blkid_probe_get_size@plt+0x40410>
   477b0:	add	r6, pc, r6
   477b4:	ldr	r0, [r6, #52]	; 0x34
   477b8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   477bc:	ldr	r3, [pc, #360]	; 4792c <blkid_probe_get_size@plt+0x40414>
   477c0:	add	r3, pc, r3
   477c4:	ldr	r3, [r3]
   477c8:	str	r0, [r6, #52]	; 0x34
   477cc:	b	4776c <blkid_probe_get_size@plt+0x40254>
   477d0:	bl	3ad84 <blkid_probe_get_size@plt+0x3386c>
   477d4:	b	47620 <blkid_probe_get_size@plt+0x40108>
   477d8:	bl	3ad00 <blkid_probe_get_size@plt+0x337e8>
   477dc:	b	47588 <blkid_probe_get_size@plt+0x40070>
   477e0:	ldr	r3, [pc, #328]	; 47930 <blkid_probe_get_size@plt+0x40418>
   477e4:	ldr	r2, [pc, #328]	; 47934 <blkid_probe_get_size@plt+0x4041c>
   477e8:	add	r3, pc, r3
   477ec:	ldr	r1, [pc, #324]	; 47938 <blkid_probe_get_size@plt+0x40420>
   477f0:	add	r3, r3, #120	; 0x78
   477f4:	str	r3, [sp]
   477f8:	mov	r0, r7
   477fc:	ldr	r3, [pc, #312]	; 4793c <blkid_probe_get_size@plt+0x40424>
   47800:	add	r2, pc, r2
   47804:	add	r1, pc, r1
   47808:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4780c:	mov	r0, #0
   47810:	ldr	r3, [pc, #296]	; 47940 <blkid_probe_get_size@plt+0x40428>
   47814:	add	r3, pc, r3
   47818:	ldr	r3, [r3]
   4781c:	sub	r3, r3, #2
   47820:	cmp	r3, #5
   47824:	addls	pc, pc, r3, lsl #2
   47828:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   4782c:	b	47618 <blkid_probe_get_size@plt+0x40100>
   47830:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   47834:	b	47618 <blkid_probe_get_size@plt+0x40100>
   47838:	b	47600 <blkid_probe_get_size@plt+0x400e8>
   4783c:	b	47618 <blkid_probe_get_size@plt+0x40100>
   47840:	b	47618 <blkid_probe_get_size@plt+0x40100>
   47844:	ldr	r3, [pc, #248]	; 47944 <blkid_probe_get_size@plt+0x4042c>
   47848:	ldr	r2, [pc, #248]	; 47948 <blkid_probe_get_size@plt+0x40430>
   4784c:	add	r3, pc, r3
   47850:	ldr	r1, [pc, #244]	; 4794c <blkid_probe_get_size@plt+0x40434>
   47854:	add	r3, r3, #120	; 0x78
   47858:	str	r3, [sp]
   4785c:	mov	r0, r7
   47860:	ldr	r3, [pc, #232]	; 47950 <blkid_probe_get_size@plt+0x40438>
   47864:	add	r2, pc, r2
   47868:	add	r1, pc, r1
   4786c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   47870:	ldr	r2, [pc, #220]	; 47954 <blkid_probe_get_size@plt+0x4043c>
   47874:	ldr	r1, [pc, #220]	; 47958 <blkid_probe_get_size@plt+0x40440>
   47878:	add	r2, pc, r2
   4787c:	add	r2, r2, #136	; 0x88
   47880:	str	r2, [sp]
   47884:	ldr	r2, [pc, #208]	; 4795c <blkid_probe_get_size@plt+0x40444>
   47888:	ldr	r3, [pc, #208]	; 47960 <blkid_probe_get_size@plt+0x40448>
   4788c:	add	r2, pc, r2
   47890:	add	r1, pc, r1
   47894:	mov	r0, #0
   47898:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4789c:	ldr	r2, [pc, #192]	; 47964 <blkid_probe_get_size@plt+0x4044c>
   478a0:	ldr	r1, [pc, #192]	; 47968 <blkid_probe_get_size@plt+0x40450>
   478a4:	add	r2, pc, r2
   478a8:	add	r2, r2, #136	; 0x88
   478ac:	str	r2, [sp]
   478b0:	ldr	r2, [pc, #180]	; 4796c <blkid_probe_get_size@plt+0x40454>
   478b4:	ldr	r3, [pc, #180]	; 47970 <blkid_probe_get_size@plt+0x40458>
   478b8:	add	r2, pc, r2
   478bc:	add	r1, pc, r1
   478c0:	mov	r0, #0
   478c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   478c8:	bl	6fb4 <__stack_chk_fail@plt>
   478cc:			; <UNDEFINED> instruction: 0x000509b4
   478d0:	andeq	r0, r0, ip, lsr r4
   478d4:	andeq	r1, r5, r4, lsr #25
   478d8:	andeq	r1, r5, r0, ror #24
   478dc:	andeq	lr, r1, r0, ror r1
   478e0:	strdeq	r0, [r5], -r8
   478e4:	andeq	r1, r5, r8, lsr #24
   478e8:	ldrdeq	r1, [r5], -ip
   478ec:	andeq	r0, r5, r0, asr lr
   478f0:			; <UNDEFINED> instruction: 0x00028dbc
   478f4:	andeq	r4, pc, r0, asr #4
   478f8:	andeq	sl, r2, ip, asr ip
   478fc:	andeq	sl, r2, r4, asr #24
   47900:	andeq	r0, r0, r0, lsl #9
   47904:	andeq	r0, r5, ip, lsl sp
   47908:	andeq	r1, r5, r8, lsr sl
   4790c:	andeq	r1, r5, ip, lsl r9
   47910:	strdeq	r1, [r5], -r4
   47914:			; <UNDEFINED> instruction: 0x000518b0
   47918:	andeq	r8, r2, r4, lsl #21
   4791c:	andeq	sl, r2, r4, ror #18
   47920:	andeq	r0, r5, r4, ror #19
   47924:	andeq	r1, r5, r8, lsl r7
   47928:	andeq	r0, r5, r8, ror r9
   4792c:	andeq	r1, r5, ip, lsr #13
   47930:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   47934:	andeq	r1, r2, r8, asr #15
   47938:	andeq	sl, r2, r0, lsr #15
   4793c:	muleq	r0, r9, r1
   47940:	andeq	r1, r5, r8, asr r6
   47944:	andeq	r8, r2, r4, ror lr
   47948:	andeq	r1, r2, r4, ror #14
   4794c:	andeq	sl, r2, r0, lsl #15
   47950:	andeq	r0, r0, r2, lsr #3
   47954:	andeq	r8, r2, r8, asr #28
   47958:	andeq	sl, r2, r4, lsl r7
   4795c:	andeq	r1, r2, ip, lsr r7
   47960:	andeq	r0, r0, lr, asr #3
   47964:	andeq	r8, r2, ip, lsl lr
   47968:	andeq	sl, r2, ip, lsr #14
   4796c:	andeq	r1, r2, r0, lsl r7
   47970:	andeq	r0, r0, pc, asr #3
   47974:	ldr	ip, [pc, #420]	; 47b20 <blkid_probe_get_size@plt+0x40608>
   47978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4797c:	add	ip, pc, ip
   47980:	ldr	lr, [pc, #412]	; 47b24 <blkid_probe_get_size@plt+0x4060c>
   47984:	add	fp, sp, #32
   47988:	mov	r6, r0
   4798c:	sub	sp, sp, #52	; 0x34
   47990:	ldr	r0, [ip, lr]
   47994:	mov	sl, r3
   47998:	mov	r7, r1
   4799c:	ldr	r3, [r0]
   479a0:	mov	r1, ip
   479a4:	str	r3, [fp, #-40]	; 0xffffffd8
   479a8:	str	r0, [fp, #-48]	; 0xffffffd0
   479ac:	mov	r9, r2
   479b0:	bl	732c <__errno_location@plt>
   479b4:	ldr	r3, [pc, #364]	; 47b28 <blkid_probe_get_size@plt+0x40610>
   479b8:	ldr	r8, [fp, #12]
   479bc:	add	r3, pc, r3
   479c0:	ldr	r3, [r3, #20]
   479c4:	cmp	r6, r3
   479c8:	ldr	r3, [fp, #4]
   479cc:	str	r3, [fp, #-52]	; 0xffffffcc
   479d0:	ldr	r3, [fp, #8]
   479d4:	str	r3, [fp, #-56]	; 0xffffffc8
   479d8:	ldr	r3, [fp, #24]
   479dc:	mov	r4, r0
   479e0:	eor	r0, r7, r7, asr #31
   479e4:	sub	r0, r0, r7, asr #31
   479e8:	ldr	r5, [r4]
   479ec:	uxtb	r0, r0
   479f0:	ble	47a1c <blkid_probe_get_size@plt+0x40504>
   479f4:	rsb	r0, r0, #0
   479f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   479fc:	cmp	r5, #0
   47a00:	strge	r5, [r4]
   47a04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   47a08:	ldr	r3, [r3]
   47a0c:	cmp	r2, r3
   47a10:	bne	47b1c <blkid_probe_get_size@plt+0x40604>
   47a14:	sub	sp, fp, #32
   47a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47a1c:	cmp	r8, #0
   47a20:	str	r0, [r4]
   47a24:	beq	47ad8 <blkid_probe_get_size@plt+0x405c0>
   47a28:	mov	r0, r8
   47a2c:	str	r3, [fp, #-60]	; 0xffffffc4
   47a30:	bl	723c <strlen@plt>
   47a34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   47a38:	add	r2, r0, #2048	; 0x800
   47a3c:	add	r2, r2, #2
   47a40:	cmp	r2, #4194304	; 0x400000
   47a44:	bhi	47af0 <blkid_probe_get_size@plt+0x405d8>
   47a48:	add	r0, r0, #2064	; 0x810
   47a4c:	bic	r0, r0, #7
   47a50:	sub	sp, sp, r0
   47a54:	str	r3, [fp, #-64]	; 0xffffffc0
   47a58:	add	r3, sp, #16
   47a5c:	mov	r0, r3
   47a60:	mov	r1, r8
   47a64:	str	r3, [fp, #-60]	; 0xffffffc4
   47a68:	bl	6ae0 <stpcpy@plt>
   47a6c:	ldr	r2, [pc, #184]	; 47b2c <blkid_probe_get_size@plt+0x40614>
   47a70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   47a74:	add	r2, pc, r2
   47a78:	ldrh	ip, [r2]
   47a7c:	ldrb	r2, [r2, #2]
   47a80:	strh	ip, [r0]
   47a84:	strb	r2, [r0, #2]!
   47a88:	ldr	r2, [fp, #28]
   47a8c:	str	r3, [sp]
   47a90:	str	r2, [sp, #4]
   47a94:	mvn	r3, #0
   47a98:	mov	r2, #1
   47a9c:	mov	r1, #2048	; 0x800
   47aa0:	bl	6b04 <__vsnprintf_chk@plt>
   47aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   47aa8:	str	r8, [sp, #8]
   47aac:	str	r3, [sp, #12]
   47ab0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   47ab4:	mov	r2, r9
   47ab8:	str	r3, [sp, #4]
   47abc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   47ac0:	mov	r1, r7
   47ac4:	str	r3, [sp]
   47ac8:	mov	r0, r6
   47acc:	mov	r3, sl
   47ad0:	bl	471a4 <blkid_probe_get_size@plt+0x3fc8c>
   47ad4:	b	479f8 <blkid_probe_get_size@plt+0x404e0>
   47ad8:	sub	sp, sp, #2048	; 0x800
   47adc:	sub	sp, sp, #8
   47ae0:	add	r2, sp, #16
   47ae4:	str	r2, [fp, #-60]	; 0xffffffc4
   47ae8:	mov	r0, r2
   47aec:	b	47a88 <blkid_probe_get_size@plt+0x40570>
   47af0:	ldr	r2, [pc, #56]	; 47b30 <blkid_probe_get_size@plt+0x40618>
   47af4:	ldr	r1, [pc, #56]	; 47b34 <blkid_probe_get_size@plt+0x4061c>
   47af8:	add	r2, pc, r2
   47afc:	add	r2, r2, #152	; 0x98
   47b00:	str	r2, [sp]
   47b04:	ldr	r2, [pc, #44]	; 47b38 <blkid_probe_get_size@plt+0x40620>
   47b08:	ldr	r3, [pc, #44]	; 47b3c <blkid_probe_get_size@plt+0x40624>
   47b0c:	add	r2, pc, r2
   47b10:	add	r1, pc, r1
   47b14:	mov	r0, #0
   47b18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   47b1c:	bl	6fb4 <__stack_chk_fail@plt>
   47b20:	andeq	r0, r5, ip, ror #3
   47b24:	andeq	r0, r0, ip, lsr r4
   47b28:	andeq	r0, r5, ip, ror #14
   47b2c:	andeq	sl, r2, r0, ror r5
   47b30:	andeq	r8, r2, r8, asr #23
   47b34:	andeq	sp, r1, r8, lsl #11
   47b38:			; <UNDEFINED> instruction: 0x000214bc
   47b3c:	ldrdeq	r0, [r0], -sl
   47b40:	ldr	r3, [pc, #920]	; 47ee0 <blkid_probe_get_size@plt+0x409c8>
   47b44:	ldr	r2, [pc, #920]	; 47ee4 <blkid_probe_get_size@plt+0x409cc>
   47b48:	add	r3, pc, r3
   47b4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   47b50:	add	fp, sp, #28
   47b54:	sub	sp, sp, #32
   47b58:	ldr	r6, [r3, r2]
   47b5c:	ldr	r2, [pc, #900]	; 47ee8 <blkid_probe_get_size@plt+0x409d0>
   47b60:	ldr	r3, [pc, #900]	; 47eec <blkid_probe_get_size@plt+0x409d4>
   47b64:	ldr	r1, [r6]
   47b68:	add	r2, pc, r2
   47b6c:	add	r3, pc, r3
   47b70:	mov	r4, #0
   47b74:	str	r1, [fp, #-32]	; 0xffffffe0
   47b78:	str	r2, [fp, #-52]	; 0xffffffcc
   47b7c:	ldr	r1, [pc, #876]	; 47ef0 <blkid_probe_get_size@plt+0x409d8>
   47b80:	ldr	r2, [pc, #876]	; 47ef4 <blkid_probe_get_size@plt+0x409dc>
   47b84:	str	r3, [fp, #-48]	; 0xffffffd0
   47b88:	ldr	r3, [pc, #872]	; 47ef8 <blkid_probe_get_size@plt+0x409e0>
   47b8c:	mov	r5, r4
   47b90:	add	r4, r4, #1
   47b94:	mov	r7, r0
   47b98:	add	r1, pc, r1
   47b9c:	add	r2, pc, r2
   47ba0:	add	r3, pc, r3
   47ba4:	mov	r0, #4
   47ba8:	cmp	r4, #5
   47bac:	str	r1, [fp, #-44]	; 0xffffffd4
   47bb0:	str	r2, [fp, #-40]	; 0xffffffd8
   47bb4:	sub	r8, fp, #52	; 0x34
   47bb8:	str	r3, [fp, #-36]	; 0xffffffdc
   47bbc:	add	r5, r5, r0
   47bc0:	beq	47be4 <blkid_probe_get_size@plt+0x406cc>
   47bc4:	ldr	r0, [r8, r4, lsl #2]
   47bc8:	cmp	r0, #0
   47bcc:	beq	47be4 <blkid_probe_get_size@plt+0x406cc>
   47bd0:	bl	723c <strlen@plt>
   47bd4:	add	r4, r4, #1
   47bd8:	cmp	r4, #5
   47bdc:	add	r5, r5, r0
   47be0:	bne	47bc4 <blkid_probe_get_size@plt+0x406ac>
   47be4:	add	r3, r5, #1
   47be8:	cmp	r3, #4194304	; 0x400000
   47bec:	bhi	47dd4 <blkid_probe_get_size@plt+0x408bc>
   47bf0:	add	r5, r5, #15
   47bf4:	bic	r5, r5, #7
   47bf8:	sub	sp, sp, r5
   47bfc:	ldr	r1, [pc, #760]	; 47efc <blkid_probe_get_size@plt+0x409e4>
   47c00:	add	r8, sp, #8
   47c04:	add	r1, pc, r1
   47c08:	mov	r0, r8
   47c0c:	mov	r4, #0
   47c10:	sub	r5, fp, #52	; 0x34
   47c14:	add	r4, r4, #1
   47c18:	bl	6ae0 <stpcpy@plt>
   47c1c:	cmp	r4, #5
   47c20:	beq	47c30 <blkid_probe_get_size@plt+0x40718>
   47c24:	ldr	r1, [r5, r4, lsl #2]
   47c28:	cmp	r1, #0
   47c2c:	bne	47c14 <blkid_probe_get_size@plt+0x406fc>
   47c30:	ldr	r3, [pc, #712]	; 47f00 <blkid_probe_get_size@plt+0x409e8>
   47c34:	mov	r4, #0
   47c38:	add	r3, pc, r3
   47c3c:	ldr	r1, [pc, #704]	; 47f04 <blkid_probe_get_size@plt+0x409ec>
   47c40:	ldr	r2, [pc, #704]	; 47f08 <blkid_probe_get_size@plt+0x409f0>
   47c44:	str	r3, [fp, #-52]	; 0xffffffcc
   47c48:	ldr	r3, [pc, #700]	; 47f0c <blkid_probe_get_size@plt+0x409f4>
   47c4c:	mov	r5, r4
   47c50:	add	r4, r4, #1
   47c54:	add	r1, pc, r1
   47c58:	add	r2, pc, r2
   47c5c:	add	r3, pc, r3
   47c60:	mov	r0, #7
   47c64:	cmp	r4, #4
   47c68:	str	r1, [fp, #-48]	; 0xffffffd0
   47c6c:	str	r2, [fp, #-44]	; 0xffffffd4
   47c70:	sub	r9, fp, #52	; 0x34
   47c74:	str	r3, [fp, #-40]	; 0xffffffd8
   47c78:	add	r5, r5, r0
   47c7c:	beq	47ca0 <blkid_probe_get_size@plt+0x40788>
   47c80:	ldr	r0, [r9, r4, lsl #2]
   47c84:	cmp	r0, #0
   47c88:	beq	47ca0 <blkid_probe_get_size@plt+0x40788>
   47c8c:	bl	723c <strlen@plt>
   47c90:	add	r4, r4, #1
   47c94:	cmp	r4, #4
   47c98:	add	r5, r5, r0
   47c9c:	bne	47c80 <blkid_probe_get_size@plt+0x40768>
   47ca0:	add	r3, r5, #1
   47ca4:	cmp	r3, #4194304	; 0x400000
   47ca8:	bhi	47e00 <blkid_probe_get_size@plt+0x408e8>
   47cac:	add	r5, r5, #15
   47cb0:	bic	r5, r5, #7
   47cb4:	sub	sp, sp, r5
   47cb8:	ldr	r1, [pc, #592]	; 47f10 <blkid_probe_get_size@plt+0x409f8>
   47cbc:	add	r5, sp, #8
   47cc0:	add	r1, pc, r1
   47cc4:	mov	r0, r5
   47cc8:	mov	r4, #0
   47ccc:	sub	r9, fp, #52	; 0x34
   47cd0:	add	r4, r4, #1
   47cd4:	bl	6ae0 <stpcpy@plt>
   47cd8:	cmp	r4, #4
   47cdc:	beq	47cec <blkid_probe_get_size@plt+0x407d4>
   47ce0:	ldr	r1, [r9, r4, lsl #2]
   47ce4:	cmp	r1, #0
   47ce8:	bne	47cd0 <blkid_probe_get_size@plt+0x407b8>
   47cec:	ldr	r4, [pc, #544]	; 47f14 <blkid_probe_get_size@plt+0x409fc>
   47cf0:	ldrb	r3, [r5]
   47cf4:	add	r4, pc, r4
   47cf8:	ldr	r0, [r4, #60]	; 0x3c
   47cfc:	cmp	r3, #0
   47d00:	moveq	r5, r8
   47d04:	cmp	r0, #0
   47d08:	blt	47d6c <blkid_probe_get_size@plt+0x40854>
   47d0c:	cmp	r0, #0
   47d10:	beq	47dc8 <blkid_probe_get_size@plt+0x408b0>
   47d14:	ldr	r2, [pc, #508]	; 47f18 <blkid_probe_get_size@plt+0x40a00>
   47d18:	mov	r0, #0
   47d1c:	add	r2, pc, r2
   47d20:	str	r2, [sp]
   47d24:	str	r0, [sp, #4]
   47d28:	ldr	r2, [pc, #492]	; 47f1c <blkid_probe_get_size@plt+0x40a04>
   47d2c:	ldr	r0, [pc, #492]	; 47f20 <blkid_probe_get_size@plt+0x40a08>
   47d30:	mov	r3, r5
   47d34:	mov	r1, r8
   47d38:	add	r2, pc, r2
   47d3c:	add	r0, pc, r0
   47d40:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   47d44:	cmp	r0, #0
   47d48:	strne	r0, [r7]
   47d4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   47d50:	ldr	r3, [r6]
   47d54:	movne	r0, #0
   47d58:	mvneq	r0, #11
   47d5c:	cmp	r2, r3
   47d60:	bne	47ec4 <blkid_probe_get_size@plt+0x409ac>
   47d64:	sub	sp, fp, #28
   47d68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   47d6c:	ldr	r0, [pc, #432]	; 47f24 <blkid_probe_get_size@plt+0x40a0c>
   47d70:	add	r0, pc, r0
   47d74:	bl	2e0ac <blkid_probe_get_size@plt+0x26b94>
   47d78:	cmp	r0, #0
   47d7c:	strge	r0, [r4, #60]	; 0x3c
   47d80:	bge	47d0c <blkid_probe_get_size@plt+0x407f4>
   47d84:	ldr	r3, [r4, #64]	; 0x40
   47d88:	cmp	r3, #0
   47d8c:	blt	47e2c <blkid_probe_get_size@plt+0x40914>
   47d90:	ldr	r3, [pc, #400]	; 47f28 <blkid_probe_get_size@plt+0x40a10>
   47d94:	add	r3, pc, r3
   47d98:	ldr	r2, [r3, #64]	; 0x40
   47d9c:	cmp	r2, #0
   47da0:	beq	47dc4 <blkid_probe_get_size@plt+0x408ac>
   47da4:	ldr	r2, [pc, #384]	; 47f2c <blkid_probe_get_size@plt+0x40a14>
   47da8:	add	r2, pc, r2
   47dac:	ldr	r2, [r2, #8]
   47db0:	cmp	r2, #0
   47db4:	movle	r2, #1
   47db8:	strle	r2, [r3, #60]	; 0x3c
   47dbc:	ble	47d14 <blkid_probe_get_size@plt+0x407fc>
   47dc0:	mov	r2, #0
   47dc4:	str	r2, [r3, #60]	; 0x3c
   47dc8:	mov	r0, r5
   47dcc:	bl	74e8 <strdup@plt>
   47dd0:	b	47d44 <blkid_probe_get_size@plt+0x4082c>
   47dd4:	ldr	r2, [pc, #340]	; 47f30 <blkid_probe_get_size@plt+0x40a18>
   47dd8:	ldr	r1, [pc, #340]	; 47f34 <blkid_probe_get_size@plt+0x40a1c>
   47ddc:	add	r2, pc, r2
   47de0:	add	r2, r2, #176	; 0xb0
   47de4:	str	r2, [sp]
   47de8:	ldr	r2, [pc, #328]	; 47f38 <blkid_probe_get_size@plt+0x40a20>
   47dec:	mov	r3, #129	; 0x81
   47df0:	add	r2, pc, r2
   47df4:	add	r1, pc, r1
   47df8:	mov	r0, #0
   47dfc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   47e00:	ldr	r2, [pc, #308]	; 47f3c <blkid_probe_get_size@plt+0x40a24>
   47e04:	ldr	r1, [pc, #308]	; 47f40 <blkid_probe_get_size@plt+0x40a28>
   47e08:	add	r2, pc, r2
   47e0c:	add	r2, r2, #176	; 0xb0
   47e10:	str	r2, [sp]
   47e14:	ldr	r2, [pc, #296]	; 47f44 <blkid_probe_get_size@plt+0x40a2c>
   47e18:	mov	r3, #130	; 0x82
   47e1c:	add	r2, pc, r2
   47e20:	add	r1, pc, r1
   47e24:	mov	r0, #0
   47e28:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   47e2c:	ldr	r0, [pc, #276]	; 47f48 <blkid_probe_get_size@plt+0x40a30>
   47e30:	add	r0, pc, r0
   47e34:	bl	2e0ac <blkid_probe_get_size@plt+0x26b94>
   47e38:	cmp	r0, #0
   47e3c:	strge	r0, [r4, #64]	; 0x40
   47e40:	bge	47d90 <blkid_probe_get_size@plt+0x40878>
   47e44:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   47e48:	cmp	r0, #1
   47e4c:	beq	47e8c <blkid_probe_get_size@plt+0x40974>
   47e50:	ldr	r3, [r4, #68]	; 0x44
   47e54:	cmp	r3, #0
   47e58:	blt	47ea0 <blkid_probe_get_size@plt+0x40988>
   47e5c:	ldr	r3, [pc, #232]	; 47f4c <blkid_probe_get_size@plt+0x40a34>
   47e60:	add	r3, pc, r3
   47e64:	ldr	r3, [r3, #68]	; 0x44
   47e68:	cmp	r3, #0
   47e6c:	beq	47e7c <blkid_probe_get_size@plt+0x40964>
   47e70:	bl	863c <blkid_probe_get_size@plt+0x1124>
   47e74:	eor	r3, r0, #1
   47e78:	uxtb	r3, r3
   47e7c:	ldr	r2, [pc, #204]	; 47f50 <blkid_probe_get_size@plt+0x40a38>
   47e80:	add	r2, pc, r2
   47e84:	str	r3, [r2, #64]	; 0x40
   47e88:	b	47d90 <blkid_probe_get_size@plt+0x40878>
   47e8c:	bl	863c <blkid_probe_get_size@plt+0x1124>
   47e90:	eor	r3, r0, #1
   47e94:	uxtb	r3, r3
   47e98:	str	r3, [r4, #64]	; 0x40
   47e9c:	b	47d90 <blkid_probe_get_size@plt+0x40878>
   47ea0:	mov	r0, #1
   47ea4:	bl	6ffc <isatty@plt>
   47ea8:	cmp	r0, #0
   47eac:	movle	r0, #0
   47eb0:	bgt	47ec8 <blkid_probe_get_size@plt+0x409b0>
   47eb4:	ldr	r3, [pc, #152]	; 47f54 <blkid_probe_get_size@plt+0x40a3c>
   47eb8:	add	r3, pc, r3
   47ebc:	str	r0, [r3, #68]	; 0x44
   47ec0:	b	47e5c <blkid_probe_get_size@plt+0x40944>
   47ec4:	bl	6fb4 <__stack_chk_fail@plt>
   47ec8:	mov	r0, #2
   47ecc:	bl	6ffc <isatty@plt>
   47ed0:	cmp	r0, #0
   47ed4:	movle	r0, #0
   47ed8:	movgt	r0, #1
   47edc:	b	47eb4 <blkid_probe_get_size@plt+0x4099c>
   47ee0:	andeq	r0, r5, r0, lsr #32
   47ee4:	andeq	r0, r0, ip, lsr r4
   47ee8:	andeq	sl, r2, ip, lsr #9
   47eec:			; <UNDEFINED> instruction: 0x0002a4b0
   47ef0:	andeq	sl, r2, ip, lsl #9
   47ef4:	andeq	lr, r2, r8, lsr #15
   47ef8:	andeq	r6, r2, r8, lsl #23
   47efc:	andeq	sl, r2, r0, lsl r4
   47f00:	andeq	sl, r2, r4, ror #7
   47f04:	ldrdeq	sl, [r2], -r0
   47f08:	andeq	lr, r2, ip, ror #13
   47f0c:	andeq	sl, r2, ip, ror #7
   47f10:	andeq	sl, r2, ip, asr r3
   47f14:	andeq	r0, r5, r4, lsr r4
   47f18:	andeq	sl, r2, r4, ror #6
   47f1c:	andeq	sl, r2, ip, lsr r3
   47f20:	andeq	sl, r2, ip, lsr r3
   47f24:	andeq	sl, r2, r4, ror #5
   47f28:	muleq	r5, r4, r3
   47f2c:	andeq	r1, r5, r4, asr #1
   47f30:	andeq	r8, r2, r4, ror #17
   47f34:	andeq	sp, r1, r4, lsr #5
   47f38:	andeq	sl, r2, r8, lsr r2
   47f3c:			; <UNDEFINED> instruction: 0x000288b8
   47f40:	andeq	sp, r1, r8, ror r2
   47f44:	andeq	sl, r2, ip, lsl #4
   47f48:	andeq	sl, r2, r4, lsr r2
   47f4c:	andeq	r0, r5, r8, asr #5
   47f50:	andeq	r0, r5, r8, lsr #5
   47f54:	andeq	r0, r5, r0, ror r2
   47f58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   47f5c:	mov	fp, r3
   47f60:	mvn	r3, #0
   47f64:	mov	sl, r2
   47f68:	sub	sp, sp, #76	; 0x4c
   47f6c:	mvn	r2, #0
   47f70:	cmp	fp, r3
   47f74:	cmpeq	sl, r2
   47f78:	str	r0, [sp, #48]	; 0x30
   47f7c:	beq	48244 <blkid_probe_get_size@plt+0x40d2c>
   47f80:	orrs	r3, sl, fp
   47f84:	beq	48208 <blkid_probe_get_size@plt+0x40cf0>
   47f88:	ldr	r1, [pc, #776]	; 48298 <blkid_probe_get_size@plt+0x40d80>
   47f8c:	add	r7, pc, #756	; 0x2f4
   47f90:	ldrd	r6, [r7]
   47f94:	add	r1, pc, r1
   47f98:	ldr	r3, [pc, #764]	; 4829c <blkid_probe_get_size@plt+0x40d84>
   47f9c:	str	r1, [sp, #64]	; 0x40
   47fa0:	ldr	r1, [pc, #760]	; 482a0 <blkid_probe_get_size@plt+0x40d88>
   47fa4:	add	r3, pc, r3
   47fa8:	ldr	r9, [sp, #48]	; 0x30
   47fac:	cmp	fp, r7
   47fb0:	add	r2, r3, #128	; 0x80
   47fb4:	add	r1, pc, r1
   47fb8:	cmpeq	sl, r6
   47fbc:	str	r2, [sp, #52]	; 0x34
   47fc0:	str	r9, [sp, #44]	; 0x2c
   47fc4:	mov	r8, #64	; 0x40
   47fc8:	mov	r2, #0
   47fcc:	str	r1, [sp, #68]	; 0x44
   47fd0:	mov	r9, r3
   47fd4:	bcc	480d4 <blkid_probe_get_size@plt+0x40bbc>
   47fd8:	cmp	r8, #1
   47fdc:	bls	480e0 <blkid_probe_get_size@plt+0x40bc8>
   47fe0:	mov	r2, r6
   47fe4:	mov	r3, r7
   47fe8:	mov	r0, sl
   47fec:	mov	r1, fp
   47ff0:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   47ff4:	strd	r0, [sp, #56]	; 0x38
   47ff8:	add	r1, pc, #656	; 0x290
   47ffc:	ldrd	r0, [r1]
   48000:	mov	r5, r2
   48004:	mov	r4, r3
   48008:	cmp	fp, r1
   4800c:	cmpeq	sl, r0
   48010:	movls	r1, #1
   48014:	movhi	r1, #0
   48018:	orrs	r0, r3, r2
   4801c:	moveq	r1, #0
   48020:	cmp	r1, #0
   48024:	bne	480f8 <blkid_probe_get_size@plt+0x40be0>
   48028:	ldrd	r2, [sp, #44]	; 0x2c
   4802c:	cmp	r3, r2
   48030:	bcs	48200 <blkid_probe_get_size@plt+0x40ce8>
   48034:	ldr	r3, [pc, #616]	; 482a4 <blkid_probe_get_size@plt+0x40d8c>
   48038:	add	r3, pc, r3
   4803c:	ldrd	r0, [sp, #56]	; 0x38
   48040:	ldr	r2, [r9]
   48044:	str	r3, [sp, #4]
   48048:	ldr	r3, [sp, #64]	; 0x40
   4804c:	strd	r0, [sp, #8]
   48050:	str	r2, [sp, #16]
   48054:	str	r3, [sp]
   48058:	mov	r2, #1
   4805c:	mvn	r3, #0
   48060:	mov	r1, r8
   48064:	ldr	r0, [sp, #44]	; 0x2c
   48068:	bl	7260 <__snprintf_chk@plt>
   4806c:	mov	sl, r5
   48070:	mov	fp, r4
   48074:	ldr	r3, [sp, #52]	; 0x34
   48078:	cmp	r0, r8
   4807c:	movcs	r0, r8
   48080:	cmp	r9, r3
   48084:	ldr	r3, [sp, #44]	; 0x2c
   48088:	sub	r8, r8, r0
   4808c:	add	r3, r3, r0
   48090:	str	r3, [sp, #44]	; 0x2c
   48094:	beq	4823c <blkid_probe_get_size@plt+0x40d24>
   48098:	orrs	r3, sl, fp
   4809c:	beq	480e0 <blkid_probe_get_size@plt+0x40bc8>
   480a0:	mov	r2, #1
   480a4:	ldrd	r0, [sp, #112]	; 0x70
   480a8:	add	r9, r9, #16
   480ac:	cmp	r1, fp
   480b0:	cmpeq	r0, sl
   480b4:	movls	r3, #0
   480b8:	andhi	r3, r2, #1
   480bc:	cmp	r3, #0
   480c0:	bne	480e0 <blkid_probe_get_size@plt+0x40bc8>
   480c4:	ldrd	r6, [r9, #8]
   480c8:	cmp	fp, r7
   480cc:	cmpeq	sl, r6
   480d0:	bcs	47fd8 <blkid_probe_get_size@plt+0x40ac0>
   480d4:	ldr	r3, [sp, #52]	; 0x34
   480d8:	cmp	r9, r3
   480dc:	bne	480a4 <blkid_probe_get_size@plt+0x40b8c>
   480e0:	ldr	r9, [sp, #44]	; 0x2c
   480e4:	mov	r3, #0
   480e8:	ldr	r0, [sp, #48]	; 0x30
   480ec:	strb	r3, [r9]
   480f0:	add	sp, sp, #76	; 0x4c
   480f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   480f8:	cmp	r7, #0
   480fc:	cmpeq	r6, #1
   48100:	movhi	sl, #0
   48104:	bls	4826c <blkid_probe_get_size@plt+0x40d54>
   48108:	mov	r0, r6
   4810c:	mov	r1, r7
   48110:	mov	r2, #10
   48114:	mov	r3, #0
   48118:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4811c:	add	sl, sl, #1
   48120:	sxtb	sl, sl
   48124:	cmp	r1, #0
   48128:	cmpeq	r0, #1
   4812c:	mov	r6, r0
   48130:	mov	r7, r1
   48134:	bhi	48108 <blkid_probe_get_size@plt+0x40bf0>
   48138:	ldrd	r2, [sp, #112]	; 0x70
   4813c:	cmp	r3, #0
   48140:	cmpeq	r2, #1
   48144:	bls	48198 <blkid_probe_get_size@plt+0x40c80>
   48148:	ldrd	r6, [sp, #112]	; 0x70
   4814c:	mov	r0, r5
   48150:	mov	r1, r4
   48154:	mov	r2, #10
   48158:	mov	r3, #0
   4815c:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   48160:	mov	r2, #10
   48164:	mov	r3, #0
   48168:	sub	sl, sl, #1
   4816c:	sxtb	sl, sl
   48170:	mov	r5, r0
   48174:	mov	r4, r1
   48178:	mov	r0, r6
   4817c:	mov	r1, r7
   48180:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   48184:	cmp	r1, #0
   48188:	cmpeq	r0, #1
   4818c:	mov	r6, r0
   48190:	mov	r7, r1
   48194:	bhi	4814c <blkid_probe_get_size@plt+0x40c34>
   48198:	cmp	sl, #0
   4819c:	ble	48028 <blkid_probe_get_size@plt+0x40b10>
   481a0:	ldrd	r2, [sp, #44]	; 0x2c
   481a4:	cmp	r3, r2
   481a8:	bcc	48230 <blkid_probe_get_size@plt+0x40d18>
   481ac:	ldr	r2, [pc, #244]	; 482a8 <blkid_probe_get_size@plt+0x40d90>
   481b0:	add	r2, pc, r2
   481b4:	ldr	r1, [r9]
   481b8:	ldr	r3, [pc, #236]	; 482ac <blkid_probe_get_size@plt+0x40d94>
   481bc:	str	r1, [sp, #32]
   481c0:	ldrd	r0, [sp, #56]	; 0x38
   481c4:	add	r3, pc, r3
   481c8:	str	sl, [sp, #16]
   481cc:	strd	r0, [sp, #8]
   481d0:	str	r2, [sp, #4]
   481d4:	str	r3, [sp]
   481d8:	str	r5, [sp, #24]
   481dc:	str	r4, [sp, #28]
   481e0:	mvn	r3, #0
   481e4:	mov	r2, #1
   481e8:	mov	r1, r8
   481ec:	ldr	r0, [sp, #44]	; 0x2c
   481f0:	bl	7260 <__snprintf_chk@plt>
   481f4:	mov	sl, #0
   481f8:	mov	fp, #0
   481fc:	b	48074 <blkid_probe_get_size@plt+0x40b5c>
   48200:	ldr	r3, [sp, #68]	; 0x44
   48204:	b	4803c <blkid_probe_get_size@plt+0x40b24>
   48208:	ldr	r1, [pc, #160]	; 482b0 <blkid_probe_get_size@plt+0x40d98>
   4820c:	mov	r2, #63	; 0x3f
   48210:	add	r1, pc, r1
   48214:	bl	7374 <strncpy@plt>
   48218:	ldr	r2, [sp, #48]	; 0x30
   4821c:	mov	r3, #0
   48220:	ldr	r0, [sp, #48]	; 0x30
   48224:	strb	r3, [r2, #63]	; 0x3f
   48228:	add	sp, sp, #76	; 0x4c
   4822c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48230:	ldr	r2, [pc, #124]	; 482b4 <blkid_probe_get_size@plt+0x40d9c>
   48234:	add	r2, pc, r2
   48238:	b	481b4 <blkid_probe_get_size@plt+0x40c9c>
   4823c:	mov	r9, r3
   48240:	b	480e4 <blkid_probe_get_size@plt+0x40bcc>
   48244:	ldr	r1, [pc, #108]	; 482b8 <blkid_probe_get_size@plt+0x40da0>
   48248:	mov	r2, #63	; 0x3f
   4824c:	add	r1, pc, r1
   48250:	bl	7374 <strncpy@plt>
   48254:	ldr	r2, [sp, #48]	; 0x30
   48258:	mov	r3, #0
   4825c:	ldr	r0, [sp, #48]	; 0x30
   48260:	strb	r3, [r2, #63]	; 0x3f
   48264:	add	sp, sp, #76	; 0x4c
   48268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4826c:	ldrd	r2, [sp, #112]	; 0x70
   48270:	cmp	r3, #0
   48274:	cmpeq	r2, #1
   48278:	movhi	sl, #0
   4827c:	bhi	48148 <blkid_probe_get_size@plt+0x40c30>
   48280:	b	48028 <blkid_probe_get_size@plt+0x40b10>
   48284:	nop			; (mov r0, r0)
   48288:	orrls	fp, r9, #0, 16
   4828c:			; <UNDEFINED> instruction: 0x00001cb3
   48290:	orrseq	r8, r3, #267386880	; 0xff00000
   48294:	andeq	r0, r0, r0
   48298:	andeq	sl, r2, r0, lsl r1
   4829c:	strdeq	r2, [r4], -ip
   482a0:	andeq	lr, r1, r8, lsr r5
   482a4:	andeq	r9, r2, r4, lsr #31
   482a8:	andeq	lr, r1, ip, lsr r3
   482ac:	ldrdeq	r9, [r2], -r0
   482b0:	andeq	r5, r2, r4, lsl pc
   482b4:	andeq	r9, r2, r8, lsr #27
   482b8:	andeq	r9, r2, ip, lsr lr
   482bc:	ldr	r3, [pc, #948]	; 48678 <blkid_probe_get_size@plt+0x41160>
   482c0:	ldr	ip, [pc, #948]	; 4867c <blkid_probe_get_size@plt+0x41164>
   482c4:	add	r3, pc, r3
   482c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   482cc:	mov	r5, r0
   482d0:	ldr	ip, [r3, ip]
   482d4:	ldr	r6, [r5]
   482d8:	sub	sp, sp, #52	; 0x34
   482dc:	mov	r0, #0
   482e0:	ldr	r3, [ip]
   482e4:	cmp	r6, r0
   482e8:	str	ip, [sp, #4]
   482ec:	mov	sl, r1
   482f0:	str	r2, [sp, #8]
   482f4:	str	r0, [sp, #36]	; 0x24
   482f8:	str	r3, [sp, #44]	; 0x2c
   482fc:	str	r0, [sp, #40]	; 0x28
   48300:	beq	48458 <blkid_probe_get_size@plt+0x40f40>
   48304:	ldrb	r4, [r6]
   48308:	cmp	r4, r0
   4830c:	beq	48458 <blkid_probe_get_size@plt+0x40f40>
   48310:	ldr	r8, [pc, #872]	; 48680 <blkid_probe_get_size@plt+0x41168>
   48314:	add	r8, pc, r8
   48318:	b	48334 <blkid_probe_get_size@plt+0x40e1c>
   4831c:	mov	r3, r6
   48320:	add	r6, r6, #1
   48324:	str	r6, [r5]
   48328:	ldrb	r4, [r3, #1]
   4832c:	cmp	r4, #0
   48330:	beq	48458 <blkid_probe_get_size@plt+0x40f40>
   48334:	mov	r1, r4
   48338:	mov	r0, r8
   4833c:	bl	74c4 <strchr@plt>
   48340:	cmp	r0, #0
   48344:	bne	4831c <blkid_probe_get_size@plt+0x40e04>
   48348:	mov	r3, #1
   4834c:	add	r9, sp, #40	; 0x28
   48350:	add	r8, sp, #36	; 0x24
   48354:	mov	r7, r0
   48358:	mov	r1, r9
   4835c:	mov	r0, r8
   48360:	mov	r2, r3
   48364:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   48368:	cmp	r0, #0
   4836c:	beq	48428 <blkid_probe_get_size@plt+0x40f10>
   48370:	ldr	r3, [pc, #780]	; 48684 <blkid_probe_get_size@plt+0x4116c>
   48374:	ldr	r2, [sp, #8]
   48378:	add	r3, pc, r3
   4837c:	str	sl, [sp, #24]
   48380:	mov	fp, r7
   48384:	mov	r6, r7
   48388:	mov	sl, r3
   4838c:	and	r2, r2, #8
   48390:	str	r7, [sp, #12]
   48394:	str	r2, [sp, #16]
   48398:	str	r7, [sp, #20]
   4839c:	ldr	r3, [sp, #12]
   483a0:	cmp	r3, #0
   483a4:	bne	4856c <blkid_probe_get_size@plt+0x41054>
   483a8:	cmp	fp, #0
   483ac:	beq	48470 <blkid_probe_get_size@plt+0x40f58>
   483b0:	cmp	r4, #0
   483b4:	beq	4862c <blkid_probe_get_size@plt+0x41114>
   483b8:	cmp	r4, fp
   483bc:	beq	48620 <blkid_probe_get_size@plt+0x41108>
   483c0:	ldr	r3, [sp, #8]
   483c4:	and	r7, r3, #32
   483c8:	b	483fc <blkid_probe_get_size@plt+0x40ee4>
   483cc:	ldr	r2, [sp, #36]	; 0x24
   483d0:	add	r3, r6, #1
   483d4:	strb	r4, [r2, r6]
   483d8:	ldr	r2, [r5]
   483dc:	add	r1, r2, #1
   483e0:	str	r1, [r5]
   483e4:	ldrb	r4, [r2, #1]
   483e8:	cmp	r4, #0
   483ec:	beq	485b8 <blkid_probe_get_size@plt+0x410a0>
   483f0:	cmp	fp, r4
   483f4:	mov	r6, r3
   483f8:	beq	485dc <blkid_probe_get_size@plt+0x410c4>
   483fc:	cmp	r4, #92	; 0x5c
   48400:	bne	4840c <blkid_probe_get_size@plt+0x40ef4>
   48404:	cmp	r7, #0
   48408:	beq	485f8 <blkid_probe_get_size@plt+0x410e0>
   4840c:	mov	r3, #1
   48410:	add	r2, r6, #2
   48414:	mov	r1, r9
   48418:	mov	r0, r8
   4841c:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   48420:	cmp	r0, #0
   48424:	bne	483cc <blkid_probe_get_size@plt+0x40eb4>
   48428:	ldr	r7, [sp, #36]	; 0x24
   4842c:	mvn	r4, #11
   48430:	mov	r0, r7
   48434:	bl	69f0 <free@plt>
   48438:	ldr	r3, [sp, #4]
   4843c:	ldr	r2, [sp, #44]	; 0x2c
   48440:	mov	r0, r4
   48444:	ldr	r3, [r3]
   48448:	cmp	r2, r3
   4844c:	bne	48674 <blkid_probe_get_size@plt+0x4115c>
   48450:	add	sp, sp, #52	; 0x34
   48454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48458:	mov	r3, #0
   4845c:	str	r3, [r5]
   48460:	mov	r7, r3
   48464:	mov	r4, r3
   48468:	str	r3, [sl]
   4846c:	b	48430 <blkid_probe_get_size@plt+0x40f18>
   48470:	cmp	r4, #0
   48474:	beq	4863c <blkid_probe_get_size@plt+0x41124>
   48478:	ldr	r3, [sp, #8]
   4847c:	str	fp, [sp, #28]
   48480:	and	r7, r3, #32
   48484:	ldr	fp, [sp, #16]
   48488:	b	484e8 <blkid_probe_get_size@plt+0x40fd0>
   4848c:	cmp	r4, #39	; 0x27
   48490:	beq	484f0 <blkid_probe_get_size@plt+0x40fd8>
   48494:	cmp	r4, #92	; 0x5c
   48498:	bne	484f8 <blkid_probe_get_size@plt+0x40fe0>
   4849c:	cmp	r7, #0
   484a0:	beq	485f4 <blkid_probe_get_size@plt+0x410dc>
   484a4:	mov	r3, #1
   484a8:	add	r2, r6, #2
   484ac:	mov	r1, r9
   484b0:	mov	r0, r8
   484b4:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   484b8:	cmp	r0, #0
   484bc:	beq	48428 <blkid_probe_get_size@plt+0x40f10>
   484c0:	ldr	r2, [sp, #36]	; 0x24
   484c4:	add	r3, r6, #1
   484c8:	strb	r4, [r2, r6]
   484cc:	ldr	r2, [r5]
   484d0:	add	r1, r2, #1
   484d4:	str	r1, [r5]
   484d8:	ldrb	r4, [r2, #1]
   484dc:	cmp	r4, #0
   484e0:	beq	485e4 <blkid_probe_get_size@plt+0x410cc>
   484e4:	mov	r6, r3
   484e8:	cmp	r4, #34	; 0x22
   484ec:	bne	4848c <blkid_probe_get_size@plt+0x40f74>
   484f0:	cmp	fp, #0
   484f4:	bne	48608 <blkid_probe_get_size@plt+0x410f0>
   484f8:	mov	r1, r4
   484fc:	mov	r0, sl
   48500:	bl	74c4 <strchr@plt>
   48504:	cmp	r0, #0
   48508:	beq	484a4 <blkid_probe_get_size@plt+0x40f8c>
   4850c:	ldr	r8, [pc, #372]	; 48688 <blkid_probe_get_size@plt+0x41170>
   48510:	ldr	r7, [sp, #20]
   48514:	ldr	sl, [sp, #24]
   48518:	ldr	r4, [r5]
   4851c:	add	r8, pc, r8
   48520:	add	r4, r4, #1
   48524:	str	r4, [r5]
   48528:	ldrb	r1, [r4]
   4852c:	cmp	r1, #0
   48530:	beq	48614 <blkid_probe_get_size@plt+0x410fc>
   48534:	mov	r0, r8
   48538:	bl	74c4 <strchr@plt>
   4853c:	cmp	r0, #0
   48540:	bne	48520 <blkid_probe_get_size@plt+0x41008>
   48544:	ldr	r1, [sp, #36]	; 0x24
   48548:	mov	r3, r6
   4854c:	cmp	r1, #0
   48550:	beq	48458 <blkid_probe_get_size@plt+0x40f40>
   48554:	mov	r2, #0
   48558:	strb	r2, [r1, r3]
   4855c:	ldr	r3, [sp, #36]	; 0x24
   48560:	mov	r4, #1
   48564:	str	r3, [sl]
   48568:	b	48430 <blkid_probe_get_size@plt+0x40f18>
   4856c:	mov	r3, #1
   48570:	add	r2, r6, #7
   48574:	mov	r1, r9
   48578:	mov	r0, r8
   4857c:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   48580:	cmp	r0, #0
   48584:	beq	48428 <blkid_probe_get_size@plt+0x40f10>
   48588:	cmp	r4, #0
   4858c:	ldr	r1, [sp, #36]	; 0x24
   48590:	beq	48650 <blkid_probe_get_size@plt+0x41138>
   48594:	strb	r4, [r1, r6]
   48598:	ldr	r1, [r5]
   4859c:	add	r6, r6, #1
   485a0:	mov	r3, #0
   485a4:	str	r3, [sp, #12]
   485a8:	add	r3, r1, #1
   485ac:	str	r3, [r5]
   485b0:	ldrb	r4, [r1, #1]
   485b4:	b	4839c <blkid_probe_get_size@plt+0x40e84>
   485b8:	ldr	r7, [sp, #20]
   485bc:	ldr	sl, [sp, #24]
   485c0:	ldr	r2, [sp, #8]
   485c4:	ldr	r1, [sp, #36]	; 0x24
   485c8:	tst	r2, #1
   485cc:	beq	48668 <blkid_probe_get_size@plt+0x41150>
   485d0:	mov	r2, #0
   485d4:	str	r2, [r5]
   485d8:	b	4854c <blkid_probe_get_size@plt+0x41034>
   485dc:	mov	fp, #0
   485e0:	b	485a8 <blkid_probe_get_size@plt+0x41090>
   485e4:	ldr	r7, [sp, #20]
   485e8:	ldr	sl, [sp, #24]
   485ec:	ldr	r1, [sp, #36]	; 0x24
   485f0:	b	485d0 <blkid_probe_get_size@plt+0x410b8>
   485f4:	ldr	fp, [sp, #28]
   485f8:	mov	r3, #1
   485fc:	ldr	r1, [r5]
   48600:	str	r3, [sp, #12]
   48604:	b	485a8 <blkid_probe_get_size@plt+0x41090>
   48608:	mov	fp, r4
   4860c:	ldr	r1, [r5]
   48610:	b	485a8 <blkid_probe_get_size@plt+0x41090>
   48614:	mov	r3, r6
   48618:	ldr	r1, [sp, #36]	; 0x24
   4861c:	b	485d0 <blkid_probe_get_size@plt+0x410b8>
   48620:	ldr	r1, [r5]
   48624:	ldr	fp, [sp, #12]
   48628:	b	485a8 <blkid_probe_get_size@plt+0x41090>
   4862c:	ldr	r7, [sp, #20]
   48630:	ldr	sl, [sp, #24]
   48634:	mov	r3, r6
   48638:	b	485c0 <blkid_probe_get_size@plt+0x410a8>
   4863c:	ldr	r7, [sp, #20]
   48640:	ldr	sl, [sp, #24]
   48644:	mov	r3, r6
   48648:	ldr	r1, [sp, #36]	; 0x24
   4864c:	b	485d0 <blkid_probe_get_size@plt+0x410b8>
   48650:	ldr	r3, [sp, #8]
   48654:	ldr	r7, [sp, #20]
   48658:	tst	r3, #1
   4865c:	ldr	sl, [sp, #24]
   48660:	movne	r3, r6
   48664:	bne	485d0 <blkid_probe_get_size@plt+0x410b8>
   48668:	mov	r7, r1
   4866c:	mvn	r4, #21
   48670:	b	48430 <blkid_probe_get_size@plt+0x40f18>
   48674:	bl	6fb4 <__stack_chk_fail@plt>
   48678:	andeq	pc, r4, r4, lsr #17
   4867c:	andeq	r0, r0, ip, lsr r4
   48680:	andeq	r2, r2, r8, lsl #21
   48684:	andeq	r2, r2, r4, lsr #20
   48688:	andeq	r2, r2, r0, lsl #17
   4868c:	ldr	r3, [pc, #344]	; 487ec <blkid_probe_get_size@plt+0x412d4>
   48690:	ldr	ip, [pc, #344]	; 487f0 <blkid_probe_get_size@plt+0x412d8>
   48694:	add	r3, pc, r3
   48698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4869c:	mov	r4, r0
   486a0:	ldr	r0, [r3, ip]
   486a4:	sub	sp, sp, #36	; 0x24
   486a8:	ldr	r8, [pc, #324]	; 487f4 <blkid_probe_get_size@plt+0x412dc>
   486ac:	ldr	sl, [pc, #324]	; 487f8 <blkid_probe_get_size@plt+0x412e0>
   486b0:	str	r1, [sp, #8]
   486b4:	str	r2, [sp, #12]
   486b8:	ldr	r1, [r0]
   486bc:	ldr	r2, [r4]
   486c0:	add	r8, pc, r8
   486c4:	add	sl, pc, sl
   486c8:	add	r5, sp, #24
   486cc:	add	r7, sp, #20
   486d0:	mov	r6, #0
   486d4:	str	r0, [sp, #4]
   486d8:	str	r1, [sp, #28]
   486dc:	str	r2, [sp, #20]
   486e0:	mov	r2, #9
   486e4:	mov	r1, r5
   486e8:	mov	r0, r7
   486ec:	str	r6, [sp, #24]
   486f0:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   486f4:	cmp	r0, #0
   486f8:	blt	487bc <blkid_probe_get_size@plt+0x412a4>
   486fc:	ldr	r9, [sp, #24]
   48700:	beq	487c8 <blkid_probe_get_size@plt+0x412b0>
   48704:	mov	r2, #3
   48708:	mov	r1, r8
   4870c:	mov	r0, r9
   48710:	bl	6a5c <strncmp@plt>
   48714:	cmp	r0, #0
   48718:	bne	48750 <blkid_probe_get_size@plt+0x41238>
   4871c:	adds	fp, r9, #3
   48720:	beq	48750 <blkid_probe_get_size@plt+0x41238>
   48724:	ldr	r3, [sl, #72]	; 0x48
   48728:	cmp	r3, #0
   4872c:	blt	48798 <blkid_probe_get_size@plt+0x41280>
   48730:	movne	r0, #1
   48734:	moveq	r0, #0
   48738:	cmp	r0, #0
   4873c:	beq	4878c <blkid_probe_get_size@plt+0x41274>
   48740:	ldr	r3, [sp, #12]
   48744:	tst	r3, #1
   48748:	bne	487a0 <blkid_probe_get_size@plt+0x41288>
   4874c:	ldr	r9, [sp, #24]
   48750:	ldr	r3, [sp, #8]
   48754:	ldr	r2, [sp, #20]
   48758:	mov	r0, #0
   4875c:	mov	fp, #1
   48760:	str	r2, [r4]
   48764:	str	r9, [r3]
   48768:	bl	69f0 <free@plt>
   4876c:	ldr	r3, [sp, #4]
   48770:	ldr	r1, [sp, #28]
   48774:	mov	r0, fp
   48778:	ldr	r3, [r3]
   4877c:	cmp	r1, r3
   48780:	bne	487e8 <blkid_probe_get_size@plt+0x412d0>
   48784:	add	sp, sp, #36	; 0x24
   48788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4878c:	ldr	r0, [sp, #24]
   48790:	bl	69f0 <free@plt>
   48794:	b	486e0 <blkid_probe_get_size@plt+0x411c8>
   48798:	bl	3dd8c <blkid_probe_get_size@plt+0x36874>
   4879c:	b	48738 <blkid_probe_get_size@plt+0x41220>
   487a0:	mov	r1, fp
   487a4:	mov	r0, r5
   487a8:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   487ac:	subs	fp, r0, #0
   487b0:	ldrlt	r0, [sp, #24]
   487b4:	bge	4874c <blkid_probe_get_size@plt+0x41234>
   487b8:	b	48768 <blkid_probe_get_size@plt+0x41250>
   487bc:	mov	fp, r0
   487c0:	ldr	r0, [sp, #24]
   487c4:	b	48768 <blkid_probe_get_size@plt+0x41250>
   487c8:	mov	fp, r0
   487cc:	mov	r0, r9
   487d0:	bl	69f0 <free@plt>
   487d4:	ldr	r3, [sp, #20]
   487d8:	str	r3, [r4]
   487dc:	ldr	r3, [sp, #8]
   487e0:	str	fp, [r3]
   487e4:	b	4876c <blkid_probe_get_size@plt+0x41254>
   487e8:	bl	6fb4 <__stack_chk_fail@plt>
   487ec:	ldrdeq	pc, [r4], -r4
   487f0:	andeq	r0, r0, ip, lsr r4
   487f4:	strdeq	r9, [r2], -r0
   487f8:	andeq	pc, r4, r4, ror #20
   487fc:	ldr	r3, [pc, #560]	; 48a34 <blkid_probe_get_size@plt+0x4151c>
   48800:	ldr	ip, [pc, #560]	; 48a38 <blkid_probe_get_size@plt+0x41520>
   48804:	add	r3, pc, r3
   48808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4880c:	mov	fp, r1
   48810:	ldr	r1, [r3, ip]
   48814:	sub	sp, sp, #44	; 0x2c
   48818:	mov	r5, #0
   4881c:	ldr	r3, [r1]
   48820:	subs	r8, r0, #0
   48824:	str	r1, [sp, #20]
   48828:	str	r2, [sp, #16]
   4882c:	str	r5, [sp, #28]
   48830:	str	r3, [sp, #36]	; 0x24
   48834:	str	r5, [sp, #32]
   48838:	beq	489cc <blkid_probe_get_size@plt+0x414b4>
   4883c:	add	r3, sp, #32
   48840:	mov	r0, r3
   48844:	str	r3, [sp, #12]
   48848:	mov	r3, #1
   4884c:	add	r1, sp, #28
   48850:	mov	r2, r3
   48854:	str	r1, [sp, #8]
   48858:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4885c:	cmp	r0, #0
   48860:	mvneq	r5, #11
   48864:	ldreq	r0, [sp, #32]
   48868:	beq	4898c <blkid_probe_get_size@plt+0x41474>
   4886c:	mov	r0, r8
   48870:	bl	71b8 <flockfile@plt>
   48874:	bl	732c <__errno_location@plt>
   48878:	mov	r7, r5
   4887c:	mov	r6, r5
   48880:	mov	sl, r5
   48884:	mov	r9, r0
   48888:	b	48900 <blkid_probe_get_size@plt+0x413e8>
   4888c:	cmp	fp, #1
   48890:	uxtb	r4, r0
   48894:	beq	488a8 <blkid_probe_get_size@plt+0x41390>
   48898:	cmp	r4, #10
   4889c:	beq	48944 <blkid_probe_get_size@plt+0x4142c>
   488a0:	cmp	r4, #13
   488a4:	beq	489bc <blkid_probe_get_size@plt+0x414a4>
   488a8:	tst	r7, #1
   488ac:	bne	48958 <blkid_probe_get_size@plt+0x41440>
   488b0:	cmp	r4, #0
   488b4:	cmpne	r7, #0
   488b8:	bne	48958 <blkid_probe_get_size@plt+0x41440>
   488bc:	cmp	r4, #0
   488c0:	beq	489b0 <blkid_probe_get_size@plt+0x41498>
   488c4:	mov	r3, #1
   488c8:	add	r2, r6, #2
   488cc:	ldr	r1, [sp, #8]
   488d0:	ldr	r0, [sp, #12]
   488d4:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   488d8:	cmp	r0, #0
   488dc:	beq	48a20 <blkid_probe_get_size@plt+0x41508>
   488e0:	ldr	r3, [sp, #32]
   488e4:	strb	r4, [r3, r6]
   488e8:	add	r6, r6, #1
   488ec:	cmp	r6, #1048576	; 0x100000
   488f0:	beq	489c4 <blkid_probe_get_size@plt+0x414ac>
   488f4:	add	r5, r5, #1
   488f8:	cmn	r5, #-2147483647	; 0x80000001
   488fc:	beq	489c4 <blkid_probe_get_size@plt+0x414ac>
   48900:	str	sl, [r9]
   48904:	mov	r0, r8
   48908:	bl	6a74 <fgetc@plt>
   4890c:	cmn	r0, #1
   48910:	bne	4888c <blkid_probe_get_size@plt+0x41374>
   48914:	mov	r0, r8
   48918:	bl	7188 <ferror@plt>
   4891c:	cmp	r0, #0
   48920:	beq	4896c <blkid_probe_get_size@plt+0x41454>
   48924:	ldr	r5, [r9]
   48928:	cmp	r5, #0
   4892c:	ble	48a28 <blkid_probe_get_size@plt+0x41510>
   48930:	rsb	r5, r5, #0
   48934:	mov	r0, r8
   48938:	bl	7440 <funlockfile@plt>
   4893c:	ldr	r0, [sp, #32]
   48940:	b	4898c <blkid_probe_get_size@plt+0x41474>
   48944:	mov	r3, #2
   48948:	tst	r7, #1
   4894c:	bne	48958 <blkid_probe_get_size@plt+0x41440>
   48950:	tst	r7, r3
   48954:	beq	489b4 <blkid_probe_get_size@plt+0x4149c>
   48958:	mov	r0, r4
   4895c:	mov	r1, r8
   48960:	bl	6f78 <ungetc@plt>
   48964:	cmn	r0, #1
   48968:	beq	489f4 <blkid_probe_get_size@plt+0x414dc>
   4896c:	mov	r0, r8
   48970:	bl	7440 <funlockfile@plt>
   48974:	ldr	r3, [sp, #32]
   48978:	mov	r0, #0
   4897c:	ldr	r2, [sp, #16]
   48980:	strb	r0, [r3, r6]
   48984:	ldr	r3, [sp, #32]
   48988:	str	r3, [r2]
   4898c:	bl	69f0 <free@plt>
   48990:	ldr	r3, [sp, #20]
   48994:	ldr	r2, [sp, #36]	; 0x24
   48998:	mov	r0, r5
   4899c:	ldr	r3, [r3]
   489a0:	cmp	r2, r3
   489a4:	bne	48a30 <blkid_probe_get_size@plt+0x41518>
   489a8:	add	sp, sp, #44	; 0x2c
   489ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   489b0:	mov	r3, #1
   489b4:	orr	r7, r7, r3
   489b8:	b	488ec <blkid_probe_get_size@plt+0x413d4>
   489bc:	mov	r3, #4
   489c0:	b	48948 <blkid_probe_get_size@plt+0x41430>
   489c4:	mvn	r5, #104	; 0x68
   489c8:	b	48934 <blkid_probe_get_size@plt+0x4141c>
   489cc:	ldr	r2, [pc, #104]	; 48a3c <blkid_probe_get_size@plt+0x41524>
   489d0:	ldr	r1, [pc, #104]	; 48a40 <blkid_probe_get_size@plt+0x41528>
   489d4:	add	r2, pc, r2
   489d8:	add	r2, r2, #196	; 0xc4
   489dc:	str	r2, [sp]
   489e0:	ldr	r2, [pc, #92]	; 48a44 <blkid_probe_get_size@plt+0x4152c>
   489e4:	mov	r3, #700	; 0x2bc
   489e8:	add	r2, pc, r2
   489ec:	add	r1, pc, r1
   489f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   489f4:	ldr	r2, [pc, #76]	; 48a48 <blkid_probe_get_size@plt+0x41530>
   489f8:	ldr	r1, [pc, #76]	; 48a4c <blkid_probe_get_size@plt+0x41534>
   489fc:	add	r2, pc, r2
   48a00:	add	r2, r2, #196	; 0xc4
   48a04:	str	r2, [sp]
   48a08:	ldr	r2, [pc, #64]	; 48a50 <blkid_probe_get_size@plt+0x41538>
   48a0c:	ldr	r3, [pc, #64]	; 48a54 <blkid_probe_get_size@plt+0x4153c>
   48a10:	add	r2, pc, r2
   48a14:	add	r1, pc, r1
   48a18:	mov	r0, #0
   48a1c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   48a20:	mvn	r5, #11
   48a24:	b	48934 <blkid_probe_get_size@plt+0x4141c>
   48a28:	mvn	r5, #4
   48a2c:	b	48934 <blkid_probe_get_size@plt+0x4141c>
   48a30:	bl	6fb4 <__stack_chk_fail@plt>
   48a34:	andeq	pc, r4, r4, ror #6
   48a38:	andeq	r0, r0, ip, lsr r4
   48a3c:	andeq	r7, r2, ip, ror #25
   48a40:	andeq	ip, r2, r8, lsr r0
   48a44:	andeq	r4, r2, ip, ror ip
   48a48:	andeq	r7, r2, r4, asr #25
   48a4c:	andeq	r9, r2, r0, lsr #13
   48a50:	andeq	r4, r2, r4, asr ip
   48a54:	strdeq	r0, [r0], -lr
   48a58:	ldr	r2, [pc, #656]	; 48cf0 <blkid_probe_get_size@plt+0x417d8>
   48a5c:	ldr	r3, [pc, #656]	; 48cf4 <blkid_probe_get_size@plt+0x417dc>
   48a60:	add	r2, pc, r2
   48a64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48a68:	add	fp, sp, #32
   48a6c:	sub	sp, sp, #28
   48a70:	ldr	r3, [r2, r3]
   48a74:	sub	sp, sp, #40	; 0x28
   48a78:	str	r3, [fp, #-48]	; 0xffffffd0
   48a7c:	ldr	ip, [r3]
   48a80:	ldr	r3, [pc, #624]	; 48cf8 <blkid_probe_get_size@plt+0x417e0>
   48a84:	mov	r1, #1
   48a88:	add	r4, sp, #8
   48a8c:	str	r0, [fp, #-52]	; 0xffffffcc
   48a90:	str	r1, [sp]
   48a94:	add	r3, pc, r3
   48a98:	mov	r0, r4
   48a9c:	mov	r2, #27
   48aa0:	str	ip, [fp, #-40]	; 0xffffffd8
   48aa4:	bl	7404 <__sprintf_chk@plt>
   48aa8:	ldr	r1, [pc, #588]	; 48cfc <blkid_probe_get_size@plt+0x417e4>
   48aac:	mov	r0, r4
   48ab0:	add	r1, pc, r1
   48ab4:	bl	738c <fopen64@plt>
   48ab8:	subs	r7, r0, #0
   48abc:	beq	48c14 <blkid_probe_get_size@plt+0x416fc>
   48ac0:	mov	r1, #2
   48ac4:	bl	68f4 <__fsetlocking@plt>
   48ac8:	mov	r0, #0
   48acc:	bl	7158 <sysconf@plt>
   48ad0:	subs	r9, r0, #0
   48ad4:	ble	48ca8 <blkid_probe_get_size@plt+0x41790>
   48ad8:	cmp	r9, #1
   48adc:	beq	48c84 <blkid_probe_get_size@plt+0x4176c>
   48ae0:	bl	7230 <malloc@plt>
   48ae4:	subs	r8, r0, #0
   48ae8:	beq	48ce0 <blkid_probe_get_size@plt+0x417c8>
   48aec:	mov	r6, r9
   48af0:	mov	r4, r8
   48af4:	mov	r5, #0
   48af8:	mov	r0, r7
   48afc:	bl	7044 <getc@plt>
   48b00:	cmn	r0, #1
   48b04:	mov	sl, r0
   48b08:	beq	48c5c <blkid_probe_get_size@plt+0x41744>
   48b0c:	bl	7104 <__ctype_b_loc@plt>
   48b10:	lsl	r3, sl, #1
   48b14:	ldr	r1, [r0]
   48b18:	ldrh	r3, [r1, r3]
   48b1c:	tst	r3, #16384	; 0x4000
   48b20:	beq	48b58 <blkid_probe_get_size@plt+0x41640>
   48b24:	cmp	r5, #0
   48b28:	beq	48b64 <blkid_probe_get_size@plt+0x4164c>
   48b2c:	cmp	r6, #2
   48b30:	bls	48b6c <blkid_probe_get_size@plt+0x41654>
   48b34:	mov	r3, #32
   48b38:	strb	r3, [r4]
   48b3c:	sub	r6, r6, #1
   48b40:	add	r4, r4, #1
   48b44:	strb	sl, [r4]
   48b48:	sub	r6, r6, #1
   48b4c:	add	r4, r4, #1
   48b50:	mov	r5, #0
   48b54:	b	48af8 <blkid_probe_get_size@plt+0x415e0>
   48b58:	cmp	r4, r8
   48b5c:	movhi	r5, #1
   48b60:	b	48af8 <blkid_probe_get_size@plt+0x415e0>
   48b64:	cmp	r6, #1
   48b68:	bne	48b44 <blkid_probe_get_size@plt+0x4162c>
   48b6c:	cmp	r9, #4
   48b70:	suble	r9, r9, #1
   48b74:	movle	r3, r8
   48b78:	ble	48bc8 <blkid_probe_get_size@plt+0x416b0>
   48b7c:	sub	r9, r9, #4
   48b80:	add	r3, r8, r9
   48b84:	cmp	r3, r8
   48b88:	movls	r9, #3
   48b8c:	bls	48bc8 <blkid_probe_get_size@plt+0x416b0>
   48b90:	mov	r9, #4
   48b94:	b	48ba8 <blkid_probe_get_size@plt+0x41690>
   48b98:	cmp	r8, r3
   48b9c:	add	r2, r9, #1
   48ba0:	beq	48bc8 <blkid_probe_get_size@plt+0x416b0>
   48ba4:	mov	r9, r2
   48ba8:	mov	r0, r3
   48bac:	ldrb	r2, [r3, #-1]!
   48bb0:	lsl	r2, r2, #1
   48bb4:	ldrh	r2, [r1, r2]
   48bb8:	tst	r2, #8192	; 0x2000
   48bbc:	bne	48b98 <blkid_probe_get_size@plt+0x41680>
   48bc0:	sub	r9, r9, #1
   48bc4:	mov	r3, r0
   48bc8:	ldr	r1, [pc, #304]	; 48d00 <blkid_probe_get_size@plt+0x417e8>
   48bcc:	mov	r2, r9
   48bd0:	add	r1, pc, r1
   48bd4:	mov	r0, r3
   48bd8:	bl	7374 <strncpy@plt>
   48bdc:	mov	r2, #0
   48be0:	strb	r2, [r0, r9]
   48be4:	ldrb	r4, [r8]
   48be8:	cmp	r4, #0
   48bec:	beq	48c70 <blkid_probe_get_size@plt+0x41758>
   48bf0:	mov	r0, r8
   48bf4:	bl	723c <strlen@plt>
   48bf8:	add	r1, r0, #1
   48bfc:	mov	r0, r8
   48c00:	bl	6e94 <realloc@plt>
   48c04:	cmp	r0, #0
   48c08:	bne	48c94 <blkid_probe_get_size@plt+0x4177c>
   48c0c:	mvn	r4, #11
   48c10:	b	48c2c <blkid_probe_get_size@plt+0x41714>
   48c14:	bl	732c <__errno_location@plt>
   48c18:	ldr	r4, [r0]
   48c1c:	cmp	r4, #2
   48c20:	beq	48cd4 <blkid_probe_get_size@plt+0x417bc>
   48c24:	rsb	r4, r4, #0
   48c28:	mov	r8, r7
   48c2c:	mov	r0, r8
   48c30:	bl	69f0 <free@plt>
   48c34:	mov	r0, r7
   48c38:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   48c3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   48c40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   48c44:	mov	r0, r4
   48c48:	ldr	r3, [r3]
   48c4c:	cmp	r2, r3
   48c50:	bne	48cec <blkid_probe_get_size@plt+0x417d4>
   48c54:	sub	sp, fp, #32
   48c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48c5c:	mov	r3, #0
   48c60:	strb	r3, [r4]
   48c64:	ldrb	r4, [r8]
   48c68:	cmp	r4, #0
   48c6c:	bne	48bf0 <blkid_probe_get_size@plt+0x416d8>
   48c70:	mov	r0, r8
   48c74:	bl	69f0 <free@plt>
   48c78:	mov	r8, r4
   48c7c:	mvn	r4, #1
   48c80:	b	48c2c <blkid_probe_get_size@plt+0x41714>
   48c84:	mov	r1, r9
   48c88:	bl	7164 <calloc@plt>
   48c8c:	cmp	r0, #0
   48c90:	beq	48ce0 <blkid_probe_get_size@plt+0x417c8>
   48c94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   48c98:	mov	r8, #0
   48c9c:	mov	r4, r8
   48ca0:	str	r0, [r3]
   48ca4:	b	48c2c <blkid_probe_get_size@plt+0x41714>
   48ca8:	ldr	r2, [pc, #84]	; 48d04 <blkid_probe_get_size@plt+0x417ec>
   48cac:	ldr	r1, [pc, #84]	; 48d08 <blkid_probe_get_size@plt+0x417f0>
   48cb0:	add	r2, pc, r2
   48cb4:	add	r2, r2, #212	; 0xd4
   48cb8:	str	r2, [sp]
   48cbc:	ldr	r2, [pc, #72]	; 48d0c <blkid_probe_get_size@plt+0x417f4>
   48cc0:	mov	r3, #136	; 0x88
   48cc4:	add	r2, pc, r2
   48cc8:	add	r1, pc, r1
   48ccc:	mov	r0, #0
   48cd0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   48cd4:	mov	r8, r7
   48cd8:	mvn	r4, #2
   48cdc:	b	48c2c <blkid_probe_get_size@plt+0x41714>
   48ce0:	mov	r8, #0
   48ce4:	mvn	r4, #11
   48ce8:	b	48c2c <blkid_probe_get_size@plt+0x41714>
   48cec:	bl	6fb4 <__stack_chk_fail@plt>
   48cf0:	andeq	pc, r4, r8, lsl #2
   48cf4:	andeq	r0, r0, ip, lsr r4
   48cf8:	andeq	r9, r2, r4, asr #12
   48cfc:	ldrdeq	r5, [r2], -ip
   48d00:	andeq	r9, r2, r4, lsr #10
   48d04:	andeq	r7, r2, r0, lsl sl
   48d08:	andeq	r9, r2, r4, lsr #8
   48d0c:	andeq	r6, r2, r0, lsr #18
   48d10:	ldr	r3, [pc, #456]	; 48ee0 <blkid_probe_get_size@plt+0x419c8>
   48d14:	ldr	r2, [pc, #456]	; 48ee4 <blkid_probe_get_size@plt+0x419cc>
   48d18:	add	r3, pc, r3
   48d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48d20:	add	fp, sp, #32
   48d24:	sub	sp, sp, #28
   48d28:	ldr	r3, [r3, r2]
   48d2c:	mov	r8, r0
   48d30:	str	r3, [fp, #-48]	; 0xffffffd0
   48d34:	ldr	r3, [r3]
   48d38:	str	r3, [fp, #-40]	; 0xffffffd8
   48d3c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   48d40:	cmp	r0, #1
   48d44:	beq	48e14 <blkid_probe_get_size@plt+0x418fc>
   48d48:	sub	sp, sp, #40	; 0x28
   48d4c:	ldr	r3, [pc, #404]	; 48ee8 <blkid_probe_get_size@plt+0x419d0>
   48d50:	mov	r1, #1
   48d54:	add	r4, sp, #8
   48d58:	str	r1, [sp]
   48d5c:	add	r3, pc, r3
   48d60:	mov	r2, #27
   48d64:	mov	r0, r4
   48d68:	bl	7404 <__sprintf_chk@plt>
   48d6c:	ldr	r1, [pc, #376]	; 48eec <blkid_probe_get_size@plt+0x419d4>
   48d70:	mov	r0, r4
   48d74:	add	r1, pc, r1
   48d78:	bl	738c <fopen64@plt>
   48d7c:	subs	r5, r0, #0
   48d80:	beq	48e78 <blkid_probe_get_size@plt+0x41960>
   48d84:	mov	r1, #2
   48d88:	ldr	sl, [pc, #352]	; 48ef0 <blkid_probe_get_size@plt+0x419d8>
   48d8c:	sub	r9, fp, #36	; 0x24
   48d90:	bl	68f4 <__fsetlocking@plt>
   48d94:	mov	r3, #0
   48d98:	add	sl, pc, sl
   48d9c:	mov	r7, r3
   48da0:	str	r3, [r9, #-8]!
   48da4:	b	48dec <blkid_probe_get_size@plt+0x418d4>
   48da8:	beq	48e90 <blkid_probe_get_size@plt+0x41978>
   48dac:	mov	r2, #9
   48db0:	mov	r1, sl
   48db4:	mov	r0, r6
   48db8:	bl	6a5c <strncmp@plt>
   48dbc:	add	r7, r7, r4
   48dc0:	cmp	r0, #0
   48dc4:	bne	48dd4 <blkid_probe_get_size@plt+0x418bc>
   48dc8:	ldrb	r2, [r6, #9]
   48dcc:	cmp	r2, #61	; 0x3d
   48dd0:	beq	48eac <blkid_probe_get_size@plt+0x41994>
   48dd4:	mov	r0, r6
   48dd8:	bl	69f0 <free@plt>
   48ddc:	mov	r3, #0
   48de0:	cmp	r7, #5242880	; 0x500000
   48de4:	str	r3, [fp, #-44]	; 0xffffffd4
   48de8:	bhi	48ea0 <blkid_probe_get_size@plt+0x41988>
   48dec:	mov	r2, r9
   48df0:	mov	r1, #1
   48df4:	mov	r0, r5
   48df8:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   48dfc:	ldr	r6, [fp, #-44]	; 0xffffffd4
   48e00:	subs	r4, r0, #0
   48e04:	bge	48da8 <blkid_probe_get_size@plt+0x41890>
   48e08:	mov	r0, r6
   48e0c:	bl	69f0 <free@plt>
   48e10:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48e14:	mov	r4, r0
   48e18:	ldr	r0, [pc, #212]	; 48ef4 <blkid_probe_get_size@plt+0x419dc>
   48e1c:	add	r0, pc, r0
   48e20:	bl	7464 <getenv@plt>
   48e24:	subs	r3, r0, #0
   48e28:	beq	48e68 <blkid_probe_get_size@plt+0x41950>
   48e2c:	bl	74e8 <strdup@plt>
   48e30:	cmp	r0, #0
   48e34:	beq	48ec8 <blkid_probe_get_size@plt+0x419b0>
   48e38:	mov	r5, #0
   48e3c:	str	r0, [r8]
   48e40:	mov	r0, r5
   48e44:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   48e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   48e4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   48e50:	mov	r0, r4
   48e54:	ldr	r3, [r3]
   48e58:	cmp	r2, r3
   48e5c:	bne	48edc <blkid_probe_get_size@plt+0x419c4>
   48e60:	sub	sp, fp, #32
   48e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48e68:	mov	r5, r3
   48e6c:	str	r3, [r8]
   48e70:	mov	r4, r3
   48e74:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48e78:	bl	732c <__errno_location@plt>
   48e7c:	ldr	r4, [r0]
   48e80:	cmp	r4, #2
   48e84:	beq	48ed4 <blkid_probe_get_size@plt+0x419bc>
   48e88:	rsb	r4, r4, #0
   48e8c:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48e90:	mov	r0, r6
   48e94:	bl	69f0 <free@plt>
   48e98:	str	r4, [r8]
   48e9c:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48ea0:	mov	r6, r3
   48ea4:	mvn	r4, #104	; 0x68
   48ea8:	b	48e08 <blkid_probe_get_size@plt+0x418f0>
   48eac:	add	r0, r6, #10
   48eb0:	bl	74e8 <strdup@plt>
   48eb4:	cmp	r0, #0
   48eb8:	mvneq	r4, #11
   48ebc:	strne	r0, [r8]
   48ec0:	movne	r4, #1
   48ec4:	b	48e08 <blkid_probe_get_size@plt+0x418f0>
   48ec8:	mov	r5, r0
   48ecc:	mvn	r4, #11
   48ed0:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48ed4:	mvn	r4, #2
   48ed8:	b	48e40 <blkid_probe_get_size@plt+0x41928>
   48edc:	bl	6fb4 <__stack_chk_fail@plt>
   48ee0:	andeq	lr, r4, r0, asr lr
   48ee4:	andeq	r0, r0, ip, lsr r4
   48ee8:	muleq	r2, ip, r3
   48eec:	andeq	r5, r2, r8, lsl r6
   48ef0:	andeq	r6, r2, r8, lsl r7
   48ef4:	muleq	r2, r4, r6
   48ef8:	ldr	r3, [pc, #200]	; 48fc8 <blkid_probe_get_size@plt+0x41ab0>
   48efc:	ldr	r2, [pc, #200]	; 48fcc <blkid_probe_get_size@plt+0x41ab4>
   48f00:	add	r3, pc, r3
   48f04:	push	{r4, r5, r6, lr}
   48f08:	sub	sp, sp, #16
   48f0c:	ldr	r4, [r3, r2]
   48f10:	add	r1, sp, #16
   48f14:	ldr	r0, [pc, #180]	; 48fd0 <blkid_probe_get_size@plt+0x41ab8>
   48f18:	ldr	r2, [r4]
   48f1c:	mov	r6, #0
   48f20:	add	r0, pc, r0
   48f24:	str	r6, [r1, #-12]!
   48f28:	str	r2, [sp, #12]
   48f2c:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   48f30:	subs	r5, r0, #0
   48f34:	blt	48f7c <blkid_probe_get_size@plt+0x41a64>
   48f38:	mov	r1, #41	; 0x29
   48f3c:	ldr	r0, [sp, #4]
   48f40:	bl	7410 <strrchr@plt>
   48f44:	cmp	r0, #0
   48f48:	beq	48fbc <blkid_probe_get_size@plt+0x41aa4>
   48f4c:	ldr	r1, [pc, #128]	; 48fd4 <blkid_probe_get_size@plt+0x41abc>
   48f50:	add	r0, r0, #1
   48f54:	add	r2, sp, #8
   48f58:	add	r1, pc, r1
   48f5c:	bl	735c <sscanf@plt>
   48f60:	cmp	r0, #1
   48f64:	bne	48fbc <blkid_probe_get_size@plt+0x41aa4>
   48f68:	ldr	r3, [sp, #8]
   48f6c:	ldr	r2, [pc, #100]	; 48fd8 <blkid_probe_get_size@plt+0x41ac0>
   48f70:	ands	r2, r2, r3, lsr #8
   48f74:	movne	r5, r6
   48f78:	beq	48fa0 <blkid_probe_get_size@plt+0x41a88>
   48f7c:	ldr	r0, [sp, #4]
   48f80:	bl	69f0 <free@plt>
   48f84:	ldr	r2, [sp, #12]
   48f88:	ldr	r3, [r4]
   48f8c:	mov	r0, r5
   48f90:	cmp	r2, r3
   48f94:	bne	48fc4 <blkid_probe_get_size@plt+0x41aac>
   48f98:	add	sp, sp, #16
   48f9c:	pop	{r4, r5, r6, pc}
   48fa0:	lsr	r2, r3, #12
   48fa4:	bic	r2, r2, #255	; 0xff
   48fa8:	uxtb	r3, r3
   48fac:	orrs	r3, r2, r3
   48fb0:	movne	r5, #0
   48fb4:	mvneq	r5, #5
   48fb8:	b	48f7c <blkid_probe_get_size@plt+0x41a64>
   48fbc:	mvn	r5, #4
   48fc0:	b	48f7c <blkid_probe_get_size@plt+0x41a64>
   48fc4:	bl	6fb4 <__stack_chk_fail@plt>
   48fc8:	andeq	lr, r4, r8, ror #24
   48fcc:	andeq	r0, r0, ip, lsr r4
   48fd0:	andeq	r9, r2, ip, ror #3
   48fd4:	andeq	r9, r2, r4, asr #3
   48fd8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   48fdc:	ldr	r3, [pc, #1036]	; 493f0 <blkid_probe_get_size@plt+0x41ed8>
   48fe0:	ldr	r2, [pc, #1036]	; 493f4 <blkid_probe_get_size@plt+0x41edc>
   48fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48fe8:	add	r3, pc, r3
   48fec:	sub	sp, sp, #44	; 0x2c
   48ff0:	subs	r4, r0, #0
   48ff4:	str	r1, [sp, #24]
   48ff8:	ldr	r2, [r3, r2]
   48ffc:	str	r2, [sp, #28]
   49000:	ldr	r3, [r2]
   49004:	str	r3, [sp, #36]	; 0x24
   49008:	beq	49360 <blkid_probe_get_size@plt+0x41e48>
   4900c:	ldr	r3, [sp, #24]
   49010:	cmp	r3, #0
   49014:	beq	49388 <blkid_probe_get_size@plt+0x41e70>
   49018:	ldr	r7, [pc, #984]	; 493f8 <blkid_probe_get_size@plt+0x41ee0>
   4901c:	add	r7, pc, r7
   49020:	mov	r1, r7
   49024:	bl	6c9c <strspn@plt>
   49028:	ldr	r1, [pc, #972]	; 493fc <blkid_probe_get_size@plt+0x41ee4>
   4902c:	mov	r2, #8
   49030:	add	r1, pc, r1
   49034:	add	r4, r4, r0
   49038:	mov	r0, r4
   4903c:	bl	6a5c <strncmp@plt>
   49040:	subs	r5, r0, #0
   49044:	bne	493b4 <blkid_probe_get_size@plt+0x41e9c>
   49048:	adds	r6, r4, #8
   4904c:	beq	49098 <blkid_probe_get_size@plt+0x41b80>
   49050:	mov	r1, r7
   49054:	mov	r0, r6
   49058:	bl	6c9c <strspn@plt>
   4905c:	ldrb	r3, [r6, r0]
   49060:	cmp	r3, #0
   49064:	bne	49260 <blkid_probe_get_size@plt+0x41d48>
   49068:	ldr	r1, [sp, #24]
   4906c:	mvn	r2, #0
   49070:	mvn	r3, #0
   49074:	strd	r2, [r1]
   49078:	ldr	r3, [sp, #28]
   4907c:	ldr	r2, [sp, #36]	; 0x24
   49080:	mov	r0, r5
   49084:	ldr	r3, [r3]
   49088:	cmp	r2, r3
   4908c:	bne	493ec <blkid_probe_get_size@plt+0x41ed4>
   49090:	add	sp, sp, #44	; 0x2c
   49094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49098:	mov	r2, #0
   4909c:	mov	r3, #0
   490a0:	strd	r2, [sp, #8]
   490a4:	ldr	r3, [pc, #852]	; 49400 <blkid_probe_get_size@plt+0x41ee8>
   490a8:	add	r3, pc, r3
   490ac:	add	fp, r3, #144	; 0x90
   490b0:	ldr	r1, [pc, #844]	; 49404 <blkid_probe_get_size@plt+0x41eec>
   490b4:	mov	r0, r4
   490b8:	add	r1, pc, r1
   490bc:	bl	6c9c <strspn@plt>
   490c0:	ldrb	r3, [r4, r0]
   490c4:	add	r5, r4, r0
   490c8:	cmp	r3, #0
   490cc:	beq	493c8 <blkid_probe_get_size@plt+0x41eb0>
   490d0:	cmp	r3, #45	; 0x2d
   490d4:	beq	49358 <blkid_probe_get_size@plt+0x41e40>
   490d8:	bl	732c <__errno_location@plt>
   490dc:	mov	r3, #0
   490e0:	mov	r2, #10
   490e4:	add	r1, sp, #32
   490e8:	str	r3, [r0]
   490ec:	mov	r4, r0
   490f0:	mov	r0, r5
   490f4:	bl	6b64 <strtoll@plt>
   490f8:	ldr	r3, [r4]
   490fc:	cmp	r3, #0
   49100:	strd	r0, [sp, #16]
   49104:	bgt	493e4 <blkid_probe_get_size@plt+0x41ecc>
   49108:	ldrd	r2, [sp, #16]
   4910c:	cmp	r2, #0
   49110:	sbcs	r3, r3, #0
   49114:	blt	49358 <blkid_probe_get_size@plt+0x41e40>
   49118:	ldr	r8, [sp, #32]
   4911c:	ldrb	r9, [r8]
   49120:	cmp	r9, #46	; 0x2e
   49124:	beq	49224 <blkid_probe_get_size@plt+0x41d0c>
   49128:	cmp	r5, r8
   4912c:	beq	49260 <blkid_probe_get_size@plt+0x41d48>
   49130:	mov	r6, r8
   49134:	ldr	r1, [pc, #716]	; 49408 <blkid_probe_get_size@plt+0x41ef0>
   49138:	mov	r0, r6
   4913c:	add	r1, pc, r1
   49140:	bl	6c9c <strspn@plt>
   49144:	ldr	sl, [pc, #704]	; 4940c <blkid_probe_get_size@plt+0x41ef4>
   49148:	mov	r4, #7
   4914c:	add	sl, pc, sl
   49150:	mov	r7, #0
   49154:	add	r5, r6, r0
   49158:	b	49178 <blkid_probe_get_size@plt+0x41c60>
   4915c:	add	r7, r7, #1
   49160:	cmp	r7, #29
   49164:	beq	49240 <blkid_probe_get_size@plt+0x41d28>
   49168:	ldr	sl, [fp, r7, lsl #4]
   4916c:	mov	r0, sl
   49170:	bl	723c <strlen@plt>
   49174:	mov	r4, r0
   49178:	mov	r1, sl
   4917c:	mov	r2, r4
   49180:	mov	r0, r5
   49184:	bl	6a5c <strncmp@plt>
   49188:	cmp	r0, #0
   4918c:	bne	4915c <blkid_probe_get_size@plt+0x41c44>
   49190:	adds	r4, r5, r4
   49194:	beq	4915c <blkid_probe_get_size@plt+0x41c44>
   49198:	ldr	r3, [pc, #624]	; 49410 <blkid_probe_get_size@plt+0x41ef8>
   4919c:	cmp	r6, r4
   491a0:	add	r3, pc, r3
   491a4:	add	r3, r3, r7, lsl #4
   491a8:	ldr	r7, [r3, #152]	; 0x98
   491ac:	ldr	r5, [r3, #156]	; 0x9c
   491b0:	beq	49254 <blkid_probe_get_size@plt+0x41d3c>
   491b4:	mov	r2, r7
   491b8:	mov	r3, r5
   491bc:	mvn	r0, #0
   491c0:	mvn	r1, #0
   491c4:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   491c8:	ldrd	r2, [sp, #16]
   491cc:	cmp	r1, r3
   491d0:	cmpeq	r0, r2
   491d4:	bls	49358 <blkid_probe_get_size@plt+0x41e40>
   491d8:	mul	ip, r2, r5
   491dc:	mov	r1, r3
   491e0:	umull	r2, r3, r2, r7
   491e4:	mla	ip, r7, r1, ip
   491e8:	ldrd	r0, [sp, #8]
   491ec:	add	r3, ip, r3
   491f0:	mvn	r1, r1
   491f4:	mvn	r0, r0
   491f8:	cmp	r3, r1
   491fc:	cmpeq	r2, r0
   49200:	bcs	49358 <blkid_probe_get_size@plt+0x41e40>
   49204:	ldrd	r0, [sp, #8]
   49208:	adds	r0, r0, r2
   4920c:	adc	r1, r1, r3
   49210:	cmp	r9, #46	; 0x2e
   49214:	strd	r0, [sp, #8]
   49218:	beq	49268 <blkid_probe_get_size@plt+0x41d50>
   4921c:	mov	r6, #1
   49220:	b	490b0 <blkid_probe_get_size@plt+0x41b98>
   49224:	ldr	r1, [pc, #488]	; 49414 <blkid_probe_get_size@plt+0x41efc>
   49228:	add	r6, r8, #1
   4922c:	mov	r0, r6
   49230:	add	r1, pc, r1
   49234:	bl	6c9c <strspn@plt>
   49238:	add	r6, r6, r0
   4923c:	b	49134 <blkid_probe_get_size@plt+0x41c1c>
   49240:	mov	r4, r5
   49244:	cmp	r6, r4
   49248:	ldr	r7, [pc, #456]	; 49418 <blkid_probe_get_size@plt+0x41f00>
   4924c:	mov	r5, #0
   49250:	bne	491b4 <blkid_probe_get_size@plt+0x41c9c>
   49254:	ldrb	r3, [r4]
   49258:	cmp	r3, #0
   4925c:	beq	491b4 <blkid_probe_get_size@plt+0x41c9c>
   49260:	mvn	r5, #21
   49264:	b	49078 <blkid_probe_get_size@plt+0x41b60>
   49268:	mov	r2, #10
   4926c:	mov	r3, #0
   49270:	mov	r0, r7
   49274:	mov	r1, r5
   49278:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4927c:	ldrb	r6, [r8, #1]
   49280:	add	sl, r8, #1
   49284:	sub	r6, r6, #48	; 0x30
   49288:	uxtb	ip, r6
   4928c:	cmp	ip, #9
   49290:	mov	r3, r0
   49294:	mov	r2, r1
   49298:	bhi	49260 <blkid_probe_get_size@plt+0x41d48>
   4929c:	mul	r1, r6, r1
   492a0:	asr	r9, r6, #31
   492a4:	umull	r6, r7, r6, r0
   492a8:	mla	ip, r0, r9, r1
   492ac:	ldrd	r8, [sp, #8]
   492b0:	add	r7, ip, r7
   492b4:	mvn	r1, r9
   492b8:	mvn	r0, r8
   492bc:	cmp	r7, r1
   492c0:	cmpeq	r6, r0
   492c4:	bcs	49358 <blkid_probe_get_size@plt+0x41e40>
   492c8:	str	fp, [sp, #16]
   492cc:	str	r4, [sp, #8]
   492d0:	mov	fp, sl
   492d4:	b	49300 <blkid_probe_get_size@plt+0x41de8>
   492d8:	mul	r1, r6, r1
   492dc:	asr	r5, r6, #31
   492e0:	umull	r6, r7, r6, r0
   492e4:	mla	r0, r0, r5, r1
   492e8:	mvn	r5, r9
   492ec:	add	r7, r0, r7
   492f0:	mvn	r4, r8
   492f4:	cmp	r7, r5
   492f8:	cmpeq	r6, r4
   492fc:	bcs	49358 <blkid_probe_get_size@plt+0x41e40>
   49300:	adds	r8, r8, r6
   49304:	mov	r0, r3
   49308:	mov	r1, r2
   4930c:	mov	r3, #0
   49310:	mov	r2, #10
   49314:	adc	r9, r9, r7
   49318:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4931c:	ldrb	r6, [sl, #1]!
   49320:	sub	r6, r6, #48	; 0x30
   49324:	uxtb	ip, r6
   49328:	cmp	ip, #9
   4932c:	mov	r3, r0
   49330:	mov	r2, r1
   49334:	bls	492d8 <blkid_probe_get_size@plt+0x41dc0>
   49338:	mov	r5, sl
   4933c:	mov	sl, fp
   49340:	cmp	sl, r5
   49344:	ldr	r4, [sp, #8]
   49348:	ldr	fp, [sp, #16]
   4934c:	strd	r8, [sp, #8]
   49350:	bne	4921c <blkid_probe_get_size@plt+0x41d04>
   49354:	b	49260 <blkid_probe_get_size@plt+0x41d48>
   49358:	mvn	r5, #33	; 0x21
   4935c:	b	49078 <blkid_probe_get_size@plt+0x41b60>
   49360:	ldr	r2, [pc, #180]	; 4941c <blkid_probe_get_size@plt+0x41f04>
   49364:	ldr	r1, [pc, #180]	; 49420 <blkid_probe_get_size@plt+0x41f08>
   49368:	add	r2, pc, r2
   4936c:	add	r2, r2, #232	; 0xe8
   49370:	str	r2, [sp]
   49374:	ldr	r2, [pc, #168]	; 49424 <blkid_probe_get_size@plt+0x41f0c>
   49378:	ldr	r3, [pc, #168]	; 49428 <blkid_probe_get_size@plt+0x41f10>
   4937c:	add	r2, pc, r2
   49380:	add	r1, pc, r1
   49384:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   49388:	ldr	r3, [pc, #156]	; 4942c <blkid_probe_get_size@plt+0x41f14>
   4938c:	ldr	r2, [pc, #156]	; 49430 <blkid_probe_get_size@plt+0x41f18>
   49390:	add	r3, pc, r3
   49394:	ldr	r1, [pc, #152]	; 49434 <blkid_probe_get_size@plt+0x41f1c>
   49398:	add	r3, r3, #232	; 0xe8
   4939c:	str	r3, [sp]
   493a0:	ldr	r0, [sp, #24]
   493a4:	ldr	r3, [pc, #140]	; 49438 <blkid_probe_get_size@plt+0x41f20>
   493a8:	add	r2, pc, r2
   493ac:	add	r1, pc, r1
   493b0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   493b4:	mov	r2, #0
   493b8:	mov	r3, #0
   493bc:	mov	r6, #0
   493c0:	strd	r2, [sp, #8]
   493c4:	b	490a4 <blkid_probe_get_size@plt+0x41b8c>
   493c8:	cmp	r6, #0
   493cc:	beq	49260 <blkid_probe_get_size@plt+0x41d48>
   493d0:	ldr	r2, [sp, #24]
   493d4:	ldrd	r0, [sp, #8]
   493d8:	mov	r5, r3
   493dc:	strd	r0, [r2]
   493e0:	b	49078 <blkid_probe_get_size@plt+0x41b60>
   493e4:	rsb	r5, r3, #0
   493e8:	b	49078 <blkid_probe_get_size@plt+0x41b60>
   493ec:	bl	6fb4 <__stack_chk_fail@plt>
   493f0:	andeq	lr, r4, r0, lsl #23
   493f4:	andeq	r0, r0, ip, lsr r4
   493f8:	andeq	r1, r2, r0, lsl #27
   493fc:	andeq	r9, r2, r8, asr r0
   49400:	strdeq	r0, [r4], -r8
   49404:	andeq	r1, r2, r4, ror #25
   49408:	andeq	r1, r2, r0, ror #24
   4940c:	andeq	r8, r2, r8, ror #31
   49410:	andeq	r0, r4, r0, lsl #30
   49414:	andeq	r1, r2, r4, lsr #11
   49418:	andeq	r4, pc, r0, asr #4
   4941c:	andeq	r7, r2, r8, asr r3
   49420:	andeq	fp, r2, r0, lsl r3
   49424:	ldrdeq	r6, [r2], -r4
   49428:	muleq	r0, sp, r3
   4942c:	andeq	r7, r2, r0, lsr r3
   49430:	andeq	r6, r2, r8, lsr #11
   49434:	muleq	r2, r0, sp
   49438:	muleq	r0, lr, r3
   4943c:	push	{r1, r2, r3}
   49440:	ldr	r3, [pc, #80]	; 49498 <blkid_probe_get_size@plt+0x41f80>
   49444:	ldr	r2, [pc, #80]	; 4949c <blkid_probe_get_size@plt+0x41f84>
   49448:	add	r3, pc, r3
   4944c:	push	{r4, lr}
   49450:	sub	sp, sp, #12
   49454:	ldr	r4, [r3, r2]
   49458:	add	ip, sp, #24
   4945c:	ldr	r0, [sp, #20]
   49460:	ldr	r2, [r4]
   49464:	mov	r1, ip
   49468:	str	r2, [sp, #4]
   4946c:	str	ip, [sp]
   49470:	bl	456a8 <blkid_probe_get_size@plt+0x3e190>
   49474:	ldr	r2, [sp, #4]
   49478:	ldr	r3, [r4]
   4947c:	cmp	r2, r3
   49480:	bne	49494 <blkid_probe_get_size@plt+0x41f7c>
   49484:	add	sp, sp, #12
   49488:	pop	{r4, lr}
   4948c:	add	sp, sp, #12
   49490:	bx	lr
   49494:	bl	6fb4 <__stack_chk_fail@plt>
   49498:	andeq	lr, r4, r0, lsr #14
   4949c:	andeq	r0, r0, ip, lsr r4
   494a0:	ldr	r3, [pc, #444]	; 49664 <blkid_probe_get_size@plt+0x4214c>
   494a4:	ldr	r2, [pc, #444]	; 49668 <blkid_probe_get_size@plt+0x42150>
   494a8:	add	r3, pc, r3
   494ac:	push	{r4, r5, r6, lr}
   494b0:	sub	sp, sp, #16
   494b4:	ldr	r6, [r3, r2]
   494b8:	mov	r1, #144	; 0x90
   494bc:	mov	r0, #1
   494c0:	ldr	r3, [r6]
   494c4:	str	r3, [sp, #12]
   494c8:	bl	7164 <calloc@plt>
   494cc:	subs	r4, r0, #0
   494d0:	beq	49564 <blkid_probe_get_size@plt+0x4204c>
   494d4:	mov	r5, #1
   494d8:	str	r5, [r4]
   494dc:	mov	r0, r5
   494e0:	mov	r2, #0
   494e4:	ldr	r1, [pc, #384]	; 4966c <blkid_probe_get_size@plt+0x42154>
   494e8:	bl	6fd8 <socket@plt>
   494ec:	cmp	r0, #0
   494f0:	str	r0, [r4, #4]
   494f4:	blt	49600 <blkid_probe_get_size@plt+0x420e8>
   494f8:	add	r3, sp, #16
   494fc:	mov	r2, #4
   49500:	str	r5, [r3, #-8]!
   49504:	mov	r1, r5
   49508:	str	r2, [sp]
   4950c:	mov	r2, #16
   49510:	bl	70b0 <setsockopt@plt>
   49514:	cmp	r0, #0
   49518:	blt	49580 <blkid_probe_get_size@plt+0x42068>
   4951c:	ldr	r5, [pc, #332]	; 49670 <blkid_probe_get_size@plt+0x42158>
   49520:	mov	r2, #110	; 0x6e
   49524:	add	r5, pc, r5
   49528:	add	r1, r5, #268	; 0x10c
   4952c:	add	r0, r4, #8
   49530:	bl	71e8 <memcpy@plt>
   49534:	ldrh	r3, [r4, #8]
   49538:	cmp	r3, #1
   4953c:	bne	495dc <blkid_probe_get_size@plt+0x420c4>
   49540:	ldrb	r3, [r4, #10]
   49544:	cmp	r3, #0
   49548:	moveq	r1, #107	; 0x6b
   4954c:	addeq	r0, r4, #11
   49550:	movne	r1, #108	; 0x6c
   49554:	addne	r0, r4, #10
   49558:	bl	69cc <strnlen@plt>
   4955c:	add	r0, r0, #3
   49560:	str	r0, [r4, #136]	; 0x88
   49564:	ldr	r2, [sp, #12]
   49568:	ldr	r3, [r6]
   4956c:	mov	r0, r4
   49570:	cmp	r2, r3
   49574:	bne	49660 <blkid_probe_get_size@plt+0x42148>
   49578:	add	sp, sp, #16
   4957c:	pop	{r4, r5, r6, pc}
   49580:	bl	732c <__errno_location@plt>
   49584:	ldr	r1, [r0]
   49588:	cmp	r1, #0
   4958c:	ble	4951c <blkid_probe_get_size@plt+0x42004>
   49590:	ldr	r3, [pc, #220]	; 49674 <blkid_probe_get_size@plt+0x4215c>
   49594:	add	r3, pc, r3
   49598:	ldr	r3, [r3, #24]
   4959c:	cmp	r3, #3
   495a0:	ble	4951c <blkid_probe_get_size@plt+0x42004>
   495a4:	ldr	r2, [pc, #204]	; 49678 <blkid_probe_get_size@plt+0x42160>
   495a8:	ldr	r3, [pc, #204]	; 4967c <blkid_probe_get_size@plt+0x42164>
   495ac:	add	r2, pc, r2
   495b0:	str	r2, [sp, #4]
   495b4:	add	r3, pc, r3
   495b8:	ldr	r2, [pc, #192]	; 49680 <blkid_probe_get_size@plt+0x42168>
   495bc:	add	r3, r3, #244	; 0xf4
   495c0:	str	r3, [sp]
   495c4:	rsb	r1, r1, #0
   495c8:	mov	r3, #103	; 0x67
   495cc:	add	r2, pc, r2
   495d0:	ldr	r0, [pc, #172]	; 49684 <blkid_probe_get_size@plt+0x4216c>
   495d4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   495d8:	b	4951c <blkid_probe_get_size@plt+0x42004>
   495dc:	ldr	r2, [pc, #164]	; 49688 <blkid_probe_get_size@plt+0x42170>
   495e0:	ldr	r1, [pc, #164]	; 4968c <blkid_probe_get_size@plt+0x42174>
   495e4:	add	r5, r5, #380	; 0x17c
   495e8:	str	r5, [sp]
   495ec:	mov	r3, #110	; 0x6e
   495f0:	add	r2, pc, r2
   495f4:	add	r1, pc, r1
   495f8:	mov	r0, #1
   495fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   49600:	bl	732c <__errno_location@plt>
   49604:	ldr	r3, [pc, #132]	; 49690 <blkid_probe_get_size@plt+0x42178>
   49608:	add	r3, pc, r3
   4960c:	ldr	r3, [r3, #24]
   49610:	cmp	r3, #2
   49614:	bgt	49628 <blkid_probe_get_size@plt+0x42110>
   49618:	mov	r0, r4
   4961c:	bl	19d40 <blkid_probe_get_size@plt+0x12828>
   49620:	mov	r4, #0
   49624:	b	49564 <blkid_probe_get_size@plt+0x4204c>
   49628:	ldr	r2, [pc, #100]	; 49694 <blkid_probe_get_size@plt+0x4217c>
   4962c:	ldr	r3, [pc, #100]	; 49698 <blkid_probe_get_size@plt+0x42180>
   49630:	add	r2, pc, r2
   49634:	ldr	r1, [r0]
   49638:	add	r3, pc, r3
   4963c:	str	r2, [sp, #4]
   49640:	ldr	r2, [pc, #84]	; 4969c <blkid_probe_get_size@plt+0x42184>
   49644:	add	r3, r3, #244	; 0xf4
   49648:	str	r3, [sp]
   4964c:	add	r2, pc, r2
   49650:	mov	r3, #88	; 0x58
   49654:	ldr	r0, [pc, #68]	; 496a0 <blkid_probe_get_size@plt+0x42188>
   49658:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4965c:	b	49618 <blkid_probe_get_size@plt+0x42100>
   49660:	bl	6fb4 <__stack_chk_fail@plt>
   49664:	andeq	lr, r4, r0, asr #13
   49668:	andeq	r0, r0, ip, lsr r4
   4966c:	andeq	r0, r8, r5, lsl #16
   49670:	muleq	r2, ip, r1
   49674:	muleq	r4, r4, fp
   49678:			; <UNDEFINED> instruction: 0x00028bb4
   4967c:	andeq	r7, r2, ip, lsl #2
   49680:	andeq	lr, r1, ip, ror #18
   49684:	andeq	r0, r0, r4, lsl #8
   49688:	andeq	lr, r1, r8, asr #18
   4968c:	andeq	r8, r2, ip, lsl #23
   49690:	andeq	lr, r4, r0, lsr #22
   49694:	andeq	r8, r2, r4, lsl fp
   49698:	andeq	r7, r2, r8, lsl #1
   4969c:	andeq	lr, r1, ip, ror #17
   496a0:	andeq	r0, r0, r3, lsl #8
   496a4:	ldr	r3, [pc, #648]	; 49934 <blkid_probe_get_size@plt+0x4241c>
   496a8:	ldr	r2, [pc, #648]	; 49938 <blkid_probe_get_size@plt+0x42420>
   496ac:	add	r3, pc, r3
   496b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   496b4:	mov	r4, r1
   496b8:	ldr	ip, [r3, r2]
   496bc:	mov	r1, r3
   496c0:	ldrd	r2, [r0, #8]
   496c4:	mov	r5, r0
   496c8:	ldr	r0, [r4]
   496cc:	ldrb	r7, [r4, #8]
   496d0:	adds	r8, r2, r0
   496d4:	sub	sp, sp, #84	; 0x54
   496d8:	adc	r9, r3, #0
   496dc:	ldr	r2, [r4, #16]
   496e0:	ldr	r1, [ip]
   496e4:	mov	r6, #0
   496e8:	cmp	r7, #0
   496ec:	str	r6, [sp, #60]	; 0x3c
   496f0:	str	ip, [sp, #12]
   496f4:	strd	r8, [sp, #52]	; 0x34
   496f8:	str	r1, [sp, #76]	; 0x4c
   496fc:	str	r6, [sp, #72]	; 0x48
   49700:	strb	r7, [sp, #60]	; 0x3c
   49704:	str	r6, [sp, #64]	; 0x40
   49708:	str	r2, [sp, #68]	; 0x44
   4970c:	streq	r7, [sp, #8]
   49710:	bne	49850 <blkid_probe_get_size@plt+0x42338>
   49714:	ldr	r0, [r5]
   49718:	bl	6dec <ftello64@plt>
   4971c:	ldr	r3, [r5]
   49720:	mov	r2, #1
   49724:	mov	r8, r0
   49728:	mov	r9, r1
   4972c:	add	r0, sp, #52	; 0x34
   49730:	mov	r1, #24
   49734:	bl	71dc <fwrite@plt>
   49738:	ldrd	r2, [r5, #16]
   4973c:	adds	r0, r2, #1
   49740:	adc	r1, r3, #0
   49744:	strd	r0, [r5, #16]
   49748:	ldrb	r2, [r4, #8]
   4974c:	cmp	r2, #0
   49750:	bne	498e4 <blkid_probe_get_size@plt+0x423cc>
   49754:	ldr	r3, [r4, #16]
   49758:	cmp	r3, #0
   4975c:	beq	49918 <blkid_probe_get_size@plt+0x42400>
   49760:	mov	r6, #0
   49764:	mov	sl, #0
   49768:	mov	fp, #0
   4976c:	add	r7, sp, #20
   49770:	strd	r8, [sp]
   49774:	mov	r2, #32
   49778:	mov	r1, #0
   4977c:	mov	r0, r7
   49780:	bl	6c84 <memset@plt>
   49784:	ldr	r3, [r4, #12]
   49788:	adds	sl, sl, #1
   4978c:	add	r1, r3, r6
   49790:	ldr	r0, [r3, r6]
   49794:	ldrd	r2, [r5, #8]
   49798:	adc	fp, fp, #0
   4979c:	ldrd	r8, [r5, #8]
   497a0:	adds	r2, r2, r0
   497a4:	adc	r3, r3, #0
   497a8:	add	r6, r6, #20
   497ac:	strd	r2, [sp, #20]
   497b0:	ldrd	r2, [r5, #8]
   497b4:	ldr	r0, [r1, #4]
   497b8:	adds	r2, r2, r0
   497bc:	adc	r3, r3, #0
   497c0:	strd	r2, [sp, #28]
   497c4:	ldr	r2, [r1, #8]
   497c8:	ldr	r3, [r5]
   497cc:	adds	r8, r8, r2
   497d0:	adc	r9, r9, #0
   497d4:	str	r8, [sp, #36]	; 0x24
   497d8:	str	r9, [sp, #40]	; 0x28
   497dc:	ldr	r0, [r1, #12]
   497e0:	mov	r2, #1
   497e4:	str	r0, [sp, #44]	; 0x2c
   497e8:	ldrh	ip, [r1, #16]
   497ec:	mov	r0, r7
   497f0:	mov	r1, #16
   497f4:	strh	ip, [sp, #48]	; 0x30
   497f8:	bl	71dc <fwrite@plt>
   497fc:	ldr	r0, [r4, #16]
   49800:	mov	r1, #0
   49804:	cmp	fp, r1
   49808:	cmpeq	sl, r0
   4980c:	bcc	49774 <blkid_probe_get_size@plt+0x4225c>
   49810:	ldrd	r8, [sp]
   49814:	ldrd	r2, [r5, #32]
   49818:	adds	r6, r2, r0
   4981c:	adc	r7, r3, r1
   49820:	strd	r6, [r5, #32]
   49824:	ldr	r0, [sp, #8]
   49828:	bl	69f0 <free@plt>
   4982c:	ldr	r3, [sp, #12]
   49830:	ldr	r2, [sp, #76]	; 0x4c
   49834:	mov	r0, r8
   49838:	ldr	r3, [r3]
   4983c:	mov	r1, r9
   49840:	cmp	r2, r3
   49844:	bne	49930 <blkid_probe_get_size@plt+0x42418>
   49848:	add	sp, sp, #84	; 0x54
   4984c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49850:	lsl	r0, r7, #4
   49854:	bl	7230 <malloc@plt>
   49858:	subs	r7, r0, #0
   4985c:	str	r7, [sp, #8]
   49860:	beq	49924 <blkid_probe_get_size@plt+0x4240c>
   49864:	ldr	ip, [r4, #4]
   49868:	mov	sl, #0
   4986c:	mov	fp, #0
   49870:	str	r6, [sp]
   49874:	lsl	r6, sl, #3
   49878:	add	ip, ip, r6
   4987c:	mov	r0, r5
   49880:	ldr	r1, [ip, #4]
   49884:	bl	496a4 <blkid_probe_get_size@plt+0x4218c>
   49888:	cmp	r0, #0
   4988c:	sbcs	r3, r1, #0
   49890:	mov	r9, r1
   49894:	mov	r8, r0
   49898:	mov	r1, sl
   4989c:	blt	49824 <blkid_probe_get_size@plt+0x4230c>
   498a0:	adds	sl, sl, #1
   498a4:	mov	r3, #0
   498a8:	ldr	ip, [r4, #4]
   498ac:	adc	fp, fp, #0
   498b0:	cmp	fp, r3
   498b4:	ldr	r3, [sp]
   498b8:	ldrb	r2, [r4, #8]
   498bc:	ldrb	r0, [ip, r6]
   498c0:	str	r3, [r7]
   498c4:	str	r3, [r7, #4]
   498c8:	ldr	r3, [sp, #8]
   498cc:	cmpeq	sl, r2
   498d0:	add	r7, r7, #16
   498d4:	strb	r0, [r3, r1, lsl #4]
   498d8:	strd	r8, [r7, #-8]
   498dc:	bcc	49874 <blkid_probe_get_size@plt+0x4235c>
   498e0:	b	49714 <blkid_probe_get_size@plt+0x421fc>
   498e4:	ldr	r3, [r5]
   498e8:	mov	r1, #16
   498ec:	ldr	r0, [sp, #8]
   498f0:	bl	71dc <fwrite@plt>
   498f4:	ldrd	r2, [r5, #24]
   498f8:	ldrb	r0, [r4, #8]
   498fc:	mov	r1, #0
   49900:	adds	r6, r2, r0
   49904:	adc	r7, r3, r1
   49908:	strd	r6, [r5, #24]
   4990c:	ldr	r3, [r4, #16]
   49910:	cmp	r3, #0
   49914:	bne	49760 <blkid_probe_get_size@plt+0x42248>
   49918:	mov	r0, #0
   4991c:	mov	r1, #0
   49920:	b	49814 <blkid_probe_get_size@plt+0x422fc>
   49924:	mvn	r8, #11
   49928:	mvn	r9, #0
   4992c:	b	49824 <blkid_probe_get_size@plt+0x4230c>
   49930:	bl	6fb4 <__stack_chk_fail@plt>
   49934:			; <UNDEFINED> instruction: 0x0004e4bc
   49938:	andeq	r0, r0, ip, lsr r4
   4993c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   49940:	mov	r4, r1
   49944:	ldrb	r3, [r1, #8]
   49948:	mov	r5, r0
   4994c:	cmp	r3, #0
   49950:	beq	4998c <blkid_probe_get_size@plt+0x42474>
   49954:	mov	r6, #0
   49958:	mov	r7, #0
   4995c:	ldr	r3, [r4, #4]
   49960:	mov	r0, r5
   49964:	add	r3, r3, r6, lsl #3
   49968:	adds	r6, r6, #1
   4996c:	ldr	r1, [r3, #4]
   49970:	adc	r7, r7, #0
   49974:	bl	4993c <blkid_probe_get_size@plt+0x42424>
   49978:	ldrb	r2, [r4, #8]
   4997c:	mov	r3, #0
   49980:	cmp	r7, r3
   49984:	cmpeq	r6, r2
   49988:	bcc	4995c <blkid_probe_get_size@plt+0x42444>
   4998c:	ldrd	r2, [r5, #8]
   49990:	adds	r0, r2, #24
   49994:	adc	r1, r3, #0
   49998:	strd	r0, [r5, #8]
   4999c:	ldrb	r1, [r4, #8]
   499a0:	cmp	r1, #0
   499a4:	beq	499e0 <blkid_probe_get_size@plt+0x424c8>
   499a8:	adds	r8, r2, #40	; 0x28
   499ac:	adc	r9, r3, #0
   499b0:	mov	r0, #0
   499b4:	mov	r1, #0
   499b8:	strd	r8, [r5, #8]
   499bc:	adds	r0, r0, #1
   499c0:	ldrb	r6, [r4, #8]
   499c4:	adc	r1, r1, #0
   499c8:	mov	r7, #0
   499cc:	adds	r8, r8, #16
   499d0:	adc	r9, r9, #0
   499d4:	cmp	r1, r7
   499d8:	cmpeq	r0, r6
   499dc:	bcc	499b8 <blkid_probe_get_size@plt+0x424a0>
   499e0:	ldr	r3, [r4, #16]
   499e4:	cmp	r3, #0
   499e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   499ec:	ldrd	r0, [r5, #8]
   499f0:	mov	r6, #0
   499f4:	mov	r7, #0
   499f8:	adds	r8, r0, #16
   499fc:	adc	r9, r1, #0
   49a00:	adds	r6, r6, #1
   49a04:	strd	r8, [r5, #8]
   49a08:	adc	r7, r7, #0
   49a0c:	ldr	r2, [r4, #16]
   49a10:	adds	r8, r8, #16
   49a14:	mov	r3, #0
   49a18:	adc	r9, r9, #0
   49a1c:	cmp	r7, r3
   49a20:	cmpeq	r6, r2
   49a24:	bcc	49a00 <blkid_probe_get_size@plt+0x424e8>
   49a28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   49a2c:	ldr	r2, [pc, #468]	; 49c08 <blkid_probe_get_size@plt+0x426f0>
   49a30:	ldr	r3, [pc, #468]	; 49c0c <blkid_probe_get_size@plt+0x426f4>
   49a34:	add	r2, pc, r2
   49a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49a3c:	add	fp, sp, #32
   49a40:	sub	sp, sp, #28
   49a44:	ldr	r3, [r2, r3]
   49a48:	subs	r4, r0, #0
   49a4c:	str	r3, [fp, #-48]	; 0xffffffd0
   49a50:	ldr	r3, [r3]
   49a54:	str	r3, [fp, #-40]	; 0xffffffd8
   49a58:	beq	49ba0 <blkid_probe_get_size@plt+0x42688>
   49a5c:	ldr	r3, [pc, #428]	; 49c10 <blkid_probe_get_size@plt+0x426f8>
   49a60:	mov	r8, r1
   49a64:	ldr	r3, [r2, r3]
   49a68:	cmp	r1, r3
   49a6c:	beq	49bc8 <blkid_probe_get_size@plt+0x426b0>
   49a70:	mov	r1, #47	; 0x2f
   49a74:	bl	7410 <strrchr@plt>
   49a78:	cmp	r0, #0
   49a7c:	beq	49bf4 <blkid_probe_get_size@plt+0x426dc>
   49a80:	cmp	r4, r0
   49a84:	beq	49ad0 <blkid_probe_get_size@plt+0x425b8>
   49a88:	sub	r1, r0, r4
   49a8c:	mov	r0, r4
   49a90:	bl	69cc <strnlen@plt>
   49a94:	mov	r5, #0
   49a98:	mov	r1, r4
   49a9c:	add	r3, r0, #15
   49aa0:	bic	r3, r3, #7
   49aa4:	sub	sp, sp, r3
   49aa8:	add	r3, sp, #15
   49aac:	mov	r2, r0
   49ab0:	lsr	r3, r3, #3
   49ab4:	strb	r5, [r0, r3, lsl #3]
   49ab8:	lsl	r0, r3, #3
   49abc:	bl	71e8 <memcpy@plt>
   49ac0:	mov	r1, #1
   49ac4:	bl	3e0c8 <blkid_probe_get_size@plt+0x36bb0>
   49ac8:	cmp	r0, r5
   49acc:	ble	49af0 <blkid_probe_get_size@plt+0x425d8>
   49ad0:	mov	r0, #0
   49ad4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49ad8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   49adc:	ldr	r3, [r3]
   49ae0:	cmp	r2, r3
   49ae4:	bne	49c04 <blkid_probe_get_size@plt+0x426ec>
   49ae8:	sub	sp, fp, #32
   49aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49af0:	beq	49bfc <blkid_probe_get_size@plt+0x426e4>
   49af4:	ldr	r7, [pc, #280]	; 49c14 <blkid_probe_get_size@plt+0x426fc>
   49af8:	mov	r0, r4
   49afc:	add	r7, pc, r7
   49b00:	mov	r1, r7
   49b04:	bl	6c9c <strspn@plt>
   49b08:	str	r5, [fp, #-52]	; 0xffffffcc
   49b0c:	add	r6, r4, r0
   49b10:	b	49b50 <blkid_probe_get_size@plt+0x42638>
   49b14:	sub	r5, r5, r4
   49b18:	mov	r2, r5
   49b1c:	mov	r1, r4
   49b20:	mov	r0, sl
   49b24:	bl	71e8 <memcpy@plt>
   49b28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   49b2c:	mov	r0, sl
   49b30:	strb	r3, [sl, r5]
   49b34:	ldr	r1, [pc, #220]	; 49c18 <blkid_probe_get_size@plt+0x42700>
   49b38:	blx	r8
   49b3c:	adds	r3, r0, #17
   49b40:	movne	r3, #1
   49b44:	ands	r3, r3, r0, lsr #31
   49b48:	bne	49b98 <blkid_probe_get_size@plt+0x42680>
   49b4c:	mov	sp, r9
   49b50:	mov	r0, r4
   49b54:	bl	723c <strlen@plt>
   49b58:	mov	r9, sp
   49b5c:	mov	r1, r7
   49b60:	add	r0, r0, #8
   49b64:	bic	r0, r0, #7
   49b68:	sub	sp, sp, r0
   49b6c:	mov	r0, r6
   49b70:	bl	6a8c <strcspn@plt>
   49b74:	mov	r1, r7
   49b78:	add	sl, sp, #8
   49b7c:	add	r5, r6, r0
   49b80:	mov	r0, r5
   49b84:	bl	6c9c <strspn@plt>
   49b88:	add	r6, r5, r0
   49b8c:	ldrb	r0, [r5, r0]
   49b90:	cmp	r0, #0
   49b94:	bne	49b14 <blkid_probe_get_size@plt+0x425fc>
   49b98:	mov	sp, r9
   49b9c:	b	49ad4 <blkid_probe_get_size@plt+0x425bc>
   49ba0:	ldr	r2, [pc, #116]	; 49c1c <blkid_probe_get_size@plt+0x42704>
   49ba4:	ldr	r1, [pc, #116]	; 49c20 <blkid_probe_get_size@plt+0x42708>
   49ba8:	add	r2, pc, r2
   49bac:	add	r2, r2, #404	; 0x194
   49bb0:	str	r2, [sp]
   49bb4:	ldr	r2, [pc, #104]	; 49c24 <blkid_probe_get_size@plt+0x4270c>
   49bb8:	mov	r3, #97	; 0x61
   49bbc:	add	r2, pc, r2
   49bc0:	add	r1, pc, r1
   49bc4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   49bc8:	ldr	r2, [pc, #88]	; 49c28 <blkid_probe_get_size@plt+0x42710>
   49bcc:	ldr	r1, [pc, #88]	; 49c2c <blkid_probe_get_size@plt+0x42714>
   49bd0:	add	r2, pc, r2
   49bd4:	add	r2, r2, #404	; 0x194
   49bd8:	str	r2, [sp]
   49bdc:	ldr	r2, [pc, #76]	; 49c30 <blkid_probe_get_size@plt+0x42718>
   49be0:	mov	r3, #98	; 0x62
   49be4:	add	r2, pc, r2
   49be8:	add	r1, pc, r1
   49bec:	mov	r0, #0
   49bf0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   49bf4:	mvn	r0, #21
   49bf8:	b	49ad4 <blkid_probe_get_size@plt+0x425bc>
   49bfc:	mvn	r0, #19
   49c00:	b	49ad4 <blkid_probe_get_size@plt+0x425bc>
   49c04:	bl	6fb4 <__stack_chk_fail@plt>
   49c08:	andeq	lr, r4, r4, lsr r1
   49c0c:	andeq	r0, r0, ip, lsr r4
   49c10:	andeq	r0, r0, r0, ror #8
   49c14:	andeq	lr, r2, r4, asr #9
   49c18:	andeq	r0, r0, sp, ror #3
   49c1c:	andeq	r6, r2, r8, lsl fp
   49c20:	andeq	r1, r2, r4, asr r7
   49c24:	andeq	r8, r2, r0, ror #11
   49c28:	strdeq	r6, [r2], -r0
   49c2c:	andeq	r8, r2, ip, asr #11
   49c30:			; <UNDEFINED> instruction: 0x000285b8
   49c34:	ldr	ip, [pc, #1148]	; 4a0b8 <blkid_probe_get_size@plt+0x42ba0>
   49c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49c3c:	add	ip, pc, ip
   49c40:	ldr	lr, [pc, #1140]	; 4a0bc <blkid_probe_get_size@plt+0x42ba4>
   49c44:	mov	r7, r0
   49c48:	sub	sp, sp, #2640	; 0xa50
   49c4c:	ldr	r0, [ip, lr]
   49c50:	sub	sp, sp, #12
   49c54:	mov	sl, r3
   49c58:	ldr	r3, [r0]
   49c5c:	mov	r4, r1
   49c60:	str	r3, [sp, #2644]	; 0xa54
   49c64:	mov	r1, ip
   49c68:	str	r0, [sp, #16]
   49c6c:	mov	r9, r2
   49c70:	bl	732c <__errno_location@plt>
   49c74:	ldr	r3, [pc, #1092]	; 4a0c0 <blkid_probe_get_size@plt+0x42ba8>
   49c78:	ldr	fp, [sp, #2688]	; 0xa80
   49c7c:	add	r3, pc, r3
   49c80:	ldr	r3, [r3, #20]
   49c84:	cmp	r7, r3
   49c88:	mov	r5, r0
   49c8c:	ldr	r6, [r0]
   49c90:	ble	49ccc <blkid_probe_get_size@plt+0x427b4>
   49c94:	eor	r0, r4, r4, asr #31
   49c98:	sub	r0, r0, r4, asr #31
   49c9c:	uxtb	r0, r0
   49ca0:	rsb	r0, r0, #0
   49ca4:	ldr	r3, [sp, #16]
   49ca8:	cmp	r6, #0
   49cac:	strge	r6, [r5]
   49cb0:	ldr	r2, [sp, #2644]	; 0xa54
   49cb4:	ldr	r3, [r3]
   49cb8:	cmp	r2, r3
   49cbc:	bne	4a0b4 <blkid_probe_get_size@plt+0x42b9c>
   49cc0:	add	sp, sp, #2640	; 0xa50
   49cc4:	add	sp, sp, #12
   49cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49ccc:	ldr	r3, [pc, #1008]	; 4a0c4 <blkid_probe_get_size@plt+0x42bac>
   49cd0:	add	r3, pc, r3
   49cd4:	ldr	r3, [r3]
   49cd8:	cmp	r3, #8
   49cdc:	beq	49c94 <blkid_probe_get_size@plt+0x4277c>
   49ce0:	orr	r2, r7, #24
   49ce4:	cmp	r3, #3
   49ce8:	str	r2, [sp, #36]	; 0x24
   49cec:	blt	49e80 <blkid_probe_get_size@plt+0x42968>
   49cf0:	cmp	r3, #4
   49cf4:	ble	49d00 <blkid_probe_get_size@plt+0x427e8>
   49cf8:	cmp	r3, #7
   49cfc:	bne	49e80 <blkid_probe_get_size@plt+0x42968>
   49d00:	ldr	r3, [pc, #960]	; 4a0c8 <blkid_probe_get_size@plt+0x42bb0>
   49d04:	ldr	r7, [pc, #960]	; 4a0cc <blkid_probe_get_size@plt+0x42bb4>
   49d08:	add	r3, pc, r3
   49d0c:	add	r7, pc, r7
   49d10:	ldrb	r2, [r3, #4]
   49d14:	ldr	r3, [r7]
   49d18:	cmp	r2, #0
   49d1c:	beq	49e78 <blkid_probe_get_size@plt+0x42960>
   49d20:	cmp	r3, #0
   49d24:	blt	49e70 <blkid_probe_get_size@plt+0x42958>
   49d28:	add	r8, sp, #84	; 0x54
   49d2c:	add	r3, sp, #600	; 0x258
   49d30:	mov	r1, #0
   49d34:	add	ip, sp, #56	; 0x38
   49d38:	str	r3, [sp, #40]	; 0x28
   49d3c:	mov	r2, #136	; 0x88
   49d40:	add	r3, sp, #596	; 0x254
   49d44:	mov	r0, r8
   49d48:	mov	r7, r1
   49d4c:	str	r3, [sp, #28]
   49d50:	str	ip, [sp, #20]
   49d54:	bl	6c84 <memset@plt>
   49d58:	ldr	ip, [sp, #20]
   49d5c:	ldr	r1, [sp, #36]	; 0x24
   49d60:	strd	sl, [sp]
   49d64:	str	r7, [sp, #12]
   49d68:	str	r7, [sp, #8]
   49d6c:	mov	r3, r9
   49d70:	str	r7, [ip, #16]
   49d74:	mov	r2, r4
   49d78:	ldr	r0, [sp, #28]
   49d7c:	str	r8, [sp, #64]	; 0x40
   49d80:	str	r7, [sp, #52]	; 0x34
   49d84:	str	r7, [sp, #56]	; 0x38
   49d88:	str	r7, [sp, #60]	; 0x3c
   49d8c:	str	r7, [sp, #68]	; 0x44
   49d90:	str	r7, [sp, #76]	; 0x4c
   49d94:	str	r7, [sp, #80]	; 0x50
   49d98:	bl	45248 <blkid_probe_get_size@plt+0x3dd30>
   49d9c:	ldr	r3, [sp, #52]	; 0x34
   49da0:	ldr	r0, [sp, #28]
   49da4:	add	r2, r3, #1
   49da8:	str	r3, [sp, #24]
   49dac:	str	r2, [sp, #52]	; 0x34
   49db0:	bl	723c <strlen@plt>
   49db4:	ldr	r3, [sp, #24]
   49db8:	add	r1, sp, #2640	; 0xa50
   49dbc:	add	r1, r1, #8
   49dc0:	add	ip, r1, r3, lsl #3
   49dc4:	ldr	r3, [pc, #772]	; 4a0d0 <blkid_probe_get_size@plt+0x42bb8>
   49dc8:	add	r1, sp, #2688	; 0xa80
   49dcc:	add	r1, r1, #8
   49dd0:	ldr	lr, [sp, #28]
   49dd4:	str	r1, [sp, #32]
   49dd8:	add	r3, pc, r3
   49ddc:	ldr	r2, [sp, #20]
   49de0:	str	r3, [sp, #4]
   49de4:	str	r1, [sp, #8]
   49de8:	str	r4, [sp]
   49dec:	str	lr, [ip, #-2564]	; 0xfffff5fc
   49df0:	ldr	lr, [sp, #32]
   49df4:	sub	r2, r2, #4
   49df8:	mov	r3, #1
   49dfc:	mov	r1, #17
   49e00:	str	lr, [sp, #48]	; 0x30
   49e04:	str	r0, [ip, #-2560]	; 0xfffff600
   49e08:	mov	r0, r8
   49e0c:	bl	45e6c <blkid_probe_get_size@plt+0x3e954>
   49e10:	cmp	r0, r7
   49e14:	bge	4a080 <blkid_probe_get_size@plt+0x42b68>
   49e18:	ldr	r3, [sp, #52]	; 0x34
   49e1c:	cmp	r3, #1
   49e20:	movhi	r3, #1
   49e24:	strhi	r3, [sp, #20]
   49e28:	bls	49e9c <blkid_probe_get_size@plt+0x42984>
   49e2c:	mov	r7, #1
   49e30:	ldr	r0, [r8, r7, lsl #3]
   49e34:	bl	69f0 <free@plt>
   49e38:	ldr	r3, [sp, #52]	; 0x34
   49e3c:	add	r7, r7, #2
   49e40:	cmp	r7, r3
   49e44:	bcc	49e30 <blkid_probe_get_size@plt+0x42918>
   49e48:	ldr	r3, [sp, #20]
   49e4c:	cmp	r3, #0
   49e50:	bne	49e9c <blkid_probe_get_size@plt+0x42984>
   49e54:	ldr	r3, [pc, #632]	; 4a0d4 <blkid_probe_get_size@plt+0x42bbc>
   49e58:	add	r3, pc, r3
   49e5c:	ldrb	r3, [r3, #4]
   49e60:	cmp	r3, #0
   49e64:	beq	49c94 <blkid_probe_get_size@plt+0x4277c>
   49e68:	bl	3ad00 <blkid_probe_get_size@plt+0x337e8>
   49e6c:	b	49c94 <blkid_probe_get_size@plt+0x4277c>
   49e70:	bl	3c8c8 <blkid_probe_get_size@plt+0x353b0>
   49e74:	ldr	r3, [r7]
   49e78:	cmp	r3, #0
   49e7c:	bge	49d28 <blkid_probe_get_size@plt+0x42810>
   49e80:	add	r3, sp, #600	; 0x258
   49e84:	str	r3, [sp, #40]	; 0x28
   49e88:	add	r3, sp, #596	; 0x254
   49e8c:	str	r3, [sp, #28]
   49e90:	add	r3, sp, #2688	; 0xa80
   49e94:	add	r3, r3, #8
   49e98:	str	r3, [sp, #32]
   49e9c:	eor	r3, r4, r4, asr #31
   49ea0:	sub	r3, r3, r4, asr #31
   49ea4:	ldr	r7, [pc, #556]	; 4a0d8 <blkid_probe_get_size@plt+0x42bc0>
   49ea8:	uxtb	r3, r3
   49eac:	ldr	r2, [pc, #552]	; 4a0dc <blkid_probe_get_size@plt+0x42bc4>
   49eb0:	str	r3, [sp, #20]
   49eb4:	ldr	r8, [pc, #548]	; 4a0e0 <blkid_probe_get_size@plt+0x42bc8>
   49eb8:	ldr	r3, [sp, #32]
   49ebc:	str	r9, [sp, #32]
   49ec0:	ldr	r9, [sp, #28]
   49ec4:	add	r7, pc, r7
   49ec8:	add	r2, pc, r2
   49ecc:	str	r2, [sp, #24]
   49ed0:	str	r3, [sp, #48]	; 0x30
   49ed4:	str	sl, [sp, #44]	; 0x2c
   49ed8:	ldr	ip, [sp, #48]	; 0x30
   49edc:	ldr	r2, [sp, #20]
   49ee0:	mov	r3, #2048	; 0x800
   49ee4:	str	r2, [r5]
   49ee8:	mov	r1, r3
   49eec:	stm	sp, {r7, ip}
   49ef0:	mov	r2, #1
   49ef4:	mov	r0, r9
   49ef8:	str	ip, [sp, #56]	; 0x38
   49efc:	bl	6b04 <__vsnprintf_chk@plt>
   49f00:	mov	r2, #8
   49f04:	ldr	r1, [sp, #24]
   49f08:	mov	r0, r9
   49f0c:	bl	6a5c <strncmp@plt>
   49f10:	cmp	r0, #0
   49f14:	bne	49f50 <blkid_probe_get_size@plt+0x42a38>
   49f18:	ldr	r3, [sp, #40]	; 0x28
   49f1c:	ldr	r9, [sp, #32]
   49f20:	ldr	sl, [sp, #44]	; 0x2c
   49f24:	add	r3, r3, #4
   49f28:	str	r3, [sp, #12]
   49f2c:	str	r0, [sp, #8]
   49f30:	str	r0, [sp, #4]
   49f34:	str	fp, [sp]
   49f38:	mov	r3, sl
   49f3c:	mov	r2, r9
   49f40:	mov	r1, r4
   49f44:	ldr	r0, [sp, #36]	; 0x24
   49f48:	bl	471a4 <blkid_probe_get_size@plt+0x3fc8c>
   49f4c:	b	49ca4 <blkid_probe_get_size@plt+0x4278c>
   49f50:	add	sl, sp, #84	; 0x54
   49f54:	mov	r0, r7
   49f58:	mov	r2, sl
   49f5c:	mov	r1, #128	; 0x80
   49f60:	bl	6960 <parse_printf_format@plt>
   49f64:	cmp	r0, #127	; 0x7f
   49f68:	bhi	4a054 <blkid_probe_get_size@plt+0x42b3c>
   49f6c:	cmp	r0, #0
   49f70:	movne	r1, sl
   49f74:	ldr	r2, [sp, #48]	; 0x30
   49f78:	addne	r0, r1, r0, lsl #2
   49f7c:	bne	49fa4 <blkid_probe_get_size@plt+0x42a8c>
   49f80:	b	4a01c <blkid_probe_get_size@plt+0x42b04>
   49f84:	cmp	r3, #6
   49f88:	bge	4a008 <blkid_probe_get_size@plt+0x42af0>
   49f8c:	cmp	r3, #2
   49f90:	beq	49f98 <blkid_probe_get_size@plt+0x42a80>
   49f94:	ble	4a048 <blkid_probe_get_size@plt+0x42b30>
   49f98:	cmp	r0, r1
   49f9c:	add	r2, r2, #4
   49fa0:	beq	4a01c <blkid_probe_get_size@plt+0x42b04>
   49fa4:	ldr	r3, [r1], #4
   49fa8:	tst	r3, #2048	; 0x800
   49fac:	bne	49f98 <blkid_probe_get_size@plt+0x42a80>
   49fb0:	cmp	r3, #7
   49fb4:	ble	49f84 <blkid_probe_get_size@plt+0x42a6c>
   49fb8:	cmp	r3, r8
   49fbc:	beq	4a008 <blkid_probe_get_size@plt+0x42af0>
   49fc0:	ble	4a000 <blkid_probe_get_size@plt+0x42ae8>
   49fc4:	cmp	r3, #512	; 0x200
   49fc8:	beq	49f98 <blkid_probe_get_size@plt+0x42a80>
   49fcc:	cmp	r3, #1024	; 0x400
   49fd0:	beq	49f98 <blkid_probe_get_size@plt+0x42a80>
   49fd4:	ldr	r2, [pc, #264]	; 4a0e4 <blkid_probe_get_size@plt+0x42bcc>
   49fd8:	ldr	r1, [pc, #264]	; 4a0e8 <blkid_probe_get_size@plt+0x42bd0>
   49fdc:	add	r2, pc, r2
   49fe0:	add	r2, r2, #428	; 0x1ac
   49fe4:	str	r2, [sp]
   49fe8:	ldr	r2, [pc, #252]	; 4a0ec <blkid_probe_get_size@plt+0x42bd4>
   49fec:	ldr	r3, [pc, #252]	; 4a0f0 <blkid_probe_get_size@plt+0x42bd8>
   49ff0:	add	r2, pc, r2
   49ff4:	add	r1, pc, r1
   49ff8:	mov	r0, #0
   49ffc:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   4a000:	cmp	r3, #256	; 0x100
   4a004:	bne	49fd4 <blkid_probe_get_size@plt+0x42abc>
   4a008:	add	r2, r2, #7
   4a00c:	bic	r2, r2, #7
   4a010:	cmp	r0, r1
   4a014:	add	r2, r2, #8
   4a018:	bne	49fa4 <blkid_probe_get_size@plt+0x42a8c>
   4a01c:	ldr	r7, [r2]
   4a020:	add	r2, r2, #4
   4a024:	cmp	r7, #0
   4a028:	str	r2, [sp, #48]	; 0x30
   4a02c:	bne	49ed8 <blkid_probe_get_size@plt+0x429c0>
   4a030:	ldr	r3, [pc, #188]	; 4a0f4 <blkid_probe_get_size@plt+0x42bdc>
   4a034:	add	r3, pc, r3
   4a038:	ldrb	r3, [r3, #4]
   4a03c:	cmp	r3, #0
   4a040:	beq	49c94 <blkid_probe_get_size@plt+0x4277c>
   4a044:	b	49e68 <blkid_probe_get_size@plt+0x42950>
   4a048:	cmp	r3, #0
   4a04c:	bge	49f98 <blkid_probe_get_size@plt+0x42a80>
   4a050:	b	49fd4 <blkid_probe_get_size@plt+0x42abc>
   4a054:	ldr	r2, [pc, #156]	; 4a0f8 <blkid_probe_get_size@plt+0x42be0>
   4a058:	ldr	r1, [pc, #156]	; 4a0fc <blkid_probe_get_size@plt+0x42be4>
   4a05c:	add	r2, pc, r2
   4a060:	add	r2, r2, #428	; 0x1ac
   4a064:	str	r2, [sp]
   4a068:	ldr	r2, [pc, #144]	; 4a100 <blkid_probe_get_size@plt+0x42be8>
   4a06c:	ldr	r3, [pc, #124]	; 4a0f0 <blkid_probe_get_size@plt+0x42bd8>
   4a070:	add	r2, pc, r2
   4a074:	add	r1, pc, r1
   4a078:	mov	r0, #0
   4a07c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4a080:	ldr	r3, [pc, #124]	; 4a104 <blkid_probe_get_size@plt+0x42bec>
   4a084:	ldr	ip, [sp, #52]	; 0x34
   4a088:	add	r3, pc, r3
   4a08c:	ldr	r1, [sp, #20]
   4a090:	ldr	r0, [r3]
   4a094:	mov	r2, #16384	; 0x4000
   4a098:	str	ip, [sp, #68]	; 0x44
   4a09c:	bl	73e0 <sendmsg@plt>
   4a0a0:	ldr	r3, [sp, #52]	; 0x34
   4a0a4:	cmp	r3, #1
   4a0a8:	strhi	r7, [sp, #20]
   4a0ac:	bhi	49e2c <blkid_probe_get_size@plt+0x42914>
   4a0b0:	b	49e54 <blkid_probe_get_size@plt+0x4293c>
   4a0b4:	bl	6fb4 <__stack_chk_fail@plt>
   4a0b8:	andeq	sp, r4, ip, lsr #30
   4a0bc:	andeq	r0, r0, ip, lsr r4
   4a0c0:	andeq	lr, r4, ip, lsr #9
   4a0c4:	muleq	r4, ip, r1
   4a0c8:	andeq	pc, r4, r4, ror #2
   4a0cc:	andeq	lr, r4, ip, lsl r4
   4a0d0:	muleq	r2, r8, r5
   4a0d4:	andeq	pc, r4, r4, lsl r0	; <UNPREDICTABLE>
   4a0d8:	andeq	r5, r2, ip, lsr #9
   4a0dc:	strdeq	r8, [r2], -ip
   4a0e0:	andeq	r0, r0, r7, lsl #2
   4a0e4:	andeq	r6, r2, r4, ror #13
   4a0e8:			; <UNDEFINED> instruction: 0x00027eb0
   4a0ec:	ldrdeq	lr, [r1], -r8
   4a0f0:			; <UNDEFINED> instruction: 0x000003b9
   4a0f4:	andeq	lr, r4, r8, lsr lr
   4a0f8:	andeq	r6, r2, r4, ror #12
   4a0fc:	andeq	r7, r2, r4, lsl lr
   4a100:	andeq	lr, r1, r8, asr pc
   4a104:	andeq	lr, r4, r0, lsr #1
   4a108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a10c:	sub	sp, sp, #76	; 0x4c
   4a110:	mov	sl, r2
   4a114:	ldrb	r2, [r2]
   4a118:	str	r3, [sp, #40]	; 0x28
   4a11c:	ldrh	r3, [sp, #112]	; 0x70
   4a120:	cmp	r2, #32
   4a124:	str	r0, [sp, #36]	; 0x24
   4a128:	str	r3, [sp, #60]	; 0x3c
   4a12c:	bne	4a4e4 <blkid_probe_get_size@plt+0x42fcc>
   4a130:	mov	r4, r1
   4a134:	mov	r0, sl
   4a138:	mov	r1, #61	; 0x3d
   4a13c:	bl	74c4 <strchr@plt>
   4a140:	subs	r5, r0, #0
   4a144:	beq	4a268 <blkid_probe_get_size@plt+0x42d50>
   4a148:	mov	r2, r5
   4a14c:	mov	r3, #0
   4a150:	strb	r3, [r2], #1
   4a154:	str	r2, [sp, #44]	; 0x2c
   4a158:	bl	7104 <__ctype_b_loc@plt>
   4a15c:	ldrb	r3, [sl]
   4a160:	lsl	r3, r3, #1
   4a164:	ldr	r1, [r0]
   4a168:	ldrh	r3, [r1, r3]
   4a16c:	and	r3, r3, #1
   4a170:	b	4a18c <blkid_probe_get_size@plt+0x42c74>
   4a174:	ldrb	r3, [sl, #1]
   4a178:	lsl	r3, r3, #1
   4a17c:	ldrh	r3, [r1, r3]
   4a180:	ands	r3, r3, #1
   4a184:	beq	4a220 <blkid_probe_get_size@plt+0x42d08>
   4a188:	mov	sl, r2
   4a18c:	cmp	r3, #0
   4a190:	add	r2, sl, #1
   4a194:	bne	4a174 <blkid_probe_get_size@plt+0x42c5c>
   4a198:	cmp	r2, #0
   4a19c:	bne	4a220 <blkid_probe_get_size@plt+0x42d08>
   4a1a0:	ldr	r3, [pc, #1188]	; 4a64c <blkid_probe_get_size@plt+0x43134>
   4a1a4:	add	r3, pc, r3
   4a1a8:	ldr	r3, [r3, #20]
   4a1ac:	cmp	r3, #3
   4a1b0:	ble	4a548 <blkid_probe_get_size@plt+0x43030>
   4a1b4:	ldr	r2, [pc, #1172]	; 4a650 <blkid_probe_get_size@plt+0x43138>
   4a1b8:	add	r2, pc, r2
   4a1bc:	ldr	r1, [sp, #44]	; 0x2c
   4a1c0:	ldr	r3, [pc, #1164]	; 4a654 <blkid_probe_get_size@plt+0x4313c>
   4a1c4:	str	r1, [sp, #28]
   4a1c8:	ldr	r0, [pc, #1160]	; 4a658 <blkid_probe_get_size@plt+0x43140>
   4a1cc:	ldr	r1, [pc, #1160]	; 4a65c <blkid_probe_get_size@plt+0x43144>
   4a1d0:	ldr	lr, [pc, #1160]	; 4a660 <blkid_probe_get_size@plt+0x43148>
   4a1d4:	add	r3, pc, r3
   4a1d8:	mov	ip, #22
   4a1dc:	add	r0, pc, r0
   4a1e0:	add	r3, r3, #460	; 0x1cc
   4a1e4:	add	r1, pc, r1
   4a1e8:	str	r2, [sp, #20]
   4a1ec:	str	r3, [sp, #12]
   4a1f0:	str	r0, [sp, #16]
   4a1f4:	str	r1, [sp, #4]
   4a1f8:	str	sl, [sp, #24]
   4a1fc:	ldr	r2, [sp, #40]	; 0x28
   4a200:	str	lr, [sp, #8]
   4a204:	str	ip, [sp]
   4a208:	ldr	r3, [sp, #116]	; 0x74
   4a20c:	mov	r1, #4
   4a210:	mov	r0, #0
   4a214:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   4a218:	add	sp, sp, #76	; 0x4c
   4a21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a220:	ldr	r1, [sp, #44]	; 0x2c
   4a224:	ldrb	r2, [sl, #1]
   4a228:	cmp	r1, #0
   4a22c:	clz	r3, r2
   4a230:	lsr	r3, r3, #5
   4a234:	moveq	r3, #1
   4a238:	cmp	r3, #0
   4a23c:	beq	4a2d0 <blkid_probe_get_size@plt+0x42db8>
   4a240:	ldr	r3, [pc, #1052]	; 4a664 <blkid_probe_get_size@plt+0x4314c>
   4a244:	add	r3, pc, r3
   4a248:	ldr	r3, [r3, #20]
   4a24c:	cmp	r3, #3
   4a250:	ble	4a548 <blkid_probe_get_size@plt+0x43030>
   4a254:	cmp	r2, #0
   4a258:	bne	4a470 <blkid_probe_get_size@plt+0x42f58>
   4a25c:	ldr	r2, [pc, #1028]	; 4a668 <blkid_probe_get_size@plt+0x43150>
   4a260:	add	r2, pc, r2
   4a264:	b	4a1bc <blkid_probe_get_size@plt+0x42ca4>
   4a268:	ldr	r3, [pc, #1020]	; 4a66c <blkid_probe_get_size@plt+0x43154>
   4a26c:	add	r3, pc, r3
   4a270:	ldr	r3, [r3, #20]
   4a274:	cmp	r3, #3
   4a278:	ble	4a548 <blkid_probe_get_size@plt+0x43030>
   4a27c:	ldr	r3, [pc, #1004]	; 4a670 <blkid_probe_get_size@plt+0x43158>
   4a280:	ldr	r1, [pc, #1004]	; 4a674 <blkid_probe_get_size@plt+0x4315c>
   4a284:	add	r3, pc, r3
   4a288:	add	r1, pc, r1
   4a28c:	add	r3, r3, #460	; 0x1cc
   4a290:	ldr	ip, [pc, #992]	; 4a678 <blkid_probe_get_size@plt+0x43160>
   4a294:	mov	r4, #448	; 0x1c0
   4a298:	str	r3, [sp, #12]
   4a29c:	mov	r3, r1
   4a2a0:	add	ip, pc, ip
   4a2a4:	mov	lr, #22
   4a2a8:	stmib	sp, {r3, r4}
   4a2ac:	str	sl, [sp, #20]
   4a2b0:	ldr	r2, [sp, #40]	; 0x28
   4a2b4:	str	ip, [sp, #16]
   4a2b8:	str	lr, [sp]
   4a2bc:	ldr	r3, [sp, #116]	; 0x74
   4a2c0:	mov	r1, #4
   4a2c4:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   4a2c8:	add	sp, sp, #76	; 0x4c
   4a2cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a2d0:	ldrb	r1, [r5, #1]
   4a2d4:	cmp	r1, #0
   4a2d8:	beq	4a240 <blkid_probe_get_size@plt+0x42d28>
   4a2dc:	cmp	r4, #0
   4a2e0:	beq	4a540 <blkid_probe_get_size@plt+0x43028>
   4a2e4:	ldr	r2, [r4]
   4a2e8:	subs	r1, r2, #0
   4a2ec:	beq	4a540 <blkid_probe_get_size@plt+0x43028>
   4a2f0:	str	sl, [sp, #68]	; 0x44
   4a2f4:	mov	sl, r1
   4a2f8:	add	r2, r4, #4
   4a2fc:	str	r2, [sp, #64]	; 0x40
   4a300:	str	r3, [sp, #56]	; 0x38
   4a304:	ldr	r3, [sp, #36]	; 0x24
   4a308:	mov	r5, #0
   4a30c:	ldr	r4, [r3], #12
   4a310:	str	r3, [sp, #48]	; 0x30
   4a314:	ldr	r3, [sp, #36]	; 0x24
   4a318:	ldr	r9, [r4]
   4a31c:	add	r1, sl, r5
   4a320:	ldr	fp, [r3, #4]
   4a324:	ldrb	r6, [sl, r5]
   4a328:	ldr	r2, [fp]
   4a32c:	add	r0, r2, r9
   4a330:	ldrb	r8, [r2, r9]
   4a334:	cmp	r8, #0
   4a338:	beq	4a404 <blkid_probe_get_size@plt+0x42eec>
   4a33c:	cmp	r6, r8
   4a340:	mov	r7, #0
   4a344:	beq	4a47c <blkid_probe_get_size@plt+0x42f64>
   4a348:	mov	r0, #20
   4a34c:	bl	7230 <malloc@plt>
   4a350:	subs	r6, r0, #0
   4a354:	beq	4a510 <blkid_probe_get_size@plt+0x42ff8>
   4a358:	ldrb	r0, [r4, #8]
   4a35c:	ldr	r1, [r4, #12]
   4a360:	ldr	r2, [r4, #16]
   4a364:	ldr	ip, [r4, #4]
   4a368:	add	r9, r9, #1
   4a36c:	str	r1, [r6, #12]
   4a370:	strb	r0, [r6, #8]
   4a374:	str	r2, [r6, #16]
   4a378:	stm	r6, {r9, ip}
   4a37c:	ldr	r0, [fp]
   4a380:	ldr	r2, [r4]
   4a384:	mov	r1, r7
   4a388:	add	r0, r0, r2
   4a38c:	bl	68dc <strndup@plt>
   4a390:	cmp	r0, #0
   4a394:	mov	r9, r0
   4a398:	str	r0, [sp, #52]	; 0x34
   4a39c:	beq	4a514 <blkid_probe_get_size@plt+0x42ffc>
   4a3a0:	mov	r0, fp
   4a3a4:	mov	r2, r7
   4a3a8:	mov	r1, r9
   4a3ac:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   4a3b0:	cmp	r0, #0
   4a3b4:	blt	4a514 <blkid_probe_get_size@plt+0x42ffc>
   4a3b8:	ldr	r2, [sp, #56]	; 0x38
   4a3bc:	mov	r3, r4
   4a3c0:	str	r2, [r4, #4]
   4a3c4:	str	r2, [r4, #8]
   4a3c8:	str	r2, [r4, #12]
   4a3cc:	str	r2, [r4, #16]
   4a3d0:	str	r0, [r3], #8
   4a3d4:	ldr	r0, [sp, #36]	; 0x24
   4a3d8:	add	r2, r4, #4
   4a3dc:	ldr	r1, [sp, #48]	; 0x30
   4a3e0:	stm	sp, {r6, r8}
   4a3e4:	add	r0, r0, #8
   4a3e8:	bl	35818 <blkid_probe_get_size@plt+0x2e300>
   4a3ec:	cmp	r0, #0
   4a3f0:	blt	4a514 <blkid_probe_get_size@plt+0x42ffc>
   4a3f4:	add	r5, r5, r7
   4a3f8:	mov	r0, r9
   4a3fc:	bl	69f0 <free@plt>
   4a400:	ldrb	r6, [sl, r5]
   4a404:	cmp	r6, #0
   4a408:	beq	4a614 <blkid_probe_get_size@plt+0x430fc>
   4a40c:	ldrb	ip, [r4, #8]
   4a410:	ldr	r0, [r4, #4]
   4a414:	cmp	ip, #0
   4a418:	beq	4a550 <blkid_probe_get_size@plt+0x43038>
   4a41c:	cmp	r0, #0
   4a420:	beq	4a4bc <blkid_probe_get_size@plt+0x42fa4>
   4a424:	mov	r1, #0
   4a428:	b	4a438 <blkid_probe_get_size@plt+0x42f20>
   4a42c:	add	r1, r3, #1
   4a430:	cmp	r1, ip
   4a434:	bcs	4a550 <blkid_probe_get_size@plt+0x43038>
   4a438:	add	r3, ip, r1
   4a43c:	lsr	r3, r3, #1
   4a440:	ldrb	r2, [r0, r3, lsl #3]
   4a444:	add	lr, r0, r3, lsl #3
   4a448:	cmp	r2, r6
   4a44c:	bhi	4a4a8 <blkid_probe_get_size@plt+0x42f90>
   4a450:	cmp	r2, r6
   4a454:	bcc	4a42c <blkid_probe_get_size@plt+0x42f14>
   4a458:	ldr	r3, [lr, #4]
   4a45c:	cmp	r3, #0
   4a460:	beq	4a550 <blkid_probe_get_size@plt+0x43038>
   4a464:	add	r5, r5, #1
   4a468:	mov	r4, r3
   4a46c:	b	4a314 <blkid_probe_get_size@plt+0x42dfc>
   4a470:	ldr	r2, [pc, #516]	; 4a67c <blkid_probe_get_size@plt+0x43164>
   4a474:	add	r2, pc, r2
   4a478:	b	4a1bc <blkid_probe_get_size@plt+0x42ca4>
   4a47c:	ldrb	r8, [r0, #1]!
   4a480:	add	r7, r7, #1
   4a484:	add	r2, r7, r9
   4a488:	cmp	r8, #0
   4a48c:	add	ip, r5, r7
   4a490:	ldrb	r6, [r1, #1]!
   4a494:	beq	4a60c <blkid_probe_get_size@plt+0x430f4>
   4a498:	cmp	r8, r6
   4a49c:	beq	4a47c <blkid_probe_get_size@plt+0x42f64>
   4a4a0:	mov	r9, r2
   4a4a4:	b	4a348 <blkid_probe_get_size@plt+0x42e30>
   4a4a8:	cmp	r3, r1
   4a4ac:	mov	ip, r3
   4a4b0:	bls	4a550 <blkid_probe_get_size@plt+0x43038>
   4a4b4:	add	r3, r3, r1
   4a4b8:	b	4a43c <blkid_probe_get_size@plt+0x42f24>
   4a4bc:	ldr	r3, [pc, #444]	; 4a680 <blkid_probe_get_size@plt+0x43168>
   4a4c0:	ldr	r2, [pc, #444]	; 4a684 <blkid_probe_get_size@plt+0x4316c>
   4a4c4:	add	r3, pc, r3
   4a4c8:	ldr	r1, [pc, #440]	; 4a688 <blkid_probe_get_size@plt+0x43170>
   4a4cc:	add	r3, r3, #472	; 0x1d8
   4a4d0:	str	r3, [sp]
   4a4d4:	add	r2, pc, r2
   4a4d8:	mov	r3, #88	; 0x58
   4a4dc:	add	r1, pc, r1
   4a4e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4a4e4:	ldr	r2, [pc, #416]	; 4a68c <blkid_probe_get_size@plt+0x43174>
   4a4e8:	ldr	r1, [pc, #416]	; 4a690 <blkid_probe_get_size@plt+0x43178>
   4a4ec:	add	r2, pc, r2
   4a4f0:	add	r2, r2, #448	; 0x1c0
   4a4f4:	str	r2, [sp]
   4a4f8:	ldr	r2, [pc, #404]	; 4a694 <blkid_probe_get_size@plt+0x4317c>
   4a4fc:	ldr	r3, [pc, #404]	; 4a698 <blkid_probe_get_size@plt+0x43180>
   4a500:	add	r2, pc, r2
   4a504:	add	r1, pc, r1
   4a508:	mov	r0, #0
   4a50c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4a510:	str	r6, [sp, #52]	; 0x34
   4a514:	ldr	r0, [sp, #52]	; 0x34
   4a518:	bl	69f0 <free@plt>
   4a51c:	mov	r0, r6
   4a520:	bl	69f0 <free@plt>
   4a524:	ldr	r3, [sp, #64]	; 0x40
   4a528:	cmp	r3, #0
   4a52c:	beq	4a540 <blkid_probe_get_size@plt+0x43028>
   4a530:	ldr	sl, [r3], #4
   4a534:	cmp	sl, #0
   4a538:	str	r3, [sp, #64]	; 0x40
   4a53c:	bne	4a304 <blkid_probe_get_size@plt+0x42dec>
   4a540:	mov	r0, #0
   4a544:	b	4a2c8 <blkid_probe_get_size@plt+0x42db0>
   4a548:	mvn	r0, #21
   4a54c:	b	4a2c8 <blkid_probe_get_size@plt+0x42db0>
   4a550:	mov	r0, #20
   4a554:	bl	7230 <malloc@plt>
   4a558:	subs	r7, r0, #0
   4a55c:	beq	4a600 <blkid_probe_get_size@plt+0x430e8>
   4a560:	add	r5, r5, #1
   4a564:	add	sl, sl, r5
   4a568:	mov	r0, sl
   4a56c:	bl	723c <strlen@plt>
   4a570:	ldr	r5, [sp, #36]	; 0x24
   4a574:	mov	r1, sl
   4a578:	mov	r2, r0
   4a57c:	ldr	r0, [r5, #4]
   4a580:	bl	3da44 <blkid_probe_get_size@plt+0x3652c>
   4a584:	cmp	r0, #0
   4a588:	blt	4a600 <blkid_probe_get_size@plt+0x430e8>
   4a58c:	ldr	r3, [sp, #56]	; 0x38
   4a590:	str	r0, [r7]
   4a594:	str	r3, [r7, #4]
   4a598:	str	r3, [r7, #8]
   4a59c:	str	r3, [r7, #12]
   4a5a0:	str	r3, [r7, #16]
   4a5a4:	add	r2, r4, #4
   4a5a8:	add	r3, r4, #8
   4a5ac:	str	r6, [sp, #4]
   4a5b0:	str	r7, [sp]
   4a5b4:	add	r1, r5, #12
   4a5b8:	add	r0, r5, #8
   4a5bc:	bl	35818 <blkid_probe_get_size@plt+0x2e300>
   4a5c0:	cmp	r0, #0
   4a5c4:	blt	4a600 <blkid_probe_get_size@plt+0x430e8>
   4a5c8:	ldr	r3, [sp, #116]	; 0x74
   4a5cc:	add	r2, r7, #16
   4a5d0:	str	r3, [sp, #12]
   4a5d4:	ldr	r3, [sp, #60]	; 0x3c
   4a5d8:	add	r1, r7, #12
   4a5dc:	str	r3, [sp, #8]
   4a5e0:	ldr	r3, [sp, #40]	; 0x28
   4a5e4:	mov	r0, r5
   4a5e8:	str	r3, [sp, #4]
   4a5ec:	ldr	r3, [sp, #44]	; 0x2c
   4a5f0:	mov	r7, #0
   4a5f4:	str	r3, [sp]
   4a5f8:	ldr	r3, [sp, #68]	; 0x44
   4a5fc:	bl	460a4 <blkid_probe_get_size@plt+0x3eb8c>
   4a600:	mov	r0, r7
   4a604:	bl	69f0 <free@plt>
   4a608:	b	4a524 <blkid_probe_get_size@plt+0x4300c>
   4a60c:	mov	r5, ip
   4a610:	b	4a404 <blkid_probe_get_size@plt+0x42eec>
   4a614:	ldr	r3, [sp, #116]	; 0x74
   4a618:	add	r2, r4, #16
   4a61c:	str	r3, [sp, #12]
   4a620:	ldr	r3, [sp, #60]	; 0x3c
   4a624:	add	r1, r4, #12
   4a628:	str	r3, [sp, #8]
   4a62c:	ldr	r3, [sp, #40]	; 0x28
   4a630:	ldr	r0, [sp, #36]	; 0x24
   4a634:	str	r3, [sp, #4]
   4a638:	ldr	r3, [sp, #44]	; 0x2c
   4a63c:	str	r3, [sp]
   4a640:	ldr	r3, [sp, #68]	; 0x44
   4a644:	bl	460a4 <blkid_probe_get_size@plt+0x3eb8c>
   4a648:	b	4a524 <blkid_probe_get_size@plt+0x4300c>
   4a64c:	andeq	sp, r4, r4, lsl #31
   4a650:	andeq	r1, r2, r4, lsl #5
   4a654:	andeq	r6, r2, ip, ror #9
   4a658:	andeq	r8, r2, r4, lsr r0
   4a65c:	andeq	ip, r1, r0, lsr r6
   4a660:	andeq	r0, r0, sp, asr #3
   4a664:	andeq	sp, r4, r4, ror #29
   4a668:	ldrdeq	r1, [r2], -ip
   4a66c:			; <UNDEFINED> instruction: 0x0004debc
   4a670:	andeq	r6, r2, ip, lsr r4
   4a674:	andeq	ip, r1, ip, lsl #11
   4a678:	andeq	r7, r2, r0, asr #30
   4a67c:	andeq	r0, r2, ip, asr #31
   4a680:	strdeq	r6, [r2], -ip
   4a684:	andeq	lr, r1, ip, asr #7
   4a688:	andeq	sl, r2, r0, lsl #5
   4a68c:	ldrdeq	r6, [r2], -r4
   4a690:	andeq	r7, r2, ip, asr #25
   4a694:	andeq	ip, r1, r4, lsl r3
   4a698:			; <UNDEFINED> instruction: 0x000001bb
   4a69c:	push	{r1, r2, r3}
   4a6a0:	ldr	r3, [pc, #312]	; 4a7e0 <blkid_probe_get_size@plt+0x432c8>
   4a6a4:	ldr	r2, [pc, #312]	; 4a7e4 <blkid_probe_get_size@plt+0x432cc>
   4a6a8:	add	r3, pc, r3
   4a6ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   4a6b0:	sub	sp, sp, #16
   4a6b4:	ldr	r7, [r3, r2]
   4a6b8:	ldr	r9, [r0]
   4a6bc:	mov	r8, r0
   4a6c0:	ldr	r3, [r7]
   4a6c4:	cmp	r9, #0
   4a6c8:	str	r3, [sp, #12]
   4a6cc:	moveq	r6, r9
   4a6d0:	beq	4a6e0 <blkid_probe_get_size@plt+0x431c8>
   4a6d4:	mov	r0, r9
   4a6d8:	bl	723c <strlen@plt>
   4a6dc:	mov	r6, r0
   4a6e0:	ldr	r0, [sp, #48]	; 0x30
   4a6e4:	add	r5, sp, #52	; 0x34
   4a6e8:	cmp	r0, #0
   4a6ec:	mov	r4, r6
   4a6f0:	str	r5, [sp, #8]
   4a6f4:	bne	4a718 <blkid_probe_get_size@plt+0x43200>
   4a6f8:	b	4a750 <blkid_probe_get_size@plt+0x43238>
   4a6fc:	ldr	r3, [sp, #8]
   4a700:	add	r4, r4, r0
   4a704:	add	r2, r3, #4
   4a708:	ldr	r0, [r3]
   4a70c:	str	r2, [sp, #8]
   4a710:	cmp	r0, #0
   4a714:	beq	4a750 <blkid_probe_get_size@plt+0x43238>
   4a718:	bl	723c <strlen@plt>
   4a71c:	mvn	r3, r4
   4a720:	cmp	r0, r3
   4a724:	bls	4a6fc <blkid_probe_get_size@plt+0x431e4>
   4a728:	mov	r4, #0
   4a72c:	ldr	r2, [sp, #12]
   4a730:	ldr	r3, [r7]
   4a734:	mov	r0, r4
   4a738:	cmp	r2, r3
   4a73c:	bne	4a7dc <blkid_probe_get_size@plt+0x432c4>
   4a740:	add	sp, sp, #16
   4a744:	pop	{r4, r5, r6, r7, r8, r9, lr}
   4a748:	add	sp, sp, #12
   4a74c:	bx	lr
   4a750:	mov	r0, r9
   4a754:	add	r1, r4, #1
   4a758:	bl	6e94 <realloc@plt>
   4a75c:	subs	r9, r0, #0
   4a760:	beq	4a7d4 <blkid_probe_get_size@plt+0x432bc>
   4a764:	ldr	r1, [sp, #48]	; 0x30
   4a768:	str	r5, [sp, #8]
   4a76c:	cmp	r1, #0
   4a770:	add	r0, r9, r6
   4a774:	beq	4a790 <blkid_probe_get_size@plt+0x43278>
   4a778:	add	r5, r5, #4
   4a77c:	bl	6ae0 <stpcpy@plt>
   4a780:	ldr	r1, [r5, #-4]
   4a784:	str	r5, [sp, #8]
   4a788:	cmp	r1, #0
   4a78c:	bne	4a778 <blkid_probe_get_size@plt+0x43260>
   4a790:	add	r4, r9, r4
   4a794:	cmp	r4, r0
   4a798:	moveq	r3, #0
   4a79c:	strbeq	r3, [r0]
   4a7a0:	streq	r9, [r8]
   4a7a4:	beq	4a72c <blkid_probe_get_size@plt+0x43214>
   4a7a8:	ldr	r2, [pc, #56]	; 4a7e8 <blkid_probe_get_size@plt+0x432d0>
   4a7ac:	ldr	r1, [pc, #56]	; 4a7ec <blkid_probe_get_size@plt+0x432d4>
   4a7b0:	add	r2, pc, r2
   4a7b4:	add	r2, r2, #488	; 0x1e8
   4a7b8:	str	r2, [sp]
   4a7bc:	ldr	r2, [pc, #44]	; 4a7f0 <blkid_probe_get_size@plt+0x432d8>
   4a7c0:	ldr	r3, [pc, #44]	; 4a7f4 <blkid_probe_get_size@plt+0x432dc>
   4a7c4:	add	r2, pc, r2
   4a7c8:	add	r1, pc, r1
   4a7cc:	mov	r0, #0
   4a7d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4a7d4:	mov	r4, r9
   4a7d8:	b	4a72c <blkid_probe_get_size@plt+0x43214>
   4a7dc:	bl	6fb4 <__stack_chk_fail@plt>
   4a7e0:	andeq	sp, r4, r0, asr #9
   4a7e4:	andeq	r0, r0, ip, lsr r4
   4a7e8:	andeq	r5, r2, r0, lsl pc
   4a7ec:	andeq	r7, r2, r8, ror #20
   4a7f0:	andeq	r5, r2, r0, lsr r2
   4a7f4:	andeq	r0, r0, pc, lsr #7
   4a7f8:	ldr	ip, [pc, #1552]	; 4ae10 <blkid_probe_get_size@plt+0x438f8>
   4a7fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a800:	add	ip, pc, ip
   4a804:	ldr	lr, [pc, #1544]	; 4ae14 <blkid_probe_get_size@plt+0x438fc>
   4a808:	sub	sp, sp, #60	; 0x3c
   4a80c:	mov	r5, r3
   4a810:	str	r0, [sp, #24]
   4a814:	ldr	r0, [ip, lr]
   4a818:	mov	r3, ip
   4a81c:	mov	ip, r0
   4a820:	str	r0, [sp, #20]
   4a824:	ldr	r3, [ip]
   4a828:	mov	r0, r5
   4a82c:	mov	r8, r1
   4a830:	mov	r6, r2
   4a834:	str	r3, [sp, #52]	; 0x34
   4a838:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
   4a83c:	adds	r0, r0, #1
   4a840:	moveq	r0, #1
   4a844:	bne	4ad4c <blkid_probe_get_size@plt+0x43834>
   4a848:	bl	7230 <malloc@plt>
   4a84c:	subs	sl, r0, #0
   4a850:	beq	4a890 <blkid_probe_get_size@plt+0x43378>
   4a854:	ldr	r0, [r5]
   4a858:	cmp	r0, #0
   4a85c:	beq	4a8b4 <blkid_probe_get_size@plt+0x4339c>
   4a860:	mov	r4, sl
   4a864:	b	4a878 <blkid_probe_get_size@plt+0x43360>
   4a868:	ldr	r0, [r5, #4]!
   4a86c:	mov	r3, r4
   4a870:	cmp	r0, #0
   4a874:	beq	4a8b8 <blkid_probe_get_size@plt+0x433a0>
   4a878:	bl	74e8 <strdup@plt>
   4a87c:	cmp	r0, #0
   4a880:	str	r0, [r4], #4
   4a884:	bne	4a868 <blkid_probe_get_size@plt+0x43350>
   4a888:	mov	r0, sl
   4a88c:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   4a890:	mvn	fp, #11
   4a894:	ldr	r3, [sp, #20]
   4a898:	ldr	r2, [sp, #52]	; 0x34
   4a89c:	mov	r0, fp
   4a8a0:	ldr	r3, [r3]
   4a8a4:	cmp	r2, r3
   4a8a8:	bne	4ae0c <blkid_probe_get_size@plt+0x438f4>
   4a8ac:	add	sp, sp, #60	; 0x3c
   4a8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a8b4:	mov	r3, sl
   4a8b8:	mov	fp, #0
   4a8bc:	str	fp, [r3]
   4a8c0:	ldr	r4, [sl]
   4a8c4:	cmp	r4, fp
   4a8c8:	beq	4aa70 <blkid_probe_get_size@plt+0x43558>
   4a8cc:	mov	r5, fp
   4a8d0:	add	r9, sl, #4
   4a8d4:	add	r3, sp, #44	; 0x2c
   4a8d8:	str	fp, [sp, #32]
   4a8dc:	str	r3, [sp, #28]
   4a8e0:	ldrb	r3, [r4]
   4a8e4:	cmp	r3, #47	; 0x2f
   4a8e8:	bne	4ad3c <blkid_probe_get_size@plt+0x43824>
   4a8ec:	cmp	r6, #0
   4a8f0:	beq	4ad00 <blkid_probe_get_size@plt+0x437e8>
   4a8f4:	ldrb	r3, [r4, #1]
   4a8f8:	cmp	r3, #47	; 0x2f
   4a8fc:	bne	4adec <blkid_probe_get_size@plt+0x438d4>
   4a900:	add	r7, r4, #1
   4a904:	mov	r3, r7
   4a908:	b	4a910 <blkid_probe_get_size@plt+0x433f8>
   4a90c:	mov	r7, r3
   4a910:	ldrb	r2, [r3, #1]!
   4a914:	cmp	r2, #47	; 0x2f
   4a918:	beq	4a90c <blkid_probe_get_size@plt+0x433f4>
   4a91c:	mov	r0, r6
   4a920:	bl	39bd0 <blkid_probe_get_size@plt+0x326b8>
   4a924:	subs	r3, r0, #0
   4a928:	beq	4ac7c <blkid_probe_get_size@plt+0x43764>
   4a92c:	mov	r0, r7
   4a930:	str	r3, [sp, #36]	; 0x24
   4a934:	bl	74e8 <strdup@plt>
   4a938:	ldr	r3, [sp, #36]	; 0x24
   4a93c:	subs	fp, r0, #0
   4a940:	beq	4ac6c <blkid_probe_get_size@plt+0x43754>
   4a944:	ldr	r3, [sp, #28]
   4a948:	mov	r2, #0
   4a94c:	mov	r1, r6
   4a950:	mov	r0, fp
   4a954:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   4a958:	cmn	r0, #2
   4a95c:	mov	r7, r0
   4a960:	beq	4ac54 <blkid_probe_get_size@plt+0x4373c>
   4a964:	cmp	r0, #0
   4a968:	blt	4adfc <blkid_probe_get_size@plt+0x438e4>
   4a96c:	mov	r0, fp
   4a970:	bl	69f0 <free@plt>
   4a974:	ldr	fp, [sp, #44]	; 0x2c
   4a978:	mov	r1, r6
   4a97c:	mov	r0, fp
   4a980:	bl	3fdd0 <blkid_probe_get_size@plt+0x388b8>
   4a984:	subs	r2, r0, #0
   4a988:	beq	4ad9c <blkid_probe_get_size@plt+0x43884>
   4a98c:	ldrb	r3, [r2]
   4a990:	cmp	r3, #47	; 0x2f
   4a994:	bne	4ad6c <blkid_probe_get_size@plt+0x43854>
   4a998:	cmn	r2, #1
   4a99c:	beq	4ad6c <blkid_probe_get_size@plt+0x43854>
   4a9a0:	mov	r0, r2
   4a9a4:	bl	74e8 <strdup@plt>
   4a9a8:	mov	r7, r0
   4a9ac:	mov	r0, fp
   4a9b0:	bl	69f0 <free@plt>
   4a9b4:	cmp	r7, #0
   4a9b8:	beq	4ac68 <blkid_probe_get_size@plt+0x43750>
   4a9bc:	str	r7, [sl, r5, lsl #2]
   4a9c0:	mov	r0, r4
   4a9c4:	add	r5, r5, #1
   4a9c8:	bl	69f0 <free@plt>
   4a9cc:	cmp	r9, #0
   4a9d0:	beq	4a9e0 <blkid_probe_get_size@plt+0x434c8>
   4a9d4:	ldr	r4, [r9], #4
   4a9d8:	cmp	r4, #0
   4a9dc:	bne	4a8e0 <blkid_probe_get_size@plt+0x433c8>
   4a9e0:	ldr	r2, [sp, #32]
   4a9e4:	mov	r3, #0
   4a9e8:	cmp	r2, #0
   4a9ec:	str	r3, [sl, r5, lsl #2]
   4a9f0:	bne	4adf4 <blkid_probe_get_size@plt+0x438dc>
   4a9f4:	mov	r9, sl
   4a9f8:	str	r2, [sp, #28]
   4a9fc:	ldr	fp, [r9], #4
   4aa00:	cmp	fp, #0
   4aa04:	beq	4aa70 <blkid_probe_get_size@plt+0x43558>
   4aa08:	cmp	r9, #0
   4aa0c:	mov	r5, r9
   4aa10:	beq	4aa70 <blkid_probe_get_size@plt+0x43558>
   4aa14:	ldr	r4, [r9]
   4aa18:	cmp	r4, #0
   4aa1c:	beq	4aa64 <blkid_probe_get_size@plt+0x4354c>
   4aa20:	mov	r7, r9
   4aa24:	b	4aa34 <blkid_probe_get_size@plt+0x4351c>
   4aa28:	ldr	r4, [r7, #4]!
   4aa2c:	cmp	r4, #0
   4aa30:	beq	4aa64 <blkid_probe_get_size@plt+0x4354c>
   4aa34:	mov	r1, fp
   4aa38:	mov	r0, r4
   4aa3c:	bl	7314 <strcmp@plt>
   4aa40:	cmp	r0, #0
   4aa44:	strne	r4, [r5]
   4aa48:	addne	r5, r5, #4
   4aa4c:	bne	4aa28 <blkid_probe_get_size@plt+0x43510>
   4aa50:	mov	r0, r4
   4aa54:	bl	69f0 <free@plt>
   4aa58:	ldr	r4, [r7, #4]!
   4aa5c:	cmp	r4, #0
   4aa60:	bne	4aa34 <blkid_probe_get_size@plt+0x4351c>
   4aa64:	ldr	r3, [sp, #28]
   4aa68:	str	r3, [r5]
   4aa6c:	b	4a9fc <blkid_probe_get_size@plt+0x434e4>
   4aa70:	ldr	r0, [pc, #928]	; 4ae18 <blkid_probe_get_size@plt+0x43900>
   4aa74:	mov	r1, #0
   4aa78:	add	r0, pc, r0
   4aa7c:	add	r0, r0, #608	; 0x260
   4aa80:	bl	43fb0 <blkid_probe_get_size@plt+0x3ca98>
   4aa84:	subs	r4, r0, #0
   4aa88:	beq	4adf4 <blkid_probe_get_size@plt+0x438dc>
   4aa8c:	ldr	r7, [pc, #904]	; 4ae1c <blkid_probe_get_size@plt+0x43904>
   4aa90:	ldr	r9, [pc, #904]	; 4ae20 <blkid_probe_get_size@plt+0x43908>
   4aa94:	add	r7, pc, r7
   4aa98:	add	r9, pc, r9
   4aa9c:	add	r7, r7, #516	; 0x204
   4aaa0:	mov	r5, sl
   4aaa4:	b	4aab0 <blkid_probe_get_size@plt+0x43598>
   4aaa8:	cmp	r5, #0
   4aaac:	beq	4ab28 <blkid_probe_get_size@plt+0x43610>
   4aab0:	ldr	r3, [r5], #4
   4aab4:	cmp	r3, #0
   4aab8:	beq	4ab28 <blkid_probe_get_size@plt+0x43610>
   4aabc:	str	r3, [sp]
   4aac0:	mov	r2, r8
   4aac4:	mov	r3, r6
   4aac8:	mov	r1, #0
   4aacc:	mov	r0, r4
   4aad0:	bl	46344 <blkid_probe_get_size@plt+0x3ee2c>
   4aad4:	cmn	r0, #12
   4aad8:	beq	4ac4c <blkid_probe_get_size@plt+0x43734>
   4aadc:	cmp	r0, #0
   4aae0:	bge	4aaa8 <blkid_probe_get_size@plt+0x43590>
   4aae4:	ldr	r3, [r9, #20]
   4aae8:	cmp	r3, #6
   4aaec:	ble	4aaa8 <blkid_probe_get_size@plt+0x43590>
   4aaf0:	ldr	r2, [r5, #-4]
   4aaf4:	ldr	r3, [pc, #808]	; 4ae24 <blkid_probe_get_size@plt+0x4390c>
   4aaf8:	str	r2, [sp, #8]
   4aafc:	ldr	r2, [pc, #804]	; 4ae28 <blkid_probe_get_size@plt+0x43910>
   4ab00:	add	r3, pc, r3
   4ab04:	mov	r1, r0
   4ab08:	str	r3, [sp, #4]
   4ab0c:	str	r7, [sp]
   4ab10:	mov	r3, #168	; 0xa8
   4ab14:	add	r2, pc, r2
   4ab18:	mov	r0, #7
   4ab1c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ab20:	cmp	r5, #0
   4ab24:	bne	4aab0 <blkid_probe_get_size@plt+0x43598>
   4ab28:	ldrb	r3, [r4, #39]	; 0x27
   4ab2c:	tst	r3, #4
   4ab30:	beq	4ac40 <blkid_probe_get_size@plt+0x43728>
   4ab34:	ldr	r3, [r4, #24]
   4ab38:	adds	r3, r3, #1
   4ab3c:	moveq	r0, #1
   4ab40:	bne	4ad80 <blkid_probe_get_size@plt+0x43868>
   4ab44:	bl	7230 <malloc@plt>
   4ab48:	subs	r8, r0, #0
   4ab4c:	beq	4ad94 <blkid_probe_get_size@plt+0x4387c>
   4ab50:	add	r5, sp, #44	; 0x2c
   4ab54:	mvn	r3, #1
   4ab58:	mov	r1, r5
   4ab5c:	mov	r9, #0
   4ab60:	mov	r0, r4
   4ab64:	str	r3, [sp, #44]	; 0x2c
   4ab68:	str	r9, [sp, #48]	; 0x30
   4ab6c:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   4ab70:	cmn	r0, #1
   4ab74:	beq	4ade4 <blkid_probe_get_size@plt+0x438cc>
   4ab78:	ldr	r6, [pc, #684]	; 4ae2c <blkid_probe_get_size@plt+0x43914>
   4ab7c:	sub	fp, r8, #4
   4ab80:	add	r6, pc, r6
   4ab84:	add	r7, r4, #4
   4ab88:	b	4abb0 <blkid_probe_get_size@plt+0x43698>
   4ab8c:	cmp	r3, #2
   4ab90:	bne	4ae08 <blkid_probe_get_size@plt+0x438f0>
   4ab94:	ldr	r3, [r0]
   4ab98:	str	r3, [fp, #4]!
   4ab9c:	mov	r1, r5
   4aba0:	mov	r0, r4
   4aba4:	bl	442cc <blkid_probe_get_size@plt+0x3cdb4>
   4aba8:	cmn	r0, #1
   4abac:	beq	4abe4 <blkid_probe_get_size@plt+0x436cc>
   4abb0:	ldrb	r3, [r4, #39]	; 0x27
   4abb4:	add	r9, r9, #1
   4abb8:	tst	r3, #4
   4abbc:	and	r3, r3, #3
   4abc0:	ldrne	r1, [r4, #4]
   4abc4:	add	r2, r6, r3, lsl #4
   4abc8:	moveq	r1, r7
   4abcc:	ldr	r2, [r2, #628]	; 0x274
   4abd0:	cmp	r3, #1
   4abd4:	mla	r0, r2, r0, r1
   4abd8:	bhi	4ab8c <blkid_probe_get_size@plt+0x43674>
   4abdc:	ldr	r3, [r0, #4]
   4abe0:	b	4ab98 <blkid_probe_get_size@plt+0x43680>
   4abe4:	add	r9, r8, r9, lsl #2
   4abe8:	mov	r3, #0
   4abec:	str	r3, [r9]
   4abf0:	mov	r0, r4
   4abf4:	bl	439e0 <blkid_probe_get_size@plt+0x3c4c8>
   4abf8:	cmp	r0, #1
   4abfc:	bls	4ac18 <blkid_probe_get_size@plt+0x43700>
   4ac00:	ldr	r3, [pc, #552]	; 4ae30 <blkid_probe_get_size@plt+0x43918>
   4ac04:	mov	r1, r0
   4ac08:	add	r3, pc, r3
   4ac0c:	mov	r2, #4
   4ac10:	mov	r0, r8
   4ac14:	bl	6a44 <qsort@plt>
   4ac18:	ldr	r3, [sp, #24]
   4ac1c:	mov	fp, #0
   4ac20:	str	r8, [r3]
   4ac24:	mov	r2, #0
   4ac28:	mov	r0, r4
   4ac2c:	mov	r1, r2
   4ac30:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   4ac34:	mov	r0, sl
   4ac38:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   4ac3c:	b	4a894 <blkid_probe_get_size@plt+0x4337c>
   4ac40:	lsr	r3, r3, #3
   4ac44:	and	r3, r3, #7
   4ac48:	b	4ab38 <blkid_probe_get_size@plt+0x43620>
   4ac4c:	mov	fp, r0
   4ac50:	b	4ac24 <blkid_probe_get_size@plt+0x4370c>
   4ac54:	mov	r0, fp
   4ac58:	mov	r7, r4
   4ac5c:	bl	69f0 <free@plt>
   4ac60:	mov	r4, #0
   4ac64:	b	4a9bc <blkid_probe_get_size@plt+0x434a4>
   4ac68:	mov	r3, #1
   4ac6c:	str	r3, [sp, #32]
   4ac70:	mov	r0, r4
   4ac74:	bl	69f0 <free@plt>
   4ac78:	b	4a9cc <blkid_probe_get_size@plt+0x434b4>
   4ac7c:	mov	r0, r6
   4ac80:	bl	723c <strlen@plt>
   4ac84:	mov	fp, r0
   4ac88:	mov	r0, r7
   4ac8c:	bl	723c <strlen@plt>
   4ac90:	add	r0, fp, r0
   4ac94:	add	r0, r0, #2
   4ac98:	bl	7230 <malloc@plt>
   4ac9c:	subs	fp, r0, #0
   4aca0:	beq	4ac68 <blkid_probe_get_size@plt+0x43750>
   4aca4:	mov	r1, r6
   4aca8:	bl	6ae0 <stpcpy@plt>
   4acac:	cmp	r0, fp
   4acb0:	bls	4ace0 <blkid_probe_get_size@plt+0x437c8>
   4acb4:	ldrb	r1, [r0, #-1]
   4acb8:	cmp	r1, #47	; 0x2f
   4acbc:	bne	4ace0 <blkid_probe_get_size@plt+0x437c8>
   4acc0:	sub	r3, r0, #1
   4acc4:	b	4acd4 <blkid_probe_get_size@plt+0x437bc>
   4acc8:	ldrb	r2, [r3, #-1]!
   4accc:	cmp	r2, #47	; 0x2f
   4acd0:	bne	4ace0 <blkid_probe_get_size@plt+0x437c8>
   4acd4:	cmp	r3, fp
   4acd8:	mov	r0, r3
   4acdc:	bne	4acc8 <blkid_probe_get_size@plt+0x437b0>
   4ace0:	ldrb	r3, [r7]
   4ace4:	mov	r1, r7
   4ace8:	cmp	r3, #47	; 0x2f
   4acec:	movne	r3, #47	; 0x2f
   4acf0:	strbne	r3, [r0]
   4acf4:	addne	r0, r0, #1
   4acf8:	bl	6ea0 <strcpy@plt>
   4acfc:	b	4a944 <blkid_probe_get_size@plt+0x4342c>
   4ad00:	ldr	r3, [sp, #28]
   4ad04:	mov	r2, r6
   4ad08:	mov	r1, r6
   4ad0c:	mov	r0, r4
   4ad10:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   4ad14:	cmn	r0, #2
   4ad18:	mov	r7, r0
   4ad1c:	beq	4ad60 <blkid_probe_get_size@plt+0x43848>
   4ad20:	cmp	r0, #0
   4ad24:	blt	4adb8 <blkid_probe_get_size@plt+0x438a0>
   4ad28:	mov	r0, r4
   4ad2c:	bl	69f0 <free@plt>
   4ad30:	mov	r4, r6
   4ad34:	ldr	r7, [sp, #44]	; 0x2c
   4ad38:	b	4a9bc <blkid_probe_get_size@plt+0x434a4>
   4ad3c:	mov	r0, r4
   4ad40:	bl	69f0 <free@plt>
   4ad44:	mov	r4, #0
   4ad48:	b	4ac70 <blkid_probe_get_size@plt+0x43758>
   4ad4c:	lsrs	r3, r0, #30
   4ad50:	bne	4a890 <blkid_probe_get_size@plt+0x43378>
   4ad54:	lsls	r0, r0, #2
   4ad58:	moveq	r0, #1
   4ad5c:	b	4a848 <blkid_probe_get_size@plt+0x43330>
   4ad60:	mov	r7, r4
   4ad64:	mov	r4, r6
   4ad68:	b	4a9bc <blkid_probe_get_size@plt+0x434a4>
   4ad6c:	mov	r3, #47	; 0x2f
   4ad70:	strb	r3, [r2, #-1]
   4ad74:	ldr	fp, [sp, #44]	; 0x2c
   4ad78:	sub	r2, r2, #1
   4ad7c:	b	4a9a0 <blkid_probe_get_size@plt+0x43488>
   4ad80:	lsrs	r2, r3, #30
   4ad84:	bne	4ad94 <blkid_probe_get_size@plt+0x4387c>
   4ad88:	lsls	r0, r3, #2
   4ad8c:	moveq	r0, #1
   4ad90:	b	4ab44 <blkid_probe_get_size@plt+0x4362c>
   4ad94:	mvn	fp, #11
   4ad98:	b	4ac24 <blkid_probe_get_size@plt+0x4370c>
   4ad9c:	mov	r0, fp
   4ada0:	str	r2, [sp, #36]	; 0x24
   4ada4:	bl	69f0 <free@plt>
   4ada8:	ldr	r2, [sp, #36]	; 0x24
   4adac:	mov	r7, r4
   4adb0:	mov	r4, r2
   4adb4:	b	4a9bc <blkid_probe_get_size@plt+0x434a4>
   4adb8:	mov	r2, r6
   4adbc:	mov	r0, r4
   4adc0:	str	r2, [sp, #36]	; 0x24
   4adc4:	bl	69f0 <free@plt>
   4adc8:	ldr	r3, [sp, #32]
   4adcc:	cmn	r7, #12
   4add0:	ldr	r2, [sp, #36]	; 0x24
   4add4:	moveq	r3, #1
   4add8:	str	r3, [sp, #32]
   4addc:	mov	r4, r2
   4ade0:	b	4ac70 <blkid_probe_get_size@plt+0x43758>
   4ade4:	mov	r9, r8
   4ade8:	b	4abe8 <blkid_probe_get_size@plt+0x436d0>
   4adec:	mov	r7, r4
   4adf0:	b	4a91c <blkid_probe_get_size@plt+0x43404>
   4adf4:	mvn	fp, #11
   4adf8:	b	4ac34 <blkid_probe_get_size@plt+0x4371c>
   4adfc:	mov	r2, r4
   4ae00:	mov	r4, fp
   4ae04:	b	4adbc <blkid_probe_get_size@plt+0x438a4>
   4ae08:	bl	4399c <blkid_probe_get_size@plt+0x3c484>
   4ae0c:	bl	6fb4 <__stack_chk_fail@plt>
   4ae10:	andeq	sp, r4, r8, ror #6
   4ae14:	andeq	r0, r0, ip, lsr r4
   4ae18:	andeq	pc, r3, r8, lsr #12
   4ae1c:	andeq	r5, r2, ip, lsr #24
   4ae20:	muleq	r4, r0, r6
   4ae24:	andeq	r7, r2, ip, lsr r7
   4ae28:	ldrdeq	r7, [r2], -r8
   4ae2c:	andeq	pc, r3, r0, lsr #10
   4ae30:			; <UNDEFINED> instruction: 0xfffe0a70
   4ae34:	ldr	ip, [pc, #112]	; 4aeac <blkid_probe_get_size@plt+0x43994>
   4ae38:	push	{r4, r5, lr}
   4ae3c:	add	ip, pc, ip
   4ae40:	ldr	lr, [pc, #104]	; 4aeb0 <blkid_probe_get_size@plt+0x43998>
   4ae44:	sub	sp, sp, #44	; 0x2c
   4ae48:	ldr	r4, [ip, lr]
   4ae4c:	ldr	r5, [sp, #56]	; 0x38
   4ae50:	ldr	ip, [sp, #60]	; 0x3c
   4ae54:	str	r5, [sp]
   4ae58:	ldr	lr, [r4]
   4ae5c:	str	ip, [sp, #4]
   4ae60:	ldr	ip, [sp, #76]	; 0x4c
   4ae64:	ldr	r5, [sp, #64]	; 0x40
   4ae68:	str	ip, [sp, #20]
   4ae6c:	str	lr, [sp, #36]	; 0x24
   4ae70:	add	ip, sp, #80	; 0x50
   4ae74:	mov	lr, #0
   4ae78:	str	r5, [sp, #8]
   4ae7c:	str	ip, [sp, #24]
   4ae80:	str	lr, [sp, #16]
   4ae84:	str	lr, [sp, #12]
   4ae88:	str	ip, [sp, #32]
   4ae8c:	bl	47974 <blkid_probe_get_size@plt+0x4045c>
   4ae90:	ldr	r2, [sp, #36]	; 0x24
   4ae94:	ldr	r3, [r4]
   4ae98:	cmp	r2, r3
   4ae9c:	bne	4aea8 <blkid_probe_get_size@plt+0x43990>
   4aea0:	add	sp, sp, #44	; 0x2c
   4aea4:	pop	{r4, r5, pc}
   4aea8:	bl	6fb4 <__stack_chk_fail@plt>
   4aeac:	andeq	ip, r4, ip, lsr #26
   4aeb0:	andeq	r0, r0, ip, lsr r4
   4aeb4:	ldr	ip, [pc, #668]	; 4b158 <blkid_probe_get_size@plt+0x43c40>
   4aeb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4aebc:	add	ip, pc, ip
   4aec0:	ldr	lr, [pc, #660]	; 4b15c <blkid_probe_get_size@plt+0x43c44>
   4aec4:	sub	sp, sp, #32
   4aec8:	mov	r9, r3
   4aecc:	ldr	r5, [ip, lr]
   4aed0:	subs	r4, r0, #0
   4aed4:	mov	r6, r1
   4aed8:	ldr	r3, [r5]
   4aedc:	mov	r1, ip
   4aee0:	ldr	r8, [sp, #64]	; 0x40
   4aee4:	str	r3, [sp, #28]
   4aee8:	beq	4b090 <blkid_probe_get_size@plt+0x43b78>
   4aeec:	cmp	r4, #1
   4aef0:	mov	r7, r2
   4aef4:	beq	4afcc <blkid_probe_get_size@plt+0x43ab4>
   4aef8:	cmp	r7, #0
   4aefc:	blt	4b0c0 <blkid_probe_get_size@plt+0x43ba8>
   4af00:	ldr	r3, [r4, #264]	; 0x108
   4af04:	cmp	r3, #5
   4af08:	beq	4b0f4 <blkid_probe_get_size@plt+0x43bdc>
   4af0c:	ldr	sl, [r4, #228]	; 0xe4
   4af10:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4af14:	cmp	sl, r0
   4af18:	bne	4b05c <blkid_probe_get_size@plt+0x43b44>
   4af1c:	mov	r0, r4
   4af20:	clz	r1, r6
   4af24:	mov	r2, #0
   4af28:	lsr	r1, r1, #5
   4af2c:	bl	31cc8 <blkid_probe_get_size@plt+0x2a7b0>
   4af30:	subs	r4, r0, #0
   4af34:	beq	4b01c <blkid_probe_get_size@plt+0x43b04>
   4af38:	ldrb	r3, [r4, #24]
   4af3c:	mov	r1, #1
   4af40:	str	r7, [r4, #84]	; 0x54
   4af44:	bic	r3, r3, #192	; 0xc0
   4af48:	orr	r3, r3, #32
   4af4c:	ands	r2, r3, #31
   4af50:	str	r9, [r4, #80]	; 0x50
   4af54:	str	r8, [r4, #12]
   4af58:	strb	r3, [r4, #24]
   4af5c:	str	r1, [r4]
   4af60:	str	r1, [r4, #88]	; 0x58
   4af64:	bne	4b128 <blkid_probe_get_size@plt+0x43c10>
   4af68:	ldrb	r3, [r4, #96]	; 0x60
   4af6c:	str	r2, [sp, #12]
   4af70:	str	r2, [sp, #20]
   4af74:	tst	r3, #1
   4af78:	str	r4, [sp, #16]
   4af7c:	str	r1, [sp, #8]
   4af80:	ldreq	r3, [r4, #8]
   4af84:	ldrne	r1, [r4, #8]
   4af88:	movne	r2, r7
   4af8c:	ldreq	r0, [r3, #4]
   4af90:	ldrne	r0, [r1, #4]
   4af94:	addne	r3, sp, #8
   4af98:	movne	r1, #3
   4af9c:	moveq	r2, r7
   4afa0:	addeq	r3, sp, #8
   4afa4:	bl	6cb4 <epoll_ctl@plt>
   4afa8:	cmp	r0, #0
   4afac:	blt	4b03c <blkid_probe_get_size@plt+0x43b24>
   4afb0:	ldrb	r3, [r4, #96]	; 0x60
   4afb4:	orr	r3, r3, #1
   4afb8:	strb	r3, [r4, #96]	; 0x60
   4afbc:	cmp	r6, #0
   4afc0:	strne	r4, [r6]
   4afc4:	mov	r7, #0
   4afc8:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4afcc:	ldr	r0, [pc, #396]	; 4b160 <blkid_probe_get_size@plt+0x43c48>
   4afd0:	add	r0, pc, r0
   4afd4:	bl	74dc <__tls_get_addr@plt>
   4afd8:	ldr	r3, [pc, #388]	; 4b164 <blkid_probe_get_size@plt+0x43c4c>
   4afdc:	ldr	r4, [r3, r0]
   4afe0:	cmp	r4, #0
   4afe4:	bne	4aef8 <blkid_probe_get_size@plt+0x439e0>
   4afe8:	ldr	r3, [pc, #376]	; 4b168 <blkid_probe_get_size@plt+0x43c50>
   4afec:	ldr	r2, [pc, #376]	; 4b16c <blkid_probe_get_size@plt+0x43c54>
   4aff0:	add	r3, pc, r3
   4aff4:	ldr	r1, [pc, #372]	; 4b170 <blkid_probe_get_size@plt+0x43c58>
   4aff8:	add	r3, r3, #548	; 0x224
   4affc:	str	r3, [sp]
   4b000:	mov	r0, r4
   4b004:	mov	r3, #888	; 0x378
   4b008:	add	r2, pc, r2
   4b00c:	add	r1, pc, r1
   4b010:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b014:	mvn	r7, #64	; 0x40
   4b018:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b01c:	mvn	r7, #11
   4b020:	ldr	r2, [sp, #28]
   4b024:	ldr	r3, [r5]
   4b028:	mov	r0, r7
   4b02c:	cmp	r2, r3
   4b030:	bne	4b154 <blkid_probe_get_size@plt+0x43c3c>
   4b034:	add	sp, sp, #32
   4b038:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4b03c:	bl	732c <__errno_location@plt>
   4b040:	ldr	r7, [r0]
   4b044:	cmp	r7, #0
   4b048:	rsb	r7, r7, #0
   4b04c:	ble	4afbc <blkid_probe_get_size@plt+0x43aa4>
   4b050:	mov	r0, r4
   4b054:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   4b058:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b05c:	ldr	r2, [pc, #272]	; 4b174 <blkid_probe_get_size@plt+0x43c5c>
   4b060:	ldr	r1, [pc, #272]	; 4b178 <blkid_probe_get_size@plt+0x43c60>
   4b064:	add	r2, pc, r2
   4b068:	add	r2, r2, #548	; 0x224
   4b06c:	str	r2, [sp]
   4b070:	ldr	r2, [pc, #260]	; 4b17c <blkid_probe_get_size@plt+0x43c64>
   4b074:	ldr	r3, [pc, #260]	; 4b180 <blkid_probe_get_size@plt+0x43c68>
   4b078:	add	r2, pc, r2
   4b07c:	add	r1, pc, r1
   4b080:	mov	r0, #0
   4b084:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b088:	mvn	r7, #9
   4b08c:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b090:	ldr	r2, [pc, #236]	; 4b184 <blkid_probe_get_size@plt+0x43c6c>
   4b094:	ldr	r1, [pc, #236]	; 4b188 <blkid_probe_get_size@plt+0x43c70>
   4b098:	add	r2, pc, r2
   4b09c:	add	r2, r2, #548	; 0x224
   4b0a0:	str	r2, [sp]
   4b0a4:	ldr	r2, [pc, #224]	; 4b18c <blkid_probe_get_size@plt+0x43c74>
   4b0a8:	ldr	r3, [pc, #224]	; 4b190 <blkid_probe_get_size@plt+0x43c78>
   4b0ac:	add	r2, pc, r2
   4b0b0:	add	r1, pc, r1
   4b0b4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b0b8:	mvn	r7, #21
   4b0bc:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b0c0:	ldr	r2, [pc, #204]	; 4b194 <blkid_probe_get_size@plt+0x43c7c>
   4b0c4:	ldr	r1, [pc, #204]	; 4b198 <blkid_probe_get_size@plt+0x43c80>
   4b0c8:	add	r2, pc, r2
   4b0cc:	add	r2, r2, #548	; 0x224
   4b0d0:	str	r2, [sp]
   4b0d4:	ldr	r2, [pc, #192]	; 4b19c <blkid_probe_get_size@plt+0x43c84>
   4b0d8:	ldr	r3, [pc, #192]	; 4b1a0 <blkid_probe_get_size@plt+0x43c88>
   4b0dc:	add	r2, pc, r2
   4b0e0:	add	r1, pc, r1
   4b0e4:	mov	r0, #0
   4b0e8:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b0ec:	mvn	r7, #8
   4b0f0:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b0f4:	ldr	r2, [pc, #168]	; 4b1a4 <blkid_probe_get_size@plt+0x43c8c>
   4b0f8:	ldr	r1, [pc, #168]	; 4b1a8 <blkid_probe_get_size@plt+0x43c90>
   4b0fc:	add	r2, pc, r2
   4b100:	add	r2, r2, #548	; 0x224
   4b104:	str	r2, [sp]
   4b108:	ldr	r2, [pc, #156]	; 4b1ac <blkid_probe_get_size@plt+0x43c94>
   4b10c:	mov	r3, #892	; 0x37c
   4b110:	add	r2, pc, r2
   4b114:	add	r1, pc, r1
   4b118:	mov	r0, #0
   4b11c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b120:	mvn	r7, #115	; 0x73
   4b124:	b	4b020 <blkid_probe_get_size@plt+0x43b08>
   4b128:	ldr	r2, [pc, #128]	; 4b1b0 <blkid_probe_get_size@plt+0x43c98>
   4b12c:	ldr	r1, [pc, #128]	; 4b1b4 <blkid_probe_get_size@plt+0x43c9c>
   4b130:	add	r2, pc, r2
   4b134:	add	r2, r2, #564	; 0x234
   4b138:	str	r2, [sp]
   4b13c:	ldr	r2, [pc, #116]	; 4b1b8 <blkid_probe_get_size@plt+0x43ca0>
   4b140:	mov	r3, #380	; 0x17c
   4b144:	add	r2, pc, r2
   4b148:	add	r1, pc, r1
   4b14c:	mov	r0, #0
   4b150:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4b154:	bl	6fb4 <__stack_chk_fail@plt>
   4b158:	andeq	ip, r4, ip, lsr #25
   4b15c:	andeq	r0, r0, ip, lsr r4
   4b160:	andeq	ip, r4, r8, asr #31
   4b164:	andeq	r0, r0, r4, asr r0
   4b168:	ldrdeq	r5, [r2], -r0
   4b16c:			; <UNDEFINED> instruction: 0x000224b4
   4b170:	ldrdeq	r2, [r2], -ip
   4b174:	andeq	r5, r2, ip, asr r6
   4b178:	andeq	r2, r2, r4, lsr #25
   4b17c:	andeq	r2, r2, r4, asr #8
   4b180:	andeq	r0, r0, sp, ror r3
   4b184:	andeq	r5, r2, r8, lsr #12
   4b188:	andeq	r9, r2, r0, asr #11
   4b18c:	andeq	r2, r2, r0, lsl r4
   4b190:	andeq	r0, r0, r7, ror r3
   4b194:	strdeq	r5, [r2], -r8
   4b198:	strdeq	r2, [r2], -ip
   4b19c:	andeq	r2, r2, r0, ror #7
   4b1a0:	andeq	r0, r0, r9, ror r3
   4b1a4:	andeq	r5, r2, r4, asr #11
   4b1a8:	andeq	r2, r2, ip, ror #23
   4b1ac:	andeq	r2, r2, ip, lsr #7
   4b1b0:	muleq	r2, r0, r5
   4b1b4:	andeq	r2, r2, ip, asr #25
   4b1b8:	andeq	r2, r2, r8, ror r3
   4b1bc:	ldr	r3, [pc, #812]	; 4b4f0 <blkid_probe_get_size@plt+0x43fd8>
   4b1c0:	ldr	r2, [pc, #812]	; 4b4f4 <blkid_probe_get_size@plt+0x43fdc>
   4b1c4:	add	r3, pc, r3
   4b1c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b1cc:	sub	sp, sp, #36	; 0x24
   4b1d0:	ldr	r6, [r3, r2]
   4b1d4:	cmp	r1, #2
   4b1d8:	mov	r8, r0
   4b1dc:	ldr	r3, [r6]
   4b1e0:	movne	r4, #1
   4b1e4:	str	r3, [sp, #28]
   4b1e8:	beq	4b2dc <blkid_probe_get_size@plt+0x43dc4>
   4b1ec:	mov	r2, #15
   4b1f0:	ldr	r1, [pc, #768]	; 4b4f8 <blkid_probe_get_size@plt+0x43fe0>
   4b1f4:	mov	r0, #16
   4b1f8:	bl	6fd8 <socket@plt>
   4b1fc:	subs	r7, r0, #0
   4b200:	blt	4b264 <blkid_probe_get_size@plt+0x43d4c>
   4b204:	mov	r0, #296	; 0x128
   4b208:	bl	7230 <malloc@plt>
   4b20c:	subs	r5, r0, #0
   4b210:	beq	4b4dc <blkid_probe_get_size@plt+0x43fc4>
   4b214:	mov	r2, #296	; 0x128
   4b218:	mov	r1, #0
   4b21c:	bl	6c84 <memset@plt>
   4b220:	mov	r2, #1
   4b224:	mov	r3, #16
   4b228:	str	r4, [r5, #16]
   4b22c:	str	r7, [r5, #4]
   4b230:	str	r5, [r8]
   4b234:	str	r2, [r5]
   4b238:	strh	r3, [r5, #8]
   4b23c:	mvn	r0, #0
   4b240:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4b244:	mov	r4, #0
   4b248:	ldr	r2, [sp, #28]
   4b24c:	ldr	r3, [r6]
   4b250:	mov	r0, r4
   4b254:	cmp	r2, r3
   4b258:	bne	4b4ec <blkid_probe_get_size@plt+0x43fd4>
   4b25c:	add	sp, sp, #36	; 0x24
   4b260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b264:	bl	732c <__errno_location@plt>
   4b268:	ldr	r3, [pc, #652]	; 4b4fc <blkid_probe_get_size@plt+0x43fe4>
   4b26c:	add	r3, pc, r3
   4b270:	ldr	r3, [r3, #20]
   4b274:	cmp	r3, #6
   4b278:	ldr	r1, [r0]
   4b27c:	bgt	4b29c <blkid_probe_get_size@plt+0x43d84>
   4b280:	eor	r4, r1, r1, asr #31
   4b284:	sub	r4, r4, r1, asr #31
   4b288:	mov	r0, r7
   4b28c:	uxtb	r4, r4
   4b290:	rsb	r4, r4, #0
   4b294:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4b298:	b	4b248 <blkid_probe_get_size@plt+0x43d30>
   4b29c:	ldr	r2, [pc, #604]	; 4b500 <blkid_probe_get_size@plt+0x43fe8>
   4b2a0:	ldr	r3, [pc, #604]	; 4b504 <blkid_probe_get_size@plt+0x43fec>
   4b2a4:	add	r2, pc, r2
   4b2a8:	str	r2, [sp, #4]
   4b2ac:	add	r3, pc, r3
   4b2b0:	ldr	r2, [pc, #592]	; 4b508 <blkid_probe_get_size@plt+0x43ff0>
   4b2b4:	add	r3, r3, #584	; 0x248
   4b2b8:	str	r3, [sp]
   4b2bc:	add	r2, pc, r2
   4b2c0:	mov	r3, #150	; 0x96
   4b2c4:	mov	r0, #7
   4b2c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4b2cc:	mov	r4, r0
   4b2d0:	mov	r0, r7
   4b2d4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4b2d8:	b	4b248 <blkid_probe_get_size@plt+0x43d30>
   4b2dc:	ldr	r0, [pc, #552]	; 4b50c <blkid_probe_get_size@plt+0x43ff4>
   4b2e0:	mov	r4, r1
   4b2e4:	add	r0, pc, r0
   4b2e8:	mov	r1, #0
   4b2ec:	bl	6ff0 <access@plt>
   4b2f0:	cmp	r0, #0
   4b2f4:	bge	4b1ec <blkid_probe_get_size@plt+0x43cd4>
   4b2f8:	ldr	r1, [pc, #528]	; 4b510 <blkid_probe_get_size@plt+0x43ff8>
   4b2fc:	mov	r2, #0
   4b300:	add	r5, sp, #16
   4b304:	mov	r3, r5
   4b308:	str	r2, [sp]
   4b30c:	add	r1, pc, r1
   4b310:	mvn	r0, #99	; 0x63
   4b314:	bl	39ec0 <blkid_probe_get_size@plt+0x329a8>
   4b318:	cmn	r0, #38	; 0x26
   4b31c:	beq	4b494 <blkid_probe_get_size@plt+0x43f7c>
   4b320:	ble	4b484 <blkid_probe_get_size@plt+0x43f6c>
   4b324:	cmn	r0, #13
   4b328:	beq	4b494 <blkid_probe_get_size@plt+0x43f7c>
   4b32c:	cmn	r0, #1
   4b330:	beq	4b494 <blkid_probe_get_size@plt+0x43f7c>
   4b334:	cmn	r0, #22
   4b338:	beq	4b494 <blkid_probe_get_size@plt+0x43f7c>
   4b33c:	cmp	r0, #0
   4b340:	blt	4b428 <blkid_probe_get_size@plt+0x43f10>
   4b344:	ldr	r1, [pc, #456]	; 4b514 <blkid_probe_get_size@plt+0x43ffc>
   4b348:	ldr	r0, [pc, #456]	; 4b518 <blkid_probe_get_size@plt+0x44000>
   4b34c:	add	r1, pc, r1
   4b350:	add	r0, pc, r0
   4b354:	bl	738c <fopen64@plt>
   4b358:	subs	r5, r0, #0
   4b35c:	beq	4b4c0 <blkid_probe_get_size@plt+0x43fa8>
   4b360:	mov	r1, #2
   4b364:	ldr	r9, [pc, #432]	; 4b51c <blkid_probe_get_size@plt+0x44004>
   4b368:	ldr	sl, [pc, #432]	; 4b520 <blkid_probe_get_size@plt+0x44008>
   4b36c:	bl	68f4 <__fsetlocking@plt>
   4b370:	ldr	r3, [pc, #428]	; 4b524 <blkid_probe_get_size@plt+0x4400c>
   4b374:	add	r9, pc, r9
   4b378:	add	sl, pc, sl
   4b37c:	add	r7, sp, #20
   4b380:	add	r3, pc, r3
   4b384:	str	r3, [sp, #12]
   4b388:	mov	r3, #0
   4b38c:	mov	r1, r3
   4b390:	mov	r2, r7
   4b394:	mov	r0, r5
   4b398:	str	r3, [sp, #20]
   4b39c:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   4b3a0:	cmp	r0, #0
   4b3a4:	ldr	r0, [sp, #20]
   4b3a8:	blt	4b4b0 <blkid_probe_get_size@plt+0x43f98>
   4b3ac:	beq	4b4b0 <blkid_probe_get_size@plt+0x43f98>
   4b3b0:	add	r2, sp, #24
   4b3b4:	mov	r1, r9
   4b3b8:	bl	735c <sscanf@plt>
   4b3bc:	cmp	r0, #1
   4b3c0:	bne	4b418 <blkid_probe_get_size@plt+0x43f00>
   4b3c4:	ldr	r1, [sp, #24]
   4b3c8:	ldr	r2, [sp, #16]
   4b3cc:	ldr	fp, [sp, #20]
   4b3d0:	cmp	r1, r2
   4b3d4:	bne	4b41c <blkid_probe_get_size@plt+0x43f04>
   4b3d8:	mov	r1, sl
   4b3dc:	mov	r0, fp
   4b3e0:	bl	7050 <strstr@plt>
   4b3e4:	cmp	r0, #0
   4b3e8:	beq	4b41c <blkid_probe_get_size@plt+0x43f04>
   4b3ec:	add	r0, r0, #3
   4b3f0:	mov	r2, #8
   4b3f4:	ldr	r1, [sp, #12]
   4b3f8:	bl	6a5c <strncmp@plt>
   4b3fc:	cmp	r0, #0
   4b400:	bne	4b41c <blkid_probe_get_size@plt+0x43f04>
   4b404:	mov	r0, fp
   4b408:	bl	69f0 <free@plt>
   4b40c:	mov	r0, r5
   4b410:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4b414:	b	4b1ec <blkid_probe_get_size@plt+0x43cd4>
   4b418:	ldr	fp, [sp, #20]
   4b41c:	mov	r0, fp
   4b420:	bl	69f0 <free@plt>
   4b424:	b	4b388 <blkid_probe_get_size@plt+0x43e70>
   4b428:	mov	r0, #0
   4b42c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4b430:	ldr	r3, [pc, #240]	; 4b528 <blkid_probe_get_size@plt+0x44010>
   4b434:	add	r3, pc, r3
   4b438:	ldr	r3, [r3, #20]
   4b43c:	cmp	r3, #6
   4b440:	movle	r4, #0
   4b444:	ble	4b1ec <blkid_probe_get_size@plt+0x43cd4>
   4b448:	ldr	r2, [pc, #220]	; 4b52c <blkid_probe_get_size@plt+0x44014>
   4b44c:	ldr	r3, [pc, #220]	; 4b530 <blkid_probe_get_size@plt+0x44018>
   4b450:	add	r2, pc, r2
   4b454:	str	r2, [sp, #4]
   4b458:	add	r3, pc, r3
   4b45c:	ldr	r2, [pc, #208]	; 4b534 <blkid_probe_get_size@plt+0x4401c>
   4b460:	add	r3, r3, #584	; 0x248
   4b464:	str	r3, [sp]
   4b468:	add	r2, pc, r2
   4b46c:	mov	r3, #143	; 0x8f
   4b470:	mov	r1, #0
   4b474:	mov	r0, #7
   4b478:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4b47c:	mov	r4, #0
   4b480:	b	4b1ec <blkid_probe_get_size@plt+0x43cd4>
   4b484:	cmn	r0, #95	; 0x5f
   4b488:	beq	4b494 <blkid_probe_get_size@plt+0x43f7c>
   4b48c:	cmn	r0, #75	; 0x4b
   4b490:	bne	4b33c <blkid_probe_get_size@plt+0x43e24>
   4b494:	ldr	r1, [pc, #156]	; 4b538 <blkid_probe_get_size@plt+0x44020>
   4b498:	mov	r3, r5
   4b49c:	mov	r2, #0
   4b4a0:	add	r1, pc, r1
   4b4a4:	mvn	r0, #99	; 0x63
   4b4a8:	bl	41af8 <blkid_probe_get_size@plt+0x3a5e0>
   4b4ac:	b	4b33c <blkid_probe_get_size@plt+0x43e24>
   4b4b0:	bl	69f0 <free@plt>
   4b4b4:	mov	r0, r5
   4b4b8:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4b4bc:	b	4b430 <blkid_probe_get_size@plt+0x43f18>
   4b4c0:	bl	732c <__errno_location@plt>
   4b4c4:	ldr	r7, [r0]
   4b4c8:	mov	r0, r5
   4b4cc:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4b4d0:	cmp	r7, #0
   4b4d4:	blt	4b1ec <blkid_probe_get_size@plt+0x43cd4>
   4b4d8:	b	4b430 <blkid_probe_get_size@plt+0x43f18>
   4b4dc:	mov	r0, r7
   4b4e0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4b4e4:	mvn	r4, #11
   4b4e8:	b	4b248 <blkid_probe_get_size@plt+0x43d30>
   4b4ec:	bl	6fb4 <__stack_chk_fail@plt>
   4b4f0:	andeq	ip, r4, r4, lsr #19
   4b4f4:	andeq	r0, r0, ip, lsr r4
   4b4f8:	andeq	r0, r8, r3, lsl #16
   4b4fc:			; <UNDEFINED> instruction: 0x0004cebc
   4b500:	andeq	r7, r2, ip, asr r0
   4b504:	andeq	r5, r2, r4, lsl r4
   4b508:	andeq	sl, r1, r8, ror #3
   4b50c:	andeq	r6, r2, r8, lsl #31
   4b510:	andeq	ip, r1, r0, asr #32
   4b514:	andeq	r3, r2, r0, asr #32
   4b518:	andeq	r6, r2, r0, lsr pc
   4b51c:	andeq	r6, r2, r4, lsr #30
   4b520:	andeq	r6, r2, r4, lsr #30
   4b524:	andeq	r6, r2, r0, lsr #30
   4b528:	strdeq	ip, [r4], -r4
   4b52c:	andeq	r6, r2, ip, asr lr
   4b530:	andeq	r5, r2, r8, ror #4
   4b534:	andeq	sl, r1, ip, lsr r0
   4b538:	andeq	fp, r1, ip, lsr #29
   4b53c:	push	{r4, r5, lr}
   4b540:	subs	r4, r0, #0
   4b544:	sub	sp, sp, #12
   4b548:	beq	4b638 <blkid_probe_get_size@plt+0x44120>
   4b54c:	ldr	r3, [r4, #8]
   4b550:	cmp	r3, #0
   4b554:	beq	4b66c <blkid_probe_get_size@plt+0x44154>
   4b558:	ldr	r5, [r3, #228]	; 0xe4
   4b55c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4b560:	cmp	r5, r0
   4b564:	bne	4b670 <blkid_probe_get_size@plt+0x44158>
   4b568:	ldr	r3, [r4, #8]
   4b56c:	ldr	r3, [r3, #264]	; 0x108
   4b570:	cmp	r3, #5
   4b574:	beq	4b62c <blkid_probe_get_size@plt+0x44114>
   4b578:	ldrb	r1, [r4, #24]
   4b57c:	sxtb	r3, r1
   4b580:	lsrs	r3, r3, #5
   4b584:	beq	4b62c <blkid_probe_get_size@plt+0x44114>
   4b588:	lsl	r1, r1, #27
   4b58c:	asr	r1, r1, #27
   4b590:	cmp	r1, #8
   4b594:	beq	4b5a0 <blkid_probe_get_size@plt+0x44088>
   4b598:	cmp	r1, #10
   4b59c:	bne	4b788 <blkid_probe_get_size@plt+0x44270>
   4b5a0:	cmp	r1, #12
   4b5a4:	addls	pc, pc, r1, lsl #2
   4b5a8:	b	4b7fc <blkid_probe_get_size@plt+0x442e4>
   4b5ac:	b	4b758 <blkid_probe_get_size@plt+0x44240>
   4b5b0:	b	4b70c <blkid_probe_get_size@plt+0x441f4>
   4b5b4:	b	4b70c <blkid_probe_get_size@plt+0x441f4>
   4b5b8:	b	4b70c <blkid_probe_get_size@plt+0x441f4>
   4b5bc:	b	4b70c <blkid_probe_get_size@plt+0x441f4>
   4b5c0:	b	4b70c <blkid_probe_get_size@plt+0x441f4>
   4b5c4:	b	4b6ec <blkid_probe_get_size@plt+0x441d4>
   4b5c8:	b	4b6b4 <blkid_probe_get_size@plt+0x4419c>
   4b5cc:	b	4b6a4 <blkid_probe_get_size@plt+0x4418c>
   4b5d0:	b	4b6a4 <blkid_probe_get_size@plt+0x4418c>
   4b5d4:	b	4b5e0 <blkid_probe_get_size@plt+0x440c8>
   4b5d8:	b	4b7fc <blkid_probe_get_size@plt+0x442e4>
   4b5dc:	b	4b6a4 <blkid_probe_get_size@plt+0x4418c>
   4b5e0:	ldrb	r3, [r4, #24]
   4b5e4:	ldr	r0, [r4, #8]
   4b5e8:	add	r2, r4, #84	; 0x54
   4b5ec:	bic	r3, r3, #224	; 0xe0
   4b5f0:	strb	r3, [r4, #24]
   4b5f4:	mov	r1, r4
   4b5f8:	ldr	r0, [r0, #212]	; 0xd4
   4b5fc:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   4b600:	ldrb	r3, [r4, #25]
   4b604:	tst	r3, #1
   4b608:	bne	4b770 <blkid_probe_get_size@plt+0x44258>
   4b60c:	ldr	r3, [r4, #16]
   4b610:	cmp	r3, #0
   4b614:	beq	4b62c <blkid_probe_get_size@plt+0x44114>
   4b618:	ldr	r3, [r4, #8]
   4b61c:	add	r2, r4, #44	; 0x2c
   4b620:	mov	r1, r4
   4b624:	ldr	r0, [r3, #16]
   4b628:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   4b62c:	mov	r0, #0
   4b630:	add	sp, sp, #12
   4b634:	pop	{r4, r5, pc}
   4b638:	ldr	r2, [pc, #488]	; 4b828 <blkid_probe_get_size@plt+0x44310>
   4b63c:	ldr	r1, [pc, #488]	; 4b82c <blkid_probe_get_size@plt+0x44314>
   4b640:	add	r2, pc, r2
   4b644:	add	r2, r2, #608	; 0x260
   4b648:	str	r2, [sp]
   4b64c:	ldr	r2, [pc, #476]	; 4b830 <blkid_probe_get_size@plt+0x44318>
   4b650:	ldr	r3, [pc, #476]	; 4b834 <blkid_probe_get_size@plt+0x4431c>
   4b654:	add	r2, pc, r2
   4b658:	add	r1, pc, r1
   4b65c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b660:	mvn	r0, #21
   4b664:	add	sp, sp, #12
   4b668:	pop	{r4, r5, pc}
   4b66c:	bl	2fc74 <blkid_probe_get_size@plt+0x2875c>
   4b670:	ldr	r2, [pc, #448]	; 4b838 <blkid_probe_get_size@plt+0x44320>
   4b674:	ldr	r1, [pc, #448]	; 4b83c <blkid_probe_get_size@plt+0x44324>
   4b678:	add	r2, pc, r2
   4b67c:	add	r2, r2, #608	; 0x260
   4b680:	str	r2, [sp]
   4b684:	ldr	r2, [pc, #436]	; 4b840 <blkid_probe_get_size@plt+0x44328>
   4b688:	mov	r0, #0
   4b68c:	ldr	r3, [pc, #432]	; 4b844 <blkid_probe_get_size@plt+0x4432c>
   4b690:	add	r2, pc, r2
   4b694:	add	r1, pc, r1
   4b698:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4b69c:	mvn	r0, #9
   4b6a0:	b	4b630 <blkid_probe_get_size@plt+0x44118>
   4b6a4:	ldrb	r3, [r4, #24]
   4b6a8:	bic	r3, r3, #224	; 0xe0
   4b6ac:	strb	r3, [r4, #24]
   4b6b0:	b	4b600 <blkid_probe_get_size@plt+0x440e8>
   4b6b4:	ldrb	r3, [r4, #24]
   4b6b8:	ldr	r2, [r4, #8]
   4b6bc:	bic	r3, r3, #224	; 0xe0
   4b6c0:	strb	r3, [r4, #24]
   4b6c4:	ldr	r0, [r2, #204]	; 0xcc
   4b6c8:	cmp	r0, #0
   4b6cc:	beq	4b7d4 <blkid_probe_get_size@plt+0x442bc>
   4b6d0:	sub	r0, r0, #1
   4b6d4:	str	r0, [r2, #204]	; 0xcc
   4b6d8:	add	r1, r4, #32
   4b6dc:	mov	r2, #17
   4b6e0:	ldr	r0, [r4, #8]
   4b6e4:	bl	2ffd4 <blkid_probe_get_size@plt+0x28abc>
   4b6e8:	b	4b600 <blkid_probe_get_size@plt+0x440e8>
   4b6ec:	ldrb	r3, [r4, #24]
   4b6f0:	ldr	r2, [r4, #216]	; 0xd8
   4b6f4:	add	r1, r4, #32
   4b6f8:	bic	r3, r3, #224	; 0xe0
   4b6fc:	strb	r3, [r4, #24]
   4b700:	ldr	r0, [r4, #8]
   4b704:	bl	2ffd4 <blkid_probe_get_size@plt+0x28abc>
   4b708:	b	4b600 <blkid_probe_get_size@plt+0x440e8>
   4b70c:	ldrb	r3, [r4, #24]
   4b710:	ldr	r0, [r4, #8]
   4b714:	bic	r3, r3, #224	; 0xe0
   4b718:	strb	r3, [r4, #24]
   4b71c:	bl	30390 <blkid_probe_get_size@plt+0x28e78>
   4b720:	subs	r5, r0, #0
   4b724:	beq	4b7ac <blkid_probe_get_size@plt+0x44294>
   4b728:	add	r2, r4, #104	; 0x68
   4b72c:	mov	r1, r4
   4b730:	ldr	r0, [r5, #8]
   4b734:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   4b738:	add	r2, r4, #108	; 0x6c
   4b73c:	mov	r1, r4
   4b740:	ldr	r0, [r5, #12]
   4b744:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   4b748:	ldrb	r3, [r5, #24]
   4b74c:	orr	r3, r3, #1
   4b750:	strb	r3, [r5, #24]
   4b754:	b	4b600 <blkid_probe_get_size@plt+0x440e8>
   4b758:	mov	r0, r4
   4b75c:	bl	30840 <blkid_probe_get_size@plt+0x29328>
   4b760:	ldrb	r3, [r4, #24]
   4b764:	bic	r3, r3, #224	; 0xe0
   4b768:	strb	r3, [r4, #24]
   4b76c:	b	4b600 <blkid_probe_get_size@plt+0x440e8>
   4b770:	ldr	r3, [r4, #8]
   4b774:	add	r2, r4, #40	; 0x28
   4b778:	mov	r1, r4
   4b77c:	ldr	r0, [r3, #12]
   4b780:	bl	3f68c <blkid_probe_get_size@plt+0x38174>
   4b784:	b	4b60c <blkid_probe_get_size@plt+0x440f4>
   4b788:	mov	r1, #0
   4b78c:	mov	r0, r4
   4b790:	bl	30430 <blkid_probe_get_size@plt+0x28f18>
   4b794:	cmp	r0, #0
   4b798:	blt	4b630 <blkid_probe_get_size@plt+0x44118>
   4b79c:	ldrb	r1, [r4, #24]
   4b7a0:	lsl	r1, r1, #27
   4b7a4:	asr	r1, r1, #27
   4b7a8:	b	4b5a0 <blkid_probe_get_size@plt+0x44088>
   4b7ac:	ldr	r2, [pc, #148]	; 4b848 <blkid_probe_get_size@plt+0x44330>
   4b7b0:	ldr	r1, [pc, #148]	; 4b84c <blkid_probe_get_size@plt+0x44334>
   4b7b4:	add	r2, pc, r2
   4b7b8:	add	r2, r2, #608	; 0x260
   4b7bc:	str	r2, [sp]
   4b7c0:	ldr	r2, [pc, #136]	; 4b850 <blkid_probe_get_size@plt+0x44338>
   4b7c4:	mov	r3, #2000	; 0x7d0
   4b7c8:	add	r2, pc, r2
   4b7cc:	add	r1, pc, r1
   4b7d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4b7d4:	ldr	r3, [pc, #120]	; 4b854 <blkid_probe_get_size@plt+0x4433c>
   4b7d8:	ldr	r2, [pc, #120]	; 4b858 <blkid_probe_get_size@plt+0x44340>
   4b7dc:	add	r3, pc, r3
   4b7e0:	ldr	r1, [pc, #116]	; 4b85c <blkid_probe_get_size@plt+0x44344>
   4b7e4:	add	r3, r3, #608	; 0x260
   4b7e8:	str	r3, [sp]
   4b7ec:	add	r2, pc, r2
   4b7f0:	ldr	r3, [pc, #104]	; 4b860 <blkid_probe_get_size@plt+0x44348>
   4b7f4:	add	r1, pc, r1
   4b7f8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4b7fc:	ldr	r2, [pc, #96]	; 4b864 <blkid_probe_get_size@plt+0x4434c>
   4b800:	ldr	r1, [pc, #96]	; 4b868 <blkid_probe_get_size@plt+0x44350>
   4b804:	add	r2, pc, r2
   4b808:	add	r2, r2, #608	; 0x260
   4b80c:	str	r2, [sp]
   4b810:	ldr	r2, [pc, #84]	; 4b86c <blkid_probe_get_size@plt+0x44354>
   4b814:	ldr	r3, [pc, #84]	; 4b870 <blkid_probe_get_size@plt+0x44358>
   4b818:	add	r2, pc, r2
   4b81c:	add	r1, pc, r1
   4b820:	mov	r0, #0
   4b824:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   4b828:	andeq	r5, r2, r0, lsl #1
   4b82c:	andeq	r4, r2, r0, lsr #26
   4b830:	andeq	r1, r2, r8, ror #28
   4b834:	andeq	r0, r0, fp, lsr #15
   4b838:	andeq	r5, r2, r8, asr #32
   4b83c:	andeq	r2, r2, r4, lsr #13
   4b840:	andeq	r1, r2, ip, lsr #28
   4b844:	andeq	r0, r0, sp, lsr #15
   4b848:	andeq	r4, r2, ip, lsl #30
   4b84c:	muleq	r1, ip, r8
   4b850:	strdeq	r1, [r2], -r4
   4b854:	andeq	r4, r2, r4, ror #29
   4b858:	ldrdeq	r1, [r2], -r0
   4b85c:	andeq	r2, r2, r4, lsl #13
   4b860:	andeq	r0, r0, r1, ror #15
   4b864:			; <UNDEFINED> instruction: 0x00024ebc
   4b868:	strdeq	r2, [r2], -r8
   4b86c:	andeq	r1, r2, r4, lsr #25
   4b870:	strdeq	r0, [r0], -r3
   4b874:	cmp	r0, #0
   4b878:	bxeq	lr
   4b87c:	ldr	r3, [r0, #4]
   4b880:	cmp	r3, #0
   4b884:	ldrne	r3, [r0, #12]
   4b888:	ldrne	r0, [r3]
   4b88c:	moveq	r0, r3
   4b890:	bx	lr
   4b894:	ldr	r3, [pc, #660]	; 4bb30 <blkid_probe_get_size@plt+0x44618>
   4b898:	ldr	r2, [pc, #660]	; 4bb34 <blkid_probe_get_size@plt+0x4461c>
   4b89c:	add	r3, pc, r3
   4b8a0:	push	{r4, r5, r6, r7, r8, fp, lr}
   4b8a4:	add	fp, sp, #24
   4b8a8:	sub	sp, sp, #180	; 0xb4
   4b8ac:	ldr	r5, [r3, r2]
   4b8b0:	sub	r4, fp, #160	; 0xa0
   4b8b4:	mov	r0, r4
   4b8b8:	ldr	ip, [r5]
   4b8bc:	mov	r2, #128	; 0x80
   4b8c0:	mov	r1, #0
   4b8c4:	str	ip, [fp, #-32]	; 0xffffffe0
   4b8c8:	bl	6c84 <memset@plt>
   4b8cc:	ldr	r0, [pc, #612]	; 4bb38 <blkid_probe_get_size@plt+0x44620>
   4b8d0:	mov	r2, #0
   4b8d4:	mov	r1, #1
   4b8d8:	sub	r3, fp, #196	; 0xc4
   4b8dc:	add	r0, pc, r0
   4b8e0:	str	r4, [fp, #-188]	; 0xffffff44
   4b8e4:	str	r2, [fp, #-172]	; 0xffffff54
   4b8e8:	str	r2, [fp, #-184]	; 0xffffff48
   4b8ec:	str	r2, [fp, #-168]	; 0xffffff58
   4b8f0:	str	r2, [fp, #-164]	; 0xffffff5c
   4b8f4:	str	r3, [fp, #-180]	; 0xffffff4c
   4b8f8:	str	r1, [fp, #-176]	; 0xffffff50
   4b8fc:	bl	7464 <getenv@plt>
   4b900:	subs	r4, r0, #0
   4b904:	beq	4b9b0 <blkid_probe_get_size@plt+0x44498>
   4b908:	bl	723c <strlen@plt>
   4b90c:	subs	r6, r0, #0
   4b910:	beq	4b9d8 <blkid_probe_get_size@plt+0x444c0>
   4b914:	ldrb	r3, [r4]
   4b918:	cmp	r3, #47	; 0x2f
   4b91c:	beq	4b928 <blkid_probe_get_size@plt+0x44410>
   4b920:	cmp	r3, #64	; 0x40
   4b924:	bne	4b9d8 <blkid_probe_get_size@plt+0x444c0>
   4b928:	ldrb	r3, [r4, #1]
   4b92c:	cmp	r3, #0
   4b930:	beq	4b9d8 <blkid_probe_get_size@plt+0x444c0>
   4b934:	add	r7, r6, #1
   4b938:	cmp	r7, #108	; 0x6c
   4b93c:	bhi	4b9d8 <blkid_probe_get_size@plt+0x444c0>
   4b940:	sub	r8, fp, #158	; 0x9e
   4b944:	mov	r0, r8
   4b948:	mov	r2, #108	; 0x6c
   4b94c:	mov	r1, #0
   4b950:	bl	6c84 <memset@plt>
   4b954:	mov	r3, #1
   4b958:	strh	r3, [fp, #-160]	; 0xffffff60
   4b95c:	ldrb	r3, [r4]
   4b960:	cmp	r3, #64	; 0x40
   4b964:	beq	4bab4 <blkid_probe_get_size@plt+0x4459c>
   4b968:	cmp	r3, #47	; 0x2f
   4b96c:	bne	4bad0 <blkid_probe_get_size@plt+0x445b8>
   4b970:	mov	r1, r4
   4b974:	mov	r2, r7
   4b978:	mov	r0, r8
   4b97c:	mov	r3, #126	; 0x7e
   4b980:	add	r4, r6, #3
   4b984:	bl	696c <__memcpy_chk@plt>
   4b988:	mov	r2, #0
   4b98c:	ldr	r1, [pc, #424]	; 4bb3c <blkid_probe_get_size@plt+0x44624>
   4b990:	mov	r0, #1
   4b994:	bl	6fd8 <socket@plt>
   4b998:	subs	r6, r0, #0
   4b99c:	bge	4b9e4 <blkid_probe_get_size@plt+0x444cc>
   4b9a0:	bl	732c <__errno_location@plt>
   4b9a4:	ldr	r4, [r0]
   4b9a8:	rsb	r4, r4, #0
   4b9ac:	b	4b9b4 <blkid_probe_get_size@plt+0x4449c>
   4b9b0:	mvn	r6, #0
   4b9b4:	mov	r0, r6
   4b9b8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4b9bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4b9c0:	ldr	r3, [r5]
   4b9c4:	mov	r0, r4
   4b9c8:	cmp	r2, r3
   4b9cc:	bne	4bb2c <blkid_probe_get_size@plt+0x44614>
   4b9d0:	sub	sp, fp, #24
   4b9d4:	pop	{r4, r5, r6, r7, r8, fp, pc}
   4b9d8:	mvn	r6, #0
   4b9dc:	mvn	r4, #21
   4b9e0:	b	4b9b4 <blkid_probe_get_size@plt+0x4449c>
   4b9e4:	bl	47098 <blkid_probe_get_size@plt+0x3fb80>
   4b9e8:	ldr	r3, [pc, #336]	; 4bb40 <blkid_probe_get_size@plt+0x44628>
   4b9ec:	mov	r2, #10
   4b9f0:	add	r3, pc, r3
   4b9f4:	str	r4, [fp, #-184]	; 0xffffff48
   4b9f8:	str	r3, [fp, #-196]	; 0xffffff3c
   4b9fc:	str	r2, [fp, #-192]	; 0xffffff40
   4ba00:	bl	7110 <getuid@plt>
   4ba04:	mov	r4, r0
   4ba08:	bl	7218 <geteuid@plt>
   4ba0c:	cmp	r4, r0
   4ba10:	beq	4bafc <blkid_probe_get_size@plt+0x445e4>
   4ba14:	sub	sp, sp, #32
   4ba18:	mov	r3, #0
   4ba1c:	mov	r2, #24
   4ba20:	mov	r1, #2
   4ba24:	add	r7, sp, #8
   4ba28:	mov	r4, #1
   4ba2c:	str	r1, [sp, #16]
   4ba30:	str	r3, [sp, #20]
   4ba34:	str	r3, [sp, #24]
   4ba38:	str	r3, [sp, #28]
   4ba3c:	str	r2, [sp, #8]
   4ba40:	str	r2, [fp, #-168]	; 0xffffff58
   4ba44:	str	r7, [fp, #-172]	; 0xffffff54
   4ba48:	str	r4, [sp, #12]
   4ba4c:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4ba50:	sub	r8, fp, #188	; 0xbc
   4ba54:	str	r0, [r7, #12]
   4ba58:	bl	7110 <getuid@plt>
   4ba5c:	str	r0, [r7, #16]
   4ba60:	bl	7224 <getgid@plt>
   4ba64:	mov	r1, r8
   4ba68:	mov	r2, #16384	; 0x4000
   4ba6c:	str	r0, [r7, #20]
   4ba70:	mov	r0, r6
   4ba74:	bl	73e0 <sendmsg@plt>
   4ba78:	cmp	r0, #0
   4ba7c:	bge	4b9b4 <blkid_probe_get_size@plt+0x4449c>
   4ba80:	ldr	r3, [fp, #-168]	; 0xffffff58
   4ba84:	mov	r1, r8
   4ba88:	sub	r3, r3, #24
   4ba8c:	cmp	r3, #0
   4ba90:	mov	r2, #16384	; 0x4000
   4ba94:	mov	r0, r6
   4ba98:	streq	r3, [fp, #-172]	; 0xffffff54
   4ba9c:	str	r3, [fp, #-168]	; 0xffffff58
   4baa0:	bl	73e0 <sendmsg@plt>
   4baa4:	cmp	r0, #0
   4baa8:	blt	4b9a0 <blkid_probe_get_size@plt+0x44488>
   4baac:	mov	r4, #1
   4bab0:	b	4b9b4 <blkid_probe_get_size@plt+0x4449c>
   4bab4:	add	r1, r4, #1
   4bab8:	mov	r3, #125	; 0x7d
   4babc:	mov	r2, r6
   4bac0:	sub	r0, fp, #157	; 0x9d
   4bac4:	add	r4, r6, #2
   4bac8:	bl	696c <__memcpy_chk@plt>
   4bacc:	b	4b988 <blkid_probe_get_size@plt+0x44470>
   4bad0:	ldr	r2, [pc, #108]	; 4bb44 <blkid_probe_get_size@plt+0x4462c>
   4bad4:	ldr	r1, [pc, #108]	; 4bb48 <blkid_probe_get_size@plt+0x44630>
   4bad8:	add	r2, pc, r2
   4badc:	add	r2, r2, #636	; 0x27c
   4bae0:	str	r2, [sp]
   4bae4:	ldr	r2, [pc, #96]	; 4bb4c <blkid_probe_get_size@plt+0x44634>
   4bae8:	ldr	r3, [pc, #96]	; 4bb50 <blkid_probe_get_size@plt+0x44638>
   4baec:	add	r2, pc, r2
   4baf0:	add	r1, pc, r1
   4baf4:	mov	r0, #0
   4baf8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4bafc:	bl	7224 <getgid@plt>
   4bb00:	mov	r4, r0
   4bb04:	bl	6ac8 <getegid@plt>
   4bb08:	cmp	r4, r0
   4bb0c:	bne	4ba14 <blkid_probe_get_size@plt+0x444fc>
   4bb10:	mov	r2, #16384	; 0x4000
   4bb14:	sub	r1, fp, #188	; 0xbc
   4bb18:	mov	r0, r6
   4bb1c:	bl	73e0 <sendmsg@plt>
   4bb20:	cmp	r0, #0
   4bb24:	bge	4baac <blkid_probe_get_size@plt+0x44594>
   4bb28:	b	4b9a0 <blkid_probe_get_size@plt+0x44488>
   4bb2c:	bl	6fb4 <__stack_chk_fail@plt>
   4bb30:	andeq	ip, r4, ip, asr #5
   4bb34:	andeq	r0, r0, ip, lsr r4
   4bb38:	andeq	r6, r2, r4, asr sl
   4bb3c:	andeq	r0, r8, r2
   4bb40:	andeq	r6, r2, ip, ror r9
   4bb44:	andeq	r4, r2, r8, ror #23
   4bb48:	andeq	r6, r2, ip, ror #16
   4bb4c:	andeq	r6, r2, r4, asr r8
   4bb50:	andeq	r0, r0, sp, lsr r5
   4bb54:	ldr	r3, [pc, #588]	; 4bda8 <blkid_probe_get_size@plt+0x44890>
   4bb58:	ldr	r2, [pc, #588]	; 4bdac <blkid_probe_get_size@plt+0x44894>
   4bb5c:	add	r3, pc, r3
   4bb60:	push	{r4, r5, r6, r7, r8, lr}
   4bb64:	sub	sp, sp, #144	; 0x90
   4bb68:	ldr	r5, [r3, r2]
   4bb6c:	subs	r4, r0, #0
   4bb70:	ldr	r3, [r5]
   4bb74:	str	r3, [sp, #140]	; 0x8c
   4bb78:	beq	4bcc8 <blkid_probe_get_size@plt+0x447b0>
   4bb7c:	cmp	r4, #1
   4bb80:	mov	r6, r1
   4bb84:	beq	4bc78 <blkid_probe_get_size@plt+0x44760>
   4bb88:	ldr	r3, [r4, #264]	; 0x108
   4bb8c:	cmp	r3, #5
   4bb90:	beq	4bd18 <blkid_probe_get_size@plt+0x44800>
   4bb94:	ldr	r7, [r4, #228]	; 0xe4
   4bb98:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4bb9c:	cmp	r7, r0
   4bba0:	bne	4bd4c <blkid_probe_get_size@plt+0x44834>
   4bba4:	add	r7, sp, #12
   4bba8:	mov	r2, r7
   4bbac:	mov	r1, #0
   4bbb0:	mov	r0, #2
   4bbb4:	bl	6cd8 <pthread_sigmask@plt>
   4bbb8:	cmp	r0, #0
   4bbbc:	rsbne	r4, r0, #0
   4bbc0:	beq	4bbe0 <blkid_probe_get_size@plt+0x446c8>
   4bbc4:	ldr	r2, [sp, #140]	; 0x8c
   4bbc8:	ldr	r3, [r5]
   4bbcc:	mov	r0, r4
   4bbd0:	cmp	r2, r3
   4bbd4:	bne	4bda4 <blkid_probe_get_size@plt+0x4488c>
   4bbd8:	add	sp, sp, #144	; 0x90
   4bbdc:	pop	{r4, r5, r6, r7, r8, pc}
   4bbe0:	mov	r0, r7
   4bbe4:	mov	r1, r6
   4bbe8:	bl	72b4 <sigismember@plt>
   4bbec:	cmp	r0, #0
   4bbf0:	beq	4bd9c <blkid_probe_get_size@plt+0x44884>
   4bbf4:	ldr	r3, [r4, #192]	; 0xc0
   4bbf8:	cmp	r3, #0
   4bbfc:	beq	4bcf8 <blkid_probe_get_size@plt+0x447e0>
   4bc00:	ldr	r3, [r3, r6, lsl #2]
   4bc04:	cmp	r3, #0
   4bc08:	bne	4bd9c <blkid_probe_get_size@plt+0x44884>
   4bc0c:	mov	r2, #6
   4bc10:	mov	r1, #1
   4bc14:	mov	r0, r4
   4bc18:	bl	31cc8 <blkid_probe_get_size@plt+0x2a7b0>
   4bc1c:	subs	r7, r0, #0
   4bc20:	beq	4bd10 <blkid_probe_get_size@plt+0x447f8>
   4bc24:	ldrb	r3, [r7, #24]
   4bc28:	ldr	r2, [pc, #384]	; 4bdb0 <blkid_probe_get_size@plt+0x44898>
   4bc2c:	mov	r8, #0
   4bc30:	bic	r3, r3, #192	; 0xc0
   4bc34:	add	r2, pc, r2
   4bc38:	orr	r3, r3, #32
   4bc3c:	str	r2, [r7, #80]	; 0x50
   4bc40:	str	r6, [r7, #216]	; 0xd8
   4bc44:	strb	r3, [r7, #24]
   4bc48:	str	r8, [r7, #12]
   4bc4c:	ldr	r3, [r4, #192]	; 0xc0
   4bc50:	mov	r0, r4
   4bc54:	add	r2, sp, #8
   4bc58:	str	r7, [r3, r6, lsl #2]
   4bc5c:	mov	r1, r6
   4bc60:	bl	300e8 <blkid_probe_get_size@plt+0x28bd0>
   4bc64:	subs	r4, r0, #0
   4bc68:	bge	4bd80 <blkid_probe_get_size@plt+0x44868>
   4bc6c:	mov	r0, r7
   4bc70:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   4bc74:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bc78:	ldr	r0, [pc, #308]	; 4bdb4 <blkid_probe_get_size@plt+0x4489c>
   4bc7c:	add	r0, pc, r0
   4bc80:	bl	74dc <__tls_get_addr@plt>
   4bc84:	ldr	r3, [pc, #300]	; 4bdb8 <blkid_probe_get_size@plt+0x448a0>
   4bc88:	ldr	r4, [r3, r0]
   4bc8c:	cmp	r4, #0
   4bc90:	bne	4bb88 <blkid_probe_get_size@plt+0x44670>
   4bc94:	ldr	r3, [pc, #288]	; 4bdbc <blkid_probe_get_size@plt+0x448a4>
   4bc98:	ldr	r2, [pc, #288]	; 4bdc0 <blkid_probe_get_size@plt+0x448a8>
   4bc9c:	add	r3, pc, r3
   4bca0:	ldr	r1, [pc, #284]	; 4bdc4 <blkid_probe_get_size@plt+0x448ac>
   4bca4:	add	r3, r3, #660	; 0x294
   4bca8:	mov	r0, r4
   4bcac:	str	r3, [sp]
   4bcb0:	add	r2, pc, r2
   4bcb4:	ldr	r3, [pc, #268]	; 4bdc8 <blkid_probe_get_size@plt+0x448b0>
   4bcb8:	add	r1, pc, r1
   4bcbc:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4bcc0:	mvn	r4, #64	; 0x40
   4bcc4:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bcc8:	ldr	r2, [pc, #252]	; 4bdcc <blkid_probe_get_size@plt+0x448b4>
   4bccc:	ldr	r1, [pc, #252]	; 4bdd0 <blkid_probe_get_size@plt+0x448b8>
   4bcd0:	add	r2, pc, r2
   4bcd4:	add	r2, r2, #660	; 0x294
   4bcd8:	str	r2, [sp]
   4bcdc:	ldr	r2, [pc, #240]	; 4bdd4 <blkid_probe_get_size@plt+0x448bc>
   4bce0:	ldr	r3, [pc, #240]	; 4bdd8 <blkid_probe_get_size@plt+0x448c0>
   4bce4:	add	r2, pc, r2
   4bce8:	add	r1, pc, r1
   4bcec:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4bcf0:	mvn	r4, #21
   4bcf4:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bcf8:	mov	r1, #4
   4bcfc:	mov	r0, #65	; 0x41
   4bd00:	bl	7164 <calloc@plt>
   4bd04:	cmp	r0, #0
   4bd08:	str	r0, [r4, #192]	; 0xc0
   4bd0c:	bne	4bc0c <blkid_probe_get_size@plt+0x446f4>
   4bd10:	mvn	r4, #11
   4bd14:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bd18:	ldr	r2, [pc, #188]	; 4bddc <blkid_probe_get_size@plt+0x448c4>
   4bd1c:	ldr	r1, [pc, #188]	; 4bde0 <blkid_probe_get_size@plt+0x448c8>
   4bd20:	add	r2, pc, r2
   4bd24:	add	r2, r2, #660	; 0x294
   4bd28:	str	r2, [sp]
   4bd2c:	ldr	r2, [pc, #176]	; 4bde4 <blkid_probe_get_size@plt+0x448cc>
   4bd30:	ldr	r3, [pc, #176]	; 4bde8 <blkid_probe_get_size@plt+0x448d0>
   4bd34:	add	r2, pc, r2
   4bd38:	add	r1, pc, r1
   4bd3c:	mov	r0, #0
   4bd40:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4bd44:	mvn	r4, #115	; 0x73
   4bd48:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bd4c:	ldr	r2, [pc, #152]	; 4bdec <blkid_probe_get_size@plt+0x448d4>
   4bd50:	ldr	r1, [pc, #152]	; 4bdf0 <blkid_probe_get_size@plt+0x448d8>
   4bd54:	add	r2, pc, r2
   4bd58:	add	r2, r2, #660	; 0x294
   4bd5c:	str	r2, [sp]
   4bd60:	ldr	r2, [pc, #140]	; 4bdf4 <blkid_probe_get_size@plt+0x448dc>
   4bd64:	ldr	r3, [pc, #140]	; 4bdf8 <blkid_probe_get_size@plt+0x448e0>
   4bd68:	add	r2, pc, r2
   4bd6c:	add	r1, pc, r1
   4bd70:	mov	r0, #0
   4bd74:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4bd78:	mvn	r4, #9
   4bd7c:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bd80:	mov	r0, r6
   4bd84:	bl	3e964 <blkid_probe_get_size@plt+0x3744c>
   4bd88:	mov	r4, r8
   4bd8c:	mov	r1, r0
   4bd90:	mov	r0, r7
   4bd94:	bl	2ff04 <blkid_probe_get_size@plt+0x289ec>
   4bd98:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bd9c:	mvn	r4, #15
   4bda0:	b	4bbc4 <blkid_probe_get_size@plt+0x446ac>
   4bda4:	bl	6fb4 <__stack_chk_fail@plt>
   4bda8:	andeq	ip, r4, ip
   4bdac:	andeq	r0, r0, ip, lsr r4
   4bdb0:			; <UNDEFINED> instruction: 0xfffe4214
   4bdb4:	andeq	ip, r4, ip, lsl r3
   4bdb8:	andeq	r0, r0, r4, asr r0
   4bdbc:	andeq	r4, r2, r4, lsr #20
   4bdc0:	andeq	r1, r2, ip, lsl #16
   4bdc4:	andeq	r2, r2, r0, lsr r0
   4bdc8:	andeq	r0, r0, pc, lsr #8
   4bdcc:	strdeq	r4, [r2], -r0
   4bdd0:	andeq	r8, r2, r8, lsl #19
   4bdd4:	ldrdeq	r1, [r2], -r8
   4bdd8:	andeq	r0, r0, lr, lsr #8
   4bddc:	andeq	r4, r2, r0, lsr #19
   4bde0:	andeq	r1, r2, r8, asr #31
   4bde4:	andeq	r1, r2, r8, lsl #15
   4bde8:	andeq	r0, r0, r1, lsr r4
   4bdec:	andeq	r4, r2, ip, ror #18
   4bdf0:			; <UNDEFINED> instruction: 0x00021fb4
   4bdf4:	andeq	r1, r2, r4, asr r7
   4bdf8:	andeq	r0, r0, r2, lsr r4
   4bdfc:	push	{r1, r2, r3}
   4be00:	ldr	r3, [pc, #208]	; 4bed8 <blkid_probe_get_size@plt+0x449c0>
   4be04:	ldr	r2, [pc, #208]	; 4bedc <blkid_probe_get_size@plt+0x449c4>
   4be08:	add	r3, pc, r3
   4be0c:	push	{r4, r5, r6, r7, lr}
   4be10:	sub	sp, sp, #136	; 0x88
   4be14:	ldr	r6, [r3, r2]
   4be18:	add	r7, sp, #4
   4be1c:	mov	r0, r7
   4be20:	ldr	r3, [r6]
   4be24:	str	r3, [sp, #132]	; 0x84
   4be28:	bl	73ec <sigemptyset@plt>
   4be2c:	cmp	r0, #0
   4be30:	blt	4bea4 <blkid_probe_get_size@plt+0x4498c>
   4be34:	mov	r5, #0
   4be38:	add	r4, sp, #160	; 0xa0
   4be3c:	str	r4, [sp]
   4be40:	ldr	r1, [r4], #4
   4be44:	cmp	r1, #0
   4be48:	blt	4be80 <blkid_probe_get_size@plt+0x44968>
   4be4c:	beq	4be40 <blkid_probe_get_size@plt+0x44928>
   4be50:	mov	r0, r7
   4be54:	bl	6d20 <sigaddset@plt>
   4be58:	mvn	r3, r5
   4be5c:	lsr	r3, r3, #31
   4be60:	ands	r3, r3, r0, lsr #31
   4be64:	beq	4be40 <blkid_probe_get_size@plt+0x44928>
   4be68:	bl	732c <__errno_location@plt>
   4be6c:	ldr	r1, [r4], #4
   4be70:	cmp	r1, #0
   4be74:	ldr	r5, [r0]
   4be78:	rsb	r5, r5, #0
   4be7c:	bge	4be4c <blkid_probe_get_size@plt+0x44934>
   4be80:	cmp	r5, #0
   4be84:	blt	4beb0 <blkid_probe_get_size@plt+0x44998>
   4be88:	mov	r1, r7
   4be8c:	mov	r2, #0
   4be90:	mov	r0, #1
   4be94:	bl	74b8 <sigprocmask@plt>
   4be98:	cmp	r0, #0
   4be9c:	movge	r5, #0
   4bea0:	bge	4beb0 <blkid_probe_get_size@plt+0x44998>
   4bea4:	bl	732c <__errno_location@plt>
   4bea8:	ldr	r5, [r0]
   4beac:	rsb	r5, r5, #0
   4beb0:	ldr	r2, [sp, #132]	; 0x84
   4beb4:	ldr	r3, [r6]
   4beb8:	mov	r0, r5
   4bebc:	cmp	r2, r3
   4bec0:	bne	4bed4 <blkid_probe_get_size@plt+0x449bc>
   4bec4:	add	sp, sp, #136	; 0x88
   4bec8:	pop	{r4, r5, r6, r7, lr}
   4becc:	add	sp, sp, #12
   4bed0:	bx	lr
   4bed4:	bl	6fb4 <__stack_chk_fail@plt>
   4bed8:	andeq	fp, r4, r0, ror #26
   4bedc:	andeq	r0, r0, ip, lsr r4
   4bee0:	push	{r4, r5, lr}
   4bee4:	subs	r5, r0, #0
   4bee8:	sub	sp, sp, #12
   4beec:	beq	4bf6c <blkid_probe_get_size@plt+0x44a54>
   4bef0:	mov	r4, r1
   4bef4:	bl	39944 <blkid_probe_get_size@plt+0x3242c>
   4bef8:	cmp	r0, #0
   4befc:	beq	4bf38 <blkid_probe_get_size@plt+0x44a20>
   4bf00:	cmp	r4, #0
   4bf04:	beq	4bf58 <blkid_probe_get_size@plt+0x44a40>
   4bf08:	mov	r0, r4
   4bf0c:	bl	723c <strlen@plt>
   4bf10:	ldr	r1, [pc, #124]	; 4bf94 <blkid_probe_get_size@plt+0x44a7c>
   4bf14:	mov	r3, #0
   4bf18:	str	r3, [sp]
   4bf1c:	mov	r2, r4
   4bf20:	add	r1, pc, r1
   4bf24:	mov	r3, r0
   4bf28:	mov	r0, r5
   4bf2c:	bl	6dbc <lsetxattr@plt>
   4bf30:	cmp	r0, #0
   4bf34:	blt	4bf44 <blkid_probe_get_size@plt+0x44a2c>
   4bf38:	mov	r0, #0
   4bf3c:	add	sp, sp, #12
   4bf40:	pop	{r4, r5, pc}
   4bf44:	bl	732c <__errno_location@plt>
   4bf48:	ldr	r0, [r0]
   4bf4c:	rsb	r0, r0, #0
   4bf50:	add	sp, sp, #12
   4bf54:	pop	{r4, r5, pc}
   4bf58:	ldr	r1, [pc, #56]	; 4bf98 <blkid_probe_get_size@plt+0x44a80>
   4bf5c:	mov	r0, r5
   4bf60:	add	r1, pc, r1
   4bf64:	bl	6b28 <lremovexattr@plt>
   4bf68:	b	4bf30 <blkid_probe_get_size@plt+0x44a18>
   4bf6c:	ldr	r2, [pc, #40]	; 4bf9c <blkid_probe_get_size@plt+0x44a84>
   4bf70:	ldr	r1, [pc, #40]	; 4bfa0 <blkid_probe_get_size@plt+0x44a88>
   4bf74:	add	r2, pc, r2
   4bf78:	add	r2, r2, #680	; 0x2a8
   4bf7c:	str	r2, [sp]
   4bf80:	ldr	r2, [pc, #28]	; 4bfa4 <blkid_probe_get_size@plt+0x44a8c>
   4bf84:	mov	r3, #73	; 0x49
   4bf88:	add	r2, pc, r2
   4bf8c:	add	r1, pc, r1
   4bf90:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4bf94:	ldrdeq	r3, [r2], -r4
   4bf98:	muleq	r2, r4, lr
   4bf9c:	andeq	r4, r2, ip, asr #14
   4bfa0:	andeq	pc, r1, r8, lsl #7
   4bfa4:	andeq	r3, r2, ip, lsr #28
   4bfa8:	ldr	r3, [pc, #1232]	; 4c480 <blkid_probe_get_size@plt+0x44f68>
   4bfac:	ldr	r2, [pc, #1232]	; 4c484 <blkid_probe_get_size@plt+0x44f6c>
   4bfb0:	add	r3, pc, r3
   4bfb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4bfb8:	sub	sp, sp, #132	; 0x84
   4bfbc:	ldr	r2, [r3, r2]
   4bfc0:	subs	sl, r0, #0
   4bfc4:	str	r2, [sp, #24]
   4bfc8:	ldr	r3, [r2]
   4bfcc:	str	r3, [sp, #124]	; 0x7c
   4bfd0:	beq	4c5e0 <blkid_probe_get_size@plt+0x450c8>
   4bfd4:	ldr	r5, [sl, #92]	; 0x5c
   4bfd8:	mov	r4, r1
   4bfdc:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4bfe0:	cmp	r5, r0
   4bfe4:	bne	4c610 <blkid_probe_get_size@plt+0x450f8>
   4bfe8:	cmp	r4, #0
   4bfec:	beq	4c644 <blkid_probe_get_size@plt+0x4512c>
   4bff0:	ldr	r5, [sl, #92]	; 0x5c
   4bff4:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4bff8:	cmp	r5, r0
   4bffc:	bne	4c1b8 <blkid_probe_get_size@plt+0x44ca0>
   4c000:	ldrb	r0, [r4, #532]	; 0x214
   4c004:	ands	r5, r0, #1
   4c008:	bne	4c6fc <blkid_probe_get_size@plt+0x451e4>
   4c00c:	ldr	r6, [sl, #92]	; 0x5c
   4c010:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4c014:	cmp	r6, r0
   4c018:	bne	4c730 <blkid_probe_get_size@plt+0x45218>
   4c01c:	ldr	r0, [r4, #12]
   4c020:	cmp	r0, #0
   4c024:	beq	4c75c <blkid_probe_get_size@plt+0x45244>
   4c028:	ldr	r3, [sl, #72]	; 0x48
   4c02c:	mov	r0, r4
   4c030:	cmp	r3, #0
   4c034:	addne	r2, r3, #1
   4c038:	moveq	r2, #2
   4c03c:	str	r2, [sl, #72]	; 0x48
   4c040:	ldr	r2, [r4, #12]
   4c044:	moveq	r3, #1
   4c048:	str	r3, [r2, #8]
   4c04c:	bl	2f568 <blkid_probe_get_size@plt+0x28050>
   4c050:	ldr	r1, [r4, #12]
   4c054:	mov	r3, #0
   4c058:	mov	ip, #16
   4c05c:	cmp	r1, #0
   4c060:	str	r3, [sp, #114]	; 0x72
   4c064:	str	r3, [sp, #110]	; 0x6e
   4c068:	str	r3, [sp, #118]	; 0x76
   4c06c:	strh	r3, [sp, #122]	; 0x7a
   4c070:	strh	ip, [sp, #108]	; 0x6c
   4c074:	beq	4c7b0 <blkid_probe_get_size@plt+0x45298>
   4c078:	add	lr, sp, #108	; 0x6c
   4c07c:	ldr	r0, [sl, #4]
   4c080:	ldr	r2, [r1]
   4c084:	str	ip, [sp, #4]
   4c088:	str	lr, [sp]
   4c08c:	str	lr, [sp, #32]
   4c090:	bl	6be8 <sendto@plt>
   4c094:	cmp	r0, #0
   4c098:	blt	4c1a0 <blkid_probe_get_size@plt+0x44c88>
   4c09c:	mov	r0, r4
   4c0a0:	bl	2f608 <blkid_probe_get_size@plt+0x280f0>
   4c0a4:	mov	fp, r0
   4c0a8:	mov	r0, #1
   4c0ac:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   4c0b0:	add	r3, pc, #952	; 0x3b8
   4c0b4:	ldrd	r2, [r3]
   4c0b8:	ldr	lr, [pc, #968]	; 4c488 <blkid_probe_get_size@plt+0x44f70>
   4c0bc:	ldr	ip, [pc, #968]	; 4c48c <blkid_probe_get_size@plt+0x44f74>
   4c0c0:	add	lr, pc, lr
   4c0c4:	add	ip, pc, ip
   4c0c8:	add	lr, lr, #896	; 0x380
   4c0cc:	add	ip, ip, #680	; 0x2a8
   4c0d0:	str	lr, [sp, #40]	; 0x28
   4c0d4:	str	ip, [sp, #28]
   4c0d8:	adds	r4, r0, r2
   4c0dc:	adc	r5, r1, r3
   4c0e0:	strd	r4, [sp, #16]
   4c0e4:	ldr	r5, [sl, #40]	; 0x28
   4c0e8:	cmp	r5, #0
   4c0ec:	beq	4c1ec <blkid_probe_get_size@plt+0x44cd4>
   4c0f0:	ldr	r7, [sl, #36]	; 0x24
   4c0f4:	mov	r9, #0
   4c0f8:	mov	r8, r7
   4c0fc:	b	4c10c <blkid_probe_get_size@plt+0x44bf4>
   4c100:	cmp	r1, r5
   4c104:	mov	r9, r1
   4c108:	beq	4c1ec <blkid_probe_get_size@plt+0x44cd4>
   4c10c:	mov	r6, r8
   4c110:	ldr	r4, [r8], #4
   4c114:	mov	r0, r4
   4c118:	bl	2f608 <blkid_probe_get_size@plt+0x280f0>
   4c11c:	add	r1, r9, #1
   4c120:	cmp	r0, fp
   4c124:	bne	4c100 <blkid_probe_get_size@plt+0x44be8>
   4c128:	sub	r2, r5, #-1073741823	; 0xc0000001
   4c12c:	sub	r2, r2, r9
   4c130:	add	r1, r7, r1, lsl #2
   4c134:	lsl	r2, r2, #2
   4c138:	mov	r0, r6
   4c13c:	bl	6e04 <memmove@plt>
   4c140:	ldr	r3, [sl, #40]	; 0x28
   4c144:	cmp	r4, #0
   4c148:	sub	r3, r3, #1
   4c14c:	str	r3, [sl, #40]	; 0x28
   4c150:	beq	4c7dc <blkid_probe_get_size@plt+0x452c4>
   4c154:	ldr	r0, [r4, #12]
   4c158:	cmp	r0, #0
   4c15c:	beq	4c838 <blkid_probe_get_size@plt+0x45320>
   4c160:	ldrh	r3, [r0, #4]
   4c164:	cmp	r3, #2
   4c168:	bne	4c678 <blkid_probe_get_size@plt+0x45160>
   4c16c:	ldr	r9, [r0, #16]
   4c170:	cmp	r9, #0
   4c174:	movge	r9, #1
   4c178:	mov	r0, r4
   4c17c:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4c180:	ldr	r3, [sp, #24]
   4c184:	ldr	r2, [sp, #124]	; 0x7c
   4c188:	mov	r0, r9
   4c18c:	ldr	r3, [r3]
   4c190:	cmp	r2, r3
   4c194:	bne	4cfd4 <blkid_probe_get_size@plt+0x45abc>
   4c198:	add	sp, sp, #132	; 0x84
   4c19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4c1a0:	bl	732c <__errno_location@plt>
   4c1a4:	ldr	r9, [r0]
   4c1a8:	cmp	r9, #0
   4c1ac:	rsb	r9, r9, #0
   4c1b0:	bgt	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c1b4:	b	4c09c <blkid_probe_get_size@plt+0x44b84>
   4c1b8:	ldr	r2, [pc, #720]	; 4c490 <blkid_probe_get_size@plt+0x44f78>
   4c1bc:	ldr	r1, [pc, #720]	; 4c494 <blkid_probe_get_size@plt+0x44f7c>
   4c1c0:	add	r2, pc, r2
   4c1c4:	add	r2, r2, #712	; 0x2c8
   4c1c8:	str	r2, [sp]
   4c1cc:	ldr	r2, [pc, #708]	; 4c498 <blkid_probe_get_size@plt+0x44f80>
   4c1d0:	mov	r3, #208	; 0xd0
   4c1d4:	add	r2, pc, r2
   4c1d8:	add	r1, pc, r1
   4c1dc:	mov	r0, #0
   4c1e0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c1e4:	mvn	r9, #9
   4c1e8:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c1ec:	ldr	r0, [sl, #60]	; 0x3c
   4c1f0:	add	r8, sp, #100	; 0x64
   4c1f4:	mov	r3, #0
   4c1f8:	cmp	r0, #0
   4c1fc:	str	r3, [r8, #4]
   4c200:	str	r3, [sp, #100]	; 0x64
   4c204:	str	r3, [sp, #80]	; 0x50
   4c208:	beq	4c810 <blkid_probe_get_size@plt+0x452f8>
   4c20c:	ldr	r2, [sl, #64]	; 0x40
   4c210:	cmp	r2, #15
   4c214:	bls	4c868 <blkid_probe_get_size@plt+0x45350>
   4c218:	ldr	r3, [sl, #24]
   4c21c:	cmp	r3, #16
   4c220:	beq	4c688 <blkid_probe_get_size@plt+0x45170>
   4c224:	ldr	r3, [pc, #624]	; 4c49c <blkid_probe_get_size@plt+0x44f84>
   4c228:	add	r3, pc, r3
   4c22c:	add	r3, r3, #680	; 0x2a8
   4c230:	str	r3, [sp, #36]	; 0x24
   4c234:	mov	r2, #0
   4c238:	mov	r3, #1
   4c23c:	mov	r1, r8
   4c240:	ldr	r0, [sl, #4]
   4c244:	bl	2f248 <blkid_probe_get_size@plt+0x27d30>
   4c248:	subs	r2, r0, #0
   4c24c:	ble	4c364 <blkid_probe_get_size@plt+0x44e4c>
   4c250:	mov	r3, #1
   4c254:	add	r1, sl, #64	; 0x40
   4c258:	add	r0, sl, #60	; 0x3c
   4c25c:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4c260:	cmp	r0, #0
   4c264:	beq	4cf98 <blkid_probe_get_size@plt+0x45a80>
   4c268:	ldr	r0, [sl, #64]	; 0x40
   4c26c:	ldr	ip, [sl, #60]	; 0x3c
   4c270:	add	r2, sp, #80	; 0x50
   4c274:	str	r0, [sp, #104]	; 0x68
   4c278:	mov	r3, #0
   4c27c:	mov	r1, r8
   4c280:	ldr	r0, [sl, #4]
   4c284:	str	ip, [sp, #100]	; 0x64
   4c288:	bl	2f248 <blkid_probe_get_size@plt+0x27d30>
   4c28c:	subs	r2, r0, #0
   4c290:	ble	4c364 <blkid_probe_get_size@plt+0x44e4c>
   4c294:	ldr	r3, [sl, #64]	; 0x40
   4c298:	mov	r5, r2
   4c29c:	cmp	r2, r3
   4c2a0:	bhi	4cfc8 <blkid_probe_get_size@plt+0x45ab0>
   4c2a4:	cmp	r2, #15
   4c2a8:	bls	4c784 <blkid_probe_get_size@plt+0x4526c>
   4c2ac:	ldr	r4, [sl, #60]	; 0x3c
   4c2b0:	ldr	r3, [r4]
   4c2b4:	cmp	r2, r3
   4c2b8:	cmpcs	r3, #15
   4c2bc:	movhi	r3, #1
   4c2c0:	movls	r3, #0
   4c2c4:	bhi	4c994 <blkid_probe_get_size@plt+0x4547c>
   4c2c8:	ldr	r2, [pc, #464]	; 4c4a0 <blkid_probe_get_size@plt+0x44f88>
   4c2cc:	add	r2, pc, r2
   4c2d0:	ldr	r2, [r2, #20]
   4c2d4:	cmp	r2, #6
   4c2d8:	ble	4c36c <blkid_probe_get_size@plt+0x44e54>
   4c2dc:	mov	r7, r3
   4c2e0:	str	r3, [sp, #48]	; 0x30
   4c2e4:	str	r3, [sp, #44]	; 0x2c
   4c2e8:	str	r3, [sp, #52]	; 0x34
   4c2ec:	ldr	r2, [pc, #432]	; 4c4a4 <blkid_probe_get_size@plt+0x44f8c>
   4c2f0:	ldr	r3, [pc, #432]	; 4c4a8 <blkid_probe_get_size@plt+0x44f90>
   4c2f4:	add	r2, pc, r2
   4c2f8:	add	r3, pc, r3
   4c2fc:	str	r2, [sp, #4]
   4c300:	ldr	r2, [pc, #420]	; 4c4ac <blkid_probe_get_size@plt+0x44f94>
   4c304:	add	r3, r3, #824	; 0x338
   4c308:	str	r3, [sp]
   4c30c:	str	r5, [sp, #8]
   4c310:	ldr	r3, [pc, #408]	; 4c4b0 <blkid_probe_get_size@plt+0x44f98>
   4c314:	add	r2, pc, r2
   4c318:	mov	r1, #0
   4c31c:	mov	r0, #7
   4c320:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4c324:	ldr	r3, [sp, #44]	; 0x2c
   4c328:	cmp	r3, #0
   4c32c:	beq	4c36c <blkid_probe_get_size@plt+0x44e54>
   4c330:	ldr	r3, [sp, #48]	; 0x30
   4c334:	eor	r3, r3, #1
   4c338:	orrs	r3, r7, r3
   4c33c:	bne	4c8c8 <blkid_probe_get_size@plt+0x453b0>
   4c340:	ldr	r2, [sl, #52]	; 0x34
   4c344:	ldr	r1, [sp, #52]	; 0x34
   4c348:	cmp	r2, r1
   4c34c:	bls	4ce90 <blkid_probe_get_size@plt+0x45978>
   4c350:	ldr	r3, [sl, #48]	; 0x30
   4c354:	mov	r2, r1
   4c358:	ldr	r1, [sp, #44]	; 0x2c
   4c35c:	str	r1, [r3, r2, lsl #2]
   4c360:	b	4c36c <blkid_probe_get_size@plt+0x44e54>
   4c364:	cmp	r2, #0
   4c368:	bne	4c8a8 <blkid_probe_get_size@plt+0x45390>
   4c36c:	ldrd	r4, [sp, #16]
   4c370:	orrs	r3, r4, r5
   4c374:	beq	4c69c <blkid_probe_get_size@plt+0x45184>
   4c378:	mov	r0, #1
   4c37c:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   4c380:	cmp	r1, r5
   4c384:	cmpeq	r0, r4
   4c388:	bcs	4c464 <blkid_probe_get_size@plt+0x44f4c>
   4c38c:	ldrd	r4, [sp, #16]
   4c390:	ldr	r2, [sp, #32]
   4c394:	mov	r3, #0
   4c398:	subs	r4, r4, r0
   4c39c:	sbc	r5, r5, r1
   4c3a0:	ldr	r6, [sl, #92]	; 0x5c
   4c3a4:	str	r3, [r2]
   4c3a8:	str	r3, [r2, #4]
   4c3ac:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4c3b0:	cmp	r6, r0
   4c3b4:	bne	4c6bc <blkid_probe_get_size@plt+0x451a4>
   4c3b8:	mvn	r3, #0
   4c3bc:	mvn	r2, #0
   4c3c0:	cmp	r5, r3
   4c3c4:	cmpeq	r4, r2
   4c3c8:	beq	4c8b0 <blkid_probe_get_size@plt+0x45398>
   4c3cc:	add	r1, pc, #164	; 0xa4
   4c3d0:	ldrd	r0, [r1]
   4c3d4:	ldr	r2, [sl, #4]
   4c3d8:	mov	r3, #1
   4c3dc:	cmp	r5, r1
   4c3e0:	cmpeq	r4, r0
   4c3e4:	str	r2, [sp, #108]	; 0x6c
   4c3e8:	mvnhi	r2, #0
   4c3ec:	strh	r3, [sp, #112]	; 0x70
   4c3f0:	strhi	r2, [sp, #100]	; 0x64
   4c3f4:	strhi	r2, [sp, #104]	; 0x68
   4c3f8:	bhi	4c438 <blkid_probe_get_size@plt+0x44f20>
   4c3fc:	ldr	r2, [pc, #176]	; 4c4b4 <blkid_probe_get_size@plt+0x44f9c>
   4c400:	mov	r3, #0
   4c404:	mov	r0, r4
   4c408:	mov	r1, r5
   4c40c:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4c410:	ldr	r2, [pc, #156]	; 4c4b4 <blkid_probe_get_size@plt+0x44f9c>
   4c414:	mov	r3, #0
   4c418:	mov	r1, r5
   4c41c:	str	r0, [sp, #100]	; 0x64
   4c420:	mov	r0, r4
   4c424:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   4c428:	rsb	r1, r2, r2, lsl #5
   4c42c:	add	r2, r2, r1, lsl #2
   4c430:	lsl	r2, r2, #3
   4c434:	str	r2, [sp, #104]	; 0x68
   4c438:	mov	r2, r8
   4c43c:	mov	r3, #0
   4c440:	mov	r1, #1
   4c444:	ldr	r0, [sp, #32]
   4c448:	bl	68c4 <ppoll@plt>
   4c44c:	cmp	r0, #0
   4c450:	blt	4c894 <blkid_probe_get_size@plt+0x4537c>
   4c454:	movgt	r2, #1
   4c458:	movle	r2, #0
   4c45c:	cmp	r2, #0
   4c460:	bne	4c0e4 <blkid_probe_get_size@plt+0x44bcc>
   4c464:	mvn	r9, #109	; 0x6d
   4c468:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c46c:	nop			; (mov r0, r0)
   4c470:	cmneq	sp, r0, asr #16
   4c474:	andeq	r0, r0, r0
   4c478:			; <UNDEFINED> instruction: 0xfff0bdbf
   4c47c:	andeq	sl, r7, pc, lsl r1
   4c480:			; <UNDEFINED> instruction: 0x0004bbb8
   4c484:	andeq	r0, r0, ip, lsr r4
   4c488:	andeq	r4, r2, r0, lsl #12
   4c48c:	ldrdeq	sp, [r3], -ip
   4c490:	andeq	r4, r2, r0, lsl #10
   4c494:			; <UNDEFINED> instruction: 0x000261b8
   4c498:	andeq	r2, r2, r0, asr r2
   4c49c:	andeq	sp, r3, r8, ror lr
   4c4a0:	andeq	fp, r4, ip, asr lr
   4c4a4:			; <UNDEFINED> instruction: 0x000261b4
   4c4a8:	andeq	r4, r2, r8, asr #7
   4c4ac:	andeq	r1, r2, r8, lsl #5
   4c4b0:	andeq	r0, r0, r6, lsr #3
   4c4b4:	andeq	r4, pc, r0, asr #4
   4c4b8:	ldrdeq	r4, [r2], -r8
   4c4bc:	andeq	r1, r2, r0, asr lr
   4c4c0:	andeq	r1, r2, r8, lsr #28
   4c4c4:	andeq	r0, r0, r5, asr r2
   4c4c8:	andeq	r4, r2, r8, lsr #1
   4c4cc:	andeq	r5, r2, r8, asr #26
   4c4d0:	strdeq	r1, [r2], -r8
   4c4d4:	andeq	r0, r0, r6, asr r2
   4c4d8:	andeq	r4, r2, r4, ror r0
   4c4dc:	andeq	r1, r2, r0, asr #27
   4c4e0:	andeq	r5, r2, r4, asr sp
   4c4e4:	andeq	r0, r0, r7, asr r2
   4c4e8:	andeq	sp, r3, r4, lsl sl
   4c4ec:	strdeq	r3, [r2], -ip
   4c4f0:	muleq	r2, ip, ip
   4c4f4:	andeq	r1, r2, ip, asr #26
   4c4f8:	andeq	r0, r0, r3, lsr #5
   4c4fc:			; <UNDEFINED> instruction: 0x00023fbc
   4c500:	andeq	r5, r2, ip, lsl #25
   4c504:	andeq	r1, r2, ip, lsl #26
   4c508:	andeq	r3, r2, r8, lsl #31
   4c50c:	ldrdeq	r1, [r2], -r4
   4c510:	andeq	r5, r2, r4, lsr #24
   4c514:	andeq	r3, r2, ip, asr pc
   4c518:			; <UNDEFINED> instruction: 0x00021cb0
   4c51c:	andeq	r1, r2, r8, lsl r5
   4c520:	andeq	fp, r4, ip, lsl #19
   4c524:	andeq	r3, r2, r8, lsl #30
   4c528:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   4c52c:	andeq	r1, r2, r0, asr #9
   4c530:	ldrdeq	r3, [r2], -ip
   4c534:	andeq	r1, r2, ip, asr r4
   4c538:	strdeq	r7, [r2], -r0
   4c53c:	andeq	r0, r0, r7, asr #7
   4c540:	andeq	r3, r2, r8, lsr #29
   4c544:	andeq	r0, r2, r4, ror sp
   4c548:	muleq	r2, r4, fp
   4c54c:	andeq	r3, r2, r0, lsl #29
   4c550:	andeq	r1, r2, r8, lsl #8
   4c554:	andeq	r1, r2, ip, lsr r4
   4c558:	andeq	r3, r2, r0, asr lr
   4c55c:	andeq	r5, r2, r8, asr #22
   4c560:	andeq	r0, r2, r8, lsl sp
   4c564:	andeq	r0, r0, r1, asr #2
   4c568:	andeq	fp, r4, r0, asr r8
   4c56c:	strdeq	r5, [r2], -r0
   4c570:	andeq	r3, r2, r8, asr #27
   4c574:	andeq	r1, r2, r4, lsl fp
   4c578:	andeq	fp, r4, r0, ror #12
   4c57c:	andeq	fp, r4, r0, lsr r6
   4c580:	strdeq	r5, [r2], -r4
   4c584:	andeq	r3, r2, r4, lsr #23
   4c588:	andeq	r0, r2, r8, ror #20
   4c58c:	andeq	r0, r0, r5, lsl #3
   4c590:	andeq	sp, r3, ip, asr r4
   4c594:	andeq	r5, r2, r0, ror #15
   4c598:	andeq	r3, r2, ip, asr sl
   4c59c:	andeq	r0, r2, r8, lsr #18
   4c5a0:	andeq	fp, r4, r8, ror r3
   4c5a4:	andeq	r5, r2, r8, lsr #13
   4c5a8:	andeq	r0, r2, ip, ror lr
   4c5ac:	andeq	fp, r4, ip, lsl #5
   4c5b0:	andeq	r5, r2, r8, asr r6
   4c5b4:	andeq	r3, r2, r4, lsl #16
   4c5b8:	andeq	r1, r2, r0, asr r5
   4c5bc:	andmi	r0, r0, r9, rrx
   4c5c0:	andeq	r3, r2, r8, lsl r7
   4c5c4:	andeq	r0, r2, r0, lsr #25
   4c5c8:	ldrdeq	r0, [r2], -r4
   4c5cc:	andeq	r0, r0, fp, ror #7
   4c5d0:	andeq	r3, r2, r4, lsr #13
   4c5d4:	andeq	r0, r2, r0, lsr fp
   4c5d8:	andeq	r0, r2, r8, asr fp
   4c5dc:	andeq	r0, r0, r1, asr r3
   4c5e0:	ldr	r2, [pc, #-304]	; 4c4b8 <blkid_probe_get_size@plt+0x44fa0>
   4c5e4:	ldr	r1, [pc, #-304]	; 4c4bc <blkid_probe_get_size@plt+0x44fa4>
   4c5e8:	add	r2, pc, r2
   4c5ec:	add	r2, r2, #696	; 0x2b8
   4c5f0:	str	r2, [sp]
   4c5f4:	ldr	r2, [pc, #-316]	; 4c4c0 <blkid_probe_get_size@plt+0x44fa8>
   4c5f8:	ldr	r3, [pc, #-316]	; 4c4c4 <blkid_probe_get_size@plt+0x44fac>
   4c5fc:	add	r2, pc, r2
   4c600:	add	r1, pc, r1
   4c604:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c608:	mvn	r9, #21
   4c60c:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c610:	ldr	r2, [pc, #-336]	; 4c4c8 <blkid_probe_get_size@plt+0x44fb0>
   4c614:	ldr	r1, [pc, #-336]	; 4c4cc <blkid_probe_get_size@plt+0x44fb4>
   4c618:	add	r2, pc, r2
   4c61c:	add	r2, r2, #696	; 0x2b8
   4c620:	str	r2, [sp]
   4c624:	ldr	r2, [pc, #-348]	; 4c4d0 <blkid_probe_get_size@plt+0x44fb8>
   4c628:	ldr	r3, [pc, #-348]	; 4c4d4 <blkid_probe_get_size@plt+0x44fbc>
   4c62c:	add	r2, pc, r2
   4c630:	add	r1, pc, r1
   4c634:	mov	r0, #0
   4c638:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c63c:	mvn	r9, #9
   4c640:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c644:	ldr	r3, [pc, #-372]	; 4c4d8 <blkid_probe_get_size@plt+0x44fc0>
   4c648:	ldr	r2, [pc, #-372]	; 4c4dc <blkid_probe_get_size@plt+0x44fc4>
   4c64c:	add	r3, pc, r3
   4c650:	ldr	r1, [pc, #-376]	; 4c4e0 <blkid_probe_get_size@plt+0x44fc8>
   4c654:	add	r3, r3, #696	; 0x2b8
   4c658:	str	r3, [sp]
   4c65c:	mov	r0, r4
   4c660:	ldr	r3, [pc, #-388]	; 4c4e4 <blkid_probe_get_size@plt+0x44fcc>
   4c664:	add	r2, pc, r2
   4c668:	add	r1, pc, r1
   4c66c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c670:	mvn	r9, #21
   4c674:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c678:	cmp	r3, #3
   4c67c:	beq	4c6f0 <blkid_probe_get_size@plt+0x451d8>
   4c680:	mov	r9, #1
   4c684:	b	4c178 <blkid_probe_get_size@plt+0x44c60>
   4c688:	ldr	r3, [pc, #-424]	; 4c4e8 <blkid_probe_get_size@plt+0x44fd0>
   4c68c:	add	r3, pc, r3
   4c690:	add	r3, r3, #672	; 0x2a0
   4c694:	str	r3, [sp, #36]	; 0x24
   4c698:	b	4c234 <blkid_probe_get_size@plt+0x44d1c>
   4c69c:	ldr	r2, [sp, #32]
   4c6a0:	mov	r3, #0
   4c6a4:	ldr	r4, [sl, #92]	; 0x5c
   4c6a8:	str	r3, [r2]
   4c6ac:	str	r3, [r2, #4]
   4c6b0:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4c6b4:	cmp	r0, r4
   4c6b8:	beq	4c8b0 <blkid_probe_get_size@plt+0x45398>
   4c6bc:	ldr	r2, [pc, #-472]	; 4c4ec <blkid_probe_get_size@plt+0x44fd4>
   4c6c0:	ldr	r1, [pc, #-472]	; 4c4f0 <blkid_probe_get_size@plt+0x44fd8>
   4c6c4:	add	r2, pc, r2
   4c6c8:	add	r2, r2, #976	; 0x3d0
   4c6cc:	str	r2, [sp]
   4c6d0:	ldr	r2, [pc, #-484]	; 4c4f4 <blkid_probe_get_size@plt+0x44fdc>
   4c6d4:	ldr	r3, [pc, #-484]	; 4c4f8 <blkid_probe_get_size@plt+0x44fe0>
   4c6d8:	add	r2, pc, r2
   4c6dc:	add	r1, pc, r1
   4c6e0:	mov	r0, #0
   4c6e4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c6e8:	mvn	r9, #9
   4c6ec:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c6f0:	mov	r3, #0
   4c6f4:	str	r3, [r3]
   4c6f8:	udf	#0
   4c6fc:	ldr	r2, [pc, #-520]	; 4c4fc <blkid_probe_get_size@plt+0x44fe4>
   4c700:	ldr	r1, [pc, #-520]	; 4c500 <blkid_probe_get_size@plt+0x44fe8>
   4c704:	add	r2, pc, r2
   4c708:	add	r2, r2, #712	; 0x2c8
   4c70c:	str	r2, [sp]
   4c710:	ldr	r2, [pc, #-532]	; 4c504 <blkid_probe_get_size@plt+0x44fec>
   4c714:	mov	r3, #210	; 0xd2
   4c718:	add	r2, pc, r2
   4c71c:	add	r1, pc, r1
   4c720:	mov	r0, #0
   4c724:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c728:	mvn	r9, #0
   4c72c:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c730:	ldr	r3, [pc, #-560]	; 4c508 <blkid_probe_get_size@plt+0x44ff0>
   4c734:	ldr	r2, [pc, #-560]	; 4c50c <blkid_probe_get_size@plt+0x44ff4>
   4c738:	add	r3, pc, r3
   4c73c:	ldr	r1, [pc, #-564]	; 4c510 <blkid_probe_get_size@plt+0x44ff8>
   4c740:	add	r3, r3, #728	; 0x2d8
   4c744:	str	r3, [sp]
   4c748:	mov	r0, r5
   4c74c:	mov	r3, #189	; 0xbd
   4c750:	add	r2, pc, r2
   4c754:	add	r1, pc, r1
   4c758:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4c75c:	ldr	r3, [pc, #-592]	; 4c514 <blkid_probe_get_size@plt+0x44ffc>
   4c760:	ldr	r2, [pc, #-592]	; 4c518 <blkid_probe_get_size@plt+0x45000>
   4c764:	add	r3, pc, r3
   4c768:	ldr	r1, [pc, #-596]	; 4c51c <blkid_probe_get_size@plt+0x45004>
   4c76c:	add	r3, r3, #728	; 0x2d8
   4c770:	str	r3, [sp]
   4c774:	add	r2, pc, r2
   4c778:	mov	r3, #191	; 0xbf
   4c77c:	add	r1, pc, r1
   4c780:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4c784:	mov	r3, #0
   4c788:	mov	r7, r3
   4c78c:	str	r3, [sp, #48]	; 0x30
   4c790:	str	r3, [sp, #52]	; 0x34
   4c794:	str	r3, [sp, #44]	; 0x2c
   4c798:	ldr	r3, [pc, #-640]	; 4c520 <blkid_probe_get_size@plt+0x45008>
   4c79c:	add	r3, pc, r3
   4c7a0:	ldr	r3, [r3, #20]
   4c7a4:	cmp	r3, #6
   4c7a8:	ble	4c324 <blkid_probe_get_size@plt+0x44e0c>
   4c7ac:	b	4c2ec <blkid_probe_get_size@plt+0x44dd4>
   4c7b0:	ldr	r3, [pc, #-660]	; 4c524 <blkid_probe_get_size@plt+0x4500c>
   4c7b4:	mov	r0, r1
   4c7b8:	add	r3, pc, r3
   4c7bc:	ldr	r2, [pc, #-668]	; 4c528 <blkid_probe_get_size@plt+0x45010>
   4c7c0:	ldr	r1, [pc, #-668]	; 4c52c <blkid_probe_get_size@plt+0x45014>
   4c7c4:	add	r3, r3, #748	; 0x2ec
   4c7c8:	str	r3, [sp]
   4c7cc:	add	r2, pc, r2
   4c7d0:	mov	r3, #233	; 0xe9
   4c7d4:	add	r1, pc, r1
   4c7d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4c7dc:	ldr	r3, [pc, #-692]	; 4c530 <blkid_probe_get_size@plt+0x45018>
   4c7e0:	ldr	r2, [pc, #-692]	; 4c534 <blkid_probe_get_size@plt+0x4501c>
   4c7e4:	add	r3, pc, r3
   4c7e8:	ldr	r1, [pc, #-696]	; 4c538 <blkid_probe_get_size@plt+0x45020>
   4c7ec:	add	r3, r3, #772	; 0x304
   4c7f0:	str	r3, [sp]
   4c7f4:	mov	r0, r4
   4c7f8:	ldr	r3, [pc, #-708]	; 4c53c <blkid_probe_get_size@plt+0x45024>
   4c7fc:	add	r2, pc, r2
   4c800:	add	r1, pc, r1
   4c804:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c808:	mvn	r9, #21
   4c80c:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c810:	ldr	r3, [pc, #-728]	; 4c540 <blkid_probe_get_size@plt+0x45028>
   4c814:	ldr	r2, [pc, #-728]	; 4c544 <blkid_probe_get_size@plt+0x4502c>
   4c818:	add	r3, pc, r3
   4c81c:	ldr	r1, [pc, #-732]	; 4c548 <blkid_probe_get_size@plt+0x45030>
   4c820:	add	r3, r3, #804	; 0x324
   4c824:	str	r3, [sp]
   4c828:	add	r2, pc, r2
   4c82c:	mov	r3, #320	; 0x140
   4c830:	add	r1, pc, r1
   4c834:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4c838:	ldr	r3, [pc, #-756]	; 4c54c <blkid_probe_get_size@plt+0x45034>
   4c83c:	ldr	r2, [pc, #-756]	; 4c550 <blkid_probe_get_size@plt+0x45038>
   4c840:	add	r3, pc, r3
   4c844:	ldr	r1, [pc, #-760]	; 4c554 <blkid_probe_get_size@plt+0x4503c>
   4c848:	add	r3, r3, #772	; 0x304
   4c84c:	str	r3, [sp]
   4c850:	add	r2, pc, r2
   4c854:	mov	r3, #968	; 0x3c8
   4c858:	add	r1, pc, r1
   4c85c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4c860:	mvn	r9, #21
   4c864:	b	4c178 <blkid_probe_get_size@plt+0x44c60>
   4c868:	ldr	r2, [pc, #-792]	; 4c558 <blkid_probe_get_size@plt+0x45040>
   4c86c:	mov	r0, r3
   4c870:	add	r2, pc, r2
   4c874:	add	r3, r2, #804	; 0x324
   4c878:	ldr	r1, [pc, #-804]	; 4c55c <blkid_probe_get_size@plt+0x45044>
   4c87c:	ldr	r2, [pc, #-804]	; 4c560 <blkid_probe_get_size@plt+0x45048>
   4c880:	str	r3, [sp]
   4c884:	add	r2, pc, r2
   4c888:	ldr	r3, [pc, #-812]	; 4c564 <blkid_probe_get_size@plt+0x4504c>
   4c88c:	add	r1, pc, r1
   4c890:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4c894:	bl	732c <__errno_location@plt>
   4c898:	ldr	r2, [r0]
   4c89c:	cmp	r2, #0
   4c8a0:	rsb	r2, r2, #0
   4c8a4:	ble	4c45c <blkid_probe_get_size@plt+0x44f44>
   4c8a8:	mov	r9, r2
   4c8ac:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4c8b0:	ldr	r2, [sl, #4]
   4c8b4:	mov	r3, #1
   4c8b8:	str	r2, [sp, #108]	; 0x6c
   4c8bc:	strh	r3, [sp, #112]	; 0x70
   4c8c0:	mov	r8, #0
   4c8c4:	b	4c438 <blkid_probe_get_size@plt+0x44f20>
   4c8c8:	ldr	r2, [sl, #40]	; 0x28
   4c8cc:	cmp	r2, #65536	; 0x10000
   4c8d0:	bcc	4cf38 <blkid_probe_get_size@plt+0x45a20>
   4c8d4:	ldr	r3, [pc, #-884]	; 4c568 <blkid_probe_get_size@plt+0x45050>
   4c8d8:	add	r3, pc, r3
   4c8dc:	ldr	r3, [r3, #20]
   4c8e0:	cmp	r3, #6
   4c8e4:	ble	4cfec <blkid_probe_get_size@plt+0x45ad4>
   4c8e8:	ldr	r2, [pc, #-900]	; 4c56c <blkid_probe_get_size@plt+0x45054>
   4c8ec:	ldr	r3, [pc, #-900]	; 4c570 <blkid_probe_get_size@plt+0x45058>
   4c8f0:	add	r2, pc, r2
   4c8f4:	str	r2, [sp, #4]
   4c8f8:	add	r3, pc, r3
   4c8fc:	ldr	r2, [pc, #-912]	; 4c574 <blkid_probe_get_size@plt+0x4505c>
   4c900:	add	r3, r3, #920	; 0x398
   4c904:	mov	r1, #65536	; 0x10000
   4c908:	str	r3, [sp]
   4c90c:	str	r1, [sp, #8]
   4c910:	add	r2, pc, r2
   4c914:	mov	r3, #230	; 0xe6
   4c918:	ldr	r1, [pc, #-868]	; 4c5bc <blkid_probe_get_size@plt+0x450a4>
   4c91c:	mov	r0, #7
   4c920:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4c924:	subs	r2, r0, #0
   4c928:	blt	4cf30 <blkid_probe_get_size@plt+0x45a18>
   4c92c:	ldrd	r2, [sl, #36]	; 0x24
   4c930:	ldr	r1, [sp, #48]	; 0x30
   4c934:	cmp	r1, #0
   4c938:	add	r1, r3, #1
   4c93c:	str	r1, [sl, #40]	; 0x28
   4c940:	ldr	r1, [sp, #44]	; 0x2c
   4c944:	str	r1, [r2, r3, lsl #2]
   4c948:	beq	4c0e4 <blkid_probe_get_size@plt+0x44bcc>
   4c94c:	ldr	r3, [sl, #52]	; 0x34
   4c950:	ldr	r2, [sp, #52]	; 0x34
   4c954:	cmp	r3, r2
   4c958:	bls	4c0e4 <blkid_probe_get_size@plt+0x44bcc>
   4c95c:	mov	r1, r2
   4c960:	sub	r3, r3, #-1073741823	; 0xc0000001
   4c964:	ldr	r0, [sl, #48]	; 0x30
   4c968:	sub	r2, r3, r2
   4c96c:	lsl	r3, r1, #2
   4c970:	add	r1, r3, #4
   4c974:	add	r1, r0, r1
   4c978:	lsl	r2, r2, #2
   4c97c:	add	r0, r0, r3
   4c980:	bl	6e04 <memmove@plt>
   4c984:	ldr	r3, [sl, #52]	; 0x34
   4c988:	sub	r3, r3, #1
   4c98c:	str	r3, [sl, #52]	; 0x34
   4c990:	b	4c0e4 <blkid_probe_get_size@plt+0x44bcc>
   4c994:	ldrh	r3, [r4, #6]
   4c998:	ands	r3, r3, #2
   4c99c:	beq	4cf08 <blkid_probe_get_size@plt+0x459f0>
   4c9a0:	ldr	r7, [sl, #52]	; 0x34
   4c9a4:	cmp	r7, #0
   4c9a8:	beq	4cfd8 <blkid_probe_get_size@plt+0x45ac0>
   4c9ac:	ldr	r6, [sl, #48]	; 0x30
   4c9b0:	mov	r3, #0
   4c9b4:	ldr	r9, [r4, #8]
   4c9b8:	sub	r6, r6, #4
   4c9bc:	str	r2, [sp, #48]	; 0x30
   4c9c0:	mov	r5, r3
   4c9c4:	str	r4, [sp, #56]	; 0x38
   4c9c8:	b	4c9d8 <blkid_probe_get_size@plt+0x454c0>
   4c9cc:	add	r5, r5, #1
   4c9d0:	cmp	r5, r7
   4c9d4:	beq	4cf7c <blkid_probe_get_size@plt+0x45a64>
   4c9d8:	ldr	r4, [r6, #4]!
   4c9dc:	mov	r0, r4
   4c9e0:	bl	2f608 <blkid_probe_get_size@plt+0x280f0>
   4c9e4:	cmp	r9, r0
   4c9e8:	bne	4c9cc <blkid_probe_get_size@plt+0x454b4>
   4c9ec:	str	r4, [sp, #44]	; 0x2c
   4c9f0:	ldr	r4, [sp, #56]	; 0x38
   4c9f4:	mov	r3, #1
   4c9f8:	str	r5, [sp, #52]	; 0x34
   4c9fc:	ldr	r5, [sp, #48]	; 0x30
   4ca00:	str	r3, [sp, #48]	; 0x30
   4ca04:	str	fp, [sp, #60]	; 0x3c
   4ca08:	str	r8, [sp, #64]	; 0x40
   4ca0c:	b	4ca54 <blkid_probe_get_size@plt+0x4553c>
   4ca10:	ldr	r3, [sp, #44]	; 0x2c
   4ca14:	mov	r7, #1
   4ca18:	cmp	r3, #0
   4ca1c:	beq	4ca90 <blkid_probe_get_size@plt+0x45578>
   4ca20:	ldr	r3, [r4]
   4ca24:	add	r3, r3, #3
   4ca28:	bic	r3, r3, #3
   4ca2c:	sub	r5, r5, r3
   4ca30:	cmp	r5, #15
   4ca34:	add	r4, r4, r3
   4ca38:	bls	4cff4 <blkid_probe_get_size@plt+0x45adc>
   4ca3c:	ldr	r3, [r4]
   4ca40:	cmp	r5, r3
   4ca44:	cmpcs	r3, #15
   4ca48:	bls	4cc34 <blkid_probe_get_size@plt+0x4571c>
   4ca4c:	cmp	r7, #0
   4ca50:	bne	4cc34 <blkid_probe_get_size@plt+0x4571c>
   4ca54:	ldr	r7, [sp, #80]	; 0x50
   4ca58:	mov	r3, #0
   4ca5c:	cmp	r7, r3
   4ca60:	str	r3, [sp, #84]	; 0x54
   4ca64:	bne	4ca78 <blkid_probe_get_size@plt+0x45560>
   4ca68:	ldr	r2, [r4, #12]
   4ca6c:	ldr	r3, [sl, #12]
   4ca70:	cmp	r2, r3
   4ca74:	bne	4ca20 <blkid_probe_get_size@plt+0x45508>
   4ca78:	ldrh	r2, [r4, #4]
   4ca7c:	cmp	r2, #1
   4ca80:	beq	4cb48 <blkid_probe_get_size@plt+0x45630>
   4ca84:	cmp	r2, #3
   4ca88:	beq	4ca10 <blkid_probe_get_size@plt+0x454f8>
   4ca8c:	mov	r7, #0
   4ca90:	add	r1, sp, #88	; 0x58
   4ca94:	ldr	r0, [sp, #36]	; 0x24
   4ca98:	bl	2f0a4 <blkid_probe_get_size@plt+0x27b8c>
   4ca9c:	cmp	r0, #0
   4caa0:	blt	4caec <blkid_probe_get_size@plt+0x455d4>
   4caa4:	ldr	r3, [sp, #88]	; 0x58
   4caa8:	ldr	r2, [r4]
   4caac:	cmp	r3, #0
   4cab0:	beq	4ce64 <blkid_probe_get_size@plt+0x4594c>
   4cab4:	ldr	r3, [r3, #4]
   4cab8:	add	r3, r3, #16
   4cabc:	cmp	r2, r3
   4cac0:	bcs	4cb50 <blkid_probe_get_size@plt+0x45638>
   4cac4:	ldr	r3, [pc, #-1364]	; 4c578 <blkid_probe_get_size@plt+0x45060>
   4cac8:	add	r3, pc, r3
   4cacc:	ldr	r3, [r3, #20]
   4cad0:	cmp	r3, #6
   4cad4:	bgt	4cc54 <blkid_probe_get_size@plt+0x4573c>
   4cad8:	ldr	r0, [sp, #84]	; 0x54
   4cadc:	cmp	r0, #0
   4cae0:	beq	4ca20 <blkid_probe_get_size@plt+0x45508>
   4cae4:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4cae8:	b	4ca20 <blkid_probe_get_size@plt+0x45508>
   4caec:	cmn	r0, #95	; 0x5f
   4caf0:	bne	4cad8 <blkid_probe_get_size@plt+0x455c0>
   4caf4:	ldr	r3, [pc, #-1408]	; 4c57c <blkid_probe_get_size@plt+0x45064>
   4caf8:	add	r3, pc, r3
   4cafc:	ldr	r3, [r3, #20]
   4cb00:	cmp	r3, #6
   4cb04:	ble	4cad8 <blkid_probe_get_size@plt+0x455c0>
   4cb08:	ldr	r2, [pc, #-1424]	; 4c580 <blkid_probe_get_size@plt+0x45068>
   4cb0c:	ldr	r3, [pc, #-1424]	; 4c584 <blkid_probe_get_size@plt+0x4506c>
   4cb10:	ldrh	r1, [r4, #4]
   4cb14:	add	r2, pc, r2
   4cb18:	str	r2, [sp, #4]
   4cb1c:	add	r3, pc, r3
   4cb20:	ldr	r2, [pc, #-1440]	; 4c588 <blkid_probe_get_size@plt+0x45070>
   4cb24:	add	r3, r3, #824	; 0x338
   4cb28:	str	r3, [sp]
   4cb2c:	str	r1, [sp, #8]
   4cb30:	ldr	r3, [pc, #-1452]	; 4c58c <blkid_probe_get_size@plt+0x45074>
   4cb34:	add	r2, pc, r2
   4cb38:	mov	r1, #0
   4cb3c:	mov	r0, #7
   4cb40:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4cb44:	b	4cad8 <blkid_probe_get_size@plt+0x455c0>
   4cb48:	mov	r7, #0
   4cb4c:	b	4ca20 <blkid_probe_get_size@plt+0x45508>
   4cb50:	add	r1, sp, #84	; 0x54
   4cb54:	mov	r0, sl
   4cb58:	bl	2fbd8 <blkid_probe_get_size@plt+0x286c0>
   4cb5c:	cmp	r0, #0
   4cb60:	blt	4ce68 <blkid_probe_get_size@plt+0x45950>
   4cb64:	ldr	r9, [sp, #84]	; 0x54
   4cb68:	ldr	r2, [sp, #80]	; 0x50
   4cb6c:	ldrb	r3, [r9, #532]	; 0x214
   4cb70:	adds	r2, r2, #0
   4cb74:	movne	r2, #1
   4cb78:	bic	r3, r3, #2
   4cb7c:	orr	r3, r3, r2, lsl #1
   4cb80:	strb	r3, [r9, #532]	; 0x214
   4cb84:	ldr	fp, [r4]
   4cb88:	cmp	fp, #0
   4cb8c:	movne	r0, fp
   4cb90:	moveq	r0, #1
   4cb94:	bl	7230 <malloc@plt>
   4cb98:	subs	r6, r0, #0
   4cb9c:	beq	4cf18 <blkid_probe_get_size@plt+0x45a00>
   4cba0:	mov	r2, fp
   4cba4:	mov	r1, r4
   4cba8:	bl	71e8 <memcpy@plt>
   4cbac:	ldrb	r3, [r9, #532]	; 0x214
   4cbb0:	str	r6, [r9, #12]
   4cbb4:	tst	r3, #1
   4cbb8:	beq	4ce58 <blkid_probe_get_size@plt+0x45940>
   4cbbc:	ldr	r3, [r9, #8]
   4cbc0:	cmp	r3, #16
   4cbc4:	beq	4cc40 <blkid_probe_get_size@plt+0x45728>
   4cbc8:	ldr	r3, [sp, #28]
   4cbcc:	str	r3, [sp, #56]	; 0x38
   4cbd0:	ldr	r3, [r9, #528]	; 0x210
   4cbd4:	cmp	r3, #0
   4cbd8:	beq	4cc08 <blkid_probe_get_size@plt+0x456f0>
   4cbdc:	mov	r8, r9
   4cbe0:	mov	fp, #1
   4cbe4:	mov	r6, #0
   4cbe8:	ldr	r0, [r8, #40]	; 0x28
   4cbec:	bl	69f0 <free@plt>
   4cbf0:	str	r6, [r8, #40]	; 0x28
   4cbf4:	ldr	r3, [r9, #528]	; 0x210
   4cbf8:	add	fp, fp, #1
   4cbfc:	cmp	fp, r3
   4cc00:	add	r8, r8, #16
   4cc04:	bls	4cbe8 <blkid_probe_get_size@plt+0x456d0>
   4cc08:	ldr	r2, [r9, #24]
   4cc0c:	mov	r3, #0
   4cc10:	cmp	r2, r3
   4cc14:	str	r3, [r9, #528]	; 0x210
   4cc18:	beq	4cc8c <blkid_probe_get_size@plt+0x45774>
   4cc1c:	ldr	r2, [sp, #44]	; 0x2c
   4cc20:	ldr	r3, [sp, #84]	; 0x54
   4cc24:	cmp	r2, #0
   4cc28:	str	r3, [sp, #44]	; 0x2c
   4cc2c:	strne	r2, [r3, #536]	; 0x218
   4cc30:	b	4ca20 <blkid_probe_get_size@plt+0x45508>
   4cc34:	ldr	fp, [sp, #60]	; 0x3c
   4cc38:	ldr	r8, [sp, #64]	; 0x40
   4cc3c:	b	4c798 <blkid_probe_get_size@plt+0x45280>
   4cc40:	ldr	fp, [pc, #-1720]	; 4c590 <blkid_probe_get_size@plt+0x45078>
   4cc44:	add	fp, pc, fp
   4cc48:	add	r3, fp, #672	; 0x2a0
   4cc4c:	str	r3, [sp, #56]	; 0x38
   4cc50:	b	4cbd0 <blkid_probe_get_size@plt+0x456b8>
   4cc54:	ldr	r2, [pc, #-1736]	; 4c594 <blkid_probe_get_size@plt+0x4507c>
   4cc58:	ldr	r3, [pc, #-1736]	; 4c598 <blkid_probe_get_size@plt+0x45080>
   4cc5c:	add	r2, pc, r2
   4cc60:	str	r2, [sp, #4]
   4cc64:	add	r3, pc, r3
   4cc68:	ldr	r2, [pc, #-1748]	; 4c59c <blkid_probe_get_size@plt+0x45084>
   4cc6c:	add	r3, r3, #824	; 0x338
   4cc70:	str	r3, [sp]
   4cc74:	add	r2, pc, r2
   4cc78:	mov	r3, #396	; 0x18c
   4cc7c:	mov	r1, #0
   4cc80:	mov	r0, #7
   4cc84:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4cc88:	b	4cad8 <blkid_probe_get_size@plt+0x455c0>
   4cc8c:	ldr	r0, [r9, #12]
   4cc90:	cmp	r0, r3
   4cc94:	beq	4cfa0 <blkid_probe_get_size@plt+0x45a88>
   4cc98:	ldrh	r2, [r0, #4]
   4cc9c:	add	r1, sp, #92	; 0x5c
   4cca0:	ldr	r0, [sp, #56]	; 0x38
   4cca4:	bl	2f0a4 <blkid_probe_get_size@plt+0x27b8c>
   4cca8:	cmp	r0, #0
   4ccac:	blt	4ce68 <blkid_probe_get_size@plt+0x45950>
   4ccb0:	ldr	r3, [sp, #92]	; 0x5c
   4ccb4:	cmp	r3, #0
   4ccb8:	beq	4cfd0 <blkid_probe_get_size@plt+0x45ab8>
   4ccbc:	ldrh	r2, [r3]
   4ccc0:	cmp	r2, #10
   4ccc4:	bne	4cc1c <blkid_probe_get_size@plt+0x45704>
   4ccc8:	mov	r0, r3
   4cccc:	add	r1, sp, #96	; 0x60
   4ccd0:	ldr	r6, [r3, #4]
   4ccd4:	bl	2f168 <blkid_probe_get_size@plt+0x27c50>
   4ccd8:	ldr	r3, [r9, #528]	; 0x210
   4ccdc:	ldr	r0, [sp, #96]	; 0x60
   4cce0:	add	r3, r3, #1
   4cce4:	cmp	r0, #0
   4cce8:	add	r3, r9, r3, lsl #4
   4ccec:	str	r3, [sp, #76]	; 0x4c
   4ccf0:	str	r0, [r9, #16]
   4ccf4:	beq	4d014 <blkid_probe_get_size@plt+0x45afc>
   4ccf8:	ldr	fp, [r9, #12]
   4ccfc:	ldrh	r1, [r0]
   4cd00:	add	r2, r6, #19
   4cd04:	ldr	r3, [fp]
   4cd08:	cmp	r1, #0
   4cd0c:	bic	r2, r2, #3
   4cd10:	sub	r8, r3, r2
   4cd14:	movne	r0, r1
   4cd18:	str	r1, [sp, #72]	; 0x48
   4cd1c:	moveq	r0, #1
   4cd20:	mov	r1, #8
   4cd24:	str	r8, [sp, #68]	; 0x44
   4cd28:	bl	7164 <calloc@plt>
   4cd2c:	add	r6, r6, #3
   4cd30:	bic	r6, r6, #3
   4cd34:	add	r6, r6, #16
   4cd38:	add	r2, fp, r6
   4cd3c:	subs	r3, r0, #0
   4cd40:	str	r3, [sp, #56]	; 0x38
   4cd44:	beq	4d008 <blkid_probe_get_size@plt+0x45af0>
   4cd48:	cmp	r8, #3
   4cd4c:	bls	4ce40 <blkid_probe_get_size@plt+0x45928>
   4cd50:	ldrh	r3, [fp, r6]
   4cd54:	cmp	r3, #3
   4cd58:	bls	4ce40 <blkid_probe_get_size@plt+0x45928>
   4cd5c:	cmp	r8, r3
   4cd60:	bcc	4ce40 <blkid_probe_get_size@plt+0x45928>
   4cd64:	mov	r6, r2
   4cd68:	b	4cd80 <blkid_probe_get_size@plt+0x45868>
   4cd6c:	ldrh	r3, [r6]
   4cd70:	cmp	r3, #3
   4cd74:	bls	4ce40 <blkid_probe_get_size@plt+0x45928>
   4cd78:	cmp	r2, r3
   4cd7c:	bcc	4ce40 <blkid_probe_get_size@plt+0x45928>
   4cd80:	ldrh	r8, [r6, #2]
   4cd84:	ldr	r3, [sp, #72]	; 0x48
   4cd88:	lsl	r8, r8, #18
   4cd8c:	lsr	r8, r8, #18
   4cd90:	cmp	r3, r8
   4cd94:	ble	4ce1c <blkid_probe_get_size@plt+0x45904>
   4cd98:	ldr	r2, [sp, #56]	; 0x38
   4cd9c:	add	fp, r2, r8, lsl #3
   4cda0:	ldr	r3, [r2, r8, lsl #3]
   4cda4:	cmp	r3, #0
   4cda8:	beq	4cde8 <blkid_probe_get_size@plt+0x458d0>
   4cdac:	ldr	r3, [pc, #-2068]	; 4c5a0 <blkid_probe_get_size@plt+0x45088>
   4cdb0:	add	r3, pc, r3
   4cdb4:	ldr	r3, [r3, #20]
   4cdb8:	cmp	r3, #6
   4cdbc:	ble	4cde8 <blkid_probe_get_size@plt+0x458d0>
   4cdc0:	ldr	r3, [pc, #-2084]	; 4c5a4 <blkid_probe_get_size@plt+0x4508c>
   4cdc4:	ldr	r2, [sp, #40]	; 0x28
   4cdc8:	add	r3, pc, r3
   4cdcc:	mov	r1, #0
   4cdd0:	strd	r2, [sp]
   4cdd4:	ldr	r2, [pc, #-2100]	; 4c5a8 <blkid_probe_get_size@plt+0x45090>
   4cdd8:	mov	r3, #828	; 0x33c
   4cddc:	add	r2, pc, r2
   4cde0:	mov	r0, #7
   4cde4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4cde8:	ldr	r3, [r9, #12]
   4cdec:	ldr	r2, [sp, #56]	; 0x38
   4cdf0:	sub	r3, r6, r3
   4cdf4:	str	r3, [r2, r8, lsl #3]
   4cdf8:	ldrh	r3, [r6, #2]
   4cdfc:	ldrb	r2, [fp, #4]
   4ce00:	bic	r2, r2, #1
   4ce04:	orr	r2, r2, r3, lsr #15
   4ce08:	lsr	r3, r3, #13
   4ce0c:	bic	r2, r2, #2
   4ce10:	and	r3, r3, #2
   4ce14:	orr	r3, r3, r2
   4ce18:	strb	r3, [fp, #4]
   4ce1c:	ldrh	r3, [r6]
   4ce20:	ldr	r2, [sp, #68]	; 0x44
   4ce24:	add	r3, r3, #3
   4ce28:	bic	r3, r3, #3
   4ce2c:	sub	r2, r2, r3
   4ce30:	cmp	r2, #3
   4ce34:	str	r2, [sp, #68]	; 0x44
   4ce38:	add	r6, r6, r3
   4ce3c:	bhi	4cd6c <blkid_probe_get_size@plt+0x45854>
   4ce40:	ldr	r3, [sp, #76]	; 0x4c
   4ce44:	ldr	r2, [sp, #56]	; 0x38
   4ce48:	str	r2, [r3, #8]
   4ce4c:	ldr	r2, [sp, #72]	; 0x48
   4ce50:	strh	r2, [r3, #12]
   4ce54:	b	4cc1c <blkid_probe_get_size@plt+0x45704>
   4ce58:	mov	r0, r9
   4ce5c:	bl	2f568 <blkid_probe_get_size@plt+0x28050>
   4ce60:	b	4cbbc <blkid_probe_get_size@plt+0x456a4>
   4ce64:	bl	2f01c <blkid_probe_get_size@plt+0x27b04>
   4ce68:	ldr	r8, [sp, #84]	; 0x54
   4ce6c:	mov	r9, r0
   4ce70:	cmp	r8, #0
   4ce74:	bne	4cf24 <blkid_probe_get_size@plt+0x45a0c>
   4ce78:	ldr	r3, [sp, #44]	; 0x2c
   4ce7c:	cmp	r3, #0
   4ce80:	beq	4c180 <blkid_probe_get_size@plt+0x44c68>
   4ce84:	ldr	r0, [sp, #44]	; 0x2c
   4ce88:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4ce8c:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4ce90:	cmp	r2, #65536	; 0x10000
   4ce94:	bcc	4cf5c <blkid_probe_get_size@plt+0x45a44>
   4ce98:	ldr	r3, [pc, #-2292]	; 4c5ac <blkid_probe_get_size@plt+0x45094>
   4ce9c:	add	r3, pc, r3
   4cea0:	ldr	r3, [r3, #20]
   4cea4:	cmp	r3, #6
   4cea8:	ble	4cfec <blkid_probe_get_size@plt+0x45ad4>
   4ceac:	ldr	r2, [pc, #-2308]	; 4c5b0 <blkid_probe_get_size@plt+0x45098>
   4ceb0:	ldr	r3, [pc, #-2308]	; 4c5b4 <blkid_probe_get_size@plt+0x4509c>
   4ceb4:	add	r2, pc, r2
   4ceb8:	str	r2, [sp, #4]
   4cebc:	add	r3, pc, r3
   4cec0:	ldr	r2, [pc, #-2320]	; 4c5b8 <blkid_probe_get_size@plt+0x450a0>
   4cec4:	add	r3, r3, #944	; 0x3b0
   4cec8:	mov	r1, #65536	; 0x10000
   4cecc:	str	r3, [sp]
   4ced0:	str	r1, [sp, #8]
   4ced4:	add	r2, pc, r2
   4ced8:	mov	r3, #244	; 0xf4
   4cedc:	ldr	r1, [pc, #-2344]	; 4c5bc <blkid_probe_get_size@plt+0x450a4>
   4cee0:	mov	r0, #7
   4cee4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4cee8:	subs	r2, r0, #0
   4ceec:	blt	4cf30 <blkid_probe_get_size@plt+0x45a18>
   4cef0:	ldrd	r2, [sl, #48]	; 0x30
   4cef4:	add	r1, r3, #1
   4cef8:	str	r1, [sl, #52]	; 0x34
   4cefc:	ldr	r1, [sp, #44]	; 0x2c
   4cf00:	str	r1, [r2, r3, lsl #2]
   4cf04:	b	4c36c <blkid_probe_get_size@plt+0x44e54>
   4cf08:	str	r3, [sp, #48]	; 0x30
   4cf0c:	str	r3, [sp, #44]	; 0x2c
   4cf10:	str	r3, [sp, #52]	; 0x34
   4cf14:	b	4ca04 <blkid_probe_get_size@plt+0x454ec>
   4cf18:	mov	r8, r9
   4cf1c:	mvn	r9, #11
   4cf20:	str	r6, [r8, #12]
   4cf24:	mov	r0, r8
   4cf28:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4cf2c:	b	4ce78 <blkid_probe_get_size@plt+0x45960>
   4cf30:	mov	r9, r2
   4cf34:	b	4ce84 <blkid_probe_get_size@plt+0x4596c>
   4cf38:	add	r2, r2, #1
   4cf3c:	mov	r3, #4
   4cf40:	add	r1, sl, #44	; 0x2c
   4cf44:	add	r0, sl, #36	; 0x24
   4cf48:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4cf4c:	cmp	r0, #0
   4cf50:	bne	4c92c <blkid_probe_get_size@plt+0x45414>
   4cf54:	mvn	r9, #11
   4cf58:	b	4ce84 <blkid_probe_get_size@plt+0x4596c>
   4cf5c:	add	r2, r2, #1
   4cf60:	mov	r3, #4
   4cf64:	add	r1, sl, #56	; 0x38
   4cf68:	add	r0, sl, #48	; 0x30
   4cf6c:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4cf70:	cmp	r0, #0
   4cf74:	bne	4cef0 <blkid_probe_get_size@plt+0x459d8>
   4cf78:	b	4cf54 <blkid_probe_get_size@plt+0x45a3c>
   4cf7c:	mov	r0, #0
   4cf80:	mov	r1, #1
   4cf84:	str	r5, [sp, #52]	; 0x34
   4cf88:	ldr	r4, [sp, #56]	; 0x38
   4cf8c:	ldr	r5, [sp, #48]	; 0x30
   4cf90:	strd	r0, [sp, #44]	; 0x2c
   4cf94:	b	4ca04 <blkid_probe_get_size@plt+0x454ec>
   4cf98:	mvn	r9, #11
   4cf9c:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4cfa0:	ldr	r3, [pc, #-2536]	; 4c5c0 <blkid_probe_get_size@plt+0x450a8>
   4cfa4:	ldr	r2, [pc, #-2536]	; 4c5c4 <blkid_probe_get_size@plt+0x450ac>
   4cfa8:	add	r3, pc, r3
   4cfac:	ldr	r1, [pc, #-2540]	; 4c5c8 <blkid_probe_get_size@plt+0x450b0>
   4cfb0:	add	r3, r3, #844	; 0x34c
   4cfb4:	str	r3, [sp]
   4cfb8:	add	r2, pc, r2
   4cfbc:	ldr	r3, [pc, #-2552]	; 4c5cc <blkid_probe_get_size@plt+0x450b4>
   4cfc0:	add	r1, pc, r1
   4cfc4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4cfc8:	mvn	r9, #4
   4cfcc:	b	4c180 <blkid_probe_get_size@plt+0x44c68>
   4cfd0:	bl	2f060 <blkid_probe_get_size@plt+0x27b48>
   4cfd4:	bl	6fb4 <__stack_chk_fail@plt>
   4cfd8:	mov	r3, #1
   4cfdc:	str	r7, [sp, #52]	; 0x34
   4cfe0:	str	r7, [sp, #44]	; 0x2c
   4cfe4:	str	r3, [sp, #48]	; 0x30
   4cfe8:	b	4ca04 <blkid_probe_get_size@plt+0x454ec>
   4cfec:	mvn	r9, #104	; 0x68
   4cff0:	b	4ce84 <blkid_probe_get_size@plt+0x4596c>
   4cff4:	cmp	r5, #0
   4cff8:	ldr	fp, [sp, #60]	; 0x3c
   4cffc:	ldr	r8, [sp, #64]	; 0x40
   4d000:	beq	4c324 <blkid_probe_get_size@plt+0x44e0c>
   4d004:	b	4c798 <blkid_probe_get_size@plt+0x45280>
   4d008:	ldr	r8, [sp, #84]	; 0x54
   4d00c:	mvn	r9, #11
   4d010:	b	4ce70 <blkid_probe_get_size@plt+0x45958>
   4d014:	ldr	r3, [pc, #-2636]	; 4c5d0 <blkid_probe_get_size@plt+0x450b8>
   4d018:	ldr	r2, [pc, #-2636]	; 4c5d4 <blkid_probe_get_size@plt+0x450bc>
   4d01c:	add	r3, pc, r3
   4d020:	ldr	r1, [pc, #-2640]	; 4c5d8 <blkid_probe_get_size@plt+0x450c0>
   4d024:	add	r3, r3, #872	; 0x368
   4d028:	str	r3, [sp]
   4d02c:	add	r2, pc, r2
   4d030:	ldr	r3, [pc, #-2652]	; 4c5dc <blkid_probe_get_size@plt+0x450c4>
   4d034:	add	r1, pc, r1
   4d038:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d03c:	ldr	r3, [pc, #492]	; 4d230 <blkid_probe_get_size@plt+0x45d18>
   4d040:	ldr	ip, [pc, #492]	; 4d234 <blkid_probe_get_size@plt+0x45d1c>
   4d044:	add	r3, pc, r3
   4d048:	push	{r4, r5, r6, r7, r8, r9, lr}
   4d04c:	sub	sp, sp, #28
   4d050:	ldr	r4, [r3, ip]
   4d054:	mov	r5, r2
   4d058:	subs	r8, r0, #0
   4d05c:	ldr	r3, [r4]
   4d060:	mov	r2, #0
   4d064:	str	r2, [sp, #12]
   4d068:	str	r3, [sp, #20]
   4d06c:	beq	4d190 <blkid_probe_get_size@plt+0x45c78>
   4d070:	ldr	r3, [r8, #24]
   4d074:	mov	r6, r1
   4d078:	cmp	r3, #16
   4d07c:	beq	4d0c8 <blkid_probe_get_size@plt+0x45bb0>
   4d080:	ldr	r0, [pc, #432]	; 4d238 <blkid_probe_get_size@plt+0x45d20>
   4d084:	add	r0, pc, r0
   4d088:	add	r0, r0, #680	; 0x2a8
   4d08c:	mov	r2, #19
   4d090:	add	r1, sp, #16
   4d094:	bl	2f0a4 <blkid_probe_get_size@plt+0x27b8c>
   4d098:	subs	r7, r0, #0
   4d09c:	bge	4d0d8 <blkid_probe_get_size@plt+0x45bc0>
   4d0a0:	ldr	r0, [sp, #12]
   4d0a4:	cmp	r0, #0
   4d0a8:	bne	4d228 <blkid_probe_get_size@plt+0x45d10>
   4d0ac:	ldr	r2, [sp, #20]
   4d0b0:	ldr	r3, [r4]
   4d0b4:	mov	r0, r7
   4d0b8:	cmp	r2, r3
   4d0bc:	bne	4d224 <blkid_probe_get_size@plt+0x45d0c>
   4d0c0:	add	sp, sp, #28
   4d0c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4d0c8:	ldr	r0, [pc, #364]	; 4d23c <blkid_probe_get_size@plt+0x45d24>
   4d0cc:	add	r0, pc, r0
   4d0d0:	add	r0, r0, #672	; 0x2a0
   4d0d4:	b	4d08c <blkid_probe_get_size@plt+0x45b74>
   4d0d8:	ldr	r3, [sp, #16]
   4d0dc:	cmp	r3, #0
   4d0e0:	beq	4d1d0 <blkid_probe_get_size@plt+0x45cb8>
   4d0e4:	ldrh	r3, [r3]
   4d0e8:	cmp	r3, #10
   4d0ec:	bne	4d1d4 <blkid_probe_get_size@plt+0x45cbc>
   4d0f0:	mov	r0, r8
   4d0f4:	add	r1, sp, #12
   4d0f8:	bl	2fbd8 <blkid_probe_get_size@plt+0x286c0>
   4d0fc:	subs	r7, r0, #0
   4d100:	blt	4d0a0 <blkid_probe_get_size@plt+0x45b88>
   4d104:	ldr	r7, [sp, #16]
   4d108:	cmp	r7, #0
   4d10c:	beq	4d1e4 <blkid_probe_get_size@plt+0x45ccc>
   4d110:	ldr	r8, [r7, #4]
   4d114:	add	r8, r8, #19
   4d118:	bic	r8, r8, #3
   4d11c:	cmp	r8, #15
   4d120:	bls	4d1e8 <blkid_probe_get_size@plt+0x45cd0>
   4d124:	mov	r1, r8
   4d128:	mov	r0, #1
   4d12c:	ldr	r9, [sp, #12]
   4d130:	bl	7164 <calloc@plt>
   4d134:	cmp	r0, #0
   4d138:	mov	r2, r0
   4d13c:	str	r0, [r9, #12]
   4d140:	beq	4d214 <blkid_probe_get_size@plt+0x45cfc>
   4d144:	mov	r3, #5
   4d148:	mov	r0, r7
   4d14c:	strh	r3, [r2, #6]
   4d150:	add	r1, r9, #16
   4d154:	bl	2f168 <blkid_probe_get_size@plt+0x27c50>
   4d158:	ldr	r3, [sp, #12]
   4d15c:	mov	r0, #19
   4d160:	mov	r2, #0
   4d164:	ldr	r3, [r3, #12]
   4d168:	mov	r7, r2
   4d16c:	str	r8, [r3]
   4d170:	ldr	r3, [sp, #12]
   4d174:	ldr	r1, [r3, #12]
   4d178:	strh	r0, [r1, #4]
   4d17c:	str	r3, [r6]
   4d180:	ldr	r3, [r3, #12]
   4d184:	str	r5, [r3, #20]
   4d188:	strb	r2, [r3, #16]
   4d18c:	b	4d0ac <blkid_probe_get_size@plt+0x45b94>
   4d190:	ldr	r2, [pc, #168]	; 4d240 <blkid_probe_get_size@plt+0x45d28>
   4d194:	ldr	r1, [pc, #168]	; 4d244 <blkid_probe_get_size@plt+0x45d2c>
   4d198:	add	r2, pc, r2
   4d19c:	add	r2, r2, #1000	; 0x3e8
   4d1a0:	str	r2, [sp]
   4d1a4:	ldr	r2, [pc, #156]	; 4d248 <blkid_probe_get_size@plt+0x45d30>
   4d1a8:	mov	r3, #55	; 0x37
   4d1ac:	add	r2, pc, r2
   4d1b0:	add	r1, pc, r1
   4d1b4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4d1b8:	ldr	r0, [sp, #12]
   4d1bc:	cmp	r0, #0
   4d1c0:	beq	4d1c8 <blkid_probe_get_size@plt+0x45cb0>
   4d1c4:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4d1c8:	mvn	r7, #21
   4d1cc:	b	4d0ac <blkid_probe_get_size@plt+0x45b94>
   4d1d0:	bl	2f060 <blkid_probe_get_size@plt+0x27b48>
   4d1d4:	ldr	r0, [sp, #12]
   4d1d8:	cmp	r0, #0
   4d1dc:	bne	4d1c4 <blkid_probe_get_size@plt+0x45cac>
   4d1e0:	b	4d1c8 <blkid_probe_get_size@plt+0x45cb0>
   4d1e4:	bl	2f01c <blkid_probe_get_size@plt+0x27b04>
   4d1e8:	ldr	r2, [pc, #92]	; 4d24c <blkid_probe_get_size@plt+0x45d34>
   4d1ec:	ldr	r1, [pc, #92]	; 4d250 <blkid_probe_get_size@plt+0x45d38>
   4d1f0:	add	r2, pc, r2
   4d1f4:	add	r2, r2, #1000	; 0x3e8
   4d1f8:	str	r2, [sp]
   4d1fc:	ldr	r2, [pc, #80]	; 4d254 <blkid_probe_get_size@plt+0x45d3c>
   4d200:	mov	r3, #72	; 0x48
   4d204:	add	r2, pc, r2
   4d208:	add	r1, pc, r1
   4d20c:	mov	r0, #0
   4d210:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d214:	mov	r0, r9
   4d218:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4d21c:	mvn	r7, #11
   4d220:	b	4d0ac <blkid_probe_get_size@plt+0x45b94>
   4d224:	bl	6fb4 <__stack_chk_fail@plt>
   4d228:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   4d22c:	b	4d0ac <blkid_probe_get_size@plt+0x45b94>
   4d230:	andeq	sl, r4, r4, lsr #22
   4d234:	andeq	r0, r0, ip, lsr r4
   4d238:	andeq	sp, r3, ip, lsl r0
   4d23c:	ldrdeq	ip, [r3], -r4
   4d240:	andeq	r3, r2, r8, lsr #10
   4d244:	andeq	r1, r2, r0, lsr #5
   4d248:	andeq	r0, r2, ip, lsr #21
   4d24c:	ldrdeq	r3, [r2], -r0
   4d250:	andeq	r5, r2, r8, lsr r3
   4d254:	andeq	r0, r2, r4, asr sl
   4d258:	ldr	r3, [pc, #392]	; 4d3e8 <blkid_probe_get_size@plt+0x45ed0>
   4d25c:	ldr	r2, [pc, #392]	; 4d3ec <blkid_probe_get_size@plt+0x45ed4>
   4d260:	add	r3, pc, r3
   4d264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d268:	add	fp, sp, #32
   4d26c:	sub	sp, sp, #36	; 0x24
   4d270:	ldr	r3, [r3, r2]
   4d274:	ldr	r1, [pc, #372]	; 4d3f0 <blkid_probe_get_size@plt+0x45ed8>
   4d278:	str	r3, [fp, #-48]	; 0xffffffd0
   4d27c:	ldr	r3, [r3]
   4d280:	add	r1, pc, r1
   4d284:	mov	sl, r0
   4d288:	str	r3, [fp, #-40]	; 0xffffffd8
   4d28c:	bl	7050 <strstr@plt>
   4d290:	subs	r5, r0, #0
   4d294:	beq	4d39c <blkid_probe_get_size@plt+0x45e84>
   4d298:	sub	r1, r5, sl
   4d29c:	add	r1, r1, #1
   4d2a0:	mov	r0, sl
   4d2a4:	bl	69cc <strnlen@plt>
   4d2a8:	mov	r4, #0
   4d2ac:	mov	r1, sl
   4d2b0:	add	r3, r0, #15
   4d2b4:	bic	r3, r3, #7
   4d2b8:	sub	sp, sp, r3
   4d2bc:	add	r3, sp, #15
   4d2c0:	mov	r2, r0
   4d2c4:	lsr	r3, r3, #3
   4d2c8:	strb	r4, [r0, r3, lsl #3]
   4d2cc:	lsl	r0, r3, #3
   4d2d0:	bl	71e8 <memcpy@plt>
   4d2d4:	str	r0, [fp, #-52]	; 0xffffffcc
   4d2d8:	bl	6ca8 <opendir@plt>
   4d2dc:	subs	r6, r0, #0
   4d2e0:	beq	4d39c <blkid_probe_get_size@plt+0x45e84>
   4d2e4:	bl	732c <__errno_location@plt>
   4d2e8:	mov	r9, r0
   4d2ec:	mov	r0, r6
   4d2f0:	str	r4, [r9]
   4d2f4:	bl	6bb8 <readdir64@plt>
   4d2f8:	cmp	r0, #0
   4d2fc:	beq	4d394 <blkid_probe_get_size@plt+0x45e7c>
   4d300:	add	r5, r5, #2
   4d304:	str	sl, [fp, #-56]	; 0xffffffc8
   4d308:	ldrb	r3, [r0, #19]
   4d30c:	cmp	r3, #46	; 0x2e
   4d310:	beq	4d380 <blkid_probe_get_size@plt+0x45e68>
   4d314:	add	r7, r0, #19
   4d318:	mov	r0, r7
   4d31c:	bl	723c <strlen@plt>
   4d320:	mov	r8, sp
   4d324:	mov	sl, r0
   4d328:	mov	r0, r5
   4d32c:	bl	723c <strlen@plt>
   4d330:	mov	r2, r7
   4d334:	mov	r3, r5
   4d338:	add	r0, sl, r0
   4d33c:	add	r1, r0, #8
   4d340:	bic	r1, r1, #7
   4d344:	sub	sp, sp, r1
   4d348:	add	r7, sp, #8
   4d34c:	add	r1, r0, #1
   4d350:	str	r4, [sp]
   4d354:	mov	r0, r7
   4d358:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   4d35c:	mov	r0, r6
   4d360:	bl	6984 <dirfd@plt>
   4d364:	mov	r3, #0
   4d368:	mov	r1, r7
   4d36c:	mov	r2, r3
   4d370:	bl	72d8 <faccessat@plt>
   4d374:	cmp	r0, #0
   4d378:	beq	4d3b8 <blkid_probe_get_size@plt+0x45ea0>
   4d37c:	mov	sp, r8
   4d380:	str	r4, [r9]
   4d384:	mov	r0, r6
   4d388:	bl	6bb8 <readdir64@plt>
   4d38c:	cmp	r0, #0
   4d390:	bne	4d308 <blkid_probe_get_size@plt+0x45df0>
   4d394:	mov	r0, r6
   4d398:	bl	6aa4 <closedir@plt>
   4d39c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4d3a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4d3a4:	ldr	r3, [r3]
   4d3a8:	cmp	r2, r3
   4d3ac:	bne	4d3e4 <blkid_probe_get_size@plt+0x45ecc>
   4d3b0:	sub	sp, fp, #32
   4d3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d3b8:	ldr	sl, [fp, #-56]	; 0xffffffc8
   4d3bc:	str	r0, [sp]
   4d3c0:	mov	r3, r7
   4d3c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4d3c8:	mov	r0, sl
   4d3cc:	mov	r1, #1024	; 0x400
   4d3d0:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   4d3d4:	mov	r0, r6
   4d3d8:	mov	sp, r8
   4d3dc:	bl	6aa4 <closedir@plt>
   4d3e0:	b	4d39c <blkid_probe_get_size@plt+0x45e84>
   4d3e4:	bl	6fb4 <__stack_chk_fail@plt>
   4d3e8:	andeq	sl, r4, r8, lsl #18
   4d3ec:	andeq	r0, r0, ip, lsr r4
   4d3f0:	andeq	r5, r2, r0, ror #5
   4d3f4:	ldr	r3, [pc, #296]	; 4d524 <blkid_probe_get_size@plt+0x4600c>
   4d3f8:	ldr	r2, [pc, #296]	; 4d528 <blkid_probe_get_size@plt+0x46010>
   4d3fc:	add	r3, pc, r3
   4d400:	push	{r4, r5, r6, r7, r8, lr}
   4d404:	sub	sp, sp, #16
   4d408:	ldr	r4, [r3, r2]
   4d40c:	ldr	r2, [r0]
   4d410:	mvn	ip, #0
   4d414:	ldr	r3, [r4]
   4d418:	cmp	r2, #0
   4d41c:	str	ip, [sp, #8]
   4d420:	str	r3, [sp, #12]
   4d424:	beq	4d4e8 <blkid_probe_get_size@plt+0x45fd0>
   4d428:	mov	r5, r0
   4d42c:	mov	r6, r1
   4d430:	bl	467d4 <blkid_probe_get_size@plt+0x3f2bc>
   4d434:	cmp	r0, #0
   4d438:	movge	r0, #0
   4d43c:	blt	4d458 <blkid_probe_get_size@plt+0x45f40>
   4d440:	ldr	r2, [sp, #12]
   4d444:	ldr	r3, [r4]
   4d448:	cmp	r2, r3
   4d44c:	bne	4d520 <blkid_probe_get_size@plt+0x46008>
   4d450:	add	sp, sp, #16
   4d454:	pop	{r4, r5, r6, r7, r8, pc}
   4d458:	cmn	r0, #123	; 0x7b
   4d45c:	bne	4d440 <blkid_probe_get_size@plt+0x45f28>
   4d460:	add	r1, sp, #8
   4d464:	ldr	r0, [r5]
   4d468:	bl	41270 <blkid_probe_get_size@plt+0x39d58>
   4d46c:	mov	r8, r0
   4d470:	bl	732c <__errno_location@plt>
   4d474:	mov	r3, #0
   4d478:	cmp	r8, #0
   4d47c:	mov	r7, r0
   4d480:	str	r3, [r0]
   4d484:	blt	4d4c4 <blkid_probe_get_size@plt+0x45fac>
   4d488:	ldr	r0, [sp, #8]
   4d48c:	bl	6b88 <getpwuid@plt>
   4d490:	cmp	r0, #0
   4d494:	beq	4d514 <blkid_probe_get_size@plt+0x45ffc>
   4d498:	ldr	r3, [r0]
   4d49c:	str	r3, [r5]
   4d4a0:	ldr	r3, [r0, #8]
   4d4a4:	ldr	r0, [pc, #128]	; 4d52c <blkid_probe_get_size@plt+0x46014>
   4d4a8:	cmn	r3, #1
   4d4ac:	cmpne	r3, r0
   4d4b0:	moveq	r0, #1
   4d4b4:	movne	r0, #0
   4d4b8:	strne	r3, [r6]
   4d4bc:	mvneq	r0, #73	; 0x49
   4d4c0:	b	4d440 <blkid_probe_get_size@plt+0x45f28>
   4d4c4:	ldr	r0, [r5]
   4d4c8:	bl	6900 <getpwnam@plt>
   4d4cc:	cmp	r0, #0
   4d4d0:	bne	4d4a0 <blkid_probe_get_size@plt+0x45f88>
   4d4d4:	ldr	r0, [r7]
   4d4d8:	cmp	r0, #0
   4d4dc:	rsbgt	r0, r0, #0
   4d4e0:	mvnle	r0, #2
   4d4e4:	b	4d440 <blkid_probe_get_size@plt+0x45f28>
   4d4e8:	ldr	r3, [pc, #64]	; 4d530 <blkid_probe_get_size@plt+0x46018>
   4d4ec:	mov	r0, r2
   4d4f0:	add	r3, pc, r3
   4d4f4:	ldr	r2, [pc, #56]	; 4d534 <blkid_probe_get_size@plt+0x4601c>
   4d4f8:	ldr	r1, [pc, #56]	; 4d538 <blkid_probe_get_size@plt+0x46020>
   4d4fc:	add	r3, r3, #1012	; 0x3f4
   4d500:	str	r3, [sp]
   4d504:	add	r2, pc, r2
   4d508:	mov	r3, #169	; 0xa9
   4d50c:	add	r1, pc, r1
   4d510:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d514:	ldr	r3, [sp, #8]
   4d518:	str	r3, [r6]
   4d51c:	b	4d440 <blkid_probe_get_size@plt+0x45f28>
   4d520:	bl	6fb4 <__stack_chk_fail@plt>
   4d524:	andeq	sl, r4, ip, ror #14
   4d528:	andeq	r0, r0, ip, lsr r4
   4d52c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   4d530:	ldrdeq	r3, [r2], -r0
   4d534:	andeq	r2, r2, ip, lsl #7
   4d538:	andeq	r5, r2, r8, asr r0
   4d53c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4d540:	mov	r7, r1
   4d544:	ldr	r4, [pc, #2476]	; 4def8 <blkid_probe_get_size@plt+0x469e0>
   4d548:	ldr	r3, [pc, #2476]	; 4defc <blkid_probe_get_size@plt+0x469e4>
   4d54c:	add	r4, pc, r4
   4d550:	sub	sp, sp, #556	; 0x22c
   4d554:	ldr	r1, [r4, r3]
   4d558:	mov	sl, r2
   4d55c:	mvn	r3, #0
   4d560:	ldr	r2, [r1]
   4d564:	subs	r5, r0, #0
   4d568:	str	r1, [sp, #32]
   4d56c:	str	r3, [sp, #148]	; 0x94
   4d570:	str	r2, [sp, #548]	; 0x224
   4d574:	str	r3, [sp, #152]	; 0x98
   4d578:	str	r3, [sp, #156]	; 0x9c
   4d57c:	str	r3, [sp, #160]	; 0xa0
   4d580:	beq	4d860 <blkid_probe_get_size@plt+0x46348>
   4d584:	ldr	r3, [r5]
   4d588:	cmp	r3, #0
   4d58c:	beq	4d890 <blkid_probe_get_size@plt+0x46378>
   4d590:	add	r6, sp, #148	; 0x94
   4d594:	mov	r0, r6
   4d598:	ldr	r1, [pc, #2400]	; 4df00 <blkid_probe_get_size@plt+0x469e8>
   4d59c:	bl	6c3c <pipe2@plt>
   4d5a0:	ldr	r3, [pc, #2396]	; 4df04 <blkid_probe_get_size@plt+0x469ec>
   4d5a4:	add	r3, pc, r3
   4d5a8:	ldr	r8, [r3, #24]
   4d5ac:	subs	r3, r0, #0
   4d5b0:	str	r3, [sp, #24]
   4d5b4:	bne	4d75c <blkid_probe_get_size@plt+0x46244>
   4d5b8:	cmp	r8, #5
   4d5bc:	ble	4d5d8 <blkid_probe_get_size@plt+0x460c0>
   4d5c0:	add	r8, sp, #156	; 0x9c
   4d5c4:	mov	r0, r8
   4d5c8:	ldr	r1, [pc, #2352]	; 4df00 <blkid_probe_get_size@plt+0x469e8>
   4d5cc:	bl	6c3c <pipe2@plt>
   4d5d0:	cmp	r0, #0
   4d5d4:	bne	4d7b0 <blkid_probe_get_size@plt+0x46298>
   4d5d8:	mov	r2, #3
   4d5dc:	mov	r1, #0
   4d5e0:	mov	r0, r7
   4d5e4:	bl	3d204 <blkid_probe_get_size@plt+0x35cec>
   4d5e8:	subs	fp, r0, #0
   4d5ec:	beq	4d8c0 <blkid_probe_get_size@plt+0x463a8>
   4d5f0:	ldr	r1, [fp]
   4d5f4:	cmp	r1, #0
   4d5f8:	beq	4d838 <blkid_probe_get_size@plt+0x46320>
   4d5fc:	ldrb	r3, [r1]
   4d600:	cmp	r3, #0
   4d604:	beq	4d838 <blkid_probe_get_size@plt+0x46320>
   4d608:	cmp	r3, #47	; 0x2f
   4d60c:	beq	4d634 <blkid_probe_get_size@plt+0x4611c>
   4d610:	ldr	r0, [pc, #2288]	; 4df08 <blkid_probe_get_size@plt+0x469f0>
   4d614:	mvn	r2, #0
   4d618:	add	r0, pc, r0
   4d61c:	bl	3d8b4 <blkid_probe_get_size@plt+0x3639c>
   4d620:	subs	r8, r0, #0
   4d624:	beq	4d8f0 <blkid_probe_get_size@plt+0x463d8>
   4d628:	ldr	r0, [fp]
   4d62c:	bl	69f0 <free@plt>
   4d630:	str	r8, [fp]
   4d634:	ldr	r3, [r5]
   4d638:	cmp	r3, #0
   4d63c:	str	r3, [sp, #36]	; 0x24
   4d640:	beq	4dd38 <blkid_probe_get_size@plt+0x46820>
   4d644:	ldr	r0, [sp, #36]	; 0x24
   4d648:	mov	r8, #0
   4d64c:	str	r8, [sp, #84]	; 0x54
   4d650:	str	r8, [sp, #88]	; 0x58
   4d654:	ldrb	r3, [r0, #212]	; 0xd4
   4d658:	tst	r3, #16
   4d65c:	beq	4da84 <blkid_probe_get_size@plt+0x4656c>
   4d660:	add	r1, sp, #80	; 0x50
   4d664:	str	r1, [sp, #44]	; 0x2c
   4d668:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
   4d66c:	subs	r3, r0, #0
   4d670:	beq	4d91c <blkid_probe_get_size@plt+0x46404>
   4d674:	add	r1, sp, #88	; 0x58
   4d678:	str	r1, [sp, #40]	; 0x28
   4d67c:	ldr	r0, [pc, #2184]	; 4df0c <blkid_probe_get_size@plt+0x469f4>
   4d680:	add	r1, sp, #84	; 0x54
   4d684:	str	fp, [sp, #52]	; 0x34
   4d688:	str	r5, [sp, #56]	; 0x38
   4d68c:	str	sl, [sp, #68]	; 0x44
   4d690:	str	r6, [sp, #60]	; 0x3c
   4d694:	mov	fp, r8
   4d698:	mov	sl, r3
   4d69c:	mov	r5, r1
   4d6a0:	mov	r6, r8
   4d6a4:	add	r0, pc, r0
   4d6a8:	str	r0, [sp, #48]	; 0x30
   4d6ac:	str	r7, [sp, #64]	; 0x40
   4d6b0:	str	r4, [sp, #72]	; 0x48
   4d6b4:	mov	r0, sl
   4d6b8:	bl	723c <strlen@plt>
   4d6bc:	add	r4, fp, #1
   4d6c0:	mov	r7, r0
   4d6c4:	ldr	r0, [sp, #80]	; 0x50
   4d6c8:	bl	723c <strlen@plt>
   4d6cc:	mov	r3, #1
   4d6d0:	ldr	r1, [sp, #40]	; 0x28
   4d6d4:	ldr	r9, [sp, #88]	; 0x58
   4d6d8:	add	r7, r7, r0
   4d6dc:	add	r4, r4, r7
   4d6e0:	add	r2, r4, #2
   4d6e4:	mov	r0, r5
   4d6e8:	bl	2ef28 <blkid_probe_get_size@plt+0x27a10>
   4d6ec:	subs	r8, r0, #0
   4d6f0:	beq	4e340 <blkid_probe_get_size@plt+0x46e28>
   4d6f4:	ldr	r2, [sp, #88]	; 0x58
   4d6f8:	cmp	r9, r2
   4d6fc:	bcs	4d710 <blkid_probe_get_size@plt+0x461f8>
   4d700:	sub	r2, r2, r9
   4d704:	add	r0, r8, r9
   4d708:	mov	r1, #0
   4d70c:	bl	6c84 <memset@plt>
   4d710:	ldr	r3, [sp, #80]	; 0x50
   4d714:	mov	r2, #0
   4d718:	str	r2, [sp, #4]
   4d71c:	add	r1, r7, #2
   4d720:	mov	r2, sl
   4d724:	add	r0, r8, fp
   4d728:	str	r3, [sp]
   4d72c:	ldr	r3, [sp, #48]	; 0x30
   4d730:	str	r8, [sp, #84]	; 0x54
   4d734:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   4d738:	ldr	r1, [sp, #44]	; 0x2c
   4d73c:	ldr	r0, [sp, #36]	; 0x24
   4d740:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
   4d744:	add	fp, r4, #1
   4d748:	add	r9, r6, #1
   4d74c:	subs	sl, r0, #0
   4d750:	beq	4de88 <blkid_probe_get_size@plt+0x46970>
   4d754:	mov	r6, r9
   4d758:	b	4d6b4 <blkid_probe_get_size@plt+0x4619c>
   4d75c:	bl	732c <__errno_location@plt>
   4d760:	cmp	r8, #2
   4d764:	ldr	r1, [r0]
   4d768:	bgt	4d7f4 <blkid_probe_get_size@plt+0x462dc>
   4d76c:	eor	r4, r1, r1, asr #31
   4d770:	sub	r4, r4, r1, asr #31
   4d774:	add	r8, sp, #156	; 0x9c
   4d778:	uxtb	r4, r4
   4d77c:	rsb	r4, r4, #0
   4d780:	mov	r0, r8
   4d784:	bl	2dd5c <blkid_probe_get_size@plt+0x26844>
   4d788:	mov	r0, r6
   4d78c:	bl	2dd5c <blkid_probe_get_size@plt+0x26844>
   4d790:	ldr	r3, [sp, #32]
   4d794:	ldr	r2, [sp, #548]	; 0x224
   4d798:	mov	r0, r4
   4d79c:	ldr	r3, [r3]
   4d7a0:	cmp	r2, r3
   4d7a4:	bne	4e9b0 <blkid_probe_get_size@plt+0x47498>
   4d7a8:	add	sp, sp, #556	; 0x22c
   4d7ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4d7b0:	bl	732c <__errno_location@plt>
   4d7b4:	ldr	ip, [pc, #1876]	; 4df10 <blkid_probe_get_size@plt+0x469f8>
   4d7b8:	ldr	lr, [pc, #1876]	; 4df14 <blkid_probe_get_size@plt+0x469fc>
   4d7bc:	add	ip, pc, ip
   4d7c0:	add	ip, ip, #1040	; 0x410
   4d7c4:	add	lr, pc, lr
   4d7c8:	add	ip, ip, #8
   4d7cc:	ldr	r2, [pc, #1860]	; 4df18 <blkid_probe_get_size@plt+0x46a00>
   4d7d0:	ldr	r3, [pc, #1860]	; 4df1c <blkid_probe_get_size@plt+0x46a04>
   4d7d4:	add	r2, pc, r2
   4d7d8:	ldr	r1, [r0]
   4d7dc:	str	r7, [sp, #8]
   4d7e0:	stm	sp, {ip, lr}
   4d7e4:	ldr	r0, [pc, #2164]	; 4e060 <blkid_probe_get_size@plt+0x46b48>
   4d7e8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4d7ec:	mov	r4, r0
   4d7f0:	b	4d780 <blkid_probe_get_size@plt+0x46268>
   4d7f4:	ldr	r3, [pc, #1828]	; 4df20 <blkid_probe_get_size@plt+0x46a08>
   4d7f8:	ldr	r2, [pc, #1828]	; 4df24 <blkid_probe_get_size@plt+0x46a0c>
   4d7fc:	add	r3, pc, r3
   4d800:	add	r2, pc, r2
   4d804:	str	r2, [sp, #4]
   4d808:	add	r3, r3, #1040	; 0x410
   4d80c:	ldr	r2, [pc, #1812]	; 4df28 <blkid_probe_get_size@plt+0x46a10>
   4d810:	add	r3, r3, #8
   4d814:	str	r3, [sp]
   4d818:	str	r7, [sp, #8]
   4d81c:	ldr	r3, [pc, #1800]	; 4df2c <blkid_probe_get_size@plt+0x46a14>
   4d820:	add	r2, pc, r2
   4d824:	ldr	r0, [pc, #2100]	; 4e060 <blkid_probe_get_size@plt+0x46b48>
   4d828:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4d82c:	add	r8, sp, #156	; 0x9c
   4d830:	mov	r4, r0
   4d834:	b	4d780 <blkid_probe_get_size@plt+0x46268>
   4d838:	ldr	r3, [pc, #1776]	; 4df30 <blkid_probe_get_size@plt+0x46a18>
   4d83c:	add	r3, pc, r3
   4d840:	ldr	r3, [r3, #24]
   4d844:	cmp	r3, #2
   4d848:	mvnle	r4, #21
   4d84c:	bgt	4d9f0 <blkid_probe_get_size@plt+0x464d8>
   4d850:	mov	r0, fp
   4d854:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   4d858:	add	r8, sp, #156	; 0x9c
   4d85c:	b	4d780 <blkid_probe_get_size@plt+0x46268>
   4d860:	ldr	r2, [pc, #1740]	; 4df34 <blkid_probe_get_size@plt+0x46a1c>
   4d864:	ldr	r1, [pc, #1740]	; 4df38 <blkid_probe_get_size@plt+0x46a20>
   4d868:	add	r2, pc, r2
   4d86c:	add	r2, r2, #1024	; 0x400
   4d870:	add	r2, r2, #4
   4d874:	str	r2, [sp]
   4d878:	ldr	r2, [pc, #1724]	; 4df3c <blkid_probe_get_size@plt+0x46a24>
   4d87c:	mov	r3, #600	; 0x258
   4d880:	add	r2, pc, r2
   4d884:	add	r1, pc, r1
   4d888:	mov	r0, #1
   4d88c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d890:	ldr	r2, [pc, #1704]	; 4df40 <blkid_probe_get_size@plt+0x46a28>
   4d894:	ldr	r1, [pc, #1704]	; 4df44 <blkid_probe_get_size@plt+0x46a2c>
   4d898:	add	r2, pc, r2
   4d89c:	add	r2, r2, #1024	; 0x400
   4d8a0:	add	r2, r2, #4
   4d8a4:	str	r2, [sp]
   4d8a8:	ldr	r2, [pc, #1688]	; 4df48 <blkid_probe_get_size@plt+0x46a30>
   4d8ac:	ldr	r3, [pc, #1688]	; 4df4c <blkid_probe_get_size@plt+0x46a34>
   4d8b0:	add	r2, pc, r2
   4d8b4:	add	r1, pc, r1
   4d8b8:	mov	r0, #1
   4d8bc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d8c0:	ldr	r3, [pc, #1672]	; 4df50 <blkid_probe_get_size@plt+0x46a38>
   4d8c4:	ldr	r1, [pc, #1672]	; 4df54 <blkid_probe_get_size@plt+0x46a3c>
   4d8c8:	add	r3, pc, r3
   4d8cc:	add	r3, r3, #1040	; 0x410
   4d8d0:	ldr	r2, [pc, #1664]	; 4df58 <blkid_probe_get_size@plt+0x46a40>
   4d8d4:	add	r3, r3, #8
   4d8d8:	add	r1, pc, r1
   4d8dc:	mov	r0, #1
   4d8e0:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4d8e4:	add	r8, sp, #156	; 0x9c
   4d8e8:	mov	r4, r0
   4d8ec:	b	4d780 <blkid_probe_get_size@plt+0x46268>
   4d8f0:	ldr	r3, [pc, #1636]	; 4df5c <blkid_probe_get_size@plt+0x46a44>
   4d8f4:	ldr	r1, [pc, #1636]	; 4df60 <blkid_probe_get_size@plt+0x46a48>
   4d8f8:	add	r3, pc, r3
   4d8fc:	add	r3, r3, #1040	; 0x410
   4d900:	ldr	r2, [pc, #1628]	; 4df64 <blkid_probe_get_size@plt+0x46a4c>
   4d904:	add	r3, r3, #8
   4d908:	add	r1, pc, r1
   4d90c:	mov	r0, #1
   4d910:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4d914:	mov	r4, r0
   4d918:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4d91c:	mov	r9, r3
   4d920:	str	r3, [sp, #44]	; 0x2c
   4d924:	mov	r3, #1
   4d928:	str	r3, [sp, #40]	; 0x28
   4d92c:	mov	r1, #4
   4d930:	ldr	r0, [sp, #40]	; 0x28
   4d934:	bl	7164 <calloc@plt>
   4d938:	ldr	r8, [sp, #84]	; 0x54
   4d93c:	subs	r3, r0, #0
   4d940:	str	r3, [sp, #40]	; 0x28
   4d944:	beq	4ecc4 <blkid_probe_get_size@plt+0x477ac>
   4d948:	cmp	r8, #0
   4d94c:	str	r8, [sp, #80]	; 0x50
   4d950:	beq	4da3c <blkid_probe_get_size@plt+0x46524>
   4d954:	ldrb	r3, [r8]
   4d958:	cmp	r3, #0
   4d95c:	beq	4da3c <blkid_probe_get_size@plt+0x46524>
   4d960:	ldr	r3, [sp, #40]	; 0x28
   4d964:	cmp	r9, #0
   4d968:	str	r8, [r3]
   4d96c:	beq	4d9c0 <blkid_probe_get_size@plt+0x464a8>
   4d970:	ldr	r1, [sp, #40]	; 0x28
   4d974:	mov	r2, #0
   4d978:	str	r5, [sp, #48]	; 0x30
   4d97c:	str	r4, [sp, #52]	; 0x34
   4d980:	mov	r5, r1
   4d984:	mov	r4, r2
   4d988:	mov	r0, r8
   4d98c:	bl	723c <strlen@plt>
   4d990:	add	r4, r4, #1
   4d994:	add	r0, r0, #1
   4d998:	add	r8, r8, r0
   4d99c:	cmp	r8, #0
   4d9a0:	str	r8, [sp, #80]	; 0x50
   4d9a4:	beq	4da34 <blkid_probe_get_size@plt+0x4651c>
   4d9a8:	ldrb	r3, [r8]
   4d9ac:	cmp	r3, #0
   4d9b0:	beq	4da34 <blkid_probe_get_size@plt+0x4651c>
   4d9b4:	cmp	r9, r4
   4d9b8:	str	r8, [r5, #4]!
   4d9bc:	bne	4d988 <blkid_probe_get_size@plt+0x46470>
   4d9c0:	ldr	r2, [pc, #1440]	; 4df68 <blkid_probe_get_size@plt+0x46a50>
   4d9c4:	ldr	r1, [pc, #1440]	; 4df6c <blkid_probe_get_size@plt+0x46a54>
   4d9c8:	add	r2, pc, r2
   4d9cc:	add	r2, r2, #1088	; 0x440
   4d9d0:	add	r2, r2, #8
   4d9d4:	str	r2, [sp]
   4d9d8:	ldr	r2, [pc, #1424]	; 4df70 <blkid_probe_get_size@plt+0x46a58>
   4d9dc:	ldr	r3, [pc, #1424]	; 4df74 <blkid_probe_get_size@plt+0x46a5c>
   4d9e0:	add	r2, pc, r2
   4d9e4:	add	r1, pc, r1
   4d9e8:	mov	r0, #0
   4d9ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4d9f0:	ldr	r3, [pc, #1408]	; 4df78 <blkid_probe_get_size@plt+0x46a60>
   4d9f4:	ldr	r2, [pc, #1408]	; 4df7c <blkid_probe_get_size@plt+0x46a64>
   4d9f8:	add	r3, pc, r3
   4d9fc:	add	r2, pc, r2
   4da00:	str	r2, [sp, #4]
   4da04:	add	r3, r3, #1040	; 0x410
   4da08:	ldr	r2, [pc, #1392]	; 4df80 <blkid_probe_get_size@plt+0x46a68>
   4da0c:	add	r3, r3, #8
   4da10:	str	r3, [sp]
   4da14:	str	r7, [sp, #8]
   4da18:	ldr	r3, [pc, #1380]	; 4df84 <blkid_probe_get_size@plt+0x46a6c>
   4da1c:	add	r2, pc, r2
   4da20:	mov	r1, #1073741846	; 0x40000016
   4da24:	ldr	r0, [pc, #1588]	; 4e060 <blkid_probe_get_size@plt+0x46b48>
   4da28:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4da2c:	mov	r4, r0
   4da30:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4da34:	ldr	r5, [sp, #48]	; 0x30
   4da38:	ldr	r4, [sp, #52]	; 0x34
   4da3c:	ldr	r8, [sp, #36]	; 0x24
   4da40:	ldr	r0, [r8, #148]	; 0x94
   4da44:	bl	69f0 <free@plt>
   4da48:	ldr	r2, [sp, #84]	; 0x54
   4da4c:	mov	r3, #0
   4da50:	str	r2, [r8, #148]	; 0x94
   4da54:	str	r3, [sp, #84]	; 0x54
   4da58:	ldr	r3, [sp, #44]	; 0x2c
   4da5c:	ldr	r0, [r8, #144]	; 0x90
   4da60:	str	r3, [r8, #152]	; 0x98
   4da64:	bl	69f0 <free@plt>
   4da68:	ldrb	r3, [r8, #212]	; 0xd4
   4da6c:	ldr	r1, [sp, #40]	; 0x28
   4da70:	bic	r3, r3, #16
   4da74:	str	r1, [r8, #144]	; 0x90
   4da78:	strb	r3, [r8, #212]	; 0xd4
   4da7c:	ldr	r0, [sp, #84]	; 0x54
   4da80:	bl	69f0 <free@plt>
   4da84:	ldr	r3, [pc, #1276]	; 4df88 <blkid_probe_get_size@plt+0x46a70>
   4da88:	ldr	r2, [sp, #36]	; 0x24
   4da8c:	add	r3, pc, r3
   4da90:	ldr	r3, [r3, #24]
   4da94:	ldr	r2, [r2, #144]	; 0x90
   4da98:	cmp	r3, #6
   4da9c:	str	r2, [sp, #36]	; 0x24
   4daa0:	bgt	4dd68 <blkid_probe_get_size@plt+0x46850>
   4daa4:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4daa8:	add	r8, sp, #292	; 0x124
   4daac:	str	r0, [sp, #40]	; 0x28
   4dab0:	mov	r0, r8
   4dab4:	bl	6bc4 <sigfillset@plt>
   4dab8:	cmp	r0, #0
   4dabc:	blt	4e92c <blkid_probe_get_size@plt+0x47414>
   4dac0:	add	r9, sp, #164	; 0xa4
   4dac4:	mov	r1, r8
   4dac8:	mov	r2, r9
   4dacc:	mov	r0, #2
   4dad0:	bl	74b8 <sigprocmask@plt>
   4dad4:	cmp	r0, #0
   4dad8:	blt	4debc <blkid_probe_get_size@plt+0x469a4>
   4dadc:	bl	6fc0 <fork@plt>
   4dae0:	subs	r3, r0, #0
   4dae4:	str	r3, [sp, #76]	; 0x4c
   4dae8:	blt	4dda8 <blkid_probe_get_size@plt+0x46890>
   4daec:	beq	4e1c0 <blkid_probe_get_size@plt+0x46ca8>
   4daf0:	ldr	r3, [pc, #1172]	; 4df8c <blkid_probe_get_size@plt+0x46a74>
   4daf4:	add	r3, pc, r3
   4daf8:	ldr	r3, [r3, #20]
   4dafc:	cmp	r3, #6
   4db00:	ble	4db50 <blkid_probe_get_size@plt+0x46638>
   4db04:	ldr	r3, [pc, #1156]	; 4df90 <blkid_probe_get_size@plt+0x46a78>
   4db08:	ldr	r2, [pc, #1156]	; 4df94 <blkid_probe_get_size@plt+0x46a7c>
   4db0c:	add	r3, pc, r3
   4db10:	add	r2, pc, r2
   4db14:	ldr	r1, [pc, #1148]	; 4df98 <blkid_probe_get_size@plt+0x46a80>
   4db18:	ldr	r0, [sp, #76]	; 0x4c
   4db1c:	add	r3, r3, #1136	; 0x470
   4db20:	str	r2, [sp, #4]
   4db24:	ldr	r2, [pc, #1136]	; 4df9c <blkid_probe_get_size@plt+0x46a84>
   4db28:	add	r1, pc, r1
   4db2c:	add	r3, r3, #8
   4db30:	str	r0, [sp, #12]
   4db34:	str	r3, [sp]
   4db38:	str	r1, [sp, #8]
   4db3c:	ldr	r3, [pc, #1116]	; 4dfa0 <blkid_probe_get_size@plt+0x46a88>
   4db40:	add	r2, pc, r2
   4db44:	mov	r1, #0
   4db48:	mov	r0, #7
   4db4c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4db50:	mov	r1, r9
   4db54:	mov	r2, #0
   4db58:	mov	r0, #2
   4db5c:	bl	74b8 <sigprocmask@plt>
   4db60:	ldr	r0, [sp, #152]	; 0x98
   4db64:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4db68:	add	r9, sp, #88	; 0x58
   4db6c:	str	r9, [sp, #40]	; 0x28
   4db70:	mov	r8, #1
   4db74:	str	r0, [sp, #152]	; 0x98
   4db78:	ldr	r0, [sp, #160]	; 0xa0
   4db7c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4db80:	ldr	r2, [sp, #76]	; 0x4c
   4db84:	ldrd	r4, [r5, #48]	; 0x30
   4db88:	str	r2, [sp, #92]	; 0x5c
   4db8c:	mov	r2, #0
   4db90:	str	r2, [sp, #120]	; 0x78
   4db94:	str	r2, [sp, #140]	; 0x8c
   4db98:	strd	r4, [r9, #24]
   4db9c:	add	r5, pc, #844	; 0x34c
   4dba0:	ldrd	r4, [r5]
   4dba4:	add	r3, sp, #552	; 0x228
   4dba8:	ldr	r1, [sp, #148]	; 0x94
   4dbac:	str	r2, [r3, #-468]!	; 0xfffffe2c
   4dbb0:	strd	r4, [r9, #8]
   4dbb4:	ldr	r2, [sp, #156]	; 0x9c
   4dbb8:	ldr	r4, [pc, #996]	; 4dfa4 <blkid_probe_get_size@plt+0x46a8c>
   4dbbc:	mov	r5, #0
   4dbc0:	str	r2, [sp, #128]	; 0x80
   4dbc4:	mov	r2, #16384	; 0x4000
   4dbc8:	strd	r4, [r9, #16]
   4dbcc:	str	r7, [sp, #88]	; 0x58
   4dbd0:	str	sl, [sp, #132]	; 0x84
   4dbd4:	strb	r8, [sp, #120]	; 0x78
   4dbd8:	str	r1, [sp, #124]	; 0x7c
   4dbdc:	str	r2, [sp, #136]	; 0x88
   4dbe0:	str	r0, [sp, #160]	; 0xa0
   4dbe4:	mov	r0, r3
   4dbe8:	bl	31dbc <blkid_probe_get_size@plt+0x2a8a4>
   4dbec:	subs	r4, r0, #0
   4dbf0:	blt	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4dbf4:	ldrd	r2, [r9, #16]
   4dbf8:	orrs	r3, r2, r3
   4dbfc:	bne	4e75c <blkid_probe_get_size@plt+0x47244>
   4dc00:	ldr	r2, [sp, #124]	; 0x7c
   4dc04:	ldr	r5, [sp, #84]	; 0x54
   4dc08:	cmp	r2, #0
   4dc0c:	bge	4e654 <blkid_probe_get_size@plt+0x4713c>
   4dc10:	ldr	r2, [sp, #128]	; 0x80
   4dc14:	cmp	r2, #0
   4dc18:	blt	4dc44 <blkid_probe_get_size@plt+0x4672c>
   4dc1c:	ldr	r3, [sp, #40]	; 0x28
   4dc20:	mov	r0, r5
   4dc24:	str	r3, [sp]
   4dc28:	ldr	r3, [pc, #888]	; 4dfa8 <blkid_probe_get_size@plt+0x46a90>
   4dc2c:	mov	r1, #0
   4dc30:	add	r3, pc, r3
   4dc34:	bl	4aeb4 <blkid_probe_get_size@plt+0x4399c>
   4dc38:	subs	r4, r0, #0
   4dc3c:	blt	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4dc40:	ldr	r5, [sp, #84]	; 0x54
   4dc44:	cmp	r5, #0
   4dc48:	beq	4ea14 <blkid_probe_get_size@plt+0x474fc>
   4dc4c:	cmp	r5, #1
   4dc50:	beq	4e42c <blkid_probe_get_size@plt+0x46f14>
   4dc54:	ldr	r8, [sp, #92]	; 0x5c
   4dc58:	cmp	r8, #1
   4dc5c:	ble	4e9b4 <blkid_probe_get_size@plt+0x4749c>
   4dc60:	ldr	r3, [r5, #264]	; 0x108
   4dc64:	cmp	r3, #5
   4dc68:	beq	4eaf8 <blkid_probe_get_size@plt+0x475e0>
   4dc6c:	ldr	r4, [r5, #228]	; 0xe4
   4dc70:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4dc74:	cmp	r4, r0
   4dc78:	bne	4eb40 <blkid_probe_get_size@plt+0x47628>
   4dc7c:	mov	r2, #0
   4dc80:	mov	r1, r2
   4dc84:	add	r0, r5, #200	; 0xc8
   4dc88:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   4dc8c:	subs	r4, r0, #0
   4dc90:	blt	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4dc94:	mov	r1, r8
   4dc98:	ldr	r0, [r5, #200]	; 0xc8
   4dc9c:	bl	43a98 <blkid_probe_get_size@plt+0x3c580>
   4dca0:	subs	r3, r0, #0
   4dca4:	str	r3, [sp, #24]
   4dca8:	bne	4ecd0 <blkid_probe_get_size@plt+0x477b8>
   4dcac:	mov	r2, #7
   4dcb0:	mov	r1, #1
   4dcb4:	mov	r0, r5
   4dcb8:	bl	31cc8 <blkid_probe_get_size@plt+0x2a7b0>
   4dcbc:	subs	r9, r0, #0
   4dcc0:	beq	4e9fc <blkid_probe_get_size@plt+0x474e4>
   4dcc4:	ldrb	r2, [r9, #24]
   4dcc8:	ldr	r3, [pc, #732]	; 4dfac <blkid_probe_get_size@plt+0x46a94>
   4dccc:	ldr	r1, [sp, #40]	; 0x28
   4dcd0:	add	r3, pc, r3
   4dcd4:	orr	r2, r2, #224	; 0xe0
   4dcd8:	mov	r0, #4
   4dcdc:	str	r1, [r9, #12]
   4dce0:	strb	r2, [r9, #24]
   4dce4:	str	r8, [r9, #212]	; 0xd4
   4dce8:	str	r3, [r9, #80]	; 0x50
   4dcec:	str	r0, [r9, #216]	; 0xd8
   4dcf0:	mov	r1, r8
   4dcf4:	mov	r2, r9
   4dcf8:	ldr	r0, [r5, #200]	; 0xc8
   4dcfc:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   4dd00:	subs	r4, r0, #0
   4dd04:	bge	4eaa0 <blkid_probe_get_size@plt+0x47588>
   4dd08:	mov	r0, r9
   4dd0c:	bl	313e4 <blkid_probe_get_size@plt+0x29ecc>
   4dd10:	ldr	r0, [sp, #84]	; 0x54
   4dd14:	cmp	r0, #0
   4dd18:	beq	4e48c <blkid_probe_get_size@plt+0x46f74>
   4dd1c:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4dd20:	cmp	r4, #0
   4dd24:	blt	4e48c <blkid_probe_get_size@plt+0x46f74>
   4dd28:	ldr	r3, [sp, #140]	; 0x8c
   4dd2c:	mov	r2, #0
   4dd30:	strb	r2, [sl, r3]
   4dd34:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4dd38:	ldr	r3, [pc, #624]	; 4dfb0 <blkid_probe_get_size@plt+0x46a98>
   4dd3c:	ldr	r2, [pc, #624]	; 4dfb4 <blkid_probe_get_size@plt+0x46a9c>
   4dd40:	add	r3, pc, r3
   4dd44:	add	r3, r3, #1056	; 0x420
   4dd48:	ldr	r1, [pc, #616]	; 4dfb8 <blkid_probe_get_size@plt+0x46aa0>
   4dd4c:	add	r3, r3, #12
   4dd50:	str	r3, [sp]
   4dd54:	ldr	r0, [sp, #36]	; 0x24
   4dd58:	ldr	r3, [pc, #604]	; 4dfbc <blkid_probe_get_size@plt+0x46aa4>
   4dd5c:	add	r2, pc, r2
   4dd60:	add	r1, pc, r1
   4dd64:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4dd68:	ldr	r3, [pc, #592]	; 4dfc0 <blkid_probe_get_size@plt+0x46aa8>
   4dd6c:	ldr	r2, [pc, #592]	; 4dfc4 <blkid_probe_get_size@plt+0x46aac>
   4dd70:	add	r3, pc, r3
   4dd74:	add	r2, pc, r2
   4dd78:	str	r2, [sp, #4]
   4dd7c:	add	r3, r3, #1040	; 0x410
   4dd80:	ldr	r2, [pc, #576]	; 4dfc8 <blkid_probe_get_size@plt+0x46ab0>
   4dd84:	add	r3, r3, #8
   4dd88:	str	r3, [sp]
   4dd8c:	str	r7, [sp, #8]
   4dd90:	mov	r3, #636	; 0x27c
   4dd94:	add	r2, pc, r2
   4dd98:	mov	r1, #0
   4dd9c:	ldr	r0, [pc, #552]	; 4dfcc <blkid_probe_get_size@plt+0x46ab4>
   4dda0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4dda4:	b	4daa4 <blkid_probe_get_size@plt+0x4658c>
   4dda8:	bl	732c <__errno_location@plt>
   4ddac:	mov	r1, r9
   4ddb0:	mov	r2, #0
   4ddb4:	ldr	r4, [r0]
   4ddb8:	mov	r0, #2
   4ddbc:	bl	74b8 <sigprocmask@plt>
   4ddc0:	ldr	r3, [pc, #520]	; 4dfd0 <blkid_probe_get_size@plt+0x46ab8>
   4ddc4:	add	r3, pc, r3
   4ddc8:	ldr	r3, [r3, #20]
   4ddcc:	cmp	r3, #2
   4ddd0:	bgt	4e4f0 <blkid_probe_get_size@plt+0x46fd8>
   4ddd4:	eor	r0, r4, r4, asr #31
   4ddd8:	sub	r0, r0, r4, asr #31
   4dddc:	uxtb	r0, r0
   4dde0:	rsb	r0, r0, #0
   4dde4:	cmp	r0, #0
   4dde8:	blt	4de24 <blkid_probe_get_size@plt+0x4690c>
   4ddec:	bne	4db60 <blkid_probe_get_size@plt+0x46648>
   4ddf0:	ldr	r1, [sp, #160]	; 0xa0
   4ddf4:	ldr	r0, [sp, #152]	; 0x98
   4ddf8:	bl	46e0c <blkid_probe_get_size@plt+0x3f8f4>
   4ddfc:	cmp	r0, #0
   4de00:	blt	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4de04:	bl	46c1c <blkid_probe_get_size@plt+0x3f704>
   4de08:	bl	3aad0 <blkid_probe_get_size@plt+0x335b8>
   4de0c:	ldr	r2, [sp, #36]	; 0x24
   4de10:	mov	r1, fp
   4de14:	ldr	r0, [fp]
   4de18:	bl	6ccc <execve@plt>
   4de1c:	mov	r0, #1
   4de20:	bl	72f0 <_exit@plt>
   4de24:	ldr	r3, [pc, #424]	; 4dfd4 <blkid_probe_get_size@plt+0x46abc>
   4de28:	add	r3, pc, r3
   4de2c:	ldr	r3, [r3, #24]
   4de30:	cmp	r3, #2
   4de34:	rsble	r4, r0, #0
   4de38:	uxtble	r4, r4
   4de3c:	rsble	r4, r4, #0
   4de40:	ble	4d850 <blkid_probe_get_size@plt+0x46338>
   4de44:	ldr	r3, [pc, #396]	; 4dfd8 <blkid_probe_get_size@plt+0x46ac0>
   4de48:	ldr	r2, [pc, #396]	; 4dfdc <blkid_probe_get_size@plt+0x46ac4>
   4de4c:	add	r3, pc, r3
   4de50:	add	r2, pc, r2
   4de54:	str	r2, [sp, #4]
   4de58:	add	r3, r3, #1040	; 0x410
   4de5c:	ldr	r2, [pc, #380]	; 4dfe0 <blkid_probe_get_size@plt+0x46ac8>
   4de60:	add	r3, r3, #8
   4de64:	mov	r1, r0
   4de68:	str	r3, [sp]
   4de6c:	str	r7, [sp, #8]
   4de70:	mov	r3, #640	; 0x280
   4de74:	add	r2, pc, r2
   4de78:	ldr	r0, [pc, #480]	; 4e060 <blkid_probe_get_size@plt+0x46b48>
   4de7c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4de80:	mov	r4, r0
   4de84:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4de88:	mov	r3, r6
   4de8c:	cmn	r3, #2
   4de90:	addne	r3, r3, #2
   4de94:	moveq	r3, #1
   4de98:	str	fp, [sp, #44]	; 0x2c
   4de9c:	ldr	r5, [sp, #56]	; 0x38
   4dea0:	ldr	fp, [sp, #52]	; 0x34
   4dea4:	ldr	r7, [sp, #64]	; 0x40
   4dea8:	ldr	sl, [sp, #68]	; 0x44
   4deac:	ldr	r4, [sp, #72]	; 0x48
   4deb0:	ldr	r6, [sp, #60]	; 0x3c
   4deb4:	str	r3, [sp, #40]	; 0x28
   4deb8:	b	4d92c <blkid_probe_get_size@plt+0x46414>
   4debc:	bl	732c <__errno_location@plt>
   4dec0:	ldr	r3, [pc, #284]	; 4dfe4 <blkid_probe_get_size@plt+0x46acc>
   4dec4:	add	r3, pc, r3
   4dec8:	ldr	r3, [r3, #20]
   4decc:	cmp	r3, #2
   4ded0:	ldr	r1, [r0]
   4ded4:	bgt	4e6d0 <blkid_probe_get_size@plt+0x471b8>
   4ded8:	eor	r0, r1, r1, asr #31
   4dedc:	sub	r0, r0, r1, asr #31
   4dee0:	uxtb	r0, r0
   4dee4:	rsb	r0, r0, #0
   4dee8:	b	4dde4 <blkid_probe_get_size@plt+0x468cc>
   4deec:	nop			; (mov r0, r0)
   4def0:	teqeq	r1, r0, lsl #26
   4def4:	andeq	r0, r0, r0
   4def8:	andeq	sl, r4, ip, lsl r6
   4defc:	andeq	r0, r0, ip, lsr r4
   4df00:	andeq	r0, r8, r0, lsl #16
   4df04:	andeq	sl, r4, r4, lsl #23
   4df08:	andeq	r8, r1, ip, ror #30
   4df0c:	strdeq	r0, [r2], -ip
   4df10:	andeq	r2, r2, r4, lsl #30
   4df14:	andeq	r4, r2, ip, lsr #27
   4df18:	andeq	r7, r1, r8, ror #19
   4df1c:	andeq	r0, r0, r3, ror #4
   4df20:	andeq	r2, r2, r4, asr #29
   4df24:	andeq	r4, r2, r0, ror sp
   4df28:	muleq	r1, ip, r9
   4df2c:	andeq	r0, r0, pc, asr r2
   4df30:	andeq	sl, r4, ip, ror #17
   4df34:	andeq	r2, r2, r8, asr lr
   4df38:	andeq	lr, r1, r4, lsr #7
   4df3c:	andeq	r7, r1, ip, lsr r9
   4df40:	andeq	r2, r2, r8, lsr #28
   4df44:	strdeq	r9, [r1], -r0
   4df48:	andeq	r7, r1, ip, lsl #18
   4df4c:	andeq	r0, r0, r9, asr r2
   4df50:	strdeq	r2, [r2], -r8
   4df54:	andeq	r7, r1, r4, ror #17
   4df58:	andeq	r0, r0, r7, ror #4
   4df5c:	andeq	r2, r2, r8, asr #27
   4df60:			; <UNDEFINED> instruction: 0x000178b4
   4df64:	andeq	r0, r0, r3, ror r2
   4df68:	strdeq	r2, [r2], -r8
   4df6c:	ldrdeq	r4, [r2], -r0
   4df70:			; <UNDEFINED> instruction: 0x00019db0
   4df74:	andeq	r0, r0, lr, ror #3
   4df78:	andeq	r2, r2, r8, asr #25
   4df7c:	andeq	r4, r2, r0, lsr #23
   4df80:	andeq	r7, r1, r0, lsr #15
   4df84:	andeq	r0, r0, fp, ror #4
   4df88:	muleq	r4, ip, r6
   4df8c:	andeq	sl, r4, r4, lsr r6
   4df90:			; <UNDEFINED> instruction: 0x00022bb4
   4df94:	andeq	r4, r2, r0, lsr fp
   4df98:	andeq	r4, r2, r0, lsl fp
   4df9c:	andeq	r1, r2, r4, lsr #21
   4dfa0:	strdeq	r0, [r0], -lr
   4dfa4:	orrseq	r8, r3, #0, 14
   4dfa8:			; <UNDEFINED> instruction: 0xfffbde1c
   4dfac:			; <UNDEFINED> instruction: 0xfffbd8f0
   4dfb0:	andeq	r2, r2, r0, lsl #19
   4dfb4:	andeq	r9, r1, r4, lsr sl
   4dfb8:	andeq	sp, r1, r0, lsl #4
   4dfbc:	andeq	r0, r0, pc, lsl #4
   4dfc0:	andeq	r2, r2, r0, asr r9
   4dfc4:	andeq	r4, r2, r8, ror #16
   4dfc8:	andeq	r7, r1, r8, lsr #8
   4dfcc:	andeq	r0, r0, r7, lsl #8
   4dfd0:	andeq	sl, r4, r4, ror #6
   4dfd4:	andeq	sl, r4, r0, lsl #6
   4dfd8:	andeq	r2, r2, r4, ror r8
   4dfdc:	andeq	r4, r2, r4, lsl sl
   4dfe0:	andeq	r7, r1, r8, asr #6
   4dfe4:	andeq	sl, r4, r4, ror #4
   4dfe8:	andeq	r4, r2, r4, ror #8
   4dfec:	andeq	r0, r0, r0, asr r4
   4dff0:	andeq	r4, r2, r4, lsr r4
   4dff4:	andeq	r9, r4, r4, lsl #30
   4dff8:	andeq	r2, r2, r4, lsl #9
   4dffc:	andeq	r4, r2, r0, asr #8
   4e000:	andeq	r1, r2, ip, lsl #7
   4e004:	andeq	r0, r0, r7, lsr r1
   4e008:	andeq	r2, r2, r8, lsr r4
   4e00c:			; <UNDEFINED> instruction: 0x00049dbc
   4e010:	andeq	r2, r2, r8, lsr r3
   4e014:	andeq	r4, r2, r0, lsr r2
   4e018:	andeq	r6, r1, r4, lsl #28
   4e01c:	andeq	r0, r0, sl, ror r2
   4e020:	andeq	r9, r4, r4, asr sp
   4e024:	ldrdeq	r2, [r2], -r4
   4e028:	andeq	r4, r2, r0, asr r4
   4e02c:	ldrdeq	r1, [r2], -ip
   4e030:	andeq	r0, r0, r3, asr #10
   4e034:	andeq	r9, r4, r8, ror #22
   4e038:	andeq	r0, r0, r4, asr r0
   4e03c:	andeq	r2, r2, r0, ror r2
   4e040:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   4e044:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   4e048:	andeq	r0, r0, sl, ror #8
   4e04c:	muleq	r4, r8, ip
   4e050:	andeq	r2, r2, ip, lsl #4
   4e054:	andeq	r4, r2, r4, ror #7
   4e058:	andeq	r6, r1, r0, ror #25
   4e05c:	muleq	r0, lr, r2
   4e060:	andeq	r0, r0, r3, lsl #8
   4e064:	andeq	r2, r2, r8, asr #3
   4e068:	andeq	r4, r2, r8, lsr #2
   4e06c:	andeq	r1, r2, r8, asr #1
   4e070:	strdeq	r0, [r0], -r9
   4e074:	andeq	sl, r4, ip, lsr r9
   4e078:	andeq	r4, r2, ip, lsr #1
   4e07c:	andeq	r9, r4, r8, ror #22
   4e080:	andeq	r9, r4, ip, lsr #22
   4e084:	andeq	r2, r2, ip, lsr #1
   4e088:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   4e08c:			; <UNDEFINED> instruction: 0x00020fb4
   4e090:	andeq	r0, r0, r2, asr r1
   4e094:			; <UNDEFINED> instruction: 0xfffbd3e4
   4e098:	andeq	r9, r4, r4, lsr #21
   4e09c:	andeq	r2, r2, r4, lsr #32
   4e0a0:	andeq	r4, r2, r4, lsl r1
   4e0a4:	andeq	r0, r2, ip, lsr #30
   4e0a8:	andeq	r0, r0, sp, lsl r5
   4e0ac:	andeq	r1, r2, r8, ror #31
   4e0b0:	andeq	r3, r2, r8, lsr #30
   4e0b4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   4e0b8:	andeq	r0, r0, sp, ror #9
   4e0bc:	andeq	r9, r4, r8, lsl sl
   4e0c0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   4e0c4:	andeq	r3, r2, ip, lsr pc
   4e0c8:	andeq	r0, r2, r0, lsr #29
   4e0cc:	andeq	r0, r0, pc, lsl r1
   4e0d0:			; <UNDEFINED> instruction: 0xfffbd140
   4e0d4:	strdeq	r6, [r1], -ip
   4e0d8:	andeq	r3, r2, r8, ror #27
   4e0dc:	andeq	r9, r4, r8, lsr #17
   4e0e0:	andeq	r1, r2, r8, lsr #28
   4e0e4:	andeq	r3, r2, r4, ror #29
   4e0e8:	andeq	r0, r2, r0, lsr sp
   4e0ec:	andeq	r0, r0, sp, ror #2
   4e0f0:	andeq	r9, r4, r4, asr #16
   4e0f4:	andeq	r1, r2, r4, asr #27
   4e0f8:	andeq	r3, r2, r0, lsr #30
   4e0fc:	andeq	r0, r2, ip, asr #25
   4e100:	andeq	r1, r2, ip, lsl #27
   4e104:	muleq	r2, ip, ip
   4e108:	muleq	r2, r8, ip
   4e10c:	andeq	r9, r4, r4, asr #15
   4e110:	andeq	r1, r2, r4, asr #26
   4e114:	andeq	r3, r2, r4, lsr sp
   4e118:	andeq	r0, r2, ip, asr #24
   4e11c:	andeq	r0, r0, pc, lsr r1
   4e120:	andeq	r1, r2, r4, lsl #26
   4e124:			; <UNDEFINED> instruction: 0x00023eb8
   4e128:	andeq	lr, r1, r4, ror #21
   4e12c:	andeq	r0, r0, fp, ror #8
   4e130:	andeq	r1, r2, r4, lsr #25
   4e134:	andeq	lr, r1, r8, lsl #21
   4e138:	andeq	r5, r2, r4, lsr ip
   4e13c:	andeq	r0, r0, r9, ror #8
   4e140:	strdeq	sl, [r4], -r4
   4e144:	ldrdeq	sl, [r4], -r8
   4e148:	andeq	r1, r2, r0, asr #23
   4e14c:	andeq	pc, r1, r0, ror #3
   4e150:	andeq	lr, r1, r0, lsr #19
   4e154:	andeq	r0, r0, pc, ror #8
   4e158:	andeq	r1, r2, r8, ror fp
   4e15c:			; <UNDEFINED> instruction: 0x0001f1b8
   4e160:	andeq	lr, r1, r8, asr r9
   4e164:	andeq	r9, r4, ip, ror r5
   4e168:	strdeq	r1, [r2], -ip
   4e16c:	andeq	r3, r2, ip, ror fp
   4e170:	andeq	r0, r2, r4, lsl #20
   4e174:	andeq	r1, r2, r0, asr #21
   4e178:	andeq	r3, r2, r4, asr #21
   4e17c:	andeq	r0, r2, r8, asr #19
   4e180:	andeq	r0, r0, pc, asr #2
   4e184:			; <UNDEFINED> instruction: 0xfffbcbc4
   4e188:			; <UNDEFINED> instruction: 0x000494b0
   4e18c:	andeq	r1, r2, r0, lsr sl
   4e190:	andeq	r3, r2, ip, ror #21
   4e194:	andeq	r0, r2, r8, lsr r9
   4e198:	andeq	r9, r4, r8, lsr r4
   4e19c:			; <UNDEFINED> instruction: 0x000219b4
   4e1a0:	andeq	r3, r2, ip, asr #21
   4e1a4:			; <UNDEFINED> instruction: 0x000208bc
   4e1a8:	andeq	r0, r0, r2, lsr #10
   4e1ac:	andeq	r9, r4, r8, ror #7
   4e1b0:	andeq	r1, r2, r8, ror #18
   4e1b4:	andeq	r3, r2, r0, lsr #21
   4e1b8:	andeq	r0, r2, r8, ror #16
   4e1bc:	andeq	r0, r0, r9, lsr #10
   4e1c0:	bl	39ae4 <blkid_probe_get_size@plt+0x325cc>
   4e1c4:	cmp	r0, #0
   4e1c8:	beq	4e680 <blkid_probe_get_size@plt+0x47168>
   4e1cc:	ldr	r1, [pc, #-492]	; 4dfe8 <blkid_probe_get_size@plt+0x46ad0>
   4e1d0:	mov	r0, #15
   4e1d4:	add	r1, pc, r1
   4e1d8:	bl	6c00 <prctl@plt>
   4e1dc:	cmp	r0, #0
   4e1e0:	blt	4e708 <blkid_probe_get_size@plt+0x471f0>
   4e1e4:	ldr	r3, [pc, #-512]	; 4dfec <blkid_probe_get_size@plt+0x46ad4>
   4e1e8:	ldr	r3, [r4, r3]
   4e1ec:	ldr	r4, [r3]
   4e1f0:	cmp	r4, #0
   4e1f4:	beq	4e214 <blkid_probe_get_size@plt+0x46cfc>
   4e1f8:	mov	r0, r4
   4e1fc:	bl	723c <strlen@plt>
   4e200:	ldr	r1, [pc, #-536]	; 4dff0 <blkid_probe_get_size@plt+0x46ad8>
   4e204:	add	r1, pc, r1
   4e208:	mov	r2, r0
   4e20c:	mov	r0, r4
   4e210:	bl	7374 <strncpy@plt>
   4e214:	bl	7218 <geteuid@plt>
   4e218:	subs	r6, r0, #0
   4e21c:	beq	4e52c <blkid_probe_get_size@plt+0x47014>
   4e220:	ldr	r3, [pc, #-564]	; 4dff4 <blkid_probe_get_size@plt+0x46adc>
   4e224:	add	r3, pc, r3
   4e228:	ldr	r3, [r3, #20]
   4e22c:	cmp	r3, #6
   4e230:	ble	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e234:	ldr	r3, [pc, #-580]	; 4dff8 <blkid_probe_get_size@plt+0x46ae0>
   4e238:	ldr	r2, [pc, #-580]	; 4dffc <blkid_probe_get_size@plt+0x46ae4>
   4e23c:	add	r3, pc, r3
   4e240:	add	r2, pc, r2
   4e244:	add	r3, r3, #1152	; 0x480
   4e248:	str	r2, [sp, #4]
   4e24c:	ldr	r2, [pc, #-596]	; 4e000 <blkid_probe_get_size@plt+0x46ae8>
   4e250:	add	r3, r3, #8
   4e254:	str	r3, [sp]
   4e258:	add	r2, pc, r2
   4e25c:	ldr	r3, [pc, #-608]	; 4e004 <blkid_probe_get_size@plt+0x46aec>
   4e260:	mov	r1, #0
   4e264:	mov	r0, #7
   4e268:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e26c:	mov	r1, #15
   4e270:	mov	r0, #1
   4e274:	bl	6c00 <prctl@plt>
   4e278:	cmp	r0, #0
   4e27c:	blt	4ece8 <blkid_probe_get_size@plt+0x477d0>
   4e280:	ldr	r5, [pc, #-640]	; 4e008 <blkid_probe_get_size@plt+0x46af0>
   4e284:	ldr	r6, [sp, #24]
   4e288:	add	r5, pc, r5
   4e28c:	add	r5, r5, #1168	; 0x490
   4e290:	mov	r4, #1
   4e294:	add	r5, r5, #8
   4e298:	cmp	r4, #9
   4e29c:	beq	4e2e0 <blkid_probe_get_size@plt+0x46dc8>
   4e2a0:	cmp	r4, #19
   4e2a4:	beq	4e2e0 <blkid_probe_get_size@plt+0x46dc8>
   4e2a8:	mov	r2, #0
   4e2ac:	mov	r1, r5
   4e2b0:	mov	r0, r4
   4e2b4:	bl	7140 <sigaction@plt>
   4e2b8:	cmp	r0, #0
   4e2bc:	bge	4e2e0 <blkid_probe_get_size@plt+0x46dc8>
   4e2c0:	bl	732c <__errno_location@plt>
   4e2c4:	ldr	r3, [r0]
   4e2c8:	subs	r2, r3, #22
   4e2cc:	movne	r2, #1
   4e2d0:	cmp	r6, #0
   4e2d4:	movlt	r2, #0
   4e2d8:	cmp	r2, #0
   4e2dc:	rsbne	r6, r3, #0
   4e2e0:	add	r4, r4, #1
   4e2e4:	cmp	r4, #65	; 0x41
   4e2e8:	bne	4e298 <blkid_probe_get_size@plt+0x46d80>
   4e2ec:	cmp	r6, #0
   4e2f0:	str	r6, [sp, #24]
   4e2f4:	blt	4ed3c <blkid_probe_get_size@plt+0x47824>
   4e2f8:	add	r4, sp, #420	; 0x1a4
   4e2fc:	mov	r0, r4
   4e300:	bl	73ec <sigemptyset@plt>
   4e304:	cmp	r0, #0
   4e308:	blt	4e8cc <blkid_probe_get_size@plt+0x473b4>
   4e30c:	mov	r1, r4
   4e310:	mov	r2, #0
   4e314:	mov	r0, #2
   4e318:	bl	74b8 <sigprocmask@plt>
   4e31c:	cmp	r0, #0
   4e320:	blt	4e8cc <blkid_probe_get_size@plt+0x473b4>
   4e324:	bl	6a68 <getppid@plt>
   4e328:	ldr	r3, [sp, #40]	; 0x28
   4e32c:	cmp	r3, r0
   4e330:	cmpne	r0, #0
   4e334:	bne	4e3d0 <blkid_probe_get_size@plt+0x46eb8>
   4e338:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   4e33c:	b	4ddf0 <blkid_probe_get_size@plt+0x468d8>
   4e340:	ldr	fp, [sp, #52]	; 0x34
   4e344:	ldr	r5, [sp, #56]	; 0x38
   4e348:	ldr	r6, [sp, #60]	; 0x3c
   4e34c:	ldr	r3, [r5]
   4e350:	mov	r0, #0
   4e354:	cmp	r3, r0
   4e358:	str	r0, [sp, #88]	; 0x58
   4e35c:	moveq	r0, r3
   4e360:	moveq	ip, r0
   4e364:	beq	4e380 <blkid_probe_get_size@plt+0x46e68>
   4e368:	ldr	r2, [pc, #-868]	; 4e00c <blkid_probe_get_size@plt+0x46af4>
   4e36c:	add	r2, pc, r2
   4e370:	ldr	r2, [r2, #24]
   4e374:	cmp	r2, #2
   4e378:	bgt	4e820 <blkid_probe_get_size@plt+0x47308>
   4e37c:	mov	ip, r0
   4e380:	ldr	r3, [pc, #-888]	; 4e010 <blkid_probe_get_size@plt+0x46af8>
   4e384:	ldr	r2, [pc, #-888]	; 4e014 <blkid_probe_get_size@plt+0x46afc>
   4e388:	add	r3, pc, r3
   4e38c:	add	r2, pc, r2
   4e390:	add	r3, r3, #1040	; 0x410
   4e394:	add	r3, r3, #8
   4e398:	str	r2, [sp, #20]
   4e39c:	ldr	r2, [pc, #-908]	; 4e018 <blkid_probe_get_size@plt+0x46b00>
   4e3a0:	mov	r1, #0
   4e3a4:	str	r0, [sp, #8]
   4e3a8:	stm	sp, {r3, ip}
   4e3ac:	str	r1, [sp, #16]
   4e3b0:	str	r1, [sp, #12]
   4e3b4:	ldr	r3, [pc, #-928]	; 4e01c <blkid_probe_get_size@plt+0x46b04>
   4e3b8:	add	r2, pc, r2
   4e3bc:	mvn	r1, #11
   4e3c0:	mov	r0, #3
   4e3c4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   4e3c8:	mov	r4, r0
   4e3cc:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4e3d0:	ldr	r3, [pc, #-952]	; 4e020 <blkid_probe_get_size@plt+0x46b08>
   4e3d4:	add	r3, pc, r3
   4e3d8:	ldr	r3, [r3, #20]
   4e3dc:	cmp	r3, #6
   4e3e0:	ble	4e41c <blkid_probe_get_size@plt+0x46f04>
   4e3e4:	ldr	r3, [pc, #-968]	; 4e024 <blkid_probe_get_size@plt+0x46b0c>
   4e3e8:	ldr	r2, [pc, #-968]	; 4e028 <blkid_probe_get_size@plt+0x46b10>
   4e3ec:	add	r3, pc, r3
   4e3f0:	add	r2, pc, r2
   4e3f4:	add	r3, r3, #1136	; 0x470
   4e3f8:	str	r2, [sp, #4]
   4e3fc:	ldr	r2, [pc, #-984]	; 4e02c <blkid_probe_get_size@plt+0x46b14>
   4e400:	add	r3, r3, #8
   4e404:	str	r3, [sp]
   4e408:	add	r2, pc, r2
   4e40c:	ldr	r3, [pc, #-996]	; 4e030 <blkid_probe_get_size@plt+0x46b18>
   4e410:	mov	r1, #0
   4e414:	mov	r0, #7
   4e418:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e41c:	mov	r0, #15
   4e420:	bl	70f8 <raise@plt>
   4e424:	mov	r0, #1
   4e428:	bl	72f0 <_exit@plt>
   4e42c:	ldr	r0, [pc, #-1024]	; 4e034 <blkid_probe_get_size@plt+0x46b1c>
   4e430:	add	r0, pc, r0
   4e434:	bl	74dc <__tls_get_addr@plt>
   4e438:	ldr	r3, [pc, #-1032]	; 4e038 <blkid_probe_get_size@plt+0x46b20>
   4e43c:	ldr	r5, [r3, r0]
   4e440:	cmp	r5, #0
   4e444:	bne	4dc54 <blkid_probe_get_size@plt+0x4673c>
   4e448:	ldr	r3, [pc, #-1044]	; 4e03c <blkid_probe_get_size@plt+0x46b24>
   4e44c:	ldr	r2, [pc, #-1044]	; 4e040 <blkid_probe_get_size@plt+0x46b28>
   4e450:	add	r3, pc, r3
   4e454:	add	r3, r3, #1312	; 0x520
   4e458:	ldr	r1, [pc, #-1052]	; 4e044 <blkid_probe_get_size@plt+0x46b2c>
   4e45c:	add	r3, r3, #4
   4e460:	mov	r0, r5
   4e464:	str	r3, [sp]
   4e468:	add	r2, pc, r2
   4e46c:	ldr	r3, [pc, #-1068]	; 4e048 <blkid_probe_get_size@plt+0x46b30>
   4e470:	add	r1, pc, r1
   4e474:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4e478:	ldr	r0, [sp, #84]	; 0x54
   4e47c:	cmp	r0, #0
   4e480:	beq	4e488 <blkid_probe_get_size@plt+0x46f70>
   4e484:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4e488:	mvn	r4, #64	; 0x40
   4e48c:	ldr	r3, [pc, #-1096]	; 4e04c <blkid_probe_get_size@plt+0x46b34>
   4e490:	add	r3, pc, r3
   4e494:	ldr	r3, [r3, #24]
   4e498:	cmp	r3, #2
   4e49c:	rsble	r4, r4, #0
   4e4a0:	uxtble	r4, r4
   4e4a4:	rsble	r4, r4, #0
   4e4a8:	ble	4d850 <blkid_probe_get_size@plt+0x46338>
   4e4ac:	ldr	r3, [pc, #-1124]	; 4e050 <blkid_probe_get_size@plt+0x46b38>
   4e4b0:	ldr	r2, [pc, #-1124]	; 4e054 <blkid_probe_get_size@plt+0x46b3c>
   4e4b4:	add	r3, pc, r3
   4e4b8:	add	r2, pc, r2
   4e4bc:	str	r2, [sp, #4]
   4e4c0:	add	r3, r3, #1040	; 0x410
   4e4c4:	ldr	r2, [pc, #-1140]	; 4e058 <blkid_probe_get_size@plt+0x46b40>
   4e4c8:	add	r3, r3, #8
   4e4cc:	mov	r1, r4
   4e4d0:	str	r3, [sp]
   4e4d4:	str	r7, [sp, #8]
   4e4d8:	ldr	r3, [pc, #-1156]	; 4e05c <blkid_probe_get_size@plt+0x46b44>
   4e4dc:	add	r2, pc, r2
   4e4e0:	ldr	r0, [pc, #-1160]	; 4e060 <blkid_probe_get_size@plt+0x46b48>
   4e4e4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e4e8:	mov	r4, r0
   4e4ec:	b	4d850 <blkid_probe_get_size@plt+0x46338>
   4e4f0:	ldr	r3, [pc, #-1172]	; 4e064 <blkid_probe_get_size@plt+0x46b4c>
   4e4f4:	ldr	r2, [pc, #-1172]	; 4e068 <blkid_probe_get_size@plt+0x46b50>
   4e4f8:	add	r3, pc, r3
   4e4fc:	add	r2, pc, r2
   4e500:	str	r2, [sp, #4]
   4e504:	add	r3, r3, #1136	; 0x470
   4e508:	ldr	r2, [pc, #-1188]	; 4e06c <blkid_probe_get_size@plt+0x46b54>
   4e50c:	add	r3, r3, #8
   4e510:	str	r3, [sp]
   4e514:	rsb	r1, r4, #0
   4e518:	ldr	r3, [pc, #-1200]	; 4e070 <blkid_probe_get_size@plt+0x46b58>
   4e51c:	add	r2, pc, r2
   4e520:	mov	r0, #3
   4e524:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e528:	b	4dde4 <blkid_probe_get_size@plt+0x468cc>
   4e52c:	ldr	r3, [pc, #-1216]	; 4e074 <blkid_probe_get_size@plt+0x46b5c>
   4e530:	add	r3, pc, r3
   4e534:	ldr	r2, [r3, #12]
   4e538:	cmp	r2, #7
   4e53c:	bhi	4e844 <blkid_probe_get_size@plt+0x4732c>
   4e540:	bl	3bfd0 <blkid_probe_get_size@plt+0x34ab8>
   4e544:	mov	r2, #0
   4e548:	mov	r3, #0
   4e54c:	strd	r2, [sp, #8]
   4e550:	mov	r3, #34	; 0x22
   4e554:	mov	r2, #3
   4e558:	add	r4, r0, #7
   4e55c:	rsb	r0, r0, #0
   4e560:	and	r4, r4, r0
   4e564:	mvn	r0, #0
   4e568:	str	r0, [sp]
   4e56c:	mov	r1, r4
   4e570:	mov	r0, r6
   4e574:	bl	6d14 <mmap64@plt>
   4e578:	cmn	r0, #1
   4e57c:	mov	r5, r0
   4e580:	beq	4e95c <blkid_probe_get_size@plt+0x47444>
   4e584:	ldr	r1, [pc, #-1300]	; 4e078 <blkid_probe_get_size@plt+0x46b60>
   4e588:	mov	r2, r4
   4e58c:	add	r1, pc, r1
   4e590:	bl	7374 <strncpy@plt>
   4e594:	str	r6, [sp]
   4e598:	mov	r3, r6
   4e59c:	mov	r2, r5
   4e5a0:	mov	r1, #8
   4e5a4:	mov	r0, #35	; 0x23
   4e5a8:	bl	6c00 <prctl@plt>
   4e5ac:	add	r8, r5, #8
   4e5b0:	cmp	r0, #0
   4e5b4:	bge	4ea54 <blkid_probe_get_size@plt+0x4753c>
   4e5b8:	bl	732c <__errno_location@plt>
   4e5bc:	ldr	r3, [pc, #-1352]	; 4e07c <blkid_probe_get_size@plt+0x46b64>
   4e5c0:	add	r3, pc, r3
   4e5c4:	ldr	r3, [r3, #20]
   4e5c8:	cmp	r3, #6
   4e5cc:	mov	r7, r0
   4e5d0:	bgt	4ebf8 <blkid_probe_get_size@plt+0x476e0>
   4e5d4:	mov	r6, #0
   4e5d8:	mov	r2, r8
   4e5dc:	str	r6, [sp]
   4e5e0:	mov	r3, r6
   4e5e4:	mov	r1, #9
   4e5e8:	mov	r0, #35	; 0x23
   4e5ec:	bl	6c00 <prctl@plt>
   4e5f0:	cmp	r0, r6
   4e5f4:	bge	4eb88 <blkid_probe_get_size@plt+0x47670>
   4e5f8:	ldr	r3, [pc, #-1408]	; 4e080 <blkid_probe_get_size@plt+0x46b68>
   4e5fc:	add	r3, pc, r3
   4e600:	ldr	r3, [r3, #20]
   4e604:	cmp	r3, #6
   4e608:	ble	4e644 <blkid_probe_get_size@plt+0x4712c>
   4e60c:	ldr	r3, [pc, #-1424]	; 4e084 <blkid_probe_get_size@plt+0x46b6c>
   4e610:	ldr	r2, [pc, #-1424]	; 4e088 <blkid_probe_get_size@plt+0x46b70>
   4e614:	add	r3, pc, r3
   4e618:	add	r2, pc, r2
   4e61c:	str	r2, [sp, #4]
   4e620:	add	r3, r3, #1152	; 0x480
   4e624:	ldr	r2, [pc, #-1440]	; 4e08c <blkid_probe_get_size@plt+0x46b74>
   4e628:	add	r3, r3, #8
   4e62c:	str	r3, [sp]
   4e630:	add	r2, pc, r2
   4e634:	ldr	r3, [pc, #-1452]	; 4e090 <blkid_probe_get_size@plt+0x46b78>
   4e638:	ldr	r1, [r7]
   4e63c:	mov	r0, #7
   4e640:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e644:	mov	r1, r4
   4e648:	mov	r0, r5
   4e64c:	bl	726c <munmap@plt>
   4e650:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e654:	ldr	r3, [sp, #40]	; 0x28
   4e658:	mov	r0, r5
   4e65c:	str	r3, [sp]
   4e660:	ldr	r3, [pc, #-1492]	; 4e094 <blkid_probe_get_size@plt+0x46b7c>
   4e664:	mov	r1, #0
   4e668:	add	r3, pc, r3
   4e66c:	bl	4aeb4 <blkid_probe_get_size@plt+0x4399c>
   4e670:	subs	r4, r0, #0
   4e674:	blt	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4e678:	ldr	r5, [sp, #84]	; 0x54
   4e67c:	b	4dc10 <blkid_probe_get_size@plt+0x466f8>
   4e680:	ldr	r3, [pc, #-1520]	; 4e098 <blkid_probe_get_size@plt+0x46b80>
   4e684:	add	r3, pc, r3
   4e688:	ldr	r3, [r3, #20]
   4e68c:	cmp	r3, #3
   4e690:	ble	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e694:	ldr	r3, [pc, #-1536]	; 4e09c <blkid_probe_get_size@plt+0x46b84>
   4e698:	ldr	r2, [pc, #-1536]	; 4e0a0 <blkid_probe_get_size@plt+0x46b88>
   4e69c:	add	r3, pc, r3
   4e6a0:	add	r2, pc, r2
   4e6a4:	str	r2, [sp, #4]
   4e6a8:	add	r3, r3, #1136	; 0x470
   4e6ac:	ldr	r2, [pc, #-1552]	; 4e0a4 <blkid_probe_get_size@plt+0x46b8c>
   4e6b0:	add	r3, r3, #8
   4e6b4:	str	r3, [sp]
   4e6b8:	add	r2, pc, r2
   4e6bc:	ldr	r3, [pc, #-1564]	; 4e0a8 <blkid_probe_get_size@plt+0x46b90>
   4e6c0:	mvn	r1, #0
   4e6c4:	mov	r0, #4
   4e6c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e6cc:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e6d0:	ldr	r3, [pc, #-1580]	; 4e0ac <blkid_probe_get_size@plt+0x46b94>
   4e6d4:	ldr	r2, [pc, #-1580]	; 4e0b0 <blkid_probe_get_size@plt+0x46b98>
   4e6d8:	add	r3, pc, r3
   4e6dc:	add	r2, pc, r2
   4e6e0:	str	r2, [sp, #4]
   4e6e4:	add	r3, r3, #1136	; 0x470
   4e6e8:	ldr	r2, [pc, #-1596]	; 4e0b4 <blkid_probe_get_size@plt+0x46b9c>
   4e6ec:	add	r3, r3, #8
   4e6f0:	str	r3, [sp]
   4e6f4:	add	r2, pc, r2
   4e6f8:	ldr	r3, [pc, #-1608]	; 4e0b8 <blkid_probe_get_size@plt+0x46ba0>
   4e6fc:	mov	r0, #3
   4e700:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e704:	b	4dde4 <blkid_probe_get_size@plt+0x468cc>
   4e708:	bl	732c <__errno_location@plt>
   4e70c:	ldr	r3, [pc, #-1624]	; 4e0bc <blkid_probe_get_size@plt+0x46ba4>
   4e710:	add	r3, pc, r3
   4e714:	ldr	r3, [r3, #20]
   4e718:	cmp	r3, #6
   4e71c:	ble	4e1e4 <blkid_probe_get_size@plt+0x46ccc>
   4e720:	ldr	r3, [pc, #-1640]	; 4e0c0 <blkid_probe_get_size@plt+0x46ba8>
   4e724:	ldr	r2, [pc, #-1640]	; 4e0c4 <blkid_probe_get_size@plt+0x46bac>
   4e728:	add	r3, pc, r3
   4e72c:	add	r2, pc, r2
   4e730:	str	r2, [sp, #4]
   4e734:	add	r3, r3, #1152	; 0x480
   4e738:	ldr	r2, [pc, #-1656]	; 4e0c8 <blkid_probe_get_size@plt+0x46bb0>
   4e73c:	add	r3, r3, #8
   4e740:	str	r3, [sp]
   4e744:	add	r2, pc, r2
   4e748:	ldr	r1, [r0]
   4e74c:	ldr	r3, [pc, #-1672]	; 4e0cc <blkid_probe_get_size@plt+0x46bb4>
   4e750:	mov	r0, #7
   4e754:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e758:	b	4e1e4 <blkid_probe_get_size@plt+0x46ccc>
   4e75c:	mov	r0, r8
   4e760:	bl	3ca34 <blkid_probe_get_size@plt+0x3551c>
   4e764:	ldr	ip, [sp, #40]	; 0x28
   4e768:	ldrd	r8, [ip, #24]
   4e76c:	mov	r2, r0
   4e770:	mov	r3, r1
   4e774:	ldrd	r0, [ip, #16]
   4e778:	strd	r2, [sp, #24]
   4e77c:	subs	r2, r2, r8
   4e780:	sbc	r3, r3, r9
   4e784:	cmp	r3, r1
   4e788:	cmpeq	r2, r0
   4e78c:	mov	r8, r2
   4e790:	mov	r9, r3
   4e794:	bcs	4dc00 <blkid_probe_get_size@plt+0x466e8>
   4e798:	ldrd	r4, [ip, #8]
   4e79c:	mov	r3, r4
   4e7a0:	orrs	r3, r3, r5
   4e7a4:	movne	ip, #1
   4e7a8:	moveq	ip, #0
   4e7ac:	cmp	r1, r5
   4e7b0:	cmpeq	r0, r4
   4e7b4:	movls	r1, #0
   4e7b8:	andhi	r1, ip, #1
   4e7bc:	cmp	r9, r5
   4e7c0:	cmpeq	r8, r4
   4e7c4:	movcs	r1, #0
   4e7c8:	andcc	r1, r1, #1
   4e7cc:	cmp	r1, #0
   4e7d0:	bne	4ec34 <blkid_probe_get_size@plt+0x4771c>
   4e7d4:	ldr	ip, [sp, #40]	; 0x28
   4e7d8:	ldrd	r2, [sp, #24]
   4e7dc:	ldr	r1, [pc, #-1812]	; 4e0d0 <blkid_probe_get_size@plt+0x46bb8>
   4e7e0:	ldrd	r4, [ip, #16]
   4e7e4:	add	r1, pc, r1
   4e7e8:	str	ip, [sp, #4]
   4e7ec:	subs	r4, r4, r8
   4e7f0:	sbc	r5, r5, r9
   4e7f4:	adds	r8, r4, r2
   4e7f8:	adc	r9, r5, r3
   4e7fc:	str	r1, [sp]
   4e800:	mov	r2, r8
   4e804:	strd	r4, [ip, #16]
   4e808:	mov	r3, r9
   4e80c:	ldr	r0, [sp, #84]	; 0x54
   4e810:	bl	468c8 <blkid_probe_get_size@plt+0x3f3b0>
   4e814:	subs	r4, r0, #0
   4e818:	bge	4dc00 <blkid_probe_get_size@plt+0x466e8>
   4e81c:	b	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4e820:	mov	r0, r3
   4e824:	add	r1, sp, #88	; 0x58
   4e828:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   4e82c:	ldr	r0, [sp, #88]	; 0x58
   4e830:	cmp	r0, #0
   4e834:	beq	4e37c <blkid_probe_get_size@plt+0x46e64>
   4e838:	ldr	ip, [pc, #-1900]	; 4e0d4 <blkid_probe_get_size@plt+0x46bbc>
   4e83c:	add	ip, pc, ip
   4e840:	b	4e380 <blkid_probe_get_size@plt+0x46e68>
   4e844:	ldr	r3, [r3, #16]
   4e848:	ldr	r1, [pc, #-1912]	; 4e0d8 <blkid_probe_get_size@plt+0x46bc0>
   4e84c:	mov	r0, r3
   4e850:	add	r1, pc, r1
   4e854:	bl	7374 <strncpy@plt>
   4e858:	str	r6, [sp]
   4e85c:	mov	r3, r6
   4e860:	mov	r1, #9
   4e864:	add	r2, r0, #8
   4e868:	mov	r0, #35	; 0x23
   4e86c:	bl	6c00 <prctl@plt>
   4e870:	cmp	r0, #0
   4e874:	bge	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e878:	bl	732c <__errno_location@plt>
   4e87c:	ldr	r3, [pc, #-1960]	; 4e0dc <blkid_probe_get_size@plt+0x46bc4>
   4e880:	add	r3, pc, r3
   4e884:	ldr	r3, [r3, #20]
   4e888:	cmp	r3, #6
   4e88c:	ble	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e890:	ldr	r3, [pc, #-1976]	; 4e0e0 <blkid_probe_get_size@plt+0x46bc8>
   4e894:	ldr	r2, [pc, #-1976]	; 4e0e4 <blkid_probe_get_size@plt+0x46bcc>
   4e898:	add	r3, pc, r3
   4e89c:	add	r2, pc, r2
   4e8a0:	str	r2, [sp, #4]
   4e8a4:	add	r3, r3, #1152	; 0x480
   4e8a8:	ldr	r2, [pc, #-1992]	; 4e0e8 <blkid_probe_get_size@plt+0x46bd0>
   4e8ac:	add	r3, r3, #8
   4e8b0:	str	r3, [sp]
   4e8b4:	add	r2, pc, r2
   4e8b8:	ldr	r1, [r0]
   4e8bc:	ldr	r3, [pc, #-2008]	; 4e0ec <blkid_probe_get_size@plt+0x46bd4>
   4e8c0:	mov	r0, #7
   4e8c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e8c8:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e8cc:	bl	732c <__errno_location@plt>
   4e8d0:	ldr	r1, [r0]
   4e8d4:	rsb	r1, r1, #0
   4e8d8:	cmp	r1, #0
   4e8dc:	bge	4e324 <blkid_probe_get_size@plt+0x46e0c>
   4e8e0:	ldr	r3, [pc, #-2040]	; 4e0f0 <blkid_probe_get_size@plt+0x46bd8>
   4e8e4:	add	r3, pc, r3
   4e8e8:	ldr	r3, [r3, #20]
   4e8ec:	cmp	r3, #2
   4e8f0:	ble	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4e8f4:	ldr	r3, [pc, #-2056]	; 4e0f4 <blkid_probe_get_size@plt+0x46bdc>
   4e8f8:	ldr	r2, [pc, #-2056]	; 4e0f8 <blkid_probe_get_size@plt+0x46be0>
   4e8fc:	add	r3, pc, r3
   4e900:	add	r2, pc, r2
   4e904:	str	r2, [sp, #4]
   4e908:	add	r3, r3, #1136	; 0x470
   4e90c:	ldr	r2, [pc, #-2072]	; 4e0fc <blkid_probe_get_size@plt+0x46be4>
   4e910:	add	r3, r3, #8
   4e914:	str	r3, [sp]
   4e918:	add	r2, pc, r2
   4e91c:	mov	r3, #1328	; 0x530
   4e920:	mov	r0, #3
   4e924:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e928:	b	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4e92c:	ldr	r2, [pc, #-2100]	; 4e100 <blkid_probe_get_size@plt+0x46be8>
   4e930:	ldr	r1, [pc, #-2100]	; 4e104 <blkid_probe_get_size@plt+0x46bec>
   4e934:	add	r2, pc, r2
   4e938:	add	r2, r2, #1120	; 0x460
   4e93c:	add	r2, r2, #8
   4e940:	str	r2, [sp]
   4e944:	ldr	r2, [pc, #-2116]	; 4e108 <blkid_probe_get_size@plt+0x46bf0>
   4e948:	mov	r3, #1248	; 0x4e0
   4e94c:	add	r2, pc, r2
   4e950:	add	r1, pc, r1
   4e954:	mov	r0, #0
   4e958:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4e95c:	bl	732c <__errno_location@plt>
   4e960:	ldr	r3, [pc, #-2140]	; 4e10c <blkid_probe_get_size@plt+0x46bf4>
   4e964:	add	r3, pc, r3
   4e968:	ldr	r3, [r3, #20]
   4e96c:	cmp	r3, #6
   4e970:	ble	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e974:	ldr	r3, [pc, #-2156]	; 4e110 <blkid_probe_get_size@plt+0x46bf8>
   4e978:	ldr	r2, [pc, #-2156]	; 4e114 <blkid_probe_get_size@plt+0x46bfc>
   4e97c:	add	r3, pc, r3
   4e980:	add	r2, pc, r2
   4e984:	str	r2, [sp, #4]
   4e988:	add	r3, r3, #1152	; 0x480
   4e98c:	ldr	r2, [pc, #-2172]	; 4e118 <blkid_probe_get_size@plt+0x46c00>
   4e990:	add	r3, r3, #8
   4e994:	str	r3, [sp]
   4e998:	add	r2, pc, r2
   4e99c:	ldr	r1, [r0]
   4e9a0:	ldr	r3, [pc, #-2188]	; 4e11c <blkid_probe_get_size@plt+0x46c04>
   4e9a4:	mov	r0, #7
   4e9a8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4e9ac:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4e9b0:	bl	6fb4 <__stack_chk_fail@plt>
   4e9b4:	ldr	r2, [pc, #-2204]	; 4e120 <blkid_probe_get_size@plt+0x46c08>
   4e9b8:	ldr	r1, [pc, #-2204]	; 4e124 <blkid_probe_get_size@plt+0x46c0c>
   4e9bc:	add	r2, pc, r2
   4e9c0:	add	r2, r2, #1312	; 0x520
   4e9c4:	add	r2, r2, #4
   4e9c8:	str	r2, [sp]
   4e9cc:	ldr	r2, [pc, #-2220]	; 4e128 <blkid_probe_get_size@plt+0x46c10>
   4e9d0:	mov	r0, #0
   4e9d4:	ldr	r3, [pc, #-2224]	; 4e12c <blkid_probe_get_size@plt+0x46c14>
   4e9d8:	add	r2, pc, r2
   4e9dc:	add	r1, pc, r1
   4e9e0:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4e9e4:	ldr	r0, [sp, #84]	; 0x54
   4e9e8:	cmp	r0, #0
   4e9ec:	beq	4e9f4 <blkid_probe_get_size@plt+0x474dc>
   4e9f0:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4e9f4:	mvn	r4, #21
   4e9f8:	b	4e48c <blkid_probe_get_size@plt+0x46f74>
   4e9fc:	ldr	r0, [sp, #84]	; 0x54
   4ea00:	cmp	r0, #0
   4ea04:	beq	4ea0c <blkid_probe_get_size@plt+0x474f4>
   4ea08:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4ea0c:	mvn	r4, #11
   4ea10:	b	4e48c <blkid_probe_get_size@plt+0x46f74>
   4ea14:	ldr	r3, [pc, #-2284]	; 4e130 <blkid_probe_get_size@plt+0x46c18>
   4ea18:	ldr	r2, [pc, #-2284]	; 4e134 <blkid_probe_get_size@plt+0x46c1c>
   4ea1c:	add	r3, pc, r3
   4ea20:	add	r3, r3, #1312	; 0x520
   4ea24:	ldr	r1, [pc, #-2292]	; 4e138 <blkid_probe_get_size@plt+0x46c20>
   4ea28:	add	r3, r3, #4
   4ea2c:	mov	r0, r5
   4ea30:	str	r3, [sp]
   4ea34:	add	r2, pc, r2
   4ea38:	ldr	r3, [pc, #-2308]	; 4e13c <blkid_probe_get_size@plt+0x46c24>
   4ea3c:	add	r1, pc, r1
   4ea40:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4ea44:	ldr	r0, [sp, #84]	; 0x54
   4ea48:	cmp	r0, #0
   4ea4c:	bne	4e9f0 <blkid_probe_get_size@plt+0x474d8>
   4ea50:	b	4e9f4 <blkid_probe_get_size@plt+0x474dc>
   4ea54:	str	r6, [sp]
   4ea58:	mov	r3, r6
   4ea5c:	mov	r2, r8
   4ea60:	mov	r1, #9
   4ea64:	mov	r0, #35	; 0x23
   4ea68:	bl	6c00 <prctl@plt>
   4ea6c:	cmp	r0, #0
   4ea70:	blt	4ec70 <blkid_probe_get_size@plt+0x47758>
   4ea74:	ldr	r3, [pc, #-2364]	; 4e140 <blkid_probe_get_size@plt+0x46c28>
   4ea78:	add	r3, pc, r3
   4ea7c:	ldr	r0, [r3, #16]
   4ea80:	cmp	r0, #0
   4ea84:	beq	4ea90 <blkid_probe_get_size@plt+0x47578>
   4ea88:	ldr	r1, [r3, #12]
   4ea8c:	bl	726c <munmap@plt>
   4ea90:	ldr	r3, [pc, #-2388]	; 4e144 <blkid_probe_get_size@plt+0x46c2c>
   4ea94:	add	r3, pc, r3
   4ea98:	strd	r4, [r3, #12]
   4ea9c:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4eaa0:	ldr	r3, [r5, #204]	; 0xcc
   4eaa4:	ldr	r2, [sp, #24]
   4eaa8:	add	r3, r3, #1
   4eaac:	str	r3, [r5, #204]	; 0xcc
   4eab0:	mov	r1, #17
   4eab4:	mov	r0, r5
   4eab8:	bl	300e8 <blkid_probe_get_size@plt+0x28bd0>
   4eabc:	subs	r4, r0, #0
   4eac0:	ldrlt	r3, [r5, #204]	; 0xcc
   4eac4:	sublt	r3, r3, #1
   4eac8:	strlt	r3, [r5, #204]	; 0xcc
   4eacc:	blt	4dd08 <blkid_probe_get_size@plt+0x467f0>
   4ead0:	ldrb	r3, [r5, #268]	; 0x10c
   4ead4:	orr	r3, r3, #2
   4ead8:	strb	r3, [r5, #268]	; 0x10c
   4eadc:	ldr	r0, [sp, #84]	; 0x54
   4eae0:	bl	3370c <blkid_probe_get_size@plt+0x2c1f4>
   4eae4:	mov	r4, r0
   4eae8:	ldr	r0, [sp, #84]	; 0x54
   4eaec:	cmp	r0, #0
   4eaf0:	bne	4dd1c <blkid_probe_get_size@plt+0x46804>
   4eaf4:	b	4dd20 <blkid_probe_get_size@plt+0x46808>
   4eaf8:	ldr	r2, [pc, #-2488]	; 4e148 <blkid_probe_get_size@plt+0x46c30>
   4eafc:	ldr	r1, [pc, #-2488]	; 4e14c <blkid_probe_get_size@plt+0x46c34>
   4eb00:	add	r2, pc, r2
   4eb04:	add	r2, r2, #1312	; 0x520
   4eb08:	add	r2, r2, #4
   4eb0c:	str	r2, [sp]
   4eb10:	ldr	r2, [pc, #-2504]	; 4e150 <blkid_probe_get_size@plt+0x46c38>
   4eb14:	mov	r0, #0
   4eb18:	ldr	r3, [pc, #-2508]	; 4e154 <blkid_probe_get_size@plt+0x46c3c>
   4eb1c:	add	r2, pc, r2
   4eb20:	add	r1, pc, r1
   4eb24:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4eb28:	ldr	r0, [sp, #84]	; 0x54
   4eb2c:	cmp	r0, #0
   4eb30:	beq	4eb38 <blkid_probe_get_size@plt+0x47620>
   4eb34:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4eb38:	mvn	r4, #115	; 0x73
   4eb3c:	b	4e48c <blkid_probe_get_size@plt+0x46f74>
   4eb40:	ldr	r2, [pc, #-2544]	; 4e158 <blkid_probe_get_size@plt+0x46c40>
   4eb44:	ldr	r1, [pc, #-2544]	; 4e15c <blkid_probe_get_size@plt+0x46c44>
   4eb48:	add	r2, pc, r2
   4eb4c:	add	r2, r2, #1312	; 0x520
   4eb50:	add	r2, r2, #4
   4eb54:	str	r2, [sp]
   4eb58:	ldr	r2, [pc, #-2560]	; 4e160 <blkid_probe_get_size@plt+0x46c48>
   4eb5c:	mov	r0, #0
   4eb60:	mov	r3, #1136	; 0x470
   4eb64:	add	r2, pc, r2
   4eb68:	add	r1, pc, r1
   4eb6c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   4eb70:	ldr	r0, [sp, #84]	; 0x54
   4eb74:	cmp	r0, #0
   4eb78:	beq	4eb80 <blkid_probe_get_size@plt+0x47668>
   4eb7c:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4eb80:	mvn	r4, #9
   4eb84:	b	4e48c <blkid_probe_get_size@plt+0x46f74>
   4eb88:	str	r6, [sp]
   4eb8c:	mov	r3, r6
   4eb90:	mov	r2, r5
   4eb94:	mov	r1, #8
   4eb98:	mov	r0, #35	; 0x23
   4eb9c:	bl	6c00 <prctl@plt>
   4eba0:	cmp	r0, #0
   4eba4:	bge	4ea74 <blkid_probe_get_size@plt+0x4755c>
   4eba8:	ldr	r3, [pc, #-2636]	; 4e164 <blkid_probe_get_size@plt+0x46c4c>
   4ebac:	add	r3, pc, r3
   4ebb0:	ldr	r3, [r3, #20]
   4ebb4:	cmp	r3, #6
   4ebb8:	ble	4e26c <blkid_probe_get_size@plt+0x46d54>
   4ebbc:	ldr	r3, [pc, #-2652]	; 4e168 <blkid_probe_get_size@plt+0x46c50>
   4ebc0:	ldr	r2, [pc, #-2652]	; 4e16c <blkid_probe_get_size@plt+0x46c54>
   4ebc4:	add	r3, pc, r3
   4ebc8:	add	r2, pc, r2
   4ebcc:	str	r2, [sp, #4]
   4ebd0:	add	r3, r3, #1152	; 0x480
   4ebd4:	ldr	r2, [pc, #-2668]	; 4e170 <blkid_probe_get_size@plt+0x46c58>
   4ebd8:	add	r3, r3, #8
   4ebdc:	str	r3, [sp]
   4ebe0:	add	r2, pc, r2
   4ebe4:	mov	r3, #344	; 0x158
   4ebe8:	ldr	r1, [r7]
   4ebec:	mov	r0, #7
   4ebf0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ebf4:	b	4e26c <blkid_probe_get_size@plt+0x46d54>
   4ebf8:	ldr	r3, [pc, #-2700]	; 4e174 <blkid_probe_get_size@plt+0x46c5c>
   4ebfc:	ldr	r2, [pc, #-2700]	; 4e178 <blkid_probe_get_size@plt+0x46c60>
   4ec00:	add	r3, pc, r3
   4ec04:	add	r2, pc, r2
   4ec08:	str	r2, [sp, #4]
   4ec0c:	add	r3, r3, #1152	; 0x480
   4ec10:	ldr	r2, [pc, #-2716]	; 4e17c <blkid_probe_get_size@plt+0x46c64>
   4ec14:	add	r3, r3, #8
   4ec18:	str	r3, [sp]
   4ec1c:	add	r2, pc, r2
   4ec20:	ldr	r1, [r0]
   4ec24:	ldr	r3, [pc, #-2732]	; 4e180 <blkid_probe_get_size@plt+0x46c68>
   4ec28:	mov	r0, #7
   4ec2c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ec30:	b	4e5d4 <blkid_probe_get_size@plt+0x470bc>
   4ec34:	ldrd	r2, [sp, #24]
   4ec38:	ldr	r1, [pc, #-2748]	; 4e184 <blkid_probe_get_size@plt+0x46c6c>
   4ec3c:	subs	r4, r4, r8
   4ec40:	ldr	ip, [sp, #40]	; 0x28
   4ec44:	sbc	r5, r5, r9
   4ec48:	add	r1, pc, r1
   4ec4c:	adds	r2, r2, r4
   4ec50:	stm	sp, {r1, ip}
   4ec54:	adc	r3, r3, r5
   4ec58:	strd	r4, [ip, #8]
   4ec5c:	ldr	r0, [sp, #84]	; 0x54
   4ec60:	bl	468c8 <blkid_probe_get_size@plt+0x3f3b0>
   4ec64:	subs	r4, r0, #0
   4ec68:	bge	4e7d4 <blkid_probe_get_size@plt+0x472bc>
   4ec6c:	b	4dd10 <blkid_probe_get_size@plt+0x467f8>
   4ec70:	bl	732c <__errno_location@plt>
   4ec74:	ldr	r3, [pc, #-2804]	; 4e188 <blkid_probe_get_size@plt+0x46c70>
   4ec78:	add	r3, pc, r3
   4ec7c:	ldr	r3, [r3, #20]
   4ec80:	cmp	r3, #6
   4ec84:	ble	4ea74 <blkid_probe_get_size@plt+0x4755c>
   4ec88:	ldr	r3, [pc, #-2820]	; 4e18c <blkid_probe_get_size@plt+0x46c74>
   4ec8c:	ldr	r2, [pc, #-2820]	; 4e190 <blkid_probe_get_size@plt+0x46c78>
   4ec90:	add	r3, pc, r3
   4ec94:	add	r2, pc, r2
   4ec98:	str	r2, [sp, #4]
   4ec9c:	add	r3, r3, #1152	; 0x480
   4eca0:	ldr	r2, [pc, #-2836]	; 4e194 <blkid_probe_get_size@plt+0x46c7c>
   4eca4:	add	r3, r3, #8
   4eca8:	str	r3, [sp]
   4ecac:	add	r2, pc, r2
   4ecb0:	ldr	r1, [r0]
   4ecb4:	mov	r3, #352	; 0x160
   4ecb8:	mov	r0, #7
   4ecbc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ecc0:	b	4ea74 <blkid_probe_get_size@plt+0x4755c>
   4ecc4:	mov	r0, r8
   4ecc8:	bl	69f0 <free@plt>
   4eccc:	b	4e34c <blkid_probe_get_size@plt+0x46e34>
   4ecd0:	ldr	r0, [sp, #84]	; 0x54
   4ecd4:	cmp	r0, #0
   4ecd8:	beq	4ece0 <blkid_probe_get_size@plt+0x477c8>
   4ecdc:	bl	309f4 <blkid_probe_get_size@plt+0x294dc>
   4ece0:	mvn	r4, #15
   4ece4:	b	4e48c <blkid_probe_get_size@plt+0x46f74>
   4ece8:	bl	732c <__errno_location@plt>
   4ecec:	ldr	r3, [pc, #-2908]	; 4e198 <blkid_probe_get_size@plt+0x46c80>
   4ecf0:	add	r3, pc, r3
   4ecf4:	ldr	r3, [r3, #20]
   4ecf8:	cmp	r3, #2
   4ecfc:	ldr	r1, [r0]
   4ed00:	ble	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4ed04:	ldr	r3, [pc, #-2928]	; 4e19c <blkid_probe_get_size@plt+0x46c84>
   4ed08:	ldr	r2, [pc, #-2928]	; 4e1a0 <blkid_probe_get_size@plt+0x46c88>
   4ed0c:	add	r3, pc, r3
   4ed10:	add	r2, pc, r2
   4ed14:	str	r2, [sp, #4]
   4ed18:	add	r3, r3, #1136	; 0x470
   4ed1c:	ldr	r2, [pc, #-2944]	; 4e1a4 <blkid_probe_get_size@plt+0x46c8c>
   4ed20:	add	r3, r3, #8
   4ed24:	str	r3, [sp]
   4ed28:	add	r2, pc, r2
   4ed2c:	ldr	r3, [pc, #-2956]	; 4e1a8 <blkid_probe_get_size@plt+0x46c90>
   4ed30:	mov	r0, #3
   4ed34:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ed38:	b	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4ed3c:	ldr	r3, [pc, #-2968]	; 4e1ac <blkid_probe_get_size@plt+0x46c94>
   4ed40:	add	r3, pc, r3
   4ed44:	ldr	r3, [r3, #20]
   4ed48:	cmp	r3, #2
   4ed4c:	ble	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4ed50:	ldr	r3, [pc, #-2984]	; 4e1b0 <blkid_probe_get_size@plt+0x46c98>
   4ed54:	ldr	r2, [pc, #-2984]	; 4e1b4 <blkid_probe_get_size@plt+0x46c9c>
   4ed58:	add	r3, pc, r3
   4ed5c:	add	r2, pc, r2
   4ed60:	str	r2, [sp, #4]
   4ed64:	add	r3, r3, #1136	; 0x470
   4ed68:	ldr	r2, [pc, #-3000]	; 4e1b8 <blkid_probe_get_size@plt+0x46ca0>
   4ed6c:	add	r3, r3, #8
   4ed70:	str	r3, [sp]
   4ed74:	mov	r1, r6
   4ed78:	ldr	r3, [pc, #-3012]	; 4e1bc <blkid_probe_get_size@plt+0x46ca4>
   4ed7c:	add	r2, pc, r2
   4ed80:	mov	r0, #3
   4ed84:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4ed88:	b	4e424 <blkid_probe_get_size@plt+0x46f0c>
   4ed8c:	ldr	r3, [pc, #180]	; 4ee48 <blkid_probe_get_size@plt+0x47930>
   4ed90:	ldr	r2, [pc, #180]	; 4ee4c <blkid_probe_get_size@plt+0x47934>
   4ed94:	add	r3, pc, r3
   4ed98:	push	{r4, r5, r6, r7, r8, lr}
   4ed9c:	sub	sp, sp, #16
   4eda0:	ldr	r8, [r3, r2]
   4eda4:	cmp	r0, #0
   4eda8:	str	r0, [sp, #4]
   4edac:	ldr	r3, [r8]
   4edb0:	str	r3, [sp, #12]
   4edb4:	beq	4ee34 <blkid_probe_get_size@plt+0x4791c>
   4edb8:	ldr	r5, [pc, #144]	; 4ee50 <blkid_probe_get_size@plt+0x47938>
   4edbc:	add	r4, sp, #8
   4edc0:	add	r5, pc, r5
   4edc4:	add	r6, sp, #4
   4edc8:	b	4ee04 <blkid_probe_get_size@plt+0x478ec>
   4edcc:	mov	r1, r5
   4edd0:	ldr	r0, [sp, #8]
   4edd4:	bl	7314 <strcmp@plt>
   4edd8:	ldr	r3, [sp, #4]
   4eddc:	subs	r7, r0, #0
   4ede0:	bne	4ee18 <blkid_probe_get_size@plt+0x47900>
   4ede4:	mov	r0, r3
   4ede8:	mov	r1, r6
   4edec:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   4edf0:	cmp	r0, #0
   4edf4:	blt	4ee3c <blkid_probe_get_size@plt+0x47924>
   4edf8:	ldr	r0, [sp, #4]
   4edfc:	cmp	r0, #0
   4ee00:	beq	4ee34 <blkid_probe_get_size@plt+0x4791c>
   4ee04:	mov	r1, r4
   4ee08:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   4ee0c:	cmp	r0, #0
   4ee10:	bge	4edcc <blkid_probe_get_size@plt+0x478b4>
   4ee14:	ldr	r3, [sp, #4]
   4ee18:	ldr	r1, [sp, #12]
   4ee1c:	ldr	r2, [r8]
   4ee20:	mov	r0, r3
   4ee24:	cmp	r1, r2
   4ee28:	bne	4ee44 <blkid_probe_get_size@plt+0x4792c>
   4ee2c:	add	sp, sp, #16
   4ee30:	pop	{r4, r5, r6, r7, r8, pc}
   4ee34:	mov	r3, r0
   4ee38:	b	4ee18 <blkid_probe_get_size@plt+0x47900>
   4ee3c:	mov	r3, r7
   4ee40:	b	4ee18 <blkid_probe_get_size@plt+0x47900>
   4ee44:	bl	6fb4 <__stack_chk_fail@plt>
   4ee48:	ldrdeq	r8, [r4], -r4
   4ee4c:	andeq	r0, r0, ip, lsr r4
   4ee50:	andeq	r4, r2, ip, asr #4
   4ee54:	ldr	r3, [pc, #196]	; 4ef20 <blkid_probe_get_size@plt+0x47a08>
   4ee58:	ldr	r2, [pc, #196]	; 4ef24 <blkid_probe_get_size@plt+0x47a0c>
   4ee5c:	add	r3, pc, r3
   4ee60:	push	{r4, r5, r6, r7, lr}
   4ee64:	sub	sp, sp, #36	; 0x24
   4ee68:	ldr	r7, [r3, r2]
   4ee6c:	cmp	r0, #0
   4ee70:	ldr	r3, [r7]
   4ee74:	str	r3, [sp, #28]
   4ee78:	beq	4eef4 <blkid_probe_get_size@plt+0x479dc>
   4ee7c:	add	r3, sp, #24
   4ee80:	mov	r5, r1
   4ee84:	str	r3, [sp, #12]
   4ee88:	mov	r4, r0
   4ee8c:	add	r6, sp, #20
   4ee90:	str	r0, [sp, #20]
   4ee94:	b	4eec8 <blkid_probe_get_size@plt+0x479b0>
   4ee98:	mov	r1, r5
   4ee9c:	ldr	r0, [sp, #24]
   4eea0:	bl	7314 <strcmp@plt>
   4eea4:	cmp	r0, #0
   4eea8:	bne	4eed8 <blkid_probe_get_size@plt+0x479c0>
   4eeac:	ldr	r4, [sp, #20]
   4eeb0:	mov	r1, r6
   4eeb4:	mov	r0, r4
   4eeb8:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   4eebc:	cmp	r0, #0
   4eec0:	blt	4eed8 <blkid_probe_get_size@plt+0x479c0>
   4eec4:	ldr	r0, [sp, #20]
   4eec8:	ldr	r1, [sp, #12]
   4eecc:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   4eed0:	cmp	r0, #0
   4eed4:	bge	4ee98 <blkid_probe_get_size@plt+0x47980>
   4eed8:	ldr	r2, [sp, #28]
   4eedc:	ldr	r3, [r7]
   4eee0:	mov	r0, r4
   4eee4:	cmp	r2, r3
   4eee8:	bne	4ef1c <blkid_probe_get_size@plt+0x47a04>
   4eeec:	add	sp, sp, #36	; 0x24
   4eef0:	pop	{r4, r5, r6, r7, pc}
   4eef4:	ldr	r2, [pc, #44]	; 4ef28 <blkid_probe_get_size@plt+0x47a10>
   4eef8:	ldr	r1, [pc, #44]	; 4ef2c <blkid_probe_get_size@plt+0x47a14>
   4eefc:	add	r2, pc, r2
   4ef00:	str	r2, [sp]
   4ef04:	ldr	r2, [pc, #36]	; 4ef30 <blkid_probe_get_size@plt+0x47a18>
   4ef08:	mov	r3, #84	; 0x54
   4ef0c:	add	r2, pc, r2
   4ef10:	add	r1, pc, r1
   4ef14:	mov	r0, #1
   4ef18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4ef1c:	bl	6fb4 <__stack_chk_fail@plt>
   4ef20:	andeq	r8, r4, ip, lsl #26
   4ef24:	andeq	r0, r0, ip, lsr r4
   4ef28:	andeq	r3, r2, r8, asr #20
   4ef2c:	andeq	r6, r1, r4, ror r8
   4ef30:	andeq	r4, r2, r8, lsl #2
   4ef34:	push	{r1, r2, r3}
   4ef38:	ldr	r1, [pc, #256]	; 4f040 <blkid_probe_get_size@plt+0x47b28>
   4ef3c:	ldr	r3, [pc, #256]	; 4f044 <blkid_probe_get_size@plt+0x47b2c>
   4ef40:	add	r1, pc, r1
   4ef44:	push	{r4, r5, r6, lr}
   4ef48:	mov	r4, r0
   4ef4c:	ldr	r5, [r1, r3]
   4ef50:	sub	sp, sp, #20
   4ef54:	add	ip, sp, #40	; 0x28
   4ef58:	ldr	r0, [r5]
   4ef5c:	mov	r6, #0
   4ef60:	str	r0, [sp, #12]
   4ef64:	ldr	r2, [sp, #36]	; 0x24
   4ef68:	mov	r3, ip
   4ef6c:	add	r0, sp, #4
   4ef70:	mov	r1, #1
   4ef74:	stmib	sp, {r6, ip}
   4ef78:	bl	7428 <__vasprintf_chk@plt>
   4ef7c:	cmp	r0, r6
   4ef80:	blt	4efec <blkid_probe_get_size@plt+0x47ad4>
   4ef84:	ldr	r2, [r4]
   4ef88:	ldr	r0, [sp, #4]
   4ef8c:	cmp	r2, #0
   4ef90:	beq	4efe4 <blkid_probe_get_size@plt+0x47acc>
   4ef94:	ldr	r1, [pc, #172]	; 4f048 <blkid_probe_get_size@plt+0x47b30>
   4ef98:	mov	r3, r6
   4ef9c:	add	r1, pc, r1
   4efa0:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   4efa4:	subs	r6, r0, #0
   4efa8:	beq	4f018 <blkid_probe_get_size@plt+0x47b00>
   4efac:	ldr	r0, [r4]
   4efb0:	bl	69f0 <free@plt>
   4efb4:	ldr	r2, [sp, #4]
   4efb8:	str	r6, [r4]
   4efbc:	mov	r0, r2
   4efc0:	bl	69f0 <free@plt>
   4efc4:	ldr	r2, [sp, #12]
   4efc8:	ldr	r3, [r5]
   4efcc:	cmp	r2, r3
   4efd0:	bne	4f014 <blkid_probe_get_size@plt+0x47afc>
   4efd4:	add	sp, sp, #20
   4efd8:	pop	{r4, r5, r6, lr}
   4efdc:	add	sp, sp, #12
   4efe0:	bx	lr
   4efe4:	str	r0, [r4]
   4efe8:	b	4efbc <blkid_probe_get_size@plt+0x47aa4>
   4efec:	ldr	r3, [pc, #88]	; 4f04c <blkid_probe_get_size@plt+0x47b34>
   4eff0:	ldr	r1, [pc, #88]	; 4f050 <blkid_probe_get_size@plt+0x47b38>
   4eff4:	add	r3, pc, r3
   4eff8:	mov	r2, #37	; 0x25
   4effc:	add	r3, r3, #16
   4f000:	add	r1, pc, r1
   4f004:	mov	r0, #1
   4f008:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4f00c:	mov	r0, #71	; 0x47
   4f010:	bl	6abc <exit@plt>
   4f014:	bl	6fb4 <__stack_chk_fail@plt>
   4f018:	ldr	r3, [pc, #52]	; 4f054 <blkid_probe_get_size@plt+0x47b3c>
   4f01c:	ldr	r1, [pc, #52]	; 4f058 <blkid_probe_get_size@plt+0x47b40>
   4f020:	add	r3, pc, r3
   4f024:	mov	r2, #46	; 0x2e
   4f028:	add	r3, r3, #16
   4f02c:	add	r1, pc, r1
   4f030:	mov	r0, #1
   4f034:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4f038:	mov	r0, #71	; 0x47
   4f03c:	bl	6abc <exit@plt>
   4f040:	andeq	r8, r4, r8, lsr #24
   4f044:	andeq	r0, r0, ip, lsr r4
   4f048:	strdeq	r6, [r1], -r8
   4f04c:	andeq	r3, r2, r0, asr r9
   4f050:	andeq	r4, r2, r4, lsl r0
   4f054:	andeq	r3, r2, r4, lsr #18
   4f058:	andeq	r3, r2, r8, ror #31
   4f05c:	ldr	r3, [pc, #164]	; 4f108 <blkid_probe_get_size@plt+0x47bf0>
   4f060:	ldr	r2, [pc, #164]	; 4f10c <blkid_probe_get_size@plt+0x47bf4>
   4f064:	add	r3, pc, r3
   4f068:	push	{r4, r5, lr}
   4f06c:	sub	sp, sp, #12
   4f070:	ldr	r4, [r3, r2]
   4f074:	mov	r5, r1
   4f078:	mov	r1, sp
   4f07c:	ldr	r3, [r4]
   4f080:	str	r3, [sp, #4]
   4f084:	bl	35c5c <blkid_probe_get_size@plt+0x2e744>
   4f088:	cmp	r0, #0
   4f08c:	blt	4f0d0 <blkid_probe_get_size@plt+0x47bb8>
   4f090:	ldr	r0, [sp]
   4f094:	cmp	r0, #0
   4f098:	beq	4f0fc <blkid_probe_get_size@plt+0x47be4>
   4f09c:	mov	r2, #10
   4f0a0:	mov	r1, #0
   4f0a4:	bl	6c54 <strtoul@plt>
   4f0a8:	mov	r2, r0
   4f0ac:	cmp	r2, #255	; 0xff
   4f0b0:	mov	r0, r5
   4f0b4:	bls	4f0e8 <blkid_probe_get_size@plt+0x47bd0>
   4f0b8:	ldr	r1, [pc, #80]	; 4f110 <blkid_probe_get_size@plt+0x47bf8>
   4f0bc:	lsr	r3, r2, #16
   4f0c0:	add	r1, pc, r1
   4f0c4:	uxth	r2, r2
   4f0c8:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   4f0cc:	mov	r0, #0
   4f0d0:	ldr	r2, [sp, #4]
   4f0d4:	ldr	r3, [r4]
   4f0d8:	cmp	r2, r3
   4f0dc:	bne	4f104 <blkid_probe_get_size@plt+0x47bec>
   4f0e0:	add	sp, sp, #12
   4f0e4:	pop	{r4, r5, pc}
   4f0e8:	ldr	r1, [pc, #36]	; 4f114 <blkid_probe_get_size@plt+0x47bfc>
   4f0ec:	add	r1, pc, r1
   4f0f0:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   4f0f4:	mov	r0, #0
   4f0f8:	b	4f0d0 <blkid_probe_get_size@plt+0x47bb8>
   4f0fc:	mvn	r0, #1
   4f100:	b	4f0d0 <blkid_probe_get_size@plt+0x47bb8>
   4f104:	bl	6fb4 <__stack_chk_fail@plt>
   4f108:	andeq	r8, r4, r4, lsl #22
   4f10c:	andeq	r0, r0, ip, lsr r4
   4f110:	andeq	r3, r2, r8, lsr #31
   4f114:	andeq	r3, r2, r4, ror pc
   4f118:	ldr	r3, [pc, #368]	; 4f290 <blkid_probe_get_size@plt+0x47d78>
   4f11c:	ldr	ip, [pc, #368]	; 4f294 <blkid_probe_get_size@plt+0x47d7c>
   4f120:	add	r3, pc, r3
   4f124:	push	{r4, r5, r6, r7, r8, r9, lr}
   4f128:	sub	sp, sp, #76	; 0x4c
   4f12c:	ldr	r7, [r3, ip]
   4f130:	mov	r5, #0
   4f134:	subs	r6, r0, #0
   4f138:	ldr	r3, [r7]
   4f13c:	str	r5, [sp, #12]
   4f140:	str	r3, [sp, #68]	; 0x44
   4f144:	beq	4f260 <blkid_probe_get_size@plt+0x47d48>
   4f148:	mov	r8, r1
   4f14c:	mov	r9, r2
   4f150:	ldr	r1, [pc, #320]	; 4f298 <blkid_probe_get_size@plt+0x47d80>
   4f154:	ldr	r2, [pc, #320]	; 4f29c <blkid_probe_get_size@plt+0x47d84>
   4f158:	add	r3, sp, #24
   4f15c:	add	r2, pc, r2
   4f160:	add	r1, pc, r1
   4f164:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   4f168:	cmp	r0, #0
   4f16c:	blt	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f170:	add	r1, sp, #20
   4f174:	ldr	r0, [sp, #24]
   4f178:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   4f17c:	cmp	r0, #0
   4f180:	blt	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f184:	ldr	r1, [pc, #276]	; 4f2a0 <blkid_probe_get_size@plt+0x47d88>
   4f188:	add	r2, sp, #16
   4f18c:	add	r1, pc, r1
   4f190:	ldr	r0, [sp, #20]
   4f194:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4f198:	cmp	r0, #0
   4f19c:	blt	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f1a0:	ldr	r4, [sp, #16]
   4f1a4:	mov	r0, r4
   4f1a8:	bl	723c <strlen@plt>
   4f1ac:	cmp	r0, r9
   4f1b0:	bcc	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f1b4:	ldrb	r3, [r4]
   4f1b8:	cmp	r3, #123	; 0x7b
   4f1bc:	bne	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f1c0:	add	r3, r4, r9
   4f1c4:	ldrb	r3, [r3, #-1]
   4f1c8:	cmp	r3, #125	; 0x7d
   4f1cc:	bne	4f258 <blkid_probe_get_size@plt+0x47d40>
   4f1d0:	sub	r2, r4, #2
   4f1d4:	mov	r3, r4
   4f1d8:	mov	r1, r5
   4f1dc:	add	r9, r2, r9
   4f1e0:	ldrb	ip, [r3, #1]!
   4f1e4:	cmp	ip, #45	; 0x2d
   4f1e8:	addne	r2, sp, #72	; 0x48
   4f1ec:	addne	r0, r2, r1
   4f1f0:	addne	r1, r1, #1
   4f1f4:	strbne	ip, [r0, #-44]	; 0xffffffd4
   4f1f8:	cmp	r9, r3
   4f1fc:	bne	4f1e0 <blkid_probe_get_size@plt+0x47cc8>
   4f200:	add	r3, sp, #72	; 0x48
   4f204:	add	r3, r3, r1
   4f208:	mov	r2, #0
   4f20c:	add	r1, sp, #12
   4f210:	mov	r0, r6
   4f214:	strb	r2, [r3, #-44]	; 0xffffffd4
   4f218:	bl	4f05c <blkid_probe_get_size@plt+0x47b44>
   4f21c:	ldr	r1, [pc, #128]	; 4f2a4 <blkid_probe_get_size@plt+0x47d8c>
   4f220:	mov	r0, r8
   4f224:	ldr	r3, [sp, #12]
   4f228:	add	r2, sp, #28
   4f22c:	add	r1, pc, r1
   4f230:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   4f234:	ldr	r0, [sp, #12]
   4f238:	bl	69f0 <free@plt>
   4f23c:	ldr	r2, [sp, #68]	; 0x44
   4f240:	ldr	r3, [r7]
   4f244:	mov	r0, r6
   4f248:	cmp	r2, r3
   4f24c:	bne	4f28c <blkid_probe_get_size@plt+0x47d74>
   4f250:	add	sp, sp, #76	; 0x4c
   4f254:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4f258:	mov	r6, #0
   4f25c:	b	4f234 <blkid_probe_get_size@plt+0x47d1c>
   4f260:	ldr	r2, [pc, #64]	; 4f2a8 <blkid_probe_get_size@plt+0x47d90>
   4f264:	ldr	r1, [pc, #64]	; 4f2ac <blkid_probe_get_size@plt+0x47d94>
   4f268:	add	r2, pc, r2
   4f26c:	add	r2, r2, #52	; 0x34
   4f270:	str	r2, [sp]
   4f274:	ldr	r2, [pc, #52]	; 4f2b0 <blkid_probe_get_size@plt+0x47d98>
   4f278:	mov	r3, #368	; 0x170
   4f27c:	add	r2, pc, r2
   4f280:	add	r1, pc, r1
   4f284:	mov	r0, #1
   4f288:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4f28c:	bl	6fb4 <__stack_chk_fail@plt>
   4f290:	andeq	r8, r4, r8, asr #20
   4f294:	andeq	r0, r0, ip, lsr r4
   4f298:			; <UNDEFINED> instruction: 0x0001bcb4
   4f29c:	ldrdeq	r3, [r2], -ip
   4f2a0:	strdeq	r3, [r2], -r8
   4f2a4:	andeq	r3, r2, r4, ror #28
   4f2a8:	ldrdeq	r3, [r2], -ip
   4f2ac:	andeq	r7, r1, r8, asr #27
   4f2b0:	muleq	r2, r8, sp
   4f2b4:	ldr	r3, [pc, #664]	; 4f554 <blkid_probe_get_size@plt+0x4803c>
   4f2b8:	ldr	ip, [pc, #664]	; 4f558 <blkid_probe_get_size@plt+0x48040>
   4f2bc:	add	r3, pc, r3
   4f2c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f2c4:	subs	r8, r0, #0
   4f2c8:	add	fp, sp, #32
   4f2cc:	sub	sp, sp, #76	; 0x4c
   4f2d0:	ldr	r0, [r3, ip]
   4f2d4:	mov	r2, #0
   4f2d8:	str	r0, [fp, #-96]	; 0xffffffa0
   4f2dc:	ldr	r3, [r0]
   4f2e0:	str	r2, [fp, #-60]	; 0xffffffc4
   4f2e4:	str	r2, [fp, #-64]	; 0xffffffc0
   4f2e8:	str	r3, [fp, #-40]	; 0xffffffd8
   4f2ec:	str	r2, [fp, #-80]	; 0xffffffb0
   4f2f0:	beq	4f4f8 <blkid_probe_get_size@plt+0x47fe0>
   4f2f4:	sub	r5, fp, #36	; 0x24
   4f2f8:	ldr	r7, [pc, #604]	; 4f55c <blkid_probe_get_size@plt+0x48044>
   4f2fc:	mov	sl, r1
   4f300:	mov	r0, r8
   4f304:	str	r8, [r5, #-20]!	; 0xffffffec
   4f308:	sub	r6, fp, #84	; 0x54
   4f30c:	add	r7, pc, r7
   4f310:	b	4f350 <blkid_probe_get_size@plt+0x47e38>
   4f314:	mov	r1, r6
   4f318:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4f31c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   4f320:	cmp	r0, #0
   4f324:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f328:	ldr	r4, [fp, #-84]	; 0xffffffac
   4f32c:	mov	r2, #7
   4f330:	mov	r0, r4
   4f334:	mov	r1, r7
   4f338:	bl	6a5c <strncmp@plt>
   4f33c:	subs	r9, r0, #0
   4f340:	bne	4f34c <blkid_probe_get_size@plt+0x47e34>
   4f344:	cmn	r4, #7
   4f348:	bne	4f3ac <blkid_probe_get_size@plt+0x47e94>
   4f34c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4f350:	mov	r1, r5
   4f354:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   4f358:	cmp	r0, #0
   4f35c:	bge	4f314 <blkid_probe_get_size@plt+0x47dfc>
   4f360:	mov	r8, #0
   4f364:	ldr	r0, [fp, #-80]	; 0xffffffb0
   4f368:	bl	69f0 <free@plt>
   4f36c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4f370:	cmp	r0, #0
   4f374:	beq	4f37c <blkid_probe_get_size@plt+0x47e64>
   4f378:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   4f37c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4f380:	cmp	r0, #0
   4f384:	beq	4f38c <blkid_probe_get_size@plt+0x47e74>
   4f388:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   4f38c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4f390:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f394:	mov	r0, r8
   4f398:	ldr	r3, [r3]
   4f39c:	cmp	r2, r3
   4f3a0:	bne	4f550 <blkid_probe_get_size@plt+0x48038>
   4f3a4:	sub	sp, fp, #32
   4f3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f3ac:	ldr	r1, [pc, #428]	; 4f560 <blkid_probe_get_size@plt+0x48048>
   4f3b0:	mov	r2, r4
   4f3b4:	add	r1, pc, r1
   4f3b8:	sub	r0, fp, #60	; 0x3c
   4f3bc:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   4f3c0:	cmp	r0, #0
   4f3c4:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f3c8:	ldr	r1, [pc, #404]	; 4f564 <blkid_probe_get_size@plt+0x4804c>
   4f3cc:	sub	r2, fp, #68	; 0x44
   4f3d0:	add	r1, pc, r1
   4f3d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4f3d8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4f3dc:	cmp	r0, #0
   4f3e0:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f3e4:	sub	r1, fp, #88	; 0x58
   4f3e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4f3ec:	bl	35c5c <blkid_probe_get_size@plt+0x2e744>
   4f3f0:	cmp	r0, #0
   4f3f4:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f3f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   4f3fc:	cmp	r2, #0
   4f400:	beq	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f404:	ldr	r6, [pc, #348]	; 4f568 <blkid_probe_get_size@plt+0x48050>
   4f408:	ldr	r1, [pc, #348]	; 4f56c <blkid_probe_get_size@plt+0x48054>
   4f40c:	mov	r0, r2
   4f410:	add	r1, pc, r1
   4f414:	add	r6, pc, r6
   4f418:	str	r2, [fp, #-48]	; 0xffffffd0
   4f41c:	str	r6, [fp, #-52]	; 0xffffffcc
   4f420:	str	r1, [fp, #-44]	; 0xffffffd4
   4f424:	bl	723c <strlen@plt>
   4f428:	add	r2, r0, #13
   4f42c:	cmp	r2, #4194304	; 0x400000
   4f430:	bhi	4f524 <blkid_probe_get_size@plt+0x4800c>
   4f434:	add	r0, r0, #27
   4f438:	bic	r0, r0, #7
   4f43c:	sub	sp, sp, r0
   4f440:	add	r5, sp, #8
   4f444:	mov	r1, r6
   4f448:	mov	r4, r9
   4f44c:	mov	r0, r5
   4f450:	sub	r6, fp, #52	; 0x34
   4f454:	add	r4, r4, #1
   4f458:	bl	6ae0 <stpcpy@plt>
   4f45c:	cmp	r4, #3
   4f460:	beq	4f470 <blkid_probe_get_size@plt+0x47f58>
   4f464:	ldr	r1, [r6, r4, lsl #2]
   4f468:	cmp	r1, #0
   4f46c:	bne	4f454 <blkid_probe_get_size@plt+0x47f3c>
   4f470:	ldr	r1, [pc, #248]	; 4f570 <blkid_probe_get_size@plt+0x48058>
   4f474:	mov	r2, r5
   4f478:	add	r1, pc, r1
   4f47c:	sub	r0, fp, #64	; 0x40
   4f480:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   4f484:	cmp	r0, #0
   4f488:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f48c:	ldr	r1, [pc, #224]	; 4f574 <blkid_probe_get_size@plt+0x4805c>
   4f490:	sub	r2, fp, #72	; 0x48
   4f494:	add	r1, pc, r1
   4f498:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4f49c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4f4a0:	cmp	r0, #0
   4f4a4:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f4a8:	ldr	r1, [pc, #200]	; 4f578 <blkid_probe_get_size@plt+0x48060>
   4f4ac:	sub	r2, fp, #76	; 0x4c
   4f4b0:	add	r1, pc, r1
   4f4b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4f4b8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4f4bc:	cmp	r0, #0
   4f4c0:	blt	4f360 <blkid_probe_get_size@plt+0x47e48>
   4f4c4:	sub	r1, fp, #80	; 0x50
   4f4c8:	mov	r0, r8
   4f4cc:	bl	4f05c <blkid_probe_get_size@plt+0x47b44>
   4f4d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   4f4d4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   4f4d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   4f4dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   4f4e0:	stm	sp, {r1, ip}
   4f4e4:	ldr	r1, [pc, #144]	; 4f57c <blkid_probe_get_size@plt+0x48064>
   4f4e8:	mov	r0, sl
   4f4ec:	add	r1, pc, r1
   4f4f0:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   4f4f4:	b	4f364 <blkid_probe_get_size@plt+0x47e4c>
   4f4f8:	ldr	r2, [pc, #128]	; 4f580 <blkid_probe_get_size@plt+0x48068>
   4f4fc:	ldr	r1, [pc, #128]	; 4f584 <blkid_probe_get_size@plt+0x4806c>
   4f500:	add	r2, pc, r2
   4f504:	add	r2, r2, #72	; 0x48
   4f508:	str	r2, [sp]
   4f50c:	ldr	r2, [pc, #116]	; 4f588 <blkid_probe_get_size@plt+0x48070>
   4f510:	mov	r3, #220	; 0xdc
   4f514:	add	r2, pc, r2
   4f518:	add	r1, pc, r1
   4f51c:	mov	r0, #1
   4f520:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4f524:	ldr	r2, [pc, #96]	; 4f58c <blkid_probe_get_size@plt+0x48074>
   4f528:	ldr	r1, [pc, #96]	; 4f590 <blkid_probe_get_size@plt+0x48078>
   4f52c:	add	r2, pc, r2
   4f530:	add	r2, r2, #72	; 0x48
   4f534:	str	r2, [sp]
   4f538:	ldr	r2, [pc, #84]	; 4f594 <blkid_probe_get_size@plt+0x4807c>
   4f53c:	mov	r3, #243	; 0xf3
   4f540:	add	r2, pc, r2
   4f544:	add	r1, pc, r1
   4f548:	mov	r0, #1
   4f54c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4f550:	bl	6fb4 <__stack_chk_fail@plt>
   4f554:	andeq	r8, r4, ip, lsr #17
   4f558:	andeq	r0, r0, ip, lsr r4
   4f55c:	muleq	r2, ip, sp
   4f560:	strdeq	r3, [r2], -ip
   4f564:	strdeq	r3, [r2], -r0
   4f568:	andeq	r3, r2, r8, lsl #25
   4f56c:			; <UNDEFINED> instruction: 0x00023cbc
   4f570:	andeq	r3, r2, r8, asr ip
   4f574:	andeq	r3, r2, r0, asr ip
   4f578:	andeq	r3, r2, r8, asr #24
   4f57c:	andeq	r3, r2, ip, lsl ip
   4f580:	andeq	r3, r2, r4, asr #8
   4f584:	andeq	r7, r1, r0, lsr fp
   4f588:	andeq	r3, r2, r0, lsl #22
   4f58c:	andeq	r3, r2, r8, lsl r4
   4f590:	andeq	r5, r1, r4, asr fp
   4f594:	ldrdeq	r3, [r2], -r4
   4f598:	ldr	r3, [pc, #128]	; 4f620 <blkid_probe_get_size@plt+0x48108>
   4f59c:	push	{lr}		; (str lr, [sp, #-4]!)
   4f5a0:	add	r3, pc, r3
   4f5a4:	sub	sp, sp, #12
   4f5a8:	ldr	r3, [r3, #4]
   4f5ac:	cmp	r3, #6
   4f5b0:	bgt	4f5e8 <blkid_probe_get_size@plt+0x480d0>
   4f5b4:	ldr	r3, [pc, #104]	; 4f624 <blkid_probe_get_size@plt+0x4810c>
   4f5b8:	ldr	r0, [pc, r3]
   4f5bc:	cmp	r0, #0
   4f5c0:	beq	4f5e0 <blkid_probe_get_size@plt+0x480c8>
   4f5c4:	add	r1, r0, #16
   4f5c8:	ldr	r0, [pc, #88]	; 4f628 <blkid_probe_get_size@plt+0x48110>
   4f5cc:	mov	r2, #0
   4f5d0:	add	r0, pc, r0
   4f5d4:	add	sp, sp, #12
   4f5d8:	pop	{lr}		; (ldr lr, [sp], #4)
   4f5dc:	b	3fad4 <blkid_probe_get_size@plt+0x385bc>
   4f5e0:	add	sp, sp, #12
   4f5e4:	pop	{pc}		; (ldr pc, [sp], #4)
   4f5e8:	ldr	r2, [pc, #60]	; 4f62c <blkid_probe_get_size@plt+0x48114>
   4f5ec:	ldr	r3, [pc, #60]	; 4f630 <blkid_probe_get_size@plt+0x48118>
   4f5f0:	add	r2, pc, r2
   4f5f4:	str	r2, [sp, #4]
   4f5f8:	add	r3, pc, r3
   4f5fc:	ldr	r2, [pc, #48]	; 4f634 <blkid_probe_get_size@plt+0x4811c>
   4f600:	add	r3, r3, #92	; 0x5c
   4f604:	str	r3, [sp]
   4f608:	add	r2, pc, r2
   4f60c:	mov	r3, #70	; 0x46
   4f610:	mov	r1, #0
   4f614:	ldr	r0, [pc, #28]	; 4f638 <blkid_probe_get_size@plt+0x48120>
   4f618:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4f61c:	b	4f5b4 <blkid_probe_get_size@plt+0x4809c>
   4f620:	muleq	r4, ip, fp
   4f624:	andeq	r9, r4, ip, asr #17
   4f628:	andeq	fp, r3, r0, ror #22
   4f62c:	andeq	r3, r2, ip, asr fp
   4f630:	andeq	r3, r2, ip, asr #6
   4f634:	andeq	r3, r2, r8, lsl fp
   4f638:	andeq	r0, r0, r7, lsl #8
   4f63c:	ldr	r3, [pc, #160]	; 4f6e4 <blkid_probe_get_size@plt+0x481cc>
   4f640:	push	{r4, r5, lr}
   4f644:	sub	sp, sp, #12
   4f648:	ldr	r5, [pc, r3]
   4f64c:	cmp	r5, #0
   4f650:	beq	4f688 <blkid_probe_get_size@plt+0x48170>
   4f654:	ldr	r0, [r5, #4]
   4f658:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4f65c:	ldr	r0, [r5, #12]
   4f660:	bl	344a0 <blkid_probe_get_size@plt+0x2cf88>
   4f664:	ldr	r0, [r5]
   4f668:	cmp	r0, #0
   4f66c:	beq	4f680 <blkid_probe_get_size@plt+0x48168>
   4f670:	ldr	r4, [r0, #140]	; 0x8c
   4f674:	bl	2adbc <blkid_probe_get_size@plt+0x238a4>
   4f678:	subs	r0, r4, #0
   4f67c:	bne	4f670 <blkid_probe_get_size@plt+0x48158>
   4f680:	mov	r0, r5
   4f684:	bl	69f0 <free@plt>
   4f688:	ldr	r2, [pc, #88]	; 4f6e8 <blkid_probe_get_size@plt+0x481d0>
   4f68c:	ldr	r3, [pc, #88]	; 4f6ec <blkid_probe_get_size@plt+0x481d4>
   4f690:	add	r2, pc, r2
   4f694:	add	r3, pc, r3
   4f698:	ldr	r2, [r2, #4]
   4f69c:	mov	r1, #0
   4f6a0:	cmp	r2, #6
   4f6a4:	str	r1, [r3]
   4f6a8:	ble	4f6dc <blkid_probe_get_size@plt+0x481c4>
   4f6ac:	ldr	r2, [pc, #60]	; 4f6f0 <blkid_probe_get_size@plt+0x481d8>
   4f6b0:	ldr	r3, [pc, #60]	; 4f6f4 <blkid_probe_get_size@plt+0x481dc>
   4f6b4:	add	r2, pc, r2
   4f6b8:	add	r3, pc, r3
   4f6bc:	str	r2, [sp, #4]
   4f6c0:	ldr	r2, [pc, #48]	; 4f6f8 <blkid_probe_get_size@plt+0x481e0>
   4f6c4:	add	r3, r3, #124	; 0x7c
   4f6c8:	str	r3, [sp]
   4f6cc:	add	r2, pc, r2
   4f6d0:	mov	r3, #66	; 0x42
   4f6d4:	ldr	r0, [pc, #32]	; 4f6fc <blkid_probe_get_size@plt+0x481e4>
   4f6d8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4f6dc:	add	sp, sp, #12
   4f6e0:	pop	{r4, r5, pc}
   4f6e4:	andeq	r9, r4, ip, lsr r8
   4f6e8:	andeq	r8, r4, ip, lsr #21
   4f6ec:	strdeq	r9, [r4], -r0
   4f6f0:	andeq	r3, r2, r8, asr #21
   4f6f4:	andeq	r3, r2, ip, lsl #5
   4f6f8:	andeq	r3, r2, r4, asr sl
   4f6fc:	andeq	r0, r0, r7, lsl #8
   4f700:	ldr	r3, [pc, #1280]	; 4fc08 <blkid_probe_get_size@plt+0x486f0>
   4f704:	ldr	r2, [pc, #1280]	; 4fc0c <blkid_probe_get_size@plt+0x486f4>
   4f708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f70c:	add	r3, pc, r3
   4f710:	ldr	r7, [pc, #1272]	; 4fc10 <blkid_probe_get_size@plt+0x486f8>
   4f714:	ldr	r4, [r3, r2]
   4f718:	add	r7, pc, r7
   4f71c:	sub	sp, sp, #44	; 0x2c
   4f720:	ldr	r6, [r7]
   4f724:	ldr	r3, [r4]
   4f728:	cmp	r6, #0
   4f72c:	str	r3, [sp, #36]	; 0x24
   4f730:	beq	4f754 <blkid_probe_get_size@plt+0x4823c>
   4f734:	mov	fp, #0
   4f738:	ldr	r1, [sp, #36]	; 0x24
   4f73c:	ldr	r2, [r4]
   4f740:	mov	r0, fp
   4f744:	cmp	r1, r2
   4f748:	bne	4fc04 <blkid_probe_get_size@plt+0x486ec>
   4f74c:	add	sp, sp, #44	; 0x2c
   4f750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f754:	mov	r1, #24
   4f758:	mov	r0, #1
   4f75c:	bl	7164 <calloc@plt>
   4f760:	subs	r5, r0, #0
   4f764:	beq	4fbfc <blkid_probe_get_size@plt+0x486e4>
   4f768:	add	r8, sp, #40	; 0x28
   4f76c:	ldr	r0, [pc, #1184]	; 4fc14 <blkid_probe_get_size@plt+0x486fc>
   4f770:	mvn	r2, #0
   4f774:	mov	r3, #1
   4f778:	str	r6, [r8, #-8]!
   4f77c:	str	r6, [r5]
   4f780:	str	r2, [r5, #4]
   4f784:	strb	r3, [r5, #8]
   4f788:	mov	r2, r8
   4f78c:	mov	r1, #2
   4f790:	add	r0, pc, r0
   4f794:	str	r5, [r7]
   4f798:	bl	3efd0 <blkid_probe_get_size@plt+0x37ab8>
   4f79c:	ldr	r6, [sp, #32]
   4f7a0:	cmp	r0, #0
   4f7a4:	blt	4f824 <blkid_probe_get_size@plt+0x4830c>
   4f7a8:	beq	4f824 <blkid_probe_get_size@plt+0x4830c>
   4f7ac:	cmp	r6, #0
   4f7b0:	beq	4f82c <blkid_probe_get_size@plt+0x48314>
   4f7b4:	mov	r0, r6
   4f7b8:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   4f7bc:	subs	r7, r0, #0
   4f7c0:	blt	4f824 <blkid_probe_get_size@plt+0x4830c>
   4f7c4:	mov	r0, r6
   4f7c8:	bl	69f0 <free@plt>
   4f7cc:	cmp	r7, #0
   4f7d0:	bne	4f82c <blkid_probe_get_size@plt+0x48314>
   4f7d4:	ldr	r3, [pc, #1084]	; 4fc18 <blkid_probe_get_size@plt+0x48700>
   4f7d8:	strb	r7, [r5, #8]
   4f7dc:	add	r3, pc, r3
   4f7e0:	ldr	r3, [r3, #4]
   4f7e4:	cmp	r3, #5
   4f7e8:	ble	4f82c <blkid_probe_get_size@plt+0x48314>
   4f7ec:	ldr	r2, [pc, #1064]	; 4fc1c <blkid_probe_get_size@plt+0x48704>
   4f7f0:	ldr	r3, [pc, #1064]	; 4fc20 <blkid_probe_get_size@plt+0x48708>
   4f7f4:	add	r2, pc, r2
   4f7f8:	str	r2, [sp, #4]
   4f7fc:	add	r3, pc, r3
   4f800:	ldr	r2, [pc, #1052]	; 4fc24 <blkid_probe_get_size@plt+0x4870c>
   4f804:	add	r3, r3, #152	; 0x98
   4f808:	str	r3, [sp]
   4f80c:	mov	r1, r7
   4f810:	mov	r3, #215	; 0xd7
   4f814:	add	r2, pc, r2
   4f818:	ldr	r0, [pc, #1032]	; 4fc28 <blkid_probe_get_size@plt+0x48710>
   4f81c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4f820:	b	4f82c <blkid_probe_get_size@plt+0x48314>
   4f824:	mov	r0, r6
   4f828:	bl	69f0 <free@plt>
   4f82c:	ldr	r6, [pc, #1016]	; 4fc2c <blkid_probe_get_size@plt+0x48714>
   4f830:	mov	r2, #1
   4f834:	add	r6, pc, r6
   4f838:	add	r1, r5, #16
   4f83c:	mov	r0, r6
   4f840:	bl	3fad4 <blkid_probe_get_size@plt+0x385bc>
   4f844:	ldr	r1, [pc, #996]	; 4fc30 <blkid_probe_get_size@plt+0x48718>
   4f848:	mov	r3, r6
   4f84c:	add	r1, pc, r1
   4f850:	mov	r0, r8
   4f854:	mov	r2, #0
   4f858:	bl	4a7f8 <blkid_probe_get_size@plt+0x432e0>
   4f85c:	subs	r1, r0, #0
   4f860:	blt	4fa10 <blkid_probe_get_size@plt+0x484f8>
   4f864:	ldr	r7, [sp, #32]
   4f868:	cmp	r7, #0
   4f86c:	beq	4f980 <blkid_probe_get_size@plt+0x48468>
   4f870:	mov	r0, r7
   4f874:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
   4f878:	sub	r0, r0, #-1073741823	; 0xc0000001
   4f87c:	add	r6, r7, r0, lsl #2
   4f880:	cmp	r7, r6
   4f884:	bhi	4f978 <blkid_probe_get_size@plt+0x48460>
   4f888:	ldr	r7, [r7, r0, lsl #2]
   4f88c:	cmp	r7, #0
   4f890:	beq	4f940 <blkid_probe_get_size@plt+0x48428>
   4f894:	ldr	r2, [pc, #920]	; 4fc34 <blkid_probe_get_size@plt+0x4871c>
   4f898:	ldr	r3, [pc, #920]	; 4fc38 <blkid_probe_get_size@plt+0x48720>
   4f89c:	ldr	sl, [pc, #920]	; 4fc3c <blkid_probe_get_size@plt+0x48724>
   4f8a0:	ldr	r1, [pc, #920]	; 4fc40 <blkid_probe_get_size@plt+0x48728>
   4f8a4:	add	r2, pc, r2
   4f8a8:	add	r3, pc, r3
   4f8ac:	str	r4, [sp, #16]
   4f8b0:	add	sl, pc, sl
   4f8b4:	sub	r6, r6, #4
   4f8b8:	mov	r4, r5
   4f8bc:	add	r1, pc, r1
   4f8c0:	add	r2, r2, #184	; 0xb8
   4f8c4:	add	r3, r3, #184	; 0xb8
   4f8c8:	str	r1, [sp, #20]
   4f8cc:	str	r2, [sp, #28]
   4f8d0:	str	r3, [sp, #24]
   4f8d4:	mov	r1, sl
   4f8d8:	mov	r0, r7
   4f8dc:	bl	738c <fopen64@plt>
   4f8e0:	subs	r8, r0, #0
   4f8e4:	beq	4f9cc <blkid_probe_get_size@plt+0x484b4>
   4f8e8:	bl	6f90 <fileno@plt>
   4f8ec:	bl	3e014 <blkid_probe_get_size@plt+0x36afc>
   4f8f0:	subs	r9, r0, #0
   4f8f4:	beq	4fa40 <blkid_probe_get_size@plt+0x48528>
   4f8f8:	ldr	r3, [pc, #836]	; 4fc44 <blkid_probe_get_size@plt+0x4872c>
   4f8fc:	add	r3, pc, r3
   4f900:	ldr	r3, [r3, #4]
   4f904:	cmp	r3, #6
   4f908:	bgt	4fb50 <blkid_probe_get_size@plt+0x48638>
   4f90c:	mov	r0, r8
   4f910:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4f914:	ldr	r7, [sp, #32]
   4f918:	cmp	r7, r6
   4f91c:	movhi	r3, #0
   4f920:	movls	r3, #1
   4f924:	cmp	r7, #0
   4f928:	moveq	r3, #0
   4f92c:	cmp	r3, #0
   4f930:	beq	4f96c <blkid_probe_get_size@plt+0x48454>
   4f934:	ldr	r7, [r6], #-4
   4f938:	cmp	r7, #0
   4f93c:	bne	4f8d4 <blkid_probe_get_size@plt+0x483bc>
   4f940:	ldr	r2, [pc, #768]	; 4fc48 <blkid_probe_get_size@plt+0x48730>
   4f944:	ldr	r1, [pc, #768]	; 4fc4c <blkid_probe_get_size@plt+0x48734>
   4f948:	add	r2, pc, r2
   4f94c:	add	r2, r2, #172	; 0xac
   4f950:	str	r2, [sp]
   4f954:	ldr	r2, [pc, #756]	; 4fc50 <blkid_probe_get_size@plt+0x48738>
   4f958:	mov	r3, #134	; 0x86
   4f95c:	add	r2, pc, r2
   4f960:	add	r1, pc, r1
   4f964:	mov	r0, #1
   4f968:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4f96c:	cmp	r7, #0
   4f970:	ldr	r4, [sp, #16]
   4f974:	beq	4f980 <blkid_probe_get_size@plt+0x48468>
   4f978:	mov	r0, r7
   4f97c:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   4f980:	ldr	r3, [pc, #716]	; 4fc54 <blkid_probe_get_size@plt+0x4873c>
   4f984:	add	r3, pc, r3
   4f988:	ldr	r3, [r3, #4]
   4f98c:	cmp	r3, #6
   4f990:	ble	4f734 <blkid_probe_get_size@plt+0x4821c>
   4f994:	ldr	r2, [pc, #700]	; 4fc58 <blkid_probe_get_size@plt+0x48740>
   4f998:	ldr	r3, [pc, #700]	; 4fc5c <blkid_probe_get_size@plt+0x48744>
   4f99c:	add	r2, pc, r2
   4f9a0:	str	r2, [sp, #4]
   4f9a4:	add	r3, pc, r3
   4f9a8:	ldr	r2, [pc, #688]	; 4fc60 <blkid_probe_get_size@plt+0x48748>
   4f9ac:	add	r3, r3, #196	; 0xc4
   4f9b0:	str	r3, [sp]
   4f9b4:	add	r2, pc, r2
   4f9b8:	mov	r3, #59	; 0x3b
   4f9bc:	mov	r1, #0
   4f9c0:	ldr	r0, [pc, #668]	; 4fc64 <blkid_probe_get_size@plt+0x4874c>
   4f9c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4f9c8:	b	4f734 <blkid_probe_get_size@plt+0x4821c>
   4f9cc:	bl	732c <__errno_location@plt>
   4f9d0:	ldr	fp, [r0]
   4f9d4:	mov	r0, r8
   4f9d8:	cmp	fp, #2
   4f9dc:	beq	4fb48 <blkid_probe_get_size@plt+0x48630>
   4f9e0:	rsb	fp, fp, #0
   4f9e4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4f9e8:	cmp	fp, #0
   4f9ec:	bge	4f914 <blkid_probe_get_size@plt+0x483fc>
   4f9f0:	ldr	r0, [sp, #32]
   4f9f4:	ldr	r4, [sp, #16]
   4f9f8:	cmp	r0, #0
   4f9fc:	beq	4f738 <blkid_probe_get_size@plt+0x48220>
   4fa00:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   4fa04:	cmp	fp, #0
   4fa08:	bge	4f980 <blkid_probe_get_size@plt+0x48468>
   4fa0c:	b	4f738 <blkid_probe_get_size@plt+0x48220>
   4fa10:	ldr	r3, [pc, #592]	; 4fc68 <blkid_probe_get_size@plt+0x48750>
   4fa14:	add	r3, pc, r3
   4fa18:	ldr	r3, [r3, #4]
   4fa1c:	cmp	r3, #2
   4fa20:	rsble	r3, r1, #0
   4fa24:	uxtble	r3, r3
   4fa28:	rsble	fp, r3, #0
   4fa2c:	bgt	4fb94 <blkid_probe_get_size@plt+0x4867c>
   4fa30:	ldr	r0, [sp, #32]
   4fa34:	cmp	r0, #0
   4fa38:	bne	4fa00 <blkid_probe_get_size@plt+0x484e8>
   4fa3c:	b	4fa04 <blkid_probe_get_size@plt+0x484ec>
   4fa40:	mov	r1, #148	; 0x94
   4fa44:	mov	r0, #1
   4fa48:	bl	7164 <calloc@plt>
   4fa4c:	subs	r5, r0, #0
   4fa50:	beq	4fbcc <blkid_probe_get_size@plt+0x486b4>
   4fa54:	mvn	r3, #0
   4fa58:	str	r3, [r5, #52]	; 0x34
   4fa5c:	str	r3, [r5, #92]	; 0x5c
   4fa60:	str	r3, [r5, #76]	; 0x4c
   4fa64:	str	r3, [r5, #96]	; 0x60
   4fa68:	str	r3, [r5, #80]	; 0x50
   4fa6c:	str	r3, [r5, #100]	; 0x64
   4fa70:	str	r3, [r5, #104]	; 0x68
   4fa74:	str	r3, [r5, #108]	; 0x6c
   4fa78:	str	r3, [r5, #112]	; 0x70
   4fa7c:	str	r3, [r5, #116]	; 0x74
   4fa80:	mov	r2, #4
   4fa84:	mov	r3, r5
   4fa88:	mov	r1, r8
   4fa8c:	mov	r0, r7
   4fa90:	bl	61128 <blkid_probe_get_size@plt+0x59c10>
   4fa94:	subs	fp, r0, #0
   4fa98:	blt	4fb34 <blkid_probe_get_size@plt+0x4861c>
   4fa9c:	ldr	r3, [sp, #20]
   4faa0:	ldr	r3, [r3, #4]
   4faa4:	cmp	r3, #6
   4faa8:	ble	4fadc <blkid_probe_get_size@plt+0x485c4>
   4faac:	ldr	r2, [sp, #24]
   4fab0:	ldr	r3, [pc, #436]	; 4fc6c <blkid_probe_get_size@plt+0x48754>
   4fab4:	str	r2, [sp]
   4fab8:	ldr	r2, [pc, #432]	; 4fc70 <blkid_probe_get_size@plt+0x48758>
   4fabc:	add	r3, pc, r3
   4fac0:	str	r3, [sp, #4]
   4fac4:	str	r7, [sp, #8]
   4fac8:	mov	r1, r9
   4facc:	mov	r3, #169	; 0xa9
   4fad0:	add	r2, pc, r2
   4fad4:	ldr	r0, [pc, #392]	; 4fc64 <blkid_probe_get_size@plt+0x4874c>
   4fad8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4fadc:	mov	r0, r7
   4fae0:	bl	74e8 <strdup@plt>
   4fae4:	cmp	r0, #0
   4fae8:	str	r0, [r5]
   4faec:	beq	4fb18 <blkid_probe_get_size@plt+0x48600>
   4faf0:	ldr	r3, [r4]
   4faf4:	mov	r0, r8
   4faf8:	cmp	r3, #0
   4fafc:	str	r3, [r5, #140]	; 0x8c
   4fb00:	strne	r5, [r3, #144]	; 0x90
   4fb04:	mov	r3, #0
   4fb08:	str	r5, [r4]
   4fb0c:	str	r3, [r5, #144]	; 0x90
   4fb10:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4fb14:	b	4f914 <blkid_probe_get_size@plt+0x483fc>
   4fb18:	ldr	r1, [pc, #340]	; 4fc74 <blkid_probe_get_size@plt+0x4875c>
   4fb1c:	ldr	r3, [sp, #28]
   4fb20:	mov	r2, #176	; 0xb0
   4fb24:	add	r1, pc, r1
   4fb28:	mov	r0, #1
   4fb2c:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4fb30:	mov	fp, r0
   4fb34:	mov	r0, r8
   4fb38:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4fb3c:	mov	r0, r5
   4fb40:	bl	2adbc <blkid_probe_get_size@plt+0x238a4>
   4fb44:	b	4f9e8 <blkid_probe_get_size@plt+0x484d0>
   4fb48:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4fb4c:	b	4f914 <blkid_probe_get_size@plt+0x483fc>
   4fb50:	ldr	r2, [pc, #288]	; 4fc78 <blkid_probe_get_size@plt+0x48760>
   4fb54:	ldr	r3, [pc, #288]	; 4fc7c <blkid_probe_get_size@plt+0x48764>
   4fb58:	add	r2, pc, r2
   4fb5c:	str	r2, [sp, #4]
   4fb60:	add	r3, pc, r3
   4fb64:	ldr	r2, [pc, #276]	; 4fc80 <blkid_probe_get_size@plt+0x48768>
   4fb68:	add	r3, r3, #184	; 0xb8
   4fb6c:	str	r3, [sp]
   4fb70:	str	r7, [sp, #8]
   4fb74:	mov	r3, #145	; 0x91
   4fb78:	add	r2, pc, r2
   4fb7c:	mov	r1, #0
   4fb80:	ldr	r0, [pc, #220]	; 4fc64 <blkid_probe_get_size@plt+0x4874c>
   4fb84:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4fb88:	mov	r0, r8
   4fb8c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4fb90:	b	4f914 <blkid_probe_get_size@plt+0x483fc>
   4fb94:	ldr	r2, [pc, #232]	; 4fc84 <blkid_probe_get_size@plt+0x4876c>
   4fb98:	ldr	r3, [pc, #232]	; 4fc88 <blkid_probe_get_size@plt+0x48770>
   4fb9c:	add	r2, pc, r2
   4fba0:	str	r2, [sp, #4]
   4fba4:	add	r3, pc, r3
   4fba8:	ldr	r2, [pc, #220]	; 4fc8c <blkid_probe_get_size@plt+0x48774>
   4fbac:	add	r3, r3, #152	; 0x98
   4fbb0:	str	r3, [sp]
   4fbb4:	add	r2, pc, r2
   4fbb8:	mov	r3, #223	; 0xdf
   4fbbc:	ldr	r0, [pc, #204]	; 4fc90 <blkid_probe_get_size@plt+0x48778>
   4fbc0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   4fbc4:	mov	fp, r0
   4fbc8:	b	4fa30 <blkid_probe_get_size@plt+0x48518>
   4fbcc:	ldr	r3, [pc, #192]	; 4fc94 <blkid_probe_get_size@plt+0x4877c>
   4fbd0:	ldr	r1, [pc, #192]	; 4fc98 <blkid_probe_get_size@plt+0x48780>
   4fbd4:	add	r3, pc, r3
   4fbd8:	mov	r2, #151	; 0x97
   4fbdc:	add	r3, r3, #184	; 0xb8
   4fbe0:	add	r1, pc, r1
   4fbe4:	mov	r0, #1
   4fbe8:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   4fbec:	mov	fp, r0
   4fbf0:	mov	r0, r8
   4fbf4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   4fbf8:	b	4f9e8 <blkid_probe_get_size@plt+0x484d0>
   4fbfc:	mvn	fp, #11
   4fc00:	b	4f738 <blkid_probe_get_size@plt+0x48220>
   4fc04:	bl	6fb4 <__stack_chk_fail@plt>
   4fc08:	andeq	r8, r4, ip, asr r4
   4fc0c:	andeq	r0, r0, ip, lsr r4
   4fc10:	andeq	r9, r4, ip, ror #14
   4fc14:	andeq	r3, r2, r4, lsl sl
   4fc18:	andeq	r8, r4, r0, ror #18
   4fc1c:			; <UNDEFINED> instruction: 0x000239bc
   4fc20:	andeq	r3, r2, r8, asr #2
   4fc24:	andeq	sl, r1, r4, asr #25
   4fc28:	andeq	r0, r0, r6, lsl #8
   4fc2c:	strdeq	fp, [r3], -ip
   4fc30:			; <UNDEFINED> instruction: 0x000239b0
   4fc34:	andeq	r3, r2, r0, lsr #1
   4fc38:	muleq	r2, ip, r0
   4fc3c:	ldrdeq	lr, [r1], -ip
   4fc40:	andeq	r8, r4, r0, lsl #17
   4fc44:	andeq	r8, r4, r0, asr #16
   4fc48:	strdeq	r2, [r2], -ip
   4fc4c:	andeq	sl, r1, r8, asr #20
   4fc50:	andeq	sl, r1, ip, ror fp
   4fc54:			; <UNDEFINED> instruction: 0x000487b8
   4fc58:	andeq	r3, r2, ip, lsr #17
   4fc5c:	andeq	r2, r2, r0, lsr #31
   4fc60:	andeq	r3, r2, ip, ror #14
   4fc64:	andeq	r0, r0, r7, lsl #8
   4fc68:	andeq	r8, r4, r8, lsr #14
   4fc6c:	andeq	r3, r2, ip, ror #14
   4fc70:	andeq	sl, r1, r8, lsl #20
   4fc74:			; <UNDEFINED> instruction: 0x0001a9b4
   4fc78:	andeq	r7, r1, r4, lsr r1
   4fc7c:	andeq	r2, r2, r4, ror #27
   4fc80:	andeq	sl, r1, r0, ror #18
   4fc84:	andeq	r3, r2, r8, ror #12
   4fc88:	andeq	r2, r2, r0, lsr #27
   4fc8c:	andeq	sl, r1, r4, lsr #18
   4fc90:	andeq	r0, r0, r3, lsl #8
   4fc94:	andeq	r2, r2, r0, ror sp
   4fc98:	strdeq	sl, [r1], -r8
   4fc9c:	ldr	r3, [pc, #492]	; 4fe90 <blkid_probe_get_size@plt+0x48978>
   4fca0:	ldr	r2, [pc, #492]	; 4fe94 <blkid_probe_get_size@plt+0x4897c>
   4fca4:	add	r3, pc, r3
   4fca8:	push	{r4, r5, r6, r7, r8, r9, lr}
   4fcac:	mov	r4, r1
   4fcb0:	ldr	r5, [r3, r2]
   4fcb4:	sub	sp, sp, #28
   4fcb8:	add	r6, sp, #12
   4fcbc:	ldr	r1, [r5]
   4fcc0:	mov	r7, r0
   4fcc4:	str	r1, [sp, #20]
   4fcc8:	ldr	r1, [pc, #456]	; 4fe98 <blkid_probe_get_size@plt+0x48980>
   4fccc:	mov	r2, r6
   4fcd0:	ldr	r0, [r4, #12]
   4fcd4:	add	r1, pc, r1
   4fcd8:	mov	r3, #0
   4fcdc:	str	r3, [sp, #8]
   4fce0:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fce4:	cmp	r0, #0
   4fce8:	blt	4fe44 <blkid_probe_get_size@plt+0x4892c>
   4fcec:	add	r2, sp, #16
   4fcf0:	mov	r1, #0
   4fcf4:	ldr	r0, [sp, #12]
   4fcf8:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   4fcfc:	cmp	r0, #0
   4fd00:	blt	4fdb4 <blkid_probe_get_size@plt+0x4889c>
   4fd04:	ldr	r3, [sp, #16]
   4fd08:	cmp	r3, #0
   4fd0c:	beq	4fe64 <blkid_probe_get_size@plt+0x4894c>
   4fd10:	cmp	r3, #16384	; 0x4000
   4fd14:	bcs	4fe7c <blkid_probe_get_size@plt+0x48964>
   4fd18:	ldr	r1, [pc, #380]	; 4fe9c <blkid_probe_get_size@plt+0x48984>
   4fd1c:	mov	r2, r6
   4fd20:	add	r1, pc, r1
   4fd24:	mov	r0, r7
   4fd28:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fd2c:	add	r8, r4, #48	; 0x30
   4fd30:	cmp	r0, #0
   4fd34:	bge	4fdcc <blkid_probe_get_size@plt+0x488b4>
   4fd38:	ldr	r1, [pc, #352]	; 4fea0 <blkid_probe_get_size@plt+0x48988>
   4fd3c:	add	r2, sp, #8
   4fd40:	add	r1, pc, r1
   4fd44:	mov	r0, r7
   4fd48:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fd4c:	ldr	r2, [pc, #336]	; 4fea4 <blkid_probe_get_size@plt+0x4898c>
   4fd50:	add	r6, sp, #4
   4fd54:	ldr	r3, [sp, #16]
   4fd58:	mov	r0, r6
   4fd5c:	add	r2, pc, r2
   4fd60:	mov	r1, #16
   4fd64:	str	r8, [sp, #4]
   4fd68:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   4fd6c:	ldr	r3, [sp, #8]
   4fd70:	cmp	r3, #0
   4fd74:	beq	4fd8c <blkid_probe_get_size@plt+0x48874>
   4fd78:	ldr	r2, [pc, #296]	; 4fea8 <blkid_probe_get_size@plt+0x48990>
   4fd7c:	mov	r1, r0
   4fd80:	add	r2, pc, r2
   4fd84:	mov	r0, r6
   4fd88:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   4fd8c:	ldr	r1, [pc, #280]	; 4feac <blkid_probe_get_size@plt+0x48994>
   4fd90:	cmp	r0, #0
   4fd94:	strbeq	r0, [r4, #48]	; 0x30
   4fd98:	add	r2, r4, #64	; 0x40
   4fd9c:	add	r1, pc, r1
   4fda0:	ldr	r0, [r4, #12]
   4fda4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fda8:	cmp	r0, #0
   4fdac:	mov	r0, #0
   4fdb0:	strlt	r0, [r4, #64]	; 0x40
   4fdb4:	ldr	r2, [sp, #20]
   4fdb8:	ldr	r3, [r5]
   4fdbc:	cmp	r2, r3
   4fdc0:	bne	4fe8c <blkid_probe_get_size@plt+0x48974>
   4fdc4:	add	sp, sp, #28
   4fdc8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4fdcc:	mov	r2, #10
   4fdd0:	mov	r1, #0
   4fdd4:	ldr	r0, [sp, #12]
   4fdd8:	bl	6c54 <strtoul@plt>
   4fddc:	ldr	r1, [pc, #204]	; 4feb0 <blkid_probe_get_size@plt+0x48998>
   4fde0:	add	r2, sp, #8
   4fde4:	add	r1, pc, r1
   4fde8:	add	r6, sp, #4
   4fdec:	mov	r9, r0
   4fdf0:	mov	r0, r7
   4fdf4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fdf8:	ldr	r2, [pc, #180]	; 4feb4 <blkid_probe_get_size@plt+0x4899c>
   4fdfc:	ldr	r3, [sp, #16]
   4fe00:	mov	r0, r6
   4fe04:	add	r2, pc, r2
   4fe08:	mov	r1, #16
   4fe0c:	str	r8, [sp, #4]
   4fe10:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   4fe14:	ldr	r3, [sp, #8]
   4fe18:	cmp	r3, #0
   4fe1c:	bne	4fd78 <blkid_probe_get_size@plt+0x48860>
   4fe20:	cmp	r9, #0
   4fe24:	beq	4fd8c <blkid_probe_get_size@plt+0x48874>
   4fe28:	ldr	r2, [pc, #136]	; 4feb8 <blkid_probe_get_size@plt+0x489a0>
   4fe2c:	mov	r1, r0
   4fe30:	mov	r3, r9
   4fe34:	mov	r0, r6
   4fe38:	add	r2, pc, r2
   4fe3c:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   4fe40:	b	4fd8c <blkid_probe_get_size@plt+0x48874>
   4fe44:	ldr	r1, [pc, #112]	; 4febc <blkid_probe_get_size@plt+0x489a4>
   4fe48:	mov	r2, r6
   4fe4c:	add	r1, pc, r1
   4fe50:	ldr	r0, [r4, #12]
   4fe54:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   4fe58:	cmp	r0, #0
   4fe5c:	bge	4fcec <blkid_probe_get_size@plt+0x487d4>
   4fe60:	b	4fdb4 <blkid_probe_get_size@plt+0x4889c>
   4fe64:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   4fe68:	ldr	r3, [r0, #4]
   4fe6c:	tst	r3, #8
   4fe70:	beq	4fe84 <blkid_probe_get_size@plt+0x4896c>
   4fe74:	ldr	r3, [sp, #16]
   4fe78:	b	4fd10 <blkid_probe_get_size@plt+0x487f8>
   4fe7c:	mvn	r0, #1
   4fe80:	b	4fdb4 <blkid_probe_get_size@plt+0x4889c>
   4fe84:	mvn	r0, #21
   4fe88:	b	4fdb4 <blkid_probe_get_size@plt+0x4889c>
   4fe8c:	bl	6fb4 <__stack_chk_fail@plt>
   4fe90:	andeq	r7, r4, r4, asr #29
   4fe94:	andeq	r0, r0, ip, lsr r4
   4fe98:	muleq	r2, r8, r5
   4fe9c:	andeq	r3, r2, r8, asr r5
   4fea0:	andeq	r3, r2, r4, asr #10
   4fea4:	andeq	r3, r2, r8, lsr r5
   4fea8:	andeq	r3, r2, ip, lsl r5
   4feac:			; <UNDEFINED> instruction: 0x00017fbc
   4feb0:	andeq	r3, r2, r0, lsr #9
   4feb4:	muleq	r2, r0, r4
   4feb8:	andeq	r3, r2, r8, ror #8
   4febc:	andeq	sp, r1, r4, lsl #14
   4fec0:	ldr	r3, [pc, #304]	; 4fff8 <blkid_probe_get_size@plt+0x48ae0>
   4fec4:	ldr	r2, [pc, #304]	; 4fffc <blkid_probe_get_size@plt+0x48ae4>
   4fec8:	add	r3, pc, r3
   4fecc:	push	{r4, r5, r6, fp, lr}
   4fed0:	add	fp, sp, #16
   4fed4:	sub	sp, sp, #84	; 0x54
   4fed8:	ldr	r5, [r3, r2]
   4fedc:	sub	r1, fp, #92	; 0x5c
   4fee0:	ldr	r3, [r5]
   4fee4:	str	r3, [fp, #-24]	; 0xffffffe8
   4fee8:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   4feec:	cmp	r0, #0
   4fef0:	blt	4ffac <blkid_probe_get_size@plt+0x48a94>
   4fef4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   4fef8:	cmp	r4, #0
   4fefc:	beq	4ffe4 <blkid_probe_get_size@plt+0x48acc>
   4ff00:	mov	r0, r4
   4ff04:	bl	723c <strlen@plt>
   4ff08:	add	r3, r0, #8
   4ff0c:	cmp	r3, #4194304	; 0x400000
   4ff10:	bhi	4ffb8 <blkid_probe_get_size@plt+0x48aa0>
   4ff14:	add	r0, r0, #22
   4ff18:	bic	r0, r0, #7
   4ff1c:	sub	sp, sp, r0
   4ff20:	add	r6, sp, #8
   4ff24:	mov	r1, r4
   4ff28:	mov	r0, r6
   4ff2c:	bl	6ae0 <stpcpy@plt>
   4ff30:	ldr	r3, [pc, #200]	; 50000 <blkid_probe_get_size@plt+0x48ae8>
   4ff34:	add	r3, pc, r3
   4ff38:	mov	r2, r0
   4ff3c:	add	ip, r0, #7
   4ff40:	ldm	r3!, {r0, r1}
   4ff44:	str	r0, [r2]
   4ff48:	str	r1, [r2, #4]
   4ff4c:	mov	r4, #0
   4ff50:	mov	r0, r6
   4ff54:	strb	r4, [ip]
   4ff58:	mov	r1, #524288	; 0x80000
   4ff5c:	bl	6ec4 <open64@plt>
   4ff60:	subs	r6, r0, #0
   4ff64:	blt	4ff7c <blkid_probe_get_size@plt+0x48a64>
   4ff68:	mov	r2, #64	; 0x40
   4ff6c:	sub	r1, fp, #88	; 0x58
   4ff70:	bl	6d74 <read@plt>
   4ff74:	cmp	r0, #64	; 0x40
   4ff78:	beq	4ffa0 <blkid_probe_get_size@plt+0x48a88>
   4ff7c:	mov	r0, r6
   4ff80:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   4ff84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ff88:	ldr	r3, [r5]
   4ff8c:	mov	r0, r4
   4ff90:	cmp	r2, r3
   4ff94:	bne	4fff4 <blkid_probe_get_size@plt+0x48adc>
   4ff98:	sub	sp, fp, #16
   4ff9c:	pop	{r4, r5, r6, fp, pc}
   4ffa0:	ldrb	r4, [fp, #-74]	; 0xffffffb6
   4ffa4:	lsr	r4, r4, #7
   4ffa8:	b	4ff7c <blkid_probe_get_size@plt+0x48a64>
   4ffac:	mvn	r6, #0
   4ffb0:	mov	r4, #0
   4ffb4:	b	4ff7c <blkid_probe_get_size@plt+0x48a64>
   4ffb8:	ldr	r2, [pc, #68]	; 50004 <blkid_probe_get_size@plt+0x48aec>
   4ffbc:	ldr	r1, [pc, #68]	; 50008 <blkid_probe_get_size@plt+0x48af0>
   4ffc0:	add	r2, pc, r2
   4ffc4:	add	r2, r2, #224	; 0xe0
   4ffc8:	str	r2, [sp]
   4ffcc:	ldr	r2, [pc, #56]	; 5000c <blkid_probe_get_size@plt+0x48af4>
   4ffd0:	ldr	r3, [pc, #56]	; 50010 <blkid_probe_get_size@plt+0x48af8>
   4ffd4:	add	r2, pc, r2
   4ffd8:	add	r1, pc, r1
   4ffdc:	mov	r0, #1
   4ffe0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   4ffe4:	sub	sp, sp, #8
   4ffe8:	add	ip, sp, #8
   4ffec:	mov	r6, ip
   4fff0:	b	4ff4c <blkid_probe_get_size@plt+0x48a34>
   4fff4:	bl	6fb4 <__stack_chk_fail@plt>
   4fff8:	andeq	r7, r4, r0, lsr #25
   4fffc:	andeq	r0, r0, ip, lsr r4
   50000:	muleq	r2, r8, r3
   50004:	andeq	r2, r2, r4, lsl #19
   50008:	andeq	r5, r1, r0, asr #1
   5000c:	ldrdeq	r3, [r2], -r4
   50010:	andeq	r0, r0, lr, lsr #2
   50014:	ldr	r3, [pc, #1528]	; 50614 <blkid_probe_get_size@plt+0x490fc>
   50018:	ldr	r2, [pc, #1528]	; 50618 <blkid_probe_get_size@plt+0x49100>
   5001c:	add	r3, pc, r3
   50020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50024:	sub	sp, sp, #8256	; 0x2040
   50028:	ldr	r2, [r3, r2]
   5002c:	sub	sp, sp, #44	; 0x2c
   50030:	add	r4, sp, #104	; 0x68
   50034:	mov	r7, r1
   50038:	add	ip, sp, #8256	; 0x2040
   5003c:	str	r2, [sp, #20]
   50040:	add	ip, ip, #36	; 0x24
   50044:	ldr	r2, [r2]
   50048:	sub	r8, r4, #36	; 0x24
   5004c:	mov	r5, r0
   50050:	mov	r1, r8
   50054:	ldr	r0, [r7, #12]
   50058:	mov	r3, #0
   5005c:	str	r2, [ip]
   50060:	str	r3, [r4, #-44]	; 0xffffffd4
   50064:	str	r3, [r4, #-52]	; 0xffffffcc
   50068:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5006c:	subs	r6, r0, #0
   50070:	bge	500b0 <blkid_probe_get_size@plt+0x48b98>
   50074:	ldr	r0, [r4, #-52]	; 0xffffffcc
   50078:	cmp	r0, #0
   5007c:	beq	50084 <blkid_probe_get_size@plt+0x48b6c>
   50080:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   50084:	add	r3, sp, #8256	; 0x2040
   50088:	add	r3, r3, #36	; 0x24
   5008c:	ldr	r2, [r3]
   50090:	ldr	r3, [sp, #20]
   50094:	mov	r0, r6
   50098:	ldr	r3, [r3]
   5009c:	cmp	r2, r3
   500a0:	bne	50610 <blkid_probe_get_size@plt+0x490f8>
   500a4:	add	sp, sp, #8256	; 0x2040
   500a8:	add	sp, sp, #44	; 0x2c
   500ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   500b0:	ldr	r1, [pc, #1380]	; 5061c <blkid_probe_get_size@plt+0x49104>
   500b4:	sub	r2, r4, #28
   500b8:	sub	r3, r4, #24
   500bc:	ldr	r0, [r4, #-36]	; 0xffffffdc
   500c0:	add	r1, pc, r1
   500c4:	str	r2, [sp, #4]
   500c8:	str	r3, [sp]
   500cc:	sub	r2, r4, #16
   500d0:	sub	r3, r4, #20
   500d4:	bl	735c <sscanf@plt>
   500d8:	cmp	r0, #4
   500dc:	bne	505c8 <blkid_probe_get_size@plt+0x490b0>
   500e0:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   500e4:	ldr	r3, [r0, #4]
   500e8:	tst	r3, #2
   500ec:	bne	504ac <blkid_probe_get_size@plt+0x48f94>
   500f0:	ldr	r1, [pc, #1320]	; 50620 <blkid_probe_get_size@plt+0x49108>
   500f4:	sub	r6, r4, #40	; 0x28
   500f8:	mov	r2, r6
   500fc:	add	r1, pc, r1
   50100:	mov	r0, r5
   50104:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   50108:	cmp	r0, #0
   5010c:	bge	503c0 <blkid_probe_get_size@plt+0x48ea8>
   50110:	mov	r3, #0
   50114:	str	r3, [sp, #36]	; 0x24
   50118:	ldr	r1, [pc, #1284]	; 50624 <blkid_probe_get_size@plt+0x4910c>
   5011c:	sub	r2, r4, #44	; 0x2c
   50120:	add	r1, pc, r1
   50124:	mov	r0, r5
   50128:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   5012c:	ldr	r3, [r4, #-16]
   50130:	add	r2, r7, #32
   50134:	cmp	r3, #0
   50138:	str	r2, [r4, #-32]	; 0xffffffe0
   5013c:	moveq	r1, #16
   50140:	addeq	sl, sp, #72	; 0x48
   50144:	bne	5048c <blkid_probe_get_size@plt+0x48f74>
   50148:	ldrd	r2, [r4, #-24]	; 0xffffffe8
   5014c:	mov	r0, sl
   50150:	str	r2, [sp]
   50154:	ldr	r2, [pc, #1228]	; 50628 <blkid_probe_get_size@plt+0x49110>
   50158:	add	r2, pc, r2
   5015c:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50160:	ldr	r3, [r4, #-28]	; 0xffffffe4
   50164:	cmp	r3, #0
   50168:	mov	r5, r0
   5016c:	bne	50374 <blkid_probe_get_size@plt+0x48e5c>
   50170:	ldr	r0, [r7, #12]
   50174:	bl	4fec0 <blkid_probe_get_size@plt+0x489a8>
   50178:	cmp	r0, #0
   5017c:	bne	50370 <blkid_probe_get_size@plt+0x48e58>
   50180:	ldr	r3, [r4, #-44]	; 0xffffffd4
   50184:	cmp	r3, #0
   50188:	beq	50398 <blkid_probe_get_size@plt+0x48e80>
   5018c:	ldr	r2, [pc, #1176]	; 5062c <blkid_probe_get_size@plt+0x49114>
   50190:	mov	r1, r5
   50194:	add	r2, pc, r2
   50198:	mov	r0, sl
   5019c:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   501a0:	mov	r5, r0
   501a4:	ldr	r2, [pc, #1156]	; 50630 <blkid_probe_get_size@plt+0x49118>
   501a8:	ldr	r1, [pc, #1156]	; 50634 <blkid_probe_get_size@plt+0x4911c>
   501ac:	cmp	r5, #0
   501b0:	strbeq	r5, [r7, #32]
   501b4:	add	r2, pc, r2
   501b8:	add	r1, pc, r1
   501bc:	sub	r0, r4, #52	; 0x34
   501c0:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   501c4:	subs	r6, r0, #0
   501c8:	blt	50074 <blkid_probe_get_size@plt+0x48b5c>
   501cc:	sub	r1, r4, #48	; 0x30
   501d0:	ldr	r0, [r4, #-52]	; 0xffffffcc
   501d4:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   501d8:	subs	r6, r0, #0
   501dc:	blt	50074 <blkid_probe_get_size@plt+0x48b5c>
   501e0:	ldr	r2, [pc, #1104]	; 50638 <blkid_probe_get_size@plt+0x49120>
   501e4:	ldr	r1, [r4, #-48]	; 0xffffffd0
   501e8:	add	r2, pc, r2
   501ec:	mov	r3, #4096	; 0x1000
   501f0:	sub	r0, r4, #4
   501f4:	str	r1, [sp, #4]
   501f8:	str	r2, [sp]
   501fc:	mov	r1, r3
   50200:	mov	r2, #1
   50204:	mov	r5, r0
   50208:	str	r0, [sp, #24]
   5020c:	bl	7260 <__snprintf_chk@plt>
   50210:	ldr	r6, [pc, #1060]	; 5063c <blkid_probe_get_size@plt+0x49124>
   50214:	cmp	r0, r6
   50218:	bhi	50608 <blkid_probe_get_size@plt+0x490f0>
   5021c:	mov	r0, r5
   50220:	bl	6ca8 <opendir@plt>
   50224:	subs	r5, r0, #0
   50228:	beq	505d0 <blkid_probe_get_size@plt+0x490b8>
   5022c:	add	fp, sp, #4160	; 0x1040
   50230:	ldr	r3, [pc, #1032]	; 50640 <blkid_probe_get_size@plt+0x49128>
   50234:	ldr	r0, [r7, #12]
   50238:	add	fp, fp, #36	; 0x24
   5023c:	add	r3, pc, r3
   50240:	str	r6, [sp, #32]
   50244:	str	r0, [r4, #-56]	; 0xffffffc8
   50248:	str	r3, [sp, #28]
   5024c:	str	r7, [sp, #44]	; 0x2c
   50250:	cmp	r0, #0
   50254:	beq	505b8 <blkid_probe_get_size@plt+0x490a0>
   50258:	mov	r1, r8
   5025c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   50260:	cmp	r0, #0
   50264:	blt	5047c <blkid_probe_get_size@plt+0x48f64>
   50268:	bl	732c <__errno_location@plt>
   5026c:	mov	r3, #0
   50270:	str	r3, [r0]
   50274:	mov	r6, r0
   50278:	mov	r0, r5
   5027c:	bl	6bb8 <readdir64@plt>
   50280:	subs	r7, r0, #0
   50284:	beq	50454 <blkid_probe_get_size@plt+0x48f3c>
   50288:	str	r8, [sp, #40]	; 0x28
   5028c:	b	50354 <blkid_probe_get_size@plt+0x48e3c>
   50290:	add	r7, r7, #19
   50294:	mov	r0, r7
   50298:	sub	r2, r4, #8
   5029c:	mov	r1, #10
   502a0:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   502a4:	cmp	r0, #0
   502a8:	blt	50444 <blkid_probe_get_size@plt+0x48f2c>
   502ac:	ldr	r3, [r4, #-8]
   502b0:	cmp	r3, #0
   502b4:	beq	50444 <blkid_probe_get_size@plt+0x48f2c>
   502b8:	ldr	r2, [sp, #24]
   502bc:	mov	r3, #4096	; 0x1000
   502c0:	str	r2, [sp, #4]
   502c4:	ldr	r2, [sp, #28]
   502c8:	mov	r1, r3
   502cc:	str	r2, [sp]
   502d0:	str	r7, [sp, #8]
   502d4:	mov	r2, #1
   502d8:	mov	r0, fp
   502dc:	bl	7260 <__snprintf_chk@plt>
   502e0:	ldr	r3, [sp, #32]
   502e4:	cmp	r0, r3
   502e8:	bhi	50484 <blkid_probe_get_size@plt+0x48f6c>
   502ec:	sub	r1, r4, #12
   502f0:	mov	r0, fp
   502f4:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   502f8:	ldr	r7, [r4, #-12]
   502fc:	cmp	r0, #0
   50300:	blt	50334 <blkid_probe_get_size@plt+0x48e1c>
   50304:	mov	r0, r7
   50308:	bl	723c <strlen@plt>
   5030c:	ldr	r9, [r4, #-36]	; 0xffffffdc
   50310:	mov	r1, r7
   50314:	mov	r2, r0
   50318:	mov	r8, r0
   5031c:	mov	r0, r9
   50320:	bl	6a5c <strncmp@plt>
   50324:	cmp	r0, #0
   50328:	bne	50334 <blkid_probe_get_size@plt+0x48e1c>
   5032c:	cmn	r9, r8
   50330:	bne	504f0 <blkid_probe_get_size@plt+0x48fd8>
   50334:	mov	r0, r7
   50338:	bl	69f0 <free@plt>
   5033c:	mov	r3, #0
   50340:	str	r3, [r6]
   50344:	mov	r0, r5
   50348:	bl	6bb8 <readdir64@plt>
   5034c:	subs	r7, r0, #0
   50350:	beq	50450 <blkid_probe_get_size@plt+0x48f38>
   50354:	ldrb	r3, [r7, #19]
   50358:	mov	r0, #0
   5035c:	str	r0, [r4, #-12]
   50360:	cmp	r3, #46	; 0x2e
   50364:	bne	50290 <blkid_probe_get_size@plt+0x48d78>
   50368:	bl	69f0 <free@plt>
   5036c:	b	5033c <blkid_probe_get_size@plt+0x48e24>
   50370:	ldr	r3, [r4, #-28]	; 0xffffffe4
   50374:	ldr	r2, [pc, #712]	; 50644 <blkid_probe_get_size@plt+0x4912c>
   50378:	mov	r1, r5
   5037c:	add	r2, pc, r2
   50380:	mov	r0, sl
   50384:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50388:	ldr	r3, [r4, #-44]	; 0xffffffd4
   5038c:	cmp	r3, #0
   50390:	mov	r5, r0
   50394:	bne	5018c <blkid_probe_get_size@plt+0x48c74>
   50398:	ldr	r3, [sp, #36]	; 0x24
   5039c:	cmp	r3, #0
   503a0:	beq	501a4 <blkid_probe_get_size@plt+0x48c8c>
   503a4:	ldr	r2, [pc, #668]	; 50648 <blkid_probe_get_size@plt+0x49130>
   503a8:	mov	r1, r5
   503ac:	add	r2, pc, r2
   503b0:	mov	r0, sl
   503b4:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   503b8:	mov	r5, r0
   503bc:	b	501a4 <blkid_probe_get_size@plt+0x48c8c>
   503c0:	mov	r2, #10
   503c4:	mov	r1, #0
   503c8:	ldr	r0, [r4, #-40]	; 0xffffffd8
   503cc:	bl	6c54 <strtoul@plt>
   503d0:	subs	r3, r0, #0
   503d4:	str	r3, [sp, #36]	; 0x24
   503d8:	bne	50118 <blkid_probe_get_size@plt+0x48c00>
   503dc:	ldr	r1, [pc, #616]	; 5064c <blkid_probe_get_size@plt+0x49134>
   503e0:	mov	r2, r6
   503e4:	add	r1, pc, r1
   503e8:	mov	r0, r5
   503ec:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   503f0:	cmp	r0, #0
   503f4:	blt	50110 <blkid_probe_get_size@plt+0x48bf8>
   503f8:	mov	r2, #10
   503fc:	ldr	r1, [sp, #36]	; 0x24
   50400:	ldr	r0, [r4, #-40]	; 0xffffffd8
   50404:	bl	6c54 <strtoul@plt>
   50408:	cmp	r0, #32
   5040c:	bne	50110 <blkid_probe_get_size@plt+0x48bf8>
   50410:	ldr	r1, [pc, #568]	; 50650 <blkid_probe_get_size@plt+0x49138>
   50414:	mov	r2, r6
   50418:	add	r1, pc, r1
   5041c:	mov	r0, r5
   50420:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   50424:	cmp	r0, #0
   50428:	blt	50110 <blkid_probe_get_size@plt+0x48bf8>
   5042c:	ldr	r1, [sp, #36]	; 0x24
   50430:	mov	r2, #16
   50434:	ldr	r0, [r4, #-40]	; 0xffffffd8
   50438:	bl	6c54 <strtoul@plt>
   5043c:	str	r0, [sp, #36]	; 0x24
   50440:	b	50118 <blkid_probe_get_size@plt+0x48c00>
   50444:	ldr	r0, [r4, #-12]
   50448:	bl	69f0 <free@plt>
   5044c:	b	5033c <blkid_probe_get_size@plt+0x48e24>
   50450:	ldr	r8, [sp, #40]	; 0x28
   50454:	ldr	r1, [pc, #504]	; 50654 <blkid_probe_get_size@plt+0x4913c>
   50458:	sub	r3, r4, #56	; 0x38
   5045c:	mov	r2, #0
   50460:	add	r1, pc, r1
   50464:	ldr	r0, [r4, #-56]	; 0xffffffc8
   50468:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   5046c:	cmp	r0, #0
   50470:	blt	505b8 <blkid_probe_get_size@plt+0x490a0>
   50474:	mov	r0, r5
   50478:	bl	714c <rewinddir@plt>
   5047c:	ldr	r0, [r4, #-56]	; 0xffffffc8
   50480:	b	50250 <blkid_probe_get_size@plt+0x48d38>
   50484:	ldr	r7, [r4, #-12]
   50488:	b	50334 <blkid_probe_get_size@plt+0x48e1c>
   5048c:	ldr	r2, [pc, #452]	; 50658 <blkid_probe_get_size@plt+0x49140>
   50490:	sub	sl, r4, #32
   50494:	mov	r1, #16
   50498:	mov	r0, sl
   5049c:	add	r2, pc, r2
   504a0:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   504a4:	mov	r1, r0
   504a8:	b	50148 <blkid_probe_get_size@plt+0x48c30>
   504ac:	ldr	r1, [pc, #424]	; 5065c <blkid_probe_get_size@plt+0x49144>
   504b0:	sub	r2, r4, #8
   504b4:	add	r1, pc, r1
   504b8:	ldr	r0, [r7, #12]
   504bc:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   504c0:	cmp	r0, #0
   504c4:	blt	500f0 <blkid_probe_get_size@plt+0x48bd8>
   504c8:	ldr	r1, [pc, #400]	; 50660 <blkid_probe_get_size@plt+0x49148>
   504cc:	ldr	r0, [r4, #-8]
   504d0:	add	r1, pc, r1
   504d4:	bl	7314 <strcmp@plt>
   504d8:	cmp	r0, #0
   504dc:	ldreq	r2, [r4, #-24]	; 0xffffffe8
   504e0:	ldreq	r3, [r4, #-28]	; 0xffffffe4
   504e4:	addeq	r3, r3, r2, lsl #3
   504e8:	streq	r3, [r4, #-28]	; 0xffffffe4
   504ec:	b	500f0 <blkid_probe_get_size@plt+0x48bd8>
   504f0:	ldr	r6, [r4, #-8]
   504f4:	mov	r0, r7
   504f8:	ldr	r8, [sp, #40]	; 0x28
   504fc:	bl	69f0 <free@plt>
   50500:	cmp	r6, #0
   50504:	beq	50454 <blkid_probe_get_size@plt+0x48f3c>
   50508:	ldr	r7, [sp, #44]	; 0x2c
   5050c:	ldr	r3, [r4, #-16]
   50510:	add	r2, r7, #16
   50514:	cmp	r3, #0
   50518:	str	r2, [r4, #-32]	; 0xffffffe0
   5051c:	moveq	r1, #16
   50520:	beq	5053c <blkid_probe_get_size@plt+0x49024>
   50524:	ldr	r2, [pc, #312]	; 50664 <blkid_probe_get_size@plt+0x4914c>
   50528:	mov	r1, #16
   5052c:	add	r2, pc, r2
   50530:	mov	r0, sl
   50534:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50538:	mov	r1, r0
   5053c:	ldr	r2, [pc, #292]	; 50668 <blkid_probe_get_size@plt+0x49150>
   50540:	mov	r3, r6
   50544:	add	r2, pc, r2
   50548:	mov	r0, sl
   5054c:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50550:	ldr	r3, [r4, #-28]	; 0xffffffe4
   50554:	cmp	r3, #0
   50558:	mov	r6, r0
   5055c:	bne	50574 <blkid_probe_get_size@plt+0x4905c>
   50560:	ldr	r0, [r7, #12]
   50564:	bl	4fec0 <blkid_probe_get_size@plt+0x489a8>
   50568:	cmp	r0, #0
   5056c:	beq	5058c <blkid_probe_get_size@plt+0x49074>
   50570:	ldr	r3, [r4, #-28]	; 0xffffffe4
   50574:	ldr	r2, [pc, #240]	; 5066c <blkid_probe_get_size@plt+0x49154>
   50578:	mov	r1, r6
   5057c:	add	r2, pc, r2
   50580:	mov	r0, sl
   50584:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50588:	mov	r6, r0
   5058c:	ldr	r3, [r4, #-44]	; 0xffffffd4
   50590:	cmp	r3, #0
   50594:	beq	505e0 <blkid_probe_get_size@plt+0x490c8>
   50598:	ldr	r2, [pc, #208]	; 50670 <blkid_probe_get_size@plt+0x49158>
   5059c:	mov	r1, r6
   505a0:	mov	r0, sl
   505a4:	add	r2, pc, r2
   505a8:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   505ac:	mov	r6, r0
   505b0:	cmp	r6, #0
   505b4:	strbeq	r6, [r7, #16]
   505b8:	mov	r0, r5
   505bc:	bl	6aa4 <closedir@plt>
   505c0:	mov	r6, #0
   505c4:	b	50074 <blkid_probe_get_size@plt+0x48b5c>
   505c8:	mvn	r6, #1
   505cc:	b	50074 <blkid_probe_get_size@plt+0x48b5c>
   505d0:	bl	732c <__errno_location@plt>
   505d4:	ldr	r6, [r0]
   505d8:	rsb	r6, r6, #0
   505dc:	b	50074 <blkid_probe_get_size@plt+0x48b5c>
   505e0:	ldr	r3, [sp, #36]	; 0x24
   505e4:	cmp	r3, #0
   505e8:	beq	505b0 <blkid_probe_get_size@plt+0x49098>
   505ec:	ldr	r2, [pc, #128]	; 50674 <blkid_probe_get_size@plt+0x4915c>
   505f0:	mov	r1, r6
   505f4:	mov	r0, sl
   505f8:	add	r2, pc, r2
   505fc:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   50600:	mov	r6, r0
   50604:	b	505b0 <blkid_probe_get_size@plt+0x49098>
   50608:	mvn	r6, #35	; 0x23
   5060c:	b	50074 <blkid_probe_get_size@plt+0x48b5c>
   50610:	bl	6fb4 <__stack_chk_fail@plt>
   50614:	andeq	r7, r4, ip, asr #22
   50618:	andeq	r0, r0, ip, lsr r4
   5061c:	andeq	r3, r2, r4, lsl r2
   50620:	andeq	r3, r2, ip, ror r1
   50624:	andeq	r3, r2, r4, ror #2
   50628:	andeq	r3, r2, r0, lsr #3
   5062c:	andeq	r3, r2, r8, lsl #2
   50630:	andeq	r3, r2, r0, asr r1
   50634:	andeq	r5, r1, r8, lsr #12
   50638:	andeq	r3, r2, r0, lsr #2
   5063c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   50640:	ldrdeq	r3, [r2], -r8
   50644:	andeq	r2, r2, r4, lsl #31
   50648:	strdeq	r2, [r2], -r4
   5064c:	andeq	r6, r1, ip, lsl #31
   50650:	ldrdeq	r2, [r2], -r4
   50654:	andeq	r2, r2, r4, lsr #29
   50658:	andeq	r2, r2, r8, asr lr
   5065c:	andeq	r2, r2, ip, lsr #28
   50660:	andeq	r5, r2, r4, lsl #29
   50664:	strdeq	r2, [r2], -r8
   50668:	andeq	r2, r2, r4, ror #27
   5066c:			; <UNDEFINED> instruction: 0x00022db0
   50670:	strdeq	r2, [r2], -r8
   50674:	andeq	r2, r2, r8, lsr #25
   50678:	ldr	r3, [pc, #752]	; 50970 <blkid_probe_get_size@plt+0x49458>
   5067c:	ldr	ip, [pc, #752]	; 50974 <blkid_probe_get_size@plt+0x4945c>
   50680:	add	r3, pc, r3
   50684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50688:	add	fp, sp, #32
   5068c:	sub	sp, sp, #60	; 0x3c
   50690:	ldr	r4, [r3, ip]
   50694:	mov	r7, r2
   50698:	cmp	r0, #0
   5069c:	ldr	r2, [r4]
   506a0:	mov	r0, #0
   506a4:	str	r0, [fp, #-60]	; 0xffffffc4
   506a8:	str	r2, [fp, #-40]	; 0xffffffd8
   506ac:	str	r0, [fp, #-68]	; 0xffffffbc
   506b0:	str	r0, [fp, #-72]	; 0xffffffb8
   506b4:	beq	5089c <blkid_probe_get_size@plt+0x49384>
   506b8:	ldr	r0, [r1, #12]
   506bc:	sub	r1, fp, #64	; 0x40
   506c0:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   506c4:	subs	r5, r0, #0
   506c8:	blt	5075c <blkid_probe_get_size@plt+0x49244>
   506cc:	ldr	r5, [fp, #-64]	; 0xffffffc0
   506d0:	cmp	r5, #0
   506d4:	beq	508d4 <blkid_probe_get_size@plt+0x493bc>
   506d8:	mov	r0, r5
   506dc:	bl	723c <strlen@plt>
   506e0:	add	r3, r0, #8
   506e4:	cmp	r3, #4194304	; 0x400000
   506e8:	bhi	50870 <blkid_probe_get_size@plt+0x49358>
   506ec:	add	r0, r0, #22
   506f0:	bic	r0, r0, #7
   506f4:	sub	sp, sp, r0
   506f8:	add	r8, sp, #8
   506fc:	mov	r1, r5
   50700:	mov	r0, r8
   50704:	bl	6ae0 <stpcpy@plt>
   50708:	ldr	r3, [pc, #616]	; 50978 <blkid_probe_get_size@plt+0x49460>
   5070c:	add	r3, pc, r3
   50710:	mov	r2, r0
   50714:	add	ip, r0, #7
   50718:	ldm	r3!, {r0, r1}
   5071c:	str	r0, [r2]
   50720:	str	r1, [r2, #4]
   50724:	mov	r6, #0
   50728:	mov	r0, r8
   5072c:	strb	r6, [ip]
   50730:	mov	r2, r6
   50734:	mov	r1, r6
   50738:	sub	r3, fp, #68	; 0x44
   5073c:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   50740:	subs	r5, r0, #0
   50744:	blt	5075c <blkid_probe_get_size@plt+0x49244>
   50748:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5074c:	sub	r0, fp, #60	; 0x3c
   50750:	bl	2557c <blkid_probe_get_size@plt+0x1e064>
   50754:	subs	r5, r0, #0
   50758:	bge	50798 <blkid_probe_get_size@plt+0x49280>
   5075c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   50760:	bl	69f0 <free@plt>
   50764:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50768:	bl	69f0 <free@plt>
   5076c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   50770:	cmp	r0, #0
   50774:	beq	5077c <blkid_probe_get_size@plt+0x49264>
   50778:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   5077c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   50780:	ldr	r3, [r4]
   50784:	mov	r0, r5
   50788:	cmp	r2, r3
   5078c:	bne	5096c <blkid_probe_get_size@plt+0x49454>
   50790:	sub	sp, fp, #32
   50794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   50798:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5079c:	bl	6ca8 <opendir@plt>
   507a0:	mov	r9, r0
   507a4:	bl	732c <__errno_location@plt>
   507a8:	cmp	r9, r6
   507ac:	mov	sl, r0
   507b0:	beq	508c8 <blkid_probe_get_size@plt+0x493b0>
   507b4:	str	r6, [r0]
   507b8:	mov	r0, r9
   507bc:	bl	6bb8 <readdir64@plt>
   507c0:	subs	r6, r0, #0
   507c4:	beq	5091c <blkid_probe_get_size@plt+0x49404>
   507c8:	ldr	r3, [pc, #428]	; 5097c <blkid_probe_get_size@plt+0x49464>
   507cc:	add	r3, pc, r3
   507d0:	str	r3, [fp, #-80]	; 0xffffffb0
   507d4:	ldr	r3, [pc, #420]	; 50980 <blkid_probe_get_size@plt+0x49468>
   507d8:	add	r3, pc, r3
   507dc:	str	r3, [fp, #-84]	; 0xffffffac
   507e0:	b	5084c <blkid_probe_get_size@plt+0x49334>
   507e4:	mov	r2, r8
   507e8:	mov	r3, r5
   507ec:	ldr	r1, [fp, #-84]	; 0xffffffac
   507f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   507f4:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   507f8:	subs	r8, r0, #0
   507fc:	beq	50938 <blkid_probe_get_size@plt+0x49420>
   50800:	sub	r3, fp, #72	; 0x48
   50804:	mov	r2, r5
   50808:	mov	r1, r5
   5080c:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   50810:	cmp	r0, #0
   50814:	blt	5082c <blkid_probe_get_size@plt+0x49314>
   50818:	ldr	r1, [fp, #-72]	; 0xffffffb8
   5081c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50820:	bl	7314 <strcmp@plt>
   50824:	cmp	r0, #0
   50828:	beq	508e4 <blkid_probe_get_size@plt+0x493cc>
   5082c:	mov	r0, r8
   50830:	bl	69f0 <free@plt>
   50834:	mov	r3, #0
   50838:	str	r3, [sl]
   5083c:	mov	r0, r9
   50840:	bl	6bb8 <readdir64@plt>
   50844:	subs	r6, r0, #0
   50848:	beq	5091c <blkid_probe_get_size@plt+0x49404>
   5084c:	add	r8, r6, #19
   50850:	mov	r0, r8
   50854:	mov	r2, #6
   50858:	ldr	r1, [fp, #-80]	; 0xffffffb0
   5085c:	bl	6a5c <strncmp@plt>
   50860:	subs	r5, r0, #0
   50864:	beq	507e4 <blkid_probe_get_size@plt+0x492cc>
   50868:	mov	r8, #0
   5086c:	b	5082c <blkid_probe_get_size@plt+0x49314>
   50870:	ldr	r2, [pc, #268]	; 50984 <blkid_probe_get_size@plt+0x4946c>
   50874:	ldr	r1, [pc, #268]	; 50988 <blkid_probe_get_size@plt+0x49470>
   50878:	add	r2, pc, r2
   5087c:	add	r2, r2, #248	; 0xf8
   50880:	str	r2, [sp]
   50884:	ldr	r2, [pc, #256]	; 5098c <blkid_probe_get_size@plt+0x49474>
   50888:	mov	r3, #197	; 0xc5
   5088c:	add	r2, pc, r2
   50890:	add	r1, pc, r1
   50894:	mov	r0, #1
   50898:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5089c:	ldr	r2, [pc, #236]	; 50990 <blkid_probe_get_size@plt+0x49478>
   508a0:	ldr	r1, [pc, #236]	; 50994 <blkid_probe_get_size@plt+0x4947c>
   508a4:	add	r2, pc, r2
   508a8:	add	r2, r2, #248	; 0xf8
   508ac:	str	r2, [sp]
   508b0:	ldr	r2, [pc, #224]	; 50998 <blkid_probe_get_size@plt+0x49480>
   508b4:	mov	r3, #188	; 0xbc
   508b8:	add	r2, pc, r2
   508bc:	add	r1, pc, r1
   508c0:	mov	r0, #1
   508c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   508c8:	ldr	r5, [r0]
   508cc:	rsb	r5, r5, #0
   508d0:	b	5075c <blkid_probe_get_size@plt+0x49244>
   508d4:	sub	sp, sp, #8
   508d8:	add	ip, sp, #8
   508dc:	mov	r8, ip
   508e0:	b	50724 <blkid_probe_get_size@plt+0x4920c>
   508e4:	ldr	r2, [pc, #176]	; 5099c <blkid_probe_get_size@plt+0x49484>
   508e8:	add	r6, r6, #25
   508ec:	add	r2, pc, r2
   508f0:	mov	r3, #16
   508f4:	stm	sp, {r2, r6}
   508f8:	mov	r1, r3
   508fc:	mov	r2, #1
   50900:	sub	r0, fp, #56	; 0x38
   50904:	bl	7260 <__snprintf_chk@plt>
   50908:	cmp	r0, #15
   5090c:	mvnhi	r5, #1
   50910:	bhi	5093c <blkid_probe_get_size@plt+0x49424>
   50914:	mov	r0, r8
   50918:	bl	69f0 <free@plt>
   5091c:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   50920:	cmp	r3, #0
   50924:	bne	50948 <blkid_probe_get_size@plt+0x49430>
   50928:	mvn	r5, #1
   5092c:	mov	r0, r9
   50930:	bl	6aa4 <closedir@plt>
   50934:	b	5075c <blkid_probe_get_size@plt+0x49244>
   50938:	mvn	r5, #11
   5093c:	mov	r0, r8
   50940:	bl	69f0 <free@plt>
   50944:	b	5092c <blkid_probe_get_size@plt+0x49414>
   50948:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5094c:	mov	r0, r7
   50950:	mov	r5, #0
   50954:	str	r3, [r0], #4
   50958:	mov	r2, #16
   5095c:	sub	r1, fp, #56	; 0x38
   50960:	str	r5, [fp, #-60]	; 0xffffffc4
   50964:	bl	7374 <strncpy@plt>
   50968:	b	5092c <blkid_probe_get_size@plt+0x49414>
   5096c:	bl	6fb4 <__stack_chk_fail@plt>
   50970:	andeq	r7, r4, r8, ror #9
   50974:	andeq	r0, r0, ip, lsr r4
   50978:	andeq	r2, r2, r0, lsr ip
   5097c:	andeq	r2, r2, r4, ror #22
   50980:	andeq	r7, r2, r8, ror #15
   50984:	andeq	r2, r2, ip, asr #1
   50988:	andeq	r4, r1, r8, lsl #16
   5098c:	andeq	r2, r2, ip, lsl sl
   50990:	andeq	r2, r2, r0, lsr #1
   50994:	andeq	r4, r1, r8, asr #29
   50998:	strdeq	r2, [r2], -r0
   5099c:	andeq	r2, r2, ip, asr #20
   509a0:	ldr	r3, [pc, #128]	; 50a28 <blkid_probe_get_size@plt+0x49510>
   509a4:	ldr	r2, [pc, #128]	; 50a2c <blkid_probe_get_size@plt+0x49514>
   509a8:	add	r3, pc, r3
   509ac:	push	{r4, r5, r6, lr}
   509b0:	sub	sp, sp, #8
   509b4:	ldr	r6, [r3, r2]
   509b8:	subs	r4, r0, #0
   509bc:	ldr	r3, [r6]
   509c0:	str	r3, [sp, #4]
   509c4:	beq	50a1c <blkid_probe_get_size@plt+0x49504>
   509c8:	mov	r2, #0
   509cc:	mov	r5, r1
   509d0:	mov	r1, sp
   509d4:	bl	69e4 <strtol@plt>
   509d8:	mov	r2, r0
   509dc:	ldr	r0, [sp]
   509e0:	ldrb	r3, [r0]
   509e4:	cmp	r3, #0
   509e8:	cmpne	r3, #58	; 0x3a
   509ec:	bne	50a1c <blkid_probe_get_size@plt+0x49504>
   509f0:	cmp	r0, r4
   509f4:	strne	r2, [r5]
   509f8:	ldrbne	r3, [r0]
   509fc:	cmp	r3, #0
   50a00:	addne	r0, r0, #1
   50a04:	ldr	r2, [sp, #4]
   50a08:	ldr	r3, [r6]
   50a0c:	cmp	r2, r3
   50a10:	bne	50a24 <blkid_probe_get_size@plt+0x4950c>
   50a14:	add	sp, sp, #8
   50a18:	pop	{r4, r5, r6, pc}
   50a1c:	mov	r0, #0
   50a20:	b	50a04 <blkid_probe_get_size@plt+0x494ec>
   50a24:	bl	6fb4 <__stack_chk_fail@plt>
   50a28:	andeq	r7, r4, r0, asr #3
   50a2c:	andeq	r0, r0, ip, lsr r4
   50a30:	ldr	r3, [pc, #4016]	; 519e8 <blkid_probe_get_size@plt+0x4a4d0>
   50a34:	ldr	r2, [pc, #4016]	; 519ec <blkid_probe_get_size@plt+0x4a4d4>
   50a38:	add	r3, pc, r3
   50a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   50a40:	sub	sp, sp, #8256	; 0x2040
   50a44:	ldr	r2, [r3, r2]
   50a48:	sub	sp, sp, #60	; 0x3c
   50a4c:	add	r4, sp, #120	; 0x78
   50a50:	ldr	r3, [r2]
   50a54:	str	r2, [sp, #60]	; 0x3c
   50a58:	add	r2, sp, #8256	; 0x2040
   50a5c:	add	r2, r2, #52	; 0x34
   50a60:	sub	r1, r4, #44	; 0x2c
   50a64:	mov	r7, r0
   50a68:	str	r3, [r2]
   50a6c:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   50a70:	subs	r5, r0, #0
   50a74:	bge	50b28 <blkid_probe_get_size@plt+0x49610>
   50a78:	mov	r3, #0
   50a7c:	cmp	r7, #0
   50a80:	str	r3, [r4, #-28]	; 0xffffffe4
   50a84:	beq	516c4 <blkid_probe_get_size@plt+0x4a1ac>
   50a88:	ldr	r2, [pc, #3936]	; 519f0 <blkid_probe_get_size@plt+0x4a4d8>
   50a8c:	add	r2, pc, r2
   50a90:	ldr	r2, [r2, #4]
   50a94:	cmp	r2, #2
   50a98:	movle	r7, r3
   50a9c:	movle	r1, r7
   50aa0:	bgt	51d04 <blkid_probe_get_size@plt+0x4a7ec>
   50aa4:	ldr	r2, [pc, #3912]	; 519f4 <blkid_probe_get_size@plt+0x4a4dc>
   50aa8:	ldr	r3, [pc, #3912]	; 519f8 <blkid_probe_get_size@plt+0x4a4e0>
   50aac:	add	r2, pc, r2
   50ab0:	str	r2, [sp, #20]
   50ab4:	add	r3, pc, r3
   50ab8:	ldr	r2, [pc, #3900]	; 519fc <blkid_probe_get_size@plt+0x4a4e4>
   50abc:	mov	r0, #0
   50ac0:	add	r3, r3, #264	; 0x108
   50ac4:	str	r1, [sp, #4]
   50ac8:	str	r3, [sp]
   50acc:	str	r0, [sp, #16]
   50ad0:	str	r0, [sp, #12]
   50ad4:	str	r7, [sp, #8]
   50ad8:	mov	r1, r5
   50adc:	mov	r3, #175	; 0xaf
   50ae0:	add	r2, pc, r2
   50ae4:	mov	r0, #3
   50ae8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   50aec:	mvn	r9, #0
   50af0:	mov	fp, r0
   50af4:	mov	r0, r9
   50af8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   50afc:	add	r3, sp, #8256	; 0x2040
   50b00:	add	r3, r3, #52	; 0x34
   50b04:	ldr	r2, [r3]
   50b08:	ldr	r3, [sp, #60]	; 0x3c
   50b0c:	mov	r0, fp
   50b10:	ldr	r3, [r3]
   50b14:	cmp	r2, r3
   50b18:	bne	521fc <blkid_probe_get_size@plt+0x4ace4>
   50b1c:	add	sp, sp, #8256	; 0x2040
   50b20:	add	sp, sp, #60	; 0x3c
   50b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   50b28:	sub	sl, r4, #48	; 0x30
   50b2c:	mov	r1, sl
   50b30:	mov	r0, r7
   50b34:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
   50b38:	subs	r5, r0, #0
   50b3c:	beq	51edc <blkid_probe_get_size@plt+0x4a9c4>
   50b40:	ldr	r3, [pc, #3768]	; 51a00 <blkid_probe_get_size@plt+0x4a4e8>
   50b44:	mvn	r9, #0
   50b48:	add	r3, pc, r3
   50b4c:	add	r3, r3, #868	; 0x364
   50b50:	str	r3, [sp, #68]	; 0x44
   50b54:	mov	r3, #0
   50b58:	str	r9, [sp, #52]	; 0x34
   50b5c:	str	r3, [sp, #56]	; 0x38
   50b60:	ldr	r1, [pc, #3740]	; 51a04 <blkid_probe_get_size@plt+0x4a4ec>
   50b64:	mov	r2, #13
   50b68:	add	r1, pc, r1
   50b6c:	mov	r0, r5
   50b70:	bl	6a5c <strncmp@plt>
   50b74:	subs	fp, r0, #0
   50b78:	bne	50e78 <blkid_probe_get_size@plt+0x49960>
   50b7c:	adds	r0, r5, #13
   50b80:	beq	50e78 <blkid_probe_get_size@plt+0x49960>
   50b84:	mov	r2, #16
   50b88:	sub	r1, r4, #40	; 0x28
   50b8c:	ldr	r6, [r4, #-48]	; 0xffffffd0
   50b90:	bl	6c54 <strtoul@plt>
   50b94:	ldr	r2, [r4, #-40]	; 0xffffffd8
   50b98:	ldrb	r2, [r2]
   50b9c:	cmp	r2, #0
   50ba0:	mov	r8, r0
   50ba4:	bne	5103c <blkid_probe_get_size@plt+0x49b24>
   50ba8:	ldrb	r3, [r6]
   50bac:	cmp	r3, #33	; 0x21
   50bb0:	beq	5112c <blkid_probe_get_size@plt+0x49c14>
   50bb4:	cmn	r9, #1
   50bb8:	beq	51160 <blkid_probe_get_size@plt+0x49c48>
   50bbc:	mov	r0, r6
   50bc0:	bl	723c <strlen@plt>
   50bc4:	sub	r3, r0, #1
   50bc8:	cmp	r3, #27
   50bcc:	bhi	512ec <blkid_probe_get_size@plt+0x49dd4>
   50bd0:	cmp	r3, #18
   50bd4:	addls	pc, pc, r3, lsl #2
   50bd8:	b	50c28 <blkid_probe_get_size@plt+0x49710>
   50bdc:	b	50d40 <blkid_probe_get_size@plt+0x49828>
   50be0:	b	50d24 <blkid_probe_get_size@plt+0x4980c>
   50be4:	b	50d08 <blkid_probe_get_size@plt+0x497f0>
   50be8:	b	50d08 <blkid_probe_get_size@plt+0x497f0>
   50bec:	b	50cec <blkid_probe_get_size@plt+0x497d4>
   50bf0:	b	50cd0 <blkid_probe_get_size@plt+0x497b8>
   50bf4:	b	50cb4 <blkid_probe_get_size@plt+0x4979c>
   50bf8:	b	50cb4 <blkid_probe_get_size@plt+0x4979c>
   50bfc:	b	50cb4 <blkid_probe_get_size@plt+0x4979c>
   50c00:	b	50c98 <blkid_probe_get_size@plt+0x49780>
   50c04:	b	50c98 <blkid_probe_get_size@plt+0x49780>
   50c08:	b	50c7c <blkid_probe_get_size@plt+0x49764>
   50c0c:	b	50c7c <blkid_probe_get_size@plt+0x49764>
   50c10:	b	50c7c <blkid_probe_get_size@plt+0x49764>
   50c14:	b	50c60 <blkid_probe_get_size@plt+0x49748>
   50c18:	b	50c60 <blkid_probe_get_size@plt+0x49748>
   50c1c:	b	50c60 <blkid_probe_get_size@plt+0x49748>
   50c20:	b	50c44 <blkid_probe_get_size@plt+0x4972c>
   50c24:	b	50c44 <blkid_probe_get_size@plt+0x4972c>
   50c28:	ldrb	r2, [r6, #19]
   50c2c:	ldr	r1, [pc, #3540]	; 51a08 <blkid_probe_get_size@plt+0x4a4f0>
   50c30:	add	r1, pc, r1
   50c34:	add	r1, r1, #284	; 0x11c
   50c38:	lsl	r2, r2, #1
   50c3c:	ldrh	r2, [r1, r2]
   50c40:	add	r0, r0, r2
   50c44:	ldrb	r1, [r6, #17]
   50c48:	ldr	r2, [pc, #3516]	; 51a0c <blkid_probe_get_size@plt+0x4a4f4>
   50c4c:	add	r2, pc, r2
   50c50:	add	r2, r2, #284	; 0x11c
   50c54:	add	r2, r2, r1, lsl #1
   50c58:	ldrh	r2, [r2, #16]
   50c5c:	add	r0, r0, r2
   50c60:	ldrb	r2, [r6, #14]
   50c64:	ldr	r1, [pc, #3492]	; 51a10 <blkid_probe_get_size@plt+0x4a4f8>
   50c68:	add	r1, pc, r1
   50c6c:	add	r1, r1, #284	; 0x11c
   50c70:	lsl	r2, r2, #1
   50c74:	ldrh	r2, [r1, r2]
   50c78:	add	r0, r0, r2
   50c7c:	ldrb	r2, [r6, #11]
   50c80:	ldr	r1, [pc, #3468]	; 51a14 <blkid_probe_get_size@plt+0x4a4fc>
   50c84:	add	r1, pc, r1
   50c88:	add	r1, r1, #284	; 0x11c
   50c8c:	lsl	r2, r2, #1
   50c90:	ldrh	r2, [r1, r2]
   50c94:	add	r0, r0, r2
   50c98:	ldrb	r2, [r6, #9]
   50c9c:	ldr	r1, [pc, #3444]	; 51a18 <blkid_probe_get_size@plt+0x4a500>
   50ca0:	add	r1, pc, r1
   50ca4:	add	r1, r1, #284	; 0x11c
   50ca8:	lsl	r2, r2, #1
   50cac:	ldrh	r2, [r1, r2]
   50cb0:	add	r0, r0, r2
   50cb4:	ldrb	r2, [r6, #6]
   50cb8:	ldr	r1, [pc, #3420]	; 51a1c <blkid_probe_get_size@plt+0x4a504>
   50cbc:	add	r1, pc, r1
   50cc0:	add	r1, r1, #284	; 0x11c
   50cc4:	lsl	r2, r2, #1
   50cc8:	ldrh	r2, [r1, r2]
   50ccc:	add	r0, r0, r2
   50cd0:	ldrb	r1, [r6, #5]
   50cd4:	ldr	r2, [pc, #3396]	; 51a20 <blkid_probe_get_size@plt+0x4a508>
   50cd8:	add	r2, pc, r2
   50cdc:	add	r2, r2, #284	; 0x11c
   50ce0:	add	r2, r2, r1, lsl #1
   50ce4:	ldrh	r2, [r2, #2]
   50ce8:	add	r0, r0, r2
   50cec:	ldrb	r2, [r6, #4]
   50cf0:	ldr	r1, [pc, #3372]	; 51a24 <blkid_probe_get_size@plt+0x4a50c>
   50cf4:	add	r1, pc, r1
   50cf8:	add	r1, r1, #284	; 0x11c
   50cfc:	lsl	r2, r2, #1
   50d00:	ldrh	r2, [r1, r2]
   50d04:	add	r0, r0, r2
   50d08:	ldrb	r1, [r6, #2]
   50d0c:	ldr	r2, [pc, #3348]	; 51a28 <blkid_probe_get_size@plt+0x4a510>
   50d10:	add	r2, pc, r2
   50d14:	add	r2, r2, #284	; 0x11c
   50d18:	add	r2, r2, r1, lsl #1
   50d1c:	ldrh	r2, [r2, #2]
   50d20:	add	r0, r0, r2
   50d24:	ldrb	r2, [r6, #1]
   50d28:	ldr	r1, [pc, #3324]	; 51a2c <blkid_probe_get_size@plt+0x4a514>
   50d2c:	add	r1, pc, r1
   50d30:	add	r1, r1, #284	; 0x11c
   50d34:	lsl	r2, r2, #1
   50d38:	ldrh	r2, [r1, r2]
   50d3c:	add	r0, r0, r2
   50d40:	ldrb	lr, [r6, r3]
   50d44:	ldrb	r2, [r6]
   50d48:	ldr	r3, [pc, #3296]	; 51a30 <blkid_probe_get_size@plt+0x4a518>
   50d4c:	ldr	r1, [pc, #3296]	; 51a34 <blkid_probe_get_size@plt+0x4a51c>
   50d50:	add	r3, pc, r3
   50d54:	add	r3, r3, #284	; 0x11c
   50d58:	lsl	lr, lr, #1
   50d5c:	lsl	ip, r2, #1
   50d60:	ldrh	r5, [r3, lr]
   50d64:	ldrh	r3, [r3, ip]
   50d68:	add	r5, r5, r3
   50d6c:	add	r5, r5, r0
   50d70:	cmp	r5, r1
   50d74:	bhi	512ec <blkid_probe_get_size@plt+0x49dd4>
   50d78:	ldr	fp, [pc, #3256]	; 51a38 <blkid_probe_get_size@plt+0x4a520>
   50d7c:	add	fp, pc, fp
   50d80:	ldr	r1, [fp, r5, lsl #3]
   50d84:	cmp	r1, #0
   50d88:	beq	512ec <blkid_probe_get_size@plt+0x49dd4>
   50d8c:	ldrb	r0, [r1]
   50d90:	cmp	r0, r2
   50d94:	bne	512ec <blkid_probe_get_size@plt+0x49dd4>
   50d98:	add	r1, r1, #1
   50d9c:	add	r0, r6, #1
   50da0:	bl	7314 <strcmp@plt>
   50da4:	cmp	r0, #0
   50da8:	bne	512ec <blkid_probe_get_size@plt+0x49dd4>
   50dac:	add	r0, fp, r5, lsl #3
   50db0:	ldrh	r0, [r0, #4]
   50db4:	mov	r2, #0
   50db8:	cmp	r7, #0
   50dbc:	str	r8, [r4, #-28]	; 0xffffffe4
   50dc0:	str	r0, [r4, #-24]	; 0xffffffe8
   50dc4:	str	r2, [r4, #-32]	; 0xffffffe0
   50dc8:	beq	51200 <blkid_probe_get_size@plt+0x49ce8>
   50dcc:	ldr	r3, [pc, #3176]	; 51a3c <blkid_probe_get_size@plt+0x4a524>
   50dd0:	add	r3, pc, r3
   50dd4:	ldr	r3, [r3, #4]
   50dd8:	cmp	r3, #6
   50ddc:	bgt	517f0 <blkid_probe_get_size@plt+0x4a2d8>
   50de0:	mov	ip, r2
   50de4:	ldr	r3, [pc, #3156]	; 51a40 <blkid_probe_get_size@plt+0x4a528>
   50de8:	ldr	r1, [pc, #3156]	; 51a44 <blkid_probe_get_size@plt+0x4a52c>
   50dec:	add	r3, pc, r3
   50df0:	add	r3, r3, #812	; 0x32c
   50df4:	str	r2, [sp, #8]
   50df8:	ldr	r2, [pc, #3144]	; 51a48 <blkid_probe_get_size@plt+0x4a530>
   50dfc:	mov	r5, #0
   50e00:	add	r1, pc, r1
   50e04:	stm	sp, {r3, ip}
   50e08:	str	r0, [sp, #36]	; 0x24
   50e0c:	str	r0, [sp, #32]
   50e10:	str	r1, [sp, #20]
   50e14:	mov	r3, #84	; 0x54
   50e18:	mov	r1, r5
   50e1c:	add	r2, pc, r2
   50e20:	str	r8, [sp, #28]
   50e24:	str	r8, [sp, #24]
   50e28:	str	r5, [sp, #16]
   50e2c:	str	r5, [sp, #12]
   50e30:	mov	r0, #7
   50e34:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   50e38:	sub	r2, r4, #28
   50e3c:	ldr	r1, [pc, #3080]	; 51a4c <blkid_probe_get_size@plt+0x4a534>
   50e40:	mov	r0, r9
   50e44:	bl	6e70 <ioctl@plt>
   50e48:	cmp	r0, r5
   50e4c:	blt	510ac <blkid_probe_get_size@plt+0x49b94>
   50e50:	mov	r1, sl
   50e54:	mov	r0, r7
   50e58:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
   50e5c:	subs	r5, r0, #0
   50e60:	bne	50b60 <blkid_probe_get_size@plt+0x49648>
   50e64:	ldr	r3, [sp, #56]	; 0x38
   50e68:	cmp	r3, #0
   50e6c:	bne	516cc <blkid_probe_get_size@plt+0x4a1b4>
   50e70:	ldr	fp, [sp, #56]	; 0x38
   50e74:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   50e78:	ldr	r1, [pc, #3024]	; 51a50 <blkid_probe_get_size@plt+0x4a538>
   50e7c:	mov	r2, #10
   50e80:	add	r1, pc, r1
   50e84:	mov	r0, r5
   50e88:	bl	6a5c <strncmp@plt>
   50e8c:	subs	r8, r0, #0
   50e90:	bne	50f88 <blkid_probe_get_size@plt+0x49a70>
   50e94:	adds	r0, r5, #10
   50e98:	beq	50f88 <blkid_probe_get_size@plt+0x49a70>
   50e9c:	mov	r2, #16
   50ea0:	sub	r1, r4, #40	; 0x28
   50ea4:	bl	6c54 <strtoul@plt>
   50ea8:	ldr	r3, [r4, #-40]	; 0xffffffd8
   50eac:	ldrb	r3, [r3]
   50eb0:	cmp	r3, #0
   50eb4:	mov	r6, r0
   50eb8:	bne	51280 <blkid_probe_get_size@plt+0x49d68>
   50ebc:	cmn	r9, #1
   50ec0:	beq	514f8 <blkid_probe_get_size@plt+0x49fe0>
   50ec4:	ldr	r3, [sp, #52]	; 0x34
   50ec8:	cmn	r3, #1
   50ecc:	beq	515a0 <blkid_probe_get_size@plt+0x4a088>
   50ed0:	ldr	r3, [sp, #52]	; 0x34
   50ed4:	cmp	r3, #0
   50ed8:	beq	50e50 <blkid_probe_get_size@plt+0x49938>
   50edc:	add	r1, r6, #64	; 0x40
   50ee0:	orr	r1, r1, #-2147483648	; 0x80000000
   50ee4:	sub	r5, r4, #28
   50ee8:	orr	r1, r1, #1589248	; 0x184000
   50eec:	mov	r2, r5
   50ef0:	orr	r1, r1, #1280	; 0x500
   50ef4:	mov	r0, r9
   50ef8:	ldr	r8, [r4, #-48]	; 0xffffffd0
   50efc:	bl	6e70 <ioctl@plt>
   50f00:	cmp	r0, #0
   50f04:	bge	5138c <blkid_probe_get_size@plt+0x49e74>
   50f08:	mov	r6, #0
   50f0c:	str	r6, [r4, #-32]	; 0xffffffe0
   50f10:	bl	732c <__errno_location@plt>
   50f14:	cmp	r7, r6
   50f18:	ldr	r5, [r0]
   50f1c:	beq	5181c <blkid_probe_get_size@plt+0x4a304>
   50f20:	ldr	r3, [pc, #2860]	; 51a54 <blkid_probe_get_size@plt+0x4a53c>
   50f24:	add	r3, pc, r3
   50f28:	ldr	r3, [r3, #4]
   50f2c:	cmp	r3, #2
   50f30:	movle	r2, r6
   50f34:	movle	r1, r2
   50f38:	bgt	51d64 <blkid_probe_get_size@plt+0x4a84c>
   50f3c:	ldr	r3, [pc, #2836]	; 51a58 <blkid_probe_get_size@plt+0x4a540>
   50f40:	ldr	r0, [pc, #2836]	; 51a5c <blkid_probe_get_size@plt+0x4a544>
   50f44:	add	r3, pc, r3
   50f48:	add	r0, pc, r0
   50f4c:	add	r3, r3, #824	; 0x338
   50f50:	str	r2, [sp, #8]
   50f54:	str	r3, [sp]
   50f58:	mov	r2, #0
   50f5c:	mov	r3, r0
   50f60:	str	r2, [sp, #12]
   50f64:	strd	r2, [sp, #16]
   50f68:	ldr	r2, [pc, #2800]	; 51a60 <blkid_probe_get_size@plt+0x4a548>
   50f6c:	str	r1, [sp, #4]
   50f70:	mov	r3, #119	; 0x77
   50f74:	mov	r1, r5
   50f78:	add	r2, pc, r2
   50f7c:	mov	r0, #3
   50f80:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   50f84:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   50f88:	ldr	r1, [pc, #2772]	; 51a64 <blkid_probe_get_size@plt+0x4a54c>
   50f8c:	mov	r0, r5
   50f90:	add	r1, pc, r1
   50f94:	bl	7314 <strcmp@plt>
   50f98:	subs	r5, r0, #0
   50f9c:	bne	50e50 <blkid_probe_get_size@plt+0x49938>
   50fa0:	cmp	r7, #0
   50fa4:	ldr	r6, [r4, #-48]	; 0xffffffd0
   50fa8:	beq	518dc <blkid_probe_get_size@plt+0x4a3c4>
   50fac:	cmp	r6, #0
   50fb0:	beq	51908 <blkid_probe_get_size@plt+0x4a3f0>
   50fb4:	ldr	r1, [pc, #2732]	; 51a68 <blkid_probe_get_size@plt+0x4a550>
   50fb8:	sub	r3, r4, #36	; 0x24
   50fbc:	mov	r2, r5
   50fc0:	add	r1, pc, r1
   50fc4:	mov	r0, r7
   50fc8:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   50fcc:	subs	r8, r0, #0
   50fd0:	bge	5163c <blkid_probe_get_size@plt+0x4a124>
   50fd4:	ldr	r3, [pc, #2704]	; 51a6c <blkid_probe_get_size@plt+0x4a554>
   50fd8:	str	r5, [r4, #-28]	; 0xffffffe4
   50fdc:	add	r3, pc, r3
   50fe0:	ldr	r3, [r3, #4]
   50fe4:	cmp	r3, #2
   50fe8:	bgt	51d40 <blkid_probe_get_size@plt+0x4a828>
   50fec:	mov	r1, r5
   50ff0:	ldr	r2, [pc, #2680]	; 51a70 <blkid_probe_get_size@plt+0x4a558>
   50ff4:	ldr	r3, [pc, #2680]	; 51a74 <blkid_probe_get_size@plt+0x4a55c>
   50ff8:	add	r2, pc, r2
   50ffc:	str	r2, [sp, #20]
   51000:	add	r3, pc, r3
   51004:	ldr	r2, [pc, #2668]	; 51a78 <blkid_probe_get_size@plt+0x4a560>
   51008:	mov	r0, #0
   5100c:	add	r3, r3, #868	; 0x364
   51010:	str	r1, [sp, #4]
   51014:	str	r3, [sp]
   51018:	str	r0, [sp, #16]
   5101c:	str	r0, [sp, #12]
   51020:	str	r5, [sp, #8]
   51024:	mov	r1, r8
   51028:	mov	r3, #149	; 0x95
   5102c:	add	r2, pc, r2
   51030:	mov	r0, #3
   51034:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51038:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   5103c:	cmp	r7, #0
   51040:	str	fp, [r4, #-28]	; 0xffffffe4
   51044:	beq	51380 <blkid_probe_get_size@plt+0x49e68>
   51048:	ldr	r2, [pc, #2604]	; 51a7c <blkid_probe_get_size@plt+0x4a564>
   5104c:	add	r2, pc, r2
   51050:	ldr	r2, [r2, #4]
   51054:	cmp	r2, #3
   51058:	movle	r3, fp
   5105c:	movle	ip, r3
   51060:	bgt	51828 <blkid_probe_get_size@plt+0x4a310>
   51064:	ldr	r2, [pc, #2580]	; 51a80 <blkid_probe_get_size@plt+0x4a568>
   51068:	ldr	r0, [pc, #2580]	; 51a84 <blkid_probe_get_size@plt+0x4a56c>
   5106c:	add	r2, pc, r2
   51070:	add	r2, r2, #264	; 0x108
   51074:	mov	r1, #0
   51078:	stm	sp, {r2, ip}
   5107c:	ldr	r2, [pc, #2564]	; 51a88 <blkid_probe_get_size@plt+0x4a570>
   51080:	add	r0, pc, r0
   51084:	str	r3, [sp, #8]
   51088:	str	r0, [sp, #20]
   5108c:	str	r5, [sp, #24]
   51090:	str	r1, [sp, #16]
   51094:	str	r1, [sp, #12]
   51098:	mov	r3, #187	; 0xbb
   5109c:	add	r2, pc, r2
   510a0:	mov	r0, #4
   510a4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   510a8:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   510ac:	str	r5, [r4, #-32]	; 0xffffffe0
   510b0:	bl	732c <__errno_location@plt>
   510b4:	ldr	r3, [pc, #2512]	; 51a8c <blkid_probe_get_size@plt+0x4a574>
   510b8:	add	r3, pc, r3
   510bc:	ldr	r3, [r3, #4]
   510c0:	cmp	r3, #2
   510c4:	ldr	r6, [r0]
   510c8:	bgt	518b8 <blkid_probe_get_size@plt+0x4a3a0>
   510cc:	mov	r2, r5
   510d0:	ldr	r0, [r4, #-24]	; 0xffffffe8
   510d4:	str	r5, [sp, #8]
   510d8:	ldr	lr, [r4, #-28]	; 0xffffffe4
   510dc:	str	r2, [sp, #4]
   510e0:	ldr	r2, [pc, #2472]	; 51a90 <blkid_probe_get_size@plt+0x4a578>
   510e4:	ldr	r3, [pc, #2472]	; 51a94 <blkid_probe_get_size@plt+0x4a57c>
   510e8:	add	r2, pc, r2
   510ec:	str	r2, [sp, #20]
   510f0:	add	r3, pc, r3
   510f4:	ldr	r2, [pc, #2460]	; 51a98 <blkid_probe_get_size@plt+0x4a580>
   510f8:	mov	ip, #0
   510fc:	add	r3, r3, #812	; 0x32c
   51100:	str	r3, [sp]
   51104:	str	r0, [sp, #28]
   51108:	mov	r1, r6
   5110c:	str	lr, [sp, #24]
   51110:	str	ip, [sp, #16]
   51114:	str	ip, [sp, #12]
   51118:	mov	r3, #87	; 0x57
   5111c:	add	r2, pc, r2
   51120:	mov	r0, #3
   51124:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51128:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   5112c:	ldr	r1, [sp, #56]	; 0x38
   51130:	ldr	r2, [pc, #2404]	; 51a9c <blkid_probe_get_size@plt+0x4a584>
   51134:	add	r3, r4, r1, lsl #2
   51138:	cmp	r1, r2
   5113c:	str	r0, [r3, #-4]
   51140:	addls	r3, r1, #1
   51144:	strls	r3, [sp, #56]	; 0x38
   51148:	ldrb	r3, [r6, #1]
   5114c:	cmp	r3, #0
   51150:	beq	50e50 <blkid_probe_get_size@plt+0x49938>
   51154:	cmn	r9, #1
   51158:	add	r6, r6, #1
   5115c:	bne	50bbc <blkid_probe_get_size@plt+0x496a4>
   51160:	ldr	r1, [pc, #2360]	; 51aa0 <blkid_probe_get_size@plt+0x4a588>
   51164:	ldr	r0, [r4, #-44]	; 0xffffffd4
   51168:	bl	6ec4 <open64@plt>
   5116c:	subs	r9, r0, #0
   51170:	bge	50bbc <blkid_probe_get_size@plt+0x496a4>
   51174:	mov	r5, #0
   51178:	str	r5, [r4, #-28]	; 0xffffffe4
   5117c:	bl	732c <__errno_location@plt>
   51180:	cmp	r7, r5
   51184:	ldr	r6, [r0]
   51188:	beq	51fe0 <blkid_probe_get_size@plt+0x4aac8>
   5118c:	ldr	r3, [pc, #2320]	; 51aa4 <blkid_probe_get_size@plt+0x4a58c>
   51190:	add	r3, pc, r3
   51194:	ldr	r3, [r3, #4]
   51198:	cmp	r3, #2
   5119c:	movle	r7, r5
   511a0:	movle	r1, r7
   511a4:	bgt	5212c <blkid_probe_get_size@plt+0x4ac14>
   511a8:	ldr	r2, [r4, #-44]	; 0xffffffd4
   511ac:	ldr	r3, [pc, #2292]	; 51aa8 <blkid_probe_get_size@plt+0x4a590>
   511b0:	str	r2, [sp, #24]
   511b4:	ldr	r2, [pc, #2288]	; 51aac <blkid_probe_get_size@plt+0x4a594>
   511b8:	add	r3, pc, r3
   511bc:	add	r2, pc, r2
   511c0:	str	r2, [sp, #20]
   511c4:	ldr	r2, [pc, #2276]	; 51ab0 <blkid_probe_get_size@plt+0x4a598>
   511c8:	mov	r0, #0
   511cc:	add	r3, r3, #264	; 0x108
   511d0:	str	r1, [sp, #4]
   511d4:	str	r3, [sp]
   511d8:	str	r0, [sp, #16]
   511dc:	str	r0, [sp, #12]
   511e0:	str	r7, [sp, #8]
   511e4:	mov	r1, r6
   511e8:	mov	r3, #206	; 0xce
   511ec:	add	r2, pc, r2
   511f0:	mov	r0, #3
   511f4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   511f8:	mov	fp, r0
   511fc:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   51200:	ldr	r3, [pc, #2220]	; 51ab4 <blkid_probe_get_size@plt+0x4a59c>
   51204:	ldr	r2, [pc, #2220]	; 51ab8 <blkid_probe_get_size@plt+0x4a5a0>
   51208:	add	r3, pc, r3
   5120c:	add	r2, pc, r2
   51210:	add	r3, r3, #812	; 0x32c
   51214:	str	r2, [sp, #20]
   51218:	ldr	r2, [pc, #2204]	; 51abc <blkid_probe_get_size@plt+0x4a5a4>
   5121c:	str	r0, [sp, #36]	; 0x24
   51220:	str	r0, [sp, #32]
   51224:	stm	sp, {r3, r7}
   51228:	add	r2, pc, r2
   5122c:	mov	r3, #84	; 0x54
   51230:	mov	r1, r7
   51234:	str	r8, [sp, #28]
   51238:	str	r8, [sp, #24]
   5123c:	str	r7, [sp, #16]
   51240:	str	r7, [sp, #12]
   51244:	str	r7, [sp, #8]
   51248:	mov	r0, #7
   5124c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51250:	sub	r2, r4, #28
   51254:	ldr	r1, [pc, #2032]	; 51a4c <blkid_probe_get_size@plt+0x4a534>
   51258:	mov	r0, r9
   5125c:	bl	6e70 <ioctl@plt>
   51260:	cmp	r0, #0
   51264:	bge	50e50 <blkid_probe_get_size@plt+0x49938>
   51268:	str	r7, [r4, #-32]	; 0xffffffe0
   5126c:	bl	732c <__errno_location@plt>
   51270:	mov	r5, r7
   51274:	mov	r2, r7
   51278:	ldr	r6, [r0]
   5127c:	b	510d0 <blkid_probe_get_size@plt+0x49bb8>
   51280:	cmp	r7, #0
   51284:	str	r8, [r4, #-28]	; 0xffffffe4
   51288:	beq	517e4 <blkid_probe_get_size@plt+0x4a2cc>
   5128c:	ldr	r3, [pc, #2092]	; 51ac0 <blkid_probe_get_size@plt+0x4a5a8>
   51290:	add	r3, pc, r3
   51294:	ldr	r3, [r3, #4]
   51298:	cmp	r3, #3
   5129c:	bgt	519c4 <blkid_probe_get_size@plt+0x4a4ac>
   512a0:	mov	r0, r8
   512a4:	ldr	r2, [pc, #2072]	; 51ac4 <blkid_probe_get_size@plt+0x4a5ac>
   512a8:	ldr	r3, [pc, #2072]	; 51ac8 <blkid_probe_get_size@plt+0x4a5b0>
   512ac:	add	r2, pc, r2
   512b0:	str	r2, [sp, #20]
   512b4:	add	r3, pc, r3
   512b8:	ldr	r2, [pc, #2060]	; 51acc <blkid_probe_get_size@plt+0x4a5b4>
   512bc:	mov	r1, #0
   512c0:	add	r3, r3, #264	; 0x108
   512c4:	stmib	sp, {r0, r8}
   512c8:	str	r3, [sp]
   512cc:	str	r5, [sp, #24]
   512d0:	str	r1, [sp, #16]
   512d4:	str	r1, [sp, #12]
   512d8:	mov	r3, #216	; 0xd8
   512dc:	add	r2, pc, r2
   512e0:	mov	r0, #4
   512e4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   512e8:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   512ec:	mov	r2, #0
   512f0:	sub	r1, r4, #36	; 0x24
   512f4:	mov	r0, r6
   512f8:	bl	6c54 <strtoul@plt>
   512fc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   51300:	ldrb	r3, [r3]
   51304:	cmp	r3, #0
   51308:	beq	50db4 <blkid_probe_get_size@plt+0x4989c>
   5130c:	mov	r2, #0
   51310:	cmp	r7, #0
   51314:	str	r2, [r4, #-28]	; 0xffffffe4
   51318:	beq	517cc <blkid_probe_get_size@plt+0x4a2b4>
   5131c:	ldr	r3, [pc, #1964]	; 51ad0 <blkid_probe_get_size@plt+0x4a5b8>
   51320:	add	r3, pc, r3
   51324:	ldr	r3, [r3, #4]
   51328:	cmp	r3, #2
   5132c:	bgt	51f0c <blkid_probe_get_size@plt+0x4a9f4>
   51330:	mov	ip, r2
   51334:	ldr	r3, [pc, #1944]	; 51ad4 <blkid_probe_get_size@plt+0x4a5bc>
   51338:	ldr	r1, [pc, #1944]	; 51ad8 <blkid_probe_get_size@plt+0x4a5c0>
   5133c:	add	r3, pc, r3
   51340:	add	r3, r3, #812	; 0x32c
   51344:	str	r2, [sp, #8]
   51348:	ldr	r2, [pc, #1932]	; 51adc <blkid_probe_get_size@plt+0x4a5c4>
   5134c:	mov	r0, #0
   51350:	add	r1, pc, r1
   51354:	stm	sp, {r3, ip}
   51358:	str	r1, [sp, #20]
   5135c:	str	r0, [sp, #16]
   51360:	str	r0, [sp, #12]
   51364:	str	r6, [sp, #24]
   51368:	mov	r3, #77	; 0x4d
   5136c:	add	r2, pc, r2
   51370:	mov	r1, #1073741846	; 0x40000016
   51374:	mov	r0, #3
   51378:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5137c:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   51380:	mov	r3, r7
   51384:	mov	ip, r7
   51388:	b	51064 <blkid_probe_get_size@plt+0x49b4c>
   5138c:	sub	r1, r4, #24
   51390:	mov	r0, r8
   51394:	bl	509a0 <blkid_probe_get_size@plt+0x49488>
   51398:	sub	r1, r4, #20
   5139c:	bl	509a0 <blkid_probe_get_size@plt+0x49488>
   513a0:	sub	r1, r4, #8
   513a4:	bl	509a0 <blkid_probe_get_size@plt+0x49488>
   513a8:	sub	r1, r4, #16
   513ac:	bl	509a0 <blkid_probe_get_size@plt+0x49488>
   513b0:	sub	r1, r4, #12
   513b4:	bl	509a0 <blkid_probe_get_size@plt+0x49488>
   513b8:	cmp	r0, #0
   513bc:	beq	5184c <blkid_probe_get_size@plt+0x4a334>
   513c0:	mov	r2, #0
   513c4:	cmp	r7, #0
   513c8:	str	r2, [r4, #-32]	; 0xffffffe0
   513cc:	beq	517d8 <blkid_probe_get_size@plt+0x4a2c0>
   513d0:	ldr	r3, [pc, #1800]	; 51ae0 <blkid_probe_get_size@plt+0x4a5c8>
   513d4:	add	r3, pc, r3
   513d8:	ldr	r3, [r3, #4]
   513dc:	cmp	r3, #6
   513e0:	bgt	51ee8 <blkid_probe_get_size@plt+0x4a9d0>
   513e4:	mov	lr, r2
   513e8:	ldr	r3, [pc, #1780]	; 51ae4 <blkid_probe_get_size@plt+0x4a5cc>
   513ec:	ldr	ip, [r4, #-12]
   513f0:	add	r3, pc, r3
   513f4:	ldr	r0, [r4, #-16]
   513f8:	ldr	r1, [r4, #-8]
   513fc:	add	r3, r3, #824	; 0x338
   51400:	str	r6, [sp, #24]
   51404:	str	r2, [sp, #8]
   51408:	ldr	r2, [r4, #-20]	; 0xffffffec
   5140c:	str	lr, [sp, #4]
   51410:	ldr	lr, [r4, #-24]	; 0xffffffe8
   51414:	str	r3, [sp]
   51418:	ldr	r3, [pc, #1736]	; 51ae8 <blkid_probe_get_size@plt+0x4a5d0>
   5141c:	str	r2, [sp, #32]
   51420:	ldr	r2, [pc, #1732]	; 51aec <blkid_probe_get_size@plt+0x4a5d4>
   51424:	mov	r8, #0
   51428:	add	r3, pc, r3
   5142c:	str	ip, [sp, #44]	; 0x2c
   51430:	str	r0, [sp, #40]	; 0x28
   51434:	str	r1, [sp, #36]	; 0x24
   51438:	str	lr, [sp, #28]
   5143c:	str	r3, [sp, #20]
   51440:	mov	r1, r8
   51444:	mov	r3, #130	; 0x82
   51448:	add	r2, pc, r2
   5144c:	str	r8, [sp, #16]
   51450:	str	r8, [sp, #12]
   51454:	mov	r0, #7
   51458:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5145c:	add	r1, r6, #192	; 0xc0
   51460:	orr	r1, r1, #1073741824	; 0x40000000
   51464:	orr	r1, r1, #1589248	; 0x184000
   51468:	orr	r1, r1, #1280	; 0x500
   5146c:	mov	r2, r5
   51470:	mov	r0, r9
   51474:	bl	6e70 <ioctl@plt>
   51478:	cmp	r0, r8
   5147c:	bge	50e50 <blkid_probe_get_size@plt+0x49938>
   51480:	str	r8, [r4, #-32]	; 0xffffffe0
   51484:	bl	732c <__errno_location@plt>
   51488:	cmp	r7, r8
   5148c:	ldr	r5, [r0]
   51490:	beq	51d34 <blkid_probe_get_size@plt+0x4a81c>
   51494:	ldr	r3, [pc, #1620]	; 51af0 <blkid_probe_get_size@plt+0x4a5d8>
   51498:	add	r3, pc, r3
   5149c:	ldr	r3, [r3, #4]
   514a0:	cmp	r3, #2
   514a4:	bgt	5207c <blkid_probe_get_size@plt+0x4ab64>
   514a8:	mov	r1, r8
   514ac:	ldr	r2, [pc, #1600]	; 51af4 <blkid_probe_get_size@plt+0x4a5dc>
   514b0:	ldr	r3, [pc, #1600]	; 51af8 <blkid_probe_get_size@plt+0x4a5e0>
   514b4:	add	r2, pc, r2
   514b8:	str	r2, [sp, #20]
   514bc:	add	r3, pc, r3
   514c0:	ldr	r2, [pc, #1588]	; 51afc <blkid_probe_get_size@plt+0x4a5e4>
   514c4:	mov	r0, #0
   514c8:	add	r3, r3, #824	; 0x338
   514cc:	str	r1, [sp, #4]
   514d0:	str	r3, [sp]
   514d4:	str	r0, [sp, #16]
   514d8:	str	r0, [sp, #12]
   514dc:	str	r8, [sp, #8]
   514e0:	mov	r1, r5
   514e4:	mov	r3, #133	; 0x85
   514e8:	add	r2, pc, r2
   514ec:	mov	r0, #3
   514f0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   514f4:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   514f8:	ldr	r1, [pc, #1440]	; 51aa0 <blkid_probe_get_size@plt+0x4a588>
   514fc:	ldr	r0, [r4, #-44]	; 0xffffffd4
   51500:	str	r3, [sp, #64]	; 0x40
   51504:	bl	6ec4 <open64@plt>
   51508:	ldr	r3, [sp, #64]	; 0x40
   5150c:	subs	r9, r0, #0
   51510:	bge	50ec4 <blkid_probe_get_size@plt+0x499ac>
   51514:	str	r3, [r4, #-28]	; 0xffffffe4
   51518:	str	r3, [sp, #52]	; 0x34
   5151c:	bl	732c <__errno_location@plt>
   51520:	cmp	r7, #0
   51524:	ldr	r5, [r0]
   51528:	beq	52100 <blkid_probe_get_size@plt+0x4abe8>
   5152c:	ldr	r2, [pc, #1484]	; 51b00 <blkid_probe_get_size@plt+0x4a5e8>
   51530:	ldr	r3, [sp, #52]	; 0x34
   51534:	add	r2, pc, r2
   51538:	ldr	r2, [r2, #4]
   5153c:	cmp	r2, #2
   51540:	bgt	521d8 <blkid_probe_get_size@plt+0x4acc0>
   51544:	mov	r1, r3
   51548:	ldr	r2, [pc, #1460]	; 51b04 <blkid_probe_get_size@plt+0x4a5ec>
   5154c:	ldr	r0, [r4, #-44]	; 0xffffffd4
   51550:	add	r2, pc, r2
   51554:	add	r2, r2, #264	; 0x108
   51558:	str	r0, [sp, #24]
   5155c:	ldr	r0, [pc, #1444]	; 51b08 <blkid_probe_get_size@plt+0x4a5f0>
   51560:	str	r2, [sp]
   51564:	ldr	r2, [pc, #1440]	; 51b0c <blkid_probe_get_size@plt+0x4a5f4>
   51568:	mov	ip, #0
   5156c:	add	r0, pc, r0
   51570:	str	r3, [sp, #8]
   51574:	str	r1, [sp, #4]
   51578:	str	r0, [sp, #20]
   5157c:	mov	r1, r5
   51580:	str	ip, [sp, #16]
   51584:	str	ip, [sp, #12]
   51588:	mov	r3, #223	; 0xdf
   5158c:	add	r2, pc, r2
   51590:	mov	r0, #3
   51594:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51598:	mov	fp, r0
   5159c:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   515a0:	sub	r2, r4, #32
   515a4:	ldr	r1, [pc, #1380]	; 51b10 <blkid_probe_get_size@plt+0x4a5f8>
   515a8:	mov	r0, r9
   515ac:	bl	6e70 <ioctl@plt>
   515b0:	cmp	r0, #0
   515b4:	blt	51f5c <blkid_probe_get_size@plt+0x4aa44>
   515b8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   515bc:	and	r3, r3, #8
   515c0:	cmp	r3, #0
   515c4:	movne	r2, #1
   515c8:	moveq	r2, #0
   515cc:	str	r2, [sp, #52]	; 0x34
   515d0:	bne	50ed0 <blkid_probe_get_size@plt+0x499b8>
   515d4:	cmp	r7, #0
   515d8:	str	r3, [r4, #-28]	; 0xffffffe4
   515dc:	beq	51cf8 <blkid_probe_get_size@plt+0x4a7e0>
   515e0:	ldr	r2, [pc, #1324]	; 51b14 <blkid_probe_get_size@plt+0x4a5fc>
   515e4:	add	r2, pc, r2
   515e8:	ldr	r2, [r2, #4]
   515ec:	cmp	r2, #3
   515f0:	bgt	51fe8 <blkid_probe_get_size@plt+0x4aad0>
   515f4:	mov	ip, r3
   515f8:	ldr	r2, [pc, #1304]	; 51b18 <blkid_probe_get_size@plt+0x4a600>
   515fc:	ldr	r0, [pc, #1304]	; 51b1c <blkid_probe_get_size@plt+0x4a604>
   51600:	add	r2, pc, r2
   51604:	add	r2, r2, #264	; 0x108
   51608:	mov	r1, #0
   5160c:	stm	sp, {r2, ip}
   51610:	ldr	r2, [pc, #1288]	; 51b20 <blkid_probe_get_size@plt+0x4a608>
   51614:	add	r0, pc, r0
   51618:	str	r3, [sp, #8]
   5161c:	str	r0, [sp, #20]
   51620:	str	r1, [sp, #16]
   51624:	str	r1, [sp, #12]
   51628:	mov	r3, #236	; 0xec
   5162c:	add	r2, pc, r2
   51630:	mov	r0, #4
   51634:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51638:	b	50ed0 <blkid_probe_get_size@plt+0x499b8>
   5163c:	sub	r1, r4, #32
   51640:	mov	r0, r6
   51644:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   51648:	subs	r8, r0, #0
   5164c:	blt	51760 <blkid_probe_get_size@plt+0x4a248>
   51650:	ldr	r2, [r4, #-32]	; 0xffffffe0
   51654:	cmp	r2, #255	; 0xff
   51658:	bls	51c50 <blkid_probe_get_size@plt+0x4a738>
   5165c:	ldr	r3, [pc, #1216]	; 51b24 <blkid_probe_get_size@plt+0x4a60c>
   51660:	str	r5, [r4, #-28]	; 0xffffffe4
   51664:	add	r3, pc, r3
   51668:	ldr	r3, [r3, #4]
   5166c:	cmp	r3, #2
   51670:	bgt	5200c <blkid_probe_get_size@plt+0x4aaf4>
   51674:	mov	r0, r5
   51678:	ldr	r3, [pc, #1192]	; 51b28 <blkid_probe_get_size@plt+0x4a610>
   5167c:	ldr	r1, [pc, #1192]	; 51b2c <blkid_probe_get_size@plt+0x4a614>
   51680:	add	r3, pc, r3
   51684:	add	r1, pc, r1
   51688:	add	r3, r3, #868	; 0x364
   5168c:	str	r2, [sp, #24]
   51690:	str	r3, [sp]
   51694:	mov	r2, #0
   51698:	mov	r3, r1
   5169c:	str	r2, [sp, #12]
   516a0:	strd	r2, [sp, #16]
   516a4:	ldr	r2, [pc, #1156]	; 51b30 <blkid_probe_get_size@plt+0x4a618>
   516a8:	stmib	sp, {r0, r5}
   516ac:	mov	r3, #155	; 0x9b
   516b0:	add	r2, pc, r2
   516b4:	mov	r1, #1073741858	; 0x40000022
   516b8:	mov	r0, #3
   516bc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   516c0:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   516c4:	mov	r1, r7
   516c8:	b	50aa4 <blkid_probe_get_size@plt+0x4958c>
   516cc:	cmp	r7, #0
   516d0:	beq	51f30 <blkid_probe_get_size@plt+0x4aa18>
   516d4:	ldr	r1, [pc, #1112]	; 51b34 <blkid_probe_get_size@plt+0x4a61c>
   516d8:	sub	r3, r4, #40	; 0x28
   516dc:	mov	r2, r5
   516e0:	add	r1, pc, r1
   516e4:	mov	r0, r7
   516e8:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   516ec:	subs	r6, r0, #0
   516f0:	bge	51934 <blkid_probe_get_size@plt+0x4a41c>
   516f4:	ldr	r3, [pc, #1084]	; 51b38 <blkid_probe_get_size@plt+0x4a620>
   516f8:	str	r5, [r4, #-28]	; 0xffffffe4
   516fc:	add	r3, pc, r3
   51700:	ldr	r3, [r3, #4]
   51704:	cmp	r3, #2
   51708:	movle	r1, r5
   5170c:	bgt	520a8 <blkid_probe_get_size@plt+0x4ab90>
   51710:	ldr	r2, [pc, #1060]	; 51b3c <blkid_probe_get_size@plt+0x4a624>
   51714:	ldr	r3, [pc, #1060]	; 51b40 <blkid_probe_get_size@plt+0x4a628>
   51718:	add	r2, pc, r2
   5171c:	add	r3, pc, r3
   51720:	str	r2, [sp, #20]
   51724:	ldr	r2, [pc, #1048]	; 51b44 <blkid_probe_get_size@plt+0x4a62c>
   51728:	mov	r0, #0
   5172c:	add	r3, r3, #920	; 0x398
   51730:	str	r1, [sp, #8]
   51734:	str	r3, [sp]
   51738:	str	r0, [sp, #16]
   5173c:	str	r0, [sp, #12]
   51740:	str	r5, [sp, #4]
   51744:	mov	r1, r6
   51748:	mov	r3, #36	; 0x24
   5174c:	add	r2, pc, r2
   51750:	mov	r0, #3
   51754:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51758:	mov	fp, #0
   5175c:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   51760:	ldr	r3, [pc, #992]	; 51b48 <blkid_probe_get_size@plt+0x4a630>
   51764:	str	r5, [r4, #-28]	; 0xffffffe4
   51768:	add	r3, pc, r3
   5176c:	ldr	r3, [r3, #4]
   51770:	cmp	r3, #2
   51774:	bgt	52034 <blkid_probe_get_size@plt+0x4ab1c>
   51778:	mov	r1, r5
   5177c:	ldr	r2, [pc, #968]	; 51b4c <blkid_probe_get_size@plt+0x4a634>
   51780:	ldr	r3, [pc, #968]	; 51b50 <blkid_probe_get_size@plt+0x4a638>
   51784:	add	r2, pc, r2
   51788:	str	r2, [sp, #20]
   5178c:	add	r3, pc, r3
   51790:	ldr	r2, [pc, #956]	; 51b54 <blkid_probe_get_size@plt+0x4a63c>
   51794:	mov	r0, #0
   51798:	add	r3, r3, #868	; 0x364
   5179c:	str	r1, [sp, #4]
   517a0:	str	r3, [sp]
   517a4:	str	r0, [sp, #16]
   517a8:	str	r0, [sp, #12]
   517ac:	str	r6, [sp, #24]
   517b0:	str	r5, [sp, #8]
   517b4:	mov	r1, r8
   517b8:	mov	r3, #153	; 0x99
   517bc:	add	r2, pc, r2
   517c0:	mov	r0, #3
   517c4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   517c8:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   517cc:	mov	r2, r7
   517d0:	mov	ip, r7
   517d4:	b	51334 <blkid_probe_get_size@plt+0x49e1c>
   517d8:	mov	r2, r7
   517dc:	mov	lr, r7
   517e0:	b	513e8 <blkid_probe_get_size@plt+0x49ed0>
   517e4:	mov	r8, r7
   517e8:	mov	r0, r7
   517ec:	b	512a4 <blkid_probe_get_size@plt+0x49d8c>
   517f0:	sub	r1, r4, #32
   517f4:	mov	r0, r7
   517f8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   517fc:	ldr	r2, [r4, #-32]	; 0xffffffe0
   51800:	ldr	ip, [pc, #848]	; 51b58 <blkid_probe_get_size@plt+0x4a640>
   51804:	cmp	r2, #0
   51808:	ldr	r8, [r4, #-28]	; 0xffffffe4
   5180c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   51810:	add	ip, pc, ip
   51814:	bne	50de4 <blkid_probe_get_size@plt+0x498cc>
   51818:	b	50de0 <blkid_probe_get_size@plt+0x498c8>
   5181c:	mov	r2, r7
   51820:	mov	r1, r7
   51824:	b	50f3c <blkid_probe_get_size@plt+0x49a24>
   51828:	sub	r1, r4, #28
   5182c:	mov	r0, r7
   51830:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51834:	ldr	r3, [r4, #-28]	; 0xffffffe4
   51838:	cmp	r3, #0
   5183c:	moveq	ip, r3
   51840:	ldrne	ip, [pc, #788]	; 51b5c <blkid_probe_get_size@plt+0x4a644>
   51844:	addne	ip, pc, ip
   51848:	b	51064 <blkid_probe_get_size@plt+0x49b4c>
   5184c:	cmp	r7, #0
   51850:	str	r0, [r4, #-32]	; 0xffffffe0
   51854:	beq	51d28 <blkid_probe_get_size@plt+0x4a810>
   51858:	ldr	r3, [pc, #768]	; 51b60 <blkid_probe_get_size@plt+0x4a648>
   5185c:	add	r3, pc, r3
   51860:	ldr	r3, [r3, #4]
   51864:	cmp	r3, #2
   51868:	bgt	52058 <blkid_probe_get_size@plt+0x4ab40>
   5186c:	mov	ip, r0
   51870:	ldr	r3, [pc, #748]	; 51b64 <blkid_probe_get_size@plt+0x4a64c>
   51874:	ldr	r2, [pc, #748]	; 51b68 <blkid_probe_get_size@plt+0x4a650>
   51878:	add	r3, pc, r3
   5187c:	add	r2, pc, r2
   51880:	add	r3, r3, #824	; 0x338
   51884:	str	r2, [sp, #20]
   51888:	ldr	r2, [pc, #732]	; 51b6c <blkid_probe_get_size@plt+0x4a654>
   5188c:	mov	r1, #0
   51890:	str	r0, [sp, #8]
   51894:	stm	sp, {r3, ip}
   51898:	str	r8, [sp, #24]
   5189c:	str	r1, [sp, #16]
   518a0:	str	r1, [sp, #12]
   518a4:	mov	r3, #127	; 0x7f
   518a8:	add	r2, pc, r2
   518ac:	mov	r0, #3
   518b0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   518b4:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   518b8:	sub	r1, r4, #32
   518bc:	mov	r0, r7
   518c0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   518c4:	ldr	r5, [r4, #-32]	; 0xffffffe0
   518c8:	cmp	r5, #0
   518cc:	beq	510cc <blkid_probe_get_size@plt+0x49bb4>
   518d0:	ldr	r2, [pc, #664]	; 51b70 <blkid_probe_get_size@plt+0x4a658>
   518d4:	add	r2, pc, r2
   518d8:	b	510d0 <blkid_probe_get_size@plt+0x49bb8>
   518dc:	ldr	r2, [pc, #656]	; 51b74 <blkid_probe_get_size@plt+0x4a65c>
   518e0:	ldr	r1, [pc, #656]	; 51b78 <blkid_probe_get_size@plt+0x4a660>
   518e4:	add	r2, pc, r2
   518e8:	add	r2, r2, #840	; 0x348
   518ec:	str	r2, [sp]
   518f0:	ldr	r2, [pc, #644]	; 51b7c <blkid_probe_get_size@plt+0x4a664>
   518f4:	mov	r3, #143	; 0x8f
   518f8:	add	r2, pc, r2
   518fc:	add	r1, pc, r1
   51900:	mov	r0, #1
   51904:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   51908:	ldr	r2, [pc, #624]	; 51b80 <blkid_probe_get_size@plt+0x4a668>
   5190c:	ldr	r1, [pc, #624]	; 51b84 <blkid_probe_get_size@plt+0x4a66c>
   51910:	add	r2, pc, r2
   51914:	add	r2, r2, #840	; 0x348
   51918:	str	r2, [sp]
   5191c:	ldr	r2, [pc, #612]	; 51b88 <blkid_probe_get_size@plt+0x4a670>
   51920:	mov	r3, #144	; 0x90
   51924:	add	r2, pc, r2
   51928:	add	r1, pc, r1
   5192c:	mov	r0, #1
   51930:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   51934:	ldr	r1, [pc, #592]	; 51b8c <blkid_probe_get_size@plt+0x4a674>
   51938:	sub	r2, r4, #36	; 0x24
   5193c:	add	r1, pc, r1
   51940:	ldr	r0, [r4, #-40]	; 0xffffffd8
   51944:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   51948:	subs	r6, r0, #0
   5194c:	bge	51d88 <blkid_probe_get_size@plt+0x4a870>
   51950:	ldr	r0, [r4, #-40]	; 0xffffffd8
   51954:	str	r5, [r4, #-28]	; 0xffffffe4
   51958:	cmp	r0, #0
   5195c:	beq	51974 <blkid_probe_get_size@plt+0x4a45c>
   51960:	ldr	r3, [pc, #552]	; 51b90 <blkid_probe_get_size@plt+0x4a678>
   51964:	add	r3, pc, r3
   51968:	ldr	r3, [r3, #4]
   5196c:	cmp	r3, #2
   51970:	bgt	5210c <blkid_probe_get_size@plt+0x4abf4>
   51974:	mov	r1, r5
   51978:	ldr	r2, [pc, #532]	; 51b94 <blkid_probe_get_size@plt+0x4a67c>
   5197c:	ldr	r3, [pc, #532]	; 51b98 <blkid_probe_get_size@plt+0x4a680>
   51980:	add	r2, pc, r2
   51984:	str	r2, [sp, #20]
   51988:	add	r3, pc, r3
   5198c:	ldr	r2, [pc, #520]	; 51b9c <blkid_probe_get_size@plt+0x4a684>
   51990:	mov	r0, #0
   51994:	add	r3, r3, #920	; 0x398
   51998:	str	r1, [sp, #8]
   5199c:	str	r3, [sp]
   519a0:	str	r0, [sp, #16]
   519a4:	str	r0, [sp, #12]
   519a8:	str	r5, [sp, #4]
   519ac:	mov	r1, r6
   519b0:	mov	r3, #40	; 0x28
   519b4:	add	r2, pc, r2
   519b8:	mov	r0, #3
   519bc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   519c0:	b	51758 <blkid_probe_get_size@plt+0x4a240>
   519c4:	sub	r1, r4, #28
   519c8:	mov	r0, r7
   519cc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   519d0:	ldr	r8, [r4, #-28]	; 0xffffffe4
   519d4:	cmp	r8, #0
   519d8:	beq	512a0 <blkid_probe_get_size@plt+0x49d88>
   519dc:	ldr	r0, [pc, #444]	; 51ba0 <blkid_probe_get_size@plt+0x4a688>
   519e0:	add	r0, pc, r0
   519e4:	b	512a4 <blkid_probe_get_size@plt+0x49d8c>
   519e8:	andeq	r7, r4, r0, lsr r1
   519ec:	andeq	r0, r0, ip, lsr r4
   519f0:			; <UNDEFINED> instruction: 0x000476b0
   519f4:	andeq	r9, r1, r0, lsl ip
   519f8:	muleq	r2, r0, lr
   519fc:	andeq	r2, r2, r4, ror #16
   51a00:	strdeq	r1, [r2], -ip
   51a04:	andeq	r2, r2, r0, lsl #16
   51a08:	andeq	r1, r2, r4, lsl sp
   51a0c:	strdeq	r1, [r2], -r8
   51a10:	ldrdeq	r1, [r2], -ip
   51a14:	andeq	r1, r2, r0, asr #25
   51a18:	andeq	r1, r2, r4, lsr #25
   51a1c:	andeq	r1, r2, r8, lsl #25
   51a20:	andeq	r1, r2, ip, ror #24
   51a24:	andeq	r1, r2, r0, asr ip
   51a28:	andeq	r1, r2, r4, lsr ip
   51a2c:	andeq	r1, r2, r8, lsl ip
   51a30:	strdeq	r1, [r2], -r4
   51a34:	andeq	r1, r0, ip, ror #16
   51a38:	andeq	sl, r3, r8, lsl r4
   51a3c:	andeq	r7, r4, ip, ror #6
   51a40:	andeq	r1, r2, r8, asr fp
   51a44:	ldrdeq	r2, [r2], -r4
   51a48:	andeq	r2, r2, r8, lsr #10
   51a4c:	andmi	r4, r8, r4, lsl #10
   51a50:	muleq	r2, r4, r5
   51a54:	andeq	r7, r4, r8, lsl r2
   51a58:	andeq	r1, r2, r0, lsl #20
   51a5c:	andeq	r2, r2, r8, asr r5
   51a60:	andeq	r2, r2, ip, asr #7
   51a64:	muleq	r2, ip, r5
   51a68:	andeq	r2, r2, r8, lsl #11
   51a6c:	andeq	r7, r4, r0, ror #2
   51a70:	andeq	r2, r2, r8, asr r5
   51a74:	andeq	r1, r2, r4, asr #18
   51a78:	andeq	r2, r2, r8, lsl r3
   51a7c:	strdeq	r7, [r4], -r0
   51a80:	ldrdeq	r1, [r2], -r8
   51a84:	strdeq	r2, [r2], -r8
   51a88:	andeq	r2, r2, r8, lsr #5
   51a8c:	andeq	r7, r4, r4, lsl #1
   51a90:	andeq	r2, r2, r4, ror #5
   51a94:	andeq	r1, r2, r4, asr r8
   51a98:	andeq	r2, r2, r8, lsr #4
   51a9c:	strdeq	r0, [r0], -lr
   51aa0:	andeq	r0, r8, r2, lsl #18
   51aa4:	andeq	r6, r4, ip, lsr #31
   51aa8:	andeq	r1, r2, ip, lsl #15
   51aac:	andeq	r4, r1, r8, asr #8
   51ab0:	andeq	r2, r2, r8, asr r1
   51ab4:	andeq	r1, r2, ip, lsr r7
   51ab8:	andeq	r2, r2, r8, asr #9
   51abc:	andeq	r2, r2, ip, lsl r1
   51ac0:	andeq	r6, r4, ip, lsr #29
   51ac4:	andeq	r2, r2, r4, ror r1
   51ac8:	muleq	r2, r0, r6
   51acc:	andeq	r2, r2, r8, rrx
   51ad0:	andeq	r6, r4, ip, lsl lr
   51ad4:	andeq	r1, r2, r8, lsl #12
   51ad8:	andeq	r2, r2, r8, asr r0
   51adc:	ldrdeq	r1, [r2], -r8
   51ae0:	andeq	r6, r4, r8, ror #26
   51ae4:	andeq	r1, r2, r4, asr r5
   51ae8:	strheq	r2, [r2], -ip
   51aec:	strdeq	r1, [r2], -ip
   51af0:	andeq	r6, r4, r4, lsr #25
   51af4:	andeq	r2, r2, ip, asr r0
   51af8:	andeq	r1, r2, r8, lsl #9
   51afc:	andeq	r1, r2, ip, asr lr
   51b00:	andeq	r6, r4, r8, lsl #24
   51b04:	strdeq	r1, [r2], -r4
   51b08:	muleq	r1, r8, r0
   51b0c:			; <UNDEFINED> instruction: 0x00021db8
   51b10:	andhi	r4, r4, r0, lsr #10
   51b14:	andeq	r6, r4, r8, asr fp
   51b18:	andeq	r1, r2, r4, asr #6
   51b1c:	andeq	r1, r2, r4, asr lr
   51b20:	andeq	r1, r2, r8, lsl sp
   51b24:	ldrdeq	r6, [r4], -r8
   51b28:	andeq	r1, r2, r4, asr #5
   51b2c:	andeq	r1, r2, r0, lsr #30
   51b30:	muleq	r2, r4, ip
   51b34:	andeq	r1, r2, r8, ror #28
   51b38:	andeq	r6, r4, r0, asr #20
   51b3c:	andeq	r1, r2, r8, lsr lr
   51b40:	andeq	r1, r2, r8, lsr #4
   51b44:	strdeq	r1, [r2], -r8
   51b48:	ldrdeq	r6, [r4], -r4
   51b4c:	andeq	r1, r2, ip, ror #27
   51b50:			; <UNDEFINED> instruction: 0x000211b8
   51b54:	andeq	r1, r2, r8, lsl #23
   51b58:	andeq	r3, r1, r8, lsr #14
   51b5c:	strdeq	r3, [r1], -r4
   51b60:	andeq	r6, r4, r0, ror #17
   51b64:	andeq	r1, r2, ip, asr #1
   51b68:	andeq	r1, r2, r0, asr #24
   51b6c:	muleq	r2, ip, sl
   51b70:	andeq	r3, r1, r4, ror #12
   51b74:	andeq	r1, r2, r0, rrx
   51b78:	andeq	r3, r1, r8, lsl #29
   51b7c:	andeq	r1, r2, ip, asr #20
   51b80:	andeq	r1, r2, r4, lsr r0
   51b84:	andeq	r9, r1, r8, lsl fp
   51b88:	andeq	r1, r2, r0, lsr #20
   51b8c:	strdeq	r1, [r2], -ip
   51b90:	ldrdeq	r6, [r4], -r8
   51b94:	andeq	r1, r2, r8, asr #25
   51b98:			; <UNDEFINED> instruction: 0x00020fbc
   51b9c:	muleq	r2, r0, r9
   51ba0:	andeq	r3, r1, r8, asr r5
   51ba4:			; <UNDEFINED> instruction: 0x000221b8
   51ba8:	andeq	r1, r2, r4, ror r9
   51bac:	muleq	r4, r4, r4
   51bb0:	andeq	r1, r2, r8, asr #18
   51bb4:	andeq	r1, r2, ip, asr r6
   51bb8:	andeq	r3, r1, r8, lsl r2
   51bbc:	ldrdeq	r3, [r1], -ip
   51bc0:			; <UNDEFINED> instruction: 0x000131b8
   51bc4:			; <UNDEFINED> instruction: 0x000218bc
   51bc8:	andeq	r6, r4, ip, asr #6
   51bcc:	andeq	r0, r2, r8, lsr fp
   51bd0:	andeq	r1, r2, r8, asr r8
   51bd4:	andeq	r1, r2, r0, lsl r5
   51bd8:	andeq	r1, r2, r4, ror #15
   51bdc:			; <UNDEFINED> instruction: 0x000462bc
   51be0:	andeq	r1, r2, r0, lsl r8
   51be4:	andeq	r0, r2, r4, lsr #21
   51be8:	andeq	r1, r2, r8, ror r4
   51bec:	andeq	r3, r1, r4, lsr r0
   51bf0:	andeq	r3, r1, r0, lsl r0
   51bf4:	andeq	r0, r2, ip, lsl #20
   51bf8:	andeq	r3, r1, r4, lsr r8
   51bfc:	strdeq	r1, [r2], -r8
   51c00:	andeq	r6, r4, r4, asr #3
   51c04:	andeq	r0, r2, r8, lsr #19
   51c08:	andeq	r1, r2, r8, lsr #9
   51c0c:	andeq	r1, r2, r8, ror r3
   51c10:	andeq	r2, r1, r4, lsr pc
   51c14:	andeq	r2, r1, r0, lsl pc
   51c18:	andeq	r2, r1, r8, ror #29
   51c1c:	andeq	r2, r1, r4, asr #29
   51c20:	andeq	r2, r1, r0, lsr #29
   51c24:	andeq	r2, r1, r4, ror lr
   51c28:	andeq	r0, r2, r0, ror r8
   51c2c:	andeq	r1, r2, ip, ror #9
   51c30:	andeq	r1, r2, ip, asr r2
   51c34:	andeq	r2, r1, r4, lsl lr
   51c38:	strdeq	r2, [r1], -r0
   51c3c:	andeq	r2, r1, ip, asr #27
   51c40:	andeq	r2, r1, ip, lsr #27
   51c44:	andeq	r2, r1, ip, lsl #27
   51c48:	andeq	r2, r1, r8, ror #26
   51c4c:	andeq	r2, r1, r4, asr #26
   51c50:	ldr	r1, [pc, #-180]	; 51ba4 <blkid_probe_get_size@plt+0x4a68c>
   51c54:	add	r6, sp, #4160	; 0x1040
   51c58:	add	r1, pc, r1
   51c5c:	mov	r3, #12
   51c60:	add	r6, r6, #52	; 0x34
   51c64:	str	r2, [sp, #4]
   51c68:	str	r1, [sp]
   51c6c:	mov	r0, r6
   51c70:	mov	r1, r3
   51c74:	mov	r2, #1
   51c78:	bl	7260 <__snprintf_chk@plt>
   51c7c:	cmp	r0, #11
   51c80:	bhi	520cc <blkid_probe_get_size@plt+0x4abb4>
   51c84:	ldr	r1, [pc, #-228]	; 51ba8 <blkid_probe_get_size@plt+0x4a690>
   51c88:	mov	r2, r6
   51c8c:	add	r1, pc, r1
   51c90:	ldr	r0, [r4, #-36]	; 0xffffffdc
   51c94:	bl	36710 <blkid_probe_get_size@plt+0x2f1f8>
   51c98:	subs	r6, r0, #0
   51c9c:	bge	50e50 <blkid_probe_get_size@plt+0x49938>
   51ca0:	ldr	r3, [pc, #-252]	; 51bac <blkid_probe_get_size@plt+0x4a694>
   51ca4:	str	r5, [r4, #-28]	; 0xffffffe4
   51ca8:	add	r3, pc, r3
   51cac:	ldr	r3, [r3, #4]
   51cb0:	cmp	r3, #2
   51cb4:	bgt	52150 <blkid_probe_get_size@plt+0x4ac38>
   51cb8:	mov	r1, #0
   51cbc:	ldr	r3, [pc, #-276]	; 51bb0 <blkid_probe_get_size@plt+0x4a698>
   51cc0:	mov	r2, #0
   51cc4:	add	r3, pc, r3
   51cc8:	stmib	sp, {r1, r5}
   51ccc:	strd	r2, [sp, #16]
   51cd0:	ldr	r1, [sp, #68]	; 0x44
   51cd4:	str	r2, [sp, #12]
   51cd8:	ldr	r2, [pc, #-300]	; 51bb4 <blkid_probe_get_size@plt+0x4a69c>
   51cdc:	str	r1, [sp]
   51ce0:	mov	r3, #161	; 0xa1
   51ce4:	mov	r1, r6
   51ce8:	add	r2, pc, r2
   51cec:	mov	r0, #3
   51cf0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51cf4:	b	50e50 <blkid_probe_get_size@plt+0x49938>
   51cf8:	mov	r3, r7
   51cfc:	mov	ip, r7
   51d00:	b	515f8 <blkid_probe_get_size@plt+0x4a0e0>
   51d04:	mov	r0, r7
   51d08:	sub	r1, r4, #28
   51d0c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51d10:	ldr	r7, [r4, #-28]	; 0xffffffe4
   51d14:	cmp	r7, #0
   51d18:	beq	516c4 <blkid_probe_get_size@plt+0x4a1ac>
   51d1c:	ldr	r1, [pc, #-364]	; 51bb8 <blkid_probe_get_size@plt+0x4a6a0>
   51d20:	add	r1, pc, r1
   51d24:	b	50aa4 <blkid_probe_get_size@plt+0x4958c>
   51d28:	mov	r0, r7
   51d2c:	mov	ip, r7
   51d30:	b	51870 <blkid_probe_get_size@plt+0x4a358>
   51d34:	mov	r8, r7
   51d38:	mov	r1, r7
   51d3c:	b	514ac <blkid_probe_get_size@plt+0x49f94>
   51d40:	sub	r1, r4, #28
   51d44:	mov	r0, r7
   51d48:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51d4c:	ldr	r5, [r4, #-28]	; 0xffffffe4
   51d50:	cmp	r5, #0
   51d54:	beq	50fec <blkid_probe_get_size@plt+0x49ad4>
   51d58:	ldr	r1, [pc, #-420]	; 51bbc <blkid_probe_get_size@plt+0x4a6a4>
   51d5c:	add	r1, pc, r1
   51d60:	b	50ff0 <blkid_probe_get_size@plt+0x49ad8>
   51d64:	sub	r1, r4, #32
   51d68:	mov	r0, r7
   51d6c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51d70:	ldr	r2, [r4, #-32]	; 0xffffffe0
   51d74:	cmp	r2, r6
   51d78:	moveq	r1, r2
   51d7c:	ldrne	r1, [pc, #-452]	; 51bc0 <blkid_probe_get_size@plt+0x4a6a8>
   51d80:	addne	r1, pc, r1
   51d84:	b	50f3c <blkid_probe_get_size@plt+0x49a24>
   51d88:	ldr	r3, [sp, #56]	; 0x38
   51d8c:	sub	r7, r4, #32
   51d90:	add	sl, sp, #4160	; 0x1040
   51d94:	mov	r0, r7
   51d98:	add	sl, sl, #52	; 0x34
   51d9c:	ldr	r2, [r4, #-36]	; 0xffffffdc
   51da0:	mov	r1, #4096	; 0x1000
   51da4:	sub	r6, r4, #4
   51da8:	str	sl, [r4, #-32]	; 0xffffffe0
   51dac:	add	fp, r6, r3, lsl #2
   51db0:	bl	3cc1c <blkid_probe_get_size@plt+0x35704>
   51db4:	ldr	r8, [pc, #-504]	; 51bc4 <blkid_probe_get_size@plt+0x4a6ac>
   51db8:	add	r8, pc, r8
   51dbc:	ldr	r3, [r6], #4
   51dc0:	mov	r1, r0
   51dc4:	mov	r2, r8
   51dc8:	mov	r0, r7
   51dcc:	bl	3cb80 <blkid_probe_get_size@plt+0x35668>
   51dd0:	cmp	fp, r6
   51dd4:	bne	51dbc <blkid_probe_get_size@plt+0x4a8a4>
   51dd8:	ldr	r0, [r4, #-40]	; 0xffffffd8
   51ddc:	mov	r3, #0
   51de0:	cmp	r0, r3
   51de4:	str	r3, [r4, #-28]	; 0xffffffe4
   51de8:	beq	520a0 <blkid_probe_get_size@plt+0x4ab88>
   51dec:	ldr	r2, [pc, #-556]	; 51bc8 <blkid_probe_get_size@plt+0x4a6b0>
   51df0:	add	r2, pc, r2
   51df4:	ldr	r2, [r2, #4]
   51df8:	cmp	r2, #6
   51dfc:	bgt	52174 <blkid_probe_get_size@plt+0x4ac5c>
   51e00:	mov	r0, r3
   51e04:	ldr	r2, [pc, #-576]	; 51bcc <blkid_probe_get_size@plt+0x4a6b4>
   51e08:	ldr	r1, [pc, #-576]	; 51bd0 <blkid_probe_get_size@plt+0x4a6b8>
   51e0c:	add	r2, pc, r2
   51e10:	add	r2, r2, #920	; 0x398
   51e14:	str	r2, [sp]
   51e18:	ldr	r2, [pc, #-588]	; 51bd4 <blkid_probe_get_size@plt+0x4a6bc>
   51e1c:	mov	r6, #0
   51e20:	add	r1, pc, r1
   51e24:	stmib	sp, {r0, r3}
   51e28:	str	r1, [sp, #20]
   51e2c:	mov	r3, #52	; 0x34
   51e30:	mov	r1, r6
   51e34:	add	r2, pc, r2
   51e38:	str	sl, [sp, #24]
   51e3c:	str	r6, [sp, #16]
   51e40:	str	r6, [sp, #12]
   51e44:	mov	r0, #7
   51e48:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51e4c:	ldr	r1, [pc, #-636]	; 51bd8 <blkid_probe_get_size@plt+0x4a6c0>
   51e50:	mov	r2, sl
   51e54:	add	r1, pc, r1
   51e58:	ldr	r0, [r4, #-40]	; 0xffffffd8
   51e5c:	bl	36710 <blkid_probe_get_size@plt+0x2f1f8>
   51e60:	subs	r7, r0, #0
   51e64:	bge	51758 <blkid_probe_get_size@plt+0x4a240>
   51e68:	ldr	r0, [r4, #-40]	; 0xffffffd8
   51e6c:	str	r6, [r4, #-28]	; 0xffffffe4
   51e70:	cmp	r0, r6
   51e74:	moveq	r6, r0
   51e78:	beq	51e90 <blkid_probe_get_size@plt+0x4a978>
   51e7c:	ldr	r3, [pc, #-680]	; 51bdc <blkid_probe_get_size@plt+0x4a6c4>
   51e80:	add	r3, pc, r3
   51e84:	ldr	r3, [r3, #4]
   51e88:	cmp	r3, #2
   51e8c:	bgt	52194 <blkid_probe_get_size@plt+0x4ac7c>
   51e90:	ldr	r2, [pc, #-696]	; 51be0 <blkid_probe_get_size@plt+0x4a6c8>
   51e94:	ldr	r3, [pc, #-696]	; 51be4 <blkid_probe_get_size@plt+0x4a6cc>
   51e98:	add	r2, pc, r2
   51e9c:	str	r2, [sp, #20]
   51ea0:	add	r3, pc, r3
   51ea4:	ldr	r2, [pc, #-708]	; 51be8 <blkid_probe_get_size@plt+0x4a6d0>
   51ea8:	mov	r0, #0
   51eac:	add	r3, r3, #920	; 0x398
   51eb0:	str	r3, [sp]
   51eb4:	str	r0, [sp, #16]
   51eb8:	str	r0, [sp, #12]
   51ebc:	str	r5, [sp, #8]
   51ec0:	str	r6, [sp, #4]
   51ec4:	mov	r1, r7
   51ec8:	mov	r3, #55	; 0x37
   51ecc:	add	r2, pc, r2
   51ed0:	mov	r0, #3
   51ed4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51ed8:	b	51758 <blkid_probe_get_size@plt+0x4a240>
   51edc:	mov	fp, r5
   51ee0:	mvn	r9, #0
   51ee4:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   51ee8:	sub	r1, r4, #32
   51eec:	mov	r0, r7
   51ef0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51ef4:	ldr	r2, [r4, #-32]	; 0xffffffe0
   51ef8:	cmp	r2, #0
   51efc:	beq	513e4 <blkid_probe_get_size@plt+0x49ecc>
   51f00:	ldr	lr, [pc, #-796]	; 51bec <blkid_probe_get_size@plt+0x4a6d4>
   51f04:	add	lr, pc, lr
   51f08:	b	513e8 <blkid_probe_get_size@plt+0x49ed0>
   51f0c:	sub	r1, r4, #28
   51f10:	mov	r0, r7
   51f14:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51f18:	ldr	r2, [r4, #-28]	; 0xffffffe4
   51f1c:	cmp	r2, #0
   51f20:	beq	51330 <blkid_probe_get_size@plt+0x49e18>
   51f24:	ldr	ip, [pc, #-828]	; 51bf0 <blkid_probe_get_size@plt+0x4a6d8>
   51f28:	add	ip, pc, ip
   51f2c:	b	51334 <blkid_probe_get_size@plt+0x49e1c>
   51f30:	ldr	r2, [pc, #-836]	; 51bf4 <blkid_probe_get_size@plt+0x4a6dc>
   51f34:	ldr	r1, [pc, #-836]	; 51bf8 <blkid_probe_get_size@plt+0x4a6e0>
   51f38:	add	r2, pc, r2
   51f3c:	add	r2, r2, #896	; 0x380
   51f40:	str	r2, [sp]
   51f44:	ldr	r2, [pc, #-848]	; 51bfc <blkid_probe_get_size@plt+0x4a6e4>
   51f48:	mov	r3, #31
   51f4c:	add	r2, pc, r2
   51f50:	add	r1, pc, r1
   51f54:	mov	r0, #1
   51f58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   51f5c:	mov	r5, #0
   51f60:	str	r5, [r4, #-28]	; 0xffffffe4
   51f64:	bl	732c <__errno_location@plt>
   51f68:	cmp	r7, r5
   51f6c:	ldr	r6, [r0]
   51f70:	beq	520f8 <blkid_probe_get_size@plt+0x4abe0>
   51f74:	ldr	r3, [pc, #-892]	; 51c00 <blkid_probe_get_size@plt+0x4a6e8>
   51f78:	add	r3, pc, r3
   51f7c:	ldr	r3, [r3, #4]
   51f80:	cmp	r3, #2
   51f84:	movle	r7, r5
   51f88:	movle	r2, r7
   51f8c:	bgt	521b4 <blkid_probe_get_size@plt+0x4ac9c>
   51f90:	ldr	r3, [pc, #-916]	; 51c04 <blkid_probe_get_size@plt+0x4a6ec>
   51f94:	ldr	r0, [pc, #-916]	; 51c08 <blkid_probe_get_size@plt+0x4a6f0>
   51f98:	str	r2, [sp, #4]
   51f9c:	add	r3, pc, r3
   51fa0:	ldr	r2, [pc, #-924]	; 51c0c <blkid_probe_get_size@plt+0x4a6f4>
   51fa4:	mov	ip, #0
   51fa8:	add	r0, pc, r0
   51fac:	add	r3, r3, #264	; 0x108
   51fb0:	str	r3, [sp]
   51fb4:	str	r0, [sp, #20]
   51fb8:	str	r7, [sp, #8]
   51fbc:	mov	r1, r6
   51fc0:	str	ip, [sp, #16]
   51fc4:	str	ip, [sp, #12]
   51fc8:	mov	r3, #232	; 0xe8
   51fcc:	add	r2, pc, r2
   51fd0:	mov	r0, #3
   51fd4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   51fd8:	mov	fp, r0
   51fdc:	b	50af4 <blkid_probe_get_size@plt+0x495dc>
   51fe0:	mov	r1, r7
   51fe4:	b	511a8 <blkid_probe_get_size@plt+0x49c90>
   51fe8:	sub	r1, r4, #28
   51fec:	mov	r0, r7
   51ff0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   51ff4:	ldr	r3, [r4, #-28]	; 0xffffffe4
   51ff8:	cmp	r3, #0
   51ffc:	beq	515f4 <blkid_probe_get_size@plt+0x4a0dc>
   52000:	ldr	ip, [pc, #-1016]	; 51c10 <blkid_probe_get_size@plt+0x4a6f8>
   52004:	add	ip, pc, ip
   52008:	b	515f8 <blkid_probe_get_size@plt+0x4a0e0>
   5200c:	sub	r1, r4, #28
   52010:	mov	r0, r7
   52014:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52018:	ldr	r5, [r4, #-28]	; 0xffffffe4
   5201c:	ldr	r0, [pc, #-1040]	; 51c14 <blkid_probe_get_size@plt+0x4a6fc>
   52020:	cmp	r5, #0
   52024:	ldr	r2, [r4, #-32]	; 0xffffffe0
   52028:	add	r0, pc, r0
   5202c:	bne	51678 <blkid_probe_get_size@plt+0x4a160>
   52030:	b	51674 <blkid_probe_get_size@plt+0x4a15c>
   52034:	sub	r1, r4, #28
   52038:	mov	r0, r7
   5203c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52040:	ldr	r5, [r4, #-28]	; 0xffffffe4
   52044:	cmp	r5, #0
   52048:	beq	51778 <blkid_probe_get_size@plt+0x4a260>
   5204c:	ldr	r1, [pc, #-1084]	; 51c18 <blkid_probe_get_size@plt+0x4a700>
   52050:	add	r1, pc, r1
   52054:	b	5177c <blkid_probe_get_size@plt+0x4a264>
   52058:	sub	r1, r4, #32
   5205c:	mov	r0, r7
   52060:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52064:	ldr	r0, [r4, #-32]	; 0xffffffe0
   52068:	cmp	r0, #0
   5206c:	beq	5186c <blkid_probe_get_size@plt+0x4a354>
   52070:	ldr	ip, [pc, #-1116]	; 51c1c <blkid_probe_get_size@plt+0x4a704>
   52074:	add	ip, pc, ip
   52078:	b	51870 <blkid_probe_get_size@plt+0x4a358>
   5207c:	sub	r1, r4, #32
   52080:	mov	r0, r7
   52084:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52088:	ldr	r8, [r4, #-32]	; 0xffffffe0
   5208c:	cmp	r8, #0
   52090:	beq	514a8 <blkid_probe_get_size@plt+0x49f90>
   52094:	ldr	r1, [pc, #-1148]	; 51c20 <blkid_probe_get_size@plt+0x4a708>
   52098:	add	r1, pc, r1
   5209c:	b	514ac <blkid_probe_get_size@plt+0x49f94>
   520a0:	mov	r3, r0
   520a4:	b	51e04 <blkid_probe_get_size@plt+0x4a8ec>
   520a8:	sub	r1, r4, #28
   520ac:	mov	r0, r7
   520b0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   520b4:	ldr	r1, [r4, #-28]	; 0xffffffe4
   520b8:	cmp	r1, #0
   520bc:	moveq	r5, r1
   520c0:	ldrne	r5, [pc, #-1188]	; 51c24 <blkid_probe_get_size@plt+0x4a70c>
   520c4:	addne	r5, pc, r5
   520c8:	b	51710 <blkid_probe_get_size@plt+0x4a1f8>
   520cc:	ldr	r2, [pc, #-1196]	; 51c28 <blkid_probe_get_size@plt+0x4a710>
   520d0:	ldr	r1, [pc, #-1196]	; 51c2c <blkid_probe_get_size@plt+0x4a714>
   520d4:	add	r2, pc, r2
   520d8:	add	r2, r2, #840	; 0x348
   520dc:	str	r2, [sp]
   520e0:	ldr	r2, [pc, #-1208]	; 51c30 <blkid_probe_get_size@plt+0x4a718>
   520e4:	mov	r3, #157	; 0x9d
   520e8:	add	r2, pc, r2
   520ec:	add	r1, pc, r1
   520f0:	mov	r0, #1
   520f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   520f8:	mov	r2, r7
   520fc:	b	51f90 <blkid_probe_get_size@plt+0x4aa78>
   52100:	mov	r3, r7
   52104:	mov	r1, r7
   52108:	b	51548 <blkid_probe_get_size@plt+0x4a030>
   5210c:	sub	r1, r4, #28
   52110:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52114:	ldr	r1, [r4, #-28]	; 0xffffffe4
   52118:	cmp	r1, #0
   5211c:	moveq	r5, r1
   52120:	ldrne	r5, [pc, #-1268]	; 51c34 <blkid_probe_get_size@plt+0x4a71c>
   52124:	addne	r5, pc, r5
   52128:	b	51978 <blkid_probe_get_size@plt+0x4a460>
   5212c:	mov	r0, r7
   52130:	sub	r1, r4, #28
   52134:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52138:	ldr	r7, [r4, #-28]	; 0xffffffe4
   5213c:	cmp	r7, r5
   52140:	beq	51fe0 <blkid_probe_get_size@plt+0x4aac8>
   52144:	ldr	r1, [pc, #-1300]	; 51c38 <blkid_probe_get_size@plt+0x4a720>
   52148:	add	r1, pc, r1
   5214c:	b	511a8 <blkid_probe_get_size@plt+0x49c90>
   52150:	sub	r1, r4, #28
   52154:	mov	r0, r7
   52158:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5215c:	ldr	r5, [r4, #-28]	; 0xffffffe4
   52160:	cmp	r5, #0
   52164:	beq	51cb8 <blkid_probe_get_size@plt+0x4a7a0>
   52168:	ldr	r1, [pc, #-1332]	; 51c3c <blkid_probe_get_size@plt+0x4a724>
   5216c:	add	r1, pc, r1
   52170:	b	51cbc <blkid_probe_get_size@plt+0x4a7a4>
   52174:	sub	r1, r4, #28
   52178:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5217c:	ldr	r3, [r4, #-28]	; 0xffffffe4
   52180:	cmp	r3, #0
   52184:	beq	51e00 <blkid_probe_get_size@plt+0x4a8e8>
   52188:	ldr	r0, [pc, #-1360]	; 51c40 <blkid_probe_get_size@plt+0x4a728>
   5218c:	add	r0, pc, r0
   52190:	b	51e04 <blkid_probe_get_size@plt+0x4a8ec>
   52194:	sub	r1, r4, #28
   52198:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5219c:	ldr	r5, [r4, #-28]	; 0xffffffe4
   521a0:	cmp	r5, r6
   521a4:	moveq	r6, r5
   521a8:	ldrne	r6, [pc, #-1388]	; 51c44 <blkid_probe_get_size@plt+0x4a72c>
   521ac:	addne	r6, pc, r6
   521b0:	b	51e90 <blkid_probe_get_size@plt+0x4a978>
   521b4:	mov	r0, r7
   521b8:	sub	r1, r4, #28
   521bc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   521c0:	ldr	r7, [r4, #-28]	; 0xffffffe4
   521c4:	cmp	r7, r5
   521c8:	beq	520f8 <blkid_probe_get_size@plt+0x4abe0>
   521cc:	ldr	r2, [pc, #-1420]	; 51c48 <blkid_probe_get_size@plt+0x4a730>
   521d0:	add	r2, pc, r2
   521d4:	b	51f90 <blkid_probe_get_size@plt+0x4aa78>
   521d8:	mov	r0, r7
   521dc:	sub	r1, r4, #28
   521e0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   521e4:	ldr	r3, [r4, #-28]	; 0xffffffe4
   521e8:	cmp	r3, #0
   521ec:	beq	51544 <blkid_probe_get_size@plt+0x4a02c>
   521f0:	ldr	r1, [pc, #-1452]	; 51c4c <blkid_probe_get_size@plt+0x4a734>
   521f4:	add	r1, pc, r1
   521f8:	b	51548 <blkid_probe_get_size@plt+0x4a030>
   521fc:	bl	6fb4 <__stack_chk_fail@plt>
   52200:	ldr	ip, [pc, #1464]	; 527c0 <blkid_probe_get_size@plt+0x4b2a8>
   52204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52208:	add	ip, pc, ip
   5220c:	ldr	lr, [pc, #1456]	; 527c4 <blkid_probe_get_size@plt+0x4b2ac>
   52210:	mov	r6, r2
   52214:	sub	sp, sp, #4160	; 0x1040
   52218:	ldr	r2, [ip, lr]
   5221c:	sub	sp, sp, #12
   52220:	mov	lr, r2
   52224:	add	ip, sp, #4160	; 0x1040
   52228:	add	ip, ip, #4
   5222c:	mov	r4, r3
   52230:	ldr	r3, [lr]
   52234:	add	sl, sp, #72	; 0x48
   52238:	str	r3, [ip]
   5223c:	add	r3, sp, #4160	; 0x1040
   52240:	add	r3, r3, #48	; 0x30
   52244:	str	r2, [sp, #44]	; 0x2c
   52248:	ldrb	r3, [r3]
   5224c:	sub	r2, sl, #12
   52250:	mov	r7, r0
   52254:	str	r1, [sp, #36]	; 0x24
   52258:	str	r3, [sp, #48]	; 0x30
   5225c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   52260:	cmp	r0, #0
   52264:	blt	524a4 <blkid_probe_get_size@plt+0x4af8c>
   52268:	ldr	r3, [sl, #-12]
   5226c:	ldr	r2, [pc, #1364]	; 527c8 <blkid_probe_get_size@plt+0x4b2b0>
   52270:	sub	r5, sl, #4
   52274:	mov	r0, r5
   52278:	add	r2, pc, r2
   5227c:	mov	r1, #4096	; 0x1000
   52280:	bl	6d08 <snprintf@plt>
   52284:	cmp	r0, #4096	; 0x1000
   52288:	bcs	52690 <blkid_probe_get_size@plt+0x4b178>
   5228c:	mov	r2, #0
   52290:	cmp	r7, #0
   52294:	str	r2, [sl, #-8]
   52298:	beq	52628 <blkid_probe_get_size@plt+0x4b110>
   5229c:	ldr	r3, [pc, #1320]	; 527cc <blkid_probe_get_size@plt+0x4b2b4>
   522a0:	add	r3, pc, r3
   522a4:	ldr	r3, [r3, #4]
   522a8:	cmp	r3, #6
   522ac:	bgt	52724 <blkid_probe_get_size@plt+0x4b20c>
   522b0:	mov	r0, r2
   522b4:	ldr	r3, [pc, #1300]	; 527d0 <blkid_probe_get_size@plt+0x4b2b8>
   522b8:	ldr	r1, [pc, #1300]	; 527d4 <blkid_probe_get_size@plt+0x4b2bc>
   522bc:	ldr	ip, [sp, #36]	; 0x24
   522c0:	stmib	sp, {r0, r2}
   522c4:	add	r3, pc, r3
   522c8:	ldr	r2, [pc, #1288]	; 527d8 <blkid_probe_get_size@plt+0x4b2c0>
   522cc:	mov	r8, #0
   522d0:	add	r1, pc, r1
   522d4:	add	r3, r3, #960	; 0x3c0
   522d8:	str	ip, [sp, #24]
   522dc:	str	r3, [sp]
   522e0:	str	r1, [sp, #20]
   522e4:	mov	r3, #92	; 0x5c
   522e8:	mov	r1, r8
   522ec:	add	r2, pc, r2
   522f0:	str	r5, [sp, #28]
   522f4:	str	r8, [sp, #16]
   522f8:	str	r8, [sp, #12]
   522fc:	mov	r0, #7
   52300:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   52304:	mov	r2, r4
   52308:	mov	r1, r8
   5230c:	mov	r0, r6
   52310:	bl	6c84 <memset@plt>
   52314:	ldr	fp, [pc, #1216]	; 527dc <blkid_probe_get_size@plt+0x4b2c4>
   52318:	ldr	r3, [pc, #1216]	; 527e0 <blkid_probe_get_size@plt+0x4b2c8>
   5231c:	add	fp, pc, fp
   52320:	add	r3, pc, r3
   52324:	lsr	r4, r4, #2
   52328:	add	fp, fp, #960	; 0x3c0
   5232c:	str	r3, [sp, #40]	; 0x28
   52330:	b	523c0 <blkid_probe_get_size@plt+0x4aea8>
   52334:	mov	r1, #0
   52338:	add	r0, r9, #1
   5233c:	bl	6c54 <strtoul@plt>
   52340:	cmp	r4, r8
   52344:	mov	r2, r0
   52348:	strhi	r0, [r6, r8, lsl #2]
   5234c:	bhi	523b4 <blkid_probe_get_size@plt+0x4ae9c>
   52350:	mov	r3, #0
   52354:	cmp	r7, #0
   52358:	str	r3, [sl, #-8]
   5235c:	beq	52498 <blkid_probe_get_size@plt+0x4af80>
   52360:	ldr	r1, [pc, #1148]	; 527e4 <blkid_probe_get_size@plt+0x4b2cc>
   52364:	add	r1, pc, r1
   52368:	ldr	r1, [r1, #4]
   5236c:	cmp	r1, #6
   52370:	bgt	52634 <blkid_probe_get_size@plt+0x4b11c>
   52374:	mov	ip, r3
   52378:	ldr	r0, [pc, #1128]	; 527e8 <blkid_probe_get_size@plt+0x4b2d0>
   5237c:	str	r2, [sp, #28]
   52380:	ldr	r2, [sp, #36]	; 0x24
   52384:	add	r0, pc, r0
   52388:	mov	r1, #0
   5238c:	str	r2, [sp, #24]
   52390:	str	r3, [sp, #8]
   52394:	str	r0, [sp, #20]
   52398:	stm	sp, {fp, ip}
   5239c:	str	r1, [sp, #16]
   523a0:	str	r1, [sp, #12]
   523a4:	mov	r3, #101	; 0x65
   523a8:	ldr	r2, [sp, #40]	; 0x28
   523ac:	mov	r0, #7
   523b0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   523b4:	add	r8, r8, #1
   523b8:	mov	r3, #0
   523bc:	strb	r3, [r9]
   523c0:	mov	r1, #32
   523c4:	mov	r0, r5
   523c8:	bl	7410 <strrchr@plt>
   523cc:	mov	r2, #16
   523d0:	subs	r9, r0, #0
   523d4:	bne	52334 <blkid_probe_get_size@plt+0x4ae1c>
   523d8:	mov	r1, r9
   523dc:	mov	r0, r5
   523e0:	bl	6c54 <strtoul@plt>
   523e4:	cmp	r4, r8
   523e8:	mov	fp, r0
   523ec:	strhi	r0, [r6, r8, lsl #2]
   523f0:	bhi	52464 <blkid_probe_get_size@plt+0x4af4c>
   523f4:	cmp	r7, #0
   523f8:	str	r9, [sl, #-8]
   523fc:	beq	52660 <blkid_probe_get_size@plt+0x4b148>
   52400:	ldr	r3, [pc, #996]	; 527ec <blkid_probe_get_size@plt+0x4b2d4>
   52404:	add	r3, pc, r3
   52408:	ldr	r3, [r3, #4]
   5240c:	cmp	r3, #6
   52410:	bgt	52798 <blkid_probe_get_size@plt+0x4b280>
   52414:	mov	r0, r9
   52418:	ldr	r2, [pc, #976]	; 527f0 <blkid_probe_get_size@plt+0x4b2d8>
   5241c:	ldr	r3, [pc, #976]	; 527f4 <blkid_probe_get_size@plt+0x4b2dc>
   52420:	add	r2, pc, r2
   52424:	add	r3, pc, r3
   52428:	ldr	ip, [sp, #36]	; 0x24
   5242c:	str	r2, [sp, #20]
   52430:	ldr	r2, [pc, #960]	; 527f8 <blkid_probe_get_size@plt+0x4b2e0>
   52434:	add	r3, r3, #960	; 0x3c0
   52438:	mov	r1, #0
   5243c:	stmib	sp, {r0, r9}
   52440:	str	r3, [sp]
   52444:	str	fp, [sp, #28]
   52448:	str	ip, [sp, #24]
   5244c:	str	r1, [sp, #16]
   52450:	str	r1, [sp, #12]
   52454:	mov	r3, #109	; 0x6d
   52458:	add	r2, pc, r2
   5245c:	mov	r0, #7
   52460:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   52464:	ldr	r3, [sp, #48]	; 0x30
   52468:	cmp	r3, #0
   5246c:	bne	524b8 <blkid_probe_get_size@plt+0x4afa0>
   52470:	add	r3, sp, #4160	; 0x1040
   52474:	add	r3, r3, #4
   52478:	ldr	r2, [r3]
   5247c:	ldr	r3, [sp, #44]	; 0x2c
   52480:	ldr	r3, [r3]
   52484:	cmp	r2, r3
   52488:	bne	527bc <blkid_probe_get_size@plt+0x4b2a4>
   5248c:	add	sp, sp, #4160	; 0x1040
   52490:	add	sp, sp, #12
   52494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   52498:	mov	r3, r7
   5249c:	mov	ip, r7
   524a0:	b	52378 <blkid_probe_get_size@plt+0x4ae60>
   524a4:	ldr	r2, [pc, #848]	; 527fc <blkid_probe_get_size@plt+0x4b2e4>
   524a8:	add	r2, pc, r2
   524ac:	mov	r3, r2
   524b0:	str	r2, [sl, #-12]
   524b4:	b	5226c <blkid_probe_get_size@plt+0x4ad54>
   524b8:	ldr	r2, [pc, #832]	; 52800 <blkid_probe_get_size@plt+0x4b2e8>
   524bc:	mov	r1, #8
   524c0:	add	r2, pc, r2
   524c4:	mov	r3, #4096	; 0x1000
   524c8:	str	r2, [sp]
   524cc:	str	r1, [sp, #4]
   524d0:	mov	r2, #1
   524d4:	mov	r1, r3
   524d8:	mov	r0, r5
   524dc:	bl	7260 <__snprintf_chk@plt>
   524e0:	cmp	r0, #4096	; 0x1000
   524e4:	bcs	5276c <blkid_probe_get_size@plt+0x4b254>
   524e8:	mov	r1, #0
   524ec:	cmp	r7, #0
   524f0:	str	r1, [sl, #-8]
   524f4:	beq	526bc <blkid_probe_get_size@plt+0x4b1a4>
   524f8:	ldr	r3, [pc, #772]	; 52804 <blkid_probe_get_size@plt+0x4b2ec>
   524fc:	add	r3, pc, r3
   52500:	ldr	r3, [r3, #4]
   52504:	cmp	r3, #6
   52508:	bgt	52748 <blkid_probe_get_size@plt+0x4b230>
   5250c:	ldr	r2, [pc, #756]	; 52808 <blkid_probe_get_size@plt+0x4b2f0>
   52510:	ldr	r3, [pc, #756]	; 5280c <blkid_probe_get_size@plt+0x4b2f4>
   52514:	add	r2, pc, r2
   52518:	ldr	r0, [sp, #36]	; 0x24
   5251c:	str	r2, [sp, #20]
   52520:	add	r3, pc, r3
   52524:	ldr	r2, [pc, #740]	; 52810 <blkid_probe_get_size@plt+0x4b2f8>
   52528:	add	r3, r3, #960	; 0x3c0
   5252c:	str	r0, [sp, #24]
   52530:	str	r3, [sp]
   52534:	add	r2, pc, r2
   52538:	mov	r3, #115	; 0x73
   5253c:	str	r1, [sp, #16]
   52540:	str	r1, [sp, #12]
   52544:	str	r1, [sp, #8]
   52548:	str	r1, [sp, #4]
   5254c:	mov	r0, #7
   52550:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   52554:	sub	r3, r4, #-1073741823	; 0xc0000001
   52558:	ldr	r2, [r6, r3, lsl #2]
   5255c:	add	r3, r6, r3, lsl #2
   52560:	cmp	r2, #0
   52564:	beq	52574 <blkid_probe_get_size@plt+0x4b05c>
   52568:	b	5258c <blkid_probe_get_size@plt+0x4b074>
   5256c:	cmp	r4, #0
   52570:	beq	52470 <blkid_probe_get_size@plt+0x4af58>
   52574:	ldr	r2, [r3, #-4]!
   52578:	sub	r4, r4, #1
   5257c:	cmp	r2, #0
   52580:	beq	5256c <blkid_probe_get_size@plt+0x4b054>
   52584:	cmp	r4, #0
   52588:	beq	52470 <blkid_probe_get_size@plt+0x4af58>
   5258c:	ldr	r3, [pc, #640]	; 52814 <blkid_probe_get_size@plt+0x4b2fc>
   52590:	ldr	fp, [pc, #640]	; 52818 <blkid_probe_get_size@plt+0x4b300>
   52594:	add	r3, pc, r3
   52598:	sub	r6, r6, #4
   5259c:	mov	r8, #0
   525a0:	add	r3, r3, #960	; 0x3c0
   525a4:	add	fp, pc, fp
   525a8:	add	r4, r6, r4, lsl #2
   525ac:	str	r3, [sp, #36]	; 0x24
   525b0:	mov	r9, r8
   525b4:	b	52610 <blkid_probe_get_size@plt+0x4b0f8>
   525b8:	ldr	r3, [fp, #4]
   525bc:	cmp	r3, #6
   525c0:	movle	r3, #0
   525c4:	movle	r1, r3
   525c8:	bgt	5266c <blkid_probe_get_size@plt+0x4b154>
   525cc:	ldr	r2, [r6, #4]!
   525d0:	stmib	sp, {r1, r3, r9}
   525d4:	mov	r0, #7
   525d8:	ldr	r3, [sp, #36]	; 0x24
   525dc:	str	r2, [sp, #28]
   525e0:	ldr	r2, [pc, #564]	; 5281c <blkid_probe_get_size@plt+0x4b304>
   525e4:	str	r8, [sp, #24]
   525e8:	str	r3, [sp]
   525ec:	str	r5, [sp, #20]
   525f0:	str	r9, [sp, #16]
   525f4:	mov	r3, #122	; 0x7a
   525f8:	add	r2, pc, r2
   525fc:	mov	r1, #0
   52600:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   52604:	cmp	r4, r6
   52608:	add	r8, r8, #32
   5260c:	beq	52470 <blkid_probe_get_size@plt+0x4af58>
   52610:	cmp	r7, #0
   52614:	str	r9, [sl, #-8]
   52618:	bne	525b8 <blkid_probe_get_size@plt+0x4b0a0>
   5261c:	mov	r3, r7
   52620:	mov	r1, r7
   52624:	b	525cc <blkid_probe_get_size@plt+0x4b0b4>
   52628:	mov	r2, r7
   5262c:	mov	r0, r7
   52630:	b	522b4 <blkid_probe_get_size@plt+0x4ad9c>
   52634:	str	r0, [sp, #52]	; 0x34
   52638:	sub	r1, sl, #8
   5263c:	mov	r0, r7
   52640:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52644:	ldr	r3, [sl, #-8]
   52648:	ldr	r2, [sp, #52]	; 0x34
   5264c:	cmp	r3, #0
   52650:	beq	52374 <blkid_probe_get_size@plt+0x4ae5c>
   52654:	ldr	ip, [pc, #452]	; 52820 <blkid_probe_get_size@plt+0x4b308>
   52658:	add	ip, pc, ip
   5265c:	b	52378 <blkid_probe_get_size@plt+0x4ae60>
   52660:	mov	r9, r7
   52664:	mov	r0, r7
   52668:	b	52418 <blkid_probe_get_size@plt+0x4af00>
   5266c:	sub	r1, sl, #8
   52670:	mov	r0, r7
   52674:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52678:	ldr	r3, [sl, #-8]
   5267c:	cmp	r3, #0
   52680:	moveq	r1, r3
   52684:	ldrne	r1, [pc, #408]	; 52824 <blkid_probe_get_size@plt+0x4b30c>
   52688:	addne	r1, pc, r1
   5268c:	b	525cc <blkid_probe_get_size@plt+0x4b0b4>
   52690:	ldr	r2, [pc, #400]	; 52828 <blkid_probe_get_size@plt+0x4b310>
   52694:	ldr	r1, [pc, #400]	; 5282c <blkid_probe_get_size@plt+0x4b314>
   52698:	add	r2, pc, r2
   5269c:	add	r2, r2, #944	; 0x3b0
   526a0:	str	r2, [sp]
   526a4:	ldr	r2, [pc, #388]	; 52830 <blkid_probe_get_size@plt+0x4b318>
   526a8:	mov	r3, #91	; 0x5b
   526ac:	add	r2, pc, r2
   526b0:	add	r1, pc, r1
   526b4:	mov	r0, #1
   526b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   526bc:	mov	r0, r7
   526c0:	mov	ip, r7
   526c4:	ldr	r3, [pc, #360]	; 52834 <blkid_probe_get_size@plt+0x4b31c>
   526c8:	ldr	r2, [pc, #360]	; 52838 <blkid_probe_get_size@plt+0x4b320>
   526cc:	ldr	r1, [sp, #36]	; 0x24
   526d0:	add	r2, pc, r2
   526d4:	add	r3, pc, r3
   526d8:	add	r3, r3, #960	; 0x3c0
   526dc:	str	r2, [sp, #20]
   526e0:	ldr	r2, [pc, #340]	; 5283c <blkid_probe_get_size@plt+0x4b324>
   526e4:	str	r1, [sp, #24]
   526e8:	mov	r1, #0
   526ec:	str	r0, [sp, #8]
   526f0:	stm	sp, {r3, ip}
   526f4:	add	r2, pc, r2
   526f8:	mov	r3, #115	; 0x73
   526fc:	str	r1, [sp, #16]
   52700:	str	r1, [sp, #12]
   52704:	mov	r0, #7
   52708:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5270c:	sub	r3, r4, #-1073741823	; 0xc0000001
   52710:	ldr	r2, [r6, r3, lsl #2]
   52714:	add	r3, r6, r3, lsl #2
   52718:	cmp	r2, #0
   5271c:	beq	52574 <blkid_probe_get_size@plt+0x4b05c>
   52720:	b	52584 <blkid_probe_get_size@plt+0x4b06c>
   52724:	sub	r1, sl, #8
   52728:	mov	r0, r7
   5272c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52730:	ldr	r2, [sl, #-8]
   52734:	cmp	r2, #0
   52738:	beq	522b0 <blkid_probe_get_size@plt+0x4ad98>
   5273c:	ldr	r0, [pc, #252]	; 52840 <blkid_probe_get_size@plt+0x4b328>
   52740:	add	r0, pc, r0
   52744:	b	522b4 <blkid_probe_get_size@plt+0x4ad9c>
   52748:	sub	r1, sl, #8
   5274c:	mov	r0, r7
   52750:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52754:	ldr	r0, [sl, #-8]
   52758:	cmp	r0, #0
   5275c:	moveq	ip, r0
   52760:	ldrne	ip, [pc, #220]	; 52844 <blkid_probe_get_size@plt+0x4b32c>
   52764:	addne	ip, pc, ip
   52768:	b	526c4 <blkid_probe_get_size@plt+0x4b1ac>
   5276c:	ldr	r2, [pc, #212]	; 52848 <blkid_probe_get_size@plt+0x4b330>
   52770:	ldr	r1, [pc, #212]	; 5284c <blkid_probe_get_size@plt+0x4b334>
   52774:	add	r2, pc, r2
   52778:	add	r2, r2, #944	; 0x3b0
   5277c:	str	r2, [sp]
   52780:	ldr	r2, [pc, #200]	; 52850 <blkid_probe_get_size@plt+0x4b338>
   52784:	mov	r3, #114	; 0x72
   52788:	add	r2, pc, r2
   5278c:	add	r1, pc, r1
   52790:	mov	r0, #1
   52794:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   52798:	sub	r1, sl, #8
   5279c:	mov	r0, r7
   527a0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   527a4:	ldr	r9, [sl, #-8]
   527a8:	cmp	r9, #0
   527ac:	beq	52414 <blkid_probe_get_size@plt+0x4aefc>
   527b0:	ldr	r0, [pc, #156]	; 52854 <blkid_probe_get_size@plt+0x4b33c>
   527b4:	add	r0, pc, r0
   527b8:	b	52418 <blkid_probe_get_size@plt+0x4af00>
   527bc:	bl	6fb4 <__stack_chk_fail@plt>
   527c0:	andeq	r5, r4, r0, ror #18
   527c4:	andeq	r0, r0, ip, lsr r4
   527c8:	andeq	r4, r1, r0, asr #20
   527cc:	muleq	r4, ip, lr
   527d0:	andeq	r0, r2, r0, lsl #13
   527d4:	andeq	r1, r2, ip, ror #9
   527d8:	andeq	r1, r2, r4, lsr #8
   527dc:	andeq	r0, r2, r8, lsr #12
   527e0:	strdeq	r1, [r2], -r0
   527e4:	ldrdeq	r5, [r4], -r8
   527e8:	ldrdeq	r1, [r2], -r4
   527ec:	andeq	r5, r4, r8, lsr sp
   527f0:	andeq	r1, r2, r8, lsr r3
   527f4:	andeq	r0, r2, r0, lsr #10
   527f8:			; <UNDEFINED> instruction: 0x000212b8
   527fc:	andeq	r4, r1, r4, asr #32
   52800:	ldrdeq	r1, [r2], -r0
   52804:	andeq	r5, r4, r0, asr #24
   52808:	muleq	r2, r4, r2
   5280c:	andeq	r0, r2, r4, lsr #8
   52810:	ldrdeq	r1, [r2], -ip
   52814:			; <UNDEFINED> instruction: 0x000203b0
   52818:	muleq	r4, r8, fp
   5281c:	andeq	r1, r2, r8, lsl r1
   52820:	andeq	r2, r1, r0, ror #17
   52824:			; <UNDEFINED> instruction: 0x000128b0
   52828:	andeq	r0, r2, ip, lsr #5
   5282c:	andeq	r1, r2, r4, lsl #1
   52830:	andeq	r1, r2, r4, rrx
   52834:	andeq	r0, r2, r0, ror r2
   52838:	ldrdeq	r1, [r2], -r8
   5283c:	andeq	r1, r2, ip, lsl r0
   52840:	strdeq	r2, [r1], -r8
   52844:	ldrdeq	r2, [r1], -r4
   52848:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   5284c:	andeq	r0, r2, r8, lsr #31
   52850:	andeq	r0, r2, r8, lsl #31
   52854:	andeq	r2, r1, r4, lsl #15
   52858:	ldr	r3, [pc, #208]	; 52930 <blkid_probe_get_size@plt+0x4b418>
   5285c:	ldr	r1, [pc, #208]	; 52934 <blkid_probe_get_size@plt+0x4b41c>
   52860:	add	r3, pc, r3
   52864:	ldr	r2, [pc, #204]	; 52938 <blkid_probe_get_size@plt+0x4b420>
   52868:	push	{r4, r5, r6, r7, lr}
   5286c:	add	r2, pc, r2
   52870:	ldr	r6, [r3, r1]
   52874:	ldr	r5, [r2, #4]
   52878:	sub	sp, sp, #116	; 0x74
   5287c:	ldr	r3, [r6]
   52880:	cmp	r5, #0
   52884:	str	r3, [sp, #108]	; 0x6c
   52888:	moveq	r0, r5
   5288c:	beq	528e8 <blkid_probe_get_size@plt+0x4b3d0>
   52890:	ldr	r0, [r5, #4]
   52894:	cmp	r0, #0
   52898:	beq	528e8 <blkid_probe_get_size@plt+0x4b3d0>
   5289c:	ldr	r4, [pc, #152]	; 5293c <blkid_probe_get_size@plt+0x4b424>
   528a0:	mov	r7, sp
   528a4:	add	r4, pc, r4
   528a8:	b	528b8 <blkid_probe_get_size@plt+0x4b3a0>
   528ac:	ldrb	r3, [r4]
   528b0:	cmp	r3, #0
   528b4:	beq	528e4 <blkid_probe_get_size@plt+0x4b3cc>
   528b8:	mov	r2, r7
   528bc:	mov	r1, r4
   528c0:	mov	r0, #3
   528c4:	bl	6a2c <__xstat64@plt>
   528c8:	cmp	r0, #0
   528cc:	bge	52900 <blkid_probe_get_size@plt+0x4b3e8>
   528d0:	mov	r0, r4
   528d4:	bl	723c <strlen@plt>
   528d8:	add	r0, r0, #1
   528dc:	adds	r4, r4, r0
   528e0:	bne	528ac <blkid_probe_get_size@plt+0x4b394>
   528e4:	mov	r0, #1
   528e8:	ldr	r2, [sp, #108]	; 0x6c
   528ec:	ldr	r3, [r6]
   528f0:	cmp	r2, r3
   528f4:	bne	5292c <blkid_probe_get_size@plt+0x4b414>
   528f8:	add	sp, sp, #116	; 0x74
   528fc:	pop	{r4, r5, r6, r7, pc}
   52900:	add	r0, r5, #88	; 0x58
   52904:	bl	3c9a4 <blkid_probe_get_size@plt+0x3548c>
   52908:	mov	r4, r0
   5290c:	add	r0, sp, #80	; 0x50
   52910:	mov	r5, r1
   52914:	bl	3c9a4 <blkid_probe_get_size@plt+0x3548c>
   52918:	cmp	r5, r1
   5291c:	cmpeq	r4, r0
   52920:	movne	r0, #1
   52924:	moveq	r0, #0
   52928:	b	528e8 <blkid_probe_get_size@plt+0x4b3d0>
   5292c:	bl	6fb4 <__stack_chk_fail@plt>
   52930:	andeq	r5, r4, r8, lsl #6
   52934:	andeq	r0, r0, ip, lsr r4
   52938:	andeq	r6, r4, r8, lsl r6
   5293c:	andeq	sl, r1, r4, lsl #15
   52940:	push	{r4, lr}
   52944:	ldr	r4, [pc, #16]	; 5295c <blkid_probe_get_size@plt+0x4b444>
   52948:	add	r4, pc, r4
   5294c:	ldr	r0, [r4, #4]
   52950:	bl	350bc <blkid_probe_get_size@plt+0x2dba4>
   52954:	str	r0, [r4, #4]
   52958:	pop	{r4, pc}
   5295c:	andeq	r6, r4, ip, lsr r5
   52960:	ldr	r0, [pc, #40]	; 52990 <blkid_probe_get_size@plt+0x4b478>
   52964:	add	r0, pc, r0
   52968:	ldr	r3, [r0, #4]
   5296c:	cmp	r3, #0
   52970:	beq	5297c <blkid_probe_get_size@plt+0x4b464>
   52974:	mov	r0, #0
   52978:	bx	lr
   5297c:	push	{r4, lr}
   52980:	add	r0, r0, #4
   52984:	bl	35128 <blkid_probe_get_size@plt+0x2dc10>
   52988:	and	r0, r0, r0, asr #31
   5298c:	pop	{r4, pc}
   52990:	andeq	r6, r4, r0, lsr #10
   52994:	ldr	ip, [pc, #436]	; 52b50 <blkid_probe_get_size@plt+0x4b638>
   52998:	push	{r4, r5, r6, r7, r8, r9, lr}
   5299c:	add	ip, pc, ip
   529a0:	ldr	lr, [pc, #428]	; 52b54 <blkid_probe_get_size@plt+0x4b63c>
   529a4:	sub	sp, sp, #52	; 0x34
   529a8:	mov	r6, r3
   529ac:	ldr	r7, [ip, lr]
   529b0:	subs	r9, r0, #0
   529b4:	mov	r5, r2
   529b8:	ldr	r3, [r7]
   529bc:	mov	r2, ip
   529c0:	str	r3, [sp, #44]	; 0x2c
   529c4:	beq	52ac0 <blkid_probe_get_size@plt+0x4b5a8>
   529c8:	cmp	r5, #0
   529cc:	beq	52aec <blkid_probe_get_size@plt+0x4b5d4>
   529d0:	mov	r4, r1
   529d4:	mov	r2, r6
   529d8:	mov	r1, r5
   529dc:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   529e0:	subs	r8, r0, #0
   529e4:	blt	52a30 <blkid_probe_get_size@plt+0x4b518>
   529e8:	cmp	r4, #0
   529ec:	moveq	r0, r4
   529f0:	beq	52a18 <blkid_probe_get_size@plt+0x4b500>
   529f4:	cmp	r6, #0
   529f8:	beq	52ab4 <blkid_probe_get_size@plt+0x4b59c>
   529fc:	ldr	r1, [pc, #340]	; 52b58 <blkid_probe_get_size@plt+0x4b640>
   52a00:	mov	r3, r6
   52a04:	mov	r2, r5
   52a08:	add	r1, pc, r1
   52a0c:	mov	r0, #1
   52a10:	bl	74f4 <__printf_chk@plt>
   52a14:	mov	r0, #0
   52a18:	ldr	r2, [sp, #44]	; 0x2c
   52a1c:	ldr	r3, [r7]
   52a20:	cmp	r2, r3
   52a24:	bne	52b4c <blkid_probe_get_size@plt+0x4b634>
   52a28:	add	sp, sp, #52	; 0x34
   52a2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   52a30:	ldr	r3, [pc, #292]	; 52b5c <blkid_probe_get_size@plt+0x4b644>
   52a34:	mov	r2, #0
   52a38:	add	r3, pc, r3
   52a3c:	str	r2, [sp, #40]	; 0x28
   52a40:	ldr	r3, [r3, #4]
   52a44:	cmp	r3, #6
   52a48:	bgt	52b28 <blkid_probe_get_size@plt+0x4b610>
   52a4c:	mov	r1, r2
   52a50:	cmp	r6, #0
   52a54:	beq	52b18 <blkid_probe_get_size@plt+0x4b600>
   52a58:	ldr	ip, [pc, #256]	; 52b60 <blkid_probe_get_size@plt+0x4b648>
   52a5c:	add	ip, pc, ip
   52a60:	ldr	r3, [pc, #252]	; 52b64 <blkid_probe_get_size@plt+0x4b64c>
   52a64:	ldr	r0, [pc, #252]	; 52b68 <blkid_probe_get_size@plt+0x4b650>
   52a68:	stmib	sp, {r1, r2}
   52a6c:	add	r3, pc, r3
   52a70:	ldr	r2, [pc, #244]	; 52b6c <blkid_probe_get_size@plt+0x4b654>
   52a74:	add	r0, pc, r0
   52a78:	add	r3, r3, #1004	; 0x3ec
   52a7c:	str	ip, [sp, #28]
   52a80:	mov	ip, #0
   52a84:	str	r3, [sp]
   52a88:	str	r0, [sp, #20]
   52a8c:	str	r6, [sp, #32]
   52a90:	str	r5, [sp, #24]
   52a94:	mov	r1, r8
   52a98:	str	ip, [sp, #16]
   52a9c:	str	ip, [sp, #12]
   52aa0:	mov	r3, #139	; 0x8b
   52aa4:	add	r2, pc, r2
   52aa8:	mov	r0, #7
   52aac:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   52ab0:	b	52a18 <blkid_probe_get_size@plt+0x4b500>
   52ab4:	ldr	r6, [pc, #180]	; 52b70 <blkid_probe_get_size@plt+0x4b658>
   52ab8:	add	r6, pc, r6
   52abc:	b	529fc <blkid_probe_get_size@plt+0x4b4e4>
   52ac0:	ldr	r2, [pc, #172]	; 52b74 <blkid_probe_get_size@plt+0x4b65c>
   52ac4:	ldr	r1, [pc, #172]	; 52b78 <blkid_probe_get_size@plt+0x4b660>
   52ac8:	add	r2, pc, r2
   52acc:	add	r2, r2, #976	; 0x3d0
   52ad0:	str	r2, [sp]
   52ad4:	ldr	r2, [pc, #160]	; 52b7c <blkid_probe_get_size@plt+0x4b664>
   52ad8:	mov	r3, #133	; 0x85
   52adc:	add	r2, pc, r2
   52ae0:	add	r1, pc, r1
   52ae4:	mov	r0, #1
   52ae8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   52aec:	ldr	r2, [pc, #140]	; 52b80 <blkid_probe_get_size@plt+0x4b668>
   52af0:	ldr	r1, [pc, #140]	; 52b84 <blkid_probe_get_size@plt+0x4b66c>
   52af4:	add	r2, pc, r2
   52af8:	add	r2, r2, #976	; 0x3d0
   52afc:	str	r2, [sp]
   52b00:	ldr	r2, [pc, #128]	; 52b88 <blkid_probe_get_size@plt+0x4b670>
   52b04:	mov	r3, #134	; 0x86
   52b08:	add	r2, pc, r2
   52b0c:	add	r1, pc, r1
   52b10:	mov	r0, #1
   52b14:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   52b18:	ldr	r6, [pc, #108]	; 52b8c <blkid_probe_get_size@plt+0x4b674>
   52b1c:	add	r6, pc, r6
   52b20:	mov	ip, r6
   52b24:	b	52a60 <blkid_probe_get_size@plt+0x4b548>
   52b28:	mov	r0, r9
   52b2c:	add	r1, sp, #40	; 0x28
   52b30:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52b34:	ldr	r2, [sp, #40]	; 0x28
   52b38:	cmp	r2, #0
   52b3c:	beq	52a4c <blkid_probe_get_size@plt+0x4b534>
   52b40:	ldr	r1, [pc, #72]	; 52b90 <blkid_probe_get_size@plt+0x4b678>
   52b44:	add	r1, pc, r1
   52b48:	b	52a50 <blkid_probe_get_size@plt+0x4b538>
   52b4c:	bl	6fb4 <__stack_chk_fail@plt>
   52b50:	andeq	r5, r4, ip, asr #3
   52b54:	andeq	r0, r0, ip, lsr r4
   52b58:	andeq	r2, r1, r4, ror #26
   52b5c:	andeq	r5, r4, r4, lsl #14
   52b60:	andeq	fp, r1, r4, asr #32
   52b64:	ldrdeq	pc, [r1], -r8
   52b68:	andeq	r0, r2, r0, lsl #27
   52b6c:	andeq	r0, r2, r4, lsr sp
   52b70:	andeq	r3, r1, r4, lsr sl
   52b74:	andeq	pc, r1, ip, ror lr	; <UNPREDICTABLE>
   52b78:	andeq	r2, r1, r4, lsr #25
   52b7c:	strdeq	r0, [r2], -ip
   52b80:	andeq	pc, r1, r0, asr lr	; <UNPREDICTABLE>
   52b84:	andeq	r8, r1, r0, lsr r9
   52b88:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   52b8c:	ldrdeq	r3, [r1], -r0
   52b90:	strdeq	r2, [r1], -r4
   52b94:	ldr	r2, [pc, #3972]	; 53b20 <blkid_probe_get_size@plt+0x4c608>
   52b98:	ldr	r1, [pc, #3972]	; 53b24 <blkid_probe_get_size@plt+0x4c60c>
   52b9c:	add	r2, pc, r2
   52ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52ba4:	mov	r9, r3
   52ba8:	ldr	r1, [r2, r1]
   52bac:	sub	sp, sp, #652	; 0x28c
   52bb0:	mov	r4, #0
   52bb4:	ldr	r3, [r1]
   52bb8:	subs	r7, r0, #0
   52bbc:	str	r1, [sp, #12]
   52bc0:	str	r4, [sp, #28]
   52bc4:	str	r3, [sp, #644]	; 0x284
   52bc8:	beq	532b8 <blkid_probe_get_size@plt+0x4bda0>
   52bcc:	ldr	r3, [pc, #3924]	; 53b28 <blkid_probe_get_size@plt+0x4c610>
   52bd0:	ldr	sl, [pc, #3924]	; 53b2c <blkid_probe_get_size@plt+0x4c614>
   52bd4:	ldr	fp, [pc, #3924]	; 53b30 <blkid_probe_get_size@plt+0x4c618>
   52bd8:	add	r3, pc, r3
   52bdc:	add	sl, pc, sl
   52be0:	add	fp, pc, fp
   52be4:	str	r3, [sp, #16]
   52be8:	mov	r8, r4
   52bec:	mov	r0, r7
   52bf0:	add	r6, sp, #36	; 0x24
   52bf4:	str	r7, [sp, #32]
   52bf8:	b	52c28 <blkid_probe_get_size@plt+0x4b710>
   52bfc:	ldr	r5, [sp, #32]
   52c00:	cmp	r5, #0
   52c04:	beq	52eb4 <blkid_probe_get_size@plt+0x4b99c>
   52c08:	mov	r0, r5
   52c0c:	add	r1, sp, #32
   52c10:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   52c14:	cmp	r0, #0
   52c18:	blt	52eb4 <blkid_probe_get_size@plt+0x4b99c>
   52c1c:	ldr	r0, [sp, #32]
   52c20:	cmp	r0, #0
   52c24:	beq	52eb4 <blkid_probe_get_size@plt+0x4b99c>
   52c28:	mov	r1, r6
   52c2c:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   52c30:	cmp	r0, #0
   52c34:	blt	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   52c38:	add	r1, sp, #40	; 0x28
   52c3c:	ldr	r0, [sp, #32]
   52c40:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52c44:	cmp	r0, #0
   52c48:	blt	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   52c4c:	ldr	r5, [sp, #36]	; 0x24
   52c50:	mov	r1, sl
   52c54:	mov	r0, r5
   52c58:	bl	7314 <strcmp@plt>
   52c5c:	cmp	r0, #0
   52c60:	beq	53044 <blkid_probe_get_size@plt+0x4bb2c>
   52c64:	mov	r1, fp
   52c68:	mov	r0, r5
   52c6c:	bl	7314 <strcmp@plt>
   52c70:	cmp	r0, #0
   52c74:	beq	530c8 <blkid_probe_get_size@plt+0x4bbb0>
   52c78:	ldr	r1, [sp, #16]
   52c7c:	mov	r0, r5
   52c80:	bl	7314 <strcmp@plt>
   52c84:	cmp	r0, #0
   52c88:	beq	52e70 <blkid_probe_get_size@plt+0x4b958>
   52c8c:	ldr	r1, [pc, #3744]	; 53b34 <blkid_probe_get_size@plt+0x4c61c>
   52c90:	mov	r0, r5
   52c94:	add	r1, pc, r1
   52c98:	bl	7314 <strcmp@plt>
   52c9c:	cmp	r0, #0
   52ca0:	beq	53104 <blkid_probe_get_size@plt+0x4bbec>
   52ca4:	ldr	r1, [pc, #3724]	; 53b38 <blkid_probe_get_size@plt+0x4c620>
   52ca8:	mov	r0, r5
   52cac:	add	r1, pc, r1
   52cb0:	bl	7314 <strcmp@plt>
   52cb4:	cmp	r0, #0
   52cb8:	beq	53264 <blkid_probe_get_size@plt+0x4bd4c>
   52cbc:	ldr	r1, [pc, #3704]	; 53b3c <blkid_probe_get_size@plt+0x4c624>
   52cc0:	mov	r0, r5
   52cc4:	add	r1, pc, r1
   52cc8:	bl	7314 <strcmp@plt>
   52ccc:	cmp	r0, #0
   52cd0:	beq	53210 <blkid_probe_get_size@plt+0x4bcf8>
   52cd4:	ldr	r3, [pc, #3684]	; 53b40 <blkid_probe_get_size@plt+0x4c628>
   52cd8:	mov	r0, r5
   52cdc:	add	r3, pc, r3
   52ce0:	mov	r1, r3
   52ce4:	str	r3, [sp, #20]
   52ce8:	bl	7314 <strcmp@plt>
   52cec:	cmp	r0, #0
   52cf0:	beq	532f4 <blkid_probe_get_size@plt+0x4bddc>
   52cf4:	ldr	r1, [pc, #3656]	; 53b44 <blkid_probe_get_size@plt+0x4c62c>
   52cf8:	mov	r0, r5
   52cfc:	add	r1, pc, r1
   52d00:	bl	7314 <strcmp@plt>
   52d04:	cmp	r0, #0
   52d08:	beq	5348c <blkid_probe_get_size@plt+0x4bf74>
   52d0c:	ldr	r3, [pc, #3636]	; 53b48 <blkid_probe_get_size@plt+0x4c630>
   52d10:	mov	r0, r5
   52d14:	add	r3, pc, r3
   52d18:	mov	r1, r3
   52d1c:	str	r3, [sp, #20]
   52d20:	bl	7314 <strcmp@plt>
   52d24:	cmp	r0, #0
   52d28:	beq	53324 <blkid_probe_get_size@plt+0x4be0c>
   52d2c:	ldr	r3, [pc, #3608]	; 53b4c <blkid_probe_get_size@plt+0x4c634>
   52d30:	mov	r0, r5
   52d34:	add	r3, pc, r3
   52d38:	mov	r1, r3
   52d3c:	str	r3, [sp, #20]
   52d40:	bl	7314 <strcmp@plt>
   52d44:	cmp	r0, #0
   52d48:	beq	536e8 <blkid_probe_get_size@plt+0x4c1d0>
   52d4c:	ldr	r3, [pc, #3580]	; 53b50 <blkid_probe_get_size@plt+0x4c638>
   52d50:	mov	r0, r5
   52d54:	add	r3, pc, r3
   52d58:	mov	r1, r3
   52d5c:	str	r3, [sp, #20]
   52d60:	bl	7314 <strcmp@plt>
   52d64:	ldr	r3, [sp, #20]
   52d68:	cmp	r0, #0
   52d6c:	beq	536f8 <blkid_probe_get_size@plt+0x4c1e0>
   52d70:	ldr	r3, [pc, #3548]	; 53b54 <blkid_probe_get_size@plt+0x4c63c>
   52d74:	mov	r0, r5
   52d78:	add	r3, pc, r3
   52d7c:	mov	r1, r3
   52d80:	str	r3, [sp, #20]
   52d84:	bl	7314 <strcmp@plt>
   52d88:	cmp	r0, #0
   52d8c:	beq	53740 <blkid_probe_get_size@plt+0x4c228>
   52d90:	ldr	r3, [pc, #3520]	; 53b58 <blkid_probe_get_size@plt+0x4c640>
   52d94:	mov	r0, r5
   52d98:	add	r3, pc, r3
   52d9c:	mov	r1, r3
   52da0:	str	r3, [sp, #20]
   52da4:	bl	7314 <strcmp@plt>
   52da8:	cmp	r0, #0
   52dac:	beq	53764 <blkid_probe_get_size@plt+0x4c24c>
   52db0:	ldr	r3, [pc, #3492]	; 53b5c <blkid_probe_get_size@plt+0x4c644>
   52db4:	mov	r0, r5
   52db8:	add	r3, pc, r3
   52dbc:	mov	r1, r3
   52dc0:	str	r3, [sp, #20]
   52dc4:	bl	7314 <strcmp@plt>
   52dc8:	cmp	r0, #0
   52dcc:	beq	5384c <blkid_probe_get_size@plt+0x4c334>
   52dd0:	ldr	r1, [pc, #3464]	; 53b60 <blkid_probe_get_size@plt+0x4c648>
   52dd4:	mov	r0, r5
   52dd8:	add	r1, pc, r1
   52ddc:	bl	7314 <strcmp@plt>
   52de0:	cmp	r0, #0
   52de4:	beq	538bc <blkid_probe_get_size@plt+0x4c3a4>
   52de8:	ldr	r3, [pc, #3444]	; 53b64 <blkid_probe_get_size@plt+0x4c64c>
   52dec:	mov	r0, r5
   52df0:	add	r3, pc, r3
   52df4:	mov	r1, r3
   52df8:	str	r3, [sp, #20]
   52dfc:	bl	7314 <strcmp@plt>
   52e00:	cmp	r0, #0
   52e04:	beq	539f8 <blkid_probe_get_size@plt+0x4c4e0>
   52e08:	ldr	r1, [pc, #3416]	; 53b68 <blkid_probe_get_size@plt+0x4c650>
   52e0c:	mov	r0, r5
   52e10:	add	r1, pc, r1
   52e14:	bl	7314 <strcmp@plt>
   52e18:	cmp	r0, #0
   52e1c:	bne	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   52e20:	ldr	r1, [pc, #3396]	; 53b6c <blkid_probe_get_size@plt+0x4c654>
   52e24:	add	r2, sp, #116	; 0x74
   52e28:	add	r1, pc, r1
   52e2c:	mov	r0, r7
   52e30:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   52e34:	cmp	r0, #0
   52e38:	blt	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   52e3c:	ldr	r1, [pc, #3372]	; 53b70 <blkid_probe_get_size@plt+0x4c658>
   52e40:	ldr	r2, [sp, #116]	; 0x74
   52e44:	add	r1, pc, r1
   52e48:	add	r0, sp, #28
   52e4c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   52e50:	ldr	r1, [pc, #3356]	; 53b74 <blkid_probe_get_size@plt+0x4c65c>
   52e54:	ldr	r0, [sp, #32]
   52e58:	add	r1, pc, r1
   52e5c:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   52e60:	mov	r4, #1
   52e64:	mov	r8, r4
   52e68:	str	r0, [sp, #32]
   52e6c:	b	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   52e70:	ldr	r5, [sp, #32]
   52e74:	add	r1, sp, #108	; 0x6c
   52e78:	mov	r0, r5
   52e7c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   52e80:	cmp	r0, #0
   52e84:	blt	52ea8 <blkid_probe_get_size@plt+0x4b990>
   52e88:	ldr	r1, [pc, #3304]	; 53b78 <blkid_probe_get_size@plt+0x4c660>
   52e8c:	add	r3, sp, #116	; 0x74
   52e90:	add	r2, sp, #112	; 0x70
   52e94:	add	r1, pc, r1
   52e98:	ldr	r0, [sp, #108]	; 0x6c
   52e9c:	bl	735c <sscanf@plt>
   52ea0:	cmp	r0, #2
   52ea4:	beq	53198 <blkid_probe_get_size@plt+0x4bc80>
   52ea8:	mov	r8, #1
   52eac:	mov	r3, #0
   52eb0:	str	r3, [sp, #32]
   52eb4:	ldr	r3, [sp, #28]
   52eb8:	cmp	r3, #0
   52ebc:	moveq	r4, #0
   52ec0:	cmp	r4, #0
   52ec4:	beq	5338c <blkid_probe_get_size@plt+0x4be74>
   52ec8:	add	r1, sp, #116	; 0x74
   52ecc:	mov	r0, r7
   52ed0:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   52ed4:	cmp	r0, #0
   52ed8:	ldrlt	r3, [sp, #28]
   52edc:	blt	52f08 <blkid_probe_get_size@plt+0x4b9f0>
   52ee0:	ldr	r1, [pc, #3220]	; 53b7c <blkid_probe_get_size@plt+0x4c664>
   52ee4:	ldr	r0, [sp, #116]	; 0x74
   52ee8:	add	r1, pc, r1
   52eec:	bl	7314 <strcmp@plt>
   52ef0:	ldr	r3, [sp, #28]
   52ef4:	cmp	r0, #0
   52ef8:	moveq	r0, r8
   52efc:	movne	r0, #1
   52f00:	cmp	r0, #0
   52f04:	beq	5338c <blkid_probe_get_size@plt+0x4be74>
   52f08:	ldrb	r2, [r3]
   52f0c:	cmp	r2, #0
   52f10:	movne	ip, r3
   52f14:	movne	r0, #0
   52f18:	movne	r4, #95	; 0x5f
   52f1c:	bne	52f60 <blkid_probe_get_size@plt+0x4ba48>
   52f20:	b	5325c <blkid_probe_get_size@plt+0x4bd44>
   52f24:	sub	r1, r2, #97	; 0x61
   52f28:	cmp	r2, #45	; 0x2d
   52f2c:	cmpne	r1, #25
   52f30:	bls	52f74 <blkid_probe_get_size@plt+0x4ba5c>
   52f34:	cmp	r0, #0
   52f38:	beq	52f54 <blkid_probe_get_size@plt+0x4ba3c>
   52f3c:	add	r2, sp, #648	; 0x288
   52f40:	add	r2, r2, r0
   52f44:	ldrb	r1, [r2, #-517]	; 0xfffffdfb
   52f48:	cmp	r1, #95	; 0x5f
   52f4c:	addne	r0, r0, #1
   52f50:	strbne	r4, [r2, #-516]	; 0xfffffdfc
   52f54:	ldrb	r2, [ip, #1]!
   52f58:	cmp	r2, #0
   52f5c:	beq	52f90 <blkid_probe_get_size@plt+0x4ba78>
   52f60:	sub	r1, r2, #48	; 0x30
   52f64:	sub	lr, r2, #65	; 0x41
   52f68:	cmp	lr, #25
   52f6c:	cmphi	r1, #9
   52f70:	bhi	52f24 <blkid_probe_get_size@plt+0x4ba0c>
   52f74:	add	r1, sp, #648	; 0x288
   52f78:	add	r1, r1, r0
   52f7c:	add	r0, r0, #1
   52f80:	strb	r2, [r1, #-516]	; 0xfffffdfc
   52f84:	ldrb	r2, [ip, #1]!
   52f88:	cmp	r2, #0
   52f8c:	bne	52f60 <blkid_probe_get_size@plt+0x4ba48>
   52f90:	cmp	r0, #0
   52f94:	beq	5325c <blkid_probe_get_size@plt+0x4bd44>
   52f98:	sub	r2, r0, #1
   52f9c:	add	r1, sp, #648	; 0x288
   52fa0:	add	r1, r1, r2
   52fa4:	ldrb	r1, [r1, #-516]	; 0xfffffdfc
   52fa8:	cmp	r1, #95	; 0x5f
   52fac:	bne	532e8 <blkid_probe_get_size@plt+0x4bdd0>
   52fb0:	add	r4, sp, #132	; 0x84
   52fb4:	add	r1, r4, r2
   52fb8:	b	52fd0 <blkid_probe_get_size@plt+0x4bab8>
   52fbc:	ldrb	r0, [r1, #-1]!
   52fc0:	sub	ip, r2, #1
   52fc4:	cmp	r0, #95	; 0x5f
   52fc8:	bne	52fdc <blkid_probe_get_size@plt+0x4bac4>
   52fcc:	mov	r2, ip
   52fd0:	cmp	r2, #0
   52fd4:	bne	52fbc <blkid_probe_get_size@plt+0x4baa4>
   52fd8:	mov	r2, #0
   52fdc:	add	r1, sp, #648	; 0x288
   52fe0:	add	ip, r1, r2
   52fe4:	ldr	r2, [pc, #2964]	; 53b80 <blkid_probe_get_size@plt+0x4c668>
   52fe8:	mov	r1, r9
   52fec:	add	r2, pc, r2
   52ff0:	mov	r5, #0
   52ff4:	mov	r0, r7
   52ff8:	strb	r5, [ip, #-516]	; 0xfffffdfc
   52ffc:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   53000:	ldr	r2, [pc, #2940]	; 53b84 <blkid_probe_get_size@plt+0x4c66c>
   53004:	mov	r3, r4
   53008:	mov	r1, r9
   5300c:	mov	r0, r7
   53010:	add	r2, pc, r2
   53014:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   53018:	ldr	r3, [sp, #28]
   5301c:	mov	r0, r3
   53020:	bl	69f0 <free@plt>
   53024:	ldr	r3, [sp, #12]
   53028:	ldr	r2, [sp, #644]	; 0x284
   5302c:	mov	r0, r5
   53030:	ldr	r3, [r3]
   53034:	cmp	r2, r3
   53038:	bne	53a6c <blkid_probe_get_size@plt+0x4c554>
   5303c:	add	sp, sp, #652	; 0x28c
   53040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53044:	ldr	r3, [sp, #28]
   53048:	ldr	r5, [sp, #32]
   5304c:	cmp	r3, #0
   53050:	bne	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   53054:	mov	r0, r5
   53058:	add	r1, sp, #116	; 0x74
   5305c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53060:	cmp	r0, #0
   53064:	blt	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53068:	ldr	r5, [sp, #116]	; 0x74
   5306c:	ldr	r1, [pc, #2836]	; 53b88 <blkid_probe_get_size@plt+0x4c670>
   53070:	mov	r2, #3
   53074:	mov	r0, r5
   53078:	add	r1, pc, r1
   5307c:	bl	6a5c <strncmp@plt>
   53080:	cmp	r0, #0
   53084:	bne	53334 <blkid_probe_get_size@plt+0x4be1c>
   53088:	cmn	r5, #3
   5308c:	beq	53334 <blkid_probe_get_size@plt+0x4be1c>
   53090:	ldrb	r2, [r5, #3]
   53094:	ldr	r0, [pc, #2800]	; 53b8c <blkid_probe_get_size@plt+0x4c674>
   53098:	mov	r1, r2
   5309c:	add	r0, pc, r0
   530a0:	str	r2, [sp, #20]
   530a4:	bl	74c4 <strchr@plt>
   530a8:	cmp	r0, #0
   530ac:	beq	53334 <blkid_probe_get_size@plt+0x4be1c>
   530b0:	ldr	r1, [pc, #2776]	; 53b90 <blkid_probe_get_size@plt+0x4c678>
   530b4:	ldr	r2, [sp, #20]
   530b8:	add	r1, pc, r1
   530bc:	add	r0, sp, #28
   530c0:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   530c4:	b	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   530c8:	ldr	r5, [sp, #32]
   530cc:	add	r1, sp, #44	; 0x2c
   530d0:	mov	r0, r5
   530d4:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   530d8:	cmp	r0, #0
   530dc:	blt	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   530e0:	ldr	r1, [pc, #2732]	; 53b94 <blkid_probe_get_size@plt+0x4c67c>
   530e4:	ldr	r0, [sp, #44]	; 0x2c
   530e8:	add	r1, pc, r1
   530ec:	bl	7314 <strcmp@plt>
   530f0:	subs	r8, r0, #0
   530f4:	beq	531c8 <blkid_probe_get_size@plt+0x4bcb0>
   530f8:	str	r5, [sp, #32]
   530fc:	mov	r8, #1
   53100:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   53104:	ldr	r5, [sp, #32]
   53108:	add	r1, sp, #112	; 0x70
   5310c:	mov	r0, r5
   53110:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   53114:	cmp	r0, #0
   53118:	blt	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   5311c:	ldr	r3, [pc, #2676]	; 53b98 <blkid_probe_get_size@plt+0x4c680>
   53120:	add	r3, pc, r3
   53124:	ldm	r3, {r0, r1, r2}
   53128:	add	r3, sp, #120	; 0x78
   5312c:	stm	r3, {r0, r1, r2}
   53130:	mov	r0, r3
   53134:	ldr	r1, [sp, #112]	; 0x70
   53138:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   5313c:	cmp	r0, #0
   53140:	beq	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53144:	add	r1, sp, #116	; 0x74
   53148:	mov	r0, r5
   5314c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53150:	cmp	r0, #0
   53154:	blt	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53158:	mov	r1, #45	; 0x2d
   5315c:	ldr	r0, [sp, #116]	; 0x74
   53160:	bl	74c4 <strchr@plt>
   53164:	subs	r2, r0, #0
   53168:	beq	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   5316c:	ldr	r1, [pc, #2600]	; 53b9c <blkid_probe_get_size@plt+0x4c684>
   53170:	add	r2, r2, #1
   53174:	add	r1, pc, r1
   53178:	add	r0, sp, #28
   5317c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53180:	ldr	r1, [pc, #2584]	; 53ba0 <blkid_probe_get_size@plt+0x4c688>
   53184:	mov	r0, r5
   53188:	add	r1, pc, r1
   5318c:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   53190:	mov	r5, r0
   53194:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53198:	ldr	r1, [pc, #2564]	; 53ba4 <blkid_probe_get_size@plt+0x4c68c>
   5319c:	ldr	r2, [sp, #116]	; 0x74
   531a0:	add	r1, pc, r1
   531a4:	add	r0, sp, #28
   531a8:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   531ac:	mov	r0, r5
   531b0:	ldr	r1, [sp, #16]
   531b4:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   531b8:	mov	r8, #1
   531bc:	mov	r5, r0
   531c0:	str	r0, [sp, #32]
   531c4:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   531c8:	ldr	r1, [pc, #2520]	; 53ba8 <blkid_probe_get_size@plt+0x4c690>
   531cc:	add	r2, sp, #48	; 0x30
   531d0:	add	r1, pc, r1
   531d4:	mov	r0, r5
   531d8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   531dc:	cmp	r0, #0
   531e0:	blt	53394 <blkid_probe_get_size@plt+0x4be7c>
   531e4:	ldr	r1, [pc, #2496]	; 53bac <blkid_probe_get_size@plt+0x4c694>
   531e8:	ldr	r2, [sp, #48]	; 0x30
   531ec:	add	r1, pc, r1
   531f0:	add	r0, sp, #28
   531f4:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   531f8:	mov	r0, r5
   531fc:	mov	r1, fp
   53200:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   53204:	mov	r4, #1
   53208:	mov	r5, r0
   5320c:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53210:	add	r1, sp, #116	; 0x74
   53214:	ldr	r0, [sp, #32]
   53218:	bl	35c5c <blkid_probe_get_size@plt+0x2e744>
   5321c:	cmp	r0, #0
   53220:	blt	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53224:	ldr	r2, [sp, #116]	; 0x74
   53228:	cmp	r2, #0
   5322c:	beq	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53230:	ldr	r1, [pc, #2424]	; 53bb0 <blkid_probe_get_size@plt+0x4c698>
   53234:	add	r0, sp, #28
   53238:	add	r1, pc, r1
   5323c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53240:	ldr	r1, [pc, #2412]	; 53bb4 <blkid_probe_get_size@plt+0x4c69c>
   53244:	ldr	r0, [sp, #32]
   53248:	add	r1, pc, r1
   5324c:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   53250:	mov	r5, r0
   53254:	str	r0, [sp, #32]
   53258:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   5325c:	add	r4, sp, #132	; 0x84
   53260:	b	52fd8 <blkid_probe_get_size@plt+0x4bac0>
   53264:	ldr	r5, [sp, #32]
   53268:	add	r1, sp, #112	; 0x70
   5326c:	mov	r0, r5
   53270:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53274:	cmp	r0, #0
   53278:	blt	52ea8 <blkid_probe_get_size@plt+0x4b990>
   5327c:	ldr	r1, [pc, #2356]	; 53bb8 <blkid_probe_get_size@plt+0x4c6a0>
   53280:	add	r2, sp, #116	; 0x74
   53284:	add	r1, pc, r1
   53288:	ldr	r0, [sp, #112]	; 0x70
   5328c:	bl	735c <sscanf@plt>
   53290:	cmp	r0, #1
   53294:	mov	r8, r0
   53298:	bne	52ea8 <blkid_probe_get_size@plt+0x4b990>
   5329c:	ldr	r1, [pc, #2328]	; 53bbc <blkid_probe_get_size@plt+0x4c6a4>
   532a0:	ldr	r2, [sp, #116]	; 0x74
   532a4:	add	r1, pc, r1
   532a8:	add	r0, sp, #28
   532ac:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   532b0:	str	r5, [sp, #32]
   532b4:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   532b8:	ldr	r2, [pc, #2304]	; 53bc0 <blkid_probe_get_size@plt+0x4c6a8>
   532bc:	ldr	r1, [pc, #2304]	; 53bc4 <blkid_probe_get_size@plt+0x4c6ac>
   532c0:	add	r2, pc, r2
   532c4:	add	r2, r2, #1024	; 0x400
   532c8:	add	r2, r2, #8
   532cc:	str	r2, [sp]
   532d0:	ldr	r2, [pc, #2288]	; 53bc8 <blkid_probe_get_size@plt+0x4c6b0>
   532d4:	mov	r3, #528	; 0x210
   532d8:	add	r2, pc, r2
   532dc:	add	r1, pc, r1
   532e0:	mov	r0, #1
   532e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   532e8:	mov	r2, r0
   532ec:	add	r4, sp, #132	; 0x84
   532f0:	b	52fdc <blkid_probe_get_size@plt+0x4bac4>
   532f4:	ldr	r1, [pc, #2256]	; 53bcc <blkid_probe_get_size@plt+0x4c6b4>
   532f8:	ldr	r2, [sp, #40]	; 0x28
   532fc:	add	r1, pc, r1
   53300:	add	r0, sp, #28
   53304:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53308:	ldr	r1, [sp, #20]
   5330c:	ldr	r0, [sp, #32]
   53310:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   53314:	mov	r4, #1
   53318:	mov	r5, r0
   5331c:	str	r0, [sp, #32]
   53320:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   53324:	ldr	r1, [pc, #2212]	; 53bd0 <blkid_probe_get_size@plt+0x4c6b8>
   53328:	ldr	r2, [sp, #40]	; 0x28
   5332c:	add	r1, pc, r1
   53330:	b	53300 <blkid_probe_get_size@plt+0x4bde8>
   53334:	ldr	r1, [pc, #2200]	; 53bd4 <blkid_probe_get_size@plt+0x4c6bc>
   53338:	mov	r2, #2
   5333c:	add	r1, pc, r1
   53340:	mov	r0, r5
   53344:	bl	6a5c <strncmp@plt>
   53348:	cmp	r0, #0
   5334c:	bne	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53350:	cmn	r5, #2
   53354:	beq	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53358:	ldrb	r5, [r5, #2]
   5335c:	ldr	r0, [pc, #2164]	; 53bd8 <blkid_probe_get_size@plt+0x4c6c0>
   53360:	mov	r1, r5
   53364:	add	r0, pc, r0
   53368:	bl	74c4 <strchr@plt>
   5336c:	cmp	r0, #0
   53370:	beq	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   53374:	ldr	r1, [pc, #2144]	; 53bdc <blkid_probe_get_size@plt+0x4c6c4>
   53378:	mov	r2, r5
   5337c:	add	r1, pc, r1
   53380:	add	r0, sp, #28
   53384:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53388:	b	52bfc <blkid_probe_get_size@plt+0x4b6e4>
   5338c:	mvn	r5, #1
   53390:	b	5301c <blkid_probe_get_size@plt+0x4bb04>
   53394:	add	r1, sp, #52	; 0x34
   53398:	mov	r0, r5
   5339c:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   533a0:	cmp	r0, #0
   533a4:	blt	53938 <blkid_probe_get_size@plt+0x4c420>
   533a8:	ldr	r3, [sp, #52]	; 0x34
   533ac:	ldr	r1, [pc, #2092]	; 53be0 <blkid_probe_get_size@plt+0x4c6c8>
   533b0:	mov	r0, r3
   533b4:	add	r1, pc, r1
   533b8:	str	r3, [sp, #20]
   533bc:	bl	7050 <strstr@plt>
   533c0:	cmp	r0, #0
   533c4:	beq	534c4 <blkid_probe_get_size@plt+0x4bfac>
   533c8:	cmp	r5, #0
   533cc:	str	r8, [sp, #104]	; 0x68
   533d0:	str	r8, [sp, #116]	; 0x74
   533d4:	beq	5388c <blkid_probe_get_size@plt+0x4c374>
   533d8:	ldr	r2, [pc, #2052]	; 53be4 <blkid_probe_get_size@plt+0x4c6cc>
   533dc:	ldr	r1, [pc, #2052]	; 53be8 <blkid_probe_get_size@plt+0x4c6d0>
   533e0:	add	r3, sp, #100	; 0x64
   533e4:	add	r2, pc, r2
   533e8:	add	r1, pc, r1
   533ec:	mov	r0, r5
   533f0:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   533f4:	cmp	r0, #0
   533f8:	blt	5375c <blkid_probe_get_size@plt+0x4c244>
   533fc:	add	r1, sp, #112	; 0x70
   53400:	ldr	r0, [sp, #100]	; 0x64
   53404:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53408:	cmp	r0, #0
   5340c:	blt	5375c <blkid_probe_get_size@plt+0x4c244>
   53410:	ldr	r1, [pc, #2004]	; 53bec <blkid_probe_get_size@plt+0x4c6d4>
   53414:	ldr	r2, [sp, #112]	; 0x70
   53418:	add	r1, pc, r1
   5341c:	add	r0, sp, #104	; 0x68
   53420:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   53424:	cmp	r0, #0
   53428:	blt	5375c <blkid_probe_get_size@plt+0x4c244>
   5342c:	ldr	r1, [pc, #1980]	; 53bf0 <blkid_probe_get_size@plt+0x4c6d8>
   53430:	add	r2, sp, #108	; 0x6c
   53434:	add	r1, pc, r1
   53438:	ldr	r0, [sp, #104]	; 0x68
   5343c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   53440:	cmp	r0, #0
   53444:	blt	5375c <blkid_probe_get_size@plt+0x4c244>
   53448:	add	r1, sp, #116	; 0x74
   5344c:	mov	r0, r5
   53450:	bl	4f05c <blkid_probe_get_size@plt+0x47b44>
   53454:	ldr	r1, [pc, #1944]	; 53bf4 <blkid_probe_get_size@plt+0x4c6dc>
   53458:	ldr	r3, [sp, #116]	; 0x74
   5345c:	ldr	r2, [sp, #108]	; 0x6c
   53460:	add	r1, pc, r1
   53464:	add	r0, sp, #28
   53468:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   5346c:	ldr	r0, [sp, #116]	; 0x74
   53470:	bl	69f0 <free@plt>
   53474:	ldr	r0, [sp, #104]	; 0x68
   53478:	cmp	r0, #0
   5347c:	beq	53484 <blkid_probe_get_size@plt+0x4bf6c>
   53480:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   53484:	mov	r4, #1
   53488:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   5348c:	ldr	r1, [pc, #1892]	; 53bf8 <blkid_probe_get_size@plt+0x4c6e0>
   53490:	ldr	r2, [sp, #40]	; 0x28
   53494:	add	r1, pc, r1
   53498:	add	r0, sp, #28
   5349c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   534a0:	ldr	r1, [pc, #1876]	; 53bfc <blkid_probe_get_size@plt+0x4c6e4>
   534a4:	add	r1, pc, r1
   534a8:	ldr	r0, [sp, #32]
   534ac:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   534b0:	mov	r4, #1
   534b4:	mov	r8, r4
   534b8:	mov	r5, r0
   534bc:	str	r0, [sp, #32]
   534c0:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   534c4:	ldr	r1, [pc, #1844]	; 53c00 <blkid_probe_get_size@plt+0x4c6e8>
   534c8:	ldr	r0, [sp, #20]
   534cc:	add	r1, pc, r1
   534d0:	bl	7050 <strstr@plt>
   534d4:	cmp	r0, #0
   534d8:	beq	53714 <blkid_probe_get_size@plt+0x4c1fc>
   534dc:	mov	r3, #0
   534e0:	cmp	r5, #0
   534e4:	str	r3, [sp, #68]	; 0x44
   534e8:	str	r3, [sp, #72]	; 0x48
   534ec:	str	r3, [sp, #76]	; 0x4c
   534f0:	str	r3, [sp, #80]	; 0x50
   534f4:	str	r3, [sp, #92]	; 0x5c
   534f8:	beq	53a70 <blkid_probe_get_size@plt+0x4c558>
   534fc:	ldr	r2, [pc, #1792]	; 53c04 <blkid_probe_get_size@plt+0x4c6ec>
   53500:	ldr	r1, [pc, #1792]	; 53c08 <blkid_probe_get_size@plt+0x4c6f0>
   53504:	add	r3, sp, #56	; 0x38
   53508:	add	r2, pc, r2
   5350c:	add	r1, pc, r1
   53510:	mov	r0, r5
   53514:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   53518:	cmp	r0, #0
   5351c:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53520:	add	r1, sp, #60	; 0x3c
   53524:	ldr	r0, [sp, #56]	; 0x38
   53528:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   5352c:	cmp	r0, #0
   53530:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53534:	add	r4, sp, #88	; 0x58
   53538:	mov	r1, r4
   5353c:	ldr	r0, [sp, #60]	; 0x3c
   53540:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53544:	cmp	r0, #0
   53548:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   5354c:	ldr	r1, [pc, #1720]	; 53c0c <blkid_probe_get_size@plt+0x4c6f4>
   53550:	ldr	r2, [sp, #88]	; 0x58
   53554:	add	r1, pc, r1
   53558:	add	r0, sp, #68	; 0x44
   5355c:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   53560:	cmp	r0, #0
   53564:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53568:	add	r1, sp, #64	; 0x40
   5356c:	ldr	r0, [sp, #60]	; 0x3c
   53570:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   53574:	cmp	r0, #0
   53578:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   5357c:	mov	r1, r4
   53580:	ldr	r0, [sp, #64]	; 0x40
   53584:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53588:	cmp	r0, #0
   5358c:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53590:	ldr	r1, [pc, #1656]	; 53c10 <blkid_probe_get_size@plt+0x4c6f8>
   53594:	ldr	r2, [sp, #88]	; 0x58
   53598:	add	r1, pc, r1
   5359c:	add	r0, sp, #76	; 0x4c
   535a0:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   535a4:	cmp	r0, #0
   535a8:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   535ac:	ldr	r1, [pc, #1632]	; 53c14 <blkid_probe_get_size@plt+0x4c6fc>
   535b0:	add	r2, sp, #84	; 0x54
   535b4:	add	r1, pc, r1
   535b8:	ldr	r0, [sp, #76]	; 0x4c
   535bc:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   535c0:	cmp	r0, #0
   535c4:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   535c8:	ldr	r1, [pc, #1608]	; 53c18 <blkid_probe_get_size@plt+0x4c700>
   535cc:	mov	r2, #2
   535d0:	add	r1, pc, r1
   535d4:	ldr	r0, [sp, #84]	; 0x54
   535d8:	bl	6a5c <strncmp@plt>
   535dc:	cmp	r0, #0
   535e0:	beq	53944 <blkid_probe_get_size@plt+0x4c42c>
   535e4:	ldr	r2, [pc, #1584]	; 53c1c <blkid_probe_get_size@plt+0x4c704>
   535e8:	ldr	r1, [pc, #1584]	; 53c20 <blkid_probe_get_size@plt+0x4c708>
   535ec:	mov	ip, #0
   535f0:	add	r3, sp, #96	; 0x60
   535f4:	add	r2, pc, r2
   535f8:	add	r1, pc, r1
   535fc:	mov	r0, r5
   53600:	str	ip, [sp, #104]	; 0x68
   53604:	str	ip, [sp, #116]	; 0x74
   53608:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   5360c:	cmp	r0, #0
   53610:	blt	53ab8 <blkid_probe_get_size@plt+0x4c5a0>
   53614:	add	r1, sp, #100	; 0x64
   53618:	ldr	r0, [sp, #96]	; 0x60
   5361c:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   53620:	cmp	r0, #0
   53624:	blt	53ab8 <blkid_probe_get_size@plt+0x4c5a0>
   53628:	add	r1, sp, #112	; 0x70
   5362c:	ldr	r0, [sp, #100]	; 0x64
   53630:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53634:	cmp	r0, #0
   53638:	blt	53ab8 <blkid_probe_get_size@plt+0x4c5a0>
   5363c:	ldr	r1, [pc, #1504]	; 53c24 <blkid_probe_get_size@plt+0x4c70c>
   53640:	ldr	r2, [sp, #112]	; 0x70
   53644:	add	r1, pc, r1
   53648:	add	r0, sp, #104	; 0x68
   5364c:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   53650:	cmp	r0, #0
   53654:	blt	53ab8 <blkid_probe_get_size@plt+0x4c5a0>
   53658:	ldr	r1, [pc, #1480]	; 53c28 <blkid_probe_get_size@plt+0x4c710>
   5365c:	add	r2, sp, #108	; 0x6c
   53660:	add	r1, pc, r1
   53664:	ldr	r0, [sp, #104]	; 0x68
   53668:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   5366c:	cmp	r0, #0
   53670:	blt	53ab8 <blkid_probe_get_size@plt+0x4c5a0>
   53674:	add	r1, sp, #116	; 0x74
   53678:	mov	r0, r5
   5367c:	bl	4f05c <blkid_probe_get_size@plt+0x47b44>
   53680:	ldr	r1, [pc, #1444]	; 53c2c <blkid_probe_get_size@plt+0x4c714>
   53684:	ldr	r3, [sp, #116]	; 0x74
   53688:	ldr	r2, [sp, #108]	; 0x6c
   5368c:	add	r1, pc, r1
   53690:	add	r0, sp, #28
   53694:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53698:	ldr	r0, [sp, #116]	; 0x74
   5369c:	bl	69f0 <free@plt>
   536a0:	ldr	r0, [sp, #104]	; 0x68
   536a4:	cmp	r0, #0
   536a8:	beq	536b0 <blkid_probe_get_size@plt+0x4c198>
   536ac:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   536b0:	ldr	r0, [sp, #92]	; 0x5c
   536b4:	bl	69f0 <free@plt>
   536b8:	ldr	r0, [sp, #76]	; 0x4c
   536bc:	cmp	r0, #0
   536c0:	beq	536c8 <blkid_probe_get_size@plt+0x4c1b0>
   536c4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   536c8:	ldr	r0, [sp, #72]	; 0x48
   536cc:	cmp	r0, #0
   536d0:	beq	536d8 <blkid_probe_get_size@plt+0x4c1c0>
   536d4:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   536d8:	ldr	r0, [sp, #68]	; 0x44
   536dc:	cmp	r0, #0
   536e0:	bne	53480 <blkid_probe_get_size@plt+0x4bf68>
   536e4:	b	53484 <blkid_probe_get_size@plt+0x4bf6c>
   536e8:	ldr	r1, [pc, #1344]	; 53c30 <blkid_probe_get_size@plt+0x4c718>
   536ec:	ldr	r2, [sp, #40]	; 0x28
   536f0:	add	r1, pc, r1
   536f4:	b	53300 <blkid_probe_get_size@plt+0x4bde8>
   536f8:	mov	r1, r3
   536fc:	ldr	r0, [sp, #32]
   53700:	bl	4ee54 <blkid_probe_get_size@plt+0x4793c>
   53704:	mov	r8, #1
   53708:	mov	r5, r0
   5370c:	str	r0, [sp, #32]
   53710:	b	52c00 <blkid_probe_get_size@plt+0x4b6e8>
   53714:	ldr	r1, [pc, #1304]	; 53c34 <blkid_probe_get_size@plt+0x4c71c>
   53718:	ldr	r0, [sp, #20]
   5371c:	add	r1, pc, r1
   53720:	bl	7050 <strstr@plt>
   53724:	subs	r8, r0, #0
   53728:	beq	53774 <blkid_probe_get_size@plt+0x4c25c>
   5372c:	mov	r0, r5
   53730:	add	r1, sp, #28
   53734:	bl	4f2b4 <blkid_probe_get_size@plt+0x47d9c>
   53738:	mov	r5, r0
   5373c:	b	53484 <blkid_probe_get_size@plt+0x4bf6c>
   53740:	ldr	r1, [pc, #1264]	; 53c38 <blkid_probe_get_size@plt+0x4c720>
   53744:	ldr	r2, [sp, #40]	; 0x28
   53748:	add	r1, pc, r1
   5374c:	add	r0, sp, #28
   53750:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53754:	ldr	r1, [sp, #20]
   53758:	b	534a8 <blkid_probe_get_size@plt+0x4bf90>
   5375c:	mov	r5, #0
   53760:	b	5346c <blkid_probe_get_size@plt+0x4bf54>
   53764:	ldr	r1, [pc, #1232]	; 53c3c <blkid_probe_get_size@plt+0x4c724>
   53768:	ldr	r2, [sp, #40]	; 0x28
   5376c:	add	r1, pc, r1
   53770:	b	5374c <blkid_probe_get_size@plt+0x4c234>
   53774:	ldr	r1, [pc, #1220]	; 53c40 <blkid_probe_get_size@plt+0x4c728>
   53778:	ldr	r0, [sp, #20]
   5377c:	add	r1, pc, r1
   53780:	bl	7050 <strstr@plt>
   53784:	cmp	r0, #0
   53788:	beq	5385c <blkid_probe_get_size@plt+0x4c344>
   5378c:	cmp	r5, #0
   53790:	str	r8, [sp, #108]	; 0x6c
   53794:	beq	53ac0 <blkid_probe_get_size@plt+0x4c5a8>
   53798:	ldr	r2, [pc, #1188]	; 53c44 <blkid_probe_get_size@plt+0x4c72c>
   5379c:	ldr	r1, [pc, #1188]	; 53c48 <blkid_probe_get_size@plt+0x4c730>
   537a0:	add	r3, sp, #100	; 0x64
   537a4:	add	r2, pc, r2
   537a8:	add	r1, pc, r1
   537ac:	mov	r0, r5
   537b0:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   537b4:	cmp	r0, #0
   537b8:	blt	53ab0 <blkid_probe_get_size@plt+0x4c598>
   537bc:	add	r1, sp, #104	; 0x68
   537c0:	ldr	r0, [sp, #100]	; 0x64
   537c4:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   537c8:	cmp	r0, #0
   537cc:	blt	53ab0 <blkid_probe_get_size@plt+0x4c598>
   537d0:	add	r1, sp, #116	; 0x74
   537d4:	ldr	r0, [sp, #104]	; 0x68
   537d8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   537dc:	cmp	r0, #0
   537e0:	blt	53ab0 <blkid_probe_get_size@plt+0x4c598>
   537e4:	ldr	r1, [pc, #1120]	; 53c4c <blkid_probe_get_size@plt+0x4c734>
   537e8:	ldr	r2, [sp, #116]	; 0x74
   537ec:	add	r1, pc, r1
   537f0:	add	r0, sp, #108	; 0x6c
   537f4:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   537f8:	cmp	r0, #0
   537fc:	blt	53ab0 <blkid_probe_get_size@plt+0x4c598>
   53800:	ldr	r1, [pc, #1096]	; 53c50 <blkid_probe_get_size@plt+0x4c738>
   53804:	add	r2, sp, #112	; 0x70
   53808:	add	r1, pc, r1
   5380c:	ldr	r0, [sp, #108]	; 0x6c
   53810:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   53814:	cmp	r0, #0
   53818:	blt	53ab0 <blkid_probe_get_size@plt+0x4c598>
   5381c:	ldr	r1, [pc, #1072]	; 53c54 <blkid_probe_get_size@plt+0x4c73c>
   53820:	ldr	r2, [sp, #112]	; 0x70
   53824:	add	r1, pc, r1
   53828:	add	r0, sp, #28
   5382c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53830:	ldr	r0, [sp, #108]	; 0x6c
   53834:	cmp	r0, #0
   53838:	beq	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   5383c:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   53840:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53844:	mov	r5, #0
   53848:	b	536b0 <blkid_probe_get_size@plt+0x4c198>
   5384c:	ldr	r1, [pc, #1028]	; 53c58 <blkid_probe_get_size@plt+0x4c740>
   53850:	ldr	r2, [sp, #40]	; 0x28
   53854:	add	r1, pc, r1
   53858:	b	5374c <blkid_probe_get_size@plt+0x4c234>
   5385c:	ldr	r1, [pc, #1016]	; 53c5c <blkid_probe_get_size@plt+0x4c744>
   53860:	ldr	r0, [sp, #20]
   53864:	add	r1, pc, r1
   53868:	bl	7050 <strstr@plt>
   5386c:	cmp	r0, #0
   53870:	beq	53a08 <blkid_probe_get_size@plt+0x4c4f0>
   53874:	mov	r0, r5
   53878:	mov	r2, #37	; 0x25
   5387c:	add	r1, sp, #28
   53880:	bl	4f118 <blkid_probe_get_size@plt+0x47c00>
   53884:	mov	r5, r0
   53888:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   5388c:	ldr	r2, [pc, #972]	; 53c60 <blkid_probe_get_size@plt+0x4c748>
   53890:	ldr	r1, [pc, #972]	; 53c64 <blkid_probe_get_size@plt+0x4c74c>
   53894:	add	r2, pc, r2
   53898:	add	r2, r2, #1040	; 0x410
   5389c:	add	r2, r2, #8
   538a0:	str	r2, [sp]
   538a4:	ldr	r2, [pc, #956]	; 53c68 <blkid_probe_get_size@plt+0x4c750>
   538a8:	mov	r3, #110	; 0x6e
   538ac:	add	r2, pc, r2
   538b0:	add	r1, pc, r1
   538b4:	mov	r0, #1
   538b8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   538bc:	ldr	r4, [sp, #32]
   538c0:	cmp	r4, #0
   538c4:	beq	53af0 <blkid_probe_get_size@plt+0x4c5d8>
   538c8:	ldr	r1, [pc, #924]	; 53c6c <blkid_probe_get_size@plt+0x4c754>
   538cc:	add	r2, sp, #108	; 0x6c
   538d0:	add	r1, pc, r1
   538d4:	mov	r0, r4
   538d8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   538dc:	cmp	r0, #0
   538e0:	blt	53900 <blkid_probe_get_size@plt+0x4c3e8>
   538e4:	ldr	r1, [pc, #900]	; 53c70 <blkid_probe_get_size@plt+0x4c758>
   538e8:	add	r2, sp, #112	; 0x70
   538ec:	add	r1, pc, r1
   538f0:	mov	r0, r4
   538f4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   538f8:	cmp	r0, #0
   538fc:	bge	53a54 <blkid_probe_get_size@plt+0x4c53c>
   53900:	add	r1, sp, #116	; 0x74
   53904:	mov	r0, r4
   53908:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5390c:	cmp	r0, #0
   53910:	blt	53928 <blkid_probe_get_size@plt+0x4c410>
   53914:	ldr	r1, [pc, #856]	; 53c74 <blkid_probe_get_size@plt+0x4c75c>
   53918:	ldr	r2, [sp, #116]	; 0x74
   5391c:	add	r1, pc, r1
   53920:	add	r0, sp, #28
   53924:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53928:	ldr	r1, [pc, #840]	; 53c78 <blkid_probe_get_size@plt+0x4c760>
   5392c:	mov	r0, r4
   53930:	add	r1, pc, r1
   53934:	b	534ac <blkid_probe_get_size@plt+0x4bf94>
   53938:	str	r8, [sp, #32]
   5393c:	mov	r8, #1
   53940:	b	52eb4 <blkid_probe_get_size@plt+0x4b99c>
   53944:	ldr	r1, [pc, #816]	; 53c7c <blkid_probe_get_size@plt+0x4c764>
   53948:	add	r2, sp, #116	; 0x74
   5394c:	add	r1, pc, r1
   53950:	ldr	r0, [sp, #68]	; 0x44
   53954:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   53958:	cmp	r0, #0
   5395c:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53960:	add	r1, sp, #112	; 0x70
   53964:	ldr	r0, [sp, #64]	; 0x40
   53968:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   5396c:	cmp	r0, #0
   53970:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53974:	mov	r1, r4
   53978:	ldr	r0, [sp, #112]	; 0x70
   5397c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53980:	cmp	r0, #0
   53984:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   53988:	ldr	r1, [pc, #752]	; 53c80 <blkid_probe_get_size@plt+0x4c768>
   5398c:	ldr	r2, [sp, #88]	; 0x58
   53990:	add	r1, pc, r1
   53994:	add	r0, sp, #72	; 0x48
   53998:	bl	25664 <blkid_probe_get_size@plt+0x1e14c>
   5399c:	cmp	r0, #0
   539a0:	blt	539c0 <blkid_probe_get_size@plt+0x4c4a8>
   539a4:	ldr	r1, [pc, #728]	; 53c84 <blkid_probe_get_size@plt+0x4c76c>
   539a8:	add	r2, sp, #80	; 0x50
   539ac:	add	r1, pc, r1
   539b0:	ldr	r0, [sp, #72]	; 0x48
   539b4:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   539b8:	cmp	r0, #0
   539bc:	blt	53844 <blkid_probe_get_size@plt+0x4c32c>
   539c0:	add	r1, sp, #92	; 0x5c
   539c4:	mov	r0, r5
   539c8:	bl	4f05c <blkid_probe_get_size@plt+0x47b44>
   539cc:	ldr	r2, [sp, #80]	; 0x50
   539d0:	cmp	r2, #0
   539d4:	beq	53a38 <blkid_probe_get_size@plt+0x4c520>
   539d8:	ldr	r3, [sp, #92]	; 0x5c
   539dc:	ldr	r1, [pc, #676]	; 53c88 <blkid_probe_get_size@plt+0x4c770>
   539e0:	str	r3, [sp]
   539e4:	add	r1, pc, r1
   539e8:	ldr	r3, [sp, #116]	; 0x74
   539ec:	add	r0, sp, #28
   539f0:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   539f4:	b	536b0 <blkid_probe_get_size@plt+0x4c198>
   539f8:	ldr	r1, [pc, #652]	; 53c8c <blkid_probe_get_size@plt+0x4c774>
   539fc:	ldr	r2, [sp, #40]	; 0x28
   53a00:	add	r1, pc, r1
   53a04:	b	5374c <blkid_probe_get_size@plt+0x4c234>
   53a08:	ldr	r1, [pc, #640]	; 53c90 <blkid_probe_get_size@plt+0x4c778>
   53a0c:	ldr	r0, [sp, #20]
   53a10:	add	r1, pc, r1
   53a14:	bl	7050 <strstr@plt>
   53a18:	cmp	r0, #0
   53a1c:	mov	r0, r5
   53a20:	beq	53aa0 <blkid_probe_get_size@plt+0x4c588>
   53a24:	mov	r2, #38	; 0x26
   53a28:	add	r1, sp, #28
   53a2c:	bl	4f118 <blkid_probe_get_size@plt+0x47c00>
   53a30:	mov	r5, r0
   53a34:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53a38:	ldr	r1, [pc, #596]	; 53c94 <blkid_probe_get_size@plt+0x4c77c>
   53a3c:	ldr	r3, [sp, #92]	; 0x5c
   53a40:	ldr	r2, [sp, #116]	; 0x74
   53a44:	add	r1, pc, r1
   53a48:	add	r0, sp, #28
   53a4c:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53a50:	b	536b0 <blkid_probe_get_size@plt+0x4c198>
   53a54:	ldr	r1, [pc, #572]	; 53c98 <blkid_probe_get_size@plt+0x4c780>
   53a58:	ldrd	r2, [sp, #108]	; 0x6c
   53a5c:	add	r1, pc, r1
   53a60:	add	r0, sp, #28
   53a64:	bl	4ef34 <blkid_probe_get_size@plt+0x47a1c>
   53a68:	b	53928 <blkid_probe_get_size@plt+0x4c410>
   53a6c:	bl	6fb4 <__stack_chk_fail@plt>
   53a70:	ldr	r2, [pc, #548]	; 53c9c <blkid_probe_get_size@plt+0x4c784>
   53a74:	ldr	r1, [pc, #548]	; 53ca0 <blkid_probe_get_size@plt+0x4c788>
   53a78:	add	r2, pc, r2
   53a7c:	add	r2, r2, #1072	; 0x430
   53a80:	add	r2, r2, #4
   53a84:	str	r2, [sp]
   53a88:	ldr	r2, [pc, #532]	; 53ca4 <blkid_probe_get_size@plt+0x4c78c>
   53a8c:	mov	r3, #160	; 0xa0
   53a90:	add	r2, pc, r2
   53a94:	add	r1, pc, r1
   53a98:	mov	r0, #1
   53a9c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   53aa0:	add	r1, sp, #28
   53aa4:	bl	879c <blkid_probe_get_size@plt+0x1284>
   53aa8:	mov	r5, r0
   53aac:	b	530f8 <blkid_probe_get_size@plt+0x4bbe0>
   53ab0:	mov	r5, #0
   53ab4:	b	53830 <blkid_probe_get_size@plt+0x4c318>
   53ab8:	mov	r5, #0
   53abc:	b	53698 <blkid_probe_get_size@plt+0x4c180>
   53ac0:	ldr	r2, [pc, #480]	; 53ca8 <blkid_probe_get_size@plt+0x4c790>
   53ac4:	ldr	r1, [pc, #480]	; 53cac <blkid_probe_get_size@plt+0x4c794>
   53ac8:	add	r2, pc, r2
   53acc:	add	r2, r2, #1088	; 0x440
   53ad0:	add	r2, r2, #4
   53ad4:	str	r2, [sp]
   53ad8:	ldr	r2, [pc, #464]	; 53cb0 <blkid_probe_get_size@plt+0x4c798>
   53adc:	ldr	r3, [pc, #464]	; 53cb4 <blkid_probe_get_size@plt+0x4c79c>
   53ae0:	add	r2, pc, r2
   53ae4:	add	r1, pc, r1
   53ae8:	mov	r0, #1
   53aec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   53af0:	ldr	r2, [pc, #448]	; 53cb8 <blkid_probe_get_size@plt+0x4c7a0>
   53af4:	ldr	r1, [pc, #448]	; 53cbc <blkid_probe_get_size@plt+0x4c7a4>
   53af8:	add	r2, pc, r2
   53afc:	add	r2, r2, #1104	; 0x450
   53b00:	add	r2, r2, #4
   53b04:	str	r2, [sp]
   53b08:	ldr	r2, [pc, #432]	; 53cc0 <blkid_probe_get_size@plt+0x4c7a8>
   53b0c:	ldr	r3, [pc, #432]	; 53cc4 <blkid_probe_get_size@plt+0x4c7ac>
   53b10:	add	r2, pc, r2
   53b14:	add	r1, pc, r1
   53b18:	mov	r0, #1
   53b1c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   53b20:	andeq	r4, r4, ip, asr #31
   53b24:	andeq	r0, r0, ip, lsr r4
   53b28:	andeq	r0, r2, r8, ror sp
   53b2c:	andeq	r0, r2, r8, lsr ip
   53b30:	andeq	r8, r1, r4, lsr r2
   53b34:	strdeq	r8, [r1], -r0
   53b38:	ldrdeq	r0, [r2], -r4
   53b3c:	andeq	r0, r2, r4, lsl #17
   53b40:	andeq	r0, r2, r8, lsr #12
   53b44:			; <UNDEFINED> instruction: 0x00020cb4
   53b48:			; <UNDEFINED> instruction: 0x00020cb4
   53b4c:	andeq	r0, r2, r4, lsr #25
   53b50:			; <UNDEFINED> instruction: 0x000202b8
   53b54:	andeq	r0, r2, ip, ror #24
   53b58:	andeq	r0, r2, r8, asr ip
   53b5c:	andeq	r0, r2, r4, asr #24
   53b60:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   53b64:	andeq	r0, r2, r8, asr #24
   53b68:	andeq	r0, r2, r8, lsr ip
   53b6c:	andeq	r0, r2, r8, lsr #24
   53b70:	andeq	r0, r2, r4, lsl ip
   53b74:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   53b78:	andeq	r0, r2, r4, asr #21
   53b7c:	strdeq	r1, [r1], -r0
   53b80:	andeq	fp, r1, r0, lsr r4
   53b84:	andeq	r0, r2, r0, asr sl
   53b88:	andeq	r0, r2, r8, lsr #15
   53b8c:	andeq	r0, r2, r8, lsl #15
   53b90:	andeq	r0, r2, r0, ror r7
   53b94:	andeq	r7, r1, r0, lsl #29
   53b98:	andeq	r5, r4, r4, ror r0
   53b9c:	andeq	r0, r2, r0, lsl #16
   53ba0:	strdeq	r7, [r1], -ip
   53ba4:	andeq	r0, r2, r4, asr #15
   53ba8:	andeq	r0, r2, r8, ror #12
   53bac:	andeq	r0, r2, r8, asr r6
   53bb0:	andeq	r0, r2, r4, ror #14
   53bb4:	andeq	r0, r2, r0, lsl #6
   53bb8:	andeq	r0, r2, r4, lsl #14
   53bbc:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   53bc0:	andeq	pc, r1, r4, lsl #13
   53bc4:	andeq	r2, r1, r8, lsr #9
   53bc8:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   53bcc:	andeq	r0, r2, ip, lsr #13
   53bd0:	andeq	r0, r2, r4, lsr #13
   53bd4:	andeq	r6, r1, r0, lsr #28
   53bd8:	andeq	r0, r2, r0, asr #9
   53bdc:			; <UNDEFINED> instruction: 0x000204b4
   53be0:	andeq	r0, r2, r0, lsr #9
   53be4:	andeq	r0, r2, r8, ror r4
   53be8:	andeq	r7, r1, ip, lsr #20
   53bec:	andeq	r0, r2, r0, asr r4
   53bf0:	andeq	r0, r2, r4, asr #8
   53bf4:	andeq	r0, r2, r4, lsr #8
   53bf8:	andeq	r0, r2, r8, lsr #10
   53bfc:	andeq	r0, r2, ip, lsl #10
   53c00:	andeq	r0, r2, r4, asr #7
   53c04:	andeq	r0, r2, r4, asr r3
   53c08:	andeq	r7, r1, r8, lsl #18
   53c0c:	andeq	r0, r2, ip, asr #6
   53c10:	andeq	r0, r2, r4, lsl r3
   53c14:	andeq	r0, r2, r4, lsl #6
   53c18:	andeq	r2, r2, r4, lsl #27
   53c1c:	andeq	r0, r2, r8, ror #4
   53c20:	andeq	r7, r1, ip, lsl r8
   53c24:	andeq	r0, r2, ip, asr r2
   53c28:	andeq	r0, r2, r4, ror #4
   53c2c:	andeq	r0, r2, r4, asr #4
   53c30:	andeq	r0, r2, ip, ror #5
   53c34:	strdeq	r0, [r2], -r4
   53c38:	andeq	r0, r2, r0, lsr #5
   53c3c:	andeq	r0, r2, r8, lsl #5
   53c40:	andeq	r0, r2, r0, lsr #3
   53c44:	muleq	r1, r4, r8
   53c48:	andeq	r7, r1, ip, ror #12
   53c4c:	andeq	r0, r2, r8, lsr r1
   53c50:	andeq	r0, r2, r8, lsr #2
   53c54:	andeq	r0, r2, r4, lsl r1
   53c58:			; <UNDEFINED> instruction: 0x000201b4
   53c5c:	ldrdeq	r0, [r2], -ip
   53c60:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   53c64:	muleq	r1, r8, r7
   53c68:	andeq	pc, r1, r8, ror #14
   53c6c:	andeq	r3, r1, r0, lsr #21
   53c70:	andeq	r0, r2, r8, lsr #2
   53c74:	andeq	r0, r2, r4, lsl r1
   53c78:	andeq	r3, r2, ip, ror r7
   53c7c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   53c80:	andeq	pc, r1, r0, lsl pc	; <UNPREDICTABLE>
   53c84:	andeq	pc, r1, r8, lsl pc	; <UNPREDICTABLE>
   53c88:	andeq	pc, r1, r8, lsl #30
   53c8c:	andeq	r0, r2, r0, asr #32
   53c90:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   53c94:			; <UNDEFINED> instruction: 0x0001febc
   53c98:	andeq	pc, r1, r8, asr #31
   53c9c:	andeq	lr, r1, ip, asr #29
   53ca0:			; <UNDEFINED> instruction: 0x000135b4
   53ca4:	andeq	pc, r1, r4, lsl #11
   53ca8:	andeq	lr, r1, ip, ror lr
   53cac:	andeq	r3, r1, r4, ror #10
   53cb0:	andeq	pc, r1, r4, lsr r5	; <UNPREDICTABLE>
   53cb4:	andeq	r0, r0, r6, lsl #2
   53cb8:	andeq	lr, r1, ip, asr #28
   53cbc:	andeq	r3, r1, r4, lsr r5
   53cc0:	andeq	pc, r1, r4, lsl #10
   53cc4:	strdeq	r0, [r0], -r9
   53cc8:	ldr	r2, [pc, #4052]	; 54ca4 <blkid_probe_get_size@plt+0x4d78c>
   53ccc:	ldr	ip, [pc, #4052]	; 54ca8 <blkid_probe_get_size@plt+0x4d790>
   53cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   53cd4:	add	r2, pc, r2
   53cd8:	sub	sp, sp, #412	; 0x19c
   53cdc:	cmp	r1, #1
   53ce0:	str	r3, [sp, #40]	; 0x28
   53ce4:	mov	r3, r2
   53ce8:	ldr	r2, [r2, ip]
   53cec:	mov	r9, r0
   53cf0:	str	r2, [sp, #36]	; 0x24
   53cf4:	ldr	r3, [r2]
   53cf8:	str	r3, [sp, #404]	; 0x194
   53cfc:	ble	53da4 <blkid_probe_get_size@plt+0x4c88c>
   53d00:	mov	r2, #0
   53d04:	cmp	r0, #0
   53d08:	str	r2, [sp, #136]	; 0x88
   53d0c:	beq	53d9c <blkid_probe_get_size@plt+0x4c884>
   53d10:	ldr	r3, [pc, #3988]	; 54cac <blkid_probe_get_size@plt+0x4d794>
   53d14:	add	r3, pc, r3
   53d18:	ldr	r3, [r3, #4]
   53d1c:	cmp	r3, #2
   53d20:	bgt	540d8 <blkid_probe_get_size@plt+0x4cbc0>
   53d24:	mov	r0, r2
   53d28:	ldr	r3, [pc, #3968]	; 54cb0 <blkid_probe_get_size@plt+0x4d798>
   53d2c:	ldr	r1, [pc, #3968]	; 54cb4 <blkid_probe_get_size@plt+0x4d79c>
   53d30:	stmib	sp, {r0, r2}
   53d34:	add	r3, pc, r3
   53d38:	ldr	r2, [pc, #3960]	; 54cb8 <blkid_probe_get_size@plt+0x4d7a0>
   53d3c:	mov	ip, #0
   53d40:	add	r1, pc, r1
   53d44:	add	r3, r3, #1120	; 0x460
   53d48:	str	r3, [sp]
   53d4c:	str	r1, [sp, #20]
   53d50:	str	ip, [sp, #16]
   53d54:	str	ip, [sp, #12]
   53d58:	mov	r3, #19
   53d5c:	add	r2, pc, r2
   53d60:	mov	r1, #1073741846	; 0x40000016
   53d64:	mov	r0, #3
   53d68:	mov	sl, ip
   53d6c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   53d70:	mov	r4, r0
   53d74:	mov	r0, sl
   53d78:	bl	69f0 <free@plt>
   53d7c:	ldr	r3, [sp, #36]	; 0x24
   53d80:	ldr	r2, [sp, #404]	; 0x194
   53d84:	mov	r0, r4
   53d88:	ldr	r3, [r3]
   53d8c:	cmp	r2, r3
   53d90:	bne	55e4c <blkid_probe_get_size@plt+0x4e934>
   53d94:	add	sp, sp, #412	; 0x19c
   53d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53d9c:	mov	r2, r0
   53da0:	b	53d28 <blkid_probe_get_size@plt+0x4c810>
   53da4:	ldr	r3, [pc, #3856]	; 54cbc <blkid_probe_get_size@plt+0x4d7a4>
   53da8:	add	r2, sp, #136	; 0x88
   53dac:	add	r3, pc, r3
   53db0:	mov	r1, r2
   53db4:	str	r2, [sp, #96]	; 0x60
   53db8:	ldr	r5, [r3]
   53dbc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53dc0:	cmp	r0, #0
   53dc4:	blt	53e64 <blkid_probe_get_size@plt+0x4c94c>
   53dc8:	add	r6, sp, #212	; 0xd4
   53dcc:	mov	r2, #192	; 0xc0
   53dd0:	mov	r1, #0
   53dd4:	mov	r0, r6
   53dd8:	add	r4, sp, #176	; 0xb0
   53ddc:	ldr	r7, [sp, #136]	; 0x88
   53de0:	add	r8, sp, #208	; 0xd0
   53de4:	bl	6c84 <memset@plt>
   53de8:	mov	r3, #3
   53dec:	mov	r0, r4
   53df0:	mov	r2, #32
   53df4:	mov	r1, #0
   53df8:	str	r3, [sp, #208]	; 0xd0
   53dfc:	bl	6c84 <memset@plt>
   53e00:	str	r8, [sp, #192]	; 0xc0
   53e04:	ldr	r3, [r5, #4]
   53e08:	cmp	r3, #0
   53e0c:	blt	542f8 <blkid_probe_get_size@plt+0x4cde0>
   53e10:	mov	r2, r7
   53e14:	mov	r1, #16
   53e18:	mov	r0, r4
   53e1c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   53e20:	mov	r2, r4
   53e24:	ldr	r0, [r5, #4]
   53e28:	ldr	r1, [pc, #3728]	; 54cc0 <blkid_probe_get_size@plt+0x4d7a8>
   53e2c:	bl	6e70 <ioctl@plt>
   53e30:	cmp	r0, #0
   53e34:	blt	540f8 <blkid_probe_get_size@plt+0x4cbe0>
   53e38:	mov	r0, r6
   53e3c:	bl	74e8 <strdup@plt>
   53e40:	subs	sl, r0, #0
   53e44:	beq	53e64 <blkid_probe_get_size@plt+0x4c94c>
   53e48:	ldr	r2, [pc, #3700]	; 54cc4 <blkid_probe_get_size@plt+0x4d7ac>
   53e4c:	mov	r3, sl
   53e50:	add	r2, pc, r2
   53e54:	ldr	r1, [sp, #40]	; 0x28
   53e58:	mov	r0, r9
   53e5c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   53e60:	b	53e68 <blkid_probe_get_size@plt+0x4c950>
   53e64:	mov	sl, #0
   53e68:	ldr	r3, [pc, #3672]	; 54cc8 <blkid_probe_get_size@plt+0x4d7b0>
   53e6c:	add	r3, pc, r3
   53e70:	ldr	r3, [r3]
   53e74:	cmp	r3, #0
   53e78:	beq	547c8 <blkid_probe_get_size@plt+0x4d2b0>
   53e7c:	cmp	r9, #0
   53e80:	beq	547f8 <blkid_probe_get_size@plt+0x4d2e0>
   53e84:	ldr	fp, [r3]
   53e88:	cmp	fp, #0
   53e8c:	beq	5406c <blkid_probe_get_size@plt+0x4cb54>
   53e90:	ldr	r3, [pc, #3636]	; 54ccc <blkid_probe_get_size@plt+0x4d7b4>
   53e94:	add	r2, sp, #112	; 0x70
   53e98:	add	r3, pc, r3
   53e9c:	add	r3, r3, #1184	; 0x4a0
   53ea0:	add	r3, r3, #8
   53ea4:	str	r3, [sp, #104]	; 0x68
   53ea8:	add	r3, sp, #116	; 0x74
   53eac:	str	r3, [sp, #52]	; 0x34
   53eb0:	add	r3, sp, #120	; 0x78
   53eb4:	str	r3, [sp, #44]	; 0x2c
   53eb8:	add	r3, sp, #124	; 0x7c
   53ebc:	str	r3, [sp, #56]	; 0x38
   53ec0:	add	r3, sp, #128	; 0x80
   53ec4:	str	r2, [sp, #60]	; 0x3c
   53ec8:	str	r3, [sp, #48]	; 0x30
   53ecc:	str	sl, [sp, #100]	; 0x64
   53ed0:	ldr	r1, [pc, #3576]	; 54cd0 <blkid_probe_get_size@plt+0x4d7b8>
   53ed4:	mov	r3, #0
   53ed8:	ldr	r2, [sp, #60]	; 0x3c
   53edc:	add	r1, pc, r1
   53ee0:	mov	r0, r9
   53ee4:	str	r3, [sp, #112]	; 0x70
   53ee8:	str	r3, [sp, #116]	; 0x74
   53eec:	str	r3, [sp, #120]	; 0x78
   53ef0:	str	r3, [sp, #124]	; 0x7c
   53ef4:	str	r3, [sp, #128]	; 0x80
   53ef8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   53efc:	ldr	r1, [pc, #3536]	; 54cd4 <blkid_probe_get_size@plt+0x4d7bc>
   53f00:	ldr	r2, [sp, #52]	; 0x34
   53f04:	add	r1, pc, r1
   53f08:	mov	r0, r9
   53f0c:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   53f10:	ldr	r1, [pc, #3520]	; 54cd8 <blkid_probe_get_size@plt+0x4d7c0>
   53f14:	ldr	r2, [sp, #44]	; 0x2c
   53f18:	add	r1, pc, r1
   53f1c:	mov	r0, r9
   53f20:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   53f24:	ldr	r1, [sp, #56]	; 0x38
   53f28:	mov	r0, r9
   53f2c:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   53f30:	ldr	r1, [sp, #48]	; 0x30
   53f34:	mov	r0, r9
   53f38:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   53f3c:	ldr	r3, [fp, #8]
   53f40:	ldr	r0, [sp, #112]	; 0x70
   53f44:	str	r3, [sp, #64]	; 0x40
   53f48:	ldr	r3, [fp, #12]
   53f4c:	add	r5, fp, #32
   53f50:	str	r3, [sp, #72]	; 0x48
   53f54:	ldr	r3, [fp, #16]
   53f58:	cmp	r0, #0
   53f5c:	str	r3, [sp, #80]	; 0x50
   53f60:	ldr	r3, [fp, #20]
   53f64:	ldr	r8, [fp, #4]
   53f68:	str	r3, [sp, #88]	; 0x58
   53f6c:	ldr	sl, [fp, #28]
   53f70:	ldr	r3, [fp, #24]
   53f74:	ldm	r5, {r5, r6, r7}
   53f78:	moveq	r4, r0
   53f7c:	beq	53f90 <blkid_probe_get_size@plt+0x4ca78>
   53f80:	str	r3, [sp, #68]	; 0x44
   53f84:	bl	6f54 <ether_aton@plt>
   53f88:	ldr	r3, [sp, #68]	; 0x44
   53f8c:	mov	r4, r0
   53f90:	ldr	r2, [sp, #116]	; 0x74
   53f94:	cmp	r3, #0
   53f98:	str	r2, [sp, #68]	; 0x44
   53f9c:	ldr	r2, [sp, #120]	; 0x78
   53fa0:	str	r2, [sp, #76]	; 0x4c
   53fa4:	ldr	r2, [sp, #124]	; 0x7c
   53fa8:	str	r2, [sp, #84]	; 0x54
   53fac:	ldr	r2, [sp, #128]	; 0x80
   53fb0:	str	r2, [sp, #92]	; 0x5c
   53fb4:	beq	53fc8 <blkid_probe_get_size@plt+0x4cab0>
   53fb8:	mov	r0, r3
   53fbc:	bl	639fc <blkid_probe_get_size@plt+0x5c4e4>
   53fc0:	cmp	r0, #0
   53fc4:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   53fc8:	cmp	sl, #0
   53fcc:	beq	53fe0 <blkid_probe_get_size@plt+0x4cac8>
   53fd0:	mov	r0, sl
   53fd4:	bl	639fc <blkid_probe_get_size@plt+0x5c4e4>
   53fd8:	cmp	r0, #0
   53fdc:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   53fe0:	cmp	r5, #0
   53fe4:	beq	53ff8 <blkid_probe_get_size@plt+0x4cae0>
   53fe8:	mov	r0, r5
   53fec:	bl	639fc <blkid_probe_get_size@plt+0x5c4e4>
   53ff0:	cmp	r0, #0
   53ff4:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   53ff8:	cmp	r6, #0
   53ffc:	beq	54010 <blkid_probe_get_size@plt+0x4caf8>
   54000:	mov	r0, r6
   54004:	bl	639fc <blkid_probe_get_size@plt+0x5c4e4>
   54008:	cmp	r0, #0
   5400c:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   54010:	cmp	r7, #0
   54014:	beq	54028 <blkid_probe_get_size@plt+0x4cb10>
   54018:	mov	r0, r7
   5401c:	bl	639fc <blkid_probe_get_size@plt+0x5c4e4>
   54020:	cmp	r0, #0
   54024:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   54028:	cmp	r8, #0
   5402c:	beq	5404c <blkid_probe_get_size@plt+0x4cb34>
   54030:	cmp	r4, #0
   54034:	beq	5405c <blkid_probe_get_size@plt+0x4cb44>
   54038:	mov	r1, r4
   5403c:	mov	r0, r8
   54040:	bl	43a98 <blkid_probe_get_size@plt+0x3c580>
   54044:	cmp	r0, #0
   54048:	beq	5405c <blkid_probe_get_size@plt+0x4cb44>
   5404c:	ldrd	r0, [sp, #64]	; 0x40
   54050:	bl	3bbbc <blkid_probe_get_size@plt+0x346a4>
   54054:	cmp	r0, #0
   54058:	bne	54114 <blkid_probe_get_size@plt+0x4cbfc>
   5405c:	ldr	fp, [fp, #140]	; 0x8c
   54060:	cmp	fp, #0
   54064:	bne	53ed0 <blkid_probe_get_size@plt+0x4c9b8>
   54068:	ldr	sl, [sp, #100]	; 0x64
   5406c:	ldr	r3, [pc, #3176]	; 54cdc <blkid_probe_get_size@plt+0x4d7c4>
   54070:	mov	r2, #0
   54074:	add	r3, pc, r3
   54078:	str	r2, [sp, #136]	; 0x88
   5407c:	ldr	r3, [r3, #4]
   54080:	cmp	r3, #6
   54084:	bgt	55984 <blkid_probe_get_size@plt+0x4e46c>
   54088:	mov	ip, r2
   5408c:	ldr	r3, [pc, #3148]	; 54ce0 <blkid_probe_get_size@plt+0x4d7c8>
   54090:	ldr	r1, [pc, #3148]	; 54ce4 <blkid_probe_get_size@plt+0x4d7cc>
   54094:	add	r3, pc, r3
   54098:	add	r3, r3, #1120	; 0x460
   5409c:	str	r2, [sp, #8]
   540a0:	ldr	r2, [pc, #3136]	; 54ce8 <blkid_probe_get_size@plt+0x4d7d0>
   540a4:	mov	r0, #0
   540a8:	add	r1, pc, r1
   540ac:	stm	sp, {r3, ip}
   540b0:	str	r1, [sp, #20]
   540b4:	str	r0, [sp, #16]
   540b8:	str	r0, [sp, #12]
   540bc:	mov	r3, #28
   540c0:	add	r2, pc, r2
   540c4:	mvn	r1, #1
   540c8:	mov	r0, #7
   540cc:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   540d0:	mov	r4, r0
   540d4:	b	53d74 <blkid_probe_get_size@plt+0x4c85c>
   540d8:	add	r1, sp, #136	; 0x88
   540dc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   540e0:	ldr	r2, [sp, #136]	; 0x88
   540e4:	cmp	r2, #0
   540e8:	beq	53d24 <blkid_probe_get_size@plt+0x4c80c>
   540ec:	ldr	r0, [pc, #3064]	; 54cec <blkid_probe_get_size@plt+0x4d7d4>
   540f0:	add	r0, pc, r0
   540f4:	b	53d28 <blkid_probe_get_size@plt+0x4c810>
   540f8:	bl	732c <__errno_location@plt>
   540fc:	ldr	r0, [r0]
   54100:	rsb	r0, r0, #0
   54104:	cmp	r0, #0
   54108:	blt	53e64 <blkid_probe_get_size@plt+0x4c94c>
   5410c:	mov	sl, #0
   54110:	b	53e48 <blkid_probe_get_size@plt+0x4c930>
   54114:	ldrd	r0, [sp, #72]	; 0x48
   54118:	bl	3bbbc <blkid_probe_get_size@plt+0x346a4>
   5411c:	cmp	r0, #0
   54120:	beq	5405c <blkid_probe_get_size@plt+0x4cb44>
   54124:	ldrd	r0, [sp, #80]	; 0x50
   54128:	bl	3bbbc <blkid_probe_get_size@plt+0x346a4>
   5412c:	cmp	r0, #0
   54130:	beq	5405c <blkid_probe_get_size@plt+0x4cb44>
   54134:	ldrd	r0, [sp, #88]	; 0x58
   54138:	bl	3bbbc <blkid_probe_get_size@plt+0x346a4>
   5413c:	subs	r3, r0, #0
   54140:	str	r3, [sp, #64]	; 0x40
   54144:	beq	5405c <blkid_probe_get_size@plt+0x4cb44>
   54148:	ldr	r3, [fp, #20]
   5414c:	cmp	r3, #0
   54150:	beq	5544c <blkid_probe_get_size@plt+0x4df34>
   54154:	ldr	r1, [pc, #2964]	; 54cf0 <blkid_probe_get_size@plt+0x4d7d8>
   54158:	add	r2, sp, #132	; 0x84
   5415c:	add	r1, pc, r1
   54160:	mov	r0, r9
   54164:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   54168:	cmp	r0, #0
   5416c:	bge	54244 <blkid_probe_get_size@plt+0x4cd2c>
   54170:	ldr	r3, [pc, #2940]	; 54cf4 <blkid_probe_get_size@plt+0x4d7dc>
   54174:	ldr	sl, [sp, #100]	; 0x64
   54178:	add	r3, pc, r3
   5417c:	ldr	r3, [r3, #4]
   54180:	cmp	r3, #6
   54184:	bgt	542ac <blkid_probe_get_size@plt+0x4cd94>
   54188:	ldr	r3, [pc, #2920]	; 54cf8 <blkid_probe_get_size@plt+0x4d7e0>
   5418c:	mov	r5, #0
   54190:	add	r3, pc, r3
   54194:	str	r5, [sp, #116]	; 0x74
   54198:	ldr	r7, [r3]
   5419c:	str	r5, [sp, #124]	; 0x7c
   541a0:	cmp	r7, r5
   541a4:	beq	55398 <blkid_probe_get_size@plt+0x4de80>
   541a8:	ldr	r1, [sp, #44]	; 0x2c
   541ac:	mov	r0, r9
   541b0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   541b4:	subs	r6, r0, #0
   541b8:	bge	543f0 <blkid_probe_get_size@plt+0x4ced8>
   541bc:	ldr	r3, [pc, #2872]	; 54cfc <blkid_probe_get_size@plt+0x4d7e4>
   541c0:	mov	r2, #0
   541c4:	add	r3, pc, r3
   541c8:	str	r2, [sp, #132]	; 0x84
   541cc:	ldr	r3, [r3, #4]
   541d0:	cmp	r3, #3
   541d4:	bgt	55b64 <blkid_probe_get_size@plt+0x4e64c>
   541d8:	mov	r1, r2
   541dc:	ldr	r3, [pc, #2844]	; 54d00 <blkid_probe_get_size@plt+0x4d7e8>
   541e0:	ldr	r0, [pc, #2844]	; 54d04 <blkid_probe_get_size@plt+0x4d7ec>
   541e4:	add	r3, pc, r3
   541e8:	add	r0, pc, r0
   541ec:	add	r3, r3, #1120	; 0x460
   541f0:	str	r2, [sp, #8]
   541f4:	str	r3, [sp]
   541f8:	mov	r2, #0
   541fc:	mov	r3, r0
   54200:	str	r2, [sp, #12]
   54204:	strd	r2, [sp, #16]
   54208:	ldr	r2, [pc, #2808]	; 54d08 <blkid_probe_get_size@plt+0x4d7f0>
   5420c:	str	r1, [sp, #4]
   54210:	mov	r3, #35	; 0x23
   54214:	mov	r1, r6
   54218:	add	r2, pc, r2
   5421c:	mov	r0, #4
   54220:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   54224:	ldr	r2, [pc, #2784]	; 54d0c <blkid_probe_get_size@plt+0x4d7f4>
   54228:	ldr	r3, [fp]
   5422c:	ldr	r1, [sp, #40]	; 0x28
   54230:	mov	r0, r9
   54234:	add	r2, pc, r2
   54238:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   5423c:	mov	r4, #0
   54240:	b	53d74 <blkid_probe_get_size@plt+0x4c85c>
   54244:	ldr	r4, [sp, #132]	; 0x84
   54248:	mov	r8, #0
   5424c:	cmp	r4, r8
   54250:	str	r8, [sp, #136]	; 0x88
   54254:	beq	550c0 <blkid_probe_get_size@plt+0x4dba8>
   54258:	ldr	r1, [pc, #2736]	; 54d10 <blkid_probe_get_size@plt+0x4d7f8>
   5425c:	mov	r0, r4
   54260:	add	r1, pc, r1
   54264:	bl	6c9c <strspn@plt>
   54268:	mov	r6, r0
   5426c:	bl	732c <__errno_location@plt>
   54270:	add	r7, r4, r6
   54274:	mov	r2, r8
   54278:	ldr	r1, [sp, #96]	; 0x60
   5427c:	mov	r5, r0
   54280:	str	r8, [r0]
   54284:	mov	r0, r7
   54288:	bl	6c54 <strtoul@plt>
   5428c:	ldr	r3, [r5]
   54290:	cmp	r3, #0
   54294:	ble	54360 <blkid_probe_get_size@plt+0x4ce48>
   54298:	ldr	r3, [pc, #2676]	; 54d14 <blkid_probe_get_size@plt+0x4d7fc>
   5429c:	ldr	sl, [sp, #100]	; 0x64
   542a0:	add	r3, pc, r3
   542a4:	ldr	r3, [r3, #4]
   542a8:	b	54180 <blkid_probe_get_size@plt+0x4cc68>
   542ac:	ldr	r2, [sp, #128]	; 0x80
   542b0:	ldr	r3, [pc, #2656]	; 54d18 <blkid_probe_get_size@plt+0x4d800>
   542b4:	str	r2, [sp, #12]
   542b8:	ldr	r2, [pc, #2652]	; 54d1c <blkid_probe_get_size@plt+0x4d804>
   542bc:	add	r3, pc, r3
   542c0:	add	r2, pc, r2
   542c4:	ldr	r1, [fp]
   542c8:	add	r3, r3, #1184	; 0x4a0
   542cc:	str	r2, [sp, #4]
   542d0:	ldr	r2, [pc, #2632]	; 54d20 <blkid_probe_get_size@plt+0x4d808>
   542d4:	add	r3, r3, #8
   542d8:	str	r1, [sp, #8]
   542dc:	str	r3, [sp]
   542e0:	add	r2, pc, r2
   542e4:	ldr	r3, [pc, #2616]	; 54d24 <blkid_probe_get_size@plt+0x4d80c>
   542e8:	mov	r1, #0
   542ec:	ldr	r0, [pc, #2612]	; 54d28 <blkid_probe_get_size@plt+0x4d810>
   542f0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   542f4:	b	54188 <blkid_probe_get_size@plt+0x4cc70>
   542f8:	add	r0, r5, #4
   542fc:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   54300:	subs	r1, r0, #0
   54304:	bge	53e10 <blkid_probe_get_size@plt+0x4c8f8>
   54308:	ldr	r3, [pc, #2588]	; 54d2c <blkid_probe_get_size@plt+0x4d814>
   5430c:	add	r3, pc, r3
   54310:	ldr	r3, [r3, #4]
   54314:	cmp	r3, #3
   54318:	rsble	r0, r1, #0
   5431c:	uxtble	r0, r0
   54320:	rsble	r0, r0, #0
   54324:	ble	54104 <blkid_probe_get_size@plt+0x4cbec>
   54328:	ldr	r3, [pc, #2560]	; 54d30 <blkid_probe_get_size@plt+0x4d818>
   5432c:	ldr	r2, [pc, #2560]	; 54d34 <blkid_probe_get_size@plt+0x4d81c>
   54330:	add	r3, pc, r3
   54334:	add	r2, pc, r2
   54338:	str	r2, [sp, #4]
   5433c:	add	r3, r3, #1136	; 0x470
   54340:	ldr	r2, [pc, #2544]	; 54d38 <blkid_probe_get_size@plt+0x4d820>
   54344:	add	r3, r3, #8
   54348:	str	r3, [sp]
   5434c:	add	r2, pc, r2
   54350:	mov	r3, #145	; 0x91
   54354:	ldr	r0, [pc, #3164]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   54358:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5435c:	b	54104 <blkid_probe_get_size@plt+0x4cbec>
   54360:	ldr	r3, [pc, #2516]	; 54d3c <blkid_probe_get_size@plt+0x4d824>
   54364:	ldr	r2, [sp, #136]	; 0x88
   54368:	add	r3, pc, r3
   5436c:	cmp	r2, #0
   54370:	ldr	r3, [r3, #4]
   54374:	beq	55064 <blkid_probe_get_size@plt+0x4db4c>
   54378:	cmp	r7, r2
   5437c:	beq	55064 <blkid_probe_get_size@plt+0x4db4c>
   54380:	ldrb	r1, [r2]
   54384:	cmp	r1, #0
   54388:	bne	55064 <blkid_probe_get_size@plt+0x4db4c>
   5438c:	ldrb	r2, [r4, r6]
   54390:	cmp	r2, #45	; 0x2d
   54394:	beq	55064 <blkid_probe_get_size@plt+0x4db4c>
   54398:	bics	r2, r0, #255	; 0xff
   5439c:	bne	55064 <blkid_probe_get_size@plt+0x4db4c>
   543a0:	cmp	r0, #1
   543a4:	beq	554f0 <blkid_probe_get_size@plt+0x4dfd8>
   543a8:	cmp	r0, #4
   543ac:	bne	55064 <blkid_probe_get_size@plt+0x4db4c>
   543b0:	cmp	r3, #3
   543b4:	ble	5405c <blkid_probe_get_size@plt+0x4cb44>
   543b8:	ldr	r2, [sp, #128]	; 0x80
   543bc:	ldr	r3, [pc, #2428]	; 54d40 <blkid_probe_get_size@plt+0x4d828>
   543c0:	str	r2, [sp, #12]
   543c4:	ldr	r2, [fp]
   543c8:	add	r3, pc, r3
   543cc:	str	r2, [sp, #8]
   543d0:	ldr	r2, [sp, #104]	; 0x68
   543d4:	add	r0, r0, #1024	; 0x400
   543d8:	strd	r2, [sp]
   543dc:	ldr	r2, [pc, #2400]	; 54d44 <blkid_probe_get_size@plt+0x4d82c>
   543e0:	ldr	r3, [pc, #2400]	; 54d48 <blkid_probe_get_size@plt+0x4d830>
   543e4:	add	r2, pc, r2
   543e8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   543ec:	b	5405c <blkid_probe_get_size@plt+0x4cb44>
   543f0:	ldr	r3, [sp, #120]	; 0x78
   543f4:	add	r4, sp, #176	; 0xb0
   543f8:	mov	r2, #32
   543fc:	mov	r0, r4
   54400:	mov	r1, r5
   54404:	str	r3, [sp, #44]	; 0x2c
   54408:	str	r5, [sp, #136]	; 0x88
   5440c:	bl	6c84 <memset@plt>
   54410:	ldr	r3, [fp, #80]	; 0x50
   54414:	add	r2, r7, #4
   54418:	cmp	r3, #0
   5441c:	str	r2, [sp, #60]	; 0x3c
   54420:	bne	550f0 <blkid_probe_get_size@plt+0x4dbd8>
   54424:	ldr	r3, [r7, #4]
   54428:	cmp	r3, #0
   5442c:	blt	55290 <blkid_probe_get_size@plt+0x4dd78>
   54430:	ldr	r2, [sp, #44]	; 0x2c
   54434:	mov	r1, #16
   54438:	mov	r0, r4
   5443c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   54440:	ldr	r2, [sp, #96]	; 0x60
   54444:	mov	r1, r4
   54448:	ldr	r0, [r7, #4]
   5444c:	bl	2a6b8 <blkid_probe_get_size@plt+0x231a0>
   54450:	cmp	r0, #0
   54454:	blt	557e0 <blkid_probe_get_size@plt+0x4e2c8>
   54458:	ldr	r5, [sp, #136]	; 0x88
   5445c:	add	r8, sp, #208	; 0xd0
   54460:	ldr	r1, [fp, #72]	; 0x48
   54464:	cmp	r1, #0
   54468:	beq	54498 <blkid_probe_get_size@plt+0x4cf80>
   5446c:	ldr	r2, [pc, #2836]	; 54f88 <blkid_probe_get_size@plt+0x4da70>
   54470:	umull	r2, r3, r1, r2
   54474:	lsr	r2, r3, #18
   54478:	rsb	r3, r2, r2, lsl #5
   5447c:	rsb	r3, r3, r3, lsl #6
   54480:	add	r3, r2, r3, lsl #3
   54484:	lsl	r3, r3, #6
   54488:	cmp	r3, r1
   5448c:	moveq	r3, r2
   54490:	addne	r3, r2, #1
   54494:	str	r3, [r5, #4]
   54498:	ldr	r3, [fp, #76]	; 0x4c
   5449c:	add	r6, fp, #84	; 0x54
   544a0:	cmn	r3, #1
   544a4:	strbne	r3, [r5, #8]
   544a8:	ldr	r3, [fp, #96]	; 0x60
   544ac:	mov	r0, r6
   544b0:	cmn	r3, #1
   544b4:	strbne	r3, [r5, #9]
   544b8:	ldr	r3, [fp, #80]	; 0x50
   544bc:	cmp	r3, #0
   544c0:	strbge	r3, [r5, #11]
   544c4:	bl	610fc <blkid_probe_get_size@plt+0x59be4>
   544c8:	subs	r1, r0, #0
   544cc:	beq	55664 <blkid_probe_get_size@plt+0x4e14c>
   544d0:	ldr	r3, [r5]
   544d4:	ldr	r6, [r7, #4]
   544d8:	cmp	r3, #76	; 0x4c
   544dc:	beq	55624 <blkid_probe_get_size@plt+0x4e10c>
   544e0:	mov	r2, #40	; 0x28
   544e4:	mov	r1, #0
   544e8:	add	r0, sp, #212	; 0xd4
   544ec:	bl	6c84 <memset@plt>
   544f0:	mov	r3, #2
   544f4:	str	r3, [sp, #208]	; 0xd0
   544f8:	ldr	r3, [r5]
   544fc:	cmp	r3, #1
   54500:	bne	55dc8 <blkid_probe_get_size@plt+0x4e8b0>
   54504:	ldrsb	r3, [r5, #15]
   54508:	cmp	r3, #0
   5450c:	ble	55dc8 <blkid_probe_get_size@plt+0x4e8b0>
   54510:	ldr	r3, [r5, #48]	; 0x30
   54514:	mov	r0, r6
   54518:	str	r3, [sp, #212]	; 0xd4
   5451c:	ldr	r3, [r5, #556]	; 0x22c
   54520:	mov	r2, r4
   54524:	str	r3, [sp, #216]	; 0xd8
   54528:	ldr	r3, [r5, #1064]	; 0x428
   5452c:	ldr	r1, [pc, #1932]	; 54cc0 <blkid_probe_get_size@plt+0x4d7a8>
   54530:	str	r3, [sp, #240]	; 0xf0
   54534:	ldr	r3, [r5, #4]
   54538:	strh	r3, [sp, #220]	; 0xdc
   5453c:	lsr	r3, r3, #16
   54540:	strh	r3, [sp, #236]	; 0xec
   54544:	ldrb	r3, [r5, #8]
   54548:	strb	r3, [sp, #222]	; 0xde
   5454c:	ldrb	r3, [r5, #9]
   54550:	strb	r3, [sp, #223]	; 0xdf
   54554:	ldrb	r3, [r5, #10]
   54558:	strb	r3, [sp, #224]	; 0xe0
   5455c:	ldrb	r3, [r5, #11]
   54560:	strb	r3, [sp, #226]	; 0xe2
   54564:	ldrb	r3, [r5, #12]
   54568:	strb	r3, [sp, #227]	; 0xe3
   5456c:	ldrb	r3, [r5, #13]
   54570:	strb	r3, [sp, #238]	; 0xee
   54574:	ldrb	r3, [r5, #14]
   54578:	str	r8, [sp, #192]	; 0xc0
   5457c:	strb	r3, [sp, #239]	; 0xef
   54580:	bl	6e70 <ioctl@plt>
   54584:	cmp	r0, #0
   54588:	blt	557d0 <blkid_probe_get_size@plt+0x4e2b8>
   5458c:	ldr	r0, [sp, #136]	; 0x88
   54590:	bl	69f0 <free@plt>
   54594:	ldr	r6, [sp, #120]	; 0x78
   54598:	ldr	r5, [fp, #92]	; 0x5c
   5459c:	mov	r2, #0
   545a0:	mov	r1, r2
   545a4:	mov	ip, #5
   545a8:	str	r2, [sp, #184]	; 0xb8
   545ac:	str	r2, [sp, #180]	; 0xb4
   545b0:	str	r2, [sp, #188]	; 0xbc
   545b4:	str	r2, [sp, #192]	; 0xc0
   545b8:	mov	r0, r8
   545bc:	mov	r2, #32
   545c0:	str	ip, [sp, #176]	; 0xb0
   545c4:	bl	6c84 <memset@plt>
   545c8:	cmn	r5, #1
   545cc:	str	r4, [sp, #224]	; 0xe0
   545d0:	beq	5466c <blkid_probe_get_size@plt+0x4d154>
   545d4:	ldr	r3, [r7, #4]
   545d8:	cmp	r3, #0
   545dc:	blt	55544 <blkid_probe_get_size@plt+0x4e02c>
   545e0:	mov	r2, r6
   545e4:	mov	r1, #16
   545e8:	mov	r0, r8
   545ec:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   545f0:	mov	r2, r8
   545f4:	ldr	r1, [pc, #1732]	; 54cc0 <blkid_probe_get_size@plt+0x4d7a8>
   545f8:	ldr	r0, [r7, #4]
   545fc:	bl	6e70 <ioctl@plt>
   54600:	cmp	r0, #0
   54604:	blt	553c8 <blkid_probe_get_size@plt+0x4deb0>
   54608:	cmp	r5, #7
   5460c:	addls	pc, pc, r5, lsl #2
   54610:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54614:	b	54738 <blkid_probe_get_size@plt+0x4d220>
   54618:	b	54750 <blkid_probe_get_size@plt+0x4d238>
   5461c:	b	54720 <blkid_probe_get_size@plt+0x4d208>
   54620:	b	547b0 <blkid_probe_get_size@plt+0x4d298>
   54624:	b	54798 <blkid_probe_get_size@plt+0x4d280>
   54628:	b	54780 <blkid_probe_get_size@plt+0x4d268>
   5462c:	b	54768 <blkid_probe_get_size@plt+0x4d250>
   54630:	b	54634 <blkid_probe_get_size@plt+0x4d11c>
   54634:	ldr	r3, [sp, #184]	; 0xb8
   54638:	cmp	r3, #0
   5463c:	movne	r3, #0
   54640:	strne	r3, [sp, #184]	; 0xb8
   54644:	beq	54668 <blkid_probe_get_size@plt+0x4d150>
   54648:	mov	r3, #6
   5464c:	str	r3, [sp, #176]	; 0xb0
   54650:	mov	r2, r8
   54654:	ldr	r0, [r7, #4]
   54658:	ldr	r1, [pc, #1632]	; 54cc0 <blkid_probe_get_size@plt+0x4d7a8>
   5465c:	bl	6e70 <ioctl@plt>
   54660:	cmp	r0, #0
   54664:	blt	553c8 <blkid_probe_get_size@plt+0x4deb0>
   54668:	ldr	r6, [sp, #120]	; 0x78
   5466c:	mov	r1, r6
   54670:	add	r2, fp, #100	; 0x64
   54674:	add	r0, r7, #4
   54678:	bl	2a8c8 <blkid_probe_get_size@plt+0x233b0>
   5467c:	subs	r1, r0, #0
   54680:	blt	5506c <blkid_probe_get_size@plt+0x4db54>
   54684:	ldr	r3, [fp, #136]	; 0x88
   54688:	cmp	r3, #0
   5468c:	bne	55120 <blkid_probe_get_size@plt+0x4dc08>
   54690:	ldr	r1, [sp, #48]	; 0x30
   54694:	mov	r0, r9
   54698:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   5469c:	subs	r4, r0, #0
   546a0:	bge	54828 <blkid_probe_get_size@plt+0x4d310>
   546a4:	ldr	r3, [pc, #1696]	; 54d4c <blkid_probe_get_size@plt+0x4d834>
   546a8:	mov	r2, #0
   546ac:	add	r3, pc, r3
   546b0:	str	r2, [sp, #136]	; 0x88
   546b4:	ldr	r3, [r3, #4]
   546b8:	cmp	r3, #3
   546bc:	bgt	55bd4 <blkid_probe_get_size@plt+0x4e6bc>
   546c0:	mov	r1, r2
   546c4:	ldr	r3, [pc, #1668]	; 54d50 <blkid_probe_get_size@plt+0x4d838>
   546c8:	ldr	r0, [pc, #1668]	; 54d54 <blkid_probe_get_size@plt+0x4d83c>
   546cc:	add	r3, pc, r3
   546d0:	add	r3, r3, #1248	; 0x4e0
   546d4:	add	r0, pc, r0
   546d8:	add	r3, r3, #8
   546dc:	str	r2, [sp, #8]
   546e0:	str	r3, [sp]
   546e4:	mov	r2, #0
   546e8:	mov	r3, r0
   546ec:	str	r2, [sp, #12]
   546f0:	strd	r2, [sp, #16]
   546f4:	ldr	r2, [pc, #1628]	; 54d58 <blkid_probe_get_size@plt+0x4d840>
   546f8:	str	r1, [sp, #4]
   546fc:	ldr	r3, [pc, #1624]	; 54d5c <blkid_probe_get_size@plt+0x4d844>
   54700:	mov	r1, r4
   54704:	add	r2, pc, r2
   54708:	mov	r0, #4
   5470c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   54710:	mov	r6, r0
   54714:	cmp	r6, #0
   54718:	bge	54224 <blkid_probe_get_size@plt+0x4cd0c>
   5471c:	b	541bc <blkid_probe_get_size@plt+0x4cca4>
   54720:	ldr	r3, [sp, #184]	; 0xb8
   54724:	cmp	r3, #4
   54728:	movne	r3, #4
   5472c:	strne	r3, [sp, #184]	; 0xb8
   54730:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   54734:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54738:	ldr	r3, [sp, #184]	; 0xb8
   5473c:	cmp	r3, #1
   54740:	movne	r3, #1
   54744:	strne	r3, [sp, #184]	; 0xb8
   54748:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   5474c:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54750:	ldr	r3, [sp, #184]	; 0xb8
   54754:	cmp	r3, #2
   54758:	movne	r3, #2
   5475c:	strne	r3, [sp, #184]	; 0xb8
   54760:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   54764:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54768:	ldr	r3, [sp, #184]	; 0xb8
   5476c:	cmp	r3, #64	; 0x40
   54770:	movne	r3, #64	; 0x40
   54774:	strne	r3, [sp, #184]	; 0xb8
   54778:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   5477c:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54780:	ldr	r3, [sp, #184]	; 0xb8
   54784:	cmp	r3, #32
   54788:	movne	r3, #32
   5478c:	strne	r3, [sp, #184]	; 0xb8
   54790:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   54794:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   54798:	ldr	r3, [sp, #184]	; 0xb8
   5479c:	cmp	r3, #16
   547a0:	movne	r3, #16
   547a4:	strne	r3, [sp, #184]	; 0xb8
   547a8:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   547ac:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   547b0:	ldr	r3, [sp, #184]	; 0xb8
   547b4:	cmp	r3, #8
   547b8:	movne	r3, #8
   547bc:	strne	r3, [sp, #184]	; 0xb8
   547c0:	bne	54648 <blkid_probe_get_size@plt+0x4d130>
   547c4:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   547c8:	ldr	r2, [pc, #1424]	; 54d60 <blkid_probe_get_size@plt+0x4d848>
   547cc:	ldr	r1, [pc, #1424]	; 54d64 <blkid_probe_get_size@plt+0x4d84c>
   547d0:	add	r2, pc, r2
   547d4:	add	r2, r2, #1152	; 0x480
   547d8:	add	r2, r2, #12
   547dc:	str	r2, [sp]
   547e0:	ldr	r2, [pc, #1408]	; 54d68 <blkid_probe_get_size@plt+0x4d850>
   547e4:	mov	r3, #241	; 0xf1
   547e8:	add	r2, pc, r2
   547ec:	add	r1, pc, r1
   547f0:	mov	r0, #1
   547f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   547f8:	ldr	r2, [pc, #1388]	; 54d6c <blkid_probe_get_size@plt+0x4d854>
   547fc:	ldr	r1, [pc, #1388]	; 54d70 <blkid_probe_get_size@plt+0x4d858>
   54800:	add	r2, pc, r2
   54804:	add	r2, r2, #1152	; 0x480
   54808:	add	r2, r2, #12
   5480c:	str	r2, [sp]
   54810:	ldr	r2, [pc, #1372]	; 54d74 <blkid_probe_get_size@plt+0x4d85c>
   54814:	mov	r3, #242	; 0xf2
   54818:	add	r2, pc, r2
   5481c:	add	r1, pc, r1
   54820:	mov	r0, #1
   54824:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   54828:	ldr	r1, [pc, #1352]	; 54d78 <blkid_probe_get_size@plt+0x4d860>
   5482c:	add	r3, sp, #132	; 0x84
   54830:	mov	r2, r3
   54834:	add	r1, pc, r1
   54838:	mov	r0, r9
   5483c:	str	r3, [sp, #48]	; 0x30
   54840:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   54844:	subs	r4, r0, #0
   54848:	bge	5568c <blkid_probe_get_size@plt+0x4e174>
   5484c:	ldr	r3, [pc, #1320]	; 54d7c <blkid_probe_get_size@plt+0x4d864>
   54850:	mov	r2, #0
   54854:	add	r3, pc, r3
   54858:	str	r2, [sp, #136]	; 0x88
   5485c:	ldr	r3, [r3, #4]
   54860:	cmp	r3, #6
   54864:	bgt	55e28 <blkid_probe_get_size@plt+0x4e910>
   54868:	mov	r1, r2
   5486c:	ldr	r3, [pc, #1292]	; 54d80 <blkid_probe_get_size@plt+0x4d868>
   54870:	ldr	r0, [pc, #1292]	; 54d84 <blkid_probe_get_size@plt+0x4d86c>
   54874:	add	r3, pc, r3
   54878:	add	r3, r3, #1328	; 0x530
   5487c:	add	r0, pc, r0
   54880:	add	r3, r3, #8
   54884:	str	r2, [sp, #8]
   54888:	str	r3, [sp]
   5488c:	mov	r2, #0
   54890:	mov	r3, r0
   54894:	str	r2, [sp, #12]
   54898:	strd	r2, [sp, #16]
   5489c:	ldr	r2, [pc, #1252]	; 54d88 <blkid_probe_get_size@plt+0x4d870>
   548a0:	str	r1, [sp, #4]
   548a4:	mov	r3, #196	; 0xc4
   548a8:	mov	r1, r4
   548ac:	add	r2, pc, r2
   548b0:	mov	r0, #7
   548b4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   548b8:	ldr	r3, [sp, #124]	; 0x7c
   548bc:	sub	r3, r3, #3
   548c0:	cmp	r3, #1
   548c4:	bls	558e8 <blkid_probe_get_size@plt+0x4e3d0>
   548c8:	ldrb	r3, [r7, #8]
   548cc:	ldr	r4, [sp, #116]	; 0x74
   548d0:	cmp	r3, #0
   548d4:	mov	r3, r4
   548d8:	beq	55460 <blkid_probe_get_size@plt+0x4df48>
   548dc:	ldr	r5, [fp, #56]	; 0x38
   548e0:	cmp	r5, #0
   548e4:	beq	55460 <blkid_probe_get_size@plt+0x4df48>
   548e8:	cmp	r4, #0
   548ec:	bne	55468 <blkid_probe_get_size@plt+0x4df50>
   548f0:	ldr	r3, [r5]
   548f4:	cmn	r3, #1
   548f8:	beq	54978 <blkid_probe_get_size@plt+0x4d460>
   548fc:	ldr	r2, [pc, #1160]	; 54d8c <blkid_probe_get_size@plt+0x4d874>
   54900:	ldr	r6, [pc, #1160]	; 54d90 <blkid_probe_get_size@plt+0x4d878>
   54904:	add	r2, pc, r2
   54908:	str	r2, [sp, #56]	; 0x38
   5490c:	ldr	r2, [pc, #1152]	; 54d94 <blkid_probe_get_size@plt+0x4d87c>
   54910:	str	r4, [sp, #44]	; 0x2c
   54914:	add	r6, pc, r6
   54918:	mov	r4, r5
   5491c:	mov	r5, r3
   54920:	add	r2, pc, r2
   54924:	str	r2, [sp, #60]	; 0x3c
   54928:	cmp	r5, #6
   5492c:	addls	pc, pc, r5, lsl #2
   54930:	b	561ec <blkid_probe_get_size@plt+0x4ecd4>
   54934:	b	54fe4 <blkid_probe_get_size@plt+0x4dacc>
   54938:	b	54c20 <blkid_probe_get_size@plt+0x4d708>
   5493c:	b	54c04 <blkid_probe_get_size@plt+0x4d6ec>
   54940:	b	54be8 <blkid_probe_get_size@plt+0x4d6d0>
   54944:	b	54bd0 <blkid_probe_get_size@plt+0x4d6b8>
   54948:	b	54bb8 <blkid_probe_get_size@plt+0x4d6a0>
   5494c:	b	54950 <blkid_probe_get_size@plt+0x4d438>
   54950:	ldr	r2, [sp, #52]	; 0x34
   54954:	ldr	r1, [sp, #56]	; 0x38
   54958:	mov	r0, r9
   5495c:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   54960:	ldr	r2, [sp, #116]	; 0x74
   54964:	cmp	r2, #0
   54968:	bne	55ee0 <blkid_probe_get_size@plt+0x4e9c8>
   5496c:	ldr	r5, [r4, #4]!
   54970:	cmn	r5, #1
   54974:	bne	54928 <blkid_probe_get_size@plt+0x4d410>
   54978:	ldr	r2, [pc, #1048]	; 54d98 <blkid_probe_get_size@plt+0x4d880>
   5497c:	ldr	r3, [fp, #60]	; 0x3c
   54980:	add	r2, pc, r2
   54984:	cmp	r3, #0
   54988:	ldr	r2, [r2, #4]
   5498c:	beq	55dd0 <blkid_probe_get_size@plt+0x4e8b8>
   54990:	cmp	r2, #6
   54994:	mov	r2, #0
   54998:	str	r3, [sp, #116]	; 0x74
   5499c:	str	r2, [sp, #136]	; 0x88
   549a0:	bgt	56134 <blkid_probe_get_size@plt+0x4ec1c>
   549a4:	mov	lr, r2
   549a8:	ldr	r0, [pc, #1004]	; 54d9c <blkid_probe_get_size@plt+0x4d884>
   549ac:	ldr	ip, [pc, #1004]	; 54da0 <blkid_probe_get_size@plt+0x4d888>
   549b0:	add	r0, pc, r0
   549b4:	add	r0, r0, #1248	; 0x4e0
   549b8:	add	r0, r0, #8
   549bc:	str	r2, [sp, #8]
   549c0:	ldr	r2, [pc, #988]	; 54da4 <blkid_probe_get_size@plt+0x4d88c>
   549c4:	mov	r1, #0
   549c8:	add	ip, pc, ip
   549cc:	str	r3, [sp, #24]
   549d0:	stm	sp, {r0, lr}
   549d4:	str	ip, [sp, #20]
   549d8:	str	r1, [sp, #16]
   549dc:	str	r1, [sp, #12]
   549e0:	ldr	r3, [pc, #960]	; 54da8 <blkid_probe_get_size@plt+0x4d890>
   549e4:	add	r2, pc, r2
   549e8:	mov	r0, #7
   549ec:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   549f0:	ldr	r4, [fp, #52]	; 0x34
   549f4:	cmp	r4, #0
   549f8:	beq	55864 <blkid_probe_get_size@plt+0x4e34c>
   549fc:	cmp	r4, #1
   54a00:	bne	5585c <blkid_probe_get_size@plt+0x4e344>
   54a04:	mov	r0, r9
   54a08:	bl	2ae70 <blkid_probe_get_size@plt+0x23958>
   54a0c:	cmp	r0, #0
   54a10:	beq	55c28 <blkid_probe_get_size@plt+0x4e710>
   54a14:	mov	r4, #0
   54a18:	ldr	r2, [sp, #128]	; 0x80
   54a1c:	mov	r3, #0
   54a20:	ldr	r1, [fp, #68]	; 0x44
   54a24:	cmp	r2, r3
   54a28:	ldr	r5, [fp, #64]	; 0x40
   54a2c:	str	r1, [sp, #44]	; 0x2c
   54a30:	str	r3, [sp, #132]	; 0x84
   54a34:	ble	55bf8 <blkid_probe_get_size@plt+0x4e6e0>
   54a38:	cmp	r5, #0
   54a3c:	ldr	r3, [sp, #44]	; 0x2c
   54a40:	clz	r3, r3
   54a44:	lsr	r3, r3, #5
   54a48:	movne	r3, #0
   54a4c:	cmp	r4, #0
   54a50:	movne	r3, #0
   54a54:	cmp	r3, #0
   54a58:	bne	54b74 <blkid_probe_get_size@plt+0x4d65c>
   54a5c:	add	r3, r7, #12
   54a60:	ldr	r0, [r7, #12]
   54a64:	cmp	r0, #0
   54a68:	beq	55a58 <blkid_probe_get_size@plt+0x4e540>
   54a6c:	ldr	r1, [sp, #48]	; 0x30
   54a70:	bl	4d03c <blkid_probe_get_size@plt+0x45b24>
   54a74:	subs	r8, r0, #0
   54a78:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54a7c:	cmp	r5, #0
   54a80:	ldr	r6, [sp, #132]	; 0x84
   54a84:	beq	54aa4 <blkid_probe_get_size@plt+0x4d58c>
   54a88:	mov	r2, r5
   54a8c:	mov	r0, r6
   54a90:	mov	r1, #20
   54a94:	bl	2f9d8 <blkid_probe_get_size@plt+0x284c0>
   54a98:	subs	r8, r0, #0
   54a9c:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54aa0:	ldr	r6, [sp, #132]	; 0x84
   54aa4:	cmp	r4, #0
   54aa8:	beq	54af8 <blkid_probe_get_size@plt+0x4d5e0>
   54aac:	cmp	r6, #0
   54ab0:	beq	55f10 <blkid_probe_get_size@plt+0x4e9f8>
   54ab4:	ldrb	r3, [r6, #532]	; 0x214
   54ab8:	ands	r1, r3, #1
   54abc:	bne	560ec <blkid_probe_get_size@plt+0x4ebd4>
   54ac0:	mov	r3, #8
   54ac4:	mov	r2, #1
   54ac8:	mov	r0, r6
   54acc:	bl	2f69c <blkid_probe_get_size@plt+0x28184>
   54ad0:	subs	r8, r0, #0
   54ad4:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54ad8:	mov	r2, r4
   54adc:	mov	r0, r6
   54ae0:	mov	r3, #6
   54ae4:	mov	r1, #1
   54ae8:	bl	2f77c <blkid_probe_get_size@plt+0x28264>
   54aec:	subs	r8, r0, #0
   54af0:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54af4:	ldr	r6, [sp, #132]	; 0x84
   54af8:	ldr	r3, [sp, #44]	; 0x2c
   54afc:	cmp	r3, #0
   54b00:	beq	54b54 <blkid_probe_get_size@plt+0x4d63c>
   54b04:	cmp	r6, #0
   54b08:	str	r3, [sp, #136]	; 0x88
   54b0c:	beq	56188 <blkid_probe_get_size@plt+0x4ec70>
   54b10:	ldrb	r3, [r6, #532]	; 0x214
   54b14:	ands	r1, r3, #1
   54b18:	bne	5615c <blkid_probe_get_size@plt+0x4ec44>
   54b1c:	mov	r3, #3
   54b20:	mov	r2, #4
   54b24:	mov	r0, r6
   54b28:	bl	2f69c <blkid_probe_get_size@plt+0x28184>
   54b2c:	subs	r8, r0, #0
   54b30:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54b34:	mov	r3, #4
   54b38:	ldr	r2, [sp, #96]	; 0x60
   54b3c:	mov	r0, r6
   54b40:	mov	r1, r3
   54b44:	bl	2f77c <blkid_probe_get_size@plt+0x28264>
   54b48:	subs	r8, r0, #0
   54b4c:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54b50:	ldr	r6, [sp, #132]	; 0x84
   54b54:	mov	r1, r6
   54b58:	ldr	r0, [r7, #12]
   54b5c:	bl	4bfa8 <blkid_probe_get_size@plt+0x44a90>
   54b60:	subs	r8, r0, #0
   54b64:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   54b68:	ldr	r0, [sp, #132]	; 0x84
   54b6c:	cmp	r0, #0
   54b70:	bne	56224 <blkid_probe_get_size@plt+0x4ed0c>
   54b74:	ldr	r2, [pc, #560]	; 54dac <blkid_probe_get_size@plt+0x4d894>
   54b78:	ldr	r4, [sp, #116]	; 0x74
   54b7c:	ldr	r3, [fp]
   54b80:	add	r2, pc, r2
   54b84:	ldr	r1, [sp, #40]	; 0x28
   54b88:	mov	r0, r9
   54b8c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   54b90:	cmp	r4, #0
   54b94:	beq	53d74 <blkid_probe_get_size@plt+0x4c85c>
   54b98:	ldr	r2, [pc, #528]	; 54db0 <blkid_probe_get_size@plt+0x4d898>
   54b9c:	mov	r3, r4
   54ba0:	ldr	r1, [sp, #40]	; 0x28
   54ba4:	mov	r0, r9
   54ba8:	add	r2, pc, r2
   54bac:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   54bb0:	mov	r4, #0
   54bb4:	b	53d74 <blkid_probe_get_size@plt+0x4c85c>
   54bb8:	ldr	r2, [sp, #52]	; 0x34
   54bbc:	ldr	r1, [sp, #60]	; 0x3c
   54bc0:	mov	r0, r9
   54bc4:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   54bc8:	ldr	r2, [sp, #116]	; 0x74
   54bcc:	b	54964 <blkid_probe_get_size@plt+0x4d44c>
   54bd0:	ldr	r2, [sp, #52]	; 0x34
   54bd4:	mov	r1, r6
   54bd8:	mov	r0, r9
   54bdc:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   54be0:	ldr	r2, [sp, #116]	; 0x74
   54be4:	b	54964 <blkid_probe_get_size@plt+0x4d44c>
   54be8:	ldr	r1, [pc, #452]	; 54db4 <blkid_probe_get_size@plt+0x4d89c>
   54bec:	ldr	r2, [sp, #52]	; 0x34
   54bf0:	add	r1, pc, r1
   54bf4:	mov	r0, r9
   54bf8:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   54bfc:	ldr	r2, [sp, #116]	; 0x74
   54c00:	b	54964 <blkid_probe_get_size@plt+0x4d44c>
   54c04:	ldr	r1, [pc, #428]	; 54db8 <blkid_probe_get_size@plt+0x4d8a0>
   54c08:	ldr	r2, [sp, #52]	; 0x34
   54c0c:	add	r1, pc, r1
   54c10:	mov	r0, r9
   54c14:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   54c18:	ldr	r2, [sp, #116]	; 0x74
   54c1c:	b	54964 <blkid_probe_get_size@plt+0x4d44c>
   54c20:	ldr	r2, [sp, #124]	; 0x7c
   54c24:	sub	r2, r2, #3
   54c28:	cmp	r2, #1
   54c2c:	bhi	5496c <blkid_probe_get_size@plt+0x4d454>
   54c30:	ldr	r3, [pc, #388]	; 54dbc <blkid_probe_get_size@plt+0x4d8a4>
   54c34:	mov	r2, #0
   54c38:	add	r3, pc, r3
   54c3c:	ldr	r4, [sp, #44]	; 0x2c
   54c40:	ldr	r3, [r3, #4]
   54c44:	str	r2, [sp, #136]	; 0x88
   54c48:	cmp	r3, #6
   54c4c:	bgt	561c8 <blkid_probe_get_size@plt+0x4ecb0>
   54c50:	ldr	r3, [pc, #360]	; 54dc0 <blkid_probe_get_size@plt+0x4d8a8>
   54c54:	ldr	r0, [pc, #360]	; 54dc4 <blkid_probe_get_size@plt+0x4d8ac>
   54c58:	add	r3, pc, r3
   54c5c:	add	r3, r3, #1248	; 0x4e0
   54c60:	ldr	ip, [pc, #352]	; 54dc8 <blkid_probe_get_size@plt+0x4d8b0>
   54c64:	add	r3, r3, #8
   54c68:	str	r2, [sp, #8]
   54c6c:	ldr	r2, [pc, #344]	; 54dcc <blkid_probe_get_size@plt+0x4d8b4>
   54c70:	mov	r1, #0
   54c74:	add	r0, pc, r0
   54c78:	add	ip, pc, ip
   54c7c:	stm	sp, {r3, r4}
   54c80:	str	r0, [sp, #24]
   54c84:	str	ip, [sp, #20]
   54c88:	str	r1, [sp, #16]
   54c8c:	str	r1, [sp, #12]
   54c90:	ldr	r3, [pc, #312]	; 54dd0 <blkid_probe_get_size@plt+0x4d8b8>
   54c94:	add	r2, pc, r2
   54c98:	mov	r0, #7
   54c9c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   54ca0:	b	549f0 <blkid_probe_get_size@plt+0x4d4d8>
   54ca4:	muleq	r4, r4, lr
   54ca8:	andeq	r0, r0, ip, lsr r4
   54cac:	andeq	r4, r4, r8, lsr #8
   54cb0:	andeq	lr, r1, r0, lsl ip
   54cb4:	andeq	pc, r1, ip, lsr #26
   54cb8:	andeq	pc, r1, r4, asr #7
   54cbc:	ldrdeq	r5, [r4], -r8
   54cc0:	andeq	r8, r0, r6, asr #18
   54cc4:	andeq	pc, r1, r0, asr #24
   54cc8:	andeq	r5, r4, r8, lsl r0
   54ccc:	andeq	lr, r1, ip, lsr #21
   54cd0:	andeq	pc, r1, ip, ror #19
   54cd4:	andeq	sl, r1, r8, lsl r5
   54cd8:	andeq	pc, r1, r8, ror fp	; <UNPREDICTABLE>
   54cdc:	andeq	r4, r4, r8, asr #1
   54ce0:			; <UNDEFINED> instruction: 0x0001e8b0
   54ce4:	ldrdeq	pc, [r1], -ip
   54ce8:	andeq	pc, r1, r0, rrx
   54cec:	andeq	r0, r1, r8, asr #28
   54cf0:	andeq	pc, r1, r8, asr #18
   54cf4:	andeq	r3, r4, r4, asr #31
   54cf8:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   54cfc:	andeq	r3, r4, r8, ror pc
   54d00:	andeq	lr, r1, r0, ror #14
   54d04:	andeq	pc, r1, ip, lsr #27
   54d08:	andeq	lr, r1, r8, lsl #30
   54d0c:	andeq	pc, r1, ip, asr #26
   54d10:	andeq	r6, r1, ip, lsr fp
   54d14:	muleq	r4, ip, lr
   54d18:	andeq	lr, r1, r8, lsl #13
   54d1c:	andeq	pc, r1, r0, lsr #17
   54d20:	strdeq	r6, [r1], -r8
   54d24:	andeq	r0, r0, sp, lsl r1
   54d28:	andeq	r0, r0, r7, lsl #8
   54d2c:	andeq	r3, r4, r0, lsr lr
   54d30:	andeq	lr, r1, r4, lsl r6
   54d34:	andeq	r7, r1, r4, lsl sp
   54d38:	andeq	r6, r1, ip, lsr r0
   54d3c:	ldrdeq	r3, [r4], -r4
   54d40:	andeq	pc, r1, r8, asr #14
   54d44:	strdeq	r6, [r1], -r4
   54d48:	andeq	r0, r0, r6, lsl r1
   54d4c:	muleq	r4, r0, sl
   54d50:	andeq	lr, r1, r8, ror r2
   54d54:			; <UNDEFINED> instruction: 0x0001f6b0
   54d58:	ldrdeq	r5, [r1], -r4
   54d5c:	andeq	r0, r0, sl, lsl #3
   54d60:	andeq	lr, r1, r4, ror r1
   54d64:			; <UNDEFINED> instruction: 0x0001f2b4
   54d68:	strdeq	r5, [r1], -r0
   54d6c:	andeq	lr, r1, r4, asr #2
   54d70:	andeq	r6, r1, r4, asr #14
   54d74:	andeq	r5, r1, r0, asr #25
   54d78:	andeq	pc, r1, r0, ror r2	; <UNPREDICTABLE>
   54d7c:	andeq	r3, r4, r8, ror #17
   54d80:	ldrdeq	lr, [r1], -r0
   54d84:	andeq	pc, r1, r4, lsr #10
   54d88:	andeq	r5, r1, ip, lsr #24
   54d8c:	andeq	fp, r1, r0, ror #4
   54d90:	andeq	fp, r1, r8, lsr #4
   54d94:	andeq	fp, r1, r0, lsr r2
   54d98:			; <UNDEFINED> instruction: 0x000437bc
   54d9c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   54da0:	ldrdeq	pc, [r1], -r0
   54da4:	strdeq	r5, [r1], -r4
   54da8:	andeq	r0, r0, r1, asr #3
   54dac:	andeq	pc, r1, r0, lsl #8
   54db0:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   54db4:	andeq	sl, r1, r8, lsr pc
   54db8:	andeq	pc, r1, r4, asr #4
   54dbc:	andeq	r3, r4, r4, lsl #10
   54dc0:	andeq	sp, r1, ip, ror #25
   54dc4:	ldrdeq	r7, [r1], -r0
   54dc8:	andeq	pc, r1, r4, lsl #7
   54dcc:	andeq	r5, r1, r4, asr #16
   54dd0:	andeq	r0, r0, r7, lsr #3
   54dd4:	andeq	r3, r4, r4, asr #2
   54dd8:	andeq	sp, r1, ip, lsr #18
   54ddc:	andeq	r4, r1, r0, lsr #4
   54de0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   54de4:	andeq	r5, r1, r4, lsl #9
   54de8:	andeq	r3, r4, ip, asr #1
   54dec:			; <UNDEFINED> instruction: 0x0001d8bc
   54df0:	muleq	r1, r8, ip
   54df4:	andeq	r5, r1, r8, lsr #8
   54df8:	andeq	sp, r1, ip, ror r8
   54dfc:	andeq	r5, r1, r4, lsl #14
   54e00:	muleq	r1, r0, r2
   54e04:	andeq	r0, r0, r1, ror #3
   54e08:	andeq	r3, r4, r8, lsr r0
   54e0c:	strdeq	r2, [r4], -ip
   54e10:	andeq	sp, r1, ip, ror #13
   54e14:	strdeq	lr, [r1], -r4
   54e18:	andeq	r5, r1, r8, asr r2
   54e1c:	andeq	r0, r0, r5, lsl #3
   54e20:	muleq	r4, r8, lr
   54e24:	andeq	r2, r4, ip, asr #28
   54e28:	andeq	r2, r4, r0, lsl lr
   54e2c:	andeq	r4, r3, r4, ror #15
   54e30:	andeq	sp, r1, ip, ror #11
   54e34:	andeq	lr, r1, r8, lsl #19
   54e38:	andeq	r5, r1, r4, asr r1
   54e3c:	andeq	r0, r0, r6, ror r1
   54e40:	andeq	sp, r1, r4, lsr #11
   54e44:	andeq	lr, r1, r4, ror #13
   54e48:	andeq	r5, r1, r0, lsr #2
   54e4c:	andeq	r0, r0, sl, asr r1
   54e50:	andeq	r2, r4, r8, asr sp
   54e54:	andeq	r4, r3, r8, lsl #14
   54e58:	andeq	sp, r1, r0, lsr r5
   54e5c:	strdeq	lr, [r1], -r4
   54e60:	muleq	r1, ip, r0
   54e64:	andeq	r2, r4, r8, ror #25
   54e68:	andeq	r2, r4, ip, asr #25
   54e6c:	andeq	r4, r3, r8, lsr #15
   54e70:	muleq	r1, ip, r4
   54e74:	andeq	lr, r1, r0, asr #19
   54e78:	strdeq	r4, [r1], -r8
   54e7c:			; <UNDEFINED> instruction: 0x000001be
   54e80:	andeq	sp, r1, r8, lsr r4
   54e84:	andeq	lr, r1, r8, lsr #11
   54e88:	andeq	r4, r1, r8, lsr #31
   54e8c:	andeq	r2, r4, r4, ror #23
   54e90:	andeq	r6, r1, ip, asr #21
   54e94:	andeq	sp, r1, r0, asr #7
   54e98:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   54e9c:	andeq	r2, r4, ip, ror fp
   54ea0:	andeq	sp, r1, r0, ror #6
   54ea4:	andeq	lr, r1, r4, ror #18
   54ea8:	andeq	r4, r1, r8, asr #29
   54eac:	strdeq	r2, [r4], -ip
   54eb0:	muleq	r4, r0, sl
   54eb4:	andeq	sp, r1, r8, ror r2
   54eb8:	andeq	lr, r1, r0, lsl r7
   54ebc:	ldrdeq	r4, [r1], -r0
   54ec0:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   54ec4:	andeq	sp, r1, r0, lsl r2
   54ec8:	andeq	lr, r1, r8, lsr r5
   54ecc:	andeq	r4, r1, r8, ror sp
   54ed0:	andeq	r0, r0, r7, ror #2
   54ed4:			; <UNDEFINED> instruction: 0x000429b8
   54ed8:	andeq	sp, r1, r8, lsr #3
   54edc:	strdeq	lr, [r1], -r4
   54ee0:	andeq	r4, r1, r0, lsr #26
   54ee4:	andeq	r0, r0, sl, ror #2
   54ee8:	andeq	r2, r4, r4, lsl #18
   54eec:	andeq	r2, r4, r8, lsr #17
   54ef0:	muleq	r1, r8, r0
   54ef4:	andeq	lr, r1, r4, asr r6
   54ef8:	andeq	r4, r1, r0, lsl #24
   54efc:	andeq	r0, r0, fp, asr #3
   54f00:	andeq	r2, r4, ip, lsr r8
   54f04:	andeq	sp, r1, r4, lsr #32
   54f08:	ldrdeq	lr, [r1], -ip
   54f0c:	andeq	r4, r1, r8, lsl #23
   54f10:	muleq	r0, r1, r1
   54f14:	muleq	r0, r8, r5
   54f18:	andeq	r2, r4, r0, lsl #15
   54f1c:	andeq	ip, r1, r4, ror #30
   54f20:	andeq	r6, r1, r8, asr r6
   54f24:	andeq	r4, r1, ip, lsl #19
   54f28:			; <UNDEFINED> instruction: 0x000002b9
   54f2c:	andeq	ip, r1, ip, lsr #30
   54f30:	andeq	lr, r1, r0, lsr #4
   54f34:	andeq	r4, r1, r4, asr #18
   54f38:	andeq	r0, r0, r6, ror r2
   54f3c:	andeq	r0, r0, r4, lsr #12
   54f40:	andeq	r2, r4, r8, asr #12
   54f44:	andeq	ip, r1, r0, lsr lr
   54f48:	muleq	r1, r4, r2
   54f4c:	andeq	r4, r1, r4, lsl #19
   54f50:			; <UNDEFINED> instruction: 0x0000f3b8
   54f54:			; <UNDEFINED> instruction: 0x0001cdb4
   54f58:	andeq	lr, r1, r8, lsl r0
   54f5c:	ldrdeq	r4, [r1], -r8
   54f60:	andeq	r0, r0, fp, asr #4
   54f64:	andeq	r0, r0, r6, lsl #8
   54f68:	andeq	pc, r0, r8, asr #6
   54f6c:	andeq	ip, r1, r4, asr #26
   54f70:	andeq	r8, r1, ip, lsr #17
   54f74:	andeq	r8, r1, r4, lsl #17
   54f78:	andeq	ip, r1, ip, asr #25
   54f7c:	andeq	r6, r1, ip, asr #7
   54f80:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   54f84:	andeq	r0, r0, r2, asr r2
   54f88:	tstmi	fp, #2096	; 0x830
   54f8c:	andeq	r4, pc, r0, asr #4
   54f90:	andeq	r8, r0, r6, asr #18
   54f94:	andeq	ip, r1, ip, asr fp
   54f98:	ldrdeq	lr, [r1], -r0
   54f9c:	andeq	r4, r1, r0, asr #13
   54fa0:	andeq	r0, r0, r3, asr #3
   54fa4:	strdeq	pc, [r0], -r4
   54fa8:	andeq	ip, r1, ip, ror #21
   54fac:	andeq	sp, r1, ip, lsr #27
   54fb0:	andeq	r4, r1, ip, lsl #10
   54fb4:	andeq	r0, r0, fp, asr r2
   54fb8:	andeq	r0, r0, r4, lsl #8
   54fbc:	andeq	pc, r0, r4, lsl #1
   54fc0:	andeq	pc, r0, r0, rrx
   54fc4:	andeq	pc, r0, r0, lsr r0	; <UNPREDICTABLE>
   54fc8:	andeq	ip, r1, ip, lsr #20
   54fcc:	andeq	r7, r1, r8, lsr #26
   54fd0:			; <UNDEFINED> instruction: 0x0001deb8
   54fd4:			; <UNDEFINED> instruction: 0x0000efbc
   54fd8:	andeq	r2, r4, r8, lsl #3
   54fdc:	andeq	ip, r1, r8, ror r9
   54fe0:	andeq	sp, r1, r8, ror #25
   54fe4:	ldr	r2, [sp, #124]	; 0x7c
   54fe8:	cmp	r2, #2
   54fec:	bne	5496c <blkid_probe_get_size@plt+0x4d454>
   54ff0:	ldr	r3, [pc, #-548]	; 54dd4 <blkid_probe_get_size@plt+0x4d8bc>
   54ff4:	mov	r2, #0
   54ff8:	add	r3, pc, r3
   54ffc:	ldr	r4, [sp, #44]	; 0x2c
   55000:	ldr	r3, [r3, #4]
   55004:	str	r2, [sp, #136]	; 0x88
   55008:	cmp	r3, #6
   5500c:	bgt	560a4 <blkid_probe_get_size@plt+0x4eb8c>
   55010:	ldr	r3, [pc, #-576]	; 54dd8 <blkid_probe_get_size@plt+0x4d8c0>
   55014:	ldr	r0, [pc, #-576]	; 54ddc <blkid_probe_get_size@plt+0x4d8c4>
   55018:	add	r3, pc, r3
   5501c:	add	r3, r3, #1248	; 0x4e0
   55020:	ldr	ip, [pc, #-584]	; 54de0 <blkid_probe_get_size@plt+0x4d8c8>
   55024:	add	r3, r3, #8
   55028:	str	r2, [sp, #8]
   5502c:	ldr	r2, [pc, #-592]	; 54de4 <blkid_probe_get_size@plt+0x4d8cc>
   55030:	mov	r1, #0
   55034:	add	r0, pc, r0
   55038:	add	ip, pc, ip
   5503c:	stm	sp, {r3, r4}
   55040:	str	r0, [sp, #24]
   55044:	str	ip, [sp, #20]
   55048:	str	r1, [sp, #16]
   5504c:	str	r1, [sp, #12]
   55050:	mov	r3, #416	; 0x1a0
   55054:	add	r2, pc, r2
   55058:	mov	r0, #7
   5505c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   55060:	b	549f0 <blkid_probe_get_size@plt+0x4d4d8>
   55064:	ldr	sl, [sp, #100]	; 0x64
   55068:	b	54180 <blkid_probe_get_size@plt+0x4cc68>
   5506c:	ldr	r3, [pc, #-652]	; 54de8 <blkid_probe_get_size@plt+0x4d8d0>
   55070:	add	r3, pc, r3
   55074:	ldr	r3, [r3, #4]
   55078:	cmp	r3, #3
   5507c:	ble	54684 <blkid_probe_get_size@plt+0x4d16c>
   55080:	ldr	r3, [pc, #-668]	; 54dec <blkid_probe_get_size@plt+0x4d8d4>
   55084:	ldr	r2, [sp, #120]	; 0x78
   55088:	add	r3, pc, r3
   5508c:	ldr	r0, [pc, #-676]	; 54df0 <blkid_probe_get_size@plt+0x4d8d8>
   55090:	str	r2, [sp, #8]
   55094:	add	r3, r3, #1248	; 0x4e0
   55098:	ldr	r2, [pc, #-684]	; 54df4 <blkid_probe_get_size@plt+0x4d8dc>
   5509c:	add	r0, pc, r0
   550a0:	add	r3, r3, #8
   550a4:	str	r3, [sp]
   550a8:	str	r0, [sp, #4]
   550ac:	mov	r3, #384	; 0x180
   550b0:	add	r2, pc, r2
   550b4:	ldr	r0, [pc, #-260]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   550b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   550bc:	b	54684 <blkid_probe_get_size@plt+0x4d16c>
   550c0:	ldr	r3, [pc, #-720]	; 54df8 <blkid_probe_get_size@plt+0x4d8e0>
   550c4:	ldr	r2, [pc, #-720]	; 54dfc <blkid_probe_get_size@plt+0x4d8e4>
   550c8:	add	r3, pc, r3
   550cc:	add	r3, r3, #1168	; 0x490
   550d0:	ldr	r1, [pc, #-728]	; 54e00 <blkid_probe_get_size@plt+0x4d8e8>
   550d4:	add	r3, r3, #12
   550d8:	str	r3, [sp]
   550dc:	mov	r0, r4
   550e0:	ldr	r3, [pc, #-740]	; 54e04 <blkid_probe_get_size@plt+0x4d8ec>
   550e4:	add	r2, pc, r2
   550e8:	add	r1, pc, r1
   550ec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   550f0:	add	r0, fp, #84	; 0x54
   550f4:	bl	610fc <blkid_probe_get_size@plt+0x59be4>
   550f8:	cmp	r0, #0
   550fc:	beq	54424 <blkid_probe_get_size@plt+0x4cf0c>
   55100:	ldr	r3, [pc, #-768]	; 54e08 <blkid_probe_get_size@plt+0x4d8f0>
   55104:	add	r3, pc, r3
   55108:	ldr	r3, [r3, #4]
   5510c:	cmp	r3, #5
   55110:	bgt	55b88 <blkid_probe_get_size@plt+0x4e670>
   55114:	ldr	r6, [sp, #120]	; 0x78
   55118:	add	r8, sp, #208	; 0xd0
   5511c:	b	54598 <blkid_probe_get_size@plt+0x4d080>
   55120:	mov	r2, #32
   55124:	mov	r1, #0
   55128:	add	r0, sp, #140	; 0x8c
   5512c:	ldr	r4, [sp, #120]	; 0x78
   55130:	bl	6c84 <memset@plt>
   55134:	mov	r3, #60	; 0x3c
   55138:	mov	r2, #32
   5513c:	mov	r1, #0
   55140:	mov	r0, r8
   55144:	str	r3, [sp, #136]	; 0x88
   55148:	bl	6c84 <memset@plt>
   5514c:	ldr	r3, [sp, #96]	; 0x60
   55150:	str	r3, [sp, #224]	; 0xe0
   55154:	ldr	r3, [r7, #4]
   55158:	cmp	r3, #0
   5515c:	blt	559a8 <blkid_probe_get_size@plt+0x4e490>
   55160:	mov	r2, r4
   55164:	mov	r1, #16
   55168:	mov	r0, r8
   5516c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   55170:	mov	r2, r8
   55174:	ldr	r1, [pc, #-492]	; 54f90 <blkid_probe_get_size@plt+0x4da78>
   55178:	ldr	r0, [r7, #4]
   5517c:	bl	6e70 <ioctl@plt>
   55180:	cmp	r0, #0
   55184:	blt	55228 <blkid_probe_get_size@plt+0x4dd10>
   55188:	ldrb	r1, [fp, #136]	; 0x88
   5518c:	cmp	r1, #0
   55190:	beq	551a8 <blkid_probe_get_size@plt+0x4dc90>
   55194:	ldr	r3, [fp, #120]	; 0x78
   55198:	ldr	r2, [sp, #156]	; 0x9c
   5519c:	cmp	r2, r3
   551a0:	moveq	r1, #0
   551a4:	strne	r3, [sp, #156]	; 0x9c
   551a8:	ldrb	r3, [fp, #137]	; 0x89
   551ac:	cmp	r3, #0
   551b0:	beq	551c8 <blkid_probe_get_size@plt+0x4dcb0>
   551b4:	ldr	r2, [fp, #124]	; 0x7c
   551b8:	ldr	r0, [sp, #160]	; 0xa0
   551bc:	cmp	r0, r2
   551c0:	movne	r1, r3
   551c4:	strne	r2, [sp, #160]	; 0xa0
   551c8:	ldrb	r3, [fp, #138]	; 0x8a
   551cc:	ldrb	r2, [fp, #139]	; 0x8b
   551d0:	cmp	r3, #0
   551d4:	beq	55960 <blkid_probe_get_size@plt+0x4e448>
   551d8:	ldr	r3, [fp, #128]	; 0x80
   551dc:	ldr	r0, [sp, #164]	; 0xa4
   551e0:	cmp	r0, r3
   551e4:	beq	55960 <blkid_probe_get_size@plt+0x4e448>
   551e8:	cmp	r2, #0
   551ec:	str	r3, [sp, #164]	; 0xa4
   551f0:	beq	55208 <blkid_probe_get_size@plt+0x4dcf0>
   551f4:	ldr	r3, [fp, #132]	; 0x84
   551f8:	ldr	r2, [sp, #168]	; 0xa8
   551fc:	cmp	r2, r3
   55200:	beq	55208 <blkid_probe_get_size@plt+0x4dcf0>
   55204:	str	r3, [sp, #168]	; 0xa8
   55208:	mov	r3, #61	; 0x3d
   5520c:	str	r3, [sp, #136]	; 0x88
   55210:	mov	r2, r8
   55214:	ldr	r0, [r7, #4]
   55218:	ldr	r1, [pc, #-656]	; 54f90 <blkid_probe_get_size@plt+0x4da78>
   5521c:	bl	6e70 <ioctl@plt>
   55220:	cmp	r0, #0
   55224:	bge	54690 <blkid_probe_get_size@plt+0x4d178>
   55228:	bl	732c <__errno_location@plt>
   5522c:	ldr	r3, [r0]
   55230:	rsb	r1, r3, #0
   55234:	cmp	r1, #0
   55238:	bge	54690 <blkid_probe_get_size@plt+0x4d178>
   5523c:	ldr	r3, [pc, #-1080]	; 54e0c <blkid_probe_get_size@plt+0x4d8f4>
   55240:	add	r3, pc, r3
   55244:	ldr	r3, [r3, #4]
   55248:	cmp	r3, #3
   5524c:	ble	54690 <blkid_probe_get_size@plt+0x4d178>
   55250:	ldr	r3, [pc, #-1096]	; 54e10 <blkid_probe_get_size@plt+0x4d8f8>
   55254:	ldr	r2, [sp, #120]	; 0x78
   55258:	add	r3, pc, r3
   5525c:	ldr	r0, [pc, #-1104]	; 54e14 <blkid_probe_get_size@plt+0x4d8fc>
   55260:	str	r2, [sp, #8]
   55264:	add	r3, r3, #1248	; 0x4e0
   55268:	ldr	r2, [pc, #-1112]	; 54e18 <blkid_probe_get_size@plt+0x4d900>
   5526c:	add	r0, pc, r0
   55270:	add	r3, r3, #8
   55274:	str	r3, [sp]
   55278:	str	r0, [sp, #4]
   5527c:	ldr	r3, [pc, #-1128]	; 54e1c <blkid_probe_get_size@plt+0x4d904>
   55280:	add	r2, pc, r2
   55284:	ldr	r0, [pc, #-724]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55288:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5528c:	b	54690 <blkid_probe_get_size@plt+0x4d178>
   55290:	add	r0, r7, #4
   55294:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   55298:	subs	r1, r0, #0
   5529c:	bge	54430 <blkid_probe_get_size@plt+0x4cf18>
   552a0:	ldr	r3, [pc, #-1160]	; 54e20 <blkid_probe_get_size@plt+0x4d908>
   552a4:	add	r3, pc, r3
   552a8:	ldr	r3, [r3, #4]
   552ac:	cmp	r3, #3
   552b0:	bgt	55c70 <blkid_probe_get_size@plt+0x4e758>
   552b4:	rsb	r3, r1, #0
   552b8:	add	r8, sp, #208	; 0xd0
   552bc:	uxtb	r3, r3
   552c0:	rsb	r3, r3, #0
   552c4:	str	r3, [sp, #44]	; 0x2c
   552c8:	ldr	r0, [sp, #136]	; 0x88
   552cc:	bl	69f0 <free@plt>
   552d0:	ldr	r3, [sp, #44]	; 0x2c
   552d4:	cmp	r3, #0
   552d8:	bge	55390 <blkid_probe_get_size@plt+0x4de78>
   552dc:	ldr	r3, [fp, #96]	; 0x60
   552e0:	add	r5, fp, #84	; 0x54
   552e4:	cmn	r3, #1
   552e8:	beq	55770 <blkid_probe_get_size@plt+0x4e258>
   552ec:	ldr	r2, [pc, #-1232]	; 54e24 <blkid_probe_get_size@plt+0x4d90c>
   552f0:	add	r2, pc, r2
   552f4:	ldr	r2, [r2, #4]
   552f8:	cmp	r2, #3
   552fc:	bgt	55718 <blkid_probe_get_size@plt+0x4e200>
   55300:	ldr	r3, [fp, #72]	; 0x48
   55304:	ldr	r6, [sp, #120]	; 0x78
   55308:	cmp	r3, #0
   5530c:	ldr	r5, [fp, #76]	; 0x4c
   55310:	beq	55320 <blkid_probe_get_size@plt+0x4de08>
   55314:	ldr	r2, [sp, #44]	; 0x2c
   55318:	cmn	r2, #95	; 0x5f
   5531c:	beq	55cb0 <blkid_probe_get_size@plt+0x4e798>
   55320:	cmn	r5, #1
   55324:	beq	54598 <blkid_probe_get_size@plt+0x4d080>
   55328:	ldr	r3, [pc, #-1288]	; 54e28 <blkid_probe_get_size@plt+0x4d910>
   5532c:	add	r3, pc, r3
   55330:	ldr	r3, [r3, #4]
   55334:	cmp	r3, #3
   55338:	ble	54598 <blkid_probe_get_size@plt+0x4d080>
   5533c:	cmp	r5, #1
   55340:	movhi	r1, #0
   55344:	ldrls	r3, [pc, #-1312]	; 54e2c <blkid_probe_get_size@plt+0x4d914>
   55348:	addls	r3, pc, r3
   5534c:	ldrls	r1, [r3, r5, lsl #2]
   55350:	ldr	r3, [pc, #-1320]	; 54e30 <blkid_probe_get_size@plt+0x4d918>
   55354:	ldr	r2, [pc, #-1320]	; 54e34 <blkid_probe_get_size@plt+0x4d91c>
   55358:	add	r3, pc, r3
   5535c:	add	r2, pc, r2
   55360:	add	r3, r3, #1248	; 0x4e0
   55364:	str	r2, [sp, #4]
   55368:	ldr	r2, [pc, #-1336]	; 54e38 <blkid_probe_get_size@plt+0x4d920>
   5536c:	add	r3, r3, #8
   55370:	str	r1, [sp, #12]
   55374:	str	r3, [sp]
   55378:	str	r6, [sp, #8]
   5537c:	ldr	r1, [sp, #44]	; 0x2c
   55380:	ldr	r3, [pc, #-1356]	; 54e3c <blkid_probe_get_size@plt+0x4d924>
   55384:	add	r2, pc, r2
   55388:	ldr	r0, [pc, #-984]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   5538c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55390:	ldr	r6, [sp, #120]	; 0x78
   55394:	b	54598 <blkid_probe_get_size@plt+0x4d080>
   55398:	ldr	r2, [pc, #-1376]	; 54e40 <blkid_probe_get_size@plt+0x4d928>
   5539c:	ldr	r1, [pc, #-1376]	; 54e44 <blkid_probe_get_size@plt+0x4d92c>
   553a0:	add	r2, pc, r2
   553a4:	add	r2, r2, #1200	; 0x4b0
   553a8:	add	r2, r2, #8
   553ac:	str	r2, [sp]
   553b0:	ldr	r2, [pc, #-1392]	; 54e48 <blkid_probe_get_size@plt+0x4d930>
   553b4:	ldr	r3, [pc, #-1392]	; 54e4c <blkid_probe_get_size@plt+0x4d934>
   553b8:	add	r2, pc, r2
   553bc:	add	r1, pc, r1
   553c0:	mov	r0, #1
   553c4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   553c8:	bl	732c <__errno_location@plt>
   553cc:	ldr	r1, [r0]
   553d0:	rsb	r1, r1, #0
   553d4:	cmp	r1, #0
   553d8:	ldr	r6, [sp, #120]	; 0x78
   553dc:	bge	5466c <blkid_probe_get_size@plt+0x4d154>
   553e0:	ldr	r3, [pc, #-1432]	; 54e50 <blkid_probe_get_size@plt+0x4d938>
   553e4:	add	r3, pc, r3
   553e8:	ldr	r3, [r3, #4]
   553ec:	cmp	r3, #3
   553f0:	ble	5466c <blkid_probe_get_size@plt+0x4d154>
   553f4:	ldr	r3, [fp, #92]	; 0x5c
   553f8:	cmp	r3, #7
   553fc:	bhi	55f58 <blkid_probe_get_size@plt+0x4ea40>
   55400:	ldr	r2, [pc, #-1460]	; 54e54 <blkid_probe_get_size@plt+0x4d93c>
   55404:	add	r2, pc, r2
   55408:	ldr	r0, [r2, r3, lsl #2]
   5540c:	ldr	r3, [pc, #-1468]	; 54e58 <blkid_probe_get_size@plt+0x4d940>
   55410:	ldr	r2, [pc, #-1468]	; 54e5c <blkid_probe_get_size@plt+0x4d944>
   55414:	add	r3, pc, r3
   55418:	add	r2, pc, r2
   5541c:	str	r2, [sp, #4]
   55420:	add	r3, r3, #1248	; 0x4e0
   55424:	ldr	r2, [pc, #-1484]	; 54e60 <blkid_probe_get_size@plt+0x4d948>
   55428:	add	r3, r3, #8
   5542c:	str	r0, [sp, #12]
   55430:	str	r3, [sp]
   55434:	str	r6, [sp, #8]
   55438:	mov	r3, #380	; 0x17c
   5543c:	add	r2, pc, r2
   55440:	ldr	r0, [pc, #-1168]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55444:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55448:	b	54668 <blkid_probe_get_size@plt+0x4d150>
   5544c:	ldr	r3, [pc, #-1520]	; 54e64 <blkid_probe_get_size@plt+0x4d94c>
   55450:	ldr	sl, [sp, #100]	; 0x64
   55454:	add	r3, pc, r3
   55458:	ldr	r3, [r3, #4]
   5545c:	b	54180 <blkid_probe_get_size@plt+0x4cc68>
   55460:	cmp	r3, #0
   55464:	beq	54978 <blkid_probe_get_size@plt+0x4d460>
   55468:	ldr	r1, [pc, #-1544]	; 54e68 <blkid_probe_get_size@plt+0x4d950>
   5546c:	mov	r2, #0
   55470:	add	r1, pc, r1
   55474:	str	r2, [sp, #136]	; 0x88
   55478:	ldr	r1, [r1, #4]
   5547c:	cmp	r1, #6
   55480:	bgt	55e94 <blkid_probe_get_size@plt+0x4e97c>
   55484:	mov	r0, r2
   55488:	ldr	ip, [sp, #108]	; 0x6c
   5548c:	cmp	ip, #6
   55490:	movhi	r1, #0
   55494:	ldrls	r1, [pc, #-1584]	; 54e6c <blkid_probe_get_size@plt+0x4d954>
   55498:	addls	r1, pc, r1
   5549c:	ldrls	r1, [r1, ip, lsl #2]
   554a0:	ldr	ip, [pc, #-1592]	; 54e70 <blkid_probe_get_size@plt+0x4d958>
   554a4:	str	r3, [sp, #28]
   554a8:	add	ip, pc, ip
   554ac:	add	r3, ip, #1248	; 0x4e0
   554b0:	ldr	ip, [pc, #-1604]	; 54e74 <blkid_probe_get_size@plt+0x4d95c>
   554b4:	stmib	sp, {r0, r2}
   554b8:	ldr	r2, [pc, #-1608]	; 54e78 <blkid_probe_get_size@plt+0x4d960>
   554bc:	add	ip, pc, ip
   554c0:	add	r3, r3, #8
   554c4:	str	r1, [sp, #24]
   554c8:	mov	r1, #0
   554cc:	str	r3, [sp]
   554d0:	str	ip, [sp, #20]
   554d4:	str	r1, [sp, #16]
   554d8:	str	r1, [sp, #12]
   554dc:	ldr	r3, [pc, #-1640]	; 54e7c <blkid_probe_get_size@plt+0x4d964>
   554e0:	add	r2, pc, r2
   554e4:	mov	r0, #7
   554e8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   554ec:	b	549f0 <blkid_probe_get_size@plt+0x4d4d8>
   554f0:	cmp	r3, #3
   554f4:	ldr	sl, [sp, #100]	; 0x64
   554f8:	ble	54188 <blkid_probe_get_size@plt+0x4cc70>
   554fc:	ldr	r2, [sp, #128]	; 0x80
   55500:	ldr	r3, [pc, #-1672]	; 54e80 <blkid_probe_get_size@plt+0x4d968>
   55504:	str	r2, [sp, #12]
   55508:	ldr	r2, [pc, #-1676]	; 54e84 <blkid_probe_get_size@plt+0x4d96c>
   5550c:	add	r3, pc, r3
   55510:	add	r2, pc, r2
   55514:	ldr	r0, [fp]
   55518:	add	r3, r3, #1184	; 0x4a0
   5551c:	str	r2, [sp, #4]
   55520:	ldr	r2, [pc, #-1696]	; 54e88 <blkid_probe_get_size@plt+0x4d970>
   55524:	add	r3, r3, #8
   55528:	str	r0, [sp, #8]
   5552c:	str	r3, [sp]
   55530:	add	r2, pc, r2
   55534:	mov	r3, #272	; 0x110
   55538:	ldr	r0, [pc, #-1416]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   5553c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55540:	b	54188 <blkid_probe_get_size@plt+0x4cc70>
   55544:	add	r0, r7, #4
   55548:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   5554c:	subs	r1, r0, #0
   55550:	bge	545e0 <blkid_probe_get_size@plt+0x4d0c8>
   55554:	ldr	r3, [pc, #-1744]	; 54e8c <blkid_probe_get_size@plt+0x4d974>
   55558:	add	r3, pc, r3
   5555c:	ldr	r3, [r3, #4]
   55560:	cmp	r3, #3
   55564:	rsble	r1, r1, #0
   55568:	uxtble	r1, r1
   5556c:	rsble	r1, r1, #0
   55570:	ble	553d4 <blkid_probe_get_size@plt+0x4debc>
   55574:	ldr	r2, [pc, #-1772]	; 54e90 <blkid_probe_get_size@plt+0x4d978>
   55578:	ldr	r3, [pc, #-1772]	; 54e94 <blkid_probe_get_size@plt+0x4d97c>
   5557c:	add	r2, pc, r2
   55580:	str	r2, [sp, #4]
   55584:	add	r3, pc, r3
   55588:	ldr	r2, [pc, #-1784]	; 54e98 <blkid_probe_get_size@plt+0x4d980>
   5558c:	add	r3, r3, #1296	; 0x510
   55590:	str	r3, [sp]
   55594:	add	r2, pc, r2
   55598:	mov	r3, #236	; 0xec
   5559c:	ldr	r0, [pc, #-1516]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   555a0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   555a4:	mov	r1, r0
   555a8:	b	553d4 <blkid_probe_get_size@plt+0x4debc>
   555ac:	ldr	r0, [sp, #132]	; 0x84
   555b0:	cmp	r0, #0
   555b4:	beq	555bc <blkid_probe_get_size@plt+0x4e0a4>
   555b8:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   555bc:	ldr	r3, [pc, #-1832]	; 54e9c <blkid_probe_get_size@plt+0x4d984>
   555c0:	add	r3, pc, r3
   555c4:	ldr	r3, [r3, #4]
   555c8:	cmp	r3, #3
   555cc:	rsble	r3, r8, #0
   555d0:	uxtble	r3, r3
   555d4:	rsble	r6, r3, #0
   555d8:	ble	54714 <blkid_probe_get_size@plt+0x4d1fc>
   555dc:	ldr	r3, [pc, #-1860]	; 54ea0 <blkid_probe_get_size@plt+0x4d988>
   555e0:	ldr	r2, [pc, #-1860]	; 54ea4 <blkid_probe_get_size@plt+0x4d98c>
   555e4:	add	r3, pc, r3
   555e8:	add	r2, pc, r2
   555ec:	ldr	r0, [sp, #120]	; 0x78
   555f0:	str	r2, [sp, #4]
   555f4:	add	r3, r3, #1248	; 0x4e0
   555f8:	ldr	r2, [pc, #-1880]	; 54ea8 <blkid_probe_get_size@plt+0x4d990>
   555fc:	add	r3, r3, #8
   55600:	str	r3, [sp]
   55604:	str	r0, [sp, #8]
   55608:	mov	r1, r8
   5560c:	mov	r3, #484	; 0x1e4
   55610:	add	r2, pc, r2
   55614:	ldr	r0, [pc, #-1636]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55618:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5561c:	mov	r6, r0
   55620:	b	54714 <blkid_probe_get_size@plt+0x4d1fc>
   55624:	mov	r2, r5
   55628:	mov	r0, r6
   5562c:	mov	r1, r4
   55630:	bl	2a570 <blkid_probe_get_size@plt+0x23058>
   55634:	cmp	r0, #0
   55638:	bge	5458c <blkid_probe_get_size@plt+0x4d074>
   5563c:	ldr	r3, [pc, #-1944]	; 54eac <blkid_probe_get_size@plt+0x4d994>
   55640:	add	r3, pc, r3
   55644:	ldr	r3, [r3, #4]
   55648:	cmp	r3, #3
   5564c:	bgt	55a10 <blkid_probe_get_size@plt+0x4e4f8>
   55650:	rsb	r3, r0, #0
   55654:	uxtb	r3, r3
   55658:	rsb	r3, r3, #0
   5565c:	str	r3, [sp, #44]	; 0x2c
   55660:	b	552c8 <blkid_probe_get_size@plt+0x4ddb0>
   55664:	mov	r3, #1
   55668:	strb	r3, [r5, #11]
   5566c:	ldr	r2, [fp, #84]	; 0x54
   55670:	ldr	r3, [fp, #88]	; 0x58
   55674:	add	r0, r5, #564	; 0x234
   55678:	str	r2, [r5, #556]	; 0x22c
   5567c:	str	r3, [r5, #560]	; 0x230
   55680:	mov	r2, #500	; 0x1f4
   55684:	bl	6c84 <memset@plt>
   55688:	b	544d0 <blkid_probe_get_size@plt+0x4cfb8>
   5568c:	ldr	r2, [sp, #56]	; 0x38
   55690:	mov	r1, #0
   55694:	ldr	r0, [sp, #132]	; 0x84
   55698:	bl	4110c <blkid_probe_get_size@plt+0x39bf4>
   5569c:	subs	r4, r0, #0
   556a0:	blt	55aec <blkid_probe_get_size@plt+0x4e5d4>
   556a4:	ldr	r3, [pc, #-2044]	; 54eb0 <blkid_probe_get_size@plt+0x4d998>
   556a8:	mov	r2, #0
   556ac:	add	r3, pc, r3
   556b0:	str	r2, [sp, #136]	; 0x88
   556b4:	ldr	r3, [r3, #4]
   556b8:	cmp	r3, #6
   556bc:	bgt	55ebc <blkid_probe_get_size@plt+0x4e9a4>
   556c0:	mov	r0, r2
   556c4:	ldr	r3, [pc, #-2072]	; 54eb4 <blkid_probe_get_size@plt+0x4d99c>
   556c8:	ldr	lr, [pc, #-2072]	; 54eb8 <blkid_probe_get_size@plt+0x4d9a0>
   556cc:	add	r3, pc, r3
   556d0:	ldr	ip, [sp, #124]	; 0x7c
   556d4:	str	r2, [sp, #8]
   556d8:	add	r3, r3, #1328	; 0x530
   556dc:	ldr	r2, [pc, #-2088]	; 54ebc <blkid_probe_get_size@plt+0x4d9a4>
   556e0:	mov	r1, #0
   556e4:	add	lr, pc, lr
   556e8:	add	r3, r3, #8
   556ec:	str	r0, [sp, #4]
   556f0:	str	r3, [sp]
   556f4:	str	ip, [sp, #24]
   556f8:	str	lr, [sp, #20]
   556fc:	str	r1, [sp, #16]
   55700:	str	r1, [sp, #12]
   55704:	mov	r3, #202	; 0xca
   55708:	add	r2, pc, r2
   5570c:	mov	r0, #7
   55710:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   55714:	b	548b8 <blkid_probe_get_size@plt+0x4d3a0>
   55718:	cmp	r3, #4
   5571c:	bhi	55f84 <blkid_probe_get_size@plt+0x4ea6c>
   55720:	ldr	r2, [pc, #-2152]	; 54ec0 <blkid_probe_get_size@plt+0x4d9a8>
   55724:	add	r2, pc, r2
   55728:	ldr	r1, [r2, r3, lsl #2]
   5572c:	ldr	r3, [pc, #-2160]	; 54ec4 <blkid_probe_get_size@plt+0x4d9ac>
   55730:	ldr	r2, [pc, #-2160]	; 54ec8 <blkid_probe_get_size@plt+0x4d9b0>
   55734:	add	r3, pc, r3
   55738:	add	r2, pc, r2
   5573c:	ldr	r0, [sp, #120]	; 0x78
   55740:	add	r3, r3, #1248	; 0x4e0
   55744:	str	r2, [sp, #4]
   55748:	ldr	r2, [pc, #-2180]	; 54ecc <blkid_probe_get_size@plt+0x4d9b4>
   5574c:	add	r3, r3, #8
   55750:	str	r1, [sp, #8]
   55754:	str	r3, [sp]
   55758:	str	r0, [sp, #12]
   5575c:	ldr	r3, [pc, #-2196]	; 54ed0 <blkid_probe_get_size@plt+0x4d9b8>
   55760:	add	r2, pc, r2
   55764:	ldr	r1, [sp, #44]	; 0x2c
   55768:	ldr	r0, [pc, #-1976]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   5576c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55770:	mov	r0, r5
   55774:	bl	610fc <blkid_probe_get_size@plt+0x59be4>
   55778:	cmp	r0, #0
   5577c:	bne	55300 <blkid_probe_get_size@plt+0x4dde8>
   55780:	ldr	r3, [pc, #-2228]	; 54ed4 <blkid_probe_get_size@plt+0x4d9bc>
   55784:	add	r3, pc, r3
   55788:	ldr	r3, [r3, #4]
   5578c:	cmp	r3, #3
   55790:	ble	55300 <blkid_probe_get_size@plt+0x4dde8>
   55794:	ldr	r3, [pc, #-2244]	; 54ed8 <blkid_probe_get_size@plt+0x4d9c0>
   55798:	ldr	r2, [pc, #-2244]	; 54edc <blkid_probe_get_size@plt+0x4d9c4>
   5579c:	add	r3, pc, r3
   557a0:	add	r2, pc, r2
   557a4:	str	r2, [sp, #4]
   557a8:	add	r3, r3, #1248	; 0x4e0
   557ac:	ldr	r2, [pc, #-2260]	; 54ee0 <blkid_probe_get_size@plt+0x4d9c8>
   557b0:	add	r3, r3, #8
   557b4:	str	r3, [sp]
   557b8:	add	r2, pc, r2
   557bc:	ldr	r3, [pc, #-2272]	; 54ee4 <blkid_probe_get_size@plt+0x4d9cc>
   557c0:	ldr	r1, [sp, #44]	; 0x2c
   557c4:	ldr	r0, [pc, #-2068]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   557c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   557cc:	b	55300 <blkid_probe_get_size@plt+0x4dde8>
   557d0:	bl	732c <__errno_location@plt>
   557d4:	ldr	r0, [r0]
   557d8:	rsb	r0, r0, #0
   557dc:	b	55634 <blkid_probe_get_size@plt+0x4e11c>
   557e0:	ldr	r5, [r7, #4]
   557e4:	mov	r2, #40	; 0x28
   557e8:	mov	r1, #0
   557ec:	add	r8, sp, #408	; 0x198
   557f0:	add	r0, sp, #212	; 0xd4
   557f4:	bl	6c84 <memset@plt>
   557f8:	mov	r6, #1
   557fc:	mov	r0, r5
   55800:	mov	r2, r4
   55804:	ldr	r1, [pc, #-2172]	; 54f90 <blkid_probe_get_size@plt+0x4da78>
   55808:	str	r6, [r8, #-200]!	; 0xffffff38
   5580c:	str	r8, [sp, #192]	; 0xc0
   55810:	bl	6e70 <ioctl@plt>
   55814:	cmp	r0, #0
   55818:	bge	55a78 <blkid_probe_get_size@plt+0x4e560>
   5581c:	bl	732c <__errno_location@plt>
   55820:	ldr	r1, [r0]
   55824:	cmp	r1, #0
   55828:	rsbgt	r1, r1, #0
   5582c:	ldrle	r5, [sp, #136]	; 0x88
   55830:	ble	54460 <blkid_probe_get_size@plt+0x4cf48>
   55834:	ldr	r3, [pc, #-2388]	; 54ee8 <blkid_probe_get_size@plt+0x4d9d0>
   55838:	add	r3, pc, r3
   5583c:	ldr	r3, [r3, #4]
   55840:	cmp	r3, #3
   55844:	bgt	55e50 <blkid_probe_get_size@plt+0x4e938>
   55848:	rsb	r3, r1, #0
   5584c:	uxtb	r3, r3
   55850:	rsb	r3, r3, #0
   55854:	str	r3, [sp, #44]	; 0x2c
   55858:	b	552c8 <blkid_probe_get_size@plt+0x4ddb0>
   5585c:	ldr	r4, [fp, #48]	; 0x30
   55860:	b	54a18 <blkid_probe_get_size@plt+0x4d500>
   55864:	mov	r0, r9
   55868:	bl	2ae70 <blkid_probe_get_size@plt+0x23958>
   5586c:	cmp	r0, #0
   55870:	beq	54a14 <blkid_probe_get_size@plt+0x4d4fc>
   55874:	ldr	r1, [sp, #96]	; 0x60
   55878:	mov	r0, r9
   5587c:	bl	3e788 <blkid_probe_get_size@plt+0x37270>
   55880:	subs	r6, r0, #0
   55884:	bge	55da8 <blkid_probe_get_size@plt+0x4e890>
   55888:	cmn	r6, #2
   5588c:	bne	541bc <blkid_probe_get_size@plt+0x4cca4>
   55890:	ldr	r3, [pc, #-2476]	; 54eec <blkid_probe_get_size@plt+0x4d9d4>
   55894:	add	r3, pc, r3
   55898:	ldr	r3, [r3, #4]
   5589c:	cmp	r3, #3
   558a0:	ble	54a14 <blkid_probe_get_size@plt+0x4d4fc>
   558a4:	ldr	r3, [pc, #-2492]	; 54ef0 <blkid_probe_get_size@plt+0x4d9d8>
   558a8:	ldr	r2, [sp, #120]	; 0x78
   558ac:	add	r3, pc, r3
   558b0:	ldr	r0, [pc, #-2500]	; 54ef4 <blkid_probe_get_size@plt+0x4d9dc>
   558b4:	str	r2, [sp, #8]
   558b8:	add	r3, r3, #1248	; 0x4e0
   558bc:	ldr	r2, [pc, #-2508]	; 54ef8 <blkid_probe_get_size@plt+0x4d9e0>
   558c0:	add	r0, pc, r0
   558c4:	add	r3, r3, #8
   558c8:	str	r3, [sp]
   558cc:	str	r0, [sp, #4]
   558d0:	mov	r1, r6
   558d4:	ldr	r3, [pc, #-2528]	; 54efc <blkid_probe_get_size@plt+0x4d9e4>
   558d8:	add	r2, pc, r2
   558dc:	ldr	r0, [pc, #-2348]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   558e0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   558e4:	b	54a18 <blkid_probe_get_size@plt+0x4d500>
   558e8:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   558ec:	ldr	r3, [r0, #4]
   558f0:	tst	r3, #16
   558f4:	bne	548c8 <blkid_probe_get_size@plt+0x4d3b0>
   558f8:	ldr	r3, [pc, #-2560]	; 54f00 <blkid_probe_get_size@plt+0x4d9e8>
   558fc:	mov	r2, #0
   55900:	add	r3, pc, r3
   55904:	str	r2, [sp, #136]	; 0x88
   55908:	ldr	r3, [r3, #4]
   5590c:	cmp	r3, #6
   55910:	bgt	55f60 <blkid_probe_get_size@plt+0x4ea48>
   55914:	mov	ip, r2
   55918:	ldr	r3, [pc, #-2588]	; 54f04 <blkid_probe_get_size@plt+0x4d9ec>
   5591c:	ldr	r0, [pc, #-2588]	; 54f08 <blkid_probe_get_size@plt+0x4d9f0>
   55920:	add	r3, pc, r3
   55924:	add	r3, r3, #1248	; 0x4e0
   55928:	add	r3, r3, #8
   5592c:	str	r2, [sp, #8]
   55930:	ldr	r2, [pc, #-2604]	; 54f0c <blkid_probe_get_size@plt+0x4d9f4>
   55934:	mov	r1, #0
   55938:	add	r0, pc, r0
   5593c:	stm	sp, {r3, ip}
   55940:	str	r0, [sp, #20]
   55944:	str	r1, [sp, #16]
   55948:	str	r1, [sp, #12]
   5594c:	ldr	r3, [pc, #-2628]	; 54f10 <blkid_probe_get_size@plt+0x4d9f8>
   55950:	add	r2, pc, r2
   55954:	mov	r0, #7
   55958:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5595c:	b	549f0 <blkid_probe_get_size@plt+0x4d4d8>
   55960:	cmp	r2, #0
   55964:	beq	55978 <blkid_probe_get_size@plt+0x4e460>
   55968:	ldr	r3, [fp, #132]	; 0x84
   5596c:	ldr	r2, [sp, #168]	; 0xa8
   55970:	cmp	r2, r3
   55974:	bne	55204 <blkid_probe_get_size@plt+0x4dcec>
   55978:	cmp	r1, #0
   5597c:	beq	54690 <blkid_probe_get_size@plt+0x4d178>
   55980:	b	55208 <blkid_probe_get_size@plt+0x4dcf0>
   55984:	ldr	r1, [sp, #96]	; 0x60
   55988:	mov	r0, r9
   5598c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55990:	ldr	r2, [sp, #136]	; 0x88
   55994:	cmp	r2, #0
   55998:	beq	54088 <blkid_probe_get_size@plt+0x4cb70>
   5599c:	ldr	ip, [pc, #-2704]	; 54f14 <blkid_probe_get_size@plt+0x4d9fc>
   559a0:	add	ip, pc, ip
   559a4:	b	5408c <blkid_probe_get_size@plt+0x4cb74>
   559a8:	add	r0, r7, #4
   559ac:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   559b0:	subs	r1, r0, #0
   559b4:	bge	55160 <blkid_probe_get_size@plt+0x4dc48>
   559b8:	ldr	r2, [pc, #-2728]	; 54f18 <blkid_probe_get_size@plt+0x4da00>
   559bc:	add	r2, pc, r2
   559c0:	ldr	r2, [r2, #4]
   559c4:	cmp	r2, #3
   559c8:	rsble	r3, r1, #0
   559cc:	uxtble	r3, r3
   559d0:	rsble	r1, r3, #0
   559d4:	ble	55234 <blkid_probe_get_size@plt+0x4dd1c>
   559d8:	ldr	r2, [pc, #-2756]	; 54f1c <blkid_probe_get_size@plt+0x4da04>
   559dc:	ldr	ip, [pc, #-2756]	; 54f20 <blkid_probe_get_size@plt+0x4da08>
   559e0:	add	r2, pc, r2
   559e4:	add	r2, r2, #1312	; 0x520
   559e8:	str	r2, [sp]
   559ec:	ldr	r2, [pc, #-2768]	; 54f24 <blkid_probe_get_size@plt+0x4da0c>
   559f0:	add	ip, pc, ip
   559f4:	str	ip, [sp, #4]
   559f8:	ldr	r3, [pc, #-2776]	; 54f28 <blkid_probe_get_size@plt+0x4da10>
   559fc:	add	r2, pc, r2
   55a00:	ldr	r0, [pc, #-2640]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55a04:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55a08:	mov	r1, r0
   55a0c:	b	55234 <blkid_probe_get_size@plt+0x4dd1c>
   55a10:	ldr	r3, [pc, #-2796]	; 54f2c <blkid_probe_get_size@plt+0x4da14>
   55a14:	ldr	r2, [pc, #-2796]	; 54f30 <blkid_probe_get_size@plt+0x4da18>
   55a18:	add	r3, pc, r3
   55a1c:	add	r2, pc, r2
   55a20:	ldr	r1, [sp, #44]	; 0x2c
   55a24:	str	r2, [sp, #4]
   55a28:	add	r3, r3, #1216	; 0x4c0
   55a2c:	ldr	r2, [pc, #-2816]	; 54f34 <blkid_probe_get_size@plt+0x4da1c>
   55a30:	add	r3, r3, #12
   55a34:	str	r1, [sp, #8]
   55a38:	str	r3, [sp]
   55a3c:	mov	r1, r0
   55a40:	ldr	r3, [pc, #-2832]	; 54f38 <blkid_probe_get_size@plt+0x4da20>
   55a44:	add	r2, pc, r2
   55a48:	ldr	r0, [pc, #-2712]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55a4c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55a50:	str	r0, [sp, #44]	; 0x2c
   55a54:	b	552c8 <blkid_probe_get_size@plt+0x4ddb0>
   55a58:	mov	r0, r3
   55a5c:	str	r2, [sp, #52]	; 0x34
   55a60:	bl	34928 <blkid_probe_get_size@plt+0x2d410>
   55a64:	subs	r8, r0, #0
   55a68:	blt	555ac <blkid_probe_get_size@plt+0x4e094>
   55a6c:	ldr	r0, [r7, #12]
   55a70:	ldr	r2, [sp, #52]	; 0x34
   55a74:	b	54a6c <blkid_probe_get_size@plt+0x4d554>
   55a78:	ldr	r1, [pc, #-2884]	; 54f3c <blkid_probe_get_size@plt+0x4da24>
   55a7c:	mov	r0, r6
   55a80:	bl	7164 <calloc@plt>
   55a84:	subs	r5, r0, #0
   55a88:	beq	56268 <blkid_probe_get_size@plt+0x4ed50>
   55a8c:	ldrh	r2, [sp, #236]	; 0xec
   55a90:	ldrh	r3, [sp, #220]	; 0xdc
   55a94:	ldrb	r1, [sp, #222]	; 0xde
   55a98:	ldrb	r0, [sp, #224]	; 0xe0
   55a9c:	orr	r3, r3, r2, lsl #16
   55aa0:	str	r3, [r5, #4]
   55aa4:	ldrb	r2, [sp, #223]	; 0xdf
   55aa8:	ldrb	r3, [sp, #227]	; 0xe3
   55aac:	ldrb	ip, [sp, #226]	; 0xe2
   55ab0:	strb	r1, [r5, #8]
   55ab4:	strb	r2, [r5, #9]
   55ab8:	ldr	r1, [sp, #212]	; 0xd4
   55abc:	ldr	r2, [sp, #216]	; 0xd8
   55ac0:	strb	r3, [r5, #12]
   55ac4:	ldr	r3, [sp, #240]	; 0xf0
   55ac8:	str	r6, [r5]
   55acc:	strb	r6, [r5, #15]
   55ad0:	str	r5, [sp, #136]	; 0x88
   55ad4:	strb	r0, [r5, #10]
   55ad8:	strb	ip, [r5, #11]
   55adc:	str	r1, [r5, #48]	; 0x30
   55ae0:	str	r2, [r5, #556]	; 0x22c
   55ae4:	str	r3, [r5, #1064]	; 0x428
   55ae8:	b	54460 <blkid_probe_get_size@plt+0x4cf48>
   55aec:	ldr	r2, [pc, #-2996]	; 54f40 <blkid_probe_get_size@plt+0x4da28>
   55af0:	mov	r3, #0
   55af4:	add	r2, pc, r2
   55af8:	str	r3, [sp, #136]	; 0x88
   55afc:	ldr	r2, [r2, #4]
   55b00:	cmp	r2, #3
   55b04:	bgt	55eec <blkid_probe_get_size@plt+0x4e9d4>
   55b08:	mov	r1, r3
   55b0c:	ldr	r2, [pc, #-3024]	; 54f44 <blkid_probe_get_size@plt+0x4da2c>
   55b10:	str	r3, [sp, #8]
   55b14:	add	r2, pc, r2
   55b18:	add	r2, r2, #1328	; 0x530
   55b1c:	add	r2, r2, #8
   55b20:	ldr	r3, [pc, #-3040]	; 54f48 <blkid_probe_get_size@plt+0x4da30>
   55b24:	ldr	ip, [sp, #132]	; 0x84
   55b28:	str	r2, [sp]
   55b2c:	ldr	r2, [pc, #-3048]	; 54f4c <blkid_probe_get_size@plt+0x4da34>
   55b30:	mov	r0, #0
   55b34:	add	r3, pc, r3
   55b38:	str	r1, [sp, #4]
   55b3c:	str	r3, [sp, #20]
   55b40:	str	r0, [sp, #16]
   55b44:	str	r0, [sp, #12]
   55b48:	mov	r1, r4
   55b4c:	str	ip, [sp, #24]
   55b50:	mov	r3, #200	; 0xc8
   55b54:	add	r2, pc, r2
   55b58:	mov	r0, #4
   55b5c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   55b60:	b	548b8 <blkid_probe_get_size@plt+0x4d3a0>
   55b64:	add	r1, sp, #132	; 0x84
   55b68:	mov	r0, r9
   55b6c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55b70:	ldr	r2, [sp, #132]	; 0x84
   55b74:	cmp	r2, #0
   55b78:	beq	541d8 <blkid_probe_get_size@plt+0x4ccc0>
   55b7c:	ldr	r1, [pc, #-3124]	; 54f50 <blkid_probe_get_size@plt+0x4da38>
   55b80:	add	r1, pc, r1
   55b84:	b	541dc <blkid_probe_get_size@plt+0x4ccc4>
   55b88:	ldr	r3, [pc, #-3132]	; 54f54 <blkid_probe_get_size@plt+0x4da3c>
   55b8c:	ldr	r2, [pc, #-3132]	; 54f58 <blkid_probe_get_size@plt+0x4da40>
   55b90:	add	r3, pc, r3
   55b94:	add	r2, pc, r2
   55b98:	str	r2, [sp, #4]
   55b9c:	add	r3, r3, #1216	; 0x4c0
   55ba0:	ldr	r2, [pc, #-3148]	; 54f5c <blkid_probe_get_size@plt+0x4da44>
   55ba4:	add	r3, r3, #12
   55ba8:	mov	r1, r5
   55bac:	str	r3, [sp]
   55bb0:	add	r2, pc, r2
   55bb4:	ldr	r3, [pc, #-3164]	; 54f60 <blkid_probe_get_size@plt+0x4da48>
   55bb8:	ldr	r0, [pc, #-3164]	; 54f64 <blkid_probe_get_size@plt+0x4da4c>
   55bbc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55bc0:	ldr	r0, [sp, #136]	; 0x88
   55bc4:	bl	69f0 <free@plt>
   55bc8:	add	r8, sp, #208	; 0xd0
   55bcc:	ldr	r6, [sp, #120]	; 0x78
   55bd0:	b	54598 <blkid_probe_get_size@plt+0x4d080>
   55bd4:	ldr	r1, [sp, #96]	; 0x60
   55bd8:	mov	r0, r9
   55bdc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55be0:	ldr	r2, [sp, #136]	; 0x88
   55be4:	cmp	r2, #0
   55be8:	beq	546c0 <blkid_probe_get_size@plt+0x4d1a8>
   55bec:	ldr	r1, [pc, #-3212]	; 54f68 <blkid_probe_get_size@plt+0x4da50>
   55bf0:	add	r1, pc, r1
   55bf4:	b	546c4 <blkid_probe_get_size@plt+0x4d1ac>
   55bf8:	ldr	r2, [pc, #-3220]	; 54f6c <blkid_probe_get_size@plt+0x4da54>
   55bfc:	ldr	r1, [pc, #-3220]	; 54f70 <blkid_probe_get_size@plt+0x4da58>
   55c00:	add	r2, pc, r2
   55c04:	add	r2, r2, #1344	; 0x540
   55c08:	add	r2, r2, #8
   55c0c:	str	r2, [sp]
   55c10:	ldr	r2, [pc, #-3236]	; 54f74 <blkid_probe_get_size@plt+0x4da5c>
   55c14:	mov	r3, #43	; 0x2b
   55c18:	add	r2, pc, r2
   55c1c:	add	r1, pc, r1
   55c20:	mov	r0, #0
   55c24:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   55c28:	mov	r1, #6
   55c2c:	mov	r0, r8
   55c30:	bl	428f0 <blkid_probe_get_size@plt+0x3b3d8>
   55c34:	ldrb	r3, [sp, #208]	; 0xd0
   55c38:	bic	r3, r3, #1
   55c3c:	orr	r3, r3, #2
   55c40:	strb	r3, [sp, #208]	; 0xd0
   55c44:	ldr	r2, [sp, #128]	; 0x80
   55c48:	mov	r3, #0
   55c4c:	ldr	r1, [fp, #68]	; 0x44
   55c50:	cmp	r2, r3
   55c54:	ldr	r5, [fp, #64]	; 0x40
   55c58:	str	r1, [sp, #44]	; 0x2c
   55c5c:	str	r3, [sp, #132]	; 0x84
   55c60:	add	r3, r7, #12
   55c64:	ble	55bf8 <blkid_probe_get_size@plt+0x4e6e0>
   55c68:	mov	r4, r8
   55c6c:	b	54a60 <blkid_probe_get_size@plt+0x4d548>
   55c70:	ldr	r3, [pc, #-3328]	; 54f78 <blkid_probe_get_size@plt+0x4da60>
   55c74:	ldr	r2, [pc, #-3328]	; 54f7c <blkid_probe_get_size@plt+0x4da64>
   55c78:	add	r3, pc, r3
   55c7c:	add	r2, pc, r2
   55c80:	str	r2, [sp, #4]
   55c84:	add	r3, r3, #1216	; 0x4c0
   55c88:	ldr	r2, [pc, #-3344]	; 54f80 <blkid_probe_get_size@plt+0x4da68>
   55c8c:	add	r3, r3, #12
   55c90:	str	r3, [sp]
   55c94:	add	r2, pc, r2
   55c98:	ldr	r3, [pc, #-3356]	; 54f84 <blkid_probe_get_size@plt+0x4da6c>
   55c9c:	ldr	r0, [pc, #-3308]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55ca0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55ca4:	add	r8, sp, #208	; 0xd0
   55ca8:	str	r0, [sp, #44]	; 0x2c
   55cac:	b	552c8 <blkid_probe_get_size@plt+0x4ddb0>
   55cb0:	ldr	r0, [pc, #-3376]	; 54f88 <blkid_probe_get_size@plt+0x4da70>
   55cb4:	ldr	ip, [pc, #-3376]	; 54f8c <blkid_probe_get_size@plt+0x4da74>
   55cb8:	mov	r2, #40	; 0x28
   55cbc:	umull	r0, r1, r3, r0
   55cc0:	add	r0, sp, #212	; 0xd4
   55cc4:	lsr	lr, r1, #18
   55cc8:	mov	r1, #0
   55ccc:	mul	ip, ip, lr
   55cd0:	cmp	r3, ip
   55cd4:	addne	lr, lr, #1
   55cd8:	str	lr, [sp, #60]	; 0x3c
   55cdc:	bl	6c84 <memset@plt>
   55ce0:	mov	r3, #1
   55ce4:	mov	r2, #32
   55ce8:	mov	r1, #0
   55cec:	mov	r0, r4
   55cf0:	str	r3, [sp, #208]	; 0xd0
   55cf4:	bl	6c84 <memset@plt>
   55cf8:	ldr	lr, [sp, #60]	; 0x3c
   55cfc:	str	r8, [sp, #192]	; 0xc0
   55d00:	cmp	lr, #0
   55d04:	cmneq	r5, #1
   55d08:	beq	54598 <blkid_probe_get_size@plt+0x4d080>
   55d0c:	ldr	r3, [r7, #4]
   55d10:	cmp	r3, #0
   55d14:	blt	56014 <blkid_probe_get_size@plt+0x4eafc>
   55d18:	mov	r2, r6
   55d1c:	mov	r1, #16
   55d20:	mov	r0, r4
   55d24:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   55d28:	mov	r2, r4
   55d2c:	ldr	r1, [pc, #-3492]	; 54f90 <blkid_probe_get_size@plt+0x4da78>
   55d30:	ldr	r0, [r7, #4]
   55d34:	bl	6e70 <ioctl@plt>
   55d38:	cmp	r0, #0
   55d3c:	blt	55f8c <blkid_probe_get_size@plt+0x4ea74>
   55d40:	ldrh	r2, [sp, #236]	; 0xec
   55d44:	ldrh	r3, [sp, #220]	; 0xdc
   55d48:	orr	r3, r3, r2, lsl #16
   55d4c:	ldr	r2, [sp, #60]	; 0x3c
   55d50:	cmp	r2, r3
   55d54:	beq	56074 <blkid_probe_get_size@plt+0x4eb5c>
   55d58:	mov	r3, #0
   55d5c:	cmp	r5, #0
   55d60:	strh	r2, [sp, #220]	; 0xdc
   55d64:	strh	r3, [sp, #236]	; 0xec
   55d68:	beq	56050 <blkid_probe_get_size@plt+0x4eb38>
   55d6c:	cmp	r5, #1
   55d70:	beq	5608c <blkid_probe_get_size@plt+0x4eb74>
   55d74:	mov	r3, #2
   55d78:	str	r3, [sp, #208]	; 0xd0
   55d7c:	mov	r2, r4
   55d80:	ldr	r0, [r7, #4]
   55d84:	ldr	r1, [pc, #-3580]	; 54f90 <blkid_probe_get_size@plt+0x4da78>
   55d88:	bl	6e70 <ioctl@plt>
   55d8c:	cmp	r0, #0
   55d90:	blt	55f8c <blkid_probe_get_size@plt+0x4ea74>
   55d94:	mov	r3, #0
   55d98:	ldr	r5, [fp, #76]	; 0x4c
   55d9c:	ldr	r6, [sp, #120]	; 0x78
   55da0:	str	r3, [sp, #44]	; 0x2c
   55da4:	b	55320 <blkid_probe_get_size@plt+0x4de08>
   55da8:	ldr	r3, [sp, #96]	; 0x60
   55dac:	ldm	r3, {r0, r1}
   55db0:	and	r3, r0, #254	; 0xfe
   55db4:	orr	r3, r3, #2
   55db8:	str	r0, [sp, #208]	; 0xd0
   55dbc:	strh	r1, [sp, #212]	; 0xd4
   55dc0:	strb	r3, [sp, #208]	; 0xd0
   55dc4:	b	55c44 <blkid_probe_get_size@plt+0x4e72c>
   55dc8:	mvn	r0, #21
   55dcc:	b	5563c <blkid_probe_get_size@plt+0x4e124>
   55dd0:	cmp	r2, #6
   55dd4:	str	r3, [sp, #136]	; 0x88
   55dd8:	bgt	560c8 <blkid_probe_get_size@plt+0x4ebb0>
   55ddc:	mov	ip, r3
   55de0:	ldr	r2, [pc, #-3668]	; 54f94 <blkid_probe_get_size@plt+0x4da7c>
   55de4:	ldr	r0, [pc, #-3668]	; 54f98 <blkid_probe_get_size@plt+0x4da80>
   55de8:	add	r2, pc, r2
   55dec:	add	r2, r2, #1248	; 0x4e0
   55df0:	add	r2, r2, #8
   55df4:	mov	r1, #0
   55df8:	stm	sp, {r2, ip}
   55dfc:	ldr	r2, [pc, #-3688]	; 54f9c <blkid_probe_get_size@plt+0x4da84>
   55e00:	add	r0, pc, r0
   55e04:	str	r3, [sp, #8]
   55e08:	str	r0, [sp, #20]
   55e0c:	str	r1, [sp, #16]
   55e10:	str	r1, [sp, #12]
   55e14:	ldr	r3, [pc, #-3708]	; 54fa0 <blkid_probe_get_size@plt+0x4da88>
   55e18:	add	r2, pc, r2
   55e1c:	mov	r0, #7
   55e20:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   55e24:	b	549f0 <blkid_probe_get_size@plt+0x4d4d8>
   55e28:	ldr	r1, [sp, #96]	; 0x60
   55e2c:	mov	r0, r9
   55e30:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55e34:	ldr	r2, [sp, #136]	; 0x88
   55e38:	cmp	r2, #0
   55e3c:	beq	54868 <blkid_probe_get_size@plt+0x4d350>
   55e40:	ldr	r1, [pc, #-3748]	; 54fa4 <blkid_probe_get_size@plt+0x4da8c>
   55e44:	add	r1, pc, r1
   55e48:	b	5486c <blkid_probe_get_size@plt+0x4d354>
   55e4c:	bl	6fb4 <__stack_chk_fail@plt>
   55e50:	ldr	r3, [pc, #-3760]	; 54fa8 <blkid_probe_get_size@plt+0x4da90>
   55e54:	ldr	r2, [pc, #-3760]	; 54fac <blkid_probe_get_size@plt+0x4da94>
   55e58:	add	r3, pc, r3
   55e5c:	add	r2, pc, r2
   55e60:	ldr	r0, [sp, #44]	; 0x2c
   55e64:	str	r2, [sp, #4]
   55e68:	add	r3, r3, #1216	; 0x4c0
   55e6c:	ldr	r2, [pc, #-3780]	; 54fb0 <blkid_probe_get_size@plt+0x4da98>
   55e70:	add	r3, r3, #12
   55e74:	str	r0, [sp, #8]
   55e78:	str	r3, [sp]
   55e7c:	add	r2, pc, r2
   55e80:	ldr	r3, [pc, #-3796]	; 54fb4 <blkid_probe_get_size@plt+0x4da9c>
   55e84:	ldr	r0, [pc, #-3796]	; 54fb8 <blkid_probe_get_size@plt+0x4daa0>
   55e88:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   55e8c:	str	r0, [sp, #44]	; 0x2c
   55e90:	b	552c8 <blkid_probe_get_size@plt+0x4ddb0>
   55e94:	ldr	r1, [sp, #96]	; 0x60
   55e98:	mov	r0, r9
   55e9c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55ea0:	ldr	r2, [sp, #136]	; 0x88
   55ea4:	cmp	r2, #0
   55ea8:	beq	5621c <blkid_probe_get_size@plt+0x4ed04>
   55eac:	ldr	r0, [pc, #-3832]	; 54fbc <blkid_probe_get_size@plt+0x4daa4>
   55eb0:	ldr	r3, [sp, #116]	; 0x74
   55eb4:	add	r0, pc, r0
   55eb8:	b	55488 <blkid_probe_get_size@plt+0x4df70>
   55ebc:	ldr	r1, [sp, #96]	; 0x60
   55ec0:	mov	r0, r9
   55ec4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55ec8:	ldr	r2, [sp, #136]	; 0x88
   55ecc:	cmp	r2, #0
   55ed0:	beq	556c0 <blkid_probe_get_size@plt+0x4e1a8>
   55ed4:	ldr	r0, [pc, #-3868]	; 54fc0 <blkid_probe_get_size@plt+0x4daa8>
   55ed8:	add	r0, pc, r0
   55edc:	b	556c4 <blkid_probe_get_size@plt+0x4e1ac>
   55ee0:	str	r5, [sp, #108]	; 0x6c
   55ee4:	mov	r3, r2
   55ee8:	b	55468 <blkid_probe_get_size@plt+0x4df50>
   55eec:	ldr	r1, [sp, #96]	; 0x60
   55ef0:	mov	r0, r9
   55ef4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55ef8:	ldr	r3, [sp, #136]	; 0x88
   55efc:	cmp	r3, #0
   55f00:	beq	55b08 <blkid_probe_get_size@plt+0x4e5f0>
   55f04:	ldr	r1, [pc, #-3912]	; 54fc4 <blkid_probe_get_size@plt+0x4daac>
   55f08:	add	r1, pc, r1
   55f0c:	b	55b0c <blkid_probe_get_size@plt+0x4e5f4>
   55f10:	ldr	r3, [pc, #-3920]	; 54fc8 <blkid_probe_get_size@plt+0x4dab0>
   55f14:	ldr	r2, [pc, #-3920]	; 54fcc <blkid_probe_get_size@plt+0x4dab4>
   55f18:	add	r3, pc, r3
   55f1c:	add	r3, r3, #1376	; 0x560
   55f20:	ldr	r1, [pc, #-3928]	; 54fd0 <blkid_probe_get_size@plt+0x4dab8>
   55f24:	add	r3, r3, #4
   55f28:	mov	r0, r6
   55f2c:	str	r3, [sp]
   55f30:	add	r2, pc, r2
   55f34:	mov	r3, #412	; 0x19c
   55f38:	add	r1, pc, r1
   55f3c:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   55f40:	ldr	r0, [sp, #132]	; 0x84
   55f44:	cmp	r0, #0
   55f48:	beq	55f50 <blkid_probe_get_size@plt+0x4ea38>
   55f4c:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   55f50:	mvn	r8, #21
   55f54:	b	555bc <blkid_probe_get_size@plt+0x4e0a4>
   55f58:	mov	r0, #0
   55f5c:	b	5540c <blkid_probe_get_size@plt+0x4def4>
   55f60:	ldr	r1, [sp, #96]	; 0x60
   55f64:	mov	r0, r9
   55f68:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   55f6c:	ldr	r2, [sp, #136]	; 0x88
   55f70:	cmp	r2, #0
   55f74:	beq	55914 <blkid_probe_get_size@plt+0x4e3fc>
   55f78:	ldr	ip, [pc, #-4012]	; 54fd4 <blkid_probe_get_size@plt+0x4dabc>
   55f7c:	add	ip, pc, ip
   55f80:	b	55918 <blkid_probe_get_size@plt+0x4e400>
   55f84:	mov	r1, #0
   55f88:	b	5572c <blkid_probe_get_size@plt+0x4e214>
   55f8c:	bl	732c <__errno_location@plt>
   55f90:	ldr	r3, [r0]
   55f94:	rsb	r3, r3, #0
   55f98:	str	r3, [sp, #44]	; 0x2c
   55f9c:	ldr	r3, [sp, #44]	; 0x2c
   55fa0:	ldr	r6, [sp, #120]	; 0x78
   55fa4:	cmp	r3, #0
   55fa8:	ldrge	r5, [fp, #76]	; 0x4c
   55fac:	bge	55320 <blkid_probe_get_size@plt+0x4de08>
   55fb0:	ldr	r3, [pc, #-4064]	; 54fd8 <blkid_probe_get_size@plt+0x4dac0>
   55fb4:	add	r3, pc, r3
   55fb8:	ldr	r3, [r3, #4]
   55fbc:	cmp	r3, #3
   55fc0:	ble	54598 <blkid_probe_get_size@plt+0x4d080>
   55fc4:	ldr	r3, [pc, #-4080]	; 54fdc <blkid_probe_get_size@plt+0x4dac4>
   55fc8:	ldr	r2, [pc, #-4080]	; 54fe0 <blkid_probe_get_size@plt+0x4dac8>
   55fcc:	add	r3, pc, r3
   55fd0:	add	r2, pc, r2
   55fd4:	ldr	r1, [sp, #60]	; 0x3c
   55fd8:	str	r2, [sp, #4]
   55fdc:	add	r3, r3, #1248	; 0x4e0
   55fe0:	ldr	r2, [pc, #648]	; 56270 <blkid_probe_get_size@plt+0x4ed58>
   55fe4:	add	r3, r3, #8
   55fe8:	str	r1, [sp, #12]
   55fec:	str	r6, [sp, #8]
   55ff0:	str	r3, [sp]
   55ff4:	add	r2, pc, r2
   55ff8:	ldr	r3, [pc, #628]	; 56274 <blkid_probe_get_size@plt+0x4ed5c>
   55ffc:	ldr	r1, [sp, #44]	; 0x2c
   56000:	ldr	r0, [pc, #624]	; 56278 <blkid_probe_get_size@plt+0x4ed60>
   56004:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   56008:	ldr	r5, [fp, #76]	; 0x4c
   5600c:	ldr	r6, [sp, #120]	; 0x78
   56010:	b	55320 <blkid_probe_get_size@plt+0x4de08>
   56014:	add	r0, r7, #4
   56018:	bl	2a85c <blkid_probe_get_size@plt+0x23344>
   5601c:	subs	r1, r0, #0
   56020:	bge	55d18 <blkid_probe_get_size@plt+0x4e800>
   56024:	ldr	r3, [pc, #592]	; 5627c <blkid_probe_get_size@plt+0x4ed64>
   56028:	add	r3, pc, r3
   5602c:	ldr	r3, [r3, #4]
   56030:	cmp	r3, #3
   56034:	bgt	5622c <blkid_probe_get_size@plt+0x4ed14>
   56038:	rsb	r3, r1, #0
   5603c:	uxtb	r3, r3
   56040:	rsb	r3, r3, #0
   56044:	str	r3, [sp, #44]	; 0x2c
   56048:	b	55f9c <blkid_probe_get_size@plt+0x4ea84>
   5604c:	str	r5, [sp, #64]	; 0x40
   56050:	ldrb	r3, [sp, #222]	; 0xde
   56054:	cmp	r3, #0
   56058:	movne	r3, #0
   5605c:	strbne	r3, [sp, #222]	; 0xde
   56060:	bne	55d74 <blkid_probe_get_size@plt+0x4e85c>
   56064:	ldr	r3, [sp, #64]	; 0x40
   56068:	cmp	r3, #0
   5606c:	beq	55d94 <blkid_probe_get_size@plt+0x4e87c>
   56070:	b	55d74 <blkid_probe_get_size@plt+0x4e85c>
   56074:	cmp	r5, #0
   56078:	beq	5604c <blkid_probe_get_size@plt+0x4eb34>
   5607c:	cmp	r5, #1
   56080:	moveq	r3, #0
   56084:	streq	r3, [sp, #64]	; 0x40
   56088:	bne	55d94 <blkid_probe_get_size@plt+0x4e87c>
   5608c:	ldrb	r3, [sp, #222]	; 0xde
   56090:	cmp	r3, #1
   56094:	beq	56064 <blkid_probe_get_size@plt+0x4eb4c>
   56098:	mov	r3, #1
   5609c:	strb	r3, [sp, #222]	; 0xde
   560a0:	b	55d74 <blkid_probe_get_size@plt+0x4e85c>
   560a4:	ldr	r1, [sp, #96]	; 0x60
   560a8:	mov	r0, r9
   560ac:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   560b0:	ldr	r2, [sp, #136]	; 0x88
   560b4:	cmp	r2, #0
   560b8:	moveq	r4, r2
   560bc:	ldrne	r4, [pc, #444]	; 56280 <blkid_probe_get_size@plt+0x4ed68>
   560c0:	addne	r4, pc, r4
   560c4:	b	55010 <blkid_probe_get_size@plt+0x4daf8>
   560c8:	ldr	r1, [sp, #96]	; 0x60
   560cc:	mov	r0, r9
   560d0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   560d4:	ldr	r3, [sp, #136]	; 0x88
   560d8:	cmp	r3, #0
   560dc:	beq	55ddc <blkid_probe_get_size@plt+0x4e8c4>
   560e0:	ldr	ip, [pc, #412]	; 56284 <blkid_probe_get_size@plt+0x4ed6c>
   560e4:	add	ip, pc, ip
   560e8:	b	55de0 <blkid_probe_get_size@plt+0x4e8c8>
   560ec:	ldr	r2, [pc, #404]	; 56288 <blkid_probe_get_size@plt+0x4ed70>
   560f0:	ldr	r1, [pc, #404]	; 5628c <blkid_probe_get_size@plt+0x4ed74>
   560f4:	add	r2, pc, r2
   560f8:	add	r2, r2, #1376	; 0x560
   560fc:	add	r2, r2, #4
   56100:	str	r2, [sp]
   56104:	ldr	r2, [pc, #388]	; 56290 <blkid_probe_get_size@plt+0x4ed78>
   56108:	ldr	r3, [pc, #388]	; 56294 <blkid_probe_get_size@plt+0x4ed7c>
   5610c:	add	r2, pc, r2
   56110:	add	r1, pc, r1
   56114:	mov	r0, #0
   56118:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   5611c:	ldr	r0, [sp, #132]	; 0x84
   56120:	cmp	r0, #0
   56124:	beq	5612c <blkid_probe_get_size@plt+0x4ec14>
   56128:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   5612c:	mvn	r8, #0
   56130:	b	555bc <blkid_probe_get_size@plt+0x4e0a4>
   56134:	ldr	r1, [sp, #96]	; 0x60
   56138:	mov	r0, r9
   5613c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   56140:	ldr	r2, [sp, #136]	; 0x88
   56144:	ldr	lr, [pc, #332]	; 56298 <blkid_probe_get_size@plt+0x4ed80>
   56148:	cmp	r2, #0
   5614c:	ldr	r3, [sp, #116]	; 0x74
   56150:	add	lr, pc, lr
   56154:	bne	549a8 <blkid_probe_get_size@plt+0x4d490>
   56158:	b	549a4 <blkid_probe_get_size@plt+0x4d48c>
   5615c:	ldr	r2, [pc, #312]	; 5629c <blkid_probe_get_size@plt+0x4ed84>
   56160:	ldr	r1, [pc, #312]	; 562a0 <blkid_probe_get_size@plt+0x4ed88>
   56164:	add	r2, pc, r2
   56168:	add	r2, r2, #1408	; 0x580
   5616c:	add	r2, r2, #12
   56170:	str	r2, [sp]
   56174:	ldr	r2, [pc, #296]	; 562a4 <blkid_probe_get_size@plt+0x4ed8c>
   56178:	ldr	r3, [pc, #296]	; 562a8 <blkid_probe_get_size@plt+0x4ed90>
   5617c:	add	r2, pc, r2
   56180:	add	r1, pc, r1
   56184:	b	56114 <blkid_probe_get_size@plt+0x4ebfc>
   56188:	ldr	r3, [pc, #284]	; 562ac <blkid_probe_get_size@plt+0x4ed94>
   5618c:	ldr	r2, [pc, #284]	; 562b0 <blkid_probe_get_size@plt+0x4ed98>
   56190:	add	r3, pc, r3
   56194:	add	r3, r3, #1408	; 0x580
   56198:	ldr	r1, [pc, #276]	; 562b4 <blkid_probe_get_size@plt+0x4ed9c>
   5619c:	add	r3, r3, #12
   561a0:	mov	r0, r6
   561a4:	str	r3, [sp]
   561a8:	add	r2, pc, r2
   561ac:	ldr	r3, [pc, #260]	; 562b8 <blkid_probe_get_size@plt+0x4eda0>
   561b0:	add	r1, pc, r1
   561b4:	bl	3a1b8 <blkid_probe_get_size@plt+0x32ca0>
   561b8:	ldr	r0, [sp, #132]	; 0x84
   561bc:	cmp	r0, #0
   561c0:	bne	55f4c <blkid_probe_get_size@plt+0x4ea34>
   561c4:	b	55f50 <blkid_probe_get_size@plt+0x4ea38>
   561c8:	ldr	r1, [sp, #96]	; 0x60
   561cc:	mov	r0, r9
   561d0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   561d4:	ldr	r2, [sp, #136]	; 0x88
   561d8:	cmp	r2, #0
   561dc:	moveq	r4, r2
   561e0:	ldrne	r4, [pc, #212]	; 562bc <blkid_probe_get_size@plt+0x4eda4>
   561e4:	addne	r4, pc, r4
   561e8:	b	54c50 <blkid_probe_get_size@plt+0x4d738>
   561ec:	ldr	r2, [pc, #204]	; 562c0 <blkid_probe_get_size@plt+0x4eda8>
   561f0:	ldr	r1, [pc, #204]	; 562c4 <blkid_probe_get_size@plt+0x4edac>
   561f4:	add	r2, pc, r2
   561f8:	add	r2, r2, #1200	; 0x4b0
   561fc:	add	r2, r2, #8
   56200:	str	r2, [sp]
   56204:	ldr	r2, [pc, #188]	; 562c8 <blkid_probe_get_size@plt+0x4edb0>
   56208:	ldr	r3, [pc, #188]	; 562cc <blkid_probe_get_size@plt+0x4edb4>
   5620c:	add	r2, pc, r2
   56210:	add	r1, pc, r1
   56214:	mov	r0, #1
   56218:	bl	3b1ec <blkid_probe_get_size@plt+0x33cd4>
   5621c:	ldr	r3, [sp, #116]	; 0x74
   56220:	b	55484 <blkid_probe_get_size@plt+0x4df6c>
   56224:	bl	2fb60 <blkid_probe_get_size@plt+0x28648>
   56228:	b	54b74 <blkid_probe_get_size@plt+0x4d65c>
   5622c:	ldr	r3, [pc, #156]	; 562d0 <blkid_probe_get_size@plt+0x4edb8>
   56230:	ldr	r2, [pc, #156]	; 562d4 <blkid_probe_get_size@plt+0x4edbc>
   56234:	add	r3, pc, r3
   56238:	add	r2, pc, r2
   5623c:	str	r2, [sp, #4]
   56240:	add	r3, r3, #1264	; 0x4f0
   56244:	ldr	r2, [pc, #140]	; 562d8 <blkid_probe_get_size@plt+0x4edc0>
   56248:	add	r3, r3, #12
   5624c:	str	r3, [sp]
   56250:	add	r2, pc, r2
   56254:	mov	r3, #178	; 0xb2
   56258:	ldr	r0, [pc, #24]	; 56278 <blkid_probe_get_size@plt+0x4ed60>
   5625c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   56260:	str	r0, [sp, #44]	; 0x2c
   56264:	b	55f9c <blkid_probe_get_size@plt+0x4ea84>
   56268:	mvn	r1, #11
   5626c:	b	55834 <blkid_probe_get_size@plt+0x4e31c>
   56270:	andeq	r4, r1, r4, ror #9
   56274:	andeq	r0, r0, r1, ror r1
   56278:	andeq	r0, r0, r4, lsl #8
   5627c:	andeq	r2, r4, r4, lsl r1
   56280:	andeq	lr, r0, r8, ror lr
   56284:	andeq	lr, r0, r4, asr lr
   56288:	andeq	ip, r1, r0, asr r8
   5628c:	andeq	r7, r1, r8, ror fp
   56290:	andeq	r7, r1, ip, asr #22
   56294:	muleq	r0, sp, r1
   56298:	andeq	lr, r0, r8, ror #27
   5629c:	andeq	ip, r1, r0, ror #15
   562a0:	andeq	r7, r1, r8, lsl #22
   562a4:	ldrdeq	r7, [r1], -ip
   562a8:	andeq	r0, r0, r7, lsr r1
   562ac:			; <UNDEFINED> instruction: 0x0001c7b4
   562b0:			; <UNDEFINED> instruction: 0x00017ab0
   562b4:	andeq	sp, r1, r0, asr #24
   562b8:	andeq	r0, r0, r6, lsr r1
   562bc:	andeq	lr, r0, r4, asr sp
   562c0:	andeq	ip, r1, r0, asr r7
   562c4:	andeq	sp, r1, ip, asr ip
   562c8:	andeq	r4, r1, ip, asr #5
   562cc:			; <UNDEFINED> instruction: 0x000001b9
   562d0:	andeq	ip, r1, r0, lsl r7
   562d4:	andeq	r5, r1, r0, lsl lr
   562d8:	andeq	r4, r1, r8, lsr r1
   562dc:	ldr	r2, [pc, #2960]	; 56e74 <blkid_probe_get_size@plt+0x4f95c>
   562e0:	ldr	r1, [pc, #2960]	; 56e78 <blkid_probe_get_size@plt+0x4f960>
   562e4:	add	r2, pc, r2
   562e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   562ec:	mov	r8, r3
   562f0:	mov	r3, r2
   562f4:	ldr	r2, [r2, r1]
   562f8:	sub	sp, sp, #284	; 0x11c
   562fc:	subs	r7, r0, #0
   56300:	ldr	r3, [r2]
   56304:	str	r2, [sp, #36]	; 0x24
   56308:	str	r3, [sp, #276]	; 0x114
   5630c:	beq	56adc <blkid_probe_get_size@plt+0x4f5c4>
   56310:	ldr	r4, [pc, #2916]	; 56e7c <blkid_probe_get_size@plt+0x4f964>
   56314:	ldr	r6, [pc, #2916]	; 56e80 <blkid_probe_get_size@plt+0x4f968>
   56318:	add	r4, pc, r4
   5631c:	add	r6, pc, r6
   56320:	mov	r0, r7
   56324:	add	r5, sp, #84	; 0x54
   56328:	add	r3, sp, #112	; 0x70
   5632c:	str	r3, [sp, #32]
   56330:	str	r7, [sp, #84]	; 0x54
   56334:	ldr	r2, [sp, #32]
   56338:	mov	r1, r4
   5633c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   56340:	cmp	r0, #0
   56344:	bge	56454 <blkid_probe_get_size@plt+0x4ef3c>
   56348:	mov	r3, r5
   5634c:	mov	r2, #0
   56350:	mov	r1, r6
   56354:	ldr	r0, [sp, #84]	; 0x54
   56358:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   5635c:	cmp	r0, #0
   56360:	bge	56444 <blkid_probe_get_size@plt+0x4ef2c>
   56364:	mov	r3, #0
   56368:	str	r3, [sp, #84]	; 0x54
   5636c:	add	r1, sp, #76	; 0x4c
   56370:	mov	r0, r7
   56374:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   56378:	cmp	r0, #0
   5637c:	blt	56424 <blkid_probe_get_size@plt+0x4ef0c>
   56380:	add	r1, sp, #80	; 0x50
   56384:	mov	r0, r7
   56388:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5638c:	cmp	r0, #0
   56390:	blt	56424 <blkid_probe_get_size@plt+0x4ef0c>
   56394:	ldr	r4, [sp, #80]	; 0x50
   56398:	ldr	r1, [pc, #2788]	; 56e84 <blkid_probe_get_size@plt+0x4f96c>
   5639c:	mov	r2, #5
   563a0:	mov	r0, r4
   563a4:	add	r1, pc, r1
   563a8:	bl	6a5c <strncmp@plt>
   563ac:	subs	r3, r0, #0
   563b0:	bne	56424 <blkid_probe_get_size@plt+0x4ef0c>
   563b4:	cmn	r4, #5
   563b8:	beq	56424 <blkid_probe_get_size@plt+0x4ef0c>
   563bc:	ldr	r6, [sp, #32]
   563c0:	ldr	r0, [sp, #76]	; 0x4c
   563c4:	mov	r1, #524288	; 0x80000
   563c8:	str	r3, [sp, #88]	; 0x58
   563cc:	str	r3, [sp, #112]	; 0x70
   563d0:	str	r3, [r6, #4]
   563d4:	str	r3, [r6, #8]
   563d8:	str	r3, [r6, #12]
   563dc:	str	r3, [r6, #16]
   563e0:	str	r3, [r6, #20]
   563e4:	str	r3, [sp, #92]	; 0x5c
   563e8:	str	r3, [sp, #96]	; 0x60
   563ec:	str	r3, [sp, #100]	; 0x64
   563f0:	str	r3, [sp, #104]	; 0x68
   563f4:	str	r3, [sp, #108]	; 0x6c
   563f8:	bl	6ec4 <open64@plt>
   563fc:	add	r4, sp, #88	; 0x58
   56400:	subs	r5, r0, #0
   56404:	blt	5641c <blkid_probe_get_size@plt+0x4ef04>
   56408:	mov	r2, r4
   5640c:	ldr	r1, [pc, #2676]	; 56e88 <blkid_probe_get_size@plt+0x4f970>
   56410:	bl	6e70 <ioctl@plt>
   56414:	cmp	r0, #0
   56418:	bge	56b40 <blkid_probe_get_size@plt+0x4f628>
   5641c:	mov	r0, r5
   56420:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   56424:	ldr	r3, [sp, #36]	; 0x24
   56428:	ldr	r2, [sp, #276]	; 0x114
   5642c:	mov	r0, #0
   56430:	ldr	r3, [r3]
   56434:	cmp	r2, r3
   56438:	bne	56e70 <blkid_probe_get_size@plt+0x4f958>
   5643c:	add	sp, sp, #284	; 0x11c
   56440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   56444:	ldr	r0, [sp, #84]	; 0x54
   56448:	cmp	r0, #0
   5644c:	bne	56334 <blkid_probe_get_size@plt+0x4ee1c>
   56450:	b	5636c <blkid_probe_get_size@plt+0x4ee54>
   56454:	ldr	r3, [sp, #84]	; 0x54
   56458:	cmp	r3, #0
   5645c:	beq	5636c <blkid_probe_get_size@plt+0x4ee54>
   56460:	ldr	r3, [pc, #2596]	; 56e8c <blkid_probe_get_size@plt+0x4f974>
   56464:	ldr	r2, [pc, #2596]	; 56e90 <blkid_probe_get_size@plt+0x4f978>
   56468:	add	r3, pc, r3
   5646c:	add	r2, pc, r2
   56470:	mov	r1, r8
   56474:	mov	r0, r7
   56478:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   5647c:	ldr	r0, [sp, #84]	; 0x54
   56480:	mov	r1, r4
   56484:	mov	r3, #4
   56488:	add	r2, sp, #144	; 0x90
   5648c:	str	r8, [sp]
   56490:	bl	52200 <blkid_probe_get_size@plt+0x4ace8>
   56494:	ldr	r1, [pc, #2552]	; 56e94 <blkid_probe_get_size@plt+0x4f97c>
   56498:	ldr	r0, [sp, #84]	; 0x54
   5649c:	mov	r3, #8
   564a0:	add	r2, sp, #148	; 0x94
   564a4:	add	r1, pc, r1
   564a8:	str	r8, [sp]
   564ac:	bl	52200 <blkid_probe_get_size@plt+0x4ace8>
   564b0:	ldr	r1, [pc, #2528]	; 56e98 <blkid_probe_get_size@plt+0x4f980>
   564b4:	ldr	r0, [sp, #84]	; 0x54
   564b8:	mov	r3, #4
   564bc:	add	r2, sp, #140	; 0x8c
   564c0:	add	r1, pc, r1
   564c4:	str	r8, [sp]
   564c8:	bl	52200 <blkid_probe_get_size@plt+0x4ace8>
   564cc:	ldr	r1, [pc, #2504]	; 56e9c <blkid_probe_get_size@plt+0x4f984>
   564d0:	add	fp, sp, #180	; 0xb4
   564d4:	ldr	r0, [sp, #84]	; 0x54
   564d8:	mov	r2, fp
   564dc:	mov	r3, #96	; 0x60
   564e0:	add	r1, pc, r1
   564e4:	str	r8, [sp]
   564e8:	bl	52200 <blkid_probe_get_size@plt+0x4ace8>
   564ec:	ldr	r1, [pc, #2476]	; 56ea0 <blkid_probe_get_size@plt+0x4f988>
   564f0:	ldr	r0, [sp, #84]	; 0x54
   564f4:	mov	r3, #4
   564f8:	add	r1, pc, r1
   564fc:	str	r8, [sp]
   56500:	add	r2, sp, #136	; 0x88
   56504:	bl	52200 <blkid_probe_get_size@plt+0x4ace8>
   56508:	ldr	r0, [sp, #148]	; 0x94
   5650c:	ldr	r9, [sp, #144]	; 0x90
   56510:	and	r3, r0, #3
   56514:	cmp	r3, #3
   56518:	ldr	r1, [sp, #136]	; 0x88
   5651c:	lsr	r3, r9, #1
   56520:	beq	567b8 <blkid_probe_get_size@plt+0x4f2a0>
   56524:	lsr	r6, r1, #6
   56528:	and	r6, r6, #1
   5652c:	mov	sl, #0
   56530:	str	sl, [sp, #40]	; 0x28
   56534:	cmp	r6, #0
   56538:	bne	567d0 <blkid_probe_get_size@plt+0x4f2b8>
   5653c:	ldr	r4, [sp, #220]	; 0xdc
   56540:	lsr	r3, r1, #5
   56544:	and	r3, r3, #1
   56548:	orr	r5, r4, r4, lsr #11
   5654c:	tst	r4, #32
   56550:	and	r2, r5, #1
   56554:	ldr	ip, [sp, #212]	; 0xd4
   56558:	ldr	lr, [pc, #2372]	; 56ea4 <blkid_probe_get_size@plt+0x4f98c>
   5655c:	str	r3, [sp, #48]	; 0x30
   56560:	str	r2, [sp, #44]	; 0x2c
   56564:	uxtb	r3, r3
   56568:	mvnne	r6, r4
   5656c:	mov	r2, #272	; 0x110
   56570:	str	r3, [sp, #64]	; 0x40
   56574:	andne	r3, r6, #1
   56578:	strne	r3, [sp, #56]	; 0x38
   5657c:	streq	r6, [sp, #56]	; 0x38
   56580:	and	r3, r2, #31
   56584:	add	r2, r2, #1
   56588:	lsr	r3, ip, r3
   5658c:	and	r3, r3, #1
   56590:	eor	r5, r3, #1
   56594:	cmp	r2, lr
   56598:	movgt	r5, #0
   5659c:	andle	r5, r5, #1
   565a0:	cmp	r5, #0
   565a4:	bne	56580 <blkid_probe_get_size@plt+0x4f068>
   565a8:	tst	r9, #4
   565ac:	ldr	lr, [sp, #152]	; 0x98
   565b0:	ldrne	r2, [sp, #140]	; 0x8c
   565b4:	streq	r5, [sp, #60]	; 0x3c
   565b8:	andne	r2, r2, #3
   565bc:	subne	r2, r2, #3
   565c0:	clzne	r2, r2
   565c4:	lsrne	r2, r2, #5
   565c8:	strne	r2, [sp, #60]	; 0x3c
   565cc:	and	r2, lr, #6291456	; 0x600000
   565d0:	cmp	r2, #6291456	; 0x600000
   565d4:	beq	56b0c <blkid_probe_get_size@plt+0x4f5f4>
   565d8:	mov	r9, #0
   565dc:	lsr	r2, r1, #1
   565e0:	str	r2, [sp, #52]	; 0x34
   565e4:	cmp	ip, #0
   565e8:	lsr	r2, r4, #10
   565ec:	str	r2, [sp, #68]	; 0x44
   565f0:	blt	566b4 <blkid_probe_get_size@plt+0x4f19c>
   565f4:	ldr	r6, [sp, #216]	; 0xd8
   565f8:	ldr	lr, [pc, #2216]	; 56ea8 <blkid_probe_get_size@plt+0x4f990>
   565fc:	mov	r1, #288	; 0x120
   56600:	and	r4, r1, #31
   56604:	add	r1, r1, #1
   56608:	lsr	r4, r6, r4
   5660c:	and	r4, r4, #1
   56610:	eor	r2, r4, #1
   56614:	cmp	r1, lr
   56618:	movgt	ip, #0
   5661c:	andle	ip, r2, #1
   56620:	cmp	ip, #0
   56624:	bne	56600 <blkid_probe_get_size@plt+0x4f0e8>
   56628:	cmp	r4, #0
   5662c:	bne	566dc <blkid_probe_get_size@plt+0x4f1c4>
   56630:	ldr	lr, [pc, #2164]	; 56eac <blkid_probe_get_size@plt+0x4f994>
   56634:	mov	r1, #704	; 0x2c0
   56638:	lsr	r2, r1, #5
   5663c:	add	r4, sp, #280	; 0x118
   56640:	add	r2, r4, r2, lsl #2
   56644:	and	ip, r1, #31
   56648:	ldr	r4, [r2, #-100]	; 0xffffff9c
   5664c:	add	r1, r1, #1
   56650:	lsr	r4, r4, ip
   56654:	and	r4, r4, #1
   56658:	eor	r2, r4, #1
   5665c:	cmp	r1, lr
   56660:	movgt	ip, #0
   56664:	andle	ip, r2, #1
   56668:	cmp	ip, #0
   5666c:	bne	56638 <blkid_probe_get_size@plt+0x4f120>
   56670:	cmp	r4, #0
   56674:	bne	566dc <blkid_probe_get_size@plt+0x4f1c4>
   56678:	ldr	r6, [sp, #248]	; 0xf8
   5667c:	ldr	lr, [pc, #2092]	; 56eb0 <blkid_probe_get_size@plt+0x4f998>
   56680:	mov	r1, #544	; 0x220
   56684:	and	r4, r1, #31
   56688:	add	r1, r1, #1
   5668c:	lsr	r4, r6, r4
   56690:	and	r4, r4, #1
   56694:	eor	r2, r4, #1
   56698:	cmp	r1, lr
   5669c:	movgt	ip, #0
   566a0:	andle	ip, r2, #1
   566a4:	cmp	ip, #0
   566a8:	bne	56684 <blkid_probe_get_size@plt+0x4f16c>
   566ac:	cmp	r4, #0
   566b0:	bne	566dc <blkid_probe_get_size@plt+0x4f1c4>
   566b4:	mov	r1, #3
   566b8:	lsr	r4, r0, r1
   566bc:	and	r4, r4, #1
   566c0:	add	r1, r1, #1
   566c4:	eor	r2, r4, #1
   566c8:	cmp	r1, #23
   566cc:	movgt	ip, #0
   566d0:	andle	ip, r2, #1
   566d4:	cmp	ip, #0
   566d8:	bne	566b8 <blkid_probe_get_size@plt+0x4f1a0>
   566dc:	cmp	sl, #0
   566e0:	beq	56b1c <blkid_probe_get_size@plt+0x4f604>
   566e4:	ldr	r1, [sp, #44]	; 0x2c
   566e8:	cmp	r1, #0
   566ec:	bne	56c30 <blkid_probe_get_size@plt+0x4f718>
   566f0:	ldr	r0, [sp, #56]	; 0x38
   566f4:	ldr	r1, [sp, #52]	; 0x34
   566f8:	bics	r6, r0, r1
   566fc:	bne	56da0 <blkid_probe_get_size@plt+0x4f888>
   56700:	cmp	r3, #0
   56704:	bne	56de8 <blkid_probe_get_size@plt+0x4f8d0>
   56708:	ldr	r0, [sp, #68]	; 0x44
   5670c:	orr	r1, r1, r0
   56710:	tst	r1, #1
   56714:	moveq	r6, r3
   56718:	moveq	r5, r3
   5671c:	movne	r2, #1
   56720:	movne	r6, r2
   56724:	movne	r4, r3
   56728:	movne	r5, r3
   5672c:	cmp	r9, #0
   56730:	beq	56df8 <blkid_probe_get_size@plt+0x4f8e0>
   56734:	ldr	r1, [sp, #52]	; 0x34
   56738:	ldr	r0, [sp, #68]	; 0x44
   5673c:	orr	r1, r1, r0
   56740:	tst	r1, #1
   56744:	moveq	r1, r6
   56748:	movne	r1, #1
   5674c:	str	r1, [sp, #44]	; 0x2c
   56750:	ldr	r1, [sp, #64]	; 0x40
   56754:	orr	sl, r1, r4
   56758:	ands	r6, r3, r2
   5675c:	beq	56d54 <blkid_probe_get_size@plt+0x4f83c>
   56760:	ldr	r3, [sp, #40]	; 0x28
   56764:	eor	r6, r3, #1
   56768:	ldr	r3, [sp, #60]	; 0x3c
   5676c:	orrs	r6, r3, r6
   56770:	moveq	r4, r6
   56774:	moveq	r9, r4
   56778:	beq	56c44 <blkid_probe_get_size@plt+0x4f72c>
   5677c:	ldr	r4, [sp, #48]	; 0x30
   56780:	cmp	r4, #0
   56784:	bne	56cc4 <blkid_probe_get_size@plt+0x4f7ac>
   56788:	mov	r9, r4
   5678c:	mov	r6, r4
   56790:	ldr	r3, [pc, #1820]	; 56eb4 <blkid_probe_get_size@plt+0x4f99c>
   56794:	ldr	r2, [pc, #1820]	; 56eb8 <blkid_probe_get_size@plt+0x4f9a0>
   56798:	add	r3, pc, r3
   5679c:	add	r2, pc, r2
   567a0:	mov	r1, r8
   567a4:	mov	r0, r7
   567a8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   567ac:	mov	r3, #1
   567b0:	str	r3, [sp, #40]	; 0x28
   567b4:	b	56c68 <blkid_probe_get_size@plt+0x4f750>
   567b8:	lsr	r6, r1, #6
   567bc:	tst	r0, #4
   567c0:	and	r6, r6, #1
   567c4:	beq	56a90 <blkid_probe_get_size@plt+0x4f578>
   567c8:	tst	r3, #1
   567cc:	bne	56a90 <blkid_probe_get_size@plt+0x4f578>
   567d0:	ldr	r3, [pc, #1764]	; 56ebc <blkid_probe_get_size@plt+0x4f9a4>
   567d4:	ldr	r2, [pc, #1764]	; 56ec0 <blkid_probe_get_size@plt+0x4f9a8>
   567d8:	add	r3, pc, r3
   567dc:	add	r2, pc, r2
   567e0:	mov	r1, r8
   567e4:	mov	r0, r7
   567e8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   567ec:	mov	r3, #1
   567f0:	str	r3, [sp, #40]	; 0x28
   567f4:	ldr	r9, [sp, #144]	; 0x90
   567f8:	ldr	r3, [pc, #1732]	; 56ec4 <blkid_probe_get_size@plt+0x4f9ac>
   567fc:	lsr	r9, r9, #1
   56800:	add	r3, pc, r3
   56804:	ands	r9, r9, #1
   56808:	ldr	r3, [r3, #4]
   5680c:	bne	568ac <blkid_probe_get_size@plt+0x4f394>
   56810:	cmp	r3, #6
   56814:	str	r9, [sp, #112]	; 0x70
   56818:	bgt	56d7c <blkid_probe_get_size@plt+0x4f864>
   5681c:	mov	r0, r9
   56820:	ldr	r2, [pc, #1696]	; 56ec8 <blkid_probe_get_size@plt+0x4f9b0>
   56824:	ldr	r3, [pc, #1696]	; 56ecc <blkid_probe_get_size@plt+0x4f9b4>
   56828:	add	r2, pc, r2
   5682c:	add	r3, pc, r3
   56830:	str	r2, [sp, #20]
   56834:	ldr	r2, [pc, #1684]	; 56ed0 <blkid_probe_get_size@plt+0x4f9b8>
   56838:	add	r3, r3, #1472	; 0x5c0
   5683c:	mov	r1, #0
   56840:	stmib	sp, {r0, r9}
   56844:	str	r3, [sp]
   56848:	str	r1, [sp, #16]
   5684c:	str	r1, [sp, #12]
   56850:	ldr	r3, [pc, #1660]	; 56ed4 <blkid_probe_get_size@plt+0x4f9bc>
   56854:	add	r2, pc, r2
   56858:	mov	r0, #7
   5685c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   56860:	ldr	r3, [sp, #40]	; 0x28
   56864:	cmp	r3, #0
   56868:	ldr	r3, [sp, #144]	; 0x90
   5686c:	bne	56884 <blkid_probe_get_size@plt+0x4f36c>
   56870:	tst	r3, #4
   56874:	beq	56884 <blkid_probe_get_size@plt+0x4f36c>
   56878:	ldr	r2, [sp, #140]	; 0x8c
   5687c:	tst	r2, #320	; 0x140
   56880:	bne	56d5c <blkid_probe_get_size@plt+0x4f844>
   56884:	tst	r3, #32
   56888:	beq	5636c <blkid_probe_get_size@plt+0x4ee54>
   5688c:	ldr	r3, [pc, #1604]	; 56ed8 <blkid_probe_get_size@plt+0x4f9c0>
   56890:	ldr	r2, [pc, #1604]	; 56edc <blkid_probe_get_size@plt+0x4f9c4>
   56894:	add	r3, pc, r3
   56898:	add	r2, pc, r2
   5689c:	mov	r1, r8
   568a0:	mov	r0, r7
   568a4:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   568a8:	b	5636c <blkid_probe_get_size@plt+0x4ee54>
   568ac:	ldr	sl, [pc, #1580]	; 56ee0 <blkid_probe_get_size@plt+0x4f9c8>
   568b0:	ldr	r2, [pc, #1580]	; 56ee4 <blkid_probe_get_size@plt+0x4f9cc>
   568b4:	mov	r5, #0
   568b8:	add	sl, pc, sl
   568bc:	add	r2, pc, r2
   568c0:	str	r2, [sp, #44]	; 0x2c
   568c4:	add	sl, sl, #1472	; 0x5c0
   568c8:	mov	r4, r5
   568cc:	mov	r6, r5
   568d0:	b	568e0 <blkid_probe_get_size@plt+0x4f3c8>
   568d4:	ldr	r3, [pc, #1548]	; 56ee8 <blkid_probe_get_size@plt+0x4f9d0>
   568d8:	add	r3, pc, r3
   568dc:	ldr	r3, [r3, #4]
   568e0:	ldr	r2, [fp, r4, lsl #2]
   568e4:	cmp	r3, #6
   568e8:	orr	r5, r5, r2
   568ec:	movle	r2, #0
   568f0:	str	r6, [sp, #112]	; 0x70
   568f4:	movle	ip, r2
   568f8:	bgt	5698c <blkid_probe_get_size@plt+0x4f474>
   568fc:	ldr	r3, [pc, #1512]	; 56eec <blkid_probe_get_size@plt+0x4f9d4>
   56900:	adds	r0, r5, #0
   56904:	str	r2, [sp, #8]
   56908:	ldr	r2, [pc, #1504]	; 56ef0 <blkid_probe_get_size@plt+0x4f9d8>
   5690c:	movne	r0, #1
   56910:	lsl	r1, r4, #5
   56914:	add	r3, pc, r3
   56918:	str	r3, [sp, #20]
   5691c:	str	r0, [sp, #28]
   56920:	str	r1, [sp, #24]
   56924:	str	r6, [sp, #16]
   56928:	str	r6, [sp, #12]
   5692c:	stm	sp, {sl, ip}
   56930:	add	r4, r4, #1
   56934:	ldr	r3, [pc, #1464]	; 56ef4 <blkid_probe_get_size@plt+0x4f9dc>
   56938:	add	r2, pc, r2
   5693c:	mov	r1, #0
   56940:	mov	r0, #7
   56944:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   56948:	cmp	r4, #8
   5694c:	bne	568d4 <blkid_probe_get_size@plt+0x4f3bc>
   56950:	cmp	r5, #0
   56954:	beq	569b0 <blkid_probe_get_size@plt+0x4f498>
   56958:	ldr	r3, [pc, #1432]	; 56ef8 <blkid_probe_get_size@plt+0x4f9e0>
   5695c:	ldr	r2, [pc, #1432]	; 56efc <blkid_probe_get_size@plt+0x4f9e4>
   56960:	add	r3, pc, r3
   56964:	add	r2, pc, r2
   56968:	mov	r1, r8
   5696c:	mov	r0, r7
   56970:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56974:	ldr	r3, [sp, #180]	; 0xb4
   56978:	mvn	r3, r3
   5697c:	bics	r3, r3, #1
   56980:	beq	56ab8 <blkid_probe_get_size@plt+0x4f5a0>
   56984:	ldr	r3, [sp, #144]	; 0x90
   56988:	b	56884 <blkid_probe_get_size@plt+0x4f36c>
   5698c:	ldr	r1, [sp, #32]
   56990:	mov	r0, r7
   56994:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   56998:	ldr	r2, [sp, #112]	; 0x70
   5699c:	ldr	r3, [sp, #44]	; 0x2c
   569a0:	cmp	r2, #0
   569a4:	moveq	ip, r2
   569a8:	movne	ip, r3
   569ac:	b	568fc <blkid_probe_get_size@plt+0x4f3e4>
   569b0:	ldr	r4, [pc, #1352]	; 56f00 <blkid_probe_get_size@plt+0x4f9e8>
   569b4:	ldr	r3, [pc, #1352]	; 56f04 <blkid_probe_get_size@plt+0x4f9ec>
   569b8:	add	r4, pc, r4
   569bc:	ldr	sl, [pc, #1348]	; 56f08 <blkid_probe_get_size@plt+0x4f9f0>
   569c0:	add	r4, r4, #1472	; 0x5c0
   569c4:	add	r3, pc, r3
   569c8:	add	sl, pc, sl
   569cc:	add	r4, r4, #12
   569d0:	mov	r6, r5
   569d4:	mov	r0, #544	; 0x220
   569d8:	mov	fp, #352	; 0x160
   569dc:	add	r3, r3, #1472	; 0x5c0
   569e0:	str	r3, [sp, #44]	; 0x2c
   569e4:	cmp	fp, r0
   569e8:	bcc	569fc <blkid_probe_get_size@plt+0x4f4e4>
   569ec:	b	56a74 <blkid_probe_get_size@plt+0x4f55c>
   569f0:	add	fp, fp, #1
   569f4:	cmp	fp, r0
   569f8:	beq	56a74 <blkid_probe_get_size@plt+0x4f55c>
   569fc:	lsr	r3, fp, #5
   56a00:	add	r2, sp, #280	; 0x118
   56a04:	add	r3, r2, r3, lsl #2
   56a08:	and	r1, fp, #31
   56a0c:	ldr	r2, [r3, #-100]	; 0xffffff9c
   56a10:	lsr	r3, r2, r1
   56a14:	tst	r3, #1
   56a18:	beq	569f0 <blkid_probe_get_size@plt+0x4f4d8>
   56a1c:	ldr	r2, [sl, #4]
   56a20:	mov	r3, #0
   56a24:	cmp	r2, #6
   56a28:	str	r3, [sp, #112]	; 0x70
   56a2c:	bgt	56dc4 <blkid_probe_get_size@plt+0x4f8ac>
   56a30:	mov	r0, r3
   56a34:	ldr	r2, [pc, #1232]	; 56f0c <blkid_probe_get_size@plt+0x4f9f4>
   56a38:	stmib	sp, {r0, r3}
   56a3c:	add	r2, pc, r2
   56a40:	ldr	r3, [sp, #44]	; 0x2c
   56a44:	str	r2, [sp, #20]
   56a48:	ldr	r2, [pc, #1216]	; 56f10 <blkid_probe_get_size@plt+0x4f9f8>
   56a4c:	mov	r1, #0
   56a50:	str	r3, [sp]
   56a54:	str	fp, [sp, #24]
   56a58:	str	r1, [sp, #16]
   56a5c:	str	r1, [sp, #12]
   56a60:	ldr	r3, [pc, #1196]	; 56f14 <blkid_probe_get_size@plt+0x4f9fc>
   56a64:	add	r2, pc, r2
   56a68:	mov	r0, #7
   56a6c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   56a70:	mov	r5, r9
   56a74:	add	r6, r6, #8
   56a78:	cmp	r6, #16
   56a7c:	beq	56aa0 <blkid_probe_get_size@plt+0x4f588>
   56a80:	mov	r3, r4
   56a84:	ldr	fp, [r3, r6]!
   56a88:	ldr	r0, [r3, #4]
   56a8c:	b	569e4 <blkid_probe_get_size@plt+0x4f4cc>
   56a90:	mov	r3, #1
   56a94:	str	r3, [sp, #40]	; 0x28
   56a98:	mov	sl, r3
   56a9c:	b	56534 <blkid_probe_get_size@plt+0x4f01c>
   56aa0:	cmp	r5, #0
   56aa4:	bne	56958 <blkid_probe_get_size@plt+0x4f440>
   56aa8:	ldr	r3, [sp, #180]	; 0xb4
   56aac:	mvn	r3, r3
   56ab0:	bics	r3, r3, #1
   56ab4:	bne	56860 <blkid_probe_get_size@plt+0x4f348>
   56ab8:	ldr	r3, [pc, #1112]	; 56f18 <blkid_probe_get_size@plt+0x4fa00>
   56abc:	ldr	r2, [pc, #1112]	; 56f1c <blkid_probe_get_size@plt+0x4fa04>
   56ac0:	add	r3, pc, r3
   56ac4:	add	r2, pc, r2
   56ac8:	mov	r1, r8
   56acc:	mov	r0, r7
   56ad0:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56ad4:	ldr	r3, [sp, #144]	; 0x90
   56ad8:	b	56884 <blkid_probe_get_size@plt+0x4f36c>
   56adc:	ldr	r2, [pc, #1084]	; 56f20 <blkid_probe_get_size@plt+0x4fa08>
   56ae0:	ldr	r1, [pc, #1084]	; 56f24 <blkid_probe_get_size@plt+0x4fa0c>
   56ae4:	add	r2, pc, r2
   56ae8:	add	r2, r2, #1440	; 0x5a0
   56aec:	add	r2, r2, #12
   56af0:	str	r2, [sp]
   56af4:	ldr	r2, [pc, #1068]	; 56f28 <blkid_probe_get_size@plt+0x4fa10>
   56af8:	ldr	r3, [pc, #1068]	; 56f2c <blkid_probe_get_size@plt+0x4fa14>
   56afc:	add	r2, pc, r2
   56b00:	add	r1, pc, r1
   56b04:	mov	r0, #1
   56b08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   56b0c:	and	r2, lr, #49152	; 0xc000
   56b10:	subs	r9, r2, #49152	; 0xc000
   56b14:	movne	r9, #1
   56b18:	b	565dc <blkid_probe_get_size@plt+0x4f0c4>
   56b1c:	cmp	r9, #0
   56b20:	beq	56db0 <blkid_probe_get_size@plt+0x4f898>
   56b24:	ldr	r1, [sp, #44]	; 0x2c
   56b28:	cmp	r1, #0
   56b2c:	beq	56cac <blkid_probe_get_size@plt+0x4f794>
   56b30:	mov	r6, sl
   56b34:	str	sl, [sp, #44]	; 0x2c
   56b38:	mov	sl, r9
   56b3c:	b	56c44 <blkid_probe_get_size@plt+0x4f72c>
   56b40:	mov	r2, r6
   56b44:	ldr	r1, [pc, #996]	; 56f30 <blkid_probe_get_size@plt+0x4fa18>
   56b48:	mov	r0, r5
   56b4c:	bl	6e70 <ioctl@plt>
   56b50:	cmp	r0, #0
   56b54:	blt	5641c <blkid_probe_get_size@plt+0x4ef04>
   56b58:	ldr	r1, [sp, #108]	; 0x6c
   56b5c:	cmp	r1, #0
   56b60:	ble	5641c <blkid_probe_get_size@plt+0x4ef04>
   56b64:	ldr	r3, [sp, #132]	; 0x84
   56b68:	cmp	r3, #0
   56b6c:	ble	5641c <blkid_probe_get_size@plt+0x4ef04>
   56b70:	ldr	r3, [sp, #92]	; 0x5c
   56b74:	ldr	r0, [sp, #96]	; 0x60
   56b78:	add	r4, sp, #156	; 0x9c
   56b7c:	sub	r0, r0, r3
   56b80:	bl	63d50 <blkid_probe_get_size@plt+0x5c838>
   56b84:	ldr	r2, [pc, #936]	; 56f34 <blkid_probe_get_size@plt+0x4fa1c>
   56b88:	mov	r3, #12
   56b8c:	add	r2, pc, r2
   56b90:	str	r2, [sp]
   56b94:	mov	r1, r3
   56b98:	mov	r2, #1
   56b9c:	str	r0, [sp, #4]
   56ba0:	mov	r0, r4
   56ba4:	bl	7260 <__snprintf_chk@plt>
   56ba8:	cmp	r0, #11
   56bac:	bhi	56e10 <blkid_probe_get_size@plt+0x4f8f8>
   56bb0:	ldr	r3, [sp, #116]	; 0x74
   56bb4:	ldr	r0, [sp, #120]	; 0x78
   56bb8:	ldr	r1, [sp, #132]	; 0x84
   56bbc:	sub	r0, r0, r3
   56bc0:	bl	63d50 <blkid_probe_get_size@plt+0x5c838>
   56bc4:	ldr	r2, [pc, #876]	; 56f38 <blkid_probe_get_size@plt+0x4fa20>
   56bc8:	mov	r3, #12
   56bcc:	add	r2, pc, r2
   56bd0:	add	r6, sp, #168	; 0xa8
   56bd4:	str	r2, [sp]
   56bd8:	mov	r1, r3
   56bdc:	mov	r2, #1
   56be0:	str	r0, [sp, #4]
   56be4:	mov	r0, r6
   56be8:	bl	7260 <__snprintf_chk@plt>
   56bec:	cmp	r0, #11
   56bf0:	bhi	56e40 <blkid_probe_get_size@plt+0x4f928>
   56bf4:	ldr	r2, [pc, #832]	; 56f3c <blkid_probe_get_size@plt+0x4fa24>
   56bf8:	mov	r3, r4
   56bfc:	mov	r1, r8
   56c00:	add	r2, pc, r2
   56c04:	mov	r0, r7
   56c08:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56c0c:	ldr	r2, [pc, #812]	; 56f40 <blkid_probe_get_size@plt+0x4fa28>
   56c10:	mov	r3, r6
   56c14:	mov	r1, r8
   56c18:	mov	r0, r7
   56c1c:	add	r2, pc, r2
   56c20:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56c24:	mov	r0, r5
   56c28:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   56c2c:	b	56424 <blkid_probe_get_size@plt+0x4ef0c>
   56c30:	mov	r4, #0
   56c34:	mov	r9, #1
   56c38:	mov	r6, r4
   56c3c:	mov	sl, r9
   56c40:	str	r4, [sp, #44]	; 0x2c
   56c44:	ldr	r3, [sp, #48]	; 0x30
   56c48:	cmp	r3, #0
   56c4c:	bne	56cd4 <blkid_probe_get_size@plt+0x4f7bc>
   56c50:	cmp	r5, #0
   56c54:	bne	56790 <blkid_probe_get_size@plt+0x4f278>
   56c58:	ldr	r3, [sp, #44]	; 0x2c
   56c5c:	orr	sl, r3, sl
   56c60:	uxtb	r3, sl
   56c64:	str	r3, [sp, #40]	; 0x28
   56c68:	cmp	r6, #0
   56c6c:	bne	56d34 <blkid_probe_get_size@plt+0x4f81c>
   56c70:	ldr	r3, [sp, #44]	; 0x2c
   56c74:	cmp	r3, #0
   56c78:	bne	56d14 <blkid_probe_get_size@plt+0x4f7fc>
   56c7c:	cmp	r4, #0
   56c80:	bne	56cf4 <blkid_probe_get_size@plt+0x4f7dc>
   56c84:	cmp	r9, #0
   56c88:	beq	567f4 <blkid_probe_get_size@plt+0x4f2dc>
   56c8c:	ldr	r3, [pc, #688]	; 56f44 <blkid_probe_get_size@plt+0x4fa2c>
   56c90:	ldr	r2, [pc, #688]	; 56f48 <blkid_probe_get_size@plt+0x4fa30>
   56c94:	add	r3, pc, r3
   56c98:	add	r2, pc, r2
   56c9c:	mov	r1, r8
   56ca0:	mov	r0, r7
   56ca4:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56ca8:	b	567f4 <blkid_probe_get_size@plt+0x4f2dc>
   56cac:	ldrd	r0, [sp, #52]	; 0x34
   56cb0:	bics	r6, r1, r0
   56cb4:	beq	56e08 <blkid_probe_get_size@plt+0x4f8f0>
   56cb8:	ldr	r9, [sp, #44]	; 0x2c
   56cbc:	mov	sl, r6
   56cc0:	b	56c44 <blkid_probe_get_size@plt+0x4f72c>
   56cc4:	mov	r4, #0
   56cc8:	mov	r5, r6
   56ccc:	mov	r9, r4
   56cd0:	mov	r6, r4
   56cd4:	ldr	r3, [pc, #624]	; 56f4c <blkid_probe_get_size@plt+0x4fa34>
   56cd8:	ldr	r2, [pc, #624]	; 56f50 <blkid_probe_get_size@plt+0x4fa38>
   56cdc:	add	r3, pc, r3
   56ce0:	add	r2, pc, r2
   56ce4:	mov	r1, r8
   56ce8:	mov	r0, r7
   56cec:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56cf0:	b	56c50 <blkid_probe_get_size@plt+0x4f738>
   56cf4:	ldr	r3, [pc, #600]	; 56f54 <blkid_probe_get_size@plt+0x4fa3c>
   56cf8:	ldr	r2, [pc, #600]	; 56f58 <blkid_probe_get_size@plt+0x4fa40>
   56cfc:	add	r3, pc, r3
   56d00:	add	r2, pc, r2
   56d04:	mov	r1, r8
   56d08:	mov	r0, r7
   56d0c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56d10:	b	56c84 <blkid_probe_get_size@plt+0x4f76c>
   56d14:	ldr	r3, [pc, #576]	; 56f5c <blkid_probe_get_size@plt+0x4fa44>
   56d18:	ldr	r2, [pc, #576]	; 56f60 <blkid_probe_get_size@plt+0x4fa48>
   56d1c:	add	r3, pc, r3
   56d20:	add	r2, pc, r2
   56d24:	mov	r1, r8
   56d28:	mov	r0, r7
   56d2c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56d30:	b	56c7c <blkid_probe_get_size@plt+0x4f764>
   56d34:	ldr	r3, [pc, #552]	; 56f64 <blkid_probe_get_size@plt+0x4fa4c>
   56d38:	ldr	r2, [pc, #552]	; 56f68 <blkid_probe_get_size@plt+0x4fa50>
   56d3c:	add	r3, pc, r3
   56d40:	add	r2, pc, r2
   56d44:	mov	r1, r8
   56d48:	mov	r0, r7
   56d4c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56d50:	b	56c70 <blkid_probe_get_size@plt+0x4f758>
   56d54:	mov	r9, r6
   56d58:	b	56c44 <blkid_probe_get_size@plt+0x4f72c>
   56d5c:	ldr	r3, [pc, #520]	; 56f6c <blkid_probe_get_size@plt+0x4fa54>
   56d60:	ldr	r2, [pc, #520]	; 56f70 <blkid_probe_get_size@plt+0x4fa58>
   56d64:	add	r3, pc, r3
   56d68:	add	r2, pc, r2
   56d6c:	mov	r1, r8
   56d70:	mov	r0, r7
   56d74:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   56d78:	b	56984 <blkid_probe_get_size@plt+0x4f46c>
   56d7c:	ldr	r1, [sp, #32]
   56d80:	mov	r0, r7
   56d84:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   56d88:	ldr	r9, [sp, #112]	; 0x70
   56d8c:	cmp	r9, #0
   56d90:	beq	5681c <blkid_probe_get_size@plt+0x4f304>
   56d94:	ldr	r0, [pc, #472]	; 56f74 <blkid_probe_get_size@plt+0x4fa5c>
   56d98:	add	r0, pc, r0
   56d9c:	b	56820 <blkid_probe_get_size@plt+0x4f308>
   56da0:	ldr	r4, [sp, #44]	; 0x2c
   56da4:	mov	sl, r6
   56da8:	mov	r9, r4
   56dac:	b	56c44 <blkid_probe_get_size@plt+0x4f72c>
   56db0:	ldr	r1, [sp, #64]	; 0x40
   56db4:	mov	r5, r9
   56db8:	orr	sl, r1, r4
   56dbc:	str	r9, [sp, #44]	; 0x2c
   56dc0:	b	56758 <blkid_probe_get_size@plt+0x4f240>
   56dc4:	ldr	r1, [sp, #32]
   56dc8:	mov	r0, r7
   56dcc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   56dd0:	ldr	r3, [sp, #112]	; 0x70
   56dd4:	cmp	r3, #0
   56dd8:	beq	56a30 <blkid_probe_get_size@plt+0x4f518>
   56ddc:	ldr	r0, [pc, #404]	; 56f78 <blkid_probe_get_size@plt+0x4fa60>
   56de0:	add	r0, pc, r0
   56de4:	b	56a34 <blkid_probe_get_size@plt+0x4f51c>
   56de8:	ldr	r4, [sp, #44]	; 0x2c
   56dec:	mov	r5, r3
   56df0:	mov	r2, #1
   56df4:	b	5672c <blkid_probe_get_size@plt+0x4f214>
   56df8:	ldr	r1, [sp, #64]	; 0x40
   56dfc:	str	r6, [sp, #44]	; 0x2c
   56e00:	orr	sl, r1, r4
   56e04:	b	56758 <blkid_probe_get_size@plt+0x4f240>
   56e08:	ldr	r5, [sp, #44]	; 0x2c
   56e0c:	b	56734 <blkid_probe_get_size@plt+0x4f21c>
   56e10:	ldr	r2, [pc, #356]	; 56f7c <blkid_probe_get_size@plt+0x4fa64>
   56e14:	ldr	r1, [pc, #356]	; 56f80 <blkid_probe_get_size@plt+0x4fa68>
   56e18:	add	r2, pc, r2
   56e1c:	add	r2, r2, #1488	; 0x5d0
   56e20:	add	r2, r2, #12
   56e24:	str	r2, [sp]
   56e28:	ldr	r2, [pc, #340]	; 56f84 <blkid_probe_get_size@plt+0x4fa6c>
   56e2c:	mov	r3, #66	; 0x42
   56e30:	add	r2, pc, r2
   56e34:	add	r1, pc, r1
   56e38:	mov	r0, #1
   56e3c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   56e40:	ldr	r2, [pc, #320]	; 56f88 <blkid_probe_get_size@plt+0x4fa70>
   56e44:	ldr	r1, [pc, #320]	; 56f8c <blkid_probe_get_size@plt+0x4fa74>
   56e48:	add	r2, pc, r2
   56e4c:	add	r2, r2, #1488	; 0x5d0
   56e50:	add	r2, r2, #12
   56e54:	str	r2, [sp]
   56e58:	ldr	r2, [pc, #304]	; 56f90 <blkid_probe_get_size@plt+0x4fa78>
   56e5c:	mov	r3, #67	; 0x43
   56e60:	add	r2, pc, r2
   56e64:	add	r1, pc, r1
   56e68:	mov	r0, #1
   56e6c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   56e70:	bl	6fb4 <__stack_chk_fail@plt>
   56e74:	andeq	r1, r4, r4, lsl #17
   56e78:	andeq	r0, r0, ip, lsr r4
   56e7c:	andeq	sp, r1, r4, lsl sp
   56e80:	andeq	sp, r1, r0, lsr #26
   56e84:	andeq	r5, r1, r4, lsl #17
   56e88:	andshi	r4, r8, r0, asr #10
   56e8c:	andeq	pc, r1, ip, ror #29
   56e90:	ldrdeq	sp, [r1], -r8
   56e94:	andeq	sp, r1, ip, lsr #23
   56e98:	andeq	sp, r1, r4, lsr #23
   56e9c:	muleq	r1, r8, fp
   56ea0:	muleq	r1, r4, fp
   56ea4:	andeq	r0, r0, pc, lsl r1
   56ea8:	andeq	r0, r0, pc, lsr r1
   56eac:	andeq	r0, r0, r7, ror #5
   56eb0:	andeq	r0, r0, r3, lsr #4
   56eb4:			; <UNDEFINED> instruction: 0x0001fbbc
   56eb8:	andeq	sp, r1, ip, lsr #18
   56ebc:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   56ec0:			; <UNDEFINED> instruction: 0x0001d8bc
   56ec4:	andeq	r1, r4, ip, lsr r9
   56ec8:	andeq	sp, r1, r0, lsl #18
   56ecc:	andeq	ip, r1, r8, lsl r1
   56ed0:			; <UNDEFINED> instruction: 0x0001cebc
   56ed4:	andeq	r0, r0, r6, lsl #2
   56ed8:	andeq	pc, r1, r0, asr #21
   56edc:	andeq	sp, r1, r4, lsr r9
   56ee0:	andeq	ip, r1, ip, lsl #1
   56ee4:	andeq	lr, r0, ip, ror r6
   56ee8:	andeq	r1, r4, r4, ror #16
   56eec:	andeq	sp, r1, r4, lsr r8
   56ef0:	ldrdeq	ip, [r1], -r8
   56ef4:	andeq	r0, r0, lr, lsl #2
   56ef8:	strdeq	pc, [r1], -r4
   56efc:	andeq	sp, r1, ip, lsl r8
   56f00:	andeq	fp, r1, ip, lsl #31
   56f04:	andeq	fp, r1, r0, lsl #31
   56f08:	andeq	r1, r4, r4, ror r7
   56f0c:	andeq	sp, r1, r4, asr r7
   56f10:	andeq	ip, r1, ip, lsr #25
   56f14:	andeq	r0, r0, r6, lsl r1
   56f18:	muleq	r1, r4, r8
   56f1c:	strdeq	sp, [r1], -r4
   56f20:	andeq	fp, r1, r0, ror #28
   56f24:	andeq	lr, r0, r4, lsl #25
   56f28:	andeq	ip, r1, r4, lsl ip
   56f2c:	andeq	r0, r0, r9, lsr r1
   56f30:	andshi	r4, r8, r1, asr #10
   56f34:	andeq	sp, r1, r4, lsl #5
   56f38:	andeq	sp, r1, r4, asr #4
   56f3c:	andeq	sp, r1, ip, lsr #12
   56f40:	andeq	sp, r1, r4, lsr #12
   56f44:	andeq	pc, r1, r0, asr #13
   56f48:	andeq	sp, r1, r0, lsl #9
   56f4c:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>
   56f50:	ldrdeq	sp, [r1], -r0
   56f54:	andeq	pc, r1, r8, asr r6	; <UNPREDICTABLE>
   56f58:	andeq	sp, r1, r4, lsl #8
   56f5c:	andeq	pc, r1, r8, lsr r6	; <UNPREDICTABLE>
   56f60:	andeq	sp, r1, ip, asr #7
   56f64:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   56f68:	muleq	r1, r8, r3
   56f6c:	strdeq	pc, [r1], -r0
   56f70:	andeq	sp, r1, r8, lsl r4
   56f74:	andeq	lr, r0, r0, lsr #3
   56f78:	andeq	lr, r0, r8, asr r1
   56f7c:	andeq	fp, r1, ip, lsr #22
   56f80:	andeq	sp, r1, r8, lsr #7
   56f84:	andeq	ip, r1, r0, ror #17
   56f88:	strdeq	fp, [r1], -ip
   56f8c:	andeq	sp, r1, r0, lsr #7
   56f90:			; <UNDEFINED> instruction: 0x0001c8b0
   56f94:	ldr	ip, [pc, #308]	; 570d0 <blkid_probe_get_size@plt+0x4fbb8>
   56f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   56f9c:	add	ip, pc, ip
   56fa0:	ldr	lr, [pc, #300]	; 570d4 <blkid_probe_get_size@plt+0x4fbbc>
   56fa4:	ldr	r5, [pc, #300]	; 570d8 <blkid_probe_get_size@plt+0x4fbc0>
   56fa8:	mov	sl, r0
   56fac:	ldr	r0, [ip, lr]
   56fb0:	sub	sp, sp, #28
   56fb4:	add	r5, pc, r5
   56fb8:	mov	lr, r0
   56fbc:	str	r0, [sp, #4]
   56fc0:	ldr	r0, [r5, #4]
   56fc4:	ldr	lr, [lr]
   56fc8:	cmp	r0, #0
   56fcc:	mov	r9, r1
   56fd0:	str	lr, [sp, #20]
   56fd4:	ldrb	fp, [sp, #64]	; 0x40
   56fd8:	beq	570c0 <blkid_probe_get_size@plt+0x4fba8>
   56fdc:	cmp	r9, #0
   56fe0:	mov	r1, r2
   56fe4:	mov	r4, r3
   56fe8:	beq	57008 <blkid_probe_get_size@plt+0x4faf0>
   56fec:	mov	r0, r9
   56ff0:	mov	r2, #0
   56ff4:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   56ff8:	subs	r1, r0, #0
   56ffc:	beq	57088 <blkid_probe_get_size@plt+0x4fb70>
   57000:	ldr	r0, [r5, #4]
   57004:	mov	r9, r1
   57008:	bl	34f88 <blkid_probe_get_size@plt+0x2da70>
   5700c:	mov	r5, #0
   57010:	cmp	r0, #0
   57014:	blt	57090 <blkid_probe_get_size@plt+0x4fb78>
   57018:	ldr	r6, [pc, #188]	; 570dc <blkid_probe_get_size@plt+0x4fbc4>
   5701c:	add	r8, sp, #12
   57020:	add	r7, sp, #16
   57024:	add	r6, pc, r6
   57028:	mov	r2, r8
   5702c:	mov	r1, r7
   57030:	ldr	r0, [r6, #4]
   57034:	bl	34e88 <blkid_probe_get_size@plt+0x2d970>
   57038:	cmp	r0, #0
   5703c:	ble	57090 <blkid_probe_get_size@plt+0x4fb78>
   57040:	cmp	r4, #0
   57044:	ldr	r2, [sp, #16]
   57048:	beq	57068 <blkid_probe_get_size@plt+0x4fb50>
   5704c:	mov	r1, r2
   57050:	mov	r0, r4
   57054:	mov	r2, #2
   57058:	bl	693c <fnmatch@plt>
   5705c:	cmp	r0, #0
   57060:	bne	57028 <blkid_probe_get_size@plt+0x4fb10>
   57064:	ldr	r2, [sp, #16]
   57068:	ldr	r3, [sp, #12]
   5706c:	mov	r1, fp
   57070:	mov	r0, sl
   57074:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57078:	cmp	r0, #0
   5707c:	blt	570b8 <blkid_probe_get_size@plt+0x4fba0>
   57080:	add	r5, r5, #1
   57084:	b	57028 <blkid_probe_get_size@plt+0x4fb10>
   57088:	mov	r9, r1
   5708c:	mvn	r5, #11
   57090:	mov	r0, r9
   57094:	bl	69f0 <free@plt>
   57098:	ldr	r3, [sp, #4]
   5709c:	ldr	r2, [sp, #20]
   570a0:	mov	r0, r5
   570a4:	ldr	r3, [r3]
   570a8:	cmp	r2, r3
   570ac:	bne	570cc <blkid_probe_get_size@plt+0x4fbb4>
   570b0:	add	sp, sp, #28
   570b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   570b8:	mov	r5, r0
   570bc:	b	57090 <blkid_probe_get_size@plt+0x4fb78>
   570c0:	mov	r9, r0
   570c4:	mvn	r5, #1
   570c8:	b	57090 <blkid_probe_get_size@plt+0x4fb78>
   570cc:	bl	6fb4 <__stack_chk_fail@plt>
   570d0:	andeq	r0, r4, ip, asr #23
   570d4:	andeq	r0, r0, ip, lsr r4
   570d8:	ldrdeq	r1, [r4], -r0
   570dc:	andeq	r1, r4, r0, ror #28
   570e0:	ldr	ip, [pc, #4012]	; 58094 <blkid_probe_get_size@plt+0x50b7c>
   570e4:	ldr	r2, [pc, #4012]	; 58098 <blkid_probe_get_size@plt+0x50b80>
   570e8:	add	ip, pc, ip
   570ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   570f0:	sub	sp, sp, #540	; 0x21c
   570f4:	ldr	r4, [ip, r2]
   570f8:	add	r7, sp, #128	; 0x80
   570fc:	mov	r6, r0
   57100:	ldr	lr, [r4]
   57104:	mov	r2, #148	; 0x94
   57108:	mov	r1, #0
   5710c:	mov	r0, r7
   57110:	mov	r8, r3
   57114:	str	lr, [sp, #532]	; 0x214
   57118:	bl	6c84 <memset@plt>
   5711c:	ldr	r1, [pc, #3960]	; 5809c <blkid_probe_get_size@plt+0x50b84>
   57120:	add	sl, sp, #64	; 0x40
   57124:	mov	r0, r6
   57128:	mov	r2, sl
   5712c:	add	r1, pc, r1
   57130:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   57134:	subs	r5, r0, #0
   57138:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   5713c:	mov	r2, #0
   57140:	mov	r1, r2
   57144:	ldr	r0, [sp, #64]	; 0x40
   57148:	bl	6c54 <strtoul@plt>
   5714c:	cmp	r0, #32
   57150:	beq	57184 <blkid_probe_get_size@plt+0x4fc6c>
   57154:	cmp	r0, #256	; 0x100
   57158:	beq	5741c <blkid_probe_get_size@plt+0x4ff04>
   5715c:	cmp	r0, #1
   57160:	beq	57410 <blkid_probe_get_size@plt+0x4fef8>
   57164:	mov	r5, #0
   57168:	ldr	r2, [sp, #532]	; 0x214
   5716c:	ldr	r3, [r4]
   57170:	mov	r0, r5
   57174:	cmp	r2, r3
   57178:	bne	57fe0 <blkid_probe_get_size@plt+0x50ac8>
   5717c:	add	sp, sp, #540	; 0x21c
   57180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   57184:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   57188:	ldr	r3, [r0, #4]
   5718c:	tst	r3, #4
   57190:	beq	57164 <blkid_probe_get_size@plt+0x4fc4c>
   57194:	ldr	r9, [pc, #3844]	; 580a0 <blkid_probe_get_size@plt+0x50b88>
   57198:	add	r9, pc, r9
   5719c:	ldr	r1, [pc, #3840]	; 580a4 <blkid_probe_get_size@plt+0x50b8c>
   571a0:	mov	r2, sl
   571a4:	add	r1, pc, r1
   571a8:	mov	r0, r6
   571ac:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   571b0:	subs	r5, r0, #0
   571b4:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   571b8:	ldr	r1, [pc, #3816]	; 580a8 <blkid_probe_get_size@plt+0x50b90>
   571bc:	add	r2, sp, #60	; 0x3c
   571c0:	add	r1, pc, r1
   571c4:	mov	r0, r6
   571c8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   571cc:	subs	r5, r0, #0
   571d0:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   571d4:	ldr	r1, [sp, #60]	; 0x3c
   571d8:	ldr	r0, [sp, #64]	; 0x40
   571dc:	bl	7314 <strcmp@plt>
   571e0:	subs	r5, r0, #0
   571e4:	bne	57164 <blkid_probe_get_size@plt+0x4fc4c>
   571e8:	add	r1, sp, #56	; 0x38
   571ec:	mov	r0, r6
   571f0:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   571f4:	cmp	r0, #0
   571f8:	blt	57234 <blkid_probe_get_size@plt+0x4fd1c>
   571fc:	ldr	sl, [sp, #56]	; 0x38
   57200:	ldr	r0, [pc, #3748]	; 580ac <blkid_probe_get_size@plt+0x50b94>
   57204:	mov	r1, sl
   57208:	add	r0, pc, r0
   5720c:	bl	7314 <strcmp@plt>
   57210:	cmp	r0, #0
   57214:	beq	579c4 <blkid_probe_get_size@plt+0x504ac>
   57218:	ldr	r0, [pc, #3728]	; 580b0 <blkid_probe_get_size@plt+0x50b98>
   5721c:	mov	r1, sl
   57220:	add	r0, pc, r0
   57224:	bl	7314 <strcmp@plt>
   57228:	cmp	r0, #0
   5722c:	ldreq	r9, [pc, #3712]	; 580b4 <blkid_probe_get_size@plt+0x50b9c>
   57230:	addeq	r9, pc, r9
   57234:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   57238:	ldr	r2, [pc, #3704]	; 580b8 <blkid_probe_get_size@plt+0x50ba0>
   5723c:	mov	r1, r8
   57240:	add	r2, pc, r2
   57244:	add	sl, sp, #68	; 0x44
   57248:	ldr	r3, [r0]
   5724c:	mov	r0, r6
   57250:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57254:	ldr	r1, [pc, #3680]	; 580bc <blkid_probe_get_size@plt+0x50ba4>
   57258:	mov	r2, sl
   5725c:	add	r1, pc, r1
   57260:	mov	r0, r6
   57264:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   57268:	cmp	r0, #0
   5726c:	blt	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57270:	mov	r2, #0
   57274:	mov	r1, r2
   57278:	ldr	r0, [sp, #68]	; 0x44
   5727c:	bl	6c54 <strtoul@plt>
   57280:	cmp	r0, #32
   57284:	beq	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57288:	ldr	r1, [pc, #3632]	; 580c0 <blkid_probe_get_size@plt+0x50ba8>
   5728c:	mov	r2, sl
   57290:	add	r1, pc, r1
   57294:	mov	r0, r6
   57298:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   5729c:	cmp	r0, #0
   572a0:	blt	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   572a4:	mov	r2, #0
   572a8:	mov	r1, r2
   572ac:	ldr	r0, [sp, #68]	; 0x44
   572b0:	bl	6c54 <strtoul@plt>
   572b4:	cmp	r0, #0
   572b8:	beq	57be8 <blkid_probe_get_size@plt+0x506d0>
   572bc:	ldrb	r3, [sp, #138]	; 0x8a
   572c0:	cmp	r3, #0
   572c4:	bne	579d0 <blkid_probe_get_size@plt+0x504b8>
   572c8:	cmp	r6, #0
   572cc:	beq	57bb8 <blkid_probe_get_size@plt+0x506a0>
   572d0:	add	r3, sp, #84	; 0x54
   572d4:	mov	r1, r3
   572d8:	mov	r0, r6
   572dc:	str	r3, [sp, #36]	; 0x24
   572e0:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   572e4:	cmp	r0, #0
   572e8:	blt	57428 <blkid_probe_get_size@plt+0x4ff10>
   572ec:	ldr	r0, [sp, #84]	; 0x54
   572f0:	bl	4ed8c <blkid_probe_get_size@plt+0x47874>
   572f4:	cmp	r0, #0
   572f8:	str	r0, [sp, #84]	; 0x54
   572fc:	beq	57428 <blkid_probe_get_size@plt+0x4ff10>
   57300:	add	r1, sp, #92	; 0x5c
   57304:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   57308:	cmp	r0, #0
   5730c:	blt	57428 <blkid_probe_get_size@plt+0x4ff10>
   57310:	ldr	r3, [pc, #3500]	; 580c4 <blkid_probe_get_size@plt+0x50bac>
   57314:	add	r3, pc, r3
   57318:	add	r3, r3, #12
   5731c:	ldm	r3, {r0, r1, r2}
   57320:	add	r3, sp, #96	; 0x60
   57324:	stm	r3, {r0, r1, r2}
   57328:	mov	r0, r3
   5732c:	ldr	r1, [sp, #92]	; 0x5c
   57330:	bl	3d404 <blkid_probe_get_size@plt+0x35eec>
   57334:	add	r3, sp, #88	; 0x58
   57338:	str	r3, [sp, #32]
   5733c:	cmp	r0, #0
   57340:	beq	57430 <blkid_probe_get_size@plt+0x4ff18>
   57344:	mov	r1, r3
   57348:	ldr	r0, [sp, #84]	; 0x54
   5734c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   57350:	cmp	r0, #0
   57354:	blt	57430 <blkid_probe_get_size@plt+0x4ff18>
   57358:	ldr	sl, [sp, #88]	; 0x58
   5735c:	mov	r0, sl
   57360:	bl	723c <strlen@plt>
   57364:	sub	r3, r0, #8
   57368:	cmp	r3, #1
   5736c:	mov	fp, r0
   57370:	bhi	57430 <blkid_probe_get_size@plt+0x4ff18>
   57374:	ldr	r1, [pc, #3404]	; 580c8 <blkid_probe_get_size@plt+0x50bb0>
   57378:	mov	r0, sl
   5737c:	add	r1, pc, r1
   57380:	bl	6c9c <strspn@plt>
   57384:	ldr	r2, [pc, #3392]	; 580cc <blkid_probe_get_size@plt+0x50bb4>
   57388:	mov	r3, #16
   5738c:	add	r2, pc, r2
   57390:	mov	r1, r3
   57394:	cmp	fp, r0
   57398:	subls	r0, fp, #1
   5739c:	add	ip, sl, r0
   573a0:	add	sl, sp, #228	; 0xe4
   573a4:	stm	sp, {r2, ip}
   573a8:	mov	r0, sl
   573ac:	mov	r2, #1
   573b0:	str	ip, [sp, #88]	; 0x58
   573b4:	bl	7260 <__snprintf_chk@plt>
   573b8:	cmp	r0, #15
   573bc:	movls	r3, #5
   573c0:	strls	r3, [sp, #128]	; 0x80
   573c4:	bhi	576cc <blkid_probe_get_size@plt+0x501b4>
   573c8:	ldr	r2, [pc, #3328]	; 580d0 <blkid_probe_get_size@plt+0x50bb8>
   573cc:	mov	r3, #16
   573d0:	add	r2, pc, r2
   573d4:	add	r7, sp, #276	; 0x114
   573d8:	stm	sp, {r2, r9, sl}
   573dc:	mov	r0, r7
   573e0:	mov	r1, r3
   573e4:	mov	r2, #1
   573e8:	bl	7260 <__snprintf_chk@plt>
   573ec:	cmp	r0, #15
   573f0:	bhi	57168 <blkid_probe_get_size@plt+0x4fc50>
   573f4:	ldr	r2, [pc, #3288]	; 580d4 <blkid_probe_get_size@plt+0x50bbc>
   573f8:	mov	r3, r7
   573fc:	mov	r1, r8
   57400:	mov	r0, r6
   57404:	add	r2, pc, r2
   57408:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   5740c:	b	57168 <blkid_probe_get_size@plt+0x4fc50>
   57410:	ldr	r9, [pc, #3264]	; 580d8 <blkid_probe_get_size@plt+0x50bc0>
   57414:	add	r9, pc, r9
   57418:	b	5719c <blkid_probe_get_size@plt+0x4fc84>
   5741c:	ldr	r9, [pc, #3256]	; 580dc <blkid_probe_get_size@plt+0x50bc4>
   57420:	add	r9, pc, r9
   57424:	b	5719c <blkid_probe_get_size@plt+0x4fc84>
   57428:	add	r3, sp, #88	; 0x58
   5742c:	str	r3, [sp, #32]
   57430:	add	sl, sp, #72	; 0x48
   57434:	mov	r1, sl
   57438:	mov	r0, r6
   5743c:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   57440:	cmp	r0, #0
   57444:	blt	57538 <blkid_probe_get_size@plt+0x50020>
   57448:	add	r1, sp, #92	; 0x5c
   5744c:	ldr	r0, [sp, #72]	; 0x48
   57450:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   57454:	cmp	r0, #0
   57458:	blt	57538 <blkid_probe_get_size@plt+0x50020>
   5745c:	ldr	r0, [pc, #3196]	; 580e0 <blkid_probe_get_size@plt+0x50bc8>
   57460:	ldr	r1, [sp, #92]	; 0x5c
   57464:	add	r0, pc, r0
   57468:	bl	7314 <strcmp@plt>
   5746c:	cmp	r0, #0
   57470:	bne	57538 <blkid_probe_get_size@plt+0x50020>
   57474:	ldr	r1, [sp, #32]
   57478:	mov	r0, r6
   5747c:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   57480:	cmp	r0, #0
   57484:	blt	57538 <blkid_probe_get_size@plt+0x50020>
   57488:	ldr	r3, [sp, #36]	; 0x24
   5748c:	ldr	r1, [pc, #3152]	; 580e4 <blkid_probe_get_size@plt+0x50bcc>
   57490:	str	r3, [sp]
   57494:	ldr	r0, [sp, #88]	; 0x58
   57498:	add	r3, sp, #80	; 0x50
   5749c:	add	r2, sp, #76	; 0x4c
   574a0:	add	r1, pc, r1
   574a4:	bl	735c <sscanf@plt>
   574a8:	cmp	r0, #3
   574ac:	bne	57538 <blkid_probe_get_size@plt+0x50020>
   574b0:	ldr	r2, [pc, #3120]	; 580e8 <blkid_probe_get_size@plt+0x50bd0>
   574b4:	ldr	r1, [sp, #80]	; 0x50
   574b8:	add	r2, pc, r2
   574bc:	mov	r3, #16
   574c0:	add	r7, sp, #244	; 0xf4
   574c4:	str	r1, [sp, #4]
   574c8:	str	r2, [sp]
   574cc:	mov	r0, r7
   574d0:	mov	r1, r3
   574d4:	mov	r2, #1
   574d8:	bl	7260 <__snprintf_chk@plt>
   574dc:	cmp	r0, #15
   574e0:	bhi	57fe4 <blkid_probe_get_size@plt+0x50acc>
   574e4:	ldr	r2, [pc, #3072]	; 580ec <blkid_probe_get_size@plt+0x50bd4>
   574e8:	mov	r3, #16
   574ec:	add	r2, pc, r2
   574f0:	add	r5, sp, #276	; 0x114
   574f4:	stm	sp, {r2, r9}
   574f8:	mov	ip, #6
   574fc:	str	r7, [sp, #8]
   57500:	mov	r0, r5
   57504:	mov	r1, r3
   57508:	mov	r2, #1
   5750c:	str	ip, [sp, #128]	; 0x80
   57510:	bl	7260 <__snprintf_chk@plt>
   57514:	cmp	r0, #15
   57518:	bhi	57164 <blkid_probe_get_size@plt+0x4fc4c>
   5751c:	ldr	r2, [pc, #3020]	; 580f0 <blkid_probe_get_size@plt+0x50bd8>
   57520:	mov	r3, r5
   57524:	mov	r1, r8
   57528:	mov	r0, r6
   5752c:	add	r2, pc, r2
   57530:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57534:	b	57164 <blkid_probe_get_size@plt+0x4fc4c>
   57538:	mov	r1, sl
   5753c:	mov	r0, r6
   57540:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   57544:	cmp	r0, #0
   57548:	blt	576dc <blkid_probe_get_size@plt+0x501c4>
   5754c:	add	r1, sp, #92	; 0x5c
   57550:	ldr	r0, [sp, #72]	; 0x48
   57554:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   57558:	cmp	r0, #0
   5755c:	blt	576dc <blkid_probe_get_size@plt+0x501c4>
   57560:	ldr	r0, [pc, #2956]	; 580f4 <blkid_probe_get_size@plt+0x50bdc>
   57564:	ldr	r1, [sp, #92]	; 0x5c
   57568:	add	r0, pc, r0
   5756c:	bl	7314 <strcmp@plt>
   57570:	cmp	r0, #0
   57574:	bne	576dc <blkid_probe_get_size@plt+0x501c4>
   57578:	ldr	r1, [sp, #32]
   5757c:	mov	r0, r6
   57580:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   57584:	cmp	r0, #0
   57588:	blt	576dc <blkid_probe_get_size@plt+0x501c4>
   5758c:	ldr	fp, [sp, #88]	; 0x58
   57590:	mov	r0, fp
   57594:	bl	723c <strlen@plt>
   57598:	cmp	r0, #30
   5759c:	bls	576dc <blkid_probe_get_size@plt+0x501c4>
   575a0:	ldrb	r2, [fp, #30]
   575a4:	cmp	r2, #58	; 0x3a
   575a8:	beq	57e28 <blkid_probe_get_size@plt+0x50910>
   575ac:	ldr	r1, [pc, #2884]	; 580f8 <blkid_probe_get_size@plt+0x50be0>
   575b0:	ldr	r3, [pc, #2884]	; 580fc <blkid_probe_get_size@plt+0x50be4>
   575b4:	add	r1, pc, r1
   575b8:	add	r3, pc, r3
   575bc:	str	r3, [sp, #40]	; 0x28
   575c0:	ldr	r3, [sp, #36]	; 0x24
   575c4:	add	sl, sp, #276	; 0x114
   575c8:	str	r3, [sp, #4]
   575cc:	add	r3, sp, #80	; 0x50
   575d0:	str	r3, [sp]
   575d4:	mov	r0, fp
   575d8:	mov	r2, sl
   575dc:	add	r3, sp, #76	; 0x4c
   575e0:	bl	735c <sscanf@plt>
   575e4:	cmp	r0, #4
   575e8:	bne	576e0 <blkid_probe_get_size@plt+0x501c8>
   575ec:	ldr	r1, [sp, #40]	; 0x28
   575f0:	mov	r0, sl
   575f4:	bl	6c9c <strspn@plt>
   575f8:	add	r3, sp, #536	; 0x218
   575fc:	add	r0, r3, r0
   57600:	ldrb	r3, [r0, #-260]	; 0xfffffefc
   57604:	cmp	r3, #0
   57608:	bne	576e0 <blkid_probe_get_size@plt+0x501c8>
   5760c:	ldrb	r3, [sp, #276]	; 0x114
   57610:	cmp	r3, #0
   57614:	beq	5763c <blkid_probe_get_size@plt+0x50124>
   57618:	mov	r2, sl
   5761c:	sub	r1, r3, #65	; 0x41
   57620:	cmp	r1, #25
   57624:	addls	r3, r3, #32
   57628:	uxtbls	r3, r3
   5762c:	strb	r3, [r2]
   57630:	ldrb	r3, [r2, #1]!
   57634:	cmp	r3, #0
   57638:	bne	5761c <blkid_probe_get_size@plt+0x50104>
   5763c:	ldr	r2, [pc, #2748]	; 58100 <blkid_probe_get_size@plt+0x50be8>
   57640:	ldr	r0, [sp, #80]	; 0x50
   57644:	ldr	r1, [sp, #76]	; 0x4c
   57648:	add	r2, pc, r2
   5764c:	mov	r3, #16
   57650:	add	r5, sp, #260	; 0x104
   57654:	str	r0, [sp, #12]
   57658:	str	r1, [sp, #8]
   5765c:	str	r2, [sp]
   57660:	str	sl, [sp, #4]
   57664:	mov	r0, r5
   57668:	mov	r1, r3
   5766c:	mov	r2, #1
   57670:	bl	7260 <__snprintf_chk@plt>
   57674:	cmp	r0, #15
   57678:	bhi	58014 <blkid_probe_get_size@plt+0x50afc>
   5767c:	ldr	r2, [pc, #2688]	; 58104 <blkid_probe_get_size@plt+0x50bec>
   57680:	mov	r3, #16
   57684:	add	r2, pc, r2
   57688:	mov	ip, #7
   5768c:	stm	sp, {r2, r9}
   57690:	str	r5, [sp, #8]
   57694:	mov	r1, r3
   57698:	mov	r2, #1
   5769c:	mov	r0, sl
   576a0:	str	ip, [sp, #128]	; 0x80
   576a4:	bl	7260 <__snprintf_chk@plt>
   576a8:	cmp	r0, #15
   576ac:	bhi	57164 <blkid_probe_get_size@plt+0x4fc4c>
   576b0:	ldr	r2, [pc, #2640]	; 58108 <blkid_probe_get_size@plt+0x50bf0>
   576b4:	mov	r3, sl
   576b8:	mov	r1, r8
   576bc:	mov	r0, r6
   576c0:	add	r2, pc, r2
   576c4:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   576c8:	b	57164 <blkid_probe_get_size@plt+0x4fc4c>
   576cc:	ldr	r3, [sp, #128]	; 0x80
   576d0:	cmp	r3, #5
   576d4:	bne	57430 <blkid_probe_get_size@plt+0x4ff18>
   576d8:	b	573c8 <blkid_probe_get_size@plt+0x4feb0>
   576dc:	add	sl, sp, #276	; 0x114
   576e0:	add	fp, sp, #108	; 0x6c
   576e4:	mov	r2, #148	; 0x94
   576e8:	mov	r1, #0
   576ec:	mov	r0, sl
   576f0:	bl	6c84 <memset@plt>
   576f4:	mov	r3, #0
   576f8:	ldr	r1, [sp, #32]
   576fc:	mov	r0, r6
   57700:	str	r3, [fp, #4]
   57704:	str	r3, [sp, #108]	; 0x6c
   57708:	str	r3, [fp, #8]
   5770c:	str	r3, [fp, #12]
   57710:	str	r3, [fp, #16]
   57714:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   57718:	cmp	r0, #0
   5771c:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   57720:	ldr	r0, [sp, #88]	; 0x58
   57724:	bl	4ed8c <blkid_probe_get_size@plt+0x47874>
   57728:	cmp	r0, #0
   5772c:	str	r0, [sp, #88]	; 0x58
   57730:	beq	57168 <blkid_probe_get_size@plt+0x4fc50>
   57734:	add	r3, sp, #92	; 0x5c
   57738:	mov	r1, r3
   5773c:	str	r3, [sp, #40]	; 0x28
   57740:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   57744:	cmp	r0, #0
   57748:	blt	57b94 <blkid_probe_get_size@plt+0x5067c>
   5774c:	ldr	r0, [pc, #2488]	; 5810c <blkid_probe_get_size@plt+0x50bf4>
   57750:	ldr	r1, [sp, #92]	; 0x5c
   57754:	add	r0, pc, r0
   57758:	bl	7314 <strcmp@plt>
   5775c:	cmp	r0, #0
   57760:	bne	57b94 <blkid_probe_get_size@plt+0x5067c>
   57764:	ldr	r2, [sp, #88]	; 0x58
   57768:	mov	r3, #1
   5776c:	str	r2, [sp, #140]	; 0x8c
   57770:	str	r3, [sp, #128]	; 0x80
   57774:	bl	2a2ec <blkid_probe_get_size@plt+0x22dd4>
   57778:	ldr	r3, [r0, #4]
   5777c:	mvn	r3, r3
   57780:	ands	r3, r3, #1
   57784:	str	r3, [sp, #44]	; 0x2c
   57788:	bne	577a4 <blkid_probe_get_size@plt+0x5028c>
   5778c:	mov	r2, fp
   57790:	mov	r1, r7
   57794:	mov	r0, r6
   57798:	bl	50678 <blkid_probe_get_size@plt+0x49160>
   5779c:	cmp	r0, #0
   577a0:	bge	57e40 <blkid_probe_get_size@plt+0x50928>
   577a4:	mov	r1, r7
   577a8:	mov	r0, r6
   577ac:	bl	4fc9c <blkid_probe_get_size@plt+0x48784>
   577b0:	mov	r1, r7
   577b4:	mov	r0, r6
   577b8:	bl	50014 <blkid_probe_get_size@plt+0x48afc>
   577bc:	ldr	r2, [sp, #128]	; 0x80
   577c0:	cmp	r2, #1
   577c4:	beq	57ae8 <blkid_probe_get_size@plt+0x505d0>
   577c8:	ldr	r2, [pc, #2368]	; 58110 <blkid_probe_get_size@plt+0x50bf8>
   577cc:	ldr	r1, [pc, #2368]	; 58114 <blkid_probe_get_size@plt+0x50bfc>
   577d0:	ldr	r3, [sp, #36]	; 0x24
   577d4:	add	r2, pc, r2
   577d8:	add	r1, pc, r1
   577dc:	mov	r0, r6
   577e0:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   577e4:	cmp	r0, #0
   577e8:	blt	57cc0 <blkid_probe_get_size@plt+0x507a8>
   577ec:	ldr	r1, [sp, #40]	; 0x28
   577f0:	ldr	r0, [sp, #84]	; 0x54
   577f4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   577f8:	cmp	r0, #0
   577fc:	blt	57cc0 <blkid_probe_get_size@plt+0x507a8>
   57800:	ldr	r2, [sp, #92]	; 0x5c
   57804:	mov	r1, #256	; 0x100
   57808:	mov	r0, sl
   5780c:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   57810:	mov	r1, #45	; 0x2d
   57814:	mov	r0, sl
   57818:	bl	74c4 <strchr@plt>
   5781c:	cmp	r0, #0
   57820:	str	r0, [sp, #88]	; 0x58
   57824:	beq	57cc0 <blkid_probe_get_size@plt+0x507a8>
   57828:	add	fp, r0, #1
   5782c:	mov	r0, fp
   57830:	mov	r1, #58	; 0x3a
   57834:	str	fp, [sp, #52]	; 0x34
   57838:	bl	74c4 <strchr@plt>
   5783c:	cmp	r0, #0
   57840:	str	r0, [sp, #88]	; 0x58
   57844:	beq	57cc0 <blkid_probe_get_size@plt+0x507a8>
   57848:	mov	r3, r0
   5784c:	mov	r7, #0
   57850:	strb	r7, [r3], #1
   57854:	mov	r1, #46	; 0x2e
   57858:	mov	r0, r3
   5785c:	str	r3, [sp, #44]	; 0x2c
   57860:	bl	74c4 <strchr@plt>
   57864:	cmp	r0, r7
   57868:	str	r0, [sp, #88]	; 0x58
   5786c:	beq	57cc0 <blkid_probe_get_size@plt+0x507a8>
   57870:	str	fp, [sp, #88]	; 0x58
   57874:	strb	r7, [r0], #1
   57878:	mov	fp, #117	; 0x75
   5787c:	str	r0, [sp, #48]	; 0x30
   57880:	b	57888 <blkid_probe_get_size@plt+0x50370>
   57884:	strb	fp, [r0]
   57888:	ldr	r0, [sp, #88]	; 0x58
   5788c:	mov	r1, #46	; 0x2e
   57890:	bl	74c4 <strchr@plt>
   57894:	cmp	r0, #0
   57898:	str	r0, [sp, #88]	; 0x58
   5789c:	bne	57884 <blkid_probe_get_size@plt+0x5036c>
   578a0:	ldr	r2, [pc, #2160]	; 58118 <blkid_probe_get_size@plt+0x50c00>
   578a4:	ldr	r3, [sp, #52]	; 0x34
   578a8:	str	r0, [sp]
   578ac:	add	r2, pc, r2
   578b0:	mov	r1, #16
   578b4:	mov	r7, r0
   578b8:	add	fp, sp, #196	; 0xc4
   578bc:	ldr	r0, [sp, #32]
   578c0:	str	fp, [sp, #88]	; 0x58
   578c4:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   578c8:	ldr	r1, [pc, #2124]	; 5811c <blkid_probe_get_size@plt+0x50c04>
   578cc:	add	r1, pc, r1
   578d0:	str	r0, [sp, #52]	; 0x34
   578d4:	ldr	r0, [sp, #44]	; 0x2c
   578d8:	bl	7314 <strcmp@plt>
   578dc:	ldr	r3, [sp, #52]	; 0x34
   578e0:	cmp	r0, #0
   578e4:	beq	57908 <blkid_probe_get_size@plt+0x503f0>
   578e8:	ldr	r2, [pc, #2096]	; 58120 <blkid_probe_get_size@plt+0x50c08>
   578ec:	ldr	r3, [sp, #44]	; 0x2c
   578f0:	str	r7, [sp]
   578f4:	add	r2, pc, r2
   578f8:	mov	r1, #16
   578fc:	ldr	r0, [sp, #32]
   57900:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   57904:	mov	r3, r0
   57908:	ldr	r1, [pc, #2068]	; 58124 <blkid_probe_get_size@plt+0x50c0c>
   5790c:	ldr	r0, [sp, #48]	; 0x30
   57910:	add	r1, pc, r1
   57914:	str	r3, [sp, #44]	; 0x2c
   57918:	bl	7314 <strcmp@plt>
   5791c:	ldr	r3, [sp, #44]	; 0x2c
   57920:	cmp	r0, #0
   57924:	beq	5794c <blkid_probe_get_size@plt+0x50434>
   57928:	mov	r2, #0
   5792c:	str	r2, [sp]
   57930:	ldr	r2, [pc, #2032]	; 58128 <blkid_probe_get_size@plt+0x50c10>
   57934:	ldr	r3, [sp, #48]	; 0x30
   57938:	add	r2, pc, r2
   5793c:	mov	r1, #16
   57940:	ldr	r0, [sp, #32]
   57944:	bl	3d180 <blkid_probe_get_size@plt+0x35c68>
   57948:	mov	r3, r0
   5794c:	cmp	r3, #0
   57950:	beq	57cc0 <blkid_probe_get_size@plt+0x507a8>
   57954:	ldrb	r3, [sp, #160]	; 0xa0
   57958:	mov	r2, #2
   5795c:	str	r2, [sp, #128]	; 0x80
   57960:	cmp	r3, #0
   57964:	bne	58044 <blkid_probe_get_size@plt+0x50b2c>
   57968:	ldrb	r3, [sp, #144]	; 0x90
   5796c:	cmp	r3, #0
   57970:	beq	57168 <blkid_probe_get_size@plt+0x4fc50>
   57974:	ldr	r2, [pc, #1968]	; 5812c <blkid_probe_get_size@plt+0x50c14>
   57978:	mov	r3, #16
   5797c:	add	r2, pc, r2
   57980:	str	fp, [sp, #12]
   57984:	stm	sp, {r2, r9}
   57988:	add	r2, sp, #144	; 0x90
   5798c:	str	r2, [sp, #8]
   57990:	mov	r1, r3
   57994:	mov	r2, #1
   57998:	mov	r0, sl
   5799c:	bl	7260 <__snprintf_chk@plt>
   579a0:	cmp	r0, #15
   579a4:	bhi	57168 <blkid_probe_get_size@plt+0x4fc50>
   579a8:	ldr	r2, [pc, #1920]	; 58130 <blkid_probe_get_size@plt+0x50c18>
   579ac:	mov	r3, sl
   579b0:	mov	r1, r8
   579b4:	mov	r0, r6
   579b8:	add	r2, pc, r2
   579bc:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   579c0:	b	57168 <blkid_probe_get_size@plt+0x4fc50>
   579c4:	ldr	r9, [pc, #1896]	; 58134 <blkid_probe_get_size@plt+0x50c1c>
   579c8:	add	r9, pc, r9
   579cc:	b	57234 <blkid_probe_get_size@plt+0x4fd1c>
   579d0:	ldrb	r1, [sp, #132]	; 0x84
   579d4:	ldrb	r0, [sp, #133]	; 0x85
   579d8:	ldrb	ip, [sp, #134]	; 0x86
   579dc:	ldrb	lr, [sp, #135]	; 0x87
   579e0:	ldrb	r3, [sp, #136]	; 0x88
   579e4:	ldrb	sl, [sp, #137]	; 0x89
   579e8:	ldr	r2, [pc, #1864]	; 58138 <blkid_probe_get_size@plt+0x50c20>
   579ec:	str	sl, [sp, #28]
   579f0:	add	r2, pc, r2
   579f4:	str	r3, [sp, #24]
   579f8:	add	sl, sp, #108	; 0x6c
   579fc:	mov	r3, #16
   57a00:	str	r0, [sp, #12]
   57a04:	str	r1, [sp, #8]
   57a08:	stm	sp, {r2, r9}
   57a0c:	str	lr, [sp, #20]
   57a10:	str	ip, [sp, #16]
   57a14:	mov	r0, sl
   57a18:	mov	r1, r3
   57a1c:	mov	r2, #1
   57a20:	bl	7260 <__snprintf_chk@plt>
   57a24:	cmp	r0, #15
   57a28:	bhi	57f68 <blkid_probe_get_size@plt+0x50a50>
   57a2c:	ldr	r2, [pc, #1800]	; 5813c <blkid_probe_get_size@plt+0x50c24>
   57a30:	mov	r3, sl
   57a34:	add	r2, pc, r2
   57a38:	mov	r1, r8
   57a3c:	mov	r0, r6
   57a40:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57a44:	ldrb	r3, [sp, #138]	; 0x8a
   57a48:	cmp	r3, #0
   57a4c:	beq	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57a50:	ldr	r3, [pc, #1768]	; 58140 <blkid_probe_get_size@plt+0x50c28>
   57a54:	ldrh	r1, [sp, #132]	; 0x84
   57a58:	add	r3, pc, r3
   57a5c:	add	r3, r3, #1520	; 0x5f0
   57a60:	add	r3, r3, #12
   57a64:	ldrh	r2, [r3]
   57a68:	cmp	r1, r2
   57a6c:	beq	57cac <blkid_probe_get_size@plt+0x50794>
   57a70:	ldrb	r2, [sp, #137]	; 0x89
   57a74:	ldrb	r3, [sp, #135]	; 0x87
   57a78:	ldrb	r0, [sp, #133]	; 0x85
   57a7c:	ldrb	r1, [sp, #132]	; 0x84
   57a80:	ldrb	lr, [sp, #136]	; 0x88
   57a84:	ldrb	ip, [sp, #134]	; 0x86
   57a88:	str	r2, [sp, #24]
   57a8c:	ldr	r2, [pc, #1712]	; 58144 <blkid_probe_get_size@plt+0x50c2c>
   57a90:	str	r3, [sp, #16]
   57a94:	add	r2, pc, r2
   57a98:	mov	r3, #32
   57a9c:	add	sl, sp, #276	; 0x114
   57aa0:	str	r0, [sp, #8]
   57aa4:	str	r1, [sp, #4]
   57aa8:	str	r2, [sp]
   57aac:	str	lr, [sp, #20]
   57ab0:	str	ip, [sp, #12]
   57ab4:	mov	r0, sl
   57ab8:	mov	r1, r3
   57abc:	mov	r2, #1
   57ac0:	bl	7260 <__snprintf_chk@plt>
   57ac4:	cmp	r0, #31
   57ac8:	bhi	57f98 <blkid_probe_get_size@plt+0x50a80>
   57acc:	mov	r3, #0
   57ad0:	str	r8, [sp]
   57ad4:	mov	r2, sl
   57ad8:	mov	r1, r3
   57adc:	mov	r0, r6
   57ae0:	bl	56f94 <blkid_probe_get_size@plt+0x4fa7c>
   57ae4:	b	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57ae8:	ldrb	r3, [sp, #176]	; 0xb0
   57aec:	cmp	r3, #0
   57af0:	bne	57de0 <blkid_probe_get_size@plt+0x508c8>
   57af4:	ldr	r2, [sp, #192]	; 0xc0
   57af8:	cmp	r2, #0
   57afc:	beq	57b30 <blkid_probe_get_size@plt+0x50618>
   57b00:	ldr	r1, [pc, #1600]	; 58148 <blkid_probe_get_size@plt+0x50c30>
   57b04:	mov	r3, #16
   57b08:	add	r1, pc, r1
   57b0c:	str	r2, [sp, #8]
   57b10:	str	r1, [sp]
   57b14:	str	r9, [sp, #4]
   57b18:	mov	r1, r3
   57b1c:	mov	r2, #1
   57b20:	mov	r0, sl
   57b24:	bl	7260 <__snprintf_chk@plt>
   57b28:	cmp	r0, #15
   57b2c:	bls	57fc4 <blkid_probe_get_size@plt+0x50aac>
   57b30:	ldrb	r3, [sp, #160]	; 0xa0
   57b34:	cmp	r3, #0
   57b38:	bne	57d94 <blkid_probe_get_size@plt+0x5087c>
   57b3c:	ldrb	r3, [sp, #144]	; 0x90
   57b40:	cmp	r3, #0
   57b44:	beq	57168 <blkid_probe_get_size@plt+0x4fc50>
   57b48:	ldr	r2, [pc, #1532]	; 5814c <blkid_probe_get_size@plt+0x50c34>
   57b4c:	mov	r3, #16
   57b50:	add	r2, pc, r2
   57b54:	mov	r1, r3
   57b58:	stm	sp, {r2, r9}
   57b5c:	add	r2, sp, #144	; 0x90
   57b60:	str	r2, [sp, #8]
   57b64:	mov	r0, sl
   57b68:	mov	r2, #1
   57b6c:	bl	7260 <__snprintf_chk@plt>
   57b70:	cmp	r0, #15
   57b74:	bhi	57168 <blkid_probe_get_size@plt+0x4fc50>
   57b78:	ldr	r2, [pc, #1488]	; 58150 <blkid_probe_get_size@plt+0x50c38>
   57b7c:	mov	r3, sl
   57b80:	mov	r1, r8
   57b84:	mov	r0, r6
   57b88:	add	r2, pc, r2
   57b8c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57b90:	b	57168 <blkid_probe_get_size@plt+0x4fc50>
   57b94:	ldr	r1, [pc, #1464]	; 58154 <blkid_probe_get_size@plt+0x50c3c>
   57b98:	add	r3, sp, #140	; 0x8c
   57b9c:	mov	r2, #0
   57ba0:	add	r1, pc, r1
   57ba4:	mov	r0, r6
   57ba8:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   57bac:	cmp	r0, #0
   57bb0:	bge	57774 <blkid_probe_get_size@plt+0x5025c>
   57bb4:	b	57168 <blkid_probe_get_size@plt+0x4fc50>
   57bb8:	ldr	r2, [pc, #1432]	; 58158 <blkid_probe_get_size@plt+0x50c40>
   57bbc:	ldr	r1, [pc, #1432]	; 5815c <blkid_probe_get_size@plt+0x50c44>
   57bc0:	add	r2, pc, r2
   57bc4:	add	r2, r2, #1536	; 0x600
   57bc8:	add	r2, r2, #12
   57bcc:	str	r2, [sp]
   57bd0:	ldr	r2, [pc, #1416]	; 58160 <blkid_probe_get_size@plt+0x50c48>
   57bd4:	ldr	r3, [pc, #1416]	; 58164 <blkid_probe_get_size@plt+0x50c4c>
   57bd8:	add	r2, pc, r2
   57bdc:	add	r1, pc, r1
   57be0:	mov	r0, #1
   57be4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   57be8:	ldr	r1, [pc, #1400]	; 58168 <blkid_probe_get_size@plt+0x50c50>
   57bec:	mov	r2, sl
   57bf0:	add	r1, pc, r1
   57bf4:	mov	r0, r6
   57bf8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   57bfc:	cmp	r0, #0
   57c00:	blt	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57c04:	add	r2, sp, #88	; 0x58
   57c08:	add	r3, sp, #92	; 0x5c
   57c0c:	ldr	r1, [pc, #1368]	; 5816c <blkid_probe_get_size@plt+0x50c54>
   57c10:	strd	r2, [sp, #8]
   57c14:	add	r3, sp, #84	; 0x54
   57c18:	str	r3, [sp, #4]
   57c1c:	add	r3, sp, #80	; 0x50
   57c20:	str	r3, [sp]
   57c24:	ldr	r0, [sp, #68]	; 0x44
   57c28:	add	r3, sp, #76	; 0x4c
   57c2c:	add	r2, sp, #72	; 0x48
   57c30:	add	r1, pc, r1
   57c34:	bl	735c <sscanf@plt>
   57c38:	cmp	r0, #6
   57c3c:	bne	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57c40:	ldr	r1, [sp, #72]	; 0x48
   57c44:	ldr	r0, [sp, #76]	; 0x4c
   57c48:	ldr	ip, [sp, #80]	; 0x50
   57c4c:	add	r2, r1, r0
   57c50:	ldr	lr, [sp, #84]	; 0x54
   57c54:	add	r2, r2, ip
   57c58:	ldr	r3, [sp, #88]	; 0x58
   57c5c:	add	r2, r2, lr
   57c60:	ldr	sl, [sp, #92]	; 0x5c
   57c64:	add	r2, r2, r3
   57c68:	cmn	r2, sl
   57c6c:	beq	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57c70:	uxtb	r1, r1
   57c74:	uxtb	r0, r0
   57c78:	uxtb	ip, ip
   57c7c:	uxtb	lr, lr
   57c80:	uxtb	r3, r3
   57c84:	uxtb	sl, sl
   57c88:	mov	r2, #1
   57c8c:	strb	r1, [sp, #132]	; 0x84
   57c90:	strb	r0, [sp, #133]	; 0x85
   57c94:	strb	ip, [sp, #134]	; 0x86
   57c98:	strb	lr, [sp, #135]	; 0x87
   57c9c:	strb	r3, [sp, #136]	; 0x88
   57ca0:	strb	sl, [sp, #137]	; 0x89
   57ca4:	strb	r2, [sp, #138]	; 0x8a
   57ca8:	b	579e8 <blkid_probe_get_size@plt+0x504d0>
   57cac:	ldrb	r3, [r3, #2]
   57cb0:	ldrb	r2, [sp, #134]	; 0x86
   57cb4:	cmp	r2, r3
   57cb8:	bne	57a70 <blkid_probe_get_size@plt+0x50558>
   57cbc:	b	572c8 <blkid_probe_get_size@plt+0x4fdb0>
   57cc0:	ldr	r1, [pc, #1192]	; 58170 <blkid_probe_get_size@plt+0x50c58>
   57cc4:	ldr	r3, [sp, #36]	; 0x24
   57cc8:	mov	r2, #0
   57ccc:	add	r1, pc, r1
   57cd0:	mov	r0, r6
   57cd4:	bl	379ac <blkid_probe_get_size@plt+0x30494>
   57cd8:	cmp	r0, #0
   57cdc:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   57ce0:	ldr	r1, [sp, #40]	; 0x28
   57ce4:	ldr	r0, [sp, #84]	; 0x54
   57ce8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   57cec:	cmp	r0, #0
   57cf0:	blt	57168 <blkid_probe_get_size@plt+0x4fc50>
   57cf4:	ldr	r1, [pc, #1144]	; 58174 <blkid_probe_get_size@plt+0x50c5c>
   57cf8:	ldr	r2, [sp, #32]
   57cfc:	add	r1, pc, r1
   57d00:	ldr	r0, [sp, #92]	; 0x5c
   57d04:	bl	735c <sscanf@plt>
   57d08:	cmp	r0, #1
   57d0c:	mov	r7, r0
   57d10:	bne	57168 <blkid_probe_get_size@plt+0x4fc50>
   57d14:	ldr	r1, [sp, #88]	; 0x58
   57d18:	cmp	r1, #0
   57d1c:	bne	5824c <blkid_probe_get_size@plt+0x50d34>
   57d20:	ldrb	r3, [sp, #160]	; 0xa0
   57d24:	mov	r2, #3
   57d28:	str	r2, [sp, #128]	; 0x80
   57d2c:	cmp	r3, #0
   57d30:	bne	581f8 <blkid_probe_get_size@plt+0x50ce0>
   57d34:	ldrb	r3, [sp, #144]	; 0x90
   57d38:	cmp	r3, #0
   57d3c:	beq	57168 <blkid_probe_get_size@plt+0x4fc50>
   57d40:	ldr	r2, [pc, #1072]	; 58178 <blkid_probe_get_size@plt+0x50c60>
   57d44:	mov	r3, #16
   57d48:	add	r2, pc, r2
   57d4c:	mov	r1, r3
   57d50:	stm	sp, {r2, r9}
   57d54:	add	r2, sp, #212	; 0xd4
   57d58:	str	r2, [sp, #12]
   57d5c:	add	r2, sp, #144	; 0x90
   57d60:	str	r2, [sp, #8]
   57d64:	mov	r0, sl
   57d68:	mov	r2, #1
   57d6c:	bl	7260 <__snprintf_chk@plt>
   57d70:	cmp	r0, #0
   57d74:	beq	57168 <blkid_probe_get_size@plt+0x4fc50>
   57d78:	ldr	r2, [pc, #1020]	; 5817c <blkid_probe_get_size@plt+0x50c64>
   57d7c:	mov	r3, sl
   57d80:	mov	r1, r8
   57d84:	mov	r0, r6
   57d88:	add	r2, pc, r2
   57d8c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57d90:	b	57168 <blkid_probe_get_size@plt+0x4fc50>
   57d94:	ldr	r2, [pc, #996]	; 58180 <blkid_probe_get_size@plt+0x50c68>
   57d98:	mov	r3, #16
   57d9c:	add	r2, pc, r2
   57da0:	mov	r1, r3
   57da4:	stm	sp, {r2, r9}
   57da8:	add	r2, sp, #160	; 0xa0
   57dac:	str	r2, [sp, #8]
   57db0:	mov	r0, sl
   57db4:	mov	r2, #1
   57db8:	bl	7260 <__snprintf_chk@plt>
   57dbc:	cmp	r0, #15
   57dc0:	bhi	57b3c <blkid_probe_get_size@plt+0x50624>
   57dc4:	ldr	r2, [pc, #952]	; 58184 <blkid_probe_get_size@plt+0x50c6c>
   57dc8:	mov	r3, sl
   57dcc:	add	r2, pc, r2
   57dd0:	mov	r1, r8
   57dd4:	mov	r0, r6
   57dd8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57ddc:	b	57b3c <blkid_probe_get_size@plt+0x50624>
   57de0:	ldr	r1, [pc, #928]	; 58188 <blkid_probe_get_size@plt+0x50c70>
   57de4:	mov	r3, #16
   57de8:	add	r1, pc, r1
   57dec:	mov	r0, sl
   57df0:	stm	sp, {r1, r9}
   57df4:	add	r1, sp, #176	; 0xb0
   57df8:	str	r1, [sp, #8]
   57dfc:	mov	r1, r3
   57e00:	bl	7260 <__snprintf_chk@plt>
   57e04:	cmp	r0, #15
   57e08:	bhi	57af4 <blkid_probe_get_size@plt+0x505dc>
   57e0c:	ldr	r2, [pc, #888]	; 5818c <blkid_probe_get_size@plt+0x50c74>
   57e10:	mov	r3, sl
   57e14:	add	r2, pc, r2
   57e18:	mov	r1, r8
   57e1c:	mov	r0, r6
   57e20:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57e24:	b	57af4 <blkid_probe_get_size@plt+0x505dc>
   57e28:	ldr	r3, [pc, #864]	; 58190 <blkid_probe_get_size@plt+0x50c78>
   57e2c:	ldr	r1, [pc, #864]	; 58194 <blkid_probe_get_size@plt+0x50c7c>
   57e30:	add	r3, pc, r3
   57e34:	str	r3, [sp, #40]	; 0x28
   57e38:	add	r1, pc, r1
   57e3c:	b	575c0 <blkid_probe_get_size@plt+0x500a8>
   57e40:	ldr	r3, [sp, #108]	; 0x6c
   57e44:	mov	r1, sl
   57e48:	mov	r0, r6
   57e4c:	str	r3, [sp, #288]	; 0x120
   57e50:	bl	4fc9c <blkid_probe_get_size@plt+0x48784>
   57e54:	mov	r1, sl
   57e58:	mov	r0, r6
   57e5c:	bl	50014 <blkid_probe_get_size@plt+0x48afc>
   57e60:	ldrb	r3, [sp, #324]	; 0x144
   57e64:	cmp	r3, #0
   57e68:	beq	57eb4 <blkid_probe_get_size@plt+0x5099c>
   57e6c:	add	r2, sp, #324	; 0x144
   57e70:	mov	r0, r2
   57e74:	str	r2, [sp, #48]	; 0x30
   57e78:	bl	723c <strlen@plt>
   57e7c:	add	r7, sp, #112	; 0x70
   57e80:	mov	fp, r0
   57e84:	mov	r0, r7
   57e88:	bl	723c <strlen@plt>
   57e8c:	ldr	r2, [sp, #48]	; 0x30
   57e90:	add	r0, fp, r0
   57e94:	cmp	r0, #15
   57e98:	bhi	57eb4 <blkid_probe_get_size@plt+0x5099c>
   57e9c:	ldr	r3, [sp, #44]	; 0x2c
   57ea0:	mov	r1, #16
   57ea4:	str	r3, [sp]
   57ea8:	add	r0, sp, #176	; 0xb0
   57eac:	mov	r3, r7
   57eb0:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   57eb4:	ldrb	r3, [sp, #292]	; 0x124
   57eb8:	cmp	r3, #0
   57ebc:	beq	57f08 <blkid_probe_get_size@plt+0x509f0>
   57ec0:	add	r2, sp, #292	; 0x124
   57ec4:	mov	r0, r2
   57ec8:	str	r2, [sp, #44]	; 0x2c
   57ecc:	bl	723c <strlen@plt>
   57ed0:	add	r7, sp, #112	; 0x70
   57ed4:	mov	fp, r0
   57ed8:	mov	r0, r7
   57edc:	bl	723c <strlen@plt>
   57ee0:	ldr	r2, [sp, #44]	; 0x2c
   57ee4:	add	r0, fp, r0
   57ee8:	cmp	r0, #15
   57eec:	bhi	57f08 <blkid_probe_get_size@plt+0x509f0>
   57ef0:	mov	r1, #0
   57ef4:	str	r1, [sp]
   57ef8:	mov	r3, r7
   57efc:	mov	r1, #16
   57f00:	add	r0, sp, #144	; 0x90
   57f04:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   57f08:	ldrb	r3, [sp, #308]	; 0x134
   57f0c:	cmp	r3, #0
   57f10:	beq	57f5c <blkid_probe_get_size@plt+0x50a44>
   57f14:	add	r2, sp, #308	; 0x134
   57f18:	mov	r0, r2
   57f1c:	str	r2, [sp, #44]	; 0x2c
   57f20:	bl	723c <strlen@plt>
   57f24:	add	r7, sp, #112	; 0x70
   57f28:	mov	fp, r0
   57f2c:	mov	r0, r7
   57f30:	bl	723c <strlen@plt>
   57f34:	ldr	r2, [sp, #44]	; 0x2c
   57f38:	add	r0, fp, r0
   57f3c:	cmp	r0, #15
   57f40:	bhi	57f5c <blkid_probe_get_size@plt+0x50a44>
   57f44:	mov	r1, #0
   57f48:	str	r1, [sp]
   57f4c:	mov	r3, r7
   57f50:	mov	r1, #16
   57f54:	add	r0, sp, #160	; 0xa0
   57f58:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   57f5c:	ldr	r0, [sp, #108]	; 0x6c
   57f60:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   57f64:	b	577bc <blkid_probe_get_size@plt+0x502a4>
   57f68:	ldr	r2, [pc, #552]	; 58198 <blkid_probe_get_size@plt+0x50c80>
   57f6c:	ldr	r1, [pc, #552]	; 5819c <blkid_probe_get_size@plt+0x50c84>
   57f70:	add	r2, pc, r2
   57f74:	add	r2, r2, #1504	; 0x5e0
   57f78:	add	r2, r2, #12
   57f7c:	str	r2, [sp]
   57f80:	ldr	r2, [pc, #536]	; 581a0 <blkid_probe_get_size@plt+0x50c88>
   57f84:	ldr	r3, [pc, #536]	; 581a4 <blkid_probe_get_size@plt+0x50c8c>
   57f88:	add	r2, pc, r2
   57f8c:	add	r1, pc, r1
   57f90:	mov	r0, #1
   57f94:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   57f98:	ldr	r2, [pc, #520]	; 581a8 <blkid_probe_get_size@plt+0x50c90>
   57f9c:	ldr	r1, [pc, #520]	; 581ac <blkid_probe_get_size@plt+0x50c94>
   57fa0:	add	r2, pc, r2
   57fa4:	add	r2, r2, #1536	; 0x600
   57fa8:	str	r2, [sp]
   57fac:	ldr	r2, [pc, #508]	; 581b0 <blkid_probe_get_size@plt+0x50c98>
   57fb0:	mov	r3, #808	; 0x328
   57fb4:	add	r2, pc, r2
   57fb8:	add	r1, pc, r1
   57fbc:	mov	r0, #1
   57fc0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   57fc4:	ldr	r2, [pc, #488]	; 581b4 <blkid_probe_get_size@plt+0x50c9c>
   57fc8:	mov	r3, sl
   57fcc:	add	r2, pc, r2
   57fd0:	mov	r1, r8
   57fd4:	mov	r0, r6
   57fd8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   57fdc:	b	57b30 <blkid_probe_get_size@plt+0x50618>
   57fe0:	bl	6fb4 <__stack_chk_fail@plt>
   57fe4:	ldr	r2, [pc, #460]	; 581b8 <blkid_probe_get_size@plt+0x50ca0>
   57fe8:	ldr	r1, [pc, #460]	; 581bc <blkid_probe_get_size@plt+0x50ca4>
   57fec:	add	r2, pc, r2
   57ff0:	add	r2, r2, #1552	; 0x610
   57ff4:	add	r2, r2, #8
   57ff8:	str	r2, [sp]
   57ffc:	ldr	r2, [pc, #444]	; 581c0 <blkid_probe_get_size@plt+0x50ca8>
   58000:	ldr	r3, [pc, #444]	; 581c4 <blkid_probe_get_size@plt+0x50cac>
   58004:	add	r2, pc, r2
   58008:	add	r1, pc, r1
   5800c:	mov	r0, #1
   58010:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58014:	ldr	r2, [pc, #428]	; 581c8 <blkid_probe_get_size@plt+0x50cb0>
   58018:	ldr	r1, [pc, #428]	; 581cc <blkid_probe_get_size@plt+0x50cb4>
   5801c:	add	r2, pc, r2
   58020:	add	r2, r2, #1568	; 0x620
   58024:	add	r2, r2, #4
   58028:	str	r2, [sp]
   5802c:	ldr	r2, [pc, #412]	; 581d0 <blkid_probe_get_size@plt+0x50cb8>
   58030:	ldr	r3, [pc, #412]	; 581d4 <blkid_probe_get_size@plt+0x50cbc>
   58034:	add	r2, pc, r2
   58038:	add	r1, pc, r1
   5803c:	mov	r0, #1
   58040:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58044:	ldr	r2, [pc, #396]	; 581d8 <blkid_probe_get_size@plt+0x50cc0>
   58048:	mov	r3, #16
   5804c:	add	r2, pc, r2
   58050:	str	fp, [sp, #12]
   58054:	stm	sp, {r2, r9}
   58058:	add	r2, sp, #160	; 0xa0
   5805c:	str	r2, [sp, #8]
   58060:	mov	r1, r3
   58064:	mov	r2, #1
   58068:	mov	r0, sl
   5806c:	bl	7260 <__snprintf_chk@plt>
   58070:	cmp	r0, #15
   58074:	bhi	57968 <blkid_probe_get_size@plt+0x50450>
   58078:	ldr	r2, [pc, #348]	; 581dc <blkid_probe_get_size@plt+0x50cc4>
   5807c:	mov	r3, sl
   58080:	add	r2, pc, r2
   58084:	mov	r1, r8
   58088:	mov	r0, r6
   5808c:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   58090:	b	57968 <blkid_probe_get_size@plt+0x50450>
   58094:	andeq	r0, r4, r0, lsl #21
   58098:	andeq	r0, r0, ip, lsr r4
   5809c:	andeq	r0, r1, r4, asr #4
   580a0:	strheq	sp, [r1], -ip
   580a4:	andeq	sp, r1, ip, asr r1
   580a8:	andeq	sp, r1, r8, asr #2
   580ac:	strdeq	lr, [r1], -r8
   580b0:	andeq	lr, r1, r8, lsl sp
   580b4:	andeq	sp, r1, r0, lsr r0
   580b8:	ldrdeq	sp, [r1], -r0
   580bc:	andeq	r0, r1, r4, lsl r1
   580c0:	andeq	r4, r1, ip, lsl #29
   580c4:	andeq	r0, r4, r0, lsl #29
   580c8:	andeq	sp, r1, r0, lsr #32
   580cc:	andeq	sp, r1, r4, lsl r0
   580d0:	andeq	lr, r0, r8, ror #30
   580d4:	andeq	r8, r1, ip, asr #14
   580d8:	andeq	sp, r1, r8, ror #30
   580dc:	andeq	ip, r1, r8, lsr lr
   580e0:	andeq	ip, r1, r0, asr #30
   580e4:	andeq	ip, r1, r8, lsl #30
   580e8:	andeq	ip, r1, r4, lsl pc
   580ec:	andeq	lr, r0, ip, asr #28
   580f0:	andeq	r8, r1, r0, lsl r6
   580f4:	andeq	ip, r1, r8, asr #8
   580f8:	andeq	ip, r1, ip, asr #25
   580fc:	andeq	ip, r1, ip, lsr #25
   58100:			; <UNDEFINED> instruction: 0x0001cdb8
   58104:			; <UNDEFINED> instruction: 0x0000ecb4
   58108:	muleq	r1, r0, r4
   5810c:			; <UNDEFINED> instruction: 0x0001bbb0
   58110:	andeq	r3, r1, r0, lsr #13
   58114:	andeq	r3, r1, ip, lsr #13
   58118:	andeq	r6, r1, r8, lsr #7
   5811c:	andeq	lr, r1, r8, lsl #21
   58120:	andeq	fp, r1, r8, lsr pc
   58124:	andeq	r6, r1, r4, lsl r8
   58128:	andeq	sl, r1, r0, lsl #22
   5812c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   58130:	andeq	r8, r1, r4, lsl #3
   58134:	muleq	r1, r4, r8
   58138:	andeq	ip, r1, ip, asr #18
   5813c:	andeq	r8, r1, r0, lsr r1
   58140:	andeq	sl, r1, ip, ror #29
   58144:	andeq	ip, r1, r8, ror #17
   58148:	andeq	lr, r0, r0, lsr r8
   5814c:	andeq	lr, r0, r8, ror #15
   58150:			; <UNDEFINED> instruction: 0x00017fb4
   58154:	andeq	fp, r1, r4, ror #14
   58158:	andeq	sl, r1, r4, lsl #27
   5815c:	andeq	sp, r0, r8, lsr #23
   58160:	ldrdeq	fp, [r1], -r0
   58164:			; <UNDEFINED> instruction: 0x000002b5
   58168:	ldrdeq	fp, [r1], -r8
   5816c:	strdeq	ip, [r1], -r8
   58170:			; <UNDEFINED> instruction: 0x0001bcb4
   58174:	andeq	fp, r1, ip, lsl #25
   58178:	andeq	ip, r1, r0, lsl r7
   5817c:			; <UNDEFINED> instruction: 0x00017db4
   58180:	muleq	r0, ip, r5
   58184:	andeq	r7, r1, r4, lsl #27
   58188:	andeq	lr, r0, r0, asr r5
   5818c:	andeq	r7, r1, r4, lsl sp
   58190:	andeq	ip, r1, ip, ror r4
   58194:	muleq	r1, ip, r4
   58198:	ldrdeq	sl, [r1], -r4
   5819c:	andeq	ip, r1, ip, asr #7
   581a0:	andeq	fp, r1, r0, lsr #6
   581a4:	andeq	r0, r0, r3, ror #6
   581a8:	andeq	sl, r1, r4, lsr #19
   581ac:	andeq	ip, r1, r0, lsr #7
   581b0:	strdeq	fp, [r1], -r4
   581b4:	andeq	ip, r1, r4, ror r4
   581b8:	andeq	sl, r1, r8, asr r9
   581bc:	andeq	ip, r1, r8, asr #7
   581c0:	andeq	fp, r1, r4, lsr #5
   581c4:	ldrdeq	r0, [r0], -sp
   581c8:	andeq	sl, r1, r8, lsr #18
   581cc:	ldrdeq	ip, [r1], -r4
   581d0:	andeq	fp, r1, r4, ror r2
   581d4:	andeq	r0, r0, sl, lsl r2
   581d8:	andeq	ip, r1, ip, lsl #8
   581dc:	ldrdeq	r7, [r1], -r0
   581e0:	andeq	ip, r1, r8, asr r2
   581e4:	andeq	r7, r1, r8, lsl r9
   581e8:	andeq	ip, r1, ip, lsl #4
   581ec:	andeq	sl, r1, r4, asr #13
   581f0:	andeq	fp, r1, ip
   581f4:	andeq	ip, r1, r4, asr #3
   581f8:	ldr	r2, [pc, #-32]	; 581e0 <blkid_probe_get_size@plt+0x50cc8>
   581fc:	mov	r3, #16
   58200:	add	r2, pc, r2
   58204:	mov	r1, r3
   58208:	stm	sp, {r2, r9}
   5820c:	add	r2, sp, #212	; 0xd4
   58210:	str	r2, [sp, #12]
   58214:	add	r2, sp, #160	; 0xa0
   58218:	str	r2, [sp, #8]
   5821c:	mov	r0, sl
   58220:	mov	r2, #1
   58224:	bl	7260 <__snprintf_chk@plt>
   58228:	cmp	r0, #15
   5822c:	bhi	57d34 <blkid_probe_get_size@plt+0x5081c>
   58230:	ldr	r2, [pc, #-84]	; 581e4 <blkid_probe_get_size@plt+0x50ccc>
   58234:	mov	r3, sl
   58238:	add	r2, pc, r2
   5823c:	mov	r1, r8
   58240:	mov	r0, r6
   58244:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   58248:	b	57d34 <blkid_probe_get_size@plt+0x5081c>
   5824c:	ldr	r2, [pc, #-108]	; 581e8 <blkid_probe_get_size@plt+0x50cd0>
   58250:	mov	r3, #16
   58254:	add	r2, pc, r2
   58258:	str	r1, [sp, #4]
   5825c:	str	r2, [sp]
   58260:	mov	r1, r3
   58264:	mov	r2, r0
   58268:	add	r0, sp, #212	; 0xd4
   5826c:	bl	7260 <__snprintf_chk@plt>
   58270:	cmp	r0, #15
   58274:	bls	57d20 <blkid_probe_get_size@plt+0x50808>
   58278:	ldr	r3, [pc, #-148]	; 581ec <blkid_probe_get_size@plt+0x50cd4>
   5827c:	ldr	r2, [pc, #-148]	; 581f0 <blkid_probe_get_size@plt+0x50cd8>
   58280:	add	r3, pc, r3
   58284:	add	r3, r3, #1584	; 0x630
   58288:	ldr	r1, [pc, #-156]	; 581f4 <blkid_probe_get_size@plt+0x50cdc>
   5828c:	add	r3, r3, #4
   58290:	str	r3, [sp]
   58294:	mov	r0, r7
   58298:	mov	r3, #680	; 0x2a8
   5829c:	add	r2, pc, r2
   582a0:	add	r1, pc, r1
   582a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   582a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   582ac:	sub	sp, sp, #116	; 0x74
   582b0:	ldr	r7, [pc, #1828]	; 589dc <blkid_probe_get_size@plt+0x514c4>
   582b4:	ldr	lr, [pc, #1828]	; 589e0 <blkid_probe_get_size@plt+0x514c8>
   582b8:	add	r7, pc, r7
   582bc:	ldr	ip, [pc, #1824]	; 589e4 <blkid_probe_get_size@plt+0x514cc>
   582c0:	str	r0, [sp, #40]	; 0x28
   582c4:	add	ip, pc, ip
   582c8:	ldr	lr, [r7, lr]
   582cc:	ldr	r0, [ip, #4]
   582d0:	mov	r9, r1
   582d4:	ldr	r1, [lr]
   582d8:	mov	r5, #0
   582dc:	cmp	r0, #0
   582e0:	str	lr, [sp, #52]	; 0x34
   582e4:	str	r3, [sp, #48]	; 0x30
   582e8:	str	r1, [sp, #108]	; 0x6c
   582ec:	str	r5, [sp, #64]	; 0x40
   582f0:	beq	589ac <blkid_probe_get_size@plt+0x51494>
   582f4:	ldr	r4, [pc, #1772]	; 589e8 <blkid_probe_get_size@plt+0x514d0>
   582f8:	ldr	sl, [pc, #1772]	; 589ec <blkid_probe_get_size@plt+0x514d4>
   582fc:	add	r4, pc, r4
   58300:	mov	r6, r2
   58304:	add	sl, pc, sl
   58308:	mov	fp, r5
   5830c:	mov	r8, r5
   58310:	add	r4, r4, #20
   58314:	str	r5, [sp, #44]	; 0x2c
   58318:	str	r5, [sp, #36]	; 0x24
   5831c:	str	r8, [sp]
   58320:	mov	r3, r4
   58324:	mov	r2, sl
   58328:	mov	r1, r6
   5832c:	mov	r0, r9
   58330:	bl	70a4 <getopt_long@plt>
   58334:	cmn	r0, #1
   58338:	beq	583d4 <blkid_probe_get_size@plt+0x50ebc>
   5833c:	sub	r0, r0, #100	; 0x64
   58340:	cmp	r0, #15
   58344:	addls	pc, pc, r0, lsl #2
   58348:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   5834c:	b	583c0 <blkid_probe_get_size@plt+0x50ea8>
   58350:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58354:	b	583ac <blkid_probe_get_size@plt+0x50e94>
   58358:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   5835c:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58360:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58364:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58368:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   5836c:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58370:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58374:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58378:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   5837c:	b	5839c <blkid_probe_get_size@plt+0x50e84>
   58380:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58384:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   58388:	b	5838c <blkid_probe_get_size@plt+0x50e74>
   5838c:	ldr	r3, [pc, #1628]	; 589f0 <blkid_probe_get_size@plt+0x514d8>
   58390:	ldr	r3, [r7, r3]
   58394:	ldr	fp, [r3]
   58398:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   5839c:	ldr	r3, [pc, #1612]	; 589f0 <blkid_probe_get_size@plt+0x514d8>
   583a0:	ldr	r3, [r7, r3]
   583a4:	ldr	r5, [r3]
   583a8:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   583ac:	ldr	r3, [pc, #1596]	; 589f0 <blkid_probe_get_size@plt+0x514d8>
   583b0:	ldr	r3, [r7, r3]
   583b4:	ldr	r3, [r3]
   583b8:	str	r3, [sp, #36]	; 0x24
   583bc:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   583c0:	ldr	r3, [pc, #1576]	; 589f0 <blkid_probe_get_size@plt+0x514d8>
   583c4:	ldr	r3, [r7, r3]
   583c8:	ldr	r3, [r3]
   583cc:	str	r3, [sp, #44]	; 0x2c
   583d0:	b	5831c <blkid_probe_get_size@plt+0x50e04>
   583d4:	ldr	r3, [pc, #1560]	; 589f4 <blkid_probe_get_size@plt+0x514dc>
   583d8:	ldr	r3, [r7, r3]
   583dc:	ldr	r3, [r3]
   583e0:	ldr	r4, [r6, r3, lsl #2]
   583e4:	cmp	r4, #0
   583e8:	beq	584b4 <blkid_probe_get_size@plt+0x50f9c>
   583ec:	ldr	r3, [sp, #48]	; 0x30
   583f0:	mov	r2, r4
   583f4:	str	r3, [sp]
   583f8:	mov	r1, r5
   583fc:	ldr	r3, [sp, #36]	; 0x24
   58400:	ldr	r0, [sp, #40]	; 0x28
   58404:	bl	56f94 <blkid_probe_get_size@plt+0x4fa7c>
   58408:	subs	r4, r0, #0
   5840c:	blt	58730 <blkid_probe_get_size@plt+0x51218>
   58410:	bne	58484 <blkid_probe_get_size@plt+0x50f6c>
   58414:	ldr	r3, [sp, #40]	; 0x28
   58418:	str	r4, [sp, #88]	; 0x58
   5841c:	cmp	r3, #0
   58420:	beq	588ac <blkid_probe_get_size@plt+0x51394>
   58424:	ldr	r3, [pc, #1484]	; 589f8 <blkid_probe_get_size@plt+0x514e0>
   58428:	add	r3, pc, r3
   5842c:	ldr	r3, [r3, #4]
   58430:	cmp	r3, #6
   58434:	bgt	58944 <blkid_probe_get_size@plt+0x5142c>
   58438:	mov	r0, r4
   5843c:	ldr	r2, [pc, #1464]	; 589fc <blkid_probe_get_size@plt+0x514e4>
   58440:	ldr	r3, [pc, #1464]	; 58a00 <blkid_probe_get_size@plt+0x514e8>
   58444:	add	r2, pc, r2
   58448:	str	r2, [sp, #20]
   5844c:	add	r3, pc, r3
   58450:	ldr	r2, [pc, #1452]	; 58a04 <blkid_probe_get_size@plt+0x514ec>
   58454:	mov	r1, #0
   58458:	add	r3, r3, #1600	; 0x640
   5845c:	stmib	sp, {r0, r4}
   58460:	str	r3, [sp]
   58464:	str	r1, [sp, #16]
   58468:	str	r1, [sp, #12]
   5846c:	mov	r3, #168	; 0xa8
   58470:	add	r2, pc, r2
   58474:	mov	r1, #1073741885	; 0x4000003d
   58478:	mov	r0, #7
   5847c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58480:	mov	r4, r0
   58484:	ldr	r0, [sp, #64]	; 0x40
   58488:	cmp	r0, #0
   5848c:	beq	58494 <blkid_probe_get_size@plt+0x50f7c>
   58490:	bl	2527c <blkid_probe_get_size@plt+0x1dd64>
   58494:	ldr	r3, [sp, #52]	; 0x34
   58498:	ldr	r2, [sp, #108]	; 0x6c
   5849c:	mov	r0, r4
   584a0:	ldr	r3, [r3]
   584a4:	cmp	r2, r3
   584a8:	bne	589d8 <blkid_probe_get_size@plt+0x514c0>
   584ac:	add	sp, sp, #116	; 0x74
   584b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   584b4:	ldr	r3, [sp, #44]	; 0x2c
   584b8:	cmp	r3, #0
   584bc:	beq	584d4 <blkid_probe_get_size@plt+0x50fbc>
   584c0:	mov	r1, r3
   584c4:	add	r0, sp, #64	; 0x40
   584c8:	bl	38c30 <blkid_probe_get_size@plt+0x31718>
   584cc:	subs	r6, r0, #0
   584d0:	blt	5881c <blkid_probe_get_size@plt+0x51304>
   584d4:	ldr	r3, [sp, #40]	; 0x28
   584d8:	ldr	r0, [sp, #64]	; 0x40
   584dc:	cmp	r3, #0
   584e0:	beq	588e4 <blkid_probe_get_size@plt+0x513cc>
   584e4:	cmp	r0, #0
   584e8:	beq	5889c <blkid_probe_get_size@plt+0x51384>
   584ec:	str	r0, [sp, #68]	; 0x44
   584f0:	ldr	r8, [pc, #1296]	; 58a08 <blkid_probe_get_size@plt+0x514f0>
   584f4:	ldr	r9, [pc, #1296]	; 58a0c <blkid_probe_get_size@plt+0x514f4>
   584f8:	ldr	sl, [pc, #1296]	; 58a10 <blkid_probe_get_size@plt+0x514f8>
   584fc:	mov	r4, #0
   58500:	add	r8, pc, r8
   58504:	add	r9, pc, r9
   58508:	add	sl, pc, sl
   5850c:	mov	r6, r4
   58510:	add	r7, sp, #72	; 0x48
   58514:	b	58570 <blkid_probe_get_size@plt+0x51058>
   58518:	ldr	r2, [sp, #80]	; 0x50
   5851c:	cmp	r2, #0
   58520:	beq	58550 <blkid_probe_get_size@plt+0x51038>
   58524:	ldr	r3, [sp, #48]	; 0x30
   58528:	mov	r1, r5
   5852c:	str	r3, [sp]
   58530:	ldr	r0, [sp, #40]	; 0x28
   58534:	ldr	r3, [sp, #36]	; 0x24
   58538:	bl	56f94 <blkid_probe_get_size@plt+0x4fa7c>
   5853c:	cmp	r0, #0
   58540:	orrgt	r6, r6, #1
   58544:	cmp	r6, #0
   58548:	mov	r4, r0
   5854c:	bne	586b8 <blkid_probe_get_size@plt+0x511a0>
   58550:	add	r1, sp, #68	; 0x44
   58554:	ldr	r0, [sp, #68]	; 0x44
   58558:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   5855c:	cmp	r0, #0
   58560:	blt	586b8 <blkid_probe_get_size@plt+0x511a0>
   58564:	ldr	r0, [sp, #68]	; 0x44
   58568:	cmp	r0, #0
   5856c:	beq	586b8 <blkid_probe_get_size@plt+0x511a0>
   58570:	mov	r3, #0
   58574:	mov	r1, r7
   58578:	str	r3, [sp, #80]	; 0x50
   5857c:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   58580:	cmp	r0, #0
   58584:	blt	58550 <blkid_probe_get_size@plt+0x51038>
   58588:	cmp	fp, #0
   5858c:	beq	585a4 <blkid_probe_get_size@plt+0x5108c>
   58590:	mov	r1, fp
   58594:	ldr	r0, [sp, #72]	; 0x48
   58598:	bl	7314 <strcmp@plt>
   5859c:	cmp	r0, #0
   585a0:	bne	58550 <blkid_probe_get_size@plt+0x51038>
   585a4:	add	r2, sp, #80	; 0x50
   585a8:	mov	r1, r8
   585ac:	ldr	r0, [sp, #68]	; 0x44
   585b0:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   585b4:	mov	r1, r9
   585b8:	ldr	r0, [sp, #72]	; 0x48
   585bc:	bl	7314 <strcmp@plt>
   585c0:	cmp	r0, #0
   585c4:	bne	58518 <blkid_probe_get_size@plt+0x51000>
   585c8:	add	r1, sp, #76	; 0x4c
   585cc:	ldr	r0, [sp, #68]	; 0x44
   585d0:	bl	364d8 <blkid_probe_get_size@plt+0x2efc0>
   585d4:	cmp	r0, #0
   585d8:	blt	58518 <blkid_probe_get_size@plt+0x51000>
   585dc:	mov	r1, sl
   585e0:	ldr	r0, [sp, #76]	; 0x4c
   585e4:	bl	7314 <strcmp@plt>
   585e8:	ldr	r2, [sp, #80]	; 0x50
   585ec:	cmp	r0, #0
   585f0:	bne	5851c <blkid_probe_get_size@plt+0x51004>
   585f4:	cmp	r2, #0
   585f8:	bne	588b8 <blkid_probe_get_size@plt+0x513a0>
   585fc:	ldr	r6, [sp, #68]	; 0x44
   58600:	ldr	r1, [pc, #1036]	; 58a14 <blkid_probe_get_size@plt+0x514fc>
   58604:	add	r2, sp, #84	; 0x54
   58608:	mov	r0, r6
   5860c:	add	r1, pc, r1
   58610:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   58614:	cmp	r0, #0
   58618:	blt	58910 <blkid_probe_get_size@plt+0x513f8>
   5861c:	ldr	r1, [pc, #1012]	; 58a18 <blkid_probe_get_size@plt+0x51500>
   58620:	mov	r0, r6
   58624:	add	r2, sp, #88	; 0x58
   58628:	add	r1, pc, r1
   5862c:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   58630:	cmp	r0, #0
   58634:	blt	58910 <blkid_probe_get_size@plt+0x513f8>
   58638:	add	r1, sp, #60	; 0x3c
   5863c:	ldr	r0, [sp, #84]	; 0x54
   58640:	bl	60fd4 <blkid_probe_get_size@plt+0x59abc>
   58644:	cmp	r0, #0
   58648:	blt	58910 <blkid_probe_get_size@plt+0x513f8>
   5864c:	add	r1, sp, #62	; 0x3e
   58650:	ldr	r0, [sp, #88]	; 0x58
   58654:	bl	60fd4 <blkid_probe_get_size@plt+0x59abc>
   58658:	cmp	r0, #0
   5865c:	blt	58910 <blkid_probe_get_size@plt+0x513f8>
   58660:	ldrh	r0, [sp, #62]	; 0x3e
   58664:	ldrh	r1, [sp, #60]	; 0x3c
   58668:	ldr	r2, [pc, #940]	; 58a1c <blkid_probe_get_size@plt+0x51504>
   5866c:	add	r4, sp, #92	; 0x5c
   58670:	mov	r3, #16
   58674:	add	r2, pc, r2
   58678:	str	r0, [sp, #8]
   5867c:	str	r1, [sp, #4]
   58680:	str	r2, [sp]
   58684:	mov	r1, r3
   58688:	mov	r0, r4
   5868c:	mov	r2, #1
   58690:	bl	7260 <__snprintf_chk@plt>
   58694:	ldr	r3, [sp, #48]	; 0x30
   58698:	mov	r2, r4
   5869c:	str	r3, [sp]
   586a0:	mov	r1, r5
   586a4:	ldr	r3, [sp, #36]	; 0x24
   586a8:	ldr	r0, [sp, #40]	; 0x28
   586ac:	str	r4, [sp, #80]	; 0x50
   586b0:	bl	56f94 <blkid_probe_get_size@plt+0x4fa7c>
   586b4:	mov	r4, r0
   586b8:	cmp	r4, #0
   586bc:	blt	587ac <blkid_probe_get_size@plt+0x51294>
   586c0:	bne	58484 <blkid_probe_get_size@plt+0x50f6c>
   586c4:	ldr	r3, [pc, #852]	; 58a20 <blkid_probe_get_size@plt+0x51508>
   586c8:	str	r4, [sp, #88]	; 0x58
   586cc:	add	r3, pc, r3
   586d0:	ldr	r3, [r3, #4]
   586d4:	cmp	r3, #6
   586d8:	movle	r0, r4
   586dc:	movle	r4, r0
   586e0:	bgt	5898c <blkid_probe_get_size@plt+0x51474>
   586e4:	ldr	r3, [pc, #824]	; 58a24 <blkid_probe_get_size@plt+0x5150c>
   586e8:	ldr	r2, [pc, #824]	; 58a28 <blkid_probe_get_size@plt+0x51510>
   586ec:	add	r3, pc, r3
   586f0:	add	r2, pc, r2
   586f4:	add	r3, r3, #1600	; 0x640
   586f8:	str	r2, [sp, #20]
   586fc:	ldr	r2, [pc, #808]	; 58a2c <blkid_probe_get_size@plt+0x51514>
   58700:	mov	r1, #0
   58704:	stm	sp, {r3, r4}
   58708:	str	r0, [sp, #8]
   5870c:	str	r1, [sp, #16]
   58710:	str	r1, [sp, #12]
   58714:	mov	r3, #183	; 0xb7
   58718:	add	r2, pc, r2
   5871c:	mov	r1, #1073741885	; 0x4000003d
   58720:	mov	r0, #7
   58724:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58728:	mov	r4, r0
   5872c:	b	58484 <blkid_probe_get_size@plt+0x50f6c>
   58730:	ldr	r3, [sp, #40]	; 0x28
   58734:	str	r8, [sp, #88]	; 0x58
   58738:	cmp	r3, #0
   5873c:	beq	58754 <blkid_probe_get_size@plt+0x5123c>
   58740:	ldr	r3, [pc, #744]	; 58a30 <blkid_probe_get_size@plt+0x51518>
   58744:	add	r3, pc, r3
   58748:	ldr	r3, [r3, #4]
   5874c:	cmp	r3, #6
   58750:	bgt	58920 <blkid_probe_get_size@plt+0x51408>
   58754:	mov	r1, #0
   58758:	mov	ip, r1
   5875c:	ldr	r2, [pc, #720]	; 58a34 <blkid_probe_get_size@plt+0x5151c>
   58760:	ldr	r3, [pc, #720]	; 58a38 <blkid_probe_get_size@plt+0x51520>
   58764:	add	r2, pc, r2
   58768:	str	r2, [sp, #20]
   5876c:	add	r3, pc, r3
   58770:	ldr	r2, [pc, #708]	; 58a3c <blkid_probe_get_size@plt+0x51524>
   58774:	mov	r0, #0
   58778:	add	r3, r3, #1600	; 0x640
   5877c:	str	r1, [sp, #8]
   58780:	str	r3, [sp]
   58784:	mov	r1, r4
   58788:	str	r0, [sp, #16]
   5878c:	str	r0, [sp, #12]
   58790:	str	ip, [sp, #4]
   58794:	mov	r3, #166	; 0xa6
   58798:	add	r2, pc, r2
   5879c:	mov	r0, #7
   587a0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   587a4:	mov	r4, r0
   587a8:	b	58484 <blkid_probe_get_size@plt+0x50f6c>
   587ac:	ldr	r3, [pc, #652]	; 58a40 <blkid_probe_get_size@plt+0x51528>
   587b0:	mov	r2, #0
   587b4:	add	r3, pc, r3
   587b8:	str	r2, [sp, #88]	; 0x58
   587bc:	ldr	r3, [r3, #4]
   587c0:	cmp	r3, #6
   587c4:	bgt	58968 <blkid_probe_get_size@plt+0x51450>
   587c8:	mov	r1, r2
   587cc:	ldr	r3, [pc, #624]	; 58a44 <blkid_probe_get_size@plt+0x5152c>
   587d0:	ldr	r0, [pc, #624]	; 58a48 <blkid_probe_get_size@plt+0x51530>
   587d4:	add	r3, pc, r3
   587d8:	add	r0, pc, r0
   587dc:	add	r3, r3, #1600	; 0x640
   587e0:	str	r2, [sp, #8]
   587e4:	str	r3, [sp]
   587e8:	mov	r2, #0
   587ec:	mov	r3, r0
   587f0:	str	r2, [sp, #12]
   587f4:	strd	r2, [sp, #16]
   587f8:	ldr	r2, [pc, #588]	; 58a4c <blkid_probe_get_size@plt+0x51534>
   587fc:	str	r1, [sp, #4]
   58800:	mov	r3, #181	; 0xb5
   58804:	mov	r1, r4
   58808:	add	r2, pc, r2
   5880c:	mov	r0, #7
   58810:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58814:	mov	r4, r0
   58818:	b	58484 <blkid_probe_get_size@plt+0x50f6c>
   5881c:	ldr	r3, [sp, #40]	; 0x28
   58820:	str	r4, [sp, #88]	; 0x58
   58824:	cmp	r3, #0
   58828:	beq	588d8 <blkid_probe_get_size@plt+0x513c0>
   5882c:	ldr	r3, [pc, #540]	; 58a50 <blkid_probe_get_size@plt+0x51538>
   58830:	add	r3, pc, r3
   58834:	ldr	r3, [r3, #4]
   58838:	cmp	r3, #6
   5883c:	bgt	589b4 <blkid_probe_get_size@plt+0x5149c>
   58840:	mov	r1, r4
   58844:	ldr	r2, [sp, #44]	; 0x2c
   58848:	ldr	r3, [pc, #516]	; 58a54 <blkid_probe_get_size@plt+0x5153c>
   5884c:	str	r2, [sp, #24]
   58850:	ldr	r2, [pc, #512]	; 58a58 <blkid_probe_get_size@plt+0x51540>
   58854:	add	r3, pc, r3
   58858:	add	r2, pc, r2
   5885c:	str	r2, [sp, #20]
   58860:	ldr	r2, [pc, #500]	; 58a5c <blkid_probe_get_size@plt+0x51544>
   58864:	mov	r0, #0
   58868:	add	r3, r3, #1600	; 0x640
   5886c:	str	r4, [sp, #8]
   58870:	str	r1, [sp, #4]
   58874:	str	r3, [sp]
   58878:	str	r0, [sp, #16]
   5887c:	str	r0, [sp, #12]
   58880:	mov	r1, r6
   58884:	mov	r3, #176	; 0xb0
   58888:	add	r2, pc, r2
   5888c:	mov	r0, #7
   58890:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58894:	mov	r4, r0
   58898:	b	58484 <blkid_probe_get_size@plt+0x50f6c>
   5889c:	ldr	r3, [sp, #40]	; 0x28
   588a0:	str	r3, [sp, #68]	; 0x44
   588a4:	mov	r0, r3
   588a8:	b	584f0 <blkid_probe_get_size@plt+0x50fd8>
   588ac:	ldr	r4, [sp, #40]	; 0x28
   588b0:	mov	r0, r4
   588b4:	b	5843c <blkid_probe_get_size@plt+0x50f24>
   588b8:	ldr	r3, [sp, #48]	; 0x30
   588bc:	mov	r1, r5
   588c0:	str	r3, [sp]
   588c4:	ldr	r0, [sp, #40]	; 0x28
   588c8:	ldr	r3, [sp, #36]	; 0x24
   588cc:	bl	56f94 <blkid_probe_get_size@plt+0x4fa7c>
   588d0:	mov	r4, r0
   588d4:	b	586b8 <blkid_probe_get_size@plt+0x511a0>
   588d8:	ldr	r4, [sp, #40]	; 0x28
   588dc:	mov	r1, r4
   588e0:	b	58844 <blkid_probe_get_size@plt+0x5132c>
   588e4:	ldr	r2, [pc, #372]	; 58a60 <blkid_probe_get_size@plt+0x51548>
   588e8:	ldr	r1, [pc, #372]	; 58a64 <blkid_probe_get_size@plt+0x5154c>
   588ec:	add	r2, pc, r2
   588f0:	add	r2, r2, #1616	; 0x650
   588f4:	str	r2, [sp]
   588f8:	ldr	r2, [pc, #360]	; 58a68 <blkid_probe_get_size@plt+0x51550>
   588fc:	mov	r3, #73	; 0x49
   58900:	add	r2, pc, r2
   58904:	add	r1, pc, r1
   58908:	mov	r0, #1
   5890c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58910:	mov	r3, #0
   58914:	str	r3, [sp, #80]	; 0x50
   58918:	mov	r6, #1
   5891c:	b	58550 <blkid_probe_get_size@plt+0x51038>
   58920:	add	r1, sp, #88	; 0x58
   58924:	ldr	r0, [sp, #40]	; 0x28
   58928:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5892c:	ldr	r1, [sp, #88]	; 0x58
   58930:	cmp	r1, #0
   58934:	moveq	ip, r1
   58938:	ldrne	ip, [pc, #300]	; 58a6c <blkid_probe_get_size@plt+0x51554>
   5893c:	addne	ip, pc, ip
   58940:	b	5875c <blkid_probe_get_size@plt+0x51244>
   58944:	ldr	r0, [sp, #40]	; 0x28
   58948:	add	r1, sp, #88	; 0x58
   5894c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58950:	ldr	r4, [sp, #88]	; 0x58
   58954:	cmp	r4, #0
   58958:	beq	58438 <blkid_probe_get_size@plt+0x50f20>
   5895c:	ldr	r0, [pc, #268]	; 58a70 <blkid_probe_get_size@plt+0x51558>
   58960:	add	r0, pc, r0
   58964:	b	5843c <blkid_probe_get_size@plt+0x50f24>
   58968:	ldr	r0, [sp, #40]	; 0x28
   5896c:	add	r1, sp, #88	; 0x58
   58970:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58974:	ldr	r2, [sp, #88]	; 0x58
   58978:	cmp	r2, #0
   5897c:	beq	587c8 <blkid_probe_get_size@plt+0x512b0>
   58980:	ldr	r1, [pc, #236]	; 58a74 <blkid_probe_get_size@plt+0x5155c>
   58984:	add	r1, pc, r1
   58988:	b	587cc <blkid_probe_get_size@plt+0x512b4>
   5898c:	ldr	r0, [sp, #40]	; 0x28
   58990:	add	r1, sp, #88	; 0x58
   58994:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58998:	ldr	r0, [sp, #88]	; 0x58
   5899c:	cmp	r0, #0
   589a0:	ldrne	r4, [pc, #208]	; 58a78 <blkid_probe_get_size@plt+0x51560>
   589a4:	addne	r4, pc, r4
   589a8:	b	586e4 <blkid_probe_get_size@plt+0x511cc>
   589ac:	mvn	r4, #21
   589b0:	b	58494 <blkid_probe_get_size@plt+0x50f7c>
   589b4:	ldr	r0, [sp, #40]	; 0x28
   589b8:	add	r1, sp, #88	; 0x58
   589bc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   589c0:	ldr	r4, [sp, #88]	; 0x58
   589c4:	cmp	r4, #0
   589c8:	beq	58840 <blkid_probe_get_size@plt+0x51328>
   589cc:	ldr	r1, [pc, #168]	; 58a7c <blkid_probe_get_size@plt+0x51564>
   589d0:	add	r1, pc, r1
   589d4:	b	58844 <blkid_probe_get_size@plt+0x5132c>
   589d8:	bl	6fb4 <__stack_chk_fail@plt>
   589dc:			; <UNDEFINED> instruction: 0x0003f8b0
   589e0:	andeq	r0, r0, ip, lsr r4
   589e4:	andeq	r0, r4, r0, asr #23
   589e8:	andeq	r2, r3, r4, lsr lr
   589ec:	muleq	r1, r0, r1
   589f0:	andeq	r0, r0, r8, asr r4
   589f4:	andeq	r0, r0, r0, asr #8
   589f8:	andeq	pc, r3, r4, lsl sp	; <UNPREDICTABLE>
   589fc:	muleq	r1, r8, r0
   58a00:	strdeq	sl, [r1], -r8
   58a04:	andeq	ip, r1, r0, lsr r0
   58a08:	andeq	ip, r1, r4, lsr #32
   58a0c:	andeq	r2, r1, r0, lsl #19
   58a10:	andeq	r2, r1, r0, ror #18
   58a14:	andeq	r2, r1, r0, ror #20
   58a18:	andeq	r2, r1, r8, ror sl
   58a1c:			; <UNDEFINED> instruction: 0x0001bebc
   58a20:	andeq	pc, r3, r0, ror sl	; <UNPREDICTABLE>
   58a24:	andeq	sl, r1, r8, asr r2
   58a28:	andeq	fp, r1, ip, ror #27
   58a2c:	andeq	fp, r1, r8, lsl #27
   58a30:	strdeq	pc, [r3], -r8
   58a34:	andeq	fp, r1, ip, asr sp
   58a38:	ldrdeq	sl, [r1], -r8
   58a3c:	andeq	fp, r1, r8, lsl #26
   58a40:	andeq	pc, r3, r8, lsl #19
   58a44:	andeq	sl, r1, r0, ror r1
   58a48:	andeq	fp, r1, r8, ror #25
   58a4c:	muleq	r1, r8, ip
   58a50:	andeq	pc, r3, ip, lsl #18
   58a54:	strdeq	sl, [r1], -r0
   58a58:	andeq	fp, r1, r0, lsr #25
   58a5c:	andeq	fp, r1, r8, lsl ip
   58a60:	andeq	sl, r1, r8, asr r0
   58a64:	andeq	ip, r0, r0, lsl #29
   58a68:	andeq	fp, r1, r0, lsr #23
   58a6c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   58a70:	ldrdeq	ip, [r0], -r8
   58a74:			; <UNDEFINED> instruction: 0x0000c5b4
   58a78:	muleq	r0, r4, r5
   58a7c:	andeq	ip, r0, r8, ror #10
   58a80:	ldr	ip, [pc, #792]	; 58da0 <blkid_probe_get_size@plt+0x51888>
   58a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   58a88:	add	ip, pc, ip
   58a8c:	ldr	lr, [pc, #784]	; 58da4 <blkid_probe_get_size@plt+0x5188c>
   58a90:	sub	sp, sp, #4096	; 0x1000
   58a94:	sub	sp, sp, #44	; 0x2c
   58a98:	ldr	r4, [ip, lr]
   58a9c:	add	r5, sp, #40	; 0x28
   58aa0:	mov	sl, r3
   58aa4:	add	r3, sp, #4096	; 0x1000
   58aa8:	ldr	lr, [r4]
   58aac:	add	r3, r3, #36	; 0x24
   58ab0:	sub	r8, r5, #8
   58ab4:	mov	r6, r1
   58ab8:	mov	r7, r0
   58abc:	mov	r9, r2
   58ac0:	mov	r0, r8
   58ac4:	mov	r2, #4096	; 0x1000
   58ac8:	mov	r1, #0
   58acc:	str	lr, [r3]
   58ad0:	bl	6c84 <memset@plt>
   58ad4:	cmp	r6, #3
   58ad8:	beq	58b84 <blkid_probe_get_size@plt+0x5166c>
   58adc:	mov	r0, #0
   58ae0:	cmp	r7, #0
   58ae4:	str	r0, [r5, #-12]
   58ae8:	beq	58c34 <blkid_probe_get_size@plt+0x5171c>
   58aec:	ldr	r3, [pc, #692]	; 58da8 <blkid_probe_get_size@plt+0x51890>
   58af0:	add	r3, pc, r3
   58af4:	ldr	r3, [r3, #4]
   58af8:	cmp	r3, #2
   58afc:	bgt	58c40 <blkid_probe_get_size@plt+0x51728>
   58b00:	mov	ip, r0
   58b04:	ldr	r3, [pc, #672]	; 58dac <blkid_probe_get_size@plt+0x51894>
   58b08:	ldr	r2, [pc, #672]	; 58db0 <blkid_probe_get_size@plt+0x51898>
   58b0c:	add	r3, pc, r3
   58b10:	add	r2, pc, r2
   58b14:	add	r3, r3, #1632	; 0x660
   58b18:	add	r3, r3, #12
   58b1c:	str	r2, [sp, #20]
   58b20:	ldr	r2, [pc, #652]	; 58db4 <blkid_probe_get_size@plt+0x5189c>
   58b24:	mov	r1, #0
   58b28:	str	r0, [sp, #8]
   58b2c:	stm	sp, {r3, ip}
   58b30:	str	r1, [sp, #16]
   58b34:	str	r1, [sp, #12]
   58b38:	mov	r3, #21
   58b3c:	add	r2, pc, r2
   58b40:	mov	r1, #1073741846	; 0x40000016
   58b44:	mov	r0, #3
   58b48:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58b4c:	mvn	fp, #0
   58b50:	mov	r6, r0
   58b54:	mov	r0, fp
   58b58:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   58b5c:	add	r3, sp, #4096	; 0x1000
   58b60:	add	r3, r3, #36	; 0x24
   58b64:	ldr	r2, [r3]
   58b68:	ldr	r3, [r4]
   58b6c:	mov	r0, r6
   58b70:	cmp	r2, r3
   58b74:	bne	58d9c <blkid_probe_get_size@plt+0x51884>
   58b78:	add	sp, sp, #4096	; 0x1000
   58b7c:	add	sp, sp, #44	; 0x2c
   58b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   58b84:	ldr	r1, [pc, #556]	; 58db8 <blkid_probe_get_size@plt+0x518a0>
   58b88:	ldr	r0, [r9, #4]
   58b8c:	add	r1, pc, r1
   58b90:	bl	7314 <strcmp@plt>
   58b94:	subs	r6, r0, #0
   58b98:	bne	58adc <blkid_probe_get_size@plt+0x515c4>
   58b9c:	ldr	r0, [pc, #536]	; 58dbc <blkid_probe_get_size@plt+0x518a4>
   58ba0:	ldr	r1, [pc, #536]	; 58dc0 <blkid_probe_get_size@plt+0x518a8>
   58ba4:	add	r0, pc, r0
   58ba8:	bl	6ec4 <open64@plt>
   58bac:	subs	fp, r0, #0
   58bb0:	bge	58c64 <blkid_probe_get_size@plt+0x5174c>
   58bb4:	str	r6, [r5, #-12]
   58bb8:	bl	732c <__errno_location@plt>
   58bbc:	cmp	r7, #0
   58bc0:	ldr	r8, [r0]
   58bc4:	beq	58d30 <blkid_probe_get_size@plt+0x51818>
   58bc8:	ldr	r3, [pc, #500]	; 58dc4 <blkid_probe_get_size@plt+0x518ac>
   58bcc:	add	r3, pc, r3
   58bd0:	ldr	r3, [r3, #4]
   58bd4:	cmp	r3, #6
   58bd8:	bgt	58d54 <blkid_probe_get_size@plt+0x5183c>
   58bdc:	mov	r1, r6
   58be0:	ldr	r3, [pc, #480]	; 58dc8 <blkid_probe_get_size@plt+0x518b0>
   58be4:	ldr	r2, [pc, #480]	; 58dcc <blkid_probe_get_size@plt+0x518b4>
   58be8:	add	r3, pc, r3
   58bec:	add	r2, pc, r2
   58bf0:	str	r2, [sp, #20]
   58bf4:	add	r3, r3, #1632	; 0x660
   58bf8:	ldr	r2, [pc, #464]	; 58dd0 <blkid_probe_get_size@plt+0x518b8>
   58bfc:	mov	r0, #0
   58c00:	add	r3, r3, #12
   58c04:	str	r6, [sp, #8]
   58c08:	str	r1, [sp, #4]
   58c0c:	str	r3, [sp]
   58c10:	str	r0, [sp, #16]
   58c14:	str	r0, [sp, #12]
   58c18:	mov	r1, r8
   58c1c:	mov	r3, #25
   58c20:	add	r2, pc, r2
   58c24:	mov	r0, #7
   58c28:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58c2c:	mov	r6, r0
   58c30:	b	58b54 <blkid_probe_get_size@plt+0x5163c>
   58c34:	mov	r0, r7
   58c38:	mov	ip, r7
   58c3c:	b	58b04 <blkid_probe_get_size@plt+0x515ec>
   58c40:	mov	r0, r7
   58c44:	sub	r1, r5, #12
   58c48:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58c4c:	ldr	r0, [r5, #-12]
   58c50:	cmp	r0, #0
   58c54:	beq	58b00 <blkid_probe_get_size@plt+0x515e8>
   58c58:	ldr	ip, [pc, #372]	; 58dd4 <blkid_probe_get_size@plt+0x518bc>
   58c5c:	add	ip, pc, ip
   58c60:	b	58b04 <blkid_probe_get_size@plt+0x515ec>
   58c64:	ldr	r2, [r9, #8]
   58c68:	ldr	r1, [pc, #360]	; 58dd8 <blkid_probe_get_size@plt+0x518c0>
   58c6c:	mov	r0, r5
   58c70:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   58c74:	mov	r2, r8
   58c78:	ldr	r1, [pc, #348]	; 58ddc <blkid_probe_get_size@plt+0x518c4>
   58c7c:	mov	r0, fp
   58c80:	bl	6e70 <ioctl@plt>
   58c84:	cmp	r0, #0
   58c88:	blt	58cb0 <blkid_probe_get_size@plt+0x51798>
   58c8c:	bne	58d3c <blkid_probe_get_size@plt+0x51824>
   58c90:	ldr	r3, [pc, #328]	; 58de0 <blkid_probe_get_size@plt+0x518c8>
   58c94:	add	r3, pc, r3
   58c98:	ldr	r2, [pc, #324]	; 58de4 <blkid_probe_get_size@plt+0x518cc>
   58c9c:	mov	r1, sl
   58ca0:	mov	r0, r7
   58ca4:	add	r2, pc, r2
   58ca8:	bl	52994 <blkid_probe_get_size@plt+0x4b47c>
   58cac:	b	58b54 <blkid_probe_get_size@plt+0x5163c>
   58cb0:	str	r6, [r5, #-12]
   58cb4:	bl	732c <__errno_location@plt>
   58cb8:	cmp	r7, #0
   58cbc:	ldr	r8, [r0]
   58cc0:	beq	58d48 <blkid_probe_get_size@plt+0x51830>
   58cc4:	ldr	r3, [pc, #284]	; 58de8 <blkid_probe_get_size@plt+0x518d0>
   58cc8:	add	r3, pc, r3
   58ccc:	ldr	r3, [r3, #4]
   58cd0:	cmp	r3, #6
   58cd4:	bgt	58d78 <blkid_probe_get_size@plt+0x51860>
   58cd8:	mov	r1, r6
   58cdc:	ldr	r3, [pc, #264]	; 58dec <blkid_probe_get_size@plt+0x518d4>
   58ce0:	ldr	r2, [pc, #264]	; 58df0 <blkid_probe_get_size@plt+0x518d8>
   58ce4:	add	r3, pc, r3
   58ce8:	add	r2, pc, r2
   58cec:	str	r2, [sp, #20]
   58cf0:	add	r3, r3, #1632	; 0x660
   58cf4:	ldr	r2, [pc, #248]	; 58df4 <blkid_probe_get_size@plt+0x518dc>
   58cf8:	mov	r0, #0
   58cfc:	add	r3, r3, #12
   58d00:	str	r6, [sp, #8]
   58d04:	str	r1, [sp, #4]
   58d08:	str	r3, [sp]
   58d0c:	str	r0, [sp, #16]
   58d10:	str	r0, [sp, #12]
   58d14:	mov	r1, r8
   58d18:	mov	r3, #30
   58d1c:	add	r2, pc, r2
   58d20:	mov	r0, #7
   58d24:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   58d28:	mov	r6, r0
   58d2c:	b	58b54 <blkid_probe_get_size@plt+0x5163c>
   58d30:	mov	r6, r7
   58d34:	mov	r1, r7
   58d38:	b	58be0 <blkid_probe_get_size@plt+0x516c8>
   58d3c:	ldr	r3, [pc, #180]	; 58df8 <blkid_probe_get_size@plt+0x518e0>
   58d40:	add	r3, pc, r3
   58d44:	b	58c98 <blkid_probe_get_size@plt+0x51780>
   58d48:	mov	r6, r7
   58d4c:	mov	r1, r7
   58d50:	b	58cdc <blkid_probe_get_size@plt+0x517c4>
   58d54:	mov	r0, r7
   58d58:	sub	r1, r5, #12
   58d5c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58d60:	ldr	r6, [r5, #-12]
   58d64:	cmp	r6, #0
   58d68:	beq	58bdc <blkid_probe_get_size@plt+0x516c4>
   58d6c:	ldr	r1, [pc, #136]	; 58dfc <blkid_probe_get_size@plt+0x518e4>
   58d70:	add	r1, pc, r1
   58d74:	b	58be0 <blkid_probe_get_size@plt+0x516c8>
   58d78:	mov	r0, r7
   58d7c:	sub	r1, r5, #12
   58d80:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   58d84:	ldr	r6, [r5, #-12]
   58d88:	cmp	r6, #0
   58d8c:	beq	58cd8 <blkid_probe_get_size@plt+0x517c0>
   58d90:	ldr	r1, [pc, #104]	; 58e00 <blkid_probe_get_size@plt+0x518e8>
   58d94:	add	r1, pc, r1
   58d98:	b	58cdc <blkid_probe_get_size@plt+0x517c4>
   58d9c:	bl	6fb4 <__stack_chk_fail@plt>
   58da0:	andeq	pc, r3, r0, ror #1
   58da4:	andeq	r0, r0, ip, lsr r4
   58da8:	andeq	pc, r3, ip, asr #12
   58dac:	andeq	r9, r1, r8, lsr lr
   58db0:	andeq	fp, r1, ip, asr sl
   58db4:	andeq	fp, r1, ip, lsl #20
   58db8:			; <UNDEFINED> instruction: 0x0001b9b4
   58dbc:	ldrdeq	fp, [r1], -ip
   58dc0:	andeq	r0, r8, r2
   58dc4:	andeq	pc, r3, r0, ror r5	; <UNPREDICTABLE>
   58dc8:	andeq	r9, r1, ip, asr sp
   58dcc:	andeq	fp, r1, r8, lsr #19
   58dd0:	andeq	fp, r1, r8, lsr #18
   58dd4:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   58dd8:	strdeq	r0, [r0], -r8
   58ddc:	andls	r9, r0, r7, lsr #8
   58de0:	andeq	sp, r1, r0, asr #13
   58de4:	andeq	fp, r1, r4, asr #18
   58de8:	andeq	pc, r3, r4, ror r4	; <UNPREDICTABLE>
   58dec:	andeq	r9, r1, r0, ror #24
   58df0:	ldrdeq	fp, [r1], -r4
   58df4:	andeq	fp, r1, ip, lsr #16
   58df8:	andeq	r5, r1, r4, ror #7
   58dfc:	andeq	ip, r0, r8, asr #3
   58e00:	andeq	ip, r0, r4, lsr #3
   58e04:	push	{r4, r5, r6, r7, r8, lr}
   58e08:	subs	r6, r0, #0
   58e0c:	ldr	r4, [pc, #300]	; 58f40 <blkid_probe_get_size@plt+0x51a28>
   58e10:	sub	sp, sp, #8
   58e14:	add	r4, pc, r4
   58e18:	beq	58ea0 <blkid_probe_get_size@plt+0x51988>
   58e1c:	cmp	r1, #10
   58e20:	bhi	58ed0 <blkid_probe_get_size@plt+0x519b8>
   58e24:	cmp	r2, #0
   58e28:	beq	58f00 <blkid_probe_get_size@plt+0x519e8>
   58e2c:	mov	r7, r3
   58e30:	ldr	r3, [pc, #268]	; 58f44 <blkid_probe_get_size@plt+0x51a2c>
   58e34:	add	r3, pc, r3
   58e38:	ldr	r5, [r3, r1, lsl #2]
   58e3c:	cmp	r5, #0
   58e40:	beq	58f38 <blkid_probe_get_size@plt+0x51a20>
   58e44:	mov	r0, r2
   58e48:	mov	r1, #0
   58e4c:	mov	r2, #3
   58e50:	bl	3d204 <blkid_probe_get_size@plt+0x35cec>
   58e54:	subs	r8, r0, #0
   58e58:	beq	58f30 <blkid_probe_get_size@plt+0x51a18>
   58e5c:	ldr	r3, [pc, #228]	; 58f48 <blkid_probe_get_size@plt+0x51a30>
   58e60:	mov	r2, #0
   58e64:	ldr	r3, [r4, r3]
   58e68:	str	r2, [r3]
   58e6c:	bl	392e8 <blkid_probe_get_size@plt+0x31dd0>
   58e70:	ldr	r4, [r5, #4]
   58e74:	mov	r3, r7
   58e78:	mov	r2, r8
   58e7c:	mov	r1, r0
   58e80:	mov	r0, r6
   58e84:	blx	r4
   58e88:	mov	r4, r0
   58e8c:	mov	r0, r8
   58e90:	bl	393ec <blkid_probe_get_size@plt+0x31ed4>
   58e94:	mov	r0, r4
   58e98:	add	sp, sp, #8
   58e9c:	pop	{r4, r5, r6, r7, r8, pc}
   58ea0:	ldr	r2, [pc, #164]	; 58f4c <blkid_probe_get_size@plt+0x51a34>
   58ea4:	ldr	r1, [pc, #164]	; 58f50 <blkid_probe_get_size@plt+0x51a38>
   58ea8:	add	r2, pc, r2
   58eac:	add	r2, r2, #1648	; 0x670
   58eb0:	add	r2, r2, #12
   58eb4:	str	r2, [sp]
   58eb8:	ldr	r2, [pc, #148]	; 58f54 <blkid_probe_get_size@plt+0x51a3c>
   58ebc:	mov	r3, #114	; 0x72
   58ec0:	add	r2, pc, r2
   58ec4:	add	r1, pc, r1
   58ec8:	mov	r0, #1
   58ecc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58ed0:	ldr	r2, [pc, #128]	; 58f58 <blkid_probe_get_size@plt+0x51a40>
   58ed4:	ldr	r1, [pc, #128]	; 58f5c <blkid_probe_get_size@plt+0x51a44>
   58ed8:	add	r2, pc, r2
   58edc:	add	r2, r2, #1648	; 0x670
   58ee0:	add	r2, r2, #12
   58ee4:	str	r2, [sp]
   58ee8:	ldr	r2, [pc, #112]	; 58f60 <blkid_probe_get_size@plt+0x51a48>
   58eec:	mov	r3, #115	; 0x73
   58ef0:	add	r2, pc, r2
   58ef4:	add	r1, pc, r1
   58ef8:	mov	r0, #1
   58efc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58f00:	ldr	r2, [pc, #92]	; 58f64 <blkid_probe_get_size@plt+0x51a4c>
   58f04:	ldr	r1, [pc, #92]	; 58f68 <blkid_probe_get_size@plt+0x51a50>
   58f08:	add	r2, pc, r2
   58f0c:	add	r2, r2, #1648	; 0x670
   58f10:	add	r2, r2, #12
   58f14:	str	r2, [sp]
   58f18:	ldr	r2, [pc, #76]	; 58f6c <blkid_probe_get_size@plt+0x51a54>
   58f1c:	mov	r3, #116	; 0x74
   58f20:	add	r2, pc, r2
   58f24:	add	r1, pc, r1
   58f28:	mov	r0, #1
   58f2c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   58f30:	mvn	r4, #11
   58f34:	b	58e94 <blkid_probe_get_size@plt+0x5197c>
   58f38:	mvn	r4, #94	; 0x5e
   58f3c:	b	58e94 <blkid_probe_get_size@plt+0x5197c>
   58f40:	andeq	lr, r3, r4, asr sp
   58f44:	andeq	lr, r3, r8, lsr sl
   58f48:	andeq	r0, r0, r0, asr #8
   58f4c:	muleq	r1, ip, sl
   58f50:	andeq	ip, r0, r0, asr #17
   58f54:	andeq	sl, r1, r8, lsl r9
   58f58:	andeq	r9, r1, ip, ror #20
   58f5c:	andeq	fp, r1, r4, lsl #14
   58f60:	andeq	sl, r1, r8, ror #17
   58f64:	andeq	r9, r1, ip, lsr sl
   58f68:	andeq	r0, r1, r8, ror #7
   58f6c:			; <UNDEFINED> instruction: 0x0001a8b8
   58f70:	push	{r4, r5, r6, r7, lr}
   58f74:	subs	r5, r0, #0
   58f78:	sub	sp, sp, #12
   58f7c:	beq	58ffc <blkid_probe_get_size@plt+0x51ae4>
   58f80:	ldr	r4, [pc, #160]	; 59028 <blkid_probe_get_size@plt+0x51b10>
   58f84:	ldr	r6, [pc, #160]	; 5902c <blkid_probe_get_size@plt+0x51b14>
   58f88:	add	r4, pc, r4
   58f8c:	mov	r1, r4
   58f90:	bl	6c9c <strspn@plt>
   58f94:	mov	r1, r4
   58f98:	add	r6, pc, r6
   58f9c:	mov	r4, #0
   58fa0:	add	r5, r5, r0
   58fa4:	mov	r0, r5
   58fa8:	bl	6a8c <strcspn@plt>
   58fac:	ldr	r3, [pc, #124]	; 59030 <blkid_probe_get_size@plt+0x51b18>
   58fb0:	add	r3, pc, r3
   58fb4:	mov	r7, r0
   58fb8:	b	58fc0 <blkid_probe_get_size@plt+0x51aa8>
   58fbc:	ldr	r3, [r6, r4, lsl #2]
   58fc0:	cmp	r3, #0
   58fc4:	beq	58fe0 <blkid_probe_get_size@plt+0x51ac8>
   58fc8:	ldr	r0, [r3]
   58fcc:	mov	r2, r7
   58fd0:	mov	r1, r5
   58fd4:	bl	6a5c <strncmp@plt>
   58fd8:	cmp	r0, #0
   58fdc:	beq	58ff0 <blkid_probe_get_size@plt+0x51ad8>
   58fe0:	add	r4, r4, #1
   58fe4:	cmp	r4, #11
   58fe8:	bne	58fbc <blkid_probe_get_size@plt+0x51aa4>
   58fec:	mvn	r4, #0
   58ff0:	mov	r0, r4
   58ff4:	add	sp, sp, #12
   58ff8:	pop	{r4, r5, r6, r7, pc}
   58ffc:	ldr	r2, [pc, #48]	; 59034 <blkid_probe_get_size@plt+0x51b1c>
   59000:	ldr	r1, [pc, #48]	; 59038 <blkid_probe_get_size@plt+0x51b20>
   59004:	add	r2, pc, r2
   59008:	add	r2, r2, #1680	; 0x690
   5900c:	str	r2, [sp]
   59010:	ldr	r2, [pc, #36]	; 5903c <blkid_probe_get_size@plt+0x51b24>
   59014:	mov	r3, #100	; 0x64
   59018:	add	r2, pc, r2
   5901c:	add	r1, pc, r1
   59020:	mov	r0, #1
   59024:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59028:	andeq	r1, r1, r4, lsl lr
   5902c:	ldrdeq	lr, [r3], -r4
   59030:	andeq	lr, r3, ip, asr sl
   59034:	andeq	r9, r1, r0, asr #18
   59038:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   5903c:	andeq	sl, r1, r0, asr #15
   59040:	cmp	r0, #10
   59044:	bhi	59060 <blkid_probe_get_size@plt+0x51b48>
   59048:	ldr	r3, [pc, #72]	; 59098 <blkid_probe_get_size@plt+0x51b80>
   5904c:	add	r3, pc, r3
   59050:	ldr	r0, [r3, r0, lsl #2]
   59054:	cmp	r0, #0
   59058:	ldrne	r0, [r0]
   5905c:	bx	lr
   59060:	ldr	r2, [pc, #52]	; 5909c <blkid_probe_get_size@plt+0x51b84>
   59064:	push	{lr}		; (str lr, [sp, #-4]!)
   59068:	add	r2, pc, r2
   5906c:	sub	sp, sp, #12
   59070:	add	r2, r2, #1696	; 0x6a0
   59074:	add	r2, r2, #4
   59078:	str	r2, [sp]
   5907c:	ldr	r1, [pc, #28]	; 590a0 <blkid_probe_get_size@plt+0x51b88>
   59080:	ldr	r2, [pc, #28]	; 590a4 <blkid_probe_get_size@plt+0x51b8c>
   59084:	mov	r3, #79	; 0x4f
   59088:	add	r2, pc, r2
   5908c:	add	r1, pc, r1
   59090:	mov	r0, #1
   59094:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59098:	andeq	lr, r3, r0, lsr #16
   5909c:	ldrdeq	r9, [r1], -ip
   590a0:	andeq	fp, r1, ip, ror #10
   590a4:	andeq	sl, r1, r0, asr r7
   590a8:	ldr	r3, [pc, #100]	; 59114 <blkid_probe_get_size@plt+0x51bfc>
   590ac:	add	r3, pc, r3
   590b0:	ldrb	r3, [r3, #8]
   590b4:	cmp	r3, #0
   590b8:	bxeq	lr
   590bc:	push	{r4, r5, r6, lr}
   590c0:	ldr	r5, [pc, #80]	; 59118 <blkid_probe_get_size@plt+0x51c00>
   590c4:	ldr	r3, [pc, #80]	; 5911c <blkid_probe_get_size@plt+0x51c04>
   590c8:	add	r5, pc, r5
   590cc:	add	r4, r5, #4
   590d0:	add	r3, pc, r3
   590d4:	add	r5, r5, #44	; 0x2c
   590d8:	b	590e0 <blkid_probe_get_size@plt+0x51bc8>
   590dc:	ldr	r3, [r4], #4
   590e0:	cmp	r3, #0
   590e4:	beq	590f8 <blkid_probe_get_size@plt+0x51be0>
   590e8:	ldr	r3, [r3, #16]
   590ec:	cmp	r3, #0
   590f0:	beq	590f8 <blkid_probe_get_size@plt+0x51be0>
   590f4:	blx	r3
   590f8:	cmp	r4, r5
   590fc:	bne	590dc <blkid_probe_get_size@plt+0x51bc4>
   59100:	ldr	r3, [pc, #24]	; 59120 <blkid_probe_get_size@plt+0x51c08>
   59104:	mov	r2, #0
   59108:	add	r3, pc, r3
   5910c:	strb	r2, [r3, #8]
   59110:	pop	{r4, r5, r6, pc}
   59114:	ldrdeq	pc, [r3], -r8
   59118:	andeq	lr, r3, r4, lsr #15
   5911c:	andeq	lr, r3, ip, lsr r9
   59120:	andeq	pc, r3, ip, ror sp	; <UNPREDICTABLE>
   59124:	ldr	r3, [pc, #100]	; 59190 <blkid_probe_get_size@plt+0x51c78>
   59128:	add	r3, pc, r3
   5912c:	ldrb	r3, [r3, #8]
   59130:	cmp	r3, #0
   59134:	bxne	lr
   59138:	push	{r4, r5, r6, lr}
   5913c:	ldr	r5, [pc, #80]	; 59194 <blkid_probe_get_size@plt+0x51c7c>
   59140:	ldr	r3, [pc, #80]	; 59198 <blkid_probe_get_size@plt+0x51c80>
   59144:	add	r5, pc, r5
   59148:	add	r4, r5, #4
   5914c:	add	r3, pc, r3
   59150:	add	r5, r5, #44	; 0x2c
   59154:	b	5915c <blkid_probe_get_size@plt+0x51c44>
   59158:	ldr	r3, [r4], #4
   5915c:	cmp	r3, #0
   59160:	beq	59174 <blkid_probe_get_size@plt+0x51c5c>
   59164:	ldr	r3, [r3, #12]
   59168:	cmp	r3, #0
   5916c:	beq	59174 <blkid_probe_get_size@plt+0x51c5c>
   59170:	blx	r3
   59174:	cmp	r4, r5
   59178:	bne	59158 <blkid_probe_get_size@plt+0x51c40>
   5917c:	ldr	r3, [pc, #24]	; 5919c <blkid_probe_get_size@plt+0x51c84>
   59180:	mov	r2, #1
   59184:	add	r3, pc, r3
   59188:	strb	r2, [r3, #8]
   5918c:	pop	{r4, r5, r6, pc}
   59190:	andeq	pc, r3, ip, asr sp	; <UNPREDICTABLE>
   59194:	andeq	lr, r3, r8, lsr #14
   59198:	andeq	lr, r3, r0, asr #17
   5919c:	andeq	pc, r3, r0, lsl #26
   591a0:	ldr	r3, [pc, #92]	; 59204 <blkid_probe_get_size@plt+0x51cec>
   591a4:	add	r3, pc, r3
   591a8:	ldr	r3, [r3, #4]
   591ac:	cmp	r3, #6
   591b0:	ble	591fc <blkid_probe_get_size@plt+0x51ce4>
   591b4:	ldr	r3, [pc, #76]	; 59208 <blkid_probe_get_size@plt+0x51cf0>
   591b8:	ldr	r2, [pc, #76]	; 5920c <blkid_probe_get_size@plt+0x51cf4>
   591bc:	push	{lr}		; (str lr, [sp, #-4]!)
   591c0:	sub	sp, sp, #12
   591c4:	add	r2, pc, r2
   591c8:	add	r3, pc, r3
   591cc:	str	r2, [sp, #4]
   591d0:	add	r3, r3, #1712	; 0x6b0
   591d4:	ldr	r2, [pc, #52]	; 59210 <blkid_probe_get_size@plt+0x51cf8>
   591d8:	add	r3, r3, #8
   591dc:	str	r3, [sp]
   591e0:	add	r2, pc, r2
   591e4:	mov	r3, #129	; 0x81
   591e8:	mov	r1, #1073741846	; 0x40000016
   591ec:	ldr	r0, [pc, #32]	; 59214 <blkid_probe_get_size@plt+0x51cfc>
   591f0:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   591f4:	add	sp, sp, #12
   591f8:	pop	{pc}		; (ldr pc, [sp], #4)
   591fc:	mvn	r0, #21
   59200:	bx	lr
   59204:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   59208:	andeq	r9, r1, ip, ror r7
   5920c:	andeq	fp, r1, r4, ror r4
   59210:	andeq	fp, r1, ip, lsr r4
   59214:	andeq	r0, r0, r7, lsl #8
   59218:	push	{r4, r5, r6, lr}
   5921c:	mov	r4, r0
   59220:	ldr	r0, [r0, #12]
   59224:	bl	69f0 <free@plt>
   59228:	ldr	r5, [r4, #24]
   5922c:	cmp	r5, #0
   59230:	beq	5924c <blkid_probe_get_size@plt+0x51d34>
   59234:	mov	r0, r5
   59238:	bl	3984c <blkid_probe_get_size@plt+0x32334>
   5923c:	ldr	r0, [r5]
   59240:	bl	69f0 <free@plt>
   59244:	mov	r0, r5
   59248:	bl	69f0 <free@plt>
   5924c:	ldr	r0, [r4, #28]
   59250:	bl	69f0 <free@plt>
   59254:	ldr	r0, [r4, #40]	; 0x28
   59258:	bl	69f0 <free@plt>
   5925c:	mov	r0, r4
   59260:	pop	{r4, r5, r6, lr}
   59264:	b	69f0 <free@plt>
   59268:	ldr	r3, [pc, #448]	; 59430 <blkid_probe_get_size@plt+0x51f18>
   5926c:	ldr	ip, [pc, #448]	; 59434 <blkid_probe_get_size@plt+0x51f1c>
   59270:	add	r3, pc, r3
   59274:	push	{r4, r5, r6, r7, r8, r9, lr}
   59278:	sub	sp, sp, #1024	; 0x400
   5927c:	ldr	r5, [r3, ip]
   59280:	ldr	r0, [r0, #24]
   59284:	sub	sp, sp, #12
   59288:	mov	r6, r1
   5928c:	ldr	r4, [r0]
   59290:	ldr	r1, [r1, #4]
   59294:	subs	r7, r2, #0
   59298:	ldr	r2, [r5]
   5929c:	add	r4, r4, r1
   592a0:	str	r2, [sp, #1028]	; 0x404
   592a4:	beq	59324 <blkid_probe_get_size@plt+0x51e0c>
   592a8:	ldrb	r3, [r6, #2]
   592ac:	cmp	r3, #5
   592b0:	addls	pc, pc, r3, lsl #2
   592b4:	b	592d0 <blkid_probe_get_size@plt+0x51db8>
   592b8:	b	59330 <blkid_probe_get_size@plt+0x51e18>
   592bc:	b	592f8 <blkid_probe_get_size@plt+0x51de0>
   592c0:	b	59338 <blkid_probe_get_size@plt+0x51e20>
   592c4:	b	59354 <blkid_probe_get_size@plt+0x51e3c>
   592c8:	b	593a4 <blkid_probe_get_size@plt+0x51e8c>
   592cc:	b	59400 <blkid_probe_get_size@plt+0x51ee8>
   592d0:	ldrb	r0, [r6, #1]
   592d4:	subs	r0, r0, #2
   592d8:	mvnne	r0, #0
   592dc:	ldr	r2, [sp, #1028]	; 0x404
   592e0:	ldr	r3, [r5]
   592e4:	cmp	r2, r3
   592e8:	bne	5942c <blkid_probe_get_size@plt+0x51f14>
   592ec:	add	sp, sp, #1024	; 0x400
   592f0:	add	sp, sp, #12
   592f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   592f8:	mov	r1, r7
   592fc:	mov	r0, r4
   59300:	bl	7314 <strcmp@plt>
   59304:	clz	r0, r0
   59308:	lsr	r0, r0, #5
   5930c:	cmp	r0, #0
   59310:	beq	592d0 <blkid_probe_get_size@plt+0x51db8>
   59314:	ldrb	r0, [r6, #1]
   59318:	subs	r0, r0, #1
   5931c:	mvnne	r0, #0
   59320:	b	592dc <blkid_probe_get_size@plt+0x51dc4>
   59324:	ldr	r7, [pc, #268]	; 59438 <blkid_probe_get_size@plt+0x51f20>
   59328:	add	r7, pc, r7
   5932c:	b	592a8 <blkid_probe_get_size@plt+0x51d90>
   59330:	mvn	r0, #0
   59334:	b	592dc <blkid_probe_get_size@plt+0x51dc4>
   59338:	mov	r1, r7
   5933c:	mov	r0, r4
   59340:	mov	r2, #0
   59344:	bl	693c <fnmatch@plt>
   59348:	clz	r0, r0
   5934c:	lsr	r0, r0, #5
   59350:	b	5930c <blkid_probe_get_size@plt+0x51df4>
   59354:	mov	r0, r7
   59358:	bl	723c <strlen@plt>
   5935c:	mov	r9, r0
   59360:	b	59368 <blkid_probe_get_size@plt+0x51e50>
   59364:	add	r4, r8, #1
   59368:	mov	r1, #124	; 0x7c
   5936c:	mov	r0, r4
   59370:	bl	74c4 <strchr@plt>
   59374:	subs	r8, r0, #0
   59378:	beq	592f8 <blkid_probe_get_size@plt+0x51de0>
   5937c:	sub	r3, r8, r4
   59380:	cmp	r9, r3
   59384:	bne	59364 <blkid_probe_get_size@plt+0x51e4c>
   59388:	mov	r0, r4
   5938c:	mov	r2, r9
   59390:	mov	r1, r7
   59394:	bl	6a5c <strncmp@plt>
   59398:	cmp	r0, #0
   5939c:	bne	59364 <blkid_probe_get_size@plt+0x51e4c>
   593a0:	b	59314 <blkid_probe_get_size@plt+0x51dfc>
   593a4:	add	r8, sp, #4
   593a8:	mov	r2, r4
   593ac:	mov	r0, r8
   593b0:	mov	r1, #1024	; 0x400
   593b4:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   593b8:	mov	r9, #0
   593bc:	mov	r1, #124	; 0x7c
   593c0:	mov	r0, r8
   593c4:	bl	74c4 <strchr@plt>
   593c8:	subs	r4, r0, #0
   593cc:	beq	59410 <blkid_probe_get_size@plt+0x51ef8>
   593d0:	strb	r9, [r4], #1
   593d4:	mov	r0, r8
   593d8:	mov	r2, #0
   593dc:	mov	r1, r7
   593e0:	bl	693c <fnmatch@plt>
   593e4:	mov	r8, r4
   593e8:	cmp	r4, #0
   593ec:	cmpne	r0, #0
   593f0:	bne	593bc <blkid_probe_get_size@plt+0x51ea4>
   593f4:	clz	r0, r0
   593f8:	lsr	r0, r0, #5
   593fc:	b	5930c <blkid_probe_get_size@plt+0x51df4>
   59400:	ldrb	r0, [r7]
   59404:	adds	r0, r0, #0
   59408:	movne	r0, #1
   5940c:	b	5930c <blkid_probe_get_size@plt+0x51df4>
   59410:	mov	r2, r4
   59414:	mov	r1, r7
   59418:	mov	r0, r8
   5941c:	bl	693c <fnmatch@plt>
   59420:	clz	r0, r0
   59424:	lsr	r0, r0, #5
   59428:	b	5930c <blkid_probe_get_size@plt+0x51df4>
   5942c:	bl	6fb4 <__stack_chk_fail@plt>
   59430:	strdeq	lr, [r3], -r8
   59434:	andeq	r0, r0, ip, lsr r4
   59438:	andeq	sp, r0, r4, asr #3
   5943c:	ldr	ip, [pc, #448]	; 59604 <blkid_probe_get_size@plt+0x520ec>
   59440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   59444:	add	ip, pc, ip
   59448:	ldr	lr, [pc, #440]	; 59608 <blkid_probe_get_size@plt+0x520f0>
   5944c:	mov	r5, r0
   59450:	ldr	r0, [r0, #24]
   59454:	mov	r4, r3
   59458:	ldrb	r3, [r3, #3]
   5945c:	ldr	r6, [ip, lr]
   59460:	ldr	r8, [r4, #8]
   59464:	ldr	lr, [r0]
   59468:	sub	sp, sp, #1040	; 0x410
   5946c:	sub	sp, sp, #12
   59470:	lsr	r3, r3, #4
   59474:	mov	r7, r1
   59478:	add	r1, lr, r8
   5947c:	ldr	lr, [r6]
   59480:	cmp	r3, #2
   59484:	str	lr, [sp, #1044]	; 0x414
   59488:	beq	594bc <blkid_probe_get_size@plt+0x51fa4>
   5948c:	cmp	r3, #3
   59490:	beq	595d0 <blkid_probe_get_size@plt+0x520b8>
   59494:	cmp	r3, #1
   59498:	beq	594dc <blkid_probe_get_size@plt+0x51fc4>
   5949c:	mvn	r0, #0
   594a0:	ldr	r2, [sp, #1044]	; 0x414
   594a4:	ldr	r3, [r6]
   594a8:	cmp	r2, r3
   594ac:	bne	59600 <blkid_probe_get_size@plt+0x520e8>
   594b0:	add	sp, sp, #1040	; 0x410
   594b4:	add	sp, sp, #12
   594b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   594bc:	mov	r3, #0
   594c0:	add	r8, sp, #532	; 0x214
   594c4:	mov	r0, r2
   594c8:	str	r3, [sp]
   594cc:	mov	r2, r8
   594d0:	mov	r3, #512	; 0x200
   594d4:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   594d8:	mov	r1, r8
   594dc:	add	r9, sp, #24
   594e0:	mov	r0, r7
   594e4:	sub	r2, r9, #8
   594e8:	bl	369c4 <blkid_probe_get_size@plt+0x2f4ac>
   594ec:	cmp	r0, #0
   594f0:	blt	5949c <blkid_probe_get_size@plt+0x51f84>
   594f4:	ldr	r7, [sp, #16]
   594f8:	mov	r0, r7
   594fc:	bl	723c <strlen@plt>
   59500:	subs	r8, r0, #0
   59504:	beq	595bc <blkid_probe_get_size@plt+0x520a4>
   59508:	bl	7104 <__ctype_b_loc@plt>
   5950c:	add	r3, r7, r8
   59510:	ldrb	r3, [r3, #-1]
   59514:	lsl	r3, r3, #1
   59518:	ldr	fp, [r0]
   5951c:	mov	sl, r0
   59520:	ldrh	r3, [fp, r3]
   59524:	tst	r3, #8192	; 0x2000
   59528:	beq	595bc <blkid_probe_get_size@plt+0x520a4>
   5952c:	ldr	r3, [r5, #24]
   59530:	ldr	r0, [r4, #4]
   59534:	ldr	r3, [r3]
   59538:	add	r3, r3, r0
   5953c:	mov	r0, r3
   59540:	str	r3, [sp, #12]
   59544:	bl	723c <strlen@plt>
   59548:	cmp	r0, #0
   5954c:	beq	595bc <blkid_probe_get_size@plt+0x520a4>
   59550:	ldr	r3, [sp, #12]
   59554:	add	r3, r3, r0
   59558:	ldrb	r3, [r3, #-1]
   5955c:	lsl	r3, r3, #1
   59560:	ldrh	r3, [fp, r3]
   59564:	tst	r3, #8192	; 0x2000
   59568:	bne	595bc <blkid_probe_get_size@plt+0x520a4>
   5956c:	sub	r9, r9, #4
   59570:	cmp	r7, r9
   59574:	beq	59590 <blkid_probe_get_size@plt+0x52078>
   59578:	mov	r2, r7
   5957c:	mov	r1, #512	; 0x200
   59580:	mov	r0, r9
   59584:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   59588:	ldr	fp, [sl]
   5958c:	str	r9, [sp, #16]
   59590:	add	r3, r9, r8
   59594:	mov	r1, #0
   59598:	ldrb	r2, [r3, #-1]!
   5959c:	lsl	r2, r2, #1
   595a0:	ldrh	r2, [fp, r2]
   595a4:	tst	r2, #8192	; 0x2000
   595a8:	beq	595b8 <blkid_probe_get_size@plt+0x520a0>
   595ac:	cmp	r9, r3
   595b0:	strb	r1, [r3]
   595b4:	bne	59598 <blkid_probe_get_size@plt+0x52080>
   595b8:	mov	r7, r9
   595bc:	mov	r2, r7
   595c0:	mov	r1, r4
   595c4:	mov	r0, r5
   595c8:	bl	59268 <blkid_probe_get_size@plt+0x51d50>
   595cc:	b	594a0 <blkid_probe_get_size@plt+0x51f88>
   595d0:	add	r8, sp, #20
   595d4:	mov	r0, r1
   595d8:	mov	r3, #1
   595dc:	mov	r1, r8
   595e0:	mov	r2, #512	; 0x200
   595e4:	bl	3ce98 <blkid_probe_get_size@plt+0x35980>
   595e8:	add	r9, sp, #24
   595ec:	cmp	r0, #0
   595f0:	bne	5949c <blkid_probe_get_size@plt+0x51f84>
   595f4:	mov	r7, r8
   595f8:	str	r8, [sp, #16]
   595fc:	b	594f8 <blkid_probe_get_size@plt+0x51fe0>
   59600:	bl	6fb4 <__stack_chk_fail@plt>
   59604:	andeq	lr, r3, r4, lsr #14
   59608:	andeq	r0, r0, ip, lsr r4
   5960c:	andeq	r0, r0, r0
   59610:	subs	r3, r0, #0
   59614:	push	{lr}		; (str lr, [sp, #-4]!)
   59618:	sub	sp, sp, #12
   5961c:	beq	59638 <blkid_probe_get_size@plt+0x52120>
   59620:	ldrsb	r3, [r3]
   59624:	cmp	r3, #19
   59628:	bne	5965c <blkid_probe_get_size@plt+0x52144>
   5962c:	mov	r0, #1
   59630:	add	sp, sp, #12
   59634:	pop	{pc}		; (ldr pc, [sp], #4)
   59638:	ldr	r2, [pc, #68]	; 59684 <blkid_probe_get_size@plt+0x5216c>
   5963c:	ldr	r1, [pc, #68]	; 59688 <blkid_probe_get_size@plt+0x52170>
   59640:	add	r2, pc, r2
   59644:	str	r2, [sp]
   59648:	ldr	r2, [pc, #60]	; 5968c <blkid_probe_get_size@plt+0x52174>
   5964c:	ldr	r3, [pc, #60]	; 59690 <blkid_probe_get_size@plt+0x52178>
   59650:	add	r2, pc, r2
   59654:	add	r1, pc, r1
   59658:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5965c:	ldr	r2, [pc, #48]	; 59694 <blkid_probe_get_size@plt+0x5217c>
   59660:	ldr	r1, [pc, #48]	; 59698 <blkid_probe_get_size@plt+0x52180>
   59664:	add	r2, pc, r2
   59668:	str	r2, [sp]
   5966c:	ldr	r2, [pc, #40]	; 5969c <blkid_probe_get_size@plt+0x52184>
   59670:	ldr	r3, [pc, #40]	; 596a0 <blkid_probe_get_size@plt+0x52188>
   59674:	add	r2, pc, r2
   59678:	add	r1, pc, r1
   5967c:	mov	r0, #0
   59680:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59684:	andeq	ip, r1, r0, ror #28
   59688:	ldrdeq	sl, [r1], -r8
   5968c:	andeq	r6, r1, r0, asr #7
   59690:	andeq	r0, r0, r2, asr r2
   59694:	andeq	ip, r1, ip, lsr lr
   59698:	andeq	sp, r1, ip, lsl r6
   5969c:	muleq	r1, ip, r3
   596a0:	andeq	r0, r0, r3, asr r2
   596a4:	ldr	r3, [pc, #268]	; 597b8 <blkid_probe_get_size@plt+0x522a0>
   596a8:	ldr	r2, [pc, #268]	; 597bc <blkid_probe_get_size@plt+0x522a4>
   596ac:	add	r3, pc, r3
   596b0:	push	{r4, lr}
   596b4:	sub	sp, sp, #120	; 0x78
   596b8:	ldr	r4, [r3, r2]
   596bc:	subs	ip, r0, #0
   596c0:	ldr	r3, [r4]
   596c4:	str	r3, [sp, #116]	; 0x74
   596c8:	beq	59734 <blkid_probe_get_size@plt+0x5221c>
   596cc:	ldr	r1, [ip, #4]
   596d0:	cmp	r1, #0
   596d4:	beq	5975c <blkid_probe_get_size@plt+0x52244>
   596d8:	ldrsb	r3, [ip]
   596dc:	cmp	r3, #18
   596e0:	bne	59788 <blkid_probe_get_size@plt+0x52270>
   596e4:	add	r2, sp, #8
   596e8:	mov	r0, #3
   596ec:	bl	6a2c <__xstat64@plt>
   596f0:	cmp	r0, #0
   596f4:	blt	59708 <blkid_probe_get_size@plt+0x521f0>
   596f8:	ldr	r3, [sp, #24]
   596fc:	and	r2, r3, #61440	; 0xf000
   59700:	cmp	r2, #32768	; 0x8000
   59704:	beq	59724 <blkid_probe_get_size@plt+0x5220c>
   59708:	mov	r0, #0
   5970c:	ldr	r2, [sp, #116]	; 0x74
   59710:	ldr	r3, [r4]
   59714:	cmp	r2, r3
   59718:	bne	597b4 <blkid_probe_get_size@plt+0x5229c>
   5971c:	add	sp, sp, #120	; 0x78
   59720:	pop	{r4, pc}
   59724:	tst	r3, #73	; 0x49
   59728:	movne	r0, #1
   5972c:	moveq	r0, #0
   59730:	b	5970c <blkid_probe_get_size@plt+0x521f4>
   59734:	ldr	r2, [pc, #132]	; 597c0 <blkid_probe_get_size@plt+0x522a8>
   59738:	ldr	r1, [pc, #132]	; 597c4 <blkid_probe_get_size@plt+0x522ac>
   5973c:	add	r2, pc, r2
   59740:	add	r2, r2, #20
   59744:	str	r2, [sp]
   59748:	ldr	r2, [pc, #120]	; 597c8 <blkid_probe_get_size@plt+0x522b0>
   5974c:	mov	r3, #584	; 0x248
   59750:	add	r2, pc, r2
   59754:	add	r1, pc, r1
   59758:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5975c:	ldr	r3, [pc, #104]	; 597cc <blkid_probe_get_size@plt+0x522b4>
   59760:	mov	r0, r1
   59764:	add	r3, pc, r3
   59768:	ldr	r2, [pc, #96]	; 597d0 <blkid_probe_get_size@plt+0x522b8>
   5976c:	ldr	r1, [pc, #96]	; 597d4 <blkid_probe_get_size@plt+0x522bc>
   59770:	add	r3, r3, #20
   59774:	str	r3, [sp]
   59778:	add	r2, pc, r2
   5977c:	ldr	r3, [pc, #84]	; 597d8 <blkid_probe_get_size@plt+0x522c0>
   59780:	add	r1, pc, r1
   59784:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59788:	ldr	r2, [pc, #76]	; 597dc <blkid_probe_get_size@plt+0x522c4>
   5978c:	ldr	r1, [pc, #76]	; 597e0 <blkid_probe_get_size@plt+0x522c8>
   59790:	add	r2, pc, r2
   59794:	add	r2, r2, #20
   59798:	str	r2, [sp]
   5979c:	ldr	r2, [pc, #64]	; 597e4 <blkid_probe_get_size@plt+0x522cc>
   597a0:	ldr	r3, [pc, #64]	; 597e8 <blkid_probe_get_size@plt+0x522d0>
   597a4:	add	r2, pc, r2
   597a8:	add	r1, pc, r1
   597ac:	mov	r0, #0
   597b0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   597b4:	bl	6fb4 <__stack_chk_fail@plt>
   597b8:			; <UNDEFINED> instruction: 0x0003e4bc
   597bc:	andeq	r0, r0, ip, lsr r4
   597c0:	andeq	ip, r1, r4, ror #26
   597c4:	ldrdeq	sl, [r1], -r8
   597c8:	andeq	r6, r1, r0, asr #5
   597cc:	andeq	ip, r1, ip, lsr sp
   597d0:	muleq	r1, r8, r2
   597d4:	andeq	sp, r1, r0, lsr r5
   597d8:	andeq	r0, r0, r9, asr #4
   597dc:	andeq	ip, r1, r0, lsl sp
   597e0:	andeq	sp, r1, r8, lsl r5
   597e4:	andeq	r6, r1, ip, ror #4
   597e8:	andeq	r0, r0, sl, asr #4
   597ec:	ldr	r3, [pc, #276]	; 59908 <blkid_probe_get_size@plt+0x523f0>
   597f0:	ldr	r2, [pc, #276]	; 5990c <blkid_probe_get_size@plt+0x523f4>
   597f4:	add	r3, pc, r3
   597f8:	push	{r4, lr}
   597fc:	sub	sp, sp, #120	; 0x78
   59800:	ldr	r4, [r3, r2]
   59804:	subs	ip, r0, #0
   59808:	ldr	r3, [r4]
   5980c:	str	r3, [sp, #116]	; 0x74
   59810:	beq	59884 <blkid_probe_get_size@plt+0x5236c>
   59814:	ldr	r1, [ip, #4]
   59818:	cmp	r1, #0
   5981c:	beq	598ac <blkid_probe_get_size@plt+0x52394>
   59820:	ldrsb	r3, [ip]
   59824:	cmp	r3, #17
   59828:	bne	598d8 <blkid_probe_get_size@plt+0x523c0>
   5982c:	add	r2, sp, #8
   59830:	mov	r0, #3
   59834:	bl	6a2c <__xstat64@plt>
   59838:	cmp	r0, #0
   5983c:	blt	59850 <blkid_probe_get_size@plt+0x52338>
   59840:	ldr	r3, [sp, #24]
   59844:	and	r3, r3, #61440	; 0xf000
   59848:	cmp	r3, #32768	; 0x8000
   5984c:	beq	5986c <blkid_probe_get_size@plt+0x52354>
   59850:	mov	r0, #0
   59854:	ldr	r2, [sp, #116]	; 0x74
   59858:	ldr	r3, [r4]
   5985c:	cmp	r2, r3
   59860:	bne	59904 <blkid_probe_get_size@plt+0x523ec>
   59864:	add	sp, sp, #120	; 0x78
   59868:	pop	{r4, pc}
   5986c:	ldrd	r2, [sp, #56]	; 0x38
   59870:	cmp	r2, #1
   59874:	sbcs	r3, r3, #0
   59878:	movge	r0, #1
   5987c:	movlt	r0, #0
   59880:	b	59854 <blkid_probe_get_size@plt+0x5233c>
   59884:	ldr	r2, [pc, #132]	; 59910 <blkid_probe_get_size@plt+0x523f8>
   59888:	ldr	r1, [pc, #132]	; 59914 <blkid_probe_get_size@plt+0x523fc>
   5988c:	add	r2, pc, r2
   59890:	add	r2, r2, #56	; 0x38
   59894:	str	r2, [sp]
   59898:	ldr	r2, [pc, #120]	; 59918 <blkid_probe_get_size@plt+0x52400>
   5989c:	mov	r3, #572	; 0x23c
   598a0:	add	r2, pc, r2
   598a4:	add	r1, pc, r1
   598a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   598ac:	ldr	r3, [pc, #104]	; 5991c <blkid_probe_get_size@plt+0x52404>
   598b0:	mov	r0, r1
   598b4:	add	r3, pc, r3
   598b8:	ldr	r2, [pc, #96]	; 59920 <blkid_probe_get_size@plt+0x52408>
   598bc:	ldr	r1, [pc, #96]	; 59924 <blkid_probe_get_size@plt+0x5240c>
   598c0:	add	r3, r3, #56	; 0x38
   598c4:	str	r3, [sp]
   598c8:	add	r2, pc, r2
   598cc:	ldr	r3, [pc, #84]	; 59928 <blkid_probe_get_size@plt+0x52410>
   598d0:	add	r1, pc, r1
   598d4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   598d8:	ldr	r2, [pc, #76]	; 5992c <blkid_probe_get_size@plt+0x52414>
   598dc:	ldr	r1, [pc, #76]	; 59930 <blkid_probe_get_size@plt+0x52418>
   598e0:	add	r2, pc, r2
   598e4:	add	r2, r2, #56	; 0x38
   598e8:	str	r2, [sp]
   598ec:	ldr	r2, [pc, #64]	; 59934 <blkid_probe_get_size@plt+0x5241c>
   598f0:	ldr	r3, [pc, #64]	; 59938 <blkid_probe_get_size@plt+0x52420>
   598f4:	add	r2, pc, r2
   598f8:	add	r1, pc, r1
   598fc:	mov	r0, #0
   59900:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59904:	bl	6fb4 <__stack_chk_fail@plt>
   59908:	andeq	lr, r3, r4, ror r3
   5990c:	andeq	r0, r0, ip, lsr r4
   59910:	andeq	ip, r1, r4, lsl ip
   59914:	andeq	r9, r1, r8, lsl #31
   59918:	andeq	r6, r1, r0, ror r1
   5991c:	andeq	ip, r1, ip, ror #23
   59920:	andeq	r6, r1, r8, asr #2
   59924:	andeq	sp, r1, r0, ror #7
   59928:	andeq	r0, r0, sp, lsr r2
   5992c:	andeq	ip, r1, r0, asr #23
   59930:	strdeq	sp, [r1], -r0
   59934:	andeq	r6, r1, ip, lsl r1
   59938:	andeq	r0, r0, lr, lsr r2
   5993c:	push	{r4, r5, r6, lr}
   59940:	subs	r5, r0, #0
   59944:	beq	599b8 <blkid_probe_get_size@plt+0x524a0>
   59948:	ldrb	r4, [r5]
   5994c:	cmp	r4, #0
   59950:	beq	599b0 <blkid_probe_get_size@plt+0x52498>
   59954:	mov	r6, r1
   59958:	ldr	r1, [pc, #108]	; 599cc <blkid_probe_get_size@plt+0x524b4>
   5995c:	add	r1, pc, r1
   59960:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   59964:	cmp	r0, #0
   59968:	beq	599ac <blkid_probe_get_size@plt+0x52494>
   5996c:	mov	r0, r5
   59970:	bl	3fa14 <blkid_probe_get_size@plt+0x384fc>
   59974:	subs	r4, r0, #0
   59978:	beq	599c4 <blkid_probe_get_size@plt+0x524ac>
   5997c:	orr	r1, r6, #16384	; 0x4000
   59980:	mov	r2, #0
   59984:	bl	6ec4 <open64@plt>
   59988:	subs	r5, r0, #0
   5998c:	bge	5999c <blkid_probe_get_size@plt+0x52484>
   59990:	bl	732c <__errno_location@plt>
   59994:	ldr	r5, [r0]
   59998:	rsb	r5, r5, #0
   5999c:	mov	r0, r4
   599a0:	bl	69f0 <free@plt>
   599a4:	mov	r0, r5
   599a8:	pop	{r4, r5, r6, pc}
   599ac:	mov	r4, r0
   599b0:	mvn	r5, #21
   599b4:	b	5999c <blkid_probe_get_size@plt+0x52484>
   599b8:	mov	r4, r5
   599bc:	mvn	r5, #21
   599c0:	b	5999c <blkid_probe_get_size@plt+0x52484>
   599c4:	mvn	r5, #11
   599c8:	b	5999c <blkid_probe_get_size@plt+0x52484>
   599cc:	andeq	lr, r1, r4, ror #12
   599d0:	ldr	r3, [pc, #432]	; 59b88 <blkid_probe_get_size@plt+0x52670>
   599d4:	ldr	ip, [pc, #432]	; 59b8c <blkid_probe_get_size@plt+0x52674>
   599d8:	add	r3, pc, r3
   599dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   599e0:	add	fp, sp, #28
   599e4:	sub	sp, sp, #16
   599e8:	ldr	r6, [r3, ip]
   599ec:	subs	r5, r0, #0
   599f0:	ldr	r3, [r6]
   599f4:	str	r3, [fp, #-32]	; 0xffffffe0
   599f8:	beq	59afc <blkid_probe_get_size@plt+0x525e4>
   599fc:	cmp	r1, #0
   59a00:	mov	r4, r1
   59a04:	beq	59b24 <blkid_probe_get_size@plt+0x5260c>
   59a08:	mov	r8, r2
   59a0c:	bl	7188 <ferror@plt>
   59a10:	cmp	r0, #0
   59a14:	bne	59b7c <blkid_probe_get_size@plt+0x52664>
   59a18:	ldr	r7, [pc, #368]	; 59b90 <blkid_probe_get_size@plt+0x52678>
   59a1c:	mov	r0, r4
   59a20:	add	r7, pc, r7
   59a24:	mov	r1, r7
   59a28:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   59a2c:	subs	r9, r0, #0
   59a30:	beq	59a6c <blkid_probe_get_size@plt+0x52554>
   59a34:	mov	r0, r4
   59a38:	mov	r1, r5
   59a3c:	bl	7458 <fputs@plt>
   59a40:	cmn	r0, #1
   59a44:	beq	59ac0 <blkid_probe_get_size@plt+0x525a8>
   59a48:	mov	r0, r5
   59a4c:	bl	2d034 <blkid_probe_get_size@plt+0x25b1c>
   59a50:	and	r0, r0, r0, asr #31
   59a54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59a58:	ldr	r3, [r6]
   59a5c:	cmp	r2, r3
   59a60:	bne	59b84 <blkid_probe_get_size@plt+0x5266c>
   59a64:	sub	sp, fp, #28
   59a68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   59a6c:	tst	r8, #32
   59a70:	beq	59ad0 <blkid_probe_get_size@plt+0x525b8>
   59a74:	mov	r0, r4
   59a78:	bl	723c <strlen@plt>
   59a7c:	add	r3, r0, #2
   59a80:	cmp	r3, #4194304	; 0x400000
   59a84:	bhi	59b50 <blkid_probe_get_size@plt+0x52638>
   59a88:	add	r0, r0, #16
   59a8c:	bic	r0, r0, #7
   59a90:	sub	sp, sp, r0
   59a94:	add	r8, sp, #8
   59a98:	mov	r1, r4
   59a9c:	mov	r0, r8
   59aa0:	bl	6ae0 <stpcpy@plt>
   59aa4:	ldrh	r3, [r7]
   59aa8:	mov	r1, r5
   59aac:	strh	r3, [r0]
   59ab0:	mov	r0, r8
   59ab4:	bl	7458 <fputs@plt>
   59ab8:	cmn	r0, #1
   59abc:	bne	59a48 <blkid_probe_get_size@plt+0x52530>
   59ac0:	bl	732c <__errno_location@plt>
   59ac4:	ldr	r0, [r0]
   59ac8:	rsb	r0, r0, #0
   59acc:	b	59a54 <blkid_probe_get_size@plt+0x5253c>
   59ad0:	mov	r0, r4
   59ad4:	mov	r1, r5
   59ad8:	bl	7458 <fputs@plt>
   59adc:	cmn	r0, #1
   59ae0:	beq	59ac0 <blkid_probe_get_size@plt+0x525a8>
   59ae4:	mov	r1, r5
   59ae8:	mov	r0, #10
   59aec:	bl	71c4 <fputc@plt>
   59af0:	cmn	r0, #1
   59af4:	bne	59a48 <blkid_probe_get_size@plt+0x52530>
   59af8:	b	59ac0 <blkid_probe_get_size@plt+0x525a8>
   59afc:	ldr	r2, [pc, #144]	; 59b94 <blkid_probe_get_size@plt+0x5267c>
   59b00:	ldr	r1, [pc, #144]	; 59b98 <blkid_probe_get_size@plt+0x52680>
   59b04:	add	r2, pc, r2
   59b08:	add	r2, r2, #88	; 0x58
   59b0c:	str	r2, [sp]
   59b10:	ldr	r2, [pc, #132]	; 59b9c <blkid_probe_get_size@plt+0x52684>
   59b14:	mov	r3, #40	; 0x28
   59b18:	add	r2, pc, r2
   59b1c:	add	r1, pc, r1
   59b20:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59b24:	ldr	r3, [pc, #116]	; 59ba0 <blkid_probe_get_size@plt+0x52688>
   59b28:	mov	r0, r1
   59b2c:	add	r3, pc, r3
   59b30:	ldr	r2, [pc, #108]	; 59ba4 <blkid_probe_get_size@plt+0x5268c>
   59b34:	ldr	r1, [pc, #108]	; 59ba8 <blkid_probe_get_size@plt+0x52690>
   59b38:	add	r3, r3, #88	; 0x58
   59b3c:	str	r3, [sp]
   59b40:	add	r2, pc, r2
   59b44:	mov	r3, #41	; 0x29
   59b48:	add	r1, pc, r1
   59b4c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59b50:	ldr	r3, [pc, #84]	; 59bac <blkid_probe_get_size@plt+0x52694>
   59b54:	ldr	r2, [pc, #84]	; 59bb0 <blkid_probe_get_size@plt+0x52698>
   59b58:	add	r3, pc, r3
   59b5c:	ldr	r1, [pc, #80]	; 59bb4 <blkid_probe_get_size@plt+0x5269c>
   59b60:	add	r3, r3, #88	; 0x58
   59b64:	str	r3, [sp]
   59b68:	mov	r0, r9
   59b6c:	mov	r3, #52	; 0x34
   59b70:	add	r2, pc, r2
   59b74:	add	r1, pc, r1
   59b78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59b7c:	mvn	r0, #4
   59b80:	b	59a54 <blkid_probe_get_size@plt+0x5253c>
   59b84:	bl	6fb4 <__stack_chk_fail@plt>
   59b88:	muleq	r3, r0, r1
   59b8c:	andeq	r0, r0, ip, lsr r4
   59b90:			; <UNDEFINED> instruction: 0x0000cab4
   59b94:	muleq	r1, ip, r9
   59b98:	andeq	sl, r1, r8, lsl #30
   59b9c:	andeq	r3, r1, ip, asr #22
   59ba0:	andeq	ip, r1, r4, ror r9
   59ba4:	andeq	r3, r1, r4, lsr #22
   59ba8:	andeq	ip, r0, r4, ror #26
   59bac:	andeq	ip, r1, r8, asr #18
   59bb0:	strdeq	r3, [r1], -r4
   59bb4:	andeq	fp, r0, r4, lsr #10
   59bb8:	mov	r2, #6
   59bbc:	b	7398 <memcmp@plt>
   59bc0:	mov	r2, r1
   59bc4:	mov	r1, #6
   59bc8:	b	3e47c <blkid_probe_get_size@plt+0x36f64>
   59bcc:	subs	r3, r0, #0
   59bd0:	push	{r4, r5, r6, lr}
   59bd4:	sub	sp, sp, #8
   59bd8:	beq	59c9c <blkid_probe_get_size@plt+0x52784>
   59bdc:	ldr	r1, [r3, #4]
   59be0:	cmp	r1, #0
   59be4:	beq	59cc4 <blkid_probe_get_size@plt+0x527ac>
   59be8:	ldrsb	r3, [r3]
   59bec:	cmp	r3, #16
   59bf0:	bne	59cf0 <blkid_probe_get_size@plt+0x527d8>
   59bf4:	mov	r2, #540672	; 0x84000
   59bf8:	mvn	r0, #99	; 0x63
   59bfc:	bl	6ed0 <openat64@plt>
   59c00:	mov	r4, r0
   59c04:	bl	732c <__errno_location@plt>
   59c08:	cmp	r4, #0
   59c0c:	mov	r5, r0
   59c10:	bge	59c3c <blkid_probe_get_size@plt+0x52724>
   59c14:	ldr	r3, [r0]
   59c18:	mvn	r5, r3
   59c1c:	cmp	r3, #2
   59c20:	lsr	r5, r5, #31
   59c24:	moveq	r5, #0
   59c28:	mov	r0, r4
   59c2c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   59c30:	mov	r0, r5
   59c34:	add	sp, sp, #8
   59c38:	pop	{r4, r5, r6, pc}
   59c3c:	mov	r0, r4
   59c40:	bl	7098 <fdopendir@plt>
   59c44:	subs	r6, r0, #0
   59c48:	beq	59c84 <blkid_probe_get_size@plt+0x5276c>
   59c4c:	mov	r4, #0
   59c50:	str	r4, [r5]
   59c54:	bl	6bb8 <readdir64@plt>
   59c58:	cmp	r0, #0
   59c5c:	beq	59d30 <blkid_probe_get_size@plt+0x52818>
   59c60:	add	r0, r0, #19
   59c64:	bl	3f904 <blkid_probe_get_size@plt+0x383ec>
   59c68:	cmp	r0, #0
   59c6c:	bne	59d1c <blkid_probe_get_size@plt+0x52804>
   59c70:	mov	r5, #1
   59c74:	mov	r0, r6
   59c78:	bl	6aa4 <closedir@plt>
   59c7c:	mvn	r4, #0
   59c80:	b	59c28 <blkid_probe_get_size@plt+0x52710>
   59c84:	ldr	r3, [r5]
   59c88:	subs	r5, r3, #2
   59c8c:	movne	r5, #1
   59c90:	cmp	r3, #0
   59c94:	movlt	r5, #0
   59c98:	b	59c28 <blkid_probe_get_size@plt+0x52710>
   59c9c:	ldr	r2, [pc, #168]	; 59d4c <blkid_probe_get_size@plt+0x52834>
   59ca0:	ldr	r1, [pc, #168]	; 59d50 <blkid_probe_get_size@plt+0x52838>
   59ca4:	add	r2, pc, r2
   59ca8:	add	r2, r2, #112	; 0x70
   59cac:	str	r2, [sp]
   59cb0:	ldr	r2, [pc, #156]	; 59d54 <blkid_probe_get_size@plt+0x5283c>
   59cb4:	ldr	r3, [pc, #156]	; 59d58 <blkid_probe_get_size@plt+0x52840>
   59cb8:	add	r2, pc, r2
   59cbc:	add	r1, pc, r1
   59cc0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59cc4:	ldr	r3, [pc, #144]	; 59d5c <blkid_probe_get_size@plt+0x52844>
   59cc8:	mov	r0, r1
   59ccc:	add	r3, pc, r3
   59cd0:	ldr	r2, [pc, #136]	; 59d60 <blkid_probe_get_size@plt+0x52848>
   59cd4:	ldr	r1, [pc, #136]	; 59d64 <blkid_probe_get_size@plt+0x5284c>
   59cd8:	add	r3, r3, #112	; 0x70
   59cdc:	str	r3, [sp]
   59ce0:	add	r2, pc, r2
   59ce4:	ldr	r3, [pc, #124]	; 59d68 <blkid_probe_get_size@plt+0x52850>
   59ce8:	add	r1, pc, r1
   59cec:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59cf0:	ldr	r2, [pc, #116]	; 59d6c <blkid_probe_get_size@plt+0x52854>
   59cf4:	ldr	r1, [pc, #116]	; 59d70 <blkid_probe_get_size@plt+0x52858>
   59cf8:	add	r2, pc, r2
   59cfc:	add	r2, r2, #112	; 0x70
   59d00:	str	r2, [sp]
   59d04:	ldr	r2, [pc, #104]	; 59d74 <blkid_probe_get_size@plt+0x5285c>
   59d08:	ldr	r3, [pc, #104]	; 59d78 <blkid_probe_get_size@plt+0x52860>
   59d0c:	add	r2, pc, r2
   59d10:	add	r1, pc, r1
   59d14:	mov	r0, #0
   59d18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59d1c:	str	r4, [r5]
   59d20:	mov	r0, r6
   59d24:	bl	6bb8 <readdir64@plt>
   59d28:	cmp	r0, #0
   59d2c:	bne	59c60 <blkid_probe_get_size@plt+0x52748>
   59d30:	ldr	r5, [r5]
   59d34:	cmp	r5, #0
   59d38:	movle	r5, #0
   59d3c:	ble	59c74 <blkid_probe_get_size@plt+0x5275c>
   59d40:	subs	r5, r5, #2
   59d44:	movne	r5, #1
   59d48:	b	59c74 <blkid_probe_get_size@plt+0x5275c>
   59d4c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   59d50:	andeq	r9, r1, r0, ror fp
   59d54:	andeq	r5, r1, r8, asr sp
   59d58:	andeq	r0, r0, r1, lsr r2
   59d5c:	ldrdeq	ip, [r1], -r4
   59d60:	andeq	r5, r1, r0, lsr sp
   59d64:	andeq	ip, r1, r8, asr #31
   59d68:	andeq	r0, r0, r2, lsr r2
   59d6c:	andeq	ip, r1, r8, lsr #15
   59d70:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   59d74:	andeq	r5, r1, r4, lsl #26
   59d78:	andeq	r0, r0, r3, lsr r2
   59d7c:	subs	r3, r0, #0
   59d80:	push	{lr}		; (str lr, [sp, #-4]!)
   59d84:	sub	sp, sp, #12
   59d88:	beq	59dbc <blkid_probe_get_size@plt+0x528a4>
   59d8c:	ldr	r0, [r3, #4]
   59d90:	cmp	r0, #0
   59d94:	beq	59de4 <blkid_probe_get_size@plt+0x528cc>
   59d98:	ldrsb	r3, [r3]
   59d9c:	cmp	r3, #15
   59da0:	bne	59e0c <blkid_probe_get_size@plt+0x528f4>
   59da4:	bl	3def8 <blkid_probe_get_size@plt+0x369e0>
   59da8:	cmp	r0, #0
   59dac:	movgt	r0, #0
   59db0:	movle	r0, #1
   59db4:	add	sp, sp, #12
   59db8:	pop	{pc}		; (ldr pc, [sp], #4)
   59dbc:	ldr	r2, [pc, #116]	; 59e38 <blkid_probe_get_size@plt+0x52920>
   59dc0:	ldr	r1, [pc, #116]	; 59e3c <blkid_probe_get_size@plt+0x52924>
   59dc4:	add	r2, pc, r2
   59dc8:	add	r2, r2, #148	; 0x94
   59dcc:	str	r2, [sp]
   59dd0:	ldr	r2, [pc, #104]	; 59e40 <blkid_probe_get_size@plt+0x52928>
   59dd4:	ldr	r3, [pc, #104]	; 59e44 <blkid_probe_get_size@plt+0x5292c>
   59dd8:	add	r2, pc, r2
   59ddc:	add	r1, pc, r1
   59de0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59de4:	ldr	r3, [pc, #92]	; 59e48 <blkid_probe_get_size@plt+0x52930>
   59de8:	ldr	r2, [pc, #92]	; 59e4c <blkid_probe_get_size@plt+0x52934>
   59dec:	add	r3, pc, r3
   59df0:	ldr	r1, [pc, #88]	; 59e50 <blkid_probe_get_size@plt+0x52938>
   59df4:	add	r3, r3, #148	; 0x94
   59df8:	str	r3, [sp]
   59dfc:	add	r2, pc, r2
   59e00:	mov	r3, #552	; 0x228
   59e04:	add	r1, pc, r1
   59e08:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59e0c:	ldr	r2, [pc, #64]	; 59e54 <blkid_probe_get_size@plt+0x5293c>
   59e10:	ldr	r1, [pc, #64]	; 59e58 <blkid_probe_get_size@plt+0x52940>
   59e14:	add	r2, pc, r2
   59e18:	add	r2, r2, #148	; 0x94
   59e1c:	str	r2, [sp]
   59e20:	ldr	r2, [pc, #52]	; 59e5c <blkid_probe_get_size@plt+0x52944>
   59e24:	ldr	r3, [pc, #52]	; 59e60 <blkid_probe_get_size@plt+0x52948>
   59e28:	add	r2, pc, r2
   59e2c:	add	r1, pc, r1
   59e30:	mov	r0, #0
   59e34:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59e38:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   59e3c:	andeq	r9, r1, r0, asr sl
   59e40:	andeq	r5, r1, r8, lsr ip
   59e44:	andeq	r0, r0, r7, lsr #4
   59e48:			; <UNDEFINED> instruction: 0x0001c6b4
   59e4c:	andeq	r5, r1, r4, lsl ip
   59e50:	andeq	ip, r1, ip, lsr #29
   59e54:	andeq	ip, r1, ip, lsl #13
   59e58:	andeq	ip, r1, ip, lsl #30
   59e5c:	andeq	r5, r1, r8, ror #23
   59e60:	andeq	r0, r0, r9, lsr #4
   59e64:	ldr	r3, [pc, #1184]	; 5a30c <blkid_probe_get_size@plt+0x52df4>
   59e68:	ldr	r2, [pc, #1184]	; 5a310 <blkid_probe_get_size@plt+0x52df8>
   59e6c:	add	r3, pc, r3
   59e70:	push	{r4, r5, r6, r7, r8, r9, lr}
   59e74:	sub	sp, sp, #252	; 0xfc
   59e78:	ldr	r5, [r3, r2]
   59e7c:	subs	r1, r0, #0
   59e80:	ldr	r3, [r5]
   59e84:	str	r3, [sp, #244]	; 0xf4
   59e88:	beq	59fc4 <blkid_probe_get_size@plt+0x52aac>
   59e8c:	ldr	r6, [r1, #4]
   59e90:	cmp	r6, #0
   59e94:	beq	59fec <blkid_probe_get_size@plt+0x52ad4>
   59e98:	ldrsb	r3, [r1]
   59e9c:	cmp	r3, #14
   59ea0:	bne	5a018 <blkid_probe_get_size@plt+0x52b00>
   59ea4:	ldr	r1, [pc, #1128]	; 5a314 <blkid_probe_get_size@plt+0x52dfc>
   59ea8:	mov	r4, #0
   59eac:	add	r1, pc, r1
   59eb0:	mov	r0, r6
   59eb4:	str	r4, [sp, #12]
   59eb8:	bl	3fc38 <blkid_probe_get_size@plt+0x38720>
   59ebc:	cmp	r0, r4
   59ec0:	beq	59f08 <blkid_probe_get_size@plt+0x529f0>
   59ec4:	mov	r0, r6
   59ec8:	add	r3, sp, #12
   59ecc:	mov	r2, #32
   59ed0:	mov	r1, r4
   59ed4:	bl	2d7ac <blkid_probe_get_size@plt+0x26294>
   59ed8:	cmp	r0, r4
   59edc:	blt	5a100 <blkid_probe_get_size@plt+0x52be8>
   59ee0:	ldr	r6, [sp, #12]
   59ee4:	mov	r1, #2621440	; 0x280000
   59ee8:	mov	r0, r6
   59eec:	bl	5993c <blkid_probe_get_size@plt+0x52424>
   59ef0:	subs	r4, r0, #0
   59ef4:	bge	59f3c <blkid_probe_get_size@plt+0x52a24>
   59ef8:	bl	732c <__errno_location@plt>
   59efc:	ldr	r6, [r0]
   59f00:	lsr	r6, r6, #31
   59f04:	b	59f10 <blkid_probe_get_size@plt+0x529f8>
   59f08:	mov	r6, #1
   59f0c:	mvn	r4, #0
   59f10:	mov	r0, r4
   59f14:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   59f18:	ldr	r0, [sp, #12]
   59f1c:	bl	69f0 <free@plt>
   59f20:	ldr	r2, [sp, #244]	; 0xf4
   59f24:	ldr	r3, [r5]
   59f28:	mov	r0, r6
   59f2c:	cmp	r2, r3
   59f30:	bne	5a308 <blkid_probe_get_size@plt+0x52df0>
   59f34:	add	sp, sp, #252	; 0xfc
   59f38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   59f3c:	cmp	r6, #0
   59f40:	beq	5a2c0 <blkid_probe_get_size@plt+0x52da8>
   59f44:	mov	r0, r6
   59f48:	bl	723c <strlen@plt>
   59f4c:	cmp	r0, #0
   59f50:	addne	r1, r6, r0
   59f54:	movne	r3, r0
   59f58:	beq	5a044 <blkid_probe_get_size@plt+0x52b2c>
   59f5c:	ldrb	r2, [r1, #-1]!
   59f60:	sub	r3, r3, #1
   59f64:	cmp	r2, #47	; 0x2f
   59f68:	bne	5a1a4 <blkid_probe_get_size@plt+0x52c8c>
   59f6c:	cmp	r3, #0
   59f70:	bne	59f5c <blkid_probe_get_size@plt+0x52a44>
   59f74:	sub	r0, r0, #1
   59f78:	add	r6, r6, r0
   59f7c:	mov	r2, #0
   59f80:	mvn	r3, #0
   59f84:	cmp	r6, #0
   59f88:	str	r2, [sp, #16]
   59f8c:	strd	r2, [sp, #20]
   59f90:	str	r3, [sp, #28]
   59f94:	bne	5a058 <blkid_probe_get_size@plt+0x52b40>
   59f98:	ldr	r2, [pc, #888]	; 5a318 <blkid_probe_get_size@plt+0x52e00>
   59f9c:	ldr	r1, [pc, #888]	; 5a31c <blkid_probe_get_size@plt+0x52e04>
   59fa0:	add	r2, pc, r2
   59fa4:	add	r2, r2, #220	; 0xdc
   59fa8:	str	r2, [sp]
   59fac:	ldr	r2, [pc, #876]	; 5a320 <blkid_probe_get_size@plt+0x52e08>
   59fb0:	mov	r3, #137	; 0x89
   59fb4:	add	r2, pc, r2
   59fb8:	add	r1, pc, r1
   59fbc:	mov	r0, #0
   59fc0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59fc4:	ldr	r2, [pc, #856]	; 5a324 <blkid_probe_get_size@plt+0x52e0c>
   59fc8:	ldr	r1, [pc, #856]	; 5a328 <blkid_probe_get_size@plt+0x52e10>
   59fcc:	add	r2, pc, r2
   59fd0:	add	r2, r2, #184	; 0xb8
   59fd4:	str	r2, [sp]
   59fd8:	ldr	r2, [pc, #844]	; 5a32c <blkid_probe_get_size@plt+0x52e14>
   59fdc:	ldr	r3, [pc, #844]	; 5a330 <blkid_probe_get_size@plt+0x52e18>
   59fe0:	add	r2, pc, r2
   59fe4:	add	r1, pc, r1
   59fe8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   59fec:	ldr	r3, [pc, #832]	; 5a334 <blkid_probe_get_size@plt+0x52e1c>
   59ff0:	ldr	r2, [pc, #832]	; 5a338 <blkid_probe_get_size@plt+0x52e20>
   59ff4:	add	r3, pc, r3
   59ff8:	ldr	r1, [pc, #828]	; 5a33c <blkid_probe_get_size@plt+0x52e24>
   59ffc:	add	r3, r3, #184	; 0xb8
   5a000:	str	r3, [sp]
   5a004:	mov	r0, r6
   5a008:	mov	r3, #544	; 0x220
   5a00c:	add	r2, pc, r2
   5a010:	add	r1, pc, r1
   5a014:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a018:	ldr	r2, [pc, #800]	; 5a340 <blkid_probe_get_size@plt+0x52e28>
   5a01c:	ldr	r1, [pc, #800]	; 5a344 <blkid_probe_get_size@plt+0x52e2c>
   5a020:	add	r2, pc, r2
   5a024:	add	r2, r2, #184	; 0xb8
   5a028:	str	r2, [sp]
   5a02c:	ldr	r2, [pc, #788]	; 5a348 <blkid_probe_get_size@plt+0x52e30>
   5a030:	ldr	r3, [pc, #788]	; 5a34c <blkid_probe_get_size@plt+0x52e34>
   5a034:	add	r2, pc, r2
   5a038:	add	r1, pc, r1
   5a03c:	mov	r0, #0
   5a040:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a044:	mvn	r3, #0
   5a048:	str	r0, [sp, #16]
   5a04c:	str	r0, [sp, #20]
   5a050:	str	r3, [sp, #24]
   5a054:	str	r3, [sp, #28]
   5a058:	mov	r2, #1024	; 0x400
   5a05c:	add	r7, sp, #24
   5a060:	str	r2, [sp]
   5a064:	mov	r3, r7
   5a068:	add	r2, sp, #16
   5a06c:	mov	r1, r6
   5a070:	mov	r0, r4
   5a074:	bl	39ec0 <blkid_probe_get_size@plt+0x329a8>
   5a078:	cmn	r0, #22
   5a07c:	beq	5a094 <blkid_probe_get_size@plt+0x52b7c>
   5a080:	bgt	5a10c <blkid_probe_get_size@plt+0x52bf4>
   5a084:	cmn	r0, #75	; 0x4b
   5a088:	beq	5a094 <blkid_probe_get_size@plt+0x52b7c>
   5a08c:	cmn	r0, #38	; 0x26
   5a090:	bne	5a11c <blkid_probe_get_size@plt+0x52c04>
   5a094:	mov	r3, r7
   5a098:	mov	r2, #1024	; 0x400
   5a09c:	mov	r1, r6
   5a0a0:	mov	r0, r4
   5a0a4:	bl	41af8 <blkid_probe_get_size@plt+0x3a5e0>
   5a0a8:	cmn	r0, #13
   5a0ac:	beq	5a1e0 <blkid_probe_get_size@plt+0x52cc8>
   5a0b0:	cmn	r0, #1
   5a0b4:	beq	5a1e0 <blkid_probe_get_size@plt+0x52cc8>
   5a0b8:	cmn	r0, #95	; 0x5f
   5a0bc:	beq	5a1e0 <blkid_probe_get_size@plt+0x52cc8>
   5a0c0:	cmp	r0, #0
   5a0c4:	blt	5a198 <blkid_probe_get_size@plt+0x52c80>
   5a0c8:	ldr	r1, [pc, #640]	; 5a350 <blkid_probe_get_size@plt+0x52e38>
   5a0cc:	add	r3, sp, #28
   5a0d0:	mov	r2, #4096	; 0x1000
   5a0d4:	add	r1, pc, r1
   5a0d8:	mov	r0, r4
   5a0dc:	bl	41af8 <blkid_probe_get_size@plt+0x3a5e0>
   5a0e0:	cmp	r0, #0
   5a0e4:	blt	5a198 <blkid_probe_get_size@plt+0x52c80>
   5a0e8:	ldrd	r2, [sp, #24]
   5a0ec:	cmp	r2, r3
   5a0f0:	beq	5a300 <blkid_probe_get_size@plt+0x52de8>
   5a0f4:	ldr	r8, [sp, #20]
   5a0f8:	mov	r6, #1
   5a0fc:	b	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a100:	mov	r6, r4
   5a104:	mvn	r4, #0
   5a108:	b	59f10 <blkid_probe_get_size@plt+0x529f8>
   5a10c:	cmn	r0, #13
   5a110:	beq	5a094 <blkid_probe_get_size@plt+0x52b7c>
   5a114:	cmn	r0, #1
   5a118:	beq	5a094 <blkid_probe_get_size@plt+0x52b7c>
   5a11c:	cmn	r0, #95	; 0x5f
   5a120:	beq	5a284 <blkid_probe_get_size@plt+0x52d6c>
   5a124:	cmp	r0, #0
   5a128:	blt	5a198 <blkid_probe_get_size@plt+0x52c80>
   5a12c:	ldr	r1, [pc, #544]	; 5a354 <blkid_probe_get_size@plt+0x52e3c>
   5a130:	mov	r3, #4096	; 0x1000
   5a134:	str	r3, [sp]
   5a138:	add	r2, sp, #20
   5a13c:	add	r3, sp, #28
   5a140:	add	r1, pc, r1
   5a144:	mov	r0, r4
   5a148:	bl	39ec0 <blkid_probe_get_size@plt+0x329a8>
   5a14c:	cmn	r0, #95	; 0x5f
   5a150:	beq	5a0f4 <blkid_probe_get_size@plt+0x52bdc>
   5a154:	cmp	r0, #0
   5a158:	ldr	r8, [sp, #20]
   5a15c:	blt	5a19c <blkid_probe_get_size@plt+0x52c84>
   5a160:	ldr	r0, [sp, #16]
   5a164:	ldr	r3, [r8]
   5a168:	ldr	r2, [r0]
   5a16c:	cmp	r2, r3
   5a170:	beq	5a2d8 <blkid_probe_get_size@plt+0x52dc0>
   5a174:	ldr	r6, [sp, #24]
   5a178:	ldr	r3, [sp, #28]
   5a17c:	subs	r6, r6, r3
   5a180:	movne	r6, #1
   5a184:	mov	r0, r8
   5a188:	bl	69f0 <free@plt>
   5a18c:	ldr	r0, [sp, #16]
   5a190:	bl	69f0 <free@plt>
   5a194:	b	59f10 <blkid_probe_get_size@plt+0x529f8>
   5a198:	ldr	r8, [sp, #20]
   5a19c:	mov	r6, #0
   5a1a0:	b	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a1a4:	add	r3, r6, r3
   5a1a8:	rsb	r1, r6, #1
   5a1ac:	b	5a1b4 <blkid_probe_get_size@plt+0x52c9c>
   5a1b0:	ldrb	r2, [r3, #-1]!
   5a1b4:	cmp	r2, #47	; 0x2f
   5a1b8:	add	r2, r1, r3
   5a1bc:	beq	5a268 <blkid_probe_get_size@plt+0x52d50>
   5a1c0:	cmp	r3, r6
   5a1c4:	bne	5a1b0 <blkid_probe_get_size@plt+0x52c98>
   5a1c8:	mov	r2, #0
   5a1cc:	mvn	r3, #0
   5a1d0:	str	r2, [sp, #16]
   5a1d4:	strd	r2, [sp, #20]
   5a1d8:	str	r3, [sp, #28]
   5a1dc:	b	5a058 <blkid_probe_get_size@plt+0x52b40>
   5a1e0:	mov	r9, #1
   5a1e4:	mov	r3, #0
   5a1e8:	str	r3, [sp]
   5a1ec:	mov	r2, r6
   5a1f0:	add	r3, sp, #32
   5a1f4:	mov	r1, r4
   5a1f8:	mov	r0, #3
   5a1fc:	bl	720c <__fxstatat64@plt>
   5a200:	cmp	r0, #0
   5a204:	blt	5a270 <blkid_probe_get_size@plt+0x52d58>
   5a208:	ldr	r2, [pc, #328]	; 5a358 <blkid_probe_get_size@plt+0x52e40>
   5a20c:	mov	r3, #4096	; 0x1000
   5a210:	str	r3, [sp]
   5a214:	add	r2, pc, r2
   5a218:	add	r3, sp, #136	; 0x88
   5a21c:	mov	r1, r4
   5a220:	mov	r0, #3
   5a224:	bl	720c <__fxstatat64@plt>
   5a228:	cmp	r0, #0
   5a22c:	blt	5a270 <blkid_probe_get_size@plt+0x52d58>
   5a230:	ldrd	r6, [sp, #32]
   5a234:	ldrd	r2, [sp, #136]	; 0x88
   5a238:	ldr	r8, [sp, #20]
   5a23c:	cmp	r7, r3
   5a240:	cmpeq	r6, r2
   5a244:	movne	r6, r9
   5a248:	bne	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a24c:	ldrd	r0, [sp, #128]	; 0x80
   5a250:	ldrd	r2, [sp, #232]	; 0xe8
   5a254:	cmp	r1, r3
   5a258:	cmpeq	r0, r2
   5a25c:	moveq	r6, #1
   5a260:	movne	r6, #0
   5a264:	b	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a268:	add	r6, r6, r2
   5a26c:	b	59f7c <blkid_probe_get_size@plt+0x52a64>
   5a270:	bl	732c <__errno_location@plt>
   5a274:	ldr	r8, [sp, #20]
   5a278:	ldr	r6, [r0]
   5a27c:	lsr	r6, r6, #31
   5a280:	b	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a284:	ldr	r1, [pc, #208]	; 5a35c <blkid_probe_get_size@plt+0x52e44>
   5a288:	mov	r3, #4096	; 0x1000
   5a28c:	str	r3, [sp]
   5a290:	add	r2, sp, #20
   5a294:	add	r3, sp, #28
   5a298:	add	r1, pc, r1
   5a29c:	mov	r0, r4
   5a2a0:	bl	39ec0 <blkid_probe_get_size@plt+0x329a8>
   5a2a4:	cmn	r0, #95	; 0x5f
   5a2a8:	beq	5a094 <blkid_probe_get_size@plt+0x52b7c>
   5a2ac:	cmp	r0, #0
   5a2b0:	ldr	r8, [sp, #20]
   5a2b4:	blt	5a19c <blkid_probe_get_size@plt+0x52c84>
   5a2b8:	mov	r6, #1
   5a2bc:	b	5a184 <blkid_probe_get_size@plt+0x52c6c>
   5a2c0:	mvn	r3, #0
   5a2c4:	str	r6, [sp, #16]
   5a2c8:	str	r6, [sp, #20]
   5a2cc:	str	r3, [sp, #24]
   5a2d0:	str	r3, [sp, #28]
   5a2d4:	b	59f98 <blkid_probe_get_size@plt+0x52a80>
   5a2d8:	ldr	r1, [r0, #4]
   5a2dc:	ldr	r3, [r8, #4]
   5a2e0:	cmp	r1, r3
   5a2e4:	bne	5a174 <blkid_probe_get_size@plt+0x52c5c>
   5a2e8:	add	r0, r0, #8
   5a2ec:	add	r1, r8, #8
   5a2f0:	bl	7398 <memcmp@plt>
   5a2f4:	cmp	r0, #0
   5a2f8:	beq	5a2b8 <blkid_probe_get_size@plt+0x52da0>
   5a2fc:	b	5a174 <blkid_probe_get_size@plt+0x52c5c>
   5a300:	mov	r9, #0
   5a304:	b	5a1e4 <blkid_probe_get_size@plt+0x52ccc>
   5a308:	bl	6fb4 <__stack_chk_fail@plt>
   5a30c:	strdeq	sp, [r3], -ip
   5a310:	andeq	r0, r0, ip, lsr r4
   5a314:	andeq	lr, r1, r4, lsl r1
   5a318:	andeq	ip, r1, r0, lsl #10
   5a31c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   5a320:	andeq	r5, r1, r4, lsr #30
   5a324:	ldrdeq	ip, [r1], -r4
   5a328:	andeq	r9, r1, r8, asr #16
   5a32c:	andeq	r5, r1, r0, lsr sl
   5a330:	andeq	r0, r0, pc, lsl r2
   5a334:	andeq	ip, r1, ip, lsr #9
   5a338:	andeq	r5, r1, r4, lsl #20
   5a33c:	andeq	ip, r1, r0, lsr #25
   5a340:	andeq	ip, r1, r0, lsl #9
   5a344:	andeq	ip, r1, r8, lsr #26
   5a348:	ldrdeq	r5, [r1], -ip
   5a34c:	andeq	r0, r0, r1, lsr #4
   5a350:	andeq	ip, r0, r8, lsl r4
   5a354:	andeq	ip, r0, ip, lsr #7
   5a358:	ldrdeq	ip, [r0], -r8
   5a35c:	andeq	ip, r0, r4, asr r2
   5a360:	ldr	r3, [pc, #280]	; 5a480 <blkid_probe_get_size@plt+0x52f68>
   5a364:	ldr	r2, [pc, #280]	; 5a484 <blkid_probe_get_size@plt+0x52f6c>
   5a368:	add	r3, pc, r3
   5a36c:	push	{r4, lr}
   5a370:	sub	sp, sp, #120	; 0x78
   5a374:	ldr	r4, [r3, r2]
   5a378:	subs	ip, r0, #0
   5a37c:	ldr	r3, [r4]
   5a380:	str	r3, [sp, #116]	; 0x74
   5a384:	beq	5a3fc <blkid_probe_get_size@plt+0x52ee4>
   5a388:	ldr	r1, [ip, #4]
   5a38c:	cmp	r1, #0
   5a390:	beq	5a424 <blkid_probe_get_size@plt+0x52f0c>
   5a394:	ldrsb	r3, [ip]
   5a398:	cmp	r3, #13
   5a39c:	bne	5a450 <blkid_probe_get_size@plt+0x52f38>
   5a3a0:	add	r2, sp, #8
   5a3a4:	mov	r0, #3
   5a3a8:	bl	7368 <__lxstat64@plt>
   5a3ac:	cmp	r0, #0
   5a3b0:	blt	5a3ec <blkid_probe_get_size@plt+0x52ed4>
   5a3b4:	ldr	r0, [sp, #24]
   5a3b8:	and	r0, r0, #61440	; 0xf000
   5a3bc:	sub	r0, r0, #40960	; 0xa000
   5a3c0:	clz	r0, r0
   5a3c4:	lsr	r0, r0, #5
   5a3c8:	ldr	r2, [sp, #116]	; 0x74
   5a3cc:	ldr	r3, [r4]
   5a3d0:	cmp	r0, #0
   5a3d4:	movle	r0, #0
   5a3d8:	movgt	r0, #1
   5a3dc:	cmp	r2, r3
   5a3e0:	bne	5a47c <blkid_probe_get_size@plt+0x52f64>
   5a3e4:	add	sp, sp, #120	; 0x78
   5a3e8:	pop	{r4, pc}
   5a3ec:	bl	732c <__errno_location@plt>
   5a3f0:	ldr	r0, [r0]
   5a3f4:	rsb	r0, r0, #0
   5a3f8:	b	5a3c8 <blkid_probe_get_size@plt+0x52eb0>
   5a3fc:	ldr	r2, [pc, #132]	; 5a488 <blkid_probe_get_size@plt+0x52f70>
   5a400:	ldr	r1, [pc, #132]	; 5a48c <blkid_probe_get_size@plt+0x52f74>
   5a404:	add	r2, pc, r2
   5a408:	add	r2, r2, #240	; 0xf0
   5a40c:	str	r2, [sp]
   5a410:	ldr	r2, [pc, #120]	; 5a490 <blkid_probe_get_size@plt+0x52f78>
   5a414:	ldr	r3, [pc, #120]	; 5a494 <blkid_probe_get_size@plt+0x52f7c>
   5a418:	add	r2, pc, r2
   5a41c:	add	r1, pc, r1
   5a420:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a424:	ldr	r3, [pc, #108]	; 5a498 <blkid_probe_get_size@plt+0x52f80>
   5a428:	mov	r0, r1
   5a42c:	add	r3, pc, r3
   5a430:	ldr	r2, [pc, #100]	; 5a49c <blkid_probe_get_size@plt+0x52f84>
   5a434:	ldr	r1, [pc, #100]	; 5a4a0 <blkid_probe_get_size@plt+0x52f88>
   5a438:	add	r3, r3, #240	; 0xf0
   5a43c:	str	r3, [sp]
   5a440:	add	r2, pc, r2
   5a444:	mov	r3, #536	; 0x218
   5a448:	add	r1, pc, r1
   5a44c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a450:	ldr	r2, [pc, #76]	; 5a4a4 <blkid_probe_get_size@plt+0x52f8c>
   5a454:	ldr	r1, [pc, #76]	; 5a4a8 <blkid_probe_get_size@plt+0x52f90>
   5a458:	add	r2, pc, r2
   5a45c:	add	r2, r2, #240	; 0xf0
   5a460:	str	r2, [sp]
   5a464:	ldr	r2, [pc, #64]	; 5a4ac <blkid_probe_get_size@plt+0x52f94>
   5a468:	ldr	r3, [pc, #64]	; 5a4b0 <blkid_probe_get_size@plt+0x52f98>
   5a46c:	add	r2, pc, r2
   5a470:	add	r1, pc, r1
   5a474:	mov	r0, #0
   5a478:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a47c:	bl	6fb4 <__stack_chk_fail@plt>
   5a480:	andeq	sp, r3, r0, lsl #16
   5a484:	andeq	r0, r0, ip, lsr r4
   5a488:	muleq	r1, ip, r0
   5a48c:	andeq	r9, r1, r0, lsl r4
   5a490:	strdeq	r5, [r1], -r8
   5a494:	andeq	r0, r0, r7, lsl r2
   5a498:	andeq	ip, r1, r4, ror r0
   5a49c:	ldrdeq	r5, [r1], -r0
   5a4a0:	andeq	ip, r1, r8, ror #16
   5a4a4:	andeq	ip, r1, r8, asr #32
   5a4a8:	andeq	ip, r1, ip, lsl r9
   5a4ac:	andeq	r5, r1, r4, lsr #11
   5a4b0:	andeq	r0, r0, r9, lsl r2
   5a4b4:	subs	r3, r0, #0
   5a4b8:	push	{lr}		; (str lr, [sp, #-4]!)
   5a4bc:	sub	sp, sp, #12
   5a4c0:	beq	5a4f8 <blkid_probe_get_size@plt+0x52fe0>
   5a4c4:	ldr	r0, [r3, #4]
   5a4c8:	cmp	r0, #0
   5a4cc:	beq	5a520 <blkid_probe_get_size@plt+0x53008>
   5a4d0:	ldrsb	r3, [r3]
   5a4d4:	cmp	r3, #12
   5a4d8:	bne	5a548 <blkid_probe_get_size@plt+0x53030>
   5a4dc:	mov	r1, #1
   5a4e0:	bl	3e0c8 <blkid_probe_get_size@plt+0x36bb0>
   5a4e4:	cmp	r0, #0
   5a4e8:	movle	r0, #0
   5a4ec:	movgt	r0, #1
   5a4f0:	add	sp, sp, #12
   5a4f4:	pop	{pc}		; (ldr pc, [sp], #4)
   5a4f8:	ldr	r2, [pc, #116]	; 5a574 <blkid_probe_get_size@plt+0x5305c>
   5a4fc:	ldr	r1, [pc, #116]	; 5a578 <blkid_probe_get_size@plt+0x53060>
   5a500:	add	r2, pc, r2
   5a504:	add	r2, r2, #280	; 0x118
   5a508:	str	r2, [sp]
   5a50c:	ldr	r2, [pc, #104]	; 5a57c <blkid_probe_get_size@plt+0x53064>
   5a510:	ldr	r3, [pc, #104]	; 5a580 <blkid_probe_get_size@plt+0x53068>
   5a514:	add	r2, pc, r2
   5a518:	add	r1, pc, r1
   5a51c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a520:	ldr	r3, [pc, #92]	; 5a584 <blkid_probe_get_size@plt+0x5306c>
   5a524:	ldr	r2, [pc, #92]	; 5a588 <blkid_probe_get_size@plt+0x53070>
   5a528:	add	r3, pc, r3
   5a52c:	ldr	r1, [pc, #88]	; 5a58c <blkid_probe_get_size@plt+0x53074>
   5a530:	add	r3, r3, #280	; 0x118
   5a534:	str	r3, [sp]
   5a538:	add	r2, pc, r2
   5a53c:	mov	r3, #528	; 0x210
   5a540:	add	r1, pc, r1
   5a544:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a548:	ldr	r2, [pc, #64]	; 5a590 <blkid_probe_get_size@plt+0x53078>
   5a54c:	ldr	r1, [pc, #64]	; 5a594 <blkid_probe_get_size@plt+0x5307c>
   5a550:	add	r2, pc, r2
   5a554:	add	r2, r2, #280	; 0x118
   5a558:	str	r2, [sp]
   5a55c:	ldr	r2, [pc, #52]	; 5a598 <blkid_probe_get_size@plt+0x53080>
   5a560:	ldr	r3, [pc, #52]	; 5a59c <blkid_probe_get_size@plt+0x53084>
   5a564:	add	r2, pc, r2
   5a568:	add	r1, pc, r1
   5a56c:	mov	r0, #0
   5a570:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a574:	andeq	fp, r1, r0, lsr #31
   5a578:	andeq	r9, r1, r4, lsl r3
   5a57c:	strdeq	r5, [r1], -ip
   5a580:	andeq	r0, r0, pc, lsl #4
   5a584:	andeq	fp, r1, r8, ror pc
   5a588:	ldrdeq	r5, [r1], -r8
   5a58c:	andeq	ip, r1, r0, ror r7
   5a590:	andeq	fp, r1, r0, asr pc
   5a594:	andeq	ip, r1, r0, asr r8
   5a598:	andeq	r5, r1, ip, lsr #9
   5a59c:	andeq	r0, r0, r1, lsl r2
   5a5a0:	ldr	r3, [pc, #392]	; 5a730 <blkid_probe_get_size@plt+0x53218>
   5a5a4:	ldr	r2, [pc, #392]	; 5a734 <blkid_probe_get_size@plt+0x5321c>
   5a5a8:	add	r3, pc, r3
   5a5ac:	push	{r4, r5, r6, r7, lr}
   5a5b0:	sub	sp, sp, #52	; 0x34
   5a5b4:	ldr	r7, [r3, r2]
   5a5b8:	subs	r1, r0, #0
   5a5bc:	ldr	r2, [r7]
   5a5c0:	str	r2, [sp, #44]	; 0x2c
   5a5c4:	beq	5a6ac <blkid_probe_get_size@plt+0x53194>
   5a5c8:	ldr	r6, [r1, #4]
   5a5cc:	cmp	r6, #0
   5a5d0:	beq	5a6d4 <blkid_probe_get_size@plt+0x531bc>
   5a5d4:	ldrsb	r2, [r1]
   5a5d8:	cmp	r2, #11
   5a5dc:	bne	5a700 <blkid_probe_get_size@plt+0x531e8>
   5a5e0:	ldr	r1, [pc, #336]	; 5a738 <blkid_probe_get_size@plt+0x53220>
   5a5e4:	add	r5, sp, #8
   5a5e8:	ldr	r2, [pc, #332]	; 5a73c <blkid_probe_get_size@plt+0x53224>
   5a5ec:	ldr	r0, [pc, #332]	; 5a740 <blkid_probe_get_size@plt+0x53228>
   5a5f0:	mov	r4, #0
   5a5f4:	add	r1, pc, r1
   5a5f8:	str	r4, [r5, #4]
   5a5fc:	add	r0, pc, r0
   5a600:	str	r4, [sp, #8]
   5a604:	str	r4, [r5, #12]
   5a608:	str	r4, [r5, #8]
   5a60c:	str	r1, [sp, #24]
   5a610:	ldr	r1, [pc, #300]	; 5a744 <blkid_probe_get_size@plt+0x5322c>
   5a614:	str	r0, [sp, #28]
   5a618:	ldr	r0, [r3, r2]
   5a61c:	ldr	r2, [pc, #292]	; 5a748 <blkid_probe_get_size@plt+0x53230>
   5a620:	str	r0, [sp, #32]
   5a624:	ldr	r1, [r3, r1]
   5a628:	str	r1, [sp, #36]	; 0x24
   5a62c:	ldr	r3, [r3, r2]
   5a630:	str	r3, [sp, #40]	; 0x28
   5a634:	bl	732c <__errno_location@plt>
   5a638:	mov	r3, r5
   5a63c:	mov	r2, r4
   5a640:	ldr	r1, [pc, #260]	; 5a74c <blkid_probe_get_size@plt+0x53234>
   5a644:	str	r4, [r0]
   5a648:	mov	r0, r6
   5a64c:	bl	6e40 <glob64@plt>
   5a650:	bic	r3, r0, #2
   5a654:	cmp	r3, #1
   5a658:	mov	r6, r0
   5a65c:	beq	5a668 <blkid_probe_get_size@plt+0x53150>
   5a660:	cmp	r0, r4
   5a664:	beq	5a690 <blkid_probe_get_size@plt+0x53178>
   5a668:	mov	r6, r4
   5a66c:	mov	r0, r5
   5a670:	bl	6e34 <globfree64@plt>
   5a674:	ldr	r2, [sp, #44]	; 0x2c
   5a678:	ldr	r3, [r7]
   5a67c:	mov	r0, r6
   5a680:	cmp	r2, r3
   5a684:	bne	5a72c <blkid_probe_get_size@plt+0x53214>
   5a688:	add	sp, sp, #52	; 0x34
   5a68c:	pop	{r4, r5, r6, r7, pc}
   5a690:	ldr	r3, [sp, #12]
   5a694:	cmp	r3, r4
   5a698:	beq	5a66c <blkid_probe_get_size@plt+0x53154>
   5a69c:	ldr	r6, [r3]
   5a6a0:	subs	r6, r6, r4
   5a6a4:	movne	r6, #1
   5a6a8:	b	5a66c <blkid_probe_get_size@plt+0x53154>
   5a6ac:	ldr	r2, [pc, #156]	; 5a750 <blkid_probe_get_size@plt+0x53238>
   5a6b0:	ldr	r1, [pc, #156]	; 5a754 <blkid_probe_get_size@plt+0x5323c>
   5a6b4:	add	r2, pc, r2
   5a6b8:	add	r2, r2, #316	; 0x13c
   5a6bc:	str	r2, [sp]
   5a6c0:	ldr	r2, [pc, #144]	; 5a758 <blkid_probe_get_size@plt+0x53240>
   5a6c4:	ldr	r3, [pc, #144]	; 5a75c <blkid_probe_get_size@plt+0x53244>
   5a6c8:	add	r2, pc, r2
   5a6cc:	add	r1, pc, r1
   5a6d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a6d4:	ldr	r3, [pc, #132]	; 5a760 <blkid_probe_get_size@plt+0x53248>
   5a6d8:	ldr	r2, [pc, #132]	; 5a764 <blkid_probe_get_size@plt+0x5324c>
   5a6dc:	add	r3, pc, r3
   5a6e0:	ldr	r1, [pc, #128]	; 5a768 <blkid_probe_get_size@plt+0x53250>
   5a6e4:	add	r3, r3, #316	; 0x13c
   5a6e8:	str	r3, [sp]
   5a6ec:	mov	r0, r6
   5a6f0:	mov	r3, #520	; 0x208
   5a6f4:	add	r2, pc, r2
   5a6f8:	add	r1, pc, r1
   5a6fc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a700:	ldr	r2, [pc, #100]	; 5a76c <blkid_probe_get_size@plt+0x53254>
   5a704:	ldr	r1, [pc, #100]	; 5a770 <blkid_probe_get_size@plt+0x53258>
   5a708:	add	r2, pc, r2
   5a70c:	add	r2, r2, #316	; 0x13c
   5a710:	str	r2, [sp]
   5a714:	ldr	r2, [pc, #88]	; 5a774 <blkid_probe_get_size@plt+0x5325c>
   5a718:	ldr	r3, [pc, #88]	; 5a778 <blkid_probe_get_size@plt+0x53260>
   5a71c:	add	r2, pc, r2
   5a720:	add	r1, pc, r1
   5a724:	mov	r0, #0
   5a728:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a72c:	bl	6fb4 <__stack_chk_fail@plt>
   5a730:	andeq	sp, r3, r0, asr #11
   5a734:	andeq	r0, r0, ip, lsr r4
   5a738:			; <UNDEFINED> instruction: 0xfffde974
   5a73c:	andeq	r0, r0, ip, asr #8
   5a740:			; <UNDEFINED> instruction: 0xfffd11a4
   5a744:	andeq	r0, r0, r8, ror #8
   5a748:	andeq	r0, r0, r4, asr r4
   5a74c:	andeq	r0, r0, r4, lsl #12
   5a750:	andeq	fp, r1, ip, ror #27
   5a754:	andeq	r9, r1, r0, ror #2
   5a758:	andeq	r5, r1, r8, asr #6
   5a75c:	andeq	r0, r0, r7, lsl #4
   5a760:	andeq	fp, r1, r4, asr #27
   5a764:	andeq	r5, r1, ip, lsl r3
   5a768:			; <UNDEFINED> instruction: 0x0001c5b8
   5a76c:	muleq	r1, r8, sp
   5a770:	andeq	ip, r1, r0, asr #13
   5a774:	strdeq	r5, [r1], -r4
   5a778:	andeq	r0, r0, r9, lsl #4
   5a77c:	subs	r3, r0, #0
   5a780:	push	{lr}		; (str lr, [sp, #-4]!)
   5a784:	sub	sp, sp, #12
   5a788:	beq	5a7bc <blkid_probe_get_size@plt+0x532a4>
   5a78c:	ldr	r0, [r3, #4]
   5a790:	cmp	r0, #0
   5a794:	beq	5a7e4 <blkid_probe_get_size@plt+0x532cc>
   5a798:	ldrsb	r3, [r3]
   5a79c:	cmp	r3, #10
   5a7a0:	bne	5a80c <blkid_probe_get_size@plt+0x532f4>
   5a7a4:	mov	r1, #0
   5a7a8:	bl	6ff0 <access@plt>
   5a7ac:	mvn	r0, r0
   5a7b0:	lsr	r0, r0, #31
   5a7b4:	add	sp, sp, #12
   5a7b8:	pop	{pc}		; (ldr pc, [sp], #4)
   5a7bc:	ldr	r2, [pc, #116]	; 5a838 <blkid_probe_get_size@plt+0x53320>
   5a7c0:	ldr	r1, [pc, #116]	; 5a83c <blkid_probe_get_size@plt+0x53324>
   5a7c4:	add	r2, pc, r2
   5a7c8:	add	r2, r2, #348	; 0x15c
   5a7cc:	str	r2, [sp]
   5a7d0:	ldr	r2, [pc, #104]	; 5a840 <blkid_probe_get_size@plt+0x53328>
   5a7d4:	ldr	r3, [pc, #104]	; 5a844 <blkid_probe_get_size@plt+0x5332c>
   5a7d8:	add	r2, pc, r2
   5a7dc:	add	r1, pc, r1
   5a7e0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a7e4:	ldr	r3, [pc, #92]	; 5a848 <blkid_probe_get_size@plt+0x53330>
   5a7e8:	ldr	r2, [pc, #92]	; 5a84c <blkid_probe_get_size@plt+0x53334>
   5a7ec:	add	r3, pc, r3
   5a7f0:	ldr	r1, [pc, #88]	; 5a850 <blkid_probe_get_size@plt+0x53338>
   5a7f4:	add	r3, r3, #348	; 0x15c
   5a7f8:	str	r3, [sp]
   5a7fc:	add	r2, pc, r2
   5a800:	mov	r3, #512	; 0x200
   5a804:	add	r1, pc, r1
   5a808:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a80c:	ldr	r2, [pc, #64]	; 5a854 <blkid_probe_get_size@plt+0x5333c>
   5a810:	ldr	r1, [pc, #64]	; 5a858 <blkid_probe_get_size@plt+0x53340>
   5a814:	add	r2, pc, r2
   5a818:	add	r2, r2, #348	; 0x15c
   5a81c:	str	r2, [sp]
   5a820:	ldr	r2, [pc, #52]	; 5a85c <blkid_probe_get_size@plt+0x53344>
   5a824:	ldr	r3, [pc, #52]	; 5a860 <blkid_probe_get_size@plt+0x53348>
   5a828:	add	r2, pc, r2
   5a82c:	add	r1, pc, r1
   5a830:	mov	r0, #0
   5a834:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a838:	ldrdeq	fp, [r1], -ip
   5a83c:	andeq	r9, r1, r0, asr r0
   5a840:	andeq	r5, r1, r8, lsr r2
   5a844:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   5a848:			; <UNDEFINED> instruction: 0x0001bcb4
   5a84c:	andeq	r5, r1, r4, lsl r2
   5a850:	andeq	ip, r1, ip, lsr #9
   5a854:	andeq	fp, r1, ip, lsl #25
   5a858:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   5a85c:	andeq	r5, r1, r8, ror #3
   5a860:	andeq	r0, r0, r1, lsl #4
   5a864:	subs	r3, r0, #0
   5a868:	push	{r4, lr}
   5a86c:	sub	sp, sp, #8
   5a870:	beq	5a8c0 <blkid_probe_get_size@plt+0x533a8>
   5a874:	ldr	r0, [r3, #4]
   5a878:	cmp	r0, #0
   5a87c:	beq	5a8e8 <blkid_probe_get_size@plt+0x533d0>
   5a880:	ldrsb	r3, [r3]
   5a884:	cmp	r3, #9
   5a888:	bne	5a910 <blkid_probe_get_size@plt+0x533f8>
   5a88c:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   5a890:	subs	r4, r0, #0
   5a894:	blt	5a8b4 <blkid_probe_get_size@plt+0x5339c>
   5a898:	ldr	r0, [pc, #156]	; 5a93c <blkid_probe_get_size@plt+0x53424>
   5a89c:	mov	r1, #0
   5a8a0:	add	r0, pc, r0
   5a8a4:	bl	6ff0 <access@plt>
   5a8a8:	adds	r4, r4, #0
   5a8ac:	movne	r4, #1
   5a8b0:	eor	r4, r4, r0, lsr #31
   5a8b4:	mov	r0, r4
   5a8b8:	add	sp, sp, #8
   5a8bc:	pop	{r4, pc}
   5a8c0:	ldr	r2, [pc, #120]	; 5a940 <blkid_probe_get_size@plt+0x53428>
   5a8c4:	ldr	r1, [pc, #120]	; 5a944 <blkid_probe_get_size@plt+0x5342c>
   5a8c8:	add	r2, pc, r2
   5a8cc:	add	r2, r2, #376	; 0x178
   5a8d0:	str	r2, [sp]
   5a8d4:	ldr	r2, [pc, #108]	; 5a948 <blkid_probe_get_size@plt+0x53430>
   5a8d8:	ldr	r3, [pc, #108]	; 5a94c <blkid_probe_get_size@plt+0x53434>
   5a8dc:	add	r2, pc, r2
   5a8e0:	add	r1, pc, r1
   5a8e4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a8e8:	ldr	r3, [pc, #96]	; 5a950 <blkid_probe_get_size@plt+0x53438>
   5a8ec:	ldr	r2, [pc, #96]	; 5a954 <blkid_probe_get_size@plt+0x5343c>
   5a8f0:	add	r3, pc, r3
   5a8f4:	ldr	r1, [pc, #92]	; 5a958 <blkid_probe_get_size@plt+0x53440>
   5a8f8:	add	r3, r3, #376	; 0x178
   5a8fc:	str	r3, [sp]
   5a900:	add	r2, pc, r2
   5a904:	mov	r3, #500	; 0x1f4
   5a908:	add	r1, pc, r1
   5a90c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a910:	ldr	r2, [pc, #68]	; 5a95c <blkid_probe_get_size@plt+0x53444>
   5a914:	ldr	r1, [pc, #68]	; 5a960 <blkid_probe_get_size@plt+0x53448>
   5a918:	add	r2, pc, r2
   5a91c:	add	r2, r2, #376	; 0x178
   5a920:	str	r2, [sp]
   5a924:	ldr	r2, [pc, #56]	; 5a964 <blkid_probe_get_size@plt+0x5344c>
   5a928:	ldr	r3, [pc, #56]	; 5a968 <blkid_probe_get_size@plt+0x53450>
   5a92c:	add	r2, pc, r2
   5a930:	add	r1, pc, r1
   5a934:	mov	r0, #0
   5a938:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5a93c:	andeq	ip, r1, ip, lsr #11
   5a940:	ldrdeq	fp, [r1], -r8
   5a944:	andeq	r8, r1, ip, asr #30
   5a948:	andeq	r5, r1, r4, lsr r1
   5a94c:	strdeq	r0, [r0], -r3
   5a950:			; <UNDEFINED> instruction: 0x0001bbb0
   5a954:	andeq	r5, r1, r0, lsl r1
   5a958:	andeq	ip, r1, r8, lsr #7
   5a95c:	andeq	fp, r1, r8, lsl #23
   5a960:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   5a964:	andeq	r5, r1, r4, ror #1
   5a968:	strdeq	r0, [r0], -r5
   5a96c:	ldr	r3, [pc, #892]	; 5acf0 <blkid_probe_get_size@plt+0x537d8>
   5a970:	ldr	r2, [pc, #892]	; 5acf4 <blkid_probe_get_size@plt+0x537dc>
   5a974:	add	r3, pc, r3
   5a978:	push	{r4, r5, r6, fp, lr}
   5a97c:	add	fp, sp, #16
   5a980:	sub	sp, sp, #252	; 0xfc
   5a984:	ldr	r4, [r3, r2]
   5a988:	subs	r5, r0, #0
   5a98c:	ldr	r3, [r4]
   5a990:	str	r3, [fp, #-24]	; 0xffffffe8
   5a994:	beq	5ab10 <blkid_probe_get_size@plt+0x535f8>
   5a998:	ldr	r0, [r5, #4]
   5a99c:	cmp	r0, #0
   5a9a0:	beq	5ab38 <blkid_probe_get_size@plt+0x53620>
   5a9a4:	ldrsb	r3, [r5]
   5a9a8:	cmp	r3, #8
   5a9ac:	bne	5ab60 <blkid_probe_get_size@plt+0x53648>
   5a9b0:	bl	3def8 <blkid_probe_get_size@plt+0x369e0>
   5a9b4:	cmp	r0, #0
   5a9b8:	movgt	r0, #0
   5a9bc:	ble	5a9d8 <blkid_probe_get_size@plt+0x534c0>
   5a9c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a9c4:	ldr	r3, [r4]
   5a9c8:	cmp	r2, r3
   5a9cc:	bne	5ac94 <blkid_probe_get_size@plt+0x5377c>
   5a9d0:	sub	sp, fp, #16
   5a9d4:	pop	{r4, r5, r6, fp, pc}
   5a9d8:	ldr	r5, [r5, #4]
   5a9dc:	ldrb	r3, [r5]
   5a9e0:	cmp	r3, #47	; 0x2f
   5a9e4:	bne	5ab08 <blkid_probe_get_size@plt+0x535f0>
   5a9e8:	mov	r0, r5
   5a9ec:	bl	723c <strlen@plt>
   5a9f0:	add	r3, r0, #10
   5a9f4:	cmp	r3, #4194304	; 0x400000
   5a9f8:	bhi	5abb4 <blkid_probe_get_size@plt+0x5369c>
   5a9fc:	add	r0, r0, #24
   5aa00:	bic	r0, r0, #7
   5aa04:	sub	sp, sp, r0
   5aa08:	add	r6, sp, #16
   5aa0c:	mov	r1, r5
   5aa10:	mov	r0, r6
   5aa14:	bl	6ae0 <stpcpy@plt>
   5aa18:	ldr	r3, [pc, #728]	; 5acf8 <blkid_probe_get_size@plt+0x537e0>
   5aa1c:	sub	r2, fp, #236	; 0xec
   5aa20:	add	r3, pc, r3
   5aa24:	mov	ip, r0
   5aa28:	ldm	r3!, {r0, r1}
   5aa2c:	ldrh	r3, [r3]
   5aa30:	str	r0, [ip]
   5aa34:	str	r1, [ip, #4]
   5aa38:	strh	r3, [ip, #8]
   5aa3c:	mov	r1, r6
   5aa40:	mov	r0, #3
   5aa44:	bl	7368 <__lxstat64@plt>
   5aa48:	cmp	r0, #0
   5aa4c:	blt	5ab08 <blkid_probe_get_size@plt+0x535f0>
   5aa50:	ldr	r1, [pc, #676]	; 5acfc <blkid_probe_get_size@plt+0x537e4>
   5aa54:	sub	r2, fp, #132	; 0x84
   5aa58:	add	r1, pc, r1
   5aa5c:	mov	r0, #3
   5aa60:	bl	7368 <__lxstat64@plt>
   5aa64:	cmp	r0, #0
   5aa68:	blt	5ab08 <blkid_probe_get_size@plt+0x535f0>
   5aa6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   5aa70:	ldr	r3, [fp, #-156]	; 0xffffff64
   5aa74:	cmp	r2, r3
   5aa78:	beq	5ab8c <blkid_probe_get_size@plt+0x53674>
   5aa7c:	movgt	r0, #1
   5aa80:	movle	r0, #0
   5aa84:	b	5a9c0 <blkid_probe_get_size@plt+0x534a8>
   5aa88:	sub	r3, fp, #20
   5aa8c:	ldr	r2, [pc, #620]	; 5ad00 <blkid_probe_get_size@plt+0x537e8>
   5aa90:	str	r5, [sp]
   5aa94:	mov	r1, r6
   5aa98:	str	r5, [r3, #-228]!	; 0xffffff1c
   5aa9c:	add	r2, pc, r2
   5aaa0:	mov	r0, r5
   5aaa4:	bl	4943c <blkid_probe_get_size@plt+0x41f24>
   5aaa8:	subs	r1, r0, #0
   5aaac:	blt	5abe0 <blkid_probe_get_size@plt+0x536c8>
   5aab0:	bne	5ac2c <blkid_probe_get_size@plt+0x53714>
   5aab4:	ldr	r3, [pc, #584]	; 5ad04 <blkid_probe_get_size@plt+0x537ec>
   5aab8:	add	r3, pc, r3
   5aabc:	ldr	r3, [r3]
   5aac0:	cmp	r3, #6
   5aac4:	ble	5ab00 <blkid_probe_get_size@plt+0x535e8>
   5aac8:	ldr	r2, [pc, #568]	; 5ad08 <blkid_probe_get_size@plt+0x537f0>
   5aacc:	ldr	r3, [pc, #568]	; 5ad0c <blkid_probe_get_size@plt+0x537f4>
   5aad0:	add	r2, pc, r2
   5aad4:	add	r3, pc, r3
   5aad8:	str	r2, [sp, #4]
   5aadc:	ldr	r2, [pc, #556]	; 5ad10 <blkid_probe_get_size@plt+0x537f8>
   5aae0:	add	r3, r3, #432	; 0x1b0
   5aae4:	str	r3, [sp]
   5aae8:	str	r6, [sp, #8]
   5aaec:	mov	r1, r5
   5aaf0:	mov	r3, #480	; 0x1e0
   5aaf4:	add	r2, pc, r2
   5aaf8:	mov	r0, #7
   5aafc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5ab00:	ldr	r0, [fp, #-248]	; 0xffffff08
   5ab04:	bl	69f0 <free@plt>
   5ab08:	mov	r0, #1
   5ab0c:	b	5a9c0 <blkid_probe_get_size@plt+0x534a8>
   5ab10:	ldr	r2, [pc, #508]	; 5ad14 <blkid_probe_get_size@plt+0x537fc>
   5ab14:	ldr	r1, [pc, #508]	; 5ad18 <blkid_probe_get_size@plt+0x53800>
   5ab18:	add	r2, pc, r2
   5ab1c:	add	r2, r2, #404	; 0x194
   5ab20:	str	r2, [sp]
   5ab24:	ldr	r2, [pc, #496]	; 5ad1c <blkid_probe_get_size@plt+0x53804>
   5ab28:	ldr	r3, [pc, #496]	; 5ad20 <blkid_probe_get_size@plt+0x53808>
   5ab2c:	add	r2, pc, r2
   5ab30:	add	r1, pc, r1
   5ab34:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5ab38:	ldr	r3, [pc, #484]	; 5ad24 <blkid_probe_get_size@plt+0x5380c>
   5ab3c:	ldr	r2, [pc, #484]	; 5ad28 <blkid_probe_get_size@plt+0x53810>
   5ab40:	add	r3, pc, r3
   5ab44:	ldr	r1, [pc, #480]	; 5ad2c <blkid_probe_get_size@plt+0x53814>
   5ab48:	add	r3, r3, #404	; 0x194
   5ab4c:	str	r3, [sp]
   5ab50:	add	r2, pc, r2
   5ab54:	ldr	r3, [pc, #468]	; 5ad30 <blkid_probe_get_size@plt+0x53818>
   5ab58:	add	r1, pc, r1
   5ab5c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5ab60:	ldr	r2, [pc, #460]	; 5ad34 <blkid_probe_get_size@plt+0x5381c>
   5ab64:	ldr	r1, [pc, #460]	; 5ad38 <blkid_probe_get_size@plt+0x53820>
   5ab68:	add	r2, pc, r2
   5ab6c:	add	r2, r2, #404	; 0x194
   5ab70:	str	r2, [sp]
   5ab74:	ldr	r2, [pc, #448]	; 5ad3c <blkid_probe_get_size@plt+0x53824>
   5ab78:	mov	r3, #436	; 0x1b4
   5ab7c:	add	r2, pc, r2
   5ab80:	add	r1, pc, r1
   5ab84:	mov	r0, #0
   5ab88:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5ab8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5ab90:	ldr	r5, [fp, #-152]	; 0xffffff68
   5ab94:	cmp	r0, #0
   5ab98:	ble	5aba4 <blkid_probe_get_size@plt+0x5368c>
   5ab9c:	cmp	r5, #0
   5aba0:	beq	5aa88 <blkid_probe_get_size@plt+0x53570>
   5aba4:	cmp	r0, r5
   5aba8:	movle	r0, #0
   5abac:	movgt	r0, #1
   5abb0:	b	5a9c0 <blkid_probe_get_size@plt+0x534a8>
   5abb4:	ldr	r2, [pc, #388]	; 5ad40 <blkid_probe_get_size@plt+0x53828>
   5abb8:	ldr	r1, [pc, #388]	; 5ad44 <blkid_probe_get_size@plt+0x5382c>
   5abbc:	add	r2, pc, r2
   5abc0:	add	r2, r2, #404	; 0x194
   5abc4:	str	r2, [sp]
   5abc8:	ldr	r2, [pc, #376]	; 5ad48 <blkid_probe_get_size@plt+0x53830>
   5abcc:	ldr	r3, [pc, #376]	; 5ad4c <blkid_probe_get_size@plt+0x53834>
   5abd0:	add	r2, pc, r2
   5abd4:	add	r1, pc, r1
   5abd8:	mov	r0, #0
   5abdc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5abe0:	ldr	r3, [pc, #360]	; 5ad50 <blkid_probe_get_size@plt+0x53838>
   5abe4:	add	r3, pc, r3
   5abe8:	ldr	r3, [r3]
   5abec:	cmp	r3, #2
   5abf0:	ble	5ab00 <blkid_probe_get_size@plt+0x535e8>
   5abf4:	ldr	r2, [pc, #344]	; 5ad54 <blkid_probe_get_size@plt+0x5383c>
   5abf8:	ldr	r3, [pc, #344]	; 5ad58 <blkid_probe_get_size@plt+0x53840>
   5abfc:	add	r2, pc, r2
   5ac00:	str	r2, [sp, #4]
   5ac04:	add	r3, pc, r3
   5ac08:	ldr	r2, [pc, #332]	; 5ad5c <blkid_probe_get_size@plt+0x53844>
   5ac0c:	add	r3, r3, #432	; 0x1b0
   5ac10:	str	r3, [sp]
   5ac14:	str	r6, [sp, #8]
   5ac18:	ldr	r3, [pc, #320]	; 5ad60 <blkid_probe_get_size@plt+0x53848>
   5ac1c:	add	r2, pc, r2
   5ac20:	mov	r0, #3
   5ac24:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5ac28:	b	5ab00 <blkid_probe_get_size@plt+0x535e8>
   5ac2c:	sub	r1, fp, #244	; 0xf4
   5ac30:	ldr	r0, [fp, #-248]	; 0xffffff08
   5ac34:	bl	40ec0 <blkid_probe_get_size@plt+0x399a8>
   5ac38:	subs	r1, r0, #0
   5ac3c:	bge	5ac98 <blkid_probe_get_size@plt+0x53780>
   5ac40:	ldr	r3, [pc, #284]	; 5ad64 <blkid_probe_get_size@plt+0x5384c>
   5ac44:	add	r3, pc, r3
   5ac48:	ldr	r3, [r3]
   5ac4c:	cmp	r3, #2
   5ac50:	ble	5ab00 <blkid_probe_get_size@plt+0x535e8>
   5ac54:	ldr	r2, [pc, #268]	; 5ad68 <blkid_probe_get_size@plt+0x53850>
   5ac58:	ldr	r3, [pc, #268]	; 5ad6c <blkid_probe_get_size@plt+0x53854>
   5ac5c:	add	r2, pc, r2
   5ac60:	ldr	ip, [fp, #-248]	; 0xffffff08
   5ac64:	str	r2, [sp, #4]
   5ac68:	add	r3, pc, r3
   5ac6c:	ldr	r2, [pc, #252]	; 5ad70 <blkid_probe_get_size@plt+0x53858>
   5ac70:	add	r3, r3, #432	; 0x1b0
   5ac74:	str	r3, [sp]
   5ac78:	str	r6, [sp, #12]
   5ac7c:	str	ip, [sp, #8]
   5ac80:	ldr	r3, [pc, #236]	; 5ad74 <blkid_probe_get_size@plt+0x5385c>
   5ac84:	add	r2, pc, r2
   5ac88:	mov	r0, #3
   5ac8c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5ac90:	b	5ab00 <blkid_probe_get_size@plt+0x535e8>
   5ac94:	bl	6fb4 <__stack_chk_fail@plt>
   5ac98:	add	r3, pc, #72	; 0x48
   5ac9c:	ldrd	r2, [r3]
   5aca0:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   5aca4:	cmp	r1, r3
   5aca8:	cmpeq	r0, r2
   5acac:	mvnhi	r3, #0
   5acb0:	strhi	r3, [fp, #-152]	; 0xffffff68
   5acb4:	bhi	5acd0 <blkid_probe_get_size@plt+0x537b8>
   5acb8:	ldr	r2, [pc, #184]	; 5ad78 <blkid_probe_get_size@plt+0x53860>
   5acbc:	mov	r3, #0
   5acc0:	bl	64350 <blkid_probe_get_size@plt+0x5ce38>
   5acc4:	mov	r3, #1000	; 0x3e8
   5acc8:	mul	r3, r3, r2
   5accc:	str	r3, [fp, #-152]	; 0xffffff68
   5acd0:	ldr	r0, [fp, #-248]	; 0xffffff08
   5acd4:	bl	69f0 <free@plt>
   5acd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5acdc:	ldr	r5, [fp, #-152]	; 0xffffff68
   5ace0:	b	5aba4 <blkid_probe_get_size@plt+0x5368c>
   5ace4:	nop			; (mov r0, r0)
   5ace8:			; <UNDEFINED> instruction: 0xfff0bdbf
   5acec:	andeq	sl, r7, pc, lsl r1
   5acf0:	strdeq	sp, [r3], -r4
   5acf4:	andeq	r0, r0, ip, lsr r4
   5acf8:	andeq	ip, r1, r8, lsr #10
   5acfc:	andeq	ip, r1, r0, lsr r4
   5ad00:	strdeq	ip, [r1], -r4
   5ad04:	andeq	sp, r3, r4, lsl #13
   5ad08:	andeq	ip, r1, r8, lsl #8
   5ad0c:	andeq	fp, r1, ip, asr #19
   5ad10:	andeq	r4, r1, ip, lsl pc
   5ad14:	andeq	fp, r1, r8, lsl #19
   5ad18:	strdeq	r8, [r1], -ip
   5ad1c:	andeq	r4, r1, r4, ror #29
   5ad20:			; <UNDEFINED> instruction: 0x000001b2
   5ad24:	andeq	fp, r1, r0, ror #18
   5ad28:	andeq	r4, r1, r0, asr #29
   5ad2c:	andeq	ip, r1, r8, asr r1
   5ad30:			; <UNDEFINED> instruction: 0x000001b3
   5ad34:	andeq	fp, r1, r8, lsr r9
   5ad38:	andeq	ip, r1, r4, ror #5
   5ad3c:	muleq	r1, r4, lr
   5ad40:	andeq	fp, r1, r4, ror #17
   5ad44:	andeq	sl, r0, r4, asr #9
   5ad48:	andeq	r4, r1, r0, asr #28
   5ad4c:	andeq	r0, r0, r1, asr #3
   5ad50:	andeq	sp, r3, r8, asr r5
   5ad54:	andeq	ip, r1, r4, lsr #5
   5ad58:	muleq	r1, ip, r8
   5ad5c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   5ad60:	ldrdeq	r0, [r0], -sp
   5ad64:	strdeq	sp, [r3], -r8
   5ad68:	andeq	ip, r1, r8, lsr #5
   5ad6c:	andeq	fp, r1, r8, lsr r8
   5ad70:	andeq	r4, r1, ip, lsl #27
   5ad74:	andeq	r0, r0, r6, ror #3
   5ad78:	andeq	r4, pc, r0, asr #4
   5ad7c:	ldr	r3, [pc, #760]	; 5b07c <blkid_probe_get_size@plt+0x53b64>
   5ad80:	ldr	r2, [pc, #760]	; 5b080 <blkid_probe_get_size@plt+0x53b68>
   5ad84:	add	r3, pc, r3
   5ad88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5ad8c:	sub	sp, sp, #32
   5ad90:	ldr	r7, [r3, r2]
   5ad94:	mvn	r4, #0
   5ad98:	mvn	r5, #0
   5ad9c:	ldr	r3, [r7]
   5ada0:	subs	r1, r0, #0
   5ada4:	strd	r4, [sp, #16]
   5ada8:	str	r3, [sp, #28]
   5adac:	beq	5afc4 <blkid_probe_get_size@plt+0x53aac>
   5adb0:	ldr	r4, [r1, #4]
   5adb4:	cmp	r4, #0
   5adb8:	beq	5afec <blkid_probe_get_size@plt+0x53ad4>
   5adbc:	ldrsb	r3, [r1]
   5adc0:	cmp	r3, #6
   5adc4:	bne	5b018 <blkid_probe_get_size@plt+0x53b00>
   5adc8:	add	r6, sp, #12
   5adcc:	mov	r1, r6
   5add0:	mov	r0, r4
   5add4:	bl	40fdc <blkid_probe_get_size@plt+0x39ac4>
   5add8:	cmp	r0, #0
   5addc:	blt	5aeec <blkid_probe_get_size@plt+0x539d4>
   5ade0:	ldr	r8, [sp, #12]
   5ade4:	cmp	r8, #63	; 0x3f
   5ade8:	bhi	5b06c <blkid_probe_get_size@plt+0x53b54>
   5adec:	ldr	r1, [pc, #656]	; 5b084 <blkid_probe_get_size@plt+0x53b6c>
   5adf0:	ldr	r0, [pc, #656]	; 5b088 <blkid_probe_get_size@plt+0x53b70>
   5adf4:	add	r1, pc, r1
   5adf8:	add	r0, pc, r0
   5adfc:	bl	738c <fopen64@plt>
   5ae00:	subs	r5, r0, #0
   5ae04:	beq	5aedc <blkid_probe_get_size@plt+0x539c4>
   5ae08:	ldr	sl, [pc, #636]	; 5b08c <blkid_probe_get_size@plt+0x53b74>
   5ae0c:	mov	r9, #0
   5ae10:	add	sl, pc, sl
   5ae14:	b	5ae48 <blkid_probe_get_size@plt+0x53930>
   5ae18:	ldr	r4, [sp, #12]
   5ae1c:	beq	5aeb0 <blkid_probe_get_size@plt+0x53998>
   5ae20:	mov	r2, #7
   5ae24:	mov	r1, sl
   5ae28:	mov	r0, r4
   5ae2c:	bl	6a5c <strncmp@plt>
   5ae30:	cmp	r0, #0
   5ae34:	bne	5ae40 <blkid_probe_get_size@plt+0x53928>
   5ae38:	adds	r0, r4, #7
   5ae3c:	bne	5ae90 <blkid_probe_get_size@plt+0x53978>
   5ae40:	mov	r0, r4
   5ae44:	bl	69f0 <free@plt>
   5ae48:	mov	r2, r6
   5ae4c:	mov	r1, #0
   5ae50:	mov	r0, r5
   5ae54:	str	r9, [sp, #12]
   5ae58:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   5ae5c:	subs	r4, r0, #0
   5ae60:	bge	5ae18 <blkid_probe_get_size@plt+0x53900>
   5ae64:	ldr	r0, [sp, #12]
   5ae68:	bl	69f0 <free@plt>
   5ae6c:	mov	r0, r5
   5ae70:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5ae74:	ldr	r2, [sp, #28]
   5ae78:	ldr	r3, [r7]
   5ae7c:	mov	r0, r4
   5ae80:	cmp	r2, r3
   5ae84:	bne	5b078 <blkid_probe_get_size@plt+0x53b60>
   5ae88:	add	sp, sp, #32
   5ae8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5ae90:	ldr	r1, [pc, #504]	; 5b090 <blkid_probe_get_size@plt+0x53b78>
   5ae94:	add	r2, sp, #16
   5ae98:	add	r1, pc, r1
   5ae9c:	bl	735c <sscanf@plt>
   5aea0:	cmp	r0, #1
   5aea4:	mvnne	r4, #4
   5aea8:	bne	5ae64 <blkid_probe_get_size@plt+0x5394c>
   5aeac:	ldr	r4, [sp, #12]
   5aeb0:	mov	r0, r4
   5aeb4:	bl	69f0 <free@plt>
   5aeb8:	ldr	r4, [sp, #16]
   5aebc:	ldr	r3, [sp, #20]
   5aec0:	rsb	r2, r8, #32
   5aec4:	lsr	r4, r4, r8
   5aec8:	sub	r8, r8, #32
   5aecc:	orr	r4, r4, r3, lsl r2
   5aed0:	orr	r4, r4, r3, lsr r8
   5aed4:	and	r4, r4, #1
   5aed8:	b	5ae6c <blkid_probe_get_size@plt+0x53954>
   5aedc:	bl	732c <__errno_location@plt>
   5aee0:	ldr	r4, [r0]
   5aee4:	rsb	r4, r4, #0
   5aee8:	b	5ae6c <blkid_probe_get_size@plt+0x53954>
   5aeec:	mov	r0, r4
   5aef0:	bl	723c <strlen@plt>
   5aef4:	sub	r3, r0, #7
   5aef8:	cmp	r3, #13
   5aefc:	bhi	5b06c <blkid_probe_get_size@plt+0x53b54>
   5af00:	cmp	r0, #7
   5af04:	beq	5af28 <blkid_probe_get_size@plt+0x53a10>
   5af08:	cmp	r0, #8
   5af0c:	bne	5b050 <blkid_probe_get_size@plt+0x53b38>
   5af10:	ldrb	r2, [r4, #7]
   5af14:	ldr	r3, [pc, #376]	; 5b094 <blkid_probe_get_size@plt+0x53b7c>
   5af18:	add	r3, pc, r3
   5af1c:	add	r3, r3, r2
   5af20:	ldrb	r3, [r3, #488]	; 0x1e8
   5af24:	add	r0, r0, r3
   5af28:	ldrb	r2, [r4, #4]
   5af2c:	ldr	r3, [pc, #356]	; 5b098 <blkid_probe_get_size@plt+0x53b80>
   5af30:	add	r3, pc, r3
   5af34:	add	r2, r3, r2
   5af38:	ldrb	r2, [r2, #488]	; 0x1e8
   5af3c:	add	r0, r2, r0
   5af40:	cmp	r0, #69	; 0x45
   5af44:	bhi	5b06c <blkid_probe_get_size@plt+0x53b54>
   5af48:	ldr	r2, [pc, #332]	; 5b09c <blkid_probe_get_size@plt+0x53b84>
   5af4c:	add	r2, pc, r2
   5af50:	ldr	ip, [r2, r0, lsl #3]
   5af54:	cmp	ip, #0
   5af58:	beq	5b06c <blkid_probe_get_size@plt+0x53b54>
   5af5c:	ldrb	r2, [r4]
   5af60:	ldrb	r1, [ip]
   5af64:	eor	lr, r2, r1
   5af68:	tst	lr, #223	; 0xdf
   5af6c:	bne	5b06c <blkid_probe_get_size@plt+0x53b54>
   5af70:	add	r2, r3, r2
   5af74:	add	r1, r3, r1
   5af78:	ldrb	r2, [r2, #744]	; 0x2e8
   5af7c:	ldrb	r1, [r1, #744]	; 0x2e8
   5af80:	cmp	r2, #0
   5af84:	sub	r5, r2, r1
   5af88:	clz	r5, r5
   5af8c:	lsr	r5, r5, #5
   5af90:	moveq	r5, #0
   5af94:	cmp	r5, #0
   5af98:	bne	5b044 <blkid_probe_get_size@plt+0x53b2c>
   5af9c:	cmp	r2, r1
   5afa0:	bne	5b06c <blkid_probe_get_size@plt+0x53b54>
   5afa4:	ldr	r3, [pc, #244]	; 5b0a0 <blkid_probe_get_size@plt+0x53b88>
   5afa8:	add	r3, pc, r3
   5afac:	add	r0, r3, r0, lsl #3
   5afb0:	ldr	r8, [r0, #4]
   5afb4:	cmp	r8, #0
   5afb8:	mvnlt	r4, #21
   5afbc:	bge	5adec <blkid_probe_get_size@plt+0x538d4>
   5afc0:	b	5ae6c <blkid_probe_get_size@plt+0x53954>
   5afc4:	ldr	r2, [pc, #216]	; 5b0a4 <blkid_probe_get_size@plt+0x53b8c>
   5afc8:	ldr	r1, [pc, #216]	; 5b0a8 <blkid_probe_get_size@plt+0x53b90>
   5afcc:	add	r2, pc, r2
   5afd0:	add	r2, r2, #460	; 0x1cc
   5afd4:	str	r2, [sp]
   5afd8:	ldr	r2, [pc, #204]	; 5b0ac <blkid_probe_get_size@plt+0x53b94>
   5afdc:	mov	r3, #392	; 0x188
   5afe0:	add	r2, pc, r2
   5afe4:	add	r1, pc, r1
   5afe8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5afec:	ldr	r3, [pc, #188]	; 5b0b0 <blkid_probe_get_size@plt+0x53b98>
   5aff0:	ldr	r2, [pc, #188]	; 5b0b4 <blkid_probe_get_size@plt+0x53b9c>
   5aff4:	add	r3, pc, r3
   5aff8:	ldr	r1, [pc, #184]	; 5b0b8 <blkid_probe_get_size@plt+0x53ba0>
   5affc:	add	r3, r3, #460	; 0x1cc
   5b000:	str	r3, [sp]
   5b004:	mov	r0, r4
   5b008:	ldr	r3, [pc, #172]	; 5b0bc <blkid_probe_get_size@plt+0x53ba4>
   5b00c:	add	r2, pc, r2
   5b010:	add	r1, pc, r1
   5b014:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b018:	ldr	r2, [pc, #160]	; 5b0c0 <blkid_probe_get_size@plt+0x53ba8>
   5b01c:	ldr	r1, [pc, #160]	; 5b0c4 <blkid_probe_get_size@plt+0x53bac>
   5b020:	add	r2, pc, r2
   5b024:	add	r2, r2, #460	; 0x1cc
   5b028:	str	r2, [sp]
   5b02c:	ldr	r2, [pc, #148]	; 5b0c8 <blkid_probe_get_size@plt+0x53bb0>
   5b030:	ldr	r3, [pc, #148]	; 5b0cc <blkid_probe_get_size@plt+0x53bb4>
   5b034:	add	r2, pc, r2
   5b038:	add	r1, pc, r1
   5b03c:	mov	r0, #0
   5b040:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b044:	ldrb	r2, [r4, #1]!
   5b048:	ldrb	r1, [ip, #1]!
   5b04c:	b	5af70 <blkid_probe_get_size@plt+0x53a58>
   5b050:	ldrb	r2, [r4, #8]
   5b054:	ldr	r3, [pc, #116]	; 5b0d0 <blkid_probe_get_size@plt+0x53bb8>
   5b058:	add	r3, pc, r3
   5b05c:	add	r3, r3, r2
   5b060:	ldrb	r3, [r3, #488]	; 0x1e8
   5b064:	add	r0, r0, r3
   5b068:	b	5af10 <blkid_probe_get_size@plt+0x539f8>
   5b06c:	mov	r5, #0
   5b070:	mvn	r4, #21
   5b074:	b	5ae6c <blkid_probe_get_size@plt+0x53954>
   5b078:	bl	6fb4 <__stack_chk_fail@plt>
   5b07c:	andeq	ip, r3, r4, ror #27
   5b080:	andeq	r0, r0, ip, lsr r4
   5b084:	muleq	r1, r8, r5
   5b088:	andeq	ip, r1, ip, ror r1
   5b08c:	andeq	ip, r1, r8, ror r1
   5b090:	strdeq	ip, [r1], -r8
   5b094:	andeq	fp, r1, r8, lsl #11
   5b098:	andeq	fp, r1, r0, ror r5
   5b09c:			; <UNDEFINED> instruction: 0x0003c5b0
   5b0a0:	andeq	ip, r3, r4, asr r5
   5b0a4:	ldrdeq	fp, [r1], -r4
   5b0a8:	andeq	r8, r1, r8, asr #16
   5b0ac:	andeq	r4, r1, r0, lsr sl
   5b0b0:	andeq	fp, r1, ip, lsr #9
   5b0b4:	andeq	r4, r1, r4, lsl #20
   5b0b8:	andeq	fp, r1, r0, lsr #25
   5b0bc:	andeq	r0, r0, r9, lsl #3
   5b0c0:	andeq	fp, r1, r0, lsl #9
   5b0c4:	andeq	fp, r1, ip, lsl pc
   5b0c8:	ldrdeq	r4, [r1], -ip
   5b0cc:	andeq	r0, r0, sl, lsl #3
   5b0d0:	andeq	fp, r1, r8, asr #8
   5b0d4:	ldr	r3, [pc, #812]	; 5b408 <blkid_probe_get_size@plt+0x53ef0>
   5b0d8:	ldr	r2, [pc, #812]	; 5b40c <blkid_probe_get_size@plt+0x53ef4>
   5b0dc:	add	r3, pc, r3
   5b0e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5b0e4:	sub	sp, sp, #44	; 0x2c
   5b0e8:	ldr	r4, [r3, r2]
   5b0ec:	subs	r1, r0, #0
   5b0f0:	ldr	r3, [r4]
   5b0f4:	str	r3, [sp, #36]	; 0x24
   5b0f8:	beq	5b358 <blkid_probe_get_size@plt+0x53e40>
   5b0fc:	ldr	r0, [r1, #4]
   5b100:	cmp	r0, #0
   5b104:	beq	5b380 <blkid_probe_get_size@plt+0x53e68>
   5b108:	ldrsb	r3, [r1]
   5b10c:	cmp	r3, #7
   5b110:	bne	5b3a8 <blkid_probe_get_size@plt+0x53e90>
   5b114:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   5b118:	subs	r5, r0, #0
   5b11c:	blt	5b1e4 <blkid_probe_get_size@plt+0x53ccc>
   5b120:	ldr	r0, [pc, #744]	; 5b410 <blkid_probe_get_size@plt+0x53ef8>
   5b124:	add	r0, pc, r0
   5b128:	bl	6ca8 <opendir@plt>
   5b12c:	mov	r6, r0
   5b130:	bl	732c <__errno_location@plt>
   5b134:	cmp	r6, #0
   5b138:	mov	r7, r0
   5b13c:	beq	5b200 <blkid_probe_get_size@plt+0x53ce8>
   5b140:	mov	r8, #0
   5b144:	str	r8, [r0]
   5b148:	mov	r0, r6
   5b14c:	bl	6bb8 <readdir64@plt>
   5b150:	cmp	r0, #0
   5b154:	beq	5b3d4 <blkid_probe_get_size@plt+0x53ebc>
   5b158:	ldr	fp, [pc, #692]	; 5b414 <blkid_probe_get_size@plt+0x53efc>
   5b15c:	ldr	sl, [pc, #692]	; 5b418 <blkid_probe_get_size@plt+0x53f00>
   5b160:	str	r8, [sp, #12]
   5b164:	add	fp, pc, fp
   5b168:	mov	r8, r0
   5b16c:	add	r8, r8, #19
   5b170:	mov	r0, r8
   5b174:	bl	3f904 <blkid_probe_get_size@plt+0x383ec>
   5b178:	cmp	r0, #0
   5b17c:	bne	5b2dc <blkid_probe_get_size@plt+0x53dc4>
   5b180:	mov	r0, r6
   5b184:	bl	6984 <dirfd@plt>
   5b188:	mov	r2, sl
   5b18c:	mov	r1, r8
   5b190:	bl	6ed0 <openat64@plt>
   5b194:	subs	r9, r0, #0
   5b198:	bge	5b318 <blkid_probe_get_size@plt+0x53e00>
   5b19c:	ldr	r3, [r7]
   5b1a0:	cmp	r3, #2
   5b1a4:	beq	5b340 <blkid_probe_get_size@plt+0x53e28>
   5b1a8:	cmp	r3, #20
   5b1ac:	beq	5b340 <blkid_probe_get_size@plt+0x53e28>
   5b1b0:	rsb	r7, r3, #0
   5b1b4:	mvn	r8, #0
   5b1b8:	mov	r0, r9
   5b1bc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b1c0:	mov	r0, r8
   5b1c4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b1c8:	mov	r0, r6
   5b1cc:	bl	6aa4 <closedir@plt>
   5b1d0:	clz	r3, r7
   5b1d4:	lsr	r3, r3, #5
   5b1d8:	cmp	r5, #0
   5b1dc:	moveq	r5, r3
   5b1e0:	eorne	r5, r3, #1
   5b1e4:	ldr	r2, [sp, #36]	; 0x24
   5b1e8:	ldr	r3, [r4]
   5b1ec:	mov	r0, r5
   5b1f0:	cmp	r2, r3
   5b1f4:	bne	5b3ec <blkid_probe_get_size@plt+0x53ed4>
   5b1f8:	add	sp, sp, #44	; 0x2c
   5b1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5b200:	ldr	r3, [r0]
   5b204:	clz	r3, r3
   5b208:	lsr	r3, r3, #5
   5b20c:	b	5b1d8 <blkid_probe_get_size@plt+0x53cc0>
   5b210:	add	r3, sp, #28
   5b214:	mov	r1, r3
   5b218:	mov	r2, #6
   5b21c:	str	r3, [sp, #16]
   5b220:	bl	6d74 <read@plt>
   5b224:	subs	r3, r0, #0
   5b228:	blt	5b3dc <blkid_probe_get_size@plt+0x53ec4>
   5b22c:	cmp	r3, #6
   5b230:	bne	5b344 <blkid_probe_get_size@plt+0x53e2c>
   5b234:	ldr	r2, [sp, #16]
   5b238:	ldr	r1, [pc, #476]	; 5b41c <blkid_probe_get_size@plt+0x53f04>
   5b23c:	ldr	r2, [r2]
   5b240:	cmp	r2, r1
   5b244:	bne	5b344 <blkid_probe_get_size@plt+0x53e2c>
   5b248:	ldr	r2, [sp, #16]
   5b24c:	ldrh	r1, [r2, #4]
   5b250:	ldr	r2, [pc, #456]	; 5b420 <blkid_probe_get_size@plt+0x53f08>
   5b254:	cmp	r1, r2
   5b258:	bne	5b344 <blkid_probe_get_size@plt+0x53e2c>
   5b25c:	mov	r0, r8
   5b260:	str	r3, [sp, #20]
   5b264:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b268:	ldr	r1, [pc, #436]	; 5b424 <blkid_probe_get_size@plt+0x53f0c>
   5b26c:	ldr	r2, [pc, #436]	; 5b428 <blkid_probe_get_size@plt+0x53f10>
   5b270:	add	r1, pc, r1
   5b274:	mov	r0, r9
   5b278:	bl	6ed0 <openat64@plt>
   5b27c:	ldr	r3, [sp, #20]
   5b280:	subs	r8, r0, #0
   5b284:	blt	5b32c <blkid_probe_get_size@plt+0x53e14>
   5b288:	mov	r2, r3
   5b28c:	ldr	r1, [sp, #16]
   5b290:	bl	6d74 <read@plt>
   5b294:	cmp	r0, #0
   5b298:	blt	5b3dc <blkid_probe_get_size@plt+0x53ec4>
   5b29c:	cmp	r0, #2
   5b2a0:	bne	5b3e4 <blkid_probe_get_size@plt+0x53ecc>
   5b2a4:	ldrb	r3, [sp, #29]
   5b2a8:	cmp	r3, #10
   5b2ac:	bne	5b3e4 <blkid_probe_get_size@plt+0x53ecc>
   5b2b0:	ldrb	r3, [sp, #28]
   5b2b4:	cmp	r3, #49	; 0x31
   5b2b8:	beq	5b3f0 <blkid_probe_get_size@plt+0x53ed8>
   5b2bc:	cmp	r3, #48	; 0x30
   5b2c0:	bne	5b3e4 <blkid_probe_get_size@plt+0x53ecc>
   5b2c4:	mov	r0, r9
   5b2c8:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b2cc:	mov	r0, r8
   5b2d0:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b2d4:	mov	r3, #1
   5b2d8:	str	r3, [sp, #12]
   5b2dc:	mov	r3, #0
   5b2e0:	str	r3, [r7]
   5b2e4:	mov	r0, r6
   5b2e8:	bl	6bb8 <readdir64@plt>
   5b2ec:	subs	r8, r0, #0
   5b2f0:	bne	5b16c <blkid_probe_get_size@plt+0x53c54>
   5b2f4:	ldr	r3, [r7]
   5b2f8:	cmp	r3, #0
   5b2fc:	rsbgt	r7, r3, #0
   5b300:	bgt	5b1c8 <blkid_probe_get_size@plt+0x53cb0>
   5b304:	mov	r3, #0
   5b308:	ldr	r2, [sp, #12]
   5b30c:	eor	r7, r2, #1
   5b310:	orr	r7, r3, r7
   5b314:	b	5b1c8 <blkid_probe_get_size@plt+0x53cb0>
   5b318:	ldr	r2, [pc, #264]	; 5b428 <blkid_probe_get_size@plt+0x53f10>
   5b31c:	mov	r1, fp
   5b320:	bl	6ed0 <openat64@plt>
   5b324:	subs	r8, r0, #0
   5b328:	bge	5b210 <blkid_probe_get_size@plt+0x53cf8>
   5b32c:	ldr	r3, [r7]
   5b330:	cmp	r3, #2
   5b334:	beq	5b344 <blkid_probe_get_size@plt+0x53e2c>
   5b338:	rsb	r7, r3, #0
   5b33c:	b	5b1b8 <blkid_probe_get_size@plt+0x53ca0>
   5b340:	mvn	r8, #0
   5b344:	mov	r0, r9
   5b348:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b34c:	mov	r0, r8
   5b350:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b354:	b	5b2dc <blkid_probe_get_size@plt+0x53dc4>
   5b358:	ldr	r2, [pc, #204]	; 5b42c <blkid_probe_get_size@plt+0x53f14>
   5b35c:	ldr	r1, [pc, #204]	; 5b430 <blkid_probe_get_size@plt+0x53f18>
   5b360:	add	r2, pc, r2
   5b364:	add	r2, r2, #1000	; 0x3e8
   5b368:	str	r2, [sp]
   5b36c:	ldr	r2, [pc, #192]	; 5b434 <blkid_probe_get_size@plt+0x53f1c>
   5b370:	ldr	r3, [pc, #192]	; 5b438 <blkid_probe_get_size@plt+0x53f20>
   5b374:	add	r2, pc, r2
   5b378:	add	r1, pc, r1
   5b37c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b380:	ldr	r3, [pc, #180]	; 5b43c <blkid_probe_get_size@plt+0x53f24>
   5b384:	ldr	r2, [pc, #180]	; 5b440 <blkid_probe_get_size@plt+0x53f28>
   5b388:	add	r3, pc, r3
   5b38c:	ldr	r1, [pc, #176]	; 5b444 <blkid_probe_get_size@plt+0x53f2c>
   5b390:	add	r3, r3, #1000	; 0x3e8
   5b394:	str	r3, [sp]
   5b398:	add	r2, pc, r2
   5b39c:	ldr	r3, [pc, #164]	; 5b448 <blkid_probe_get_size@plt+0x53f30>
   5b3a0:	add	r1, pc, r1
   5b3a4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b3a8:	ldr	r2, [pc, #156]	; 5b44c <blkid_probe_get_size@plt+0x53f34>
   5b3ac:	ldr	r1, [pc, #156]	; 5b450 <blkid_probe_get_size@plt+0x53f38>
   5b3b0:	add	r2, pc, r2
   5b3b4:	add	r2, r2, #1000	; 0x3e8
   5b3b8:	str	r2, [sp]
   5b3bc:	ldr	r2, [pc, #144]	; 5b454 <blkid_probe_get_size@plt+0x53f3c>
   5b3c0:	ldr	r3, [pc, #144]	; 5b458 <blkid_probe_get_size@plt+0x53f40>
   5b3c4:	add	r2, pc, r2
   5b3c8:	add	r1, pc, r1
   5b3cc:	mov	r0, #0
   5b3d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b3d4:	str	r0, [sp, #12]
   5b3d8:	b	5b2f4 <blkid_probe_get_size@plt+0x53ddc>
   5b3dc:	ldr	r3, [r7]
   5b3e0:	b	5b338 <blkid_probe_get_size@plt+0x53e20>
   5b3e4:	mvn	r7, #4
   5b3e8:	b	5b1b8 <blkid_probe_get_size@plt+0x53ca0>
   5b3ec:	bl	6fb4 <__stack_chk_fail@plt>
   5b3f0:	mov	r0, r9
   5b3f4:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b3f8:	mov	r0, r8
   5b3fc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   5b400:	mov	r3, #1
   5b404:	b	5b308 <blkid_probe_get_size@plt+0x53df0>
   5b408:	andeq	ip, r3, ip, lsl #21
   5b40c:	andeq	r0, r0, ip, lsr r4
   5b410:	muleq	r1, r4, lr
   5b414:	andeq	ip, r0, ip, lsl #4
   5b418:	andeq	r4, r8, r0, lsl #2
   5b41c:	powvsem	f6, f1, #5.0
   5b420:	andeq	r0, r0, r3, ror sl
   5b424:	andeq	r1, r1, r8, ror #10
   5b428:	andeq	r0, r8, r0, lsl #2
   5b42c:	andeq	fp, r1, r0, asr #2
   5b430:			; <UNDEFINED> instruction: 0x000184b4
   5b434:	muleq	r1, ip, r6
   5b438:	andeq	r0, r0, r1, ror #2
   5b43c:	andeq	fp, r1, r8, lsl r1
   5b440:	andeq	r4, r1, r8, ror r6
   5b444:	andeq	fp, r1, r0, lsl r9
   5b448:	andeq	r0, r0, r2, ror #2
   5b44c:	strdeq	fp, [r1], -r0
   5b450:	ldrdeq	fp, [r1], -r0
   5b454:	andeq	r4, r1, ip, asr #12
   5b458:	andeq	r0, r0, r3, ror #2
   5b45c:	ldr	r3, [pc, #416]	; 5b604 <blkid_probe_get_size@plt+0x540ec>
   5b460:	ldr	r2, [pc, #416]	; 5b608 <blkid_probe_get_size@plt+0x540f0>
   5b464:	add	r3, pc, r3
   5b468:	push	{r4, r5, r6, r7, lr}
   5b46c:	sub	sp, sp, #84	; 0x54
   5b470:	ldr	r5, [r3, r2]
   5b474:	subs	r4, r0, #0
   5b478:	ldr	r3, [r5]
   5b47c:	str	r3, [sp, #76]	; 0x4c
   5b480:	beq	5b57c <blkid_probe_get_size@plt+0x54064>
   5b484:	ldr	r0, [r4, #4]
   5b488:	cmp	r0, #0
   5b48c:	beq	5b5a4 <blkid_probe_get_size@plt+0x5408c>
   5b490:	ldrsb	r3, [r4]
   5b494:	cmp	r3, #2
   5b498:	bne	5b5cc <blkid_probe_get_size@plt+0x540b4>
   5b49c:	add	r6, sp, #24
   5b4a0:	mov	r1, r6
   5b4a4:	bl	3200c <blkid_probe_get_size@plt+0x2aaf4>
   5b4a8:	cmp	r0, #0
   5b4ac:	blt	5b4fc <blkid_probe_get_size@plt+0x53fe4>
   5b4b0:	add	r7, sp, #8
   5b4b4:	mov	r0, r7
   5b4b8:	bl	34380 <blkid_probe_get_size@plt+0x2ce68>
   5b4bc:	subs	r4, r0, #0
   5b4c0:	movlt	r6, #0
   5b4c4:	blt	5b520 <blkid_probe_get_size@plt+0x54008>
   5b4c8:	ldm	r6, {r0, r1, r2, r3}
   5b4cc:	add	ip, sp, #56	; 0x38
   5b4d0:	stm	ip, {r0, r1, r2, r3}
   5b4d4:	ldm	r7, {r0, r1, r2, r3}
   5b4d8:	ldr	ip, [sp, #56]	; 0x38
   5b4dc:	cmp	ip, r0
   5b4e0:	add	ip, sp, #40	; 0x28
   5b4e4:	stm	ip, {r0, r1, r2, r3}
   5b4e8:	beq	5b544 <blkid_probe_get_size@plt+0x5402c>
   5b4ec:	mov	r4, #1
   5b4f0:	eor	r4, r4, #1
   5b4f4:	mov	r6, #0
   5b4f8:	b	5b520 <blkid_probe_get_size@plt+0x54008>
   5b4fc:	bl	42b60 <blkid_probe_get_size@plt+0x3b648>
   5b500:	subs	r6, r0, #0
   5b504:	beq	5b5f8 <blkid_probe_get_size@plt+0x540e0>
   5b508:	ldr	r0, [r4, #4]
   5b50c:	mov	r2, #16
   5b510:	mov	r1, r6
   5b514:	bl	693c <fnmatch@plt>
   5b518:	clz	r4, r0
   5b51c:	lsr	r4, r4, #5
   5b520:	mov	r0, r6
   5b524:	bl	69f0 <free@plt>
   5b528:	ldr	r2, [sp, #76]	; 0x4c
   5b52c:	ldr	r3, [r5]
   5b530:	mov	r0, r4
   5b534:	cmp	r2, r3
   5b538:	bne	5b600 <blkid_probe_get_size@plt+0x540e8>
   5b53c:	add	sp, sp, #84	; 0x54
   5b540:	pop	{r4, r5, r6, r7, pc}
   5b544:	ldr	r2, [sp, #60]	; 0x3c
   5b548:	ldr	r3, [sp, #44]	; 0x2c
   5b54c:	cmp	r2, r3
   5b550:	bne	5b4ec <blkid_probe_get_size@plt+0x53fd4>
   5b554:	ldr	r2, [sp, #64]	; 0x40
   5b558:	ldr	r3, [sp, #48]	; 0x30
   5b55c:	cmp	r2, r3
   5b560:	bne	5b4ec <blkid_probe_get_size@plt+0x53fd4>
   5b564:	ldr	r2, [sp, #68]	; 0x44
   5b568:	ldr	r3, [sp, #52]	; 0x34
   5b56c:	cmp	r2, r3
   5b570:	moveq	r4, #0
   5b574:	bne	5b4ec <blkid_probe_get_size@plt+0x53fd4>
   5b578:	b	5b4f0 <blkid_probe_get_size@plt+0x53fd8>
   5b57c:	ldr	r2, [pc, #136]	; 5b60c <blkid_probe_get_size@plt+0x540f4>
   5b580:	ldr	r1, [pc, #136]	; 5b610 <blkid_probe_get_size@plt+0x540f8>
   5b584:	add	r2, pc, r2
   5b588:	add	r2, r2, #1024	; 0x400
   5b58c:	str	r2, [sp]
   5b590:	ldr	r2, [pc, #124]	; 5b614 <blkid_probe_get_size@plt+0x540fc>
   5b594:	ldr	r3, [pc, #124]	; 5b618 <blkid_probe_get_size@plt+0x54100>
   5b598:	add	r2, pc, r2
   5b59c:	add	r1, pc, r1
   5b5a0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b5a4:	ldr	r3, [pc, #112]	; 5b61c <blkid_probe_get_size@plt+0x54104>
   5b5a8:	ldr	r2, [pc, #112]	; 5b620 <blkid_probe_get_size@plt+0x54108>
   5b5ac:	add	r3, pc, r3
   5b5b0:	ldr	r1, [pc, #108]	; 5b624 <blkid_probe_get_size@plt+0x5410c>
   5b5b4:	add	r3, r3, #1024	; 0x400
   5b5b8:	str	r3, [sp]
   5b5bc:	add	r2, pc, r2
   5b5c0:	ldr	r3, [pc, #96]	; 5b628 <blkid_probe_get_size@plt+0x54110>
   5b5c4:	add	r1, pc, r1
   5b5c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b5cc:	ldr	r2, [pc, #88]	; 5b62c <blkid_probe_get_size@plt+0x54114>
   5b5d0:	ldr	r1, [pc, #88]	; 5b630 <blkid_probe_get_size@plt+0x54118>
   5b5d4:	add	r2, pc, r2
   5b5d8:	add	r2, r2, #1024	; 0x400
   5b5dc:	str	r2, [sp]
   5b5e0:	ldr	r2, [pc, #76]	; 5b634 <blkid_probe_get_size@plt+0x5411c>
   5b5e4:	mov	r3, #332	; 0x14c
   5b5e8:	add	r2, pc, r2
   5b5ec:	add	r1, pc, r1
   5b5f0:	mov	r0, #0
   5b5f4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b5f8:	mvn	r4, #11
   5b5fc:	b	5b520 <blkid_probe_get_size@plt+0x54008>
   5b600:	bl	6fb4 <__stack_chk_fail@plt>
   5b604:	andeq	ip, r3, r4, lsl #14
   5b608:	andeq	r0, r0, ip, lsr r4
   5b60c:	andeq	sl, r1, ip, lsl pc
   5b610:	muleq	r1, r0, r2
   5b614:	andeq	r4, r1, r8, ror r4
   5b618:	andeq	r0, r0, sl, asr #2
   5b61c:	strdeq	sl, [r1], -r4
   5b620:	andeq	r4, r1, r4, asr r4
   5b624:	andeq	fp, r1, ip, ror #13
   5b628:	andeq	r0, r0, fp, asr #2
   5b62c:	andeq	sl, r1, ip, asr #29
   5b630:	andeq	fp, r1, ip, ror #19
   5b634:	andeq	r4, r1, r8, lsr #8
   5b638:	push	{r4, r5, r6, lr}
   5b63c:	subs	r4, r0, #0
   5b640:	sub	sp, sp, #8
   5b644:	beq	5b6dc <blkid_probe_get_size@plt+0x541c4>
   5b648:	ldr	r0, [r4, #4]
   5b64c:	cmp	r0, #0
   5b650:	beq	5b708 <blkid_probe_get_size@plt+0x541f0>
   5b654:	ldrsb	r6, [r4]
   5b658:	cmp	r6, #0
   5b65c:	bne	5b734 <blkid_probe_get_size@plt+0x5421c>
   5b660:	bl	3bd7c <blkid_probe_get_size@plt+0x34864>
   5b664:	subs	r5, r0, #0
   5b668:	blt	5b6b4 <blkid_probe_get_size@plt+0x5419c>
   5b66c:	ldr	r4, [r4, #4]
   5b670:	ldr	r1, [pc, #236]	; 5b764 <blkid_probe_get_size@plt+0x5424c>
   5b674:	mov	r0, r4
   5b678:	add	r1, pc, r1
   5b67c:	bl	7314 <strcmp@plt>
   5b680:	cmp	r0, #0
   5b684:	beq	5b6c0 <blkid_probe_get_size@plt+0x541a8>
   5b688:	ldr	r0, [pc, #216]	; 5b768 <blkid_probe_get_size@plt+0x54250>
   5b68c:	mov	r2, r4
   5b690:	add	r0, pc, r0
   5b694:	add	r0, r0, #560	; 0x230
   5b698:	mov	r1, #32
   5b69c:	bl	39804 <blkid_probe_get_size@plt+0x322ec>
   5b6a0:	cmp	r0, #0
   5b6a4:	blt	5b6d4 <blkid_probe_get_size@plt+0x541bc>
   5b6a8:	sub	r5, r0, r5
   5b6ac:	clz	r5, r5
   5b6b0:	lsr	r5, r5, #5
   5b6b4:	mov	r0, r5
   5b6b8:	add	sp, sp, #8
   5b6bc:	pop	{r4, r5, r6, pc}
   5b6c0:	mov	r0, #18
   5b6c4:	sub	r5, r0, r5
   5b6c8:	clz	r5, r5
   5b6cc:	lsr	r5, r5, #5
   5b6d0:	b	5b6b4 <blkid_probe_get_size@plt+0x5419c>
   5b6d4:	mov	r5, r6
   5b6d8:	b	5b6b4 <blkid_probe_get_size@plt+0x5419c>
   5b6dc:	ldr	r2, [pc, #136]	; 5b76c <blkid_probe_get_size@plt+0x54254>
   5b6e0:	ldr	r1, [pc, #136]	; 5b770 <blkid_probe_get_size@plt+0x54258>
   5b6e4:	add	r2, pc, r2
   5b6e8:	add	r2, r2, #1040	; 0x410
   5b6ec:	add	r2, r2, #4
   5b6f0:	str	r2, [sp]
   5b6f4:	ldr	r2, [pc, #120]	; 5b774 <blkid_probe_get_size@plt+0x5425c>
   5b6f8:	ldr	r3, [pc, #120]	; 5b778 <blkid_probe_get_size@plt+0x54260>
   5b6fc:	add	r2, pc, r2
   5b700:	add	r1, pc, r1
   5b704:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b708:	ldr	r3, [pc, #108]	; 5b77c <blkid_probe_get_size@plt+0x54264>
   5b70c:	ldr	r2, [pc, #108]	; 5b780 <blkid_probe_get_size@plt+0x54268>
   5b710:	add	r3, pc, r3
   5b714:	add	r3, r3, #1040	; 0x410
   5b718:	ldr	r1, [pc, #100]	; 5b784 <blkid_probe_get_size@plt+0x5426c>
   5b71c:	add	r3, r3, #4
   5b720:	str	r3, [sp]
   5b724:	add	r2, pc, r2
   5b728:	ldr	r3, [pc, #88]	; 5b788 <blkid_probe_get_size@plt+0x54270>
   5b72c:	add	r1, pc, r1
   5b730:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b734:	ldr	r2, [pc, #80]	; 5b78c <blkid_probe_get_size@plt+0x54274>
   5b738:	ldr	r1, [pc, #80]	; 5b790 <blkid_probe_get_size@plt+0x54278>
   5b73c:	add	r2, pc, r2
   5b740:	add	r2, r2, #1040	; 0x410
   5b744:	add	r2, r2, #4
   5b748:	str	r2, [sp]
   5b74c:	ldr	r2, [pc, #64]	; 5b794 <blkid_probe_get_size@plt+0x5427c>
   5b750:	mov	r3, #308	; 0x134
   5b754:	add	r2, pc, r2
   5b758:	add	r1, pc, r1
   5b75c:	mov	r0, #0
   5b760:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b764:	andeq	fp, r1, r0, lsr #19
   5b768:	andeq	fp, r3, ip, ror #28
   5b76c:			; <UNDEFINED> instruction: 0x0001adbc
   5b770:	andeq	r8, r1, ip, lsr #2
   5b774:	andeq	r4, r1, r4, lsl r3
   5b778:	andeq	r0, r0, r2, lsr r1
   5b77c:	muleq	r1, r0, sp
   5b780:	andeq	r4, r1, ip, ror #5
   5b784:	andeq	fp, r1, r4, lsl #11
   5b788:	andeq	r0, r0, r3, lsr r1
   5b78c:	andeq	sl, r1, r4, ror #26
   5b790:	muleq	r1, ip, r8
   5b794:			; <UNDEFINED> instruction: 0x000142bc
   5b798:	ldr	r3, [pc, #4044]	; 5c76c <blkid_probe_get_size@plt+0x55254>
   5b79c:	ldr	r2, [pc, #4044]	; 5c770 <blkid_probe_get_size@plt+0x55258>
   5b7a0:	add	r3, pc, r3
   5b7a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5b7a8:	sub	sp, sp, #76	; 0x4c
   5b7ac:	ldr	r5, [r3, r2]
   5b7b0:	subs	r6, r0, #0
   5b7b4:	ldr	r3, [r5]
   5b7b8:	str	r3, [sp, #68]	; 0x44
   5b7bc:	beq	5b9cc <blkid_probe_get_size@plt+0x544b4>
   5b7c0:	ldr	r0, [r6, #4]
   5b7c4:	cmp	r0, #0
   5b7c8:	beq	5b9f4 <blkid_probe_get_size@plt+0x544dc>
   5b7cc:	ldrsb	r3, [r6]
   5b7d0:	cmp	r3, #1
   5b7d4:	bne	5ba1c <blkid_probe_get_size@plt+0x54504>
   5b7d8:	ldr	r1, [pc, #3988]	; 5c774 <blkid_probe_get_size@plt+0x5525c>
   5b7dc:	add	r1, pc, r1
   5b7e0:	bl	7314 <strcmp@plt>
   5b7e4:	subs	r3, r0, #0
   5b7e8:	beq	5b828 <blkid_probe_get_size@plt+0x54310>
   5b7ec:	bl	3a708 <blkid_probe_get_size@plt+0x331f0>
   5b7f0:	subs	r4, r0, #0
   5b7f4:	beq	5b8cc <blkid_probe_get_size@plt+0x543b4>
   5b7f8:	blt	5b84c <blkid_probe_get_size@plt+0x54334>
   5b7fc:	ldr	r6, [r6, #4]
   5b800:	mov	r0, r6
   5b804:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   5b808:	cmp	r0, #0
   5b80c:	blt	5b868 <blkid_probe_get_size@plt+0x54350>
   5b810:	adds	r4, r4, #0
   5b814:	movne	r4, #1
   5b818:	sub	r4, r4, r0
   5b81c:	clz	r4, r4
   5b820:	lsr	r4, r4, #5
   5b824:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5b828:	ldr	r0, [pc, #3912]	; 5c778 <blkid_probe_get_size@plt+0x55260>
   5b82c:	str	r3, [sp, #64]	; 0x40
   5b830:	add	r0, pc, r0
   5b834:	bl	3a3ac <blkid_probe_get_size@plt+0x32e94>
   5b838:	subs	r4, r0, #0
   5b83c:	beq	5b97c <blkid_probe_get_size@plt+0x54464>
   5b840:	ldr	r6, [sp, #64]	; 0x40
   5b844:	mov	r0, r6
   5b848:	bl	69f0 <free@plt>
   5b84c:	ldr	r2, [sp, #68]	; 0x44
   5b850:	ldr	r3, [r5]
   5b854:	mov	r0, r4
   5b858:	cmp	r2, r3
   5b85c:	bne	5c1f8 <blkid_probe_get_size@plt+0x54ce0>
   5b860:	add	sp, sp, #76	; 0x4c
   5b864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5b868:	ldr	r1, [pc, #3852]	; 5c77c <blkid_probe_get_size@plt+0x55264>
   5b86c:	mov	r0, r6
   5b870:	add	r1, pc, r1
   5b874:	bl	7314 <strcmp@plt>
   5b878:	cmp	r0, #0
   5b87c:	beq	5ba5c <blkid_probe_get_size@plt+0x54544>
   5b880:	ldr	r1, [pc, #3832]	; 5c780 <blkid_probe_get_size@plt+0x55268>
   5b884:	mov	r0, r6
   5b888:	add	r1, pc, r1
   5b88c:	bl	7314 <strcmp@plt>
   5b890:	cmp	r0, #0
   5b894:	beq	5ba48 <blkid_probe_get_size@plt+0x54530>
   5b898:	cmp	r4, #0
   5b89c:	beq	5b84c <blkid_probe_get_size@plt+0x54334>
   5b8a0:	cmp	r4, #20
   5b8a4:	bgt	5bf38 <blkid_probe_get_size@plt+0x54a20>
   5b8a8:	ldr	r3, [pc, #3796]	; 5c784 <blkid_probe_get_size@plt+0x5526c>
   5b8ac:	add	r3, pc, r3
   5b8b0:	add	r4, r3, r4, lsl #2
   5b8b4:	ldr	r1, [r4, #776]	; 0x308
   5b8b8:	mov	r0, r6
   5b8bc:	bl	7314 <strcmp@plt>
   5b8c0:	clz	r4, r0
   5b8c4:	lsr	r4, r4, #5
   5b8c8:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5b8cc:	ldr	r0, [pc, #3764]	; 5c788 <blkid_probe_get_size@plt+0x55270>
   5b8d0:	ldr	r8, [pc, #3764]	; 5c78c <blkid_probe_get_size@plt+0x55274>
   5b8d4:	add	r0, pc, r0
   5b8d8:	bl	74dc <__tls_get_addr@plt>
   5b8dc:	ldr	r3, [r8, r0]
   5b8e0:	cmp	r3, #0
   5b8e4:	movge	r4, r3
   5b8e8:	bge	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5b8ec:	ldr	r2, [pc, #3740]	; 5c790 <blkid_probe_get_size@plt+0x55278>
   5b8f0:	ldr	r3, [pc, #3740]	; 5c794 <blkid_probe_get_size@plt+0x5527c>
   5b8f4:	add	r2, pc, r2
   5b8f8:	ldr	r9, [pc, #3736]	; 5c798 <blkid_probe_get_size@plt+0x55280>
   5b8fc:	str	r2, [sp, #28]
   5b900:	ldr	r2, [pc, #3732]	; 5c79c <blkid_probe_get_size@plt+0x55284>
   5b904:	add	r3, pc, r3
   5b908:	add	r2, pc, r2
   5b90c:	add	r3, r3, #760	; 0x2f8
   5b910:	add	r9, pc, r9
   5b914:	str	r2, [sp, #40]	; 0x28
   5b918:	str	r3, [sp, #48]	; 0x30
   5b91c:	add	r2, r9, #688	; 0x2b0
   5b920:	add	r3, sp, #64	; 0x40
   5b924:	str	r2, [sp, #44]	; 0x2c
   5b928:	str	r4, [sp, #36]	; 0x24
   5b92c:	str	r3, [sp, #32]
   5b930:	mov	r7, #0
   5b934:	ldrd	r0, [sp, #28]
   5b938:	str	r7, [sp, #64]	; 0x40
   5b93c:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5b940:	subs	sl, r0, #0
   5b944:	bge	5bb10 <blkid_probe_get_size@plt+0x545f8>
   5b948:	cmn	sl, #2
   5b94c:	ldr	r0, [sp, #64]	; 0x40
   5b950:	beq	5bb70 <blkid_probe_get_size@plt+0x54658>
   5b954:	bl	69f0 <free@plt>
   5b958:	ldr	r3, [pc, #3648]	; 5c7a0 <blkid_probe_get_size@plt+0x55288>
   5b95c:	add	r3, pc, r3
   5b960:	ldr	r3, [r3]
   5b964:	cmp	r3, #6
   5b968:	bgt	5be64 <blkid_probe_get_size@plt+0x5494c>
   5b96c:	cmp	sl, #0
   5b970:	bge	5c540 <blkid_probe_get_size@plt+0x55028>
   5b974:	mov	r4, sl
   5b978:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5b97c:	ldr	r0, [pc, #3616]	; 5c7a4 <blkid_probe_get_size@plt+0x5528c>
   5b980:	add	r0, pc, r0
   5b984:	bl	3a3ac <blkid_probe_get_size@plt+0x32e94>
   5b988:	subs	r4, r0, #0
   5b98c:	bne	5b840 <blkid_probe_get_size@plt+0x54328>
   5b990:	ldr	r0, [pc, #3600]	; 5c7a8 <blkid_probe_get_size@plt+0x55290>
   5b994:	add	r1, sp, #64	; 0x40
   5b998:	add	r0, pc, r0
   5b99c:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5b9a0:	subs	r6, r0, #0
   5b9a4:	bge	5ba70 <blkid_probe_get_size@plt+0x54558>
   5b9a8:	ldr	r3, [pc, #3580]	; 5c7ac <blkid_probe_get_size@plt+0x55294>
   5b9ac:	add	r3, pc, r3
   5b9b0:	ldr	r3, [r3]
   5b9b4:	cmp	r3, #6
   5b9b8:	bgt	5bd18 <blkid_probe_get_size@plt+0x54800>
   5b9bc:	cmn	r6, #2
   5b9c0:	movne	r4, r6
   5b9c4:	ldr	r6, [sp, #64]	; 0x40
   5b9c8:	b	5b844 <blkid_probe_get_size@plt+0x5432c>
   5b9cc:	ldr	r2, [pc, #3548]	; 5c7b0 <blkid_probe_get_size@plt+0x55298>
   5b9d0:	ldr	r1, [pc, #3548]	; 5c7b4 <blkid_probe_get_size@plt+0x5529c>
   5b9d4:	add	r2, pc, r2
   5b9d8:	add	r2, r2, #1072	; 0x430
   5b9dc:	str	r2, [sp]
   5b9e0:	ldr	r2, [pc, #3536]	; 5c7b8 <blkid_probe_get_size@plt+0x552a0>
   5b9e4:	mov	r3, #276	; 0x114
   5b9e8:	add	r2, pc, r2
   5b9ec:	add	r1, pc, r1
   5b9f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5b9f4:	ldr	r3, [pc, #3520]	; 5c7bc <blkid_probe_get_size@plt+0x552a4>
   5b9f8:	ldr	r2, [pc, #3520]	; 5c7c0 <blkid_probe_get_size@plt+0x552a8>
   5b9fc:	add	r3, pc, r3
   5ba00:	ldr	r1, [pc, #3516]	; 5c7c4 <blkid_probe_get_size@plt+0x552ac>
   5ba04:	add	r3, r3, #1072	; 0x430
   5ba08:	str	r3, [sp]
   5ba0c:	add	r2, pc, r2
   5ba10:	ldr	r3, [pc, #3504]	; 5c7c8 <blkid_probe_get_size@plt+0x552b0>
   5ba14:	add	r1, pc, r1
   5ba18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5ba1c:	ldr	r2, [pc, #3496]	; 5c7cc <blkid_probe_get_size@plt+0x552b4>
   5ba20:	ldr	r1, [pc, #3496]	; 5c7d0 <blkid_probe_get_size@plt+0x552b8>
   5ba24:	add	r2, pc, r2
   5ba28:	add	r2, r2, #1072	; 0x430
   5ba2c:	str	r2, [sp]
   5ba30:	ldr	r2, [pc, #3484]	; 5c7d4 <blkid_probe_get_size@plt+0x552bc>
   5ba34:	ldr	r3, [pc, #3484]	; 5c7d8 <blkid_probe_get_size@plt+0x552c0>
   5ba38:	add	r2, pc, r2
   5ba3c:	add	r1, pc, r1
   5ba40:	mov	r0, #0
   5ba44:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5ba48:	sub	r4, r4, #14
   5ba4c:	cmp	r4, #6
   5ba50:	movhi	r4, #0
   5ba54:	movls	r4, #1
   5ba58:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5ba5c:	sub	r4, r4, #1
   5ba60:	cmp	r4, #12
   5ba64:	movhi	r4, #0
   5ba68:	movls	r4, #1
   5ba6c:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5ba70:	ldr	r6, [sp, #64]	; 0x40
   5ba74:	cmp	r6, #0
   5ba78:	beq	5bf08 <blkid_probe_get_size@plt+0x549f0>
   5ba7c:	ldr	r1, [pc, #3416]	; 5c7dc <blkid_probe_get_size@plt+0x552c4>
   5ba80:	mov	r0, r6
   5ba84:	add	r1, pc, r1
   5ba88:	bl	6a8c <strcspn@plt>
   5ba8c:	ldr	r1, [pc, #3404]	; 5c7e0 <blkid_probe_get_size@plt+0x552c8>
   5ba90:	add	r1, pc, r1
   5ba94:	strb	r4, [r6, r0]
   5ba98:	ldr	r6, [sp, #64]	; 0x40
   5ba9c:	mov	r0, r6
   5baa0:	bl	7314 <strcmp@plt>
   5baa4:	ldr	r3, [pc, #3384]	; 5c7e4 <blkid_probe_get_size@plt+0x552cc>
   5baa8:	add	r3, pc, r3
   5baac:	ldr	r3, [r3]
   5bab0:	cmp	r3, #6
   5bab4:	clz	r4, r0
   5bab8:	lsr	r4, r4, #5
   5babc:	ble	5b844 <blkid_probe_get_size@plt+0x5432c>
   5bac0:	cmp	r0, #0
   5bac4:	beq	5be14 <blkid_probe_get_size@plt+0x548fc>
   5bac8:	ldr	r1, [pc, #3352]	; 5c7e8 <blkid_probe_get_size@plt+0x552d0>
   5bacc:	add	r1, pc, r1
   5bad0:	ldr	r2, [pc, #3348]	; 5c7ec <blkid_probe_get_size@plt+0x552d4>
   5bad4:	ldr	r3, [pc, #3348]	; 5c7f0 <blkid_probe_get_size@plt+0x552d8>
   5bad8:	add	r2, pc, r2
   5badc:	str	r2, [sp, #4]
   5bae0:	add	r3, pc, r3
   5bae4:	ldr	r2, [pc, #3336]	; 5c7f4 <blkid_probe_get_size@plt+0x552dc>
   5bae8:	add	r3, r3, #1104	; 0x450
   5baec:	str	r1, [sp, #12]
   5baf0:	str	r3, [sp]
   5baf4:	str	r6, [sp, #8]
   5baf8:	mov	r3, #600	; 0x258
   5bafc:	add	r2, pc, r2
   5bb00:	mov	r1, #0
   5bb04:	mov	r0, #7
   5bb08:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5bb0c:	b	5b840 <blkid_probe_get_size@plt+0x54328>
   5bb10:	ldr	fp, [sp, #40]	; 0x28
   5bb14:	str	r4, [sp, #52]	; 0x34
   5bb18:	ldr	sl, [sp, #64]	; 0x40
   5bb1c:	mov	r4, fp
   5bb20:	mov	r9, #3
   5bb24:	ldr	fp, [sp, #44]	; 0x2c
   5bb28:	b	5bb3c <blkid_probe_get_size@plt+0x54624>
   5bb2c:	ldr	r4, [fp, r7, lsl #3]
   5bb30:	mov	r0, r4
   5bb34:	bl	723c <strlen@plt>
   5bb38:	mov	r9, r0
   5bb3c:	mov	r1, r4
   5bb40:	mov	r2, r9
   5bb44:	mov	r0, sl
   5bb48:	bl	6a5c <strncmp@plt>
   5bb4c:	cmp	r0, #0
   5bb50:	bne	5bb5c <blkid_probe_get_size@plt+0x54644>
   5bb54:	cmn	sl, r9
   5bb58:	bne	5bd50 <blkid_probe_get_size@plt+0x54838>
   5bb5c:	add	r7, r7, #1
   5bb60:	cmp	r7, #9
   5bb64:	bne	5bb2c <blkid_probe_get_size@plt+0x54614>
   5bb68:	ldr	r4, [sp, #52]	; 0x34
   5bb6c:	mov	r0, sl
   5bb70:	bl	69f0 <free@plt>
   5bb74:	ldr	r3, [sp, #36]	; 0x24
   5bb78:	add	r3, r3, #1
   5bb7c:	cmp	r3, #4
   5bb80:	str	r3, [sp, #36]	; 0x24
   5bb84:	bne	5be9c <blkid_probe_get_size@plt+0x54984>
   5bb88:	ldr	r7, [pc, #3176]	; 5c7f8 <blkid_probe_get_size@plt+0x552e0>
   5bb8c:	add	r7, pc, r7
   5bb90:	ldr	r3, [r7]
   5bb94:	cmp	r3, #6
   5bb98:	bgt	5be20 <blkid_probe_get_size@plt+0x54908>
   5bb9c:	mov	r7, #0
   5bba0:	ldr	r0, [pc, #3156]	; 5c7fc <blkid_probe_get_size@plt+0x552e4>
   5bba4:	mov	r1, #0
   5bba8:	add	r0, pc, r0
   5bbac:	bl	6ff0 <access@plt>
   5bbb0:	cmp	r0, #0
   5bbb4:	blt	5bfa8 <blkid_probe_get_size@plt+0x54a90>
   5bbb8:	ldr	r3, [pc, #3136]	; 5c800 <blkid_probe_get_size@plt+0x552e8>
   5bbbc:	add	r3, pc, r3
   5bbc0:	ldr	r3, [r3]
   5bbc4:	cmp	r3, #6
   5bbc8:	ble	5bc00 <blkid_probe_get_size@plt+0x546e8>
   5bbcc:	ldr	r2, [pc, #3120]	; 5c804 <blkid_probe_get_size@plt+0x552ec>
   5bbd0:	ldr	r3, [pc, #3120]	; 5c808 <blkid_probe_get_size@plt+0x552f0>
   5bbd4:	add	r2, pc, r2
   5bbd8:	add	r3, pc, r3
   5bbdc:	str	r2, [sp, #4]
   5bbe0:	ldr	r2, [pc, #3108]	; 5c80c <blkid_probe_get_size@plt+0x552f4>
   5bbe4:	add	r3, r3, #1168	; 0x490
   5bbe8:	str	r3, [sp]
   5bbec:	add	r2, pc, r2
   5bbf0:	mov	r3, #190	; 0xbe
   5bbf4:	mov	r1, #0
   5bbf8:	mov	r0, #7
   5bbfc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5bc00:	ldr	sl, [pc, #3080]	; 5c810 <blkid_probe_get_size@plt+0x552f8>
   5bc04:	add	r9, sp, #72	; 0x48
   5bc08:	mov	r3, #0
   5bc0c:	add	sl, pc, sl
   5bc10:	str	r3, [r9, #-12]!
   5bc14:	mov	r0, sl
   5bc18:	mov	r1, r9
   5bc1c:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5bc20:	adds	r3, r0, #2
   5bc24:	movne	r3, #1
   5bc28:	ands	r3, r3, r0, lsr #31
   5bc2c:	mov	r7, r0
   5bc30:	bne	5beb0 <blkid_probe_get_size@plt+0x54998>
   5bc34:	cmp	r0, #0
   5bc38:	bne	5bc6c <blkid_probe_get_size@plt+0x54754>
   5bc3c:	ldr	r1, [pc, #3024]	; 5c814 <blkid_probe_get_size@plt+0x552fc>
   5bc40:	ldr	r2, [sp, #32]
   5bc44:	add	r1, pc, r1
   5bc48:	ldr	r0, [sp, #60]	; 0x3c
   5bc4c:	bl	735c <sscanf@plt>
   5bc50:	cmp	r0, #1
   5bc54:	beq	5c148 <blkid_probe_get_size@plt+0x54c30>
   5bc58:	ldr	r3, [pc, #3000]	; 5c818 <blkid_probe_get_size@plt+0x55300>
   5bc5c:	add	r3, pc, r3
   5bc60:	ldr	r3, [r3]
   5bc64:	cmp	r3, #6
   5bc68:	bgt	5c298 <blkid_probe_get_size@plt+0x54d80>
   5bc6c:	ldr	r0, [pc, #2984]	; 5c81c <blkid_probe_get_size@plt+0x55304>
   5bc70:	mov	r1, r9
   5bc74:	add	r0, pc, r0
   5bc78:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5bc7c:	cmn	r0, #2
   5bc80:	mov	r7, r0
   5bc84:	beq	5bf40 <blkid_probe_get_size@plt+0x54a28>
   5bc88:	cmp	r0, #0
   5bc8c:	blt	5beb0 <blkid_probe_get_size@plt+0x54998>
   5bc90:	ldr	r3, [sp, #60]	; 0x3c
   5bc94:	ldr	r9, [pc, #2948]	; 5c820 <blkid_probe_get_size@plt+0x55308>
   5bc98:	ldr	sl, [pc, #2948]	; 5c824 <blkid_probe_get_size@plt+0x5530c>
   5bc9c:	add	r9, pc, r9
   5bca0:	str	r3, [sp, #64]	; 0x40
   5bca4:	add	sl, pc, sl
   5bca8:	ldr	fp, [sp, #32]
   5bcac:	b	5bcc0 <blkid_probe_get_size@plt+0x547a8>
   5bcb0:	mov	r1, sl
   5bcb4:	bl	7314 <strcmp@plt>
   5bcb8:	cmp	r0, #0
   5bcbc:	beq	5bf68 <blkid_probe_get_size@plt+0x54a50>
   5bcc0:	mov	r1, r9
   5bcc4:	mov	r0, fp
   5bcc8:	bl	6f18 <strsep@plt>
   5bccc:	subs	r1, r0, #0
   5bcd0:	bne	5bcb0 <blkid_probe_get_size@plt+0x54798>
   5bcd4:	ldr	r4, [pc, #2892]	; 5c828 <blkid_probe_get_size@plt+0x55310>
   5bcd8:	add	r4, pc, r4
   5bcdc:	ldr	r3, [r4]
   5bce0:	cmp	r3, #6
   5bce4:	bgt	5c2f8 <blkid_probe_get_size@plt+0x54de0>
   5bce8:	ldr	r0, [sp, #60]	; 0x3c
   5bcec:	bl	69f0 <free@plt>
   5bcf0:	ldr	r0, [pc, #2868]	; 5c82c <blkid_probe_get_size@plt+0x55314>
   5bcf4:	add	r0, pc, r0
   5bcf8:	bl	74dc <__tls_get_addr@plt>
   5bcfc:	ldr	r2, [r4]
   5bd00:	mov	r3, #4
   5bd04:	cmp	r2, #6
   5bd08:	str	r3, [r8, r0]
   5bd0c:	bgt	5c140 <blkid_probe_get_size@plt+0x54c28>
   5bd10:	mov	r4, #4
   5bd14:	b	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5bd18:	ldr	r2, [pc, #2832]	; 5c830 <blkid_probe_get_size@plt+0x55318>
   5bd1c:	ldr	r3, [pc, #2832]	; 5c834 <blkid_probe_get_size@plt+0x5531c>
   5bd20:	add	r2, pc, r2
   5bd24:	str	r2, [sp, #4]
   5bd28:	add	r3, pc, r3
   5bd2c:	ldr	r2, [pc, #2820]	; 5c838 <blkid_probe_get_size@plt+0x55320>
   5bd30:	add	r3, r3, #1104	; 0x450
   5bd34:	str	r3, [sp]
   5bd38:	add	r2, pc, r2
   5bd3c:	ldr	r3, [pc, #2808]	; 5c83c <blkid_probe_get_size@plt+0x55324>
   5bd40:	mov	r1, r6
   5bd44:	mov	r0, #7
   5bd48:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5bd4c:	b	5b9bc <blkid_probe_get_size@plt+0x544a4>
   5bd50:	ldr	r3, [pc, #2792]	; 5c840 <blkid_probe_get_size@plt+0x55328>
   5bd54:	ldr	r4, [sp, #52]	; 0x34
   5bd58:	add	r3, pc, r3
   5bd5c:	ldr	r3, [r3]
   5bd60:	cmp	r3, #6
   5bd64:	bgt	5bec0 <blkid_probe_get_size@plt+0x549a8>
   5bd68:	ldr	r3, [pc, #2772]	; 5c844 <blkid_probe_get_size@plt+0x5532c>
   5bd6c:	mov	r0, sl
   5bd70:	add	r3, pc, r3
   5bd74:	add	r7, r3, r7, lsl #3
   5bd78:	ldr	sl, [r7, #692]	; 0x2b4
   5bd7c:	bl	69f0 <free@plt>
   5bd80:	cmp	sl, #4
   5bd84:	beq	5bc00 <blkid_probe_get_size@plt+0x546e8>
   5bd88:	cmp	sl, #7
   5bd8c:	bne	5b958 <blkid_probe_get_size@plt+0x54440>
   5bd90:	ldr	r0, [pc, #2736]	; 5c848 <blkid_probe_get_size@plt+0x55330>
   5bd94:	mov	r4, sl
   5bd98:	add	r0, pc, r0
   5bd9c:	bl	74dc <__tls_get_addr@plt>
   5bda0:	ldr	r3, [pc, #2724]	; 5c84c <blkid_probe_get_size@plt+0x55334>
   5bda4:	add	r3, pc, r3
   5bda8:	ldr	r3, [r3]
   5bdac:	cmp	r3, #6
   5bdb0:	str	sl, [r8, r0]
   5bdb4:	ble	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5bdb8:	cmp	sl, #20
   5bdbc:	movgt	r1, #0
   5bdc0:	bgt	5bdd4 <blkid_probe_get_size@plt+0x548bc>
   5bdc4:	ldr	r3, [pc, #2692]	; 5c850 <blkid_probe_get_size@plt+0x55338>
   5bdc8:	add	r3, pc, r3
   5bdcc:	add	r3, r3, r4, lsl #2
   5bdd0:	ldr	r1, [r3, #776]	; 0x308
   5bdd4:	ldr	r3, [pc, #2680]	; 5c854 <blkid_probe_get_size@plt+0x5533c>
   5bdd8:	ldr	r2, [pc, #2680]	; 5c858 <blkid_probe_get_size@plt+0x55340>
   5bddc:	add	r3, pc, r3
   5bde0:	add	r2, pc, r2
   5bde4:	str	r2, [sp, #4]
   5bde8:	add	r3, r3, #1280	; 0x500
   5bdec:	ldr	r2, [pc, #2664]	; 5c85c <blkid_probe_get_size@plt+0x55344>
   5bdf0:	add	r3, r3, #4
   5bdf4:	str	r1, [sp, #8]
   5bdf8:	str	r3, [sp]
   5bdfc:	add	r2, pc, r2
   5be00:	mov	r3, #424	; 0x1a8
   5be04:	mov	r1, #0
   5be08:	mov	r0, #7
   5be0c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5be10:	b	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5be14:	ldr	r1, [pc, #2628]	; 5c860 <blkid_probe_get_size@plt+0x55348>
   5be18:	add	r1, pc, r1
   5be1c:	b	5bad0 <blkid_probe_get_size@plt+0x545b8>
   5be20:	ldr	r2, [pc, #2620]	; 5c864 <blkid_probe_get_size@plt+0x5534c>
   5be24:	ldr	r3, [pc, #2620]	; 5c868 <blkid_probe_get_size@plt+0x55350>
   5be28:	add	r2, pc, r2
   5be2c:	str	r2, [sp, #4]
   5be30:	add	r3, pc, r3
   5be34:	ldr	r2, [pc, #2608]	; 5c86c <blkid_probe_get_size@plt+0x55354>
   5be38:	add	r3, r3, #1136	; 0x470
   5be3c:	str	r3, [sp]
   5be40:	add	r2, pc, r2
   5be44:	mov	r3, #176	; 0xb0
   5be48:	mov	r1, #0
   5be4c:	mov	r0, #7
   5be50:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5be54:	ldr	r3, [r7]
   5be58:	cmp	r3, #6
   5be5c:	movgt	sl, #0
   5be60:	ble	5bb9c <blkid_probe_get_size@plt+0x54684>
   5be64:	ldr	r2, [pc, #2564]	; 5c870 <blkid_probe_get_size@plt+0x55358>
   5be68:	ldr	r3, [pc, #2564]	; 5c874 <blkid_probe_get_size@plt+0x5535c>
   5be6c:	add	r2, pc, r2
   5be70:	str	r2, [sp, #4]
   5be74:	add	r3, pc, r3
   5be78:	ldr	r2, [pc, #2552]	; 5c878 <blkid_probe_get_size@plt+0x55360>
   5be7c:	add	r3, r3, #1152	; 0x480
   5be80:	str	r3, [sp]
   5be84:	add	r2, pc, r2
   5be88:	mov	r3, #79	; 0x4f
   5be8c:	mov	r1, #0
   5be90:	mov	r0, #7
   5be94:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5be98:	b	5b96c <blkid_probe_get_size@plt+0x54454>
   5be9c:	ldr	r3, [sp, #48]	; 0x30
   5bea0:	ldr	r2, [sp, #36]	; 0x24
   5bea4:	ldr	r3, [r3, r2, lsl #2]
   5bea8:	str	r3, [sp, #28]
   5beac:	b	5b930 <blkid_probe_get_size@plt+0x54418>
   5beb0:	ldr	r0, [sp, #60]	; 0x3c
   5beb4:	mov	r4, r7
   5beb8:	bl	69f0 <free@plt>
   5bebc:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5bec0:	ldr	r2, [pc, #2484]	; 5c87c <blkid_probe_get_size@plt+0x55364>
   5bec4:	ldr	r3, [pc, #2484]	; 5c880 <blkid_probe_get_size@plt+0x55368>
   5bec8:	add	r2, pc, r2
   5becc:	ldr	r1, [sp, #28]
   5bed0:	str	r2, [sp, #4]
   5bed4:	add	r3, pc, r3
   5bed8:	ldr	r2, [pc, #2468]	; 5c884 <blkid_probe_get_size@plt+0x5536c>
   5bedc:	add	r3, r3, #1136	; 0x470
   5bee0:	str	r1, [sp, #12]
   5bee4:	str	sl, [sp, #8]
   5bee8:	mov	r1, r0
   5beec:	str	r3, [sp]
   5bef0:	add	r2, pc, r2
   5bef4:	mov	r3, #170	; 0xaa
   5bef8:	mov	r0, #7
   5befc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5bf00:	ldr	sl, [sp, #64]	; 0x40
   5bf04:	b	5bd68 <blkid_probe_get_size@plt+0x54850>
   5bf08:	ldr	r3, [pc, #2424]	; 5c888 <blkid_probe_get_size@plt+0x55370>
   5bf0c:	ldr	r2, [pc, #2424]	; 5c88c <blkid_probe_get_size@plt+0x55374>
   5bf10:	add	r3, pc, r3
   5bf14:	add	r3, r3, #1120	; 0x460
   5bf18:	ldr	r1, [pc, #2416]	; 5c890 <blkid_probe_get_size@plt+0x55378>
   5bf1c:	add	r3, r3, #4
   5bf20:	str	r3, [sp]
   5bf24:	mov	r0, r6
   5bf28:	ldr	r3, [pc, #2404]	; 5c894 <blkid_probe_get_size@plt+0x5537c>
   5bf2c:	add	r2, pc, r2
   5bf30:	add	r1, pc, r1
   5bf34:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5bf38:	mov	r1, #0
   5bf3c:	b	5b8b8 <blkid_probe_get_size@plt+0x543a0>
   5bf40:	ldr	r4, [pc, #2384]	; 5c898 <blkid_probe_get_size@plt+0x55380>
   5bf44:	add	r4, pc, r4
   5bf48:	ldr	r3, [r4]
   5bf4c:	cmp	r3, #6
   5bf50:	bgt	5c208 <blkid_probe_get_size@plt+0x54cf0>
   5bf54:	ldr	r0, [sp, #60]	; 0x3c
   5bf58:	bl	69f0 <free@plt>
   5bf5c:	ldr	r0, [pc, #2360]	; 5c89c <blkid_probe_get_size@plt+0x55384>
   5bf60:	add	r0, pc, r0
   5bf64:	b	5bcf8 <blkid_probe_get_size@plt+0x547e0>
   5bf68:	ldr	r9, [pc, #2352]	; 5c8a0 <blkid_probe_get_size@plt+0x55388>
   5bf6c:	mov	r7, r0
   5bf70:	add	r9, pc, r9
   5bf74:	ldr	r3, [r9]
   5bf78:	cmp	r3, #6
   5bf7c:	bgt	5c250 <blkid_probe_get_size@plt+0x54d38>
   5bf80:	ldr	r0, [sp, #60]	; 0x3c
   5bf84:	bl	69f0 <free@plt>
   5bf88:	ldr	r0, [pc, #2324]	; 5c8a4 <blkid_probe_get_size@plt+0x5538c>
   5bf8c:	add	r0, pc, r0
   5bf90:	bl	74dc <__tls_get_addr@plt>
   5bf94:	ldr	r3, [r9]
   5bf98:	cmp	r3, #6
   5bf9c:	str	r7, [r8, r0]
   5bfa0:	ble	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5bfa4:	b	5bdc4 <blkid_probe_get_size@plt+0x548ac>
   5bfa8:	ldr	r3, [pc, #2296]	; 5c8a8 <blkid_probe_get_size@plt+0x55390>
   5bfac:	add	r3, pc, r3
   5bfb0:	ldr	r3, [r3]
   5bfb4:	cmp	r3, #6
   5bfb8:	ble	5bff0 <blkid_probe_get_size@plt+0x54ad8>
   5bfbc:	ldr	r2, [pc, #2280]	; 5c8ac <blkid_probe_get_size@plt+0x55394>
   5bfc0:	ldr	r3, [pc, #2280]	; 5c8b0 <blkid_probe_get_size@plt+0x55398>
   5bfc4:	add	r2, pc, r2
   5bfc8:	add	r3, pc, r3
   5bfcc:	str	r2, [sp, #4]
   5bfd0:	ldr	r2, [pc, #2268]	; 5c8b4 <blkid_probe_get_size@plt+0x5539c>
   5bfd4:	add	r3, r3, #1168	; 0x490
   5bfd8:	str	r3, [sp]
   5bfdc:	add	r2, pc, r2
   5bfe0:	mov	r3, #186	; 0xba
   5bfe4:	mov	r1, #0
   5bfe8:	mov	r0, #7
   5bfec:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5bff0:	ldr	r0, [pc, #2240]	; 5c8b8 <blkid_probe_get_size@plt+0x553a0>
   5bff4:	mov	r9, #0
   5bff8:	ldr	r1, [sp, #32]
   5bffc:	add	r0, pc, r0
   5c000:	str	r9, [sp, #64]	; 0x40
   5c004:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5c008:	cmn	r0, #2
   5c00c:	mov	sl, r0
   5c010:	beq	5c1fc <blkid_probe_get_size@plt+0x54ce4>
   5c014:	cmp	sl, #0
   5c018:	ldr	r7, [sp, #64]	; 0x40
   5c01c:	blt	5c2dc <blkid_probe_get_size@plt+0x54dc4>
   5c020:	ldr	r3, [pc, #2196]	; 5c8bc <blkid_probe_get_size@plt+0x553a4>
   5c024:	add	r3, pc, r3
   5c028:	ldr	r3, [r3]
   5c02c:	cmp	r3, #6
   5c030:	bgt	5c500 <blkid_probe_get_size@plt+0x54fe8>
   5c034:	ldr	r1, [pc, #2180]	; 5c8c0 <blkid_probe_get_size@plt+0x553a8>
   5c038:	mov	r0, r7
   5c03c:	add	r1, pc, r1
   5c040:	bl	7314 <strcmp@plt>
   5c044:	cmp	r0, #0
   5c048:	beq	5c4f8 <blkid_probe_get_size@plt+0x54fe0>
   5c04c:	mov	r0, r7
   5c050:	bl	69f0 <free@plt>
   5c054:	mov	r7, #1
   5c058:	ldr	r0, [pc, #2148]	; 5c8c4 <blkid_probe_get_size@plt+0x553ac>
   5c05c:	mov	sl, #0
   5c060:	ldr	r1, [sp, #32]
   5c064:	add	r0, pc, r0
   5c068:	str	sl, [sp, #64]	; 0x40
   5c06c:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5c070:	cmn	r0, #2
   5c074:	mov	r9, r0
   5c078:	beq	5c380 <blkid_probe_get_size@plt+0x54e68>
   5c07c:	cmp	r0, #0
   5c080:	ldr	r7, [sp, #64]	; 0x40
   5c084:	blt	5c370 <blkid_probe_get_size@plt+0x54e58>
   5c088:	ldr	r2, [pc, #2104]	; 5c8c8 <blkid_probe_get_size@plt+0x553b0>
   5c08c:	add	r2, pc, r2
   5c090:	ldr	r2, [r2]
   5c094:	cmp	r2, #6
   5c098:	ble	5c0dc <blkid_probe_get_size@plt+0x54bc4>
   5c09c:	ldr	r2, [pc, #2088]	; 5c8cc <blkid_probe_get_size@plt+0x553b4>
   5c0a0:	ldr	r0, [pc, #2088]	; 5c8d0 <blkid_probe_get_size@plt+0x553b8>
   5c0a4:	add	r2, pc, r2
   5c0a8:	add	r2, r2, #1200	; 0x4b0
   5c0ac:	add	r2, r2, #8
   5c0b0:	str	r2, [sp]
   5c0b4:	ldr	r2, [pc, #2072]	; 5c8d4 <blkid_probe_get_size@plt+0x553bc>
   5c0b8:	add	r0, pc, r0
   5c0bc:	str	r7, [sp, #8]
   5c0c0:	str	r0, [sp, #4]
   5c0c4:	mov	r1, sl
   5c0c8:	mov	r3, #114	; 0x72
   5c0cc:	add	r2, pc, r2
   5c0d0:	mov	r0, #7
   5c0d4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c0d8:	ldr	r7, [sp, #64]	; 0x40
   5c0dc:	ldr	r1, [pc, #2036]	; 5c8d8 <blkid_probe_get_size@plt+0x553c0>
   5c0e0:	mov	r0, r7
   5c0e4:	add	r1, pc, r1
   5c0e8:	bl	7314 <strcmp@plt>
   5c0ec:	cmp	r0, #0
   5c0f0:	beq	5c33c <blkid_probe_get_size@plt+0x54e24>
   5c0f4:	ldr	r1, [pc, #2016]	; 5c8dc <blkid_probe_get_size@plt+0x553c4>
   5c0f8:	mov	r0, r7
   5c0fc:	add	r1, pc, r1
   5c100:	bl	7050 <strstr@plt>
   5c104:	cmp	r0, #0
   5c108:	mov	r0, r7
   5c10c:	beq	5cadc <blkid_probe_get_size@plt+0x555c4>
   5c110:	bl	69f0 <free@plt>
   5c114:	b	5bc00 <blkid_probe_get_size@plt+0x546e8>
   5c118:	ldr	r0, [pc, #1984]	; 5c8e0 <blkid_probe_get_size@plt+0x553c8>
   5c11c:	add	r0, pc, r0
   5c120:	bl	74dc <__tls_get_addr@plt>
   5c124:	ldr	r3, [pc, #1976]	; 5c8e4 <blkid_probe_get_size@plt+0x553cc>
   5c128:	mov	r2, #4
   5c12c:	add	r3, pc, r3
   5c130:	ldr	r3, [r3]
   5c134:	cmp	r3, #6
   5c138:	str	r2, [r8, r0]
   5c13c:	ble	5bd10 <blkid_probe_get_size@plt+0x547f8>
   5c140:	mov	r4, #4
   5c144:	b	5bdc4 <blkid_probe_get_size@plt+0x548ac>
   5c148:	ldr	r3, [pc, #1944]	; 5c8e8 <blkid_probe_get_size@plt+0x553d0>
   5c14c:	ldr	r0, [sp, #64]	; 0x40
   5c150:	add	r3, pc, r3
   5c154:	and	r7, r0, #2048	; 0x800
   5c158:	ldr	r3, [r3]
   5c15c:	cmp	r3, #6
   5c160:	ble	5c1bc <blkid_probe_get_size@plt+0x54ca4>
   5c164:	cmp	r7, #0
   5c168:	beq	5c2ec <blkid_probe_get_size@plt+0x54dd4>
   5c16c:	ldr	ip, [pc, #1912]	; 5c8ec <blkid_probe_get_size@plt+0x553d4>
   5c170:	add	ip, pc, ip
   5c174:	ldr	r2, [pc, #1908]	; 5c8f0 <blkid_probe_get_size@plt+0x553d8>
   5c178:	ldr	r3, [pc, #1908]	; 5c8f4 <blkid_probe_get_size@plt+0x553dc>
   5c17c:	add	r2, pc, r2
   5c180:	ldr	r1, [pc, #1904]	; 5c8f8 <blkid_probe_get_size@plt+0x553e0>
   5c184:	add	r3, pc, r3
   5c188:	str	r2, [sp, #4]
   5c18c:	ldr	r2, [pc, #1896]	; 5c8fc <blkid_probe_get_size@plt+0x553e4>
   5c190:	add	r1, pc, r1
   5c194:	add	r3, r3, #1264	; 0x4f0
   5c198:	str	r0, [sp, #12]
   5c19c:	str	r3, [sp]
   5c1a0:	str	r1, [sp, #8]
   5c1a4:	str	ip, [sp, #16]
   5c1a8:	mov	r3, #215	; 0xd7
   5c1ac:	add	r2, pc, r2
   5c1b0:	mov	r1, #0
   5c1b4:	mov	r0, #7
   5c1b8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c1bc:	ldr	r0, [sp, #60]	; 0x3c
   5c1c0:	bl	69f0 <free@plt>
   5c1c4:	cmp	r7, #0
   5c1c8:	beq	5c118 <blkid_probe_get_size@plt+0x54c00>
   5c1cc:	ldr	r0, [pc, #1836]	; 5c900 <blkid_probe_get_size@plt+0x553e8>
   5c1d0:	add	r0, pc, r0
   5c1d4:	bl	74dc <__tls_get_addr@plt>
   5c1d8:	ldr	r3, [pc, #1828]	; 5c904 <blkid_probe_get_size@plt+0x553ec>
   5c1dc:	mov	r2, #0
   5c1e0:	add	r3, pc, r3
   5c1e4:	ldr	r3, [r3]
   5c1e8:	cmp	r3, #6
   5c1ec:	str	r2, [r8, r0]
   5c1f0:	ble	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5c1f4:	b	5bdc4 <blkid_probe_get_size@plt+0x548ac>
   5c1f8:	bl	6fb4 <__stack_chk_fail@plt>
   5c1fc:	ldr	r0, [sp, #64]	; 0x40
   5c200:	bl	69f0 <free@plt>
   5c204:	b	5c058 <blkid_probe_get_size@plt+0x54b40>
   5c208:	ldr	r2, [pc, #1784]	; 5c908 <blkid_probe_get_size@plt+0x553f0>
   5c20c:	ldr	r3, [pc, #1784]	; 5c90c <blkid_probe_get_size@plt+0x553f4>
   5c210:	add	r2, pc, r2
   5c214:	str	r2, [sp, #4]
   5c218:	add	r3, pc, r3
   5c21c:	ldr	r2, [pc, #1772]	; 5c910 <blkid_probe_get_size@plt+0x553f8>
   5c220:	add	r3, r3, #1264	; 0x4f0
   5c224:	str	r3, [sp]
   5c228:	add	r2, pc, r2
   5c22c:	mov	r3, #224	; 0xe0
   5c230:	mov	r1, #0
   5c234:	mov	r0, #7
   5c238:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c23c:	ldr	r0, [sp, #60]	; 0x3c
   5c240:	bl	69f0 <free@plt>
   5c244:	ldr	r0, [pc, #1736]	; 5c914 <blkid_probe_get_size@plt+0x553fc>
   5c248:	add	r0, pc, r0
   5c24c:	b	5bcf8 <blkid_probe_get_size@plt+0x547e0>
   5c250:	ldr	r2, [pc, #1728]	; 5c918 <blkid_probe_get_size@plt+0x55400>
   5c254:	ldr	r3, [pc, #1728]	; 5c91c <blkid_probe_get_size@plt+0x55404>
   5c258:	add	r2, pc, r2
   5c25c:	str	r2, [sp, #4]
   5c260:	add	r3, pc, r3
   5c264:	ldr	r2, [pc, #1716]	; 5c920 <blkid_probe_get_size@plt+0x55408>
   5c268:	add	r3, r3, #1264	; 0x4f0
   5c26c:	str	r3, [sp]
   5c270:	add	r2, pc, r2
   5c274:	mov	r3, #239	; 0xef
   5c278:	mov	r1, r7
   5c27c:	mov	r0, #7
   5c280:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c284:	ldr	r0, [sp, #60]	; 0x3c
   5c288:	bl	69f0 <free@plt>
   5c28c:	ldr	r0, [pc, #1680]	; 5c924 <blkid_probe_get_size@plt+0x5540c>
   5c290:	add	r0, pc, r0
   5c294:	b	5bf90 <blkid_probe_get_size@plt+0x54a78>
   5c298:	ldr	r2, [pc, #1672]	; 5c928 <blkid_probe_get_size@plt+0x55410>
   5c29c:	ldr	r3, [pc, #1672]	; 5c92c <blkid_probe_get_size@plt+0x55414>
   5c2a0:	add	r2, pc, r2
   5c2a4:	ldr	r0, [sp, #60]	; 0x3c
   5c2a8:	str	r2, [sp, #4]
   5c2ac:	add	r3, pc, r3
   5c2b0:	ldr	r2, [pc, #1656]	; 5c930 <blkid_probe_get_size@plt+0x55418>
   5c2b4:	add	r3, r3, #1264	; 0x4f0
   5c2b8:	str	r3, [sp]
   5c2bc:	str	r0, [sp, #12]
   5c2c0:	str	sl, [sp, #8]
   5c2c4:	mov	r1, r7
   5c2c8:	mov	r3, #219	; 0xdb
   5c2cc:	add	r2, pc, r2
   5c2d0:	mov	r0, #7
   5c2d4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c2d8:	b	5bc6c <blkid_probe_get_size@plt+0x54754>
   5c2dc:	mov	r0, r7
   5c2e0:	bl	69f0 <free@plt>
   5c2e4:	mov	r4, sl
   5c2e8:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5c2ec:	ldr	ip, [pc, #1600]	; 5c934 <blkid_probe_get_size@plt+0x5541c>
   5c2f0:	add	ip, pc, ip
   5c2f4:	b	5c174 <blkid_probe_get_size@plt+0x54c5c>
   5c2f8:	ldr	r2, [pc, #1592]	; 5c938 <blkid_probe_get_size@plt+0x55420>
   5c2fc:	ldr	r3, [pc, #1592]	; 5c93c <blkid_probe_get_size@plt+0x55424>
   5c300:	add	r2, pc, r2
   5c304:	str	r2, [sp, #4]
   5c308:	add	r3, pc, r3
   5c30c:	ldr	r2, [pc, #1580]	; 5c940 <blkid_probe_get_size@plt+0x55428>
   5c310:	add	r3, r3, #1264	; 0x4f0
   5c314:	str	r3, [sp]
   5c318:	add	r2, pc, r2
   5c31c:	mov	r3, #235	; 0xeb
   5c320:	mov	r0, #7
   5c324:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c328:	ldr	r0, [sp, #60]	; 0x3c
   5c32c:	bl	69f0 <free@plt>
   5c330:	ldr	r0, [pc, #1548]	; 5c944 <blkid_probe_get_size@plt+0x5542c>
   5c334:	add	r0, pc, r0
   5c338:	b	5bcf8 <blkid_probe_get_size@plt+0x547e0>
   5c33c:	mov	r0, r7
   5c340:	bl	69f0 <free@plt>
   5c344:	mov	r4, #1
   5c348:	ldr	r0, [pc, #1528]	; 5c948 <blkid_probe_get_size@plt+0x55430>
   5c34c:	add	r0, pc, r0
   5c350:	bl	74dc <__tls_get_addr@plt>
   5c354:	ldr	r3, [pc, #1520]	; 5c94c <blkid_probe_get_size@plt+0x55434>
   5c358:	add	r3, pc, r3
   5c35c:	ldr	r3, [r3]
   5c360:	cmp	r3, #6
   5c364:	str	r4, [r8, r0]
   5c368:	ble	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5c36c:	b	5bdc4 <blkid_probe_get_size@plt+0x548ac>
   5c370:	mov	r0, r7
   5c374:	bl	69f0 <free@plt>
   5c378:	mov	r4, r9
   5c37c:	b	5b84c <blkid_probe_get_size@plt+0x54334>
   5c380:	ldr	r0, [pc, #1480]	; 5c950 <blkid_probe_get_size@plt+0x55438>
   5c384:	add	r0, pc, r0
   5c388:	bl	6ca8 <opendir@plt>
   5c38c:	mov	r9, r0
   5c390:	bl	732c <__errno_location@plt>
   5c394:	cmp	r9, sl
   5c398:	mov	fp, r0
   5c39c:	beq	5c9f8 <blkid_probe_get_size@plt+0x554e0>
   5c3a0:	ldr	r3, [pc, #1452]	; 5c954 <blkid_probe_get_size@plt+0x5543c>
   5c3a4:	str	sl, [r0]
   5c3a8:	add	r3, pc, r3
   5c3ac:	mov	r0, r9
   5c3b0:	str	r3, [sp, #28]
   5c3b4:	str	sl, [sp, #36]	; 0x24
   5c3b8:	bl	6bb8 <readdir64@plt>
   5c3bc:	b	5c400 <blkid_probe_get_size@plt+0x54ee8>
   5c3c0:	add	sl, r0, #19
   5c3c4:	mov	r0, sl
   5c3c8:	bl	3f904 <blkid_probe_get_size@plt+0x383ec>
   5c3cc:	subs	r3, r0, #0
   5c3d0:	str	r3, [sp, #40]	; 0x28
   5c3d4:	bne	5c3f0 <blkid_probe_get_size@plt+0x54ed8>
   5c3d8:	ldr	r1, [sp, #28]
   5c3dc:	mov	r0, sl
   5c3e0:	bl	7050 <strstr@plt>
   5c3e4:	ldr	r3, [sp, #40]	; 0x28
   5c3e8:	cmp	r0, #0
   5c3ec:	bne	5ca28 <blkid_probe_get_size@plt+0x55510>
   5c3f0:	ldr	r3, [sp, #36]	; 0x24
   5c3f4:	mov	r0, r9
   5c3f8:	str	r3, [fp]
   5c3fc:	bl	6bb8 <readdir64@plt>
   5c400:	cmp	r0, #0
   5c404:	bne	5c3c0 <blkid_probe_get_size@plt+0x54ea8>
   5c408:	ldr	sl, [fp]
   5c40c:	cmp	sl, #0
   5c410:	rsbgt	sl, sl, #0
   5c414:	ble	5c6a4 <blkid_probe_get_size@plt+0x5518c>
   5c418:	mov	r0, r9
   5c41c:	bl	6aa4 <closedir@plt>
   5c420:	ldr	r0, [sp, #64]	; 0x40
   5c424:	bl	69f0 <free@plt>
   5c428:	cmp	sl, #0
   5c42c:	blt	5b974 <blkid_probe_get_size@plt+0x5445c>
   5c430:	cmp	sl, #0
   5c434:	bne	5c550 <blkid_probe_get_size@plt+0x55038>
   5c438:	ldr	r1, [pc, #1304]	; 5c958 <blkid_probe_get_size@plt+0x55440>
   5c43c:	ldr	r0, [pc, #1304]	; 5c95c <blkid_probe_get_size@plt+0x55444>
   5c440:	add	r1, pc, r1
   5c444:	add	r0, pc, r0
   5c448:	bl	738c <fopen64@plt>
   5c44c:	subs	r9, r0, #0
   5c450:	beq	5c55c <blkid_probe_get_size@plt+0x55044>
   5c454:	ldr	r3, [pc, #1284]	; 5c960 <blkid_probe_get_size@plt+0x55448>
   5c458:	mov	fp, #0
   5c45c:	add	r3, pc, r3
   5c460:	str	r3, [sp, #28]
   5c464:	b	5c498 <blkid_probe_get_size@plt+0x54f80>
   5c468:	ldr	sl, [sp, #64]	; 0x40
   5c46c:	beq	5c65c <blkid_probe_get_size@plt+0x55144>
   5c470:	mov	r2, #12
   5c474:	ldr	r1, [sp, #28]
   5c478:	mov	r0, sl
   5c47c:	bl	6a5c <strncmp@plt>
   5c480:	subs	r3, r0, #0
   5c484:	bne	5c490 <blkid_probe_get_size@plt+0x54f78>
   5c488:	adds	r0, sl, #12
   5c48c:	bne	5c6fc <blkid_probe_get_size@plt+0x551e4>
   5c490:	mov	r0, sl
   5c494:	bl	69f0 <free@plt>
   5c498:	ldr	r2, [sp, #32]
   5c49c:	mov	r1, #0
   5c4a0:	mov	r0, r9
   5c4a4:	str	fp, [sp, #64]	; 0x40
   5c4a8:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   5c4ac:	cmp	r0, #0
   5c4b0:	bge	5c468 <blkid_probe_get_size@plt+0x54f50>
   5c4b4:	mov	sl, r0
   5c4b8:	ldr	r0, [sp, #64]	; 0x40
   5c4bc:	bl	69f0 <free@plt>
   5c4c0:	mov	r0, r9
   5c4c4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5c4c8:	cmp	sl, #0
   5c4cc:	blt	5b974 <blkid_probe_get_size@plt+0x5445c>
   5c4d0:	cmp	sl, #0
   5c4d4:	bne	5c550 <blkid_probe_get_size@plt+0x55038>
   5c4d8:	ldr	r3, [pc, #1156]	; 5c964 <blkid_probe_get_size@plt+0x5544c>
   5c4dc:	add	r3, pc, r3
   5c4e0:	ldr	r3, [r3]
   5c4e4:	cmp	r3, #6
   5c4e8:	bgt	5c5ec <blkid_probe_get_size@plt+0x550d4>
   5c4ec:	cmp	r7, #0
   5c4f0:	bne	5c59c <blkid_probe_get_size@plt+0x55084>
   5c4f4:	b	5c348 <blkid_probe_get_size@plt+0x54e30>
   5c4f8:	mov	r0, r7
   5c4fc:	b	5c110 <blkid_probe_get_size@plt+0x54bf8>
   5c500:	ldr	r2, [pc, #1120]	; 5c968 <blkid_probe_get_size@plt+0x55450>
   5c504:	ldr	r3, [pc, #1120]	; 5c96c <blkid_probe_get_size@plt+0x55454>
   5c508:	add	r2, pc, r2
   5c50c:	str	r2, [sp, #4]
   5c510:	add	r3, pc, r3
   5c514:	ldr	r2, [pc, #1108]	; 5c970 <blkid_probe_get_size@plt+0x55458>
   5c518:	add	r3, r3, #1184	; 0x4a0
   5c51c:	str	r7, [sp, #8]
   5c520:	str	r3, [sp]
   5c524:	mov	r1, r9
   5c528:	mov	r3, #253	; 0xfd
   5c52c:	add	r2, pc, r2
   5c530:	mov	r0, #7
   5c534:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c538:	ldr	r7, [sp, #64]	; 0x40
   5c53c:	b	5c034 <blkid_probe_get_size@plt+0x54b1c>
   5c540:	cmp	sl, #13
   5c544:	beq	5cae8 <blkid_probe_get_size@plt+0x555d0>
   5c548:	cmp	sl, #0
   5c54c:	beq	5bb9c <blkid_probe_get_size@plt+0x54684>
   5c550:	cmp	sl, #4
   5c554:	bne	5bd90 <blkid_probe_get_size@plt+0x54878>
   5c558:	b	5bc00 <blkid_probe_get_size@plt+0x546e8>
   5c55c:	bl	732c <__errno_location@plt>
   5c560:	ldr	fp, [r0]
   5c564:	cmp	fp, #2
   5c568:	beq	5c5c8 <blkid_probe_get_size@plt+0x550b0>
   5c56c:	mov	r0, r9
   5c570:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5c574:	cmp	fp, #0
   5c578:	rsb	sl, fp, #0
   5c57c:	bgt	5b974 <blkid_probe_get_size@plt+0x5445c>
   5c580:	cmn	fp, #13
   5c584:	bne	5c4d0 <blkid_probe_get_size@plt+0x54fb8>
   5c588:	ldr	r3, [pc, #996]	; 5c974 <blkid_probe_get_size@plt+0x5545c>
   5c58c:	add	r3, pc, r3
   5c590:	ldr	r3, [r3]
   5c594:	cmp	r3, #6
   5c598:	bgt	5c5e8 <blkid_probe_get_size@plt+0x550d0>
   5c59c:	ldr	r0, [pc, #980]	; 5c978 <blkid_probe_get_size@plt+0x55460>
   5c5a0:	mov	r4, #13
   5c5a4:	add	r0, pc, r0
   5c5a8:	bl	74dc <__tls_get_addr@plt>
   5c5ac:	ldr	r3, [pc, #968]	; 5c97c <blkid_probe_get_size@plt+0x55464>
   5c5b0:	add	r3, pc, r3
   5c5b4:	ldr	r3, [r3]
   5c5b8:	cmp	r3, #6
   5c5bc:	str	r4, [r8, r0]
   5c5c0:	ble	5b7fc <blkid_probe_get_size@plt+0x542e4>
   5c5c4:	b	5bdc4 <blkid_probe_get_size@plt+0x548ac>
   5c5c8:	ldr	r3, [pc, #944]	; 5c980 <blkid_probe_get_size@plt+0x55468>
   5c5cc:	add	r3, pc, r3
   5c5d0:	ldr	r3, [r3]
   5c5d4:	cmp	r3, #6
   5c5d8:	bgt	5c624 <blkid_probe_get_size@plt+0x5510c>
   5c5dc:	mov	r0, r9
   5c5e0:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5c5e4:	b	5c4d8 <blkid_probe_get_size@plt+0x54fc0>
   5c5e8:	mov	r7, #1
   5c5ec:	ldr	r2, [pc, #912]	; 5c984 <blkid_probe_get_size@plt+0x5546c>
   5c5f0:	ldr	r3, [pc, #912]	; 5c988 <blkid_probe_get_size@plt+0x55470>
   5c5f4:	add	r2, pc, r2
   5c5f8:	str	r2, [sp, #4]
   5c5fc:	add	r3, pc, r3
   5c600:	ldr	r2, [pc, #900]	; 5c98c <blkid_probe_get_size@plt+0x55474>
   5c604:	add	r3, r3, #1248	; 0x4e0
   5c608:	str	r3, [sp]
   5c60c:	add	r2, pc, r2
   5c610:	ldr	r3, [pc, #888]	; 5c990 <blkid_probe_get_size@plt+0x55478>
   5c614:	mov	r1, #0
   5c618:	mov	r0, #7
   5c61c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c620:	b	5c4ec <blkid_probe_get_size@plt+0x54fd4>
   5c624:	ldr	r3, [pc, #872]	; 5c994 <blkid_probe_get_size@plt+0x5547c>
   5c628:	ldr	r2, [pc, #872]	; 5c998 <blkid_probe_get_size@plt+0x55480>
   5c62c:	add	r3, pc, r3
   5c630:	add	r2, pc, r2
   5c634:	add	r3, r3, #1232	; 0x4d0
   5c638:	str	r2, [sp, #4]
   5c63c:	ldr	r2, [pc, #856]	; 5c99c <blkid_probe_get_size@plt+0x55484>
   5c640:	str	r3, [sp]
   5c644:	ldr	r3, [pc, #852]	; 5c9a0 <blkid_probe_get_size@plt+0x55488>
   5c648:	add	r2, pc, r2
   5c64c:	mov	r1, #0
   5c650:	mov	r0, #7
   5c654:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c658:	b	5c5dc <blkid_probe_get_size@plt+0x550c4>
   5c65c:	mov	r0, sl
   5c660:	bl	69f0 <free@plt>
   5c664:	ldr	r3, [pc, #824]	; 5c9a4 <blkid_probe_get_size@plt+0x5548c>
   5c668:	add	r3, pc, r3
   5c66c:	ldr	r3, [r3]
   5c670:	cmp	r3, #6
   5c674:	ble	5c5dc <blkid_probe_get_size@plt+0x550c4>
   5c678:	ldr	r2, [pc, #808]	; 5c9a8 <blkid_probe_get_size@plt+0x55490>
   5c67c:	ldr	r3, [pc, #808]	; 5c9ac <blkid_probe_get_size@plt+0x55494>
   5c680:	add	r2, pc, r2
   5c684:	add	r3, pc, r3
   5c688:	str	r2, [sp, #4]
   5c68c:	ldr	r2, [pc, #796]	; 5c9b0 <blkid_probe_get_size@plt+0x55498>
   5c690:	add	r3, r3, #1232	; 0x4d0
   5c694:	str	r3, [sp]
   5c698:	add	r2, pc, r2
   5c69c:	mov	r3, #296	; 0x128
   5c6a0:	b	5c64c <blkid_probe_get_size@plt+0x55134>
   5c6a4:	ldr	r3, [pc, #776]	; 5c9b4 <blkid_probe_get_size@plt+0x5549c>
   5c6a8:	add	r3, pc, r3
   5c6ac:	ldr	r3, [r3]
   5c6b0:	cmp	r3, #6
   5c6b4:	movle	sl, r0
   5c6b8:	ble	5c418 <blkid_probe_get_size@plt+0x54f00>
   5c6bc:	ldr	r3, [pc, #756]	; 5c9b8 <blkid_probe_get_size@plt+0x554a0>
   5c6c0:	ldr	r2, [pc, #756]	; 5c9bc <blkid_probe_get_size@plt+0x554a4>
   5c6c4:	add	r3, pc, r3
   5c6c8:	add	r2, pc, r2
   5c6cc:	str	r2, [sp, #4]
   5c6d0:	add	r3, r3, #1200	; 0x4b0
   5c6d4:	ldr	r2, [pc, #740]	; 5c9c0 <blkid_probe_get_size@plt+0x554a8>
   5c6d8:	add	r3, r3, #8
   5c6dc:	mov	r1, r0
   5c6e0:	str	r3, [sp]
   5c6e4:	add	r2, pc, r2
   5c6e8:	mov	r3, #109	; 0x6d
   5c6ec:	mov	r0, #7
   5c6f0:	mov	sl, r1
   5c6f4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c6f8:	b	5c418 <blkid_probe_get_size@plt+0x54f00>
   5c6fc:	ldr	r1, [pc, #704]	; 5c9c4 <blkid_probe_get_size@plt+0x554ac>
   5c700:	str	r3, [sp, #28]
   5c704:	add	r1, pc, r1
   5c708:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   5c70c:	cmp	r0, #0
   5c710:	beq	5c65c <blkid_probe_get_size@plt+0x55144>
   5c714:	ldr	r2, [pc, #684]	; 5c9c8 <blkid_probe_get_size@plt+0x554b0>
   5c718:	ldr	r3, [sp, #28]
   5c71c:	add	r2, pc, r2
   5c720:	ldr	r2, [r2]
   5c724:	cmp	r2, #6
   5c728:	movle	sl, #5
   5c72c:	ble	5c4b8 <blkid_probe_get_size@plt+0x54fa0>
   5c730:	ldr	r2, [pc, #660]	; 5c9cc <blkid_probe_get_size@plt+0x554b4>
   5c734:	ldr	r0, [pc, #660]	; 5c9d0 <blkid_probe_get_size@plt+0x554b8>
   5c738:	add	r2, pc, r2
   5c73c:	add	r2, r2, #1232	; 0x4d0
   5c740:	str	r2, [sp]
   5c744:	ldr	r2, [pc, #648]	; 5c9d4 <blkid_probe_get_size@plt+0x554bc>
   5c748:	add	r0, pc, r0
   5c74c:	mov	r1, r3
   5c750:	str	r0, [sp, #4]
   5c754:	mov	r3, #288	; 0x120
   5c758:	add	r2, pc, r2
   5c75c:	mov	r0, #7
   5c760:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5c764:	mov	sl, #5
   5c768:	b	5c4b8 <blkid_probe_get_size@plt+0x54fa0>
   5c76c:	andeq	ip, r3, r8, asr #7
   5c770:	andeq	r0, r0, ip, lsr r4
   5c774:	muleq	r1, ip, r8
   5c778:	andeq	fp, r1, r8, asr r8
   5c77c:	andeq	fp, r1, ip, ror sp
   5c780:	andeq	r3, r1, r8, lsr #24
   5c784:	andeq	fp, r3, r0, asr ip
   5c788:	andeq	ip, r3, r4, asr #13
   5c78c:	andeq	r0, r0, r4
   5c790:	andeq	fp, r1, r4, lsr r7
   5c794:	strdeq	fp, [r3], -r8
   5c798:	andeq	fp, r3, ip, ror #23
   5c79c:	andeq	fp, r1, r0, asr #14
   5c7a0:	andeq	ip, r3, r0, ror #15
   5c7a4:	andeq	fp, r1, ip, lsl r7
   5c7a8:	andeq	fp, r1, r8, lsl r7
   5c7ac:	muleq	r3, r0, r7
   5c7b0:	andeq	sl, r1, ip, asr #21
   5c7b4:	andeq	r7, r1, r0, asr #28
   5c7b8:	andeq	r4, r1, r8, lsr #32
   5c7bc:	andeq	sl, r1, r4, lsr #21
   5c7c0:	andeq	r4, r1, r4
   5c7c4:	muleq	r1, ip, r2
   5c7c8:	andeq	r0, r0, r5, lsl r1
   5c7cc:	andeq	sl, r1, ip, ror sl
   5c7d0:	andeq	fp, r1, r8, lsl r6
   5c7d4:	ldrdeq	r3, [r1], -r8
   5c7d8:	andeq	r0, r0, r6, lsl r1
   5c7dc:	andeq	r9, r0, r4, lsl r9
   5c7e0:	andeq	fp, r1, r4, asr r6
   5c7e4:	muleq	r3, r4, r6
   5c7e8:	andeq	fp, r1, r4, asr r5
   5c7ec:	andeq	fp, r1, r4, lsl r6
   5c7f0:	andeq	sl, r1, r0, asr #19
   5c7f4:	ldrdeq	r3, [r1], -ip
   5c7f8:			; <UNDEFINED> instruction: 0x0003c5b0
   5c7fc:	andeq	fp, r1, r4, ror #11
   5c800:	andeq	ip, r3, r0, lsl #11
   5c804:	strdeq	fp, [r1], -ip
   5c808:	andeq	sl, r1, r8, asr #17
   5c80c:	andeq	r3, r1, ip, ror #15
   5c810:	andeq	fp, r1, r8, lsl r8
   5c814:	andeq	fp, r1, r4, lsl #16
   5c818:	andeq	ip, r3, r0, ror #9
   5c81c:	andeq	fp, r1, ip, ror r8
   5c820:			; <UNDEFINED> instruction: 0x0001b8bc
   5c824:	andeq	fp, r1, r8, lsr #17
   5c828:	andeq	ip, r3, r4, ror #8
   5c82c:	andeq	ip, r3, r4, lsr #5
   5c830:	andeq	fp, r1, r8, lsr #7
   5c834:	andeq	sl, r1, r8, ror r7
   5c838:	andeq	r3, r1, r0, lsr #13
   5c83c:	andeq	r0, r0, r1, asr r2
   5c840:	andeq	ip, r3, r4, ror #7
   5c844:	andeq	fp, r3, ip, lsl #15
   5c848:	andeq	ip, r3, r0, lsl #4
   5c84c:	muleq	r3, r8, r3
   5c850:	andeq	fp, r3, r4, lsr r7
   5c854:	andeq	sl, r1, r4, asr #13
   5c858:	strdeq	fp, [r1], -r0
   5c85c:	ldrdeq	r3, [r1], -ip
   5c860:	andeq	fp, r1, ip, lsl #4
   5c864:	andeq	fp, r1, r0, lsr #6
   5c868:	andeq	sl, r1, r0, ror r6
   5c86c:	muleq	r1, r8, r5
   5c870:	strdeq	fp, [r1], -ip
   5c874:	andeq	sl, r1, ip, lsr #12
   5c878:	andeq	r3, r1, r4, asr r5
   5c87c:	andeq	fp, r1, ip, asr r2
   5c880:	andeq	sl, r1, ip, asr #11
   5c884:	andeq	r3, r1, r8, ror #9
   5c888:	muleq	r1, r0, r5
   5c88c:	andeq	r3, r1, r8, asr #21
   5c890:	andeq	r4, r1, r8, asr #8
   5c894:	andeq	r0, r0, r3, asr #2
   5c898:	strdeq	ip, [r3], -r8
   5c89c:	andeq	ip, r3, r8, lsr r0
   5c8a0:	andeq	ip, r3, ip, asr #3
   5c8a4:	andeq	ip, r3, ip
   5c8a8:	muleq	r3, r0, r1
   5c8ac:	ldrdeq	fp, [r1], -r4
   5c8b0:	ldrdeq	sl, [r1], -r8
   5c8b4:	strdeq	r3, [r1], -ip
   5c8b8:	strdeq	fp, [r1], -r4
   5c8bc:	andeq	ip, r3, r8, lsl r1
   5c8c0:	muleq	r1, ip, r9
   5c8c4:	andeq	fp, r1, r8, asr #3
   5c8c8:	strheq	ip, [r3], -r0
   5c8cc:	strdeq	sl, [r1], -ip
   5c8d0:	andeq	fp, r1, r0, asr #4
   5c8d4:	andeq	r3, r1, ip, lsl #6
   5c8d8:	andeq	fp, r1, r4, lsr #10
   5c8dc:	ldrdeq	r7, [r1], -ip
   5c8e0:	andeq	fp, r3, ip, ror lr
   5c8e4:	andeq	ip, r3, r0, lsl r0
   5c8e8:	andeq	fp, r3, ip, ror #31
   5c8ec:	andeq	sl, r0, ip, ror r3
   5c8f0:	ldrdeq	fp, [r1], -r0
   5c8f4:	andeq	sl, r1, ip, lsl r3
   5c8f8:	muleq	r1, r4, r2
   5c8fc:	andeq	r3, r1, ip, lsr #4
   5c900:	andeq	fp, r3, r8, asr #27
   5c904:	andeq	fp, r3, ip, asr pc
   5c908:	strdeq	fp, [r1], -r8
   5c90c:	andeq	sl, r1, r8, lsl #5
   5c910:			; <UNDEFINED> instruction: 0x000131b0
   5c914:	andeq	fp, r3, r0, asr sp
   5c918:	andeq	fp, r1, ip, lsr r3
   5c91c:	andeq	sl, r1, r0, asr #4
   5c920:	andeq	r3, r1, r8, ror #2
   5c924:	andeq	fp, r3, r8, lsl #26
   5c928:	andeq	fp, r1, r8, lsl r2
   5c92c:	strdeq	sl, [r1], -r4
   5c930:	andeq	r3, r1, ip, lsl #2
   5c934:	andeq	sl, r1, ip, asr sp
   5c938:	andeq	fp, r1, ip, asr r2
   5c93c:	muleq	r1, r8, r1
   5c940:	andeq	r3, r1, r0, asr #1
   5c944:	andeq	fp, r3, r4, ror #24
   5c948:	andeq	fp, r3, ip, asr #24
   5c94c:	andeq	fp, r3, r4, ror #27
   5c950:	ldrdeq	sl, [r1], -r0
   5c954:	ldrdeq	sl, [r1], -r8
   5c958:	andeq	r1, r1, ip, asr #30
   5c95c:	andeq	sl, r1, r0, ror pc
   5c960:	andeq	sl, r1, ip, lsl pc
   5c964:	andeq	fp, r3, r0, ror #24
   5c968:	strdeq	sl, [r1], -r4
   5c96c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   5c970:	andeq	r2, r1, ip, lsr #29
   5c974:			; <UNDEFINED> instruction: 0x0003bbb0
   5c978:	strdeq	fp, [r3], -r4
   5c97c:	andeq	fp, r3, ip, lsl #23
   5c980:	andeq	fp, r3, r0, ror fp
   5c984:	andeq	sl, r1, r0, lsl #28
   5c988:	andeq	r9, r1, r4, lsr #29
   5c98c:	andeq	r2, r1, ip, asr #27
   5c990:	andeq	r0, r0, lr, lsr r1
   5c994:	andeq	r9, r1, r4, ror lr
   5c998:	andeq	sl, r1, ip, lsl #26
   5c99c:	muleq	r1, r0, sp
   5c9a0:	andeq	r0, r0, sp, lsl #2
   5c9a4:	ldrdeq	fp, [r3], -r4
   5c9a8:	andeq	sl, r1, r4, asr #26
   5c9ac:	andeq	r9, r1, ip, lsl lr
   5c9b0:	andeq	r2, r1, r0, asr #26
   5c9b4:	muleq	r3, r4, sl
   5c9b8:	ldrdeq	r9, [r1], -ip
   5c9bc:	andeq	sl, r1, r0, lsl #24
   5c9c0:	strdeq	r2, [r1], -r4
   5c9c4:	andeq	sl, r1, r4, lsl #25
   5c9c8:	andeq	fp, r3, r0, lsr #20
   5c9cc:	andeq	r9, r1, r8, ror #26
   5c9d0:	andeq	sl, r1, r0, asr ip
   5c9d4:	andeq	r2, r1, r0, lsl #25
   5c9d8:	andeq	fp, r3, r0, lsl r7
   5c9dc:	andeq	r9, r1, r8, asr sl
   5c9e0:	andeq	sl, r1, r4, lsr r8
   5c9e4:	andeq	r2, r1, r8, ror #18
   5c9e8:			; <UNDEFINED> instruction: 0x0003b6b4
   5c9ec:	andeq	r9, r1, r0, lsl #20
   5c9f0:	andeq	sl, r1, r4, asr #15
   5c9f4:	andeq	r2, r1, r4, lsl r9
   5c9f8:	ldr	r9, [r0]
   5c9fc:	cmp	r9, #2
   5ca00:	beq	5ca84 <blkid_probe_get_size@plt+0x5556c>
   5ca04:	ldr	r0, [sp, #64]	; 0x40
   5ca08:	bl	69f0 <free@plt>
   5ca0c:	cmp	r9, #0
   5ca10:	rsb	sl, r9, #0
   5ca14:	bgt	5b974 <blkid_probe_get_size@plt+0x5445c>
   5ca18:	cmn	r9, #13
   5ca1c:	moveq	r7, #1
   5ca20:	beq	5c438 <blkid_probe_get_size@plt+0x54f20>
   5ca24:	b	5c430 <blkid_probe_get_size@plt+0x54f18>
   5ca28:	ldr	r1, [pc, #-88]	; 5c9d8 <blkid_probe_get_size@plt+0x554c0>
   5ca2c:	add	r1, pc, r1
   5ca30:	ldr	r1, [r1]
   5ca34:	cmp	r1, #6
   5ca38:	movle	sl, #2
   5ca3c:	ble	5c418 <blkid_probe_get_size@plt+0x54f00>
   5ca40:	ldr	r0, [pc, #-108]	; 5c9dc <blkid_probe_get_size@plt+0x554c4>
   5ca44:	ldr	ip, [pc, #-108]	; 5c9e0 <blkid_probe_get_size@plt+0x554c8>
   5ca48:	add	r0, pc, r0
   5ca4c:	add	r0, r0, #1200	; 0x4b0
   5ca50:	ldr	r2, [pc, #-116]	; 5c9e4 <blkid_probe_get_size@plt+0x554cc>
   5ca54:	add	ip, pc, ip
   5ca58:	add	r0, r0, #8
   5ca5c:	str	sl, [sp, #8]
   5ca60:	mov	r1, r3
   5ca64:	str	r0, [sp]
   5ca68:	str	ip, [sp, #4]
   5ca6c:	mov	r3, #105	; 0x69
   5ca70:	add	r2, pc, r2
   5ca74:	mov	r0, #7
   5ca78:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5ca7c:	mov	sl, #2
   5ca80:	b	5c418 <blkid_probe_get_size@plt+0x54f00>
   5ca84:	ldr	r3, [pc, #-164]	; 5c9e8 <blkid_probe_get_size@plt+0x554d0>
   5ca88:	add	r3, pc, r3
   5ca8c:	ldr	r3, [r3]
   5ca90:	cmp	r3, #6
   5ca94:	ble	5cad0 <blkid_probe_get_size@plt+0x555b8>
   5ca98:	ldr	r3, [pc, #-180]	; 5c9ec <blkid_probe_get_size@plt+0x554d4>
   5ca9c:	ldr	r2, [pc, #-180]	; 5c9f0 <blkid_probe_get_size@plt+0x554d8>
   5caa0:	add	r3, pc, r3
   5caa4:	add	r2, pc, r2
   5caa8:	add	r3, r3, #1200	; 0x4b0
   5caac:	str	r2, [sp, #4]
   5cab0:	ldr	r2, [pc, #-196]	; 5c9f4 <blkid_probe_get_size@plt+0x554dc>
   5cab4:	add	r3, r3, #8
   5cab8:	str	r3, [sp]
   5cabc:	mov	r1, r9
   5cac0:	mov	r3, #97	; 0x61
   5cac4:	add	r2, pc, r2
   5cac8:	mov	r0, #7
   5cacc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5cad0:	ldr	r0, [sp, #64]	; 0x40
   5cad4:	bl	69f0 <free@plt>
   5cad8:	b	5c438 <blkid_probe_get_size@plt+0x54f20>
   5cadc:	bl	69f0 <free@plt>
   5cae0:	mov	r7, #1
   5cae4:	b	5c438 <blkid_probe_get_size@plt+0x54f20>
   5cae8:	mov	r7, #1
   5caec:	b	5bba0 <blkid_probe_get_size@plt+0x54688>
   5caf0:	ldr	r3, [pc, #328]	; 5cc40 <blkid_probe_get_size@plt+0x55728>
   5caf4:	ldr	r2, [pc, #328]	; 5cc44 <blkid_probe_get_size@plt+0x5572c>
   5caf8:	add	r3, pc, r3
   5cafc:	push	{r4, r5, lr}
   5cb00:	sub	sp, sp, #28
   5cb04:	ldr	r4, [r3, r2]
   5cb08:	subs	r5, r0, #0
   5cb0c:	ldr	r3, [r4]
   5cb10:	str	r3, [sp, #20]
   5cb14:	beq	5cbc0 <blkid_probe_get_size@plt+0x556a8>
   5cb18:	ldr	r0, [r5, #4]
   5cb1c:	cmp	r0, #0
   5cb20:	beq	5cbe8 <blkid_probe_get_size@plt+0x556d0>
   5cb24:	ldrsb	r3, [r5]
   5cb28:	cmp	r3, #21
   5cb2c:	bne	5cc10 <blkid_probe_get_size@plt+0x556f8>
   5cb30:	add	r1, sp, #8
   5cb34:	bl	41270 <blkid_probe_get_size@plt+0x39d58>
   5cb38:	cmp	r0, #0
   5cb3c:	blt	5cb60 <blkid_probe_get_size@plt+0x55648>
   5cb40:	ldr	r0, [sp, #8]
   5cb44:	bl	3c4a0 <blkid_probe_get_size@plt+0x34f88>
   5cb48:	ldr	r2, [sp, #20]
   5cb4c:	ldr	r3, [r4]
   5cb50:	cmp	r2, r3
   5cb54:	bne	5cc3c <blkid_probe_get_size@plt+0x55724>
   5cb58:	add	sp, sp, #28
   5cb5c:	pop	{r4, r5, pc}
   5cb60:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   5cb64:	cmp	r0, #1
   5cb68:	beq	5cba4 <blkid_probe_get_size@plt+0x5568c>
   5cb6c:	ldr	r3, [r5, #4]
   5cb70:	mov	r2, #0
   5cb74:	add	r1, sp, #16
   5cb78:	add	r0, sp, #12
   5cb7c:	str	r3, [sp, #12]
   5cb80:	bl	41338 <blkid_probe_get_size@plt+0x39e20>
   5cb84:	cmp	r0, #0
   5cb88:	blt	5cb94 <blkid_probe_get_size@plt+0x5567c>
   5cb8c:	ldr	r0, [sp, #16]
   5cb90:	bl	3c4a0 <blkid_probe_get_size@plt+0x34f88>
   5cb94:	cmp	r0, #0
   5cb98:	movle	r0, #0
   5cb9c:	movgt	r0, #1
   5cba0:	b	5cb48 <blkid_probe_get_size@plt+0x55630>
   5cba4:	ldr	r1, [pc, #156]	; 5cc48 <blkid_probe_get_size@plt+0x55730>
   5cba8:	ldr	r0, [r5, #4]
   5cbac:	add	r1, pc, r1
   5cbb0:	bl	7314 <strcmp@plt>
   5cbb4:	clz	r0, r0
   5cbb8:	lsr	r0, r0, #5
   5cbbc:	b	5cb48 <blkid_probe_get_size@plt+0x55630>
   5cbc0:	ldr	r2, [pc, #132]	; 5cc4c <blkid_probe_get_size@plt+0x55734>
   5cbc4:	ldr	r1, [pc, #132]	; 5cc50 <blkid_probe_get_size@plt+0x55738>
   5cbc8:	add	r2, pc, r2
   5cbcc:	add	r2, r2, #1296	; 0x510
   5cbd0:	str	r2, [sp]
   5cbd4:	ldr	r2, [pc, #120]	; 5cc54 <blkid_probe_get_size@plt+0x5573c>
   5cbd8:	ldr	r3, [pc, #120]	; 5cc58 <blkid_probe_get_size@plt+0x55740>
   5cbdc:	add	r2, pc, r2
   5cbe0:	add	r1, pc, r1
   5cbe4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cbe8:	ldr	r3, [pc, #108]	; 5cc5c <blkid_probe_get_size@plt+0x55744>
   5cbec:	ldr	r2, [pc, #108]	; 5cc60 <blkid_probe_get_size@plt+0x55748>
   5cbf0:	add	r3, pc, r3
   5cbf4:	ldr	r1, [pc, #104]	; 5cc64 <blkid_probe_get_size@plt+0x5574c>
   5cbf8:	add	r3, r3, #1296	; 0x510
   5cbfc:	str	r3, [sp]
   5cc00:	add	r2, pc, r2
   5cc04:	ldr	r3, [pc, #92]	; 5cc68 <blkid_probe_get_size@plt+0x55750>
   5cc08:	add	r1, pc, r1
   5cc0c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cc10:	ldr	r2, [pc, #84]	; 5cc6c <blkid_probe_get_size@plt+0x55754>
   5cc14:	ldr	r1, [pc, #84]	; 5cc70 <blkid_probe_get_size@plt+0x55758>
   5cc18:	add	r2, pc, r2
   5cc1c:	add	r2, r2, #1296	; 0x510
   5cc20:	str	r2, [sp]
   5cc24:	ldr	r2, [pc, #72]	; 5cc74 <blkid_probe_get_size@plt+0x5575c>
   5cc28:	mov	r3, #260	; 0x104
   5cc2c:	add	r2, pc, r2
   5cc30:	add	r1, pc, r1
   5cc34:	mov	r0, #0
   5cc38:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cc3c:	bl	6fb4 <__stack_chk_fail@plt>
   5cc40:	andeq	fp, r3, r0, ror r0
   5cc44:	andeq	r0, r0, ip, lsr r4
   5cc48:			; <UNDEFINED> instruction: 0x00012cbc
   5cc4c:	ldrdeq	r9, [r1], -r8
   5cc50:	andeq	r6, r1, ip, asr #24
   5cc54:	andeq	r2, r1, r4, lsr lr
   5cc58:	andeq	r0, r0, r2, lsl #2
   5cc5c:			; <UNDEFINED> instruction: 0x000198b0
   5cc60:	andeq	r2, r1, r0, lsl lr
   5cc64:	andeq	sl, r1, r8, lsr #1
   5cc68:	andeq	r0, r0, r3, lsl #2
   5cc6c:	andeq	r9, r1, r8, lsl #17
   5cc70:	andeq	sl, r1, r4, ror #19
   5cc74:	andeq	r2, r1, r4, ror #27
   5cc78:	ldr	r3, [pc, #980]	; 5d054 <blkid_probe_get_size@plt+0x55b3c>
   5cc7c:	ldr	r2, [pc, #980]	; 5d058 <blkid_probe_get_size@plt+0x55b40>
   5cc80:	add	r3, pc, r3
   5cc84:	push	{r4, r5, r6, r7, r8, r9, lr}
   5cc88:	sub	sp, sp, #44	; 0x2c
   5cc8c:	ldr	r7, [r3, r2]
   5cc90:	mov	r4, #0
   5cc94:	subs	r6, r0, #0
   5cc98:	ldr	r3, [r7]
   5cc9c:	str	r4, [sp, #20]
   5cca0:	str	r3, [sp, #36]	; 0x24
   5cca4:	beq	5cf24 <blkid_probe_get_size@plt+0x55a0c>
   5cca8:	ldr	r0, [r6, #4]
   5ccac:	cmp	r0, #0
   5ccb0:	beq	5cf50 <blkid_probe_get_size@plt+0x55a38>
   5ccb4:	ldrsb	r3, [r6]
   5ccb8:	cmp	r3, #22
   5ccbc:	bne	5cf7c <blkid_probe_get_size@plt+0x55a64>
   5ccc0:	bl	2e80c <blkid_probe_get_size@plt+0x272f4>
   5ccc4:	subs	r5, r0, #0
   5ccc8:	blt	5cdb4 <blkid_probe_get_size@plt+0x5589c>
   5cccc:	bne	5cdec <blkid_probe_get_size@plt+0x558d4>
   5ccd0:	ldr	r8, [pc, #900]	; 5d05c <blkid_probe_get_size@plt+0x55b44>
   5ccd4:	mov	r4, r5
   5ccd8:	add	r8, pc, r8
   5ccdc:	mov	r9, #1
   5cce0:	str	r5, [sp, #24]
   5cce4:	lsl	r5, r9, r4
   5cce8:	bics	r3, r5, #123	; 0x7b
   5ccec:	bne	5cd08 <blkid_probe_get_size@plt+0x557f0>
   5ccf0:	ldr	r0, [r8, r4, lsl #2]
   5ccf4:	bl	2ed44 <blkid_probe_get_size@plt+0x2782c>
   5ccf8:	cmp	r0, #0
   5ccfc:	ldrge	r3, [sp, #24]
   5cd00:	orrge	r5, r3, r5
   5cd04:	strge	r5, [sp, #24]
   5cd08:	add	r4, r4, #1
   5cd0c:	cmp	r4, #9
   5cd10:	bne	5cce4 <blkid_probe_get_size@plt+0x557cc>
   5cd14:	add	r1, sp, #20
   5cd18:	ldr	r0, [r6, #4]
   5cd1c:	ldr	r4, [sp, #24]
   5cd20:	bl	2e85c <blkid_probe_get_size@plt+0x27344>
   5cd24:	cmp	r0, #0
   5cd28:	blt	5cd38 <blkid_probe_get_size@plt+0x55820>
   5cd2c:	ldr	r3, [sp, #20]
   5cd30:	cmp	r3, #0
   5cd34:	bne	5cedc <blkid_probe_get_size@plt+0x559c4>
   5cd38:	ldr	r3, [pc, #800]	; 5d060 <blkid_probe_get_size@plt+0x55b48>
   5cd3c:	add	r3, pc, r3
   5cd40:	ldr	r3, [r3]
   5cd44:	cmp	r3, #6
   5cd48:	movle	r0, #1
   5cd4c:	ble	5cdd4 <blkid_probe_get_size@plt+0x558bc>
   5cd50:	ldr	r2, [pc, #780]	; 5d064 <blkid_probe_get_size@plt+0x55b4c>
   5cd54:	ldr	r3, [pc, #780]	; 5d068 <blkid_probe_get_size@plt+0x55b50>
   5cd58:	add	r2, pc, r2
   5cd5c:	ldr	r1, [r6, #4]
   5cd60:	add	r3, pc, r3
   5cd64:	str	r2, [sp, #4]
   5cd68:	ldr	r2, [pc, #764]	; 5d06c <blkid_probe_get_size@plt+0x55b54>
   5cd6c:	add	r3, r3, #1360	; 0x550
   5cd70:	str	r1, [sp, #8]
   5cd74:	str	r3, [sp]
   5cd78:	add	r2, pc, r2
   5cd7c:	mov	r3, #247	; 0xf7
   5cd80:	mov	r1, #0
   5cd84:	mov	r0, #7
   5cd88:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5cd8c:	mov	r0, #1
   5cd90:	b	5cdd4 <blkid_probe_get_size@plt+0x558bc>
   5cd94:	mov	r4, r0
   5cd98:	mvn	r5, #21
   5cd9c:	mov	r0, r4
   5cda0:	bl	69f0 <free@plt>
   5cda4:	ldr	r0, [sp, #32]
   5cda8:	bl	69f0 <free@plt>
   5cdac:	ldr	r0, [sp, #28]
   5cdb0:	bl	69f0 <free@plt>
   5cdb4:	ldr	r3, [pc, #692]	; 5d070 <blkid_probe_get_size@plt+0x55b58>
   5cdb8:	add	r3, pc, r3
   5cdbc:	ldr	r3, [r3]
   5cdc0:	cmp	r3, #6
   5cdc4:	rsble	r0, r5, #0
   5cdc8:	uxtble	r0, r0
   5cdcc:	rsble	r0, r0, #0
   5cdd0:	bgt	5ceec <blkid_probe_get_size@plt+0x559d4>
   5cdd4:	ldr	r2, [sp, #36]	; 0x24
   5cdd8:	ldr	r3, [r7]
   5cddc:	cmp	r2, r3
   5cde0:	bne	5d050 <blkid_probe_get_size@plt+0x55b38>
   5cde4:	add	sp, sp, #44	; 0x2c
   5cde8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   5cdec:	add	r0, sp, #28
   5cdf0:	str	r4, [sp, #28]
   5cdf4:	str	r4, [sp, #32]
   5cdf8:	bl	2eb50 <blkid_probe_get_size@plt+0x27638>
   5cdfc:	subs	r5, r0, #0
   5ce00:	blt	5cd9c <blkid_probe_get_size@plt+0x55884>
   5ce04:	ldr	r8, [pc, #616]	; 5d074 <blkid_probe_get_size@plt+0x55b5c>
   5ce08:	ldr	r9, [sp, #28]
   5ce0c:	add	r8, pc, r8
   5ce10:	mov	r0, r8
   5ce14:	bl	2e978 <blkid_probe_get_size@plt+0x27460>
   5ce18:	cmp	r0, #0
   5ce1c:	beq	5cd94 <blkid_probe_get_size@plt+0x5587c>
   5ce20:	bl	2e80c <blkid_probe_get_size@plt+0x272f4>
   5ce24:	subs	r5, r0, #0
   5ce28:	blt	5cd9c <blkid_probe_get_size@plt+0x55884>
   5ce2c:	beq	5cfc8 <blkid_probe_get_size@plt+0x55ab0>
   5ce30:	cmp	r9, #0
   5ce34:	beq	5cfac <blkid_probe_get_size@plt+0x55a94>
   5ce38:	ldrb	r3, [r9]
   5ce3c:	cmp	r3, #0
   5ce40:	beq	5cfac <blkid_probe_get_size@plt+0x55a94>
   5ce44:	mov	r3, #0
   5ce48:	str	r3, [sp]
   5ce4c:	ldr	r2, [pc, #548]	; 5d078 <blkid_probe_get_size@plt+0x55b60>
   5ce50:	ldr	r3, [pc, #548]	; 5d07c <blkid_probe_get_size@plt+0x55b64>
   5ce54:	ldr	r0, [pc, #548]	; 5d080 <blkid_probe_get_size@plt+0x55b68>
   5ce58:	mov	r1, r9
   5ce5c:	add	r3, pc, r3
   5ce60:	add	r2, pc, r2
   5ce64:	add	r0, pc, r0
   5ce68:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   5ce6c:	mov	r4, r0
   5ce70:	cmp	r4, #0
   5ce74:	moveq	r4, #0
   5ce78:	mvneq	r5, #11
   5ce7c:	beq	5cd9c <blkid_probe_get_size@plt+0x55884>
   5ce80:	mov	r1, #0
   5ce84:	mov	r0, r4
   5ce88:	bl	3ff30 <blkid_probe_get_size@plt+0x38a18>
   5ce8c:	add	r1, sp, #32
   5ce90:	mov	r0, r4
   5ce94:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   5ce98:	subs	r5, r0, #0
   5ce9c:	blt	5cd9c <blkid_probe_get_size@plt+0x55884>
   5cea0:	add	r1, sp, #24
   5cea4:	ldr	r0, [sp, #32]
   5cea8:	bl	2e85c <blkid_probe_get_size@plt+0x27344>
   5ceac:	subs	r5, r0, #0
   5ceb0:	blt	5cd9c <blkid_probe_get_size@plt+0x55884>
   5ceb4:	ldr	r3, [sp, #24]
   5ceb8:	mov	r0, r4
   5cebc:	and	r3, r3, #85	; 0x55
   5cec0:	str	r3, [sp, #24]
   5cec4:	bl	69f0 <free@plt>
   5cec8:	ldr	r0, [sp, #32]
   5cecc:	bl	69f0 <free@plt>
   5ced0:	ldr	r0, [sp, #28]
   5ced4:	bl	69f0 <free@plt>
   5ced8:	b	5cd14 <blkid_probe_get_size@plt+0x557fc>
   5cedc:	bics	r3, r3, r4
   5cee0:	moveq	r0, #1
   5cee4:	movne	r0, #0
   5cee8:	b	5cdd4 <blkid_probe_get_size@plt+0x558bc>
   5ceec:	ldr	r2, [pc, #400]	; 5d084 <blkid_probe_get_size@plt+0x55b6c>
   5cef0:	ldr	r3, [pc, #400]	; 5d088 <blkid_probe_get_size@plt+0x55b70>
   5cef4:	add	r2, pc, r2
   5cef8:	str	r2, [sp, #4]
   5cefc:	add	r3, pc, r3
   5cf00:	ldr	r2, [pc, #388]	; 5d08c <blkid_probe_get_size@plt+0x55b74>
   5cf04:	add	r3, r3, #1360	; 0x550
   5cf08:	str	r3, [sp]
   5cf0c:	mov	r1, r5
   5cf10:	mov	r3, #240	; 0xf0
   5cf14:	add	r2, pc, r2
   5cf18:	mov	r0, #7
   5cf1c:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   5cf20:	b	5cdd4 <blkid_probe_get_size@plt+0x558bc>
   5cf24:	ldr	r2, [pc, #356]	; 5d090 <blkid_probe_get_size@plt+0x55b78>
   5cf28:	ldr	r1, [pc, #356]	; 5d094 <blkid_probe_get_size@plt+0x55b7c>
   5cf2c:	add	r2, pc, r2
   5cf30:	add	r2, r2, #1312	; 0x520
   5cf34:	add	r2, r2, #8
   5cf38:	str	r2, [sp]
   5cf3c:	ldr	r2, [pc, #340]	; 5d098 <blkid_probe_get_size@plt+0x55b80>
   5cf40:	mov	r3, #234	; 0xea
   5cf44:	add	r2, pc, r2
   5cf48:	add	r1, pc, r1
   5cf4c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cf50:	ldr	r3, [pc, #324]	; 5d09c <blkid_probe_get_size@plt+0x55b84>
   5cf54:	ldr	r2, [pc, #324]	; 5d0a0 <blkid_probe_get_size@plt+0x55b88>
   5cf58:	add	r3, pc, r3
   5cf5c:	add	r3, r3, #1312	; 0x520
   5cf60:	ldr	r1, [pc, #316]	; 5d0a4 <blkid_probe_get_size@plt+0x55b8c>
   5cf64:	add	r3, r3, #8
   5cf68:	str	r3, [sp]
   5cf6c:	add	r2, pc, r2
   5cf70:	mov	r3, #235	; 0xeb
   5cf74:	add	r1, pc, r1
   5cf78:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cf7c:	ldr	r3, [pc, #292]	; 5d0a8 <blkid_probe_get_size@plt+0x55b90>
   5cf80:	ldr	r2, [pc, #292]	; 5d0ac <blkid_probe_get_size@plt+0x55b94>
   5cf84:	add	r3, pc, r3
   5cf88:	add	r3, r3, #1312	; 0x520
   5cf8c:	ldr	r1, [pc, #284]	; 5d0b0 <blkid_probe_get_size@plt+0x55b98>
   5cf90:	add	r3, r3, #8
   5cf94:	str	r3, [sp]
   5cf98:	mov	r0, r4
   5cf9c:	mov	r3, #236	; 0xec
   5cfa0:	add	r2, pc, r2
   5cfa4:	add	r1, pc, r1
   5cfa8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5cfac:	ldr	r1, [pc, #256]	; 5d0b4 <blkid_probe_get_size@plt+0x55b9c>
   5cfb0:	ldr	r0, [pc, #256]	; 5d0b8 <blkid_probe_get_size@plt+0x55ba0>
   5cfb4:	add	r1, pc, r1
   5cfb8:	add	r0, pc, r0
   5cfbc:	bl	39594 <blkid_probe_get_size@plt+0x3207c>
   5cfc0:	mov	r4, r0
   5cfc4:	b	5ce70 <blkid_probe_get_size@plt+0x55958>
   5cfc8:	mov	r0, r8
   5cfcc:	bl	2ec1c <blkid_probe_get_size@plt+0x27704>
   5cfd0:	cmp	r9, #0
   5cfd4:	beq	5d020 <blkid_probe_get_size@plt+0x55b08>
   5cfd8:	ldrb	r3, [r9]
   5cfdc:	cmp	r3, #0
   5cfe0:	beq	5d020 <blkid_probe_get_size@plt+0x55b08>
   5cfe4:	ldr	ip, [pc, #208]	; 5d0bc <blkid_probe_get_size@plt+0x55ba4>
   5cfe8:	mov	lr, #0
   5cfec:	add	ip, pc, ip
   5cff0:	mov	r1, r0
   5cff4:	mov	r0, ip
   5cff8:	ldr	r2, [pc, #192]	; 5d0c0 <blkid_probe_get_size@plt+0x55ba8>
   5cffc:	stmib	sp, {r0, lr}
   5d000:	ldr	r0, [pc, #188]	; 5d0c4 <blkid_probe_get_size@plt+0x55bac>
   5d004:	add	r2, pc, r2
   5d008:	mov	r3, r9
   5d00c:	str	r2, [sp]
   5d010:	add	r0, pc, r0
   5d014:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   5d018:	mov	r4, r0
   5d01c:	b	5ce70 <blkid_probe_get_size@plt+0x55958>
   5d020:	mov	r3, #0
   5d024:	mov	r1, r0
   5d028:	str	r3, [sp]
   5d02c:	ldr	r2, [pc, #148]	; 5d0c8 <blkid_probe_get_size@plt+0x55bb0>
   5d030:	ldr	r3, [pc, #148]	; 5d0cc <blkid_probe_get_size@plt+0x55bb4>
   5d034:	ldr	r0, [pc, #148]	; 5d0d0 <blkid_probe_get_size@plt+0x55bb8>
   5d038:	add	r3, pc, r3
   5d03c:	add	r2, pc, r2
   5d040:	add	r0, pc, r0
   5d044:	bl	3947c <blkid_probe_get_size@plt+0x31f64>
   5d048:	mov	r4, r0
   5d04c:	b	5ce70 <blkid_probe_get_size@plt+0x55958>
   5d050:	bl	6fb4 <__stack_chk_fail@plt>
   5d054:	andeq	sl, r3, r8, ror #29
   5d058:	andeq	r0, r0, ip, lsr r4
   5d05c:	andeq	fp, r3, r4, ror #9
   5d060:	andeq	fp, r3, r0, lsl #8
   5d064:	andeq	sl, r1, r8, lsr r9
   5d068:	andeq	r9, r1, r0, asr #14
   5d06c:	muleq	r1, r8, ip
   5d070:	andeq	fp, r3, r4, lsl #7
   5d074:	andeq	r0, r1, r4, lsl #25
   5d078:	andeq	fp, r1, r0, ror #2
   5d07c:	andeq	sl, r1, r8, asr r8
   5d080:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   5d084:	andeq	sl, r1, ip, ror #14
   5d088:	andeq	r9, r1, r4, lsr #11
   5d08c:	strdeq	r2, [r1], -ip
   5d090:	andeq	r9, r1, r4, ror r5
   5d094:	andeq	r6, r1, r4, ror #17
   5d098:	andeq	r2, r1, ip, asr #21
   5d09c:	andeq	r9, r1, r8, asr #10
   5d0a0:	andeq	r2, r1, r4, lsr #21
   5d0a4:	andeq	r9, r1, ip, lsr sp
   5d0a8:	andeq	r9, r1, ip, lsl r5
   5d0ac:	andeq	r2, r1, r0, ror sl
   5d0b0:	andeq	sl, r1, ip, lsl #13
   5d0b4:	andeq	sl, r1, r0, lsl #14
   5d0b8:	andeq	r0, r1, ip, ror r8
   5d0bc:	andeq	sl, r1, r8, asr #13
   5d0c0:			; <UNDEFINED> instruction: 0x0001afbc
   5d0c4:	andeq	r0, r1, r4, lsr #16
   5d0c8:	andeq	sl, r1, r4, lsl #31
   5d0cc:	andeq	sl, r1, ip, ror r6
   5d0d0:	strdeq	r0, [r1], -r4
   5d0d4:	ldr	r3, [pc, #888]	; 5d454 <blkid_probe_get_size@plt+0x55f3c>
   5d0d8:	ldr	r2, [pc, #888]	; 5d458 <blkid_probe_get_size@plt+0x55f40>
   5d0dc:	add	r3, pc, r3
   5d0e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5d0e4:	sub	sp, sp, #60	; 0x3c
   5d0e8:	ldr	r5, [r3, r2]
   5d0ec:	subs	r4, r0, #0
   5d0f0:	ldr	r3, [r5]
   5d0f4:	str	r3, [sp, #52]	; 0x34
   5d0f8:	beq	5d1fc <blkid_probe_get_size@plt+0x55ce4>
   5d0fc:	ldr	r0, [r4, #4]
   5d100:	cmp	r0, #0
   5d104:	beq	5d228 <blkid_probe_get_size@plt+0x55d10>
   5d108:	ldrsb	r3, [r4]
   5d10c:	cmp	r3, #20
   5d110:	bne	5d254 <blkid_probe_get_size@plt+0x55d3c>
   5d114:	add	r6, sp, #16
   5d118:	mov	r1, r6
   5d11c:	bl	41270 <blkid_probe_get_size@plt+0x39d58>
   5d120:	cmp	r0, #0
   5d124:	bge	5d180 <blkid_probe_get_size@plt+0x55c68>
   5d128:	ldr	r0, [pc, #812]	; 5d45c <blkid_probe_get_size@plt+0x55f44>
   5d12c:	ldr	r1, [r4, #4]
   5d130:	add	r0, pc, r0
   5d134:	bl	7314 <strcmp@plt>
   5d138:	subs	r7, r0, #0
   5d13c:	beq	5d1d8 <blkid_probe_get_size@plt+0x55cc0>
   5d140:	ldr	r0, [pc, #792]	; 5d460 <blkid_probe_get_size@plt+0x55f48>
   5d144:	add	r0, pc, r0
   5d148:	bl	7464 <getenv@plt>
   5d14c:	cmp	r0, #0
   5d150:	beq	5d2d8 <blkid_probe_get_size@plt+0x55dc0>
   5d154:	bl	74e8 <strdup@plt>
   5d158:	mov	r7, r0
   5d15c:	cmp	r7, #0
   5d160:	beq	5d440 <blkid_probe_get_size@plt+0x55f28>
   5d164:	ldr	r1, [r4, #4]
   5d168:	mov	r0, r7
   5d16c:	bl	7314 <strcmp@plt>
   5d170:	cmp	r0, #0
   5d174:	bne	5d284 <blkid_probe_get_size@plt+0x55d6c>
   5d178:	mov	r4, #1
   5d17c:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d180:	bl	7110 <getuid@plt>
   5d184:	ldr	r3, [sp, #16]
   5d188:	cmp	r0, r3
   5d18c:	beq	5d1ac <blkid_probe_get_size@plt+0x55c94>
   5d190:	bl	7218 <geteuid@plt>
   5d194:	ldr	r4, [sp, #16]
   5d198:	mov	r7, #0
   5d19c:	sub	r4, r4, r0
   5d1a0:	clz	r4, r4
   5d1a4:	lsr	r4, r4, #5
   5d1a8:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d1ac:	mov	r7, #0
   5d1b0:	mov	r4, #1
   5d1b4:	mov	r0, r7
   5d1b8:	bl	69f0 <free@plt>
   5d1bc:	ldr	r2, [sp, #52]	; 0x34
   5d1c0:	ldr	r3, [r5]
   5d1c4:	mov	r0, r4
   5d1c8:	cmp	r2, r3
   5d1cc:	bne	5d448 <blkid_probe_get_size@plt+0x55f30>
   5d1d0:	add	sp, sp, #60	; 0x3c
   5d1d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5d1d8:	bl	7110 <getuid@plt>
   5d1dc:	ldr	r4, [pc, #640]	; 5d464 <blkid_probe_get_size@plt+0x55f4c>
   5d1e0:	cmp	r0, r4
   5d1e4:	bls	5d1ac <blkid_probe_get_size@plt+0x55c94>
   5d1e8:	bl	7218 <geteuid@plt>
   5d1ec:	cmp	r0, r4
   5d1f0:	movhi	r4, #0
   5d1f4:	movls	r4, #1
   5d1f8:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d1fc:	ldr	r2, [pc, #612]	; 5d468 <blkid_probe_get_size@plt+0x55f50>
   5d200:	ldr	r1, [pc, #612]	; 5d46c <blkid_probe_get_size@plt+0x55f54>
   5d204:	add	r2, pc, r2
   5d208:	add	r2, r2, #1392	; 0x570
   5d20c:	add	r2, r2, #8
   5d210:	str	r2, [sp]
   5d214:	ldr	r2, [pc, #596]	; 5d470 <blkid_probe_get_size@plt+0x55f58>
   5d218:	mov	r3, #201	; 0xc9
   5d21c:	add	r2, pc, r2
   5d220:	add	r1, pc, r1
   5d224:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d228:	ldr	r3, [pc, #580]	; 5d474 <blkid_probe_get_size@plt+0x55f5c>
   5d22c:	ldr	r2, [pc, #580]	; 5d478 <blkid_probe_get_size@plt+0x55f60>
   5d230:	add	r3, pc, r3
   5d234:	add	r3, r3, #1392	; 0x570
   5d238:	ldr	r1, [pc, #572]	; 5d47c <blkid_probe_get_size@plt+0x55f64>
   5d23c:	add	r3, r3, #8
   5d240:	str	r3, [sp]
   5d244:	add	r2, pc, r2
   5d248:	mov	r3, #202	; 0xca
   5d24c:	add	r1, pc, r1
   5d250:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d254:	ldr	r2, [pc, #548]	; 5d480 <blkid_probe_get_size@plt+0x55f68>
   5d258:	ldr	r1, [pc, #548]	; 5d484 <blkid_probe_get_size@plt+0x55f6c>
   5d25c:	add	r2, pc, r2
   5d260:	add	r2, r2, #1392	; 0x570
   5d264:	add	r2, r2, #8
   5d268:	str	r2, [sp]
   5d26c:	ldr	r2, [pc, #532]	; 5d488 <blkid_probe_get_size@plt+0x55f70>
   5d270:	mov	r3, #203	; 0xcb
   5d274:	add	r2, pc, r2
   5d278:	add	r1, pc, r1
   5d27c:	mov	r0, #0
   5d280:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d284:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   5d288:	cmp	r0, #1
   5d28c:	beq	5d3c8 <blkid_probe_get_size@plt+0x55eb0>
   5d290:	ldr	r3, [r4, #4]
   5d294:	add	r0, sp, #56	; 0x38
   5d298:	mov	r1, r6
   5d29c:	str	r3, [r0, #-32]!	; 0xffffffe0
   5d2a0:	bl	4d3f4 <blkid_probe_get_size@plt+0x45edc>
   5d2a4:	cmp	r0, #0
   5d2a8:	movlt	r4, #0
   5d2ac:	blt	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d2b0:	bl	7110 <getuid@plt>
   5d2b4:	ldr	r3, [sp, #16]
   5d2b8:	cmp	r0, r3
   5d2bc:	beq	5d178 <blkid_probe_get_size@plt+0x55c60>
   5d2c0:	bl	7218 <geteuid@plt>
   5d2c4:	ldr	r4, [sp, #16]
   5d2c8:	sub	r4, r4, r0
   5d2cc:	clz	r4, r4
   5d2d0:	lsr	r4, r4, #5
   5d2d4:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d2d8:	bl	7110 <getuid@plt>
   5d2dc:	subs	r9, r0, #0
   5d2e0:	beq	5d3e4 <blkid_probe_get_size@plt+0x55ecc>
   5d2e4:	bl	392a0 <blkid_probe_get_size@plt+0x31d88>
   5d2e8:	ldr	r3, [pc, #412]	; 5d48c <blkid_probe_get_size@plt+0x55f74>
   5d2ec:	cmp	r9, r3
   5d2f0:	movne	r0, #0
   5d2f4:	andeq	r0, r0, #1
   5d2f8:	cmp	r0, #0
   5d2fc:	bne	5d424 <blkid_probe_get_size@plt+0x55f0c>
   5d300:	ldr	sl, [pc, #392]	; 5d490 <blkid_probe_get_size@plt+0x55f78>
   5d304:	cmn	r9, #1
   5d308:	cmpne	r9, sl
   5d30c:	moveq	sl, #1
   5d310:	movne	sl, #0
   5d314:	addeq	r2, sp, #24
   5d318:	beq	5d398 <blkid_probe_get_size@plt+0x55e80>
   5d31c:	mov	r0, #70	; 0x46
   5d320:	bl	7158 <sysconf@plt>
   5d324:	add	r3, sp, #20
   5d328:	str	r4, [sp, #12]
   5d32c:	add	fp, sp, #24
   5d330:	mov	r4, r3
   5d334:	cmp	r0, #0
   5d338:	movgt	r7, r0
   5d33c:	movle	r7, #4096	; 0x1000
   5d340:	mov	r0, r7
   5d344:	str	sl, [sp, #20]
   5d348:	bl	7230 <malloc@plt>
   5d34c:	subs	r8, r0, #0
   5d350:	beq	5d410 <blkid_probe_get_size@plt+0x55ef8>
   5d354:	mov	r2, r8
   5d358:	str	r4, [sp]
   5d35c:	mov	r3, r7
   5d360:	mov	r1, fp
   5d364:	mov	r0, r9
   5d368:	bl	7488 <getpwuid_r@plt>
   5d36c:	mov	r2, fp
   5d370:	cmp	r0, #0
   5d374:	bne	5d3f8 <blkid_probe_get_size@plt+0x55ee0>
   5d378:	ldr	r3, [sp, #20]
   5d37c:	ldr	r4, [sp, #12]
   5d380:	cmp	r3, #0
   5d384:	bne	5d430 <blkid_probe_get_size@plt+0x55f18>
   5d388:	mov	r0, r8
   5d38c:	str	r2, [sp, #12]
   5d390:	bl	69f0 <free@plt>
   5d394:	ldr	r2, [sp, #12]
   5d398:	mov	r0, r2
   5d39c:	ldr	r2, [pc, #240]	; 5d494 <blkid_probe_get_size@plt+0x55f7c>
   5d3a0:	mov	r3, r9
   5d3a4:	add	r2, pc, r2
   5d3a8:	mov	r1, #1
   5d3ac:	bl	7080 <__asprintf_chk@plt>
   5d3b0:	cmp	r0, #0
   5d3b4:	movlt	r7, #0
   5d3b8:	mvnlt	r4, #11
   5d3bc:	blt	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d3c0:	ldr	r7, [sp, #24]
   5d3c4:	b	5d15c <blkid_probe_get_size@plt+0x55c44>
   5d3c8:	ldr	r1, [pc, #200]	; 5d498 <blkid_probe_get_size@plt+0x55f80>
   5d3cc:	ldr	r0, [r4, #4]
   5d3d0:	add	r1, pc, r1
   5d3d4:	bl	7314 <strcmp@plt>
   5d3d8:	clz	r4, r0
   5d3dc:	lsr	r4, r4, #5
   5d3e0:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d3e4:	ldr	r0, [pc, #176]	; 5d49c <blkid_probe_get_size@plt+0x55f84>
   5d3e8:	add	r0, pc, r0
   5d3ec:	bl	74e8 <strdup@plt>
   5d3f0:	mov	r7, r0
   5d3f4:	b	5d15c <blkid_probe_get_size@plt+0x55c44>
   5d3f8:	cmp	r0, #34	; 0x22
   5d3fc:	bne	5d44c <blkid_probe_get_size@plt+0x55f34>
   5d400:	mov	r0, r8
   5d404:	lsl	r7, r7, #1
   5d408:	bl	69f0 <free@plt>
   5d40c:	b	5d340 <blkid_probe_get_size@plt+0x55e28>
   5d410:	ldr	r4, [sp, #12]
   5d414:	mov	r7, r8
   5d418:	mov	r0, r8
   5d41c:	bl	69f0 <free@plt>
   5d420:	b	5d15c <blkid_probe_get_size@plt+0x55c44>
   5d424:	ldr	r0, [pc, #116]	; 5d4a0 <blkid_probe_get_size@plt+0x55f88>
   5d428:	add	r0, pc, r0
   5d42c:	b	5d154 <blkid_probe_get_size@plt+0x55c3c>
   5d430:	ldr	r0, [r3]
   5d434:	bl	74e8 <strdup@plt>
   5d438:	mov	r7, r0
   5d43c:	b	5d418 <blkid_probe_get_size@plt+0x55f00>
   5d440:	mvn	r4, #11
   5d444:	b	5d1b4 <blkid_probe_get_size@plt+0x55c9c>
   5d448:	bl	6fb4 <__stack_chk_fail@plt>
   5d44c:	ldr	r4, [sp, #12]
   5d450:	b	5d388 <blkid_probe_get_size@plt+0x55e70>
   5d454:	andeq	sl, r3, ip, lsl #21
   5d458:	andeq	r0, r0, ip, lsr r4
   5d45c:			; <UNDEFINED> instruction: 0x0001a5b4
   5d460:	andeq	sl, r1, r8, lsr #11
   5d464:	andeq	r0, r0, r7, ror #7
   5d468:	muleq	r1, ip, r2
   5d46c:	andeq	r6, r1, ip, lsl #12
   5d470:	strdeq	r2, [r1], -r4
   5d474:	andeq	r9, r1, r0, ror r2
   5d478:	andeq	r2, r1, ip, asr #15
   5d47c:	andeq	r9, r1, r4, ror #20
   5d480:	andeq	r9, r1, r4, asr #4
   5d484:	andeq	sl, r1, r0, asr r4
   5d488:	muleq	r1, ip, r7
   5d48c:	strdeq	pc, [r0], -lr
   5d490:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   5d494:			; <UNDEFINED> instruction: 0x0001a3b8
   5d498:	muleq	r1, r8, r4
   5d49c:	andeq	r2, r1, r0, lsl #9
   5d4a0:	andeq	r4, r1, ip, asr #22
   5d4a4:	ldr	r3, [pc, #1008]	; 5d89c <blkid_probe_get_size@plt+0x56384>
   5d4a8:	ldr	r2, [pc, #1008]	; 5d8a0 <blkid_probe_get_size@plt+0x56388>
   5d4ac:	add	r3, pc, r3
   5d4b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   5d4b4:	sub	sp, sp, #408	; 0x198
   5d4b8:	ldr	r6, [r3, r2]
   5d4bc:	subs	r4, r0, #0
   5d4c0:	ldr	r3, [r6]
   5d4c4:	str	r3, [sp, #404]	; 0x194
   5d4c8:	beq	5d784 <blkid_probe_get_size@plt+0x5626c>
   5d4cc:	ldr	r0, [r4, #4]
   5d4d0:	cmp	r0, #0
   5d4d4:	beq	5d7b0 <blkid_probe_get_size@plt+0x56298>
   5d4d8:	ldrsb	r3, [r4]
   5d4dc:	cmp	r3, #4
   5d4e0:	bne	5d7dc <blkid_probe_get_size@plt+0x562c4>
   5d4e4:	add	r7, sp, #12
   5d4e8:	mov	r0, r7
   5d4ec:	bl	6aec <uname@plt>
   5d4f0:	cmp	r0, #0
   5d4f4:	blt	5d80c <blkid_probe_get_size@plt+0x562f4>
   5d4f8:	ldr	sl, [pc, #932]	; 5d8a4 <blkid_probe_get_size@plt+0x5638c>
   5d4fc:	ldr	r9, [pc, #932]	; 5d8a8 <blkid_probe_get_size@plt+0x56390>
   5d500:	add	sl, pc, sl
   5d504:	ldr	r5, [r4, #4]
   5d508:	add	r9, pc, r9
   5d50c:	add	sl, sl, #860	; 0x35c
   5d510:	mov	r4, #2
   5d514:	mov	r8, #0
   5d518:	mov	r1, r9
   5d51c:	mov	r2, r4
   5d520:	mov	r0, r5
   5d524:	bl	6a5c <strncmp@plt>
   5d528:	cmp	r0, #0
   5d52c:	bne	5d538 <blkid_probe_get_size@plt+0x56020>
   5d530:	adds	r4, r5, r4
   5d534:	bne	5d558 <blkid_probe_get_size@plt+0x56040>
   5d538:	add	r8, r8, #1
   5d53c:	cmp	r8, #5
   5d540:	beq	5d6f0 <blkid_probe_get_size@plt+0x561d8>
   5d544:	ldr	r9, [sl, r8, lsl #2]
   5d548:	mov	r0, r9
   5d54c:	bl	723c <strlen@plt>
   5d550:	mov	r4, r0
   5d554:	b	5d518 <blkid_probe_get_size@plt+0x56000>
   5d558:	ldr	r1, [pc, #844]	; 5d8ac <blkid_probe_get_size@plt+0x56394>
   5d55c:	mov	r0, r4
   5d560:	add	r1, pc, r1
   5d564:	bl	6c9c <strspn@plt>
   5d568:	adds	r1, r4, r0
   5d56c:	beq	5d848 <blkid_probe_get_size@plt+0x56330>
   5d570:	ldrb	r3, [sp, #142]	; 0x8e
   5d574:	ldrb	r2, [r4, r0]
   5d578:	mov	r9, r1
   5d57c:	add	r4, r7, #130	; 0x82
   5d580:	cmp	r3, #0
   5d584:	bne	5d590 <blkid_probe_get_size@plt+0x56078>
   5d588:	cmp	r2, #0
   5d58c:	beq	5d888 <blkid_probe_get_size@plt+0x56370>
   5d590:	mov	r5, r9
   5d594:	cmp	r3, #0
   5d598:	mov	r9, r5
   5d59c:	beq	5d5f8 <blkid_probe_get_size@plt+0x560e0>
   5d5a0:	sub	r0, r3, #48	; 0x30
   5d5a4:	cmp	r0, #9
   5d5a8:	bls	5d5f8 <blkid_probe_get_size@plt+0x560e0>
   5d5ac:	sub	r0, r3, #97	; 0x61
   5d5b0:	cmp	r0, #25
   5d5b4:	mov	ip, r3
   5d5b8:	mov	r9, r2
   5d5bc:	bls	5d730 <blkid_probe_get_size@plt+0x56218>
   5d5c0:	cmp	r2, #0
   5d5c4:	add	ip, r3, #65536	; 0x10000
   5d5c8:	beq	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d5cc:	sub	lr, r2, #48	; 0x30
   5d5d0:	cmp	lr, #9
   5d5d4:	bhi	5d61c <blkid_probe_get_size@plt+0x56104>
   5d5d8:	sub	r8, r8, #1
   5d5dc:	cmp	r8, #3
   5d5e0:	addls	pc, pc, r8, lsl #2
   5d5e4:	b	5d760 <blkid_probe_get_size@plt+0x56248>
   5d5e8:	b	5d754 <blkid_probe_get_size@plt+0x5623c>
   5d5ec:	b	5d74c <blkid_probe_get_size@plt+0x56234>
   5d5f0:	b	5d73c <blkid_probe_get_size@plt+0x56224>
   5d5f4:	b	5d83c <blkid_probe_get_size@plt+0x56324>
   5d5f8:	cmp	r2, #0
   5d5fc:	beq	5d63c <blkid_probe_get_size@plt+0x56124>
   5d600:	sub	lr, r2, #48	; 0x30
   5d604:	cmp	lr, #9
   5d608:	bls	5d648 <blkid_probe_get_size@plt+0x56130>
   5d60c:	cmp	r3, #0
   5d610:	mov	ip, r3
   5d614:	mov	r9, r2
   5d618:	bne	5d6d0 <blkid_probe_get_size@plt+0x561b8>
   5d61c:	sub	r3, r2, #97	; 0x61
   5d620:	cmp	r3, #25
   5d624:	addhi	r9, r2, #65536	; 0x10000
   5d628:	subs	ip, ip, r9
   5d62c:	bne	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d630:	ldrb	r3, [r4, #1]!
   5d634:	ldrb	r2, [r5, #1]!
   5d638:	b	5d594 <blkid_probe_get_size@plt+0x5607c>
   5d63c:	cmp	r3, #48	; 0x30
   5d640:	bne	5d770 <blkid_probe_get_size@plt+0x56258>
   5d644:	ldrb	r3, [r4, #1]!
   5d648:	cmp	r3, #48	; 0x30
   5d64c:	beq	5d644 <blkid_probe_get_size@plt+0x5612c>
   5d650:	cmp	r2, #48	; 0x30
   5d654:	bne	5d664 <blkid_probe_get_size@plt+0x5614c>
   5d658:	ldrb	r2, [r9, #1]!
   5d65c:	cmp	r2, #48	; 0x30
   5d660:	beq	5d658 <blkid_probe_get_size@plt+0x56140>
   5d664:	sub	r0, r3, #48	; 0x30
   5d668:	cmp	r0, #9
   5d66c:	sub	lr, r2, #48	; 0x30
   5d670:	bhi	5d878 <blkid_probe_get_size@plt+0x56360>
   5d674:	cmp	lr, #9
   5d678:	bhi	5d77c <blkid_probe_get_size@plt+0x56264>
   5d67c:	add	r0, r4, #1
   5d680:	add	r5, r9, #1
   5d684:	mov	ip, #0
   5d688:	b	5d694 <blkid_probe_get_size@plt+0x5617c>
   5d68c:	cmp	lr, #9
   5d690:	bhi	5d77c <blkid_probe_get_size@plt+0x56264>
   5d694:	cmp	ip, #0
   5d698:	subeq	ip, r3, r2
   5d69c:	mov	r4, r0
   5d6a0:	ldrb	r3, [r0], #1
   5d6a4:	mov	r9, r5
   5d6a8:	ldrb	r2, [r5], #1
   5d6ac:	sub	lr, r3, #48	; 0x30
   5d6b0:	cmp	lr, #9
   5d6b4:	sub	lr, r2, #48	; 0x30
   5d6b8:	bls	5d68c <blkid_probe_get_size@plt+0x56174>
   5d6bc:	cmp	lr, #9
   5d6c0:	bls	5d880 <blkid_probe_get_size@plt+0x56368>
   5d6c4:	cmp	ip, #0
   5d6c8:	beq	5d580 <blkid_probe_get_size@plt+0x56068>
   5d6cc:	b	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d6d0:	sub	r0, r3, #48	; 0x30
   5d6d4:	cmp	r0, #9
   5d6d8:	movls	ip, #0
   5d6dc:	bls	5d61c <blkid_probe_get_size@plt+0x56104>
   5d6e0:	sub	r0, r3, #97	; 0x61
   5d6e4:	cmp	r0, #25
   5d6e8:	bhi	5d5c0 <blkid_probe_get_size@plt+0x560a8>
   5d6ec:	b	5d5d0 <blkid_probe_get_size@plt+0x560b8>
   5d6f0:	ldr	r1, [pc, #440]	; 5d8b0 <blkid_probe_get_size@plt+0x56398>
   5d6f4:	mov	r0, r5
   5d6f8:	add	r1, pc, r1
   5d6fc:	bl	6c9c <strspn@plt>
   5d700:	add	r1, r7, #130	; 0x82
   5d704:	mov	r2, #0
   5d708:	add	r0, r5, r0
   5d70c:	bl	693c <fnmatch@plt>
   5d710:	clz	r0, r0
   5d714:	lsr	r0, r0, #5
   5d718:	ldr	r2, [sp, #404]	; 0x194
   5d71c:	ldr	r3, [r6]
   5d720:	cmp	r2, r3
   5d724:	bne	5d898 <blkid_probe_get_size@plt+0x56380>
   5d728:	add	sp, sp, #408	; 0x198
   5d72c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   5d730:	cmp	r2, #0
   5d734:	bne	5d5cc <blkid_probe_get_size@plt+0x560b4>
   5d738:	b	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d73c:	cmp	ip, #0
   5d740:	movle	r0, #0
   5d744:	movgt	r0, #1
   5d748:	b	5d718 <blkid_probe_get_size@plt+0x56200>
   5d74c:	lsr	r0, ip, #31
   5d750:	b	5d718 <blkid_probe_get_size@plt+0x56200>
   5d754:	mvn	r0, ip
   5d758:	lsr	r0, r0, #31
   5d75c:	b	5d718 <blkid_probe_get_size@plt+0x56200>
   5d760:	cmp	ip, #0
   5d764:	movgt	r0, #0
   5d768:	movle	r0, #1
   5d76c:	b	5d718 <blkid_probe_get_size@plt+0x56200>
   5d770:	sub	r0, r3, #48	; 0x30
   5d774:	cmp	r0, #9
   5d778:	bhi	5d580 <blkid_probe_get_size@plt+0x56068>
   5d77c:	mov	ip, #1
   5d780:	b	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d784:	ldr	r2, [pc, #296]	; 5d8b4 <blkid_probe_get_size@plt+0x5639c>
   5d788:	ldr	r1, [pc, #296]	; 5d8b8 <blkid_probe_get_size@plt+0x563a0>
   5d78c:	add	r2, pc, r2
   5d790:	add	r2, r2, #1408	; 0x580
   5d794:	add	r2, r2, #12
   5d798:	str	r2, [sp]
   5d79c:	ldr	r2, [pc, #280]	; 5d8bc <blkid_probe_get_size@plt+0x563a4>
   5d7a0:	mov	r3, #155	; 0x9b
   5d7a4:	add	r2, pc, r2
   5d7a8:	add	r1, pc, r1
   5d7ac:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d7b0:	ldr	r3, [pc, #264]	; 5d8c0 <blkid_probe_get_size@plt+0x563a8>
   5d7b4:	ldr	r2, [pc, #264]	; 5d8c4 <blkid_probe_get_size@plt+0x563ac>
   5d7b8:	add	r3, pc, r3
   5d7bc:	add	r3, r3, #1408	; 0x580
   5d7c0:	ldr	r1, [pc, #256]	; 5d8c8 <blkid_probe_get_size@plt+0x563b0>
   5d7c4:	add	r3, r3, #12
   5d7c8:	str	r3, [sp]
   5d7cc:	add	r2, pc, r2
   5d7d0:	mov	r3, #156	; 0x9c
   5d7d4:	add	r1, pc, r1
   5d7d8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d7dc:	ldr	r2, [pc, #232]	; 5d8cc <blkid_probe_get_size@plt+0x563b4>
   5d7e0:	ldr	r1, [pc, #232]	; 5d8d0 <blkid_probe_get_size@plt+0x563b8>
   5d7e4:	add	r2, pc, r2
   5d7e8:	add	r2, r2, #1408	; 0x580
   5d7ec:	add	r2, r2, #12
   5d7f0:	str	r2, [sp]
   5d7f4:	ldr	r2, [pc, #216]	; 5d8d4 <blkid_probe_get_size@plt+0x563bc>
   5d7f8:	mov	r3, #157	; 0x9d
   5d7fc:	add	r2, pc, r2
   5d800:	add	r1, pc, r1
   5d804:	mov	r0, #0
   5d808:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d80c:	ldr	r2, [pc, #196]	; 5d8d8 <blkid_probe_get_size@plt+0x563c0>
   5d810:	ldr	r1, [pc, #196]	; 5d8dc <blkid_probe_get_size@plt+0x563c4>
   5d814:	add	r2, pc, r2
   5d818:	add	r2, r2, #1408	; 0x580
   5d81c:	add	r2, r2, #12
   5d820:	str	r2, [sp]
   5d824:	ldr	r2, [pc, #180]	; 5d8e0 <blkid_probe_get_size@plt+0x563c8>
   5d828:	mov	r3, #159	; 0x9f
   5d82c:	add	r2, pc, r2
   5d830:	add	r1, pc, r1
   5d834:	mov	r0, #0
   5d838:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d83c:	clz	r0, ip
   5d840:	lsr	r0, r0, #5
   5d844:	b	5d718 <blkid_probe_get_size@plt+0x56200>
   5d848:	ldr	r3, [pc, #148]	; 5d8e4 <blkid_probe_get_size@plt+0x563cc>
   5d84c:	mov	r0, r1
   5d850:	add	r3, pc, r3
   5d854:	add	r3, r3, #1440	; 0x5a0
   5d858:	ldr	r2, [pc, #136]	; 5d8e8 <blkid_probe_get_size@plt+0x563d0>
   5d85c:	ldr	r1, [pc, #136]	; 5d8ec <blkid_probe_get_size@plt+0x563d4>
   5d860:	add	r3, r3, #12
   5d864:	str	r3, [sp]
   5d868:	add	r2, pc, r2
   5d86c:	mov	r3, #584	; 0x248
   5d870:	add	r1, pc, r1
   5d874:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5d878:	cmp	lr, #9
   5d87c:	bhi	5d580 <blkid_probe_get_size@plt+0x56068>
   5d880:	mvn	ip, #0
   5d884:	b	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d888:	add	r0, r7, #130	; 0x82
   5d88c:	bl	7314 <strcmp@plt>
   5d890:	mov	ip, r0
   5d894:	b	5d5d8 <blkid_probe_get_size@plt+0x560c0>
   5d898:	bl	6fb4 <__stack_chk_fail@plt>
   5d89c:			; <UNDEFINED> instruction: 0x0003a6bc
   5d8a0:	andeq	r0, r0, ip, lsr r4
   5d8a4:	strdeq	r9, [r3], -ip
   5d8a8:	andeq	sl, r1, ip, ror #3
   5d8ac:	andeq	sp, r0, ip, lsr r8
   5d8b0:	andeq	sp, r0, r4, lsr #13
   5d8b4:	andeq	r8, r1, r4, lsl sp
   5d8b8:	andeq	r6, r1, r4, lsl #1
   5d8bc:	andeq	r2, r1, ip, ror #4
   5d8c0:	andeq	r8, r1, r8, ror #25
   5d8c4:	andeq	r2, r1, r4, asr #4
   5d8c8:	ldrdeq	r9, [r1], -ip
   5d8cc:			; <UNDEFINED> instruction: 0x00018cbc
   5d8d0:	strdeq	r9, [r1], -r8
   5d8d4:	andeq	r2, r1, r4, lsl r2
   5d8d8:	andeq	r8, r1, ip, lsl #25
   5d8dc:	andeq	r1, r1, ip, asr #31
   5d8e0:	andeq	r2, r1, r4, ror #3
   5d8e4:	andeq	r8, r1, r0, asr ip
   5d8e8:	andeq	r2, r1, r8
   5d8ec:	andeq	r9, r1, ip, lsr #29
   5d8f0:	ldr	r3, [pc, #452]	; 5dabc <blkid_probe_get_size@plt+0x565a4>
   5d8f4:	ldr	r2, [pc, #452]	; 5dac0 <blkid_probe_get_size@plt+0x565a8>
   5d8f8:	add	r3, pc, r3
   5d8fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5d900:	sub	sp, sp, #36	; 0x24
   5d904:	ldr	r2, [r3, r2]
   5d908:	mov	r6, #0
   5d90c:	subs	r7, r0, #0
   5d910:	ldr	r3, [r2]
   5d914:	str	r2, [sp, #12]
   5d918:	str	r6, [sp, #20]
   5d91c:	str	r3, [sp, #28]
   5d920:	beq	5da30 <blkid_probe_get_size@plt+0x56518>
   5d924:	ldr	r0, [r7, #4]
   5d928:	cmp	r0, #0
   5d92c:	beq	5da5c <blkid_probe_get_size@plt+0x56544>
   5d930:	ldrsb	r3, [r7]
   5d934:	cmp	r3, #3
   5d938:	bne	5da88 <blkid_probe_get_size@plt+0x56570>
   5d93c:	add	r0, sp, #20
   5d940:	bl	3ef60 <blkid_probe_get_size@plt+0x37a48>
   5d944:	subs	r5, r0, #0
   5d948:	blt	5da08 <blkid_probe_get_size@plt+0x564f0>
   5d94c:	mov	r1, #61	; 0x3d
   5d950:	ldr	r0, [r7, #4]
   5d954:	bl	74c4 <strchr@plt>
   5d958:	ldr	r3, [sp, #20]
   5d95c:	add	r9, sp, #24
   5d960:	add	r8, sp, #16
   5d964:	str	r3, [sp, #16]
   5d968:	mov	sl, r0
   5d96c:	b	5d98c <blkid_probe_get_size@plt+0x56474>
   5d970:	mov	r1, r5
   5d974:	mov	r0, r4
   5d978:	bl	7314 <strcmp@plt>
   5d97c:	cmp	r0, #0
   5d980:	beq	5d9fc <blkid_probe_get_size@plt+0x564e4>
   5d984:	mov	r0, r4
   5d988:	bl	69f0 <free@plt>
   5d98c:	mov	r2, #9
   5d990:	mov	r1, r9
   5d994:	mov	r0, r8
   5d998:	str	r6, [sp, #24]
   5d99c:	bl	482bc <blkid_probe_get_size@plt+0x40da4>
   5d9a0:	ldr	r4, [sp, #24]
   5d9a4:	subs	r5, r0, #0
   5d9a8:	blt	5da00 <blkid_probe_get_size@plt+0x564e8>
   5d9ac:	beq	5da00 <blkid_probe_get_size@plt+0x564e8>
   5d9b0:	cmp	sl, #0
   5d9b4:	ldr	r5, [r7, #4]
   5d9b8:	bne	5d970 <blkid_probe_get_size@plt+0x56458>
   5d9bc:	mov	r0, r5
   5d9c0:	bl	723c <strlen@plt>
   5d9c4:	mov	r1, r5
   5d9c8:	mov	r2, r0
   5d9cc:	mov	fp, r0
   5d9d0:	mov	r0, r4
   5d9d4:	bl	6a5c <strncmp@plt>
   5d9d8:	cmp	r0, #0
   5d9dc:	bne	5d984 <blkid_probe_get_size@plt+0x5646c>
   5d9e0:	cmn	r4, fp
   5d9e4:	beq	5d984 <blkid_probe_get_size@plt+0x5646c>
   5d9e8:	ldrb	r3, [r4, fp]
   5d9ec:	cmp	r3, #0
   5d9f0:	beq	5d9fc <blkid_probe_get_size@plt+0x564e4>
   5d9f4:	cmp	r3, #61	; 0x3d
   5d9f8:	bne	5d984 <blkid_probe_get_size@plt+0x5646c>
   5d9fc:	mov	r5, #1
   5da00:	mov	r0, r4
   5da04:	bl	69f0 <free@plt>
   5da08:	ldr	r0, [sp, #20]
   5da0c:	bl	69f0 <free@plt>
   5da10:	ldr	r3, [sp, #12]
   5da14:	ldr	r2, [sp, #28]
   5da18:	mov	r0, r5
   5da1c:	ldr	r3, [r3]
   5da20:	cmp	r2, r3
   5da24:	bne	5dab8 <blkid_probe_get_size@plt+0x565a0>
   5da28:	add	sp, sp, #36	; 0x24
   5da2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5da30:	ldr	r2, [pc, #140]	; 5dac4 <blkid_probe_get_size@plt+0x565ac>
   5da34:	ldr	r1, [pc, #140]	; 5dac8 <blkid_probe_get_size@plt+0x565b0>
   5da38:	add	r2, pc, r2
   5da3c:	add	r2, r2, #1456	; 0x5b0
   5da40:	add	r2, r2, #8
   5da44:	str	r2, [sp]
   5da48:	ldr	r2, [pc, #124]	; 5dacc <blkid_probe_get_size@plt+0x565b4>
   5da4c:	mov	r3, #95	; 0x5f
   5da50:	add	r2, pc, r2
   5da54:	add	r1, pc, r1
   5da58:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5da5c:	ldr	r3, [pc, #108]	; 5dad0 <blkid_probe_get_size@plt+0x565b8>
   5da60:	ldr	r2, [pc, #108]	; 5dad4 <blkid_probe_get_size@plt+0x565bc>
   5da64:	add	r3, pc, r3
   5da68:	add	r3, r3, #1456	; 0x5b0
   5da6c:	ldr	r1, [pc, #100]	; 5dad8 <blkid_probe_get_size@plt+0x565c0>
   5da70:	add	r3, r3, #8
   5da74:	str	r3, [sp]
   5da78:	add	r2, pc, r2
   5da7c:	mov	r3, #96	; 0x60
   5da80:	add	r1, pc, r1
   5da84:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5da88:	ldr	r3, [pc, #76]	; 5dadc <blkid_probe_get_size@plt+0x565c4>
   5da8c:	ldr	r2, [pc, #76]	; 5dae0 <blkid_probe_get_size@plt+0x565c8>
   5da90:	add	r3, pc, r3
   5da94:	add	r3, r3, #1456	; 0x5b0
   5da98:	ldr	r1, [pc, #68]	; 5dae4 <blkid_probe_get_size@plt+0x565cc>
   5da9c:	add	r3, r3, #8
   5daa0:	str	r3, [sp]
   5daa4:	mov	r0, r6
   5daa8:	mov	r3, #97	; 0x61
   5daac:	add	r2, pc, r2
   5dab0:	add	r1, pc, r1
   5dab4:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   5dab8:	bl	6fb4 <__stack_chk_fail@plt>
   5dabc:	andeq	sl, r3, r0, ror r2
   5dac0:	andeq	r0, r0, ip, lsr r4
   5dac4:	andeq	r8, r1, r8, ror #20
   5dac8:	ldrdeq	r5, [r1], -r8
   5dacc:	andeq	r1, r1, r0, asr #31
   5dad0:	andeq	r8, r1, ip, lsr sl
   5dad4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   5dad8:	andeq	r9, r1, r0, lsr r2
   5dadc:	andeq	r8, r1, r0, lsl sl
   5dae0:	andeq	r1, r1, r4, ror #30
   5dae4:	andeq	r9, r1, r0, ror ip
   5dae8:	ldr	r2, [pc, #3960]	; 5ea68 <blkid_probe_get_size@plt+0x57550>
   5daec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5daf0:	sub	sp, sp, #17408	; 0x4400
   5daf4:	ldr	r3, [pc, #3952]	; 5ea6c <blkid_probe_get_size@plt+0x57554>
   5daf8:	add	r2, pc, r2
   5dafc:	sub	sp, sp, #228	; 0xe4
   5db00:	mov	r9, r0
   5db04:	str	r2, [sp, #52]	; 0x34
   5db08:	ldr	r3, [r2, r3]
   5db0c:	ldr	r0, [r0, #12]
   5db10:	add	r2, sp, #17408	; 0x4400
   5db14:	str	r3, [sp, #48]	; 0x30
   5db18:	add	r2, r2, #220	; 0xdc
   5db1c:	ldr	r3, [r3]
   5db20:	cmp	r0, #0
   5db24:	str	r3, [r2]
   5db28:	beq	5dcf4 <blkid_probe_get_size@plt+0x567dc>
   5db2c:	ldr	fp, [r1]
   5db30:	mov	r8, r1
   5db34:	ldr	r1, [pc, #3892]	; 5ea70 <blkid_probe_get_size@plt+0x57558>
   5db38:	add	r3, sp, #224	; 0xe0
   5db3c:	mov	r0, fp
   5db40:	add	r2, sp, #100	; 0x64
   5db44:	add	r1, pc, r1
   5db48:	str	r3, [sp, #44]	; 0x2c
   5db4c:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   5db50:	subs	r4, r0, #0
   5db54:	blt	5dcc8 <blkid_probe_get_size@plt+0x567b0>
   5db58:	add	sl, sp, #1248	; 0x4e0
   5db5c:	ldr	r1, [pc, #3856]	; 5ea74 <blkid_probe_get_size@plt+0x5755c>
   5db60:	ldr	r0, [sl, #-1148]	; 0xfffffb84
   5db64:	add	r1, pc, r1
   5db68:	bl	7314 <strcmp@plt>
   5db6c:	subs	r3, r0, #0
   5db70:	str	r3, [sp, #60]	; 0x3c
   5db74:	bne	5f900 <blkid_probe_get_size@plt+0x583e8>
   5db78:	ldr	r3, [pc, #3832]	; 5ea78 <blkid_probe_get_size@plt+0x57560>
   5db7c:	ldr	r2, [pc, #3832]	; 5ea7c <blkid_probe_get_size@plt+0x57564>
   5db80:	add	r3, pc, r3
   5db84:	add	r2, pc, r2
   5db88:	add	r3, r3, #1488	; 0x5d0
   5db8c:	add	r3, r3, #12
   5db90:	ldr	r4, [r9, #12]
   5db94:	add	r2, r2, #1488	; 0x5d0
   5db98:	add	r2, r2, #12
   5db9c:	str	r3, [sp, #68]	; 0x44
   5dba0:	mov	r3, #0
   5dba4:	str	r2, [sp, #64]	; 0x40
   5dba8:	str	r4, [sp, #40]	; 0x28
   5dbac:	str	r3, [sp, #56]	; 0x38
   5dbb0:	ldrb	r3, [r4]
   5dbb4:	cmp	r3, #53	; 0x35
   5dbb8:	addls	pc, pc, r3, lsl #2
   5dbbc:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5dbc0:	b	5f24c <blkid_probe_get_size@plt+0x57d34>
   5dbc4:	b	5f2b8 <blkid_probe_get_size@plt+0x57da0>
   5dbc8:	b	5e788 <blkid_probe_get_size@plt+0x57270>
   5dbcc:	b	5efa8 <blkid_probe_get_size@plt+0x57a90>
   5dbd0:	b	5ef8c <blkid_probe_get_size@plt+0x57a74>
   5dbd4:	b	5ef48 <blkid_probe_get_size@plt+0x57a30>
   5dbd8:	b	5ef40 <blkid_probe_get_size@plt+0x57a28>
   5dbdc:	b	5e604 <blkid_probe_get_size@plt+0x570ec>
   5dbe0:	b	5e5c0 <blkid_probe_get_size@plt+0x570a8>
   5dbe4:	b	5e5a4 <blkid_probe_get_size@plt+0x5708c>
   5dbe8:	b	5e584 <blkid_probe_get_size@plt+0x5706c>
   5dbec:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5dbf0:	b	5dfdc <blkid_probe_get_size@plt+0x56ac4>
   5dbf4:	b	5df20 <blkid_probe_get_size@plt+0x56a08>
   5dbf8:	b	5f24c <blkid_probe_get_size@plt+0x57d34>
   5dbfc:	b	5de1c <blkid_probe_get_size@plt+0x56904>
   5dc00:	b	5de1c <blkid_probe_get_size@plt+0x56904>
   5dc04:	b	5de1c <blkid_probe_get_size@plt+0x56904>
   5dc08:	b	5de1c <blkid_probe_get_size@plt+0x56904>
   5dc0c:	b	5de1c <blkid_probe_get_size@plt+0x56904>
   5dc10:	b	5f24c <blkid_probe_get_size@plt+0x57d34>
   5dc14:	b	5de78 <blkid_probe_get_size@plt+0x56960>
   5dc18:	b	5e408 <blkid_probe_get_size@plt+0x56ef0>
   5dc1c:	b	5e370 <blkid_probe_get_size@plt+0x56e58>
   5dc20:	b	5e260 <blkid_probe_get_size@plt+0x56d48>
   5dc24:	b	5e16c <blkid_probe_get_size@plt+0x56c54>
   5dc28:	b	5e124 <blkid_probe_get_size@plt+0x56c0c>
   5dc2c:	b	5e0d4 <blkid_probe_get_size@plt+0x56bbc>
   5dc30:	b	5e02c <blkid_probe_get_size@plt+0x56b14>
   5dc34:	b	5e00c <blkid_probe_get_size@plt+0x56af4>
   5dc38:	b	5f24c <blkid_probe_get_size@plt+0x57d34>
   5dc3c:	b	5de0c <blkid_probe_get_size@plt+0x568f4>
   5dc40:	b	5eddc <blkid_probe_get_size@plt+0x578c4>
   5dc44:	b	5edc0 <blkid_probe_get_size@plt+0x578a8>
   5dc48:	b	5ed90 <blkid_probe_get_size@plt+0x57878>
   5dc4c:	b	5ed78 <blkid_probe_get_size@plt+0x57860>
   5dc50:	b	5ec70 <blkid_probe_get_size@plt+0x57758>
   5dc54:	b	5e95c <blkid_probe_get_size@plt+0x57444>
   5dc58:	b	5e850 <blkid_probe_get_size@plt+0x57338>
   5dc5c:	b	5e790 <blkid_probe_get_size@plt+0x57278>
   5dc60:	b	5f820 <blkid_probe_get_size@plt+0x58308>
   5dc64:	b	5f760 <blkid_probe_get_size@plt+0x58248>
   5dc68:	b	5dcfc <blkid_probe_get_size@plt+0x567e4>
   5dc6c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5dc70:	b	5edec <blkid_probe_get_size@plt+0x578d4>
   5dc74:	b	5f434 <blkid_probe_get_size@plt+0x57f1c>
   5dc78:	b	5f2e0 <blkid_probe_get_size@plt+0x57dc8>
   5dc7c:	b	5f47c <blkid_probe_get_size@plt+0x57f64>
   5dc80:	b	5e640 <blkid_probe_get_size@plt+0x57128>
   5dc84:	b	5f0d0 <blkid_probe_get_size@plt+0x57bb8>
   5dc88:	b	5efe0 <blkid_probe_get_size@plt+0x57ac8>
   5dc8c:	b	5efe0 <blkid_probe_get_size@plt+0x57ac8>
   5dc90:	b	5efc4 <blkid_probe_get_size@plt+0x57aac>
   5dc94:	b	5dcf4 <blkid_probe_get_size@plt+0x567dc>
   5dc98:	ldr	r3, [pc, #3552]	; 5ea80 <blkid_probe_get_size@plt+0x57568>
   5dc9c:	ldr	r1, [pc, #3552]	; 5ea84 <blkid_probe_get_size@plt+0x5756c>
   5dca0:	add	r3, pc, r3
   5dca4:	add	r3, r3, #1488	; 0x5d0
   5dca8:	ldr	r2, [pc, #3544]	; 5ea88 <blkid_probe_get_size@plt+0x57570>
   5dcac:	add	r3, r3, #12
   5dcb0:	add	r1, pc, r1
   5dcb4:	mov	r0, #1
   5dcb8:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   5dcbc:	mov	r4, r0
   5dcc0:	mov	r0, r5
   5dcc4:	bl	69f0 <free@plt>
   5dcc8:	add	r3, sp, #17408	; 0x4400
   5dccc:	add	r3, r3, #220	; 0xdc
   5dcd0:	ldr	r2, [r3]
   5dcd4:	ldr	r3, [sp, #48]	; 0x30
   5dcd8:	mov	r0, r4
   5dcdc:	ldr	r3, [r3]
   5dce0:	cmp	r2, r3
   5dce4:	bne	60e58 <blkid_probe_get_size@plt+0x59940>
   5dce8:	add	sp, sp, #17408	; 0x4400
   5dcec:	add	sp, sp, #228	; 0xe4
   5dcf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5dcf4:	mov	r4, #0
   5dcf8:	b	5dcc8 <blkid_probe_get_size@plt+0x567b0>
   5dcfc:	ldr	r2, [r9, #24]
   5dd00:	ldr	r3, [r4, #4]
   5dd04:	sub	r5, sl, #4
   5dd08:	ldr	r1, [r2]
   5dd0c:	mov	r6, #0
   5dd10:	add	r1, r1, r3
   5dd14:	mov	r2, r5
   5dd18:	mov	r3, #1024	; 0x400
   5dd1c:	str	r6, [sp]
   5dd20:	mov	r0, r8
   5dd24:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5dd28:	ldrb	r3, [r4, #1]
   5dd2c:	sub	r3, r3, #6
   5dd30:	cmp	r3, #1
   5dd34:	bls	60024 <blkid_probe_get_size@plt+0x58b0c>
   5dd38:	ldrb	r3, [sl, #-4]
   5dd3c:	cmp	r3, #0
   5dd40:	beq	5ddec <blkid_probe_get_size@plt+0x568d4>
   5dd44:	mov	r1, r5
   5dd48:	bic	r2, r3, #32
   5dd4c:	sub	r2, r2, #65	; 0x41
   5dd50:	cmp	r2, #25
   5dd54:	bls	5f8e0 <blkid_probe_get_size@plt+0x583c8>
   5dd58:	sub	r2, r3, #48	; 0x30
   5dd5c:	cmp	r2, #9
   5dd60:	bls	5f8e0 <blkid_probe_get_size@plt+0x583c8>
   5dd64:	cmp	r3, #45	; 0x2d
   5dd68:	beq	5f8e0 <blkid_probe_get_size@plt+0x583c8>
   5dd6c:	cmp	r3, #95	; 0x5f
   5dd70:	beq	5f8e0 <blkid_probe_get_size@plt+0x583c8>
   5dd74:	cmp	fp, #0
   5dd78:	mov	r2, #0
   5dd7c:	str	r2, [sl, #-1136]	; 0xfffffb90
   5dd80:	moveq	ip, fp
   5dd84:	moveq	r2, fp
   5dd88:	beq	5dda4 <blkid_probe_get_size@plt+0x5688c>
   5dd8c:	ldr	r3, [pc, #3320]	; 5ea8c <blkid_probe_get_size@plt+0x57574>
   5dd90:	add	r3, pc, r3
   5dd94:	ldr	r3, [r3, #4]
   5dd98:	cmp	r3, #2
   5dd9c:	bgt	6075c <blkid_probe_get_size@plt+0x59244>
   5dda0:	mov	ip, r2
   5dda4:	ldr	r3, [pc, #3300]	; 5ea90 <blkid_probe_get_size@plt+0x57578>
   5dda8:	ldr	r0, [pc, #3300]	; 5ea94 <blkid_probe_get_size@plt+0x5757c>
   5ddac:	add	r3, pc, r3
   5ddb0:	add	r3, r3, #1488	; 0x5d0
   5ddb4:	add	r3, r3, #12
   5ddb8:	str	r2, [sp, #8]
   5ddbc:	ldr	r2, [pc, #3284]	; 5ea98 <blkid_probe_get_size@plt+0x57580>
   5ddc0:	add	r0, pc, r0
   5ddc4:	mov	r1, #0
   5ddc8:	stm	sp, {r3, ip}
   5ddcc:	str	r0, [sp, #20]
   5ddd0:	str	r5, [sp, #24]
   5ddd4:	str	r1, [sp, #16]
   5ddd8:	str	r1, [sp, #12]
   5dddc:	ldr	r3, [pc, #3256]	; 5ea9c <blkid_probe_get_size@plt+0x57584>
   5dde0:	add	r2, pc, r2
   5dde4:	mov	r0, #3
   5dde8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5ddec:	ldrb	r3, [r4, #1]
   5ddf0:	cmp	r3, #5
   5ddf4:	beq	60094 <blkid_probe_get_size@plt+0x58b7c>
   5ddf8:	mov	r1, r5
   5ddfc:	mov	r0, fp
   5de00:	bl	35b38 <blkid_probe_get_size@plt+0x2e620>
   5de04:	add	r4, r4, #12
   5de08:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5de0c:	mov	r3, #1
   5de10:	str	r3, [sp, #56]	; 0x38
   5de14:	add	r4, r4, #12
   5de18:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5de1c:	mov	r5, r4
   5de20:	ldrb	r3, [r5, #12]!
   5de24:	sub	r3, r3, #15
   5de28:	cmp	r3, #4
   5de2c:	bls	5de20 <blkid_probe_get_size@plt+0x56908>
   5de30:	ldr	r3, [sp, #44]	; 0x2c
   5de34:	mov	r7, r8
   5de38:	sub	r3, r3, #120	; 0x78
   5de3c:	str	r3, [sp, #72]	; 0x48
   5de40:	str	fp, [r7, #4]!
   5de44:	cmp	r4, r5
   5de48:	bcs	5f970 <blkid_probe_get_size@plt+0x58458>
   5de4c:	mov	r6, r4
   5de50:	ldrb	r3, [r6]
   5de54:	sub	r3, r3, #15
   5de58:	cmp	r3, #4
   5de5c:	addls	pc, pc, r3, lsl #2
   5de60:	b	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5de64:	b	5fce8 <blkid_probe_get_size@plt+0x587d0>
   5de68:	b	5f938 <blkid_probe_get_size@plt+0x58420>
   5de6c:	b	5fd6c <blkid_probe_get_size@plt+0x58854>
   5de70:	b	5fd4c <blkid_probe_get_size@plt+0x58834>
   5de74:	b	5fd1c <blkid_probe_get_size@plt+0x58804>
   5de78:	ldr	r2, [r9, #24]
   5de7c:	ldr	r5, [sp, #44]	; 0x2c
   5de80:	ldr	r3, [r4, #4]
   5de84:	ldr	r1, [r2]
   5de88:	sub	r6, r5, #4
   5de8c:	mov	r7, #0
   5de90:	add	r1, r1, r3
   5de94:	mov	r2, r6
   5de98:	mov	r3, #1024	; 0x400
   5de9c:	str	r7, [sp]
   5dea0:	mov	r0, r8
   5dea4:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5dea8:	mov	r3, r7
   5deac:	mov	r1, r6
   5deb0:	mov	r0, r6
   5deb4:	mov	r2, #1024	; 0x400
   5deb8:	bl	3ce98 <blkid_probe_get_size@plt+0x35980>
   5debc:	cmp	r0, r7
   5dec0:	beq	5ded0 <blkid_probe_get_size@plt+0x569b8>
   5dec4:	ldrb	r3, [sl, #-1028]	; 0xfffffbfc
   5dec8:	cmp	r3, #47	; 0x2f
   5decc:	bne	5ff9c <blkid_probe_get_size@plt+0x58a84>
   5ded0:	mov	r0, r6
   5ded4:	bl	4d258 <blkid_probe_get_size@plt+0x45d40>
   5ded8:	ldr	r3, [sp, #44]	; 0x2c
   5dedc:	mov	r1, r6
   5dee0:	sub	r2, r3, #112	; 0x70
   5dee4:	mov	r0, #3
   5dee8:	bl	6a2c <__xstat64@plt>
   5deec:	cmp	r0, #0
   5def0:	bne	5fbf4 <blkid_probe_get_size@plt+0x586dc>
   5def4:	ldr	r3, [r4, #8]
   5def8:	cmp	r3, #0
   5defc:	beq	5df0c <blkid_probe_get_size@plt+0x569f4>
   5df00:	ldr	r2, [sl, #-1120]	; 0xfffffba0
   5df04:	tst	r3, r2
   5df08:	beq	5fbf4 <blkid_probe_get_size@plt+0x586dc>
   5df0c:	ldrb	r3, [r4, #1]
   5df10:	cmp	r3, #2
   5df14:	beq	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5df18:	add	r4, r4, #12
   5df1c:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5df20:	ldr	r3, [r9, #24]
   5df24:	mov	r6, #0
   5df28:	str	r6, [sl, #-1136]	; 0xfffffb90
   5df2c:	ldr	r1, [r3]
   5df30:	ldr	r3, [r4, #8]
   5df34:	sub	r5, sl, #4
   5df38:	add	r1, r1, r3
   5df3c:	mov	r2, r5
   5df40:	mov	r3, #1024	; 0x400
   5df44:	str	r6, [sp]
   5df48:	mov	r0, r8
   5df4c:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5df50:	mov	r0, r5
   5df54:	bl	2a280 <blkid_probe_get_size@plt+0x22d68>
   5df58:	ldr	r3, [sp, #44]	; 0x2c
   5df5c:	mov	r0, r5
   5df60:	sub	r1, r3, #112	; 0x70
   5df64:	bl	29f58 <blkid_probe_get_size@plt+0x22a40>
   5df68:	cmp	r0, r6
   5df6c:	blt	5dfd0 <blkid_probe_get_size@plt+0x56ab8>
   5df70:	ldr	r7, [sl, #-1136]	; 0xfffffb90
   5df74:	mov	r0, r7
   5df78:	bl	723c <strlen@plt>
   5df7c:	subs	r5, r0, #0
   5df80:	beq	5dfb8 <blkid_probe_get_size@plt+0x56aa0>
   5df84:	bl	7104 <__ctype_b_loc@plt>
   5df88:	b	5df9c <blkid_probe_get_size@plt+0x56a84>
   5df8c:	cmp	r5, #0
   5df90:	strb	r6, [r7, r5]
   5df94:	ldr	r7, [sl, #-1136]	; 0xfffffb90
   5df98:	beq	5dfb8 <blkid_probe_get_size@plt+0x56aa0>
   5df9c:	sub	r5, r5, #1
   5dfa0:	ldr	r2, [r0]
   5dfa4:	ldrb	r3, [r7, r5]
   5dfa8:	lsl	r3, r3, #1
   5dfac:	ldrh	r3, [r2, r3]
   5dfb0:	tst	r3, #8192	; 0x2000
   5dfb4:	bne	5df8c <blkid_probe_get_size@plt+0x56a74>
   5dfb8:	mov	r2, r7
   5dfbc:	mov	r1, r4
   5dfc0:	mov	r0, r9
   5dfc4:	bl	59268 <blkid_probe_get_size@plt+0x51d50>
   5dfc8:	cmp	r0, #0
   5dfcc:	beq	60354 <blkid_probe_get_size@plt+0x58e3c>
   5dfd0:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   5dfd4:	bl	69f0 <free@plt>
   5dfd8:	b	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5dfdc:	mov	r3, r4
   5dfe0:	mov	r2, r8
   5dfe4:	mov	r1, fp
   5dfe8:	mov	r0, r9
   5dfec:	bl	5943c <blkid_probe_get_size@plt+0x51f24>
   5dff0:	cmp	r0, #0
   5dff4:	beq	5de04 <blkid_probe_get_size@plt+0x568ec>
   5dff8:	ldr	r3, [sp, #40]	; 0x28
   5dffc:	ldrh	r4, [r3, #2]
   5e000:	add	r4, r4, r4, lsl #1
   5e004:	add	r4, r3, r4, lsl #2
   5e008:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5e00c:	ldr	r2, [r8, #16]
   5e010:	mov	r1, r4
   5e014:	mov	r0, r9
   5e018:	bl	59268 <blkid_probe_get_size@plt+0x51d50>
   5e01c:	cmp	r0, #0
   5e020:	bne	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5e024:	add	r4, r4, #12
   5e028:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5e02c:	ldr	r3, [r9, #24]
   5e030:	ldr	r2, [r4, #4]
   5e034:	sub	r5, sl, #4
   5e038:	ldr	r1, [r3]
   5e03c:	mov	r3, #0
   5e040:	add	r1, r1, r2
   5e044:	str	r3, [sp]
   5e048:	mov	r2, r5
   5e04c:	mov	r3, #1024	; 0x400
   5e050:	mov	r0, r8
   5e054:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e058:	cmp	fp, #0
   5e05c:	beq	605a0 <blkid_probe_get_size@plt+0x59088>
   5e060:	ldr	r6, [sp, #44]	; 0x2c
   5e064:	mov	r0, fp
   5e068:	sub	r1, r6, #112	; 0x70
   5e06c:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   5e070:	cmp	r0, #0
   5e074:	blt	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e078:	sub	r6, r6, #116	; 0x74
   5e07c:	mov	r1, r6
   5e080:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   5e084:	bl	38b54 <blkid_probe_get_size@plt+0x3163c>
   5e088:	subs	r7, r0, #0
   5e08c:	bne	5e0a8 <blkid_probe_get_size@plt+0x56b90>
   5e090:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e094:	mov	r1, r6
   5e098:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   5e09c:	bl	38a7c <blkid_probe_get_size@plt+0x31564>
   5e0a0:	subs	r7, r0, #0
   5e0a4:	beq	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e0a8:	mov	r2, #0
   5e0ac:	mov	r1, r7
   5e0b0:	mov	r0, r5
   5e0b4:	bl	693c <fnmatch@plt>
   5e0b8:	cmp	r0, #0
   5e0bc:	bne	5e094 <blkid_probe_get_size@plt+0x56b7c>
   5e0c0:	mov	r1, r7
   5e0c4:	ldr	r2, [sl, #-1140]	; 0xfffffb8c
   5e0c8:	mov	r0, fp
   5e0cc:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   5e0d0:	b	5e094 <blkid_probe_get_size@plt+0x56b7c>
   5e0d4:	ldr	r3, [r9, #24]
   5e0d8:	mov	r7, #0
   5e0dc:	str	r7, [sl, #-1140]	; 0xfffffb8c
   5e0e0:	ldr	r5, [r3]
   5e0e4:	ldr	r3, [r4, #4]
   5e0e8:	ldr	r2, [sp, #44]	; 0x2c
   5e0ec:	add	r5, r5, r3
   5e0f0:	sub	r2, r2, #116	; 0x74
   5e0f4:	mov	r0, r5
   5e0f8:	mov	r1, #2
   5e0fc:	bl	3efd0 <blkid_probe_get_size@plt+0x37ab8>
   5e100:	subs	r6, r0, #0
   5e104:	blt	5fc18 <blkid_probe_get_size@plt+0x58700>
   5e108:	ldr	r0, [sl, #-1140]	; 0xfffffb8c
   5e10c:	bne	5fb0c <blkid_probe_get_size@plt+0x585f4>
   5e110:	ldrb	r3, [r4, #1]
   5e114:	cmp	r3, #2
   5e118:	beq	5fb28 <blkid_probe_get_size@plt+0x58610>
   5e11c:	bl	69f0 <free@plt>
   5e120:	b	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5e124:	ldr	r0, [r8, #8]
   5e128:	cmp	r0, #0
   5e12c:	beq	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e130:	ldr	r2, [r9, #24]
   5e134:	ldr	r3, [r4, #4]
   5e138:	ldr	r5, [r2]
   5e13c:	ldr	r2, [sp, #44]	; 0x2c
   5e140:	add	r5, r5, r3
   5e144:	sub	r2, r2, #120	; 0x78
   5e148:	mov	r1, r5
   5e14c:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   5e150:	cmp	r0, #0
   5e154:	bge	60304 <blkid_probe_get_size@plt+0x58dec>
   5e158:	ldrb	r3, [r4, #1]
   5e15c:	cmp	r3, #2
   5e160:	bne	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5e164:	add	r4, r4, #12
   5e168:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5e16c:	ldr	r2, [r4, #8]
   5e170:	cmp	r2, #10
   5e174:	bhi	60514 <blkid_probe_get_size@plt+0x58ffc>
   5e178:	ldr	r3, [pc, #2336]	; 5eaa0 <blkid_probe_get_size@plt+0x57588>
   5e17c:	add	r3, pc, r3
   5e180:	add	r3, r3, r2, lsl #2
   5e184:	ldr	r3, [r3, #880]	; 0x370
   5e188:	cmp	r3, #0
   5e18c:	beq	5f980 <blkid_probe_get_size@plt+0x58468>
   5e190:	ldrb	r3, [r3, #24]
   5e194:	cmp	r3, #0
   5e198:	beq	5f980 <blkid_probe_get_size@plt+0x58468>
   5e19c:	mov	r3, #1
   5e1a0:	ldr	r1, [r8, #60]	; 0x3c
   5e1a4:	lsl	r2, r3, r2
   5e1a8:	tst	r1, r2
   5e1ac:	beq	5f978 <blkid_probe_get_size@plt+0x58460>
   5e1b0:	mov	r5, #0
   5e1b4:	cmp	fp, #0
   5e1b8:	str	r5, [sl, #-1136]	; 0xfffffb90
   5e1bc:	beq	60600 <blkid_probe_get_size@plt+0x590e8>
   5e1c0:	ldr	r3, [pc, #2268]	; 5eaa4 <blkid_probe_get_size@plt+0x5758c>
   5e1c4:	add	r3, pc, r3
   5e1c8:	ldr	r3, [r3, #4]
   5e1cc:	cmp	r3, #6
   5e1d0:	bgt	60a04 <blkid_probe_get_size@plt+0x594ec>
   5e1d4:	mov	r6, r5
   5e1d8:	ldr	r0, [r4, #8]
   5e1dc:	bl	59040 <blkid_probe_get_size@plt+0x51b28>
   5e1e0:	ldr	ip, [sp, #40]	; 0x28
   5e1e4:	ldr	r1, [r9, #24]
   5e1e8:	ldr	r3, [pc, #2232]	; 5eaa8 <blkid_probe_get_size@plt+0x57590>
   5e1ec:	ldrh	r2, [ip, #10]
   5e1f0:	add	r3, pc, r3
   5e1f4:	add	r3, r3, #1488	; 0x5d0
   5e1f8:	str	r2, [sp, #32]
   5e1fc:	ldrh	r2, [ip, #8]
   5e200:	ldr	r1, [r1]
   5e204:	add	r3, r3, #12
   5e208:	add	r1, r1, r2
   5e20c:	ldr	r2, [pc, #2200]	; 5eaac <blkid_probe_get_size@plt+0x57594>
   5e210:	str	r1, [sp, #28]
   5e214:	add	r2, pc, r2
   5e218:	str	r2, [sp, #20]
   5e21c:	ldr	r2, [pc, #2188]	; 5eab0 <blkid_probe_get_size@plt+0x57598>
   5e220:	mov	r1, #0
   5e224:	stm	sp, {r3, r6}
   5e228:	str	r1, [sp, #16]
   5e22c:	str	r1, [sp, #12]
   5e230:	ldr	r3, [pc, #2172]	; 5eab4 <blkid_probe_get_size@plt+0x5759c>
   5e234:	add	r2, pc, r2
   5e238:	str	r5, [sp, #8]
   5e23c:	str	r0, [sp, #24]
   5e240:	mov	r0, #7
   5e244:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e248:	ldr	r2, [r4, #8]
   5e24c:	mov	r1, #1
   5e250:	ldr	r3, [r8, #64]	; 0x40
   5e254:	ands	r3, r3, r1, lsl r2
   5e258:	bne	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e25c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e260:	ldr	r2, [r9, #24]
   5e264:	ldr	r1, [sp, #44]	; 0x2c
   5e268:	ldr	r3, [r4, #4]
   5e26c:	sub	r6, r1, #4
   5e270:	ldr	r1, [r2]
   5e274:	mov	r5, #0
   5e278:	add	r1, r1, r3
   5e27c:	mov	r2, r6
   5e280:	str	r5, [sp]
   5e284:	mov	r3, #1024	; 0x400
   5e288:	mov	r0, r8
   5e28c:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e290:	cmp	fp, r5
   5e294:	str	r5, [sl, #-1136]	; 0xfffffb90
   5e298:	beq	6019c <blkid_probe_get_size@plt+0x58c84>
   5e29c:	ldr	r3, [pc, #2068]	; 5eab8 <blkid_probe_get_size@plt+0x575a0>
   5e2a0:	add	r3, pc, r3
   5e2a4:	ldr	r3, [r3, #4]
   5e2a8:	cmp	r3, #6
   5e2ac:	movle	r2, r5
   5e2b0:	movle	ip, r2
   5e2b4:	bgt	6060c <blkid_probe_get_size@plt+0x590f4>
   5e2b8:	ldr	lr, [sp, #40]	; 0x28
   5e2bc:	ldr	r1, [r9, #24]
   5e2c0:	ldr	r3, [pc, #2036]	; 5eabc <blkid_probe_get_size@plt+0x575a4>
   5e2c4:	ldrh	r0, [lr, #10]
   5e2c8:	add	r3, pc, r3
   5e2cc:	add	r3, r3, #1488	; 0x5d0
   5e2d0:	str	r0, [sp, #32]
   5e2d4:	ldrh	r0, [lr, #8]
   5e2d8:	ldr	r1, [r1]
   5e2dc:	add	r3, r3, #12
   5e2e0:	add	r1, r1, r0
   5e2e4:	ldr	r0, [pc, #2004]	; 5eac0 <blkid_probe_get_size@plt+0x575a8>
   5e2e8:	str	r2, [sp, #8]
   5e2ec:	ldr	r2, [pc, #2000]	; 5eac4 <blkid_probe_get_size@plt+0x575ac>
   5e2f0:	add	r0, pc, r0
   5e2f4:	str	r1, [sp, #28]
   5e2f8:	mov	r1, #0
   5e2fc:	stm	sp, {r3, ip}
   5e300:	str	r0, [sp, #20]
   5e304:	str	r1, [sp, #16]
   5e308:	str	r1, [sp, #12]
   5e30c:	ldr	r3, [pc, #1972]	; 5eac8 <blkid_probe_get_size@plt+0x575b0>
   5e310:	add	r2, pc, r2
   5e314:	str	r6, [sp, #24]
   5e318:	mov	r0, #7
   5e31c:	sub	r5, sl, #4
   5e320:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e324:	mov	r1, r6
   5e328:	mov	r2, r5
   5e32c:	mov	r0, r8
   5e330:	bl	4d53c <blkid_probe_get_size@plt+0x46024>
   5e334:	subs	r7, r0, #0
   5e338:	bne	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e33c:	mov	r1, #10
   5e340:	mov	r0, r5
   5e344:	bl	74c4 <strchr@plt>
   5e348:	ldr	r3, [r8]
   5e34c:	mov	r1, r5
   5e350:	subs	r6, r0, #0
   5e354:	beq	5f8f0 <blkid_probe_get_size@plt+0x583d8>
   5e358:	strb	r7, [r6], #1
   5e35c:	mov	r0, r3
   5e360:	bl	10a80 <blkid_probe_get_size@plt+0x9568>
   5e364:	subs	r5, r6, #0
   5e368:	bne	5e33c <blkid_probe_get_size@plt+0x56e24>
   5e36c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e370:	ldr	r2, [r9, #24]
   5e374:	ldr	r3, [r4, #4]
   5e378:	sub	r5, sl, #4
   5e37c:	ldr	r1, [r2]
   5e380:	mov	r6, #0
   5e384:	add	r1, r1, r3
   5e388:	mov	r2, r5
   5e38c:	mov	r3, #1024	; 0x400
   5e390:	str	r6, [sp]
   5e394:	mov	r0, r8
   5e398:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e39c:	ldr	r1, [pc, #1832]	; 5eacc <blkid_probe_get_size@plt+0x575b4>
   5e3a0:	mov	r0, r5
   5e3a4:	add	r1, pc, r1
   5e3a8:	bl	738c <fopen64@plt>
   5e3ac:	subs	r7, r0, #0
   5e3b0:	beq	601a8 <blkid_probe_get_size@plt+0x58c90>
   5e3b4:	mov	r5, r6
   5e3b8:	add	r6, sp, #112	; 0x70
   5e3bc:	b	5e3d8 <blkid_probe_get_size@plt+0x56ec0>
   5e3c0:	ldr	r1, [sl, #-1136]	; 0xfffffb90
   5e3c4:	beq	5fc98 <blkid_probe_get_size@plt+0x58780>
   5e3c8:	mov	r0, fp
   5e3cc:	bl	10a80 <blkid_probe_get_size@plt+0x9568>
   5e3d0:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   5e3d4:	bl	69f0 <free@plt>
   5e3d8:	mov	r2, r6
   5e3dc:	mov	r1, #0
   5e3e0:	mov	r0, r7
   5e3e4:	str	r5, [sl, #-1136]	; 0xfffffb90
   5e3e8:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   5e3ec:	cmp	r0, #0
   5e3f0:	bge	5e3c0 <blkid_probe_get_size@plt+0x56ea8>
   5e3f4:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   5e3f8:	bl	69f0 <free@plt>
   5e3fc:	mov	r0, r7
   5e400:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5e404:	b	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e408:	mov	r5, #0
   5e40c:	ldr	r0, [r8, #16]
   5e410:	bl	69f0 <free@plt>
   5e414:	str	r5, [r8, #16]
   5e418:	ldr	r2, [r9, #24]
   5e41c:	ldr	r1, [sp, #44]	; 0x2c
   5e420:	ldr	r3, [r4, #4]
   5e424:	sub	r6, r1, #4
   5e428:	ldr	r1, [r2]
   5e42c:	mov	r0, r8
   5e430:	add	r1, r1, r3
   5e434:	mov	r2, r6
   5e438:	str	r5, [sp]
   5e43c:	mov	r3, #1024	; 0x400
   5e440:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e444:	cmp	fp, r5
   5e448:	str	r5, [sl, #-1136]	; 0xfffffb90
   5e44c:	beq	60190 <blkid_probe_get_size@plt+0x58c78>
   5e450:	ldr	r3, [pc, #1656]	; 5ead0 <blkid_probe_get_size@plt+0x575b8>
   5e454:	add	r3, pc, r3
   5e458:	ldr	r3, [r3, #4]
   5e45c:	cmp	r3, #6
   5e460:	movle	r2, r5
   5e464:	movle	ip, r2
   5e468:	bgt	606ac <blkid_probe_get_size@plt+0x59194>
   5e46c:	ldr	lr, [sp, #40]	; 0x28
   5e470:	ldr	r1, [r9, #24]
   5e474:	ldr	r3, [pc, #1624]	; 5ead4 <blkid_probe_get_size@plt+0x575bc>
   5e478:	ldrh	r0, [lr, #10]
   5e47c:	add	r3, pc, r3
   5e480:	add	r3, r3, #1488	; 0x5d0
   5e484:	str	r0, [sp, #32]
   5e488:	ldrh	r0, [lr, #8]
   5e48c:	ldr	r1, [r1]
   5e490:	add	r3, r3, #12
   5e494:	add	r1, r1, r0
   5e498:	ldr	r0, [pc, #1592]	; 5ead8 <blkid_probe_get_size@plt+0x575c0>
   5e49c:	str	r2, [sp, #8]
   5e4a0:	ldr	r2, [pc, #1588]	; 5eadc <blkid_probe_get_size@plt+0x575c4>
   5e4a4:	add	r0, pc, r0
   5e4a8:	str	r1, [sp, #28]
   5e4ac:	mov	r1, #0
   5e4b0:	stm	sp, {r3, ip}
   5e4b4:	str	r0, [sp, #20]
   5e4b8:	str	r1, [sp, #16]
   5e4bc:	str	r1, [sp, #12]
   5e4c0:	ldr	r3, [pc, #1560]	; 5eae0 <blkid_probe_get_size@plt+0x575c8>
   5e4c4:	add	r2, pc, r2
   5e4c8:	str	r6, [sp, #24]
   5e4cc:	mov	r0, #7
   5e4d0:	sub	r5, sl, #4
   5e4d4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e4d8:	mov	r2, r5
   5e4dc:	mov	r1, r6
   5e4e0:	mov	r0, r8
   5e4e4:	bl	4d53c <blkid_probe_get_size@plt+0x46024>
   5e4e8:	cmp	r0, #0
   5e4ec:	bne	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e4f0:	ldrb	r1, [sl, #-4]
   5e4f4:	cmp	r1, #0
   5e4f8:	moveq	r7, r5
   5e4fc:	beq	5e558 <blkid_probe_get_size@plt+0x57040>
   5e500:	ldr	r2, [pc, #1500]	; 5eae4 <blkid_probe_get_size@plt+0x575cc>
   5e504:	sub	r3, sl, #3
   5e508:	mov	r7, r5
   5e50c:	add	r2, pc, r2
   5e510:	str	r5, [sp, #76]	; 0x4c
   5e514:	mov	r5, r3
   5e518:	mov	r3, r6
   5e51c:	str	r4, [sp, #72]	; 0x48
   5e520:	mov	r6, r7
   5e524:	mov	r4, r2
   5e528:	mov	r7, r3
   5e52c:	mov	r0, r4
   5e530:	bl	74c4 <strchr@plt>
   5e534:	cmp	r0, #0
   5e538:	moveq	r6, r5
   5e53c:	ldrb	r1, [r5], #1
   5e540:	cmp	r1, #0
   5e544:	bne	5e52c <blkid_probe_get_size@plt+0x57014>
   5e548:	mov	r3, r7
   5e54c:	ldrd	r4, [sp, #72]	; 0x48
   5e550:	mov	r7, r6
   5e554:	mov	r6, r3
   5e558:	ldr	r2, [sp, #56]	; 0x38
   5e55c:	mov	r3, #0
   5e560:	cmp	r2, #0
   5e564:	strb	r3, [r7]
   5e568:	beq	60388 <blkid_probe_get_size@plt+0x58e70>
   5e56c:	cmp	r2, #2
   5e570:	beq	60388 <blkid_probe_get_size@plt+0x58e70>
   5e574:	mov	r0, r5
   5e578:	bl	74e8 <strdup@plt>
   5e57c:	str	r0, [r8, #16]
   5e580:	b	5df0c <blkid_probe_get_size@plt+0x569f4>
   5e584:	ldr	r3, [sp, #44]	; 0x2c
   5e588:	mov	r0, fp
   5e58c:	sub	r1, r3, #120	; 0x78
   5e590:	bl	36fe8 <blkid_probe_get_size@plt+0x2fad0>
   5e594:	cmp	r0, #0
   5e598:	blt	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5e59c:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   5e5a0:	b	5e010 <blkid_probe_get_size@plt+0x56af8>
   5e5a4:	ldr	r3, [sp, #44]	; 0x2c
   5e5a8:	mov	r0, fp
   5e5ac:	sub	r1, r3, #120	; 0x78
   5e5b0:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   5e5b4:	cmp	r0, #0
   5e5b8:	blt	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5e5bc:	b	5e59c <blkid_probe_get_size@plt+0x57084>
   5e5c0:	mov	r0, fp
   5e5c4:	bl	3863c <blkid_probe_get_size@plt+0x31124>
   5e5c8:	subs	r1, r0, #0
   5e5cc:	bne	5e5e4 <blkid_probe_get_size@plt+0x570cc>
   5e5d0:	b	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e5d4:	mov	r0, fp
   5e5d8:	bl	3857c <blkid_probe_get_size@plt+0x31064>
   5e5dc:	subs	r1, r0, #0
   5e5e0:	beq	5e158 <blkid_probe_get_size@plt+0x56c40>
   5e5e4:	ldr	r2, [r9, #24]
   5e5e8:	ldr	r3, [r4, #4]
   5e5ec:	ldr	r0, [r2]
   5e5f0:	add	r0, r0, r3
   5e5f4:	bl	7314 <strcmp@plt>
   5e5f8:	cmp	r0, #0
   5e5fc:	bne	5e5d4 <blkid_probe_get_size@plt+0x570bc>
   5e600:	b	5df0c <blkid_probe_get_size@plt+0x569f4>
   5e604:	ldr	r1, [r9, #24]
   5e608:	ldr	r3, [r4, #8]
   5e60c:	ldr	r2, [sp, #44]	; 0x2c
   5e610:	ldr	r1, [r1]
   5e614:	sub	r2, r2, #120	; 0x78
   5e618:	mov	r0, fp
   5e61c:	add	r1, r1, r3
   5e620:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   5e624:	cmp	r0, #0
   5e628:	blt	5fc04 <blkid_probe_get_size@plt+0x586ec>
   5e62c:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   5e630:	cmp	r2, #0
   5e634:	ldreq	r2, [pc, #1196]	; 5eae8 <blkid_probe_get_size@plt+0x575d0>
   5e638:	addeq	r2, pc, r2
   5e63c:	b	5e010 <blkid_probe_get_size@plt+0x56af8>
   5e640:	ldr	r2, [r9, #24]
   5e644:	ldr	r3, [r4, #8]
   5e648:	sub	r5, sl, #4
   5e64c:	ldr	r6, [r2]
   5e650:	mov	r1, r5
   5e654:	add	r6, r6, r3
   5e658:	mov	r0, r6
   5e65c:	mov	r3, #0
   5e660:	mov	r2, #1024	; 0x400
   5e664:	bl	3ce98 <blkid_probe_get_size@plt+0x35980>
   5e668:	cmp	r0, #0
   5e66c:	bne	5ffe4 <blkid_probe_get_size@plt+0x58acc>
   5e670:	mov	r0, r5
   5e674:	bl	4d258 <blkid_probe_get_size@plt+0x45d40>
   5e678:	ldr	r2, [r9, #24]
   5e67c:	ldr	r1, [sp, #44]	; 0x2c
   5e680:	ldr	r3, [r4, #4]
   5e684:	sub	r6, r1, #4
   5e688:	ldr	r1, [r2]
   5e68c:	mov	r7, #0
   5e690:	add	r1, r1, r3
   5e694:	mov	r2, r6
   5e698:	str	r7, [sp]
   5e69c:	mov	r3, #512	; 0x200
   5e6a0:	mov	r0, r8
   5e6a4:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e6a8:	cmp	fp, r7
   5e6ac:	str	r7, [sl, #-1136]	; 0xfffffb90
   5e6b0:	beq	60184 <blkid_probe_get_size@plt+0x58c6c>
   5e6b4:	ldr	r3, [pc, #1072]	; 5eaec <blkid_probe_get_size@plt+0x575d4>
   5e6b8:	add	r3, pc, r3
   5e6bc:	ldr	r3, [r3, #4]
   5e6c0:	cmp	r3, #6
   5e6c4:	movle	r0, r7
   5e6c8:	movle	ip, r0
   5e6cc:	bgt	6065c <blkid_probe_get_size@plt+0x59144>
   5e6d0:	ldr	lr, [sp, #40]	; 0x28
   5e6d4:	ldr	r2, [r9, #24]
   5e6d8:	ldr	r3, [pc, #1040]	; 5eaf0 <blkid_probe_get_size@plt+0x575d8>
   5e6dc:	ldrh	r1, [lr, #10]
   5e6e0:	add	r3, pc, r3
   5e6e4:	add	r3, r3, #1488	; 0x5d0
   5e6e8:	str	r1, [sp, #36]	; 0x24
   5e6ec:	ldr	r1, [r2]
   5e6f0:	ldr	r2, [pc, #1020]	; 5eaf4 <blkid_probe_get_size@plt+0x575dc>
   5e6f4:	ldrh	lr, [lr, #8]
   5e6f8:	add	r2, pc, r2
   5e6fc:	add	r3, r3, #12
   5e700:	str	r2, [sp, #20]
   5e704:	ldr	r2, [pc, #1004]	; 5eaf8 <blkid_probe_get_size@plt+0x575e0>
   5e708:	add	r1, r1, lr
   5e70c:	mov	r7, #0
   5e710:	stm	sp, {r3, ip}
   5e714:	str	r1, [sp, #32]
   5e718:	ldr	r3, [pc, #988]	; 5eafc <blkid_probe_get_size@plt+0x575e4>
   5e71c:	str	r0, [sp, #8]
   5e720:	mov	r1, r7
   5e724:	add	r2, pc, r2
   5e728:	str	r6, [sp, #28]
   5e72c:	str	r5, [sp, #24]
   5e730:	str	r7, [sp, #16]
   5e734:	str	r7, [sp, #12]
   5e738:	mov	r0, #7
   5e73c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e740:	ldr	r1, [pc, #952]	; 5eb00 <blkid_probe_get_size@plt+0x575e8>
   5e744:	mov	r0, r5
   5e748:	add	r1, pc, r1
   5e74c:	bl	738c <fopen64@plt>
   5e750:	subs	r3, r0, #0
   5e754:	str	r3, [sp, #72]	; 0x48
   5e758:	beq	5fb70 <blkid_probe_get_size@plt+0x58658>
   5e75c:	ldr	r2, [pc, #928]	; 5eb04 <blkid_probe_get_size@plt+0x575ec>
   5e760:	mov	r3, r6
   5e764:	add	r2, pc, r2
   5e768:	mov	r1, #1
   5e76c:	bl	6c0c <__fprintf_chk@plt>
   5e770:	cmp	r0, #0
   5e774:	ble	60260 <blkid_probe_get_size@plt+0x58d48>
   5e778:	ldr	r0, [sp, #72]	; 0x48
   5e77c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5e780:	add	r4, r4, #12
   5e784:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5e788:	ldr	r2, [sl, #-1148]	; 0xfffffb84
   5e78c:	b	5e010 <blkid_probe_get_size@plt+0x56af8>
   5e790:	ldrb	r3, [r8, #73]	; 0x49
   5e794:	cmp	r3, #0
   5e798:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e79c:	ldrb	r3, [r4, #1]
   5e7a0:	mov	r2, #0
   5e7a4:	cmp	r3, #7
   5e7a8:	moveq	r3, #1
   5e7ac:	strbeq	r3, [r8, #73]	; 0x49
   5e7b0:	mov	r3, #1
   5e7b4:	strb	r3, [r8, #72]	; 0x48
   5e7b8:	ldr	ip, [r4, #8]
   5e7bc:	cmp	fp, #0
   5e7c0:	str	ip, [r8, #24]
   5e7c4:	str	r2, [sl, #-1136]	; 0xfffffb90
   5e7c8:	beq	60324 <blkid_probe_get_size@plt+0x58e0c>
   5e7cc:	ldr	r3, [pc, #820]	; 5eb08 <blkid_probe_get_size@plt+0x575f0>
   5e7d0:	add	r3, pc, r3
   5e7d4:	ldr	r3, [r3, #4]
   5e7d8:	cmp	r3, #6
   5e7dc:	bgt	5ff70 <blkid_probe_get_size@plt+0x58a58>
   5e7e0:	mov	lr, r2
   5e7e4:	ldr	r5, [sp, #40]	; 0x28
   5e7e8:	ldr	r1, [r9, #24]
   5e7ec:	ldr	r3, [pc, #792]	; 5eb0c <blkid_probe_get_size@plt+0x575f4>
   5e7f0:	ldrh	r0, [r5, #10]
   5e7f4:	add	r3, pc, r3
   5e7f8:	add	r3, r3, #1488	; 0x5d0
   5e7fc:	str	r0, [sp, #32]
   5e800:	ldrh	r0, [r5, #8]
   5e804:	ldr	r1, [r1]
   5e808:	add	r3, r3, #12
   5e80c:	add	r1, r1, r0
   5e810:	ldr	r0, [pc, #760]	; 5eb10 <blkid_probe_get_size@plt+0x575f8>
   5e814:	str	r2, [sp, #8]
   5e818:	ldr	r2, [pc, #756]	; 5eb14 <blkid_probe_get_size@plt+0x575fc>
   5e81c:	add	r0, pc, r0
   5e820:	str	r1, [sp, #28]
   5e824:	mov	r1, #0
   5e828:	stm	sp, {r3, lr}
   5e82c:	str	r0, [sp, #20]
   5e830:	str	ip, [sp, #24]
   5e834:	str	r1, [sp, #16]
   5e838:	str	r1, [sp, #12]
   5e83c:	ldr	r3, [pc, #724]	; 5eb18 <blkid_probe_get_size@plt+0x57600>
   5e840:	add	r2, pc, r2
   5e844:	mov	r0, #7
   5e848:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e84c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e850:	ldrb	r7, [r8, #75]	; 0x4b
   5e854:	cmp	r7, #0
   5e858:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e85c:	ldr	r2, [r9, #24]
   5e860:	ldr	r3, [r4, #4]
   5e864:	sub	r5, sl, #4
   5e868:	ldr	r1, [r2]
   5e86c:	mov	r0, r8
   5e870:	add	r1, r1, r3
   5e874:	mov	r2, r5
   5e878:	mov	r3, #512	; 0x200
   5e87c:	str	r7, [sp]
   5e880:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e884:	ldr	r1, [pc, #656]	; 5eb1c <blkid_probe_get_size@plt+0x57604>
   5e888:	mov	r0, r5
   5e88c:	add	r1, pc, r1
   5e890:	bl	6c9c <strspn@plt>
   5e894:	add	r3, r5, r0
   5e898:	str	r3, [sp, #72]	; 0x48
   5e89c:	ldrb	r3, [r5, r0]
   5e8a0:	cmp	r3, #45	; 0x2d
   5e8a4:	beq	60ba0 <blkid_probe_get_size@plt+0x59688>
   5e8a8:	bl	732c <__errno_location@plt>
   5e8ac:	ldr	r2, [sp, #44]	; 0x2c
   5e8b0:	sub	r6, r2, #112	; 0x70
   5e8b4:	mov	r1, r6
   5e8b8:	mov	r2, #8
   5e8bc:	str	r7, [r0]
   5e8c0:	str	r0, [sp, #76]	; 0x4c
   5e8c4:	ldr	r0, [sp, #72]	; 0x48
   5e8c8:	bl	69e4 <strtol@plt>
   5e8cc:	ldr	r3, [sp, #76]	; 0x4c
   5e8d0:	ldr	r3, [r3]
   5e8d4:	cmp	r3, #0
   5e8d8:	rsbgt	r6, r3, #0
   5e8dc:	ble	60434 <blkid_probe_get_size@plt+0x58f1c>
   5e8e0:	mov	r2, #0
   5e8e4:	cmp	fp, #0
   5e8e8:	str	r2, [sl, #-1136]	; 0xfffffb90
   5e8ec:	beq	6092c <blkid_probe_get_size@plt+0x59414>
   5e8f0:	ldr	r3, [pc, #552]	; 5eb20 <blkid_probe_get_size@plt+0x57608>
   5e8f4:	add	r3, pc, r3
   5e8f8:	ldr	r3, [r3, #4]
   5e8fc:	cmp	r3, #2
   5e900:	bgt	60bd0 <blkid_probe_get_size@plt+0x596b8>
   5e904:	mov	r1, r2
   5e908:	ldr	r3, [pc, #532]	; 5eb24 <blkid_probe_get_size@plt+0x5760c>
   5e90c:	ldr	r0, [pc, #532]	; 5eb28 <blkid_probe_get_size@plt+0x57610>
   5e910:	add	r3, pc, r3
   5e914:	add	r3, r3, #1488	; 0x5d0
   5e918:	add	r0, pc, r0
   5e91c:	add	r3, r3, #12
   5e920:	str	r2, [sp, #8]
   5e924:	str	r3, [sp]
   5e928:	mov	r2, #0
   5e92c:	mov	r3, r0
   5e930:	str	r2, [sp, #12]
   5e934:	strd	r2, [sp, #16]
   5e938:	ldr	r2, [pc, #492]	; 5eb2c <blkid_probe_get_size@plt+0x57614>
   5e93c:	str	r1, [sp, #4]
   5e940:	str	r5, [sp, #24]
   5e944:	mov	r1, r6
   5e948:	ldr	r3, [pc, #480]	; 5eb30 <blkid_probe_get_size@plt+0x57618>
   5e94c:	add	r2, pc, r2
   5e950:	mov	r0, #3
   5e954:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5e958:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e95c:	ldrb	r3, [r8, #71]	; 0x47
   5e960:	sub	r5, sl, #4
   5e964:	str	r5, [sl, #-1140]	; 0xfffffb8c
   5e968:	cmp	r3, #0
   5e96c:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5e970:	ldrb	r3, [r4, #1]
   5e974:	mov	r6, #0
   5e978:	mov	r0, r8
   5e97c:	cmp	r3, #7
   5e980:	moveq	r3, #1
   5e984:	strbeq	r3, [r8, #71]	; 0x47
   5e988:	ldr	r3, [r9, #24]
   5e98c:	ldr	r2, [r4, #4]
   5e990:	ldr	r1, [r3]
   5e994:	mov	r3, #512	; 0x200
   5e998:	add	r1, r1, r2
   5e99c:	str	r6, [sp]
   5e9a0:	mov	r2, r5
   5e9a4:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5e9a8:	mov	r3, #1
   5e9ac:	strb	r3, [r8, #70]	; 0x46
   5e9b0:	ldr	r3, [sp, #44]	; 0x2c
   5e9b4:	add	r1, r8, #28
   5e9b8:	mov	r2, #2
   5e9bc:	sub	r0, r3, #116	; 0x74
   5e9c0:	bl	41338 <blkid_probe_get_size@plt+0x39e20>
   5e9c4:	subs	r1, r0, #0
   5e9c8:	blt	60418 <blkid_probe_get_size@plt+0x58f00>
   5e9cc:	mov	r1, #0
   5e9d0:	cmp	fp, #0
   5e9d4:	str	r1, [sl, #-1136]	; 0xfffffb90
   5e9d8:	beq	60330 <blkid_probe_get_size@plt+0x58e18>
   5e9dc:	ldr	r3, [pc, #336]	; 5eb34 <blkid_probe_get_size@plt+0x5761c>
   5e9e0:	add	r3, pc, r3
   5e9e4:	ldr	r3, [r3, #4]
   5e9e8:	cmp	r3, #6
   5e9ec:	bgt	5fec8 <blkid_probe_get_size@plt+0x589b0>
   5e9f0:	mov	r0, r1
   5e9f4:	ldr	lr, [sp, #40]	; 0x28
   5e9f8:	ldr	r2, [r9, #24]
   5e9fc:	ldr	r3, [pc, #308]	; 5eb38 <blkid_probe_get_size@plt+0x57620>
   5ea00:	ldrh	ip, [lr, #10]
   5ea04:	add	r3, pc, r3
   5ea08:	add	r3, r3, #1488	; 0x5d0
   5ea0c:	str	ip, [sp, #32]
   5ea10:	ldrh	ip, [lr, #8]
   5ea14:	ldr	r2, [r2]
   5ea18:	add	r3, r3, #12
   5ea1c:	add	r2, r2, ip
   5ea20:	ldr	ip, [r8, #28]
   5ea24:	str	r2, [sp, #28]
   5ea28:	ldr	r2, [pc, #268]	; 5eb3c <blkid_probe_get_size@plt+0x57624>
   5ea2c:	str	r1, [sp, #8]
   5ea30:	add	r2, pc, r2
   5ea34:	str	r2, [sp, #20]
   5ea38:	ldr	r2, [pc, #256]	; 5eb40 <blkid_probe_get_size@plt+0x57628>
   5ea3c:	mov	r1, #0
   5ea40:	str	r0, [sp, #4]
   5ea44:	str	r3, [sp]
   5ea48:	str	ip, [sp, #24]
   5ea4c:	str	r1, [sp, #16]
   5ea50:	str	r1, [sp, #12]
   5ea54:	ldr	r3, [pc, #232]	; 5eb44 <blkid_probe_get_size@plt+0x5762c>
   5ea58:	add	r2, pc, r2
   5ea5c:	mov	r0, #7
   5ea60:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5ea64:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ea68:	andeq	sl, r3, r0, ror r0
   5ea6c:	andeq	r0, r0, ip, lsr r4
   5ea70:	ldrdeq	r7, [r0], -r4
   5ea74:	strdeq	r9, [r0], -r8
   5ea78:	andeq	r8, r1, r0, lsr #18
   5ea7c:	andeq	r8, r1, ip, lsl r9
   5ea80:	andeq	r8, r1, r0, lsl #16
   5ea84:	ldrdeq	r7, [r0], -r4
   5ea88:			; <UNDEFINED> instruction: 0x000009b9
   5ea8c:	andeq	sl, r3, ip, lsr #7
   5ea90:	strdeq	r8, [r1], -r4
   5ea94:	ldrdeq	r9, [r1], -ip
   5ea98:	andeq	r7, r0, r4, lsr #1
   5ea9c:	andeq	r0, r0, lr, lsr #18
   5eaa0:	andeq	r9, r3, r0, lsl #7
   5eaa4:	andeq	r9, r3, r8, ror pc
   5eaa8:			; <UNDEFINED> instruction: 0x000182b0
   5eaac:	muleq	r1, r0, r5
   5eab0:	andeq	r6, r0, r0, asr ip
   5eab4:	andeq	r0, r0, r3, lsr #16
   5eab8:	muleq	r3, ip, lr
   5eabc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   5eac0:	andeq	r9, r1, r0, lsr #9
   5eac4:	andeq	r6, r0, r4, ror fp
   5eac8:	andeq	r0, r0, r3, lsl r8
   5eacc:	andeq	pc, r0, r8, ror #31
   5ead0:	andeq	r9, r3, r8, ror #25
   5ead4:	andeq	r8, r1, r4, lsr #32
   5ead8:	andeq	r9, r1, r8, lsr #5
   5eadc:	andeq	r6, r0, r0, asr #19
   5eae0:	andeq	r0, r0, pc, ror #15
   5eae4:	andeq	r7, r0, r8, asr #31
   5eae8:			; <UNDEFINED> instruction: 0x00007eb4
   5eaec:	andeq	r9, r3, r4, lsl #21
   5eaf0:	andeq	r7, r1, r0, asr #27
   5eaf4:	andeq	r9, r1, r0, lsr #5
   5eaf8:	andeq	r6, r0, r0, ror #14
   5eafc:	muleq	r0, r3, r9
   5eb00:	andeq	r9, r1, r0, ror r2
   5eb04:	andeq	r8, r0, r4, asr r5
   5eb08:	andeq	r9, r3, ip, ror #18
   5eb0c:	andeq	r7, r1, ip, lsr #25
   5eb10:	andeq	r9, r1, r8, lsl r0
   5eb14:	andeq	r6, r0, r4, asr #12
   5eb18:	andeq	r0, r0, fp, asr #17
   5eb1c:	andeq	ip, r0, r0, lsl r5
   5eb20:	andeq	r9, r3, r8, asr #16
   5eb24:	muleq	r1, r0, fp
   5eb28:	andeq	r8, r1, ip, lsr pc
   5eb2c:	andeq	r6, r0, r8, lsr r5
   5eb30:			; <UNDEFINED> instruction: 0x000008b4
   5eb34:	andeq	r9, r3, ip, asr r7
   5eb38:	muleq	r1, ip, sl
   5eb3c:	andeq	r8, r1, r4, lsl lr
   5eb40:	andeq	r6, r0, ip, lsr #8
   5eb44:	andeq	r0, r0, r8, lsr #17
   5eb48:	andeq	r9, r3, ip, asr #8
   5eb4c:	andeq	r7, r1, ip, lsl #15
   5eb50:	strdeq	r8, [r1], -r4
   5eb54:	andeq	r6, r0, ip, lsl r1
   5eb58:	muleq	r0, r3, r8
   5eb5c:	andeq	r9, r3, r0, lsl #5
   5eb60:	andeq	r7, r1, r0, asr #11
   5eb64:	andeq	r8, r1, ip, ror r9
   5eb68:	andeq	r5, r0, r4, asr pc
   5eb6c:	andeq	r0, r0, r2, lsl #18
   5eb70:	andeq	r9, r3, ip, ror #1
   5eb74:			; <UNDEFINED> instruction: 0x000189b0
   5eb78:	andeq	r5, r0, r4, asr #27
   5eb7c:	strdeq	r8, [r3], -ip
   5eb80:	andeq	r7, r1, r8, lsr r3
   5eb84:	andeq	r8, r1, r8, asr #17
   5eb88:	andeq	r5, r0, r8, ror #25
   5eb8c:	andeq	r0, r0, r2, lsr #19
   5eb90:	andeq	r8, r3, r8, asr pc
   5eb94:	andeq	r7, r1, r0, lsr #5
   5eb98:	andeq	r8, r1, ip, ror #15
   5eb9c:	andeq	r5, r0, r8, asr #24
   5eba0:	andeq	r0, r0, r5, lsr #19
   5eba4:	ldrdeq	r8, [r3], -ip
   5eba8:			; <UNDEFINED> instruction: 0x000187bc
   5ebac:	ldrdeq	r5, [r0], -ip
   5ebb0:	andeq	r0, r0, pc, asr #19
   5ebb4:	muleq	r3, r0, sp
   5ebb8:	ldrdeq	r7, [r1], -r0
   5ebbc:	andeq	r8, r1, r8, asr #10
   5ebc0:	andeq	r5, r0, r0, ror #20
   5ebc4:	andeq	r0, r0, r6, asr r9
   5ebc8:	andeq	r6, r1, r4, asr pc
   5ebcc:	andeq	r8, r3, ip, asr #23
   5ebd0:			; <UNDEFINED> instruction: 0x000183b4
   5ebd4:	andeq	r5, r0, r0, lsr #17
   5ebd8:	andeq	r0, r0, r5, ror r9
   5ebdc:	andeq	ip, r0, r4, asr r1
   5ebe0:	andeq	r8, r3, ip, lsl #21
   5ebe4:	andeq	r6, r1, ip, asr #27
   5ebe8:	andeq	r8, r1, r8, lsl #5
   5ebec:	andeq	r5, r0, r0, ror #14
   5ebf0:	andeq	r0, r0, pc, ror r9
   5ebf4:	andeq	ip, r0, ip, lsl r0
   5ebf8:	muleq	r3, ip, r9
   5ebfc:	ldrdeq	r6, [r1], -ip
   5ec00:	andeq	r8, r1, r8, lsl #1
   5ec04:	andeq	r5, r0, r4, ror r6
   5ec08:	andeq	r0, r0, r3, ror #17
   5ec0c:	ldrdeq	r8, [r3], -ip
   5ec10:	andeq	r6, r1, ip, lsl ip
   5ec14:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   5ec18:			; <UNDEFINED> instruction: 0x000055b4
   5ec1c:	ldrdeq	r0, [r0], -r7
   5ec20:	andeq	r8, r3, r0, lsl #15
   5ec24:			; <UNDEFINED> instruction: 0x00016ab4
   5ec28:	andeq	r7, r1, ip, lsr #27
   5ec2c:	andeq	r5, r0, r0, asr r4
   5ec30:	andeq	r0, r0, r2, lsr r8
   5ec34:	andeq	r8, r3, r0, asr #13
   5ec38:	andeq	r6, r1, r0, lsl #20
   5ec3c:	andeq	r7, r1, ip, lsr sp
   5ec40:	andeq	r5, r0, r0, asr #7
   5ec44:	andeq	r0, r0, r8, lsr r8
   5ec48:			; <UNDEFINED> instruction: 0x000385b4
   5ec4c:	strdeq	r6, [r1], -r8
   5ec50:	andeq	r7, r1, ip, lsl #28
   5ec54:	andeq	r5, r0, r0, lsr #5
   5ec58:	muleq	r0, r6, r9
   5ec5c:	ldrdeq	r6, [r0], -ip
   5ec60:	andeq	r8, r3, r4, lsl r5
   5ec64:	andeq	r6, r1, r8, asr r8
   5ec68:	andeq	r7, r1, r0, lsr #23
   5ec6c:	andeq	r5, r0, r0, lsl #4
   5ec70:	ldrb	r3, [r8, #73]	; 0x49
   5ec74:	sub	r5, sl, #4
   5ec78:	str	r5, [sl, #-1140]	; 0xfffffb8c
   5ec7c:	cmp	r3, #0
   5ec80:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ec84:	ldrb	r3, [r4, #1]
   5ec88:	mov	r6, #0
   5ec8c:	mov	r0, r8
   5ec90:	cmp	r3, #7
   5ec94:	moveq	r3, #1
   5ec98:	strbeq	r3, [r8, #73]	; 0x49
   5ec9c:	ldr	r3, [r9, #24]
   5eca0:	ldr	r2, [r4, #4]
   5eca4:	ldr	r1, [r3]
   5eca8:	mov	r3, #512	; 0x200
   5ecac:	add	r1, r1, r2
   5ecb0:	str	r6, [sp]
   5ecb4:	mov	r2, r5
   5ecb8:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5ecbc:	mov	r3, #1
   5ecc0:	strb	r3, [r8, #72]	; 0x48
   5ecc4:	ldr	r3, [sp, #44]	; 0x2c
   5ecc8:	add	r1, r8, #24
   5eccc:	sub	r0, r3, #116	; 0x74
   5ecd0:	bl	4d3f4 <blkid_probe_get_size@plt+0x45edc>
   5ecd4:	subs	r1, r0, #0
   5ecd8:	blt	6036c <blkid_probe_get_size@plt+0x58e54>
   5ecdc:	mov	r1, #0
   5ece0:	cmp	fp, #0
   5ece4:	str	r1, [sl, #-1136]	; 0xfffffb90
   5ece8:	beq	6033c <blkid_probe_get_size@plt+0x58e24>
   5ecec:	ldr	r3, [pc, #-428]	; 5eb48 <blkid_probe_get_size@plt+0x57630>
   5ecf0:	add	r3, pc, r3
   5ecf4:	ldr	r3, [r3, #4]
   5ecf8:	cmp	r3, #6
   5ecfc:	bgt	5ff1c <blkid_probe_get_size@plt+0x58a04>
   5ed00:	mov	r0, r1
   5ed04:	ldr	lr, [sp, #40]	; 0x28
   5ed08:	ldr	r2, [r9, #24]
   5ed0c:	ldr	r3, [pc, #-456]	; 5eb4c <blkid_probe_get_size@plt+0x57634>
   5ed10:	ldrh	ip, [lr, #10]
   5ed14:	add	r3, pc, r3
   5ed18:	add	r3, r3, #1488	; 0x5d0
   5ed1c:	str	ip, [sp, #32]
   5ed20:	ldrh	ip, [lr, #8]
   5ed24:	ldr	r2, [r2]
   5ed28:	add	r3, r3, #12
   5ed2c:	add	r2, r2, ip
   5ed30:	ldr	ip, [r8, #24]
   5ed34:	str	r2, [sp, #28]
   5ed38:	ldr	r2, [pc, #-496]	; 5eb50 <blkid_probe_get_size@plt+0x57638>
   5ed3c:	str	r1, [sp, #8]
   5ed40:	add	r2, pc, r2
   5ed44:	str	r2, [sp, #20]
   5ed48:	ldr	r2, [pc, #-508]	; 5eb54 <blkid_probe_get_size@plt+0x5763c>
   5ed4c:	mov	r1, #0
   5ed50:	str	r0, [sp, #4]
   5ed54:	str	r3, [sp]
   5ed58:	str	ip, [sp, #24]
   5ed5c:	str	r1, [sp, #16]
   5ed60:	str	r1, [sp, #12]
   5ed64:	ldr	r3, [pc, #-532]	; 5eb58 <blkid_probe_get_size@plt+0x57640>
   5ed68:	add	r2, pc, r2
   5ed6c:	mov	r0, #7
   5ed70:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5ed74:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ed78:	cmp	fp, #0
   5ed7c:	ldr	r3, [r4, #8]
   5ed80:	beq	60570 <blkid_probe_get_size@plt+0x59058>
   5ed84:	str	r3, [fp, #120]	; 0x78
   5ed88:	add	r4, r4, #12
   5ed8c:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5ed90:	ldrb	r3, [r8, #69]	; 0x45
   5ed94:	cmp	r3, #0
   5ed98:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ed9c:	ldrb	r3, [r4, #1]
   5eda0:	cmp	r3, #7
   5eda4:	moveq	r3, #1
   5eda8:	strbeq	r3, [r8, #69]	; 0x45
   5edac:	ldr	r3, [r4, #8]
   5edb0:	adds	r3, r3, #0
   5edb4:	movne	r3, #1
   5edb8:	strb	r3, [r8, #68]	; 0x44
   5edbc:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5edc0:	cmp	fp, #0
   5edc4:	beq	60544 <blkid_probe_get_size@plt+0x5902c>
   5edc8:	ldrb	r3, [fp, #215]	; 0xd7
   5edcc:	add	r4, r4, #12
   5edd0:	orr	r3, r3, #4
   5edd4:	strb	r3, [fp, #215]	; 0xd7
   5edd8:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5eddc:	mov	r3, #2
   5ede0:	str	r3, [sp, #56]	; 0x38
   5ede4:	add	r4, r4, #12
   5ede8:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5edec:	sub	r5, sl, #4
   5edf0:	mov	r2, #16384	; 0x4000
   5edf4:	mov	r1, #0
   5edf8:	mov	r0, r5
   5edfc:	bl	6c84 <memset@plt>
   5ee00:	ldr	r3, [r9, #24]
   5ee04:	ldr	r0, [r4, #8]
   5ee08:	ldr	r7, [r3]
   5ee0c:	add	r0, r7, r0
   5ee10:	bl	74e8 <strdup@plt>
   5ee14:	subs	r6, r0, #0
   5ee18:	beq	60aec <blkid_probe_get_size@plt+0x595d4>
   5ee1c:	ldr	r1, [r4, #4]
   5ee20:	mov	r3, #0
   5ee24:	str	r3, [sp]
   5ee28:	add	r1, r7, r1
   5ee2c:	mov	r3, #16384	; 0x4000
   5ee30:	mov	r2, r5
   5ee34:	mov	r0, r8
   5ee38:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5ee3c:	ldrb	r3, [sl, #-4]
   5ee40:	cmp	r3, #0
   5ee44:	bne	5fb60 <blkid_probe_get_size@plt+0x58648>
   5ee48:	ldr	r2, [r9, #24]
   5ee4c:	ldr	r3, [r4, #4]
   5ee50:	ldr	r0, [r2]
   5ee54:	add	r0, r0, r3
   5ee58:	bl	74e8 <strdup@plt>
   5ee5c:	mov	r5, r0
   5ee60:	cmp	r5, #0
   5ee64:	beq	60a94 <blkid_probe_get_size@plt+0x5957c>
   5ee68:	ldrb	r3, [r4, #1]
   5ee6c:	sub	r3, r3, #6
   5ee70:	cmp	r3, #1
   5ee74:	bls	600cc <blkid_probe_get_size@plt+0x58bb4>
   5ee78:	mov	r2, #1
   5ee7c:	mov	r1, #0
   5ee80:	add	r0, r8, #32
   5ee84:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   5ee88:	cmp	r0, #0
   5ee8c:	blt	60a68 <blkid_probe_get_size@plt+0x59550>
   5ee90:	mov	r2, r5
   5ee94:	mov	r1, r6
   5ee98:	ldr	r0, [r8, #32]
   5ee9c:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   5eea0:	cmp	r0, #0
   5eea4:	blt	5fcac <blkid_probe_get_size@plt+0x58794>
   5eea8:	mov	r2, #0
   5eeac:	cmp	fp, #0
   5eeb0:	str	r2, [sl, #-1136]	; 0xfffffb90
   5eeb4:	beq	602f8 <blkid_probe_get_size@plt+0x58de0>
   5eeb8:	ldr	r3, [pc, #-868]	; 5eb5c <blkid_probe_get_size@plt+0x57644>
   5eebc:	add	r3, pc, r3
   5eec0:	ldr	r3, [r3, #4]
   5eec4:	cmp	r3, #6
   5eec8:	bgt	6087c <blkid_probe_get_size@plt+0x59364>
   5eecc:	mov	ip, r2
   5eed0:	ldr	lr, [sp, #40]	; 0x28
   5eed4:	ldr	r1, [r9, #24]
   5eed8:	ldr	r3, [pc, #-896]	; 5eb60 <blkid_probe_get_size@plt+0x57648>
   5eedc:	ldrh	r0, [lr, #10]
   5eee0:	add	r3, pc, r3
   5eee4:	add	r3, r3, #1488	; 0x5d0
   5eee8:	str	r0, [sp, #36]	; 0x24
   5eeec:	ldrh	r0, [lr, #8]
   5eef0:	ldr	r1, [r1]
   5eef4:	add	r3, r3, #12
   5eef8:	add	r1, r1, r0
   5eefc:	ldr	r0, [pc, #-928]	; 5eb64 <blkid_probe_get_size@plt+0x5764c>
   5ef00:	str	r2, [sp, #8]
   5ef04:	ldr	r2, [pc, #-932]	; 5eb68 <blkid_probe_get_size@plt+0x57650>
   5ef08:	add	r0, pc, r0
   5ef0c:	str	r1, [sp, #32]
   5ef10:	mov	r1, #0
   5ef14:	stm	sp, {r3, ip}
   5ef18:	str	r0, [sp, #20]
   5ef1c:	str	r5, [sp, #28]
   5ef20:	str	r6, [sp, #24]
   5ef24:	str	r1, [sp, #16]
   5ef28:	str	r1, [sp, #12]
   5ef2c:	ldr	r3, [pc, #-968]	; 5eb6c <blkid_probe_get_size@plt+0x57654>
   5ef30:	add	r2, pc, r2
   5ef34:	mov	r0, #7
   5ef38:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5ef3c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ef40:	ldr	r2, [r8, #12]
   5ef44:	b	5e010 <blkid_probe_get_size@plt+0x56af8>
   5ef48:	mov	r0, fp
   5ef4c:	bl	384bc <blkid_probe_get_size@plt+0x30fa4>
   5ef50:	cmp	r0, #0
   5ef54:	beq	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5ef58:	mov	r2, r0
   5ef5c:	b	5ef70 <blkid_probe_get_size@plt+0x57a58>
   5ef60:	mov	r0, fp
   5ef64:	bl	383f8 <blkid_probe_get_size@plt+0x30ee0>
   5ef68:	subs	r2, r0, #0
   5ef6c:	beq	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5ef70:	add	r2, r2, #5
   5ef74:	mov	r1, r4
   5ef78:	mov	r0, r9
   5ef7c:	bl	59268 <blkid_probe_get_size@plt+0x51d50>
   5ef80:	cmp	r0, #0
   5ef84:	bne	5ef60 <blkid_probe_get_size@plt+0x57a48>
   5ef88:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5ef8c:	ldr	r3, [sp, #44]	; 0x2c
   5ef90:	mov	r0, fp
   5ef94:	sub	r1, r3, #120	; 0x78
   5ef98:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5ef9c:	cmp	r0, #0
   5efa0:	blt	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5efa4:	b	5e59c <blkid_probe_get_size@plt+0x57084>
   5efa8:	ldr	r3, [sp, #44]	; 0x2c
   5efac:	mov	r0, fp
   5efb0:	sub	r1, r3, #120	; 0x78
   5efb4:	bl	36240 <blkid_probe_get_size@plt+0x2ed28>
   5efb8:	cmp	r0, #0
   5efbc:	blt	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5efc0:	b	5e59c <blkid_probe_get_size@plt+0x57084>
   5efc4:	ldr	r3, [r4, #8]
   5efc8:	cmp	r3, #0
   5efcc:	beq	5de04 <blkid_probe_get_size@plt+0x568ec>
   5efd0:	add	r3, r3, r3, lsl #1
   5efd4:	ldr	r4, [r9, #12]
   5efd8:	add	r4, r4, r3, lsl #2
   5efdc:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5efe0:	ldrb	r3, [r4, #1]
   5efe4:	sub	r3, r3, #6
   5efe8:	cmp	r3, #1
   5efec:	bls	60078 <blkid_probe_get_size@plt+0x58b60>
   5eff0:	mov	r2, #1
   5eff4:	mov	r1, #0
   5eff8:	add	r0, r8, #36	; 0x24
   5effc:	bl	4423c <blkid_probe_get_size@plt+0x3cd24>
   5f000:	cmp	r0, #0
   5f004:	blt	60a38 <blkid_probe_get_size@plt+0x59520>
   5f008:	ldr	r2, [r9, #24]
   5f00c:	ldr	r3, [r4, #4]
   5f010:	ldr	r0, [r2]
   5f014:	add	r0, r0, r3
   5f018:	bl	74e8 <strdup@plt>
   5f01c:	subs	r5, r0, #0
   5f020:	beq	60ac0 <blkid_probe_get_size@plt+0x595a8>
   5f024:	ldr	r2, [r4, #8]
   5f028:	mov	r1, r5
   5f02c:	ldr	r0, [r8, #36]	; 0x24
   5f030:	bl	43ea4 <blkid_probe_get_size@plt+0x3c98c>
   5f034:	cmp	r0, #0
   5f038:	blt	5dc98 <blkid_probe_get_size@plt+0x56780>
   5f03c:	mov	r0, #0
   5f040:	cmp	fp, #0
   5f044:	str	r0, [sl, #-1136]	; 0xfffffb90
   5f048:	beq	602e0 <blkid_probe_get_size@plt+0x58dc8>
   5f04c:	ldr	r3, [pc, #-1252]	; 5eb70 <blkid_probe_get_size@plt+0x57658>
   5f050:	add	r3, pc, r3
   5f054:	ldr	r3, [r3, #4]
   5f058:	cmp	r3, #6
   5f05c:	bgt	60820 <blkid_probe_get_size@plt+0x59308>
   5f060:	mov	r5, r0
   5f064:	ldr	r1, [sp, #40]	; 0x28
   5f068:	ldr	r2, [r9, #24]
   5f06c:	ldr	lr, [pc, #-1280]	; 5eb74 <blkid_probe_get_size@plt+0x5765c>
   5f070:	ldrh	r3, [r1, #10]
   5f074:	ldr	ip, [r2]
   5f078:	add	lr, pc, lr
   5f07c:	str	r3, [sp, #32]
   5f080:	ldrh	r2, [r1, #8]
   5f084:	mov	r1, #0
   5f088:	add	r2, ip, r2
   5f08c:	str	r2, [sp, #28]
   5f090:	ldr	r3, [r4, #4]
   5f094:	ldr	r2, [pc, #-1316]	; 5eb78 <blkid_probe_get_size@plt+0x57660>
   5f098:	add	r3, ip, r3
   5f09c:	str	r3, [sp, #24]
   5f0a0:	ldr	r3, [sp, #68]	; 0x44
   5f0a4:	str	r0, [sp, #8]
   5f0a8:	str	r3, [sp]
   5f0ac:	str	r5, [sp, #4]
   5f0b0:	str	lr, [sp, #20]
   5f0b4:	str	r1, [sp, #16]
   5f0b8:	str	r1, [sp, #12]
   5f0bc:	mov	r3, #2496	; 0x9c0
   5f0c0:	add	r2, pc, r2
   5f0c4:	mov	r0, #7
   5f0c8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f0cc:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f0d0:	ldr	r2, [r9, #24]
   5f0d4:	ldr	r3, [r4, #8]
   5f0d8:	mov	r7, #0
   5f0dc:	ldr	r1, [r2]
   5f0e0:	sub	r5, sl, #4
   5f0e4:	add	r1, r1, r3
   5f0e8:	mov	r2, r5
   5f0ec:	mov	r3, #1024	; 0x400
   5f0f0:	str	r7, [sp]
   5f0f4:	mov	r0, r8
   5f0f8:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5f0fc:	mov	r0, r5
   5f100:	bl	2a280 <blkid_probe_get_size@plt+0x22d68>
   5f104:	ldr	r2, [r9, #24]
   5f108:	ldr	r1, [sp, #44]	; 0x2c
   5f10c:	ldr	r3, [r4, #4]
   5f110:	sub	r6, r1, #4
   5f114:	ldr	r1, [r2]
   5f118:	mov	r0, r8
   5f11c:	add	r1, r1, r3
   5f120:	mov	r2, r6
   5f124:	str	r7, [sp]
   5f128:	mov	r3, #512	; 0x200
   5f12c:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5f130:	cmp	fp, r7
   5f134:	str	r7, [sl, #-1136]	; 0xfffffb90
   5f138:	beq	600e8 <blkid_probe_get_size@plt+0x58bd0>
   5f13c:	ldr	r3, [pc, #-1480]	; 5eb7c <blkid_probe_get_size@plt+0x57664>
   5f140:	add	r3, pc, r3
   5f144:	ldr	r3, [r3, #4]
   5f148:	cmp	r3, #6
   5f14c:	movle	r0, r7
   5f150:	movle	ip, r0
   5f154:	bgt	60684 <blkid_probe_get_size@plt+0x5916c>
   5f158:	ldr	lr, [sp, #40]	; 0x28
   5f15c:	ldr	r2, [r9, #24]
   5f160:	ldr	r3, [pc, #-1512]	; 5eb80 <blkid_probe_get_size@plt+0x57668>
   5f164:	ldrh	r1, [lr, #10]
   5f168:	add	r3, pc, r3
   5f16c:	add	r3, r3, #1488	; 0x5d0
   5f170:	str	r1, [sp, #36]	; 0x24
   5f174:	ldr	r1, [r2]
   5f178:	ldr	r2, [pc, #-1532]	; 5eb84 <blkid_probe_get_size@plt+0x5766c>
   5f17c:	ldrh	lr, [lr, #8]
   5f180:	add	r2, pc, r2
   5f184:	add	r3, r3, #12
   5f188:	str	r2, [sp, #20]
   5f18c:	ldr	r2, [pc, #-1548]	; 5eb88 <blkid_probe_get_size@plt+0x57670>
   5f190:	add	r1, r1, lr
   5f194:	mov	r7, #0
   5f198:	stm	sp, {r3, ip}
   5f19c:	add	r2, pc, r2
   5f1a0:	str	r1, [sp, #32]
   5f1a4:	str	r0, [sp, #8]
   5f1a8:	mov	r1, r7
   5f1ac:	ldr	r3, [pc, #-1576]	; 5eb8c <blkid_probe_get_size@plt+0x57674>
   5f1b0:	str	r6, [sp, #28]
   5f1b4:	str	r5, [sp, #24]
   5f1b8:	str	r7, [sp, #16]
   5f1bc:	str	r7, [sp, #12]
   5f1c0:	mov	r0, #7
   5f1c4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f1c8:	mov	r1, r6
   5f1cc:	mov	r0, r5
   5f1d0:	bl	2a03c <blkid_probe_get_size@plt+0x22b24>
   5f1d4:	subs	r2, r0, #0
   5f1d8:	bge	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f1dc:	ldr	r3, [pc, #-1620]	; 5eb90 <blkid_probe_get_size@plt+0x57678>
   5f1e0:	str	r7, [sl, #-1136]	; 0xfffffb90
   5f1e4:	add	r3, pc, r3
   5f1e8:	ldr	r3, [r3, #4]
   5f1ec:	cmp	r3, #2
   5f1f0:	bgt	60960 <blkid_probe_get_size@plt+0x59448>
   5f1f4:	mov	r1, r7
   5f1f8:	ldr	r3, [pc, #-1644]	; 5eb94 <blkid_probe_get_size@plt+0x5767c>
   5f1fc:	ldr	r0, [pc, #-1644]	; 5eb98 <blkid_probe_get_size@plt+0x57680>
   5f200:	add	r3, pc, r3
   5f204:	stmib	sp, {r1, r7}
   5f208:	add	r3, r3, #1488	; 0x5d0
   5f20c:	mov	r1, r2
   5f210:	ldr	r2, [pc, #-1660]	; 5eb9c <blkid_probe_get_size@plt+0x57684>
   5f214:	mov	ip, #0
   5f218:	add	r0, pc, r0
   5f21c:	add	r3, r3, #12
   5f220:	str	r3, [sp]
   5f224:	str	r0, [sp, #20]
   5f228:	str	r6, [sp, #28]
   5f22c:	str	r5, [sp, #24]
   5f230:	str	ip, [sp, #16]
   5f234:	str	ip, [sp, #12]
   5f238:	ldr	r3, [pc, #-1696]	; 5eba0 <blkid_probe_get_size@plt+0x57688>
   5f23c:	add	r2, pc, r2
   5f240:	mov	r0, #3
   5f244:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f248:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f24c:	mov	r3, #0
   5f250:	cmp	fp, #0
   5f254:	str	r3, [sl, #-1136]	; 0xfffffb90
   5f258:	beq	60178 <blkid_probe_get_size@plt+0x58c60>
   5f25c:	ldr	r2, [pc, #-1728]	; 5eba4 <blkid_probe_get_size@plt+0x5768c>
   5f260:	add	r2, pc, r2
   5f264:	ldr	r2, [r2, #4]
   5f268:	cmp	r2, #2
   5f26c:	bgt	60634 <blkid_probe_get_size@plt+0x5911c>
   5f270:	mov	r0, r3
   5f274:	ldr	r2, [pc, #-1748]	; 5eba8 <blkid_probe_get_size@plt+0x57690>
   5f278:	ldrb	ip, [r4]
   5f27c:	add	r2, pc, r2
   5f280:	stmib	sp, {r0, r3}
   5f284:	str	r2, [sp, #20]
   5f288:	ldr	r3, [sp, #64]	; 0x40
   5f28c:	ldr	r2, [pc, #-1768]	; 5ebac <blkid_probe_get_size@plt+0x57694>
   5f290:	mov	r1, #0
   5f294:	str	r3, [sp]
   5f298:	str	ip, [sp, #24]
   5f29c:	str	r1, [sp, #16]
   5f2a0:	str	r1, [sp, #12]
   5f2a4:	ldr	r3, [pc, #-1788]	; 5ebb0 <blkid_probe_get_size@plt+0x57698>
   5f2a8:	add	r2, pc, r2
   5f2ac:	mov	r0, #3
   5f2b0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f2b4:	b	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5f2b8:	ldr	r3, [sp, #60]	; 0x3c
   5f2bc:	cmp	r3, #0
   5f2c0:	bne	60068 <blkid_probe_get_size@plt+0x58b50>
   5f2c4:	ldrb	r3, [r4, #1]
   5f2c8:	str	r4, [sp, #40]	; 0x28
   5f2cc:	tst	r3, #1
   5f2d0:	bne	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5f2d4:	ldr	r3, [sp, #60]	; 0x3c
   5f2d8:	str	r3, [sp, #56]	; 0x38
   5f2dc:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f2e0:	ldrb	r3, [r8, #76]	; 0x4c
   5f2e4:	cmp	r3, #0
   5f2e8:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f2ec:	ldr	r2, [r9, #24]
   5f2f0:	ldrb	r1, [r4, #1]
   5f2f4:	ldr	r3, [r4, #4]
   5f2f8:	ldr	r6, [r2]
   5f2fc:	cmp	r1, #7
   5f300:	moveq	r2, #1
   5f304:	add	r6, r6, r3
   5f308:	sub	r5, sl, #4
   5f30c:	mov	r3, #0
   5f310:	strbeq	r2, [r8, #76]	; 0x4c
   5f314:	mov	r1, r6
   5f318:	str	r3, [sp]
   5f31c:	mov	r2, r5
   5f320:	mov	r3, #1024	; 0x400
   5f324:	mov	r0, r8
   5f328:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5f32c:	ldr	r3, [sp, #56]	; 0x38
   5f330:	cmp	r3, #0
   5f334:	beq	601d0 <blkid_probe_get_size@plt+0x58cb8>
   5f338:	cmp	r3, #2
   5f33c:	beq	601d0 <blkid_probe_get_size@plt+0x58cb8>
   5f340:	mov	r1, #0
   5f344:	mov	r0, fp
   5f348:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   5f34c:	cmp	r0, #0
   5f350:	blt	5f384 <blkid_probe_get_size@plt+0x57e6c>
   5f354:	ldr	r3, [sp, #44]	; 0x2c
   5f358:	mov	r0, fp
   5f35c:	sub	r1, r3, #120	; 0x78
   5f360:	bl	36160 <blkid_probe_get_size@plt+0x2ec48>
   5f364:	cmp	r0, #0
   5f368:	blt	5fe28 <blkid_probe_get_size@plt+0x58910>
   5f36c:	ldr	r1, [sl, #-1144]	; 0xfffffb88
   5f370:	mov	r0, r5
   5f374:	add	r1, r1, #5
   5f378:	bl	7314 <strcmp@plt>
   5f37c:	cmp	r0, #0
   5f380:	bne	5fe28 <blkid_probe_get_size@plt+0x58910>
   5f384:	mov	r1, r5
   5f388:	add	r0, r8, #12
   5f38c:	bl	3d4b4 <blkid_probe_get_size@plt+0x35f9c>
   5f390:	cmp	r0, #0
   5f394:	blt	5fdf0 <blkid_probe_get_size@plt+0x588d8>
   5f398:	mov	r1, #0
   5f39c:	cmp	fp, #0
   5f3a0:	str	r1, [sl, #-1136]	; 0xfffffb90
   5f3a4:	beq	605d8 <blkid_probe_get_size@plt+0x590c0>
   5f3a8:	ldr	r3, [pc, #-2044]	; 5ebb4 <blkid_probe_get_size@plt+0x5769c>
   5f3ac:	add	r3, pc, r3
   5f3b0:	ldr	r3, [r3, #4]
   5f3b4:	cmp	r3, #6
   5f3b8:	bgt	609dc <blkid_probe_get_size@plt+0x594c4>
   5f3bc:	mov	r0, r1
   5f3c0:	ldr	lr, [sp, #40]	; 0x28
   5f3c4:	ldr	r2, [r9, #24]
   5f3c8:	ldr	r3, [pc, #-2072]	; 5ebb8 <blkid_probe_get_size@plt+0x576a0>
   5f3cc:	ldrh	ip, [lr, #10]
   5f3d0:	add	r3, pc, r3
   5f3d4:	add	r3, r3, #1488	; 0x5d0
   5f3d8:	str	ip, [sp, #32]
   5f3dc:	ldrh	ip, [lr, #8]
   5f3e0:	ldr	r2, [r2]
   5f3e4:	add	r3, r3, #12
   5f3e8:	add	r2, r2, ip
   5f3ec:	ldr	ip, [r8, #12]
   5f3f0:	str	r2, [sp, #28]
   5f3f4:	ldr	r2, [pc, #-2112]	; 5ebbc <blkid_probe_get_size@plt+0x576a4>
   5f3f8:	str	r1, [sp, #8]
   5f3fc:	add	r2, pc, r2
   5f400:	str	r2, [sp, #20]
   5f404:	ldr	r2, [pc, #-2124]	; 5ebc0 <blkid_probe_get_size@plt+0x576a8>
   5f408:	mov	r1, #0
   5f40c:	str	r0, [sp, #4]
   5f410:	str	r3, [sp]
   5f414:	str	ip, [sp, #24]
   5f418:	str	r1, [sp, #16]
   5f41c:	str	r1, [sp, #12]
   5f420:	ldr	r3, [pc, #-2148]	; 5ebc4 <blkid_probe_get_size@plt+0x576ac>
   5f424:	add	r2, pc, r2
   5f428:	mov	r0, #7
   5f42c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f430:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f434:	ldr	r2, [r9, #24]
   5f438:	ldr	r3, [r4, #4]
   5f43c:	ldr	r0, [r4, #8]
   5f440:	ldr	r7, [r2]
   5f444:	add	r1, r7, r3
   5f448:	str	r1, [sl, #-1144]	; 0xfffffb88
   5f44c:	ldrb	r2, [r7, r3]
   5f450:	add	r7, r7, r0
   5f454:	ldrb	r3, [r4, #1]
   5f458:	cmp	r2, #0
   5f45c:	bne	5fb30 <blkid_probe_get_size@plt+0x58618>
   5f460:	cmp	r3, #4
   5f464:	beq	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f468:	mov	r1, r7
   5f46c:	mov	r0, fp
   5f470:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   5f474:	add	r4, r4, #12
   5f478:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5f47c:	ldrb	r1, [r8, #77]	; 0x4d
   5f480:	cmp	r1, #0
   5f484:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f488:	mov	r0, fp
   5f48c:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   5f490:	cmp	r0, #0
   5f494:	blt	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f498:	ldrb	r3, [r4, #1]
   5f49c:	cmp	r3, #7
   5f4a0:	moveq	r3, #1
   5f4a4:	strbeq	r3, [r8, #77]	; 0x4d
   5f4a8:	ldrbeq	r3, [r4, #1]
   5f4ac:	sub	r3, r3, #6
   5f4b0:	cmp	r3, #1
   5f4b4:	bls	60714 <blkid_probe_get_size@plt+0x591fc>
   5f4b8:	ldr	r3, [r9, #24]
   5f4bc:	ldr	r1, [sp, #44]	; 0x2c
   5f4c0:	ldr	r5, [sp, #56]	; 0x38
   5f4c4:	ldr	r2, [r4, #4]
   5f4c8:	sub	r6, r1, #4
   5f4cc:	ldr	r1, [r3]
   5f4d0:	subs	r3, r5, #1
   5f4d4:	movne	r3, #1
   5f4d8:	add	r1, r1, r2
   5f4dc:	str	r3, [sp]
   5f4e0:	mov	r2, r6
   5f4e4:	mov	r3, #1024	; 0x400
   5f4e8:	mov	r0, r8
   5f4ec:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5f4f0:	cmp	r5, #0
   5f4f4:	beq	60784 <blkid_probe_get_size@plt+0x5926c>
   5f4f8:	ldr	r3, [sp, #56]	; 0x38
   5f4fc:	cmp	r3, #2
   5f500:	beq	60990 <blkid_probe_get_size@plt+0x59478>
   5f504:	bl	7104 <__ctype_b_loc@plt>
   5f508:	mov	r3, r6
   5f50c:	ldr	r1, [r0]
   5f510:	str	r0, [sp, #76]	; 0x4c
   5f514:	ldrb	r6, [r3]
   5f518:	mov	r7, r3
   5f51c:	add	r3, r3, #1
   5f520:	lsl	r2, r6, #1
   5f524:	ldrh	r2, [r1, r2]
   5f528:	ands	r5, r2, #8192	; 0x2000
   5f52c:	bne	5f514 <blkid_probe_get_size@plt+0x57ffc>
   5f530:	mov	r1, #32
   5f534:	mov	r0, r7
   5f538:	bl	74c4 <strchr@plt>
   5f53c:	subs	r2, r0, #0
   5f540:	beq	5f694 <blkid_probe_get_size@plt+0x5817c>
   5f544:	ldr	r3, [pc, #-2436]	; 5ebc8 <blkid_probe_get_size@plt+0x576b0>
   5f548:	ldr	r1, [pc, #-2436]	; 5ebcc <blkid_probe_get_size@plt+0x576b4>
   5f54c:	add	r3, pc, r3
   5f550:	mov	r6, r5
   5f554:	str	r8, [sp, #92]	; 0x5c
   5f558:	add	r5, sp, #1232	; 0x4d0
   5f55c:	ldr	r8, [sp, #40]	; 0x28
   5f560:	add	r3, r3, #1488	; 0x5d0
   5f564:	str	r4, [sp, #88]	; 0x58
   5f568:	add	r5, r5, #12
   5f56c:	mov	r4, r2
   5f570:	add	r1, pc, r1
   5f574:	add	r3, r3, #12
   5f578:	str	r1, [sp, #84]	; 0x54
   5f57c:	str	r3, [sp, #80]	; 0x50
   5f580:	str	r9, [sp, #72]	; 0x48
   5f584:	cmp	fp, #0
   5f588:	strb	r6, [r4]
   5f58c:	str	r6, [sl, #-1136]	; 0xfffffb90
   5f590:	beq	601c4 <blkid_probe_get_size@plt+0x58cac>
   5f594:	ldr	r3, [sp, #84]	; 0x54
   5f598:	ldr	r3, [r3, #4]
   5f59c:	cmp	r3, #6
   5f5a0:	movle	r1, #0
   5f5a4:	movle	r0, r1
   5f5a8:	bgt	606e0 <blkid_probe_get_size@plt+0x591c8>
   5f5ac:	ldr	r3, [sp, #72]	; 0x48
   5f5b0:	ldrh	ip, [r8, #10]
   5f5b4:	ldr	r2, [r3, #24]
   5f5b8:	str	ip, [sp, #32]
   5f5bc:	ldrh	ip, [r8, #8]
   5f5c0:	ldr	r2, [r2]
   5f5c4:	ldr	r3, [pc, #-2556]	; 5ebd0 <blkid_probe_get_size@plt+0x576b8>
   5f5c8:	add	r2, r2, ip
   5f5cc:	str	r2, [sp, #28]
   5f5d0:	ldr	r2, [sp, #80]	; 0x50
   5f5d4:	add	r3, pc, r3
   5f5d8:	str	r2, [sp]
   5f5dc:	ldr	r2, [pc, #-2576]	; 5ebd4 <blkid_probe_get_size@plt+0x576bc>
   5f5e0:	stmib	sp, {r0, r1, r6}
   5f5e4:	add	r2, pc, r2
   5f5e8:	str	r3, [sp, #20]
   5f5ec:	mov	r1, #0
   5f5f0:	ldr	r3, [pc, #-2592]	; 5ebd8 <blkid_probe_get_size@plt+0x576c0>
   5f5f4:	str	r7, [sp, #24]
   5f5f8:	str	r6, [sp, #16]
   5f5fc:	mov	r0, #7
   5f600:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f604:	ldr	r2, [pc, #-2608]	; 5ebdc <blkid_probe_get_size@plt+0x576c4>
   5f608:	mov	r3, r7
   5f60c:	add	r2, pc, r2
   5f610:	mov	r1, #1024	; 0x400
   5f614:	str	r6, [sp]
   5f618:	mov	r0, r5
   5f61c:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   5f620:	mov	r1, r5
   5f624:	mov	r0, fp
   5f628:	bl	35a90 <blkid_probe_get_size@plt+0x2e578>
   5f62c:	ldrb	r3, [r4, #1]
   5f630:	ldr	r2, [sp, #76]	; 0x4c
   5f634:	ldr	r1, [r2]
   5f638:	lsl	r3, r3, #1
   5f63c:	ldrh	r3, [r1, r3]
   5f640:	tst	r3, #8192	; 0x2000
   5f644:	moveq	r9, r4
   5f648:	beq	5f668 <blkid_probe_get_size@plt+0x58150>
   5f64c:	add	r4, r4, #1
   5f650:	mov	r9, r4
   5f654:	ldrb	r3, [r4, #1]!
   5f658:	lsl	r3, r3, #1
   5f65c:	ldrh	r3, [r1, r3]
   5f660:	tst	r3, #8192	; 0x2000
   5f664:	bne	5f650 <blkid_probe_get_size@plt+0x58138>
   5f668:	add	r7, r9, #1
   5f66c:	mov	r0, r7
   5f670:	mov	r1, #32
   5f674:	bl	74c4 <strchr@plt>
   5f678:	subs	r4, r0, #0
   5f67c:	bne	5f584 <blkid_probe_get_size@plt+0x5806c>
   5f680:	mov	r2, r9
   5f684:	ldr	r4, [sp, #88]	; 0x58
   5f688:	ldrb	r6, [r2, #1]
   5f68c:	ldr	r9, [sp, #72]	; 0x48
   5f690:	ldr	r8, [sp, #92]	; 0x5c
   5f694:	cmp	r6, #0
   5f698:	beq	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f69c:	mov	r3, #0
   5f6a0:	cmp	fp, #0
   5f6a4:	str	r3, [sl, #-1136]	; 0xfffffb90
   5f6a8:	beq	60a2c <blkid_probe_get_size@plt+0x59514>
   5f6ac:	ldr	r2, [pc, #-2772]	; 5ebe0 <blkid_probe_get_size@plt+0x576c8>
   5f6b0:	add	r2, pc, r2
   5f6b4:	ldr	r2, [r2, #4]
   5f6b8:	cmp	r2, #6
   5f6bc:	bgt	60bf8 <blkid_probe_get_size@plt+0x596e0>
   5f6c0:	mov	r1, r3
   5f6c4:	ldr	lr, [sp, #40]	; 0x28
   5f6c8:	ldr	r2, [pc, #-2796]	; 5ebe4 <blkid_probe_get_size@plt+0x576cc>
   5f6cc:	ldr	r0, [r9, #24]
   5f6d0:	ldrh	ip, [lr, #10]
   5f6d4:	add	r2, pc, r2
   5f6d8:	add	r2, r2, #1488	; 0x5d0
   5f6dc:	str	ip, [sp, #32]
   5f6e0:	ldrh	lr, [lr, #8]
   5f6e4:	ldr	ip, [r0]
   5f6e8:	add	r2, r2, #12
   5f6ec:	ldr	r0, [pc, #-2828]	; 5ebe8 <blkid_probe_get_size@plt+0x576d0>
   5f6f0:	str	r2, [sp]
   5f6f4:	ldr	r2, [pc, #-2832]	; 5ebec <blkid_probe_get_size@plt+0x576d4>
   5f6f8:	mov	r6, #0
   5f6fc:	add	ip, ip, lr
   5f700:	add	r0, pc, r0
   5f704:	stmib	sp, {r1, r3}
   5f708:	str	ip, [sp, #28]
   5f70c:	str	r0, [sp, #20]
   5f710:	mov	r1, r6
   5f714:	str	r7, [sp, #24]
   5f718:	str	r6, [sp, #16]
   5f71c:	str	r6, [sp, #12]
   5f720:	ldr	r3, [pc, #-2872]	; 5ebf0 <blkid_probe_get_size@plt+0x576d8>
   5f724:	add	r2, pc, r2
   5f728:	mov	r0, #7
   5f72c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f730:	ldr	r2, [pc, #-2884]	; 5ebf4 <blkid_probe_get_size@plt+0x576dc>
   5f734:	sub	r5, sl, #4
   5f738:	str	r6, [sp]
   5f73c:	mov	r3, r7
   5f740:	mov	r0, r5
   5f744:	add	r2, pc, r2
   5f748:	mov	r1, #1024	; 0x400
   5f74c:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   5f750:	mov	r1, r5
   5f754:	mov	r0, fp
   5f758:	bl	35a90 <blkid_probe_get_size@plt+0x2e578>
   5f75c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f760:	ldrb	r3, [r8, #75]	; 0x4b
   5f764:	cmp	r3, #0
   5f768:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f76c:	ldrb	r3, [r4, #1]
   5f770:	mov	r2, #0
   5f774:	cmp	r3, #7
   5f778:	moveq	r3, #1
   5f77c:	strbeq	r3, [r8, #75]	; 0x4b
   5f780:	mov	r3, #1
   5f784:	strb	r3, [r8, #74]	; 0x4a
   5f788:	ldr	ip, [r4, #8]
   5f78c:	cmp	fp, #0
   5f790:	str	ip, [r8, #20]
   5f794:	str	r2, [sl, #-1136]	; 0xfffffb90
   5f798:	beq	60348 <blkid_probe_get_size@plt+0x58e30>
   5f79c:	ldr	r3, [pc, #-2988]	; 5ebf8 <blkid_probe_get_size@plt+0x576e0>
   5f7a0:	add	r3, pc, r3
   5f7a4:	ldr	r3, [r3, #4]
   5f7a8:	cmp	r3, #6
   5f7ac:	bgt	5ff44 <blkid_probe_get_size@plt+0x58a2c>
   5f7b0:	mov	lr, r2
   5f7b4:	ldr	r5, [sp, #40]	; 0x28
   5f7b8:	ldr	r1, [r9, #24]
   5f7bc:	ldr	r3, [pc, #-3016]	; 5ebfc <blkid_probe_get_size@plt+0x576e4>
   5f7c0:	ldrh	r0, [r5, #10]
   5f7c4:	add	r3, pc, r3
   5f7c8:	add	r3, r3, #1488	; 0x5d0
   5f7cc:	str	r0, [sp, #32]
   5f7d0:	ldrh	r0, [r5, #8]
   5f7d4:	ldr	r1, [r1]
   5f7d8:	add	r3, r3, #12
   5f7dc:	add	r1, r1, r0
   5f7e0:	ldr	r0, [pc, #-3048]	; 5ec00 <blkid_probe_get_size@plt+0x576e8>
   5f7e4:	str	r2, [sp, #8]
   5f7e8:	ldr	r2, [pc, #-3052]	; 5ec04 <blkid_probe_get_size@plt+0x576ec>
   5f7ec:	add	r0, pc, r0
   5f7f0:	str	r1, [sp, #28]
   5f7f4:	mov	r1, #0
   5f7f8:	stm	sp, {r3, lr}
   5f7fc:	str	r0, [sp, #20]
   5f800:	str	ip, [sp, #24]
   5f804:	str	r1, [sp, #16]
   5f808:	str	r1, [sp, #12]
   5f80c:	ldr	r3, [pc, #-3084]	; 5ec08 <blkid_probe_get_size@plt+0x576f0>
   5f810:	add	r2, pc, r2
   5f814:	mov	r0, #7
   5f818:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f81c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f820:	ldrb	r3, [r8, #71]	; 0x47
   5f824:	cmp	r3, #0
   5f828:	bne	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f82c:	ldrb	r3, [r4, #1]
   5f830:	mov	r2, #0
   5f834:	cmp	r3, #7
   5f838:	moveq	r3, #1
   5f83c:	strbeq	r3, [r8, #71]	; 0x47
   5f840:	mov	r3, #1
   5f844:	strb	r3, [r8, #70]	; 0x46
   5f848:	ldr	ip, [r4, #8]
   5f84c:	cmp	fp, #0
   5f850:	str	ip, [r8, #28]
   5f854:	str	r2, [sl, #-1136]	; 0xfffffb90
   5f858:	beq	60318 <blkid_probe_get_size@plt+0x58e00>
   5f85c:	ldr	r3, [pc, #-3160]	; 5ec0c <blkid_probe_get_size@plt+0x576f4>
   5f860:	add	r3, pc, r3
   5f864:	ldr	r3, [r3, #4]
   5f868:	cmp	r3, #6
   5f86c:	bgt	5fef0 <blkid_probe_get_size@plt+0x589d8>
   5f870:	mov	lr, r2
   5f874:	ldr	r5, [sp, #40]	; 0x28
   5f878:	ldr	r1, [r9, #24]
   5f87c:	ldr	r3, [pc, #-3188]	; 5ec10 <blkid_probe_get_size@plt+0x576f8>
   5f880:	ldrh	r0, [r5, #10]
   5f884:	add	r3, pc, r3
   5f888:	add	r3, r3, #1488	; 0x5d0
   5f88c:	str	r0, [sp, #32]
   5f890:	ldrh	r0, [r5, #8]
   5f894:	ldr	r1, [r1]
   5f898:	add	r3, r3, #12
   5f89c:	add	r1, r1, r0
   5f8a0:	ldr	r0, [pc, #-3220]	; 5ec14 <blkid_probe_get_size@plt+0x576fc>
   5f8a4:	str	r2, [sp, #8]
   5f8a8:	ldr	r2, [pc, #-3224]	; 5ec18 <blkid_probe_get_size@plt+0x57700>
   5f8ac:	add	r0, pc, r0
   5f8b0:	str	r1, [sp, #28]
   5f8b4:	mov	r1, #0
   5f8b8:	stm	sp, {r3, lr}
   5f8bc:	str	r0, [sp, #20]
   5f8c0:	str	ip, [sp, #24]
   5f8c4:	str	r1, [sp, #16]
   5f8c8:	str	r1, [sp, #12]
   5f8cc:	ldr	r3, [pc, #-3256]	; 5ec1c <blkid_probe_get_size@plt+0x57704>
   5f8d0:	add	r2, pc, r2
   5f8d4:	mov	r0, #7
   5f8d8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5f8dc:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5f8e0:	ldrb	r3, [r1, #1]!
   5f8e4:	cmp	r3, #0
   5f8e8:	bne	5dd48 <blkid_probe_get_size@plt+0x56830>
   5f8ec:	b	5ddec <blkid_probe_get_size@plt+0x568d4>
   5f8f0:	mov	r0, r3
   5f8f4:	bl	10a80 <blkid_probe_get_size@plt+0x9568>
   5f8f8:	add	r4, r4, #12
   5f8fc:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5f900:	mov	r1, #0
   5f904:	mov	r0, fp
   5f908:	bl	36438 <blkid_probe_get_size@plt+0x2ef20>
   5f90c:	cmp	r0, #0
   5f910:	movge	r3, #1
   5f914:	strge	r3, [sp, #60]	; 0x3c
   5f918:	bge	5db78 <blkid_probe_get_size@plt+0x56660>
   5f91c:	mov	r1, #0
   5f920:	mov	r0, fp
   5f924:	bl	37aec <blkid_probe_get_size@plt+0x305d4>
   5f928:	mvn	r3, r0
   5f92c:	lsr	r3, r3, #31
   5f930:	str	r3, [sp, #60]	; 0x3c
   5f934:	b	5db78 <blkid_probe_get_size@plt+0x56660>
   5f938:	ldr	r1, [sp, #72]	; 0x48
   5f93c:	ldr	r0, [r8, #4]
   5f940:	bl	3731c <blkid_probe_get_size@plt+0x2fe04>
   5f944:	cmp	r0, #0
   5f948:	blt	5fcfc <blkid_probe_get_size@plt+0x587e4>
   5f94c:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   5f950:	mov	r1, r6
   5f954:	mov	r0, r9
   5f958:	bl	59268 <blkid_probe_get_size@plt+0x51d50>
   5f95c:	cmp	r0, #0
   5f960:	bne	5fcfc <blkid_probe_get_size@plt+0x587e4>
   5f964:	add	r6, r6, #12
   5f968:	cmp	r5, r6
   5f96c:	bhi	5de50 <blkid_probe_get_size@plt+0x56938>
   5f970:	mov	r4, r5
   5f974:	b	5dbb0 <blkid_probe_get_size@plt+0x56698>
   5f978:	orr	r2, r1, r2
   5f97c:	str	r2, [r8, #60]	; 0x3c
   5f980:	ldr	r2, [r9, #24]
   5f984:	ldr	r3, [r4, #4]
   5f988:	mov	r7, #0
   5f98c:	ldr	r1, [r2]
   5f990:	sub	r5, sl, #4
   5f994:	add	r1, r1, r3
   5f998:	mov	r2, r5
   5f99c:	str	r7, [sp]
   5f9a0:	mov	r3, #1024	; 0x400
   5f9a4:	mov	r0, r8
   5f9a8:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5f9ac:	cmp	fp, r7
   5f9b0:	str	r7, [sl, #-1136]	; 0xfffffb90
   5f9b4:	beq	602ec <blkid_probe_get_size@plt+0x58dd4>
   5f9b8:	ldr	r3, [pc, #-3488]	; 5ec20 <blkid_probe_get_size@plt+0x57708>
   5f9bc:	add	r3, pc, r3
   5f9c0:	ldr	r3, [r3, #4]
   5f9c4:	cmp	r3, #6
   5f9c8:	bgt	60848 <blkid_probe_get_size@plt+0x59330>
   5f9cc:	mov	r2, r7
   5f9d0:	ldr	r0, [r4, #8]
   5f9d4:	str	r2, [sp, #72]	; 0x48
   5f9d8:	bl	59040 <blkid_probe_get_size@plt+0x51b28>
   5f9dc:	ldr	r2, [sp, #40]	; 0x28
   5f9e0:	ldr	ip, [r9, #24]
   5f9e4:	ldr	r3, [pc, #-3528]	; 5ec24 <blkid_probe_get_size@plt+0x5770c>
   5f9e8:	ldrh	r1, [r2, #10]
   5f9ec:	add	r3, pc, r3
   5f9f0:	add	r3, r3, #1488	; 0x5d0
   5f9f4:	str	r1, [sp, #32]
   5f9f8:	ldrh	r1, [r2, #8]
   5f9fc:	ldr	ip, [ip]
   5fa00:	ldr	r2, [sp, #72]	; 0x48
   5fa04:	add	ip, ip, r1
   5fa08:	ldr	r1, [pc, #-3560]	; 5ec28 <blkid_probe_get_size@plt+0x57710>
   5fa0c:	str	r2, [sp, #4]
   5fa10:	ldr	r2, [pc, #-3564]	; 5ec2c <blkid_probe_get_size@plt+0x57714>
   5fa14:	mov	r6, #0
   5fa18:	add	r1, pc, r1
   5fa1c:	add	r3, r3, #12
   5fa20:	str	ip, [sp, #28]
   5fa24:	str	r3, [sp]
   5fa28:	str	r1, [sp, #20]
   5fa2c:	ldr	r3, [pc, #-3588]	; 5ec30 <blkid_probe_get_size@plt+0x57718>
   5fa30:	mov	r1, r6
   5fa34:	add	r2, pc, r2
   5fa38:	str	r7, [sp, #8]
   5fa3c:	str	r6, [sp, #16]
   5fa40:	str	r6, [sp, #12]
   5fa44:	str	r0, [sp, #24]
   5fa48:	mov	r0, #7
   5fa4c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5fa50:	mov	r2, r5
   5fa54:	mov	r3, r6
   5fa58:	ldr	r1, [r4, #8]
   5fa5c:	mov	r0, fp
   5fa60:	bl	58e04 <blkid_probe_get_size@plt+0x518ec>
   5fa64:	subs	r5, r0, #0
   5fa68:	bge	5de04 <blkid_probe_get_size@plt+0x568ec>
   5fa6c:	cmp	fp, r6
   5fa70:	str	r6, [sl, #-1136]	; 0xfffffb90
   5fa74:	beq	605cc <blkid_probe_get_size@plt+0x590b4>
   5fa78:	ldr	r3, [pc, #-3660]	; 5ec34 <blkid_probe_get_size@plt+0x5771c>
   5fa7c:	add	r3, pc, r3
   5fa80:	ldr	r3, [r3, #4]
   5fa84:	cmp	r3, #6
   5fa88:	bgt	609b4 <blkid_probe_get_size@plt+0x5949c>
   5fa8c:	mov	r7, r6
   5fa90:	ldr	r0, [r4, #8]
   5fa94:	bl	59040 <blkid_probe_get_size@plt+0x51b28>
   5fa98:	ldr	r3, [pc, #-3688]	; 5ec38 <blkid_probe_get_size@plt+0x57720>
   5fa9c:	ldr	r2, [pc, #-3688]	; 5ec3c <blkid_probe_get_size@plt+0x57724>
   5faa0:	add	r3, pc, r3
   5faa4:	add	r2, pc, r2
   5faa8:	str	r2, [sp, #20]
   5faac:	add	r3, r3, #1488	; 0x5d0
   5fab0:	ldr	r2, [pc, #-3704]	; 5ec40 <blkid_probe_get_size@plt+0x57728>
   5fab4:	mov	ip, #0
   5fab8:	add	r3, r3, #12
   5fabc:	mov	r1, r5
   5fac0:	str	r3, [sp]
   5fac4:	add	r2, pc, r2
   5fac8:	ldr	r3, [pc, #-3724]	; 5ec44 <blkid_probe_get_size@plt+0x5772c>
   5facc:	str	r6, [sp, #8]
   5fad0:	str	r7, [sp, #4]
   5fad4:	str	ip, [sp, #16]
   5fad8:	str	ip, [sp, #12]
   5fadc:	str	r0, [sp, #24]
   5fae0:	mov	r0, #7
   5fae4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5fae8:	ldr	r2, [r4, #8]
   5faec:	ldr	r3, [r8, #64]	; 0x40
   5faf0:	mov	r1, #1
   5faf4:	orr	r3, r3, r1, lsl r2
   5faf8:	str	r3, [r8, #64]	; 0x40
   5fafc:	ldrb	r3, [r4, #1]
   5fb00:	cmp	r3, #2
   5fb04:	bne	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5fb08:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5fb0c:	cmp	r0, #0
   5fb10:	beq	605e4 <blkid_probe_get_size@plt+0x590cc>
   5fb14:	mov	r2, r0
   5fb18:	mov	r1, r5
   5fb1c:	mov	r0, fp
   5fb20:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   5fb24:	ldr	r0, [sl, #-1140]	; 0xfffffb8c
   5fb28:	bl	69f0 <free@plt>
   5fb2c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5fb30:	cmp	r3, #4
   5fb34:	beq	5fd84 <blkid_probe_get_size@plt+0x5886c>
   5fb38:	ldr	r3, [sp, #44]	; 0x2c
   5fb3c:	mov	r0, r8
   5fb40:	sub	r6, r3, #4
   5fb44:	mov	r3, #0
   5fb48:	str	r3, [sp]
   5fb4c:	mov	r2, r6
   5fb50:	mov	r3, #512	; 0x200
   5fb54:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5fb58:	mov	r2, r6
   5fb5c:	b	5f468 <blkid_probe_get_size@plt+0x57f50>
   5fb60:	mov	r0, r5
   5fb64:	bl	74e8 <strdup@plt>
   5fb68:	mov	r5, r0
   5fb6c:	b	5ee60 <blkid_probe_get_size@plt+0x57948>
   5fb70:	str	r3, [sl, #-1136]	; 0xfffffb90
   5fb74:	bl	732c <__errno_location@plt>
   5fb78:	cmp	fp, r7
   5fb7c:	ldr	r6, [r0]
   5fb80:	beq	5fe1c <blkid_probe_get_size@plt+0x58904>
   5fb84:	ldr	r3, [pc, #-3908]	; 5ec48 <blkid_probe_get_size@plt+0x57730>
   5fb88:	add	r3, pc, r3
   5fb8c:	ldr	r3, [r3, #4]
   5fb90:	cmp	r3, #2
   5fb94:	ldrle	r1, [sp, #72]	; 0x48
   5fb98:	movle	r2, r1
   5fb9c:	bgt	608d4 <blkid_probe_get_size@plt+0x593bc>
   5fba0:	ldr	r3, [pc, #-3932]	; 5ec4c <blkid_probe_get_size@plt+0x57734>
   5fba4:	ldr	r0, [pc, #-3932]	; 5ec50 <blkid_probe_get_size@plt+0x57738>
   5fba8:	add	r3, pc, r3
   5fbac:	add	r3, r3, #1488	; 0x5d0
   5fbb0:	add	r0, pc, r0
   5fbb4:	add	r3, r3, #12
   5fbb8:	str	r2, [sp, #8]
   5fbbc:	str	r3, [sp]
   5fbc0:	mov	r2, #0
   5fbc4:	mov	r3, r0
   5fbc8:	str	r2, [sp, #12]
   5fbcc:	strd	r2, [sp, #16]
   5fbd0:	ldr	r2, [pc, #-3972]	; 5ec54 <blkid_probe_get_size@plt+0x5773c>
   5fbd4:	str	r1, [sp, #4]
   5fbd8:	str	r5, [sp, #24]
   5fbdc:	mov	r1, r6
   5fbe0:	ldr	r3, [pc, #-3984]	; 5ec58 <blkid_probe_get_size@plt+0x57740>
   5fbe4:	add	r2, pc, r2
   5fbe8:	mov	r0, #3
   5fbec:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5fbf0:	b	5e778 <blkid_probe_get_size@plt+0x57260>
   5fbf4:	ldrb	r3, [r4, #1]
   5fbf8:	cmp	r3, #1
   5fbfc:	beq	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5fc00:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5fc04:	ldr	r2, [pc, #-4016]	; 5ec5c <blkid_probe_get_size@plt+0x57744>
   5fc08:	mov	r3, #0
   5fc0c:	str	r3, [sl, #-1144]	; 0xfffffb88
   5fc10:	add	r2, pc, r2
   5fc14:	b	5e010 <blkid_probe_get_size@plt+0x56af8>
   5fc18:	cmp	fp, r7
   5fc1c:	str	r7, [sl, #-1136]	; 0xfffffb90
   5fc20:	beq	5febc <blkid_probe_get_size@plt+0x589a4>
   5fc24:	ldr	r3, [pc, #-4044]	; 5ec60 <blkid_probe_get_size@plt+0x57748>
   5fc28:	add	r3, pc, r3
   5fc2c:	ldr	r3, [r3, #4]
   5fc30:	cmp	r3, #6
   5fc34:	movle	r3, r7
   5fc38:	movle	r1, r3
   5fc3c:	bgt	60938 <blkid_probe_get_size@plt+0x59420>
   5fc40:	ldr	r2, [pc, #-4068]	; 5ec64 <blkid_probe_get_size@plt+0x5774c>
   5fc44:	ldr	r0, [pc, #-4068]	; 5ec68 <blkid_probe_get_size@plt+0x57750>
   5fc48:	add	r2, pc, r2
   5fc4c:	add	r2, r2, #1488	; 0x5d0
   5fc50:	add	r2, r2, #12
   5fc54:	str	r2, [sp]
   5fc58:	ldr	r2, [pc, #-4084]	; 5ec6c <blkid_probe_get_size@plt+0x57754>
   5fc5c:	mov	ip, #0
   5fc60:	add	r0, pc, r0
   5fc64:	str	r3, [sp, #8]
   5fc68:	str	r1, [sp, #4]
   5fc6c:	str	r0, [sp, #20]
   5fc70:	str	r5, [sp, #24]
   5fc74:	mov	r1, r6
   5fc78:	str	ip, [sp, #16]
   5fc7c:	str	ip, [sp, #12]
   5fc80:	ldr	r3, [pc, #3992]	; 60c20 <blkid_probe_get_size@plt+0x59708>
   5fc84:	add	r2, pc, r2
   5fc88:	mov	r0, #7
   5fc8c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5fc90:	ldr	r0, [sl, #-1140]	; 0xfffffb8c
   5fc94:	b	5e110 <blkid_probe_get_size@plt+0x56bf8>
   5fc98:	mov	r0, r1
   5fc9c:	bl	69f0 <free@plt>
   5fca0:	mov	r0, r7
   5fca4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   5fca8:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5fcac:	ldr	r3, [pc, #3952]	; 60c24 <blkid_probe_get_size@plt+0x5970c>
   5fcb0:	ldr	r1, [pc, #3952]	; 60c28 <blkid_probe_get_size@plt+0x59710>
   5fcb4:	add	r3, pc, r3
   5fcb8:	add	r3, r3, #1488	; 0x5d0
   5fcbc:	ldr	r2, [pc, #3944]	; 60c2c <blkid_probe_get_size@plt+0x59714>
   5fcc0:	add	r3, r3, #12
   5fcc4:	add	r1, pc, r1
   5fcc8:	mov	r0, #1
   5fccc:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   5fcd0:	mov	r4, r0
   5fcd4:	mov	r0, r5
   5fcd8:	bl	69f0 <free@plt>
   5fcdc:	mov	r0, r6
   5fce0:	bl	69f0 <free@plt>
   5fce4:	b	5dcc8 <blkid_probe_get_size@plt+0x567b0>
   5fce8:	ldr	r1, [sp, #72]	; 0x48
   5fcec:	ldr	r0, [r8, #4]
   5fcf0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5fcf4:	cmp	r0, #0
   5fcf8:	bge	5f94c <blkid_probe_get_size@plt+0x58434>
   5fcfc:	mov	r1, r7
   5fd00:	ldr	r0, [r8, #4]
   5fd04:	bl	37880 <blkid_probe_get_size@plt+0x30368>
   5fd08:	cmp	r0, #0
   5fd0c:	bge	5de44 <blkid_probe_get_size@plt+0x5692c>
   5fd10:	mov	r3, #0
   5fd14:	str	r3, [r8, #4]
   5fd18:	b	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5fd1c:	ldr	r2, [r9, #24]
   5fd20:	ldr	r3, [r4, #4]
   5fd24:	ldr	r0, [r8, #4]
   5fd28:	ldr	r1, [r2]
   5fd2c:	add	r1, r1, r3
   5fd30:	bl	38330 <blkid_probe_get_size@plt+0x30e18>
   5fd34:	ldrb	r3, [r6, #1]
   5fd38:	cmp	r0, #0
   5fd3c:	beq	60360 <blkid_probe_get_size@plt+0x58e48>
   5fd40:	cmp	r3, #2
   5fd44:	bne	5f964 <blkid_probe_get_size@plt+0x5844c>
   5fd48:	b	5fcfc <blkid_probe_get_size@plt+0x587e4>
   5fd4c:	mov	r3, r6
   5fd50:	mov	r2, r8
   5fd54:	ldr	r1, [r8, #4]
   5fd58:	mov	r0, r9
   5fd5c:	bl	5943c <blkid_probe_get_size@plt+0x51f24>
   5fd60:	cmp	r0, #0
   5fd64:	beq	5f964 <blkid_probe_get_size@plt+0x5844c>
   5fd68:	b	5fcfc <blkid_probe_get_size@plt+0x587e4>
   5fd6c:	ldr	r1, [sp, #72]	; 0x48
   5fd70:	ldr	r0, [r8, #4]
   5fd74:	bl	36fe8 <blkid_probe_get_size@plt+0x2fad0>
   5fd78:	cmp	r0, #0
   5fd7c:	bge	5f94c <blkid_probe_get_size@plt+0x58434>
   5fd80:	b	5fcfc <blkid_probe_get_size@plt+0x587e4>
   5fd84:	ldr	r3, [sp, #44]	; 0x2c
   5fd88:	mov	r1, r7
   5fd8c:	sub	r2, r3, #112	; 0x70
   5fd90:	mov	r0, fp
   5fd94:	bl	389a8 <blkid_probe_get_size@plt+0x31490>
   5fd98:	ldr	r1, [sl, #-1144]	; 0xfffffb88
   5fd9c:	cmp	r0, #0
   5fda0:	blt	5fb38 <blkid_probe_get_size@plt+0x58620>
   5fda4:	sub	r5, sl, #4
   5fda8:	mov	r3, #0
   5fdac:	mov	r2, r5
   5fdb0:	str	r3, [sp]
   5fdb4:	mov	r0, r8
   5fdb8:	mov	r3, #512	; 0x200
   5fdbc:	bl	15490 <blkid_probe_get_size@plt+0xdf78>
   5fdc0:	ldr	r1, [sp, #44]	; 0x2c
   5fdc4:	mov	r3, #0
   5fdc8:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   5fdcc:	str	r3, [sp, #4]
   5fdd0:	ldr	r3, [pc, #3672]	; 60c30 <blkid_probe_get_size@plt+0x59718>
   5fdd4:	sub	r6, r1, #4
   5fdd8:	str	r5, [sp]
   5fddc:	mov	r0, r6
   5fde0:	add	r3, pc, r3
   5fde4:	mov	r1, #512	; 0x200
   5fde8:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   5fdec:	b	5fb58 <blkid_probe_get_size@plt+0x58640>
   5fdf0:	ldr	r3, [pc, #3644]	; 60c34 <blkid_probe_get_size@plt+0x5971c>
   5fdf4:	ldr	r1, [pc, #3644]	; 60c38 <blkid_probe_get_size@plt+0x59720>
   5fdf8:	add	r3, pc, r3
   5fdfc:	add	r3, r3, #1488	; 0x5d0
   5fe00:	ldr	r2, [pc, #3636]	; 60c3c <blkid_probe_get_size@plt+0x59724>
   5fe04:	add	r3, r3, #12
   5fe08:	add	r1, pc, r1
   5fe0c:	mov	r0, #1
   5fe10:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   5fe14:	mov	r4, r0
   5fe18:	b	5dcc8 <blkid_probe_get_size@plt+0x567b0>
   5fe1c:	mov	r2, fp
   5fe20:	mov	r1, fp
   5fe24:	b	5fba0 <blkid_probe_get_size@plt+0x58688>
   5fe28:	mov	r2, #0
   5fe2c:	cmp	fp, #0
   5fe30:	str	r2, [sl, #-1136]	; 0xfffffb90
   5fe34:	beq	606d4 <blkid_probe_get_size@plt+0x591bc>
   5fe38:	ldr	r3, [pc, #3584]	; 60c40 <blkid_probe_get_size@plt+0x59728>
   5fe3c:	add	r3, pc, r3
   5fe40:	ldr	r3, [r3, #4]
   5fe44:	cmp	r3, #2
   5fe48:	bgt	60b44 <blkid_probe_get_size@plt+0x5962c>
   5fe4c:	mov	ip, r2
   5fe50:	ldr	lr, [sp, #40]	; 0x28
   5fe54:	ldr	r1, [r9, #24]
   5fe58:	ldr	r3, [pc, #3556]	; 60c44 <blkid_probe_get_size@plt+0x5972c>
   5fe5c:	ldrh	r0, [lr, #10]
   5fe60:	add	r3, pc, r3
   5fe64:	add	r3, r3, #1488	; 0x5d0
   5fe68:	str	r0, [sp, #32]
   5fe6c:	ldrh	r0, [lr, #8]
   5fe70:	ldr	r1, [r1]
   5fe74:	add	r3, r3, #12
   5fe78:	add	r1, r1, r0
   5fe7c:	ldr	r0, [pc, #3524]	; 60c48 <blkid_probe_get_size@plt+0x59730>
   5fe80:	str	r2, [sp, #8]
   5fe84:	ldr	r2, [pc, #3520]	; 60c4c <blkid_probe_get_size@plt+0x59734>
   5fe88:	add	r0, pc, r0
   5fe8c:	str	r1, [sp, #28]
   5fe90:	mov	r1, #0
   5fe94:	stm	sp, {r3, ip}
   5fe98:	str	r0, [sp, #20]
   5fe9c:	str	r6, [sp, #24]
   5fea0:	str	r1, [sp, #16]
   5fea4:	str	r1, [sp, #12]
   5fea8:	ldr	r3, [pc, #3488]	; 60c50 <blkid_probe_get_size@plt+0x59738>
   5feac:	add	r2, pc, r2
   5feb0:	mov	r0, #3
   5feb4:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   5feb8:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   5febc:	mov	r3, fp
   5fec0:	mov	r1, fp
   5fec4:	b	5fc40 <blkid_probe_get_size@plt+0x58728>
   5fec8:	ldr	r3, [sp, #44]	; 0x2c
   5fecc:	mov	r0, fp
   5fed0:	sub	r1, r3, #112	; 0x70
   5fed4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5fed8:	ldr	r1, [sl, #-1136]	; 0xfffffb90
   5fedc:	cmp	r1, #0
   5fee0:	beq	5e9f0 <blkid_probe_get_size@plt+0x574d8>
   5fee4:	ldr	r0, [pc, #3432]	; 60c54 <blkid_probe_get_size@plt+0x5973c>
   5fee8:	add	r0, pc, r0
   5feec:	b	5e9f4 <blkid_probe_get_size@plt+0x574dc>
   5fef0:	ldr	r3, [sp, #44]	; 0x2c
   5fef4:	mov	r0, fp
   5fef8:	sub	r1, r3, #112	; 0x70
   5fefc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5ff00:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   5ff04:	ldr	lr, [pc, #3404]	; 60c58 <blkid_probe_get_size@plt+0x59740>
   5ff08:	cmp	r2, #0
   5ff0c:	ldr	ip, [r8, #28]
   5ff10:	add	lr, pc, lr
   5ff14:	bne	5f874 <blkid_probe_get_size@plt+0x5835c>
   5ff18:	b	5f870 <blkid_probe_get_size@plt+0x58358>
   5ff1c:	ldr	r3, [sp, #44]	; 0x2c
   5ff20:	mov	r0, fp
   5ff24:	sub	r1, r3, #112	; 0x70
   5ff28:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5ff2c:	ldr	r1, [sl, #-1136]	; 0xfffffb90
   5ff30:	cmp	r1, #0
   5ff34:	beq	5ed00 <blkid_probe_get_size@plt+0x577e8>
   5ff38:	ldr	r0, [pc, #3356]	; 60c5c <blkid_probe_get_size@plt+0x59744>
   5ff3c:	add	r0, pc, r0
   5ff40:	b	5ed04 <blkid_probe_get_size@plt+0x577ec>
   5ff44:	ldr	r3, [sp, #44]	; 0x2c
   5ff48:	mov	r0, fp
   5ff4c:	sub	r1, r3, #112	; 0x70
   5ff50:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5ff54:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   5ff58:	ldr	lr, [pc, #3328]	; 60c60 <blkid_probe_get_size@plt+0x59748>
   5ff5c:	cmp	r2, #0
   5ff60:	ldr	ip, [r8, #20]
   5ff64:	add	lr, pc, lr
   5ff68:	bne	5f7b4 <blkid_probe_get_size@plt+0x5829c>
   5ff6c:	b	5f7b0 <blkid_probe_get_size@plt+0x58298>
   5ff70:	ldr	r3, [sp, #44]	; 0x2c
   5ff74:	mov	r0, fp
   5ff78:	sub	r1, r3, #112	; 0x70
   5ff7c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   5ff80:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   5ff84:	ldr	lr, [pc, #3288]	; 60c64 <blkid_probe_get_size@plt+0x5974c>
   5ff88:	cmp	r2, #0
   5ff8c:	ldr	ip, [r8, #24]
   5ff90:	add	lr, pc, lr
   5ff94:	bne	5e7e4 <blkid_probe_get_size@plt+0x572cc>
   5ff98:	b	5e7e0 <blkid_probe_get_size@plt+0x572c8>
   5ff9c:	sub	r1, r5, #120	; 0x78
   5ffa0:	mov	r0, fp
   5ffa4:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   5ffa8:	cmp	r0, r7
   5ffac:	blt	5dff8 <blkid_probe_get_size@plt+0x56ae0>
   5ffb0:	sub	r5, sl, #4
   5ffb4:	mov	r2, r6
   5ffb8:	mov	r0, r5
   5ffbc:	mov	r1, #1024	; 0x400
   5ffc0:	bl	3ce04 <blkid_probe_get_size@plt+0x358ec>
   5ffc4:	ldr	r3, [pc, #3228]	; 60c68 <blkid_probe_get_size@plt+0x59750>
   5ffc8:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   5ffcc:	add	r3, pc, r3
   5ffd0:	stm	sp, {r5, r7}
   5ffd4:	mov	r1, #1024	; 0x400
   5ffd8:	mov	r0, r6
   5ffdc:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   5ffe0:	b	5ded0 <blkid_probe_get_size@plt+0x569b8>
   5ffe4:	ldr	r3, [sp, #44]	; 0x2c
   5ffe8:	mov	r0, fp
   5ffec:	sub	r1, r3, #120	; 0x78
   5fff0:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   5fff4:	cmp	r0, #0
   5fff8:	blt	5e670 <blkid_probe_get_size@plt+0x57158>
   5fffc:	mov	r3, #0
   60000:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   60004:	str	r3, [sp, #4]
   60008:	ldr	r3, [pc, #3164]	; 60c6c <blkid_probe_get_size@plt+0x59754>
   6000c:	str	r6, [sp]
   60010:	add	r3, pc, r3
   60014:	mov	r1, #1024	; 0x400
   60018:	mov	r0, r5
   6001c:	bl	3cd00 <blkid_probe_get_size@plt+0x357e8>
   60020:	b	5e670 <blkid_probe_get_size@plt+0x57158>
   60024:	cmp	fp, r6
   60028:	beq	608fc <blkid_probe_get_size@plt+0x593e4>
   6002c:	ldr	r3, [pc, #3132]	; 60c70 <blkid_probe_get_size@plt+0x59758>
   60030:	ldr	r1, [sp, #52]	; 0x34
   60034:	mov	r2, r6
   60038:	ldr	r0, [fp, #60]	; 0x3c
   6003c:	ldr	r1, [r1, r3]
   60040:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   60044:	ldrd	r0, [fp, #72]	; 0x48
   60048:	ldrb	ip, [fp, #212]	; 0xd4
   6004c:	str	r6, [fp, #60]	; 0x3c
   60050:	adds	r6, r0, #1
   60054:	adc	r7, r1, #0
   60058:	orr	r3, ip, #4
   6005c:	strd	r6, [fp, #72]	; 0x48
   60060:	strb	r3, [fp, #212]	; 0xd4
   60064:	b	5dd38 <blkid_probe_get_size@plt+0x56820>
   60068:	mov	r3, #0
   6006c:	str	r4, [sp, #40]	; 0x28
   60070:	str	r3, [sp, #56]	; 0x38
   60074:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   60078:	ldr	r3, [pc, #3056]	; 60c70 <blkid_probe_get_size@plt+0x59758>
   6007c:	ldr	r1, [sp, #52]	; 0x34
   60080:	mov	r2, #0
   60084:	ldr	r0, [r8, #36]	; 0x24
   60088:	ldr	r1, [r1, r3]
   6008c:	bl	44740 <blkid_probe_get_size@plt+0x3d228>
   60090:	b	5eff0 <blkid_probe_get_size@plt+0x57ad8>
   60094:	cmp	fp, #0
   60098:	beq	608a4 <blkid_probe_get_size@plt+0x5938c>
   6009c:	mov	r1, r5
   600a0:	ldr	r0, [fp, #60]	; 0x3c
   600a4:	bl	43a00 <blkid_probe_get_size@plt+0x3c4e8>
   600a8:	bl	69f0 <free@plt>
   600ac:	ldrd	r0, [fp, #72]	; 0x48
   600b0:	ldrb	ip, [fp, #212]	; 0xd4
   600b4:	adds	r6, r0, #1
   600b8:	adc	r7, r1, #0
   600bc:	orr	r3, ip, #4
   600c0:	strd	r6, [fp, #72]	; 0x48
   600c4:	strb	r3, [fp, #212]	; 0xd4
   600c8:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   600cc:	ldr	r3, [pc, #2972]	; 60c70 <blkid_probe_get_size@plt+0x59758>
   600d0:	ldr	r2, [sp, #52]	; 0x34
   600d4:	ldr	r0, [r8, #32]
   600d8:	ldr	r2, [r2, r3]
   600dc:	mov	r1, r2
   600e0:	bl	44740 <blkid_probe_get_size@plt+0x3d228>
   600e4:	b	5ee78 <blkid_probe_get_size@plt+0x57960>
   600e8:	ldr	r0, [sp, #40]	; 0x28
   600ec:	ldr	r2, [r9, #24]
   600f0:	ldr	r3, [pc, #2940]	; 60c74 <blkid_probe_get_size@plt+0x5975c>
   600f4:	ldrh	r1, [r0, #10]
   600f8:	add	r3, pc, r3
   600fc:	add	r3, r3, #1488	; 0x5d0
   60100:	str	r1, [sp, #36]	; 0x24
   60104:	ldr	r1, [r2]
   60108:	ldr	r2, [pc, #2920]	; 60c78 <blkid_probe_get_size@plt+0x59760>
   6010c:	ldrh	r0, [r0, #8]
   60110:	add	r2, pc, r2
   60114:	add	r3, r3, #12
   60118:	str	r2, [sp, #20]
   6011c:	ldr	r2, [pc, #2904]	; 60c7c <blkid_probe_get_size@plt+0x59764>
   60120:	add	r1, r1, r0
   60124:	add	r2, pc, r2
   60128:	str	r1, [sp, #32]
   6012c:	stm	sp, {r3, fp}
   60130:	mov	r1, fp
   60134:	ldr	r3, [pc, #2884]	; 60c80 <blkid_probe_get_size@plt+0x59768>
   60138:	str	r6, [sp, #28]
   6013c:	str	r5, [sp, #24]
   60140:	str	fp, [sp, #16]
   60144:	str	fp, [sp, #12]
   60148:	str	fp, [sp, #8]
   6014c:	mov	r0, #7
   60150:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   60154:	mov	r1, r6
   60158:	mov	r0, r5
   6015c:	bl	2a03c <blkid_probe_get_size@plt+0x22b24>
   60160:	subs	r2, r0, #0
   60164:	bge	5de04 <blkid_probe_get_size@plt+0x568ec>
   60168:	str	fp, [sl, #-1136]	; 0xfffffb90
   6016c:	mov	r7, fp
   60170:	mov	r1, fp
   60174:	b	5f1f8 <blkid_probe_get_size@plt+0x57ce0>
   60178:	mov	r3, fp
   6017c:	mov	r0, fp
   60180:	b	5f274 <blkid_probe_get_size@plt+0x57d5c>
   60184:	mov	r0, fp
   60188:	mov	ip, fp
   6018c:	b	5e6d0 <blkid_probe_get_size@plt+0x571b8>
   60190:	mov	r2, fp
   60194:	mov	ip, fp
   60198:	b	5e46c <blkid_probe_get_size@plt+0x56f54>
   6019c:	mov	r2, fp
   601a0:	mov	ip, fp
   601a4:	b	5e2b8 <blkid_probe_get_size@plt+0x56da0>
   601a8:	bl	732c <__errno_location@plt>
   601ac:	ldr	r5, [r0]
   601b0:	mov	r0, r7
   601b4:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   601b8:	cmp	r5, #0
   601bc:	bne	5e158 <blkid_probe_get_size@plt+0x56c40>
   601c0:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   601c4:	mov	r1, fp
   601c8:	mov	r0, fp
   601cc:	b	5f5ac <blkid_probe_get_size@plt+0x58094>
   601d0:	ldr	r1, [pc, #2732]	; 60c84 <blkid_probe_get_size@plt+0x5976c>
   601d4:	mov	r0, r5
   601d8:	add	r1, pc, r1
   601dc:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   601e0:	subs	r7, r0, #0
   601e4:	ble	5f340 <blkid_probe_get_size@plt+0x57e28>
   601e8:	mov	r2, #0
   601ec:	cmp	fp, #0
   601f0:	str	r2, [sl, #-1136]	; 0xfffffb90
   601f4:	beq	60870 <blkid_probe_get_size@plt+0x59358>
   601f8:	ldr	r3, [pc, #2696]	; 60c88 <blkid_probe_get_size@plt+0x59770>
   601fc:	add	r3, pc, r3
   60200:	ldr	r3, [r3, #4]
   60204:	cmp	r3, #6
   60208:	bgt	60ba8 <blkid_probe_get_size@plt+0x59690>
   6020c:	mov	ip, r2
   60210:	ldr	r3, [pc, #2676]	; 60c8c <blkid_probe_get_size@plt+0x59774>
   60214:	ldr	r0, [pc, #2676]	; 60c90 <blkid_probe_get_size@plt+0x59778>
   60218:	add	r3, pc, r3
   6021c:	add	r3, r3, #1488	; 0x5d0
   60220:	add	r3, r3, #12
   60224:	str	r2, [sp, #8]
   60228:	ldr	r2, [pc, #2660]	; 60c94 <blkid_probe_get_size@plt+0x5977c>
   6022c:	mov	r1, #0
   60230:	add	r0, pc, r0
   60234:	stm	sp, {r3, ip}
   60238:	str	r0, [sp, #20]
   6023c:	str	r6, [sp, #28]
   60240:	str	r7, [sp, #24]
   60244:	str	r1, [sp, #16]
   60248:	str	r1, [sp, #12]
   6024c:	ldr	r3, [pc, #2628]	; 60c98 <blkid_probe_get_size@plt+0x59780>
   60250:	add	r2, pc, r2
   60254:	mov	r0, #7
   60258:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   6025c:	b	5f340 <blkid_probe_get_size@plt+0x57e28>
   60260:	str	r7, [sl, #-1136]	; 0xfffffb90
   60264:	bl	732c <__errno_location@plt>
   60268:	cmp	fp, #0
   6026c:	ldr	r6, [r0]
   60270:	beq	60708 <blkid_probe_get_size@plt+0x591f0>
   60274:	ldr	r3, [pc, #2592]	; 60c9c <blkid_probe_get_size@plt+0x59784>
   60278:	add	r3, pc, r3
   6027c:	ldr	r3, [r3, #4]
   60280:	cmp	r3, #2
   60284:	bgt	60b6c <blkid_probe_get_size@plt+0x59654>
   60288:	mov	r2, r7
   6028c:	ldr	r3, [pc, #2572]	; 60ca0 <blkid_probe_get_size@plt+0x59788>
   60290:	ldr	r0, [pc, #2572]	; 60ca4 <blkid_probe_get_size@plt+0x5978c>
   60294:	add	r3, pc, r3
   60298:	str	r2, [sp, #4]
   6029c:	add	r3, r3, #1488	; 0x5d0
   602a0:	ldr	r2, [pc, #2560]	; 60ca8 <blkid_probe_get_size@plt+0x59790>
   602a4:	mov	ip, #0
   602a8:	add	r0, pc, r0
   602ac:	add	r3, r3, #12
   602b0:	str	r3, [sp]
   602b4:	str	r0, [sp, #20]
   602b8:	str	r5, [sp, #24]
   602bc:	str	r7, [sp, #8]
   602c0:	mov	r1, r6
   602c4:	str	ip, [sp, #16]
   602c8:	str	ip, [sp, #12]
   602cc:	ldr	r3, [pc, #2520]	; 60cac <blkid_probe_get_size@plt+0x59794>
   602d0:	add	r2, pc, r2
   602d4:	mov	r0, #3
   602d8:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   602dc:	b	5e778 <blkid_probe_get_size@plt+0x57260>
   602e0:	mov	r0, fp
   602e4:	mov	r5, fp
   602e8:	b	5f064 <blkid_probe_get_size@plt+0x57b4c>
   602ec:	mov	r7, fp
   602f0:	mov	r2, fp
   602f4:	b	5f9d0 <blkid_probe_get_size@plt+0x584b8>
   602f8:	mov	r2, fp
   602fc:	mov	ip, fp
   60300:	b	5eed0 <blkid_probe_get_size@plt+0x579b8>
   60304:	mov	r1, r5
   60308:	ldr	r2, [sl, #-1144]	; 0xfffffb88
   6030c:	mov	r0, fp
   60310:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   60314:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   60318:	mov	r2, fp
   6031c:	mov	lr, fp
   60320:	b	5f874 <blkid_probe_get_size@plt+0x5835c>
   60324:	mov	r2, fp
   60328:	mov	lr, fp
   6032c:	b	5e7e4 <blkid_probe_get_size@plt+0x572cc>
   60330:	mov	r1, fp
   60334:	mov	r0, fp
   60338:	b	5e9f4 <blkid_probe_get_size@plt+0x574dc>
   6033c:	mov	r1, fp
   60340:	mov	r0, fp
   60344:	b	5ed04 <blkid_probe_get_size@plt+0x577ec>
   60348:	mov	r2, fp
   6034c:	mov	lr, fp
   60350:	b	5f7b4 <blkid_probe_get_size@plt+0x5829c>
   60354:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   60358:	bl	69f0 <free@plt>
   6035c:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   60360:	cmp	r3, #1
   60364:	bne	5f964 <blkid_probe_get_size@plt+0x5844c>
   60368:	b	5fcfc <blkid_probe_get_size@plt+0x587e4>
   6036c:	ldr	r2, [pc, #2364]	; 60cb0 <blkid_probe_get_size@plt+0x59798>
   60370:	mov	r3, r5
   60374:	add	r2, pc, r2
   60378:	mov	r0, fp
   6037c:	bl	10c64 <blkid_probe_get_size@plt+0x974c>
   60380:	str	r6, [r8, #24]
   60384:	b	5ecdc <blkid_probe_get_size@plt+0x577c4>
   60388:	ldr	r1, [pc, #2340]	; 60cb4 <blkid_probe_get_size@plt+0x5979c>
   6038c:	mov	r0, r5
   60390:	add	r1, pc, r1
   60394:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   60398:	subs	r7, r0, #0
   6039c:	ble	5e574 <blkid_probe_get_size@plt+0x5705c>
   603a0:	mov	r3, #0
   603a4:	cmp	fp, #0
   603a8:	str	r3, [sl, #-1136]	; 0xfffffb90
   603ac:	beq	609a8 <blkid_probe_get_size@plt+0x59490>
   603b0:	ldr	r2, [pc, #2304]	; 60cb8 <blkid_probe_get_size@plt+0x597a0>
   603b4:	add	r2, pc, r2
   603b8:	ldr	r2, [r2, #4]
   603bc:	cmp	r2, #6
   603c0:	bgt	60e30 <blkid_probe_get_size@plt+0x59918>
   603c4:	mov	r0, r3
   603c8:	ldr	r2, [pc, #2284]	; 60cbc <blkid_probe_get_size@plt+0x597a4>
   603cc:	ldr	ip, [pc, #2284]	; 60cc0 <blkid_probe_get_size@plt+0x597a8>
   603d0:	add	r2, pc, r2
   603d4:	add	r2, r2, #1488	; 0x5d0
   603d8:	add	r2, r2, #12
   603dc:	str	r2, [sp]
   603e0:	ldr	r2, [pc, #2268]	; 60cc4 <blkid_probe_get_size@plt+0x597ac>
   603e4:	mov	r1, #0
   603e8:	add	ip, pc, ip
   603ec:	stmib	sp, {r0, r3}
   603f0:	str	r6, [sp, #28]
   603f4:	str	r7, [sp, #24]
   603f8:	str	ip, [sp, #20]
   603fc:	str	r1, [sp, #16]
   60400:	str	r1, [sp, #12]
   60404:	ldr	r3, [pc, #2236]	; 60cc8 <blkid_probe_get_size@plt+0x597b0>
   60408:	add	r2, pc, r2
   6040c:	mov	r0, #7
   60410:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   60414:	b	5e574 <blkid_probe_get_size@plt+0x5705c>
   60418:	ldr	r2, [pc, #2220]	; 60ccc <blkid_probe_get_size@plt+0x597b4>
   6041c:	mov	r3, r5
   60420:	add	r2, pc, r2
   60424:	mov	r0, fp
   60428:	bl	10c64 <blkid_probe_get_size@plt+0x974c>
   6042c:	str	r6, [r8, #28]
   60430:	b	5e9cc <blkid_probe_get_size@plt+0x574b4>
   60434:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   60438:	cmp	r3, #0
   6043c:	beq	60e84 <blkid_probe_get_size@plt+0x5996c>
   60440:	ldr	r2, [sp, #72]	; 0x48
   60444:	cmp	r2, r3
   60448:	beq	60e84 <blkid_probe_get_size@plt+0x5996c>
   6044c:	ldrb	r3, [r3]
   60450:	cmp	r3, #0
   60454:	bne	60e84 <blkid_probe_get_size@plt+0x5996c>
   60458:	cmp	r0, #4096	; 0x1000
   6045c:	mov	ip, r0
   60460:	bcs	60ba0 <blkid_probe_get_size@plt+0x59688>
   60464:	ldrb	r3, [r4, #1]
   60468:	cmp	r3, #7
   6046c:	moveq	r3, #1
   60470:	strbeq	r3, [r8, #75]	; 0x4b
   60474:	mov	r3, #1
   60478:	mov	r2, #0
   6047c:	cmp	fp, #0
   60480:	str	r0, [r8, #20]
   60484:	strb	r3, [r8, #74]	; 0x4a
   60488:	str	r2, [sl, #-1136]	; 0xfffffb90
   6048c:	beq	60814 <blkid_probe_get_size@plt+0x592fc>
   60490:	ldr	r3, [pc, #2104]	; 60cd0 <blkid_probe_get_size@plt+0x597b8>
   60494:	add	r3, pc, r3
   60498:	ldr	r3, [r3, #4]
   6049c:	cmp	r3, #6
   604a0:	bgt	60b1c <blkid_probe_get_size@plt+0x59604>
   604a4:	mov	lr, r2
   604a8:	ldr	r5, [sp, #40]	; 0x28
   604ac:	ldr	r1, [r9, #24]
   604b0:	ldr	r3, [pc, #2076]	; 60cd4 <blkid_probe_get_size@plt+0x597bc>
   604b4:	ldrh	r0, [r5, #10]
   604b8:	add	r3, pc, r3
   604bc:	add	r3, r3, #1488	; 0x5d0
   604c0:	str	r0, [sp, #32]
   604c4:	ldrh	r0, [r5, #8]
   604c8:	ldr	r1, [r1]
   604cc:	add	r3, r3, #12
   604d0:	add	r1, r1, r0
   604d4:	ldr	r0, [pc, #2044]	; 60cd8 <blkid_probe_get_size@plt+0x597c0>
   604d8:	str	r2, [sp, #8]
   604dc:	ldr	r2, [pc, #2040]	; 60cdc <blkid_probe_get_size@plt+0x597c4>
   604e0:	add	r0, pc, r0
   604e4:	str	r1, [sp, #28]
   604e8:	mov	r1, #0
   604ec:	stm	sp, {r3, lr}
   604f0:	str	r0, [sp, #20]
   604f4:	str	ip, [sp, #24]
   604f8:	str	r1, [sp, #16]
   604fc:	str	r1, [sp, #12]
   60500:	ldr	r3, [pc, #2008]	; 60ce0 <blkid_probe_get_size@plt+0x597c8>
   60504:	add	r2, pc, r2
   60508:	mov	r0, #7
   6050c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   60510:	b	5de04 <blkid_probe_get_size@plt+0x568ec>
   60514:	ldr	r2, [pc, #1992]	; 60ce4 <blkid_probe_get_size@plt+0x597cc>
   60518:	ldr	r1, [pc, #1992]	; 60ce8 <blkid_probe_get_size@plt+0x597d0>
   6051c:	add	r2, pc, r2
   60520:	add	r2, r2, #1520	; 0x5f0
   60524:	add	r2, r2, #8
   60528:	str	r2, [sp]
   6052c:	ldr	r2, [pc, #1976]	; 60cec <blkid_probe_get_size@plt+0x597d4>
   60530:	mov	r3, #88	; 0x58
   60534:	add	r2, pc, r2
   60538:	add	r1, pc, r1
   6053c:	mov	r0, #1
   60540:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   60544:	ldr	r3, [pc, #1956]	; 60cf0 <blkid_probe_get_size@plt+0x597d8>
   60548:	ldr	r2, [pc, #1956]	; 60cf4 <blkid_probe_get_size@plt+0x597dc>
   6054c:	add	r3, pc, r3
   60550:	ldr	r1, [pc, #1952]	; 60cf8 <blkid_probe_get_size@plt+0x597e0>
   60554:	add	r3, r3, #1584	; 0x630
   60558:	str	r3, [sp]
   6055c:	mov	r0, fp
   60560:	ldr	r3, [pc, #1940]	; 60cfc <blkid_probe_get_size@plt+0x597e4>
   60564:	add	r2, pc, r2
   60568:	add	r1, pc, r1
   6056c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   60570:	ldr	r3, [pc, #1928]	; 60d00 <blkid_probe_get_size@plt+0x597e8>
   60574:	ldr	r2, [pc, #1928]	; 60d04 <blkid_probe_get_size@plt+0x597ec>
   60578:	add	r3, pc, r3
   6057c:	add	r3, r3, #1600	; 0x640
   60580:	ldr	r1, [pc, #1920]	; 60d08 <blkid_probe_get_size@plt+0x597f0>
   60584:	add	r3, r3, #8
   60588:	str	r3, [sp]
   6058c:	mov	r0, fp
   60590:	mov	r3, #51	; 0x33
   60594:	add	r2, pc, r2
   60598:	add	r1, pc, r1
   6059c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   605a0:	ldr	r2, [pc, #1892]	; 60d0c <blkid_probe_get_size@plt+0x597f4>
   605a4:	ldr	r1, [pc, #1892]	; 60d10 <blkid_probe_get_size@plt+0x597f8>
   605a8:	add	r2, pc, r2
   605ac:	add	r2, r2, #1552	; 0x610
   605b0:	str	r2, [sp]
   605b4:	ldr	r2, [pc, #1880]	; 60d14 <blkid_probe_get_size@plt+0x597fc>
   605b8:	mov	r3, #676	; 0x2a4
   605bc:	add	r2, pc, r2
   605c0:	add	r1, pc, r1
   605c4:	mov	r0, #1
   605c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   605cc:	mov	r6, fp
   605d0:	mov	r7, fp
   605d4:	b	5fa90 <blkid_probe_get_size@plt+0x58578>
   605d8:	mov	r1, fp
   605dc:	mov	r0, fp
   605e0:	b	5f3c0 <blkid_probe_get_size@plt+0x57ea8>
   605e4:	ldr	r2, [pc, #1836]	; 60d18 <blkid_probe_get_size@plt+0x59800>
   605e8:	mov	r1, r5
   605ec:	add	r2, pc, r2
   605f0:	mov	r0, fp
   605f4:	bl	27e10 <blkid_probe_get_size@plt+0x208f8>
   605f8:	ldr	r0, [sl, #-1140]	; 0xfffffb8c
   605fc:	b	5fb28 <blkid_probe_get_size@plt+0x58610>
   60600:	mov	r5, fp
   60604:	mov	r6, fp
   60608:	b	5e1d8 <blkid_probe_get_size@plt+0x56cc0>
   6060c:	ldr	r3, [sp, #44]	; 0x2c
   60610:	mov	r0, fp
   60614:	sub	r1, r3, #112	; 0x70
   60618:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   6061c:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60620:	cmp	r2, r5
   60624:	moveq	ip, r2
   60628:	ldrne	ip, [pc, #1772]	; 60d1c <blkid_probe_get_size@plt+0x59804>
   6062c:	addne	ip, pc, ip
   60630:	b	5e2b8 <blkid_probe_get_size@plt+0x56da0>
   60634:	ldr	r3, [sp, #44]	; 0x2c
   60638:	mov	r0, fp
   6063c:	sub	r1, r3, #112	; 0x70
   60640:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60644:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   60648:	cmp	r3, #0
   6064c:	beq	5f270 <blkid_probe_get_size@plt+0x57d58>
   60650:	ldr	r0, [pc, #1736]	; 60d20 <blkid_probe_get_size@plt+0x59808>
   60654:	add	r0, pc, r0
   60658:	b	5f274 <blkid_probe_get_size@plt+0x57d5c>
   6065c:	ldr	r3, [sp, #44]	; 0x2c
   60660:	mov	r0, fp
   60664:	sub	r1, r3, #112	; 0x70
   60668:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   6066c:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   60670:	cmp	r0, r7
   60674:	moveq	ip, r0
   60678:	ldrne	ip, [pc, #1700]	; 60d24 <blkid_probe_get_size@plt+0x5980c>
   6067c:	addne	ip, pc, ip
   60680:	b	5e6d0 <blkid_probe_get_size@plt+0x571b8>
   60684:	ldr	r3, [sp, #44]	; 0x2c
   60688:	mov	r0, fp
   6068c:	sub	r1, r3, #112	; 0x70
   60690:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60694:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   60698:	cmp	r0, r7
   6069c:	moveq	ip, r0
   606a0:	ldrne	ip, [pc, #1664]	; 60d28 <blkid_probe_get_size@plt+0x59810>
   606a4:	addne	ip, pc, ip
   606a8:	b	5f158 <blkid_probe_get_size@plt+0x57c40>
   606ac:	ldr	r3, [sp, #44]	; 0x2c
   606b0:	mov	r0, fp
   606b4:	sub	r1, r3, #112	; 0x70
   606b8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   606bc:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   606c0:	cmp	r2, r5
   606c4:	moveq	ip, r2
   606c8:	ldrne	ip, [pc, #1628]	; 60d2c <blkid_probe_get_size@plt+0x59814>
   606cc:	addne	ip, pc, ip
   606d0:	b	5e46c <blkid_probe_get_size@plt+0x56f54>
   606d4:	mov	r2, fp
   606d8:	mov	ip, fp
   606dc:	b	5fe50 <blkid_probe_get_size@plt+0x58938>
   606e0:	ldr	r3, [sp, #44]	; 0x2c
   606e4:	mov	r0, fp
   606e8:	sub	r1, r3, #112	; 0x70
   606ec:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   606f0:	ldr	r1, [sl, #-1136]	; 0xfffffb90
   606f4:	cmp	r1, #0
   606f8:	moveq	r0, r1
   606fc:	ldrne	r0, [pc, #1580]	; 60d30 <blkid_probe_get_size@plt+0x59818>
   60700:	addne	r0, pc, r0
   60704:	b	5f5ac <blkid_probe_get_size@plt+0x58094>
   60708:	mov	r7, fp
   6070c:	mov	r2, fp
   60710:	b	6028c <blkid_probe_get_size@plt+0x58d74>
   60714:	cmp	fp, #0
   60718:	beq	60e00 <blkid_probe_get_size@plt+0x598e8>
   6071c:	ldr	r3, [pc, #1356]	; 60c70 <blkid_probe_get_size@plt+0x59758>
   60720:	ldr	r1, [sp, #52]	; 0x34
   60724:	mov	r2, #0
   60728:	ldr	r0, [fp, #88]	; 0x58
   6072c:	ldr	r1, [r1, r3]
   60730:	bl	44920 <blkid_probe_get_size@plt+0x3d408>
   60734:	ldrd	r0, [fp, #104]	; 0x68
   60738:	ldrb	ip, [fp, #212]	; 0xd4
   6073c:	mov	lr, #0
   60740:	adds	r6, r0, #1
   60744:	adc	r7, r1, #0
   60748:	orr	r3, ip, #8
   6074c:	strd	r6, [fp, #104]	; 0x68
   60750:	strb	r3, [fp, #212]	; 0xd4
   60754:	str	lr, [fp, #88]	; 0x58
   60758:	b	5f4b8 <blkid_probe_get_size@plt+0x57fa0>
   6075c:	ldr	r3, [sp, #44]	; 0x2c
   60760:	mov	r0, fp
   60764:	sub	r1, r3, #112	; 0x70
   60768:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   6076c:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60770:	cmp	r2, #0
   60774:	beq	5dda0 <blkid_probe_get_size@plt+0x56888>
   60778:	ldr	ip, [pc, #1460]	; 60d34 <blkid_probe_get_size@plt+0x5981c>
   6077c:	add	ip, pc, ip
   60780:	b	5dda4 <blkid_probe_get_size@plt+0x5688c>
   60784:	ldr	r1, [pc, #1452]	; 60d38 <blkid_probe_get_size@plt+0x59820>
   60788:	mov	r0, r6
   6078c:	add	r1, pc, r1
   60790:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   60794:	mov	r5, r0
   60798:	cmp	r5, #0
   6079c:	ble	5f504 <blkid_probe_get_size@plt+0x57fec>
   607a0:	mov	r3, #0
   607a4:	cmp	fp, #0
   607a8:	str	r3, [sl, #-1136]	; 0xfffffb90
   607ac:	beq	60b94 <blkid_probe_get_size@plt+0x5967c>
   607b0:	ldr	r2, [pc, #1412]	; 60d3c <blkid_probe_get_size@plt+0x59824>
   607b4:	add	r2, pc, r2
   607b8:	ldr	r2, [r2, #4]
   607bc:	cmp	r2, #6
   607c0:	bgt	60e5c <blkid_probe_get_size@plt+0x59944>
   607c4:	mov	r0, r3
   607c8:	ldr	r2, [pc, #1392]	; 60d40 <blkid_probe_get_size@plt+0x59828>
   607cc:	ldr	ip, [pc, #1392]	; 60d44 <blkid_probe_get_size@plt+0x5982c>
   607d0:	add	r2, pc, r2
   607d4:	add	r2, r2, #1488	; 0x5d0
   607d8:	add	r2, r2, #12
   607dc:	str	r2, [sp]
   607e0:	ldr	r2, [pc, #1376]	; 60d48 <blkid_probe_get_size@plt+0x59830>
   607e4:	mov	r1, #0
   607e8:	add	ip, pc, ip
   607ec:	stmib	sp, {r0, r3}
   607f0:	str	r5, [sp, #24]
   607f4:	str	ip, [sp, #20]
   607f8:	str	r1, [sp, #16]
   607fc:	str	r1, [sp, #12]
   60800:	ldr	r3, [pc, #1348]	; 60d4c <blkid_probe_get_size@plt+0x59834>
   60804:	add	r2, pc, r2
   60808:	mov	r0, #7
   6080c:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   60810:	b	5f504 <blkid_probe_get_size@plt+0x57fec>
   60814:	mov	r2, fp
   60818:	mov	lr, fp
   6081c:	b	604a8 <blkid_probe_get_size@plt+0x58f90>
   60820:	ldr	r3, [sp, #44]	; 0x2c
   60824:	mov	r0, fp
   60828:	sub	r1, r3, #112	; 0x70
   6082c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60830:	ldr	r0, [sl, #-1136]	; 0xfffffb90
   60834:	cmp	r0, #0
   60838:	beq	5f060 <blkid_probe_get_size@plt+0x57b48>
   6083c:	ldr	r5, [pc, #1292]	; 60d50 <blkid_probe_get_size@plt+0x59838>
   60840:	add	r5, pc, r5
   60844:	b	5f064 <blkid_probe_get_size@plt+0x57b4c>
   60848:	ldr	r3, [sp, #44]	; 0x2c
   6084c:	mov	r0, fp
   60850:	sub	r1, r3, #112	; 0x70
   60854:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60858:	ldr	r7, [sl, #-1136]	; 0xfffffb90
   6085c:	cmp	r7, #0
   60860:	beq	5f9cc <blkid_probe_get_size@plt+0x584b4>
   60864:	ldr	r2, [pc, #1256]	; 60d54 <blkid_probe_get_size@plt+0x5983c>
   60868:	add	r2, pc, r2
   6086c:	b	5f9d0 <blkid_probe_get_size@plt+0x584b8>
   60870:	mov	r2, fp
   60874:	mov	ip, fp
   60878:	b	60210 <blkid_probe_get_size@plt+0x58cf8>
   6087c:	ldr	r3, [sp, #44]	; 0x2c
   60880:	mov	r0, fp
   60884:	sub	r1, r3, #112	; 0x70
   60888:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   6088c:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60890:	cmp	r2, #0
   60894:	beq	5eecc <blkid_probe_get_size@plt+0x579b4>
   60898:	ldr	ip, [pc, #1208]	; 60d58 <blkid_probe_get_size@plt+0x59840>
   6089c:	add	ip, pc, ip
   608a0:	b	5eed0 <blkid_probe_get_size@plt+0x579b8>
   608a4:	ldr	r3, [pc, #1200]	; 60d5c <blkid_probe_get_size@plt+0x59844>
   608a8:	ldr	r2, [pc, #1200]	; 60d60 <blkid_probe_get_size@plt+0x59848>
   608ac:	add	r3, pc, r3
   608b0:	add	r3, r3, #1648	; 0x670
   608b4:	ldr	r1, [pc, #1192]	; 60d64 <blkid_probe_get_size@plt+0x5984c>
   608b8:	add	r3, r3, #8
   608bc:	str	r3, [sp]
   608c0:	mov	r0, fp
   608c4:	ldr	r3, [pc, #1180]	; 60d68 <blkid_probe_get_size@plt+0x59850>
   608c8:	add	r2, pc, r2
   608cc:	add	r1, pc, r1
   608d0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   608d4:	ldr	r3, [sp, #44]	; 0x2c
   608d8:	mov	r0, fp
   608dc:	sub	r1, r3, #112	; 0x70
   608e0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   608e4:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   608e8:	cmp	r2, r7
   608ec:	moveq	r1, r2
   608f0:	ldrne	r1, [pc, #1140]	; 60d6c <blkid_probe_get_size@plt+0x59854>
   608f4:	addne	r1, pc, r1
   608f8:	b	5fba0 <blkid_probe_get_size@plt+0x58688>
   608fc:	ldr	r3, [pc, #1132]	; 60d70 <blkid_probe_get_size@plt+0x59858>
   60900:	ldr	r2, [pc, #1132]	; 60d74 <blkid_probe_get_size@plt+0x5985c>
   60904:	add	r3, pc, r3
   60908:	add	r3, r3, #1632	; 0x660
   6090c:	ldr	r1, [pc, #1124]	; 60d78 <blkid_probe_get_size@plt+0x59860>
   60910:	add	r3, r3, #4
   60914:	str	r3, [sp]
   60918:	mov	r0, fp
   6091c:	ldr	r3, [pc, #1112]	; 60d7c <blkid_probe_get_size@plt+0x59864>
   60920:	add	r2, pc, r2
   60924:	add	r1, pc, r1
   60928:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   6092c:	mov	r2, fp
   60930:	mov	r1, fp
   60934:	b	5e908 <blkid_probe_get_size@plt+0x573f0>
   60938:	ldr	r3, [sp, #44]	; 0x2c
   6093c:	mov	r0, fp
   60940:	sub	r1, r3, #112	; 0x70
   60944:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60948:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   6094c:	cmp	r3, r7
   60950:	moveq	r1, r3
   60954:	ldrne	r1, [pc, #1060]	; 60d80 <blkid_probe_get_size@plt+0x59868>
   60958:	addne	r1, pc, r1
   6095c:	b	5fc40 <blkid_probe_get_size@plt+0x58728>
   60960:	ldr	r3, [sp, #44]	; 0x2c
   60964:	mov	r0, fp
   60968:	sub	r1, r3, #112	; 0x70
   6096c:	str	r2, [sp, #72]	; 0x48
   60970:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60974:	ldr	r7, [sl, #-1136]	; 0xfffffb90
   60978:	ldr	r2, [sp, #72]	; 0x48
   6097c:	cmp	r7, #0
   60980:	beq	5f1f4 <blkid_probe_get_size@plt+0x57cdc>
   60984:	ldr	r1, [pc, #1016]	; 60d84 <blkid_probe_get_size@plt+0x5986c>
   60988:	add	r1, pc, r1
   6098c:	b	5f1f8 <blkid_probe_get_size@plt+0x57ce0>
   60990:	ldr	r1, [pc, #1008]	; 60d88 <blkid_probe_get_size@plt+0x59870>
   60994:	mov	r0, r6
   60998:	add	r1, pc, r1
   6099c:	bl	3c280 <blkid_probe_get_size@plt+0x34d68>
   609a0:	mov	r5, r0
   609a4:	b	60798 <blkid_probe_get_size@plt+0x59280>
   609a8:	mov	r3, fp
   609ac:	mov	r0, fp
   609b0:	b	603c8 <blkid_probe_get_size@plt+0x58eb0>
   609b4:	ldr	r3, [sp, #44]	; 0x2c
   609b8:	mov	r0, fp
   609bc:	sub	r1, r3, #112	; 0x70
   609c0:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   609c4:	ldr	r6, [sl, #-1136]	; 0xfffffb90
   609c8:	cmp	r6, #0
   609cc:	beq	5fa8c <blkid_probe_get_size@plt+0x58574>
   609d0:	ldr	r7, [pc, #948]	; 60d8c <blkid_probe_get_size@plt+0x59874>
   609d4:	add	r7, pc, r7
   609d8:	b	5fa90 <blkid_probe_get_size@plt+0x58578>
   609dc:	ldr	r3, [sp, #44]	; 0x2c
   609e0:	mov	r0, fp
   609e4:	sub	r1, r3, #112	; 0x70
   609e8:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   609ec:	ldr	r1, [sl, #-1136]	; 0xfffffb90
   609f0:	cmp	r1, #0
   609f4:	beq	5f3bc <blkid_probe_get_size@plt+0x57ea4>
   609f8:	ldr	r0, [pc, #912]	; 60d90 <blkid_probe_get_size@plt+0x59878>
   609fc:	add	r0, pc, r0
   60a00:	b	5f3c0 <blkid_probe_get_size@plt+0x57ea8>
   60a04:	ldr	r3, [sp, #44]	; 0x2c
   60a08:	mov	r0, fp
   60a0c:	sub	r1, r3, #112	; 0x70
   60a10:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60a14:	ldr	r5, [sl, #-1136]	; 0xfffffb90
   60a18:	cmp	r5, #0
   60a1c:	beq	5e1d4 <blkid_probe_get_size@plt+0x56cbc>
   60a20:	ldr	r6, [pc, #876]	; 60d94 <blkid_probe_get_size@plt+0x5987c>
   60a24:	add	r6, pc, r6
   60a28:	b	5e1d8 <blkid_probe_get_size@plt+0x56cc0>
   60a2c:	mov	r3, fp
   60a30:	mov	r1, fp
   60a34:	b	5f6c4 <blkid_probe_get_size@plt+0x581ac>
   60a38:	ldr	r3, [pc, #856]	; 60d98 <blkid_probe_get_size@plt+0x59880>
   60a3c:	ldr	r1, [pc, #856]	; 60d9c <blkid_probe_get_size@plt+0x59884>
   60a40:	add	r3, pc, r3
   60a44:	add	r3, r3, #1488	; 0x5d0
   60a48:	ldr	r2, [pc, #848]	; 60da0 <blkid_probe_get_size@plt+0x59888>
   60a4c:	add	r3, r3, #12
   60a50:	add	r1, pc, r1
   60a54:	mov	r0, #1
   60a58:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   60a5c:	mov	r5, #0
   60a60:	mov	r4, r0
   60a64:	b	5dcc0 <blkid_probe_get_size@plt+0x567a8>
   60a68:	ldr	r3, [pc, #820]	; 60da4 <blkid_probe_get_size@plt+0x5988c>
   60a6c:	ldr	r1, [pc, #820]	; 60da8 <blkid_probe_get_size@plt+0x59890>
   60a70:	add	r3, pc, r3
   60a74:	add	r3, r3, #1488	; 0x5d0
   60a78:	ldr	r2, [pc, #812]	; 60dac <blkid_probe_get_size@plt+0x59894>
   60a7c:	add	r3, r3, #12
   60a80:	add	r1, pc, r1
   60a84:	mov	r0, #1
   60a88:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   60a8c:	mov	r4, r0
   60a90:	b	5fcd4 <blkid_probe_get_size@plt+0x587bc>
   60a94:	ldr	r3, [pc, #788]	; 60db0 <blkid_probe_get_size@plt+0x59898>
   60a98:	ldr	r1, [pc, #788]	; 60db4 <blkid_probe_get_size@plt+0x5989c>
   60a9c:	add	r3, pc, r3
   60aa0:	add	r3, r3, #1488	; 0x5d0
   60aa4:	ldr	r2, [pc, #780]	; 60db8 <blkid_probe_get_size@plt+0x598a0>
   60aa8:	add	r3, r3, #12
   60aac:	add	r1, pc, r1
   60ab0:	mov	r0, #1
   60ab4:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   60ab8:	mov	r4, r0
   60abc:	b	5fcd4 <blkid_probe_get_size@plt+0x587bc>
   60ac0:	ldr	r3, [pc, #756]	; 60dbc <blkid_probe_get_size@plt+0x598a4>
   60ac4:	ldr	r1, [pc, #756]	; 60dc0 <blkid_probe_get_size@plt+0x598a8>
   60ac8:	add	r3, pc, r3
   60acc:	add	r3, r3, #1488	; 0x5d0
   60ad0:	ldr	r2, [pc, #748]	; 60dc4 <blkid_probe_get_size@plt+0x598ac>
   60ad4:	add	r3, r3, #12
   60ad8:	add	r1, pc, r1
   60adc:	mov	r0, #1
   60ae0:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   60ae4:	mov	r4, r0
   60ae8:	b	5dcc0 <blkid_probe_get_size@plt+0x567a8>
   60aec:	ldr	r3, [pc, #724]	; 60dc8 <blkid_probe_get_size@plt+0x598b0>
   60af0:	ldr	r1, [pc, #724]	; 60dcc <blkid_probe_get_size@plt+0x598b4>
   60af4:	add	r3, pc, r3
   60af8:	add	r3, r3, #1488	; 0x5d0
   60afc:	ldr	r2, [pc, #716]	; 60dd0 <blkid_probe_get_size@plt+0x598b8>
   60b00:	add	r3, r3, #12
   60b04:	add	r1, pc, r1
   60b08:	mov	r0, #1
   60b0c:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   60b10:	mov	r5, r6
   60b14:	mov	r4, r0
   60b18:	b	5fcd4 <blkid_probe_get_size@plt+0x587bc>
   60b1c:	mov	r1, r6
   60b20:	mov	r0, fp
   60b24:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60b28:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60b2c:	ldr	lr, [pc, #672]	; 60dd4 <blkid_probe_get_size@plt+0x598bc>
   60b30:	cmp	r2, #0
   60b34:	ldr	ip, [r8, #20]
   60b38:	add	lr, pc, lr
   60b3c:	bne	604a8 <blkid_probe_get_size@plt+0x58f90>
   60b40:	b	604a4 <blkid_probe_get_size@plt+0x58f8c>
   60b44:	ldr	r3, [sp, #44]	; 0x2c
   60b48:	mov	r0, fp
   60b4c:	sub	r1, r3, #112	; 0x70
   60b50:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60b54:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60b58:	cmp	r2, #0
   60b5c:	beq	5fe4c <blkid_probe_get_size@plt+0x58934>
   60b60:	ldr	ip, [pc, #624]	; 60dd8 <blkid_probe_get_size@plt+0x598c0>
   60b64:	add	ip, pc, ip
   60b68:	b	5fe50 <blkid_probe_get_size@plt+0x58938>
   60b6c:	ldr	r3, [sp, #44]	; 0x2c
   60b70:	mov	r0, fp
   60b74:	sub	r1, r3, #112	; 0x70
   60b78:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60b7c:	ldr	r7, [sl, #-1136]	; 0xfffffb90
   60b80:	cmp	r7, #0
   60b84:	beq	60288 <blkid_probe_get_size@plt+0x58d70>
   60b88:	ldr	r2, [pc, #588]	; 60ddc <blkid_probe_get_size@plt+0x598c4>
   60b8c:	add	r2, pc, r2
   60b90:	b	6028c <blkid_probe_get_size@plt+0x58d74>
   60b94:	mov	r3, fp
   60b98:	mov	r0, fp
   60b9c:	b	607c8 <blkid_probe_get_size@plt+0x592b0>
   60ba0:	mvn	r6, #33	; 0x21
   60ba4:	b	5e8e0 <blkid_probe_get_size@plt+0x573c8>
   60ba8:	ldr	r3, [sp, #44]	; 0x2c
   60bac:	mov	r0, fp
   60bb0:	sub	r1, r3, #112	; 0x70
   60bb4:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60bb8:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60bbc:	cmp	r2, #0
   60bc0:	beq	6020c <blkid_probe_get_size@plt+0x58cf4>
   60bc4:	ldr	ip, [pc, #532]	; 60de0 <blkid_probe_get_size@plt+0x598c8>
   60bc8:	add	ip, pc, ip
   60bcc:	b	60210 <blkid_probe_get_size@plt+0x58cf8>
   60bd0:	ldr	r3, [sp, #44]	; 0x2c
   60bd4:	mov	r0, fp
   60bd8:	sub	r1, r3, #112	; 0x70
   60bdc:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60be0:	ldr	r2, [sl, #-1136]	; 0xfffffb90
   60be4:	cmp	r2, #0
   60be8:	beq	5e904 <blkid_probe_get_size@plt+0x573ec>
   60bec:	ldr	r1, [pc, #496]	; 60de4 <blkid_probe_get_size@plt+0x598cc>
   60bf0:	add	r1, pc, r1
   60bf4:	b	5e908 <blkid_probe_get_size@plt+0x573f0>
   60bf8:	ldr	r3, [sp, #44]	; 0x2c
   60bfc:	mov	r0, fp
   60c00:	sub	r1, r3, #112	; 0x70
   60c04:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60c08:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   60c0c:	cmp	r3, #0
   60c10:	beq	5f6c0 <blkid_probe_get_size@plt+0x581a8>
   60c14:	ldr	r1, [pc, #460]	; 60de8 <blkid_probe_get_size@plt+0x598d0>
   60c18:	add	r1, pc, r1
   60c1c:	b	5f6c4 <blkid_probe_get_size@plt+0x581ac>
   60c20:	andeq	r0, r0, r2, asr r8
   60c24:	andeq	r6, r1, ip, ror #15
   60c28:	andeq	r5, r0, r0, asr #3
   60c2c:	strdeq	r0, [r0], -lr
   60c30:	strdeq	r2, [r1], -ip
   60c34:	andeq	r6, r1, r8, lsr #13
   60c38:	andeq	r5, r0, ip, ror r0
   60c3c:	andeq	r0, r0, r1, asr r9
   60c40:	andeq	r8, r3, r0, lsl #6
   60c44:	andeq	r6, r1, r0, asr #12
   60c48:	andeq	r7, r1, r8, ror #20
   60c4c:	ldrdeq	r4, [r0], -r8
   60c50:	andeq	r0, r0, sp, asr #18
   60c54:	andeq	r5, r0, r0, asr r0
   60c58:	andeq	r5, r0, r8, lsr #32
   60c5c:	strdeq	r4, [r0], -ip
   60c60:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   60c64:	andeq	r4, r0, r8, lsr #31
   60c68:	strdeq	r7, [r1], -r4
   60c6c:			; <UNDEFINED> instruction: 0x00017fb0
   60c70:	andeq	r0, r0, r8, lsr r4
   60c74:	andeq	r6, r1, r8, lsr #7
   60c78:	andeq	r7, r1, r8, lsr r9
   60c7c:	andeq	r4, r0, r0, ror #26
   60c80:	andeq	r0, r0, r2, lsr #19
   60c84:	andeq	r7, r1, r8, ror #27
   60c88:	andeq	r7, r3, r0, asr #30
   60c8c:	andeq	r6, r1, r8, lsl #5
   60c90:	andeq	r7, r1, ip, lsl #13
   60c94:	andeq	r4, r0, r4, lsr ip
   60c98:	andeq	r0, r0, r5, asr #18
   60c9c:	andeq	r7, r3, r4, asr #29
   60ca0:	andeq	r6, r1, ip, lsl #4
   60ca4:	andeq	r7, r1, ip, lsr r7
   60ca8:			; <UNDEFINED> instruction: 0x00004bb4
   60cac:	muleq	r0, r8, r9
   60cb0:	andeq	r6, r0, r4, lsl lr
   60cb4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   60cb8:	andeq	r7, r3, r8, lsl #27
   60cbc:	ldrdeq	r6, [r1], -r0
   60cc0:	andeq	r7, r1, r8, ror r3
   60cc4:	andeq	r4, r0, ip, ror sl
   60cc8:	strdeq	r0, [r0], -fp
   60ccc:	andeq	r7, r1, r4, lsr ip
   60cd0:	andeq	r7, r3, r8, lsr #25
   60cd4:	andeq	r5, r1, r8, ror #31
   60cd8:	muleq	r1, r4, r3
   60cdc:	andeq	r4, r0, r0, lsl #19
   60ce0:			; <UNDEFINED> instruction: 0x000008be
   60ce4:	andeq	r5, r1, r4, lsl #31
   60ce8:	andeq	r4, r1, r0, asr #1
   60cec:	andeq	r3, r1, r4, lsr #5
   60cf0:	andeq	r5, r1, r4, asr pc
   60cf4:	andeq	r7, r0, ip, lsr #4
   60cf8:	strdeq	sl, [r0], -r8
   60cfc:	andeq	r0, r0, lr, lsr r3
   60d00:	andeq	r5, r1, r8, lsr #30
   60d04:	strdeq	r7, [r0], -ip
   60d08:	andeq	sl, r0, r8, asr #19
   60d0c:	strdeq	r5, [r1], -r8
   60d10:	andeq	r5, r0, r4, asr #3
   60d14:	andeq	r4, r0, r8, asr #17
   60d18:	andeq	r5, r1, r8, ror #26
   60d1c:	andeq	r4, r0, ip, lsl #18
   60d20:	andeq	r4, r0, r4, ror #17
   60d24:			; <UNDEFINED> instruction: 0x000048bc
   60d28:	muleq	r0, r4, r8
   60d2c:	andeq	r4, r0, ip, ror #16
   60d30:	andeq	r4, r0, r8, lsr r8
   60d34:			; <UNDEFINED> instruction: 0x000047bc
   60d38:	andeq	r7, r1, r8, asr #3
   60d3c:	andeq	r7, r3, r8, lsl #19
   60d40:	ldrdeq	r5, [r1], -r0
   60d44:	andeq	r7, r1, r0, ror r1
   60d48:	andeq	r4, r0, r0, lsl #13
   60d4c:	andeq	r0, r0, sp, ror #18
   60d50:	strdeq	r4, [r0], -r8
   60d54:	ldrdeq	r4, [r0], -r0
   60d58:	muleq	r0, ip, r6
   60d5c:	strdeq	r5, [r1], -r4
   60d60:	andeq	r6, r0, r8, asr #29
   60d64:	muleq	r0, r4, r6
   60d68:	andeq	r0, r0, sp, ror #5
   60d6c:	andeq	r4, r0, r4, asr #12
   60d70:	muleq	r1, ip, fp
   60d74:	andeq	r6, r0, r0, ror lr
   60d78:	andeq	sl, r0, ip, lsr r6
   60d7c:	ldrdeq	r0, [r0], -fp
   60d80:	andeq	r4, r0, r0, ror #11
   60d84:			; <UNDEFINED> instruction: 0x000045b0
   60d88:	andeq	r7, r1, r8, lsr #12
   60d8c:	andeq	r4, r0, r4, ror #10
   60d90:	andeq	r4, r0, ip, lsr r5
   60d94:	andeq	r4, r0, r4, lsl r5
   60d98:	andeq	r5, r1, r0, ror #20
   60d9c:	andeq	r4, r0, r4, lsr r4
   60da0:			; <UNDEFINED> instruction: 0x000009b1
   60da4:	andeq	r5, r1, r0, lsr sl
   60da8:	andeq	r4, r0, r4, lsl #8
   60dac:	strdeq	r0, [r0], -sl
   60db0:	andeq	r5, r1, r4, lsl #20
   60db4:	ldrdeq	r4, [r0], -r8
   60db8:	strdeq	r0, [r0], -r3
   60dbc:	ldrdeq	r5, [r1], -r8
   60dc0:	andeq	r4, r0, ip, lsr #7
   60dc4:			; <UNDEFINED> instruction: 0x000009b5
   60dc8:	andeq	r5, r1, ip, lsr #19
   60dcc:	andeq	r4, r0, r0, lsl #7
   60dd0:	andeq	r0, r0, fp, ror #17
   60dd4:	andeq	r4, r0, r0, lsl #8
   60dd8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   60ddc:	andeq	r4, r0, ip, lsr #7
   60de0:	andeq	r4, r0, r0, ror r3
   60de4:	andeq	r4, r0, r8, asr #6
   60de8:	andeq	r4, r0, r0, lsr #6
   60dec:	muleq	r1, r8, r6
   60df0:	andeq	r6, r0, ip, ror #18
   60df4:	andeq	sl, r0, r8, lsr r1
   60df8:	andeq	r4, r0, r8, ror #1
   60dfc:	strheq	r4, [r0], -ip
   60e00:	ldr	r3, [pc, #-28]	; 60dec <blkid_probe_get_size@plt+0x598d4>
   60e04:	ldr	r2, [pc, #-28]	; 60df0 <blkid_probe_get_size@plt+0x598d8>
   60e08:	add	r3, pc, r3
   60e0c:	add	r3, r3, #1664	; 0x680
   60e10:	ldr	r1, [pc, #-36]	; 60df4 <blkid_probe_get_size@plt+0x598dc>
   60e14:	add	r3, r3, #12
   60e18:	str	r3, [sp]
   60e1c:	mov	r0, fp
   60e20:	mov	r3, #740	; 0x2e4
   60e24:	add	r2, pc, r2
   60e28:	add	r1, pc, r1
   60e2c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   60e30:	ldr	r3, [sp, #44]	; 0x2c
   60e34:	mov	r0, fp
   60e38:	sub	r1, r3, #112	; 0x70
   60e3c:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60e40:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   60e44:	cmp	r3, #0
   60e48:	beq	603c4 <blkid_probe_get_size@plt+0x58eac>
   60e4c:	ldr	r0, [pc, #-92]	; 60df8 <blkid_probe_get_size@plt+0x598e0>
   60e50:	add	r0, pc, r0
   60e54:	b	603c8 <blkid_probe_get_size@plt+0x58eb0>
   60e58:	bl	6fb4 <__stack_chk_fail@plt>
   60e5c:	ldr	r3, [sp, #44]	; 0x2c
   60e60:	mov	r0, fp
   60e64:	sub	r1, r3, #112	; 0x70
   60e68:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   60e6c:	ldr	r3, [sl, #-1136]	; 0xfffffb90
   60e70:	cmp	r3, #0
   60e74:	beq	607c4 <blkid_probe_get_size@plt+0x592ac>
   60e78:	ldr	r0, [pc, #-132]	; 60dfc <blkid_probe_get_size@plt+0x598e4>
   60e7c:	add	r0, pc, r0
   60e80:	b	607c8 <blkid_probe_get_size@plt+0x592b0>
   60e84:	mvn	r6, #21
   60e88:	b	5e8e0 <blkid_probe_get_size@plt+0x573c8>
   60e8c:	cmp	r0, #0
   60e90:	push	{r4, r5, r6, r7, lr}
   60e94:	sub	sp, sp, #12
   60e98:	beq	60f28 <blkid_probe_get_size@plt+0x59a10>
   60e9c:	cmp	r1, #0
   60ea0:	mov	r4, r1
   60ea4:	beq	60f54 <blkid_probe_get_size@plt+0x59a3c>
   60ea8:	lsl	r3, r2, #9
   60eac:	ldr	r1, [pc, #256]	; 60fb4 <blkid_probe_get_size@plt+0x59a9c>
   60eb0:	and	r3, r3, #32768	; 0x8000
   60eb4:	orr	r1, r3, r1
   60eb8:	mov	r5, r2
   60ebc:	bl	6990 <__open64_2@plt>
   60ec0:	subs	r7, r0, #0
   60ec4:	bge	60eec <blkid_probe_get_size@plt+0x599d4>
   60ec8:	bl	732c <__errno_location@plt>
   60ecc:	mov	r6, #0
   60ed0:	ldr	r4, [r0]
   60ed4:	rsb	r4, r4, #0
   60ed8:	mov	r0, r6
   60edc:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   60ee0:	mov	r0, r4
   60ee4:	add	sp, sp, #12
   60ee8:	pop	{r4, r5, r6, r7, pc}
   60eec:	ldr	r1, [pc, #196]	; 60fb8 <blkid_probe_get_size@plt+0x59aa0>
   60ef0:	add	r1, pc, r1
   60ef4:	bl	69d8 <fdopen@plt>
   60ef8:	subs	r6, r0, #0
   60efc:	beq	60f9c <blkid_probe_get_size@plt+0x59a84>
   60f00:	mov	r1, #2
   60f04:	bl	68f4 <__fsetlocking@plt>
   60f08:	tst	r5, #32
   60f0c:	bne	60f84 <blkid_probe_get_size@plt+0x59a6c>
   60f10:	mov	r1, r4
   60f14:	mov	r2, r5
   60f18:	mov	r0, r6
   60f1c:	bl	599d0 <blkid_probe_get_size@plt+0x524b8>
   60f20:	and	r4, r0, r0, asr #31
   60f24:	b	60ed8 <blkid_probe_get_size@plt+0x599c0>
   60f28:	ldr	r2, [pc, #140]	; 60fbc <blkid_probe_get_size@plt+0x59aa4>
   60f2c:	ldr	r1, [pc, #140]	; 60fc0 <blkid_probe_get_size@plt+0x59aa8>
   60f30:	add	r2, pc, r2
   60f34:	add	r2, r2, #1696	; 0x6a0
   60f38:	add	r2, r2, #4
   60f3c:	str	r2, [sp]
   60f40:	ldr	r2, [pc, #124]	; 60fc4 <blkid_probe_get_size@plt+0x59aac>
   60f44:	mov	r3, #125	; 0x7d
   60f48:	add	r2, pc, r2
   60f4c:	add	r1, pc, r1
   60f50:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   60f54:	ldr	r3, [pc, #108]	; 60fc8 <blkid_probe_get_size@plt+0x59ab0>
   60f58:	mov	r0, r1
   60f5c:	add	r3, pc, r3
   60f60:	add	r3, r3, #1696	; 0x6a0
   60f64:	ldr	r2, [pc, #96]	; 60fcc <blkid_probe_get_size@plt+0x59ab4>
   60f68:	ldr	r1, [pc, #96]	; 60fd0 <blkid_probe_get_size@plt+0x59ab8>
   60f6c:	add	r3, r3, #4
   60f70:	str	r3, [sp]
   60f74:	add	r2, pc, r2
   60f78:	mov	r3, #126	; 0x7e
   60f7c:	add	r1, pc, r1
   60f80:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   60f84:	mov	r3, #0
   60f88:	mov	r1, r3
   60f8c:	mov	r2, #2
   60f90:	mov	r0, r6
   60f94:	bl	71d0 <setvbuf@plt>
   60f98:	b	60f10 <blkid_probe_get_size@plt+0x599f8>
   60f9c:	bl	732c <__errno_location@plt>
   60fa0:	ldr	r4, [r0]
   60fa4:	mov	r0, r7
   60fa8:	rsb	r4, r4, #0
   60fac:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   60fb0:	b	60ed8 <blkid_probe_get_size@plt+0x599c0>
   60fb4:	andeq	r0, r8, r1, lsl #2
   60fb8:	andeq	r5, r1, r8, lsr #6
   60fbc:	andeq	r5, r1, r0, ror r5
   60fc0:	andeq	r3, r1, ip, asr #24
   60fc4:	andeq	ip, r0, ip, lsl r7
   60fc8:	andeq	r5, r1, r4, asr #10
   60fcc:	strdeq	ip, [r0], -r0
   60fd0:	andeq	r5, r0, r0, lsr r9
   60fd4:	ldr	r3, [pc, #260]	; 610e0 <blkid_probe_get_size@plt+0x59bc8>
   60fd8:	ldr	r2, [pc, #260]	; 610e4 <blkid_probe_get_size@plt+0x59bcc>
   60fdc:	add	r3, pc, r3
   60fe0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   60fe4:	sub	sp, sp, #16
   60fe8:	ldr	r4, [r3, r2]
   60fec:	mov	r6, #0
   60ff0:	subs	r8, r0, #0
   60ff4:	ldr	r3, [r4]
   60ff8:	str	r6, [sp, #8]
   60ffc:	str	r3, [sp, #12]
   61000:	beq	610a0 <blkid_probe_get_size@plt+0x59b88>
   61004:	mov	r5, r1
   61008:	ldr	r1, [pc, #216]	; 610e8 <blkid_probe_get_size@plt+0x59bd0>
   6100c:	add	r1, pc, r1
   61010:	bl	6c9c <strspn@plt>
   61014:	mov	r9, r0
   61018:	bl	732c <__errno_location@plt>
   6101c:	add	sl, r8, r9
   61020:	mov	r2, #16
   61024:	add	r1, sp, #8
   61028:	mov	r7, r0
   6102c:	str	r6, [r0]
   61030:	mov	r0, sl
   61034:	bl	6c54 <strtoul@plt>
   61038:	ldr	r3, [r7]
   6103c:	cmp	r3, #0
   61040:	rsbgt	r0, r3, #0
   61044:	ble	61060 <blkid_probe_get_size@plt+0x59b48>
   61048:	ldr	r2, [sp, #12]
   6104c:	ldr	r3, [r4]
   61050:	cmp	r2, r3
   61054:	bne	610dc <blkid_probe_get_size@plt+0x59bc4>
   61058:	add	sp, sp, #16
   6105c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   61060:	ldr	r3, [sp, #8]
   61064:	cmp	r3, #0
   61068:	cmpne	sl, r3
   6106c:	beq	610d4 <blkid_probe_get_size@plt+0x59bbc>
   61070:	ldrb	r3, [r3]
   61074:	cmp	r3, #0
   61078:	bne	610d4 <blkid_probe_get_size@plt+0x59bbc>
   6107c:	ldrb	r2, [r8, r9]
   61080:	cmp	r2, #45	; 0x2d
   61084:	beq	610cc <blkid_probe_get_size@plt+0x59bb4>
   61088:	uxth	r2, r0
   6108c:	cmp	r0, r2
   61090:	bne	610cc <blkid_probe_get_size@plt+0x59bb4>
   61094:	strh	r2, [r5]
   61098:	mov	r0, r3
   6109c:	b	61048 <blkid_probe_get_size@plt+0x59b30>
   610a0:	ldr	r2, [pc, #68]	; 610ec <blkid_probe_get_size@plt+0x59bd4>
   610a4:	ldr	r1, [pc, #68]	; 610f0 <blkid_probe_get_size@plt+0x59bd8>
   610a8:	add	r2, pc, r2
   610ac:	add	r2, r2, #1712	; 0x6b0
   610b0:	add	r2, r2, #12
   610b4:	str	r2, [sp]
   610b8:	ldr	r2, [pc, #52]	; 610f4 <blkid_probe_get_size@plt+0x59bdc>
   610bc:	ldr	r3, [pc, #52]	; 610f8 <blkid_probe_get_size@plt+0x59be0>
   610c0:	add	r2, pc, r2
   610c4:	add	r1, pc, r1
   610c8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   610cc:	mvn	r0, #33	; 0x21
   610d0:	b	61048 <blkid_probe_get_size@plt+0x59b30>
   610d4:	mvn	r0, #21
   610d8:	b	61048 <blkid_probe_get_size@plt+0x59b30>
   610dc:	bl	6fb4 <__stack_chk_fail@plt>
   610e0:	andeq	r6, r3, ip, lsl #23
   610e4:	andeq	r0, r0, ip, lsr r4
   610e8:	muleq	r0, r0, sp
   610ec:	strdeq	r5, [r1], -r8
   610f0:			; <UNDEFINED> instruction: 0x0000f2b4
   610f4:	andeq	r9, r0, r8, lsr #14
   610f8:	strdeq	r0, [r0], -r9
   610fc:	sub	r3, r0, #1
   61100:	add	r0, r0, #7
   61104:	ldrb	r2, [r3, #1]!
   61108:	cmp	r2, #0
   6110c:	bne	61120 <blkid_probe_get_size@plt+0x59c08>
   61110:	cmp	r3, r0
   61114:	bne	61104 <blkid_probe_get_size@plt+0x59bec>
   61118:	mov	r0, #1
   6111c:	bx	lr
   61120:	mov	r0, #0
   61124:	bx	lr
   61128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6112c:	mov	r5, r1
   61130:	ldr	lr, [pc, #2000]	; 61908 <blkid_probe_get_size@plt+0x5a3f0>
   61134:	ldr	r4, [pc, #2000]	; 6190c <blkid_probe_get_size@plt+0x5a3f4>
   61138:	add	lr, pc, lr
   6113c:	mov	r1, lr
   61140:	ldr	lr, [lr, r4]
   61144:	sub	sp, sp, #172	; 0xac
   61148:	mov	ip, #0
   6114c:	str	r3, [sp, #24]
   61150:	ldr	r3, [lr]
   61154:	subs	r4, r0, #0
   61158:	str	lr, [sp, #32]
   6115c:	str	r4, [sp, #20]
   61160:	str	ip, [sp, #44]	; 0x2c
   61164:	str	r3, [sp, #164]	; 0xa4
   61168:	str	ip, [sp, #48]	; 0x30
   6116c:	str	ip, [sp, #52]	; 0x34
   61170:	strb	ip, [sp, #43]	; 0x2b
   61174:	beq	61734 <blkid_probe_get_size@plt+0x5a21c>
   61178:	cmp	r5, #0
   6117c:	mov	r7, r2
   61180:	strne	ip, [sp, #36]	; 0x24
   61184:	beq	614cc <blkid_probe_get_size@plt+0x59fb4>
   61188:	mov	r0, r5
   6118c:	bl	6f90 <fileno@plt>
   61190:	add	r6, sp, #56	; 0x38
   61194:	mov	r2, r6
   61198:	mov	r1, r0
   6119c:	mov	r0, #3
   611a0:	bl	6c90 <__fxstat64@plt>
   611a4:	cmp	r0, #0
   611a8:	blt	611d8 <blkid_probe_get_size@plt+0x59cc0>
   611ac:	ldr	r3, [sp, #72]	; 0x48
   611b0:	tst	r3, #73	; 0x49
   611b4:	beq	61470 <blkid_probe_get_size@plt+0x59f58>
   611b8:	ldr	r3, [pc, #1872]	; 61910 <blkid_probe_get_size@plt+0x5a3f8>
   611bc:	add	r3, pc, r3
   611c0:	ldr	r3, [r3]
   611c4:	cmp	r3, #3
   611c8:	bgt	61430 <blkid_probe_get_size@plt+0x59f18>
   611cc:	bl	39a0c <blkid_probe_get_size@plt+0x324f4>
   611d0:	cmp	r0, #1
   611d4:	beq	61568 <blkid_probe_get_size@plt+0x5a050>
   611d8:	ldr	r9, [pc, #1844]	; 61914 <blkid_probe_get_size@plt+0x5a3fc>
   611dc:	ldr	r8, [pc, #1844]	; 61918 <blkid_probe_get_size@plt+0x5a400>
   611e0:	ldr	r3, [pc, #1844]	; 6191c <blkid_probe_get_size@plt+0x5a404>
   611e4:	add	r9, pc, r9
   611e8:	add	r8, pc, r8
   611ec:	mov	sl, #0
   611f0:	add	r3, pc, r3
   611f4:	str	r3, [sp, #28]
   611f8:	mov	r3, #0
   611fc:	mov	r1, r3
   61200:	mov	r2, r6
   61204:	mov	r0, r5
   61208:	str	r3, [sp, #56]	; 0x38
   6120c:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   61210:	cmp	r0, #0
   61214:	beq	615f4 <blkid_probe_get_size@plt+0x5a0dc>
   61218:	cmn	r0, #105	; 0x69
   6121c:	beq	6166c <blkid_probe_get_size@plt+0x5a154>
   61220:	cmp	r0, #0
   61224:	blt	616d4 <blkid_probe_get_size@plt+0x5a1bc>
   61228:	ldr	fp, [sp, #56]	; 0x38
   6122c:	cmp	fp, #0
   61230:	beq	61260 <blkid_probe_get_size@plt+0x59d48>
   61234:	mov	r1, r9
   61238:	mov	r0, fp
   6123c:	bl	6c9c <strspn@plt>
   61240:	ldrb	r1, [fp, r0]
   61244:	mov	r0, r8
   61248:	bl	74c4 <strchr@plt>
   6124c:	cmp	r0, #0
   61250:	beq	61268 <blkid_probe_get_size@plt+0x59d50>
   61254:	mov	r0, fp
   61258:	bl	69f0 <free@plt>
   6125c:	b	611f8 <blkid_probe_get_size@plt+0x59ce0>
   61260:	ldrb	r3, [fp]
   61264:	udf	#0
   61268:	tst	r7, #8
   6126c:	bne	613b4 <blkid_probe_get_size@plt+0x59e9c>
   61270:	mov	r2, #3
   61274:	ldr	r1, [sp, #28]
   61278:	mov	r0, fp
   6127c:	bl	6a5c <strncmp@plt>
   61280:	cmp	r0, #0
   61284:	bne	613b4 <blkid_probe_get_size@plt+0x59e9c>
   61288:	adds	r4, fp, #3
   6128c:	orrne	r7, r7, #8
   61290:	beq	613b4 <blkid_probe_get_size@plt+0x59e9c>
   61294:	ldr	r0, [sp, #48]	; 0x30
   61298:	cmp	r0, #0
   6129c:	beq	613c4 <blkid_probe_get_size@plt+0x59eac>
   612a0:	bl	723c <strlen@plt>
   612a4:	str	r0, [sp, #16]
   612a8:	mov	r0, r4
   612ac:	bl	723c <strlen@plt>
   612b0:	ldr	r3, [sp, #16]
   612b4:	add	r0, r3, r0
   612b8:	cmp	r0, #1048576	; 0x100000
   612bc:	bhi	617a4 <blkid_probe_get_size@plt+0x5a28c>
   612c0:	mov	r3, #0
   612c4:	mov	r1, r3
   612c8:	mov	r2, r4
   612cc:	add	r0, sp, #48	; 0x30
   612d0:	bl	4a69c <blkid_probe_get_size@plt+0x43184>
   612d4:	cmp	r0, #0
   612d8:	beq	61774 <blkid_probe_get_size@plt+0x5a25c>
   612dc:	ldr	r0, [sp, #48]	; 0x30
   612e0:	ldrb	r3, [r0]
   612e4:	cmp	r3, #0
   612e8:	beq	61324 <blkid_probe_get_size@plt+0x59e0c>
   612ec:	mov	r2, r0
   612f0:	cmp	r3, #92	; 0x5c
   612f4:	ldrb	r3, [r2, #1]
   612f8:	beq	6137c <blkid_probe_get_size@plt+0x59e64>
   612fc:	cmp	r3, #0
   61300:	beq	61324 <blkid_probe_get_size@plt+0x59e0c>
   61304:	add	r2, r2, #1
   61308:	mov	r1, r2
   6130c:	cmp	r3, #92	; 0x5c
   61310:	ldrb	r3, [r1, #1]!
   61314:	beq	6137c <blkid_probe_get_size@plt+0x59e64>
   61318:	cmp	r3, #0
   6131c:	mov	r2, r1
   61320:	bne	61308 <blkid_probe_get_size@plt+0x59df0>
   61324:	ldr	r3, [sp, #24]
   61328:	add	sl, sl, #1
   6132c:	str	r3, [sp, #12]
   61330:	add	r3, sp, #43	; 0x2b
   61334:	str	r3, [sp, #4]
   61338:	add	r3, sp, #52	; 0x34
   6133c:	str	r0, [sp, #8]
   61340:	str	r3, [sp]
   61344:	mov	r1, sl
   61348:	add	r3, sp, #44	; 0x2c
   6134c:	mov	r2, r7
   61350:	ldr	r0, [sp, #20]
   61354:	bl	61a00 <blkid_probe_get_size@plt+0x5a4e8>
   61358:	cmp	r0, #0
   6135c:	blt	617c8 <blkid_probe_get_size@plt+0x5a2b0>
   61360:	ldr	r0, [sp, #48]	; 0x30
   61364:	bl	69f0 <free@plt>
   61368:	mov	r3, #0
   6136c:	ldr	r0, [sp, #56]	; 0x38
   61370:	str	r3, [sp, #48]	; 0x30
   61374:	bl	69f0 <free@plt>
   61378:	b	611f8 <blkid_probe_get_size@plt+0x59ce0>
   6137c:	cmp	r3, #0
   61380:	beq	61398 <blkid_probe_get_size@plt+0x59e80>
   61384:	ldrb	r3, [r2, #2]
   61388:	add	r2, r2, #2
   6138c:	cmp	r3, #0
   61390:	bne	612f0 <blkid_probe_get_size@plt+0x59dd8>
   61394:	b	61324 <blkid_probe_get_size@plt+0x59e0c>
   61398:	mov	r3, #32
   6139c:	strb	r3, [r2]
   613a0:	ldr	r3, [sp, #48]	; 0x30
   613a4:	cmp	r3, #0
   613a8:	beq	613cc <blkid_probe_get_size@plt+0x59eb4>
   613ac:	ldr	fp, [sp, #56]	; 0x38
   613b0:	b	61254 <blkid_probe_get_size@plt+0x59d3c>
   613b4:	ldr	r0, [sp, #48]	; 0x30
   613b8:	mov	r4, fp
   613bc:	cmp	r0, #0
   613c0:	bne	612a0 <blkid_probe_get_size@plt+0x59d88>
   613c4:	mov	r0, r4
   613c8:	b	612e0 <blkid_probe_get_size@plt+0x59dc8>
   613cc:	mov	r0, r4
   613d0:	bl	74e8 <strdup@plt>
   613d4:	cmp	r0, #0
   613d8:	str	r0, [sp, #48]	; 0x30
   613dc:	bne	613ac <blkid_probe_get_size@plt+0x59e94>
   613e0:	tst	r7, #4
   613e4:	bne	615cc <blkid_probe_get_size@plt+0x5a0b4>
   613e8:	ldr	fp, [sp, #56]	; 0x38
   613ec:	mvn	r4, #11
   613f0:	mov	r0, fp
   613f4:	bl	69f0 <free@plt>
   613f8:	ldr	r0, [sp, #36]	; 0x24
   613fc:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   61400:	ldr	r0, [sp, #48]	; 0x30
   61404:	bl	69f0 <free@plt>
   61408:	ldr	r0, [sp, #44]	; 0x2c
   6140c:	bl	69f0 <free@plt>
   61410:	ldr	r3, [sp, #32]
   61414:	ldr	r2, [sp, #164]	; 0xa4
   61418:	mov	r0, r4
   6141c:	ldr	r3, [r3]
   61420:	cmp	r2, r3
   61424:	bne	61904 <blkid_probe_get_size@plt+0x5a3ec>
   61428:	add	sp, sp, #172	; 0xac
   6142c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61430:	ldr	r2, [pc, #1256]	; 61920 <blkid_probe_get_size@plt+0x5a408>
   61434:	ldr	r3, [pc, #1256]	; 61924 <blkid_probe_get_size@plt+0x5a40c>
   61438:	add	r2, pc, r2
   6143c:	ldr	r1, [sp, #20]
   61440:	str	r2, [sp, #4]
   61444:	add	r3, pc, r3
   61448:	ldr	r2, [pc, #1240]	; 61928 <blkid_probe_get_size@plt+0x5a410>
   6144c:	add	r3, r3, #1776	; 0x6f0
   61450:	str	r1, [sp, #8]
   61454:	str	r3, [sp]
   61458:	add	r2, pc, r2
   6145c:	ldr	r3, [pc, #1224]	; 6192c <blkid_probe_get_size@plt+0x5a414>
   61460:	mov	r1, #0
   61464:	mov	r0, #4
   61468:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   6146c:	ldr	r3, [sp, #72]	; 0x48
   61470:	tst	r3, #2
   61474:	beq	611cc <blkid_probe_get_size@plt+0x59cb4>
   61478:	ldr	r3, [pc, #1200]	; 61930 <blkid_probe_get_size@plt+0x5a418>
   6147c:	add	r3, pc, r3
   61480:	ldr	r3, [r3]
   61484:	cmp	r3, #3
   61488:	ble	611cc <blkid_probe_get_size@plt+0x59cb4>
   6148c:	ldr	r2, [pc, #1184]	; 61934 <blkid_probe_get_size@plt+0x5a41c>
   61490:	ldr	r3, [pc, #1184]	; 61938 <blkid_probe_get_size@plt+0x5a420>
   61494:	add	r2, pc, r2
   61498:	ldr	r1, [sp, #20]
   6149c:	str	r2, [sp, #4]
   614a0:	add	r3, pc, r3
   614a4:	ldr	r2, [pc, #1168]	; 6193c <blkid_probe_get_size@plt+0x5a424>
   614a8:	add	r3, r3, #1776	; 0x6f0
   614ac:	str	r1, [sp, #8]
   614b0:	str	r3, [sp]
   614b4:	add	r2, pc, r2
   614b8:	ldr	r3, [pc, #1152]	; 61940 <blkid_probe_get_size@plt+0x5a428>
   614bc:	mov	r1, #0
   614c0:	mov	r0, #4
   614c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   614c8:	b	611cc <blkid_probe_get_size@plt+0x59cb4>
   614cc:	ldr	r1, [pc, #1136]	; 61944 <blkid_probe_get_size@plt+0x5a42c>
   614d0:	add	r1, pc, r1
   614d4:	bl	738c <fopen64@plt>
   614d8:	subs	r5, r0, #0
   614dc:	strne	r5, [sp, #36]	; 0x24
   614e0:	bne	61188 <blkid_probe_get_size@plt+0x59c70>
   614e4:	bl	732c <__errno_location@plt>
   614e8:	ands	r7, r7, #4
   614ec:	mov	r4, r0
   614f0:	ldr	r1, [r0]
   614f4:	beq	6175c <blkid_probe_get_size@plt+0x5a244>
   614f8:	cmp	r1, #2
   614fc:	beq	618a0 <blkid_probe_get_size@plt+0x5a388>
   61500:	ldr	r3, [pc, #1088]	; 61948 <blkid_probe_get_size@plt+0x5a430>
   61504:	add	r3, pc, r3
   61508:	ldr	r3, [r3]
   6150c:	cmp	r3, #2
   61510:	ble	61764 <blkid_probe_get_size@plt+0x5a24c>
   61514:	mov	r0, #3
   61518:	ldr	r2, [pc, #1068]	; 6194c <blkid_probe_get_size@plt+0x5a434>
   6151c:	ldr	r3, [pc, #1068]	; 61950 <blkid_probe_get_size@plt+0x5a438>
   61520:	add	r2, pc, r2
   61524:	ldr	ip, [sp, #20]
   61528:	str	r2, [sp, #4]
   6152c:	add	r3, pc, r3
   61530:	ldr	r2, [pc, #1052]	; 61954 <blkid_probe_get_size@plt+0x5a43c>
   61534:	add	r3, r3, #1760	; 0x6e0
   61538:	str	r3, [sp]
   6153c:	str	ip, [sp, #8]
   61540:	mov	r3, #296	; 0x128
   61544:	add	r2, pc, r2
   61548:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   6154c:	ldr	r1, [r4]
   61550:	cmp	r1, #2
   61554:	moveq	r3, #0
   61558:	streq	r3, [sp, #36]	; 0x24
   6155c:	moveq	r4, r3
   61560:	beq	613f8 <blkid_probe_get_size@plt+0x59ee0>
   61564:	b	61764 <blkid_probe_get_size@plt+0x5a24c>
   61568:	ldr	r3, [sp, #72]	; 0x48
   6156c:	and	r3, r3, #36	; 0x24
   61570:	cmp	r3, #36	; 0x24
   61574:	beq	611d8 <blkid_probe_get_size@plt+0x59cc0>
   61578:	ldr	r3, [pc, #984]	; 61958 <blkid_probe_get_size@plt+0x5a440>
   6157c:	add	r3, pc, r3
   61580:	ldr	r3, [r3]
   61584:	cmp	r3, #3
   61588:	ble	611d8 <blkid_probe_get_size@plt+0x59cc0>
   6158c:	ldr	r2, [pc, #968]	; 6195c <blkid_probe_get_size@plt+0x5a444>
   61590:	ldr	r3, [pc, #968]	; 61960 <blkid_probe_get_size@plt+0x5a448>
   61594:	add	r2, pc, r2
   61598:	ldr	r1, [sp, #20]
   6159c:	str	r2, [sp, #4]
   615a0:	add	r3, pc, r3
   615a4:	ldr	r2, [pc, #952]	; 61964 <blkid_probe_get_size@plt+0x5a44c>
   615a8:	add	r3, r3, #1776	; 0x6f0
   615ac:	str	r1, [sp, #8]
   615b0:	str	r3, [sp]
   615b4:	add	r2, pc, r2
   615b8:	ldr	r3, [pc, #936]	; 61968 <blkid_probe_get_size@plt+0x5a450>
   615bc:	mov	r1, #0
   615c0:	mov	r0, #4
   615c4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   615c8:	b	611d8 <blkid_probe_get_size@plt+0x59cc0>
   615cc:	ldr	r3, [pc, #920]	; 6196c <blkid_probe_get_size@plt+0x5a454>
   615d0:	ldr	r1, [pc, #920]	; 61970 <blkid_probe_get_size@plt+0x5a458>
   615d4:	add	r3, pc, r3
   615d8:	ldr	r2, [pc, #916]	; 61974 <blkid_probe_get_size@plt+0x5a45c>
   615dc:	add	r3, r3, #1760	; 0x6e0
   615e0:	add	r1, pc, r1
   615e4:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   615e8:	mvn	r4, #11
   615ec:	ldr	fp, [sp, #56]	; 0x38
   615f0:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   615f4:	mov	r4, r0
   615f8:	ldr	r0, [sp, #56]	; 0x38
   615fc:	bl	69f0 <free@plt>
   61600:	ldr	r3, [sp, #48]	; 0x30
   61604:	cmp	r3, #0
   61608:	beq	613f8 <blkid_probe_get_size@plt+0x59ee0>
   6160c:	ldr	r2, [sp, #24]
   61610:	str	r3, [sp, #8]
   61614:	add	r3, sp, #43	; 0x2b
   61618:	str	r3, [sp, #4]
   6161c:	add	sl, sl, #1
   61620:	add	r3, sp, #52	; 0x34
   61624:	str	r2, [sp, #12]
   61628:	mov	r1, sl
   6162c:	str	r3, [sp]
   61630:	mov	r2, r7
   61634:	add	r3, sp, #44	; 0x2c
   61638:	ldr	r0, [sp, #20]
   6163c:	bl	61a00 <blkid_probe_get_size@plt+0x5a4e8>
   61640:	subs	r1, r0, #0
   61644:	bge	613f8 <blkid_probe_get_size@plt+0x59ee0>
   61648:	tst	r7, #4
   6164c:	beq	61664 <blkid_probe_get_size@plt+0x5a14c>
   61650:	ldr	r3, [pc, #800]	; 61978 <blkid_probe_get_size@plt+0x5a460>
   61654:	add	r3, pc, r3
   61658:	ldr	r3, [r3]
   6165c:	cmp	r3, #3
   61660:	bgt	618c0 <blkid_probe_get_size@plt+0x5a3a8>
   61664:	mov	r4, r1
   61668:	b	613f8 <blkid_probe_get_size@plt+0x59ee0>
   6166c:	tst	r7, #4
   61670:	mov	r4, r0
   61674:	beq	615ec <blkid_probe_get_size@plt+0x5a0d4>
   61678:	ldr	r3, [pc, #764]	; 6197c <blkid_probe_get_size@plt+0x5a464>
   6167c:	add	r3, pc, r3
   61680:	ldr	r3, [r3]
   61684:	cmp	r3, #2
   61688:	ble	615ec <blkid_probe_get_size@plt+0x5a0d4>
   6168c:	ldr	r2, [pc, #748]	; 61980 <blkid_probe_get_size@plt+0x5a468>
   61690:	ldr	r3, [pc, #748]	; 61984 <blkid_probe_get_size@plt+0x5a46c>
   61694:	add	r2, pc, r2
   61698:	ldr	r1, [sp, #20]
   6169c:	str	r2, [sp, #4]
   616a0:	add	r3, pc, r3
   616a4:	ldr	r2, [pc, #732]	; 61988 <blkid_probe_get_size@plt+0x5a470>
   616a8:	add	r3, r3, #1760	; 0x6e0
   616ac:	str	r1, [sp, #8]
   616b0:	str	r3, [sp]
   616b4:	mov	r1, r0
   616b8:	str	sl, [sp, #12]
   616bc:	ldr	r3, [pc, #712]	; 6198c <blkid_probe_get_size@plt+0x5a474>
   616c0:	add	r2, pc, r2
   616c4:	mov	r0, #3
   616c8:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   616cc:	ldr	fp, [sp, #56]	; 0x38
   616d0:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   616d4:	ldr	r3, [pc, #692]	; 61990 <blkid_probe_get_size@plt+0x5a478>
   616d8:	mov	r4, r0
   616dc:	add	r3, pc, r3
   616e0:	ldr	r3, [r3]
   616e4:	cmp	r3, #2
   616e8:	ble	615ec <blkid_probe_get_size@plt+0x5a0d4>
   616ec:	ldr	r2, [pc, #672]	; 61994 <blkid_probe_get_size@plt+0x5a47c>
   616f0:	ldr	r3, [pc, #672]	; 61998 <blkid_probe_get_size@plt+0x5a480>
   616f4:	add	r2, pc, r2
   616f8:	ldr	r1, [sp, #20]
   616fc:	str	r2, [sp, #4]
   61700:	add	r3, pc, r3
   61704:	ldr	r2, [pc, #656]	; 6199c <blkid_probe_get_size@plt+0x5a484>
   61708:	add	r3, r3, #1760	; 0x6e0
   6170c:	str	r1, [sp, #8]
   61710:	str	r3, [sp]
   61714:	mov	r1, r0
   61718:	str	sl, [sp, #12]
   6171c:	ldr	r3, [pc, #636]	; 619a0 <blkid_probe_get_size@plt+0x5a488>
   61720:	add	r2, pc, r2
   61724:	mov	r0, #3
   61728:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   6172c:	ldr	fp, [sp, #56]	; 0x38
   61730:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   61734:	ldr	r2, [pc, #616]	; 619a4 <blkid_probe_get_size@plt+0x5a48c>
   61738:	ldr	r1, [pc, #616]	; 619a8 <blkid_probe_get_size@plt+0x5a490>
   6173c:	add	r2, pc, r2
   61740:	add	r2, r2, #1744	; 0x6d0
   61744:	str	r2, [sp]
   61748:	ldr	r2, [pc, #604]	; 619ac <blkid_probe_get_size@plt+0x5a494>
   6174c:	ldr	r3, [pc, #604]	; 619b0 <blkid_probe_get_size@plt+0x5a498>
   61750:	add	r2, pc, r2
   61754:	add	r1, pc, r1
   61758:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   6175c:	cmp	r1, #2
   61760:	beq	61830 <blkid_probe_get_size@plt+0x5a318>
   61764:	mov	r3, #0
   61768:	rsb	r4, r1, #0
   6176c:	str	r3, [sp, #36]	; 0x24
   61770:	b	613f8 <blkid_probe_get_size@plt+0x59ee0>
   61774:	tst	r7, #4
   61778:	beq	613e8 <blkid_probe_get_size@plt+0x59ed0>
   6177c:	ldr	r3, [pc, #560]	; 619b4 <blkid_probe_get_size@plt+0x5a49c>
   61780:	ldr	r1, [pc, #560]	; 619b8 <blkid_probe_get_size@plt+0x5a4a0>
   61784:	add	r3, pc, r3
   61788:	ldr	r2, [pc, #556]	; 619bc <blkid_probe_get_size@plt+0x5a4a4>
   6178c:	add	r3, r3, #1760	; 0x6e0
   61790:	add	r1, pc, r1
   61794:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   61798:	mvn	r4, #11
   6179c:	ldr	fp, [sp, #56]	; 0x38
   617a0:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   617a4:	tst	r7, #4
   617a8:	beq	617c0 <blkid_probe_get_size@plt+0x5a2a8>
   617ac:	ldr	r2, [pc, #524]	; 619c0 <blkid_probe_get_size@plt+0x5a4a8>
   617b0:	add	r2, pc, r2
   617b4:	ldr	r2, [r2]
   617b8:	cmp	r2, #2
   617bc:	bgt	61854 <blkid_probe_get_size@plt+0x5a33c>
   617c0:	mvn	r4, #104	; 0x68
   617c4:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   617c8:	tst	r7, #4
   617cc:	mov	r4, r0
   617d0:	beq	615ec <blkid_probe_get_size@plt+0x5a0d4>
   617d4:	ldr	r3, [pc, #488]	; 619c4 <blkid_probe_get_size@plt+0x5a4ac>
   617d8:	add	r3, pc, r3
   617dc:	ldr	r3, [r3]
   617e0:	cmp	r3, #3
   617e4:	ble	615ec <blkid_probe_get_size@plt+0x5a0d4>
   617e8:	ldr	r2, [pc, #472]	; 619c8 <blkid_probe_get_size@plt+0x5a4b0>
   617ec:	ldr	r3, [pc, #472]	; 619cc <blkid_probe_get_size@plt+0x5a4b4>
   617f0:	add	r2, pc, r2
   617f4:	ldr	r1, [sp, #20]
   617f8:	str	r2, [sp, #4]
   617fc:	add	r3, pc, r3
   61800:	ldr	r2, [pc, #456]	; 619d0 <blkid_probe_get_size@plt+0x5a4b8>
   61804:	add	r3, r3, #1760	; 0x6e0
   61808:	str	r1, [sp, #8]
   6180c:	str	r3, [sp]
   61810:	mov	r1, r0
   61814:	str	sl, [sp, #12]
   61818:	ldr	r3, [pc, #436]	; 619d4 <blkid_probe_get_size@plt+0x5a4bc>
   6181c:	add	r2, pc, r2
   61820:	mov	r0, #4
   61824:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   61828:	ldr	fp, [sp, #56]	; 0x38
   6182c:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   61830:	ldr	r3, [pc, #416]	; 619d8 <blkid_probe_get_size@plt+0x5a4c0>
   61834:	add	r3, pc, r3
   61838:	ldr	r3, [r3]
   6183c:	cmp	r3, #6
   61840:	movle	r4, r7
   61844:	strle	r4, [sp, #36]	; 0x24
   61848:	ble	613f8 <blkid_probe_get_size@plt+0x59ee0>
   6184c:	mov	r0, #7
   61850:	b	61518 <blkid_probe_get_size@plt+0x5a000>
   61854:	ldr	r2, [pc, #384]	; 619dc <blkid_probe_get_size@plt+0x5a4c4>
   61858:	ldr	r3, [pc, #384]	; 619e0 <blkid_probe_get_size@plt+0x5a4c8>
   6185c:	add	r2, pc, r2
   61860:	ldr	r1, [sp, #20]
   61864:	str	r2, [sp, #4]
   61868:	add	r3, pc, r3
   6186c:	ldr	r2, [pc, #368]	; 619e4 <blkid_probe_get_size@plt+0x5a4cc>
   61870:	add	r3, r3, #1760	; 0x6e0
   61874:	str	r1, [sp, #8]
   61878:	str	r3, [sp]
   6187c:	str	sl, [sp, #12]
   61880:	ldr	r3, [pc, #352]	; 619e8 <blkid_probe_get_size@plt+0x5a4d0>
   61884:	add	r2, pc, r2
   61888:	mov	r1, #0
   6188c:	mov	r0, #3
   61890:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   61894:	mvn	r4, #104	; 0x68
   61898:	ldr	fp, [sp, #56]	; 0x38
   6189c:	b	613f0 <blkid_probe_get_size@plt+0x59ed8>
   618a0:	ldr	r3, [pc, #324]	; 619ec <blkid_probe_get_size@plt+0x5a4d4>
   618a4:	add	r3, pc, r3
   618a8:	ldr	r3, [r3]
   618ac:	cmp	r3, #6
   618b0:	movle	r4, r5
   618b4:	strle	r4, [sp, #36]	; 0x24
   618b8:	bgt	6184c <blkid_probe_get_size@plt+0x5a334>
   618bc:	b	613f8 <blkid_probe_get_size@plt+0x59ee0>
   618c0:	ldr	r2, [pc, #296]	; 619f0 <blkid_probe_get_size@plt+0x5a4d8>
   618c4:	ldr	r3, [pc, #296]	; 619f4 <blkid_probe_get_size@plt+0x5a4dc>
   618c8:	add	r2, pc, r2
   618cc:	ldr	r0, [sp, #20]
   618d0:	str	r2, [sp, #4]
   618d4:	add	r3, pc, r3
   618d8:	ldr	r2, [pc, #280]	; 619f8 <blkid_probe_get_size@plt+0x5a4e0>
   618dc:	add	r3, r3, #1760	; 0x6e0
   618e0:	str	r0, [sp, #8]
   618e4:	str	r3, [sp]
   618e8:	str	sl, [sp, #12]
   618ec:	ldr	r3, [pc, #264]	; 619fc <blkid_probe_get_size@plt+0x5a4e4>
   618f0:	add	r2, pc, r2
   618f4:	mov	r0, #4
   618f8:	mov	r4, r1
   618fc:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   61900:	b	613f8 <blkid_probe_get_size@plt+0x59ee0>
   61904:	bl	6fb4 <__stack_chk_fail@plt>
   61908:	andeq	r6, r3, r0, lsr sl
   6190c:	andeq	r0, r0, ip, lsr r4
   61910:	andeq	r6, r3, r0, lsl #31
   61914:			; <UNDEFINED> instruction: 0x00009bb8
   61918:	muleq	r1, ip, ip
   6191c:	andeq	r6, r1, r0, ror sl
   61920:	andeq	r6, r1, ip, asr r6
   61924:	andeq	r5, r1, ip, asr r0
   61928:	andeq	r8, r0, r0, lsl #27
   6192c:	andeq	r0, r0, r7, lsr r1
   61930:	andeq	r6, r3, r0, asr #25
   61934:	andeq	r6, r1, ip, ror #12
   61938:	andeq	r5, r1, r0
   6193c:	andeq	r8, r0, r4, lsr #26
   61940:	andeq	r0, r0, sl, lsr r1
   61944:			; <UNDEFINED> instruction: 0x0000cebc
   61948:	andeq	r6, r3, r8, lsr ip
   6194c:	andeq	r6, r1, r8, asr #10
   61950:	andeq	r4, r1, r4, ror pc
   61954:	andeq	r8, r0, r4, lsr ip
   61958:	andeq	r6, r3, r0, asr #23
   6195c:	andeq	r6, r1, r0, ror #11
   61960:	andeq	r4, r1, r0, lsl #30
   61964:	andeq	r8, r0, r4, lsr #24
   61968:	andeq	r0, r0, sp, lsr r1
   6196c:	andeq	r4, r1, ip, asr #29
   61970:	muleq	r0, r8, fp
   61974:	andeq	r0, r0, r1, ror r1
   61978:	andeq	r6, r3, r8, ror #21
   6197c:	andeq	r6, r3, r0, asr #21
   61980:	andeq	r6, r1, r0, lsl #11
   61984:	andeq	r4, r1, r0, lsl #28
   61988:			; <UNDEFINED> instruction: 0x00008ab8
   6198c:	andeq	r0, r0, r9, lsr r1
   61990:	andeq	r6, r3, r0, ror #20
   61994:	andeq	r6, r1, r8, lsr r5
   61998:	andeq	r4, r1, r0, lsr #27
   6199c:	andeq	r8, r0, r8, asr sl
   619a0:	andeq	r0, r0, pc, lsr r1
   619a4:	andeq	r4, r1, r4, ror #26
   619a8:	andeq	r8, r0, r4, asr ip
   619ac:	andeq	r8, r0, r8, lsr #20
   619b0:	andeq	r0, r0, lr, lsl r1
   619b4:	andeq	r4, r1, ip, lsl sp
   619b8:	andeq	r8, r0, r8, ror #19
   619bc:	andeq	r0, r0, fp, asr r1
   619c0:	andeq	r6, r3, ip, lsl #19
   619c4:	andeq	r6, r3, r4, ror #18
   619c8:	muleq	r1, r8, r4
   619cc:	andeq	r4, r1, r4, lsr #25
   619d0:	andeq	r8, r0, ip, asr r9
   619d4:	andeq	r0, r0, r7, lsl #3
   619d8:	andeq	r6, r3, r8, lsl #18
   619dc:	andeq	r6, r1, r8, lsl #8
   619e0:	andeq	r4, r1, r8, lsr ip
   619e4:	strdeq	r8, [r0], -r4
   619e8:	andeq	r0, r0, r5, asr r1
   619ec:	muleq	r3, r8, r8
   619f0:	andeq	r6, r1, r0, asr #7
   619f4:	andeq	r4, r1, ip, asr #23
   619f8:	andeq	r8, r0, r8, lsl #17
   619fc:	muleq	r0, sp, r1
   61a00:	ldr	ip, [pc, #2240]	; 622c8 <blkid_probe_get_size@plt+0x5adb0>
   61a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   61a08:	add	ip, pc, ip
   61a0c:	ldr	lr, [pc, #2232]	; 622cc <blkid_probe_get_size@plt+0x5adb4>
   61a10:	mov	r4, r1
   61a14:	mov	r1, ip
   61a18:	ldr	ip, [ip, lr]
   61a1c:	sub	sp, sp, #76	; 0x4c
   61a20:	mov	r9, r3
   61a24:	ldr	r3, [ip]
   61a28:	subs	r8, r0, #0
   61a2c:	str	r3, [sp, #68]	; 0x44
   61a30:	ldr	r3, [sp, #116]	; 0x74
   61a34:	str	ip, [sp, #32]
   61a38:	str	r3, [sp, #36]	; 0x24
   61a3c:	ldr	sl, [sp, #112]	; 0x70
   61a40:	ldr	r3, [sp, #120]	; 0x78
   61a44:	ldr	fp, [sp, #124]	; 0x7c
   61a48:	beq	61b60 <blkid_probe_get_size@plt+0x5a648>
   61a4c:	cmp	r4, #0
   61a50:	beq	61b8c <blkid_probe_get_size@plt+0x5a674>
   61a54:	cmp	r3, #0
   61a58:	beq	61bbc <blkid_probe_get_size@plt+0x5a6a4>
   61a5c:	mov	r0, r3
   61a60:	mov	r7, r2
   61a64:	bl	39408 <blkid_probe_get_size@plt+0x31ef0>
   61a68:	ldrb	r5, [r0]
   61a6c:	cmp	r5, #10
   61a70:	cmpne	r5, #0
   61a74:	bne	61a9c <blkid_probe_get_size@plt+0x5a584>
   61a78:	mov	r6, #0
   61a7c:	ldr	r3, [sp, #32]
   61a80:	ldr	r2, [sp, #68]	; 0x44
   61a84:	mov	r0, r6
   61a88:	ldr	r3, [r3]
   61a8c:	cmp	r2, r3
   61a90:	bne	6225c <blkid_probe_get_size@plt+0x5ad44>
   61a94:	add	sp, sp, #76	; 0x4c
   61a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61a9c:	str	r0, [sp, #40]	; 0x28
   61aa0:	bl	723c <strlen@plt>
   61aa4:	ldr	r3, [sp, #40]	; 0x28
   61aa8:	cmp	r0, #7
   61aac:	str	r0, [sp, #44]	; 0x2c
   61ab0:	bls	61c84 <blkid_probe_get_size@plt+0x5a76c>
   61ab4:	ldr	r1, [pc, #2068]	; 622d0 <blkid_probe_get_size@plt+0x5adb8>
   61ab8:	mov	r0, r3
   61abc:	mov	r2, #8
   61ac0:	add	r1, pc, r1
   61ac4:	bl	7398 <memcmp@plt>
   61ac8:	ldr	r3, [sp, #40]	; 0x28
   61acc:	subs	r6, r0, #0
   61ad0:	bne	61c84 <blkid_probe_get_size@plt+0x5a76c>
   61ad4:	ldrb	r1, [r3, #8]
   61ad8:	add	r2, r3, #8
   61adc:	str	r2, [sp, #40]	; 0x28
   61ae0:	cmp	r1, #0
   61ae4:	beq	61b2c <blkid_probe_get_size@plt+0x5a614>
   61ae8:	ldr	r2, [pc, #2020]	; 622d4 <blkid_probe_get_size@plt+0x5adbc>
   61aec:	str	r3, [sp, #48]	; 0x30
   61af0:	add	r2, pc, r2
   61af4:	mov	r0, r2
   61af8:	str	r2, [sp, #52]	; 0x34
   61afc:	bl	74c4 <strchr@plt>
   61b00:	ldr	r3, [sp, #48]	; 0x30
   61b04:	cmp	r0, #0
   61b08:	beq	61c84 <blkid_probe_get_size@plt+0x5a76c>
   61b0c:	ldr	r2, [sp, #52]	; 0x34
   61b10:	ldr	r0, [sp, #40]	; 0x28
   61b14:	mov	r1, r2
   61b18:	bl	6c9c <strspn@plt>
   61b1c:	ldr	r2, [sp, #40]	; 0x28
   61b20:	add	r3, r2, r0
   61b24:	str	r3, [sp, #40]	; 0x28
   61b28:	ldr	r3, [sp, #48]	; 0x30
   61b2c:	ldr	r2, [sp, #40]	; 0x28
   61b30:	cmp	r2, #0
   61b34:	beq	61c84 <blkid_probe_get_size@plt+0x5a76c>
   61b38:	ldr	r3, [pc, #1944]	; 622d8 <blkid_probe_get_size@plt+0x5adc0>
   61b3c:	ands	r5, r7, #2
   61b40:	add	r3, pc, r3
   61b44:	ldr	r3, [r3]
   61b48:	bne	61bec <blkid_probe_get_size@plt+0x5a6d4>
   61b4c:	cmp	r3, #2
   61b50:	bgt	61d9c <blkid_probe_get_size@plt+0x5a884>
   61b54:	mov	r0, r5
   61b58:	bl	69f0 <free@plt>
   61b5c:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   61b60:	ldr	r2, [pc, #1908]	; 622dc <blkid_probe_get_size@plt+0x5adc4>
   61b64:	ldr	r1, [pc, #1908]	; 622e0 <blkid_probe_get_size@plt+0x5adc8>
   61b68:	add	r2, pc, r2
   61b6c:	add	r2, r2, #1808	; 0x710
   61b70:	add	r2, r2, #12
   61b74:	str	r2, [sp]
   61b78:	ldr	r2, [pc, #1892]	; 622e4 <blkid_probe_get_size@plt+0x5adcc>
   61b7c:	mov	r3, #162	; 0xa2
   61b80:	add	r2, pc, r2
   61b84:	add	r1, pc, r1
   61b88:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   61b8c:	ldr	r3, [pc, #1876]	; 622e8 <blkid_probe_get_size@plt+0x5add0>
   61b90:	ldr	r2, [pc, #1876]	; 622ec <blkid_probe_get_size@plt+0x5add4>
   61b94:	add	r3, pc, r3
   61b98:	add	r3, r3, #1808	; 0x710
   61b9c:	ldr	r1, [pc, #1868]	; 622f0 <blkid_probe_get_size@plt+0x5add8>
   61ba0:	add	r3, r3, #12
   61ba4:	str	r3, [sp]
   61ba8:	mov	r0, r4
   61bac:	mov	r3, #163	; 0xa3
   61bb0:	add	r2, pc, r2
   61bb4:	add	r1, pc, r1
   61bb8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   61bbc:	ldr	r2, [pc, #1840]	; 622f4 <blkid_probe_get_size@plt+0x5addc>
   61bc0:	mov	r0, r3
   61bc4:	add	r2, pc, r2
   61bc8:	add	r3, r2, #1808	; 0x710
   61bcc:	ldr	r1, [pc, #1828]	; 622f8 <blkid_probe_get_size@plt+0x5ade0>
   61bd0:	ldr	r2, [pc, #1828]	; 622fc <blkid_probe_get_size@plt+0x5ade4>
   61bd4:	add	r3, r3, #12
   61bd8:	str	r3, [sp]
   61bdc:	add	r2, pc, r2
   61be0:	mov	r3, #165	; 0xa5
   61be4:	add	r1, pc, r1
   61be8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   61bec:	cmp	r3, #3
   61bf0:	bgt	61dec <blkid_probe_get_size@plt+0x5a8d4>
   61bf4:	ldr	r0, [sp, #40]	; 0x28
   61bf8:	bl	39408 <blkid_probe_get_size@plt+0x31ef0>
   61bfc:	subs	r9, r0, #0
   61c00:	beq	62000 <blkid_probe_get_size@plt+0x5aae8>
   61c04:	ldrb	r3, [r9]
   61c08:	cmp	r3, #47	; 0x2f
   61c0c:	beq	61ec0 <blkid_probe_get_size@plt+0x5a9a8>
   61c10:	mov	r1, #47	; 0x2f
   61c14:	mov	r0, r8
   61c18:	bl	7410 <strrchr@plt>
   61c1c:	subs	r4, r0, #0
   61c20:	mov	r0, r9
   61c24:	beq	61ec0 <blkid_probe_get_size@plt+0x5a9a8>
   61c28:	bl	723c <strlen@plt>
   61c2c:	add	r4, r4, #1
   61c30:	sub	r4, r4, r8
   61c34:	mov	r6, r0
   61c38:	add	r0, r4, #1
   61c3c:	adds	r0, r0, r6
   61c40:	moveq	r0, #1
   61c44:	bl	7230 <malloc@plt>
   61c48:	subs	r5, r0, #0
   61c4c:	beq	61ed0 <blkid_probe_get_size@plt+0x5a9b8>
   61c50:	mov	r2, r4
   61c54:	mov	r1, r8
   61c58:	bl	72c0 <mempcpy@plt>
   61c5c:	add	r2, r6, #1
   61c60:	mov	r1, r9
   61c64:	bl	71e8 <memcpy@plt>
   61c68:	mov	r3, fp
   61c6c:	mov	r2, r7
   61c70:	mov	r1, #0
   61c74:	mov	r0, r5
   61c78:	bl	61128 <blkid_probe_get_size@plt+0x59c10>
   61c7c:	mov	r6, r0
   61c80:	b	61b54 <blkid_probe_get_size@plt+0x5a63c>
   61c84:	mov	r0, r3
   61c88:	str	r3, [sp, #40]	; 0x28
   61c8c:	bl	3c41c <blkid_probe_get_size@plt+0x34f04>
   61c90:	ldr	r3, [sp, #40]	; 0x28
   61c94:	cmp	r0, #0
   61c98:	beq	61e38 <blkid_probe_get_size@plt+0x5a920>
   61c9c:	cmp	r5, #91	; 0x5b
   61ca0:	beq	61edc <blkid_probe_get_size@plt+0x5a9c4>
   61ca4:	ldr	r6, [r9]
   61ca8:	cmp	r6, #0
   61cac:	beq	61f84 <blkid_probe_get_size@plt+0x5aa6c>
   61cb0:	mov	r0, r3
   61cb4:	mov	r1, #61	; 0x3d
   61cb8:	str	r3, [sp, #36]	; 0x24
   61cbc:	bl	74c4 <strchr@plt>
   61cc0:	ldr	r3, [sp, #36]	; 0x24
   61cc4:	subs	r6, r0, #0
   61cc8:	beq	61f68 <blkid_probe_get_size@plt+0x5aa50>
   61ccc:	mov	r5, #0
   61cd0:	strb	r5, [r6], #1
   61cd4:	mov	r0, r3
   61cd8:	ldr	r3, [r9]
   61cdc:	str	r3, [sp, #36]	; 0x24
   61ce0:	ldr	r3, [sl]
   61ce4:	str	r3, [sp, #40]	; 0x28
   61ce8:	bl	39408 <blkid_probe_get_size@plt+0x31ef0>
   61cec:	mov	r9, r0
   61cf0:	mov	r0, r6
   61cf4:	bl	39408 <blkid_probe_get_size@plt+0x31ef0>
   61cf8:	cmp	r9, r5
   61cfc:	str	r5, [sp, #56]	; 0x38
   61d00:	str	r5, [sp, #60]	; 0x3c
   61d04:	str	r5, [sp, #64]	; 0x40
   61d08:	mov	sl, r0
   61d0c:	beq	62200 <blkid_probe_get_size@plt+0x5ace8>
   61d10:	cmp	r0, #0
   61d14:	beq	62230 <blkid_probe_get_size@plt+0x5ad18>
   61d18:	add	r3, sp, #64	; 0x40
   61d1c:	ldr	r0, [pc, #1500]	; 62300 <blkid_probe_get_size@plt+0x5ade8>
   61d20:	str	r3, [sp, #4]
   61d24:	add	r3, sp, #60	; 0x3c
   61d28:	str	r3, [sp]
   61d2c:	str	fp, [sp, #8]
   61d30:	add	r3, sp, #56	; 0x38
   61d34:	mov	r2, r9
   61d38:	ldr	r1, [sp, #36]	; 0x24
   61d3c:	add	r0, pc, r0
   61d40:	bl	1ca94 <blkid_probe_get_size@plt+0x1557c>
   61d44:	subs	r6, r0, #0
   61d48:	blt	61a7c <blkid_probe_get_size@plt+0x5a564>
   61d4c:	beq	62124 <blkid_probe_get_size@plt+0x5ac0c>
   61d50:	ldr	r6, [sp, #56]	; 0x38
   61d54:	cmp	r6, #0
   61d58:	beq	61a7c <blkid_probe_get_size@plt+0x5a564>
   61d5c:	ldr	r2, [sp, #40]	; 0x28
   61d60:	ldr	lr, [sp, #64]	; 0x40
   61d64:	ldr	ip, [sp, #60]	; 0x3c
   61d68:	str	r2, [sp]
   61d6c:	str	fp, [sp, #20]
   61d70:	str	sl, [sp, #12]
   61d74:	str	r9, [sp, #4]
   61d78:	ldr	r3, [sp, #36]	; 0x24
   61d7c:	mov	r2, r4
   61d80:	mov	r1, r8
   61d84:	mov	r0, r5
   61d88:	str	lr, [sp, #16]
   61d8c:	str	ip, [sp, #8]
   61d90:	blx	r6
   61d94:	mov	r6, r0
   61d98:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   61d9c:	ldr	r1, [pc, #1376]	; 62304 <blkid_probe_get_size@plt+0x5adec>
   61da0:	ldr	r0, [pc, #1376]	; 62308 <blkid_probe_get_size@plt+0x5adf0>
   61da4:	add	r1, pc, r1
   61da8:	add	r1, r1, #1824	; 0x720
   61dac:	add	r0, pc, r0
   61db0:	add	r1, r1, #8
   61db4:	ldr	ip, [pc, #1360]	; 6230c <blkid_probe_get_size@plt+0x5adf4>
   61db8:	str	r1, [sp, #12]
   61dbc:	mov	lr, #188	; 0xbc
   61dc0:	mov	r1, r0
   61dc4:	add	ip, pc, ip
   61dc8:	stmib	sp, {r1, lr}
   61dcc:	str	r5, [sp]
   61dd0:	mov	r3, r4
   61dd4:	mov	r2, r8
   61dd8:	str	ip, [sp, #16]
   61ddc:	mov	r1, #3
   61de0:	mov	r0, r5
   61de4:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   61de8:	b	61b54 <blkid_probe_get_size@plt+0x5a63c>
   61dec:	ldr	r2, [pc, #1308]	; 62310 <blkid_probe_get_size@plt+0x5adf8>
   61df0:	ldr	r1, [pc, #1308]	; 62314 <blkid_probe_get_size@plt+0x5adfc>
   61df4:	add	r2, pc, r2
   61df8:	add	r2, r2, #1824	; 0x720
   61dfc:	add	r1, pc, r1
   61e00:	add	r2, r2, #8
   61e04:	ldr	ip, [pc, #1292]	; 62318 <blkid_probe_get_size@plt+0x5ae00>
   61e08:	mov	lr, #194	; 0xc2
   61e0c:	str	r2, [sp, #12]
   61e10:	mov	r0, #0
   61e14:	mov	r2, r1
   61e18:	add	ip, pc, ip
   61e1c:	stm	sp, {r0, r2, lr}
   61e20:	mov	r3, r4
   61e24:	str	ip, [sp, #16]
   61e28:	mov	r2, r8
   61e2c:	mov	r1, #4
   61e30:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   61e34:	b	61bf4 <blkid_probe_get_size@plt+0x5a6dc>
   61e38:	ldr	r2, [pc, #1244]	; 6231c <blkid_probe_get_size@plt+0x5ae04>
   61e3c:	add	r2, pc, r2
   61e40:	ldr	r2, [r2]
   61e44:	cmp	r2, #3
   61e48:	ble	61f7c <blkid_probe_get_size@plt+0x5aa64>
   61e4c:	mov	r0, r3
   61e50:	bl	3c350 <blkid_probe_get_size@plt+0x34e38>
   61e54:	subs	r5, r0, #0
   61e58:	movne	r3, r5
   61e5c:	ldreq	r3, [pc, #1212]	; 62320 <blkid_probe_get_size@plt+0x5ae08>
   61e60:	addeq	r3, pc, r3
   61e64:	ldr	r1, [pc, #1208]	; 62324 <blkid_probe_get_size@plt+0x5ae0c>
   61e68:	ldr	r0, [pc, #1208]	; 62328 <blkid_probe_get_size@plt+0x5ae10>
   61e6c:	add	r1, pc, r1
   61e70:	ldr	ip, [pc, #1204]	; 6232c <blkid_probe_get_size@plt+0x5ae14>
   61e74:	add	r1, r1, #1824	; 0x720
   61e78:	add	ip, pc, ip
   61e7c:	add	r0, pc, r0
   61e80:	add	r1, r1, #8
   61e84:	mov	lr, #204	; 0xcc
   61e88:	str	r1, [sp, #12]
   61e8c:	str	r0, [sp, #16]
   61e90:	mov	r1, ip
   61e94:	mov	r0, #0
   61e98:	str	r3, [sp, #20]
   61e9c:	stm	sp, {r0, r1, lr}
   61ea0:	mov	r3, r4
   61ea4:	mov	r2, r8
   61ea8:	mov	r1, #4
   61eac:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   61eb0:	mov	r0, r5
   61eb4:	bl	69f0 <free@plt>
   61eb8:	mvn	r6, #21
   61ebc:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   61ec0:	bl	74e8 <strdup@plt>
   61ec4:	cmp	r0, #0
   61ec8:	mov	r5, r0
   61ecc:	bne	61c68 <blkid_probe_get_size@plt+0x5a750>
   61ed0:	mov	r5, #0
   61ed4:	mvn	r6, #11
   61ed8:	b	61b54 <blkid_probe_get_size@plt+0x5a63c>
   61edc:	ldr	r2, [sp, #44]	; 0x2c
   61ee0:	cmp	r2, #0
   61ee4:	beq	621b0 <blkid_probe_get_size@plt+0x5ac98>
   61ee8:	ldr	r2, [sp, #44]	; 0x2c
   61eec:	add	r2, r3, r2
   61ef0:	ldrb	r2, [r2, #-1]
   61ef4:	cmp	r2, #93	; 0x5d
   61ef8:	beq	62078 <blkid_probe_get_size@plt+0x5ab60>
   61efc:	ldr	r2, [pc, #1068]	; 62330 <blkid_probe_get_size@plt+0x5ae18>
   61f00:	add	r2, pc, r2
   61f04:	ldr	r2, [r2]
   61f08:	cmp	r2, #2
   61f0c:	mvnle	r6, #73	; 0x49
   61f10:	ble	61a7c <blkid_probe_get_size@plt+0x5a564>
   61f14:	ldr	r1, [pc, #1048]	; 62334 <blkid_probe_get_size@plt+0x5ae1c>
   61f18:	ldr	r0, [pc, #1048]	; 62338 <blkid_probe_get_size@plt+0x5ae20>
   61f1c:	add	r1, pc, r1
   61f20:	ldr	ip, [pc, #1044]	; 6233c <blkid_probe_get_size@plt+0x5ae24>
   61f24:	add	r1, r1, #1824	; 0x720
   61f28:	add	r0, pc, r0
   61f2c:	add	r1, r1, #8
   61f30:	add	ip, pc, ip
   61f34:	str	r1, [sp, #12]
   61f38:	mov	lr, #214	; 0xd6
   61f3c:	mov	r1, ip
   61f40:	str	r0, [sp, #16]
   61f44:	mov	r0, #0
   61f48:	str	r3, [sp, #20]
   61f4c:	stm	sp, {r0, r1, lr}
   61f50:	mov	r3, r4
   61f54:	mov	r2, r8
   61f58:	mov	r1, #3
   61f5c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   61f60:	mvn	r6, #73	; 0x49
   61f64:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   61f68:	ldr	r3, [pc, #976]	; 62340 <blkid_probe_get_size@plt+0x5ae28>
   61f6c:	add	r3, pc, r3
   61f70:	ldr	r3, [r3]
   61f74:	cmp	r3, #3
   61f78:	bgt	6202c <blkid_probe_get_size@plt+0x5ab14>
   61f7c:	mvn	r6, #21
   61f80:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   61f84:	ands	r7, r7, #1
   61f88:	bne	61a7c <blkid_probe_get_size@plt+0x5a564>
   61f8c:	ldr	r3, [sp, #36]	; 0x24
   61f90:	ldrb	r6, [r3]
   61f94:	cmp	r6, #0
   61f98:	bne	61a78 <blkid_probe_get_size@plt+0x5a560>
   61f9c:	ldr	r3, [pc, #928]	; 62344 <blkid_probe_get_size@plt+0x5ae2c>
   61fa0:	add	r3, pc, r3
   61fa4:	ldr	r3, [r3]
   61fa8:	cmp	r3, #3
   61fac:	ble	61a7c <blkid_probe_get_size@plt+0x5a564>
   61fb0:	ldr	r1, [pc, #912]	; 62348 <blkid_probe_get_size@plt+0x5ae30>
   61fb4:	ldr	r0, [pc, #912]	; 6234c <blkid_probe_get_size@plt+0x5ae34>
   61fb8:	add	r1, pc, r1
   61fbc:	add	r1, r1, #1824	; 0x720
   61fc0:	add	r0, pc, r0
   61fc4:	add	r1, r1, #8
   61fc8:	ldr	ip, [pc, #896]	; 62350 <blkid_probe_get_size@plt+0x5ae38>
   61fcc:	str	r1, [sp, #12]
   61fd0:	mov	lr, #243	; 0xf3
   61fd4:	mov	r1, r0
   61fd8:	add	ip, pc, ip
   61fdc:	stmib	sp, {r1, lr}
   61fe0:	str	r6, [sp]
   61fe4:	mov	r3, r4
   61fe8:	mov	r2, r8
   61fec:	str	ip, [sp, #16]
   61ff0:	mov	r1, #4
   61ff4:	mov	r0, r6
   61ff8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   61ffc:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   62000:	ldr	r2, [pc, #844]	; 62354 <blkid_probe_get_size@plt+0x5ae3c>
   62004:	ldr	r1, [pc, #844]	; 62358 <blkid_probe_get_size@plt+0x5ae40>
   62008:	add	r2, pc, r2
   6200c:	add	r2, r2, #1840	; 0x730
   62010:	add	r2, r2, #4
   62014:	str	r2, [sp]
   62018:	ldr	r2, [pc, #828]	; 6235c <blkid_probe_get_size@plt+0x5ae44>
   6201c:	ldr	r3, [pc, #828]	; 62360 <blkid_probe_get_size@plt+0x5ae48>
   62020:	add	r2, pc, r2
   62024:	add	r1, pc, r1
   62028:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   6202c:	ldr	r1, [pc, #816]	; 62364 <blkid_probe_get_size@plt+0x5ae4c>
   62030:	ldr	ip, [pc, #816]	; 62368 <blkid_probe_get_size@plt+0x5ae50>
   62034:	add	r1, pc, r1
   62038:	add	r1, r1, #1824	; 0x720
   6203c:	add	r1, r1, #8
   62040:	str	r1, [sp, #12]
   62044:	ldr	r1, [pc, #800]	; 6236c <blkid_probe_get_size@plt+0x5ae54>
   62048:	add	ip, pc, ip
   6204c:	add	r1, pc, r1
   62050:	str	ip, [sp, #16]
   62054:	mov	ip, #250	; 0xfa
   62058:	str	r6, [sp]
   6205c:	stmib	sp, {r1, ip}
   62060:	mov	r3, r4
   62064:	mov	r2, r8
   62068:	mov	r1, #4
   6206c:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   62070:	mvn	r6, #21
   62074:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   62078:	ldr	r2, [sp, #44]	; 0x2c
   6207c:	add	r0, r3, #1
   62080:	sub	r1, r2, #2
   62084:	bl	68dc <strndup@plt>
   62088:	subs	r5, r0, #0
   6208c:	beq	622c0 <blkid_probe_get_size@plt+0x5ada8>
   62090:	ldr	r3, [pc, #728]	; 62370 <blkid_probe_get_size@plt+0x5ae58>
   62094:	add	r3, pc, r3
   62098:	add	fp, r3, #1792	; 0x700
   6209c:	add	fp, fp, #4
   620a0:	b	620b0 <blkid_probe_get_size@plt+0x5ab98>
   620a4:	ldrb	r3, [fp]
   620a8:	cmp	r3, #0
   620ac:	beq	620d8 <blkid_probe_get_size@plt+0x5abc0>
   620b0:	mov	r1, r5
   620b4:	mov	r0, fp
   620b8:	bl	7314 <strcmp@plt>
   620bc:	cmp	r0, #0
   620c0:	beq	621e0 <blkid_probe_get_size@plt+0x5acc8>
   620c4:	mov	r0, fp
   620c8:	bl	723c <strlen@plt>
   620cc:	add	r0, r0, #1
   620d0:	adds	fp, fp, r0
   620d4:	bne	620a4 <blkid_probe_get_size@plt+0x5ab8c>
   620d8:	tst	r7, #1
   620dc:	bne	620f8 <blkid_probe_get_size@plt+0x5abe0>
   620e0:	ldr	r1, [pc, #652]	; 62374 <blkid_probe_get_size@plt+0x5ae5c>
   620e4:	mov	r0, r5
   620e8:	add	r1, pc, r1
   620ec:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   620f0:	subs	r3, r0, #0
   620f4:	beq	62260 <blkid_probe_get_size@plt+0x5ad48>
   620f8:	mov	r0, r5
   620fc:	bl	69f0 <free@plt>
   62100:	ldr	r0, [r9]
   62104:	bl	69f0 <free@plt>
   62108:	ldr	r2, [sp, #36]	; 0x24
   6210c:	mov	r6, #0
   62110:	mov	r3, #1
   62114:	str	r6, [r9]
   62118:	str	r6, [sl]
   6211c:	strb	r3, [r2]
   62120:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   62124:	tst	r7, #1
   62128:	bne	61a7c <blkid_probe_get_size@plt+0x5a564>
   6212c:	ldr	r1, [pc, #580]	; 62378 <blkid_probe_get_size@plt+0x5ae60>
   62130:	mov	r0, r9
   62134:	add	r1, pc, r1
   62138:	bl	39118 <blkid_probe_get_size@plt+0x31c00>
   6213c:	cmp	r0, #0
   62140:	bne	61a7c <blkid_probe_get_size@plt+0x5a564>
   62144:	ldr	r3, [pc, #560]	; 6237c <blkid_probe_get_size@plt+0x5ae64>
   62148:	add	r3, pc, r3
   6214c:	ldr	r3, [r3]
   62150:	cmp	r3, #3
   62154:	ble	61a7c <blkid_probe_get_size@plt+0x5a564>
   62158:	ldr	r1, [pc, #544]	; 62380 <blkid_probe_get_size@plt+0x5ae68>
   6215c:	ldr	r0, [pc, #544]	; 62384 <blkid_probe_get_size@plt+0x5ae6c>
   62160:	add	r1, pc, r1
   62164:	ldr	ip, [pc, #540]	; 62388 <blkid_probe_get_size@plt+0x5ae70>
   62168:	add	r1, r1, #1872	; 0x750
   6216c:	add	r0, pc, r0
   62170:	add	r1, r1, #8
   62174:	add	ip, pc, ip
   62178:	ldr	r3, [sp, #36]	; 0x24
   6217c:	str	r1, [sp, #12]
   62180:	mov	lr, #140	; 0x8c
   62184:	mov	r1, ip
   62188:	str	r0, [sp, #16]
   6218c:	mov	r0, #0
   62190:	str	r3, [sp, #24]
   62194:	stm	sp, {r0, r1, lr}
   62198:	mov	r3, r4
   6219c:	str	r9, [sp, #20]
   621a0:	mov	r2, r8
   621a4:	mov	r1, #4
   621a8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   621ac:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   621b0:	ldr	r3, [pc, #468]	; 6238c <blkid_probe_get_size@plt+0x5ae74>
   621b4:	mov	r0, r2
   621b8:	add	r3, pc, r3
   621bc:	add	r3, r3, #1808	; 0x710
   621c0:	ldr	r2, [pc, #456]	; 62390 <blkid_probe_get_size@plt+0x5ae78>
   621c4:	ldr	r1, [pc, #456]	; 62394 <blkid_probe_get_size@plt+0x5ae7c>
   621c8:	add	r3, r3, #12
   621cc:	str	r3, [sp]
   621d0:	add	r2, pc, r2
   621d4:	mov	r3, #211	; 0xd3
   621d8:	add	r1, pc, r1
   621dc:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   621e0:	mov	r6, r0
   621e4:	ldr	r0, [r9]
   621e8:	bl	69f0 <free@plt>
   621ec:	ldr	r3, [sp, #36]	; 0x24
   621f0:	str	r5, [r9]
   621f4:	str	r4, [sl]
   621f8:	strb	r6, [r3]
   621fc:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   62200:	ldr	r3, [pc, #400]	; 62398 <blkid_probe_get_size@plt+0x5ae80>
   62204:	ldr	r2, [pc, #400]	; 6239c <blkid_probe_get_size@plt+0x5ae84>
   62208:	add	r3, pc, r3
   6220c:	add	r3, r3, #1856	; 0x740
   62210:	ldr	r1, [pc, #392]	; 623a0 <blkid_probe_get_size@plt+0x5ae88>
   62214:	add	r3, r3, #8
   62218:	str	r3, [sp]
   6221c:	mov	r0, r9
   62220:	mov	r3, #124	; 0x7c
   62224:	add	r2, pc, r2
   62228:	add	r1, pc, r1
   6222c:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   62230:	ldr	r2, [pc, #364]	; 623a4 <blkid_probe_get_size@plt+0x5ae8c>
   62234:	ldr	r1, [pc, #364]	; 623a8 <blkid_probe_get_size@plt+0x5ae90>
   62238:	add	r2, pc, r2
   6223c:	add	r2, r2, #1856	; 0x740
   62240:	add	r2, r2, #8
   62244:	str	r2, [sp]
   62248:	ldr	r2, [pc, #348]	; 623ac <blkid_probe_get_size@plt+0x5ae94>
   6224c:	mov	r3, #125	; 0x7d
   62250:	add	r2, pc, r2
   62254:	add	r1, pc, r1
   62258:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   6225c:	bl	6fb4 <__stack_chk_fail@plt>
   62260:	ldr	r2, [pc, #328]	; 623b0 <blkid_probe_get_size@plt+0x5ae98>
   62264:	add	r2, pc, r2
   62268:	ldr	r2, [r2]
   6226c:	cmp	r2, #3
   62270:	ble	620f8 <blkid_probe_get_size@plt+0x5abe0>
   62274:	ldr	r1, [pc, #312]	; 623b4 <blkid_probe_get_size@plt+0x5ae9c>
   62278:	ldr	ip, [pc, #312]	; 623b8 <blkid_probe_get_size@plt+0x5aea0>
   6227c:	add	r1, pc, r1
   62280:	add	r1, r1, #1824	; 0x720
   62284:	add	r1, r1, #8
   62288:	str	r1, [sp, #12]
   6228c:	ldr	r1, [pc, #296]	; 623bc <blkid_probe_get_size@plt+0x5aea4>
   62290:	add	ip, pc, ip
   62294:	add	r1, pc, r1
   62298:	str	ip, [sp, #16]
   6229c:	mov	ip, #225	; 0xe1
   622a0:	str	r3, [sp]
   622a4:	stmib	sp, {r1, ip}
   622a8:	str	r5, [sp, #20]
   622ac:	mov	r3, r4
   622b0:	mov	r2, r8
   622b4:	mov	r1, #4
   622b8:	bl	3a004 <blkid_probe_get_size@plt+0x32aec>
   622bc:	b	620f8 <blkid_probe_get_size@plt+0x5abe0>
   622c0:	mvn	r6, #11
   622c4:	b	61a7c <blkid_probe_get_size@plt+0x5a564>
   622c8:	andeq	r6, r3, r0, ror #2
   622cc:	andeq	r0, r0, ip, lsr r4
   622d0:	strdeq	r6, [r1], -r4
   622d4:	andeq	r9, r0, ip, lsr #5
   622d8:	strdeq	r6, [r3], -ip
   622dc:	andeq	r4, r1, r8, lsr r9
   622e0:	andeq	r8, r0, r4, lsr #16
   622e4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   622e8:	andeq	r4, r1, ip, lsl #18
   622ec:	andeq	r8, r0, r8, asr #11
   622f0:	strdeq	r6, [r1], -r4
   622f4:	ldrdeq	r4, [r1], -ip
   622f8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   622fc:	muleq	r0, ip, r5
   62300:			; <UNDEFINED> instruction: 0xfffbab5c
   62304:	strdeq	r4, [r1], -ip
   62308:	andeq	r8, r0, ip, asr #7
   6230c:	strdeq	r5, [r1], -ip
   62310:	andeq	r4, r1, ip, lsr #13
   62314:	andeq	r8, r0, ip, ror r3
   62318:	ldrdeq	r5, [r1], -r0
   6231c:	andeq	r6, r3, r0, lsl #6
   62320:	andeq	fp, r0, r4, asr r9
   62324:	andeq	r4, r1, r4, lsr r6
   62328:	strdeq	r5, [r1], -r8
   6232c:	andeq	r8, r0, r0, lsl #6
   62330:	andeq	r6, r3, ip, lsr r2
   62334:	andeq	r4, r1, r4, lsl #11
   62338:	andeq	r5, r1, r8, lsl #29
   6233c:	andeq	r8, r0, r8, asr #4
   62340:	ldrdeq	r6, [r3], -r0
   62344:	muleq	r3, ip, r1
   62348:	andeq	r4, r1, r8, ror #9
   6234c:			; <UNDEFINED> instruction: 0x000081b8
   62350:	andeq	r5, r1, r8, lsl lr
   62354:	muleq	r1, r8, r4
   62358:	andeq	r8, r0, r4, lsl #7
   6235c:	andeq	sp, r0, r0, lsl #26
   62360:	andeq	r0, r0, r6, lsl #7
   62364:	andeq	r4, r1, ip, ror #8
   62368:	ldrdeq	r5, [r1], -r4
   6236c:	andeq	r8, r0, ip, lsr #2
   62370:	andeq	r4, r1, ip, lsl #8
   62374:	andeq	r5, r1, r4, ror #25
   62378:	muleq	r1, r8, ip
   6237c:	strdeq	r5, [r3], -r4
   62380:	andeq	r4, r1, r0, asr #6
   62384:	andeq	r5, r1, r0, asr #25
   62388:	andeq	r8, r0, r4
   6238c:	andeq	r4, r1, r8, ror #5
   62390:	andeq	r7, r0, r8, lsr #31
   62394:	ldrdeq	r5, [r1], -r0
   62398:	muleq	r1, r8, r2
   6239c:	andeq	r7, r0, r4, asr pc
   623a0:	andeq	r7, r0, r4, ror pc
   623a4:	andeq	r4, r1, r8, ror #4
   623a8:	andeq	r8, r0, r8, ror #2
   623ac:	andeq	r7, r0, r8, lsr #30
   623b0:	ldrdeq	r5, [r3], -r8
   623b4:	andeq	r4, r1, r4, lsr #4
   623b8:	andeq	r5, r1, r0, asr #22
   623bc:	andeq	r7, r0, r4, ror #29
   623c0:	ldr	r3, [pc, #688]	; 62678 <blkid_probe_get_size@plt+0x5b160>
   623c4:	ldr	r2, [pc, #688]	; 6267c <blkid_probe_get_size@plt+0x5b164>
   623c8:	add	r3, pc, r3
   623cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   623d0:	sub	sp, sp, #65536	; 0x10000
   623d4:	ldr	r2, [r3, r2]
   623d8:	sub	sp, sp, #92	; 0x5c
   623dc:	add	r3, sp, #65536	; 0x10000
   623e0:	add	r4, sp, #88	; 0x58
   623e4:	str	r2, [sp, #28]
   623e8:	add	r3, r3, #84	; 0x54
   623ec:	ldr	r2, [r2]
   623f0:	mov	sl, r1
   623f4:	mov	r5, #0
   623f8:	sub	r1, r4, #40	; 0x28
   623fc:	str	r5, [r4, #-44]	; 0xffffffd4
   62400:	str	r2, [r3]
   62404:	mov	r7, r0
   62408:	bl	36648 <blkid_probe_get_size@plt+0x2f130>
   6240c:	subs	r6, r0, #0
   62410:	mvnlt	r9, #0
   62414:	blt	624c8 <blkid_probe_get_size@plt+0x5afb0>
   62418:	ldr	r2, [pc, #608]	; 62680 <blkid_probe_get_size@plt+0x5b168>
   6241c:	ldr	r3, [r4, #-40]	; 0xffffffd8
   62420:	add	r2, pc, r2
   62424:	mov	r1, #1
   62428:	sub	r0, r4, #44	; 0x2c
   6242c:	bl	7080 <__asprintf_chk@plt>
   62430:	cmp	r0, r5
   62434:	blt	62504 <blkid_probe_get_size@plt+0x5afec>
   62438:	mov	r1, #524288	; 0x80000
   6243c:	ldr	r0, [r4, #-44]	; 0xffffffd4
   62440:	bl	6ec4 <open64@plt>
   62444:	subs	r9, r0, #0
   62448:	bge	62534 <blkid_probe_get_size@plt+0x5b01c>
   6244c:	str	r5, [r4, #-36]	; 0xffffffdc
   62450:	bl	732c <__errno_location@plt>
   62454:	cmp	r7, #0
   62458:	ldr	r6, [r0]
   6245c:	beq	6263c <blkid_probe_get_size@plt+0x5b124>
   62460:	ldr	r3, [pc, #540]	; 62684 <blkid_probe_get_size@plt+0x5b16c>
   62464:	add	r3, pc, r3
   62468:	ldr	r3, [r3, #4]
   6246c:	cmp	r3, #6
   62470:	bgt	62648 <blkid_probe_get_size@plt+0x5b130>
   62474:	mov	r1, r5
   62478:	ldr	r3, [pc, #520]	; 62688 <blkid_probe_get_size@plt+0x5b170>
   6247c:	ldr	r2, [pc, #520]	; 6268c <blkid_probe_get_size@plt+0x5b174>
   62480:	add	r3, pc, r3
   62484:	add	r2, pc, r2
   62488:	str	r2, [sp, #20]
   6248c:	add	r3, r3, #1888	; 0x760
   62490:	ldr	r2, [pc, #504]	; 62690 <blkid_probe_get_size@plt+0x5b178>
   62494:	mov	r0, #0
   62498:	add	r3, r3, #8
   6249c:	str	r1, [sp, #4]
   624a0:	str	r3, [sp]
   624a4:	mov	r1, r6
   624a8:	str	r0, [sp, #16]
   624ac:	str	r0, [sp, #12]
   624b0:	str	r5, [sp, #8]
   624b4:	mov	r3, #169	; 0xa9
   624b8:	add	r2, pc, r2
   624bc:	mov	r0, #7
   624c0:	bl	4ae34 <blkid_probe_get_size@plt+0x4391c>
   624c4:	mov	r6, r0
   624c8:	mov	r0, r9
   624cc:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   624d0:	ldr	r0, [r4, #-44]	; 0xffffffd4
   624d4:	bl	69f0 <free@plt>
   624d8:	add	r3, sp, #65536	; 0x10000
   624dc:	add	r3, r3, #84	; 0x54
   624e0:	ldr	r2, [r3]
   624e4:	ldr	r3, [sp, #28]
   624e8:	mov	r0, r6
   624ec:	ldr	r3, [r3]
   624f0:	cmp	r2, r3
   624f4:	bne	62674 <blkid_probe_get_size@plt+0x5b15c>
   624f8:	add	sp, sp, #65536	; 0x10000
   624fc:	add	sp, sp, #92	; 0x5c
   62500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   62504:	ldr	r3, [pc, #392]	; 62694 <blkid_probe_get_size@plt+0x5b17c>
   62508:	ldr	r1, [pc, #392]	; 62698 <blkid_probe_get_size@plt+0x5b180>
   6250c:	add	r3, pc, r3
   62510:	add	r3, r3, #1888	; 0x760
   62514:	mov	r2, #165	; 0xa5
   62518:	add	r3, r3, #8
   6251c:	add	r1, pc, r1
   62520:	mov	r0, #1
   62524:	bl	3acc4 <blkid_probe_get_size@plt+0x337ac>
   62528:	mvn	r9, #0
   6252c:	mov	r6, r0
   62530:	b	624c8 <blkid_probe_get_size@plt+0x5afb0>
   62534:	sub	r7, r4, #24
   62538:	ldr	r2, [pc, #348]	; 6269c <blkid_probe_get_size@plt+0x5b184>
   6253c:	mov	r1, r7
   62540:	bl	6d74 <read@plt>
   62544:	ldr	r3, [pc, #340]	; 626a0 <blkid_probe_get_size@plt+0x5b188>
   62548:	sub	r2, r0, #18
   6254c:	cmp	r2, r3
   62550:	mov	fp, r0
   62554:	bhi	6266c <blkid_probe_get_size@plt+0x5b154>
   62558:	sub	r3, r4, #32
   6255c:	str	r3, [sp, #32]
   62560:	ldr	r3, [pc, #316]	; 626a4 <blkid_probe_get_size@plt+0x5b18c>
   62564:	mov	r6, r5
   62568:	add	r3, pc, r3
   6256c:	strb	r5, [sl]
   62570:	str	r3, [sp, #36]	; 0x24
   62574:	add	r3, r5, #9
   62578:	cmp	fp, r3
   6257c:	bls	6261c <blkid_probe_get_size@plt+0x5b104>
   62580:	ldr	r3, [pc, #288]	; 626a8 <blkid_probe_get_size@plt+0x5b190>
   62584:	add	r8, r6, #7
   62588:	cmp	r8, r3
   6258c:	bhi	62624 <blkid_probe_get_size@plt+0x5b10c>
   62590:	ldrb	r3, [r7, r5]
   62594:	add	r2, r7, r5
   62598:	cmp	r3, #2
   6259c:	bls	6261c <blkid_probe_get_size@plt+0x5b104>
   625a0:	ldrb	r1, [r2, #1]
   625a4:	add	r5, r5, r3
   625a8:	cmp	r1, #4
   625ac:	bne	62574 <blkid_probe_get_size@plt+0x5b05c>
   625b0:	ldrb	r0, [r2, #7]
   625b4:	ldrb	r1, [r2, #6]
   625b8:	ldrb	r2, [r2, #5]
   625bc:	ldr	ip, [sp, #36]	; 0x24
   625c0:	mov	r3, #8
   625c4:	str	r0, [sp, #12]
   625c8:	str	r1, [sp, #8]
   625cc:	str	r2, [sp, #4]
   625d0:	str	ip, [sp]
   625d4:	mov	r1, r3
   625d8:	mov	r2, #1
   625dc:	ldr	r0, [sp, #32]
   625e0:	bl	7260 <__snprintf_chk@plt>
   625e4:	cmp	r0, #7
   625e8:	bne	62574 <blkid_probe_get_size@plt+0x5b05c>
   625ec:	ldr	r1, [sp, #32]
   625f0:	mov	r0, sl
   625f4:	bl	7050 <strstr@plt>
   625f8:	cmp	r0, #0
   625fc:	bne	62574 <blkid_probe_get_size@plt+0x5b05c>
   62600:	ldr	r3, [sp, #32]
   62604:	add	r2, sl, r6
   62608:	ldm	r3!, {r0, r1}
   6260c:	str	r0, [sl, r6]
   62610:	mov	r6, r8
   62614:	str	r1, [r2, #4]
   62618:	b	62574 <blkid_probe_get_size@plt+0x5b05c>
   6261c:	cmp	r6, #0
   62620:	beq	624c8 <blkid_probe_get_size@plt+0x5afb0>
   62624:	mov	r3, #0
   62628:	mov	r2, #58	; 0x3a
   6262c:	strb	r2, [sl, r6]!
   62630:	mov	r6, r3
   62634:	strb	r3, [sl, #1]
   62638:	b	624c8 <blkid_probe_get_size@plt+0x5afb0>
   6263c:	mov	r5, r7
   62640:	mov	r1, r7
   62644:	b	62478 <blkid_probe_get_size@plt+0x5af60>
   62648:	mov	r0, r7
   6264c:	sub	r1, r4, #36	; 0x24
   62650:	bl	35cf8 <blkid_probe_get_size@plt+0x2e7e0>
   62654:	ldr	r5, [r4, #-36]	; 0xffffffdc
   62658:	cmp	r5, #0
   6265c:	beq	62474 <blkid_probe_get_size@plt+0x5af5c>
   62660:	ldr	r1, [pc, #68]	; 626ac <blkid_probe_get_size@plt+0x5b194>
   62664:	add	r1, pc, r1
   62668:	b	62478 <blkid_probe_get_size@plt+0x5af60>
   6266c:	mvn	r6, #4
   62670:	b	624c8 <blkid_probe_get_size@plt+0x5afb0>
   62674:	bl	6fb4 <__stack_chk_fail@plt>
   62678:	andeq	r5, r3, r0, lsr #15
   6267c:	andeq	r0, r0, ip, lsr r4
   62680:	andeq	r5, r1, ip, lsr sl
   62684:	ldrdeq	r5, [r3], -r8
   62688:	andeq	r4, r1, r0, lsr #32
   6268c:	andeq	r5, r1, r8, ror #19
   62690:	andeq	r8, r0, ip, lsl #19
   62694:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   62698:	andeq	r8, r0, r8, lsr #18
   6269c:	andeq	r0, r1, r1, lsl r0
   626a0:	strdeq	pc, [r0], -lr
   626a4:	andeq	r5, r1, r8, lsr r9
   626a8:	strdeq	r0, [r0], -sp
   626ac:	ldrdeq	r2, [r0], -r4
   626b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   626b4:	sub	sp, sp, #204	; 0xcc
   626b8:	add	ip, sp, #64	; 0x40
   626bc:	ldr	r6, [pc, #512]	; 628c4 <blkid_probe_get_size@plt+0x5b3ac>
   626c0:	ldr	r5, [pc, #512]	; 628c8 <blkid_probe_get_size@plt+0x5b3b0>
   626c4:	stm	ip, {r0, r1, r2, r3}
   626c8:	add	r6, pc, r6
   626cc:	ldrb	r0, [sp, #79]	; 0x4f
   626d0:	ldr	r5, [r6, r5]
   626d4:	mov	ip, r6
   626d8:	ldrb	r1, [sp, #77]	; 0x4d
   626dc:	ldrb	r6, [sp, #78]	; 0x4e
   626e0:	ldrb	r3, [sp, #76]	; 0x4c
   626e4:	ldrb	r2, [sp, #75]	; 0x4b
   626e8:	str	r0, [sp, #60]	; 0x3c
   626ec:	ldrb	r7, [sp, #74]	; 0x4a
   626f0:	ldrb	r0, [sp, #73]	; 0x49
   626f4:	str	r6, [sp, #56]	; 0x38
   626f8:	str	r1, [sp, #52]	; 0x34
   626fc:	str	r3, [sp, #48]	; 0x30
   62700:	str	r2, [sp, #44]	; 0x2c
   62704:	ldrb	r1, [sp, #71]	; 0x47
   62708:	ldrb	r3, [sp, #70]	; 0x46
   6270c:	ldrb	r2, [sp, #69]	; 0x45
   62710:	ldrb	r6, [sp, #72]	; 0x48
   62714:	str	r7, [sp, #40]	; 0x28
   62718:	add	lr, sp, #200	; 0xc8
   6271c:	str	r0, [sp, #36]	; 0x24
   62720:	ldr	r0, [r5]
   62724:	mov	r4, #0
   62728:	str	r1, [sp, #28]
   6272c:	str	r3, [sp, #24]
   62730:	str	r6, [sp, #32]
   62734:	str	r0, [sp, #196]	; 0xc4
   62738:	str	r4, [lr, #-120]!	; 0xffffff88
   6273c:	ldr	r3, [sp, #232]	; 0xe8
   62740:	ldr	r8, [sp, #236]	; 0xec
   62744:	ldr	r6, [sp, #240]	; 0xf0
   62748:	str	r2, [sp, #20]
   6274c:	ldrb	r2, [sp, #67]	; 0x43
   62750:	ldrb	r1, [sp, #68]	; 0x44
   62754:	ldrb	r7, [sp, #66]	; 0x42
   62758:	str	r2, [sp, #12]
   6275c:	ldrb	r2, [sp, #64]	; 0x40
   62760:	str	r1, [sp, #16]
   62764:	ldrb	r1, [sp, #65]	; 0x41
   62768:	str	r2, [sp]
   6276c:	ldr	r2, [pc, #344]	; 628cc <blkid_probe_get_size@plt+0x5b3b4>
   62770:	mov	r0, lr
   62774:	stmib	sp, {r1, r7}
   62778:	add	r2, pc, r2
   6277c:	mov	r1, #1
   62780:	bl	7080 <__asprintf_chk@plt>
   62784:	cmp	r0, r4
   62788:	blt	6289c <blkid_probe_get_size@plt+0x5b384>
   6278c:	ldr	r1, [pc, #316]	; 628d0 <blkid_probe_get_size@plt+0x5b3b8>
   62790:	ldr	r0, [sp, #80]	; 0x50
   62794:	bl	6ec4 <open64@plt>
   62798:	subs	r7, r0, #0
   6279c:	blt	6285c <blkid_probe_get_size@plt+0x5b344>
   627a0:	add	r2, sp, #88	; 0x58
   627a4:	mov	r1, r7
   627a8:	mov	r0, #3
   627ac:	bl	6c90 <__fxstat64@plt>
   627b0:	cmp	r0, #0
   627b4:	blt	6285c <blkid_probe_get_size@plt+0x5b344>
   627b8:	ldrd	r2, [sp, #136]	; 0x88
   627bc:	cmp	r2, #4
   627c0:	sbcs	r1, r3, #0
   627c4:	blt	628a8 <blkid_probe_get_size@plt+0x5b390>
   627c8:	ldr	r0, [pc, #260]	; 628d4 <blkid_probe_get_size@plt+0x5b3bc>
   627cc:	mov	r1, #0
   627d0:	cmp	r0, r2
   627d4:	sbcs	r3, r1, r3
   627d8:	blt	628b0 <blkid_probe_get_size@plt+0x5b398>
   627dc:	mov	r2, #4
   627e0:	add	r1, sp, #84	; 0x54
   627e4:	mov	r0, r7
   627e8:	bl	6d74 <read@plt>
   627ec:	cmp	r0, #0
   627f0:	blt	6285c <blkid_probe_get_size@plt+0x5b344>
   627f4:	cmp	r0, #4
   627f8:	bne	628a8 <blkid_probe_get_size@plt+0x5b390>
   627fc:	ldr	r9, [sp, #136]	; 0x88
   62800:	sub	r0, r9, #2
   62804:	bl	7230 <malloc@plt>
   62808:	subs	r4, r0, #0
   6280c:	beq	628b8 <blkid_probe_get_size@plt+0x5b3a0>
   62810:	sub	r2, r9, #4
   62814:	mov	r1, r4
   62818:	mov	r0, r7
   6281c:	bl	6d74 <read@plt>
   62820:	cmp	r0, #0
   62824:	blt	6285c <blkid_probe_get_size@plt+0x5b344>
   62828:	ldr	r3, [sp, #136]	; 0x88
   6282c:	sub	r2, r3, #4
   62830:	cmp	r0, r2
   62834:	bne	628a8 <blkid_probe_get_size@plt+0x5b390>
   62838:	add	r3, r4, r3
   6283c:	mov	r1, #0
   62840:	str	r4, [r8]
   62844:	strb	r1, [r4, r2]
   62848:	str	r2, [r6]
   6284c:	mov	r4, r1
   62850:	strb	r1, [r3, #-3]
   62854:	mov	r6, r1
   62858:	b	62868 <blkid_probe_get_size@plt+0x5b350>
   6285c:	bl	732c <__errno_location@plt>
   62860:	ldr	r6, [r0]
   62864:	rsb	r6, r6, #0
   62868:	mov	r0, r4
   6286c:	bl	69f0 <free@plt>
   62870:	ldr	r0, [sp, #80]	; 0x50
   62874:	bl	69f0 <free@plt>
   62878:	mov	r0, r7
   6287c:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   62880:	ldr	r2, [sp, #196]	; 0xc4
   62884:	ldr	r3, [r5]
   62888:	mov	r0, r6
   6288c:	cmp	r2, r3
   62890:	bne	628c0 <blkid_probe_get_size@plt+0x5b3a8>
   62894:	add	sp, sp, #204	; 0xcc
   62898:	pop	{r4, r5, r6, r7, r8, r9, pc}
   6289c:	mvn	r7, #0
   628a0:	mvn	r6, #11
   628a4:	b	62868 <blkid_probe_get_size@plt+0x5b350>
   628a8:	mvn	r6, #4
   628ac:	b	62868 <blkid_probe_get_size@plt+0x5b350>
   628b0:	mvn	r6, #6
   628b4:	b	62868 <blkid_probe_get_size@plt+0x5b350>
   628b8:	mvn	r6, #11
   628bc:	b	62868 <blkid_probe_get_size@plt+0x5b350>
   628c0:	bl	6fb4 <__stack_chk_fail@plt>
   628c4:	andeq	r5, r3, r0, lsr #9
   628c8:	andeq	r0, r0, ip, lsr r4
   628cc:	andeq	r5, r1, r8, lsr r7
   628d0:	andeq	r0, r8, r0, lsl #2
   628d4:	subeq	r0, r0, r4
   628d8:	ldr	r3, [pc, #1020]	; 62cdc <blkid_probe_get_size@plt+0x5b7c4>
   628dc:	ldr	r2, [pc, #1020]	; 62ce0 <blkid_probe_get_size@plt+0x5b7c8>
   628e0:	add	r3, pc, r3
   628e4:	push	{r4, r5, r6, lr}
   628e8:	sub	sp, sp, #32
   628ec:	ldr	r5, [r3, r2]
   628f0:	subs	r1, r0, #0
   628f4:	ldr	r3, [r5]
   628f8:	str	r3, [sp, #28]
   628fc:	beq	62a90 <blkid_probe_get_size@plt+0x5b578>
   62900:	ldr	r4, [r1, #4]
   62904:	cmp	r4, #0
   62908:	beq	62abc <blkid_probe_get_size@plt+0x5b5a4>
   6290c:	ldrsb	r3, [r1]
   62910:	cmp	r3, #5
   62914:	bne	62aec <blkid_probe_get_size@plt+0x5b5d4>
   62918:	ldr	r1, [pc, #964]	; 62ce4 <blkid_probe_get_size@plt+0x5b7cc>
   6291c:	mov	r0, r4
   62920:	add	r1, pc, r1
   62924:	bl	7314 <strcmp@plt>
   62928:	cmp	r0, #0
   6292c:	beq	629e4 <blkid_probe_get_size@plt+0x5b4cc>
   62930:	ldr	r1, [pc, #944]	; 62ce8 <blkid_probe_get_size@plt+0x5b7d0>
   62934:	mov	r0, r4
   62938:	add	r1, pc, r1
   6293c:	bl	7314 <strcmp@plt>
   62940:	cmp	r0, #0
   62944:	beq	62a08 <blkid_probe_get_size@plt+0x5b4f0>
   62948:	ldr	r1, [pc, #924]	; 62cec <blkid_probe_get_size@plt+0x5b7d4>
   6294c:	mov	r0, r4
   62950:	add	r1, pc, r1
   62954:	bl	7314 <strcmp@plt>
   62958:	subs	r6, r0, #0
   6295c:	beq	62a34 <blkid_probe_get_size@plt+0x5b51c>
   62960:	ldr	r1, [pc, #904]	; 62cf0 <blkid_probe_get_size@plt+0x5b7d8>
   62964:	mov	r0, r4
   62968:	add	r1, pc, r1
   6296c:	bl	7314 <strcmp@plt>
   62970:	subs	r6, r0, #0
   62974:	beq	62a14 <blkid_probe_get_size@plt+0x5b4fc>
   62978:	ldr	r1, [pc, #884]	; 62cf4 <blkid_probe_get_size@plt+0x5b7dc>
   6297c:	mov	r0, r4
   62980:	add	r1, pc, r1
   62984:	bl	7314 <strcmp@plt>
   62988:	subs	r1, r0, #0
   6298c:	beq	62b1c <blkid_probe_get_size@plt+0x5b604>
   62990:	ldr	r1, [pc, #864]	; 62cf8 <blkid_probe_get_size@plt+0x5b7e0>
   62994:	mov	r0, r4
   62998:	add	r1, pc, r1
   6299c:	bl	7314 <strcmp@plt>
   629a0:	cmp	r0, #0
   629a4:	beq	62b58 <blkid_probe_get_size@plt+0x5b640>
   629a8:	ldr	r1, [pc, #844]	; 62cfc <blkid_probe_get_size@plt+0x5b7e4>
   629ac:	mov	r0, r4
   629b0:	add	r1, pc, r1
   629b4:	bl	7314 <strcmp@plt>
   629b8:	subs	r6, r0, #0
   629bc:	movne	r6, #0
   629c0:	bne	629ec <blkid_probe_get_size@plt+0x5b4d4>
   629c4:	mov	r4, #0
   629c8:	str	r4, [sp, #20]
   629cc:	bl	3a708 <blkid_probe_get_size@plt+0x331f0>
   629d0:	cmp	r0, r4
   629d4:	ble	62c00 <blkid_probe_get_size@plt+0x5b6e8>
   629d8:	ldr	r0, [sp, #20]
   629dc:	bl	69f0 <free@plt>
   629e0:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   629e4:	bl	39990 <blkid_probe_get_size@plt+0x32478>
   629e8:	mov	r6, r0
   629ec:	ldr	r2, [sp, #28]
   629f0:	ldr	r3, [r5]
   629f4:	mov	r0, r6
   629f8:	cmp	r2, r3
   629fc:	bne	62cd8 <blkid_probe_get_size@plt+0x5b7c0>
   62a00:	add	sp, sp, #32
   62a04:	pop	{r4, r5, r6, pc}
   62a08:	bl	39944 <blkid_probe_get_size@plt+0x3242c>
   62a0c:	mov	r6, r0
   62a10:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62a14:	ldr	r4, [pc, #740]	; 62d00 <blkid_probe_get_size@plt+0x5b7e8>
   62a18:	add	r4, pc, r4
   62a1c:	ldr	r3, [r4, #4]
   62a20:	cmp	r3, #0
   62a24:	blt	62b94 <blkid_probe_get_size@plt+0x5b67c>
   62a28:	movne	r6, #1
   62a2c:	moveq	r6, #0
   62a30:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62a34:	ldr	r3, [pc, #712]	; 62d04 <blkid_probe_get_size@plt+0x5b7ec>
   62a38:	add	r3, pc, r3
   62a3c:	ldr	r3, [r3]
   62a40:	cmp	r3, #0
   62a44:	bge	62a28 <blkid_probe_get_size@plt+0x5b510>
   62a48:	add	r1, sp, #32
   62a4c:	ldr	r0, [pc, #692]	; 62d08 <blkid_probe_get_size@plt+0x5b7f0>
   62a50:	str	r6, [r1, #-8]!
   62a54:	add	r0, pc, r0
   62a58:	bl	2d618 <blkid_probe_get_size@plt+0x26100>
   62a5c:	ldr	r4, [sp, #24]
   62a60:	cmp	r0, #0
   62a64:	blt	62a78 <blkid_probe_get_size@plt+0x5b560>
   62a68:	mov	r0, r4
   62a6c:	bl	39d54 <blkid_probe_get_size@plt+0x3283c>
   62a70:	cmp	r0, #0
   62a74:	movgt	r6, #1
   62a78:	ldr	r3, [pc, #652]	; 62d0c <blkid_probe_get_size@plt+0x5b7f4>
   62a7c:	mov	r0, r4
   62a80:	add	r3, pc, r3
   62a84:	str	r6, [r3]
   62a88:	bl	69f0 <free@plt>
   62a8c:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62a90:	ldr	r2, [pc, #632]	; 62d10 <blkid_probe_get_size@plt+0x5b7f8>
   62a94:	ldr	r1, [pc, #632]	; 62d14 <blkid_probe_get_size@plt+0x5b7fc>
   62a98:	add	r2, pc, r2
   62a9c:	add	r2, r2, #1904	; 0x770
   62aa0:	add	r2, r2, #12
   62aa4:	str	r2, [sp]
   62aa8:	ldr	r2, [pc, #616]	; 62d18 <blkid_probe_get_size@plt+0x5b800>
   62aac:	ldr	r3, [pc, #616]	; 62d1c <blkid_probe_get_size@plt+0x5b804>
   62ab0:	add	r2, pc, r2
   62ab4:	add	r1, pc, r1
   62ab8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   62abc:	ldr	r3, [pc, #604]	; 62d20 <blkid_probe_get_size@plt+0x5b808>
   62ac0:	ldr	r2, [pc, #604]	; 62d24 <blkid_probe_get_size@plt+0x5b80c>
   62ac4:	add	r3, pc, r3
   62ac8:	add	r3, r3, #1904	; 0x770
   62acc:	ldr	r1, [pc, #596]	; 62d28 <blkid_probe_get_size@plt+0x5b810>
   62ad0:	add	r3, r3, #12
   62ad4:	str	r3, [sp]
   62ad8:	mov	r0, r4
   62adc:	ldr	r3, [pc, #584]	; 62d2c <blkid_probe_get_size@plt+0x5b814>
   62ae0:	add	r2, pc, r2
   62ae4:	add	r1, pc, r1
   62ae8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   62aec:	ldr	r2, [pc, #572]	; 62d30 <blkid_probe_get_size@plt+0x5b818>
   62af0:	ldr	r1, [pc, #572]	; 62d34 <blkid_probe_get_size@plt+0x5b81c>
   62af4:	add	r2, pc, r2
   62af8:	add	r2, r2, #1904	; 0x770
   62afc:	add	r2, r2, #12
   62b00:	str	r2, [sp]
   62b04:	ldr	r2, [pc, #556]	; 62d38 <blkid_probe_get_size@plt+0x5b820>
   62b08:	ldr	r3, [pc, #556]	; 62d3c <blkid_probe_get_size@plt+0x5b824>
   62b0c:	add	r2, pc, r2
   62b10:	add	r1, pc, r1
   62b14:	mov	r0, #0
   62b18:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   62b1c:	ldr	r4, [pc, #540]	; 62d40 <blkid_probe_get_size@plt+0x5b828>
   62b20:	add	r4, pc, r4
   62b24:	ldr	r6, [r4, #8]
   62b28:	cmp	r6, #0
   62b2c:	blt	62b3c <blkid_probe_get_size@plt+0x5b624>
   62b30:	adds	r6, r6, #0
   62b34:	movne	r6, #1
   62b38:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62b3c:	ldr	r0, [pc, #512]	; 62d44 <blkid_probe_get_size@plt+0x5b82c>
   62b40:	add	r0, pc, r0
   62b44:	bl	6ff0 <access@plt>
   62b48:	mvn	r6, r0
   62b4c:	lsr	r6, r6, #31
   62b50:	str	r6, [r4, #8]
   62b54:	b	62b30 <blkid_probe_get_size@plt+0x5b618>
   62b58:	ldr	r3, [pc, #488]	; 62d48 <blkid_probe_get_size@plt+0x5b830>
   62b5c:	add	r3, pc, r3
   62b60:	ldr	r6, [r3, #12]
   62b64:	cmp	r6, #0
   62b68:	bge	62b30 <blkid_probe_get_size@plt+0x5b618>
   62b6c:	ldr	r0, [pc, #472]	; 62d4c <blkid_probe_get_size@plt+0x5b834>
   62b70:	mov	r1, #0
   62b74:	add	r0, pc, r0
   62b78:	bl	6ff0 <access@plt>
   62b7c:	ldr	r3, [pc, #460]	; 62d50 <blkid_probe_get_size@plt+0x5b838>
   62b80:	add	r3, pc, r3
   62b84:	clz	r6, r0
   62b88:	lsr	r6, r6, #5
   62b8c:	str	r6, [r3, #12]
   62b90:	b	62b30 <blkid_probe_get_size@plt+0x5b618>
   62b94:	mov	r2, #9
   62b98:	ldr	r1, [pc, #436]	; 62d54 <blkid_probe_get_size@plt+0x5b83c>
   62b9c:	mov	r0, #16
   62ba0:	bl	6fd8 <socket@plt>
   62ba4:	cmp	r0, #0
   62ba8:	bge	62be4 <blkid_probe_get_size@plt+0x5b6cc>
   62bac:	bl	732c <__errno_location@plt>
   62bb0:	ldr	r1, [r0]
   62bb4:	cmp	r1, #93	; 0x5d
   62bb8:	beq	62c70 <blkid_probe_get_size@plt+0x5b758>
   62bbc:	cmp	r1, #97	; 0x61
   62bc0:	beq	62c70 <blkid_probe_get_size@plt+0x5b758>
   62bc4:	cmp	r1, #1
   62bc8:	beq	62c70 <blkid_probe_get_size@plt+0x5b758>
   62bcc:	ldr	r3, [pc, #388]	; 62d58 <blkid_probe_get_size@plt+0x5b840>
   62bd0:	mov	r2, #1
   62bd4:	add	r3, pc, r3
   62bd8:	mov	r6, r2
   62bdc:	str	r2, [r3, #4]
   62be0:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62be4:	mov	r3, #1
   62be8:	str	r3, [r4, #4]
   62bec:	bl	2d734 <blkid_probe_get_size@plt+0x2621c>
   62bf0:	ldr	r6, [r4, #4]
   62bf4:	adds	r6, r6, #0
   62bf8:	movne	r6, #1
   62bfc:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62c00:	ldr	r0, [pc, #340]	; 62d5c <blkid_probe_get_size@plt+0x5b844>
   62c04:	mov	r1, r4
   62c08:	add	r0, pc, r0
   62c0c:	bl	6ff0 <access@plt>
   62c10:	cmp	r0, #0
   62c14:	blt	629d8 <blkid_probe_get_size@plt+0x5b4c0>
   62c18:	ldr	r3, [pc, #320]	; 62d60 <blkid_probe_get_size@plt+0x5b848>
   62c1c:	ldr	ip, [pc, #320]	; 62d64 <blkid_probe_get_size@plt+0x5b84c>
   62c20:	add	r3, pc, r3
   62c24:	add	ip, pc, ip
   62c28:	str	ip, [sp]
   62c2c:	add	r3, r3, #1952	; 0x7a0
   62c30:	add	ip, sp, #24
   62c34:	str	ip, [sp, #8]
   62c38:	add	ip, sp, #20
   62c3c:	ldm	r3, {r0, r1, r2, r3}
   62c40:	str	ip, [sp, #4]
   62c44:	bl	626b0 <blkid_probe_get_size@plt+0x5b198>
   62c48:	cmp	r0, #0
   62c4c:	blt	629d8 <blkid_probe_get_size@plt+0x5b4c0>
   62c50:	ldr	r3, [sp, #24]
   62c54:	ldr	r0, [sp, #20]
   62c58:	cmp	r3, #1
   62c5c:	bne	629dc <blkid_probe_get_size@plt+0x5b4c4>
   62c60:	ldrb	r6, [r0]
   62c64:	adds	r6, r6, #0
   62c68:	movne	r6, #1
   62c6c:	b	629dc <blkid_probe_get_size@plt+0x5b4c4>
   62c70:	ldr	r3, [pc, #240]	; 62d68 <blkid_probe_get_size@plt+0x5b850>
   62c74:	ldr	r4, [pc, #240]	; 62d6c <blkid_probe_get_size@plt+0x5b854>
   62c78:	add	r3, pc, r3
   62c7c:	add	r4, pc, r4
   62c80:	ldr	r3, [r3]
   62c84:	mov	r2, #0
   62c88:	cmp	r3, #6
   62c8c:	str	r2, [r4, #4]
   62c90:	ble	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62c94:	ldr	r3, [pc, #212]	; 62d70 <blkid_probe_get_size@plt+0x5b858>
   62c98:	ldr	r2, [pc, #212]	; 62d74 <blkid_probe_get_size@plt+0x5b85c>
   62c9c:	add	r3, pc, r3
   62ca0:	add	r2, pc, r2
   62ca4:	str	r2, [sp, #4]
   62ca8:	add	r3, r3, #1936	; 0x790
   62cac:	ldr	r2, [pc, #196]	; 62d78 <blkid_probe_get_size@plt+0x5b860>
   62cb0:	add	r3, r3, #4
   62cb4:	str	r3, [sp]
   62cb8:	add	r2, pc, r2
   62cbc:	mov	r3, #81	; 0x51
   62cc0:	mov	r0, #7
   62cc4:	bl	3a348 <blkid_probe_get_size@plt+0x32e30>
   62cc8:	ldr	r6, [r4, #4]
   62ccc:	adds	r6, r6, #0
   62cd0:	movne	r6, #1
   62cd4:	b	629ec <blkid_probe_get_size@plt+0x5b4d4>
   62cd8:	bl	6fb4 <__stack_chk_fail@plt>
   62cdc:	andeq	r5, r3, r8, lsl #5
   62ce0:	andeq	r0, r0, ip, lsr r4
   62ce4:	andeq	r5, r0, r4, lsl r4
   62ce8:			; <UNDEFINED> instruction: 0x000054b8
   62cec:	andeq	r5, r1, r4, ror #11
   62cf0:	andeq	r5, r1, r0, lsl #12
   62cf4:	andeq	r5, r1, r4, lsr #12
   62cf8:	andeq	r5, r1, ip, lsr #12
   62cfc:	andeq	r5, r1, r0, asr #12
   62d00:	muleq	r3, r4, r7
   62d04:	andeq	r5, r3, r4, ror r7
   62d08:	andeq	r5, r1, ip, ror #9
   62d0c:	andeq	r5, r3, ip, lsr #14
   62d10:	andeq	r3, r1, r8, lsl #20
   62d14:	andeq	r0, r1, r8, ror sp
   62d18:	andeq	ip, r0, r0, ror #30
   62d1c:	andeq	r0, r0, sp, ror #2
   62d20:	ldrdeq	r3, [r1], -ip
   62d24:	andeq	ip, r0, r0, lsr pc
   62d28:	andeq	r4, r1, ip, asr #3
   62d2c:	andeq	r0, r0, lr, ror #2
   62d30:	andeq	r3, r1, ip, lsr #19
   62d34:	andeq	r5, r1, r4, lsl #8
   62d38:	andeq	ip, r0, r4, lsl #30
   62d3c:	andeq	r0, r0, pc, ror #2
   62d40:	andeq	r5, r3, ip, lsl #13
   62d44:	andeq	r5, r1, r8, ror #8
   62d48:	andeq	r5, r3, r0, asr r6
   62d4c:	andeq	r5, r1, r8, asr r4
   62d50:	andeq	r5, r3, ip, lsr #12
   62d54:	andeq	r0, r8, r3, lsl #16
   62d58:	ldrdeq	r5, [r3], -r8
   62d5c:	andeq	r7, r0, r0, asr pc
   62d60:	andeq	r3, r1, r0, lsl #17
   62d64:	ldrdeq	r5, [r1], -ip
   62d68:	andeq	r5, r3, r4, asr #9
   62d6c:	andeq	r5, r3, r0, lsr r5
   62d70:	andeq	r3, r1, r4, lsl #16
   62d74:	andeq	r5, r1, ip, ror #5
   62d78:			; <UNDEFINED> instruction: 0x000152b8
   62d7c:	ldr	r3, [pc, #836]	; 630c8 <blkid_probe_get_size@plt+0x5bbb0>
   62d80:	ldr	ip, [pc, #836]	; 630cc <blkid_probe_get_size@plt+0x5bbb4>
   62d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   62d88:	add	r3, pc, r3
   62d8c:	sub	sp, sp, #44	; 0x2c
   62d90:	subs	sl, r0, #0
   62d94:	str	r2, [sp, #12]
   62d98:	ldr	r8, [r3, ip]
   62d9c:	ldr	r3, [r8]
   62da0:	str	r3, [sp, #36]	; 0x24
   62da4:	beq	62f70 <blkid_probe_get_size@plt+0x5ba58>
   62da8:	mov	r9, r1
   62dac:	mov	r1, #32768	; 0x8000
   62db0:	bl	6a08 <acl_get_file@plt>
   62db4:	cmp	r0, #0
   62db8:	mov	r4, r0
   62dbc:	str	r0, [sp, #20]
   62dc0:	beq	62eb8 <blkid_probe_get_size@plt+0x5b9a0>
   62dc4:	add	r6, sp, #28
   62dc8:	mov	r2, r6
   62dcc:	mov	r1, #0
   62dd0:	bl	70bc <acl_get_entry@plt>
   62dd4:	mov	r5, #0
   62dd8:	cmp	r0, #0
   62ddc:	ble	62e3c <blkid_probe_get_size@plt+0x5b924>
   62de0:	add	r7, sp, #32
   62de4:	b	62e00 <blkid_probe_get_size@plt+0x5b8e8>
   62de8:	mov	r2, r6
   62dec:	mov	r1, #1
   62df0:	mov	r0, r4
   62df4:	bl	70bc <acl_get_entry@plt>
   62df8:	cmp	r0, #0
   62dfc:	ble	62e3c <blkid_probe_get_size@plt+0x5b924>
   62e00:	mov	r1, r7
   62e04:	ldr	r0, [sp, #28]
   62e08:	bl	7008 <acl_get_tag_type@plt>
   62e0c:	cmp	r0, #0
   62e10:	blt	62e44 <blkid_probe_get_size@plt+0x5b92c>
   62e14:	ldr	r3, [sp, #32]
   62e18:	cmp	r3, #2
   62e1c:	bne	62de8 <blkid_probe_get_size@plt+0x5b8d0>
   62e20:	ldr	r1, [sp, #28]
   62e24:	mov	r0, r4
   62e28:	bl	6db0 <acl_delete_entry@plt>
   62e2c:	cmp	r0, #0
   62e30:	blt	62e44 <blkid_probe_get_size@plt+0x5b92c>
   62e34:	mov	r5, #1
   62e38:	b	62de8 <blkid_probe_get_size@plt+0x5b8d0>
   62e3c:	cmp	r0, #0
   62e40:	beq	62e58 <blkid_probe_get_size@plt+0x5b940>
   62e44:	bl	732c <__errno_location@plt>
   62e48:	ldr	r5, [r0]
   62e4c:	rsb	r5, r5, #0
   62e50:	cmp	r5, #0
   62e54:	blt	62e94 <blkid_probe_get_size@plt+0x5b97c>
   62e58:	ldr	r4, [sp, #12]
   62e5c:	cmp	r4, #0
   62e60:	moveq	r9, #0
   62e64:	andne	r9, r9, #1
   62e68:	cmp	r5, #0
   62e6c:	beq	62f60 <blkid_probe_get_size@plt+0x5ba48>
   62e70:	cmp	r9, #0
   62e74:	bne	62ecc <blkid_probe_get_size@plt+0x5b9b4>
   62e78:	add	r0, sp, #20
   62e7c:	bl	6f3c <acl_calc_mask@plt>
   62e80:	cmp	r0, #0
   62e84:	bge	6300c <blkid_probe_get_size@plt+0x5baf4>
   62e88:	bl	732c <__errno_location@plt>
   62e8c:	ldr	r5, [r0]
   62e90:	rsb	r5, r5, #0
   62e94:	ldr	r0, [sp, #20]
   62e98:	bl	6d8c <acl_free@plt>
   62e9c:	ldr	r2, [sp, #36]	; 0x24
   62ea0:	ldr	r3, [r8]
   62ea4:	mov	r0, r5
   62ea8:	cmp	r2, r3
   62eac:	bne	630c4 <blkid_probe_get_size@plt+0x5bbac>
   62eb0:	add	sp, sp, #44	; 0x2c
   62eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   62eb8:	bl	732c <__errno_location@plt>
   62ebc:	ldr	r5, [r0]
   62ec0:	rsb	r5, r5, #0
   62ec4:	b	62e9c <blkid_probe_get_size@plt+0x5b984>
   62ec8:	mov	r9, r5
   62ecc:	ldr	r5, [sp, #20]
   62ed0:	cmp	r5, #0
   62ed4:	beq	6307c <blkid_probe_get_size@plt+0x5bb64>
   62ed8:	mov	r2, r6
   62edc:	mov	r1, #0
   62ee0:	mov	r0, r5
   62ee4:	bl	70bc <acl_get_entry@plt>
   62ee8:	cmp	r0, #0
   62eec:	ble	63028 <blkid_probe_get_size@plt+0x5bb10>
   62ef0:	add	r7, sp, #32
   62ef4:	b	62f10 <blkid_probe_get_size@plt+0x5b9f8>
   62ef8:	mov	r2, r6
   62efc:	mov	r1, #1
   62f00:	mov	r0, r5
   62f04:	bl	70bc <acl_get_entry@plt>
   62f08:	cmp	r0, #0
   62f0c:	ble	63028 <blkid_probe_get_size@plt+0x5bb10>
   62f10:	mov	r1, r7
   62f14:	ldr	r0, [sp, #28]
   62f18:	bl	7008 <acl_get_tag_type@plt>
   62f1c:	cmp	r0, #0
   62f20:	blt	62f9c <blkid_probe_get_size@plt+0x5ba84>
   62f24:	ldr	r3, [sp, #32]
   62f28:	cmp	r3, #2
   62f2c:	bne	62ef8 <blkid_probe_get_size@plt+0x5b9e0>
   62f30:	ldr	r0, [sp, #28]
   62f34:	bl	73d4 <acl_get_qualifier@plt>
   62f38:	subs	r3, r0, #0
   62f3c:	beq	62f9c <blkid_probe_get_size@plt+0x5ba84>
   62f40:	ldr	fp, [r3]
   62f44:	bl	6d8c <acl_free@plt>
   62f48:	cmp	r4, fp
   62f4c:	bne	62ef8 <blkid_probe_get_size@plt+0x5b9e0>
   62f50:	ldr	r0, [sp, #28]
   62f54:	mov	r5, #1
   62f58:	str	r0, [sp, #24]
   62f5c:	b	62fbc <blkid_probe_get_size@plt+0x5baa4>
   62f60:	cmp	r9, #0
   62f64:	bne	62ec8 <blkid_probe_get_size@plt+0x5b9b0>
   62f68:	mov	r5, #0
   62f6c:	b	62e94 <blkid_probe_get_size@plt+0x5b97c>
   62f70:	ldr	r2, [pc, #344]	; 630d0 <blkid_probe_get_size@plt+0x5bbb8>
   62f74:	ldr	r1, [pc, #344]	; 630d4 <blkid_probe_get_size@plt+0x5bbbc>
   62f78:	add	r2, pc, r2
   62f7c:	add	r2, r2, #1968	; 0x7b0
   62f80:	str	r2, [sp]
   62f84:	ldr	r2, [pc, #332]	; 630d8 <blkid_probe_get_size@plt+0x5bbc0>
   62f88:	mov	r3, #60	; 0x3c
   62f8c:	add	r2, pc, r2
   62f90:	add	r1, pc, r1
   62f94:	mov	r0, #1
   62f98:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   62f9c:	bl	732c <__errno_location@plt>
   62fa0:	ldr	r5, [r0]
   62fa4:	rsb	r5, r5, #0
   62fa8:	cmp	r5, #0
   62fac:	blt	62e94 <blkid_probe_get_size@plt+0x5b97c>
   62fb0:	beq	63030 <blkid_probe_get_size@plt+0x5bb18>
   62fb4:	ldr	r0, [sp, #24]
   62fb8:	add	r7, sp, #32
   62fbc:	mov	r1, r7
   62fc0:	bl	6f9c <acl_get_permset@plt>
   62fc4:	cmp	r0, #0
   62fc8:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   62fcc:	mov	r1, #4
   62fd0:	ldr	r0, [sp, #32]
   62fd4:	bl	72fc <acl_get_perm@plt>
   62fd8:	subs	r4, r0, #0
   62fdc:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   62fe0:	mov	r1, #2
   62fe4:	ldr	r0, [sp, #32]
   62fe8:	bl	72fc <acl_get_perm@plt>
   62fec:	cmp	r0, #0
   62ff0:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   62ff4:	cmp	r0, #0
   62ff8:	cmpne	r4, #0
   62ffc:	beq	630ac <blkid_probe_get_size@plt+0x5bb94>
   63000:	cmp	r9, #0
   63004:	beq	62e94 <blkid_probe_get_size@plt+0x5b97c>
   63008:	b	62e78 <blkid_probe_get_size@plt+0x5b960>
   6300c:	mov	r0, sl
   63010:	ldr	r2, [sp, #20]
   63014:	mov	r1, #32768	; 0x8000
   63018:	bl	7320 <acl_set_file@plt>
   6301c:	cmp	r0, #0
   63020:	bge	62f68 <blkid_probe_get_size@plt+0x5ba50>
   63024:	b	62e88 <blkid_probe_get_size@plt+0x5b970>
   63028:	cmp	r0, #0
   6302c:	bne	62f9c <blkid_probe_get_size@plt+0x5ba84>
   63030:	add	r1, sp, #24
   63034:	add	r0, sp, #20
   63038:	bl	6de0 <acl_create_entry@plt>
   6303c:	cmp	r0, #0
   63040:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   63044:	mov	r1, #2
   63048:	ldr	r0, [sp, #24]
   6304c:	bl	6978 <acl_set_tag_type@plt>
   63050:	cmp	r0, #0
   63054:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   63058:	add	r1, sp, #12
   6305c:	ldr	r0, [sp, #24]
   63060:	bl	690c <acl_set_qualifier@plt>
   63064:	cmp	r0, #0
   63068:	blt	62e88 <blkid_probe_get_size@plt+0x5b970>
   6306c:	ldr	r0, [sp, #24]
   63070:	mov	r5, #0
   63074:	add	r7, sp, #32
   63078:	b	62fbc <blkid_probe_get_size@plt+0x5baa4>
   6307c:	ldr	r3, [pc, #88]	; 630dc <blkid_probe_get_size@plt+0x5bbc4>
   63080:	ldr	r2, [pc, #88]	; 630e0 <blkid_probe_get_size@plt+0x5bbc8>
   63084:	add	r3, pc, r3
   63088:	add	r3, r3, #1968	; 0x7b0
   6308c:	ldr	r1, [pc, #80]	; 630e4 <blkid_probe_get_size@plt+0x5bbcc>
   63090:	add	r3, r3, #12
   63094:	str	r3, [sp]
   63098:	mov	r0, r5
   6309c:	mov	r3, #17
   630a0:	add	r2, pc, r2
   630a4:	add	r1, pc, r1
   630a8:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   630ac:	mov	r1, #6
   630b0:	ldr	r0, [sp, #32]
   630b4:	bl	70ec <acl_add_perm@plt>
   630b8:	cmp	r0, #0
   630bc:	bge	62e78 <blkid_probe_get_size@plt+0x5b960>
   630c0:	b	62e88 <blkid_probe_get_size@plt+0x5b970>
   630c4:	bl	6fb4 <__stack_chk_fail@plt>
   630c8:	andeq	r4, r3, r0, ror #27
   630cc:	andeq	r0, r0, ip, lsr r4
   630d0:	andeq	r3, r1, r8, lsr #10
   630d4:	andeq	r8, r0, r4, lsl #7
   630d8:	andeq	r5, r1, r0, lsl #1
   630dc:	andeq	r3, r1, ip, lsl r4
   630e0:	andeq	r4, r1, r8, lsl #31
   630e4:	andeq	r4, r1, r0, lsr #31
   630e8:	ldr	r3, [pc, #788]	; 63404 <blkid_probe_get_size@plt+0x5beec>
   630ec:	ldr	r2, [pc, #788]	; 63408 <blkid_probe_get_size@plt+0x5bef0>
   630f0:	add	r3, pc, r3
   630f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   630f8:	add	fp, sp, #32
   630fc:	sub	sp, sp, #60	; 0x3c
   63100:	ldr	r2, [r3, r2]
   63104:	mov	r9, r0
   63108:	ldr	r0, [pc, #764]	; 6340c <blkid_probe_get_size@plt+0x5bef4>
   6310c:	ldr	r3, [r2]
   63110:	add	r0, pc, r0
   63114:	str	r2, [fp, #-56]	; 0xffffffc8
   63118:	mov	r7, r1
   6311c:	str	r3, [fp, #-40]	; 0xffffffd8
   63120:	bl	2e978 <blkid_probe_get_size@plt+0x27460>
   63124:	cmp	r0, #0
   63128:	beq	633dc <blkid_probe_get_size@plt+0x5bec4>
   6312c:	ldr	r0, [pc, #732]	; 63410 <blkid_probe_get_size@plt+0x5bef8>
   63130:	ldr	r5, [pc, #732]	; 63414 <blkid_probe_get_size@plt+0x5befc>
   63134:	add	r0, pc, r0
   63138:	bl	74dc <__tls_get_addr@plt>
   6313c:	add	r5, r5, r0
   63140:	ldr	r4, [r5, #4]
   63144:	cmp	r4, #0
   63148:	blt	633bc <blkid_probe_get_size@plt+0x5bea4>
   6314c:	cmp	r4, #0
   63150:	moveq	r6, #12
   63154:	beq	63168 <blkid_probe_get_size@plt+0x5bc50>
   63158:	cmp	r4, #1
   6315c:	movgt	r4, #1
   63160:	movgt	r6, #0
   63164:	ble	6338c <blkid_probe_get_size@plt+0x5be74>
   63168:	cmp	r9, #0
   6316c:	bne	63364 <blkid_probe_get_size@plt+0x5be4c>
   63170:	ldr	r5, [pc, #672]	; 63418 <blkid_probe_get_size@plt+0x5bf00>
   63174:	add	r5, pc, r5
   63178:	ldr	r1, [pc, #668]	; 6341c <blkid_probe_get_size@plt+0x5bf04>
   6317c:	mov	r0, r5
   63180:	add	r1, pc, r1
   63184:	bl	738c <fopen64@plt>
   63188:	subs	r5, r0, #0
   6318c:	beq	6334c <blkid_probe_get_size@plt+0x5be34>
   63190:	mov	r1, #2
   63194:	bl	68f4 <__fsetlocking@plt>
   63198:	ldr	r3, [pc, #640]	; 63420 <blkid_probe_get_size@plt+0x5bf08>
   6319c:	ldr	sl, [pc, #640]	; 63424 <blkid_probe_get_size@plt+0x5bf0c>
   631a0:	add	r3, pc, r3
   631a4:	str	r3, [fp, #-76]	; 0xffffffb4
   631a8:	ldr	r3, [pc, #632]	; 63428 <blkid_probe_get_size@plt+0x5bf10>
   631ac:	add	sl, pc, sl
   631b0:	add	r3, pc, r3
   631b4:	str	r3, [fp, #-80]	; 0xffffffb0
   631b8:	ldr	r3, [pc, #620]	; 6342c <blkid_probe_get_size@plt+0x5bf14>
   631bc:	str	r7, [fp, #-72]	; 0xffffffb8
   631c0:	add	r3, pc, r3
   631c4:	str	r3, [fp, #-68]	; 0xffffffbc
   631c8:	sub	r3, fp, #52	; 0x34
   631cc:	str	r3, [fp, #-60]	; 0xffffffc4
   631d0:	mov	r3, #0
   631d4:	mov	r1, r3
   631d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   631dc:	mov	r0, r5
   631e0:	str	r3, [fp, #-52]	; 0xffffffcc
   631e4:	bl	487fc <blkid_probe_get_size@plt+0x412e4>
   631e8:	cmp	r0, #0
   631ec:	blt	633d4 <blkid_probe_get_size@plt+0x5bebc>
   631f0:	ldr	r8, [fp, #-52]	; 0xffffffcc
   631f4:	beq	633e8 <blkid_probe_get_size@plt+0x5bed0>
   631f8:	cmp	r4, #0
   631fc:	beq	632a0 <blkid_probe_get_size@plt+0x5bd88>
   63200:	mov	r2, #2
   63204:	ldr	r1, [fp, #-68]	; 0xffffffbc
   63208:	mov	r0, r8
   6320c:	bl	6a5c <strncmp@plt>
   63210:	cmp	r0, #0
   63214:	bne	63340 <blkid_probe_get_size@plt+0x5be28>
   63218:	adds	r0, r8, #2
   6321c:	beq	63340 <blkid_probe_get_size@plt+0x5be28>
   63220:	mov	r1, #58	; 0x3a
   63224:	bl	74c4 <strchr@plt>
   63228:	subs	r3, r0, #0
   6322c:	str	r3, [fp, #-64]	; 0xffffffc0
   63230:	beq	63340 <blkid_probe_get_size@plt+0x5be28>
   63234:	ldr	r3, [fp, #-64]	; 0xffffffc0
   63238:	ldr	r7, [fp, #-72]	; 0xffffffb8
   6323c:	add	r0, r3, #1
   63240:	bl	74e8 <strdup@plt>
   63244:	subs	r4, r0, #0
   63248:	mvneq	r8, #11
   6324c:	beq	63270 <blkid_probe_get_size@plt+0x5bd58>
   63250:	ldr	r1, [pc, #472]	; 63430 <blkid_probe_get_size@plt+0x5bf18>
   63254:	mov	r8, #0
   63258:	add	r1, pc, r1
   6325c:	bl	3d818 <blkid_probe_get_size@plt+0x36300>
   63260:	cmp	r0, #0
   63264:	movne	r3, #0
   63268:	strbne	r3, [r0]
   6326c:	str	r4, [r7]
   63270:	ldr	r0, [fp, #-52]	; 0xffffffcc
   63274:	bl	69f0 <free@plt>
   63278:	mov	r0, r5
   6327c:	bl	2d2dc <blkid_probe_get_size@plt+0x25dc4>
   63280:	ldr	r3, [fp, #-56]	; 0xffffffc8
   63284:	ldr	r2, [fp, #-40]	; 0xffffffd8
   63288:	mov	r0, r8
   6328c:	ldr	r3, [r3]
   63290:	cmp	r2, r3
   63294:	bne	63400 <blkid_probe_get_size@plt+0x5bee8>
   63298:	sub	sp, fp, #32
   6329c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   632a0:	mov	r1, #58	; 0x3a
   632a4:	mov	r0, r8
   632a8:	bl	74c4 <strchr@plt>
   632ac:	cmp	r0, #0
   632b0:	beq	63340 <blkid_probe_get_size@plt+0x5be28>
   632b4:	add	r9, r0, #1
   632b8:	mov	r0, r9
   632bc:	mov	r1, #58	; 0x3a
   632c0:	bl	74c4 <strchr@plt>
   632c4:	subs	r3, r0, #0
   632c8:	str	r3, [fp, #-64]	; 0xffffffc0
   632cc:	beq	63340 <blkid_probe_get_size@plt+0x5be28>
   632d0:	sub	r8, fp, #48	; 0x30
   632d4:	sub	r7, fp, #44	; 0x2c
   632d8:	strb	r4, [r3]
   632dc:	mov	r1, r8
   632e0:	mov	r0, r7
   632e4:	mov	r3, r4
   632e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   632ec:	str	r9, [fp, #-44]	; 0xffffffd4
   632f0:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   632f4:	cmp	r0, #0
   632f8:	ldrne	r9, [fp, #-80]	; 0xffffffb0
   632fc:	beq	6333c <blkid_probe_get_size@plt+0x5be24>
   63300:	ldr	r3, [fp, #-48]	; 0xffffffd0
   63304:	cmp	r3, r6
   63308:	bne	63320 <blkid_probe_get_size@plt+0x5be08>
   6330c:	mov	r2, r6
   63310:	mov	r1, r9
   63314:	bl	7398 <memcmp@plt>
   63318:	cmp	r0, #0
   6331c:	beq	63234 <blkid_probe_get_size@plt+0x5bd1c>
   63320:	mov	r3, #0
   63324:	mov	r2, sl
   63328:	mov	r1, r8
   6332c:	mov	r0, r7
   63330:	bl	39604 <blkid_probe_get_size@plt+0x320ec>
   63334:	cmp	r0, #0
   63338:	bne	63300 <blkid_probe_get_size@plt+0x5bde8>
   6333c:	ldr	r8, [fp, #-52]	; 0xffffffcc
   63340:	mov	r0, r8
   63344:	bl	69f0 <free@plt>
   63348:	b	631d0 <blkid_probe_get_size@plt+0x5bcb8>
   6334c:	bl	732c <__errno_location@plt>
   63350:	ldr	r8, [r0]
   63354:	cmp	r8, #2
   63358:	beq	633f8 <blkid_probe_get_size@plt+0x5bee0>
   6335c:	rsb	r8, r8, #0
   63360:	b	63278 <blkid_probe_get_size@plt+0x5bd60>
   63364:	sub	sp, sp, #40	; 0x28
   63368:	ldr	r3, [pc, #196]	; 63434 <blkid_probe_get_size@plt+0x5bf1c>
   6336c:	add	r5, sp, #8
   63370:	mov	r1, #1
   63374:	mov	r0, r5
   63378:	str	r1, [sp]
   6337c:	add	r3, pc, r3
   63380:	mov	r2, #26
   63384:	bl	7404 <__sprintf_chk@plt>
   63388:	b	63178 <blkid_probe_get_size@plt+0x5bc60>
   6338c:	ldr	r1, [pc, #164]	; 63438 <blkid_probe_get_size@plt+0x5bf20>
   63390:	add	r1, pc, r1
   63394:	mov	r0, r1
   63398:	bl	397b8 <blkid_probe_get_size@plt+0x322a0>
   6339c:	cmp	r0, #0
   633a0:	moveq	r4, #1
   633a4:	movne	r4, #0
   633a8:	moveq	r6, #0
   633ac:	movne	r6, #12
   633b0:	cmp	r9, #0
   633b4:	beq	63170 <blkid_probe_get_size@plt+0x5bc58>
   633b8:	b	63364 <blkid_probe_get_size@plt+0x5be4c>
   633bc:	bl	2e360 <blkid_probe_get_size@plt+0x26e48>
   633c0:	subs	r8, r0, #0
   633c4:	movlt	r5, #0
   633c8:	blt	63278 <blkid_probe_get_size@plt+0x5bd60>
   633cc:	ldr	r4, [r5, #4]
   633d0:	b	6314c <blkid_probe_get_size@plt+0x5bc34>
   633d4:	mov	r8, r0
   633d8:	b	63270 <blkid_probe_get_size@plt+0x5bd58>
   633dc:	mov	r5, r0
   633e0:	mvn	r8, #21
   633e4:	b	63278 <blkid_probe_get_size@plt+0x5bd60>
   633e8:	mov	r0, r8
   633ec:	bl	69f0 <free@plt>
   633f0:	mvn	r8, #60	; 0x3c
   633f4:	b	63278 <blkid_probe_get_size@plt+0x5bd60>
   633f8:	mvn	r8, #2
   633fc:	b	63278 <blkid_probe_get_size@plt+0x5bd60>
   63400:	bl	6fb4 <__stack_chk_fail@plt>
   63404:	andeq	r4, r3, r8, ror sl
   63408:	andeq	r0, r0, ip, lsr r4
   6340c:	andeq	sl, r0, r0, lsl #19
   63410:	andeq	r4, r3, r4, ror #28
   63414:	andeq	r0, r0, r4
   63418:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   6341c:	andeq	fp, r0, ip, lsl #4
   63420:			; <UNDEFINED> instruction: 0x000143b8
   63424:	andeq	r4, r1, ip, lsr #7
   63428:	andeq	sl, r0, r8, asr r9
   6342c:	andeq	r4, r1, ip, lsr #29
   63430:	andeq	r4, r1, r8, lsl lr
   63434:	andeq	r4, r1, r0, ror #25
   63438:	andeq	sl, r0, r0, lsl #14
   6343c:	ldr	r3, [pc, #960]	; 63804 <blkid_probe_get_size@plt+0x5c2ec>
   63440:	ldr	r2, [pc, #960]	; 63808 <blkid_probe_get_size@plt+0x5c2f0>
   63444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   63448:	add	r3, pc, r3
   6344c:	sub	sp, sp, #52	; 0x34
   63450:	subs	r5, r0, #0
   63454:	str	r1, [sp, #16]
   63458:	ldr	r2, [r3, r2]
   6345c:	str	r2, [sp, #20]
   63460:	ldr	r3, [r2]
   63464:	str	r3, [sp, #44]	; 0x2c
   63468:	beq	63738 <blkid_probe_get_size@plt+0x5c220>
   6346c:	ldr	r3, [sp, #16]
   63470:	cmp	r3, #0
   63474:	beq	63764 <blkid_probe_get_size@plt+0x5c24c>
   63478:	ldr	r1, [pc, #908]	; 6380c <blkid_probe_get_size@plt+0x5c2f4>
   6347c:	add	r1, pc, r1
   63480:	bl	6c9c <strspn@plt>
   63484:	ldr	r1, [pc, #900]	; 63810 <blkid_probe_get_size@plt+0x5c2f8>
   63488:	add	r1, pc, r1
   6348c:	add	r5, r5, r0
   63490:	mov	r0, r5
   63494:	bl	6c9c <strspn@plt>
   63498:	ldrb	r3, [r5, r0]
   6349c:	cmp	r3, #46	; 0x2e
   634a0:	beq	63588 <blkid_probe_get_size@plt+0x5c070>
   634a4:	cmp	r3, #45	; 0x2d
   634a8:	beq	634b4 <blkid_probe_get_size@plt+0x5bf9c>
   634ac:	cmp	r3, #58	; 0x3a
   634b0:	bne	63644 <blkid_probe_get_size@plt+0x5c12c>
   634b4:	mov	r0, #0
   634b8:	ldr	r7, [pc, #852]	; 63814 <blkid_probe_get_size@plt+0x5c2fc>
   634bc:	add	r1, sp, #36	; 0x24
   634c0:	mov	r4, r0
   634c4:	mov	sl, r0
   634c8:	mov	r9, r1
   634cc:	add	r7, pc, r7
   634d0:	add	fp, r5, r4
   634d4:	mov	r8, #0
   634d8:	str	r3, [sp, #24]
   634dc:	add	r3, r4, #2
   634e0:	strh	r0, [sp, #40]	; 0x28
   634e4:	str	r0, [sp, #36]	; 0x24
   634e8:	str	r1, [sp, #28]
   634ec:	str	r3, [sp, #12]
   634f0:	ldrb	r6, [fp], #1
   634f4:	cmp	r6, #0
   634f8:	beq	6363c <blkid_probe_get_size@plt+0x5c124>
   634fc:	mov	r1, r6
   63500:	mov	r0, r7
   63504:	bl	74c4 <strchr@plt>
   63508:	cmp	r0, #0
   6350c:	beq	6363c <blkid_probe_get_size@plt+0x5c124>
   63510:	cmp	r0, r7
   63514:	bcc	63694 <blkid_probe_get_size@plt+0x5c17c>
   63518:	sub	r0, r0, r7
   6351c:	cmp	r0, #15
   63520:	bls	63530 <blkid_probe_get_size@plt+0x5c018>
   63524:	sub	r0, r0, #6
   63528:	cmp	r0, #15
   6352c:	bhi	636c4 <blkid_probe_get_size@plt+0x5c1ac>
   63530:	ldrb	r3, [r9]
   63534:	ldr	r2, [sp, #12]
   63538:	add	r4, r4, #1
   6353c:	cmp	r4, r2
   63540:	add	r0, r0, r3, lsl #4
   63544:	mov	r8, #1
   63548:	strb	r0, [r9]
   6354c:	bne	634f0 <blkid_probe_get_size@plt+0x5bfd8>
   63550:	ldrb	r6, [r5, r4]
   63554:	cmp	sl, #5
   63558:	beq	63664 <blkid_probe_get_size@plt+0x5c14c>
   6355c:	ldr	r3, [sp, #24]
   63560:	cmp	r6, r3
   63564:	bne	63644 <blkid_probe_get_size@plt+0x5c12c>
   63568:	add	r4, r4, #1
   6356c:	add	r3, r4, #2
   63570:	add	sl, sl, #1
   63574:	add	r9, r9, #1
   63578:	add	fp, r5, r4
   6357c:	str	r3, [sp, #12]
   63580:	mov	r8, #0
   63584:	b	634f0 <blkid_probe_get_size@plt+0x5bfd8>
   63588:	ldr	fp, [pc, #648]	; 63818 <blkid_probe_get_size@plt+0x5c300>
   6358c:	mov	r3, #0
   63590:	add	r7, sp, #36	; 0x24
   63594:	mov	r6, r3
   63598:	add	fp, pc, fp
   6359c:	str	r3, [sp, #36]	; 0x24
   635a0:	strh	r3, [r7, #4]
   635a4:	str	r3, [sp, #12]
   635a8:	add	r4, r5, r6
   635ac:	add	sl, r6, #4
   635b0:	mov	r9, #0
   635b4:	ldrb	r8, [r4], #1
   635b8:	cmp	r8, #0
   635bc:	beq	637f4 <blkid_probe_get_size@plt+0x5c2dc>
   635c0:	mov	r1, r8
   635c4:	mov	r0, fp
   635c8:	bl	74c4 <strchr@plt>
   635cc:	cmp	r0, #0
   635d0:	beq	637f4 <blkid_probe_get_size@plt+0x5c2dc>
   635d4:	cmp	r0, fp
   635d8:	bcc	63794 <blkid_probe_get_size@plt+0x5c27c>
   635dc:	sub	r0, r0, fp
   635e0:	cmp	r0, #15
   635e4:	bls	635f4 <blkid_probe_get_size@plt+0x5c0dc>
   635e8:	sub	r0, r0, #6
   635ec:	cmp	r0, #15
   635f0:	bhi	637c4 <blkid_probe_get_size@plt+0x5c2ac>
   635f4:	ldrh	r3, [r7]
   635f8:	add	r6, r6, #1
   635fc:	cmp	sl, r6
   63600:	mov	r9, #1
   63604:	add	r0, r0, r3, lsl #4
   63608:	strh	r0, [r7]
   6360c:	bne	635b4 <blkid_probe_get_size@plt+0x5c09c>
   63610:	ldrb	r8, [r5, r6]
   63614:	ldr	r3, [sp, #12]
   63618:	cmp	r3, #2
   6361c:	beq	636f4 <blkid_probe_get_size@plt+0x5c1dc>
   63620:	cmp	r8, #46	; 0x2e
   63624:	bne	63644 <blkid_probe_get_size@plt+0x5c12c>
   63628:	add	r3, r3, #1
   6362c:	add	r6, r6, #1
   63630:	str	r3, [sp, #12]
   63634:	add	r7, r7, #2
   63638:	b	635a8 <blkid_probe_get_size@plt+0x5c090>
   6363c:	cmp	r8, #0
   63640:	bne	63554 <blkid_probe_get_size@plt+0x5c03c>
   63644:	mvn	r0, #21
   63648:	ldr	r3, [sp, #20]
   6364c:	ldr	r2, [sp, #44]	; 0x2c
   63650:	ldr	r3, [r3]
   63654:	cmp	r2, r3
   63658:	bne	63800 <blkid_probe_get_size@plt+0x5c2e8>
   6365c:	add	sp, sp, #52	; 0x34
   63660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   63664:	cmp	r6, #0
   63668:	ldr	fp, [sp, #28]
   6366c:	bne	63644 <blkid_probe_get_size@plt+0x5c12c>
   63670:	ldr	r3, [sp, #16]
   63674:	sub	r1, r3, #1
   63678:	add	r2, r3, #5
   6367c:	ldrb	r3, [fp], #1
   63680:	strb	r3, [r1, #1]!
   63684:	cmp	r2, r1
   63688:	bne	6367c <blkid_probe_get_size@plt+0x5c164>
   6368c:	mov	r0, #0
   63690:	b	63648 <blkid_probe_get_size@plt+0x5c130>
   63694:	ldr	r2, [pc, #384]	; 6381c <blkid_probe_get_size@plt+0x5c304>
   63698:	ldr	r1, [pc, #384]	; 63820 <blkid_probe_get_size@plt+0x5c308>
   6369c:	add	r2, pc, r2
   636a0:	add	r2, r2, #1984	; 0x7c0
   636a4:	add	r2, r2, #12
   636a8:	str	r2, [sp]
   636ac:	ldr	r2, [pc, #368]	; 63824 <blkid_probe_get_size@plt+0x5c30c>
   636b0:	mov	r3, #99	; 0x63
   636b4:	add	r2, pc, r2
   636b8:	add	r1, pc, r1
   636bc:	mov	r0, #0
   636c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   636c4:	ldr	r2, [pc, #348]	; 63828 <blkid_probe_get_size@plt+0x5c310>
   636c8:	ldr	r1, [pc, #348]	; 6382c <blkid_probe_get_size@plt+0x5c314>
   636cc:	add	r2, pc, r2
   636d0:	add	r2, r2, #1984	; 0x7c0
   636d4:	add	r2, r2, #12
   636d8:	str	r2, [sp]
   636dc:	ldr	r2, [pc, #332]	; 63830 <blkid_probe_get_size@plt+0x5c318>
   636e0:	mov	r3, #99	; 0x63
   636e4:	add	r2, pc, r2
   636e8:	add	r1, pc, r1
   636ec:	mov	r0, #0
   636f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   636f4:	cmp	r8, #0
   636f8:	bne	63644 <blkid_probe_get_size@plt+0x5c12c>
   636fc:	ldrh	r3, [sp, #36]	; 0x24
   63700:	ldr	lr, [sp, #16]
   63704:	ldrh	r1, [sp, #38]	; 0x26
   63708:	ldrh	r2, [sp, #40]	; 0x28
   6370c:	strb	r3, [lr, #1]
   63710:	lsr	r3, r3, #8
   63714:	strb	r3, [lr]
   63718:	lsr	ip, r1, #8
   6371c:	lsr	r3, r2, #8
   63720:	mov	r0, r8
   63724:	strb	r1, [lr, #3]
   63728:	strb	ip, [lr, #2]
   6372c:	strb	r2, [lr, #5]
   63730:	strb	r3, [lr, #4]
   63734:	b	63648 <blkid_probe_get_size@plt+0x5c130>
   63738:	ldr	r2, [pc, #244]	; 63834 <blkid_probe_get_size@plt+0x5c31c>
   6373c:	ldr	r1, [pc, #244]	; 63838 <blkid_probe_get_size@plt+0x5c320>
   63740:	add	r2, pc, r2
   63744:	add	r2, r2, #1984	; 0x7c0
   63748:	add	r2, r2, #12
   6374c:	str	r2, [sp]
   63750:	ldr	r2, [pc, #228]	; 6383c <blkid_probe_get_size@plt+0x5c324>
   63754:	mov	r3, #77	; 0x4d
   63758:	add	r2, pc, r2
   6375c:	add	r1, pc, r1
   63760:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   63764:	ldr	r3, [pc, #212]	; 63840 <blkid_probe_get_size@plt+0x5c328>
   63768:	ldr	r2, [pc, #212]	; 63844 <blkid_probe_get_size@plt+0x5c32c>
   6376c:	add	r3, pc, r3
   63770:	add	r3, r3, #1984	; 0x7c0
   63774:	ldr	r1, [pc, #204]	; 63848 <blkid_probe_get_size@plt+0x5c330>
   63778:	add	r3, r3, #12
   6377c:	str	r3, [sp]
   63780:	ldr	r0, [sp, #16]
   63784:	mov	r3, #78	; 0x4e
   63788:	add	r2, pc, r2
   6378c:	add	r1, pc, r1
   63790:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   63794:	ldr	r2, [pc, #176]	; 6384c <blkid_probe_get_size@plt+0x5c334>
   63798:	ldr	r1, [pc, #176]	; 63850 <blkid_probe_get_size@plt+0x5c338>
   6379c:	add	r2, pc, r2
   637a0:	add	r2, r2, #1984	; 0x7c0
   637a4:	add	r2, r2, #12
   637a8:	str	r2, [sp]
   637ac:	ldr	r2, [pc, #160]	; 63854 <blkid_probe_get_size@plt+0x5c33c>
   637b0:	mov	r3, #86	; 0x56
   637b4:	add	r2, pc, r2
   637b8:	add	r1, pc, r1
   637bc:	mov	r0, #0
   637c0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   637c4:	ldr	r2, [pc, #140]	; 63858 <blkid_probe_get_size@plt+0x5c340>
   637c8:	ldr	r1, [pc, #140]	; 6385c <blkid_probe_get_size@plt+0x5c344>
   637cc:	add	r2, pc, r2
   637d0:	add	r2, r2, #1984	; 0x7c0
   637d4:	add	r2, r2, #12
   637d8:	str	r2, [sp]
   637dc:	ldr	r2, [pc, #124]	; 63860 <blkid_probe_get_size@plt+0x5c348>
   637e0:	mov	r3, #86	; 0x56
   637e4:	add	r2, pc, r2
   637e8:	add	r1, pc, r1
   637ec:	mov	r0, #0
   637f0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   637f4:	cmp	r9, #0
   637f8:	bne	63614 <blkid_probe_get_size@plt+0x5c0fc>
   637fc:	b	63644 <blkid_probe_get_size@plt+0x5c12c>
   63800:	bl	6fb4 <__stack_chk_fail@plt>
   63804:	andeq	r4, r3, r0, lsr #14
   63808:	andeq	r0, r0, ip, lsr r4
   6380c:	andeq	r7, r0, r0, lsr #18
   63810:	andeq	r4, r1, r4, lsl ip
   63814:	ldrdeq	r4, [r1], -r0
   63818:	andeq	r4, r1, r4, lsl #22
   6381c:	andeq	r2, r1, r4, lsl #28
   63820:	strdeq	r4, [r1], -ip
   63824:	andeq	r4, r1, r8, asr #19
   63828:	ldrdeq	r2, [r1], -r4
   6382c:	ldrdeq	r4, [r1], -ip
   63830:	muleq	r1, r8, r9
   63834:	andeq	r2, r1, r0, ror #26
   63838:	andeq	ip, r0, ip, lsl ip
   6383c:	andeq	r4, r1, r4, lsr #18
   63840:	andeq	r2, r1, r4, lsr sp
   63844:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   63848:			; <UNDEFINED> instruction: 0x000088b8
   6384c:	andeq	r2, r1, r4, lsl #26
   63850:	strdeq	r4, [r1], -ip
   63854:	andeq	r4, r1, r8, asr #17
   63858:	ldrdeq	r2, [r1], -r4
   6385c:	ldrdeq	r4, [r1], -ip
   63860:	muleq	r1, r8, r8
   63864:	sub	r2, r0, #48	; 0x30
   63868:	sub	r3, r0, #65	; 0x41
   6386c:	cmp	r3, #25
   63870:	cmphi	r2, #9
   63874:	bls	638b0 <blkid_probe_get_size@plt+0x5c398>
   63878:	sub	r3, r0, #97	; 0x61
   6387c:	cmp	r3, #25
   63880:	bls	638b0 <blkid_probe_get_size@plt+0x5c398>
   63884:	push	{r4, r5, r6, lr}
   63888:	mov	r5, r1
   6388c:	mov	r4, r0
   63890:	mov	r1, r0
   63894:	ldr	r0, [pc, #68]	; 638e0 <blkid_probe_get_size@plt+0x5c3c8>
   63898:	add	r0, pc, r0
   6389c:	bl	74c4 <strchr@plt>
   638a0:	cmp	r0, #0
   638a4:	beq	638b8 <blkid_probe_get_size@plt+0x5c3a0>
   638a8:	mov	r0, #1
   638ac:	pop	{r4, r5, r6, pc}
   638b0:	mov	r0, #1
   638b4:	bx	lr
   638b8:	cmp	r5, #0
   638bc:	beq	638d8 <blkid_probe_get_size@plt+0x5c3c0>
   638c0:	mov	r1, r4
   638c4:	mov	r0, r5
   638c8:	bl	74c4 <strchr@plt>
   638cc:	adds	r0, r0, #0
   638d0:	movne	r0, #1
   638d4:	pop	{r4, r5, r6, pc}
   638d8:	mov	r0, r5
   638dc:	pop	{r4, r5, r6, pc}
   638e0:	andeq	r4, r1, r4, lsr r8
   638e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   638e8:	subs	r8, r0, #0
   638ec:	sub	sp, sp, #8
   638f0:	beq	639cc <blkid_probe_get_size@plt+0x5c4b4>
   638f4:	ldrb	r3, [r8]
   638f8:	mov	r9, r1
   638fc:	cmp	r3, #0
   63900:	beq	639e4 <blkid_probe_get_size@plt+0x5c4cc>
   63904:	ldr	sl, [pc, #236]	; 639f8 <blkid_probe_get_size@plt+0x5c4e0>
   63908:	mov	r4, #0
   6390c:	add	sl, pc, sl
   63910:	mov	r6, r4
   63914:	mov	r7, r8
   63918:	b	63948 <blkid_probe_get_size@plt+0x5c430>
   6391c:	cmp	r3, r5
   63920:	bcc	639cc <blkid_probe_get_size@plt+0x5c4b4>
   63924:	bl	71e8 <memcpy@plt>
   63928:	sub	r4, r4, #1
   6392c:	add	r4, r4, r5
   63930:	add	r6, r6, r5
   63934:	add	r4, r4, #1
   63938:	add	r7, r8, r4
   6393c:	ldrb	r3, [r8, r4]
   63940:	cmp	r3, #0
   63944:	beq	639d8 <blkid_probe_get_size@plt+0x5c4c0>
   63948:	mov	r0, r7
   6394c:	bl	3c118 <blkid_probe_get_size@plt+0x34c00>
   63950:	rsb	r3, r6, #256	; 0x100
   63954:	mov	r1, r7
   63958:	mov	r5, r0
   6395c:	cmp	r5, #1
   63960:	add	r0, r9, r6
   63964:	mov	r2, r5
   63968:	bgt	6391c <blkid_probe_get_size@plt+0x5c404>
   6396c:	ldrb	r5, [r7]
   63970:	mov	r1, #0
   63974:	cmp	r5, #92	; 0x5c
   63978:	mov	r0, r5
   6397c:	beq	639a0 <blkid_probe_get_size@plt+0x5c488>
   63980:	bl	63864 <blkid_probe_get_size@plt+0x5c34c>
   63984:	cmp	r0, #0
   63988:	beq	639a0 <blkid_probe_get_size@plt+0x5c488>
   6398c:	cmp	r6, #256	; 0x100
   63990:	beq	639cc <blkid_probe_get_size@plt+0x5c4b4>
   63994:	strb	r5, [r9, r6]
   63998:	add	r6, r6, #1
   6399c:	b	63934 <blkid_probe_get_size@plt+0x5c41c>
   639a0:	rsb	r3, r6, #256	; 0x100
   639a4:	cmp	r3, #3
   639a8:	add	r0, r9, r6
   639ac:	mov	r3, sl
   639b0:	mvn	r2, #0
   639b4:	mov	r1, #1
   639b8:	bls	639cc <blkid_probe_get_size@plt+0x5c4b4>
   639bc:	str	r5, [sp]
   639c0:	bl	7404 <__sprintf_chk@plt>
   639c4:	add	r6, r6, #4
   639c8:	b	63934 <blkid_probe_get_size@plt+0x5c41c>
   639cc:	mvn	r0, #21
   639d0:	add	sp, sp, #8
   639d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   639d8:	cmp	r6, #256	; 0x100
   639dc:	beq	639cc <blkid_probe_get_size@plt+0x5c4b4>
   639e0:	add	r9, r9, r6
   639e4:	mov	r3, #0
   639e8:	mov	r0, r3
   639ec:	strb	r3, [r9]
   639f0:	add	sp, sp, #8
   639f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   639f8:	andeq	r4, r1, ip, asr #15
   639fc:	push	{r4, lr}
   63a00:	subs	r4, r0, #0
   63a04:	sub	sp, sp, #8
   63a08:	beq	63a88 <blkid_probe_get_size@plt+0x5c570>
   63a0c:	ldrsb	r3, [r4]
   63a10:	cmp	r3, #0
   63a14:	blt	63ab4 <blkid_probe_get_size@plt+0x5c59c>
   63a18:	cmp	r3, #22
   63a1c:	bgt	63ae4 <blkid_probe_get_size@plt+0x5c5cc>
   63a20:	ldr	r2, [pc, #236]	; 63b14 <blkid_probe_get_size@plt+0x5c5fc>
   63a24:	add	r2, pc, r2
   63a28:	add	r3, r2, r3, lsl #2
   63a2c:	ldr	r3, [r3, #924]	; 0x39c
   63a30:	blx	r3
   63a34:	ldrb	r3, [r4, #1]
   63a38:	cmp	r0, #0
   63a3c:	biclt	r3, r3, #240	; 0xf0
   63a40:	orrlt	r3, r3, #12
   63a44:	strblt	r3, [r4, #1]
   63a48:	blt	63a80 <blkid_probe_get_size@plt+0x5c568>
   63a4c:	bic	r2, r3, #252	; 0xfc
   63a50:	lsr	r3, r3, #1
   63a54:	and	r3, r3, #1
   63a58:	eor	r3, r3, #1
   63a5c:	movgt	r1, #1
   63a60:	movle	r1, #0
   63a64:	cmp	r1, r3
   63a68:	movne	r3, #8
   63a6c:	moveq	r3, #4
   63a70:	moveq	r0, #1
   63a74:	movne	r0, #0
   63a78:	orr	r3, r3, r2
   63a7c:	strb	r3, [r4, #1]
   63a80:	add	sp, sp, #8
   63a84:	pop	{r4, pc}
   63a88:	ldr	r2, [pc, #136]	; 63b18 <blkid_probe_get_size@plt+0x5c600>
   63a8c:	ldr	r1, [pc, #136]	; 63b1c <blkid_probe_get_size@plt+0x5c604>
   63a90:	add	r2, pc, r2
   63a94:	add	r2, r2, #2016	; 0x7e0
   63a98:	add	r2, r2, #4
   63a9c:	str	r2, [sp]
   63aa0:	ldr	r2, [pc, #120]	; 63b20 <blkid_probe_get_size@plt+0x5c608>
   63aa4:	mov	r3, #632	; 0x278
   63aa8:	add	r2, pc, r2
   63aac:	add	r1, pc, r1
   63ab0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   63ab4:	ldr	r2, [pc, #104]	; 63b24 <blkid_probe_get_size@plt+0x5c60c>
   63ab8:	ldr	r1, [pc, #104]	; 63b28 <blkid_probe_get_size@plt+0x5c610>
   63abc:	add	r2, pc, r2
   63ac0:	add	r2, r2, #2016	; 0x7e0
   63ac4:	add	r2, r2, #4
   63ac8:	str	r2, [sp]
   63acc:	ldr	r2, [pc, #88]	; 63b2c <blkid_probe_get_size@plt+0x5c614>
   63ad0:	ldr	r3, [pc, #88]	; 63b30 <blkid_probe_get_size@plt+0x5c618>
   63ad4:	add	r2, pc, r2
   63ad8:	add	r1, pc, r1
   63adc:	mov	r0, #0
   63ae0:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   63ae4:	ldr	r2, [pc, #72]	; 63b34 <blkid_probe_get_size@plt+0x5c61c>
   63ae8:	ldr	r1, [pc, #72]	; 63b38 <blkid_probe_get_size@plt+0x5c620>
   63aec:	add	r2, pc, r2
   63af0:	add	r2, r2, #2016	; 0x7e0
   63af4:	add	r2, r2, #4
   63af8:	str	r2, [sp]
   63afc:	ldr	r2, [pc, #56]	; 63b3c <blkid_probe_get_size@plt+0x5c624>
   63b00:	ldr	r3, [pc, #56]	; 63b40 <blkid_probe_get_size@plt+0x5c628>
   63b04:	add	r2, pc, r2
   63b08:	add	r1, pc, r1
   63b0c:	mov	r0, #0
   63b10:	bl	3b258 <blkid_probe_get_size@plt+0x33d40>
   63b14:	ldrdeq	r3, [r3], -r8
   63b18:	andeq	r2, r1, r0, lsl sl
   63b1c:	andeq	pc, r0, r0, lsl #27
   63b20:	andeq	fp, r0, r8, ror #30
   63b24:	andeq	r2, r1, r4, ror #19
   63b28:	andeq	r4, r1, r8, lsl #12
   63b2c:	andeq	fp, r0, ip, lsr pc
   63b30:	andeq	r0, r0, r9, ror r2
   63b34:			; <UNDEFINED> instruction: 0x000129b4
   63b38:	andeq	r4, r1, r8, ror #11
   63b3c:	andeq	fp, r0, ip, lsl #30
   63b40:	andeq	r0, r0, sl, ror r2
   63b44:	subs	r2, r1, #1
   63b48:	bxeq	lr
   63b4c:	bcc	63d24 <blkid_probe_get_size@plt+0x5c80c>
   63b50:	cmp	r0, r1
   63b54:	bls	63d08 <blkid_probe_get_size@plt+0x5c7f0>
   63b58:	tst	r1, r2
   63b5c:	beq	63d14 <blkid_probe_get_size@plt+0x5c7fc>
   63b60:	clz	r3, r0
   63b64:	clz	r2, r1
   63b68:	sub	r3, r2, r3
   63b6c:	rsbs	r3, r3, #31
   63b70:	addne	r3, r3, r3, lsl #1
   63b74:	mov	r2, #0
   63b78:	addne	pc, pc, r3, lsl #2
   63b7c:	nop			; (mov r0, r0)
   63b80:	cmp	r0, r1, lsl #31
   63b84:	adc	r2, r2, r2
   63b88:	subcs	r0, r0, r1, lsl #31
   63b8c:	cmp	r0, r1, lsl #30
   63b90:	adc	r2, r2, r2
   63b94:	subcs	r0, r0, r1, lsl #30
   63b98:	cmp	r0, r1, lsl #29
   63b9c:	adc	r2, r2, r2
   63ba0:	subcs	r0, r0, r1, lsl #29
   63ba4:	cmp	r0, r1, lsl #28
   63ba8:	adc	r2, r2, r2
   63bac:	subcs	r0, r0, r1, lsl #28
   63bb0:	cmp	r0, r1, lsl #27
   63bb4:	adc	r2, r2, r2
   63bb8:	subcs	r0, r0, r1, lsl #27
   63bbc:	cmp	r0, r1, lsl #26
   63bc0:	adc	r2, r2, r2
   63bc4:	subcs	r0, r0, r1, lsl #26
   63bc8:	cmp	r0, r1, lsl #25
   63bcc:	adc	r2, r2, r2
   63bd0:	subcs	r0, r0, r1, lsl #25
   63bd4:	cmp	r0, r1, lsl #24
   63bd8:	adc	r2, r2, r2
   63bdc:	subcs	r0, r0, r1, lsl #24
   63be0:	cmp	r0, r1, lsl #23
   63be4:	adc	r2, r2, r2
   63be8:	subcs	r0, r0, r1, lsl #23
   63bec:	cmp	r0, r1, lsl #22
   63bf0:	adc	r2, r2, r2
   63bf4:	subcs	r0, r0, r1, lsl #22
   63bf8:	cmp	r0, r1, lsl #21
   63bfc:	adc	r2, r2, r2
   63c00:	subcs	r0, r0, r1, lsl #21
   63c04:	cmp	r0, r1, lsl #20
   63c08:	adc	r2, r2, r2
   63c0c:	subcs	r0, r0, r1, lsl #20
   63c10:	cmp	r0, r1, lsl #19
   63c14:	adc	r2, r2, r2
   63c18:	subcs	r0, r0, r1, lsl #19
   63c1c:	cmp	r0, r1, lsl #18
   63c20:	adc	r2, r2, r2
   63c24:	subcs	r0, r0, r1, lsl #18
   63c28:	cmp	r0, r1, lsl #17
   63c2c:	adc	r2, r2, r2
   63c30:	subcs	r0, r0, r1, lsl #17
   63c34:	cmp	r0, r1, lsl #16
   63c38:	adc	r2, r2, r2
   63c3c:	subcs	r0, r0, r1, lsl #16
   63c40:	cmp	r0, r1, lsl #15
   63c44:	adc	r2, r2, r2
   63c48:	subcs	r0, r0, r1, lsl #15
   63c4c:	cmp	r0, r1, lsl #14
   63c50:	adc	r2, r2, r2
   63c54:	subcs	r0, r0, r1, lsl #14
   63c58:	cmp	r0, r1, lsl #13
   63c5c:	adc	r2, r2, r2
   63c60:	subcs	r0, r0, r1, lsl #13
   63c64:	cmp	r0, r1, lsl #12
   63c68:	adc	r2, r2, r2
   63c6c:	subcs	r0, r0, r1, lsl #12
   63c70:	cmp	r0, r1, lsl #11
   63c74:	adc	r2, r2, r2
   63c78:	subcs	r0, r0, r1, lsl #11
   63c7c:	cmp	r0, r1, lsl #10
   63c80:	adc	r2, r2, r2
   63c84:	subcs	r0, r0, r1, lsl #10
   63c88:	cmp	r0, r1, lsl #9
   63c8c:	adc	r2, r2, r2
   63c90:	subcs	r0, r0, r1, lsl #9
   63c94:	cmp	r0, r1, lsl #8
   63c98:	adc	r2, r2, r2
   63c9c:	subcs	r0, r0, r1, lsl #8
   63ca0:	cmp	r0, r1, lsl #7
   63ca4:	adc	r2, r2, r2
   63ca8:	subcs	r0, r0, r1, lsl #7
   63cac:	cmp	r0, r1, lsl #6
   63cb0:	adc	r2, r2, r2
   63cb4:	subcs	r0, r0, r1, lsl #6
   63cb8:	cmp	r0, r1, lsl #5
   63cbc:	adc	r2, r2, r2
   63cc0:	subcs	r0, r0, r1, lsl #5
   63cc4:	cmp	r0, r1, lsl #4
   63cc8:	adc	r2, r2, r2
   63ccc:	subcs	r0, r0, r1, lsl #4
   63cd0:	cmp	r0, r1, lsl #3
   63cd4:	adc	r2, r2, r2
   63cd8:	subcs	r0, r0, r1, lsl #3
   63cdc:	cmp	r0, r1, lsl #2
   63ce0:	adc	r2, r2, r2
   63ce4:	subcs	r0, r0, r1, lsl #2
   63ce8:	cmp	r0, r1, lsl #1
   63cec:	adc	r2, r2, r2
   63cf0:	subcs	r0, r0, r1, lsl #1
   63cf4:	cmp	r0, r1
   63cf8:	adc	r2, r2, r2
   63cfc:	subcs	r0, r0, r1
   63d00:	mov	r0, r2
   63d04:	bx	lr
   63d08:	moveq	r0, #1
   63d0c:	movne	r0, #0
   63d10:	bx	lr
   63d14:	clz	r2, r1
   63d18:	rsb	r2, r2, #31
   63d1c:	lsr	r0, r0, r2
   63d20:	bx	lr
   63d24:	cmp	r0, #0
   63d28:	mvnne	r0, #0
   63d2c:	b	6438c <blkid_probe_get_size@plt+0x5ce74>
   63d30:	cmp	r1, #0
   63d34:	beq	63d24 <blkid_probe_get_size@plt+0x5c80c>
   63d38:	push	{r0, r1, lr}
   63d3c:	bl	63b44 <blkid_probe_get_size@plt+0x5c62c>
   63d40:	pop	{r1, r2, lr}
   63d44:	mul	r3, r2, r0
   63d48:	sub	r1, r1, r3
   63d4c:	bx	lr
   63d50:	cmp	r1, #0
   63d54:	beq	63f60 <blkid_probe_get_size@plt+0x5ca48>
   63d58:	eor	ip, r0, r1
   63d5c:	rsbmi	r1, r1, #0
   63d60:	subs	r2, r1, #1
   63d64:	beq	63f2c <blkid_probe_get_size@plt+0x5ca14>
   63d68:	movs	r3, r0
   63d6c:	rsbmi	r3, r0, #0
   63d70:	cmp	r3, r1
   63d74:	bls	63f38 <blkid_probe_get_size@plt+0x5ca20>
   63d78:	tst	r1, r2
   63d7c:	beq	63f48 <blkid_probe_get_size@plt+0x5ca30>
   63d80:	clz	r2, r3
   63d84:	clz	r0, r1
   63d88:	sub	r2, r0, r2
   63d8c:	rsbs	r2, r2, #31
   63d90:	addne	r2, r2, r2, lsl #1
   63d94:	mov	r0, #0
   63d98:	addne	pc, pc, r2, lsl #2
   63d9c:	nop			; (mov r0, r0)
   63da0:	cmp	r3, r1, lsl #31
   63da4:	adc	r0, r0, r0
   63da8:	subcs	r3, r3, r1, lsl #31
   63dac:	cmp	r3, r1, lsl #30
   63db0:	adc	r0, r0, r0
   63db4:	subcs	r3, r3, r1, lsl #30
   63db8:	cmp	r3, r1, lsl #29
   63dbc:	adc	r0, r0, r0
   63dc0:	subcs	r3, r3, r1, lsl #29
   63dc4:	cmp	r3, r1, lsl #28
   63dc8:	adc	r0, r0, r0
   63dcc:	subcs	r3, r3, r1, lsl #28
   63dd0:	cmp	r3, r1, lsl #27
   63dd4:	adc	r0, r0, r0
   63dd8:	subcs	r3, r3, r1, lsl #27
   63ddc:	cmp	r3, r1, lsl #26
   63de0:	adc	r0, r0, r0
   63de4:	subcs	r3, r3, r1, lsl #26
   63de8:	cmp	r3, r1, lsl #25
   63dec:	adc	r0, r0, r0
   63df0:	subcs	r3, r3, r1, lsl #25
   63df4:	cmp	r3, r1, lsl #24
   63df8:	adc	r0, r0, r0
   63dfc:	subcs	r3, r3, r1, lsl #24
   63e00:	cmp	r3, r1, lsl #23
   63e04:	adc	r0, r0, r0
   63e08:	subcs	r3, r3, r1, lsl #23
   63e0c:	cmp	r3, r1, lsl #22
   63e10:	adc	r0, r0, r0
   63e14:	subcs	r3, r3, r1, lsl #22
   63e18:	cmp	r3, r1, lsl #21
   63e1c:	adc	r0, r0, r0
   63e20:	subcs	r3, r3, r1, lsl #21
   63e24:	cmp	r3, r1, lsl #20
   63e28:	adc	r0, r0, r0
   63e2c:	subcs	r3, r3, r1, lsl #20
   63e30:	cmp	r3, r1, lsl #19
   63e34:	adc	r0, r0, r0
   63e38:	subcs	r3, r3, r1, lsl #19
   63e3c:	cmp	r3, r1, lsl #18
   63e40:	adc	r0, r0, r0
   63e44:	subcs	r3, r3, r1, lsl #18
   63e48:	cmp	r3, r1, lsl #17
   63e4c:	adc	r0, r0, r0
   63e50:	subcs	r3, r3, r1, lsl #17
   63e54:	cmp	r3, r1, lsl #16
   63e58:	adc	r0, r0, r0
   63e5c:	subcs	r3, r3, r1, lsl #16
   63e60:	cmp	r3, r1, lsl #15
   63e64:	adc	r0, r0, r0
   63e68:	subcs	r3, r3, r1, lsl #15
   63e6c:	cmp	r3, r1, lsl #14
   63e70:	adc	r0, r0, r0
   63e74:	subcs	r3, r3, r1, lsl #14
   63e78:	cmp	r3, r1, lsl #13
   63e7c:	adc	r0, r0, r0
   63e80:	subcs	r3, r3, r1, lsl #13
   63e84:	cmp	r3, r1, lsl #12
   63e88:	adc	r0, r0, r0
   63e8c:	subcs	r3, r3, r1, lsl #12
   63e90:	cmp	r3, r1, lsl #11
   63e94:	adc	r0, r0, r0
   63e98:	subcs	r3, r3, r1, lsl #11
   63e9c:	cmp	r3, r1, lsl #10
   63ea0:	adc	r0, r0, r0
   63ea4:	subcs	r3, r3, r1, lsl #10
   63ea8:	cmp	r3, r1, lsl #9
   63eac:	adc	r0, r0, r0
   63eb0:	subcs	r3, r3, r1, lsl #9
   63eb4:	cmp	r3, r1, lsl #8
   63eb8:	adc	r0, r0, r0
   63ebc:	subcs	r3, r3, r1, lsl #8
   63ec0:	cmp	r3, r1, lsl #7
   63ec4:	adc	r0, r0, r0
   63ec8:	subcs	r3, r3, r1, lsl #7
   63ecc:	cmp	r3, r1, lsl #6
   63ed0:	adc	r0, r0, r0
   63ed4:	subcs	r3, r3, r1, lsl #6
   63ed8:	cmp	r3, r1, lsl #5
   63edc:	adc	r0, r0, r0
   63ee0:	subcs	r3, r3, r1, lsl #5
   63ee4:	cmp	r3, r1, lsl #4
   63ee8:	adc	r0, r0, r0
   63eec:	subcs	r3, r3, r1, lsl #4
   63ef0:	cmp	r3, r1, lsl #3
   63ef4:	adc	r0, r0, r0
   63ef8:	subcs	r3, r3, r1, lsl #3
   63efc:	cmp	r3, r1, lsl #2
   63f00:	adc	r0, r0, r0
   63f04:	subcs	r3, r3, r1, lsl #2
   63f08:	cmp	r3, r1, lsl #1
   63f0c:	adc	r0, r0, r0
   63f10:	subcs	r3, r3, r1, lsl #1
   63f14:	cmp	r3, r1
   63f18:	adc	r0, r0, r0
   63f1c:	subcs	r3, r3, r1
   63f20:	cmp	ip, #0
   63f24:	rsbmi	r0, r0, #0
   63f28:	bx	lr
   63f2c:	teq	ip, r0
   63f30:	rsbmi	r0, r0, #0
   63f34:	bx	lr
   63f38:	movcc	r0, #0
   63f3c:	asreq	r0, ip, #31
   63f40:	orreq	r0, r0, #1
   63f44:	bx	lr
   63f48:	clz	r2, r1
   63f4c:	rsb	r2, r2, #31
   63f50:	cmp	ip, #0
   63f54:	lsr	r0, r3, r2
   63f58:	rsbmi	r0, r0, #0
   63f5c:	bx	lr
   63f60:	cmp	r0, #0
   63f64:	mvngt	r0, #-2147483648	; 0x80000000
   63f68:	movlt	r0, #-2147483648	; 0x80000000
   63f6c:	b	6438c <blkid_probe_get_size@plt+0x5ce74>
   63f70:	cmp	r1, #0
   63f74:	beq	63f60 <blkid_probe_get_size@plt+0x5ca48>
   63f78:	push	{r0, r1, lr}
   63f7c:	bl	63d58 <blkid_probe_get_size@plt+0x5c840>
   63f80:	pop	{r1, r2, lr}
   63f84:	mul	r3, r2, r0
   63f88:	sub	r1, r1, r3
   63f8c:	bx	lr
   63f90:	eor	r1, r1, #-2147483648	; 0x80000000
   63f94:	b	63f9c <blkid_probe_get_size@plt+0x5ca84>
   63f98:	eor	r3, r3, #-2147483648	; 0x80000000
   63f9c:	push	{r4, r5, lr}
   63fa0:	lsl	r4, r1, #1
   63fa4:	lsl	r5, r3, #1
   63fa8:	teq	r4, r5
   63fac:	teqeq	r0, r2
   63fb0:	orrsne	ip, r4, r0
   63fb4:	orrsne	ip, r5, r2
   63fb8:	mvnsne	ip, r4, asr #21
   63fbc:	mvnsne	ip, r5, asr #21
   63fc0:	beq	641ac <blkid_probe_get_size@plt+0x5cc94>
   63fc4:	lsr	r4, r4, #21
   63fc8:	rsbs	r5, r4, r5, lsr #21
   63fcc:	rsblt	r5, r5, #0
   63fd0:	ble	63ff0 <blkid_probe_get_size@plt+0x5cad8>
   63fd4:	add	r4, r4, r5
   63fd8:	eor	r2, r0, r2
   63fdc:	eor	r3, r1, r3
   63fe0:	eor	r0, r2, r0
   63fe4:	eor	r1, r3, r1
   63fe8:	eor	r2, r0, r2
   63fec:	eor	r3, r1, r3
   63ff0:	cmp	r5, #54	; 0x36
   63ff4:	pophi	{r4, r5, pc}
   63ff8:	tst	r1, #-2147483648	; 0x80000000
   63ffc:	lsl	r1, r1, #12
   64000:	mov	ip, #1048576	; 0x100000
   64004:	orr	r1, ip, r1, lsr #12
   64008:	beq	64014 <blkid_probe_get_size@plt+0x5cafc>
   6400c:	rsbs	r0, r0, #0
   64010:	rsc	r1, r1, #0
   64014:	tst	r3, #-2147483648	; 0x80000000
   64018:	lsl	r3, r3, #12
   6401c:	orr	r3, ip, r3, lsr #12
   64020:	beq	6402c <blkid_probe_get_size@plt+0x5cb14>
   64024:	rsbs	r2, r2, #0
   64028:	rsc	r3, r3, #0
   6402c:	teq	r4, r5
   64030:	beq	64194 <blkid_probe_get_size@plt+0x5cc7c>
   64034:	sub	r4, r4, #1
   64038:	rsbs	lr, r5, #32
   6403c:	blt	64058 <blkid_probe_get_size@plt+0x5cb40>
   64040:	lsl	ip, r2, lr
   64044:	adds	r0, r0, r2, lsr r5
   64048:	adc	r1, r1, #0
   6404c:	adds	r0, r0, r3, lsl lr
   64050:	adcs	r1, r1, r3, asr r5
   64054:	b	64074 <blkid_probe_get_size@plt+0x5cb5c>
   64058:	sub	r5, r5, #32
   6405c:	add	lr, lr, #32
   64060:	cmp	r2, #1
   64064:	lsl	ip, r3, lr
   64068:	orrcs	ip, ip, #2
   6406c:	adds	r0, r0, r3, asr r5
   64070:	adcs	r1, r1, r3, asr #31
   64074:	and	r5, r1, #-2147483648	; 0x80000000
   64078:	bpl	64088 <blkid_probe_get_size@plt+0x5cb70>
   6407c:	rsbs	ip, ip, #0
   64080:	rscs	r0, r0, #0
   64084:	rsc	r1, r1, #0
   64088:	cmp	r1, #1048576	; 0x100000
   6408c:	bcc	640cc <blkid_probe_get_size@plt+0x5cbb4>
   64090:	cmp	r1, #2097152	; 0x200000
   64094:	bcc	640b4 <blkid_probe_get_size@plt+0x5cb9c>
   64098:	lsrs	r1, r1, #1
   6409c:	rrxs	r0, r0
   640a0:	rrx	ip, ip
   640a4:	add	r4, r4, #1
   640a8:	lsl	r2, r4, #21
   640ac:	cmn	r2, #4194304	; 0x400000
   640b0:	bcs	6420c <blkid_probe_get_size@plt+0x5ccf4>
   640b4:	cmp	ip, #-2147483648	; 0x80000000
   640b8:	lsrseq	ip, r0, #1
   640bc:	adcs	r0, r0, #0
   640c0:	adc	r1, r1, r4, lsl #20
   640c4:	orr	r1, r1, r5
   640c8:	pop	{r4, r5, pc}
   640cc:	lsls	ip, ip, #1
   640d0:	adcs	r0, r0, r0
   640d4:	adc	r1, r1, r1
   640d8:	tst	r1, #1048576	; 0x100000
   640dc:	sub	r4, r4, #1
   640e0:	bne	640b4 <blkid_probe_get_size@plt+0x5cb9c>
   640e4:	teq	r1, #0
   640e8:	moveq	r1, r0
   640ec:	moveq	r0, #0
   640f0:	clz	r3, r1
   640f4:	addeq	r3, r3, #32
   640f8:	sub	r3, r3, #11
   640fc:	subs	r2, r3, #32
   64100:	bge	64124 <blkid_probe_get_size@plt+0x5cc0c>
   64104:	adds	r2, r2, #12
   64108:	ble	64120 <blkid_probe_get_size@plt+0x5cc08>
   6410c:	add	ip, r2, #20
   64110:	rsb	r2, r2, #12
   64114:	lsl	r0, r1, ip
   64118:	lsr	r1, r1, r2
   6411c:	b	64134 <blkid_probe_get_size@plt+0x5cc1c>
   64120:	add	r2, r2, #20
   64124:	rsble	ip, r2, #32
   64128:	lsl	r1, r1, r2
   6412c:	orrle	r1, r1, r0, lsr ip
   64130:	lslle	r0, r0, r2
   64134:	subs	r4, r4, r3
   64138:	addge	r1, r1, r4, lsl #20
   6413c:	orrge	r1, r1, r5
   64140:	popge	{r4, r5, pc}
   64144:	mvn	r4, r4
   64148:	subs	r4, r4, #31
   6414c:	bge	64188 <blkid_probe_get_size@plt+0x5cc70>
   64150:	adds	r4, r4, #12
   64154:	bgt	64170 <blkid_probe_get_size@plt+0x5cc58>
   64158:	add	r4, r4, #20
   6415c:	rsb	r2, r4, #32
   64160:	lsr	r0, r0, r4
   64164:	orr	r0, r0, r1, lsl r2
   64168:	orr	r1, r5, r1, lsr r4
   6416c:	pop	{r4, r5, pc}
   64170:	rsb	r4, r4, #12
   64174:	rsb	r2, r4, #32
   64178:	lsr	r0, r0, r2
   6417c:	orr	r0, r0, r1, lsl r4
   64180:	mov	r1, r5
   64184:	pop	{r4, r5, pc}
   64188:	lsr	r0, r1, r4
   6418c:	mov	r1, r5
   64190:	pop	{r4, r5, pc}
   64194:	teq	r4, #0
   64198:	eor	r3, r3, #1048576	; 0x100000
   6419c:	eoreq	r1, r1, #1048576	; 0x100000
   641a0:	addeq	r4, r4, #1
   641a4:	subne	r5, r5, #1
   641a8:	b	64034 <blkid_probe_get_size@plt+0x5cb1c>
   641ac:	mvns	ip, r4, asr #21
   641b0:	mvnsne	ip, r5, asr #21
   641b4:	beq	6421c <blkid_probe_get_size@plt+0x5cd04>
   641b8:	teq	r4, r5
   641bc:	teqeq	r0, r2
   641c0:	beq	641d4 <blkid_probe_get_size@plt+0x5ccbc>
   641c4:	orrs	ip, r4, r0
   641c8:	moveq	r1, r3
   641cc:	moveq	r0, r2
   641d0:	pop	{r4, r5, pc}
   641d4:	teq	r1, r3
   641d8:	movne	r1, #0
   641dc:	movne	r0, #0
   641e0:	popne	{r4, r5, pc}
   641e4:	lsrs	ip, r4, #21
   641e8:	bne	641fc <blkid_probe_get_size@plt+0x5cce4>
   641ec:	lsls	r0, r0, #1
   641f0:	adcs	r1, r1, r1
   641f4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   641f8:	pop	{r4, r5, pc}
   641fc:	adds	r4, r4, #4194304	; 0x400000
   64200:	addcc	r1, r1, #1048576	; 0x100000
   64204:	popcc	{r4, r5, pc}
   64208:	and	r5, r1, #-2147483648	; 0x80000000
   6420c:	orr	r1, r5, #2130706432	; 0x7f000000
   64210:	orr	r1, r1, #15728640	; 0xf00000
   64214:	mov	r0, #0
   64218:	pop	{r4, r5, pc}
   6421c:	mvns	ip, r4, asr #21
   64220:	movne	r1, r3
   64224:	movne	r0, r2
   64228:	mvnseq	ip, r5, asr #21
   6422c:	movne	r3, r1
   64230:	movne	r2, r0
   64234:	orrs	r4, r0, r1, lsl #12
   64238:	orrseq	r5, r2, r3, lsl #12
   6423c:	teqeq	r1, r3
   64240:	orrne	r1, r1, #524288	; 0x80000
   64244:	pop	{r4, r5, pc}
   64248:	teq	r0, #0
   6424c:	moveq	r1, #0
   64250:	bxeq	lr
   64254:	push	{r4, r5, lr}
   64258:	mov	r4, #1024	; 0x400
   6425c:	add	r4, r4, #50	; 0x32
   64260:	mov	r5, #0
   64264:	mov	r1, #0
   64268:	b	640e4 <blkid_probe_get_size@plt+0x5cbcc>
   6426c:	teq	r0, #0
   64270:	moveq	r1, #0
   64274:	bxeq	lr
   64278:	push	{r4, r5, lr}
   6427c:	mov	r4, #1024	; 0x400
   64280:	add	r4, r4, #50	; 0x32
   64284:	ands	r5, r0, #-2147483648	; 0x80000000
   64288:	rsbmi	r0, r0, #0
   6428c:	mov	r1, #0
   64290:	b	640e4 <blkid_probe_get_size@plt+0x5cbcc>
   64294:	lsls	r2, r0, #1
   64298:	asr	r1, r2, #3
   6429c:	rrx	r1, r1
   642a0:	lsl	r0, r2, #28
   642a4:	andsne	r3, r2, #-16777216	; 0xff000000
   642a8:	teqne	r3, #-16777216	; 0xff000000
   642ac:	eorne	r1, r1, #939524096	; 0x38000000
   642b0:	bxne	lr
   642b4:	bics	r2, r2, #-16777216	; 0xff000000
   642b8:	bxeq	lr
   642bc:	teq	r3, #-16777216	; 0xff000000
   642c0:	orreq	r1, r1, #524288	; 0x80000
   642c4:	bxeq	lr
   642c8:	push	{r4, r5, lr}
   642cc:	mov	r4, #896	; 0x380
   642d0:	and	r5, r1, #-2147483648	; 0x80000000
   642d4:	bic	r1, r1, #-2147483648	; 0x80000000
   642d8:	b	640e4 <blkid_probe_get_size@plt+0x5cbcc>
   642dc:	orrs	r2, r0, r1
   642e0:	bxeq	lr
   642e4:	push	{r4, r5, lr}
   642e8:	mov	r5, #0
   642ec:	b	6430c <blkid_probe_get_size@plt+0x5cdf4>
   642f0:	orrs	r2, r0, r1
   642f4:	bxeq	lr
   642f8:	push	{r4, r5, lr}
   642fc:	ands	r5, r1, #-2147483648	; 0x80000000
   64300:	bpl	6430c <blkid_probe_get_size@plt+0x5cdf4>
   64304:	rsbs	r0, r0, #0
   64308:	rsc	r1, r1, #0
   6430c:	mov	r4, #1024	; 0x400
   64310:	add	r4, r4, #50	; 0x32
   64314:	lsrs	ip, r1, #22
   64318:	beq	64088 <blkid_probe_get_size@plt+0x5cb70>
   6431c:	mov	r2, #3
   64320:	lsrs	ip, ip, #3
   64324:	addne	r2, r2, #3
   64328:	lsrs	ip, ip, #3
   6432c:	addne	r2, r2, #3
   64330:	add	r2, r2, ip, lsr #3
   64334:	rsb	r3, r2, #32
   64338:	lsl	ip, r0, r3
   6433c:	lsr	r0, r0, r2
   64340:	orr	r0, r0, r1, lsl r3
   64344:	lsr	r1, r1, r2
   64348:	add	r4, r4, r2
   6434c:	b	64088 <blkid_probe_get_size@plt+0x5cb70>
   64350:	cmp	r3, #0
   64354:	cmpeq	r2, #0
   64358:	bne	64370 <blkid_probe_get_size@plt+0x5ce58>
   6435c:	cmp	r1, #0
   64360:	cmpeq	r0, #0
   64364:	mvnne	r1, #0
   64368:	mvnne	r0, #0
   6436c:	b	6438c <blkid_probe_get_size@plt+0x5ce74>
   64370:	sub	sp, sp, #8
   64374:	push	{sp, lr}
   64378:	bl	643f0 <blkid_probe_get_size@plt+0x5ced8>
   6437c:	ldr	lr, [sp, #4]
   64380:	add	sp, sp, #8
   64384:	pop	{r2, r3}
   64388:	bx	lr
   6438c:	push	{r1, lr}
   64390:	mov	r0, #8
   64394:	bl	70f8 <raise@plt>
   64398:	pop	{r1, pc}
   6439c:	andeq	r0, r0, r0
   643a0:	vmov	d7, r0, r1
   643a4:	vldr	d6, [pc, #52]	; 643e0 <blkid_probe_get_size@plt+0x5cec8>
   643a8:	vldr	d5, [pc, #56]	; 643e8 <blkid_probe_get_size@plt+0x5ced0>
   643ac:	push	{r4, r5}
   643b0:	mov	r4, #0
   643b4:	vmul.f64	d6, d7, d6
   643b8:	vcvt.u32.f64	s12, d6
   643bc:	vcvt.f64.u32	d4, s12
   643c0:	vmov	r1, s12
   643c4:	vmls.f64	d7, d4, d5
   643c8:	vcvt.u32.f64	s14, d7
   643cc:	vmov	r3, s14
   643d0:	orr	r0, r4, r3
   643d4:	pop	{r4, r5}
   643d8:	bx	lr
   643dc:	nop			; (mov r0, r0)
   643e0:	andeq	r0, r0, r0
   643e4:	ldclcc	0, cr0, [r0]
   643e8:	andeq	r0, r0, r0
   643ec:	mvnsmi	r0, r0
   643f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   643f4:	cmp	r1, r3
   643f8:	sub	sp, sp, #12
   643fc:	cmpeq	r0, r2
   64400:	mov	sl, r0
   64404:	mov	fp, r1
   64408:	ldr	r8, [sp, #48]	; 0x30
   6440c:	bcc	64504 <blkid_probe_get_size@plt+0x5cfec>
   64410:	cmp	r3, #0
   64414:	mov	r0, r2
   64418:	mov	r1, r3
   6441c:	clzne	r2, r3
   64420:	clzeq	r3, r0
   64424:	addeq	r2, r3, #32
   64428:	cmp	fp, #0
   6442c:	clzeq	r3, sl
   64430:	addeq	r3, r3, #32
   64434:	clzne	r3, fp
   64438:	sub	r3, r2, r3
   6443c:	sub	ip, r3, #32
   64440:	lsl	r7, r1, r3
   64444:	rsb	lr, r3, #32
   64448:	orr	r7, r7, r0, lsl ip
   6444c:	orr	r7, r7, r0, lsr lr
   64450:	lsl	r6, r0, r3
   64454:	cmp	fp, r7
   64458:	cmpeq	sl, r6
   6445c:	bcs	64524 <blkid_probe_get_size@plt+0x5d00c>
   64460:	mov	r0, #0
   64464:	mov	r1, #0
   64468:	strd	r0, [sp]
   6446c:	cmp	r3, #0
   64470:	beq	64510 <blkid_probe_get_size@plt+0x5cff8>
   64474:	lsrs	r7, r7, #1
   64478:	rrx	r6, r6
   6447c:	mov	r2, r3
   64480:	b	644a4 <blkid_probe_get_size@plt+0x5cf8c>
   64484:	subs	r0, sl, r6
   64488:	sbc	r1, fp, r7
   6448c:	adds	r4, r0, r0
   64490:	adc	r5, r1, r1
   64494:	adds	sl, r4, #1
   64498:	adc	fp, r5, #0
   6449c:	subs	r2, r2, #1
   644a0:	beq	644c0 <blkid_probe_get_size@plt+0x5cfa8>
   644a4:	cmp	fp, r7
   644a8:	cmpeq	sl, r6
   644ac:	bcs	64484 <blkid_probe_get_size@plt+0x5cf6c>
   644b0:	adds	sl, sl, sl
   644b4:	adc	fp, fp, fp
   644b8:	subs	r2, r2, #1
   644bc:	bne	644a4 <blkid_probe_get_size@plt+0x5cf8c>
   644c0:	lsr	r2, sl, r3
   644c4:	lsr	r9, fp, r3
   644c8:	orr	r2, r2, fp, lsl lr
   644cc:	orr	r2, r2, fp, lsr ip
   644d0:	lsl	r1, r9, r3
   644d4:	ldrd	r6, [sp]
   644d8:	orr	r1, r1, r2, lsl ip
   644dc:	lsl	r0, r2, r3
   644e0:	adds	r6, r6, sl
   644e4:	orr	r1, r1, r2, lsr lr
   644e8:	adc	r7, r7, fp
   644ec:	subs	r6, r6, r0
   644f0:	sbc	r7, r7, r1
   644f4:	mov	sl, r2
   644f8:	mov	fp, r9
   644fc:	strd	r6, [sp]
   64500:	b	64510 <blkid_probe_get_size@plt+0x5cff8>
   64504:	mov	r2, #0
   64508:	mov	r3, #0
   6450c:	strd	r2, [sp]
   64510:	cmp	r8, #0
   64514:	strdne	sl, [r8]
   64518:	ldrd	r0, [sp]
   6451c:	add	sp, sp, #12
   64520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64524:	mov	r2, #1
   64528:	subs	sl, sl, r6
   6452c:	lsl	r1, r2, ip
   64530:	orr	r1, r1, r2, lsr lr
   64534:	lsl	r2, r2, r3
   64538:	str	r1, [sp, #4]
   6453c:	sbc	fp, fp, r7
   64540:	str	r2, [sp]
   64544:	b	6446c <blkid_probe_get_size@plt+0x5cf54>
   64548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   6454c:	mov	r7, r0
   64550:	ldr	r6, [pc, #72]	; 645a0 <blkid_probe_get_size@plt+0x5d088>
   64554:	ldr	r5, [pc, #72]	; 645a4 <blkid_probe_get_size@plt+0x5d08c>
   64558:	add	r6, pc, r6
   6455c:	add	r5, pc, r5
   64560:	sub	r6, r6, r5
   64564:	mov	r8, r1
   64568:	mov	r9, r2
   6456c:	bl	6898 <getfilecon_raw@plt-0x20>
   64570:	asrs	r6, r6, #2
   64574:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   64578:	mov	r4, #0
   6457c:	add	r4, r4, #1
   64580:	ldr	r3, [r5], #4
   64584:	mov	r2, r9
   64588:	mov	r1, r8
   6458c:	mov	r0, r7
   64590:	blx	r3
   64594:	cmp	r6, r4
   64598:	bne	6457c <blkid_probe_get_size@plt+0x5d064>
   6459c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   645a0:			; <UNDEFINED> instruction: 0x00024ab4
   645a4:	andeq	r4, r2, ip, lsr #21
   645a8:	bx	lr
   645ac:	mov	r2, r1
   645b0:	mov	r1, r0
   645b4:	mov	r0, #3
   645b8:	b	6a2c <__xstat64@plt>
   645bc:	mov	r2, r1
   645c0:	mov	r1, r0
   645c4:	mov	r0, #3
   645c8:	b	7368 <__lxstat64@plt>

Disassembly of section .fini:

000645cc <.fini>:
   645cc:	push	{r3, lr}
   645d0:	pop	{r3, pc}
