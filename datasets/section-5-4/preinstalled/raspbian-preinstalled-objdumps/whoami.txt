
raspbian-preinstalled/whoami:     file format elf32-littlearm


Disassembly of section .init:

00010bac <.init>:
   10bac:	push	{r3, lr}
   10bb0:	bl	10fbc <abort@plt+0x1d4>
   10bb4:	pop	{r3, pc}

Disassembly of section .plt:

00010bb8 <calloc@plt-0x14>:
   10bb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bbc:	ldr	lr, [pc, #4]	; 10bc8 <calloc@plt-0x4>
   10bc0:	add	lr, pc, lr
   10bc4:	ldr	pc, [lr, #8]!
   10bc8:	andeq	r4, r1, r8, lsr r4

00010bcc <calloc@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1080]!	; 0x438

00010bd8 <fputs_unlocked@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1072]!	; 0x430

00010be4 <raise@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1064]!	; 0x428

00010bf0 <strcmp@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1056]!	; 0x420

00010bfc <getpwuid@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1048]!	; 0x418

00010c08 <fflush@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1040]!	; 0x410

00010c14 <free@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1032]!	; 0x408

00010c20 <_exit@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1024]!	; 0x400

00010c2c <memcpy@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c38 <mbsinit@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c44 <memcmp@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c50 <dcgettext@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #992]!	; 0x3e0

00010c5c <__stack_chk_fail@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #984]!	; 0x3d8

00010c68 <realloc@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #976]!	; 0x3d0

00010c74 <textdomain@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c80 <geteuid@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #960]!	; 0x3c0

00010c8c <iswprint@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #952]!	; 0x3b8

00010c98 <fwrite@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #944]!	; 0x3b0

00010ca4 <lseek64@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #936]!	; 0x3a8

00010cb0 <__ctype_get_mb_cur_max@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #928]!	; 0x3a0

00010cbc <__fpending@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #920]!	; 0x398

00010cc8 <mbrtowc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #912]!	; 0x390

00010cd4 <error@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #904]!	; 0x388

00010ce0 <puts@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #896]!	; 0x380

00010cec <malloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #888]!	; 0x378

00010cf8 <__libc_start_main@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #880]!	; 0x370

00010d04 <__freading@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #872]!	; 0x368

00010d10 <__gmon_start__@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #864]!	; 0x360

00010d1c <getopt_long@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #856]!	; 0x358

00010d28 <__ctype_b_loc@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #848]!	; 0x350

00010d34 <exit@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #840]!	; 0x348

00010d40 <strlen@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #832]!	; 0x340

00010d4c <__errno_location@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #824]!	; 0x338

00010d58 <__cxa_atexit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #816]!	; 0x330

00010d64 <memset@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #808]!	; 0x328

00010d70 <__printf_chk@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #800]!	; 0x320

00010d7c <fileno@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #792]!	; 0x318

00010d88 <__fprintf_chk@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #784]!	; 0x310

00010d94 <fclose@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #776]!	; 0x308

00010da0 <fseeko64@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #768]!	; 0x300

00010dac <setlocale@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #760]!	; 0x2f8

00010db8 <strrchr@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #752]!	; 0x2f0

00010dc4 <nl_langinfo@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #744]!	; 0x2e8

00010dd0 <bindtextdomain@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #736]!	; 0x2e0

00010ddc <strncmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #728]!	; 0x2d8

00010de8 <abort@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #720]!	; 0x2d0

Disassembly of section .text:

00010df4 <.text>:
   10df4:	push	{r4, r5, r6, r7, lr}
   10df8:	mov	r6, r0
   10dfc:	sub	sp, sp, #20
   10e00:	ldr	r0, [r1]
   10e04:	mov	r5, r1
   10e08:	bl	11528 <abort@plt+0x740>
   10e0c:	ldr	r1, [pc, #312]	; 10f4c <abort@plt+0x164>
   10e10:	mov	r0, #6
   10e14:	bl	10dac <setlocale@plt>
   10e18:	ldr	r1, [pc, #304]	; 10f50 <abort@plt+0x168>
   10e1c:	ldr	r0, [pc, #304]	; 10f54 <abort@plt+0x16c>
   10e20:	bl	10dd0 <bindtextdomain@plt>
   10e24:	ldr	r0, [pc, #296]	; 10f54 <abort@plt+0x16c>
   10e28:	bl	10c74 <textdomain@plt>
   10e2c:	ldr	r0, [pc, #292]	; 10f58 <abort@plt+0x170>
   10e30:	bl	14518 <abort@plt+0x3730>
   10e34:	ldr	r1, [pc, #288]	; 10f5c <abort@plt+0x174>
   10e38:	ldr	r2, [pc, #288]	; 10f60 <abort@plt+0x178>
   10e3c:	ldr	r3, [pc, #288]	; 10f64 <abort@plt+0x17c>
   10e40:	ldr	r1, [r1]
   10e44:	mov	r4, #0
   10e48:	str	r1, [sp]
   10e4c:	mov	r0, r6
   10e50:	mov	r1, r5
   10e54:	str	r2, [sp, #8]
   10e58:	str	r3, [sp, #4]
   10e5c:	ldr	r2, [pc, #260]	; 10f68 <abort@plt+0x180>
   10e60:	ldr	r3, [pc, #260]	; 10f6c <abort@plt+0x184>
   10e64:	str	r4, [sp, #12]
   10e68:	bl	11448 <abort@plt+0x660>
   10e6c:	str	r4, [sp]
   10e70:	mov	r1, r5
   10e74:	mov	r0, r6
   10e78:	ldr	r3, [pc, #240]	; 10f70 <abort@plt+0x188>
   10e7c:	ldr	r2, [pc, #200]	; 10f4c <abort@plt+0x164>
   10e80:	bl	10d1c <getopt_long@plt>
   10e84:	cmn	r0, #1
   10e88:	bne	10f20 <abort@plt+0x138>
   10e8c:	ldr	r7, [pc, #224]	; 10f74 <abort@plt+0x18c>
   10e90:	ldr	r3, [r7]
   10e94:	cmp	r3, r6
   10e98:	bne	10eec <abort@plt+0x104>
   10e9c:	bl	10d4c <__errno_location@plt>
   10ea0:	str	r4, [r0]
   10ea4:	mov	r5, r0
   10ea8:	bl	10c80 <geteuid@plt>
   10eac:	cmn	r0, #1
   10eb0:	mov	r4, r0
   10eb4:	bne	10ec4 <abort@plt+0xdc>
   10eb8:	ldr	r6, [r5]
   10ebc:	cmp	r6, #0
   10ec0:	bne	10f28 <abort@plt+0x140>
   10ec4:	mov	r0, r4
   10ec8:	bl	10bfc <getpwuid@plt>
   10ecc:	cmp	r0, #0
   10ed0:	ldreq	r6, [r5]
   10ed4:	beq	10f28 <abort@plt+0x140>
   10ed8:	ldr	r0, [r0]
   10edc:	bl	10ce0 <puts@plt>
   10ee0:	mov	r0, #0
   10ee4:	add	sp, sp, #20
   10ee8:	pop	{r4, r5, r6, r7, pc}
   10eec:	mov	r2, #5
   10ef0:	ldr	r1, [pc, #128]	; 10f78 <abort@plt+0x190>
   10ef4:	mov	r0, r4
   10ef8:	bl	10c50 <dcgettext@plt>
   10efc:	ldr	r3, [r7]
   10f00:	mov	r6, r0
   10f04:	ldr	r0, [r5, r3, lsl #2]
   10f08:	bl	1378c <abort@plt+0x29a4>
   10f0c:	mov	r2, r6
   10f10:	mov	r1, r4
   10f14:	mov	r3, r0
   10f18:	mov	r0, r4
   10f1c:	bl	10cd4 <error@plt>
   10f20:	mov	r0, #1
   10f24:	bl	11070 <abort@plt+0x288>
   10f28:	mov	r2, #5
   10f2c:	ldr	r1, [pc, #72]	; 10f7c <abort@plt+0x194>
   10f30:	mov	r0, #0
   10f34:	bl	10c50 <dcgettext@plt>
   10f38:	mov	r3, r4
   10f3c:	mov	r1, r6
   10f40:	mov	r2, r0
   10f44:	mov	r0, #1
   10f48:	bl	10cd4 <error@plt>
   10f4c:	andeq	r4, r1, r0, lsr #12
   10f50:	andeq	r4, r1, ip, ror r7
   10f54:	ldrdeq	r4, [r1], -r0
   10f58:	andeq	r1, r1, r0, ror r3
   10f5c:	ldrdeq	r5, [r2], -r0
   10f60:	muleq	r1, r0, r7
   10f64:	andeq	r1, r1, r0, ror r0
   10f68:	andeq	r4, r1, r4, lsl #11
   10f6c:	andeq	r4, r1, ip, asr #13
   10f70:	andeq	r4, r1, r4, ror r5
   10f74:	andeq	r5, r2, r0, lsr #2
   10f78:	andeq	r4, r1, r4, lsr #15
   10f7c:			; <UNDEFINED> instruction: 0x000147b8
   10f80:	mov	fp, #0
   10f84:	mov	lr, #0
   10f88:	pop	{r1}		; (ldr r1, [sp], #4)
   10f8c:	mov	r2, sp
   10f90:	push	{r2}		; (str r2, [sp, #-4]!)
   10f94:	push	{r0}		; (str r0, [sp, #-4]!)
   10f98:	ldr	ip, [pc, #16]	; 10fb0 <abort@plt+0x1c8>
   10f9c:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa0:	ldr	r0, [pc, #12]	; 10fb4 <abort@plt+0x1cc>
   10fa4:	ldr	r3, [pc, #12]	; 10fb8 <abort@plt+0x1d0>
   10fa8:	bl	10cf8 <__libc_start_main@plt>
   10fac:	bl	10de8 <abort@plt>
   10fb0:	andeq	r4, r1, r4, lsl r5
   10fb4:	strdeq	r0, [r1], -r4
   10fb8:			; <UNDEFINED> instruction: 0x000144b4
   10fbc:	ldr	r3, [pc, #20]	; 10fd8 <abort@plt+0x1f0>
   10fc0:	ldr	r2, [pc, #20]	; 10fdc <abort@plt+0x1f4>
   10fc4:	add	r3, pc, r3
   10fc8:	ldr	r2, [r3, r2]
   10fcc:	cmp	r2, #0
   10fd0:	bxeq	lr
   10fd4:	b	10d10 <__gmon_start__@plt>
   10fd8:	andeq	r4, r1, r4, lsr r0
   10fdc:	andeq	r0, r0, r4, asr #1
   10fe0:	ldr	r0, [pc, #24]	; 11000 <abort@plt+0x218>
   10fe4:	ldr	r3, [pc, #24]	; 11004 <abort@plt+0x21c>
   10fe8:	cmp	r3, r0
   10fec:	bxeq	lr
   10ff0:	ldr	r3, [pc, #16]	; 11008 <abort@plt+0x220>
   10ff4:	cmp	r3, #0
   10ff8:	bxeq	lr
   10ffc:	bx	r3
   11000:	andeq	r5, r2, r8, lsl r1
   11004:	andeq	r5, r2, r8, lsl r1
   11008:	andeq	r0, r0, r0
   1100c:	ldr	r0, [pc, #36]	; 11038 <abort@plt+0x250>
   11010:	ldr	r1, [pc, #36]	; 1103c <abort@plt+0x254>
   11014:	sub	r1, r1, r0
   11018:	asr	r1, r1, #2
   1101c:	add	r1, r1, r1, lsr #31
   11020:	asrs	r1, r1, #1
   11024:	bxeq	lr
   11028:	ldr	r3, [pc, #16]	; 11040 <abort@plt+0x258>
   1102c:	cmp	r3, #0
   11030:	bxeq	lr
   11034:	bx	r3
   11038:	andeq	r5, r2, r8, lsl r1
   1103c:	andeq	r5, r2, r8, lsl r1
   11040:	andeq	r0, r0, r0
   11044:	push	{r4, lr}
   11048:	ldr	r4, [pc, #24]	; 11068 <abort@plt+0x280>
   1104c:	ldrb	r3, [r4]
   11050:	cmp	r3, #0
   11054:	popne	{r4, pc}
   11058:	bl	10fe0 <abort@plt+0x1f8>
   1105c:	mov	r3, #1
   11060:	strb	r3, [r4]
   11064:	pop	{r4, pc}
   11068:	andeq	r5, r2, r4, lsr r1
   1106c:	b	1100c <abort@plt+0x224>
   11070:	ldr	r3, [pc, #648]	; 11300 <abort@plt+0x518>
   11074:	push	{r7, lr}
   11078:	sub	sp, sp, #64	; 0x40
   1107c:	ldr	r3, [r3]
   11080:	subs	r6, r0, #0
   11084:	str	r3, [sp, #60]	; 0x3c
   11088:	beq	110c4 <abort@plt+0x2dc>
   1108c:	ldr	r3, [pc, #624]	; 11304 <abort@plt+0x51c>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #620]	; 11308 <abort@plt+0x520>
   11098:	mov	r0, #0
   1109c:	ldr	r4, [r3]
   110a0:	bl	10c50 <dcgettext@plt>
   110a4:	ldr	r3, [pc, #608]	; 1130c <abort@plt+0x524>
   110a8:	mov	r1, #1
   110ac:	ldr	r3, [r3]
   110b0:	mov	r2, r0
   110b4:	mov	r0, r4
   110b8:	bl	10d88 <__fprintf_chk@plt>
   110bc:	mov	r0, r6
   110c0:	bl	10d34 <exit@plt>
   110c4:	mov	r2, #5
   110c8:	ldr	r1, [pc, #576]	; 11310 <abort@plt+0x528>
   110cc:	bl	10c50 <dcgettext@plt>
   110d0:	ldr	r3, [pc, #564]	; 1130c <abort@plt+0x524>
   110d4:	ldr	r4, [pc, #568]	; 11314 <abort@plt+0x52c>
   110d8:	ldr	r2, [r3]
   110dc:	mov	r1, r0
   110e0:	mov	r0, #1
   110e4:	bl	10d70 <__printf_chk@plt>
   110e8:	mov	r2, #5
   110ec:	ldr	r1, [pc, #548]	; 11318 <abort@plt+0x530>
   110f0:	mov	r0, r6
   110f4:	bl	10c50 <dcgettext@plt>
   110f8:	ldr	r1, [r4]
   110fc:	bl	10bd8 <fputs_unlocked@plt>
   11100:	mov	r2, #5
   11104:	ldr	r1, [pc, #528]	; 1131c <abort@plt+0x534>
   11108:	mov	r0, r6
   1110c:	bl	10c50 <dcgettext@plt>
   11110:	ldr	r1, [r4]
   11114:	bl	10bd8 <fputs_unlocked@plt>
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #508]	; 11320 <abort@plt+0x538>
   11120:	mov	r0, r6
   11124:	bl	10c50 <dcgettext@plt>
   11128:	ldr	r1, [r4]
   1112c:	bl	10bd8 <fputs_unlocked@plt>
   11130:	ldr	lr, [pc, #492]	; 11324 <abort@plt+0x53c>
   11134:	add	ip, sp, #4
   11138:	ldm	lr!, {r0, r1, r2, r3}
   1113c:	stmia	ip!, {r0, r1, r2, r3}
   11140:	ldm	lr!, {r0, r1, r2, r3}
   11144:	ldr	r5, [sp, #4]
   11148:	stmia	ip!, {r0, r1, r2, r3}
   1114c:	cmp	r5, #0
   11150:	ldm	lr!, {r0, r1, r2, r3}
   11154:	addeq	r4, sp, #4
   11158:	stmia	ip!, {r0, r1, r2, r3}
   1115c:	ldm	lr, {r0, r1}
   11160:	stm	ip, {r0, r1}
   11164:	beq	11194 <abort@plt+0x3ac>
   11168:	ldr	r7, [pc, #440]	; 11328 <abort@plt+0x540>
   1116c:	add	r4, sp, #4
   11170:	b	11180 <abort@plt+0x398>
   11174:	ldr	r5, [r4, #8]!
   11178:	cmp	r5, #0
   1117c:	beq	11194 <abort@plt+0x3ac>
   11180:	mov	r1, r5
   11184:	mov	r0, r7
   11188:	bl	10bf0 <strcmp@plt>
   1118c:	cmp	r0, #0
   11190:	bne	11174 <abort@plt+0x38c>
   11194:	ldr	r4, [r4, #4]
   11198:	mov	r2, #5
   1119c:	cmp	r4, #0
   111a0:	ldr	r1, [pc, #388]	; 1132c <abort@plt+0x544>
   111a4:	beq	1124c <abort@plt+0x464>
   111a8:	mov	r0, #0
   111ac:	bl	10c50 <dcgettext@plt>
   111b0:	ldr	r3, [pc, #376]	; 11330 <abort@plt+0x548>
   111b4:	ldr	r2, [pc, #376]	; 11334 <abort@plt+0x54c>
   111b8:	mov	r1, r0
   111bc:	mov	r0, #1
   111c0:	bl	10d70 <__printf_chk@plt>
   111c4:	mov	r1, #0
   111c8:	mov	r0, #5
   111cc:	bl	10dac <setlocale@plt>
   111d0:	cmp	r0, #0
   111d4:	ldreq	r5, [pc, #332]	; 11328 <abort@plt+0x540>
   111d8:	beq	111f4 <abort@plt+0x40c>
   111dc:	mov	r2, #3
   111e0:	ldr	r1, [pc, #336]	; 11338 <abort@plt+0x550>
   111e4:	bl	10ddc <strncmp@plt>
   111e8:	ldr	r5, [pc, #312]	; 11328 <abort@plt+0x540>
   111ec:	cmp	r0, #0
   111f0:	bne	112dc <abort@plt+0x4f4>
   111f4:	mov	r2, #5
   111f8:	ldr	r1, [pc, #316]	; 1133c <abort@plt+0x554>
   111fc:	mov	r0, #0
   11200:	bl	10c50 <dcgettext@plt>
   11204:	ldr	r3, [pc, #284]	; 11328 <abort@plt+0x540>
   11208:	ldr	r2, [pc, #288]	; 11330 <abort@plt+0x548>
   1120c:	mov	r1, r0
   11210:	mov	r0, #1
   11214:	bl	10d70 <__printf_chk@plt>
   11218:	mov	r2, #5
   1121c:	ldr	r1, [pc, #284]	; 11340 <abort@plt+0x558>
   11220:	mov	r0, #0
   11224:	bl	10c50 <dcgettext@plt>
   11228:	ldr	r2, [pc, #276]	; 11344 <abort@plt+0x55c>
   1122c:	cmp	r4, r5
   11230:	ldr	r3, [pc, #272]	; 11348 <abort@plt+0x560>
   11234:	movne	r3, r2
   11238:	mov	r1, r0
   1123c:	mov	r2, r4
   11240:	mov	r0, #1
   11244:	bl	10d70 <__printf_chk@plt>
   11248:	b	110bc <abort@plt+0x2d4>
   1124c:	mov	r0, r4
   11250:	bl	10c50 <dcgettext@plt>
   11254:	ldr	r3, [pc, #212]	; 11330 <abort@plt+0x548>
   11258:	ldr	r2, [pc, #212]	; 11334 <abort@plt+0x54c>
   1125c:	mov	r1, r0
   11260:	mov	r0, #1
   11264:	bl	10d70 <__printf_chk@plt>
   11268:	mov	r1, r4
   1126c:	mov	r0, #5
   11270:	bl	10dac <setlocale@plt>
   11274:	cmp	r0, #0
   11278:	beq	11290 <abort@plt+0x4a8>
   1127c:	mov	r2, #3
   11280:	ldr	r1, [pc, #176]	; 11338 <abort@plt+0x550>
   11284:	bl	10ddc <strncmp@plt>
   11288:	cmp	r0, #0
   1128c:	bne	112d4 <abort@plt+0x4ec>
   11290:	mov	r2, #5
   11294:	ldr	r1, [pc, #160]	; 1133c <abort@plt+0x554>
   11298:	mov	r0, #0
   1129c:	bl	10c50 <dcgettext@plt>
   112a0:	ldr	r3, [pc, #128]	; 11328 <abort@plt+0x540>
   112a4:	ldr	r2, [pc, #132]	; 11330 <abort@plt+0x548>
   112a8:	mov	r4, r3
   112ac:	mov	r1, r0
   112b0:	mov	r0, #1
   112b4:	bl	10d70 <__printf_chk@plt>
   112b8:	ldr	r1, [pc, #128]	; 11340 <abort@plt+0x558>
   112bc:	mov	r2, #5
   112c0:	mov	r0, #0
   112c4:	bl	10c50 <dcgettext@plt>
   112c8:	ldr	r3, [pc, #120]	; 11348 <abort@plt+0x560>
   112cc:	mov	r1, r0
   112d0:	b	1123c <abort@plt+0x454>
   112d4:	ldr	r5, [pc, #76]	; 11328 <abort@plt+0x540>
   112d8:	mov	r4, r5
   112dc:	mov	r2, #5
   112e0:	ldr	r1, [pc, #100]	; 1134c <abort@plt+0x564>
   112e4:	mov	r0, #0
   112e8:	bl	10c50 <dcgettext@plt>
   112ec:	ldr	r2, [pc, #52]	; 11328 <abort@plt+0x540>
   112f0:	mov	r1, r0
   112f4:	mov	r0, #1
   112f8:	bl	10d70 <__printf_chk@plt>
   112fc:	b	111f4 <abort@plt+0x40c>
   11300:	andeq	r4, r2, r8, lsl #30
   11304:	andeq	r5, r2, r8, lsr #2
   11308:	andeq	r4, r1, ip, lsl #11
   1130c:	andeq	r5, r2, r0, asr #2
   11310:			; <UNDEFINED> instruction: 0x000145b4
   11314:	andeq	r5, r2, ip, lsr #2
   11318:	andeq	r4, r1, ip, asr #11
   1131c:	andeq	r4, r1, r4, lsr #12
   11320:	andeq	r4, r1, r4, asr r6
   11324:	andeq	r4, r1, ip, lsr r5
   11328:	andeq	r4, r1, r4, lsl #11
   1132c:	andeq	r4, r1, ip, lsl #13
   11330:	andeq	r4, r1, r4, lsr #13
   11334:	andeq	r4, r1, ip, asr #13
   11338:	ldrdeq	r4, [r1], -ip
   1133c:	andeq	r4, r1, r8, lsr #14
   11340:	andeq	r4, r1, r8, asr #14
   11344:	andeq	r4, r1, r0, lsr #12
   11348:	andeq	r4, r1, r4, ror #15
   1134c:	andeq	r4, r1, r0, ror #13
   11350:	ldr	r3, [pc, #4]	; 1135c <abort@plt+0x574>
   11354:	str	r0, [r3]
   11358:	bx	lr
   1135c:	andeq	r5, r2, r8, lsr r1
   11360:	ldr	r3, [pc, #4]	; 1136c <abort@plt+0x584>
   11364:	strb	r0, [r3, #4]
   11368:	bx	lr
   1136c:	andeq	r5, r2, r8, lsr r1
   11370:	ldr	r3, [pc, #180]	; 1142c <abort@plt+0x644>
   11374:	push	{r4, r5, r6, lr}
   11378:	sub	sp, sp, #8
   1137c:	ldr	r0, [r3]
   11380:	bl	14004 <abort@plt+0x321c>
   11384:	cmp	r0, #0
   11388:	beq	113b0 <abort@plt+0x5c8>
   1138c:	bl	10d4c <__errno_location@plt>
   11390:	ldr	r5, [pc, #152]	; 11430 <abort@plt+0x648>
   11394:	ldrb	r3, [r5, #4]
   11398:	cmp	r3, #0
   1139c:	mov	r4, r0
   113a0:	beq	113cc <abort@plt+0x5e4>
   113a4:	ldr	r3, [r0]
   113a8:	cmp	r3, #32
   113ac:	bne	113cc <abort@plt+0x5e4>
   113b0:	ldr	r3, [pc, #124]	; 11434 <abort@plt+0x64c>
   113b4:	ldr	r0, [r3]
   113b8:	bl	14004 <abort@plt+0x321c>
   113bc:	cmp	r0, #0
   113c0:	bne	1140c <abort@plt+0x624>
   113c4:	add	sp, sp, #8
   113c8:	pop	{r4, r5, r6, pc}
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #96]	; 11438 <abort@plt+0x650>
   113d4:	mov	r0, #0
   113d8:	bl	10c50 <dcgettext@plt>
   113dc:	mov	r6, r0
   113e0:	ldr	r0, [r5]
   113e4:	cmp	r0, #0
   113e8:	beq	11418 <abort@plt+0x630>
   113ec:	ldr	r4, [r4]
   113f0:	bl	135ac <abort@plt+0x27c4>
   113f4:	mov	r1, r4
   113f8:	str	r6, [sp]
   113fc:	ldr	r2, [pc, #56]	; 1143c <abort@plt+0x654>
   11400:	mov	r3, r0
   11404:	mov	r0, #0
   11408:	bl	10cd4 <error@plt>
   1140c:	ldr	r3, [pc, #44]	; 11440 <abort@plt+0x658>
   11410:	ldr	r0, [r3]
   11414:	bl	10c20 <_exit@plt>
   11418:	mov	r3, r6
   1141c:	ldr	r1, [r4]
   11420:	ldr	r2, [pc, #28]	; 11444 <abort@plt+0x65c>
   11424:	bl	10cd4 <error@plt>
   11428:	b	1140c <abort@plt+0x624>
   1142c:	andeq	r5, r2, ip, lsr #2
   11430:	andeq	r5, r2, r8, lsr r1
   11434:	andeq	r5, r2, r8, lsr #2
   11438:	andeq	r4, r1, r0, asr r8
   1143c:	andeq	r4, r1, ip, asr r8
   11440:	ldrdeq	r5, [r2], -r4
   11444:	andeq	r4, r1, r0, ror #16
   11448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1144c:	sub	sp, sp, #20
   11450:	ldr	r5, [pc, #184]	; 11510 <abort@plt+0x728>
   11454:	ldr	r4, [pc, #184]	; 11514 <abort@plt+0x72c>
   11458:	mov	r6, #0
   1145c:	ldr	ip, [r5]
   11460:	cmp	r0, #2
   11464:	ldr	r7, [r4]
   11468:	str	ip, [sp, #12]
   1146c:	ldr	sl, [sp, #56]	; 0x38
   11470:	str	r6, [r4]
   11474:	ldr	fp, [sp, #60]	; 0x3c
   11478:	beq	114a4 <abort@plt+0x6bc>
   1147c:	ldr	r0, [sp, #12]
   11480:	ldr	r3, [pc, #144]	; 11518 <abort@plt+0x730>
   11484:	ldr	r1, [r5]
   11488:	mov	r2, #0
   1148c:	cmp	r0, r1
   11490:	str	r7, [r4]
   11494:	str	r2, [r3]
   11498:	bne	1150c <abort@plt+0x724>
   1149c:	add	sp, sp, #20
   114a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114a4:	mov	r8, r2
   114a8:	mov	r9, r3
   114ac:	str	r6, [sp]
   114b0:	ldr	r3, [pc, #100]	; 1151c <abort@plt+0x734>
   114b4:	ldr	r2, [pc, #100]	; 11520 <abort@plt+0x738>
   114b8:	bl	10d1c <getopt_long@plt>
   114bc:	cmn	r0, #1
   114c0:	beq	1147c <abort@plt+0x694>
   114c4:	cmp	r0, #104	; 0x68
   114c8:	beq	11500 <abort@plt+0x718>
   114cc:	cmp	r0, #118	; 0x76
   114d0:	bne	1147c <abort@plt+0x694>
   114d4:	ldr	r0, [pc, #72]	; 11524 <abort@plt+0x73c>
   114d8:	add	ip, sp, #64	; 0x40
   114dc:	mov	r3, sl
   114e0:	ldr	r0, [r0]
   114e4:	mov	r2, r9
   114e8:	mov	r1, r8
   114ec:	str	ip, [sp]
   114f0:	str	ip, [sp, #8]
   114f4:	bl	13b8c <abort@plt+0x2da4>
   114f8:	mov	r0, r6
   114fc:	bl	10d34 <exit@plt>
   11500:	mov	r0, r6
   11504:	blx	fp
   11508:	b	1147c <abort@plt+0x694>
   1150c:	bl	10c5c <__stack_chk_fail@plt>
   11510:	andeq	r4, r2, r8, lsl #30
   11514:	andeq	r5, r2, r0, lsr r1
   11518:	andeq	r5, r2, r0, lsr #2
   1151c:	andeq	r4, r1, r4, ror #16
   11520:	muleq	r1, r4, r8
   11524:	andeq	r5, r2, ip, lsr #2
   11528:	push	{r4, r5, r6, lr}
   1152c:	subs	r4, r0, #0
   11530:	beq	115a4 <abort@plt+0x7bc>
   11534:	mov	r1, #47	; 0x2f
   11538:	bl	10db8 <strrchr@plt>
   1153c:	subs	r5, r0, #0
   11540:	beq	11590 <abort@plt+0x7a8>
   11544:	add	r6, r5, #1
   11548:	sub	r3, r6, r4
   1154c:	cmp	r3, #6
   11550:	ble	11590 <abort@plt+0x7a8>
   11554:	mov	r2, #7
   11558:	ldr	r1, [pc, #96]	; 115c0 <abort@plt+0x7d8>
   1155c:	sub	r0, r5, #6
   11560:	bl	10ddc <strncmp@plt>
   11564:	cmp	r0, #0
   11568:	bne	11590 <abort@plt+0x7a8>
   1156c:	mov	r2, #3
   11570:	ldr	r1, [pc, #76]	; 115c4 <abort@plt+0x7dc>
   11574:	mov	r0, r6
   11578:	bl	10ddc <strncmp@plt>
   1157c:	cmp	r0, #0
   11580:	movne	r4, r6
   11584:	ldreq	r3, [pc, #60]	; 115c8 <abort@plt+0x7e0>
   11588:	addeq	r4, r5, #4
   1158c:	streq	r4, [r3]
   11590:	ldr	r2, [pc, #52]	; 115cc <abort@plt+0x7e4>
   11594:	ldr	r3, [pc, #52]	; 115d0 <abort@plt+0x7e8>
   11598:	str	r4, [r2]
   1159c:	str	r4, [r3]
   115a0:	pop	{r4, r5, r6, pc}
   115a4:	ldr	r3, [pc, #40]	; 115d4 <abort@plt+0x7ec>
   115a8:	mov	r2, #55	; 0x37
   115ac:	mov	r1, #1
   115b0:	ldr	r3, [r3]
   115b4:	ldr	r0, [pc, #28]	; 115d8 <abort@plt+0x7f0>
   115b8:	bl	10c98 <fwrite@plt>
   115bc:	bl	10de8 <abort@plt>
   115c0:	andeq	r4, r1, r0, ror #17
   115c4:	andeq	r4, r1, r8, ror #17
   115c8:	andeq	r5, r2, r8, lsl r1
   115cc:	andeq	r5, r2, r0, asr #2
   115d0:	andeq	r5, r2, ip, lsl r1
   115d4:	andeq	r5, r2, r8, lsr #2
   115d8:	andeq	r4, r1, r8, lsr #17
   115dc:	push	{r4, lr}
   115e0:	mov	r2, #48	; 0x30
   115e4:	mov	r4, r1
   115e8:	mov	r1, #0
   115ec:	bl	10d64 <memset@plt>
   115f0:	cmp	r4, #10
   115f4:	beq	11600 <abort@plt+0x818>
   115f8:	str	r4, [r0]
   115fc:	pop	{r4, pc}
   11600:	bl	10de8 <abort@plt>
   11604:	push	{r4, r5, r6, lr}
   11608:	mov	r2, #5
   1160c:	mov	r5, r0
   11610:	mov	r6, r1
   11614:	mov	r1, r0
   11618:	mov	r0, #0
   1161c:	bl	10c50 <dcgettext@plt>
   11620:	cmp	r5, r0
   11624:	mov	r4, r0
   11628:	beq	11634 <abort@plt+0x84c>
   1162c:	mov	r0, r4
   11630:	pop	{r4, r5, r6, pc}
   11634:	bl	140c4 <abort@plt+0x32dc>
   11638:	ldrb	r3, [r0]
   1163c:	bic	r3, r3, #32
   11640:	cmp	r3, #85	; 0x55
   11644:	bne	116a4 <abort@plt+0x8bc>
   11648:	ldrb	r3, [r0, #1]
   1164c:	bic	r3, r3, #32
   11650:	cmp	r3, #84	; 0x54
   11654:	bne	1171c <abort@plt+0x934>
   11658:	ldrb	r3, [r0, #2]
   1165c:	bic	r3, r3, #32
   11660:	cmp	r3, #70	; 0x46
   11664:	bne	1171c <abort@plt+0x934>
   11668:	ldrb	r3, [r0, #3]
   1166c:	cmp	r3, #45	; 0x2d
   11670:	bne	1171c <abort@plt+0x934>
   11674:	ldrb	r3, [r0, #4]
   11678:	cmp	r3, #56	; 0x38
   1167c:	bne	1171c <abort@plt+0x934>
   11680:	ldrb	r3, [r0, #5]
   11684:	cmp	r3, #0
   11688:	bne	1171c <abort@plt+0x934>
   1168c:	ldrb	r2, [r4]
   11690:	ldr	r3, [pc, #156]	; 11734 <abort@plt+0x94c>
   11694:	ldr	r4, [pc, #156]	; 11738 <abort@plt+0x950>
   11698:	cmp	r2, #96	; 0x60
   1169c:	movne	r4, r3
   116a0:	b	1162c <abort@plt+0x844>
   116a4:	cmp	r3, #71	; 0x47
   116a8:	bne	1171c <abort@plt+0x934>
   116ac:	ldrb	r3, [r0, #1]
   116b0:	bic	r3, r3, #32
   116b4:	cmp	r3, #66	; 0x42
   116b8:	bne	1171c <abort@plt+0x934>
   116bc:	ldrb	r3, [r0, #2]
   116c0:	cmp	r3, #49	; 0x31
   116c4:	bne	1171c <abort@plt+0x934>
   116c8:	ldrb	r3, [r0, #3]
   116cc:	cmp	r3, #56	; 0x38
   116d0:	bne	1171c <abort@plt+0x934>
   116d4:	ldrb	r3, [r0, #4]
   116d8:	cmp	r3, #48	; 0x30
   116dc:	bne	1171c <abort@plt+0x934>
   116e0:	ldrb	r3, [r0, #5]
   116e4:	cmp	r3, #51	; 0x33
   116e8:	bne	1171c <abort@plt+0x934>
   116ec:	ldrb	r3, [r0, #6]
   116f0:	cmp	r3, #48	; 0x30
   116f4:	bne	1171c <abort@plt+0x934>
   116f8:	ldrb	r3, [r0, #7]
   116fc:	cmp	r3, #0
   11700:	bne	1171c <abort@plt+0x934>
   11704:	ldrb	r2, [r4]
   11708:	ldr	r3, [pc, #44]	; 1173c <abort@plt+0x954>
   1170c:	ldr	r4, [pc, #44]	; 11740 <abort@plt+0x958>
   11710:	cmp	r2, #96	; 0x60
   11714:	movne	r4, r3
   11718:	b	1162c <abort@plt+0x844>
   1171c:	ldr	r3, [pc, #32]	; 11744 <abort@plt+0x95c>
   11720:	ldr	r4, [pc, #32]	; 11748 <abort@plt+0x960>
   11724:	cmp	r6, #9
   11728:	movne	r4, r3
   1172c:	mov	r0, r4
   11730:	pop	{r4, r5, r6, pc}
   11734:	andeq	r4, r1, r4, asr #18
   11738:	andeq	r4, r1, r0, asr r9
   1173c:	andeq	r4, r1, r8, asr #18
   11740:	andeq	r4, r1, ip, asr #18
   11744:	andeq	r4, r1, r4, asr r9
   11748:	andeq	r4, r1, r0, asr #18
   1174c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11750:	sub	sp, sp, #124	; 0x7c
   11754:	ldr	ip, [pc, #3576]	; 12554 <abort@plt+0x176c>
   11758:	str	r3, [sp, #24]
   1175c:	ldr	r3, [sp, #168]	; 0xa8
   11760:	ldr	ip, [ip]
   11764:	str	r3, [sp, #56]	; 0x38
   11768:	ldr	r3, [sp, #172]	; 0xac
   1176c:	ldr	r8, [sp, #160]	; 0xa0
   11770:	str	r3, [sp, #80]	; 0x50
   11774:	ldr	r3, [sp, #176]	; 0xb0
   11778:	mov	fp, r0
   1177c:	str	r3, [sp, #76]	; 0x4c
   11780:	mov	sl, r1
   11784:	str	r2, [sp, #36]	; 0x24
   11788:	str	ip, [sp, #116]	; 0x74
   1178c:	bl	10cb0 <__ctype_get_mb_cur_max@plt>
   11790:	ldr	r3, [sp, #164]	; 0xa4
   11794:	ands	r4, r3, #2
   11798:	movne	r3, #1
   1179c:	moveq	r3, #0
   117a0:	str	r3, [sp, #32]
   117a4:	str	r0, [sp, #64]	; 0x40
   117a8:	cmp	r8, #10
   117ac:	ldrls	pc, [pc, r8, lsl #2]
   117b0:	b	12f60 <abort@plt+0x2178>
   117b4:	andeq	r1, r1, r8, lsr #23
   117b8:	andeq	r1, r1, r0, asr #24
   117bc:	andeq	r2, r1, r0, asr #4
   117c0:	andeq	r1, r1, r0, ror #24
   117c4:	andeq	r1, r1, r4, lsl fp
   117c8:	andeq	r1, r1, ip, asr fp
   117cc:	ldrdeq	r1, [r1], -r8
   117d0:	andeq	r1, r1, r0, lsl ip
   117d4:	andeq	r1, r1, r0, ror #15
   117d8:	andeq	r1, r1, r0, ror #15
   117dc:	andeq	r1, r1, r0, ror #15
   117e0:	cmp	r8, #10
   117e4:	beq	11808 <abort@plt+0xa20>
   117e8:	mov	r1, r8
   117ec:	ldr	r0, [pc, #3428]	; 12558 <abort@plt+0x1770>
   117f0:	bl	11604 <abort@plt+0x81c>
   117f4:	mov	r1, r8
   117f8:	str	r0, [sp, #80]	; 0x50
   117fc:	ldr	r0, [pc, #3420]	; 12560 <abort@plt+0x1778>
   11800:	bl	11604 <abort@plt+0x81c>
   11804:	str	r0, [sp, #76]	; 0x4c
   11808:	cmp	r4, #0
   1180c:	movne	r4, #0
   11810:	beq	12c20 <abort@plt+0x1e38>
   11814:	ldr	r7, [sp, #76]	; 0x4c
   11818:	mov	r5, #0
   1181c:	mov	r6, #1
   11820:	mov	r0, r7
   11824:	str	r6, [sp, #40]	; 0x28
   11828:	str	r5, [sp, #68]	; 0x44
   1182c:	bl	10d40 <strlen@plt>
   11830:	str	r6, [sp, #28]
   11834:	str	r5, [sp, #44]	; 0x2c
   11838:	str	r5, [sp, #72]	; 0x48
   1183c:	str	r7, [sp, #60]	; 0x3c
   11840:	str	r0, [sp, #52]	; 0x34
   11844:	str	r8, [sp, #160]	; 0xa0
   11848:	mov	r8, fp
   1184c:	ldr	fp, [sp, #160]	; 0xa0
   11850:	mov	r9, #0
   11854:	ldr	r3, [sp, #24]
   11858:	cmn	r3, #1
   1185c:	beq	11dc4 <abort@plt+0xfdc>
   11860:	ldr	r3, [sp, #24]
   11864:	subs	r6, r3, r9
   11868:	movne	r6, #1
   1186c:	cmp	r6, #0
   11870:	beq	11ddc <abort@plt+0xff4>
   11874:	ldr	r7, [sp, #28]
   11878:	ldr	r0, [sp, #36]	; 0x24
   1187c:	cmp	fp, #2
   11880:	moveq	r7, #0
   11884:	andne	r7, r7, #1
   11888:	add	r3, r0, r9
   1188c:	cmp	r7, #0
   11890:	str	r3, [sp, #48]	; 0x30
   11894:	beq	12280 <abort@plt+0x1498>
   11898:	ldr	r2, [sp, #52]	; 0x34
   1189c:	cmp	r2, #0
   118a0:	beq	12564 <abort@plt+0x177c>
   118a4:	ldr	r1, [sp, #24]
   118a8:	cmp	r2, #1
   118ac:	mov	r3, r2
   118b0:	movls	r3, #0
   118b4:	movhi	r3, #1
   118b8:	cmn	r1, #1
   118bc:	movne	r3, #0
   118c0:	cmp	r3, #0
   118c4:	add	r5, r9, r2
   118c8:	beq	118d4 <abort@plt+0xaec>
   118cc:	bl	10d40 <strlen@plt>
   118d0:	str	r0, [sp, #24]
   118d4:	ldr	r3, [sp, #24]
   118d8:	cmp	r5, r3
   118dc:	bhi	12564 <abort@plt+0x177c>
   118e0:	ldr	r2, [sp, #52]	; 0x34
   118e4:	ldr	r1, [sp, #60]	; 0x3c
   118e8:	ldr	r0, [sp, #48]	; 0x30
   118ec:	bl	10c44 <memcmp@plt>
   118f0:	cmp	r0, #0
   118f4:	bne	12564 <abort@plt+0x177c>
   118f8:	ldr	r3, [sp, #32]
   118fc:	cmp	r3, #0
   11900:	bne	12e20 <abort@plt+0x2038>
   11904:	ldr	r3, [sp, #48]	; 0x30
   11908:	ldrb	r5, [r3]
   1190c:	cmp	r5, #126	; 0x7e
   11910:	ldrls	pc, [pc, r5, lsl #2]
   11914:	b	121e4 <abort@plt+0x13fc>
   11918:	ldrdeq	r2, [r1], -r0
   1191c:	andeq	r2, r1, r4, ror #3
   11920:	andeq	r2, r1, r4, ror #3
   11924:	andeq	r2, r1, r4, ror #3
   11928:	andeq	r2, r1, r4, ror #3
   1192c:	andeq	r2, r1, r4, ror #3
   11930:	andeq	r2, r1, r4, ror #3
   11934:	muleq	r1, ip, r1
   11938:	andeq	r2, r1, ip, lsl #3
   1193c:	andeq	r2, r1, ip, lsl #1
   11940:	andeq	r2, r1, r4, asr r0
   11944:	andeq	r2, r1, ip, lsr #1
   11948:	muleq	r1, r4, r0
   1194c:	andeq	r1, r1, r4, asr #31
   11950:	andeq	r2, r1, r4, ror #3
   11954:	andeq	r2, r1, r4, ror #3
   11958:	andeq	r2, r1, r4, ror #3
   1195c:	andeq	r2, r1, r4, ror #3
   11960:	andeq	r2, r1, r4, ror #3
   11964:	andeq	r2, r1, r4, ror #3
   11968:	andeq	r2, r1, r4, ror #3
   1196c:	andeq	r2, r1, r4, ror #3
   11970:	andeq	r2, r1, r4, ror #3
   11974:	andeq	r2, r1, r4, ror #3
   11978:	andeq	r2, r1, r4, ror #3
   1197c:	andeq	r2, r1, r4, ror #3
   11980:	andeq	r2, r1, r4, ror #3
   11984:	andeq	r2, r1, r4, ror #3
   11988:	andeq	r2, r1, r4, ror #3
   1198c:	andeq	r2, r1, r4, ror #3
   11990:	andeq	r2, r1, r4, ror #3
   11994:	andeq	r2, r1, r4, ror #3
   11998:	andeq	r2, r1, r4, lsr #3
   1199c:	strheq	r2, [r1], -r8
   119a0:	strheq	r2, [r1], -r8
   119a4:			; <UNDEFINED> instruction: 0x000121bc
   119a8:	strheq	r2, [r1], -r8
   119ac:	ldrdeq	r2, [r1], -r8
   119b0:	strheq	r2, [r1], -r8
   119b4:	strdeq	r1, [r1], -r8
   119b8:	strheq	r2, [r1], -r8
   119bc:	strheq	r2, [r1], -r8
   119c0:	strheq	r2, [r1], -r8
   119c4:	ldrdeq	r2, [r1], -r8
   119c8:	ldrdeq	r2, [r1], -r8
   119cc:	ldrdeq	r2, [r1], -r8
   119d0:	ldrdeq	r2, [r1], -r8
   119d4:	ldrdeq	r2, [r1], -r8
   119d8:	ldrdeq	r2, [r1], -r8
   119dc:	ldrdeq	r2, [r1], -r8
   119e0:	ldrdeq	r2, [r1], -r8
   119e4:	ldrdeq	r2, [r1], -r8
   119e8:	ldrdeq	r2, [r1], -r8
   119ec:	ldrdeq	r2, [r1], -r8
   119f0:	ldrdeq	r2, [r1], -r8
   119f4:	ldrdeq	r2, [r1], -r8
   119f8:	ldrdeq	r2, [r1], -r8
   119fc:	ldrdeq	r2, [r1], -r8
   11a00:	ldrdeq	r2, [r1], -r8
   11a04:	strheq	r2, [r1], -r8
   11a08:	strheq	r2, [r1], -r8
   11a0c:	strheq	r2, [r1], -r8
   11a10:	strheq	r2, [r1], -r8
   11a14:	andeq	r1, r1, ip, asr #29
   11a18:	andeq	r2, r1, r4, ror #3
   11a1c:	ldrdeq	r2, [r1], -r8
   11a20:	ldrdeq	r2, [r1], -r8
   11a24:	ldrdeq	r2, [r1], -r8
   11a28:	ldrdeq	r2, [r1], -r8
   11a2c:	ldrdeq	r2, [r1], -r8
   11a30:	ldrdeq	r2, [r1], -r8
   11a34:	ldrdeq	r2, [r1], -r8
   11a38:	ldrdeq	r2, [r1], -r8
   11a3c:	ldrdeq	r2, [r1], -r8
   11a40:	ldrdeq	r2, [r1], -r8
   11a44:	ldrdeq	r2, [r1], -r8
   11a48:	ldrdeq	r2, [r1], -r8
   11a4c:	ldrdeq	r2, [r1], -r8
   11a50:	ldrdeq	r2, [r1], -r8
   11a54:	ldrdeq	r2, [r1], -r8
   11a58:	ldrdeq	r2, [r1], -r8
   11a5c:	ldrdeq	r2, [r1], -r8
   11a60:	ldrdeq	r2, [r1], -r8
   11a64:	ldrdeq	r2, [r1], -r8
   11a68:	ldrdeq	r2, [r1], -r8
   11a6c:	ldrdeq	r2, [r1], -r8
   11a70:	ldrdeq	r2, [r1], -r8
   11a74:	ldrdeq	r2, [r1], -r8
   11a78:	ldrdeq	r2, [r1], -r8
   11a7c:	ldrdeq	r2, [r1], -r8
   11a80:	ldrdeq	r2, [r1], -r8
   11a84:	strheq	r2, [r1], -r8
   11a88:	andeq	r1, r1, r4, lsl #29
   11a8c:	ldrdeq	r2, [r1], -r8
   11a90:	strheq	r2, [r1], -r8
   11a94:	ldrdeq	r2, [r1], -r8
   11a98:	strheq	r2, [r1], -r8
   11a9c:	ldrdeq	r2, [r1], -r8
   11aa0:	ldrdeq	r2, [r1], -r8
   11aa4:	ldrdeq	r2, [r1], -r8
   11aa8:	ldrdeq	r2, [r1], -r8
   11aac:	ldrdeq	r2, [r1], -r8
   11ab0:	ldrdeq	r2, [r1], -r8
   11ab4:	ldrdeq	r2, [r1], -r8
   11ab8:	ldrdeq	r2, [r1], -r8
   11abc:	ldrdeq	r2, [r1], -r8
   11ac0:	ldrdeq	r2, [r1], -r8
   11ac4:	ldrdeq	r2, [r1], -r8
   11ac8:	ldrdeq	r2, [r1], -r8
   11acc:	ldrdeq	r2, [r1], -r8
   11ad0:	ldrdeq	r2, [r1], -r8
   11ad4:	ldrdeq	r2, [r1], -r8
   11ad8:	ldrdeq	r2, [r1], -r8
   11adc:	ldrdeq	r2, [r1], -r8
   11ae0:	ldrdeq	r2, [r1], -r8
   11ae4:	ldrdeq	r2, [r1], -r8
   11ae8:	ldrdeq	r2, [r1], -r8
   11aec:	ldrdeq	r2, [r1], -r8
   11af0:	ldrdeq	r2, [r1], -r8
   11af4:	ldrdeq	r2, [r1], -r8
   11af8:	ldrdeq	r2, [r1], -r8
   11afc:	ldrdeq	r2, [r1], -r8
   11b00:	ldrdeq	r2, [r1], -r8
   11b04:	muleq	r1, ip, ip
   11b08:	strheq	r2, [r1], -r8
   11b0c:	muleq	r1, ip, ip
   11b10:			; <UNDEFINED> instruction: 0x000121bc
   11b14:	cmp	r4, #0
   11b18:	moveq	r3, #1
   11b1c:	streq	r3, [sp, #28]
   11b20:	beq	1224c <abort@plt+0x1464>
   11b24:	mov	r3, #0
   11b28:	mov	r4, r3
   11b2c:	mov	r2, #1
   11b30:	str	r2, [sp, #40]	; 0x28
   11b34:	str	r3, [sp, #68]	; 0x44
   11b38:	str	r2, [sp, #32]
   11b3c:	str	r2, [sp, #52]	; 0x34
   11b40:	ldr	r3, [pc, #2584]	; 12560 <abort@plt+0x1778>
   11b44:	str	r4, [sp, #44]	; 0x2c
   11b48:	str	r4, [sp, #72]	; 0x48
   11b4c:	str	r4, [sp, #28]
   11b50:	str	r3, [sp, #60]	; 0x3c
   11b54:	mov	r8, #2
   11b58:	b	11844 <abort@plt+0xa5c>
   11b5c:	cmp	r4, #0
   11b60:	bne	12dec <abort@plt+0x2004>
   11b64:	cmp	sl, #0
   11b68:	beq	12bac <abort@plt+0x1dc4>
   11b6c:	mov	r3, #34	; 0x22
   11b70:	strb	r3, [fp]
   11b74:	ldr	r3, [pc, #2528]	; 1255c <abort@plt+0x1774>
   11b78:	mov	r1, r4
   11b7c:	mov	r2, #1
   11b80:	str	r4, [sp, #68]	; 0x44
   11b84:	str	r2, [sp, #40]	; 0x28
   11b88:	mov	r4, r2
   11b8c:	str	r1, [sp, #44]	; 0x2c
   11b90:	str	r1, [sp, #72]	; 0x48
   11b94:	str	r1, [sp, #32]
   11b98:	str	r2, [sp, #28]
   11b9c:	str	r2, [sp, #52]	; 0x34
   11ba0:	str	r3, [sp, #60]	; 0x3c
   11ba4:	b	11844 <abort@plt+0xa5c>
   11ba8:	mov	r3, #0
   11bac:	str	r3, [sp, #68]	; 0x44
   11bb0:	str	r3, [sp, #44]	; 0x2c
   11bb4:	str	r3, [sp, #32]
   11bb8:	str	r3, [sp, #28]
   11bbc:	str	r3, [sp, #60]	; 0x3c
   11bc0:	mov	r3, #1
   11bc4:	str	r8, [sp, #72]	; 0x48
   11bc8:	str	r8, [sp, #52]	; 0x34
   11bcc:	mov	r4, r8
   11bd0:	str	r3, [sp, #40]	; 0x28
   11bd4:	b	11844 <abort@plt+0xa5c>
   11bd8:	mov	r3, #1
   11bdc:	str	r3, [sp, #40]	; 0x28
   11be0:	str	r3, [sp, #32]
   11be4:	str	r3, [sp, #28]
   11be8:	str	r3, [sp, #52]	; 0x34
   11bec:	ldr	r3, [pc, #2408]	; 1255c <abort@plt+0x1774>
   11bf0:	mov	r2, #0
   11bf4:	mov	r4, r2
   11bf8:	str	r2, [sp, #68]	; 0x44
   11bfc:	str	r2, [sp, #44]	; 0x2c
   11c00:	str	r2, [sp, #72]	; 0x48
   11c04:	str	r3, [sp, #60]	; 0x3c
   11c08:	mov	r8, #5
   11c0c:	b	11844 <abort@plt+0xa5c>
   11c10:	mov	r3, #0
   11c14:	mov	r2, #1
   11c18:	str	r2, [sp, #40]	; 0x28
   11c1c:	mov	r4, r3
   11c20:	str	r3, [sp, #68]	; 0x44
   11c24:	str	r2, [sp, #28]
   11c28:	str	r3, [sp, #44]	; 0x2c
   11c2c:	str	r3, [sp, #72]	; 0x48
   11c30:	str	r3, [sp, #32]
   11c34:	str	r3, [sp, #52]	; 0x34
   11c38:	str	r3, [sp, #60]	; 0x3c
   11c3c:	b	11844 <abort@plt+0xa5c>
   11c40:	mov	r2, #1
   11c44:	mov	r3, #0
   11c48:	str	r2, [sp, #40]	; 0x28
   11c4c:	mov	r4, r3
   11c50:	str	r3, [sp, #68]	; 0x44
   11c54:	str	r8, [sp, #52]	; 0x34
   11c58:	str	r2, [sp, #32]
   11c5c:	b	11b40 <abort@plt+0xd58>
   11c60:	mov	r3, #1
   11c64:	str	r3, [sp, #40]	; 0x28
   11c68:	str	r3, [sp, #32]
   11c6c:	str	r3, [sp, #28]
   11c70:	str	r3, [sp, #52]	; 0x34
   11c74:	ldr	r3, [pc, #2276]	; 12560 <abort@plt+0x1778>
   11c78:	mov	r2, #0
   11c7c:	mov	r4, r2
   11c80:	str	r2, [sp, #68]	; 0x44
   11c84:	str	r2, [sp, #44]	; 0x2c
   11c88:	str	r2, [sp, #72]	; 0x48
   11c8c:	str	r3, [sp, #60]	; 0x3c
   11c90:	mov	r8, #2
   11c94:	b	11844 <abort@plt+0xa5c>
   11c98:	mov	r7, #0
   11c9c:	ldr	r3, [sp, #24]
   11ca0:	cmn	r3, #1
   11ca4:	beq	127e0 <abort@plt+0x19f8>
   11ca8:	ldr	r3, [sp, #24]
   11cac:	subs	r3, r3, #1
   11cb0:	movne	r3, #1
   11cb4:	cmp	r3, #0
   11cb8:	sub	r2, fp, #2
   11cbc:	clz	r2, r2
   11cc0:	lsr	r2, r2, #5
   11cc4:	bne	11ec0 <abort@plt+0x10d8>
   11cc8:	cmp	r9, #0
   11ccc:	bne	11ec0 <abort@plt+0x10d8>
   11cd0:	ldr	r3, [sp, #32]
   11cd4:	tst	r3, r2
   11cd8:	bne	11fe0 <abort@plt+0x11f8>
   11cdc:	ldr	r3, [sp, #28]
   11ce0:	eor	r3, r3, #1
   11ce4:	orr	r3, r2, r3
   11ce8:	ldr	r2, [sp, #32]
   11cec:	eor	r3, r3, #1
   11cf0:	orrs	r3, r2, r3
   11cf4:	beq	11d24 <abort@plt+0xf3c>
   11cf8:	mov	r3, #0
   11cfc:	ldr	r1, [sp, #56]	; 0x38
   11d00:	cmp	r1, #0
   11d04:	beq	11d24 <abort@plt+0xf3c>
   11d08:	lsr	r2, r5, #5
   11d0c:	and	r0, r5, #31
   11d10:	uxtb	r2, r2
   11d14:	ldr	r1, [r1, r2, lsl #2]
   11d18:	lsr	r2, r1, r0
   11d1c:	tst	r2, #1
   11d20:	bne	11d2c <abort@plt+0xf44>
   11d24:	cmp	r7, #0
   11d28:	beq	11f7c <abort@plt+0x1194>
   11d2c:	sub	r2, fp, #2
   11d30:	clz	r2, r2
   11d34:	lsr	r2, r2, #5
   11d38:	ldr	r3, [sp, #32]
   11d3c:	cmp	r3, #0
   11d40:	bne	1206c <abort@plt+0x1284>
   11d44:	ldr	r3, [sp, #44]	; 0x2c
   11d48:	eor	r3, r3, #1
   11d4c:	ands	r3, r2, r3
   11d50:	beq	11d88 <abort@plt+0xfa0>
   11d54:	cmp	sl, r4
   11d58:	movhi	r2, #39	; 0x27
   11d5c:	strbhi	r2, [r8, r4]
   11d60:	add	r2, r4, #1
   11d64:	cmp	r2, sl
   11d68:	movcc	r1, #36	; 0x24
   11d6c:	strbcc	r1, [r8, r2]
   11d70:	add	r2, r4, #2
   11d74:	cmp	r2, sl
   11d78:	add	r4, r4, #3
   11d7c:	movcc	r1, #39	; 0x27
   11d80:	strbcc	r1, [r8, r2]
   11d84:	str	r3, [sp, #44]	; 0x2c
   11d88:	cmp	r4, sl
   11d8c:	movcc	r3, #92	; 0x5c
   11d90:	strbcc	r3, [r8, r4]
   11d94:	add	r9, r9, #1
   11d98:	add	r4, r4, #1
   11d9c:	cmp	r4, sl
   11da0:	ldr	r3, [sp, #40]	; 0x28
   11da4:	strbcc	r5, [r8, r4]
   11da8:	cmp	r6, #0
   11dac:	moveq	r3, #0
   11db0:	str	r3, [sp, #40]	; 0x28
   11db4:	ldr	r3, [sp, #24]
   11db8:	add	r4, r4, #1
   11dbc:	cmn	r3, #1
   11dc0:	bne	11860 <abort@plt+0xa78>
   11dc4:	ldr	r3, [sp, #36]	; 0x24
   11dc8:	ldrb	r6, [r3, r9]
   11dcc:	adds	r6, r6, #0
   11dd0:	movne	r6, #1
   11dd4:	cmp	r6, #0
   11dd8:	bne	11874 <abort@plt+0xa8c>
   11ddc:	str	fp, [sp, #160]	; 0xa0
   11de0:	mov	fp, r8
   11de4:	ldr	r8, [sp, #160]	; 0xa0
   11de8:	ldr	r1, [sp, #32]
   11dec:	cmp	r4, #0
   11df0:	sub	r2, r8, #2
   11df4:	clz	r2, r2
   11df8:	lsr	r2, r2, #5
   11dfc:	andeq	r3, r2, r1
   11e00:	movne	r3, #0
   11e04:	cmp	r3, #0
   11e08:	bne	12ef4 <abort@plt+0x210c>
   11e0c:	eor	r3, r1, #1
   11e10:	ands	r2, r2, r3
   11e14:	beq	12e30 <abort@plt+0x2048>
   11e18:	ldr	r3, [sp, #68]	; 0x44
   11e1c:	cmp	r3, #0
   11e20:	beq	12e34 <abort@plt+0x204c>
   11e24:	ldr	r3, [sp, #40]	; 0x28
   11e28:	cmp	r3, #0
   11e2c:	bne	12eb0 <abort@plt+0x20c8>
   11e30:	ldr	r3, [sp, #72]	; 0x48
   11e34:	adds	r3, r3, #0
   11e38:	movne	r3, #1
   11e3c:	cmp	sl, #0
   11e40:	movne	r3, #0
   11e44:	cmp	r3, #0
   11e48:	ldreq	r2, [sp, #68]	; 0x44
   11e4c:	beq	12e34 <abort@plt+0x204c>
   11e50:	ldr	sl, [sp, #72]	; 0x48
   11e54:	str	r3, [sp, #68]	; 0x44
   11e58:	ldr	r3, [pc, #1792]	; 12560 <abort@plt+0x1778>
   11e5c:	mov	r2, #39	; 0x27
   11e60:	mov	r4, #1
   11e64:	str	r3, [sp, #60]	; 0x3c
   11e68:	mov	r3, #0
   11e6c:	strb	r2, [fp]
   11e70:	str	r4, [sp, #52]	; 0x34
   11e74:	mov	r8, #2
   11e78:	str	r3, [sp, #32]
   11e7c:	b	11844 <abort@plt+0xa5c>
   11e80:	mov	r7, #0
   11e84:	cmp	fp, #2
   11e88:	beq	127c0 <abort@plt+0x19d8>
   11e8c:	ldr	r3, [sp, #52]	; 0x34
   11e90:	ldr	r2, [sp, #28]
   11e94:	ldr	r1, [sp, #32]
   11e98:	cmp	r3, #0
   11e9c:	andne	r2, r2, r1
   11ea0:	moveq	r2, #0
   11ea4:	cmp	r2, #0
   11ea8:	moveq	r5, #92	; 0x5c
   11eac:	moveq	r3, r5
   11eb0:	bne	127cc <abort@plt+0x19e4>
   11eb4:	ldr	r1, [sp, #28]
   11eb8:	cmp	r1, #0
   11ebc:	bne	12f3c <abort@plt+0x2154>
   11ec0:	mov	r6, #0
   11ec4:	b	11cdc <abort@plt+0xef4>
   11ec8:	mov	r7, #0
   11ecc:	cmp	fp, #2
   11ed0:	beq	12830 <abort@plt+0x1a48>
   11ed4:	cmp	fp, #5
   11ed8:	beq	127f4 <abort@plt+0x1a0c>
   11edc:	sub	r2, fp, #2
   11ee0:	mov	r6, #0
   11ee4:	clz	r2, r2
   11ee8:	mov	r5, #63	; 0x3f
   11eec:	lsr	r2, r2, #5
   11ef0:	b	11cdc <abort@plt+0xef4>
   11ef4:	mov	r7, #0
   11ef8:	cmp	fp, #2
   11efc:	strne	r6, [sp, #68]	; 0x44
   11f00:	movne	r2, #0
   11f04:	movne	r5, #39	; 0x27
   11f08:	bne	11cdc <abort@plt+0xef4>
   11f0c:	ldr	r3, [sp, #32]
   11f10:	cmp	r3, #0
   11f14:	bne	12c10 <abort@plt+0x1e28>
   11f18:	cmp	sl, #0
   11f1c:	ldr	r3, [sp, #72]	; 0x48
   11f20:	clz	r3, r3
   11f24:	lsr	r3, r3, #5
   11f28:	moveq	r3, #0
   11f2c:	cmp	r3, #0
   11f30:	bne	12b44 <abort@plt+0x1d5c>
   11f34:	cmp	sl, r4
   11f38:	movhi	r3, #39	; 0x27
   11f3c:	strbhi	r3, [r8, r4]
   11f40:	add	r3, r4, #1
   11f44:	cmp	sl, r3
   11f48:	movhi	r2, #92	; 0x5c
   11f4c:	strbhi	r2, [r8, r3]
   11f50:	add	r3, r4, #2
   11f54:	cmp	sl, r3
   11f58:	movhi	r2, #39	; 0x27
   11f5c:	strbhi	r2, [r8, r3]
   11f60:	mov	r3, #0
   11f64:	cmp	r7, #0
   11f68:	add	r4, r4, #3
   11f6c:	str	r3, [sp, #44]	; 0x2c
   11f70:	str	r6, [sp, #68]	; 0x44
   11f74:	mov	r5, #39	; 0x27
   11f78:	bne	11d2c <abort@plt+0xf44>
   11f7c:	ldr	r2, [sp, #44]	; 0x2c
   11f80:	eor	r3, r3, #1
   11f84:	and	r3, r3, r2
   11f88:	add	r9, r9, #1
   11f8c:	uxtb	r3, r3
   11f90:	cmp	r3, #0
   11f94:	beq	11d9c <abort@plt+0xfb4>
   11f98:	cmp	sl, r4
   11f9c:	movhi	r3, #39	; 0x27
   11fa0:	strbhi	r3, [r8, r4]
   11fa4:	add	r3, r4, #1
   11fa8:	cmp	sl, r3
   11fac:	movhi	r2, #39	; 0x27
   11fb0:	strbhi	r2, [r8, r3]
   11fb4:	mov	r3, #0
   11fb8:	add	r4, r4, #2
   11fbc:	str	r3, [sp, #44]	; 0x2c
   11fc0:	b	11d9c <abort@plt+0xfb4>
   11fc4:	mov	r3, #114	; 0x72
   11fc8:	ldr	r1, [sp, #32]
   11fcc:	sub	r2, fp, #2
   11fd0:	clz	r2, r2
   11fd4:	lsr	r2, r2, #5
   11fd8:	tst	r2, r1
   11fdc:	beq	11eb4 <abort@plt+0x10cc>
   11fe0:	mov	fp, r8
   11fe4:	mov	r8, #2
   11fe8:	ldr	r3, [sp, #28]
   11fec:	cmp	r3, #0
   11ff0:	movne	r8, #4
   11ff4:	ldr	r3, [sp, #164]	; 0xa4
   11ff8:	mov	ip, #0
   11ffc:	bic	r3, r3, #2
   12000:	str	r3, [sp, #4]
   12004:	ldr	r3, [sp, #76]	; 0x4c
   12008:	str	r8, [sp]
   1200c:	str	r3, [sp, #16]
   12010:	ldr	r3, [sp, #80]	; 0x50
   12014:	ldr	r2, [sp, #36]	; 0x24
   12018:	str	r3, [sp, #12]
   1201c:	mov	r1, sl
   12020:	ldr	r3, [sp, #24]
   12024:	mov	r0, fp
   12028:	str	ip, [sp, #8]
   1202c:	bl	1174c <abort@plt+0x964>
   12030:	mov	r4, r0
   12034:	ldr	r3, [pc, #1304]	; 12554 <abort@plt+0x176c>
   12038:	ldr	r2, [sp, #116]	; 0x74
   1203c:	mov	r0, r4
   12040:	ldr	r3, [r3]
   12044:	cmp	r2, r3
   12048:	bne	12f38 <abort@plt+0x2150>
   1204c:	add	sp, sp, #124	; 0x7c
   12050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12054:	mov	r5, #110	; 0x6e
   12058:	ldr	r3, [sp, #32]
   1205c:	mov	r2, #0
   12060:	cmp	r3, #0
   12064:	mov	r6, r2
   12068:	beq	11d44 <abort@plt+0xf5c>
   1206c:	str	fp, [sp, #160]	; 0xa0
   12070:	mov	fp, r8
   12074:	ldr	r8, [sp, #160]	; 0xa0
   12078:	mov	r3, r2
   1207c:	ldr	r2, [sp, #28]
   12080:	and	r2, r2, r3
   12084:	str	r2, [sp, #28]
   12088:	b	11fe8 <abort@plt+0x1200>
   1208c:	mov	r5, #116	; 0x74
   12090:	b	12058 <abort@plt+0x1270>
   12094:	mov	r5, #102	; 0x66
   12098:	ldr	r3, [sp, #32]
   1209c:	cmp	r3, #0
   120a0:	bne	12c4c <abort@plt+0x1e64>
   120a4:	mov	r6, #0
   120a8:	b	11d88 <abort@plt+0xfa0>
   120ac:	mov	r5, #118	; 0x76
   120b0:	b	12098 <abort@plt+0x12b0>
   120b4:	mov	r7, #0
   120b8:	mov	r6, #0
   120bc:	b	11cf8 <abort@plt+0xf10>
   120c0:	ldr	r3, [sp, #32]
   120c4:	cmp	r3, #0
   120c8:	bne	12e90 <abort@plt+0x20a8>
   120cc:	mov	r7, r3
   120d0:	ldr	r3, [sp, #44]	; 0x2c
   120d4:	sub	r2, fp, #2
   120d8:	eor	r3, r3, #1
   120dc:	clz	r2, r2
   120e0:	lsr	r2, r2, #5
   120e4:	ands	r3, r2, r3
   120e8:	beq	12b30 <abort@plt+0x1d48>
   120ec:	cmp	sl, r4
   120f0:	movhi	r1, #39	; 0x27
   120f4:	strbhi	r1, [r8, r4]
   120f8:	add	r1, r4, #1
   120fc:	cmp	sl, r1
   12100:	movhi	r0, #36	; 0x24
   12104:	strbhi	r0, [r8, r1]
   12108:	add	r1, r4, #2
   1210c:	cmp	sl, r1
   12110:	movhi	r0, #39	; 0x27
   12114:	strbhi	r0, [r8, r1]
   12118:	add	r1, r4, #3
   1211c:	cmp	sl, r1
   12120:	bls	12b90 <abort@plt+0x1da8>
   12124:	mov	r4, r1
   12128:	mov	r1, #92	; 0x5c
   1212c:	strb	r1, [r8, r4]
   12130:	mov	r1, r4
   12134:	str	r3, [sp, #44]	; 0x2c
   12138:	cmp	fp, #2
   1213c:	add	r4, r4, #1
   12140:	beq	12bd8 <abort@plt+0x1df0>
   12144:	ldr	r0, [sp, #24]
   12148:	add	r3, r9, #1
   1214c:	cmp	r3, r0
   12150:	bcs	12168 <abort@plt+0x1380>
   12154:	ldr	r0, [sp, #36]	; 0x24
   12158:	ldrb	r3, [r0, r3]
   1215c:	sub	r3, r3, #48	; 0x30
   12160:	cmp	r3, #9
   12164:	bls	12be8 <abort@plt+0x1e00>
   12168:	mov	r5, #48	; 0x30
   1216c:	ldr	r3, [sp, #28]
   12170:	eor	r3, r3, #1
   12174:	orrs	r2, r2, r3
   12178:	mov	r3, r6
   1217c:	moveq	r6, r2
   12180:	beq	11cfc <abort@plt+0xf14>
   12184:	mov	r6, #0
   12188:	b	11d24 <abort@plt+0xf3c>
   1218c:	mov	r2, #0
   12190:	mov	r6, r2
   12194:	mov	r5, #98	; 0x62
   12198:	b	11d44 <abort@plt+0xf5c>
   1219c:	mov	r5, #97	; 0x61
   121a0:	b	120a4 <abort@plt+0x12bc>
   121a4:	mov	r3, r7
   121a8:	mov	r6, r7
   121ac:	mov	r2, #0
   121b0:	mov	r7, r3
   121b4:	mov	r5, #32
   121b8:	b	11cdc <abort@plt+0xef4>
   121bc:	cmp	r9, #0
   121c0:	mov	r3, r7
   121c4:	bne	1278c <abort@plt+0x19a4>
   121c8:	mov	r6, r7
   121cc:	mov	r2, r9
   121d0:	mov	r7, r3
   121d4:	b	11cdc <abort@plt+0xef4>
   121d8:	mov	r6, r7
   121dc:	b	11cf8 <abort@plt+0xf10>
   121e0:	mov	r7, #0
   121e4:	ldr	r3, [sp, #64]	; 0x40
   121e8:	cmp	r3, #1
   121ec:	bne	12848 <abort@plt+0x1a60>
   121f0:	bl	10d28 <__ctype_b_loc@plt>
   121f4:	ldr	r2, [sp, #64]	; 0x40
   121f8:	sxth	r3, r5
   121fc:	mov	ip, r2
   12200:	lsl	r3, r3, #1
   12204:	ldr	r2, [r0]
   12208:	ldrh	r3, [r2, r3]
   1220c:	and	r3, r3, #16384	; 0x4000
   12210:	cmp	r3, #0
   12214:	ldr	r3, [sp, #28]
   12218:	movne	r6, #1
   1221c:	moveq	r6, #0
   12220:	movne	r2, #0
   12224:	andeq	r2, r3, #1
   12228:	cmp	r2, #0
   1222c:	bne	12b58 <abort@plt+0x1d70>
   12230:	sub	r2, fp, #2
   12234:	clz	r2, r2
   12238:	lsr	r2, r2, #5
   1223c:	b	11cdc <abort@plt+0xef4>
   12240:	cmp	r4, #0
   12244:	bne	12f04 <abort@plt+0x211c>
   12248:	str	r4, [sp, #28]
   1224c:	cmp	sl, #0
   12250:	bne	12f48 <abort@plt+0x2160>
   12254:	ldr	r3, [pc, #772]	; 12560 <abort@plt+0x1778>
   12258:	mov	r4, #1
   1225c:	str	r4, [sp, #40]	; 0x28
   12260:	str	r3, [sp, #60]	; 0x3c
   12264:	str	r4, [sp, #52]	; 0x34
   12268:	str	sl, [sp, #72]	; 0x48
   1226c:	str	sl, [sp, #68]	; 0x44
   12270:	str	sl, [sp, #44]	; 0x2c
   12274:	str	sl, [sp, #32]
   12278:	mov	r8, #2
   1227c:	b	11844 <abort@plt+0xa5c>
   12280:	ldr	r3, [sp, #36]	; 0x24
   12284:	ldrb	r5, [r3, r9]
   12288:	cmp	r5, #126	; 0x7e
   1228c:	ldrls	pc, [pc, r5, lsl #2]
   12290:	b	121e4 <abort@plt+0x13fc>
   12294:	andeq	r2, r1, r8, asr #9
   12298:	andeq	r2, r1, r4, ror #3
   1229c:	andeq	r2, r1, r4, ror #3
   122a0:	andeq	r2, r1, r4, ror #3
   122a4:	andeq	r2, r1, r4, ror #3
   122a8:	andeq	r2, r1, r4, ror #3
   122ac:	andeq	r2, r1, r4, ror #3
   122b0:			; <UNDEFINED> instruction: 0x000124b4
   122b4:	andeq	r2, r1, r0, lsr #9
   122b8:	muleq	r1, r8, r4
   122bc:	muleq	r1, r0, r4
   122c0:	andeq	r2, r1, r0, asr #10
   122c4:	andeq	r2, r1, ip, lsr #10
   122c8:	andeq	r1, r1, r4, asr #31
   122cc:	andeq	r2, r1, r4, ror #3
   122d0:	andeq	r2, r1, r4, ror #3
   122d4:	andeq	r2, r1, r4, ror #3
   122d8:	andeq	r2, r1, r4, ror #3
   122dc:	andeq	r2, r1, r4, ror #3
   122e0:	andeq	r2, r1, r4, ror #3
   122e4:	andeq	r2, r1, r4, ror #3
   122e8:	andeq	r2, r1, r4, ror #3
   122ec:	andeq	r2, r1, r4, ror #3
   122f0:	andeq	r2, r1, r4, ror #3
   122f4:	andeq	r2, r1, r4, ror #3
   122f8:	andeq	r2, r1, r4, ror #3
   122fc:	andeq	r2, r1, r4, ror #3
   12300:	andeq	r2, r1, r4, ror #3
   12304:	andeq	r2, r1, r4, ror #3
   12308:	andeq	r2, r1, r4, ror #3
   1230c:	andeq	r2, r1, r4, ror #3
   12310:	andeq	r2, r1, r4, ror #3
   12314:	andeq	r2, r1, ip, lsl r5
   12318:	andeq	r2, r1, r8, lsl #10
   1231c:	andeq	r2, r1, r8, lsl #10
   12320:	strdeq	r2, [r1], -r8
   12324:	andeq	r2, r1, r8, lsl #10
   12328:	andeq	r2, r1, r0, lsr r2
   1232c:	andeq	r2, r1, r8, lsl #10
   12330:	strdeq	r1, [r1], -r8
   12334:	andeq	r2, r1, r8, lsl #10
   12338:	andeq	r2, r1, r8, lsl #10
   1233c:	andeq	r2, r1, r8, lsl #10
   12340:	andeq	r2, r1, r0, lsr r2
   12344:	andeq	r2, r1, r0, lsr r2
   12348:	andeq	r2, r1, r0, lsr r2
   1234c:	andeq	r2, r1, r0, lsr r2
   12350:	andeq	r2, r1, r0, lsr r2
   12354:	andeq	r2, r1, r0, lsr r2
   12358:	andeq	r2, r1, r0, lsr r2
   1235c:	andeq	r2, r1, r0, lsr r2
   12360:	andeq	r2, r1, r0, lsr r2
   12364:	andeq	r2, r1, r0, lsr r2
   12368:	andeq	r2, r1, r0, lsr r2
   1236c:	andeq	r2, r1, r0, lsr r2
   12370:	andeq	r2, r1, r0, lsr r2
   12374:	andeq	r2, r1, r0, lsr r2
   12378:	andeq	r2, r1, r0, lsr r2
   1237c:	andeq	r2, r1, r0, lsr r2
   12380:	andeq	r2, r1, r8, lsl #10
   12384:	andeq	r2, r1, r8, lsl #10
   12388:	andeq	r2, r1, r8, lsl #10
   1238c:	andeq	r2, r1, r8, lsl #10
   12390:	andeq	r1, r1, ip, asr #29
   12394:	andeq	r2, r1, r4, ror #3
   12398:	andeq	r2, r1, r0, lsr r2
   1239c:	andeq	r2, r1, r0, lsr r2
   123a0:	andeq	r2, r1, r0, lsr r2
   123a4:	andeq	r2, r1, r0, lsr r2
   123a8:	andeq	r2, r1, r0, lsr r2
   123ac:	andeq	r2, r1, r0, lsr r2
   123b0:	andeq	r2, r1, r0, lsr r2
   123b4:	andeq	r2, r1, r0, lsr r2
   123b8:	andeq	r2, r1, r0, lsr r2
   123bc:	andeq	r2, r1, r0, lsr r2
   123c0:	andeq	r2, r1, r0, lsr r2
   123c4:	andeq	r2, r1, r0, lsr r2
   123c8:	andeq	r2, r1, r0, lsr r2
   123cc:	andeq	r2, r1, r0, lsr r2
   123d0:	andeq	r2, r1, r0, lsr r2
   123d4:	andeq	r2, r1, r0, lsr r2
   123d8:	andeq	r2, r1, r0, lsr r2
   123dc:	andeq	r2, r1, r0, lsr r2
   123e0:	andeq	r2, r1, r0, lsr r2
   123e4:	andeq	r2, r1, r0, lsr r2
   123e8:	andeq	r2, r1, r0, lsr r2
   123ec:	andeq	r2, r1, r0, lsr r2
   123f0:	andeq	r2, r1, r0, lsr r2
   123f4:	andeq	r2, r1, r0, lsr r2
   123f8:	andeq	r2, r1, r0, lsr r2
   123fc:	andeq	r2, r1, r0, lsr r2
   12400:	andeq	r2, r1, r8, lsl #10
   12404:	andeq	r1, r1, r4, lsl #29
   12408:	andeq	r2, r1, r0, lsr r2
   1240c:	andeq	r2, r1, r8, lsl #10
   12410:	andeq	r2, r1, r0, lsr r2
   12414:	andeq	r2, r1, r8, lsl #10
   12418:	andeq	r2, r1, r0, lsr r2
   1241c:	andeq	r2, r1, r0, lsr r2
   12420:	andeq	r2, r1, r0, lsr r2
   12424:	andeq	r2, r1, r0, lsr r2
   12428:	andeq	r2, r1, r0, lsr r2
   1242c:	andeq	r2, r1, r0, lsr r2
   12430:	andeq	r2, r1, r0, lsr r2
   12434:	andeq	r2, r1, r0, lsr r2
   12438:	andeq	r2, r1, r0, lsr r2
   1243c:	andeq	r2, r1, r0, lsr r2
   12440:	andeq	r2, r1, r0, lsr r2
   12444:	andeq	r2, r1, r0, lsr r2
   12448:	andeq	r2, r1, r0, lsr r2
   1244c:	andeq	r2, r1, r0, lsr r2
   12450:	andeq	r2, r1, r0, lsr r2
   12454:	andeq	r2, r1, r0, lsr r2
   12458:	andeq	r2, r1, r0, lsr r2
   1245c:	andeq	r2, r1, r0, lsr r2
   12460:	andeq	r2, r1, r0, lsr r2
   12464:	andeq	r2, r1, r0, lsr r2
   12468:	andeq	r2, r1, r0, lsr r2
   1246c:	andeq	r2, r1, r0, lsr r2
   12470:	andeq	r2, r1, r0, lsr r2
   12474:	andeq	r2, r1, r0, lsr r2
   12478:	andeq	r2, r1, r0, lsr r2
   1247c:	andeq	r2, r1, r0, lsr r2
   12480:	muleq	r1, ip, ip
   12484:	andeq	r2, r1, r8, lsl #10
   12488:	muleq	r1, ip, ip
   1248c:	strdeq	r2, [r1], -r8
   12490:	mov	r3, #110	; 0x6e
   12494:	b	11fc8 <abort@plt+0x11e0>
   12498:	mov	r3, #116	; 0x74
   1249c:	b	11fc8 <abort@plt+0x11e0>
   124a0:	sub	r2, fp, #2
   124a4:	mov	r3, #98	; 0x62
   124a8:	clz	r2, r2
   124ac:	lsr	r2, r2, #5
   124b0:	b	11eb4 <abort@plt+0x10cc>
   124b4:	sub	r2, fp, #2
   124b8:	mov	r3, #97	; 0x61
   124bc:	clz	r2, r2
   124c0:	lsr	r2, r2, #5
   124c4:	b	11eb4 <abort@plt+0x10cc>
   124c8:	ldr	r3, [sp, #28]
   124cc:	cmp	r3, #0
   124d0:	bne	120c0 <abort@plt+0x12d8>
   124d4:	ldr	r3, [sp, #164]	; 0xa4
   124d8:	tst	r3, #1
   124dc:	bne	12b50 <abort@plt+0x1d68>
   124e0:	ldr	r6, [sp, #28]
   124e4:	sub	r2, fp, #2
   124e8:	mov	r7, r6
   124ec:	clz	r2, r2
   124f0:	lsr	r2, r2, #5
   124f4:	b	11cdc <abort@plt+0xef4>
   124f8:	sub	r2, fp, #2
   124fc:	clz	r2, r2
   12500:	lsr	r2, r2, #5
   12504:	b	11cc8 <abort@plt+0xee0>
   12508:	sub	r2, fp, #2
   1250c:	mov	r6, #0
   12510:	clz	r2, r2
   12514:	lsr	r2, r2, #5
   12518:	b	11cd0 <abort@plt+0xee8>
   1251c:	sub	r2, fp, #2
   12520:	clz	r2, r2
   12524:	lsr	r2, r2, #5
   12528:	b	11cd0 <abort@plt+0xee8>
   1252c:	sub	r2, fp, #2
   12530:	mov	r3, #102	; 0x66
   12534:	clz	r2, r2
   12538:	lsr	r2, r2, #5
   1253c:	b	11eb4 <abort@plt+0x10cc>
   12540:	sub	r2, fp, #2
   12544:	mov	r3, #118	; 0x76
   12548:	clz	r2, r2
   1254c:	lsr	r2, r2, #5
   12550:	b	11eb4 <abort@plt+0x10cc>
   12554:	andeq	r4, r2, r8, lsl #30
   12558:	andeq	r4, r1, r8, asr r9
   1255c:	andeq	r4, r1, r0, asr #18
   12560:	andeq	r4, r1, r4, asr r9
   12564:	ldr	r3, [sp, #48]	; 0x30
   12568:	ldrb	r5, [r3]
   1256c:	cmp	r5, #126	; 0x7e
   12570:	ldrls	pc, [pc, r5, lsl #2]
   12574:	b	121e0 <abort@plt+0x13f8>
   12578:	andeq	r2, r1, r0, asr #1
   1257c:	andeq	r2, r1, r0, ror #3
   12580:	andeq	r2, r1, r0, ror #3
   12584:	andeq	r2, r1, r0, ror #3
   12588:	andeq	r2, r1, r0, ror #3
   1258c:	andeq	r2, r1, r0, ror #3
   12590:	andeq	r2, r1, r0, ror #3
   12594:			; <UNDEFINED> instruction: 0x000127b8
   12598:			; <UNDEFINED> instruction: 0x000127b0
   1259c:	andeq	r2, r1, ip, lsl #1
   125a0:	andeq	r2, r1, r4, asr r0
   125a4:	andeq	r2, r1, ip, lsr #1
   125a8:	muleq	r1, r4, r0
   125ac:	andeq	r2, r1, r4, lsr #15
   125b0:	andeq	r2, r1, r0, ror #3
   125b4:	andeq	r2, r1, r0, ror #3
   125b8:	andeq	r2, r1, r0, ror #3
   125bc:	andeq	r2, r1, r0, ror #3
   125c0:	andeq	r2, r1, r0, ror #3
   125c4:	andeq	r2, r1, r0, ror #3
   125c8:	andeq	r2, r1, r0, ror #3
   125cc:	andeq	r2, r1, r0, ror #3
   125d0:	andeq	r2, r1, r0, ror #3
   125d4:	andeq	r2, r1, r0, ror #3
   125d8:	andeq	r2, r1, r0, ror #3
   125dc:	andeq	r2, r1, r0, ror #3
   125e0:	andeq	r2, r1, r0, ror #3
   125e4:	andeq	r2, r1, r0, ror #3
   125e8:	andeq	r2, r1, r0, ror #3
   125ec:	andeq	r2, r1, r0, ror #3
   125f0:	andeq	r2, r1, r0, ror #3
   125f4:	andeq	r2, r1, r0, ror #3
   125f8:	muleq	r1, ip, r7
   125fc:	strheq	r2, [r1], -r4
   12600:	strheq	r2, [r1], -r4
   12604:	andeq	r2, r1, r0, lsl #15
   12608:	strheq	r2, [r1], -r4
   1260c:	andeq	r2, r1, r4, ror r7
   12610:	strheq	r2, [r1], -r4
   12614:	strdeq	r1, [r1], -r4
   12618:	strheq	r2, [r1], -r4
   1261c:	strheq	r2, [r1], -r4
   12620:	strheq	r2, [r1], -r4
   12624:	andeq	r2, r1, r4, ror r7
   12628:	andeq	r2, r1, r4, ror r7
   1262c:	andeq	r2, r1, r4, ror r7
   12630:	andeq	r2, r1, r4, ror r7
   12634:	andeq	r2, r1, r4, ror r7
   12638:	andeq	r2, r1, r4, ror r7
   1263c:	andeq	r2, r1, r4, ror r7
   12640:	andeq	r2, r1, r4, ror r7
   12644:	andeq	r2, r1, r4, ror r7
   12648:	andeq	r2, r1, r4, ror r7
   1264c:	andeq	r2, r1, r4, ror r7
   12650:	andeq	r2, r1, r4, ror r7
   12654:	andeq	r2, r1, r4, ror r7
   12658:	andeq	r2, r1, r4, ror r7
   1265c:	andeq	r2, r1, r4, ror r7
   12660:	andeq	r2, r1, r4, ror r7
   12664:	strheq	r2, [r1], -r4
   12668:	strheq	r2, [r1], -r4
   1266c:	strheq	r2, [r1], -r4
   12670:	strheq	r2, [r1], -r4
   12674:	andeq	r1, r1, r8, asr #29
   12678:	andeq	r2, r1, r0, ror #3
   1267c:	andeq	r2, r1, r4, ror r7
   12680:	andeq	r2, r1, r4, ror r7
   12684:	andeq	r2, r1, r4, ror r7
   12688:	andeq	r2, r1, r4, ror r7
   1268c:	andeq	r2, r1, r4, ror r7
   12690:	andeq	r2, r1, r4, ror r7
   12694:	andeq	r2, r1, r4, ror r7
   12698:	andeq	r2, r1, r4, ror r7
   1269c:	andeq	r2, r1, r4, ror r7
   126a0:	andeq	r2, r1, r4, ror r7
   126a4:	andeq	r2, r1, r4, ror r7
   126a8:	andeq	r2, r1, r4, ror r7
   126ac:	andeq	r2, r1, r4, ror r7
   126b0:	andeq	r2, r1, r4, ror r7
   126b4:	andeq	r2, r1, r4, ror r7
   126b8:	andeq	r2, r1, r4, ror r7
   126bc:	andeq	r2, r1, r4, ror r7
   126c0:	andeq	r2, r1, r4, ror r7
   126c4:	andeq	r2, r1, r4, ror r7
   126c8:	andeq	r2, r1, r4, ror r7
   126cc:	andeq	r2, r1, r4, ror r7
   126d0:	andeq	r2, r1, r4, ror r7
   126d4:	andeq	r2, r1, r4, ror r7
   126d8:	andeq	r2, r1, r4, ror r7
   126dc:	andeq	r2, r1, r4, ror r7
   126e0:	andeq	r2, r1, r4, ror r7
   126e4:	strheq	r2, [r1], -r4
   126e8:	andeq	r1, r1, r0, lsl #29
   126ec:	andeq	r2, r1, r4, ror r7
   126f0:	strheq	r2, [r1], -r4
   126f4:	andeq	r2, r1, r4, ror r7
   126f8:	strheq	r2, [r1], -r4
   126fc:	andeq	r2, r1, r4, ror r7
   12700:	andeq	r2, r1, r4, ror r7
   12704:	andeq	r2, r1, r4, ror r7
   12708:	andeq	r2, r1, r4, ror r7
   1270c:	andeq	r2, r1, r4, ror r7
   12710:	andeq	r2, r1, r4, ror r7
   12714:	andeq	r2, r1, r4, ror r7
   12718:	andeq	r2, r1, r4, ror r7
   1271c:	andeq	r2, r1, r4, ror r7
   12720:	andeq	r2, r1, r4, ror r7
   12724:	andeq	r2, r1, r4, ror r7
   12728:	andeq	r2, r1, r4, ror r7
   1272c:	andeq	r2, r1, r4, ror r7
   12730:	andeq	r2, r1, r4, ror r7
   12734:	andeq	r2, r1, r4, ror r7
   12738:	andeq	r2, r1, r4, ror r7
   1273c:	andeq	r2, r1, r4, ror r7
   12740:	andeq	r2, r1, r4, ror r7
   12744:	andeq	r2, r1, r4, ror r7
   12748:	andeq	r2, r1, r4, ror r7
   1274c:	andeq	r2, r1, r4, ror r7
   12750:	andeq	r2, r1, r4, ror r7
   12754:	andeq	r2, r1, r4, ror r7
   12758:	andeq	r2, r1, r4, ror r7
   1275c:	andeq	r2, r1, r4, ror r7
   12760:	andeq	r2, r1, r4, ror r7
   12764:	muleq	r1, r8, ip
   12768:	strheq	r2, [r1], -r4
   1276c:	muleq	r1, r8, ip
   12770:	andeq	r2, r1, r0, lsl #15
   12774:	mov	r6, r7
   12778:	mov	r7, #0
   1277c:	b	11cf8 <abort@plt+0xf10>
   12780:	cmp	r9, #0
   12784:	mov	r3, #0
   12788:	beq	121c8 <abort@plt+0x13e0>
   1278c:	mov	r6, #0
   12790:	mov	r7, r3
   12794:	mov	r3, r6
   12798:	b	11cfc <abort@plt+0xf14>
   1279c:	mov	r3, #0
   127a0:	b	121a8 <abort@plt+0x13c0>
   127a4:	mov	r7, #0
   127a8:	mov	r3, #114	; 0x72
   127ac:	b	11fc8 <abort@plt+0x11e0>
   127b0:	mov	r5, #98	; 0x62
   127b4:	b	12058 <abort@plt+0x1270>
   127b8:	mov	r5, #97	; 0x61
   127bc:	b	12098 <abort@plt+0x12b0>
   127c0:	ldr	r3, [sp, #32]
   127c4:	cmp	r3, #0
   127c8:	bne	12c10 <abort@plt+0x1e28>
   127cc:	add	r9, r9, #1
   127d0:	ldr	r3, [sp, #44]	; 0x2c
   127d4:	mov	r6, #0
   127d8:	mov	r5, #92	; 0x5c
   127dc:	b	11f90 <abort@plt+0x11a8>
   127e0:	ldr	r3, [sp, #36]	; 0x24
   127e4:	ldrb	r3, [r3, #1]
   127e8:	adds	r3, r3, #0
   127ec:	movne	r3, #1
   127f0:	b	11cb4 <abort@plt+0xecc>
   127f4:	ldr	r3, [sp, #164]	; 0xa4
   127f8:	ands	r3, r3, #4
   127fc:	beq	12820 <abort@plt+0x1a38>
   12800:	ldr	r2, [sp, #24]
   12804:	add	r3, r9, #2
   12808:	cmp	r3, r2
   1280c:	bcs	12820 <abort@plt+0x1a38>
   12810:	ldr	r2, [sp, #48]	; 0x30
   12814:	ldrb	r5, [r2, #1]
   12818:	cmp	r5, #63	; 0x3f
   1281c:	beq	12c84 <abort@plt+0x1e9c>
   12820:	mov	r2, #0
   12824:	mov	r6, r2
   12828:	mov	r5, #63	; 0x3f
   1282c:	b	11cdc <abort@plt+0xef4>
   12830:	ldr	r3, [sp, #32]
   12834:	cmp	r3, #0
   12838:	bne	12c10 <abort@plt+0x1e28>
   1283c:	mov	r6, r3
   12840:	mov	r5, #63	; 0x3f
   12844:	b	11d24 <abort@plt+0xf3c>
   12848:	ldr	r3, [sp, #24]
   1284c:	cmn	r3, #1
   12850:	mov	r3, #0
   12854:	str	r3, [sp, #108]	; 0x6c
   12858:	str	r3, [sp, #112]	; 0x70
   1285c:	bne	1286c <abort@plt+0x1a84>
   12860:	ldr	r0, [sp, #36]	; 0x24
   12864:	bl	10d40 <strlen@plt>
   12868:	str	r0, [sp, #24]
   1286c:	mov	r3, #0
   12870:	str	sl, [sp, #88]	; 0x58
   12874:	ldr	sl, [sp, #36]	; 0x24
   12878:	str	r5, [sp, #92]	; 0x5c
   1287c:	mov	r5, r3
   12880:	str	r7, [sp, #96]	; 0x60
   12884:	str	r4, [sp, #100]	; 0x64
   12888:	str	r8, [sp, #84]	; 0x54
   1288c:	ldr	r3, [sp, #24]
   12890:	add	r4, r9, r5
   12894:	add	r7, sl, r4
   12898:	sub	r2, r3, r4
   1289c:	mov	r1, r7
   128a0:	add	r3, sp, #108	; 0x6c
   128a4:	add	r0, sp, #104	; 0x68
   128a8:	bl	13f84 <abort@plt+0x319c>
   128ac:	subs	r8, r0, #0
   128b0:	beq	12900 <abort@plt+0x1b18>
   128b4:	cmn	r8, #1
   128b8:	beq	12c60 <abort@plt+0x1e78>
   128bc:	cmn	r8, #2
   128c0:	beq	12d80 <abort@plt+0x1f98>
   128c4:	ldr	r3, [sp, #32]
   128c8:	cmp	fp, #2
   128cc:	movne	r3, #0
   128d0:	andeq	r3, r3, #1
   128d4:	cmp	r3, #0
   128d8:	bne	12a60 <abort@plt+0x1c78>
   128dc:	ldr	r0, [sp, #104]	; 0x68
   128e0:	bl	10c8c <iswprint@plt>
   128e4:	add	r5, r5, r8
   128e8:	cmp	r0, #0
   128ec:	add	r0, sp, #108	; 0x6c
   128f0:	moveq	r6, #0
   128f4:	bl	10c38 <mbsinit@plt>
   128f8:	cmp	r0, #0
   128fc:	beq	1288c <abort@plt+0x1aa4>
   12900:	ldr	r3, [sp, #28]
   12904:	mov	ip, r5
   12908:	eor	r2, r6, #1
   1290c:	ldr	r5, [sp, #92]	; 0x5c
   12910:	ldr	r7, [sp, #96]	; 0x60
   12914:	ldr	r4, [sp, #100]	; 0x64
   12918:	ldr	r8, [sp, #84]	; 0x54
   1291c:	ldr	sl, [sp, #88]	; 0x58
   12920:	and	r2, r2, r3
   12924:	cmp	ip, #1
   12928:	bls	12228 <abort@plt+0x1440>
   1292c:	add	r1, ip, r9
   12930:	ldr	lr, [sp, #48]	; 0x30
   12934:	mov	r0, #0
   12938:	str	r6, [sp, #48]	; 0x30
   1293c:	mov	ip, #39	; 0x27
   12940:	ldr	r6, [sp, #44]	; 0x2c
   12944:	b	129fc <abort@plt+0x1c14>
   12948:	ldr	r0, [sp, #32]
   1294c:	sub	r3, fp, #2
   12950:	cmp	r0, #0
   12954:	clz	r3, r3
   12958:	lsr	r3, r3, #5
   1295c:	bne	12b64 <abort@plt+0x1d7c>
   12960:	eor	r0, r6, #1
   12964:	ands	r3, r3, r0
   12968:	beq	12998 <abort@plt+0x1bb0>
   1296c:	add	r0, r4, #1
   12970:	cmp	sl, r4
   12974:	strbhi	ip, [r8, r4]
   12978:	cmp	sl, r0
   1297c:	movhi	r6, #36	; 0x24
   12980:	strbhi	r6, [r8, r0]
   12984:	add	r0, r4, #2
   12988:	mov	r6, r3
   1298c:	add	r4, r4, #3
   12990:	cmp	sl, r0
   12994:	strbhi	ip, [r8, r0]
   12998:	cmp	sl, r4
   1299c:	movhi	r3, #92	; 0x5c
   129a0:	strbhi	r3, [r8, r4]
   129a4:	add	r3, r4, #1
   129a8:	cmp	sl, r3
   129ac:	lsrhi	r0, r5, #6
   129b0:	addhi	r0, r0, #48	; 0x30
   129b4:	strbhi	r0, [r8, r3]
   129b8:	add	r0, r4, #2
   129bc:	cmp	sl, r0
   129c0:	lsrhi	r3, r5, #3
   129c4:	andhi	r3, r3, #7
   129c8:	addhi	r3, r3, #48	; 0x30
   129cc:	add	r9, r9, #1
   129d0:	strbhi	r3, [r8, r0]
   129d4:	and	r5, r5, #7
   129d8:	cmp	r9, r1
   129dc:	add	r5, r5, #48	; 0x30
   129e0:	add	r4, r4, #3
   129e4:	bcs	12b84 <abort@plt+0x1d9c>
   129e8:	mov	r0, r2
   129ec:	cmp	sl, r4
   129f0:	strbhi	r5, [r8, r4]
   129f4:	ldrb	r5, [lr, #1]!
   129f8:	add	r4, r4, #1
   129fc:	cmp	r2, #0
   12a00:	bne	12948 <abort@plt+0x1b60>
   12a04:	eor	r3, r0, #1
   12a08:	and	r3, r3, r6
   12a0c:	cmp	r7, #0
   12a10:	uxtb	r3, r3
   12a14:	beq	12a28 <abort@plt+0x1c40>
   12a18:	cmp	sl, r4
   12a1c:	movhi	r7, #92	; 0x5c
   12a20:	strbhi	r7, [r8, r4]
   12a24:	add	r4, r4, #1
   12a28:	add	r9, r9, #1
   12a2c:	cmp	r9, r1
   12a30:	bcs	12b78 <abort@plt+0x1d90>
   12a34:	cmp	r3, #0
   12a38:	beq	12ba4 <abort@plt+0x1dbc>
   12a3c:	cmp	sl, r4
   12a40:	add	r3, r4, #1
   12a44:	strbhi	ip, [r8, r4]
   12a48:	mov	r7, #0
   12a4c:	cmp	sl, r3
   12a50:	strbhi	ip, [r8, r3]
   12a54:	add	r4, r4, #2
   12a58:	mov	r6, r7
   12a5c:	b	129ec <abort@plt+0x1c04>
   12a60:	cmp	r8, #1
   12a64:	beq	128dc <abort@plt+0x1af4>
   12a68:	add	r1, r4, #1
   12a6c:	add	r3, sl, r8
   12a70:	add	r1, sl, r1
   12a74:	add	r4, r3, r4
   12a78:	ldrb	r3, [r1], #1
   12a7c:	sub	r3, r3, #91	; 0x5b
   12a80:	cmp	r3, #33	; 0x21
   12a84:	ldrls	pc, [pc, r3, lsl #2]
   12a88:	b	12b14 <abort@plt+0x1d2c>
   12a8c:	andeq	r2, r1, r0, lsr #22
   12a90:	andeq	r2, r1, r0, lsr #22
   12a94:	andeq	r2, r1, r4, lsl fp
   12a98:	andeq	r2, r1, r0, lsr #22
   12a9c:	andeq	r2, r1, r4, lsl fp
   12aa0:	andeq	r2, r1, r0, lsr #22
   12aa4:	andeq	r2, r1, r4, lsl fp
   12aa8:	andeq	r2, r1, r4, lsl fp
   12aac:	andeq	r2, r1, r4, lsl fp
   12ab0:	andeq	r2, r1, r4, lsl fp
   12ab4:	andeq	r2, r1, r4, lsl fp
   12ab8:	andeq	r2, r1, r4, lsl fp
   12abc:	andeq	r2, r1, r4, lsl fp
   12ac0:	andeq	r2, r1, r4, lsl fp
   12ac4:	andeq	r2, r1, r4, lsl fp
   12ac8:	andeq	r2, r1, r4, lsl fp
   12acc:	andeq	r2, r1, r4, lsl fp
   12ad0:	andeq	r2, r1, r4, lsl fp
   12ad4:	andeq	r2, r1, r4, lsl fp
   12ad8:	andeq	r2, r1, r4, lsl fp
   12adc:	andeq	r2, r1, r4, lsl fp
   12ae0:	andeq	r2, r1, r4, lsl fp
   12ae4:	andeq	r2, r1, r4, lsl fp
   12ae8:	andeq	r2, r1, r4, lsl fp
   12aec:	andeq	r2, r1, r4, lsl fp
   12af0:	andeq	r2, r1, r4, lsl fp
   12af4:	andeq	r2, r1, r4, lsl fp
   12af8:	andeq	r2, r1, r4, lsl fp
   12afc:	andeq	r2, r1, r4, lsl fp
   12b00:	andeq	r2, r1, r4, lsl fp
   12b04:	andeq	r2, r1, r4, lsl fp
   12b08:	andeq	r2, r1, r4, lsl fp
   12b0c:	andeq	r2, r1, r4, lsl fp
   12b10:	andeq	r2, r1, r0, lsr #22
   12b14:	cmp	r4, r1
   12b18:	bne	12a78 <abort@plt+0x1c90>
   12b1c:	b	128dc <abort@plt+0x1af4>
   12b20:	ldr	fp, [sp, #84]	; 0x54
   12b24:	ldr	sl, [sp, #88]	; 0x58
   12b28:	mov	r8, #2
   12b2c:	b	11fe8 <abort@plt+0x1200>
   12b30:	cmp	sl, r4
   12b34:	movls	r1, r4
   12b38:	bls	12138 <abort@plt+0x1350>
   12b3c:	ldr	r3, [sp, #44]	; 0x2c
   12b40:	b	12128 <abort@plt+0x1340>
   12b44:	str	sl, [sp, #72]	; 0x48
   12b48:	ldr	sl, [sp, #32]
   12b4c:	b	11f60 <abort@plt+0x1178>
   12b50:	add	r9, r9, #1
   12b54:	b	11854 <abort@plt+0xa6c>
   12b58:	ldr	r2, [sp, #28]
   12b5c:	mov	r6, #0
   12b60:	b	1292c <abort@plt+0x1b44>
   12b64:	str	fp, [sp, #160]	; 0xa0
   12b68:	str	r3, [sp, #28]
   12b6c:	mov	fp, r8
   12b70:	ldr	r8, [sp, #160]	; 0xa0
   12b74:	b	11fe8 <abort@plt+0x1200>
   12b78:	str	r6, [sp, #44]	; 0x2c
   12b7c:	ldr	r6, [sp, #48]	; 0x30
   12b80:	b	11f90 <abort@plt+0x11a8>
   12b84:	str	r6, [sp, #44]	; 0x2c
   12b88:	ldr	r6, [sp, #48]	; 0x30
   12b8c:	b	11d9c <abort@plt+0xfb4>
   12b90:	add	r4, r4, #4
   12b94:	str	r3, [sp, #44]	; 0x2c
   12b98:	mov	r6, #0
   12b9c:	mov	r5, #48	; 0x30
   12ba0:	b	11d24 <abort@plt+0xf3c>
   12ba4:	mov	r7, r3
   12ba8:	b	129ec <abort@plt+0x1c04>
   12bac:	ldr	r3, [pc, #-1624]	; 1255c <abort@plt+0x1774>
   12bb0:	mov	r4, #1
   12bb4:	str	r4, [sp, #40]	; 0x28
   12bb8:	str	r4, [sp, #28]
   12bbc:	str	r4, [sp, #52]	; 0x34
   12bc0:	str	sl, [sp, #72]	; 0x48
   12bc4:	str	sl, [sp, #68]	; 0x44
   12bc8:	str	sl, [sp, #44]	; 0x2c
   12bcc:	str	sl, [sp, #32]
   12bd0:	str	r3, [sp, #60]	; 0x3c
   12bd4:	b	11844 <abort@plt+0xa5c>
   12bd8:	mov	r3, r6
   12bdc:	mov	r5, #48	; 0x30
   12be0:	mov	r6, #0
   12be4:	b	11d24 <abort@plt+0xf3c>
   12be8:	cmp	sl, r4
   12bec:	movhi	r3, #48	; 0x30
   12bf0:	strbhi	r3, [r8, r4]
   12bf4:	add	r3, r1, #2
   12bf8:	cmp	sl, r3
   12bfc:	movhi	r0, #48	; 0x30
   12c00:	strbhi	r0, [r8, r3]
   12c04:	add	r4, r1, #3
   12c08:	mov	r5, #48	; 0x30
   12c0c:	b	1216c <abort@plt+0x1384>
   12c10:	str	fp, [sp, #160]	; 0xa0
   12c14:	mov	fp, r8
   12c18:	ldr	r8, [sp, #160]	; 0xa0
   12c1c:	b	11fe8 <abort@plt+0x1200>
   12c20:	ldr	r2, [sp, #80]	; 0x50
   12c24:	ldrb	r3, [r2]
   12c28:	cmp	r3, #0
   12c2c:	beq	11814 <abort@plt+0xa2c>
   12c30:	cmp	sl, r4
   12c34:	strbhi	r3, [fp, r4]
   12c38:	ldrb	r3, [r2, #1]!
   12c3c:	add	r4, r4, #1
   12c40:	cmp	r3, #0
   12c44:	bne	12c30 <abort@plt+0x1e48>
   12c48:	b	11814 <abort@plt+0xa2c>
   12c4c:	str	fp, [sp, #160]	; 0xa0
   12c50:	mov	r3, #0
   12c54:	mov	fp, r8
   12c58:	ldr	r8, [sp, #160]	; 0xa0
   12c5c:	b	1207c <abort@plt+0x1294>
   12c60:	mov	ip, r5
   12c64:	ldr	r7, [sp, #96]	; 0x60
   12c68:	ldr	r5, [sp, #92]	; 0x5c
   12c6c:	ldr	r4, [sp, #100]	; 0x64
   12c70:	ldr	r8, [sp, #84]	; 0x54
   12c74:	ldr	sl, [sp, #88]	; 0x58
   12c78:	ldr	r2, [sp, #28]
   12c7c:	mov	r6, #0
   12c80:	b	12924 <abort@plt+0x1b3c>
   12c84:	ldr	r2, [sp, #36]	; 0x24
   12c88:	ldrb	r1, [r2, r3]
   12c8c:	sub	r2, r1, #33	; 0x21
   12c90:	cmp	r2, #29
   12c94:	ldrls	pc, [pc, r2, lsl #2]
   12c98:	b	12d74 <abort@plt+0x1f8c>
   12c9c:	andeq	r2, r1, r4, lsl sp
   12ca0:	andeq	r2, r1, r4, ror sp
   12ca4:	andeq	r2, r1, r4, ror sp
   12ca8:	andeq	r2, r1, r4, ror sp
   12cac:	andeq	r2, r1, r4, ror sp
   12cb0:	andeq	r2, r1, r4, ror sp
   12cb4:	andeq	r2, r1, r4, lsl sp
   12cb8:	andeq	r2, r1, r4, lsl sp
   12cbc:	andeq	r2, r1, r4, lsl sp
   12cc0:	andeq	r2, r1, r4, ror sp
   12cc4:	andeq	r2, r1, r4, ror sp
   12cc8:	andeq	r2, r1, r4, ror sp
   12ccc:	andeq	r2, r1, r4, lsl sp
   12cd0:	andeq	r2, r1, r4, ror sp
   12cd4:	andeq	r2, r1, r4, lsl sp
   12cd8:	andeq	r2, r1, r4, ror sp
   12cdc:	andeq	r2, r1, r4, ror sp
   12ce0:	andeq	r2, r1, r4, ror sp
   12ce4:	andeq	r2, r1, r4, ror sp
   12ce8:	andeq	r2, r1, r4, ror sp
   12cec:	andeq	r2, r1, r4, ror sp
   12cf0:	andeq	r2, r1, r4, ror sp
   12cf4:	andeq	r2, r1, r4, ror sp
   12cf8:	andeq	r2, r1, r4, ror sp
   12cfc:	andeq	r2, r1, r4, ror sp
   12d00:	andeq	r2, r1, r4, ror sp
   12d04:	andeq	r2, r1, r4, ror sp
   12d08:	andeq	r2, r1, r4, lsl sp
   12d0c:	andeq	r2, r1, r4, lsl sp
   12d10:	andeq	r2, r1, r4, lsl sp
   12d14:	ldr	r2, [sp, #32]
   12d18:	cmp	r2, #0
   12d1c:	bne	12e20 <abort@plt+0x2038>
   12d20:	cmp	sl, r4
   12d24:	movhi	r2, #63	; 0x3f
   12d28:	strbhi	r2, [r8, r4]
   12d2c:	add	r2, r4, #1
   12d30:	cmp	sl, r2
   12d34:	movhi	r0, #34	; 0x22
   12d38:	strbhi	r0, [r8, r2]
   12d3c:	add	r2, r4, #2
   12d40:	cmp	sl, r2
   12d44:	movhi	r0, #34	; 0x22
   12d48:	strbhi	r0, [r8, r2]
   12d4c:	add	r2, r4, #3
   12d50:	cmp	sl, r2
   12d54:	movhi	r0, #63	; 0x3f
   12d58:	strbhi	r0, [r8, r2]
   12d5c:	mov	r2, #0
   12d60:	add	r4, r4, #4
   12d64:	mov	r5, r1
   12d68:	mov	r9, r3
   12d6c:	mov	r6, r2
   12d70:	b	1216c <abort@plt+0x1384>
   12d74:	mov	r2, #0
   12d78:	mov	r6, r2
   12d7c:	b	11cdc <abort@plt+0xef4>
   12d80:	ldr	r0, [sp, #24]
   12d84:	mov	r1, r4
   12d88:	cmp	r1, r0
   12d8c:	mov	r2, r7
   12d90:	mov	r3, r5
   12d94:	mov	ip, r5
   12d98:	ldr	r7, [sp, #96]	; 0x60
   12d9c:	ldr	r5, [sp, #92]	; 0x5c
   12da0:	ldr	r4, [sp, #100]	; 0x64
   12da4:	ldr	r8, [sp, #84]	; 0x54
   12da8:	ldr	sl, [sp, #88]	; 0x58
   12dac:	bcs	12de0 <abort@plt+0x1ff8>
   12db0:	ldrb	r6, [r2]
   12db4:	cmp	r6, #0
   12db8:	bne	12dcc <abort@plt+0x1fe4>
   12dbc:	b	12efc <abort@plt+0x2114>
   12dc0:	ldrb	r6, [r2, #1]!
   12dc4:	cmp	r6, #0
   12dc8:	beq	12e84 <abort@plt+0x209c>
   12dcc:	add	r3, r3, #1
   12dd0:	add	r1, r9, r3
   12dd4:	cmp	r1, r0
   12dd8:	bcc	12dc0 <abort@plt+0x1fd8>
   12ddc:	mov	ip, r3
   12de0:	ldr	r2, [sp, #28]
   12de4:	mov	r6, #0
   12de8:	b	12924 <abort@plt+0x1b3c>
   12dec:	mov	r3, #1
   12df0:	str	r3, [sp, #40]	; 0x28
   12df4:	str	r3, [sp, #32]
   12df8:	str	r3, [sp, #28]
   12dfc:	str	r3, [sp, #52]	; 0x34
   12e00:	ldr	r3, [pc, #-2220]	; 1255c <abort@plt+0x1774>
   12e04:	mov	r2, #0
   12e08:	str	r2, [sp, #68]	; 0x44
   12e0c:	str	r2, [sp, #44]	; 0x2c
   12e10:	str	r2, [sp, #72]	; 0x48
   12e14:	mov	r4, r2
   12e18:	str	r3, [sp, #60]	; 0x3c
   12e1c:	b	11844 <abort@plt+0xa5c>
   12e20:	str	fp, [sp, #160]	; 0xa0
   12e24:	mov	fp, r8
   12e28:	ldr	r8, [sp, #160]	; 0xa0
   12e2c:	b	11ff4 <abort@plt+0x120c>
   12e30:	mov	r2, r3
   12e34:	ldr	r3, [sp, #60]	; 0x3c
   12e38:	cmp	r3, #0
   12e3c:	moveq	r2, #0
   12e40:	andne	r2, r2, #1
   12e44:	cmp	r2, #0
   12e48:	beq	12e74 <abort@plt+0x208c>
   12e4c:	mov	r2, r3
   12e50:	ldrb	r3, [r3]
   12e54:	cmp	r3, #0
   12e58:	beq	12e74 <abort@plt+0x208c>
   12e5c:	cmp	sl, r4
   12e60:	strbhi	r3, [fp, r4]
   12e64:	ldrb	r3, [r2, #1]!
   12e68:	add	r4, r4, #1
   12e6c:	cmp	r3, #0
   12e70:	bne	12e5c <abort@plt+0x2074>
   12e74:	cmp	sl, r4
   12e78:	movhi	r3, #0
   12e7c:	strbhi	r3, [fp, r4]
   12e80:	b	12034 <abort@plt+0x124c>
   12e84:	mov	ip, r3
   12e88:	ldr	r2, [sp, #28]
   12e8c:	b	12924 <abort@plt+0x1b3c>
   12e90:	str	fp, [sp, #160]	; 0xa0
   12e94:	mov	fp, r8
   12e98:	ldr	r8, [sp, #160]	; 0xa0
   12e9c:	sub	r3, r8, #2
   12ea0:	clz	r3, r3
   12ea4:	lsr	r3, r3, #5
   12ea8:	str	r3, [sp, #28]
   12eac:	b	11fe8 <abort@plt+0x1200>
   12eb0:	ldr	r3, [sp, #76]	; 0x4c
   12eb4:	mov	ip, #5
   12eb8:	str	r3, [sp, #16]
   12ebc:	ldr	r3, [sp, #80]	; 0x50
   12ec0:	ldr	r2, [sp, #36]	; 0x24
   12ec4:	str	r3, [sp, #12]
   12ec8:	ldr	r3, [sp, #56]	; 0x38
   12ecc:	ldr	r1, [sp, #72]	; 0x48
   12ed0:	str	r3, [sp, #8]
   12ed4:	ldr	r3, [sp, #164]	; 0xa4
   12ed8:	mov	r0, fp
   12edc:	str	r3, [sp, #4]
   12ee0:	str	ip, [sp]
   12ee4:	ldr	r3, [sp, #24]
   12ee8:	bl	1174c <abort@plt+0x964>
   12eec:	mov	r4, r0
   12ef0:	b	12034 <abort@plt+0x124c>
   12ef4:	mov	r8, #2
   12ef8:	b	11fe8 <abort@plt+0x1200>
   12efc:	ldr	r2, [sp, #28]
   12f00:	b	12924 <abort@plt+0x1b3c>
   12f04:	mov	r3, #0
   12f08:	str	r3, [sp, #68]	; 0x44
   12f0c:	str	r3, [sp, #44]	; 0x2c
   12f10:	str	r3, [sp, #72]	; 0x48
   12f14:	str	r3, [sp, #28]
   12f18:	mov	r4, r3
   12f1c:	ldr	r3, [pc, #-2500]	; 12560 <abort@plt+0x1778>
   12f20:	mov	r2, #1
   12f24:	str	r2, [sp, #40]	; 0x28
   12f28:	str	r2, [sp, #32]
   12f2c:	str	r2, [sp, #52]	; 0x34
   12f30:	str	r3, [sp, #60]	; 0x3c
   12f34:	b	11844 <abort@plt+0xa5c>
   12f38:	bl	10c5c <__stack_chk_fail@plt>
   12f3c:	mov	r5, r3
   12f40:	mov	r6, #0
   12f44:	b	11d38 <abort@plt+0xf50>
   12f48:	mov	r3, #0
   12f4c:	mov	r2, #1
   12f50:	str	r3, [sp, #44]	; 0x2c
   12f54:	str	r3, [sp, #72]	; 0x48
   12f58:	str	r2, [sp, #40]	; 0x28
   12f5c:	b	11e54 <abort@plt+0x106c>
   12f60:	bl	10de8 <abort@plt>
   12f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f68:	sub	sp, sp, #44	; 0x2c
   12f6c:	mov	r6, r0
   12f70:	mov	r4, r3
   12f74:	mov	sl, r1
   12f78:	mov	fp, r2
   12f7c:	bl	10d4c <__errno_location@plt>
   12f80:	ldr	r7, [pc, #364]	; 130f4 <abort@plt+0x230c>
   12f84:	cmp	r6, #0
   12f88:	ldr	r5, [r7]
   12f8c:	ldr	r3, [r0]
   12f90:	str	r3, [sp, #24]
   12f94:	blt	130f0 <abort@plt+0x2308>
   12f98:	ldr	r3, [r7, #4]
   12f9c:	mov	r8, r0
   12fa0:	cmp	r3, r6
   12fa4:	bgt	12ff0 <abort@plt+0x2208>
   12fa8:	cmn	r6, #-268435454	; 0xf0000002
   12fac:	bgt	130ec <abort@plt+0x2304>
   12fb0:	add	r9, r6, #1
   12fb4:	add	r3, r7, #8
   12fb8:	cmp	r5, r3
   12fbc:	lsl	r1, r9, #3
   12fc0:	beq	130cc <abort@plt+0x22e4>
   12fc4:	mov	r0, r5
   12fc8:	bl	13d58 <abort@plt+0x2f70>
   12fcc:	mov	r5, r0
   12fd0:	str	r0, [r7]
   12fd4:	ldr	r0, [r7, #4]
   12fd8:	mov	r1, #0
   12fdc:	sub	r2, r9, r0
   12fe0:	add	r0, r5, r0, lsl #3
   12fe4:	lsl	r2, r2, #3
   12fe8:	bl	10d64 <memset@plt>
   12fec:	str	r9, [r7, #4]
   12ff0:	add	r3, r5, r6, lsl #3
   12ff4:	ldr	r1, [r4, #4]
   12ff8:	ldr	r7, [r3, #4]
   12ffc:	ldr	r9, [r5, r6, lsl #3]
   13000:	ldr	r2, [r4, #40]	; 0x28
   13004:	ldr	ip, [r4, #44]	; 0x2c
   13008:	str	r3, [sp, #28]
   1300c:	ldr	r3, [r4]
   13010:	orr	r1, r1, #1
   13014:	add	lr, r4, #8
   13018:	str	r1, [sp, #36]	; 0x24
   1301c:	str	r1, [sp, #4]
   13020:	str	r2, [sp, #12]
   13024:	str	r3, [sp]
   13028:	mov	r0, r7
   1302c:	mov	r1, r9
   13030:	str	ip, [sp, #16]
   13034:	str	lr, [sp, #8]
   13038:	mov	r3, fp
   1303c:	mov	r2, sl
   13040:	str	lr, [sp, #32]
   13044:	bl	1174c <abort@plt+0x964>
   13048:	cmp	r9, r0
   1304c:	bhi	130b8 <abort@plt+0x22d0>
   13050:	ldr	r3, [pc, #160]	; 130f8 <abort@plt+0x2310>
   13054:	add	r9, r0, #1
   13058:	cmp	r7, r3
   1305c:	str	r9, [r5, r6, lsl #3]
   13060:	beq	1306c <abort@plt+0x2284>
   13064:	mov	r0, r7
   13068:	bl	10c14 <free@plt>
   1306c:	mov	r0, r9
   13070:	bl	13cfc <abort@plt+0x2f14>
   13074:	ldr	lr, [sp, #28]
   13078:	ldr	ip, [r4, #44]	; 0x2c
   1307c:	ldr	r5, [r4, #40]	; 0x28
   13080:	mov	r3, fp
   13084:	mov	r2, sl
   13088:	mov	r1, r9
   1308c:	str	r0, [lr, #4]
   13090:	ldr	lr, [r4]
   13094:	ldr	r4, [sp, #32]
   13098:	str	ip, [sp, #16]
   1309c:	str	r4, [sp, #8]
   130a0:	ldr	r4, [sp, #36]	; 0x24
   130a4:	str	r5, [sp, #12]
   130a8:	str	r4, [sp, #4]
   130ac:	str	lr, [sp]
   130b0:	mov	r7, r0
   130b4:	bl	1174c <abort@plt+0x964>
   130b8:	ldr	r3, [sp, #24]
   130bc:	mov	r0, r7
   130c0:	str	r3, [r8]
   130c4:	add	sp, sp, #44	; 0x2c
   130c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130cc:	mov	r0, #0
   130d0:	bl	13d58 <abort@plt+0x2f70>
   130d4:	ldr	r3, [pc, #32]	; 130fc <abort@plt+0x2314>
   130d8:	mov	r5, r0
   130dc:	ldm	r3, {r0, r1}
   130e0:	str	r5, [r7]
   130e4:	stm	r5, {r0, r1}
   130e8:	b	12fd4 <abort@plt+0x21ec>
   130ec:	bl	13f44 <abort@plt+0x315c>
   130f0:	bl	10de8 <abort@plt>
   130f4:	ldrdeq	r5, [r2], -r8
   130f8:	andeq	r5, r2, r4, asr #2
   130fc:	andeq	r5, r2, r0, ror #1
   13100:	push	{r4, r5, r6, lr}
   13104:	mov	r5, r0
   13108:	bl	10d4c <__errno_location@plt>
   1310c:	cmp	r5, #0
   13110:	mov	r1, #48	; 0x30
   13114:	mov	r4, r0
   13118:	ldr	r0, [pc, #16]	; 13130 <abort@plt+0x2348>
   1311c:	ldr	r6, [r4]
   13120:	movne	r0, r5
   13124:	bl	13f04 <abort@plt+0x311c>
   13128:	str	r6, [r4]
   1312c:	pop	{r4, r5, r6, pc}
   13130:	andeq	r5, r2, r4, asr #4
   13134:	ldr	r3, [pc, #12]	; 13148 <abort@plt+0x2360>
   13138:	cmp	r0, #0
   1313c:	moveq	r0, r3
   13140:	ldr	r0, [r0]
   13144:	bx	lr
   13148:	andeq	r5, r2, r4, asr #4
   1314c:	ldr	r3, [pc, #12]	; 13160 <abort@plt+0x2378>
   13150:	cmp	r0, #0
   13154:	moveq	r0, r3
   13158:	str	r1, [r0]
   1315c:	bx	lr
   13160:	andeq	r5, r2, r4, asr #4
   13164:	ldr	r3, [pc, #52]	; 131a0 <abort@plt+0x23b8>
   13168:	cmp	r0, #0
   1316c:	moveq	r0, r3
   13170:	add	r3, r0, #8
   13174:	push	{lr}		; (str lr, [sp, #-4]!)
   13178:	lsr	lr, r1, #5
   1317c:	and	r1, r1, #31
   13180:	ldr	ip, [r3, lr, lsl #2]
   13184:	lsr	r0, ip, r1
   13188:	eor	r2, r2, r0
   1318c:	and	r2, r2, #1
   13190:	and	r0, r0, #1
   13194:	eor	r1, ip, r2, lsl r1
   13198:	str	r1, [r3, lr, lsl #2]
   1319c:	pop	{pc}		; (ldr pc, [sp], #4)
   131a0:	andeq	r5, r2, r4, asr #4
   131a4:	ldr	r3, [pc, #16]	; 131bc <abort@plt+0x23d4>
   131a8:	cmp	r0, #0
   131ac:	movne	r3, r0
   131b0:	ldr	r0, [r3, #4]
   131b4:	str	r1, [r3, #4]
   131b8:	bx	lr
   131bc:	andeq	r5, r2, r4, asr #4
   131c0:	ldr	r3, [pc, #44]	; 131f4 <abort@plt+0x240c>
   131c4:	cmp	r0, #0
   131c8:	moveq	r0, r3
   131cc:	mov	ip, #10
   131d0:	cmp	r2, #0
   131d4:	cmpne	r1, #0
   131d8:	str	ip, [r0]
   131dc:	beq	131ec <abort@plt+0x2404>
   131e0:	str	r1, [r0, #40]	; 0x28
   131e4:	str	r2, [r0, #44]	; 0x2c
   131e8:	bx	lr
   131ec:	push	{r4, lr}
   131f0:	bl	10de8 <abort@plt>
   131f4:	andeq	r5, r2, r4, asr #4
   131f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131fc:	sub	sp, sp, #24
   13200:	ldr	ip, [pc, #108]	; 13274 <abort@plt+0x248c>
   13204:	ldr	r4, [sp, #56]	; 0x38
   13208:	mov	r9, r2
   1320c:	cmp	r4, #0
   13210:	moveq	r4, ip
   13214:	mov	sl, r3
   13218:	mov	r7, r0
   1321c:	mov	r8, r1
   13220:	bl	10d4c <__errno_location@plt>
   13224:	ldr	r3, [r4, #44]	; 0x2c
   13228:	mov	r1, r8
   1322c:	ldr	r6, [r0]
   13230:	str	r3, [sp, #16]
   13234:	ldr	r2, [r4, #40]	; 0x28
   13238:	add	r3, r4, #8
   1323c:	str	r3, [sp, #8]
   13240:	str	r2, [sp, #12]
   13244:	ldr	r2, [r4, #4]
   13248:	mov	r5, r0
   1324c:	str	r2, [sp, #4]
   13250:	ldr	ip, [r4]
   13254:	mov	r3, sl
   13258:	mov	r2, r9
   1325c:	mov	r0, r7
   13260:	str	ip, [sp]
   13264:	bl	1174c <abort@plt+0x964>
   13268:	str	r6, [r5]
   1326c:	add	sp, sp, #24
   13270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13274:	andeq	r5, r2, r4, asr #4
   13278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1327c:	cmp	r3, #0
   13280:	sub	sp, sp, #44	; 0x2c
   13284:	ldr	r4, [pc, #192]	; 1334c <abort@plt+0x2564>
   13288:	mov	r6, r2
   1328c:	movne	r4, r3
   13290:	mov	r9, r1
   13294:	mov	r8, r0
   13298:	bl	10d4c <__errno_location@plt>
   1329c:	ldr	r3, [r4, #44]	; 0x2c
   132a0:	ldr	r5, [r4, #4]
   132a4:	add	sl, r4, #8
   132a8:	cmp	r6, #0
   132ac:	orreq	r5, r5, #1
   132b0:	mov	r1, #0
   132b4:	ldr	r2, [r0]
   132b8:	str	r3, [sp, #16]
   132bc:	ldr	r3, [r4, #40]	; 0x28
   132c0:	stmib	sp, {r5, sl}
   132c4:	str	r3, [sp, #12]
   132c8:	ldr	r3, [r4]
   132cc:	mov	r7, r0
   132d0:	str	r2, [sp, #28]
   132d4:	str	r3, [sp]
   132d8:	mov	r2, r8
   132dc:	mov	r3, r9
   132e0:	mov	r0, r1
   132e4:	bl	1174c <abort@plt+0x964>
   132e8:	add	r1, r0, #1
   132ec:	mov	fp, r0
   132f0:	mov	r0, r1
   132f4:	str	r1, [sp, #36]	; 0x24
   132f8:	bl	13cfc <abort@plt+0x2f14>
   132fc:	ldr	r3, [r4, #44]	; 0x2c
   13300:	mov	r2, r8
   13304:	str	r3, [sp, #16]
   13308:	ldr	r3, [r4, #40]	; 0x28
   1330c:	str	r5, [sp, #4]
   13310:	str	r3, [sp, #12]
   13314:	str	sl, [sp, #8]
   13318:	ldr	ip, [r4]
   1331c:	ldr	r1, [sp, #36]	; 0x24
   13320:	mov	r3, r9
   13324:	str	ip, [sp]
   13328:	str	r0, [sp, #32]
   1332c:	bl	1174c <abort@plt+0x964>
   13330:	ldr	r2, [sp, #28]
   13334:	cmp	r6, #0
   13338:	str	r2, [r7]
   1333c:	ldr	r0, [sp, #32]
   13340:	strne	fp, [r6]
   13344:	add	sp, sp, #44	; 0x2c
   13348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1334c:	andeq	r5, r2, r4, asr #4
   13350:	mov	r3, r2
   13354:	mov	r2, #0
   13358:	b	13278 <abort@plt+0x2490>
   1335c:	push	{r4, r5, r6, r7, r8, lr}
   13360:	ldr	r6, [pc, #112]	; 133d8 <abort@plt+0x25f0>
   13364:	ldr	r3, [r6, #4]
   13368:	ldr	r7, [r6]
   1336c:	cmp	r3, #1
   13370:	ble	13394 <abort@plt+0x25ac>
   13374:	sub	r5, r7, #8
   13378:	add	r5, r5, r3, lsl #3
   1337c:	mov	r4, r7
   13380:	ldr	r0, [r4, #12]
   13384:	add	r4, r4, #8
   13388:	bl	10c14 <free@plt>
   1338c:	cmp	r4, r5
   13390:	bne	13380 <abort@plt+0x2598>
   13394:	ldr	r0, [r7, #4]
   13398:	ldr	r4, [pc, #60]	; 133dc <abort@plt+0x25f4>
   1339c:	cmp	r0, r4
   133a0:	beq	133b4 <abort@plt+0x25cc>
   133a4:	bl	10c14 <free@plt>
   133a8:	mov	r3, #256	; 0x100
   133ac:	str	r4, [r6, #12]
   133b0:	str	r3, [r6, #8]
   133b4:	ldr	r4, [pc, #36]	; 133e0 <abort@plt+0x25f8>
   133b8:	cmp	r7, r4
   133bc:	beq	133cc <abort@plt+0x25e4>
   133c0:	mov	r0, r7
   133c4:	bl	10c14 <free@plt>
   133c8:	str	r4, [r6]
   133cc:	mov	r3, #1
   133d0:	str	r3, [r6, #4]
   133d4:	pop	{r4, r5, r6, r7, r8, pc}
   133d8:	ldrdeq	r5, [r2], -r8
   133dc:	andeq	r5, r2, r4, asr #2
   133e0:	andeq	r5, r2, r0, ror #1
   133e4:	ldr	r3, [pc, #4]	; 133f0 <abort@plt+0x2608>
   133e8:	mvn	r2, #0
   133ec:	b	12f64 <abort@plt+0x217c>
   133f0:	andeq	r5, r2, r4, asr #4
   133f4:	ldr	r3, [pc]	; 133fc <abort@plt+0x2614>
   133f8:	b	12f64 <abort@plt+0x217c>
   133fc:	andeq	r5, r2, r4, asr #4
   13400:	mov	r1, r0
   13404:	ldr	r3, [pc, #8]	; 13414 <abort@plt+0x262c>
   13408:	mvn	r2, #0
   1340c:	mov	r0, #0
   13410:	b	12f64 <abort@plt+0x217c>
   13414:	andeq	r5, r2, r4, asr #4
   13418:	mov	r2, r1
   1341c:	ldr	r3, [pc, #8]	; 1342c <abort@plt+0x2644>
   13420:	mov	r1, r0
   13424:	mov	r0, #0
   13428:	b	12f64 <abort@plt+0x217c>
   1342c:	andeq	r5, r2, r4, asr #4
   13430:	push	{r4, r5, r6, lr}
   13434:	sub	sp, sp, #56	; 0x38
   13438:	ldr	r4, [pc, #68]	; 13484 <abort@plt+0x269c>
   1343c:	mov	r6, r2
   13440:	mov	r5, r0
   13444:	ldr	r3, [r4]
   13448:	add	r0, sp, #4
   1344c:	str	r3, [sp, #52]	; 0x34
   13450:	bl	115dc <abort@plt+0x7f4>
   13454:	add	r3, sp, #4
   13458:	mvn	r2, #0
   1345c:	mov	r1, r6
   13460:	mov	r0, r5
   13464:	bl	12f64 <abort@plt+0x217c>
   13468:	ldr	r2, [sp, #52]	; 0x34
   1346c:	ldr	r3, [r4]
   13470:	cmp	r2, r3
   13474:	bne	13480 <abort@plt+0x2698>
   13478:	add	sp, sp, #56	; 0x38
   1347c:	pop	{r4, r5, r6, pc}
   13480:	bl	10c5c <__stack_chk_fail@plt>
   13484:	andeq	r4, r2, r8, lsl #30
   13488:	push	{r4, r5, r6, r7, lr}
   1348c:	sub	sp, sp, #60	; 0x3c
   13490:	ldr	r4, [pc, #72]	; 134e0 <abort@plt+0x26f8>
   13494:	mov	r6, r2
   13498:	mov	r7, r3
   1349c:	ldr	ip, [r4]
   134a0:	mov	r5, r0
   134a4:	add	r0, sp, #4
   134a8:	str	ip, [sp, #52]	; 0x34
   134ac:	bl	115dc <abort@plt+0x7f4>
   134b0:	add	r3, sp, #4
   134b4:	mov	r2, r7
   134b8:	mov	r1, r6
   134bc:	mov	r0, r5
   134c0:	bl	12f64 <abort@plt+0x217c>
   134c4:	ldr	r2, [sp, #52]	; 0x34
   134c8:	ldr	r3, [r4]
   134cc:	cmp	r2, r3
   134d0:	bne	134dc <abort@plt+0x26f4>
   134d4:	add	sp, sp, #60	; 0x3c
   134d8:	pop	{r4, r5, r6, r7, pc}
   134dc:	bl	10c5c <__stack_chk_fail@plt>
   134e0:	andeq	r4, r2, r8, lsl #30
   134e4:	mov	r2, r1
   134e8:	mov	r1, r0
   134ec:	mov	r0, #0
   134f0:	b	13430 <abort@plt+0x2648>
   134f4:	mov	r3, r2
   134f8:	mov	r2, r1
   134fc:	mov	r1, r0
   13500:	mov	r0, #0
   13504:	b	13488 <abort@plt+0x26a0>
   13508:	push	{r4, r5, r6, r7, r8, r9, lr}
   1350c:	mov	r4, r2
   13510:	ldr	lr, [pc, #128]	; 13598 <abort@plt+0x27b0>
   13514:	mov	r8, r0
   13518:	mov	r9, r1
   1351c:	ldm	lr!, {r0, r1, r2, r3}
   13520:	sub	sp, sp, #60	; 0x3c
   13524:	add	ip, sp, #4
   13528:	lsr	r6, r4, #5
   1352c:	stmia	ip!, {r0, r1, r2, r3}
   13530:	add	r7, sp, #12
   13534:	ldm	lr!, {r0, r1, r2, r3}
   13538:	and	r4, r4, #31
   1353c:	ldr	r5, [pc, #88]	; 1359c <abort@plt+0x27b4>
   13540:	stmia	ip!, {r0, r1, r2, r3}
   13544:	ldm	lr, {r0, r1, r2, r3}
   13548:	stm	ip, {r0, r1, r2, r3}
   1354c:	mov	r2, r9
   13550:	ldr	r3, [r7, r6, lsl #2]
   13554:	ldr	ip, [r5]
   13558:	mov	r1, r8
   1355c:	mvn	r0, r3, lsr r4
   13560:	and	r0, r0, #1
   13564:	str	ip, [sp, #52]	; 0x34
   13568:	eor	r4, r3, r0, lsl r4
   1356c:	add	r3, sp, #4
   13570:	mov	r0, #0
   13574:	str	r4, [r7, r6, lsl #2]
   13578:	bl	12f64 <abort@plt+0x217c>
   1357c:	ldr	r2, [sp, #52]	; 0x34
   13580:	ldr	r3, [r5]
   13584:	cmp	r2, r3
   13588:	bne	13594 <abort@plt+0x27ac>
   1358c:	add	sp, sp, #60	; 0x3c
   13590:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13594:	bl	10c5c <__stack_chk_fail@plt>
   13598:	andeq	r5, r2, r4, asr #4
   1359c:	andeq	r4, r2, r8, lsl #30
   135a0:	mov	r2, r1
   135a4:	mvn	r1, #0
   135a8:	b	13508 <abort@plt+0x2720>
   135ac:	mov	r2, #58	; 0x3a
   135b0:	mvn	r1, #0
   135b4:	b	13508 <abort@plt+0x2720>
   135b8:	mov	r2, #58	; 0x3a
   135bc:	b	13508 <abort@plt+0x2720>
   135c0:	push	{r4, r5, r6, r7, r8, lr}
   135c4:	sub	sp, sp, #104	; 0x68
   135c8:	ldr	r5, [pc, #120]	; 13648 <abort@plt+0x2860>
   135cc:	mov	r6, r0
   135d0:	mov	r0, sp
   135d4:	ldr	r3, [r5]
   135d8:	mov	r7, r2
   135dc:	str	r3, [sp, #100]	; 0x64
   135e0:	bl	115dc <abort@plt+0x7f4>
   135e4:	mov	ip, sp
   135e8:	add	lr, sp, #52	; 0x34
   135ec:	ldm	ip!, {r0, r1, r2, r3}
   135f0:	stmia	lr!, {r0, r1, r2, r3}
   135f4:	ldm	ip!, {r0, r1, r2, r3}
   135f8:	ldr	r8, [sp, #64]	; 0x40
   135fc:	stmia	lr!, {r0, r1, r2, r3}
   13600:	mvn	r4, r8
   13604:	ldm	ip, {r0, r1, r2, r3}
   13608:	and	ip, r4, #67108864	; 0x4000000
   1360c:	eor	ip, ip, r8
   13610:	str	ip, [sp, #64]	; 0x40
   13614:	stm	lr, {r0, r1, r2, r3}
   13618:	add	r3, sp, #52	; 0x34
   1361c:	mvn	r2, #0
   13620:	mov	r1, r7
   13624:	mov	r0, r6
   13628:	bl	12f64 <abort@plt+0x217c>
   1362c:	ldr	r2, [sp, #100]	; 0x64
   13630:	ldr	r3, [r5]
   13634:	cmp	r2, r3
   13638:	bne	13644 <abort@plt+0x285c>
   1363c:	add	sp, sp, #104	; 0x68
   13640:	pop	{r4, r5, r6, r7, r8, pc}
   13644:	bl	10c5c <__stack_chk_fail@plt>
   13648:	andeq	r4, r2, r8, lsl #30
   1364c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13650:	mov	r6, r1
   13654:	ldr	lr, [pc, #132]	; 136e0 <abort@plt+0x28f8>
   13658:	mov	r5, r2
   1365c:	mov	r8, r0
   13660:	mov	r9, r3
   13664:	ldm	lr!, {r0, r1, r2, r3}
   13668:	sub	sp, sp, #60	; 0x3c
   1366c:	add	ip, sp, #4
   13670:	ldr	r4, [pc, #108]	; 136e4 <abort@plt+0x28fc>
   13674:	stmia	ip!, {r0, r1, r2, r3}
   13678:	mov	r7, #10
   1367c:	ldm	lr!, {r0, r1, r2, r3}
   13680:	cmp	r5, #0
   13684:	cmpne	r6, #0
   13688:	str	r7, [sp, #4]
   1368c:	stmia	ip!, {r0, r1, r2, r3}
   13690:	ldm	lr, {r0, r1, r2, r3}
   13694:	ldr	lr, [r4]
   13698:	stm	ip, {r0, r1, r2, r3}
   1369c:	str	lr, [sp, #52]	; 0x34
   136a0:	beq	136dc <abort@plt+0x28f4>
   136a4:	add	r3, sp, #4
   136a8:	ldr	r2, [sp, #88]	; 0x58
   136ac:	mov	r1, r9
   136b0:	mov	r0, r8
   136b4:	str	r6, [sp, #44]	; 0x2c
   136b8:	str	r5, [sp, #48]	; 0x30
   136bc:	bl	12f64 <abort@plt+0x217c>
   136c0:	ldr	r2, [sp, #52]	; 0x34
   136c4:	ldr	r3, [r4]
   136c8:	cmp	r2, r3
   136cc:	bne	136d8 <abort@plt+0x28f0>
   136d0:	add	sp, sp, #60	; 0x3c
   136d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   136d8:	bl	10c5c <__stack_chk_fail@plt>
   136dc:	bl	10de8 <abort@plt>
   136e0:	andeq	r5, r2, r4, asr #4
   136e4:	andeq	r4, r2, r8, lsl #30
   136e8:	push	{lr}		; (str lr, [sp, #-4]!)
   136ec:	sub	sp, sp, #12
   136f0:	mvn	ip, #0
   136f4:	str	ip, [sp]
   136f8:	bl	1364c <abort@plt+0x2864>
   136fc:	add	sp, sp, #12
   13700:	pop	{pc}		; (ldr pc, [sp], #4)
   13704:	push	{lr}		; (str lr, [sp, #-4]!)
   13708:	sub	sp, sp, #12
   1370c:	mvn	ip, #0
   13710:	mov	r3, r2
   13714:	str	ip, [sp]
   13718:	mov	r2, r1
   1371c:	mov	r1, r0
   13720:	mov	r0, #0
   13724:	bl	1364c <abort@plt+0x2864>
   13728:	add	sp, sp, #12
   1372c:	pop	{pc}		; (ldr pc, [sp], #4)
   13730:	push	{lr}		; (str lr, [sp, #-4]!)
   13734:	sub	sp, sp, #12
   13738:	str	r3, [sp]
   1373c:	mov	r3, r2
   13740:	mov	r2, r1
   13744:	mov	r1, r0
   13748:	mov	r0, #0
   1374c:	bl	1364c <abort@plt+0x2864>
   13750:	add	sp, sp, #12
   13754:	pop	{pc}		; (ldr pc, [sp], #4)
   13758:	ldr	r3, [pc]	; 13760 <abort@plt+0x2978>
   1375c:	b	12f64 <abort@plt+0x217c>
   13760:	andeq	r5, r2, r8, ror #1
   13764:	mov	r2, r1
   13768:	ldr	r3, [pc, #8]	; 13778 <abort@plt+0x2990>
   1376c:	mov	r1, r0
   13770:	mov	r0, #0
   13774:	b	12f64 <abort@plt+0x217c>
   13778:	andeq	r5, r2, r8, ror #1
   1377c:	ldr	r3, [pc, #4]	; 13788 <abort@plt+0x29a0>
   13780:	mvn	r2, #0
   13784:	b	12f64 <abort@plt+0x217c>
   13788:	andeq	r5, r2, r8, ror #1
   1378c:	mov	r1, r0
   13790:	ldr	r3, [pc, #8]	; 137a0 <abort@plt+0x29b8>
   13794:	mvn	r2, #0
   13798:	mov	r0, #0
   1379c:	b	12f64 <abort@plt+0x217c>
   137a0:	andeq	r5, r2, r8, ror #1
   137a4:	push	{r4, r5, r6, lr}
   137a8:	sub	sp, sp, #32
   137ac:	cmp	r1, #0
   137b0:	mov	r5, r0
   137b4:	ldr	r4, [sp, #48]	; 0x30
   137b8:	ldr	r6, [sp, #52]	; 0x34
   137bc:	beq	1384c <abort@plt+0x2a64>
   137c0:	strd	r2, [sp]
   137c4:	mov	r3, r1
   137c8:	ldr	r2, [pc, #828]	; 13b0c <abort@plt+0x2d24>
   137cc:	mov	r1, #1
   137d0:	bl	10d88 <__fprintf_chk@plt>
   137d4:	mov	r2, #5
   137d8:	ldr	r1, [pc, #816]	; 13b10 <abort@plt+0x2d28>
   137dc:	mov	r0, #0
   137e0:	bl	10c50 <dcgettext@plt>
   137e4:	ldr	r3, [pc, #808]	; 13b14 <abort@plt+0x2d2c>
   137e8:	ldr	r2, [pc, #808]	; 13b18 <abort@plt+0x2d30>
   137ec:	str	r3, [sp]
   137f0:	mov	r1, #1
   137f4:	mov	r3, r0
   137f8:	mov	r0, r5
   137fc:	bl	10d88 <__fprintf_chk@plt>
   13800:	ldr	r1, [pc, #788]	; 13b1c <abort@plt+0x2d34>
   13804:	mov	r2, #5
   13808:	mov	r0, #0
   1380c:	bl	10c50 <dcgettext@plt>
   13810:	mov	r1, r5
   13814:	bl	10bd8 <fputs_unlocked@plt>
   13818:	cmp	r6, #9
   1381c:	ldrls	pc, [pc, r6, lsl #2]
   13820:	b	13afc <abort@plt+0x2d14>
   13824:	andeq	r3, r1, r8, lsl #22
   13828:	ldrdeq	r3, [r1], -r0
   1382c:	strdeq	r3, [r1], -ip
   13830:	andeq	r3, r1, r0, lsr r9
   13834:	andeq	r3, r1, ip, ror #18
   13838:	andeq	r3, r1, ip, lsr #19
   1383c:	strdeq	r3, [r1], -r4
   13840:	andeq	r3, r1, r4, asr #20
   13844:	muleq	r1, ip, sl
   13848:	andeq	r3, r1, r4, ror #16
   1384c:	str	r3, [sp]
   13850:	mov	r1, #1
   13854:	mov	r3, r2
   13858:	ldr	r2, [pc, #704]	; 13b20 <abort@plt+0x2d38>
   1385c:	bl	10d88 <__fprintf_chk@plt>
   13860:	b	137d4 <abort@plt+0x29ec>
   13864:	ldr	r1, [pc, #696]	; 13b24 <abort@plt+0x2d3c>
   13868:	mov	r2, #5
   1386c:	mov	r0, #0
   13870:	bl	10c50 <dcgettext@plt>
   13874:	ldr	r2, [r4, #32]
   13878:	ldr	r3, [r4, #28]
   1387c:	ldr	r1, [r4, #24]
   13880:	str	r2, [sp, #28]
   13884:	ldr	r2, [r4, #20]
   13888:	str	r3, [sp, #24]
   1388c:	ldr	r3, [r4, #16]
   13890:	str	r1, [sp, #20]
   13894:	ldr	r1, [r4, #12]
   13898:	str	r2, [sp, #16]
   1389c:	ldr	r2, [r4, #8]
   138a0:	str	r3, [sp, #12]
   138a4:	ldr	r3, [r4, #4]
   138a8:	str	r1, [sp, #8]
   138ac:	str	r2, [sp, #4]
   138b0:	str	r3, [sp]
   138b4:	mov	r1, #1
   138b8:	ldr	r3, [r4]
   138bc:	mov	r2, r0
   138c0:	mov	r0, r5
   138c4:	bl	10d88 <__fprintf_chk@plt>
   138c8:	add	sp, sp, #32
   138cc:	pop	{r4, r5, r6, pc}
   138d0:	mov	r2, #5
   138d4:	ldr	r1, [pc, #588]	; 13b28 <abort@plt+0x2d40>
   138d8:	mov	r0, #0
   138dc:	bl	10c50 <dcgettext@plt>
   138e0:	ldr	r3, [r4]
   138e4:	mov	r1, #1
   138e8:	mov	r2, r0
   138ec:	mov	r0, r5
   138f0:	add	sp, sp, #32
   138f4:	pop	{r4, r5, r6, lr}
   138f8:	b	10d88 <__fprintf_chk@plt>
   138fc:	mov	r2, #5
   13900:	ldr	r1, [pc, #548]	; 13b2c <abort@plt+0x2d44>
   13904:	mov	r0, #0
   13908:	bl	10c50 <dcgettext@plt>
   1390c:	ldr	r2, [r4, #4]
   13910:	ldr	r3, [r4]
   13914:	mov	r1, #1
   13918:	str	r2, [sp, #48]	; 0x30
   1391c:	mov	r2, r0
   13920:	mov	r0, r5
   13924:	add	sp, sp, #32
   13928:	pop	{r4, r5, r6, lr}
   1392c:	b	10d88 <__fprintf_chk@plt>
   13930:	mov	r2, #5
   13934:	ldr	r1, [pc, #500]	; 13b30 <abort@plt+0x2d48>
   13938:	mov	r0, #0
   1393c:	bl	10c50 <dcgettext@plt>
   13940:	ldr	r2, [r4, #8]
   13944:	ldr	r3, [r4, #4]
   13948:	mov	r1, #1
   1394c:	str	r2, [sp, #52]	; 0x34
   13950:	str	r3, [sp, #48]	; 0x30
   13954:	ldr	r3, [r4]
   13958:	mov	r2, r0
   1395c:	mov	r0, r5
   13960:	add	sp, sp, #32
   13964:	pop	{r4, r5, r6, lr}
   13968:	b	10d88 <__fprintf_chk@plt>
   1396c:	mov	r2, #5
   13970:	ldr	r1, [pc, #444]	; 13b34 <abort@plt+0x2d4c>
   13974:	mov	r0, #0
   13978:	bl	10c50 <dcgettext@plt>
   1397c:	ldr	r1, [r4, #12]
   13980:	ldr	r2, [r4, #8]
   13984:	ldr	r3, [r4, #4]
   13988:	str	r1, [sp, #8]
   1398c:	str	r2, [sp, #4]
   13990:	str	r3, [sp]
   13994:	mov	r1, #1
   13998:	ldr	r3, [r4]
   1399c:	mov	r2, r0
   139a0:	mov	r0, r5
   139a4:	bl	10d88 <__fprintf_chk@plt>
   139a8:	b	138c8 <abort@plt+0x2ae0>
   139ac:	mov	r2, #5
   139b0:	ldr	r1, [pc, #384]	; 13b38 <abort@plt+0x2d50>
   139b4:	mov	r0, #0
   139b8:	bl	10c50 <dcgettext@plt>
   139bc:	ldr	r3, [r4, #16]
   139c0:	ldr	r1, [r4, #12]
   139c4:	ldr	r2, [r4, #8]
   139c8:	str	r3, [sp, #12]
   139cc:	ldr	r3, [r4, #4]
   139d0:	str	r1, [sp, #8]
   139d4:	str	r2, [sp, #4]
   139d8:	str	r3, [sp]
   139dc:	mov	r1, #1
   139e0:	ldr	r3, [r4]
   139e4:	mov	r2, r0
   139e8:	mov	r0, r5
   139ec:	bl	10d88 <__fprintf_chk@plt>
   139f0:	b	138c8 <abort@plt+0x2ae0>
   139f4:	mov	r2, #5
   139f8:	ldr	r1, [pc, #316]	; 13b3c <abort@plt+0x2d54>
   139fc:	mov	r0, #0
   13a00:	bl	10c50 <dcgettext@plt>
   13a04:	ldr	r2, [r4, #20]
   13a08:	ldr	r3, [r4, #16]
   13a0c:	ldr	r1, [r4, #12]
   13a10:	str	r2, [sp, #16]
   13a14:	ldr	r2, [r4, #8]
   13a18:	str	r3, [sp, #12]
   13a1c:	ldr	r3, [r4, #4]
   13a20:	str	r1, [sp, #8]
   13a24:	str	r2, [sp, #4]
   13a28:	str	r3, [sp]
   13a2c:	mov	r1, #1
   13a30:	ldr	r3, [r4]
   13a34:	mov	r2, r0
   13a38:	mov	r0, r5
   13a3c:	bl	10d88 <__fprintf_chk@plt>
   13a40:	b	138c8 <abort@plt+0x2ae0>
   13a44:	mov	r2, #5
   13a48:	ldr	r1, [pc, #240]	; 13b40 <abort@plt+0x2d58>
   13a4c:	mov	r0, #0
   13a50:	bl	10c50 <dcgettext@plt>
   13a54:	ldr	r1, [r4, #24]
   13a58:	ldr	r2, [r4, #20]
   13a5c:	ldr	r3, [r4, #16]
   13a60:	str	r1, [sp, #20]
   13a64:	ldr	r1, [r4, #12]
   13a68:	str	r2, [sp, #16]
   13a6c:	ldr	r2, [r4, #8]
   13a70:	str	r3, [sp, #12]
   13a74:	ldr	r3, [r4, #4]
   13a78:	str	r1, [sp, #8]
   13a7c:	str	r2, [sp, #4]
   13a80:	str	r3, [sp]
   13a84:	mov	r1, #1
   13a88:	ldr	r3, [r4]
   13a8c:	mov	r2, r0
   13a90:	mov	r0, r5
   13a94:	bl	10d88 <__fprintf_chk@plt>
   13a98:	b	138c8 <abort@plt+0x2ae0>
   13a9c:	mov	r2, #5
   13aa0:	ldr	r1, [pc, #156]	; 13b44 <abort@plt+0x2d5c>
   13aa4:	mov	r0, #0
   13aa8:	bl	10c50 <dcgettext@plt>
   13aac:	ldr	r3, [r4, #28]
   13ab0:	ldr	r1, [r4, #24]
   13ab4:	ldr	r2, [r4, #20]
   13ab8:	str	r3, [sp, #24]
   13abc:	ldr	r3, [r4, #16]
   13ac0:	str	r1, [sp, #20]
   13ac4:	ldr	r1, [r4, #12]
   13ac8:	str	r2, [sp, #16]
   13acc:	ldr	r2, [r4, #8]
   13ad0:	str	r3, [sp, #12]
   13ad4:	ldr	r3, [r4, #4]
   13ad8:	str	r1, [sp, #8]
   13adc:	str	r2, [sp, #4]
   13ae0:	str	r3, [sp]
   13ae4:	mov	r1, #1
   13ae8:	ldr	r3, [r4]
   13aec:	mov	r2, r0
   13af0:	mov	r0, r5
   13af4:	bl	10d88 <__fprintf_chk@plt>
   13af8:	b	138c8 <abort@plt+0x2ae0>
   13afc:	mov	r2, #5
   13b00:	ldr	r1, [pc, #64]	; 13b48 <abort@plt+0x2d60>
   13b04:	b	1386c <abort@plt+0x2a84>
   13b08:	bl	10de8 <abort@plt>
   13b0c:	andeq	r4, r1, r4, asr #19
   13b10:	ldrdeq	r4, [r1], -r8
   13b14:	andeq	r0, r0, r2, ror #15
   13b18:	andeq	r4, r1, ip, lsr #25
   13b1c:	ldrdeq	r4, [r1], -ip
   13b20:	ldrdeq	r4, [r1], -r0
   13b24:			; <UNDEFINED> instruction: 0x00014bb4
   13b28:	andeq	r4, r1, r8, lsr #21
   13b2c:			; <UNDEFINED> instruction: 0x00014ab8
   13b30:	ldrdeq	r4, [r1], -r0
   13b34:	andeq	r4, r1, ip, ror #21
   13b38:	andeq	r4, r1, ip, lsl #22
   13b3c:	andeq	r4, r1, r0, lsr fp
   13b40:	andeq	r4, r1, r8, asr fp
   13b44:	andeq	r4, r1, r4, lsl #23
   13b48:	andeq	r4, r1, r8, ror #23
   13b4c:	push	{r4, r5, lr}
   13b50:	sub	sp, sp, #12
   13b54:	ldr	r5, [sp, #24]
   13b58:	ldr	ip, [r5]
   13b5c:	cmp	ip, #0
   13b60:	beq	13b7c <abort@plt+0x2d94>
   13b64:	mov	lr, r5
   13b68:	mov	ip, #0
   13b6c:	ldr	r4, [lr, #4]!
   13b70:	add	ip, ip, #1
   13b74:	cmp	r4, #0
   13b78:	bne	13b6c <abort@plt+0x2d84>
   13b7c:	stm	sp, {r5, ip}
   13b80:	bl	137a4 <abort@plt+0x29bc>
   13b84:	add	sp, sp, #12
   13b88:	pop	{r4, r5, pc}
   13b8c:	push	{r4, r5, r6, lr}
   13b90:	sub	sp, sp, #56	; 0x38
   13b94:	ldr	r6, [pc, #88]	; 13bf4 <abort@plt+0x2e0c>
   13b98:	ldr	r5, [sp, #72]	; 0x48
   13b9c:	add	r4, sp, #8
   13ba0:	ldr	ip, [r6]
   13ba4:	str	ip, [sp, #52]	; 0x34
   13ba8:	mov	ip, #0
   13bac:	ldr	lr, [r5], #4
   13bb0:	cmp	lr, #0
   13bb4:	str	lr, [r4, #4]!
   13bb8:	beq	13bc8 <abort@plt+0x2de0>
   13bbc:	add	ip, ip, #1
   13bc0:	cmp	ip, #10
   13bc4:	bne	13bac <abort@plt+0x2dc4>
   13bc8:	add	lr, sp, #12
   13bcc:	str	ip, [sp, #4]
   13bd0:	str	lr, [sp]
   13bd4:	bl	137a4 <abort@plt+0x29bc>
   13bd8:	ldr	r2, [sp, #52]	; 0x34
   13bdc:	ldr	r3, [r6]
   13be0:	cmp	r2, r3
   13be4:	bne	13bf0 <abort@plt+0x2e08>
   13be8:	add	sp, sp, #56	; 0x38
   13bec:	pop	{r4, r5, r6, pc}
   13bf0:	bl	10c5c <__stack_chk_fail@plt>
   13bf4:	andeq	r4, r2, r8, lsl #30
   13bf8:	push	{r3}		; (str r3, [sp, #-4]!)
   13bfc:	mov	ip, #0
   13c00:	push	{r4, r5, r6, lr}
   13c04:	sub	sp, sp, #60	; 0x3c
   13c08:	ldr	r6, [pc, #100]	; 13c74 <abort@plt+0x2e8c>
   13c0c:	add	r5, sp, #8
   13c10:	add	r4, sp, #80	; 0x50
   13c14:	ldr	r3, [r6]
   13c18:	str	r4, [sp, #8]
   13c1c:	str	r3, [sp, #52]	; 0x34
   13c20:	ldr	r3, [sp, #76]	; 0x4c
   13c24:	ldr	lr, [r4], #4
   13c28:	cmp	lr, #0
   13c2c:	str	lr, [r5, #4]!
   13c30:	beq	13c40 <abort@plt+0x2e58>
   13c34:	add	ip, ip, #1
   13c38:	cmp	ip, #10
   13c3c:	bne	13c24 <abort@plt+0x2e3c>
   13c40:	add	lr, sp, #12
   13c44:	str	ip, [sp, #4]
   13c48:	str	lr, [sp]
   13c4c:	bl	137a4 <abort@plt+0x29bc>
   13c50:	ldr	r2, [sp, #52]	; 0x34
   13c54:	ldr	r3, [r6]
   13c58:	cmp	r2, r3
   13c5c:	bne	13c70 <abort@plt+0x2e88>
   13c60:	add	sp, sp, #60	; 0x3c
   13c64:	pop	{r4, r5, r6, lr}
   13c68:	add	sp, sp, #4
   13c6c:	bx	lr
   13c70:	bl	10c5c <__stack_chk_fail@plt>
   13c74:	andeq	r4, r2, r8, lsl #30
   13c78:	push	{r4, lr}
   13c7c:	mov	r2, #5
   13c80:	ldr	r1, [pc, #88]	; 13ce0 <abort@plt+0x2ef8>
   13c84:	mov	r0, #0
   13c88:	bl	10c50 <dcgettext@plt>
   13c8c:	ldr	r2, [pc, #80]	; 13ce4 <abort@plt+0x2efc>
   13c90:	mov	r1, r0
   13c94:	mov	r0, #1
   13c98:	bl	10d70 <__printf_chk@plt>
   13c9c:	mov	r2, #5
   13ca0:	ldr	r1, [pc, #64]	; 13ce8 <abort@plt+0x2f00>
   13ca4:	mov	r0, #0
   13ca8:	bl	10c50 <dcgettext@plt>
   13cac:	ldr	r3, [pc, #56]	; 13cec <abort@plt+0x2f04>
   13cb0:	ldr	r2, [pc, #56]	; 13cf0 <abort@plt+0x2f08>
   13cb4:	mov	r1, r0
   13cb8:	mov	r0, #1
   13cbc:	bl	10d70 <__printf_chk@plt>
   13cc0:	ldr	r1, [pc, #44]	; 13cf4 <abort@plt+0x2f0c>
   13cc4:	mov	r2, #5
   13cc8:	mov	r0, #0
   13ccc:	bl	10c50 <dcgettext@plt>
   13cd0:	ldr	r3, [pc, #32]	; 13cf8 <abort@plt+0x2f10>
   13cd4:	pop	{r4, lr}
   13cd8:	ldr	r1, [r3]
   13cdc:	b	10bd8 <fputs_unlocked@plt>
   13ce0:	andeq	r4, r1, r4, lsr #24
   13ce4:	andeq	r4, r1, ip, lsr ip
   13ce8:	andeq	r4, r1, r4, asr ip
   13cec:	andeq	r4, r1, r4, lsr #13
   13cf0:	andeq	r4, r1, ip, asr #13
   13cf4:	andeq	r4, r1, r8, ror #24
   13cf8:	andeq	r5, r2, ip, lsr #2
   13cfc:	push	{r4, lr}
   13d00:	mov	r4, r0
   13d04:	bl	10cec <malloc@plt>
   13d08:	adds	r4, r4, #0
   13d0c:	movne	r4, #1
   13d10:	cmp	r0, #0
   13d14:	movne	r4, #0
   13d18:	cmp	r4, #0
   13d1c:	popeq	{r4, pc}
   13d20:	bl	13f44 <abort@plt+0x315c>
   13d24:	push	{r4, r5, r6, lr}
   13d28:	umull	r4, r5, r0, r1
   13d2c:	adds	r3, r5, #0
   13d30:	movne	r3, #1
   13d34:	cmp	r4, #0
   13d38:	blt	13d50 <abort@plt+0x2f68>
   13d3c:	cmp	r3, #0
   13d40:	bne	13d50 <abort@plt+0x2f68>
   13d44:	mul	r0, r1, r0
   13d48:	pop	{r4, r5, r6, lr}
   13d4c:	b	13cfc <abort@plt+0x2f14>
   13d50:	bl	13f44 <abort@plt+0x315c>
   13d54:	b	13cfc <abort@plt+0x2f14>
   13d58:	adds	r3, r0, #0
   13d5c:	movne	r3, #1
   13d60:	cmp	r1, #0
   13d64:	movne	r3, #0
   13d68:	cmp	r3, #0
   13d6c:	push	{r4, lr}
   13d70:	bne	13d98 <abort@plt+0x2fb0>
   13d74:	mov	r4, r1
   13d78:	bl	10c68 <realloc@plt>
   13d7c:	adds	r4, r4, #0
   13d80:	movne	r4, #1
   13d84:	cmp	r0, #0
   13d88:	movne	r4, #0
   13d8c:	cmp	r4, #0
   13d90:	popeq	{r4, pc}
   13d94:	bl	13f44 <abort@plt+0x315c>
   13d98:	bl	10c14 <free@plt>
   13d9c:	mov	r0, #0
   13da0:	pop	{r4, pc}
   13da4:	push	{r4, r5, r6, lr}
   13da8:	umull	r4, r5, r1, r2
   13dac:	adds	r3, r5, #0
   13db0:	movne	r3, #1
   13db4:	cmp	r4, #0
   13db8:	blt	13dd0 <abort@plt+0x2fe8>
   13dbc:	cmp	r3, #0
   13dc0:	bne	13dd0 <abort@plt+0x2fe8>
   13dc4:	mul	r1, r2, r1
   13dc8:	pop	{r4, r5, r6, lr}
   13dcc:	b	13d58 <abort@plt+0x2f70>
   13dd0:	bl	13f44 <abort@plt+0x315c>
   13dd4:	push	{r4, r5, r6, r7, r8, lr}
   13dd8:	subs	r7, r0, #0
   13ddc:	mov	r6, r1
   13de0:	mov	r5, r2
   13de4:	ldr	r4, [r1]
   13de8:	beq	13e1c <abort@plt+0x3034>
   13dec:	mov	r1, r2
   13df0:	ldr	r0, [pc, #104]	; 13e60 <abort@plt+0x3078>
   13df4:	bl	14298 <abort@plt+0x34b0>
   13df8:	cmp	r0, r4
   13dfc:	bls	13e40 <abort@plt+0x3058>
   13e00:	add	r3, r4, #1
   13e04:	add	r4, r3, r4, lsr #1
   13e08:	str	r4, [r6]
   13e0c:	mul	r1, r5, r4
   13e10:	mov	r0, r7
   13e14:	pop	{r4, r5, r6, r7, r8, lr}
   13e18:	b	13d58 <abort@plt+0x2f70>
   13e1c:	cmp	r4, #0
   13e20:	beq	13e44 <abort@plt+0x305c>
   13e24:	umull	r0, r1, r4, r5
   13e28:	adds	r3, r1, #0
   13e2c:	movne	r3, #1
   13e30:	cmp	r0, #0
   13e34:	blt	13e40 <abort@plt+0x3058>
   13e38:	cmp	r3, #0
   13e3c:	beq	13e08 <abort@plt+0x3020>
   13e40:	bl	13f44 <abort@plt+0x315c>
   13e44:	mov	r1, r2
   13e48:	mov	r0, #64	; 0x40
   13e4c:	bl	14298 <abort@plt+0x34b0>
   13e50:	cmp	r5, #64	; 0x40
   13e54:	movls	r4, r0
   13e58:	addhi	r4, r0, #1
   13e5c:	b	13e24 <abort@plt+0x303c>
   13e60:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13e64:	cmp	r0, #0
   13e68:	ldr	r3, [r1]
   13e6c:	beq	13e90 <abort@plt+0x30a8>
   13e70:	ldr	r2, [pc, #60]	; 13eb4 <abort@plt+0x30cc>
   13e74:	cmp	r3, r2
   13e78:	bhi	13eac <abort@plt+0x30c4>
   13e7c:	add	r2, r3, #1
   13e80:	add	r3, r2, r3, lsr #1
   13e84:	str	r3, [r1]
   13e88:	mov	r1, r3
   13e8c:	b	13d58 <abort@plt+0x2f70>
   13e90:	cmp	r3, #0
   13e94:	bne	13ea8 <abort@plt+0x30c0>
   13e98:	mov	r3, #64	; 0x40
   13e9c:	str	r3, [r1]
   13ea0:	mov	r1, r3
   13ea4:	b	13d58 <abort@plt+0x2f70>
   13ea8:	bge	13e84 <abort@plt+0x309c>
   13eac:	push	{r4, lr}
   13eb0:	bl	13f44 <abort@plt+0x315c>
   13eb4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13eb8:	push	{r4, lr}
   13ebc:	mov	r4, r0
   13ec0:	bl	13cfc <abort@plt+0x2f14>
   13ec4:	mov	r2, r4
   13ec8:	mov	r1, #0
   13ecc:	pop	{r4, lr}
   13ed0:	b	10d64 <memset@plt>
   13ed4:	push	{r4, r5, r6, lr}
   13ed8:	umull	r4, r5, r0, r1
   13edc:	adds	r3, r5, #0
   13ee0:	movne	r3, #1
   13ee4:	cmp	r4, #0
   13ee8:	blt	13f00 <abort@plt+0x3118>
   13eec:	cmp	r3, #0
   13ef0:	bne	13f00 <abort@plt+0x3118>
   13ef4:	bl	10bcc <calloc@plt>
   13ef8:	cmp	r0, #0
   13efc:	popne	{r4, r5, r6, pc}
   13f00:	bl	13f44 <abort@plt+0x315c>
   13f04:	push	{r4, r5, r6, lr}
   13f08:	mov	r4, r1
   13f0c:	mov	r5, r0
   13f10:	mov	r0, r1
   13f14:	bl	13cfc <abort@plt+0x2f14>
   13f18:	mov	r2, r4
   13f1c:	mov	r1, r5
   13f20:	pop	{r4, r5, r6, lr}
   13f24:	b	10c2c <memcpy@plt>
   13f28:	push	{r4, lr}
   13f2c:	mov	r4, r0
   13f30:	bl	10d40 <strlen@plt>
   13f34:	add	r1, r0, #1
   13f38:	mov	r0, r4
   13f3c:	pop	{r4, lr}
   13f40:	b	13f04 <abort@plt+0x311c>
   13f44:	ldr	r3, [pc, #44]	; 13f78 <abort@plt+0x3190>
   13f48:	push	{r4, lr}
   13f4c:	mov	r2, #5
   13f50:	ldr	r1, [pc, #36]	; 13f7c <abort@plt+0x3194>
   13f54:	mov	r0, #0
   13f58:	ldr	r4, [r3]
   13f5c:	bl	10c50 <dcgettext@plt>
   13f60:	ldr	r2, [pc, #24]	; 13f80 <abort@plt+0x3198>
   13f64:	mov	r1, #0
   13f68:	mov	r3, r0
   13f6c:	mov	r0, r4
   13f70:	bl	10cd4 <error@plt>
   13f74:	bl	10de8 <abort@plt>
   13f78:	ldrdeq	r5, [r2], -r4
   13f7c:	ldrdeq	r4, [r1], -ip
   13f80:	andeq	r4, r1, r0, ror #16
   13f84:	push	{r4, r5, r6, r7, r8, lr}
   13f88:	subs	r7, r0, #0
   13f8c:	ldr	r5, [pc, #108]	; 14000 <abort@plt+0x3218>
   13f90:	sub	sp, sp, #8
   13f94:	mov	r8, r1
   13f98:	ldr	r1, [r5]
   13f9c:	moveq	r7, sp
   13fa0:	str	r1, [sp, #4]
   13fa4:	mov	r0, r7
   13fa8:	mov	r1, r8
   13fac:	mov	r6, r2
   13fb0:	bl	10cc8 <mbrtowc@plt>
   13fb4:	cmp	r6, #0
   13fb8:	cmnne	r0, #3
   13fbc:	mov	r4, r0
   13fc0:	bhi	13fe0 <abort@plt+0x31f8>
   13fc4:	ldr	r2, [sp, #4]
   13fc8:	ldr	r3, [r5]
   13fcc:	mov	r0, r4
   13fd0:	cmp	r2, r3
   13fd4:	bne	13ffc <abort@plt+0x3214>
   13fd8:	add	sp, sp, #8
   13fdc:	pop	{r4, r5, r6, r7, r8, pc}
   13fe0:	mov	r0, #0
   13fe4:	bl	14078 <abort@plt+0x3290>
   13fe8:	cmp	r0, #0
   13fec:	moveq	r4, #1
   13ff0:	ldrbeq	r3, [r8]
   13ff4:	streq	r3, [r7]
   13ff8:	b	13fc4 <abort@plt+0x31dc>
   13ffc:	bl	10c5c <__stack_chk_fail@plt>
   14000:	andeq	r4, r2, r8, lsl #30
   14004:	push	{r4, r5, r6, lr}
   14008:	mov	r4, r0
   1400c:	bl	10cbc <__fpending@plt>
   14010:	ldr	r5, [r4]
   14014:	and	r5, r5, #32
   14018:	mov	r6, r0
   1401c:	mov	r0, r4
   14020:	bl	140f8 <abort@plt+0x3310>
   14024:	cmp	r5, #0
   14028:	mov	r4, r0
   1402c:	bne	14058 <abort@plt+0x3270>
   14030:	cmp	r0, #0
   14034:	beq	14050 <abort@plt+0x3268>
   14038:	cmp	r6, #0
   1403c:	bne	14070 <abort@plt+0x3288>
   14040:	bl	10d4c <__errno_location@plt>
   14044:	ldr	r4, [r0]
   14048:	subs	r4, r4, #9
   1404c:	mvnne	r4, #0
   14050:	mov	r0, r4
   14054:	pop	{r4, r5, r6, pc}
   14058:	cmp	r0, #0
   1405c:	bne	14070 <abort@plt+0x3288>
   14060:	bl	10d4c <__errno_location@plt>
   14064:	str	r4, [r0]
   14068:	mvn	r4, #0
   1406c:	b	14050 <abort@plt+0x3268>
   14070:	mvn	r4, #0
   14074:	b	14050 <abort@plt+0x3268>
   14078:	push	{r4, lr}
   1407c:	mov	r1, #0
   14080:	bl	10dac <setlocale@plt>
   14084:	subs	r4, r0, #0
   14088:	beq	140b4 <abort@plt+0x32cc>
   1408c:	ldr	r1, [pc, #40]	; 140bc <abort@plt+0x32d4>
   14090:	bl	10bf0 <strcmp@plt>
   14094:	cmp	r0, #0
   14098:	popeq	{r4, pc}
   1409c:	mov	r0, r4
   140a0:	ldr	r1, [pc, #24]	; 140c0 <abort@plt+0x32d8>
   140a4:	bl	10bf0 <strcmp@plt>
   140a8:	adds	r0, r0, #0
   140ac:	movne	r0, #1
   140b0:	pop	{r4, pc}
   140b4:	mov	r0, #1
   140b8:	pop	{r4, pc}
   140bc:	strdeq	r4, [r1], -r0
   140c0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140c4:	push	{r4, lr}
   140c8:	mov	r0, #14
   140cc:	bl	10dc4 <nl_langinfo@plt>
   140d0:	cmp	r0, #0
   140d4:	beq	140ec <abort@plt+0x3304>
   140d8:	ldrb	r2, [r0]
   140dc:	ldr	r3, [pc, #16]	; 140f4 <abort@plt+0x330c>
   140e0:	cmp	r2, #0
   140e4:	moveq	r0, r3
   140e8:	pop	{r4, pc}
   140ec:	ldr	r0, [pc]	; 140f4 <abort@plt+0x330c>
   140f0:	pop	{r4, pc}
   140f4:	strdeq	r4, [r1], -ip
   140f8:	push	{r4, r5, lr}
   140fc:	sub	sp, sp, #12
   14100:	mov	r4, r0
   14104:	bl	10d7c <fileno@plt>
   14108:	cmp	r0, #0
   1410c:	mov	r0, r4
   14110:	blt	1418c <abort@plt+0x33a4>
   14114:	bl	10d04 <__freading@plt>
   14118:	cmp	r0, #0
   1411c:	bne	14158 <abort@plt+0x3370>
   14120:	mov	r0, r4
   14124:	bl	14198 <abort@plt+0x33b0>
   14128:	cmp	r0, #0
   1412c:	beq	14188 <abort@plt+0x33a0>
   14130:	bl	10d4c <__errno_location@plt>
   14134:	mov	r5, r0
   14138:	mov	r0, r4
   1413c:	ldr	r4, [r5]
   14140:	bl	10d94 <fclose@plt>
   14144:	cmp	r4, #0
   14148:	mvnne	r0, #0
   1414c:	strne	r4, [r5]
   14150:	add	sp, sp, #12
   14154:	pop	{r4, r5, pc}
   14158:	mov	r0, r4
   1415c:	bl	10d7c <fileno@plt>
   14160:	mov	r3, #1
   14164:	str	r3, [sp]
   14168:	mov	r2, #0
   1416c:	mov	r3, #0
   14170:	bl	10ca4 <lseek64@plt>
   14174:	mvn	r3, #0
   14178:	mvn	r2, #0
   1417c:	cmp	r1, r3
   14180:	cmpeq	r0, r2
   14184:	bne	14120 <abort@plt+0x3338>
   14188:	mov	r0, r4
   1418c:	add	sp, sp, #12
   14190:	pop	{r4, r5, lr}
   14194:	b	10d94 <fclose@plt>
   14198:	push	{r4, lr}
   1419c:	subs	r4, r0, #0
   141a0:	sub	sp, sp, #8
   141a4:	beq	141c0 <abort@plt+0x33d8>
   141a8:	bl	10d04 <__freading@plt>
   141ac:	cmp	r0, #0
   141b0:	beq	141c0 <abort@plt+0x33d8>
   141b4:	ldr	r3, [r4]
   141b8:	tst	r3, #256	; 0x100
   141bc:	bne	141d0 <abort@plt+0x33e8>
   141c0:	mov	r0, r4
   141c4:	add	sp, sp, #8
   141c8:	pop	{r4, lr}
   141cc:	b	10c08 <fflush@plt>
   141d0:	mov	r3, #1
   141d4:	str	r3, [sp]
   141d8:	mov	r2, #0
   141dc:	mov	r3, #0
   141e0:	mov	r0, r4
   141e4:	bl	141f8 <abort@plt+0x3410>
   141e8:	mov	r0, r4
   141ec:	add	sp, sp, #8
   141f0:	pop	{r4, lr}
   141f4:	b	10c08 <fflush@plt>
   141f8:	push	{r4, r5, r6, r7, r8, lr}
   141fc:	sub	sp, sp, #8
   14200:	ldmib	r0, {ip, lr}
   14204:	mov	r4, r0
   14208:	ldr	r5, [sp, #32]
   1420c:	cmp	lr, ip
   14210:	beq	14228 <abort@plt+0x3440>
   14214:	str	r5, [sp, #32]
   14218:	mov	r0, r4
   1421c:	add	sp, sp, #8
   14220:	pop	{r4, r5, r6, r7, r8, lr}
   14224:	b	10da0 <fseeko64@plt>
   14228:	ldr	lr, [r0, #20]
   1422c:	ldr	ip, [r0, #16]
   14230:	cmp	lr, ip
   14234:	bne	14214 <abort@plt+0x342c>
   14238:	ldr	r8, [r0, #36]	; 0x24
   1423c:	cmp	r8, #0
   14240:	bne	14214 <abort@plt+0x342c>
   14244:	mov	r6, r2
   14248:	mov	r7, r3
   1424c:	bl	10d7c <fileno@plt>
   14250:	mov	r2, r6
   14254:	mov	r3, r7
   14258:	str	r5, [sp]
   1425c:	bl	10ca4 <lseek64@plt>
   14260:	mvn	r3, #0
   14264:	mvn	r2, #0
   14268:	cmp	r1, r3
   1426c:	cmpeq	r0, r2
   14270:	beq	14290 <abort@plt+0x34a8>
   14274:	ldr	r3, [r4]
   14278:	strd	r0, [r4, #80]	; 0x50
   1427c:	mov	r0, r8
   14280:	bic	r3, r3, #16
   14284:	str	r3, [r4]
   14288:	add	sp, sp, #8
   1428c:	pop	{r4, r5, r6, r7, r8, pc}
   14290:	mvn	r0, #0
   14294:	b	14288 <abort@plt+0x34a0>
   14298:	subs	r2, r1, #1
   1429c:	bxeq	lr
   142a0:	bcc	14478 <abort@plt+0x3690>
   142a4:	cmp	r0, r1
   142a8:	bls	1445c <abort@plt+0x3674>
   142ac:	tst	r1, r2
   142b0:	beq	14468 <abort@plt+0x3680>
   142b4:	clz	r3, r0
   142b8:	clz	r2, r1
   142bc:	sub	r3, r2, r3
   142c0:	rsbs	r3, r3, #31
   142c4:	addne	r3, r3, r3, lsl #1
   142c8:	mov	r2, #0
   142cc:	addne	pc, pc, r3, lsl #2
   142d0:	nop			; (mov r0, r0)
   142d4:	cmp	r0, r1, lsl #31
   142d8:	adc	r2, r2, r2
   142dc:	subcs	r0, r0, r1, lsl #31
   142e0:	cmp	r0, r1, lsl #30
   142e4:	adc	r2, r2, r2
   142e8:	subcs	r0, r0, r1, lsl #30
   142ec:	cmp	r0, r1, lsl #29
   142f0:	adc	r2, r2, r2
   142f4:	subcs	r0, r0, r1, lsl #29
   142f8:	cmp	r0, r1, lsl #28
   142fc:	adc	r2, r2, r2
   14300:	subcs	r0, r0, r1, lsl #28
   14304:	cmp	r0, r1, lsl #27
   14308:	adc	r2, r2, r2
   1430c:	subcs	r0, r0, r1, lsl #27
   14310:	cmp	r0, r1, lsl #26
   14314:	adc	r2, r2, r2
   14318:	subcs	r0, r0, r1, lsl #26
   1431c:	cmp	r0, r1, lsl #25
   14320:	adc	r2, r2, r2
   14324:	subcs	r0, r0, r1, lsl #25
   14328:	cmp	r0, r1, lsl #24
   1432c:	adc	r2, r2, r2
   14330:	subcs	r0, r0, r1, lsl #24
   14334:	cmp	r0, r1, lsl #23
   14338:	adc	r2, r2, r2
   1433c:	subcs	r0, r0, r1, lsl #23
   14340:	cmp	r0, r1, lsl #22
   14344:	adc	r2, r2, r2
   14348:	subcs	r0, r0, r1, lsl #22
   1434c:	cmp	r0, r1, lsl #21
   14350:	adc	r2, r2, r2
   14354:	subcs	r0, r0, r1, lsl #21
   14358:	cmp	r0, r1, lsl #20
   1435c:	adc	r2, r2, r2
   14360:	subcs	r0, r0, r1, lsl #20
   14364:	cmp	r0, r1, lsl #19
   14368:	adc	r2, r2, r2
   1436c:	subcs	r0, r0, r1, lsl #19
   14370:	cmp	r0, r1, lsl #18
   14374:	adc	r2, r2, r2
   14378:	subcs	r0, r0, r1, lsl #18
   1437c:	cmp	r0, r1, lsl #17
   14380:	adc	r2, r2, r2
   14384:	subcs	r0, r0, r1, lsl #17
   14388:	cmp	r0, r1, lsl #16
   1438c:	adc	r2, r2, r2
   14390:	subcs	r0, r0, r1, lsl #16
   14394:	cmp	r0, r1, lsl #15
   14398:	adc	r2, r2, r2
   1439c:	subcs	r0, r0, r1, lsl #15
   143a0:	cmp	r0, r1, lsl #14
   143a4:	adc	r2, r2, r2
   143a8:	subcs	r0, r0, r1, lsl #14
   143ac:	cmp	r0, r1, lsl #13
   143b0:	adc	r2, r2, r2
   143b4:	subcs	r0, r0, r1, lsl #13
   143b8:	cmp	r0, r1, lsl #12
   143bc:	adc	r2, r2, r2
   143c0:	subcs	r0, r0, r1, lsl #12
   143c4:	cmp	r0, r1, lsl #11
   143c8:	adc	r2, r2, r2
   143cc:	subcs	r0, r0, r1, lsl #11
   143d0:	cmp	r0, r1, lsl #10
   143d4:	adc	r2, r2, r2
   143d8:	subcs	r0, r0, r1, lsl #10
   143dc:	cmp	r0, r1, lsl #9
   143e0:	adc	r2, r2, r2
   143e4:	subcs	r0, r0, r1, lsl #9
   143e8:	cmp	r0, r1, lsl #8
   143ec:	adc	r2, r2, r2
   143f0:	subcs	r0, r0, r1, lsl #8
   143f4:	cmp	r0, r1, lsl #7
   143f8:	adc	r2, r2, r2
   143fc:	subcs	r0, r0, r1, lsl #7
   14400:	cmp	r0, r1, lsl #6
   14404:	adc	r2, r2, r2
   14408:	subcs	r0, r0, r1, lsl #6
   1440c:	cmp	r0, r1, lsl #5
   14410:	adc	r2, r2, r2
   14414:	subcs	r0, r0, r1, lsl #5
   14418:	cmp	r0, r1, lsl #4
   1441c:	adc	r2, r2, r2
   14420:	subcs	r0, r0, r1, lsl #4
   14424:	cmp	r0, r1, lsl #3
   14428:	adc	r2, r2, r2
   1442c:	subcs	r0, r0, r1, lsl #3
   14430:	cmp	r0, r1, lsl #2
   14434:	adc	r2, r2, r2
   14438:	subcs	r0, r0, r1, lsl #2
   1443c:	cmp	r0, r1, lsl #1
   14440:	adc	r2, r2, r2
   14444:	subcs	r0, r0, r1, lsl #1
   14448:	cmp	r0, r1
   1444c:	adc	r2, r2, r2
   14450:	subcs	r0, r0, r1
   14454:	mov	r0, r2
   14458:	bx	lr
   1445c:	moveq	r0, #1
   14460:	movne	r0, #0
   14464:	bx	lr
   14468:	clz	r2, r1
   1446c:	rsb	r2, r2, #31
   14470:	lsr	r0, r0, r2
   14474:	bx	lr
   14478:	cmp	r0, #0
   1447c:	mvnne	r0, #0
   14480:	b	144a4 <abort@plt+0x36bc>
   14484:	cmp	r1, #0
   14488:	beq	14478 <abort@plt+0x3690>
   1448c:	push	{r0, r1, lr}
   14490:	bl	14298 <abort@plt+0x34b0>
   14494:	pop	{r1, r2, lr}
   14498:	mul	r3, r2, r0
   1449c:	sub	r1, r1, r3
   144a0:	bx	lr
   144a4:	push	{r1, lr}
   144a8:	mov	r0, #8
   144ac:	bl	10be4 <raise@plt>
   144b0:	pop	{r1, pc}
   144b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144b8:	mov	r7, r0
   144bc:	ldr	r6, [pc, #72]	; 1450c <abort@plt+0x3724>
   144c0:	ldr	r5, [pc, #72]	; 14510 <abort@plt+0x3728>
   144c4:	add	r6, pc, r6
   144c8:	add	r5, pc, r5
   144cc:	sub	r6, r6, r5
   144d0:	mov	r8, r1
   144d4:	mov	r9, r2
   144d8:	bl	10bac <calloc@plt-0x20>
   144dc:	asrs	r6, r6, #2
   144e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144e4:	mov	r4, #0
   144e8:	add	r4, r4, #1
   144ec:	ldr	r3, [r5], #4
   144f0:	mov	r2, r9
   144f4:	mov	r1, r8
   144f8:	mov	r0, r7
   144fc:	blx	r3
   14500:	cmp	r6, r4
   14504:	bne	144e8 <abort@plt+0x3700>
   14508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1450c:	andeq	r0, r1, r8, lsr sl
   14510:	andeq	r0, r1, r0, lsr sl
   14514:	bx	lr
   14518:	ldr	r3, [pc, #12]	; 1452c <abort@plt+0x3744>
   1451c:	mov	r1, #0
   14520:	add	r3, pc, r3
   14524:	ldr	r2, [r3]
   14528:	b	10d58 <__cxa_atexit@plt>
   1452c:	andeq	r0, r1, r4, lsr #23

Disassembly of section .fini:

00014530 <.fini>:
   14530:	push	{r3, lr}
   14534:	pop	{r3, pc}
