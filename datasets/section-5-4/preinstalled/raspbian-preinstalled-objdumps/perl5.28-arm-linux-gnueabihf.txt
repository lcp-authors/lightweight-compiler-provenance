
raspbian-preinstalled/perl5.28-arm-linux-gnueabihf:     file format elf32-littlearm


Disassembly of section .init:

000108b4 <.init>:
   108b4:	push	{r3, lr}
   108b8:	bl	10b84 <_start@@Base+0x3c>
   108bc:	pop	{r3, pc}

Disassembly of section .plt:

000108c0 <perl_construct@plt-0x14>:
   108c0:	push	{lr}		; (str lr, [sp, #-4]!)
   108c4:	ldr	lr, [pc, #4]	; 108d0 <perl_construct@plt-0x4>
   108c8:	add	lr, pc, lr
   108cc:	ldr	pc, [lr, #8]!
   108d0:	andeq	r0, r1, r0, lsr r7

000108d4 <perl_construct@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #16, 20	; 0x10000
   108dc:	ldr	pc, [ip, #1840]!	; 0x730

000108e0 <perl_free@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #16, 20	; 0x10000
   108e8:	ldr	pc, [ip, #1832]!	; 0x728

000108ec <__register_atfork@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #16, 20	; 0x10000
   108f4:	ldr	pc, [ip, #1824]!	; 0x720

000108f8 <perl_destruct@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #16, 20	; 0x10000
   10900:	ldr	pc, [ip, #1816]!	; 0x718

00010904 <perl_alloc@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #16, 20	; 0x10000
   1090c:	ldr	pc, [ip, #1808]!	; 0x710

00010910 <__libc_start_main@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #16, 20	; 0x10000
   10918:	ldr	pc, [ip, #1800]!	; 0x708

0001091c <__gmon_start__@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #16, 20	; 0x10000
   10924:	ldr	pc, [ip, #1792]!	; 0x700

00010928 <exit@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #16, 20	; 0x10000
   10930:	ldr	pc, [ip, #1784]!	; 0x6f8

00010934 <Perl_sys_init3@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #16, 20	; 0x10000
   1093c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010940 <Perl_newXS@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #16, 20	; 0x10000
   10948:	ldr	pc, [ip, #1768]!	; 0x6e8

0001094c <Perl_sys_term@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #16, 20	; 0x10000
   10954:	ldr	pc, [ip, #1760]!	; 0x6e0

00010958 <perl_parse@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #16, 20	; 0x10000
   10960:	ldr	pc, [ip, #1752]!	; 0x6d8

00010964 <Perl_rsignal_state@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #16, 20	; 0x10000
   1096c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010970 <perl_run@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #16, 20	; 0x10000
   10978:	ldr	pc, [ip, #1736]!	; 0x6c8

0001097c <abort@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #16, 20	; 0x10000
   10984:	ldr	pc, [ip, #1728]!	; 0x6c0

00010988 <Perl_rsignal@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #16, 20	; 0x10000
   10990:	ldr	pc, [ip, #1720]!	; 0x6b8

Disassembly of section .text:

00010994 <main@@Base>:
   10994:	push	{r4, r5, r6, r7, r8, lr}
   10998:	sub	sp, sp, #24
   1099c:	ldr	r5, [pc, #368]	; 10b14 <main@@Base+0x180>
   109a0:	ldr	r3, [pc, #368]	; 10b18 <main@@Base+0x184>
   109a4:	add	r5, pc, r5
   109a8:	str	r0, [sp, #20]
   109ac:	str	r1, [sp, #16]
   109b0:	str	r2, [sp, #12]
   109b4:	ldr	r3, [r5, r3]
   109b8:	mov	ip, #0
   109bc:	add	r2, sp, #12
   109c0:	add	r1, sp, #16
   109c4:	add	r0, sp, #20
   109c8:	strb	ip, [r3]
   109cc:	bl	10934 <Perl_sys_init3@plt>
   109d0:	ldr	r2, [pc, #324]	; 10b1c <main@@Base+0x188>
   109d4:	ldr	r3, [pc, #324]	; 10b20 <main@@Base+0x18c>
   109d8:	ldr	r2, [r5, r2]
   109dc:	ldr	r0, [r5, r3]
   109e0:	mov	r1, r2
   109e4:	bl	10cd0 <__libc_csu_fini@@Base+0x4>
   109e8:	ldr	r3, [pc, #308]	; 10b24 <main@@Base+0x190>
   109ec:	ldr	r3, [r5, r3]
   109f0:	ldrb	r4, [r3]
   109f4:	cmp	r4, #0
   109f8:	bne	10a20 <main@@Base+0x8c>
   109fc:	bl	10904 <perl_alloc@plt>
   10a00:	ldr	r6, [pc, #288]	; 10b28 <main@@Base+0x194>
   10a04:	add	r6, pc, r6
   10a08:	cmp	r0, #0
   10a0c:	str	r0, [r6]
   10a10:	beq	10b0c <main@@Base+0x178>
   10a14:	bl	108d4 <perl_construct@plt>
   10a18:	ldr	r3, [r6]
   10a1c:	strb	r4, [r3, #1905]	; 0x771
   10a20:	ldr	r4, [pc, #260]	; 10b2c <main@@Base+0x198>
   10a24:	mov	lr, #0
   10a28:	add	r4, pc, r4
   10a2c:	ldr	r3, [sp, #16]
   10a30:	ldr	r1, [r4]
   10a34:	ldr	r2, [sp, #20]
   10a38:	mov	r0, r1
   10a3c:	ldrb	ip, [r1, #966]	; 0x3c6
   10a40:	orr	ip, ip, #2
   10a44:	strb	ip, [r1, #966]	; 0x3c6
   10a48:	ldr	r1, [pc, #224]	; 10b30 <main@@Base+0x19c>
   10a4c:	str	lr, [sp]
   10a50:	add	r1, pc, r1
   10a54:	bl	10958 <perl_parse@plt>
   10a58:	cmp	r0, #0
   10a5c:	beq	10b00 <main@@Base+0x16c>
   10a60:	ldr	r3, [pc, #204]	; 10b34 <main@@Base+0x1a0>
   10a64:	ldr	r4, [r5, r3]
   10a68:	ldr	r3, [r4, #4]
   10a6c:	cmp	r3, #0
   10a70:	beq	10ad8 <main@@Base+0x144>
   10a74:	ldr	r2, [pc, #188]	; 10b38 <main@@Base+0x1a4>
   10a78:	ldr	r3, [pc, #188]	; 10b3c <main@@Base+0x1a8>
   10a7c:	ldr	r7, [pc, #188]	; 10b40 <main@@Base+0x1ac>
   10a80:	ldr	r6, [r5, r2]
   10a84:	add	r7, pc, r7
   10a88:	ldr	r8, [r5, r3]
   10a8c:	add	r4, r4, #4
   10a90:	b	10aa0 <main@@Base+0x10c>
   10a94:	ldr	r3, [r4, #4]!
   10a98:	cmp	r3, #0
   10a9c:	beq	10ad8 <main@@Base+0x144>
   10aa0:	ldr	r5, [r6, #4]!
   10aa4:	ldr	r0, [r7]
   10aa8:	mov	r1, r5
   10aac:	bl	10964 <Perl_rsignal_state@plt>
   10ab0:	ldr	r3, [r8]
   10ab4:	cmp	r3, r0
   10ab8:	bne	10a94 <main@@Base+0x100>
   10abc:	mov	r1, r5
   10ac0:	mov	r2, #0
   10ac4:	ldr	r0, [r7]
   10ac8:	bl	10988 <Perl_rsignal@plt>
   10acc:	ldr	r3, [r4, #4]!
   10ad0:	cmp	r3, #0
   10ad4:	bne	10aa0 <main@@Base+0x10c>
   10ad8:	ldr	r4, [pc, #100]	; 10b44 <main@@Base+0x1b0>
   10adc:	add	r4, pc, r4
   10ae0:	ldr	r0, [r4]
   10ae4:	bl	108f8 <perl_destruct@plt>
   10ae8:	mov	r5, r0
   10aec:	ldr	r0, [r4]
   10af0:	bl	108e0 <perl_free@plt>
   10af4:	bl	1094c <Perl_sys_term@plt>
   10af8:	mov	r0, r5
   10afc:	bl	10928 <exit@plt>
   10b00:	ldr	r0, [r4]
   10b04:	bl	10970 <perl_run@plt>
   10b08:	b	10a60 <main@@Base+0xcc>
   10b0c:	mov	r0, #1
   10b10:	bl	10928 <exit@plt>
   10b14:	andeq	r0, r1, r4, asr r6
   10b18:	andeq	r0, r0, r0, rrx
   10b1c:	andeq	r0, r0, r4, rrx
   10b20:	andeq	r0, r0, ip, rrx
   10b24:	andeq	r0, r0, r0, asr r0
   10b28:	andeq	r0, r1, r0, ror r6
   10b2c:	andeq	r0, r1, ip, asr #12
   10b30:	andeq	r0, r0, r0, ror #3
   10b34:	andeq	r0, r0, ip, asr r0
   10b38:	andeq	r0, r0, r4, asr r0
   10b3c:	andeq	r0, r0, r8, rrx
   10b40:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10b44:	muleq	r1, r8, r5

00010b48 <_start@@Base>:
   10b48:	mov	fp, #0
   10b4c:	mov	lr, #0
   10b50:	pop	{r1}		; (ldr r1, [sp], #4)
   10b54:	mov	r2, sp
   10b58:	push	{r2}		; (str r2, [sp, #-4]!)
   10b5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b60:	ldr	ip, [pc, #16]	; 10b78 <_start@@Base+0x30>
   10b64:	push	{ip}		; (str ip, [sp, #-4]!)
   10b68:	ldr	r0, [pc, #12]	; 10b7c <_start@@Base+0x34>
   10b6c:	ldr	r3, [pc, #12]	; 10b80 <_start@@Base+0x38>
   10b70:	bl	10910 <__libc_start_main@plt>
   10b74:	bl	1097c <abort@plt>
   10b78:	andeq	r0, r1, ip, asr #25
   10b7c:	muleq	r1, r4, r9
   10b80:	andeq	r0, r1, ip, ror #24
   10b84:	ldr	r3, [pc, #20]	; 10ba0 <_start@@Base+0x58>
   10b88:	ldr	r2, [pc, #20]	; 10ba4 <_start@@Base+0x5c>
   10b8c:	add	r3, pc, r3
   10b90:	ldr	r2, [r3, r2]
   10b94:	cmp	r2, #0
   10b98:	bxeq	lr
   10b9c:	b	1091c <__gmon_start__@plt>
   10ba0:	andeq	r0, r1, ip, ror #8
   10ba4:	andeq	r0, r0, r8, asr r0
   10ba8:	ldr	r0, [pc, #24]	; 10bc8 <_start@@Base+0x80>
   10bac:	ldr	r3, [pc, #24]	; 10bcc <_start@@Base+0x84>
   10bb0:	cmp	r3, r0
   10bb4:	bxeq	lr
   10bb8:	ldr	r3, [pc, #16]	; 10bd0 <_start@@Base+0x88>
   10bbc:	cmp	r3, #0
   10bc0:	bxeq	lr
   10bc4:	bx	r3
   10bc8:	andeq	r1, r2, r8, ror r0
   10bcc:	andeq	r1, r2, r8, ror r0
   10bd0:	andeq	r0, r0, r0
   10bd4:	ldr	r0, [pc, #36]	; 10c00 <_start@@Base+0xb8>
   10bd8:	ldr	r1, [pc, #36]	; 10c04 <_start@@Base+0xbc>
   10bdc:	sub	r1, r1, r0
   10be0:	asr	r1, r1, #2
   10be4:	add	r1, r1, r1, lsr #31
   10be8:	asrs	r1, r1, #1
   10bec:	bxeq	lr
   10bf0:	ldr	r3, [pc, #16]	; 10c08 <_start@@Base+0xc0>
   10bf4:	cmp	r3, #0
   10bf8:	bxeq	lr
   10bfc:	bx	r3
   10c00:	andeq	r1, r2, r8, ror r0
   10c04:	andeq	r1, r2, r8, ror r0
   10c08:	andeq	r0, r0, r0
   10c0c:	push	{r4, lr}
   10c10:	ldr	r4, [pc, #24]	; 10c30 <_start@@Base+0xe8>
   10c14:	ldrb	r3, [r4]
   10c18:	cmp	r3, #0
   10c1c:	popne	{r4, pc}
   10c20:	bl	10ba8 <_start@@Base+0x60>
   10c24:	mov	r3, #1
   10c28:	strb	r3, [r4]
   10c2c:	pop	{r4, pc}
   10c30:	andeq	r1, r2, r8, ror r0
   10c34:	b	10bd4 <_start@@Base+0x8c>
   10c38:	ldr	ip, [pc, #28]	; 10c5c <_start@@Base+0x114>
   10c3c:	ldr	r2, [pc, #28]	; 10c60 <_start@@Base+0x118>
   10c40:	add	ip, pc, ip
   10c44:	ldr	r3, [pc, #24]	; 10c64 <_start@@Base+0x11c>
   10c48:	ldr	r1, [pc, #24]	; 10c68 <_start@@Base+0x120>
   10c4c:	add	r3, pc, r3
   10c50:	add	r1, pc, r1
   10c54:	ldr	r2, [ip, r2]
   10c58:	b	10940 <Perl_newXS@plt>
   10c5c:			; <UNDEFINED> instruction: 0x000103b8
   10c60:	andeq	r0, r0, ip, asr #32
   10c64:	muleq	r0, ip, r0
   10c68:	andeq	r0, r0, r4, lsr #1

00010c6c <__libc_csu_init@@Base>:
   10c6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c70:	mov	r7, r0
   10c74:	ldr	r6, [pc, #72]	; 10cc4 <__libc_csu_init@@Base+0x58>
   10c78:	ldr	r5, [pc, #72]	; 10cc8 <__libc_csu_init@@Base+0x5c>
   10c7c:	add	r6, pc, r6
   10c80:	add	r5, pc, r5
   10c84:	sub	r6, r6, r5
   10c88:	mov	r8, r1
   10c8c:	mov	r9, r2
   10c90:	bl	108b4 <perl_construct@plt-0x20>
   10c94:	asrs	r6, r6, #2
   10c98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c9c:	mov	r4, #0
   10ca0:	add	r4, r4, #1
   10ca4:	ldr	r3, [r5], #4
   10ca8:	mov	r2, r9
   10cac:	mov	r1, r8
   10cb0:	mov	r0, r7
   10cb4:	blx	r3
   10cb8:	cmp	r6, r4
   10cbc:	bne	10ca0 <__libc_csu_init@@Base+0x34>
   10cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cc4:	andeq	r0, r1, r8, ror #4
   10cc8:	andeq	r0, r1, r0, ror #4

00010ccc <__libc_csu_fini@@Base>:
   10ccc:	bx	lr
   10cd0:	ldr	r3, [pc, #8]	; 10ce0 <__libc_csu_fini@@Base+0x14>
   10cd4:	add	r3, pc, r3
   10cd8:	ldr	r3, [r3]
   10cdc:	b	108ec <__register_atfork@plt>
   10ce0:	muleq	r1, r8, r3

Disassembly of section .fini:

00010ce4 <.fini>:
   10ce4:	push	{r3, lr}
   10ce8:	pop	{r3, pc}
